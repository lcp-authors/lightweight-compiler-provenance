
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-logind_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406f58 <_init>:
  406f58:	stp	x29, x30, [sp, #-16]!
  406f5c:	mov	x29, sp
  406f60:	bl	408480 <call_weak_fn>
  406f64:	ldp	x29, x30, [sp], #16
  406f68:	ret

Disassembly of section .plt:

0000000000406f70 <.plt>:
  406f70:	stp	x16, x30, [sp, #-16]!
  406f74:	adrp	x16, 460000 <wordlist.10364+0x370>
  406f78:	ldr	x17, [x16, #1360]
  406f7c:	add	x16, x16, #0x550
  406f80:	br	x17
  406f84:	nop
  406f88:	nop
  406f8c:	nop

0000000000406f90 <internal_hashmap_remove@plt>:
  406f90:	adrp	x16, 460000 <wordlist.10364+0x370>
  406f94:	ldr	x17, [x16, #1368]
  406f98:	add	x16, x16, #0x558
  406f9c:	br	x17

0000000000406fa0 <sd_event_run@plt>:
  406fa0:	adrp	x16, 460000 <wordlist.10364+0x370>
  406fa4:	ldr	x17, [x16, #1376]
  406fa8:	add	x16, x16, #0x560
  406fac:	br	x17

0000000000406fb0 <sd_bus_creds_get_pid@plt>:
  406fb0:	adrp	x16, 460000 <wordlist.10364+0x370>
  406fb4:	ldr	x17, [x16, #1384]
  406fb8:	add	x16, x16, #0x568
  406fbc:	br	x17

0000000000406fc0 <safe_fclose@plt>:
  406fc0:	adrp	x16, 460000 <wordlist.10364+0x370>
  406fc4:	ldr	x17, [x16, #1392]
  406fc8:	add	x16, x16, #0x570
  406fcc:	br	x17

0000000000406fd0 <sd_device_get_property_value@plt>:
  406fd0:	adrp	x16, 460000 <wordlist.10364+0x370>
  406fd4:	ldr	x17, [x16, #1400]
  406fd8:	add	x16, x16, #0x578
  406fdc:	br	x17

0000000000406fe0 <sd_bus_creds_get_euid@plt>:
  406fe0:	adrp	x16, 460000 <wordlist.10364+0x370>
  406fe4:	ldr	x17, [x16, #1408]
  406fe8:	add	x16, x16, #0x580
  406fec:	br	x17

0000000000406ff0 <bus_label_escape@plt>:
  406ff0:	adrp	x16, 460000 <wordlist.10364+0x370>
  406ff4:	ldr	x17, [x16, #1416]
  406ff8:	add	x16, x16, #0x588
  406ffc:	br	x17

0000000000407000 <bus_error_message@plt>:
  407000:	adrp	x16, 460000 <wordlist.10364+0x370>
  407004:	ldr	x17, [x16, #1424]
  407008:	add	x16, x16, #0x590
  40700c:	br	x17

0000000000407010 <sd_event_add_post@plt>:
  407010:	adrp	x16, 460000 <wordlist.10364+0x370>
  407014:	ldr	x17, [x16, #1432]
  407018:	add	x16, x16, #0x598
  40701c:	br	x17

0000000000407020 <sd_device_monitor_new@plt>:
  407020:	adrp	x16, 460000 <wordlist.10364+0x370>
  407024:	ldr	x17, [x16, #1440]
  407028:	add	x16, x16, #0x5a0
  40702c:	br	x17

0000000000407030 <unit_dbus_path_from_name@plt>:
  407030:	adrp	x16, 460000 <wordlist.10364+0x370>
  407034:	ldr	x17, [x16, #1448]
  407038:	add	x16, x16, #0x5a8
  40703c:	br	x17

0000000000407040 <sd_pid_notify_with_fds@plt>:
  407040:	adrp	x16, 460000 <wordlist.10364+0x370>
  407044:	ldr	x17, [x16, #1456]
  407048:	add	x16, x16, #0x5b0
  40704c:	br	x17

0000000000407050 <__libc_current_sigrtmax@plt>:
  407050:	adrp	x16, 460000 <wordlist.10364+0x370>
  407054:	ldr	x17, [x16, #1464]
  407058:	add	x16, x16, #0x5b8
  40705c:	br	x17

0000000000407060 <sd_bus_message_new_method_call@plt>:
  407060:	adrp	x16, 460000 <wordlist.10364+0x370>
  407064:	ldr	x17, [x16, #1472]
  407068:	add	x16, x16, #0x5c0
  40706c:	br	x17

0000000000407070 <sd_bus_creds_get_uid@plt>:
  407070:	adrp	x16, 460000 <wordlist.10364+0x370>
  407074:	ldr	x17, [x16, #1480]
  407078:	add	x16, x16, #0x5c8
  40707c:	br	x17

0000000000407080 <sd_bus_error_is_set@plt>:
  407080:	adrp	x16, 460000 <wordlist.10364+0x370>
  407084:	ldr	x17, [x16, #1488]
  407088:	add	x16, x16, #0x5d0
  40708c:	br	x17

0000000000407090 <filename_is_valid@plt>:
  407090:	adrp	x16, 460000 <wordlist.10364+0x370>
  407094:	ldr	x17, [x16, #1496]
  407098:	add	x16, x16, #0x5d8
  40709c:	br	x17

00000000004070a0 <dual_timestamp_get@plt>:
  4070a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4070a4:	ldr	x17, [x16, #1504]
  4070a8:	add	x16, x16, #0x5e0
  4070ac:	br	x17

00000000004070b0 <sd_event_source_set_time@plt>:
  4070b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4070b4:	ldr	x17, [x16, #1512]
  4070b8:	add	x16, x16, #0x5e8
  4070bc:	br	x17

00000000004070c0 <unlink@plt>:
  4070c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4070c4:	ldr	x17, [x16, #1520]
  4070c8:	add	x16, x16, #0x5f0
  4070cc:	br	x17

00000000004070d0 <internal_hashmap_free@plt>:
  4070d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4070d4:	ldr	x17, [x16, #1528]
  4070d8:	add	x16, x16, #0x5f8
  4070dc:	br	x17

00000000004070e0 <sd_bus_reply_method_return@plt>:
  4070e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4070e4:	ldr	x17, [x16, #1536]
  4070e8:	add	x16, x16, #0x600
  4070ec:	br	x17

00000000004070f0 <strcspn@plt>:
  4070f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4070f4:	ldr	x17, [x16, #1544]
  4070f8:	add	x16, x16, #0x608
  4070fc:	br	x17

0000000000407100 <internal_set_ensure_allocated@plt>:
  407100:	adrp	x16, 460000 <wordlist.10364+0x370>
  407104:	ldr	x17, [x16, #1552]
  407108:	add	x16, x16, #0x610
  40710c:	br	x17

0000000000407110 <strcmp_ptr@plt>:
  407110:	adrp	x16, 460000 <wordlist.10364+0x370>
  407114:	ldr	x17, [x16, #1560]
  407118:	add	x16, x16, #0x618
  40711c:	br	x17

0000000000407120 <sd_device_monitor_attach_event@plt>:
  407120:	adrp	x16, 460000 <wordlist.10364+0x370>
  407124:	ldr	x17, [x16, #1568]
  407128:	add	x16, x16, #0x620
  40712c:	br	x17

0000000000407130 <sd_device_get_parent_with_subsystem_devtype@plt>:
  407130:	adrp	x16, 460000 <wordlist.10364+0x370>
  407134:	ldr	x17, [x16, #1576]
  407138:	add	x16, x16, #0x628
  40713c:	br	x17

0000000000407140 <utmpxname@plt>:
  407140:	adrp	x16, 460000 <wordlist.10364+0x370>
  407144:	ldr	x17, [x16, #1584]
  407148:	add	x16, x16, #0x630
  40714c:	br	x17

0000000000407150 <fchmod@plt>:
  407150:	adrp	x16, 460000 <wordlist.10364+0x370>
  407154:	ldr	x17, [x16, #1592]
  407158:	add	x16, x16, #0x638
  40715c:	br	x17

0000000000407160 <stpcpy@plt>:
  407160:	adrp	x16, 460000 <wordlist.10364+0x370>
  407164:	ldr	x17, [x16, #1600]
  407168:	add	x16, x16, #0x640
  40716c:	br	x17

0000000000407170 <sd_event_add_child@plt>:
  407170:	adrp	x16, 460000 <wordlist.10364+0x370>
  407174:	ldr	x17, [x16, #1608]
  407178:	add	x16, x16, #0x648
  40717c:	br	x17

0000000000407180 <mac_selinux_init@plt>:
  407180:	adrp	x16, 460000 <wordlist.10364+0x370>
  407184:	ldr	x17, [x16, #1616]
  407188:	add	x16, x16, #0x650
  40718c:	br	x17

0000000000407190 <sd_bus_track_new@plt>:
  407190:	adrp	x16, 460000 <wordlist.10364+0x370>
  407194:	ldr	x17, [x16, #1624]
  407198:	add	x16, x16, #0x658
  40719c:	br	x17

00000000004071a0 <__libc_start_main@plt>:
  4071a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4071a4:	ldr	x17, [x16, #1632]
  4071a8:	add	x16, x16, #0x660
  4071ac:	br	x17

00000000004071b0 <unit_name_build@plt>:
  4071b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4071b4:	ldr	x17, [x16, #1640]
  4071b8:	add	x16, x16, #0x668
  4071bc:	br	x17

00000000004071c0 <sd_event_set_watchdog@plt>:
  4071c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4071c4:	ldr	x17, [x16, #1648]
  4071c8:	add	x16, x16, #0x670
  4071cc:	br	x17

00000000004071d0 <lseek64@plt>:
  4071d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4071d4:	ldr	x17, [x16, #1656]
  4071d8:	add	x16, x16, #0x678
  4071dc:	br	x17

00000000004071e0 <format_timespan@plt>:
  4071e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4071e4:	ldr	x17, [x16, #1664]
  4071e8:	add	x16, x16, #0x680
  4071ec:	br	x17

00000000004071f0 <sd_device_monitor_start@plt>:
  4071f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4071f4:	ldr	x17, [x16, #1672]
  4071f8:	add	x16, x16, #0x688
  4071fc:	br	x17

0000000000407200 <sd_event_source_get_time@plt>:
  407200:	adrp	x16, 460000 <wordlist.10364+0x370>
  407204:	ldr	x17, [x16, #1680]
  407208:	add	x16, x16, #0x690
  40720c:	br	x17

0000000000407210 <safe_atollu@plt>:
  407210:	adrp	x16, 460000 <wordlist.10364+0x370>
  407214:	ldr	x17, [x16, #1688]
  407218:	add	x16, x16, #0x698
  40721c:	br	x17

0000000000407220 <greedy_realloc0@plt>:
  407220:	adrp	x16, 460000 <wordlist.10364+0x370>
  407224:	ldr	x17, [x16, #1696]
  407228:	add	x16, x16, #0x6a0
  40722c:	br	x17

0000000000407230 <boot_entries_augment_from_loader@plt>:
  407230:	adrp	x16, 460000 <wordlist.10364+0x370>
  407234:	ldr	x17, [x16, #1704]
  407238:	add	x16, x16, #0x6a8
  40723c:	br	x17

0000000000407240 <sd_bus_message_unref@plt>:
  407240:	adrp	x16, 460000 <wordlist.10364+0x370>
  407244:	ldr	x17, [x16, #1712]
  407248:	add	x16, x16, #0x6b0
  40724c:	br	x17

0000000000407250 <efi_get_variable_string@plt>:
  407250:	adrp	x16, 460000 <wordlist.10364+0x370>
  407254:	ldr	x17, [x16, #1720]
  407258:	add	x16, x16, #0x6b8
  40725c:	br	x17

0000000000407260 <sd_bus_message_enter_container@plt>:
  407260:	adrp	x16, 460000 <wordlist.10364+0x370>
  407264:	ldr	x17, [x16, #1728]
  407268:	add	x16, x16, #0x6c0
  40726c:	br	x17

0000000000407270 <cg_pid_get_slice@plt>:
  407270:	adrp	x16, 460000 <wordlist.10364+0x370>
  407274:	ldr	x17, [x16, #1736]
  407278:	add	x16, x16, #0x6c8
  40727c:	br	x17

0000000000407280 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>:
  407280:	adrp	x16, 460000 <wordlist.10364+0x370>
  407284:	ldr	x17, [x16, #1744]
  407288:	add	x16, x16, #0x6d0
  40728c:	br	x17

0000000000407290 <parse_boolean@plt>:
  407290:	adrp	x16, 460000 <wordlist.10364+0x370>
  407294:	ldr	x17, [x16, #1752]
  407298:	add	x16, x16, #0x6d8
  40729c:	br	x17

00000000004072a0 <sd_bus_request_name_async@plt>:
  4072a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4072a4:	ldr	x17, [x16, #1760]
  4072a8:	add	x16, x16, #0x6e0
  4072ac:	br	x17

00000000004072b0 <config_parse_sec@plt>:
  4072b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4072b4:	ldr	x17, [x16, #1768]
  4072b8:	add	x16, x16, #0x6e8
  4072bc:	br	x17

00000000004072c0 <sd_device_enumerator_new@plt>:
  4072c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4072c4:	ldr	x17, [x16, #1776]
  4072c8:	add	x16, x16, #0x6f0
  4072cc:	br	x17

00000000004072d0 <efi_set_variable@plt>:
  4072d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4072d4:	ldr	x17, [x16, #1784]
  4072d8:	add	x16, x16, #0x6f8
  4072dc:	br	x17

00000000004072e0 <sd_bus_creds_unref@plt>:
  4072e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4072e4:	ldr	x17, [x16, #1792]
  4072e8:	add	x16, x16, #0x700
  4072ec:	br	x17

00000000004072f0 <sd_bus_creds_get_session@plt>:
  4072f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4072f4:	ldr	x17, [x16, #1800]
  4072f8:	add	x16, x16, #0x708
  4072fc:	br	x17

0000000000407300 <fileno@plt>:
  407300:	adrp	x16, 460000 <wordlist.10364+0x370>
  407304:	ldr	x17, [x16, #1808]
  407308:	add	x16, x16, #0x710
  40730c:	br	x17

0000000000407310 <__gmon_start__@plt>:
  407310:	adrp	x16, 460000 <wordlist.10364+0x370>
  407314:	ldr	x17, [x16, #1816]
  407318:	add	x16, x16, #0x718
  40731c:	br	x17

0000000000407320 <cescape@plt>:
  407320:	adrp	x16, 460000 <wordlist.10364+0x370>
  407324:	ldr	x17, [x16, #1824]
  407328:	add	x16, x16, #0x720
  40732c:	br	x17

0000000000407330 <sd_bus_error_set_errnof@plt>:
  407330:	adrp	x16, 460000 <wordlist.10364+0x370>
  407334:	ldr	x17, [x16, #1832]
  407338:	add	x16, x16, #0x728
  40733c:	br	x17

0000000000407340 <sd_device_get_devname@plt>:
  407340:	adrp	x16, 460000 <wordlist.10364+0x370>
  407344:	ldr	x17, [x16, #1840]
  407348:	add	x16, x16, #0x730
  40734c:	br	x17

0000000000407350 <internal_hashmap_contains@plt>:
  407350:	adrp	x16, 460000 <wordlist.10364+0x370>
  407354:	ldr	x17, [x16, #1848]
  407358:	add	x16, x16, #0x738
  40735c:	br	x17

0000000000407360 <write_string_file_ts@plt>:
  407360:	adrp	x16, 460000 <wordlist.10364+0x370>
  407364:	ldr	x17, [x16, #1856]
  407368:	add	x16, x16, #0x740
  40736c:	br	x17

0000000000407370 <rename@plt>:
  407370:	adrp	x16, 460000 <wordlist.10364+0x370>
  407374:	ldr	x17, [x16, #1864]
  407378:	add	x16, x16, #0x748
  40737c:	br	x17

0000000000407380 <polkit_agent_close@plt>:
  407380:	adrp	x16, 460000 <wordlist.10364+0x370>
  407384:	ldr	x17, [x16, #1872]
  407388:	add	x16, x16, #0x750
  40738c:	br	x17

0000000000407390 <set_consume@plt>:
  407390:	adrp	x16, 460000 <wordlist.10364+0x370>
  407394:	ldr	x17, [x16, #1880]
  407398:	add	x16, x16, #0x758
  40739c:	br	x17

00000000004073a0 <sd_device_enumerator_add_match_subsystem@plt>:
  4073a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4073a4:	ldr	x17, [x16, #1888]
  4073a8:	add	x16, x16, #0x760
  4073ac:	br	x17

00000000004073b0 <acl_get_permset@plt>:
  4073b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4073b4:	ldr	x17, [x16, #1896]
  4073b8:	add	x16, x16, #0x768
  4073bc:	br	x17

00000000004073c0 <sd_event_default@plt>:
  4073c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4073c4:	ldr	x17, [x16, #1904]
  4073c8:	add	x16, x16, #0x770
  4073cc:	br	x17

00000000004073d0 <strv_split_full@plt>:
  4073d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4073d4:	ldr	x17, [x16, #1912]
  4073d8:	add	x16, x16, #0x778
  4073dc:	br	x17

00000000004073e0 <sd_bus_message_new_method_return@plt>:
  4073e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4073e4:	ldr	x17, [x16, #1920]
  4073e8:	add	x16, x16, #0x780
  4073ec:	br	x17

00000000004073f0 <parse_size@plt>:
  4073f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4073f4:	ldr	x17, [x16, #1928]
  4073f8:	add	x16, x16, #0x788
  4073fc:	br	x17

0000000000407400 <free_and_strdup@plt>:
  407400:	adrp	x16, 460000 <wordlist.10364+0x370>
  407404:	ldr	x17, [x16, #1936]
  407408:	add	x16, x16, #0x790
  40740c:	br	x17

0000000000407410 <hidden_or_backup_file@plt>:
  407410:	adrp	x16, 460000 <wordlist.10364+0x370>
  407414:	ldr	x17, [x16, #1944]
  407418:	add	x16, x16, #0x798
  40741c:	br	x17

0000000000407420 <getpwuid@plt>:
  407420:	adrp	x16, 460000 <wordlist.10364+0x370>
  407424:	ldr	x17, [x16, #1952]
  407428:	add	x16, x16, #0x7a0
  40742c:	br	x17

0000000000407430 <create_shutdown_run_nologin_or_warn@plt>:
  407430:	adrp	x16, 460000 <wordlist.10364+0x370>
  407434:	ldr	x17, [x16, #1960]
  407438:	add	x16, x16, #0x7a8
  40743c:	br	x17

0000000000407440 <bus_verify_polkit_async_registry_free@plt>:
  407440:	adrp	x16, 460000 <wordlist.10364+0x370>
  407444:	ldr	x17, [x16, #1968]
  407448:	add	x16, x16, #0x7b0
  40744c:	br	x17

0000000000407450 <device_for_action@plt>:
  407450:	adrp	x16, 460000 <wordlist.10364+0x370>
  407454:	ldr	x17, [x16, #1976]
  407458:	add	x16, x16, #0x7b8
  40745c:	br	x17

0000000000407460 <snprintf@plt>:
  407460:	adrp	x16, 460000 <wordlist.10364+0x370>
  407464:	ldr	x17, [x16, #1984]
  407468:	add	x16, x16, #0x7c0
  40746c:	br	x17

0000000000407470 <sd_device_enumerator_get_device_first@plt>:
  407470:	adrp	x16, 460000 <wordlist.10364+0x370>
  407474:	ldr	x17, [x16, #1992]
  407478:	add	x16, x16, #0x7c8
  40747c:	br	x17

0000000000407480 <getutxent@plt>:
  407480:	adrp	x16, 460000 <wordlist.10364+0x370>
  407484:	ldr	x17, [x16, #2000]
  407488:	add	x16, x16, #0x7d0
  40748c:	br	x17

0000000000407490 <sd_bus_message_open_container@plt>:
  407490:	adrp	x16, 460000 <wordlist.10364+0x370>
  407494:	ldr	x17, [x16, #2008]
  407498:	add	x16, x16, #0x7d8
  40749c:	br	x17

00000000004074a0 <clean_ipc_by_uid@plt>:
  4074a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4074a4:	ldr	x17, [x16, #2016]
  4074a8:	add	x16, x16, #0x7e0
  4074ac:	br	x17

00000000004074b0 <getpid_cached@plt>:
  4074b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4074b4:	ldr	x17, [x16, #2024]
  4074b8:	add	x16, x16, #0x7e8
  4074bc:	br	x17

00000000004074c0 <fprintf@plt>:
  4074c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4074c4:	ldr	x17, [x16, #2032]
  4074c8:	add	x16, x16, #0x7f0
  4074cc:	br	x17

00000000004074d0 <sd_event_add_time@plt>:
  4074d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4074d4:	ldr	x17, [x16, #2040]
  4074d8:	add	x16, x16, #0x7f8
  4074dc:	br	x17

00000000004074e0 <sd_device_new_from_subsystem_sysname@plt>:
  4074e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4074e4:	ldr	x17, [x16, #2048]
  4074e8:	add	x16, x16, #0x800
  4074ec:	br	x17

00000000004074f0 <close_nointr@plt>:
  4074f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4074f4:	ldr	x17, [x16, #2056]
  4074f8:	add	x16, x16, #0x808
  4074fc:	br	x17

0000000000407500 <sd_device_enumerator_unref@plt>:
  407500:	adrp	x16, 460000 <wordlist.10364+0x370>
  407504:	ldr	x17, [x16, #2064]
  407508:	add	x16, x16, #0x810
  40750c:	br	x17

0000000000407510 <sd_bus_message_get_member@plt>:
  407510:	adrp	x16, 460000 <wordlist.10364+0x370>
  407514:	ldr	x17, [x16, #2072]
  407518:	add	x16, x16, #0x818
  40751c:	br	x17

0000000000407520 <sd_bus_track_add_name@plt>:
  407520:	adrp	x16, 460000 <wordlist.10364+0x370>
  407524:	ldr	x17, [x16, #2080]
  407528:	add	x16, x16, #0x820
  40752c:	br	x17

0000000000407530 <sd_event_get_state@plt>:
  407530:	adrp	x16, 460000 <wordlist.10364+0x370>
  407534:	ldr	x17, [x16, #2088]
  407538:	add	x16, x16, #0x828
  40753c:	br	x17

0000000000407540 <dirent_ensure_type@plt>:
  407540:	adrp	x16, 460000 <wordlist.10364+0x370>
  407544:	ldr	x17, [x16, #2096]
  407548:	add	x16, x16, #0x830
  40754c:	br	x17

0000000000407550 <sd_event_source_unref@plt>:
  407550:	adrp	x16, 460000 <wordlist.10364+0x370>
  407554:	ldr	x17, [x16, #2104]
  407558:	add	x16, x16, #0x838
  40755c:	br	x17

0000000000407560 <unit_load_state@plt>:
  407560:	adrp	x16, 460000 <wordlist.10364+0x370>
  407564:	ldr	x17, [x16, #2112]
  407568:	add	x16, x16, #0x840
  40756c:	br	x17

0000000000407570 <write_string_file_atomic_label_ts@plt>:
  407570:	adrp	x16, 460000 <wordlist.10364+0x370>
  407574:	ldr	x17, [x16, #2120]
  407578:	add	x16, x16, #0x848
  40757c:	br	x17

0000000000407580 <acl_find_uid@plt>:
  407580:	adrp	x16, 460000 <wordlist.10364+0x370>
  407584:	ldr	x17, [x16, #2128]
  407588:	add	x16, x16, #0x850
  40758c:	br	x17

0000000000407590 <sd_bus_message_append@plt>:
  407590:	adrp	x16, 460000 <wordlist.10364+0x370>
  407594:	ldr	x17, [x16, #2136]
  407598:	add	x16, x16, #0x858
  40759c:	br	x17

00000000004075a0 <dual_timestamp_from_realtime@plt>:
  4075a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4075a4:	ldr	x17, [x16, #2144]
  4075a8:	add	x16, x16, #0x860
  4075ac:	br	x17

00000000004075b0 <session_id_valid@plt>:
  4075b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4075b4:	ldr	x17, [x16, #2152]
  4075b8:	add	x16, x16, #0x868
  4075bc:	br	x17

00000000004075c0 <log_setup_service@plt>:
  4075c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4075c4:	ldr	x17, [x16, #2160]
  4075c8:	add	x16, x16, #0x870
  4075cc:	br	x17

00000000004075d0 <strjoin_real@plt>:
  4075d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4075d4:	ldr	x17, [x16, #2168]
  4075d8:	add	x16, x16, #0x878
  4075dc:	br	x17

00000000004075e0 <safe_close@plt>:
  4075e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4075e4:	ldr	x17, [x16, #2176]
  4075e8:	add	x16, x16, #0x880
  4075ec:	br	x17

00000000004075f0 <__libc_current_sigrtmin@plt>:
  4075f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4075f4:	ldr	x17, [x16, #2184]
  4075f8:	add	x16, x16, #0x888
  4075fc:	br	x17

0000000000407600 <vt_restore@plt>:
  407600:	adrp	x16, 460000 <wordlist.10364+0x370>
  407604:	ldr	x17, [x16, #2192]
  407608:	add	x16, x16, #0x890
  40760c:	br	x17

0000000000407610 <efi_loader_entry_name_valid@plt>:
  407610:	adrp	x16, 460000 <wordlist.10364+0x370>
  407614:	ldr	x17, [x16, #2200]
  407618:	add	x16, x16, #0x898
  40761c:	br	x17

0000000000407620 <dirfd@plt>:
  407620:	adrp	x16, 460000 <wordlist.10364+0x370>
  407624:	ldr	x17, [x16, #2208]
  407628:	add	x16, x16, #0x8a0
  40762c:	br	x17

0000000000407630 <sd_device_get_sysname@plt>:
  407630:	adrp	x16, 460000 <wordlist.10364+0x370>
  407634:	ldr	x17, [x16, #2216]
  407638:	add	x16, x16, #0x8a8
  40763c:	br	x17

0000000000407640 <truncate_nl@plt>:
  407640:	adrp	x16, 460000 <wordlist.10364+0x370>
  407644:	ldr	x17, [x16, #2224]
  407648:	add	x16, x16, #0x8b0
  40764c:	br	x17

0000000000407650 <log_assert_failed_realm@plt>:
  407650:	adrp	x16, 460000 <wordlist.10364+0x370>
  407654:	ldr	x17, [x16, #2232]
  407658:	add	x16, x16, #0x8b8
  40765c:	br	x17

0000000000407660 <sd_bus_message_read@plt>:
  407660:	adrp	x16, 460000 <wordlist.10364+0x370>
  407664:	ldr	x17, [x16, #2240]
  407668:	add	x16, x16, #0x8c0
  40766c:	br	x17

0000000000407670 <readdir64@plt>:
  407670:	adrp	x16, 460000 <wordlist.10364+0x370>
  407674:	ldr	x17, [x16, #2248]
  407678:	add	x16, x16, #0x8c8
  40767c:	br	x17

0000000000407680 <sd_bus_get_property@plt>:
  407680:	adrp	x16, 460000 <wordlist.10364+0x370>
  407684:	ldr	x17, [x16, #2256]
  407688:	add	x16, x16, #0x8d0
  40768c:	br	x17

0000000000407690 <strstr@plt>:
  407690:	adrp	x16, 460000 <wordlist.10364+0x370>
  407694:	ldr	x17, [x16, #2264]
  407698:	add	x16, x16, #0x8d8
  40769c:	br	x17

00000000004076a0 <_exit@plt>:
  4076a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4076a4:	ldr	x17, [x16, #2272]
  4076a8:	add	x16, x16, #0x8e0
  4076ac:	br	x17

00000000004076b0 <cunescape@plt>:
  4076b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4076b4:	ldr	x17, [x16, #2280]
  4076b8:	add	x16, x16, #0x8e8
  4076bc:	br	x17

00000000004076c0 <log_assert_failed_unreachable_realm@plt>:
  4076c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4076c4:	ldr	x17, [x16, #2288]
  4076c8:	add	x16, x16, #0x8f0
  4076cc:	br	x17

00000000004076d0 <acl_set_qualifier@plt>:
  4076d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4076d4:	ldr	x17, [x16, #2296]
  4076d8:	add	x16, x16, #0x8f8
  4076dc:	br	x17

00000000004076e0 <bus_test_polkit@plt>:
  4076e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4076e4:	ldr	x17, [x16, #2304]
  4076e8:	add	x16, x16, #0x900
  4076ec:	br	x17

00000000004076f0 <sd_event_source_set_enabled@plt>:
  4076f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4076f4:	ldr	x17, [x16, #2312]
  4076f8:	add	x16, x16, #0x908
  4076fc:	br	x17

0000000000407700 <umask@plt>:
  407700:	adrp	x16, 460000 <wordlist.10364+0x370>
  407704:	ldr	x17, [x16, #2320]
  407708:	add	x16, x16, #0x910
  40770c:	br	x17

0000000000407710 <sd_bus_attach_event@plt>:
  407710:	adrp	x16, 460000 <wordlist.10364+0x370>
  407714:	ldr	x17, [x16, #2328]
  407718:	add	x16, x16, #0x918
  40771c:	br	x17

0000000000407720 <path_is_absolute@plt>:
  407720:	adrp	x16, 460000 <wordlist.10364+0x370>
  407724:	ldr	x17, [x16, #2336]
  407728:	add	x16, x16, #0x920
  40772c:	br	x17

0000000000407730 <sd_bus_creds_get_tty@plt>:
  407730:	adrp	x16, 460000 <wordlist.10364+0x370>
  407734:	ldr	x17, [x16, #2344]
  407738:	add	x16, x16, #0x928
  40773c:	br	x17

0000000000407740 <fputc@plt>:
  407740:	adrp	x16, 460000 <wordlist.10364+0x370>
  407744:	ldr	x17, [x16, #2352]
  407748:	add	x16, x16, #0x930
  40774c:	br	x17

0000000000407750 <sd_device_monitor_get_event_source@plt>:
  407750:	adrp	x16, 460000 <wordlist.10364+0x370>
  407754:	ldr	x17, [x16, #2360]
  407758:	add	x16, x16, #0x938
  40775c:	br	x17

0000000000407760 <closedir@plt>:
  407760:	adrp	x16, 460000 <wordlist.10364+0x370>
  407764:	ldr	x17, [x16, #2368]
  407768:	add	x16, x16, #0x940
  40776c:	br	x17

0000000000407770 <strncmp@plt>:
  407770:	adrp	x16, 460000 <wordlist.10364+0x370>
  407774:	ldr	x17, [x16, #2376]
  407778:	add	x16, x16, #0x948
  40777c:	br	x17

0000000000407780 <sd_bus_error_move@plt>:
  407780:	adrp	x16, 460000 <wordlist.10364+0x370>
  407784:	ldr	x17, [x16, #2384]
  407788:	add	x16, x16, #0x950
  40778c:	br	x17

0000000000407790 <path_is_normalized@plt>:
  407790:	adrp	x16, 460000 <wordlist.10364+0x370>
  407794:	ldr	x17, [x16, #2392]
  407798:	add	x16, x16, #0x958
  40779c:	br	x17

00000000004077a0 <access@plt>:
  4077a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4077a4:	ldr	x17, [x16, #2400]
  4077a8:	add	x16, x16, #0x960
  4077ac:	br	x17

00000000004077b0 <sigprocmask_many@plt>:
  4077b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4077b4:	ldr	x17, [x16, #2408]
  4077b8:	add	x16, x16, #0x968
  4077bc:	br	x17

00000000004077c0 <acl_add_perm@plt>:
  4077c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4077c4:	ldr	x17, [x16, #2416]
  4077c8:	add	x16, x16, #0x970
  4077cc:	br	x17

00000000004077d0 <slice_build_subslice@plt>:
  4077d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4077d4:	ldr	x17, [x16, #2424]
  4077d8:	add	x16, x16, #0x978
  4077dc:	br	x17

00000000004077e0 <string_is_safe@plt>:
  4077e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4077e4:	ldr	x17, [x16, #2432]
  4077e8:	add	x16, x16, #0x980
  4077ec:	br	x17

00000000004077f0 <abort@plt>:
  4077f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4077f4:	ldr	x17, [x16, #2440]
  4077f8:	add	x16, x16, #0x988
  4077fc:	br	x17

0000000000407800 <set_iterate@plt>:
  407800:	adrp	x16, 460000 <wordlist.10364+0x370>
  407804:	ldr	x17, [x16, #2448]
  407808:	add	x16, x16, #0x990
  40780c:	br	x17

0000000000407810 <tty_is_vc@plt>:
  407810:	adrp	x16, 460000 <wordlist.10364+0x370>
  407814:	ldr	x17, [x16, #2456]
  407818:	add	x16, x16, #0x998
  40781c:	br	x17

0000000000407820 <chvt@plt>:
  407820:	adrp	x16, 460000 <wordlist.10364+0x370>
  407824:	ldr	x17, [x16, #2464]
  407828:	add	x16, x16, #0x9a0
  40782c:	br	x17

0000000000407830 <sd_bus_message_get_sender@plt>:
  407830:	adrp	x16, 460000 <wordlist.10364+0x370>
  407834:	ldr	x17, [x16, #2472]
  407838:	add	x16, x16, #0x9a8
  40783c:	br	x17

0000000000407840 <sd_bus_match_signal_async@plt>:
  407840:	adrp	x16, 460000 <wordlist.10364+0x370>
  407844:	ldr	x17, [x16, #2480]
  407848:	add	x16, x16, #0x9b0
  40784c:	br	x17

0000000000407850 <uid_is_valid@plt>:
  407850:	adrp	x16, 460000 <wordlist.10364+0x370>
  407854:	ldr	x17, [x16, #2488]
  407858:	add	x16, x16, #0x9b8
  40785c:	br	x17

0000000000407860 <internal_hashmap_get@plt>:
  407860:	adrp	x16, 460000 <wordlist.10364+0x370>
  407864:	ldr	x17, [x16, #2496]
  407868:	add	x16, x16, #0x9c0
  40786c:	br	x17

0000000000407870 <fopen_temporary@plt>:
  407870:	adrp	x16, 460000 <wordlist.10364+0x370>
  407874:	ldr	x17, [x16, #2504]
  407878:	add	x16, x16, #0x9c8
  40787c:	br	x17

0000000000407880 <strv_consume@plt>:
  407880:	adrp	x16, 460000 <wordlist.10364+0x370>
  407884:	ldr	x17, [x16, #2512]
  407888:	add	x16, x16, #0x9d0
  40788c:	br	x17

0000000000407890 <sd_device_get_subsystem@plt>:
  407890:	adrp	x16, 460000 <wordlist.10364+0x370>
  407894:	ldr	x17, [x16, #2520]
  407898:	add	x16, x16, #0x9d8
  40789c:	br	x17

00000000004078a0 <__fxstat64@plt>:
  4078a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4078a4:	ldr	x17, [x16, #2528]
  4078a8:	add	x16, x16, #0x9e0
  4078ac:	br	x17

00000000004078b0 <format_timestamp@plt>:
  4078b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4078b4:	ldr	x17, [x16, #2536]
  4078b8:	add	x16, x16, #0x9e8
  4078bc:	br	x17

00000000004078c0 <parse_pid@plt>:
  4078c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4078c4:	ldr	x17, [x16, #2544]
  4078c8:	add	x16, x16, #0x9f0
  4078cc:	br	x17

00000000004078d0 <path_startswith@plt>:
  4078d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4078d4:	ldr	x17, [x16, #2552]
  4078d8:	add	x16, x16, #0x9f8
  4078dc:	br	x17

00000000004078e0 <sd_bus_track_unref@plt>:
  4078e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4078e4:	ldr	x17, [x16, #2560]
  4078e8:	add	x16, x16, #0xa00
  4078ec:	br	x17

00000000004078f0 <get_process_comm@plt>:
  4078f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4078f4:	ldr	x17, [x16, #2568]
  4078f8:	add	x16, x16, #0xa08
  4078fc:	br	x17

0000000000407900 <sd_device_enumerator_add_match_parent@plt>:
  407900:	adrp	x16, 460000 <wordlist.10364+0x370>
  407904:	ldr	x17, [x16, #2576]
  407908:	add	x16, x16, #0xa10
  40790c:	br	x17

0000000000407910 <touch@plt>:
  407910:	adrp	x16, 460000 <wordlist.10364+0x370>
  407914:	ldr	x17, [x16, #2584]
  407918:	add	x16, x16, #0xa18
  40791c:	br	x17

0000000000407920 <sd_bus_message_exit_container@plt>:
  407920:	adrp	x16, 460000 <wordlist.10364+0x370>
  407924:	ldr	x17, [x16, #2592]
  407928:	add	x16, x16, #0xa20
  40792c:	br	x17

0000000000407930 <getenv_bool@plt>:
  407930:	adrp	x16, 460000 <wordlist.10364+0x370>
  407934:	ldr	x17, [x16, #2600]
  407938:	add	x16, x16, #0xa28
  40793c:	br	x17

0000000000407940 <log_object_internal@plt>:
  407940:	adrp	x16, 460000 <wordlist.10364+0x370>
  407944:	ldr	x17, [x16, #2608]
  407948:	add	x16, x16, #0xa30
  40794c:	br	x17

0000000000407950 <bus_name_has_owner@plt>:
  407950:	adrp	x16, 460000 <wordlist.10364+0x370>
  407954:	ldr	x17, [x16, #2616]
  407958:	add	x16, x16, #0xa38
  40795c:	br	x17

0000000000407960 <__errno_location@plt>:
  407960:	adrp	x16, 460000 <wordlist.10364+0x370>
  407964:	ldr	x17, [x16, #2624]
  407968:	add	x16, x16, #0xa40
  40796c:	br	x17

0000000000407970 <sd_bus_error_set@plt>:
  407970:	adrp	x16, 460000 <wordlist.10364+0x370>
  407974:	ldr	x17, [x16, #2632]
  407978:	add	x16, x16, #0xa48
  40797c:	br	x17

0000000000407980 <efi_reboot_to_firmware_supported@plt>:
  407980:	adrp	x16, 460000 <wordlist.10364+0x370>
  407984:	ldr	x17, [x16, #2640]
  407988:	add	x16, x16, #0xa50
  40798c:	br	x17

0000000000407990 <sd_notifyf@plt>:
  407990:	adrp	x16, 460000 <wordlist.10364+0x370>
  407994:	ldr	x17, [x16, #2648]
  407998:	add	x16, x16, #0xa58
  40799c:	br	x17

00000000004079a0 <strv_free@plt>:
  4079a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4079a4:	ldr	x17, [x16, #2656]
  4079a8:	add	x16, x16, #0xa60
  4079ac:	br	x17

00000000004079b0 <sd_bus_reply_method_errnof@plt>:
  4079b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4079b4:	ldr	x17, [x16, #2664]
  4079b8:	add	x16, x16, #0xa68
  4079bc:	br	x17

00000000004079c0 <vt_release@plt>:
  4079c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4079c4:	ldr	x17, [x16, #2672]
  4079c8:	add	x16, x16, #0xa70
  4079cc:	br	x17

00000000004079d0 <read@plt>:
  4079d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4079d4:	ldr	x17, [x16, #2680]
  4079d8:	add	x16, x16, #0xa78
  4079dc:	br	x17

00000000004079e0 <sd_listen_fds_with_names@plt>:
  4079e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4079e4:	ldr	x17, [x16, #2688]
  4079e8:	add	x16, x16, #0xa80
  4079ec:	br	x17

00000000004079f0 <parse_dev@plt>:
  4079f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4079f4:	ldr	x17, [x16, #2696]
  4079f8:	add	x16, x16, #0xa88
  4079fc:	br	x17

0000000000407a00 <unit_name_from_dbus_path@plt>:
  407a00:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a04:	ldr	x17, [x16, #2704]
  407a08:	add	x16, x16, #0xa90
  407a0c:	br	x17

0000000000407a10 <internal_set_new@plt>:
  407a10:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a14:	ldr	x17, [x16, #2712]
  407a18:	add	x16, x16, #0xa98
  407a1c:	br	x17

0000000000407a20 <parse_env_file_sentinel@plt>:
  407a20:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a24:	ldr	x17, [x16, #2720]
  407a28:	add	x16, x16, #0xaa0
  407a2c:	br	x17

0000000000407a30 <sd_event_source_set_priority@plt>:
  407a30:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a34:	ldr	x17, [x16, #2728]
  407a38:	add	x16, x16, #0xaa8
  407a3c:	br	x17

0000000000407a40 <sd_bus_emit_signal@plt>:
  407a40:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a44:	ldr	x17, [x16, #2736]
  407a48:	add	x16, x16, #0xab0
  407a4c:	br	x17

0000000000407a50 <strv_extend@plt>:
  407a50:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a54:	ldr	x17, [x16, #2744]
  407a58:	add	x16, x16, #0xab8
  407a5c:	br	x17

0000000000407a60 <acl_get_file@plt>:
  407a60:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a64:	ldr	x17, [x16, #2752]
  407a68:	add	x16, x16, #0xac0
  407a6c:	br	x17

0000000000407a70 <sd_bus_add_object_vtable@plt>:
  407a70:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a74:	ldr	x17, [x16, #2760]
  407a78:	add	x16, x16, #0xac8
  407a7c:	br	x17

0000000000407a80 <__lxstat64@plt>:
  407a80:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a84:	ldr	x17, [x16, #2768]
  407a88:	add	x16, x16, #0xad0
  407a8c:	br	x17

0000000000407a90 <read_one_line_file@plt>:
  407a90:	adrp	x16, 460000 <wordlist.10364+0x370>
  407a94:	ldr	x17, [x16, #2776]
  407a98:	add	x16, x16, #0xad8
  407a9c:	br	x17

0000000000407aa0 <strndup@plt>:
  407aa0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407aa4:	ldr	x17, [x16, #2784]
  407aa8:	add	x16, x16, #0xae0
  407aac:	br	x17

0000000000407ab0 <mkdir_safe_label@plt>:
  407ab0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ab4:	ldr	x17, [x16, #2792]
  407ab8:	add	x16, x16, #0xae8
  407abc:	br	x17

0000000000407ac0 <setutxent@plt>:
  407ac0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ac4:	ldr	x17, [x16, #2800]
  407ac8:	add	x16, x16, #0xaf0
  407acc:	br	x17

0000000000407ad0 <sd_bus_get_current_message@plt>:
  407ad0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ad4:	ldr	x17, [x16, #2808]
  407ad8:	add	x16, x16, #0xaf8
  407adc:	br	x17

0000000000407ae0 <sd_bus_error_setf@plt>:
  407ae0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ae4:	ldr	x17, [x16, #2816]
  407ae8:	add	x16, x16, #0xb00
  407aec:	br	x17

0000000000407af0 <acl_calc_mask@plt>:
  407af0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407af4:	ldr	x17, [x16, #2824]
  407af8:	add	x16, x16, #0xb08
  407afc:	br	x17

0000000000407b00 <gnu_dev_makedev@plt>:
  407b00:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b04:	ldr	x17, [x16, #2832]
  407b08:	add	x16, x16, #0xb10
  407b0c:	br	x17

0000000000407b10 <internal_hashmap_new@plt>:
  407b10:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b14:	ldr	x17, [x16, #2840]
  407b18:	add	x16, x16, #0xb18
  407b1c:	br	x17

0000000000407b20 <__stack_chk_fail@plt>:
  407b20:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b24:	ldr	x17, [x16, #2848]
  407b28:	add	x16, x16, #0xb20
  407b2c:	br	x17

0000000000407b30 <sd_bus_send@plt>:
  407b30:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b34:	ldr	x17, [x16, #2856]
  407b38:	add	x16, x16, #0xb28
  407b3c:	br	x17

0000000000407b40 <sd_device_new_from_devnum@plt>:
  407b40:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b44:	ldr	x17, [x16, #2864]
  407b48:	add	x16, x16, #0xb30
  407b4c:	br	x17

0000000000407b50 <basename@plt>:
  407b50:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b54:	ldr	x17, [x16, #2872]
  407b58:	add	x16, x16, #0xb38
  407b5c:	br	x17

0000000000407b60 <sd_device_has_tag@plt>:
  407b60:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b64:	ldr	x17, [x16, #2880]
  407b68:	add	x16, x16, #0xb40
  407b6c:	br	x17

0000000000407b70 <config_parse_uint64@plt>:
  407b70:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b74:	ldr	x17, [x16, #2888]
  407b78:	add	x16, x16, #0xb48
  407b7c:	br	x17

0000000000407b80 <sd_device_monitor_filter_add_match_tag@plt>:
  407b80:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b84:	ldr	x17, [x16, #2896]
  407b88:	add	x16, x16, #0xb50
  407b8c:	br	x17

0000000000407b90 <efi_set_reboot_to_firmware@plt>:
  407b90:	adrp	x16, 460000 <wordlist.10364+0x370>
  407b94:	ldr	x17, [x16, #2904]
  407b98:	add	x16, x16, #0xb58
  407b9c:	br	x17

0000000000407ba0 <pipe_eof@plt>:
  407ba0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ba4:	ldr	x17, [x16, #2912]
  407ba8:	add	x16, x16, #0xb60
  407bac:	br	x17

0000000000407bb0 <path_join_internal@plt>:
  407bb0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407bb4:	ldr	x17, [x16, #2920]
  407bb8:	add	x16, x16, #0xb68
  407bbc:	br	x17

0000000000407bc0 <boot_entries_load_config_auto@plt>:
  407bc0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407bc4:	ldr	x17, [x16, #2928]
  407bc8:	add	x16, x16, #0xb70
  407bcc:	br	x17

0000000000407bd0 <efi_get_reboot_to_firmware@plt>:
  407bd0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407bd4:	ldr	x17, [x16, #2936]
  407bd8:	add	x16, x16, #0xb78
  407bdc:	br	x17

0000000000407be0 <mkdir_p_label@plt>:
  407be0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407be4:	ldr	x17, [x16, #2944]
  407be8:	add	x16, x16, #0xb80
  407bec:	br	x17

0000000000407bf0 <sd_bus_message_copy@plt>:
  407bf0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407bf4:	ldr	x17, [x16, #2952]
  407bf8:	add	x16, x16, #0xb88
  407bfc:	br	x17

0000000000407c00 <physical_memory_scale@plt>:
  407c00:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c04:	ldr	x17, [x16, #2960]
  407c08:	add	x16, x16, #0xb90
  407c0c:	br	x17

0000000000407c10 <ask_password_agent_close@plt>:
  407c10:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c14:	ldr	x17, [x16, #2968]
  407c18:	add	x16, x16, #0xb98
  407c1c:	br	x17

0000000000407c20 <pager_close@plt>:
  407c20:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c24:	ldr	x17, [x16, #2976]
  407c28:	add	x16, x16, #0xba0
  407c2c:	br	x17

0000000000407c30 <set_put_strdup@plt>:
  407c30:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c34:	ldr	x17, [x16, #2984]
  407c38:	add	x16, x16, #0xba8
  407c3c:	br	x17

0000000000407c40 <internal_hashmap_remove_value@plt>:
  407c40:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c44:	ldr	x17, [x16, #2992]
  407c48:	add	x16, x16, #0xbb0
  407c4c:	br	x17

0000000000407c50 <sd_device_enumerator_get_device_next@plt>:
  407c50:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c54:	ldr	x17, [x16, #3000]
  407c58:	add	x16, x16, #0xbb8
  407c5c:	br	x17

0000000000407c60 <sd_device_monitor_unref@plt>:
  407c60:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c64:	ldr	x17, [x16, #3008]
  407c68:	add	x16, x16, #0xbc0
  407c6c:	br	x17

0000000000407c70 <strv_length@plt>:
  407c70:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c74:	ldr	x17, [x16, #3016]
  407c78:	add	x16, x16, #0xbc8
  407c7c:	br	x17

0000000000407c80 <sd_bus_error_free@plt>:
  407c80:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c84:	ldr	x17, [x16, #3024]
  407c88:	add	x16, x16, #0xbd0
  407c8c:	br	x17

0000000000407c90 <vtnr_from_tty@plt>:
  407c90:	adrp	x16, 460000 <wordlist.10364+0x370>
  407c94:	ldr	x17, [x16, #3032]
  407c98:	add	x16, x16, #0xbd8
  407c9c:	br	x17

0000000000407ca0 <sd_bus_call@plt>:
  407ca0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ca4:	ldr	x17, [x16, #3040]
  407ca8:	add	x16, x16, #0xbe0
  407cac:	br	x17

0000000000407cb0 <strv_find@plt>:
  407cb0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407cb4:	ldr	x17, [x16, #3048]
  407cb8:	add	x16, x16, #0xbe8
  407cbc:	br	x17

0000000000407cc0 <sd_notify@plt>:
  407cc0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407cc4:	ldr	x17, [x16, #3056]
  407cc8:	add	x16, x16, #0xbf0
  407ccc:	br	x17

0000000000407cd0 <log_struct_internal@plt>:
  407cd0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407cd4:	ldr	x17, [x16, #3064]
  407cd8:	add	x16, x16, #0xbf8
  407cdc:	br	x17

0000000000407ce0 <malloc@plt>:
  407ce0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ce4:	ldr	x17, [x16, #3072]
  407ce8:	add	x16, x16, #0xc00
  407cec:	br	x17

0000000000407cf0 <efi_loader_get_features@plt>:
  407cf0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407cf4:	ldr	x17, [x16, #3080]
  407cf8:	add	x16, x16, #0xc08
  407cfc:	br	x17

0000000000407d00 <mkdir_label@plt>:
  407d00:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d04:	ldr	x17, [x16, #3088]
  407d08:	add	x16, x16, #0xc10
  407d0c:	br	x17

0000000000407d10 <safe_atou_full@plt>:
  407d10:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d14:	ldr	x17, [x16, #3096]
  407d18:	add	x16, x16, #0xc18
  407d1c:	br	x17

0000000000407d20 <open_terminal@plt>:
  407d20:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d24:	ldr	x17, [x16, #3104]
  407d28:	add	x16, x16, #0xc20
  407d2c:	br	x17

0000000000407d30 <internal_hashmap_size@plt>:
  407d30:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d34:	ldr	x17, [x16, #3112]
  407d38:	add	x16, x16, #0xc28
  407d3c:	br	x17

0000000000407d40 <can_sleep@plt>:
  407d40:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d44:	ldr	x17, [x16, #3120]
  407d48:	add	x16, x16, #0xc30
  407d4c:	br	x17

0000000000407d50 <acl_set_file@plt>:
  407d50:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d54:	ldr	x17, [x16, #3128]
  407d58:	add	x16, x16, #0xc38
  407d5c:	br	x17

0000000000407d60 <log_internal_realm@plt>:
  407d60:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d64:	ldr	x17, [x16, #3136]
  407d68:	add	x16, x16, #0xc40
  407d6c:	br	x17

0000000000407d70 <read_reboot_parameter@plt>:
  407d70:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d74:	ldr	x17, [x16, #3144]
  407d78:	add	x16, x16, #0xc48
  407d7c:	br	x17

0000000000407d80 <sd_bus_default_system@plt>:
  407d80:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d84:	ldr	x17, [x16, #3152]
  407d88:	add	x16, x16, #0xc50
  407d8c:	br	x17

0000000000407d90 <sd_bus_flush_close_unref@plt>:
  407d90:	adrp	x16, 460000 <wordlist.10364+0x370>
  407d94:	ldr	x17, [x16, #3160]
  407d98:	add	x16, x16, #0xc58
  407d9c:	br	x17

0000000000407da0 <string_hash_func@plt>:
  407da0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407da4:	ldr	x17, [x16, #3168]
  407da8:	add	x16, x16, #0xc60
  407dac:	br	x17

0000000000407db0 <acl_set_tag_type@plt>:
  407db0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407db4:	ldr	x17, [x16, #3176]
  407db8:	add	x16, x16, #0xc68
  407dbc:	br	x17

0000000000407dc0 <sd_bus_add_fallback_vtable@plt>:
  407dc0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407dc4:	ldr	x17, [x16, #3184]
  407dc8:	add	x16, x16, #0xc70
  407dcc:	br	x17

0000000000407dd0 <hashmap_put@plt>:
  407dd0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407dd4:	ldr	x17, [x16, #3192]
  407dd8:	add	x16, x16, #0xc78
  407ddc:	br	x17

0000000000407de0 <utmp_wall@plt>:
  407de0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407de4:	ldr	x17, [x16, #3200]
  407de8:	add	x16, x16, #0xc80
  407dec:	br	x17

0000000000407df0 <mkfifo@plt>:
  407df0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407df4:	ldr	x17, [x16, #3208]
  407df8:	add	x16, x16, #0xc88
  407dfc:	br	x17

0000000000407e00 <split@plt>:
  407e00:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e04:	ldr	x17, [x16, #3216]
  407e08:	add	x16, x16, #0xc90
  407e0c:	br	x17

0000000000407e10 <get_user_creds@plt>:
  407e10:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e14:	ldr	x17, [x16, #3224]
  407e18:	add	x16, x16, #0xc98
  407e1c:	br	x17

0000000000407e20 <page_size@plt>:
  407e20:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e24:	ldr	x17, [x16, #3232]
  407e28:	add	x16, x16, #0xca0
  407e2c:	br	x17

0000000000407e30 <ioctl@plt>:
  407e30:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e34:	ldr	x17, [x16, #3240]
  407e38:	add	x16, x16, #0xca8
  407e3c:	br	x17

0000000000407e40 <sd_bus_creds_get_owner_uid@plt>:
  407e40:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e44:	ldr	x17, [x16, #3248]
  407e48:	add	x16, x16, #0xcb0
  407e4c:	br	x17

0000000000407e50 <bus_property_get_bool@plt>:
  407e50:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e54:	ldr	x17, [x16, #3256]
  407e58:	add	x16, x16, #0xcb8
  407e5c:	br	x17

0000000000407e60 <gnu_dev_major@plt>:
  407e60:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e64:	ldr	x17, [x16, #3264]
  407e68:	add	x16, x16, #0xcc0
  407e6c:	br	x17

0000000000407e70 <update_reboot_parameter_and_warn@plt>:
  407e70:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e74:	ldr	x17, [x16, #3272]
  407e78:	add	x16, x16, #0xcc8
  407e7c:	br	x17

0000000000407e80 <now@plt>:
  407e80:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e84:	ldr	x17, [x16, #3280]
  407e88:	add	x16, x16, #0xcd0
  407e8c:	br	x17

0000000000407e90 <endswith@plt>:
  407e90:	adrp	x16, 460000 <wordlist.10364+0x370>
  407e94:	ldr	x17, [x16, #3288]
  407e98:	add	x16, x16, #0xcd8
  407e9c:	br	x17

0000000000407ea0 <sd_bus_reply_method_error@plt>:
  407ea0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ea4:	ldr	x17, [x16, #3296]
  407ea8:	add	x16, x16, #0xce0
  407eac:	br	x17

0000000000407eb0 <sd_event_add_io@plt>:
  407eb0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407eb4:	ldr	x17, [x16, #3304]
  407eb8:	add	x16, x16, #0xce8
  407ebc:	br	x17

0000000000407ec0 <detect_container@plt>:
  407ec0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ec4:	ldr	x17, [x16, #3312]
  407ec8:	add	x16, x16, #0xcf0
  407ecc:	br	x17

0000000000407ed0 <log_syntax_internal@plt>:
  407ed0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ed4:	ldr	x17, [x16, #3320]
  407ed8:	add	x16, x16, #0xcf8
  407edc:	br	x17

0000000000407ee0 <parse_uid@plt>:
  407ee0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ee4:	ldr	x17, [x16, #3328]
  407ee8:	add	x16, x16, #0xd00
  407eec:	br	x17

0000000000407ef0 <string_table_lookup@plt>:
  407ef0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ef4:	ldr	x17, [x16, #3336]
  407ef8:	add	x16, x16, #0xd08
  407efc:	br	x17

0000000000407f00 <parse_permille@plt>:
  407f00:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f04:	ldr	x17, [x16, #3344]
  407f08:	add	x16, x16, #0xd10
  407f0c:	br	x17

0000000000407f10 <path_simplify@plt>:
  407f10:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f14:	ldr	x17, [x16, #3352]
  407f18:	add	x16, x16, #0xd18
  407f1c:	br	x17

0000000000407f20 <acl_get_tag_type@plt>:
  407f20:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f24:	ldr	x17, [x16, #3360]
  407f28:	add	x16, x16, #0xd20
  407f2c:	br	x17

0000000000407f30 <strcmp@plt>:
  407f30:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f34:	ldr	x17, [x16, #3368]
  407f38:	add	x16, x16, #0xd28
  407f3c:	br	x17

0000000000407f40 <extract_first_word@plt>:
  407f40:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f44:	ldr	x17, [x16, #3376]
  407f48:	add	x16, x16, #0xd30
  407f4c:	br	x17

0000000000407f50 <opendir@plt>:
  407f50:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f54:	ldr	x17, [x16, #3384]
  407f58:	add	x16, x16, #0xd38
  407f5c:	br	x17

0000000000407f60 <endutxent@plt>:
  407f60:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f64:	ldr	x17, [x16, #3392]
  407f68:	add	x16, x16, #0xd40
  407f6c:	br	x17

0000000000407f70 <empty_or_root@plt>:
  407f70:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f74:	ldr	x17, [x16, #3400]
  407f78:	add	x16, x16, #0xd48
  407f7c:	br	x17

0000000000407f80 <internal_hashmap_iterate@plt>:
  407f80:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f84:	ldr	x17, [x16, #3408]
  407f88:	add	x16, x16, #0xd50
  407f8c:	br	x17

0000000000407f90 <strdup@plt>:
  407f90:	adrp	x16, 460000 <wordlist.10364+0x370>
  407f94:	ldr	x17, [x16, #3416]
  407f98:	add	x16, x16, #0xd58
  407f9c:	br	x17

0000000000407fa0 <calloc@plt>:
  407fa0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407fa4:	ldr	x17, [x16, #3424]
  407fa8:	add	x16, x16, #0xd60
  407fac:	br	x17

0000000000407fb0 <sd_bus_error_has_name@plt>:
  407fb0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407fb4:	ldr	x17, [x16, #3432]
  407fb8:	add	x16, x16, #0xd68
  407fbc:	br	x17

0000000000407fc0 <internal_hashmap_first_key_and_value@plt>:
  407fc0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407fc4:	ldr	x17, [x16, #3440]
  407fc8:	add	x16, x16, #0xd70
  407fcc:	br	x17

0000000000407fd0 <config_parse_strv@plt>:
  407fd0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407fd4:	ldr	x17, [x16, #3448]
  407fd8:	add	x16, x16, #0xd78
  407fdc:	br	x17

0000000000407fe0 <safe_fork_full@plt>:
  407fe0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407fe4:	ldr	x17, [x16, #3456]
  407fe8:	add	x16, x16, #0xd80
  407fec:	br	x17

0000000000407ff0 <acl_get_entry@plt>:
  407ff0:	adrp	x16, 460000 <wordlist.10364+0x370>
  407ff4:	ldr	x17, [x16, #3464]
  407ff8:	add	x16, x16, #0xd88
  407ffc:	br	x17

0000000000408000 <deserialize_usec@plt>:
  408000:	adrp	x16, 460000 <wordlist.10364+0x370>
  408004:	ldr	x17, [x16, #3472]
  408008:	add	x16, x16, #0xd90
  40800c:	br	x17

0000000000408010 <strchr@plt>:
  408010:	adrp	x16, 460000 <wordlist.10364+0x370>
  408014:	ldr	x17, [x16, #3480]
  408018:	add	x16, x16, #0xd98
  40801c:	br	x17

0000000000408020 <log_set_facility@plt>:
  408020:	adrp	x16, 460000 <wordlist.10364+0x370>
  408024:	ldr	x17, [x16, #3488]
  408028:	add	x16, x16, #0xda0
  40802c:	br	x17

0000000000408030 <sd_device_get_sysattr_value@plt>:
  408030:	adrp	x16, 460000 <wordlist.10364+0x370>
  408034:	ldr	x17, [x16, #3496]
  408038:	add	x16, x16, #0xda8
  40803c:	br	x17

0000000000408040 <boot_config_free@plt>:
  408040:	adrp	x16, 460000 <wordlist.10364+0x370>
  408044:	ldr	x17, [x16, #3504]
  408048:	add	x16, x16, #0xdb0
  40804c:	br	x17

0000000000408050 <bus_label_unescape_n@plt>:
  408050:	adrp	x16, 460000 <wordlist.10364+0x370>
  408054:	ldr	x17, [x16, #3512]
  408058:	add	x16, x16, #0xdb8
  40805c:	br	x17

0000000000408060 <asprintf@plt>:
  408060:	adrp	x16, 460000 <wordlist.10364+0x370>
  408064:	ldr	x17, [x16, #3520]
  408068:	add	x16, x16, #0xdc0
  40806c:	br	x17

0000000000408070 <audit_session_from_pid@plt>:
  408070:	adrp	x16, 460000 <wordlist.10364+0x370>
  408074:	ldr	x17, [x16, #3528]
  408078:	add	x16, x16, #0xdc8
  40807c:	br	x17

0000000000408080 <timespec_load@plt>:
  408080:	adrp	x16, 460000 <wordlist.10364+0x370>
  408084:	ldr	x17, [x16, #3536]
  408088:	add	x16, x16, #0xdd0
  40808c:	br	x17

0000000000408090 <sd_device_set_sysattr_value@plt>:
  408090:	adrp	x16, 460000 <wordlist.10364+0x370>
  408094:	ldr	x17, [x16, #3544]
  408098:	add	x16, x16, #0xdd8
  40809c:	br	x17

00000000004080a0 <sd_bus_message_set_destination@plt>:
  4080a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4080a4:	ldr	x17, [x16, #3552]
  4080a8:	add	x16, x16, #0xde0
  4080ac:	br	x17

00000000004080b0 <uid_to_name@plt>:
  4080b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4080b4:	ldr	x17, [x16, #3560]
  4080b8:	add	x16, x16, #0xde8
  4080bc:	br	x17

00000000004080c0 <acl_get_perm@plt>:
  4080c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4080c4:	ldr	x17, [x16, #3568]
  4080c8:	add	x16, x16, #0xdf0
  4080cc:	br	x17

00000000004080d0 <on_ac_power@plt>:
  4080d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4080d4:	ldr	x17, [x16, #3576]
  4080d8:	add	x16, x16, #0xdf8
  4080dc:	br	x17

00000000004080e0 <sd_bus_message_new_signal@plt>:
  4080e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4080e4:	ldr	x17, [x16, #3584]
  4080e8:	add	x16, x16, #0xe00
  4080ec:	br	x17

00000000004080f0 <acl_delete_entry@plt>:
  4080f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4080f4:	ldr	x17, [x16, #3592]
  4080f8:	add	x16, x16, #0xe08
  4080fc:	br	x17

0000000000408100 <cg_pid_get_unit@plt>:
  408100:	adrp	x16, 460000 <wordlist.10364+0x370>
  408104:	ldr	x17, [x16, #3600]
  408108:	add	x16, x16, #0xe10
  40810c:	br	x17

0000000000408110 <sd_bus_add_node_enumerator@plt>:
  408110:	adrp	x16, 460000 <wordlist.10364+0x370>
  408114:	ldr	x17, [x16, #3608]
  408118:	add	x16, x16, #0xe18
  40811c:	br	x17

0000000000408120 <sd_event_add_inotify@plt>:
  408120:	adrp	x16, 460000 <wordlist.10364+0x370>
  408124:	ldr	x17, [x16, #3616]
  408128:	add	x16, x16, #0xe20
  40812c:	br	x17

0000000000408130 <fchown@plt>:
  408130:	adrp	x16, 460000 <wordlist.10364+0x370>
  408134:	ldr	x17, [x16, #3624]
  408138:	add	x16, x16, #0xe28
  40813c:	br	x17

0000000000408140 <unlinkat@plt>:
  408140:	adrp	x16, 460000 <wordlist.10364+0x370>
  408144:	ldr	x17, [x16, #3632]
  408148:	add	x16, x16, #0xe30
  40814c:	br	x17

0000000000408150 <free@plt>:
  408150:	adrp	x16, 460000 <wordlist.10364+0x370>
  408154:	ldr	x17, [x16, #3640]
  408158:	add	x16, x16, #0xe38
  40815c:	br	x17

0000000000408160 <gnu_dev_minor@plt>:
  408160:	adrp	x16, 460000 <wordlist.10364+0x370>
  408164:	ldr	x17, [x16, #3648]
  408168:	add	x16, x16, #0xe40
  40816c:	br	x17

0000000000408170 <strerror@plt>:
  408170:	adrp	x16, 460000 <wordlist.10364+0x370>
  408174:	ldr	x17, [x16, #3656]
  408178:	add	x16, x16, #0xe48
  40817c:	br	x17

0000000000408180 <acl_free@plt>:
  408180:	adrp	x16, 460000 <wordlist.10364+0x370>
  408184:	ldr	x17, [x16, #3664]
  408188:	add	x16, x16, #0xe50
  40818c:	br	x17

0000000000408190 <sprintf@plt>:
  408190:	adrp	x16, 460000 <wordlist.10364+0x370>
  408194:	ldr	x17, [x16, #3672]
  408198:	add	x16, x16, #0xe58
  40819c:	br	x17

00000000004081a0 <sd_device_unref@plt>:
  4081a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4081a4:	ldr	x17, [x16, #3680]
  4081a8:	add	x16, x16, #0xe60
  4081ac:	br	x17

00000000004081b0 <config_parse_many_nulstr@plt>:
  4081b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4081b4:	ldr	x17, [x16, #3688]
  4081b8:	add	x16, x16, #0xe68
  4081bc:	br	x17

00000000004081c0 <internal_hashmap_ensure_allocated@plt>:
  4081c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4081c4:	ldr	x17, [x16, #3696]
  4081c8:	add	x16, x16, #0xe70
  4081cc:	br	x17

00000000004081d0 <ignore_signals@plt>:
  4081d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4081d4:	ldr	x17, [x16, #3704]
  4081d8:	add	x16, x16, #0xe78
  4081dc:	br	x17

00000000004081e0 <fwrite@plt>:
  4081e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4081e4:	ldr	x17, [x16, #3712]
  4081e8:	add	x16, x16, #0xe80
  4081ec:	br	x17

00000000004081f0 <get_ctty@plt>:
  4081f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4081f4:	ldr	x17, [x16, #3720]
  4081f8:	add	x16, x16, #0xe88
  4081fc:	br	x17

0000000000408200 <sd_event_unref@plt>:
  408200:	adrp	x16, 460000 <wordlist.10364+0x370>
  408204:	ldr	x17, [x16, #3728]
  408208:	add	x16, x16, #0xe90
  40820c:	br	x17

0000000000408210 <sd_bus_message_get_path@plt>:
  408210:	adrp	x16, 460000 <wordlist.10364+0x370>
  408214:	ldr	x17, [x16, #3736]
  408218:	add	x16, x16, #0xe98
  40821c:	br	x17

0000000000408220 <mac_selinux_finish@plt>:
  408220:	adrp	x16, 460000 <wordlist.10364+0x370>
  408224:	ldr	x17, [x16, #3744]
  408228:	add	x16, x16, #0xea0
  40822c:	br	x17

0000000000408230 <sd_device_ref@plt>:
  408230:	adrp	x16, 460000 <wordlist.10364+0x370>
  408234:	ldr	x17, [x16, #3752]
  408238:	add	x16, x16, #0xea8
  40823c:	br	x17

0000000000408240 <sd_device_enumerator_add_match_tag@plt>:
  408240:	adrp	x16, 460000 <wordlist.10364+0x370>
  408244:	ldr	x17, [x16, #3760]
  408248:	add	x16, x16, #0xeb0
  40824c:	br	x17

0000000000408250 <fputs@plt>:
  408250:	adrp	x16, 460000 <wordlist.10364+0x370>
  408254:	ldr	x17, [x16, #3768]
  408258:	add	x16, x16, #0xeb8
  40825c:	br	x17

0000000000408260 <dirent_is_file@plt>:
  408260:	adrp	x16, 460000 <wordlist.10364+0x370>
  408264:	ldr	x17, [x16, #3776]
  408268:	add	x16, x16, #0xec0
  40826c:	br	x17

0000000000408270 <sd_device_new_from_syspath@plt>:
  408270:	adrp	x16, 460000 <wordlist.10364+0x370>
  408274:	ldr	x17, [x16, #3784]
  408278:	add	x16, x16, #0xec8
  40827c:	br	x17

0000000000408280 <close@plt>:
  408280:	adrp	x16, 460000 <wordlist.10364+0x370>
  408284:	ldr	x17, [x16, #3792]
  408288:	add	x16, x16, #0xed0
  40828c:	br	x17

0000000000408290 <sd_event_add_signal@plt>:
  408290:	adrp	x16, 460000 <wordlist.10364+0x370>
  408294:	ldr	x17, [x16, #3800]
  408298:	add	x16, x16, #0xed8
  40829c:	br	x17

00000000004082a0 <tty_is_console@plt>:
  4082a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4082a4:	ldr	x17, [x16, #3808]
  4082a8:	add	x16, x16, #0xee0
  4082ac:	br	x17

00000000004082b0 <sd_bus_call_method@plt>:
  4082b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4082b4:	ldr	x17, [x16, #3816]
  4082b8:	add	x16, x16, #0xee8
  4082bc:	br	x17

00000000004082c0 <open64@plt>:
  4082c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4082c4:	ldr	x17, [x16, #3824]
  4082c8:	add	x16, x16, #0xef0
  4082cc:	br	x17

00000000004082d0 <sd_bus_emit_properties_changed_strv@plt>:
  4082d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4082d4:	ldr	x17, [x16, #3832]
  4082d8:	add	x16, x16, #0xef8
  4082dc:	br	x17

00000000004082e0 <set_put@plt>:
  4082e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4082e4:	ldr	x17, [x16, #3840]
  4082e8:	add	x16, x16, #0xf00
  4082ec:	br	x17

00000000004082f0 <strlen@plt>:
  4082f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4082f4:	ldr	x17, [x16, #3848]
  4082f8:	add	x16, x16, #0xf08
  4082fc:	br	x17

0000000000408300 <sd_bus_message_ref@plt>:
  408300:	adrp	x16, 460000 <wordlist.10364+0x370>
  408304:	ldr	x17, [x16, #3856]
  408308:	add	x16, x16, #0xf10
  40830c:	br	x17

0000000000408310 <config_parse_unsigned@plt>:
  408310:	adrp	x16, 460000 <wordlist.10364+0x370>
  408314:	ldr	x17, [x16, #3864]
  408318:	add	x16, x16, #0xf18
  40831c:	br	x17

0000000000408320 <sd_device_get_syspath@plt>:
  408320:	adrp	x16, 460000 <wordlist.10364+0x370>
  408324:	ldr	x17, [x16, #3872]
  408328:	add	x16, x16, #0xf20
  40832c:	br	x17

0000000000408330 <log_oom_internal@plt>:
  408330:	adrp	x16, 460000 <wordlist.10364+0x370>
  408334:	ldr	x17, [x16, #3880]
  408338:	add	x16, x16, #0xf28
  40833c:	br	x17

0000000000408340 <config_parse_bool@plt>:
  408340:	adrp	x16, 460000 <wordlist.10364+0x370>
  408344:	ldr	x17, [x16, #3888]
  408348:	add	x16, x16, #0xf30
  40834c:	br	x17

0000000000408350 <bus_verify_polkit_async@plt>:
  408350:	adrp	x16, 460000 <wordlist.10364+0x370>
  408354:	ldr	x17, [x16, #3896]
  408358:	add	x16, x16, #0xf38
  40835c:	br	x17

0000000000408360 <fflush_and_check@plt>:
  408360:	adrp	x16, 460000 <wordlist.10364+0x370>
  408364:	ldr	x17, [x16, #3904]
  408368:	add	x16, x16, #0xf40
  40836c:	br	x17

0000000000408370 <sd_bus_call_method_async@plt>:
  408370:	adrp	x16, 460000 <wordlist.10364+0x370>
  408374:	ldr	x17, [x16, #3912]
  408378:	add	x16, x16, #0xf48
  40837c:	br	x17

0000000000408380 <sd_event_source_set_description@plt>:
  408380:	adrp	x16, 460000 <wordlist.10364+0x370>
  408384:	ldr	x17, [x16, #3920]
  408388:	add	x16, x16, #0xf50
  40838c:	br	x17

0000000000408390 <memset@plt>:
  408390:	adrp	x16, 460000 <wordlist.10364+0x370>
  408394:	ldr	x17, [x16, #3928]
  408398:	add	x16, x16, #0xf58
  40839c:	br	x17

00000000004083a0 <sd_device_enumerator_allow_uninitialized@plt>:
  4083a0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4083a4:	ldr	x17, [x16, #3936]
  4083a8:	add	x16, x16, #0xf60
  4083ac:	br	x17

00000000004083b0 <sd_bus_query_sender_creds@plt>:
  4083b0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4083b4:	ldr	x17, [x16, #3944]
  4083b8:	add	x16, x16, #0xf68
  4083bc:	br	x17

00000000004083c0 <efi_set_variable_string@plt>:
  4083c0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4083c4:	ldr	x17, [x16, #3952]
  4083c8:	add	x16, x16, #0xf70
  4083cc:	br	x17

00000000004083d0 <sd_bus_message_get_expect_reply@plt>:
  4083d0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4083d4:	ldr	x17, [x16, #3960]
  4083d8:	add	x16, x16, #0xf78
  4083dc:	br	x17

00000000004083e0 <log_get_max_level_realm@plt>:
  4083e0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4083e4:	ldr	x17, [x16, #3968]
  4083e8:	add	x16, x16, #0xf80
  4083ec:	br	x17

00000000004083f0 <sd_device_get_parent@plt>:
  4083f0:	adrp	x16, 460000 <wordlist.10364+0x370>
  4083f4:	ldr	x17, [x16, #3976]
  4083f8:	add	x16, x16, #0xf88
  4083fc:	br	x17

0000000000408400 <acl_create_entry@plt>:
  408400:	adrp	x16, 460000 <wordlist.10364+0x370>
  408404:	ldr	x17, [x16, #3984]
  408408:	add	x16, x16, #0xf90
  40840c:	br	x17

0000000000408410 <unlink_or_warn@plt>:
  408410:	adrp	x16, 460000 <wordlist.10364+0x370>
  408414:	ldr	x17, [x16, #3992]
  408418:	add	x16, x16, #0xf98
  40841c:	br	x17

0000000000408420 <sd_bus_message_close_container@plt>:
  408420:	adrp	x16, 460000 <wordlist.10364+0x370>
  408424:	ldr	x17, [x16, #4000]
  408428:	add	x16, x16, #0xfa0
  40842c:	br	x17

Disassembly of section .text:

0000000000408430 <_start>:
  408430:	mov	x29, #0x0                   	// #0
  408434:	mov	x30, #0x0                   	// #0
  408438:	mov	x5, x0
  40843c:	ldr	x1, [sp]
  408440:	add	x2, sp, #0x8
  408444:	mov	x6, sp
  408448:	movz	x0, #0x0, lsl #48
  40844c:	movk	x0, #0x0, lsl #32
  408450:	movk	x0, #0x40, lsl #16
  408454:	movk	x0, #0xe524
  408458:	movz	x3, #0x0, lsl #48
  40845c:	movk	x3, #0x0, lsl #32
  408460:	movk	x3, #0x43, lsl #16
  408464:	movk	x3, #0xc1a8
  408468:	movz	x4, #0x0, lsl #48
  40846c:	movk	x4, #0x0, lsl #32
  408470:	movk	x4, #0x43, lsl #16
  408474:	movk	x4, #0xc228
  408478:	bl	4071a0 <__libc_start_main@plt>
  40847c:	bl	4077f0 <abort@plt>

0000000000408480 <call_weak_fn>:
  408480:	adrp	x0, 460000 <wordlist.10364+0x370>
  408484:	ldr	x0, [x0, #4016]
  408488:	cbz	x0, 408490 <call_weak_fn+0x10>
  40848c:	b	407310 <__gmon_start__@plt>
  408490:	ret

0000000000408494 <deregister_tm_clones>:
  408494:	stp	x29, x30, [sp, #-32]!
  408498:	mov	x29, sp
  40849c:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  4084a0:	add	x0, x0, #0x90
  4084a4:	str	x0, [sp, #24]
  4084a8:	ldr	x0, [sp, #24]
  4084ac:	str	x0, [sp, #24]
  4084b0:	ldr	x1, [sp, #24]
  4084b4:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  4084b8:	add	x0, x0, #0x90
  4084bc:	cmp	x1, x0
  4084c0:	b.eq	4084fc <deregister_tm_clones+0x68>  // b.none
  4084c4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4084c8:	add	x0, x0, #0x260
  4084cc:	ldr	x0, [x0]
  4084d0:	str	x0, [sp, #16]
  4084d4:	ldr	x0, [sp, #16]
  4084d8:	str	x0, [sp, #16]
  4084dc:	ldr	x0, [sp, #16]
  4084e0:	cmp	x0, #0x0
  4084e4:	b.eq	408500 <deregister_tm_clones+0x6c>  // b.none
  4084e8:	ldr	x1, [sp, #16]
  4084ec:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  4084f0:	add	x0, x0, #0x90
  4084f4:	blr	x1
  4084f8:	b	408500 <deregister_tm_clones+0x6c>
  4084fc:	nop
  408500:	ldp	x29, x30, [sp], #32
  408504:	ret

0000000000408508 <register_tm_clones>:
  408508:	stp	x29, x30, [sp, #-48]!
  40850c:	mov	x29, sp
  408510:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  408514:	add	x0, x0, #0x90
  408518:	str	x0, [sp, #40]
  40851c:	ldr	x0, [sp, #40]
  408520:	str	x0, [sp, #40]
  408524:	ldr	x1, [sp, #40]
  408528:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  40852c:	add	x0, x0, #0x90
  408530:	sub	x0, x1, x0
  408534:	asr	x0, x0, #3
  408538:	lsr	x1, x0, #63
  40853c:	add	x0, x1, x0
  408540:	asr	x0, x0, #1
  408544:	str	x0, [sp, #32]
  408548:	ldr	x0, [sp, #32]
  40854c:	cmp	x0, #0x0
  408550:	b.eq	408590 <register_tm_clones+0x88>  // b.none
  408554:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  408558:	add	x0, x0, #0x268
  40855c:	ldr	x0, [x0]
  408560:	str	x0, [sp, #24]
  408564:	ldr	x0, [sp, #24]
  408568:	str	x0, [sp, #24]
  40856c:	ldr	x0, [sp, #24]
  408570:	cmp	x0, #0x0
  408574:	b.eq	408594 <register_tm_clones+0x8c>  // b.none
  408578:	ldr	x2, [sp, #24]
  40857c:	ldr	x1, [sp, #32]
  408580:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  408584:	add	x0, x0, #0x90
  408588:	blr	x2
  40858c:	b	408594 <register_tm_clones+0x8c>
  408590:	nop
  408594:	ldp	x29, x30, [sp], #48
  408598:	ret

000000000040859c <__do_global_dtors_aux>:
  40859c:	stp	x29, x30, [sp, #-16]!
  4085a0:	mov	x29, sp
  4085a4:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  4085a8:	add	x0, x0, #0x9c
  4085ac:	ldrb	w0, [x0]
  4085b0:	and	x0, x0, #0xff
  4085b4:	cmp	x0, #0x0
  4085b8:	b.ne	4085d4 <__do_global_dtors_aux+0x38>  // b.any
  4085bc:	bl	408494 <deregister_tm_clones>
  4085c0:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  4085c4:	add	x0, x0, #0x9c
  4085c8:	mov	w1, #0x1                   	// #1
  4085cc:	strb	w1, [x0]
  4085d0:	b	4085d8 <__do_global_dtors_aux+0x3c>
  4085d4:	nop
  4085d8:	ldp	x29, x30, [sp], #16
  4085dc:	ret

00000000004085e0 <frame_dummy>:
  4085e0:	stp	x29, x30, [sp, #-16]!
  4085e4:	mov	x29, sp
  4085e8:	bl	408508 <register_tm_clones>
  4085ec:	nop
  4085f0:	ldp	x29, x30, [sp], #16
  4085f4:	ret

00000000004085f8 <sd_device_enumerator_unrefp>:
  4085f8:	stp	x29, x30, [sp, #-32]!
  4085fc:	mov	x29, sp
  408600:	str	x0, [sp, #24]
  408604:	ldr	x0, [sp, #24]
  408608:	ldr	x0, [x0]
  40860c:	cmp	x0, #0x0
  408610:	b.eq	408620 <sd_device_enumerator_unrefp+0x28>  // b.none
  408614:	ldr	x0, [sp, #24]
  408618:	ldr	x0, [x0]
  40861c:	bl	407500 <sd_device_enumerator_unref@plt>
  408620:	nop
  408624:	ldp	x29, x30, [sp], #32
  408628:	ret

000000000040862c <ALIGN_TO>:
  40862c:	sub	sp, sp, #0x10
  408630:	str	x0, [sp, #8]
  408634:	str	x1, [sp]
  408638:	ldr	x1, [sp, #8]
  40863c:	ldr	x0, [sp]
  408640:	add	x0, x1, x0
  408644:	sub	x1, x0, #0x1
  408648:	ldr	x0, [sp]
  40864c:	neg	x0, x0
  408650:	and	x0, x1, x0
  408654:	add	sp, sp, #0x10
  408658:	ret

000000000040865c <mfree>:
  40865c:	stp	x29, x30, [sp, #-32]!
  408660:	mov	x29, sp
  408664:	str	x0, [sp, #24]
  408668:	ldr	x0, [sp, #24]
  40866c:	bl	408150 <free@plt>
  408670:	mov	x0, #0x0                   	// #0
  408674:	ldp	x29, x30, [sp], #32
  408678:	ret

000000000040867c <freep>:
  40867c:	stp	x29, x30, [sp, #-32]!
  408680:	mov	x29, sp
  408684:	str	x0, [sp, #24]
  408688:	ldr	x0, [sp, #24]
  40868c:	ldr	x0, [x0]
  408690:	bl	408150 <free@plt>
  408694:	nop
  408698:	ldp	x29, x30, [sp], #32
  40869c:	ret

00000000004086a0 <size_multiply_overflow>:
  4086a0:	sub	sp, sp, #0x10
  4086a4:	str	x0, [sp, #8]
  4086a8:	str	x1, [sp]
  4086ac:	ldr	x0, [sp]
  4086b0:	cmp	x0, #0x0
  4086b4:	cset	w0, ne  // ne = any
  4086b8:	and	w0, w0, #0xff
  4086bc:	and	x0, x0, #0xff
  4086c0:	cmp	x0, #0x0
  4086c4:	b.eq	408708 <size_multiply_overflow+0x68>  // b.none
  4086c8:	mov	x2, #0x0                   	// #0
  4086cc:	ldr	x1, [sp, #8]
  4086d0:	ldr	x0, [sp]
  4086d4:	umulh	x0, x1, x0
  4086d8:	cmp	x0, #0x0
  4086dc:	b.eq	4086e4 <size_multiply_overflow+0x44>  // b.none
  4086e0:	mov	x2, #0x1                   	// #1
  4086e4:	mov	x0, x2
  4086e8:	cmp	x0, #0x0
  4086ec:	cset	w0, ne  // ne = any
  4086f0:	and	w0, w0, #0xff
  4086f4:	and	x0, x0, #0xff
  4086f8:	cmp	x0, #0x0
  4086fc:	b.eq	408708 <size_multiply_overflow+0x68>  // b.none
  408700:	mov	w0, #0x1                   	// #1
  408704:	b	40870c <size_multiply_overflow+0x6c>
  408708:	mov	w0, #0x0                   	// #0
  40870c:	and	w0, w0, #0x1
  408710:	and	w0, w0, #0xff
  408714:	add	sp, sp, #0x10
  408718:	ret

000000000040871c <malloc_multiply>:
  40871c:	stp	x29, x30, [sp, #-32]!
  408720:	mov	x29, sp
  408724:	str	x0, [sp, #24]
  408728:	str	x1, [sp, #16]
  40872c:	ldr	x1, [sp, #16]
  408730:	ldr	x0, [sp, #24]
  408734:	bl	4086a0 <size_multiply_overflow>
  408738:	and	w0, w0, #0xff
  40873c:	cmp	w0, #0x0
  408740:	b.eq	40874c <malloc_multiply+0x30>  // b.none
  408744:	mov	x0, #0x0                   	// #0
  408748:	b	408768 <malloc_multiply+0x4c>
  40874c:	ldr	x1, [sp, #24]
  408750:	ldr	x0, [sp, #16]
  408754:	mul	x0, x1, x0
  408758:	cmp	x0, #0x0
  40875c:	b.ne	408764 <malloc_multiply+0x48>  // b.any
  408760:	mov	x0, #0x1                   	// #1
  408764:	bl	407ce0 <malloc@plt>
  408768:	ldp	x29, x30, [sp], #32
  40876c:	ret

0000000000408770 <save_argc_argv>:
  408770:	sub	sp, sp, #0x10
  408774:	str	w0, [sp, #12]
  408778:	str	x1, [sp]
  40877c:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  408780:	add	x0, x0, #0x98
  408784:	ldr	w1, [sp, #12]
  408788:	str	w1, [x0]
  40878c:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  408790:	add	x0, x0, #0x90
  408794:	ldr	x1, [sp]
  408798:	str	x1, [x0]
  40879c:	nop
  4087a0:	add	sp, sp, #0x10
  4087a4:	ret

00000000004087a8 <hashmap_free>:
  4087a8:	stp	x29, x30, [sp, #-32]!
  4087ac:	mov	x29, sp
  4087b0:	str	x0, [sp, #24]
  4087b4:	mov	x2, #0x0                   	// #0
  4087b8:	mov	x1, #0x0                   	// #0
  4087bc:	ldr	x0, [sp, #24]
  4087c0:	bl	4070d0 <internal_hashmap_free@plt>
  4087c4:	ldp	x29, x30, [sp], #32
  4087c8:	ret

00000000004087cc <hashmap_get>:
  4087cc:	stp	x29, x30, [sp, #-32]!
  4087d0:	mov	x29, sp
  4087d4:	str	x0, [sp, #24]
  4087d8:	str	x1, [sp, #16]
  4087dc:	ldr	x1, [sp, #16]
  4087e0:	ldr	x0, [sp, #24]
  4087e4:	bl	407860 <internal_hashmap_get@plt>
  4087e8:	ldp	x29, x30, [sp], #32
  4087ec:	ret

00000000004087f0 <hashmap_iterate>:
  4087f0:	stp	x29, x30, [sp, #-48]!
  4087f4:	mov	x29, sp
  4087f8:	str	x0, [sp, #40]
  4087fc:	str	x1, [sp, #32]
  408800:	str	x2, [sp, #24]
  408804:	str	x3, [sp, #16]
  408808:	ldr	x3, [sp, #16]
  40880c:	ldr	x2, [sp, #24]
  408810:	ldr	x1, [sp, #32]
  408814:	ldr	x0, [sp, #40]
  408818:	bl	407f80 <internal_hashmap_iterate@plt>
  40881c:	and	w0, w0, #0xff
  408820:	ldp	x29, x30, [sp], #48
  408824:	ret

0000000000408828 <hashmap_first>:
  408828:	stp	x29, x30, [sp, #-32]!
  40882c:	mov	x29, sp
  408830:	str	x0, [sp, #24]
  408834:	mov	x2, #0x0                   	// #0
  408838:	mov	w1, #0x0                   	// #0
  40883c:	ldr	x0, [sp, #24]
  408840:	bl	407fc0 <internal_hashmap_first_key_and_value@plt>
  408844:	ldp	x29, x30, [sp], #32
  408848:	ret

000000000040884c <startswith>:
  40884c:	stp	x29, x30, [sp, #-48]!
  408850:	mov	x29, sp
  408854:	str	x0, [sp, #24]
  408858:	str	x1, [sp, #16]
  40885c:	ldr	x0, [sp, #16]
  408860:	bl	4082f0 <strlen@plt>
  408864:	str	x0, [sp, #40]
  408868:	ldr	x2, [sp, #40]
  40886c:	ldr	x1, [sp, #16]
  408870:	ldr	x0, [sp, #24]
  408874:	bl	407770 <strncmp@plt>
  408878:	cmp	w0, #0x0
  40887c:	b.ne	408890 <startswith+0x44>  // b.any
  408880:	ldr	x1, [sp, #24]
  408884:	ldr	x0, [sp, #40]
  408888:	add	x0, x1, x0
  40888c:	b	408894 <startswith+0x48>
  408890:	mov	x0, #0x0                   	// #0
  408894:	ldp	x29, x30, [sp], #48
  408898:	ret

000000000040889c <strv_freep>:
  40889c:	stp	x29, x30, [sp, #-32]!
  4088a0:	mov	x29, sp
  4088a4:	str	x0, [sp, #24]
  4088a8:	ldr	x0, [sp, #24]
  4088ac:	ldr	x0, [x0]
  4088b0:	cmp	x0, #0x0
  4088b4:	b.eq	4088c4 <strv_freep+0x28>  // b.none
  4088b8:	ldr	x0, [sp, #24]
  4088bc:	ldr	x0, [x0]
  4088c0:	bl	4079a0 <strv_free@plt>
  4088c4:	nop
  4088c8:	ldp	x29, x30, [sp], #32
  4088cc:	ret

00000000004088d0 <strv_split>:
  4088d0:	stp	x29, x30, [sp, #-32]!
  4088d4:	mov	x29, sp
  4088d8:	str	x0, [sp, #24]
  4088dc:	str	x1, [sp, #16]
  4088e0:	mov	w2, #0x0                   	// #0
  4088e4:	ldr	x1, [sp, #16]
  4088e8:	ldr	x0, [sp, #24]
  4088ec:	bl	4073d0 <strv_split_full@plt>
  4088f0:	ldp	x29, x30, [sp], #32
  4088f4:	ret

00000000004088f8 <closep>:
  4088f8:	stp	x29, x30, [sp, #-32]!
  4088fc:	mov	x29, sp
  408900:	str	x0, [sp, #24]
  408904:	ldr	x0, [sp, #24]
  408908:	ldr	w0, [x0]
  40890c:	bl	4075e0 <safe_close@plt>
  408910:	nop
  408914:	ldp	x29, x30, [sp], #32
  408918:	ret

000000000040891c <closedirp>:
  40891c:	stp	x29, x30, [sp, #-32]!
  408920:	mov	x29, sp
  408924:	str	x0, [sp, #24]
  408928:	ldr	x0, [sp, #24]
  40892c:	ldr	x0, [x0]
  408930:	cmp	x0, #0x0
  408934:	b.eq	408944 <closedirp+0x28>  // b.none
  408938:	ldr	x0, [sp, #24]
  40893c:	ldr	x0, [x0]
  408940:	bl	407760 <closedir@plt>
  408944:	nop
  408948:	ldp	x29, x30, [sp], #32
  40894c:	ret

0000000000408950 <static_destruct>:
  408950:	stp	x29, x30, [sp, #-32]!
  408954:	mov	x29, sp
  408958:	adrp	x0, 43d000 <_fini+0xdb0>
  40895c:	add	x0, x0, #0x2e8
  408960:	ldr	x0, [x0]
  408964:	cmp	x0, #0x0
  408968:	b.eq	4089cc <static_destruct+0x7c>  // b.none
  40896c:	adrp	x0, 43d000 <_fini+0xdb0>
  408970:	add	x0, x0, #0x2e8
  408974:	ldr	x0, [x0]
  408978:	mov	x1, #0x8                   	// #8
  40897c:	bl	40862c <ALIGN_TO>
  408980:	str	x0, [sp, #24]
  408984:	b	4089b0 <static_destruct+0x60>
  408988:	ldr	x0, [sp, #24]
  40898c:	ldr	x1, [x0, #8]
  408990:	ldr	x0, [sp, #24]
  408994:	ldr	x0, [x0]
  408998:	blr	x1
  40899c:	ldr	x0, [sp, #24]
  4089a0:	add	x0, x0, #0x10
  4089a4:	mov	x1, #0x8                   	// #8
  4089a8:	bl	40862c <ALIGN_TO>
  4089ac:	str	x0, [sp, #24]
  4089b0:	ldr	x1, [sp, #24]
  4089b4:	adrp	x0, 43d000 <_fini+0xdb0>
  4089b8:	add	x0, x0, #0x2f0
  4089bc:	ldr	x0, [x0]
  4089c0:	cmp	x1, x0
  4089c4:	b.cc	408988 <static_destruct+0x38>  // b.lo, b.ul, b.last
  4089c8:	b	4089d0 <static_destruct+0x80>
  4089cc:	nop
  4089d0:	ldp	x29, x30, [sp], #32
  4089d4:	ret

00000000004089d8 <safe_atou>:
  4089d8:	stp	x29, x30, [sp, #-32]!
  4089dc:	mov	x29, sp
  4089e0:	str	x0, [sp, #24]
  4089e4:	str	x1, [sp, #16]
  4089e8:	ldr	x2, [sp, #16]
  4089ec:	mov	w1, #0x0                   	// #0
  4089f0:	ldr	x0, [sp, #24]
  4089f4:	bl	407d10 <safe_atou_full@plt>
  4089f8:	ldp	x29, x30, [sp], #32
  4089fc:	ret

0000000000408a00 <manager_unrefp>:
  408a00:	stp	x29, x30, [sp, #-32]!
  408a04:	mov	x29, sp
  408a08:	str	x0, [sp, #24]
  408a0c:	ldr	x0, [sp, #24]
  408a10:	ldr	x0, [x0]
  408a14:	cmp	x0, #0x0
  408a18:	b.eq	408a28 <manager_unrefp+0x28>  // b.none
  408a1c:	ldr	x0, [sp, #24]
  408a20:	ldr	x0, [x0]
  408a24:	bl	408d44 <manager_unref>
  408a28:	nop
  408a2c:	ldp	x29, x30, [sp], #32
  408a30:	ret

0000000000408a34 <manager_new>:
  408a34:	sub	sp, sp, #0x230
  408a38:	stp	x29, x30, [sp]
  408a3c:	mov	x29, sp
  408a40:	stp	x19, x20, [sp, #16]
  408a44:	str	x0, [sp, #40]
  408a48:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408a4c:	add	x0, x0, #0x508
  408a50:	ldr	x1, [x0]
  408a54:	str	x1, [sp, #552]
  408a58:	mov	x1, #0x0                   	// #0
  408a5c:	str	xzr, [sp, #72]
  408a60:	ldr	x0, [sp, #40]
  408a64:	cmp	x0, #0x0
  408a68:	cset	w0, eq  // eq = none
  408a6c:	and	w0, w0, #0xff
  408a70:	and	x0, x0, #0xff
  408a74:	cmp	x0, #0x0
  408a78:	b.eq	408aa4 <manager_new+0x70>  // b.none
  408a7c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  408a80:	add	x1, x0, #0x273
  408a84:	adrp	x0, 43d000 <_fini+0xdb0>
  408a88:	add	x4, x0, #0x2f8
  408a8c:	mov	w3, #0x29                  	// #41
  408a90:	mov	x2, x1
  408a94:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  408a98:	add	x1, x0, #0x288
  408a9c:	mov	w0, #0x0                   	// #0
  408aa0:	bl	407650 <log_assert_failed_realm@plt>
  408aa4:	mov	x1, #0x1                   	// #1
  408aa8:	mov	x0, #0x1e0                 	// #480
  408aac:	bl	40871c <malloc_multiply>
  408ab0:	str	x0, [sp, #72]
  408ab4:	ldr	x0, [sp, #72]
  408ab8:	cmp	x0, #0x0
  408abc:	b.ne	408ac8 <manager_new+0x94>  // b.any
  408ac0:	mov	w19, #0xfffffff4            	// #-12
  408ac4:	b	408d04 <manager_new+0x2d0>
  408ac8:	ldr	x19, [sp, #72]
  408acc:	mov	w0, #0x1                   	// #1
  408ad0:	bl	407e80 <now@plt>
  408ad4:	mov	x20, x0
  408ad8:	mov	x3, x19
  408adc:	mov	x0, #0x1e0                 	// #480
  408ae0:	mov	x2, x0
  408ae4:	mov	w1, #0x0                   	// #0
  408ae8:	mov	x0, x3
  408aec:	bl	408390 <memset@plt>
  408af0:	mov	w0, #0xffffffff            	// #-1
  408af4:	str	w0, [x19, #152]
  408af8:	mov	w0, #0xffffffff            	// #-1
  408afc:	str	w0, [x19, #164]
  408b00:	str	x20, [x19, #384]
  408b04:	ldr	x19, [sp, #72]
  408b08:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408b0c:	add	x0, x0, #0x510
  408b10:	bl	407b10 <internal_hashmap_new@plt>
  408b14:	str	x0, [x19, #16]
  408b18:	ldr	x19, [sp, #72]
  408b1c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408b20:	add	x0, x0, #0x510
  408b24:	bl	407b10 <internal_hashmap_new@plt>
  408b28:	str	x0, [x19, #24]
  408b2c:	ldr	x19, [sp, #72]
  408b30:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408b34:	add	x0, x0, #0x510
  408b38:	bl	407b10 <internal_hashmap_new@plt>
  408b3c:	str	x0, [x19, #32]
  408b40:	ldr	x19, [sp, #72]
  408b44:	mov	x0, #0x0                   	// #0
  408b48:	bl	407b10 <internal_hashmap_new@plt>
  408b4c:	str	x0, [x19, #40]
  408b50:	ldr	x19, [sp, #72]
  408b54:	mov	x0, #0x0                   	// #0
  408b58:	bl	407b10 <internal_hashmap_new@plt>
  408b5c:	str	x0, [x19, #48]
  408b60:	ldr	x19, [sp, #72]
  408b64:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408b68:	add	x0, x0, #0x510
  408b6c:	bl	407b10 <internal_hashmap_new@plt>
  408b70:	str	x0, [x19, #56]
  408b74:	ldr	x19, [sp, #72]
  408b78:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408b7c:	add	x0, x0, #0x510
  408b80:	bl	407b10 <internal_hashmap_new@plt>
  408b84:	str	x0, [x19, #64]
  408b88:	ldr	x19, [sp, #72]
  408b8c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408b90:	add	x0, x0, #0x510
  408b94:	bl	407b10 <internal_hashmap_new@plt>
  408b98:	str	x0, [x19, #224]
  408b9c:	ldr	x19, [sp, #72]
  408ba0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408ba4:	add	x0, x0, #0x510
  408ba8:	bl	407b10 <internal_hashmap_new@plt>
  408bac:	str	x0, [x19, #216]
  408bb0:	ldr	x0, [sp, #72]
  408bb4:	ldr	x0, [x0, #16]
  408bb8:	cmp	x0, #0x0
  408bbc:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408bc0:	ldr	x0, [sp, #72]
  408bc4:	ldr	x0, [x0, #24]
  408bc8:	cmp	x0, #0x0
  408bcc:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408bd0:	ldr	x0, [sp, #72]
  408bd4:	ldr	x0, [x0, #32]
  408bd8:	cmp	x0, #0x0
  408bdc:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408be0:	ldr	x0, [sp, #72]
  408be4:	ldr	x0, [x0, #40]
  408be8:	cmp	x0, #0x0
  408bec:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408bf0:	ldr	x0, [sp, #72]
  408bf4:	ldr	x0, [x0, #48]
  408bf8:	cmp	x0, #0x0
  408bfc:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408c00:	ldr	x0, [sp, #72]
  408c04:	ldr	x0, [x0, #56]
  408c08:	cmp	x0, #0x0
  408c0c:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408c10:	ldr	x0, [sp, #72]
  408c14:	ldr	x0, [x0, #64]
  408c18:	cmp	x0, #0x0
  408c1c:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408c20:	ldr	x0, [sp, #72]
  408c24:	ldr	x0, [x0, #224]
  408c28:	cmp	x0, #0x0
  408c2c:	b.eq	408c40 <manager_new+0x20c>  // b.none
  408c30:	ldr	x0, [sp, #72]
  408c34:	ldr	x0, [x0, #216]
  408c38:	cmp	x0, #0x0
  408c3c:	b.ne	408c48 <manager_new+0x214>  // b.any
  408c40:	mov	w19, #0xfffffff4            	// #-12
  408c44:	b	408d04 <manager_new+0x2d0>
  408c48:	ldr	x0, [sp, #72]
  408c4c:	bl	4073c0 <sd_event_default@plt>
  408c50:	str	w0, [sp, #60]
  408c54:	ldr	w0, [sp, #60]
  408c58:	cmp	w0, #0x0
  408c5c:	b.ge	408c68 <manager_new+0x234>  // b.tcont
  408c60:	ldr	w19, [sp, #60]
  408c64:	b	408d04 <manager_new+0x2d0>
  408c68:	ldr	x0, [sp, #72]
  408c6c:	ldr	x0, [x0]
  408c70:	mov	x4, #0x0                   	// #0
  408c74:	mov	x3, #0x0                   	// #0
  408c78:	mov	w2, #0x2                   	// #2
  408c7c:	mov	x1, #0x0                   	// #0
  408c80:	bl	408290 <sd_event_add_signal@plt>
  408c84:	str	w0, [sp, #60]
  408c88:	ldr	w0, [sp, #60]
  408c8c:	cmp	w0, #0x0
  408c90:	b.ge	408c9c <manager_new+0x268>  // b.tcont
  408c94:	ldr	w19, [sp, #60]
  408c98:	b	408d04 <manager_new+0x2d0>
  408c9c:	ldr	x0, [sp, #72]
  408ca0:	ldr	x0, [x0]
  408ca4:	mov	x4, #0x0                   	// #0
  408ca8:	mov	x3, #0x0                   	// #0
  408cac:	mov	w2, #0xf                   	// #15
  408cb0:	mov	x1, #0x0                   	// #0
  408cb4:	bl	408290 <sd_event_add_signal@plt>
  408cb8:	str	w0, [sp, #60]
  408cbc:	ldr	w0, [sp, #60]
  408cc0:	cmp	w0, #0x0
  408cc4:	b.ge	408cd0 <manager_new+0x29c>  // b.tcont
  408cc8:	ldr	w19, [sp, #60]
  408ccc:	b	408d04 <manager_new+0x2d0>
  408cd0:	ldr	x0, [sp, #72]
  408cd4:	ldr	x0, [x0]
  408cd8:	mov	w1, #0x1                   	// #1
  408cdc:	bl	4071c0 <sd_event_set_watchdog@plt>
  408ce0:	ldr	x0, [sp, #72]
  408ce4:	bl	410ee8 <manager_reset_config>
  408ce8:	ldr	x0, [sp, #72]
  408cec:	str	x0, [sp, #64]
  408cf0:	str	xzr, [sp, #72]
  408cf4:	ldr	x1, [sp, #64]
  408cf8:	ldr	x0, [sp, #40]
  408cfc:	str	x1, [x0]
  408d00:	mov	w19, #0x0                   	// #0
  408d04:	add	x0, sp, #0x48
  408d08:	bl	408a00 <manager_unrefp>
  408d0c:	mov	w1, w19
  408d10:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  408d14:	add	x0, x0, #0x508
  408d18:	ldr	x2, [sp, #552]
  408d1c:	ldr	x0, [x0]
  408d20:	eor	x0, x2, x0
  408d24:	cmp	x0, #0x0
  408d28:	b.eq	408d30 <manager_new+0x2fc>  // b.none
  408d2c:	bl	407b20 <__stack_chk_fail@plt>
  408d30:	mov	w0, w1
  408d34:	ldp	x19, x20, [sp, #16]
  408d38:	ldp	x29, x30, [sp]
  408d3c:	add	sp, sp, #0x230
  408d40:	ret

0000000000408d44 <manager_unref>:
  408d44:	stp	x29, x30, [sp, #-80]!
  408d48:	mov	x29, sp
  408d4c:	str	x0, [sp, #24]
  408d50:	ldr	x0, [sp, #24]
  408d54:	cmp	x0, #0x0
  408d58:	b.ne	408d6c <manager_unref+0x28>  // b.any
  408d5c:	mov	x0, #0x0                   	// #0
  408d60:	b	409000 <manager_unref+0x2bc>
  408d64:	ldr	x0, [sp, #32]
  408d68:	bl	42f474 <session_free>
  408d6c:	ldr	x0, [sp, #24]
  408d70:	ldr	x0, [x0, #32]
  408d74:	bl	408828 <hashmap_first>
  408d78:	str	x0, [sp, #32]
  408d7c:	ldr	x0, [sp, #32]
  408d80:	cmp	x0, #0x0
  408d84:	b.ne	408d64 <manager_unref+0x20>  // b.any
  408d88:	b	408d94 <manager_unref+0x50>
  408d8c:	ldr	x0, [sp, #40]
  408d90:	bl	436744 <user_free>
  408d94:	ldr	x0, [sp, #24]
  408d98:	ldr	x0, [x0, #48]
  408d9c:	bl	408828 <hashmap_first>
  408da0:	str	x0, [sp, #40]
  408da4:	ldr	x0, [sp, #40]
  408da8:	cmp	x0, #0x0
  408dac:	b.ne	408d8c <manager_unref+0x48>  // b.any
  408db0:	b	408dbc <manager_unref+0x78>
  408db4:	ldr	x0, [sp, #48]
  408db8:	bl	422b30 <device_free>
  408dbc:	ldr	x0, [sp, #24]
  408dc0:	ldr	x0, [x0, #16]
  408dc4:	bl	408828 <hashmap_first>
  408dc8:	str	x0, [sp, #48]
  408dcc:	ldr	x0, [sp, #48]
  408dd0:	cmp	x0, #0x0
  408dd4:	b.ne	408db4 <manager_unref+0x70>  // b.any
  408dd8:	b	408de4 <manager_unref+0xa0>
  408ddc:	ldr	x0, [sp, #56]
  408de0:	bl	427180 <seat_free>
  408de4:	ldr	x0, [sp, #24]
  408de8:	ldr	x0, [x0, #24]
  408dec:	bl	408828 <hashmap_first>
  408df0:	str	x0, [sp, #56]
  408df4:	ldr	x0, [sp, #56]
  408df8:	cmp	x0, #0x0
  408dfc:	b.ne	408ddc <manager_unref+0x98>  // b.any
  408e00:	b	408e0c <manager_unref+0xc8>
  408e04:	ldr	x0, [sp, #64]
  408e08:	bl	423370 <inhibitor_free>
  408e0c:	ldr	x0, [sp, #24]
  408e10:	ldr	x0, [x0, #56]
  408e14:	bl	408828 <hashmap_first>
  408e18:	str	x0, [sp, #64]
  408e1c:	ldr	x0, [sp, #64]
  408e20:	cmp	x0, #0x0
  408e24:	b.ne	408e04 <manager_unref+0xc0>  // b.any
  408e28:	b	408e34 <manager_unref+0xf0>
  408e2c:	ldr	x0, [sp, #72]
  408e30:	bl	40f588 <button_free>
  408e34:	ldr	x0, [sp, #24]
  408e38:	ldr	x0, [x0, #64]
  408e3c:	bl	408828 <hashmap_first>
  408e40:	str	x0, [sp, #72]
  408e44:	ldr	x0, [sp, #72]
  408e48:	cmp	x0, #0x0
  408e4c:	b.ne	408e2c <manager_unref+0xe8>  // b.any
  408e50:	ldr	x0, [sp, #24]
  408e54:	ldr	x0, [x0, #16]
  408e58:	bl	4087a8 <hashmap_free>
  408e5c:	ldr	x0, [sp, #24]
  408e60:	ldr	x0, [x0, #24]
  408e64:	bl	4087a8 <hashmap_free>
  408e68:	ldr	x0, [sp, #24]
  408e6c:	ldr	x0, [x0, #32]
  408e70:	bl	4087a8 <hashmap_free>
  408e74:	ldr	x0, [sp, #24]
  408e78:	ldr	x0, [x0, #40]
  408e7c:	bl	4087a8 <hashmap_free>
  408e80:	ldr	x0, [sp, #24]
  408e84:	ldr	x0, [x0, #48]
  408e88:	bl	4087a8 <hashmap_free>
  408e8c:	ldr	x0, [sp, #24]
  408e90:	ldr	x0, [x0, #56]
  408e94:	bl	4087a8 <hashmap_free>
  408e98:	ldr	x0, [sp, #24]
  408e9c:	ldr	x0, [x0, #64]
  408ea0:	bl	4087a8 <hashmap_free>
  408ea4:	ldr	x0, [sp, #24]
  408ea8:	ldr	x0, [x0, #72]
  408eac:	bl	4087a8 <hashmap_free>
  408eb0:	ldr	x0, [sp, #24]
  408eb4:	ldr	x0, [x0, #224]
  408eb8:	bl	4087a8 <hashmap_free>
  408ebc:	ldr	x0, [sp, #24]
  408ec0:	ldr	x0, [x0, #216]
  408ec4:	bl	4087a8 <hashmap_free>
  408ec8:	ldr	x0, [sp, #24]
  408ecc:	ldr	x0, [x0, #368]
  408ed0:	bl	407550 <sd_event_source_unref@plt>
  408ed4:	ldr	x0, [sp, #24]
  408ed8:	ldr	x0, [x0, #272]
  408edc:	bl	407550 <sd_event_source_unref@plt>
  408ee0:	ldr	x0, [sp, #24]
  408ee4:	ldr	x0, [x0, #296]
  408ee8:	bl	407550 <sd_event_source_unref@plt>
  408eec:	ldr	x0, [sp, #24]
  408ef0:	ldr	x0, [x0, #320]
  408ef4:	bl	407550 <sd_event_source_unref@plt>
  408ef8:	ldr	x0, [sp, #24]
  408efc:	ldr	x0, [x0, #352]
  408f00:	bl	407550 <sd_event_source_unref@plt>
  408f04:	ldr	x0, [sp, #24]
  408f08:	ldr	x0, [x0, #136]
  408f0c:	bl	407550 <sd_event_source_unref@plt>
  408f10:	ldr	x0, [sp, #24]
  408f14:	ldr	x0, [x0, #448]
  408f18:	bl	407550 <sd_event_source_unref@plt>
  408f1c:	ldr	x0, [sp, #24]
  408f20:	ldr	x0, [x0, #144]
  408f24:	bl	407550 <sd_event_source_unref@plt>
  408f28:	ldr	x0, [sp, #24]
  408f2c:	ldr	w0, [x0, #152]
  408f30:	bl	4075e0 <safe_close@plt>
  408f34:	ldr	x0, [sp, #24]
  408f38:	ldr	x0, [x0, #104]
  408f3c:	bl	407c60 <sd_device_monitor_unref@plt>
  408f40:	ldr	x0, [sp, #24]
  408f44:	ldr	x0, [x0, #112]
  408f48:	bl	407c60 <sd_device_monitor_unref@plt>
  408f4c:	ldr	x0, [sp, #24]
  408f50:	ldr	x0, [x0, #120]
  408f54:	bl	407c60 <sd_device_monitor_unref@plt>
  408f58:	ldr	x0, [sp, #24]
  408f5c:	ldr	x0, [x0, #128]
  408f60:	bl	407c60 <sd_device_monitor_unref@plt>
  408f64:	ldr	x0, [sp, #24]
  408f68:	ldrb	w0, [x0, #328]
  408f6c:	cmp	w0, #0x0
  408f70:	b.eq	408f80 <manager_unref+0x23c>  // b.none
  408f74:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  408f78:	add	x0, x0, #0x290
  408f7c:	bl	408410 <unlink_or_warn@plt>
  408f80:	ldr	x0, [sp, #24]
  408f84:	ldr	x0, [x0, #432]
  408f88:	bl	407440 <bus_verify_polkit_async_registry_free@plt>
  408f8c:	ldr	x0, [sp, #24]
  408f90:	ldr	x0, [x0, #8]
  408f94:	bl	407d90 <sd_bus_flush_close_unref@plt>
  408f98:	ldr	x0, [sp, #24]
  408f9c:	ldr	x0, [x0]
  408fa0:	bl	408200 <sd_event_unref@plt>
  408fa4:	ldr	x0, [sp, #24]
  408fa8:	ldr	w0, [x0, #164]
  408fac:	bl	4075e0 <safe_close@plt>
  408fb0:	ldr	x0, [sp, #24]
  408fb4:	ldr	x0, [x0, #176]
  408fb8:	bl	4079a0 <strv_free@plt>
  408fbc:	ldr	x0, [sp, #24]
  408fc0:	ldr	x0, [x0, #184]
  408fc4:	bl	4079a0 <strv_free@plt>
  408fc8:	ldr	x0, [sp, #24]
  408fcc:	ldr	x0, [x0, #280]
  408fd0:	bl	408150 <free@plt>
  408fd4:	ldr	x0, [sp, #24]
  408fd8:	ldr	x0, [x0, #312]
  408fdc:	bl	408150 <free@plt>
  408fe0:	ldr	x0, [sp, #24]
  408fe4:	ldr	x0, [x0, #336]
  408fe8:	bl	408150 <free@plt>
  408fec:	ldr	x0, [sp, #24]
  408ff0:	ldr	x0, [x0, #264]
  408ff4:	bl	408150 <free@plt>
  408ff8:	ldr	x0, [sp, #24]
  408ffc:	bl	40865c <mfree>
  409000:	ldp	x29, x30, [sp], #80
  409004:	ret

0000000000409008 <manager_enumerate_devices>:
  409008:	stp	x29, x30, [sp, #-80]!
  40900c:	mov	x29, sp
  409010:	str	x19, [sp, #16]
  409014:	str	x0, [sp, #40]
  409018:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40901c:	add	x0, x0, #0x508
  409020:	ldr	x1, [x0]
  409024:	str	x1, [sp, #72]
  409028:	mov	x1, #0x0                   	// #0
  40902c:	str	xzr, [sp, #56]
  409030:	ldr	x0, [sp, #40]
  409034:	cmp	x0, #0x0
  409038:	cset	w0, eq  // eq = none
  40903c:	and	w0, w0, #0xff
  409040:	and	x0, x0, #0xff
  409044:	cmp	x0, #0x0
  409048:	b.eq	409074 <manager_enumerate_devices+0x6c>  // b.none
  40904c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409050:	add	x1, x0, #0x273
  409054:	adrp	x0, 43d000 <_fini+0xdb0>
  409058:	add	x4, x0, #0x308
  40905c:	mov	w3, #0xae                  	// #174
  409060:	mov	x2, x1
  409064:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409068:	add	x1, x0, #0x2a0
  40906c:	mov	w0, #0x0                   	// #0
  409070:	bl	407650 <log_assert_failed_realm@plt>
  409074:	add	x0, sp, #0x38
  409078:	bl	4072c0 <sd_device_enumerator_new@plt>
  40907c:	str	w0, [sp, #48]
  409080:	ldr	w0, [sp, #48]
  409084:	cmp	w0, #0x0
  409088:	b.ge	409094 <manager_enumerate_devices+0x8c>  // b.tcont
  40908c:	ldr	w19, [sp, #48]
  409090:	b	409110 <manager_enumerate_devices+0x108>
  409094:	ldr	x2, [sp, #56]
  409098:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40909c:	add	x1, x0, #0x2a8
  4090a0:	mov	x0, x2
  4090a4:	bl	408240 <sd_device_enumerator_add_match_tag@plt>
  4090a8:	str	w0, [sp, #48]
  4090ac:	ldr	w0, [sp, #48]
  4090b0:	cmp	w0, #0x0
  4090b4:	b.ge	4090c0 <manager_enumerate_devices+0xb8>  // b.tcont
  4090b8:	ldr	w19, [sp, #48]
  4090bc:	b	409110 <manager_enumerate_devices+0x108>
  4090c0:	ldr	x0, [sp, #56]
  4090c4:	bl	407470 <sd_device_enumerator_get_device_first@plt>
  4090c8:	str	x0, [sp, #64]
  4090cc:	b	409100 <manager_enumerate_devices+0xf8>
  4090d0:	ldr	x1, [sp, #64]
  4090d4:	ldr	x0, [sp, #40]
  4090d8:	bl	411a94 <manager_process_seat_device>
  4090dc:	str	w0, [sp, #52]
  4090e0:	ldr	w0, [sp, #52]
  4090e4:	cmp	w0, #0x0
  4090e8:	b.ge	4090f4 <manager_enumerate_devices+0xec>  // b.tcont
  4090ec:	ldr	w0, [sp, #52]
  4090f0:	str	w0, [sp, #48]
  4090f4:	ldr	x0, [sp, #56]
  4090f8:	bl	407c50 <sd_device_enumerator_get_device_next@plt>
  4090fc:	str	x0, [sp, #64]
  409100:	ldr	x0, [sp, #64]
  409104:	cmp	x0, #0x0
  409108:	b.ne	4090d0 <manager_enumerate_devices+0xc8>  // b.any
  40910c:	ldr	w19, [sp, #48]
  409110:	add	x0, sp, #0x38
  409114:	bl	4085f8 <sd_device_enumerator_unrefp>
  409118:	mov	w1, w19
  40911c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409120:	add	x0, x0, #0x508
  409124:	ldr	x2, [sp, #72]
  409128:	ldr	x0, [x0]
  40912c:	eor	x0, x2, x0
  409130:	cmp	x0, #0x0
  409134:	b.eq	40913c <manager_enumerate_devices+0x134>  // b.none
  409138:	bl	407b20 <__stack_chk_fail@plt>
  40913c:	mov	w0, w1
  409140:	ldr	x19, [sp, #16]
  409144:	ldp	x29, x30, [sp], #80
  409148:	ret

000000000040914c <manager_enumerate_buttons>:
  40914c:	stp	x29, x30, [sp, #-80]!
  409150:	mov	x29, sp
  409154:	str	x19, [sp, #16]
  409158:	str	x0, [sp, #40]
  40915c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409160:	add	x0, x0, #0x508
  409164:	ldr	x1, [x0]
  409168:	str	x1, [sp, #72]
  40916c:	mov	x1, #0x0                   	// #0
  409170:	str	xzr, [sp, #56]
  409174:	ldr	x0, [sp, #40]
  409178:	cmp	x0, #0x0
  40917c:	cset	w0, eq  // eq = none
  409180:	and	w0, w0, #0xff
  409184:	and	x0, x0, #0xff
  409188:	cmp	x0, #0x0
  40918c:	b.eq	4091b8 <manager_enumerate_buttons+0x6c>  // b.none
  409190:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409194:	add	x1, x0, #0x273
  409198:	adrp	x0, 43d000 <_fini+0xdb0>
  40919c:	add	x4, x0, #0x328
  4091a0:	mov	w3, #0xcb                  	// #203
  4091a4:	mov	x2, x1
  4091a8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4091ac:	add	x1, x0, #0x2a0
  4091b0:	mov	w0, #0x0                   	// #0
  4091b4:	bl	407650 <log_assert_failed_realm@plt>
  4091b8:	ldr	x0, [sp, #40]
  4091bc:	bl	4132e8 <manager_all_buttons_ignored>
  4091c0:	and	w0, w0, #0xff
  4091c4:	cmp	w0, #0x0
  4091c8:	b.eq	4091d4 <manager_enumerate_buttons+0x88>  // b.none
  4091cc:	mov	w19, #0x0                   	// #0
  4091d0:	b	4092a0 <manager_enumerate_buttons+0x154>
  4091d4:	add	x0, sp, #0x38
  4091d8:	bl	4072c0 <sd_device_enumerator_new@plt>
  4091dc:	str	w0, [sp, #48]
  4091e0:	ldr	w0, [sp, #48]
  4091e4:	cmp	w0, #0x0
  4091e8:	b.ge	4091f4 <manager_enumerate_buttons+0xa8>  // b.tcont
  4091ec:	ldr	w19, [sp, #48]
  4091f0:	b	4092a0 <manager_enumerate_buttons+0x154>
  4091f4:	ldr	x3, [sp, #56]
  4091f8:	mov	w2, #0x1                   	// #1
  4091fc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409200:	add	x1, x0, #0x2b8
  409204:	mov	x0, x3
  409208:	bl	4073a0 <sd_device_enumerator_add_match_subsystem@plt>
  40920c:	str	w0, [sp, #48]
  409210:	ldr	w0, [sp, #48]
  409214:	cmp	w0, #0x0
  409218:	b.ge	409224 <manager_enumerate_buttons+0xd8>  // b.tcont
  40921c:	ldr	w19, [sp, #48]
  409220:	b	4092a0 <manager_enumerate_buttons+0x154>
  409224:	ldr	x2, [sp, #56]
  409228:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40922c:	add	x1, x0, #0x2c0
  409230:	mov	x0, x2
  409234:	bl	408240 <sd_device_enumerator_add_match_tag@plt>
  409238:	str	w0, [sp, #48]
  40923c:	ldr	w0, [sp, #48]
  409240:	cmp	w0, #0x0
  409244:	b.ge	409250 <manager_enumerate_buttons+0x104>  // b.tcont
  409248:	ldr	w19, [sp, #48]
  40924c:	b	4092a0 <manager_enumerate_buttons+0x154>
  409250:	ldr	x0, [sp, #56]
  409254:	bl	407470 <sd_device_enumerator_get_device_first@plt>
  409258:	str	x0, [sp, #64]
  40925c:	b	409290 <manager_enumerate_buttons+0x144>
  409260:	ldr	x1, [sp, #64]
  409264:	ldr	x0, [sp, #40]
  409268:	bl	411df8 <manager_process_button_device>
  40926c:	str	w0, [sp, #52]
  409270:	ldr	w0, [sp, #52]
  409274:	cmp	w0, #0x0
  409278:	b.ge	409284 <manager_enumerate_buttons+0x138>  // b.tcont
  40927c:	ldr	w0, [sp, #52]
  409280:	str	w0, [sp, #48]
  409284:	ldr	x0, [sp, #56]
  409288:	bl	407c50 <sd_device_enumerator_get_device_next@plt>
  40928c:	str	x0, [sp, #64]
  409290:	ldr	x0, [sp, #64]
  409294:	cmp	x0, #0x0
  409298:	b.ne	409260 <manager_enumerate_buttons+0x114>  // b.any
  40929c:	ldr	w19, [sp, #48]
  4092a0:	add	x0, sp, #0x38
  4092a4:	bl	4085f8 <sd_device_enumerator_unrefp>
  4092a8:	mov	w1, w19
  4092ac:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4092b0:	add	x0, x0, #0x508
  4092b4:	ldr	x2, [sp, #72]
  4092b8:	ldr	x0, [x0]
  4092bc:	eor	x0, x2, x0
  4092c0:	cmp	x0, #0x0
  4092c4:	b.eq	4092cc <manager_enumerate_buttons+0x180>  // b.none
  4092c8:	bl	407b20 <__stack_chk_fail@plt>
  4092cc:	mov	w0, w1
  4092d0:	ldr	x19, [sp, #16]
  4092d4:	ldp	x29, x30, [sp], #80
  4092d8:	ret

00000000004092dc <manager_enumerate_seats>:
  4092dc:	stp	x29, x30, [sp, #-112]!
  4092e0:	mov	x29, sp
  4092e4:	str	x19, [sp, #16]
  4092e8:	str	x0, [sp, #40]
  4092ec:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4092f0:	add	x0, x0, #0x508
  4092f4:	ldr	x1, [x0]
  4092f8:	str	x1, [sp, #104]
  4092fc:	mov	x1, #0x0                   	// #0
  409300:	str	xzr, [sp, #80]
  409304:	str	wzr, [sp, #48]
  409308:	ldr	x0, [sp, #40]
  40930c:	cmp	x0, #0x0
  409310:	cset	w0, eq  // eq = none
  409314:	and	w0, w0, #0xff
  409318:	and	x0, x0, #0xff
  40931c:	cmp	x0, #0x0
  409320:	b.eq	40934c <manager_enumerate_seats+0x70>  // b.none
  409324:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409328:	add	x1, x0, #0x273
  40932c:	adrp	x0, 43d000 <_fini+0xdb0>
  409330:	add	x4, x0, #0x348
  409334:	mov	w3, #0xee                  	// #238
  409338:	mov	x2, x1
  40933c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409340:	add	x1, x0, #0x2a0
  409344:	mov	w0, #0x0                   	// #0
  409348:	bl	407650 <log_assert_failed_realm@plt>
  40934c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409350:	add	x0, x0, #0x2d0
  409354:	bl	407f50 <opendir@plt>
  409358:	str	x0, [sp, #80]
  40935c:	ldr	x0, [sp, #80]
  409360:	cmp	x0, #0x0
  409364:	b.ne	409410 <manager_enumerate_seats+0x134>  // b.any
  409368:	bl	407960 <__errno_location@plt>
  40936c:	ldr	w0, [x0]
  409370:	cmp	w0, #0x2
  409374:	b.ne	409380 <manager_enumerate_seats+0xa4>  // b.any
  409378:	mov	w19, #0x0                   	// #0
  40937c:	b	4095b8 <manager_enumerate_seats+0x2dc>
  409380:	mov	w0, #0x3                   	// #3
  409384:	str	w0, [sp, #68]
  409388:	bl	407960 <__errno_location@plt>
  40938c:	ldr	w0, [x0]
  409390:	str	w0, [sp, #72]
  409394:	str	wzr, [sp, #76]
  409398:	ldr	w0, [sp, #76]
  40939c:	bl	4083e0 <log_get_max_level_realm@plt>
  4093a0:	mov	w1, w0
  4093a4:	ldr	w0, [sp, #68]
  4093a8:	and	w0, w0, #0x7
  4093ac:	cmp	w1, w0
  4093b0:	b.lt	4093f8 <manager_enumerate_seats+0x11c>  // b.tstop
  4093b4:	ldr	w0, [sp, #76]
  4093b8:	lsl	w1, w0, #10
  4093bc:	ldr	w0, [sp, #68]
  4093c0:	orr	w6, w1, w0
  4093c4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4093c8:	add	x1, x0, #0x273
  4093cc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4093d0:	add	x5, x0, #0x2e8
  4093d4:	adrp	x0, 43d000 <_fini+0xdb0>
  4093d8:	add	x4, x0, #0x360
  4093dc:	mov	w3, #0xf9                  	// #249
  4093e0:	mov	x2, x1
  4093e4:	ldr	w1, [sp, #72]
  4093e8:	mov	w0, w6
  4093ec:	bl	407d60 <log_internal_realm@plt>
  4093f0:	mov	w19, w0
  4093f4:	b	4095b8 <manager_enumerate_seats+0x2dc>
  4093f8:	ldr	w0, [sp, #72]
  4093fc:	cmp	w0, #0x0
  409400:	cneg	w0, w0, lt  // lt = tstop
  409404:	and	w0, w0, #0xff
  409408:	neg	w19, w0
  40940c:	b	4095b8 <manager_enumerate_seats+0x2dc>
  409410:	bl	407960 <__errno_location@plt>
  409414:	str	wzr, [x0]
  409418:	ldr	x0, [sp, #80]
  40941c:	bl	407670 <readdir64@plt>
  409420:	str	x0, [sp, #88]
  409424:	ldr	x0, [sp, #88]
  409428:	cmp	x0, #0x0
  40942c:	b.ne	409450 <manager_enumerate_seats+0x174>  // b.any
  409430:	bl	407960 <__errno_location@plt>
  409434:	ldr	w0, [x0]
  409438:	cmp	w0, #0x0
  40943c:	b.le	4095b0 <manager_enumerate_seats+0x2d4>
  409440:	bl	407960 <__errno_location@plt>
  409444:	ldr	w0, [x0]
  409448:	neg	w19, w0
  40944c:	b	4095b8 <manager_enumerate_seats+0x2dc>
  409450:	ldr	x0, [sp, #88]
  409454:	add	x0, x0, #0x13
  409458:	bl	407410 <hidden_or_backup_file@plt>
  40945c:	and	w0, w0, #0xff
  409460:	cmp	w0, #0x0
  409464:	b.ne	409584 <manager_enumerate_seats+0x2a8>  // b.any
  409468:	ldr	x0, [sp, #88]
  40946c:	bl	408260 <dirent_is_file@plt>
  409470:	and	w0, w0, #0xff
  409474:	eor	w0, w0, #0x1
  409478:	and	w0, w0, #0xff
  40947c:	cmp	w0, #0x0
  409480:	b.ne	40958c <manager_enumerate_seats+0x2b0>  // b.any
  409484:	ldr	x0, [sp, #40]
  409488:	ldr	x2, [x0, #24]
  40948c:	ldr	x0, [sp, #88]
  409490:	add	x0, x0, #0x13
  409494:	mov	x1, x0
  409498:	mov	x0, x2
  40949c:	bl	4087cc <hashmap_get>
  4094a0:	str	x0, [sp, #96]
  4094a4:	ldr	x0, [sp, #96]
  4094a8:	cmp	x0, #0x0
  4094ac:	b.ne	409560 <manager_enumerate_seats+0x284>  // b.any
  4094b0:	ldr	x0, [sp, #80]
  4094b4:	bl	407620 <dirfd@plt>
  4094b8:	mov	w3, w0
  4094bc:	ldr	x0, [sp, #88]
  4094c0:	add	x0, x0, #0x13
  4094c4:	mov	w2, #0x0                   	// #0
  4094c8:	mov	x1, x0
  4094cc:	mov	w0, w3
  4094d0:	bl	408140 <unlinkat@plt>
  4094d4:	cmp	w0, #0x0
  4094d8:	b.ge	409594 <manager_enumerate_seats+0x2b8>  // b.tcont
  4094dc:	mov	w0, #0x4                   	// #4
  4094e0:	str	w0, [sp, #56]
  4094e4:	str	wzr, [sp, #60]
  4094e8:	str	wzr, [sp, #64]
  4094ec:	ldr	w0, [sp, #64]
  4094f0:	bl	4083e0 <log_get_max_level_realm@plt>
  4094f4:	mov	w1, w0
  4094f8:	ldr	w0, [sp, #56]
  4094fc:	and	w0, w0, #0x7
  409500:	cmp	w1, w0
  409504:	b.lt	409554 <manager_enumerate_seats+0x278>  // b.tstop
  409508:	ldr	w0, [sp, #64]
  40950c:	lsl	w1, w0, #10
  409510:	ldr	w0, [sp, #56]
  409514:	orr	w7, w1, w0
  409518:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40951c:	add	x1, x0, #0x273
  409520:	ldr	x0, [sp, #88]
  409524:	add	x0, x0, #0x13
  409528:	mov	x6, x0
  40952c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409530:	add	x5, x0, #0x310
  409534:	adrp	x0, 43d000 <_fini+0xdb0>
  409538:	add	x4, x0, #0x360
  40953c:	mov	w3, #0x106                 	// #262
  409540:	mov	x2, x1
  409544:	ldr	w1, [sp, #60]
  409548:	mov	w0, w7
  40954c:	bl	407d60 <log_internal_realm@plt>
  409550:	b	409594 <manager_enumerate_seats+0x2b8>
  409554:	ldr	w0, [sp, #60]
  409558:	cmp	w0, #0x0
  40955c:	b	409594 <manager_enumerate_seats+0x2b8>
  409560:	ldr	x0, [sp, #96]
  409564:	bl	427814 <seat_load>
  409568:	str	w0, [sp, #52]
  40956c:	ldr	w0, [sp, #52]
  409570:	cmp	w0, #0x0
  409574:	b.ge	409598 <manager_enumerate_seats+0x2bc>  // b.tcont
  409578:	ldr	w0, [sp, #52]
  40957c:	str	w0, [sp, #48]
  409580:	b	409598 <manager_enumerate_seats+0x2bc>
  409584:	nop
  409588:	b	409598 <manager_enumerate_seats+0x2bc>
  40958c:	nop
  409590:	b	409598 <manager_enumerate_seats+0x2bc>
  409594:	nop
  409598:	bl	407960 <__errno_location@plt>
  40959c:	str	wzr, [x0]
  4095a0:	ldr	x0, [sp, #80]
  4095a4:	bl	407670 <readdir64@plt>
  4095a8:	str	x0, [sp, #88]
  4095ac:	b	409424 <manager_enumerate_seats+0x148>
  4095b0:	nop
  4095b4:	ldr	w19, [sp, #48]
  4095b8:	add	x0, sp, #0x50
  4095bc:	bl	40891c <closedirp>
  4095c0:	mov	w1, w19
  4095c4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4095c8:	add	x0, x0, #0x508
  4095cc:	ldr	x2, [sp, #104]
  4095d0:	ldr	x0, [x0]
  4095d4:	eor	x0, x2, x0
  4095d8:	cmp	x0, #0x0
  4095dc:	b.eq	4095e4 <manager_enumerate_seats+0x308>  // b.none
  4095e0:	bl	407b20 <__stack_chk_fail@plt>
  4095e4:	mov	w0, w1
  4095e8:	ldr	x19, [sp, #16]
  4095ec:	ldp	x29, x30, [sp], #112
  4095f0:	ret

00000000004095f4 <manager_enumerate_linger_users>:
  4095f4:	stp	x29, x30, [sp, #-112]!
  4095f8:	mov	x29, sp
  4095fc:	str	x19, [sp, #16]
  409600:	str	x0, [sp, #40]
  409604:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409608:	add	x0, x0, #0x508
  40960c:	ldr	x1, [x0]
  409610:	str	x1, [sp, #104]
  409614:	mov	x1, #0x0                   	// #0
  409618:	str	xzr, [sp, #88]
  40961c:	str	wzr, [sp, #56]
  409620:	ldr	x0, [sp, #40]
  409624:	cmp	x0, #0x0
  409628:	cset	w0, eq  // eq = none
  40962c:	and	w0, w0, #0xff
  409630:	and	x0, x0, #0xff
  409634:	cmp	x0, #0x0
  409638:	b.eq	409664 <manager_enumerate_linger_users+0x70>  // b.none
  40963c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409640:	add	x1, x0, #0x273
  409644:	adrp	x0, 43d000 <_fini+0xdb0>
  409648:	add	x4, x0, #0x378
  40964c:	mov	w3, #0x118                 	// #280
  409650:	mov	x2, x1
  409654:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409658:	add	x1, x0, #0x2a0
  40965c:	mov	w0, #0x0                   	// #0
  409660:	bl	407650 <log_assert_failed_realm@plt>
  409664:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409668:	add	x0, x0, #0x340
  40966c:	bl	407f50 <opendir@plt>
  409670:	str	x0, [sp, #88]
  409674:	ldr	x0, [sp, #88]
  409678:	cmp	x0, #0x0
  40967c:	b.ne	409728 <manager_enumerate_linger_users+0x134>  // b.any
  409680:	bl	407960 <__errno_location@plt>
  409684:	ldr	w0, [x0]
  409688:	cmp	w0, #0x2
  40968c:	b.ne	409698 <manager_enumerate_linger_users+0xa4>  // b.any
  409690:	mov	w19, #0x0                   	// #0
  409694:	b	409894 <manager_enumerate_linger_users+0x2a0>
  409698:	mov	w0, #0x3                   	// #3
  40969c:	str	w0, [sp, #76]
  4096a0:	bl	407960 <__errno_location@plt>
  4096a4:	ldr	w0, [x0]
  4096a8:	str	w0, [sp, #80]
  4096ac:	str	wzr, [sp, #84]
  4096b0:	ldr	w0, [sp, #84]
  4096b4:	bl	4083e0 <log_get_max_level_realm@plt>
  4096b8:	mov	w1, w0
  4096bc:	ldr	w0, [sp, #76]
  4096c0:	and	w0, w0, #0x7
  4096c4:	cmp	w1, w0
  4096c8:	b.lt	409710 <manager_enumerate_linger_users+0x11c>  // b.tstop
  4096cc:	ldr	w0, [sp, #84]
  4096d0:	lsl	w1, w0, #10
  4096d4:	ldr	w0, [sp, #76]
  4096d8:	orr	w6, w1, w0
  4096dc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4096e0:	add	x1, x0, #0x273
  4096e4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4096e8:	add	x5, x0, #0x358
  4096ec:	adrp	x0, 43d000 <_fini+0xdb0>
  4096f0:	add	x4, x0, #0x398
  4096f4:	mov	w3, #0x11f                 	// #287
  4096f8:	mov	x2, x1
  4096fc:	ldr	w1, [sp, #80]
  409700:	mov	w0, w6
  409704:	bl	407d60 <log_internal_realm@plt>
  409708:	mov	w19, w0
  40970c:	b	409894 <manager_enumerate_linger_users+0x2a0>
  409710:	ldr	w0, [sp, #80]
  409714:	cmp	w0, #0x0
  409718:	cneg	w0, w0, lt  // lt = tstop
  40971c:	and	w0, w0, #0xff
  409720:	neg	w19, w0
  409724:	b	409894 <manager_enumerate_linger_users+0x2a0>
  409728:	bl	407960 <__errno_location@plt>
  40972c:	str	wzr, [x0]
  409730:	ldr	x0, [sp, #88]
  409734:	bl	407670 <readdir64@plt>
  409738:	str	x0, [sp, #96]
  40973c:	ldr	x0, [sp, #96]
  409740:	cmp	x0, #0x0
  409744:	b.ne	409768 <manager_enumerate_linger_users+0x174>  // b.any
  409748:	bl	407960 <__errno_location@plt>
  40974c:	ldr	w0, [x0]
  409750:	cmp	w0, #0x0
  409754:	b.le	40988c <manager_enumerate_linger_users+0x298>
  409758:	bl	407960 <__errno_location@plt>
  40975c:	ldr	w0, [x0]
  409760:	neg	w19, w0
  409764:	b	409894 <manager_enumerate_linger_users+0x2a0>
  409768:	ldr	x0, [sp, #96]
  40976c:	add	x0, x0, #0x13
  409770:	bl	407410 <hidden_or_backup_file@plt>
  409774:	and	w0, w0, #0xff
  409778:	cmp	w0, #0x0
  40977c:	b.ne	409868 <manager_enumerate_linger_users+0x274>  // b.any
  409780:	ldr	x0, [sp, #88]
  409784:	ldr	x1, [sp, #96]
  409788:	bl	407540 <dirent_ensure_type@plt>
  40978c:	ldr	x0, [sp, #96]
  409790:	bl	408260 <dirent_is_file@plt>
  409794:	and	w0, w0, #0xff
  409798:	eor	w0, w0, #0x1
  40979c:	and	w0, w0, #0xff
  4097a0:	cmp	w0, #0x0
  4097a4:	b.ne	409870 <manager_enumerate_linger_users+0x27c>  // b.any
  4097a8:	ldr	x0, [sp, #96]
  4097ac:	add	x0, x0, #0x13
  4097b0:	mov	x2, #0x0                   	// #0
  4097b4:	mov	x1, x0
  4097b8:	ldr	x0, [sp, #40]
  4097bc:	bl	411648 <manager_add_user_by_name>
  4097c0:	str	w0, [sp, #60]
  4097c4:	ldr	w0, [sp, #60]
  4097c8:	cmp	w0, #0x0
  4097cc:	b.ge	409874 <manager_enumerate_linger_users+0x280>  // b.tcont
  4097d0:	mov	w0, #0x4                   	// #4
  4097d4:	str	w0, [sp, #64]
  4097d8:	ldr	w0, [sp, #60]
  4097dc:	str	w0, [sp, #68]
  4097e0:	str	wzr, [sp, #72]
  4097e4:	ldr	w0, [sp, #72]
  4097e8:	bl	4083e0 <log_get_max_level_realm@plt>
  4097ec:	mov	w1, w0
  4097f0:	ldr	w0, [sp, #64]
  4097f4:	and	w0, w0, #0x7
  4097f8:	cmp	w1, w0
  4097fc:	b.lt	40984c <manager_enumerate_linger_users+0x258>  // b.tstop
  409800:	ldr	w0, [sp, #72]
  409804:	lsl	w1, w0, #10
  409808:	ldr	w0, [sp, #64]
  40980c:	orr	w7, w1, w0
  409810:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409814:	add	x1, x0, #0x273
  409818:	ldr	x0, [sp, #96]
  40981c:	add	x0, x0, #0x13
  409820:	mov	x6, x0
  409824:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409828:	add	x5, x0, #0x388
  40982c:	adrp	x0, 43d000 <_fini+0xdb0>
  409830:	add	x4, x0, #0x398
  409834:	mov	w3, #0x12b                 	// #299
  409838:	mov	x2, x1
  40983c:	ldr	w1, [sp, #68]
  409840:	mov	w0, w7
  409844:	bl	407d60 <log_internal_realm@plt>
  409848:	b	409860 <manager_enumerate_linger_users+0x26c>
  40984c:	ldr	w0, [sp, #68]
  409850:	cmp	w0, #0x0
  409854:	cneg	w0, w0, lt  // lt = tstop
  409858:	and	w0, w0, #0xff
  40985c:	neg	w0, w0
  409860:	str	w0, [sp, #56]
  409864:	b	409874 <manager_enumerate_linger_users+0x280>
  409868:	nop
  40986c:	b	409874 <manager_enumerate_linger_users+0x280>
  409870:	nop
  409874:	bl	407960 <__errno_location@plt>
  409878:	str	wzr, [x0]
  40987c:	ldr	x0, [sp, #88]
  409880:	bl	407670 <readdir64@plt>
  409884:	str	x0, [sp, #96]
  409888:	b	40973c <manager_enumerate_linger_users+0x148>
  40988c:	nop
  409890:	ldr	w19, [sp, #56]
  409894:	add	x0, sp, #0x58
  409898:	bl	40891c <closedirp>
  40989c:	mov	w1, w19
  4098a0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4098a4:	add	x0, x0, #0x508
  4098a8:	ldr	x2, [sp, #104]
  4098ac:	ldr	x0, [x0]
  4098b0:	eor	x0, x2, x0
  4098b4:	cmp	x0, #0x0
  4098b8:	b.eq	4098c0 <manager_enumerate_linger_users+0x2cc>  // b.none
  4098bc:	bl	407b20 <__stack_chk_fail@plt>
  4098c0:	mov	w0, w1
  4098c4:	ldr	x19, [sp, #16]
  4098c8:	ldp	x29, x30, [sp], #112
  4098cc:	ret

00000000004098d0 <manager_enumerate_users>:
  4098d0:	stp	x29, x30, [sp, #-112]!
  4098d4:	mov	x29, sp
  4098d8:	str	x19, [sp, #16]
  4098dc:	str	x0, [sp, #40]
  4098e0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4098e4:	add	x0, x0, #0x508
  4098e8:	ldr	x1, [x0]
  4098ec:	str	x1, [sp, #104]
  4098f0:	mov	x1, #0x0                   	// #0
  4098f4:	str	xzr, [sp, #80]
  4098f8:	ldr	x0, [sp, #40]
  4098fc:	cmp	x0, #0x0
  409900:	cset	w0, eq  // eq = none
  409904:	and	w0, w0, #0xff
  409908:	and	x0, x0, #0xff
  40990c:	cmp	x0, #0x0
  409910:	b.eq	40993c <manager_enumerate_users+0x6c>  // b.none
  409914:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409918:	add	x1, x0, #0x273
  40991c:	adrp	x0, 43d000 <_fini+0xdb0>
  409920:	add	x4, x0, #0x3b8
  409924:	mov	w3, #0x136                 	// #310
  409928:	mov	x2, x1
  40992c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409930:	add	x1, x0, #0x2a0
  409934:	mov	w0, #0x0                   	// #0
  409938:	bl	407650 <log_assert_failed_realm@plt>
  40993c:	ldr	x0, [sp, #40]
  409940:	bl	4095f4 <manager_enumerate_linger_users>
  409944:	str	w0, [sp, #48]
  409948:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40994c:	add	x0, x0, #0x3b8
  409950:	bl	407f50 <opendir@plt>
  409954:	str	x0, [sp, #80]
  409958:	ldr	x0, [sp, #80]
  40995c:	cmp	x0, #0x0
  409960:	b.ne	409a0c <manager_enumerate_users+0x13c>  // b.any
  409964:	bl	407960 <__errno_location@plt>
  409968:	ldr	w0, [x0]
  40996c:	cmp	w0, #0x2
  409970:	b.ne	40997c <manager_enumerate_users+0xac>  // b.any
  409974:	mov	w19, #0x0                   	// #0
  409978:	b	409b9c <manager_enumerate_users+0x2cc>
  40997c:	mov	w0, #0x3                   	// #3
  409980:	str	w0, [sp, #68]
  409984:	bl	407960 <__errno_location@plt>
  409988:	ldr	w0, [x0]
  40998c:	str	w0, [sp, #72]
  409990:	str	wzr, [sp, #76]
  409994:	ldr	w0, [sp, #76]
  409998:	bl	4083e0 <log_get_max_level_realm@plt>
  40999c:	mov	w1, w0
  4099a0:	ldr	w0, [sp, #68]
  4099a4:	and	w0, w0, #0x7
  4099a8:	cmp	w1, w0
  4099ac:	b.lt	4099f4 <manager_enumerate_users+0x124>  // b.tstop
  4099b0:	ldr	w0, [sp, #76]
  4099b4:	lsl	w1, w0, #10
  4099b8:	ldr	w0, [sp, #68]
  4099bc:	orr	w6, w1, w0
  4099c0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4099c4:	add	x1, x0, #0x273
  4099c8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  4099cc:	add	x5, x0, #0x3d0
  4099d0:	adrp	x0, 43d000 <_fini+0xdb0>
  4099d4:	add	x4, x0, #0x3d0
  4099d8:	mov	w3, #0x141                 	// #321
  4099dc:	mov	x2, x1
  4099e0:	ldr	w1, [sp, #72]
  4099e4:	mov	w0, w6
  4099e8:	bl	407d60 <log_internal_realm@plt>
  4099ec:	mov	w19, w0
  4099f0:	b	409b9c <manager_enumerate_users+0x2cc>
  4099f4:	ldr	w0, [sp, #72]
  4099f8:	cmp	w0, #0x0
  4099fc:	cneg	w0, w0, lt  // lt = tstop
  409a00:	and	w0, w0, #0xff
  409a04:	neg	w19, w0
  409a08:	b	409b9c <manager_enumerate_users+0x2cc>
  409a0c:	bl	407960 <__errno_location@plt>
  409a10:	str	wzr, [x0]
  409a14:	ldr	x0, [sp, #80]
  409a18:	bl	407670 <readdir64@plt>
  409a1c:	str	x0, [sp, #96]
  409a20:	ldr	x0, [sp, #96]
  409a24:	cmp	x0, #0x0
  409a28:	b.ne	409a4c <manager_enumerate_users+0x17c>  // b.any
  409a2c:	bl	407960 <__errno_location@plt>
  409a30:	ldr	w0, [x0]
  409a34:	cmp	w0, #0x0
  409a38:	b.le	409b94 <manager_enumerate_users+0x2c4>
  409a3c:	bl	407960 <__errno_location@plt>
  409a40:	ldr	w0, [x0]
  409a44:	neg	w19, w0
  409a48:	b	409b9c <manager_enumerate_users+0x2cc>
  409a4c:	ldr	x0, [sp, #96]
  409a50:	add	x0, x0, #0x13
  409a54:	bl	407410 <hidden_or_backup_file@plt>
  409a58:	and	w0, w0, #0xff
  409a5c:	cmp	w0, #0x0
  409a60:	b.ne	409b70 <manager_enumerate_users+0x2a0>  // b.any
  409a64:	ldr	x0, [sp, #96]
  409a68:	bl	408260 <dirent_is_file@plt>
  409a6c:	and	w0, w0, #0xff
  409a70:	eor	w0, w0, #0x1
  409a74:	and	w0, w0, #0xff
  409a78:	cmp	w0, #0x0
  409a7c:	b.ne	409b78 <manager_enumerate_users+0x2a8>  // b.any
  409a80:	ldr	x0, [sp, #96]
  409a84:	add	x0, x0, #0x13
  409a88:	add	x1, sp, #0x58
  409a8c:	mov	x2, x1
  409a90:	mov	x1, x0
  409a94:	ldr	x0, [sp, #40]
  409a98:	bl	411648 <manager_add_user_by_name>
  409a9c:	str	w0, [sp, #52]
  409aa0:	ldr	w0, [sp, #52]
  409aa4:	cmp	w0, #0x0
  409aa8:	b.ge	409b44 <manager_enumerate_users+0x274>  // b.tcont
  409aac:	mov	w0, #0x4                   	// #4
  409ab0:	str	w0, [sp, #56]
  409ab4:	ldr	w0, [sp, #52]
  409ab8:	str	w0, [sp, #60]
  409abc:	str	wzr, [sp, #64]
  409ac0:	ldr	w0, [sp, #64]
  409ac4:	bl	4083e0 <log_get_max_level_realm@plt>
  409ac8:	mov	w1, w0
  409acc:	ldr	w0, [sp, #56]
  409ad0:	and	w0, w0, #0x7
  409ad4:	cmp	w1, w0
  409ad8:	b.lt	409b28 <manager_enumerate_users+0x258>  // b.tstop
  409adc:	ldr	w0, [sp, #64]
  409ae0:	lsl	w1, w0, #10
  409ae4:	ldr	w0, [sp, #56]
  409ae8:	orr	w7, w1, w0
  409aec:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409af0:	add	x1, x0, #0x273
  409af4:	ldr	x0, [sp, #96]
  409af8:	add	x0, x0, #0x13
  409afc:	mov	x6, x0
  409b00:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409b04:	add	x5, x0, #0x3f8
  409b08:	adrp	x0, 43d000 <_fini+0xdb0>
  409b0c:	add	x4, x0, #0x3d0
  409b10:	mov	w3, #0x14c                 	// #332
  409b14:	mov	x2, x1
  409b18:	ldr	w1, [sp, #60]
  409b1c:	mov	w0, w7
  409b20:	bl	407d60 <log_internal_realm@plt>
  409b24:	b	409b3c <manager_enumerate_users+0x26c>
  409b28:	ldr	w0, [sp, #60]
  409b2c:	cmp	w0, #0x0
  409b30:	cneg	w0, w0, lt  // lt = tstop
  409b34:	and	w0, w0, #0xff
  409b38:	neg	w0, w0
  409b3c:	str	w0, [sp, #48]
  409b40:	b	409b7c <manager_enumerate_users+0x2ac>
  409b44:	ldr	x0, [sp, #88]
  409b48:	bl	438778 <user_add_to_gc_queue>
  409b4c:	ldr	x0, [sp, #88]
  409b50:	bl	437298 <user_load>
  409b54:	str	w0, [sp, #52]
  409b58:	ldr	w0, [sp, #52]
  409b5c:	cmp	w0, #0x0
  409b60:	b.ge	409b7c <manager_enumerate_users+0x2ac>  // b.tcont
  409b64:	ldr	w0, [sp, #52]
  409b68:	str	w0, [sp, #48]
  409b6c:	b	409b7c <manager_enumerate_users+0x2ac>
  409b70:	nop
  409b74:	b	409b7c <manager_enumerate_users+0x2ac>
  409b78:	nop
  409b7c:	bl	407960 <__errno_location@plt>
  409b80:	str	wzr, [x0]
  409b84:	ldr	x0, [sp, #80]
  409b88:	bl	407670 <readdir64@plt>
  409b8c:	str	x0, [sp, #96]
  409b90:	b	409a20 <manager_enumerate_users+0x150>
  409b94:	nop
  409b98:	ldr	w19, [sp, #48]
  409b9c:	add	x0, sp, #0x50
  409ba0:	bl	40891c <closedirp>
  409ba4:	mov	w1, w19
  409ba8:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409bac:	add	x0, x0, #0x508
  409bb0:	ldr	x2, [sp, #104]
  409bb4:	ldr	x0, [x0]
  409bb8:	eor	x0, x2, x0
  409bbc:	cmp	x0, #0x0
  409bc0:	b.eq	409bc8 <manager_enumerate_users+0x2f8>  // b.none
  409bc4:	bl	407b20 <__stack_chk_fail@plt>
  409bc8:	mov	w0, w1
  409bcc:	ldr	x19, [sp, #16]
  409bd0:	ldp	x29, x30, [sp], #112
  409bd4:	ret

0000000000409bd8 <parse_fdname>:
  409bd8:	stp	x29, x30, [sp, #-112]!
  409bdc:	mov	x29, sp
  409be0:	str	x19, [sp, #16]
  409be4:	str	x0, [sp, #56]
  409be8:	str	x1, [sp, #48]
  409bec:	str	x2, [sp, #40]
  409bf0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409bf4:	add	x0, x0, #0x508
  409bf8:	ldr	x1, [x0]
  409bfc:	str	x1, [sp, #104]
  409c00:	mov	x1, #0x0                   	// #0
  409c04:	str	xzr, [sp, #80]
  409c08:	str	xzr, [sp, #88]
  409c0c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409c10:	add	x1, x0, #0x430
  409c14:	ldr	x0, [sp, #56]
  409c18:	bl	4088d0 <strv_split>
  409c1c:	str	x0, [sp, #80]
  409c20:	ldr	x0, [sp, #80]
  409c24:	cmp	x0, #0x0
  409c28:	b.ne	409c34 <parse_fdname+0x5c>  // b.any
  409c2c:	mov	w19, #0xfffffff4            	// #-12
  409c30:	b	409d54 <parse_fdname+0x17c>
  409c34:	ldr	x0, [sp, #80]
  409c38:	bl	407c70 <strv_length@plt>
  409c3c:	cmp	x0, #0x5
  409c40:	b.eq	409c4c <parse_fdname+0x74>  // b.none
  409c44:	mov	w19, #0xffffffea            	// #-22
  409c48:	b	409d54 <parse_fdname+0x17c>
  409c4c:	ldr	x0, [sp, #80]
  409c50:	ldr	x2, [x0]
  409c54:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409c58:	add	x1, x0, #0x438
  409c5c:	mov	x0, x2
  409c60:	bl	407f30 <strcmp@plt>
  409c64:	cmp	w0, #0x0
  409c68:	b.eq	409c74 <parse_fdname+0x9c>  // b.none
  409c6c:	mov	w19, #0xffffffea            	// #-22
  409c70:	b	409d54 <parse_fdname+0x17c>
  409c74:	ldr	x0, [sp, #80]
  409c78:	add	x0, x0, #0x8
  409c7c:	ldr	x0, [x0]
  409c80:	bl	407f90 <strdup@plt>
  409c84:	str	x0, [sp, #88]
  409c88:	ldr	x0, [sp, #88]
  409c8c:	cmp	x0, #0x0
  409c90:	b.ne	409c9c <parse_fdname+0xc4>  // b.any
  409c94:	mov	w19, #0xfffffff4            	// #-12
  409c98:	b	409d54 <parse_fdname+0x17c>
  409c9c:	ldr	x0, [sp, #80]
  409ca0:	add	x0, x0, #0x10
  409ca4:	ldr	x2, [x0]
  409ca8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409cac:	add	x1, x0, #0x440
  409cb0:	mov	x0, x2
  409cb4:	bl	407f30 <strcmp@plt>
  409cb8:	cmp	w0, #0x0
  409cbc:	b.eq	409cc8 <parse_fdname+0xf0>  // b.none
  409cc0:	mov	w19, #0xffffffea            	// #-22
  409cc4:	b	409d54 <parse_fdname+0x17c>
  409cc8:	ldr	x0, [sp, #80]
  409ccc:	add	x0, x0, #0x18
  409cd0:	ldr	x0, [x0]
  409cd4:	add	x1, sp, #0x44
  409cd8:	bl	4089d8 <safe_atou>
  409cdc:	str	w0, [sp, #76]
  409ce0:	ldr	w0, [sp, #76]
  409ce4:	cmp	w0, #0x0
  409ce8:	b.ge	409cf4 <parse_fdname+0x11c>  // b.tcont
  409cec:	ldr	w19, [sp, #76]
  409cf0:	b	409d54 <parse_fdname+0x17c>
  409cf4:	ldr	x0, [sp, #80]
  409cf8:	add	x0, x0, #0x20
  409cfc:	ldr	x0, [x0]
  409d00:	add	x1, sp, #0x48
  409d04:	bl	4089d8 <safe_atou>
  409d08:	str	w0, [sp, #76]
  409d0c:	ldr	w0, [sp, #76]
  409d10:	cmp	w0, #0x0
  409d14:	b.ge	409d20 <parse_fdname+0x148>  // b.tcont
  409d18:	ldr	w19, [sp, #76]
  409d1c:	b	409d54 <parse_fdname+0x17c>
  409d20:	ldr	w0, [sp, #68]
  409d24:	ldr	w1, [sp, #72]
  409d28:	bl	407b00 <gnu_dev_makedev@plt>
  409d2c:	mov	x1, x0
  409d30:	ldr	x0, [sp, #40]
  409d34:	str	x1, [x0]
  409d38:	ldr	x0, [sp, #88]
  409d3c:	str	x0, [sp, #96]
  409d40:	str	xzr, [sp, #88]
  409d44:	ldr	x1, [sp, #96]
  409d48:	ldr	x0, [sp, #48]
  409d4c:	str	x1, [x0]
  409d50:	mov	w19, #0x0                   	// #0
  409d54:	add	x0, sp, #0x58
  409d58:	bl	40867c <freep>
  409d5c:	add	x0, sp, #0x50
  409d60:	bl	40889c <strv_freep>
  409d64:	mov	w1, w19
  409d68:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409d6c:	add	x0, x0, #0x508
  409d70:	ldr	x2, [sp, #104]
  409d74:	ldr	x0, [x0]
  409d78:	eor	x0, x2, x0
  409d7c:	cmp	x0, #0x0
  409d80:	b.eq	409d88 <parse_fdname+0x1b0>  // b.none
  409d84:	bl	407b20 <__stack_chk_fail@plt>
  409d88:	mov	w0, w1
  409d8c:	ldr	x19, [sp, #16]
  409d90:	ldp	x29, x30, [sp], #112
  409d94:	ret

0000000000409d98 <deliver_fd>:
  409d98:	sub	sp, sp, #0x160
  409d9c:	stp	x29, x30, [sp, #16]
  409da0:	add	x29, sp, #0x10
  409da4:	stp	x19, x20, [sp, #32]
  409da8:	str	x21, [sp, #48]
  409dac:	str	x0, [sp, #88]
  409db0:	str	x1, [sp, #80]
  409db4:	str	w2, [sp, #76]
  409db8:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  409dbc:	add	x0, x0, #0x508
  409dc0:	ldr	x1, [x0]
  409dc4:	str	x1, [sp, #344]
  409dc8:	mov	x1, #0x0                   	// #0
  409dcc:	str	xzr, [sp, #184]
  409dd0:	ldr	x0, [sp, #88]
  409dd4:	cmp	x0, #0x0
  409dd8:	cset	w0, eq  // eq = none
  409ddc:	and	w0, w0, #0xff
  409de0:	and	x0, x0, #0xff
  409de4:	cmp	x0, #0x0
  409de8:	b.eq	409e14 <deliver_fd+0x7c>  // b.none
  409dec:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409df0:	add	x1, x0, #0x273
  409df4:	adrp	x0, 43d000 <_fini+0xdb0>
  409df8:	add	x4, x0, #0x3e8
  409dfc:	mov	w3, #0x185                 	// #389
  409e00:	mov	x2, x1
  409e04:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409e08:	add	x1, x0, #0x2a0
  409e0c:	mov	w0, #0x0                   	// #0
  409e10:	bl	407650 <log_assert_failed_realm@plt>
  409e14:	ldr	w0, [sp, #76]
  409e18:	lsr	w0, w0, #31
  409e1c:	and	w0, w0, #0xff
  409e20:	and	x0, x0, #0xff
  409e24:	cmp	x0, #0x0
  409e28:	b.eq	409e54 <deliver_fd+0xbc>  // b.none
  409e2c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409e30:	add	x1, x0, #0x273
  409e34:	adrp	x0, 43d000 <_fini+0xdb0>
  409e38:	add	x4, x0, #0x3e8
  409e3c:	mov	w3, #0x186                 	// #390
  409e40:	mov	x2, x1
  409e44:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409e48:	add	x1, x0, #0x448
  409e4c:	mov	w0, #0x0                   	// #0
  409e50:	bl	407650 <log_assert_failed_realm@plt>
  409e54:	add	x1, sp, #0xc0
  409e58:	add	x0, sp, #0xb8
  409e5c:	mov	x2, x1
  409e60:	mov	x1, x0
  409e64:	ldr	x0, [sp, #80]
  409e68:	bl	409bd8 <parse_fdname>
  409e6c:	str	w0, [sp, #108]
  409e70:	ldr	w0, [sp, #108]
  409e74:	cmp	w0, #0x0
  409e78:	b.ge	409f0c <deliver_fd+0x174>  // b.tcont
  409e7c:	mov	w0, #0x7                   	// #7
  409e80:	str	w0, [sp, #172]
  409e84:	ldr	w0, [sp, #108]
  409e88:	str	w0, [sp, #176]
  409e8c:	str	wzr, [sp, #180]
  409e90:	ldr	w0, [sp, #180]
  409e94:	bl	4083e0 <log_get_max_level_realm@plt>
  409e98:	mov	w1, w0
  409e9c:	ldr	w0, [sp, #172]
  409ea0:	and	w0, w0, #0x7
  409ea4:	cmp	w1, w0
  409ea8:	b.lt	409ef4 <deliver_fd+0x15c>  // b.tstop
  409eac:	ldr	w0, [sp, #180]
  409eb0:	lsl	w1, w0, #10
  409eb4:	ldr	w0, [sp, #172]
  409eb8:	orr	w7, w1, w0
  409ebc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409ec0:	add	x1, x0, #0x273
  409ec4:	ldr	x6, [sp, #80]
  409ec8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409ecc:	add	x5, x0, #0x450
  409ed0:	adrp	x0, 43d000 <_fini+0xdb0>
  409ed4:	add	x4, x0, #0x3f8
  409ed8:	mov	w3, #0x18a                 	// #394
  409edc:	mov	x2, x1
  409ee0:	ldr	w1, [sp, #176]
  409ee4:	mov	w0, w7
  409ee8:	bl	407d60 <log_internal_realm@plt>
  409eec:	mov	w19, w0
  409ef0:	b	40a2c4 <deliver_fd+0x52c>
  409ef4:	ldr	w0, [sp, #176]
  409ef8:	cmp	w0, #0x0
  409efc:	cneg	w0, w0, lt  // lt = tstop
  409f00:	and	w0, w0, #0xff
  409f04:	neg	w19, w0
  409f08:	b	40a2c4 <deliver_fd+0x52c>
  409f0c:	ldr	x0, [sp, #88]
  409f10:	ldr	x0, [x0, #32]
  409f14:	ldr	x1, [sp, #184]
  409f18:	bl	4087cc <hashmap_get>
  409f1c:	str	x0, [sp, #200]
  409f20:	ldr	x0, [sp, #200]
  409f24:	cmp	x0, #0x0
  409f28:	b.ne	409fc4 <deliver_fd+0x22c>  // b.any
  409f2c:	mov	w0, #0x7                   	// #7
  409f30:	str	w0, [sp, #160]
  409f34:	mov	w0, #0x6                   	// #6
  409f38:	movk	w0, #0x4000, lsl #16
  409f3c:	str	w0, [sp, #164]
  409f40:	str	wzr, [sp, #168]
  409f44:	ldr	w0, [sp, #168]
  409f48:	bl	4083e0 <log_get_max_level_realm@plt>
  409f4c:	mov	w1, w0
  409f50:	ldr	w0, [sp, #160]
  409f54:	and	w0, w0, #0x7
  409f58:	cmp	w1, w0
  409f5c:	b.lt	409fac <deliver_fd+0x214>  // b.tstop
  409f60:	ldr	w0, [sp, #168]
  409f64:	lsl	w1, w0, #10
  409f68:	ldr	w0, [sp, #160]
  409f6c:	orr	w7, w1, w0
  409f70:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409f74:	add	x1, x0, #0x273
  409f78:	ldr	x0, [sp, #184]
  409f7c:	mov	x6, x0
  409f80:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  409f84:	add	x5, x0, #0x470
  409f88:	adrp	x0, 43d000 <_fini+0xdb0>
  409f8c:	add	x4, x0, #0x3f8
  409f90:	mov	w3, #0x190                 	// #400
  409f94:	mov	x2, x1
  409f98:	ldr	w1, [sp, #164]
  409f9c:	mov	w0, w7
  409fa0:	bl	407d60 <log_internal_realm@plt>
  409fa4:	mov	w19, w0
  409fa8:	b	40a2c4 <deliver_fd+0x52c>
  409fac:	ldr	w0, [sp, #164]
  409fb0:	cmp	w0, #0x0
  409fb4:	cneg	w0, w0, lt  // lt = tstop
  409fb8:	and	w0, w0, #0xff
  409fbc:	neg	w19, w0
  409fc0:	b	40a2c4 <deliver_fd+0x52c>
  409fc4:	add	x0, sp, #0xd8
  409fc8:	mov	x1, x0
  409fcc:	ldr	w0, [sp, #76]
  409fd0:	bl	43c230 <fstat64>
  409fd4:	cmp	w0, #0x0
  409fd8:	b.ge	40a074 <deliver_fd+0x2dc>  // b.tcont
  409fdc:	mov	w0, #0x7                   	// #7
  409fe0:	str	w0, [sp, #148]
  409fe4:	bl	407960 <__errno_location@plt>
  409fe8:	ldr	w0, [x0]
  409fec:	str	w0, [sp, #152]
  409ff0:	str	wzr, [sp, #156]
  409ff4:	ldr	w0, [sp, #156]
  409ff8:	bl	4083e0 <log_get_max_level_realm@plt>
  409ffc:	mov	w1, w0
  40a000:	ldr	w0, [sp, #148]
  40a004:	and	w0, w0, #0x7
  40a008:	cmp	w1, w0
  40a00c:	b.lt	40a05c <deliver_fd+0x2c4>  // b.tstop
  40a010:	ldr	w0, [sp, #156]
  40a014:	lsl	w1, w0, #10
  40a018:	ldr	w0, [sp, #148]
  40a01c:	orr	w7, w1, w0
  40a020:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a024:	add	x1, x0, #0x273
  40a028:	ldr	x0, [sp, #184]
  40a02c:	mov	x6, x0
  40a030:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a034:	add	x5, x0, #0x4a0
  40a038:	adrp	x0, 43d000 <_fini+0xdb0>
  40a03c:	add	x4, x0, #0x3f8
  40a040:	mov	w3, #0x195                 	// #405
  40a044:	mov	x2, x1
  40a048:	ldr	w1, [sp, #152]
  40a04c:	mov	w0, w7
  40a050:	bl	407d60 <log_internal_realm@plt>
  40a054:	mov	w19, w0
  40a058:	b	40a2c4 <deliver_fd+0x52c>
  40a05c:	ldr	w0, [sp, #152]
  40a060:	cmp	w0, #0x0
  40a064:	cneg	w0, w0, lt  // lt = tstop
  40a068:	and	w0, w0, #0xff
  40a06c:	neg	w19, w0
  40a070:	b	40a2c4 <deliver_fd+0x52c>
  40a074:	ldr	w0, [sp, #232]
  40a078:	and	w0, w0, #0xf000
  40a07c:	cmp	w0, #0x2, lsl #12
  40a080:	b.ne	40a094 <deliver_fd+0x2fc>  // b.any
  40a084:	ldr	x1, [sp, #248]
  40a088:	ldr	x0, [sp, #192]
  40a08c:	cmp	x1, x0
  40a090:	b.eq	40a124 <deliver_fd+0x38c>  // b.none
  40a094:	mov	w0, #0x7                   	// #7
  40a098:	str	w0, [sp, #136]
  40a09c:	mov	w0, #0x13                  	// #19
  40a0a0:	movk	w0, #0x4000, lsl #16
  40a0a4:	str	w0, [sp, #140]
  40a0a8:	str	wzr, [sp, #144]
  40a0ac:	ldr	w0, [sp, #144]
  40a0b0:	bl	4083e0 <log_get_max_level_realm@plt>
  40a0b4:	mov	w1, w0
  40a0b8:	ldr	w0, [sp, #136]
  40a0bc:	and	w0, w0, #0x7
  40a0c0:	cmp	w1, w0
  40a0c4:	b.lt	40a10c <deliver_fd+0x374>  // b.tstop
  40a0c8:	ldr	w0, [sp, #144]
  40a0cc:	lsl	w1, w0, #10
  40a0d0:	ldr	w0, [sp, #136]
  40a0d4:	orr	w6, w1, w0
  40a0d8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a0dc:	add	x1, x0, #0x273
  40a0e0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a0e4:	add	x5, x0, #0x4d0
  40a0e8:	adrp	x0, 43d000 <_fini+0xdb0>
  40a0ec:	add	x4, x0, #0x3f8
  40a0f0:	mov	w3, #0x198                 	// #408
  40a0f4:	mov	x2, x1
  40a0f8:	ldr	w1, [sp, #140]
  40a0fc:	mov	w0, w6
  40a100:	bl	407d60 <log_internal_realm@plt>
  40a104:	mov	w19, w0
  40a108:	b	40a2c4 <deliver_fd+0x52c>
  40a10c:	ldr	w0, [sp, #140]
  40a110:	cmp	w0, #0x0
  40a114:	cneg	w0, w0, lt  // lt = tstop
  40a118:	and	w0, w0, #0xff
  40a11c:	neg	w19, w0
  40a120:	b	40a2c4 <deliver_fd+0x52c>
  40a124:	ldr	x0, [sp, #200]
  40a128:	ldr	x0, [x0, #240]
  40a12c:	add	x1, sp, #0xc0
  40a130:	bl	4087cc <hashmap_get>
  40a134:	str	x0, [sp, #208]
  40a138:	ldr	x0, [sp, #208]
  40a13c:	cmp	x0, #0x0
  40a140:	b.ne	40a200 <deliver_fd+0x468>  // b.any
  40a144:	mov	w0, #0x4                   	// #4
  40a148:	str	w0, [sp, #124]
  40a14c:	mov	w0, #0x13                  	// #19
  40a150:	movk	w0, #0x4000, lsl #16
  40a154:	str	w0, [sp, #128]
  40a158:	str	wzr, [sp, #132]
  40a15c:	ldr	w0, [sp, #132]
  40a160:	bl	4083e0 <log_get_max_level_realm@plt>
  40a164:	mov	w1, w0
  40a168:	ldr	w0, [sp, #124]
  40a16c:	and	w0, w0, #0x7
  40a170:	cmp	w1, w0
  40a174:	b.lt	40a1e8 <deliver_fd+0x450>  // b.tstop
  40a178:	ldr	w0, [sp, #132]
  40a17c:	lsl	w1, w0, #10
  40a180:	ldr	w0, [sp, #124]
  40a184:	orr	w19, w1, w0
  40a188:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a18c:	add	x20, x0, #0x273
  40a190:	ldr	x0, [sp, #192]
  40a194:	bl	407e60 <gnu_dev_major@plt>
  40a198:	mov	w21, w0
  40a19c:	ldr	x0, [sp, #192]
  40a1a0:	bl	408160 <gnu_dev_minor@plt>
  40a1a4:	mov	w1, w0
  40a1a8:	ldr	x0, [sp, #200]
  40a1ac:	ldr	x0, [x0, #8]
  40a1b0:	str	x0, [sp]
  40a1b4:	mov	w7, w1
  40a1b8:	mov	w6, w21
  40a1bc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a1c0:	add	x5, x0, #0x510
  40a1c4:	adrp	x0, 43d000 <_fini+0xdb0>
  40a1c8:	add	x4, x0, #0x3f8
  40a1cc:	mov	w3, #0x19e                 	// #414
  40a1d0:	mov	x2, x20
  40a1d4:	ldr	w1, [sp, #128]
  40a1d8:	mov	w0, w19
  40a1dc:	bl	407d60 <log_internal_realm@plt>
  40a1e0:	mov	w19, w0
  40a1e4:	b	40a2c4 <deliver_fd+0x52c>
  40a1e8:	ldr	w0, [sp, #128]
  40a1ec:	cmp	w0, #0x0
  40a1f0:	cneg	w0, w0, lt  // lt = tstop
  40a1f4:	and	w0, w0, #0xff
  40a1f8:	neg	w19, w0
  40a1fc:	b	40a2c4 <deliver_fd+0x52c>
  40a200:	mov	w0, #0x7                   	// #7
  40a204:	str	w0, [sp, #112]
  40a208:	str	wzr, [sp, #116]
  40a20c:	str	wzr, [sp, #120]
  40a210:	ldr	w0, [sp, #120]
  40a214:	bl	4083e0 <log_get_max_level_realm@plt>
  40a218:	mov	w1, w0
  40a21c:	ldr	w0, [sp, #112]
  40a220:	and	w0, w0, #0x7
  40a224:	cmp	w1, w0
  40a228:	b.lt	40a298 <deliver_fd+0x500>  // b.tstop
  40a22c:	ldr	w0, [sp, #120]
  40a230:	lsl	w1, w0, #10
  40a234:	ldr	w0, [sp, #112]
  40a238:	orr	w19, w1, w0
  40a23c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a240:	add	x20, x0, #0x273
  40a244:	ldr	x0, [sp, #192]
  40a248:	bl	407e60 <gnu_dev_major@plt>
  40a24c:	mov	w21, w0
  40a250:	ldr	x0, [sp, #192]
  40a254:	bl	408160 <gnu_dev_minor@plt>
  40a258:	mov	w1, w0
  40a25c:	ldr	x0, [sp, #200]
  40a260:	ldr	x0, [x0, #8]
  40a264:	str	x0, [sp]
  40a268:	mov	w7, w1
  40a26c:	mov	w6, w21
  40a270:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a274:	add	x5, x0, #0x548
  40a278:	adrp	x0, 43d000 <_fini+0xdb0>
  40a27c:	add	x4, x0, #0x3f8
  40a280:	mov	w3, #0x1a1                 	// #417
  40a284:	mov	x2, x20
  40a288:	ldr	w1, [sp, #116]
  40a28c:	mov	w0, w19
  40a290:	bl	407d60 <log_internal_realm@plt>
  40a294:	b	40a2a0 <deliver_fd+0x508>
  40a298:	ldr	w0, [sp, #116]
  40a29c:	cmp	w0, #0x0
  40a2a0:	ldr	x0, [sp, #200]
  40a2a4:	ldrb	w0, [x0, #209]
  40a2a8:	ubfx	x0, x0, #3, #1
  40a2ac:	and	w0, w0, #0xff
  40a2b0:	mov	w2, w0
  40a2b4:	ldr	w1, [sp, #76]
  40a2b8:	ldr	x0, [sp, #208]
  40a2bc:	bl	42ec28 <session_device_attach_fd>
  40a2c0:	mov	w19, #0x0                   	// #0
  40a2c4:	add	x0, sp, #0xb8
  40a2c8:	bl	40867c <freep>
  40a2cc:	mov	w1, w19
  40a2d0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40a2d4:	add	x0, x0, #0x508
  40a2d8:	ldr	x2, [sp, #344]
  40a2dc:	ldr	x0, [x0]
  40a2e0:	eor	x0, x2, x0
  40a2e4:	cmp	x0, #0x0
  40a2e8:	b.eq	40a2f0 <deliver_fd+0x558>  // b.none
  40a2ec:	bl	407b20 <__stack_chk_fail@plt>
  40a2f0:	mov	w0, w1
  40a2f4:	ldp	x19, x20, [sp, #32]
  40a2f8:	ldr	x21, [sp, #48]
  40a2fc:	ldp	x29, x30, [sp, #16]
  40a300:	add	sp, sp, #0x160
  40a304:	ret

000000000040a308 <manager_attach_fds>:
  40a308:	stp	x29, x30, [sp, #-96]!
  40a30c:	mov	x29, sp
  40a310:	str	x19, [sp, #16]
  40a314:	str	x0, [sp, #40]
  40a318:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40a31c:	add	x0, x0, #0x508
  40a320:	ldr	x1, [x0]
  40a324:	str	x1, [sp, #88]
  40a328:	mov	x1, #0x0                   	// #0
  40a32c:	str	xzr, [sp, #80]
  40a330:	add	x0, sp, #0x50
  40a334:	mov	x1, x0
  40a338:	mov	w0, #0x1                   	// #1
  40a33c:	bl	4079e0 <sd_listen_fds_with_names@plt>
  40a340:	str	w0, [sp, #60]
  40a344:	ldr	w0, [sp, #60]
  40a348:	cmp	w0, #0x0
  40a34c:	b.ge	40a3dc <manager_attach_fds+0xd4>  // b.tcont
  40a350:	mov	w0, #0x4                   	// #4
  40a354:	str	w0, [sp, #68]
  40a358:	ldr	w0, [sp, #60]
  40a35c:	str	w0, [sp, #72]
  40a360:	str	wzr, [sp, #76]
  40a364:	ldr	w0, [sp, #76]
  40a368:	bl	4083e0 <log_get_max_level_realm@plt>
  40a36c:	mov	w1, w0
  40a370:	ldr	w0, [sp, #68]
  40a374:	and	w0, w0, #0x7
  40a378:	cmp	w1, w0
  40a37c:	b.lt	40a3c4 <manager_attach_fds+0xbc>  // b.tstop
  40a380:	ldr	w0, [sp, #76]
  40a384:	lsl	w1, w0, #10
  40a388:	ldr	w0, [sp, #68]
  40a38c:	orr	w6, w1, w0
  40a390:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a394:	add	x1, x0, #0x273
  40a398:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a39c:	add	x5, x0, #0x580
  40a3a0:	adrp	x0, 43d000 <_fini+0xdb0>
  40a3a4:	add	x4, x0, #0x408
  40a3a8:	mov	w3, #0x1b1                 	// #433
  40a3ac:	mov	x2, x1
  40a3b0:	ldr	w1, [sp, #72]
  40a3b4:	mov	w0, w6
  40a3b8:	bl	407d60 <log_internal_realm@plt>
  40a3bc:	mov	w19, w0
  40a3c0:	b	40a488 <manager_attach_fds+0x180>
  40a3c4:	ldr	w0, [sp, #72]
  40a3c8:	cmp	w0, #0x0
  40a3cc:	cneg	w0, w0, lt  // lt = tstop
  40a3d0:	and	w0, w0, #0xff
  40a3d4:	neg	w19, w0
  40a3d8:	b	40a488 <manager_attach_fds+0x180>
  40a3dc:	ldr	w0, [sp, #60]
  40a3e0:	cmp	w0, #0x0
  40a3e4:	b.ne	40a3f0 <manager_attach_fds+0xe8>  // b.any
  40a3e8:	mov	w19, #0x0                   	// #0
  40a3ec:	b	40a488 <manager_attach_fds+0x180>
  40a3f0:	str	wzr, [sp, #56]
  40a3f4:	b	40a474 <manager_attach_fds+0x16c>
  40a3f8:	ldr	w0, [sp, #56]
  40a3fc:	add	w0, w0, #0x3
  40a400:	str	w0, [sp, #64]
  40a404:	ldr	x1, [sp, #80]
  40a408:	ldrsw	x0, [sp, #56]
  40a40c:	lsl	x0, x0, #3
  40a410:	add	x0, x1, x0
  40a414:	ldr	x0, [x0]
  40a418:	ldr	w2, [sp, #64]
  40a41c:	mov	x1, x0
  40a420:	ldr	x0, [sp, #40]
  40a424:	bl	409d98 <deliver_fd>
  40a428:	cmp	w0, #0x0
  40a42c:	b.ge	40a464 <manager_attach_fds+0x15c>  // b.tcont
  40a430:	ldr	w0, [sp, #64]
  40a434:	bl	4075e0 <safe_close@plt>
  40a438:	ldr	x1, [sp, #80]
  40a43c:	ldrsw	x0, [sp, #56]
  40a440:	lsl	x0, x0, #3
  40a444:	add	x0, x1, x0
  40a448:	ldr	x0, [x0]
  40a44c:	mov	x2, x0
  40a450:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a454:	add	x1, x0, #0x5a8
  40a458:	mov	w0, #0x0                   	// #0
  40a45c:	bl	407990 <sd_notifyf@plt>
  40a460:	b	40a468 <manager_attach_fds+0x160>
  40a464:	nop
  40a468:	ldr	w0, [sp, #56]
  40a46c:	add	w0, w0, #0x1
  40a470:	str	w0, [sp, #56]
  40a474:	ldr	w1, [sp, #56]
  40a478:	ldr	w0, [sp, #60]
  40a47c:	cmp	w1, w0
  40a480:	b.lt	40a3f8 <manager_attach_fds+0xf0>  // b.tstop
  40a484:	mov	w19, #0x0                   	// #0
  40a488:	add	x0, sp, #0x50
  40a48c:	bl	40889c <strv_freep>
  40a490:	mov	w1, w19
  40a494:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40a498:	add	x0, x0, #0x508
  40a49c:	ldr	x2, [sp, #88]
  40a4a0:	ldr	x0, [x0]
  40a4a4:	eor	x0, x2, x0
  40a4a8:	cmp	x0, #0x0
  40a4ac:	b.eq	40a4b4 <manager_attach_fds+0x1ac>  // b.none
  40a4b0:	bl	407b20 <__stack_chk_fail@plt>
  40a4b4:	mov	w0, w1
  40a4b8:	ldr	x19, [sp, #16]
  40a4bc:	ldp	x29, x30, [sp], #96
  40a4c0:	ret

000000000040a4c4 <manager_enumerate_sessions>:
  40a4c4:	stp	x29, x30, [sp, #-112]!
  40a4c8:	mov	x29, sp
  40a4cc:	str	x19, [sp, #16]
  40a4d0:	str	x0, [sp, #40]
  40a4d4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40a4d8:	add	x0, x0, #0x508
  40a4dc:	ldr	x1, [x0]
  40a4e0:	str	x1, [sp, #104]
  40a4e4:	mov	x1, #0x0                   	// #0
  40a4e8:	str	xzr, [sp, #80]
  40a4ec:	str	wzr, [sp, #48]
  40a4f0:	ldr	x0, [sp, #40]
  40a4f4:	cmp	x0, #0x0
  40a4f8:	cset	w0, eq  // eq = none
  40a4fc:	and	w0, w0, #0xff
  40a500:	and	x0, x0, #0xff
  40a504:	cmp	x0, #0x0
  40a508:	b.eq	40a534 <manager_enumerate_sessions+0x70>  // b.none
  40a50c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a510:	add	x1, x0, #0x273
  40a514:	adrp	x0, 43d000 <_fini+0xdb0>
  40a518:	add	x4, x0, #0x420
  40a51c:	mov	w3, #0x1cc                 	// #460
  40a520:	mov	x2, x1
  40a524:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a528:	add	x1, x0, #0x2a0
  40a52c:	mov	w0, #0x0                   	// #0
  40a530:	bl	407650 <log_assert_failed_realm@plt>
  40a534:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a538:	add	x0, x0, #0x5c8
  40a53c:	bl	407f50 <opendir@plt>
  40a540:	str	x0, [sp, #80]
  40a544:	ldr	x0, [sp, #80]
  40a548:	cmp	x0, #0x0
  40a54c:	b.ne	40a5f8 <manager_enumerate_sessions+0x134>  // b.any
  40a550:	bl	407960 <__errno_location@plt>
  40a554:	ldr	w0, [x0]
  40a558:	cmp	w0, #0x2
  40a55c:	b.ne	40a568 <manager_enumerate_sessions+0xa4>  // b.any
  40a560:	mov	w19, #0x0                   	// #0
  40a564:	b	40a790 <manager_enumerate_sessions+0x2cc>
  40a568:	mov	w0, #0x3                   	// #3
  40a56c:	str	w0, [sp, #68]
  40a570:	bl	407960 <__errno_location@plt>
  40a574:	ldr	w0, [x0]
  40a578:	str	w0, [sp, #72]
  40a57c:	str	wzr, [sp, #76]
  40a580:	ldr	w0, [sp, #76]
  40a584:	bl	4083e0 <log_get_max_level_realm@plt>
  40a588:	mov	w1, w0
  40a58c:	ldr	w0, [sp, #68]
  40a590:	and	w0, w0, #0x7
  40a594:	cmp	w1, w0
  40a598:	b.lt	40a5e0 <manager_enumerate_sessions+0x11c>  // b.tstop
  40a59c:	ldr	w0, [sp, #76]
  40a5a0:	lsl	w1, w0, #10
  40a5a4:	ldr	w0, [sp, #68]
  40a5a8:	orr	w6, w1, w0
  40a5ac:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a5b0:	add	x1, x0, #0x273
  40a5b4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a5b8:	add	x5, x0, #0x5e0
  40a5bc:	adrp	x0, 43d000 <_fini+0xdb0>
  40a5c0:	add	x4, x0, #0x440
  40a5c4:	mov	w3, #0x1d4                 	// #468
  40a5c8:	mov	x2, x1
  40a5cc:	ldr	w1, [sp, #72]
  40a5d0:	mov	w0, w6
  40a5d4:	bl	407d60 <log_internal_realm@plt>
  40a5d8:	mov	w19, w0
  40a5dc:	b	40a790 <manager_enumerate_sessions+0x2cc>
  40a5e0:	ldr	w0, [sp, #72]
  40a5e4:	cmp	w0, #0x0
  40a5e8:	cneg	w0, w0, lt  // lt = tstop
  40a5ec:	and	w0, w0, #0xff
  40a5f0:	neg	w19, w0
  40a5f4:	b	40a790 <manager_enumerate_sessions+0x2cc>
  40a5f8:	bl	407960 <__errno_location@plt>
  40a5fc:	str	wzr, [x0]
  40a600:	ldr	x0, [sp, #80]
  40a604:	bl	407670 <readdir64@plt>
  40a608:	str	x0, [sp, #96]
  40a60c:	ldr	x0, [sp, #96]
  40a610:	cmp	x0, #0x0
  40a614:	b.ne	40a638 <manager_enumerate_sessions+0x174>  // b.any
  40a618:	bl	407960 <__errno_location@plt>
  40a61c:	ldr	w0, [x0]
  40a620:	cmp	w0, #0x0
  40a624:	b.le	40a780 <manager_enumerate_sessions+0x2bc>
  40a628:	bl	407960 <__errno_location@plt>
  40a62c:	ldr	w0, [x0]
  40a630:	neg	w19, w0
  40a634:	b	40a790 <manager_enumerate_sessions+0x2cc>
  40a638:	ldr	x0, [sp, #96]
  40a63c:	add	x0, x0, #0x13
  40a640:	bl	407410 <hidden_or_backup_file@plt>
  40a644:	and	w0, w0, #0xff
  40a648:	cmp	w0, #0x0
  40a64c:	b.ne	40a75c <manager_enumerate_sessions+0x298>  // b.any
  40a650:	ldr	x0, [sp, #96]
  40a654:	bl	408260 <dirent_is_file@plt>
  40a658:	and	w0, w0, #0xff
  40a65c:	eor	w0, w0, #0x1
  40a660:	and	w0, w0, #0xff
  40a664:	cmp	w0, #0x0
  40a668:	b.ne	40a764 <manager_enumerate_sessions+0x2a0>  // b.any
  40a66c:	ldr	x0, [sp, #96]
  40a670:	add	x0, x0, #0x13
  40a674:	add	x1, sp, #0x58
  40a678:	mov	x2, x1
  40a67c:	mov	x1, x0
  40a680:	ldr	x0, [sp, #40]
  40a684:	bl	41139c <manager_add_session>
  40a688:	str	w0, [sp, #52]
  40a68c:	ldr	w0, [sp, #52]
  40a690:	cmp	w0, #0x0
  40a694:	b.ge	40a730 <manager_enumerate_sessions+0x26c>  // b.tcont
  40a698:	mov	w0, #0x4                   	// #4
  40a69c:	str	w0, [sp, #56]
  40a6a0:	ldr	w0, [sp, #52]
  40a6a4:	str	w0, [sp, #60]
  40a6a8:	str	wzr, [sp, #64]
  40a6ac:	ldr	w0, [sp, #64]
  40a6b0:	bl	4083e0 <log_get_max_level_realm@plt>
  40a6b4:	mov	w1, w0
  40a6b8:	ldr	w0, [sp, #56]
  40a6bc:	and	w0, w0, #0x7
  40a6c0:	cmp	w1, w0
  40a6c4:	b.lt	40a714 <manager_enumerate_sessions+0x250>  // b.tstop
  40a6c8:	ldr	w0, [sp, #64]
  40a6cc:	lsl	w1, w0, #10
  40a6d0:	ldr	w0, [sp, #56]
  40a6d4:	orr	w7, w1, w0
  40a6d8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a6dc:	add	x1, x0, #0x273
  40a6e0:	ldr	x0, [sp, #96]
  40a6e4:	add	x0, x0, #0x13
  40a6e8:	mov	x6, x0
  40a6ec:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a6f0:	add	x5, x0, #0x610
  40a6f4:	adrp	x0, 43d000 <_fini+0xdb0>
  40a6f8:	add	x4, x0, #0x440
  40a6fc:	mov	w3, #0x1df                 	// #479
  40a700:	mov	x2, x1
  40a704:	ldr	w1, [sp, #60]
  40a708:	mov	w0, w7
  40a70c:	bl	407d60 <log_internal_realm@plt>
  40a710:	b	40a728 <manager_enumerate_sessions+0x264>
  40a714:	ldr	w0, [sp, #60]
  40a718:	cmp	w0, #0x0
  40a71c:	cneg	w0, w0, lt  // lt = tstop
  40a720:	and	w0, w0, #0xff
  40a724:	neg	w0, w0
  40a728:	str	w0, [sp, #48]
  40a72c:	b	40a768 <manager_enumerate_sessions+0x2a4>
  40a730:	ldr	x0, [sp, #88]
  40a734:	bl	4335a4 <session_add_to_gc_queue>
  40a738:	ldr	x0, [sp, #88]
  40a73c:	bl	4307dc <session_load>
  40a740:	str	w0, [sp, #52]
  40a744:	ldr	w0, [sp, #52]
  40a748:	cmp	w0, #0x0
  40a74c:	b.ge	40a768 <manager_enumerate_sessions+0x2a4>  // b.tcont
  40a750:	ldr	w0, [sp, #52]
  40a754:	str	w0, [sp, #48]
  40a758:	b	40a768 <manager_enumerate_sessions+0x2a4>
  40a75c:	nop
  40a760:	b	40a768 <manager_enumerate_sessions+0x2a4>
  40a764:	nop
  40a768:	bl	407960 <__errno_location@plt>
  40a76c:	str	wzr, [x0]
  40a770:	ldr	x0, [sp, #80]
  40a774:	bl	407670 <readdir64@plt>
  40a778:	str	x0, [sp, #96]
  40a77c:	b	40a60c <manager_enumerate_sessions+0x148>
  40a780:	nop
  40a784:	ldr	x0, [sp, #40]
  40a788:	bl	40a308 <manager_attach_fds>
  40a78c:	ldr	w19, [sp, #48]
  40a790:	add	x0, sp, #0x50
  40a794:	bl	40891c <closedirp>
  40a798:	mov	w1, w19
  40a79c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40a7a0:	add	x0, x0, #0x508
  40a7a4:	ldr	x2, [sp, #104]
  40a7a8:	ldr	x0, [x0]
  40a7ac:	eor	x0, x2, x0
  40a7b0:	cmp	x0, #0x0
  40a7b4:	b.eq	40a7bc <manager_enumerate_sessions+0x2f8>  // b.none
  40a7b8:	bl	407b20 <__stack_chk_fail@plt>
  40a7bc:	mov	w0, w1
  40a7c0:	ldr	x19, [sp, #16]
  40a7c4:	ldp	x29, x30, [sp], #112
  40a7c8:	ret

000000000040a7cc <manager_enumerate_inhibitors>:
  40a7cc:	stp	x29, x30, [sp, #-112]!
  40a7d0:	mov	x29, sp
  40a7d4:	str	x19, [sp, #16]
  40a7d8:	str	x0, [sp, #40]
  40a7dc:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40a7e0:	add	x0, x0, #0x508
  40a7e4:	ldr	x1, [x0]
  40a7e8:	str	x1, [sp, #104]
  40a7ec:	mov	x1, #0x0                   	// #0
  40a7f0:	str	xzr, [sp, #80]
  40a7f4:	str	wzr, [sp, #48]
  40a7f8:	ldr	x0, [sp, #40]
  40a7fc:	cmp	x0, #0x0
  40a800:	cset	w0, eq  // eq = none
  40a804:	and	w0, w0, #0xff
  40a808:	and	x0, x0, #0xff
  40a80c:	cmp	x0, #0x0
  40a810:	b.eq	40a83c <manager_enumerate_inhibitors+0x70>  // b.none
  40a814:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a818:	add	x1, x0, #0x273
  40a81c:	adrp	x0, 43d000 <_fini+0xdb0>
  40a820:	add	x4, x0, #0x460
  40a824:	mov	w3, #0x1f6                 	// #502
  40a828:	mov	x2, x1
  40a82c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a830:	add	x1, x0, #0x2a0
  40a834:	mov	w0, #0x0                   	// #0
  40a838:	bl	407650 <log_assert_failed_realm@plt>
  40a83c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a840:	add	x0, x0, #0x648
  40a844:	bl	407f50 <opendir@plt>
  40a848:	str	x0, [sp, #80]
  40a84c:	ldr	x0, [sp, #80]
  40a850:	cmp	x0, #0x0
  40a854:	b.ne	40a900 <manager_enumerate_inhibitors+0x134>  // b.any
  40a858:	bl	407960 <__errno_location@plt>
  40a85c:	ldr	w0, [x0]
  40a860:	cmp	w0, #0x2
  40a864:	b.ne	40a870 <manager_enumerate_inhibitors+0xa4>  // b.any
  40a868:	mov	w19, #0x0                   	// #0
  40a86c:	b	40aa88 <manager_enumerate_inhibitors+0x2bc>
  40a870:	mov	w0, #0x3                   	// #3
  40a874:	str	w0, [sp, #68]
  40a878:	bl	407960 <__errno_location@plt>
  40a87c:	ldr	w0, [x0]
  40a880:	str	w0, [sp, #72]
  40a884:	str	wzr, [sp, #76]
  40a888:	ldr	w0, [sp, #76]
  40a88c:	bl	4083e0 <log_get_max_level_realm@plt>
  40a890:	mov	w1, w0
  40a894:	ldr	w0, [sp, #68]
  40a898:	and	w0, w0, #0x7
  40a89c:	cmp	w1, w0
  40a8a0:	b.lt	40a8e8 <manager_enumerate_inhibitors+0x11c>  // b.tstop
  40a8a4:	ldr	w0, [sp, #76]
  40a8a8:	lsl	w1, w0, #10
  40a8ac:	ldr	w0, [sp, #68]
  40a8b0:	orr	w6, w1, w0
  40a8b4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a8b8:	add	x1, x0, #0x273
  40a8bc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a8c0:	add	x5, x0, #0x660
  40a8c4:	adrp	x0, 43d000 <_fini+0xdb0>
  40a8c8:	add	x4, x0, #0x480
  40a8cc:	mov	w3, #0x1fd                 	// #509
  40a8d0:	mov	x2, x1
  40a8d4:	ldr	w1, [sp, #72]
  40a8d8:	mov	w0, w6
  40a8dc:	bl	407d60 <log_internal_realm@plt>
  40a8e0:	mov	w19, w0
  40a8e4:	b	40aa88 <manager_enumerate_inhibitors+0x2bc>
  40a8e8:	ldr	w0, [sp, #72]
  40a8ec:	cmp	w0, #0x0
  40a8f0:	cneg	w0, w0, lt  // lt = tstop
  40a8f4:	and	w0, w0, #0xff
  40a8f8:	neg	w19, w0
  40a8fc:	b	40aa88 <manager_enumerate_inhibitors+0x2bc>
  40a900:	bl	407960 <__errno_location@plt>
  40a904:	str	wzr, [x0]
  40a908:	ldr	x0, [sp, #80]
  40a90c:	bl	407670 <readdir64@plt>
  40a910:	str	x0, [sp, #96]
  40a914:	ldr	x0, [sp, #96]
  40a918:	cmp	x0, #0x0
  40a91c:	b.ne	40a940 <manager_enumerate_inhibitors+0x174>  // b.any
  40a920:	bl	407960 <__errno_location@plt>
  40a924:	ldr	w0, [x0]
  40a928:	cmp	w0, #0x0
  40a92c:	b.le	40aa80 <manager_enumerate_inhibitors+0x2b4>
  40a930:	bl	407960 <__errno_location@plt>
  40a934:	ldr	w0, [x0]
  40a938:	neg	w19, w0
  40a93c:	b	40aa88 <manager_enumerate_inhibitors+0x2bc>
  40a940:	ldr	x0, [sp, #96]
  40a944:	add	x0, x0, #0x13
  40a948:	bl	407410 <hidden_or_backup_file@plt>
  40a94c:	and	w0, w0, #0xff
  40a950:	cmp	w0, #0x0
  40a954:	b.ne	40aa5c <manager_enumerate_inhibitors+0x290>  // b.any
  40a958:	ldr	x0, [sp, #96]
  40a95c:	bl	408260 <dirent_is_file@plt>
  40a960:	and	w0, w0, #0xff
  40a964:	eor	w0, w0, #0x1
  40a968:	and	w0, w0, #0xff
  40a96c:	cmp	w0, #0x0
  40a970:	b.ne	40aa64 <manager_enumerate_inhibitors+0x298>  // b.any
  40a974:	ldr	x0, [sp, #96]
  40a978:	add	x0, x0, #0x13
  40a97c:	add	x1, sp, #0x58
  40a980:	mov	x2, x1
  40a984:	mov	x1, x0
  40a988:	ldr	x0, [sp, #40]
  40a98c:	bl	41184c <manager_add_inhibitor>
  40a990:	str	w0, [sp, #52]
  40a994:	ldr	w0, [sp, #52]
  40a998:	cmp	w0, #0x0
  40a99c:	b.ge	40aa38 <manager_enumerate_inhibitors+0x26c>  // b.tcont
  40a9a0:	mov	w0, #0x4                   	// #4
  40a9a4:	str	w0, [sp, #56]
  40a9a8:	ldr	w0, [sp, #52]
  40a9ac:	str	w0, [sp, #60]
  40a9b0:	str	wzr, [sp, #64]
  40a9b4:	ldr	w0, [sp, #64]
  40a9b8:	bl	4083e0 <log_get_max_level_realm@plt>
  40a9bc:	mov	w1, w0
  40a9c0:	ldr	w0, [sp, #56]
  40a9c4:	and	w0, w0, #0x7
  40a9c8:	cmp	w1, w0
  40a9cc:	b.lt	40aa1c <manager_enumerate_inhibitors+0x250>  // b.tstop
  40a9d0:	ldr	w0, [sp, #64]
  40a9d4:	lsl	w1, w0, #10
  40a9d8:	ldr	w0, [sp, #56]
  40a9dc:	orr	w7, w1, w0
  40a9e0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a9e4:	add	x1, x0, #0x273
  40a9e8:	ldr	x0, [sp, #96]
  40a9ec:	add	x0, x0, #0x13
  40a9f0:	mov	x6, x0
  40a9f4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40a9f8:	add	x5, x0, #0x688
  40a9fc:	adrp	x0, 43d000 <_fini+0xdb0>
  40aa00:	add	x4, x0, #0x480
  40aa04:	mov	w3, #0x209                 	// #521
  40aa08:	mov	x2, x1
  40aa0c:	ldr	w1, [sp, #60]
  40aa10:	mov	w0, w7
  40aa14:	bl	407d60 <log_internal_realm@plt>
  40aa18:	b	40aa30 <manager_enumerate_inhibitors+0x264>
  40aa1c:	ldr	w0, [sp, #60]
  40aa20:	cmp	w0, #0x0
  40aa24:	cneg	w0, w0, lt  // lt = tstop
  40aa28:	and	w0, w0, #0xff
  40aa2c:	neg	w0, w0
  40aa30:	str	w0, [sp, #48]
  40aa34:	b	40aa68 <manager_enumerate_inhibitors+0x29c>
  40aa38:	ldr	x0, [sp, #88]
  40aa3c:	bl	423b38 <inhibitor_load>
  40aa40:	str	w0, [sp, #52]
  40aa44:	ldr	w0, [sp, #52]
  40aa48:	cmp	w0, #0x0
  40aa4c:	b.ge	40aa68 <manager_enumerate_inhibitors+0x29c>  // b.tcont
  40aa50:	ldr	w0, [sp, #52]
  40aa54:	str	w0, [sp, #48]
  40aa58:	b	40aa68 <manager_enumerate_inhibitors+0x29c>
  40aa5c:	nop
  40aa60:	b	40aa68 <manager_enumerate_inhibitors+0x29c>
  40aa64:	nop
  40aa68:	bl	407960 <__errno_location@plt>
  40aa6c:	str	wzr, [x0]
  40aa70:	ldr	x0, [sp, #80]
  40aa74:	bl	407670 <readdir64@plt>
  40aa78:	str	x0, [sp, #96]
  40aa7c:	b	40a914 <manager_enumerate_inhibitors+0x148>
  40aa80:	nop
  40aa84:	ldr	w19, [sp, #48]
  40aa88:	add	x0, sp, #0x50
  40aa8c:	bl	40891c <closedirp>
  40aa90:	mov	w1, w19
  40aa94:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40aa98:	add	x0, x0, #0x508
  40aa9c:	ldr	x2, [sp, #104]
  40aaa0:	ldr	x0, [x0]
  40aaa4:	eor	x0, x2, x0
  40aaa8:	cmp	x0, #0x0
  40aaac:	b.eq	40aab4 <manager_enumerate_inhibitors+0x2e8>  // b.none
  40aab0:	bl	407b20 <__stack_chk_fail@plt>
  40aab4:	mov	w0, w1
  40aab8:	ldr	x19, [sp, #16]
  40aabc:	ldp	x29, x30, [sp], #112
  40aac0:	ret

000000000040aac4 <manager_dispatch_seat_udev>:
  40aac4:	stp	x29, x30, [sp, #-64]!
  40aac8:	mov	x29, sp
  40aacc:	str	x0, [sp, #40]
  40aad0:	str	x1, [sp, #32]
  40aad4:	str	x2, [sp, #24]
  40aad8:	ldr	x0, [sp, #24]
  40aadc:	str	x0, [sp, #56]
  40aae0:	ldr	x0, [sp, #56]
  40aae4:	cmp	x0, #0x0
  40aae8:	cset	w0, eq  // eq = none
  40aaec:	and	w0, w0, #0xff
  40aaf0:	and	x0, x0, #0xff
  40aaf4:	cmp	x0, #0x0
  40aaf8:	b.eq	40ab24 <manager_dispatch_seat_udev+0x60>  // b.none
  40aafc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ab00:	add	x1, x0, #0x273
  40ab04:	adrp	x0, 43d000 <_fini+0xdb0>
  40ab08:	add	x4, x0, #0x4a0
  40ab0c:	mov	w3, #0x218                 	// #536
  40ab10:	mov	x2, x1
  40ab14:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ab18:	add	x1, x0, #0x2a0
  40ab1c:	mov	w0, #0x0                   	// #0
  40ab20:	bl	407650 <log_assert_failed_realm@plt>
  40ab24:	ldr	x0, [sp, #32]
  40ab28:	cmp	x0, #0x0
  40ab2c:	cset	w0, eq  // eq = none
  40ab30:	and	w0, w0, #0xff
  40ab34:	and	x0, x0, #0xff
  40ab38:	cmp	x0, #0x0
  40ab3c:	b.eq	40ab68 <manager_dispatch_seat_udev+0xa4>  // b.none
  40ab40:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ab44:	add	x1, x0, #0x273
  40ab48:	adrp	x0, 43d000 <_fini+0xdb0>
  40ab4c:	add	x4, x0, #0x4a0
  40ab50:	mov	w3, #0x219                 	// #537
  40ab54:	mov	x2, x1
  40ab58:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ab5c:	add	x1, x0, #0x440
  40ab60:	mov	w0, #0x0                   	// #0
  40ab64:	bl	407650 <log_assert_failed_realm@plt>
  40ab68:	ldr	x1, [sp, #32]
  40ab6c:	ldr	x0, [sp, #56]
  40ab70:	bl	411a94 <manager_process_seat_device>
  40ab74:	mov	w0, #0x0                   	// #0
  40ab78:	ldp	x29, x30, [sp], #64
  40ab7c:	ret

000000000040ab80 <manager_dispatch_device_udev>:
  40ab80:	stp	x29, x30, [sp, #-64]!
  40ab84:	mov	x29, sp
  40ab88:	str	x0, [sp, #40]
  40ab8c:	str	x1, [sp, #32]
  40ab90:	str	x2, [sp, #24]
  40ab94:	ldr	x0, [sp, #24]
  40ab98:	str	x0, [sp, #56]
  40ab9c:	ldr	x0, [sp, #56]
  40aba0:	cmp	x0, #0x0
  40aba4:	cset	w0, eq  // eq = none
  40aba8:	and	w0, w0, #0xff
  40abac:	and	x0, x0, #0xff
  40abb0:	cmp	x0, #0x0
  40abb4:	b.eq	40abe0 <manager_dispatch_device_udev+0x60>  // b.none
  40abb8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40abbc:	add	x1, x0, #0x273
  40abc0:	adrp	x0, 43d000 <_fini+0xdb0>
  40abc4:	add	x4, x0, #0x4c0
  40abc8:	mov	w3, #0x222                 	// #546
  40abcc:	mov	x2, x1
  40abd0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40abd4:	add	x1, x0, #0x2a0
  40abd8:	mov	w0, #0x0                   	// #0
  40abdc:	bl	407650 <log_assert_failed_realm@plt>
  40abe0:	ldr	x0, [sp, #32]
  40abe4:	cmp	x0, #0x0
  40abe8:	cset	w0, eq  // eq = none
  40abec:	and	w0, w0, #0xff
  40abf0:	and	x0, x0, #0xff
  40abf4:	cmp	x0, #0x0
  40abf8:	b.eq	40ac24 <manager_dispatch_device_udev+0xa4>  // b.none
  40abfc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ac00:	add	x1, x0, #0x273
  40ac04:	adrp	x0, 43d000 <_fini+0xdb0>
  40ac08:	add	x4, x0, #0x4c0
  40ac0c:	mov	w3, #0x223                 	// #547
  40ac10:	mov	x2, x1
  40ac14:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ac18:	add	x1, x0, #0x440
  40ac1c:	mov	w0, #0x0                   	// #0
  40ac20:	bl	407650 <log_assert_failed_realm@plt>
  40ac24:	ldr	x1, [sp, #32]
  40ac28:	ldr	x0, [sp, #56]
  40ac2c:	bl	411a94 <manager_process_seat_device>
  40ac30:	mov	w0, #0x0                   	// #0
  40ac34:	ldp	x29, x30, [sp], #64
  40ac38:	ret

000000000040ac3c <manager_dispatch_vcsa_udev>:
  40ac3c:	stp	x29, x30, [sp, #-80]!
  40ac40:	mov	x29, sp
  40ac44:	str	x0, [sp, #40]
  40ac48:	str	x1, [sp, #32]
  40ac4c:	str	x2, [sp, #24]
  40ac50:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40ac54:	add	x0, x0, #0x508
  40ac58:	ldr	x1, [x0]
  40ac5c:	str	x1, [sp, #72]
  40ac60:	mov	x1, #0x0                   	// #0
  40ac64:	ldr	x0, [sp, #24]
  40ac68:	str	x0, [sp, #64]
  40ac6c:	ldr	x0, [sp, #64]
  40ac70:	cmp	x0, #0x0
  40ac74:	cset	w0, eq  // eq = none
  40ac78:	and	w0, w0, #0xff
  40ac7c:	and	x0, x0, #0xff
  40ac80:	cmp	x0, #0x0
  40ac84:	b.eq	40acb0 <manager_dispatch_vcsa_udev+0x74>  // b.none
  40ac88:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ac8c:	add	x1, x0, #0x273
  40ac90:	adrp	x0, 43d000 <_fini+0xdb0>
  40ac94:	add	x4, x0, #0x4e0
  40ac98:	mov	w3, #0x22d                 	// #557
  40ac9c:	mov	x2, x1
  40aca0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40aca4:	add	x1, x0, #0x2a0
  40aca8:	mov	w0, #0x0                   	// #0
  40acac:	bl	407650 <log_assert_failed_realm@plt>
  40acb0:	ldr	x0, [sp, #32]
  40acb4:	cmp	x0, #0x0
  40acb8:	cset	w0, eq  // eq = none
  40acbc:	and	w0, w0, #0xff
  40acc0:	and	x0, x0, #0xff
  40acc4:	cmp	x0, #0x0
  40acc8:	b.eq	40acf4 <manager_dispatch_vcsa_udev+0xb8>  // b.none
  40accc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40acd0:	add	x1, x0, #0x273
  40acd4:	adrp	x0, 43d000 <_fini+0xdb0>
  40acd8:	add	x4, x0, #0x4e0
  40acdc:	mov	w3, #0x22e                 	// #558
  40ace0:	mov	x2, x1
  40ace4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ace8:	add	x1, x0, #0x440
  40acec:	mov	w0, #0x0                   	// #0
  40acf0:	bl	407650 <log_assert_failed_realm@plt>
  40acf4:	add	x0, sp, #0x38
  40acf8:	mov	x1, x0
  40acfc:	ldr	x0, [sp, #32]
  40ad00:	bl	407630 <sd_device_get_sysname@plt>
  40ad04:	cmp	w0, #0x0
  40ad08:	b.lt	40ad4c <manager_dispatch_vcsa_udev+0x110>  // b.tstop
  40ad0c:	ldr	x2, [sp, #56]
  40ad10:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ad14:	add	x1, x0, #0x6b0
  40ad18:	mov	x0, x2
  40ad1c:	bl	40884c <startswith>
  40ad20:	cmp	x0, #0x0
  40ad24:	b.eq	40ad4c <manager_dispatch_vcsa_udev+0x110>  // b.none
  40ad28:	mov	w1, #0x1                   	// #1
  40ad2c:	ldr	x0, [sp, #32]
  40ad30:	bl	407450 <device_for_action@plt>
  40ad34:	and	w0, w0, #0xff
  40ad38:	cmp	w0, #0x0
  40ad3c:	b.eq	40ad4c <manager_dispatch_vcsa_udev+0x110>  // b.none
  40ad40:	ldr	x0, [sp, #64]
  40ad44:	ldr	x0, [x0, #168]
  40ad48:	bl	4279a4 <seat_preallocate_vts>
  40ad4c:	mov	w0, #0x0                   	// #0
  40ad50:	mov	w1, w0
  40ad54:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40ad58:	add	x0, x0, #0x508
  40ad5c:	ldr	x2, [sp, #72]
  40ad60:	ldr	x0, [x0]
  40ad64:	eor	x0, x2, x0
  40ad68:	cmp	x0, #0x0
  40ad6c:	b.eq	40ad74 <manager_dispatch_vcsa_udev+0x138>  // b.none
  40ad70:	bl	407b20 <__stack_chk_fail@plt>
  40ad74:	mov	w0, w1
  40ad78:	ldp	x29, x30, [sp], #80
  40ad7c:	ret

000000000040ad80 <manager_dispatch_button_udev>:
  40ad80:	stp	x29, x30, [sp, #-64]!
  40ad84:	mov	x29, sp
  40ad88:	str	x0, [sp, #40]
  40ad8c:	str	x1, [sp, #32]
  40ad90:	str	x2, [sp, #24]
  40ad94:	ldr	x0, [sp, #24]
  40ad98:	str	x0, [sp, #56]
  40ad9c:	ldr	x0, [sp, #56]
  40ada0:	cmp	x0, #0x0
  40ada4:	cset	w0, eq  // eq = none
  40ada8:	and	w0, w0, #0xff
  40adac:	and	x0, x0, #0xff
  40adb0:	cmp	x0, #0x0
  40adb4:	b.eq	40ade0 <manager_dispatch_button_udev+0x60>  // b.none
  40adb8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40adbc:	add	x1, x0, #0x273
  40adc0:	adrp	x0, 43d000 <_fini+0xdb0>
  40adc4:	add	x4, x0, #0x500
  40adc8:	mov	w3, #0x23e                 	// #574
  40adcc:	mov	x2, x1
  40add0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40add4:	add	x1, x0, #0x2a0
  40add8:	mov	w0, #0x0                   	// #0
  40addc:	bl	407650 <log_assert_failed_realm@plt>
  40ade0:	ldr	x0, [sp, #32]
  40ade4:	cmp	x0, #0x0
  40ade8:	cset	w0, eq  // eq = none
  40adec:	and	w0, w0, #0xff
  40adf0:	and	x0, x0, #0xff
  40adf4:	cmp	x0, #0x0
  40adf8:	b.eq	40ae24 <manager_dispatch_button_udev+0xa4>  // b.none
  40adfc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ae00:	add	x1, x0, #0x273
  40ae04:	adrp	x0, 43d000 <_fini+0xdb0>
  40ae08:	add	x4, x0, #0x500
  40ae0c:	mov	w3, #0x23f                 	// #575
  40ae10:	mov	x2, x1
  40ae14:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ae18:	add	x1, x0, #0x440
  40ae1c:	mov	w0, #0x0                   	// #0
  40ae20:	bl	407650 <log_assert_failed_realm@plt>
  40ae24:	ldr	x1, [sp, #32]
  40ae28:	ldr	x0, [sp, #56]
  40ae2c:	bl	411df8 <manager_process_button_device>
  40ae30:	mov	w0, #0x0                   	// #0
  40ae34:	ldp	x29, x30, [sp], #64
  40ae38:	ret

000000000040ae3c <manager_dispatch_console>:
  40ae3c:	stp	x29, x30, [sp, #-64]!
  40ae40:	mov	x29, sp
  40ae44:	str	x0, [sp, #40]
  40ae48:	str	w1, [sp, #36]
  40ae4c:	str	w2, [sp, #32]
  40ae50:	str	x3, [sp, #24]
  40ae54:	ldr	x0, [sp, #24]
  40ae58:	str	x0, [sp, #56]
  40ae5c:	ldr	x0, [sp, #56]
  40ae60:	cmp	x0, #0x0
  40ae64:	cset	w0, eq  // eq = none
  40ae68:	and	w0, w0, #0xff
  40ae6c:	and	x0, x0, #0xff
  40ae70:	cmp	x0, #0x0
  40ae74:	b.eq	40aea0 <manager_dispatch_console+0x64>  // b.none
  40ae78:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ae7c:	add	x1, x0, #0x273
  40ae80:	adrp	x0, 43d000 <_fini+0xdb0>
  40ae84:	add	x4, x0, #0x520
  40ae88:	mov	w3, #0x248                 	// #584
  40ae8c:	mov	x2, x1
  40ae90:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ae94:	add	x1, x0, #0x2a0
  40ae98:	mov	w0, #0x0                   	// #0
  40ae9c:	bl	407650 <log_assert_failed_realm@plt>
  40aea0:	ldr	x0, [sp, #56]
  40aea4:	ldr	x0, [x0, #168]
  40aea8:	cmp	x0, #0x0
  40aeac:	cset	w0, eq  // eq = none
  40aeb0:	and	w0, w0, #0xff
  40aeb4:	and	x0, x0, #0xff
  40aeb8:	cmp	x0, #0x0
  40aebc:	b.eq	40aee8 <manager_dispatch_console+0xac>  // b.none
  40aec0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40aec4:	add	x1, x0, #0x273
  40aec8:	adrp	x0, 43d000 <_fini+0xdb0>
  40aecc:	add	x4, x0, #0x520
  40aed0:	mov	w3, #0x249                 	// #585
  40aed4:	mov	x2, x1
  40aed8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40aedc:	add	x1, x0, #0x6b8
  40aee0:	mov	w0, #0x0                   	// #0
  40aee4:	bl	407650 <log_assert_failed_realm@plt>
  40aee8:	ldr	x0, [sp, #56]
  40aeec:	ldr	w0, [x0, #152]
  40aef0:	ldr	w1, [sp, #36]
  40aef4:	cmp	w1, w0
  40aef8:	cset	w0, ne  // ne = any
  40aefc:	and	w0, w0, #0xff
  40af00:	and	x0, x0, #0xff
  40af04:	cmp	x0, #0x0
  40af08:	b.eq	40af34 <manager_dispatch_console+0xf8>  // b.none
  40af0c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40af10:	add	x1, x0, #0x273
  40af14:	adrp	x0, 43d000 <_fini+0xdb0>
  40af18:	add	x4, x0, #0x520
  40af1c:	mov	w3, #0x24a                 	// #586
  40af20:	mov	x2, x1
  40af24:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40af28:	add	x1, x0, #0x6c8
  40af2c:	mov	w0, #0x0                   	// #0
  40af30:	bl	407650 <log_assert_failed_realm@plt>
  40af34:	ldr	x0, [sp, #56]
  40af38:	ldr	x0, [x0, #168]
  40af3c:	bl	4284c4 <seat_read_active_vt>
  40af40:	mov	w0, #0x0                   	// #0
  40af44:	ldp	x29, x30, [sp], #64
  40af48:	ret

000000000040af4c <manager_reserve_vt>:
  40af4c:	stp	x29, x30, [sp, #-80]!
  40af50:	mov	x29, sp
  40af54:	str	x19, [sp, #16]
  40af58:	str	x0, [sp, #40]
  40af5c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40af60:	add	x0, x0, #0x508
  40af64:	ldr	x1, [x0]
  40af68:	str	x1, [sp, #72]
  40af6c:	mov	x1, #0x0                   	// #0
  40af70:	str	xzr, [sp, #64]
  40af74:	ldr	x0, [sp, #40]
  40af78:	cmp	x0, #0x0
  40af7c:	cset	w0, eq  // eq = none
  40af80:	and	w0, w0, #0xff
  40af84:	and	x0, x0, #0xff
  40af88:	cmp	x0, #0x0
  40af8c:	b.eq	40afb8 <manager_reserve_vt+0x6c>  // b.none
  40af90:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40af94:	add	x1, x0, #0x273
  40af98:	adrp	x0, 43d000 <_fini+0xdb0>
  40af9c:	add	x4, x0, #0x540
  40afa0:	mov	w3, #0x253                 	// #595
  40afa4:	mov	x2, x1
  40afa8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40afac:	add	x1, x0, #0x2a0
  40afb0:	mov	w0, #0x0                   	// #0
  40afb4:	bl	407650 <log_assert_failed_realm@plt>
  40afb8:	ldr	x0, [sp, #40]
  40afbc:	ldr	w0, [x0, #160]
  40afc0:	cmp	w0, #0x0
  40afc4:	b.ne	40afd0 <manager_reserve_vt+0x84>  // b.any
  40afc8:	mov	w19, #0x0                   	// #0
  40afcc:	b	40b0e8 <manager_reserve_vt+0x19c>
  40afd0:	ldr	x0, [sp, #40]
  40afd4:	ldr	w0, [x0, #160]
  40afd8:	add	x3, sp, #0x40
  40afdc:	mov	w2, w0
  40afe0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40afe4:	add	x1, x0, #0x6e8
  40afe8:	mov	x0, x3
  40afec:	bl	408060 <asprintf@plt>
  40aff0:	cmp	w0, #0x0
  40aff4:	b.ge	40b01c <manager_reserve_vt+0xd0>  // b.tcont
  40aff8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40affc:	add	x1, x0, #0x273
  40b000:	adrp	x0, 43d000 <_fini+0xdb0>
  40b004:	add	x3, x0, #0x558
  40b008:	mov	w2, #0x259                 	// #601
  40b00c:	mov	w0, #0x0                   	// #0
  40b010:	bl	408330 <log_oom_internal@plt>
  40b014:	mov	w19, w0
  40b018:	b	40b0e8 <manager_reserve_vt+0x19c>
  40b01c:	ldr	x0, [sp, #64]
  40b020:	mov	w1, #0x902                 	// #2306
  40b024:	movk	w1, #0x8, lsl #16
  40b028:	bl	4082c0 <open64@plt>
  40b02c:	mov	w1, w0
  40b030:	ldr	x0, [sp, #40]
  40b034:	str	w1, [x0, #164]
  40b038:	ldr	x0, [sp, #40]
  40b03c:	ldr	w0, [x0, #164]
  40b040:	cmp	w0, #0x0
  40b044:	b.ge	40b0e4 <manager_reserve_vt+0x198>  // b.tcont
  40b048:	bl	407960 <__errno_location@plt>
  40b04c:	ldr	w0, [x0]
  40b050:	cmp	w0, #0x2
  40b054:	b.eq	40b0d4 <manager_reserve_vt+0x188>  // b.none
  40b058:	mov	w0, #0x4                   	// #4
  40b05c:	str	w0, [sp, #52]
  40b060:	bl	407960 <__errno_location@plt>
  40b064:	ldr	w0, [x0]
  40b068:	str	w0, [sp, #56]
  40b06c:	str	wzr, [sp, #60]
  40b070:	ldr	w0, [sp, #60]
  40b074:	bl	4083e0 <log_get_max_level_realm@plt>
  40b078:	mov	w1, w0
  40b07c:	ldr	w0, [sp, #52]
  40b080:	and	w0, w0, #0x7
  40b084:	cmp	w1, w0
  40b088:	b.lt	40b0cc <manager_reserve_vt+0x180>  // b.tstop
  40b08c:	ldr	w0, [sp, #60]
  40b090:	lsl	w1, w0, #10
  40b094:	ldr	w0, [sp, #52]
  40b098:	orr	w6, w1, w0
  40b09c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b0a0:	add	x1, x0, #0x273
  40b0a4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b0a8:	add	x5, x0, #0x6f8
  40b0ac:	adrp	x0, 43d000 <_fini+0xdb0>
  40b0b0:	add	x4, x0, #0x558
  40b0b4:	mov	w3, #0x260                 	// #608
  40b0b8:	mov	x2, x1
  40b0bc:	ldr	w1, [sp, #56]
  40b0c0:	mov	w0, w6
  40b0c4:	bl	407d60 <log_internal_realm@plt>
  40b0c8:	b	40b0d4 <manager_reserve_vt+0x188>
  40b0cc:	ldr	w0, [sp, #56]
  40b0d0:	cmp	w0, #0x0
  40b0d4:	bl	407960 <__errno_location@plt>
  40b0d8:	ldr	w0, [x0]
  40b0dc:	neg	w19, w0
  40b0e0:	b	40b0e8 <manager_reserve_vt+0x19c>
  40b0e4:	mov	w19, #0x0                   	// #0
  40b0e8:	add	x0, sp, #0x40
  40b0ec:	bl	40867c <freep>
  40b0f0:	mov	w1, w19
  40b0f4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40b0f8:	add	x0, x0, #0x508
  40b0fc:	ldr	x2, [sp, #72]
  40b100:	ldr	x0, [x0]
  40b104:	eor	x0, x2, x0
  40b108:	cmp	x0, #0x0
  40b10c:	b.eq	40b114 <manager_reserve_vt+0x1c8>  // b.none
  40b110:	bl	407b20 <__stack_chk_fail@plt>
  40b114:	mov	w0, w1
  40b118:	ldr	x19, [sp, #16]
  40b11c:	ldp	x29, x30, [sp], #80
  40b120:	ret

000000000040b124 <manager_connect_bus>:
  40b124:	sub	sp, sp, #0xf0
  40b128:	stp	x29, x30, [sp, #16]
  40b12c:	add	x29, sp, #0x10
  40b130:	str	x0, [sp, #40]
  40b134:	ldr	x0, [sp, #40]
  40b138:	cmp	x0, #0x0
  40b13c:	cset	w0, eq  // eq = none
  40b140:	and	w0, w0, #0xff
  40b144:	and	x0, x0, #0xff
  40b148:	cmp	x0, #0x0
  40b14c:	b.eq	40b178 <manager_connect_bus+0x54>  // b.none
  40b150:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b154:	add	x1, x0, #0x273
  40b158:	adrp	x0, 43d000 <_fini+0xdb0>
  40b15c:	add	x4, x0, #0x570
  40b160:	mov	w3, #0x26a                 	// #618
  40b164:	mov	x2, x1
  40b168:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b16c:	add	x1, x0, #0x2a0
  40b170:	mov	w0, #0x0                   	// #0
  40b174:	bl	407650 <log_assert_failed_realm@plt>
  40b178:	ldr	x0, [sp, #40]
  40b17c:	ldr	x0, [x0, #8]
  40b180:	cmp	x0, #0x0
  40b184:	cset	w0, ne  // ne = any
  40b188:	and	w0, w0, #0xff
  40b18c:	and	x0, x0, #0xff
  40b190:	cmp	x0, #0x0
  40b194:	b.eq	40b1c0 <manager_connect_bus+0x9c>  // b.none
  40b198:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b19c:	add	x1, x0, #0x273
  40b1a0:	adrp	x0, 43d000 <_fini+0xdb0>
  40b1a4:	add	x4, x0, #0x570
  40b1a8:	mov	w3, #0x26b                 	// #619
  40b1ac:	mov	x2, x1
  40b1b0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b1b4:	add	x1, x0, #0x718
  40b1b8:	mov	w0, #0x0                   	// #0
  40b1bc:	bl	407650 <log_assert_failed_realm@plt>
  40b1c0:	ldr	x0, [sp, #40]
  40b1c4:	add	x0, x0, #0x8
  40b1c8:	bl	407d80 <sd_bus_default_system@plt>
  40b1cc:	str	w0, [sp, #56]
  40b1d0:	ldr	w0, [sp, #56]
  40b1d4:	cmp	w0, #0x0
  40b1d8:	b.ge	40b264 <manager_connect_bus+0x140>  // b.tcont
  40b1dc:	mov	w0, #0x3                   	// #3
  40b1e0:	str	w0, [sp, #228]
  40b1e4:	ldr	w0, [sp, #56]
  40b1e8:	str	w0, [sp, #232]
  40b1ec:	str	wzr, [sp, #236]
  40b1f0:	ldr	w0, [sp, #236]
  40b1f4:	bl	4083e0 <log_get_max_level_realm@plt>
  40b1f8:	mov	w1, w0
  40b1fc:	ldr	w0, [sp, #228]
  40b200:	and	w0, w0, #0x7
  40b204:	cmp	w1, w0
  40b208:	b.lt	40b24c <manager_connect_bus+0x128>  // b.tstop
  40b20c:	ldr	w0, [sp, #236]
  40b210:	lsl	w1, w0, #10
  40b214:	ldr	w0, [sp, #228]
  40b218:	orr	w6, w1, w0
  40b21c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b220:	add	x1, x0, #0x273
  40b224:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b228:	add	x5, x0, #0x720
  40b22c:	adrp	x0, 43d000 <_fini+0xdb0>
  40b230:	add	x4, x0, #0x588
  40b234:	mov	w3, #0x26f                 	// #623
  40b238:	mov	x2, x1
  40b23c:	ldr	w1, [sp, #232]
  40b240:	mov	w0, w6
  40b244:	bl	407d60 <log_internal_realm@plt>
  40b248:	b	40bdac <manager_connect_bus+0xc88>
  40b24c:	ldr	w0, [sp, #232]
  40b250:	cmp	w0, #0x0
  40b254:	cneg	w0, w0, lt  // lt = tstop
  40b258:	and	w0, w0, #0xff
  40b25c:	neg	w0, w0
  40b260:	b	40bdac <manager_connect_bus+0xc88>
  40b264:	ldr	x0, [sp, #40]
  40b268:	ldr	x6, [x0, #8]
  40b26c:	ldr	x5, [sp, #40]
  40b270:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40b274:	add	x4, x0, #0x530
  40b278:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b27c:	add	x3, x0, #0x748
  40b280:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b284:	add	x2, x0, #0x768
  40b288:	mov	x1, #0x0                   	// #0
  40b28c:	mov	x0, x6
  40b290:	bl	407a70 <sd_bus_add_object_vtable@plt>
  40b294:	str	w0, [sp, #56]
  40b298:	ldr	w0, [sp, #56]
  40b29c:	cmp	w0, #0x0
  40b2a0:	b.ge	40b32c <manager_connect_bus+0x208>  // b.tcont
  40b2a4:	mov	w0, #0x3                   	// #3
  40b2a8:	str	w0, [sp, #216]
  40b2ac:	ldr	w0, [sp, #56]
  40b2b0:	str	w0, [sp, #220]
  40b2b4:	str	wzr, [sp, #224]
  40b2b8:	ldr	w0, [sp, #224]
  40b2bc:	bl	4083e0 <log_get_max_level_realm@plt>
  40b2c0:	mov	w1, w0
  40b2c4:	ldr	w0, [sp, #216]
  40b2c8:	and	w0, w0, #0x7
  40b2cc:	cmp	w1, w0
  40b2d0:	b.lt	40b314 <manager_connect_bus+0x1f0>  // b.tstop
  40b2d4:	ldr	w0, [sp, #224]
  40b2d8:	lsl	w1, w0, #10
  40b2dc:	ldr	w0, [sp, #216]
  40b2e0:	orr	w6, w1, w0
  40b2e4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b2e8:	add	x1, x0, #0x273
  40b2ec:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b2f0:	add	x5, x0, #0x780
  40b2f4:	adrp	x0, 43d000 <_fini+0xdb0>
  40b2f8:	add	x4, x0, #0x588
  40b2fc:	mov	w3, #0x273                 	// #627
  40b300:	mov	x2, x1
  40b304:	ldr	w1, [sp, #220]
  40b308:	mov	w0, w6
  40b30c:	bl	407d60 <log_internal_realm@plt>
  40b310:	b	40bdac <manager_connect_bus+0xc88>
  40b314:	ldr	w0, [sp, #220]
  40b318:	cmp	w0, #0x0
  40b31c:	cneg	w0, w0, lt  // lt = tstop
  40b320:	and	w0, w0, #0xff
  40b324:	neg	w0, w0
  40b328:	b	40bdac <manager_connect_bus+0xc88>
  40b32c:	ldr	x0, [sp, #40]
  40b330:	ldr	x7, [x0, #8]
  40b334:	ldr	x6, [sp, #40]
  40b338:	adrp	x0, 426000 <method_switch_to_next+0x90>
  40b33c:	add	x5, x0, #0x120
  40b340:	adrp	x0, 45e000 <manager_vtable+0xad0>
  40b344:	add	x4, x0, #0xb48
  40b348:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b34c:	add	x3, x0, #0x7a8
  40b350:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b354:	add	x2, x0, #0x7c8
  40b358:	mov	x1, #0x0                   	// #0
  40b35c:	mov	x0, x7
  40b360:	bl	407dc0 <sd_bus_add_fallback_vtable@plt>
  40b364:	str	w0, [sp, #56]
  40b368:	ldr	w0, [sp, #56]
  40b36c:	cmp	w0, #0x0
  40b370:	b.ge	40b3fc <manager_connect_bus+0x2d8>  // b.tcont
  40b374:	mov	w0, #0x3                   	// #3
  40b378:	str	w0, [sp, #204]
  40b37c:	ldr	w0, [sp, #56]
  40b380:	str	w0, [sp, #208]
  40b384:	str	wzr, [sp, #212]
  40b388:	ldr	w0, [sp, #212]
  40b38c:	bl	4083e0 <log_get_max_level_realm@plt>
  40b390:	mov	w1, w0
  40b394:	ldr	w0, [sp, #204]
  40b398:	and	w0, w0, #0x7
  40b39c:	cmp	w1, w0
  40b3a0:	b.lt	40b3e4 <manager_connect_bus+0x2c0>  // b.tstop
  40b3a4:	ldr	w0, [sp, #212]
  40b3a8:	lsl	w1, w0, #10
  40b3ac:	ldr	w0, [sp, #204]
  40b3b0:	orr	w6, w1, w0
  40b3b4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b3b8:	add	x1, x0, #0x273
  40b3bc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b3c0:	add	x5, x0, #0x7e8
  40b3c4:	adrp	x0, 43d000 <_fini+0xdb0>
  40b3c8:	add	x4, x0, #0x588
  40b3cc:	mov	w3, #0x277                 	// #631
  40b3d0:	mov	x2, x1
  40b3d4:	ldr	w1, [sp, #208]
  40b3d8:	mov	w0, w6
  40b3dc:	bl	407d60 <log_internal_realm@plt>
  40b3e0:	b	40bdac <manager_connect_bus+0xc88>
  40b3e4:	ldr	w0, [sp, #208]
  40b3e8:	cmp	w0, #0x0
  40b3ec:	cneg	w0, w0, lt  // lt = tstop
  40b3f0:	and	w0, w0, #0xff
  40b3f4:	neg	w0, w0
  40b3f8:	b	40bdac <manager_connect_bus+0xc88>
  40b3fc:	ldr	x0, [sp, #40]
  40b400:	ldr	x5, [x0, #8]
  40b404:	ldr	x4, [sp, #40]
  40b408:	adrp	x0, 426000 <method_switch_to_next+0x90>
  40b40c:	add	x3, x0, #0x494
  40b410:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b414:	add	x2, x0, #0x7c8
  40b418:	mov	x1, #0x0                   	// #0
  40b41c:	mov	x0, x5
  40b420:	bl	408110 <sd_bus_add_node_enumerator@plt>
  40b424:	str	w0, [sp, #56]
  40b428:	ldr	w0, [sp, #56]
  40b42c:	cmp	w0, #0x0
  40b430:	b.ge	40b4bc <manager_connect_bus+0x398>  // b.tcont
  40b434:	mov	w0, #0x3                   	// #3
  40b438:	str	w0, [sp, #192]
  40b43c:	ldr	w0, [sp, #56]
  40b440:	str	w0, [sp, #196]
  40b444:	str	wzr, [sp, #200]
  40b448:	ldr	w0, [sp, #200]
  40b44c:	bl	4083e0 <log_get_max_level_realm@plt>
  40b450:	mov	w1, w0
  40b454:	ldr	w0, [sp, #192]
  40b458:	and	w0, w0, #0x7
  40b45c:	cmp	w1, w0
  40b460:	b.lt	40b4a4 <manager_connect_bus+0x380>  // b.tstop
  40b464:	ldr	w0, [sp, #200]
  40b468:	lsl	w1, w0, #10
  40b46c:	ldr	w0, [sp, #192]
  40b470:	orr	w6, w1, w0
  40b474:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b478:	add	x1, x0, #0x273
  40b47c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b480:	add	x5, x0, #0x810
  40b484:	adrp	x0, 43d000 <_fini+0xdb0>
  40b488:	add	x4, x0, #0x588
  40b48c:	mov	w3, #0x27b                 	// #635
  40b490:	mov	x2, x1
  40b494:	ldr	w1, [sp, #196]
  40b498:	mov	w0, w6
  40b49c:	bl	407d60 <log_internal_realm@plt>
  40b4a0:	b	40bdac <manager_connect_bus+0xc88>
  40b4a4:	ldr	w0, [sp, #196]
  40b4a8:	cmp	w0, #0x0
  40b4ac:	cneg	w0, w0, lt  // lt = tstop
  40b4b0:	and	w0, w0, #0xff
  40b4b4:	neg	w0, w0
  40b4b8:	b	40bdac <manager_connect_bus+0xc88>
  40b4bc:	ldr	x0, [sp, #40]
  40b4c0:	ldr	x7, [x0, #8]
  40b4c4:	ldr	x6, [sp, #40]
  40b4c8:	adrp	x0, 42c000 <method_set_brightness+0x36c>
  40b4cc:	add	x5, x0, #0x8c
  40b4d0:	adrp	x0, 45e000 <manager_vtable+0xad0>
  40b4d4:	add	x4, x0, #0xec8
  40b4d8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b4dc:	add	x3, x0, #0x838
  40b4e0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b4e4:	add	x2, x0, #0x858
  40b4e8:	mov	x1, #0x0                   	// #0
  40b4ec:	mov	x0, x7
  40b4f0:	bl	407dc0 <sd_bus_add_fallback_vtable@plt>
  40b4f4:	str	w0, [sp, #56]
  40b4f8:	ldr	w0, [sp, #56]
  40b4fc:	cmp	w0, #0x0
  40b500:	b.ge	40b58c <manager_connect_bus+0x468>  // b.tcont
  40b504:	mov	w0, #0x3                   	// #3
  40b508:	str	w0, [sp, #180]
  40b50c:	ldr	w0, [sp, #56]
  40b510:	str	w0, [sp, #184]
  40b514:	str	wzr, [sp, #188]
  40b518:	ldr	w0, [sp, #188]
  40b51c:	bl	4083e0 <log_get_max_level_realm@plt>
  40b520:	mov	w1, w0
  40b524:	ldr	w0, [sp, #180]
  40b528:	and	w0, w0, #0x7
  40b52c:	cmp	w1, w0
  40b530:	b.lt	40b574 <manager_connect_bus+0x450>  // b.tstop
  40b534:	ldr	w0, [sp, #188]
  40b538:	lsl	w1, w0, #10
  40b53c:	ldr	w0, [sp, #180]
  40b540:	orr	w6, w1, w0
  40b544:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b548:	add	x1, x0, #0x273
  40b54c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b550:	add	x5, x0, #0x878
  40b554:	adrp	x0, 43d000 <_fini+0xdb0>
  40b558:	add	x4, x0, #0x588
  40b55c:	mov	w3, #0x27f                 	// #639
  40b560:	mov	x2, x1
  40b564:	ldr	w1, [sp, #184]
  40b568:	mov	w0, w6
  40b56c:	bl	407d60 <log_internal_realm@plt>
  40b570:	b	40bdac <manager_connect_bus+0xc88>
  40b574:	ldr	w0, [sp, #184]
  40b578:	cmp	w0, #0x0
  40b57c:	cneg	w0, w0, lt  // lt = tstop
  40b580:	and	w0, w0, #0xff
  40b584:	neg	w0, w0
  40b588:	b	40bdac <manager_connect_bus+0xc88>
  40b58c:	ldr	x0, [sp, #40]
  40b590:	ldr	x5, [x0, #8]
  40b594:	ldr	x4, [sp, #40]
  40b598:	adrp	x0, 42c000 <method_set_brightness+0x36c>
  40b59c:	add	x3, x0, #0x400
  40b5a0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b5a4:	add	x2, x0, #0x858
  40b5a8:	mov	x1, #0x0                   	// #0
  40b5ac:	mov	x0, x5
  40b5b0:	bl	408110 <sd_bus_add_node_enumerator@plt>
  40b5b4:	str	w0, [sp, #56]
  40b5b8:	ldr	w0, [sp, #56]
  40b5bc:	cmp	w0, #0x0
  40b5c0:	b.ge	40b64c <manager_connect_bus+0x528>  // b.tcont
  40b5c4:	mov	w0, #0x3                   	// #3
  40b5c8:	str	w0, [sp, #168]
  40b5cc:	ldr	w0, [sp, #56]
  40b5d0:	str	w0, [sp, #172]
  40b5d4:	str	wzr, [sp, #176]
  40b5d8:	ldr	w0, [sp, #176]
  40b5dc:	bl	4083e0 <log_get_max_level_realm@plt>
  40b5e0:	mov	w1, w0
  40b5e4:	ldr	w0, [sp, #168]
  40b5e8:	and	w0, w0, #0x7
  40b5ec:	cmp	w1, w0
  40b5f0:	b.lt	40b634 <manager_connect_bus+0x510>  // b.tstop
  40b5f4:	ldr	w0, [sp, #176]
  40b5f8:	lsl	w1, w0, #10
  40b5fc:	ldr	w0, [sp, #168]
  40b600:	orr	w6, w1, w0
  40b604:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b608:	add	x1, x0, #0x273
  40b60c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b610:	add	x5, x0, #0x8a0
  40b614:	adrp	x0, 43d000 <_fini+0xdb0>
  40b618:	add	x4, x0, #0x588
  40b61c:	mov	w3, #0x283                 	// #643
  40b620:	mov	x2, x1
  40b624:	ldr	w1, [sp, #172]
  40b628:	mov	w0, w6
  40b62c:	bl	407d60 <log_internal_realm@plt>
  40b630:	b	40bdac <manager_connect_bus+0xc88>
  40b634:	ldr	w0, [sp, #172]
  40b638:	cmp	w0, #0x0
  40b63c:	cneg	w0, w0, lt  // lt = tstop
  40b640:	and	w0, w0, #0xff
  40b644:	neg	w0, w0
  40b648:	b	40bdac <manager_connect_bus+0xc88>
  40b64c:	ldr	x0, [sp, #40]
  40b650:	ldr	x7, [x0, #8]
  40b654:	ldr	x6, [sp, #40]
  40b658:	adrp	x0, 435000 <property_get_idle_since_hint+0x160>
  40b65c:	add	x5, x0, #0x494
  40b660:	adrp	x0, 45f000 <session_vtable+0x138>
  40b664:	add	x4, x0, #0x868
  40b668:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b66c:	add	x3, x0, #0x8c8
  40b670:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b674:	add	x2, x0, #0x8e8
  40b678:	mov	x1, #0x0                   	// #0
  40b67c:	mov	x0, x7
  40b680:	bl	407dc0 <sd_bus_add_fallback_vtable@plt>
  40b684:	str	w0, [sp, #56]
  40b688:	ldr	w0, [sp, #56]
  40b68c:	cmp	w0, #0x0
  40b690:	b.ge	40b71c <manager_connect_bus+0x5f8>  // b.tcont
  40b694:	mov	w0, #0x3                   	// #3
  40b698:	str	w0, [sp, #156]
  40b69c:	ldr	w0, [sp, #56]
  40b6a0:	str	w0, [sp, #160]
  40b6a4:	str	wzr, [sp, #164]
  40b6a8:	ldr	w0, [sp, #164]
  40b6ac:	bl	4083e0 <log_get_max_level_realm@plt>
  40b6b0:	mov	w1, w0
  40b6b4:	ldr	w0, [sp, #156]
  40b6b8:	and	w0, w0, #0x7
  40b6bc:	cmp	w1, w0
  40b6c0:	b.lt	40b704 <manager_connect_bus+0x5e0>  // b.tstop
  40b6c4:	ldr	w0, [sp, #164]
  40b6c8:	lsl	w1, w0, #10
  40b6cc:	ldr	w0, [sp, #156]
  40b6d0:	orr	w6, w1, w0
  40b6d4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b6d8:	add	x1, x0, #0x273
  40b6dc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b6e0:	add	x5, x0, #0x908
  40b6e4:	adrp	x0, 43d000 <_fini+0xdb0>
  40b6e8:	add	x4, x0, #0x588
  40b6ec:	mov	w3, #0x287                 	// #647
  40b6f0:	mov	x2, x1
  40b6f4:	ldr	w1, [sp, #160]
  40b6f8:	mov	w0, w6
  40b6fc:	bl	407d60 <log_internal_realm@plt>
  40b700:	b	40bdac <manager_connect_bus+0xc88>
  40b704:	ldr	w0, [sp, #160]
  40b708:	cmp	w0, #0x0
  40b70c:	cneg	w0, w0, lt  // lt = tstop
  40b710:	and	w0, w0, #0xff
  40b714:	neg	w0, w0
  40b718:	b	40bdac <manager_connect_bus+0xc88>
  40b71c:	ldr	x0, [sp, #40]
  40b720:	ldr	x5, [x0, #8]
  40b724:	ldr	x4, [sp, #40]
  40b728:	adrp	x0, 435000 <property_get_idle_since_hint+0x160>
  40b72c:	add	x3, x0, #0x828
  40b730:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b734:	add	x2, x0, #0x8e8
  40b738:	mov	x1, #0x0                   	// #0
  40b73c:	mov	x0, x5
  40b740:	bl	408110 <sd_bus_add_node_enumerator@plt>
  40b744:	str	w0, [sp, #56]
  40b748:	ldr	w0, [sp, #56]
  40b74c:	cmp	w0, #0x0
  40b750:	b.ge	40b7dc <manager_connect_bus+0x6b8>  // b.tcont
  40b754:	mov	w0, #0x3                   	// #3
  40b758:	str	w0, [sp, #144]
  40b75c:	ldr	w0, [sp, #56]
  40b760:	str	w0, [sp, #148]
  40b764:	str	wzr, [sp, #152]
  40b768:	ldr	w0, [sp, #152]
  40b76c:	bl	4083e0 <log_get_max_level_realm@plt>
  40b770:	mov	w1, w0
  40b774:	ldr	w0, [sp, #144]
  40b778:	and	w0, w0, #0x7
  40b77c:	cmp	w1, w0
  40b780:	b.lt	40b7c4 <manager_connect_bus+0x6a0>  // b.tstop
  40b784:	ldr	w0, [sp, #152]
  40b788:	lsl	w1, w0, #10
  40b78c:	ldr	w0, [sp, #144]
  40b790:	orr	w6, w1, w0
  40b794:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b798:	add	x1, x0, #0x273
  40b79c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b7a0:	add	x5, x0, #0x930
  40b7a4:	adrp	x0, 43d000 <_fini+0xdb0>
  40b7a8:	add	x4, x0, #0x588
  40b7ac:	mov	w3, #0x28b                 	// #651
  40b7b0:	mov	x2, x1
  40b7b4:	ldr	w1, [sp, #148]
  40b7b8:	mov	w0, w6
  40b7bc:	bl	407d60 <log_internal_realm@plt>
  40b7c0:	b	40bdac <manager_connect_bus+0xc88>
  40b7c4:	ldr	w0, [sp, #148]
  40b7c8:	cmp	w0, #0x0
  40b7cc:	cneg	w0, w0, lt  // lt = tstop
  40b7d0:	and	w0, w0, #0xff
  40b7d4:	neg	w0, w0
  40b7d8:	b	40bdac <manager_connect_bus+0xc88>
  40b7dc:	ldr	x0, [sp, #40]
  40b7e0:	ldr	x8, [x0, #8]
  40b7e4:	ldr	x0, [sp, #40]
  40b7e8:	str	x0, [sp]
  40b7ec:	mov	x7, #0x0                   	// #0
  40b7f0:	adrp	x0, 420000 <method_set_wall_message+0x19c>
  40b7f4:	add	x6, x0, #0x7a4
  40b7f8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b7fc:	add	x5, x0, #0x958
  40b800:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b804:	add	x4, x0, #0x968
  40b808:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b80c:	add	x3, x0, #0x990
  40b810:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b814:	add	x2, x0, #0x9b0
  40b818:	mov	x1, #0x0                   	// #0
  40b81c:	mov	x0, x8
  40b820:	bl	407840 <sd_bus_match_signal_async@plt>
  40b824:	str	w0, [sp, #56]
  40b828:	ldr	w0, [sp, #56]
  40b82c:	cmp	w0, #0x0
  40b830:	b.ge	40b8bc <manager_connect_bus+0x798>  // b.tcont
  40b834:	mov	w0, #0x3                   	// #3
  40b838:	str	w0, [sp, #132]
  40b83c:	ldr	w0, [sp, #56]
  40b840:	str	w0, [sp, #136]
  40b844:	str	wzr, [sp, #140]
  40b848:	ldr	w0, [sp, #140]
  40b84c:	bl	4083e0 <log_get_max_level_realm@plt>
  40b850:	mov	w1, w0
  40b854:	ldr	w0, [sp, #132]
  40b858:	and	w0, w0, #0x7
  40b85c:	cmp	w1, w0
  40b860:	b.lt	40b8a4 <manager_connect_bus+0x780>  // b.tstop
  40b864:	ldr	w0, [sp, #140]
  40b868:	lsl	w1, w0, #10
  40b86c:	ldr	w0, [sp, #132]
  40b870:	orr	w6, w1, w0
  40b874:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b878:	add	x1, x0, #0x273
  40b87c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b880:	add	x5, x0, #0x9d0
  40b884:	adrp	x0, 43d000 <_fini+0xdb0>
  40b888:	add	x4, x0, #0x588
  40b88c:	mov	w3, #0x296                 	// #662
  40b890:	mov	x2, x1
  40b894:	ldr	w1, [sp, #136]
  40b898:	mov	w0, w6
  40b89c:	bl	407d60 <log_internal_realm@plt>
  40b8a0:	b	40bdac <manager_connect_bus+0xc88>
  40b8a4:	ldr	w0, [sp, #136]
  40b8a8:	cmp	w0, #0x0
  40b8ac:	cneg	w0, w0, lt  // lt = tstop
  40b8b0:	and	w0, w0, #0xff
  40b8b4:	neg	w0, w0
  40b8b8:	b	40bdac <manager_connect_bus+0xc88>
  40b8bc:	ldr	x0, [sp, #40]
  40b8c0:	ldr	x8, [x0, #8]
  40b8c4:	ldr	x0, [sp, #40]
  40b8c8:	str	x0, [sp]
  40b8cc:	mov	x7, #0x0                   	// #0
  40b8d0:	adrp	x0, 420000 <method_set_wall_message+0x19c>
  40b8d4:	add	x6, x0, #0xb84
  40b8d8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b8dc:	add	x5, x0, #0xa00
  40b8e0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b8e4:	add	x4, x0, #0x968
  40b8e8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b8ec:	add	x3, x0, #0x990
  40b8f0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b8f4:	add	x2, x0, #0x9b0
  40b8f8:	mov	x1, #0x0                   	// #0
  40b8fc:	mov	x0, x8
  40b900:	bl	407840 <sd_bus_match_signal_async@plt>
  40b904:	str	w0, [sp, #56]
  40b908:	ldr	w0, [sp, #56]
  40b90c:	cmp	w0, #0x0
  40b910:	b.ge	40b99c <manager_connect_bus+0x878>  // b.tcont
  40b914:	mov	w0, #0x3                   	// #3
  40b918:	str	w0, [sp, #120]
  40b91c:	ldr	w0, [sp, #56]
  40b920:	str	w0, [sp, #124]
  40b924:	str	wzr, [sp, #128]
  40b928:	ldr	w0, [sp, #128]
  40b92c:	bl	4083e0 <log_get_max_level_realm@plt>
  40b930:	mov	w1, w0
  40b934:	ldr	w0, [sp, #120]
  40b938:	and	w0, w0, #0x7
  40b93c:	cmp	w1, w0
  40b940:	b.lt	40b984 <manager_connect_bus+0x860>  // b.tstop
  40b944:	ldr	w0, [sp, #128]
  40b948:	lsl	w1, w0, #10
  40b94c:	ldr	w0, [sp, #120]
  40b950:	orr	w6, w1, w0
  40b954:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b958:	add	x1, x0, #0x273
  40b95c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b960:	add	x5, x0, #0xa10
  40b964:	adrp	x0, 43d000 <_fini+0xdb0>
  40b968:	add	x4, x0, #0x588
  40b96c:	mov	w3, #0x2a1                 	// #673
  40b970:	mov	x2, x1
  40b974:	ldr	w1, [sp, #124]
  40b978:	mov	w0, w6
  40b97c:	bl	407d60 <log_internal_realm@plt>
  40b980:	b	40bdac <manager_connect_bus+0xc88>
  40b984:	ldr	w0, [sp, #124]
  40b988:	cmp	w0, #0x0
  40b98c:	cneg	w0, w0, lt  // lt = tstop
  40b990:	and	w0, w0, #0xff
  40b994:	neg	w0, w0
  40b998:	b	40bdac <manager_connect_bus+0xc88>
  40b99c:	ldr	x0, [sp, #40]
  40b9a0:	ldr	x8, [x0, #8]
  40b9a4:	ldr	x0, [sp, #40]
  40b9a8:	str	x0, [sp]
  40b9ac:	mov	x7, #0x0                   	// #0
  40b9b0:	adrp	x0, 420000 <method_set_wall_message+0x19c>
  40b9b4:	add	x6, x0, #0xd70
  40b9b8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b9bc:	add	x5, x0, #0xa40
  40b9c0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b9c4:	add	x4, x0, #0xa58
  40b9c8:	mov	x3, #0x0                   	// #0
  40b9cc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40b9d0:	add	x2, x0, #0x9b0
  40b9d4:	mov	x1, #0x0                   	// #0
  40b9d8:	mov	x0, x8
  40b9dc:	bl	407840 <sd_bus_match_signal_async@plt>
  40b9e0:	str	w0, [sp, #56]
  40b9e4:	ldr	w0, [sp, #56]
  40b9e8:	cmp	w0, #0x0
  40b9ec:	b.ge	40ba78 <manager_connect_bus+0x954>  // b.tcont
  40b9f0:	mov	w0, #0x3                   	// #3
  40b9f4:	str	w0, [sp, #108]
  40b9f8:	ldr	w0, [sp, #56]
  40b9fc:	str	w0, [sp, #112]
  40ba00:	str	wzr, [sp, #116]
  40ba04:	ldr	w0, [sp, #116]
  40ba08:	bl	4083e0 <log_get_max_level_realm@plt>
  40ba0c:	mov	w1, w0
  40ba10:	ldr	w0, [sp, #108]
  40ba14:	and	w0, w0, #0x7
  40ba18:	cmp	w1, w0
  40ba1c:	b.lt	40ba60 <manager_connect_bus+0x93c>  // b.tstop
  40ba20:	ldr	w0, [sp, #116]
  40ba24:	lsl	w1, w0, #10
  40ba28:	ldr	w0, [sp, #108]
  40ba2c:	orr	w6, w1, w0
  40ba30:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ba34:	add	x1, x0, #0x273
  40ba38:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ba3c:	add	x5, x0, #0xa78
  40ba40:	adrp	x0, 43d000 <_fini+0xdb0>
  40ba44:	add	x4, x0, #0x588
  40ba48:	mov	w3, #0x2ac                 	// #684
  40ba4c:	mov	x2, x1
  40ba50:	ldr	w1, [sp, #112]
  40ba54:	mov	w0, w6
  40ba58:	bl	407d60 <log_internal_realm@plt>
  40ba5c:	b	40bdac <manager_connect_bus+0xc88>
  40ba60:	ldr	w0, [sp, #112]
  40ba64:	cmp	w0, #0x0
  40ba68:	cneg	w0, w0, lt  // lt = tstop
  40ba6c:	and	w0, w0, #0xff
  40ba70:	neg	w0, w0
  40ba74:	b	40bdac <manager_connect_bus+0xc88>
  40ba78:	ldr	x0, [sp, #40]
  40ba7c:	ldr	x8, [x0, #8]
  40ba80:	ldr	x0, [sp, #40]
  40ba84:	str	x0, [sp]
  40ba88:	mov	x7, #0x0                   	// #0
  40ba8c:	adrp	x0, 420000 <method_set_wall_message+0x19c>
  40ba90:	add	x6, x0, #0xf38
  40ba94:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ba98:	add	x5, x0, #0xab0
  40ba9c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40baa0:	add	x4, x0, #0x968
  40baa4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40baa8:	add	x3, x0, #0x990
  40baac:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bab0:	add	x2, x0, #0x9b0
  40bab4:	mov	x1, #0x0                   	// #0
  40bab8:	mov	x0, x8
  40babc:	bl	407840 <sd_bus_match_signal_async@plt>
  40bac0:	str	w0, [sp, #56]
  40bac4:	ldr	w0, [sp, #56]
  40bac8:	cmp	w0, #0x0
  40bacc:	b.ge	40bb58 <manager_connect_bus+0xa34>  // b.tcont
  40bad0:	mov	w0, #0x3                   	// #3
  40bad4:	str	w0, [sp, #96]
  40bad8:	ldr	w0, [sp, #56]
  40badc:	str	w0, [sp, #100]
  40bae0:	str	wzr, [sp, #104]
  40bae4:	ldr	w0, [sp, #104]
  40bae8:	bl	4083e0 <log_get_max_level_realm@plt>
  40baec:	mov	w1, w0
  40baf0:	ldr	w0, [sp, #96]
  40baf4:	and	w0, w0, #0x7
  40baf8:	cmp	w1, w0
  40bafc:	b.lt	40bb40 <manager_connect_bus+0xa1c>  // b.tstop
  40bb00:	ldr	w0, [sp, #104]
  40bb04:	lsl	w1, w0, #10
  40bb08:	ldr	w0, [sp, #96]
  40bb0c:	orr	w6, w1, w0
  40bb10:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bb14:	add	x1, x0, #0x273
  40bb18:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bb1c:	add	x5, x0, #0xac0
  40bb20:	adrp	x0, 43d000 <_fini+0xdb0>
  40bb24:	add	x4, x0, #0x588
  40bb28:	mov	w3, #0x2b7                 	// #695
  40bb2c:	mov	x2, x1
  40bb30:	ldr	w1, [sp, #100]
  40bb34:	mov	w0, w6
  40bb38:	bl	407d60 <log_internal_realm@plt>
  40bb3c:	b	40bdac <manager_connect_bus+0xc88>
  40bb40:	ldr	w0, [sp, #100]
  40bb44:	cmp	w0, #0x0
  40bb48:	cneg	w0, w0, lt  // lt = tstop
  40bb4c:	and	w0, w0, #0xff
  40bb50:	neg	w0, w0
  40bb54:	b	40bdac <manager_connect_bus+0xc88>
  40bb58:	ldr	x0, [sp, #40]
  40bb5c:	ldr	x8, [x0, #8]
  40bb60:	str	xzr, [sp]
  40bb64:	mov	x7, #0x0                   	// #0
  40bb68:	mov	x6, #0x0                   	// #0
  40bb6c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bb70:	add	x5, x0, #0xaf0
  40bb74:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bb78:	add	x4, x0, #0x968
  40bb7c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bb80:	add	x3, x0, #0x990
  40bb84:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bb88:	add	x2, x0, #0x9b0
  40bb8c:	mov	x1, #0x0                   	// #0
  40bb90:	mov	x0, x8
  40bb94:	bl	408370 <sd_bus_call_method_async@plt>
  40bb98:	str	w0, [sp, #56]
  40bb9c:	ldr	w0, [sp, #56]
  40bba0:	cmp	w0, #0x0
  40bba4:	b.ge	40bc30 <manager_connect_bus+0xb0c>  // b.tcont
  40bba8:	mov	w0, #0x3                   	// #3
  40bbac:	str	w0, [sp, #84]
  40bbb0:	ldr	w0, [sp, #56]
  40bbb4:	str	w0, [sp, #88]
  40bbb8:	str	wzr, [sp, #92]
  40bbbc:	ldr	w0, [sp, #92]
  40bbc0:	bl	4083e0 <log_get_max_level_realm@plt>
  40bbc4:	mov	w1, w0
  40bbc8:	ldr	w0, [sp, #84]
  40bbcc:	and	w0, w0, #0x7
  40bbd0:	cmp	w1, w0
  40bbd4:	b.lt	40bc18 <manager_connect_bus+0xaf4>  // b.tstop
  40bbd8:	ldr	w0, [sp, #92]
  40bbdc:	lsl	w1, w0, #10
  40bbe0:	ldr	w0, [sp, #84]
  40bbe4:	orr	w6, w1, w0
  40bbe8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bbec:	add	x1, x0, #0x273
  40bbf0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bbf4:	add	x5, x0, #0xb00
  40bbf8:	adrp	x0, 43d000 <_fini+0xdb0>
  40bbfc:	add	x4, x0, #0x588
  40bc00:	mov	w3, #0x2c3                 	// #707
  40bc04:	mov	x2, x1
  40bc08:	ldr	w1, [sp, #88]
  40bc0c:	mov	w0, w6
  40bc10:	bl	407d60 <log_internal_realm@plt>
  40bc14:	b	40bdac <manager_connect_bus+0xc88>
  40bc18:	ldr	w0, [sp, #88]
  40bc1c:	cmp	w0, #0x0
  40bc20:	cneg	w0, w0, lt  // lt = tstop
  40bc24:	and	w0, w0, #0xff
  40bc28:	neg	w0, w0
  40bc2c:	b	40bdac <manager_connect_bus+0xc88>
  40bc30:	ldr	x0, [sp, #40]
  40bc34:	ldr	x6, [x0, #8]
  40bc38:	mov	x5, #0x0                   	// #0
  40bc3c:	mov	x4, #0x0                   	// #0
  40bc40:	mov	x3, #0x0                   	// #0
  40bc44:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bc48:	add	x2, x0, #0xb28
  40bc4c:	mov	x1, #0x0                   	// #0
  40bc50:	mov	x0, x6
  40bc54:	bl	4072a0 <sd_bus_request_name_async@plt>
  40bc58:	str	w0, [sp, #56]
  40bc5c:	ldr	w0, [sp, #56]
  40bc60:	cmp	w0, #0x0
  40bc64:	b.ge	40bcf0 <manager_connect_bus+0xbcc>  // b.tcont
  40bc68:	mov	w0, #0x3                   	// #3
  40bc6c:	str	w0, [sp, #72]
  40bc70:	ldr	w0, [sp, #56]
  40bc74:	str	w0, [sp, #76]
  40bc78:	str	wzr, [sp, #80]
  40bc7c:	ldr	w0, [sp, #80]
  40bc80:	bl	4083e0 <log_get_max_level_realm@plt>
  40bc84:	mov	w1, w0
  40bc88:	ldr	w0, [sp, #72]
  40bc8c:	and	w0, w0, #0x7
  40bc90:	cmp	w1, w0
  40bc94:	b.lt	40bcd8 <manager_connect_bus+0xbb4>  // b.tstop
  40bc98:	ldr	w0, [sp, #80]
  40bc9c:	lsl	w1, w0, #10
  40bca0:	ldr	w0, [sp, #72]
  40bca4:	orr	w6, w1, w0
  40bca8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bcac:	add	x1, x0, #0x273
  40bcb0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bcb4:	add	x5, x0, #0xb40
  40bcb8:	adrp	x0, 43d000 <_fini+0xdb0>
  40bcbc:	add	x4, x0, #0x588
  40bcc0:	mov	w3, #0x2c7                 	// #711
  40bcc4:	mov	x2, x1
  40bcc8:	ldr	w1, [sp, #76]
  40bccc:	mov	w0, w6
  40bcd0:	bl	407d60 <log_internal_realm@plt>
  40bcd4:	b	40bdac <manager_connect_bus+0xc88>
  40bcd8:	ldr	w0, [sp, #76]
  40bcdc:	cmp	w0, #0x0
  40bce0:	cneg	w0, w0, lt  // lt = tstop
  40bce4:	and	w0, w0, #0xff
  40bce8:	neg	w0, w0
  40bcec:	b	40bdac <manager_connect_bus+0xc88>
  40bcf0:	ldr	x0, [sp, #40]
  40bcf4:	ldr	x3, [x0, #8]
  40bcf8:	ldr	x0, [sp, #40]
  40bcfc:	ldr	x0, [x0]
  40bd00:	mov	w2, #0x0                   	// #0
  40bd04:	mov	x1, x0
  40bd08:	mov	x0, x3
  40bd0c:	bl	407710 <sd_bus_attach_event@plt>
  40bd10:	str	w0, [sp, #56]
  40bd14:	ldr	w0, [sp, #56]
  40bd18:	cmp	w0, #0x0
  40bd1c:	b.ge	40bda8 <manager_connect_bus+0xc84>  // b.tcont
  40bd20:	mov	w0, #0x3                   	// #3
  40bd24:	str	w0, [sp, #60]
  40bd28:	ldr	w0, [sp, #56]
  40bd2c:	str	w0, [sp, #64]
  40bd30:	str	wzr, [sp, #68]
  40bd34:	ldr	w0, [sp, #68]
  40bd38:	bl	4083e0 <log_get_max_level_realm@plt>
  40bd3c:	mov	w1, w0
  40bd40:	ldr	w0, [sp, #60]
  40bd44:	and	w0, w0, #0x7
  40bd48:	cmp	w1, w0
  40bd4c:	b.lt	40bd90 <manager_connect_bus+0xc6c>  // b.tstop
  40bd50:	ldr	w0, [sp, #68]
  40bd54:	lsl	w1, w0, #10
  40bd58:	ldr	w0, [sp, #60]
  40bd5c:	orr	w6, w1, w0
  40bd60:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bd64:	add	x1, x0, #0x273
  40bd68:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bd6c:	add	x5, x0, #0xb60
  40bd70:	adrp	x0, 43d000 <_fini+0xdb0>
  40bd74:	add	x4, x0, #0x588
  40bd78:	mov	w3, #0x2cb                 	// #715
  40bd7c:	mov	x2, x1
  40bd80:	ldr	w1, [sp, #64]
  40bd84:	mov	w0, w6
  40bd88:	bl	407d60 <log_internal_realm@plt>
  40bd8c:	b	40bdac <manager_connect_bus+0xc88>
  40bd90:	ldr	w0, [sp, #64]
  40bd94:	cmp	w0, #0x0
  40bd98:	cneg	w0, w0, lt  // lt = tstop
  40bd9c:	and	w0, w0, #0xff
  40bda0:	neg	w0, w0
  40bda4:	b	40bdac <manager_connect_bus+0xc88>
  40bda8:	mov	w0, #0x0                   	// #0
  40bdac:	ldp	x29, x30, [sp, #16]
  40bdb0:	add	sp, sp, #0xf0
  40bdb4:	ret

000000000040bdb8 <manager_vt_switch>:
  40bdb8:	stp	x29, x30, [sp, #-144]!
  40bdbc:	mov	x29, sp
  40bdc0:	str	x19, [sp, #16]
  40bdc4:	str	x0, [sp, #56]
  40bdc8:	str	x1, [sp, #48]
  40bdcc:	str	x2, [sp, #40]
  40bdd0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40bdd4:	add	x0, x0, #0x508
  40bdd8:	ldr	x1, [x0]
  40bddc:	str	x1, [sp, #136]
  40bde0:	mov	x1, #0x0                   	// #0
  40bde4:	ldr	x0, [sp, #40]
  40bde8:	str	x0, [sp, #120]
  40bdec:	ldr	x0, [sp, #120]
  40bdf0:	ldr	x0, [x0, #168]
  40bdf4:	cmp	x0, #0x0
  40bdf8:	cset	w0, eq  // eq = none
  40bdfc:	and	w0, w0, #0xff
  40be00:	and	x0, x0, #0xff
  40be04:	cmp	x0, #0x0
  40be08:	b.eq	40be34 <manager_vt_switch+0x7c>  // b.none
  40be0c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40be10:	add	x1, x0, #0x273
  40be14:	adrp	x0, 43d000 <_fini+0xdb0>
  40be18:	add	x4, x0, #0x5a0
  40be1c:	mov	w3, #0x2e2                 	// #738
  40be20:	mov	x2, x1
  40be24:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40be28:	add	x1, x0, #0x6b8
  40be2c:	mov	w0, #0x0                   	// #0
  40be30:	bl	407650 <log_assert_failed_realm@plt>
  40be34:	ldr	x0, [sp, #120]
  40be38:	ldr	x0, [x0, #168]
  40be3c:	bl	4284c4 <seat_read_active_vt>
  40be40:	ldr	x0, [sp, #120]
  40be44:	ldr	x0, [x0, #168]
  40be48:	ldr	x0, [x0, #32]
  40be4c:	str	x0, [sp, #128]
  40be50:	ldr	x0, [sp, #128]
  40be54:	cmp	x0, #0x0
  40be58:	b.eq	40be6c <manager_vt_switch+0xb4>  // b.none
  40be5c:	ldr	x0, [sp, #128]
  40be60:	ldr	w0, [x0, #144]
  40be64:	cmp	w0, #0x0
  40be68:	b.ne	40c030 <manager_vt_switch+0x278>  // b.any
  40be6c:	mov	w0, #0xffffffff            	// #-1
  40be70:	str	w0, [sp, #68]
  40be74:	mov	w0, #0x4                   	// #4
  40be78:	str	w0, [sp, #72]
  40be7c:	str	wzr, [sp, #76]
  40be80:	str	wzr, [sp, #80]
  40be84:	ldr	w0, [sp, #80]
  40be88:	bl	4083e0 <log_get_max_level_realm@plt>
  40be8c:	mov	w1, w0
  40be90:	ldr	w0, [sp, #72]
  40be94:	and	w0, w0, #0x7
  40be98:	cmp	w1, w0
  40be9c:	b.lt	40bee0 <manager_vt_switch+0x128>  // b.tstop
  40bea0:	ldr	w0, [sp, #80]
  40bea4:	lsl	w1, w0, #10
  40bea8:	ldr	w0, [sp, #72]
  40beac:	orr	w6, w1, w0
  40beb0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40beb4:	add	x1, x0, #0x273
  40beb8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bebc:	add	x5, x0, #0xb88
  40bec0:	adrp	x0, 43d000 <_fini+0xdb0>
  40bec4:	add	x4, x0, #0x5b8
  40bec8:	mov	w3, #0x2f0                 	// #752
  40becc:	mov	x2, x1
  40bed0:	ldr	w1, [sp, #76]
  40bed4:	mov	w0, w6
  40bed8:	bl	407d60 <log_internal_realm@plt>
  40bedc:	b	40bee8 <manager_vt_switch+0x130>
  40bee0:	ldr	w0, [sp, #76]
  40bee4:	cmp	w0, #0x0
  40bee8:	mov	w1, #0x902                 	// #2306
  40beec:	movk	w1, #0x8, lsl #16
  40bef0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bef4:	add	x0, x0, #0xbd0
  40bef8:	bl	407d20 <open_terminal@plt>
  40befc:	str	w0, [sp, #68]
  40bf00:	ldr	w0, [sp, #68]
  40bf04:	cmp	w0, #0x0
  40bf08:	b.ge	40bf8c <manager_vt_switch+0x1d4>  // b.tcont
  40bf0c:	mov	w0, #0x4                   	// #4
  40bf10:	str	w0, [sp, #100]
  40bf14:	ldr	w0, [sp, #68]
  40bf18:	str	w0, [sp, #104]
  40bf1c:	str	wzr, [sp, #108]
  40bf20:	ldr	w0, [sp, #108]
  40bf24:	bl	4083e0 <log_get_max_level_realm@plt>
  40bf28:	mov	w1, w0
  40bf2c:	ldr	w0, [sp, #100]
  40bf30:	and	w0, w0, #0x7
  40bf34:	cmp	w1, w0
  40bf38:	b.lt	40bf7c <manager_vt_switch+0x1c4>  // b.tstop
  40bf3c:	ldr	w0, [sp, #108]
  40bf40:	lsl	w1, w0, #10
  40bf44:	ldr	w0, [sp, #100]
  40bf48:	orr	w6, w1, w0
  40bf4c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bf50:	add	x1, x0, #0x273
  40bf54:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bf58:	add	x5, x0, #0xbe0
  40bf5c:	adrp	x0, 43d000 <_fini+0xdb0>
  40bf60:	add	x4, x0, #0x5b8
  40bf64:	mov	w3, #0x2f6                 	// #758
  40bf68:	mov	x2, x1
  40bf6c:	ldr	w1, [sp, #104]
  40bf70:	mov	w0, w6
  40bf74:	bl	407d60 <log_internal_realm@plt>
  40bf78:	b	40bf84 <manager_vt_switch+0x1cc>
  40bf7c:	ldr	w0, [sp, #104]
  40bf80:	cmp	w0, #0x0
  40bf84:	mov	w19, #0x0                   	// #0
  40bf88:	b	40c024 <manager_vt_switch+0x26c>
  40bf8c:	ldr	w0, [sp, #68]
  40bf90:	mov	w1, #0x1                   	// #1
  40bf94:	bl	4079c0 <vt_release@plt>
  40bf98:	str	w0, [sp, #84]
  40bf9c:	ldr	w0, [sp, #84]
  40bfa0:	cmp	w0, #0x0
  40bfa4:	b.ge	40c020 <manager_vt_switch+0x268>  // b.tcont
  40bfa8:	mov	w0, #0x4                   	// #4
  40bfac:	str	w0, [sp, #88]
  40bfb0:	ldr	w0, [sp, #84]
  40bfb4:	str	w0, [sp, #92]
  40bfb8:	str	wzr, [sp, #96]
  40bfbc:	ldr	w0, [sp, #96]
  40bfc0:	bl	4083e0 <log_get_max_level_realm@plt>
  40bfc4:	mov	w1, w0
  40bfc8:	ldr	w0, [sp, #88]
  40bfcc:	and	w0, w0, #0x7
  40bfd0:	cmp	w1, w0
  40bfd4:	b.lt	40c018 <manager_vt_switch+0x260>  // b.tstop
  40bfd8:	ldr	w0, [sp, #96]
  40bfdc:	lsl	w1, w0, #10
  40bfe0:	ldr	w0, [sp, #88]
  40bfe4:	orr	w6, w1, w0
  40bfe8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bfec:	add	x1, x0, #0x273
  40bff0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40bff4:	add	x5, x0, #0xc00
  40bff8:	adrp	x0, 43d000 <_fini+0xdb0>
  40bffc:	add	x4, x0, #0x5b8
  40c000:	mov	w3, #0x2fc                 	// #764
  40c004:	mov	x2, x1
  40c008:	ldr	w1, [sp, #92]
  40c00c:	mov	w0, w6
  40c010:	bl	407d60 <log_internal_realm@plt>
  40c014:	b	40c020 <manager_vt_switch+0x268>
  40c018:	ldr	w0, [sp, #92]
  40c01c:	cmp	w0, #0x0
  40c020:	mov	w19, #0x0                   	// #0
  40c024:	add	x0, sp, #0x44
  40c028:	bl	4088f8 <closep>
  40c02c:	b	40c0b0 <manager_vt_switch+0x2f8>
  40c030:	ldr	x0, [sp, #128]
  40c034:	ldr	w0, [x0, #148]
  40c038:	cmp	w0, #0x0
  40c03c:	b.lt	40c04c <manager_vt_switch+0x294>  // b.tstop
  40c040:	ldr	x0, [sp, #128]
  40c044:	bl	433e9c <session_leave_vt>
  40c048:	b	40c0ac <manager_vt_switch+0x2f4>
  40c04c:	ldr	x0, [sp, #120]
  40c050:	ldr	x0, [x0, #168]
  40c054:	ldr	x0, [x0, #48]
  40c058:	str	x0, [sp, #112]
  40c05c:	b	40c0a0 <manager_vt_switch+0x2e8>
  40c060:	ldr	x0, [sp, #112]
  40c064:	ldr	w1, [x0, #144]
  40c068:	ldr	x0, [sp, #128]
  40c06c:	ldr	w0, [x0, #144]
  40c070:	cmp	w1, w0
  40c074:	b.ne	40c094 <manager_vt_switch+0x2dc>  // b.any
  40c078:	ldr	x0, [sp, #112]
  40c07c:	ldr	w0, [x0, #148]
  40c080:	cmp	w0, #0x0
  40c084:	b.lt	40c094 <manager_vt_switch+0x2dc>  // b.tstop
  40c088:	ldr	x0, [sp, #112]
  40c08c:	bl	433e9c <session_leave_vt>
  40c090:	b	40c0ac <manager_vt_switch+0x2f4>
  40c094:	ldr	x0, [sp, #112]
  40c098:	ldr	x0, [x0, #272]
  40c09c:	str	x0, [sp, #112]
  40c0a0:	ldr	x0, [sp, #112]
  40c0a4:	cmp	x0, #0x0
  40c0a8:	b.ne	40c060 <manager_vt_switch+0x2a8>  // b.any
  40c0ac:	mov	w19, #0x0                   	// #0
  40c0b0:	mov	w1, w19
  40c0b4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40c0b8:	add	x0, x0, #0x508
  40c0bc:	ldr	x2, [sp, #136]
  40c0c0:	ldr	x0, [x0]
  40c0c4:	eor	x0, x2, x0
  40c0c8:	cmp	x0, #0x0
  40c0cc:	b.eq	40c0d4 <manager_vt_switch+0x31c>  // b.none
  40c0d0:	bl	407b20 <__stack_chk_fail@plt>
  40c0d4:	mov	w0, w1
  40c0d8:	ldr	x19, [sp, #16]
  40c0dc:	ldp	x29, x30, [sp], #144
  40c0e0:	ret

000000000040c0e4 <manager_connect_console>:
  40c0e4:	stp	x29, x30, [sp, #-128]!
  40c0e8:	mov	x29, sp
  40c0ec:	stp	x19, x20, [sp, #16]
  40c0f0:	str	x21, [sp, #32]
  40c0f4:	str	x0, [sp, #56]
  40c0f8:	ldr	x0, [sp, #56]
  40c0fc:	cmp	x0, #0x0
  40c100:	cset	w0, eq  // eq = none
  40c104:	and	w0, w0, #0xff
  40c108:	and	x0, x0, #0xff
  40c10c:	cmp	x0, #0x0
  40c110:	b.eq	40c13c <manager_connect_console+0x58>  // b.none
  40c114:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c118:	add	x1, x0, #0x273
  40c11c:	adrp	x0, 43d000 <_fini+0xdb0>
  40c120:	add	x4, x0, #0x5d0
  40c124:	mov	w3, #0x312                 	// #786
  40c128:	mov	x2, x1
  40c12c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c130:	add	x1, x0, #0x2a0
  40c134:	mov	w0, #0x0                   	// #0
  40c138:	bl	407650 <log_assert_failed_realm@plt>
  40c13c:	ldr	x0, [sp, #56]
  40c140:	ldr	w0, [x0, #152]
  40c144:	mvn	w0, w0
  40c148:	lsr	w0, w0, #31
  40c14c:	and	w0, w0, #0xff
  40c150:	and	x0, x0, #0xff
  40c154:	cmp	x0, #0x0
  40c158:	b.eq	40c184 <manager_connect_console+0xa0>  // b.none
  40c15c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c160:	add	x1, x0, #0x273
  40c164:	adrp	x0, 43d000 <_fini+0xdb0>
  40c168:	add	x4, x0, #0x5d0
  40c16c:	mov	w3, #0x313                 	// #787
  40c170:	mov	x2, x1
  40c174:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c178:	add	x1, x0, #0xc28
  40c17c:	mov	w0, #0x0                   	// #0
  40c180:	bl	407650 <log_assert_failed_realm@plt>
  40c184:	mov	w1, #0x0                   	// #0
  40c188:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c18c:	add	x0, x0, #0xbd0
  40c190:	bl	4077a0 <access@plt>
  40c194:	cmp	w0, #0x0
  40c198:	b.ge	40c1a4 <manager_connect_console+0xc0>  // b.tcont
  40c19c:	mov	w0, #0x0                   	// #0
  40c1a0:	b	40c5d8 <manager_connect_console+0x4f4>
  40c1a4:	mov	w1, #0x100                 	// #256
  40c1a8:	movk	w1, #0x8, lsl #16
  40c1ac:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c1b0:	add	x0, x0, #0xc48
  40c1b4:	bl	4082c0 <open64@plt>
  40c1b8:	mov	w1, w0
  40c1bc:	ldr	x0, [sp, #56]
  40c1c0:	str	w1, [x0, #152]
  40c1c4:	ldr	x0, [sp, #56]
  40c1c8:	ldr	w0, [x0, #152]
  40c1cc:	cmp	w0, #0x0
  40c1d0:	b.ge	40c2f4 <manager_connect_console+0x210>  // b.tcont
  40c1d4:	bl	407960 <__errno_location@plt>
  40c1d8:	ldr	w0, [x0]
  40c1dc:	cmp	w0, #0x2
  40c1e0:	b.ne	40c268 <manager_connect_console+0x184>  // b.any
  40c1e4:	mov	w0, #0x4                   	// #4
  40c1e8:	str	w0, [sp, #116]
  40c1ec:	bl	407960 <__errno_location@plt>
  40c1f0:	ldr	w0, [x0]
  40c1f4:	str	w0, [sp, #120]
  40c1f8:	str	wzr, [sp, #124]
  40c1fc:	ldr	w0, [sp, #124]
  40c200:	bl	4083e0 <log_get_max_level_realm@plt>
  40c204:	mov	w1, w0
  40c208:	ldr	w0, [sp, #116]
  40c20c:	and	w0, w0, #0x7
  40c210:	cmp	w1, w0
  40c214:	b.lt	40c258 <manager_connect_console+0x174>  // b.tstop
  40c218:	ldr	w0, [sp, #124]
  40c21c:	lsl	w1, w0, #10
  40c220:	ldr	w0, [sp, #116]
  40c224:	orr	w6, w1, w0
  40c228:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c22c:	add	x1, x0, #0x273
  40c230:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c234:	add	x5, x0, #0xc68
  40c238:	adrp	x0, 43d000 <_fini+0xdb0>
  40c23c:	add	x4, x0, #0x5e8
  40c240:	mov	w3, #0x321                 	// #801
  40c244:	mov	x2, x1
  40c248:	ldr	w1, [sp, #120]
  40c24c:	mov	w0, w6
  40c250:	bl	407d60 <log_internal_realm@plt>
  40c254:	b	40c260 <manager_connect_console+0x17c>
  40c258:	ldr	w0, [sp, #120]
  40c25c:	cmp	w0, #0x0
  40c260:	mov	w0, #0x0                   	// #0
  40c264:	b	40c5d8 <manager_connect_console+0x4f4>
  40c268:	mov	w0, #0x3                   	// #3
  40c26c:	str	w0, [sp, #104]
  40c270:	bl	407960 <__errno_location@plt>
  40c274:	ldr	w0, [x0]
  40c278:	str	w0, [sp, #108]
  40c27c:	str	wzr, [sp, #112]
  40c280:	ldr	w0, [sp, #112]
  40c284:	bl	4083e0 <log_get_max_level_realm@plt>
  40c288:	mov	w1, w0
  40c28c:	ldr	w0, [sp, #104]
  40c290:	and	w0, w0, #0x7
  40c294:	cmp	w1, w0
  40c298:	b.lt	40c2dc <manager_connect_console+0x1f8>  // b.tstop
  40c29c:	ldr	w0, [sp, #112]
  40c2a0:	lsl	w1, w0, #10
  40c2a4:	ldr	w0, [sp, #104]
  40c2a8:	orr	w6, w1, w0
  40c2ac:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c2b0:	add	x1, x0, #0x273
  40c2b4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c2b8:	add	x5, x0, #0xcc0
  40c2bc:	adrp	x0, 43d000 <_fini+0xdb0>
  40c2c0:	add	x4, x0, #0x5e8
  40c2c4:	mov	w3, #0x325                 	// #805
  40c2c8:	mov	x2, x1
  40c2cc:	ldr	w1, [sp, #108]
  40c2d0:	mov	w0, w6
  40c2d4:	bl	407d60 <log_internal_realm@plt>
  40c2d8:	b	40c5d8 <manager_connect_console+0x4f4>
  40c2dc:	ldr	w0, [sp, #108]
  40c2e0:	cmp	w0, #0x0
  40c2e4:	cneg	w0, w0, lt  // lt = tstop
  40c2e8:	and	w0, w0, #0xff
  40c2ec:	neg	w0, w0
  40c2f0:	b	40c5d8 <manager_connect_console+0x4f4>
  40c2f4:	ldr	x0, [sp, #56]
  40c2f8:	ldr	x6, [x0]
  40c2fc:	ldr	x0, [sp, #56]
  40c300:	add	x1, x0, #0x88
  40c304:	ldr	x0, [sp, #56]
  40c308:	ldr	w2, [x0, #152]
  40c30c:	ldr	x5, [sp, #56]
  40c310:	adrp	x0, 40a000 <deliver_fd+0x268>
  40c314:	add	x4, x0, #0xe3c
  40c318:	mov	w3, #0x0                   	// #0
  40c31c:	mov	x0, x6
  40c320:	bl	407eb0 <sd_event_add_io@plt>
  40c324:	str	w0, [sp, #64]
  40c328:	ldr	w0, [sp, #64]
  40c32c:	cmp	w0, #0x0
  40c330:	b.ge	40c3bc <manager_connect_console+0x2d8>  // b.tcont
  40c334:	mov	w0, #0x3                   	// #3
  40c338:	str	w0, [sp, #92]
  40c33c:	ldr	w0, [sp, #64]
  40c340:	str	w0, [sp, #96]
  40c344:	str	wzr, [sp, #100]
  40c348:	ldr	w0, [sp, #100]
  40c34c:	bl	4083e0 <log_get_max_level_realm@plt>
  40c350:	mov	w1, w0
  40c354:	ldr	w0, [sp, #92]
  40c358:	and	w0, w0, #0x7
  40c35c:	cmp	w1, w0
  40c360:	b.lt	40c3a4 <manager_connect_console+0x2c0>  // b.tstop
  40c364:	ldr	w0, [sp, #100]
  40c368:	lsl	w1, w0, #10
  40c36c:	ldr	w0, [sp, #92]
  40c370:	orr	w6, w1, w0
  40c374:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c378:	add	x1, x0, #0x273
  40c37c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c380:	add	x5, x0, #0xcf0
  40c384:	adrp	x0, 43d000 <_fini+0xdb0>
  40c388:	add	x4, x0, #0x5e8
  40c38c:	mov	w3, #0x32a                 	// #810
  40c390:	mov	x2, x1
  40c394:	ldr	w1, [sp, #96]
  40c398:	mov	w0, w6
  40c39c:	bl	407d60 <log_internal_realm@plt>
  40c3a0:	b	40c5d8 <manager_connect_console+0x4f4>
  40c3a4:	ldr	w0, [sp, #96]
  40c3a8:	cmp	w0, #0x0
  40c3ac:	cneg	w0, w0, lt  // lt = tstop
  40c3b0:	and	w0, w0, #0xff
  40c3b4:	neg	w0, w0
  40c3b8:	b	40c5d8 <manager_connect_console+0x4f4>
  40c3bc:	bl	4075f0 <__libc_current_sigrtmin@plt>
  40c3c0:	mov	w19, w0
  40c3c4:	bl	407050 <__libc_current_sigrtmax@plt>
  40c3c8:	cmp	w19, w0
  40c3cc:	b.lt	40c470 <manager_connect_console+0x38c>  // b.tstop
  40c3d0:	mov	w0, #0x3                   	// #3
  40c3d4:	str	w0, [sp, #80]
  40c3d8:	mov	w0, #0x16                  	// #22
  40c3dc:	movk	w0, #0x4000, lsl #16
  40c3e0:	str	w0, [sp, #84]
  40c3e4:	str	wzr, [sp, #88]
  40c3e8:	ldr	w0, [sp, #88]
  40c3ec:	bl	4083e0 <log_get_max_level_realm@plt>
  40c3f0:	mov	w1, w0
  40c3f4:	ldr	w0, [sp, #80]
  40c3f8:	and	w0, w0, #0x7
  40c3fc:	cmp	w1, w0
  40c400:	b.lt	40c458 <manager_connect_console+0x374>  // b.tstop
  40c404:	ldr	w0, [sp, #88]
  40c408:	lsl	w1, w0, #10
  40c40c:	ldr	w0, [sp, #80]
  40c410:	orr	w19, w1, w0
  40c414:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c418:	add	x20, x0, #0x273
  40c41c:	bl	4075f0 <__libc_current_sigrtmin@plt>
  40c420:	mov	w21, w0
  40c424:	bl	407050 <__libc_current_sigrtmax@plt>
  40c428:	mov	w7, w0
  40c42c:	mov	w6, w21
  40c430:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c434:	add	x5, x0, #0xd18
  40c438:	adrp	x0, 43d000 <_fini+0xdb0>
  40c43c:	add	x4, x0, #0x5e8
  40c440:	mov	w3, #0x334                 	// #820
  40c444:	mov	x2, x20
  40c448:	ldr	w1, [sp, #84]
  40c44c:	mov	w0, w19
  40c450:	bl	407d60 <log_internal_realm@plt>
  40c454:	b	40c5d8 <manager_connect_console+0x4f4>
  40c458:	ldr	w0, [sp, #84]
  40c45c:	cmp	w0, #0x0
  40c460:	cneg	w0, w0, lt  // lt = tstop
  40c464:	and	w0, w0, #0xff
  40c468:	neg	w0, w0
  40c46c:	b	40c5d8 <manager_connect_console+0x4f4>
  40c470:	bl	4075f0 <__libc_current_sigrtmin@plt>
  40c474:	add	w0, w0, #0x1
  40c478:	mov	w1, #0xffffffff            	// #-1
  40c47c:	bl	4081d0 <ignore_signals@plt>
  40c480:	lsr	w0, w0, #31
  40c484:	and	w0, w0, #0xff
  40c488:	and	x0, x0, #0xff
  40c48c:	cmp	x0, #0x0
  40c490:	b.eq	40c4bc <manager_connect_console+0x3d8>  // b.none
  40c494:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c498:	add	x1, x0, #0x273
  40c49c:	adrp	x0, 43d000 <_fini+0xdb0>
  40c4a0:	add	x4, x0, #0x5d0
  40c4a4:	mov	w3, #0x338                 	// #824
  40c4a8:	mov	x2, x1
  40c4ac:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c4b0:	add	x1, x0, #0xd48
  40c4b4:	mov	w0, #0x0                   	// #0
  40c4b8:	bl	407650 <log_assert_failed_realm@plt>
  40c4bc:	bl	4075f0 <__libc_current_sigrtmin@plt>
  40c4c0:	mov	w3, #0xffffffff            	// #-1
  40c4c4:	mov	w2, w0
  40c4c8:	mov	x1, #0x0                   	// #0
  40c4cc:	mov	w0, #0x0                   	// #0
  40c4d0:	bl	4077b0 <sigprocmask_many@plt>
  40c4d4:	lsr	w0, w0, #31
  40c4d8:	and	w0, w0, #0xff
  40c4dc:	and	x0, x0, #0xff
  40c4e0:	cmp	x0, #0x0
  40c4e4:	b.eq	40c510 <manager_connect_console+0x42c>  // b.none
  40c4e8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c4ec:	add	x1, x0, #0x273
  40c4f0:	adrp	x0, 43d000 <_fini+0xdb0>
  40c4f4:	add	x4, x0, #0x5d0
  40c4f8:	mov	w3, #0x339                 	// #825
  40c4fc:	mov	x2, x1
  40c500:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c504:	add	x1, x0, #0xd70
  40c508:	mov	w0, #0x0                   	// #0
  40c50c:	bl	407650 <log_assert_failed_realm@plt>
  40c510:	ldr	x0, [sp, #56]
  40c514:	ldr	x19, [x0]
  40c518:	bl	4075f0 <__libc_current_sigrtmin@plt>
  40c51c:	mov	w1, w0
  40c520:	ldr	x4, [sp, #56]
  40c524:	adrp	x0, 40b000 <manager_reserve_vt+0xb4>
  40c528:	add	x3, x0, #0xdb8
  40c52c:	mov	w2, w1
  40c530:	mov	x1, #0x0                   	// #0
  40c534:	mov	x0, x19
  40c538:	bl	408290 <sd_event_add_signal@plt>
  40c53c:	str	w0, [sp, #64]
  40c540:	ldr	w0, [sp, #64]
  40c544:	cmp	w0, #0x0
  40c548:	b.ge	40c5d4 <manager_connect_console+0x4f0>  // b.tcont
  40c54c:	mov	w0, #0x3                   	// #3
  40c550:	str	w0, [sp, #68]
  40c554:	ldr	w0, [sp, #64]
  40c558:	str	w0, [sp, #72]
  40c55c:	str	wzr, [sp, #76]
  40c560:	ldr	w0, [sp, #76]
  40c564:	bl	4083e0 <log_get_max_level_realm@plt>
  40c568:	mov	w1, w0
  40c56c:	ldr	w0, [sp, #68]
  40c570:	and	w0, w0, #0x7
  40c574:	cmp	w1, w0
  40c578:	b.lt	40c5bc <manager_connect_console+0x4d8>  // b.tstop
  40c57c:	ldr	w0, [sp, #76]
  40c580:	lsl	w1, w0, #10
  40c584:	ldr	w0, [sp, #68]
  40c588:	orr	w6, w1, w0
  40c58c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c590:	add	x1, x0, #0x273
  40c594:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c598:	add	x5, x0, #0xda8
  40c59c:	adrp	x0, 43d000 <_fini+0xdb0>
  40c5a0:	add	x4, x0, #0x5e8
  40c5a4:	mov	w3, #0x33d                 	// #829
  40c5a8:	mov	x2, x1
  40c5ac:	ldr	w1, [sp, #72]
  40c5b0:	mov	w0, w6
  40c5b4:	bl	407d60 <log_internal_realm@plt>
  40c5b8:	b	40c5d8 <manager_connect_console+0x4f4>
  40c5bc:	ldr	w0, [sp, #72]
  40c5c0:	cmp	w0, #0x0
  40c5c4:	cneg	w0, w0, lt  // lt = tstop
  40c5c8:	and	w0, w0, #0xff
  40c5cc:	neg	w0, w0
  40c5d0:	b	40c5d8 <manager_connect_console+0x4f4>
  40c5d4:	mov	w0, #0x0                   	// #0
  40c5d8:	ldp	x19, x20, [sp, #16]
  40c5dc:	ldr	x21, [sp, #32]
  40c5e0:	ldp	x29, x30, [sp], #128
  40c5e4:	ret

000000000040c5e8 <manager_connect_udev>:
  40c5e8:	stp	x29, x30, [sp, #-48]!
  40c5ec:	mov	x29, sp
  40c5f0:	str	x0, [sp, #24]
  40c5f4:	ldr	x0, [sp, #24]
  40c5f8:	cmp	x0, #0x0
  40c5fc:	cset	w0, eq  // eq = none
  40c600:	and	w0, w0, #0xff
  40c604:	and	x0, x0, #0xff
  40c608:	cmp	x0, #0x0
  40c60c:	b.eq	40c638 <manager_connect_udev+0x50>  // b.none
  40c610:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c614:	add	x1, x0, #0x273
  40c618:	adrp	x0, 43d000 <_fini+0xdb0>
  40c61c:	add	x4, x0, #0x600
  40c620:	mov	w3, #0x345                 	// #837
  40c624:	mov	x2, x1
  40c628:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c62c:	add	x1, x0, #0x2a0
  40c630:	mov	w0, #0x0                   	// #0
  40c634:	bl	407650 <log_assert_failed_realm@plt>
  40c638:	ldr	x0, [sp, #24]
  40c63c:	ldr	x0, [x0, #104]
  40c640:	cmp	x0, #0x0
  40c644:	cset	w0, ne  // ne = any
  40c648:	and	w0, w0, #0xff
  40c64c:	and	x0, x0, #0xff
  40c650:	cmp	x0, #0x0
  40c654:	b.eq	40c680 <manager_connect_udev+0x98>  // b.none
  40c658:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c65c:	add	x1, x0, #0x273
  40c660:	adrp	x0, 43d000 <_fini+0xdb0>
  40c664:	add	x4, x0, #0x600
  40c668:	mov	w3, #0x346                 	// #838
  40c66c:	mov	x2, x1
  40c670:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c674:	add	x1, x0, #0xdd0
  40c678:	mov	w0, #0x0                   	// #0
  40c67c:	bl	407650 <log_assert_failed_realm@plt>
  40c680:	ldr	x0, [sp, #24]
  40c684:	ldr	x0, [x0, #112]
  40c688:	cmp	x0, #0x0
  40c68c:	cset	w0, ne  // ne = any
  40c690:	and	w0, w0, #0xff
  40c694:	and	x0, x0, #0xff
  40c698:	cmp	x0, #0x0
  40c69c:	b.eq	40c6c8 <manager_connect_udev+0xe0>  // b.none
  40c6a0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c6a4:	add	x1, x0, #0x273
  40c6a8:	adrp	x0, 43d000 <_fini+0xdb0>
  40c6ac:	add	x4, x0, #0x600
  40c6b0:	mov	w3, #0x347                 	// #839
  40c6b4:	mov	x2, x1
  40c6b8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c6bc:	add	x1, x0, #0xde8
  40c6c0:	mov	w0, #0x0                   	// #0
  40c6c4:	bl	407650 <log_assert_failed_realm@plt>
  40c6c8:	ldr	x0, [sp, #24]
  40c6cc:	ldr	x0, [x0, #120]
  40c6d0:	cmp	x0, #0x0
  40c6d4:	cset	w0, ne  // ne = any
  40c6d8:	and	w0, w0, #0xff
  40c6dc:	and	x0, x0, #0xff
  40c6e0:	cmp	x0, #0x0
  40c6e4:	b.eq	40c710 <manager_connect_udev+0x128>  // b.none
  40c6e8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c6ec:	add	x1, x0, #0x273
  40c6f0:	adrp	x0, 43d000 <_fini+0xdb0>
  40c6f4:	add	x4, x0, #0x600
  40c6f8:	mov	w3, #0x348                 	// #840
  40c6fc:	mov	x2, x1
  40c700:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c704:	add	x1, x0, #0xe00
  40c708:	mov	w0, #0x0                   	// #0
  40c70c:	bl	407650 <log_assert_failed_realm@plt>
  40c710:	ldr	x0, [sp, #24]
  40c714:	ldr	x0, [x0, #128]
  40c718:	cmp	x0, #0x0
  40c71c:	cset	w0, ne  // ne = any
  40c720:	and	w0, w0, #0xff
  40c724:	and	x0, x0, #0xff
  40c728:	cmp	x0, #0x0
  40c72c:	b.eq	40c758 <manager_connect_udev+0x170>  // b.none
  40c730:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c734:	add	x1, x0, #0x273
  40c738:	adrp	x0, 43d000 <_fini+0xdb0>
  40c73c:	add	x4, x0, #0x600
  40c740:	mov	w3, #0x349                 	// #841
  40c744:	mov	x2, x1
  40c748:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c74c:	add	x1, x0, #0xe18
  40c750:	mov	w0, #0x0                   	// #0
  40c754:	bl	407650 <log_assert_failed_realm@plt>
  40c758:	ldr	x0, [sp, #24]
  40c75c:	add	x0, x0, #0x68
  40c760:	bl	407020 <sd_device_monitor_new@plt>
  40c764:	str	w0, [sp, #44]
  40c768:	ldr	w0, [sp, #44]
  40c76c:	cmp	w0, #0x0
  40c770:	b.ge	40c77c <manager_connect_udev+0x194>  // b.tcont
  40c774:	ldr	w0, [sp, #44]
  40c778:	b	40cbac <manager_connect_udev+0x5c4>
  40c77c:	ldr	x0, [sp, #24]
  40c780:	ldr	x2, [x0, #104]
  40c784:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c788:	add	x1, x0, #0x2a8
  40c78c:	mov	x0, x2
  40c790:	bl	407b80 <sd_device_monitor_filter_add_match_tag@plt>
  40c794:	str	w0, [sp, #44]
  40c798:	ldr	w0, [sp, #44]
  40c79c:	cmp	w0, #0x0
  40c7a0:	b.ge	40c7ac <manager_connect_udev+0x1c4>  // b.tcont
  40c7a4:	ldr	w0, [sp, #44]
  40c7a8:	b	40cbac <manager_connect_udev+0x5c4>
  40c7ac:	ldr	x0, [sp, #24]
  40c7b0:	ldr	x2, [x0, #104]
  40c7b4:	ldr	x0, [sp, #24]
  40c7b8:	ldr	x0, [x0]
  40c7bc:	mov	x1, x0
  40c7c0:	mov	x0, x2
  40c7c4:	bl	407120 <sd_device_monitor_attach_event@plt>
  40c7c8:	str	w0, [sp, #44]
  40c7cc:	ldr	w0, [sp, #44]
  40c7d0:	cmp	w0, #0x0
  40c7d4:	b.ge	40c7e0 <manager_connect_udev+0x1f8>  // b.tcont
  40c7d8:	ldr	w0, [sp, #44]
  40c7dc:	b	40cbac <manager_connect_udev+0x5c4>
  40c7e0:	ldr	x0, [sp, #24]
  40c7e4:	ldr	x3, [x0, #104]
  40c7e8:	ldr	x2, [sp, #24]
  40c7ec:	adrp	x0, 40a000 <deliver_fd+0x268>
  40c7f0:	add	x1, x0, #0xac4
  40c7f4:	mov	x0, x3
  40c7f8:	bl	4071f0 <sd_device_monitor_start@plt>
  40c7fc:	str	w0, [sp, #44]
  40c800:	ldr	w0, [sp, #44]
  40c804:	cmp	w0, #0x0
  40c808:	b.ge	40c814 <manager_connect_udev+0x22c>  // b.tcont
  40c80c:	ldr	w0, [sp, #44]
  40c810:	b	40cbac <manager_connect_udev+0x5c4>
  40c814:	ldr	x0, [sp, #24]
  40c818:	ldr	x0, [x0, #104]
  40c81c:	bl	407750 <sd_device_monitor_get_event_source@plt>
  40c820:	mov	x2, x0
  40c824:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c828:	add	x1, x0, #0xe38
  40c82c:	mov	x0, x2
  40c830:	bl	408380 <sd_event_source_set_description@plt>
  40c834:	ldr	x0, [sp, #24]
  40c838:	add	x0, x0, #0x70
  40c83c:	bl	407020 <sd_device_monitor_new@plt>
  40c840:	str	w0, [sp, #44]
  40c844:	ldr	w0, [sp, #44]
  40c848:	cmp	w0, #0x0
  40c84c:	b.ge	40c858 <manager_connect_udev+0x270>  // b.tcont
  40c850:	ldr	w0, [sp, #44]
  40c854:	b	40cbac <manager_connect_udev+0x5c4>
  40c858:	ldr	x0, [sp, #24]
  40c85c:	ldr	x3, [x0, #112]
  40c860:	mov	x2, #0x0                   	// #0
  40c864:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c868:	add	x1, x0, #0x2b8
  40c86c:	mov	x0, x3
  40c870:	bl	407280 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40c874:	str	w0, [sp, #44]
  40c878:	ldr	w0, [sp, #44]
  40c87c:	cmp	w0, #0x0
  40c880:	b.ge	40c88c <manager_connect_udev+0x2a4>  // b.tcont
  40c884:	ldr	w0, [sp, #44]
  40c888:	b	40cbac <manager_connect_udev+0x5c4>
  40c88c:	ldr	x0, [sp, #24]
  40c890:	ldr	x3, [x0, #112]
  40c894:	mov	x2, #0x0                   	// #0
  40c898:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c89c:	add	x1, x0, #0xe50
  40c8a0:	mov	x0, x3
  40c8a4:	bl	407280 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40c8a8:	str	w0, [sp, #44]
  40c8ac:	ldr	w0, [sp, #44]
  40c8b0:	cmp	w0, #0x0
  40c8b4:	b.ge	40c8c0 <manager_connect_udev+0x2d8>  // b.tcont
  40c8b8:	ldr	w0, [sp, #44]
  40c8bc:	b	40cbac <manager_connect_udev+0x5c4>
  40c8c0:	ldr	x0, [sp, #24]
  40c8c4:	ldr	x3, [x0, #112]
  40c8c8:	mov	x2, #0x0                   	// #0
  40c8cc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c8d0:	add	x1, x0, #0xe60
  40c8d4:	mov	x0, x3
  40c8d8:	bl	407280 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40c8dc:	str	w0, [sp, #44]
  40c8e0:	ldr	w0, [sp, #44]
  40c8e4:	cmp	w0, #0x0
  40c8e8:	b.ge	40c8f4 <manager_connect_udev+0x30c>  // b.tcont
  40c8ec:	ldr	w0, [sp, #44]
  40c8f0:	b	40cbac <manager_connect_udev+0x5c4>
  40c8f4:	ldr	x0, [sp, #24]
  40c8f8:	ldr	x2, [x0, #112]
  40c8fc:	ldr	x0, [sp, #24]
  40c900:	ldr	x0, [x0]
  40c904:	mov	x1, x0
  40c908:	mov	x0, x2
  40c90c:	bl	407120 <sd_device_monitor_attach_event@plt>
  40c910:	str	w0, [sp, #44]
  40c914:	ldr	w0, [sp, #44]
  40c918:	cmp	w0, #0x0
  40c91c:	b.ge	40c928 <manager_connect_udev+0x340>  // b.tcont
  40c920:	ldr	w0, [sp, #44]
  40c924:	b	40cbac <manager_connect_udev+0x5c4>
  40c928:	ldr	x0, [sp, #24]
  40c92c:	ldr	x3, [x0, #112]
  40c930:	ldr	x2, [sp, #24]
  40c934:	adrp	x0, 40a000 <deliver_fd+0x268>
  40c938:	add	x1, x0, #0xb80
  40c93c:	mov	x0, x3
  40c940:	bl	4071f0 <sd_device_monitor_start@plt>
  40c944:	str	w0, [sp, #44]
  40c948:	ldr	w0, [sp, #44]
  40c94c:	cmp	w0, #0x0
  40c950:	b.ge	40c95c <manager_connect_udev+0x374>  // b.tcont
  40c954:	ldr	w0, [sp, #44]
  40c958:	b	40cbac <manager_connect_udev+0x5c4>
  40c95c:	ldr	x0, [sp, #24]
  40c960:	ldr	x0, [x0, #112]
  40c964:	bl	407750 <sd_device_monitor_get_event_source@plt>
  40c968:	mov	x2, x0
  40c96c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c970:	add	x1, x0, #0xe68
  40c974:	mov	x0, x2
  40c978:	bl	408380 <sd_event_source_set_description@plt>
  40c97c:	ldr	x0, [sp, #24]
  40c980:	bl	4132e8 <manager_all_buttons_ignored>
  40c984:	and	w0, w0, #0xff
  40c988:	eor	w0, w0, #0x1
  40c98c:	and	w0, w0, #0xff
  40c990:	cmp	w0, #0x0
  40c994:	b.eq	40caa8 <manager_connect_udev+0x4c0>  // b.none
  40c998:	ldr	x0, [sp, #24]
  40c99c:	add	x0, x0, #0x80
  40c9a0:	bl	407020 <sd_device_monitor_new@plt>
  40c9a4:	str	w0, [sp, #44]
  40c9a8:	ldr	w0, [sp, #44]
  40c9ac:	cmp	w0, #0x0
  40c9b0:	b.ge	40c9bc <manager_connect_udev+0x3d4>  // b.tcont
  40c9b4:	ldr	w0, [sp, #44]
  40c9b8:	b	40cbac <manager_connect_udev+0x5c4>
  40c9bc:	ldr	x0, [sp, #24]
  40c9c0:	ldr	x2, [x0, #128]
  40c9c4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c9c8:	add	x1, x0, #0x2c0
  40c9cc:	mov	x0, x2
  40c9d0:	bl	407b80 <sd_device_monitor_filter_add_match_tag@plt>
  40c9d4:	str	w0, [sp, #44]
  40c9d8:	ldr	w0, [sp, #44]
  40c9dc:	cmp	w0, #0x0
  40c9e0:	b.ge	40c9ec <manager_connect_udev+0x404>  // b.tcont
  40c9e4:	ldr	w0, [sp, #44]
  40c9e8:	b	40cbac <manager_connect_udev+0x5c4>
  40c9ec:	ldr	x0, [sp, #24]
  40c9f0:	ldr	x3, [x0, #128]
  40c9f4:	mov	x2, #0x0                   	// #0
  40c9f8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40c9fc:	add	x1, x0, #0x2b8
  40ca00:	mov	x0, x3
  40ca04:	bl	407280 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40ca08:	str	w0, [sp, #44]
  40ca0c:	ldr	w0, [sp, #44]
  40ca10:	cmp	w0, #0x0
  40ca14:	b.ge	40ca20 <manager_connect_udev+0x438>  // b.tcont
  40ca18:	ldr	w0, [sp, #44]
  40ca1c:	b	40cbac <manager_connect_udev+0x5c4>
  40ca20:	ldr	x0, [sp, #24]
  40ca24:	ldr	x2, [x0, #128]
  40ca28:	ldr	x0, [sp, #24]
  40ca2c:	ldr	x0, [x0]
  40ca30:	mov	x1, x0
  40ca34:	mov	x0, x2
  40ca38:	bl	407120 <sd_device_monitor_attach_event@plt>
  40ca3c:	str	w0, [sp, #44]
  40ca40:	ldr	w0, [sp, #44]
  40ca44:	cmp	w0, #0x0
  40ca48:	b.ge	40ca54 <manager_connect_udev+0x46c>  // b.tcont
  40ca4c:	ldr	w0, [sp, #44]
  40ca50:	b	40cbac <manager_connect_udev+0x5c4>
  40ca54:	ldr	x0, [sp, #24]
  40ca58:	ldr	x3, [x0, #128]
  40ca5c:	ldr	x2, [sp, #24]
  40ca60:	adrp	x0, 40a000 <deliver_fd+0x268>
  40ca64:	add	x1, x0, #0xd80
  40ca68:	mov	x0, x3
  40ca6c:	bl	4071f0 <sd_device_monitor_start@plt>
  40ca70:	str	w0, [sp, #44]
  40ca74:	ldr	w0, [sp, #44]
  40ca78:	cmp	w0, #0x0
  40ca7c:	b.ge	40ca88 <manager_connect_udev+0x4a0>  // b.tcont
  40ca80:	ldr	w0, [sp, #44]
  40ca84:	b	40cbac <manager_connect_udev+0x5c4>
  40ca88:	ldr	x0, [sp, #24]
  40ca8c:	ldr	x0, [x0, #128]
  40ca90:	bl	407750 <sd_device_monitor_get_event_source@plt>
  40ca94:	mov	x2, x0
  40ca98:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ca9c:	add	x1, x0, #0xe80
  40caa0:	mov	x0, x2
  40caa4:	bl	408380 <sd_event_source_set_description@plt>
  40caa8:	ldr	x0, [sp, #24]
  40caac:	ldr	w0, [x0, #156]
  40cab0:	cmp	w0, #0x0
  40cab4:	b.eq	40cba8 <manager_connect_udev+0x5c0>  // b.none
  40cab8:	ldr	x0, [sp, #24]
  40cabc:	ldr	w0, [x0, #152]
  40cac0:	cmp	w0, #0x0
  40cac4:	b.lt	40cba8 <manager_connect_udev+0x5c0>  // b.tstop
  40cac8:	ldr	x0, [sp, #24]
  40cacc:	add	x0, x0, #0x78
  40cad0:	bl	407020 <sd_device_monitor_new@plt>
  40cad4:	str	w0, [sp, #44]
  40cad8:	ldr	w0, [sp, #44]
  40cadc:	cmp	w0, #0x0
  40cae0:	b.ge	40caec <manager_connect_udev+0x504>  // b.tcont
  40cae4:	ldr	w0, [sp, #44]
  40cae8:	b	40cbac <manager_connect_udev+0x5c4>
  40caec:	ldr	x0, [sp, #24]
  40caf0:	ldr	x3, [x0, #120]
  40caf4:	mov	x2, #0x0                   	// #0
  40caf8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cafc:	add	x1, x0, #0xe98
  40cb00:	mov	x0, x3
  40cb04:	bl	407280 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40cb08:	str	w0, [sp, #44]
  40cb0c:	ldr	w0, [sp, #44]
  40cb10:	cmp	w0, #0x0
  40cb14:	b.ge	40cb20 <manager_connect_udev+0x538>  // b.tcont
  40cb18:	ldr	w0, [sp, #44]
  40cb1c:	b	40cbac <manager_connect_udev+0x5c4>
  40cb20:	ldr	x0, [sp, #24]
  40cb24:	ldr	x2, [x0, #120]
  40cb28:	ldr	x0, [sp, #24]
  40cb2c:	ldr	x0, [x0]
  40cb30:	mov	x1, x0
  40cb34:	mov	x0, x2
  40cb38:	bl	407120 <sd_device_monitor_attach_event@plt>
  40cb3c:	str	w0, [sp, #44]
  40cb40:	ldr	w0, [sp, #44]
  40cb44:	cmp	w0, #0x0
  40cb48:	b.ge	40cb54 <manager_connect_udev+0x56c>  // b.tcont
  40cb4c:	ldr	w0, [sp, #44]
  40cb50:	b	40cbac <manager_connect_udev+0x5c4>
  40cb54:	ldr	x0, [sp, #24]
  40cb58:	ldr	x3, [x0, #120]
  40cb5c:	ldr	x2, [sp, #24]
  40cb60:	adrp	x0, 40a000 <deliver_fd+0x268>
  40cb64:	add	x1, x0, #0xc3c
  40cb68:	mov	x0, x3
  40cb6c:	bl	4071f0 <sd_device_monitor_start@plt>
  40cb70:	str	w0, [sp, #44]
  40cb74:	ldr	w0, [sp, #44]
  40cb78:	cmp	w0, #0x0
  40cb7c:	b.ge	40cb88 <manager_connect_udev+0x5a0>  // b.tcont
  40cb80:	ldr	w0, [sp, #44]
  40cb84:	b	40cbac <manager_connect_udev+0x5c4>
  40cb88:	ldr	x0, [sp, #24]
  40cb8c:	ldr	x0, [x0, #120]
  40cb90:	bl	407750 <sd_device_monitor_get_event_source@plt>
  40cb94:	mov	x2, x0
  40cb98:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cb9c:	add	x1, x0, #0xea0
  40cba0:	mov	x0, x2
  40cba4:	bl	408380 <sd_event_source_set_description@plt>
  40cba8:	mov	w0, #0x0                   	// #0
  40cbac:	ldp	x29, x30, [sp], #48
  40cbb0:	ret

000000000040cbb4 <manager_gc>:
  40cbb4:	stp	x29, x30, [sp, #-112]!
  40cbb8:	mov	x29, sp
  40cbbc:	str	x0, [sp, #24]
  40cbc0:	strb	w1, [sp, #23]
  40cbc4:	ldr	x0, [sp, #24]
  40cbc8:	cmp	x0, #0x0
  40cbcc:	cset	w0, eq  // eq = none
  40cbd0:	and	w0, w0, #0xff
  40cbd4:	and	x0, x0, #0xff
  40cbd8:	cmp	x0, #0x0
  40cbdc:	b.eq	40cd5c <manager_gc+0x1a8>  // b.none
  40cbe0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cbe4:	add	x1, x0, #0x273
  40cbe8:	adrp	x0, 43d000 <_fini+0xdb0>
  40cbec:	add	x4, x0, #0x618
  40cbf0:	mov	w3, #0x3ae                 	// #942
  40cbf4:	mov	x2, x1
  40cbf8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cbfc:	add	x1, x0, #0x2a0
  40cc00:	mov	w0, #0x0                   	// #0
  40cc04:	bl	407650 <log_assert_failed_realm@plt>
  40cc08:	ldr	x0, [sp, #24]
  40cc0c:	add	x0, x0, #0x50
  40cc10:	str	x0, [sp, #96]
  40cc14:	ldr	x0, [sp, #40]
  40cc18:	str	x0, [sp, #104]
  40cc1c:	ldr	x0, [sp, #104]
  40cc20:	cmp	x0, #0x0
  40cc24:	cset	w0, eq  // eq = none
  40cc28:	and	w0, w0, #0xff
  40cc2c:	and	x0, x0, #0xff
  40cc30:	cmp	x0, #0x0
  40cc34:	b.eq	40cc60 <manager_gc+0xac>  // b.none
  40cc38:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cc3c:	add	x1, x0, #0x273
  40cc40:	adrp	x0, 43d000 <_fini+0xdb0>
  40cc44:	add	x4, x0, #0x618
  40cc48:	mov	w3, #0x3b1                 	// #945
  40cc4c:	mov	x2, x1
  40cc50:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cc54:	add	x1, x0, #0xeb8
  40cc58:	mov	w0, #0x0                   	// #0
  40cc5c:	bl	407650 <log_assert_failed_realm@plt>
  40cc60:	ldr	x0, [sp, #104]
  40cc64:	ldr	x0, [x0, #80]
  40cc68:	cmp	x0, #0x0
  40cc6c:	b.eq	40cc84 <manager_gc+0xd0>  // b.none
  40cc70:	ldr	x0, [sp, #104]
  40cc74:	ldr	x0, [x0, #80]
  40cc78:	ldr	x1, [sp, #104]
  40cc7c:	ldr	x1, [x1, #88]
  40cc80:	str	x1, [x0, #88]
  40cc84:	ldr	x0, [sp, #104]
  40cc88:	ldr	x0, [x0, #88]
  40cc8c:	cmp	x0, #0x0
  40cc90:	b.eq	40ccac <manager_gc+0xf8>  // b.none
  40cc94:	ldr	x0, [sp, #104]
  40cc98:	ldr	x0, [x0, #88]
  40cc9c:	ldr	x1, [sp, #104]
  40cca0:	ldr	x1, [x1, #80]
  40cca4:	str	x1, [x0, #80]
  40cca8:	b	40cd08 <manager_gc+0x154>
  40ccac:	ldr	x0, [sp, #96]
  40ccb0:	ldr	x0, [x0]
  40ccb4:	ldr	x1, [sp, #104]
  40ccb8:	cmp	x1, x0
  40ccbc:	cset	w0, ne  // ne = any
  40ccc0:	and	w0, w0, #0xff
  40ccc4:	and	x0, x0, #0xff
  40ccc8:	cmp	x0, #0x0
  40cccc:	b.eq	40ccf8 <manager_gc+0x144>  // b.none
  40ccd0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ccd4:	add	x1, x0, #0x273
  40ccd8:	adrp	x0, 43d000 <_fini+0xdb0>
  40ccdc:	add	x4, x0, #0x618
  40cce0:	mov	w3, #0x3b1                 	// #945
  40cce4:	mov	x2, x1
  40cce8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ccec:	add	x1, x0, #0xec0
  40ccf0:	mov	w0, #0x0                   	// #0
  40ccf4:	bl	407650 <log_assert_failed_realm@plt>
  40ccf8:	ldr	x0, [sp, #104]
  40ccfc:	ldr	x1, [x0, #80]
  40cd00:	ldr	x0, [sp, #96]
  40cd04:	str	x1, [x0]
  40cd08:	ldr	x0, [sp, #104]
  40cd0c:	str	xzr, [x0, #88]
  40cd10:	ldr	x0, [sp, #104]
  40cd14:	ldr	x1, [x0, #88]
  40cd18:	ldr	x0, [sp, #104]
  40cd1c:	str	x1, [x0, #80]
  40cd20:	ldr	x0, [sp, #40]
  40cd24:	ldrb	w1, [x0, #72]
  40cd28:	and	w1, w1, #0xfffffffe
  40cd2c:	strb	w1, [x0, #72]
  40cd30:	ldrb	w1, [sp, #23]
  40cd34:	ldr	x0, [sp, #40]
  40cd38:	bl	4293f4 <seat_may_gc>
  40cd3c:	and	w0, w0, #0xff
  40cd40:	cmp	w0, #0x0
  40cd44:	b.eq	40cd5c <manager_gc+0x1a8>  // b.none
  40cd48:	mov	w1, #0x0                   	// #0
  40cd4c:	ldr	x0, [sp, #40]
  40cd50:	bl	4288e8 <seat_stop>
  40cd54:	ldr	x0, [sp, #40]
  40cd58:	bl	427180 <seat_free>
  40cd5c:	ldr	x0, [sp, #24]
  40cd60:	ldr	x0, [x0, #80]
  40cd64:	str	x0, [sp, #40]
  40cd68:	ldr	x0, [sp, #40]
  40cd6c:	cmp	x0, #0x0
  40cd70:	b.ne	40cc08 <manager_gc+0x54>  // b.any
  40cd74:	b	40cefc <manager_gc+0x348>
  40cd78:	ldr	x0, [sp, #24]
  40cd7c:	add	x0, x0, #0x58
  40cd80:	str	x0, [sp, #80]
  40cd84:	ldr	x0, [sp, #48]
  40cd88:	str	x0, [sp, #88]
  40cd8c:	ldr	x0, [sp, #88]
  40cd90:	cmp	x0, #0x0
  40cd94:	cset	w0, eq  // eq = none
  40cd98:	and	w0, w0, #0xff
  40cd9c:	and	x0, x0, #0xff
  40cda0:	cmp	x0, #0x0
  40cda4:	b.eq	40cdd0 <manager_gc+0x21c>  // b.none
  40cda8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cdac:	add	x1, x0, #0x273
  40cdb0:	adrp	x0, 43d000 <_fini+0xdb0>
  40cdb4:	add	x4, x0, #0x618
  40cdb8:	mov	w3, #0x3bb                 	// #955
  40cdbc:	mov	x2, x1
  40cdc0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cdc4:	add	x1, x0, #0xeb8
  40cdc8:	mov	w0, #0x0                   	// #0
  40cdcc:	bl	407650 <log_assert_failed_realm@plt>
  40cdd0:	ldr	x0, [sp, #88]
  40cdd4:	ldr	x0, [x0, #288]
  40cdd8:	cmp	x0, #0x0
  40cddc:	b.eq	40cdf4 <manager_gc+0x240>  // b.none
  40cde0:	ldr	x0, [sp, #88]
  40cde4:	ldr	x0, [x0, #288]
  40cde8:	ldr	x1, [sp, #88]
  40cdec:	ldr	x1, [x1, #296]
  40cdf0:	str	x1, [x0, #296]
  40cdf4:	ldr	x0, [sp, #88]
  40cdf8:	ldr	x0, [x0, #296]
  40cdfc:	cmp	x0, #0x0
  40ce00:	b.eq	40ce1c <manager_gc+0x268>  // b.none
  40ce04:	ldr	x0, [sp, #88]
  40ce08:	ldr	x0, [x0, #296]
  40ce0c:	ldr	x1, [sp, #88]
  40ce10:	ldr	x1, [x1, #288]
  40ce14:	str	x1, [x0, #288]
  40ce18:	b	40ce78 <manager_gc+0x2c4>
  40ce1c:	ldr	x0, [sp, #80]
  40ce20:	ldr	x0, [x0]
  40ce24:	ldr	x1, [sp, #88]
  40ce28:	cmp	x1, x0
  40ce2c:	cset	w0, ne  // ne = any
  40ce30:	and	w0, w0, #0xff
  40ce34:	and	x0, x0, #0xff
  40ce38:	cmp	x0, #0x0
  40ce3c:	b.eq	40ce68 <manager_gc+0x2b4>  // b.none
  40ce40:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ce44:	add	x1, x0, #0x273
  40ce48:	adrp	x0, 43d000 <_fini+0xdb0>
  40ce4c:	add	x4, x0, #0x618
  40ce50:	mov	w3, #0x3bb                 	// #955
  40ce54:	mov	x2, x1
  40ce58:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40ce5c:	add	x1, x0, #0xec0
  40ce60:	mov	w0, #0x0                   	// #0
  40ce64:	bl	407650 <log_assert_failed_realm@plt>
  40ce68:	ldr	x0, [sp, #88]
  40ce6c:	ldr	x1, [x0, #288]
  40ce70:	ldr	x0, [sp, #80]
  40ce74:	str	x1, [x0]
  40ce78:	ldr	x0, [sp, #88]
  40ce7c:	str	xzr, [x0, #296]
  40ce80:	ldr	x0, [sp, #88]
  40ce84:	ldr	x1, [x0, #296]
  40ce88:	ldr	x0, [sp, #88]
  40ce8c:	str	x1, [x0, #288]
  40ce90:	ldr	x0, [sp, #48]
  40ce94:	ldrb	w1, [x0, #209]
  40ce98:	and	w1, w1, #0xfffffffe
  40ce9c:	strb	w1, [x0, #209]
  40cea0:	ldrb	w1, [sp, #23]
  40cea4:	ldr	x0, [sp, #48]
  40cea8:	bl	43325c <session_may_gc>
  40ceac:	and	w0, w0, #0xff
  40ceb0:	cmp	w0, #0x0
  40ceb4:	b.eq	40ced4 <manager_gc+0x320>  // b.none
  40ceb8:	ldr	x0, [sp, #48]
  40cebc:	bl	4336cc <session_get_state>
  40cec0:	cmp	w0, #0x3
  40cec4:	b.eq	40ced4 <manager_gc+0x320>  // b.none
  40cec8:	mov	w1, #0x0                   	// #0
  40cecc:	ldr	x0, [sp, #48]
  40ced0:	bl	432194 <session_stop>
  40ced4:	ldrb	w1, [sp, #23]
  40ced8:	ldr	x0, [sp, #48]
  40cedc:	bl	43325c <session_may_gc>
  40cee0:	and	w0, w0, #0xff
  40cee4:	cmp	w0, #0x0
  40cee8:	b.eq	40cefc <manager_gc+0x348>  // b.none
  40ceec:	ldr	x0, [sp, #48]
  40cef0:	bl	4322d4 <session_finalize>
  40cef4:	ldr	x0, [sp, #48]
  40cef8:	bl	42f474 <session_free>
  40cefc:	ldr	x0, [sp, #24]
  40cf00:	ldr	x0, [x0, #88]
  40cf04:	str	x0, [sp, #48]
  40cf08:	ldr	x0, [sp, #48]
  40cf0c:	cmp	x0, #0x0
  40cf10:	b.ne	40cd78 <manager_gc+0x1c4>  // b.any
  40cf14:	b	40d08c <manager_gc+0x4d8>
  40cf18:	ldr	x0, [sp, #24]
  40cf1c:	add	x0, x0, #0x60
  40cf20:	str	x0, [sp, #64]
  40cf24:	ldr	x0, [sp, #56]
  40cf28:	str	x0, [sp, #72]
  40cf2c:	ldr	x0, [sp, #72]
  40cf30:	cmp	x0, #0x0
  40cf34:	cset	w0, eq  // eq = none
  40cf38:	and	w0, w0, #0xff
  40cf3c:	and	x0, x0, #0xff
  40cf40:	cmp	x0, #0x0
  40cf44:	b.eq	40cf70 <manager_gc+0x3bc>  // b.none
  40cf48:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cf4c:	add	x1, x0, #0x273
  40cf50:	adrp	x0, 43d000 <_fini+0xdb0>
  40cf54:	add	x4, x0, #0x618
  40cf58:	mov	w3, #0x3cd                 	// #973
  40cf5c:	mov	x2, x1
  40cf60:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cf64:	add	x1, x0, #0xeb8
  40cf68:	mov	w0, #0x0                   	// #0
  40cf6c:	bl	407650 <log_assert_failed_realm@plt>
  40cf70:	ldr	x0, [sp, #72]
  40cf74:	ldr	x0, [x0, #136]
  40cf78:	cmp	x0, #0x0
  40cf7c:	b.eq	40cf94 <manager_gc+0x3e0>  // b.none
  40cf80:	ldr	x0, [sp, #72]
  40cf84:	ldr	x0, [x0, #136]
  40cf88:	ldr	x1, [sp, #72]
  40cf8c:	ldr	x1, [x1, #144]
  40cf90:	str	x1, [x0, #144]
  40cf94:	ldr	x0, [sp, #72]
  40cf98:	ldr	x0, [x0, #144]
  40cf9c:	cmp	x0, #0x0
  40cfa0:	b.eq	40cfbc <manager_gc+0x408>  // b.none
  40cfa4:	ldr	x0, [sp, #72]
  40cfa8:	ldr	x0, [x0, #144]
  40cfac:	ldr	x1, [sp, #72]
  40cfb0:	ldr	x1, [x1, #136]
  40cfb4:	str	x1, [x0, #136]
  40cfb8:	b	40d018 <manager_gc+0x464>
  40cfbc:	ldr	x0, [sp, #64]
  40cfc0:	ldr	x0, [x0]
  40cfc4:	ldr	x1, [sp, #72]
  40cfc8:	cmp	x1, x0
  40cfcc:	cset	w0, ne  // ne = any
  40cfd0:	and	w0, w0, #0xff
  40cfd4:	and	x0, x0, #0xff
  40cfd8:	cmp	x0, #0x0
  40cfdc:	b.eq	40d008 <manager_gc+0x454>  // b.none
  40cfe0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cfe4:	add	x1, x0, #0x273
  40cfe8:	adrp	x0, 43d000 <_fini+0xdb0>
  40cfec:	add	x4, x0, #0x618
  40cff0:	mov	w3, #0x3cd                 	// #973
  40cff4:	mov	x2, x1
  40cff8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40cffc:	add	x1, x0, #0xec0
  40d000:	mov	w0, #0x0                   	// #0
  40d004:	bl	407650 <log_assert_failed_realm@plt>
  40d008:	ldr	x0, [sp, #72]
  40d00c:	ldr	x1, [x0, #136]
  40d010:	ldr	x0, [sp, #64]
  40d014:	str	x1, [x0]
  40d018:	ldr	x0, [sp, #72]
  40d01c:	str	xzr, [x0, #144]
  40d020:	ldr	x0, [sp, #72]
  40d024:	ldr	x1, [x0, #144]
  40d028:	ldr	x0, [sp, #72]
  40d02c:	str	x1, [x0, #136]
  40d030:	ldr	x0, [sp, #56]
  40d034:	ldrb	w1, [x0, #120]
  40d038:	and	w1, w1, #0xfffffffe
  40d03c:	strb	w1, [x0, #120]
  40d040:	ldrb	w1, [sp, #23]
  40d044:	ldr	x0, [sp, #56]
  40d048:	bl	4384c4 <user_may_gc>
  40d04c:	and	w0, w0, #0xff
  40d050:	cmp	w0, #0x0
  40d054:	b.eq	40d064 <manager_gc+0x4b0>  // b.none
  40d058:	mov	w1, #0x0                   	// #0
  40d05c:	ldr	x0, [sp, #56]
  40d060:	bl	437b40 <user_stop>
  40d064:	ldrb	w1, [sp, #23]
  40d068:	ldr	x0, [sp, #56]
  40d06c:	bl	4384c4 <user_may_gc>
  40d070:	and	w0, w0, #0xff
  40d074:	cmp	w0, #0x0
  40d078:	b.eq	40d08c <manager_gc+0x4d8>  // b.none
  40d07c:	ldr	x0, [sp, #56]
  40d080:	bl	437c60 <user_finalize>
  40d084:	ldr	x0, [sp, #56]
  40d088:	bl	436744 <user_free>
  40d08c:	ldr	x0, [sp, #24]
  40d090:	ldr	x0, [x0, #96]
  40d094:	str	x0, [sp, #56]
  40d098:	ldr	x0, [sp, #56]
  40d09c:	cmp	x0, #0x0
  40d0a0:	b.ne	40cf18 <manager_gc+0x364>  // b.any
  40d0a4:	nop
  40d0a8:	nop
  40d0ac:	ldp	x29, x30, [sp], #112
  40d0b0:	ret

000000000040d0b4 <manager_dispatch_idle_action>:
  40d0b4:	stp	x29, x30, [sp, #-192]!
  40d0b8:	mov	x29, sp
  40d0bc:	stp	x19, x20, [sp, #16]
  40d0c0:	str	x0, [sp, #56]
  40d0c4:	str	x1, [sp, #48]
  40d0c8:	str	x2, [sp, #40]
  40d0cc:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40d0d0:	add	x0, x0, #0x508
  40d0d4:	ldr	x1, [x0]
  40d0d8:	str	x1, [sp, #184]
  40d0dc:	mov	x1, #0x0                   	// #0
  40d0e0:	ldr	x0, [sp, #40]
  40d0e4:	str	x0, [sp, #136]
  40d0e8:	ldr	x0, [sp, #136]
  40d0ec:	cmp	x0, #0x0
  40d0f0:	cset	w0, eq  // eq = none
  40d0f4:	and	w0, w0, #0xff
  40d0f8:	and	x0, x0, #0xff
  40d0fc:	cmp	x0, #0x0
  40d100:	b.eq	40d12c <manager_dispatch_idle_action+0x78>  // b.none
  40d104:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d108:	add	x1, x0, #0x273
  40d10c:	adrp	x0, 43d000 <_fini+0xdb0>
  40d110:	add	x4, x0, #0x628
  40d114:	mov	w3, #0x3e2                 	// #994
  40d118:	mov	x2, x1
  40d11c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d120:	add	x1, x0, #0x2a0
  40d124:	mov	w0, #0x0                   	// #0
  40d128:	bl	407650 <log_assert_failed_realm@plt>
  40d12c:	ldr	x0, [sp, #136]
  40d130:	ldr	w0, [x0, #392]
  40d134:	cmp	w0, #0x0
  40d138:	b.eq	40d14c <manager_dispatch_idle_action+0x98>  // b.none
  40d13c:	ldr	x0, [sp, #136]
  40d140:	ldr	x0, [x0, #376]
  40d144:	cmp	x0, #0x0
  40d148:	b.ne	40d154 <manager_dispatch_idle_action+0xa0>  // b.any
  40d14c:	mov	w0, #0x0                   	// #0
  40d150:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d154:	mov	w0, #0x1                   	// #1
  40d158:	bl	407e80 <now@plt>
  40d15c:	str	x0, [sp, #144]
  40d160:	add	x0, sp, #0xa8
  40d164:	mov	x1, x0
  40d168:	ldr	x0, [sp, #136]
  40d16c:	bl	41223c <manager_get_idle_hint>
  40d170:	str	w0, [sp, #64]
  40d174:	ldr	w0, [sp, #64]
  40d178:	cmp	w0, #0x0
  40d17c:	b.gt	40d198 <manager_dispatch_idle_action+0xe4>
  40d180:	ldr	x0, [sp, #136]
  40d184:	ldr	x0, [x0, #376]
  40d188:	ldr	x1, [sp, #144]
  40d18c:	add	x0, x1, x0
  40d190:	str	x0, [sp, #128]
  40d194:	b	40d2cc <manager_dispatch_idle_action+0x218>
  40d198:	ldr	x1, [sp, #176]
  40d19c:	ldr	x0, [sp, #136]
  40d1a0:	ldr	x0, [x0, #376]
  40d1a4:	add	x0, x1, x0
  40d1a8:	ldr	x1, [sp, #144]
  40d1ac:	cmp	x1, x0
  40d1b0:	b.cc	40d294 <manager_dispatch_idle_action+0x1e0>  // b.lo, b.ul, b.last
  40d1b4:	ldr	x0, [sp, #136]
  40d1b8:	ldr	x0, [x0, #384]
  40d1bc:	cmp	x0, #0x0
  40d1c0:	b.eq	40d1e4 <manager_dispatch_idle_action+0x130>  // b.none
  40d1c4:	ldr	x0, [sp, #136]
  40d1c8:	ldr	x1, [x0, #384]
  40d1cc:	ldr	x0, [sp, #136]
  40d1d0:	ldr	x0, [x0, #376]
  40d1d4:	add	x0, x1, x0
  40d1d8:	ldr	x1, [sp, #144]
  40d1dc:	cmp	x1, x0
  40d1e0:	b.cc	40d294 <manager_dispatch_idle_action+0x1e0>  // b.lo, b.ul, b.last
  40d1e4:	mov	w0, #0x6                   	// #6
  40d1e8:	str	w0, [sp, #68]
  40d1ec:	str	wzr, [sp, #72]
  40d1f0:	str	wzr, [sp, #76]
  40d1f4:	ldr	w0, [sp, #76]
  40d1f8:	bl	4083e0 <log_get_max_level_realm@plt>
  40d1fc:	mov	w1, w0
  40d200:	ldr	w0, [sp, #68]
  40d204:	and	w0, w0, #0x7
  40d208:	cmp	w1, w0
  40d20c:	b.lt	40d260 <manager_dispatch_idle_action+0x1ac>  // b.tstop
  40d210:	ldr	w0, [sp, #76]
  40d214:	lsl	w1, w0, #10
  40d218:	ldr	w0, [sp, #68]
  40d21c:	orr	w19, w1, w0
  40d220:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d224:	add	x20, x0, #0x273
  40d228:	ldr	x0, [sp, #136]
  40d22c:	ldr	w0, [x0, #392]
  40d230:	bl	40f04c <handle_action_to_string>
  40d234:	mov	x6, x0
  40d238:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d23c:	add	x5, x0, #0xed0
  40d240:	adrp	x0, 43d000 <_fini+0xdb0>
  40d244:	add	x4, x0, #0x648
  40d248:	mov	w3, #0x3f4                 	// #1012
  40d24c:	mov	x2, x20
  40d250:	ldr	w1, [sp, #72]
  40d254:	mov	w0, w19
  40d258:	bl	407d60 <log_internal_realm@plt>
  40d25c:	b	40d268 <manager_dispatch_idle_action+0x1b4>
  40d260:	ldr	w0, [sp, #72]
  40d264:	cmp	w0, #0x0
  40d268:	ldr	x0, [sp, #136]
  40d26c:	ldr	w0, [x0, #392]
  40d270:	mov	w4, #0x0                   	// #0
  40d274:	mov	w3, #0x0                   	// #0
  40d278:	mov	w2, w0
  40d27c:	mov	w1, #0x0                   	// #0
  40d280:	ldr	x0, [sp, #136]
  40d284:	bl	40e634 <manager_handle_action>
  40d288:	ldr	x0, [sp, #136]
  40d28c:	ldr	x1, [sp, #144]
  40d290:	str	x1, [x0, #384]
  40d294:	ldr	x0, [sp, #176]
  40d298:	str	x0, [sp, #152]
  40d29c:	ldr	x0, [sp, #136]
  40d2a0:	ldr	x0, [x0, #384]
  40d2a4:	str	x0, [sp, #160]
  40d2a8:	ldr	x0, [sp, #152]
  40d2ac:	ldr	x2, [sp, #160]
  40d2b0:	ldr	x1, [sp, #160]
  40d2b4:	cmp	x2, x0
  40d2b8:	csel	x1, x1, x0, cs  // cs = hs, nlast
  40d2bc:	ldr	x0, [sp, #136]
  40d2c0:	ldr	x0, [x0, #376]
  40d2c4:	add	x0, x1, x0
  40d2c8:	str	x0, [sp, #128]
  40d2cc:	ldr	x0, [sp, #136]
  40d2d0:	ldr	x0, [x0, #368]
  40d2d4:	cmp	x0, #0x0
  40d2d8:	b.ne	40d450 <manager_dispatch_idle_action+0x39c>  // b.any
  40d2dc:	ldr	x0, [sp, #136]
  40d2e0:	ldr	x7, [x0]
  40d2e4:	ldr	x0, [sp, #136]
  40d2e8:	add	x1, x0, #0x170
  40d2ec:	ldr	x6, [sp, #136]
  40d2f0:	adrp	x0, 40d000 <manager_gc+0x44c>
  40d2f4:	add	x5, x0, #0xb4
  40d2f8:	mov	x4, #0xc380                	// #50048
  40d2fc:	movk	x4, #0x1c9, lsl #16
  40d300:	ldr	x3, [sp, #128]
  40d304:	mov	w2, #0x1                   	// #1
  40d308:	mov	x0, x7
  40d30c:	bl	4074d0 <sd_event_add_time@plt>
  40d310:	str	w0, [sp, #64]
  40d314:	ldr	w0, [sp, #64]
  40d318:	cmp	w0, #0x0
  40d31c:	b.ge	40d3a8 <manager_dispatch_idle_action+0x2f4>  // b.tcont
  40d320:	mov	w0, #0x3                   	// #3
  40d324:	str	w0, [sp, #116]
  40d328:	ldr	w0, [sp, #64]
  40d32c:	str	w0, [sp, #120]
  40d330:	str	wzr, [sp, #124]
  40d334:	ldr	w0, [sp, #124]
  40d338:	bl	4083e0 <log_get_max_level_realm@plt>
  40d33c:	mov	w1, w0
  40d340:	ldr	w0, [sp, #116]
  40d344:	and	w0, w0, #0x7
  40d348:	cmp	w1, w0
  40d34c:	b.lt	40d390 <manager_dispatch_idle_action+0x2dc>  // b.tstop
  40d350:	ldr	w0, [sp, #124]
  40d354:	lsl	w1, w0, #10
  40d358:	ldr	w0, [sp, #116]
  40d35c:	orr	w6, w1, w0
  40d360:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d364:	add	x1, x0, #0x273
  40d368:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d36c:	add	x5, x0, #0xef8
  40d370:	adrp	x0, 43d000 <_fini+0xdb0>
  40d374:	add	x4, x0, #0x648
  40d378:	mov	w3, #0x406                 	// #1030
  40d37c:	mov	x2, x1
  40d380:	ldr	w1, [sp, #120]
  40d384:	mov	w0, w6
  40d388:	bl	407d60 <log_internal_realm@plt>
  40d38c:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d390:	ldr	w0, [sp, #120]
  40d394:	cmp	w0, #0x0
  40d398:	cneg	w0, w0, lt  // lt = tstop
  40d39c:	and	w0, w0, #0xff
  40d3a0:	neg	w0, w0
  40d3a4:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d3a8:	ldr	x0, [sp, #136]
  40d3ac:	ldr	x0, [x0, #368]
  40d3b0:	mov	x1, #0x6e                  	// #110
  40d3b4:	bl	407a30 <sd_event_source_set_priority@plt>
  40d3b8:	str	w0, [sp, #64]
  40d3bc:	ldr	w0, [sp, #64]
  40d3c0:	cmp	w0, #0x0
  40d3c4:	b.ge	40d5a0 <manager_dispatch_idle_action+0x4ec>  // b.tcont
  40d3c8:	mov	w0, #0x3                   	// #3
  40d3cc:	str	w0, [sp, #104]
  40d3d0:	ldr	w0, [sp, #64]
  40d3d4:	str	w0, [sp, #108]
  40d3d8:	str	wzr, [sp, #112]
  40d3dc:	ldr	w0, [sp, #112]
  40d3e0:	bl	4083e0 <log_get_max_level_realm@plt>
  40d3e4:	mov	w1, w0
  40d3e8:	ldr	w0, [sp, #104]
  40d3ec:	and	w0, w0, #0x7
  40d3f0:	cmp	w1, w0
  40d3f4:	b.lt	40d438 <manager_dispatch_idle_action+0x384>  // b.tstop
  40d3f8:	ldr	w0, [sp, #112]
  40d3fc:	lsl	w1, w0, #10
  40d400:	ldr	w0, [sp, #104]
  40d404:	orr	w6, w1, w0
  40d408:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d40c:	add	x1, x0, #0x273
  40d410:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d414:	add	x5, x0, #0xf20
  40d418:	adrp	x0, 43d000 <_fini+0xdb0>
  40d41c:	add	x4, x0, #0x648
  40d420:	mov	w3, #0x40a                 	// #1034
  40d424:	mov	x2, x1
  40d428:	ldr	w1, [sp, #108]
  40d42c:	mov	w0, w6
  40d430:	bl	407d60 <log_internal_realm@plt>
  40d434:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d438:	ldr	w0, [sp, #108]
  40d43c:	cmp	w0, #0x0
  40d440:	cneg	w0, w0, lt  // lt = tstop
  40d444:	and	w0, w0, #0xff
  40d448:	neg	w0, w0
  40d44c:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d450:	ldr	x0, [sp, #136]
  40d454:	ldr	x0, [x0, #368]
  40d458:	ldr	x1, [sp, #128]
  40d45c:	bl	4070b0 <sd_event_source_set_time@plt>
  40d460:	str	w0, [sp, #64]
  40d464:	ldr	w0, [sp, #64]
  40d468:	cmp	w0, #0x0
  40d46c:	b.ge	40d4f8 <manager_dispatch_idle_action+0x444>  // b.tcont
  40d470:	mov	w0, #0x3                   	// #3
  40d474:	str	w0, [sp, #92]
  40d478:	ldr	w0, [sp, #64]
  40d47c:	str	w0, [sp, #96]
  40d480:	str	wzr, [sp, #100]
  40d484:	ldr	w0, [sp, #100]
  40d488:	bl	4083e0 <log_get_max_level_realm@plt>
  40d48c:	mov	w1, w0
  40d490:	ldr	w0, [sp, #92]
  40d494:	and	w0, w0, #0x7
  40d498:	cmp	w1, w0
  40d49c:	b.lt	40d4e0 <manager_dispatch_idle_action+0x42c>  // b.tstop
  40d4a0:	ldr	w0, [sp, #100]
  40d4a4:	lsl	w1, w0, #10
  40d4a8:	ldr	w0, [sp, #92]
  40d4ac:	orr	w6, w1, w0
  40d4b0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d4b4:	add	x1, x0, #0x273
  40d4b8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d4bc:	add	x5, x0, #0xf50
  40d4c0:	adrp	x0, 43d000 <_fini+0xdb0>
  40d4c4:	add	x4, x0, #0x648
  40d4c8:	mov	w3, #0x40e                 	// #1038
  40d4cc:	mov	x2, x1
  40d4d0:	ldr	w1, [sp, #96]
  40d4d4:	mov	w0, w6
  40d4d8:	bl	407d60 <log_internal_realm@plt>
  40d4dc:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d4e0:	ldr	w0, [sp, #96]
  40d4e4:	cmp	w0, #0x0
  40d4e8:	cneg	w0, w0, lt  // lt = tstop
  40d4ec:	and	w0, w0, #0xff
  40d4f0:	neg	w0, w0
  40d4f4:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d4f8:	ldr	x0, [sp, #136]
  40d4fc:	ldr	x0, [x0, #368]
  40d500:	mov	w1, #0xffffffff            	// #-1
  40d504:	bl	4076f0 <sd_event_source_set_enabled@plt>
  40d508:	str	w0, [sp, #64]
  40d50c:	ldr	w0, [sp, #64]
  40d510:	cmp	w0, #0x0
  40d514:	b.ge	40d5a0 <manager_dispatch_idle_action+0x4ec>  // b.tcont
  40d518:	mov	w0, #0x3                   	// #3
  40d51c:	str	w0, [sp, #80]
  40d520:	ldr	w0, [sp, #64]
  40d524:	str	w0, [sp, #84]
  40d528:	str	wzr, [sp, #88]
  40d52c:	ldr	w0, [sp, #88]
  40d530:	bl	4083e0 <log_get_max_level_realm@plt>
  40d534:	mov	w1, w0
  40d538:	ldr	w0, [sp, #80]
  40d53c:	and	w0, w0, #0x7
  40d540:	cmp	w1, w0
  40d544:	b.lt	40d588 <manager_dispatch_idle_action+0x4d4>  // b.tstop
  40d548:	ldr	w0, [sp, #88]
  40d54c:	lsl	w1, w0, #10
  40d550:	ldr	w0, [sp, #80]
  40d554:	orr	w6, w1, w0
  40d558:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d55c:	add	x1, x0, #0x273
  40d560:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d564:	add	x5, x0, #0xf78
  40d568:	adrp	x0, 43d000 <_fini+0xdb0>
  40d56c:	add	x4, x0, #0x648
  40d570:	mov	w3, #0x412                 	// #1042
  40d574:	mov	x2, x1
  40d578:	ldr	w1, [sp, #84]
  40d57c:	mov	w0, w6
  40d580:	bl	407d60 <log_internal_realm@plt>
  40d584:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d588:	ldr	w0, [sp, #84]
  40d58c:	cmp	w0, #0x0
  40d590:	cneg	w0, w0, lt  // lt = tstop
  40d594:	and	w0, w0, #0xff
  40d598:	neg	w0, w0
  40d59c:	b	40d5a4 <manager_dispatch_idle_action+0x4f0>
  40d5a0:	mov	w0, #0x0                   	// #0
  40d5a4:	mov	w1, w0
  40d5a8:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40d5ac:	add	x0, x0, #0x508
  40d5b0:	ldr	x2, [sp, #184]
  40d5b4:	ldr	x0, [x0]
  40d5b8:	eor	x0, x2, x0
  40d5bc:	cmp	x0, #0x0
  40d5c0:	b.eq	40d5c8 <manager_dispatch_idle_action+0x514>  // b.none
  40d5c4:	bl	407b20 <__stack_chk_fail@plt>
  40d5c8:	mov	w0, w1
  40d5cc:	ldp	x19, x20, [sp, #16]
  40d5d0:	ldp	x29, x30, [sp], #192
  40d5d4:	ret

000000000040d5d8 <manager_dispatch_reload_signal>:
  40d5d8:	stp	x29, x30, [sp, #-96]!
  40d5dc:	mov	x29, sp
  40d5e0:	str	x0, [sp, #40]
  40d5e4:	str	x1, [sp, #32]
  40d5e8:	str	x2, [sp, #24]
  40d5ec:	ldr	x0, [sp, #24]
  40d5f0:	str	x0, [sp, #88]
  40d5f4:	ldr	x0, [sp, #88]
  40d5f8:	bl	410ee8 <manager_reset_config>
  40d5fc:	ldr	x0, [sp, #88]
  40d600:	bl	411084 <manager_parse_config_file>
  40d604:	str	w0, [sp, #60]
  40d608:	ldr	w0, [sp, #60]
  40d60c:	cmp	w0, #0x0
  40d610:	b.ge	40d690 <manager_dispatch_reload_signal+0xb8>  // b.tcont
  40d614:	mov	w0, #0x4                   	// #4
  40d618:	str	w0, [sp, #76]
  40d61c:	ldr	w0, [sp, #60]
  40d620:	str	w0, [sp, #80]
  40d624:	str	wzr, [sp, #84]
  40d628:	ldr	w0, [sp, #84]
  40d62c:	bl	4083e0 <log_get_max_level_realm@plt>
  40d630:	mov	w1, w0
  40d634:	ldr	w0, [sp, #76]
  40d638:	and	w0, w0, #0x7
  40d63c:	cmp	w1, w0
  40d640:	b.lt	40d684 <manager_dispatch_reload_signal+0xac>  // b.tstop
  40d644:	ldr	w0, [sp, #84]
  40d648:	lsl	w1, w0, #10
  40d64c:	ldr	w0, [sp, #76]
  40d650:	orr	w6, w1, w0
  40d654:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d658:	add	x1, x0, #0x273
  40d65c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d660:	add	x5, x0, #0xfa0
  40d664:	adrp	x0, 43d000 <_fini+0xdb0>
  40d668:	add	x4, x0, #0x668
  40d66c:	mov	w3, #0x41f                 	// #1055
  40d670:	mov	x2, x1
  40d674:	ldr	w1, [sp, #80]
  40d678:	mov	w0, w6
  40d67c:	bl	407d60 <log_internal_realm@plt>
  40d680:	b	40d704 <manager_dispatch_reload_signal+0x12c>
  40d684:	ldr	w0, [sp, #80]
  40d688:	cmp	w0, #0x0
  40d68c:	b	40d704 <manager_dispatch_reload_signal+0x12c>
  40d690:	mov	w0, #0x6                   	// #6
  40d694:	str	w0, [sp, #64]
  40d698:	str	wzr, [sp, #68]
  40d69c:	str	wzr, [sp, #72]
  40d6a0:	ldr	w0, [sp, #72]
  40d6a4:	bl	4083e0 <log_get_max_level_realm@plt>
  40d6a8:	mov	w1, w0
  40d6ac:	ldr	w0, [sp, #64]
  40d6b0:	and	w0, w0, #0x7
  40d6b4:	cmp	w1, w0
  40d6b8:	b.lt	40d6fc <manager_dispatch_reload_signal+0x124>  // b.tstop
  40d6bc:	ldr	w0, [sp, #72]
  40d6c0:	lsl	w1, w0, #10
  40d6c4:	ldr	w0, [sp, #64]
  40d6c8:	orr	w6, w1, w0
  40d6cc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d6d0:	add	x1, x0, #0x273
  40d6d4:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d6d8:	add	x5, x0, #0xfd0
  40d6dc:	adrp	x0, 43d000 <_fini+0xdb0>
  40d6e0:	add	x4, x0, #0x668
  40d6e4:	mov	w3, #0x421                 	// #1057
  40d6e8:	mov	x2, x1
  40d6ec:	ldr	w1, [sp, #68]
  40d6f0:	mov	w0, w6
  40d6f4:	bl	407d60 <log_internal_realm@plt>
  40d6f8:	b	40d704 <manager_dispatch_reload_signal+0x12c>
  40d6fc:	ldr	w0, [sp, #68]
  40d700:	cmp	w0, #0x0
  40d704:	mov	w0, #0x0                   	// #0
  40d708:	ldp	x29, x30, [sp], #96
  40d70c:	ret

000000000040d710 <manager_startup>:
  40d710:	stp	x29, x30, [sp, #-224]!
  40d714:	mov	x29, sp
  40d718:	str	x0, [sp, #24]
  40d71c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40d720:	add	x0, x0, #0x508
  40d724:	ldr	x1, [x0]
  40d728:	str	x1, [sp, #216]
  40d72c:	mov	x1, #0x0                   	// #0
  40d730:	ldr	x0, [sp, #24]
  40d734:	cmp	x0, #0x0
  40d738:	cset	w0, eq  // eq = none
  40d73c:	and	w0, w0, #0xff
  40d740:	and	x0, x0, #0xff
  40d744:	cmp	x0, #0x0
  40d748:	b.eq	40d774 <manager_startup+0x64>  // b.none
  40d74c:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d750:	add	x1, x0, #0x273
  40d754:	adrp	x0, 43d000 <_fini+0xdb0>
  40d758:	add	x4, x0, #0x688
  40d75c:	mov	w3, #0x42f                 	// #1071
  40d760:	mov	x2, x1
  40d764:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d768:	add	x1, x0, #0x2a0
  40d76c:	mov	w0, #0x0                   	// #0
  40d770:	bl	407650 <log_assert_failed_realm@plt>
  40d774:	ldr	x0, [sp, #24]
  40d778:	ldr	x5, [x0]
  40d77c:	ldr	x4, [sp, #24]
  40d780:	adrp	x0, 40d000 <manager_gc+0x44c>
  40d784:	add	x3, x0, #0x5d8
  40d788:	mov	w2, #0x1                   	// #1
  40d78c:	mov	x1, #0x0                   	// #0
  40d790:	mov	x0, x5
  40d794:	bl	408290 <sd_event_add_signal@plt>
  40d798:	str	w0, [sp, #36]
  40d79c:	ldr	w0, [sp, #36]
  40d7a0:	cmp	w0, #0x0
  40d7a4:	b.ge	40d830 <manager_startup+0x120>  // b.tcont
  40d7a8:	mov	w0, #0x3                   	// #3
  40d7ac:	str	w0, [sp, #148]
  40d7b0:	ldr	w0, [sp, #36]
  40d7b4:	str	w0, [sp, #152]
  40d7b8:	str	wzr, [sp, #156]
  40d7bc:	ldr	w0, [sp, #156]
  40d7c0:	bl	4083e0 <log_get_max_level_realm@plt>
  40d7c4:	mov	w1, w0
  40d7c8:	ldr	w0, [sp, #148]
  40d7cc:	and	w0, w0, #0x7
  40d7d0:	cmp	w1, w0
  40d7d4:	b.lt	40d818 <manager_startup+0x108>  // b.tstop
  40d7d8:	ldr	w0, [sp, #156]
  40d7dc:	lsl	w1, w0, #10
  40d7e0:	ldr	w0, [sp, #148]
  40d7e4:	orr	w6, w1, w0
  40d7e8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d7ec:	add	x1, x0, #0x273
  40d7f0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d7f4:	add	x5, x0, #0xfe8
  40d7f8:	adrp	x0, 43d000 <_fini+0xdb0>
  40d7fc:	add	x4, x0, #0x698
  40d800:	mov	w3, #0x433                 	// #1075
  40d804:	mov	x2, x1
  40d808:	ldr	w1, [sp, #152]
  40d80c:	mov	w0, w6
  40d810:	bl	407d60 <log_internal_realm@plt>
  40d814:	b	40df50 <manager_startup+0x840>
  40d818:	ldr	w0, [sp, #152]
  40d81c:	cmp	w0, #0x0
  40d820:	cneg	w0, w0, lt  // lt = tstop
  40d824:	and	w0, w0, #0xff
  40d828:	neg	w0, w0
  40d82c:	b	40df50 <manager_startup+0x840>
  40d830:	ldr	x0, [sp, #24]
  40d834:	bl	4139a4 <manager_connect_utmp>
  40d838:	ldr	x0, [sp, #24]
  40d83c:	bl	40c0e4 <manager_connect_console>
  40d840:	str	w0, [sp, #36]
  40d844:	ldr	w0, [sp, #36]
  40d848:	cmp	w0, #0x0
  40d84c:	b.ge	40d858 <manager_startup+0x148>  // b.tcont
  40d850:	ldr	w0, [sp, #36]
  40d854:	b	40df50 <manager_startup+0x840>
  40d858:	ldr	x0, [sp, #24]
  40d85c:	bl	40c5e8 <manager_connect_udev>
  40d860:	str	w0, [sp, #36]
  40d864:	ldr	w0, [sp, #36]
  40d868:	cmp	w0, #0x0
  40d86c:	b.ge	40d8f8 <manager_startup+0x1e8>  // b.tcont
  40d870:	mov	w0, #0x3                   	// #3
  40d874:	str	w0, [sp, #136]
  40d878:	ldr	w0, [sp, #36]
  40d87c:	str	w0, [sp, #140]
  40d880:	str	wzr, [sp, #144]
  40d884:	ldr	w0, [sp, #144]
  40d888:	bl	4083e0 <log_get_max_level_realm@plt>
  40d88c:	mov	w1, w0
  40d890:	ldr	w0, [sp, #136]
  40d894:	and	w0, w0, #0x7
  40d898:	cmp	w1, w0
  40d89c:	b.lt	40d8e0 <manager_startup+0x1d0>  // b.tstop
  40d8a0:	ldr	w0, [sp, #144]
  40d8a4:	lsl	w1, w0, #10
  40d8a8:	ldr	w0, [sp, #136]
  40d8ac:	orr	w6, w1, w0
  40d8b0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d8b4:	add	x1, x0, #0x273
  40d8b8:	adrp	x0, 43d000 <_fini+0xdb0>
  40d8bc:	add	x5, x0, #0x10
  40d8c0:	adrp	x0, 43d000 <_fini+0xdb0>
  40d8c4:	add	x4, x0, #0x698
  40d8c8:	mov	w3, #0x440                 	// #1088
  40d8cc:	mov	x2, x1
  40d8d0:	ldr	w1, [sp, #140]
  40d8d4:	mov	w0, w6
  40d8d8:	bl	407d60 <log_internal_realm@plt>
  40d8dc:	b	40df50 <manager_startup+0x840>
  40d8e0:	ldr	w0, [sp, #140]
  40d8e4:	cmp	w0, #0x0
  40d8e8:	cneg	w0, w0, lt  // lt = tstop
  40d8ec:	and	w0, w0, #0xff
  40d8f0:	neg	w0, w0
  40d8f4:	b	40df50 <manager_startup+0x840>
  40d8f8:	ldr	x0, [sp, #24]
  40d8fc:	bl	40b124 <manager_connect_bus>
  40d900:	str	w0, [sp, #36]
  40d904:	ldr	w0, [sp, #36]
  40d908:	cmp	w0, #0x0
  40d90c:	b.ge	40d918 <manager_startup+0x208>  // b.tcont
  40d910:	ldr	w0, [sp, #36]
  40d914:	b	40df50 <manager_startup+0x840>
  40d918:	ldr	x0, [sp, #24]
  40d91c:	add	x0, x0, #0xa8
  40d920:	mov	x2, x0
  40d924:	adrp	x0, 43d000 <_fini+0xdb0>
  40d928:	add	x1, x0, #0x38
  40d92c:	ldr	x0, [sp, #24]
  40d930:	bl	411258 <manager_add_seat>
  40d934:	str	w0, [sp, #36]
  40d938:	ldr	w0, [sp, #36]
  40d93c:	cmp	w0, #0x0
  40d940:	b.ge	40d9cc <manager_startup+0x2bc>  // b.tcont
  40d944:	mov	w0, #0x3                   	// #3
  40d948:	str	w0, [sp, #124]
  40d94c:	ldr	w0, [sp, #36]
  40d950:	str	w0, [sp, #128]
  40d954:	str	wzr, [sp, #132]
  40d958:	ldr	w0, [sp, #132]
  40d95c:	bl	4083e0 <log_get_max_level_realm@plt>
  40d960:	mov	w1, w0
  40d964:	ldr	w0, [sp, #124]
  40d968:	and	w0, w0, #0x7
  40d96c:	cmp	w1, w0
  40d970:	b.lt	40d9b4 <manager_startup+0x2a4>  // b.tstop
  40d974:	ldr	w0, [sp, #132]
  40d978:	lsl	w1, w0, #10
  40d97c:	ldr	w0, [sp, #124]
  40d980:	orr	w6, w1, w0
  40d984:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40d988:	add	x1, x0, #0x273
  40d98c:	adrp	x0, 43d000 <_fini+0xdb0>
  40d990:	add	x5, x0, #0x40
  40d994:	adrp	x0, 43d000 <_fini+0xdb0>
  40d998:	add	x4, x0, #0x698
  40d99c:	mov	w3, #0x44a                 	// #1098
  40d9a0:	mov	x2, x1
  40d9a4:	ldr	w1, [sp, #128]
  40d9a8:	mov	w0, w6
  40d9ac:	bl	407d60 <log_internal_realm@plt>
  40d9b0:	b	40df50 <manager_startup+0x840>
  40d9b4:	ldr	w0, [sp, #128]
  40d9b8:	cmp	w0, #0x0
  40d9bc:	cneg	w0, w0, lt  // lt = tstop
  40d9c0:	and	w0, w0, #0xff
  40d9c4:	neg	w0, w0
  40d9c8:	b	40df50 <manager_startup+0x840>
  40d9cc:	ldr	x0, [sp, #24]
  40d9d0:	ldr	x0, [x0, #440]
  40d9d4:	mov	x1, x0
  40d9d8:	ldr	x0, [sp, #24]
  40d9dc:	bl	419f58 <manager_set_lid_switch_ignore>
  40d9e0:	str	w0, [sp, #36]
  40d9e4:	ldr	w0, [sp, #36]
  40d9e8:	cmp	w0, #0x0
  40d9ec:	b.ge	40da68 <manager_startup+0x358>  // b.tcont
  40d9f0:	mov	w0, #0x4                   	// #4
  40d9f4:	str	w0, [sp, #40]
  40d9f8:	ldr	w0, [sp, #36]
  40d9fc:	str	w0, [sp, #44]
  40da00:	str	wzr, [sp, #48]
  40da04:	ldr	w0, [sp, #48]
  40da08:	bl	4083e0 <log_get_max_level_realm@plt>
  40da0c:	mov	w1, w0
  40da10:	ldr	w0, [sp, #40]
  40da14:	and	w0, w0, #0x7
  40da18:	cmp	w1, w0
  40da1c:	b.lt	40da60 <manager_startup+0x350>  // b.tstop
  40da20:	ldr	w0, [sp, #48]
  40da24:	lsl	w1, w0, #10
  40da28:	ldr	w0, [sp, #40]
  40da2c:	orr	w6, w1, w0
  40da30:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40da34:	add	x1, x0, #0x273
  40da38:	adrp	x0, 43d000 <_fini+0xdb0>
  40da3c:	add	x5, x0, #0x58
  40da40:	adrp	x0, 43d000 <_fini+0xdb0>
  40da44:	add	x4, x0, #0x698
  40da48:	mov	w3, #0x44e                 	// #1102
  40da4c:	mov	x2, x1
  40da50:	ldr	w1, [sp, #44]
  40da54:	mov	w0, w6
  40da58:	bl	407d60 <log_internal_realm@plt>
  40da5c:	b	40da68 <manager_startup+0x358>
  40da60:	ldr	w0, [sp, #44]
  40da64:	cmp	w0, #0x0
  40da68:	ldr	x0, [sp, #24]
  40da6c:	bl	409008 <manager_enumerate_devices>
  40da70:	str	w0, [sp, #36]
  40da74:	ldr	w0, [sp, #36]
  40da78:	cmp	w0, #0x0
  40da7c:	b.ge	40daf8 <manager_startup+0x3e8>  // b.tcont
  40da80:	mov	w0, #0x4                   	// #4
  40da84:	str	w0, [sp, #52]
  40da88:	ldr	w0, [sp, #36]
  40da8c:	str	w0, [sp, #56]
  40da90:	str	wzr, [sp, #60]
  40da94:	ldr	w0, [sp, #60]
  40da98:	bl	4083e0 <log_get_max_level_realm@plt>
  40da9c:	mov	w1, w0
  40daa0:	ldr	w0, [sp, #52]
  40daa4:	and	w0, w0, #0x7
  40daa8:	cmp	w1, w0
  40daac:	b.lt	40daf0 <manager_startup+0x3e0>  // b.tstop
  40dab0:	ldr	w0, [sp, #60]
  40dab4:	lsl	w1, w0, #10
  40dab8:	ldr	w0, [sp, #52]
  40dabc:	orr	w6, w1, w0
  40dac0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dac4:	add	x1, x0, #0x273
  40dac8:	adrp	x0, 43d000 <_fini+0xdb0>
  40dacc:	add	x5, x0, #0x90
  40dad0:	adrp	x0, 43d000 <_fini+0xdb0>
  40dad4:	add	x4, x0, #0x698
  40dad8:	mov	w3, #0x453                 	// #1107
  40dadc:	mov	x2, x1
  40dae0:	ldr	w1, [sp, #56]
  40dae4:	mov	w0, w6
  40dae8:	bl	407d60 <log_internal_realm@plt>
  40daec:	b	40daf8 <manager_startup+0x3e8>
  40daf0:	ldr	w0, [sp, #56]
  40daf4:	cmp	w0, #0x0
  40daf8:	ldr	x0, [sp, #24]
  40dafc:	bl	4092dc <manager_enumerate_seats>
  40db00:	str	w0, [sp, #36]
  40db04:	ldr	w0, [sp, #36]
  40db08:	cmp	w0, #0x0
  40db0c:	b.ge	40db88 <manager_startup+0x478>  // b.tcont
  40db10:	mov	w0, #0x4                   	// #4
  40db14:	str	w0, [sp, #64]
  40db18:	ldr	w0, [sp, #36]
  40db1c:	str	w0, [sp, #68]
  40db20:	str	wzr, [sp, #72]
  40db24:	ldr	w0, [sp, #72]
  40db28:	bl	4083e0 <log_get_max_level_realm@plt>
  40db2c:	mov	w1, w0
  40db30:	ldr	w0, [sp, #64]
  40db34:	and	w0, w0, #0x7
  40db38:	cmp	w1, w0
  40db3c:	b.lt	40db80 <manager_startup+0x470>  // b.tstop
  40db40:	ldr	w0, [sp, #72]
  40db44:	lsl	w1, w0, #10
  40db48:	ldr	w0, [sp, #64]
  40db4c:	orr	w6, w1, w0
  40db50:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40db54:	add	x1, x0, #0x273
  40db58:	adrp	x0, 43d000 <_fini+0xdb0>
  40db5c:	add	x5, x0, #0xb0
  40db60:	adrp	x0, 43d000 <_fini+0xdb0>
  40db64:	add	x4, x0, #0x698
  40db68:	mov	w3, #0x457                 	// #1111
  40db6c:	mov	x2, x1
  40db70:	ldr	w1, [sp, #68]
  40db74:	mov	w0, w6
  40db78:	bl	407d60 <log_internal_realm@plt>
  40db7c:	b	40db88 <manager_startup+0x478>
  40db80:	ldr	w0, [sp, #68]
  40db84:	cmp	w0, #0x0
  40db88:	ldr	x0, [sp, #24]
  40db8c:	bl	4098d0 <manager_enumerate_users>
  40db90:	str	w0, [sp, #36]
  40db94:	ldr	w0, [sp, #36]
  40db98:	cmp	w0, #0x0
  40db9c:	b.ge	40dc18 <manager_startup+0x508>  // b.tcont
  40dba0:	mov	w0, #0x4                   	// #4
  40dba4:	str	w0, [sp, #76]
  40dba8:	ldr	w0, [sp, #36]
  40dbac:	str	w0, [sp, #80]
  40dbb0:	str	wzr, [sp, #84]
  40dbb4:	ldr	w0, [sp, #84]
  40dbb8:	bl	4083e0 <log_get_max_level_realm@plt>
  40dbbc:	mov	w1, w0
  40dbc0:	ldr	w0, [sp, #76]
  40dbc4:	and	w0, w0, #0x7
  40dbc8:	cmp	w1, w0
  40dbcc:	b.lt	40dc10 <manager_startup+0x500>  // b.tstop
  40dbd0:	ldr	w0, [sp, #84]
  40dbd4:	lsl	w1, w0, #10
  40dbd8:	ldr	w0, [sp, #76]
  40dbdc:	orr	w6, w1, w0
  40dbe0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dbe4:	add	x1, x0, #0x273
  40dbe8:	adrp	x0, 43d000 <_fini+0xdb0>
  40dbec:	add	x5, x0, #0xd0
  40dbf0:	adrp	x0, 43d000 <_fini+0xdb0>
  40dbf4:	add	x4, x0, #0x698
  40dbf8:	mov	w3, #0x45b                 	// #1115
  40dbfc:	mov	x2, x1
  40dc00:	ldr	w1, [sp, #80]
  40dc04:	mov	w0, w6
  40dc08:	bl	407d60 <log_internal_realm@plt>
  40dc0c:	b	40dc18 <manager_startup+0x508>
  40dc10:	ldr	w0, [sp, #80]
  40dc14:	cmp	w0, #0x0
  40dc18:	ldr	x0, [sp, #24]
  40dc1c:	bl	40a4c4 <manager_enumerate_sessions>
  40dc20:	str	w0, [sp, #36]
  40dc24:	ldr	w0, [sp, #36]
  40dc28:	cmp	w0, #0x0
  40dc2c:	b.ge	40dca8 <manager_startup+0x598>  // b.tcont
  40dc30:	mov	w0, #0x4                   	// #4
  40dc34:	str	w0, [sp, #88]
  40dc38:	ldr	w0, [sp, #36]
  40dc3c:	str	w0, [sp, #92]
  40dc40:	str	wzr, [sp, #96]
  40dc44:	ldr	w0, [sp, #96]
  40dc48:	bl	4083e0 <log_get_max_level_realm@plt>
  40dc4c:	mov	w1, w0
  40dc50:	ldr	w0, [sp, #88]
  40dc54:	and	w0, w0, #0x7
  40dc58:	cmp	w1, w0
  40dc5c:	b.lt	40dca0 <manager_startup+0x590>  // b.tstop
  40dc60:	ldr	w0, [sp, #96]
  40dc64:	lsl	w1, w0, #10
  40dc68:	ldr	w0, [sp, #88]
  40dc6c:	orr	w6, w1, w0
  40dc70:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dc74:	add	x1, x0, #0x273
  40dc78:	adrp	x0, 43d000 <_fini+0xdb0>
  40dc7c:	add	x5, x0, #0xf0
  40dc80:	adrp	x0, 43d000 <_fini+0xdb0>
  40dc84:	add	x4, x0, #0x698
  40dc88:	mov	w3, #0x45f                 	// #1119
  40dc8c:	mov	x2, x1
  40dc90:	ldr	w1, [sp, #92]
  40dc94:	mov	w0, w6
  40dc98:	bl	407d60 <log_internal_realm@plt>
  40dc9c:	b	40dca8 <manager_startup+0x598>
  40dca0:	ldr	w0, [sp, #92]
  40dca4:	cmp	w0, #0x0
  40dca8:	ldr	x0, [sp, #24]
  40dcac:	bl	40a7cc <manager_enumerate_inhibitors>
  40dcb0:	str	w0, [sp, #36]
  40dcb4:	ldr	w0, [sp, #36]
  40dcb8:	cmp	w0, #0x0
  40dcbc:	b.ge	40dd38 <manager_startup+0x628>  // b.tcont
  40dcc0:	mov	w0, #0x4                   	// #4
  40dcc4:	str	w0, [sp, #100]
  40dcc8:	ldr	w0, [sp, #36]
  40dccc:	str	w0, [sp, #104]
  40dcd0:	str	wzr, [sp, #108]
  40dcd4:	ldr	w0, [sp, #108]
  40dcd8:	bl	4083e0 <log_get_max_level_realm@plt>
  40dcdc:	mov	w1, w0
  40dce0:	ldr	w0, [sp, #100]
  40dce4:	and	w0, w0, #0x7
  40dce8:	cmp	w1, w0
  40dcec:	b.lt	40dd30 <manager_startup+0x620>  // b.tstop
  40dcf0:	ldr	w0, [sp, #108]
  40dcf4:	lsl	w1, w0, #10
  40dcf8:	ldr	w0, [sp, #100]
  40dcfc:	orr	w6, w1, w0
  40dd00:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dd04:	add	x1, x0, #0x273
  40dd08:	adrp	x0, 43d000 <_fini+0xdb0>
  40dd0c:	add	x5, x0, #0x110
  40dd10:	adrp	x0, 43d000 <_fini+0xdb0>
  40dd14:	add	x4, x0, #0x698
  40dd18:	mov	w3, #0x463                 	// #1123
  40dd1c:	mov	x2, x1
  40dd20:	ldr	w1, [sp, #104]
  40dd24:	mov	w0, w6
  40dd28:	bl	407d60 <log_internal_realm@plt>
  40dd2c:	b	40dd38 <manager_startup+0x628>
  40dd30:	ldr	w0, [sp, #104]
  40dd34:	cmp	w0, #0x0
  40dd38:	ldr	x0, [sp, #24]
  40dd3c:	bl	40914c <manager_enumerate_buttons>
  40dd40:	str	w0, [sp, #36]
  40dd44:	ldr	w0, [sp, #36]
  40dd48:	cmp	w0, #0x0
  40dd4c:	b.ge	40ddc8 <manager_startup+0x6b8>  // b.tcont
  40dd50:	mov	w0, #0x4                   	// #4
  40dd54:	str	w0, [sp, #112]
  40dd58:	ldr	w0, [sp, #36]
  40dd5c:	str	w0, [sp, #116]
  40dd60:	str	wzr, [sp, #120]
  40dd64:	ldr	w0, [sp, #120]
  40dd68:	bl	4083e0 <log_get_max_level_realm@plt>
  40dd6c:	mov	w1, w0
  40dd70:	ldr	w0, [sp, #112]
  40dd74:	and	w0, w0, #0x7
  40dd78:	cmp	w1, w0
  40dd7c:	b.lt	40ddc0 <manager_startup+0x6b0>  // b.tstop
  40dd80:	ldr	w0, [sp, #120]
  40dd84:	lsl	w1, w0, #10
  40dd88:	ldr	w0, [sp, #112]
  40dd8c:	orr	w6, w1, w0
  40dd90:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dd94:	add	x1, x0, #0x273
  40dd98:	adrp	x0, 43d000 <_fini+0xdb0>
  40dd9c:	add	x5, x0, #0x138
  40dda0:	adrp	x0, 43d000 <_fini+0xdb0>
  40dda4:	add	x4, x0, #0x698
  40dda8:	mov	w3, #0x467                 	// #1127
  40ddac:	mov	x2, x1
  40ddb0:	ldr	w1, [sp, #116]
  40ddb4:	mov	w0, w6
  40ddb8:	bl	407d60 <log_internal_realm@plt>
  40ddbc:	b	40ddc8 <manager_startup+0x6b8>
  40ddc0:	ldr	w0, [sp, #116]
  40ddc4:	cmp	w0, #0x0
  40ddc8:	mov	w1, #0x0                   	// #0
  40ddcc:	ldr	x0, [sp, #24]
  40ddd0:	bl	40cbb4 <manager_gc>
  40ddd4:	ldr	x0, [sp, #24]
  40ddd8:	bl	40af4c <manager_reserve_vt>
  40dddc:	ldr	x0, [sp, #24]
  40dde0:	bl	4133fc <manager_read_utmp>
  40dde4:	mov	w0, #0xfffffffe            	// #-2
  40dde8:	str	w0, [sp, #200]
  40ddec:	str	xzr, [sp, #208]
  40ddf0:	b	40ddfc <manager_startup+0x6ec>
  40ddf4:	ldr	x0, [sp, #160]
  40ddf8:	bl	4287d4 <seat_start>
  40ddfc:	ldr	x0, [sp, #24]
  40de00:	ldr	x0, [x0, #24]
  40de04:	add	x2, sp, #0xa0
  40de08:	add	x1, sp, #0xc8
  40de0c:	mov	x3, #0x0                   	// #0
  40de10:	bl	4087f0 <hashmap_iterate>
  40de14:	and	w0, w0, #0xff
  40de18:	cmp	w0, #0x0
  40de1c:	b.ne	40ddf4 <manager_startup+0x6e4>  // b.any
  40de20:	mov	w0, #0xfffffffe            	// #-2
  40de24:	str	w0, [sp, #200]
  40de28:	str	xzr, [sp, #208]
  40de2c:	b	40de38 <manager_startup+0x728>
  40de30:	ldr	x0, [sp, #176]
  40de34:	bl	437790 <user_start>
  40de38:	ldr	x0, [sp, #24]
  40de3c:	ldr	x0, [x0, #48]
  40de40:	add	x2, sp, #0xb0
  40de44:	add	x1, sp, #0xc8
  40de48:	mov	x3, #0x0                   	// #0
  40de4c:	bl	4087f0 <hashmap_iterate>
  40de50:	and	w0, w0, #0xff
  40de54:	cmp	w0, #0x0
  40de58:	b.ne	40de30 <manager_startup+0x720>  // b.any
  40de5c:	mov	w0, #0xfffffffe            	// #-2
  40de60:	str	w0, [sp, #200]
  40de64:	str	xzr, [sp, #208]
  40de68:	b	40de7c <manager_startup+0x76c>
  40de6c:	ldr	x0, [sp, #168]
  40de70:	mov	x2, #0x0                   	// #0
  40de74:	mov	x1, #0x0                   	// #0
  40de78:	bl	431ad4 <session_start>
  40de7c:	ldr	x0, [sp, #24]
  40de80:	ldr	x0, [x0, #32]
  40de84:	add	x2, sp, #0xa8
  40de88:	add	x1, sp, #0xc8
  40de8c:	mov	x3, #0x0                   	// #0
  40de90:	bl	4087f0 <hashmap_iterate>
  40de94:	and	w0, w0, #0xff
  40de98:	cmp	w0, #0x0
  40de9c:	b.ne	40de6c <manager_startup+0x75c>  // b.any
  40dea0:	mov	w0, #0xfffffffe            	// #-2
  40dea4:	str	w0, [sp, #200]
  40dea8:	str	xzr, [sp, #208]
  40deac:	b	40dedc <manager_startup+0x7cc>
  40deb0:	ldr	x0, [sp, #192]
  40deb4:	bl	423834 <inhibitor_start>
  40deb8:	ldr	x0, [sp, #192]
  40debc:	bl	4244bc <inhibitor_is_orphan>
  40dec0:	and	w0, w0, #0xff
  40dec4:	cmp	w0, #0x0
  40dec8:	b.eq	40dedc <manager_startup+0x7cc>  // b.none
  40decc:	ldr	x0, [sp, #192]
  40ded0:	bl	4239b4 <inhibitor_stop>
  40ded4:	ldr	x0, [sp, #192]
  40ded8:	bl	423370 <inhibitor_free>
  40dedc:	ldr	x0, [sp, #24]
  40dee0:	ldr	x0, [x0, #56]
  40dee4:	add	x2, sp, #0xc0
  40dee8:	add	x1, sp, #0xc8
  40deec:	mov	x3, #0x0                   	// #0
  40def0:	bl	4087f0 <hashmap_iterate>
  40def4:	and	w0, w0, #0xff
  40def8:	cmp	w0, #0x0
  40defc:	b.ne	40deb0 <manager_startup+0x7a0>  // b.any
  40df00:	mov	w0, #0xfffffffe            	// #-2
  40df04:	str	w0, [sp, #200]
  40df08:	str	xzr, [sp, #208]
  40df0c:	b	40df18 <manager_startup+0x808>
  40df10:	ldr	x0, [sp, #184]
  40df14:	bl	410b20 <button_check_switches>
  40df18:	ldr	x0, [sp, #24]
  40df1c:	ldr	x0, [x0, #64]
  40df20:	add	x2, sp, #0xb8
  40df24:	add	x1, sp, #0xc8
  40df28:	mov	x3, #0x0                   	// #0
  40df2c:	bl	4087f0 <hashmap_iterate>
  40df30:	and	w0, w0, #0xff
  40df34:	cmp	w0, #0x0
  40df38:	b.ne	40df10 <manager_startup+0x800>  // b.any
  40df3c:	ldr	x2, [sp, #24]
  40df40:	mov	x1, #0x0                   	// #0
  40df44:	mov	x0, #0x0                   	// #0
  40df48:	bl	40d0b4 <manager_dispatch_idle_action>
  40df4c:	mov	w0, #0x0                   	// #0
  40df50:	mov	w1, w0
  40df54:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40df58:	add	x0, x0, #0x508
  40df5c:	ldr	x2, [sp, #216]
  40df60:	ldr	x0, [x0]
  40df64:	eor	x0, x2, x0
  40df68:	cmp	x0, #0x0
  40df6c:	b.eq	40df74 <manager_startup+0x864>  // b.none
  40df70:	bl	407b20 <__stack_chk_fail@plt>
  40df74:	mov	w0, w1
  40df78:	ldp	x29, x30, [sp], #224
  40df7c:	ret

000000000040df80 <manager_run>:
  40df80:	stp	x29, x30, [sp, #-48]!
  40df84:	mov	x29, sp
  40df88:	str	x0, [sp, #24]
  40df8c:	ldr	x0, [sp, #24]
  40df90:	cmp	x0, #0x0
  40df94:	cset	w0, eq  // eq = none
  40df98:	and	w0, w0, #0xff
  40df9c:	and	x0, x0, #0xff
  40dfa0:	cmp	x0, #0x0
  40dfa4:	b.eq	40dfd0 <manager_run+0x50>  // b.none
  40dfa8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dfac:	add	x1, x0, #0x273
  40dfb0:	adrp	x0, 43d000 <_fini+0xdb0>
  40dfb4:	add	x4, x0, #0x6a8
  40dfb8:	mov	w3, #0x491                 	// #1169
  40dfbc:	mov	x2, x1
  40dfc0:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40dfc4:	add	x1, x0, #0x2a0
  40dfc8:	mov	w0, #0x0                   	// #0
  40dfcc:	bl	407650 <log_assert_failed_realm@plt>
  40dfd0:	ldr	x0, [sp, #24]
  40dfd4:	ldr	x0, [x0]
  40dfd8:	bl	407530 <sd_event_get_state@plt>
  40dfdc:	str	w0, [sp, #44]
  40dfe0:	ldr	w0, [sp, #44]
  40dfe4:	cmp	w0, #0x0
  40dfe8:	b.ge	40dff4 <manager_run+0x74>  // b.tcont
  40dfec:	ldr	w0, [sp, #44]
  40dff0:	b	40e074 <manager_run+0xf4>
  40dff4:	ldr	w0, [sp, #44]
  40dff8:	cmp	w0, #0x5
  40dffc:	b.ne	40e008 <manager_run+0x88>  // b.any
  40e000:	mov	w0, #0x0                   	// #0
  40e004:	b	40e074 <manager_run+0xf4>
  40e008:	mov	w1, #0x1                   	// #1
  40e00c:	ldr	x0, [sp, #24]
  40e010:	bl	40cbb4 <manager_gc>
  40e014:	mov	w1, #0x0                   	// #0
  40e018:	ldr	x0, [sp, #24]
  40e01c:	bl	41a488 <manager_dispatch_delayed>
  40e020:	str	w0, [sp, #44]
  40e024:	ldr	w0, [sp, #44]
  40e028:	cmp	w0, #0x0
  40e02c:	b.ge	40e038 <manager_run+0xb8>  // b.tcont
  40e030:	ldr	w0, [sp, #44]
  40e034:	b	40e074 <manager_run+0xf4>
  40e038:	ldr	w0, [sp, #44]
  40e03c:	cmp	w0, #0x0
  40e040:	b.gt	40e06c <manager_run+0xec>
  40e044:	ldr	x0, [sp, #24]
  40e048:	ldr	x0, [x0]
  40e04c:	mov	x1, #0xffffffffffffffff    	// #-1
  40e050:	bl	406fa0 <sd_event_run@plt>
  40e054:	str	w0, [sp, #44]
  40e058:	ldr	w0, [sp, #44]
  40e05c:	cmp	w0, #0x0
  40e060:	b.ge	40dfd0 <manager_run+0x50>  // b.tcont
  40e064:	ldr	w0, [sp, #44]
  40e068:	b	40e074 <manager_run+0xf4>
  40e06c:	nop
  40e070:	b	40dfd0 <manager_run+0x50>
  40e074:	ldp	x29, x30, [sp], #48
  40e078:	ret

000000000040e07c <run>:
  40e07c:	stp	x29, x30, [sp, #-144]!
  40e080:	mov	x29, sp
  40e084:	stp	x19, x20, [sp, #16]
  40e088:	str	w0, [sp, #44]
  40e08c:	str	x1, [sp, #32]
  40e090:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40e094:	add	x0, x0, #0x508
  40e098:	ldr	x1, [x0]
  40e09c:	str	x1, [sp, #136]
  40e0a0:	mov	x1, #0x0                   	// #0
  40e0a4:	str	xzr, [sp, #128]
  40e0a8:	mov	w0, #0x20                  	// #32
  40e0ac:	bl	408020 <log_set_facility@plt>
  40e0b0:	bl	4075c0 <log_setup_service@plt>
  40e0b4:	mov	w0, #0x12                  	// #18
  40e0b8:	bl	407700 <umask@plt>
  40e0bc:	ldr	w0, [sp, #44]
  40e0c0:	cmp	w0, #0x1
  40e0c4:	b.eq	40e144 <run+0xc8>  // b.none
  40e0c8:	mov	w0, #0x3                   	// #3
  40e0cc:	str	w0, [sp, #116]
  40e0d0:	str	wzr, [sp, #120]
  40e0d4:	str	wzr, [sp, #124]
  40e0d8:	ldr	w0, [sp, #124]
  40e0dc:	bl	4083e0 <log_get_max_level_realm@plt>
  40e0e0:	mov	w1, w0
  40e0e4:	ldr	w0, [sp, #116]
  40e0e8:	and	w0, w0, #0x7
  40e0ec:	cmp	w1, w0
  40e0f0:	b.lt	40e134 <run+0xb8>  // b.tstop
  40e0f4:	ldr	w0, [sp, #124]
  40e0f8:	lsl	w1, w0, #10
  40e0fc:	ldr	w0, [sp, #116]
  40e100:	orr	w6, w1, w0
  40e104:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e108:	add	x1, x0, #0x273
  40e10c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e110:	add	x5, x0, #0x158
  40e114:	adrp	x0, 43d000 <_fini+0xdb0>
  40e118:	add	x4, x0, #0x6b8
  40e11c:	mov	w3, #0x4b2                 	// #1202
  40e120:	mov	x2, x1
  40e124:	ldr	w1, [sp, #120]
  40e128:	mov	w0, w6
  40e12c:	bl	407d60 <log_internal_realm@plt>
  40e130:	b	40e13c <run+0xc0>
  40e134:	ldr	w0, [sp, #120]
  40e138:	cmp	w0, #0x0
  40e13c:	mov	w19, #0xffffffea            	// #-22
  40e140:	b	40e4e8 <run+0x46c>
  40e144:	bl	407180 <mac_selinux_init@plt>
  40e148:	str	w0, [sp, #52]
  40e14c:	ldr	w0, [sp, #52]
  40e150:	cmp	w0, #0x0
  40e154:	b.ge	40e1e4 <run+0x168>  // b.tcont
  40e158:	mov	w0, #0x3                   	// #3
  40e15c:	str	w0, [sp, #104]
  40e160:	ldr	w0, [sp, #52]
  40e164:	str	w0, [sp, #108]
  40e168:	str	wzr, [sp, #112]
  40e16c:	ldr	w0, [sp, #112]
  40e170:	bl	4083e0 <log_get_max_level_realm@plt>
  40e174:	mov	w1, w0
  40e178:	ldr	w0, [sp, #104]
  40e17c:	and	w0, w0, #0x7
  40e180:	cmp	w1, w0
  40e184:	b.lt	40e1cc <run+0x150>  // b.tstop
  40e188:	ldr	w0, [sp, #112]
  40e18c:	lsl	w1, w0, #10
  40e190:	ldr	w0, [sp, #104]
  40e194:	orr	w6, w1, w0
  40e198:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e19c:	add	x1, x0, #0x273
  40e1a0:	adrp	x0, 43d000 <_fini+0xdb0>
  40e1a4:	add	x5, x0, #0x180
  40e1a8:	adrp	x0, 43d000 <_fini+0xdb0>
  40e1ac:	add	x4, x0, #0x6b8
  40e1b0:	mov	w3, #0x4b8                 	// #1208
  40e1b4:	mov	x2, x1
  40e1b8:	ldr	w1, [sp, #108]
  40e1bc:	mov	w0, w6
  40e1c0:	bl	407d60 <log_internal_realm@plt>
  40e1c4:	mov	w19, w0
  40e1c8:	b	40e4e8 <run+0x46c>
  40e1cc:	ldr	w0, [sp, #108]
  40e1d0:	cmp	w0, #0x0
  40e1d4:	cneg	w0, w0, lt  // lt = tstop
  40e1d8:	and	w0, w0, #0xff
  40e1dc:	neg	w19, w0
  40e1e0:	b	40e4e8 <run+0x46c>
  40e1e4:	mov	w1, #0x1ed                 	// #493
  40e1e8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e1ec:	add	x0, x0, #0x2d0
  40e1f0:	bl	407d00 <mkdir_label@plt>
  40e1f4:	mov	w1, #0x1ed                 	// #493
  40e1f8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e1fc:	add	x0, x0, #0x3b8
  40e200:	bl	407d00 <mkdir_label@plt>
  40e204:	mov	w1, #0x1ed                 	// #493
  40e208:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e20c:	add	x0, x0, #0x5c8
  40e210:	bl	407d00 <mkdir_label@plt>
  40e214:	mov	w6, #0xffffffff            	// #-1
  40e218:	mov	w5, #0x11                  	// #17
  40e21c:	mov	w4, #0x2                   	// #2
  40e220:	mov	w3, #0xf                   	// #15
  40e224:	mov	w2, #0x1                   	// #1
  40e228:	mov	x1, #0x0                   	// #0
  40e22c:	mov	w0, #0x0                   	// #0
  40e230:	bl	4077b0 <sigprocmask_many@plt>
  40e234:	lsr	w0, w0, #31
  40e238:	and	w0, w0, #0xff
  40e23c:	and	x0, x0, #0xff
  40e240:	cmp	x0, #0x0
  40e244:	b.eq	40e270 <run+0x1f4>  // b.none
  40e248:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e24c:	add	x1, x0, #0x273
  40e250:	adrp	x0, 43d000 <_fini+0xdb0>
  40e254:	add	x4, x0, #0x6c0
  40e258:	mov	w3, #0x4c1                 	// #1217
  40e25c:	mov	x2, x1
  40e260:	adrp	x0, 43d000 <_fini+0xdb0>
  40e264:	add	x1, x0, #0x1a8
  40e268:	mov	w0, #0x0                   	// #0
  40e26c:	bl	407650 <log_assert_failed_realm@plt>
  40e270:	add	x0, sp, #0x80
  40e274:	bl	408a34 <manager_new>
  40e278:	str	w0, [sp, #52]
  40e27c:	ldr	w0, [sp, #52]
  40e280:	cmp	w0, #0x0
  40e284:	b.ge	40e314 <run+0x298>  // b.tcont
  40e288:	mov	w0, #0x3                   	// #3
  40e28c:	str	w0, [sp, #92]
  40e290:	ldr	w0, [sp, #52]
  40e294:	str	w0, [sp, #96]
  40e298:	str	wzr, [sp, #100]
  40e29c:	ldr	w0, [sp, #100]
  40e2a0:	bl	4083e0 <log_get_max_level_realm@plt>
  40e2a4:	mov	w1, w0
  40e2a8:	ldr	w0, [sp, #92]
  40e2ac:	and	w0, w0, #0x7
  40e2b0:	cmp	w1, w0
  40e2b4:	b.lt	40e2fc <run+0x280>  // b.tstop
  40e2b8:	ldr	w0, [sp, #100]
  40e2bc:	lsl	w1, w0, #10
  40e2c0:	ldr	w0, [sp, #92]
  40e2c4:	orr	w6, w1, w0
  40e2c8:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e2cc:	add	x1, x0, #0x273
  40e2d0:	adrp	x0, 43d000 <_fini+0xdb0>
  40e2d4:	add	x5, x0, #0x1f8
  40e2d8:	adrp	x0, 43d000 <_fini+0xdb0>
  40e2dc:	add	x4, x0, #0x6b8
  40e2e0:	mov	w3, #0x4c5                 	// #1221
  40e2e4:	mov	x2, x1
  40e2e8:	ldr	w1, [sp, #96]
  40e2ec:	mov	w0, w6
  40e2f0:	bl	407d60 <log_internal_realm@plt>
  40e2f4:	mov	w19, w0
  40e2f8:	b	40e4e8 <run+0x46c>
  40e2fc:	ldr	w0, [sp, #96]
  40e300:	cmp	w0, #0x0
  40e304:	cneg	w0, w0, lt  // lt = tstop
  40e308:	and	w0, w0, #0xff
  40e30c:	neg	w19, w0
  40e310:	b	40e4e8 <run+0x46c>
  40e314:	ldr	x0, [sp, #128]
  40e318:	bl	411084 <manager_parse_config_file>
  40e31c:	ldr	x0, [sp, #128]
  40e320:	bl	40d710 <manager_startup>
  40e324:	str	w0, [sp, #52]
  40e328:	ldr	w0, [sp, #52]
  40e32c:	cmp	w0, #0x0
  40e330:	b.ge	40e3c0 <run+0x344>  // b.tcont
  40e334:	mov	w0, #0x3                   	// #3
  40e338:	str	w0, [sp, #80]
  40e33c:	ldr	w0, [sp, #52]
  40e340:	str	w0, [sp, #84]
  40e344:	str	wzr, [sp, #88]
  40e348:	ldr	w0, [sp, #88]
  40e34c:	bl	4083e0 <log_get_max_level_realm@plt>
  40e350:	mov	w1, w0
  40e354:	ldr	w0, [sp, #80]
  40e358:	and	w0, w0, #0x7
  40e35c:	cmp	w1, w0
  40e360:	b.lt	40e3a8 <run+0x32c>  // b.tstop
  40e364:	ldr	w0, [sp, #88]
  40e368:	lsl	w1, w0, #10
  40e36c:	ldr	w0, [sp, #80]
  40e370:	orr	w6, w1, w0
  40e374:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e378:	add	x1, x0, #0x273
  40e37c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e380:	add	x5, x0, #0x220
  40e384:	adrp	x0, 43d000 <_fini+0xdb0>
  40e388:	add	x4, x0, #0x6b8
  40e38c:	mov	w3, #0x4cb                 	// #1227
  40e390:	mov	x2, x1
  40e394:	ldr	w1, [sp, #84]
  40e398:	mov	w0, w6
  40e39c:	bl	407d60 <log_internal_realm@plt>
  40e3a0:	mov	w19, w0
  40e3a4:	b	40e4e8 <run+0x46c>
  40e3a8:	ldr	w0, [sp, #84]
  40e3ac:	cmp	w0, #0x0
  40e3b0:	cneg	w0, w0, lt  // lt = tstop
  40e3b4:	and	w0, w0, #0xff
  40e3b8:	neg	w19, w0
  40e3bc:	b	40e4e8 <run+0x46c>
  40e3c0:	mov	w0, #0x7                   	// #7
  40e3c4:	str	w0, [sp, #56]
  40e3c8:	str	wzr, [sp, #60]
  40e3cc:	str	wzr, [sp, #64]
  40e3d0:	ldr	w0, [sp, #64]
  40e3d4:	bl	4083e0 <log_get_max_level_realm@plt>
  40e3d8:	mov	w1, w0
  40e3dc:	ldr	w0, [sp, #56]
  40e3e0:	and	w0, w0, #0x7
  40e3e4:	cmp	w1, w0
  40e3e8:	b.lt	40e434 <run+0x3b8>  // b.tstop
  40e3ec:	ldr	w0, [sp, #64]
  40e3f0:	lsl	w1, w0, #10
  40e3f4:	ldr	w0, [sp, #56]
  40e3f8:	orr	w19, w1, w0
  40e3fc:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e400:	add	x20, x0, #0x273
  40e404:	bl	4074b0 <getpid_cached@plt>
  40e408:	mov	w6, w0
  40e40c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e410:	add	x5, x0, #0x248
  40e414:	adrp	x0, 43d000 <_fini+0xdb0>
  40e418:	add	x4, x0, #0x6b8
  40e41c:	mov	w3, #0x4cd                 	// #1229
  40e420:	mov	x2, x20
  40e424:	ldr	w1, [sp, #60]
  40e428:	mov	w0, w19
  40e42c:	bl	407d60 <log_internal_realm@plt>
  40e430:	b	40e43c <run+0x3c0>
  40e434:	ldr	w0, [sp, #60]
  40e438:	cmp	w0, #0x0
  40e43c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e440:	add	x1, x0, #0x270
  40e444:	mov	w0, #0x0                   	// #0
  40e448:	bl	407cc0 <sd_notify@plt>
  40e44c:	ldr	x0, [sp, #128]
  40e450:	bl	40df80 <manager_run>
  40e454:	str	w0, [sp, #52]
  40e458:	mov	w0, #0x7                   	// #7
  40e45c:	str	w0, [sp, #68]
  40e460:	str	wzr, [sp, #72]
  40e464:	str	wzr, [sp, #76]
  40e468:	ldr	w0, [sp, #76]
  40e46c:	bl	4083e0 <log_get_max_level_realm@plt>
  40e470:	mov	w1, w0
  40e474:	ldr	w0, [sp, #68]
  40e478:	and	w0, w0, #0x7
  40e47c:	cmp	w1, w0
  40e480:	b.lt	40e4cc <run+0x450>  // b.tstop
  40e484:	ldr	w0, [sp, #76]
  40e488:	lsl	w1, w0, #10
  40e48c:	ldr	w0, [sp, #68]
  40e490:	orr	w19, w1, w0
  40e494:	adrp	x0, 43c000 <manager_write_brightness+0x3cc>
  40e498:	add	x20, x0, #0x273
  40e49c:	bl	4074b0 <getpid_cached@plt>
  40e4a0:	mov	w6, w0
  40e4a4:	adrp	x0, 43d000 <_fini+0xdb0>
  40e4a8:	add	x5, x0, #0x298
  40e4ac:	adrp	x0, 43d000 <_fini+0xdb0>
  40e4b0:	add	x4, x0, #0x6b8
  40e4b4:	mov	w3, #0x4d4                 	// #1236
  40e4b8:	mov	x2, x20
  40e4bc:	ldr	w1, [sp, #72]
  40e4c0:	mov	w0, w19
  40e4c4:	bl	407d60 <log_internal_realm@plt>
  40e4c8:	b	40e4d4 <run+0x458>
  40e4cc:	ldr	w0, [sp, #72]
  40e4d0:	cmp	w0, #0x0
  40e4d4:	adrp	x0, 43d000 <_fini+0xdb0>
  40e4d8:	add	x1, x0, #0x2c0
  40e4dc:	mov	w0, #0x0                   	// #0
  40e4e0:	bl	407cc0 <sd_notify@plt>
  40e4e4:	ldr	w19, [sp, #52]
  40e4e8:	add	x0, sp, #0x80
  40e4ec:	bl	408a00 <manager_unrefp>
  40e4f0:	mov	w1, w19
  40e4f4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40e4f8:	add	x0, x0, #0x508
  40e4fc:	ldr	x2, [sp, #136]
  40e500:	ldr	x0, [x0]
  40e504:	eor	x0, x2, x0
  40e508:	cmp	x0, #0x0
  40e50c:	b.eq	40e514 <run+0x498>  // b.none
  40e510:	bl	407b20 <__stack_chk_fail@plt>
  40e514:	mov	w0, w1
  40e518:	ldp	x19, x20, [sp, #16]
  40e51c:	ldp	x29, x30, [sp], #144
  40e520:	ret

000000000040e524 <main>:
  40e524:	stp	x29, x30, [sp, #-48]!
  40e528:	mov	x29, sp
  40e52c:	str	w0, [sp, #28]
  40e530:	str	x1, [sp, #16]
  40e534:	ldr	x1, [sp, #16]
  40e538:	ldr	w0, [sp, #28]
  40e53c:	bl	408770 <save_argc_argv>
  40e540:	ldr	x1, [sp, #16]
  40e544:	ldr	w0, [sp, #28]
  40e548:	bl	40e07c <run>
  40e54c:	str	w0, [sp, #44]
  40e550:	bl	407c10 <ask_password_agent_close@plt>
  40e554:	bl	407380 <polkit_agent_close@plt>
  40e558:	bl	407c20 <pager_close@plt>
  40e55c:	bl	408220 <mac_selinux_finish@plt>
  40e560:	bl	408950 <static_destruct>
  40e564:	ldr	w0, [sp, #44]
  40e568:	lsr	w0, w0, #31
  40e56c:	ldp	x29, x30, [sp], #48
  40e570:	ret

000000000040e574 <freep>:
  40e574:	stp	x29, x30, [sp, #-32]!
  40e578:	mov	x29, sp
  40e57c:	str	x0, [sp, #24]
  40e580:	ldr	x0, [sp, #24]
  40e584:	ldr	x0, [x0]
  40e588:	bl	408150 <free@plt>
  40e58c:	nop
  40e590:	ldp	x29, x30, [sp], #32
  40e594:	ret

000000000040e598 <strna>:
  40e598:	sub	sp, sp, #0x10
  40e59c:	str	x0, [sp, #8]
  40e5a0:	ldr	x0, [sp, #8]
  40e5a4:	cmp	x0, #0x0
  40e5a8:	b.ne	40e5b4 <strna+0x1c>  // b.any
  40e5ac:	adrp	x0, 43d000 <_fini+0xdb0>
  40e5b0:	add	x0, x0, #0x6c8
  40e5b4:	add	sp, sp, #0x10
  40e5b8:	ret

000000000040e5bc <manager_target_for_action>:
  40e5bc:	stp	x29, x30, [sp, #-32]!
  40e5c0:	mov	x29, sp
  40e5c4:	str	w0, [sp, #28]
  40e5c8:	ldr	w0, [sp, #28]
  40e5cc:	lsr	w0, w0, #31
  40e5d0:	and	w0, w0, #0xff
  40e5d4:	and	x0, x0, #0xff
  40e5d8:	cmp	x0, #0x0
  40e5dc:	b.eq	40e608 <manager_target_for_action+0x4c>  // b.none
  40e5e0:	adrp	x0, 43d000 <_fini+0xdb0>
  40e5e4:	add	x1, x0, #0x6d3
  40e5e8:	adrp	x0, 43d000 <_fini+0xdb0>
  40e5ec:	add	x4, x0, #0xb50
  40e5f0:	mov	w3, #0x20                  	// #32
  40e5f4:	mov	x2, x1
  40e5f8:	adrp	x0, 43d000 <_fini+0xdb0>
  40e5fc:	add	x1, x0, #0x6f0
  40e600:	mov	w0, #0x0                   	// #0
  40e604:	bl	407650 <log_assert_failed_realm@plt>
  40e608:	ldr	w0, [sp, #28]
  40e60c:	cmp	w0, #0x9
  40e610:	b.gt	40e628 <manager_target_for_action+0x6c>
  40e614:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40e618:	add	x0, x0, #0x390
  40e61c:	ldrsw	x1, [sp, #28]
  40e620:	ldr	x0, [x0, x1, lsl #3]
  40e624:	b	40e62c <manager_target_for_action+0x70>
  40e628:	mov	x0, #0x0                   	// #0
  40e62c:	ldp	x29, x30, [sp], #32
  40e630:	ret

000000000040e634 <manager_handle_action>:
  40e634:	sub	sp, sp, #0x160
  40e638:	stp	x29, x30, [sp, #32]
  40e63c:	add	x29, sp, #0x20
  40e640:	stp	x19, x20, [sp, #48]
  40e644:	stp	x21, x22, [sp, #64]
  40e648:	stp	x23, x24, [sp, #80]
  40e64c:	str	x25, [sp, #96]
  40e650:	str	x0, [sp, #136]
  40e654:	str	w1, [sp, #132]
  40e658:	str	w2, [sp, #128]
  40e65c:	strb	w3, [sp, #127]
  40e660:	strb	w4, [sp, #126]
  40e664:	adrp	x0, 460000 <wordlist.10364+0x370>
  40e668:	ldr	x0, [x0, #4024]
  40e66c:	ldr	x1, [x0]
  40e670:	str	x1, [sp, #344]
  40e674:	mov	x1, #0x0                   	// #0
  40e678:	str	xzr, [sp, #320]
  40e67c:	str	xzr, [sp, #328]
  40e680:	str	wzr, [sp, #336]
  40e684:	str	xzr, [sp, #288]
  40e688:	ldr	x0, [sp, #136]
  40e68c:	cmp	x0, #0x0
  40e690:	cset	w0, eq  // eq = none
  40e694:	and	w0, w0, #0xff
  40e698:	and	x0, x0, #0xff
  40e69c:	cmp	x0, #0x0
  40e6a0:	b.eq	40e6cc <manager_handle_action+0x98>  // b.none
  40e6a4:	adrp	x0, 43d000 <_fini+0xdb0>
  40e6a8:	add	x1, x0, #0x6d3
  40e6ac:	adrp	x0, 43d000 <_fini+0xdb0>
  40e6b0:	add	x4, x0, #0xb70
  40e6b4:	mov	w3, #0x3f                  	// #63
  40e6b8:	mov	x2, x1
  40e6bc:	adrp	x0, 43d000 <_fini+0xdb0>
  40e6c0:	add	x1, x0, #0x700
  40e6c4:	mov	w0, #0x0                   	// #0
  40e6c8:	bl	407650 <log_assert_failed_realm@plt>
  40e6cc:	ldr	w0, [sp, #128]
  40e6d0:	cmp	w0, #0x0
  40e6d4:	b.ne	40e754 <manager_handle_action+0x120>  // b.any
  40e6d8:	mov	w0, #0x7                   	// #7
  40e6dc:	str	w0, [sp, #276]
  40e6e0:	str	wzr, [sp, #280]
  40e6e4:	str	wzr, [sp, #284]
  40e6e8:	ldr	w0, [sp, #284]
  40e6ec:	bl	4083e0 <log_get_max_level_realm@plt>
  40e6f0:	mov	w1, w0
  40e6f4:	ldr	w0, [sp, #276]
  40e6f8:	and	w0, w0, #0x7
  40e6fc:	cmp	w1, w0
  40e700:	b.lt	40e744 <manager_handle_action+0x110>  // b.tstop
  40e704:	ldr	w0, [sp, #284]
  40e708:	lsl	w1, w0, #10
  40e70c:	ldr	w0, [sp, #276]
  40e710:	orr	w6, w1, w0
  40e714:	adrp	x0, 43d000 <_fini+0xdb0>
  40e718:	add	x1, x0, #0x6d3
  40e71c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e720:	add	x5, x0, #0x708
  40e724:	adrp	x0, 43d000 <_fini+0xdb0>
  40e728:	add	x4, x0, #0xb88
  40e72c:	mov	w3, #0x43                  	// #67
  40e730:	mov	x2, x1
  40e734:	ldr	w1, [sp, #280]
  40e738:	mov	w0, w6
  40e73c:	bl	407d60 <log_internal_realm@plt>
  40e740:	b	40e74c <manager_handle_action+0x118>
  40e744:	ldr	w0, [sp, #280]
  40e748:	cmp	w0, #0x0
  40e74c:	mov	w19, #0x0                   	// #0
  40e750:	b	40f000 <manager_handle_action+0x9cc>
  40e754:	ldr	w0, [sp, #132]
  40e758:	cmp	w0, #0x40
  40e75c:	b.ne	40e7ec <manager_handle_action+0x1b8>  // b.any
  40e760:	ldr	x0, [sp, #136]
  40e764:	ldr	x0, [x0, #448]
  40e768:	cmp	x0, #0x0
  40e76c:	b.eq	40e7ec <manager_handle_action+0x1b8>  // b.none
  40e770:	mov	w0, #0x7                   	// #7
  40e774:	str	w0, [sp, #160]
  40e778:	str	wzr, [sp, #164]
  40e77c:	str	wzr, [sp, #168]
  40e780:	ldr	w0, [sp, #168]
  40e784:	bl	4083e0 <log_get_max_level_realm@plt>
  40e788:	mov	w1, w0
  40e78c:	ldr	w0, [sp, #160]
  40e790:	and	w0, w0, #0x7
  40e794:	cmp	w1, w0
  40e798:	b.lt	40e7dc <manager_handle_action+0x1a8>  // b.tstop
  40e79c:	ldr	w0, [sp, #168]
  40e7a0:	lsl	w1, w0, #10
  40e7a4:	ldr	w0, [sp, #160]
  40e7a8:	orr	w6, w1, w0
  40e7ac:	adrp	x0, 43d000 <_fini+0xdb0>
  40e7b0:	add	x1, x0, #0x6d3
  40e7b4:	adrp	x0, 43d000 <_fini+0xdb0>
  40e7b8:	add	x5, x0, #0x738
  40e7bc:	adrp	x0, 43d000 <_fini+0xdb0>
  40e7c0:	add	x4, x0, #0xb88
  40e7c4:	mov	w3, #0x4d                  	// #77
  40e7c8:	mov	x2, x1
  40e7cc:	ldr	w1, [sp, #164]
  40e7d0:	mov	w0, w6
  40e7d4:	bl	407d60 <log_internal_realm@plt>
  40e7d8:	b	40e7e4 <manager_handle_action+0x1b0>
  40e7dc:	ldr	w0, [sp, #164]
  40e7e0:	cmp	w0, #0x0
  40e7e4:	mov	w19, #0x0                   	// #0
  40e7e8:	b	40f000 <manager_handle_action+0x9cc>
  40e7ec:	ldr	w0, [sp, #132]
  40e7f0:	cmp	w0, #0x0
  40e7f4:	b.le	40e8c0 <manager_handle_action+0x28c>
  40e7f8:	mov	x7, #0x0                   	// #0
  40e7fc:	mov	w6, #0x0                   	// #0
  40e800:	mov	w5, #0x0                   	// #0
  40e804:	mov	w4, #0x1                   	// #1
  40e808:	mov	x3, #0x0                   	// #0
  40e80c:	mov	w2, #0x0                   	// #0
  40e810:	ldr	w1, [sp, #132]
  40e814:	ldr	x0, [sp, #136]
  40e818:	bl	424730 <manager_is_inhibited>
  40e81c:	and	w0, w0, #0xff
  40e820:	cmp	w0, #0x0
  40e824:	b.eq	40e8c0 <manager_handle_action+0x28c>  // b.none
  40e828:	mov	w0, #0x7                   	// #7
  40e82c:	str	w0, [sp, #172]
  40e830:	str	wzr, [sp, #176]
  40e834:	str	wzr, [sp, #180]
  40e838:	ldr	w0, [sp, #180]
  40e83c:	bl	4083e0 <log_get_max_level_realm@plt>
  40e840:	mov	w1, w0
  40e844:	ldr	w0, [sp, #172]
  40e848:	and	w0, w0, #0x7
  40e84c:	cmp	w1, w0
  40e850:	b.lt	40e8b0 <manager_handle_action+0x27c>  // b.tstop
  40e854:	ldr	w0, [sp, #180]
  40e858:	lsl	w1, w0, #10
  40e85c:	ldr	w0, [sp, #172]
  40e860:	orr	w19, w1, w0
  40e864:	adrp	x0, 43d000 <_fini+0xdb0>
  40e868:	add	x20, x0, #0x6d3
  40e86c:	ldr	w0, [sp, #128]
  40e870:	bl	40f04c <handle_action_to_string>
  40e874:	mov	x21, x0
  40e878:	ldr	w0, [sp, #132]
  40e87c:	bl	42498c <inhibit_what_to_string>
  40e880:	mov	x7, x0
  40e884:	mov	x6, x21
  40e888:	adrp	x0, 43d000 <_fini+0xdb0>
  40e88c:	add	x5, x0, #0x780
  40e890:	adrp	x0, 43d000 <_fini+0xdb0>
  40e894:	add	x4, x0, #0xb88
  40e898:	mov	w3, #0x55                  	// #85
  40e89c:	mov	x2, x20
  40e8a0:	ldr	w1, [sp, #176]
  40e8a4:	mov	w0, w19
  40e8a8:	bl	407d60 <log_internal_realm@plt>
  40e8ac:	b	40e8b8 <manager_handle_action+0x284>
  40e8b0:	ldr	w0, [sp, #176]
  40e8b4:	cmp	w0, #0x0
  40e8b8:	mov	w19, #0x0                   	// #0
  40e8bc:	b	40f000 <manager_handle_action+0x9cc>
  40e8c0:	ldr	w0, [sp, #128]
  40e8c4:	cmp	w0, #0x9
  40e8c8:	b.ne	40e970 <manager_handle_action+0x33c>  // b.any
  40e8cc:	ldrb	w0, [sp, #126]
  40e8d0:	eor	w0, w0, #0x1
  40e8d4:	and	w0, w0, #0xff
  40e8d8:	cmp	w0, #0x0
  40e8dc:	b.eq	40e8e8 <manager_handle_action+0x2b4>  // b.none
  40e8e0:	mov	w19, #0x0                   	// #0
  40e8e4:	b	40f000 <manager_handle_action+0x9cc>
  40e8e8:	mov	w0, #0x6                   	// #6
  40e8ec:	str	w0, [sp, #264]
  40e8f0:	str	wzr, [sp, #268]
  40e8f4:	str	wzr, [sp, #272]
  40e8f8:	ldr	w0, [sp, #272]
  40e8fc:	bl	4083e0 <log_get_max_level_realm@plt>
  40e900:	mov	w1, w0
  40e904:	ldr	w0, [sp, #264]
  40e908:	and	w0, w0, #0x7
  40e90c:	cmp	w1, w0
  40e910:	b.lt	40e954 <manager_handle_action+0x320>  // b.tstop
  40e914:	ldr	w0, [sp, #272]
  40e918:	lsl	w1, w0, #10
  40e91c:	ldr	w0, [sp, #264]
  40e920:	orr	w6, w1, w0
  40e924:	adrp	x0, 43d000 <_fini+0xdb0>
  40e928:	add	x1, x0, #0x6d3
  40e92c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e930:	add	x5, x0, #0x7a8
  40e934:	adrp	x0, 43d000 <_fini+0xdb0>
  40e938:	add	x4, x0, #0xb88
  40e93c:	mov	w3, #0x61                  	// #97
  40e940:	mov	x2, x1
  40e944:	ldr	w1, [sp, #268]
  40e948:	mov	w0, w6
  40e94c:	bl	407d60 <log_internal_realm@plt>
  40e950:	b	40e95c <manager_handle_action+0x328>
  40e954:	ldr	w0, [sp, #268]
  40e958:	cmp	w0, #0x0
  40e95c:	mov	w1, #0x1                   	// #1
  40e960:	ldr	x0, [sp, #136]
  40e964:	bl	42cd74 <session_send_lock_all>
  40e968:	mov	w19, #0x1                   	// #1
  40e96c:	b	40f000 <manager_handle_action+0x9cc>
  40e970:	ldr	w0, [sp, #128]
  40e974:	cmp	w0, #0x5
  40e978:	b.ne	40e998 <manager_handle_action+0x364>  // b.any
  40e97c:	adrp	x0, 43d000 <_fini+0xdb0>
  40e980:	add	x0, x0, #0x7c0
  40e984:	bl	407d40 <can_sleep@plt>
  40e988:	cmp	w0, #0x0
  40e98c:	cset	w0, gt
  40e990:	strb	w0, [sp, #157]
  40e994:	b	40ea44 <manager_handle_action+0x410>
  40e998:	ldr	w0, [sp, #128]
  40e99c:	cmp	w0, #0x6
  40e9a0:	b.ne	40e9c0 <manager_handle_action+0x38c>  // b.any
  40e9a4:	adrp	x0, 43d000 <_fini+0xdb0>
  40e9a8:	add	x0, x0, #0x7c8
  40e9ac:	bl	407d40 <can_sleep@plt>
  40e9b0:	cmp	w0, #0x0
  40e9b4:	cset	w0, gt
  40e9b8:	strb	w0, [sp, #157]
  40e9bc:	b	40ea44 <manager_handle_action+0x410>
  40e9c0:	ldr	w0, [sp, #128]
  40e9c4:	cmp	w0, #0x7
  40e9c8:	b.ne	40e9e8 <manager_handle_action+0x3b4>  // b.any
  40e9cc:	adrp	x0, 43d000 <_fini+0xdb0>
  40e9d0:	add	x0, x0, #0x7d8
  40e9d4:	bl	407d40 <can_sleep@plt>
  40e9d8:	cmp	w0, #0x0
  40e9dc:	cset	w0, gt
  40e9e0:	strb	w0, [sp, #157]
  40e9e4:	b	40ea44 <manager_handle_action+0x410>
  40e9e8:	ldr	w0, [sp, #128]
  40e9ec:	cmp	w0, #0x8
  40e9f0:	b.ne	40ea10 <manager_handle_action+0x3dc>  // b.any
  40e9f4:	adrp	x0, 43d000 <_fini+0xdb0>
  40e9f8:	add	x0, x0, #0x7e8
  40e9fc:	bl	407d40 <can_sleep@plt>
  40ea00:	cmp	w0, #0x0
  40ea04:	cset	w0, gt
  40ea08:	strb	w0, [sp, #157]
  40ea0c:	b	40ea44 <manager_handle_action+0x410>
  40ea10:	ldr	w0, [sp, #128]
  40ea14:	cmp	w0, #0x4
  40ea18:	b.ne	40ea3c <manager_handle_action+0x408>  // b.any
  40ea1c:	mov	w1, #0x1                   	// #1
  40ea20:	adrp	x0, 43d000 <_fini+0xdb0>
  40ea24:	add	x0, x0, #0x800
  40ea28:	bl	4077a0 <access@plt>
  40ea2c:	mvn	w0, w0
  40ea30:	lsr	w0, w0, #31
  40ea34:	strb	w0, [sp, #157]
  40ea38:	b	40ea44 <manager_handle_action+0x410>
  40ea3c:	mov	w0, #0x1                   	// #1
  40ea40:	strb	w0, [sp, #157]
  40ea44:	ldrb	w0, [sp, #157]
  40ea48:	eor	w0, w0, #0x1
  40ea4c:	and	w0, w0, #0xff
  40ea50:	cmp	w0, #0x0
  40ea54:	b.eq	40eb30 <manager_handle_action+0x4fc>  // b.none
  40ea58:	strb	wzr, [sp, #158]
  40ea5c:	ldr	w0, [sp, #128]
  40ea60:	sub	w0, w0, #0x6
  40ea64:	cmp	w0, #0x2
  40ea68:	b.hi	40ea74 <manager_handle_action+0x440>  // b.pmore
  40ea6c:	mov	w0, #0x1                   	// #1
  40ea70:	strb	w0, [sp, #158]
  40ea74:	nop
  40ea78:	ldrb	w0, [sp, #158]
  40ea7c:	cmp	w0, #0x0
  40ea80:	b.eq	40eb30 <manager_handle_action+0x4fc>  // b.none
  40ea84:	adrp	x0, 43d000 <_fini+0xdb0>
  40ea88:	add	x0, x0, #0x7c0
  40ea8c:	bl	407d40 <can_sleep@plt>
  40ea90:	cmp	w0, #0x0
  40ea94:	cset	w0, gt
  40ea98:	strb	w0, [sp, #157]
  40ea9c:	ldrb	w0, [sp, #157]
  40eaa0:	cmp	w0, #0x0
  40eaa4:	b.eq	40eb30 <manager_handle_action+0x4fc>  // b.none
  40eaa8:	mov	w0, #0x5                   	// #5
  40eaac:	str	w0, [sp, #184]
  40eab0:	str	wzr, [sp, #188]
  40eab4:	str	wzr, [sp, #192]
  40eab8:	ldr	w0, [sp, #192]
  40eabc:	bl	4083e0 <log_get_max_level_realm@plt>
  40eac0:	mov	w1, w0
  40eac4:	ldr	w0, [sp, #184]
  40eac8:	and	w0, w0, #0x7
  40eacc:	cmp	w1, w0
  40ead0:	b.lt	40eb20 <manager_handle_action+0x4ec>  // b.tstop
  40ead4:	ldr	w0, [sp, #192]
  40ead8:	lsl	w1, w0, #10
  40eadc:	ldr	w0, [sp, #184]
  40eae0:	orr	w19, w1, w0
  40eae4:	adrp	x0, 43d000 <_fini+0xdb0>
  40eae8:	add	x20, x0, #0x6d3
  40eaec:	ldr	w0, [sp, #128]
  40eaf0:	bl	40f04c <handle_action_to_string>
  40eaf4:	mov	x6, x0
  40eaf8:	adrp	x0, 43d000 <_fini+0xdb0>
  40eafc:	add	x5, x0, #0x810
  40eb00:	adrp	x0, 43d000 <_fini+0xdb0>
  40eb04:	add	x4, x0, #0xb88
  40eb08:	mov	w3, #0x76                  	// #118
  40eb0c:	mov	x2, x20
  40eb10:	ldr	w1, [sp, #188]
  40eb14:	mov	w0, w19
  40eb18:	bl	407d60 <log_internal_realm@plt>
  40eb1c:	b	40eb28 <manager_handle_action+0x4f4>
  40eb20:	ldr	w0, [sp, #188]
  40eb24:	cmp	w0, #0x0
  40eb28:	mov	w0, #0x5                   	// #5
  40eb2c:	str	w0, [sp, #128]
  40eb30:	ldrb	w0, [sp, #157]
  40eb34:	eor	w0, w0, #0x1
  40eb38:	and	w0, w0, #0xff
  40eb3c:	cmp	w0, #0x0
  40eb40:	b.eq	40ebe0 <manager_handle_action+0x5ac>  // b.none
  40eb44:	mov	w0, #0x4                   	// #4
  40eb48:	str	w0, [sp, #252]
  40eb4c:	mov	w0, #0x5f                  	// #95
  40eb50:	movk	w0, #0x4000, lsl #16
  40eb54:	str	w0, [sp, #256]
  40eb58:	str	wzr, [sp, #260]
  40eb5c:	ldr	w0, [sp, #260]
  40eb60:	bl	4083e0 <log_get_max_level_realm@plt>
  40eb64:	mov	w1, w0
  40eb68:	ldr	w0, [sp, #252]
  40eb6c:	and	w0, w0, #0x7
  40eb70:	cmp	w1, w0
  40eb74:	b.lt	40ebc8 <manager_handle_action+0x594>  // b.tstop
  40eb78:	ldr	w0, [sp, #260]
  40eb7c:	lsl	w1, w0, #10
  40eb80:	ldr	w0, [sp, #252]
  40eb84:	orr	w19, w1, w0
  40eb88:	adrp	x0, 43d000 <_fini+0xdb0>
  40eb8c:	add	x20, x0, #0x6d3
  40eb90:	ldr	w0, [sp, #128]
  40eb94:	bl	40f04c <handle_action_to_string>
  40eb98:	mov	x6, x0
  40eb9c:	adrp	x0, 43d000 <_fini+0xdb0>
  40eba0:	add	x5, x0, #0x858
  40eba4:	adrp	x0, 43d000 <_fini+0xdb0>
  40eba8:	add	x4, x0, #0xb88
  40ebac:	mov	w3, #0x7d                  	// #125
  40ebb0:	mov	x2, x20
  40ebb4:	ldr	w1, [sp, #256]
  40ebb8:	mov	w0, w19
  40ebbc:	bl	407d60 <log_internal_realm@plt>
  40ebc0:	mov	w19, w0
  40ebc4:	b	40f000 <manager_handle_action+0x9cc>
  40ebc8:	ldr	w0, [sp, #256]
  40ebcc:	cmp	w0, #0x0
  40ebd0:	cneg	w0, w0, lt  // lt = tstop
  40ebd4:	and	w0, w0, #0xff
  40ebd8:	neg	w19, w0
  40ebdc:	b	40f000 <manager_handle_action+0x9cc>
  40ebe0:	ldr	x0, [sp, #136]
  40ebe4:	ldr	w0, [x0, #248]
  40ebe8:	cmp	w0, #0x0
  40ebec:	b.le	40eca0 <manager_handle_action+0x66c>
  40ebf0:	mov	w0, #0x7                   	// #7
  40ebf4:	str	w0, [sp, #240]
  40ebf8:	mov	w0, #0x72                  	// #114
  40ebfc:	movk	w0, #0x4000, lsl #16
  40ec00:	str	w0, [sp, #244]
  40ec04:	str	wzr, [sp, #248]
  40ec08:	ldr	w0, [sp, #248]
  40ec0c:	bl	4083e0 <log_get_max_level_realm@plt>
  40ec10:	mov	w1, w0
  40ec14:	ldr	w0, [sp, #240]
  40ec18:	and	w0, w0, #0x7
  40ec1c:	cmp	w1, w0
  40ec20:	b.lt	40ec88 <manager_handle_action+0x654>  // b.tstop
  40ec24:	ldr	w0, [sp, #248]
  40ec28:	lsl	w1, w0, #10
  40ec2c:	ldr	w0, [sp, #240]
  40ec30:	orr	w19, w1, w0
  40ec34:	adrp	x0, 43d000 <_fini+0xdb0>
  40ec38:	add	x20, x0, #0x6d3
  40ec3c:	ldr	x0, [sp, #136]
  40ec40:	ldr	w0, [x0, #248]
  40ec44:	bl	42498c <inhibit_what_to_string>
  40ec48:	mov	x21, x0
  40ec4c:	ldr	w0, [sp, #128]
  40ec50:	bl	40f04c <handle_action_to_string>
  40ec54:	mov	x7, x0
  40ec58:	mov	x6, x21
  40ec5c:	adrp	x0, 43d000 <_fini+0xdb0>
  40ec60:	add	x5, x0, #0x888
  40ec64:	adrp	x0, 43d000 <_fini+0xdb0>
  40ec68:	add	x4, x0, #0xb88
  40ec6c:	mov	w3, #0x81                  	// #129
  40ec70:	mov	x2, x20
  40ec74:	ldr	w1, [sp, #244]
  40ec78:	mov	w0, w19
  40ec7c:	bl	407d60 <log_internal_realm@plt>
  40ec80:	mov	w19, w0
  40ec84:	b	40f000 <manager_handle_action+0x9cc>
  40ec88:	ldr	w0, [sp, #244]
  40ec8c:	cmp	w0, #0x0
  40ec90:	cneg	w0, w0, lt  // lt = tstop
  40ec94:	and	w0, w0, #0xff
  40ec98:	neg	w19, w0
  40ec9c:	b	40f000 <manager_handle_action+0x9cc>
  40eca0:	ldr	w0, [sp, #128]
  40eca4:	bl	40e5bc <manager_target_for_action>
  40eca8:	str	x0, [sp, #312]
  40ecac:	ldr	x0, [sp, #312]
  40ecb0:	cmp	x0, #0x0
  40ecb4:	cset	w0, eq  // eq = none
  40ecb8:	and	w0, w0, #0xff
  40ecbc:	and	x0, x0, #0xff
  40ecc0:	cmp	x0, #0x0
  40ecc4:	b.eq	40ecf0 <manager_handle_action+0x6bc>  // b.none
  40ecc8:	adrp	x0, 43d000 <_fini+0xdb0>
  40eccc:	add	x1, x0, #0x6d3
  40ecd0:	adrp	x0, 43d000 <_fini+0xdb0>
  40ecd4:	add	x4, x0, #0xb70
  40ecd8:	mov	w3, #0x86                  	// #134
  40ecdc:	mov	x2, x1
  40ece0:	adrp	x0, 43d000 <_fini+0xdb0>
  40ece4:	add	x1, x0, #0x8d0
  40ece8:	mov	w0, #0x0                   	// #0
  40ecec:	bl	407650 <log_assert_failed_realm@plt>
  40ecf0:	strb	wzr, [sp, #159]
  40ecf4:	ldr	w0, [sp, #128]
  40ecf8:	sub	w0, w0, #0x5
  40ecfc:	cmp	w0, #0x3
  40ed00:	b.hi	40ed0c <manager_handle_action+0x6d8>  // b.pmore
  40ed04:	mov	w0, #0x1                   	// #1
  40ed08:	strb	w0, [sp, #159]
  40ed0c:	nop
  40ed10:	ldrb	w0, [sp, #159]
  40ed14:	cmp	w0, #0x0
  40ed18:	b.eq	40ed24 <manager_handle_action+0x6f0>  // b.none
  40ed1c:	mov	w0, #0x2                   	// #2
  40ed20:	b	40ed28 <manager_handle_action+0x6f4>
  40ed24:	mov	w0, #0x1                   	// #1
  40ed28:	str	w0, [sp, #196]
  40ed2c:	ldrb	w0, [sp, #127]
  40ed30:	eor	w0, w0, #0x1
  40ed34:	and	w0, w0, #0xff
  40ed38:	cmp	w0, #0x0
  40ed3c:	b.eq	40eea4 <manager_handle_action+0x870>  // b.none
  40ed40:	add	x0, sp, #0x120
  40ed44:	mov	x7, x0
  40ed48:	mov	w6, #0x0                   	// #0
  40ed4c:	mov	w5, #0x0                   	// #0
  40ed50:	mov	w4, #0x0                   	// #0
  40ed54:	mov	x3, #0x0                   	// #0
  40ed58:	mov	w2, #0x0                   	// #0
  40ed5c:	ldr	w1, [sp, #196]
  40ed60:	ldr	x0, [sp, #136]
  40ed64:	bl	424730 <manager_is_inhibited>
  40ed68:	and	w0, w0, #0xff
  40ed6c:	cmp	w0, #0x0
  40ed70:	b.eq	40eea4 <manager_handle_action+0x870>  // b.none
  40ed74:	str	xzr, [sp, #296]
  40ed78:	str	xzr, [sp, #304]
  40ed7c:	ldr	x0, [sp, #288]
  40ed80:	ldr	w0, [x0, #60]
  40ed84:	add	x1, sp, #0x128
  40ed88:	bl	4078f0 <get_process_comm@plt>
  40ed8c:	ldr	x0, [sp, #288]
  40ed90:	ldr	w0, [x0, #64]
  40ed94:	bl	4080b0 <uid_to_name@plt>
  40ed98:	str	x0, [sp, #304]
  40ed9c:	ldrb	w0, [sp, #126]
  40eda0:	cmp	w0, #0x0
  40eda4:	b.eq	40edb0 <manager_handle_action+0x77c>  // b.none
  40eda8:	mov	w0, #0x3                   	// #3
  40edac:	b	40edb4 <manager_handle_action+0x780>
  40edb0:	mov	w0, #0x7                   	// #7
  40edb4:	str	w0, [sp, #200]
  40edb8:	str	wzr, [sp, #204]
  40edbc:	str	wzr, [sp, #208]
  40edc0:	ldr	w0, [sp, #208]
  40edc4:	bl	4083e0 <log_get_max_level_realm@plt>
  40edc8:	mov	w1, w0
  40edcc:	ldr	w0, [sp, #200]
  40edd0:	and	w0, w0, #0x7
  40edd4:	cmp	w1, w0
  40edd8:	b.lt	40ee70 <manager_handle_action+0x83c>  // b.tstop
  40eddc:	ldr	w0, [sp, #208]
  40ede0:	lsl	w1, w0, #10
  40ede4:	ldr	w0, [sp, #200]
  40ede8:	orr	w21, w1, w0
  40edec:	adrp	x0, 43d000 <_fini+0xdb0>
  40edf0:	add	x22, x0, #0x6d3
  40edf4:	ldr	w0, [sp, #128]
  40edf8:	bl	40f04c <handle_action_to_string>
  40edfc:	mov	x24, x0
  40ee00:	ldr	w0, [sp, #196]
  40ee04:	bl	42498c <inhibit_what_to_string>
  40ee08:	mov	x25, x0
  40ee0c:	ldr	x0, [sp, #288]
  40ee10:	ldr	w19, [x0, #64]
  40ee14:	ldr	x0, [sp, #304]
  40ee18:	bl	40e598 <strna>
  40ee1c:	mov	x23, x0
  40ee20:	ldr	x0, [sp, #288]
  40ee24:	ldr	w20, [x0, #60]
  40ee28:	ldr	x0, [sp, #296]
  40ee2c:	bl	40e598 <strna>
  40ee30:	str	x0, [sp, #24]
  40ee34:	str	w20, [sp, #16]
  40ee38:	str	x23, [sp, #8]
  40ee3c:	str	w19, [sp]
  40ee40:	mov	x7, x25
  40ee44:	mov	x6, x24
  40ee48:	adrp	x0, 43d000 <_fini+0xdb0>
  40ee4c:	add	x5, x0, #0x900
  40ee50:	adrp	x0, 43d000 <_fini+0xdb0>
  40ee54:	add	x4, x0, #0xb88
  40ee58:	mov	w3, #0x95                  	// #149
  40ee5c:	mov	x2, x22
  40ee60:	ldr	w1, [sp, #204]
  40ee64:	mov	w0, w21
  40ee68:	bl	407d60 <log_internal_realm@plt>
  40ee6c:	b	40ee78 <manager_handle_action+0x844>
  40ee70:	ldr	w0, [sp, #204]
  40ee74:	cmp	w0, #0x0
  40ee78:	ldrb	w0, [sp, #126]
  40ee7c:	cmp	w0, #0x0
  40ee80:	b.eq	40ee8c <manager_handle_action+0x858>  // b.none
  40ee84:	mov	w19, #0xffffffff            	// #-1
  40ee88:	b	40ee90 <manager_handle_action+0x85c>
  40ee8c:	mov	w19, #0x0                   	// #0
  40ee90:	add	x0, sp, #0x130
  40ee94:	bl	40e574 <freep>
  40ee98:	add	x0, sp, #0x128
  40ee9c:	bl	40e574 <freep>
  40eea0:	b	40f000 <manager_handle_action+0x9cc>
  40eea4:	mov	w0, #0x6                   	// #6
  40eea8:	str	w0, [sp, #212]
  40eeac:	str	wzr, [sp, #216]
  40eeb0:	str	wzr, [sp, #220]
  40eeb4:	ldr	w0, [sp, #220]
  40eeb8:	bl	4083e0 <log_get_max_level_realm@plt>
  40eebc:	mov	w1, w0
  40eec0:	ldr	w0, [sp, #212]
  40eec4:	and	w0, w0, #0x7
  40eec8:	cmp	w1, w0
  40eecc:	b.lt	40ef20 <manager_handle_action+0x8ec>  // b.tstop
  40eed0:	ldr	w0, [sp, #220]
  40eed4:	lsl	w1, w0, #10
  40eed8:	ldr	w0, [sp, #212]
  40eedc:	orr	w7, w1, w0
  40eee0:	adrp	x0, 43d000 <_fini+0xdb0>
  40eee4:	add	x2, x0, #0x6d3
  40eee8:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40eeec:	add	x0, x0, #0x3e0
  40eef0:	ldrsw	x1, [sp, #128]
  40eef4:	ldr	x0, [x0, x1, lsl #3]
  40eef8:	mov	x6, x0
  40eefc:	adrp	x0, 43d000 <_fini+0xdb0>
  40ef00:	add	x5, x0, #0x940
  40ef04:	adrp	x0, 43d000 <_fini+0xdb0>
  40ef08:	add	x4, x0, #0xb88
  40ef0c:	mov	w3, #0x9f                  	// #159
  40ef10:	ldr	w1, [sp, #216]
  40ef14:	mov	w0, w7
  40ef18:	bl	407d60 <log_internal_realm@plt>
  40ef1c:	b	40ef28 <manager_handle_action+0x8f4>
  40ef20:	ldr	w0, [sp, #216]
  40ef24:	cmp	w0, #0x0
  40ef28:	add	x0, sp, #0x140
  40ef2c:	mov	x3, x0
  40ef30:	ldr	w2, [sp, #196]
  40ef34:	ldr	x1, [sp, #312]
  40ef38:	ldr	x0, [sp, #136]
  40ef3c:	bl	41ab90 <bus_manager_shutdown_or_sleep_now_or_later>
  40ef40:	str	w0, [sp, #224]
  40ef44:	ldr	w0, [sp, #224]
  40ef48:	cmp	w0, #0x0
  40ef4c:	b.ge	40effc <manager_handle_action+0x9c8>  // b.tcont
  40ef50:	mov	w0, #0x3                   	// #3
  40ef54:	str	w0, [sp, #228]
  40ef58:	ldr	w0, [sp, #224]
  40ef5c:	str	w0, [sp, #232]
  40ef60:	str	wzr, [sp, #236]
  40ef64:	ldr	w0, [sp, #236]
  40ef68:	bl	4083e0 <log_get_max_level_realm@plt>
  40ef6c:	mov	w1, w0
  40ef70:	ldr	w0, [sp, #228]
  40ef74:	and	w0, w0, #0x7
  40ef78:	cmp	w1, w0
  40ef7c:	b.lt	40efe4 <manager_handle_action+0x9b0>  // b.tstop
  40ef80:	ldr	w0, [sp, #236]
  40ef84:	lsl	w1, w0, #10
  40ef88:	ldr	w0, [sp, #228]
  40ef8c:	orr	w19, w1, w0
  40ef90:	adrp	x0, 43d000 <_fini+0xdb0>
  40ef94:	add	x20, x0, #0x6d3
  40ef98:	ldr	w0, [sp, #128]
  40ef9c:	bl	40f04c <handle_action_to_string>
  40efa0:	mov	x21, x0
  40efa4:	add	x0, sp, #0x140
  40efa8:	ldr	w1, [sp, #224]
  40efac:	bl	407000 <bus_error_message@plt>
  40efb0:	mov	x7, x0
  40efb4:	mov	x6, x21
  40efb8:	adrp	x0, 43d000 <_fini+0xdb0>
  40efbc:	add	x5, x0, #0x948
  40efc0:	adrp	x0, 43d000 <_fini+0xdb0>
  40efc4:	add	x4, x0, #0xb88
  40efc8:	mov	w3, #0xa3                  	// #163
  40efcc:	mov	x2, x20
  40efd0:	ldr	w1, [sp, #232]
  40efd4:	mov	w0, w19
  40efd8:	bl	407d60 <log_internal_realm@plt>
  40efdc:	mov	w19, w0
  40efe0:	b	40f000 <manager_handle_action+0x9cc>
  40efe4:	ldr	w0, [sp, #232]
  40efe8:	cmp	w0, #0x0
  40efec:	cneg	w0, w0, lt  // lt = tstop
  40eff0:	and	w0, w0, #0xff
  40eff4:	neg	w19, w0
  40eff8:	b	40f000 <manager_handle_action+0x9cc>
  40effc:	mov	w19, #0x1                   	// #1
  40f000:	add	x0, sp, #0x140
  40f004:	bl	407c80 <sd_bus_error_free@plt>
  40f008:	mov	w1, w19
  40f00c:	adrp	x0, 460000 <wordlist.10364+0x370>
  40f010:	ldr	x0, [x0, #4024]
  40f014:	ldr	x2, [sp, #344]
  40f018:	ldr	x0, [x0]
  40f01c:	eor	x0, x2, x0
  40f020:	cmp	x0, #0x0
  40f024:	b.eq	40f02c <manager_handle_action+0x9f8>  // b.none
  40f028:	bl	407b20 <__stack_chk_fail@plt>
  40f02c:	mov	w0, w1
  40f030:	ldp	x19, x20, [sp, #48]
  40f034:	ldp	x21, x22, [sp, #64]
  40f038:	ldp	x23, x24, [sp, #80]
  40f03c:	ldr	x25, [sp, #96]
  40f040:	ldp	x29, x30, [sp, #32]
  40f044:	add	sp, sp, #0x160
  40f048:	ret

000000000040f04c <handle_action_to_string>:
  40f04c:	sub	sp, sp, #0x10
  40f050:	str	w0, [sp, #12]
  40f054:	ldr	w0, [sp, #12]
  40f058:	cmp	w0, #0x0
  40f05c:	b.lt	40f06c <handle_action_to_string+0x20>  // b.tstop
  40f060:	ldr	w0, [sp, #12]
  40f064:	cmp	w0, #0x9
  40f068:	b.le	40f074 <handle_action_to_string+0x28>
  40f06c:	mov	x0, #0x0                   	// #0
  40f070:	b	40f084 <handle_action_to_string+0x38>
  40f074:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40f078:	add	x0, x0, #0x340
  40f07c:	ldrsw	x1, [sp, #12]
  40f080:	ldr	x0, [x0, x1, lsl #3]
  40f084:	add	sp, sp, #0x10
  40f088:	ret

000000000040f08c <handle_action_from_string>:
  40f08c:	stp	x29, x30, [sp, #-32]!
  40f090:	mov	x29, sp
  40f094:	str	x0, [sp, #24]
  40f098:	ldr	x2, [sp, #24]
  40f09c:	mov	x1, #0xa                   	// #10
  40f0a0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  40f0a4:	add	x0, x0, #0x340
  40f0a8:	bl	407ef0 <string_table_lookup@plt>
  40f0ac:	ldp	x29, x30, [sp], #32
  40f0b0:	ret

000000000040f0b4 <config_parse_handle_action>:
  40f0b4:	sub	sp, sp, #0x80
  40f0b8:	stp	x29, x30, [sp, #16]
  40f0bc:	add	x29, sp, #0x10
  40f0c0:	str	x0, [sp, #88]
  40f0c4:	str	x1, [sp, #80]
  40f0c8:	str	w2, [sp, #76]
  40f0cc:	str	x3, [sp, #64]
  40f0d0:	str	w4, [sp, #72]
  40f0d4:	str	x5, [sp, #56]
  40f0d8:	str	w6, [sp, #52]
  40f0dc:	str	x7, [sp, #40]
  40f0e0:	ldr	x0, [sp, #128]
  40f0e4:	str	x0, [sp, #120]
  40f0e8:	ldr	x0, [sp, #80]
  40f0ec:	cmp	x0, #0x0
  40f0f0:	cset	w0, eq  // eq = none
  40f0f4:	and	w0, w0, #0xff
  40f0f8:	and	x0, x0, #0xff
  40f0fc:	cmp	x0, #0x0
  40f100:	b.eq	40f12c <config_parse_handle_action+0x78>  // b.none
  40f104:	adrp	x0, 43d000 <_fini+0xdb0>
  40f108:	add	x1, x0, #0x6d3
  40f10c:	adrp	x0, 43d000 <_fini+0xdb0>
  40f110:	add	x4, x0, #0xba0
  40f114:	mov	w3, #0xb8                  	// #184
  40f118:	mov	x2, x1
  40f11c:	adrp	x0, 43d000 <_fini+0xdb0>
  40f120:	add	x1, x0, #0x9a8
  40f124:	mov	w0, #0x0                   	// #0
  40f128:	bl	407650 <log_assert_failed_realm@plt>
  40f12c:	ldr	x0, [sp, #56]
  40f130:	cmp	x0, #0x0
  40f134:	cset	w0, eq  // eq = none
  40f138:	and	w0, w0, #0xff
  40f13c:	and	x0, x0, #0xff
  40f140:	cmp	x0, #0x0
  40f144:	b.eq	40f170 <config_parse_handle_action+0xbc>  // b.none
  40f148:	adrp	x0, 43d000 <_fini+0xdb0>
  40f14c:	add	x1, x0, #0x6d3
  40f150:	adrp	x0, 43d000 <_fini+0xdb0>
  40f154:	add	x4, x0, #0xba0
  40f158:	mov	w3, #0xb8                  	// #184
  40f15c:	mov	x2, x1
  40f160:	adrp	x0, 43d000 <_fini+0xdb0>
  40f164:	add	x1, x0, #0x9b8
  40f168:	mov	w0, #0x0                   	// #0
  40f16c:	bl	407650 <log_assert_failed_realm@plt>
  40f170:	ldr	x0, [sp, #40]
  40f174:	cmp	x0, #0x0
  40f178:	cset	w0, eq  // eq = none
  40f17c:	and	w0, w0, #0xff
  40f180:	and	x0, x0, #0xff
  40f184:	cmp	x0, #0x0
  40f188:	b.eq	40f1b4 <config_parse_handle_action+0x100>  // b.none
  40f18c:	adrp	x0, 43d000 <_fini+0xdb0>
  40f190:	add	x1, x0, #0x6d3
  40f194:	adrp	x0, 43d000 <_fini+0xdb0>
  40f198:	add	x4, x0, #0xba0
  40f19c:	mov	w3, #0xb8                  	// #184
  40f1a0:	mov	x2, x1
  40f1a4:	adrp	x0, 43d000 <_fini+0xdb0>
  40f1a8:	add	x1, x0, #0x9c0
  40f1ac:	mov	w0, #0x0                   	// #0
  40f1b0:	bl	407650 <log_assert_failed_realm@plt>
  40f1b4:	ldr	x0, [sp, #128]
  40f1b8:	cmp	x0, #0x0
  40f1bc:	cset	w0, eq  // eq = none
  40f1c0:	and	w0, w0, #0xff
  40f1c4:	and	x0, x0, #0xff
  40f1c8:	cmp	x0, #0x0
  40f1cc:	b.eq	40f1f8 <config_parse_handle_action+0x144>  // b.none
  40f1d0:	adrp	x0, 43d000 <_fini+0xdb0>
  40f1d4:	add	x1, x0, #0x6d3
  40f1d8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f1dc:	add	x4, x0, #0xba0
  40f1e0:	mov	w3, #0xb8                  	// #184
  40f1e4:	mov	x2, x1
  40f1e8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f1ec:	add	x1, x0, #0x9c8
  40f1f0:	mov	w0, #0x0                   	// #0
  40f1f4:	bl	407650 <log_assert_failed_realm@plt>
  40f1f8:	ldr	x0, [sp, #40]
  40f1fc:	bl	40f08c <handle_action_from_string>
  40f200:	str	w0, [sp, #108]
  40f204:	ldr	w0, [sp, #108]
  40f208:	cmp	w0, #0x0
  40f20c:	b.ge	40f290 <config_parse_handle_action+0x1dc>  // b.tcont
  40f210:	mov	w0, #0x3                   	// #3
  40f214:	str	w0, [sp, #112]
  40f218:	str	wzr, [sp, #116]
  40f21c:	mov	w0, #0x0                   	// #0
  40f220:	bl	4083e0 <log_get_max_level_realm@plt>
  40f224:	mov	w1, w0
  40f228:	ldr	w0, [sp, #112]
  40f22c:	and	w0, w0, #0x7
  40f230:	cmp	w1, w0
  40f234:	b.lt	40f280 <config_parse_handle_action+0x1cc>  // b.tstop
  40f238:	adrp	x0, 43d000 <_fini+0xdb0>
  40f23c:	add	x1, x0, #0x6d3
  40f240:	ldr	x0, [sp, #40]
  40f244:	str	x0, [sp, #8]
  40f248:	adrp	x0, 43d000 <_fini+0xdb0>
  40f24c:	add	x0, x0, #0x9d0
  40f250:	str	x0, [sp]
  40f254:	adrp	x0, 43d000 <_fini+0xdb0>
  40f258:	add	x7, x0, #0xbc0
  40f25c:	mov	w6, #0xb8                  	// #184
  40f260:	mov	x5, x1
  40f264:	ldr	w4, [sp, #116]
  40f268:	ldr	w3, [sp, #76]
  40f26c:	ldr	x2, [sp, #80]
  40f270:	ldr	w1, [sp, #112]
  40f274:	ldr	x0, [sp, #88]
  40f278:	bl	407ed0 <log_syntax_internal@plt>
  40f27c:	b	40f288 <config_parse_handle_action+0x1d4>
  40f280:	ldr	w0, [sp, #116]
  40f284:	cmp	w0, #0x0
  40f288:	mov	w0, #0x0                   	// #0
  40f28c:	b	40f2a0 <config_parse_handle_action+0x1ec>
  40f290:	ldr	x0, [sp, #120]
  40f294:	ldr	w1, [sp, #108]
  40f298:	str	w1, [x0]
  40f29c:	mov	w0, #0x0                   	// #0
  40f2a0:	ldp	x29, x30, [sp, #16]
  40f2a4:	add	sp, sp, #0x80
  40f2a8:	ret

000000000040f2ac <mfree>:
  40f2ac:	stp	x29, x30, [sp, #-32]!
  40f2b0:	mov	x29, sp
  40f2b4:	str	x0, [sp, #24]
  40f2b8:	ldr	x0, [sp, #24]
  40f2bc:	bl	408150 <free@plt>
  40f2c0:	mov	x0, #0x0                   	// #0
  40f2c4:	ldp	x29, x30, [sp], #32
  40f2c8:	ret

000000000040f2cc <size_multiply_overflow>:
  40f2cc:	sub	sp, sp, #0x10
  40f2d0:	str	x0, [sp, #8]
  40f2d4:	str	x1, [sp]
  40f2d8:	ldr	x0, [sp]
  40f2dc:	cmp	x0, #0x0
  40f2e0:	cset	w0, ne  // ne = any
  40f2e4:	and	w0, w0, #0xff
  40f2e8:	and	x0, x0, #0xff
  40f2ec:	cmp	x0, #0x0
  40f2f0:	b.eq	40f334 <size_multiply_overflow+0x68>  // b.none
  40f2f4:	mov	x2, #0x0                   	// #0
  40f2f8:	ldr	x1, [sp, #8]
  40f2fc:	ldr	x0, [sp]
  40f300:	umulh	x0, x1, x0
  40f304:	cmp	x0, #0x0
  40f308:	b.eq	40f310 <size_multiply_overflow+0x44>  // b.none
  40f30c:	mov	x2, #0x1                   	// #1
  40f310:	mov	x0, x2
  40f314:	cmp	x0, #0x0
  40f318:	cset	w0, ne  // ne = any
  40f31c:	and	w0, w0, #0xff
  40f320:	and	x0, x0, #0xff
  40f324:	cmp	x0, #0x0
  40f328:	b.eq	40f334 <size_multiply_overflow+0x68>  // b.none
  40f32c:	mov	w0, #0x1                   	// #1
  40f330:	b	40f338 <size_multiply_overflow+0x6c>
  40f334:	mov	w0, #0x0                   	// #0
  40f338:	and	w0, w0, #0x1
  40f33c:	and	w0, w0, #0xff
  40f340:	add	sp, sp, #0x10
  40f344:	ret

000000000040f348 <closep>:
  40f348:	stp	x29, x30, [sp, #-32]!
  40f34c:	mov	x29, sp
  40f350:	str	x0, [sp, #24]
  40f354:	ldr	x0, [sp, #24]
  40f358:	ldr	w0, [x0]
  40f35c:	bl	4075e0 <safe_close@plt>
  40f360:	nop
  40f364:	ldp	x29, x30, [sp], #32
  40f368:	ret

000000000040f36c <hashmap_remove>:
  40f36c:	stp	x29, x30, [sp, #-32]!
  40f370:	mov	x29, sp
  40f374:	str	x0, [sp, #24]
  40f378:	str	x1, [sp, #16]
  40f37c:	ldr	x1, [sp, #16]
  40f380:	ldr	x0, [sp, #24]
  40f384:	bl	406f90 <internal_hashmap_remove@plt>
  40f388:	ldp	x29, x30, [sp], #32
  40f38c:	ret

000000000040f390 <bitset_get>:
  40f390:	sub	sp, sp, #0x10
  40f394:	str	x0, [sp, #8]
  40f398:	str	w1, [sp, #4]
  40f39c:	ldr	w0, [sp, #4]
  40f3a0:	lsr	w0, w0, #6
  40f3a4:	mov	w0, w0
  40f3a8:	lsl	x0, x0, #3
  40f3ac:	ldr	x1, [sp, #8]
  40f3b0:	add	x0, x1, x0
  40f3b4:	ldr	x1, [x0]
  40f3b8:	ldr	w0, [sp, #4]
  40f3bc:	and	w0, w0, #0x3f
  40f3c0:	lsr	x0, x1, x0
  40f3c4:	and	x0, x0, #0x1
  40f3c8:	cmp	x0, #0x0
  40f3cc:	cset	w0, ne  // ne = any
  40f3d0:	and	w0, w0, #0xff
  40f3d4:	add	sp, sp, #0x10
  40f3d8:	ret

000000000040f3dc <bitset_put>:
  40f3dc:	sub	sp, sp, #0x10
  40f3e0:	str	x0, [sp, #8]
  40f3e4:	str	w1, [sp, #4]
  40f3e8:	ldr	w0, [sp, #4]
  40f3ec:	lsr	w3, w0, #6
  40f3f0:	mov	w0, w3
  40f3f4:	lsl	x0, x0, #3
  40f3f8:	ldr	x1, [sp, #8]
  40f3fc:	add	x0, x1, x0
  40f400:	ldr	x2, [x0]
  40f404:	ldr	w0, [sp, #4]
  40f408:	and	w0, w0, #0x3f
  40f40c:	mov	x1, #0x1                   	// #1
  40f410:	lsl	x1, x1, x0
  40f414:	mov	w0, w3
  40f418:	lsl	x0, x0, #3
  40f41c:	ldr	x3, [sp, #8]
  40f420:	add	x0, x3, x0
  40f424:	orr	x1, x2, x1
  40f428:	str	x1, [x0]
  40f42c:	nop
  40f430:	add	sp, sp, #0x10
  40f434:	ret

000000000040f438 <button_new>:
  40f438:	stp	x29, x30, [sp, #-48]!
  40f43c:	mov	x29, sp
  40f440:	str	x0, [sp, #24]
  40f444:	str	x1, [sp, #16]
  40f448:	ldr	x0, [sp, #24]
  40f44c:	cmp	x0, #0x0
  40f450:	cset	w0, eq  // eq = none
  40f454:	and	w0, w0, #0xff
  40f458:	and	x0, x0, #0xff
  40f45c:	cmp	x0, #0x0
  40f460:	b.eq	40f48c <button_new+0x54>  // b.none
  40f464:	adrp	x0, 43d000 <_fini+0xdb0>
  40f468:	add	x1, x0, #0xbe3
  40f46c:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f470:	add	x4, x0, #0x98
  40f474:	mov	w3, #0x20                  	// #32
  40f478:	mov	x2, x1
  40f47c:	adrp	x0, 43d000 <_fini+0xdb0>
  40f480:	add	x1, x0, #0xc00
  40f484:	mov	w0, #0x0                   	// #0
  40f488:	bl	407650 <log_assert_failed_realm@plt>
  40f48c:	ldr	x0, [sp, #16]
  40f490:	cmp	x0, #0x0
  40f494:	cset	w0, eq  // eq = none
  40f498:	and	w0, w0, #0xff
  40f49c:	and	x0, x0, #0xff
  40f4a0:	cmp	x0, #0x0
  40f4a4:	b.eq	40f4d0 <button_new+0x98>  // b.none
  40f4a8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f4ac:	add	x1, x0, #0xbe3
  40f4b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f4b4:	add	x4, x0, #0x98
  40f4b8:	mov	w3, #0x21                  	// #33
  40f4bc:	mov	x2, x1
  40f4c0:	adrp	x0, 43d000 <_fini+0xdb0>
  40f4c4:	add	x1, x0, #0xc08
  40f4c8:	mov	w0, #0x0                   	// #0
  40f4cc:	bl	407650 <log_assert_failed_realm@plt>
  40f4d0:	mov	x1, #0x30                  	// #48
  40f4d4:	mov	x0, #0x1                   	// #1
  40f4d8:	bl	407fa0 <calloc@plt>
  40f4dc:	str	x0, [sp, #40]
  40f4e0:	ldr	x0, [sp, #40]
  40f4e4:	cmp	x0, #0x0
  40f4e8:	b.ne	40f4f4 <button_new+0xbc>  // b.any
  40f4ec:	mov	x0, #0x0                   	// #0
  40f4f0:	b	40f580 <button_new+0x148>
  40f4f4:	ldr	x0, [sp, #16]
  40f4f8:	bl	407f90 <strdup@plt>
  40f4fc:	mov	x1, x0
  40f500:	ldr	x0, [sp, #40]
  40f504:	str	x1, [x0, #24]
  40f508:	ldr	x0, [sp, #40]
  40f50c:	ldr	x0, [x0, #24]
  40f510:	cmp	x0, #0x0
  40f514:	b.ne	40f524 <button_new+0xec>  // b.any
  40f518:	ldr	x0, [sp, #40]
  40f51c:	bl	40f2ac <mfree>
  40f520:	b	40f580 <button_new+0x148>
  40f524:	ldr	x0, [sp, #24]
  40f528:	ldr	x3, [x0, #64]
  40f52c:	ldr	x0, [sp, #40]
  40f530:	ldr	x0, [x0, #24]
  40f534:	ldr	x2, [sp, #40]
  40f538:	mov	x1, x0
  40f53c:	mov	x0, x3
  40f540:	bl	407dd0 <hashmap_put@plt>
  40f544:	cmp	w0, #0x0
  40f548:	b.ge	40f564 <button_new+0x12c>  // b.tcont
  40f54c:	ldr	x0, [sp, #40]
  40f550:	ldr	x0, [x0, #24]
  40f554:	bl	408150 <free@plt>
  40f558:	ldr	x0, [sp, #40]
  40f55c:	bl	40f2ac <mfree>
  40f560:	b	40f580 <button_new+0x148>
  40f564:	ldr	x0, [sp, #40]
  40f568:	ldr	x1, [sp, #24]
  40f56c:	str	x1, [x0]
  40f570:	ldr	x0, [sp, #40]
  40f574:	mov	w1, #0xffffffff            	// #-1
  40f578:	str	w1, [x0, #40]
  40f57c:	ldr	x0, [sp, #40]
  40f580:	ldp	x29, x30, [sp], #48
  40f584:	ret

000000000040f588 <button_free>:
  40f588:	stp	x29, x30, [sp, #-32]!
  40f58c:	mov	x29, sp
  40f590:	str	x0, [sp, #24]
  40f594:	ldr	x0, [sp, #24]
  40f598:	cmp	x0, #0x0
  40f59c:	cset	w0, eq  // eq = none
  40f5a0:	and	w0, w0, #0xff
  40f5a4:	and	x0, x0, #0xff
  40f5a8:	cmp	x0, #0x0
  40f5ac:	b.eq	40f5d8 <button_free+0x50>  // b.none
  40f5b0:	adrp	x0, 43d000 <_fini+0xdb0>
  40f5b4:	add	x1, x0, #0xbe3
  40f5b8:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f5bc:	add	x4, x0, #0xa8
  40f5c0:	mov	w3, #0x37                  	// #55
  40f5c4:	mov	x2, x1
  40f5c8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f5cc:	add	x1, x0, #0xc10
  40f5d0:	mov	w0, #0x0                   	// #0
  40f5d4:	bl	407650 <log_assert_failed_realm@plt>
  40f5d8:	ldr	x0, [sp, #24]
  40f5dc:	ldr	x0, [x0]
  40f5e0:	ldr	x2, [x0, #64]
  40f5e4:	ldr	x0, [sp, #24]
  40f5e8:	ldr	x0, [x0, #24]
  40f5ec:	mov	x1, x0
  40f5f0:	mov	x0, x2
  40f5f4:	bl	40f36c <hashmap_remove>
  40f5f8:	ldr	x0, [sp, #24]
  40f5fc:	ldr	x0, [x0, #8]
  40f600:	bl	407550 <sd_event_source_unref@plt>
  40f604:	ldr	x0, [sp, #24]
  40f608:	ldr	x0, [x0, #16]
  40f60c:	bl	407550 <sd_event_source_unref@plt>
  40f610:	ldr	x0, [sp, #24]
  40f614:	ldr	w0, [x0, #40]
  40f618:	cmp	w0, #0x0
  40f61c:	b.lt	40f62c <button_free+0xa4>  // b.tstop
  40f620:	ldr	x0, [sp, #24]
  40f624:	ldr	w0, [x0, #40]
  40f628:	bl	408280 <close@plt>
  40f62c:	ldr	x0, [sp, #24]
  40f630:	ldr	x0, [x0, #24]
  40f634:	bl	408150 <free@plt>
  40f638:	ldr	x0, [sp, #24]
  40f63c:	ldr	x0, [x0, #32]
  40f640:	bl	408150 <free@plt>
  40f644:	ldr	x0, [sp, #24]
  40f648:	bl	408150 <free@plt>
  40f64c:	nop
  40f650:	ldp	x29, x30, [sp], #32
  40f654:	ret

000000000040f658 <button_set_seat>:
  40f658:	stp	x29, x30, [sp, #-48]!
  40f65c:	mov	x29, sp
  40f660:	str	x0, [sp, #24]
  40f664:	str	x1, [sp, #16]
  40f668:	ldr	x0, [sp, #24]
  40f66c:	cmp	x0, #0x0
  40f670:	cset	w0, eq  // eq = none
  40f674:	and	w0, w0, #0xff
  40f678:	and	x0, x0, #0xff
  40f67c:	cmp	x0, #0x0
  40f680:	b.eq	40f6ac <button_set_seat+0x54>  // b.none
  40f684:	adrp	x0, 43d000 <_fini+0xdb0>
  40f688:	add	x1, x0, #0xbe3
  40f68c:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f690:	add	x4, x0, #0xb8
  40f694:	mov	w3, #0x4c                  	// #76
  40f698:	mov	x2, x1
  40f69c:	adrp	x0, 43d000 <_fini+0xdb0>
  40f6a0:	add	x1, x0, #0xc10
  40f6a4:	mov	w0, #0x0                   	// #0
  40f6a8:	bl	407650 <log_assert_failed_realm@plt>
  40f6ac:	ldr	x0, [sp, #16]
  40f6b0:	cmp	x0, #0x0
  40f6b4:	cset	w0, eq  // eq = none
  40f6b8:	and	w0, w0, #0xff
  40f6bc:	and	x0, x0, #0xff
  40f6c0:	cmp	x0, #0x0
  40f6c4:	b.eq	40f6f0 <button_set_seat+0x98>  // b.none
  40f6c8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f6cc:	add	x1, x0, #0xbe3
  40f6d0:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f6d4:	add	x4, x0, #0xb8
  40f6d8:	mov	w3, #0x4d                  	// #77
  40f6dc:	mov	x2, x1
  40f6e0:	adrp	x0, 43d000 <_fini+0xdb0>
  40f6e4:	add	x1, x0, #0xc18
  40f6e8:	mov	w0, #0x0                   	// #0
  40f6ec:	bl	407650 <log_assert_failed_realm@plt>
  40f6f0:	ldr	x0, [sp, #16]
  40f6f4:	bl	407f90 <strdup@plt>
  40f6f8:	str	x0, [sp, #40]
  40f6fc:	ldr	x0, [sp, #40]
  40f700:	cmp	x0, #0x0
  40f704:	b.ne	40f710 <button_set_seat+0xb8>  // b.any
  40f708:	mov	w0, #0xfffffff4            	// #-12
  40f70c:	b	40f72c <button_set_seat+0xd4>
  40f710:	ldr	x0, [sp, #24]
  40f714:	ldr	x0, [x0, #32]
  40f718:	bl	408150 <free@plt>
  40f71c:	ldr	x0, [sp, #24]
  40f720:	ldr	x1, [sp, #40]
  40f724:	str	x1, [x0, #32]
  40f728:	mov	w0, #0x0                   	// #0
  40f72c:	ldp	x29, x30, [sp], #48
  40f730:	ret

000000000040f734 <button_lid_switch_handle_action>:
  40f734:	stp	x29, x30, [sp, #-48]!
  40f738:	mov	x29, sp
  40f73c:	str	x0, [sp, #24]
  40f740:	strb	w1, [sp, #23]
  40f744:	ldr	x0, [sp, #24]
  40f748:	cmp	x0, #0x0
  40f74c:	cset	w0, eq  // eq = none
  40f750:	and	w0, w0, #0xff
  40f754:	and	x0, x0, #0xff
  40f758:	cmp	x0, #0x0
  40f75c:	b.eq	40f788 <button_lid_switch_handle_action+0x54>  // b.none
  40f760:	adrp	x0, 43d000 <_fini+0xdb0>
  40f764:	add	x1, x0, #0xbe3
  40f768:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f76c:	add	x4, x0, #0xc8
  40f770:	mov	w3, #0x5c                  	// #92
  40f774:	mov	x2, x1
  40f778:	adrp	x0, 43d000 <_fini+0xdb0>
  40f77c:	add	x1, x0, #0xc20
  40f780:	mov	w0, #0x0                   	// #0
  40f784:	bl	407650 <log_assert_failed_realm@plt>
  40f788:	ldr	x0, [sp, #24]
  40f78c:	bl	413074 <manager_is_docked_or_external_displays>
  40f790:	and	w0, w0, #0xff
  40f794:	cmp	w0, #0x0
  40f798:	b.eq	40f7ac <button_lid_switch_handle_action+0x78>  // b.none
  40f79c:	ldr	x0, [sp, #24]
  40f7a0:	ldr	w0, [x0, #416]
  40f7a4:	str	w0, [sp, #44]
  40f7a8:	b	40f7e8 <button_lid_switch_handle_action+0xb4>
  40f7ac:	ldr	x0, [sp, #24]
  40f7b0:	ldr	w0, [x0, #412]
  40f7b4:	cmn	w0, #0x1
  40f7b8:	b.eq	40f7dc <button_lid_switch_handle_action+0xa8>  // b.none
  40f7bc:	bl	41323c <manager_is_on_external_power>
  40f7c0:	and	w0, w0, #0xff
  40f7c4:	cmp	w0, #0x0
  40f7c8:	b.eq	40f7dc <button_lid_switch_handle_action+0xa8>  // b.none
  40f7cc:	ldr	x0, [sp, #24]
  40f7d0:	ldr	w0, [x0, #412]
  40f7d4:	str	w0, [sp, #44]
  40f7d8:	b	40f7e8 <button_lid_switch_handle_action+0xb4>
  40f7dc:	ldr	x0, [sp, #24]
  40f7e0:	ldr	w0, [x0, #408]
  40f7e4:	str	w0, [sp, #44]
  40f7e8:	ldr	x0, [sp, #24]
  40f7ec:	ldrb	w0, [x0, #423]
  40f7f0:	ldrb	w4, [sp, #23]
  40f7f4:	mov	w3, w0
  40f7f8:	ldr	w2, [sp, #44]
  40f7fc:	mov	w1, #0x40                  	// #64
  40f800:	ldr	x0, [sp, #24]
  40f804:	bl	40e634 <manager_handle_action>
  40f808:	nop
  40f80c:	ldp	x29, x30, [sp], #48
  40f810:	ret

000000000040f814 <button_recheck>:
  40f814:	stp	x29, x30, [sp, #-48]!
  40f818:	mov	x29, sp
  40f81c:	str	x0, [sp, #24]
  40f820:	str	x1, [sp, #16]
  40f824:	ldr	x0, [sp, #16]
  40f828:	str	x0, [sp, #40]
  40f82c:	ldr	x0, [sp, #40]
  40f830:	cmp	x0, #0x0
  40f834:	cset	w0, eq  // eq = none
  40f838:	and	w0, w0, #0xff
  40f83c:	and	x0, x0, #0xff
  40f840:	cmp	x0, #0x0
  40f844:	b.eq	40f870 <button_recheck+0x5c>  // b.none
  40f848:	adrp	x0, 43d000 <_fini+0xdb0>
  40f84c:	add	x1, x0, #0xbe3
  40f850:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f854:	add	x4, x0, #0xe8
  40f858:	mov	w3, #0x6e                  	// #110
  40f85c:	mov	x2, x1
  40f860:	adrp	x0, 43d000 <_fini+0xdb0>
  40f864:	add	x1, x0, #0xc10
  40f868:	mov	w0, #0x0                   	// #0
  40f86c:	bl	407650 <log_assert_failed_realm@plt>
  40f870:	ldr	x0, [sp, #40]
  40f874:	ldrb	w0, [x0, #44]
  40f878:	eor	w0, w0, #0x1
  40f87c:	and	w0, w0, #0xff
  40f880:	and	x0, x0, #0xff
  40f884:	cmp	x0, #0x0
  40f888:	b.eq	40f8b4 <button_recheck+0xa0>  // b.none
  40f88c:	adrp	x0, 43d000 <_fini+0xdb0>
  40f890:	add	x1, x0, #0xbe3
  40f894:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f898:	add	x4, x0, #0xe8
  40f89c:	mov	w3, #0x6f                  	// #111
  40f8a0:	mov	x2, x1
  40f8a4:	adrp	x0, 43d000 <_fini+0xdb0>
  40f8a8:	add	x1, x0, #0xc28
  40f8ac:	mov	w0, #0x0                   	// #0
  40f8b0:	bl	407650 <log_assert_failed_realm@plt>
  40f8b4:	ldr	x0, [sp, #40]
  40f8b8:	ldr	x0, [x0]
  40f8bc:	mov	w1, #0x0                   	// #0
  40f8c0:	bl	40f734 <button_lid_switch_handle_action>
  40f8c4:	mov	w0, #0x1                   	// #1
  40f8c8:	ldp	x29, x30, [sp], #48
  40f8cc:	ret

000000000040f8d0 <button_install_check_event_source>:
  40f8d0:	stp	x29, x30, [sp, #-48]!
  40f8d4:	mov	x29, sp
  40f8d8:	str	x0, [sp, #24]
  40f8dc:	ldr	x0, [sp, #24]
  40f8e0:	cmp	x0, #0x0
  40f8e4:	cset	w0, eq  // eq = none
  40f8e8:	and	w0, w0, #0xff
  40f8ec:	and	x0, x0, #0xff
  40f8f0:	cmp	x0, #0x0
  40f8f4:	b.eq	40f920 <button_install_check_event_source+0x50>  // b.none
  40f8f8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f8fc:	add	x1, x0, #0xbe3
  40f900:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f904:	add	x4, x0, #0xf8
  40f908:	mov	w3, #0x77                  	// #119
  40f90c:	mov	x2, x1
  40f910:	adrp	x0, 43d000 <_fini+0xdb0>
  40f914:	add	x1, x0, #0xc10
  40f918:	mov	w0, #0x0                   	// #0
  40f91c:	bl	407650 <log_assert_failed_realm@plt>
  40f920:	ldr	x0, [sp, #24]
  40f924:	ldr	x0, [x0, #16]
  40f928:	cmp	x0, #0x0
  40f92c:	b.eq	40f938 <button_install_check_event_source+0x68>  // b.none
  40f930:	mov	w0, #0x0                   	// #0
  40f934:	b	40f988 <button_install_check_event_source+0xb8>
  40f938:	ldr	x0, [sp, #24]
  40f93c:	ldr	x0, [x0]
  40f940:	ldr	x4, [x0]
  40f944:	ldr	x0, [sp, #24]
  40f948:	add	x1, x0, #0x10
  40f94c:	ldr	x3, [sp, #24]
  40f950:	adrp	x0, 40f000 <manager_handle_action+0x9cc>
  40f954:	add	x2, x0, #0x814
  40f958:	mov	x0, x4
  40f95c:	bl	407010 <sd_event_add_post@plt>
  40f960:	str	w0, [sp, #44]
  40f964:	ldr	w0, [sp, #44]
  40f968:	cmp	w0, #0x0
  40f96c:	b.ge	40f978 <button_install_check_event_source+0xa8>  // b.tcont
  40f970:	ldr	w0, [sp, #44]
  40f974:	b	40f988 <button_install_check_event_source+0xb8>
  40f978:	ldr	x0, [sp, #24]
  40f97c:	ldr	x0, [x0, #16]
  40f980:	mov	x1, #0x65                  	// #101
  40f984:	bl	407a30 <sd_event_source_set_priority@plt>
  40f988:	ldp	x29, x30, [sp], #48
  40f98c:	ret

000000000040f990 <button_dispatch>:
  40f990:	stp	x29, x30, [sp, #-96]!
  40f994:	mov	x29, sp
  40f998:	str	x0, [sp, #40]
  40f99c:	str	w1, [sp, #36]
  40f9a0:	str	w2, [sp, #32]
  40f9a4:	str	x3, [sp, #24]
  40f9a8:	adrp	x0, 460000 <wordlist.10364+0x370>
  40f9ac:	ldr	x0, [x0, #4024]
  40f9b0:	ldr	x1, [x0]
  40f9b4:	str	x1, [sp, #88]
  40f9b8:	mov	x1, #0x0                   	// #0
  40f9bc:	ldr	x0, [sp, #24]
  40f9c0:	str	x0, [sp, #48]
  40f9c4:	ldr	x0, [sp, #40]
  40f9c8:	cmp	x0, #0x0
  40f9cc:	cset	w0, eq  // eq = none
  40f9d0:	and	w0, w0, #0xff
  40f9d4:	and	x0, x0, #0xff
  40f9d8:	cmp	x0, #0x0
  40f9dc:	b.eq	40fa08 <button_dispatch+0x78>  // b.none
  40f9e0:	adrp	x0, 43d000 <_fini+0xdb0>
  40f9e4:	add	x1, x0, #0xbe3
  40f9e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  40f9ec:	add	x4, x0, #0x120
  40f9f0:	mov	w3, #0x8a                  	// #138
  40f9f4:	mov	x2, x1
  40f9f8:	adrp	x0, 43d000 <_fini+0xdb0>
  40f9fc:	add	x1, x0, #0xc38
  40fa00:	mov	w0, #0x0                   	// #0
  40fa04:	bl	407650 <log_assert_failed_realm@plt>
  40fa08:	ldr	x0, [sp, #48]
  40fa0c:	ldr	w0, [x0, #40]
  40fa10:	ldr	w1, [sp, #36]
  40fa14:	cmp	w1, w0
  40fa18:	cset	w0, ne  // ne = any
  40fa1c:	and	w0, w0, #0xff
  40fa20:	and	x0, x0, #0xff
  40fa24:	cmp	x0, #0x0
  40fa28:	b.eq	40fa54 <button_dispatch+0xc4>  // b.none
  40fa2c:	adrp	x0, 43d000 <_fini+0xdb0>
  40fa30:	add	x1, x0, #0xbe3
  40fa34:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fa38:	add	x4, x0, #0x120
  40fa3c:	mov	w3, #0x8b                  	// #139
  40fa40:	mov	x2, x1
  40fa44:	adrp	x0, 43d000 <_fini+0xdb0>
  40fa48:	add	x1, x0, #0xc40
  40fa4c:	mov	w0, #0x0                   	// #0
  40fa50:	bl	407650 <log_assert_failed_realm@plt>
  40fa54:	ldr	x0, [sp, #48]
  40fa58:	cmp	x0, #0x0
  40fa5c:	cset	w0, eq  // eq = none
  40fa60:	and	w0, w0, #0xff
  40fa64:	and	x0, x0, #0xff
  40fa68:	cmp	x0, #0x0
  40fa6c:	b.eq	40fa98 <button_dispatch+0x108>  // b.none
  40fa70:	adrp	x0, 43d000 <_fini+0xdb0>
  40fa74:	add	x1, x0, #0xbe3
  40fa78:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fa7c:	add	x4, x0, #0x120
  40fa80:	mov	w3, #0x8c                  	// #140
  40fa84:	mov	x2, x1
  40fa88:	adrp	x0, 43d000 <_fini+0xdb0>
  40fa8c:	add	x1, x0, #0xc10
  40fa90:	mov	w0, #0x0                   	// #0
  40fa94:	bl	407650 <log_assert_failed_realm@plt>
  40fa98:	ldr	x0, [sp, #48]
  40fa9c:	ldr	w0, [x0, #40]
  40faa0:	add	x1, sp, #0x40
  40faa4:	mov	x2, #0x18                  	// #24
  40faa8:	bl	4079d0 <read@plt>
  40faac:	str	x0, [sp, #56]
  40fab0:	ldr	x0, [sp, #56]
  40fab4:	cmp	x0, #0x0
  40fab8:	b.ge	40fae4 <button_dispatch+0x154>  // b.tcont
  40fabc:	bl	407960 <__errno_location@plt>
  40fac0:	ldr	w0, [x0]
  40fac4:	cmp	w0, #0xb
  40fac8:	b.eq	40fadc <button_dispatch+0x14c>  // b.none
  40facc:	bl	407960 <__errno_location@plt>
  40fad0:	ldr	w0, [x0]
  40fad4:	neg	w0, w0
  40fad8:	b	40fe58 <button_dispatch+0x4c8>
  40fadc:	mov	w0, #0x0                   	// #0
  40fae0:	b	40fe58 <button_dispatch+0x4c8>
  40fae4:	ldr	x0, [sp, #56]
  40fae8:	cmp	x0, #0x17
  40faec:	b.hi	40faf8 <button_dispatch+0x168>  // b.pmore
  40faf0:	mov	w0, #0xfffffffb            	// #-5
  40faf4:	b	40fe58 <button_dispatch+0x4c8>
  40faf8:	ldrh	w0, [sp, #80]
  40fafc:	cmp	w0, #0x1
  40fb00:	b.ne	40fca8 <button_dispatch+0x318>  // b.any
  40fb04:	ldr	w0, [sp, #84]
  40fb08:	cmp	w0, #0x0
  40fb0c:	b.le	40fca8 <button_dispatch+0x318>
  40fb10:	ldrh	w0, [sp, #82]
  40fb14:	cmp	w0, #0x164
  40fb18:	b.eq	40fb48 <button_dispatch+0x1b8>  // b.none
  40fb1c:	cmp	w0, #0x164
  40fb20:	b.gt	40fe54 <button_dispatch+0x4c4>
  40fb24:	cmp	w0, #0xcd
  40fb28:	b.eq	40fc30 <button_dispatch+0x2a0>  // b.none
  40fb2c:	cmp	w0, #0xcd
  40fb30:	b.gt	40fe54 <button_dispatch+0x4c4>
  40fb34:	cmp	w0, #0x74
  40fb38:	b.eq	40fb48 <button_dispatch+0x1b8>  // b.none
  40fb3c:	cmp	w0, #0x8e
  40fb40:	b.eq	40fbbc <button_dispatch+0x22c>  // b.none
  40fb44:	b	40fe54 <button_dispatch+0x4c4>
  40fb48:	adrp	x0, 43d000 <_fini+0xdb0>
  40fb4c:	add	x1, x0, #0xbe3
  40fb50:	mov	x7, #0x0                   	// #0
  40fb54:	adrp	x0, 43d000 <_fini+0xdb0>
  40fb58:	add	x6, x0, #0xc50
  40fb5c:	adrp	x0, 43d000 <_fini+0xdb0>
  40fb60:	add	x5, x0, #0xc80
  40fb64:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fb68:	add	x4, x0, #0x130
  40fb6c:	mov	w3, #0x9a                  	// #154
  40fb70:	mov	x2, x1
  40fb74:	mov	w1, #0x0                   	// #0
  40fb78:	mov	w0, #0x6                   	// #6
  40fb7c:	bl	407cd0 <log_struct_internal@plt>
  40fb80:	ldr	x0, [sp, #48]
  40fb84:	ldr	x5, [x0]
  40fb88:	ldr	x0, [sp, #48]
  40fb8c:	ldr	x0, [x0]
  40fb90:	ldr	w1, [x0, #396]
  40fb94:	ldr	x0, [sp, #48]
  40fb98:	ldr	x0, [x0]
  40fb9c:	ldrb	w0, [x0, #420]
  40fba0:	mov	w4, #0x1                   	// #1
  40fba4:	mov	w3, w0
  40fba8:	mov	w2, w1
  40fbac:	mov	w1, #0x8                   	// #8
  40fbb0:	mov	x0, x5
  40fbb4:	bl	40e634 <manager_handle_action>
  40fbb8:	b	40fca4 <button_dispatch+0x314>
  40fbbc:	adrp	x0, 43d000 <_fini+0xdb0>
  40fbc0:	add	x1, x0, #0xbe3
  40fbc4:	mov	x7, #0x0                   	// #0
  40fbc8:	adrp	x0, 43d000 <_fini+0xdb0>
  40fbcc:	add	x6, x0, #0xca0
  40fbd0:	adrp	x0, 43d000 <_fini+0xdb0>
  40fbd4:	add	x5, x0, #0xcd0
  40fbd8:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fbdc:	add	x4, x0, #0x130
  40fbe0:	mov	w3, #0xa8                  	// #168
  40fbe4:	mov	x2, x1
  40fbe8:	mov	w1, #0x0                   	// #0
  40fbec:	mov	w0, #0x6                   	// #6
  40fbf0:	bl	407cd0 <log_struct_internal@plt>
  40fbf4:	ldr	x0, [sp, #48]
  40fbf8:	ldr	x5, [x0]
  40fbfc:	ldr	x0, [sp, #48]
  40fc00:	ldr	x0, [x0]
  40fc04:	ldr	w1, [x0, #400]
  40fc08:	ldr	x0, [sp, #48]
  40fc0c:	ldr	x0, [x0]
  40fc10:	ldrb	w0, [x0, #421]
  40fc14:	mov	w4, #0x1                   	// #1
  40fc18:	mov	w3, w0
  40fc1c:	mov	w2, w1
  40fc20:	mov	w1, #0x10                  	// #16
  40fc24:	mov	x0, x5
  40fc28:	bl	40e634 <manager_handle_action>
  40fc2c:	b	40fca4 <button_dispatch+0x314>
  40fc30:	adrp	x0, 43d000 <_fini+0xdb0>
  40fc34:	add	x1, x0, #0xbe3
  40fc38:	mov	x7, #0x0                   	// #0
  40fc3c:	adrp	x0, 43d000 <_fini+0xdb0>
  40fc40:	add	x6, x0, #0xcf0
  40fc44:	adrp	x0, 43d000 <_fini+0xdb0>
  40fc48:	add	x5, x0, #0xd20
  40fc4c:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fc50:	add	x4, x0, #0x130
  40fc54:	mov	w3, #0xb0                  	// #176
  40fc58:	mov	x2, x1
  40fc5c:	mov	w1, #0x0                   	// #0
  40fc60:	mov	w0, #0x6                   	// #6
  40fc64:	bl	407cd0 <log_struct_internal@plt>
  40fc68:	ldr	x0, [sp, #48]
  40fc6c:	ldr	x5, [x0]
  40fc70:	ldr	x0, [sp, #48]
  40fc74:	ldr	x0, [x0]
  40fc78:	ldr	w1, [x0, #404]
  40fc7c:	ldr	x0, [sp, #48]
  40fc80:	ldr	x0, [x0]
  40fc84:	ldrb	w0, [x0, #422]
  40fc88:	mov	w4, #0x1                   	// #1
  40fc8c:	mov	w3, w0
  40fc90:	mov	w2, w1
  40fc94:	mov	w1, #0x20                  	// #32
  40fc98:	mov	x0, x5
  40fc9c:	bl	40e634 <manager_handle_action>
  40fca0:	nop
  40fca4:	b	40fe54 <button_dispatch+0x4c4>
  40fca8:	ldrh	w0, [sp, #80]
  40fcac:	cmp	w0, #0x5
  40fcb0:	b.ne	40fd80 <button_dispatch+0x3f0>  // b.any
  40fcb4:	ldr	w0, [sp, #84]
  40fcb8:	cmp	w0, #0x0
  40fcbc:	b.le	40fd80 <button_dispatch+0x3f0>
  40fcc0:	ldrh	w0, [sp, #82]
  40fcc4:	cmp	w0, #0x0
  40fcc8:	b.ne	40fd2c <button_dispatch+0x39c>  // b.any
  40fccc:	adrp	x0, 43d000 <_fini+0xdb0>
  40fcd0:	add	x1, x0, #0xbe3
  40fcd4:	mov	x7, #0x0                   	// #0
  40fcd8:	adrp	x0, 43d000 <_fini+0xdb0>
  40fcdc:	add	x6, x0, #0xd40
  40fce0:	adrp	x0, 43d000 <_fini+0xdb0>
  40fce4:	add	x5, x0, #0xd70
  40fce8:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fcec:	add	x4, x0, #0x130
  40fcf0:	mov	w3, #0xbb                  	// #187
  40fcf4:	mov	x2, x1
  40fcf8:	mov	w1, #0x0                   	// #0
  40fcfc:	mov	w0, #0x6                   	// #6
  40fd00:	bl	407cd0 <log_struct_internal@plt>
  40fd04:	ldr	x0, [sp, #48]
  40fd08:	mov	w1, #0x1                   	// #1
  40fd0c:	strb	w1, [x0, #44]
  40fd10:	ldr	x0, [sp, #48]
  40fd14:	ldr	x0, [x0]
  40fd18:	mov	w1, #0x1                   	// #1
  40fd1c:	bl	40f734 <button_lid_switch_handle_action>
  40fd20:	ldr	x0, [sp, #48]
  40fd24:	bl	40f8d0 <button_install_check_event_source>
  40fd28:	b	40fe50 <button_dispatch+0x4c0>
  40fd2c:	ldrh	w0, [sp, #82]
  40fd30:	cmp	w0, #0x5
  40fd34:	b.ne	40fe50 <button_dispatch+0x4c0>  // b.any
  40fd38:	adrp	x0, 43d000 <_fini+0xdb0>
  40fd3c:	add	x1, x0, #0xbe3
  40fd40:	mov	x7, #0x0                   	// #0
  40fd44:	adrp	x0, 43d000 <_fini+0xdb0>
  40fd48:	add	x6, x0, #0xd88
  40fd4c:	adrp	x0, 43d000 <_fini+0xdb0>
  40fd50:	add	x5, x0, #0xdb8
  40fd54:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fd58:	add	x4, x0, #0x130
  40fd5c:	mov	w3, #0xc4                  	// #196
  40fd60:	mov	x2, x1
  40fd64:	mov	w1, #0x0                   	// #0
  40fd68:	mov	w0, #0x6                   	// #6
  40fd6c:	bl	407cd0 <log_struct_internal@plt>
  40fd70:	ldr	x0, [sp, #48]
  40fd74:	mov	w1, #0x1                   	// #1
  40fd78:	strb	w1, [x0, #45]
  40fd7c:	b	40fe50 <button_dispatch+0x4c0>
  40fd80:	ldrh	w0, [sp, #80]
  40fd84:	cmp	w0, #0x5
  40fd88:	b.ne	40fe54 <button_dispatch+0x4c4>  // b.any
  40fd8c:	ldr	w0, [sp, #84]
  40fd90:	cmp	w0, #0x0
  40fd94:	b.ne	40fe54 <button_dispatch+0x4c4>  // b.any
  40fd98:	ldrh	w0, [sp, #82]
  40fd9c:	cmp	w0, #0x0
  40fda0:	b.ne	40fe00 <button_dispatch+0x470>  // b.any
  40fda4:	adrp	x0, 43d000 <_fini+0xdb0>
  40fda8:	add	x1, x0, #0xbe3
  40fdac:	mov	x7, #0x0                   	// #0
  40fdb0:	adrp	x0, 43d000 <_fini+0xdb0>
  40fdb4:	add	x6, x0, #0xdd0
  40fdb8:	adrp	x0, 43d000 <_fini+0xdb0>
  40fdbc:	add	x5, x0, #0xe00
  40fdc0:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fdc4:	add	x4, x0, #0x130
  40fdc8:	mov	w3, #0xce                  	// #206
  40fdcc:	mov	x2, x1
  40fdd0:	mov	w1, #0x0                   	// #0
  40fdd4:	mov	w0, #0x6                   	// #6
  40fdd8:	bl	407cd0 <log_struct_internal@plt>
  40fddc:	ldr	x0, [sp, #48]
  40fde0:	strb	wzr, [x0, #44]
  40fde4:	ldr	x0, [sp, #48]
  40fde8:	ldr	x0, [x0, #16]
  40fdec:	bl	407550 <sd_event_source_unref@plt>
  40fdf0:	mov	x1, x0
  40fdf4:	ldr	x0, [sp, #48]
  40fdf8:	str	x1, [x0, #16]
  40fdfc:	b	40fe54 <button_dispatch+0x4c4>
  40fe00:	ldrh	w0, [sp, #82]
  40fe04:	cmp	w0, #0x5
  40fe08:	b.ne	40fe54 <button_dispatch+0x4c4>  // b.any
  40fe0c:	adrp	x0, 43d000 <_fini+0xdb0>
  40fe10:	add	x1, x0, #0xbe3
  40fe14:	mov	x7, #0x0                   	// #0
  40fe18:	adrp	x0, 43d000 <_fini+0xdb0>
  40fe1c:	add	x6, x0, #0xe18
  40fe20:	adrp	x0, 43d000 <_fini+0xdb0>
  40fe24:	add	x5, x0, #0xe48
  40fe28:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fe2c:	add	x4, x0, #0x130
  40fe30:	mov	w3, #0xd6                  	// #214
  40fe34:	mov	x2, x1
  40fe38:	mov	w1, #0x0                   	// #0
  40fe3c:	mov	w0, #0x6                   	// #6
  40fe40:	bl	407cd0 <log_struct_internal@plt>
  40fe44:	ldr	x0, [sp, #48]
  40fe48:	strb	wzr, [x0, #45]
  40fe4c:	b	40fe54 <button_dispatch+0x4c4>
  40fe50:	nop
  40fe54:	mov	w0, #0x0                   	// #0
  40fe58:	mov	w1, w0
  40fe5c:	adrp	x0, 460000 <wordlist.10364+0x370>
  40fe60:	ldr	x0, [x0, #4024]
  40fe64:	ldr	x2, [sp, #88]
  40fe68:	ldr	x0, [x0]
  40fe6c:	eor	x0, x2, x0
  40fe70:	cmp	x0, #0x0
  40fe74:	b.eq	40fe7c <button_dispatch+0x4ec>  // b.none
  40fe78:	bl	407b20 <__stack_chk_fail@plt>
  40fe7c:	mov	w0, w1
  40fe80:	ldp	x29, x30, [sp], #96
  40fe84:	ret

000000000040fe88 <button_suitable>:
  40fe88:	stp	x29, x30, [sp, #-96]!
  40fe8c:	mov	x29, sp
  40fe90:	str	w0, [sp, #28]
  40fe94:	adrp	x0, 460000 <wordlist.10364+0x370>
  40fe98:	ldr	x0, [x0, #4024]
  40fe9c:	ldr	x1, [x0]
  40fea0:	str	x1, [sp, #88]
  40fea4:	mov	x1, #0x0                   	// #0
  40fea8:	ldr	w0, [sp, #28]
  40feac:	lsr	w0, w0, #31
  40feb0:	and	w0, w0, #0xff
  40feb4:	and	x0, x0, #0xff
  40feb8:	cmp	x0, #0x0
  40febc:	b.eq	40fee8 <button_suitable+0x60>  // b.none
  40fec0:	adrp	x0, 43d000 <_fini+0xdb0>
  40fec4:	add	x1, x0, #0xbe3
  40fec8:	adrp	x0, 43e000 <__func__.12250+0x440>
  40fecc:	add	x4, x0, #0x140
  40fed0:	mov	w3, #0xe4                  	// #228
  40fed4:	mov	x2, x1
  40fed8:	adrp	x0, 43d000 <_fini+0xdb0>
  40fedc:	add	x1, x0, #0xe68
  40fee0:	mov	w0, #0x0                   	// #0
  40fee4:	bl	407650 <log_assert_failed_realm@plt>
  40fee8:	add	x0, sp, #0x20
  40feec:	mov	x2, x0
  40fef0:	mov	x1, #0x4520                	// #17696
  40fef4:	movk	x1, #0x8008, lsl #16
  40fef8:	ldr	w0, [sp, #28]
  40fefc:	bl	407e30 <ioctl@plt>
  40ff00:	cmp	w0, #0x0
  40ff04:	b.ge	40ff18 <button_suitable+0x90>  // b.tcont
  40ff08:	bl	407960 <__errno_location@plt>
  40ff0c:	ldr	w0, [x0]
  40ff10:	neg	w0, w0
  40ff14:	b	41004c <button_suitable+0x1c4>
  40ff18:	add	x0, sp, #0x20
  40ff1c:	mov	w1, #0x1                   	// #1
  40ff20:	bl	40f390 <bitset_get>
  40ff24:	and	w0, w0, #0xff
  40ff28:	cmp	w0, #0x0
  40ff2c:	b.eq	40ffc8 <button_suitable+0x140>  // b.none
  40ff30:	add	x0, sp, #0x28
  40ff34:	mov	x2, x0
  40ff38:	mov	x1, #0x4521                	// #17697
  40ff3c:	movk	x1, #0x8030, lsl #16
  40ff40:	ldr	w0, [sp, #28]
  40ff44:	bl	407e30 <ioctl@plt>
  40ff48:	cmp	w0, #0x0
  40ff4c:	b.ge	40ff60 <button_suitable+0xd8>  // b.tcont
  40ff50:	bl	407960 <__errno_location@plt>
  40ff54:	ldr	w0, [x0]
  40ff58:	neg	w0, w0
  40ff5c:	b	41004c <button_suitable+0x1c4>
  40ff60:	add	x0, sp, #0x28
  40ff64:	mov	w1, #0x74                  	// #116
  40ff68:	bl	40f390 <bitset_get>
  40ff6c:	and	w0, w0, #0xff
  40ff70:	cmp	w0, #0x0
  40ff74:	b.ne	40ffc0 <button_suitable+0x138>  // b.any
  40ff78:	add	x0, sp, #0x28
  40ff7c:	mov	w1, #0x164                 	// #356
  40ff80:	bl	40f390 <bitset_get>
  40ff84:	and	w0, w0, #0xff
  40ff88:	cmp	w0, #0x0
  40ff8c:	b.ne	40ffc0 <button_suitable+0x138>  // b.any
  40ff90:	add	x0, sp, #0x28
  40ff94:	mov	w1, #0x8e                  	// #142
  40ff98:	bl	40f390 <bitset_get>
  40ff9c:	and	w0, w0, #0xff
  40ffa0:	cmp	w0, #0x0
  40ffa4:	b.ne	40ffc0 <button_suitable+0x138>  // b.any
  40ffa8:	add	x0, sp, #0x28
  40ffac:	mov	w1, #0xcd                  	// #205
  40ffb0:	bl	40f390 <bitset_get>
  40ffb4:	and	w0, w0, #0xff
  40ffb8:	cmp	w0, #0x0
  40ffbc:	b.eq	40ffc8 <button_suitable+0x140>  // b.none
  40ffc0:	mov	w0, #0x1                   	// #1
  40ffc4:	b	41004c <button_suitable+0x1c4>
  40ffc8:	add	x0, sp, #0x20
  40ffcc:	mov	w1, #0x5                   	// #5
  40ffd0:	bl	40f390 <bitset_get>
  40ffd4:	and	w0, w0, #0xff
  40ffd8:	cmp	w0, #0x0
  40ffdc:	b.eq	410048 <button_suitable+0x1c0>  // b.none
  40ffe0:	add	x0, sp, #0x28
  40ffe4:	mov	x2, x0
  40ffe8:	mov	x1, #0x4525                	// #17701
  40ffec:	movk	x1, #0x8008, lsl #16
  40fff0:	ldr	w0, [sp, #28]
  40fff4:	bl	407e30 <ioctl@plt>
  40fff8:	cmp	w0, #0x0
  40fffc:	b.ge	410010 <button_suitable+0x188>  // b.tcont
  410000:	bl	407960 <__errno_location@plt>
  410004:	ldr	w0, [x0]
  410008:	neg	w0, w0
  41000c:	b	41004c <button_suitable+0x1c4>
  410010:	add	x0, sp, #0x28
  410014:	mov	w1, #0x0                   	// #0
  410018:	bl	40f390 <bitset_get>
  41001c:	and	w0, w0, #0xff
  410020:	cmp	w0, #0x0
  410024:	b.ne	410040 <button_suitable+0x1b8>  // b.any
  410028:	add	x0, sp, #0x28
  41002c:	mov	w1, #0x5                   	// #5
  410030:	bl	40f390 <bitset_get>
  410034:	and	w0, w0, #0xff
  410038:	cmp	w0, #0x0
  41003c:	b.eq	410048 <button_suitable+0x1c0>  // b.none
  410040:	mov	w0, #0x1                   	// #1
  410044:	b	41004c <button_suitable+0x1c4>
  410048:	mov	w0, #0x0                   	// #0
  41004c:	mov	w1, w0
  410050:	adrp	x0, 460000 <wordlist.10364+0x370>
  410054:	ldr	x0, [x0, #4024]
  410058:	ldr	x2, [sp, #88]
  41005c:	ldr	x0, [x0]
  410060:	eor	x0, x2, x0
  410064:	cmp	x0, #0x0
  410068:	b.eq	410070 <button_suitable+0x1e8>  // b.none
  41006c:	bl	407b20 <__stack_chk_fail@plt>
  410070:	mov	w0, w1
  410074:	ldp	x29, x30, [sp], #96
  410078:	ret

000000000041007c <button_set_mask>:
  41007c:	stp	x29, x30, [sp, #-160]!
  410080:	mov	x29, sp
  410084:	str	x0, [sp, #24]
  410088:	str	w1, [sp, #20]
  41008c:	adrp	x0, 460000 <wordlist.10364+0x370>
  410090:	ldr	x0, [x0, #4024]
  410094:	ldr	x1, [x0]
  410098:	str	x1, [sp, #152]
  41009c:	mov	x1, #0x0                   	// #0
  4100a0:	str	xzr, [sp, #88]
  4100a4:	stp	xzr, xzr, [sp, #104]
  4100a8:	stp	xzr, xzr, [sp, #120]
  4100ac:	stp	xzr, xzr, [sp, #136]
  4100b0:	str	xzr, [sp, #96]
  4100b4:	ldr	x0, [sp, #24]
  4100b8:	cmp	x0, #0x0
  4100bc:	cset	w0, eq  // eq = none
  4100c0:	and	w0, w0, #0xff
  4100c4:	and	x0, x0, #0xff
  4100c8:	cmp	x0, #0x0
  4100cc:	b.eq	4100f8 <button_set_mask+0x7c>  // b.none
  4100d0:	adrp	x0, 43d000 <_fini+0xdb0>
  4100d4:	add	x1, x0, #0xbe3
  4100d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4100dc:	add	x4, x0, #0x150
  4100e0:	mov	w3, #0x10b                 	// #267
  4100e4:	mov	x2, x1
  4100e8:	adrp	x0, 43d000 <_fini+0xdb0>
  4100ec:	add	x1, x0, #0xc08
  4100f0:	mov	w0, #0x0                   	// #0
  4100f4:	bl	407650 <log_assert_failed_realm@plt>
  4100f8:	ldr	w0, [sp, #20]
  4100fc:	lsr	w0, w0, #31
  410100:	and	w0, w0, #0xff
  410104:	and	x0, x0, #0xff
  410108:	cmp	x0, #0x0
  41010c:	b.eq	410138 <button_set_mask+0xbc>  // b.none
  410110:	adrp	x0, 43d000 <_fini+0xdb0>
  410114:	add	x1, x0, #0xbe3
  410118:	adrp	x0, 43e000 <__func__.12250+0x440>
  41011c:	add	x4, x0, #0x150
  410120:	mov	w3, #0x10c                 	// #268
  410124:	mov	x2, x1
  410128:	adrp	x0, 43d000 <_fini+0xdb0>
  41012c:	add	x1, x0, #0xe68
  410130:	mov	w0, #0x0                   	// #0
  410134:	bl	407650 <log_assert_failed_realm@plt>
  410138:	add	x0, sp, #0x58
  41013c:	mov	w1, #0x1                   	// #1
  410140:	bl	40f3dc <bitset_put>
  410144:	add	x0, sp, #0x58
  410148:	mov	w1, #0x5                   	// #5
  41014c:	bl	40f3dc <bitset_put>
  410150:	add	x0, sp, #0x58
  410154:	str	wzr, [sp, #72]
  410158:	mov	w1, #0x8                   	// #8
  41015c:	str	w1, [sp, #76]
  410160:	str	x0, [sp, #80]
  410164:	add	x0, sp, #0x48
  410168:	mov	x2, x0
  41016c:	mov	x1, #0x4593                	// #17811
  410170:	movk	x1, #0x4010, lsl #16
  410174:	ldr	w0, [sp, #20]
  410178:	bl	407e30 <ioctl@plt>
  41017c:	cmp	w0, #0x0
  410180:	b.ge	410260 <button_set_mask+0x1e4>  // b.tcont
  410184:	strb	wzr, [sp, #35]
  410188:	bl	407960 <__errno_location@plt>
  41018c:	ldr	w0, [x0]
  410190:	cmp	w0, #0x5f
  410194:	b.eq	4101b0 <button_set_mask+0x134>  // b.none
  410198:	cmp	w0, #0x5f
  41019c:	b.gt	4101b8 <button_set_mask+0x13c>
  4101a0:	cmp	w0, #0x16
  4101a4:	b.eq	4101b0 <button_set_mask+0x134>  // b.none
  4101a8:	cmp	w0, #0x19
  4101ac:	b.ne	4101b8 <button_set_mask+0x13c>  // b.any
  4101b0:	mov	w0, #0x1                   	// #1
  4101b4:	strb	w0, [sp, #35]
  4101b8:	nop
  4101bc:	ldrb	w0, [sp, #35]
  4101c0:	cmp	w0, #0x0
  4101c4:	b.eq	4101d0 <button_set_mask+0x154>  // b.none
  4101c8:	mov	w0, #0x7                   	// #7
  4101cc:	b	4101d4 <button_set_mask+0x158>
  4101d0:	mov	w0, #0x4                   	// #4
  4101d4:	str	w0, [sp, #60]
  4101d8:	bl	407960 <__errno_location@plt>
  4101dc:	ldr	w0, [x0]
  4101e0:	str	w0, [sp, #64]
  4101e4:	str	wzr, [sp, #68]
  4101e8:	ldr	w0, [sp, #68]
  4101ec:	bl	4083e0 <log_get_max_level_realm@plt>
  4101f0:	mov	w1, w0
  4101f4:	ldr	w0, [sp, #60]
  4101f8:	and	w0, w0, #0x7
  4101fc:	cmp	w1, w0
  410200:	b.lt	410248 <button_set_mask+0x1cc>  // b.tstop
  410204:	ldr	w0, [sp, #68]
  410208:	lsl	w1, w0, #10
  41020c:	ldr	w0, [sp, #60]
  410210:	orr	w7, w1, w0
  410214:	adrp	x0, 43d000 <_fini+0xdb0>
  410218:	add	x1, x0, #0xbe3
  41021c:	ldr	x6, [sp, #24]
  410220:	adrp	x0, 43d000 <_fini+0xdb0>
  410224:	add	x5, x0, #0xe70
  410228:	adrp	x0, 43e000 <__func__.12250+0x440>
  41022c:	add	x4, x0, #0x160
  410230:	mov	w3, #0x119                 	// #281
  410234:	mov	x2, x1
  410238:	ldr	w1, [sp, #64]
  41023c:	mov	w0, w7
  410240:	bl	407d60 <log_internal_realm@plt>
  410244:	b	41043c <button_set_mask+0x3c0>
  410248:	ldr	w0, [sp, #64]
  41024c:	cmp	w0, #0x0
  410250:	cneg	w0, w0, lt  // lt = tstop
  410254:	and	w0, w0, #0xff
  410258:	neg	w0, w0
  41025c:	b	41043c <button_set_mask+0x3c0>
  410260:	add	x0, sp, #0x68
  410264:	mov	w1, #0x74                  	// #116
  410268:	bl	40f3dc <bitset_put>
  41026c:	add	x0, sp, #0x68
  410270:	mov	w1, #0x164                 	// #356
  410274:	bl	40f3dc <bitset_put>
  410278:	add	x0, sp, #0x68
  41027c:	mov	w1, #0x8e                  	// #142
  410280:	bl	40f3dc <bitset_put>
  410284:	add	x0, sp, #0x68
  410288:	mov	w1, #0xcd                  	// #205
  41028c:	bl	40f3dc <bitset_put>
  410290:	add	x0, sp, #0x68
  410294:	mov	w1, #0x1                   	// #1
  410298:	str	w1, [sp, #72]
  41029c:	mov	w1, #0x30                  	// #48
  4102a0:	str	w1, [sp, #76]
  4102a4:	str	x0, [sp, #80]
  4102a8:	add	x0, sp, #0x48
  4102ac:	mov	x2, x0
  4102b0:	mov	x1, #0x4593                	// #17811
  4102b4:	movk	x1, #0x4010, lsl #16
  4102b8:	ldr	w0, [sp, #20]
  4102bc:	bl	407e30 <ioctl@plt>
  4102c0:	cmp	w0, #0x0
  4102c4:	b.ge	410358 <button_set_mask+0x2dc>  // b.tcont
  4102c8:	mov	w0, #0x4                   	// #4
  4102cc:	str	w0, [sp, #48]
  4102d0:	bl	407960 <__errno_location@plt>
  4102d4:	ldr	w0, [x0]
  4102d8:	str	w0, [sp, #52]
  4102dc:	str	wzr, [sp, #56]
  4102e0:	ldr	w0, [sp, #56]
  4102e4:	bl	4083e0 <log_get_max_level_realm@plt>
  4102e8:	mov	w1, w0
  4102ec:	ldr	w0, [sp, #48]
  4102f0:	and	w0, w0, #0x7
  4102f4:	cmp	w1, w0
  4102f8:	b.lt	410340 <button_set_mask+0x2c4>  // b.tstop
  4102fc:	ldr	w0, [sp, #56]
  410300:	lsl	w1, w0, #10
  410304:	ldr	w0, [sp, #48]
  410308:	orr	w7, w1, w0
  41030c:	adrp	x0, 43d000 <_fini+0xdb0>
  410310:	add	x1, x0, #0xbe3
  410314:	ldr	x6, [sp, #24]
  410318:	adrp	x0, 43d000 <_fini+0xdb0>
  41031c:	add	x5, x0, #0xea8
  410320:	adrp	x0, 43e000 <__func__.12250+0x440>
  410324:	add	x4, x0, #0x160
  410328:	mov	w3, #0x128                 	// #296
  41032c:	mov	x2, x1
  410330:	ldr	w1, [sp, #52]
  410334:	mov	w0, w7
  410338:	bl	407d60 <log_internal_realm@plt>
  41033c:	b	41043c <button_set_mask+0x3c0>
  410340:	ldr	w0, [sp, #52]
  410344:	cmp	w0, #0x0
  410348:	cneg	w0, w0, lt  // lt = tstop
  41034c:	and	w0, w0, #0xff
  410350:	neg	w0, w0
  410354:	b	41043c <button_set_mask+0x3c0>
  410358:	add	x0, sp, #0x60
  41035c:	mov	w1, #0x0                   	// #0
  410360:	bl	40f3dc <bitset_put>
  410364:	add	x0, sp, #0x60
  410368:	mov	w1, #0x5                   	// #5
  41036c:	bl	40f3dc <bitset_put>
  410370:	add	x0, sp, #0x60
  410374:	mov	w1, #0x5                   	// #5
  410378:	str	w1, [sp, #72]
  41037c:	mov	w1, #0x8                   	// #8
  410380:	str	w1, [sp, #76]
  410384:	str	x0, [sp, #80]
  410388:	add	x0, sp, #0x48
  41038c:	mov	x2, x0
  410390:	mov	x1, #0x4593                	// #17811
  410394:	movk	x1, #0x4010, lsl #16
  410398:	ldr	w0, [sp, #20]
  41039c:	bl	407e30 <ioctl@plt>
  4103a0:	cmp	w0, #0x0
  4103a4:	b.ge	410438 <button_set_mask+0x3bc>  // b.tcont
  4103a8:	mov	w0, #0x4                   	// #4
  4103ac:	str	w0, [sp, #36]
  4103b0:	bl	407960 <__errno_location@plt>
  4103b4:	ldr	w0, [x0]
  4103b8:	str	w0, [sp, #40]
  4103bc:	str	wzr, [sp, #44]
  4103c0:	ldr	w0, [sp, #44]
  4103c4:	bl	4083e0 <log_get_max_level_realm@plt>
  4103c8:	mov	w1, w0
  4103cc:	ldr	w0, [sp, #36]
  4103d0:	and	w0, w0, #0x7
  4103d4:	cmp	w1, w0
  4103d8:	b.lt	410420 <button_set_mask+0x3a4>  // b.tstop
  4103dc:	ldr	w0, [sp, #44]
  4103e0:	lsl	w1, w0, #10
  4103e4:	ldr	w0, [sp, #36]
  4103e8:	orr	w7, w1, w0
  4103ec:	adrp	x0, 43d000 <_fini+0xdb0>
  4103f0:	add	x1, x0, #0xbe3
  4103f4:	ldr	x6, [sp, #24]
  4103f8:	adrp	x0, 43d000 <_fini+0xdb0>
  4103fc:	add	x5, x0, #0xee0
  410400:	adrp	x0, 43e000 <__func__.12250+0x440>
  410404:	add	x4, x0, #0x160
  410408:	mov	w3, #0x134                 	// #308
  41040c:	mov	x2, x1
  410410:	ldr	w1, [sp, #40]
  410414:	mov	w0, w7
  410418:	bl	407d60 <log_internal_realm@plt>
  41041c:	b	41043c <button_set_mask+0x3c0>
  410420:	ldr	w0, [sp, #40]
  410424:	cmp	w0, #0x0
  410428:	cneg	w0, w0, lt  // lt = tstop
  41042c:	and	w0, w0, #0xff
  410430:	neg	w0, w0
  410434:	b	41043c <button_set_mask+0x3c0>
  410438:	mov	w0, #0x0                   	// #0
  41043c:	mov	w1, w0
  410440:	adrp	x0, 460000 <wordlist.10364+0x370>
  410444:	ldr	x0, [x0, #4024]
  410448:	ldr	x2, [sp, #152]
  41044c:	ldr	x0, [x0]
  410450:	eor	x0, x2, x0
  410454:	cmp	x0, #0x0
  410458:	b.eq	410460 <button_set_mask+0x3e4>  // b.none
  41045c:	bl	407b20 <__stack_chk_fail@plt>
  410460:	mov	w0, w1
  410464:	ldp	x29, x30, [sp], #160
  410468:	ret

000000000041046c <button_open>:
  41046c:	stp	x29, x30, [sp, #-464]!
  410470:	mov	x29, sp
  410474:	str	x19, [sp, #16]
  410478:	str	x0, [x29, #40]
  41047c:	adrp	x0, 460000 <wordlist.10364+0x370>
  410480:	ldr	x0, [x0, #4024]
  410484:	ldr	x1, [x0]
  410488:	str	x1, [x29, #456]
  41048c:	mov	x1, #0x0                   	// #0
  410490:	mov	w0, #0xffffffff            	// #-1
  410494:	str	w0, [x29, #52]
  410498:	ldr	x0, [x29, #40]
  41049c:	cmp	x0, #0x0
  4104a0:	cset	w0, eq  // eq = none
  4104a4:	and	w0, w0, #0xff
  4104a8:	and	x0, x0, #0xff
  4104ac:	cmp	x0, #0x0
  4104b0:	b.eq	4104dc <button_open+0x70>  // b.none
  4104b4:	adrp	x0, 43d000 <_fini+0xdb0>
  4104b8:	add	x1, x0, #0xbe3
  4104bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4104c0:	add	x4, x0, #0x170
  4104c4:	mov	w3, #0x13f                 	// #319
  4104c8:	mov	x2, x1
  4104cc:	adrp	x0, 43d000 <_fini+0xdb0>
  4104d0:	add	x1, x0, #0xc10
  4104d4:	mov	w0, #0x0                   	// #0
  4104d8:	bl	407650 <log_assert_failed_realm@plt>
  4104dc:	ldr	x0, [x29, #40]
  4104e0:	ldr	w0, [x0, #40]
  4104e4:	bl	4075e0 <safe_close@plt>
  4104e8:	mov	w1, w0
  4104ec:	ldr	x0, [x29, #40]
  4104f0:	str	w1, [x0, #40]
  4104f4:	adrp	x0, 43d000 <_fini+0xdb0>
  4104f8:	add	x0, x0, #0xf18
  4104fc:	str	x0, [x29, #184]
  410500:	ldr	x0, [x29, #40]
  410504:	ldr	x0, [x0, #24]
  410508:	str	x0, [x29, #192]
  41050c:	str	xzr, [x29, #144]
  410510:	str	xzr, [x29, #152]
  410514:	b	410548 <button_open+0xdc>
  410518:	ldr	x0, [x29, #152]
  41051c:	lsl	x0, x0, #3
  410520:	add	x1, x29, #0xb8
  410524:	ldr	x0, [x1, x0]
  410528:	bl	4082f0 <strlen@plt>
  41052c:	mov	x1, x0
  410530:	ldr	x0, [x29, #144]
  410534:	add	x0, x0, x1
  410538:	str	x0, [x29, #144]
  41053c:	ldr	x0, [x29, #152]
  410540:	add	x0, x0, #0x1
  410544:	str	x0, [x29, #152]
  410548:	ldr	x0, [x29, #152]
  41054c:	cmp	x0, #0x1
  410550:	b.hi	41056c <button_open+0x100>  // b.pmore
  410554:	ldr	x0, [x29, #152]
  410558:	lsl	x0, x0, #3
  41055c:	add	x1, x29, #0xb8
  410560:	ldr	x0, [x1, x0]
  410564:	cmp	x0, #0x0
  410568:	b.ne	410518 <button_open+0xac>  // b.any
  41056c:	ldr	x0, [x29, #144]
  410570:	add	x0, x0, #0x1
  410574:	str	x0, [x29, #160]
  410578:	ldr	x1, [x29, #160]
  41057c:	mov	x0, #0x1                   	// #1
  410580:	bl	40f2cc <size_multiply_overflow>
  410584:	and	w0, w0, #0xff
  410588:	and	x0, x0, #0xff
  41058c:	cmp	x0, #0x0
  410590:	b.eq	4105bc <button_open+0x150>  // b.none
  410594:	adrp	x0, 43d000 <_fini+0xdb0>
  410598:	add	x1, x0, #0xbe3
  41059c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4105a0:	add	x4, x0, #0x170
  4105a4:	mov	w3, #0x143                 	// #323
  4105a8:	mov	x2, x1
  4105ac:	adrp	x0, 43d000 <_fini+0xdb0>
  4105b0:	add	x1, x0, #0xf28
  4105b4:	mov	w0, #0x0                   	// #0
  4105b8:	bl	407650 <log_assert_failed_realm@plt>
  4105bc:	ldr	x0, [x29, #160]
  4105c0:	cmp	x0, #0x400, lsl #12
  4105c4:	cset	w0, hi  // hi = pmore
  4105c8:	and	w0, w0, #0xff
  4105cc:	and	x0, x0, #0xff
  4105d0:	cmp	x0, #0x0
  4105d4:	b.eq	410600 <button_open+0x194>  // b.none
  4105d8:	adrp	x0, 43d000 <_fini+0xdb0>
  4105dc:	add	x1, x0, #0xbe3
  4105e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4105e4:	add	x4, x0, #0x170
  4105e8:	mov	w3, #0x143                 	// #323
  4105ec:	mov	x2, x1
  4105f0:	adrp	x0, 43d000 <_fini+0xdb0>
  4105f4:	add	x1, x0, #0xf58
  4105f8:	mov	w0, #0x0                   	// #0
  4105fc:	bl	407650 <log_assert_failed_realm@plt>
  410600:	ldr	x0, [x29, #160]
  410604:	add	x0, x0, #0xf
  410608:	lsr	x0, x0, #4
  41060c:	lsl	x0, x0, #4
  410610:	sub	sp, sp, x0
  410614:	mov	x0, sp
  410618:	add	x0, x0, #0xf
  41061c:	lsr	x0, x0, #4
  410620:	lsl	x0, x0, #4
  410624:	str	x0, [x29, #168]
  410628:	ldr	x0, [x29, #168]
  41062c:	str	x0, [x29, #136]
  410630:	str	xzr, [x29, #152]
  410634:	b	410664 <button_open+0x1f8>
  410638:	ldr	x0, [x29, #152]
  41063c:	lsl	x0, x0, #3
  410640:	add	x1, x29, #0xb8
  410644:	ldr	x0, [x1, x0]
  410648:	mov	x1, x0
  41064c:	ldr	x0, [x29, #136]
  410650:	bl	407160 <stpcpy@plt>
  410654:	str	x0, [x29, #136]
  410658:	ldr	x0, [x29, #152]
  41065c:	add	x0, x0, #0x1
  410660:	str	x0, [x29, #152]
  410664:	ldr	x0, [x29, #152]
  410668:	cmp	x0, #0x1
  41066c:	b.hi	410688 <button_open+0x21c>  // b.pmore
  410670:	ldr	x0, [x29, #152]
  410674:	lsl	x0, x0, #3
  410678:	add	x1, x29, #0xb8
  41067c:	ldr	x0, [x1, x0]
  410680:	cmp	x0, #0x0
  410684:	b.ne	410638 <button_open+0x1cc>  // b.any
  410688:	ldr	x0, [x29, #136]
  41068c:	strb	wzr, [x0]
  410690:	ldr	x0, [x29, #168]
  410694:	str	x0, [x29, #176]
  410698:	mov	w1, #0x902                 	// #2306
  41069c:	movk	w1, #0x8, lsl #16
  4106a0:	ldr	x0, [x29, #176]
  4106a4:	bl	4082c0 <open64@plt>
  4106a8:	str	w0, [x29, #52]
  4106ac:	ldr	w0, [x29, #52]
  4106b0:	cmp	w0, #0x0
  4106b4:	b.ge	41074c <button_open+0x2e0>  // b.tcont
  4106b8:	mov	w0, #0x4                   	// #4
  4106bc:	str	w0, [x29, #124]
  4106c0:	bl	407960 <__errno_location@plt>
  4106c4:	ldr	w0, [x0]
  4106c8:	str	w0, [x29, #128]
  4106cc:	str	wzr, [x29, #132]
  4106d0:	ldr	w0, [x29, #132]
  4106d4:	bl	4083e0 <log_get_max_level_realm@plt>
  4106d8:	mov	w1, w0
  4106dc:	ldr	w0, [x29, #124]
  4106e0:	and	w0, w0, #0x7
  4106e4:	cmp	w1, w0
  4106e8:	b.lt	410734 <button_open+0x2c8>  // b.tstop
  4106ec:	ldr	w0, [x29, #132]
  4106f0:	lsl	w1, w0, #10
  4106f4:	ldr	w0, [x29, #124]
  4106f8:	orr	w7, w1, w0
  4106fc:	adrp	x0, 43d000 <_fini+0xdb0>
  410700:	add	x1, x0, #0xbe3
  410704:	ldr	x6, [x29, #176]
  410708:	adrp	x0, 43d000 <_fini+0xdb0>
  41070c:	add	x5, x0, #0xf78
  410710:	adrp	x0, 43e000 <__func__.12250+0x440>
  410714:	add	x4, x0, #0x180
  410718:	mov	w3, #0x147                 	// #327
  41071c:	mov	x2, x1
  410720:	ldr	w1, [x29, #128]
  410724:	mov	w0, w7
  410728:	bl	407d60 <log_internal_realm@plt>
  41072c:	mov	w19, w0
  410730:	b	410ae0 <button_open+0x674>
  410734:	ldr	w0, [x29, #128]
  410738:	cmp	w0, #0x0
  41073c:	cneg	w0, w0, lt  // lt = tstop
  410740:	and	w0, w0, #0xff
  410744:	neg	w19, w0
  410748:	b	410ae0 <button_open+0x674>
  41074c:	ldr	w0, [x29, #52]
  410750:	bl	40fe88 <button_suitable>
  410754:	str	w0, [x29, #56]
  410758:	ldr	w0, [x29, #56]
  41075c:	cmp	w0, #0x0
  410760:	b.ge	4107f4 <button_open+0x388>  // b.tcont
  410764:	mov	w0, #0x4                   	// #4
  410768:	str	w0, [x29, #112]
  41076c:	ldr	w0, [x29, #56]
  410770:	str	w0, [x29, #116]
  410774:	str	wzr, [x29, #120]
  410778:	ldr	w0, [x29, #120]
  41077c:	bl	4083e0 <log_get_max_level_realm@plt>
  410780:	mov	w1, w0
  410784:	ldr	w0, [x29, #112]
  410788:	and	w0, w0, #0x7
  41078c:	cmp	w1, w0
  410790:	b.lt	4107dc <button_open+0x370>  // b.tstop
  410794:	ldr	w0, [x29, #120]
  410798:	lsl	w1, w0, #10
  41079c:	ldr	w0, [x29, #112]
  4107a0:	orr	w7, w1, w0
  4107a4:	adrp	x0, 43d000 <_fini+0xdb0>
  4107a8:	add	x1, x0, #0xbe3
  4107ac:	ldr	x6, [x29, #176]
  4107b0:	adrp	x0, 43d000 <_fini+0xdb0>
  4107b4:	add	x5, x0, #0xf90
  4107b8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4107bc:	add	x4, x0, #0x180
  4107c0:	mov	w3, #0x14b                 	// #331
  4107c4:	mov	x2, x1
  4107c8:	ldr	w1, [x29, #116]
  4107cc:	mov	w0, w7
  4107d0:	bl	407d60 <log_internal_realm@plt>
  4107d4:	mov	w19, w0
  4107d8:	b	410ae0 <button_open+0x674>
  4107dc:	ldr	w0, [x29, #116]
  4107e0:	cmp	w0, #0x0
  4107e4:	cneg	w0, w0, lt  // lt = tstop
  4107e8:	and	w0, w0, #0xff
  4107ec:	neg	w19, w0
  4107f0:	b	410ae0 <button_open+0x674>
  4107f4:	ldr	w0, [x29, #56]
  4107f8:	cmp	w0, #0x0
  4107fc:	b.ne	410894 <button_open+0x428>  // b.any
  410800:	mov	w0, #0x7                   	// #7
  410804:	str	w0, [x29, #100]
  410808:	mov	w0, #0x63                  	// #99
  41080c:	movk	w0, #0x4000, lsl #16
  410810:	str	w0, [x29, #104]
  410814:	str	wzr, [x29, #108]
  410818:	ldr	w0, [x29, #108]
  41081c:	bl	4083e0 <log_get_max_level_realm@plt>
  410820:	mov	w1, w0
  410824:	ldr	w0, [x29, #100]
  410828:	and	w0, w0, #0x7
  41082c:	cmp	w1, w0
  410830:	b.lt	41087c <button_open+0x410>  // b.tstop
  410834:	ldr	w0, [x29, #108]
  410838:	lsl	w1, w0, #10
  41083c:	ldr	w0, [x29, #100]
  410840:	orr	w7, w1, w0
  410844:	adrp	x0, 43d000 <_fini+0xdb0>
  410848:	add	x1, x0, #0xbe3
  41084c:	ldr	x6, [x29, #176]
  410850:	adrp	x0, 43d000 <_fini+0xdb0>
  410854:	add	x5, x0, #0xfd8
  410858:	adrp	x0, 43e000 <__func__.12250+0x440>
  41085c:	add	x4, x0, #0x180
  410860:	mov	w3, #0x14d                 	// #333
  410864:	mov	x2, x1
  410868:	ldr	w1, [x29, #104]
  41086c:	mov	w0, w7
  410870:	bl	407d60 <log_internal_realm@plt>
  410874:	mov	w19, w0
  410878:	b	410ae0 <button_open+0x674>
  41087c:	ldr	w0, [x29, #104]
  410880:	cmp	w0, #0x0
  410884:	cneg	w0, w0, lt  // lt = tstop
  410888:	and	w0, w0, #0xff
  41088c:	neg	w19, w0
  410890:	b	410ae0 <button_open+0x674>
  410894:	ldr	w0, [x29, #52]
  410898:	add	x1, x29, #0xc8
  41089c:	mov	x2, x1
  4108a0:	mov	x1, #0x4506                	// #17670
  4108a4:	movk	x1, #0x8100, lsl #16
  4108a8:	bl	407e30 <ioctl@plt>
  4108ac:	cmp	w0, #0x0
  4108b0:	b.ge	410948 <button_open+0x4dc>  // b.tcont
  4108b4:	mov	w0, #0x3                   	// #3
  4108b8:	str	w0, [x29, #88]
  4108bc:	bl	407960 <__errno_location@plt>
  4108c0:	ldr	w0, [x0]
  4108c4:	str	w0, [x29, #92]
  4108c8:	str	wzr, [x29, #96]
  4108cc:	ldr	w0, [x29, #96]
  4108d0:	bl	4083e0 <log_get_max_level_realm@plt>
  4108d4:	mov	w1, w0
  4108d8:	ldr	w0, [x29, #88]
  4108dc:	and	w0, w0, #0x7
  4108e0:	cmp	w1, w0
  4108e4:	b.lt	410930 <button_open+0x4c4>  // b.tstop
  4108e8:	ldr	w0, [x29, #96]
  4108ec:	lsl	w1, w0, #10
  4108f0:	ldr	w0, [x29, #88]
  4108f4:	orr	w7, w1, w0
  4108f8:	adrp	x0, 43d000 <_fini+0xdb0>
  4108fc:	add	x1, x0, #0xbe3
  410900:	ldr	x6, [x29, #176]
  410904:	adrp	x0, 43e000 <__func__.12250+0x440>
  410908:	add	x5, x0, #0x20
  41090c:	adrp	x0, 43e000 <__func__.12250+0x440>
  410910:	add	x4, x0, #0x180
  410914:	mov	w3, #0x151                 	// #337
  410918:	mov	x2, x1
  41091c:	ldr	w1, [x29, #92]
  410920:	mov	w0, w7
  410924:	bl	407d60 <log_internal_realm@plt>
  410928:	mov	w19, w0
  41092c:	b	410ae0 <button_open+0x674>
  410930:	ldr	w0, [x29, #92]
  410934:	cmp	w0, #0x0
  410938:	cneg	w0, w0, lt  // lt = tstop
  41093c:	and	w0, w0, #0xff
  410940:	neg	w19, w0
  410944:	b	410ae0 <button_open+0x674>
  410948:	ldr	x0, [x29, #40]
  41094c:	ldr	x0, [x0, #24]
  410950:	ldr	w1, [x29, #52]
  410954:	bl	41007c <button_set_mask>
  410958:	ldr	x0, [x29, #40]
  41095c:	ldr	x0, [x0, #8]
  410960:	bl	407550 <sd_event_source_unref@plt>
  410964:	mov	x1, x0
  410968:	ldr	x0, [x29, #40]
  41096c:	str	x1, [x0, #8]
  410970:	ldr	x0, [x29, #40]
  410974:	ldr	x0, [x0]
  410978:	ldr	x6, [x0]
  41097c:	ldr	x0, [x29, #40]
  410980:	add	x1, x0, #0x8
  410984:	ldr	w2, [x29, #52]
  410988:	ldr	x5, [x29, #40]
  41098c:	adrp	x0, 40f000 <manager_handle_action+0x9cc>
  410990:	add	x4, x0, #0x990
  410994:	mov	w3, #0x1                   	// #1
  410998:	mov	x0, x6
  41099c:	bl	407eb0 <sd_event_add_io@plt>
  4109a0:	str	w0, [x29, #56]
  4109a4:	ldr	w0, [x29, #56]
  4109a8:	cmp	w0, #0x0
  4109ac:	b.ge	410a40 <button_open+0x5d4>  // b.tcont
  4109b0:	mov	w0, #0x3                   	// #3
  4109b4:	str	w0, [x29, #76]
  4109b8:	ldr	w0, [x29, #56]
  4109bc:	str	w0, [x29, #80]
  4109c0:	str	wzr, [x29, #84]
  4109c4:	ldr	w0, [x29, #84]
  4109c8:	bl	4083e0 <log_get_max_level_realm@plt>
  4109cc:	mov	w1, w0
  4109d0:	ldr	w0, [x29, #76]
  4109d4:	and	w0, w0, #0x7
  4109d8:	cmp	w1, w0
  4109dc:	b.lt	410a28 <button_open+0x5bc>  // b.tstop
  4109e0:	ldr	w0, [x29, #84]
  4109e4:	lsl	w1, w0, #10
  4109e8:	ldr	w0, [x29, #76]
  4109ec:	orr	w7, w1, w0
  4109f0:	adrp	x0, 43d000 <_fini+0xdb0>
  4109f4:	add	x1, x0, #0xbe3
  4109f8:	ldr	x6, [x29, #176]
  4109fc:	adrp	x0, 43e000 <__func__.12250+0x440>
  410a00:	add	x5, x0, #0x48
  410a04:	adrp	x0, 43e000 <__func__.12250+0x440>
  410a08:	add	x4, x0, #0x180
  410a0c:	mov	w3, #0x158                 	// #344
  410a10:	mov	x2, x1
  410a14:	ldr	w1, [x29, #80]
  410a18:	mov	w0, w7
  410a1c:	bl	407d60 <log_internal_realm@plt>
  410a20:	mov	w19, w0
  410a24:	b	410ae0 <button_open+0x674>
  410a28:	ldr	w0, [x29, #80]
  410a2c:	cmp	w0, #0x0
  410a30:	cneg	w0, w0, lt  // lt = tstop
  410a34:	and	w0, w0, #0xff
  410a38:	neg	w19, w0
  410a3c:	b	410ae0 <button_open+0x674>
  410a40:	ldr	w0, [x29, #52]
  410a44:	str	w0, [x29, #60]
  410a48:	mov	w0, #0xffffffff            	// #-1
  410a4c:	str	w0, [x29, #52]
  410a50:	ldr	w1, [x29, #60]
  410a54:	ldr	x0, [x29, #40]
  410a58:	str	w1, [x0, #40]
  410a5c:	mov	w0, #0x6                   	// #6
  410a60:	str	w0, [x29, #64]
  410a64:	str	wzr, [x29, #68]
  410a68:	str	wzr, [x29, #72]
  410a6c:	ldr	w0, [x29, #72]
  410a70:	bl	4083e0 <log_get_max_level_realm@plt>
  410a74:	mov	w1, w0
  410a78:	ldr	w0, [x29, #64]
  410a7c:	and	w0, w0, #0x7
  410a80:	cmp	w1, w0
  410a84:	b.lt	410ad4 <button_open+0x668>  // b.tstop
  410a88:	ldr	w0, [x29, #72]
  410a8c:	lsl	w1, w0, #10
  410a90:	ldr	w0, [x29, #64]
  410a94:	orr	w8, w1, w0
  410a98:	adrp	x0, 43d000 <_fini+0xdb0>
  410a9c:	add	x1, x0, #0xbe3
  410aa0:	add	x0, x29, #0xc8
  410aa4:	mov	x7, x0
  410aa8:	ldr	x6, [x29, #176]
  410aac:	adrp	x0, 43e000 <__func__.12250+0x440>
  410ab0:	add	x5, x0, #0x70
  410ab4:	adrp	x0, 43e000 <__func__.12250+0x440>
  410ab8:	add	x4, x0, #0x180
  410abc:	mov	w3, #0x15b                 	// #347
  410ac0:	mov	x2, x1
  410ac4:	ldr	w1, [x29, #68]
  410ac8:	mov	w0, w8
  410acc:	bl	407d60 <log_internal_realm@plt>
  410ad0:	b	410adc <button_open+0x670>
  410ad4:	ldr	w0, [x29, #68]
  410ad8:	cmp	w0, #0x0
  410adc:	mov	w19, #0x0                   	// #0
  410ae0:	add	x0, x29, #0x34
  410ae4:	bl	40f348 <closep>
  410ae8:	mov	w1, w19
  410aec:	adrp	x0, 460000 <wordlist.10364+0x370>
  410af0:	ldr	x0, [x0, #4024]
  410af4:	ldr	x2, [x29, #456]
  410af8:	ldr	x0, [x0]
  410afc:	eor	x0, x2, x0
  410b00:	cmp	x0, #0x0
  410b04:	b.eq	410b0c <button_open+0x6a0>  // b.none
  410b08:	bl	407b20 <__stack_chk_fail@plt>
  410b0c:	mov	w0, w1
  410b10:	mov	sp, x29
  410b14:	ldr	x19, [sp, #16]
  410b18:	ldp	x29, x30, [sp], #464
  410b1c:	ret

0000000000410b20 <button_check_switches>:
  410b20:	stp	x29, x30, [sp, #-48]!
  410b24:	mov	x29, sp
  410b28:	str	x0, [sp, #24]
  410b2c:	adrp	x0, 460000 <wordlist.10364+0x370>
  410b30:	ldr	x0, [x0, #4024]
  410b34:	ldr	x1, [x0]
  410b38:	str	x1, [sp, #40]
  410b3c:	mov	x1, #0x0                   	// #0
  410b40:	str	xzr, [sp, #32]
  410b44:	ldr	x0, [sp, #24]
  410b48:	cmp	x0, #0x0
  410b4c:	cset	w0, eq  // eq = none
  410b50:	and	w0, w0, #0xff
  410b54:	and	x0, x0, #0xff
  410b58:	cmp	x0, #0x0
  410b5c:	b.eq	410b88 <button_check_switches+0x68>  // b.none
  410b60:	adrp	x0, 43d000 <_fini+0xdb0>
  410b64:	add	x1, x0, #0xbe3
  410b68:	adrp	x0, 43e000 <__func__.12250+0x440>
  410b6c:	add	x4, x0, #0x190
  410b70:	mov	w3, #0x161                 	// #353
  410b74:	mov	x2, x1
  410b78:	adrp	x0, 43d000 <_fini+0xdb0>
  410b7c:	add	x1, x0, #0xc10
  410b80:	mov	w0, #0x0                   	// #0
  410b84:	bl	407650 <log_assert_failed_realm@plt>
  410b88:	ldr	x0, [sp, #24]
  410b8c:	ldr	w0, [x0, #40]
  410b90:	cmp	w0, #0x0
  410b94:	b.ge	410ba0 <button_check_switches+0x80>  // b.tcont
  410b98:	mov	w0, #0xffffffea            	// #-22
  410b9c:	b	410c20 <button_check_switches+0x100>
  410ba0:	ldr	x0, [sp, #24]
  410ba4:	ldr	w0, [x0, #40]
  410ba8:	add	x1, sp, #0x20
  410bac:	mov	x2, x1
  410bb0:	mov	x1, #0x451b                	// #17691
  410bb4:	movk	x1, #0x8008, lsl #16
  410bb8:	bl	407e30 <ioctl@plt>
  410bbc:	cmp	w0, #0x0
  410bc0:	b.ge	410bd4 <button_check_switches+0xb4>  // b.tcont
  410bc4:	bl	407960 <__errno_location@plt>
  410bc8:	ldr	w0, [x0]
  410bcc:	neg	w0, w0
  410bd0:	b	410c20 <button_check_switches+0x100>
  410bd4:	add	x0, sp, #0x20
  410bd8:	mov	w1, #0x0                   	// #0
  410bdc:	bl	40f390 <bitset_get>
  410be0:	and	w1, w0, #0xff
  410be4:	ldr	x0, [sp, #24]
  410be8:	strb	w1, [x0, #44]
  410bec:	add	x0, sp, #0x20
  410bf0:	mov	w1, #0x5                   	// #5
  410bf4:	bl	40f390 <bitset_get>
  410bf8:	and	w1, w0, #0xff
  410bfc:	ldr	x0, [sp, #24]
  410c00:	strb	w1, [x0, #45]
  410c04:	ldr	x0, [sp, #24]
  410c08:	ldrb	w0, [x0, #44]
  410c0c:	cmp	w0, #0x0
  410c10:	b.eq	410c1c <button_check_switches+0xfc>  // b.none
  410c14:	ldr	x0, [sp, #24]
  410c18:	bl	40f8d0 <button_install_check_event_source>
  410c1c:	mov	w0, #0x0                   	// #0
  410c20:	mov	w1, w0
  410c24:	adrp	x0, 460000 <wordlist.10364+0x370>
  410c28:	ldr	x0, [x0, #4024]
  410c2c:	ldr	x2, [sp, #40]
  410c30:	ldr	x0, [x0]
  410c34:	eor	x0, x2, x0
  410c38:	cmp	x0, #0x0
  410c3c:	b.eq	410c44 <button_check_switches+0x124>  // b.none
  410c40:	bl	407b20 <__stack_chk_fail@plt>
  410c44:	mov	w0, w1
  410c48:	ldp	x29, x30, [sp], #48
  410c4c:	ret

0000000000410c50 <sd_device_enumerator_unrefp>:
  410c50:	stp	x29, x30, [sp, #-32]!
  410c54:	mov	x29, sp
  410c58:	str	x0, [sp, #24]
  410c5c:	ldr	x0, [sp, #24]
  410c60:	ldr	x0, [x0]
  410c64:	cmp	x0, #0x0
  410c68:	b.eq	410c78 <sd_device_enumerator_unrefp+0x28>  // b.none
  410c6c:	ldr	x0, [sp, #24]
  410c70:	ldr	x0, [x0]
  410c74:	bl	407500 <sd_device_enumerator_unref@plt>
  410c78:	nop
  410c7c:	ldp	x29, x30, [sp], #32
  410c80:	ret

0000000000410c84 <mfree>:
  410c84:	stp	x29, x30, [sp, #-32]!
  410c88:	mov	x29, sp
  410c8c:	str	x0, [sp, #24]
  410c90:	ldr	x0, [sp, #24]
  410c94:	bl	408150 <free@plt>
  410c98:	mov	x0, #0x0                   	// #0
  410c9c:	ldp	x29, x30, [sp], #32
  410ca0:	ret

0000000000410ca4 <freep>:
  410ca4:	stp	x29, x30, [sp, #-32]!
  410ca8:	mov	x29, sp
  410cac:	str	x0, [sp, #24]
  410cb0:	ldr	x0, [sp, #24]
  410cb4:	ldr	x0, [x0]
  410cb8:	bl	408150 <free@plt>
  410cbc:	nop
  410cc0:	ldp	x29, x30, [sp], #32
  410cc4:	ret

0000000000410cc8 <hashmap_get>:
  410cc8:	stp	x29, x30, [sp, #-32]!
  410ccc:	mov	x29, sp
  410cd0:	str	x0, [sp, #24]
  410cd4:	str	x1, [sp, #16]
  410cd8:	ldr	x1, [sp, #16]
  410cdc:	ldr	x0, [sp, #24]
  410ce0:	bl	407860 <internal_hashmap_get@plt>
  410ce4:	ldp	x29, x30, [sp], #32
  410ce8:	ret

0000000000410cec <hashmap_iterate>:
  410cec:	stp	x29, x30, [sp, #-48]!
  410cf0:	mov	x29, sp
  410cf4:	str	x0, [sp, #40]
  410cf8:	str	x1, [sp, #32]
  410cfc:	str	x2, [sp, #24]
  410d00:	str	x3, [sp, #16]
  410d04:	ldr	x3, [sp, #16]
  410d08:	ldr	x2, [sp, #24]
  410d0c:	ldr	x1, [sp, #32]
  410d10:	ldr	x0, [sp, #40]
  410d14:	bl	407f80 <internal_hashmap_iterate@plt>
  410d18:	and	w0, w0, #0xff
  410d1c:	ldp	x29, x30, [sp], #48
  410d20:	ret

0000000000410d24 <streq_ptr>:
  410d24:	stp	x29, x30, [sp, #-32]!
  410d28:	mov	x29, sp
  410d2c:	str	x0, [sp, #24]
  410d30:	str	x1, [sp, #16]
  410d34:	ldr	x1, [sp, #16]
  410d38:	ldr	x0, [sp, #24]
  410d3c:	bl	407110 <strcmp_ptr@plt>
  410d40:	cmp	w0, #0x0
  410d44:	cset	w0, eq  // eq = none
  410d48:	and	w0, w0, #0xff
  410d4c:	ldp	x29, x30, [sp], #32
  410d50:	ret

0000000000410d54 <isempty>:
  410d54:	sub	sp, sp, #0x10
  410d58:	str	x0, [sp, #8]
  410d5c:	ldr	x0, [sp, #8]
  410d60:	cmp	x0, #0x0
  410d64:	b.eq	410d78 <isempty+0x24>  // b.none
  410d68:	ldr	x0, [sp, #8]
  410d6c:	ldrb	w0, [x0]
  410d70:	cmp	w0, #0x0
  410d74:	b.ne	410d80 <isempty+0x2c>  // b.any
  410d78:	mov	w0, #0x1                   	// #1
  410d7c:	b	410d84 <isempty+0x30>
  410d80:	mov	w0, #0x0                   	// #0
  410d84:	and	w0, w0, #0x1
  410d88:	and	w0, w0, #0xff
  410d8c:	add	sp, sp, #0x10
  410d90:	ret

0000000000410d94 <startswith>:
  410d94:	stp	x29, x30, [sp, #-48]!
  410d98:	mov	x29, sp
  410d9c:	str	x0, [sp, #24]
  410da0:	str	x1, [sp, #16]
  410da4:	ldr	x0, [sp, #16]
  410da8:	bl	4082f0 <strlen@plt>
  410dac:	str	x0, [sp, #40]
  410db0:	ldr	x2, [sp, #40]
  410db4:	ldr	x1, [sp, #16]
  410db8:	ldr	x0, [sp, #24]
  410dbc:	bl	407770 <strncmp@plt>
  410dc0:	cmp	w0, #0x0
  410dc4:	b.ne	410dd8 <startswith+0x44>  // b.any
  410dc8:	ldr	x1, [sp, #24]
  410dcc:	ldr	x0, [sp, #40]
  410dd0:	add	x0, x1, x0
  410dd4:	b	410ddc <startswith+0x48>
  410dd8:	mov	x0, #0x0                   	// #0
  410ddc:	ldp	x29, x30, [sp], #48
  410de0:	ret

0000000000410de4 <errno_or_else>:
  410de4:	stp	x29, x30, [sp, #-32]!
  410de8:	mov	x29, sp
  410dec:	str	w0, [sp, #28]
  410df0:	bl	407960 <__errno_location@plt>
  410df4:	ldr	w0, [x0]
  410df8:	cmp	w0, #0x0
  410dfc:	b.le	410e10 <errno_or_else+0x2c>
  410e00:	bl	407960 <__errno_location@plt>
  410e04:	ldr	w0, [x0]
  410e08:	neg	w0, w0
  410e0c:	b	410e20 <errno_or_else+0x3c>
  410e10:	ldr	w0, [sp, #28]
  410e14:	cmp	w0, #0x0
  410e18:	cneg	w0, w0, lt  // lt = tstop
  410e1c:	neg	w0, w0
  410e20:	ldp	x29, x30, [sp], #32
  410e24:	ret

0000000000410e28 <closep>:
  410e28:	stp	x29, x30, [sp, #-32]!
  410e2c:	mov	x29, sp
  410e30:	str	x0, [sp, #24]
  410e34:	ldr	x0, [sp, #24]
  410e38:	ldr	w0, [x0]
  410e3c:	bl	4075e0 <safe_close@plt>
  410e40:	nop
  410e44:	ldp	x29, x30, [sp], #32
  410e48:	ret

0000000000410e4c <safe_atou>:
  410e4c:	stp	x29, x30, [sp, #-32]!
  410e50:	mov	x29, sp
  410e54:	str	x0, [sp, #24]
  410e58:	str	x1, [sp, #16]
  410e5c:	ldr	x2, [sp, #16]
  410e60:	mov	w1, #0x0                   	// #0
  410e64:	ldr	x0, [sp, #24]
  410e68:	bl	407d10 <safe_atou_full@plt>
  410e6c:	ldp	x29, x30, [sp], #32
  410e70:	ret

0000000000410e74 <strv_isempty>:
  410e74:	sub	sp, sp, #0x10
  410e78:	str	x0, [sp, #8]
  410e7c:	ldr	x0, [sp, #8]
  410e80:	cmp	x0, #0x0
  410e84:	b.eq	410e98 <strv_isempty+0x24>  // b.none
  410e88:	ldr	x0, [sp, #8]
  410e8c:	ldr	x0, [x0]
  410e90:	cmp	x0, #0x0
  410e94:	b.ne	410ea0 <strv_isempty+0x2c>  // b.any
  410e98:	mov	w0, #0x1                   	// #1
  410e9c:	b	410ea4 <strv_isempty+0x30>
  410ea0:	mov	w0, #0x0                   	// #0
  410ea4:	and	w0, w0, #0x1
  410ea8:	and	w0, w0, #0xff
  410eac:	add	sp, sp, #0x10
  410eb0:	ret

0000000000410eb4 <PID_TO_PTR>:
  410eb4:	sub	sp, sp, #0x10
  410eb8:	str	w0, [sp, #12]
  410ebc:	ldrsw	x0, [sp, #12]
  410ec0:	add	sp, sp, #0x10
  410ec4:	ret

0000000000410ec8 <pid_is_valid>:
  410ec8:	sub	sp, sp, #0x10
  410ecc:	str	w0, [sp, #12]
  410ed0:	ldr	w0, [sp, #12]
  410ed4:	cmp	w0, #0x0
  410ed8:	cset	w0, gt
  410edc:	and	w0, w0, #0xff
  410ee0:	add	sp, sp, #0x10
  410ee4:	ret

0000000000410ee8 <manager_reset_config>:
  410ee8:	stp	x29, x30, [sp, #-32]!
  410eec:	mov	x29, sp
  410ef0:	str	x0, [sp, #24]
  410ef4:	ldr	x0, [sp, #24]
  410ef8:	cmp	x0, #0x0
  410efc:	cset	w0, eq  // eq = none
  410f00:	and	w0, w0, #0xff
  410f04:	and	x0, x0, #0xff
  410f08:	cmp	x0, #0x0
  410f0c:	b.eq	410f38 <manager_reset_config+0x50>  // b.none
  410f10:	adrp	x0, 43e000 <__func__.12250+0x440>
  410f14:	add	x1, x0, #0x21b
  410f18:	adrp	x0, 43e000 <__func__.12250+0x440>
  410f1c:	add	x4, x0, #0x740
  410f20:	mov	w3, #0x20                  	// #32
  410f24:	mov	x2, x1
  410f28:	adrp	x0, 43e000 <__func__.12250+0x440>
  410f2c:	add	x1, x0, #0x238
  410f30:	mov	w0, #0x0                   	// #0
  410f34:	bl	407650 <log_assert_failed_realm@plt>
  410f38:	ldr	x0, [sp, #24]
  410f3c:	mov	w1, #0x6                   	// #6
  410f40:	str	w1, [x0, #156]
  410f44:	ldr	x0, [sp, #24]
  410f48:	mov	w1, #0x6                   	// #6
  410f4c:	str	w1, [x0, #160]
  410f50:	ldr	x0, [sp, #24]
  410f54:	mov	w1, #0x1                   	// #1
  410f58:	strb	w1, [x0, #424]
  410f5c:	ldr	x0, [sp, #24]
  410f60:	mov	x1, #0x4b40                	// #19264
  410f64:	movk	x1, #0x4c, lsl #16
  410f68:	str	x1, [x0, #232]
  410f6c:	ldr	x0, [sp, #24]
  410f70:	mov	x1, #0x9680                	// #38528
  410f74:	movk	x1, #0x98, lsl #16
  410f78:	str	x1, [x0, #240]
  410f7c:	ldr	x0, [sp, #24]
  410f80:	mov	w1, #0x1                   	// #1
  410f84:	str	w1, [x0, #396]
  410f88:	ldr	x0, [sp, #24]
  410f8c:	mov	w1, #0x5                   	// #5
  410f90:	str	w1, [x0, #400]
  410f94:	ldr	x0, [sp, #24]
  410f98:	mov	w1, #0x6                   	// #6
  410f9c:	str	w1, [x0, #404]
  410fa0:	ldr	x0, [sp, #24]
  410fa4:	mov	w1, #0x5                   	// #5
  410fa8:	str	w1, [x0, #408]
  410fac:	ldr	x0, [sp, #24]
  410fb0:	mov	w1, #0xffffffff            	// #-1
  410fb4:	str	w1, [x0, #412]
  410fb8:	ldr	x0, [sp, #24]
  410fbc:	str	wzr, [x0, #416]
  410fc0:	ldr	x0, [sp, #24]
  410fc4:	strb	wzr, [x0, #420]
  410fc8:	ldr	x0, [sp, #24]
  410fcc:	strb	wzr, [x0, #421]
  410fd0:	ldr	x0, [sp, #24]
  410fd4:	strb	wzr, [x0, #422]
  410fd8:	ldr	x0, [sp, #24]
  410fdc:	mov	w1, #0x1                   	// #1
  410fe0:	strb	w1, [x0, #423]
  410fe4:	ldr	x0, [sp, #24]
  410fe8:	mov	x1, #0xc380                	// #50048
  410fec:	movk	x1, #0x1c9, lsl #16
  410ff0:	str	x1, [x0, #440]
  410ff4:	ldr	x0, [sp, #24]
  410ff8:	mov	x1, #0xd200                	// #53760
  410ffc:	movk	x1, #0x6b49, lsl #16
  411000:	str	x1, [x0, #376]
  411004:	ldr	x0, [sp, #24]
  411008:	str	wzr, [x0, #392]
  41100c:	mov	x1, #0x64                  	// #100
  411010:	mov	x0, #0xa                   	// #10
  411014:	bl	407c00 <physical_memory_scale@plt>
  411018:	mov	x1, x0
  41101c:	ldr	x0, [sp, #24]
  411020:	str	x1, [x0, #456]
  411024:	ldr	x0, [sp, #24]
  411028:	mov	x1, #0x2000                	// #8192
  41102c:	str	x1, [x0, #464]
  411030:	ldr	x0, [sp, #24]
  411034:	mov	x1, #0x2000                	// #8192
  411038:	str	x1, [x0, #472]
  41103c:	ldr	x0, [sp, #24]
  411040:	mov	w1, #0x1                   	// #1
  411044:	strb	w1, [x0, #192]
  411048:	ldr	x0, [sp, #24]
  41104c:	ldr	x0, [x0, #176]
  411050:	bl	4079a0 <strv_free@plt>
  411054:	mov	x1, x0
  411058:	ldr	x0, [sp, #24]
  41105c:	str	x1, [x0, #176]
  411060:	ldr	x0, [sp, #24]
  411064:	ldr	x0, [x0, #184]
  411068:	bl	4079a0 <strv_free@plt>
  41106c:	mov	x1, x0
  411070:	ldr	x0, [sp, #24]
  411074:	str	x1, [x0, #184]
  411078:	nop
  41107c:	ldp	x29, x30, [sp], #32
  411080:	ret

0000000000411084 <manager_parse_config_file>:
  411084:	stp	x29, x30, [sp, #-32]!
  411088:	mov	x29, sp
  41108c:	str	x0, [sp, #24]
  411090:	ldr	x0, [sp, #24]
  411094:	cmp	x0, #0x0
  411098:	cset	w0, eq  // eq = none
  41109c:	and	w0, w0, #0xff
  4110a0:	and	x0, x0, #0xff
  4110a4:	cmp	x0, #0x0
  4110a8:	b.eq	4110d4 <manager_parse_config_file+0x50>  // b.none
  4110ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  4110b0:	add	x1, x0, #0x21b
  4110b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4110b8:	add	x4, x0, #0x758
  4110bc:	mov	w3, #0x43                  	// #67
  4110c0:	mov	x2, x1
  4110c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4110c8:	add	x1, x0, #0x238
  4110cc:	mov	w0, #0x0                   	// #0
  4110d0:	bl	407650 <log_assert_failed_realm@plt>
  4110d4:	ldr	x6, [sp, #24]
  4110d8:	mov	w5, #0x4                   	// #4
  4110dc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4110e0:	ldr	x4, [x0, #4080]
  4110e4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4110e8:	ldr	x3, [x0, #4032]
  4110ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4110f0:	add	x2, x0, #0x240
  4110f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4110f8:	add	x1, x0, #0x248
  4110fc:	adrp	x0, 43e000 <__func__.12250+0x440>
  411100:	add	x0, x0, #0x2e0
  411104:	bl	4081b0 <config_parse_many_nulstr@plt>
  411108:	ldp	x29, x30, [sp], #32
  41110c:	ret

0000000000411110 <manager_add_device>:
  411110:	stp	x29, x30, [sp, #-64]!
  411114:	mov	x29, sp
  411118:	str	x0, [sp, #40]
  41111c:	str	x1, [sp, #32]
  411120:	strb	w2, [sp, #31]
  411124:	str	x3, [sp, #16]
  411128:	ldr	x0, [sp, #40]
  41112c:	cmp	x0, #0x0
  411130:	cset	w0, eq  // eq = none
  411134:	and	w0, w0, #0xff
  411138:	and	x0, x0, #0xff
  41113c:	cmp	x0, #0x0
  411140:	b.eq	41116c <manager_add_device+0x5c>  // b.none
  411144:	adrp	x0, 43e000 <__func__.12250+0x440>
  411148:	add	x1, x0, #0x21b
  41114c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411150:	add	x4, x0, #0x778
  411154:	mov	w3, #0x4f                  	// #79
  411158:	mov	x2, x1
  41115c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411160:	add	x1, x0, #0x238
  411164:	mov	w0, #0x0                   	// #0
  411168:	bl	407650 <log_assert_failed_realm@plt>
  41116c:	ldr	x0, [sp, #32]
  411170:	cmp	x0, #0x0
  411174:	cset	w0, eq  // eq = none
  411178:	and	w0, w0, #0xff
  41117c:	and	x0, x0, #0xff
  411180:	cmp	x0, #0x0
  411184:	b.eq	4111b0 <manager_add_device+0xa0>  // b.none
  411188:	adrp	x0, 43e000 <__func__.12250+0x440>
  41118c:	add	x1, x0, #0x21b
  411190:	adrp	x0, 43e000 <__func__.12250+0x440>
  411194:	add	x4, x0, #0x778
  411198:	mov	w3, #0x50                  	// #80
  41119c:	mov	x2, x1
  4111a0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4111a4:	add	x1, x0, #0x300
  4111a8:	mov	w0, #0x0                   	// #0
  4111ac:	bl	407650 <log_assert_failed_realm@plt>
  4111b0:	ldr	x0, [sp, #40]
  4111b4:	ldr	x0, [x0, #16]
  4111b8:	ldr	x1, [sp, #32]
  4111bc:	bl	410cc8 <hashmap_get>
  4111c0:	str	x0, [sp, #56]
  4111c4:	ldr	x0, [sp, #56]
  4111c8:	cmp	x0, #0x0
  4111cc:	b.eq	41120c <manager_add_device+0xfc>  // b.none
  4111d0:	ldr	x0, [sp, #56]
  4111d4:	ldrb	w0, [x0, #24]
  4111d8:	cmp	w0, #0x0
  4111dc:	b.ne	4111ec <manager_add_device+0xdc>  // b.any
  4111e0:	ldrb	w0, [sp, #31]
  4111e4:	cmp	w0, #0x0
  4111e8:	b.eq	4111f4 <manager_add_device+0xe4>  // b.none
  4111ec:	mov	w0, #0x1                   	// #1
  4111f0:	b	4111f8 <manager_add_device+0xe8>
  4111f4:	mov	w0, #0x0                   	// #0
  4111f8:	and	w0, w0, #0x1
  4111fc:	and	w1, w0, #0xff
  411200:	ldr	x0, [sp, #56]
  411204:	strb	w1, [x0, #24]
  411208:	b	411234 <manager_add_device+0x124>
  41120c:	ldrb	w2, [sp, #31]
  411210:	ldr	x1, [sp, #32]
  411214:	ldr	x0, [sp, #40]
  411218:	bl	4227d4 <device_new>
  41121c:	str	x0, [sp, #56]
  411220:	ldr	x0, [sp, #56]
  411224:	cmp	x0, #0x0
  411228:	b.ne	411234 <manager_add_device+0x124>  // b.any
  41122c:	mov	w0, #0xfffffff4            	// #-12
  411230:	b	411250 <manager_add_device+0x140>
  411234:	ldr	x0, [sp, #16]
  411238:	cmp	x0, #0x0
  41123c:	b.eq	41124c <manager_add_device+0x13c>  // b.none
  411240:	ldr	x0, [sp, #16]
  411244:	ldr	x1, [sp, #56]
  411248:	str	x1, [x0]
  41124c:	mov	w0, #0x0                   	// #0
  411250:	ldp	x29, x30, [sp], #64
  411254:	ret

0000000000411258 <manager_add_seat>:
  411258:	stp	x29, x30, [sp, #-80]!
  41125c:	mov	x29, sp
  411260:	str	x0, [sp, #40]
  411264:	str	x1, [sp, #32]
  411268:	str	x2, [sp, #24]
  41126c:	adrp	x0, 460000 <wordlist.10364+0x370>
  411270:	ldr	x0, [x0, #4024]
  411274:	ldr	x1, [x0]
  411278:	str	x1, [sp, #72]
  41127c:	mov	x1, #0x0                   	// #0
  411280:	ldr	x0, [sp, #40]
  411284:	cmp	x0, #0x0
  411288:	cset	w0, eq  // eq = none
  41128c:	and	w0, w0, #0xff
  411290:	and	x0, x0, #0xff
  411294:	cmp	x0, #0x0
  411298:	b.eq	4112c4 <manager_add_seat+0x6c>  // b.none
  41129c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4112a0:	add	x1, x0, #0x21b
  4112a4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4112a8:	add	x4, x0, #0x790
  4112ac:	mov	w3, #0x66                  	// #102
  4112b0:	mov	x2, x1
  4112b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4112b8:	add	x1, x0, #0x238
  4112bc:	mov	w0, #0x0                   	// #0
  4112c0:	bl	407650 <log_assert_failed_realm@plt>
  4112c4:	ldr	x0, [sp, #32]
  4112c8:	cmp	x0, #0x0
  4112cc:	cset	w0, eq  // eq = none
  4112d0:	and	w0, w0, #0xff
  4112d4:	and	x0, x0, #0xff
  4112d8:	cmp	x0, #0x0
  4112dc:	b.eq	411308 <manager_add_seat+0xb0>  // b.none
  4112e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4112e4:	add	x1, x0, #0x21b
  4112e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4112ec:	add	x4, x0, #0x790
  4112f0:	mov	w3, #0x67                  	// #103
  4112f4:	mov	x2, x1
  4112f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4112fc:	add	x1, x0, #0x308
  411300:	mov	w0, #0x0                   	// #0
  411304:	bl	407650 <log_assert_failed_realm@plt>
  411308:	ldr	x0, [sp, #40]
  41130c:	ldr	x0, [x0, #24]
  411310:	ldr	x1, [sp, #32]
  411314:	bl	410cc8 <hashmap_get>
  411318:	str	x0, [sp, #64]
  41131c:	ldr	x0, [sp, #64]
  411320:	cmp	x0, #0x0
  411324:	b.ne	411350 <manager_add_seat+0xf8>  // b.any
  411328:	add	x0, sp, #0x40
  41132c:	ldr	x2, [sp, #32]
  411330:	ldr	x1, [sp, #40]
  411334:	bl	426f3c <seat_new>
  411338:	str	w0, [sp, #60]
  41133c:	ldr	w0, [sp, #60]
  411340:	cmp	w0, #0x0
  411344:	b.ge	411350 <manager_add_seat+0xf8>  // b.tcont
  411348:	ldr	w0, [sp, #60]
  41134c:	b	41136c <manager_add_seat+0x114>
  411350:	ldr	x0, [sp, #24]
  411354:	cmp	x0, #0x0
  411358:	b.eq	411368 <manager_add_seat+0x110>  // b.none
  41135c:	ldr	x1, [sp, #64]
  411360:	ldr	x0, [sp, #24]
  411364:	str	x1, [x0]
  411368:	mov	w0, #0x0                   	// #0
  41136c:	mov	w1, w0
  411370:	adrp	x0, 460000 <wordlist.10364+0x370>
  411374:	ldr	x0, [x0, #4024]
  411378:	ldr	x2, [sp, #72]
  41137c:	ldr	x0, [x0]
  411380:	eor	x0, x2, x0
  411384:	cmp	x0, #0x0
  411388:	b.eq	411390 <manager_add_seat+0x138>  // b.none
  41138c:	bl	407b20 <__stack_chk_fail@plt>
  411390:	mov	w0, w1
  411394:	ldp	x29, x30, [sp], #80
  411398:	ret

000000000041139c <manager_add_session>:
  41139c:	stp	x29, x30, [sp, #-80]!
  4113a0:	mov	x29, sp
  4113a4:	str	x0, [sp, #40]
  4113a8:	str	x1, [sp, #32]
  4113ac:	str	x2, [sp, #24]
  4113b0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4113b4:	ldr	x0, [x0, #4024]
  4113b8:	ldr	x1, [x0]
  4113bc:	str	x1, [sp, #72]
  4113c0:	mov	x1, #0x0                   	// #0
  4113c4:	ldr	x0, [sp, #40]
  4113c8:	cmp	x0, #0x0
  4113cc:	cset	w0, eq  // eq = none
  4113d0:	and	w0, w0, #0xff
  4113d4:	and	x0, x0, #0xff
  4113d8:	cmp	x0, #0x0
  4113dc:	b.eq	411408 <manager_add_session+0x6c>  // b.none
  4113e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4113e4:	add	x1, x0, #0x21b
  4113e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4113ec:	add	x4, x0, #0x7a8
  4113f0:	mov	w3, #0x7a                  	// #122
  4113f4:	mov	x2, x1
  4113f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4113fc:	add	x1, x0, #0x238
  411400:	mov	w0, #0x0                   	// #0
  411404:	bl	407650 <log_assert_failed_realm@plt>
  411408:	ldr	x0, [sp, #32]
  41140c:	cmp	x0, #0x0
  411410:	cset	w0, eq  // eq = none
  411414:	and	w0, w0, #0xff
  411418:	and	x0, x0, #0xff
  41141c:	cmp	x0, #0x0
  411420:	b.eq	41144c <manager_add_session+0xb0>  // b.none
  411424:	adrp	x0, 43e000 <__func__.12250+0x440>
  411428:	add	x1, x0, #0x21b
  41142c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411430:	add	x4, x0, #0x7a8
  411434:	mov	w3, #0x7b                  	// #123
  411438:	mov	x2, x1
  41143c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411440:	add	x1, x0, #0x308
  411444:	mov	w0, #0x0                   	// #0
  411448:	bl	407650 <log_assert_failed_realm@plt>
  41144c:	ldr	x0, [sp, #40]
  411450:	ldr	x0, [x0, #32]
  411454:	ldr	x1, [sp, #32]
  411458:	bl	410cc8 <hashmap_get>
  41145c:	str	x0, [sp, #64]
  411460:	ldr	x0, [sp, #64]
  411464:	cmp	x0, #0x0
  411468:	b.ne	411494 <manager_add_session+0xf8>  // b.any
  41146c:	add	x0, sp, #0x40
  411470:	ldr	x2, [sp, #32]
  411474:	ldr	x1, [sp, #40]
  411478:	bl	42f1e4 <session_new>
  41147c:	str	w0, [sp, #60]
  411480:	ldr	w0, [sp, #60]
  411484:	cmp	w0, #0x0
  411488:	b.ge	411494 <manager_add_session+0xf8>  // b.tcont
  41148c:	ldr	w0, [sp, #60]
  411490:	b	4114b0 <manager_add_session+0x114>
  411494:	ldr	x0, [sp, #24]
  411498:	cmp	x0, #0x0
  41149c:	b.eq	4114ac <manager_add_session+0x110>  // b.none
  4114a0:	ldr	x1, [sp, #64]
  4114a4:	ldr	x0, [sp, #24]
  4114a8:	str	x1, [x0]
  4114ac:	mov	w0, #0x0                   	// #0
  4114b0:	mov	w1, w0
  4114b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4114b8:	ldr	x0, [x0, #4024]
  4114bc:	ldr	x2, [sp, #72]
  4114c0:	ldr	x0, [x0]
  4114c4:	eor	x0, x2, x0
  4114c8:	cmp	x0, #0x0
  4114cc:	b.eq	4114d4 <manager_add_session+0x138>  // b.none
  4114d0:	bl	407b20 <__stack_chk_fail@plt>
  4114d4:	mov	w0, w1
  4114d8:	ldp	x29, x30, [sp], #80
  4114dc:	ret

00000000004114e0 <manager_add_user>:
  4114e0:	stp	x29, x30, [sp, #-96]!
  4114e4:	mov	x29, sp
  4114e8:	str	x0, [sp, #56]
  4114ec:	str	w1, [sp, #52]
  4114f0:	str	w2, [sp, #48]
  4114f4:	str	x3, [sp, #40]
  4114f8:	str	x4, [sp, #32]
  4114fc:	str	x5, [sp, #24]
  411500:	adrp	x0, 460000 <wordlist.10364+0x370>
  411504:	ldr	x0, [x0, #4024]
  411508:	ldr	x1, [x0]
  41150c:	str	x1, [sp, #88]
  411510:	mov	x1, #0x0                   	// #0
  411514:	ldr	x0, [sp, #56]
  411518:	cmp	x0, #0x0
  41151c:	cset	w0, eq  // eq = none
  411520:	and	w0, w0, #0xff
  411524:	and	x0, x0, #0xff
  411528:	cmp	x0, #0x0
  41152c:	b.eq	411558 <manager_add_user+0x78>  // b.none
  411530:	adrp	x0, 43e000 <__func__.12250+0x440>
  411534:	add	x1, x0, #0x21b
  411538:	adrp	x0, 43e000 <__func__.12250+0x440>
  41153c:	add	x4, x0, #0x7c0
  411540:	mov	w3, #0x95                  	// #149
  411544:	mov	x2, x1
  411548:	adrp	x0, 43e000 <__func__.12250+0x440>
  41154c:	add	x1, x0, #0x238
  411550:	mov	w0, #0x0                   	// #0
  411554:	bl	407650 <log_assert_failed_realm@plt>
  411558:	ldr	x0, [sp, #40]
  41155c:	cmp	x0, #0x0
  411560:	cset	w0, eq  // eq = none
  411564:	and	w0, w0, #0xff
  411568:	and	x0, x0, #0xff
  41156c:	cmp	x0, #0x0
  411570:	b.eq	41159c <manager_add_user+0xbc>  // b.none
  411574:	adrp	x0, 43e000 <__func__.12250+0x440>
  411578:	add	x1, x0, #0x21b
  41157c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411580:	add	x4, x0, #0x7c0
  411584:	mov	w3, #0x96                  	// #150
  411588:	mov	x2, x1
  41158c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411590:	add	x1, x0, #0x310
  411594:	mov	w0, #0x0                   	// #0
  411598:	bl	407650 <log_assert_failed_realm@plt>
  41159c:	ldr	x0, [sp, #56]
  4115a0:	ldr	x2, [x0, #48]
  4115a4:	ldr	w0, [sp, #52]
  4115a8:	add	x0, x0, #0x1
  4115ac:	mov	x1, x0
  4115b0:	mov	x0, x2
  4115b4:	bl	410cc8 <hashmap_get>
  4115b8:	str	x0, [sp, #80]
  4115bc:	ldr	x0, [sp, #80]
  4115c0:	cmp	x0, #0x0
  4115c4:	b.ne	4115fc <manager_add_user+0x11c>  // b.any
  4115c8:	add	x0, sp, #0x50
  4115cc:	ldr	x5, [sp, #32]
  4115d0:	ldr	x4, [sp, #40]
  4115d4:	ldr	w3, [sp, #48]
  4115d8:	ldr	w2, [sp, #52]
  4115dc:	ldr	x1, [sp, #56]
  4115e0:	bl	4362c0 <user_new>
  4115e4:	str	w0, [sp, #76]
  4115e8:	ldr	w0, [sp, #76]
  4115ec:	cmp	w0, #0x0
  4115f0:	b.ge	4115fc <manager_add_user+0x11c>  // b.tcont
  4115f4:	ldr	w0, [sp, #76]
  4115f8:	b	411618 <manager_add_user+0x138>
  4115fc:	ldr	x0, [sp, #24]
  411600:	cmp	x0, #0x0
  411604:	b.eq	411614 <manager_add_user+0x134>  // b.none
  411608:	ldr	x1, [sp, #80]
  41160c:	ldr	x0, [sp, #24]
  411610:	str	x1, [x0]
  411614:	mov	w0, #0x0                   	// #0
  411618:	mov	w1, w0
  41161c:	adrp	x0, 460000 <wordlist.10364+0x370>
  411620:	ldr	x0, [x0, #4024]
  411624:	ldr	x2, [sp, #88]
  411628:	ldr	x0, [x0]
  41162c:	eor	x0, x2, x0
  411630:	cmp	x0, #0x0
  411634:	b.eq	41163c <manager_add_user+0x15c>  // b.none
  411638:	bl	407b20 <__stack_chk_fail@plt>
  41163c:	mov	w0, w1
  411640:	ldp	x29, x30, [sp], #96
  411644:	ret

0000000000411648 <manager_add_user_by_name>:
  411648:	stp	x29, x30, [sp, #-80]!
  41164c:	mov	x29, sp
  411650:	str	x0, [sp, #40]
  411654:	str	x1, [sp, #32]
  411658:	str	x2, [sp, #24]
  41165c:	adrp	x0, 460000 <wordlist.10364+0x370>
  411660:	ldr	x0, [x0, #4024]
  411664:	ldr	x1, [x0]
  411668:	str	x1, [sp, #72]
  41166c:	mov	x1, #0x0                   	// #0
  411670:	str	xzr, [sp, #64]
  411674:	ldr	x0, [sp, #40]
  411678:	cmp	x0, #0x0
  41167c:	cset	w0, eq  // eq = none
  411680:	and	w0, w0, #0xff
  411684:	and	x0, x0, #0xff
  411688:	cmp	x0, #0x0
  41168c:	b.eq	4116b8 <manager_add_user_by_name+0x70>  // b.none
  411690:	adrp	x0, 43e000 <__func__.12250+0x440>
  411694:	add	x1, x0, #0x21b
  411698:	adrp	x0, 43e000 <__func__.12250+0x440>
  41169c:	add	x4, x0, #0x7d8
  4116a0:	mov	w3, #0xaf                  	// #175
  4116a4:	mov	x2, x1
  4116a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4116ac:	add	x1, x0, #0x238
  4116b0:	mov	w0, #0x0                   	// #0
  4116b4:	bl	407650 <log_assert_failed_realm@plt>
  4116b8:	ldr	x0, [sp, #32]
  4116bc:	cmp	x0, #0x0
  4116c0:	cset	w0, eq  // eq = none
  4116c4:	and	w0, w0, #0xff
  4116c8:	and	x0, x0, #0xff
  4116cc:	cmp	x0, #0x0
  4116d0:	b.eq	4116fc <manager_add_user_by_name+0xb4>  // b.none
  4116d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4116d8:	add	x1, x0, #0x21b
  4116dc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4116e0:	add	x4, x0, #0x7d8
  4116e4:	mov	w3, #0xb0                  	// #176
  4116e8:	mov	x2, x1
  4116ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4116f0:	add	x1, x0, #0x310
  4116f4:	mov	w0, #0x0                   	// #0
  4116f8:	bl	407650 <log_assert_failed_realm@plt>
  4116fc:	add	x3, sp, #0x40
  411700:	add	x2, sp, #0x38
  411704:	add	x1, sp, #0x34
  411708:	add	x0, sp, #0x20
  41170c:	mov	w5, #0x0                   	// #0
  411710:	mov	x4, #0x0                   	// #0
  411714:	bl	407e10 <get_user_creds@plt>
  411718:	str	w0, [sp, #60]
  41171c:	ldr	w0, [sp, #60]
  411720:	cmp	w0, #0x0
  411724:	b.ge	411730 <manager_add_user_by_name+0xe8>  // b.tcont
  411728:	ldr	w0, [sp, #60]
  41172c:	b	41175c <manager_add_user_by_name+0x114>
  411730:	ldr	w0, [sp, #52]
  411734:	ldr	w1, [sp, #56]
  411738:	ldr	x2, [sp, #32]
  41173c:	ldr	x3, [sp, #64]
  411740:	ldr	x5, [sp, #24]
  411744:	mov	x4, x3
  411748:	mov	x3, x2
  41174c:	mov	w2, w1
  411750:	mov	w1, w0
  411754:	ldr	x0, [sp, #40]
  411758:	bl	4114e0 <manager_add_user>
  41175c:	mov	w1, w0
  411760:	adrp	x0, 460000 <wordlist.10364+0x370>
  411764:	ldr	x0, [x0, #4024]
  411768:	ldr	x2, [sp, #72]
  41176c:	ldr	x0, [x0]
  411770:	eor	x0, x2, x0
  411774:	cmp	x0, #0x0
  411778:	b.eq	411780 <manager_add_user_by_name+0x138>  // b.none
  41177c:	bl	407b20 <__stack_chk_fail@plt>
  411780:	mov	w0, w1
  411784:	ldp	x29, x30, [sp], #80
  411788:	ret

000000000041178c <manager_add_user_by_uid>:
  41178c:	stp	x29, x30, [sp, #-64]!
  411790:	mov	x29, sp
  411794:	str	x0, [sp, #40]
  411798:	str	w1, [sp, #36]
  41179c:	str	x2, [sp, #24]
  4117a0:	ldr	x0, [sp, #40]
  4117a4:	cmp	x0, #0x0
  4117a8:	cset	w0, eq  // eq = none
  4117ac:	and	w0, w0, #0xff
  4117b0:	and	x0, x0, #0xff
  4117b4:	cmp	x0, #0x0
  4117b8:	b.eq	4117e4 <manager_add_user_by_uid+0x58>  // b.none
  4117bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4117c0:	add	x1, x0, #0x21b
  4117c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4117c8:	add	x4, x0, #0x7f8
  4117cc:	mov	w3, #0xbc                  	// #188
  4117d0:	mov	x2, x1
  4117d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4117d8:	add	x1, x0, #0x238
  4117dc:	mov	w0, #0x0                   	// #0
  4117e0:	bl	407650 <log_assert_failed_realm@plt>
  4117e4:	bl	407960 <__errno_location@plt>
  4117e8:	str	wzr, [x0]
  4117ec:	ldr	w0, [sp, #36]
  4117f0:	bl	407420 <getpwuid@plt>
  4117f4:	str	x0, [sp, #56]
  4117f8:	ldr	x0, [sp, #56]
  4117fc:	cmp	x0, #0x0
  411800:	b.ne	411810 <manager_add_user_by_uid+0x84>  // b.any
  411804:	mov	w0, #0x2                   	// #2
  411808:	bl	410de4 <errno_or_else>
  41180c:	b	411844 <manager_add_user_by_uid+0xb8>
  411810:	ldr	x0, [sp, #56]
  411814:	ldr	w1, [x0, #20]
  411818:	ldr	x0, [sp, #56]
  41181c:	ldr	x2, [x0]
  411820:	ldr	x0, [sp, #56]
  411824:	ldr	x0, [x0, #32]
  411828:	ldr	x5, [sp, #24]
  41182c:	mov	x4, x0
  411830:	mov	x3, x2
  411834:	mov	w2, w1
  411838:	ldr	w1, [sp, #36]
  41183c:	ldr	x0, [sp, #40]
  411840:	bl	4114e0 <manager_add_user>
  411844:	ldp	x29, x30, [sp], #64
  411848:	ret

000000000041184c <manager_add_inhibitor>:
  41184c:	stp	x29, x30, [sp, #-80]!
  411850:	mov	x29, sp
  411854:	str	x0, [sp, #40]
  411858:	str	x1, [sp, #32]
  41185c:	str	x2, [sp, #24]
  411860:	adrp	x0, 460000 <wordlist.10364+0x370>
  411864:	ldr	x0, [x0, #4024]
  411868:	ldr	x1, [x0]
  41186c:	str	x1, [sp, #72]
  411870:	mov	x1, #0x0                   	// #0
  411874:	ldr	x0, [sp, #40]
  411878:	cmp	x0, #0x0
  41187c:	cset	w0, eq  // eq = none
  411880:	and	w0, w0, #0xff
  411884:	and	x0, x0, #0xff
  411888:	cmp	x0, #0x0
  41188c:	b.eq	4118b8 <manager_add_inhibitor+0x6c>  // b.none
  411890:	adrp	x0, 43e000 <__func__.12250+0x440>
  411894:	add	x1, x0, #0x21b
  411898:	adrp	x0, 43e000 <__func__.12250+0x440>
  41189c:	add	x4, x0, #0x810
  4118a0:	mov	w3, #0xca                  	// #202
  4118a4:	mov	x2, x1
  4118a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4118ac:	add	x1, x0, #0x238
  4118b0:	mov	w0, #0x0                   	// #0
  4118b4:	bl	407650 <log_assert_failed_realm@plt>
  4118b8:	ldr	x0, [sp, #32]
  4118bc:	cmp	x0, #0x0
  4118c0:	cset	w0, eq  // eq = none
  4118c4:	and	w0, w0, #0xff
  4118c8:	and	x0, x0, #0xff
  4118cc:	cmp	x0, #0x0
  4118d0:	b.eq	4118fc <manager_add_inhibitor+0xb0>  // b.none
  4118d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4118d8:	add	x1, x0, #0x21b
  4118dc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4118e0:	add	x4, x0, #0x810
  4118e4:	mov	w3, #0xcb                  	// #203
  4118e8:	mov	x2, x1
  4118ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4118f0:	add	x1, x0, #0x308
  4118f4:	mov	w0, #0x0                   	// #0
  4118f8:	bl	407650 <log_assert_failed_realm@plt>
  4118fc:	ldr	x0, [sp, #40]
  411900:	ldr	x0, [x0, #56]
  411904:	ldr	x1, [sp, #32]
  411908:	bl	410cc8 <hashmap_get>
  41190c:	str	x0, [sp, #64]
  411910:	ldr	x0, [sp, #64]
  411914:	cmp	x0, #0x0
  411918:	b.ne	411944 <manager_add_inhibitor+0xf8>  // b.any
  41191c:	add	x0, sp, #0x40
  411920:	ldr	x2, [sp, #32]
  411924:	ldr	x1, [sp, #40]
  411928:	bl	42312c <inhibitor_new>
  41192c:	str	w0, [sp, #60]
  411930:	ldr	w0, [sp, #60]
  411934:	cmp	w0, #0x0
  411938:	b.ge	411944 <manager_add_inhibitor+0xf8>  // b.tcont
  41193c:	ldr	w0, [sp, #60]
  411940:	b	411960 <manager_add_inhibitor+0x114>
  411944:	ldr	x0, [sp, #24]
  411948:	cmp	x0, #0x0
  41194c:	b.eq	41195c <manager_add_inhibitor+0x110>  // b.none
  411950:	ldr	x1, [sp, #64]
  411954:	ldr	x0, [sp, #24]
  411958:	str	x1, [x0]
  41195c:	mov	w0, #0x0                   	// #0
  411960:	mov	w1, w0
  411964:	adrp	x0, 460000 <wordlist.10364+0x370>
  411968:	ldr	x0, [x0, #4024]
  41196c:	ldr	x2, [sp, #72]
  411970:	ldr	x0, [x0]
  411974:	eor	x0, x2, x0
  411978:	cmp	x0, #0x0
  41197c:	b.eq	411984 <manager_add_inhibitor+0x138>  // b.none
  411980:	bl	407b20 <__stack_chk_fail@plt>
  411984:	mov	w0, w1
  411988:	ldp	x29, x30, [sp], #80
  41198c:	ret

0000000000411990 <manager_add_button>:
  411990:	stp	x29, x30, [sp, #-64]!
  411994:	mov	x29, sp
  411998:	str	x0, [sp, #40]
  41199c:	str	x1, [sp, #32]
  4119a0:	str	x2, [sp, #24]
  4119a4:	ldr	x0, [sp, #40]
  4119a8:	cmp	x0, #0x0
  4119ac:	cset	w0, eq  // eq = none
  4119b0:	and	w0, w0, #0xff
  4119b4:	and	x0, x0, #0xff
  4119b8:	cmp	x0, #0x0
  4119bc:	b.eq	4119e8 <manager_add_button+0x58>  // b.none
  4119c0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4119c4:	add	x1, x0, #0x21b
  4119c8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4119cc:	add	x4, x0, #0x828
  4119d0:	mov	w3, #0xdd                  	// #221
  4119d4:	mov	x2, x1
  4119d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4119dc:	add	x1, x0, #0x238
  4119e0:	mov	w0, #0x0                   	// #0
  4119e4:	bl	407650 <log_assert_failed_realm@plt>
  4119e8:	ldr	x0, [sp, #32]
  4119ec:	cmp	x0, #0x0
  4119f0:	cset	w0, eq  // eq = none
  4119f4:	and	w0, w0, #0xff
  4119f8:	and	x0, x0, #0xff
  4119fc:	cmp	x0, #0x0
  411a00:	b.eq	411a2c <manager_add_button+0x9c>  // b.none
  411a04:	adrp	x0, 43e000 <__func__.12250+0x440>
  411a08:	add	x1, x0, #0x21b
  411a0c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411a10:	add	x4, x0, #0x828
  411a14:	mov	w3, #0xde                  	// #222
  411a18:	mov	x2, x1
  411a1c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411a20:	add	x1, x0, #0x310
  411a24:	mov	w0, #0x0                   	// #0
  411a28:	bl	407650 <log_assert_failed_realm@plt>
  411a2c:	ldr	x0, [sp, #40]
  411a30:	ldr	x0, [x0, #64]
  411a34:	ldr	x1, [sp, #32]
  411a38:	bl	410cc8 <hashmap_get>
  411a3c:	str	x0, [sp, #56]
  411a40:	ldr	x0, [sp, #56]
  411a44:	cmp	x0, #0x0
  411a48:	b.ne	411a70 <manager_add_button+0xe0>  // b.any
  411a4c:	ldr	x1, [sp, #32]
  411a50:	ldr	x0, [sp, #40]
  411a54:	bl	40f438 <button_new>
  411a58:	str	x0, [sp, #56]
  411a5c:	ldr	x0, [sp, #56]
  411a60:	cmp	x0, #0x0
  411a64:	b.ne	411a70 <manager_add_button+0xe0>  // b.any
  411a68:	mov	w0, #0xfffffff4            	// #-12
  411a6c:	b	411a8c <manager_add_button+0xfc>
  411a70:	ldr	x0, [sp, #24]
  411a74:	cmp	x0, #0x0
  411a78:	b.eq	411a88 <manager_add_button+0xf8>  // b.none
  411a7c:	ldr	x0, [sp, #24]
  411a80:	ldr	x1, [sp, #56]
  411a84:	str	x1, [x0]
  411a88:	mov	w0, #0x0                   	// #0
  411a8c:	ldp	x29, x30, [sp], #64
  411a90:	ret

0000000000411a94 <manager_process_seat_device>:
  411a94:	sub	sp, sp, #0x80
  411a98:	stp	x29, x30, [sp, #32]
  411a9c:	add	x29, sp, #0x20
  411aa0:	str	x0, [sp, #56]
  411aa4:	str	x1, [sp, #48]
  411aa8:	adrp	x0, 460000 <wordlist.10364+0x370>
  411aac:	ldr	x0, [x0, #4024]
  411ab0:	ldr	x1, [x0]
  411ab4:	str	x1, [sp, #120]
  411ab8:	mov	x1, #0x0                   	// #0
  411abc:	ldr	x0, [sp, #56]
  411ac0:	cmp	x0, #0x0
  411ac4:	cset	w0, eq  // eq = none
  411ac8:	and	w0, w0, #0xff
  411acc:	and	x0, x0, #0xff
  411ad0:	cmp	x0, #0x0
  411ad4:	b.eq	411b00 <manager_process_seat_device+0x6c>  // b.none
  411ad8:	adrp	x0, 43e000 <__func__.12250+0x440>
  411adc:	add	x1, x0, #0x21b
  411ae0:	adrp	x0, 43e000 <__func__.12250+0x440>
  411ae4:	add	x4, x0, #0x840
  411ae8:	mov	w3, #0xf1                  	// #241
  411aec:	mov	x2, x1
  411af0:	adrp	x0, 43e000 <__func__.12250+0x440>
  411af4:	add	x1, x0, #0x238
  411af8:	mov	w0, #0x0                   	// #0
  411afc:	bl	407650 <log_assert_failed_realm@plt>
  411b00:	mov	w1, #0x1                   	// #1
  411b04:	ldr	x0, [sp, #48]
  411b08:	bl	407450 <device_for_action@plt>
  411b0c:	and	w0, w0, #0xff
  411b10:	cmp	w0, #0x0
  411b14:	b.eq	411b80 <manager_process_seat_device+0xec>  // b.none
  411b18:	add	x0, sp, #0x68
  411b1c:	mov	x1, x0
  411b20:	ldr	x0, [sp, #48]
  411b24:	bl	408320 <sd_device_get_syspath@plt>
  411b28:	str	w0, [sp, #68]
  411b2c:	ldr	w0, [sp, #68]
  411b30:	cmp	w0, #0x0
  411b34:	b.ge	411b40 <manager_process_seat_device+0xac>  // b.tcont
  411b38:	mov	w0, #0x0                   	// #0
  411b3c:	b	411dc4 <manager_process_seat_device+0x330>
  411b40:	ldr	x0, [sp, #56]
  411b44:	ldr	x0, [x0, #16]
  411b48:	ldr	x1, [sp, #104]
  411b4c:	bl	410cc8 <hashmap_get>
  411b50:	str	x0, [sp, #80]
  411b54:	ldr	x0, [sp, #80]
  411b58:	cmp	x0, #0x0
  411b5c:	b.ne	411b68 <manager_process_seat_device+0xd4>  // b.any
  411b60:	mov	w0, #0x0                   	// #0
  411b64:	b	411dc4 <manager_process_seat_device+0x330>
  411b68:	ldr	x0, [sp, #80]
  411b6c:	ldr	x0, [x0, #16]
  411b70:	bl	4294c8 <seat_add_to_gc_queue>
  411b74:	ldr	x0, [sp, #80]
  411b78:	bl	422b30 <device_free>
  411b7c:	b	411dc0 <manager_process_seat_device+0x32c>
  411b80:	add	x0, sp, #0x58
  411b84:	mov	x2, x0
  411b88:	adrp	x0, 43e000 <__func__.12250+0x440>
  411b8c:	add	x1, x0, #0x318
  411b90:	ldr	x0, [sp, #48]
  411b94:	bl	406fd0 <sd_device_get_property_value@plt>
  411b98:	cmp	w0, #0x0
  411b9c:	b.lt	411bb4 <manager_process_seat_device+0x120>  // b.tstop
  411ba0:	ldr	x0, [sp, #88]
  411ba4:	bl	410d54 <isempty>
  411ba8:	and	w0, w0, #0xff
  411bac:	cmp	w0, #0x0
  411bb0:	b.eq	411bc0 <manager_process_seat_device+0x12c>  // b.none
  411bb4:	adrp	x0, 43e000 <__func__.12250+0x440>
  411bb8:	add	x0, x0, #0x320
  411bbc:	str	x0, [sp, #88]
  411bc0:	ldr	x0, [sp, #88]
  411bc4:	bl	42968c <seat_name_is_valid>
  411bc8:	and	w0, w0, #0xff
  411bcc:	eor	w0, w0, #0x1
  411bd0:	and	w0, w0, #0xff
  411bd4:	cmp	w0, #0x0
  411bd8:	b.eq	411ca4 <manager_process_seat_device+0x210>  // b.none
  411bdc:	str	xzr, [sp, #104]
  411be0:	ldr	x0, [sp, #48]
  411be4:	str	x0, [sp, #112]
  411be8:	mov	w0, #0x4                   	// #4
  411bec:	str	w0, [sp, #72]
  411bf0:	str	wzr, [sp, #76]
  411bf4:	ldr	x0, [sp, #112]
  411bf8:	cmp	x0, #0x0
  411bfc:	b.eq	411c38 <manager_process_seat_device+0x1a4>  // b.none
  411c00:	mov	w0, #0x0                   	// #0
  411c04:	bl	4083e0 <log_get_max_level_realm@plt>
  411c08:	mov	w1, w0
  411c0c:	ldr	w0, [sp, #72]
  411c10:	cmp	w0, w1
  411c14:	cset	w0, le
  411c18:	and	w0, w0, #0xff
  411c1c:	and	x0, x0, #0xff
  411c20:	cmp	x0, #0x0
  411c24:	b.eq	411c38 <manager_process_seat_device+0x1a4>  // b.none
  411c28:	add	x0, sp, #0x68
  411c2c:	mov	x1, x0
  411c30:	ldr	x0, [sp, #112]
  411c34:	bl	407630 <sd_device_get_sysname@plt>
  411c38:	adrp	x0, 43e000 <__func__.12250+0x440>
  411c3c:	add	x2, x0, #0x21b
  411c40:	ldr	x0, [sp, #104]
  411c44:	cmp	x0, #0x0
  411c48:	b.eq	411c58 <manager_process_seat_device+0x1c4>  // b.none
  411c4c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411c50:	add	x0, x0, #0x328
  411c54:	b	411c5c <manager_process_seat_device+0x1c8>
  411c58:	mov	x0, #0x0                   	// #0
  411c5c:	ldr	x3, [sp, #104]
  411c60:	ldr	x1, [sp, #88]
  411c64:	str	x1, [sp, #16]
  411c68:	adrp	x1, 43e000 <__func__.12250+0x440>
  411c6c:	add	x1, x1, #0x330
  411c70:	str	x1, [sp, #8]
  411c74:	str	xzr, [sp]
  411c78:	mov	x7, #0x0                   	// #0
  411c7c:	mov	x6, x3
  411c80:	mov	x5, x0
  411c84:	adrp	x0, 43e000 <__func__.12250+0x440>
  411c88:	add	x4, x0, #0x860
  411c8c:	mov	w3, #0x10a                 	// #266
  411c90:	ldr	w1, [sp, #76]
  411c94:	ldr	w0, [sp, #72]
  411c98:	bl	407940 <log_object_internal@plt>
  411c9c:	mov	w0, #0x0                   	// #0
  411ca0:	b	411dc4 <manager_process_seat_device+0x330>
  411ca4:	ldr	x0, [sp, #56]
  411ca8:	ldr	x0, [x0, #24]
  411cac:	ldr	x1, [sp, #88]
  411cb0:	bl	410cc8 <hashmap_get>
  411cb4:	str	x0, [sp, #104]
  411cb8:	adrp	x0, 43e000 <__func__.12250+0x440>
  411cbc:	add	x1, x0, #0x368
  411cc0:	ldr	x0, [sp, #48]
  411cc4:	bl	407b60 <sd_device_has_tag@plt>
  411cc8:	cmp	w0, #0x0
  411ccc:	cset	w0, gt
  411cd0:	strb	w0, [sp, #67]
  411cd4:	ldrb	w0, [sp, #67]
  411cd8:	eor	w0, w0, #0x1
  411cdc:	and	w0, w0, #0xff
  411ce0:	cmp	w0, #0x0
  411ce4:	b.eq	411cfc <manager_process_seat_device+0x268>  // b.none
  411ce8:	ldr	x0, [sp, #104]
  411cec:	cmp	x0, #0x0
  411cf0:	b.ne	411cfc <manager_process_seat_device+0x268>  // b.any
  411cf4:	mov	w0, #0x0                   	// #0
  411cf8:	b	411dc4 <manager_process_seat_device+0x330>
  411cfc:	add	x0, sp, #0x60
  411d00:	mov	x1, x0
  411d04:	ldr	x0, [sp, #48]
  411d08:	bl	408320 <sd_device_get_syspath@plt>
  411d0c:	str	w0, [sp, #68]
  411d10:	ldr	w0, [sp, #68]
  411d14:	cmp	w0, #0x0
  411d18:	b.ge	411d24 <manager_process_seat_device+0x290>  // b.tcont
  411d1c:	ldr	w0, [sp, #68]
  411d20:	b	411dc4 <manager_process_seat_device+0x330>
  411d24:	ldr	x0, [sp, #96]
  411d28:	add	x1, sp, #0x50
  411d2c:	mov	x3, x1
  411d30:	ldrb	w2, [sp, #67]
  411d34:	mov	x1, x0
  411d38:	ldr	x0, [sp, #56]
  411d3c:	bl	411110 <manager_add_device>
  411d40:	str	w0, [sp, #68]
  411d44:	ldr	w0, [sp, #68]
  411d48:	cmp	w0, #0x0
  411d4c:	b.ge	411d58 <manager_process_seat_device+0x2c4>  // b.tcont
  411d50:	ldr	w0, [sp, #68]
  411d54:	b	411dc4 <manager_process_seat_device+0x330>
  411d58:	ldr	x0, [sp, #104]
  411d5c:	cmp	x0, #0x0
  411d60:	b.ne	411dac <manager_process_seat_device+0x318>  // b.any
  411d64:	ldr	x0, [sp, #88]
  411d68:	add	x1, sp, #0x68
  411d6c:	mov	x2, x1
  411d70:	mov	x1, x0
  411d74:	ldr	x0, [sp, #56]
  411d78:	bl	411258 <manager_add_seat>
  411d7c:	str	w0, [sp, #68]
  411d80:	ldr	w0, [sp, #68]
  411d84:	cmp	w0, #0x0
  411d88:	b.ge	411dac <manager_process_seat_device+0x318>  // b.tcont
  411d8c:	ldr	x0, [sp, #80]
  411d90:	ldr	x0, [x0, #16]
  411d94:	cmp	x0, #0x0
  411d98:	b.ne	411da4 <manager_process_seat_device+0x310>  // b.any
  411d9c:	ldr	x0, [sp, #80]
  411da0:	bl	422b30 <device_free>
  411da4:	ldr	w0, [sp, #68]
  411da8:	b	411dc4 <manager_process_seat_device+0x330>
  411dac:	ldr	x0, [sp, #80]
  411db0:	ldr	x1, [sp, #104]
  411db4:	bl	422bc8 <device_attach>
  411db8:	ldr	x0, [sp, #104]
  411dbc:	bl	4287d4 <seat_start>
  411dc0:	mov	w0, #0x0                   	// #0
  411dc4:	mov	w1, w0
  411dc8:	adrp	x0, 460000 <wordlist.10364+0x370>
  411dcc:	ldr	x0, [x0, #4024]
  411dd0:	ldr	x2, [sp, #120]
  411dd4:	ldr	x0, [x0]
  411dd8:	eor	x0, x2, x0
  411ddc:	cmp	x0, #0x0
  411de0:	b.eq	411de8 <manager_process_seat_device+0x354>  // b.none
  411de4:	bl	407b20 <__stack_chk_fail@plt>
  411de8:	mov	w0, w1
  411dec:	ldp	x29, x30, [sp, #32]
  411df0:	add	sp, sp, #0x80
  411df4:	ret

0000000000411df8 <manager_process_button_device>:
  411df8:	stp	x29, x30, [sp, #-80]!
  411dfc:	mov	x29, sp
  411e00:	str	x0, [sp, #24]
  411e04:	str	x1, [sp, #16]
  411e08:	adrp	x0, 460000 <wordlist.10364+0x370>
  411e0c:	ldr	x0, [x0, #4024]
  411e10:	ldr	x1, [x0]
  411e14:	str	x1, [sp, #72]
  411e18:	mov	x1, #0x0                   	// #0
  411e1c:	ldr	x0, [sp, #24]
  411e20:	cmp	x0, #0x0
  411e24:	cset	w0, eq  // eq = none
  411e28:	and	w0, w0, #0xff
  411e2c:	and	x0, x0, #0xff
  411e30:	cmp	x0, #0x0
  411e34:	b.eq	411e60 <manager_process_button_device+0x68>  // b.none
  411e38:	adrp	x0, 43e000 <__func__.12250+0x440>
  411e3c:	add	x1, x0, #0x21b
  411e40:	adrp	x0, 43e000 <__func__.12250+0x440>
  411e44:	add	x4, x0, #0x880
  411e48:	mov	w3, #0x133                 	// #307
  411e4c:	mov	x2, x1
  411e50:	adrp	x0, 43e000 <__func__.12250+0x440>
  411e54:	add	x1, x0, #0x238
  411e58:	mov	w0, #0x0                   	// #0
  411e5c:	bl	407650 <log_assert_failed_realm@plt>
  411e60:	add	x0, sp, #0x30
  411e64:	mov	x1, x0
  411e68:	ldr	x0, [sp, #16]
  411e6c:	bl	407630 <sd_device_get_sysname@plt>
  411e70:	str	w0, [sp, #44]
  411e74:	ldr	w0, [sp, #44]
  411e78:	cmp	w0, #0x0
  411e7c:	b.ge	411e88 <manager_process_button_device+0x90>  // b.tcont
  411e80:	ldr	w0, [sp, #44]
  411e84:	b	411f74 <manager_process_button_device+0x17c>
  411e88:	mov	w1, #0x1                   	// #1
  411e8c:	ldr	x0, [sp, #16]
  411e90:	bl	407450 <device_for_action@plt>
  411e94:	and	w0, w0, #0xff
  411e98:	cmp	w0, #0x0
  411e9c:	b.eq	411ed4 <manager_process_button_device+0xdc>  // b.none
  411ea0:	ldr	x0, [sp, #24]
  411ea4:	ldr	x0, [x0, #64]
  411ea8:	ldr	x1, [sp, #48]
  411eac:	bl	410cc8 <hashmap_get>
  411eb0:	str	x0, [sp, #56]
  411eb4:	ldr	x0, [sp, #56]
  411eb8:	cmp	x0, #0x0
  411ebc:	b.ne	411ec8 <manager_process_button_device+0xd0>  // b.any
  411ec0:	mov	w0, #0x0                   	// #0
  411ec4:	b	411f74 <manager_process_button_device+0x17c>
  411ec8:	ldr	x0, [sp, #56]
  411ecc:	bl	40f588 <button_free>
  411ed0:	b	411f70 <manager_process_button_device+0x178>
  411ed4:	ldr	x0, [sp, #48]
  411ed8:	add	x1, sp, #0x38
  411edc:	mov	x2, x1
  411ee0:	mov	x1, x0
  411ee4:	ldr	x0, [sp, #24]
  411ee8:	bl	411990 <manager_add_button>
  411eec:	str	w0, [sp, #44]
  411ef0:	ldr	w0, [sp, #44]
  411ef4:	cmp	w0, #0x0
  411ef8:	b.ge	411f04 <manager_process_button_device+0x10c>  // b.tcont
  411efc:	ldr	w0, [sp, #44]
  411f00:	b	411f74 <manager_process_button_device+0x17c>
  411f04:	add	x0, sp, #0x40
  411f08:	mov	x2, x0
  411f0c:	adrp	x0, 43e000 <__func__.12250+0x440>
  411f10:	add	x1, x0, #0x318
  411f14:	ldr	x0, [sp, #16]
  411f18:	bl	406fd0 <sd_device_get_property_value@plt>
  411f1c:	cmp	w0, #0x0
  411f20:	b.lt	411f38 <manager_process_button_device+0x140>  // b.tstop
  411f24:	ldr	x0, [sp, #64]
  411f28:	bl	410d54 <isempty>
  411f2c:	and	w0, w0, #0xff
  411f30:	cmp	w0, #0x0
  411f34:	b.eq	411f44 <manager_process_button_device+0x14c>  // b.none
  411f38:	adrp	x0, 43e000 <__func__.12250+0x440>
  411f3c:	add	x0, x0, #0x320
  411f40:	str	x0, [sp, #64]
  411f44:	ldr	x0, [sp, #56]
  411f48:	ldr	x1, [sp, #64]
  411f4c:	bl	40f658 <button_set_seat>
  411f50:	ldr	x0, [sp, #56]
  411f54:	bl	41046c <button_open>
  411f58:	str	w0, [sp, #44]
  411f5c:	ldr	w0, [sp, #44]
  411f60:	cmp	w0, #0x0
  411f64:	b.ge	411f70 <manager_process_button_device+0x178>  // b.tcont
  411f68:	ldr	x0, [sp, #56]
  411f6c:	bl	40f588 <button_free>
  411f70:	mov	w0, #0x0                   	// #0
  411f74:	mov	w1, w0
  411f78:	adrp	x0, 460000 <wordlist.10364+0x370>
  411f7c:	ldr	x0, [x0, #4024]
  411f80:	ldr	x2, [sp, #72]
  411f84:	ldr	x0, [x0]
  411f88:	eor	x0, x2, x0
  411f8c:	cmp	x0, #0x0
  411f90:	b.eq	411f98 <manager_process_button_device+0x1a0>  // b.none
  411f94:	bl	407b20 <__stack_chk_fail@plt>
  411f98:	mov	w0, w1
  411f9c:	ldp	x29, x30, [sp], #80
  411fa0:	ret

0000000000411fa4 <manager_get_session_by_pid>:
  411fa4:	stp	x29, x30, [sp, #-96]!
  411fa8:	mov	x29, sp
  411fac:	str	x19, [sp, #16]
  411fb0:	str	x0, [sp, #56]
  411fb4:	str	w1, [sp, #52]
  411fb8:	str	x2, [sp, #40]
  411fbc:	adrp	x0, 460000 <wordlist.10364+0x370>
  411fc0:	ldr	x0, [x0, #4024]
  411fc4:	ldr	x1, [x0]
  411fc8:	str	x1, [sp, #88]
  411fcc:	mov	x1, #0x0                   	// #0
  411fd0:	str	xzr, [sp, #72]
  411fd4:	ldr	x0, [sp, #56]
  411fd8:	cmp	x0, #0x0
  411fdc:	cset	w0, eq  // eq = none
  411fe0:	and	w0, w0, #0xff
  411fe4:	and	x0, x0, #0xff
  411fe8:	cmp	x0, #0x0
  411fec:	b.eq	412018 <manager_get_session_by_pid+0x74>  // b.none
  411ff0:	adrp	x0, 43e000 <__func__.12250+0x440>
  411ff4:	add	x1, x0, #0x21b
  411ff8:	adrp	x0, 43e000 <__func__.12250+0x440>
  411ffc:	add	x4, x0, #0x8a0
  412000:	mov	w3, #0x15b                 	// #347
  412004:	mov	x2, x1
  412008:	adrp	x0, 43e000 <__func__.12250+0x440>
  41200c:	add	x1, x0, #0x238
  412010:	mov	w0, #0x0                   	// #0
  412014:	bl	407650 <log_assert_failed_realm@plt>
  412018:	ldr	w0, [sp, #52]
  41201c:	bl	410ec8 <pid_is_valid>
  412020:	and	w0, w0, #0xff
  412024:	eor	w0, w0, #0x1
  412028:	and	w0, w0, #0xff
  41202c:	cmp	w0, #0x0
  412030:	b.eq	41203c <manager_get_session_by_pid+0x98>  // b.none
  412034:	mov	w19, #0xffffffea            	// #-22
  412038:	b	4120c8 <manager_get_session_by_pid+0x124>
  41203c:	ldr	x0, [sp, #56]
  412040:	ldr	x19, [x0, #40]
  412044:	ldr	w0, [sp, #52]
  412048:	bl	410eb4 <PID_TO_PTR>
  41204c:	mov	x1, x0
  412050:	mov	x0, x19
  412054:	bl	410cc8 <hashmap_get>
  412058:	str	x0, [sp, #80]
  41205c:	ldr	x0, [sp, #80]
  412060:	cmp	x0, #0x0
  412064:	b.ne	41209c <manager_get_session_by_pid+0xf8>  // b.any
  412068:	add	x0, sp, #0x48
  41206c:	mov	x1, x0
  412070:	ldr	w0, [sp, #52]
  412074:	bl	408100 <cg_pid_get_unit@plt>
  412078:	str	w0, [sp, #68]
  41207c:	ldr	w0, [sp, #68]
  412080:	cmp	w0, #0x0
  412084:	b.lt	41209c <manager_get_session_by_pid+0xf8>  // b.tstop
  412088:	ldr	x0, [sp, #56]
  41208c:	ldr	x0, [x0, #216]
  412090:	ldr	x1, [sp, #72]
  412094:	bl	410cc8 <hashmap_get>
  412098:	str	x0, [sp, #80]
  41209c:	ldr	x0, [sp, #40]
  4120a0:	cmp	x0, #0x0
  4120a4:	b.eq	4120b4 <manager_get_session_by_pid+0x110>  // b.none
  4120a8:	ldr	x0, [sp, #40]
  4120ac:	ldr	x1, [sp, #80]
  4120b0:	str	x1, [x0]
  4120b4:	ldr	x0, [sp, #80]
  4120b8:	cmp	x0, #0x0
  4120bc:	cset	w0, ne  // ne = any
  4120c0:	and	w0, w0, #0xff
  4120c4:	mov	w19, w0
  4120c8:	add	x0, sp, #0x48
  4120cc:	bl	410ca4 <freep>
  4120d0:	mov	w1, w19
  4120d4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4120d8:	ldr	x0, [x0, #4024]
  4120dc:	ldr	x2, [sp, #88]
  4120e0:	ldr	x0, [x0]
  4120e4:	eor	x0, x2, x0
  4120e8:	cmp	x0, #0x0
  4120ec:	b.eq	4120f4 <manager_get_session_by_pid+0x150>  // b.none
  4120f0:	bl	407b20 <__stack_chk_fail@plt>
  4120f4:	mov	w0, w1
  4120f8:	ldr	x19, [sp, #16]
  4120fc:	ldp	x29, x30, [sp], #96
  412100:	ret

0000000000412104 <manager_get_user_by_pid>:
  412104:	stp	x29, x30, [sp, #-96]!
  412108:	mov	x29, sp
  41210c:	str	x19, [sp, #16]
  412110:	str	x0, [sp, #56]
  412114:	str	w1, [sp, #52]
  412118:	str	x2, [sp, #40]
  41211c:	adrp	x0, 460000 <wordlist.10364+0x370>
  412120:	ldr	x0, [x0, #4024]
  412124:	ldr	x1, [x0]
  412128:	str	x1, [sp, #88]
  41212c:	mov	x1, #0x0                   	// #0
  412130:	str	xzr, [sp, #72]
  412134:	str	xzr, [sp, #80]
  412138:	ldr	x0, [sp, #56]
  41213c:	cmp	x0, #0x0
  412140:	cset	w0, eq  // eq = none
  412144:	and	w0, w0, #0xff
  412148:	and	x0, x0, #0xff
  41214c:	cmp	x0, #0x0
  412150:	b.eq	41217c <manager_get_user_by_pid+0x78>  // b.none
  412154:	adrp	x0, 43e000 <__func__.12250+0x440>
  412158:	add	x1, x0, #0x21b
  41215c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412160:	add	x4, x0, #0x8c0
  412164:	mov	w3, #0x172                 	// #370
  412168:	mov	x2, x1
  41216c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412170:	add	x1, x0, #0x238
  412174:	mov	w0, #0x0                   	// #0
  412178:	bl	407650 <log_assert_failed_realm@plt>
  41217c:	ldr	w0, [sp, #52]
  412180:	bl	410ec8 <pid_is_valid>
  412184:	and	w0, w0, #0xff
  412188:	eor	w0, w0, #0x1
  41218c:	and	w0, w0, #0xff
  412190:	cmp	w0, #0x0
  412194:	b.eq	4121a0 <manager_get_user_by_pid+0x9c>  // b.none
  412198:	mov	w19, #0xffffffea            	// #-22
  41219c:	b	412200 <manager_get_user_by_pid+0xfc>
  4121a0:	add	x0, sp, #0x48
  4121a4:	mov	x1, x0
  4121a8:	ldr	w0, [sp, #52]
  4121ac:	bl	407270 <cg_pid_get_slice@plt>
  4121b0:	str	w0, [sp, #68]
  4121b4:	ldr	w0, [sp, #68]
  4121b8:	cmp	w0, #0x0
  4121bc:	b.lt	4121d4 <manager_get_user_by_pid+0xd0>  // b.tstop
  4121c0:	ldr	x0, [sp, #56]
  4121c4:	ldr	x0, [x0, #224]
  4121c8:	ldr	x1, [sp, #72]
  4121cc:	bl	410cc8 <hashmap_get>
  4121d0:	str	x0, [sp, #80]
  4121d4:	ldr	x0, [sp, #40]
  4121d8:	cmp	x0, #0x0
  4121dc:	b.eq	4121ec <manager_get_user_by_pid+0xe8>  // b.none
  4121e0:	ldr	x0, [sp, #40]
  4121e4:	ldr	x1, [sp, #80]
  4121e8:	str	x1, [x0]
  4121ec:	ldr	x0, [sp, #80]
  4121f0:	cmp	x0, #0x0
  4121f4:	cset	w0, ne  // ne = any
  4121f8:	and	w0, w0, #0xff
  4121fc:	mov	w19, w0
  412200:	add	x0, sp, #0x48
  412204:	bl	410ca4 <freep>
  412208:	mov	w1, w19
  41220c:	adrp	x0, 460000 <wordlist.10364+0x370>
  412210:	ldr	x0, [x0, #4024]
  412214:	ldr	x2, [sp, #88]
  412218:	ldr	x0, [x0]
  41221c:	eor	x0, x2, x0
  412220:	cmp	x0, #0x0
  412224:	b.eq	41222c <manager_get_user_by_pid+0x128>  // b.none
  412228:	bl	407b20 <__stack_chk_fail@plt>
  41222c:	mov	w0, w1
  412230:	ldr	x19, [sp, #16]
  412234:	ldp	x29, x30, [sp], #96
  412238:	ret

000000000041223c <manager_get_idle_hint>:
  41223c:	stp	x29, x30, [sp, #-112]!
  412240:	mov	x29, sp
  412244:	str	x0, [sp, #24]
  412248:	str	x1, [sp, #16]
  41224c:	adrp	x0, 460000 <wordlist.10364+0x370>
  412250:	ldr	x0, [x0, #4024]
  412254:	ldr	x1, [x0]
  412258:	str	x1, [sp, #104]
  41225c:	mov	x1, #0x0                   	// #0
  412260:	stp	xzr, xzr, [sp, #56]
  412264:	ldr	x0, [sp, #24]
  412268:	cmp	x0, #0x0
  41226c:	cset	w0, eq  // eq = none
  412270:	and	w0, w0, #0xff
  412274:	and	x0, x0, #0xff
  412278:	cmp	x0, #0x0
  41227c:	b.eq	4122a8 <manager_get_idle_hint+0x6c>  // b.none
  412280:	adrp	x0, 43e000 <__func__.12250+0x440>
  412284:	add	x1, x0, #0x21b
  412288:	adrp	x0, 43e000 <__func__.12250+0x440>
  41228c:	add	x4, x0, #0x8d8
  412290:	mov	w3, #0x187                 	// #391
  412294:	mov	x2, x1
  412298:	adrp	x0, 43e000 <__func__.12250+0x440>
  41229c:	add	x1, x0, #0x238
  4122a0:	mov	w0, #0x0                   	// #0
  4122a4:	bl	407650 <log_assert_failed_realm@plt>
  4122a8:	mov	x7, #0x0                   	// #0
  4122ac:	mov	w6, #0x0                   	// #0
  4122b0:	mov	w5, #0x0                   	// #0
  4122b4:	mov	w4, #0x0                   	// #0
  4122b8:	ldr	x3, [sp, #16]
  4122bc:	mov	w2, #0x0                   	// #0
  4122c0:	mov	w1, #0x4                   	// #4
  4122c4:	ldr	x0, [sp, #24]
  4122c8:	bl	424730 <manager_is_inhibited>
  4122cc:	and	w0, w0, #0xff
  4122d0:	cmp	w0, #0x0
  4122d4:	cset	w0, ne  // ne = any
  4122d8:	and	w0, w0, #0xff
  4122dc:	eor	w0, w0, #0x1
  4122e0:	and	w0, w0, #0xff
  4122e4:	strb	w0, [sp, #43]
  4122e8:	ldrb	w0, [sp, #43]
  4122ec:	and	w0, w0, #0x1
  4122f0:	strb	w0, [sp, #43]
  4122f4:	mov	w0, #0xfffffffe            	// #-2
  4122f8:	str	w0, [sp, #72]
  4122fc:	str	xzr, [sp, #80]
  412300:	b	412398 <manager_get_idle_hint+0x15c>
  412304:	ldr	x0, [sp, #48]
  412308:	add	x1, sp, #0x58
  41230c:	bl	432a54 <session_get_idle_hint>
  412310:	str	w0, [sp, #44]
  412314:	ldr	w0, [sp, #44]
  412318:	cmp	w0, #0x0
  41231c:	b.ge	412328 <manager_get_idle_hint+0xec>  // b.tcont
  412320:	ldr	w0, [sp, #44]
  412324:	b	4123d8 <manager_get_idle_hint+0x19c>
  412328:	ldr	w0, [sp, #44]
  41232c:	cmp	w0, #0x0
  412330:	b.ne	412374 <manager_get_idle_hint+0x138>  // b.any
  412334:	ldrb	w0, [sp, #43]
  412338:	eor	w0, w0, #0x1
  41233c:	and	w0, w0, #0xff
  412340:	cmp	w0, #0x0
  412344:	b.eq	412364 <manager_get_idle_hint+0x128>  // b.none
  412348:	ldr	x1, [sp, #96]
  41234c:	ldr	x0, [sp, #64]
  412350:	cmp	x1, x0
  412354:	b.cs	412398 <manager_get_idle_hint+0x15c>  // b.hs, b.nlast
  412358:	ldp	x0, x1, [sp, #88]
  41235c:	stp	x0, x1, [sp, #56]
  412360:	b	412398 <manager_get_idle_hint+0x15c>
  412364:	strb	wzr, [sp, #43]
  412368:	ldp	x0, x1, [sp, #88]
  41236c:	stp	x0, x1, [sp, #56]
  412370:	b	412398 <manager_get_idle_hint+0x15c>
  412374:	ldrb	w0, [sp, #43]
  412378:	cmp	w0, #0x0
  41237c:	b.eq	412398 <manager_get_idle_hint+0x15c>  // b.none
  412380:	ldr	x1, [sp, #96]
  412384:	ldr	x0, [sp, #64]
  412388:	cmp	x1, x0
  41238c:	b.ls	412398 <manager_get_idle_hint+0x15c>  // b.plast
  412390:	ldp	x0, x1, [sp, #88]
  412394:	stp	x0, x1, [sp, #56]
  412398:	ldr	x0, [sp, #24]
  41239c:	ldr	x0, [x0, #32]
  4123a0:	add	x2, sp, #0x30
  4123a4:	add	x1, sp, #0x48
  4123a8:	mov	x3, #0x0                   	// #0
  4123ac:	bl	410cec <hashmap_iterate>
  4123b0:	and	w0, w0, #0xff
  4123b4:	cmp	w0, #0x0
  4123b8:	b.ne	412304 <manager_get_idle_hint+0xc8>  // b.any
  4123bc:	ldr	x0, [sp, #16]
  4123c0:	cmp	x0, #0x0
  4123c4:	b.eq	4123d4 <manager_get_idle_hint+0x198>  // b.none
  4123c8:	ldr	x2, [sp, #16]
  4123cc:	ldp	x0, x1, [sp, #56]
  4123d0:	stp	x0, x1, [x2]
  4123d4:	ldrb	w0, [sp, #43]
  4123d8:	mov	w1, w0
  4123dc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4123e0:	ldr	x0, [x0, #4024]
  4123e4:	ldr	x2, [sp, #104]
  4123e8:	ldr	x0, [x0]
  4123ec:	eor	x0, x2, x0
  4123f0:	cmp	x0, #0x0
  4123f4:	b.eq	4123fc <manager_get_idle_hint+0x1c0>  // b.none
  4123f8:	bl	407b20 <__stack_chk_fail@plt>
  4123fc:	mov	w0, w1
  412400:	ldp	x29, x30, [sp], #112
  412404:	ret

0000000000412408 <manager_shall_kill>:
  412408:	stp	x29, x30, [sp, #-32]!
  41240c:	mov	x29, sp
  412410:	str	x0, [sp, #24]
  412414:	str	x1, [sp, #16]
  412418:	ldr	x0, [sp, #24]
  41241c:	cmp	x0, #0x0
  412420:	cset	w0, eq  // eq = none
  412424:	and	w0, w0, #0xff
  412428:	and	x0, x0, #0xff
  41242c:	cmp	x0, #0x0
  412430:	b.eq	41245c <manager_shall_kill+0x54>  // b.none
  412434:	adrp	x0, 43e000 <__func__.12250+0x440>
  412438:	add	x1, x0, #0x21b
  41243c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412440:	add	x4, x0, #0x8f0
  412444:	mov	w3, #0x1a9                 	// #425
  412448:	mov	x2, x1
  41244c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412450:	add	x1, x0, #0x238
  412454:	mov	w0, #0x0                   	// #0
  412458:	bl	407650 <log_assert_failed_realm@plt>
  41245c:	ldr	x0, [sp, #16]
  412460:	cmp	x0, #0x0
  412464:	cset	w0, eq  // eq = none
  412468:	and	w0, w0, #0xff
  41246c:	and	x0, x0, #0xff
  412470:	cmp	x0, #0x0
  412474:	b.eq	4124a0 <manager_shall_kill+0x98>  // b.none
  412478:	adrp	x0, 43e000 <__func__.12250+0x440>
  41247c:	add	x1, x0, #0x21b
  412480:	adrp	x0, 43e000 <__func__.12250+0x440>
  412484:	add	x4, x0, #0x8f0
  412488:	mov	w3, #0x1aa                 	// #426
  41248c:	mov	x2, x1
  412490:	adrp	x0, 43e000 <__func__.12250+0x440>
  412494:	add	x1, x0, #0x378
  412498:	mov	w0, #0x0                   	// #0
  41249c:	bl	407650 <log_assert_failed_realm@plt>
  4124a0:	ldr	x0, [sp, #24]
  4124a4:	ldr	x0, [x0, #184]
  4124a8:	cmp	x0, #0x0
  4124ac:	b.ne	4124d0 <manager_shall_kill+0xc8>  // b.any
  4124b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4124b4:	add	x1, x0, #0x380
  4124b8:	ldr	x0, [sp, #16]
  4124bc:	bl	407f30 <strcmp@plt>
  4124c0:	cmp	w0, #0x0
  4124c4:	b.ne	4124d0 <manager_shall_kill+0xc8>  // b.any
  4124c8:	mov	w0, #0x0                   	// #0
  4124cc:	b	412538 <manager_shall_kill+0x130>
  4124d0:	ldr	x0, [sp, #24]
  4124d4:	ldr	x0, [x0, #184]
  4124d8:	ldr	x1, [sp, #16]
  4124dc:	bl	407cb0 <strv_find@plt>
  4124e0:	cmp	x0, #0x0
  4124e4:	b.eq	4124f0 <manager_shall_kill+0xe8>  // b.none
  4124e8:	mov	w0, #0x0                   	// #0
  4124ec:	b	412538 <manager_shall_kill+0x130>
  4124f0:	ldr	x0, [sp, #24]
  4124f4:	ldr	x0, [x0, #176]
  4124f8:	bl	410e74 <strv_isempty>
  4124fc:	and	w0, w0, #0xff
  412500:	eor	w0, w0, #0x1
  412504:	and	w0, w0, #0xff
  412508:	cmp	w0, #0x0
  41250c:	b.eq	412530 <manager_shall_kill+0x128>  // b.none
  412510:	ldr	x0, [sp, #24]
  412514:	ldr	x0, [x0, #176]
  412518:	ldr	x1, [sp, #16]
  41251c:	bl	407cb0 <strv_find@plt>
  412520:	cmp	x0, #0x0
  412524:	cset	w0, ne  // ne = any
  412528:	and	w0, w0, #0xff
  41252c:	b	412538 <manager_shall_kill+0x130>
  412530:	ldr	x0, [sp, #24]
  412534:	ldrb	w0, [x0, #192]
  412538:	ldp	x29, x30, [sp], #32
  41253c:	ret

0000000000412540 <config_parse_n_autovts>:
  412540:	sub	sp, sp, #0xa0
  412544:	stp	x29, x30, [sp, #16]
  412548:	add	x29, sp, #0x10
  41254c:	str	x0, [sp, #104]
  412550:	str	x1, [sp, #96]
  412554:	str	w2, [sp, #92]
  412558:	str	x3, [sp, #80]
  41255c:	str	w4, [sp, #88]
  412560:	str	x5, [sp, #72]
  412564:	str	w6, [sp, #68]
  412568:	str	x7, [sp, #56]
  41256c:	ldr	x0, [sp, #160]
  412570:	str	x0, [sp, #48]
  412574:	ldr	x0, [sp, #168]
  412578:	str	x0, [sp, #40]
  41257c:	adrp	x0, 460000 <wordlist.10364+0x370>
  412580:	ldr	x0, [x0, #4024]
  412584:	ldr	x1, [x0]
  412588:	str	x1, [sp, #152]
  41258c:	mov	x1, #0x0                   	// #0
  412590:	ldr	x0, [sp, #48]
  412594:	str	x0, [sp, #144]
  412598:	ldr	x0, [sp, #96]
  41259c:	cmp	x0, #0x0
  4125a0:	cset	w0, eq  // eq = none
  4125a4:	and	w0, w0, #0xff
  4125a8:	and	x0, x0, #0xff
  4125ac:	cmp	x0, #0x0
  4125b0:	b.eq	4125dc <config_parse_n_autovts+0x9c>  // b.none
  4125b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4125b8:	add	x1, x0, #0x21b
  4125bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4125c0:	add	x4, x0, #0x908
  4125c4:	mov	w3, #0x1c8                 	// #456
  4125c8:	mov	x2, x1
  4125cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4125d0:	add	x1, x0, #0x388
  4125d4:	mov	w0, #0x0                   	// #0
  4125d8:	bl	407650 <log_assert_failed_realm@plt>
  4125dc:	ldr	x0, [sp, #72]
  4125e0:	cmp	x0, #0x0
  4125e4:	cset	w0, eq  // eq = none
  4125e8:	and	w0, w0, #0xff
  4125ec:	and	x0, x0, #0xff
  4125f0:	cmp	x0, #0x0
  4125f4:	b.eq	412620 <config_parse_n_autovts+0xe0>  // b.none
  4125f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4125fc:	add	x1, x0, #0x21b
  412600:	adrp	x0, 43e000 <__func__.12250+0x440>
  412604:	add	x4, x0, #0x908
  412608:	mov	w3, #0x1c9                 	// #457
  41260c:	mov	x2, x1
  412610:	adrp	x0, 43e000 <__func__.12250+0x440>
  412614:	add	x1, x0, #0x398
  412618:	mov	w0, #0x0                   	// #0
  41261c:	bl	407650 <log_assert_failed_realm@plt>
  412620:	ldr	x0, [sp, #56]
  412624:	cmp	x0, #0x0
  412628:	cset	w0, eq  // eq = none
  41262c:	and	w0, w0, #0xff
  412630:	and	x0, x0, #0xff
  412634:	cmp	x0, #0x0
  412638:	b.eq	412664 <config_parse_n_autovts+0x124>  // b.none
  41263c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412640:	add	x1, x0, #0x21b
  412644:	adrp	x0, 43e000 <__func__.12250+0x440>
  412648:	add	x4, x0, #0x908
  41264c:	mov	w3, #0x1ca                 	// #458
  412650:	mov	x2, x1
  412654:	adrp	x0, 43e000 <__func__.12250+0x440>
  412658:	add	x1, x0, #0x3a0
  41265c:	mov	w0, #0x0                   	// #0
  412660:	bl	407650 <log_assert_failed_realm@plt>
  412664:	ldr	x0, [sp, #48]
  412668:	cmp	x0, #0x0
  41266c:	cset	w0, eq  // eq = none
  412670:	and	w0, w0, #0xff
  412674:	and	x0, x0, #0xff
  412678:	cmp	x0, #0x0
  41267c:	b.eq	4126a8 <config_parse_n_autovts+0x168>  // b.none
  412680:	adrp	x0, 43e000 <__func__.12250+0x440>
  412684:	add	x1, x0, #0x21b
  412688:	adrp	x0, 43e000 <__func__.12250+0x440>
  41268c:	add	x4, x0, #0x908
  412690:	mov	w3, #0x1cb                 	// #459
  412694:	mov	x2, x1
  412698:	adrp	x0, 43e000 <__func__.12250+0x440>
  41269c:	add	x1, x0, #0x3a8
  4126a0:	mov	w0, #0x0                   	// #0
  4126a4:	bl	407650 <log_assert_failed_realm@plt>
  4126a8:	add	x0, sp, #0x78
  4126ac:	mov	x1, x0
  4126b0:	ldr	x0, [sp, #56]
  4126b4:	bl	410e4c <safe_atou>
  4126b8:	str	w0, [sp, #124]
  4126bc:	ldr	w0, [sp, #124]
  4126c0:	cmp	w0, #0x0
  4126c4:	b.ge	41274c <config_parse_n_autovts+0x20c>  // b.tcont
  4126c8:	mov	w0, #0x3                   	// #3
  4126cc:	str	w0, [sp, #136]
  4126d0:	ldr	w0, [sp, #124]
  4126d4:	str	w0, [sp, #140]
  4126d8:	mov	w0, #0x0                   	// #0
  4126dc:	bl	4083e0 <log_get_max_level_realm@plt>
  4126e0:	mov	w1, w0
  4126e4:	ldr	w0, [sp, #136]
  4126e8:	and	w0, w0, #0x7
  4126ec:	cmp	w1, w0
  4126f0:	b.lt	41273c <config_parse_n_autovts+0x1fc>  // b.tstop
  4126f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4126f8:	add	x1, x0, #0x21b
  4126fc:	ldr	x0, [sp, #56]
  412700:	str	x0, [sp, #8]
  412704:	adrp	x0, 43e000 <__func__.12250+0x440>
  412708:	add	x0, x0, #0x3b0
  41270c:	str	x0, [sp]
  412710:	adrp	x0, 43e000 <__func__.12250+0x440>
  412714:	add	x7, x0, #0x920
  412718:	mov	w6, #0x1cf                 	// #463
  41271c:	mov	x5, x1
  412720:	ldr	w4, [sp, #140]
  412724:	ldr	w3, [sp, #92]
  412728:	ldr	x2, [sp, #96]
  41272c:	ldr	w1, [sp, #136]
  412730:	ldr	x0, [sp, #104]
  412734:	bl	407ed0 <log_syntax_internal@plt>
  412738:	b	412744 <config_parse_n_autovts+0x204>
  41273c:	ldr	w0, [sp, #140]
  412740:	cmp	w0, #0x0
  412744:	mov	w0, #0x0                   	// #0
  412748:	b	4127ec <config_parse_n_autovts+0x2ac>
  41274c:	ldr	w0, [sp, #120]
  412750:	cmp	w0, #0xf
  412754:	b.ls	4127dc <config_parse_n_autovts+0x29c>  // b.plast
  412758:	mov	w0, #0x3                   	// #3
  41275c:	str	w0, [sp, #128]
  412760:	ldr	w0, [sp, #124]
  412764:	str	w0, [sp, #132]
  412768:	mov	w0, #0x0                   	// #0
  41276c:	bl	4083e0 <log_get_max_level_realm@plt>
  412770:	mov	w1, w0
  412774:	ldr	w0, [sp, #128]
  412778:	and	w0, w0, #0x7
  41277c:	cmp	w1, w0
  412780:	b.lt	4127cc <config_parse_n_autovts+0x28c>  // b.tstop
  412784:	adrp	x0, 43e000 <__func__.12250+0x440>
  412788:	add	x1, x0, #0x21b
  41278c:	ldr	x0, [sp, #56]
  412790:	str	x0, [sp, #8]
  412794:	adrp	x0, 43e000 <__func__.12250+0x440>
  412798:	add	x0, x0, #0x3e0
  41279c:	str	x0, [sp]
  4127a0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4127a4:	add	x7, x0, #0x920
  4127a8:	mov	w6, #0x1d4                 	// #468
  4127ac:	mov	x5, x1
  4127b0:	ldr	w4, [sp, #132]
  4127b4:	ldr	w3, [sp, #92]
  4127b8:	ldr	x2, [sp, #96]
  4127bc:	ldr	w1, [sp, #128]
  4127c0:	ldr	x0, [sp, #104]
  4127c4:	bl	407ed0 <log_syntax_internal@plt>
  4127c8:	b	4127d4 <config_parse_n_autovts+0x294>
  4127cc:	ldr	w0, [sp, #132]
  4127d0:	cmp	w0, #0x0
  4127d4:	mov	w0, #0x0                   	// #0
  4127d8:	b	4127ec <config_parse_n_autovts+0x2ac>
  4127dc:	ldr	w1, [sp, #120]
  4127e0:	ldr	x0, [sp, #144]
  4127e4:	str	w1, [x0]
  4127e8:	mov	w0, #0x0                   	// #0
  4127ec:	mov	w1, w0
  4127f0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4127f4:	ldr	x0, [x0, #4024]
  4127f8:	ldr	x2, [sp, #152]
  4127fc:	ldr	x0, [x0]
  412800:	eor	x0, x2, x0
  412804:	cmp	x0, #0x0
  412808:	b.eq	412810 <config_parse_n_autovts+0x2d0>  // b.none
  41280c:	bl	407b20 <__stack_chk_fail@plt>
  412810:	mov	w0, w1
  412814:	ldp	x29, x30, [sp, #16]
  412818:	add	sp, sp, #0xa0
  41281c:	ret

0000000000412820 <vt_is_busy>:
  412820:	stp	x29, x30, [sp, #-80]!
  412824:	mov	x29, sp
  412828:	str	x19, [sp, #16]
  41282c:	str	w0, [sp, #44]
  412830:	adrp	x0, 460000 <wordlist.10364+0x370>
  412834:	ldr	x0, [x0, #4024]
  412838:	ldr	x1, [x0]
  41283c:	str	x1, [sp, #72]
  412840:	mov	x1, #0x0                   	// #0
  412844:	str	wzr, [sp, #60]
  412848:	ldr	w0, [sp, #44]
  41284c:	cmp	w0, #0x0
  412850:	cset	w0, eq  // eq = none
  412854:	and	w0, w0, #0xff
  412858:	and	x0, x0, #0xff
  41285c:	cmp	x0, #0x0
  412860:	b.eq	41288c <vt_is_busy+0x6c>  // b.none
  412864:	adrp	x0, 43e000 <__func__.12250+0x440>
  412868:	add	x1, x0, #0x21b
  41286c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412870:	add	x4, x0, #0x938
  412874:	mov	w3, #0x1e1                 	// #481
  412878:	mov	x2, x1
  41287c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412880:	add	x1, x0, #0x418
  412884:	mov	w0, #0x0                   	// #0
  412888:	bl	407650 <log_assert_failed_realm@plt>
  41288c:	ldr	w0, [sp, #44]
  412890:	cmp	w0, #0xf
  412894:	cset	w0, hi  // hi = pmore
  412898:	and	w0, w0, #0xff
  41289c:	and	x0, x0, #0xff
  4128a0:	cmp	x0, #0x0
  4128a4:	b.eq	4128d0 <vt_is_busy+0xb0>  // b.none
  4128a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4128ac:	add	x1, x0, #0x21b
  4128b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4128b4:	add	x4, x0, #0x938
  4128b8:	mov	w3, #0x1e4                 	// #484
  4128bc:	mov	x2, x1
  4128c0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4128c4:	add	x1, x0, #0x428
  4128c8:	mov	w0, #0x0                   	// #0
  4128cc:	bl	407650 <log_assert_failed_realm@plt>
  4128d0:	mov	w1, #0x102                 	// #258
  4128d4:	movk	w1, #0x8, lsl #16
  4128d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4128dc:	add	x0, x0, #0x438
  4128e0:	bl	407d20 <open_terminal@plt>
  4128e4:	str	w0, [sp, #56]
  4128e8:	ldr	w0, [sp, #56]
  4128ec:	cmp	w0, #0x0
  4128f0:	b.ge	412904 <vt_is_busy+0xe4>  // b.tcont
  4128f4:	bl	407960 <__errno_location@plt>
  4128f8:	ldr	w0, [x0]
  4128fc:	neg	w19, w0
  412900:	b	41295c <vt_is_busy+0x13c>
  412904:	ldr	w0, [sp, #56]
  412908:	add	x1, sp, #0x40
  41290c:	mov	x2, x1
  412910:	mov	x1, #0x5603                	// #22019
  412914:	bl	407e30 <ioctl@plt>
  412918:	cmp	w0, #0x0
  41291c:	b.ge	412934 <vt_is_busy+0x114>  // b.tcont
  412920:	bl	407960 <__errno_location@plt>
  412924:	ldr	w0, [x0]
  412928:	neg	w0, w0
  41292c:	str	w0, [sp, #60]
  412930:	b	412958 <vt_is_busy+0x138>
  412934:	ldrh	w0, [sp, #68]
  412938:	mov	w1, w0
  41293c:	ldr	w0, [sp, #44]
  412940:	asr	w0, w1, w0
  412944:	and	w0, w0, #0x1
  412948:	cmp	w0, #0x0
  41294c:	cset	w0, ne  // ne = any
  412950:	and	w0, w0, #0xff
  412954:	str	w0, [sp, #60]
  412958:	ldr	w19, [sp, #60]
  41295c:	add	x0, sp, #0x38
  412960:	bl	410e28 <closep>
  412964:	mov	w1, w19
  412968:	adrp	x0, 460000 <wordlist.10364+0x370>
  41296c:	ldr	x0, [x0, #4024]
  412970:	ldr	x2, [sp, #72]
  412974:	ldr	x0, [x0]
  412978:	eor	x0, x2, x0
  41297c:	cmp	x0, #0x0
  412980:	b.eq	412988 <vt_is_busy+0x168>  // b.none
  412984:	bl	407b20 <__stack_chk_fail@plt>
  412988:	mov	w0, w1
  41298c:	ldr	x19, [sp, #16]
  412990:	ldp	x29, x30, [sp], #80
  412994:	ret

0000000000412998 <manager_spawn_autovt>:
  412998:	sub	sp, sp, #0x90
  41299c:	stp	x29, x30, [sp, #16]
  4129a0:	add	x29, sp, #0x10
  4129a4:	stp	x19, x20, [sp, #32]
  4129a8:	str	x0, [sp, #56]
  4129ac:	str	w1, [sp, #52]
  4129b0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4129b4:	ldr	x0, [x0, #4024]
  4129b8:	ldr	x1, [x0]
  4129bc:	str	x1, [sp, #136]
  4129c0:	mov	x1, #0x0                   	// #0
  4129c4:	str	xzr, [sp, #80]
  4129c8:	str	xzr, [sp, #88]
  4129cc:	str	wzr, [sp, #96]
  4129d0:	ldr	x0, [sp, #56]
  4129d4:	cmp	x0, #0x0
  4129d8:	cset	w0, eq  // eq = none
  4129dc:	and	w0, w0, #0xff
  4129e0:	and	x0, x0, #0xff
  4129e4:	cmp	x0, #0x0
  4129e8:	b.eq	412a14 <manager_spawn_autovt+0x7c>  // b.none
  4129ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4129f0:	add	x1, x0, #0x21b
  4129f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4129f8:	add	x4, x0, #0x948
  4129fc:	mov	w3, #0x1fd                 	// #509
  412a00:	mov	x2, x1
  412a04:	adrp	x0, 43e000 <__func__.12250+0x440>
  412a08:	add	x1, x0, #0x238
  412a0c:	mov	w0, #0x0                   	// #0
  412a10:	bl	407650 <log_assert_failed_realm@plt>
  412a14:	ldr	w0, [sp, #52]
  412a18:	cmp	w0, #0x0
  412a1c:	cset	w0, eq  // eq = none
  412a20:	and	w0, w0, #0xff
  412a24:	and	x0, x0, #0xff
  412a28:	cmp	x0, #0x0
  412a2c:	b.eq	412a58 <manager_spawn_autovt+0xc0>  // b.none
  412a30:	adrp	x0, 43e000 <__func__.12250+0x440>
  412a34:	add	x1, x0, #0x21b
  412a38:	adrp	x0, 43e000 <__func__.12250+0x440>
  412a3c:	add	x4, x0, #0x948
  412a40:	mov	w3, #0x1fe                 	// #510
  412a44:	mov	x2, x1
  412a48:	adrp	x0, 43e000 <__func__.12250+0x440>
  412a4c:	add	x1, x0, #0x418
  412a50:	mov	w0, #0x0                   	// #0
  412a54:	bl	407650 <log_assert_failed_realm@plt>
  412a58:	ldr	x0, [sp, #56]
  412a5c:	ldr	w0, [x0, #156]
  412a60:	ldr	w1, [sp, #52]
  412a64:	cmp	w1, w0
  412a68:	b.ls	412a88 <manager_spawn_autovt+0xf0>  // b.plast
  412a6c:	ldr	x0, [sp, #56]
  412a70:	ldr	w0, [x0, #160]
  412a74:	ldr	w1, [sp, #52]
  412a78:	cmp	w1, w0
  412a7c:	b.eq	412a88 <manager_spawn_autovt+0xf0>  // b.none
  412a80:	mov	w19, #0x0                   	// #0
  412a84:	b	412c00 <manager_spawn_autovt+0x268>
  412a88:	ldr	x0, [sp, #56]
  412a8c:	ldr	w0, [x0, #160]
  412a90:	ldr	w1, [sp, #52]
  412a94:	cmp	w1, w0
  412a98:	b.eq	412ad0 <manager_spawn_autovt+0x138>  // b.none
  412a9c:	ldr	w0, [sp, #52]
  412aa0:	bl	412820 <vt_is_busy>
  412aa4:	str	w0, [sp, #64]
  412aa8:	ldr	w0, [sp, #64]
  412aac:	cmp	w0, #0x0
  412ab0:	b.ge	412abc <manager_spawn_autovt+0x124>  // b.tcont
  412ab4:	ldr	w19, [sp, #64]
  412ab8:	b	412c00 <manager_spawn_autovt+0x268>
  412abc:	ldr	w0, [sp, #64]
  412ac0:	cmp	w0, #0x0
  412ac4:	b.le	412ad0 <manager_spawn_autovt+0x138>
  412ac8:	mov	w19, #0xfffffff0            	// #-16
  412acc:	b	412c00 <manager_spawn_autovt+0x268>
  412ad0:	add	x4, sp, #0x68
  412ad4:	ldr	w3, [sp, #52]
  412ad8:	adrp	x0, 43e000 <__func__.12250+0x440>
  412adc:	add	x2, x0, #0x448
  412ae0:	mov	x1, #0x1f                  	// #31
  412ae4:	mov	x0, x4
  412ae8:	bl	407460 <snprintf@plt>
  412aec:	ldr	x0, [sp, #56]
  412af0:	ldr	x8, [x0, #8]
  412af4:	add	x1, sp, #0x50
  412af8:	adrp	x0, 43e000 <__func__.12250+0x440>
  412afc:	add	x0, x0, #0x4e0
  412b00:	str	x0, [sp, #8]
  412b04:	add	x0, sp, #0x68
  412b08:	str	x0, [sp]
  412b0c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412b10:	add	x7, x0, #0x460
  412b14:	mov	x6, #0x0                   	// #0
  412b18:	mov	x5, x1
  412b1c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412b20:	add	x4, x0, #0x468
  412b24:	adrp	x0, 43e000 <__func__.12250+0x440>
  412b28:	add	x3, x0, #0x478
  412b2c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412b30:	add	x2, x0, #0x4a0
  412b34:	adrp	x0, 43e000 <__func__.12250+0x440>
  412b38:	add	x1, x0, #0x4c0
  412b3c:	mov	x0, x8
  412b40:	bl	4082b0 <sd_bus_call_method@plt>
  412b44:	str	w0, [sp, #64]
  412b48:	ldr	w0, [sp, #64]
  412b4c:	cmp	w0, #0x0
  412b50:	b.ge	412bfc <manager_spawn_autovt+0x264>  // b.tcont
  412b54:	mov	w0, #0x3                   	// #3
  412b58:	str	w0, [sp, #68]
  412b5c:	ldr	w0, [sp, #64]
  412b60:	str	w0, [sp, #72]
  412b64:	str	wzr, [sp, #76]
  412b68:	ldr	w0, [sp, #76]
  412b6c:	bl	4083e0 <log_get_max_level_realm@plt>
  412b70:	mov	w1, w0
  412b74:	ldr	w0, [sp, #68]
  412b78:	and	w0, w0, #0x7
  412b7c:	cmp	w1, w0
  412b80:	b.lt	412be4 <manager_spawn_autovt+0x24c>  // b.tstop
  412b84:	ldr	w0, [sp, #76]
  412b88:	lsl	w1, w0, #10
  412b8c:	ldr	w0, [sp, #68]
  412b90:	orr	w19, w1, w0
  412b94:	adrp	x0, 43e000 <__func__.12250+0x440>
  412b98:	add	x20, x0, #0x21b
  412b9c:	add	x0, sp, #0x50
  412ba0:	ldr	w1, [sp, #64]
  412ba4:	bl	407000 <bus_error_message@plt>
  412ba8:	mov	x1, x0
  412bac:	add	x0, sp, #0x68
  412bb0:	mov	x7, x1
  412bb4:	mov	x6, x0
  412bb8:	adrp	x0, 43e000 <__func__.12250+0x440>
  412bbc:	add	x5, x0, #0x4e8
  412bc0:	adrp	x0, 43e000 <__func__.12250+0x440>
  412bc4:	add	x4, x0, #0x960
  412bc8:	mov	w3, #0x21b                 	// #539
  412bcc:	mov	x2, x20
  412bd0:	ldr	w1, [sp, #72]
  412bd4:	mov	w0, w19
  412bd8:	bl	407d60 <log_internal_realm@plt>
  412bdc:	mov	w19, w0
  412be0:	b	412c00 <manager_spawn_autovt+0x268>
  412be4:	ldr	w0, [sp, #72]
  412be8:	cmp	w0, #0x0
  412bec:	cneg	w0, w0, lt  // lt = tstop
  412bf0:	and	w0, w0, #0xff
  412bf4:	neg	w19, w0
  412bf8:	b	412c00 <manager_spawn_autovt+0x268>
  412bfc:	mov	w19, #0x0                   	// #0
  412c00:	add	x0, sp, #0x50
  412c04:	bl	407c80 <sd_bus_error_free@plt>
  412c08:	mov	w1, w19
  412c0c:	adrp	x0, 460000 <wordlist.10364+0x370>
  412c10:	ldr	x0, [x0, #4024]
  412c14:	ldr	x2, [sp, #136]
  412c18:	ldr	x0, [x0]
  412c1c:	eor	x0, x2, x0
  412c20:	cmp	x0, #0x0
  412c24:	b.eq	412c2c <manager_spawn_autovt+0x294>  // b.none
  412c28:	bl	407b20 <__stack_chk_fail@plt>
  412c2c:	mov	w0, w1
  412c30:	ldp	x19, x20, [sp, #32]
  412c34:	ldp	x29, x30, [sp, #16]
  412c38:	add	sp, sp, #0x90
  412c3c:	ret

0000000000412c40 <manager_is_lid_closed>:
  412c40:	stp	x29, x30, [sp, #-64]!
  412c44:	mov	x29, sp
  412c48:	str	x0, [sp, #24]
  412c4c:	adrp	x0, 460000 <wordlist.10364+0x370>
  412c50:	ldr	x0, [x0, #4024]
  412c54:	ldr	x1, [x0]
  412c58:	str	x1, [sp, #56]
  412c5c:	mov	x1, #0x0                   	// #0
  412c60:	mov	w0, #0xfffffffe            	// #-2
  412c64:	str	w0, [sp, #40]
  412c68:	str	xzr, [sp, #48]
  412c6c:	b	412c88 <manager_is_lid_closed+0x48>
  412c70:	ldr	x0, [sp, #32]
  412c74:	ldrb	w0, [x0, #44]
  412c78:	cmp	w0, #0x0
  412c7c:	b.eq	412c88 <manager_is_lid_closed+0x48>  // b.none
  412c80:	mov	w0, #0x1                   	// #1
  412c84:	b	412cb0 <manager_is_lid_closed+0x70>
  412c88:	ldr	x0, [sp, #24]
  412c8c:	ldr	x0, [x0, #64]
  412c90:	add	x2, sp, #0x20
  412c94:	add	x1, sp, #0x28
  412c98:	mov	x3, #0x0                   	// #0
  412c9c:	bl	410cec <hashmap_iterate>
  412ca0:	and	w0, w0, #0xff
  412ca4:	cmp	w0, #0x0
  412ca8:	b.ne	412c70 <manager_is_lid_closed+0x30>  // b.any
  412cac:	mov	w0, #0x0                   	// #0
  412cb0:	mov	w1, w0
  412cb4:	adrp	x0, 460000 <wordlist.10364+0x370>
  412cb8:	ldr	x0, [x0, #4024]
  412cbc:	ldr	x2, [sp, #56]
  412cc0:	ldr	x0, [x0]
  412cc4:	eor	x0, x2, x0
  412cc8:	cmp	x0, #0x0
  412ccc:	b.eq	412cd4 <manager_is_lid_closed+0x94>  // b.none
  412cd0:	bl	407b20 <__stack_chk_fail@plt>
  412cd4:	mov	w0, w1
  412cd8:	ldp	x29, x30, [sp], #64
  412cdc:	ret

0000000000412ce0 <manager_is_docked>:
  412ce0:	stp	x29, x30, [sp, #-64]!
  412ce4:	mov	x29, sp
  412ce8:	str	x0, [sp, #24]
  412cec:	adrp	x0, 460000 <wordlist.10364+0x370>
  412cf0:	ldr	x0, [x0, #4024]
  412cf4:	ldr	x1, [x0]
  412cf8:	str	x1, [sp, #56]
  412cfc:	mov	x1, #0x0                   	// #0
  412d00:	mov	w0, #0xfffffffe            	// #-2
  412d04:	str	w0, [sp, #40]
  412d08:	str	xzr, [sp, #48]
  412d0c:	b	412d28 <manager_is_docked+0x48>
  412d10:	ldr	x0, [sp, #32]
  412d14:	ldrb	w0, [x0, #45]
  412d18:	cmp	w0, #0x0
  412d1c:	b.eq	412d28 <manager_is_docked+0x48>  // b.none
  412d20:	mov	w0, #0x1                   	// #1
  412d24:	b	412d50 <manager_is_docked+0x70>
  412d28:	ldr	x0, [sp, #24]
  412d2c:	ldr	x0, [x0, #64]
  412d30:	add	x2, sp, #0x20
  412d34:	add	x1, sp, #0x28
  412d38:	mov	x3, #0x0                   	// #0
  412d3c:	bl	410cec <hashmap_iterate>
  412d40:	and	w0, w0, #0xff
  412d44:	cmp	w0, #0x0
  412d48:	b.ne	412d10 <manager_is_docked+0x30>  // b.any
  412d4c:	mov	w0, #0x0                   	// #0
  412d50:	mov	w1, w0
  412d54:	adrp	x0, 460000 <wordlist.10364+0x370>
  412d58:	ldr	x0, [x0, #4024]
  412d5c:	ldr	x2, [sp, #56]
  412d60:	ldr	x0, [x0]
  412d64:	eor	x0, x2, x0
  412d68:	cmp	x0, #0x0
  412d6c:	b.eq	412d74 <manager_is_docked+0x94>  // b.none
  412d70:	bl	407b20 <__stack_chk_fail@plt>
  412d74:	mov	w0, w1
  412d78:	ldp	x29, x30, [sp], #64
  412d7c:	ret

0000000000412d80 <manager_count_external_displays>:
  412d80:	stp	x29, x30, [sp, #-256]!
  412d84:	mov	x29, sp
  412d88:	str	x19, [sp, #16]
  412d8c:	str	x0, [sp, #40]
  412d90:	adrp	x0, 460000 <wordlist.10364+0x370>
  412d94:	ldr	x0, [x0, #4024]
  412d98:	ldr	x1, [x0]
  412d9c:	str	x1, [sp, #248]
  412da0:	mov	x1, #0x0                   	// #0
  412da4:	str	xzr, [sp, #64]
  412da8:	str	wzr, [sp, #56]
  412dac:	add	x0, sp, #0x40
  412db0:	bl	4072c0 <sd_device_enumerator_new@plt>
  412db4:	str	w0, [sp, #60]
  412db8:	ldr	w0, [sp, #60]
  412dbc:	cmp	w0, #0x0
  412dc0:	b.ge	412dcc <manager_count_external_displays+0x4c>  // b.tcont
  412dc4:	ldr	w19, [sp, #60]
  412dc8:	b	413038 <manager_count_external_displays+0x2b8>
  412dcc:	ldr	x0, [sp, #64]
  412dd0:	bl	4083a0 <sd_device_enumerator_allow_uninitialized@plt>
  412dd4:	str	w0, [sp, #60]
  412dd8:	ldr	w0, [sp, #60]
  412ddc:	cmp	w0, #0x0
  412de0:	b.ge	412dec <manager_count_external_displays+0x6c>  // b.tcont
  412de4:	ldr	w19, [sp, #60]
  412de8:	b	413038 <manager_count_external_displays+0x2b8>
  412dec:	ldr	x3, [sp, #64]
  412df0:	mov	w2, #0x1                   	// #1
  412df4:	adrp	x0, 43e000 <__func__.12250+0x440>
  412df8:	add	x1, x0, #0x500
  412dfc:	mov	x0, x3
  412e00:	bl	4073a0 <sd_device_enumerator_add_match_subsystem@plt>
  412e04:	str	w0, [sp, #60]
  412e08:	ldr	w0, [sp, #60]
  412e0c:	cmp	w0, #0x0
  412e10:	b.ge	412e1c <manager_count_external_displays+0x9c>  // b.tcont
  412e14:	ldr	w19, [sp, #60]
  412e18:	b	413038 <manager_count_external_displays+0x2b8>
  412e1c:	ldr	x0, [sp, #64]
  412e20:	bl	407470 <sd_device_enumerator_get_device_first@plt>
  412e24:	str	x0, [sp, #112]
  412e28:	b	413028 <manager_count_external_displays+0x2a8>
  412e2c:	add	x0, sp, #0x68
  412e30:	mov	x1, x0
  412e34:	ldr	x0, [sp, #112]
  412e38:	bl	4083f0 <sd_device_get_parent@plt>
  412e3c:	cmp	w0, #0x0
  412e40:	b.lt	412ff0 <manager_count_external_displays+0x270>  // b.tstop
  412e44:	ldr	x0, [sp, #104]
  412e48:	add	x1, sp, #0x60
  412e4c:	bl	407890 <sd_device_get_subsystem@plt>
  412e50:	cmp	w0, #0x0
  412e54:	b.lt	412ff8 <manager_count_external_displays+0x278>  // b.tstop
  412e58:	ldr	x2, [sp, #96]
  412e5c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412e60:	add	x1, x0, #0x500
  412e64:	mov	x0, x2
  412e68:	bl	407f30 <strcmp@plt>
  412e6c:	cmp	w0, #0x0
  412e70:	b.ne	412ff8 <manager_count_external_displays+0x278>  // b.any
  412e74:	add	x0, sp, #0x58
  412e78:	mov	x1, x0
  412e7c:	ldr	x0, [sp, #112]
  412e80:	bl	407630 <sd_device_get_sysname@plt>
  412e84:	cmp	w0, #0x0
  412e88:	b.lt	413000 <manager_count_external_displays+0x280>  // b.tstop
  412e8c:	ldr	x0, [sp, #88]
  412e90:	mov	w1, #0x2d                  	// #45
  412e94:	bl	408010 <strchr@plt>
  412e98:	str	x0, [sp, #136]
  412e9c:	ldr	x0, [sp, #136]
  412ea0:	cmp	x0, #0x0
  412ea4:	b.eq	413008 <manager_count_external_displays+0x288>  // b.none
  412ea8:	ldr	x0, [sp, #136]
  412eac:	add	x0, x0, #0x1
  412eb0:	str	x0, [sp, #136]
  412eb4:	ldr	x0, [sp, #136]
  412eb8:	str	x0, [sp, #144]
  412ebc:	str	xzr, [sp, #120]
  412ec0:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  412ec4:	add	x1, x0, #0x0
  412ec8:	add	x0, sp, #0x98
  412ecc:	ldp	x2, x3, [x1]
  412ed0:	stp	x2, x3, [x0]
  412ed4:	ldp	x2, x3, [x1, #16]
  412ed8:	stp	x2, x3, [x0, #16]
  412edc:	ldp	x2, x3, [x1, #32]
  412ee0:	stp	x2, x3, [x0, #32]
  412ee4:	ldp	x2, x3, [x1, #48]
  412ee8:	stp	x2, x3, [x0, #48]
  412eec:	ldp	x2, x3, [x1, #64]
  412ef0:	stp	x2, x3, [x0, #64]
  412ef4:	ldp	x2, x3, [x1, #80]
  412ef8:	stp	x2, x3, [x0, #80]
  412efc:	add	x0, sp, #0x98
  412f00:	str	x0, [sp, #128]
  412f04:	b	412f38 <manager_count_external_displays+0x1b8>
  412f08:	ldr	x0, [sp, #128]
  412f0c:	ldr	x0, [x0]
  412f10:	mov	x1, x0
  412f14:	ldr	x0, [sp, #144]
  412f18:	bl	410d94 <startswith>
  412f1c:	str	x0, [sp, #120]
  412f20:	ldr	x0, [sp, #120]
  412f24:	cmp	x0, #0x0
  412f28:	b.ne	412f58 <manager_count_external_displays+0x1d8>  // b.any
  412f2c:	ldr	x0, [sp, #128]
  412f30:	add	x0, x0, #0x8
  412f34:	str	x0, [sp, #128]
  412f38:	ldr	x0, [sp, #128]
  412f3c:	cmp	x0, #0x0
  412f40:	b.eq	412f5c <manager_count_external_displays+0x1dc>  // b.none
  412f44:	ldr	x0, [sp, #128]
  412f48:	ldr	x0, [x0]
  412f4c:	cmp	x0, #0x0
  412f50:	b.ne	412f08 <manager_count_external_displays+0x188>  // b.any
  412f54:	b	412f5c <manager_count_external_displays+0x1dc>
  412f58:	nop
  412f5c:	ldr	x0, [sp, #120]
  412f60:	cmp	x0, #0x0
  412f64:	b.eq	413010 <manager_count_external_displays+0x290>  // b.none
  412f68:	add	x0, sp, #0x50
  412f6c:	mov	x2, x0
  412f70:	adrp	x0, 43e000 <__func__.12250+0x440>
  412f74:	add	x1, x0, #0x508
  412f78:	ldr	x0, [sp, #112]
  412f7c:	bl	408030 <sd_device_get_sysattr_value@plt>
  412f80:	cmp	w0, #0x0
  412f84:	b.lt	413018 <manager_count_external_displays+0x298>  // b.tstop
  412f88:	ldr	x2, [sp, #80]
  412f8c:	adrp	x0, 43e000 <__func__.12250+0x440>
  412f90:	add	x1, x0, #0x508
  412f94:	mov	x0, x2
  412f98:	bl	407f30 <strcmp@plt>
  412f9c:	cmp	w0, #0x0
  412fa0:	b.ne	413018 <manager_count_external_displays+0x298>  // b.any
  412fa4:	add	x0, sp, #0x48
  412fa8:	mov	x2, x0
  412fac:	adrp	x0, 43e000 <__func__.12250+0x440>
  412fb0:	add	x1, x0, #0x510
  412fb4:	ldr	x0, [sp, #112]
  412fb8:	bl	408030 <sd_device_get_sysattr_value@plt>
  412fbc:	cmp	w0, #0x0
  412fc0:	b.lt	412fe0 <manager_count_external_displays+0x260>  // b.tstop
  412fc4:	ldr	x2, [sp, #72]
  412fc8:	adrp	x0, 43e000 <__func__.12250+0x440>
  412fcc:	add	x1, x0, #0x518
  412fd0:	mov	x0, x2
  412fd4:	bl	407f30 <strcmp@plt>
  412fd8:	cmp	w0, #0x0
  412fdc:	b.eq	41301c <manager_count_external_displays+0x29c>  // b.none
  412fe0:	ldr	w0, [sp, #56]
  412fe4:	add	w0, w0, #0x1
  412fe8:	str	w0, [sp, #56]
  412fec:	b	41301c <manager_count_external_displays+0x29c>
  412ff0:	nop
  412ff4:	b	41301c <manager_count_external_displays+0x29c>
  412ff8:	nop
  412ffc:	b	41301c <manager_count_external_displays+0x29c>
  413000:	nop
  413004:	b	41301c <manager_count_external_displays+0x29c>
  413008:	nop
  41300c:	b	41301c <manager_count_external_displays+0x29c>
  413010:	nop
  413014:	b	41301c <manager_count_external_displays+0x29c>
  413018:	nop
  41301c:	ldr	x0, [sp, #64]
  413020:	bl	407c50 <sd_device_enumerator_get_device_next@plt>
  413024:	str	x0, [sp, #112]
  413028:	ldr	x0, [sp, #112]
  41302c:	cmp	x0, #0x0
  413030:	b.ne	412e2c <manager_count_external_displays+0xac>  // b.any
  413034:	ldr	w19, [sp, #56]
  413038:	add	x0, sp, #0x40
  41303c:	bl	410c50 <sd_device_enumerator_unrefp>
  413040:	mov	w1, w19
  413044:	adrp	x0, 460000 <wordlist.10364+0x370>
  413048:	ldr	x0, [x0, #4024]
  41304c:	ldr	x2, [sp, #248]
  413050:	ldr	x0, [x0]
  413054:	eor	x0, x2, x0
  413058:	cmp	x0, #0x0
  41305c:	b.eq	413064 <manager_count_external_displays+0x2e4>  // b.none
  413060:	bl	407b20 <__stack_chk_fail@plt>
  413064:	mov	w0, w1
  413068:	ldr	x19, [sp, #16]
  41306c:	ldp	x29, x30, [sp], #256
  413070:	ret

0000000000413074 <manager_is_docked_or_external_displays>:
  413074:	stp	x29, x30, [sp, #-80]!
  413078:	mov	x29, sp
  41307c:	str	x0, [sp, #24]
  413080:	ldr	x0, [sp, #24]
  413084:	bl	412ce0 <manager_is_docked>
  413088:	and	w0, w0, #0xff
  41308c:	cmp	w0, #0x0
  413090:	b.eq	413110 <manager_is_docked_or_external_displays+0x9c>  // b.none
  413094:	mov	w0, #0x7                   	// #7
  413098:	str	w0, [sp, #68]
  41309c:	str	wzr, [sp, #72]
  4130a0:	str	wzr, [sp, #76]
  4130a4:	ldr	w0, [sp, #76]
  4130a8:	bl	4083e0 <log_get_max_level_realm@plt>
  4130ac:	mov	w1, w0
  4130b0:	ldr	w0, [sp, #68]
  4130b4:	and	w0, w0, #0x7
  4130b8:	cmp	w1, w0
  4130bc:	b.lt	413100 <manager_is_docked_or_external_displays+0x8c>  // b.tstop
  4130c0:	ldr	w0, [sp, #76]
  4130c4:	lsl	w1, w0, #10
  4130c8:	ldr	w0, [sp, #68]
  4130cc:	orr	w6, w1, w0
  4130d0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4130d4:	add	x1, x0, #0x21b
  4130d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4130dc:	add	x5, x0, #0x528
  4130e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4130e4:	add	x4, x0, #0x978
  4130e8:	mov	w3, #0x278                 	// #632
  4130ec:	mov	x2, x1
  4130f0:	ldr	w1, [sp, #72]
  4130f4:	mov	w0, w6
  4130f8:	bl	407d60 <log_internal_realm@plt>
  4130fc:	b	413108 <manager_is_docked_or_external_displays+0x94>
  413100:	ldr	w0, [sp, #72]
  413104:	cmp	w0, #0x0
  413108:	mov	w0, #0x1                   	// #1
  41310c:	b	413234 <manager_is_docked_or_external_displays+0x1c0>
  413110:	ldr	x0, [sp, #24]
  413114:	bl	412d80 <manager_count_external_displays>
  413118:	str	w0, [sp, #40]
  41311c:	ldr	w0, [sp, #40]
  413120:	cmp	w0, #0x0
  413124:	b.ge	4131a4 <manager_is_docked_or_external_displays+0x130>  // b.tcont
  413128:	mov	w0, #0x4                   	// #4
  41312c:	str	w0, [sp, #56]
  413130:	ldr	w0, [sp, #40]
  413134:	str	w0, [sp, #60]
  413138:	str	wzr, [sp, #64]
  41313c:	ldr	w0, [sp, #64]
  413140:	bl	4083e0 <log_get_max_level_realm@plt>
  413144:	mov	w1, w0
  413148:	ldr	w0, [sp, #56]
  41314c:	and	w0, w0, #0x7
  413150:	cmp	w1, w0
  413154:	b.lt	413198 <manager_is_docked_or_external_displays+0x124>  // b.tstop
  413158:	ldr	w0, [sp, #64]
  41315c:	lsl	w1, w0, #10
  413160:	ldr	w0, [sp, #56]
  413164:	orr	w6, w1, w0
  413168:	adrp	x0, 43e000 <__func__.12250+0x440>
  41316c:	add	x1, x0, #0x21b
  413170:	adrp	x0, 43e000 <__func__.12250+0x440>
  413174:	add	x5, x0, #0x540
  413178:	adrp	x0, 43e000 <__func__.12250+0x440>
  41317c:	add	x4, x0, #0x978
  413180:	mov	w3, #0x280                 	// #640
  413184:	mov	x2, x1
  413188:	ldr	w1, [sp, #60]
  41318c:	mov	w0, w6
  413190:	bl	407d60 <log_internal_realm@plt>
  413194:	b	413230 <manager_is_docked_or_external_displays+0x1bc>
  413198:	ldr	w0, [sp, #60]
  41319c:	cmp	w0, #0x0
  4131a0:	b	413230 <manager_is_docked_or_external_displays+0x1bc>
  4131a4:	ldr	w0, [sp, #40]
  4131a8:	cmp	w0, #0x0
  4131ac:	b.le	413230 <manager_is_docked_or_external_displays+0x1bc>
  4131b0:	mov	w0, #0x7                   	// #7
  4131b4:	str	w0, [sp, #44]
  4131b8:	str	wzr, [sp, #48]
  4131bc:	str	wzr, [sp, #52]
  4131c0:	ldr	w0, [sp, #52]
  4131c4:	bl	4083e0 <log_get_max_level_realm@plt>
  4131c8:	mov	w1, w0
  4131cc:	ldr	w0, [sp, #44]
  4131d0:	and	w0, w0, #0x7
  4131d4:	cmp	w1, w0
  4131d8:	b.lt	413220 <manager_is_docked_or_external_displays+0x1ac>  // b.tstop
  4131dc:	ldr	w0, [sp, #52]
  4131e0:	lsl	w1, w0, #10
  4131e4:	ldr	w0, [sp, #44]
  4131e8:	orr	w7, w1, w0
  4131ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4131f0:	add	x1, x0, #0x21b
  4131f4:	ldr	w6, [sp, #40]
  4131f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4131fc:	add	x5, x0, #0x560
  413200:	adrp	x0, 43e000 <__func__.12250+0x440>
  413204:	add	x4, x0, #0x978
  413208:	mov	w3, #0x282                 	// #642
  41320c:	mov	x2, x1
  413210:	ldr	w1, [sp, #48]
  413214:	mov	w0, w7
  413218:	bl	407d60 <log_internal_realm@plt>
  41321c:	b	413228 <manager_is_docked_or_external_displays+0x1b4>
  413220:	ldr	w0, [sp, #48]
  413224:	cmp	w0, #0x0
  413228:	mov	w0, #0x1                   	// #1
  41322c:	b	413234 <manager_is_docked_or_external_displays+0x1c0>
  413230:	mov	w0, #0x0                   	// #0
  413234:	ldp	x29, x30, [sp], #80
  413238:	ret

000000000041323c <manager_is_on_external_power>:
  41323c:	stp	x29, x30, [sp, #-32]!
  413240:	mov	x29, sp
  413244:	bl	4080d0 <on_ac_power@plt>
  413248:	str	w0, [sp, #16]
  41324c:	ldr	w0, [sp, #16]
  413250:	cmp	w0, #0x0
  413254:	b.ge	4132d0 <manager_is_on_external_power+0x94>  // b.tcont
  413258:	mov	w0, #0x4                   	// #4
  41325c:	str	w0, [sp, #20]
  413260:	ldr	w0, [sp, #16]
  413264:	str	w0, [sp, #24]
  413268:	str	wzr, [sp, #28]
  41326c:	ldr	w0, [sp, #28]
  413270:	bl	4083e0 <log_get_max_level_realm@plt>
  413274:	mov	w1, w0
  413278:	ldr	w0, [sp, #20]
  41327c:	and	w0, w0, #0x7
  413280:	cmp	w1, w0
  413284:	b.lt	4132c8 <manager_is_on_external_power+0x8c>  // b.tstop
  413288:	ldr	w0, [sp, #28]
  41328c:	lsl	w1, w0, #10
  413290:	ldr	w0, [sp, #20]
  413294:	orr	w6, w1, w0
  413298:	adrp	x0, 43e000 <__func__.12250+0x440>
  41329c:	add	x1, x0, #0x21b
  4132a0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4132a4:	add	x5, x0, #0x588
  4132a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4132ac:	add	x4, x0, #0x9a0
  4132b0:	mov	w3, #0x290                 	// #656
  4132b4:	mov	x2, x1
  4132b8:	ldr	w1, [sp, #24]
  4132bc:	mov	w0, w6
  4132c0:	bl	407d60 <log_internal_realm@plt>
  4132c4:	b	4132d0 <manager_is_on_external_power+0x94>
  4132c8:	ldr	w0, [sp, #24]
  4132cc:	cmp	w0, #0x0
  4132d0:	ldr	w0, [sp, #16]
  4132d4:	cmp	w0, #0x0
  4132d8:	cset	w0, ne  // ne = any
  4132dc:	and	w0, w0, #0xff
  4132e0:	ldp	x29, x30, [sp], #32
  4132e4:	ret

00000000004132e8 <manager_all_buttons_ignored>:
  4132e8:	stp	x29, x30, [sp, #-48]!
  4132ec:	mov	x29, sp
  4132f0:	str	x0, [sp, #24]
  4132f4:	ldr	x0, [sp, #24]
  4132f8:	cmp	x0, #0x0
  4132fc:	cset	w0, eq  // eq = none
  413300:	and	w0, w0, #0xff
  413304:	and	x0, x0, #0xff
  413308:	cmp	x0, #0x0
  41330c:	b.eq	413338 <manager_all_buttons_ignored+0x50>  // b.none
  413310:	adrp	x0, 43e000 <__func__.12250+0x440>
  413314:	add	x1, x0, #0x21b
  413318:	adrp	x0, 43e000 <__func__.12250+0x440>
  41331c:	add	x4, x0, #0x9c0
  413320:	mov	w3, #0x296                 	// #662
  413324:	mov	x2, x1
  413328:	adrp	x0, 43e000 <__func__.12250+0x440>
  41332c:	add	x1, x0, #0x238
  413330:	mov	w0, #0x0                   	// #0
  413334:	bl	407650 <log_assert_failed_realm@plt>
  413338:	ldr	x0, [sp, #24]
  41333c:	ldr	w0, [x0, #396]
  413340:	cmp	w0, #0x0
  413344:	b.eq	413350 <manager_all_buttons_ignored+0x68>  // b.none
  413348:	mov	w0, #0x0                   	// #0
  41334c:	b	4133f4 <manager_all_buttons_ignored+0x10c>
  413350:	ldr	x0, [sp, #24]
  413354:	ldr	w0, [x0, #400]
  413358:	cmp	w0, #0x0
  41335c:	b.eq	413368 <manager_all_buttons_ignored+0x80>  // b.none
  413360:	mov	w0, #0x0                   	// #0
  413364:	b	4133f4 <manager_all_buttons_ignored+0x10c>
  413368:	ldr	x0, [sp, #24]
  41336c:	ldr	w0, [x0, #404]
  413370:	cmp	w0, #0x0
  413374:	b.eq	413380 <manager_all_buttons_ignored+0x98>  // b.none
  413378:	mov	w0, #0x0                   	// #0
  41337c:	b	4133f4 <manager_all_buttons_ignored+0x10c>
  413380:	ldr	x0, [sp, #24]
  413384:	ldr	w0, [x0, #408]
  413388:	cmp	w0, #0x0
  41338c:	b.eq	413398 <manager_all_buttons_ignored+0xb0>  // b.none
  413390:	mov	w0, #0x0                   	// #0
  413394:	b	4133f4 <manager_all_buttons_ignored+0x10c>
  413398:	strb	wzr, [sp, #47]
  41339c:	ldr	x0, [sp, #24]
  4133a0:	ldr	w0, [x0, #412]
  4133a4:	add	w0, w0, #0x1
  4133a8:	cmp	w0, #0x1
  4133ac:	b.hi	4133b8 <manager_all_buttons_ignored+0xd0>  // b.pmore
  4133b0:	mov	w0, #0x1                   	// #1
  4133b4:	strb	w0, [sp, #47]
  4133b8:	nop
  4133bc:	ldrb	w0, [sp, #47]
  4133c0:	eor	w0, w0, #0x1
  4133c4:	and	w0, w0, #0xff
  4133c8:	cmp	w0, #0x0
  4133cc:	b.eq	4133d8 <manager_all_buttons_ignored+0xf0>  // b.none
  4133d0:	mov	w0, #0x0                   	// #0
  4133d4:	b	4133f4 <manager_all_buttons_ignored+0x10c>
  4133d8:	ldr	x0, [sp, #24]
  4133dc:	ldr	w0, [x0, #416]
  4133e0:	cmp	w0, #0x0
  4133e4:	b.eq	4133f0 <manager_all_buttons_ignored+0x108>  // b.none
  4133e8:	mov	w0, #0x0                   	// #0
  4133ec:	b	4133f4 <manager_all_buttons_ignored+0x10c>
  4133f0:	mov	w0, #0x1                   	// #1
  4133f4:	ldp	x29, x30, [sp], #48
  4133f8:	ret

00000000004133fc <manager_read_utmp>:
  4133fc:	stp	x29, x30, [sp, #-160]!
  413400:	mov	x29, sp
  413404:	str	x19, [sp, #16]
  413408:	str	x0, [sp, #40]
  41340c:	adrp	x0, 460000 <wordlist.10364+0x370>
  413410:	ldr	x0, [x0, #4024]
  413414:	ldr	x1, [x0]
  413418:	str	x1, [sp, #152]
  41341c:	mov	x1, #0x0                   	// #0
  413420:	ldr	x0, [sp, #40]
  413424:	cmp	x0, #0x0
  413428:	cset	w0, eq  // eq = none
  41342c:	and	w0, w0, #0xff
  413430:	and	x0, x0, #0xff
  413434:	cmp	x0, #0x0
  413438:	b.eq	413464 <manager_read_utmp+0x68>  // b.none
  41343c:	adrp	x0, 43e000 <__func__.12250+0x440>
  413440:	add	x1, x0, #0x21b
  413444:	adrp	x0, 43e000 <__func__.12250+0x440>
  413448:	add	x4, x0, #0x9e0
  41344c:	mov	w3, #0x2ac                 	// #684
  413450:	mov	x2, x1
  413454:	adrp	x0, 43e000 <__func__.12250+0x440>
  413458:	add	x1, x0, #0x238
  41345c:	mov	w0, #0x0                   	// #0
  413460:	bl	407650 <log_assert_failed_realm@plt>
  413464:	adrp	x0, 43e000 <__func__.12250+0x440>
  413468:	add	x0, x0, #0x5b0
  41346c:	bl	407140 <utmpxname@plt>
  413470:	cmp	w0, #0x0
  413474:	b.ge	413504 <manager_read_utmp+0x108>  // b.tcont
  413478:	mov	w0, #0x3                   	// #3
  41347c:	str	w0, [sp, #100]
  413480:	bl	407960 <__errno_location@plt>
  413484:	ldr	w0, [x0]
  413488:	str	w0, [sp, #104]
  41348c:	str	wzr, [sp, #108]
  413490:	ldr	w0, [sp, #108]
  413494:	bl	4083e0 <log_get_max_level_realm@plt>
  413498:	mov	w1, w0
  41349c:	ldr	w0, [sp, #100]
  4134a0:	and	w0, w0, #0x7
  4134a4:	cmp	w1, w0
  4134a8:	b.lt	4134ec <manager_read_utmp+0xf0>  // b.tstop
  4134ac:	ldr	w0, [sp, #108]
  4134b0:	lsl	w1, w0, #10
  4134b4:	ldr	w0, [sp, #100]
  4134b8:	orr	w6, w1, w0
  4134bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4134c0:	add	x1, x0, #0x21b
  4134c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4134c8:	add	x5, x0, #0x5c0
  4134cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4134d0:	add	x4, x0, #0x9f8
  4134d4:	mov	w3, #0x2af                 	// #687
  4134d8:	mov	x2, x1
  4134dc:	ldr	w1, [sp, #104]
  4134e0:	mov	w0, w6
  4134e4:	bl	407d60 <log_internal_realm@plt>
  4134e8:	b	4138dc <manager_read_utmp+0x4e0>
  4134ec:	ldr	w0, [sp, #104]
  4134f0:	cmp	w0, #0x0
  4134f4:	cneg	w0, w0, lt  // lt = tstop
  4134f8:	and	w0, w0, #0xff
  4134fc:	neg	w0, w0
  413500:	b	4138dc <manager_read_utmp+0x4e0>
  413504:	bl	407ac0 <setutxent@plt>
  413508:	str	xzr, [sp, #112]
  41350c:	bl	407960 <__errno_location@plt>
  413510:	str	wzr, [x0]
  413514:	bl	407480 <getutxent@plt>
  413518:	str	x0, [sp, #120]
  41351c:	ldr	x0, [sp, #120]
  413520:	cmp	x0, #0x0
  413524:	b.ne	4135c0 <manager_read_utmp+0x1c4>  // b.any
  413528:	bl	407960 <__errno_location@plt>
  41352c:	ldr	w0, [x0]
  413530:	cmp	w0, #0x0
  413534:	b.eq	4135b4 <manager_read_utmp+0x1b8>  // b.none
  413538:	mov	w0, #0x4                   	// #4
  41353c:	str	w0, [sp, #88]
  413540:	bl	407960 <__errno_location@plt>
  413544:	ldr	w0, [x0]
  413548:	str	w0, [sp, #92]
  41354c:	str	wzr, [sp, #96]
  413550:	ldr	w0, [sp, #96]
  413554:	bl	4083e0 <log_get_max_level_realm@plt>
  413558:	mov	w1, w0
  41355c:	ldr	w0, [sp, #88]
  413560:	and	w0, w0, #0x7
  413564:	cmp	w1, w0
  413568:	b.lt	4135ac <manager_read_utmp+0x1b0>  // b.tstop
  41356c:	ldr	w0, [sp, #96]
  413570:	lsl	w1, w0, #10
  413574:	ldr	w0, [sp, #88]
  413578:	orr	w6, w1, w0
  41357c:	adrp	x0, 43e000 <__func__.12250+0x440>
  413580:	add	x1, x0, #0x21b
  413584:	adrp	x0, 43e000 <__func__.12250+0x440>
  413588:	add	x5, x0, #0x5f0
  41358c:	adrp	x0, 43e000 <__func__.12250+0x440>
  413590:	add	x4, x0, #0x9f8
  413594:	mov	w3, #0x2bd                 	// #701
  413598:	mov	x2, x1
  41359c:	ldr	w1, [sp, #92]
  4135a0:	mov	w0, w6
  4135a4:	bl	407d60 <log_internal_realm@plt>
  4135a8:	b	4135b4 <manager_read_utmp+0x1b8>
  4135ac:	ldr	w0, [sp, #92]
  4135b0:	cmp	w0, #0x0
  4135b4:	str	wzr, [sp, #60]
  4135b8:	mov	w19, #0x0                   	// #0
  4135bc:	b	4138bc <manager_read_utmp+0x4c0>
  4135c0:	ldr	x0, [sp, #120]
  4135c4:	ldrsh	w0, [x0]
  4135c8:	cmp	w0, #0x7
  4135cc:	b.eq	4135d8 <manager_read_utmp+0x1dc>  // b.none
  4135d0:	mov	w19, #0x1                   	// #1
  4135d4:	b	4138bc <manager_read_utmp+0x4c0>
  4135d8:	ldr	x0, [sp, #120]
  4135dc:	ldr	w0, [x0, #4]
  4135e0:	bl	410ec8 <pid_is_valid>
  4135e4:	and	w0, w0, #0xff
  4135e8:	eor	w0, w0, #0x1
  4135ec:	and	w0, w0, #0xff
  4135f0:	cmp	w0, #0x0
  4135f4:	b.eq	413600 <manager_read_utmp+0x204>  // b.none
  4135f8:	mov	w19, #0x1                   	// #1
  4135fc:	b	4138bc <manager_read_utmp+0x4c0>
  413600:	ldr	x0, [sp, #120]
  413604:	add	x0, x0, #0x8
  413608:	mov	x1, #0x20                  	// #32
  41360c:	bl	407aa0 <strndup@plt>
  413610:	str	x0, [sp, #112]
  413614:	ldr	x0, [sp, #112]
  413618:	cmp	x0, #0x0
  41361c:	b.ne	413648 <manager_read_utmp+0x24c>  // b.any
  413620:	adrp	x0, 43e000 <__func__.12250+0x440>
  413624:	add	x1, x0, #0x21b
  413628:	adrp	x0, 43e000 <__func__.12250+0x440>
  41362c:	add	x3, x0, #0x9f8
  413630:	mov	w2, #0x2ca                 	// #714
  413634:	mov	w0, #0x0                   	// #0
  413638:	bl	408330 <log_oom_internal@plt>
  41363c:	str	w0, [sp, #60]
  413640:	mov	w19, #0x0                   	// #0
  413644:	b	4138bc <manager_read_utmp+0x4c0>
  413648:	ldr	x2, [sp, #112]
  41364c:	adrp	x0, 43e000 <__func__.12250+0x440>
  413650:	add	x1, x0, #0x620
  413654:	mov	x0, x2
  413658:	bl	4078d0 <path_startswith@plt>
  41365c:	str	x0, [sp, #128]
  413660:	ldr	x0, [sp, #128]
  413664:	cmp	x0, #0x0
  413668:	b.eq	4136ac <manager_read_utmp+0x2b0>  // b.none
  41366c:	add	x0, sp, #0x70
  413670:	ldr	x1, [sp, #128]
  413674:	bl	407400 <free_and_strdup@plt>
  413678:	str	w0, [sp, #60]
  41367c:	ldr	w0, [sp, #60]
  413680:	cmp	w0, #0x0
  413684:	b.ge	4136ac <manager_read_utmp+0x2b0>  // b.tcont
  413688:	adrp	x0, 43e000 <__func__.12250+0x440>
  41368c:	add	x1, x0, #0x21b
  413690:	adrp	x0, 43e000 <__func__.12250+0x440>
  413694:	add	x3, x0, #0x9f8
  413698:	mov	w2, #0x2d2                 	// #722
  41369c:	mov	w0, #0x0                   	// #0
  4136a0:	bl	408330 <log_oom_internal@plt>
  4136a4:	mov	w19, #0x0                   	// #0
  4136a8:	b	4138bc <manager_read_utmp+0x4c0>
  4136ac:	ldr	x0, [sp, #112]
  4136b0:	bl	410d54 <isempty>
  4136b4:	and	w0, w0, #0xff
  4136b8:	cmp	w0, #0x0
  4136bc:	b.eq	4136c8 <manager_read_utmp+0x2cc>  // b.none
  4136c0:	mov	w19, #0x1                   	// #1
  4136c4:	b	4138bc <manager_read_utmp+0x4c0>
  4136c8:	ldr	x0, [sp, #40]
  4136cc:	ldr	x19, [x0, #40]
  4136d0:	ldr	x0, [sp, #120]
  4136d4:	ldr	w0, [x0, #4]
  4136d8:	bl	410eb4 <PID_TO_PTR>
  4136dc:	mov	x1, x0
  4136e0:	mov	x0, x19
  4136e4:	bl	410cc8 <hashmap_get>
  4136e8:	str	x0, [sp, #136]
  4136ec:	ldr	x0, [sp, #136]
  4136f0:	cmp	x0, #0x0
  4136f4:	b.ne	413700 <manager_read_utmp+0x304>  // b.any
  4136f8:	mov	w19, #0x1                   	// #1
  4136fc:	b	4138bc <manager_read_utmp+0x4c0>
  413700:	ldr	x0, [sp, #136]
  413704:	ldr	w0, [x0, #80]
  413708:	cmp	w0, #0x1
  41370c:	b.ne	4137e0 <manager_read_utmp+0x3e4>  // b.any
  413710:	ldr	x0, [sp, #136]
  413714:	ldr	x0, [x0, #72]
  413718:	ldr	x1, [sp, #112]
  41371c:	bl	410d24 <streq_ptr>
  413720:	and	w0, w0, #0xff
  413724:	eor	w0, w0, #0x1
  413728:	and	w0, w0, #0xff
  41372c:	cmp	w0, #0x0
  413730:	b.eq	4137e0 <manager_read_utmp+0x3e4>  // b.none
  413734:	ldr	x0, [sp, #136]
  413738:	ldr	x0, [x0, #72]
  41373c:	bl	410c84 <mfree>
  413740:	mov	x1, x0
  413744:	ldr	x0, [sp, #136]
  413748:	str	x1, [x0, #72]
  41374c:	ldr	x0, [sp, #136]
  413750:	mov	w1, #0x2                   	// #2
  413754:	str	w1, [x0, #80]
  413758:	mov	w0, #0x7                   	// #7
  41375c:	str	w0, [sp, #64]
  413760:	str	wzr, [sp, #68]
  413764:	str	wzr, [sp, #72]
  413768:	ldr	w0, [sp, #72]
  41376c:	bl	4083e0 <log_get_max_level_realm@plt>
  413770:	mov	w1, w0
  413774:	ldr	w0, [sp, #64]
  413778:	and	w0, w0, #0x7
  41377c:	cmp	w1, w0
  413780:	b.lt	4137d0 <manager_read_utmp+0x3d4>  // b.tstop
  413784:	ldr	w0, [sp, #72]
  413788:	lsl	w1, w0, #10
  41378c:	ldr	w0, [sp, #64]
  413790:	orr	w7, w1, w0
  413794:	adrp	x0, 43e000 <__func__.12250+0x440>
  413798:	add	x1, x0, #0x21b
  41379c:	ldr	x0, [sp, #136]
  4137a0:	ldr	x0, [x0, #8]
  4137a4:	mov	x6, x0
  4137a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4137ac:	add	x5, x0, #0x628
  4137b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4137b4:	add	x4, x0, #0x9f8
  4137b8:	mov	w3, #0x2e5                 	// #741
  4137bc:	mov	x2, x1
  4137c0:	ldr	w1, [sp, #68]
  4137c4:	mov	w0, w7
  4137c8:	bl	407d60 <log_internal_realm@plt>
  4137cc:	b	4137d8 <manager_read_utmp+0x3dc>
  4137d0:	ldr	w0, [sp, #68]
  4137d4:	cmp	w0, #0x0
  4137d8:	mov	w19, #0x1                   	// #1
  4137dc:	b	4138bc <manager_read_utmp+0x4c0>
  4137e0:	ldr	x0, [sp, #136]
  4137e4:	ldr	x0, [x0, #72]
  4137e8:	cmp	x0, #0x0
  4137ec:	b.ne	413800 <manager_read_utmp+0x404>  // b.any
  4137f0:	ldr	x0, [sp, #136]
  4137f4:	ldr	w0, [x0, #80]
  4137f8:	cmp	w0, #0x0
  4137fc:	b.lt	413808 <manager_read_utmp+0x40c>  // b.tstop
  413800:	mov	w19, #0x1                   	// #1
  413804:	b	4138bc <manager_read_utmp+0x4c0>
  413808:	ldr	x0, [sp, #112]
  41380c:	str	x0, [sp, #144]
  413810:	str	xzr, [sp, #112]
  413814:	ldr	x1, [sp, #144]
  413818:	ldr	x0, [sp, #136]
  41381c:	str	x1, [x0, #72]
  413820:	ldr	x0, [sp, #136]
  413824:	mov	w1, #0x1                   	// #1
  413828:	str	w1, [x0, #80]
  41382c:	mov	w0, #0x7                   	// #7
  413830:	str	w0, [sp, #76]
  413834:	str	wzr, [sp, #80]
  413838:	str	wzr, [sp, #84]
  41383c:	ldr	w0, [sp, #84]
  413840:	bl	4083e0 <log_get_max_level_realm@plt>
  413844:	mov	w1, w0
  413848:	ldr	w0, [sp, #76]
  41384c:	and	w0, w0, #0x7
  413850:	cmp	w1, w0
  413854:	b.lt	4138b0 <manager_read_utmp+0x4b4>  // b.tstop
  413858:	ldr	w0, [sp, #84]
  41385c:	lsl	w1, w0, #10
  413860:	ldr	w0, [sp, #76]
  413864:	orr	w8, w1, w0
  413868:	adrp	x0, 43e000 <__func__.12250+0x440>
  41386c:	add	x1, x0, #0x21b
  413870:	ldr	x0, [sp, #136]
  413874:	ldr	x2, [x0, #72]
  413878:	ldr	x0, [sp, #136]
  41387c:	ldr	x0, [x0, #8]
  413880:	mov	x7, x0
  413884:	mov	x6, x2
  413888:	adrp	x0, 43e000 <__func__.12250+0x440>
  41388c:	add	x5, x0, #0x678
  413890:	adrp	x0, 43e000 <__func__.12250+0x440>
  413894:	add	x4, x0, #0x9f8
  413898:	mov	w3, #0x2ef                 	// #751
  41389c:	mov	x2, x1
  4138a0:	ldr	w1, [sp, #80]
  4138a4:	mov	w0, w8
  4138a8:	bl	407d60 <log_internal_realm@plt>
  4138ac:	b	4138b8 <manager_read_utmp+0x4bc>
  4138b0:	ldr	w0, [sp, #80]
  4138b4:	cmp	w0, #0x0
  4138b8:	mov	w19, #0x2                   	// #2
  4138bc:	add	x0, sp, #0x70
  4138c0:	bl	410ca4 <freep>
  4138c4:	cmp	w19, #0x0
  4138c8:	b.eq	4138d4 <manager_read_utmp+0x4d8>  // b.none
  4138cc:	cmp	w19, #0x2
  4138d0:	b	413508 <manager_read_utmp+0x10c>
  4138d4:	bl	407f60 <endutxent@plt>
  4138d8:	ldr	w0, [sp, #60]
  4138dc:	mov	w1, w0
  4138e0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4138e4:	ldr	x0, [x0, #4024]
  4138e8:	ldr	x2, [sp, #152]
  4138ec:	ldr	x0, [x0]
  4138f0:	eor	x0, x2, x0
  4138f4:	cmp	x0, #0x0
  4138f8:	b.eq	413900 <manager_read_utmp+0x504>  // b.none
  4138fc:	bl	407b20 <__stack_chk_fail@plt>
  413900:	mov	w0, w1
  413904:	ldr	x19, [sp, #16]
  413908:	ldp	x29, x30, [sp], #160
  41390c:	ret

0000000000413910 <manager_dispatch_utmp>:
  413910:	stp	x29, x30, [sp, #-64]!
  413914:	mov	x29, sp
  413918:	str	x0, [sp, #40]
  41391c:	str	x1, [sp, #32]
  413920:	str	x2, [sp, #24]
  413924:	ldr	x0, [sp, #24]
  413928:	str	x0, [sp, #56]
  41392c:	ldr	x0, [sp, #56]
  413930:	cmp	x0, #0x0
  413934:	cset	w0, eq  // eq = none
  413938:	and	w0, w0, #0xff
  41393c:	and	x0, x0, #0xff
  413940:	cmp	x0, #0x0
  413944:	b.eq	413970 <manager_dispatch_utmp+0x60>  // b.none
  413948:	adrp	x0, 43e000 <__func__.12250+0x440>
  41394c:	add	x1, x0, #0x21b
  413950:	adrp	x0, 43e000 <__func__.12250+0x440>
  413954:	add	x4, x0, #0xa10
  413958:	mov	w3, #0x2fd                 	// #765
  41395c:	mov	x2, x1
  413960:	adrp	x0, 43e000 <__func__.12250+0x440>
  413964:	add	x1, x0, #0x238
  413968:	mov	w0, #0x0                   	// #0
  41396c:	bl	407650 <log_assert_failed_realm@plt>
  413970:	ldr	x0, [sp, #32]
  413974:	ldr	w1, [x0, #4]
  413978:	mov	w0, #0x6c04                	// #27652
  41397c:	and	w0, w1, w0
  413980:	cmp	w0, #0x0
  413984:	b.eq	413990 <manager_dispatch_utmp+0x80>  // b.none
  413988:	ldr	x0, [sp, #56]
  41398c:	bl	4139a4 <manager_connect_utmp>
  413990:	ldr	x0, [sp, #56]
  413994:	bl	4133fc <manager_read_utmp>
  413998:	mov	w0, #0x0                   	// #0
  41399c:	ldp	x29, x30, [sp], #64
  4139a0:	ret

00000000004139a4 <manager_connect_utmp>:
  4139a4:	stp	x29, x30, [sp, #-80]!
  4139a8:	mov	x29, sp
  4139ac:	str	x0, [sp, #24]
  4139b0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4139b4:	ldr	x0, [x0, #4024]
  4139b8:	ldr	x1, [x0]
  4139bc:	str	x1, [sp, #72]
  4139c0:	mov	x1, #0x0                   	// #0
  4139c4:	str	xzr, [sp, #64]
  4139c8:	ldr	x0, [sp, #24]
  4139cc:	cmp	x0, #0x0
  4139d0:	cset	w0, eq  // eq = none
  4139d4:	and	w0, w0, #0xff
  4139d8:	and	x0, x0, #0xff
  4139dc:	cmp	x0, #0x0
  4139e0:	b.eq	413a0c <manager_connect_utmp+0x68>  // b.none
  4139e4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4139e8:	add	x1, x0, #0x21b
  4139ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4139f0:	add	x4, x0, #0xa28
  4139f4:	mov	w3, #0x30e                 	// #782
  4139f8:	mov	x2, x1
  4139fc:	adrp	x0, 43e000 <__func__.12250+0x440>
  413a00:	add	x1, x0, #0x238
  413a04:	mov	w0, #0x0                   	// #0
  413a08:	bl	407650 <log_assert_failed_realm@plt>
  413a0c:	ldr	x0, [sp, #24]
  413a10:	ldr	x6, [x0]
  413a14:	add	x1, sp, #0x40
  413a18:	ldr	x5, [sp, #24]
  413a1c:	adrp	x0, 413000 <manager_count_external_displays+0x280>
  413a20:	add	x4, x0, #0x910
  413a24:	mov	w3, #0xc06                 	// #3078
  413a28:	adrp	x0, 43e000 <__func__.12250+0x440>
  413a2c:	add	x2, x0, #0x5b0
  413a30:	mov	x0, x6
  413a34:	bl	408120 <sd_event_add_inotify@plt>
  413a38:	str	w0, [sp, #36]
  413a3c:	ldr	w0, [sp, #36]
  413a40:	cmp	w0, #0x0
  413a44:	b.ge	413ad8 <manager_connect_utmp+0x134>  // b.tcont
  413a48:	ldr	w0, [sp, #36]
  413a4c:	cmn	w0, #0x2
  413a50:	b.ne	413a5c <manager_connect_utmp+0xb8>  // b.any
  413a54:	mov	w0, #0x7                   	// #7
  413a58:	b	413a60 <manager_connect_utmp+0xbc>
  413a5c:	mov	w0, #0x4                   	// #4
  413a60:	str	w0, [sp, #52]
  413a64:	ldr	w0, [sp, #36]
  413a68:	str	w0, [sp, #56]
  413a6c:	str	wzr, [sp, #60]
  413a70:	ldr	w0, [sp, #60]
  413a74:	bl	4083e0 <log_get_max_level_realm@plt>
  413a78:	mov	w1, w0
  413a7c:	ldr	w0, [sp, #52]
  413a80:	and	w0, w0, #0x7
  413a84:	cmp	w1, w0
  413a88:	b.lt	413acc <manager_connect_utmp+0x128>  // b.tstop
  413a8c:	ldr	w0, [sp, #60]
  413a90:	lsl	w1, w0, #10
  413a94:	ldr	w0, [sp, #52]
  413a98:	orr	w6, w1, w0
  413a9c:	adrp	x0, 43e000 <__func__.12250+0x440>
  413aa0:	add	x1, x0, #0x21b
  413aa4:	adrp	x0, 43e000 <__func__.12250+0x440>
  413aa8:	add	x5, x0, #0x6b8
  413aac:	adrp	x0, 43e000 <__func__.12250+0x440>
  413ab0:	add	x4, x0, #0xa40
  413ab4:	mov	w3, #0x31a                 	// #794
  413ab8:	mov	x2, x1
  413abc:	ldr	w1, [sp, #56]
  413ac0:	mov	w0, w6
  413ac4:	bl	407d60 <log_internal_realm@plt>
  413ac8:	b	413b80 <manager_connect_utmp+0x1dc>
  413acc:	ldr	w0, [sp, #56]
  413ad0:	cmp	w0, #0x0
  413ad4:	b	413b80 <manager_connect_utmp+0x1dc>
  413ad8:	ldr	x0, [sp, #64]
  413adc:	mov	x1, #0x64                  	// #100
  413ae0:	bl	407a30 <sd_event_source_set_priority@plt>
  413ae4:	str	w0, [sp, #36]
  413ae8:	ldr	w0, [sp, #36]
  413aec:	cmp	w0, #0x0
  413af0:	b.ge	413b6c <manager_connect_utmp+0x1c8>  // b.tcont
  413af4:	mov	w0, #0x4                   	// #4
  413af8:	str	w0, [sp, #40]
  413afc:	ldr	w0, [sp, #36]
  413b00:	str	w0, [sp, #44]
  413b04:	str	wzr, [sp, #48]
  413b08:	ldr	w0, [sp, #48]
  413b0c:	bl	4083e0 <log_get_max_level_realm@plt>
  413b10:	mov	w1, w0
  413b14:	ldr	w0, [sp, #40]
  413b18:	and	w0, w0, #0x7
  413b1c:	cmp	w1, w0
  413b20:	b.lt	413b64 <manager_connect_utmp+0x1c0>  // b.tstop
  413b24:	ldr	w0, [sp, #48]
  413b28:	lsl	w1, w0, #10
  413b2c:	ldr	w0, [sp, #40]
  413b30:	orr	w6, w1, w0
  413b34:	adrp	x0, 43e000 <__func__.12250+0x440>
  413b38:	add	x1, x0, #0x21b
  413b3c:	adrp	x0, 43e000 <__func__.12250+0x440>
  413b40:	add	x5, x0, #0x6f8
  413b44:	adrp	x0, 43e000 <__func__.12250+0x440>
  413b48:	add	x4, x0, #0xa40
  413b4c:	mov	w3, #0x31e                 	// #798
  413b50:	mov	x2, x1
  413b54:	ldr	w1, [sp, #44]
  413b58:	mov	w0, w6
  413b5c:	bl	407d60 <log_internal_realm@plt>
  413b60:	b	413b6c <manager_connect_utmp+0x1c8>
  413b64:	ldr	w0, [sp, #44]
  413b68:	cmp	w0, #0x0
  413b6c:	ldr	x2, [sp, #64]
  413b70:	adrp	x0, 43e000 <__func__.12250+0x440>
  413b74:	add	x1, x0, #0x738
  413b78:	mov	x0, x2
  413b7c:	bl	408380 <sd_event_source_set_description@plt>
  413b80:	ldr	x0, [sp, #24]
  413b84:	ldr	x0, [x0, #144]
  413b88:	bl	407550 <sd_event_source_unref@plt>
  413b8c:	ldr	x1, [sp, #64]
  413b90:	ldr	x0, [sp, #24]
  413b94:	str	x1, [x0, #144]
  413b98:	nop
  413b9c:	adrp	x0, 460000 <wordlist.10364+0x370>
  413ba0:	ldr	x0, [x0, #4024]
  413ba4:	ldr	x1, [sp, #72]
  413ba8:	ldr	x0, [x0]
  413bac:	eor	x0, x1, x0
  413bb0:	cmp	x0, #0x0
  413bb4:	b.eq	413bbc <manager_connect_utmp+0x218>  // b.none
  413bb8:	bl	407b20 <__stack_chk_fail@plt>
  413bbc:	ldp	x29, x30, [sp], #80
  413bc0:	ret

0000000000413bc4 <manager_reconnect_utmp>:
  413bc4:	stp	x29, x30, [sp, #-32]!
  413bc8:	mov	x29, sp
  413bcc:	str	x0, [sp, #24]
  413bd0:	ldr	x0, [sp, #24]
  413bd4:	cmp	x0, #0x0
  413bd8:	cset	w0, eq  // eq = none
  413bdc:	and	w0, w0, #0xff
  413be0:	and	x0, x0, #0xff
  413be4:	cmp	x0, #0x0
  413be8:	b.eq	413c14 <manager_reconnect_utmp+0x50>  // b.none
  413bec:	adrp	x0, 43e000 <__func__.12250+0x440>
  413bf0:	add	x1, x0, #0x21b
  413bf4:	adrp	x0, 43e000 <__func__.12250+0x440>
  413bf8:	add	x4, x0, #0xa58
  413bfc:	mov	w3, #0x32a                 	// #810
  413c00:	mov	x2, x1
  413c04:	adrp	x0, 43e000 <__func__.12250+0x440>
  413c08:	add	x1, x0, #0x238
  413c0c:	mov	w0, #0x0                   	// #0
  413c10:	bl	407650 <log_assert_failed_realm@plt>
  413c14:	ldr	x0, [sp, #24]
  413c18:	ldr	x0, [x0, #144]
  413c1c:	cmp	x0, #0x0
  413c20:	b.ne	413c30 <manager_reconnect_utmp+0x6c>  // b.any
  413c24:	ldr	x0, [sp, #24]
  413c28:	bl	4139a4 <manager_connect_utmp>
  413c2c:	b	413c34 <manager_reconnect_utmp+0x70>
  413c30:	nop
  413c34:	ldp	x29, x30, [sp], #32
  413c38:	ret

0000000000413c3c <sd_device_unrefp>:
  413c3c:	stp	x29, x30, [sp, #-32]!
  413c40:	mov	x29, sp
  413c44:	str	x0, [sp, #24]
  413c48:	ldr	x0, [sp, #24]
  413c4c:	ldr	x0, [x0]
  413c50:	cmp	x0, #0x0
  413c54:	b.eq	413c64 <sd_device_unrefp+0x28>  // b.none
  413c58:	ldr	x0, [sp, #24]
  413c5c:	ldr	x0, [x0]
  413c60:	bl	4081a0 <sd_device_unref@plt>
  413c64:	nop
  413c68:	ldp	x29, x30, [sp], #32
  413c6c:	ret

0000000000413c70 <sd_device_enumerator_unrefp>:
  413c70:	stp	x29, x30, [sp, #-32]!
  413c74:	mov	x29, sp
  413c78:	str	x0, [sp, #24]
  413c7c:	ldr	x0, [sp, #24]
  413c80:	ldr	x0, [x0]
  413c84:	cmp	x0, #0x0
  413c88:	b.eq	413c98 <sd_device_enumerator_unrefp+0x28>  // b.none
  413c8c:	ldr	x0, [sp, #24]
  413c90:	ldr	x0, [x0]
  413c94:	bl	407500 <sd_device_enumerator_unref@plt>
  413c98:	nop
  413c9c:	ldp	x29, x30, [sp], #32
  413ca0:	ret

0000000000413ca4 <mfree>:
  413ca4:	stp	x29, x30, [sp, #-32]!
  413ca8:	mov	x29, sp
  413cac:	str	x0, [sp, #24]
  413cb0:	ldr	x0, [sp, #24]
  413cb4:	bl	408150 <free@plt>
  413cb8:	mov	x0, #0x0                   	// #0
  413cbc:	ldp	x29, x30, [sp], #32
  413cc0:	ret

0000000000413cc4 <freep>:
  413cc4:	stp	x29, x30, [sp, #-32]!
  413cc8:	mov	x29, sp
  413ccc:	str	x0, [sp, #24]
  413cd0:	ldr	x0, [sp, #24]
  413cd4:	ldr	x0, [x0]
  413cd8:	bl	408150 <free@plt>
  413cdc:	nop
  413ce0:	ldp	x29, x30, [sp], #32
  413ce4:	ret

0000000000413ce8 <size_multiply_overflow>:
  413ce8:	sub	sp, sp, #0x10
  413cec:	str	x0, [sp, #8]
  413cf0:	str	x1, [sp]
  413cf4:	ldr	x0, [sp]
  413cf8:	cmp	x0, #0x0
  413cfc:	cset	w0, ne  // ne = any
  413d00:	and	w0, w0, #0xff
  413d04:	and	x0, x0, #0xff
  413d08:	cmp	x0, #0x0
  413d0c:	b.eq	413d50 <size_multiply_overflow+0x68>  // b.none
  413d10:	mov	x2, #0x0                   	// #0
  413d14:	ldr	x1, [sp, #8]
  413d18:	ldr	x0, [sp]
  413d1c:	umulh	x0, x1, x0
  413d20:	cmp	x0, #0x0
  413d24:	b.eq	413d2c <size_multiply_overflow+0x44>  // b.none
  413d28:	mov	x2, #0x1                   	// #1
  413d2c:	mov	x0, x2
  413d30:	cmp	x0, #0x0
  413d34:	cset	w0, ne  // ne = any
  413d38:	and	w0, w0, #0xff
  413d3c:	and	x0, x0, #0xff
  413d40:	cmp	x0, #0x0
  413d44:	b.eq	413d50 <size_multiply_overflow+0x68>  // b.none
  413d48:	mov	w0, #0x1                   	// #1
  413d4c:	b	413d54 <size_multiply_overflow+0x6c>
  413d50:	mov	w0, #0x0                   	// #0
  413d54:	and	w0, w0, #0x1
  413d58:	and	w0, w0, #0xff
  413d5c:	add	sp, sp, #0x10
  413d60:	ret

0000000000413d64 <audit_session_is_valid>:
  413d64:	sub	sp, sp, #0x10
  413d68:	str	w0, [sp, #12]
  413d6c:	ldr	w0, [sp, #12]
  413d70:	cmp	w0, #0x0
  413d74:	b.eq	413d8c <audit_session_is_valid+0x28>  // b.none
  413d78:	ldr	w0, [sp, #12]
  413d7c:	cmn	w0, #0x1
  413d80:	b.eq	413d8c <audit_session_is_valid+0x28>  // b.none
  413d84:	mov	w0, #0x1                   	// #1
  413d88:	b	413d90 <audit_session_is_valid+0x2c>
  413d8c:	mov	w0, #0x0                   	// #0
  413d90:	and	w0, w0, #0x1
  413d94:	and	w0, w0, #0xff
  413d98:	add	sp, sp, #0x10
  413d9c:	ret

0000000000413da0 <streq_ptr>:
  413da0:	stp	x29, x30, [sp, #-32]!
  413da4:	mov	x29, sp
  413da8:	str	x0, [sp, #24]
  413dac:	str	x1, [sp, #16]
  413db0:	ldr	x1, [sp, #16]
  413db4:	ldr	x0, [sp, #24]
  413db8:	bl	407110 <strcmp_ptr@plt>
  413dbc:	cmp	w0, #0x0
  413dc0:	cset	w0, eq  // eq = none
  413dc4:	and	w0, w0, #0xff
  413dc8:	ldp	x29, x30, [sp], #32
  413dcc:	ret

0000000000413dd0 <strempty>:
  413dd0:	sub	sp, sp, #0x10
  413dd4:	str	x0, [sp, #8]
  413dd8:	ldr	x0, [sp, #8]
  413ddc:	cmp	x0, #0x0
  413de0:	b.ne	413dec <strempty+0x1c>  // b.any
  413de4:	adrp	x0, 43e000 <__func__.12250+0x440>
  413de8:	add	x0, x0, #0xa88
  413dec:	add	sp, sp, #0x10
  413df0:	ret

0000000000413df4 <strna>:
  413df4:	sub	sp, sp, #0x10
  413df8:	str	x0, [sp, #8]
  413dfc:	ldr	x0, [sp, #8]
  413e00:	cmp	x0, #0x0
  413e04:	b.ne	413e10 <strna+0x1c>  // b.any
  413e08:	adrp	x0, 43e000 <__func__.12250+0x440>
  413e0c:	add	x0, x0, #0xa90
  413e10:	add	sp, sp, #0x10
  413e14:	ret

0000000000413e18 <isempty>:
  413e18:	sub	sp, sp, #0x10
  413e1c:	str	x0, [sp, #8]
  413e20:	ldr	x0, [sp, #8]
  413e24:	cmp	x0, #0x0
  413e28:	b.eq	413e3c <isempty+0x24>  // b.none
  413e2c:	ldr	x0, [sp, #8]
  413e30:	ldrb	w0, [x0]
  413e34:	cmp	w0, #0x0
  413e38:	b.ne	413e44 <isempty+0x2c>  // b.any
  413e3c:	mov	w0, #0x1                   	// #1
  413e40:	b	413e48 <isempty+0x30>
  413e44:	mov	w0, #0x0                   	// #0
  413e48:	and	w0, w0, #0x1
  413e4c:	and	w0, w0, #0xff
  413e50:	add	sp, sp, #0x10
  413e54:	ret

0000000000413e58 <empty_to_null>:
  413e58:	stp	x29, x30, [sp, #-32]!
  413e5c:	mov	x29, sp
  413e60:	str	x0, [sp, #24]
  413e64:	ldr	x0, [sp, #24]
  413e68:	bl	413e18 <isempty>
  413e6c:	and	w0, w0, #0xff
  413e70:	cmp	w0, #0x0
  413e74:	b.ne	413e80 <empty_to_null+0x28>  // b.any
  413e78:	ldr	x0, [sp, #24]
  413e7c:	b	413e84 <empty_to_null+0x2c>
  413e80:	mov	x0, #0x0                   	// #0
  413e84:	ldp	x29, x30, [sp], #32
  413e88:	ret

0000000000413e8c <startswith>:
  413e8c:	stp	x29, x30, [sp, #-48]!
  413e90:	mov	x29, sp
  413e94:	str	x0, [sp, #24]
  413e98:	str	x1, [sp, #16]
  413e9c:	ldr	x0, [sp, #16]
  413ea0:	bl	4082f0 <strlen@plt>
  413ea4:	str	x0, [sp, #40]
  413ea8:	ldr	x2, [sp, #40]
  413eac:	ldr	x1, [sp, #16]
  413eb0:	ldr	x0, [sp, #24]
  413eb4:	bl	407770 <strncmp@plt>
  413eb8:	cmp	w0, #0x0
  413ebc:	b.ne	413ed0 <startswith+0x44>  // b.any
  413ec0:	ldr	x1, [sp, #24]
  413ec4:	ldr	x0, [sp, #40]
  413ec8:	add	x0, x1, x0
  413ecc:	b	413ed4 <startswith+0x48>
  413ed0:	mov	x0, #0x0                   	// #0
  413ed4:	ldp	x29, x30, [sp], #48
  413ed8:	ret

0000000000413edc <boot_config_has_entry>:
  413edc:	stp	x29, x30, [sp, #-48]!
  413ee0:	mov	x29, sp
  413ee4:	str	x0, [sp, #24]
  413ee8:	str	x1, [sp, #16]
  413eec:	str	xzr, [sp, #40]
  413ef0:	b	413f3c <boot_config_has_entry+0x60>
  413ef4:	ldr	x0, [sp, #24]
  413ef8:	ldr	x2, [x0, #64]
  413efc:	ldr	x1, [sp, #40]
  413f00:	mov	x0, x1
  413f04:	lsl	x0, x0, #3
  413f08:	sub	x0, x0, x1
  413f0c:	lsl	x0, x0, #4
  413f10:	add	x0, x2, x0
  413f14:	ldr	x0, [x0, #8]
  413f18:	ldr	x1, [sp, #16]
  413f1c:	bl	407f30 <strcmp@plt>
  413f20:	cmp	w0, #0x0
  413f24:	b.ne	413f30 <boot_config_has_entry+0x54>  // b.any
  413f28:	mov	w0, #0x1                   	// #1
  413f2c:	b	413f54 <boot_config_has_entry+0x78>
  413f30:	ldr	x0, [sp, #40]
  413f34:	add	x0, x0, #0x1
  413f38:	str	x0, [sp, #40]
  413f3c:	ldr	x0, [sp, #24]
  413f40:	ldr	x0, [x0, #72]
  413f44:	ldr	x1, [sp, #40]
  413f48:	cmp	x1, x0
  413f4c:	b.cc	413ef4 <boot_config_has_entry+0x18>  // b.lo, b.ul, b.last
  413f50:	mov	w0, #0x0                   	// #0
  413f54:	ldp	x29, x30, [sp], #48
  413f58:	ret

0000000000413f5c <sd_bus_message_unrefp>:
  413f5c:	stp	x29, x30, [sp, #-32]!
  413f60:	mov	x29, sp
  413f64:	str	x0, [sp, #24]
  413f68:	ldr	x0, [sp, #24]
  413f6c:	ldr	x0, [x0]
  413f70:	cmp	x0, #0x0
  413f74:	b.eq	413f84 <sd_bus_message_unrefp+0x28>  // b.none
  413f78:	ldr	x0, [sp, #24]
  413f7c:	ldr	x0, [x0]
  413f80:	bl	407240 <sd_bus_message_unref@plt>
  413f84:	nop
  413f88:	ldp	x29, x30, [sp], #32
  413f8c:	ret

0000000000413f90 <sd_bus_creds_unrefp>:
  413f90:	stp	x29, x30, [sp, #-32]!
  413f94:	mov	x29, sp
  413f98:	str	x0, [sp, #24]
  413f9c:	ldr	x0, [sp, #24]
  413fa0:	ldr	x0, [x0]
  413fa4:	cmp	x0, #0x0
  413fa8:	b.eq	413fb8 <sd_bus_creds_unrefp+0x28>  // b.none
  413fac:	ldr	x0, [sp, #24]
  413fb0:	ldr	x0, [x0]
  413fb4:	bl	4072e0 <sd_bus_creds_unref@plt>
  413fb8:	nop
  413fbc:	ldp	x29, x30, [sp], #32
  413fc0:	ret

0000000000413fc4 <hashmap_get>:
  413fc4:	stp	x29, x30, [sp, #-32]!
  413fc8:	mov	x29, sp
  413fcc:	str	x0, [sp, #24]
  413fd0:	str	x1, [sp, #16]
  413fd4:	ldr	x1, [sp, #16]
  413fd8:	ldr	x0, [sp, #24]
  413fdc:	bl	407860 <internal_hashmap_get@plt>
  413fe0:	ldp	x29, x30, [sp], #32
  413fe4:	ret

0000000000413fe8 <hashmap_contains>:
  413fe8:	stp	x29, x30, [sp, #-32]!
  413fec:	mov	x29, sp
  413ff0:	str	x0, [sp, #24]
  413ff4:	str	x1, [sp, #16]
  413ff8:	ldr	x1, [sp, #16]
  413ffc:	ldr	x0, [sp, #24]
  414000:	bl	407350 <internal_hashmap_contains@plt>
  414004:	and	w0, w0, #0xff
  414008:	ldp	x29, x30, [sp], #32
  41400c:	ret

0000000000414010 <hashmap_size>:
  414010:	stp	x29, x30, [sp, #-32]!
  414014:	mov	x29, sp
  414018:	str	x0, [sp, #24]
  41401c:	ldr	x0, [sp, #24]
  414020:	bl	407d30 <internal_hashmap_size@plt>
  414024:	ldp	x29, x30, [sp], #32
  414028:	ret

000000000041402c <hashmap_iterate>:
  41402c:	stp	x29, x30, [sp, #-48]!
  414030:	mov	x29, sp
  414034:	str	x0, [sp, #40]
  414038:	str	x1, [sp, #32]
  41403c:	str	x2, [sp, #24]
  414040:	str	x3, [sp, #16]
  414044:	ldr	x3, [sp, #16]
  414048:	ldr	x2, [sp, #24]
  41404c:	ldr	x1, [sp, #32]
  414050:	ldr	x0, [sp, #40]
  414054:	bl	407f80 <internal_hashmap_iterate@plt>
  414058:	and	w0, w0, #0xff
  41405c:	ldp	x29, x30, [sp], #48
  414060:	ret

0000000000414064 <closep>:
  414064:	stp	x29, x30, [sp, #-32]!
  414068:	mov	x29, sp
  41406c:	str	x0, [sp, #24]
  414070:	ldr	x0, [sp, #24]
  414074:	ldr	w0, [x0]
  414078:	bl	4075e0 <safe_close@plt>
  41407c:	nop
  414080:	ldp	x29, x30, [sp], #32
  414084:	ret

0000000000414088 <fclosep>:
  414088:	stp	x29, x30, [sp, #-32]!
  41408c:	mov	x29, sp
  414090:	str	x0, [sp, #24]
  414094:	ldr	x0, [sp, #24]
  414098:	ldr	x0, [x0]
  41409c:	bl	406fc0 <safe_fclose@plt>
  4140a0:	nop
  4140a4:	ldp	x29, x30, [sp], #32
  4140a8:	ret

00000000004140ac <closedirp>:
  4140ac:	stp	x29, x30, [sp, #-32]!
  4140b0:	mov	x29, sp
  4140b4:	str	x0, [sp, #24]
  4140b8:	ldr	x0, [sp, #24]
  4140bc:	ldr	x0, [x0]
  4140c0:	cmp	x0, #0x0
  4140c4:	b.eq	4140d4 <closedirp+0x28>  // b.none
  4140c8:	ldr	x0, [sp, #24]
  4140cc:	ldr	x0, [x0]
  4140d0:	bl	407760 <closedir@plt>
  4140d4:	nop
  4140d8:	ldp	x29, x30, [sp], #32
  4140dc:	ret

00000000004140e0 <write_string_file_atomic_label>:
  4140e0:	stp	x29, x30, [sp, #-32]!
  4140e4:	mov	x29, sp
  4140e8:	str	x0, [sp, #24]
  4140ec:	str	x1, [sp, #16]
  4140f0:	mov	x2, #0x0                   	// #0
  4140f4:	ldr	x1, [sp, #16]
  4140f8:	ldr	x0, [sp, #24]
  4140fc:	bl	407570 <write_string_file_atomic_label_ts@plt>
  414100:	ldp	x29, x30, [sp], #32
  414104:	ret

0000000000414108 <write_string_file>:
  414108:	stp	x29, x30, [sp, #-48]!
  41410c:	mov	x29, sp
  414110:	str	x0, [sp, #40]
  414114:	str	x1, [sp, #32]
  414118:	str	w2, [sp, #28]
  41411c:	mov	x3, #0x0                   	// #0
  414120:	ldr	w2, [sp, #28]
  414124:	ldr	x1, [sp, #32]
  414128:	ldr	x0, [sp, #40]
  41412c:	bl	407360 <write_string_file_ts@plt>
  414130:	ldp	x29, x30, [sp], #48
  414134:	ret

0000000000414138 <errno_or_else>:
  414138:	stp	x29, x30, [sp, #-32]!
  41413c:	mov	x29, sp
  414140:	str	w0, [sp, #28]
  414144:	bl	407960 <__errno_location@plt>
  414148:	ldr	w0, [x0]
  41414c:	cmp	w0, #0x0
  414150:	b.le	414164 <errno_or_else+0x2c>
  414154:	bl	407960 <__errno_location@plt>
  414158:	ldr	w0, [x0]
  41415c:	neg	w0, w0
  414160:	b	414174 <errno_or_else+0x3c>
  414164:	ldr	w0, [sp, #28]
  414168:	cmp	w0, #0x0
  41416c:	cneg	w0, w0, lt  // lt = tstop
  414170:	neg	w0, w0
  414174:	ldp	x29, x30, [sp], #32
  414178:	ret

000000000041417c <SESSION_IS_SELF>:
  41417c:	stp	x29, x30, [sp, #-32]!
  414180:	mov	x29, sp
  414184:	str	x0, [sp, #24]
  414188:	ldr	x0, [sp, #24]
  41418c:	bl	413e18 <isempty>
  414190:	and	w0, w0, #0xff
  414194:	cmp	w0, #0x0
  414198:	b.ne	4141b4 <SESSION_IS_SELF+0x38>  // b.any
  41419c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4141a0:	add	x1, x0, #0xa98
  4141a4:	ldr	x0, [sp, #24]
  4141a8:	bl	407f30 <strcmp@plt>
  4141ac:	cmp	w0, #0x0
  4141b0:	b.ne	4141bc <SESSION_IS_SELF+0x40>  // b.any
  4141b4:	mov	w0, #0x1                   	// #1
  4141b8:	b	4141c0 <SESSION_IS_SELF+0x44>
  4141bc:	mov	w0, #0x0                   	// #0
  4141c0:	and	w0, w0, #0x1
  4141c4:	and	w0, w0, #0xff
  4141c8:	ldp	x29, x30, [sp], #32
  4141cc:	ret

00000000004141d0 <SESSION_IS_AUTO>:
  4141d0:	stp	x29, x30, [sp, #-32]!
  4141d4:	mov	x29, sp
  4141d8:	str	x0, [sp, #24]
  4141dc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4141e0:	add	x1, x0, #0xaa0
  4141e4:	ldr	x0, [sp, #24]
  4141e8:	bl	413da0 <streq_ptr>
  4141ec:	and	w0, w0, #0xff
  4141f0:	ldp	x29, x30, [sp], #32
  4141f4:	ret

00000000004141f8 <SEAT_IS_SELF>:
  4141f8:	stp	x29, x30, [sp, #-32]!
  4141fc:	mov	x29, sp
  414200:	str	x0, [sp, #24]
  414204:	ldr	x0, [sp, #24]
  414208:	bl	413e18 <isempty>
  41420c:	and	w0, w0, #0xff
  414210:	cmp	w0, #0x0
  414214:	b.ne	414230 <SEAT_IS_SELF+0x38>  // b.any
  414218:	adrp	x0, 43e000 <__func__.12250+0x440>
  41421c:	add	x1, x0, #0xa98
  414220:	ldr	x0, [sp, #24]
  414224:	bl	407f30 <strcmp@plt>
  414228:	cmp	w0, #0x0
  41422c:	b.ne	414238 <SEAT_IS_SELF+0x40>  // b.any
  414230:	mov	w0, #0x1                   	// #1
  414234:	b	41423c <SEAT_IS_SELF+0x44>
  414238:	mov	w0, #0x0                   	// #0
  41423c:	and	w0, w0, #0x1
  414240:	and	w0, w0, #0xff
  414244:	ldp	x29, x30, [sp], #32
  414248:	ret

000000000041424c <SEAT_IS_AUTO>:
  41424c:	stp	x29, x30, [sp, #-32]!
  414250:	mov	x29, sp
  414254:	str	x0, [sp, #24]
  414258:	adrp	x0, 43e000 <__func__.12250+0x440>
  41425c:	add	x1, x0, #0xaa0
  414260:	ldr	x0, [sp, #24]
  414264:	bl	413da0 <streq_ptr>
  414268:	and	w0, w0, #0xff
  41426c:	ldp	x29, x30, [sp], #32
  414270:	ret

0000000000414274 <safe_atou64>:
  414274:	stp	x29, x30, [sp, #-32]!
  414278:	mov	x29, sp
  41427c:	str	x0, [sp, #24]
  414280:	str	x1, [sp, #16]
  414284:	ldr	x1, [sp, #16]
  414288:	ldr	x0, [sp, #24]
  41428c:	bl	407210 <safe_atollu@plt>
  414290:	ldp	x29, x30, [sp], #32
  414294:	ret

0000000000414298 <get_sender_session>:
  414298:	stp	x29, x30, [sp, #-128]!
  41429c:	mov	x29, sp
  4142a0:	str	x19, [sp, #16]
  4142a4:	str	x0, [sp, #72]
  4142a8:	str	x1, [sp, #64]
  4142ac:	strb	w2, [sp, #63]
  4142b0:	str	x3, [sp, #48]
  4142b4:	str	x4, [sp, #40]
  4142b8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4142bc:	ldr	x0, [x0, #4024]
  4142c0:	ldr	x1, [x0]
  4142c4:	str	x1, [sp, #120]
  4142c8:	mov	x1, #0x0                   	// #0
  4142cc:	str	xzr, [sp, #88]
  4142d0:	str	xzr, [sp, #104]
  4142d4:	ldrb	w0, [sp, #63]
  4142d8:	cmp	w0, #0x0
  4142dc:	b.eq	4142ec <get_sender_session+0x54>  // b.none
  4142e0:	mov	x0, #0x600000              	// #6291456
  4142e4:	movk	x0, #0x8000, lsl #48
  4142e8:	b	4142f4 <get_sender_session+0x5c>
  4142ec:	mov	x0, #0x200000              	// #2097152
  4142f0:	movk	x0, #0x8000, lsl #48
  4142f4:	add	x1, sp, #0x58
  4142f8:	mov	x2, x1
  4142fc:	mov	x1, x0
  414300:	ldr	x0, [sp, #64]
  414304:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  414308:	str	w0, [sp, #84]
  41430c:	ldr	w0, [sp, #84]
  414310:	cmp	w0, #0x0
  414314:	b.ge	414320 <get_sender_session+0x88>  // b.tcont
  414318:	ldr	w19, [sp, #84]
  41431c:	b	414438 <get_sender_session+0x1a0>
  414320:	ldr	x0, [sp, #88]
  414324:	add	x1, sp, #0x60
  414328:	bl	4072f0 <sd_bus_creds_get_session@plt>
  41432c:	str	w0, [sp, #84]
  414330:	ldr	w0, [sp, #84]
  414334:	cmp	w0, #0x0
  414338:	b.ge	4143cc <get_sender_session+0x134>  // b.tcont
  41433c:	ldr	w0, [sp, #84]
  414340:	cmn	w0, #0x6
  414344:	b.eq	414350 <get_sender_session+0xb8>  // b.none
  414348:	ldr	w19, [sp, #84]
  41434c:	b	414438 <get_sender_session+0x1a0>
  414350:	ldrb	w0, [sp, #63]
  414354:	cmp	w0, #0x0
  414358:	b.eq	4143e0 <get_sender_session+0x148>  // b.none
  41435c:	ldr	x0, [sp, #88]
  414360:	add	x1, sp, #0x50
  414364:	bl	407e40 <sd_bus_creds_get_owner_uid@plt>
  414368:	str	w0, [sp, #84]
  41436c:	ldr	w0, [sp, #84]
  414370:	cmp	w0, #0x0
  414374:	b.ge	41438c <get_sender_session+0xf4>  // b.tcont
  414378:	ldr	w0, [sp, #84]
  41437c:	cmn	w0, #0x6
  414380:	b.eq	4143e0 <get_sender_session+0x148>  // b.none
  414384:	ldr	w19, [sp, #84]
  414388:	b	414438 <get_sender_session+0x1a0>
  41438c:	ldr	x0, [sp, #72]
  414390:	ldr	x2, [x0, #48]
  414394:	ldr	w0, [sp, #80]
  414398:	mov	w0, w0
  41439c:	add	x0, x0, #0x1
  4143a0:	mov	x1, x0
  4143a4:	mov	x0, x2
  4143a8:	bl	413fc4 <hashmap_get>
  4143ac:	str	x0, [sp, #112]
  4143b0:	ldr	x0, [sp, #112]
  4143b4:	cmp	x0, #0x0
  4143b8:	b.eq	4143e0 <get_sender_session+0x148>  // b.none
  4143bc:	ldr	x0, [sp, #112]
  4143c0:	ldr	x0, [x0, #80]
  4143c4:	str	x0, [sp, #104]
  4143c8:	b	4143e0 <get_sender_session+0x148>
  4143cc:	ldr	x0, [sp, #72]
  4143d0:	ldr	x0, [x0, #32]
  4143d4:	ldr	x1, [sp, #96]
  4143d8:	bl	413fc4 <hashmap_get>
  4143dc:	str	x0, [sp, #104]
  4143e0:	ldr	x0, [sp, #104]
  4143e4:	cmp	x0, #0x0
  4143e8:	b.ne	414428 <get_sender_session+0x190>  // b.any
  4143ec:	ldrb	w0, [sp, #63]
  4143f0:	cmp	w0, #0x0
  4143f4:	b.eq	414404 <get_sender_session+0x16c>  // b.none
  4143f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4143fc:	add	x0, x0, #0xaa8
  414400:	b	41440c <get_sender_session+0x174>
  414404:	adrp	x0, 43e000 <__func__.12250+0x440>
  414408:	add	x0, x0, #0xb00
  41440c:	mov	x2, x0
  414410:	adrp	x0, 43e000 <__func__.12250+0x440>
  414414:	add	x1, x0, #0xb30
  414418:	ldr	x0, [sp, #48]
  41441c:	bl	407ae0 <sd_bus_error_setf@plt>
  414420:	mov	w19, w0
  414424:	b	414438 <get_sender_session+0x1a0>
  414428:	ldr	x0, [sp, #40]
  41442c:	ldr	x1, [sp, #104]
  414430:	str	x1, [x0]
  414434:	mov	w19, #0x0                   	// #0
  414438:	add	x0, sp, #0x58
  41443c:	bl	413f90 <sd_bus_creds_unrefp>
  414440:	mov	w1, w19
  414444:	adrp	x0, 460000 <wordlist.10364+0x370>
  414448:	ldr	x0, [x0, #4024]
  41444c:	ldr	x2, [sp, #120]
  414450:	ldr	x0, [x0]
  414454:	eor	x0, x2, x0
  414458:	cmp	x0, #0x0
  41445c:	b.eq	414464 <get_sender_session+0x1cc>  // b.none
  414460:	bl	407b20 <__stack_chk_fail@plt>
  414464:	mov	w0, w1
  414468:	ldr	x19, [sp, #16]
  41446c:	ldp	x29, x30, [sp], #128
  414470:	ret

0000000000414474 <manager_get_session_from_creds>:
  414474:	stp	x29, x30, [sp, #-80]!
  414478:	mov	x29, sp
  41447c:	str	x0, [sp, #56]
  414480:	str	x1, [sp, #48]
  414484:	str	x2, [sp, #40]
  414488:	str	x3, [sp, #32]
  41448c:	str	x4, [sp, #24]
  414490:	ldr	x0, [sp, #56]
  414494:	cmp	x0, #0x0
  414498:	cset	w0, eq  // eq = none
  41449c:	and	w0, w0, #0xff
  4144a0:	and	x0, x0, #0xff
  4144a4:	cmp	x0, #0x0
  4144a8:	b.eq	4144d4 <manager_get_session_from_creds+0x60>  // b.none
  4144ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  4144b0:	add	x1, x0, #0xb5b
  4144b4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4144b8:	add	x4, x0, #0x750
  4144bc:	mov	w3, #0x74                  	// #116
  4144c0:	mov	x2, x1
  4144c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4144c8:	add	x1, x0, #0xb78
  4144cc:	mov	w0, #0x0                   	// #0
  4144d0:	bl	407650 <log_assert_failed_realm@plt>
  4144d4:	ldr	x0, [sp, #24]
  4144d8:	cmp	x0, #0x0
  4144dc:	cset	w0, eq  // eq = none
  4144e0:	and	w0, w0, #0xff
  4144e4:	and	x0, x0, #0xff
  4144e8:	cmp	x0, #0x0
  4144ec:	b.eq	414518 <manager_get_session_from_creds+0xa4>  // b.none
  4144f0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4144f4:	add	x1, x0, #0xb5b
  4144f8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4144fc:	add	x4, x0, #0x750
  414500:	mov	w3, #0x75                  	// #117
  414504:	mov	x2, x1
  414508:	adrp	x0, 43e000 <__func__.12250+0x440>
  41450c:	add	x1, x0, #0xb80
  414510:	mov	w0, #0x0                   	// #0
  414514:	bl	407650 <log_assert_failed_realm@plt>
  414518:	ldr	x0, [sp, #40]
  41451c:	bl	4141f8 <SEAT_IS_SELF>
  414520:	and	w0, w0, #0xff
  414524:	cmp	w0, #0x0
  414528:	b.eq	414548 <manager_get_session_from_creds+0xd4>  // b.none
  41452c:	ldr	x4, [sp, #24]
  414530:	ldr	x3, [sp, #32]
  414534:	mov	w2, #0x0                   	// #0
  414538:	ldr	x1, [sp, #48]
  41453c:	ldr	x0, [sp, #56]
  414540:	bl	414298 <get_sender_session>
  414544:	b	4145c8 <manager_get_session_from_creds+0x154>
  414548:	ldr	x0, [sp, #40]
  41454c:	bl	41424c <SEAT_IS_AUTO>
  414550:	and	w0, w0, #0xff
  414554:	cmp	w0, #0x0
  414558:	b.eq	414578 <manager_get_session_from_creds+0x104>  // b.none
  41455c:	ldr	x4, [sp, #24]
  414560:	ldr	x3, [sp, #32]
  414564:	mov	w2, #0x1                   	// #1
  414568:	ldr	x1, [sp, #48]
  41456c:	ldr	x0, [sp, #56]
  414570:	bl	414298 <get_sender_session>
  414574:	b	4145c8 <manager_get_session_from_creds+0x154>
  414578:	ldr	x0, [sp, #56]
  41457c:	ldr	x0, [x0, #32]
  414580:	ldr	x1, [sp, #40]
  414584:	bl	413fc4 <hashmap_get>
  414588:	str	x0, [sp, #72]
  41458c:	ldr	x0, [sp, #72]
  414590:	cmp	x0, #0x0
  414594:	b.ne	4145b8 <manager_get_session_from_creds+0x144>  // b.any
  414598:	ldr	x3, [sp, #40]
  41459c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4145a0:	add	x2, x0, #0xb88
  4145a4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4145a8:	add	x1, x0, #0xba0
  4145ac:	ldr	x0, [sp, #32]
  4145b0:	bl	407ae0 <sd_bus_error_setf@plt>
  4145b4:	b	4145c8 <manager_get_session_from_creds+0x154>
  4145b8:	ldr	x0, [sp, #24]
  4145bc:	ldr	x1, [sp, #72]
  4145c0:	str	x1, [x0]
  4145c4:	mov	w0, #0x0                   	// #0
  4145c8:	ldp	x29, x30, [sp], #80
  4145cc:	ret

00000000004145d0 <get_sender_user>:
  4145d0:	stp	x29, x30, [sp, #-96]!
  4145d4:	mov	x29, sp
  4145d8:	str	x19, [sp, #16]
  4145dc:	str	x0, [sp, #56]
  4145e0:	str	x1, [sp, #48]
  4145e4:	str	x2, [sp, #40]
  4145e8:	str	x3, [sp, #32]
  4145ec:	adrp	x0, 460000 <wordlist.10364+0x370>
  4145f0:	ldr	x0, [x0, #4024]
  4145f4:	ldr	x1, [x0]
  4145f8:	str	x1, [sp, #88]
  4145fc:	mov	x1, #0x0                   	// #0
  414600:	str	xzr, [sp, #72]
  414604:	add	x0, sp, #0x48
  414608:	mov	x2, x0
  41460c:	mov	x1, #0x400000              	// #4194304
  414610:	movk	x1, #0x8000, lsl #48
  414614:	ldr	x0, [sp, #48]
  414618:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  41461c:	str	w0, [sp, #68]
  414620:	ldr	w0, [sp, #68]
  414624:	cmp	w0, #0x0
  414628:	b.ge	414634 <get_sender_user+0x64>  // b.tcont
  41462c:	ldr	w19, [sp, #68]
  414630:	b	4146cc <get_sender_user+0xfc>
  414634:	ldr	x0, [sp, #72]
  414638:	add	x1, sp, #0x40
  41463c:	bl	407e40 <sd_bus_creds_get_owner_uid@plt>
  414640:	str	w0, [sp, #68]
  414644:	ldr	w0, [sp, #68]
  414648:	cmp	w0, #0x0
  41464c:	b.ge	41466c <get_sender_user+0x9c>  // b.tcont
  414650:	ldr	w0, [sp, #68]
  414654:	cmn	w0, #0x6
  414658:	b.eq	414664 <get_sender_user+0x94>  // b.none
  41465c:	ldr	w19, [sp, #68]
  414660:	b	4146cc <get_sender_user+0xfc>
  414664:	str	xzr, [sp, #80]
  414668:	b	414690 <get_sender_user+0xc0>
  41466c:	ldr	x0, [sp, #56]
  414670:	ldr	x2, [x0, #48]
  414674:	ldr	w0, [sp, #64]
  414678:	mov	w0, w0
  41467c:	add	x0, x0, #0x1
  414680:	mov	x1, x0
  414684:	mov	x0, x2
  414688:	bl	413fc4 <hashmap_get>
  41468c:	str	x0, [sp, #80]
  414690:	ldr	x0, [sp, #80]
  414694:	cmp	x0, #0x0
  414698:	b.ne	4146bc <get_sender_user+0xec>  // b.any
  41469c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4146a0:	add	x2, x0, #0xbc8
  4146a4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4146a8:	add	x1, x0, #0xc08
  4146ac:	ldr	x0, [sp, #40]
  4146b0:	bl	407ae0 <sd_bus_error_setf@plt>
  4146b4:	mov	w19, w0
  4146b8:	b	4146cc <get_sender_user+0xfc>
  4146bc:	ldr	x0, [sp, #32]
  4146c0:	ldr	x1, [sp, #80]
  4146c4:	str	x1, [x0]
  4146c8:	mov	w19, #0x0                   	// #0
  4146cc:	add	x0, sp, #0x48
  4146d0:	bl	413f90 <sd_bus_creds_unrefp>
  4146d4:	mov	w1, w19
  4146d8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4146dc:	ldr	x0, [x0, #4024]
  4146e0:	ldr	x2, [sp, #88]
  4146e4:	ldr	x0, [x0]
  4146e8:	eor	x0, x2, x0
  4146ec:	cmp	x0, #0x0
  4146f0:	b.eq	4146f8 <get_sender_user+0x128>  // b.none
  4146f4:	bl	407b20 <__stack_chk_fail@plt>
  4146f8:	mov	w0, w1
  4146fc:	ldr	x19, [sp, #16]
  414700:	ldp	x29, x30, [sp], #96
  414704:	ret

0000000000414708 <manager_get_user_from_creds>:
  414708:	stp	x29, x30, [sp, #-80]!
  41470c:	mov	x29, sp
  414710:	str	x0, [sp, #56]
  414714:	str	x1, [sp, #48]
  414718:	str	w2, [sp, #44]
  41471c:	str	x3, [sp, #32]
  414720:	str	x4, [sp, #24]
  414724:	ldr	x0, [sp, #56]
  414728:	cmp	x0, #0x0
  41472c:	cset	w0, eq  // eq = none
  414730:	and	w0, w0, #0xff
  414734:	and	x0, x0, #0xff
  414738:	cmp	x0, #0x0
  41473c:	b.eq	414768 <manager_get_user_from_creds+0x60>  // b.none
  414740:	adrp	x0, 43e000 <__func__.12250+0x440>
  414744:	add	x1, x0, #0xb5b
  414748:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41474c:	add	x4, x0, #0x770
  414750:	mov	w3, #0xa3                  	// #163
  414754:	mov	x2, x1
  414758:	adrp	x0, 43e000 <__func__.12250+0x440>
  41475c:	add	x1, x0, #0xb78
  414760:	mov	w0, #0x0                   	// #0
  414764:	bl	407650 <log_assert_failed_realm@plt>
  414768:	ldr	x0, [sp, #24]
  41476c:	cmp	x0, #0x0
  414770:	cset	w0, eq  // eq = none
  414774:	and	w0, w0, #0xff
  414778:	and	x0, x0, #0xff
  41477c:	cmp	x0, #0x0
  414780:	b.eq	4147ac <manager_get_user_from_creds+0xa4>  // b.none
  414784:	adrp	x0, 43e000 <__func__.12250+0x440>
  414788:	add	x1, x0, #0xb5b
  41478c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414790:	add	x4, x0, #0x770
  414794:	mov	w3, #0xa4                  	// #164
  414798:	mov	x2, x1
  41479c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4147a0:	add	x1, x0, #0xb80
  4147a4:	mov	w0, #0x0                   	// #0
  4147a8:	bl	407650 <log_assert_failed_realm@plt>
  4147ac:	ldr	w0, [sp, #44]
  4147b0:	bl	407850 <uid_is_valid@plt>
  4147b4:	and	w0, w0, #0xff
  4147b8:	eor	w0, w0, #0x1
  4147bc:	and	w0, w0, #0xff
  4147c0:	cmp	w0, #0x0
  4147c4:	b.eq	4147e0 <manager_get_user_from_creds+0xd8>  // b.none
  4147c8:	ldr	x3, [sp, #24]
  4147cc:	ldr	x2, [sp, #32]
  4147d0:	ldr	x1, [sp, #48]
  4147d4:	ldr	x0, [sp, #56]
  4147d8:	bl	4145d0 <get_sender_user>
  4147dc:	b	41483c <manager_get_user_from_creds+0x134>
  4147e0:	ldr	x0, [sp, #56]
  4147e4:	ldr	x2, [x0, #48]
  4147e8:	ldr	w0, [sp, #44]
  4147ec:	add	x0, x0, #0x1
  4147f0:	mov	x1, x0
  4147f4:	mov	x0, x2
  4147f8:	bl	413fc4 <hashmap_get>
  4147fc:	str	x0, [sp, #72]
  414800:	ldr	x0, [sp, #72]
  414804:	cmp	x0, #0x0
  414808:	b.ne	41482c <manager_get_user_from_creds+0x124>  // b.any
  41480c:	ldr	w3, [sp, #44]
  414810:	adrp	x0, 43e000 <__func__.12250+0x440>
  414814:	add	x2, x0, #0xc30
  414818:	adrp	x0, 43e000 <__func__.12250+0x440>
  41481c:	add	x1, x0, #0xc60
  414820:	ldr	x0, [sp, #32]
  414824:	bl	407ae0 <sd_bus_error_setf@plt>
  414828:	b	41483c <manager_get_user_from_creds+0x134>
  41482c:	ldr	x0, [sp, #24]
  414830:	ldr	x1, [sp, #72]
  414834:	str	x1, [x0]
  414838:	mov	w0, #0x0                   	// #0
  41483c:	ldp	x29, x30, [sp], #80
  414840:	ret

0000000000414844 <manager_get_seat_from_creds>:
  414844:	stp	x29, x30, [sp, #-96]!
  414848:	mov	x29, sp
  41484c:	str	x0, [sp, #56]
  414850:	str	x1, [sp, #48]
  414854:	str	x2, [sp, #40]
  414858:	str	x3, [sp, #32]
  41485c:	str	x4, [sp, #24]
  414860:	adrp	x0, 460000 <wordlist.10364+0x370>
  414864:	ldr	x0, [x0, #4024]
  414868:	ldr	x1, [x0]
  41486c:	str	x1, [sp, #88]
  414870:	mov	x1, #0x0                   	// #0
  414874:	ldr	x0, [sp, #56]
  414878:	cmp	x0, #0x0
  41487c:	cset	w0, eq  // eq = none
  414880:	and	w0, w0, #0xff
  414884:	and	x0, x0, #0xff
  414888:	cmp	x0, #0x0
  41488c:	b.eq	4148b8 <manager_get_seat_from_creds+0x74>  // b.none
  414890:	adrp	x0, 43e000 <__func__.12250+0x440>
  414894:	add	x1, x0, #0xb5b
  414898:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41489c:	add	x4, x0, #0x790
  4148a0:	mov	w3, #0xbc                  	// #188
  4148a4:	mov	x2, x1
  4148a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4148ac:	add	x1, x0, #0xb78
  4148b0:	mov	w0, #0x0                   	// #0
  4148b4:	bl	407650 <log_assert_failed_realm@plt>
  4148b8:	ldr	x0, [sp, #24]
  4148bc:	cmp	x0, #0x0
  4148c0:	cset	w0, eq  // eq = none
  4148c4:	and	w0, w0, #0xff
  4148c8:	and	x0, x0, #0xff
  4148cc:	cmp	x0, #0x0
  4148d0:	b.eq	4148fc <manager_get_seat_from_creds+0xb8>  // b.none
  4148d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4148d8:	add	x1, x0, #0xb5b
  4148dc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4148e0:	add	x4, x0, #0x790
  4148e4:	mov	w3, #0xbd                  	// #189
  4148e8:	mov	x2, x1
  4148ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4148f0:	add	x1, x0, #0xb80
  4148f4:	mov	w0, #0x0                   	// #0
  4148f8:	bl	407650 <log_assert_failed_realm@plt>
  4148fc:	ldr	x0, [sp, #40]
  414900:	bl	4141f8 <SEAT_IS_SELF>
  414904:	and	w0, w0, #0xff
  414908:	cmp	w0, #0x0
  41490c:	b.ne	414924 <manager_get_seat_from_creds+0xe0>  // b.any
  414910:	ldr	x0, [sp, #40]
  414914:	bl	41424c <SEAT_IS_AUTO>
  414918:	and	w0, w0, #0xff
  41491c:	cmp	w0, #0x0
  414920:	b.eq	414998 <manager_get_seat_from_creds+0x154>  // b.none
  414924:	add	x0, sp, #0x48
  414928:	mov	x4, x0
  41492c:	ldr	x3, [sp, #32]
  414930:	ldr	x2, [sp, #40]
  414934:	ldr	x1, [sp, #48]
  414938:	ldr	x0, [sp, #56]
  41493c:	bl	414474 <manager_get_session_from_creds>
  414940:	str	w0, [sp, #68]
  414944:	ldr	w0, [sp, #68]
  414948:	cmp	w0, #0x0
  41494c:	b.ge	414958 <manager_get_seat_from_creds+0x114>  // b.tcont
  414950:	ldr	w0, [sp, #68]
  414954:	b	4149ec <manager_get_seat_from_creds+0x1a8>
  414958:	ldr	x0, [sp, #72]
  41495c:	ldr	x0, [x0, #136]
  414960:	str	x0, [sp, #80]
  414964:	ldr	x0, [sp, #80]
  414968:	cmp	x0, #0x0
  41496c:	b.ne	4149d8 <manager_get_seat_from_creds+0x194>  // b.any
  414970:	ldr	x0, [sp, #72]
  414974:	ldr	x0, [x0, #8]
  414978:	mov	x3, x0
  41497c:	adrp	x0, 43e000 <__func__.12250+0x440>
  414980:	add	x2, x0, #0xc88
  414984:	adrp	x0, 43e000 <__func__.12250+0x440>
  414988:	add	x1, x0, #0xca8
  41498c:	ldr	x0, [sp, #32]
  414990:	bl	407ae0 <sd_bus_error_setf@plt>
  414994:	b	4149ec <manager_get_seat_from_creds+0x1a8>
  414998:	ldr	x0, [sp, #56]
  41499c:	ldr	x0, [x0, #24]
  4149a0:	ldr	x1, [sp, #40]
  4149a4:	bl	413fc4 <hashmap_get>
  4149a8:	str	x0, [sp, #80]
  4149ac:	ldr	x0, [sp, #80]
  4149b0:	cmp	x0, #0x0
  4149b4:	b.ne	4149dc <manager_get_seat_from_creds+0x198>  // b.any
  4149b8:	ldr	x3, [sp, #40]
  4149bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4149c0:	add	x2, x0, #0xcd0
  4149c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4149c8:	add	x1, x0, #0xca8
  4149cc:	ldr	x0, [sp, #32]
  4149d0:	bl	407ae0 <sd_bus_error_setf@plt>
  4149d4:	b	4149ec <manager_get_seat_from_creds+0x1a8>
  4149d8:	nop
  4149dc:	ldr	x0, [sp, #24]
  4149e0:	ldr	x1, [sp, #80]
  4149e4:	str	x1, [x0]
  4149e8:	mov	w0, #0x0                   	// #0
  4149ec:	mov	w1, w0
  4149f0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4149f4:	ldr	x0, [x0, #4024]
  4149f8:	ldr	x2, [sp, #88]
  4149fc:	ldr	x0, [x0]
  414a00:	eor	x0, x2, x0
  414a04:	cmp	x0, #0x0
  414a08:	b.eq	414a10 <manager_get_seat_from_creds+0x1cc>  // b.none
  414a0c:	bl	407b20 <__stack_chk_fail@plt>
  414a10:	mov	w0, w1
  414a14:	ldp	x29, x30, [sp], #96
  414a18:	ret

0000000000414a1c <return_test_polkit>:
  414a1c:	stp	x29, x30, [sp, #-96]!
  414a20:	mov	x29, sp
  414a24:	str	x0, [sp, #56]
  414a28:	str	w1, [sp, #52]
  414a2c:	str	x2, [sp, #40]
  414a30:	str	x3, [sp, #32]
  414a34:	str	w4, [sp, #48]
  414a38:	str	x5, [sp, #24]
  414a3c:	adrp	x0, 460000 <wordlist.10364+0x370>
  414a40:	ldr	x0, [x0, #4024]
  414a44:	ldr	x1, [x0]
  414a48:	str	x1, [sp, #88]
  414a4c:	mov	x1, #0x0                   	// #0
  414a50:	add	x0, sp, #0x4b
  414a54:	ldr	x6, [sp, #24]
  414a58:	mov	x5, x0
  414a5c:	ldr	w4, [sp, #48]
  414a60:	ldr	x3, [sp, #32]
  414a64:	ldr	x2, [sp, #40]
  414a68:	ldr	w1, [sp, #52]
  414a6c:	ldr	x0, [sp, #56]
  414a70:	bl	4076e0 <bus_test_polkit@plt>
  414a74:	str	w0, [sp, #76]
  414a78:	ldr	w0, [sp, #76]
  414a7c:	cmp	w0, #0x0
  414a80:	b.ge	414a8c <return_test_polkit+0x70>  // b.tcont
  414a84:	ldr	w0, [sp, #76]
  414a88:	b	414ae4 <return_test_polkit+0xc8>
  414a8c:	ldr	w0, [sp, #76]
  414a90:	cmp	w0, #0x0
  414a94:	b.le	414aa8 <return_test_polkit+0x8c>
  414a98:	adrp	x0, 43e000 <__func__.12250+0x440>
  414a9c:	add	x0, x0, #0xce8
  414aa0:	str	x0, [sp, #80]
  414aa4:	b	414ad0 <return_test_polkit+0xb4>
  414aa8:	ldrb	w0, [sp, #75]
  414aac:	cmp	w0, #0x0
  414ab0:	b.eq	414ac4 <return_test_polkit+0xa8>  // b.none
  414ab4:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ab8:	add	x0, x0, #0xcf0
  414abc:	str	x0, [sp, #80]
  414ac0:	b	414ad0 <return_test_polkit+0xb4>
  414ac4:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ac8:	add	x0, x0, #0xd00
  414acc:	str	x0, [sp, #80]
  414ad0:	ldr	x2, [sp, #80]
  414ad4:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ad8:	add	x1, x0, #0xd08
  414adc:	ldr	x0, [sp, #56]
  414ae0:	bl	4070e0 <sd_bus_reply_method_return@plt>
  414ae4:	mov	w1, w0
  414ae8:	adrp	x0, 460000 <wordlist.10364+0x370>
  414aec:	ldr	x0, [x0, #4024]
  414af0:	ldr	x2, [sp, #88]
  414af4:	ldr	x0, [x0]
  414af8:	eor	x0, x2, x0
  414afc:	cmp	x0, #0x0
  414b00:	b.eq	414b08 <return_test_polkit+0xec>  // b.none
  414b04:	bl	407b20 <__stack_chk_fail@plt>
  414b08:	mov	w0, w1
  414b0c:	ldp	x29, x30, [sp], #96
  414b10:	ret

0000000000414b14 <property_get_idle_hint>:
  414b14:	stp	x29, x30, [sp, #-96]!
  414b18:	mov	x29, sp
  414b1c:	str	x0, [sp, #72]
  414b20:	str	x1, [sp, #64]
  414b24:	str	x2, [sp, #56]
  414b28:	str	x3, [sp, #48]
  414b2c:	str	x4, [sp, #40]
  414b30:	str	x5, [sp, #32]
  414b34:	str	x6, [sp, #24]
  414b38:	ldr	x0, [sp, #32]
  414b3c:	str	x0, [sp, #88]
  414b40:	ldr	x0, [sp, #72]
  414b44:	cmp	x0, #0x0
  414b48:	cset	w0, eq  // eq = none
  414b4c:	and	w0, w0, #0xff
  414b50:	and	x0, x0, #0xff
  414b54:	cmp	x0, #0x0
  414b58:	b.eq	414b84 <property_get_idle_hint+0x70>  // b.none
  414b5c:	adrp	x0, 43e000 <__func__.12250+0x440>
  414b60:	add	x1, x0, #0xb5b
  414b64:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414b68:	add	x4, x0, #0x7b0
  414b6c:	mov	w3, #0xf9                  	// #249
  414b70:	mov	x2, x1
  414b74:	adrp	x0, 43e000 <__func__.12250+0x440>
  414b78:	add	x1, x0, #0xd10
  414b7c:	mov	w0, #0x0                   	// #0
  414b80:	bl	407650 <log_assert_failed_realm@plt>
  414b84:	ldr	x0, [sp, #40]
  414b88:	cmp	x0, #0x0
  414b8c:	cset	w0, eq  // eq = none
  414b90:	and	w0, w0, #0xff
  414b94:	and	x0, x0, #0xff
  414b98:	cmp	x0, #0x0
  414b9c:	b.eq	414bc8 <property_get_idle_hint+0xb4>  // b.none
  414ba0:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ba4:	add	x1, x0, #0xb5b
  414ba8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414bac:	add	x4, x0, #0x7b0
  414bb0:	mov	w3, #0xfa                  	// #250
  414bb4:	mov	x2, x1
  414bb8:	adrp	x0, 43e000 <__func__.12250+0x440>
  414bbc:	add	x1, x0, #0xd18
  414bc0:	mov	w0, #0x0                   	// #0
  414bc4:	bl	407650 <log_assert_failed_realm@plt>
  414bc8:	ldr	x0, [sp, #88]
  414bcc:	cmp	x0, #0x0
  414bd0:	cset	w0, eq  // eq = none
  414bd4:	and	w0, w0, #0xff
  414bd8:	and	x0, x0, #0xff
  414bdc:	cmp	x0, #0x0
  414be0:	b.eq	414c0c <property_get_idle_hint+0xf8>  // b.none
  414be4:	adrp	x0, 43e000 <__func__.12250+0x440>
  414be8:	add	x1, x0, #0xb5b
  414bec:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414bf0:	add	x4, x0, #0x7b0
  414bf4:	mov	w3, #0xfb                  	// #251
  414bf8:	mov	x2, x1
  414bfc:	adrp	x0, 43e000 <__func__.12250+0x440>
  414c00:	add	x1, x0, #0xb78
  414c04:	mov	w0, #0x0                   	// #0
  414c08:	bl	407650 <log_assert_failed_realm@plt>
  414c0c:	mov	x1, #0x0                   	// #0
  414c10:	ldr	x0, [sp, #88]
  414c14:	bl	41223c <manager_get_idle_hint>
  414c18:	cmp	w0, #0x0
  414c1c:	cset	w0, gt
  414c20:	and	w0, w0, #0xff
  414c24:	mov	w2, w0
  414c28:	adrp	x0, 43e000 <__func__.12250+0x440>
  414c2c:	add	x1, x0, #0xd20
  414c30:	ldr	x0, [sp, #40]
  414c34:	bl	407590 <sd_bus_message_append@plt>
  414c38:	ldp	x29, x30, [sp], #96
  414c3c:	ret

0000000000414c40 <property_get_idle_since_hint>:
  414c40:	stp	x29, x30, [sp, #-112]!
  414c44:	mov	x29, sp
  414c48:	str	x0, [sp, #72]
  414c4c:	str	x1, [sp, #64]
  414c50:	str	x2, [sp, #56]
  414c54:	str	x3, [sp, #48]
  414c58:	str	x4, [sp, #40]
  414c5c:	str	x5, [sp, #32]
  414c60:	str	x6, [sp, #24]
  414c64:	adrp	x0, 460000 <wordlist.10364+0x370>
  414c68:	ldr	x0, [x0, #4024]
  414c6c:	ldr	x1, [x0]
  414c70:	str	x1, [sp, #104]
  414c74:	mov	x1, #0x0                   	// #0
  414c78:	ldr	x0, [sp, #32]
  414c7c:	str	x0, [sp, #80]
  414c80:	stp	xzr, xzr, [sp, #88]
  414c84:	ldr	x0, [sp, #72]
  414c88:	cmp	x0, #0x0
  414c8c:	cset	w0, eq  // eq = none
  414c90:	and	w0, w0, #0xff
  414c94:	and	x0, x0, #0xff
  414c98:	cmp	x0, #0x0
  414c9c:	b.eq	414cc8 <property_get_idle_since_hint+0x88>  // b.none
  414ca0:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ca4:	add	x1, x0, #0xb5b
  414ca8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414cac:	add	x4, x0, #0x7c8
  414cb0:	mov	w3, #0x10c                 	// #268
  414cb4:	mov	x2, x1
  414cb8:	adrp	x0, 43e000 <__func__.12250+0x440>
  414cbc:	add	x1, x0, #0xd10
  414cc0:	mov	w0, #0x0                   	// #0
  414cc4:	bl	407650 <log_assert_failed_realm@plt>
  414cc8:	ldr	x0, [sp, #40]
  414ccc:	cmp	x0, #0x0
  414cd0:	cset	w0, eq  // eq = none
  414cd4:	and	w0, w0, #0xff
  414cd8:	and	x0, x0, #0xff
  414cdc:	cmp	x0, #0x0
  414ce0:	b.eq	414d0c <property_get_idle_since_hint+0xcc>  // b.none
  414ce4:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ce8:	add	x1, x0, #0xb5b
  414cec:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414cf0:	add	x4, x0, #0x7c8
  414cf4:	mov	w3, #0x10d                 	// #269
  414cf8:	mov	x2, x1
  414cfc:	adrp	x0, 43e000 <__func__.12250+0x440>
  414d00:	add	x1, x0, #0xd18
  414d04:	mov	w0, #0x0                   	// #0
  414d08:	bl	407650 <log_assert_failed_realm@plt>
  414d0c:	ldr	x0, [sp, #80]
  414d10:	cmp	x0, #0x0
  414d14:	cset	w0, eq  // eq = none
  414d18:	and	w0, w0, #0xff
  414d1c:	and	x0, x0, #0xff
  414d20:	cmp	x0, #0x0
  414d24:	b.eq	414d50 <property_get_idle_since_hint+0x110>  // b.none
  414d28:	adrp	x0, 43e000 <__func__.12250+0x440>
  414d2c:	add	x1, x0, #0xb5b
  414d30:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414d34:	add	x4, x0, #0x7c8
  414d38:	mov	w3, #0x10e                 	// #270
  414d3c:	mov	x2, x1
  414d40:	adrp	x0, 43e000 <__func__.12250+0x440>
  414d44:	add	x1, x0, #0xb78
  414d48:	mov	w0, #0x0                   	// #0
  414d4c:	bl	407650 <log_assert_failed_realm@plt>
  414d50:	add	x0, sp, #0x58
  414d54:	mov	x1, x0
  414d58:	ldr	x0, [sp, #80]
  414d5c:	bl	41223c <manager_get_idle_hint>
  414d60:	adrp	x0, 43e000 <__func__.12250+0x440>
  414d64:	add	x1, x0, #0xd28
  414d68:	ldr	x0, [sp, #48]
  414d6c:	bl	407f30 <strcmp@plt>
  414d70:	cmp	w0, #0x0
  414d74:	b.ne	414d80 <property_get_idle_since_hint+0x140>  // b.any
  414d78:	ldr	x0, [sp, #88]
  414d7c:	b	414d84 <property_get_idle_since_hint+0x144>
  414d80:	ldr	x0, [sp, #96]
  414d84:	mov	x2, x0
  414d88:	adrp	x0, 43e000 <__func__.12250+0x440>
  414d8c:	add	x1, x0, #0xd38
  414d90:	ldr	x0, [sp, #40]
  414d94:	bl	407590 <sd_bus_message_append@plt>
  414d98:	mov	w1, w0
  414d9c:	adrp	x0, 460000 <wordlist.10364+0x370>
  414da0:	ldr	x0, [x0, #4024]
  414da4:	ldr	x2, [sp, #104]
  414da8:	ldr	x0, [x0]
  414dac:	eor	x0, x2, x0
  414db0:	cmp	x0, #0x0
  414db4:	b.eq	414dbc <property_get_idle_since_hint+0x17c>  // b.none
  414db8:	bl	407b20 <__stack_chk_fail@plt>
  414dbc:	mov	w0, w1
  414dc0:	ldp	x29, x30, [sp], #112
  414dc4:	ret

0000000000414dc8 <property_get_inhibited>:
  414dc8:	stp	x29, x30, [sp, #-96]!
  414dcc:	mov	x29, sp
  414dd0:	str	x0, [sp, #72]
  414dd4:	str	x1, [sp, #64]
  414dd8:	str	x2, [sp, #56]
  414ddc:	str	x3, [sp, #48]
  414de0:	str	x4, [sp, #40]
  414de4:	str	x5, [sp, #32]
  414de8:	str	x6, [sp, #24]
  414dec:	ldr	x0, [sp, #32]
  414df0:	str	x0, [sp, #88]
  414df4:	ldr	x0, [sp, #72]
  414df8:	cmp	x0, #0x0
  414dfc:	cset	w0, eq  // eq = none
  414e00:	and	w0, w0, #0xff
  414e04:	and	x0, x0, #0xff
  414e08:	cmp	x0, #0x0
  414e0c:	b.eq	414e38 <property_get_inhibited+0x70>  // b.none
  414e10:	adrp	x0, 43e000 <__func__.12250+0x440>
  414e14:	add	x1, x0, #0xb5b
  414e18:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414e1c:	add	x4, x0, #0x7e8
  414e20:	mov	w3, #0x121                 	// #289
  414e24:	mov	x2, x1
  414e28:	adrp	x0, 43e000 <__func__.12250+0x440>
  414e2c:	add	x1, x0, #0xd10
  414e30:	mov	w0, #0x0                   	// #0
  414e34:	bl	407650 <log_assert_failed_realm@plt>
  414e38:	ldr	x0, [sp, #40]
  414e3c:	cmp	x0, #0x0
  414e40:	cset	w0, eq  // eq = none
  414e44:	and	w0, w0, #0xff
  414e48:	and	x0, x0, #0xff
  414e4c:	cmp	x0, #0x0
  414e50:	b.eq	414e7c <property_get_inhibited+0xb4>  // b.none
  414e54:	adrp	x0, 43e000 <__func__.12250+0x440>
  414e58:	add	x1, x0, #0xb5b
  414e5c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414e60:	add	x4, x0, #0x7e8
  414e64:	mov	w3, #0x122                 	// #290
  414e68:	mov	x2, x1
  414e6c:	adrp	x0, 43e000 <__func__.12250+0x440>
  414e70:	add	x1, x0, #0xd18
  414e74:	mov	w0, #0x0                   	// #0
  414e78:	bl	407650 <log_assert_failed_realm@plt>
  414e7c:	ldr	x0, [sp, #88]
  414e80:	cmp	x0, #0x0
  414e84:	cset	w0, eq  // eq = none
  414e88:	and	w0, w0, #0xff
  414e8c:	and	x0, x0, #0xff
  414e90:	cmp	x0, #0x0
  414e94:	b.eq	414ec0 <property_get_inhibited+0xf8>  // b.none
  414e98:	adrp	x0, 43e000 <__func__.12250+0x440>
  414e9c:	add	x1, x0, #0xb5b
  414ea0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414ea4:	add	x4, x0, #0x7e8
  414ea8:	mov	w3, #0x123                 	// #291
  414eac:	mov	x2, x1
  414eb0:	adrp	x0, 43e000 <__func__.12250+0x440>
  414eb4:	add	x1, x0, #0xb78
  414eb8:	mov	w0, #0x0                   	// #0
  414ebc:	bl	407650 <log_assert_failed_realm@plt>
  414ec0:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ec4:	add	x1, x0, #0xd40
  414ec8:	ldr	x0, [sp, #48]
  414ecc:	bl	407f30 <strcmp@plt>
  414ed0:	cmp	w0, #0x0
  414ed4:	cset	w0, ne  // ne = any
  414ed8:	and	w0, w0, #0xff
  414edc:	mov	w1, w0
  414ee0:	ldr	x0, [sp, #88]
  414ee4:	bl	424584 <manager_inhibit_what>
  414ee8:	str	w0, [sp, #84]
  414eec:	ldr	w0, [sp, #84]
  414ef0:	bl	42498c <inhibit_what_to_string>
  414ef4:	mov	x2, x0
  414ef8:	adrp	x0, 43e000 <__func__.12250+0x440>
  414efc:	add	x1, x0, #0xd08
  414f00:	ldr	x0, [sp, #40]
  414f04:	bl	407590 <sd_bus_message_append@plt>
  414f08:	ldp	x29, x30, [sp], #96
  414f0c:	ret

0000000000414f10 <property_get_preparing>:
  414f10:	stp	x29, x30, [sp, #-96]!
  414f14:	mov	x29, sp
  414f18:	str	x0, [sp, #72]
  414f1c:	str	x1, [sp, #64]
  414f20:	str	x2, [sp, #56]
  414f24:	str	x3, [sp, #48]
  414f28:	str	x4, [sp, #40]
  414f2c:	str	x5, [sp, #32]
  414f30:	str	x6, [sp, #24]
  414f34:	ldr	x0, [sp, #32]
  414f38:	str	x0, [sp, #88]
  414f3c:	ldr	x0, [sp, #72]
  414f40:	cmp	x0, #0x0
  414f44:	cset	w0, eq  // eq = none
  414f48:	and	w0, w0, #0xff
  414f4c:	and	x0, x0, #0xff
  414f50:	cmp	x0, #0x0
  414f54:	b.eq	414f80 <property_get_preparing+0x70>  // b.none
  414f58:	adrp	x0, 43e000 <__func__.12250+0x440>
  414f5c:	add	x1, x0, #0xb5b
  414f60:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414f64:	add	x4, x0, #0x800
  414f68:	mov	w3, #0x136                 	// #310
  414f6c:	mov	x2, x1
  414f70:	adrp	x0, 43e000 <__func__.12250+0x440>
  414f74:	add	x1, x0, #0xd10
  414f78:	mov	w0, #0x0                   	// #0
  414f7c:	bl	407650 <log_assert_failed_realm@plt>
  414f80:	ldr	x0, [sp, #40]
  414f84:	cmp	x0, #0x0
  414f88:	cset	w0, eq  // eq = none
  414f8c:	and	w0, w0, #0xff
  414f90:	and	x0, x0, #0xff
  414f94:	cmp	x0, #0x0
  414f98:	b.eq	414fc4 <property_get_preparing+0xb4>  // b.none
  414f9c:	adrp	x0, 43e000 <__func__.12250+0x440>
  414fa0:	add	x1, x0, #0xb5b
  414fa4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414fa8:	add	x4, x0, #0x800
  414fac:	mov	w3, #0x137                 	// #311
  414fb0:	mov	x2, x1
  414fb4:	adrp	x0, 43e000 <__func__.12250+0x440>
  414fb8:	add	x1, x0, #0xd18
  414fbc:	mov	w0, #0x0                   	// #0
  414fc0:	bl	407650 <log_assert_failed_realm@plt>
  414fc4:	ldr	x0, [sp, #88]
  414fc8:	cmp	x0, #0x0
  414fcc:	cset	w0, eq  // eq = none
  414fd0:	and	w0, w0, #0xff
  414fd4:	and	x0, x0, #0xff
  414fd8:	cmp	x0, #0x0
  414fdc:	b.eq	415008 <property_get_preparing+0xf8>  // b.none
  414fe0:	adrp	x0, 43e000 <__func__.12250+0x440>
  414fe4:	add	x1, x0, #0xb5b
  414fe8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  414fec:	add	x4, x0, #0x800
  414ff0:	mov	w3, #0x138                 	// #312
  414ff4:	mov	x2, x1
  414ff8:	adrp	x0, 43e000 <__func__.12250+0x440>
  414ffc:	add	x1, x0, #0xb78
  415000:	mov	w0, #0x0                   	// #0
  415004:	bl	407650 <log_assert_failed_realm@plt>
  415008:	adrp	x0, 43e000 <__func__.12250+0x440>
  41500c:	add	x1, x0, #0xd50
  415010:	ldr	x0, [sp, #48]
  415014:	bl	407f30 <strcmp@plt>
  415018:	cmp	w0, #0x0
  41501c:	b.ne	41503c <property_get_preparing+0x12c>  // b.any
  415020:	ldr	x0, [sp, #88]
  415024:	ldr	w0, [x0, #248]
  415028:	and	w0, w0, #0x1
  41502c:	cmp	w0, #0x0
  415030:	cset	w0, ne  // ne = any
  415034:	strb	w0, [sp, #87]
  415038:	b	415054 <property_get_preparing+0x144>
  41503c:	ldr	x0, [sp, #88]
  415040:	ldr	w0, [x0, #248]
  415044:	and	w0, w0, #0x2
  415048:	cmp	w0, #0x0
  41504c:	cset	w0, ne  // ne = any
  415050:	strb	w0, [sp, #87]
  415054:	ldrb	w0, [sp, #87]
  415058:	mov	w2, w0
  41505c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415060:	add	x1, x0, #0xd20
  415064:	ldr	x0, [sp, #40]
  415068:	bl	407590 <sd_bus_message_append@plt>
  41506c:	ldp	x29, x30, [sp], #96
  415070:	ret

0000000000415074 <property_get_scheduled_shutdown>:
  415074:	stp	x29, x30, [sp, #-96]!
  415078:	mov	x29, sp
  41507c:	str	x0, [sp, #72]
  415080:	str	x1, [sp, #64]
  415084:	str	x2, [sp, #56]
  415088:	str	x3, [sp, #48]
  41508c:	str	x4, [sp, #40]
  415090:	str	x5, [sp, #32]
  415094:	str	x6, [sp, #24]
  415098:	ldr	x0, [sp, #32]
  41509c:	str	x0, [sp, #88]
  4150a0:	ldr	x0, [sp, #72]
  4150a4:	cmp	x0, #0x0
  4150a8:	cset	w0, eq  // eq = none
  4150ac:	and	w0, w0, #0xff
  4150b0:	and	x0, x0, #0xff
  4150b4:	cmp	x0, #0x0
  4150b8:	b.eq	4150e4 <property_get_scheduled_shutdown+0x70>  // b.none
  4150bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4150c0:	add	x1, x0, #0xb5b
  4150c4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4150c8:	add	x4, x0, #0x818
  4150cc:	mov	w3, #0x14e                 	// #334
  4150d0:	mov	x2, x1
  4150d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4150d8:	add	x1, x0, #0xd10
  4150dc:	mov	w0, #0x0                   	// #0
  4150e0:	bl	407650 <log_assert_failed_realm@plt>
  4150e4:	ldr	x0, [sp, #40]
  4150e8:	cmp	x0, #0x0
  4150ec:	cset	w0, eq  // eq = none
  4150f0:	and	w0, w0, #0xff
  4150f4:	and	x0, x0, #0xff
  4150f8:	cmp	x0, #0x0
  4150fc:	b.eq	415128 <property_get_scheduled_shutdown+0xb4>  // b.none
  415100:	adrp	x0, 43e000 <__func__.12250+0x440>
  415104:	add	x1, x0, #0xb5b
  415108:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41510c:	add	x4, x0, #0x818
  415110:	mov	w3, #0x14f                 	// #335
  415114:	mov	x2, x1
  415118:	adrp	x0, 43e000 <__func__.12250+0x440>
  41511c:	add	x1, x0, #0xd18
  415120:	mov	w0, #0x0                   	// #0
  415124:	bl	407650 <log_assert_failed_realm@plt>
  415128:	ldr	x0, [sp, #88]
  41512c:	cmp	x0, #0x0
  415130:	cset	w0, eq  // eq = none
  415134:	and	w0, w0, #0xff
  415138:	and	x0, x0, #0xff
  41513c:	cmp	x0, #0x0
  415140:	b.eq	41516c <property_get_scheduled_shutdown+0xf8>  // b.none
  415144:	adrp	x0, 43e000 <__func__.12250+0x440>
  415148:	add	x1, x0, #0xb5b
  41514c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415150:	add	x4, x0, #0x818
  415154:	mov	w3, #0x150                 	// #336
  415158:	mov	x2, x1
  41515c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415160:	add	x1, x0, #0xb78
  415164:	mov	w0, #0x0                   	// #0
  415168:	bl	407650 <log_assert_failed_realm@plt>
  41516c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415170:	add	x2, x0, #0xd68
  415174:	mov	w1, #0x72                  	// #114
  415178:	ldr	x0, [sp, #40]
  41517c:	bl	407490 <sd_bus_message_open_container@plt>
  415180:	str	w0, [sp, #84]
  415184:	ldr	w0, [sp, #84]
  415188:	cmp	w0, #0x0
  41518c:	b.ge	415198 <property_get_scheduled_shutdown+0x124>  // b.tcont
  415190:	ldr	w0, [sp, #84]
  415194:	b	4151e0 <property_get_scheduled_shutdown+0x16c>
  415198:	ldr	x0, [sp, #88]
  41519c:	ldr	x1, [x0, #280]
  4151a0:	ldr	x0, [sp, #88]
  4151a4:	ldr	x0, [x0, #288]
  4151a8:	mov	x3, x0
  4151ac:	mov	x2, x1
  4151b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4151b4:	add	x1, x0, #0xd68
  4151b8:	ldr	x0, [sp, #40]
  4151bc:	bl	407590 <sd_bus_message_append@plt>
  4151c0:	str	w0, [sp, #84]
  4151c4:	ldr	w0, [sp, #84]
  4151c8:	cmp	w0, #0x0
  4151cc:	b.ge	4151d8 <property_get_scheduled_shutdown+0x164>  // b.tcont
  4151d0:	ldr	w0, [sp, #84]
  4151d4:	b	4151e0 <property_get_scheduled_shutdown+0x16c>
  4151d8:	ldr	x0, [sp, #40]
  4151dc:	bl	408420 <sd_bus_message_close_container@plt>
  4151e0:	ldp	x29, x30, [sp], #96
  4151e4:	ret

00000000004151e8 <property_get_handle_action>:
  4151e8:	stp	x29, x30, [sp, #-96]!
  4151ec:	mov	x29, sp
  4151f0:	str	x0, [sp, #72]
  4151f4:	str	x1, [sp, #64]
  4151f8:	str	x2, [sp, #56]
  4151fc:	str	x3, [sp, #48]
  415200:	str	x4, [sp, #40]
  415204:	str	x5, [sp, #32]
  415208:	str	x6, [sp, #24]
  41520c:	ldr	x0, [sp, #32]
  415210:	str	x0, [sp, #88]
  415214:	ldr	x0, [sp, #72]
  415218:	cmp	x0, #0x0
  41521c:	cset	w0, eq  // eq = none
  415220:	and	w0, w0, #0xff
  415224:	and	x0, x0, #0xff
  415228:	cmp	x0, #0x0
  41522c:	b.eq	415258 <property_get_handle_action+0x70>  // b.none
  415230:	adrp	x0, 43e000 <__func__.12250+0x440>
  415234:	add	x1, x0, #0xb5b
  415238:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41523c:	add	x4, x0, #0x838
  415240:	mov	w3, #0x15d                 	// #349
  415244:	mov	x2, x1
  415248:	adrp	x0, 43e000 <__func__.12250+0x440>
  41524c:	add	x1, x0, #0xd10
  415250:	mov	w0, #0x0                   	// #0
  415254:	bl	407650 <log_assert_failed_realm@plt>
  415258:	ldr	x0, [sp, #40]
  41525c:	cmp	x0, #0x0
  415260:	cset	w0, eq  // eq = none
  415264:	and	w0, w0, #0xff
  415268:	and	x0, x0, #0xff
  41526c:	cmp	x0, #0x0
  415270:	b.eq	41529c <property_get_handle_action+0xb4>  // b.none
  415274:	adrp	x0, 43e000 <__func__.12250+0x440>
  415278:	add	x1, x0, #0xb5b
  41527c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415280:	add	x4, x0, #0x838
  415284:	mov	w3, #0x15d                 	// #349
  415288:	mov	x2, x1
  41528c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415290:	add	x1, x0, #0xd18
  415294:	mov	w0, #0x0                   	// #0
  415298:	bl	407650 <log_assert_failed_realm@plt>
  41529c:	ldr	x0, [sp, #88]
  4152a0:	cmp	x0, #0x0
  4152a4:	cset	w0, eq  // eq = none
  4152a8:	and	w0, w0, #0xff
  4152ac:	and	x0, x0, #0xff
  4152b0:	cmp	x0, #0x0
  4152b4:	b.eq	4152e0 <property_get_handle_action+0xf8>  // b.none
  4152b8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4152bc:	add	x1, x0, #0xb5b
  4152c0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4152c4:	add	x4, x0, #0x838
  4152c8:	mov	w3, #0x15d                 	// #349
  4152cc:	mov	x2, x1
  4152d0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4152d4:	add	x1, x0, #0xd70
  4152d8:	mov	w0, #0x0                   	// #0
  4152dc:	bl	407650 <log_assert_failed_realm@plt>
  4152e0:	ldr	x0, [sp, #88]
  4152e4:	ldr	w0, [x0]
  4152e8:	bl	40f04c <handle_action_to_string>
  4152ec:	mov	x2, x0
  4152f0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4152f4:	add	x1, x0, #0xd08
  4152f8:	ldr	x0, [sp, #40]
  4152fc:	bl	407590 <sd_bus_message_append@plt>
  415300:	ldp	x29, x30, [sp], #96
  415304:	ret

0000000000415308 <property_get_docked>:
  415308:	stp	x29, x30, [sp, #-96]!
  41530c:	mov	x29, sp
  415310:	str	x0, [sp, #72]
  415314:	str	x1, [sp, #64]
  415318:	str	x2, [sp, #56]
  41531c:	str	x3, [sp, #48]
  415320:	str	x4, [sp, #40]
  415324:	str	x5, [sp, #32]
  415328:	str	x6, [sp, #24]
  41532c:	ldr	x0, [sp, #32]
  415330:	str	x0, [sp, #88]
  415334:	ldr	x0, [sp, #72]
  415338:	cmp	x0, #0x0
  41533c:	cset	w0, eq  // eq = none
  415340:	and	w0, w0, #0xff
  415344:	and	x0, x0, #0xff
  415348:	cmp	x0, #0x0
  41534c:	b.eq	415378 <property_get_docked+0x70>  // b.none
  415350:	adrp	x0, 43e000 <__func__.12250+0x440>
  415354:	add	x1, x0, #0xb5b
  415358:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41535c:	add	x4, x0, #0x858
  415360:	mov	w3, #0x15e                 	// #350
  415364:	mov	x2, x1
  415368:	adrp	x0, 43e000 <__func__.12250+0x440>
  41536c:	add	x1, x0, #0xd10
  415370:	mov	w0, #0x0                   	// #0
  415374:	bl	407650 <log_assert_failed_realm@plt>
  415378:	ldr	x0, [sp, #40]
  41537c:	cmp	x0, #0x0
  415380:	cset	w0, eq  // eq = none
  415384:	and	w0, w0, #0xff
  415388:	and	x0, x0, #0xff
  41538c:	cmp	x0, #0x0
  415390:	b.eq	4153bc <property_get_docked+0xb4>  // b.none
  415394:	adrp	x0, 43e000 <__func__.12250+0x440>
  415398:	add	x1, x0, #0xb5b
  41539c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4153a0:	add	x4, x0, #0x858
  4153a4:	mov	w3, #0x15e                 	// #350
  4153a8:	mov	x2, x1
  4153ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  4153b0:	add	x1, x0, #0xd18
  4153b4:	mov	w0, #0x0                   	// #0
  4153b8:	bl	407650 <log_assert_failed_realm@plt>
  4153bc:	ldr	x0, [sp, #88]
  4153c0:	cmp	x0, #0x0
  4153c4:	cset	w0, eq  // eq = none
  4153c8:	and	w0, w0, #0xff
  4153cc:	and	x0, x0, #0xff
  4153d0:	cmp	x0, #0x0
  4153d4:	b.eq	415400 <property_get_docked+0xf8>  // b.none
  4153d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4153dc:	add	x1, x0, #0xb5b
  4153e0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4153e4:	add	x4, x0, #0x858
  4153e8:	mov	w3, #0x15e                 	// #350
  4153ec:	mov	x2, x1
  4153f0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4153f4:	add	x1, x0, #0xd70
  4153f8:	mov	w0, #0x0                   	// #0
  4153fc:	bl	407650 <log_assert_failed_realm@plt>
  415400:	ldr	x0, [sp, #88]
  415404:	bl	413074 <manager_is_docked_or_external_displays>
  415408:	and	w0, w0, #0xff
  41540c:	mov	w2, w0
  415410:	adrp	x0, 43e000 <__func__.12250+0x440>
  415414:	add	x1, x0, #0xd20
  415418:	ldr	x0, [sp, #40]
  41541c:	bl	407590 <sd_bus_message_append@plt>
  415420:	ldp	x29, x30, [sp], #96
  415424:	ret

0000000000415428 <property_get_lid_closed>:
  415428:	stp	x29, x30, [sp, #-96]!
  41542c:	mov	x29, sp
  415430:	str	x0, [sp, #72]
  415434:	str	x1, [sp, #64]
  415438:	str	x2, [sp, #56]
  41543c:	str	x3, [sp, #48]
  415440:	str	x4, [sp, #40]
  415444:	str	x5, [sp, #32]
  415448:	str	x6, [sp, #24]
  41544c:	ldr	x0, [sp, #32]
  415450:	str	x0, [sp, #88]
  415454:	ldr	x0, [sp, #72]
  415458:	cmp	x0, #0x0
  41545c:	cset	w0, eq  // eq = none
  415460:	and	w0, w0, #0xff
  415464:	and	x0, x0, #0xff
  415468:	cmp	x0, #0x0
  41546c:	b.eq	415498 <property_get_lid_closed+0x70>  // b.none
  415470:	adrp	x0, 43e000 <__func__.12250+0x440>
  415474:	add	x1, x0, #0xb5b
  415478:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41547c:	add	x4, x0, #0x870
  415480:	mov	w3, #0x15f                 	// #351
  415484:	mov	x2, x1
  415488:	adrp	x0, 43e000 <__func__.12250+0x440>
  41548c:	add	x1, x0, #0xd10
  415490:	mov	w0, #0x0                   	// #0
  415494:	bl	407650 <log_assert_failed_realm@plt>
  415498:	ldr	x0, [sp, #40]
  41549c:	cmp	x0, #0x0
  4154a0:	cset	w0, eq  // eq = none
  4154a4:	and	w0, w0, #0xff
  4154a8:	and	x0, x0, #0xff
  4154ac:	cmp	x0, #0x0
  4154b0:	b.eq	4154dc <property_get_lid_closed+0xb4>  // b.none
  4154b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4154b8:	add	x1, x0, #0xb5b
  4154bc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4154c0:	add	x4, x0, #0x870
  4154c4:	mov	w3, #0x15f                 	// #351
  4154c8:	mov	x2, x1
  4154cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4154d0:	add	x1, x0, #0xd18
  4154d4:	mov	w0, #0x0                   	// #0
  4154d8:	bl	407650 <log_assert_failed_realm@plt>
  4154dc:	ldr	x0, [sp, #88]
  4154e0:	cmp	x0, #0x0
  4154e4:	cset	w0, eq  // eq = none
  4154e8:	and	w0, w0, #0xff
  4154ec:	and	x0, x0, #0xff
  4154f0:	cmp	x0, #0x0
  4154f4:	b.eq	415520 <property_get_lid_closed+0xf8>  // b.none
  4154f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4154fc:	add	x1, x0, #0xb5b
  415500:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415504:	add	x4, x0, #0x870
  415508:	mov	w3, #0x15f                 	// #351
  41550c:	mov	x2, x1
  415510:	adrp	x0, 43e000 <__func__.12250+0x440>
  415514:	add	x1, x0, #0xd70
  415518:	mov	w0, #0x0                   	// #0
  41551c:	bl	407650 <log_assert_failed_realm@plt>
  415520:	ldr	x0, [sp, #88]
  415524:	bl	412c40 <manager_is_lid_closed>
  415528:	and	w0, w0, #0xff
  41552c:	mov	w2, w0
  415530:	adrp	x0, 43e000 <__func__.12250+0x440>
  415534:	add	x1, x0, #0xd20
  415538:	ldr	x0, [sp, #40]
  41553c:	bl	407590 <sd_bus_message_append@plt>
  415540:	ldp	x29, x30, [sp], #96
  415544:	ret

0000000000415548 <property_get_on_external_power>:
  415548:	stp	x29, x30, [sp, #-80]!
  41554c:	mov	x29, sp
  415550:	str	x0, [sp, #72]
  415554:	str	x1, [sp, #64]
  415558:	str	x2, [sp, #56]
  41555c:	str	x3, [sp, #48]
  415560:	str	x4, [sp, #40]
  415564:	str	x5, [sp, #32]
  415568:	str	x6, [sp, #24]
  41556c:	ldr	x0, [sp, #72]
  415570:	cmp	x0, #0x0
  415574:	cset	w0, eq  // eq = none
  415578:	and	w0, w0, #0xff
  41557c:	and	x0, x0, #0xff
  415580:	cmp	x0, #0x0
  415584:	b.eq	4155b0 <property_get_on_external_power+0x68>  // b.none
  415588:	adrp	x0, 43e000 <__func__.12250+0x440>
  41558c:	add	x1, x0, #0xb5b
  415590:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415594:	add	x4, x0, #0x888
  415598:	mov	w3, #0x160                 	// #352
  41559c:	mov	x2, x1
  4155a0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4155a4:	add	x1, x0, #0xd10
  4155a8:	mov	w0, #0x0                   	// #0
  4155ac:	bl	407650 <log_assert_failed_realm@plt>
  4155b0:	ldr	x0, [sp, #40]
  4155b4:	cmp	x0, #0x0
  4155b8:	cset	w0, eq  // eq = none
  4155bc:	and	w0, w0, #0xff
  4155c0:	and	x0, x0, #0xff
  4155c4:	cmp	x0, #0x0
  4155c8:	b.eq	4155f4 <property_get_on_external_power+0xac>  // b.none
  4155cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4155d0:	add	x1, x0, #0xb5b
  4155d4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4155d8:	add	x4, x0, #0x888
  4155dc:	mov	w3, #0x160                 	// #352
  4155e0:	mov	x2, x1
  4155e4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4155e8:	add	x1, x0, #0xd18
  4155ec:	mov	w0, #0x0                   	// #0
  4155f0:	bl	407650 <log_assert_failed_realm@plt>
  4155f4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4155f8:	ldr	x2, [x0, #4072]
  4155fc:	adrp	x0, 43e000 <__func__.12250+0x440>
  415600:	add	x1, x0, #0xd20
  415604:	ldr	x0, [sp, #40]
  415608:	bl	407590 <sd_bus_message_append@plt>
  41560c:	ldp	x29, x30, [sp], #80
  415610:	ret

0000000000415614 <property_get_compat_user_tasks_max>:
  415614:	stp	x29, x30, [sp, #-80]!
  415618:	mov	x29, sp
  41561c:	str	x0, [sp, #72]
  415620:	str	x1, [sp, #64]
  415624:	str	x2, [sp, #56]
  415628:	str	x3, [sp, #48]
  41562c:	str	x4, [sp, #40]
  415630:	str	x5, [sp, #32]
  415634:	str	x6, [sp, #24]
  415638:	ldr	x0, [sp, #72]
  41563c:	cmp	x0, #0x0
  415640:	cset	w0, eq  // eq = none
  415644:	and	w0, w0, #0xff
  415648:	and	x0, x0, #0xff
  41564c:	cmp	x0, #0x0
  415650:	b.eq	41567c <property_get_compat_user_tasks_max+0x68>  // b.none
  415654:	adrp	x0, 43e000 <__func__.12250+0x440>
  415658:	add	x1, x0, #0xb5b
  41565c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415660:	add	x4, x0, #0x8a8
  415664:	mov	w3, #0x161                 	// #353
  415668:	mov	x2, x1
  41566c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415670:	add	x1, x0, #0xd10
  415674:	mov	w0, #0x0                   	// #0
  415678:	bl	407650 <log_assert_failed_realm@plt>
  41567c:	ldr	x0, [sp, #40]
  415680:	cmp	x0, #0x0
  415684:	cset	w0, eq  // eq = none
  415688:	and	w0, w0, #0xff
  41568c:	and	x0, x0, #0xff
  415690:	cmp	x0, #0x0
  415694:	b.eq	4156c0 <property_get_compat_user_tasks_max+0xac>  // b.none
  415698:	adrp	x0, 43e000 <__func__.12250+0x440>
  41569c:	add	x1, x0, #0xb5b
  4156a0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4156a4:	add	x4, x0, #0x8a8
  4156a8:	mov	w3, #0x161                 	// #353
  4156ac:	mov	x2, x1
  4156b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4156b4:	add	x1, x0, #0xd18
  4156b8:	mov	w0, #0x0                   	// #0
  4156bc:	bl	407650 <log_assert_failed_realm@plt>
  4156c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4156c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4156c8:	add	x1, x0, #0xd38
  4156cc:	ldr	x0, [sp, #40]
  4156d0:	bl	407590 <sd_bus_message_append@plt>
  4156d4:	ldp	x29, x30, [sp], #80
  4156d8:	ret

00000000004156dc <property_get_hashmap_size>:
  4156dc:	stp	x29, x30, [sp, #-96]!
  4156e0:	mov	x29, sp
  4156e4:	str	x0, [sp, #72]
  4156e8:	str	x1, [sp, #64]
  4156ec:	str	x2, [sp, #56]
  4156f0:	str	x3, [sp, #48]
  4156f4:	str	x4, [sp, #40]
  4156f8:	str	x5, [sp, #32]
  4156fc:	str	x6, [sp, #24]
  415700:	ldr	x0, [sp, #32]
  415704:	str	x0, [sp, #88]
  415708:	ldr	x0, [sp, #72]
  41570c:	cmp	x0, #0x0
  415710:	cset	w0, eq  // eq = none
  415714:	and	w0, w0, #0xff
  415718:	and	x0, x0, #0xff
  41571c:	cmp	x0, #0x0
  415720:	b.eq	41574c <property_get_hashmap_size+0x70>  // b.none
  415724:	adrp	x0, 43e000 <__func__.12250+0x440>
  415728:	add	x1, x0, #0xb5b
  41572c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415730:	add	x4, x0, #0x8d0
  415734:	mov	w3, #0x162                 	// #354
  415738:	mov	x2, x1
  41573c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415740:	add	x1, x0, #0xd10
  415744:	mov	w0, #0x0                   	// #0
  415748:	bl	407650 <log_assert_failed_realm@plt>
  41574c:	ldr	x0, [sp, #40]
  415750:	cmp	x0, #0x0
  415754:	cset	w0, eq  // eq = none
  415758:	and	w0, w0, #0xff
  41575c:	and	x0, x0, #0xff
  415760:	cmp	x0, #0x0
  415764:	b.eq	415790 <property_get_hashmap_size+0xb4>  // b.none
  415768:	adrp	x0, 43e000 <__func__.12250+0x440>
  41576c:	add	x1, x0, #0xb5b
  415770:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415774:	add	x4, x0, #0x8d0
  415778:	mov	w3, #0x162                 	// #354
  41577c:	mov	x2, x1
  415780:	adrp	x0, 43e000 <__func__.12250+0x440>
  415784:	add	x1, x0, #0xd18
  415788:	mov	w0, #0x0                   	// #0
  41578c:	bl	407650 <log_assert_failed_realm@plt>
  415790:	ldr	x0, [sp, #88]
  415794:	cmp	x0, #0x0
  415798:	cset	w0, eq  // eq = none
  41579c:	and	w0, w0, #0xff
  4157a0:	and	x0, x0, #0xff
  4157a4:	cmp	x0, #0x0
  4157a8:	b.eq	4157d4 <property_get_hashmap_size+0xf8>  // b.none
  4157ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  4157b0:	add	x1, x0, #0xb5b
  4157b4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4157b8:	add	x4, x0, #0x8d0
  4157bc:	mov	w3, #0x162                 	// #354
  4157c0:	mov	x2, x1
  4157c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4157c8:	add	x1, x0, #0xd70
  4157cc:	mov	w0, #0x0                   	// #0
  4157d0:	bl	407650 <log_assert_failed_realm@plt>
  4157d4:	ldr	x0, [sp, #88]
  4157d8:	ldr	x0, [x0]
  4157dc:	bl	414010 <hashmap_size>
  4157e0:	mov	w0, w0
  4157e4:	mov	x2, x0
  4157e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4157ec:	add	x1, x0, #0xd38
  4157f0:	ldr	x0, [sp, #40]
  4157f4:	bl	407590 <sd_bus_message_append@plt>
  4157f8:	ldp	x29, x30, [sp], #96
  4157fc:	ret

0000000000415800 <method_get_session>:
  415800:	stp	x29, x30, [sp, #-112]!
  415804:	mov	x29, sp
  415808:	str	x19, [sp, #16]
  41580c:	str	x0, [sp, #56]
  415810:	str	x1, [sp, #48]
  415814:	str	x2, [sp, #40]
  415818:	adrp	x0, 460000 <wordlist.10364+0x370>
  41581c:	ldr	x0, [x0, #4024]
  415820:	ldr	x1, [x0]
  415824:	str	x1, [sp, #104]
  415828:	mov	x1, #0x0                   	// #0
  41582c:	str	xzr, [sp, #72]
  415830:	ldr	x0, [sp, #48]
  415834:	str	x0, [sp, #96]
  415838:	ldr	x0, [sp, #56]
  41583c:	cmp	x0, #0x0
  415840:	cset	w0, eq  // eq = none
  415844:	and	w0, w0, #0xff
  415848:	and	x0, x0, #0xff
  41584c:	cmp	x0, #0x0
  415850:	b.eq	41587c <method_get_session+0x7c>  // b.none
  415854:	adrp	x0, 43e000 <__func__.12250+0x440>
  415858:	add	x1, x0, #0xb5b
  41585c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415860:	add	x4, x0, #0x8f0
  415864:	mov	w3, #0x16b                 	// #363
  415868:	mov	x2, x1
  41586c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415870:	add	x1, x0, #0xd78
  415874:	mov	w0, #0x0                   	// #0
  415878:	bl	407650 <log_assert_failed_realm@plt>
  41587c:	ldr	x0, [sp, #96]
  415880:	cmp	x0, #0x0
  415884:	cset	w0, eq  // eq = none
  415888:	and	w0, w0, #0xff
  41588c:	and	x0, x0, #0xff
  415890:	cmp	x0, #0x0
  415894:	b.eq	4158c0 <method_get_session+0xc0>  // b.none
  415898:	adrp	x0, 43e000 <__func__.12250+0x440>
  41589c:	add	x1, x0, #0xb5b
  4158a0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4158a4:	add	x4, x0, #0x8f0
  4158a8:	mov	w3, #0x16c                 	// #364
  4158ac:	mov	x2, x1
  4158b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4158b4:	add	x1, x0, #0xb78
  4158b8:	mov	w0, #0x0                   	// #0
  4158bc:	bl	407650 <log_assert_failed_realm@plt>
  4158c0:	add	x0, sp, #0x50
  4158c4:	mov	x2, x0
  4158c8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4158cc:	add	x1, x0, #0xd08
  4158d0:	ldr	x0, [sp, #56]
  4158d4:	bl	407660 <sd_bus_message_read@plt>
  4158d8:	str	w0, [sp, #68]
  4158dc:	ldr	w0, [sp, #68]
  4158e0:	cmp	w0, #0x0
  4158e4:	b.ge	4158f0 <method_get_session+0xf0>  // b.tcont
  4158e8:	ldr	w19, [sp, #68]
  4158ec:	b	415964 <method_get_session+0x164>
  4158f0:	ldr	x0, [sp, #80]
  4158f4:	add	x1, sp, #0x58
  4158f8:	mov	x4, x1
  4158fc:	ldr	x3, [sp, #40]
  415900:	mov	x2, x0
  415904:	ldr	x1, [sp, #56]
  415908:	ldr	x0, [sp, #96]
  41590c:	bl	414474 <manager_get_session_from_creds>
  415910:	str	w0, [sp, #68]
  415914:	ldr	w0, [sp, #68]
  415918:	cmp	w0, #0x0
  41591c:	b.ge	415928 <method_get_session+0x128>  // b.tcont
  415920:	ldr	w19, [sp, #68]
  415924:	b	415964 <method_get_session+0x164>
  415928:	ldr	x0, [sp, #88]
  41592c:	bl	42c318 <session_bus_path>
  415930:	str	x0, [sp, #72]
  415934:	ldr	x0, [sp, #72]
  415938:	cmp	x0, #0x0
  41593c:	b.ne	415948 <method_get_session+0x148>  // b.any
  415940:	mov	w19, #0xfffffff4            	// #-12
  415944:	b	415964 <method_get_session+0x164>
  415948:	ldr	x0, [sp, #72]
  41594c:	mov	x2, x0
  415950:	adrp	x0, 43e000 <__func__.12250+0x440>
  415954:	add	x1, x0, #0xd80
  415958:	ldr	x0, [sp, #56]
  41595c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  415960:	mov	w19, w0
  415964:	add	x0, sp, #0x48
  415968:	bl	413cc4 <freep>
  41596c:	mov	w1, w19
  415970:	adrp	x0, 460000 <wordlist.10364+0x370>
  415974:	ldr	x0, [x0, #4024]
  415978:	ldr	x2, [sp, #104]
  41597c:	ldr	x0, [x0]
  415980:	eor	x0, x2, x0
  415984:	cmp	x0, #0x0
  415988:	b.eq	415990 <method_get_session+0x190>  // b.none
  41598c:	bl	407b20 <__stack_chk_fail@plt>
  415990:	mov	w0, w1
  415994:	ldr	x19, [sp, #16]
  415998:	ldp	x29, x30, [sp], #112
  41599c:	ret

00000000004159a0 <method_get_session_by_pid>:
  4159a0:	stp	x29, x30, [sp, #-112]!
  4159a4:	mov	x29, sp
  4159a8:	str	x19, [sp, #16]
  4159ac:	str	x0, [sp, #56]
  4159b0:	str	x1, [sp, #48]
  4159b4:	str	x2, [sp, #40]
  4159b8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4159bc:	ldr	x0, [x0, #4024]
  4159c0:	ldr	x1, [x0]
  4159c4:	str	x1, [sp, #104]
  4159c8:	mov	x1, #0x0                   	// #0
  4159cc:	str	xzr, [sp, #80]
  4159d0:	str	xzr, [sp, #88]
  4159d4:	ldr	x0, [sp, #48]
  4159d8:	str	x0, [sp, #96]
  4159dc:	ldr	x0, [sp, #56]
  4159e0:	cmp	x0, #0x0
  4159e4:	cset	w0, eq  // eq = none
  4159e8:	and	w0, w0, #0xff
  4159ec:	and	x0, x0, #0xff
  4159f0:	cmp	x0, #0x0
  4159f4:	b.eq	415a20 <method_get_session_by_pid+0x80>  // b.none
  4159f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4159fc:	add	x1, x0, #0xb5b
  415a00:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415a04:	add	x4, x0, #0x908
  415a08:	mov	w3, #0x187                 	// #391
  415a0c:	mov	x2, x1
  415a10:	adrp	x0, 43e000 <__func__.12250+0x440>
  415a14:	add	x1, x0, #0xd78
  415a18:	mov	w0, #0x0                   	// #0
  415a1c:	bl	407650 <log_assert_failed_realm@plt>
  415a20:	ldr	x0, [sp, #96]
  415a24:	cmp	x0, #0x0
  415a28:	cset	w0, eq  // eq = none
  415a2c:	and	w0, w0, #0xff
  415a30:	and	x0, x0, #0xff
  415a34:	cmp	x0, #0x0
  415a38:	b.eq	415a64 <method_get_session_by_pid+0xc4>  // b.none
  415a3c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415a40:	add	x1, x0, #0xb5b
  415a44:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415a48:	add	x4, x0, #0x908
  415a4c:	mov	w3, #0x188                 	// #392
  415a50:	mov	x2, x1
  415a54:	adrp	x0, 43e000 <__func__.12250+0x440>
  415a58:	add	x1, x0, #0xb78
  415a5c:	mov	w0, #0x0                   	// #0
  415a60:	bl	407650 <log_assert_failed_realm@plt>
  415a64:	add	x0, sp, #0x48
  415a68:	mov	x2, x0
  415a6c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415a70:	add	x1, x0, #0xd88
  415a74:	ldr	x0, [sp, #56]
  415a78:	bl	407660 <sd_bus_message_read@plt>
  415a7c:	str	w0, [sp, #76]
  415a80:	ldr	w0, [sp, #76]
  415a84:	cmp	w0, #0x0
  415a88:	b.ge	415a94 <method_get_session_by_pid+0xf4>  // b.tcont
  415a8c:	ldr	w19, [sp, #76]
  415a90:	b	415b88 <method_get_session_by_pid+0x1e8>
  415a94:	ldr	w0, [sp, #72]
  415a98:	cmp	w0, #0x0
  415a9c:	b.ge	415aa8 <method_get_session_by_pid+0x108>  // b.tcont
  415aa0:	mov	w19, #0xffffffea            	// #-22
  415aa4:	b	415b88 <method_get_session_by_pid+0x1e8>
  415aa8:	ldr	w0, [sp, #72]
  415aac:	cmp	w0, #0x0
  415ab0:	b.ne	415ae8 <method_get_session_by_pid+0x148>  // b.any
  415ab4:	add	x0, sp, #0x58
  415ab8:	mov	x4, x0
  415abc:	ldr	x3, [sp, #40]
  415ac0:	mov	x2, #0x0                   	// #0
  415ac4:	ldr	x1, [sp, #56]
  415ac8:	ldr	x0, [sp, #96]
  415acc:	bl	414474 <manager_get_session_from_creds>
  415ad0:	str	w0, [sp, #76]
  415ad4:	ldr	w0, [sp, #76]
  415ad8:	cmp	w0, #0x0
  415adc:	b.ge	415b4c <method_get_session_by_pid+0x1ac>  // b.tcont
  415ae0:	ldr	w19, [sp, #76]
  415ae4:	b	415b88 <method_get_session_by_pid+0x1e8>
  415ae8:	ldr	w0, [sp, #72]
  415aec:	add	x1, sp, #0x58
  415af0:	mov	x2, x1
  415af4:	mov	w1, w0
  415af8:	ldr	x0, [sp, #96]
  415afc:	bl	411fa4 <manager_get_session_by_pid>
  415b00:	str	w0, [sp, #76]
  415b04:	ldr	w0, [sp, #76]
  415b08:	cmp	w0, #0x0
  415b0c:	b.ge	415b18 <method_get_session_by_pid+0x178>  // b.tcont
  415b10:	ldr	w19, [sp, #76]
  415b14:	b	415b88 <method_get_session_by_pid+0x1e8>
  415b18:	ldr	x0, [sp, #88]
  415b1c:	cmp	x0, #0x0
  415b20:	b.ne	415b4c <method_get_session_by_pid+0x1ac>  // b.any
  415b24:	ldr	w0, [sp, #72]
  415b28:	mov	w3, w0
  415b2c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415b30:	add	x2, x0, #0xd90
  415b34:	adrp	x0, 43e000 <__func__.12250+0x440>
  415b38:	add	x1, x0, #0xb30
  415b3c:	ldr	x0, [sp, #40]
  415b40:	bl	407ae0 <sd_bus_error_setf@plt>
  415b44:	mov	w19, w0
  415b48:	b	415b88 <method_get_session_by_pid+0x1e8>
  415b4c:	ldr	x0, [sp, #88]
  415b50:	bl	42c318 <session_bus_path>
  415b54:	str	x0, [sp, #80]
  415b58:	ldr	x0, [sp, #80]
  415b5c:	cmp	x0, #0x0
  415b60:	b.ne	415b6c <method_get_session_by_pid+0x1cc>  // b.any
  415b64:	mov	w19, #0xfffffff4            	// #-12
  415b68:	b	415b88 <method_get_session_by_pid+0x1e8>
  415b6c:	ldr	x0, [sp, #80]
  415b70:	mov	x2, x0
  415b74:	adrp	x0, 43e000 <__func__.12250+0x440>
  415b78:	add	x1, x0, #0xd80
  415b7c:	ldr	x0, [sp, #56]
  415b80:	bl	4070e0 <sd_bus_reply_method_return@plt>
  415b84:	mov	w19, w0
  415b88:	add	x0, sp, #0x50
  415b8c:	bl	413cc4 <freep>
  415b90:	mov	w1, w19
  415b94:	adrp	x0, 460000 <wordlist.10364+0x370>
  415b98:	ldr	x0, [x0, #4024]
  415b9c:	ldr	x2, [sp, #104]
  415ba0:	ldr	x0, [x0]
  415ba4:	eor	x0, x2, x0
  415ba8:	cmp	x0, #0x0
  415bac:	b.eq	415bb4 <method_get_session_by_pid+0x214>  // b.none
  415bb0:	bl	407b20 <__stack_chk_fail@plt>
  415bb4:	mov	w0, w1
  415bb8:	ldr	x19, [sp, #16]
  415bbc:	ldp	x29, x30, [sp], #112
  415bc0:	ret

0000000000415bc4 <method_get_user>:
  415bc4:	stp	x29, x30, [sp, #-112]!
  415bc8:	mov	x29, sp
  415bcc:	str	x19, [sp, #16]
  415bd0:	str	x0, [sp, #56]
  415bd4:	str	x1, [sp, #48]
  415bd8:	str	x2, [sp, #40]
  415bdc:	adrp	x0, 460000 <wordlist.10364+0x370>
  415be0:	ldr	x0, [x0, #4024]
  415be4:	ldr	x1, [x0]
  415be8:	str	x1, [sp, #104]
  415bec:	mov	x1, #0x0                   	// #0
  415bf0:	str	xzr, [sp, #80]
  415bf4:	ldr	x0, [sp, #48]
  415bf8:	str	x0, [sp, #96]
  415bfc:	ldr	x0, [sp, #56]
  415c00:	cmp	x0, #0x0
  415c04:	cset	w0, eq  // eq = none
  415c08:	and	w0, w0, #0xff
  415c0c:	and	x0, x0, #0xff
  415c10:	cmp	x0, #0x0
  415c14:	b.eq	415c40 <method_get_user+0x7c>  // b.none
  415c18:	adrp	x0, 43e000 <__func__.12250+0x440>
  415c1c:	add	x1, x0, #0xb5b
  415c20:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415c24:	add	x4, x0, #0x928
  415c28:	mov	w3, #0x1ae                 	// #430
  415c2c:	mov	x2, x1
  415c30:	adrp	x0, 43e000 <__func__.12250+0x440>
  415c34:	add	x1, x0, #0xd78
  415c38:	mov	w0, #0x0                   	// #0
  415c3c:	bl	407650 <log_assert_failed_realm@plt>
  415c40:	ldr	x0, [sp, #96]
  415c44:	cmp	x0, #0x0
  415c48:	cset	w0, eq  // eq = none
  415c4c:	and	w0, w0, #0xff
  415c50:	and	x0, x0, #0xff
  415c54:	cmp	x0, #0x0
  415c58:	b.eq	415c84 <method_get_user+0xc0>  // b.none
  415c5c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415c60:	add	x1, x0, #0xb5b
  415c64:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415c68:	add	x4, x0, #0x928
  415c6c:	mov	w3, #0x1af                 	// #431
  415c70:	mov	x2, x1
  415c74:	adrp	x0, 43e000 <__func__.12250+0x440>
  415c78:	add	x1, x0, #0xb78
  415c7c:	mov	w0, #0x0                   	// #0
  415c80:	bl	407650 <log_assert_failed_realm@plt>
  415c84:	add	x0, sp, #0x48
  415c88:	mov	x2, x0
  415c8c:	adrp	x0, 43e000 <__func__.12250+0x440>
  415c90:	add	x1, x0, #0xd88
  415c94:	ldr	x0, [sp, #56]
  415c98:	bl	407660 <sd_bus_message_read@plt>
  415c9c:	str	w0, [sp, #76]
  415ca0:	ldr	w0, [sp, #76]
  415ca4:	cmp	w0, #0x0
  415ca8:	b.ge	415cb4 <method_get_user+0xf0>  // b.tcont
  415cac:	ldr	w19, [sp, #76]
  415cb0:	b	415d28 <method_get_user+0x164>
  415cb4:	ldr	w0, [sp, #72]
  415cb8:	add	x1, sp, #0x58
  415cbc:	mov	x4, x1
  415cc0:	ldr	x3, [sp, #40]
  415cc4:	mov	w2, w0
  415cc8:	ldr	x1, [sp, #56]
  415ccc:	ldr	x0, [sp, #96]
  415cd0:	bl	414708 <manager_get_user_from_creds>
  415cd4:	str	w0, [sp, #76]
  415cd8:	ldr	w0, [sp, #76]
  415cdc:	cmp	w0, #0x0
  415ce0:	b.ge	415cec <method_get_user+0x128>  // b.tcont
  415ce4:	ldr	w19, [sp, #76]
  415ce8:	b	415d28 <method_get_user+0x164>
  415cec:	ldr	x0, [sp, #88]
  415cf0:	bl	435760 <user_bus_path>
  415cf4:	str	x0, [sp, #80]
  415cf8:	ldr	x0, [sp, #80]
  415cfc:	cmp	x0, #0x0
  415d00:	b.ne	415d0c <method_get_user+0x148>  // b.any
  415d04:	mov	w19, #0xfffffff4            	// #-12
  415d08:	b	415d28 <method_get_user+0x164>
  415d0c:	ldr	x0, [sp, #80]
  415d10:	mov	x2, x0
  415d14:	adrp	x0, 43e000 <__func__.12250+0x440>
  415d18:	add	x1, x0, #0xd80
  415d1c:	ldr	x0, [sp, #56]
  415d20:	bl	4070e0 <sd_bus_reply_method_return@plt>
  415d24:	mov	w19, w0
  415d28:	add	x0, sp, #0x50
  415d2c:	bl	413cc4 <freep>
  415d30:	mov	w1, w19
  415d34:	adrp	x0, 460000 <wordlist.10364+0x370>
  415d38:	ldr	x0, [x0, #4024]
  415d3c:	ldr	x2, [sp, #104]
  415d40:	ldr	x0, [x0]
  415d44:	eor	x0, x2, x0
  415d48:	cmp	x0, #0x0
  415d4c:	b.eq	415d54 <method_get_user+0x190>  // b.none
  415d50:	bl	407b20 <__stack_chk_fail@plt>
  415d54:	mov	w0, w1
  415d58:	ldr	x19, [sp, #16]
  415d5c:	ldp	x29, x30, [sp], #112
  415d60:	ret

0000000000415d64 <method_get_user_by_pid>:
  415d64:	stp	x29, x30, [sp, #-112]!
  415d68:	mov	x29, sp
  415d6c:	str	x19, [sp, #16]
  415d70:	str	x0, [sp, #56]
  415d74:	str	x1, [sp, #48]
  415d78:	str	x2, [sp, #40]
  415d7c:	adrp	x0, 460000 <wordlist.10364+0x370>
  415d80:	ldr	x0, [x0, #4024]
  415d84:	ldr	x1, [x0]
  415d88:	str	x1, [sp, #104]
  415d8c:	mov	x1, #0x0                   	// #0
  415d90:	str	xzr, [sp, #80]
  415d94:	ldr	x0, [sp, #48]
  415d98:	str	x0, [sp, #96]
  415d9c:	str	xzr, [sp, #88]
  415da0:	ldr	x0, [sp, #56]
  415da4:	cmp	x0, #0x0
  415da8:	cset	w0, eq  // eq = none
  415dac:	and	w0, w0, #0xff
  415db0:	and	x0, x0, #0xff
  415db4:	cmp	x0, #0x0
  415db8:	b.eq	415de4 <method_get_user_by_pid+0x80>  // b.none
  415dbc:	adrp	x0, 43e000 <__func__.12250+0x440>
  415dc0:	add	x1, x0, #0xb5b
  415dc4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415dc8:	add	x4, x0, #0x938
  415dcc:	mov	w3, #0x1c7                 	// #455
  415dd0:	mov	x2, x1
  415dd4:	adrp	x0, 43e000 <__func__.12250+0x440>
  415dd8:	add	x1, x0, #0xd78
  415ddc:	mov	w0, #0x0                   	// #0
  415de0:	bl	407650 <log_assert_failed_realm@plt>
  415de4:	ldr	x0, [sp, #96]
  415de8:	cmp	x0, #0x0
  415dec:	cset	w0, eq  // eq = none
  415df0:	and	w0, w0, #0xff
  415df4:	and	x0, x0, #0xff
  415df8:	cmp	x0, #0x0
  415dfc:	b.eq	415e28 <method_get_user_by_pid+0xc4>  // b.none
  415e00:	adrp	x0, 43e000 <__func__.12250+0x440>
  415e04:	add	x1, x0, #0xb5b
  415e08:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415e0c:	add	x4, x0, #0x938
  415e10:	mov	w3, #0x1c8                 	// #456
  415e14:	mov	x2, x1
  415e18:	adrp	x0, 43e000 <__func__.12250+0x440>
  415e1c:	add	x1, x0, #0xb78
  415e20:	mov	w0, #0x0                   	// #0
  415e24:	bl	407650 <log_assert_failed_realm@plt>
  415e28:	add	x0, sp, #0x48
  415e2c:	mov	x2, x0
  415e30:	adrp	x0, 43e000 <__func__.12250+0x440>
  415e34:	add	x1, x0, #0xd88
  415e38:	ldr	x0, [sp, #56]
  415e3c:	bl	407660 <sd_bus_message_read@plt>
  415e40:	str	w0, [sp, #76]
  415e44:	ldr	w0, [sp, #76]
  415e48:	cmp	w0, #0x0
  415e4c:	b.ge	415e58 <method_get_user_by_pid+0xf4>  // b.tcont
  415e50:	ldr	w19, [sp, #76]
  415e54:	b	415f4c <method_get_user_by_pid+0x1e8>
  415e58:	ldr	w0, [sp, #72]
  415e5c:	cmp	w0, #0x0
  415e60:	b.ge	415e6c <method_get_user_by_pid+0x108>  // b.tcont
  415e64:	mov	w19, #0xffffffea            	// #-22
  415e68:	b	415f4c <method_get_user_by_pid+0x1e8>
  415e6c:	ldr	w0, [sp, #72]
  415e70:	cmp	w0, #0x0
  415e74:	b.ne	415eac <method_get_user_by_pid+0x148>  // b.any
  415e78:	add	x0, sp, #0x58
  415e7c:	mov	x4, x0
  415e80:	ldr	x3, [sp, #40]
  415e84:	mov	w2, #0xffffffff            	// #-1
  415e88:	ldr	x1, [sp, #56]
  415e8c:	ldr	x0, [sp, #96]
  415e90:	bl	414708 <manager_get_user_from_creds>
  415e94:	str	w0, [sp, #76]
  415e98:	ldr	w0, [sp, #76]
  415e9c:	cmp	w0, #0x0
  415ea0:	b.ge	415f10 <method_get_user_by_pid+0x1ac>  // b.tcont
  415ea4:	ldr	w19, [sp, #76]
  415ea8:	b	415f4c <method_get_user_by_pid+0x1e8>
  415eac:	ldr	w0, [sp, #72]
  415eb0:	add	x1, sp, #0x58
  415eb4:	mov	x2, x1
  415eb8:	mov	w1, w0
  415ebc:	ldr	x0, [sp, #96]
  415ec0:	bl	412104 <manager_get_user_by_pid>
  415ec4:	str	w0, [sp, #76]
  415ec8:	ldr	w0, [sp, #76]
  415ecc:	cmp	w0, #0x0
  415ed0:	b.ge	415edc <method_get_user_by_pid+0x178>  // b.tcont
  415ed4:	ldr	w19, [sp, #76]
  415ed8:	b	415f4c <method_get_user_by_pid+0x1e8>
  415edc:	ldr	x0, [sp, #88]
  415ee0:	cmp	x0, #0x0
  415ee4:	b.ne	415f10 <method_get_user_by_pid+0x1ac>  // b.any
  415ee8:	ldr	w0, [sp, #72]
  415eec:	mov	w3, w0
  415ef0:	adrp	x0, 43e000 <__func__.12250+0x440>
  415ef4:	add	x2, x0, #0xdc0
  415ef8:	adrp	x0, 43e000 <__func__.12250+0x440>
  415efc:	add	x1, x0, #0xc08
  415f00:	ldr	x0, [sp, #40]
  415f04:	bl	407ae0 <sd_bus_error_setf@plt>
  415f08:	mov	w19, w0
  415f0c:	b	415f4c <method_get_user_by_pid+0x1e8>
  415f10:	ldr	x0, [sp, #88]
  415f14:	bl	435760 <user_bus_path>
  415f18:	str	x0, [sp, #80]
  415f1c:	ldr	x0, [sp, #80]
  415f20:	cmp	x0, #0x0
  415f24:	b.ne	415f30 <method_get_user_by_pid+0x1cc>  // b.any
  415f28:	mov	w19, #0xfffffff4            	// #-12
  415f2c:	b	415f4c <method_get_user_by_pid+0x1e8>
  415f30:	ldr	x0, [sp, #80]
  415f34:	mov	x2, x0
  415f38:	adrp	x0, 43e000 <__func__.12250+0x440>
  415f3c:	add	x1, x0, #0xd80
  415f40:	ldr	x0, [sp, #56]
  415f44:	bl	4070e0 <sd_bus_reply_method_return@plt>
  415f48:	mov	w19, w0
  415f4c:	add	x0, sp, #0x50
  415f50:	bl	413cc4 <freep>
  415f54:	mov	w1, w19
  415f58:	adrp	x0, 460000 <wordlist.10364+0x370>
  415f5c:	ldr	x0, [x0, #4024]
  415f60:	ldr	x2, [sp, #104]
  415f64:	ldr	x0, [x0]
  415f68:	eor	x0, x2, x0
  415f6c:	cmp	x0, #0x0
  415f70:	b.eq	415f78 <method_get_user_by_pid+0x214>  // b.none
  415f74:	bl	407b20 <__stack_chk_fail@plt>
  415f78:	mov	w0, w1
  415f7c:	ldr	x19, [sp, #16]
  415f80:	ldp	x29, x30, [sp], #112
  415f84:	ret

0000000000415f88 <method_get_seat>:
  415f88:	stp	x29, x30, [sp, #-112]!
  415f8c:	mov	x29, sp
  415f90:	str	x19, [sp, #16]
  415f94:	str	x0, [sp, #56]
  415f98:	str	x1, [sp, #48]
  415f9c:	str	x2, [sp, #40]
  415fa0:	adrp	x0, 460000 <wordlist.10364+0x370>
  415fa4:	ldr	x0, [x0, #4024]
  415fa8:	ldr	x1, [x0]
  415fac:	str	x1, [sp, #104]
  415fb0:	mov	x1, #0x0                   	// #0
  415fb4:	str	xzr, [sp, #72]
  415fb8:	ldr	x0, [sp, #48]
  415fbc:	str	x0, [sp, #96]
  415fc0:	ldr	x0, [sp, #56]
  415fc4:	cmp	x0, #0x0
  415fc8:	cset	w0, eq  // eq = none
  415fcc:	and	w0, w0, #0xff
  415fd0:	and	x0, x0, #0xff
  415fd4:	cmp	x0, #0x0
  415fd8:	b.eq	416004 <method_get_seat+0x7c>  // b.none
  415fdc:	adrp	x0, 43e000 <__func__.12250+0x440>
  415fe0:	add	x1, x0, #0xb5b
  415fe4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  415fe8:	add	x4, x0, #0x950
  415fec:	mov	w3, #0x1ee                 	// #494
  415ff0:	mov	x2, x1
  415ff4:	adrp	x0, 43e000 <__func__.12250+0x440>
  415ff8:	add	x1, x0, #0xd78
  415ffc:	mov	w0, #0x0                   	// #0
  416000:	bl	407650 <log_assert_failed_realm@plt>
  416004:	ldr	x0, [sp, #96]
  416008:	cmp	x0, #0x0
  41600c:	cset	w0, eq  // eq = none
  416010:	and	w0, w0, #0xff
  416014:	and	x0, x0, #0xff
  416018:	cmp	x0, #0x0
  41601c:	b.eq	416048 <method_get_seat+0xc0>  // b.none
  416020:	adrp	x0, 43e000 <__func__.12250+0x440>
  416024:	add	x1, x0, #0xb5b
  416028:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41602c:	add	x4, x0, #0x950
  416030:	mov	w3, #0x1ef                 	// #495
  416034:	mov	x2, x1
  416038:	adrp	x0, 43e000 <__func__.12250+0x440>
  41603c:	add	x1, x0, #0xb78
  416040:	mov	w0, #0x0                   	// #0
  416044:	bl	407650 <log_assert_failed_realm@plt>
  416048:	add	x0, sp, #0x50
  41604c:	mov	x2, x0
  416050:	adrp	x0, 43e000 <__func__.12250+0x440>
  416054:	add	x1, x0, #0xd08
  416058:	ldr	x0, [sp, #56]
  41605c:	bl	407660 <sd_bus_message_read@plt>
  416060:	str	w0, [sp, #68]
  416064:	ldr	w0, [sp, #68]
  416068:	cmp	w0, #0x0
  41606c:	b.ge	416078 <method_get_seat+0xf0>  // b.tcont
  416070:	ldr	w19, [sp, #68]
  416074:	b	4160ec <method_get_seat+0x164>
  416078:	ldr	x0, [sp, #80]
  41607c:	add	x1, sp, #0x58
  416080:	mov	x4, x1
  416084:	ldr	x3, [sp, #40]
  416088:	mov	x2, x0
  41608c:	ldr	x1, [sp, #56]
  416090:	ldr	x0, [sp, #96]
  416094:	bl	414844 <manager_get_seat_from_creds>
  416098:	str	w0, [sp, #68]
  41609c:	ldr	w0, [sp, #68]
  4160a0:	cmp	w0, #0x0
  4160a4:	b.ge	4160b0 <method_get_seat+0x128>  // b.tcont
  4160a8:	ldr	w19, [sp, #68]
  4160ac:	b	4160ec <method_get_seat+0x164>
  4160b0:	ldr	x0, [sp, #88]
  4160b4:	bl	4263ac <seat_bus_path>
  4160b8:	str	x0, [sp, #72]
  4160bc:	ldr	x0, [sp, #72]
  4160c0:	cmp	x0, #0x0
  4160c4:	b.ne	4160d0 <method_get_seat+0x148>  // b.any
  4160c8:	mov	w19, #0xfffffff4            	// #-12
  4160cc:	b	4160ec <method_get_seat+0x164>
  4160d0:	ldr	x0, [sp, #72]
  4160d4:	mov	x2, x0
  4160d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4160dc:	add	x1, x0, #0xd80
  4160e0:	ldr	x0, [sp, #56]
  4160e4:	bl	4070e0 <sd_bus_reply_method_return@plt>
  4160e8:	mov	w19, w0
  4160ec:	add	x0, sp, #0x48
  4160f0:	bl	413cc4 <freep>
  4160f4:	mov	w1, w19
  4160f8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4160fc:	ldr	x0, [x0, #4024]
  416100:	ldr	x2, [sp, #104]
  416104:	ldr	x0, [x0]
  416108:	eor	x0, x2, x0
  41610c:	cmp	x0, #0x0
  416110:	b.eq	416118 <method_get_seat+0x190>  // b.none
  416114:	bl	407b20 <__stack_chk_fail@plt>
  416118:	mov	w0, w1
  41611c:	ldr	x19, [sp, #16]
  416120:	ldp	x29, x30, [sp], #112
  416124:	ret

0000000000416128 <method_list_sessions>:
  416128:	stp	x29, x30, [sp, #-128]!
  41612c:	mov	x29, sp
  416130:	stp	x19, x20, [sp, #16]
  416134:	str	x0, [sp, #56]
  416138:	str	x1, [sp, #48]
  41613c:	str	x2, [sp, #40]
  416140:	adrp	x0, 460000 <wordlist.10364+0x370>
  416144:	ldr	x0, [x0, #4024]
  416148:	ldr	x1, [x0]
  41614c:	str	x1, [sp, #120]
  416150:	mov	x1, #0x0                   	// #0
  416154:	str	xzr, [sp, #72]
  416158:	ldr	x0, [sp, #48]
  41615c:	str	x0, [sp, #96]
  416160:	ldr	x0, [sp, #56]
  416164:	cmp	x0, #0x0
  416168:	cset	w0, eq  // eq = none
  41616c:	and	w0, w0, #0xff
  416170:	and	x0, x0, #0xff
  416174:	cmp	x0, #0x0
  416178:	b.eq	4161a4 <method_list_sessions+0x7c>  // b.none
  41617c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416180:	add	x1, x0, #0xb5b
  416184:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  416188:	add	x4, x0, #0x960
  41618c:	mov	w3, #0x207                 	// #519
  416190:	mov	x2, x1
  416194:	adrp	x0, 43e000 <__func__.12250+0x440>
  416198:	add	x1, x0, #0xd78
  41619c:	mov	w0, #0x0                   	// #0
  4161a0:	bl	407650 <log_assert_failed_realm@plt>
  4161a4:	ldr	x0, [sp, #96]
  4161a8:	cmp	x0, #0x0
  4161ac:	cset	w0, eq  // eq = none
  4161b0:	and	w0, w0, #0xff
  4161b4:	and	x0, x0, #0xff
  4161b8:	cmp	x0, #0x0
  4161bc:	b.eq	4161e8 <method_list_sessions+0xc0>  // b.none
  4161c0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4161c4:	add	x1, x0, #0xb5b
  4161c8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4161cc:	add	x4, x0, #0x960
  4161d0:	mov	w3, #0x208                 	// #520
  4161d4:	mov	x2, x1
  4161d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4161dc:	add	x1, x0, #0xb78
  4161e0:	mov	w0, #0x0                   	// #0
  4161e4:	bl	407650 <log_assert_failed_realm@plt>
  4161e8:	add	x0, sp, #0x48
  4161ec:	mov	x1, x0
  4161f0:	ldr	x0, [sp, #56]
  4161f4:	bl	4073e0 <sd_bus_message_new_method_return@plt>
  4161f8:	str	w0, [sp, #68]
  4161fc:	ldr	w0, [sp, #68]
  416200:	cmp	w0, #0x0
  416204:	b.ge	416210 <method_list_sessions+0xe8>  // b.tcont
  416208:	ldr	w19, [sp, #68]
  41620c:	b	416378 <method_list_sessions+0x250>
  416210:	ldr	x3, [sp, #72]
  416214:	adrp	x0, 43e000 <__func__.12250+0x440>
  416218:	add	x2, x0, #0xe00
  41621c:	mov	w1, #0x61                  	// #97
  416220:	mov	x0, x3
  416224:	bl	407490 <sd_bus_message_open_container@plt>
  416228:	str	w0, [sp, #68]
  41622c:	ldr	w0, [sp, #68]
  416230:	cmp	w0, #0x0
  416234:	b.ge	416240 <method_list_sessions+0x118>  // b.tcont
  416238:	ldr	w19, [sp, #68]
  41623c:	b	416378 <method_list_sessions+0x250>
  416240:	mov	w0, #0xfffffffe            	// #-2
  416244:	str	w0, [sp, #104]
  416248:	str	xzr, [sp, #112]
  41624c:	b	41631c <method_list_sessions+0x1f4>
  416250:	str	xzr, [sp, #88]
  416254:	ldr	x0, [sp, #80]
  416258:	bl	42c318 <session_bus_path>
  41625c:	str	x0, [sp, #88]
  416260:	ldr	x0, [sp, #88]
  416264:	cmp	x0, #0x0
  416268:	b.ne	416278 <method_list_sessions+0x150>  // b.any
  41626c:	mov	w19, #0xfffffff4            	// #-12
  416270:	mov	w20, #0x0                   	// #0
  416274:	b	41630c <method_list_sessions+0x1e4>
  416278:	ldr	x7, [sp, #72]
  41627c:	ldr	x0, [sp, #80]
  416280:	ldr	x1, [x0, #8]
  416284:	ldr	x0, [sp, #80]
  416288:	ldr	x0, [x0, #40]
  41628c:	ldr	w2, [x0, #8]
  416290:	ldr	x0, [sp, #80]
  416294:	ldr	x0, [x0, #40]
  416298:	ldr	x3, [x0, #16]
  41629c:	ldr	x0, [sp, #80]
  4162a0:	ldr	x0, [x0, #136]
  4162a4:	cmp	x0, #0x0
  4162a8:	b.eq	4162bc <method_list_sessions+0x194>  // b.none
  4162ac:	ldr	x0, [sp, #80]
  4162b0:	ldr	x0, [x0, #136]
  4162b4:	ldr	x0, [x0, #8]
  4162b8:	b	4162c4 <method_list_sessions+0x19c>
  4162bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4162c0:	add	x0, x0, #0xa88
  4162c4:	ldr	x4, [sp, #88]
  4162c8:	mov	x6, x4
  4162cc:	mov	x5, x0
  4162d0:	mov	x4, x3
  4162d4:	mov	w3, w2
  4162d8:	mov	x2, x1
  4162dc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4162e0:	add	x1, x0, #0xe00
  4162e4:	mov	x0, x7
  4162e8:	bl	407590 <sd_bus_message_append@plt>
  4162ec:	str	w0, [sp, #68]
  4162f0:	ldr	w0, [sp, #68]
  4162f4:	cmp	w0, #0x0
  4162f8:	b.ge	416308 <method_list_sessions+0x1e0>  // b.tcont
  4162fc:	ldr	w19, [sp, #68]
  416300:	mov	w20, #0x0                   	// #0
  416304:	b	41630c <method_list_sessions+0x1e4>
  416308:	mov	w20, #0x1                   	// #1
  41630c:	add	x0, sp, #0x58
  416310:	bl	413cc4 <freep>
  416314:	cmp	w20, #0x1
  416318:	b.ne	416378 <method_list_sessions+0x250>  // b.any
  41631c:	ldr	x0, [sp, #96]
  416320:	ldr	x0, [x0, #32]
  416324:	add	x2, sp, #0x50
  416328:	add	x1, sp, #0x68
  41632c:	mov	x3, #0x0                   	// #0
  416330:	bl	41402c <hashmap_iterate>
  416334:	and	w0, w0, #0xff
  416338:	cmp	w0, #0x0
  41633c:	b.ne	416250 <method_list_sessions+0x128>  // b.any
  416340:	ldr	x0, [sp, #72]
  416344:	bl	408420 <sd_bus_message_close_container@plt>
  416348:	str	w0, [sp, #68]
  41634c:	ldr	w0, [sp, #68]
  416350:	cmp	w0, #0x0
  416354:	b.ge	416360 <method_list_sessions+0x238>  // b.tcont
  416358:	ldr	w19, [sp, #68]
  41635c:	b	416378 <method_list_sessions+0x250>
  416360:	ldr	x0, [sp, #72]
  416364:	mov	x2, #0x0                   	// #0
  416368:	mov	x1, x0
  41636c:	mov	x0, #0x0                   	// #0
  416370:	bl	407b30 <sd_bus_send@plt>
  416374:	mov	w19, w0
  416378:	add	x0, sp, #0x48
  41637c:	bl	413f5c <sd_bus_message_unrefp>
  416380:	mov	w1, w19
  416384:	adrp	x0, 460000 <wordlist.10364+0x370>
  416388:	ldr	x0, [x0, #4024]
  41638c:	ldr	x2, [sp, #120]
  416390:	ldr	x0, [x0]
  416394:	eor	x0, x2, x0
  416398:	cmp	x0, #0x0
  41639c:	b.eq	4163a4 <method_list_sessions+0x27c>  // b.none
  4163a0:	bl	407b20 <__stack_chk_fail@plt>
  4163a4:	mov	w0, w1
  4163a8:	ldp	x19, x20, [sp, #16]
  4163ac:	ldp	x29, x30, [sp], #128
  4163b0:	ret

00000000004163b4 <method_list_users>:
  4163b4:	stp	x29, x30, [sp, #-128]!
  4163b8:	mov	x29, sp
  4163bc:	stp	x19, x20, [sp, #16]
  4163c0:	str	x0, [sp, #56]
  4163c4:	str	x1, [sp, #48]
  4163c8:	str	x2, [sp, #40]
  4163cc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4163d0:	ldr	x0, [x0, #4024]
  4163d4:	ldr	x1, [x0]
  4163d8:	str	x1, [sp, #120]
  4163dc:	mov	x1, #0x0                   	// #0
  4163e0:	str	xzr, [sp, #72]
  4163e4:	ldr	x0, [sp, #48]
  4163e8:	str	x0, [sp, #96]
  4163ec:	ldr	x0, [sp, #56]
  4163f0:	cmp	x0, #0x0
  4163f4:	cset	w0, eq  // eq = none
  4163f8:	and	w0, w0, #0xff
  4163fc:	and	x0, x0, #0xff
  416400:	cmp	x0, #0x0
  416404:	b.eq	416430 <method_list_users+0x7c>  // b.none
  416408:	adrp	x0, 43e000 <__func__.12250+0x440>
  41640c:	add	x1, x0, #0xb5b
  416410:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  416414:	add	x4, x0, #0x978
  416418:	mov	w3, #0x231                 	// #561
  41641c:	mov	x2, x1
  416420:	adrp	x0, 43e000 <__func__.12250+0x440>
  416424:	add	x1, x0, #0xd78
  416428:	mov	w0, #0x0                   	// #0
  41642c:	bl	407650 <log_assert_failed_realm@plt>
  416430:	ldr	x0, [sp, #96]
  416434:	cmp	x0, #0x0
  416438:	cset	w0, eq  // eq = none
  41643c:	and	w0, w0, #0xff
  416440:	and	x0, x0, #0xff
  416444:	cmp	x0, #0x0
  416448:	b.eq	416474 <method_list_users+0xc0>  // b.none
  41644c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416450:	add	x1, x0, #0xb5b
  416454:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  416458:	add	x4, x0, #0x978
  41645c:	mov	w3, #0x232                 	// #562
  416460:	mov	x2, x1
  416464:	adrp	x0, 43e000 <__func__.12250+0x440>
  416468:	add	x1, x0, #0xb78
  41646c:	mov	w0, #0x0                   	// #0
  416470:	bl	407650 <log_assert_failed_realm@plt>
  416474:	add	x0, sp, #0x48
  416478:	mov	x1, x0
  41647c:	ldr	x0, [sp, #56]
  416480:	bl	4073e0 <sd_bus_message_new_method_return@plt>
  416484:	str	w0, [sp, #68]
  416488:	ldr	w0, [sp, #68]
  41648c:	cmp	w0, #0x0
  416490:	b.ge	41649c <method_list_users+0xe8>  // b.tcont
  416494:	ldr	w19, [sp, #68]
  416498:	b	4165c4 <method_list_users+0x210>
  41649c:	ldr	x3, [sp, #72]
  4164a0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4164a4:	add	x2, x0, #0xe08
  4164a8:	mov	w1, #0x61                  	// #97
  4164ac:	mov	x0, x3
  4164b0:	bl	407490 <sd_bus_message_open_container@plt>
  4164b4:	str	w0, [sp, #68]
  4164b8:	ldr	w0, [sp, #68]
  4164bc:	cmp	w0, #0x0
  4164c0:	b.ge	4164cc <method_list_users+0x118>  // b.tcont
  4164c4:	ldr	w19, [sp, #68]
  4164c8:	b	4165c4 <method_list_users+0x210>
  4164cc:	mov	w0, #0xfffffffe            	// #-2
  4164d0:	str	w0, [sp, #104]
  4164d4:	str	xzr, [sp, #112]
  4164d8:	b	416568 <method_list_users+0x1b4>
  4164dc:	str	xzr, [sp, #88]
  4164e0:	ldr	x0, [sp, #80]
  4164e4:	bl	435760 <user_bus_path>
  4164e8:	str	x0, [sp, #88]
  4164ec:	ldr	x0, [sp, #88]
  4164f0:	cmp	x0, #0x0
  4164f4:	b.ne	416504 <method_list_users+0x150>  // b.any
  4164f8:	mov	w19, #0xfffffff4            	// #-12
  4164fc:	mov	w20, #0x0                   	// #0
  416500:	b	416558 <method_list_users+0x1a4>
  416504:	ldr	x5, [sp, #72]
  416508:	ldr	x0, [sp, #80]
  41650c:	ldr	w1, [x0, #8]
  416510:	ldr	x0, [sp, #80]
  416514:	ldr	x0, [x0, #16]
  416518:	ldr	x2, [sp, #88]
  41651c:	mov	x4, x2
  416520:	mov	x3, x0
  416524:	mov	w2, w1
  416528:	adrp	x0, 43e000 <__func__.12250+0x440>
  41652c:	add	x1, x0, #0xe08
  416530:	mov	x0, x5
  416534:	bl	407590 <sd_bus_message_append@plt>
  416538:	str	w0, [sp, #68]
  41653c:	ldr	w0, [sp, #68]
  416540:	cmp	w0, #0x0
  416544:	b.ge	416554 <method_list_users+0x1a0>  // b.tcont
  416548:	ldr	w19, [sp, #68]
  41654c:	mov	w20, #0x0                   	// #0
  416550:	b	416558 <method_list_users+0x1a4>
  416554:	mov	w20, #0x1                   	// #1
  416558:	add	x0, sp, #0x58
  41655c:	bl	413cc4 <freep>
  416560:	cmp	w20, #0x1
  416564:	b.ne	4165c4 <method_list_users+0x210>  // b.any
  416568:	ldr	x0, [sp, #96]
  41656c:	ldr	x0, [x0, #48]
  416570:	add	x2, sp, #0x50
  416574:	add	x1, sp, #0x68
  416578:	mov	x3, #0x0                   	// #0
  41657c:	bl	41402c <hashmap_iterate>
  416580:	and	w0, w0, #0xff
  416584:	cmp	w0, #0x0
  416588:	b.ne	4164dc <method_list_users+0x128>  // b.any
  41658c:	ldr	x0, [sp, #72]
  416590:	bl	408420 <sd_bus_message_close_container@plt>
  416594:	str	w0, [sp, #68]
  416598:	ldr	w0, [sp, #68]
  41659c:	cmp	w0, #0x0
  4165a0:	b.ge	4165ac <method_list_users+0x1f8>  // b.tcont
  4165a4:	ldr	w19, [sp, #68]
  4165a8:	b	4165c4 <method_list_users+0x210>
  4165ac:	ldr	x0, [sp, #72]
  4165b0:	mov	x2, #0x0                   	// #0
  4165b4:	mov	x1, x0
  4165b8:	mov	x0, #0x0                   	// #0
  4165bc:	bl	407b30 <sd_bus_send@plt>
  4165c0:	mov	w19, w0
  4165c4:	add	x0, sp, #0x48
  4165c8:	bl	413f5c <sd_bus_message_unrefp>
  4165cc:	mov	w1, w19
  4165d0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4165d4:	ldr	x0, [x0, #4024]
  4165d8:	ldr	x2, [sp, #120]
  4165dc:	ldr	x0, [x0]
  4165e0:	eor	x0, x2, x0
  4165e4:	cmp	x0, #0x0
  4165e8:	b.eq	4165f0 <method_list_users+0x23c>  // b.none
  4165ec:	bl	407b20 <__stack_chk_fail@plt>
  4165f0:	mov	w0, w1
  4165f4:	ldp	x19, x20, [sp, #16]
  4165f8:	ldp	x29, x30, [sp], #128
  4165fc:	ret

0000000000416600 <method_list_seats>:
  416600:	stp	x29, x30, [sp, #-128]!
  416604:	mov	x29, sp
  416608:	stp	x19, x20, [sp, #16]
  41660c:	str	x0, [sp, #56]
  416610:	str	x1, [sp, #48]
  416614:	str	x2, [sp, #40]
  416618:	adrp	x0, 460000 <wordlist.10364+0x370>
  41661c:	ldr	x0, [x0, #4024]
  416620:	ldr	x1, [x0]
  416624:	str	x1, [sp, #120]
  416628:	mov	x1, #0x0                   	// #0
  41662c:	str	xzr, [sp, #72]
  416630:	ldr	x0, [sp, #48]
  416634:	str	x0, [sp, #96]
  416638:	ldr	x0, [sp, #56]
  41663c:	cmp	x0, #0x0
  416640:	cset	w0, eq  // eq = none
  416644:	and	w0, w0, #0xff
  416648:	and	x0, x0, #0xff
  41664c:	cmp	x0, #0x0
  416650:	b.eq	41667c <method_list_seats+0x7c>  // b.none
  416654:	adrp	x0, 43e000 <__func__.12250+0x440>
  416658:	add	x1, x0, #0xb5b
  41665c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  416660:	add	x4, x0, #0x990
  416664:	mov	w3, #0x259                 	// #601
  416668:	mov	x2, x1
  41666c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416670:	add	x1, x0, #0xd78
  416674:	mov	w0, #0x0                   	// #0
  416678:	bl	407650 <log_assert_failed_realm@plt>
  41667c:	ldr	x0, [sp, #96]
  416680:	cmp	x0, #0x0
  416684:	cset	w0, eq  // eq = none
  416688:	and	w0, w0, #0xff
  41668c:	and	x0, x0, #0xff
  416690:	cmp	x0, #0x0
  416694:	b.eq	4166c0 <method_list_seats+0xc0>  // b.none
  416698:	adrp	x0, 43e000 <__func__.12250+0x440>
  41669c:	add	x1, x0, #0xb5b
  4166a0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4166a4:	add	x4, x0, #0x990
  4166a8:	mov	w3, #0x25a                 	// #602
  4166ac:	mov	x2, x1
  4166b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4166b4:	add	x1, x0, #0xb78
  4166b8:	mov	w0, #0x0                   	// #0
  4166bc:	bl	407650 <log_assert_failed_realm@plt>
  4166c0:	add	x0, sp, #0x48
  4166c4:	mov	x1, x0
  4166c8:	ldr	x0, [sp, #56]
  4166cc:	bl	4073e0 <sd_bus_message_new_method_return@plt>
  4166d0:	str	w0, [sp, #68]
  4166d4:	ldr	w0, [sp, #68]
  4166d8:	cmp	w0, #0x0
  4166dc:	b.ge	4166e8 <method_list_seats+0xe8>  // b.tcont
  4166e0:	ldr	w19, [sp, #68]
  4166e4:	b	416804 <method_list_seats+0x204>
  4166e8:	ldr	x3, [sp, #72]
  4166ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4166f0:	add	x2, x0, #0xe10
  4166f4:	mov	w1, #0x61                  	// #97
  4166f8:	mov	x0, x3
  4166fc:	bl	407490 <sd_bus_message_open_container@plt>
  416700:	str	w0, [sp, #68]
  416704:	ldr	w0, [sp, #68]
  416708:	cmp	w0, #0x0
  41670c:	b.ge	416718 <method_list_seats+0x118>  // b.tcont
  416710:	ldr	w19, [sp, #68]
  416714:	b	416804 <method_list_seats+0x204>
  416718:	mov	w0, #0xfffffffe            	// #-2
  41671c:	str	w0, [sp, #104]
  416720:	str	xzr, [sp, #112]
  416724:	b	4167a8 <method_list_seats+0x1a8>
  416728:	str	xzr, [sp, #88]
  41672c:	ldr	x0, [sp, #80]
  416730:	bl	4263ac <seat_bus_path>
  416734:	str	x0, [sp, #88]
  416738:	ldr	x0, [sp, #88]
  41673c:	cmp	x0, #0x0
  416740:	b.ne	416750 <method_list_seats+0x150>  // b.any
  416744:	mov	w19, #0xfffffff4            	// #-12
  416748:	mov	w20, #0x0                   	// #0
  41674c:	b	416798 <method_list_seats+0x198>
  416750:	ldr	x4, [sp, #72]
  416754:	ldr	x0, [sp, #80]
  416758:	ldr	x0, [x0, #8]
  41675c:	ldr	x1, [sp, #88]
  416760:	mov	x3, x1
  416764:	mov	x2, x0
  416768:	adrp	x0, 43e000 <__func__.12250+0x440>
  41676c:	add	x1, x0, #0xe10
  416770:	mov	x0, x4
  416774:	bl	407590 <sd_bus_message_append@plt>
  416778:	str	w0, [sp, #68]
  41677c:	ldr	w0, [sp, #68]
  416780:	cmp	w0, #0x0
  416784:	b.ge	416794 <method_list_seats+0x194>  // b.tcont
  416788:	ldr	w19, [sp, #68]
  41678c:	mov	w20, #0x0                   	// #0
  416790:	b	416798 <method_list_seats+0x198>
  416794:	mov	w20, #0x1                   	// #1
  416798:	add	x0, sp, #0x58
  41679c:	bl	413cc4 <freep>
  4167a0:	cmp	w20, #0x1
  4167a4:	b.ne	416804 <method_list_seats+0x204>  // b.any
  4167a8:	ldr	x0, [sp, #96]
  4167ac:	ldr	x0, [x0, #24]
  4167b0:	add	x2, sp, #0x50
  4167b4:	add	x1, sp, #0x68
  4167b8:	mov	x3, #0x0                   	// #0
  4167bc:	bl	41402c <hashmap_iterate>
  4167c0:	and	w0, w0, #0xff
  4167c4:	cmp	w0, #0x0
  4167c8:	b.ne	416728 <method_list_seats+0x128>  // b.any
  4167cc:	ldr	x0, [sp, #72]
  4167d0:	bl	408420 <sd_bus_message_close_container@plt>
  4167d4:	str	w0, [sp, #68]
  4167d8:	ldr	w0, [sp, #68]
  4167dc:	cmp	w0, #0x0
  4167e0:	b.ge	4167ec <method_list_seats+0x1ec>  // b.tcont
  4167e4:	ldr	w19, [sp, #68]
  4167e8:	b	416804 <method_list_seats+0x204>
  4167ec:	ldr	x0, [sp, #72]
  4167f0:	mov	x2, #0x0                   	// #0
  4167f4:	mov	x1, x0
  4167f8:	mov	x0, #0x0                   	// #0
  4167fc:	bl	407b30 <sd_bus_send@plt>
  416800:	mov	w19, w0
  416804:	add	x0, sp, #0x48
  416808:	bl	413f5c <sd_bus_message_unrefp>
  41680c:	mov	w1, w19
  416810:	adrp	x0, 460000 <wordlist.10364+0x370>
  416814:	ldr	x0, [x0, #4024]
  416818:	ldr	x2, [sp, #120]
  41681c:	ldr	x0, [x0]
  416820:	eor	x0, x2, x0
  416824:	cmp	x0, #0x0
  416828:	b.eq	416830 <method_list_seats+0x230>  // b.none
  41682c:	bl	407b20 <__stack_chk_fail@plt>
  416830:	mov	w0, w1
  416834:	ldp	x19, x20, [sp, #16]
  416838:	ldp	x29, x30, [sp], #128
  41683c:	ret

0000000000416840 <method_list_inhibitors>:
  416840:	stp	x29, x30, [sp, #-144]!
  416844:	mov	x29, sp
  416848:	stp	x19, x20, [sp, #16]
  41684c:	stp	x21, x22, [sp, #32]
  416850:	str	x0, [sp, #72]
  416854:	str	x1, [sp, #64]
  416858:	str	x2, [sp, #56]
  41685c:	adrp	x0, 460000 <wordlist.10364+0x370>
  416860:	ldr	x0, [x0, #4024]
  416864:	ldr	x1, [x0]
  416868:	str	x1, [sp, #136]
  41686c:	mov	x1, #0x0                   	// #0
  416870:	str	xzr, [sp, #96]
  416874:	ldr	x0, [sp, #64]
  416878:	str	x0, [sp, #112]
  41687c:	ldr	x0, [sp, #72]
  416880:	cmp	x0, #0x0
  416884:	cset	w0, eq  // eq = none
  416888:	and	w0, w0, #0xff
  41688c:	and	x0, x0, #0xff
  416890:	cmp	x0, #0x0
  416894:	b.eq	4168c0 <method_list_inhibitors+0x80>  // b.none
  416898:	adrp	x0, 43e000 <__func__.12250+0x440>
  41689c:	add	x1, x0, #0xb5b
  4168a0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4168a4:	add	x4, x0, #0x9a8
  4168a8:	mov	w3, #0x27e                 	// #638
  4168ac:	mov	x2, x1
  4168b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4168b4:	add	x1, x0, #0xd78
  4168b8:	mov	w0, #0x0                   	// #0
  4168bc:	bl	407650 <log_assert_failed_realm@plt>
  4168c0:	ldr	x0, [sp, #112]
  4168c4:	cmp	x0, #0x0
  4168c8:	cset	w0, eq  // eq = none
  4168cc:	and	w0, w0, #0xff
  4168d0:	and	x0, x0, #0xff
  4168d4:	cmp	x0, #0x0
  4168d8:	b.eq	416904 <method_list_inhibitors+0xc4>  // b.none
  4168dc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4168e0:	add	x1, x0, #0xb5b
  4168e4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4168e8:	add	x4, x0, #0x9a8
  4168ec:	mov	w3, #0x27f                 	// #639
  4168f0:	mov	x2, x1
  4168f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4168f8:	add	x1, x0, #0xb78
  4168fc:	mov	w0, #0x0                   	// #0
  416900:	bl	407650 <log_assert_failed_realm@plt>
  416904:	add	x0, sp, #0x60
  416908:	mov	x1, x0
  41690c:	ldr	x0, [sp, #72]
  416910:	bl	4073e0 <sd_bus_message_new_method_return@plt>
  416914:	str	w0, [sp, #92]
  416918:	ldr	w0, [sp, #92]
  41691c:	cmp	w0, #0x0
  416920:	b.ge	41692c <method_list_inhibitors+0xec>  // b.tcont
  416924:	ldr	w19, [sp, #92]
  416928:	b	416a64 <method_list_inhibitors+0x224>
  41692c:	ldr	x3, [sp, #96]
  416930:	adrp	x0, 43e000 <__func__.12250+0x440>
  416934:	add	x2, x0, #0xe18
  416938:	mov	w1, #0x61                  	// #97
  41693c:	mov	x0, x3
  416940:	bl	407490 <sd_bus_message_open_container@plt>
  416944:	str	w0, [sp, #92]
  416948:	ldr	w0, [sp, #92]
  41694c:	cmp	w0, #0x0
  416950:	b.ge	41695c <method_list_inhibitors+0x11c>  // b.tcont
  416954:	ldr	w19, [sp, #92]
  416958:	b	416a64 <method_list_inhibitors+0x224>
  41695c:	mov	w0, #0xfffffffe            	// #-2
  416960:	str	w0, [sp, #120]
  416964:	str	xzr, [sp, #128]
  416968:	b	416a08 <method_list_inhibitors+0x1c8>
  41696c:	ldr	x19, [sp, #96]
  416970:	ldr	x0, [sp, #104]
  416974:	ldr	w0, [x0, #36]
  416978:	bl	42498c <inhibit_what_to_string>
  41697c:	bl	413dd0 <strempty>
  416980:	mov	x20, x0
  416984:	ldr	x0, [sp, #104]
  416988:	ldr	x0, [x0, #40]
  41698c:	bl	413dd0 <strempty>
  416990:	mov	x21, x0
  416994:	ldr	x0, [sp, #104]
  416998:	ldr	x0, [x0, #48]
  41699c:	bl	413dd0 <strempty>
  4169a0:	mov	x22, x0
  4169a4:	ldr	x0, [sp, #104]
  4169a8:	ldr	w0, [x0, #56]
  4169ac:	bl	424e50 <inhibit_mode_to_string>
  4169b0:	bl	413dd0 <strempty>
  4169b4:	mov	x2, x0
  4169b8:	ldr	x0, [sp, #104]
  4169bc:	ldr	w1, [x0, #64]
  4169c0:	ldr	x0, [sp, #104]
  4169c4:	ldr	w0, [x0, #60]
  4169c8:	mov	w7, w0
  4169cc:	mov	w6, w1
  4169d0:	mov	x5, x2
  4169d4:	mov	x4, x22
  4169d8:	mov	x3, x21
  4169dc:	mov	x2, x20
  4169e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4169e4:	add	x1, x0, #0xe18
  4169e8:	mov	x0, x19
  4169ec:	bl	407590 <sd_bus_message_append@plt>
  4169f0:	str	w0, [sp, #92]
  4169f4:	ldr	w0, [sp, #92]
  4169f8:	cmp	w0, #0x0
  4169fc:	b.ge	416a08 <method_list_inhibitors+0x1c8>  // b.tcont
  416a00:	ldr	w19, [sp, #92]
  416a04:	b	416a64 <method_list_inhibitors+0x224>
  416a08:	ldr	x0, [sp, #112]
  416a0c:	ldr	x0, [x0, #56]
  416a10:	add	x2, sp, #0x68
  416a14:	add	x1, sp, #0x78
  416a18:	mov	x3, #0x0                   	// #0
  416a1c:	bl	41402c <hashmap_iterate>
  416a20:	and	w0, w0, #0xff
  416a24:	cmp	w0, #0x0
  416a28:	b.ne	41696c <method_list_inhibitors+0x12c>  // b.any
  416a2c:	ldr	x0, [sp, #96]
  416a30:	bl	408420 <sd_bus_message_close_container@plt>
  416a34:	str	w0, [sp, #92]
  416a38:	ldr	w0, [sp, #92]
  416a3c:	cmp	w0, #0x0
  416a40:	b.ge	416a4c <method_list_inhibitors+0x20c>  // b.tcont
  416a44:	ldr	w19, [sp, #92]
  416a48:	b	416a64 <method_list_inhibitors+0x224>
  416a4c:	ldr	x0, [sp, #96]
  416a50:	mov	x2, #0x0                   	// #0
  416a54:	mov	x1, x0
  416a58:	mov	x0, #0x0                   	// #0
  416a5c:	bl	407b30 <sd_bus_send@plt>
  416a60:	mov	w19, w0
  416a64:	add	x0, sp, #0x60
  416a68:	bl	413f5c <sd_bus_message_unrefp>
  416a6c:	mov	w1, w19
  416a70:	adrp	x0, 460000 <wordlist.10364+0x370>
  416a74:	ldr	x0, [x0, #4024]
  416a78:	ldr	x2, [sp, #136]
  416a7c:	ldr	x0, [x0]
  416a80:	eor	x0, x2, x0
  416a84:	cmp	x0, #0x0
  416a88:	b.eq	416a90 <method_list_inhibitors+0x250>  // b.none
  416a8c:	bl	407b20 <__stack_chk_fail@plt>
  416a90:	mov	w0, w1
  416a94:	ldp	x19, x20, [sp, #16]
  416a98:	ldp	x21, x22, [sp, #32]
  416a9c:	ldp	x29, x30, [sp], #144
  416aa0:	ret

0000000000416aa4 <method_create_session>:
  416aa4:	sub	sp, sp, #0x130
  416aa8:	stp	x29, x30, [sp, #64]
  416aac:	add	x29, sp, #0x40
  416ab0:	stp	x19, x20, [sp, #80]
  416ab4:	str	x0, [sp, #120]
  416ab8:	str	x1, [sp, #112]
  416abc:	str	x2, [sp, #104]
  416ac0:	adrp	x0, 460000 <wordlist.10364+0x370>
  416ac4:	ldr	x0, [x0, #4024]
  416ac8:	ldr	x1, [x0]
  416acc:	str	x1, [sp, #296]
  416ad0:	mov	x1, #0x0                   	// #0
  416ad4:	str	xzr, [sp, #248]
  416ad8:	str	xzr, [sp, #256]
  416adc:	str	wzr, [sp, #128]
  416ae0:	ldr	x0, [sp, #112]
  416ae4:	str	x0, [sp, #288]
  416ae8:	str	xzr, [sp, #264]
  416aec:	str	xzr, [sp, #280]
  416af0:	str	wzr, [sp, #144]
  416af4:	ldr	x0, [sp, #120]
  416af8:	cmp	x0, #0x0
  416afc:	cset	w0, eq  // eq = none
  416b00:	and	w0, w0, #0xff
  416b04:	and	x0, x0, #0xff
  416b08:	cmp	x0, #0x0
  416b0c:	b.eq	416b38 <method_create_session+0x94>  // b.none
  416b10:	adrp	x0, 43e000 <__func__.12250+0x440>
  416b14:	add	x1, x0, #0xb5b
  416b18:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  416b1c:	add	x4, x0, #0x9c0
  416b20:	mov	w3, #0x2ad                 	// #685
  416b24:	mov	x2, x1
  416b28:	adrp	x0, 43e000 <__func__.12250+0x440>
  416b2c:	add	x1, x0, #0xd78
  416b30:	mov	w0, #0x0                   	// #0
  416b34:	bl	407650 <log_assert_failed_realm@plt>
  416b38:	ldr	x0, [sp, #288]
  416b3c:	cmp	x0, #0x0
  416b40:	cset	w0, eq  // eq = none
  416b44:	and	w0, w0, #0xff
  416b48:	and	x0, x0, #0xff
  416b4c:	cmp	x0, #0x0
  416b50:	b.eq	416b7c <method_create_session+0xd8>  // b.none
  416b54:	adrp	x0, 43e000 <__func__.12250+0x440>
  416b58:	add	x1, x0, #0xb5b
  416b5c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  416b60:	add	x4, x0, #0x9c0
  416b64:	mov	w3, #0x2ae                 	// #686
  416b68:	mov	x2, x1
  416b6c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416b70:	add	x1, x0, #0xb78
  416b74:	mov	w0, #0x0                   	// #0
  416b78:	bl	407650 <log_assert_failed_realm@plt>
  416b7c:	add	x6, sp, #0xf0
  416b80:	add	x5, sp, #0xc0
  416b84:	add	x4, sp, #0xb8
  416b88:	add	x3, sp, #0xb0
  416b8c:	add	x2, sp, #0x84
  416b90:	add	x1, sp, #0x88
  416b94:	add	x0, sp, #0xe8
  416b98:	str	x0, [sp, #48]
  416b9c:	add	x0, sp, #0xe0
  416ba0:	str	x0, [sp, #40]
  416ba4:	add	x0, sp, #0x8c
  416ba8:	str	x0, [sp, #32]
  416bac:	add	x0, sp, #0xd8
  416bb0:	str	x0, [sp, #24]
  416bb4:	add	x0, sp, #0xd0
  416bb8:	str	x0, [sp, #16]
  416bbc:	add	x0, sp, #0x90
  416bc0:	str	x0, [sp, #8]
  416bc4:	add	x0, sp, #0xc8
  416bc8:	str	x0, [sp]
  416bcc:	mov	x7, x6
  416bd0:	mov	x6, x5
  416bd4:	mov	x5, x4
  416bd8:	mov	x4, x3
  416bdc:	mov	x3, x2
  416be0:	mov	x2, x1
  416be4:	adrp	x0, 43e000 <__func__.12250+0x440>
  416be8:	add	x1, x0, #0xe28
  416bec:	ldr	x0, [sp, #120]
  416bf0:	bl	407660 <sd_bus_message_read@plt>
  416bf4:	str	w0, [sp, #156]
  416bf8:	ldr	w0, [sp, #156]
  416bfc:	cmp	w0, #0x0
  416c00:	b.ge	416c0c <method_create_session+0x168>  // b.tcont
  416c04:	ldr	w19, [sp, #156]
  416c08:	b	4177e0 <method_create_session+0xd3c>
  416c0c:	ldr	w0, [sp, #136]
  416c10:	bl	407850 <uid_is_valid@plt>
  416c14:	and	w0, w0, #0xff
  416c18:	eor	w0, w0, #0x1
  416c1c:	and	w0, w0, #0xff
  416c20:	cmp	w0, #0x0
  416c24:	b.eq	416c48 <method_create_session+0x1a4>  // b.none
  416c28:	adrp	x0, 43e000 <__func__.12250+0x440>
  416c2c:	add	x2, x0, #0xe38
  416c30:	adrp	x0, 43e000 <__func__.12250+0x440>
  416c34:	add	x1, x0, #0xe48
  416c38:	ldr	x0, [sp, #104]
  416c3c:	bl	407ae0 <sd_bus_error_setf@plt>
  416c40:	mov	w19, w0
  416c44:	b	4177e0 <method_create_session+0xd3c>
  416c48:	ldr	w0, [sp, #132]
  416c4c:	cmp	w0, #0x0
  416c50:	b.lt	416c74 <method_create_session+0x1d0>  // b.tstop
  416c54:	ldr	w0, [sp, #132]
  416c58:	cmp	w0, #0x1
  416c5c:	b.eq	416c74 <method_create_session+0x1d0>  // b.none
  416c60:	bl	4074b0 <getpid_cached@plt>
  416c64:	mov	w1, w0
  416c68:	ldr	w0, [sp, #132]
  416c6c:	cmp	w1, w0
  416c70:	b.ne	416c94 <method_create_session+0x1f0>  // b.any
  416c74:	adrp	x0, 43e000 <__func__.12250+0x440>
  416c78:	add	x2, x0, #0xe70
  416c7c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416c80:	add	x1, x0, #0xe48
  416c84:	ldr	x0, [sp, #104]
  416c88:	bl	407ae0 <sd_bus_error_setf@plt>
  416c8c:	mov	w19, w0
  416c90:	b	4177e0 <method_create_session+0xd3c>
  416c94:	ldr	x0, [sp, #184]
  416c98:	bl	413e18 <isempty>
  416c9c:	and	w0, w0, #0xff
  416ca0:	cmp	w0, #0x0
  416ca4:	b.eq	416cb4 <method_create_session+0x210>  // b.none
  416ca8:	mov	w0, #0xffffffff            	// #-1
  416cac:	str	w0, [sp, #148]
  416cb0:	b	416cf4 <method_create_session+0x250>
  416cb4:	ldr	x0, [sp, #184]
  416cb8:	bl	434548 <session_type_from_string>
  416cbc:	str	w0, [sp, #148]
  416cc0:	ldr	w0, [sp, #148]
  416cc4:	cmp	w0, #0x0
  416cc8:	b.ge	416cf4 <method_create_session+0x250>  // b.tcont
  416ccc:	ldr	x0, [sp, #184]
  416cd0:	mov	x3, x0
  416cd4:	adrp	x0, 43e000 <__func__.12250+0x440>
  416cd8:	add	x2, x0, #0xe88
  416cdc:	adrp	x0, 43e000 <__func__.12250+0x440>
  416ce0:	add	x1, x0, #0xe48
  416ce4:	ldr	x0, [sp, #104]
  416ce8:	bl	407ae0 <sd_bus_error_setf@plt>
  416cec:	mov	w19, w0
  416cf0:	b	4177e0 <method_create_session+0xd3c>
  416cf4:	ldr	x0, [sp, #192]
  416cf8:	bl	413e18 <isempty>
  416cfc:	and	w0, w0, #0xff
  416d00:	cmp	w0, #0x0
  416d04:	b.eq	416d14 <method_create_session+0x270>  // b.none
  416d08:	mov	w0, #0xffffffff            	// #-1
  416d0c:	str	w0, [sp, #152]
  416d10:	b	416d54 <method_create_session+0x2b0>
  416d14:	ldr	x0, [sp, #192]
  416d18:	bl	4345b0 <session_class_from_string>
  416d1c:	str	w0, [sp, #152]
  416d20:	ldr	w0, [sp, #152]
  416d24:	cmp	w0, #0x0
  416d28:	b.ge	416d54 <method_create_session+0x2b0>  // b.tcont
  416d2c:	ldr	x0, [sp, #192]
  416d30:	mov	x3, x0
  416d34:	adrp	x0, 43e000 <__func__.12250+0x440>
  416d38:	add	x2, x0, #0xea0
  416d3c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416d40:	add	x1, x0, #0xe48
  416d44:	ldr	x0, [sp, #104]
  416d48:	bl	407ae0 <sd_bus_error_setf@plt>
  416d4c:	mov	w19, w0
  416d50:	b	4177e0 <method_create_session+0xd3c>
  416d54:	ldr	x0, [sp, #240]
  416d58:	bl	413e18 <isempty>
  416d5c:	and	w0, w0, #0xff
  416d60:	cmp	w0, #0x0
  416d64:	b.eq	416d70 <method_create_session+0x2cc>  // b.none
  416d68:	str	xzr, [sp, #240]
  416d6c:	b	416db4 <method_create_session+0x310>
  416d70:	ldr	x0, [sp, #240]
  416d74:	bl	4077e0 <string_is_safe@plt>
  416d78:	and	w0, w0, #0xff
  416d7c:	eor	w0, w0, #0x1
  416d80:	and	w0, w0, #0xff
  416d84:	cmp	w0, #0x0
  416d88:	b.eq	416db4 <method_create_session+0x310>  // b.none
  416d8c:	ldr	x0, [sp, #240]
  416d90:	mov	x3, x0
  416d94:	adrp	x0, 43e000 <__func__.12250+0x440>
  416d98:	add	x2, x0, #0xec0
  416d9c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416da0:	add	x1, x0, #0xe48
  416da4:	ldr	x0, [sp, #104]
  416da8:	bl	407ae0 <sd_bus_error_setf@plt>
  416dac:	mov	w19, w0
  416db0:	b	4177e0 <method_create_session+0xd3c>
  416db4:	ldr	x0, [sp, #200]
  416db8:	bl	413e18 <isempty>
  416dbc:	and	w0, w0, #0xff
  416dc0:	cmp	w0, #0x0
  416dc4:	b.eq	416dd0 <method_create_session+0x32c>  // b.none
  416dc8:	str	xzr, [sp, #280]
  416dcc:	b	416e18 <method_create_session+0x374>
  416dd0:	ldr	x0, [sp, #288]
  416dd4:	ldr	x0, [x0, #24]
  416dd8:	ldr	x1, [sp, #200]
  416ddc:	bl	413fc4 <hashmap_get>
  416de0:	str	x0, [sp, #280]
  416de4:	ldr	x0, [sp, #280]
  416de8:	cmp	x0, #0x0
  416dec:	b.ne	416e18 <method_create_session+0x374>  // b.any
  416df0:	ldr	x0, [sp, #200]
  416df4:	mov	x3, x0
  416df8:	adrp	x0, 43e000 <__func__.12250+0x440>
  416dfc:	add	x2, x0, #0xcd0
  416e00:	adrp	x0, 43e000 <__func__.12250+0x440>
  416e04:	add	x1, x0, #0xca8
  416e08:	ldr	x0, [sp, #104]
  416e0c:	bl	407ae0 <sd_bus_error_setf@plt>
  416e10:	mov	w19, w0
  416e14:	b	4177e0 <method_create_session+0xd3c>
  416e18:	ldr	x0, [sp, #208]
  416e1c:	bl	407810 <tty_is_vc@plt>
  416e20:	and	w0, w0, #0xff
  416e24:	cmp	w0, #0x0
  416e28:	b.eq	416f18 <method_create_session+0x474>  // b.none
  416e2c:	ldr	x0, [sp, #280]
  416e30:	cmp	x0, #0x0
  416e34:	b.ne	416e48 <method_create_session+0x3a4>  // b.any
  416e38:	ldr	x0, [sp, #288]
  416e3c:	ldr	x0, [x0, #168]
  416e40:	str	x0, [sp, #280]
  416e44:	b	416e90 <method_create_session+0x3ec>
  416e48:	ldr	x0, [sp, #288]
  416e4c:	ldr	x0, [x0, #168]
  416e50:	ldr	x1, [sp, #280]
  416e54:	cmp	x1, x0
  416e58:	b.eq	416e90 <method_create_session+0x3ec>  // b.none
  416e5c:	ldr	x1, [sp, #208]
  416e60:	ldr	x0, [sp, #280]
  416e64:	ldr	x0, [x0, #8]
  416e68:	mov	x4, x0
  416e6c:	mov	x3, x1
  416e70:	adrp	x0, 43e000 <__func__.12250+0x440>
  416e74:	add	x2, x0, #0xee0
  416e78:	adrp	x0, 43e000 <__func__.12250+0x440>
  416e7c:	add	x1, x0, #0xe48
  416e80:	ldr	x0, [sp, #104]
  416e84:	bl	407ae0 <sd_bus_error_setf@plt>
  416e88:	mov	w19, w0
  416e8c:	b	4177e0 <method_create_session+0xd3c>
  416e90:	ldr	x0, [sp, #208]
  416e94:	bl	407c90 <vtnr_from_tty@plt>
  416e98:	str	w0, [sp, #160]
  416e9c:	ldr	w0, [sp, #160]
  416ea0:	cmp	w0, #0x0
  416ea4:	b.gt	416ed0 <method_create_session+0x42c>
  416ea8:	ldr	x0, [sp, #208]
  416eac:	mov	x3, x0
  416eb0:	adrp	x0, 43e000 <__func__.12250+0x440>
  416eb4:	add	x2, x0, #0xf18
  416eb8:	adrp	x0, 43e000 <__func__.12250+0x440>
  416ebc:	add	x1, x0, #0xe48
  416ec0:	ldr	x0, [sp, #104]
  416ec4:	bl	407ae0 <sd_bus_error_setf@plt>
  416ec8:	mov	w19, w0
  416ecc:	b	4177e0 <method_create_session+0xd3c>
  416ed0:	ldr	w0, [sp, #144]
  416ed4:	cmp	w0, #0x0
  416ed8:	b.ne	416ee8 <method_create_session+0x444>  // b.any
  416edc:	ldr	w0, [sp, #160]
  416ee0:	str	w0, [sp, #144]
  416ee4:	b	416fa8 <method_create_session+0x504>
  416ee8:	ldr	w1, [sp, #144]
  416eec:	ldr	w0, [sp, #160]
  416ef0:	cmp	w1, w0
  416ef4:	b.eq	416fa8 <method_create_session+0x504>  // b.none
  416ef8:	adrp	x0, 43e000 <__func__.12250+0x440>
  416efc:	add	x2, x0, #0xf50
  416f00:	adrp	x0, 43e000 <__func__.12250+0x440>
  416f04:	add	x1, x0, #0xe48
  416f08:	ldr	x0, [sp, #104]
  416f0c:	bl	407ae0 <sd_bus_error_setf@plt>
  416f10:	mov	w19, w0
  416f14:	b	4177e0 <method_create_session+0xd3c>
  416f18:	ldr	x0, [sp, #208]
  416f1c:	bl	4082a0 <tty_is_console@plt>
  416f20:	and	w0, w0, #0xff
  416f24:	cmp	w0, #0x0
  416f28:	b.eq	416fa8 <method_create_session+0x504>  // b.none
  416f2c:	ldr	x0, [sp, #280]
  416f30:	cmp	x0, #0x0
  416f34:	b.ne	416f48 <method_create_session+0x4a4>  // b.any
  416f38:	ldr	x0, [sp, #288]
  416f3c:	ldr	x0, [x0, #168]
  416f40:	str	x0, [sp, #280]
  416f44:	b	416f7c <method_create_session+0x4d8>
  416f48:	ldr	x0, [sp, #288]
  416f4c:	ldr	x0, [x0, #168]
  416f50:	ldr	x1, [sp, #280]
  416f54:	cmp	x1, x0
  416f58:	b.eq	416f7c <method_create_session+0x4d8>  // b.none
  416f5c:	adrp	x0, 43e000 <__func__.12250+0x440>
  416f60:	add	x2, x0, #0xf80
  416f64:	adrp	x0, 43e000 <__func__.12250+0x440>
  416f68:	add	x1, x0, #0xe48
  416f6c:	ldr	x0, [sp, #104]
  416f70:	bl	407ae0 <sd_bus_error_setf@plt>
  416f74:	mov	w19, w0
  416f78:	b	4177e0 <method_create_session+0xd3c>
  416f7c:	ldr	w0, [sp, #144]
  416f80:	cmp	w0, #0x0
  416f84:	b.eq	416fa8 <method_create_session+0x504>  // b.none
  416f88:	adrp	x0, 43e000 <__func__.12250+0x440>
  416f8c:	add	x2, x0, #0xfb0
  416f90:	adrp	x0, 43e000 <__func__.12250+0x440>
  416f94:	add	x1, x0, #0xe48
  416f98:	ldr	x0, [sp, #104]
  416f9c:	bl	407ae0 <sd_bus_error_setf@plt>
  416fa0:	mov	w19, w0
  416fa4:	b	4177e0 <method_create_session+0xd3c>
  416fa8:	ldr	x0, [sp, #280]
  416fac:	cmp	x0, #0x0
  416fb0:	b.eq	41702c <method_create_session+0x588>  // b.none
  416fb4:	ldr	x0, [sp, #280]
  416fb8:	bl	428fb0 <seat_has_vts>
  416fbc:	and	w0, w0, #0xff
  416fc0:	cmp	w0, #0x0
  416fc4:	b.eq	417000 <method_create_session+0x55c>  // b.none
  416fc8:	ldr	w0, [sp, #144]
  416fcc:	cmp	w0, #0x0
  416fd0:	b.eq	416fe0 <method_create_session+0x53c>  // b.none
  416fd4:	ldr	w0, [sp, #144]
  416fd8:	cmp	w0, #0x3f
  416fdc:	b.ls	41702c <method_create_session+0x588>  // b.plast
  416fe0:	adrp	x0, 43e000 <__func__.12250+0x440>
  416fe4:	add	x2, x0, #0xfe0
  416fe8:	adrp	x0, 43e000 <__func__.12250+0x440>
  416fec:	add	x1, x0, #0xe48
  416ff0:	ldr	x0, [sp, #104]
  416ff4:	bl	407ae0 <sd_bus_error_setf@plt>
  416ff8:	mov	w19, w0
  416ffc:	b	4177e0 <method_create_session+0xd3c>
  417000:	ldr	w0, [sp, #144]
  417004:	cmp	w0, #0x0
  417008:	b.eq	41702c <method_create_session+0x588>  // b.none
  41700c:	adrp	x0, 43e000 <__func__.12250+0x440>
  417010:	add	x2, x0, #0xff8
  417014:	adrp	x0, 43e000 <__func__.12250+0x440>
  417018:	add	x1, x0, #0xe48
  41701c:	ldr	x0, [sp, #104]
  417020:	bl	407ae0 <sd_bus_error_setf@plt>
  417024:	mov	w19, w0
  417028:	b	4177e0 <method_create_session+0xd3c>
  41702c:	ldr	w0, [sp, #148]
  417030:	cmn	w0, #0x1
  417034:	b.ne	41708c <method_create_session+0x5e8>  // b.any
  417038:	ldr	x0, [sp, #216]
  41703c:	bl	413e18 <isempty>
  417040:	and	w0, w0, #0xff
  417044:	eor	w0, w0, #0x1
  417048:	and	w0, w0, #0xff
  41704c:	cmp	w0, #0x0
  417050:	b.eq	417060 <method_create_session+0x5bc>  // b.none
  417054:	mov	w0, #0x2                   	// #2
  417058:	str	w0, [sp, #148]
  41705c:	b	41708c <method_create_session+0x5e8>
  417060:	ldr	x0, [sp, #208]
  417064:	bl	413e18 <isempty>
  417068:	and	w0, w0, #0xff
  41706c:	eor	w0, w0, #0x1
  417070:	and	w0, w0, #0xff
  417074:	cmp	w0, #0x0
  417078:	b.eq	417088 <method_create_session+0x5e4>  // b.none
  41707c:	mov	w0, #0x1                   	// #1
  417080:	str	w0, [sp, #148]
  417084:	b	41708c <method_create_session+0x5e8>
  417088:	str	wzr, [sp, #148]
  41708c:	ldr	w0, [sp, #152]
  417090:	cmn	w0, #0x1
  417094:	b.ne	4170b4 <method_create_session+0x610>  // b.any
  417098:	ldr	w0, [sp, #148]
  41709c:	cmp	w0, #0x0
  4170a0:	b.ne	4170b0 <method_create_session+0x60c>  // b.any
  4170a4:	mov	w0, #0x3                   	// #3
  4170a8:	str	w0, [sp, #152]
  4170ac:	b	4170b4 <method_create_session+0x610>
  4170b0:	str	wzr, [sp, #152]
  4170b4:	ldr	w0, [sp, #132]
  4170b8:	cmp	w0, #0x0
  4170bc:	b.ne	417130 <method_create_session+0x68c>  // b.any
  4170c0:	str	xzr, [sp, #272]
  4170c4:	add	x0, sp, #0x110
  4170c8:	mov	x2, x0
  4170cc:	mov	x1, #0x1                   	// #1
  4170d0:	ldr	x0, [sp, #120]
  4170d4:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  4170d8:	str	w0, [sp, #156]
  4170dc:	ldr	w0, [sp, #156]
  4170e0:	cmp	w0, #0x0
  4170e4:	b.ge	4170f4 <method_create_session+0x650>  // b.tcont
  4170e8:	ldr	w19, [sp, #156]
  4170ec:	mov	w20, #0x0                   	// #0
  4170f0:	b	417120 <method_create_session+0x67c>
  4170f4:	ldr	x0, [sp, #272]
  4170f8:	add	x1, sp, #0x84
  4170fc:	bl	406fb0 <sd_bus_creds_get_pid@plt>
  417100:	str	w0, [sp, #156]
  417104:	ldr	w0, [sp, #156]
  417108:	cmp	w0, #0x0
  41710c:	b.ge	41711c <method_create_session+0x678>  // b.tcont
  417110:	ldr	w19, [sp, #156]
  417114:	mov	w20, #0x0                   	// #0
  417118:	b	417120 <method_create_session+0x67c>
  41711c:	mov	w20, #0x1                   	// #1
  417120:	add	x0, sp, #0x110
  417124:	bl	413f90 <sd_bus_creds_unrefp>
  417128:	cmp	w20, #0x1
  41712c:	b.ne	4177e0 <method_create_session+0xd3c>  // b.any
  417130:	ldr	w0, [sp, #132]
  417134:	mov	x2, #0x0                   	// #0
  417138:	mov	w1, w0
  41713c:	ldr	x0, [sp, #288]
  417140:	bl	412104 <manager_get_user_by_pid>
  417144:	str	w0, [sp, #156]
  417148:	ldr	w0, [sp, #156]
  41714c:	cmp	w0, #0x0
  417150:	b.ge	41715c <method_create_session+0x6b8>  // b.tcont
  417154:	ldr	w19, [sp, #156]
  417158:	b	4177e0 <method_create_session+0xd3c>
  41715c:	ldr	w0, [sp, #156]
  417160:	cmp	w0, #0x0
  417164:	b.le	417188 <method_create_session+0x6e4>
  417168:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41716c:	add	x2, x0, #0x20
  417170:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417174:	add	x1, x0, #0x50
  417178:	ldr	x0, [sp, #104]
  41717c:	bl	407ae0 <sd_bus_error_setf@plt>
  417180:	mov	w19, w0
  417184:	b	4177e0 <method_create_session+0xd3c>
  417188:	ldr	w0, [sp, #152]
  41718c:	cmp	w0, #0x1
  417190:	b.eq	417230 <method_create_session+0x78c>  // b.none
  417194:	ldr	w0, [sp, #144]
  417198:	cmp	w0, #0x0
  41719c:	b.eq	417230 <method_create_session+0x78c>  // b.none
  4171a0:	ldr	w0, [sp, #144]
  4171a4:	mov	w1, w0
  4171a8:	ldr	x0, [sp, #288]
  4171ac:	ldr	x0, [x0, #168]
  4171b0:	ldr	x0, [x0, #64]
  4171b4:	cmp	x1, x0
  4171b8:	b.cs	417230 <method_create_session+0x78c>  // b.hs, b.nlast
  4171bc:	ldr	x0, [sp, #288]
  4171c0:	ldr	x0, [x0, #168]
  4171c4:	ldr	x1, [x0, #56]
  4171c8:	ldr	w0, [sp, #144]
  4171cc:	mov	w0, w0
  4171d0:	lsl	x0, x0, #3
  4171d4:	add	x0, x1, x0
  4171d8:	ldr	x0, [x0]
  4171dc:	cmp	x0, #0x0
  4171e0:	b.eq	417230 <method_create_session+0x78c>  // b.none
  4171e4:	ldr	x0, [sp, #288]
  4171e8:	ldr	x0, [x0, #168]
  4171ec:	ldr	x1, [x0, #56]
  4171f0:	ldr	w0, [sp, #144]
  4171f4:	mov	w0, w0
  4171f8:	lsl	x0, x0, #3
  4171fc:	add	x0, x1, x0
  417200:	ldr	x0, [x0]
  417204:	ldr	w0, [x0, #24]
  417208:	cmp	w0, #0x1
  41720c:	b.eq	417230 <method_create_session+0x78c>  // b.none
  417210:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417214:	add	x2, x0, #0x78
  417218:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41721c:	add	x1, x0, #0x50
  417220:	ldr	x0, [sp, #104]
  417224:	bl	407ae0 <sd_bus_error_setf@plt>
  417228:	mov	w19, w0
  41722c:	b	4177e0 <method_create_session+0xd3c>
  417230:	ldr	x0, [sp, #288]
  417234:	ldr	x0, [x0, #32]
  417238:	bl	414010 <hashmap_size>
  41723c:	mov	w1, w0
  417240:	ldr	x0, [sp, #288]
  417244:	ldr	x0, [x0, #464]
  417248:	cmp	x1, x0
  41724c:	b.cc	41727c <method_create_session+0x7d8>  // b.lo, b.ul, b.last
  417250:	ldr	x0, [sp, #288]
  417254:	ldr	x0, [x0, #464]
  417258:	mov	x3, x0
  41725c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417260:	add	x2, x0, #0x98
  417264:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417268:	add	x1, x0, #0xe0
  41726c:	ldr	x0, [sp, #104]
  417270:	bl	407ae0 <sd_bus_error_setf@plt>
  417274:	mov	w19, w0
  417278:	b	4177e0 <method_create_session+0xd3c>
  41727c:	ldr	w0, [sp, #132]
  417280:	add	x1, sp, #0x80
  417284:	bl	408070 <audit_session_from_pid@plt>
  417288:	ldr	w0, [sp, #128]
  41728c:	bl	413d64 <audit_session_is_valid>
  417290:	and	w0, w0, #0xff
  417294:	cmp	w0, #0x0
  417298:	b.eq	417374 <method_create_session+0x8d0>  // b.none
  41729c:	ldr	w0, [sp, #128]
  4172a0:	add	x3, sp, #0xf8
  4172a4:	mov	w2, w0
  4172a8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4172ac:	add	x1, x0, #0x110
  4172b0:	mov	x0, x3
  4172b4:	bl	408060 <asprintf@plt>
  4172b8:	cmp	w0, #0x0
  4172bc:	b.ge	4172c8 <method_create_session+0x824>  // b.tcont
  4172c0:	mov	w19, #0xfffffff4            	// #-12
  4172c4:	b	4177e0 <method_create_session+0xd3c>
  4172c8:	ldr	x0, [sp, #288]
  4172cc:	ldr	x0, [x0, #32]
  4172d0:	ldr	x1, [sp, #248]
  4172d4:	bl	413fe8 <hashmap_contains>
  4172d8:	and	w0, w0, #0xff
  4172dc:	cmp	w0, #0x0
  4172e0:	b.eq	417374 <method_create_session+0x8d0>  // b.none
  4172e4:	mov	w0, #0x4                   	// #4
  4172e8:	str	w0, [sp, #164]
  4172ec:	str	wzr, [sp, #168]
  4172f0:	str	wzr, [sp, #172]
  4172f4:	ldr	w0, [sp, #172]
  4172f8:	bl	4083e0 <log_get_max_level_realm@plt>
  4172fc:	mov	w1, w0
  417300:	ldr	w0, [sp, #164]
  417304:	and	w0, w0, #0x7
  417308:	cmp	w1, w0
  41730c:	b.lt	417358 <method_create_session+0x8b4>  // b.tstop
  417310:	ldr	w0, [sp, #172]
  417314:	lsl	w1, w0, #10
  417318:	ldr	w0, [sp, #164]
  41731c:	orr	w7, w1, w0
  417320:	adrp	x0, 43e000 <__func__.12250+0x440>
  417324:	add	x1, x0, #0xb5b
  417328:	ldr	x0, [sp, #248]
  41732c:	mov	x6, x0
  417330:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417334:	add	x5, x0, #0x118
  417338:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41733c:	add	x4, x0, #0x9d8
  417340:	mov	w3, #0x353                 	// #851
  417344:	mov	x2, x1
  417348:	ldr	w1, [sp, #168]
  41734c:	mov	w0, w7
  417350:	bl	407d60 <log_internal_realm@plt>
  417354:	b	417360 <method_create_session+0x8bc>
  417358:	ldr	w0, [sp, #168]
  41735c:	cmp	w0, #0x0
  417360:	mov	w0, #0xffffffff            	// #-1
  417364:	str	w0, [sp, #128]
  417368:	ldr	x0, [sp, #248]
  41736c:	bl	413ca4 <mfree>
  417370:	str	x0, [sp, #248]
  417374:	ldr	x0, [sp, #248]
  417378:	cmp	x0, #0x0
  41737c:	b.ne	4173ec <method_create_session+0x948>  // b.any
  417380:	ldr	x0, [sp, #248]
  417384:	bl	413ca4 <mfree>
  417388:	str	x0, [sp, #248]
  41738c:	ldr	x0, [sp, #288]
  417390:	ldr	x0, [x0, #200]
  417394:	add	x1, x0, #0x1
  417398:	ldr	x0, [sp, #288]
  41739c:	str	x1, [x0, #200]
  4173a0:	ldr	x0, [sp, #288]
  4173a4:	ldr	x0, [x0, #200]
  4173a8:	add	x3, sp, #0xf8
  4173ac:	mov	x2, x0
  4173b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4173b4:	add	x1, x0, #0x160
  4173b8:	mov	x0, x3
  4173bc:	bl	408060 <asprintf@plt>
  4173c0:	cmp	w0, #0x0
  4173c4:	b.ge	4173d0 <method_create_session+0x92c>  // b.tcont
  4173c8:	mov	w19, #0xfffffff4            	// #-12
  4173cc:	b	4177e0 <method_create_session+0xd3c>
  4173d0:	ldr	x0, [sp, #288]
  4173d4:	ldr	x0, [x0, #32]
  4173d8:	ldr	x1, [sp, #248]
  4173dc:	bl	413fe8 <hashmap_contains>
  4173e0:	and	w0, w0, #0xff
  4173e4:	cmp	w0, #0x0
  4173e8:	b.ne	417380 <method_create_session+0x8dc>  // b.any
  4173ec:	ldr	x0, [sp, #248]
  4173f0:	bl	41417c <SESSION_IS_SELF>
  4173f4:	and	w0, w0, #0xff
  4173f8:	and	x0, x0, #0xff
  4173fc:	cmp	x0, #0x0
  417400:	b.eq	41742c <method_create_session+0x988>  // b.none
  417404:	adrp	x0, 43e000 <__func__.12250+0x440>
  417408:	add	x1, x0, #0xb5b
  41740c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417410:	add	x4, x0, #0x9c0
  417414:	mov	w3, #0x364                 	// #868
  417418:	mov	x2, x1
  41741c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417420:	add	x1, x0, #0x168
  417424:	mov	w0, #0x0                   	// #0
  417428:	bl	407650 <log_assert_failed_realm@plt>
  41742c:	ldr	x0, [sp, #248]
  417430:	bl	4141d0 <SESSION_IS_AUTO>
  417434:	and	w0, w0, #0xff
  417438:	and	x0, x0, #0xff
  41743c:	cmp	x0, #0x0
  417440:	b.eq	41746c <method_create_session+0x9c8>  // b.none
  417444:	adrp	x0, 43e000 <__func__.12250+0x440>
  417448:	add	x1, x0, #0xb5b
  41744c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417450:	add	x4, x0, #0x9c0
  417454:	mov	w3, #0x365                 	// #869
  417458:	mov	x2, x1
  41745c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417460:	add	x1, x0, #0x180
  417464:	mov	w0, #0x0                   	// #0
  417468:	bl	407650 <log_assert_failed_realm@plt>
  41746c:	ldr	x0, [sp, #288]
  417470:	bl	413bc4 <manager_reconnect_utmp>
  417474:	ldr	w0, [sp, #136]
  417478:	add	x1, sp, #0x108
  41747c:	mov	x2, x1
  417480:	mov	w1, w0
  417484:	ldr	x0, [sp, #288]
  417488:	bl	41178c <manager_add_user_by_uid>
  41748c:	str	w0, [sp, #156]
  417490:	ldr	w0, [sp, #156]
  417494:	cmp	w0, #0x0
  417498:	b.lt	417780 <method_create_session+0xcdc>  // b.tstop
  41749c:	ldr	x0, [sp, #248]
  4174a0:	add	x1, sp, #0x100
  4174a4:	mov	x2, x1
  4174a8:	mov	x1, x0
  4174ac:	ldr	x0, [sp, #288]
  4174b0:	bl	41139c <manager_add_session>
  4174b4:	str	w0, [sp, #156]
  4174b8:	ldr	w0, [sp, #156]
  4174bc:	cmp	w0, #0x0
  4174c0:	b.lt	417788 <method_create_session+0xce4>  // b.tstop
  4174c4:	ldr	x0, [sp, #256]
  4174c8:	ldr	x1, [sp, #264]
  4174cc:	bl	42fa40 <session_set_user>
  4174d0:	ldr	x0, [sp, #256]
  4174d4:	ldr	w1, [sp, #132]
  4174d8:	bl	42fb98 <session_set_leader>
  4174dc:	str	w0, [sp, #156]
  4174e0:	ldr	w0, [sp, #156]
  4174e4:	cmp	w0, #0x0
  4174e8:	b.lt	417790 <method_create_session+0xcec>  // b.tstop
  4174ec:	ldr	x0, [sp, #256]
  4174f0:	ldr	w1, [sp, #148]
  4174f4:	str	w1, [x0, #20]
  4174f8:	ldr	x0, [sp, #256]
  4174fc:	ldr	w1, [sp, #152]
  417500:	str	w1, [x0, #24]
  417504:	ldr	w1, [sp, #140]
  417508:	ldr	x0, [sp, #256]
  41750c:	cmp	w1, #0x0
  417510:	cset	w1, ne  // ne = any
  417514:	and	w1, w1, #0xff
  417518:	strb	w1, [x0, #84]
  41751c:	ldr	x0, [sp, #256]
  417520:	ldr	w1, [sp, #144]
  417524:	str	w1, [x0, #144]
  417528:	ldr	x0, [sp, #208]
  41752c:	bl	413e18 <isempty>
  417530:	and	w0, w0, #0xff
  417534:	eor	w0, w0, #0x1
  417538:	and	w0, w0, #0xff
  41753c:	cmp	w0, #0x0
  417540:	b.eq	417578 <method_create_session+0xad4>  // b.none
  417544:	ldr	x0, [sp, #208]
  417548:	ldr	x19, [sp, #256]
  41754c:	bl	407f90 <strdup@plt>
  417550:	str	x0, [x19, #72]
  417554:	ldr	x0, [sp, #256]
  417558:	ldr	x0, [x0, #72]
  41755c:	cmp	x0, #0x0
  417560:	b.ne	417570 <method_create_session+0xacc>  // b.any
  417564:	mov	w0, #0xfffffff4            	// #-12
  417568:	str	w0, [sp, #156]
  41756c:	b	4177b4 <method_create_session+0xd10>
  417570:	ldr	x0, [sp, #256]
  417574:	str	wzr, [x0, #80]
  417578:	ldr	x0, [sp, #216]
  41757c:	bl	413e18 <isempty>
  417580:	and	w0, w0, #0xff
  417584:	eor	w0, w0, #0x1
  417588:	and	w0, w0, #0xff
  41758c:	cmp	w0, #0x0
  417590:	b.eq	4175c0 <method_create_session+0xb1c>  // b.none
  417594:	ldr	x0, [sp, #216]
  417598:	ldr	x19, [sp, #256]
  41759c:	bl	407f90 <strdup@plt>
  4175a0:	str	x0, [x19, #64]
  4175a4:	ldr	x0, [sp, #256]
  4175a8:	ldr	x0, [x0, #64]
  4175ac:	cmp	x0, #0x0
  4175b0:	b.ne	4175c0 <method_create_session+0xb1c>  // b.any
  4175b4:	mov	w0, #0xfffffff4            	// #-12
  4175b8:	str	w0, [sp, #156]
  4175bc:	b	4177b4 <method_create_session+0xd10>
  4175c0:	ldr	x0, [sp, #224]
  4175c4:	bl	413e18 <isempty>
  4175c8:	and	w0, w0, #0xff
  4175cc:	eor	w0, w0, #0x1
  4175d0:	and	w0, w0, #0xff
  4175d4:	cmp	w0, #0x0
  4175d8:	b.eq	417608 <method_create_session+0xb64>  // b.none
  4175dc:	ldr	x0, [sp, #224]
  4175e0:	ldr	x19, [sp, #256]
  4175e4:	bl	407f90 <strdup@plt>
  4175e8:	str	x0, [x19, #88]
  4175ec:	ldr	x0, [sp, #256]
  4175f0:	ldr	x0, [x0, #88]
  4175f4:	cmp	x0, #0x0
  4175f8:	b.ne	417608 <method_create_session+0xb64>  // b.any
  4175fc:	mov	w0, #0xfffffff4            	// #-12
  417600:	str	w0, [sp, #156]
  417604:	b	4177b4 <method_create_session+0xd10>
  417608:	ldr	x0, [sp, #232]
  41760c:	bl	413e18 <isempty>
  417610:	and	w0, w0, #0xff
  417614:	eor	w0, w0, #0x1
  417618:	and	w0, w0, #0xff
  41761c:	cmp	w0, #0x0
  417620:	b.eq	417650 <method_create_session+0xbac>  // b.none
  417624:	ldr	x0, [sp, #232]
  417628:	ldr	x19, [sp, #256]
  41762c:	bl	407f90 <strdup@plt>
  417630:	str	x0, [x19, #96]
  417634:	ldr	x0, [sp, #256]
  417638:	ldr	x0, [x0, #96]
  41763c:	cmp	x0, #0x0
  417640:	b.ne	417650 <method_create_session+0xbac>  // b.any
  417644:	mov	w0, #0xfffffff4            	// #-12
  417648:	str	w0, [sp, #156]
  41764c:	b	4177b4 <method_create_session+0xd10>
  417650:	ldr	x0, [sp, #176]
  417654:	bl	413e18 <isempty>
  417658:	and	w0, w0, #0xff
  41765c:	eor	w0, w0, #0x1
  417660:	and	w0, w0, #0xff
  417664:	cmp	w0, #0x0
  417668:	b.eq	417698 <method_create_session+0xbf4>  // b.none
  41766c:	ldr	x0, [sp, #176]
  417670:	ldr	x19, [sp, #256]
  417674:	bl	407f90 <strdup@plt>
  417678:	str	x0, [x19, #104]
  41767c:	ldr	x0, [sp, #256]
  417680:	ldr	x0, [x0, #104]
  417684:	cmp	x0, #0x0
  417688:	b.ne	417698 <method_create_session+0xbf4>  // b.any
  41768c:	mov	w0, #0xfffffff4            	// #-12
  417690:	str	w0, [sp, #156]
  417694:	b	4177b4 <method_create_session+0xd10>
  417698:	ldr	x0, [sp, #240]
  41769c:	bl	413e18 <isempty>
  4176a0:	and	w0, w0, #0xff
  4176a4:	eor	w0, w0, #0x1
  4176a8:	and	w0, w0, #0xff
  4176ac:	cmp	w0, #0x0
  4176b0:	b.eq	4176e0 <method_create_session+0xc3c>  // b.none
  4176b4:	ldr	x0, [sp, #240]
  4176b8:	ldr	x19, [sp, #256]
  4176bc:	bl	407f90 <strdup@plt>
  4176c0:	str	x0, [x19, #112]
  4176c4:	ldr	x0, [sp, #256]
  4176c8:	ldr	x0, [x0, #112]
  4176cc:	cmp	x0, #0x0
  4176d0:	b.ne	4176e0 <method_create_session+0xc3c>  // b.any
  4176d4:	mov	w0, #0xfffffff4            	// #-12
  4176d8:	str	w0, [sp, #156]
  4176dc:	b	4177b4 <method_create_session+0xd10>
  4176e0:	ldr	x0, [sp, #280]
  4176e4:	cmp	x0, #0x0
  4176e8:	b.eq	41770c <method_create_session+0xc68>  // b.none
  4176ec:	ldr	x0, [sp, #256]
  4176f0:	mov	x1, x0
  4176f4:	ldr	x0, [sp, #280]
  4176f8:	bl	428d14 <seat_attach_session>
  4176fc:	str	w0, [sp, #156]
  417700:	ldr	w0, [sp, #156]
  417704:	cmp	w0, #0x0
  417708:	b.lt	417798 <method_create_session+0xcf4>  // b.tstop
  41770c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417710:	add	x2, x0, #0x198
  417714:	mov	w1, #0x61                  	// #97
  417718:	ldr	x0, [sp, #120]
  41771c:	bl	407260 <sd_bus_message_enter_container@plt>
  417720:	str	w0, [sp, #156]
  417724:	ldr	w0, [sp, #156]
  417728:	cmp	w0, #0x0
  41772c:	b.lt	4177a0 <method_create_session+0xcfc>  // b.tstop
  417730:	ldr	x0, [sp, #256]
  417734:	ldr	x2, [sp, #104]
  417738:	ldr	x1, [sp, #120]
  41773c:	bl	431ad4 <session_start>
  417740:	str	w0, [sp, #156]
  417744:	ldr	w0, [sp, #156]
  417748:	cmp	w0, #0x0
  41774c:	b.lt	4177a8 <method_create_session+0xd04>  // b.tstop
  417750:	ldr	x0, [sp, #120]
  417754:	bl	407920 <sd_bus_message_exit_container@plt>
  417758:	str	w0, [sp, #156]
  41775c:	ldr	w0, [sp, #156]
  417760:	cmp	w0, #0x0
  417764:	b.lt	4177b0 <method_create_session+0xd0c>  // b.tstop
  417768:	ldr	x19, [sp, #256]
  41776c:	ldr	x0, [sp, #120]
  417770:	bl	408300 <sd_bus_message_ref@plt>
  417774:	str	x0, [x19, #216]
  417778:	mov	w19, #0x1                   	// #1
  41777c:	b	4177e0 <method_create_session+0xd3c>
  417780:	nop
  417784:	b	4177b4 <method_create_session+0xd10>
  417788:	nop
  41778c:	b	4177b4 <method_create_session+0xd10>
  417790:	nop
  417794:	b	4177b4 <method_create_session+0xd10>
  417798:	nop
  41779c:	b	4177b4 <method_create_session+0xd10>
  4177a0:	nop
  4177a4:	b	4177b4 <method_create_session+0xd10>
  4177a8:	nop
  4177ac:	b	4177b4 <method_create_session+0xd10>
  4177b0:	nop
  4177b4:	ldr	x0, [sp, #256]
  4177b8:	cmp	x0, #0x0
  4177bc:	b.eq	4177c8 <method_create_session+0xd24>  // b.none
  4177c0:	ldr	x0, [sp, #256]
  4177c4:	bl	4335a4 <session_add_to_gc_queue>
  4177c8:	ldr	x0, [sp, #264]
  4177cc:	cmp	x0, #0x0
  4177d0:	b.eq	4177dc <method_create_session+0xd38>  // b.none
  4177d4:	ldr	x0, [sp, #264]
  4177d8:	bl	438778 <user_add_to_gc_queue>
  4177dc:	ldr	w19, [sp, #156]
  4177e0:	add	x0, sp, #0xf8
  4177e4:	bl	413cc4 <freep>
  4177e8:	mov	w1, w19
  4177ec:	adrp	x0, 460000 <wordlist.10364+0x370>
  4177f0:	ldr	x0, [x0, #4024]
  4177f4:	ldr	x2, [sp, #296]
  4177f8:	ldr	x0, [x0]
  4177fc:	eor	x0, x2, x0
  417800:	cmp	x0, #0x0
  417804:	b.eq	41780c <method_create_session+0xd68>  // b.none
  417808:	bl	407b20 <__stack_chk_fail@plt>
  41780c:	mov	w0, w1
  417810:	ldp	x19, x20, [sp, #80]
  417814:	ldp	x29, x30, [sp, #64]
  417818:	add	sp, sp, #0x130
  41781c:	ret

0000000000417820 <method_release_session>:
  417820:	stp	x29, x30, [sp, #-96]!
  417824:	mov	x29, sp
  417828:	str	x0, [sp, #40]
  41782c:	str	x1, [sp, #32]
  417830:	str	x2, [sp, #24]
  417834:	adrp	x0, 460000 <wordlist.10364+0x370>
  417838:	ldr	x0, [x0, #4024]
  41783c:	ldr	x1, [x0]
  417840:	str	x1, [sp, #88]
  417844:	mov	x1, #0x0                   	// #0
  417848:	ldr	x0, [sp, #32]
  41784c:	str	x0, [sp, #80]
  417850:	ldr	x0, [sp, #40]
  417854:	cmp	x0, #0x0
  417858:	cset	w0, eq  // eq = none
  41785c:	and	w0, w0, #0xff
  417860:	and	x0, x0, #0xff
  417864:	cmp	x0, #0x0
  417868:	b.eq	417894 <method_release_session+0x74>  // b.none
  41786c:	adrp	x0, 43e000 <__func__.12250+0x440>
  417870:	add	x1, x0, #0xb5b
  417874:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417878:	add	x4, x0, #0x9f0
  41787c:	mov	w3, #0x3d7                 	// #983
  417880:	mov	x2, x1
  417884:	adrp	x0, 43e000 <__func__.12250+0x440>
  417888:	add	x1, x0, #0xd78
  41788c:	mov	w0, #0x0                   	// #0
  417890:	bl	407650 <log_assert_failed_realm@plt>
  417894:	ldr	x0, [sp, #80]
  417898:	cmp	x0, #0x0
  41789c:	cset	w0, eq  // eq = none
  4178a0:	and	w0, w0, #0xff
  4178a4:	and	x0, x0, #0xff
  4178a8:	cmp	x0, #0x0
  4178ac:	b.eq	4178d8 <method_release_session+0xb8>  // b.none
  4178b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4178b4:	add	x1, x0, #0xb5b
  4178b8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4178bc:	add	x4, x0, #0x9f0
  4178c0:	mov	w3, #0x3d8                 	// #984
  4178c4:	mov	x2, x1
  4178c8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4178cc:	add	x1, x0, #0xb78
  4178d0:	mov	w0, #0x0                   	// #0
  4178d4:	bl	407650 <log_assert_failed_realm@plt>
  4178d8:	add	x0, sp, #0x48
  4178dc:	mov	x2, x0
  4178e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4178e4:	add	x1, x0, #0xd08
  4178e8:	ldr	x0, [sp, #40]
  4178ec:	bl	407660 <sd_bus_message_read@plt>
  4178f0:	str	w0, [sp, #60]
  4178f4:	ldr	w0, [sp, #60]
  4178f8:	cmp	w0, #0x0
  4178fc:	b.ge	417908 <method_release_session+0xe8>  // b.tcont
  417900:	ldr	w0, [sp, #60]
  417904:	b	41796c <method_release_session+0x14c>
  417908:	ldr	x0, [sp, #72]
  41790c:	add	x1, sp, #0x40
  417910:	mov	x4, x1
  417914:	ldr	x3, [sp, #24]
  417918:	mov	x2, x0
  41791c:	ldr	x1, [sp, #40]
  417920:	ldr	x0, [sp, #80]
  417924:	bl	414474 <manager_get_session_from_creds>
  417928:	str	w0, [sp, #60]
  41792c:	ldr	w0, [sp, #60]
  417930:	cmp	w0, #0x0
  417934:	b.ge	417940 <method_release_session+0x120>  // b.tcont
  417938:	ldr	w0, [sp, #60]
  41793c:	b	41796c <method_release_session+0x14c>
  417940:	ldr	x0, [sp, #64]
  417944:	bl	4325ec <session_release>
  417948:	str	w0, [sp, #60]
  41794c:	ldr	w0, [sp, #60]
  417950:	cmp	w0, #0x0
  417954:	b.ge	417960 <method_release_session+0x140>  // b.tcont
  417958:	ldr	w0, [sp, #60]
  41795c:	b	41796c <method_release_session+0x14c>
  417960:	mov	x1, #0x0                   	// #0
  417964:	ldr	x0, [sp, #40]
  417968:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41796c:	mov	w1, w0
  417970:	adrp	x0, 460000 <wordlist.10364+0x370>
  417974:	ldr	x0, [x0, #4024]
  417978:	ldr	x2, [sp, #88]
  41797c:	ldr	x0, [x0]
  417980:	eor	x0, x2, x0
  417984:	cmp	x0, #0x0
  417988:	b.eq	417990 <method_release_session+0x170>  // b.none
  41798c:	bl	407b20 <__stack_chk_fail@plt>
  417990:	mov	w0, w1
  417994:	ldp	x29, x30, [sp], #96
  417998:	ret

000000000041799c <method_activate_session>:
  41799c:	stp	x29, x30, [sp, #-96]!
  4179a0:	mov	x29, sp
  4179a4:	str	x0, [sp, #40]
  4179a8:	str	x1, [sp, #32]
  4179ac:	str	x2, [sp, #24]
  4179b0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4179b4:	ldr	x0, [x0, #4024]
  4179b8:	ldr	x1, [x0]
  4179bc:	str	x1, [sp, #88]
  4179c0:	mov	x1, #0x0                   	// #0
  4179c4:	ldr	x0, [sp, #32]
  4179c8:	str	x0, [sp, #80]
  4179cc:	ldr	x0, [sp, #40]
  4179d0:	cmp	x0, #0x0
  4179d4:	cset	w0, eq  // eq = none
  4179d8:	and	w0, w0, #0xff
  4179dc:	and	x0, x0, #0xff
  4179e0:	cmp	x0, #0x0
  4179e4:	b.eq	417a10 <method_activate_session+0x74>  // b.none
  4179e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4179ec:	add	x1, x0, #0xb5b
  4179f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4179f4:	add	x4, x0, #0xa08
  4179f8:	mov	w3, #0x3ef                 	// #1007
  4179fc:	mov	x2, x1
  417a00:	adrp	x0, 43e000 <__func__.12250+0x440>
  417a04:	add	x1, x0, #0xd78
  417a08:	mov	w0, #0x0                   	// #0
  417a0c:	bl	407650 <log_assert_failed_realm@plt>
  417a10:	ldr	x0, [sp, #80]
  417a14:	cmp	x0, #0x0
  417a18:	cset	w0, eq  // eq = none
  417a1c:	and	w0, w0, #0xff
  417a20:	and	x0, x0, #0xff
  417a24:	cmp	x0, #0x0
  417a28:	b.eq	417a54 <method_activate_session+0xb8>  // b.none
  417a2c:	adrp	x0, 43e000 <__func__.12250+0x440>
  417a30:	add	x1, x0, #0xb5b
  417a34:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417a38:	add	x4, x0, #0xa08
  417a3c:	mov	w3, #0x3f0                 	// #1008
  417a40:	mov	x2, x1
  417a44:	adrp	x0, 43e000 <__func__.12250+0x440>
  417a48:	add	x1, x0, #0xb78
  417a4c:	mov	w0, #0x0                   	// #0
  417a50:	bl	407650 <log_assert_failed_realm@plt>
  417a54:	add	x0, sp, #0x48
  417a58:	mov	x2, x0
  417a5c:	adrp	x0, 43e000 <__func__.12250+0x440>
  417a60:	add	x1, x0, #0xd08
  417a64:	ldr	x0, [sp, #40]
  417a68:	bl	407660 <sd_bus_message_read@plt>
  417a6c:	str	w0, [sp, #60]
  417a70:	ldr	w0, [sp, #60]
  417a74:	cmp	w0, #0x0
  417a78:	b.ge	417a84 <method_activate_session+0xe8>  // b.tcont
  417a7c:	ldr	w0, [sp, #60]
  417a80:	b	417ad0 <method_activate_session+0x134>
  417a84:	ldr	x0, [sp, #72]
  417a88:	add	x1, sp, #0x40
  417a8c:	mov	x4, x1
  417a90:	ldr	x3, [sp, #24]
  417a94:	mov	x2, x0
  417a98:	ldr	x1, [sp, #40]
  417a9c:	ldr	x0, [sp, #80]
  417aa0:	bl	414474 <manager_get_session_from_creds>
  417aa4:	str	w0, [sp, #60]
  417aa8:	ldr	w0, [sp, #60]
  417aac:	cmp	w0, #0x0
  417ab0:	b.ge	417abc <method_activate_session+0x120>  // b.tcont
  417ab4:	ldr	w0, [sp, #60]
  417ab8:	b	417ad0 <method_activate_session+0x134>
  417abc:	ldr	x0, [sp, #64]
  417ac0:	ldr	x2, [sp, #24]
  417ac4:	mov	x1, x0
  417ac8:	ldr	x0, [sp, #40]
  417acc:	bl	42a92c <bus_session_method_activate>
  417ad0:	mov	w1, w0
  417ad4:	adrp	x0, 460000 <wordlist.10364+0x370>
  417ad8:	ldr	x0, [x0, #4024]
  417adc:	ldr	x2, [sp, #88]
  417ae0:	ldr	x0, [x0]
  417ae4:	eor	x0, x2, x0
  417ae8:	cmp	x0, #0x0
  417aec:	b.eq	417af4 <method_activate_session+0x158>  // b.none
  417af0:	bl	407b20 <__stack_chk_fail@plt>
  417af4:	mov	w0, w1
  417af8:	ldp	x29, x30, [sp], #96
  417afc:	ret

0000000000417b00 <method_activate_session_on_seat>:
  417b00:	stp	x29, x30, [sp, #-112]!
  417b04:	mov	x29, sp
  417b08:	str	x0, [sp, #40]
  417b0c:	str	x1, [sp, #32]
  417b10:	str	x2, [sp, #24]
  417b14:	adrp	x0, 460000 <wordlist.10364+0x370>
  417b18:	ldr	x0, [x0, #4024]
  417b1c:	ldr	x1, [x0]
  417b20:	str	x1, [sp, #104]
  417b24:	mov	x1, #0x0                   	// #0
  417b28:	ldr	x0, [sp, #32]
  417b2c:	str	x0, [sp, #96]
  417b30:	ldr	x0, [sp, #40]
  417b34:	cmp	x0, #0x0
  417b38:	cset	w0, eq  // eq = none
  417b3c:	and	w0, w0, #0xff
  417b40:	and	x0, x0, #0xff
  417b44:	cmp	x0, #0x0
  417b48:	b.eq	417b74 <method_activate_session_on_seat+0x74>  // b.none
  417b4c:	adrp	x0, 43e000 <__func__.12250+0x440>
  417b50:	add	x1, x0, #0xb5b
  417b54:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417b58:	add	x4, x0, #0xa20
  417b5c:	mov	w3, #0x404                 	// #1028
  417b60:	mov	x2, x1
  417b64:	adrp	x0, 43e000 <__func__.12250+0x440>
  417b68:	add	x1, x0, #0xd78
  417b6c:	mov	w0, #0x0                   	// #0
  417b70:	bl	407650 <log_assert_failed_realm@plt>
  417b74:	ldr	x0, [sp, #96]
  417b78:	cmp	x0, #0x0
  417b7c:	cset	w0, eq  // eq = none
  417b80:	and	w0, w0, #0xff
  417b84:	and	x0, x0, #0xff
  417b88:	cmp	x0, #0x0
  417b8c:	b.eq	417bb8 <method_activate_session_on_seat+0xb8>  // b.none
  417b90:	adrp	x0, 43e000 <__func__.12250+0x440>
  417b94:	add	x1, x0, #0xb5b
  417b98:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417b9c:	add	x4, x0, #0xa20
  417ba0:	mov	w3, #0x405                 	// #1029
  417ba4:	mov	x2, x1
  417ba8:	adrp	x0, 43e000 <__func__.12250+0x440>
  417bac:	add	x1, x0, #0xb78
  417bb0:	mov	w0, #0x0                   	// #0
  417bb4:	bl	407650 <log_assert_failed_realm@plt>
  417bb8:	add	x1, sp, #0x48
  417bbc:	add	x0, sp, #0x40
  417bc0:	mov	x3, x1
  417bc4:	mov	x2, x0
  417bc8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417bcc:	add	x1, x0, #0x1a0
  417bd0:	ldr	x0, [sp, #40]
  417bd4:	bl	407660 <sd_bus_message_read@plt>
  417bd8:	str	w0, [sp, #60]
  417bdc:	ldr	w0, [sp, #60]
  417be0:	cmp	w0, #0x0
  417be4:	b.ge	417bf0 <method_activate_session_on_seat+0xf0>  // b.tcont
  417be8:	ldr	w0, [sp, #60]
  417bec:	b	417ccc <method_activate_session_on_seat+0x1cc>
  417bf0:	ldr	x0, [sp, #64]
  417bf4:	add	x1, sp, #0x50
  417bf8:	mov	x4, x1
  417bfc:	ldr	x3, [sp, #24]
  417c00:	mov	x2, x0
  417c04:	ldr	x1, [sp, #40]
  417c08:	ldr	x0, [sp, #96]
  417c0c:	bl	414474 <manager_get_session_from_creds>
  417c10:	str	w0, [sp, #60]
  417c14:	ldr	w0, [sp, #60]
  417c18:	cmp	w0, #0x0
  417c1c:	b.ge	417c28 <method_activate_session_on_seat+0x128>  // b.tcont
  417c20:	ldr	w0, [sp, #60]
  417c24:	b	417ccc <method_activate_session_on_seat+0x1cc>
  417c28:	ldr	x0, [sp, #72]
  417c2c:	add	x1, sp, #0x58
  417c30:	mov	x4, x1
  417c34:	ldr	x3, [sp, #24]
  417c38:	mov	x2, x0
  417c3c:	ldr	x1, [sp, #40]
  417c40:	ldr	x0, [sp, #96]
  417c44:	bl	414844 <manager_get_seat_from_creds>
  417c48:	str	w0, [sp, #60]
  417c4c:	ldr	w0, [sp, #60]
  417c50:	cmp	w0, #0x0
  417c54:	b.ge	417c60 <method_activate_session_on_seat+0x160>  // b.tcont
  417c58:	ldr	w0, [sp, #60]
  417c5c:	b	417ccc <method_activate_session_on_seat+0x1cc>
  417c60:	ldr	x0, [sp, #80]
  417c64:	ldr	x1, [x0, #136]
  417c68:	ldr	x0, [sp, #88]
  417c6c:	cmp	x1, x0
  417c70:	b.eq	417ca0 <method_activate_session_on_seat+0x1a0>  // b.none
  417c74:	ldr	x0, [sp, #64]
  417c78:	ldr	x1, [sp, #72]
  417c7c:	mov	x4, x1
  417c80:	mov	x3, x0
  417c84:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417c88:	add	x2, x0, #0x1a8
  417c8c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417c90:	add	x1, x0, #0x1c8
  417c94:	ldr	x0, [sp, #24]
  417c98:	bl	407ae0 <sd_bus_error_setf@plt>
  417c9c:	b	417ccc <method_activate_session_on_seat+0x1cc>
  417ca0:	ldr	x0, [sp, #80]
  417ca4:	bl	431470 <session_activate>
  417ca8:	str	w0, [sp, #60]
  417cac:	ldr	w0, [sp, #60]
  417cb0:	cmp	w0, #0x0
  417cb4:	b.ge	417cc0 <method_activate_session_on_seat+0x1c0>  // b.tcont
  417cb8:	ldr	w0, [sp, #60]
  417cbc:	b	417ccc <method_activate_session_on_seat+0x1cc>
  417cc0:	mov	x1, #0x0                   	// #0
  417cc4:	ldr	x0, [sp, #40]
  417cc8:	bl	4070e0 <sd_bus_reply_method_return@plt>
  417ccc:	mov	w1, w0
  417cd0:	adrp	x0, 460000 <wordlist.10364+0x370>
  417cd4:	ldr	x0, [x0, #4024]
  417cd8:	ldr	x2, [sp, #104]
  417cdc:	ldr	x0, [x0]
  417ce0:	eor	x0, x2, x0
  417ce4:	cmp	x0, #0x0
  417ce8:	b.eq	417cf0 <method_activate_session_on_seat+0x1f0>  // b.none
  417cec:	bl	407b20 <__stack_chk_fail@plt>
  417cf0:	mov	w0, w1
  417cf4:	ldp	x29, x30, [sp], #112
  417cf8:	ret

0000000000417cfc <method_lock_session>:
  417cfc:	stp	x29, x30, [sp, #-96]!
  417d00:	mov	x29, sp
  417d04:	str	x0, [sp, #40]
  417d08:	str	x1, [sp, #32]
  417d0c:	str	x2, [sp, #24]
  417d10:	adrp	x0, 460000 <wordlist.10364+0x370>
  417d14:	ldr	x0, [x0, #4024]
  417d18:	ldr	x1, [x0]
  417d1c:	str	x1, [sp, #88]
  417d20:	mov	x1, #0x0                   	// #0
  417d24:	ldr	x0, [sp, #32]
  417d28:	str	x0, [sp, #80]
  417d2c:	ldr	x0, [sp, #40]
  417d30:	cmp	x0, #0x0
  417d34:	cset	w0, eq  // eq = none
  417d38:	and	w0, w0, #0xff
  417d3c:	and	x0, x0, #0xff
  417d40:	cmp	x0, #0x0
  417d44:	b.eq	417d70 <method_lock_session+0x74>  // b.none
  417d48:	adrp	x0, 43e000 <__func__.12250+0x440>
  417d4c:	add	x1, x0, #0xb5b
  417d50:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417d54:	add	x4, x0, #0xa40
  417d58:	mov	w3, #0x426                 	// #1062
  417d5c:	mov	x2, x1
  417d60:	adrp	x0, 43e000 <__func__.12250+0x440>
  417d64:	add	x1, x0, #0xd78
  417d68:	mov	w0, #0x0                   	// #0
  417d6c:	bl	407650 <log_assert_failed_realm@plt>
  417d70:	ldr	x0, [sp, #80]
  417d74:	cmp	x0, #0x0
  417d78:	cset	w0, eq  // eq = none
  417d7c:	and	w0, w0, #0xff
  417d80:	and	x0, x0, #0xff
  417d84:	cmp	x0, #0x0
  417d88:	b.eq	417db4 <method_lock_session+0xb8>  // b.none
  417d8c:	adrp	x0, 43e000 <__func__.12250+0x440>
  417d90:	add	x1, x0, #0xb5b
  417d94:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417d98:	add	x4, x0, #0xa40
  417d9c:	mov	w3, #0x427                 	// #1063
  417da0:	mov	x2, x1
  417da4:	adrp	x0, 43e000 <__func__.12250+0x440>
  417da8:	add	x1, x0, #0xb78
  417dac:	mov	w0, #0x0                   	// #0
  417db0:	bl	407650 <log_assert_failed_realm@plt>
  417db4:	add	x0, sp, #0x48
  417db8:	mov	x2, x0
  417dbc:	adrp	x0, 43e000 <__func__.12250+0x440>
  417dc0:	add	x1, x0, #0xd08
  417dc4:	ldr	x0, [sp, #40]
  417dc8:	bl	407660 <sd_bus_message_read@plt>
  417dcc:	str	w0, [sp, #60]
  417dd0:	ldr	w0, [sp, #60]
  417dd4:	cmp	w0, #0x0
  417dd8:	b.ge	417de4 <method_lock_session+0xe8>  // b.tcont
  417ddc:	ldr	w0, [sp, #60]
  417de0:	b	417e30 <method_lock_session+0x134>
  417de4:	ldr	x0, [sp, #72]
  417de8:	add	x1, sp, #0x40
  417dec:	mov	x4, x1
  417df0:	ldr	x3, [sp, #24]
  417df4:	mov	x2, x0
  417df8:	ldr	x1, [sp, #40]
  417dfc:	ldr	x0, [sp, #80]
  417e00:	bl	414474 <manager_get_session_from_creds>
  417e04:	str	w0, [sp, #60]
  417e08:	ldr	w0, [sp, #60]
  417e0c:	cmp	w0, #0x0
  417e10:	b.ge	417e1c <method_lock_session+0x120>  // b.tcont
  417e14:	ldr	w0, [sp, #60]
  417e18:	b	417e30 <method_lock_session+0x134>
  417e1c:	ldr	x0, [sp, #64]
  417e20:	ldr	x2, [sp, #24]
  417e24:	mov	x1, x0
  417e28:	ldr	x0, [sp, #40]
  417e2c:	bl	42aa04 <bus_session_method_lock>
  417e30:	mov	w1, w0
  417e34:	adrp	x0, 460000 <wordlist.10364+0x370>
  417e38:	ldr	x0, [x0, #4024]
  417e3c:	ldr	x2, [sp, #88]
  417e40:	ldr	x0, [x0]
  417e44:	eor	x0, x2, x0
  417e48:	cmp	x0, #0x0
  417e4c:	b.eq	417e54 <method_lock_session+0x158>  // b.none
  417e50:	bl	407b20 <__stack_chk_fail@plt>
  417e54:	mov	w0, w1
  417e58:	ldp	x29, x30, [sp], #96
  417e5c:	ret

0000000000417e60 <method_lock_sessions>:
  417e60:	stp	x29, x30, [sp, #-64]!
  417e64:	mov	x29, sp
  417e68:	str	x0, [sp, #40]
  417e6c:	str	x1, [sp, #32]
  417e70:	str	x2, [sp, #24]
  417e74:	ldr	x0, [sp, #32]
  417e78:	str	x0, [sp, #56]
  417e7c:	ldr	x0, [sp, #40]
  417e80:	cmp	x0, #0x0
  417e84:	cset	w0, eq  // eq = none
  417e88:	and	w0, w0, #0xff
  417e8c:	and	x0, x0, #0xff
  417e90:	cmp	x0, #0x0
  417e94:	b.eq	417ec0 <method_lock_sessions+0x60>  // b.none
  417e98:	adrp	x0, 43e000 <__func__.12250+0x440>
  417e9c:	add	x1, x0, #0xb5b
  417ea0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417ea4:	add	x4, x0, #0xa58
  417ea8:	mov	w3, #0x438                 	// #1080
  417eac:	mov	x2, x1
  417eb0:	adrp	x0, 43e000 <__func__.12250+0x440>
  417eb4:	add	x1, x0, #0xd78
  417eb8:	mov	w0, #0x0                   	// #0
  417ebc:	bl	407650 <log_assert_failed_realm@plt>
  417ec0:	ldr	x0, [sp, #56]
  417ec4:	cmp	x0, #0x0
  417ec8:	cset	w0, eq  // eq = none
  417ecc:	and	w0, w0, #0xff
  417ed0:	and	x0, x0, #0xff
  417ed4:	cmp	x0, #0x0
  417ed8:	b.eq	417f04 <method_lock_sessions+0xa4>  // b.none
  417edc:	adrp	x0, 43e000 <__func__.12250+0x440>
  417ee0:	add	x1, x0, #0xb5b
  417ee4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  417ee8:	add	x4, x0, #0xa58
  417eec:	mov	w3, #0x439                 	// #1081
  417ef0:	mov	x2, x1
  417ef4:	adrp	x0, 43e000 <__func__.12250+0x440>
  417ef8:	add	x1, x0, #0xb78
  417efc:	mov	w0, #0x0                   	// #0
  417f00:	bl	407650 <log_assert_failed_realm@plt>
  417f04:	ldr	x0, [sp, #56]
  417f08:	add	x0, x0, #0x1b0
  417f0c:	ldr	x7, [sp, #24]
  417f10:	mov	x6, x0
  417f14:	mov	w5, #0xffffffff            	// #-1
  417f18:	mov	w4, #0x0                   	// #0
  417f1c:	mov	x3, #0x0                   	// #0
  417f20:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417f24:	add	x2, x0, #0x1f0
  417f28:	mov	w1, #0x15                  	// #21
  417f2c:	ldr	x0, [sp, #40]
  417f30:	bl	408350 <bus_verify_polkit_async@plt>
  417f34:	str	w0, [sp, #52]
  417f38:	ldr	w0, [sp, #52]
  417f3c:	cmp	w0, #0x0
  417f40:	b.ge	417f4c <method_lock_sessions+0xec>  // b.tcont
  417f44:	ldr	w0, [sp, #52]
  417f48:	b	417fb8 <method_lock_sessions+0x158>
  417f4c:	ldr	w0, [sp, #52]
  417f50:	cmp	w0, #0x0
  417f54:	b.ne	417f60 <method_lock_sessions+0x100>  // b.any
  417f58:	mov	w0, #0x1                   	// #1
  417f5c:	b	417fb8 <method_lock_sessions+0x158>
  417f60:	ldr	x0, [sp, #40]
  417f64:	bl	407510 <sd_bus_message_get_member@plt>
  417f68:	mov	x2, x0
  417f6c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  417f70:	add	x1, x0, #0x218
  417f74:	mov	x0, x2
  417f78:	bl	407f30 <strcmp@plt>
  417f7c:	cmp	w0, #0x0
  417f80:	cset	w0, eq  // eq = none
  417f84:	and	w0, w0, #0xff
  417f88:	mov	w1, w0
  417f8c:	ldr	x0, [sp, #56]
  417f90:	bl	42cd74 <session_send_lock_all>
  417f94:	str	w0, [sp, #52]
  417f98:	ldr	w0, [sp, #52]
  417f9c:	cmp	w0, #0x0
  417fa0:	b.ge	417fac <method_lock_sessions+0x14c>  // b.tcont
  417fa4:	ldr	w0, [sp, #52]
  417fa8:	b	417fb8 <method_lock_sessions+0x158>
  417fac:	mov	x1, #0x0                   	// #0
  417fb0:	ldr	x0, [sp, #40]
  417fb4:	bl	4070e0 <sd_bus_reply_method_return@plt>
  417fb8:	ldp	x29, x30, [sp], #64
  417fbc:	ret

0000000000417fc0 <method_kill_session>:
  417fc0:	stp	x29, x30, [sp, #-96]!
  417fc4:	mov	x29, sp
  417fc8:	str	x0, [sp, #40]
  417fcc:	str	x1, [sp, #32]
  417fd0:	str	x2, [sp, #24]
  417fd4:	adrp	x0, 460000 <wordlist.10364+0x370>
  417fd8:	ldr	x0, [x0, #4024]
  417fdc:	ldr	x1, [x0]
  417fe0:	str	x1, [sp, #88]
  417fe4:	mov	x1, #0x0                   	// #0
  417fe8:	ldr	x0, [sp, #32]
  417fec:	str	x0, [sp, #80]
  417ff0:	ldr	x0, [sp, #40]
  417ff4:	cmp	x0, #0x0
  417ff8:	cset	w0, eq  // eq = none
  417ffc:	and	w0, w0, #0xff
  418000:	and	x0, x0, #0xff
  418004:	cmp	x0, #0x0
  418008:	b.eq	418034 <method_kill_session+0x74>  // b.none
  41800c:	adrp	x0, 43e000 <__func__.12250+0x440>
  418010:	add	x1, x0, #0xb5b
  418014:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418018:	add	x4, x0, #0xa70
  41801c:	mov	w3, #0x456                 	// #1110
  418020:	mov	x2, x1
  418024:	adrp	x0, 43e000 <__func__.12250+0x440>
  418028:	add	x1, x0, #0xd78
  41802c:	mov	w0, #0x0                   	// #0
  418030:	bl	407650 <log_assert_failed_realm@plt>
  418034:	ldr	x0, [sp, #80]
  418038:	cmp	x0, #0x0
  41803c:	cset	w0, eq  // eq = none
  418040:	and	w0, w0, #0xff
  418044:	and	x0, x0, #0xff
  418048:	cmp	x0, #0x0
  41804c:	b.eq	418078 <method_kill_session+0xb8>  // b.none
  418050:	adrp	x0, 43e000 <__func__.12250+0x440>
  418054:	add	x1, x0, #0xb5b
  418058:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41805c:	add	x4, x0, #0xa70
  418060:	mov	w3, #0x457                 	// #1111
  418064:	mov	x2, x1
  418068:	adrp	x0, 43e000 <__func__.12250+0x440>
  41806c:	add	x1, x0, #0xb78
  418070:	mov	w0, #0x0                   	// #0
  418074:	bl	407650 <log_assert_failed_realm@plt>
  418078:	add	x0, sp, #0x40
  41807c:	mov	x2, x0
  418080:	adrp	x0, 43e000 <__func__.12250+0x440>
  418084:	add	x1, x0, #0xd08
  418088:	ldr	x0, [sp, #40]
  41808c:	bl	407660 <sd_bus_message_read@plt>
  418090:	str	w0, [sp, #60]
  418094:	ldr	w0, [sp, #60]
  418098:	cmp	w0, #0x0
  41809c:	b.ge	4180a8 <method_kill_session+0xe8>  // b.tcont
  4180a0:	ldr	w0, [sp, #60]
  4180a4:	b	4180f4 <method_kill_session+0x134>
  4180a8:	ldr	x0, [sp, #64]
  4180ac:	add	x1, sp, #0x48
  4180b0:	mov	x4, x1
  4180b4:	ldr	x3, [sp, #24]
  4180b8:	mov	x2, x0
  4180bc:	ldr	x1, [sp, #40]
  4180c0:	ldr	x0, [sp, #80]
  4180c4:	bl	414474 <manager_get_session_from_creds>
  4180c8:	str	w0, [sp, #60]
  4180cc:	ldr	w0, [sp, #60]
  4180d0:	cmp	w0, #0x0
  4180d4:	b.ge	4180e0 <method_kill_session+0x120>  // b.tcont
  4180d8:	ldr	w0, [sp, #60]
  4180dc:	b	4180f4 <method_kill_session+0x134>
  4180e0:	ldr	x0, [sp, #72]
  4180e4:	ldr	x2, [sp, #24]
  4180e8:	mov	x1, x0
  4180ec:	ldr	x0, [sp, #40]
  4180f0:	bl	42af4c <bus_session_method_kill>
  4180f4:	mov	w1, w0
  4180f8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4180fc:	ldr	x0, [x0, #4024]
  418100:	ldr	x2, [sp, #88]
  418104:	ldr	x0, [x0]
  418108:	eor	x0, x2, x0
  41810c:	cmp	x0, #0x0
  418110:	b.eq	418118 <method_kill_session+0x158>  // b.none
  418114:	bl	407b20 <__stack_chk_fail@plt>
  418118:	mov	w0, w1
  41811c:	ldp	x29, x30, [sp], #96
  418120:	ret

0000000000418124 <method_kill_user>:
  418124:	stp	x29, x30, [sp, #-80]!
  418128:	mov	x29, sp
  41812c:	str	x0, [sp, #40]
  418130:	str	x1, [sp, #32]
  418134:	str	x2, [sp, #24]
  418138:	adrp	x0, 460000 <wordlist.10364+0x370>
  41813c:	ldr	x0, [x0, #4024]
  418140:	ldr	x1, [x0]
  418144:	str	x1, [sp, #72]
  418148:	mov	x1, #0x0                   	// #0
  41814c:	ldr	x0, [sp, #32]
  418150:	str	x0, [sp, #64]
  418154:	ldr	x0, [sp, #40]
  418158:	cmp	x0, #0x0
  41815c:	cset	w0, eq  // eq = none
  418160:	and	w0, w0, #0xff
  418164:	and	x0, x0, #0xff
  418168:	cmp	x0, #0x0
  41816c:	b.eq	418198 <method_kill_user+0x74>  // b.none
  418170:	adrp	x0, 43e000 <__func__.12250+0x440>
  418174:	add	x1, x0, #0xb5b
  418178:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41817c:	add	x4, x0, #0xa88
  418180:	mov	w3, #0x46a                 	// #1130
  418184:	mov	x2, x1
  418188:	adrp	x0, 43e000 <__func__.12250+0x440>
  41818c:	add	x1, x0, #0xd78
  418190:	mov	w0, #0x0                   	// #0
  418194:	bl	407650 <log_assert_failed_realm@plt>
  418198:	ldr	x0, [sp, #64]
  41819c:	cmp	x0, #0x0
  4181a0:	cset	w0, eq  // eq = none
  4181a4:	and	w0, w0, #0xff
  4181a8:	and	x0, x0, #0xff
  4181ac:	cmp	x0, #0x0
  4181b0:	b.eq	4181dc <method_kill_user+0xb8>  // b.none
  4181b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4181b8:	add	x1, x0, #0xb5b
  4181bc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4181c0:	add	x4, x0, #0xa88
  4181c4:	mov	w3, #0x46b                 	// #1131
  4181c8:	mov	x2, x1
  4181cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4181d0:	add	x1, x0, #0xb78
  4181d4:	mov	w0, #0x0                   	// #0
  4181d8:	bl	407650 <log_assert_failed_realm@plt>
  4181dc:	add	x0, sp, #0x30
  4181e0:	mov	x2, x0
  4181e4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4181e8:	add	x1, x0, #0xd88
  4181ec:	ldr	x0, [sp, #40]
  4181f0:	bl	407660 <sd_bus_message_read@plt>
  4181f4:	str	w0, [sp, #52]
  4181f8:	ldr	w0, [sp, #52]
  4181fc:	cmp	w0, #0x0
  418200:	b.ge	41820c <method_kill_user+0xe8>  // b.tcont
  418204:	ldr	w0, [sp, #52]
  418208:	b	418258 <method_kill_user+0x134>
  41820c:	ldr	w0, [sp, #48]
  418210:	add	x1, sp, #0x38
  418214:	mov	x4, x1
  418218:	ldr	x3, [sp, #24]
  41821c:	mov	w2, w0
  418220:	ldr	x1, [sp, #40]
  418224:	ldr	x0, [sp, #64]
  418228:	bl	414708 <manager_get_user_from_creds>
  41822c:	str	w0, [sp, #52]
  418230:	ldr	w0, [sp, #52]
  418234:	cmp	w0, #0x0
  418238:	b.ge	418244 <method_kill_user+0x120>  // b.tcont
  41823c:	ldr	w0, [sp, #52]
  418240:	b	418258 <method_kill_user+0x134>
  418244:	ldr	x0, [sp, #56]
  418248:	ldr	x2, [sp, #24]
  41824c:	mov	x1, x0
  418250:	ldr	x0, [sp, #40]
  418254:	bl	4352a0 <bus_user_method_kill>
  418258:	mov	w1, w0
  41825c:	adrp	x0, 460000 <wordlist.10364+0x370>
  418260:	ldr	x0, [x0, #4024]
  418264:	ldr	x2, [sp, #72]
  418268:	ldr	x0, [x0]
  41826c:	eor	x0, x2, x0
  418270:	cmp	x0, #0x0
  418274:	b.eq	41827c <method_kill_user+0x158>  // b.none
  418278:	bl	407b20 <__stack_chk_fail@plt>
  41827c:	mov	w0, w1
  418280:	ldp	x29, x30, [sp], #80
  418284:	ret

0000000000418288 <method_terminate_session>:
  418288:	stp	x29, x30, [sp, #-96]!
  41828c:	mov	x29, sp
  418290:	str	x0, [sp, #40]
  418294:	str	x1, [sp, #32]
  418298:	str	x2, [sp, #24]
  41829c:	adrp	x0, 460000 <wordlist.10364+0x370>
  4182a0:	ldr	x0, [x0, #4024]
  4182a4:	ldr	x1, [x0]
  4182a8:	str	x1, [sp, #88]
  4182ac:	mov	x1, #0x0                   	// #0
  4182b0:	ldr	x0, [sp, #32]
  4182b4:	str	x0, [sp, #80]
  4182b8:	ldr	x0, [sp, #40]
  4182bc:	cmp	x0, #0x0
  4182c0:	cset	w0, eq  // eq = none
  4182c4:	and	w0, w0, #0xff
  4182c8:	and	x0, x0, #0xff
  4182cc:	cmp	x0, #0x0
  4182d0:	b.eq	4182fc <method_terminate_session+0x74>  // b.none
  4182d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4182d8:	add	x1, x0, #0xb5b
  4182dc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4182e0:	add	x4, x0, #0xaa0
  4182e4:	mov	w3, #0x47e                 	// #1150
  4182e8:	mov	x2, x1
  4182ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4182f0:	add	x1, x0, #0xd78
  4182f4:	mov	w0, #0x0                   	// #0
  4182f8:	bl	407650 <log_assert_failed_realm@plt>
  4182fc:	ldr	x0, [sp, #80]
  418300:	cmp	x0, #0x0
  418304:	cset	w0, eq  // eq = none
  418308:	and	w0, w0, #0xff
  41830c:	and	x0, x0, #0xff
  418310:	cmp	x0, #0x0
  418314:	b.eq	418340 <method_terminate_session+0xb8>  // b.none
  418318:	adrp	x0, 43e000 <__func__.12250+0x440>
  41831c:	add	x1, x0, #0xb5b
  418320:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418324:	add	x4, x0, #0xaa0
  418328:	mov	w3, #0x47f                 	// #1151
  41832c:	mov	x2, x1
  418330:	adrp	x0, 43e000 <__func__.12250+0x440>
  418334:	add	x1, x0, #0xb78
  418338:	mov	w0, #0x0                   	// #0
  41833c:	bl	407650 <log_assert_failed_realm@plt>
  418340:	add	x0, sp, #0x40
  418344:	mov	x2, x0
  418348:	adrp	x0, 43e000 <__func__.12250+0x440>
  41834c:	add	x1, x0, #0xd08
  418350:	ldr	x0, [sp, #40]
  418354:	bl	407660 <sd_bus_message_read@plt>
  418358:	str	w0, [sp, #60]
  41835c:	ldr	w0, [sp, #60]
  418360:	cmp	w0, #0x0
  418364:	b.ge	418370 <method_terminate_session+0xe8>  // b.tcont
  418368:	ldr	w0, [sp, #60]
  41836c:	b	4183bc <method_terminate_session+0x134>
  418370:	ldr	x0, [sp, #64]
  418374:	add	x1, sp, #0x48
  418378:	mov	x4, x1
  41837c:	ldr	x3, [sp, #24]
  418380:	mov	x2, x0
  418384:	ldr	x1, [sp, #40]
  418388:	ldr	x0, [sp, #80]
  41838c:	bl	414474 <manager_get_session_from_creds>
  418390:	str	w0, [sp, #60]
  418394:	ldr	w0, [sp, #60]
  418398:	cmp	w0, #0x0
  41839c:	b.ge	4183a8 <method_terminate_session+0x120>  // b.tcont
  4183a0:	ldr	w0, [sp, #60]
  4183a4:	b	4183bc <method_terminate_session+0x134>
  4183a8:	ldr	x0, [sp, #72]
  4183ac:	ldr	x2, [sp, #24]
  4183b0:	mov	x1, x0
  4183b4:	ldr	x0, [sp, #40]
  4183b8:	bl	42a7e4 <bus_session_method_terminate>
  4183bc:	mov	w1, w0
  4183c0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4183c4:	ldr	x0, [x0, #4024]
  4183c8:	ldr	x2, [sp, #88]
  4183cc:	ldr	x0, [x0]
  4183d0:	eor	x0, x2, x0
  4183d4:	cmp	x0, #0x0
  4183d8:	b.eq	4183e0 <method_terminate_session+0x158>  // b.none
  4183dc:	bl	407b20 <__stack_chk_fail@plt>
  4183e0:	mov	w0, w1
  4183e4:	ldp	x29, x30, [sp], #96
  4183e8:	ret

00000000004183ec <method_terminate_user>:
  4183ec:	stp	x29, x30, [sp, #-80]!
  4183f0:	mov	x29, sp
  4183f4:	str	x0, [sp, #40]
  4183f8:	str	x1, [sp, #32]
  4183fc:	str	x2, [sp, #24]
  418400:	adrp	x0, 460000 <wordlist.10364+0x370>
  418404:	ldr	x0, [x0, #4024]
  418408:	ldr	x1, [x0]
  41840c:	str	x1, [sp, #72]
  418410:	mov	x1, #0x0                   	// #0
  418414:	ldr	x0, [sp, #32]
  418418:	str	x0, [sp, #64]
  41841c:	ldr	x0, [sp, #40]
  418420:	cmp	x0, #0x0
  418424:	cset	w0, eq  // eq = none
  418428:	and	w0, w0, #0xff
  41842c:	and	x0, x0, #0xff
  418430:	cmp	x0, #0x0
  418434:	b.eq	418460 <method_terminate_user+0x74>  // b.none
  418438:	adrp	x0, 43e000 <__func__.12250+0x440>
  41843c:	add	x1, x0, #0xb5b
  418440:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418444:	add	x4, x0, #0xac0
  418448:	mov	w3, #0x492                 	// #1170
  41844c:	mov	x2, x1
  418450:	adrp	x0, 43e000 <__func__.12250+0x440>
  418454:	add	x1, x0, #0xd78
  418458:	mov	w0, #0x0                   	// #0
  41845c:	bl	407650 <log_assert_failed_realm@plt>
  418460:	ldr	x0, [sp, #64]
  418464:	cmp	x0, #0x0
  418468:	cset	w0, eq  // eq = none
  41846c:	and	w0, w0, #0xff
  418470:	and	x0, x0, #0xff
  418474:	cmp	x0, #0x0
  418478:	b.eq	4184a4 <method_terminate_user+0xb8>  // b.none
  41847c:	adrp	x0, 43e000 <__func__.12250+0x440>
  418480:	add	x1, x0, #0xb5b
  418484:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418488:	add	x4, x0, #0xac0
  41848c:	mov	w3, #0x493                 	// #1171
  418490:	mov	x2, x1
  418494:	adrp	x0, 43e000 <__func__.12250+0x440>
  418498:	add	x1, x0, #0xb78
  41849c:	mov	w0, #0x0                   	// #0
  4184a0:	bl	407650 <log_assert_failed_realm@plt>
  4184a4:	add	x0, sp, #0x30
  4184a8:	mov	x2, x0
  4184ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  4184b0:	add	x1, x0, #0xd88
  4184b4:	ldr	x0, [sp, #40]
  4184b8:	bl	407660 <sd_bus_message_read@plt>
  4184bc:	str	w0, [sp, #52]
  4184c0:	ldr	w0, [sp, #52]
  4184c4:	cmp	w0, #0x0
  4184c8:	b.ge	4184d4 <method_terminate_user+0xe8>  // b.tcont
  4184cc:	ldr	w0, [sp, #52]
  4184d0:	b	418520 <method_terminate_user+0x134>
  4184d4:	ldr	w0, [sp, #48]
  4184d8:	add	x1, sp, #0x38
  4184dc:	mov	x4, x1
  4184e0:	ldr	x3, [sp, #24]
  4184e4:	mov	w2, w0
  4184e8:	ldr	x1, [sp, #40]
  4184ec:	ldr	x0, [sp, #64]
  4184f0:	bl	414708 <manager_get_user_from_creds>
  4184f4:	str	w0, [sp, #52]
  4184f8:	ldr	w0, [sp, #52]
  4184fc:	cmp	w0, #0x0
  418500:	b.ge	41850c <method_terminate_user+0x120>  // b.tcont
  418504:	ldr	w0, [sp, #52]
  418508:	b	418520 <method_terminate_user+0x134>
  41850c:	ldr	x0, [sp, #56]
  418510:	ldr	x2, [sp, #24]
  418514:	mov	x1, x0
  418518:	ldr	x0, [sp, #40]
  41851c:	bl	43515c <bus_user_method_terminate>
  418520:	mov	w1, w0
  418524:	adrp	x0, 460000 <wordlist.10364+0x370>
  418528:	ldr	x0, [x0, #4024]
  41852c:	ldr	x2, [sp, #72]
  418530:	ldr	x0, [x0]
  418534:	eor	x0, x2, x0
  418538:	cmp	x0, #0x0
  41853c:	b.eq	418544 <method_terminate_user+0x158>  // b.none
  418540:	bl	407b20 <__stack_chk_fail@plt>
  418544:	mov	w0, w1
  418548:	ldp	x29, x30, [sp], #80
  41854c:	ret

0000000000418550 <method_terminate_seat>:
  418550:	stp	x29, x30, [sp, #-96]!
  418554:	mov	x29, sp
  418558:	str	x0, [sp, #40]
  41855c:	str	x1, [sp, #32]
  418560:	str	x2, [sp, #24]
  418564:	adrp	x0, 460000 <wordlist.10364+0x370>
  418568:	ldr	x0, [x0, #4024]
  41856c:	ldr	x1, [x0]
  418570:	str	x1, [sp, #88]
  418574:	mov	x1, #0x0                   	// #0
  418578:	ldr	x0, [sp, #32]
  41857c:	str	x0, [sp, #80]
  418580:	ldr	x0, [sp, #40]
  418584:	cmp	x0, #0x0
  418588:	cset	w0, eq  // eq = none
  41858c:	and	w0, w0, #0xff
  418590:	and	x0, x0, #0xff
  418594:	cmp	x0, #0x0
  418598:	b.eq	4185c4 <method_terminate_seat+0x74>  // b.none
  41859c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4185a0:	add	x1, x0, #0xb5b
  4185a4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4185a8:	add	x4, x0, #0xad8
  4185ac:	mov	w3, #0x4a6                 	// #1190
  4185b0:	mov	x2, x1
  4185b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4185b8:	add	x1, x0, #0xd78
  4185bc:	mov	w0, #0x0                   	// #0
  4185c0:	bl	407650 <log_assert_failed_realm@plt>
  4185c4:	ldr	x0, [sp, #80]
  4185c8:	cmp	x0, #0x0
  4185cc:	cset	w0, eq  // eq = none
  4185d0:	and	w0, w0, #0xff
  4185d4:	and	x0, x0, #0xff
  4185d8:	cmp	x0, #0x0
  4185dc:	b.eq	418608 <method_terminate_seat+0xb8>  // b.none
  4185e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4185e4:	add	x1, x0, #0xb5b
  4185e8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4185ec:	add	x4, x0, #0xad8
  4185f0:	mov	w3, #0x4a7                 	// #1191
  4185f4:	mov	x2, x1
  4185f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4185fc:	add	x1, x0, #0xb78
  418600:	mov	w0, #0x0                   	// #0
  418604:	bl	407650 <log_assert_failed_realm@plt>
  418608:	add	x0, sp, #0x40
  41860c:	mov	x2, x0
  418610:	adrp	x0, 43e000 <__func__.12250+0x440>
  418614:	add	x1, x0, #0xd08
  418618:	ldr	x0, [sp, #40]
  41861c:	bl	407660 <sd_bus_message_read@plt>
  418620:	str	w0, [sp, #60]
  418624:	ldr	w0, [sp, #60]
  418628:	cmp	w0, #0x0
  41862c:	b.ge	418638 <method_terminate_seat+0xe8>  // b.tcont
  418630:	ldr	w0, [sp, #60]
  418634:	b	418684 <method_terminate_seat+0x134>
  418638:	ldr	x0, [sp, #64]
  41863c:	add	x1, sp, #0x48
  418640:	mov	x4, x1
  418644:	ldr	x3, [sp, #24]
  418648:	mov	x2, x0
  41864c:	ldr	x1, [sp, #40]
  418650:	ldr	x0, [sp, #80]
  418654:	bl	414844 <manager_get_seat_from_creds>
  418658:	str	w0, [sp, #60]
  41865c:	ldr	w0, [sp, #60]
  418660:	cmp	w0, #0x0
  418664:	b.ge	418670 <method_terminate_seat+0x120>  // b.tcont
  418668:	ldr	w0, [sp, #60]
  41866c:	b	418684 <method_terminate_seat+0x134>
  418670:	ldr	x0, [sp, #72]
  418674:	ldr	x2, [sp, #24]
  418678:	mov	x1, x0
  41867c:	ldr	x0, [sp, #40]
  418680:	bl	425b04 <bus_seat_method_terminate>
  418684:	mov	w1, w0
  418688:	adrp	x0, 460000 <wordlist.10364+0x370>
  41868c:	ldr	x0, [x0, #4024]
  418690:	ldr	x2, [sp, #88]
  418694:	ldr	x0, [x0]
  418698:	eor	x0, x2, x0
  41869c:	cmp	x0, #0x0
  4186a0:	b.eq	4186a8 <method_terminate_seat+0x158>  // b.none
  4186a4:	bl	407b20 <__stack_chk_fail@plt>
  4186a8:	mov	w0, w1
  4186ac:	ldp	x29, x30, [sp], #96
  4186b0:	ret

00000000004186b4 <method_set_user_linger>:
  4186b4:	stp	x29, x30, [sp, #-208]!
  4186b8:	mov	x29, sp
  4186bc:	str	x19, [sp, #16]
  4186c0:	str	x0, [x29, #56]
  4186c4:	str	x1, [x29, #48]
  4186c8:	str	x2, [x29, #40]
  4186cc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4186d0:	ldr	x0, [x0, #4024]
  4186d4:	ldr	x1, [x0]
  4186d8:	str	x1, [x29, #200]
  4186dc:	mov	x1, #0x0                   	// #0
  4186e0:	str	xzr, [x29, #88]
  4186e4:	str	xzr, [x29, #96]
  4186e8:	ldr	x0, [x29, #48]
  4186ec:	str	x0, [x29, #136]
  4186f0:	ldr	x0, [x29, #56]
  4186f4:	cmp	x0, #0x0
  4186f8:	cset	w0, eq  // eq = none
  4186fc:	and	w0, w0, #0xff
  418700:	and	x0, x0, #0xff
  418704:	cmp	x0, #0x0
  418708:	b.eq	418734 <method_set_user_linger+0x80>  // b.none
  41870c:	adrp	x0, 43e000 <__func__.12250+0x440>
  418710:	add	x1, x0, #0xb5b
  418714:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418718:	add	x4, x0, #0xaf0
  41871c:	mov	w3, #0x4bd                 	// #1213
  418720:	mov	x2, x1
  418724:	adrp	x0, 43e000 <__func__.12250+0x440>
  418728:	add	x1, x0, #0xd78
  41872c:	mov	w0, #0x0                   	// #0
  418730:	bl	407650 <log_assert_failed_realm@plt>
  418734:	ldr	x0, [x29, #136]
  418738:	cmp	x0, #0x0
  41873c:	cset	w0, eq  // eq = none
  418740:	and	w0, w0, #0xff
  418744:	and	x0, x0, #0xff
  418748:	cmp	x0, #0x0
  41874c:	b.eq	418778 <method_set_user_linger+0xc4>  // b.none
  418750:	adrp	x0, 43e000 <__func__.12250+0x440>
  418754:	add	x1, x0, #0xb5b
  418758:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41875c:	add	x4, x0, #0xaf0
  418760:	mov	w3, #0x4be                 	// #1214
  418764:	mov	x2, x1
  418768:	adrp	x0, 43e000 <__func__.12250+0x440>
  41876c:	add	x1, x0, #0xb78
  418770:	mov	w0, #0x0                   	// #0
  418774:	bl	407650 <log_assert_failed_realm@plt>
  418778:	add	x2, x29, #0x48
  41877c:	add	x1, x29, #0x44
  418780:	add	x0, x29, #0x4c
  418784:	mov	x4, x2
  418788:	mov	x3, x1
  41878c:	mov	x2, x0
  418790:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418794:	add	x1, x0, #0x228
  418798:	ldr	x0, [x29, #56]
  41879c:	bl	407660 <sd_bus_message_read@plt>
  4187a0:	str	w0, [x29, #84]
  4187a4:	ldr	w0, [x29, #84]
  4187a8:	cmp	w0, #0x0
  4187ac:	b.ge	4187b8 <method_set_user_linger+0x104>  // b.tcont
  4187b0:	ldr	w19, [x29, #84]
  4187b4:	b	418bec <method_set_user_linger+0x538>
  4187b8:	add	x0, x29, #0x58
  4187bc:	mov	x2, x0
  4187c0:	mov	x1, #0x10                  	// #16
  4187c4:	movk	x1, #0x40, lsl #16
  4187c8:	movk	x1, #0x8000, lsl #48
  4187cc:	ldr	x0, [x29, #56]
  4187d0:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  4187d4:	str	w0, [x29, #84]
  4187d8:	ldr	w0, [x29, #84]
  4187dc:	cmp	w0, #0x0
  4187e0:	b.ge	4187ec <method_set_user_linger+0x138>  // b.tcont
  4187e4:	ldr	w19, [x29, #84]
  4187e8:	b	418bec <method_set_user_linger+0x538>
  4187ec:	ldr	w0, [x29, #76]
  4187f0:	bl	407850 <uid_is_valid@plt>
  4187f4:	and	w0, w0, #0xff
  4187f8:	eor	w0, w0, #0x1
  4187fc:	and	w0, w0, #0xff
  418800:	cmp	w0, #0x0
  418804:	b.eq	41882c <method_set_user_linger+0x178>  // b.none
  418808:	ldr	x0, [x29, #88]
  41880c:	add	x1, x29, #0x4c
  418810:	bl	407e40 <sd_bus_creds_get_owner_uid@plt>
  418814:	str	w0, [x29, #84]
  418818:	ldr	w0, [x29, #84]
  41881c:	cmp	w0, #0x0
  418820:	b.ge	41882c <method_set_user_linger+0x178>  // b.tcont
  418824:	ldr	w19, [x29, #84]
  418828:	b	418bec <method_set_user_linger+0x538>
  41882c:	ldr	x0, [x29, #88]
  418830:	add	x1, x29, #0x50
  418834:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  418838:	str	w0, [x29, #84]
  41883c:	ldr	w0, [x29, #84]
  418840:	cmp	w0, #0x0
  418844:	b.ge	418850 <method_set_user_linger+0x19c>  // b.tcont
  418848:	ldr	w19, [x29, #84]
  41884c:	b	418bec <method_set_user_linger+0x538>
  418850:	bl	407960 <__errno_location@plt>
  418854:	str	wzr, [x0]
  418858:	ldr	w0, [x29, #76]
  41885c:	bl	407420 <getpwuid@plt>
  418860:	str	x0, [x29, #144]
  418864:	ldr	x0, [x29, #144]
  418868:	cmp	x0, #0x0
  41886c:	b.ne	418880 <method_set_user_linger+0x1cc>  // b.any
  418870:	mov	w0, #0x2                   	// #2
  418874:	bl	414138 <errno_or_else>
  418878:	mov	w19, w0
  41887c:	b	418bec <method_set_user_linger+0x538>
  418880:	ldr	w1, [x29, #76]
  418884:	ldr	w0, [x29, #80]
  418888:	cmp	w1, w0
  41888c:	b.ne	41889c <method_set_user_linger+0x1e8>  // b.any
  418890:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418894:	add	x0, x0, #0x230
  418898:	b	4188a4 <method_set_user_linger+0x1f0>
  41889c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4188a0:	add	x0, x0, #0x258
  4188a4:	ldr	w1, [x29, #72]
  4188a8:	cmp	w1, #0x0
  4188ac:	cset	w1, ne  // ne = any
  4188b0:	and	w2, w1, #0xff
  4188b4:	ldr	x1, [x29, #136]
  4188b8:	add	x1, x1, #0x1b0
  4188bc:	ldr	x7, [x29, #40]
  4188c0:	mov	x6, x1
  4188c4:	mov	w5, #0xffffffff            	// #-1
  4188c8:	mov	w4, w2
  4188cc:	mov	x3, #0x0                   	// #0
  4188d0:	mov	x2, x0
  4188d4:	mov	w1, #0x15                  	// #21
  4188d8:	ldr	x0, [x29, #56]
  4188dc:	bl	408350 <bus_verify_polkit_async@plt>
  4188e0:	str	w0, [x29, #84]
  4188e4:	ldr	w0, [x29, #84]
  4188e8:	cmp	w0, #0x0
  4188ec:	b.ge	4188f8 <method_set_user_linger+0x244>  // b.tcont
  4188f0:	ldr	w19, [x29, #84]
  4188f4:	b	418bec <method_set_user_linger+0x538>
  4188f8:	ldr	w0, [x29, #84]
  4188fc:	cmp	w0, #0x0
  418900:	b.ne	41890c <method_set_user_linger+0x258>  // b.any
  418904:	mov	w19, #0x1                   	// #1
  418908:	b	418bec <method_set_user_linger+0x538>
  41890c:	mov	w1, #0x1ed                 	// #493
  418910:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418914:	add	x0, x0, #0x280
  418918:	bl	407be0 <mkdir_p_label@plt>
  41891c:	mov	w4, #0x2                   	// #2
  418920:	mov	w3, #0x0                   	// #0
  418924:	mov	w2, #0x0                   	// #0
  418928:	mov	w1, #0x1ed                 	// #493
  41892c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418930:	add	x0, x0, #0x298
  418934:	bl	407ab0 <mkdir_safe_label@plt>
  418938:	str	w0, [x29, #84]
  41893c:	ldr	w0, [x29, #84]
  418940:	cmp	w0, #0x0
  418944:	b.ge	418950 <method_set_user_linger+0x29c>  // b.tcont
  418948:	ldr	w19, [x29, #84]
  41894c:	b	418bec <method_set_user_linger+0x538>
  418950:	ldr	x0, [x29, #144]
  418954:	ldr	x0, [x0]
  418958:	bl	407320 <cescape@plt>
  41895c:	str	x0, [x29, #96]
  418960:	ldr	x0, [x29, #96]
  418964:	cmp	x0, #0x0
  418968:	b.ne	418974 <method_set_user_linger+0x2c0>  // b.any
  41896c:	mov	w19, #0xfffffff4            	// #-12
  418970:	b	418bec <method_set_user_linger+0x538>
  418974:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418978:	add	x0, x0, #0x2b0
  41897c:	str	x0, [x29, #184]
  418980:	ldr	x0, [x29, #96]
  418984:	str	x0, [x29, #192]
  418988:	str	xzr, [x29, #120]
  41898c:	str	xzr, [x29, #128]
  418990:	b	4189c4 <method_set_user_linger+0x310>
  418994:	ldr	x0, [x29, #128]
  418998:	lsl	x0, x0, #3
  41899c:	add	x1, x29, #0xb8
  4189a0:	ldr	x0, [x1, x0]
  4189a4:	bl	4082f0 <strlen@plt>
  4189a8:	mov	x1, x0
  4189ac:	ldr	x0, [x29, #120]
  4189b0:	add	x0, x0, x1
  4189b4:	str	x0, [x29, #120]
  4189b8:	ldr	x0, [x29, #128]
  4189bc:	add	x0, x0, #0x1
  4189c0:	str	x0, [x29, #128]
  4189c4:	ldr	x0, [x29, #128]
  4189c8:	cmp	x0, #0x1
  4189cc:	b.hi	4189e8 <method_set_user_linger+0x334>  // b.pmore
  4189d0:	ldr	x0, [x29, #128]
  4189d4:	lsl	x0, x0, #3
  4189d8:	add	x1, x29, #0xb8
  4189dc:	ldr	x0, [x1, x0]
  4189e0:	cmp	x0, #0x0
  4189e4:	b.ne	418994 <method_set_user_linger+0x2e0>  // b.any
  4189e8:	ldr	x0, [x29, #120]
  4189ec:	add	x0, x0, #0x1
  4189f0:	str	x0, [x29, #152]
  4189f4:	ldr	x1, [x29, #152]
  4189f8:	mov	x0, #0x1                   	// #1
  4189fc:	bl	413ce8 <size_multiply_overflow>
  418a00:	and	w0, w0, #0xff
  418a04:	and	x0, x0, #0xff
  418a08:	cmp	x0, #0x0
  418a0c:	b.eq	418a38 <method_set_user_linger+0x384>  // b.none
  418a10:	adrp	x0, 43e000 <__func__.12250+0x440>
  418a14:	add	x1, x0, #0xb5b
  418a18:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418a1c:	add	x4, x0, #0xaf0
  418a20:	mov	w3, #0x4f3                 	// #1267
  418a24:	mov	x2, x1
  418a28:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418a2c:	add	x1, x0, #0x2d0
  418a30:	mov	w0, #0x0                   	// #0
  418a34:	bl	407650 <log_assert_failed_realm@plt>
  418a38:	ldr	x0, [x29, #152]
  418a3c:	cmp	x0, #0x400, lsl #12
  418a40:	cset	w0, hi  // hi = pmore
  418a44:	and	w0, w0, #0xff
  418a48:	and	x0, x0, #0xff
  418a4c:	cmp	x0, #0x0
  418a50:	b.eq	418a7c <method_set_user_linger+0x3c8>  // b.none
  418a54:	adrp	x0, 43e000 <__func__.12250+0x440>
  418a58:	add	x1, x0, #0xb5b
  418a5c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418a60:	add	x4, x0, #0xaf0
  418a64:	mov	w3, #0x4f3                 	// #1267
  418a68:	mov	x2, x1
  418a6c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418a70:	add	x1, x0, #0x300
  418a74:	mov	w0, #0x0                   	// #0
  418a78:	bl	407650 <log_assert_failed_realm@plt>
  418a7c:	ldr	x0, [x29, #152]
  418a80:	add	x0, x0, #0xf
  418a84:	lsr	x0, x0, #4
  418a88:	lsl	x0, x0, #4
  418a8c:	sub	sp, sp, x0
  418a90:	mov	x0, sp
  418a94:	add	x0, x0, #0xf
  418a98:	lsr	x0, x0, #4
  418a9c:	lsl	x0, x0, #4
  418aa0:	str	x0, [x29, #160]
  418aa4:	ldr	x0, [x29, #160]
  418aa8:	str	x0, [x29, #112]
  418aac:	str	xzr, [x29, #128]
  418ab0:	b	418ae0 <method_set_user_linger+0x42c>
  418ab4:	ldr	x0, [x29, #128]
  418ab8:	lsl	x0, x0, #3
  418abc:	add	x1, x29, #0xb8
  418ac0:	ldr	x0, [x1, x0]
  418ac4:	mov	x1, x0
  418ac8:	ldr	x0, [x29, #112]
  418acc:	bl	407160 <stpcpy@plt>
  418ad0:	str	x0, [x29, #112]
  418ad4:	ldr	x0, [x29, #128]
  418ad8:	add	x0, x0, #0x1
  418adc:	str	x0, [x29, #128]
  418ae0:	ldr	x0, [x29, #128]
  418ae4:	cmp	x0, #0x1
  418ae8:	b.hi	418b04 <method_set_user_linger+0x450>  // b.pmore
  418aec:	ldr	x0, [x29, #128]
  418af0:	lsl	x0, x0, #3
  418af4:	add	x1, x29, #0xb8
  418af8:	ldr	x0, [x1, x0]
  418afc:	cmp	x0, #0x0
  418b00:	b.ne	418ab4 <method_set_user_linger+0x400>  // b.any
  418b04:	ldr	x0, [x29, #112]
  418b08:	strb	wzr, [x0]
  418b0c:	ldr	x0, [x29, #160]
  418b10:	str	x0, [x29, #168]
  418b14:	ldr	w0, [x29, #68]
  418b18:	cmp	w0, #0x0
  418b1c:	b.eq	418b6c <method_set_user_linger+0x4b8>  // b.none
  418b20:	ldr	x0, [x29, #168]
  418b24:	bl	407910 <touch@plt>
  418b28:	str	w0, [x29, #84]
  418b2c:	ldr	w0, [x29, #84]
  418b30:	cmp	w0, #0x0
  418b34:	b.ge	418b40 <method_set_user_linger+0x48c>  // b.tcont
  418b38:	ldr	w19, [x29, #84]
  418b3c:	b	418bec <method_set_user_linger+0x538>
  418b40:	ldr	w0, [x29, #76]
  418b44:	add	x1, x29, #0x68
  418b48:	mov	x2, x1
  418b4c:	mov	w1, w0
  418b50:	ldr	x0, [x29, #136]
  418b54:	bl	41178c <manager_add_user_by_uid>
  418b58:	cmp	w0, #0x0
  418b5c:	b.lt	418bdc <method_set_user_linger+0x528>  // b.tstop
  418b60:	ldr	x0, [x29, #104]
  418b64:	bl	437790 <user_start>
  418b68:	b	418bdc <method_set_user_linger+0x528>
  418b6c:	ldr	x0, [x29, #168]
  418b70:	bl	4070c0 <unlink@plt>
  418b74:	str	w0, [x29, #84]
  418b78:	ldr	w0, [x29, #84]
  418b7c:	cmp	w0, #0x0
  418b80:	b.ge	418ba4 <method_set_user_linger+0x4f0>  // b.tcont
  418b84:	bl	407960 <__errno_location@plt>
  418b88:	ldr	w0, [x0]
  418b8c:	cmp	w0, #0x2
  418b90:	b.eq	418ba4 <method_set_user_linger+0x4f0>  // b.none
  418b94:	bl	407960 <__errno_location@plt>
  418b98:	ldr	w0, [x0]
  418b9c:	neg	w19, w0
  418ba0:	b	418bec <method_set_user_linger+0x538>
  418ba4:	ldr	x0, [x29, #136]
  418ba8:	ldr	x2, [x0, #48]
  418bac:	ldr	w0, [x29, #76]
  418bb0:	mov	w0, w0
  418bb4:	add	x0, x0, #0x1
  418bb8:	mov	x1, x0
  418bbc:	mov	x0, x2
  418bc0:	bl	413fc4 <hashmap_get>
  418bc4:	str	x0, [x29, #176]
  418bc8:	ldr	x0, [x29, #176]
  418bcc:	cmp	x0, #0x0
  418bd0:	b.eq	418bdc <method_set_user_linger+0x528>  // b.none
  418bd4:	ldr	x0, [x29, #176]
  418bd8:	bl	438778 <user_add_to_gc_queue>
  418bdc:	mov	x1, #0x0                   	// #0
  418be0:	ldr	x0, [x29, #56]
  418be4:	bl	4070e0 <sd_bus_reply_method_return@plt>
  418be8:	mov	w19, w0
  418bec:	add	x0, x29, #0x60
  418bf0:	bl	413cc4 <freep>
  418bf4:	add	x0, x29, #0x58
  418bf8:	bl	413f90 <sd_bus_creds_unrefp>
  418bfc:	mov	w1, w19
  418c00:	adrp	x0, 460000 <wordlist.10364+0x370>
  418c04:	ldr	x0, [x0, #4024]
  418c08:	ldr	x2, [x29, #200]
  418c0c:	ldr	x0, [x0]
  418c10:	eor	x0, x2, x0
  418c14:	cmp	x0, #0x0
  418c18:	b.eq	418c20 <method_set_user_linger+0x56c>  // b.none
  418c1c:	bl	407b20 <__stack_chk_fail@plt>
  418c20:	mov	w0, w1
  418c24:	mov	sp, x29
  418c28:	ldr	x19, [sp, #16]
  418c2c:	ldp	x29, x30, [sp], #208
  418c30:	ret

0000000000418c34 <trigger_device>:
  418c34:	stp	x29, x30, [sp, #-96]!
  418c38:	mov	x29, sp
  418c3c:	stp	x19, x20, [sp, #16]
  418c40:	str	x0, [sp, #40]
  418c44:	str	x1, [sp, #32]
  418c48:	adrp	x0, 460000 <wordlist.10364+0x370>
  418c4c:	ldr	x0, [x0, #4024]
  418c50:	ldr	x1, [x0]
  418c54:	str	x1, [sp, #88]
  418c58:	mov	x1, #0x0                   	// #0
  418c5c:	str	xzr, [sp, #64]
  418c60:	ldr	x0, [sp, #40]
  418c64:	cmp	x0, #0x0
  418c68:	cset	w0, eq  // eq = none
  418c6c:	and	w0, w0, #0xff
  418c70:	and	x0, x0, #0xff
  418c74:	cmp	x0, #0x0
  418c78:	b.eq	418ca4 <trigger_device+0x70>  // b.none
  418c7c:	adrp	x0, 43e000 <__func__.12250+0x440>
  418c80:	add	x1, x0, #0xb5b
  418c84:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418c88:	add	x4, x0, #0xb08
  418c8c:	mov	w3, #0x511                 	// #1297
  418c90:	mov	x2, x1
  418c94:	adrp	x0, 43e000 <__func__.12250+0x440>
  418c98:	add	x1, x0, #0xb78
  418c9c:	mov	w0, #0x0                   	// #0
  418ca0:	bl	407650 <log_assert_failed_realm@plt>
  418ca4:	add	x0, sp, #0x40
  418ca8:	bl	4072c0 <sd_device_enumerator_new@plt>
  418cac:	str	w0, [sp, #60]
  418cb0:	ldr	w0, [sp, #60]
  418cb4:	cmp	w0, #0x0
  418cb8:	b.ge	418cc4 <trigger_device+0x90>  // b.tcont
  418cbc:	ldr	w19, [sp, #60]
  418cc0:	b	418dd0 <trigger_device+0x19c>
  418cc4:	ldr	x0, [sp, #64]
  418cc8:	bl	4083a0 <sd_device_enumerator_allow_uninitialized@plt>
  418ccc:	str	w0, [sp, #60]
  418cd0:	ldr	w0, [sp, #60]
  418cd4:	cmp	w0, #0x0
  418cd8:	b.ge	418ce4 <trigger_device+0xb0>  // b.tcont
  418cdc:	ldr	w19, [sp, #60]
  418ce0:	b	418dd0 <trigger_device+0x19c>
  418ce4:	ldr	x0, [sp, #32]
  418ce8:	cmp	x0, #0x0
  418cec:	b.eq	418d14 <trigger_device+0xe0>  // b.none
  418cf0:	ldr	x0, [sp, #64]
  418cf4:	ldr	x1, [sp, #32]
  418cf8:	bl	407900 <sd_device_enumerator_add_match_parent@plt>
  418cfc:	str	w0, [sp, #60]
  418d00:	ldr	w0, [sp, #60]
  418d04:	cmp	w0, #0x0
  418d08:	b.ge	418d14 <trigger_device+0xe0>  // b.tcont
  418d0c:	ldr	w19, [sp, #60]
  418d10:	b	418dd0 <trigger_device+0x19c>
  418d14:	ldr	x0, [sp, #64]
  418d18:	bl	407470 <sd_device_enumerator_get_device_first@plt>
  418d1c:	str	x0, [sp, #32]
  418d20:	b	418dc0 <trigger_device+0x18c>
  418d24:	str	xzr, [sp, #72]
  418d28:	add	x0, sp, #0x50
  418d2c:	mov	x1, x0
  418d30:	ldr	x0, [sp, #32]
  418d34:	bl	408320 <sd_device_get_syspath@plt>
  418d38:	str	w0, [sp, #60]
  418d3c:	ldr	w0, [sp, #60]
  418d40:	cmp	w0, #0x0
  418d44:	b.ge	418d54 <trigger_device+0x120>  // b.tcont
  418d48:	ldr	w19, [sp, #60]
  418d4c:	mov	w20, #0x0                   	// #0
  418d50:	b	418da4 <trigger_device+0x170>
  418d54:	ldr	x3, [sp, #80]
  418d58:	mov	x2, #0xffffffffffffffff    	// #-1
  418d5c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418d60:	add	x1, x0, #0x320
  418d64:	mov	x0, x3
  418d68:	bl	407bb0 <path_join_internal@plt>
  418d6c:	str	x0, [sp, #72]
  418d70:	ldr	x0, [sp, #72]
  418d74:	cmp	x0, #0x0
  418d78:	b.ne	418d88 <trigger_device+0x154>  // b.any
  418d7c:	mov	w19, #0xfffffff4            	// #-12
  418d80:	mov	w20, #0x0                   	// #0
  418d84:	b	418da4 <trigger_device+0x170>
  418d88:	ldr	x3, [sp, #72]
  418d8c:	mov	w2, #0x20                  	// #32
  418d90:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418d94:	add	x1, x0, #0x328
  418d98:	mov	x0, x3
  418d9c:	bl	414108 <write_string_file>
  418da0:	mov	w20, #0x1                   	// #1
  418da4:	add	x0, sp, #0x48
  418da8:	bl	413cc4 <freep>
  418dac:	cmp	w20, #0x1
  418db0:	b.ne	418dd0 <trigger_device+0x19c>  // b.any
  418db4:	ldr	x0, [sp, #64]
  418db8:	bl	407c50 <sd_device_enumerator_get_device_next@plt>
  418dbc:	str	x0, [sp, #32]
  418dc0:	ldr	x0, [sp, #32]
  418dc4:	cmp	x0, #0x0
  418dc8:	b.ne	418d24 <trigger_device+0xf0>  // b.any
  418dcc:	mov	w19, #0x0                   	// #0
  418dd0:	add	x0, sp, #0x40
  418dd4:	bl	413c70 <sd_device_enumerator_unrefp>
  418dd8:	mov	w1, w19
  418ddc:	adrp	x0, 460000 <wordlist.10364+0x370>
  418de0:	ldr	x0, [x0, #4024]
  418de4:	ldr	x2, [sp, #88]
  418de8:	ldr	x0, [x0]
  418dec:	eor	x0, x2, x0
  418df0:	cmp	x0, #0x0
  418df4:	b.eq	418dfc <trigger_device+0x1c8>  // b.none
  418df8:	bl	407b20 <__stack_chk_fail@plt>
  418dfc:	mov	w0, w1
  418e00:	ldp	x19, x20, [sp, #16]
  418e04:	ldp	x29, x30, [sp], #96
  418e08:	ret

0000000000418e0c <attach_device>:
  418e0c:	stp	x29, x30, [sp, #-112]!
  418e10:	mov	x29, sp
  418e14:	str	x19, [sp, #16]
  418e18:	str	x0, [sp, #56]
  418e1c:	str	x1, [sp, #48]
  418e20:	str	x2, [sp, #40]
  418e24:	adrp	x0, 460000 <wordlist.10364+0x370>
  418e28:	ldr	x0, [x0, #4024]
  418e2c:	ldr	x1, [x0]
  418e30:	str	x1, [sp, #104]
  418e34:	mov	x1, #0x0                   	// #0
  418e38:	str	xzr, [sp, #72]
  418e3c:	str	xzr, [sp, #80]
  418e40:	str	xzr, [sp, #88]
  418e44:	ldr	x0, [sp, #56]
  418e48:	cmp	x0, #0x0
  418e4c:	cset	w0, eq  // eq = none
  418e50:	and	w0, w0, #0xff
  418e54:	and	x0, x0, #0xff
  418e58:	cmp	x0, #0x0
  418e5c:	b.eq	418e88 <attach_device+0x7c>  // b.none
  418e60:	adrp	x0, 43e000 <__func__.12250+0x440>
  418e64:	add	x1, x0, #0xb5b
  418e68:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418e6c:	add	x4, x0, #0xb18
  418e70:	mov	w3, #0x539                 	// #1337
  418e74:	mov	x2, x1
  418e78:	adrp	x0, 43e000 <__func__.12250+0x440>
  418e7c:	add	x1, x0, #0xb78
  418e80:	mov	w0, #0x0                   	// #0
  418e84:	bl	407650 <log_assert_failed_realm@plt>
  418e88:	ldr	x0, [sp, #48]
  418e8c:	cmp	x0, #0x0
  418e90:	cset	w0, eq  // eq = none
  418e94:	and	w0, w0, #0xff
  418e98:	and	x0, x0, #0xff
  418e9c:	cmp	x0, #0x0
  418ea0:	b.eq	418ecc <attach_device+0xc0>  // b.none
  418ea4:	adrp	x0, 43e000 <__func__.12250+0x440>
  418ea8:	add	x1, x0, #0xb5b
  418eac:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418eb0:	add	x4, x0, #0xb18
  418eb4:	mov	w3, #0x53a                 	// #1338
  418eb8:	mov	x2, x1
  418ebc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418ec0:	add	x1, x0, #0x330
  418ec4:	mov	w0, #0x0                   	// #0
  418ec8:	bl	407650 <log_assert_failed_realm@plt>
  418ecc:	ldr	x0, [sp, #40]
  418ed0:	cmp	x0, #0x0
  418ed4:	cset	w0, eq  // eq = none
  418ed8:	and	w0, w0, #0xff
  418edc:	and	x0, x0, #0xff
  418ee0:	cmp	x0, #0x0
  418ee4:	b.eq	418f10 <attach_device+0x104>  // b.none
  418ee8:	adrp	x0, 43e000 <__func__.12250+0x440>
  418eec:	add	x1, x0, #0xb5b
  418ef0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  418ef4:	add	x4, x0, #0xb18
  418ef8:	mov	w3, #0x53b                 	// #1339
  418efc:	mov	x2, x1
  418f00:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418f04:	add	x1, x0, #0x338
  418f08:	mov	w0, #0x0                   	// #0
  418f0c:	bl	407650 <log_assert_failed_realm@plt>
  418f10:	add	x0, sp, #0x48
  418f14:	ldr	x1, [sp, #40]
  418f18:	bl	408270 <sd_device_new_from_syspath@plt>
  418f1c:	str	w0, [sp, #68]
  418f20:	ldr	w0, [sp, #68]
  418f24:	cmp	w0, #0x0
  418f28:	b.ge	418f34 <attach_device+0x128>  // b.tcont
  418f2c:	ldr	w19, [sp, #68]
  418f30:	b	419028 <attach_device+0x21c>
  418f34:	ldr	x2, [sp, #72]
  418f38:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418f3c:	add	x1, x0, #0x330
  418f40:	mov	x0, x2
  418f44:	bl	407b60 <sd_device_has_tag@plt>
  418f48:	cmp	w0, #0x0
  418f4c:	b.gt	418f58 <attach_device+0x14c>
  418f50:	mov	w19, #0xffffffed            	// #-19
  418f54:	b	419028 <attach_device+0x21c>
  418f58:	ldr	x3, [sp, #72]
  418f5c:	add	x0, sp, #0x60
  418f60:	mov	x2, x0
  418f64:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418f68:	add	x1, x0, #0x340
  418f6c:	mov	x0, x3
  418f70:	bl	406fd0 <sd_device_get_property_value@plt>
  418f74:	cmp	w0, #0x0
  418f78:	b.ge	418f84 <attach_device+0x178>  // b.tcont
  418f7c:	mov	w19, #0xffffffed            	// #-19
  418f80:	b	419028 <attach_device+0x21c>
  418f84:	ldr	x0, [sp, #96]
  418f88:	add	x3, sp, #0x58
  418f8c:	mov	x2, x0
  418f90:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418f94:	add	x1, x0, #0x350
  418f98:	mov	x0, x3
  418f9c:	bl	408060 <asprintf@plt>
  418fa0:	cmp	w0, #0x0
  418fa4:	b.ge	418fb0 <attach_device+0x1a4>  // b.tcont
  418fa8:	mov	w19, #0xfffffff4            	// #-12
  418fac:	b	419028 <attach_device+0x21c>
  418fb0:	ldr	x0, [sp, #96]
  418fb4:	add	x4, sp, #0x50
  418fb8:	ldr	x3, [sp, #48]
  418fbc:	mov	x2, x0
  418fc0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418fc4:	add	x1, x0, #0x378
  418fc8:	mov	x0, x4
  418fcc:	bl	408060 <asprintf@plt>
  418fd0:	cmp	w0, #0x0
  418fd4:	b.ge	418fe0 <attach_device+0x1d4>  // b.tcont
  418fd8:	mov	w19, #0xfffffff4            	// #-12
  418fdc:	b	419028 <attach_device+0x21c>
  418fe0:	mov	w1, #0x1ed                 	// #493
  418fe4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  418fe8:	add	x0, x0, #0x3b0
  418fec:	bl	407be0 <mkdir_p_label@plt>
  418ff0:	ldr	x0, [sp, #88]
  418ff4:	ldr	x1, [sp, #80]
  418ff8:	bl	4140e0 <write_string_file_atomic_label>
  418ffc:	str	w0, [sp, #68]
  419000:	ldr	w0, [sp, #68]
  419004:	cmp	w0, #0x0
  419008:	b.ge	419014 <attach_device+0x208>  // b.tcont
  41900c:	ldr	w19, [sp, #68]
  419010:	b	419028 <attach_device+0x21c>
  419014:	ldr	x0, [sp, #72]
  419018:	mov	x1, x0
  41901c:	ldr	x0, [sp, #56]
  419020:	bl	418c34 <trigger_device>
  419024:	mov	w19, w0
  419028:	add	x0, sp, #0x58
  41902c:	bl	413cc4 <freep>
  419030:	add	x0, sp, #0x50
  419034:	bl	413cc4 <freep>
  419038:	add	x0, sp, #0x48
  41903c:	bl	413c3c <sd_device_unrefp>
  419040:	mov	w1, w19
  419044:	adrp	x0, 460000 <wordlist.10364+0x370>
  419048:	ldr	x0, [x0, #4024]
  41904c:	ldr	x2, [sp, #104]
  419050:	ldr	x0, [x0]
  419054:	eor	x0, x2, x0
  419058:	cmp	x0, #0x0
  41905c:	b.eq	419064 <attach_device+0x258>  // b.none
  419060:	bl	407b20 <__stack_chk_fail@plt>
  419064:	mov	w0, w1
  419068:	ldr	x19, [sp, #16]
  41906c:	ldp	x29, x30, [sp], #112
  419070:	ret

0000000000419074 <flush_devices>:
  419074:	stp	x29, x30, [sp, #-96]!
  419078:	mov	x29, sp
  41907c:	str	x19, [sp, #16]
  419080:	str	x0, [sp, #40]
  419084:	adrp	x0, 460000 <wordlist.10364+0x370>
  419088:	ldr	x0, [x0, #4024]
  41908c:	ldr	x1, [x0]
  419090:	str	x1, [sp, #88]
  419094:	mov	x1, #0x0                   	// #0
  419098:	ldr	x0, [sp, #40]
  41909c:	cmp	x0, #0x0
  4190a0:	cset	w0, eq  // eq = none
  4190a4:	and	w0, w0, #0xff
  4190a8:	and	x0, x0, #0xff
  4190ac:	cmp	x0, #0x0
  4190b0:	b.eq	4190dc <flush_devices+0x68>  // b.none
  4190b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4190b8:	add	x1, x0, #0xb5b
  4190bc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4190c0:	add	x4, x0, #0xb28
  4190c4:	mov	w3, #0x558                 	// #1368
  4190c8:	mov	x2, x1
  4190cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4190d0:	add	x1, x0, #0xb78
  4190d4:	mov	w0, #0x0                   	// #0
  4190d8:	bl	407650 <log_assert_failed_realm@plt>
  4190dc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4190e0:	add	x0, x0, #0x3b0
  4190e4:	bl	407f50 <opendir@plt>
  4190e8:	str	x0, [sp, #72]
  4190ec:	ldr	x0, [sp, #72]
  4190f0:	cmp	x0, #0x0
  4190f4:	b.ne	419188 <flush_devices+0x114>  // b.any
  4190f8:	bl	407960 <__errno_location@plt>
  4190fc:	ldr	w0, [x0]
  419100:	cmp	w0, #0x2
  419104:	b.eq	419304 <flush_devices+0x290>  // b.none
  419108:	mov	w0, #0x4                   	// #4
  41910c:	str	w0, [sp, #60]
  419110:	bl	407960 <__errno_location@plt>
  419114:	ldr	w0, [x0]
  419118:	str	w0, [sp, #64]
  41911c:	str	wzr, [sp, #68]
  419120:	ldr	w0, [sp, #68]
  419124:	bl	4083e0 <log_get_max_level_realm@plt>
  419128:	mov	w1, w0
  41912c:	ldr	w0, [sp, #60]
  419130:	and	w0, w0, #0x7
  419134:	cmp	w1, w0
  419138:	b.lt	41917c <flush_devices+0x108>  // b.tstop
  41913c:	ldr	w0, [sp, #68]
  419140:	lsl	w1, w0, #10
  419144:	ldr	w0, [sp, #60]
  419148:	orr	w6, w1, w0
  41914c:	adrp	x0, 43e000 <__func__.12250+0x440>
  419150:	add	x1, x0, #0xb5b
  419154:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419158:	add	x5, x0, #0x3c8
  41915c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419160:	add	x4, x0, #0xb38
  419164:	mov	w3, #0x55d                 	// #1373
  419168:	mov	x2, x1
  41916c:	ldr	w1, [sp, #64]
  419170:	mov	w0, w6
  419174:	bl	407d60 <log_internal_realm@plt>
  419178:	b	419304 <flush_devices+0x290>
  41917c:	ldr	w0, [sp, #64]
  419180:	cmp	w0, #0x0
  419184:	b	419304 <flush_devices+0x290>
  419188:	bl	407960 <__errno_location@plt>
  41918c:	str	wzr, [x0]
  419190:	ldr	x0, [sp, #72]
  419194:	bl	407670 <readdir64@plt>
  419198:	str	x0, [sp, #80]
  41919c:	ldr	x0, [sp, #80]
  4191a0:	cmp	x0, #0x0
  4191a4:	b.ne	4191b8 <flush_devices+0x144>  // b.any
  4191a8:	bl	407960 <__errno_location@plt>
  4191ac:	ldr	w0, [x0]
  4191b0:	cmp	w0, #0x0
  4191b4:	b	419304 <flush_devices+0x290>
  4191b8:	ldr	x0, [sp, #72]
  4191bc:	ldr	x1, [sp, #80]
  4191c0:	bl	407540 <dirent_ensure_type@plt>
  4191c4:	ldr	x0, [sp, #80]
  4191c8:	bl	408260 <dirent_is_file@plt>
  4191cc:	and	w0, w0, #0xff
  4191d0:	eor	w0, w0, #0x1
  4191d4:	and	w0, w0, #0xff
  4191d8:	cmp	w0, #0x0
  4191dc:	b.ne	4192d8 <flush_devices+0x264>  // b.any
  4191e0:	ldr	x0, [sp, #80]
  4191e4:	add	x2, x0, #0x13
  4191e8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4191ec:	add	x1, x0, #0x3f0
  4191f0:	mov	x0, x2
  4191f4:	bl	413e8c <startswith>
  4191f8:	cmp	x0, #0x0
  4191fc:	b.eq	4192e0 <flush_devices+0x26c>  // b.none
  419200:	ldr	x0, [sp, #80]
  419204:	add	x2, x0, #0x13
  419208:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41920c:	add	x1, x0, #0x400
  419210:	mov	x0, x2
  419214:	bl	407e90 <endswith@plt>
  419218:	cmp	x0, #0x0
  41921c:	b.eq	4192e8 <flush_devices+0x274>  // b.none
  419220:	ldr	x0, [sp, #72]
  419224:	bl	407620 <dirfd@plt>
  419228:	mov	w3, w0
  41922c:	ldr	x0, [sp, #80]
  419230:	add	x0, x0, #0x13
  419234:	mov	w2, #0x0                   	// #0
  419238:	mov	x1, x0
  41923c:	mov	w0, w3
  419240:	bl	408140 <unlinkat@plt>
  419244:	cmp	w0, #0x0
  419248:	b.ge	4192ec <flush_devices+0x278>  // b.tcont
  41924c:	mov	w0, #0x4                   	// #4
  419250:	str	w0, [sp, #48]
  419254:	bl	407960 <__errno_location@plt>
  419258:	ldr	w0, [x0]
  41925c:	str	w0, [sp, #52]
  419260:	str	wzr, [sp, #56]
  419264:	ldr	w0, [sp, #56]
  419268:	bl	4083e0 <log_get_max_level_realm@plt>
  41926c:	mov	w1, w0
  419270:	ldr	w0, [sp, #48]
  419274:	and	w0, w0, #0x7
  419278:	cmp	w1, w0
  41927c:	b.lt	4192cc <flush_devices+0x258>  // b.tstop
  419280:	ldr	w0, [sp, #56]
  419284:	lsl	w1, w0, #10
  419288:	ldr	w0, [sp, #48]
  41928c:	orr	w7, w1, w0
  419290:	adrp	x0, 43e000 <__func__.12250+0x440>
  419294:	add	x1, x0, #0xb5b
  419298:	ldr	x0, [sp, #80]
  41929c:	add	x0, x0, #0x13
  4192a0:	mov	x6, x0
  4192a4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4192a8:	add	x5, x0, #0x408
  4192ac:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4192b0:	add	x4, x0, #0xb38
  4192b4:	mov	w3, #0x56d                 	// #1389
  4192b8:	mov	x2, x1
  4192bc:	ldr	w1, [sp, #52]
  4192c0:	mov	w0, w7
  4192c4:	bl	407d60 <log_internal_realm@plt>
  4192c8:	b	4192ec <flush_devices+0x278>
  4192cc:	ldr	w0, [sp, #52]
  4192d0:	cmp	w0, #0x0
  4192d4:	b	4192ec <flush_devices+0x278>
  4192d8:	nop
  4192dc:	b	4192ec <flush_devices+0x278>
  4192e0:	nop
  4192e4:	b	4192ec <flush_devices+0x278>
  4192e8:	nop
  4192ec:	bl	407960 <__errno_location@plt>
  4192f0:	str	wzr, [x0]
  4192f4:	ldr	x0, [sp, #72]
  4192f8:	bl	407670 <readdir64@plt>
  4192fc:	str	x0, [sp, #80]
  419300:	b	41919c <flush_devices+0x128>
  419304:	mov	x1, #0x0                   	// #0
  419308:	ldr	x0, [sp, #40]
  41930c:	bl	418c34 <trigger_device>
  419310:	mov	w19, w0
  419314:	add	x0, sp, #0x48
  419318:	bl	4140ac <closedirp>
  41931c:	mov	w1, w19
  419320:	adrp	x0, 460000 <wordlist.10364+0x370>
  419324:	ldr	x0, [x0, #4024]
  419328:	ldr	x2, [sp, #88]
  41932c:	ldr	x0, [x0]
  419330:	eor	x0, x2, x0
  419334:	cmp	x0, #0x0
  419338:	b.eq	419340 <flush_devices+0x2cc>  // b.none
  41933c:	bl	407b20 <__stack_chk_fail@plt>
  419340:	mov	w0, w1
  419344:	ldr	x19, [sp, #16]
  419348:	ldp	x29, x30, [sp], #96
  41934c:	ret

0000000000419350 <method_attach_device>:
  419350:	stp	x29, x30, [sp, #-96]!
  419354:	mov	x29, sp
  419358:	str	x0, [sp, #40]
  41935c:	str	x1, [sp, #32]
  419360:	str	x2, [sp, #24]
  419364:	adrp	x0, 460000 <wordlist.10364+0x370>
  419368:	ldr	x0, [x0, #4024]
  41936c:	ldr	x1, [x0]
  419370:	str	x1, [sp, #88]
  419374:	mov	x1, #0x0                   	// #0
  419378:	ldr	x0, [sp, #32]
  41937c:	str	x0, [sp, #80]
  419380:	ldr	x0, [sp, #40]
  419384:	cmp	x0, #0x0
  419388:	cset	w0, eq  // eq = none
  41938c:	and	w0, w0, #0xff
  419390:	and	x0, x0, #0xff
  419394:	cmp	x0, #0x0
  419398:	b.eq	4193c4 <method_attach_device+0x74>  // b.none
  41939c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4193a0:	add	x1, x0, #0xb5b
  4193a4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4193a8:	add	x4, x0, #0xb48
  4193ac:	mov	w3, #0x579                 	// #1401
  4193b0:	mov	x2, x1
  4193b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4193b8:	add	x1, x0, #0xd78
  4193bc:	mov	w0, #0x0                   	// #0
  4193c0:	bl	407650 <log_assert_failed_realm@plt>
  4193c4:	ldr	x0, [sp, #80]
  4193c8:	cmp	x0, #0x0
  4193cc:	cset	w0, eq  // eq = none
  4193d0:	and	w0, w0, #0xff
  4193d4:	and	x0, x0, #0xff
  4193d8:	cmp	x0, #0x0
  4193dc:	b.eq	419408 <method_attach_device+0xb8>  // b.none
  4193e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4193e4:	add	x1, x0, #0xb5b
  4193e8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4193ec:	add	x4, x0, #0xb48
  4193f0:	mov	w3, #0x57a                 	// #1402
  4193f4:	mov	x2, x1
  4193f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4193fc:	add	x1, x0, #0xb78
  419400:	mov	w0, #0x0                   	// #0
  419404:	bl	407650 <log_assert_failed_realm@plt>
  419408:	add	x2, sp, #0x30
  41940c:	add	x1, sp, #0x38
  419410:	add	x0, sp, #0x40
  419414:	mov	x4, x2
  419418:	mov	x3, x1
  41941c:	mov	x2, x0
  419420:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419424:	add	x1, x0, #0x420
  419428:	ldr	x0, [sp, #40]
  41942c:	bl	407660 <sd_bus_message_read@plt>
  419430:	str	w0, [sp, #52]
  419434:	ldr	w0, [sp, #52]
  419438:	cmp	w0, #0x0
  41943c:	b.ge	419448 <method_attach_device+0xf8>  // b.tcont
  419440:	ldr	w0, [sp, #52]
  419444:	b	419620 <method_attach_device+0x2d0>
  419448:	ldr	x0, [sp, #56]
  41944c:	bl	407790 <path_is_normalized@plt>
  419450:	and	w0, w0, #0xff
  419454:	eor	w0, w0, #0x1
  419458:	and	w0, w0, #0xff
  41945c:	cmp	w0, #0x0
  419460:	b.eq	419488 <method_attach_device+0x138>  // b.none
  419464:	ldr	x0, [sp, #56]
  419468:	mov	x3, x0
  41946c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419470:	add	x2, x0, #0x428
  419474:	adrp	x0, 43e000 <__func__.12250+0x440>
  419478:	add	x1, x0, #0xe48
  41947c:	ldr	x0, [sp, #24]
  419480:	bl	407ae0 <sd_bus_error_setf@plt>
  419484:	b	419620 <method_attach_device+0x2d0>
  419488:	ldr	x2, [sp, #56]
  41948c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419490:	add	x1, x0, #0x448
  419494:	mov	x0, x2
  419498:	bl	4078d0 <path_startswith@plt>
  41949c:	cmp	x0, #0x0
  4194a0:	b.ne	4194c8 <method_attach_device+0x178>  // b.any
  4194a4:	ldr	x0, [sp, #56]
  4194a8:	mov	x3, x0
  4194ac:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4194b0:	add	x2, x0, #0x450
  4194b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4194b8:	add	x1, x0, #0xe48
  4194bc:	ldr	x0, [sp, #24]
  4194c0:	bl	407ae0 <sd_bus_error_setf@plt>
  4194c4:	b	419620 <method_attach_device+0x2d0>
  4194c8:	ldr	x0, [sp, #64]
  4194cc:	bl	4141f8 <SEAT_IS_SELF>
  4194d0:	and	w0, w0, #0xff
  4194d4:	cmp	w0, #0x0
  4194d8:	b.ne	4194f0 <method_attach_device+0x1a0>  // b.any
  4194dc:	ldr	x0, [sp, #64]
  4194e0:	bl	41424c <SEAT_IS_AUTO>
  4194e4:	and	w0, w0, #0xff
  4194e8:	cmp	w0, #0x0
  4194ec:	b.eq	419538 <method_attach_device+0x1e8>  // b.none
  4194f0:	ldr	x0, [sp, #64]
  4194f4:	add	x1, sp, #0x48
  4194f8:	mov	x4, x1
  4194fc:	ldr	x3, [sp, #24]
  419500:	mov	x2, x0
  419504:	ldr	x1, [sp, #40]
  419508:	ldr	x0, [sp, #80]
  41950c:	bl	414844 <manager_get_seat_from_creds>
  419510:	str	w0, [sp, #52]
  419514:	ldr	w0, [sp, #52]
  419518:	cmp	w0, #0x0
  41951c:	b.ge	419528 <method_attach_device+0x1d8>  // b.tcont
  419520:	ldr	w0, [sp, #52]
  419524:	b	419620 <method_attach_device+0x2d0>
  419528:	ldr	x0, [sp, #72]
  41952c:	ldr	x0, [x0, #8]
  419530:	str	x0, [sp, #64]
  419534:	b	419578 <method_attach_device+0x228>
  419538:	ldr	x0, [sp, #64]
  41953c:	bl	42968c <seat_name_is_valid>
  419540:	and	w0, w0, #0xff
  419544:	eor	w0, w0, #0x1
  419548:	and	w0, w0, #0xff
  41954c:	cmp	w0, #0x0
  419550:	b.eq	419578 <method_attach_device+0x228>  // b.none
  419554:	ldr	x0, [sp, #64]
  419558:	mov	x3, x0
  41955c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419560:	add	x2, x0, #0x468
  419564:	adrp	x0, 43e000 <__func__.12250+0x440>
  419568:	add	x1, x0, #0xe48
  41956c:	ldr	x0, [sp, #24]
  419570:	bl	407ae0 <sd_bus_error_setf@plt>
  419574:	b	419620 <method_attach_device+0x2d0>
  419578:	ldr	w0, [sp, #48]
  41957c:	cmp	w0, #0x0
  419580:	cset	w0, ne  // ne = any
  419584:	and	w1, w0, #0xff
  419588:	ldr	x0, [sp, #80]
  41958c:	add	x0, x0, #0x1b0
  419590:	ldr	x7, [sp, #24]
  419594:	mov	x6, x0
  419598:	mov	w5, #0xffffffff            	// #-1
  41959c:	mov	w4, w1
  4195a0:	mov	x3, #0x0                   	// #0
  4195a4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4195a8:	add	x2, x0, #0x488
  4195ac:	mov	w1, #0x15                  	// #21
  4195b0:	ldr	x0, [sp, #40]
  4195b4:	bl	408350 <bus_verify_polkit_async@plt>
  4195b8:	str	w0, [sp, #52]
  4195bc:	ldr	w0, [sp, #52]
  4195c0:	cmp	w0, #0x0
  4195c4:	b.ge	4195d0 <method_attach_device+0x280>  // b.tcont
  4195c8:	ldr	w0, [sp, #52]
  4195cc:	b	419620 <method_attach_device+0x2d0>
  4195d0:	ldr	w0, [sp, #52]
  4195d4:	cmp	w0, #0x0
  4195d8:	b.ne	4195e4 <method_attach_device+0x294>  // b.any
  4195dc:	mov	w0, #0x1                   	// #1
  4195e0:	b	419620 <method_attach_device+0x2d0>
  4195e4:	ldr	x0, [sp, #64]
  4195e8:	ldr	x1, [sp, #56]
  4195ec:	mov	x2, x1
  4195f0:	mov	x1, x0
  4195f4:	ldr	x0, [sp, #80]
  4195f8:	bl	418e0c <attach_device>
  4195fc:	str	w0, [sp, #52]
  419600:	ldr	w0, [sp, #52]
  419604:	cmp	w0, #0x0
  419608:	b.ge	419614 <method_attach_device+0x2c4>  // b.tcont
  41960c:	ldr	w0, [sp, #52]
  419610:	b	419620 <method_attach_device+0x2d0>
  419614:	mov	x1, #0x0                   	// #0
  419618:	ldr	x0, [sp, #40]
  41961c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  419620:	mov	w1, w0
  419624:	adrp	x0, 460000 <wordlist.10364+0x370>
  419628:	ldr	x0, [x0, #4024]
  41962c:	ldr	x2, [sp, #88]
  419630:	ldr	x0, [x0]
  419634:	eor	x0, x2, x0
  419638:	cmp	x0, #0x0
  41963c:	b.eq	419644 <method_attach_device+0x2f4>  // b.none
  419640:	bl	407b20 <__stack_chk_fail@plt>
  419644:	mov	w0, w1
  419648:	ldp	x29, x30, [sp], #96
  41964c:	ret

0000000000419650 <method_flush_devices>:
  419650:	stp	x29, x30, [sp, #-80]!
  419654:	mov	x29, sp
  419658:	str	x0, [sp, #40]
  41965c:	str	x1, [sp, #32]
  419660:	str	x2, [sp, #24]
  419664:	adrp	x0, 460000 <wordlist.10364+0x370>
  419668:	ldr	x0, [x0, #4024]
  41966c:	ldr	x1, [x0]
  419670:	str	x1, [sp, #72]
  419674:	mov	x1, #0x0                   	// #0
  419678:	ldr	x0, [sp, #32]
  41967c:	str	x0, [sp, #64]
  419680:	ldr	x0, [sp, #40]
  419684:	cmp	x0, #0x0
  419688:	cset	w0, eq  // eq = none
  41968c:	and	w0, w0, #0xff
  419690:	and	x0, x0, #0xff
  419694:	cmp	x0, #0x0
  419698:	b.eq	4196c4 <method_flush_devices+0x74>  // b.none
  41969c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4196a0:	add	x1, x0, #0xb5b
  4196a4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4196a8:	add	x4, x0, #0xb60
  4196ac:	mov	w3, #0x5aa                 	// #1450
  4196b0:	mov	x2, x1
  4196b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4196b8:	add	x1, x0, #0xd78
  4196bc:	mov	w0, #0x0                   	// #0
  4196c0:	bl	407650 <log_assert_failed_realm@plt>
  4196c4:	ldr	x0, [sp, #64]
  4196c8:	cmp	x0, #0x0
  4196cc:	cset	w0, eq  // eq = none
  4196d0:	and	w0, w0, #0xff
  4196d4:	and	x0, x0, #0xff
  4196d8:	cmp	x0, #0x0
  4196dc:	b.eq	419708 <method_flush_devices+0xb8>  // b.none
  4196e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4196e4:	add	x1, x0, #0xb5b
  4196e8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4196ec:	add	x4, x0, #0xb60
  4196f0:	mov	w3, #0x5ab                 	// #1451
  4196f4:	mov	x2, x1
  4196f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4196fc:	add	x1, x0, #0xb78
  419700:	mov	w0, #0x0                   	// #0
  419704:	bl	407650 <log_assert_failed_realm@plt>
  419708:	add	x0, sp, #0x38
  41970c:	mov	x2, x0
  419710:	adrp	x0, 43e000 <__func__.12250+0x440>
  419714:	add	x1, x0, #0xd20
  419718:	ldr	x0, [sp, #40]
  41971c:	bl	407660 <sd_bus_message_read@plt>
  419720:	str	w0, [sp, #60]
  419724:	ldr	w0, [sp, #60]
  419728:	cmp	w0, #0x0
  41972c:	b.ge	419738 <method_flush_devices+0xe8>  // b.tcont
  419730:	ldr	w0, [sp, #60]
  419734:	b	4197d0 <method_flush_devices+0x180>
  419738:	ldr	w0, [sp, #56]
  41973c:	cmp	w0, #0x0
  419740:	cset	w0, ne  // ne = any
  419744:	and	w1, w0, #0xff
  419748:	ldr	x0, [sp, #64]
  41974c:	add	x0, x0, #0x1b0
  419750:	ldr	x7, [sp, #24]
  419754:	mov	x6, x0
  419758:	mov	w5, #0xffffffff            	// #-1
  41975c:	mov	w4, w1
  419760:	mov	x3, #0x0                   	// #0
  419764:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419768:	add	x2, x0, #0x4b0
  41976c:	mov	w1, #0x15                  	// #21
  419770:	ldr	x0, [sp, #40]
  419774:	bl	408350 <bus_verify_polkit_async@plt>
  419778:	str	w0, [sp, #60]
  41977c:	ldr	w0, [sp, #60]
  419780:	cmp	w0, #0x0
  419784:	b.ge	419790 <method_flush_devices+0x140>  // b.tcont
  419788:	ldr	w0, [sp, #60]
  41978c:	b	4197d0 <method_flush_devices+0x180>
  419790:	ldr	w0, [sp, #60]
  419794:	cmp	w0, #0x0
  419798:	b.ne	4197a4 <method_flush_devices+0x154>  // b.any
  41979c:	mov	w0, #0x1                   	// #1
  4197a0:	b	4197d0 <method_flush_devices+0x180>
  4197a4:	ldr	x0, [sp, #64]
  4197a8:	bl	419074 <flush_devices>
  4197ac:	str	w0, [sp, #60]
  4197b0:	ldr	w0, [sp, #60]
  4197b4:	cmp	w0, #0x0
  4197b8:	b.ge	4197c4 <method_flush_devices+0x174>  // b.tcont
  4197bc:	ldr	w0, [sp, #60]
  4197c0:	b	4197d0 <method_flush_devices+0x180>
  4197c4:	mov	x1, #0x0                   	// #0
  4197c8:	ldr	x0, [sp, #40]
  4197cc:	bl	4070e0 <sd_bus_reply_method_return@plt>
  4197d0:	mov	w1, w0
  4197d4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4197d8:	ldr	x0, [x0, #4024]
  4197dc:	ldr	x2, [sp, #72]
  4197e0:	ldr	x0, [x0]
  4197e4:	eor	x0, x2, x0
  4197e8:	cmp	x0, #0x0
  4197ec:	b.eq	4197f4 <method_flush_devices+0x1a4>  // b.none
  4197f0:	bl	407b20 <__stack_chk_fail@plt>
  4197f4:	mov	w0, w1
  4197f8:	ldp	x29, x30, [sp], #80
  4197fc:	ret

0000000000419800 <have_multiple_sessions>:
  419800:	stp	x29, x30, [sp, #-64]!
  419804:	mov	x29, sp
  419808:	str	x0, [sp, #24]
  41980c:	str	w1, [sp, #20]
  419810:	adrp	x0, 460000 <wordlist.10364+0x370>
  419814:	ldr	x0, [x0, #4024]
  419818:	ldr	x1, [x0]
  41981c:	str	x1, [sp, #56]
  419820:	mov	x1, #0x0                   	// #0
  419824:	ldr	x0, [sp, #24]
  419828:	cmp	x0, #0x0
  41982c:	cset	w0, eq  // eq = none
  419830:	and	w0, w0, #0xff
  419834:	and	x0, x0, #0xff
  419838:	cmp	x0, #0x0
  41983c:	b.eq	419868 <have_multiple_sessions+0x68>  // b.none
  419840:	adrp	x0, 43e000 <__func__.12250+0x440>
  419844:	add	x1, x0, #0xb5b
  419848:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41984c:	add	x4, x0, #0xb78
  419850:	mov	w3, #0x5cd                 	// #1485
  419854:	mov	x2, x1
  419858:	adrp	x0, 43e000 <__func__.12250+0x440>
  41985c:	add	x1, x0, #0xb78
  419860:	mov	w0, #0x0                   	// #0
  419864:	bl	407650 <log_assert_failed_realm@plt>
  419868:	mov	w0, #0xfffffffe            	// #-2
  41986c:	str	w0, [sp, #40]
  419870:	str	xzr, [sp, #48]
  419874:	b	4198a8 <have_multiple_sessions+0xa8>
  419878:	ldr	x0, [sp, #32]
  41987c:	ldr	w0, [x0, #24]
  419880:	cmp	w0, #0x0
  419884:	b.ne	4198a8 <have_multiple_sessions+0xa8>  // b.any
  419888:	ldr	x0, [sp, #32]
  41988c:	ldr	x0, [x0, #40]
  419890:	ldr	w0, [x0, #8]
  419894:	ldr	w1, [sp, #20]
  419898:	cmp	w1, w0
  41989c:	b.eq	4198a8 <have_multiple_sessions+0xa8>  // b.none
  4198a0:	mov	w0, #0x1                   	// #1
  4198a4:	b	4198d0 <have_multiple_sessions+0xd0>
  4198a8:	ldr	x0, [sp, #24]
  4198ac:	ldr	x0, [x0, #32]
  4198b0:	add	x2, sp, #0x20
  4198b4:	add	x1, sp, #0x28
  4198b8:	mov	x3, #0x0                   	// #0
  4198bc:	bl	41402c <hashmap_iterate>
  4198c0:	and	w0, w0, #0xff
  4198c4:	cmp	w0, #0x0
  4198c8:	b.ne	419878 <have_multiple_sessions+0x78>  // b.any
  4198cc:	mov	w0, #0x0                   	// #0
  4198d0:	mov	w1, w0
  4198d4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4198d8:	ldr	x0, [x0, #4024]
  4198dc:	ldr	x2, [sp, #56]
  4198e0:	ldr	x0, [x0]
  4198e4:	eor	x0, x2, x0
  4198e8:	cmp	x0, #0x0
  4198ec:	b.eq	4198f4 <have_multiple_sessions+0xf4>  // b.none
  4198f0:	bl	407b20 <__stack_chk_fail@plt>
  4198f4:	mov	w0, w1
  4198f8:	ldp	x29, x30, [sp], #64
  4198fc:	ret

0000000000419900 <bus_manager_log_shutdown>:
  419900:	stp	x29, x30, [sp, #-176]!
  419904:	mov	x29, sp
  419908:	sub	sp, sp, #0x10
  41990c:	str	x0, [x29, #24]
  419910:	str	x1, [x29, #16]
  419914:	adrp	x0, 460000 <wordlist.10364+0x370>
  419918:	ldr	x0, [x0, #4024]
  41991c:	ldr	x1, [x0]
  419920:	str	x1, [x29, #168]
  419924:	mov	x1, #0x0                   	// #0
  419928:	ldr	x0, [x29, #24]
  41992c:	cmp	x0, #0x0
  419930:	cset	w0, eq  // eq = none
  419934:	and	w0, w0, #0xff
  419938:	and	x0, x0, #0xff
  41993c:	cmp	x0, #0x0
  419940:	b.eq	41996c <bus_manager_log_shutdown+0x6c>  // b.none
  419944:	adrp	x0, 43e000 <__func__.12250+0x440>
  419948:	add	x1, x0, #0xb5b
  41994c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419950:	add	x4, x0, #0xb90
  419954:	mov	w3, #0x5df                 	// #1503
  419958:	mov	x2, x1
  41995c:	adrp	x0, 43e000 <__func__.12250+0x440>
  419960:	add	x1, x0, #0xb78
  419964:	mov	w0, #0x0                   	// #0
  419968:	bl	407650 <log_assert_failed_realm@plt>
  41996c:	ldr	x0, [x29, #16]
  419970:	cmp	x0, #0x0
  419974:	cset	w0, eq  // eq = none
  419978:	and	w0, w0, #0xff
  41997c:	and	x0, x0, #0xff
  419980:	cmp	x0, #0x0
  419984:	b.eq	4199b0 <bus_manager_log_shutdown+0xb0>  // b.none
  419988:	adrp	x0, 43e000 <__func__.12250+0x440>
  41998c:	add	x1, x0, #0xb5b
  419990:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419994:	add	x4, x0, #0xb90
  419998:	mov	w3, #0x5e0                 	// #1504
  41999c:	mov	x2, x1
  4199a0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4199a4:	add	x1, x0, #0x4d8
  4199a8:	mov	w0, #0x0                   	// #0
  4199ac:	bl	407650 <log_assert_failed_realm@plt>
  4199b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4199b4:	add	x1, x0, #0x4e8
  4199b8:	ldr	x0, [x29, #16]
  4199bc:	bl	407f30 <strcmp@plt>
  4199c0:	cmp	w0, #0x0
  4199c4:	b.ne	4199e4 <bus_manager_log_shutdown+0xe4>  // b.any
  4199c8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4199cc:	add	x0, x0, #0x4f8
  4199d0:	str	x0, [x29, #40]
  4199d4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4199d8:	add	x0, x0, #0x518
  4199dc:	str	x0, [x29, #48]
  4199e0:	b	419a90 <bus_manager_log_shutdown+0x190>
  4199e4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4199e8:	add	x1, x0, #0x530
  4199ec:	ldr	x0, [x29, #16]
  4199f0:	bl	407f30 <strcmp@plt>
  4199f4:	cmp	w0, #0x0
  4199f8:	b.ne	419a18 <bus_manager_log_shutdown+0x118>  // b.any
  4199fc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a00:	add	x0, x0, #0x540
  419a04:	str	x0, [x29, #40]
  419a08:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a0c:	add	x0, x0, #0x560
  419a10:	str	x0, [x29, #48]
  419a14:	b	419a90 <bus_manager_log_shutdown+0x190>
  419a18:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a1c:	add	x1, x0, #0x570
  419a20:	ldr	x0, [x29, #16]
  419a24:	bl	407f30 <strcmp@plt>
  419a28:	cmp	w0, #0x0
  419a2c:	b.ne	419a4c <bus_manager_log_shutdown+0x14c>  // b.any
  419a30:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a34:	add	x0, x0, #0x580
  419a38:	str	x0, [x29, #40]
  419a3c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a40:	add	x0, x0, #0x5a0
  419a44:	str	x0, [x29, #48]
  419a48:	b	419a90 <bus_manager_log_shutdown+0x190>
  419a4c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a50:	add	x1, x0, #0x5b0
  419a54:	ldr	x0, [x29, #16]
  419a58:	bl	407f30 <strcmp@plt>
  419a5c:	cmp	w0, #0x0
  419a60:	b.ne	419a80 <bus_manager_log_shutdown+0x180>  // b.any
  419a64:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a68:	add	x0, x0, #0x5c0
  419a6c:	str	x0, [x29, #40]
  419a70:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a74:	add	x0, x0, #0x5e8
  419a78:	str	x0, [x29, #48]
  419a7c:	b	419a90 <bus_manager_log_shutdown+0x190>
  419a80:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419a84:	add	x0, x0, #0x5f8
  419a88:	str	x0, [x29, #40]
  419a8c:	str	xzr, [x29, #48]
  419a90:	ldr	x0, [x29, #24]
  419a94:	ldr	x0, [x0, #336]
  419a98:	bl	413e18 <isempty>
  419a9c:	and	w0, w0, #0xff
  419aa0:	cmp	w0, #0x0
  419aa4:	b.eq	419c4c <bus_manager_log_shutdown+0x34c>  // b.none
  419aa8:	ldr	x0, [x29, #40]
  419aac:	str	x0, [x29, #136]
  419ab0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419ab4:	add	x0, x0, #0x618
  419ab8:	str	x0, [x29, #144]
  419abc:	str	xzr, [x29, #64]
  419ac0:	str	xzr, [x29, #72]
  419ac4:	b	419af8 <bus_manager_log_shutdown+0x1f8>
  419ac8:	ldr	x0, [x29, #72]
  419acc:	lsl	x0, x0, #3
  419ad0:	add	x1, x29, #0x88
  419ad4:	ldr	x0, [x1, x0]
  419ad8:	bl	4082f0 <strlen@plt>
  419adc:	mov	x1, x0
  419ae0:	ldr	x0, [x29, #64]
  419ae4:	add	x0, x0, x1
  419ae8:	str	x0, [x29, #64]
  419aec:	ldr	x0, [x29, #72]
  419af0:	add	x0, x0, #0x1
  419af4:	str	x0, [x29, #72]
  419af8:	ldr	x0, [x29, #72]
  419afc:	cmp	x0, #0x1
  419b00:	b.hi	419b1c <bus_manager_log_shutdown+0x21c>  // b.pmore
  419b04:	ldr	x0, [x29, #72]
  419b08:	lsl	x0, x0, #3
  419b0c:	add	x1, x29, #0x88
  419b10:	ldr	x0, [x1, x0]
  419b14:	cmp	x0, #0x0
  419b18:	b.ne	419ac8 <bus_manager_log_shutdown+0x1c8>  // b.any
  419b1c:	ldr	x0, [x29, #64]
  419b20:	add	x0, x0, #0x1
  419b24:	str	x0, [x29, #120]
  419b28:	ldr	x1, [x29, #120]
  419b2c:	mov	x0, #0x1                   	// #1
  419b30:	bl	413ce8 <size_multiply_overflow>
  419b34:	and	w0, w0, #0xff
  419b38:	and	x0, x0, #0xff
  419b3c:	cmp	x0, #0x0
  419b40:	b.eq	419b6c <bus_manager_log_shutdown+0x26c>  // b.none
  419b44:	adrp	x0, 43e000 <__func__.12250+0x440>
  419b48:	add	x1, x0, #0xb5b
  419b4c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419b50:	add	x4, x0, #0xb90
  419b54:	mov	w3, #0x5f4                 	// #1524
  419b58:	mov	x2, x1
  419b5c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419b60:	add	x1, x0, #0x2d0
  419b64:	mov	w0, #0x0                   	// #0
  419b68:	bl	407650 <log_assert_failed_realm@plt>
  419b6c:	ldr	x0, [x29, #120]
  419b70:	cmp	x0, #0x400, lsl #12
  419b74:	cset	w0, hi  // hi = pmore
  419b78:	and	w0, w0, #0xff
  419b7c:	and	x0, x0, #0xff
  419b80:	cmp	x0, #0x0
  419b84:	b.eq	419bb0 <bus_manager_log_shutdown+0x2b0>  // b.none
  419b88:	adrp	x0, 43e000 <__func__.12250+0x440>
  419b8c:	add	x1, x0, #0xb5b
  419b90:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419b94:	add	x4, x0, #0xb90
  419b98:	mov	w3, #0x5f4                 	// #1524
  419b9c:	mov	x2, x1
  419ba0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419ba4:	add	x1, x0, #0x300
  419ba8:	mov	w0, #0x0                   	// #0
  419bac:	bl	407650 <log_assert_failed_realm@plt>
  419bb0:	ldr	x0, [x29, #120]
  419bb4:	add	x0, x0, #0xf
  419bb8:	lsr	x0, x0, #4
  419bbc:	lsl	x0, x0, #4
  419bc0:	sub	sp, sp, x0
  419bc4:	add	x0, sp, #0x10
  419bc8:	add	x0, x0, #0xf
  419bcc:	lsr	x0, x0, #4
  419bd0:	lsl	x0, x0, #4
  419bd4:	str	x0, [x29, #128]
  419bd8:	ldr	x0, [x29, #128]
  419bdc:	str	x0, [x29, #56]
  419be0:	str	xzr, [x29, #72]
  419be4:	b	419c14 <bus_manager_log_shutdown+0x314>
  419be8:	ldr	x0, [x29, #72]
  419bec:	lsl	x0, x0, #3
  419bf0:	add	x1, x29, #0x88
  419bf4:	ldr	x0, [x1, x0]
  419bf8:	mov	x1, x0
  419bfc:	ldr	x0, [x29, #56]
  419c00:	bl	407160 <stpcpy@plt>
  419c04:	str	x0, [x29, #56]
  419c08:	ldr	x0, [x29, #72]
  419c0c:	add	x0, x0, #0x1
  419c10:	str	x0, [x29, #72]
  419c14:	ldr	x0, [x29, #72]
  419c18:	cmp	x0, #0x1
  419c1c:	b.hi	419c38 <bus_manager_log_shutdown+0x338>  // b.pmore
  419c20:	ldr	x0, [x29, #72]
  419c24:	lsl	x0, x0, #3
  419c28:	add	x1, x29, #0x88
  419c2c:	ldr	x0, [x1, x0]
  419c30:	cmp	x0, #0x0
  419c34:	b.ne	419be8 <bus_manager_log_shutdown+0x2e8>  // b.any
  419c38:	ldr	x0, [x29, #56]
  419c3c:	strb	wzr, [x0]
  419c40:	ldr	x0, [x29, #128]
  419c44:	str	x0, [x29, #40]
  419c48:	b	419e24 <bus_manager_log_shutdown+0x524>
  419c4c:	add	x0, x29, #0xb8
  419c50:	sub	x0, x0, #0x30
  419c54:	ldr	x1, [x29, #40]
  419c58:	str	x1, [x0]
  419c5c:	add	x0, x29, #0xb8
  419c60:	sub	x0, x0, #0x30
  419c64:	adrp	x1, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419c68:	add	x1, x1, #0x620
  419c6c:	str	x1, [x0, #8]
  419c70:	ldr	x0, [x29, #24]
  419c74:	ldr	x1, [x0, #336]
  419c78:	add	x0, x29, #0xb8
  419c7c:	sub	x0, x0, #0x30
  419c80:	str	x1, [x0, #16]
  419c84:	add	x0, x29, #0xb8
  419c88:	sub	x0, x0, #0x30
  419c8c:	adrp	x1, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419c90:	add	x1, x1, #0x628
  419c94:	str	x1, [x0, #24]
  419c98:	str	xzr, [x29, #88]
  419c9c:	str	xzr, [x29, #96]
  419ca0:	b	419cd4 <bus_manager_log_shutdown+0x3d4>
  419ca4:	add	x0, x29, #0xb8
  419ca8:	sub	x0, x0, #0x30
  419cac:	ldr	x1, [x29, #96]
  419cb0:	ldr	x0, [x0, x1, lsl #3]
  419cb4:	bl	4082f0 <strlen@plt>
  419cb8:	mov	x1, x0
  419cbc:	ldr	x0, [x29, #88]
  419cc0:	add	x0, x0, x1
  419cc4:	str	x0, [x29, #88]
  419cc8:	ldr	x0, [x29, #96]
  419ccc:	add	x0, x0, #0x1
  419cd0:	str	x0, [x29, #96]
  419cd4:	ldr	x0, [x29, #96]
  419cd8:	cmp	x0, #0x3
  419cdc:	b.hi	419cf8 <bus_manager_log_shutdown+0x3f8>  // b.pmore
  419ce0:	add	x0, x29, #0xb8
  419ce4:	sub	x0, x0, #0x30
  419ce8:	ldr	x1, [x29, #96]
  419cec:	ldr	x0, [x0, x1, lsl #3]
  419cf0:	cmp	x0, #0x0
  419cf4:	b.ne	419ca4 <bus_manager_log_shutdown+0x3a4>  // b.any
  419cf8:	ldr	x0, [x29, #88]
  419cfc:	add	x0, x0, #0x1
  419d00:	str	x0, [x29, #104]
  419d04:	ldr	x1, [x29, #104]
  419d08:	mov	x0, #0x1                   	// #1
  419d0c:	bl	413ce8 <size_multiply_overflow>
  419d10:	and	w0, w0, #0xff
  419d14:	and	x0, x0, #0xff
  419d18:	cmp	x0, #0x0
  419d1c:	b.eq	419d48 <bus_manager_log_shutdown+0x448>  // b.none
  419d20:	adrp	x0, 43e000 <__func__.12250+0x440>
  419d24:	add	x1, x0, #0xb5b
  419d28:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419d2c:	add	x4, x0, #0xb90
  419d30:	mov	w3, #0x5f6                 	// #1526
  419d34:	mov	x2, x1
  419d38:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419d3c:	add	x1, x0, #0x2d0
  419d40:	mov	w0, #0x0                   	// #0
  419d44:	bl	407650 <log_assert_failed_realm@plt>
  419d48:	ldr	x0, [x29, #104]
  419d4c:	cmp	x0, #0x400, lsl #12
  419d50:	cset	w0, hi  // hi = pmore
  419d54:	and	w0, w0, #0xff
  419d58:	and	x0, x0, #0xff
  419d5c:	cmp	x0, #0x0
  419d60:	b.eq	419d8c <bus_manager_log_shutdown+0x48c>  // b.none
  419d64:	adrp	x0, 43e000 <__func__.12250+0x440>
  419d68:	add	x1, x0, #0xb5b
  419d6c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419d70:	add	x4, x0, #0xb90
  419d74:	mov	w3, #0x5f6                 	// #1526
  419d78:	mov	x2, x1
  419d7c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419d80:	add	x1, x0, #0x300
  419d84:	mov	w0, #0x0                   	// #0
  419d88:	bl	407650 <log_assert_failed_realm@plt>
  419d8c:	ldr	x0, [x29, #104]
  419d90:	add	x0, x0, #0xf
  419d94:	lsr	x0, x0, #4
  419d98:	lsl	x0, x0, #4
  419d9c:	sub	sp, sp, x0
  419da0:	add	x0, sp, #0x10
  419da4:	add	x0, x0, #0xf
  419da8:	lsr	x0, x0, #4
  419dac:	lsl	x0, x0, #4
  419db0:	str	x0, [x29, #112]
  419db4:	ldr	x0, [x29, #112]
  419db8:	str	x0, [x29, #80]
  419dbc:	str	xzr, [x29, #96]
  419dc0:	b	419df0 <bus_manager_log_shutdown+0x4f0>
  419dc4:	add	x0, x29, #0xb8
  419dc8:	sub	x0, x0, #0x30
  419dcc:	ldr	x1, [x29, #96]
  419dd0:	ldr	x0, [x0, x1, lsl #3]
  419dd4:	mov	x1, x0
  419dd8:	ldr	x0, [x29, #80]
  419ddc:	bl	407160 <stpcpy@plt>
  419de0:	str	x0, [x29, #80]
  419de4:	ldr	x0, [x29, #96]
  419de8:	add	x0, x0, #0x1
  419dec:	str	x0, [x29, #96]
  419df0:	ldr	x0, [x29, #96]
  419df4:	cmp	x0, #0x3
  419df8:	b.hi	419e14 <bus_manager_log_shutdown+0x514>  // b.pmore
  419dfc:	add	x0, x29, #0xb8
  419e00:	sub	x0, x0, #0x30
  419e04:	ldr	x1, [x29, #96]
  419e08:	ldr	x0, [x0, x1, lsl #3]
  419e0c:	cmp	x0, #0x0
  419e10:	b.ne	419dc4 <bus_manager_log_shutdown+0x4c4>  // b.any
  419e14:	ldr	x0, [x29, #80]
  419e18:	strb	wzr, [x0]
  419e1c:	ldr	x0, [x29, #112]
  419e20:	str	x0, [x29, #40]
  419e24:	adrp	x0, 43e000 <__func__.12250+0x440>
  419e28:	add	x1, x0, #0xb5b
  419e2c:	str	xzr, [sp]
  419e30:	ldr	x7, [x29, #48]
  419e34:	ldr	x6, [x29, #40]
  419e38:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419e3c:	add	x5, x0, #0x630
  419e40:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419e44:	add	x4, x0, #0xbb0
  419e48:	mov	w3, #0x5f8                 	// #1528
  419e4c:	mov	x2, x1
  419e50:	mov	w1, #0x0                   	// #0
  419e54:	mov	w0, #0x5                   	// #5
  419e58:	bl	407cd0 <log_struct_internal@plt>
  419e5c:	mov	w1, w0
  419e60:	adrp	x0, 460000 <wordlist.10364+0x370>
  419e64:	ldr	x0, [x0, #4024]
  419e68:	ldr	x2, [x29, #168]
  419e6c:	ldr	x0, [x0]
  419e70:	eor	x0, x2, x0
  419e74:	cmp	x0, #0x0
  419e78:	b.eq	419e80 <bus_manager_log_shutdown+0x580>  // b.none
  419e7c:	bl	407b20 <__stack_chk_fail@plt>
  419e80:	mov	w0, w1
  419e84:	mov	sp, x29
  419e88:	ldp	x29, x30, [sp], #176
  419e8c:	ret

0000000000419e90 <lid_switch_ignore_handler>:
  419e90:	stp	x29, x30, [sp, #-64]!
  419e94:	mov	x29, sp
  419e98:	str	x0, [sp, #40]
  419e9c:	str	x1, [sp, #32]
  419ea0:	str	x2, [sp, #24]
  419ea4:	ldr	x0, [sp, #24]
  419ea8:	str	x0, [sp, #56]
  419eac:	ldr	x0, [sp, #40]
  419eb0:	cmp	x0, #0x0
  419eb4:	cset	w0, eq  // eq = none
  419eb8:	and	w0, w0, #0xff
  419ebc:	and	x0, x0, #0xff
  419ec0:	cmp	x0, #0x0
  419ec4:	b.eq	419ef0 <lid_switch_ignore_handler+0x60>  // b.none
  419ec8:	adrp	x0, 43e000 <__func__.12250+0x440>
  419ecc:	add	x1, x0, #0xb5b
  419ed0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419ed4:	add	x4, x0, #0xbd0
  419ed8:	mov	w3, #0x601                 	// #1537
  419edc:	mov	x2, x1
  419ee0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  419ee4:	add	x1, x0, #0x660
  419ee8:	mov	w0, #0x0                   	// #0
  419eec:	bl	407650 <log_assert_failed_realm@plt>
  419ef0:	ldr	x0, [sp, #56]
  419ef4:	cmp	x0, #0x0
  419ef8:	cset	w0, eq  // eq = none
  419efc:	and	w0, w0, #0xff
  419f00:	and	x0, x0, #0xff
  419f04:	cmp	x0, #0x0
  419f08:	b.eq	419f34 <lid_switch_ignore_handler+0xa4>  // b.none
  419f0c:	adrp	x0, 43e000 <__func__.12250+0x440>
  419f10:	add	x1, x0, #0xb5b
  419f14:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419f18:	add	x4, x0, #0xbd0
  419f1c:	mov	w3, #0x602                 	// #1538
  419f20:	mov	x2, x1
  419f24:	adrp	x0, 43e000 <__func__.12250+0x440>
  419f28:	add	x1, x0, #0xb78
  419f2c:	mov	w0, #0x0                   	// #0
  419f30:	bl	407650 <log_assert_failed_realm@plt>
  419f34:	ldr	x0, [sp, #56]
  419f38:	ldr	x0, [x0, #448]
  419f3c:	bl	407550 <sd_event_source_unref@plt>
  419f40:	mov	x1, x0
  419f44:	ldr	x0, [sp, #56]
  419f48:	str	x1, [x0, #448]
  419f4c:	mov	w0, #0x0                   	// #0
  419f50:	ldp	x29, x30, [sp], #64
  419f54:	ret

0000000000419f58 <manager_set_lid_switch_ignore>:
  419f58:	stp	x29, x30, [sp, #-64]!
  419f5c:	mov	x29, sp
  419f60:	str	x0, [sp, #24]
  419f64:	str	x1, [sp, #16]
  419f68:	adrp	x0, 460000 <wordlist.10364+0x370>
  419f6c:	ldr	x0, [x0, #4024]
  419f70:	ldr	x1, [x0]
  419f74:	str	x1, [sp, #56]
  419f78:	mov	x1, #0x0                   	// #0
  419f7c:	ldr	x0, [sp, #24]
  419f80:	cmp	x0, #0x0
  419f84:	cset	w0, eq  // eq = none
  419f88:	and	w0, w0, #0xff
  419f8c:	and	x0, x0, #0xff
  419f90:	cmp	x0, #0x0
  419f94:	b.eq	419fc0 <manager_set_lid_switch_ignore+0x68>  // b.none
  419f98:	adrp	x0, 43e000 <__func__.12250+0x440>
  419f9c:	add	x1, x0, #0xb5b
  419fa0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  419fa4:	add	x4, x0, #0xbf0
  419fa8:	mov	w3, #0x60b                 	// #1547
  419fac:	mov	x2, x1
  419fb0:	adrp	x0, 43e000 <__func__.12250+0x440>
  419fb4:	add	x1, x0, #0xb78
  419fb8:	mov	w0, #0x0                   	// #0
  419fbc:	bl	407650 <log_assert_failed_realm@plt>
  419fc0:	mov	w0, #0x1                   	// #1
  419fc4:	bl	407e80 <now@plt>
  419fc8:	mov	x1, x0
  419fcc:	ldr	x0, [sp, #16]
  419fd0:	cmp	x0, x1
  419fd4:	b.hi	419fe0 <manager_set_lid_switch_ignore+0x88>  // b.pmore
  419fd8:	mov	w0, #0x0                   	// #0
  419fdc:	b	41a080 <manager_set_lid_switch_ignore+0x128>
  419fe0:	ldr	x0, [sp, #24]
  419fe4:	ldr	x0, [x0, #448]
  419fe8:	cmp	x0, #0x0
  419fec:	b.eq	41a048 <manager_set_lid_switch_ignore+0xf0>  // b.none
  419ff0:	ldr	x0, [sp, #24]
  419ff4:	ldr	x0, [x0, #448]
  419ff8:	add	x1, sp, #0x30
  419ffc:	bl	407200 <sd_event_source_get_time@plt>
  41a000:	str	w0, [sp, #44]
  41a004:	ldr	w0, [sp, #44]
  41a008:	cmp	w0, #0x0
  41a00c:	b.ge	41a018 <manager_set_lid_switch_ignore+0xc0>  // b.tcont
  41a010:	ldr	w0, [sp, #44]
  41a014:	b	41a080 <manager_set_lid_switch_ignore+0x128>
  41a018:	ldr	x0, [sp, #48]
  41a01c:	ldr	x1, [sp, #16]
  41a020:	cmp	x1, x0
  41a024:	b.hi	41a030 <manager_set_lid_switch_ignore+0xd8>  // b.pmore
  41a028:	mov	w0, #0x0                   	// #0
  41a02c:	b	41a080 <manager_set_lid_switch_ignore+0x128>
  41a030:	ldr	x0, [sp, #24]
  41a034:	ldr	x0, [x0, #448]
  41a038:	ldr	x1, [sp, #16]
  41a03c:	bl	4070b0 <sd_event_source_set_time@plt>
  41a040:	str	w0, [sp, #44]
  41a044:	b	41a07c <manager_set_lid_switch_ignore+0x124>
  41a048:	ldr	x0, [sp, #24]
  41a04c:	ldr	x7, [x0]
  41a050:	ldr	x0, [sp, #24]
  41a054:	add	x1, x0, #0x1c0
  41a058:	ldr	x6, [sp, #24]
  41a05c:	adrp	x0, 419000 <attach_device+0x1f4>
  41a060:	add	x5, x0, #0xe90
  41a064:	mov	x4, #0x0                   	// #0
  41a068:	ldr	x3, [sp, #16]
  41a06c:	mov	w2, #0x1                   	// #1
  41a070:	mov	x0, x7
  41a074:	bl	4074d0 <sd_event_add_time@plt>
  41a078:	str	w0, [sp, #44]
  41a07c:	ldr	w0, [sp, #44]
  41a080:	mov	w1, w0
  41a084:	adrp	x0, 460000 <wordlist.10364+0x370>
  41a088:	ldr	x0, [x0, #4024]
  41a08c:	ldr	x2, [sp, #56]
  41a090:	ldr	x0, [x0]
  41a094:	eor	x0, x2, x0
  41a098:	cmp	x0, #0x0
  41a09c:	b.eq	41a0a4 <manager_set_lid_switch_ignore+0x14c>  // b.none
  41a0a0:	bl	407b20 <__stack_chk_fail@plt>
  41a0a4:	mov	w0, w1
  41a0a8:	ldp	x29, x30, [sp], #64
  41a0ac:	ret

000000000041a0b0 <send_prepare_for>:
  41a0b0:	stp	x29, x30, [sp, #-48]!
  41a0b4:	mov	x29, sp
  41a0b8:	str	x0, [sp, #24]
  41a0bc:	str	w1, [sp, #20]
  41a0c0:	strb	w2, [sp, #19]
  41a0c4:	ldrb	w0, [sp, #19]
  41a0c8:	str	w0, [sp, #44]
  41a0cc:	ldr	x0, [sp, #24]
  41a0d0:	cmp	x0, #0x0
  41a0d4:	cset	w0, eq  // eq = none
  41a0d8:	and	w0, w0, #0xff
  41a0dc:	and	x0, x0, #0xff
  41a0e0:	cmp	x0, #0x0
  41a0e4:	b.eq	41a110 <send_prepare_for+0x60>  // b.none
  41a0e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a0ec:	add	x1, x0, #0xb5b
  41a0f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a0f4:	add	x4, x0, #0xc10
  41a0f8:	mov	w3, #0x62e                 	// #1582
  41a0fc:	mov	x2, x1
  41a100:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a104:	add	x1, x0, #0xb78
  41a108:	mov	w0, #0x0                   	// #0
  41a10c:	bl	407650 <log_assert_failed_realm@plt>
  41a110:	strb	wzr, [sp, #43]
  41a114:	ldr	w0, [sp, #20]
  41a118:	sub	w0, w0, #0x1
  41a11c:	cmp	w0, #0x1
  41a120:	b.hi	41a12c <send_prepare_for+0x7c>  // b.pmore
  41a124:	mov	w0, #0x1                   	// #1
  41a128:	strb	w0, [sp, #43]
  41a12c:	nop
  41a130:	ldrb	w0, [sp, #43]
  41a134:	eor	w0, w0, #0x1
  41a138:	and	w0, w0, #0xff
  41a13c:	and	x0, x0, #0xff
  41a140:	cmp	x0, #0x0
  41a144:	b.eq	41a170 <send_prepare_for+0xc0>  // b.none
  41a148:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a14c:	add	x1, x0, #0xb5b
  41a150:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a154:	add	x4, x0, #0xc10
  41a158:	mov	w3, #0x62f                 	// #1583
  41a15c:	mov	x2, x1
  41a160:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a164:	add	x1, x0, #0x668
  41a168:	mov	w0, #0x0                   	// #0
  41a16c:	bl	407650 <log_assert_failed_realm@plt>
  41a170:	ldr	x0, [sp, #24]
  41a174:	ldr	x6, [x0, #8]
  41a178:	ldr	w0, [sp, #20]
  41a17c:	cmp	w0, #0x1
  41a180:	b.ne	41a190 <send_prepare_for+0xe0>  // b.any
  41a184:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a188:	add	x0, x0, #0x698
  41a18c:	b	41a198 <send_prepare_for+0xe8>
  41a190:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a194:	add	x0, x0, #0x6b0
  41a198:	ldr	w5, [sp, #44]
  41a19c:	adrp	x1, 43e000 <__func__.12250+0x440>
  41a1a0:	add	x4, x1, #0xd20
  41a1a4:	mov	x3, x0
  41a1a8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a1ac:	add	x2, x0, #0x6c0
  41a1b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a1b4:	add	x1, x0, #0x6e0
  41a1b8:	mov	x0, x6
  41a1bc:	bl	407a40 <sd_bus_emit_signal@plt>
  41a1c0:	ldp	x29, x30, [sp], #48
  41a1c4:	ret

000000000041a1c8 <execute_shutdown_or_sleep>:
  41a1c8:	sub	sp, sp, #0x70
  41a1cc:	stp	x29, x30, [sp, #16]
  41a1d0:	add	x29, sp, #0x10
  41a1d4:	str	x19, [sp, #32]
  41a1d8:	str	x0, [sp, #72]
  41a1dc:	str	w1, [sp, #68]
  41a1e0:	str	x2, [sp, #56]
  41a1e4:	str	x3, [sp, #48]
  41a1e8:	adrp	x0, 460000 <wordlist.10364+0x370>
  41a1ec:	ldr	x0, [x0, #4024]
  41a1f0:	ldr	x1, [x0]
  41a1f4:	str	x1, [sp, #104]
  41a1f8:	mov	x1, #0x0                   	// #0
  41a1fc:	str	xzr, [sp, #88]
  41a200:	ldr	x0, [sp, #72]
  41a204:	cmp	x0, #0x0
  41a208:	cset	w0, eq  // eq = none
  41a20c:	and	w0, w0, #0xff
  41a210:	and	x0, x0, #0xff
  41a214:	cmp	x0, #0x0
  41a218:	b.eq	41a244 <execute_shutdown_or_sleep+0x7c>  // b.none
  41a21c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a220:	add	x1, x0, #0xb5b
  41a224:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a228:	add	x4, x0, #0xc28
  41a22c:	mov	w3, #0x643                 	// #1603
  41a230:	mov	x2, x1
  41a234:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a238:	add	x1, x0, #0xb78
  41a23c:	mov	w0, #0x0                   	// #0
  41a240:	bl	407650 <log_assert_failed_realm@plt>
  41a244:	ldr	w0, [sp, #68]
  41a248:	cmp	w0, #0x0
  41a24c:	cset	w0, le
  41a250:	and	w0, w0, #0xff
  41a254:	and	x0, x0, #0xff
  41a258:	cmp	x0, #0x0
  41a25c:	b.eq	41a288 <execute_shutdown_or_sleep+0xc0>  // b.none
  41a260:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a264:	add	x1, x0, #0xb5b
  41a268:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a26c:	add	x4, x0, #0xc28
  41a270:	mov	w3, #0x644                 	// #1604
  41a274:	mov	x2, x1
  41a278:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a27c:	add	x1, x0, #0x6f8
  41a280:	mov	w0, #0x0                   	// #0
  41a284:	bl	407650 <log_assert_failed_realm@plt>
  41a288:	ldr	w0, [sp, #68]
  41a28c:	cmp	w0, #0x7f
  41a290:	cset	w0, gt
  41a294:	and	w0, w0, #0xff
  41a298:	and	x0, x0, #0xff
  41a29c:	cmp	x0, #0x0
  41a2a0:	b.eq	41a2cc <execute_shutdown_or_sleep+0x104>  // b.none
  41a2a4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a2a8:	add	x1, x0, #0xb5b
  41a2ac:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a2b0:	add	x4, x0, #0xc28
  41a2b4:	mov	w3, #0x645                 	// #1605
  41a2b8:	mov	x2, x1
  41a2bc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a2c0:	add	x1, x0, #0x700
  41a2c4:	mov	w0, #0x0                   	// #0
  41a2c8:	bl	407650 <log_assert_failed_realm@plt>
  41a2cc:	ldr	x0, [sp, #56]
  41a2d0:	cmp	x0, #0x0
  41a2d4:	cset	w0, eq  // eq = none
  41a2d8:	and	w0, w0, #0xff
  41a2dc:	and	x0, x0, #0xff
  41a2e0:	cmp	x0, #0x0
  41a2e4:	b.eq	41a310 <execute_shutdown_or_sleep+0x148>  // b.none
  41a2e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a2ec:	add	x1, x0, #0xb5b
  41a2f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a2f4:	add	x4, x0, #0xc28
  41a2f8:	mov	w3, #0x646                 	// #1606
  41a2fc:	mov	x2, x1
  41a300:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a304:	add	x1, x0, #0x4d8
  41a308:	mov	w0, #0x0                   	// #0
  41a30c:	bl	407650 <log_assert_failed_realm@plt>
  41a310:	ldr	w0, [sp, #68]
  41a314:	cmp	w0, #0x1
  41a318:	b.ne	41a328 <execute_shutdown_or_sleep+0x160>  // b.any
  41a31c:	ldr	x1, [sp, #56]
  41a320:	ldr	x0, [sp, #72]
  41a324:	bl	419900 <bus_manager_log_shutdown>
  41a328:	ldr	x0, [sp, #72]
  41a32c:	ldr	x8, [x0, #8]
  41a330:	add	x1, sp, #0x58
  41a334:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a338:	add	x0, x0, #0x790
  41a33c:	str	x0, [sp, #8]
  41a340:	ldr	x0, [sp, #56]
  41a344:	str	x0, [sp]
  41a348:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a34c:	add	x7, x0, #0x1a0
  41a350:	mov	x6, x1
  41a354:	ldr	x5, [sp, #48]
  41a358:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a35c:	add	x4, x0, #0x718
  41a360:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a364:	add	x3, x0, #0x728
  41a368:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a36c:	add	x2, x0, #0x750
  41a370:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a374:	add	x1, x0, #0x770
  41a378:	mov	x0, x8
  41a37c:	bl	4082b0 <sd_bus_call_method@plt>
  41a380:	str	w0, [sp, #84]
  41a384:	ldr	w0, [sp, #84]
  41a388:	cmp	w0, #0x0
  41a38c:	b.lt	41a420 <execute_shutdown_or_sleep+0x258>  // b.tstop
  41a390:	ldr	x3, [sp, #88]
  41a394:	add	x0, sp, #0x60
  41a398:	mov	x2, x0
  41a39c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a3a0:	add	x1, x0, #0xd80
  41a3a4:	mov	x0, x3
  41a3a8:	bl	407660 <sd_bus_message_read@plt>
  41a3ac:	str	w0, [sp, #84]
  41a3b0:	ldr	w0, [sp, #84]
  41a3b4:	cmp	w0, #0x0
  41a3b8:	b.lt	41a428 <execute_shutdown_or_sleep+0x260>  // b.tstop
  41a3bc:	ldr	x0, [sp, #72]
  41a3c0:	add	x0, x0, #0x108
  41a3c4:	ldr	x1, [sp, #96]
  41a3c8:	bl	407400 <free_and_strdup@plt>
  41a3cc:	str	w0, [sp, #84]
  41a3d0:	ldr	w0, [sp, #84]
  41a3d4:	cmp	w0, #0x0
  41a3d8:	b.lt	41a430 <execute_shutdown_or_sleep+0x268>  // b.tstop
  41a3dc:	ldr	x0, [sp, #72]
  41a3e0:	ldr	x1, [sp, #56]
  41a3e4:	str	x1, [x0, #256]
  41a3e8:	ldr	x0, [sp, #72]
  41a3ec:	ldr	w1, [sp, #68]
  41a3f0:	str	w1, [x0, #248]
  41a3f4:	mov	w0, #0x1                   	// #1
  41a3f8:	bl	407e80 <now@plt>
  41a3fc:	mov	x1, x0
  41a400:	ldr	x0, [sp, #72]
  41a404:	ldr	x0, [x0, #440]
  41a408:	add	x0, x1, x0
  41a40c:	mov	x1, x0
  41a410:	ldr	x0, [sp, #72]
  41a414:	bl	419f58 <manager_set_lid_switch_ignore>
  41a418:	mov	w19, #0x0                   	// #0
  41a41c:	b	41a448 <execute_shutdown_or_sleep+0x280>
  41a420:	nop
  41a424:	b	41a434 <execute_shutdown_or_sleep+0x26c>
  41a428:	nop
  41a42c:	b	41a434 <execute_shutdown_or_sleep+0x26c>
  41a430:	nop
  41a434:	mov	w2, #0x0                   	// #0
  41a438:	ldr	w1, [sp, #68]
  41a43c:	ldr	x0, [sp, #72]
  41a440:	bl	41a0b0 <send_prepare_for>
  41a444:	ldr	w19, [sp, #84]
  41a448:	add	x0, sp, #0x58
  41a44c:	bl	413f5c <sd_bus_message_unrefp>
  41a450:	mov	w1, w19
  41a454:	adrp	x0, 460000 <wordlist.10364+0x370>
  41a458:	ldr	x0, [x0, #4024]
  41a45c:	ldr	x2, [sp, #104]
  41a460:	ldr	x0, [x0]
  41a464:	eor	x0, x2, x0
  41a468:	cmp	x0, #0x0
  41a46c:	b.eq	41a474 <execute_shutdown_or_sleep+0x2ac>  // b.none
  41a470:	bl	407b20 <__stack_chk_fail@plt>
  41a474:	mov	w0, w1
  41a478:	ldr	x19, [sp, #32]
  41a47c:	ldp	x29, x30, [sp, #16]
  41a480:	add	sp, sp, #0x70
  41a484:	ret

000000000041a488 <manager_dispatch_delayed>:
  41a488:	sub	sp, sp, #0xc0
  41a48c:	stp	x29, x30, [sp, #16]
  41a490:	add	x29, sp, #0x10
  41a494:	stp	x19, x20, [sp, #32]
  41a498:	stp	x21, x22, [sp, #48]
  41a49c:	stp	x23, x24, [sp, #64]
  41a4a0:	str	x0, [sp, #88]
  41a4a4:	strb	w1, [sp, #87]
  41a4a8:	adrp	x0, 460000 <wordlist.10364+0x370>
  41a4ac:	ldr	x0, [x0, #4024]
  41a4b0:	ldr	x1, [x0]
  41a4b4:	str	x1, [sp, #184]
  41a4b8:	mov	x1, #0x0                   	// #0
  41a4bc:	str	xzr, [sp, #160]
  41a4c0:	str	xzr, [sp, #168]
  41a4c4:	str	wzr, [sp, #176]
  41a4c8:	str	xzr, [sp, #136]
  41a4cc:	ldr	x0, [sp, #88]
  41a4d0:	cmp	x0, #0x0
  41a4d4:	cset	w0, eq  // eq = none
  41a4d8:	and	w0, w0, #0xff
  41a4dc:	and	x0, x0, #0xff
  41a4e0:	cmp	x0, #0x0
  41a4e4:	b.eq	41a510 <manager_dispatch_delayed+0x88>  // b.none
  41a4e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a4ec:	add	x1, x0, #0xb5b
  41a4f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a4f4:	add	x4, x0, #0xc48
  41a4f8:	mov	w3, #0x674                 	// #1652
  41a4fc:	mov	x2, x1
  41a500:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a504:	add	x1, x0, #0x7a8
  41a508:	mov	w0, #0x0                   	// #0
  41a50c:	bl	407650 <log_assert_failed_realm@plt>
  41a510:	ldr	x0, [sp, #88]
  41a514:	ldr	w0, [x0, #248]
  41a518:	cmp	w0, #0x0
  41a51c:	b.eq	41a530 <manager_dispatch_delayed+0xa8>  // b.none
  41a520:	ldr	x0, [sp, #88]
  41a524:	ldr	x0, [x0, #264]
  41a528:	cmp	x0, #0x0
  41a52c:	b.eq	41a538 <manager_dispatch_delayed+0xb0>  // b.none
  41a530:	mov	w19, #0x0                   	// #0
  41a534:	b	41a768 <manager_dispatch_delayed+0x2e0>
  41a538:	ldr	x0, [sp, #88]
  41a53c:	ldr	w0, [x0, #248]
  41a540:	add	x1, sp, #0x88
  41a544:	mov	x7, x1
  41a548:	mov	w6, #0x0                   	// #0
  41a54c:	mov	w5, #0x0                   	// #0
  41a550:	mov	w4, #0x0                   	// #0
  41a554:	mov	x3, #0x0                   	// #0
  41a558:	mov	w2, #0x1                   	// #1
  41a55c:	mov	w1, w0
  41a560:	ldr	x0, [sp, #88]
  41a564:	bl	424730 <manager_is_inhibited>
  41a568:	and	w0, w0, #0xff
  41a56c:	cmp	w0, #0x0
  41a570:	b.eq	41a694 <manager_dispatch_delayed+0x20c>  // b.none
  41a574:	str	xzr, [sp, #144]
  41a578:	str	xzr, [sp, #152]
  41a57c:	ldrb	w0, [sp, #87]
  41a580:	eor	w0, w0, #0x1
  41a584:	and	w0, w0, #0xff
  41a588:	cmp	w0, #0x0
  41a58c:	b.eq	41a59c <manager_dispatch_delayed+0x114>  // b.none
  41a590:	mov	w19, #0x0                   	// #0
  41a594:	mov	w20, #0x0                   	// #0
  41a598:	b	41a668 <manager_dispatch_delayed+0x1e0>
  41a59c:	ldr	x0, [sp, #136]
  41a5a0:	ldr	w0, [x0, #60]
  41a5a4:	add	x1, sp, #0x90
  41a5a8:	bl	4078f0 <get_process_comm@plt>
  41a5ac:	ldr	x0, [sp, #136]
  41a5b0:	ldr	w0, [x0, #64]
  41a5b4:	bl	4080b0 <uid_to_name@plt>
  41a5b8:	str	x0, [sp, #152]
  41a5bc:	mov	w0, #0x5                   	// #5
  41a5c0:	str	w0, [sp, #108]
  41a5c4:	str	wzr, [sp, #112]
  41a5c8:	str	wzr, [sp, #116]
  41a5cc:	ldr	w0, [sp, #116]
  41a5d0:	bl	4083e0 <log_get_max_level_realm@plt>
  41a5d4:	mov	w1, w0
  41a5d8:	ldr	w0, [sp, #108]
  41a5dc:	and	w0, w0, #0x7
  41a5e0:	cmp	w1, w0
  41a5e4:	b.lt	41a65c <manager_dispatch_delayed+0x1d4>  // b.tstop
  41a5e8:	ldr	w0, [sp, #116]
  41a5ec:	lsl	w1, w0, #10
  41a5f0:	ldr	w0, [sp, #108]
  41a5f4:	orr	w21, w1, w0
  41a5f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a5fc:	add	x22, x0, #0xb5b
  41a600:	ldr	x0, [sp, #136]
  41a604:	ldr	w23, [x0, #64]
  41a608:	ldr	x0, [sp, #152]
  41a60c:	bl	413df4 <strna>
  41a610:	mov	x24, x0
  41a614:	ldr	x0, [sp, #136]
  41a618:	ldr	w20, [x0, #60]
  41a61c:	ldr	x0, [sp, #144]
  41a620:	bl	413df4 <strna>
  41a624:	str	x0, [sp, #8]
  41a628:	str	w20, [sp]
  41a62c:	mov	x7, x24
  41a630:	mov	w6, w23
  41a634:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a638:	add	x5, x0, #0x7b0
  41a63c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a640:	add	x4, x0, #0xc68
  41a644:	mov	w3, #0x682                 	// #1666
  41a648:	mov	x2, x22
  41a64c:	ldr	w1, [sp, #112]
  41a650:	mov	w0, w21
  41a654:	bl	407d60 <log_internal_realm@plt>
  41a658:	b	41a664 <manager_dispatch_delayed+0x1dc>
  41a65c:	ldr	w0, [sp, #112]
  41a660:	cmp	w0, #0x0
  41a664:	mov	w20, #0x1                   	// #1
  41a668:	add	x0, sp, #0x98
  41a66c:	bl	413cc4 <freep>
  41a670:	cmp	w20, #0x1
  41a674:	b.eq	41a680 <manager_dispatch_delayed+0x1f8>  // b.none
  41a678:	mov	w20, #0x0                   	// #0
  41a67c:	b	41a684 <manager_dispatch_delayed+0x1fc>
  41a680:	mov	w20, #0x1                   	// #1
  41a684:	add	x0, sp, #0x90
  41a688:	bl	413cc4 <freep>
  41a68c:	cmp	w20, #0x1
  41a690:	b.ne	41a768 <manager_dispatch_delayed+0x2e0>  // b.any
  41a694:	ldr	x0, [sp, #88]
  41a698:	ldr	w1, [x0, #248]
  41a69c:	ldr	x0, [sp, #88]
  41a6a0:	ldr	x0, [x0, #256]
  41a6a4:	add	x2, sp, #0xa0
  41a6a8:	mov	x3, x2
  41a6ac:	mov	x2, x0
  41a6b0:	ldr	x0, [sp, #88]
  41a6b4:	bl	41a1c8 <execute_shutdown_or_sleep>
  41a6b8:	str	w0, [sp, #120]
  41a6bc:	ldr	w0, [sp, #120]
  41a6c0:	cmp	w0, #0x0
  41a6c4:	b.ge	41a764 <manager_dispatch_delayed+0x2dc>  // b.tcont
  41a6c8:	mov	w0, #0x4                   	// #4
  41a6cc:	str	w0, [sp, #124]
  41a6d0:	str	wzr, [sp, #128]
  41a6d4:	str	wzr, [sp, #132]
  41a6d8:	ldr	w0, [sp, #132]
  41a6dc:	bl	4083e0 <log_get_max_level_realm@plt>
  41a6e0:	mov	w1, w0
  41a6e4:	ldr	w0, [sp, #124]
  41a6e8:	and	w0, w0, #0x7
  41a6ec:	cmp	w1, w0
  41a6f0:	b.lt	41a744 <manager_dispatch_delayed+0x2bc>  // b.tstop
  41a6f4:	ldr	w0, [sp, #132]
  41a6f8:	lsl	w1, w0, #10
  41a6fc:	ldr	w0, [sp, #124]
  41a700:	orr	w19, w1, w0
  41a704:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a708:	add	x20, x0, #0xb5b
  41a70c:	add	x0, sp, #0xa0
  41a710:	ldr	w1, [sp, #120]
  41a714:	bl	407000 <bus_error_message@plt>
  41a718:	mov	x6, x0
  41a71c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a720:	add	x5, x0, #0x800
  41a724:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a728:	add	x4, x0, #0xc68
  41a72c:	mov	w3, #0x68a                 	// #1674
  41a730:	mov	x2, x20
  41a734:	ldr	w1, [sp, #128]
  41a738:	mov	w0, w19
  41a73c:	bl	407d60 <log_internal_realm@plt>
  41a740:	b	41a74c <manager_dispatch_delayed+0x2c4>
  41a744:	ldr	w0, [sp, #128]
  41a748:	cmp	w0, #0x0
  41a74c:	ldr	x0, [sp, #88]
  41a750:	str	xzr, [x0, #256]
  41a754:	ldr	x0, [sp, #88]
  41a758:	str	wzr, [x0, #248]
  41a75c:	ldr	w19, [sp, #120]
  41a760:	b	41a768 <manager_dispatch_delayed+0x2e0>
  41a764:	mov	w19, #0x1                   	// #1
  41a768:	add	x0, sp, #0xa0
  41a76c:	bl	407c80 <sd_bus_error_free@plt>
  41a770:	mov	w1, w19
  41a774:	adrp	x0, 460000 <wordlist.10364+0x370>
  41a778:	ldr	x0, [x0, #4024]
  41a77c:	ldr	x2, [sp, #184]
  41a780:	ldr	x0, [x0]
  41a784:	eor	x0, x2, x0
  41a788:	cmp	x0, #0x0
  41a78c:	b.eq	41a794 <manager_dispatch_delayed+0x30c>  // b.none
  41a790:	bl	407b20 <__stack_chk_fail@plt>
  41a794:	mov	w0, w1
  41a798:	ldp	x19, x20, [sp, #32]
  41a79c:	ldp	x21, x22, [sp, #48]
  41a7a0:	ldp	x23, x24, [sp, #64]
  41a7a4:	ldp	x29, x30, [sp, #16]
  41a7a8:	add	sp, sp, #0xc0
  41a7ac:	ret

000000000041a7b0 <manager_inhibit_timeout_handler>:
  41a7b0:	stp	x29, x30, [sp, #-64]!
  41a7b4:	mov	x29, sp
  41a7b8:	str	x0, [sp, #40]
  41a7bc:	str	x1, [sp, #32]
  41a7c0:	str	x2, [sp, #24]
  41a7c4:	ldr	x0, [sp, #24]
  41a7c8:	str	x0, [sp, #56]
  41a7cc:	ldr	x0, [sp, #56]
  41a7d0:	cmp	x0, #0x0
  41a7d4:	cset	w0, eq  // eq = none
  41a7d8:	and	w0, w0, #0xff
  41a7dc:	and	x0, x0, #0xff
  41a7e0:	cmp	x0, #0x0
  41a7e4:	b.eq	41a810 <manager_inhibit_timeout_handler+0x60>  // b.none
  41a7e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a7ec:	add	x1, x0, #0xb5b
  41a7f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a7f4:	add	x4, x0, #0xc88
  41a7f8:	mov	w3, #0x69d                 	// #1693
  41a7fc:	mov	x2, x1
  41a800:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a804:	add	x1, x0, #0x7a8
  41a808:	mov	w0, #0x0                   	// #0
  41a80c:	bl	407650 <log_assert_failed_realm@plt>
  41a810:	ldr	x0, [sp, #56]
  41a814:	ldr	x0, [x0, #272]
  41a818:	ldr	x1, [sp, #40]
  41a81c:	cmp	x1, x0
  41a820:	cset	w0, ne  // ne = any
  41a824:	and	w0, w0, #0xff
  41a828:	and	x0, x0, #0xff
  41a82c:	cmp	x0, #0x0
  41a830:	b.eq	41a85c <manager_inhibit_timeout_handler+0xac>  // b.none
  41a834:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a838:	add	x1, x0, #0xb5b
  41a83c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a840:	add	x4, x0, #0xc88
  41a844:	mov	w3, #0x69e                 	// #1694
  41a848:	mov	x2, x1
  41a84c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a850:	add	x1, x0, #0x858
  41a854:	mov	w0, #0x0                   	// #0
  41a858:	bl	407650 <log_assert_failed_realm@plt>
  41a85c:	mov	w1, #0x1                   	// #1
  41a860:	ldr	x0, [sp, #56]
  41a864:	bl	41a488 <manager_dispatch_delayed>
  41a868:	str	w0, [sp, #52]
  41a86c:	ldr	w1, [sp, #52]
  41a870:	ldr	w0, [sp, #52]
  41a874:	mov	w2, #0x0                   	// #0
  41a878:	cmp	w1, #0x0
  41a87c:	csel	w0, w0, w2, le
  41a880:	ldp	x29, x30, [sp], #64
  41a884:	ret

000000000041a888 <delay_shutdown_or_sleep>:
  41a888:	stp	x29, x30, [sp, #-96]!
  41a88c:	mov	x29, sp
  41a890:	str	x0, [sp, #40]
  41a894:	str	w1, [sp, #36]
  41a898:	str	x2, [sp, #24]
  41a89c:	ldr	x0, [sp, #40]
  41a8a0:	cmp	x0, #0x0
  41a8a4:	cset	w0, eq  // eq = none
  41a8a8:	and	w0, w0, #0xff
  41a8ac:	and	x0, x0, #0xff
  41a8b0:	cmp	x0, #0x0
  41a8b4:	b.eq	41a8e0 <delay_shutdown_or_sleep+0x58>  // b.none
  41a8b8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a8bc:	add	x1, x0, #0xb5b
  41a8c0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a8c4:	add	x4, x0, #0xca8
  41a8c8:	mov	w3, #0x6ac                 	// #1708
  41a8cc:	mov	x2, x1
  41a8d0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a8d4:	add	x1, x0, #0xb78
  41a8d8:	mov	w0, #0x0                   	// #0
  41a8dc:	bl	407650 <log_assert_failed_realm@plt>
  41a8e0:	ldr	w0, [sp, #36]
  41a8e4:	lsr	w0, w0, #31
  41a8e8:	and	w0, w0, #0xff
  41a8ec:	and	x0, x0, #0xff
  41a8f0:	cmp	x0, #0x0
  41a8f4:	b.eq	41a920 <delay_shutdown_or_sleep+0x98>  // b.none
  41a8f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a8fc:	add	x1, x0, #0xb5b
  41a900:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a904:	add	x4, x0, #0xca8
  41a908:	mov	w3, #0x6ad                 	// #1709
  41a90c:	mov	x2, x1
  41a910:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a914:	add	x1, x0, #0x880
  41a918:	mov	w0, #0x0                   	// #0
  41a91c:	bl	407650 <log_assert_failed_realm@plt>
  41a920:	ldr	w0, [sp, #36]
  41a924:	cmp	w0, #0x7f
  41a928:	cset	w0, gt
  41a92c:	and	w0, w0, #0xff
  41a930:	and	x0, x0, #0xff
  41a934:	cmp	x0, #0x0
  41a938:	b.eq	41a964 <delay_shutdown_or_sleep+0xdc>  // b.none
  41a93c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a940:	add	x1, x0, #0xb5b
  41a944:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a948:	add	x4, x0, #0xca8
  41a94c:	mov	w3, #0x6ae                 	// #1710
  41a950:	mov	x2, x1
  41a954:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a958:	add	x1, x0, #0x700
  41a95c:	mov	w0, #0x0                   	// #0
  41a960:	bl	407650 <log_assert_failed_realm@plt>
  41a964:	ldr	x0, [sp, #24]
  41a968:	cmp	x0, #0x0
  41a96c:	cset	w0, eq  // eq = none
  41a970:	and	w0, w0, #0xff
  41a974:	and	x0, x0, #0xff
  41a978:	cmp	x0, #0x0
  41a97c:	b.eq	41a9a8 <delay_shutdown_or_sleep+0x120>  // b.none
  41a980:	adrp	x0, 43e000 <__func__.12250+0x440>
  41a984:	add	x1, x0, #0xb5b
  41a988:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41a98c:	add	x4, x0, #0xca8
  41a990:	mov	w3, #0x6af                 	// #1711
  41a994:	mov	x2, x1
  41a998:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41a99c:	add	x1, x0, #0x4d8
  41a9a0:	mov	w0, #0x0                   	// #0
  41a9a4:	bl	407650 <log_assert_failed_realm@plt>
  41a9a8:	mov	w0, #0x1                   	// #1
  41a9ac:	bl	407e80 <now@plt>
  41a9b0:	mov	x1, x0
  41a9b4:	ldr	x0, [sp, #40]
  41a9b8:	ldr	x0, [x0, #232]
  41a9bc:	add	x0, x1, x0
  41a9c0:	str	x0, [sp, #88]
  41a9c4:	ldr	x0, [sp, #40]
  41a9c8:	ldr	x0, [x0, #272]
  41a9cc:	cmp	x0, #0x0
  41a9d0:	b.eq	41ab24 <delay_shutdown_or_sleep+0x29c>  // b.none
  41a9d4:	ldr	x0, [sp, #40]
  41a9d8:	ldr	x0, [x0, #272]
  41a9dc:	ldr	x1, [sp, #88]
  41a9e0:	bl	4070b0 <sd_event_source_set_time@plt>
  41a9e4:	str	w0, [sp, #60]
  41a9e8:	ldr	w0, [sp, #60]
  41a9ec:	cmp	w0, #0x0
  41a9f0:	b.ge	41aa7c <delay_shutdown_or_sleep+0x1f4>  // b.tcont
  41a9f4:	mov	w0, #0x3                   	// #3
  41a9f8:	str	w0, [sp, #76]
  41a9fc:	ldr	w0, [sp, #60]
  41aa00:	str	w0, [sp, #80]
  41aa04:	str	wzr, [sp, #84]
  41aa08:	ldr	w0, [sp, #84]
  41aa0c:	bl	4083e0 <log_get_max_level_realm@plt>
  41aa10:	mov	w1, w0
  41aa14:	ldr	w0, [sp, #76]
  41aa18:	and	w0, w0, #0x7
  41aa1c:	cmp	w1, w0
  41aa20:	b.lt	41aa64 <delay_shutdown_or_sleep+0x1dc>  // b.tstop
  41aa24:	ldr	w0, [sp, #84]
  41aa28:	lsl	w1, w0, #10
  41aa2c:	ldr	w0, [sp, #76]
  41aa30:	orr	w6, w1, w0
  41aa34:	adrp	x0, 43e000 <__func__.12250+0x440>
  41aa38:	add	x1, x0, #0xb5b
  41aa3c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41aa40:	add	x5, x0, #0x888
  41aa44:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41aa48:	add	x4, x0, #0xcc0
  41aa4c:	mov	w3, #0x6b6                 	// #1718
  41aa50:	mov	x2, x1
  41aa54:	ldr	w1, [sp, #80]
  41aa58:	mov	w0, w6
  41aa5c:	bl	407d60 <log_internal_realm@plt>
  41aa60:	b	41ab88 <delay_shutdown_or_sleep+0x300>
  41aa64:	ldr	w0, [sp, #80]
  41aa68:	cmp	w0, #0x0
  41aa6c:	cneg	w0, w0, lt  // lt = tstop
  41aa70:	and	w0, w0, #0xff
  41aa74:	neg	w0, w0
  41aa78:	b	41ab88 <delay_shutdown_or_sleep+0x300>
  41aa7c:	ldr	x0, [sp, #40]
  41aa80:	ldr	x0, [x0, #272]
  41aa84:	mov	w1, #0xffffffff            	// #-1
  41aa88:	bl	4076f0 <sd_event_source_set_enabled@plt>
  41aa8c:	str	w0, [sp, #60]
  41aa90:	ldr	w0, [sp, #60]
  41aa94:	cmp	w0, #0x0
  41aa98:	b.ge	41ab6c <delay_shutdown_or_sleep+0x2e4>  // b.tcont
  41aa9c:	mov	w0, #0x3                   	// #3
  41aaa0:	str	w0, [sp, #64]
  41aaa4:	ldr	w0, [sp, #60]
  41aaa8:	str	w0, [sp, #68]
  41aaac:	str	wzr, [sp, #72]
  41aab0:	ldr	w0, [sp, #72]
  41aab4:	bl	4083e0 <log_get_max_level_realm@plt>
  41aab8:	mov	w1, w0
  41aabc:	ldr	w0, [sp, #64]
  41aac0:	and	w0, w0, #0x7
  41aac4:	cmp	w1, w0
  41aac8:	b.lt	41ab0c <delay_shutdown_or_sleep+0x284>  // b.tstop
  41aacc:	ldr	w0, [sp, #72]
  41aad0:	lsl	w1, w0, #10
  41aad4:	ldr	w0, [sp, #64]
  41aad8:	orr	w6, w1, w0
  41aadc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41aae0:	add	x1, x0, #0xb5b
  41aae4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41aae8:	add	x5, x0, #0x8b0
  41aaec:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41aaf0:	add	x4, x0, #0xcc0
  41aaf4:	mov	w3, #0x6ba                 	// #1722
  41aaf8:	mov	x2, x1
  41aafc:	ldr	w1, [sp, #68]
  41ab00:	mov	w0, w6
  41ab04:	bl	407d60 <log_internal_realm@plt>
  41ab08:	b	41ab88 <delay_shutdown_or_sleep+0x300>
  41ab0c:	ldr	w0, [sp, #68]
  41ab10:	cmp	w0, #0x0
  41ab14:	cneg	w0, w0, lt  // lt = tstop
  41ab18:	and	w0, w0, #0xff
  41ab1c:	neg	w0, w0
  41ab20:	b	41ab88 <delay_shutdown_or_sleep+0x300>
  41ab24:	ldr	x0, [sp, #40]
  41ab28:	ldr	x7, [x0]
  41ab2c:	ldr	x0, [sp, #40]
  41ab30:	add	x1, x0, #0x110
  41ab34:	ldr	x6, [sp, #40]
  41ab38:	adrp	x0, 41a000 <manager_set_lid_switch_ignore+0xa8>
  41ab3c:	add	x5, x0, #0x7b0
  41ab40:	mov	x4, #0x0                   	// #0
  41ab44:	ldr	x3, [sp, #88]
  41ab48:	mov	w2, #0x1                   	// #1
  41ab4c:	mov	x0, x7
  41ab50:	bl	4074d0 <sd_event_add_time@plt>
  41ab54:	str	w0, [sp, #60]
  41ab58:	ldr	w0, [sp, #60]
  41ab5c:	cmp	w0, #0x0
  41ab60:	b.ge	41ab6c <delay_shutdown_or_sleep+0x2e4>  // b.tcont
  41ab64:	ldr	w0, [sp, #60]
  41ab68:	b	41ab88 <delay_shutdown_or_sleep+0x300>
  41ab6c:	ldr	x0, [sp, #40]
  41ab70:	ldr	x1, [sp, #24]
  41ab74:	str	x1, [x0, #256]
  41ab78:	ldr	x0, [sp, #40]
  41ab7c:	ldr	w1, [sp, #36]
  41ab80:	str	w1, [x0, #248]
  41ab84:	mov	w0, #0x0                   	// #0
  41ab88:	ldp	x29, x30, [sp], #96
  41ab8c:	ret

000000000041ab90 <bus_manager_shutdown_or_sleep_now_or_later>:
  41ab90:	stp	x29, x30, [sp, #-112]!
  41ab94:	mov	x29, sp
  41ab98:	str	x19, [sp, #16]
  41ab9c:	str	x0, [sp, #56]
  41aba0:	str	x1, [sp, #48]
  41aba4:	str	w2, [sp, #44]
  41aba8:	str	x3, [sp, #32]
  41abac:	adrp	x0, 460000 <wordlist.10364+0x370>
  41abb0:	ldr	x0, [x0, #4024]
  41abb4:	ldr	x1, [x0]
  41abb8:	str	x1, [sp, #104]
  41abbc:	mov	x1, #0x0                   	// #0
  41abc0:	str	xzr, [sp, #96]
  41abc4:	ldr	x0, [sp, #56]
  41abc8:	cmp	x0, #0x0
  41abcc:	cset	w0, eq  // eq = none
  41abd0:	and	w0, w0, #0xff
  41abd4:	and	x0, x0, #0xff
  41abd8:	cmp	x0, #0x0
  41abdc:	b.eq	41ac08 <bus_manager_shutdown_or_sleep_now_or_later+0x78>  // b.none
  41abe0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41abe4:	add	x1, x0, #0xb5b
  41abe8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41abec:	add	x4, x0, #0xcd8
  41abf0:	mov	w3, #0x6d2                 	// #1746
  41abf4:	mov	x2, x1
  41abf8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41abfc:	add	x1, x0, #0xb78
  41ac00:	mov	w0, #0x0                   	// #0
  41ac04:	bl	407650 <log_assert_failed_realm@plt>
  41ac08:	ldr	x0, [sp, #48]
  41ac0c:	cmp	x0, #0x0
  41ac10:	cset	w0, eq  // eq = none
  41ac14:	and	w0, w0, #0xff
  41ac18:	and	x0, x0, #0xff
  41ac1c:	cmp	x0, #0x0
  41ac20:	b.eq	41ac4c <bus_manager_shutdown_or_sleep_now_or_later+0xbc>  // b.none
  41ac24:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ac28:	add	x1, x0, #0xb5b
  41ac2c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41ac30:	add	x4, x0, #0xcd8
  41ac34:	mov	w3, #0x6d3                 	// #1747
  41ac38:	mov	x2, x1
  41ac3c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41ac40:	add	x1, x0, #0x4d8
  41ac44:	mov	w0, #0x0                   	// #0
  41ac48:	bl	407650 <log_assert_failed_realm@plt>
  41ac4c:	ldr	w0, [sp, #44]
  41ac50:	cmp	w0, #0x0
  41ac54:	cset	w0, le
  41ac58:	and	w0, w0, #0xff
  41ac5c:	and	x0, x0, #0xff
  41ac60:	cmp	x0, #0x0
  41ac64:	b.eq	41ac90 <bus_manager_shutdown_or_sleep_now_or_later+0x100>  // b.none
  41ac68:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ac6c:	add	x1, x0, #0xb5b
  41ac70:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41ac74:	add	x4, x0, #0xcd8
  41ac78:	mov	w3, #0x6d4                 	// #1748
  41ac7c:	mov	x2, x1
  41ac80:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41ac84:	add	x1, x0, #0x6f8
  41ac88:	mov	w0, #0x0                   	// #0
  41ac8c:	bl	407650 <log_assert_failed_realm@plt>
  41ac90:	ldr	w0, [sp, #44]
  41ac94:	cmp	w0, #0x7f
  41ac98:	cset	w0, gt
  41ac9c:	and	w0, w0, #0xff
  41aca0:	and	x0, x0, #0xff
  41aca4:	cmp	x0, #0x0
  41aca8:	b.eq	41acd4 <bus_manager_shutdown_or_sleep_now_or_later+0x144>  // b.none
  41acac:	adrp	x0, 43e000 <__func__.12250+0x440>
  41acb0:	add	x1, x0, #0xb5b
  41acb4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41acb8:	add	x4, x0, #0xcd8
  41acbc:	mov	w3, #0x6d5                 	// #1749
  41acc0:	mov	x2, x1
  41acc4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41acc8:	add	x1, x0, #0x700
  41accc:	mov	w0, #0x0                   	// #0
  41acd0:	bl	407650 <log_assert_failed_realm@plt>
  41acd4:	ldr	x0, [sp, #56]
  41acd8:	ldr	x0, [x0, #264]
  41acdc:	cmp	x0, #0x0
  41ace0:	cset	w0, ne  // ne = any
  41ace4:	and	w0, w0, #0xff
  41ace8:	and	x0, x0, #0xff
  41acec:	cmp	x0, #0x0
  41acf0:	b.eq	41ad1c <bus_manager_shutdown_or_sleep_now_or_later+0x18c>  // b.none
  41acf4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41acf8:	add	x1, x0, #0xb5b
  41acfc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41ad00:	add	x4, x0, #0xcd8
  41ad04:	mov	w3, #0x6d6                 	// #1750
  41ad08:	mov	x2, x1
  41ad0c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41ad10:	add	x1, x0, #0x8e0
  41ad14:	mov	w0, #0x0                   	// #0
  41ad18:	bl	407650 <log_assert_failed_realm@plt>
  41ad1c:	ldr	x0, [sp, #56]
  41ad20:	ldr	x0, [x0, #8]
  41ad24:	add	x1, sp, #0x60
  41ad28:	mov	x2, x1
  41ad2c:	ldr	x1, [sp, #48]
  41ad30:	bl	407560 <unit_load_state@plt>
  41ad34:	str	w0, [sp, #80]
  41ad38:	ldr	w0, [sp, #80]
  41ad3c:	cmp	w0, #0x0
  41ad40:	b.ge	41ad4c <bus_manager_shutdown_or_sleep_now_or_later+0x1bc>  // b.tcont
  41ad44:	ldr	w19, [sp, #80]
  41ad48:	b	41aeb0 <bus_manager_shutdown_or_sleep_now_or_later+0x320>
  41ad4c:	ldr	x2, [sp, #96]
  41ad50:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41ad54:	add	x1, x0, #0x8f0
  41ad58:	mov	x0, x2
  41ad5c:	bl	407f30 <strcmp@plt>
  41ad60:	cmp	w0, #0x0
  41ad64:	b.eq	41ae04 <bus_manager_shutdown_or_sleep_now_or_later+0x274>  // b.none
  41ad68:	mov	w0, #0x5                   	// #5
  41ad6c:	str	w0, [sp, #84]
  41ad70:	mov	w0, #0xd                   	// #13
  41ad74:	movk	w0, #0x4000, lsl #16
  41ad78:	str	w0, [sp, #88]
  41ad7c:	str	wzr, [sp, #92]
  41ad80:	ldr	w0, [sp, #92]
  41ad84:	bl	4083e0 <log_get_max_level_realm@plt>
  41ad88:	mov	w1, w0
  41ad8c:	ldr	w0, [sp, #84]
  41ad90:	and	w0, w0, #0x7
  41ad94:	cmp	w1, w0
  41ad98:	b.lt	41adec <bus_manager_shutdown_or_sleep_now_or_later+0x25c>  // b.tstop
  41ad9c:	ldr	w0, [sp, #92]
  41ada0:	lsl	w1, w0, #10
  41ada4:	ldr	w0, [sp, #84]
  41ada8:	orr	w8, w1, w0
  41adac:	adrp	x0, 43e000 <__func__.12250+0x440>
  41adb0:	add	x1, x0, #0xb5b
  41adb4:	ldr	x0, [sp, #96]
  41adb8:	mov	x7, x0
  41adbc:	ldr	x6, [sp, #48]
  41adc0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41adc4:	add	x5, x0, #0x8f8
  41adc8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41adcc:	add	x4, x0, #0xd08
  41add0:	mov	w3, #0x6dd                 	// #1757
  41add4:	mov	x2, x1
  41add8:	ldr	w1, [sp, #88]
  41addc:	mov	w0, w8
  41ade0:	bl	407d60 <log_internal_realm@plt>
  41ade4:	mov	w19, w0
  41ade8:	b	41aeb0 <bus_manager_shutdown_or_sleep_now_or_later+0x320>
  41adec:	ldr	w0, [sp, #88]
  41adf0:	cmp	w0, #0x0
  41adf4:	cneg	w0, w0, lt  // lt = tstop
  41adf8:	and	w0, w0, #0xff
  41adfc:	neg	w19, w0
  41ae00:	b	41aeb0 <bus_manager_shutdown_or_sleep_now_or_later+0x320>
  41ae04:	mov	w2, #0x1                   	// #1
  41ae08:	ldr	w1, [sp, #44]
  41ae0c:	ldr	x0, [sp, #56]
  41ae10:	bl	41a0b0 <send_prepare_for>
  41ae14:	ldr	x0, [sp, #56]
  41ae18:	ldr	x0, [x0, #232]
  41ae1c:	cmp	x0, #0x0
  41ae20:	b.eq	41ae5c <bus_manager_shutdown_or_sleep_now_or_later+0x2cc>  // b.none
  41ae24:	mov	x7, #0x0                   	// #0
  41ae28:	mov	w6, #0x0                   	// #0
  41ae2c:	mov	w5, #0x0                   	// #0
  41ae30:	mov	w4, #0x0                   	// #0
  41ae34:	mov	x3, #0x0                   	// #0
  41ae38:	mov	w2, #0x1                   	// #1
  41ae3c:	ldr	w1, [sp, #44]
  41ae40:	ldr	x0, [sp, #56]
  41ae44:	bl	424730 <manager_is_inhibited>
  41ae48:	and	w0, w0, #0xff
  41ae4c:	cmp	w0, #0x0
  41ae50:	b.eq	41ae5c <bus_manager_shutdown_or_sleep_now_or_later+0x2cc>  // b.none
  41ae54:	mov	w0, #0x1                   	// #1
  41ae58:	b	41ae60 <bus_manager_shutdown_or_sleep_now_or_later+0x2d0>
  41ae5c:	mov	w0, #0x0                   	// #0
  41ae60:	strb	w0, [sp, #79]
  41ae64:	ldrb	w0, [sp, #79]
  41ae68:	and	w0, w0, #0x1
  41ae6c:	strb	w0, [sp, #79]
  41ae70:	ldrb	w0, [sp, #79]
  41ae74:	cmp	w0, #0x0
  41ae78:	b.eq	41ae94 <bus_manager_shutdown_or_sleep_now_or_later+0x304>  // b.none
  41ae7c:	ldr	x2, [sp, #48]
  41ae80:	ldr	w1, [sp, #44]
  41ae84:	ldr	x0, [sp, #56]
  41ae88:	bl	41a888 <delay_shutdown_or_sleep>
  41ae8c:	str	w0, [sp, #80]
  41ae90:	b	41aeac <bus_manager_shutdown_or_sleep_now_or_later+0x31c>
  41ae94:	ldr	x3, [sp, #32]
  41ae98:	ldr	x2, [sp, #48]
  41ae9c:	ldr	w1, [sp, #44]
  41aea0:	ldr	x0, [sp, #56]
  41aea4:	bl	41a1c8 <execute_shutdown_or_sleep>
  41aea8:	str	w0, [sp, #80]
  41aeac:	ldr	w19, [sp, #80]
  41aeb0:	add	x0, sp, #0x60
  41aeb4:	bl	413cc4 <freep>
  41aeb8:	mov	w1, w19
  41aebc:	adrp	x0, 460000 <wordlist.10364+0x370>
  41aec0:	ldr	x0, [x0, #4024]
  41aec4:	ldr	x2, [sp, #104]
  41aec8:	ldr	x0, [x0]
  41aecc:	eor	x0, x2, x0
  41aed0:	cmp	x0, #0x0
  41aed4:	b.eq	41aedc <bus_manager_shutdown_or_sleep_now_or_later+0x34c>  // b.none
  41aed8:	bl	407b20 <__stack_chk_fail@plt>
  41aedc:	mov	w0, w1
  41aee0:	ldr	x19, [sp, #16]
  41aee4:	ldp	x29, x30, [sp], #112
  41aee8:	ret

000000000041aeec <verify_shutdown_creds>:
  41aeec:	stp	x29, x30, [sp, #-128]!
  41aef0:	mov	x29, sp
  41aef4:	str	x19, [sp, #16]
  41aef8:	str	x0, [sp, #88]
  41aefc:	str	x1, [sp, #80]
  41af00:	str	w2, [sp, #76]
  41af04:	strb	w3, [sp, #75]
  41af08:	str	x4, [sp, #64]
  41af0c:	str	x5, [sp, #56]
  41af10:	str	x6, [sp, #48]
  41af14:	str	x7, [sp, #40]
  41af18:	adrp	x0, 460000 <wordlist.10364+0x370>
  41af1c:	ldr	x0, [x0, #4024]
  41af20:	ldr	x1, [x0]
  41af24:	str	x1, [sp, #120]
  41af28:	mov	x1, #0x0                   	// #0
  41af2c:	str	xzr, [sp, #112]
  41af30:	ldr	x0, [sp, #88]
  41af34:	cmp	x0, #0x0
  41af38:	cset	w0, eq  // eq = none
  41af3c:	and	w0, w0, #0xff
  41af40:	and	x0, x0, #0xff
  41af44:	cmp	x0, #0x0
  41af48:	b.eq	41af74 <verify_shutdown_creds+0x88>  // b.none
  41af4c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41af50:	add	x1, x0, #0xb5b
  41af54:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41af58:	add	x4, x0, #0xd38
  41af5c:	mov	w3, #0x703                 	// #1795
  41af60:	mov	x2, x1
  41af64:	adrp	x0, 43e000 <__func__.12250+0x440>
  41af68:	add	x1, x0, #0xb78
  41af6c:	mov	w0, #0x0                   	// #0
  41af70:	bl	407650 <log_assert_failed_realm@plt>
  41af74:	ldr	x0, [sp, #80]
  41af78:	cmp	x0, #0x0
  41af7c:	cset	w0, eq  // eq = none
  41af80:	and	w0, w0, #0xff
  41af84:	and	x0, x0, #0xff
  41af88:	cmp	x0, #0x0
  41af8c:	b.eq	41afb8 <verify_shutdown_creds+0xcc>  // b.none
  41af90:	adrp	x0, 43e000 <__func__.12250+0x440>
  41af94:	add	x1, x0, #0xb5b
  41af98:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41af9c:	add	x4, x0, #0xd38
  41afa0:	mov	w3, #0x704                 	// #1796
  41afa4:	mov	x2, x1
  41afa8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41afac:	add	x1, x0, #0xd78
  41afb0:	mov	w0, #0x0                   	// #0
  41afb4:	bl	407650 <log_assert_failed_realm@plt>
  41afb8:	ldr	w0, [sp, #76]
  41afbc:	lsr	w0, w0, #31
  41afc0:	and	w0, w0, #0xff
  41afc4:	and	x0, x0, #0xff
  41afc8:	cmp	x0, #0x0
  41afcc:	b.eq	41aff8 <verify_shutdown_creds+0x10c>  // b.none
  41afd0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41afd4:	add	x1, x0, #0xb5b
  41afd8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41afdc:	add	x4, x0, #0xd38
  41afe0:	mov	w3, #0x705                 	// #1797
  41afe4:	mov	x2, x1
  41afe8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41afec:	add	x1, x0, #0x880
  41aff0:	mov	w0, #0x0                   	// #0
  41aff4:	bl	407650 <log_assert_failed_realm@plt>
  41aff8:	ldr	w0, [sp, #76]
  41affc:	cmp	w0, #0x80
  41b000:	cset	w0, gt
  41b004:	and	w0, w0, #0xff
  41b008:	and	x0, x0, #0xff
  41b00c:	cmp	x0, #0x0
  41b010:	b.eq	41b03c <verify_shutdown_creds+0x150>  // b.none
  41b014:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b018:	add	x1, x0, #0xb5b
  41b01c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b020:	add	x4, x0, #0xd38
  41b024:	mov	w3, #0x706                 	// #1798
  41b028:	mov	x2, x1
  41b02c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b030:	add	x1, x0, #0x920
  41b034:	mov	w0, #0x0                   	// #0
  41b038:	bl	407650 <log_assert_failed_realm@plt>
  41b03c:	add	x0, sp, #0x70
  41b040:	mov	x2, x0
  41b044:	mov	x1, #0x10                  	// #16
  41b048:	ldr	x0, [sp, #80]
  41b04c:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  41b050:	str	w0, [sp, #108]
  41b054:	ldr	w0, [sp, #108]
  41b058:	cmp	w0, #0x0
  41b05c:	b.ge	41b068 <verify_shutdown_creds+0x17c>  // b.tcont
  41b060:	ldr	w19, [sp, #108]
  41b064:	b	41b260 <verify_shutdown_creds+0x374>
  41b068:	ldr	x0, [sp, #112]
  41b06c:	add	x1, sp, #0x68
  41b070:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  41b074:	str	w0, [sp, #108]
  41b078:	ldr	w0, [sp, #108]
  41b07c:	cmp	w0, #0x0
  41b080:	b.ge	41b08c <verify_shutdown_creds+0x1a0>  // b.tcont
  41b084:	ldr	w19, [sp, #108]
  41b088:	b	41b260 <verify_shutdown_creds+0x374>
  41b08c:	ldr	w0, [sp, #104]
  41b090:	mov	w1, w0
  41b094:	ldr	x0, [sp, #88]
  41b098:	bl	419800 <have_multiple_sessions>
  41b09c:	str	w0, [sp, #108]
  41b0a0:	ldr	w0, [sp, #108]
  41b0a4:	cmp	w0, #0x0
  41b0a8:	b.ge	41b0b4 <verify_shutdown_creds+0x1c8>  // b.tcont
  41b0ac:	ldr	w19, [sp, #108]
  41b0b0:	b	41b260 <verify_shutdown_creds+0x374>
  41b0b4:	ldr	w0, [sp, #108]
  41b0b8:	cmp	w0, #0x0
  41b0bc:	cset	w0, gt
  41b0c0:	strb	w0, [sp, #102]
  41b0c4:	ldr	w0, [sp, #104]
  41b0c8:	mov	x7, #0x0                   	// #0
  41b0cc:	mov	w6, w0
  41b0d0:	mov	w5, #0x1                   	// #1
  41b0d4:	mov	w4, #0x0                   	// #0
  41b0d8:	mov	x3, #0x0                   	// #0
  41b0dc:	mov	w2, #0x0                   	// #0
  41b0e0:	ldr	w1, [sp, #76]
  41b0e4:	ldr	x0, [sp, #88]
  41b0e8:	bl	424730 <manager_is_inhibited>
  41b0ec:	strb	w0, [sp, #103]
  41b0f0:	ldrb	w0, [sp, #102]
  41b0f4:	cmp	w0, #0x0
  41b0f8:	b.eq	41b160 <verify_shutdown_creds+0x274>  // b.none
  41b0fc:	ldr	x0, [sp, #56]
  41b100:	cmp	x0, #0x0
  41b104:	b.eq	41b160 <verify_shutdown_creds+0x274>  // b.none
  41b108:	ldr	x0, [sp, #88]
  41b10c:	add	x0, x0, #0x1b0
  41b110:	ldr	x7, [sp, #40]
  41b114:	mov	x6, x0
  41b118:	mov	w5, #0xffffffff            	// #-1
  41b11c:	ldrb	w4, [sp, #75]
  41b120:	mov	x3, #0x0                   	// #0
  41b124:	ldr	x2, [sp, #56]
  41b128:	mov	w1, #0x16                  	// #22
  41b12c:	ldr	x0, [sp, #80]
  41b130:	bl	408350 <bus_verify_polkit_async@plt>
  41b134:	str	w0, [sp, #108]
  41b138:	ldr	w0, [sp, #108]
  41b13c:	cmp	w0, #0x0
  41b140:	b.ge	41b14c <verify_shutdown_creds+0x260>  // b.tcont
  41b144:	ldr	w19, [sp, #108]
  41b148:	b	41b260 <verify_shutdown_creds+0x374>
  41b14c:	ldr	w0, [sp, #108]
  41b150:	cmp	w0, #0x0
  41b154:	b.ne	41b160 <verify_shutdown_creds+0x274>  // b.any
  41b158:	mov	w19, #0x1                   	// #1
  41b15c:	b	41b260 <verify_shutdown_creds+0x374>
  41b160:	ldrb	w0, [sp, #103]
  41b164:	cmp	w0, #0x0
  41b168:	b.eq	41b1d0 <verify_shutdown_creds+0x2e4>  // b.none
  41b16c:	ldr	x0, [sp, #48]
  41b170:	cmp	x0, #0x0
  41b174:	b.eq	41b1d0 <verify_shutdown_creds+0x2e4>  // b.none
  41b178:	ldr	x0, [sp, #88]
  41b17c:	add	x0, x0, #0x1b0
  41b180:	ldr	x7, [sp, #40]
  41b184:	mov	x6, x0
  41b188:	mov	w5, #0xffffffff            	// #-1
  41b18c:	ldrb	w4, [sp, #75]
  41b190:	mov	x3, #0x0                   	// #0
  41b194:	ldr	x2, [sp, #48]
  41b198:	mov	w1, #0x16                  	// #22
  41b19c:	ldr	x0, [sp, #80]
  41b1a0:	bl	408350 <bus_verify_polkit_async@plt>
  41b1a4:	str	w0, [sp, #108]
  41b1a8:	ldr	w0, [sp, #108]
  41b1ac:	cmp	w0, #0x0
  41b1b0:	b.ge	41b1bc <verify_shutdown_creds+0x2d0>  // b.tcont
  41b1b4:	ldr	w19, [sp, #108]
  41b1b8:	b	41b260 <verify_shutdown_creds+0x374>
  41b1bc:	ldr	w0, [sp, #108]
  41b1c0:	cmp	w0, #0x0
  41b1c4:	b.ne	41b1d0 <verify_shutdown_creds+0x2e4>  // b.any
  41b1c8:	mov	w19, #0x1                   	// #1
  41b1cc:	b	41b260 <verify_shutdown_creds+0x374>
  41b1d0:	ldrb	w0, [sp, #102]
  41b1d4:	eor	w0, w0, #0x1
  41b1d8:	and	w0, w0, #0xff
  41b1dc:	cmp	w0, #0x0
  41b1e0:	b.eq	41b25c <verify_shutdown_creds+0x370>  // b.none
  41b1e4:	ldrb	w0, [sp, #103]
  41b1e8:	eor	w0, w0, #0x1
  41b1ec:	and	w0, w0, #0xff
  41b1f0:	cmp	w0, #0x0
  41b1f4:	b.eq	41b25c <verify_shutdown_creds+0x370>  // b.none
  41b1f8:	ldr	x0, [sp, #64]
  41b1fc:	cmp	x0, #0x0
  41b200:	b.eq	41b25c <verify_shutdown_creds+0x370>  // b.none
  41b204:	ldr	x0, [sp, #88]
  41b208:	add	x0, x0, #0x1b0
  41b20c:	ldr	x7, [sp, #40]
  41b210:	mov	x6, x0
  41b214:	mov	w5, #0xffffffff            	// #-1
  41b218:	ldrb	w4, [sp, #75]
  41b21c:	mov	x3, #0x0                   	// #0
  41b220:	ldr	x2, [sp, #64]
  41b224:	mov	w1, #0x16                  	// #22
  41b228:	ldr	x0, [sp, #80]
  41b22c:	bl	408350 <bus_verify_polkit_async@plt>
  41b230:	str	w0, [sp, #108]
  41b234:	ldr	w0, [sp, #108]
  41b238:	cmp	w0, #0x0
  41b23c:	b.ge	41b248 <verify_shutdown_creds+0x35c>  // b.tcont
  41b240:	ldr	w19, [sp, #108]
  41b244:	b	41b260 <verify_shutdown_creds+0x374>
  41b248:	ldr	w0, [sp, #108]
  41b24c:	cmp	w0, #0x0
  41b250:	b.ne	41b25c <verify_shutdown_creds+0x370>  // b.any
  41b254:	mov	w19, #0x1                   	// #1
  41b258:	b	41b260 <verify_shutdown_creds+0x374>
  41b25c:	mov	w19, #0x0                   	// #0
  41b260:	add	x0, sp, #0x70
  41b264:	bl	413f90 <sd_bus_creds_unrefp>
  41b268:	mov	w1, w19
  41b26c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41b270:	ldr	x0, [x0, #4024]
  41b274:	ldr	x2, [sp, #120]
  41b278:	ldr	x0, [x0]
  41b27c:	eor	x0, x2, x0
  41b280:	cmp	x0, #0x0
  41b284:	b.eq	41b28c <verify_shutdown_creds+0x3a0>  // b.none
  41b288:	bl	407b20 <__stack_chk_fail@plt>
  41b28c:	mov	w0, w1
  41b290:	ldr	x19, [sp, #16]
  41b294:	ldp	x29, x30, [sp], #128
  41b298:	ret

000000000041b29c <method_do_shutdown_or_sleep>:
  41b29c:	stp	x29, x30, [sp, #-112]!
  41b2a0:	mov	x29, sp
  41b2a4:	str	x0, [sp, #88]
  41b2a8:	str	x1, [sp, #80]
  41b2ac:	str	x2, [sp, #72]
  41b2b0:	str	w3, [sp, #68]
  41b2b4:	str	x4, [sp, #56]
  41b2b8:	str	x5, [sp, #48]
  41b2bc:	str	x6, [sp, #40]
  41b2c0:	str	x7, [sp, #32]
  41b2c4:	ldr	x0, [sp, #112]
  41b2c8:	str	x0, [sp, #24]
  41b2cc:	adrp	x0, 460000 <wordlist.10364+0x370>
  41b2d0:	ldr	x0, [x0, #4024]
  41b2d4:	ldr	x1, [x0]
  41b2d8:	str	x1, [sp, #104]
  41b2dc:	mov	x1, #0x0                   	// #0
  41b2e0:	ldr	x0, [sp, #88]
  41b2e4:	cmp	x0, #0x0
  41b2e8:	cset	w0, eq  // eq = none
  41b2ec:	and	w0, w0, #0xff
  41b2f0:	and	x0, x0, #0xff
  41b2f4:	cmp	x0, #0x0
  41b2f8:	b.eq	41b324 <method_do_shutdown_or_sleep+0x88>  // b.none
  41b2fc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b300:	add	x1, x0, #0xb5b
  41b304:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b308:	add	x4, x0, #0xd50
  41b30c:	mov	w3, #0x73f                 	// #1855
  41b310:	mov	x2, x1
  41b314:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b318:	add	x1, x0, #0xb78
  41b31c:	mov	w0, #0x0                   	// #0
  41b320:	bl	407650 <log_assert_failed_realm@plt>
  41b324:	ldr	x0, [sp, #80]
  41b328:	cmp	x0, #0x0
  41b32c:	cset	w0, eq  // eq = none
  41b330:	and	w0, w0, #0xff
  41b334:	and	x0, x0, #0xff
  41b338:	cmp	x0, #0x0
  41b33c:	b.eq	41b368 <method_do_shutdown_or_sleep+0xcc>  // b.none
  41b340:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b344:	add	x1, x0, #0xb5b
  41b348:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b34c:	add	x4, x0, #0xd50
  41b350:	mov	w3, #0x740                 	// #1856
  41b354:	mov	x2, x1
  41b358:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b35c:	add	x1, x0, #0xd78
  41b360:	mov	w0, #0x0                   	// #0
  41b364:	bl	407650 <log_assert_failed_realm@plt>
  41b368:	ldr	x0, [sp, #72]
  41b36c:	cmp	x0, #0x0
  41b370:	cset	w0, eq  // eq = none
  41b374:	and	w0, w0, #0xff
  41b378:	and	x0, x0, #0xff
  41b37c:	cmp	x0, #0x0
  41b380:	b.eq	41b3ac <method_do_shutdown_or_sleep+0x110>  // b.none
  41b384:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b388:	add	x1, x0, #0xb5b
  41b38c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b390:	add	x4, x0, #0xd50
  41b394:	mov	w3, #0x741                 	// #1857
  41b398:	mov	x2, x1
  41b39c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b3a0:	add	x1, x0, #0x4d8
  41b3a4:	mov	w0, #0x0                   	// #0
  41b3a8:	bl	407650 <log_assert_failed_realm@plt>
  41b3ac:	ldr	w0, [sp, #68]
  41b3b0:	lsr	w0, w0, #31
  41b3b4:	and	w0, w0, #0xff
  41b3b8:	and	x0, x0, #0xff
  41b3bc:	cmp	x0, #0x0
  41b3c0:	b.eq	41b3ec <method_do_shutdown_or_sleep+0x150>  // b.none
  41b3c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b3c8:	add	x1, x0, #0xb5b
  41b3cc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b3d0:	add	x4, x0, #0xd50
  41b3d4:	mov	w3, #0x742                 	// #1858
  41b3d8:	mov	x2, x1
  41b3dc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b3e0:	add	x1, x0, #0x880
  41b3e4:	mov	w0, #0x0                   	// #0
  41b3e8:	bl	407650 <log_assert_failed_realm@plt>
  41b3ec:	ldr	w0, [sp, #68]
  41b3f0:	cmp	w0, #0x80
  41b3f4:	cset	w0, gt
  41b3f8:	and	w0, w0, #0xff
  41b3fc:	and	x0, x0, #0xff
  41b400:	cmp	x0, #0x0
  41b404:	b.eq	41b430 <method_do_shutdown_or_sleep+0x194>  // b.none
  41b408:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b40c:	add	x1, x0, #0xb5b
  41b410:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b414:	add	x4, x0, #0xd50
  41b418:	mov	w3, #0x743                 	// #1859
  41b41c:	mov	x2, x1
  41b420:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b424:	add	x1, x0, #0x920
  41b428:	mov	w0, #0x0                   	// #0
  41b42c:	bl	407650 <log_assert_failed_realm@plt>
  41b430:	add	x0, sp, #0x60
  41b434:	mov	x2, x0
  41b438:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b43c:	add	x1, x0, #0xd20
  41b440:	ldr	x0, [sp, #80]
  41b444:	bl	407660 <sd_bus_message_read@plt>
  41b448:	str	w0, [sp, #100]
  41b44c:	ldr	w0, [sp, #100]
  41b450:	cmp	w0, #0x0
  41b454:	b.ge	41b460 <method_do_shutdown_or_sleep+0x1c4>  // b.tcont
  41b458:	ldr	w0, [sp, #100]
  41b45c:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b460:	ldr	x0, [sp, #88]
  41b464:	ldr	w0, [x0, #248]
  41b468:	cmp	w0, #0x0
  41b46c:	b.le	41b48c <method_do_shutdown_or_sleep+0x1f0>
  41b470:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b474:	add	x2, x0, #0x938
  41b478:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b47c:	add	x1, x0, #0x978
  41b480:	ldr	x0, [sp, #24]
  41b484:	bl	407ae0 <sd_bus_error_setf@plt>
  41b488:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b48c:	ldr	x0, [sp, #32]
  41b490:	cmp	x0, #0x0
  41b494:	b.eq	41b50c <method_do_shutdown_or_sleep+0x270>  // b.none
  41b498:	ldr	x0, [sp, #32]
  41b49c:	bl	407d40 <can_sleep@plt>
  41b4a0:	str	w0, [sp, #100]
  41b4a4:	ldr	w0, [sp, #100]
  41b4a8:	cmn	w0, #0x1c
  41b4ac:	b.ne	41b4cc <method_do_shutdown_or_sleep+0x230>  // b.any
  41b4b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b4b4:	add	x2, x0, #0x9a8
  41b4b8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b4bc:	add	x1, x0, #0x9d0
  41b4c0:	ldr	x0, [sp, #24]
  41b4c4:	bl	407970 <sd_bus_error_set@plt>
  41b4c8:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b4cc:	ldr	w0, [sp, #100]
  41b4d0:	cmp	w0, #0x0
  41b4d4:	b.ne	41b4f8 <method_do_shutdown_or_sleep+0x25c>  // b.any
  41b4d8:	ldr	x3, [sp, #32]
  41b4dc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b4e0:	add	x2, x0, #0xa00
  41b4e4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b4e8:	add	x1, x0, #0x9d0
  41b4ec:	ldr	x0, [sp, #24]
  41b4f0:	bl	407ae0 <sd_bus_error_setf@plt>
  41b4f4:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b4f8:	ldr	w0, [sp, #100]
  41b4fc:	cmp	w0, #0x0
  41b500:	b.ge	41b50c <method_do_shutdown_or_sleep+0x270>  // b.tcont
  41b504:	ldr	w0, [sp, #100]
  41b508:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b50c:	ldr	w0, [sp, #96]
  41b510:	cmp	w0, #0x0
  41b514:	cset	w0, ne  // ne = any
  41b518:	and	w0, w0, #0xff
  41b51c:	ldr	x7, [sp, #24]
  41b520:	ldr	x6, [sp, #40]
  41b524:	ldr	x5, [sp, #48]
  41b528:	ldr	x4, [sp, #56]
  41b52c:	mov	w3, w0
  41b530:	ldr	w2, [sp, #68]
  41b534:	ldr	x1, [sp, #80]
  41b538:	ldr	x0, [sp, #88]
  41b53c:	bl	41aeec <verify_shutdown_creds>
  41b540:	str	w0, [sp, #100]
  41b544:	ldr	w0, [sp, #100]
  41b548:	cmp	w0, #0x0
  41b54c:	b.eq	41b558 <method_do_shutdown_or_sleep+0x2bc>  // b.none
  41b550:	ldr	w0, [sp, #100]
  41b554:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b558:	ldr	x3, [sp, #24]
  41b55c:	ldr	w2, [sp, #68]
  41b560:	ldr	x1, [sp, #72]
  41b564:	ldr	x0, [sp, #88]
  41b568:	bl	41ab90 <bus_manager_shutdown_or_sleep_now_or_later>
  41b56c:	str	w0, [sp, #100]
  41b570:	ldr	w0, [sp, #100]
  41b574:	cmp	w0, #0x0
  41b578:	b.ge	41b584 <method_do_shutdown_or_sleep+0x2e8>  // b.tcont
  41b57c:	ldr	w0, [sp, #100]
  41b580:	b	41b590 <method_do_shutdown_or_sleep+0x2f4>
  41b584:	mov	x1, #0x0                   	// #0
  41b588:	ldr	x0, [sp, #80]
  41b58c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41b590:	mov	w1, w0
  41b594:	adrp	x0, 460000 <wordlist.10364+0x370>
  41b598:	ldr	x0, [x0, #4024]
  41b59c:	ldr	x2, [sp, #104]
  41b5a0:	ldr	x0, [x0]
  41b5a4:	eor	x0, x2, x0
  41b5a8:	cmp	x0, #0x0
  41b5ac:	b.eq	41b5b4 <method_do_shutdown_or_sleep+0x318>  // b.none
  41b5b0:	bl	407b20 <__stack_chk_fail@plt>
  41b5b4:	mov	w0, w1
  41b5b8:	ldp	x29, x30, [sp], #112
  41b5bc:	ret

000000000041b5c0 <method_poweroff>:
  41b5c0:	sub	sp, sp, #0x50
  41b5c4:	stp	x29, x30, [sp, #16]
  41b5c8:	add	x29, sp, #0x10
  41b5cc:	str	x0, [sp, #56]
  41b5d0:	str	x1, [sp, #48]
  41b5d4:	str	x2, [sp, #40]
  41b5d8:	ldr	x0, [sp, #48]
  41b5dc:	str	x0, [sp, #72]
  41b5e0:	ldr	x0, [sp, #40]
  41b5e4:	str	x0, [sp]
  41b5e8:	mov	x7, #0x0                   	// #0
  41b5ec:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b5f0:	add	x6, x0, #0xa20
  41b5f4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b5f8:	add	x5, x0, #0xa50
  41b5fc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b600:	add	x4, x0, #0xa88
  41b604:	mov	w3, #0x1                   	// #1
  41b608:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b60c:	add	x2, x0, #0x4e8
  41b610:	ldr	x1, [sp, #56]
  41b614:	ldr	x0, [sp, #72]
  41b618:	bl	41b29c <method_do_shutdown_or_sleep>
  41b61c:	ldp	x29, x30, [sp, #16]
  41b620:	add	sp, sp, #0x50
  41b624:	ret

000000000041b628 <method_reboot>:
  41b628:	sub	sp, sp, #0x50
  41b62c:	stp	x29, x30, [sp, #16]
  41b630:	add	x29, sp, #0x10
  41b634:	str	x0, [sp, #56]
  41b638:	str	x1, [sp, #48]
  41b63c:	str	x2, [sp, #40]
  41b640:	ldr	x0, [sp, #48]
  41b644:	str	x0, [sp, #72]
  41b648:	ldr	x0, [sp, #40]
  41b64c:	str	x0, [sp]
  41b650:	mov	x7, #0x0                   	// #0
  41b654:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b658:	add	x6, x0, #0xab0
  41b65c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b660:	add	x5, x0, #0xae0
  41b664:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b668:	add	x4, x0, #0xb10
  41b66c:	mov	w3, #0x1                   	// #1
  41b670:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b674:	add	x2, x0, #0x530
  41b678:	ldr	x1, [sp, #56]
  41b67c:	ldr	x0, [sp, #72]
  41b680:	bl	41b29c <method_do_shutdown_or_sleep>
  41b684:	ldp	x29, x30, [sp, #16]
  41b688:	add	sp, sp, #0x50
  41b68c:	ret

000000000041b690 <method_halt>:
  41b690:	sub	sp, sp, #0x50
  41b694:	stp	x29, x30, [sp, #16]
  41b698:	add	x29, sp, #0x10
  41b69c:	str	x0, [sp, #56]
  41b6a0:	str	x1, [sp, #48]
  41b6a4:	str	x2, [sp, #40]
  41b6a8:	ldr	x0, [sp, #48]
  41b6ac:	str	x0, [sp, #72]
  41b6b0:	ldr	x0, [sp, #40]
  41b6b4:	str	x0, [sp]
  41b6b8:	mov	x7, #0x0                   	// #0
  41b6bc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b6c0:	add	x6, x0, #0xb30
  41b6c4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b6c8:	add	x5, x0, #0xb60
  41b6cc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b6d0:	add	x4, x0, #0xb90
  41b6d4:	mov	w3, #0x1                   	// #1
  41b6d8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b6dc:	add	x2, x0, #0x570
  41b6e0:	ldr	x1, [sp, #56]
  41b6e4:	ldr	x0, [sp, #72]
  41b6e8:	bl	41b29c <method_do_shutdown_or_sleep>
  41b6ec:	ldp	x29, x30, [sp, #16]
  41b6f0:	add	sp, sp, #0x50
  41b6f4:	ret

000000000041b6f8 <method_suspend>:
  41b6f8:	sub	sp, sp, #0x50
  41b6fc:	stp	x29, x30, [sp, #16]
  41b700:	add	x29, sp, #0x10
  41b704:	str	x0, [sp, #56]
  41b708:	str	x1, [sp, #48]
  41b70c:	str	x2, [sp, #40]
  41b710:	ldr	x0, [sp, #48]
  41b714:	str	x0, [sp, #72]
  41b718:	ldr	x0, [sp, #40]
  41b71c:	str	x0, [sp]
  41b720:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b724:	add	x7, x0, #0xbb0
  41b728:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b72c:	add	x6, x0, #0xbb8
  41b730:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b734:	add	x5, x0, #0xbe8
  41b738:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b73c:	add	x4, x0, #0xc20
  41b740:	mov	w3, #0x2                   	// #2
  41b744:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b748:	add	x2, x0, #0xc40
  41b74c:	ldr	x1, [sp, #56]
  41b750:	ldr	x0, [sp, #72]
  41b754:	bl	41b29c <method_do_shutdown_or_sleep>
  41b758:	ldp	x29, x30, [sp, #16]
  41b75c:	add	sp, sp, #0x50
  41b760:	ret

000000000041b764 <method_hibernate>:
  41b764:	sub	sp, sp, #0x50
  41b768:	stp	x29, x30, [sp, #16]
  41b76c:	add	x29, sp, #0x10
  41b770:	str	x0, [sp, #56]
  41b774:	str	x1, [sp, #48]
  41b778:	str	x2, [sp, #40]
  41b77c:	ldr	x0, [sp, #48]
  41b780:	str	x0, [sp, #72]
  41b784:	ldr	x0, [sp, #40]
  41b788:	str	x0, [sp]
  41b78c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b790:	add	x7, x0, #0xc50
  41b794:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b798:	add	x6, x0, #0xc60
  41b79c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b7a0:	add	x5, x0, #0xc90
  41b7a4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b7a8:	add	x4, x0, #0xcc8
  41b7ac:	mov	w3, #0x2                   	// #2
  41b7b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b7b4:	add	x2, x0, #0xcf0
  41b7b8:	ldr	x1, [sp, #56]
  41b7bc:	ldr	x0, [sp, #72]
  41b7c0:	bl	41b29c <method_do_shutdown_or_sleep>
  41b7c4:	ldp	x29, x30, [sp, #16]
  41b7c8:	add	sp, sp, #0x50
  41b7cc:	ret

000000000041b7d0 <method_hybrid_sleep>:
  41b7d0:	sub	sp, sp, #0x50
  41b7d4:	stp	x29, x30, [sp, #16]
  41b7d8:	add	x29, sp, #0x10
  41b7dc:	str	x0, [sp, #56]
  41b7e0:	str	x1, [sp, #48]
  41b7e4:	str	x2, [sp, #40]
  41b7e8:	ldr	x0, [sp, #48]
  41b7ec:	str	x0, [sp, #72]
  41b7f0:	ldr	x0, [sp, #40]
  41b7f4:	str	x0, [sp]
  41b7f8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b7fc:	add	x7, x0, #0xd08
  41b800:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b804:	add	x6, x0, #0xc60
  41b808:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b80c:	add	x5, x0, #0xc90
  41b810:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b814:	add	x4, x0, #0xcc8
  41b818:	mov	w3, #0x2                   	// #2
  41b81c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b820:	add	x2, x0, #0xd18
  41b824:	ldr	x1, [sp, #56]
  41b828:	ldr	x0, [sp, #72]
  41b82c:	bl	41b29c <method_do_shutdown_or_sleep>
  41b830:	ldp	x29, x30, [sp, #16]
  41b834:	add	sp, sp, #0x50
  41b838:	ret

000000000041b83c <method_suspend_then_hibernate>:
  41b83c:	sub	sp, sp, #0x50
  41b840:	stp	x29, x30, [sp, #16]
  41b844:	add	x29, sp, #0x10
  41b848:	str	x0, [sp, #56]
  41b84c:	str	x1, [sp, #48]
  41b850:	str	x2, [sp, #40]
  41b854:	ldr	x0, [sp, #48]
  41b858:	str	x0, [sp, #72]
  41b85c:	ldr	x0, [sp, #40]
  41b860:	str	x0, [sp]
  41b864:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b868:	add	x7, x0, #0xd08
  41b86c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b870:	add	x6, x0, #0xc60
  41b874:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b878:	add	x5, x0, #0xc90
  41b87c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b880:	add	x4, x0, #0xcc8
  41b884:	mov	w3, #0x2                   	// #2
  41b888:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b88c:	add	x2, x0, #0xd30
  41b890:	ldr	x1, [sp, #56]
  41b894:	ldr	x0, [sp, #72]
  41b898:	bl	41b29c <method_do_shutdown_or_sleep>
  41b89c:	ldp	x29, x30, [sp, #16]
  41b8a0:	add	sp, sp, #0x50
  41b8a4:	ret

000000000041b8a8 <nologin_timeout_handler>:
  41b8a8:	stp	x29, x30, [sp, #-80]!
  41b8ac:	mov	x29, sp
  41b8b0:	str	x0, [sp, #40]
  41b8b4:	str	x1, [sp, #32]
  41b8b8:	str	x2, [sp, #24]
  41b8bc:	ldr	x0, [sp, #24]
  41b8c0:	str	x0, [sp, #72]
  41b8c4:	mov	w0, #0x6                   	// #6
  41b8c8:	str	w0, [sp, #60]
  41b8cc:	str	wzr, [sp, #64]
  41b8d0:	str	wzr, [sp, #68]
  41b8d4:	ldr	w0, [sp, #68]
  41b8d8:	bl	4083e0 <log_get_max_level_realm@plt>
  41b8dc:	mov	w1, w0
  41b8e0:	ldr	w0, [sp, #60]
  41b8e4:	and	w0, w0, #0x7
  41b8e8:	cmp	w1, w0
  41b8ec:	b.lt	41b930 <nologin_timeout_handler+0x88>  // b.tstop
  41b8f0:	ldr	w0, [sp, #68]
  41b8f4:	lsl	w1, w0, #10
  41b8f8:	ldr	w0, [sp, #60]
  41b8fc:	orr	w6, w1, w0
  41b900:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b904:	add	x1, x0, #0xb5b
  41b908:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b90c:	add	x5, x0, #0xd50
  41b910:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b914:	add	x4, x0, #0xd70
  41b918:	mov	w3, #0x7cf                 	// #1999
  41b91c:	mov	x2, x1
  41b920:	ldr	w1, [sp, #64]
  41b924:	mov	w0, w6
  41b928:	bl	407d60 <log_internal_realm@plt>
  41b92c:	b	41b938 <nologin_timeout_handler+0x90>
  41b930:	ldr	w0, [sp, #64]
  41b934:	cmp	w0, #0x0
  41b938:	bl	407430 <create_shutdown_run_nologin_or_warn@plt>
  41b93c:	mvn	w0, w0
  41b940:	lsr	w0, w0, #31
  41b944:	and	w1, w0, #0xff
  41b948:	ldr	x0, [sp, #72]
  41b94c:	strb	w1, [x0, #328]
  41b950:	mov	w0, #0x0                   	// #0
  41b954:	ldp	x29, x30, [sp], #80
  41b958:	ret

000000000041b95c <update_schedule_file>:
  41b95c:	stp	x29, x30, [sp, #-128]!
  41b960:	mov	x29, sp
  41b964:	str	x19, [sp, #16]
  41b968:	str	x0, [sp, #40]
  41b96c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41b970:	ldr	x0, [x0, #4024]
  41b974:	ldr	x1, [x0]
  41b978:	str	x1, [sp, #120]
  41b97c:	mov	x1, #0x0                   	// #0
  41b980:	str	xzr, [sp, #96]
  41b984:	str	xzr, [sp, #104]
  41b988:	ldr	x0, [sp, #40]
  41b98c:	cmp	x0, #0x0
  41b990:	cset	w0, eq  // eq = none
  41b994:	and	w0, w0, #0xff
  41b998:	and	x0, x0, #0xff
  41b99c:	cmp	x0, #0x0
  41b9a0:	b.eq	41b9cc <update_schedule_file+0x70>  // b.none
  41b9a4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b9a8:	add	x1, x0, #0xb5b
  41b9ac:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41b9b0:	add	x4, x0, #0xd88
  41b9b4:	mov	w3, #0x7dc                 	// #2012
  41b9b8:	mov	x2, x1
  41b9bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41b9c0:	add	x1, x0, #0xb78
  41b9c4:	mov	w0, #0x0                   	// #0
  41b9c8:	bl	407650 <log_assert_failed_realm@plt>
  41b9cc:	mov	w4, #0x2                   	// #2
  41b9d0:	mov	w3, #0x0                   	// #0
  41b9d4:	mov	w2, #0x0                   	// #0
  41b9d8:	mov	w1, #0x1ed                 	// #493
  41b9dc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41b9e0:	add	x0, x0, #0xd88
  41b9e4:	bl	407ab0 <mkdir_safe_label@plt>
  41b9e8:	str	w0, [sp, #56]
  41b9ec:	ldr	w0, [sp, #56]
  41b9f0:	cmp	w0, #0x0
  41b9f4:	b.ge	41ba84 <update_schedule_file+0x128>  // b.tcont
  41b9f8:	mov	w0, #0x3                   	// #3
  41b9fc:	str	w0, [sp, #84]
  41ba00:	ldr	w0, [sp, #56]
  41ba04:	str	w0, [sp, #88]
  41ba08:	str	wzr, [sp, #92]
  41ba0c:	ldr	w0, [sp, #92]
  41ba10:	bl	4083e0 <log_get_max_level_realm@plt>
  41ba14:	mov	w1, w0
  41ba18:	ldr	w0, [sp, #84]
  41ba1c:	and	w0, w0, #0x7
  41ba20:	cmp	w1, w0
  41ba24:	b.lt	41ba6c <update_schedule_file+0x110>  // b.tstop
  41ba28:	ldr	w0, [sp, #92]
  41ba2c:	lsl	w1, w0, #10
  41ba30:	ldr	w0, [sp, #84]
  41ba34:	orr	w6, w1, w0
  41ba38:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ba3c:	add	x1, x0, #0xb5b
  41ba40:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41ba44:	add	x5, x0, #0xda0
  41ba48:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41ba4c:	add	x4, x0, #0xda0
  41ba50:	mov	w3, #0x7e0                 	// #2016
  41ba54:	mov	x2, x1
  41ba58:	ldr	w1, [sp, #88]
  41ba5c:	mov	w0, w6
  41ba60:	bl	407d60 <log_internal_realm@plt>
  41ba64:	mov	w19, w0
  41ba68:	b	41bcf4 <update_schedule_file+0x398>
  41ba6c:	ldr	w0, [sp, #88]
  41ba70:	cmp	w0, #0x0
  41ba74:	cneg	w0, w0, lt  // lt = tstop
  41ba78:	and	w0, w0, #0xff
  41ba7c:	neg	w19, w0
  41ba80:	b	41bcf4 <update_schedule_file+0x398>
  41ba84:	add	x1, sp, #0x60
  41ba88:	add	x0, sp, #0x68
  41ba8c:	mov	x2, x1
  41ba90:	mov	x1, x0
  41ba94:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41ba98:	add	x0, x0, #0xdd0
  41ba9c:	bl	407870 <fopen_temporary@plt>
  41baa0:	str	w0, [sp, #56]
  41baa4:	ldr	w0, [sp, #56]
  41baa8:	cmp	w0, #0x0
  41baac:	b.ge	41bb3c <update_schedule_file+0x1e0>  // b.tcont
  41bab0:	mov	w0, #0x3                   	// #3
  41bab4:	str	w0, [sp, #72]
  41bab8:	ldr	w0, [sp, #56]
  41babc:	str	w0, [sp, #76]
  41bac0:	str	wzr, [sp, #80]
  41bac4:	ldr	w0, [sp, #80]
  41bac8:	bl	4083e0 <log_get_max_level_realm@plt>
  41bacc:	mov	w1, w0
  41bad0:	ldr	w0, [sp, #72]
  41bad4:	and	w0, w0, #0x7
  41bad8:	cmp	w1, w0
  41badc:	b.lt	41bb24 <update_schedule_file+0x1c8>  // b.tstop
  41bae0:	ldr	w0, [sp, #80]
  41bae4:	lsl	w1, w0, #10
  41bae8:	ldr	w0, [sp, #72]
  41baec:	orr	w6, w1, w0
  41baf0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41baf4:	add	x1, x0, #0xb5b
  41baf8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bafc:	add	x5, x0, #0xdf0
  41bb00:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41bb04:	add	x4, x0, #0xda0
  41bb08:	mov	w3, #0x7e4                 	// #2020
  41bb0c:	mov	x2, x1
  41bb10:	ldr	w1, [sp, #76]
  41bb14:	mov	w0, w6
  41bb18:	bl	407d60 <log_internal_realm@plt>
  41bb1c:	mov	w19, w0
  41bb20:	b	41bcf4 <update_schedule_file+0x398>
  41bb24:	ldr	w0, [sp, #76]
  41bb28:	cmp	w0, #0x0
  41bb2c:	cneg	w0, w0, lt  // lt = tstop
  41bb30:	and	w0, w0, #0xff
  41bb34:	neg	w19, w0
  41bb38:	b	41bcf4 <update_schedule_file+0x398>
  41bb3c:	ldr	x0, [sp, #104]
  41bb40:	bl	407300 <fileno@plt>
  41bb44:	mov	w1, #0x1a4                 	// #420
  41bb48:	bl	407150 <fchmod@plt>
  41bb4c:	ldr	x5, [sp, #104]
  41bb50:	ldr	x0, [sp, #40]
  41bb54:	ldr	x1, [x0, #288]
  41bb58:	ldr	x0, [sp, #40]
  41bb5c:	ldr	w2, [x0, #344]
  41bb60:	ldr	x0, [sp, #40]
  41bb64:	ldr	x0, [x0, #280]
  41bb68:	mov	x4, x0
  41bb6c:	mov	w3, w2
  41bb70:	mov	x2, x1
  41bb74:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bb78:	add	x1, x0, #0xe30
  41bb7c:	mov	x0, x5
  41bb80:	bl	4074c0 <fprintf@plt>
  41bb84:	ldr	x0, [sp, #40]
  41bb88:	ldr	x0, [x0, #336]
  41bb8c:	bl	413e18 <isempty>
  41bb90:	and	w0, w0, #0xff
  41bb94:	eor	w0, w0, #0x1
  41bb98:	and	w0, w0, #0xff
  41bb9c:	cmp	w0, #0x0
  41bba0:	b.eq	41bc00 <update_schedule_file+0x2a4>  // b.none
  41bba4:	ldr	x0, [sp, #40]
  41bba8:	ldr	x0, [x0, #336]
  41bbac:	bl	407320 <cescape@plt>
  41bbb0:	str	x0, [sp, #112]
  41bbb4:	ldr	x0, [sp, #112]
  41bbb8:	cmp	x0, #0x0
  41bbbc:	b.ne	41bbd0 <update_schedule_file+0x274>  // b.any
  41bbc0:	mov	w0, #0xfffffff4            	// #-12
  41bbc4:	str	w0, [sp, #56]
  41bbc8:	mov	w19, #0x0                   	// #0
  41bbcc:	b	41bbf0 <update_schedule_file+0x294>
  41bbd0:	ldr	x3, [sp, #104]
  41bbd4:	ldr	x0, [sp, #112]
  41bbd8:	mov	x2, x0
  41bbdc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bbe0:	add	x1, x0, #0xe50
  41bbe4:	mov	x0, x3
  41bbe8:	bl	4074c0 <fprintf@plt>
  41bbec:	mov	w19, #0x1                   	// #1
  41bbf0:	add	x0, sp, #0x70
  41bbf4:	bl	413cc4 <freep>
  41bbf8:	cmp	w19, #0x1
  41bbfc:	b.ne	41bc54 <update_schedule_file+0x2f8>  // b.any
  41bc00:	ldr	x0, [sp, #104]
  41bc04:	bl	408360 <fflush_and_check@plt>
  41bc08:	str	w0, [sp, #56]
  41bc0c:	ldr	w0, [sp, #56]
  41bc10:	cmp	w0, #0x0
  41bc14:	b.lt	41bc50 <update_schedule_file+0x2f4>  // b.tstop
  41bc18:	ldr	x2, [sp, #96]
  41bc1c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bc20:	add	x1, x0, #0xdd0
  41bc24:	mov	x0, x2
  41bc28:	bl	407370 <rename@plt>
  41bc2c:	cmp	w0, #0x0
  41bc30:	b.ge	41bc48 <update_schedule_file+0x2ec>  // b.tcont
  41bc34:	bl	407960 <__errno_location@plt>
  41bc38:	ldr	w0, [x0]
  41bc3c:	neg	w0, w0
  41bc40:	str	w0, [sp, #56]
  41bc44:	b	41bc54 <update_schedule_file+0x2f8>
  41bc48:	mov	w19, #0x0                   	// #0
  41bc4c:	b	41bcf4 <update_schedule_file+0x398>
  41bc50:	nop
  41bc54:	ldr	x0, [sp, #96]
  41bc58:	bl	4070c0 <unlink@plt>
  41bc5c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bc60:	add	x0, x0, #0xdd0
  41bc64:	bl	4070c0 <unlink@plt>
  41bc68:	mov	w0, #0x3                   	// #3
  41bc6c:	str	w0, [sp, #60]
  41bc70:	ldr	w0, [sp, #56]
  41bc74:	str	w0, [sp, #64]
  41bc78:	str	wzr, [sp, #68]
  41bc7c:	ldr	w0, [sp, #68]
  41bc80:	bl	4083e0 <log_get_max_level_realm@plt>
  41bc84:	mov	w1, w0
  41bc88:	ldr	w0, [sp, #60]
  41bc8c:	and	w0, w0, #0x7
  41bc90:	cmp	w1, w0
  41bc94:	b.lt	41bcdc <update_schedule_file+0x380>  // b.tstop
  41bc98:	ldr	w0, [sp, #68]
  41bc9c:	lsl	w1, w0, #10
  41bca0:	ldr	w0, [sp, #60]
  41bca4:	orr	w6, w1, w0
  41bca8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41bcac:	add	x1, x0, #0xb5b
  41bcb0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bcb4:	add	x5, x0, #0xe68
  41bcb8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41bcbc:	add	x4, x0, #0xda0
  41bcc0:	mov	w3, #0x80b                 	// #2059
  41bcc4:	mov	x2, x1
  41bcc8:	ldr	w1, [sp, #64]
  41bccc:	mov	w0, w6
  41bcd0:	bl	407d60 <log_internal_realm@plt>
  41bcd4:	mov	w19, w0
  41bcd8:	b	41bcf0 <update_schedule_file+0x394>
  41bcdc:	ldr	w0, [sp, #64]
  41bce0:	cmp	w0, #0x0
  41bce4:	cneg	w0, w0, lt  // lt = tstop
  41bce8:	and	w0, w0, #0xff
  41bcec:	neg	w19, w0
  41bcf0:	nop
  41bcf4:	add	x0, sp, #0x68
  41bcf8:	bl	414088 <fclosep>
  41bcfc:	add	x0, sp, #0x60
  41bd00:	bl	413cc4 <freep>
  41bd04:	mov	w1, w19
  41bd08:	adrp	x0, 460000 <wordlist.10364+0x370>
  41bd0c:	ldr	x0, [x0, #4024]
  41bd10:	ldr	x2, [sp, #120]
  41bd14:	ldr	x0, [x0]
  41bd18:	eor	x0, x2, x0
  41bd1c:	cmp	x0, #0x0
  41bd20:	b.eq	41bd28 <update_schedule_file+0x3cc>  // b.none
  41bd24:	bl	407b20 <__stack_chk_fail@plt>
  41bd28:	mov	w0, w1
  41bd2c:	ldr	x19, [sp, #16]
  41bd30:	ldp	x29, x30, [sp], #128
  41bd34:	ret

000000000041bd38 <reset_scheduled_shutdown>:
  41bd38:	stp	x29, x30, [sp, #-32]!
  41bd3c:	mov	x29, sp
  41bd40:	str	x0, [sp, #24]
  41bd44:	ldr	x0, [sp, #24]
  41bd48:	cmp	x0, #0x0
  41bd4c:	cset	w0, eq  // eq = none
  41bd50:	and	w0, w0, #0xff
  41bd54:	and	x0, x0, #0xff
  41bd58:	cmp	x0, #0x0
  41bd5c:	b.eq	41bd88 <reset_scheduled_shutdown+0x50>  // b.none
  41bd60:	adrp	x0, 43e000 <__func__.12250+0x440>
  41bd64:	add	x1, x0, #0xb5b
  41bd68:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41bd6c:	add	x4, x0, #0xdb8
  41bd70:	mov	w3, #0x80f                 	// #2063
  41bd74:	mov	x2, x1
  41bd78:	adrp	x0, 43e000 <__func__.12250+0x440>
  41bd7c:	add	x1, x0, #0xb78
  41bd80:	mov	w0, #0x0                   	// #0
  41bd84:	bl	407650 <log_assert_failed_realm@plt>
  41bd88:	ldr	x0, [sp, #24]
  41bd8c:	ldr	x0, [x0, #296]
  41bd90:	bl	407550 <sd_event_source_unref@plt>
  41bd94:	mov	x1, x0
  41bd98:	ldr	x0, [sp, #24]
  41bd9c:	str	x1, [x0, #296]
  41bda0:	ldr	x0, [sp, #24]
  41bda4:	ldr	x0, [x0, #352]
  41bda8:	bl	407550 <sd_event_source_unref@plt>
  41bdac:	mov	x1, x0
  41bdb0:	ldr	x0, [sp, #24]
  41bdb4:	str	x1, [x0, #352]
  41bdb8:	ldr	x0, [sp, #24]
  41bdbc:	ldr	x0, [x0, #320]
  41bdc0:	bl	407550 <sd_event_source_unref@plt>
  41bdc4:	mov	x1, x0
  41bdc8:	ldr	x0, [sp, #24]
  41bdcc:	str	x1, [x0, #320]
  41bdd0:	ldr	x0, [sp, #24]
  41bdd4:	ldr	x0, [x0, #280]
  41bdd8:	bl	413ca4 <mfree>
  41bddc:	mov	x1, x0
  41bde0:	ldr	x0, [sp, #24]
  41bde4:	str	x1, [x0, #280]
  41bde8:	ldr	x0, [sp, #24]
  41bdec:	str	xzr, [x0, #288]
  41bdf0:	ldr	x0, [sp, #24]
  41bdf4:	strb	wzr, [x0, #360]
  41bdf8:	ldr	x0, [sp, #24]
  41bdfc:	ldrb	w0, [x0, #328]
  41be00:	cmp	w0, #0x0
  41be04:	b.eq	41be1c <reset_scheduled_shutdown+0xe4>  // b.none
  41be08:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41be0c:	add	x0, x0, #0xea8
  41be10:	bl	408410 <unlink_or_warn@plt>
  41be14:	ldr	x0, [sp, #24]
  41be18:	strb	wzr, [x0, #328]
  41be1c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41be20:	add	x0, x0, #0xdd0
  41be24:	bl	4070c0 <unlink@plt>
  41be28:	nop
  41be2c:	ldp	x29, x30, [sp], #32
  41be30:	ret

000000000041be34 <manager_scheduled_shutdown_handler>:
  41be34:	stp	x29, x30, [sp, #-160]!
  41be38:	mov	x29, sp
  41be3c:	str	x19, [sp, #16]
  41be40:	str	x0, [sp, #56]
  41be44:	str	x1, [sp, #48]
  41be48:	str	x2, [sp, #40]
  41be4c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41be50:	ldr	x0, [x0, #4024]
  41be54:	ldr	x1, [x0]
  41be58:	str	x1, [sp, #152]
  41be5c:	mov	x1, #0x0                   	// #0
  41be60:	str	xzr, [sp, #128]
  41be64:	str	xzr, [sp, #136]
  41be68:	str	wzr, [sp, #144]
  41be6c:	ldr	x0, [sp, #40]
  41be70:	str	x0, [sp, #120]
  41be74:	ldr	x0, [sp, #120]
  41be78:	cmp	x0, #0x0
  41be7c:	cset	w0, eq  // eq = none
  41be80:	and	w0, w0, #0xff
  41be84:	and	x0, x0, #0xff
  41be88:	cmp	x0, #0x0
  41be8c:	b.eq	41beb8 <manager_scheduled_shutdown_handler+0x84>  // b.none
  41be90:	adrp	x0, 43e000 <__func__.12250+0x440>
  41be94:	add	x1, x0, #0xb5b
  41be98:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41be9c:	add	x4, x0, #0xdd8
  41bea0:	mov	w3, #0x82b                 	// #2091
  41bea4:	mov	x2, x1
  41bea8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41beac:	add	x1, x0, #0xb78
  41beb0:	mov	w0, #0x0                   	// #0
  41beb4:	bl	407650 <log_assert_failed_realm@plt>
  41beb8:	ldr	x0, [sp, #120]
  41bebc:	ldr	x0, [x0, #280]
  41bec0:	bl	413e18 <isempty>
  41bec4:	and	w0, w0, #0xff
  41bec8:	cmp	w0, #0x0
  41becc:	b.eq	41bed8 <manager_scheduled_shutdown_handler+0xa4>  // b.none
  41bed0:	mov	w19, #0x0                   	// #0
  41bed4:	b	41c180 <manager_scheduled_shutdown_handler+0x34c>
  41bed8:	ldr	x0, [sp, #120]
  41bedc:	ldr	x2, [x0, #280]
  41bee0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bee4:	add	x1, x0, #0xeb8
  41bee8:	mov	x0, x2
  41beec:	bl	407f30 <strcmp@plt>
  41bef0:	cmp	w0, #0x0
  41bef4:	b.ne	41bf08 <manager_scheduled_shutdown_handler+0xd4>  // b.any
  41bef8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41befc:	add	x0, x0, #0x4e8
  41bf00:	str	x0, [sp, #112]
  41bf04:	b	41bf90 <manager_scheduled_shutdown_handler+0x15c>
  41bf08:	ldr	x0, [sp, #120]
  41bf0c:	ldr	x2, [x0, #280]
  41bf10:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bf14:	add	x1, x0, #0xec8
  41bf18:	mov	x0, x2
  41bf1c:	bl	407f30 <strcmp@plt>
  41bf20:	cmp	w0, #0x0
  41bf24:	b.ne	41bf38 <manager_scheduled_shutdown_handler+0x104>  // b.any
  41bf28:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bf2c:	add	x0, x0, #0x530
  41bf30:	str	x0, [sp, #112]
  41bf34:	b	41bf90 <manager_scheduled_shutdown_handler+0x15c>
  41bf38:	ldr	x0, [sp, #120]
  41bf3c:	ldr	x2, [x0, #280]
  41bf40:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bf44:	add	x1, x0, #0xed0
  41bf48:	mov	x0, x2
  41bf4c:	bl	407f30 <strcmp@plt>
  41bf50:	cmp	w0, #0x0
  41bf54:	b.ne	41bf68 <manager_scheduled_shutdown_handler+0x134>  // b.any
  41bf58:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bf5c:	add	x0, x0, #0x570
  41bf60:	str	x0, [sp, #112]
  41bf64:	b	41bf90 <manager_scheduled_shutdown_handler+0x15c>
  41bf68:	adrp	x0, 43e000 <__func__.12250+0x440>
  41bf6c:	add	x1, x0, #0xb5b
  41bf70:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41bf74:	add	x4, x0, #0xdd8
  41bf78:	mov	w3, #0x837                 	// #2103
  41bf7c:	mov	x2, x1
  41bf80:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bf84:	add	x1, x0, #0xed8
  41bf88:	mov	w0, #0x0                   	// #0
  41bf8c:	bl	4076c0 <log_assert_failed_unreachable_realm@plt>
  41bf90:	ldr	x0, [sp, #120]
  41bf94:	ldr	w0, [x0, #248]
  41bf98:	cmp	w0, #0x0
  41bf9c:	b.le	41c024 <manager_scheduled_shutdown_handler+0x1f0>
  41bfa0:	mov	w0, #0xffffff8e            	// #-114
  41bfa4:	str	w0, [sp, #72]
  41bfa8:	mov	w0, #0x3                   	// #3
  41bfac:	str	w0, [sp, #100]
  41bfb0:	str	wzr, [sp, #104]
  41bfb4:	str	wzr, [sp, #108]
  41bfb8:	ldr	w0, [sp, #108]
  41bfbc:	bl	4083e0 <log_get_max_level_realm@plt>
  41bfc0:	mov	w1, w0
  41bfc4:	ldr	w0, [sp, #100]
  41bfc8:	and	w0, w0, #0x7
  41bfcc:	cmp	w1, w0
  41bfd0:	b.lt	41c018 <manager_scheduled_shutdown_handler+0x1e4>  // b.tstop
  41bfd4:	ldr	w0, [sp, #108]
  41bfd8:	lsl	w1, w0, #10
  41bfdc:	ldr	w0, [sp, #100]
  41bfe0:	orr	w7, w1, w0
  41bfe4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41bfe8:	add	x1, x0, #0xb5b
  41bfec:	ldr	x6, [sp, #112]
  41bff0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41bff4:	add	x5, x0, #0xef8
  41bff8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41bffc:	add	x4, x0, #0xe00
  41c000:	mov	w3, #0x83c                 	// #2108
  41c004:	mov	x2, x1
  41c008:	ldr	w1, [sp, #104]
  41c00c:	mov	w0, w7
  41c010:	bl	407d60 <log_internal_realm@plt>
  41c014:	b	41c174 <manager_scheduled_shutdown_handler+0x340>
  41c018:	ldr	w0, [sp, #104]
  41c01c:	cmp	w0, #0x0
  41c020:	b	41c174 <manager_scheduled_shutdown_handler+0x340>
  41c024:	ldr	x0, [sp, #120]
  41c028:	ldrb	w0, [x0, #360]
  41c02c:	cmp	w0, #0x0
  41c030:	b.eq	41c0c4 <manager_scheduled_shutdown_handler+0x290>  // b.none
  41c034:	ldr	x1, [sp, #112]
  41c038:	ldr	x0, [sp, #120]
  41c03c:	bl	419900 <bus_manager_log_shutdown>
  41c040:	mov	w0, #0x6                   	// #6
  41c044:	str	w0, [sp, #88]
  41c048:	str	wzr, [sp, #92]
  41c04c:	str	wzr, [sp, #96]
  41c050:	ldr	w0, [sp, #96]
  41c054:	bl	4083e0 <log_get_max_level_realm@plt>
  41c058:	mov	w1, w0
  41c05c:	ldr	w0, [sp, #88]
  41c060:	and	w0, w0, #0x7
  41c064:	cmp	w1, w0
  41c068:	b.lt	41c0ac <manager_scheduled_shutdown_handler+0x278>  // b.tstop
  41c06c:	ldr	w0, [sp, #96]
  41c070:	lsl	w1, w0, #10
  41c074:	ldr	w0, [sp, #88]
  41c078:	orr	w6, w1, w0
  41c07c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c080:	add	x1, x0, #0xb5b
  41c084:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c088:	add	x5, x0, #0xf50
  41c08c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c090:	add	x4, x0, #0xe00
  41c094:	mov	w3, #0x847                 	// #2119
  41c098:	mov	x2, x1
  41c09c:	ldr	w1, [sp, #92]
  41c0a0:	mov	w0, w6
  41c0a4:	bl	407d60 <log_internal_realm@plt>
  41c0a8:	b	41c0b4 <manager_scheduled_shutdown_handler+0x280>
  41c0ac:	ldr	w0, [sp, #92]
  41c0b0:	cmp	w0, #0x0
  41c0b4:	ldr	x0, [sp, #120]
  41c0b8:	bl	41bd38 <reset_scheduled_shutdown>
  41c0bc:	mov	w19, #0x0                   	// #0
  41c0c0:	b	41c180 <manager_scheduled_shutdown_handler+0x34c>
  41c0c4:	add	x0, sp, #0x80
  41c0c8:	mov	x3, x0
  41c0cc:	mov	w2, #0x1                   	// #1
  41c0d0:	ldr	x1, [sp, #112]
  41c0d4:	ldr	x0, [sp, #120]
  41c0d8:	bl	41ab90 <bus_manager_shutdown_or_sleep_now_or_later>
  41c0dc:	str	w0, [sp, #72]
  41c0e0:	ldr	w0, [sp, #72]
  41c0e4:	cmp	w0, #0x0
  41c0e8:	b.ge	41c16c <manager_scheduled_shutdown_handler+0x338>  // b.tcont
  41c0ec:	mov	w0, #0x3                   	// #3
  41c0f0:	str	w0, [sp, #76]
  41c0f4:	ldr	w0, [sp, #72]
  41c0f8:	str	w0, [sp, #80]
  41c0fc:	str	wzr, [sp, #84]
  41c100:	ldr	w0, [sp, #84]
  41c104:	bl	4083e0 <log_get_max_level_realm@plt>
  41c108:	mov	w1, w0
  41c10c:	ldr	w0, [sp, #76]
  41c110:	and	w0, w0, #0x7
  41c114:	cmp	w1, w0
  41c118:	b.lt	41c160 <manager_scheduled_shutdown_handler+0x32c>  // b.tstop
  41c11c:	ldr	w0, [sp, #84]
  41c120:	lsl	w1, w0, #10
  41c124:	ldr	w0, [sp, #76]
  41c128:	orr	w7, w1, w0
  41c12c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c130:	add	x1, x0, #0xb5b
  41c134:	ldr	x6, [sp, #112]
  41c138:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c13c:	add	x5, x0, #0xf78
  41c140:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c144:	add	x4, x0, #0xe00
  41c148:	mov	w3, #0x84f                 	// #2127
  41c14c:	mov	x2, x1
  41c150:	ldr	w1, [sp, #80]
  41c154:	mov	w0, w7
  41c158:	bl	407d60 <log_internal_realm@plt>
  41c15c:	b	41c174 <manager_scheduled_shutdown_handler+0x340>
  41c160:	ldr	w0, [sp, #80]
  41c164:	cmp	w0, #0x0
  41c168:	b	41c174 <manager_scheduled_shutdown_handler+0x340>
  41c16c:	mov	w19, #0x0                   	// #0
  41c170:	b	41c180 <manager_scheduled_shutdown_handler+0x34c>
  41c174:	ldr	x0, [sp, #120]
  41c178:	bl	41bd38 <reset_scheduled_shutdown>
  41c17c:	ldr	w19, [sp, #72]
  41c180:	add	x0, sp, #0x80
  41c184:	bl	407c80 <sd_bus_error_free@plt>
  41c188:	mov	w1, w19
  41c18c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41c190:	ldr	x0, [x0, #4024]
  41c194:	ldr	x2, [sp, #152]
  41c198:	ldr	x0, [x0]
  41c19c:	eor	x0, x2, x0
  41c1a0:	cmp	x0, #0x0
  41c1a4:	b.eq	41c1ac <manager_scheduled_shutdown_handler+0x378>  // b.none
  41c1a8:	bl	407b20 <__stack_chk_fail@plt>
  41c1ac:	mov	w0, w1
  41c1b0:	ldr	x19, [sp, #16]
  41c1b4:	ldp	x29, x30, [sp], #160
  41c1b8:	ret

000000000041c1bc <method_schedule_shutdown>:
  41c1bc:	stp	x29, x30, [sp, #-224]!
  41c1c0:	mov	x29, sp
  41c1c4:	str	x19, [sp, #16]
  41c1c8:	str	x0, [sp, #56]
  41c1cc:	str	x1, [sp, #48]
  41c1d0:	str	x2, [sp, #40]
  41c1d4:	adrp	x0, 460000 <wordlist.10364+0x370>
  41c1d8:	ldr	x0, [x0, #4024]
  41c1dc:	ldr	x1, [x0]
  41c1e0:	str	x1, [sp, #216]
  41c1e4:	mov	x1, #0x0                   	// #0
  41c1e8:	ldr	x0, [sp, #48]
  41c1ec:	str	x0, [sp, #208]
  41c1f0:	str	xzr, [sp, #152]
  41c1f4:	str	xzr, [sp, #184]
  41c1f8:	str	xzr, [sp, #192]
  41c1fc:	str	xzr, [sp, #200]
  41c200:	strb	wzr, [sp, #75]
  41c204:	ldr	x0, [sp, #208]
  41c208:	cmp	x0, #0x0
  41c20c:	cset	w0, eq  // eq = none
  41c210:	and	w0, w0, #0xff
  41c214:	and	x0, x0, #0xff
  41c218:	cmp	x0, #0x0
  41c21c:	b.eq	41c248 <method_schedule_shutdown+0x8c>  // b.none
  41c220:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c224:	add	x1, x0, #0xb5b
  41c228:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c22c:	add	x4, x0, #0xe28
  41c230:	mov	w3, #0x865                 	// #2149
  41c234:	mov	x2, x1
  41c238:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c23c:	add	x1, x0, #0xb78
  41c240:	mov	w0, #0x0                   	// #0
  41c244:	bl	407650 <log_assert_failed_realm@plt>
  41c248:	ldr	x0, [sp, #56]
  41c24c:	cmp	x0, #0x0
  41c250:	cset	w0, eq  // eq = none
  41c254:	and	w0, w0, #0xff
  41c258:	and	x0, x0, #0xff
  41c25c:	cmp	x0, #0x0
  41c260:	b.eq	41c28c <method_schedule_shutdown+0xd0>  // b.none
  41c264:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c268:	add	x1, x0, #0xb5b
  41c26c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c270:	add	x4, x0, #0xe28
  41c274:	mov	w3, #0x866                 	// #2150
  41c278:	mov	x2, x1
  41c27c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c280:	add	x1, x0, #0xd78
  41c284:	mov	w0, #0x0                   	// #0
  41c288:	bl	407650 <log_assert_failed_realm@plt>
  41c28c:	add	x1, sp, #0xa0
  41c290:	add	x0, sp, #0xa8
  41c294:	mov	x3, x1
  41c298:	mov	x2, x0
  41c29c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c2a0:	add	x1, x0, #0xd68
  41c2a4:	ldr	x0, [sp, #56]
  41c2a8:	bl	407660 <sd_bus_message_read@plt>
  41c2ac:	str	w0, [sp, #76]
  41c2b0:	ldr	w0, [sp, #76]
  41c2b4:	cmp	w0, #0x0
  41c2b8:	b.ge	41c2c4 <method_schedule_shutdown+0x108>  // b.tcont
  41c2bc:	ldr	w19, [sp, #76]
  41c2c0:	b	41ca10 <method_schedule_shutdown+0x854>
  41c2c4:	ldr	x2, [sp, #168]
  41c2c8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c2cc:	add	x1, x0, #0xfa0
  41c2d0:	mov	x0, x2
  41c2d4:	bl	413e8c <startswith>
  41c2d8:	cmp	x0, #0x0
  41c2dc:	b.eq	41c2f4 <method_schedule_shutdown+0x138>  // b.none
  41c2e0:	ldr	x0, [sp, #168]
  41c2e4:	add	x0, x0, #0x4
  41c2e8:	str	x0, [sp, #168]
  41c2ec:	mov	w0, #0x1                   	// #1
  41c2f0:	strb	w0, [sp, #75]
  41c2f4:	ldr	x2, [sp, #168]
  41c2f8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c2fc:	add	x1, x0, #0xeb8
  41c300:	mov	x0, x2
  41c304:	bl	407f30 <strcmp@plt>
  41c308:	cmp	w0, #0x0
  41c30c:	b.ne	41c338 <method_schedule_shutdown+0x17c>  // b.any
  41c310:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c314:	add	x0, x0, #0xa88
  41c318:	str	x0, [sp, #200]
  41c31c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c320:	add	x0, x0, #0xa50
  41c324:	str	x0, [sp, #184]
  41c328:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c32c:	add	x0, x0, #0xa20
  41c330:	str	x0, [sp, #192]
  41c334:	b	41c3e0 <method_schedule_shutdown+0x224>
  41c338:	ldr	x2, [sp, #168]
  41c33c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c340:	add	x1, x0, #0xec8
  41c344:	mov	x0, x2
  41c348:	bl	407f30 <strcmp@plt>
  41c34c:	cmp	w0, #0x0
  41c350:	b.ne	41c37c <method_schedule_shutdown+0x1c0>  // b.any
  41c354:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c358:	add	x0, x0, #0xb10
  41c35c:	str	x0, [sp, #200]
  41c360:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c364:	add	x0, x0, #0xae0
  41c368:	str	x0, [sp, #184]
  41c36c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c370:	add	x0, x0, #0xab0
  41c374:	str	x0, [sp, #192]
  41c378:	b	41c3e0 <method_schedule_shutdown+0x224>
  41c37c:	ldr	x2, [sp, #168]
  41c380:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c384:	add	x1, x0, #0xed0
  41c388:	mov	x0, x2
  41c38c:	bl	407f30 <strcmp@plt>
  41c390:	cmp	w0, #0x0
  41c394:	b.ne	41c3c0 <method_schedule_shutdown+0x204>  // b.any
  41c398:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c39c:	add	x0, x0, #0xb90
  41c3a0:	str	x0, [sp, #200]
  41c3a4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c3a8:	add	x0, x0, #0xb60
  41c3ac:	str	x0, [sp, #184]
  41c3b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c3b4:	add	x0, x0, #0xb30
  41c3b8:	str	x0, [sp, #192]
  41c3bc:	b	41c3e0 <method_schedule_shutdown+0x224>
  41c3c0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c3c4:	add	x2, x0, #0xfa8
  41c3c8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c3cc:	add	x1, x0, #0xe48
  41c3d0:	ldr	x0, [sp, #40]
  41c3d4:	bl	407ae0 <sd_bus_error_setf@plt>
  41c3d8:	mov	w19, w0
  41c3dc:	b	41ca10 <method_schedule_shutdown+0x854>
  41c3e0:	ldr	x7, [sp, #40]
  41c3e4:	ldr	x6, [sp, #192]
  41c3e8:	ldr	x5, [sp, #184]
  41c3ec:	ldr	x4, [sp, #200]
  41c3f0:	mov	w3, #0x0                   	// #0
  41c3f4:	mov	w2, #0x1                   	// #1
  41c3f8:	ldr	x1, [sp, #56]
  41c3fc:	ldr	x0, [sp, #208]
  41c400:	bl	41aeec <verify_shutdown_creds>
  41c404:	str	w0, [sp, #76]
  41c408:	ldr	w0, [sp, #76]
  41c40c:	cmp	w0, #0x0
  41c410:	b.eq	41c41c <method_schedule_shutdown+0x260>  // b.none
  41c414:	ldr	w19, [sp, #76]
  41c418:	b	41ca10 <method_schedule_shutdown+0x854>
  41c41c:	ldr	x0, [sp, #208]
  41c420:	ldr	x0, [x0, #296]
  41c424:	cmp	x0, #0x0
  41c428:	b.eq	41c584 <method_schedule_shutdown+0x3c8>  // b.none
  41c42c:	ldr	x0, [sp, #208]
  41c430:	ldr	x0, [x0, #296]
  41c434:	ldr	x1, [sp, #160]
  41c438:	bl	4070b0 <sd_event_source_set_time@plt>
  41c43c:	str	w0, [sp, #76]
  41c440:	ldr	w0, [sp, #76]
  41c444:	cmp	w0, #0x0
  41c448:	b.ge	41c4d8 <method_schedule_shutdown+0x31c>  // b.tcont
  41c44c:	mov	w0, #0x3                   	// #3
  41c450:	str	w0, [sp, #104]
  41c454:	ldr	w0, [sp, #76]
  41c458:	str	w0, [sp, #108]
  41c45c:	str	wzr, [sp, #112]
  41c460:	ldr	w0, [sp, #112]
  41c464:	bl	4083e0 <log_get_max_level_realm@plt>
  41c468:	mov	w1, w0
  41c46c:	ldr	w0, [sp, #104]
  41c470:	and	w0, w0, #0x7
  41c474:	cmp	w1, w0
  41c478:	b.lt	41c4c0 <method_schedule_shutdown+0x304>  // b.tstop
  41c47c:	ldr	w0, [sp, #112]
  41c480:	lsl	w1, w0, #10
  41c484:	ldr	w0, [sp, #104]
  41c488:	orr	w6, w1, w0
  41c48c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c490:	add	x1, x0, #0xb5b
  41c494:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c498:	add	x5, x0, #0x888
  41c49c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c4a0:	add	x4, x0, #0xe48
  41c4a4:	mov	w3, #0x888                 	// #2184
  41c4a8:	mov	x2, x1
  41c4ac:	ldr	w1, [sp, #108]
  41c4b0:	mov	w0, w6
  41c4b4:	bl	407d60 <log_internal_realm@plt>
  41c4b8:	mov	w19, w0
  41c4bc:	b	41ca10 <method_schedule_shutdown+0x854>
  41c4c0:	ldr	w0, [sp, #108]
  41c4c4:	cmp	w0, #0x0
  41c4c8:	cneg	w0, w0, lt  // lt = tstop
  41c4cc:	and	w0, w0, #0xff
  41c4d0:	neg	w19, w0
  41c4d4:	b	41ca10 <method_schedule_shutdown+0x854>
  41c4d8:	ldr	x0, [sp, #208]
  41c4dc:	ldr	x0, [x0, #296]
  41c4e0:	mov	w1, #0xffffffff            	// #-1
  41c4e4:	bl	4076f0 <sd_event_source_set_enabled@plt>
  41c4e8:	str	w0, [sp, #76]
  41c4ec:	ldr	w0, [sp, #76]
  41c4f0:	cmp	w0, #0x0
  41c4f4:	b.ge	41c654 <method_schedule_shutdown+0x498>  // b.tcont
  41c4f8:	mov	w0, #0x3                   	// #3
  41c4fc:	str	w0, [sp, #92]
  41c500:	ldr	w0, [sp, #76]
  41c504:	str	w0, [sp, #96]
  41c508:	str	wzr, [sp, #100]
  41c50c:	ldr	w0, [sp, #100]
  41c510:	bl	4083e0 <log_get_max_level_realm@plt>
  41c514:	mov	w1, w0
  41c518:	ldr	w0, [sp, #92]
  41c51c:	and	w0, w0, #0x7
  41c520:	cmp	w1, w0
  41c524:	b.lt	41c56c <method_schedule_shutdown+0x3b0>  // b.tstop
  41c528:	ldr	w0, [sp, #100]
  41c52c:	lsl	w1, w0, #10
  41c530:	ldr	w0, [sp, #92]
  41c534:	orr	w6, w1, w0
  41c538:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c53c:	add	x1, x0, #0xb5b
  41c540:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c544:	add	x5, x0, #0x8b0
  41c548:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c54c:	add	x4, x0, #0xe48
  41c550:	mov	w3, #0x88c                 	// #2188
  41c554:	mov	x2, x1
  41c558:	ldr	w1, [sp, #96]
  41c55c:	mov	w0, w6
  41c560:	bl	407d60 <log_internal_realm@plt>
  41c564:	mov	w19, w0
  41c568:	b	41ca10 <method_schedule_shutdown+0x854>
  41c56c:	ldr	w0, [sp, #96]
  41c570:	cmp	w0, #0x0
  41c574:	cneg	w0, w0, lt  // lt = tstop
  41c578:	and	w0, w0, #0xff
  41c57c:	neg	w19, w0
  41c580:	b	41ca10 <method_schedule_shutdown+0x854>
  41c584:	ldr	x0, [sp, #208]
  41c588:	ldr	x7, [x0]
  41c58c:	ldr	x0, [sp, #208]
  41c590:	add	x1, x0, #0x128
  41c594:	ldr	x2, [sp, #160]
  41c598:	ldr	x6, [sp, #208]
  41c59c:	adrp	x0, 41b000 <verify_shutdown_creds+0x114>
  41c5a0:	add	x5, x0, #0xe34
  41c5a4:	mov	x4, #0x0                   	// #0
  41c5a8:	mov	x3, x2
  41c5ac:	mov	w2, #0x0                   	// #0
  41c5b0:	mov	x0, x7
  41c5b4:	bl	4074d0 <sd_event_add_time@plt>
  41c5b8:	str	w0, [sp, #76]
  41c5bc:	ldr	w0, [sp, #76]
  41c5c0:	cmp	w0, #0x0
  41c5c4:	b.ge	41c654 <method_schedule_shutdown+0x498>  // b.tcont
  41c5c8:	mov	w0, #0x3                   	// #3
  41c5cc:	str	w0, [sp, #80]
  41c5d0:	ldr	w0, [sp, #76]
  41c5d4:	str	w0, [sp, #84]
  41c5d8:	str	wzr, [sp, #88]
  41c5dc:	ldr	w0, [sp, #88]
  41c5e0:	bl	4083e0 <log_get_max_level_realm@plt>
  41c5e4:	mov	w1, w0
  41c5e8:	ldr	w0, [sp, #80]
  41c5ec:	and	w0, w0, #0x7
  41c5f0:	cmp	w1, w0
  41c5f4:	b.lt	41c63c <method_schedule_shutdown+0x480>  // b.tstop
  41c5f8:	ldr	w0, [sp, #88]
  41c5fc:	lsl	w1, w0, #10
  41c600:	ldr	w0, [sp, #80]
  41c604:	orr	w6, w1, w0
  41c608:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c60c:	add	x1, x0, #0xb5b
  41c610:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c614:	add	x5, x0, #0xfc8
  41c618:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c61c:	add	x4, x0, #0xe48
  41c620:	mov	w3, #0x891                 	// #2193
  41c624:	mov	x2, x1
  41c628:	ldr	w1, [sp, #84]
  41c62c:	mov	w0, w6
  41c630:	bl	407d60 <log_internal_realm@plt>
  41c634:	mov	w19, w0
  41c638:	b	41ca10 <method_schedule_shutdown+0x854>
  41c63c:	ldr	w0, [sp, #84]
  41c640:	cmp	w0, #0x0
  41c644:	cneg	w0, w0, lt  // lt = tstop
  41c648:	and	w0, w0, #0xff
  41c64c:	neg	w19, w0
  41c650:	b	41ca10 <method_schedule_shutdown+0x854>
  41c654:	ldr	x0, [sp, #208]
  41c658:	add	x0, x0, #0x118
  41c65c:	ldr	x1, [sp, #168]
  41c660:	bl	407400 <free_and_strdup@plt>
  41c664:	str	w0, [sp, #76]
  41c668:	ldr	w0, [sp, #76]
  41c66c:	cmp	w0, #0x0
  41c670:	b.ge	41c6b0 <method_schedule_shutdown+0x4f4>  // b.tcont
  41c674:	ldr	x0, [sp, #208]
  41c678:	ldr	x0, [x0, #296]
  41c67c:	bl	407550 <sd_event_source_unref@plt>
  41c680:	mov	x1, x0
  41c684:	ldr	x0, [sp, #208]
  41c688:	str	x1, [x0, #296]
  41c68c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c690:	add	x1, x0, #0xb5b
  41c694:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c698:	add	x3, x0, #0xe48
  41c69c:	mov	w2, #0x897                 	// #2199
  41c6a0:	mov	w0, #0x0                   	// #0
  41c6a4:	bl	408330 <log_oom_internal@plt>
  41c6a8:	mov	w19, w0
  41c6ac:	b	41ca10 <method_schedule_shutdown+0x854>
  41c6b0:	ldr	x0, [sp, #208]
  41c6b4:	ldrb	w1, [sp, #75]
  41c6b8:	strb	w1, [x0, #360]
  41c6bc:	ldr	x0, [sp, #208]
  41c6c0:	ldr	x0, [x0, #320]
  41c6c4:	cmp	x0, #0x0
  41c6c8:	b.eq	41c824 <method_schedule_shutdown+0x668>  // b.none
  41c6cc:	ldr	x0, [sp, #208]
  41c6d0:	ldr	x0, [x0, #320]
  41c6d4:	ldr	x1, [sp, #160]
  41c6d8:	bl	4070b0 <sd_event_source_set_time@plt>
  41c6dc:	str	w0, [sp, #76]
  41c6e0:	ldr	w0, [sp, #76]
  41c6e4:	cmp	w0, #0x0
  41c6e8:	b.ge	41c778 <method_schedule_shutdown+0x5bc>  // b.tcont
  41c6ec:	mov	w0, #0x3                   	// #3
  41c6f0:	str	w0, [sp, #140]
  41c6f4:	ldr	w0, [sp, #76]
  41c6f8:	str	w0, [sp, #144]
  41c6fc:	str	wzr, [sp, #148]
  41c700:	ldr	w0, [sp, #148]
  41c704:	bl	4083e0 <log_get_max_level_realm@plt>
  41c708:	mov	w1, w0
  41c70c:	ldr	w0, [sp, #140]
  41c710:	and	w0, w0, #0x7
  41c714:	cmp	w1, w0
  41c718:	b.lt	41c760 <method_schedule_shutdown+0x5a4>  // b.tstop
  41c71c:	ldr	w0, [sp, #148]
  41c720:	lsl	w1, w0, #10
  41c724:	ldr	w0, [sp, #140]
  41c728:	orr	w6, w1, w0
  41c72c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c730:	add	x1, x0, #0xb5b
  41c734:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c738:	add	x5, x0, #0x888
  41c73c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c740:	add	x4, x0, #0xe48
  41c744:	mov	w3, #0x89f                 	// #2207
  41c748:	mov	x2, x1
  41c74c:	ldr	w1, [sp, #144]
  41c750:	mov	w0, w6
  41c754:	bl	407d60 <log_internal_realm@plt>
  41c758:	mov	w19, w0
  41c75c:	b	41ca10 <method_schedule_shutdown+0x854>
  41c760:	ldr	w0, [sp, #144]
  41c764:	cmp	w0, #0x0
  41c768:	cneg	w0, w0, lt  // lt = tstop
  41c76c:	and	w0, w0, #0xff
  41c770:	neg	w19, w0
  41c774:	b	41ca10 <method_schedule_shutdown+0x854>
  41c778:	ldr	x0, [sp, #208]
  41c77c:	ldr	x0, [x0, #320]
  41c780:	mov	w1, #0xffffffff            	// #-1
  41c784:	bl	4076f0 <sd_event_source_set_enabled@plt>
  41c788:	str	w0, [sp, #76]
  41c78c:	ldr	w0, [sp, #76]
  41c790:	cmp	w0, #0x0
  41c794:	b.ge	41c904 <method_schedule_shutdown+0x748>  // b.tcont
  41c798:	mov	w0, #0x3                   	// #3
  41c79c:	str	w0, [sp, #128]
  41c7a0:	ldr	w0, [sp, #76]
  41c7a4:	str	w0, [sp, #132]
  41c7a8:	str	wzr, [sp, #136]
  41c7ac:	ldr	w0, [sp, #136]
  41c7b0:	bl	4083e0 <log_get_max_level_realm@plt>
  41c7b4:	mov	w1, w0
  41c7b8:	ldr	w0, [sp, #128]
  41c7bc:	and	w0, w0, #0x7
  41c7c0:	cmp	w1, w0
  41c7c4:	b.lt	41c80c <method_schedule_shutdown+0x650>  // b.tstop
  41c7c8:	ldr	w0, [sp, #136]
  41c7cc:	lsl	w1, w0, #10
  41c7d0:	ldr	w0, [sp, #128]
  41c7d4:	orr	w6, w1, w0
  41c7d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c7dc:	add	x1, x0, #0xb5b
  41c7e0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c7e4:	add	x5, x0, #0x8b0
  41c7e8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c7ec:	add	x4, x0, #0xe48
  41c7f0:	mov	w3, #0x8a3                 	// #2211
  41c7f4:	mov	x2, x1
  41c7f8:	ldr	w1, [sp, #132]
  41c7fc:	mov	w0, w6
  41c800:	bl	407d60 <log_internal_realm@plt>
  41c804:	mov	w19, w0
  41c808:	b	41ca10 <method_schedule_shutdown+0x854>
  41c80c:	ldr	w0, [sp, #132]
  41c810:	cmp	w0, #0x0
  41c814:	cneg	w0, w0, lt  // lt = tstop
  41c818:	and	w0, w0, #0xff
  41c81c:	neg	w19, w0
  41c820:	b	41ca10 <method_schedule_shutdown+0x854>
  41c824:	ldr	x0, [sp, #208]
  41c828:	ldr	x7, [x0]
  41c82c:	ldr	x0, [sp, #208]
  41c830:	add	x8, x0, #0x140
  41c834:	ldr	x1, [sp, #160]
  41c838:	mov	x0, #0xffffffffffff5d00    	// #-41728
  41c83c:	movk	x0, #0xee1e, lsl #16
  41c840:	add	x1, x1, x0
  41c844:	ldr	x6, [sp, #208]
  41c848:	adrp	x0, 41b000 <verify_shutdown_creds+0x114>
  41c84c:	add	x5, x0, #0x8a8
  41c850:	mov	x4, #0x0                   	// #0
  41c854:	mov	x3, x1
  41c858:	mov	w2, #0x0                   	// #0
  41c85c:	mov	x1, x8
  41c860:	mov	x0, x7
  41c864:	bl	4074d0 <sd_event_add_time@plt>
  41c868:	str	w0, [sp, #76]
  41c86c:	ldr	w0, [sp, #76]
  41c870:	cmp	w0, #0x0
  41c874:	b.ge	41c904 <method_schedule_shutdown+0x748>  // b.tcont
  41c878:	mov	w0, #0x3                   	// #3
  41c87c:	str	w0, [sp, #116]
  41c880:	ldr	w0, [sp, #76]
  41c884:	str	w0, [sp, #120]
  41c888:	str	wzr, [sp, #124]
  41c88c:	ldr	w0, [sp, #124]
  41c890:	bl	4083e0 <log_get_max_level_realm@plt>
  41c894:	mov	w1, w0
  41c898:	ldr	w0, [sp, #116]
  41c89c:	and	w0, w0, #0x7
  41c8a0:	cmp	w1, w0
  41c8a4:	b.lt	41c8ec <method_schedule_shutdown+0x730>  // b.tstop
  41c8a8:	ldr	w0, [sp, #124]
  41c8ac:	lsl	w1, w0, #10
  41c8b0:	ldr	w0, [sp, #116]
  41c8b4:	orr	w6, w1, w0
  41c8b8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c8bc:	add	x1, x0, #0xb5b
  41c8c0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41c8c4:	add	x5, x0, #0xfc8
  41c8c8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c8cc:	add	x4, x0, #0xe48
  41c8d0:	mov	w3, #0x8a8                 	// #2216
  41c8d4:	mov	x2, x1
  41c8d8:	ldr	w1, [sp, #120]
  41c8dc:	mov	w0, w6
  41c8e0:	bl	407d60 <log_internal_realm@plt>
  41c8e4:	mov	w19, w0
  41c8e8:	b	41ca10 <method_schedule_shutdown+0x854>
  41c8ec:	ldr	w0, [sp, #120]
  41c8f0:	cmp	w0, #0x0
  41c8f4:	cneg	w0, w0, lt  // lt = tstop
  41c8f8:	and	w0, w0, #0xff
  41c8fc:	neg	w19, w0
  41c900:	b	41ca10 <method_schedule_shutdown+0x854>
  41c904:	ldr	x1, [sp, #160]
  41c908:	ldr	x0, [sp, #208]
  41c90c:	str	x1, [x0, #288]
  41c910:	add	x0, sp, #0x98
  41c914:	mov	x2, x0
  41c918:	mov	x1, #0x8                   	// #8
  41c91c:	movk	x1, #0x4000, lsl #16
  41c920:	movk	x1, #0x8000, lsl #48
  41c924:	ldr	x0, [sp, #56]
  41c928:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  41c92c:	str	w0, [sp, #76]
  41c930:	ldr	w0, [sp, #76]
  41c934:	cmp	w0, #0x0
  41c938:	b.lt	41c9c0 <method_schedule_shutdown+0x804>  // b.tstop
  41c93c:	str	xzr, [sp, #176]
  41c940:	ldr	x2, [sp, #152]
  41c944:	ldr	x0, [sp, #208]
  41c948:	add	x0, x0, #0x130
  41c94c:	mov	x1, x0
  41c950:	mov	x0, x2
  41c954:	bl	407070 <sd_bus_creds_get_uid@plt>
  41c958:	ldr	x0, [sp, #152]
  41c95c:	add	x1, sp, #0xb0
  41c960:	bl	407730 <sd_bus_creds_get_tty@plt>
  41c964:	ldr	x0, [sp, #208]
  41c968:	add	x0, x0, #0x138
  41c96c:	ldr	x1, [sp, #176]
  41c970:	bl	407400 <free_and_strdup@plt>
  41c974:	str	w0, [sp, #76]
  41c978:	ldr	w0, [sp, #76]
  41c97c:	cmp	w0, #0x0
  41c980:	b.ge	41c9c0 <method_schedule_shutdown+0x804>  // b.tcont
  41c984:	ldr	x0, [sp, #208]
  41c988:	ldr	x0, [x0, #296]
  41c98c:	bl	407550 <sd_event_source_unref@plt>
  41c990:	mov	x1, x0
  41c994:	ldr	x0, [sp, #208]
  41c998:	str	x1, [x0, #296]
  41c99c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41c9a0:	add	x1, x0, #0xb5b
  41c9a4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41c9a8:	add	x3, x0, #0xe48
  41c9ac:	mov	w2, #0x8b7                 	// #2231
  41c9b0:	mov	w0, #0x0                   	// #0
  41c9b4:	bl	408330 <log_oom_internal@plt>
  41c9b8:	mov	w19, w0
  41c9bc:	b	41ca10 <method_schedule_shutdown+0x854>
  41c9c0:	ldr	x0, [sp, #208]
  41c9c4:	bl	439ff0 <manager_setup_wall_message_timer>
  41c9c8:	str	w0, [sp, #76]
  41c9cc:	ldr	w0, [sp, #76]
  41c9d0:	cmp	w0, #0x0
  41c9d4:	b.ge	41c9e0 <method_schedule_shutdown+0x824>  // b.tcont
  41c9d8:	ldr	w19, [sp, #76]
  41c9dc:	b	41ca10 <method_schedule_shutdown+0x854>
  41c9e0:	ldr	x0, [sp, #208]
  41c9e4:	bl	41b95c <update_schedule_file>
  41c9e8:	str	w0, [sp, #76]
  41c9ec:	ldr	w0, [sp, #76]
  41c9f0:	cmp	w0, #0x0
  41c9f4:	b.ge	41ca00 <method_schedule_shutdown+0x844>  // b.tcont
  41c9f8:	ldr	w19, [sp, #76]
  41c9fc:	b	41ca10 <method_schedule_shutdown+0x854>
  41ca00:	mov	x1, #0x0                   	// #0
  41ca04:	ldr	x0, [sp, #56]
  41ca08:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41ca0c:	mov	w19, w0
  41ca10:	add	x0, sp, #0x98
  41ca14:	bl	413f90 <sd_bus_creds_unrefp>
  41ca18:	mov	w1, w19
  41ca1c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41ca20:	ldr	x0, [x0, #4024]
  41ca24:	ldr	x2, [sp, #216]
  41ca28:	ldr	x0, [x0]
  41ca2c:	eor	x0, x2, x0
  41ca30:	cmp	x0, #0x0
  41ca34:	b.eq	41ca3c <method_schedule_shutdown+0x880>  // b.none
  41ca38:	bl	407b20 <__stack_chk_fail@plt>
  41ca3c:	mov	w0, w1
  41ca40:	ldr	x19, [sp, #16]
  41ca44:	ldp	x29, x30, [sp], #224
  41ca48:	ret

000000000041ca4c <method_cancel_scheduled_shutdown>:
  41ca4c:	stp	x29, x30, [sp, #-112]!
  41ca50:	mov	x29, sp
  41ca54:	str	x0, [sp, #40]
  41ca58:	str	x1, [sp, #32]
  41ca5c:	str	x2, [sp, #24]
  41ca60:	adrp	x0, 460000 <wordlist.10364+0x370>
  41ca64:	ldr	x0, [x0, #4024]
  41ca68:	ldr	x1, [x0]
  41ca6c:	str	x1, [sp, #104]
  41ca70:	mov	x1, #0x0                   	// #0
  41ca74:	ldr	x0, [sp, #32]
  41ca78:	str	x0, [sp, #96]
  41ca7c:	ldr	x0, [sp, #96]
  41ca80:	cmp	x0, #0x0
  41ca84:	cset	w0, eq  // eq = none
  41ca88:	and	w0, w0, #0xff
  41ca8c:	and	x0, x0, #0xff
  41ca90:	cmp	x0, #0x0
  41ca94:	b.eq	41cac0 <method_cancel_scheduled_shutdown+0x74>  // b.none
  41ca98:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ca9c:	add	x1, x0, #0xb5b
  41caa0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41caa4:	add	x4, x0, #0xe68
  41caa8:	mov	w3, #0x8ca                 	// #2250
  41caac:	mov	x2, x1
  41cab0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cab4:	add	x1, x0, #0xb78
  41cab8:	mov	w0, #0x0                   	// #0
  41cabc:	bl	407650 <log_assert_failed_realm@plt>
  41cac0:	ldr	x0, [sp, #40]
  41cac4:	cmp	x0, #0x0
  41cac8:	cset	w0, eq  // eq = none
  41cacc:	and	w0, w0, #0xff
  41cad0:	and	x0, x0, #0xff
  41cad4:	cmp	x0, #0x0
  41cad8:	b.eq	41cb04 <method_cancel_scheduled_shutdown+0xb8>  // b.none
  41cadc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cae0:	add	x1, x0, #0xb5b
  41cae4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41cae8:	add	x4, x0, #0xe68
  41caec:	mov	w3, #0x8cb                 	// #2251
  41caf0:	mov	x2, x1
  41caf4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41caf8:	add	x1, x0, #0xd78
  41cafc:	mov	w0, #0x0                   	// #0
  41cb00:	bl	407650 <log_assert_failed_realm@plt>
  41cb04:	ldr	x0, [sp, #96]
  41cb08:	ldr	x0, [x0, #280]
  41cb0c:	cmp	x0, #0x0
  41cb10:	cset	w0, ne  // ne = any
  41cb14:	strb	w0, [sp, #63]
  41cb18:	ldr	x0, [sp, #96]
  41cb1c:	bl	41bd38 <reset_scheduled_shutdown>
  41cb20:	ldrb	w0, [sp, #63]
  41cb24:	cmp	w0, #0x0
  41cb28:	b.eq	41cbcc <method_cancel_scheduled_shutdown+0x180>  // b.none
  41cb2c:	ldr	x0, [sp, #96]
  41cb30:	ldr	w0, [x0, #344]
  41cb34:	cmp	w0, #0x0
  41cb38:	b.eq	41cbcc <method_cancel_scheduled_shutdown+0x180>  // b.none
  41cb3c:	str	xzr, [sp, #72]
  41cb40:	str	xzr, [sp, #80]
  41cb44:	str	xzr, [sp, #88]
  41cb48:	str	wzr, [sp, #64]
  41cb4c:	add	x0, sp, #0x48
  41cb50:	mov	x2, x0
  41cb54:	mov	x1, #0x8                   	// #8
  41cb58:	movk	x1, #0x4000, lsl #16
  41cb5c:	movk	x1, #0x8000, lsl #48
  41cb60:	ldr	x0, [sp, #40]
  41cb64:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  41cb68:	str	w0, [sp, #68]
  41cb6c:	ldr	w0, [sp, #68]
  41cb70:	cmp	w0, #0x0
  41cb74:	b.lt	41cb90 <method_cancel_scheduled_shutdown+0x144>  // b.tstop
  41cb78:	ldr	x0, [sp, #72]
  41cb7c:	add	x1, sp, #0x40
  41cb80:	bl	407070 <sd_bus_creds_get_uid@plt>
  41cb84:	ldr	x0, [sp, #72]
  41cb88:	add	x1, sp, #0x58
  41cb8c:	bl	407730 <sd_bus_creds_get_tty@plt>
  41cb90:	ldr	w0, [sp, #64]
  41cb94:	bl	4080b0 <uid_to_name@plt>
  41cb98:	str	x0, [sp, #80]
  41cb9c:	ldr	x1, [sp, #80]
  41cba0:	ldr	x2, [sp, #88]
  41cba4:	ldr	x4, [sp, #96]
  41cba8:	adrp	x0, 460000 <wordlist.10364+0x370>
  41cbac:	ldr	x3, [x0, #4040]
  41cbb0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41cbb4:	add	x0, x0, #0xfe8
  41cbb8:	bl	407de0 <utmp_wall@plt>
  41cbbc:	add	x0, sp, #0x50
  41cbc0:	bl	413cc4 <freep>
  41cbc4:	add	x0, sp, #0x48
  41cbc8:	bl	413f90 <sd_bus_creds_unrefp>
  41cbcc:	ldrb	w0, [sp, #63]
  41cbd0:	mov	w2, w0
  41cbd4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cbd8:	add	x1, x0, #0xd20
  41cbdc:	ldr	x0, [sp, #40]
  41cbe0:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41cbe4:	mov	w1, w0
  41cbe8:	adrp	x0, 460000 <wordlist.10364+0x370>
  41cbec:	ldr	x0, [x0, #4024]
  41cbf0:	ldr	x2, [sp, #104]
  41cbf4:	ldr	x0, [x0]
  41cbf8:	eor	x0, x2, x0
  41cbfc:	cmp	x0, #0x0
  41cc00:	b.eq	41cc08 <method_cancel_scheduled_shutdown+0x1bc>  // b.none
  41cc04:	bl	407b20 <__stack_chk_fail@plt>
  41cc08:	mov	w0, w1
  41cc0c:	ldp	x29, x30, [sp], #112
  41cc10:	ret

000000000041cc14 <method_can_shutdown_or_sleep>:
  41cc14:	stp	x29, x30, [sp, #-160]!
  41cc18:	mov	x29, sp
  41cc1c:	stp	x19, x20, [sp, #16]
  41cc20:	str	x0, [sp, #88]
  41cc24:	str	x1, [sp, #80]
  41cc28:	str	w2, [sp, #76]
  41cc2c:	str	x3, [sp, #64]
  41cc30:	str	x4, [sp, #56]
  41cc34:	str	x5, [sp, #48]
  41cc38:	str	x6, [sp, #40]
  41cc3c:	str	x7, [sp, #32]
  41cc40:	adrp	x0, 460000 <wordlist.10364+0x370>
  41cc44:	ldr	x0, [x0, #4024]
  41cc48:	ldr	x1, [x0]
  41cc4c:	str	x1, [sp, #152]
  41cc50:	mov	x1, #0x0                   	// #0
  41cc54:	str	xzr, [sp, #120]
  41cc58:	str	xzr, [sp, #136]
  41cc5c:	ldr	x0, [sp, #88]
  41cc60:	cmp	x0, #0x0
  41cc64:	cset	w0, eq  // eq = none
  41cc68:	and	w0, w0, #0xff
  41cc6c:	and	x0, x0, #0xff
  41cc70:	cmp	x0, #0x0
  41cc74:	b.eq	41cca0 <method_can_shutdown_or_sleep+0x8c>  // b.none
  41cc78:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cc7c:	add	x1, x0, #0xb5b
  41cc80:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41cc84:	add	x4, x0, #0xe90
  41cc88:	mov	w3, #0x8f6                 	// #2294
  41cc8c:	mov	x2, x1
  41cc90:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cc94:	add	x1, x0, #0xb78
  41cc98:	mov	w0, #0x0                   	// #0
  41cc9c:	bl	407650 <log_assert_failed_realm@plt>
  41cca0:	ldr	x0, [sp, #80]
  41cca4:	cmp	x0, #0x0
  41cca8:	cset	w0, eq  // eq = none
  41ccac:	and	w0, w0, #0xff
  41ccb0:	and	x0, x0, #0xff
  41ccb4:	cmp	x0, #0x0
  41ccb8:	b.eq	41cce4 <method_can_shutdown_or_sleep+0xd0>  // b.none
  41ccbc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ccc0:	add	x1, x0, #0xb5b
  41ccc4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41ccc8:	add	x4, x0, #0xe90
  41cccc:	mov	w3, #0x8f7                 	// #2295
  41ccd0:	mov	x2, x1
  41ccd4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ccd8:	add	x1, x0, #0xd78
  41ccdc:	mov	w0, #0x0                   	// #0
  41cce0:	bl	407650 <log_assert_failed_realm@plt>
  41cce4:	ldr	w0, [sp, #76]
  41cce8:	lsr	w0, w0, #31
  41ccec:	and	w0, w0, #0xff
  41ccf0:	and	x0, x0, #0xff
  41ccf4:	cmp	x0, #0x0
  41ccf8:	b.eq	41cd24 <method_can_shutdown_or_sleep+0x110>  // b.none
  41ccfc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cd00:	add	x1, x0, #0xb5b
  41cd04:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41cd08:	add	x4, x0, #0xe90
  41cd0c:	mov	w3, #0x8f8                 	// #2296
  41cd10:	mov	x2, x1
  41cd14:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41cd18:	add	x1, x0, #0x880
  41cd1c:	mov	w0, #0x0                   	// #0
  41cd20:	bl	407650 <log_assert_failed_realm@plt>
  41cd24:	ldr	w0, [sp, #76]
  41cd28:	cmp	w0, #0x80
  41cd2c:	cset	w0, gt
  41cd30:	and	w0, w0, #0xff
  41cd34:	and	x0, x0, #0xff
  41cd38:	cmp	x0, #0x0
  41cd3c:	b.eq	41cd68 <method_can_shutdown_or_sleep+0x154>  // b.none
  41cd40:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cd44:	add	x1, x0, #0xb5b
  41cd48:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41cd4c:	add	x4, x0, #0xe90
  41cd50:	mov	w3, #0x8f9                 	// #2297
  41cd54:	mov	x2, x1
  41cd58:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41cd5c:	add	x1, x0, #0x920
  41cd60:	mov	w0, #0x0                   	// #0
  41cd64:	bl	407650 <log_assert_failed_realm@plt>
  41cd68:	ldr	x0, [sp, #64]
  41cd6c:	cmp	x0, #0x0
  41cd70:	cset	w0, eq  // eq = none
  41cd74:	and	w0, w0, #0xff
  41cd78:	and	x0, x0, #0xff
  41cd7c:	cmp	x0, #0x0
  41cd80:	b.eq	41cdac <method_can_shutdown_or_sleep+0x198>  // b.none
  41cd84:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cd88:	add	x1, x0, #0xb5b
  41cd8c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41cd90:	add	x4, x0, #0xe90
  41cd94:	mov	w3, #0x8fa                 	// #2298
  41cd98:	mov	x2, x1
  41cd9c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41cda0:	add	x1, x0, #0x10
  41cda4:	mov	w0, #0x0                   	// #0
  41cda8:	bl	407650 <log_assert_failed_realm@plt>
  41cdac:	ldr	x0, [sp, #56]
  41cdb0:	cmp	x0, #0x0
  41cdb4:	cset	w0, eq  // eq = none
  41cdb8:	and	w0, w0, #0xff
  41cdbc:	and	x0, x0, #0xff
  41cdc0:	cmp	x0, #0x0
  41cdc4:	b.eq	41cdf0 <method_can_shutdown_or_sleep+0x1dc>  // b.none
  41cdc8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cdcc:	add	x1, x0, #0xb5b
  41cdd0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41cdd4:	add	x4, x0, #0xe90
  41cdd8:	mov	w3, #0x8fb                 	// #2299
  41cddc:	mov	x2, x1
  41cde0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41cde4:	add	x1, x0, #0x18
  41cde8:	mov	w0, #0x0                   	// #0
  41cdec:	bl	407650 <log_assert_failed_realm@plt>
  41cdf0:	ldr	x0, [sp, #48]
  41cdf4:	cmp	x0, #0x0
  41cdf8:	cset	w0, eq  // eq = none
  41cdfc:	and	w0, w0, #0xff
  41ce00:	and	x0, x0, #0xff
  41ce04:	cmp	x0, #0x0
  41ce08:	b.eq	41ce34 <method_can_shutdown_or_sleep+0x220>  // b.none
  41ce0c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ce10:	add	x1, x0, #0xb5b
  41ce14:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41ce18:	add	x4, x0, #0xe90
  41ce1c:	mov	w3, #0x8fc                 	// #2300
  41ce20:	mov	x2, x1
  41ce24:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ce28:	add	x1, x0, #0x38
  41ce2c:	mov	w0, #0x0                   	// #0
  41ce30:	bl	407650 <log_assert_failed_realm@plt>
  41ce34:	ldr	x0, [sp, #40]
  41ce38:	cmp	x0, #0x0
  41ce3c:	b.eq	41ceb4 <method_can_shutdown_or_sleep+0x2a0>  // b.none
  41ce40:	ldr	x0, [sp, #40]
  41ce44:	bl	407d40 <can_sleep@plt>
  41ce48:	str	w0, [sp, #112]
  41ce4c:	strb	wzr, [sp, #105]
  41ce50:	ldr	w0, [sp, #112]
  41ce54:	cmn	w0, #0x1c
  41ce58:	b.eq	41ce68 <method_can_shutdown_or_sleep+0x254>  // b.none
  41ce5c:	ldr	w0, [sp, #112]
  41ce60:	cmp	w0, #0x0
  41ce64:	b.ne	41ce70 <method_can_shutdown_or_sleep+0x25c>  // b.any
  41ce68:	mov	w0, #0x1                   	// #1
  41ce6c:	strb	w0, [sp, #105]
  41ce70:	nop
  41ce74:	ldrb	w0, [sp, #105]
  41ce78:	cmp	w0, #0x0
  41ce7c:	b.eq	41cea0 <method_can_shutdown_or_sleep+0x28c>  // b.none
  41ce80:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ce84:	add	x2, x0, #0x50
  41ce88:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ce8c:	add	x1, x0, #0xd08
  41ce90:	ldr	x0, [sp, #80]
  41ce94:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41ce98:	mov	w19, w0
  41ce9c:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41cea0:	ldr	w0, [sp, #112]
  41cea4:	cmp	w0, #0x0
  41cea8:	b.ge	41ceb4 <method_can_shutdown_or_sleep+0x2a0>  // b.tcont
  41ceac:	ldr	w19, [sp, #112]
  41ceb0:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41ceb4:	add	x0, sp, #0x78
  41ceb8:	mov	x2, x0
  41cebc:	mov	x1, #0x10                  	// #16
  41cec0:	ldr	x0, [sp, #80]
  41cec4:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  41cec8:	str	w0, [sp, #112]
  41cecc:	ldr	w0, [sp, #112]
  41ced0:	cmp	w0, #0x0
  41ced4:	b.ge	41cee0 <method_can_shutdown_or_sleep+0x2cc>  // b.tcont
  41ced8:	ldr	w19, [sp, #112]
  41cedc:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41cee0:	ldr	x0, [sp, #120]
  41cee4:	add	x1, sp, #0x6c
  41cee8:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  41ceec:	str	w0, [sp, #112]
  41cef0:	ldr	w0, [sp, #112]
  41cef4:	cmp	w0, #0x0
  41cef8:	b.ge	41cf04 <method_can_shutdown_or_sleep+0x2f0>  // b.tcont
  41cefc:	ldr	w19, [sp, #112]
  41cf00:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41cf04:	ldr	w0, [sp, #108]
  41cf08:	mov	w1, w0
  41cf0c:	ldr	x0, [sp, #88]
  41cf10:	bl	419800 <have_multiple_sessions>
  41cf14:	str	w0, [sp, #112]
  41cf18:	ldr	w0, [sp, #112]
  41cf1c:	cmp	w0, #0x0
  41cf20:	b.ge	41cf2c <method_can_shutdown_or_sleep+0x318>  // b.tcont
  41cf24:	ldr	w19, [sp, #112]
  41cf28:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41cf2c:	ldr	w0, [sp, #112]
  41cf30:	cmp	w0, #0x0
  41cf34:	cset	w0, gt
  41cf38:	strb	w0, [sp, #106]
  41cf3c:	ldr	w0, [sp, #108]
  41cf40:	mov	x7, #0x0                   	// #0
  41cf44:	mov	w6, w0
  41cf48:	mov	w5, #0x1                   	// #1
  41cf4c:	mov	w4, #0x0                   	// #0
  41cf50:	mov	x3, #0x0                   	// #0
  41cf54:	mov	w2, #0x0                   	// #0
  41cf58:	ldr	w1, [sp, #76]
  41cf5c:	ldr	x0, [sp, #88]
  41cf60:	bl	424730 <manager_is_inhibited>
  41cf64:	strb	w0, [sp, #107]
  41cf68:	ldr	x0, [sp, #40]
  41cf6c:	bl	40f08c <handle_action_from_string>
  41cf70:	str	w0, [sp, #116]
  41cf74:	ldr	w0, [sp, #116]
  41cf78:	cmp	w0, #0x0
  41cf7c:	b.lt	41d01c <method_can_shutdown_or_sleep+0x408>  // b.tstop
  41cf80:	ldr	w0, [sp, #116]
  41cf84:	bl	40e5bc <manager_target_for_action>
  41cf88:	str	x0, [sp, #144]
  41cf8c:	ldr	x0, [sp, #144]
  41cf90:	cmp	x0, #0x0
  41cf94:	b.eq	41d01c <method_can_shutdown_or_sleep+0x408>  // b.none
  41cf98:	str	xzr, [sp, #128]
  41cf9c:	ldr	x0, [sp, #88]
  41cfa0:	ldr	x0, [x0, #8]
  41cfa4:	add	x1, sp, #0x80
  41cfa8:	mov	x2, x1
  41cfac:	ldr	x1, [sp, #144]
  41cfb0:	bl	407560 <unit_load_state@plt>
  41cfb4:	str	w0, [sp, #112]
  41cfb8:	ldr	w0, [sp, #112]
  41cfbc:	cmp	w0, #0x0
  41cfc0:	b.ge	41cfd0 <method_can_shutdown_or_sleep+0x3bc>  // b.tcont
  41cfc4:	ldr	w19, [sp, #112]
  41cfc8:	mov	w20, #0x0                   	// #0
  41cfcc:	b	41d004 <method_can_shutdown_or_sleep+0x3f0>
  41cfd0:	ldr	x2, [sp, #128]
  41cfd4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41cfd8:	add	x1, x0, #0x8f0
  41cfdc:	mov	x0, x2
  41cfe0:	bl	407f30 <strcmp@plt>
  41cfe4:	cmp	w0, #0x0
  41cfe8:	b.eq	41d000 <method_can_shutdown_or_sleep+0x3ec>  // b.none
  41cfec:	adrp	x0, 43e000 <__func__.12250+0x440>
  41cff0:	add	x0, x0, #0xd00
  41cff4:	str	x0, [sp, #136]
  41cff8:	mov	w20, #0x1                   	// #1
  41cffc:	b	41d004 <method_can_shutdown_or_sleep+0x3f0>
  41d000:	mov	w20, #0x2                   	// #2
  41d004:	add	x0, sp, #0x80
  41d008:	bl	413cc4 <freep>
  41d00c:	cmp	w20, #0x0
  41d010:	b.eq	41d22c <method_can_shutdown_or_sleep+0x618>  // b.none
  41d014:	cmp	w20, #0x2
  41d018:	b.ne	41d214 <method_can_shutdown_or_sleep+0x600>  // b.any
  41d01c:	ldrb	w0, [sp, #106]
  41d020:	cmp	w0, #0x0
  41d024:	b.eq	41d0a8 <method_can_shutdown_or_sleep+0x494>  // b.none
  41d028:	add	x0, sp, #0x80
  41d02c:	ldr	x6, [sp, #32]
  41d030:	mov	x5, x0
  41d034:	mov	w4, #0xffffffff            	// #-1
  41d038:	mov	x3, #0x0                   	// #0
  41d03c:	ldr	x2, [sp, #56]
  41d040:	mov	w1, #0x16                  	// #22
  41d044:	ldr	x0, [sp, #80]
  41d048:	bl	4076e0 <bus_test_polkit@plt>
  41d04c:	str	w0, [sp, #112]
  41d050:	ldr	w0, [sp, #112]
  41d054:	cmp	w0, #0x0
  41d058:	b.ge	41d064 <method_can_shutdown_or_sleep+0x450>  // b.tcont
  41d05c:	ldr	w19, [sp, #112]
  41d060:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41d064:	ldr	w0, [sp, #112]
  41d068:	cmp	w0, #0x0
  41d06c:	b.le	41d080 <method_can_shutdown_or_sleep+0x46c>
  41d070:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d074:	add	x0, x0, #0xce8
  41d078:	str	x0, [sp, #136]
  41d07c:	b	41d0a8 <method_can_shutdown_or_sleep+0x494>
  41d080:	ldrb	w0, [sp, #128]
  41d084:	cmp	w0, #0x0
  41d088:	b.eq	41d09c <method_can_shutdown_or_sleep+0x488>  // b.none
  41d08c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d090:	add	x0, x0, #0xcf0
  41d094:	str	x0, [sp, #136]
  41d098:	b	41d0a8 <method_can_shutdown_or_sleep+0x494>
  41d09c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d0a0:	add	x0, x0, #0xd00
  41d0a4:	str	x0, [sp, #136]
  41d0a8:	ldrb	w0, [sp, #107]
  41d0ac:	cmp	w0, #0x0
  41d0b0:	b.eq	41d164 <method_can_shutdown_or_sleep+0x550>  // b.none
  41d0b4:	add	x0, sp, #0x80
  41d0b8:	ldr	x6, [sp, #32]
  41d0bc:	mov	x5, x0
  41d0c0:	mov	w4, #0xffffffff            	// #-1
  41d0c4:	mov	x3, #0x0                   	// #0
  41d0c8:	ldr	x2, [sp, #48]
  41d0cc:	mov	w1, #0x16                  	// #22
  41d0d0:	ldr	x0, [sp, #80]
  41d0d4:	bl	4076e0 <bus_test_polkit@plt>
  41d0d8:	str	w0, [sp, #112]
  41d0dc:	ldr	w0, [sp, #112]
  41d0e0:	cmp	w0, #0x0
  41d0e4:	b.ge	41d0f0 <method_can_shutdown_or_sleep+0x4dc>  // b.tcont
  41d0e8:	ldr	w19, [sp, #112]
  41d0ec:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41d0f0:	ldr	w0, [sp, #112]
  41d0f4:	cmp	w0, #0x0
  41d0f8:	b.le	41d118 <method_can_shutdown_or_sleep+0x504>
  41d0fc:	ldr	x0, [sp, #136]
  41d100:	cmp	x0, #0x0
  41d104:	b.ne	41d164 <method_can_shutdown_or_sleep+0x550>  // b.any
  41d108:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d10c:	add	x0, x0, #0xce8
  41d110:	str	x0, [sp, #136]
  41d114:	b	41d164 <method_can_shutdown_or_sleep+0x550>
  41d118:	ldrb	w0, [sp, #128]
  41d11c:	cmp	w0, #0x0
  41d120:	b.eq	41d158 <method_can_shutdown_or_sleep+0x544>  // b.none
  41d124:	ldr	x0, [sp, #136]
  41d128:	cmp	x0, #0x0
  41d12c:	b.eq	41d148 <method_can_shutdown_or_sleep+0x534>  // b.none
  41d130:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d134:	add	x1, x0, #0xce8
  41d138:	ldr	x0, [sp, #136]
  41d13c:	bl	407f30 <strcmp@plt>
  41d140:	cmp	w0, #0x0
  41d144:	b.ne	41d164 <method_can_shutdown_or_sleep+0x550>  // b.any
  41d148:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d14c:	add	x0, x0, #0xcf0
  41d150:	str	x0, [sp, #136]
  41d154:	b	41d164 <method_can_shutdown_or_sleep+0x550>
  41d158:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d15c:	add	x0, x0, #0xd00
  41d160:	str	x0, [sp, #136]
  41d164:	ldrb	w0, [sp, #106]
  41d168:	eor	w0, w0, #0x1
  41d16c:	and	w0, w0, #0xff
  41d170:	cmp	w0, #0x0
  41d174:	b.eq	41d210 <method_can_shutdown_or_sleep+0x5fc>  // b.none
  41d178:	ldrb	w0, [sp, #107]
  41d17c:	eor	w0, w0, #0x1
  41d180:	and	w0, w0, #0xff
  41d184:	cmp	w0, #0x0
  41d188:	b.eq	41d210 <method_can_shutdown_or_sleep+0x5fc>  // b.none
  41d18c:	add	x0, sp, #0x80
  41d190:	ldr	x6, [sp, #32]
  41d194:	mov	x5, x0
  41d198:	mov	w4, #0xffffffff            	// #-1
  41d19c:	mov	x3, #0x0                   	// #0
  41d1a0:	ldr	x2, [sp, #64]
  41d1a4:	mov	w1, #0x16                  	// #22
  41d1a8:	ldr	x0, [sp, #80]
  41d1ac:	bl	4076e0 <bus_test_polkit@plt>
  41d1b0:	str	w0, [sp, #112]
  41d1b4:	ldr	w0, [sp, #112]
  41d1b8:	cmp	w0, #0x0
  41d1bc:	b.ge	41d1c8 <method_can_shutdown_or_sleep+0x5b4>  // b.tcont
  41d1c0:	ldr	w19, [sp, #112]
  41d1c4:	b	41d22c <method_can_shutdown_or_sleep+0x618>
  41d1c8:	ldr	w0, [sp, #112]
  41d1cc:	cmp	w0, #0x0
  41d1d0:	b.le	41d1e4 <method_can_shutdown_or_sleep+0x5d0>
  41d1d4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d1d8:	add	x0, x0, #0xce8
  41d1dc:	str	x0, [sp, #136]
  41d1e0:	b	41d214 <method_can_shutdown_or_sleep+0x600>
  41d1e4:	ldrb	w0, [sp, #128]
  41d1e8:	cmp	w0, #0x0
  41d1ec:	b.eq	41d200 <method_can_shutdown_or_sleep+0x5ec>  // b.none
  41d1f0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d1f4:	add	x0, x0, #0xcf0
  41d1f8:	str	x0, [sp, #136]
  41d1fc:	b	41d214 <method_can_shutdown_or_sleep+0x600>
  41d200:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d204:	add	x0, x0, #0xd00
  41d208:	str	x0, [sp, #136]
  41d20c:	b	41d214 <method_can_shutdown_or_sleep+0x600>
  41d210:	nop
  41d214:	ldr	x2, [sp, #136]
  41d218:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d21c:	add	x1, x0, #0xd08
  41d220:	ldr	x0, [sp, #80]
  41d224:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41d228:	mov	w19, w0
  41d22c:	add	x0, sp, #0x78
  41d230:	bl	413f90 <sd_bus_creds_unrefp>
  41d234:	mov	w1, w19
  41d238:	adrp	x0, 460000 <wordlist.10364+0x370>
  41d23c:	ldr	x0, [x0, #4024]
  41d240:	ldr	x2, [sp, #152]
  41d244:	ldr	x0, [x0]
  41d248:	eor	x0, x2, x0
  41d24c:	cmp	x0, #0x0
  41d250:	b.eq	41d258 <method_can_shutdown_or_sleep+0x644>  // b.none
  41d254:	bl	407b20 <__stack_chk_fail@plt>
  41d258:	mov	w0, w1
  41d25c:	ldp	x19, x20, [sp, #16]
  41d260:	ldp	x29, x30, [sp], #160
  41d264:	ret

000000000041d268 <method_can_poweroff>:
  41d268:	stp	x29, x30, [sp, #-64]!
  41d26c:	mov	x29, sp
  41d270:	str	x0, [sp, #40]
  41d274:	str	x1, [sp, #32]
  41d278:	str	x2, [sp, #24]
  41d27c:	ldr	x0, [sp, #32]
  41d280:	str	x0, [sp, #56]
  41d284:	ldr	x7, [sp, #24]
  41d288:	mov	x6, #0x0                   	// #0
  41d28c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d290:	add	x5, x0, #0xa20
  41d294:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d298:	add	x4, x0, #0xa50
  41d29c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d2a0:	add	x3, x0, #0xa88
  41d2a4:	mov	w2, #0x1                   	// #1
  41d2a8:	ldr	x1, [sp, #40]
  41d2ac:	ldr	x0, [sp, #56]
  41d2b0:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d2b4:	ldp	x29, x30, [sp], #64
  41d2b8:	ret

000000000041d2bc <method_can_reboot>:
  41d2bc:	stp	x29, x30, [sp, #-64]!
  41d2c0:	mov	x29, sp
  41d2c4:	str	x0, [sp, #40]
  41d2c8:	str	x1, [sp, #32]
  41d2cc:	str	x2, [sp, #24]
  41d2d0:	ldr	x0, [sp, #32]
  41d2d4:	str	x0, [sp, #56]
  41d2d8:	ldr	x7, [sp, #24]
  41d2dc:	mov	x6, #0x0                   	// #0
  41d2e0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d2e4:	add	x5, x0, #0xab0
  41d2e8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d2ec:	add	x4, x0, #0xae0
  41d2f0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d2f4:	add	x3, x0, #0xb10
  41d2f8:	mov	w2, #0x1                   	// #1
  41d2fc:	ldr	x1, [sp, #40]
  41d300:	ldr	x0, [sp, #56]
  41d304:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d308:	ldp	x29, x30, [sp], #64
  41d30c:	ret

000000000041d310 <method_can_halt>:
  41d310:	stp	x29, x30, [sp, #-64]!
  41d314:	mov	x29, sp
  41d318:	str	x0, [sp, #40]
  41d31c:	str	x1, [sp, #32]
  41d320:	str	x2, [sp, #24]
  41d324:	ldr	x0, [sp, #32]
  41d328:	str	x0, [sp, #56]
  41d32c:	ldr	x7, [sp, #24]
  41d330:	mov	x6, #0x0                   	// #0
  41d334:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d338:	add	x5, x0, #0xb30
  41d33c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d340:	add	x4, x0, #0xb60
  41d344:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d348:	add	x3, x0, #0xb90
  41d34c:	mov	w2, #0x1                   	// #1
  41d350:	ldr	x1, [sp, #40]
  41d354:	ldr	x0, [sp, #56]
  41d358:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d35c:	ldp	x29, x30, [sp], #64
  41d360:	ret

000000000041d364 <method_can_suspend>:
  41d364:	stp	x29, x30, [sp, #-64]!
  41d368:	mov	x29, sp
  41d36c:	str	x0, [sp, #40]
  41d370:	str	x1, [sp, #32]
  41d374:	str	x2, [sp, #24]
  41d378:	ldr	x0, [sp, #32]
  41d37c:	str	x0, [sp, #56]
  41d380:	ldr	x7, [sp, #24]
  41d384:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d388:	add	x6, x0, #0xbb0
  41d38c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d390:	add	x5, x0, #0xbb8
  41d394:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d398:	add	x4, x0, #0xbe8
  41d39c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d3a0:	add	x3, x0, #0xc20
  41d3a4:	mov	w2, #0x2                   	// #2
  41d3a8:	ldr	x1, [sp, #40]
  41d3ac:	ldr	x0, [sp, #56]
  41d3b0:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d3b4:	ldp	x29, x30, [sp], #64
  41d3b8:	ret

000000000041d3bc <method_can_hibernate>:
  41d3bc:	stp	x29, x30, [sp, #-64]!
  41d3c0:	mov	x29, sp
  41d3c4:	str	x0, [sp, #40]
  41d3c8:	str	x1, [sp, #32]
  41d3cc:	str	x2, [sp, #24]
  41d3d0:	ldr	x0, [sp, #32]
  41d3d4:	str	x0, [sp, #56]
  41d3d8:	ldr	x7, [sp, #24]
  41d3dc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d3e0:	add	x6, x0, #0xc50
  41d3e4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d3e8:	add	x5, x0, #0xc60
  41d3ec:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d3f0:	add	x4, x0, #0xc90
  41d3f4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d3f8:	add	x3, x0, #0xcc8
  41d3fc:	mov	w2, #0x2                   	// #2
  41d400:	ldr	x1, [sp, #40]
  41d404:	ldr	x0, [sp, #56]
  41d408:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d40c:	ldp	x29, x30, [sp], #64
  41d410:	ret

000000000041d414 <method_can_hybrid_sleep>:
  41d414:	stp	x29, x30, [sp, #-64]!
  41d418:	mov	x29, sp
  41d41c:	str	x0, [sp, #40]
  41d420:	str	x1, [sp, #32]
  41d424:	str	x2, [sp, #24]
  41d428:	ldr	x0, [sp, #32]
  41d42c:	str	x0, [sp, #56]
  41d430:	ldr	x7, [sp, #24]
  41d434:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d438:	add	x6, x0, #0xd08
  41d43c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d440:	add	x5, x0, #0xc60
  41d444:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d448:	add	x4, x0, #0xc90
  41d44c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d450:	add	x3, x0, #0xcc8
  41d454:	mov	w2, #0x2                   	// #2
  41d458:	ldr	x1, [sp, #40]
  41d45c:	ldr	x0, [sp, #56]
  41d460:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d464:	ldp	x29, x30, [sp], #64
  41d468:	ret

000000000041d46c <method_can_suspend_then_hibernate>:
  41d46c:	stp	x29, x30, [sp, #-64]!
  41d470:	mov	x29, sp
  41d474:	str	x0, [sp, #40]
  41d478:	str	x1, [sp, #32]
  41d47c:	str	x2, [sp, #24]
  41d480:	ldr	x0, [sp, #32]
  41d484:	str	x0, [sp, #56]
  41d488:	ldr	x7, [sp, #24]
  41d48c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d490:	add	x6, x0, #0x58
  41d494:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d498:	add	x5, x0, #0xc60
  41d49c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d4a0:	add	x4, x0, #0xc90
  41d4a4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  41d4a8:	add	x3, x0, #0xcc8
  41d4ac:	mov	w2, #0x2                   	// #2
  41d4b0:	ldr	x1, [sp, #40]
  41d4b4:	ldr	x0, [sp, #56]
  41d4b8:	bl	41cc14 <method_can_shutdown_or_sleep>
  41d4bc:	ldp	x29, x30, [sp], #64
  41d4c0:	ret

000000000041d4c4 <property_get_reboot_parameter>:
  41d4c4:	stp	x29, x30, [sp, #-128]!
  41d4c8:	mov	x29, sp
  41d4cc:	str	x19, [sp, #16]
  41d4d0:	str	x0, [sp, #88]
  41d4d4:	str	x1, [sp, #80]
  41d4d8:	str	x2, [sp, #72]
  41d4dc:	str	x3, [sp, #64]
  41d4e0:	str	x4, [sp, #56]
  41d4e4:	str	x5, [sp, #48]
  41d4e8:	str	x6, [sp, #40]
  41d4ec:	adrp	x0, 460000 <wordlist.10364+0x370>
  41d4f0:	ldr	x0, [x0, #4024]
  41d4f4:	ldr	x1, [x0]
  41d4f8:	str	x1, [sp, #120]
  41d4fc:	mov	x1, #0x0                   	// #0
  41d500:	str	xzr, [sp, #112]
  41d504:	ldr	x0, [sp, #88]
  41d508:	cmp	x0, #0x0
  41d50c:	cset	w0, eq  // eq = none
  41d510:	and	w0, w0, #0xff
  41d514:	and	x0, x0, #0xff
  41d518:	cmp	x0, #0x0
  41d51c:	b.eq	41d548 <property_get_reboot_parameter+0x84>  // b.none
  41d520:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d524:	add	x1, x0, #0xb5b
  41d528:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d52c:	add	x4, x0, #0xeb0
  41d530:	mov	w3, #0x9be                 	// #2494
  41d534:	mov	x2, x1
  41d538:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d53c:	add	x1, x0, #0xd10
  41d540:	mov	w0, #0x0                   	// #0
  41d544:	bl	407650 <log_assert_failed_realm@plt>
  41d548:	ldr	x0, [sp, #56]
  41d54c:	cmp	x0, #0x0
  41d550:	cset	w0, eq  // eq = none
  41d554:	and	w0, w0, #0xff
  41d558:	and	x0, x0, #0xff
  41d55c:	cmp	x0, #0x0
  41d560:	b.eq	41d58c <property_get_reboot_parameter+0xc8>  // b.none
  41d564:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d568:	add	x1, x0, #0xb5b
  41d56c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d570:	add	x4, x0, #0xeb0
  41d574:	mov	w3, #0x9bf                 	// #2495
  41d578:	mov	x2, x1
  41d57c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d580:	add	x1, x0, #0xd18
  41d584:	mov	w0, #0x0                   	// #0
  41d588:	bl	407650 <log_assert_failed_realm@plt>
  41d58c:	ldr	x0, [sp, #48]
  41d590:	cmp	x0, #0x0
  41d594:	cset	w0, eq  // eq = none
  41d598:	and	w0, w0, #0xff
  41d59c:	and	x0, x0, #0xff
  41d5a0:	cmp	x0, #0x0
  41d5a4:	b.eq	41d5d0 <property_get_reboot_parameter+0x10c>  // b.none
  41d5a8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d5ac:	add	x1, x0, #0xb5b
  41d5b0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d5b4:	add	x4, x0, #0xeb0
  41d5b8:	mov	w3, #0x9c0                 	// #2496
  41d5bc:	mov	x2, x1
  41d5c0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d5c4:	add	x1, x0, #0x70
  41d5c8:	mov	w0, #0x0                   	// #0
  41d5cc:	bl	407650 <log_assert_failed_realm@plt>
  41d5d0:	add	x0, sp, #0x70
  41d5d4:	bl	407d70 <read_reboot_parameter@plt>
  41d5d8:	str	w0, [sp, #108]
  41d5dc:	ldr	w0, [sp, #108]
  41d5e0:	cmp	w0, #0x0
  41d5e4:	b.ge	41d5f0 <property_get_reboot_parameter+0x12c>  // b.tcont
  41d5e8:	ldr	w19, [sp, #108]
  41d5ec:	b	41d60c <property_get_reboot_parameter+0x148>
  41d5f0:	ldr	x0, [sp, #112]
  41d5f4:	mov	x2, x0
  41d5f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d5fc:	add	x1, x0, #0xd08
  41d600:	ldr	x0, [sp, #56]
  41d604:	bl	407590 <sd_bus_message_append@plt>
  41d608:	mov	w19, w0
  41d60c:	add	x0, sp, #0x70
  41d610:	bl	413cc4 <freep>
  41d614:	mov	w1, w19
  41d618:	adrp	x0, 460000 <wordlist.10364+0x370>
  41d61c:	ldr	x0, [x0, #4024]
  41d620:	ldr	x2, [sp, #120]
  41d624:	ldr	x0, [x0]
  41d628:	eor	x0, x2, x0
  41d62c:	cmp	x0, #0x0
  41d630:	b.eq	41d638 <property_get_reboot_parameter+0x174>  // b.none
  41d634:	bl	407b20 <__stack_chk_fail@plt>
  41d638:	mov	w0, w1
  41d63c:	ldr	x19, [sp, #16]
  41d640:	ldp	x29, x30, [sp], #128
  41d644:	ret

000000000041d648 <method_set_reboot_parameter>:
  41d648:	stp	x29, x30, [sp, #-80]!
  41d64c:	mov	x29, sp
  41d650:	str	x0, [sp, #40]
  41d654:	str	x1, [sp, #32]
  41d658:	str	x2, [sp, #24]
  41d65c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41d660:	ldr	x0, [x0, #4024]
  41d664:	ldr	x1, [x0]
  41d668:	str	x1, [sp, #72]
  41d66c:	mov	x1, #0x0                   	// #0
  41d670:	ldr	x0, [sp, #32]
  41d674:	str	x0, [sp, #64]
  41d678:	ldr	x0, [sp, #40]
  41d67c:	cmp	x0, #0x0
  41d680:	cset	w0, eq  // eq = none
  41d684:	and	w0, w0, #0xff
  41d688:	and	x0, x0, #0xff
  41d68c:	cmp	x0, #0x0
  41d690:	b.eq	41d6bc <method_set_reboot_parameter+0x74>  // b.none
  41d694:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d698:	add	x1, x0, #0xb5b
  41d69c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d6a0:	add	x4, x0, #0xed0
  41d6a4:	mov	w3, #0x9d2                 	// #2514
  41d6a8:	mov	x2, x1
  41d6ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d6b0:	add	x1, x0, #0xd78
  41d6b4:	mov	w0, #0x0                   	// #0
  41d6b8:	bl	407650 <log_assert_failed_realm@plt>
  41d6bc:	ldr	x0, [sp, #64]
  41d6c0:	cmp	x0, #0x0
  41d6c4:	cset	w0, eq  // eq = none
  41d6c8:	and	w0, w0, #0xff
  41d6cc:	and	x0, x0, #0xff
  41d6d0:	cmp	x0, #0x0
  41d6d4:	b.eq	41d700 <method_set_reboot_parameter+0xb8>  // b.none
  41d6d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d6dc:	add	x1, x0, #0xb5b
  41d6e0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d6e4:	add	x4, x0, #0xed0
  41d6e8:	mov	w3, #0x9d3                 	// #2515
  41d6ec:	mov	x2, x1
  41d6f0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d6f4:	add	x1, x0, #0xb78
  41d6f8:	mov	w0, #0x0                   	// #0
  41d6fc:	bl	407650 <log_assert_failed_realm@plt>
  41d700:	add	x0, sp, #0x38
  41d704:	mov	x2, x0
  41d708:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d70c:	add	x1, x0, #0xd08
  41d710:	ldr	x0, [sp, #40]
  41d714:	bl	407660 <sd_bus_message_read@plt>
  41d718:	str	w0, [sp, #52]
  41d71c:	ldr	w0, [sp, #52]
  41d720:	cmp	w0, #0x0
  41d724:	b.ge	41d730 <method_set_reboot_parameter+0xe8>  // b.tcont
  41d728:	ldr	w0, [sp, #52]
  41d72c:	b	41d800 <method_set_reboot_parameter+0x1b8>
  41d730:	bl	407ec0 <detect_container@plt>
  41d734:	str	w0, [sp, #52]
  41d738:	ldr	w0, [sp, #52]
  41d73c:	cmp	w0, #0x0
  41d740:	b.ge	41d74c <method_set_reboot_parameter+0x104>  // b.tcont
  41d744:	ldr	w0, [sp, #52]
  41d748:	b	41d800 <method_set_reboot_parameter+0x1b8>
  41d74c:	ldr	w0, [sp, #52]
  41d750:	cmp	w0, #0x0
  41d754:	b.le	41d774 <method_set_reboot_parameter+0x12c>
  41d758:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d75c:	add	x2, x0, #0x80
  41d760:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d764:	add	x1, x0, #0xb8
  41d768:	ldr	x0, [sp, #24]
  41d76c:	bl	407ae0 <sd_bus_error_setf@plt>
  41d770:	b	41d800 <method_set_reboot_parameter+0x1b8>
  41d774:	ldr	x0, [sp, #64]
  41d778:	add	x0, x0, #0x1b0
  41d77c:	ldr	x7, [sp, #24]
  41d780:	mov	x6, x0
  41d784:	mov	w5, #0xffffffff            	// #-1
  41d788:	mov	w4, #0x0                   	// #0
  41d78c:	mov	x3, #0x0                   	// #0
  41d790:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d794:	add	x2, x0, #0xe0
  41d798:	mov	w1, #0x15                  	// #21
  41d79c:	ldr	x0, [sp, #40]
  41d7a0:	bl	408350 <bus_verify_polkit_async@plt>
  41d7a4:	str	w0, [sp, #52]
  41d7a8:	ldr	w0, [sp, #52]
  41d7ac:	cmp	w0, #0x0
  41d7b0:	b.ge	41d7bc <method_set_reboot_parameter+0x174>  // b.tcont
  41d7b4:	ldr	w0, [sp, #52]
  41d7b8:	b	41d800 <method_set_reboot_parameter+0x1b8>
  41d7bc:	ldr	w0, [sp, #52]
  41d7c0:	cmp	w0, #0x0
  41d7c4:	b.ne	41d7d0 <method_set_reboot_parameter+0x188>  // b.any
  41d7c8:	mov	w0, #0x1                   	// #1
  41d7cc:	b	41d800 <method_set_reboot_parameter+0x1b8>
  41d7d0:	ldr	x0, [sp, #56]
  41d7d4:	mov	w1, #0x0                   	// #0
  41d7d8:	bl	407e70 <update_reboot_parameter_and_warn@plt>
  41d7dc:	str	w0, [sp, #52]
  41d7e0:	ldr	w0, [sp, #52]
  41d7e4:	cmp	w0, #0x0
  41d7e8:	b.ge	41d7f4 <method_set_reboot_parameter+0x1ac>  // b.tcont
  41d7ec:	ldr	w0, [sp, #52]
  41d7f0:	b	41d800 <method_set_reboot_parameter+0x1b8>
  41d7f4:	mov	x1, #0x0                   	// #0
  41d7f8:	ldr	x0, [sp, #40]
  41d7fc:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41d800:	mov	w1, w0
  41d804:	adrp	x0, 460000 <wordlist.10364+0x370>
  41d808:	ldr	x0, [x0, #4024]
  41d80c:	ldr	x2, [sp, #72]
  41d810:	ldr	x0, [x0]
  41d814:	eor	x0, x2, x0
  41d818:	cmp	x0, #0x0
  41d81c:	b.eq	41d824 <method_set_reboot_parameter+0x1dc>  // b.none
  41d820:	bl	407b20 <__stack_chk_fail@plt>
  41d824:	mov	w0, w1
  41d828:	ldp	x29, x30, [sp], #80
  41d82c:	ret

000000000041d830 <method_can_reboot_parameter>:
  41d830:	stp	x29, x30, [sp, #-64]!
  41d834:	mov	x29, sp
  41d838:	str	x0, [sp, #40]
  41d83c:	str	x1, [sp, #32]
  41d840:	str	x2, [sp, #24]
  41d844:	ldr	x0, [sp, #32]
  41d848:	str	x0, [sp, #56]
  41d84c:	ldr	x0, [sp, #40]
  41d850:	cmp	x0, #0x0
  41d854:	cset	w0, eq  // eq = none
  41d858:	and	w0, w0, #0xff
  41d85c:	and	x0, x0, #0xff
  41d860:	cmp	x0, #0x0
  41d864:	b.eq	41d890 <method_can_reboot_parameter+0x60>  // b.none
  41d868:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d86c:	add	x1, x0, #0xb5b
  41d870:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d874:	add	x4, x0, #0xef0
  41d878:	mov	w3, #0x9fc                 	// #2556
  41d87c:	mov	x2, x1
  41d880:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d884:	add	x1, x0, #0xd78
  41d888:	mov	w0, #0x0                   	// #0
  41d88c:	bl	407650 <log_assert_failed_realm@plt>
  41d890:	ldr	x0, [sp, #56]
  41d894:	cmp	x0, #0x0
  41d898:	cset	w0, eq  // eq = none
  41d89c:	and	w0, w0, #0xff
  41d8a0:	and	x0, x0, #0xff
  41d8a4:	cmp	x0, #0x0
  41d8a8:	b.eq	41d8d4 <method_can_reboot_parameter+0xa4>  // b.none
  41d8ac:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d8b0:	add	x1, x0, #0xb5b
  41d8b4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d8b8:	add	x4, x0, #0xef0
  41d8bc:	mov	w3, #0x9fd                 	// #2557
  41d8c0:	mov	x2, x1
  41d8c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d8c8:	add	x1, x0, #0xb78
  41d8cc:	mov	w0, #0x0                   	// #0
  41d8d0:	bl	407650 <log_assert_failed_realm@plt>
  41d8d4:	bl	407ec0 <detect_container@plt>
  41d8d8:	str	w0, [sp, #52]
  41d8dc:	ldr	w0, [sp, #52]
  41d8e0:	cmp	w0, #0x0
  41d8e4:	b.ge	41d8f0 <method_can_reboot_parameter+0xc0>  // b.tcont
  41d8e8:	ldr	w0, [sp, #52]
  41d8ec:	b	41d938 <method_can_reboot_parameter+0x108>
  41d8f0:	ldr	w0, [sp, #52]
  41d8f4:	cmp	w0, #0x0
  41d8f8:	b.le	41d918 <method_can_reboot_parameter+0xe8>
  41d8fc:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d900:	add	x2, x0, #0x50
  41d904:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d908:	add	x1, x0, #0xd08
  41d90c:	ldr	x0, [sp, #40]
  41d910:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41d914:	b	41d938 <method_can_reboot_parameter+0x108>
  41d918:	ldr	x5, [sp, #24]
  41d91c:	mov	w4, #0xffffffff            	// #-1
  41d920:	mov	x3, #0x0                   	// #0
  41d924:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41d928:	add	x2, x0, #0xe0
  41d92c:	mov	w1, #0x15                  	// #21
  41d930:	ldr	x0, [sp, #40]
  41d934:	bl	414a1c <return_test_polkit>
  41d938:	ldp	x29, x30, [sp], #64
  41d93c:	ret

000000000041d940 <property_get_reboot_to_firmware_setup>:
  41d940:	stp	x29, x30, [sp, #-128]!
  41d944:	mov	x29, sp
  41d948:	str	x0, [sp, #72]
  41d94c:	str	x1, [sp, #64]
  41d950:	str	x2, [sp, #56]
  41d954:	str	x3, [sp, #48]
  41d958:	str	x4, [sp, #40]
  41d95c:	str	x5, [sp, #32]
  41d960:	str	x6, [sp, #24]
  41d964:	ldr	x0, [sp, #72]
  41d968:	cmp	x0, #0x0
  41d96c:	cset	w0, eq  // eq = none
  41d970:	and	w0, w0, #0xff
  41d974:	and	x0, x0, #0xff
  41d978:	cmp	x0, #0x0
  41d97c:	b.eq	41d9a8 <property_get_reboot_to_firmware_setup+0x68>  // b.none
  41d980:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d984:	add	x1, x0, #0xb5b
  41d988:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d98c:	add	x4, x0, #0xf10
  41d990:	mov	w3, #0xa18                 	// #2584
  41d994:	mov	x2, x1
  41d998:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d99c:	add	x1, x0, #0xd10
  41d9a0:	mov	w0, #0x0                   	// #0
  41d9a4:	bl	407650 <log_assert_failed_realm@plt>
  41d9a8:	ldr	x0, [sp, #40]
  41d9ac:	cmp	x0, #0x0
  41d9b0:	cset	w0, eq  // eq = none
  41d9b4:	and	w0, w0, #0xff
  41d9b8:	and	x0, x0, #0xff
  41d9bc:	cmp	x0, #0x0
  41d9c0:	b.eq	41d9ec <property_get_reboot_to_firmware_setup+0xac>  // b.none
  41d9c4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d9c8:	add	x1, x0, #0xb5b
  41d9cc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41d9d0:	add	x4, x0, #0xf10
  41d9d4:	mov	w3, #0xa19                 	// #2585
  41d9d8:	mov	x2, x1
  41d9dc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41d9e0:	add	x1, x0, #0xd18
  41d9e4:	mov	w0, #0x0                   	// #0
  41d9e8:	bl	407650 <log_assert_failed_realm@plt>
  41d9ec:	ldr	x0, [sp, #32]
  41d9f0:	cmp	x0, #0x0
  41d9f4:	cset	w0, eq  // eq = none
  41d9f8:	and	w0, w0, #0xff
  41d9fc:	and	x0, x0, #0xff
  41da00:	cmp	x0, #0x0
  41da04:	b.eq	41da30 <property_get_reboot_to_firmware_setup+0xf0>  // b.none
  41da08:	adrp	x0, 43e000 <__func__.12250+0x440>
  41da0c:	add	x1, x0, #0xb5b
  41da10:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41da14:	add	x4, x0, #0xf10
  41da18:	mov	w3, #0xa1a                 	// #2586
  41da1c:	mov	x2, x1
  41da20:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41da24:	add	x1, x0, #0x70
  41da28:	mov	w0, #0x0                   	// #0
  41da2c:	bl	407650 <log_assert_failed_realm@plt>
  41da30:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41da34:	add	x0, x0, #0x110
  41da38:	bl	407930 <getenv_bool@plt>
  41da3c:	str	w0, [sp, #88]
  41da40:	ldr	w0, [sp, #88]
  41da44:	cmn	w0, #0x6
  41da48:	b.ne	41dae8 <property_get_reboot_to_firmware_setup+0x1a8>  // b.any
  41da4c:	bl	407bd0 <efi_get_reboot_to_firmware@plt>
  41da50:	str	w0, [sp, #88]
  41da54:	ldr	w0, [sp, #88]
  41da58:	cmp	w0, #0x0
  41da5c:	b.ge	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>  // b.tcont
  41da60:	ldr	w0, [sp, #88]
  41da64:	cmn	w0, #0x5f
  41da68:	b.eq	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>  // b.none
  41da6c:	mov	w0, #0x4                   	// #4
  41da70:	str	w0, [sp, #116]
  41da74:	ldr	w0, [sp, #88]
  41da78:	str	w0, [sp, #120]
  41da7c:	str	wzr, [sp, #124]
  41da80:	ldr	w0, [sp, #124]
  41da84:	bl	4083e0 <log_get_max_level_realm@plt>
  41da88:	mov	w1, w0
  41da8c:	ldr	w0, [sp, #116]
  41da90:	and	w0, w0, #0x7
  41da94:	cmp	w1, w0
  41da98:	b.lt	41dadc <property_get_reboot_to_firmware_setup+0x19c>  // b.tstop
  41da9c:	ldr	w0, [sp, #124]
  41daa0:	lsl	w1, w0, #10
  41daa4:	ldr	w0, [sp, #116]
  41daa8:	orr	w6, w1, w0
  41daac:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dab0:	add	x1, x0, #0xb5b
  41dab4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41dab8:	add	x5, x0, #0x138
  41dabc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41dac0:	add	x4, x0, #0xf38
  41dac4:	mov	w3, #0xa21                 	// #2593
  41dac8:	mov	x2, x1
  41dacc:	ldr	w1, [sp, #120]
  41dad0:	mov	w0, w6
  41dad4:	bl	407d60 <log_internal_realm@plt>
  41dad8:	b	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>
  41dadc:	ldr	w0, [sp, #120]
  41dae0:	cmp	w0, #0x0
  41dae4:	b	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>
  41dae8:	ldr	w0, [sp, #88]
  41daec:	cmp	w0, #0x0
  41daf0:	b.ge	41db70 <property_get_reboot_to_firmware_setup+0x230>  // b.tcont
  41daf4:	mov	w0, #0x4                   	// #4
  41daf8:	str	w0, [sp, #104]
  41dafc:	ldr	w0, [sp, #88]
  41db00:	str	w0, [sp, #108]
  41db04:	str	wzr, [sp, #112]
  41db08:	ldr	w0, [sp, #112]
  41db0c:	bl	4083e0 <log_get_max_level_realm@plt>
  41db10:	mov	w1, w0
  41db14:	ldr	w0, [sp, #104]
  41db18:	and	w0, w0, #0x7
  41db1c:	cmp	w1, w0
  41db20:	b.lt	41db64 <property_get_reboot_to_firmware_setup+0x224>  // b.tstop
  41db24:	ldr	w0, [sp, #112]
  41db28:	lsl	w1, w0, #10
  41db2c:	ldr	w0, [sp, #104]
  41db30:	orr	w6, w1, w0
  41db34:	adrp	x0, 43e000 <__func__.12250+0x440>
  41db38:	add	x1, x0, #0xb5b
  41db3c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41db40:	add	x5, x0, #0x170
  41db44:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41db48:	add	x4, x0, #0xf38
  41db4c:	mov	w3, #0xa23                 	// #2595
  41db50:	mov	x2, x1
  41db54:	ldr	w1, [sp, #108]
  41db58:	mov	w0, w6
  41db5c:	bl	407d60 <log_internal_realm@plt>
  41db60:	b	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>
  41db64:	ldr	w0, [sp, #108]
  41db68:	cmp	w0, #0x0
  41db6c:	b	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>
  41db70:	ldr	w0, [sp, #88]
  41db74:	cmp	w0, #0x0
  41db78:	b.le	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>
  41db7c:	mov	w1, #0x0                   	// #0
  41db80:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41db84:	add	x0, x0, #0x1a8
  41db88:	bl	4077a0 <access@plt>
  41db8c:	cmp	w0, #0x0
  41db90:	b.ge	41dc28 <property_get_reboot_to_firmware_setup+0x2e8>  // b.tcont
  41db94:	bl	407960 <__errno_location@plt>
  41db98:	ldr	w0, [x0]
  41db9c:	cmp	w0, #0x2
  41dba0:	b.eq	41dc20 <property_get_reboot_to_firmware_setup+0x2e0>  // b.none
  41dba4:	mov	w0, #0x4                   	// #4
  41dba8:	str	w0, [sp, #92]
  41dbac:	bl	407960 <__errno_location@plt>
  41dbb0:	ldr	w0, [x0]
  41dbb4:	str	w0, [sp, #96]
  41dbb8:	str	wzr, [sp, #100]
  41dbbc:	ldr	w0, [sp, #100]
  41dbc0:	bl	4083e0 <log_get_max_level_realm@plt>
  41dbc4:	mov	w1, w0
  41dbc8:	ldr	w0, [sp, #92]
  41dbcc:	and	w0, w0, #0x7
  41dbd0:	cmp	w1, w0
  41dbd4:	b.lt	41dc18 <property_get_reboot_to_firmware_setup+0x2d8>  // b.tstop
  41dbd8:	ldr	w0, [sp, #100]
  41dbdc:	lsl	w1, w0, #10
  41dbe0:	ldr	w0, [sp, #92]
  41dbe4:	orr	w6, w1, w0
  41dbe8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dbec:	add	x1, x0, #0xb5b
  41dbf0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41dbf4:	add	x5, x0, #0x1d0
  41dbf8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41dbfc:	add	x4, x0, #0xf38
  41dc00:	mov	w3, #0xa28                 	// #2600
  41dc04:	mov	x2, x1
  41dc08:	ldr	w1, [sp, #96]
  41dc0c:	mov	w0, w6
  41dc10:	bl	407d60 <log_internal_realm@plt>
  41dc14:	b	41dc20 <property_get_reboot_to_firmware_setup+0x2e0>
  41dc18:	ldr	w0, [sp, #96]
  41dc1c:	cmp	w0, #0x0
  41dc20:	str	wzr, [sp, #88]
  41dc24:	b	41dc30 <property_get_reboot_to_firmware_setup+0x2f0>
  41dc28:	mov	w0, #0x1                   	// #1
  41dc2c:	str	w0, [sp, #88]
  41dc30:	ldr	w0, [sp, #88]
  41dc34:	cmp	w0, #0x0
  41dc38:	cset	w0, gt
  41dc3c:	and	w0, w0, #0xff
  41dc40:	mov	w2, w0
  41dc44:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dc48:	add	x1, x0, #0xd20
  41dc4c:	ldr	x0, [sp, #40]
  41dc50:	bl	407590 <sd_bus_message_append@plt>
  41dc54:	ldp	x29, x30, [sp], #128
  41dc58:	ret

000000000041dc5c <method_set_reboot_to_firmware_setup>:
  41dc5c:	stp	x29, x30, [sp, #-96]!
  41dc60:	mov	x29, sp
  41dc64:	str	x0, [sp, #40]
  41dc68:	str	x1, [sp, #32]
  41dc6c:	str	x2, [sp, #24]
  41dc70:	adrp	x0, 460000 <wordlist.10364+0x370>
  41dc74:	ldr	x0, [x0, #4024]
  41dc78:	ldr	x1, [x0]
  41dc7c:	str	x1, [sp, #88]
  41dc80:	mov	x1, #0x0                   	// #0
  41dc84:	ldr	x0, [sp, #32]
  41dc88:	str	x0, [sp, #80]
  41dc8c:	ldr	x0, [sp, #40]
  41dc90:	cmp	x0, #0x0
  41dc94:	cset	w0, eq  // eq = none
  41dc98:	and	w0, w0, #0xff
  41dc9c:	and	x0, x0, #0xff
  41dca0:	cmp	x0, #0x0
  41dca4:	b.eq	41dcd0 <method_set_reboot_to_firmware_setup+0x74>  // b.none
  41dca8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dcac:	add	x1, x0, #0xb5b
  41dcb0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41dcb4:	add	x4, x0, #0xf60
  41dcb8:	mov	w3, #0xa3b                 	// #2619
  41dcbc:	mov	x2, x1
  41dcc0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dcc4:	add	x1, x0, #0xd78
  41dcc8:	mov	w0, #0x0                   	// #0
  41dccc:	bl	407650 <log_assert_failed_realm@plt>
  41dcd0:	ldr	x0, [sp, #80]
  41dcd4:	cmp	x0, #0x0
  41dcd8:	cset	w0, eq  // eq = none
  41dcdc:	and	w0, w0, #0xff
  41dce0:	and	x0, x0, #0xff
  41dce4:	cmp	x0, #0x0
  41dce8:	b.eq	41dd14 <method_set_reboot_to_firmware_setup+0xb8>  // b.none
  41dcec:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dcf0:	add	x1, x0, #0xb5b
  41dcf4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41dcf8:	add	x4, x0, #0xf60
  41dcfc:	mov	w3, #0xa3c                 	// #2620
  41dd00:	mov	x2, x1
  41dd04:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dd08:	add	x1, x0, #0xb78
  41dd0c:	mov	w0, #0x0                   	// #0
  41dd10:	bl	407650 <log_assert_failed_realm@plt>
  41dd14:	add	x0, sp, #0x3c
  41dd18:	mov	x2, x0
  41dd1c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dd20:	add	x1, x0, #0xd20
  41dd24:	ldr	x0, [sp, #40]
  41dd28:	bl	407660 <sd_bus_message_read@plt>
  41dd2c:	str	w0, [sp, #64]
  41dd30:	ldr	w0, [sp, #64]
  41dd34:	cmp	w0, #0x0
  41dd38:	b.ge	41dd44 <method_set_reboot_to_firmware_setup+0xe8>  // b.tcont
  41dd3c:	ldr	w0, [sp, #64]
  41dd40:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41dd44:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41dd48:	add	x0, x0, #0x110
  41dd4c:	bl	407930 <getenv_bool@plt>
  41dd50:	str	w0, [sp, #64]
  41dd54:	ldr	w0, [sp, #64]
  41dd58:	cmn	w0, #0x6
  41dd5c:	b.ne	41ddb0 <method_set_reboot_to_firmware_setup+0x154>  // b.any
  41dd60:	bl	407980 <efi_reboot_to_firmware_supported@plt>
  41dd64:	str	w0, [sp, #64]
  41dd68:	ldr	w0, [sp, #64]
  41dd6c:	cmn	w0, #0x5f
  41dd70:	b.ne	41dd90 <method_set_reboot_to_firmware_setup+0x134>  // b.any
  41dd74:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41dd78:	add	x2, x0, #0x220
  41dd7c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41dd80:	add	x1, x0, #0xb8
  41dd84:	ldr	x0, [sp, #24]
  41dd88:	bl	407ae0 <sd_bus_error_setf@plt>
  41dd8c:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41dd90:	ldr	w0, [sp, #64]
  41dd94:	cmp	w0, #0x0
  41dd98:	b.ge	41dda4 <method_set_reboot_to_firmware_setup+0x148>  // b.tcont
  41dd9c:	ldr	w0, [sp, #64]
  41dda0:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41dda4:	mov	w0, #0x1                   	// #1
  41dda8:	strb	w0, [sp, #59]
  41ddac:	b	41de60 <method_set_reboot_to_firmware_setup+0x204>
  41ddb0:	ldr	w0, [sp, #64]
  41ddb4:	cmp	w0, #0x0
  41ddb8:	b.gt	41de5c <method_set_reboot_to_firmware_setup+0x200>
  41ddbc:	ldr	w0, [sp, #64]
  41ddc0:	cmp	w0, #0x0
  41ddc4:	b.ge	41de40 <method_set_reboot_to_firmware_setup+0x1e4>  // b.tcont
  41ddc8:	mov	w0, #0x4                   	// #4
  41ddcc:	str	w0, [sp, #68]
  41ddd0:	ldr	w0, [sp, #64]
  41ddd4:	str	w0, [sp, #72]
  41ddd8:	str	wzr, [sp, #76]
  41dddc:	ldr	w0, [sp, #76]
  41dde0:	bl	4083e0 <log_get_max_level_realm@plt>
  41dde4:	mov	w1, w0
  41dde8:	ldr	w0, [sp, #68]
  41ddec:	and	w0, w0, #0x7
  41ddf0:	cmp	w1, w0
  41ddf4:	b.lt	41de38 <method_set_reboot_to_firmware_setup+0x1dc>  // b.tstop
  41ddf8:	ldr	w0, [sp, #76]
  41ddfc:	lsl	w1, w0, #10
  41de00:	ldr	w0, [sp, #68]
  41de04:	orr	w6, w1, w0
  41de08:	adrp	x0, 43e000 <__func__.12250+0x440>
  41de0c:	add	x1, x0, #0xb5b
  41de10:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41de14:	add	x5, x0, #0x170
  41de18:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41de1c:	add	x4, x0, #0xf88
  41de20:	mov	w3, #0xa52                 	// #2642
  41de24:	mov	x2, x1
  41de28:	ldr	w1, [sp, #72]
  41de2c:	mov	w0, w6
  41de30:	bl	407d60 <log_internal_realm@plt>
  41de34:	b	41de40 <method_set_reboot_to_firmware_setup+0x1e4>
  41de38:	ldr	w0, [sp, #72]
  41de3c:	cmp	w0, #0x0
  41de40:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41de44:	add	x2, x0, #0x220
  41de48:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41de4c:	add	x1, x0, #0xb8
  41de50:	ldr	x0, [sp, #24]
  41de54:	bl	407ae0 <sd_bus_error_setf@plt>
  41de58:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41de5c:	strb	wzr, [sp, #59]
  41de60:	ldr	x0, [sp, #80]
  41de64:	add	x0, x0, #0x1b0
  41de68:	ldr	x7, [sp, #24]
  41de6c:	mov	x6, x0
  41de70:	mov	w5, #0xffffffff            	// #-1
  41de74:	mov	w4, #0x0                   	// #0
  41de78:	mov	x3, #0x0                   	// #0
  41de7c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41de80:	add	x2, x0, #0x250
  41de84:	mov	w1, #0x15                  	// #21
  41de88:	ldr	x0, [sp, #40]
  41de8c:	bl	408350 <bus_verify_polkit_async@plt>
  41de90:	str	w0, [sp, #64]
  41de94:	ldr	w0, [sp, #64]
  41de98:	cmp	w0, #0x0
  41de9c:	b.ge	41dea8 <method_set_reboot_to_firmware_setup+0x24c>  // b.tcont
  41dea0:	ldr	w0, [sp, #64]
  41dea4:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41dea8:	ldr	w0, [sp, #64]
  41deac:	cmp	w0, #0x0
  41deb0:	b.ne	41debc <method_set_reboot_to_firmware_setup+0x260>  // b.any
  41deb4:	mov	w0, #0x1                   	// #1
  41deb8:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41debc:	ldrb	w0, [sp, #59]
  41dec0:	cmp	w0, #0x0
  41dec4:	b.eq	41def4 <method_set_reboot_to_firmware_setup+0x298>  // b.none
  41dec8:	ldr	w0, [sp, #60]
  41decc:	cmp	w0, #0x0
  41ded0:	cset	w0, ne  // ne = any
  41ded4:	and	w0, w0, #0xff
  41ded8:	bl	407b90 <efi_set_reboot_to_firmware@plt>
  41dedc:	str	w0, [sp, #64]
  41dee0:	ldr	w0, [sp, #64]
  41dee4:	cmp	w0, #0x0
  41dee8:	b.ge	41df58 <method_set_reboot_to_firmware_setup+0x2fc>  // b.tcont
  41deec:	ldr	w0, [sp, #64]
  41def0:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41def4:	ldr	w0, [sp, #60]
  41def8:	cmp	w0, #0x0
  41defc:	b.eq	41df24 <method_set_reboot_to_firmware_setup+0x2c8>  // b.none
  41df00:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41df04:	add	x0, x0, #0x1a8
  41df08:	bl	407910 <touch@plt>
  41df0c:	str	w0, [sp, #64]
  41df10:	ldr	w0, [sp, #64]
  41df14:	cmp	w0, #0x0
  41df18:	b.ge	41df58 <method_set_reboot_to_firmware_setup+0x2fc>  // b.tcont
  41df1c:	ldr	w0, [sp, #64]
  41df20:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41df24:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41df28:	add	x0, x0, #0x1a8
  41df2c:	bl	4070c0 <unlink@plt>
  41df30:	cmp	w0, #0x0
  41df34:	b.ge	41df58 <method_set_reboot_to_firmware_setup+0x2fc>  // b.tcont
  41df38:	bl	407960 <__errno_location@plt>
  41df3c:	ldr	w0, [x0]
  41df40:	cmp	w0, #0x2
  41df44:	b.eq	41df58 <method_set_reboot_to_firmware_setup+0x2fc>  // b.none
  41df48:	bl	407960 <__errno_location@plt>
  41df4c:	ldr	w0, [x0]
  41df50:	neg	w0, w0
  41df54:	b	41df64 <method_set_reboot_to_firmware_setup+0x308>
  41df58:	mov	x1, #0x0                   	// #0
  41df5c:	ldr	x0, [sp, #40]
  41df60:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41df64:	mov	w1, w0
  41df68:	adrp	x0, 460000 <wordlist.10364+0x370>
  41df6c:	ldr	x0, [x0, #4024]
  41df70:	ldr	x2, [sp, #88]
  41df74:	ldr	x0, [x0]
  41df78:	eor	x0, x2, x0
  41df7c:	cmp	x0, #0x0
  41df80:	b.eq	41df88 <method_set_reboot_to_firmware_setup+0x32c>  // b.none
  41df84:	bl	407b20 <__stack_chk_fail@plt>
  41df88:	mov	w0, w1
  41df8c:	ldp	x29, x30, [sp], #96
  41df90:	ret

000000000041df94 <method_can_reboot_to_firmware_setup>:
  41df94:	stp	x29, x30, [sp, #-96]!
  41df98:	mov	x29, sp
  41df9c:	str	x0, [sp, #40]
  41dfa0:	str	x1, [sp, #32]
  41dfa4:	str	x2, [sp, #24]
  41dfa8:	ldr	x0, [sp, #32]
  41dfac:	str	x0, [sp, #88]
  41dfb0:	ldr	x0, [sp, #40]
  41dfb4:	cmp	x0, #0x0
  41dfb8:	cset	w0, eq  // eq = none
  41dfbc:	and	w0, w0, #0xff
  41dfc0:	and	x0, x0, #0xff
  41dfc4:	cmp	x0, #0x0
  41dfc8:	b.eq	41dff4 <method_can_reboot_to_firmware_setup+0x60>  // b.none
  41dfcc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dfd0:	add	x1, x0, #0xb5b
  41dfd4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41dfd8:	add	x4, x0, #0xfb0
  41dfdc:	mov	w3, #0xa80                 	// #2688
  41dfe0:	mov	x2, x1
  41dfe4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41dfe8:	add	x1, x0, #0xd78
  41dfec:	mov	w0, #0x0                   	// #0
  41dff0:	bl	407650 <log_assert_failed_realm@plt>
  41dff4:	ldr	x0, [sp, #88]
  41dff8:	cmp	x0, #0x0
  41dffc:	cset	w0, eq  // eq = none
  41e000:	and	w0, w0, #0xff
  41e004:	and	x0, x0, #0xff
  41e008:	cmp	x0, #0x0
  41e00c:	b.eq	41e038 <method_can_reboot_to_firmware_setup+0xa4>  // b.none
  41e010:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e014:	add	x1, x0, #0xb5b
  41e018:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41e01c:	add	x4, x0, #0xfb0
  41e020:	mov	w3, #0xa81                 	// #2689
  41e024:	mov	x2, x1
  41e028:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e02c:	add	x1, x0, #0xb78
  41e030:	mov	w0, #0x0                   	// #0
  41e034:	bl	407650 <log_assert_failed_realm@plt>
  41e038:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e03c:	add	x0, x0, #0x110
  41e040:	bl	407930 <getenv_bool@plt>
  41e044:	str	w0, [sp, #60]
  41e048:	ldr	w0, [sp, #60]
  41e04c:	cmn	w0, #0x6
  41e050:	b.ne	41e108 <method_can_reboot_to_firmware_setup+0x174>  // b.any
  41e054:	bl	407980 <efi_reboot_to_firmware_supported@plt>
  41e058:	str	w0, [sp, #60]
  41e05c:	ldr	w0, [sp, #60]
  41e060:	cmp	w0, #0x0
  41e064:	b.ge	41e1b4 <method_can_reboot_to_firmware_setup+0x220>  // b.tcont
  41e068:	ldr	w0, [sp, #60]
  41e06c:	cmn	w0, #0x5f
  41e070:	b.eq	41e0ec <method_can_reboot_to_firmware_setup+0x158>  // b.none
  41e074:	mov	w0, #0x4                   	// #4
  41e078:	str	w0, [sp, #76]
  41e07c:	ldr	w0, [sp, #60]
  41e080:	str	w0, [sp, #80]
  41e084:	str	wzr, [sp, #84]
  41e088:	ldr	w0, [sp, #84]
  41e08c:	bl	4083e0 <log_get_max_level_realm@plt>
  41e090:	mov	w1, w0
  41e094:	ldr	w0, [sp, #76]
  41e098:	and	w0, w0, #0x7
  41e09c:	cmp	w1, w0
  41e0a0:	b.lt	41e0e4 <method_can_reboot_to_firmware_setup+0x150>  // b.tstop
  41e0a4:	ldr	w0, [sp, #84]
  41e0a8:	lsl	w1, w0, #10
  41e0ac:	ldr	w0, [sp, #76]
  41e0b0:	orr	w6, w1, w0
  41e0b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e0b8:	add	x1, x0, #0xb5b
  41e0bc:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e0c0:	add	x5, x0, #0x288
  41e0c4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41e0c8:	add	x4, x0, #0xfd8
  41e0cc:	mov	w3, #0xa8a                 	// #2698
  41e0d0:	mov	x2, x1
  41e0d4:	ldr	w1, [sp, #80]
  41e0d8:	mov	w0, w6
  41e0dc:	bl	407d60 <log_internal_realm@plt>
  41e0e0:	b	41e0ec <method_can_reboot_to_firmware_setup+0x158>
  41e0e4:	ldr	w0, [sp, #80]
  41e0e8:	cmp	w0, #0x0
  41e0ec:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e0f0:	add	x2, x0, #0x50
  41e0f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e0f8:	add	x1, x0, #0xd08
  41e0fc:	ldr	x0, [sp, #40]
  41e100:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41e104:	b	41e1d4 <method_can_reboot_to_firmware_setup+0x240>
  41e108:	ldr	w0, [sp, #60]
  41e10c:	cmp	w0, #0x0
  41e110:	b.gt	41e1b4 <method_can_reboot_to_firmware_setup+0x220>
  41e114:	ldr	w0, [sp, #60]
  41e118:	cmp	w0, #0x0
  41e11c:	b.ge	41e198 <method_can_reboot_to_firmware_setup+0x204>  // b.tcont
  41e120:	mov	w0, #0x4                   	// #4
  41e124:	str	w0, [sp, #64]
  41e128:	ldr	w0, [sp, #60]
  41e12c:	str	w0, [sp, #68]
  41e130:	str	wzr, [sp, #72]
  41e134:	ldr	w0, [sp, #72]
  41e138:	bl	4083e0 <log_get_max_level_realm@plt>
  41e13c:	mov	w1, w0
  41e140:	ldr	w0, [sp, #64]
  41e144:	and	w0, w0, #0x7
  41e148:	cmp	w1, w0
  41e14c:	b.lt	41e190 <method_can_reboot_to_firmware_setup+0x1fc>  // b.tstop
  41e150:	ldr	w0, [sp, #72]
  41e154:	lsl	w1, w0, #10
  41e158:	ldr	w0, [sp, #64]
  41e15c:	orr	w6, w1, w0
  41e160:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e164:	add	x1, x0, #0xb5b
  41e168:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e16c:	add	x5, x0, #0x170
  41e170:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  41e174:	add	x4, x0, #0xfd8
  41e178:	mov	w3, #0xa93                 	// #2707
  41e17c:	mov	x2, x1
  41e180:	ldr	w1, [sp, #68]
  41e184:	mov	w0, w6
  41e188:	bl	407d60 <log_internal_realm@plt>
  41e18c:	b	41e198 <method_can_reboot_to_firmware_setup+0x204>
  41e190:	ldr	w0, [sp, #68]
  41e194:	cmp	w0, #0x0
  41e198:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e19c:	add	x2, x0, #0x50
  41e1a0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e1a4:	add	x1, x0, #0xd08
  41e1a8:	ldr	x0, [sp, #40]
  41e1ac:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41e1b0:	b	41e1d4 <method_can_reboot_to_firmware_setup+0x240>
  41e1b4:	ldr	x5, [sp, #24]
  41e1b8:	mov	w4, #0xffffffff            	// #-1
  41e1bc:	mov	x3, #0x0                   	// #0
  41e1c0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e1c4:	add	x2, x0, #0x250
  41e1c8:	mov	w1, #0x15                  	// #21
  41e1cc:	ldr	x0, [sp, #40]
  41e1d0:	bl	414a1c <return_test_polkit>
  41e1d4:	ldp	x29, x30, [sp], #96
  41e1d8:	ret

000000000041e1dc <property_get_reboot_to_boot_loader_menu>:
  41e1dc:	stp	x29, x30, [sp, #-192]!
  41e1e0:	mov	x29, sp
  41e1e4:	str	x0, [sp, #72]
  41e1e8:	str	x1, [sp, #64]
  41e1ec:	str	x2, [sp, #56]
  41e1f0:	str	x3, [sp, #48]
  41e1f4:	str	x4, [sp, #40]
  41e1f8:	str	x5, [sp, #32]
  41e1fc:	str	x6, [sp, #24]
  41e200:	adrp	x0, 460000 <wordlist.10364+0x370>
  41e204:	ldr	x0, [x0, #4024]
  41e208:	ldr	x1, [x0]
  41e20c:	str	x1, [sp, #184]
  41e210:	mov	x1, #0x0                   	// #0
  41e214:	mov	x0, #0xffffffffffffffff    	// #-1
  41e218:	str	x0, [sp, #160]
  41e21c:	ldr	x0, [sp, #72]
  41e220:	cmp	x0, #0x0
  41e224:	cset	w0, eq  // eq = none
  41e228:	and	w0, w0, #0xff
  41e22c:	and	x0, x0, #0xff
  41e230:	cmp	x0, #0x0
  41e234:	b.eq	41e260 <property_get_reboot_to_boot_loader_menu+0x84>  // b.none
  41e238:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e23c:	add	x1, x0, #0xb5b
  41e240:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e244:	add	x4, x0, #0x0
  41e248:	mov	w3, #0xaad                 	// #2733
  41e24c:	mov	x2, x1
  41e250:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e254:	add	x1, x0, #0xd10
  41e258:	mov	w0, #0x0                   	// #0
  41e25c:	bl	407650 <log_assert_failed_realm@plt>
  41e260:	ldr	x0, [sp, #40]
  41e264:	cmp	x0, #0x0
  41e268:	cset	w0, eq  // eq = none
  41e26c:	and	w0, w0, #0xff
  41e270:	and	x0, x0, #0xff
  41e274:	cmp	x0, #0x0
  41e278:	b.eq	41e2a4 <property_get_reboot_to_boot_loader_menu+0xc8>  // b.none
  41e27c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e280:	add	x1, x0, #0xb5b
  41e284:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e288:	add	x4, x0, #0x0
  41e28c:	mov	w3, #0xaae                 	// #2734
  41e290:	mov	x2, x1
  41e294:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e298:	add	x1, x0, #0xd18
  41e29c:	mov	w0, #0x0                   	// #0
  41e2a0:	bl	407650 <log_assert_failed_realm@plt>
  41e2a4:	ldr	x0, [sp, #32]
  41e2a8:	cmp	x0, #0x0
  41e2ac:	cset	w0, eq  // eq = none
  41e2b0:	and	w0, w0, #0xff
  41e2b4:	and	x0, x0, #0xff
  41e2b8:	cmp	x0, #0x0
  41e2bc:	b.eq	41e2e8 <property_get_reboot_to_boot_loader_menu+0x10c>  // b.none
  41e2c0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e2c4:	add	x1, x0, #0xb5b
  41e2c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e2cc:	add	x4, x0, #0x0
  41e2d0:	mov	w3, #0xaaf                 	// #2735
  41e2d4:	mov	x2, x1
  41e2d8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e2dc:	add	x1, x0, #0x70
  41e2e0:	mov	w0, #0x0                   	// #0
  41e2e4:	bl	407650 <log_assert_failed_realm@plt>
  41e2e8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e2ec:	add	x0, x0, #0x2c8
  41e2f0:	bl	407930 <getenv_bool@plt>
  41e2f4:	str	w0, [sp, #84]
  41e2f8:	ldr	w0, [sp, #84]
  41e2fc:	cmn	w0, #0x6
  41e300:	b.ne	41e510 <property_get_reboot_to_boot_loader_menu+0x334>  // b.any
  41e304:	str	xzr, [sp, #168]
  41e308:	add	x1, sp, #0xa8
  41e30c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e310:	add	x0, x0, #0x28
  41e314:	mov	x3, x1
  41e318:	adrp	x1, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e31c:	add	x2, x1, #0x2f0
  41e320:	ldp	x0, x1, [x0]
  41e324:	bl	407250 <efi_get_variable_string@plt>
  41e328:	str	w0, [sp, #84]
  41e32c:	ldr	w0, [sp, #84]
  41e330:	cmp	w0, #0x0
  41e334:	b.ge	41e3c0 <property_get_reboot_to_boot_loader_menu+0x1e4>  // b.tcont
  41e338:	ldr	w0, [sp, #84]
  41e33c:	cmn	w0, #0x2
  41e340:	b.eq	41e504 <property_get_reboot_to_boot_loader_menu+0x328>  // b.none
  41e344:	mov	w0, #0x4                   	// #4
  41e348:	str	w0, [sp, #148]
  41e34c:	ldr	w0, [sp, #84]
  41e350:	str	w0, [sp, #152]
  41e354:	str	wzr, [sp, #156]
  41e358:	ldr	w0, [sp, #156]
  41e35c:	bl	4083e0 <log_get_max_level_realm@plt>
  41e360:	mov	w1, w0
  41e364:	ldr	w0, [sp, #148]
  41e368:	and	w0, w0, #0x7
  41e36c:	cmp	w1, w0
  41e370:	b.lt	41e3b4 <property_get_reboot_to_boot_loader_menu+0x1d8>  // b.tstop
  41e374:	ldr	w0, [sp, #156]
  41e378:	lsl	w1, w0, #10
  41e37c:	ldr	w0, [sp, #148]
  41e380:	orr	w6, w1, w0
  41e384:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e388:	add	x1, x0, #0xb5b
  41e38c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e390:	add	x5, x0, #0x310
  41e394:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e398:	add	x4, x0, #0x38
  41e39c:	mov	w3, #0xabf                 	// #2751
  41e3a0:	mov	x2, x1
  41e3a4:	ldr	w1, [sp, #152]
  41e3a8:	mov	w0, w6
  41e3ac:	bl	407d60 <log_internal_realm@plt>
  41e3b0:	b	41e504 <property_get_reboot_to_boot_loader_menu+0x328>
  41e3b4:	ldr	w0, [sp, #152]
  41e3b8:	cmp	w0, #0x0
  41e3bc:	b	41e504 <property_get_reboot_to_boot_loader_menu+0x328>
  41e3c0:	ldr	x0, [sp, #168]
  41e3c4:	add	x1, sp, #0xb0
  41e3c8:	bl	414274 <safe_atou64>
  41e3cc:	str	w0, [sp, #84]
  41e3d0:	ldr	w0, [sp, #84]
  41e3d4:	cmp	w0, #0x0
  41e3d8:	b.ge	41e460 <property_get_reboot_to_boot_loader_menu+0x284>  // b.tcont
  41e3dc:	mov	w0, #0x4                   	// #4
  41e3e0:	str	w0, [sp, #136]
  41e3e4:	ldr	w0, [sp, #84]
  41e3e8:	str	w0, [sp, #140]
  41e3ec:	str	wzr, [sp, #144]
  41e3f0:	ldr	w0, [sp, #144]
  41e3f4:	bl	4083e0 <log_get_max_level_realm@plt>
  41e3f8:	mov	w1, w0
  41e3fc:	ldr	w0, [sp, #136]
  41e400:	and	w0, w0, #0x7
  41e404:	cmp	w1, w0
  41e408:	b.lt	41e454 <property_get_reboot_to_boot_loader_menu+0x278>  // b.tstop
  41e40c:	ldr	w0, [sp, #144]
  41e410:	lsl	w1, w0, #10
  41e414:	ldr	w0, [sp, #136]
  41e418:	orr	w7, w1, w0
  41e41c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e420:	add	x1, x0, #0xb5b
  41e424:	ldr	x0, [sp, #168]
  41e428:	mov	x6, x0
  41e42c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e430:	add	x5, x0, #0x348
  41e434:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e438:	add	x4, x0, #0x38
  41e43c:	mov	w3, #0xac5                 	// #2757
  41e440:	mov	x2, x1
  41e444:	ldr	w1, [sp, #140]
  41e448:	mov	w0, w7
  41e44c:	bl	407d60 <log_internal_realm@plt>
  41e450:	b	41e504 <property_get_reboot_to_boot_loader_menu+0x328>
  41e454:	ldr	w0, [sp, #140]
  41e458:	cmp	w0, #0x0
  41e45c:	b	41e504 <property_get_reboot_to_boot_loader_menu+0x328>
  41e460:	ldr	x1, [sp, #176]
  41e464:	mov	x0, #0xb5ed                	// #46573
  41e468:	movk	x0, #0xf7a0, lsl #16
  41e46c:	movk	x0, #0x10c6, lsl #32
  41e470:	cmp	x1, x0
  41e474:	b.ls	41e4f0 <property_get_reboot_to_boot_loader_menu+0x314>  // b.plast
  41e478:	mov	w0, #0x4                   	// #4
  41e47c:	str	w0, [sp, #124]
  41e480:	str	wzr, [sp, #128]
  41e484:	str	wzr, [sp, #132]
  41e488:	ldr	w0, [sp, #132]
  41e48c:	bl	4083e0 <log_get_max_level_realm@plt>
  41e490:	mov	w1, w0
  41e494:	ldr	w0, [sp, #124]
  41e498:	and	w0, w0, #0x7
  41e49c:	cmp	w1, w0
  41e4a0:	b.lt	41e4e4 <property_get_reboot_to_boot_loader_menu+0x308>  // b.tstop
  41e4a4:	ldr	w0, [sp, #132]
  41e4a8:	lsl	w1, w0, #10
  41e4ac:	ldr	w0, [sp, #124]
  41e4b0:	orr	w6, w1, w0
  41e4b4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e4b8:	add	x1, x0, #0xb5b
  41e4bc:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e4c0:	add	x5, x0, #0x388
  41e4c4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e4c8:	add	x4, x0, #0x38
  41e4cc:	mov	w3, #0xac7                 	// #2759
  41e4d0:	mov	x2, x1
  41e4d4:	ldr	w1, [sp, #128]
  41e4d8:	mov	w0, w6
  41e4dc:	bl	407d60 <log_internal_realm@plt>
  41e4e0:	b	41e504 <property_get_reboot_to_boot_loader_menu+0x328>
  41e4e4:	ldr	w0, [sp, #128]
  41e4e8:	cmp	w0, #0x0
  41e4ec:	b	41e504 <property_get_reboot_to_boot_loader_menu+0x328>
  41e4f0:	ldr	x1, [sp, #176]
  41e4f4:	mov	x0, #0x4240                	// #16960
  41e4f8:	movk	x0, #0xf, lsl #16
  41e4fc:	mul	x0, x1, x0
  41e500:	str	x0, [sp, #160]
  41e504:	add	x0, sp, #0xa8
  41e508:	bl	413cc4 <freep>
  41e50c:	b	41e6f0 <property_get_reboot_to_boot_loader_menu+0x514>
  41e510:	ldr	w0, [sp, #84]
  41e514:	cmp	w0, #0x0
  41e518:	b.ge	41e598 <property_get_reboot_to_boot_loader_menu+0x3bc>  // b.tcont
  41e51c:	mov	w0, #0x4                   	// #4
  41e520:	str	w0, [sp, #112]
  41e524:	ldr	w0, [sp, #84]
  41e528:	str	w0, [sp, #116]
  41e52c:	str	wzr, [sp, #120]
  41e530:	ldr	w0, [sp, #120]
  41e534:	bl	4083e0 <log_get_max_level_realm@plt>
  41e538:	mov	w1, w0
  41e53c:	ldr	w0, [sp, #112]
  41e540:	and	w0, w0, #0x7
  41e544:	cmp	w1, w0
  41e548:	b.lt	41e58c <property_get_reboot_to_boot_loader_menu+0x3b0>  // b.tstop
  41e54c:	ldr	w0, [sp, #120]
  41e550:	lsl	w1, w0, #10
  41e554:	ldr	w0, [sp, #112]
  41e558:	orr	w6, w1, w0
  41e55c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e560:	add	x1, x0, #0xb5b
  41e564:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e568:	add	x5, x0, #0x3c0
  41e56c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e570:	add	x4, x0, #0x38
  41e574:	mov	w3, #0xacd                 	// #2765
  41e578:	mov	x2, x1
  41e57c:	ldr	w1, [sp, #116]
  41e580:	mov	w0, w6
  41e584:	bl	407d60 <log_internal_realm@plt>
  41e588:	b	41e6f0 <property_get_reboot_to_boot_loader_menu+0x514>
  41e58c:	ldr	w0, [sp, #116]
  41e590:	cmp	w0, #0x0
  41e594:	b	41e6f0 <property_get_reboot_to_boot_loader_menu+0x514>
  41e598:	ldr	w0, [sp, #84]
  41e59c:	cmp	w0, #0x0
  41e5a0:	b.le	41e6f0 <property_get_reboot_to_boot_loader_menu+0x514>
  41e5a4:	str	xzr, [sp, #176]
  41e5a8:	add	x0, sp, #0xb0
  41e5ac:	mov	x1, x0
  41e5b0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e5b4:	add	x0, x0, #0x3f8
  41e5b8:	bl	407a90 <read_one_line_file@plt>
  41e5bc:	str	w0, [sp, #84]
  41e5c0:	ldr	w0, [sp, #84]
  41e5c4:	cmp	w0, #0x0
  41e5c8:	b.ge	41e654 <property_get_reboot_to_boot_loader_menu+0x478>  // b.tcont
  41e5cc:	ldr	w0, [sp, #84]
  41e5d0:	cmn	w0, #0x2
  41e5d4:	b.eq	41e6e8 <property_get_reboot_to_boot_loader_menu+0x50c>  // b.none
  41e5d8:	mov	w0, #0x4                   	// #4
  41e5dc:	str	w0, [sp, #100]
  41e5e0:	ldr	w0, [sp, #84]
  41e5e4:	str	w0, [sp, #104]
  41e5e8:	str	wzr, [sp, #108]
  41e5ec:	ldr	w0, [sp, #108]
  41e5f0:	bl	4083e0 <log_get_max_level_realm@plt>
  41e5f4:	mov	w1, w0
  41e5f8:	ldr	w0, [sp, #100]
  41e5fc:	and	w0, w0, #0x7
  41e600:	cmp	w1, w0
  41e604:	b.lt	41e648 <property_get_reboot_to_boot_loader_menu+0x46c>  // b.tstop
  41e608:	ldr	w0, [sp, #108]
  41e60c:	lsl	w1, w0, #10
  41e610:	ldr	w0, [sp, #100]
  41e614:	orr	w6, w1, w0
  41e618:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e61c:	add	x1, x0, #0xb5b
  41e620:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e624:	add	x5, x0, #0x420
  41e628:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e62c:	add	x4, x0, #0x38
  41e630:	mov	w3, #0xad6                 	// #2774
  41e634:	mov	x2, x1
  41e638:	ldr	w1, [sp, #104]
  41e63c:	mov	w0, w6
  41e640:	bl	407d60 <log_internal_realm@plt>
  41e644:	b	41e6e8 <property_get_reboot_to_boot_loader_menu+0x50c>
  41e648:	ldr	w0, [sp, #104]
  41e64c:	cmp	w0, #0x0
  41e650:	b	41e6e8 <property_get_reboot_to_boot_loader_menu+0x50c>
  41e654:	ldr	x0, [sp, #176]
  41e658:	add	x1, sp, #0xa0
  41e65c:	bl	414274 <safe_atou64>
  41e660:	str	w0, [sp, #84]
  41e664:	ldr	w0, [sp, #84]
  41e668:	cmp	w0, #0x0
  41e66c:	b.ge	41e6e8 <property_get_reboot_to_boot_loader_menu+0x50c>  // b.tcont
  41e670:	mov	w0, #0x4                   	// #4
  41e674:	str	w0, [sp, #88]
  41e678:	ldr	w0, [sp, #84]
  41e67c:	str	w0, [sp, #92]
  41e680:	str	wzr, [sp, #96]
  41e684:	ldr	w0, [sp, #96]
  41e688:	bl	4083e0 <log_get_max_level_realm@plt>
  41e68c:	mov	w1, w0
  41e690:	ldr	w0, [sp, #88]
  41e694:	and	w0, w0, #0x7
  41e698:	cmp	w1, w0
  41e69c:	b.lt	41e6e0 <property_get_reboot_to_boot_loader_menu+0x504>  // b.tstop
  41e6a0:	ldr	w0, [sp, #96]
  41e6a4:	lsl	w1, w0, #10
  41e6a8:	ldr	w0, [sp, #88]
  41e6ac:	orr	w6, w1, w0
  41e6b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e6b4:	add	x1, x0, #0xb5b
  41e6b8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e6bc:	add	x5, x0, #0x460
  41e6c0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e6c4:	add	x4, x0, #0x38
  41e6c8:	mov	w3, #0xada                 	// #2778
  41e6cc:	mov	x2, x1
  41e6d0:	ldr	w1, [sp, #92]
  41e6d4:	mov	w0, w6
  41e6d8:	bl	407d60 <log_internal_realm@plt>
  41e6dc:	b	41e6e8 <property_get_reboot_to_boot_loader_menu+0x50c>
  41e6e0:	ldr	w0, [sp, #92]
  41e6e4:	cmp	w0, #0x0
  41e6e8:	add	x0, sp, #0xb0
  41e6ec:	bl	413cc4 <freep>
  41e6f0:	ldr	x0, [sp, #160]
  41e6f4:	mov	x2, x0
  41e6f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e6fc:	add	x1, x0, #0xd38
  41e700:	ldr	x0, [sp, #40]
  41e704:	bl	407590 <sd_bus_message_append@plt>
  41e708:	mov	w1, w0
  41e70c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41e710:	ldr	x0, [x0, #4024]
  41e714:	ldr	x2, [sp, #184]
  41e718:	ldr	x0, [x0]
  41e71c:	eor	x0, x2, x0
  41e720:	cmp	x0, #0x0
  41e724:	b.eq	41e72c <property_get_reboot_to_boot_loader_menu+0x550>  // b.none
  41e728:	bl	407b20 <__stack_chk_fail@plt>
  41e72c:	mov	w0, w1
  41e730:	ldp	x29, x30, [sp], #192
  41e734:	ret

000000000041e738 <method_set_reboot_to_boot_loader_menu>:
  41e738:	stp	x29, x30, [sp, #-160]!
  41e73c:	mov	x29, sp
  41e740:	str	x0, [sp, #40]
  41e744:	str	x1, [sp, #32]
  41e748:	str	x2, [sp, #24]
  41e74c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41e750:	ldr	x0, [x0, #4024]
  41e754:	ldr	x1, [x0]
  41e758:	str	x1, [sp, #152]
  41e75c:	mov	x1, #0x0                   	// #0
  41e760:	ldr	x0, [sp, #32]
  41e764:	str	x0, [sp, #104]
  41e768:	ldr	x0, [sp, #40]
  41e76c:	cmp	x0, #0x0
  41e770:	cset	w0, eq  // eq = none
  41e774:	and	w0, w0, #0xff
  41e778:	and	x0, x0, #0xff
  41e77c:	cmp	x0, #0x0
  41e780:	b.eq	41e7ac <method_set_reboot_to_boot_loader_menu+0x74>  // b.none
  41e784:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e788:	add	x1, x0, #0xb5b
  41e78c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e790:	add	x4, x0, #0x60
  41e794:	mov	w3, #0xaeb                 	// #2795
  41e798:	mov	x2, x1
  41e79c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e7a0:	add	x1, x0, #0xd78
  41e7a4:	mov	w0, #0x0                   	// #0
  41e7a8:	bl	407650 <log_assert_failed_realm@plt>
  41e7ac:	ldr	x0, [sp, #104]
  41e7b0:	cmp	x0, #0x0
  41e7b4:	cset	w0, eq  // eq = none
  41e7b8:	and	w0, w0, #0xff
  41e7bc:	and	x0, x0, #0xff
  41e7c0:	cmp	x0, #0x0
  41e7c4:	b.eq	41e7f0 <method_set_reboot_to_boot_loader_menu+0xb8>  // b.none
  41e7c8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e7cc:	add	x1, x0, #0xb5b
  41e7d0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e7d4:	add	x4, x0, #0x60
  41e7d8:	mov	w3, #0xaec                 	// #2796
  41e7dc:	mov	x2, x1
  41e7e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e7e4:	add	x1, x0, #0xb78
  41e7e8:	mov	w0, #0x0                   	// #0
  41e7ec:	bl	407650 <log_assert_failed_realm@plt>
  41e7f0:	add	x0, sp, #0x58
  41e7f4:	mov	x2, x0
  41e7f8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e7fc:	add	x1, x0, #0xd38
  41e800:	ldr	x0, [sp, #40]
  41e804:	bl	407660 <sd_bus_message_read@plt>
  41e808:	str	w0, [sp, #60]
  41e80c:	ldr	w0, [sp, #60]
  41e810:	cmp	w0, #0x0
  41e814:	b.ge	41e820 <method_set_reboot_to_boot_loader_menu+0xe8>  // b.tcont
  41e818:	ldr	w0, [sp, #60]
  41e81c:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41e820:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e824:	add	x0, x0, #0x2c8
  41e828:	bl	407930 <getenv_bool@plt>
  41e82c:	str	w0, [sp, #60]
  41e830:	ldr	w0, [sp, #60]
  41e834:	cmn	w0, #0x6
  41e838:	b.ne	41e914 <method_set_reboot_to_boot_loader_menu+0x1dc>  // b.any
  41e83c:	add	x0, sp, #0x60
  41e840:	bl	407cf0 <efi_loader_get_features@plt>
  41e844:	str	w0, [sp, #60]
  41e848:	ldr	w0, [sp, #60]
  41e84c:	cmp	w0, #0x0
  41e850:	b.ge	41e8cc <method_set_reboot_to_boot_loader_menu+0x194>  // b.tcont
  41e854:	mov	w0, #0x4                   	// #4
  41e858:	str	w0, [sp, #76]
  41e85c:	ldr	w0, [sp, #60]
  41e860:	str	w0, [sp, #80]
  41e864:	str	wzr, [sp, #84]
  41e868:	ldr	w0, [sp, #84]
  41e86c:	bl	4083e0 <log_get_max_level_realm@plt>
  41e870:	mov	w1, w0
  41e874:	ldr	w0, [sp, #76]
  41e878:	and	w0, w0, #0x7
  41e87c:	cmp	w1, w0
  41e880:	b.lt	41e8c4 <method_set_reboot_to_boot_loader_menu+0x18c>  // b.tstop
  41e884:	ldr	w0, [sp, #84]
  41e888:	lsl	w1, w0, #10
  41e88c:	ldr	w0, [sp, #76]
  41e890:	orr	w6, w1, w0
  41e894:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e898:	add	x1, x0, #0xb5b
  41e89c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e8a0:	add	x5, x0, #0x4a0
  41e8a4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e8a8:	add	x4, x0, #0x88
  41e8ac:	mov	w3, #0xafa                 	// #2810
  41e8b0:	mov	x2, x1
  41e8b4:	ldr	w1, [sp, #80]
  41e8b8:	mov	w0, w6
  41e8bc:	bl	407d60 <log_internal_realm@plt>
  41e8c0:	b	41e8cc <method_set_reboot_to_boot_loader_menu+0x194>
  41e8c4:	ldr	w0, [sp, #80]
  41e8c8:	cmp	w0, #0x0
  41e8cc:	ldr	w0, [sp, #60]
  41e8d0:	cmp	w0, #0x0
  41e8d4:	b.lt	41e8ec <method_set_reboot_to_boot_loader_menu+0x1b4>  // b.tstop
  41e8d8:	ldr	x0, [sp, #96]
  41e8dc:	mvn	x0, x0
  41e8e0:	and	x0, x0, #0x2
  41e8e4:	cmp	x0, #0x0
  41e8e8:	b.eq	41e908 <method_set_reboot_to_boot_loader_menu+0x1d0>  // b.none
  41e8ec:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e8f0:	add	x2, x0, #0x4e8
  41e8f4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e8f8:	add	x1, x0, #0xb8
  41e8fc:	ldr	x0, [sp, #24]
  41e900:	bl	407ae0 <sd_bus_error_setf@plt>
  41e904:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41e908:	mov	w0, #0x1                   	// #1
  41e90c:	strb	w0, [sp, #59]
  41e910:	b	41e9c4 <method_set_reboot_to_boot_loader_menu+0x28c>
  41e914:	ldr	w0, [sp, #60]
  41e918:	cmp	w0, #0x0
  41e91c:	b.gt	41e9c0 <method_set_reboot_to_boot_loader_menu+0x288>
  41e920:	ldr	w0, [sp, #60]
  41e924:	cmp	w0, #0x0
  41e928:	b.ge	41e9a4 <method_set_reboot_to_boot_loader_menu+0x26c>  // b.tcont
  41e92c:	mov	w0, #0x4                   	// #4
  41e930:	str	w0, [sp, #64]
  41e934:	ldr	w0, [sp, #60]
  41e938:	str	w0, [sp, #68]
  41e93c:	str	wzr, [sp, #72]
  41e940:	ldr	w0, [sp, #72]
  41e944:	bl	4083e0 <log_get_max_level_realm@plt>
  41e948:	mov	w1, w0
  41e94c:	ldr	w0, [sp, #64]
  41e950:	and	w0, w0, #0x7
  41e954:	cmp	w1, w0
  41e958:	b.lt	41e99c <method_set_reboot_to_boot_loader_menu+0x264>  // b.tstop
  41e95c:	ldr	w0, [sp, #72]
  41e960:	lsl	w1, w0, #10
  41e964:	ldr	w0, [sp, #64]
  41e968:	orr	w6, w1, w0
  41e96c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41e970:	add	x1, x0, #0xb5b
  41e974:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e978:	add	x5, x0, #0x3c0
  41e97c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41e980:	add	x4, x0, #0x88
  41e984:	mov	w3, #0xb04                 	// #2820
  41e988:	mov	x2, x1
  41e98c:	ldr	w1, [sp, #68]
  41e990:	mov	w0, w6
  41e994:	bl	407d60 <log_internal_realm@plt>
  41e998:	b	41e9a4 <method_set_reboot_to_boot_loader_menu+0x26c>
  41e99c:	ldr	w0, [sp, #68]
  41e9a0:	cmp	w0, #0x0
  41e9a4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e9a8:	add	x2, x0, #0x4e8
  41e9ac:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e9b0:	add	x1, x0, #0xb8
  41e9b4:	ldr	x0, [sp, #24]
  41e9b8:	bl	407ae0 <sd_bus_error_setf@plt>
  41e9bc:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41e9c0:	strb	wzr, [sp, #59]
  41e9c4:	ldr	x0, [sp, #104]
  41e9c8:	add	x0, x0, #0x1b0
  41e9cc:	ldr	x7, [sp, #24]
  41e9d0:	mov	x6, x0
  41e9d4:	mov	w5, #0xffffffff            	// #-1
  41e9d8:	mov	w4, #0x0                   	// #0
  41e9dc:	mov	x3, #0x0                   	// #0
  41e9e0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41e9e4:	add	x2, x0, #0x528
  41e9e8:	mov	w1, #0x15                  	// #21
  41e9ec:	ldr	x0, [sp, #40]
  41e9f0:	bl	408350 <bus_verify_polkit_async@plt>
  41e9f4:	str	w0, [sp, #60]
  41e9f8:	ldr	w0, [sp, #60]
  41e9fc:	cmp	w0, #0x0
  41ea00:	b.ge	41ea0c <method_set_reboot_to_boot_loader_menu+0x2d4>  // b.tcont
  41ea04:	ldr	w0, [sp, #60]
  41ea08:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41ea0c:	ldr	w0, [sp, #60]
  41ea10:	cmp	w0, #0x0
  41ea14:	b.ne	41ea20 <method_set_reboot_to_boot_loader_menu+0x2e8>  // b.any
  41ea18:	mov	w0, #0x1                   	// #1
  41ea1c:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41ea20:	ldrb	w0, [sp, #59]
  41ea24:	cmp	w0, #0x0
  41ea28:	b.eq	41eb40 <method_set_reboot_to_boot_loader_menu+0x408>  // b.none
  41ea2c:	ldr	x0, [sp, #88]
  41ea30:	cmn	x0, #0x1
  41ea34:	b.ne	41ea60 <method_set_reboot_to_boot_loader_menu+0x328>  // b.any
  41ea38:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ea3c:	add	x0, x0, #0xb0
  41ea40:	mov	x4, #0x0                   	// #0
  41ea44:	mov	x3, #0x0                   	// #0
  41ea48:	adrp	x1, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ea4c:	add	x2, x1, #0x2f0
  41ea50:	ldp	x0, x1, [x0]
  41ea54:	bl	4072d0 <efi_set_variable@plt>
  41ea58:	str	w0, [sp, #60]
  41ea5c:	b	41eb2c <method_set_reboot_to_boot_loader_menu+0x3f4>
  41ea60:	ldr	x0, [sp, #88]
  41ea64:	str	x0, [sp, #112]
  41ea68:	mov	x0, #0x4240                	// #16960
  41ea6c:	movk	x0, #0xf, lsl #16
  41ea70:	str	x0, [sp, #120]
  41ea74:	ldr	x1, [sp, #112]
  41ea78:	ldr	x0, [sp, #120]
  41ea7c:	udiv	x1, x1, x0
  41ea80:	ldr	x0, [sp, #112]
  41ea84:	ldr	x2, [sp, #120]
  41ea88:	udiv	x3, x0, x2
  41ea8c:	ldr	x2, [sp, #120]
  41ea90:	mul	x2, x3, x2
  41ea94:	sub	x0, x0, x2
  41ea98:	cmp	x0, #0x0
  41ea9c:	cset	w0, ne  // ne = any
  41eaa0:	and	w0, w0, #0xff
  41eaa4:	and	x0, x0, #0xff
  41eaa8:	add	x0, x1, x0
  41eaac:	add	x4, sp, #0x80
  41eab0:	mov	x3, x0
  41eab4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eab8:	add	x2, x0, #0x560
  41eabc:	mov	x1, #0x17                  	// #23
  41eac0:	mov	x0, x4
  41eac4:	bl	407460 <snprintf@plt>
  41eac8:	cmp	w0, #0x16
  41eacc:	cset	w0, hi  // hi = pmore
  41ead0:	and	w0, w0, #0xff
  41ead4:	and	x0, x0, #0xff
  41ead8:	cmp	x0, #0x0
  41eadc:	b.eq	41eb08 <method_set_reboot_to_boot_loader_menu+0x3d0>  // b.none
  41eae0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41eae4:	add	x1, x0, #0xb5b
  41eae8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41eaec:	add	x4, x0, #0x60
  41eaf0:	mov	w3, #0xb1d                 	// #2845
  41eaf4:	mov	x2, x1
  41eaf8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eafc:	add	x1, x0, #0x568
  41eb00:	mov	w0, #0x0                   	// #0
  41eb04:	bl	407650 <log_assert_failed_realm@plt>
  41eb08:	add	x1, sp, #0x80
  41eb0c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41eb10:	add	x0, x0, #0xc0
  41eb14:	mov	x3, x1
  41eb18:	adrp	x1, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eb1c:	add	x2, x1, #0x2f0
  41eb20:	ldp	x0, x1, [x0]
  41eb24:	bl	4083c0 <efi_set_variable_string@plt>
  41eb28:	str	w0, [sp, #60]
  41eb2c:	ldr	w0, [sp, #60]
  41eb30:	cmp	w0, #0x0
  41eb34:	b.ge	41ec0c <method_set_reboot_to_boot_loader_menu+0x4d4>  // b.tcont
  41eb38:	ldr	w0, [sp, #60]
  41eb3c:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41eb40:	ldr	x0, [sp, #88]
  41eb44:	cmn	x0, #0x1
  41eb48:	b.ne	41eb80 <method_set_reboot_to_boot_loader_menu+0x448>  // b.any
  41eb4c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eb50:	add	x0, x0, #0x590
  41eb54:	bl	4070c0 <unlink@plt>
  41eb58:	cmp	w0, #0x0
  41eb5c:	b.ge	41ec0c <method_set_reboot_to_boot_loader_menu+0x4d4>  // b.tcont
  41eb60:	bl	407960 <__errno_location@plt>
  41eb64:	ldr	w0, [x0]
  41eb68:	cmp	w0, #0x2
  41eb6c:	b.eq	41ec0c <method_set_reboot_to_boot_loader_menu+0x4d4>  // b.none
  41eb70:	bl	407960 <__errno_location@plt>
  41eb74:	ldr	w0, [x0]
  41eb78:	neg	w0, w0
  41eb7c:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41eb80:	ldr	x0, [sp, #88]
  41eb84:	add	x4, sp, #0x80
  41eb88:	mov	x3, x0
  41eb8c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eb90:	add	x2, x0, #0x560
  41eb94:	mov	x1, #0x17                  	// #23
  41eb98:	mov	x0, x4
  41eb9c:	bl	407460 <snprintf@plt>
  41eba0:	cmp	w0, #0x16
  41eba4:	cset	w0, hi  // hi = pmore
  41eba8:	and	w0, w0, #0xff
  41ebac:	and	x0, x0, #0xff
  41ebb0:	cmp	x0, #0x0
  41ebb4:	b.eq	41ebe0 <method_set_reboot_to_boot_loader_menu+0x4a8>  // b.none
  41ebb8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ebbc:	add	x1, x0, #0xb5b
  41ebc0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ebc4:	add	x4, x0, #0x60
  41ebc8:	mov	w3, #0xb2a                 	// #2858
  41ebcc:	mov	x2, x1
  41ebd0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ebd4:	add	x1, x0, #0x568
  41ebd8:	mov	w0, #0x0                   	// #0
  41ebdc:	bl	407650 <log_assert_failed_realm@plt>
  41ebe0:	add	x0, sp, #0x80
  41ebe4:	mov	x1, x0
  41ebe8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ebec:	add	x0, x0, #0x590
  41ebf0:	bl	4140e0 <write_string_file_atomic_label>
  41ebf4:	str	w0, [sp, #60]
  41ebf8:	ldr	w0, [sp, #60]
  41ebfc:	cmp	w0, #0x0
  41ec00:	b.ge	41ec0c <method_set_reboot_to_boot_loader_menu+0x4d4>  // b.tcont
  41ec04:	ldr	w0, [sp, #60]
  41ec08:	b	41ec18 <method_set_reboot_to_boot_loader_menu+0x4e0>
  41ec0c:	mov	x1, #0x0                   	// #0
  41ec10:	ldr	x0, [sp, #40]
  41ec14:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41ec18:	mov	w1, w0
  41ec1c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41ec20:	ldr	x0, [x0, #4024]
  41ec24:	ldr	x2, [sp, #152]
  41ec28:	ldr	x0, [x0]
  41ec2c:	eor	x0, x2, x0
  41ec30:	cmp	x0, #0x0
  41ec34:	b.eq	41ec3c <method_set_reboot_to_boot_loader_menu+0x504>  // b.none
  41ec38:	bl	407b20 <__stack_chk_fail@plt>
  41ec3c:	mov	w0, w1
  41ec40:	ldp	x29, x30, [sp], #160
  41ec44:	ret

000000000041ec48 <method_can_reboot_to_boot_loader_menu>:
  41ec48:	stp	x29, x30, [sp, #-112]!
  41ec4c:	mov	x29, sp
  41ec50:	str	x0, [sp, #40]
  41ec54:	str	x1, [sp, #32]
  41ec58:	str	x2, [sp, #24]
  41ec5c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41ec60:	ldr	x0, [x0, #4024]
  41ec64:	ldr	x1, [x0]
  41ec68:	str	x1, [sp, #104]
  41ec6c:	mov	x1, #0x0                   	// #0
  41ec70:	ldr	x0, [sp, #32]
  41ec74:	str	x0, [sp, #96]
  41ec78:	ldr	x0, [sp, #40]
  41ec7c:	cmp	x0, #0x0
  41ec80:	cset	w0, eq  // eq = none
  41ec84:	and	w0, w0, #0xff
  41ec88:	and	x0, x0, #0xff
  41ec8c:	cmp	x0, #0x0
  41ec90:	b.eq	41ecbc <method_can_reboot_to_boot_loader_menu+0x74>  // b.none
  41ec94:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ec98:	add	x1, x0, #0xb5b
  41ec9c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41eca0:	add	x4, x0, #0xd0
  41eca4:	mov	w3, #0xb3d                 	// #2877
  41eca8:	mov	x2, x1
  41ecac:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ecb0:	add	x1, x0, #0xd78
  41ecb4:	mov	w0, #0x0                   	// #0
  41ecb8:	bl	407650 <log_assert_failed_realm@plt>
  41ecbc:	ldr	x0, [sp, #96]
  41ecc0:	cmp	x0, #0x0
  41ecc4:	cset	w0, eq  // eq = none
  41ecc8:	and	w0, w0, #0xff
  41eccc:	and	x0, x0, #0xff
  41ecd0:	cmp	x0, #0x0
  41ecd4:	b.eq	41ed00 <method_can_reboot_to_boot_loader_menu+0xb8>  // b.none
  41ecd8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ecdc:	add	x1, x0, #0xb5b
  41ece0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ece4:	add	x4, x0, #0xd0
  41ece8:	mov	w3, #0xb3e                 	// #2878
  41ecec:	mov	x2, x1
  41ecf0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ecf4:	add	x1, x0, #0xb78
  41ecf8:	mov	w0, #0x0                   	// #0
  41ecfc:	bl	407650 <log_assert_failed_realm@plt>
  41ed00:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ed04:	add	x0, x0, #0x2c8
  41ed08:	bl	407930 <getenv_bool@plt>
  41ed0c:	str	w0, [sp, #60]
  41ed10:	ldr	w0, [sp, #60]
  41ed14:	cmn	w0, #0x6
  41ed18:	b.ne	41edec <method_can_reboot_to_boot_loader_menu+0x1a4>  // b.any
  41ed1c:	str	xzr, [sp, #88]
  41ed20:	add	x0, sp, #0x58
  41ed24:	bl	407cf0 <efi_loader_get_features@plt>
  41ed28:	str	w0, [sp, #60]
  41ed2c:	ldr	w0, [sp, #60]
  41ed30:	cmp	w0, #0x0
  41ed34:	b.ge	41edb0 <method_can_reboot_to_boot_loader_menu+0x168>  // b.tcont
  41ed38:	mov	w0, #0x4                   	// #4
  41ed3c:	str	w0, [sp, #76]
  41ed40:	ldr	w0, [sp, #60]
  41ed44:	str	w0, [sp, #80]
  41ed48:	str	wzr, [sp, #84]
  41ed4c:	ldr	w0, [sp, #84]
  41ed50:	bl	4083e0 <log_get_max_level_realm@plt>
  41ed54:	mov	w1, w0
  41ed58:	ldr	w0, [sp, #76]
  41ed5c:	and	w0, w0, #0x7
  41ed60:	cmp	w1, w0
  41ed64:	b.lt	41eda8 <method_can_reboot_to_boot_loader_menu+0x160>  // b.tstop
  41ed68:	ldr	w0, [sp, #84]
  41ed6c:	lsl	w1, w0, #10
  41ed70:	ldr	w0, [sp, #76]
  41ed74:	orr	w6, w1, w0
  41ed78:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ed7c:	add	x1, x0, #0xb5b
  41ed80:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ed84:	add	x5, x0, #0x4a0
  41ed88:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ed8c:	add	x4, x0, #0xf8
  41ed90:	mov	w3, #0xb48                 	// #2888
  41ed94:	mov	x2, x1
  41ed98:	ldr	w1, [sp, #80]
  41ed9c:	mov	w0, w6
  41eda0:	bl	407d60 <log_internal_realm@plt>
  41eda4:	b	41edb0 <method_can_reboot_to_boot_loader_menu+0x168>
  41eda8:	ldr	w0, [sp, #80]
  41edac:	cmp	w0, #0x0
  41edb0:	ldr	w0, [sp, #60]
  41edb4:	cmp	w0, #0x0
  41edb8:	b.lt	41edd0 <method_can_reboot_to_boot_loader_menu+0x188>  // b.tstop
  41edbc:	ldr	x0, [sp, #88]
  41edc0:	mvn	x0, x0
  41edc4:	and	x0, x0, #0x2
  41edc8:	cmp	x0, #0x0
  41edcc:	b.eq	41ee98 <method_can_reboot_to_boot_loader_menu+0x250>  // b.none
  41edd0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41edd4:	add	x2, x0, #0x50
  41edd8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41eddc:	add	x1, x0, #0xd08
  41ede0:	ldr	x0, [sp, #40]
  41ede4:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41ede8:	b	41eeb8 <method_can_reboot_to_boot_loader_menu+0x270>
  41edec:	ldr	w0, [sp, #60]
  41edf0:	cmp	w0, #0x0
  41edf4:	b.gt	41ee98 <method_can_reboot_to_boot_loader_menu+0x250>
  41edf8:	ldr	w0, [sp, #60]
  41edfc:	cmp	w0, #0x0
  41ee00:	b.ge	41ee7c <method_can_reboot_to_boot_loader_menu+0x234>  // b.tcont
  41ee04:	mov	w0, #0x4                   	// #4
  41ee08:	str	w0, [sp, #64]
  41ee0c:	ldr	w0, [sp, #60]
  41ee10:	str	w0, [sp, #68]
  41ee14:	str	wzr, [sp, #72]
  41ee18:	ldr	w0, [sp, #72]
  41ee1c:	bl	4083e0 <log_get_max_level_realm@plt>
  41ee20:	mov	w1, w0
  41ee24:	ldr	w0, [sp, #64]
  41ee28:	and	w0, w0, #0x7
  41ee2c:	cmp	w1, w0
  41ee30:	b.lt	41ee74 <method_can_reboot_to_boot_loader_menu+0x22c>  // b.tstop
  41ee34:	ldr	w0, [sp, #72]
  41ee38:	lsl	w1, w0, #10
  41ee3c:	ldr	w0, [sp, #64]
  41ee40:	orr	w6, w1, w0
  41ee44:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ee48:	add	x1, x0, #0xb5b
  41ee4c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ee50:	add	x5, x0, #0x3c0
  41ee54:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ee58:	add	x4, x0, #0xf8
  41ee5c:	mov	w3, #0xb50                 	// #2896
  41ee60:	mov	x2, x1
  41ee64:	ldr	w1, [sp, #68]
  41ee68:	mov	w0, w6
  41ee6c:	bl	407d60 <log_internal_realm@plt>
  41ee70:	b	41ee7c <method_can_reboot_to_boot_loader_menu+0x234>
  41ee74:	ldr	w0, [sp, #68]
  41ee78:	cmp	w0, #0x0
  41ee7c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ee80:	add	x2, x0, #0x50
  41ee84:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ee88:	add	x1, x0, #0xd08
  41ee8c:	ldr	x0, [sp, #40]
  41ee90:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41ee94:	b	41eeb8 <method_can_reboot_to_boot_loader_menu+0x270>
  41ee98:	ldr	x5, [sp, #24]
  41ee9c:	mov	w4, #0xffffffff            	// #-1
  41eea0:	mov	x3, #0x0                   	// #0
  41eea4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eea8:	add	x2, x0, #0x528
  41eeac:	mov	w1, #0x15                  	// #21
  41eeb0:	ldr	x0, [sp, #40]
  41eeb4:	bl	414a1c <return_test_polkit>
  41eeb8:	mov	w1, w0
  41eebc:	adrp	x0, 460000 <wordlist.10364+0x370>
  41eec0:	ldr	x0, [x0, #4024]
  41eec4:	ldr	x2, [sp, #104]
  41eec8:	ldr	x0, [x0]
  41eecc:	eor	x0, x2, x0
  41eed0:	cmp	x0, #0x0
  41eed4:	b.eq	41eedc <method_can_reboot_to_boot_loader_menu+0x294>  // b.none
  41eed8:	bl	407b20 <__stack_chk_fail@plt>
  41eedc:	mov	w0, w1
  41eee0:	ldp	x29, x30, [sp], #112
  41eee4:	ret

000000000041eee8 <property_get_reboot_to_boot_loader_entry>:
  41eee8:	stp	x29, x30, [sp, #-176]!
  41eeec:	mov	x29, sp
  41eef0:	str	x19, [sp, #16]
  41eef4:	str	x0, [sp, #88]
  41eef8:	str	x1, [sp, #80]
  41eefc:	str	x2, [sp, #72]
  41ef00:	str	x3, [sp, #64]
  41ef04:	str	x4, [sp, #56]
  41ef08:	str	x5, [sp, #48]
  41ef0c:	str	x6, [sp, #40]
  41ef10:	adrp	x0, 460000 <wordlist.10364+0x370>
  41ef14:	ldr	x0, [x0, #4024]
  41ef18:	ldr	x1, [x0]
  41ef1c:	str	x1, [sp, #168]
  41ef20:	mov	x1, #0x0                   	// #0
  41ef24:	str	xzr, [sp, #160]
  41ef28:	ldr	x0, [sp, #88]
  41ef2c:	cmp	x0, #0x0
  41ef30:	cset	w0, eq  // eq = none
  41ef34:	and	w0, w0, #0xff
  41ef38:	and	x0, x0, #0xff
  41ef3c:	cmp	x0, #0x0
  41ef40:	b.eq	41ef6c <property_get_reboot_to_boot_loader_entry+0x84>  // b.none
  41ef44:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ef48:	add	x1, x0, #0xb5b
  41ef4c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ef50:	add	x4, x0, #0x120
  41ef54:	mov	w3, #0xb6a                 	// #2922
  41ef58:	mov	x2, x1
  41ef5c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ef60:	add	x1, x0, #0xd10
  41ef64:	mov	w0, #0x0                   	// #0
  41ef68:	bl	407650 <log_assert_failed_realm@plt>
  41ef6c:	ldr	x0, [sp, #56]
  41ef70:	cmp	x0, #0x0
  41ef74:	cset	w0, eq  // eq = none
  41ef78:	and	w0, w0, #0xff
  41ef7c:	and	x0, x0, #0xff
  41ef80:	cmp	x0, #0x0
  41ef84:	b.eq	41efb0 <property_get_reboot_to_boot_loader_entry+0xc8>  // b.none
  41ef88:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ef8c:	add	x1, x0, #0xb5b
  41ef90:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ef94:	add	x4, x0, #0x120
  41ef98:	mov	w3, #0xb6b                 	// #2923
  41ef9c:	mov	x2, x1
  41efa0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41efa4:	add	x1, x0, #0xd18
  41efa8:	mov	w0, #0x0                   	// #0
  41efac:	bl	407650 <log_assert_failed_realm@plt>
  41efb0:	ldr	x0, [sp, #48]
  41efb4:	cmp	x0, #0x0
  41efb8:	cset	w0, eq  // eq = none
  41efbc:	and	w0, w0, #0xff
  41efc0:	and	x0, x0, #0xff
  41efc4:	cmp	x0, #0x0
  41efc8:	b.eq	41eff4 <property_get_reboot_to_boot_loader_entry+0x10c>  // b.none
  41efcc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41efd0:	add	x1, x0, #0xb5b
  41efd4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41efd8:	add	x4, x0, #0x120
  41efdc:	mov	w3, #0xb6c                 	// #2924
  41efe0:	mov	x2, x1
  41efe4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41efe8:	add	x1, x0, #0x70
  41efec:	mov	w0, #0x0                   	// #0
  41eff0:	bl	407650 <log_assert_failed_realm@plt>
  41eff4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41eff8:	add	x0, x0, #0x5b8
  41effc:	bl	407930 <getenv_bool@plt>
  41f000:	str	w0, [sp, #96]
  41f004:	ldr	w0, [sp, #96]
  41f008:	cmn	w0, #0x6
  41f00c:	b.ne	41f170 <property_get_reboot_to_boot_loader_entry+0x288>  // b.any
  41f010:	add	x1, sp, #0xa0
  41f014:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f018:	add	x0, x0, #0x150
  41f01c:	mov	x3, x1
  41f020:	adrp	x1, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f024:	add	x2, x1, #0x5e0
  41f028:	ldp	x0, x1, [x0]
  41f02c:	bl	407250 <efi_get_variable_string@plt>
  41f030:	str	w0, [sp, #96]
  41f034:	ldr	w0, [sp, #96]
  41f038:	cmp	w0, #0x0
  41f03c:	b.ge	41f0c8 <property_get_reboot_to_boot_loader_entry+0x1e0>  // b.tcont
  41f040:	ldr	w0, [sp, #96]
  41f044:	cmn	w0, #0x2
  41f048:	b.eq	41f34c <property_get_reboot_to_boot_loader_entry+0x464>  // b.none
  41f04c:	mov	w0, #0x4                   	// #4
  41f050:	str	w0, [sp, #148]
  41f054:	ldr	w0, [sp, #96]
  41f058:	str	w0, [sp, #152]
  41f05c:	str	wzr, [sp, #156]
  41f060:	ldr	w0, [sp, #156]
  41f064:	bl	4083e0 <log_get_max_level_realm@plt>
  41f068:	mov	w1, w0
  41f06c:	ldr	w0, [sp, #148]
  41f070:	and	w0, w0, #0x7
  41f074:	cmp	w1, w0
  41f078:	b.lt	41f0bc <property_get_reboot_to_boot_loader_entry+0x1d4>  // b.tstop
  41f07c:	ldr	w0, [sp, #156]
  41f080:	lsl	w1, w0, #10
  41f084:	ldr	w0, [sp, #148]
  41f088:	orr	w6, w1, w0
  41f08c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f090:	add	x1, x0, #0xb5b
  41f094:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f098:	add	x5, x0, #0x5f8
  41f09c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f0a0:	add	x4, x0, #0x160
  41f0a4:	mov	w3, #0xb75                 	// #2933
  41f0a8:	mov	x2, x1
  41f0ac:	ldr	w1, [sp, #152]
  41f0b0:	mov	w0, w6
  41f0b4:	bl	407d60 <log_internal_realm@plt>
  41f0b8:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f0bc:	ldr	w0, [sp, #152]
  41f0c0:	cmp	w0, #0x0
  41f0c4:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f0c8:	ldr	x0, [sp, #160]
  41f0cc:	bl	407610 <efi_loader_entry_name_valid@plt>
  41f0d0:	and	w0, w0, #0xff
  41f0d4:	eor	w0, w0, #0x1
  41f0d8:	and	w0, w0, #0xff
  41f0dc:	cmp	w0, #0x0
  41f0e0:	b.eq	41f34c <property_get_reboot_to_boot_loader_entry+0x464>  // b.none
  41f0e4:	mov	w0, #0x4                   	// #4
  41f0e8:	str	w0, [sp, #136]
  41f0ec:	str	wzr, [sp, #140]
  41f0f0:	str	wzr, [sp, #144]
  41f0f4:	ldr	w0, [sp, #144]
  41f0f8:	bl	4083e0 <log_get_max_level_realm@plt>
  41f0fc:	mov	w1, w0
  41f100:	ldr	w0, [sp, #136]
  41f104:	and	w0, w0, #0x7
  41f108:	cmp	w1, w0
  41f10c:	b.lt	41f158 <property_get_reboot_to_boot_loader_entry+0x270>  // b.tstop
  41f110:	ldr	w0, [sp, #144]
  41f114:	lsl	w1, w0, #10
  41f118:	ldr	w0, [sp, #136]
  41f11c:	orr	w7, w1, w0
  41f120:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f124:	add	x1, x0, #0xb5b
  41f128:	ldr	x0, [sp, #160]
  41f12c:	mov	x6, x0
  41f130:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f134:	add	x5, x0, #0x628
  41f138:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f13c:	add	x4, x0, #0x160
  41f140:	mov	w3, #0xb77                 	// #2935
  41f144:	mov	x2, x1
  41f148:	ldr	w1, [sp, #140]
  41f14c:	mov	w0, w7
  41f150:	bl	407d60 <log_internal_realm@plt>
  41f154:	b	41f160 <property_get_reboot_to_boot_loader_entry+0x278>
  41f158:	ldr	w0, [sp, #140]
  41f15c:	cmp	w0, #0x0
  41f160:	ldr	x0, [sp, #160]
  41f164:	bl	413ca4 <mfree>
  41f168:	str	x0, [sp, #160]
  41f16c:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f170:	ldr	w0, [sp, #96]
  41f174:	cmp	w0, #0x0
  41f178:	b.ge	41f1f8 <property_get_reboot_to_boot_loader_entry+0x310>  // b.tcont
  41f17c:	mov	w0, #0x4                   	// #4
  41f180:	str	w0, [sp, #124]
  41f184:	ldr	w0, [sp, #96]
  41f188:	str	w0, [sp, #128]
  41f18c:	str	wzr, [sp, #132]
  41f190:	ldr	w0, [sp, #132]
  41f194:	bl	4083e0 <log_get_max_level_realm@plt>
  41f198:	mov	w1, w0
  41f19c:	ldr	w0, [sp, #124]
  41f1a0:	and	w0, w0, #0x7
  41f1a4:	cmp	w1, w0
  41f1a8:	b.lt	41f1ec <property_get_reboot_to_boot_loader_entry+0x304>  // b.tstop
  41f1ac:	ldr	w0, [sp, #132]
  41f1b0:	lsl	w1, w0, #10
  41f1b4:	ldr	w0, [sp, #124]
  41f1b8:	orr	w6, w1, w0
  41f1bc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f1c0:	add	x1, x0, #0xb5b
  41f1c4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f1c8:	add	x5, x0, #0x668
  41f1cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f1d0:	add	x4, x0, #0x160
  41f1d4:	mov	w3, #0xb7b                 	// #2939
  41f1d8:	mov	x2, x1
  41f1dc:	ldr	w1, [sp, #128]
  41f1e0:	mov	w0, w6
  41f1e4:	bl	407d60 <log_internal_realm@plt>
  41f1e8:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f1ec:	ldr	w0, [sp, #128]
  41f1f0:	cmp	w0, #0x0
  41f1f4:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f1f8:	ldr	w0, [sp, #96]
  41f1fc:	cmp	w0, #0x0
  41f200:	b.le	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f204:	add	x0, sp, #0xa0
  41f208:	mov	x1, x0
  41f20c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f210:	add	x0, x0, #0x6a8
  41f214:	bl	407a90 <read_one_line_file@plt>
  41f218:	str	w0, [sp, #96]
  41f21c:	ldr	w0, [sp, #96]
  41f220:	cmp	w0, #0x0
  41f224:	b.ge	41f2b0 <property_get_reboot_to_boot_loader_entry+0x3c8>  // b.tcont
  41f228:	ldr	w0, [sp, #96]
  41f22c:	cmn	w0, #0x2
  41f230:	b.eq	41f34c <property_get_reboot_to_boot_loader_entry+0x464>  // b.none
  41f234:	mov	w0, #0x4                   	// #4
  41f238:	str	w0, [sp, #112]
  41f23c:	ldr	w0, [sp, #96]
  41f240:	str	w0, [sp, #116]
  41f244:	str	wzr, [sp, #120]
  41f248:	ldr	w0, [sp, #120]
  41f24c:	bl	4083e0 <log_get_max_level_realm@plt>
  41f250:	mov	w1, w0
  41f254:	ldr	w0, [sp, #112]
  41f258:	and	w0, w0, #0x7
  41f25c:	cmp	w1, w0
  41f260:	b.lt	41f2a4 <property_get_reboot_to_boot_loader_entry+0x3bc>  // b.tstop
  41f264:	ldr	w0, [sp, #120]
  41f268:	lsl	w1, w0, #10
  41f26c:	ldr	w0, [sp, #112]
  41f270:	orr	w6, w1, w0
  41f274:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f278:	add	x1, x0, #0xb5b
  41f27c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f280:	add	x5, x0, #0x6d8
  41f284:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f288:	add	x4, x0, #0x160
  41f28c:	mov	w3, #0xb83                 	// #2947
  41f290:	mov	x2, x1
  41f294:	ldr	w1, [sp, #116]
  41f298:	mov	w0, w6
  41f29c:	bl	407d60 <log_internal_realm@plt>
  41f2a0:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f2a4:	ldr	w0, [sp, #116]
  41f2a8:	cmp	w0, #0x0
  41f2ac:	b	41f34c <property_get_reboot_to_boot_loader_entry+0x464>
  41f2b0:	ldr	x0, [sp, #160]
  41f2b4:	bl	407610 <efi_loader_entry_name_valid@plt>
  41f2b8:	and	w0, w0, #0xff
  41f2bc:	eor	w0, w0, #0x1
  41f2c0:	and	w0, w0, #0xff
  41f2c4:	cmp	w0, #0x0
  41f2c8:	b.eq	41f34c <property_get_reboot_to_boot_loader_entry+0x464>  // b.none
  41f2cc:	mov	w0, #0x4                   	// #4
  41f2d0:	str	w0, [sp, #100]
  41f2d4:	str	wzr, [sp, #104]
  41f2d8:	str	wzr, [sp, #108]
  41f2dc:	ldr	w0, [sp, #108]
  41f2e0:	bl	4083e0 <log_get_max_level_realm@plt>
  41f2e4:	mov	w1, w0
  41f2e8:	ldr	w0, [sp, #100]
  41f2ec:	and	w0, w0, #0x7
  41f2f0:	cmp	w1, w0
  41f2f4:	b.lt	41f338 <property_get_reboot_to_boot_loader_entry+0x450>  // b.tstop
  41f2f8:	ldr	w0, [sp, #108]
  41f2fc:	lsl	w1, w0, #10
  41f300:	ldr	w0, [sp, #100]
  41f304:	orr	w6, w1, w0
  41f308:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f30c:	add	x1, x0, #0xb5b
  41f310:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f314:	add	x5, x0, #0x718
  41f318:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f31c:	add	x4, x0, #0x160
  41f320:	mov	w3, #0xb85                 	// #2949
  41f324:	mov	x2, x1
  41f328:	ldr	w1, [sp, #104]
  41f32c:	mov	w0, w6
  41f330:	bl	407d60 <log_internal_realm@plt>
  41f334:	b	41f340 <property_get_reboot_to_boot_loader_entry+0x458>
  41f338:	ldr	w0, [sp, #104]
  41f33c:	cmp	w0, #0x0
  41f340:	ldr	x0, [sp, #160]
  41f344:	bl	413ca4 <mfree>
  41f348:	str	x0, [sp, #160]
  41f34c:	ldr	x0, [sp, #160]
  41f350:	mov	x2, x0
  41f354:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f358:	add	x1, x0, #0xd08
  41f35c:	ldr	x0, [sp, #56]
  41f360:	bl	407590 <sd_bus_message_append@plt>
  41f364:	mov	w19, w0
  41f368:	add	x0, sp, #0xa0
  41f36c:	bl	413cc4 <freep>
  41f370:	mov	w1, w19
  41f374:	adrp	x0, 460000 <wordlist.10364+0x370>
  41f378:	ldr	x0, [x0, #4024]
  41f37c:	ldr	x2, [sp, #168]
  41f380:	ldr	x0, [x0]
  41f384:	eor	x0, x2, x0
  41f388:	cmp	x0, #0x0
  41f38c:	b.eq	41f394 <property_get_reboot_to_boot_loader_entry+0x4ac>  // b.none
  41f390:	bl	407b20 <__stack_chk_fail@plt>
  41f394:	mov	w0, w1
  41f398:	ldr	x19, [sp, #16]
  41f39c:	ldp	x29, x30, [sp], #176
  41f3a0:	ret

000000000041f3a4 <boot_loader_entry_exists>:
  41f3a4:	stp	x29, x30, [sp, #-160]!
  41f3a8:	mov	x29, sp
  41f3ac:	str	x19, [sp, #16]
  41f3b0:	str	x0, [sp, #40]
  41f3b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  41f3b8:	ldr	x0, [x0, #4024]
  41f3bc:	ldr	x1, [x0]
  41f3c0:	str	x1, [sp, #152]
  41f3c4:	mov	x1, #0x0                   	// #0
  41f3c8:	stp	xzr, xzr, [sp, #64]
  41f3cc:	stp	xzr, xzr, [sp, #80]
  41f3d0:	stp	xzr, xzr, [sp, #96]
  41f3d4:	stp	xzr, xzr, [sp, #112]
  41f3d8:	stp	xzr, xzr, [sp, #128]
  41f3dc:	str	xzr, [sp, #144]
  41f3e0:	ldr	x0, [sp, #40]
  41f3e4:	cmp	x0, #0x0
  41f3e8:	cset	w0, eq  // eq = none
  41f3ec:	and	w0, w0, #0xff
  41f3f0:	and	x0, x0, #0xff
  41f3f4:	cmp	x0, #0x0
  41f3f8:	b.eq	41f424 <boot_loader_entry_exists+0x80>  // b.none
  41f3fc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f400:	add	x1, x0, #0xb5b
  41f404:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f408:	add	x4, x0, #0x190
  41f40c:	mov	w3, #0xb91                 	// #2961
  41f410:	mov	x2, x1
  41f414:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f418:	add	x1, x0, #0x760
  41f41c:	mov	w0, #0x0                   	// #0
  41f420:	bl	407650 <log_assert_failed_realm@plt>
  41f424:	add	x0, sp, #0x40
  41f428:	mov	x2, x0
  41f42c:	mov	x1, #0x0                   	// #0
  41f430:	mov	x0, #0x0                   	// #0
  41f434:	bl	407bc0 <boot_entries_load_config_auto@plt>
  41f438:	str	w0, [sp, #60]
  41f43c:	ldr	w0, [sp, #60]
  41f440:	cmp	w0, #0x0
  41f444:	b.ge	41f45c <boot_loader_entry_exists+0xb8>  // b.tcont
  41f448:	ldr	w0, [sp, #60]
  41f44c:	cmn	w0, #0x7e
  41f450:	b.eq	41f45c <boot_loader_entry_exists+0xb8>  // b.none
  41f454:	ldr	w19, [sp, #60]
  41f458:	b	41f47c <boot_loader_entry_exists+0xd8>
  41f45c:	add	x0, sp, #0x40
  41f460:	mov	w1, #0x1                   	// #1
  41f464:	bl	407230 <boot_entries_augment_from_loader@plt>
  41f468:	add	x0, sp, #0x40
  41f46c:	ldr	x1, [sp, #40]
  41f470:	bl	413edc <boot_config_has_entry>
  41f474:	and	w0, w0, #0xff
  41f478:	mov	w19, w0
  41f47c:	add	x0, sp, #0x40
  41f480:	bl	408040 <boot_config_free@plt>
  41f484:	mov	w1, w19
  41f488:	adrp	x0, 460000 <wordlist.10364+0x370>
  41f48c:	ldr	x0, [x0, #4024]
  41f490:	ldr	x2, [sp, #152]
  41f494:	ldr	x0, [x0]
  41f498:	eor	x0, x2, x0
  41f49c:	cmp	x0, #0x0
  41f4a0:	b.eq	41f4a8 <boot_loader_entry_exists+0x104>  // b.none
  41f4a4:	bl	407b20 <__stack_chk_fail@plt>
  41f4a8:	mov	w0, w1
  41f4ac:	ldr	x19, [sp, #16]
  41f4b0:	ldp	x29, x30, [sp], #160
  41f4b4:	ret

000000000041f4b8 <method_set_reboot_to_boot_loader_entry>:
  41f4b8:	stp	x29, x30, [sp, #-112]!
  41f4bc:	mov	x29, sp
  41f4c0:	str	x0, [sp, #40]
  41f4c4:	str	x1, [sp, #32]
  41f4c8:	str	x2, [sp, #24]
  41f4cc:	adrp	x0, 460000 <wordlist.10364+0x370>
  41f4d0:	ldr	x0, [x0, #4024]
  41f4d4:	ldr	x1, [x0]
  41f4d8:	str	x1, [sp, #104]
  41f4dc:	mov	x1, #0x0                   	// #0
  41f4e0:	ldr	x0, [sp, #32]
  41f4e4:	str	x0, [sp, #96]
  41f4e8:	ldr	x0, [sp, #40]
  41f4ec:	cmp	x0, #0x0
  41f4f0:	cset	w0, eq  // eq = none
  41f4f4:	and	w0, w0, #0xff
  41f4f8:	and	x0, x0, #0xff
  41f4fc:	cmp	x0, #0x0
  41f500:	b.eq	41f52c <method_set_reboot_to_boot_loader_entry+0x74>  // b.none
  41f504:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f508:	add	x1, x0, #0xb5b
  41f50c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f510:	add	x4, x0, #0x1b0
  41f514:	mov	w3, #0xba6                 	// #2982
  41f518:	mov	x2, x1
  41f51c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f520:	add	x1, x0, #0xd78
  41f524:	mov	w0, #0x0                   	// #0
  41f528:	bl	407650 <log_assert_failed_realm@plt>
  41f52c:	ldr	x0, [sp, #96]
  41f530:	cmp	x0, #0x0
  41f534:	cset	w0, eq  // eq = none
  41f538:	and	w0, w0, #0xff
  41f53c:	and	x0, x0, #0xff
  41f540:	cmp	x0, #0x0
  41f544:	b.eq	41f570 <method_set_reboot_to_boot_loader_entry+0xb8>  // b.none
  41f548:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f54c:	add	x1, x0, #0xb5b
  41f550:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f554:	add	x4, x0, #0x1b0
  41f558:	mov	w3, #0xba7                 	// #2983
  41f55c:	mov	x2, x1
  41f560:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f564:	add	x1, x0, #0xb78
  41f568:	mov	w0, #0x0                   	// #0
  41f56c:	bl	407650 <log_assert_failed_realm@plt>
  41f570:	add	x0, sp, #0x50
  41f574:	mov	x2, x0
  41f578:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f57c:	add	x1, x0, #0xd08
  41f580:	ldr	x0, [sp, #40]
  41f584:	bl	407660 <sd_bus_message_read@plt>
  41f588:	str	w0, [sp, #52]
  41f58c:	ldr	w0, [sp, #52]
  41f590:	cmp	w0, #0x0
  41f594:	b.ge	41f5a0 <method_set_reboot_to_boot_loader_entry+0xe8>  // b.tcont
  41f598:	ldr	w0, [sp, #52]
  41f59c:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f5a0:	ldr	x0, [sp, #80]
  41f5a4:	bl	413e18 <isempty>
  41f5a8:	and	w0, w0, #0xff
  41f5ac:	cmp	w0, #0x0
  41f5b0:	b.eq	41f5bc <method_set_reboot_to_boot_loader_entry+0x104>  // b.none
  41f5b4:	str	xzr, [sp, #80]
  41f5b8:	b	41f644 <method_set_reboot_to_boot_loader_entry+0x18c>
  41f5bc:	ldr	x0, [sp, #80]
  41f5c0:	bl	407610 <efi_loader_entry_name_valid@plt>
  41f5c4:	and	w0, w0, #0xff
  41f5c8:	cmp	w0, #0x0
  41f5cc:	b.eq	41f620 <method_set_reboot_to_boot_loader_entry+0x168>  // b.none
  41f5d0:	ldr	x0, [sp, #80]
  41f5d4:	bl	41f3a4 <boot_loader_entry_exists>
  41f5d8:	str	w0, [sp, #52]
  41f5dc:	ldr	w0, [sp, #52]
  41f5e0:	cmp	w0, #0x0
  41f5e4:	b.ge	41f5f0 <method_set_reboot_to_boot_loader_entry+0x138>  // b.tcont
  41f5e8:	ldr	w0, [sp, #52]
  41f5ec:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f5f0:	ldr	w0, [sp, #52]
  41f5f4:	cmp	w0, #0x0
  41f5f8:	b.ne	41f644 <method_set_reboot_to_boot_loader_entry+0x18c>  // b.any
  41f5fc:	ldr	x0, [sp, #80]
  41f600:	mov	x3, x0
  41f604:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f608:	add	x2, x0, #0x768
  41f60c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f610:	add	x1, x0, #0xb8
  41f614:	ldr	x0, [sp, #24]
  41f618:	bl	407ae0 <sd_bus_error_setf@plt>
  41f61c:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f620:	ldr	x0, [sp, #80]
  41f624:	mov	x3, x0
  41f628:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f62c:	add	x2, x0, #0x790
  41f630:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f634:	add	x1, x0, #0xe48
  41f638:	ldr	x0, [sp, #24]
  41f63c:	bl	407ae0 <sd_bus_error_setf@plt>
  41f640:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f644:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f648:	add	x0, x0, #0x5b8
  41f64c:	bl	407930 <getenv_bool@plt>
  41f650:	str	w0, [sp, #52]
  41f654:	ldr	w0, [sp, #52]
  41f658:	cmn	w0, #0x6
  41f65c:	b.ne	41f738 <method_set_reboot_to_boot_loader_entry+0x280>  // b.any
  41f660:	add	x0, sp, #0x58
  41f664:	bl	407cf0 <efi_loader_get_features@plt>
  41f668:	str	w0, [sp, #52]
  41f66c:	ldr	w0, [sp, #52]
  41f670:	cmp	w0, #0x0
  41f674:	b.ge	41f6f0 <method_set_reboot_to_boot_loader_entry+0x238>  // b.tcont
  41f678:	mov	w0, #0x4                   	// #4
  41f67c:	str	w0, [sp, #68]
  41f680:	ldr	w0, [sp, #52]
  41f684:	str	w0, [sp, #72]
  41f688:	str	wzr, [sp, #76]
  41f68c:	ldr	w0, [sp, #76]
  41f690:	bl	4083e0 <log_get_max_level_realm@plt>
  41f694:	mov	w1, w0
  41f698:	ldr	w0, [sp, #68]
  41f69c:	and	w0, w0, #0x7
  41f6a0:	cmp	w1, w0
  41f6a4:	b.lt	41f6e8 <method_set_reboot_to_boot_loader_entry+0x230>  // b.tstop
  41f6a8:	ldr	w0, [sp, #76]
  41f6ac:	lsl	w1, w0, #10
  41f6b0:	ldr	w0, [sp, #68]
  41f6b4:	orr	w6, w1, w0
  41f6b8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f6bc:	add	x1, x0, #0xb5b
  41f6c0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f6c4:	add	x5, x0, #0x7c8
  41f6c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f6cc:	add	x4, x0, #0x1d8
  41f6d0:	mov	w3, #0xbc0                 	// #3008
  41f6d4:	mov	x2, x1
  41f6d8:	ldr	w1, [sp, #72]
  41f6dc:	mov	w0, w6
  41f6e0:	bl	407d60 <log_internal_realm@plt>
  41f6e4:	b	41f6f0 <method_set_reboot_to_boot_loader_entry+0x238>
  41f6e8:	ldr	w0, [sp, #72]
  41f6ec:	cmp	w0, #0x0
  41f6f0:	ldr	w0, [sp, #52]
  41f6f4:	cmp	w0, #0x0
  41f6f8:	b.lt	41f710 <method_set_reboot_to_boot_loader_entry+0x258>  // b.tstop
  41f6fc:	ldr	x0, [sp, #88]
  41f700:	mvn	x0, x0
  41f704:	and	x0, x0, #0x8
  41f708:	cmp	x0, #0x0
  41f70c:	b.eq	41f72c <method_set_reboot_to_boot_loader_entry+0x274>  // b.none
  41f710:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f714:	add	x2, x0, #0x818
  41f718:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f71c:	add	x1, x0, #0xb8
  41f720:	ldr	x0, [sp, #24]
  41f724:	bl	407ae0 <sd_bus_error_setf@plt>
  41f728:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f72c:	mov	w0, #0x1                   	// #1
  41f730:	strb	w0, [sp, #51]
  41f734:	b	41f7e8 <method_set_reboot_to_boot_loader_entry+0x330>
  41f738:	ldr	w0, [sp, #52]
  41f73c:	cmp	w0, #0x0
  41f740:	b.gt	41f7e4 <method_set_reboot_to_boot_loader_entry+0x32c>
  41f744:	ldr	w0, [sp, #52]
  41f748:	cmp	w0, #0x0
  41f74c:	b.ge	41f7c8 <method_set_reboot_to_boot_loader_entry+0x310>  // b.tcont
  41f750:	mov	w0, #0x4                   	// #4
  41f754:	str	w0, [sp, #56]
  41f758:	ldr	w0, [sp, #52]
  41f75c:	str	w0, [sp, #60]
  41f760:	str	wzr, [sp, #64]
  41f764:	ldr	w0, [sp, #64]
  41f768:	bl	4083e0 <log_get_max_level_realm@plt>
  41f76c:	mov	w1, w0
  41f770:	ldr	w0, [sp, #56]
  41f774:	and	w0, w0, #0x7
  41f778:	cmp	w1, w0
  41f77c:	b.lt	41f7c0 <method_set_reboot_to_boot_loader_entry+0x308>  // b.tstop
  41f780:	ldr	w0, [sp, #64]
  41f784:	lsl	w1, w0, #10
  41f788:	ldr	w0, [sp, #56]
  41f78c:	orr	w6, w1, w0
  41f790:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f794:	add	x1, x0, #0xb5b
  41f798:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f79c:	add	x5, x0, #0x668
  41f7a0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f7a4:	add	x4, x0, #0x1d8
  41f7a8:	mov	w3, #0xbca                 	// #3018
  41f7ac:	mov	x2, x1
  41f7b0:	ldr	w1, [sp, #60]
  41f7b4:	mov	w0, w6
  41f7b8:	bl	407d60 <log_internal_realm@plt>
  41f7bc:	b	41f7c8 <method_set_reboot_to_boot_loader_entry+0x310>
  41f7c0:	ldr	w0, [sp, #60]
  41f7c4:	cmp	w0, #0x0
  41f7c8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f7cc:	add	x2, x0, #0x818
  41f7d0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f7d4:	add	x1, x0, #0xb8
  41f7d8:	ldr	x0, [sp, #24]
  41f7dc:	bl	407ae0 <sd_bus_error_setf@plt>
  41f7e0:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f7e4:	strb	wzr, [sp, #51]
  41f7e8:	ldr	x0, [sp, #96]
  41f7ec:	add	x0, x0, #0x1b0
  41f7f0:	ldr	x7, [sp, #24]
  41f7f4:	mov	x6, x0
  41f7f8:	mov	w5, #0xffffffff            	// #-1
  41f7fc:	mov	w4, #0x0                   	// #0
  41f800:	mov	x3, #0x0                   	// #0
  41f804:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f808:	add	x2, x0, #0x850
  41f80c:	mov	w1, #0x15                  	// #21
  41f810:	ldr	x0, [sp, #40]
  41f814:	bl	408350 <bus_verify_polkit_async@plt>
  41f818:	str	w0, [sp, #52]
  41f81c:	ldr	w0, [sp, #52]
  41f820:	cmp	w0, #0x0
  41f824:	b.ge	41f830 <method_set_reboot_to_boot_loader_entry+0x378>  // b.tcont
  41f828:	ldr	w0, [sp, #52]
  41f82c:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f830:	ldr	w0, [sp, #52]
  41f834:	cmp	w0, #0x0
  41f838:	b.ne	41f844 <method_set_reboot_to_boot_loader_entry+0x38c>  // b.any
  41f83c:	mov	w0, #0x1                   	// #1
  41f840:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f844:	ldrb	w0, [sp, #51]
  41f848:	cmp	w0, #0x0
  41f84c:	b.eq	41f8c4 <method_set_reboot_to_boot_loader_entry+0x40c>  // b.none
  41f850:	ldr	x0, [sp, #80]
  41f854:	bl	413e18 <isempty>
  41f858:	and	w0, w0, #0xff
  41f85c:	cmp	w0, #0x0
  41f860:	b.eq	41f88c <method_set_reboot_to_boot_loader_entry+0x3d4>  // b.none
  41f864:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f868:	add	x0, x0, #0x200
  41f86c:	mov	x4, #0x0                   	// #0
  41f870:	mov	x3, #0x0                   	// #0
  41f874:	adrp	x1, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f878:	add	x2, x1, #0x5e0
  41f87c:	ldp	x0, x1, [x0]
  41f880:	bl	4072d0 <efi_set_variable@plt>
  41f884:	str	w0, [sp, #52]
  41f888:	b	41f8b0 <method_set_reboot_to_boot_loader_entry+0x3f8>
  41f88c:	ldr	x1, [sp, #80]
  41f890:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f894:	add	x0, x0, #0x210
  41f898:	mov	x3, x1
  41f89c:	adrp	x1, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f8a0:	add	x2, x1, #0x5e0
  41f8a4:	ldp	x0, x1, [x0]
  41f8a8:	bl	4083c0 <efi_set_variable_string@plt>
  41f8ac:	str	w0, [sp, #52]
  41f8b0:	ldr	w0, [sp, #52]
  41f8b4:	cmp	w0, #0x0
  41f8b8:	b.ge	41f938 <method_set_reboot_to_boot_loader_entry+0x480>  // b.tcont
  41f8bc:	ldr	w0, [sp, #52]
  41f8c0:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f8c4:	ldr	x0, [sp, #80]
  41f8c8:	bl	413e18 <isempty>
  41f8cc:	and	w0, w0, #0xff
  41f8d0:	cmp	w0, #0x0
  41f8d4:	b.eq	41f90c <method_set_reboot_to_boot_loader_entry+0x454>  // b.none
  41f8d8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f8dc:	add	x0, x0, #0x6a8
  41f8e0:	bl	4070c0 <unlink@plt>
  41f8e4:	cmp	w0, #0x0
  41f8e8:	b.ge	41f938 <method_set_reboot_to_boot_loader_entry+0x480>  // b.tcont
  41f8ec:	bl	407960 <__errno_location@plt>
  41f8f0:	ldr	w0, [x0]
  41f8f4:	cmp	w0, #0x2
  41f8f8:	b.eq	41f938 <method_set_reboot_to_boot_loader_entry+0x480>  // b.none
  41f8fc:	bl	407960 <__errno_location@plt>
  41f900:	ldr	w0, [x0]
  41f904:	neg	w0, w0
  41f908:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f90c:	ldr	x0, [sp, #80]
  41f910:	mov	x1, x0
  41f914:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41f918:	add	x0, x0, #0x888
  41f91c:	bl	4140e0 <write_string_file_atomic_label>
  41f920:	str	w0, [sp, #52]
  41f924:	ldr	w0, [sp, #52]
  41f928:	cmp	w0, #0x0
  41f92c:	b.ge	41f938 <method_set_reboot_to_boot_loader_entry+0x480>  // b.tcont
  41f930:	ldr	w0, [sp, #52]
  41f934:	b	41f944 <method_set_reboot_to_boot_loader_entry+0x48c>
  41f938:	mov	x1, #0x0                   	// #0
  41f93c:	ldr	x0, [sp, #40]
  41f940:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41f944:	mov	w1, w0
  41f948:	adrp	x0, 460000 <wordlist.10364+0x370>
  41f94c:	ldr	x0, [x0, #4024]
  41f950:	ldr	x2, [sp, #104]
  41f954:	ldr	x0, [x0]
  41f958:	eor	x0, x2, x0
  41f95c:	cmp	x0, #0x0
  41f960:	b.eq	41f968 <method_set_reboot_to_boot_loader_entry+0x4b0>  // b.none
  41f964:	bl	407b20 <__stack_chk_fail@plt>
  41f968:	mov	w0, w1
  41f96c:	ldp	x29, x30, [sp], #112
  41f970:	ret

000000000041f974 <method_can_reboot_to_boot_loader_entry>:
  41f974:	stp	x29, x30, [sp, #-112]!
  41f978:	mov	x29, sp
  41f97c:	str	x0, [sp, #40]
  41f980:	str	x1, [sp, #32]
  41f984:	str	x2, [sp, #24]
  41f988:	adrp	x0, 460000 <wordlist.10364+0x370>
  41f98c:	ldr	x0, [x0, #4024]
  41f990:	ldr	x1, [x0]
  41f994:	str	x1, [sp, #104]
  41f998:	mov	x1, #0x0                   	// #0
  41f99c:	ldr	x0, [sp, #32]
  41f9a0:	str	x0, [sp, #96]
  41f9a4:	ldr	x0, [sp, #40]
  41f9a8:	cmp	x0, #0x0
  41f9ac:	cset	w0, eq  // eq = none
  41f9b0:	and	w0, w0, #0xff
  41f9b4:	and	x0, x0, #0xff
  41f9b8:	cmp	x0, #0x0
  41f9bc:	b.eq	41f9e8 <method_can_reboot_to_boot_loader_entry+0x74>  // b.none
  41f9c0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f9c4:	add	x1, x0, #0xb5b
  41f9c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41f9cc:	add	x4, x0, #0x220
  41f9d0:	mov	w3, #0xbfc                 	// #3068
  41f9d4:	mov	x2, x1
  41f9d8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41f9dc:	add	x1, x0, #0xd78
  41f9e0:	mov	w0, #0x0                   	// #0
  41f9e4:	bl	407650 <log_assert_failed_realm@plt>
  41f9e8:	ldr	x0, [sp, #96]
  41f9ec:	cmp	x0, #0x0
  41f9f0:	cset	w0, eq  // eq = none
  41f9f4:	and	w0, w0, #0xff
  41f9f8:	and	x0, x0, #0xff
  41f9fc:	cmp	x0, #0x0
  41fa00:	b.eq	41fa2c <method_can_reboot_to_boot_loader_entry+0xb8>  // b.none
  41fa04:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fa08:	add	x1, x0, #0xb5b
  41fa0c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fa10:	add	x4, x0, #0x220
  41fa14:	mov	w3, #0xbfd                 	// #3069
  41fa18:	mov	x2, x1
  41fa1c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fa20:	add	x1, x0, #0xb78
  41fa24:	mov	w0, #0x0                   	// #0
  41fa28:	bl	407650 <log_assert_failed_realm@plt>
  41fa2c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fa30:	add	x0, x0, #0x5b8
  41fa34:	bl	407930 <getenv_bool@plt>
  41fa38:	str	w0, [sp, #60]
  41fa3c:	ldr	w0, [sp, #60]
  41fa40:	cmn	w0, #0x6
  41fa44:	b.ne	41fb18 <method_can_reboot_to_boot_loader_entry+0x1a4>  // b.any
  41fa48:	str	xzr, [sp, #88]
  41fa4c:	add	x0, sp, #0x58
  41fa50:	bl	407cf0 <efi_loader_get_features@plt>
  41fa54:	str	w0, [sp, #60]
  41fa58:	ldr	w0, [sp, #60]
  41fa5c:	cmp	w0, #0x0
  41fa60:	b.ge	41fadc <method_can_reboot_to_boot_loader_entry+0x168>  // b.tcont
  41fa64:	mov	w0, #0x4                   	// #4
  41fa68:	str	w0, [sp, #76]
  41fa6c:	ldr	w0, [sp, #60]
  41fa70:	str	w0, [sp, #80]
  41fa74:	str	wzr, [sp, #84]
  41fa78:	ldr	w0, [sp, #84]
  41fa7c:	bl	4083e0 <log_get_max_level_realm@plt>
  41fa80:	mov	w1, w0
  41fa84:	ldr	w0, [sp, #76]
  41fa88:	and	w0, w0, #0x7
  41fa8c:	cmp	w1, w0
  41fa90:	b.lt	41fad4 <method_can_reboot_to_boot_loader_entry+0x160>  // b.tstop
  41fa94:	ldr	w0, [sp, #84]
  41fa98:	lsl	w1, w0, #10
  41fa9c:	ldr	w0, [sp, #76]
  41faa0:	orr	w6, w1, w0
  41faa4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41faa8:	add	x1, x0, #0xb5b
  41faac:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fab0:	add	x5, x0, #0x8b8
  41fab4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fab8:	add	x4, x0, #0x248
  41fabc:	mov	w3, #0xc07                 	// #3079
  41fac0:	mov	x2, x1
  41fac4:	ldr	w1, [sp, #80]
  41fac8:	mov	w0, w6
  41facc:	bl	407d60 <log_internal_realm@plt>
  41fad0:	b	41fadc <method_can_reboot_to_boot_loader_entry+0x168>
  41fad4:	ldr	w0, [sp, #80]
  41fad8:	cmp	w0, #0x0
  41fadc:	ldr	w0, [sp, #60]
  41fae0:	cmp	w0, #0x0
  41fae4:	b.lt	41fafc <method_can_reboot_to_boot_loader_entry+0x188>  // b.tstop
  41fae8:	ldr	x0, [sp, #88]
  41faec:	mvn	x0, x0
  41faf0:	and	x0, x0, #0x8
  41faf4:	cmp	x0, #0x0
  41faf8:	b.eq	41fbc4 <method_can_reboot_to_boot_loader_entry+0x250>  // b.none
  41fafc:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fb00:	add	x2, x0, #0x50
  41fb04:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fb08:	add	x1, x0, #0xd08
  41fb0c:	ldr	x0, [sp, #40]
  41fb10:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41fb14:	b	41fbe4 <method_can_reboot_to_boot_loader_entry+0x270>
  41fb18:	ldr	w0, [sp, #60]
  41fb1c:	cmp	w0, #0x0
  41fb20:	b.gt	41fbc4 <method_can_reboot_to_boot_loader_entry+0x250>
  41fb24:	ldr	w0, [sp, #60]
  41fb28:	cmp	w0, #0x0
  41fb2c:	b.ge	41fba8 <method_can_reboot_to_boot_loader_entry+0x234>  // b.tcont
  41fb30:	mov	w0, #0x4                   	// #4
  41fb34:	str	w0, [sp, #64]
  41fb38:	ldr	w0, [sp, #60]
  41fb3c:	str	w0, [sp, #68]
  41fb40:	str	wzr, [sp, #72]
  41fb44:	ldr	w0, [sp, #72]
  41fb48:	bl	4083e0 <log_get_max_level_realm@plt>
  41fb4c:	mov	w1, w0
  41fb50:	ldr	w0, [sp, #64]
  41fb54:	and	w0, w0, #0x7
  41fb58:	cmp	w1, w0
  41fb5c:	b.lt	41fba0 <method_can_reboot_to_boot_loader_entry+0x22c>  // b.tstop
  41fb60:	ldr	w0, [sp, #72]
  41fb64:	lsl	w1, w0, #10
  41fb68:	ldr	w0, [sp, #64]
  41fb6c:	orr	w6, w1, w0
  41fb70:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fb74:	add	x1, x0, #0xb5b
  41fb78:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fb7c:	add	x5, x0, #0x668
  41fb80:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fb84:	add	x4, x0, #0x248
  41fb88:	mov	w3, #0xc0f                 	// #3087
  41fb8c:	mov	x2, x1
  41fb90:	ldr	w1, [sp, #68]
  41fb94:	mov	w0, w6
  41fb98:	bl	407d60 <log_internal_realm@plt>
  41fb9c:	b	41fba8 <method_can_reboot_to_boot_loader_entry+0x234>
  41fba0:	ldr	w0, [sp, #68]
  41fba4:	cmp	w0, #0x0
  41fba8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fbac:	add	x2, x0, #0x50
  41fbb0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fbb4:	add	x1, x0, #0xd08
  41fbb8:	ldr	x0, [sp, #40]
  41fbbc:	bl	4070e0 <sd_bus_reply_method_return@plt>
  41fbc0:	b	41fbe4 <method_can_reboot_to_boot_loader_entry+0x270>
  41fbc4:	ldr	x5, [sp, #24]
  41fbc8:	mov	w4, #0xffffffff            	// #-1
  41fbcc:	mov	x3, #0x0                   	// #0
  41fbd0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fbd4:	add	x2, x0, #0x850
  41fbd8:	mov	w1, #0x15                  	// #21
  41fbdc:	ldr	x0, [sp, #40]
  41fbe0:	bl	414a1c <return_test_polkit>
  41fbe4:	mov	w1, w0
  41fbe8:	adrp	x0, 460000 <wordlist.10364+0x370>
  41fbec:	ldr	x0, [x0, #4024]
  41fbf0:	ldr	x2, [sp, #104]
  41fbf4:	ldr	x0, [x0]
  41fbf8:	eor	x0, x2, x0
  41fbfc:	cmp	x0, #0x0
  41fc00:	b.eq	41fc08 <method_can_reboot_to_boot_loader_entry+0x294>  // b.none
  41fc04:	bl	407b20 <__stack_chk_fail@plt>
  41fc08:	mov	w0, w1
  41fc0c:	ldp	x29, x30, [sp], #112
  41fc10:	ret

000000000041fc14 <property_get_boot_loader_entries>:
  41fc14:	stp	x29, x30, [sp, #-224]!
  41fc18:	mov	x29, sp
  41fc1c:	str	x19, [sp, #16]
  41fc20:	str	x0, [sp, #88]
  41fc24:	str	x1, [sp, #80]
  41fc28:	str	x2, [sp, #72]
  41fc2c:	str	x3, [sp, #64]
  41fc30:	str	x4, [sp, #56]
  41fc34:	str	x5, [sp, #48]
  41fc38:	str	x6, [sp, #40]
  41fc3c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41fc40:	ldr	x0, [x0, #4024]
  41fc44:	ldr	x1, [x0]
  41fc48:	str	x1, [sp, #216]
  41fc4c:	mov	x1, #0x0                   	// #0
  41fc50:	stp	xzr, xzr, [sp, #128]
  41fc54:	stp	xzr, xzr, [sp, #144]
  41fc58:	stp	xzr, xzr, [sp, #160]
  41fc5c:	stp	xzr, xzr, [sp, #176]
  41fc60:	stp	xzr, xzr, [sp, #192]
  41fc64:	str	xzr, [sp, #208]
  41fc68:	ldr	x0, [sp, #88]
  41fc6c:	cmp	x0, #0x0
  41fc70:	cset	w0, eq  // eq = none
  41fc74:	and	w0, w0, #0xff
  41fc78:	and	x0, x0, #0xff
  41fc7c:	cmp	x0, #0x0
  41fc80:	b.eq	41fcac <property_get_boot_loader_entries+0x98>  // b.none
  41fc84:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fc88:	add	x1, x0, #0xb5b
  41fc8c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fc90:	add	x4, x0, #0x270
  41fc94:	mov	w3, #0xc2a                 	// #3114
  41fc98:	mov	x2, x1
  41fc9c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fca0:	add	x1, x0, #0xd10
  41fca4:	mov	w0, #0x0                   	// #0
  41fca8:	bl	407650 <log_assert_failed_realm@plt>
  41fcac:	ldr	x0, [sp, #56]
  41fcb0:	cmp	x0, #0x0
  41fcb4:	cset	w0, eq  // eq = none
  41fcb8:	and	w0, w0, #0xff
  41fcbc:	and	x0, x0, #0xff
  41fcc0:	cmp	x0, #0x0
  41fcc4:	b.eq	41fcf0 <property_get_boot_loader_entries+0xdc>  // b.none
  41fcc8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fccc:	add	x1, x0, #0xb5b
  41fcd0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fcd4:	add	x4, x0, #0x270
  41fcd8:	mov	w3, #0xc2b                 	// #3115
  41fcdc:	mov	x2, x1
  41fce0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fce4:	add	x1, x0, #0xd18
  41fce8:	mov	w0, #0x0                   	// #0
  41fcec:	bl	407650 <log_assert_failed_realm@plt>
  41fcf0:	ldr	x0, [sp, #48]
  41fcf4:	cmp	x0, #0x0
  41fcf8:	cset	w0, eq  // eq = none
  41fcfc:	and	w0, w0, #0xff
  41fd00:	and	x0, x0, #0xff
  41fd04:	cmp	x0, #0x0
  41fd08:	b.eq	41fd34 <property_get_boot_loader_entries+0x120>  // b.none
  41fd0c:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fd10:	add	x1, x0, #0xb5b
  41fd14:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fd18:	add	x4, x0, #0x270
  41fd1c:	mov	w3, #0xc2c                 	// #3116
  41fd20:	mov	x2, x1
  41fd24:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41fd28:	add	x1, x0, #0x70
  41fd2c:	mov	w0, #0x0                   	// #0
  41fd30:	bl	407650 <log_assert_failed_realm@plt>
  41fd34:	add	x0, sp, #0x80
  41fd38:	mov	x2, x0
  41fd3c:	mov	x1, #0x0                   	// #0
  41fd40:	mov	x0, #0x0                   	// #0
  41fd44:	bl	407bc0 <boot_entries_load_config_auto@plt>
  41fd48:	str	w0, [sp, #108]
  41fd4c:	ldr	w0, [sp, #108]
  41fd50:	cmp	w0, #0x0
  41fd54:	b.ge	41fd6c <property_get_boot_loader_entries+0x158>  // b.tcont
  41fd58:	ldr	w0, [sp, #108]
  41fd5c:	cmn	w0, #0x7e
  41fd60:	b.eq	41fd6c <property_get_boot_loader_entries+0x158>  // b.none
  41fd64:	ldr	w19, [sp, #108]
  41fd68:	b	41fe28 <property_get_boot_loader_entries+0x214>
  41fd6c:	add	x0, sp, #0x80
  41fd70:	mov	w1, #0x1                   	// #1
  41fd74:	bl	407230 <boot_entries_augment_from_loader@plt>
  41fd78:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fd7c:	add	x2, x0, #0xd08
  41fd80:	mov	w1, #0x61                  	// #97
  41fd84:	ldr	x0, [sp, #56]
  41fd88:	bl	407490 <sd_bus_message_open_container@plt>
  41fd8c:	str	w0, [sp, #108]
  41fd90:	ldr	w0, [sp, #108]
  41fd94:	cmp	w0, #0x0
  41fd98:	b.ge	41fda4 <property_get_boot_loader_entries+0x190>  // b.tcont
  41fd9c:	ldr	w19, [sp, #108]
  41fda0:	b	41fe28 <property_get_boot_loader_entries+0x214>
  41fda4:	str	xzr, [sp, #112]
  41fda8:	b	41fe0c <property_get_boot_loader_entries+0x1f8>
  41fdac:	ldr	x2, [sp, #192]
  41fdb0:	ldr	x1, [sp, #112]
  41fdb4:	mov	x0, x1
  41fdb8:	lsl	x0, x0, #3
  41fdbc:	sub	x0, x0, x1
  41fdc0:	lsl	x0, x0, #4
  41fdc4:	add	x0, x2, x0
  41fdc8:	str	x0, [sp, #120]
  41fdcc:	ldr	x0, [sp, #120]
  41fdd0:	ldr	x0, [x0, #8]
  41fdd4:	mov	x2, x0
  41fdd8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fddc:	add	x1, x0, #0xd08
  41fde0:	ldr	x0, [sp, #56]
  41fde4:	bl	407590 <sd_bus_message_append@plt>
  41fde8:	str	w0, [sp, #108]
  41fdec:	ldr	w0, [sp, #108]
  41fdf0:	cmp	w0, #0x0
  41fdf4:	b.ge	41fe00 <property_get_boot_loader_entries+0x1ec>  // b.tcont
  41fdf8:	ldr	w19, [sp, #108]
  41fdfc:	b	41fe28 <property_get_boot_loader_entries+0x214>
  41fe00:	ldr	x0, [sp, #112]
  41fe04:	add	x0, x0, #0x1
  41fe08:	str	x0, [sp, #112]
  41fe0c:	ldr	x0, [sp, #200]
  41fe10:	ldr	x1, [sp, #112]
  41fe14:	cmp	x1, x0
  41fe18:	b.cc	41fdac <property_get_boot_loader_entries+0x198>  // b.lo, b.ul, b.last
  41fe1c:	ldr	x0, [sp, #56]
  41fe20:	bl	408420 <sd_bus_message_close_container@plt>
  41fe24:	mov	w19, w0
  41fe28:	add	x0, sp, #0x80
  41fe2c:	bl	408040 <boot_config_free@plt>
  41fe30:	mov	w1, w19
  41fe34:	adrp	x0, 460000 <wordlist.10364+0x370>
  41fe38:	ldr	x0, [x0, #4024]
  41fe3c:	ldr	x2, [sp, #216]
  41fe40:	ldr	x0, [x0]
  41fe44:	eor	x0, x2, x0
  41fe48:	cmp	x0, #0x0
  41fe4c:	b.eq	41fe54 <property_get_boot_loader_entries+0x240>  // b.none
  41fe50:	bl	407b20 <__stack_chk_fail@plt>
  41fe54:	mov	w0, w1
  41fe58:	ldr	x19, [sp, #16]
  41fe5c:	ldp	x29, x30, [sp], #224
  41fe60:	ret

000000000041fe64 <method_set_wall_message>:
  41fe64:	stp	x29, x30, [sp, #-96]!
  41fe68:	mov	x29, sp
  41fe6c:	str	x19, [sp, #16]
  41fe70:	str	x0, [sp, #56]
  41fe74:	str	x1, [sp, #48]
  41fe78:	str	x2, [sp, #40]
  41fe7c:	adrp	x0, 460000 <wordlist.10364+0x370>
  41fe80:	ldr	x0, [x0, #4024]
  41fe84:	ldr	x1, [x0]
  41fe88:	str	x1, [sp, #88]
  41fe8c:	mov	x1, #0x0                   	// #0
  41fe90:	ldr	x0, [sp, #48]
  41fe94:	str	x0, [sp, #80]
  41fe98:	ldr	x0, [sp, #56]
  41fe9c:	cmp	x0, #0x0
  41fea0:	cset	w0, eq  // eq = none
  41fea4:	and	w0, w0, #0xff
  41fea8:	and	x0, x0, #0xff
  41feac:	cmp	x0, #0x0
  41feb0:	b.eq	41fedc <method_set_wall_message+0x78>  // b.none
  41feb4:	adrp	x0, 43e000 <__func__.12250+0x440>
  41feb8:	add	x1, x0, #0xb5b
  41febc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41fec0:	add	x4, x0, #0x298
  41fec4:	mov	w3, #0xc4d                 	// #3149
  41fec8:	mov	x2, x1
  41fecc:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fed0:	add	x1, x0, #0xd78
  41fed4:	mov	w0, #0x0                   	// #0
  41fed8:	bl	407650 <log_assert_failed_realm@plt>
  41fedc:	ldr	x0, [sp, #80]
  41fee0:	cmp	x0, #0x0
  41fee4:	cset	w0, eq  // eq = none
  41fee8:	and	w0, w0, #0xff
  41feec:	and	x0, x0, #0xff
  41fef0:	cmp	x0, #0x0
  41fef4:	b.eq	41ff20 <method_set_wall_message+0xbc>  // b.none
  41fef8:	adrp	x0, 43e000 <__func__.12250+0x440>
  41fefc:	add	x1, x0, #0xb5b
  41ff00:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ff04:	add	x4, x0, #0x298
  41ff08:	mov	w3, #0xc4e                 	// #3150
  41ff0c:	mov	x2, x1
  41ff10:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ff14:	add	x1, x0, #0xb78
  41ff18:	mov	w0, #0x0                   	// #0
  41ff1c:	bl	407650 <log_assert_failed_realm@plt>
  41ff20:	add	x1, sp, #0x40
  41ff24:	add	x0, sp, #0x48
  41ff28:	mov	x3, x1
  41ff2c:	mov	x2, x0
  41ff30:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ff34:	add	x1, x0, #0x908
  41ff38:	ldr	x0, [sp, #56]
  41ff3c:	bl	407660 <sd_bus_message_read@plt>
  41ff40:	str	w0, [sp, #68]
  41ff44:	ldr	w0, [sp, #68]
  41ff48:	cmp	w0, #0x0
  41ff4c:	b.ge	41ff58 <method_set_wall_message+0xf4>  // b.tcont
  41ff50:	ldr	w0, [sp, #68]
  41ff54:	b	420018 <method_set_wall_message+0x1b4>
  41ff58:	ldr	x0, [sp, #80]
  41ff5c:	add	x0, x0, #0x1b0
  41ff60:	ldr	x7, [sp, #40]
  41ff64:	mov	x6, x0
  41ff68:	mov	w5, #0xffffffff            	// #-1
  41ff6c:	mov	w4, #0x0                   	// #0
  41ff70:	mov	x3, #0x0                   	// #0
  41ff74:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  41ff78:	add	x2, x0, #0x910
  41ff7c:	mov	w1, #0x15                  	// #21
  41ff80:	ldr	x0, [sp, #56]
  41ff84:	bl	408350 <bus_verify_polkit_async@plt>
  41ff88:	str	w0, [sp, #68]
  41ff8c:	ldr	w0, [sp, #68]
  41ff90:	cmp	w0, #0x0
  41ff94:	b.ge	41ffa0 <method_set_wall_message+0x13c>  // b.tcont
  41ff98:	ldr	w0, [sp, #68]
  41ff9c:	b	420018 <method_set_wall_message+0x1b4>
  41ffa0:	ldr	w0, [sp, #68]
  41ffa4:	cmp	w0, #0x0
  41ffa8:	b.ne	41ffb4 <method_set_wall_message+0x150>  // b.any
  41ffac:	mov	w0, #0x1                   	// #1
  41ffb0:	b	420018 <method_set_wall_message+0x1b4>
  41ffb4:	ldr	x0, [sp, #80]
  41ffb8:	add	x19, x0, #0x150
  41ffbc:	ldr	x0, [sp, #72]
  41ffc0:	bl	413e58 <empty_to_null>
  41ffc4:	mov	x1, x0
  41ffc8:	mov	x0, x19
  41ffcc:	bl	407400 <free_and_strdup@plt>
  41ffd0:	str	w0, [sp, #68]
  41ffd4:	ldr	w0, [sp, #68]
  41ffd8:	cmp	w0, #0x0
  41ffdc:	b.ge	420000 <method_set_wall_message+0x19c>  // b.tcont
  41ffe0:	adrp	x0, 43e000 <__func__.12250+0x440>
  41ffe4:	add	x1, x0, #0xb5b
  41ffe8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  41ffec:	add	x3, x0, #0x2b0
  41fff0:	mov	w2, #0xc63                 	// #3171
  41fff4:	mov	w0, #0x0                   	// #0
  41fff8:	bl	408330 <log_oom_internal@plt>
  41fffc:	b	420018 <method_set_wall_message+0x1b4>
  420000:	ldr	w1, [sp, #64]
  420004:	ldr	x0, [sp, #80]
  420008:	str	w1, [x0, #344]
  42000c:	mov	x1, #0x0                   	// #0
  420010:	ldr	x0, [sp, #56]
  420014:	bl	4070e0 <sd_bus_reply_method_return@plt>
  420018:	mov	w1, w0
  42001c:	adrp	x0, 460000 <wordlist.10364+0x370>
  420020:	ldr	x0, [x0, #4024]
  420024:	ldr	x2, [sp, #88]
  420028:	ldr	x0, [x0]
  42002c:	eor	x0, x2, x0
  420030:	cmp	x0, #0x0
  420034:	b.eq	42003c <method_set_wall_message+0x1d8>  // b.none
  420038:	bl	407b20 <__stack_chk_fail@plt>
  42003c:	mov	w0, w1
  420040:	ldr	x19, [sp, #16]
  420044:	ldp	x29, x30, [sp], #96
  420048:	ret

000000000042004c <method_inhibit>:
  42004c:	stp	x29, x30, [sp, #-160]!
  420050:	mov	x29, sp
  420054:	str	x19, [sp, #16]
  420058:	str	x0, [sp, #56]
  42005c:	str	x1, [sp, #48]
  420060:	str	x2, [sp, #40]
  420064:	adrp	x0, 460000 <wordlist.10364+0x370>
  420068:	ldr	x0, [x0, #4024]
  42006c:	ldr	x1, [x0]
  420070:	str	x1, [sp, #152]
  420074:	mov	x1, #0x0                   	// #0
  420078:	str	xzr, [sp, #88]
  42007c:	str	xzr, [sp, #128]
  420080:	mov	w0, #0xffffffff            	// #-1
  420084:	str	w0, [sp, #64]
  420088:	ldr	x0, [sp, #48]
  42008c:	str	x0, [sp, #144]
  420090:	str	xzr, [sp, #136]
  420094:	ldr	x0, [sp, #56]
  420098:	cmp	x0, #0x0
  42009c:	cset	w0, eq  // eq = none
  4200a0:	and	w0, w0, #0xff
  4200a4:	and	x0, x0, #0xff
  4200a8:	cmp	x0, #0x0
  4200ac:	b.eq	4200d8 <method_inhibit+0x8c>  // b.none
  4200b0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4200b4:	add	x1, x0, #0xb5b
  4200b8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4200bc:	add	x4, x0, #0x2c8
  4200c0:	mov	w3, #0xc77                 	// #3191
  4200c4:	mov	x2, x1
  4200c8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4200cc:	add	x1, x0, #0xd78
  4200d0:	mov	w0, #0x0                   	// #0
  4200d4:	bl	407650 <log_assert_failed_realm@plt>
  4200d8:	ldr	x0, [sp, #144]
  4200dc:	cmp	x0, #0x0
  4200e0:	cset	w0, eq  // eq = none
  4200e4:	and	w0, w0, #0xff
  4200e8:	and	x0, x0, #0xff
  4200ec:	cmp	x0, #0x0
  4200f0:	b.eq	42011c <method_inhibit+0xd0>  // b.none
  4200f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4200f8:	add	x1, x0, #0xb5b
  4200fc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420100:	add	x4, x0, #0x2c8
  420104:	mov	w3, #0xc78                 	// #3192
  420108:	mov	x2, x1
  42010c:	adrp	x0, 43e000 <__func__.12250+0x440>
  420110:	add	x1, x0, #0xb78
  420114:	mov	w0, #0x0                   	// #0
  420118:	bl	407650 <log_assert_failed_realm@plt>
  42011c:	add	x3, sp, #0x78
  420120:	add	x2, sp, #0x68
  420124:	add	x1, sp, #0x60
  420128:	add	x0, sp, #0x70
  42012c:	mov	x5, x3
  420130:	mov	x4, x2
  420134:	mov	x3, x1
  420138:	mov	x2, x0
  42013c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420140:	add	x1, x0, #0x938
  420144:	ldr	x0, [sp, #56]
  420148:	bl	407660 <sd_bus_message_read@plt>
  42014c:	str	w0, [sp, #76]
  420150:	ldr	w0, [sp, #76]
  420154:	cmp	w0, #0x0
  420158:	b.ge	420164 <method_inhibit+0x118>  // b.tcont
  42015c:	ldr	w19, [sp, #76]
  420160:	b	4205c4 <method_inhibit+0x578>
  420164:	ldr	x0, [sp, #112]
  420168:	bl	424bf4 <inhibit_what_from_string>
  42016c:	str	w0, [sp, #80]
  420170:	ldr	w0, [sp, #80]
  420174:	cmp	w0, #0x0
  420178:	b.gt	4201a4 <method_inhibit+0x158>
  42017c:	ldr	x0, [sp, #112]
  420180:	mov	x3, x0
  420184:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420188:	add	x2, x0, #0x940
  42018c:	adrp	x0, 43e000 <__func__.12250+0x440>
  420190:	add	x1, x0, #0xe48
  420194:	ldr	x0, [sp, #40]
  420198:	bl	407ae0 <sd_bus_error_setf@plt>
  42019c:	mov	w19, w0
  4201a0:	b	4205c4 <method_inhibit+0x578>
  4201a4:	ldr	x0, [sp, #120]
  4201a8:	bl	424e90 <inhibit_mode_from_string>
  4201ac:	str	w0, [sp, #84]
  4201b0:	ldr	w0, [sp, #84]
  4201b4:	cmp	w0, #0x0
  4201b8:	b.ge	4201e4 <method_inhibit+0x198>  // b.tcont
  4201bc:	ldr	x0, [sp, #120]
  4201c0:	mov	x3, x0
  4201c4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4201c8:	add	x2, x0, #0x960
  4201cc:	adrp	x0, 43e000 <__func__.12250+0x440>
  4201d0:	add	x1, x0, #0xe48
  4201d4:	ldr	x0, [sp, #40]
  4201d8:	bl	407ae0 <sd_bus_error_setf@plt>
  4201dc:	mov	w19, w0
  4201e0:	b	4205c4 <method_inhibit+0x578>
  4201e4:	ldr	w0, [sp, #84]
  4201e8:	cmp	w0, #0x1
  4201ec:	b.ne	420220 <method_inhibit+0x1d4>  // b.any
  4201f0:	ldr	w0, [sp, #80]
  4201f4:	and	w0, w0, #0xfffffffc
  4201f8:	cmp	w0, #0x0
  4201fc:	b.eq	420220 <method_inhibit+0x1d4>  // b.none
  420200:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420204:	add	x2, x0, #0x980
  420208:	adrp	x0, 43e000 <__func__.12250+0x440>
  42020c:	add	x1, x0, #0xe48
  420210:	ldr	x0, [sp, #40]
  420214:	bl	407ae0 <sd_bus_error_setf@plt>
  420218:	mov	w19, w0
  42021c:	b	4205c4 <method_inhibit+0x578>
  420220:	ldr	x0, [sp, #144]
  420224:	ldr	w1, [x0, #248]
  420228:	ldr	w0, [sp, #80]
  42022c:	and	w0, w1, w0
  420230:	cmp	w0, #0x0
  420234:	b.eq	420258 <method_inhibit+0x20c>  // b.none
  420238:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  42023c:	add	x2, x0, #0x9b8
  420240:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  420244:	add	x1, x0, #0x978
  420248:	ldr	x0, [sp, #40]
  42024c:	bl	407ae0 <sd_bus_error_setf@plt>
  420250:	mov	w19, w0
  420254:	b	4205c4 <method_inhibit+0x578>
  420258:	ldr	w0, [sp, #80]
  42025c:	cmp	w0, #0x1
  420260:	b.ne	420288 <method_inhibit+0x23c>  // b.any
  420264:	ldr	w0, [sp, #84]
  420268:	cmp	w0, #0x0
  42026c:	b.ne	42027c <method_inhibit+0x230>  // b.any
  420270:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420274:	add	x0, x0, #0xa00
  420278:	b	420320 <method_inhibit+0x2d4>
  42027c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420280:	add	x0, x0, #0xa30
  420284:	b	420320 <method_inhibit+0x2d4>
  420288:	ldr	w0, [sp, #80]
  42028c:	cmp	w0, #0x2
  420290:	b.ne	4202b8 <method_inhibit+0x26c>  // b.any
  420294:	ldr	w0, [sp, #84]
  420298:	cmp	w0, #0x0
  42029c:	b.ne	4202ac <method_inhibit+0x260>  // b.any
  4202a0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4202a4:	add	x0, x0, #0xa60
  4202a8:	b	420320 <method_inhibit+0x2d4>
  4202ac:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4202b0:	add	x0, x0, #0xa90
  4202b4:	b	420320 <method_inhibit+0x2d4>
  4202b8:	ldr	w0, [sp, #80]
  4202bc:	cmp	w0, #0x4
  4202c0:	b.eq	420318 <method_inhibit+0x2cc>  // b.none
  4202c4:	ldr	w0, [sp, #80]
  4202c8:	cmp	w0, #0x8
  4202cc:	b.eq	42030c <method_inhibit+0x2c0>  // b.none
  4202d0:	ldr	w0, [sp, #80]
  4202d4:	cmp	w0, #0x10
  4202d8:	b.eq	420300 <method_inhibit+0x2b4>  // b.none
  4202dc:	ldr	w0, [sp, #80]
  4202e0:	cmp	w0, #0x20
  4202e4:	b.ne	4202f4 <method_inhibit+0x2a8>  // b.any
  4202e8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4202ec:	add	x0, x0, #0xac0
  4202f0:	b	420320 <method_inhibit+0x2d4>
  4202f4:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4202f8:	add	x0, x0, #0xaf8
  4202fc:	b	420320 <method_inhibit+0x2d4>
  420300:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420304:	add	x0, x0, #0xb30
  420308:	b	420320 <method_inhibit+0x2d4>
  42030c:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420310:	add	x0, x0, #0xb68
  420314:	b	420320 <method_inhibit+0x2d4>
  420318:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  42031c:	add	x0, x0, #0xb98
  420320:	ldr	x1, [sp, #144]
  420324:	add	x1, x1, #0x1b0
  420328:	ldr	x7, [sp, #40]
  42032c:	mov	x6, x1
  420330:	mov	w5, #0xffffffff            	// #-1
  420334:	mov	w4, #0x0                   	// #0
  420338:	mov	x3, #0x0                   	// #0
  42033c:	mov	x2, x0
  420340:	mov	w1, #0x16                  	// #22
  420344:	ldr	x0, [sp, #56]
  420348:	bl	408350 <bus_verify_polkit_async@plt>
  42034c:	str	w0, [sp, #76]
  420350:	ldr	w0, [sp, #76]
  420354:	cmp	w0, #0x0
  420358:	b.ge	420364 <method_inhibit+0x318>  // b.tcont
  42035c:	ldr	w19, [sp, #76]
  420360:	b	4205c4 <method_inhibit+0x578>
  420364:	ldr	w0, [sp, #76]
  420368:	cmp	w0, #0x0
  42036c:	b.ne	420378 <method_inhibit+0x32c>  // b.any
  420370:	mov	w19, #0x1                   	// #1
  420374:	b	4205c4 <method_inhibit+0x578>
  420378:	add	x0, sp, #0x58
  42037c:	mov	x2, x0
  420380:	mov	x1, #0x11                  	// #17
  420384:	ldr	x0, [sp, #56]
  420388:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  42038c:	str	w0, [sp, #76]
  420390:	ldr	w0, [sp, #76]
  420394:	cmp	w0, #0x0
  420398:	b.ge	4203a4 <method_inhibit+0x358>  // b.tcont
  42039c:	ldr	w19, [sp, #76]
  4203a0:	b	4205c4 <method_inhibit+0x578>
  4203a4:	ldr	x0, [sp, #88]
  4203a8:	add	x1, sp, #0x48
  4203ac:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  4203b0:	str	w0, [sp, #76]
  4203b4:	ldr	w0, [sp, #76]
  4203b8:	cmp	w0, #0x0
  4203bc:	b.ge	4203c8 <method_inhibit+0x37c>  // b.tcont
  4203c0:	ldr	w19, [sp, #76]
  4203c4:	b	4205c4 <method_inhibit+0x578>
  4203c8:	ldr	x0, [sp, #88]
  4203cc:	add	x1, sp, #0x44
  4203d0:	bl	406fb0 <sd_bus_creds_get_pid@plt>
  4203d4:	str	w0, [sp, #76]
  4203d8:	ldr	w0, [sp, #76]
  4203dc:	cmp	w0, #0x0
  4203e0:	b.ge	4203ec <method_inhibit+0x3a0>  // b.tcont
  4203e4:	ldr	w19, [sp, #76]
  4203e8:	b	4205c4 <method_inhibit+0x578>
  4203ec:	ldr	x0, [sp, #144]
  4203f0:	ldr	x0, [x0, #56]
  4203f4:	bl	414010 <hashmap_size>
  4203f8:	mov	w1, w0
  4203fc:	ldr	x0, [sp, #144]
  420400:	ldr	x0, [x0, #472]
  420404:	cmp	x1, x0
  420408:	b.cc	420438 <method_inhibit+0x3ec>  // b.lo, b.ul, b.last
  42040c:	ldr	x0, [sp, #144]
  420410:	ldr	x0, [x0, #472]
  420414:	mov	x3, x0
  420418:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  42041c:	add	x2, x0, #0xbc8
  420420:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  420424:	add	x1, x0, #0xe0
  420428:	ldr	x0, [sp, #40]
  42042c:	bl	407ae0 <sd_bus_error_setf@plt>
  420430:	mov	w19, w0
  420434:	b	4205c4 <method_inhibit+0x578>
  420438:	ldr	x0, [sp, #128]
  42043c:	bl	413ca4 <mfree>
  420440:	str	x0, [sp, #128]
  420444:	ldr	x0, [sp, #144]
  420448:	ldr	x0, [x0, #208]
  42044c:	add	x1, x0, #0x1
  420450:	ldr	x0, [sp, #144]
  420454:	str	x1, [x0, #208]
  420458:	ldr	x0, [sp, #144]
  42045c:	ldr	x0, [x0, #208]
  420460:	add	x3, sp, #0x80
  420464:	mov	x2, x0
  420468:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  42046c:	add	x1, x0, #0x560
  420470:	mov	x0, x3
  420474:	bl	408060 <asprintf@plt>
  420478:	cmp	w0, #0x0
  42047c:	b.ge	420488 <method_inhibit+0x43c>  // b.tcont
  420480:	mov	w19, #0xfffffff4            	// #-12
  420484:	b	4205c4 <method_inhibit+0x578>
  420488:	ldr	x0, [sp, #144]
  42048c:	ldr	x0, [x0, #56]
  420490:	ldr	x1, [sp, #128]
  420494:	bl	413fc4 <hashmap_get>
  420498:	cmp	x0, #0x0
  42049c:	b.ne	420438 <method_inhibit+0x3ec>  // b.any
  4204a0:	ldr	x0, [sp, #128]
  4204a4:	add	x1, sp, #0x88
  4204a8:	mov	x2, x1
  4204ac:	mov	x1, x0
  4204b0:	ldr	x0, [sp, #144]
  4204b4:	bl	41184c <manager_add_inhibitor>
  4204b8:	str	w0, [sp, #76]
  4204bc:	ldr	w0, [sp, #76]
  4204c0:	cmp	w0, #0x0
  4204c4:	b.ge	4204d0 <method_inhibit+0x484>  // b.tcont
  4204c8:	ldr	w19, [sp, #76]
  4204cc:	b	4205c4 <method_inhibit+0x578>
  4204d0:	ldr	x0, [sp, #136]
  4204d4:	ldr	w1, [sp, #80]
  4204d8:	str	w1, [x0, #36]
  4204dc:	ldr	x0, [sp, #136]
  4204e0:	ldr	w1, [sp, #84]
  4204e4:	str	w1, [x0, #56]
  4204e8:	ldr	x0, [sp, #136]
  4204ec:	ldr	w1, [sp, #68]
  4204f0:	str	w1, [x0, #60]
  4204f4:	ldr	x0, [sp, #136]
  4204f8:	ldr	w1, [sp, #72]
  4204fc:	str	w1, [x0, #64]
  420500:	ldr	x0, [sp, #104]
  420504:	ldr	x19, [sp, #136]
  420508:	bl	407f90 <strdup@plt>
  42050c:	str	x0, [x19, #48]
  420510:	ldr	x0, [sp, #96]
  420514:	ldr	x19, [sp, #136]
  420518:	bl	407f90 <strdup@plt>
  42051c:	str	x0, [x19, #40]
  420520:	ldr	x0, [sp, #136]
  420524:	ldr	x0, [x0, #48]
  420528:	cmp	x0, #0x0
  42052c:	b.eq	420540 <method_inhibit+0x4f4>  // b.none
  420530:	ldr	x0, [sp, #136]
  420534:	ldr	x0, [x0, #40]
  420538:	cmp	x0, #0x0
  42053c:	b.ne	42054c <method_inhibit+0x500>  // b.any
  420540:	mov	w0, #0xfffffff4            	// #-12
  420544:	str	w0, [sp, #76]
  420548:	b	4205ac <method_inhibit+0x560>
  42054c:	ldr	x0, [sp, #136]
  420550:	bl	4241c0 <inhibitor_create_fifo>
  420554:	str	w0, [sp, #64]
  420558:	ldr	w0, [sp, #64]
  42055c:	cmp	w0, #0x0
  420560:	b.ge	420570 <method_inhibit+0x524>  // b.tcont
  420564:	ldr	w0, [sp, #64]
  420568:	str	w0, [sp, #76]
  42056c:	b	4205ac <method_inhibit+0x560>
  420570:	ldr	x0, [sp, #136]
  420574:	bl	423834 <inhibitor_start>
  420578:	str	w0, [sp, #76]
  42057c:	ldr	w0, [sp, #76]
  420580:	cmp	w0, #0x0
  420584:	b.lt	4205a8 <method_inhibit+0x55c>  // b.tstop
  420588:	ldr	w0, [sp, #64]
  42058c:	mov	w2, w0
  420590:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  420594:	add	x1, x0, #0xc18
  420598:	ldr	x0, [sp, #56]
  42059c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  4205a0:	mov	w19, w0
  4205a4:	b	4205c4 <method_inhibit+0x578>
  4205a8:	nop
  4205ac:	ldr	x0, [sp, #136]
  4205b0:	cmp	x0, #0x0
  4205b4:	b.eq	4205c0 <method_inhibit+0x574>  // b.none
  4205b8:	ldr	x0, [sp, #136]
  4205bc:	bl	423370 <inhibitor_free>
  4205c0:	ldr	w19, [sp, #76]
  4205c4:	add	x0, sp, #0x40
  4205c8:	bl	414064 <closep>
  4205cc:	add	x0, sp, #0x80
  4205d0:	bl	413cc4 <freep>
  4205d4:	add	x0, sp, #0x58
  4205d8:	bl	413f90 <sd_bus_creds_unrefp>
  4205dc:	mov	w1, w19
  4205e0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4205e4:	ldr	x0, [x0, #4024]
  4205e8:	ldr	x2, [sp, #152]
  4205ec:	ldr	x0, [x0]
  4205f0:	eor	x0, x2, x0
  4205f4:	cmp	x0, #0x0
  4205f8:	b.eq	420600 <method_inhibit+0x5b4>  // b.none
  4205fc:	bl	407b20 <__stack_chk_fail@plt>
  420600:	mov	w0, w1
  420604:	ldr	x19, [sp, #16]
  420608:	ldp	x29, x30, [sp], #160
  42060c:	ret

0000000000420610 <session_jobs_reply>:
  420610:	stp	x29, x30, [sp, #-96]!
  420614:	mov	x29, sp
  420618:	str	x19, [sp, #16]
  42061c:	str	x0, [sp, #56]
  420620:	str	x1, [sp, #48]
  420624:	str	x2, [sp, #40]
  420628:	adrp	x0, 460000 <wordlist.10364+0x370>
  42062c:	ldr	x0, [x0, #4024]
  420630:	ldr	x1, [x0]
  420634:	str	x1, [sp, #88]
  420638:	mov	x1, #0x0                   	// #0
  42063c:	ldr	x0, [sp, #56]
  420640:	cmp	x0, #0x0
  420644:	cset	w0, eq  // eq = none
  420648:	and	w0, w0, #0xff
  42064c:	and	x0, x0, #0xff
  420650:	cmp	x0, #0x0
  420654:	b.eq	420680 <session_jobs_reply+0x70>  // b.none
  420658:	adrp	x0, 43e000 <__func__.12250+0x440>
  42065c:	add	x1, x0, #0xb5b
  420660:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420664:	add	x4, x0, #0x2d8
  420668:	mov	w3, #0xd53                 	// #3411
  42066c:	mov	x2, x1
  420670:	adrp	x0, 43e000 <__func__.12250+0x440>
  420674:	add	x1, x0, #0xd08
  420678:	mov	w0, #0x0                   	// #0
  42067c:	bl	407650 <log_assert_failed_realm@plt>
  420680:	ldr	x0, [sp, #48]
  420684:	cmp	x0, #0x0
  420688:	cset	w0, eq  // eq = none
  42068c:	and	w0, w0, #0xff
  420690:	and	x0, x0, #0xff
  420694:	cmp	x0, #0x0
  420698:	b.eq	4206c4 <session_jobs_reply+0xb4>  // b.none
  42069c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4206a0:	add	x1, x0, #0xb5b
  4206a4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4206a8:	add	x4, x0, #0x2d8
  4206ac:	mov	w3, #0xd54                 	// #3412
  4206b0:	mov	x2, x1
  4206b4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4206b8:	add	x1, x0, #0x370
  4206bc:	mov	w0, #0x0                   	// #0
  4206c0:	bl	407650 <log_assert_failed_realm@plt>
  4206c4:	ldr	x0, [sp, #56]
  4206c8:	ldrb	w0, [x0, #209]
  4206cc:	ubfx	x0, x0, #1, #1
  4206d0:	and	w0, w0, #0xff
  4206d4:	eor	w0, w0, #0x1
  4206d8:	and	w0, w0, #0xff
  4206dc:	cmp	w0, #0x0
  4206e0:	b.eq	4206ec <session_jobs_reply+0xdc>  // b.none
  4206e4:	mov	w19, #0x0                   	// #0
  4206e8:	b	420770 <session_jobs_reply+0x160>
  4206ec:	ldr	x0, [sp, #40]
  4206f0:	cmp	x0, #0x0
  4206f4:	b.eq	420760 <session_jobs_reply+0x150>  // b.none
  4206f8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4206fc:	add	x1, x0, #0x378
  420700:	ldr	x0, [sp, #40]
  420704:	bl	407f30 <strcmp@plt>
  420708:	cmp	w0, #0x0
  42070c:	b.eq	420760 <session_jobs_reply+0x150>  // b.none
  420710:	str	xzr, [sp, #64]
  420714:	str	xzr, [sp, #72]
  420718:	str	wzr, [sp, #80]
  42071c:	add	x5, sp, #0x40
  420720:	ldr	x4, [sp, #40]
  420724:	ldr	x3, [sp, #48]
  420728:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  42072c:	add	x2, x0, #0x380
  420730:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  420734:	add	x1, x0, #0x3b0
  420738:	mov	x0, x5
  42073c:	bl	407ae0 <sd_bus_error_setf@plt>
  420740:	add	x0, sp, #0x40
  420744:	mov	x1, x0
  420748:	ldr	x0, [sp, #56]
  42074c:	bl	42cefc <session_send_create_reply>
  420750:	mov	w19, w0
  420754:	add	x0, sp, #0x40
  420758:	bl	407c80 <sd_bus_error_free@plt>
  42075c:	b	420770 <session_jobs_reply+0x160>
  420760:	mov	x1, #0x0                   	// #0
  420764:	ldr	x0, [sp, #56]
  420768:	bl	42cefc <session_send_create_reply>
  42076c:	mov	w19, w0
  420770:	mov	w1, w19
  420774:	adrp	x0, 460000 <wordlist.10364+0x370>
  420778:	ldr	x0, [x0, #4024]
  42077c:	ldr	x2, [sp, #88]
  420780:	ldr	x0, [x0]
  420784:	eor	x0, x2, x0
  420788:	cmp	x0, #0x0
  42078c:	b.eq	420794 <session_jobs_reply+0x184>  // b.none
  420790:	bl	407b20 <__stack_chk_fail@plt>
  420794:	mov	w0, w1
  420798:	ldr	x19, [sp, #16]
  42079c:	ldp	x29, x30, [sp], #96
  4207a0:	ret

00000000004207a4 <match_job_removed>:
  4207a4:	stp	x29, x30, [sp, #-160]!
  4207a8:	mov	x29, sp
  4207ac:	stp	x19, x20, [sp, #16]
  4207b0:	str	x0, [sp, #56]
  4207b4:	str	x1, [sp, #48]
  4207b8:	str	x2, [sp, #40]
  4207bc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4207c0:	ldr	x0, [x0, #4024]
  4207c4:	ldr	x1, [x0]
  4207c8:	str	x1, [sp, #152]
  4207cc:	mov	x1, #0x0                   	// #0
  4207d0:	ldr	x0, [sp, #48]
  4207d4:	str	x0, [sp, #136]
  4207d8:	ldr	x0, [sp, #56]
  4207dc:	cmp	x0, #0x0
  4207e0:	cset	w0, eq  // eq = none
  4207e4:	and	w0, w0, #0xff
  4207e8:	and	x0, x0, #0xff
  4207ec:	cmp	x0, #0x0
  4207f0:	b.eq	42081c <match_job_removed+0x78>  // b.none
  4207f4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4207f8:	add	x1, x0, #0xb5b
  4207fc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420800:	add	x4, x0, #0x2f0
  420804:	mov	w3, #0xd6c                 	// #3436
  420808:	mov	x2, x1
  42080c:	adrp	x0, 43e000 <__func__.12250+0x440>
  420810:	add	x1, x0, #0xd78
  420814:	mov	w0, #0x0                   	// #0
  420818:	bl	407650 <log_assert_failed_realm@plt>
  42081c:	ldr	x0, [sp, #136]
  420820:	cmp	x0, #0x0
  420824:	cset	w0, eq  // eq = none
  420828:	and	w0, w0, #0xff
  42082c:	and	x0, x0, #0xff
  420830:	cmp	x0, #0x0
  420834:	b.eq	420860 <match_job_removed+0xbc>  // b.none
  420838:	adrp	x0, 43e000 <__func__.12250+0x440>
  42083c:	add	x1, x0, #0xb5b
  420840:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420844:	add	x4, x0, #0x2f0
  420848:	mov	w3, #0xd6d                 	// #3437
  42084c:	mov	x2, x1
  420850:	adrp	x0, 43e000 <__func__.12250+0x440>
  420854:	add	x1, x0, #0xb78
  420858:	mov	w0, #0x0                   	// #0
  42085c:	bl	407650 <log_assert_failed_realm@plt>
  420860:	add	x3, sp, #0x70
  420864:	add	x2, sp, #0x78
  420868:	add	x1, sp, #0x68
  42086c:	add	x0, sp, #0x48
  420870:	mov	x5, x3
  420874:	mov	x4, x2
  420878:	mov	x3, x1
  42087c:	mov	x2, x0
  420880:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  420884:	add	x1, x0, #0x3d8
  420888:	ldr	x0, [sp, #56]
  42088c:	bl	407660 <sd_bus_message_read@plt>
  420890:	str	w0, [sp, #76]
  420894:	ldr	w0, [sp, #76]
  420898:	cmp	w0, #0x0
  42089c:	b.ge	420920 <match_job_removed+0x17c>  // b.tcont
  4208a0:	mov	w0, #0x3                   	// #3
  4208a4:	str	w0, [sp, #92]
  4208a8:	ldr	w0, [sp, #76]
  4208ac:	str	w0, [sp, #96]
  4208b0:	str	wzr, [sp, #100]
  4208b4:	ldr	w0, [sp, #100]
  4208b8:	bl	4083e0 <log_get_max_level_realm@plt>
  4208bc:	mov	w1, w0
  4208c0:	ldr	w0, [sp, #92]
  4208c4:	and	w0, w0, #0x7
  4208c8:	cmp	w1, w0
  4208cc:	b.lt	420910 <match_job_removed+0x16c>  // b.tstop
  4208d0:	ldr	w0, [sp, #100]
  4208d4:	lsl	w1, w0, #10
  4208d8:	ldr	w0, [sp, #92]
  4208dc:	orr	w6, w1, w0
  4208e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4208e4:	add	x1, x0, #0xb5b
  4208e8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4208ec:	add	x5, x0, #0x3e0
  4208f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4208f4:	add	x4, x0, #0x308
  4208f8:	mov	w3, #0xd71                 	// #3441
  4208fc:	mov	x2, x1
  420900:	ldr	w1, [sp, #96]
  420904:	mov	w0, w6
  420908:	bl	407d60 <log_internal_realm@plt>
  42090c:	b	420918 <match_job_removed+0x174>
  420910:	ldr	w0, [sp, #96]
  420914:	cmp	w0, #0x0
  420918:	mov	w0, #0x0                   	// #0
  42091c:	b	420b50 <match_job_removed+0x3ac>
  420920:	ldr	x0, [sp, #136]
  420924:	ldr	x0, [x0, #264]
  420928:	cmp	x0, #0x0
  42092c:	b.eq	420a14 <match_job_removed+0x270>  // b.none
  420930:	ldr	x0, [sp, #136]
  420934:	ldr	x0, [x0, #264]
  420938:	ldr	x1, [sp, #104]
  42093c:	bl	407f30 <strcmp@plt>
  420940:	cmp	w0, #0x0
  420944:	b.ne	420a14 <match_job_removed+0x270>  // b.any
  420948:	mov	w0, #0x6                   	// #6
  42094c:	str	w0, [sp, #80]
  420950:	str	wzr, [sp, #84]
  420954:	str	wzr, [sp, #88]
  420958:	ldr	w0, [sp, #88]
  42095c:	bl	4083e0 <log_get_max_level_realm@plt>
  420960:	mov	w1, w0
  420964:	ldr	w0, [sp, #80]
  420968:	and	w0, w0, #0x7
  42096c:	cmp	w1, w0
  420970:	b.lt	4209c4 <match_job_removed+0x220>  // b.tstop
  420974:	ldr	w0, [sp, #88]
  420978:	lsl	w1, w0, #10
  42097c:	ldr	w0, [sp, #80]
  420980:	orr	w19, w1, w0
  420984:	adrp	x0, 43e000 <__func__.12250+0x440>
  420988:	add	x20, x0, #0xb5b
  42098c:	ldr	x0, [sp, #136]
  420990:	ldr	w0, [x0, #248]
  420994:	bl	42498c <inhibit_what_to_string>
  420998:	mov	x6, x0
  42099c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4209a0:	add	x5, x0, #0x400
  4209a4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4209a8:	add	x4, x0, #0x308
  4209ac:	mov	w3, #0xd76                 	// #3446
  4209b0:	mov	x2, x20
  4209b4:	ldr	w1, [sp, #84]
  4209b8:	mov	w0, w19
  4209bc:	bl	407d60 <log_internal_realm@plt>
  4209c0:	b	4209cc <match_job_removed+0x228>
  4209c4:	ldr	w0, [sp, #84]
  4209c8:	cmp	w0, #0x0
  4209cc:	ldr	x0, [sp, #136]
  4209d0:	ldr	w0, [x0, #248]
  4209d4:	mov	w2, #0x0                   	// #0
  4209d8:	mov	w1, w0
  4209dc:	ldr	x0, [sp, #136]
  4209e0:	bl	41a0b0 <send_prepare_for>
  4209e4:	ldr	x0, [sp, #136]
  4209e8:	ldr	x0, [x0, #264]
  4209ec:	bl	413ca4 <mfree>
  4209f0:	mov	x1, x0
  4209f4:	ldr	x0, [sp, #136]
  4209f8:	str	x1, [x0, #264]
  4209fc:	ldr	x0, [sp, #136]
  420a00:	str	xzr, [x0, #256]
  420a04:	ldr	x0, [sp, #136]
  420a08:	str	wzr, [x0, #248]
  420a0c:	mov	w0, #0x0                   	// #0
  420a10:	b	420b50 <match_job_removed+0x3ac>
  420a14:	ldr	x0, [sp, #136]
  420a18:	ldr	x0, [x0, #216]
  420a1c:	ldr	x1, [sp, #120]
  420a20:	bl	413fc4 <hashmap_get>
  420a24:	str	x0, [sp, #128]
  420a28:	ldr	x0, [sp, #128]
  420a2c:	cmp	x0, #0x0
  420a30:	b.eq	420aa4 <match_job_removed+0x300>  // b.none
  420a34:	ldr	x2, [sp, #104]
  420a38:	ldr	x0, [sp, #128]
  420a3c:	ldr	x0, [x0, #128]
  420a40:	mov	x1, x0
  420a44:	mov	x0, x2
  420a48:	bl	413da0 <streq_ptr>
  420a4c:	and	w0, w0, #0xff
  420a50:	cmp	w0, #0x0
  420a54:	b.eq	420a9c <match_job_removed+0x2f8>  // b.none
  420a58:	ldr	x0, [sp, #128]
  420a5c:	ldr	x0, [x0, #128]
  420a60:	bl	413ca4 <mfree>
  420a64:	mov	x1, x0
  420a68:	ldr	x0, [sp, #128]
  420a6c:	str	x1, [x0, #128]
  420a70:	ldr	x0, [sp, #120]
  420a74:	ldr	x1, [sp, #112]
  420a78:	mov	x2, x1
  420a7c:	mov	x1, x0
  420a80:	ldr	x0, [sp, #128]
  420a84:	bl	420610 <session_jobs_reply>
  420a88:	ldr	x0, [sp, #128]
  420a8c:	bl	42fde0 <session_save>
  420a90:	ldr	x0, [sp, #128]
  420a94:	ldr	x0, [x0, #40]
  420a98:	bl	437210 <user_save>
  420a9c:	ldr	x0, [sp, #128]
  420aa0:	bl	4335a4 <session_add_to_gc_queue>
  420aa4:	ldr	x0, [sp, #136]
  420aa8:	ldr	x0, [x0, #224]
  420aac:	ldr	x1, [sp, #120]
  420ab0:	bl	413fc4 <hashmap_get>
  420ab4:	str	x0, [sp, #144]
  420ab8:	ldr	x0, [sp, #144]
  420abc:	cmp	x0, #0x0
  420ac0:	b.eq	420b4c <match_job_removed+0x3a8>  // b.none
  420ac4:	ldr	x2, [sp, #104]
  420ac8:	ldr	x0, [sp, #144]
  420acc:	ldr	x0, [x0, #72]
  420ad0:	mov	x1, x0
  420ad4:	mov	x0, x2
  420ad8:	bl	413da0 <streq_ptr>
  420adc:	and	w0, w0, #0xff
  420ae0:	cmp	w0, #0x0
  420ae4:	b.eq	420b44 <match_job_removed+0x3a0>  // b.none
  420ae8:	ldr	x0, [sp, #144]
  420aec:	ldr	x0, [x0, #72]
  420af0:	bl	413ca4 <mfree>
  420af4:	mov	x1, x0
  420af8:	ldr	x0, [sp, #144]
  420afc:	str	x1, [x0, #72]
  420b00:	ldr	x0, [sp, #144]
  420b04:	ldr	x0, [x0, #128]
  420b08:	str	x0, [sp, #128]
  420b0c:	b	420b30 <match_job_removed+0x38c>
  420b10:	ldr	x0, [sp, #120]
  420b14:	mov	x2, #0x0                   	// #0
  420b18:	mov	x1, x0
  420b1c:	ldr	x0, [sp, #128]
  420b20:	bl	420610 <session_jobs_reply>
  420b24:	ldr	x0, [sp, #128]
  420b28:	ldr	x0, [x0, #256]
  420b2c:	str	x0, [sp, #128]
  420b30:	ldr	x0, [sp, #128]
  420b34:	cmp	x0, #0x0
  420b38:	b.ne	420b10 <match_job_removed+0x36c>  // b.any
  420b3c:	ldr	x0, [sp, #144]
  420b40:	bl	437210 <user_save>
  420b44:	ldr	x0, [sp, #144]
  420b48:	bl	438778 <user_add_to_gc_queue>
  420b4c:	mov	w0, #0x0                   	// #0
  420b50:	mov	w1, w0
  420b54:	adrp	x0, 460000 <wordlist.10364+0x370>
  420b58:	ldr	x0, [x0, #4024]
  420b5c:	ldr	x2, [sp, #152]
  420b60:	ldr	x0, [x0]
  420b64:	eor	x0, x2, x0
  420b68:	cmp	x0, #0x0
  420b6c:	b.eq	420b74 <match_job_removed+0x3d0>  // b.none
  420b70:	bl	407b20 <__stack_chk_fail@plt>
  420b74:	mov	w0, w1
  420b78:	ldp	x19, x20, [sp, #16]
  420b7c:	ldp	x29, x30, [sp], #160
  420b80:	ret

0000000000420b84 <match_unit_removed>:
  420b84:	stp	x29, x30, [sp, #-112]!
  420b88:	mov	x29, sp
  420b8c:	str	x0, [sp, #40]
  420b90:	str	x1, [sp, #32]
  420b94:	str	x2, [sp, #24]
  420b98:	adrp	x0, 460000 <wordlist.10364+0x370>
  420b9c:	ldr	x0, [x0, #4024]
  420ba0:	ldr	x1, [x0]
  420ba4:	str	x1, [sp, #104]
  420ba8:	mov	x1, #0x0                   	// #0
  420bac:	ldr	x0, [sp, #32]
  420bb0:	str	x0, [sp, #80]
  420bb4:	ldr	x0, [sp, #40]
  420bb8:	cmp	x0, #0x0
  420bbc:	cset	w0, eq  // eq = none
  420bc0:	and	w0, w0, #0xff
  420bc4:	and	x0, x0, #0xff
  420bc8:	cmp	x0, #0x0
  420bcc:	b.eq	420bf8 <match_unit_removed+0x74>  // b.none
  420bd0:	adrp	x0, 43e000 <__func__.12250+0x440>
  420bd4:	add	x1, x0, #0xb5b
  420bd8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420bdc:	add	x4, x0, #0x320
  420be0:	mov	w3, #0xda6                 	// #3494
  420be4:	mov	x2, x1
  420be8:	adrp	x0, 43e000 <__func__.12250+0x440>
  420bec:	add	x1, x0, #0xd78
  420bf0:	mov	w0, #0x0                   	// #0
  420bf4:	bl	407650 <log_assert_failed_realm@plt>
  420bf8:	ldr	x0, [sp, #80]
  420bfc:	cmp	x0, #0x0
  420c00:	cset	w0, eq  // eq = none
  420c04:	and	w0, w0, #0xff
  420c08:	and	x0, x0, #0xff
  420c0c:	cmp	x0, #0x0
  420c10:	b.eq	420c3c <match_unit_removed+0xb8>  // b.none
  420c14:	adrp	x0, 43e000 <__func__.12250+0x440>
  420c18:	add	x1, x0, #0xb5b
  420c1c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420c20:	add	x4, x0, #0x320
  420c24:	mov	w3, #0xda7                 	// #3495
  420c28:	mov	x2, x1
  420c2c:	adrp	x0, 43e000 <__func__.12250+0x440>
  420c30:	add	x1, x0, #0xb78
  420c34:	mov	w0, #0x0                   	// #0
  420c38:	bl	407650 <log_assert_failed_realm@plt>
  420c3c:	add	x1, sp, #0x40
  420c40:	add	x0, sp, #0x48
  420c44:	mov	x3, x1
  420c48:	mov	x2, x0
  420c4c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  420c50:	add	x1, x0, #0x320
  420c54:	ldr	x0, [sp, #40]
  420c58:	bl	407660 <sd_bus_message_read@plt>
  420c5c:	str	w0, [sp, #48]
  420c60:	ldr	w0, [sp, #48]
  420c64:	cmp	w0, #0x0
  420c68:	b.ge	420cec <match_unit_removed+0x168>  // b.tcont
  420c6c:	mov	w0, #0x3                   	// #3
  420c70:	str	w0, [sp, #52]
  420c74:	ldr	w0, [sp, #48]
  420c78:	str	w0, [sp, #56]
  420c7c:	str	wzr, [sp, #60]
  420c80:	ldr	w0, [sp, #60]
  420c84:	bl	4083e0 <log_get_max_level_realm@plt>
  420c88:	mov	w1, w0
  420c8c:	ldr	w0, [sp, #52]
  420c90:	and	w0, w0, #0x7
  420c94:	cmp	w1, w0
  420c98:	b.lt	420cdc <match_unit_removed+0x158>  // b.tstop
  420c9c:	ldr	w0, [sp, #60]
  420ca0:	lsl	w1, w0, #10
  420ca4:	ldr	w0, [sp, #52]
  420ca8:	orr	w6, w1, w0
  420cac:	adrp	x0, 43e000 <__func__.12250+0x440>
  420cb0:	add	x1, x0, #0xb5b
  420cb4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  420cb8:	add	x5, x0, #0x3e0
  420cbc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420cc0:	add	x4, x0, #0x338
  420cc4:	mov	w3, #0xdab                 	// #3499
  420cc8:	mov	x2, x1
  420ccc:	ldr	w1, [sp, #56]
  420cd0:	mov	w0, w6
  420cd4:	bl	407d60 <log_internal_realm@plt>
  420cd8:	b	420ce4 <match_unit_removed+0x160>
  420cdc:	ldr	w0, [sp, #56]
  420ce0:	cmp	w0, #0x0
  420ce4:	mov	w0, #0x0                   	// #0
  420ce8:	b	420d40 <match_unit_removed+0x1bc>
  420cec:	ldr	x0, [sp, #80]
  420cf0:	ldr	x0, [x0, #216]
  420cf4:	ldr	x1, [sp, #72]
  420cf8:	bl	413fc4 <hashmap_get>
  420cfc:	str	x0, [sp, #88]
  420d00:	ldr	x0, [sp, #88]
  420d04:	cmp	x0, #0x0
  420d08:	b.eq	420d14 <match_unit_removed+0x190>  // b.none
  420d0c:	ldr	x0, [sp, #88]
  420d10:	bl	4335a4 <session_add_to_gc_queue>
  420d14:	ldr	x0, [sp, #80]
  420d18:	ldr	x0, [x0, #224]
  420d1c:	ldr	x1, [sp, #72]
  420d20:	bl	413fc4 <hashmap_get>
  420d24:	str	x0, [sp, #96]
  420d28:	ldr	x0, [sp, #96]
  420d2c:	cmp	x0, #0x0
  420d30:	b.eq	420d3c <match_unit_removed+0x1b8>  // b.none
  420d34:	ldr	x0, [sp, #96]
  420d38:	bl	438778 <user_add_to_gc_queue>
  420d3c:	mov	w0, #0x0                   	// #0
  420d40:	mov	w1, w0
  420d44:	adrp	x0, 460000 <wordlist.10364+0x370>
  420d48:	ldr	x0, [x0, #4024]
  420d4c:	ldr	x2, [sp, #104]
  420d50:	ldr	x0, [x0]
  420d54:	eor	x0, x2, x0
  420d58:	cmp	x0, #0x0
  420d5c:	b.eq	420d64 <match_unit_removed+0x1e0>  // b.none
  420d60:	bl	407b20 <__stack_chk_fail@plt>
  420d64:	mov	w0, w1
  420d68:	ldp	x29, x30, [sp], #112
  420d6c:	ret

0000000000420d70 <match_properties_changed>:
  420d70:	stp	x29, x30, [sp, #-128]!
  420d74:	mov	x29, sp
  420d78:	str	x19, [sp, #16]
  420d7c:	str	x0, [sp, #56]
  420d80:	str	x1, [sp, #48]
  420d84:	str	x2, [sp, #40]
  420d88:	adrp	x0, 460000 <wordlist.10364+0x370>
  420d8c:	ldr	x0, [x0, #4024]
  420d90:	ldr	x1, [x0]
  420d94:	str	x1, [sp, #120]
  420d98:	mov	x1, #0x0                   	// #0
  420d9c:	str	xzr, [sp, #80]
  420da0:	ldr	x0, [sp, #48]
  420da4:	str	x0, [sp, #88]
  420da8:	ldr	x0, [sp, #56]
  420dac:	cmp	x0, #0x0
  420db0:	cset	w0, eq  // eq = none
  420db4:	and	w0, w0, #0xff
  420db8:	and	x0, x0, #0xff
  420dbc:	cmp	x0, #0x0
  420dc0:	b.eq	420dec <match_properties_changed+0x7c>  // b.none
  420dc4:	adrp	x0, 43e000 <__func__.12250+0x440>
  420dc8:	add	x1, x0, #0xb5b
  420dcc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420dd0:	add	x4, x0, #0x350
  420dd4:	mov	w3, #0xdc2                 	// #3522
  420dd8:	mov	x2, x1
  420ddc:	adrp	x0, 43e000 <__func__.12250+0x440>
  420de0:	add	x1, x0, #0xd78
  420de4:	mov	w0, #0x0                   	// #0
  420de8:	bl	407650 <log_assert_failed_realm@plt>
  420dec:	ldr	x0, [sp, #88]
  420df0:	cmp	x0, #0x0
  420df4:	cset	w0, eq  // eq = none
  420df8:	and	w0, w0, #0xff
  420dfc:	and	x0, x0, #0xff
  420e00:	cmp	x0, #0x0
  420e04:	b.eq	420e30 <match_properties_changed+0xc0>  // b.none
  420e08:	adrp	x0, 43e000 <__func__.12250+0x440>
  420e0c:	add	x1, x0, #0xb5b
  420e10:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420e14:	add	x4, x0, #0x350
  420e18:	mov	w3, #0xdc3                 	// #3523
  420e1c:	mov	x2, x1
  420e20:	adrp	x0, 43e000 <__func__.12250+0x440>
  420e24:	add	x1, x0, #0xb78
  420e28:	mov	w0, #0x0                   	// #0
  420e2c:	bl	407650 <log_assert_failed_realm@plt>
  420e30:	ldr	x0, [sp, #56]
  420e34:	bl	408210 <sd_bus_message_get_path@plt>
  420e38:	str	x0, [sp, #96]
  420e3c:	ldr	x0, [sp, #96]
  420e40:	cmp	x0, #0x0
  420e44:	b.ne	420e50 <match_properties_changed+0xe0>  // b.any
  420e48:	mov	w19, #0x0                   	// #0
  420e4c:	b	420efc <match_properties_changed+0x18c>
  420e50:	add	x0, sp, #0x50
  420e54:	mov	x1, x0
  420e58:	ldr	x0, [sp, #96]
  420e5c:	bl	407a00 <unit_name_from_dbus_path@plt>
  420e60:	str	w0, [sp, #76]
  420e64:	ldr	w0, [sp, #76]
  420e68:	cmn	w0, #0x16
  420e6c:	b.ne	420e78 <match_properties_changed+0x108>  // b.any
  420e70:	mov	w19, #0x0                   	// #0
  420e74:	b	420efc <match_properties_changed+0x18c>
  420e78:	ldr	w0, [sp, #76]
  420e7c:	cmp	w0, #0x0
  420e80:	b.ge	420ea8 <match_properties_changed+0x138>  // b.tcont
  420e84:	adrp	x0, 43e000 <__func__.12250+0x440>
  420e88:	add	x1, x0, #0xb5b
  420e8c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420e90:	add	x3, x0, #0x370
  420e94:	mov	w2, #0xdcd                 	// #3533
  420e98:	mov	w0, #0x0                   	// #0
  420e9c:	bl	408330 <log_oom_internal@plt>
  420ea0:	mov	w19, #0x0                   	// #0
  420ea4:	b	420efc <match_properties_changed+0x18c>
  420ea8:	ldr	x0, [sp, #88]
  420eac:	ldr	x0, [x0, #216]
  420eb0:	ldr	x1, [sp, #80]
  420eb4:	bl	413fc4 <hashmap_get>
  420eb8:	str	x0, [sp, #104]
  420ebc:	ldr	x0, [sp, #104]
  420ec0:	cmp	x0, #0x0
  420ec4:	b.eq	420ed0 <match_properties_changed+0x160>  // b.none
  420ec8:	ldr	x0, [sp, #104]
  420ecc:	bl	4335a4 <session_add_to_gc_queue>
  420ed0:	ldr	x0, [sp, #88]
  420ed4:	ldr	x0, [x0, #224]
  420ed8:	ldr	x1, [sp, #80]
  420edc:	bl	413fc4 <hashmap_get>
  420ee0:	str	x0, [sp, #112]
  420ee4:	ldr	x0, [sp, #112]
  420ee8:	cmp	x0, #0x0
  420eec:	b.eq	420ef8 <match_properties_changed+0x188>  // b.none
  420ef0:	ldr	x0, [sp, #112]
  420ef4:	bl	438778 <user_add_to_gc_queue>
  420ef8:	mov	w19, #0x0                   	// #0
  420efc:	add	x0, sp, #0x50
  420f00:	bl	413cc4 <freep>
  420f04:	mov	w1, w19
  420f08:	adrp	x0, 460000 <wordlist.10364+0x370>
  420f0c:	ldr	x0, [x0, #4024]
  420f10:	ldr	x2, [sp, #120]
  420f14:	ldr	x0, [x0]
  420f18:	eor	x0, x2, x0
  420f1c:	cmp	x0, #0x0
  420f20:	b.eq	420f28 <match_properties_changed+0x1b8>  // b.none
  420f24:	bl	407b20 <__stack_chk_fail@plt>
  420f28:	mov	w0, w1
  420f2c:	ldr	x19, [sp, #16]
  420f30:	ldp	x29, x30, [sp], #128
  420f34:	ret

0000000000420f38 <match_reloading>:
  420f38:	stp	x29, x30, [sp, #-128]!
  420f3c:	mov	x29, sp
  420f40:	str	x0, [sp, #40]
  420f44:	str	x1, [sp, #32]
  420f48:	str	x2, [sp, #24]
  420f4c:	adrp	x0, 460000 <wordlist.10364+0x370>
  420f50:	ldr	x0, [x0, #4024]
  420f54:	ldr	x1, [x0]
  420f58:	str	x1, [sp, #120]
  420f5c:	mov	x1, #0x0                   	// #0
  420f60:	ldr	x0, [sp, #32]
  420f64:	str	x0, [sp, #96]
  420f68:	ldr	x0, [sp, #40]
  420f6c:	cmp	x0, #0x0
  420f70:	cset	w0, eq  // eq = none
  420f74:	and	w0, w0, #0xff
  420f78:	and	x0, x0, #0xff
  420f7c:	cmp	x0, #0x0
  420f80:	b.eq	420fac <match_reloading+0x74>  // b.none
  420f84:	adrp	x0, 43e000 <__func__.12250+0x440>
  420f88:	add	x1, x0, #0xb5b
  420f8c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420f90:	add	x4, x0, #0x390
  420f94:	mov	w3, #0xde2                 	// #3554
  420f98:	mov	x2, x1
  420f9c:	adrp	x0, 43e000 <__func__.12250+0x440>
  420fa0:	add	x1, x0, #0xd78
  420fa4:	mov	w0, #0x0                   	// #0
  420fa8:	bl	407650 <log_assert_failed_realm@plt>
  420fac:	ldr	x0, [sp, #96]
  420fb0:	cmp	x0, #0x0
  420fb4:	cset	w0, eq  // eq = none
  420fb8:	and	w0, w0, #0xff
  420fbc:	and	x0, x0, #0xff
  420fc0:	cmp	x0, #0x0
  420fc4:	b.eq	420ff0 <match_reloading+0xb8>  // b.none
  420fc8:	adrp	x0, 43e000 <__func__.12250+0x440>
  420fcc:	add	x1, x0, #0xb5b
  420fd0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  420fd4:	add	x4, x0, #0x390
  420fd8:	mov	w3, #0xde3                 	// #3555
  420fdc:	mov	x2, x1
  420fe0:	adrp	x0, 43e000 <__func__.12250+0x440>
  420fe4:	add	x1, x0, #0xb78
  420fe8:	mov	w0, #0x0                   	// #0
  420fec:	bl	407650 <log_assert_failed_realm@plt>
  420ff0:	add	x0, sp, #0x38
  420ff4:	mov	x2, x0
  420ff8:	adrp	x0, 43e000 <__func__.12250+0x440>
  420ffc:	add	x1, x0, #0xd20
  421000:	ldr	x0, [sp, #40]
  421004:	bl	407660 <sd_bus_message_read@plt>
  421008:	str	w0, [sp, #60]
  42100c:	ldr	w0, [sp, #60]
  421010:	cmp	w0, #0x0
  421014:	b.ge	421098 <match_reloading+0x160>  // b.tcont
  421018:	mov	w0, #0x3                   	// #3
  42101c:	str	w0, [sp, #76]
  421020:	ldr	w0, [sp, #60]
  421024:	str	w0, [sp, #80]
  421028:	str	wzr, [sp, #84]
  42102c:	ldr	w0, [sp, #84]
  421030:	bl	4083e0 <log_get_max_level_realm@plt>
  421034:	mov	w1, w0
  421038:	ldr	w0, [sp, #76]
  42103c:	and	w0, w0, #0x7
  421040:	cmp	w1, w0
  421044:	b.lt	421088 <match_reloading+0x150>  // b.tstop
  421048:	ldr	w0, [sp, #84]
  42104c:	lsl	w1, w0, #10
  421050:	ldr	w0, [sp, #76]
  421054:	orr	w6, w1, w0
  421058:	adrp	x0, 43e000 <__func__.12250+0x440>
  42105c:	add	x1, x0, #0xb5b
  421060:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421064:	add	x5, x0, #0x3e0
  421068:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42106c:	add	x4, x0, #0x3a0
  421070:	mov	w3, #0xde7                 	// #3559
  421074:	mov	x2, x1
  421078:	ldr	w1, [sp, #80]
  42107c:	mov	w0, w6
  421080:	bl	407d60 <log_internal_realm@plt>
  421084:	b	421090 <match_reloading+0x158>
  421088:	ldr	w0, [sp, #80]
  42108c:	cmp	w0, #0x0
  421090:	mov	w0, #0x0                   	// #0
  421094:	b	421160 <match_reloading+0x228>
  421098:	ldr	w0, [sp, #56]
  42109c:	cmp	w0, #0x0
  4210a0:	b.eq	4210ac <match_reloading+0x174>  // b.none
  4210a4:	mov	w0, #0x0                   	// #0
  4210a8:	b	421160 <match_reloading+0x228>
  4210ac:	mov	w0, #0x7                   	// #7
  4210b0:	str	w0, [sp, #64]
  4210b4:	str	wzr, [sp, #68]
  4210b8:	str	wzr, [sp, #72]
  4210bc:	ldr	w0, [sp, #72]
  4210c0:	bl	4083e0 <log_get_max_level_realm@plt>
  4210c4:	mov	w1, w0
  4210c8:	ldr	w0, [sp, #64]
  4210cc:	and	w0, w0, #0x7
  4210d0:	cmp	w1, w0
  4210d4:	b.lt	421118 <match_reloading+0x1e0>  // b.tstop
  4210d8:	ldr	w0, [sp, #72]
  4210dc:	lsl	w1, w0, #10
  4210e0:	ldr	w0, [sp, #64]
  4210e4:	orr	w6, w1, w0
  4210e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4210ec:	add	x1, x0, #0xb5b
  4210f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4210f4:	add	x5, x0, #0x420
  4210f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4210fc:	add	x4, x0, #0x3a0
  421100:	mov	w3, #0xdef                 	// #3567
  421104:	mov	x2, x1
  421108:	ldr	w1, [sp, #68]
  42110c:	mov	w0, w6
  421110:	bl	407d60 <log_internal_realm@plt>
  421114:	b	421120 <match_reloading+0x1e8>
  421118:	ldr	w0, [sp, #68]
  42111c:	cmp	w0, #0x0
  421120:	mov	w0, #0xfffffffe            	// #-2
  421124:	str	w0, [sp, #104]
  421128:	str	xzr, [sp, #112]
  42112c:	b	421138 <match_reloading+0x200>
  421130:	ldr	x0, [sp, #88]
  421134:	bl	4335a4 <session_add_to_gc_queue>
  421138:	ldr	x0, [sp, #96]
  42113c:	ldr	x0, [x0, #32]
  421140:	add	x2, sp, #0x58
  421144:	add	x1, sp, #0x68
  421148:	mov	x3, #0x0                   	// #0
  42114c:	bl	41402c <hashmap_iterate>
  421150:	and	w0, w0, #0xff
  421154:	cmp	w0, #0x0
  421158:	b.ne	421130 <match_reloading+0x1f8>  // b.any
  42115c:	mov	w0, #0x0                   	// #0
  421160:	mov	w1, w0
  421164:	adrp	x0, 460000 <wordlist.10364+0x370>
  421168:	ldr	x0, [x0, #4024]
  42116c:	ldr	x2, [sp, #120]
  421170:	ldr	x0, [x0]
  421174:	eor	x0, x2, x0
  421178:	cmp	x0, #0x0
  42117c:	b.eq	421184 <match_reloading+0x24c>  // b.none
  421180:	bl	407b20 <__stack_chk_fail@plt>
  421184:	mov	w0, w1
  421188:	ldp	x29, x30, [sp], #128
  42118c:	ret

0000000000421190 <manager_send_changed>:
  421190:	stp	x29, x30, [sp, #-288]!
  421194:	mov	x29, sp
  421198:	str	x0, [x29, #24]
  42119c:	str	x1, [x29, #16]
  4211a0:	str	x2, [x29, #240]
  4211a4:	str	x3, [x29, #248]
  4211a8:	str	x4, [x29, #256]
  4211ac:	str	x5, [x29, #264]
  4211b0:	str	x6, [x29, #272]
  4211b4:	str	x7, [x29, #280]
  4211b8:	str	q0, [x29, #112]
  4211bc:	str	q1, [x29, #128]
  4211c0:	str	q2, [x29, #144]
  4211c4:	str	q3, [x29, #160]
  4211c8:	str	q4, [x29, #176]
  4211cc:	str	q5, [x29, #192]
  4211d0:	str	q6, [x29, #208]
  4211d4:	str	q7, [x29, #224]
  4211d8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4211dc:	ldr	x0, [x0, #4024]
  4211e0:	ldr	x1, [x0]
  4211e4:	str	x1, [x29, #104]
  4211e8:	mov	x1, #0x0                   	// #0
  4211ec:	ldr	x0, [x29, #24]
  4211f0:	cmp	x0, #0x0
  4211f4:	cset	w0, eq  // eq = none
  4211f8:	and	w0, w0, #0xff
  4211fc:	and	x0, x0, #0xff
  421200:	cmp	x0, #0x0
  421204:	b.eq	421230 <manager_send_changed+0xa0>  // b.none
  421208:	adrp	x0, 43e000 <__func__.12250+0x440>
  42120c:	add	x1, x0, #0xb5b
  421210:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421214:	add	x4, x0, #0x3b0
  421218:	mov	w3, #0xdfa                 	// #3578
  42121c:	mov	x2, x1
  421220:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421224:	add	x1, x0, #0x7a8
  421228:	mov	w0, #0x0                   	// #0
  42122c:	bl	407650 <log_assert_failed_realm@plt>
  421230:	ldr	x0, [x29, #16]
  421234:	cmp	x0, #0x0
  421238:	b.ne	421248 <manager_send_changed+0xb8>  // b.any
  42123c:	add	x0, x29, #0x10
  421240:	str	x0, [x29, #40]
  421244:	b	421484 <manager_send_changed+0x2f4>
  421248:	mov	x0, #0x1                   	// #1
  42124c:	str	x0, [x29, #48]
  421250:	add	x0, x29, #0x120
  421254:	str	x0, [x29, #72]
  421258:	add	x0, x29, #0x120
  42125c:	str	x0, [x29, #80]
  421260:	add	x0, x29, #0xf0
  421264:	str	x0, [x29, #88]
  421268:	mov	w0, #0xffffffd0            	// #-48
  42126c:	str	w0, [x29, #96]
  421270:	mov	w0, #0xffffff80            	// #-128
  421274:	str	w0, [x29, #100]
  421278:	b	421288 <manager_send_changed+0xf8>
  42127c:	ldr	x0, [x29, #48]
  421280:	add	x0, x0, #0x1
  421284:	str	x0, [x29, #48]
  421288:	ldr	w1, [x29, #96]
  42128c:	ldr	x0, [x29, #72]
  421290:	cmp	w1, #0x0
  421294:	b.lt	4212a8 <manager_send_changed+0x118>  // b.tstop
  421298:	add	x1, x0, #0xf
  42129c:	and	x1, x1, #0xfffffffffffffff8
  4212a0:	str	x1, [x29, #72]
  4212a4:	b	4212d8 <manager_send_changed+0x148>
  4212a8:	add	w2, w1, #0x8
  4212ac:	str	w2, [x29, #96]
  4212b0:	ldr	w2, [x29, #96]
  4212b4:	cmp	w2, #0x0
  4212b8:	b.le	4212cc <manager_send_changed+0x13c>
  4212bc:	add	x1, x0, #0xf
  4212c0:	and	x1, x1, #0xfffffffffffffff8
  4212c4:	str	x1, [x29, #72]
  4212c8:	b	4212d8 <manager_send_changed+0x148>
  4212cc:	ldr	x2, [x29, #80]
  4212d0:	sxtw	x0, w1
  4212d4:	add	x0, x2, x0
  4212d8:	ldr	x0, [x0]
  4212dc:	cmp	x0, #0x0
  4212e0:	b.ne	42127c <manager_send_changed+0xec>  // b.any
  4212e4:	ldr	x0, [x29, #48]
  4212e8:	add	x0, x0, #0x1
  4212ec:	str	x0, [x29, #56]
  4212f0:	ldr	x1, [x29, #56]
  4212f4:	mov	x0, #0x8                   	// #8
  4212f8:	bl	413ce8 <size_multiply_overflow>
  4212fc:	and	w0, w0, #0xff
  421300:	and	x0, x0, #0xff
  421304:	cmp	x0, #0x0
  421308:	b.eq	421334 <manager_send_changed+0x1a4>  // b.none
  42130c:	adrp	x0, 43e000 <__func__.12250+0x440>
  421310:	add	x1, x0, #0xb5b
  421314:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421318:	add	x4, x0, #0x3b0
  42131c:	mov	w3, #0xdfc                 	// #3580
  421320:	mov	x2, x1
  421324:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421328:	add	x1, x0, #0x460
  42132c:	mov	w0, #0x0                   	// #0
  421330:	bl	407650 <log_assert_failed_realm@plt>
  421334:	ldr	x0, [x29, #56]
  421338:	lsl	x0, x0, #3
  42133c:	cmp	x0, #0x400, lsl #12
  421340:	cset	w0, hi  // hi = pmore
  421344:	and	w0, w0, #0xff
  421348:	and	x0, x0, #0xff
  42134c:	cmp	x0, #0x0
  421350:	b.eq	42137c <manager_send_changed+0x1ec>  // b.none
  421354:	adrp	x0, 43e000 <__func__.12250+0x440>
  421358:	add	x1, x0, #0xb5b
  42135c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421360:	add	x4, x0, #0x3b0
  421364:	mov	w3, #0xdfc                 	// #3580
  421368:	mov	x2, x1
  42136c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421370:	add	x1, x0, #0x490
  421374:	mov	w0, #0x0                   	// #0
  421378:	bl	407650 <log_assert_failed_realm@plt>
  42137c:	ldr	x0, [x29, #56]
  421380:	lsl	x0, x0, #3
  421384:	add	x0, x0, #0xf
  421388:	lsr	x0, x0, #4
  42138c:	lsl	x0, x0, #4
  421390:	sub	sp, sp, x0
  421394:	mov	x0, sp
  421398:	add	x0, x0, #0xf
  42139c:	lsr	x0, x0, #4
  4213a0:	lsl	x0, x0, #4
  4213a4:	str	x0, [x29, #40]
  4213a8:	str	xzr, [x29, #48]
  4213ac:	ldr	x0, [x29, #48]
  4213b0:	lsl	x0, x0, #3
  4213b4:	ldr	x1, [x29, #40]
  4213b8:	add	x0, x1, x0
  4213bc:	ldr	x1, [x29, #16]
  4213c0:	str	x1, [x0]
  4213c4:	add	x0, x29, #0x120
  4213c8:	str	x0, [x29, #72]
  4213cc:	add	x0, x29, #0x120
  4213d0:	str	x0, [x29, #80]
  4213d4:	add	x0, x29, #0xf0
  4213d8:	str	x0, [x29, #88]
  4213dc:	mov	w0, #0xffffffd0            	// #-48
  4213e0:	str	w0, [x29, #96]
  4213e4:	mov	w0, #0xffffff80            	// #-128
  4213e8:	str	w0, [x29, #100]
  4213ec:	ldr	x0, [x29, #48]
  4213f0:	add	x0, x0, #0x1
  4213f4:	str	x0, [x29, #48]
  4213f8:	ldr	x0, [x29, #48]
  4213fc:	lsl	x0, x0, #3
  421400:	ldr	x1, [x29, #40]
  421404:	add	x2, x1, x0
  421408:	ldr	w1, [x29, #96]
  42140c:	ldr	x0, [x29, #72]
  421410:	cmp	w1, #0x0
  421414:	b.lt	421428 <manager_send_changed+0x298>  // b.tstop
  421418:	add	x1, x0, #0xf
  42141c:	and	x1, x1, #0xfffffffffffffff8
  421420:	str	x1, [x29, #72]
  421424:	b	421458 <manager_send_changed+0x2c8>
  421428:	add	w3, w1, #0x8
  42142c:	str	w3, [x29, #96]
  421430:	ldr	w3, [x29, #96]
  421434:	cmp	w3, #0x0
  421438:	b.le	42144c <manager_send_changed+0x2bc>
  42143c:	add	x1, x0, #0xf
  421440:	and	x1, x1, #0xfffffffffffffff8
  421444:	str	x1, [x29, #72]
  421448:	b	421458 <manager_send_changed+0x2c8>
  42144c:	ldr	x3, [x29, #80]
  421450:	sxtw	x0, w1
  421454:	add	x0, x3, x0
  421458:	ldr	x0, [x0]
  42145c:	str	x0, [x2]
  421460:	ldr	x0, [x29, #48]
  421464:	lsl	x0, x0, #3
  421468:	ldr	x1, [x29, #40]
  42146c:	add	x0, x1, x0
  421470:	ldr	x0, [x0]
  421474:	cmp	x0, #0x0
  421478:	b.eq	421480 <manager_send_changed+0x2f0>  // b.none
  42147c:	b	4213ec <manager_send_changed+0x25c>
  421480:	nop
  421484:	ldr	x0, [x29, #40]
  421488:	str	x0, [x29, #64]
  42148c:	ldr	x0, [x29, #24]
  421490:	ldr	x4, [x0, #8]
  421494:	ldr	x3, [x29, #64]
  421498:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  42149c:	add	x2, x0, #0x6c0
  4214a0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4214a4:	add	x1, x0, #0x6e0
  4214a8:	mov	x0, x4
  4214ac:	bl	4082d0 <sd_bus_emit_properties_changed_strv@plt>
  4214b0:	mov	w1, w0
  4214b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4214b8:	ldr	x0, [x0, #4024]
  4214bc:	ldr	x2, [x29, #104]
  4214c0:	ldr	x0, [x0]
  4214c4:	eor	x0, x2, x0
  4214c8:	cmp	x0, #0x0
  4214cc:	b.eq	4214d4 <manager_send_changed+0x344>  // b.none
  4214d0:	bl	407b20 <__stack_chk_fail@plt>
  4214d4:	mov	w0, w1
  4214d8:	mov	sp, x29
  4214dc:	ldp	x29, x30, [sp], #288
  4214e0:	ret

00000000004214e4 <strdup_job>:
  4214e4:	stp	x29, x30, [sp, #-64]!
  4214e8:	mov	x29, sp
  4214ec:	str	x0, [sp, #24]
  4214f0:	str	x1, [sp, #16]
  4214f4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4214f8:	ldr	x0, [x0, #4024]
  4214fc:	ldr	x1, [x0]
  421500:	str	x1, [sp, #56]
  421504:	mov	x1, #0x0                   	// #0
  421508:	add	x0, sp, #0x28
  42150c:	mov	x2, x0
  421510:	adrp	x0, 43e000 <__func__.12250+0x440>
  421514:	add	x1, x0, #0xd80
  421518:	ldr	x0, [sp, #24]
  42151c:	bl	407660 <sd_bus_message_read@plt>
  421520:	str	w0, [sp, #36]
  421524:	ldr	w0, [sp, #36]
  421528:	cmp	w0, #0x0
  42152c:	b.ge	421538 <strdup_job+0x54>  // b.tcont
  421530:	ldr	w0, [sp, #36]
  421534:	b	421568 <strdup_job+0x84>
  421538:	ldr	x0, [sp, #40]
  42153c:	bl	407f90 <strdup@plt>
  421540:	str	x0, [sp, #48]
  421544:	ldr	x0, [sp, #48]
  421548:	cmp	x0, #0x0
  42154c:	b.ne	421558 <strdup_job+0x74>  // b.any
  421550:	mov	w0, #0xfffffff4            	// #-12
  421554:	b	421568 <strdup_job+0x84>
  421558:	ldr	x0, [sp, #16]
  42155c:	ldr	x1, [sp, #48]
  421560:	str	x1, [x0]
  421564:	mov	w0, #0x1                   	// #1
  421568:	mov	w1, w0
  42156c:	adrp	x0, 460000 <wordlist.10364+0x370>
  421570:	ldr	x0, [x0, #4024]
  421574:	ldr	x2, [sp, #56]
  421578:	ldr	x0, [x0]
  42157c:	eor	x0, x2, x0
  421580:	cmp	x0, #0x0
  421584:	b.eq	42158c <strdup_job+0xa8>  // b.none
  421588:	bl	407b20 <__stack_chk_fail@plt>
  42158c:	mov	w0, w1
  421590:	ldp	x29, x30, [sp], #64
  421594:	ret

0000000000421598 <manager_start_scope>:
  421598:	stp	x29, x30, [sp, #-176]!
  42159c:	mov	x29, sp
  4215a0:	str	x19, [sp, #16]
  4215a4:	str	x0, [sp, #120]
  4215a8:	str	x1, [sp, #112]
  4215ac:	str	w2, [sp, #108]
  4215b0:	str	x3, [sp, #96]
  4215b4:	str	x4, [sp, #88]
  4215b8:	str	x5, [sp, #80]
  4215bc:	str	x6, [sp, #72]
  4215c0:	str	x7, [sp, #64]
  4215c4:	ldr	x0, [sp, #176]
  4215c8:	str	x0, [sp, #56]
  4215cc:	ldr	x0, [sp, #184]
  4215d0:	str	x0, [sp, #48]
  4215d4:	ldr	x0, [sp, #192]
  4215d8:	str	x0, [sp, #40]
  4215dc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4215e0:	ldr	x0, [x0, #4024]
  4215e4:	ldr	x1, [x0]
  4215e8:	str	x1, [sp, #168]
  4215ec:	mov	x1, #0x0                   	// #0
  4215f0:	str	xzr, [sp, #144]
  4215f4:	str	xzr, [sp, #152]
  4215f8:	ldr	x0, [sp, #120]
  4215fc:	cmp	x0, #0x0
  421600:	cset	w0, eq  // eq = none
  421604:	and	w0, w0, #0xff
  421608:	and	x0, x0, #0xff
  42160c:	cmp	x0, #0x0
  421610:	b.eq	42163c <manager_start_scope+0xa4>  // b.none
  421614:	adrp	x0, 43e000 <__func__.12250+0x440>
  421618:	add	x1, x0, #0xb5b
  42161c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421620:	add	x4, x0, #0x3c8
  421624:	mov	w3, #0xe27                 	// #3623
  421628:	mov	x2, x1
  42162c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421630:	add	x1, x0, #0x7a8
  421634:	mov	w0, #0x0                   	// #0
  421638:	bl	407650 <log_assert_failed_realm@plt>
  42163c:	ldr	x0, [sp, #112]
  421640:	cmp	x0, #0x0
  421644:	cset	w0, eq  // eq = none
  421648:	and	w0, w0, #0xff
  42164c:	and	x0, x0, #0xff
  421650:	cmp	x0, #0x0
  421654:	b.eq	421680 <manager_start_scope+0xe8>  // b.none
  421658:	adrp	x0, 43e000 <__func__.12250+0x440>
  42165c:	add	x1, x0, #0xb5b
  421660:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421664:	add	x4, x0, #0x3c8
  421668:	mov	w3, #0xe28                 	// #3624
  42166c:	mov	x2, x1
  421670:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421674:	add	x1, x0, #0x4b0
  421678:	mov	w0, #0x0                   	// #0
  42167c:	bl	407650 <log_assert_failed_realm@plt>
  421680:	ldr	w0, [sp, #108]
  421684:	cmp	w0, #0x1
  421688:	cset	w0, le
  42168c:	and	w0, w0, #0xff
  421690:	and	x0, x0, #0xff
  421694:	cmp	x0, #0x0
  421698:	b.eq	4216c4 <manager_start_scope+0x12c>  // b.none
  42169c:	adrp	x0, 43e000 <__func__.12250+0x440>
  4216a0:	add	x1, x0, #0xb5b
  4216a4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4216a8:	add	x4, x0, #0x3c8
  4216ac:	mov	w3, #0xe29                 	// #3625
  4216b0:	mov	x2, x1
  4216b4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4216b8:	add	x1, x0, #0x4b8
  4216bc:	mov	w0, #0x0                   	// #0
  4216c0:	bl	407650 <log_assert_failed_realm@plt>
  4216c4:	ldr	x0, [sp, #40]
  4216c8:	cmp	x0, #0x0
  4216cc:	cset	w0, eq  // eq = none
  4216d0:	and	w0, w0, #0xff
  4216d4:	and	x0, x0, #0xff
  4216d8:	cmp	x0, #0x0
  4216dc:	b.eq	421708 <manager_start_scope+0x170>  // b.none
  4216e0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4216e4:	add	x1, x0, #0xb5b
  4216e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4216ec:	add	x4, x0, #0x3c8
  4216f0:	mov	w3, #0xe2a                 	// #3626
  4216f4:	mov	x2, x1
  4216f8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4216fc:	add	x1, x0, #0x4c0
  421700:	mov	w0, #0x0                   	// #0
  421704:	bl	407650 <log_assert_failed_realm@plt>
  421708:	ldr	x0, [sp, #120]
  42170c:	ldr	x6, [x0, #8]
  421710:	add	x1, sp, #0x90
  421714:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421718:	add	x5, x0, #0x4c8
  42171c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421720:	add	x4, x0, #0x728
  421724:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421728:	add	x3, x0, #0x750
  42172c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421730:	add	x2, x0, #0x770
  421734:	mov	x0, x6
  421738:	bl	407060 <sd_bus_message_new_method_call@plt>
  42173c:	str	w0, [sp, #128]
  421740:	ldr	w0, [sp, #128]
  421744:	cmp	w0, #0x0
  421748:	b.ge	421754 <manager_start_scope+0x1bc>  // b.tcont
  42174c:	ldr	w19, [sp, #128]
  421750:	b	421bf4 <manager_start_scope+0x65c>
  421754:	ldr	x19, [sp, #144]
  421758:	ldr	x0, [sp, #112]
  42175c:	bl	413dd0 <strempty>
  421760:	mov	x1, x0
  421764:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421768:	add	x3, x0, #0x4e0
  42176c:	mov	x2, x1
  421770:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421774:	add	x1, x0, #0x1a0
  421778:	mov	x0, x19
  42177c:	bl	407590 <sd_bus_message_append@plt>
  421780:	str	w0, [sp, #128]
  421784:	ldr	w0, [sp, #128]
  421788:	cmp	w0, #0x0
  42178c:	b.ge	421798 <manager_start_scope+0x200>  // b.tcont
  421790:	ldr	w19, [sp, #128]
  421794:	b	421bf4 <manager_start_scope+0x65c>
  421798:	ldr	x3, [sp, #144]
  42179c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4217a0:	add	x2, x0, #0x198
  4217a4:	mov	w1, #0x61                  	// #97
  4217a8:	mov	x0, x3
  4217ac:	bl	407490 <sd_bus_message_open_container@plt>
  4217b0:	str	w0, [sp, #128]
  4217b4:	ldr	w0, [sp, #128]
  4217b8:	cmp	w0, #0x0
  4217bc:	b.ge	4217c8 <manager_start_scope+0x230>  // b.tcont
  4217c0:	ldr	w19, [sp, #128]
  4217c4:	b	421bf4 <manager_start_scope+0x65c>
  4217c8:	ldr	x0, [sp, #96]
  4217cc:	bl	413e18 <isempty>
  4217d0:	and	w0, w0, #0xff
  4217d4:	eor	w0, w0, #0x1
  4217d8:	and	w0, w0, #0xff
  4217dc:	cmp	w0, #0x0
  4217e0:	b.eq	421824 <manager_start_scope+0x28c>  // b.none
  4217e4:	ldr	x5, [sp, #144]
  4217e8:	ldr	x4, [sp, #96]
  4217ec:	adrp	x0, 43e000 <__func__.12250+0x440>
  4217f0:	add	x3, x0, #0xd08
  4217f4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4217f8:	add	x2, x0, #0x4e8
  4217fc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421800:	add	x1, x0, #0x198
  421804:	mov	x0, x5
  421808:	bl	407590 <sd_bus_message_append@plt>
  42180c:	str	w0, [sp, #128]
  421810:	ldr	w0, [sp, #128]
  421814:	cmp	w0, #0x0
  421818:	b.ge	421824 <manager_start_scope+0x28c>  // b.tcont
  42181c:	ldr	w19, [sp, #128]
  421820:	b	421bf4 <manager_start_scope+0x65c>
  421824:	ldr	x0, [sp, #88]
  421828:	bl	413e18 <isempty>
  42182c:	and	w0, w0, #0xff
  421830:	eor	w0, w0, #0x1
  421834:	and	w0, w0, #0xff
  421838:	cmp	w0, #0x0
  42183c:	b.eq	421880 <manager_start_scope+0x2e8>  // b.none
  421840:	ldr	x5, [sp, #144]
  421844:	ldr	x4, [sp, #88]
  421848:	adrp	x0, 43e000 <__func__.12250+0x440>
  42184c:	add	x3, x0, #0xd08
  421850:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421854:	add	x2, x0, #0x4f0
  421858:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  42185c:	add	x1, x0, #0x198
  421860:	mov	x0, x5
  421864:	bl	407590 <sd_bus_message_append@plt>
  421868:	str	w0, [sp, #128]
  42186c:	ldr	w0, [sp, #128]
  421870:	cmp	w0, #0x0
  421874:	b.ge	421880 <manager_start_scope+0x2e8>  // b.tcont
  421878:	ldr	w19, [sp, #128]
  42187c:	b	421bf4 <manager_start_scope+0x65c>
  421880:	ldr	x0, [sp, #80]
  421884:	str	x0, [sp, #160]
  421888:	b	4218e4 <manager_start_scope+0x34c>
  42188c:	ldr	x6, [sp, #144]
  421890:	ldr	x0, [sp, #160]
  421894:	ldr	x0, [x0]
  421898:	mov	x5, x0
  42189c:	mov	w4, #0x1                   	// #1
  4218a0:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4218a4:	add	x3, x0, #0xc68
  4218a8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4218ac:	add	x2, x0, #0x500
  4218b0:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4218b4:	add	x1, x0, #0x198
  4218b8:	mov	x0, x6
  4218bc:	bl	407590 <sd_bus_message_append@plt>
  4218c0:	str	w0, [sp, #128]
  4218c4:	ldr	w0, [sp, #128]
  4218c8:	cmp	w0, #0x0
  4218cc:	b.ge	4218d8 <manager_start_scope+0x340>  // b.tcont
  4218d0:	ldr	w19, [sp, #128]
  4218d4:	b	421bf4 <manager_start_scope+0x65c>
  4218d8:	ldr	x0, [sp, #160]
  4218dc:	add	x0, x0, #0x8
  4218e0:	str	x0, [sp, #160]
  4218e4:	ldr	x0, [sp, #160]
  4218e8:	cmp	x0, #0x0
  4218ec:	b.eq	421900 <manager_start_scope+0x368>  // b.none
  4218f0:	ldr	x0, [sp, #160]
  4218f4:	ldr	x0, [x0]
  4218f8:	cmp	x0, #0x0
  4218fc:	b.ne	42188c <manager_start_scope+0x2f4>  // b.any
  421900:	ldr	x0, [sp, #72]
  421904:	str	x0, [sp, #160]
  421908:	b	421964 <manager_start_scope+0x3cc>
  42190c:	ldr	x6, [sp, #144]
  421910:	ldr	x0, [sp, #160]
  421914:	ldr	x0, [x0]
  421918:	mov	x5, x0
  42191c:	mov	w4, #0x1                   	// #1
  421920:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  421924:	add	x3, x0, #0xc68
  421928:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  42192c:	add	x2, x0, #0x508
  421930:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421934:	add	x1, x0, #0x198
  421938:	mov	x0, x6
  42193c:	bl	407590 <sd_bus_message_append@plt>
  421940:	str	w0, [sp, #128]
  421944:	ldr	w0, [sp, #128]
  421948:	cmp	w0, #0x0
  42194c:	b.ge	421958 <manager_start_scope+0x3c0>  // b.tcont
  421950:	ldr	w19, [sp, #128]
  421954:	b	421bf4 <manager_start_scope+0x65c>
  421958:	ldr	x0, [sp, #160]
  42195c:	add	x0, x0, #0x8
  421960:	str	x0, [sp, #160]
  421964:	ldr	x0, [sp, #160]
  421968:	cmp	x0, #0x0
  42196c:	b.eq	421980 <manager_start_scope+0x3e8>  // b.none
  421970:	ldr	x0, [sp, #160]
  421974:	ldr	x0, [x0]
  421978:	cmp	x0, #0x0
  42197c:	b.ne	42190c <manager_start_scope+0x374>  // b.any
  421980:	ldr	x0, [sp, #64]
  421984:	bl	407f70 <empty_or_root@plt>
  421988:	and	w0, w0, #0xff
  42198c:	eor	w0, w0, #0x1
  421990:	and	w0, w0, #0xff
  421994:	cmp	w0, #0x0
  421998:	b.eq	4219e0 <manager_start_scope+0x448>  // b.none
  42199c:	ldr	x6, [sp, #144]
  4219a0:	ldr	x5, [sp, #64]
  4219a4:	mov	w4, #0x1                   	// #1
  4219a8:	adrp	x0, 440000 <__PRETTY_FUNCTION__.13691+0x15a8>
  4219ac:	add	x3, x0, #0xc68
  4219b0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4219b4:	add	x2, x0, #0x510
  4219b8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4219bc:	add	x1, x0, #0x198
  4219c0:	mov	x0, x6
  4219c4:	bl	407590 <sd_bus_message_append@plt>
  4219c8:	str	w0, [sp, #128]
  4219cc:	ldr	w0, [sp, #128]
  4219d0:	cmp	w0, #0x0
  4219d4:	b.ge	4219e0 <manager_start_scope+0x448>  // b.tcont
  4219d8:	ldr	w19, [sp, #128]
  4219dc:	b	421bf4 <manager_start_scope+0x65c>
  4219e0:	ldr	x5, [sp, #144]
  4219e4:	mov	w4, #0x1                   	// #1
  4219e8:	adrp	x0, 43e000 <__func__.12250+0x440>
  4219ec:	add	x3, x0, #0xd20
  4219f0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4219f4:	add	x2, x0, #0x528
  4219f8:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4219fc:	add	x1, x0, #0x198
  421a00:	mov	x0, x5
  421a04:	bl	407590 <sd_bus_message_append@plt>
  421a08:	str	w0, [sp, #128]
  421a0c:	ldr	w0, [sp, #128]
  421a10:	cmp	w0, #0x0
  421a14:	b.ge	421a20 <manager_start_scope+0x488>  // b.tcont
  421a18:	ldr	w19, [sp, #128]
  421a1c:	b	421bf4 <manager_start_scope+0x65c>
  421a20:	ldr	x6, [sp, #144]
  421a24:	ldr	w5, [sp, #108]
  421a28:	mov	w4, #0x1                   	// #1
  421a2c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421a30:	add	x3, x0, #0x538
  421a34:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421a38:	add	x2, x0, #0x540
  421a3c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421a40:	add	x1, x0, #0x198
  421a44:	mov	x0, x6
  421a48:	bl	407590 <sd_bus_message_append@plt>
  421a4c:	str	w0, [sp, #128]
  421a50:	ldr	w0, [sp, #128]
  421a54:	cmp	w0, #0x0
  421a58:	b.ge	421a64 <manager_start_scope+0x4cc>  // b.tcont
  421a5c:	ldr	w19, [sp, #128]
  421a60:	b	421bf4 <manager_start_scope+0x65c>
  421a64:	ldr	x5, [sp, #144]
  421a68:	mov	x4, #0xffffffffffffffff    	// #-1
  421a6c:	adrp	x0, 43e000 <__func__.12250+0x440>
  421a70:	add	x3, x0, #0xd38
  421a74:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421a78:	add	x2, x0, #0x548
  421a7c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421a80:	add	x1, x0, #0x198
  421a84:	mov	x0, x5
  421a88:	bl	407590 <sd_bus_message_append@plt>
  421a8c:	str	w0, [sp, #128]
  421a90:	ldr	w0, [sp, #128]
  421a94:	cmp	w0, #0x0
  421a98:	b.ge	421b28 <manager_start_scope+0x590>  // b.tcont
  421a9c:	mov	w0, #0x3                   	// #3
  421aa0:	str	w0, [sp, #132]
  421aa4:	ldr	w0, [sp, #128]
  421aa8:	str	w0, [sp, #136]
  421aac:	str	wzr, [sp, #140]
  421ab0:	ldr	w0, [sp, #140]
  421ab4:	bl	4083e0 <log_get_max_level_realm@plt>
  421ab8:	mov	w1, w0
  421abc:	ldr	w0, [sp, #132]
  421ac0:	and	w0, w0, #0x7
  421ac4:	cmp	w1, w0
  421ac8:	b.lt	421b10 <manager_start_scope+0x578>  // b.tstop
  421acc:	ldr	w0, [sp, #140]
  421ad0:	lsl	w1, w0, #10
  421ad4:	ldr	w0, [sp, #132]
  421ad8:	orr	w6, w1, w0
  421adc:	adrp	x0, 43e000 <__func__.12250+0x440>
  421ae0:	add	x1, x0, #0xb5b
  421ae4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421ae8:	add	x5, x0, #0x558
  421aec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421af0:	add	x4, x0, #0x3e0
  421af4:	mov	w3, #0xe69                 	// #3689
  421af8:	mov	x2, x1
  421afc:	ldr	w1, [sp, #136]
  421b00:	mov	w0, w6
  421b04:	bl	407d60 <log_internal_realm@plt>
  421b08:	mov	w19, w0
  421b0c:	b	421bf4 <manager_start_scope+0x65c>
  421b10:	ldr	w0, [sp, #136]
  421b14:	cmp	w0, #0x0
  421b18:	cneg	w0, w0, lt  // lt = tstop
  421b1c:	and	w0, w0, #0xff
  421b20:	neg	w19, w0
  421b24:	b	421bf4 <manager_start_scope+0x65c>
  421b28:	ldr	x0, [sp, #56]
  421b2c:	cmp	x0, #0x0
  421b30:	b.eq	421b5c <manager_start_scope+0x5c4>  // b.none
  421b34:	ldr	x0, [sp, #144]
  421b38:	mov	w2, #0x1                   	// #1
  421b3c:	ldr	x1, [sp, #56]
  421b40:	bl	407bf0 <sd_bus_message_copy@plt>
  421b44:	str	w0, [sp, #128]
  421b48:	ldr	w0, [sp, #128]
  421b4c:	cmp	w0, #0x0
  421b50:	b.ge	421b5c <manager_start_scope+0x5c4>  // b.tcont
  421b54:	ldr	w19, [sp, #128]
  421b58:	b	421bf4 <manager_start_scope+0x65c>
  421b5c:	ldr	x0, [sp, #144]
  421b60:	bl	408420 <sd_bus_message_close_container@plt>
  421b64:	str	w0, [sp, #128]
  421b68:	ldr	w0, [sp, #128]
  421b6c:	cmp	w0, #0x0
  421b70:	b.ge	421b7c <manager_start_scope+0x5e4>  // b.tcont
  421b74:	ldr	w19, [sp, #128]
  421b78:	b	421bf4 <manager_start_scope+0x65c>
  421b7c:	ldr	x3, [sp, #144]
  421b80:	mov	w2, #0x0                   	// #0
  421b84:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421b88:	add	x1, x0, #0x580
  421b8c:	mov	x0, x3
  421b90:	bl	407590 <sd_bus_message_append@plt>
  421b94:	str	w0, [sp, #128]
  421b98:	ldr	w0, [sp, #128]
  421b9c:	cmp	w0, #0x0
  421ba0:	b.ge	421bac <manager_start_scope+0x614>  // b.tcont
  421ba4:	ldr	w19, [sp, #128]
  421ba8:	b	421bf4 <manager_start_scope+0x65c>
  421bac:	ldr	x0, [sp, #120]
  421bb0:	ldr	x0, [x0, #8]
  421bb4:	ldr	x1, [sp, #144]
  421bb8:	add	x2, sp, #0x98
  421bbc:	mov	x4, x2
  421bc0:	ldr	x3, [sp, #48]
  421bc4:	mov	x2, #0x0                   	// #0
  421bc8:	bl	407ca0 <sd_bus_call@plt>
  421bcc:	str	w0, [sp, #128]
  421bd0:	ldr	w0, [sp, #128]
  421bd4:	cmp	w0, #0x0
  421bd8:	b.ge	421be4 <manager_start_scope+0x64c>  // b.tcont
  421bdc:	ldr	w19, [sp, #128]
  421be0:	b	421bf4 <manager_start_scope+0x65c>
  421be4:	ldr	x0, [sp, #152]
  421be8:	ldr	x1, [sp, #40]
  421bec:	bl	4214e4 <strdup_job>
  421bf0:	mov	w19, w0
  421bf4:	add	x0, sp, #0x98
  421bf8:	bl	413f5c <sd_bus_message_unrefp>
  421bfc:	add	x0, sp, #0x90
  421c00:	bl	413f5c <sd_bus_message_unrefp>
  421c04:	mov	w1, w19
  421c08:	adrp	x0, 460000 <wordlist.10364+0x370>
  421c0c:	ldr	x0, [x0, #4024]
  421c10:	ldr	x2, [sp, #168]
  421c14:	ldr	x0, [x0]
  421c18:	eor	x0, x2, x0
  421c1c:	cmp	x0, #0x0
  421c20:	b.eq	421c28 <manager_start_scope+0x690>  // b.none
  421c24:	bl	407b20 <__stack_chk_fail@plt>
  421c28:	mov	w0, w1
  421c2c:	ldr	x19, [sp, #16]
  421c30:	ldp	x29, x30, [sp], #176
  421c34:	ret

0000000000421c38 <manager_start_unit>:
  421c38:	sub	sp, sp, #0x70
  421c3c:	stp	x29, x30, [sp, #16]
  421c40:	add	x29, sp, #0x10
  421c44:	str	x19, [sp, #32]
  421c48:	str	x0, [sp, #72]
  421c4c:	str	x1, [sp, #64]
  421c50:	str	x2, [sp, #56]
  421c54:	str	x3, [sp, #48]
  421c58:	adrp	x0, 460000 <wordlist.10364+0x370>
  421c5c:	ldr	x0, [x0, #4024]
  421c60:	ldr	x1, [x0]
  421c64:	str	x1, [sp, #104]
  421c68:	mov	x1, #0x0                   	// #0
  421c6c:	str	xzr, [sp, #96]
  421c70:	ldr	x0, [sp, #72]
  421c74:	cmp	x0, #0x0
  421c78:	cset	w0, eq  // eq = none
  421c7c:	and	w0, w0, #0xff
  421c80:	and	x0, x0, #0xff
  421c84:	cmp	x0, #0x0
  421c88:	b.eq	421cb4 <manager_start_unit+0x7c>  // b.none
  421c8c:	adrp	x0, 43e000 <__func__.12250+0x440>
  421c90:	add	x1, x0, #0xb5b
  421c94:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421c98:	add	x4, x0, #0x3f8
  421c9c:	mov	w3, #0xe85                 	// #3717
  421ca0:	mov	x2, x1
  421ca4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421ca8:	add	x1, x0, #0x7a8
  421cac:	mov	w0, #0x0                   	// #0
  421cb0:	bl	407650 <log_assert_failed_realm@plt>
  421cb4:	ldr	x0, [sp, #64]
  421cb8:	cmp	x0, #0x0
  421cbc:	cset	w0, eq  // eq = none
  421cc0:	and	w0, w0, #0xff
  421cc4:	and	x0, x0, #0xff
  421cc8:	cmp	x0, #0x0
  421ccc:	b.eq	421cf8 <manager_start_unit+0xc0>  // b.none
  421cd0:	adrp	x0, 43e000 <__func__.12250+0x440>
  421cd4:	add	x1, x0, #0xb5b
  421cd8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421cdc:	add	x4, x0, #0x3f8
  421ce0:	mov	w3, #0xe86                 	// #3718
  421ce4:	mov	x2, x1
  421ce8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421cec:	add	x1, x0, #0x370
  421cf0:	mov	w0, #0x0                   	// #0
  421cf4:	bl	407650 <log_assert_failed_realm@plt>
  421cf8:	ldr	x0, [sp, #48]
  421cfc:	cmp	x0, #0x0
  421d00:	cset	w0, eq  // eq = none
  421d04:	and	w0, w0, #0xff
  421d08:	and	x0, x0, #0xff
  421d0c:	cmp	x0, #0x0
  421d10:	b.eq	421d3c <manager_start_unit+0x104>  // b.none
  421d14:	adrp	x0, 43e000 <__func__.12250+0x440>
  421d18:	add	x1, x0, #0xb5b
  421d1c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421d20:	add	x4, x0, #0x3f8
  421d24:	mov	w3, #0xe87                 	// #3719
  421d28:	mov	x2, x1
  421d2c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421d30:	add	x1, x0, #0x4c0
  421d34:	mov	w0, #0x0                   	// #0
  421d38:	bl	407650 <log_assert_failed_realm@plt>
  421d3c:	ldr	x0, [sp, #72]
  421d40:	ldr	x8, [x0, #8]
  421d44:	add	x1, sp, #0x60
  421d48:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421d4c:	add	x0, x0, #0x590
  421d50:	str	x0, [sp, #8]
  421d54:	ldr	x0, [sp, #64]
  421d58:	str	x0, [sp]
  421d5c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421d60:	add	x7, x0, #0x1a0
  421d64:	mov	x6, x1
  421d68:	ldr	x5, [sp, #56]
  421d6c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421d70:	add	x4, x0, #0x718
  421d74:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421d78:	add	x3, x0, #0x728
  421d7c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421d80:	add	x2, x0, #0x750
  421d84:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421d88:	add	x1, x0, #0x770
  421d8c:	mov	x0, x8
  421d90:	bl	4082b0 <sd_bus_call_method@plt>
  421d94:	str	w0, [sp, #92]
  421d98:	ldr	w0, [sp, #92]
  421d9c:	cmp	w0, #0x0
  421da0:	b.ge	421dac <manager_start_unit+0x174>  // b.tcont
  421da4:	ldr	w19, [sp, #92]
  421da8:	b	421dbc <manager_start_unit+0x184>
  421dac:	ldr	x0, [sp, #96]
  421db0:	ldr	x1, [sp, #48]
  421db4:	bl	4214e4 <strdup_job>
  421db8:	mov	w19, w0
  421dbc:	add	x0, sp, #0x60
  421dc0:	bl	413f5c <sd_bus_message_unrefp>
  421dc4:	mov	w1, w19
  421dc8:	adrp	x0, 460000 <wordlist.10364+0x370>
  421dcc:	ldr	x0, [x0, #4024]
  421dd0:	ldr	x2, [sp, #104]
  421dd4:	ldr	x0, [x0]
  421dd8:	eor	x0, x2, x0
  421ddc:	cmp	x0, #0x0
  421de0:	b.eq	421de8 <manager_start_unit+0x1b0>  // b.none
  421de4:	bl	407b20 <__stack_chk_fail@plt>
  421de8:	mov	w0, w1
  421dec:	ldr	x19, [sp, #32]
  421df0:	ldp	x29, x30, [sp, #16]
  421df4:	add	sp, sp, #0x70
  421df8:	ret

0000000000421dfc <manager_stop_unit>:
  421dfc:	sub	sp, sp, #0x70
  421e00:	stp	x29, x30, [sp, #16]
  421e04:	add	x29, sp, #0x10
  421e08:	str	x19, [sp, #32]
  421e0c:	str	x0, [sp, #72]
  421e10:	str	x1, [sp, #64]
  421e14:	str	x2, [sp, #56]
  421e18:	str	x3, [sp, #48]
  421e1c:	adrp	x0, 460000 <wordlist.10364+0x370>
  421e20:	ldr	x0, [x0, #4024]
  421e24:	ldr	x1, [x0]
  421e28:	str	x1, [sp, #104]
  421e2c:	mov	x1, #0x0                   	// #0
  421e30:	str	xzr, [sp, #96]
  421e34:	ldr	x0, [sp, #72]
  421e38:	cmp	x0, #0x0
  421e3c:	cset	w0, eq  // eq = none
  421e40:	and	w0, w0, #0xff
  421e44:	and	x0, x0, #0xff
  421e48:	cmp	x0, #0x0
  421e4c:	b.eq	421e78 <manager_stop_unit+0x7c>  // b.none
  421e50:	adrp	x0, 43e000 <__func__.12250+0x440>
  421e54:	add	x1, x0, #0xb5b
  421e58:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421e5c:	add	x4, x0, #0x410
  421e60:	mov	w3, #0xe9c                 	// #3740
  421e64:	mov	x2, x1
  421e68:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421e6c:	add	x1, x0, #0x7a8
  421e70:	mov	w0, #0x0                   	// #0
  421e74:	bl	407650 <log_assert_failed_realm@plt>
  421e78:	ldr	x0, [sp, #64]
  421e7c:	cmp	x0, #0x0
  421e80:	cset	w0, eq  // eq = none
  421e84:	and	w0, w0, #0xff
  421e88:	and	x0, x0, #0xff
  421e8c:	cmp	x0, #0x0
  421e90:	b.eq	421ebc <manager_stop_unit+0xc0>  // b.none
  421e94:	adrp	x0, 43e000 <__func__.12250+0x440>
  421e98:	add	x1, x0, #0xb5b
  421e9c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421ea0:	add	x4, x0, #0x410
  421ea4:	mov	w3, #0xe9d                 	// #3741
  421ea8:	mov	x2, x1
  421eac:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421eb0:	add	x1, x0, #0x370
  421eb4:	mov	w0, #0x0                   	// #0
  421eb8:	bl	407650 <log_assert_failed_realm@plt>
  421ebc:	ldr	x0, [sp, #48]
  421ec0:	cmp	x0, #0x0
  421ec4:	cset	w0, eq  // eq = none
  421ec8:	and	w0, w0, #0xff
  421ecc:	and	x0, x0, #0xff
  421ed0:	cmp	x0, #0x0
  421ed4:	b.eq	421f00 <manager_stop_unit+0x104>  // b.none
  421ed8:	adrp	x0, 43e000 <__func__.12250+0x440>
  421edc:	add	x1, x0, #0xb5b
  421ee0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  421ee4:	add	x4, x0, #0x410
  421ee8:	mov	w3, #0xe9e                 	// #3742
  421eec:	mov	x2, x1
  421ef0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421ef4:	add	x1, x0, #0x4c0
  421ef8:	mov	w0, #0x0                   	// #0
  421efc:	bl	407650 <log_assert_failed_realm@plt>
  421f00:	ldr	x0, [sp, #72]
  421f04:	ldr	x8, [x0, #8]
  421f08:	add	x1, sp, #0x60
  421f0c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421f10:	add	x0, x0, #0x4e0
  421f14:	str	x0, [sp, #8]
  421f18:	ldr	x0, [sp, #64]
  421f1c:	str	x0, [sp]
  421f20:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421f24:	add	x7, x0, #0x1a0
  421f28:	mov	x6, x1
  421f2c:	ldr	x5, [sp, #56]
  421f30:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421f34:	add	x4, x0, #0x598
  421f38:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421f3c:	add	x3, x0, #0x728
  421f40:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421f44:	add	x2, x0, #0x750
  421f48:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  421f4c:	add	x1, x0, #0x770
  421f50:	mov	x0, x8
  421f54:	bl	4082b0 <sd_bus_call_method@plt>
  421f58:	str	w0, [sp, #92]
  421f5c:	ldr	w0, [sp, #92]
  421f60:	cmp	w0, #0x0
  421f64:	b.ge	421fb8 <manager_stop_unit+0x1bc>  // b.tcont
  421f68:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421f6c:	add	x1, x0, #0x5a8
  421f70:	ldr	x0, [sp, #56]
  421f74:	bl	407fb0 <sd_bus_error_has_name@plt>
  421f78:	cmp	w0, #0x0
  421f7c:	b.ne	421f98 <manager_stop_unit+0x19c>  // b.any
  421f80:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  421f84:	add	x1, x0, #0x5d0
  421f88:	ldr	x0, [sp, #56]
  421f8c:	bl	407fb0 <sd_bus_error_has_name@plt>
  421f90:	cmp	w0, #0x0
  421f94:	b.eq	421fb0 <manager_stop_unit+0x1b4>  // b.none
  421f98:	ldr	x0, [sp, #48]
  421f9c:	str	xzr, [x0]
  421fa0:	ldr	x0, [sp, #56]
  421fa4:	bl	407c80 <sd_bus_error_free@plt>
  421fa8:	mov	w19, #0x0                   	// #0
  421fac:	b	421fc8 <manager_stop_unit+0x1cc>
  421fb0:	ldr	w19, [sp, #92]
  421fb4:	b	421fc8 <manager_stop_unit+0x1cc>
  421fb8:	ldr	x0, [sp, #96]
  421fbc:	ldr	x1, [sp, #48]
  421fc0:	bl	4214e4 <strdup_job>
  421fc4:	mov	w19, w0
  421fc8:	add	x0, sp, #0x60
  421fcc:	bl	413f5c <sd_bus_message_unrefp>
  421fd0:	mov	w1, w19
  421fd4:	adrp	x0, 460000 <wordlist.10364+0x370>
  421fd8:	ldr	x0, [x0, #4024]
  421fdc:	ldr	x2, [sp, #104]
  421fe0:	ldr	x0, [x0]
  421fe4:	eor	x0, x2, x0
  421fe8:	cmp	x0, #0x0
  421fec:	b.eq	421ff4 <manager_stop_unit+0x1f8>  // b.none
  421ff0:	bl	407b20 <__stack_chk_fail@plt>
  421ff4:	mov	w0, w1
  421ff8:	ldr	x19, [sp, #32]
  421ffc:	ldp	x29, x30, [sp, #16]
  422000:	add	sp, sp, #0x70
  422004:	ret

0000000000422008 <manager_abandon_scope>:
  422008:	stp	x29, x30, [sp, #-112]!
  42200c:	mov	x29, sp
  422010:	str	x19, [sp, #16]
  422014:	str	x0, [sp, #56]
  422018:	str	x1, [sp, #48]
  42201c:	str	x2, [sp, #40]
  422020:	adrp	x0, 460000 <wordlist.10364+0x370>
  422024:	ldr	x0, [x0, #4024]
  422028:	ldr	x1, [x0]
  42202c:	str	x1, [sp, #104]
  422030:	mov	x1, #0x0                   	// #0
  422034:	str	xzr, [sp, #80]
  422038:	str	xzr, [sp, #88]
  42203c:	str	wzr, [sp, #96]
  422040:	str	xzr, [sp, #72]
  422044:	ldr	x0, [sp, #56]
  422048:	cmp	x0, #0x0
  42204c:	cset	w0, eq  // eq = none
  422050:	and	w0, w0, #0xff
  422054:	and	x0, x0, #0xff
  422058:	cmp	x0, #0x0
  42205c:	b.eq	422088 <manager_abandon_scope+0x80>  // b.none
  422060:	adrp	x0, 43e000 <__func__.12250+0x440>
  422064:	add	x1, x0, #0xb5b
  422068:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42206c:	add	x4, x0, #0x428
  422070:	mov	w3, #0xebd                 	// #3773
  422074:	mov	x2, x1
  422078:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  42207c:	add	x1, x0, #0x7a8
  422080:	mov	w0, #0x0                   	// #0
  422084:	bl	407650 <log_assert_failed_realm@plt>
  422088:	ldr	x0, [sp, #48]
  42208c:	cmp	x0, #0x0
  422090:	cset	w0, eq  // eq = none
  422094:	and	w0, w0, #0xff
  422098:	and	x0, x0, #0xff
  42209c:	cmp	x0, #0x0
  4220a0:	b.eq	4220cc <manager_abandon_scope+0xc4>  // b.none
  4220a4:	adrp	x0, 43e000 <__func__.12250+0x440>
  4220a8:	add	x1, x0, #0xb5b
  4220ac:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4220b0:	add	x4, x0, #0x428
  4220b4:	mov	w3, #0xebe                 	// #3774
  4220b8:	mov	x2, x1
  4220bc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4220c0:	add	x1, x0, #0x4b0
  4220c4:	mov	w0, #0x0                   	// #0
  4220c8:	bl	407650 <log_assert_failed_realm@plt>
  4220cc:	ldr	x0, [sp, #48]
  4220d0:	bl	407030 <unit_dbus_path_from_name@plt>
  4220d4:	str	x0, [sp, #72]
  4220d8:	ldr	x0, [sp, #72]
  4220dc:	cmp	x0, #0x0
  4220e0:	b.ne	4220ec <manager_abandon_scope+0xe4>  // b.any
  4220e4:	mov	w19, #0xfffffff4            	// #-12
  4220e8:	b	4221b4 <manager_abandon_scope+0x1ac>
  4220ec:	ldr	x0, [sp, #56]
  4220f0:	ldr	x8, [x0, #8]
  4220f4:	ldr	x1, [sp, #72]
  4220f8:	add	x0, sp, #0x50
  4220fc:	mov	x7, #0x0                   	// #0
  422100:	mov	x6, #0x0                   	// #0
  422104:	mov	x5, x0
  422108:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  42210c:	add	x4, x0, #0x5f8
  422110:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422114:	add	x3, x0, #0x600
  422118:	mov	x2, x1
  42211c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422120:	add	x1, x0, #0x770
  422124:	mov	x0, x8
  422128:	bl	4082b0 <sd_bus_call_method@plt>
  42212c:	str	w0, [sp, #68]
  422130:	ldr	w0, [sp, #68]
  422134:	cmp	w0, #0x0
  422138:	b.ge	4221b0 <manager_abandon_scope+0x1a8>  // b.tcont
  42213c:	add	x2, sp, #0x50
  422140:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422144:	add	x1, x0, #0x5a8
  422148:	mov	x0, x2
  42214c:	bl	407fb0 <sd_bus_error_has_name@plt>
  422150:	cmp	w0, #0x0
  422154:	b.ne	422190 <manager_abandon_scope+0x188>  // b.any
  422158:	add	x2, sp, #0x50
  42215c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422160:	add	x1, x0, #0x5d0
  422164:	mov	x0, x2
  422168:	bl	407fb0 <sd_bus_error_has_name@plt>
  42216c:	cmp	w0, #0x0
  422170:	b.ne	422190 <manager_abandon_scope+0x188>  // b.any
  422174:	add	x2, sp, #0x50
  422178:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  42217c:	add	x1, x0, #0x620
  422180:	mov	x0, x2
  422184:	bl	407fb0 <sd_bus_error_has_name@plt>
  422188:	cmp	w0, #0x0
  42218c:	b.eq	422198 <manager_abandon_scope+0x190>  // b.none
  422190:	mov	w19, #0x0                   	// #0
  422194:	b	4221b4 <manager_abandon_scope+0x1ac>
  422198:	add	x0, sp, #0x50
  42219c:	mov	x1, x0
  4221a0:	ldr	x0, [sp, #40]
  4221a4:	bl	407780 <sd_bus_error_move@plt>
  4221a8:	ldr	w19, [sp, #68]
  4221ac:	b	4221b4 <manager_abandon_scope+0x1ac>
  4221b0:	mov	w19, #0x1                   	// #1
  4221b4:	add	x0, sp, #0x48
  4221b8:	bl	413cc4 <freep>
  4221bc:	add	x0, sp, #0x50
  4221c0:	bl	407c80 <sd_bus_error_free@plt>
  4221c4:	mov	w1, w19
  4221c8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4221cc:	ldr	x0, [x0, #4024]
  4221d0:	ldr	x2, [sp, #104]
  4221d4:	ldr	x0, [x0]
  4221d8:	eor	x0, x2, x0
  4221dc:	cmp	x0, #0x0
  4221e0:	b.eq	4221e8 <manager_abandon_scope+0x1e0>  // b.none
  4221e4:	bl	407b20 <__stack_chk_fail@plt>
  4221e8:	mov	w0, w1
  4221ec:	ldr	x19, [sp, #16]
  4221f0:	ldp	x29, x30, [sp], #112
  4221f4:	ret

00000000004221f8 <manager_kill_unit>:
  4221f8:	sub	sp, sp, #0x50
  4221fc:	stp	x29, x30, [sp, #32]
  422200:	add	x29, sp, #0x20
  422204:	str	x0, [sp, #72]
  422208:	str	x1, [sp, #64]
  42220c:	str	w2, [sp, #60]
  422210:	str	w3, [sp, #56]
  422214:	str	x4, [sp, #48]
  422218:	ldr	x0, [sp, #72]
  42221c:	cmp	x0, #0x0
  422220:	cset	w0, eq  // eq = none
  422224:	and	w0, w0, #0xff
  422228:	and	x0, x0, #0xff
  42222c:	cmp	x0, #0x0
  422230:	b.eq	42225c <manager_kill_unit+0x64>  // b.none
  422234:	adrp	x0, 43e000 <__func__.12250+0x440>
  422238:	add	x1, x0, #0xb5b
  42223c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422240:	add	x4, x0, #0x440
  422244:	mov	w3, #0xedb                 	// #3803
  422248:	mov	x2, x1
  42224c:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422250:	add	x1, x0, #0x7a8
  422254:	mov	w0, #0x0                   	// #0
  422258:	bl	407650 <log_assert_failed_realm@plt>
  42225c:	ldr	x0, [sp, #64]
  422260:	cmp	x0, #0x0
  422264:	cset	w0, eq  // eq = none
  422268:	and	w0, w0, #0xff
  42226c:	and	x0, x0, #0xff
  422270:	cmp	x0, #0x0
  422274:	b.eq	4222a0 <manager_kill_unit+0xa8>  // b.none
  422278:	adrp	x0, 43e000 <__func__.12250+0x440>
  42227c:	add	x1, x0, #0xb5b
  422280:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422284:	add	x4, x0, #0x440
  422288:	mov	w3, #0xedc                 	// #3804
  42228c:	mov	x2, x1
  422290:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422294:	add	x1, x0, #0x370
  422298:	mov	w0, #0x0                   	// #0
  42229c:	bl	407650 <log_assert_failed_realm@plt>
  4222a0:	ldr	x0, [sp, #72]
  4222a4:	ldr	x8, [x0, #8]
  4222a8:	ldr	w0, [sp, #60]
  4222ac:	cmp	w0, #0x0
  4222b0:	b.ne	4222c0 <manager_kill_unit+0xc8>  // b.any
  4222b4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4222b8:	add	x0, x0, #0x650
  4222bc:	b	4222c8 <manager_kill_unit+0xd0>
  4222c0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4222c4:	add	x0, x0, #0x658
  4222c8:	ldr	w1, [sp, #56]
  4222cc:	str	w1, [sp, #16]
  4222d0:	str	x0, [sp, #8]
  4222d4:	ldr	x0, [sp, #64]
  4222d8:	str	x0, [sp]
  4222dc:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4222e0:	add	x7, x0, #0x80
  4222e4:	mov	x6, #0x0                   	// #0
  4222e8:	ldr	x5, [sp, #48]
  4222ec:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4222f0:	add	x4, x0, #0x660
  4222f4:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4222f8:	add	x3, x0, #0x728
  4222fc:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422300:	add	x2, x0, #0x750
  422304:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422308:	add	x1, x0, #0x770
  42230c:	mov	x0, x8
  422310:	bl	4082b0 <sd_bus_call_method@plt>
  422314:	ldp	x29, x30, [sp, #32]
  422318:	add	sp, sp, #0x50
  42231c:	ret

0000000000422320 <manager_unit_is_active>:
  422320:	stp	x29, x30, [sp, #-160]!
  422324:	mov	x29, sp
  422328:	str	x19, [sp, #16]
  42232c:	str	x0, [sp, #56]
  422330:	str	x1, [sp, #48]
  422334:	str	x2, [sp, #40]
  422338:	adrp	x0, 460000 <wordlist.10364+0x370>
  42233c:	ldr	x0, [x0, #4024]
  422340:	ldr	x1, [x0]
  422344:	str	x1, [sp, #152]
  422348:	mov	x1, #0x0                   	// #0
  42234c:	str	xzr, [sp, #104]
  422350:	str	xzr, [sp, #112]
  422354:	str	wzr, [sp, #120]
  422358:	str	xzr, [sp, #80]
  42235c:	str	xzr, [sp, #88]
  422360:	ldr	x0, [sp, #56]
  422364:	cmp	x0, #0x0
  422368:	cset	w0, eq  // eq = none
  42236c:	and	w0, w0, #0xff
  422370:	and	x0, x0, #0xff
  422374:	cmp	x0, #0x0
  422378:	b.eq	4223a4 <manager_unit_is_active+0x84>  // b.none
  42237c:	adrp	x0, 43e000 <__func__.12250+0x440>
  422380:	add	x1, x0, #0xb5b
  422384:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422388:	add	x4, x0, #0x458
  42238c:	mov	w3, #0xef0                 	// #3824
  422390:	mov	x2, x1
  422394:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422398:	add	x1, x0, #0x7a8
  42239c:	mov	w0, #0x0                   	// #0
  4223a0:	bl	407650 <log_assert_failed_realm@plt>
  4223a4:	ldr	x0, [sp, #48]
  4223a8:	cmp	x0, #0x0
  4223ac:	cset	w0, eq  // eq = none
  4223b0:	and	w0, w0, #0xff
  4223b4:	and	x0, x0, #0xff
  4223b8:	cmp	x0, #0x0
  4223bc:	b.eq	4223e8 <manager_unit_is_active+0xc8>  // b.none
  4223c0:	adrp	x0, 43e000 <__func__.12250+0x440>
  4223c4:	add	x1, x0, #0xb5b
  4223c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4223cc:	add	x4, x0, #0x458
  4223d0:	mov	w3, #0xef1                 	// #3825
  4223d4:	mov	x2, x1
  4223d8:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4223dc:	add	x1, x0, #0x370
  4223e0:	mov	w0, #0x0                   	// #0
  4223e4:	bl	407650 <log_assert_failed_realm@plt>
  4223e8:	ldr	x0, [sp, #48]
  4223ec:	bl	407030 <unit_dbus_path_from_name@plt>
  4223f0:	str	x0, [sp, #88]
  4223f4:	ldr	x0, [sp, #88]
  4223f8:	cmp	x0, #0x0
  4223fc:	b.ne	422408 <manager_unit_is_active+0xe8>  // b.any
  422400:	mov	w19, #0xfffffff4            	// #-12
  422404:	b	422568 <manager_unit_is_active+0x248>
  422408:	ldr	x0, [sp, #56]
  42240c:	ldr	x8, [x0, #8]
  422410:	ldr	x1, [sp, #88]
  422414:	add	x3, sp, #0x50
  422418:	add	x2, sp, #0x68
  42241c:	adrp	x0, 43e000 <__func__.12250+0x440>
  422420:	add	x7, x0, #0xd08
  422424:	mov	x6, x3
  422428:	mov	x5, x2
  42242c:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422430:	add	x4, x0, #0x670
  422434:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422438:	add	x3, x0, #0x680
  42243c:	mov	x2, x1
  422440:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422444:	add	x1, x0, #0x770
  422448:	mov	x0, x8
  42244c:	bl	407680 <sd_bus_get_property@plt>
  422450:	str	w0, [sp, #76]
  422454:	ldr	w0, [sp, #76]
  422458:	cmp	w0, #0x0
  42245c:	b.ge	4224f8 <manager_unit_is_active+0x1d8>  // b.tcont
  422460:	add	x2, sp, #0x68
  422464:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422468:	add	x1, x0, #0x6a0
  42246c:	mov	x0, x2
  422470:	bl	407fb0 <sd_bus_error_has_name@plt>
  422474:	cmp	w0, #0x0
  422478:	b.ne	422498 <manager_unit_is_active+0x178>  // b.any
  42247c:	add	x2, sp, #0x68
  422480:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422484:	add	x1, x0, #0x6c8
  422488:	mov	x0, x2
  42248c:	bl	407fb0 <sd_bus_error_has_name@plt>
  422490:	cmp	w0, #0x0
  422494:	b.eq	4224a0 <manager_unit_is_active+0x180>  // b.none
  422498:	mov	w19, #0x1                   	// #1
  42249c:	b	422568 <manager_unit_is_active+0x248>
  4224a0:	add	x2, sp, #0x68
  4224a4:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4224a8:	add	x1, x0, #0x5a8
  4224ac:	mov	x0, x2
  4224b0:	bl	407fb0 <sd_bus_error_has_name@plt>
  4224b4:	cmp	w0, #0x0
  4224b8:	b.ne	4224d8 <manager_unit_is_active+0x1b8>  // b.any
  4224bc:	add	x2, sp, #0x68
  4224c0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4224c4:	add	x1, x0, #0x5d0
  4224c8:	mov	x0, x2
  4224cc:	bl	407fb0 <sd_bus_error_has_name@plt>
  4224d0:	cmp	w0, #0x0
  4224d4:	b.eq	4224e0 <manager_unit_is_active+0x1c0>  // b.none
  4224d8:	mov	w19, #0x0                   	// #0
  4224dc:	b	422568 <manager_unit_is_active+0x248>
  4224e0:	add	x0, sp, #0x68
  4224e4:	mov	x1, x0
  4224e8:	ldr	x0, [sp, #40]
  4224ec:	bl	407780 <sd_bus_error_move@plt>
  4224f0:	ldr	w19, [sp, #76]
  4224f4:	b	422568 <manager_unit_is_active+0x248>
  4224f8:	ldr	x3, [sp, #80]
  4224fc:	add	x0, sp, #0x60
  422500:	mov	x2, x0
  422504:	adrp	x0, 43e000 <__func__.12250+0x440>
  422508:	add	x1, x0, #0xd08
  42250c:	mov	x0, x3
  422510:	bl	407660 <sd_bus_message_read@plt>
  422514:	str	w0, [sp, #76]
  422518:	ldr	w0, [sp, #76]
  42251c:	cmp	w0, #0x0
  422520:	b.ge	42252c <manager_unit_is_active+0x20c>  // b.tcont
  422524:	ldr	w19, [sp, #76]
  422528:	b	422568 <manager_unit_is_active+0x248>
  42252c:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  422530:	add	x0, x0, #0x60
  422534:	add	x2, sp, #0x80
  422538:	mov	x3, x0
  42253c:	ldp	x0, x1, [x3]
  422540:	stp	x0, x1, [x2]
  422544:	ldr	x0, [x3, #16]
  422548:	str	x0, [x2, #16]
  42254c:	ldr	x1, [sp, #96]
  422550:	add	x0, sp, #0x80
  422554:	bl	407cb0 <strv_find@plt>
  422558:	cmp	x0, #0x0
  42255c:	cset	w0, eq  // eq = none
  422560:	and	w0, w0, #0xff
  422564:	mov	w19, w0
  422568:	add	x0, sp, #0x58
  42256c:	bl	413cc4 <freep>
  422570:	add	x0, sp, #0x50
  422574:	bl	413f5c <sd_bus_message_unrefp>
  422578:	add	x0, sp, #0x68
  42257c:	bl	407c80 <sd_bus_error_free@plt>
  422580:	mov	w1, w19
  422584:	adrp	x0, 460000 <wordlist.10364+0x370>
  422588:	ldr	x0, [x0, #4024]
  42258c:	ldr	x2, [sp, #152]
  422590:	ldr	x0, [x0]
  422594:	eor	x0, x2, x0
  422598:	cmp	x0, #0x0
  42259c:	b.eq	4225a4 <manager_unit_is_active+0x284>  // b.none
  4225a0:	bl	407b20 <__stack_chk_fail@plt>
  4225a4:	mov	w0, w1
  4225a8:	ldr	x19, [sp, #16]
  4225ac:	ldp	x29, x30, [sp], #160
  4225b0:	ret

00000000004225b4 <manager_job_is_active>:
  4225b4:	stp	x29, x30, [sp, #-112]!
  4225b8:	mov	x29, sp
  4225bc:	str	x19, [sp, #16]
  4225c0:	str	x0, [sp, #56]
  4225c4:	str	x1, [sp, #48]
  4225c8:	str	x2, [sp, #40]
  4225cc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4225d0:	ldr	x0, [x0, #4024]
  4225d4:	ldr	x1, [x0]
  4225d8:	str	x1, [sp, #104]
  4225dc:	mov	x1, #0x0                   	// #0
  4225e0:	str	xzr, [sp, #80]
  4225e4:	str	xzr, [sp, #88]
  4225e8:	str	wzr, [sp, #96]
  4225ec:	str	xzr, [sp, #72]
  4225f0:	ldr	x0, [sp, #56]
  4225f4:	cmp	x0, #0x0
  4225f8:	cset	w0, eq  // eq = none
  4225fc:	and	w0, w0, #0xff
  422600:	and	x0, x0, #0xff
  422604:	cmp	x0, #0x0
  422608:	b.eq	422634 <manager_job_is_active+0x80>  // b.none
  42260c:	adrp	x0, 43e000 <__func__.12250+0x440>
  422610:	add	x1, x0, #0xb5b
  422614:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422618:	add	x4, x0, #0x470
  42261c:	mov	w3, #0xf1d                 	// #3869
  422620:	mov	x2, x1
  422624:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  422628:	add	x1, x0, #0x7a8
  42262c:	mov	w0, #0x0                   	// #0
  422630:	bl	407650 <log_assert_failed_realm@plt>
  422634:	ldr	x0, [sp, #48]
  422638:	cmp	x0, #0x0
  42263c:	cset	w0, eq  // eq = none
  422640:	and	w0, w0, #0xff
  422644:	and	x0, x0, #0xff
  422648:	cmp	x0, #0x0
  42264c:	b.eq	422678 <manager_job_is_active+0xc4>  // b.none
  422650:	adrp	x0, 43e000 <__func__.12250+0x440>
  422654:	add	x1, x0, #0xb5b
  422658:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42265c:	add	x4, x0, #0x470
  422660:	mov	w3, #0xf1e                 	// #3870
  422664:	mov	x2, x1
  422668:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  42266c:	add	x1, x0, #0x6f0
  422670:	mov	w0, #0x0                   	// #0
  422674:	bl	407650 <log_assert_failed_realm@plt>
  422678:	ldr	x0, [sp, #56]
  42267c:	ldr	x8, [x0, #8]
  422680:	add	x2, sp, #0x48
  422684:	add	x1, sp, #0x50
  422688:	adrp	x0, 43e000 <__func__.12250+0x440>
  42268c:	add	x7, x0, #0xd08
  422690:	mov	x6, x2
  422694:	mov	x5, x1
  422698:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  42269c:	add	x4, x0, #0x6f8
  4226a0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4226a4:	add	x3, x0, #0x700
  4226a8:	ldr	x2, [sp, #48]
  4226ac:	adrp	x0, 43f000 <__PRETTY_FUNCTION__.13691+0x5a8>
  4226b0:	add	x1, x0, #0x770
  4226b4:	mov	x0, x8
  4226b8:	bl	407680 <sd_bus_get_property@plt>
  4226bc:	str	w0, [sp, #68]
  4226c0:	ldr	w0, [sp, #68]
  4226c4:	cmp	w0, #0x0
  4226c8:	b.ge	422748 <manager_job_is_active+0x194>  // b.tcont
  4226cc:	add	x2, sp, #0x50
  4226d0:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4226d4:	add	x1, x0, #0x6a0
  4226d8:	mov	x0, x2
  4226dc:	bl	407fb0 <sd_bus_error_has_name@plt>
  4226e0:	cmp	w0, #0x0
  4226e4:	b.ne	422704 <manager_job_is_active+0x150>  // b.any
  4226e8:	add	x2, sp, #0x50
  4226ec:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  4226f0:	add	x1, x0, #0x6c8
  4226f4:	mov	x0, x2
  4226f8:	bl	407fb0 <sd_bus_error_has_name@plt>
  4226fc:	cmp	w0, #0x0
  422700:	b.eq	42270c <manager_job_is_active+0x158>  // b.none
  422704:	mov	w19, #0x1                   	// #1
  422708:	b	42274c <manager_job_is_active+0x198>
  42270c:	add	x2, sp, #0x50
  422710:	adrp	x0, 441000 <__PRETTY_FUNCTION__.13691+0x25a8>
  422714:	add	x1, x0, #0x720
  422718:	mov	x0, x2
  42271c:	bl	407fb0 <sd_bus_error_has_name@plt>
  422720:	cmp	w0, #0x0
  422724:	b.eq	422730 <manager_job_is_active+0x17c>  // b.none
  422728:	mov	w19, #0x0                   	// #0
  42272c:	b	42274c <manager_job_is_active+0x198>
  422730:	add	x0, sp, #0x50
  422734:	mov	x1, x0
  422738:	ldr	x0, [sp, #40]
  42273c:	bl	407780 <sd_bus_error_move@plt>
  422740:	ldr	w19, [sp, #68]
  422744:	b	42274c <manager_job_is_active+0x198>
  422748:	mov	w19, #0x1                   	// #1
  42274c:	add	x0, sp, #0x48
  422750:	bl	413f5c <sd_bus_message_unrefp>
  422754:	add	x0, sp, #0x50
  422758:	bl	407c80 <sd_bus_error_free@plt>
  42275c:	mov	w1, w19
  422760:	adrp	x0, 460000 <wordlist.10364+0x370>
  422764:	ldr	x0, [x0, #4024]
  422768:	ldr	x2, [sp, #104]
  42276c:	ldr	x0, [x0]
  422770:	eor	x0, x2, x0
  422774:	cmp	x0, #0x0
  422778:	b.eq	422780 <manager_job_is_active+0x1cc>  // b.none
  42277c:	bl	407b20 <__stack_chk_fail@plt>
  422780:	mov	w0, w1
  422784:	ldr	x19, [sp, #16]
  422788:	ldp	x29, x30, [sp], #112
  42278c:	ret

0000000000422790 <mfree>:
  422790:	stp	x29, x30, [sp, #-32]!
  422794:	mov	x29, sp
  422798:	str	x0, [sp, #24]
  42279c:	ldr	x0, [sp, #24]
  4227a0:	bl	408150 <free@plt>
  4227a4:	mov	x0, #0x0                   	// #0
  4227a8:	ldp	x29, x30, [sp], #32
  4227ac:	ret

00000000004227b0 <hashmap_remove>:
  4227b0:	stp	x29, x30, [sp, #-32]!
  4227b4:	mov	x29, sp
  4227b8:	str	x0, [sp, #24]
  4227bc:	str	x1, [sp, #16]
  4227c0:	ldr	x1, [sp, #16]
  4227c4:	ldr	x0, [sp, #24]
  4227c8:	bl	406f90 <internal_hashmap_remove@plt>
  4227cc:	ldp	x29, x30, [sp], #32
  4227d0:	ret

00000000004227d4 <device_new>:
  4227d4:	stp	x29, x30, [sp, #-64]!
  4227d8:	mov	x29, sp
  4227dc:	str	x0, [sp, #40]
  4227e0:	str	x1, [sp, #32]
  4227e4:	strb	w2, [sp, #31]
  4227e8:	ldr	x0, [sp, #40]
  4227ec:	cmp	x0, #0x0
  4227f0:	cset	w0, eq  // eq = none
  4227f4:	and	w0, w0, #0xff
  4227f8:	and	x0, x0, #0xff
  4227fc:	cmp	x0, #0x0
  422800:	b.eq	42282c <device_new+0x58>  // b.none
  422804:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422808:	add	x1, x0, #0x48b
  42280c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422810:	add	x4, x0, #0x4f8
  422814:	mov	w3, #0xd                   	// #13
  422818:	mov	x2, x1
  42281c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422820:	add	x1, x0, #0x4a8
  422824:	mov	w0, #0x0                   	// #0
  422828:	bl	407650 <log_assert_failed_realm@plt>
  42282c:	ldr	x0, [sp, #32]
  422830:	cmp	x0, #0x0
  422834:	cset	w0, eq  // eq = none
  422838:	and	w0, w0, #0xff
  42283c:	and	x0, x0, #0xff
  422840:	cmp	x0, #0x0
  422844:	b.eq	422870 <device_new+0x9c>  // b.none
  422848:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42284c:	add	x1, x0, #0x48b
  422850:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422854:	add	x4, x0, #0x4f8
  422858:	mov	w3, #0xe                   	// #14
  42285c:	mov	x2, x1
  422860:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422864:	add	x1, x0, #0x4b0
  422868:	mov	w0, #0x0                   	// #0
  42286c:	bl	407650 <log_assert_failed_realm@plt>
  422870:	mov	x1, #0x48                  	// #72
  422874:	mov	x0, #0x1                   	// #1
  422878:	bl	407fa0 <calloc@plt>
  42287c:	str	x0, [sp, #56]
  422880:	ldr	x0, [sp, #56]
  422884:	cmp	x0, #0x0
  422888:	b.ne	422894 <device_new+0xc0>  // b.any
  42288c:	mov	x0, #0x0                   	// #0
  422890:	b	42292c <device_new+0x158>
  422894:	ldr	x0, [sp, #32]
  422898:	bl	407f90 <strdup@plt>
  42289c:	mov	x1, x0
  4228a0:	ldr	x0, [sp, #56]
  4228a4:	str	x1, [x0, #8]
  4228a8:	ldr	x0, [sp, #56]
  4228ac:	ldr	x0, [x0, #8]
  4228b0:	cmp	x0, #0x0
  4228b4:	b.ne	4228c4 <device_new+0xf0>  // b.any
  4228b8:	ldr	x0, [sp, #56]
  4228bc:	bl	422790 <mfree>
  4228c0:	b	42292c <device_new+0x158>
  4228c4:	ldr	x0, [sp, #40]
  4228c8:	ldr	x3, [x0, #16]
  4228cc:	ldr	x0, [sp, #56]
  4228d0:	ldr	x0, [x0, #8]
  4228d4:	ldr	x2, [sp, #56]
  4228d8:	mov	x1, x0
  4228dc:	mov	x0, x3
  4228e0:	bl	407dd0 <hashmap_put@plt>
  4228e4:	cmp	w0, #0x0
  4228e8:	b.ge	422904 <device_new+0x130>  // b.tcont
  4228ec:	ldr	x0, [sp, #56]
  4228f0:	ldr	x0, [x0, #8]
  4228f4:	bl	408150 <free@plt>
  4228f8:	ldr	x0, [sp, #56]
  4228fc:	bl	422790 <mfree>
  422900:	b	42292c <device_new+0x158>
  422904:	ldr	x0, [sp, #56]
  422908:	ldr	x1, [sp, #40]
  42290c:	str	x1, [x0]
  422910:	ldr	x0, [sp, #56]
  422914:	ldrb	w1, [sp, #31]
  422918:	strb	w1, [x0, #24]
  42291c:	ldr	x0, [sp, #56]
  422920:	add	x0, x0, #0x20
  422924:	bl	4070a0 <dual_timestamp_get@plt>
  422928:	ldr	x0, [sp, #56]
  42292c:	ldp	x29, x30, [sp], #64
  422930:	ret

0000000000422934 <device_detach>:
  422934:	stp	x29, x30, [sp, #-64]!
  422938:	mov	x29, sp
  42293c:	str	x0, [sp, #24]
  422940:	ldr	x0, [sp, #24]
  422944:	cmp	x0, #0x0
  422948:	cset	w0, eq  // eq = none
  42294c:	and	w0, w0, #0xff
  422950:	and	x0, x0, #0xff
  422954:	cmp	x0, #0x0
  422958:	b.eq	422984 <device_detach+0x50>  // b.none
  42295c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422960:	add	x1, x0, #0x48b
  422964:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422968:	add	x4, x0, #0x508
  42296c:	mov	w3, #0x28                  	// #40
  422970:	mov	x2, x1
  422974:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422978:	add	x1, x0, #0x4b8
  42297c:	mov	w0, #0x0                   	// #0
  422980:	bl	407650 <log_assert_failed_realm@plt>
  422984:	ldr	x0, [sp, #24]
  422988:	ldr	x0, [x0, #16]
  42298c:	cmp	x0, #0x0
  422990:	b.eq	422b24 <device_detach+0x1f0>  // b.none
  422994:	b	4229a0 <device_detach+0x6c>
  422998:	ldr	x0, [sp, #32]
  42299c:	bl	42e424 <session_device_free>
  4229a0:	ldr	x0, [sp, #24]
  4229a4:	ldr	x0, [x0, #64]
  4229a8:	str	x0, [sp, #32]
  4229ac:	ldr	x0, [sp, #32]
  4229b0:	cmp	x0, #0x0
  4229b4:	b.ne	422998 <device_detach+0x64>  // b.any
  4229b8:	ldr	x0, [sp, #24]
  4229bc:	ldr	x0, [x0, #16]
  4229c0:	str	x0, [sp, #40]
  4229c4:	ldr	x0, [sp, #24]
  4229c8:	ldr	x0, [x0, #16]
  4229cc:	add	x0, x0, #0x18
  4229d0:	str	x0, [sp, #48]
  4229d4:	ldr	x0, [sp, #24]
  4229d8:	str	x0, [sp, #56]
  4229dc:	ldr	x0, [sp, #56]
  4229e0:	cmp	x0, #0x0
  4229e4:	cset	w0, eq  // eq = none
  4229e8:	and	w0, w0, #0xff
  4229ec:	and	x0, x0, #0xff
  4229f0:	cmp	x0, #0x0
  4229f4:	b.eq	422a20 <device_detach+0xec>  // b.none
  4229f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4229fc:	add	x1, x0, #0x48b
  422a00:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422a04:	add	x4, x0, #0x508
  422a08:	mov	w3, #0x31                  	// #49
  422a0c:	mov	x2, x1
  422a10:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422a14:	add	x1, x0, #0x4c0
  422a18:	mov	w0, #0x0                   	// #0
  422a1c:	bl	407650 <log_assert_failed_realm@plt>
  422a20:	ldr	x0, [sp, #56]
  422a24:	ldr	x0, [x0, #48]
  422a28:	cmp	x0, #0x0
  422a2c:	b.eq	422a44 <device_detach+0x110>  // b.none
  422a30:	ldr	x0, [sp, #56]
  422a34:	ldr	x0, [x0, #48]
  422a38:	ldr	x1, [sp, #56]
  422a3c:	ldr	x1, [x1, #56]
  422a40:	str	x1, [x0, #56]
  422a44:	ldr	x0, [sp, #56]
  422a48:	ldr	x0, [x0, #56]
  422a4c:	cmp	x0, #0x0
  422a50:	b.eq	422a6c <device_detach+0x138>  // b.none
  422a54:	ldr	x0, [sp, #56]
  422a58:	ldr	x0, [x0, #56]
  422a5c:	ldr	x1, [sp, #56]
  422a60:	ldr	x1, [x1, #48]
  422a64:	str	x1, [x0, #48]
  422a68:	b	422ac8 <device_detach+0x194>
  422a6c:	ldr	x0, [sp, #48]
  422a70:	ldr	x0, [x0]
  422a74:	ldr	x1, [sp, #56]
  422a78:	cmp	x1, x0
  422a7c:	cset	w0, ne  // ne = any
  422a80:	and	w0, w0, #0xff
  422a84:	and	x0, x0, #0xff
  422a88:	cmp	x0, #0x0
  422a8c:	b.eq	422ab8 <device_detach+0x184>  // b.none
  422a90:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422a94:	add	x1, x0, #0x48b
  422a98:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422a9c:	add	x4, x0, #0x508
  422aa0:	mov	w3, #0x31                  	// #49
  422aa4:	mov	x2, x1
  422aa8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422aac:	add	x1, x0, #0x4c8
  422ab0:	mov	w0, #0x0                   	// #0
  422ab4:	bl	407650 <log_assert_failed_realm@plt>
  422ab8:	ldr	x0, [sp, #56]
  422abc:	ldr	x1, [x0, #48]
  422ac0:	ldr	x0, [sp, #48]
  422ac4:	str	x1, [x0]
  422ac8:	ldr	x0, [sp, #56]
  422acc:	str	xzr, [x0, #56]
  422ad0:	ldr	x0, [sp, #56]
  422ad4:	ldr	x1, [x0, #56]
  422ad8:	ldr	x0, [sp, #56]
  422adc:	str	x1, [x0, #48]
  422ae0:	ldr	x0, [sp, #24]
  422ae4:	str	xzr, [x0, #16]
  422ae8:	ldr	x0, [sp, #40]
  422aec:	bl	429180 <seat_has_master_device>
  422af0:	and	w0, w0, #0xff
  422af4:	eor	w0, w0, #0x1
  422af8:	and	w0, w0, #0xff
  422afc:	cmp	w0, #0x0
  422b00:	b.eq	422b28 <device_detach+0x1f4>  // b.none
  422b04:	ldr	x0, [sp, #40]
  422b08:	bl	4294c8 <seat_add_to_gc_queue>
  422b0c:	mov	x2, #0x0                   	// #0
  422b10:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422b14:	add	x1, x0, #0x4d8
  422b18:	ldr	x0, [sp, #40]
  422b1c:	bl	426960 <seat_send_changed>
  422b20:	b	422b28 <device_detach+0x1f4>
  422b24:	nop
  422b28:	ldp	x29, x30, [sp], #64
  422b2c:	ret

0000000000422b30 <device_free>:
  422b30:	stp	x29, x30, [sp, #-32]!
  422b34:	mov	x29, sp
  422b38:	str	x0, [sp, #24]
  422b3c:	ldr	x0, [sp, #24]
  422b40:	cmp	x0, #0x0
  422b44:	cset	w0, eq  // eq = none
  422b48:	and	w0, w0, #0xff
  422b4c:	and	x0, x0, #0xff
  422b50:	cmp	x0, #0x0
  422b54:	b.eq	422b80 <device_free+0x50>  // b.none
  422b58:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422b5c:	add	x1, x0, #0x48b
  422b60:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422b64:	add	x4, x0, #0x518
  422b68:	mov	w3, #0x3b                  	// #59
  422b6c:	mov	x2, x1
  422b70:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422b74:	add	x1, x0, #0x4b8
  422b78:	mov	w0, #0x0                   	// #0
  422b7c:	bl	407650 <log_assert_failed_realm@plt>
  422b80:	ldr	x0, [sp, #24]
  422b84:	bl	422934 <device_detach>
  422b88:	ldr	x0, [sp, #24]
  422b8c:	ldr	x0, [x0]
  422b90:	ldr	x2, [x0, #16]
  422b94:	ldr	x0, [sp, #24]
  422b98:	ldr	x0, [x0, #8]
  422b9c:	mov	x1, x0
  422ba0:	mov	x0, x2
  422ba4:	bl	4227b0 <hashmap_remove>
  422ba8:	ldr	x0, [sp, #24]
  422bac:	ldr	x0, [x0, #8]
  422bb0:	bl	408150 <free@plt>
  422bb4:	ldr	x0, [sp, #24]
  422bb8:	bl	408150 <free@plt>
  422bbc:	nop
  422bc0:	ldp	x29, x30, [sp], #32
  422bc4:	ret

0000000000422bc8 <device_attach>:
  422bc8:	stp	x29, x30, [sp, #-96]!
  422bcc:	mov	x29, sp
  422bd0:	str	x0, [sp, #24]
  422bd4:	str	x1, [sp, #16]
  422bd8:	ldr	x0, [sp, #24]
  422bdc:	cmp	x0, #0x0
  422be0:	cset	w0, eq  // eq = none
  422be4:	and	w0, w0, #0xff
  422be8:	and	x0, x0, #0xff
  422bec:	cmp	x0, #0x0
  422bf0:	b.eq	422c1c <device_attach+0x54>  // b.none
  422bf4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422bf8:	add	x1, x0, #0x48b
  422bfc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422c00:	add	x4, x0, #0x528
  422c04:	mov	w3, #0x49                  	// #73
  422c08:	mov	x2, x1
  422c0c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422c10:	add	x1, x0, #0x4b8
  422c14:	mov	w0, #0x0                   	// #0
  422c18:	bl	407650 <log_assert_failed_realm@plt>
  422c1c:	ldr	x0, [sp, #16]
  422c20:	cmp	x0, #0x0
  422c24:	cset	w0, eq  // eq = none
  422c28:	and	w0, w0, #0xff
  422c2c:	and	x0, x0, #0xff
  422c30:	cmp	x0, #0x0
  422c34:	b.eq	422c60 <device_attach+0x98>  // b.none
  422c38:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422c3c:	add	x1, x0, #0x48b
  422c40:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422c44:	add	x4, x0, #0x528
  422c48:	mov	w3, #0x4a                  	// #74
  422c4c:	mov	x2, x1
  422c50:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422c54:	add	x1, x0, #0x4e8
  422c58:	mov	w0, #0x0                   	// #0
  422c5c:	bl	407650 <log_assert_failed_realm@plt>
  422c60:	ldr	x0, [sp, #24]
  422c64:	ldr	x0, [x0, #16]
  422c68:	ldr	x1, [sp, #16]
  422c6c:	cmp	x1, x0
  422c70:	b.eq	422f10 <device_attach+0x348>  // b.none
  422c74:	ldr	x0, [sp, #24]
  422c78:	ldr	x0, [x0, #16]
  422c7c:	cmp	x0, #0x0
  422c80:	b.eq	422c8c <device_attach+0xc4>  // b.none
  422c84:	ldr	x0, [sp, #24]
  422c88:	bl	422934 <device_detach>
  422c8c:	ldr	x0, [sp, #24]
  422c90:	ldr	x1, [sp, #16]
  422c94:	str	x1, [x0, #16]
  422c98:	ldr	x0, [sp, #16]
  422c9c:	bl	429180 <seat_has_master_device>
  422ca0:	strb	w0, [sp, #47]
  422ca4:	ldr	x0, [sp, #24]
  422ca8:	ldrb	w0, [x0, #24]
  422cac:	cmp	w0, #0x0
  422cb0:	b.ne	422cc4 <device_attach+0xfc>  // b.any
  422cb4:	ldr	x0, [sp, #16]
  422cb8:	ldr	x0, [x0, #24]
  422cbc:	cmp	x0, #0x0
  422cc0:	b.ne	422d64 <device_attach+0x19c>  // b.any
  422cc4:	ldr	x0, [sp, #16]
  422cc8:	add	x0, x0, #0x18
  422ccc:	str	x0, [sp, #80]
  422cd0:	ldr	x0, [sp, #24]
  422cd4:	str	x0, [sp, #88]
  422cd8:	ldr	x0, [sp, #88]
  422cdc:	cmp	x0, #0x0
  422ce0:	cset	w0, eq  // eq = none
  422ce4:	and	w0, w0, #0xff
  422ce8:	and	x0, x0, #0xff
  422cec:	cmp	x0, #0x0
  422cf0:	b.eq	422d1c <device_attach+0x154>  // b.none
  422cf4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422cf8:	add	x1, x0, #0x48b
  422cfc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422d00:	add	x4, x0, #0x528
  422d04:	mov	w3, #0x5d                  	// #93
  422d08:	mov	x2, x1
  422d0c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422d10:	add	x1, x0, #0x4c0
  422d14:	mov	w0, #0x0                   	// #0
  422d18:	bl	407650 <log_assert_failed_realm@plt>
  422d1c:	ldr	x0, [sp, #80]
  422d20:	ldr	x1, [x0]
  422d24:	ldr	x0, [sp, #88]
  422d28:	str	x1, [x0, #48]
  422d2c:	ldr	x0, [sp, #88]
  422d30:	ldr	x0, [x0, #48]
  422d34:	cmp	x0, #0x0
  422d38:	b.eq	422d4c <device_attach+0x184>  // b.none
  422d3c:	ldr	x0, [sp, #88]
  422d40:	ldr	x0, [x0, #48]
  422d44:	ldr	x1, [sp, #88]
  422d48:	str	x1, [x0, #56]
  422d4c:	ldr	x0, [sp, #88]
  422d50:	str	xzr, [x0, #56]
  422d54:	ldr	x0, [sp, #80]
  422d58:	ldr	x1, [sp, #88]
  422d5c:	str	x1, [x0]
  422d60:	b	422eb4 <device_attach+0x2ec>
  422d64:	ldr	x0, [sp, #16]
  422d68:	ldr	x0, [x0, #24]
  422d6c:	str	x0, [sp, #48]
  422d70:	b	422ea8 <device_attach+0x2e0>
  422d74:	ldr	x0, [sp, #48]
  422d78:	ldr	x0, [x0, #48]
  422d7c:	cmp	x0, #0x0
  422d80:	b.eq	422d9c <device_attach+0x1d4>  // b.none
  422d84:	ldr	x0, [sp, #48]
  422d88:	ldrb	w0, [x0, #24]
  422d8c:	eor	w0, w0, #0x1
  422d90:	and	w0, w0, #0xff
  422d94:	cmp	w0, #0x0
  422d98:	b.eq	422e9c <device_attach+0x2d4>  // b.none
  422d9c:	ldr	x0, [sp, #16]
  422da0:	add	x0, x0, #0x18
  422da4:	str	x0, [sp, #56]
  422da8:	ldr	x0, [sp, #48]
  422dac:	str	x0, [sp, #64]
  422db0:	ldr	x0, [sp, #24]
  422db4:	str	x0, [sp, #72]
  422db8:	ldr	x0, [sp, #72]
  422dbc:	cmp	x0, #0x0
  422dc0:	cset	w0, eq  // eq = none
  422dc4:	and	w0, w0, #0xff
  422dc8:	and	x0, x0, #0xff
  422dcc:	cmp	x0, #0x0
  422dd0:	b.eq	422dfc <device_attach+0x234>  // b.none
  422dd4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422dd8:	add	x1, x0, #0x48b
  422ddc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422de0:	add	x4, x0, #0x528
  422de4:	mov	w3, #0x61                  	// #97
  422de8:	mov	x2, x1
  422dec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422df0:	add	x1, x0, #0x4f0
  422df4:	mov	w0, #0x0                   	// #0
  422df8:	bl	407650 <log_assert_failed_realm@plt>
  422dfc:	ldr	x0, [sp, #64]
  422e00:	cmp	x0, #0x0
  422e04:	b.ne	422e50 <device_attach+0x288>  // b.any
  422e08:	ldr	x0, [sp, #56]
  422e0c:	ldr	x1, [x0]
  422e10:	ldr	x0, [sp, #72]
  422e14:	str	x1, [x0, #48]
  422e18:	ldr	x0, [sp, #72]
  422e1c:	ldr	x0, [x0, #48]
  422e20:	cmp	x0, #0x0
  422e24:	b.eq	422e38 <device_attach+0x270>  // b.none
  422e28:	ldr	x0, [sp, #72]
  422e2c:	ldr	x0, [x0, #48]
  422e30:	ldr	x1, [sp, #72]
  422e34:	str	x1, [x0, #56]
  422e38:	ldr	x0, [sp, #72]
  422e3c:	str	xzr, [x0, #56]
  422e40:	ldr	x0, [sp, #56]
  422e44:	ldr	x1, [sp, #72]
  422e48:	str	x1, [x0]
  422e4c:	b	422eb4 <device_attach+0x2ec>
  422e50:	ldr	x0, [sp, #64]
  422e54:	ldr	x1, [x0, #48]
  422e58:	ldr	x0, [sp, #72]
  422e5c:	str	x1, [x0, #48]
  422e60:	ldr	x0, [sp, #72]
  422e64:	ldr	x0, [x0, #48]
  422e68:	cmp	x0, #0x0
  422e6c:	b.eq	422e80 <device_attach+0x2b8>  // b.none
  422e70:	ldr	x0, [sp, #72]
  422e74:	ldr	x0, [x0, #48]
  422e78:	ldr	x1, [sp, #72]
  422e7c:	str	x1, [x0, #56]
  422e80:	ldr	x0, [sp, #72]
  422e84:	ldr	x1, [sp, #64]
  422e88:	str	x1, [x0, #56]
  422e8c:	ldr	x0, [sp, #64]
  422e90:	ldr	x1, [sp, #72]
  422e94:	str	x1, [x0, #48]
  422e98:	b	422eb4 <device_attach+0x2ec>
  422e9c:	ldr	x0, [sp, #48]
  422ea0:	ldr	x0, [x0, #48]
  422ea4:	str	x0, [sp, #48]
  422ea8:	ldr	x0, [sp, #48]
  422eac:	cmp	x0, #0x0
  422eb0:	b.ne	422d74 <device_attach+0x1ac>  // b.any
  422eb4:	ldrb	w0, [sp, #47]
  422eb8:	eor	w0, w0, #0x1
  422ebc:	and	w0, w0, #0xff
  422ec0:	cmp	w0, #0x0
  422ec4:	b.eq	422f14 <device_attach+0x34c>  // b.none
  422ec8:	ldr	x0, [sp, #24]
  422ecc:	ldrb	w0, [x0, #24]
  422ed0:	cmp	w0, #0x0
  422ed4:	b.eq	422f14 <device_attach+0x34c>  // b.none
  422ed8:	ldr	x0, [sp, #16]
  422edc:	ldrb	w0, [x0, #72]
  422ee0:	and	w0, w0, #0x2
  422ee4:	and	w0, w0, #0xff
  422ee8:	cmp	w0, #0x0
  422eec:	b.eq	422f14 <device_attach+0x34c>  // b.none
  422ef0:	ldr	x0, [sp, #16]
  422ef4:	bl	4273a0 <seat_save>
  422ef8:	mov	x2, #0x0                   	// #0
  422efc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  422f00:	add	x1, x0, #0x4d8
  422f04:	ldr	x0, [sp, #16]
  422f08:	bl	426960 <seat_send_changed>
  422f0c:	b	422f14 <device_attach+0x34c>
  422f10:	nop
  422f14:	ldp	x29, x30, [sp], #96
  422f18:	ret

0000000000422f1c <mfree>:
  422f1c:	stp	x29, x30, [sp, #-32]!
  422f20:	mov	x29, sp
  422f24:	str	x0, [sp, #24]
  422f28:	ldr	x0, [sp, #24]
  422f2c:	bl	408150 <free@plt>
  422f30:	mov	x0, #0x0                   	// #0
  422f34:	ldp	x29, x30, [sp], #32
  422f38:	ret

0000000000422f3c <freep>:
  422f3c:	stp	x29, x30, [sp, #-32]!
  422f40:	mov	x29, sp
  422f44:	str	x0, [sp, #24]
  422f48:	ldr	x0, [sp, #24]
  422f4c:	ldr	x0, [x0]
  422f50:	bl	408150 <free@plt>
  422f54:	nop
  422f58:	ldp	x29, x30, [sp], #32
  422f5c:	ret

0000000000422f60 <size_multiply_overflow>:
  422f60:	sub	sp, sp, #0x10
  422f64:	str	x0, [sp, #8]
  422f68:	str	x1, [sp]
  422f6c:	ldr	x0, [sp]
  422f70:	cmp	x0, #0x0
  422f74:	cset	w0, ne  // ne = any
  422f78:	and	w0, w0, #0xff
  422f7c:	and	x0, x0, #0xff
  422f80:	cmp	x0, #0x0
  422f84:	b.eq	422fc8 <size_multiply_overflow+0x68>  // b.none
  422f88:	mov	x2, #0x0                   	// #0
  422f8c:	ldr	x1, [sp, #8]
  422f90:	ldr	x0, [sp]
  422f94:	umulh	x0, x1, x0
  422f98:	cmp	x0, #0x0
  422f9c:	b.eq	422fa4 <size_multiply_overflow+0x44>  // b.none
  422fa0:	mov	x2, #0x1                   	// #1
  422fa4:	mov	x0, x2
  422fa8:	cmp	x0, #0x0
  422fac:	cset	w0, ne  // ne = any
  422fb0:	and	w0, w0, #0xff
  422fb4:	and	x0, x0, #0xff
  422fb8:	cmp	x0, #0x0
  422fbc:	b.eq	422fc8 <size_multiply_overflow+0x68>  // b.none
  422fc0:	mov	w0, #0x1                   	// #1
  422fc4:	b	422fcc <size_multiply_overflow+0x6c>
  422fc8:	mov	w0, #0x0                   	// #0
  422fcc:	and	w0, w0, #0x1
  422fd0:	and	w0, w0, #0xff
  422fd4:	add	sp, sp, #0x10
  422fd8:	ret

0000000000422fdc <malloc_multiply>:
  422fdc:	stp	x29, x30, [sp, #-32]!
  422fe0:	mov	x29, sp
  422fe4:	str	x0, [sp, #24]
  422fe8:	str	x1, [sp, #16]
  422fec:	ldr	x1, [sp, #16]
  422ff0:	ldr	x0, [sp, #24]
  422ff4:	bl	422f60 <size_multiply_overflow>
  422ff8:	and	w0, w0, #0xff
  422ffc:	cmp	w0, #0x0
  423000:	b.eq	42300c <malloc_multiply+0x30>  // b.none
  423004:	mov	x0, #0x0                   	// #0
  423008:	b	423028 <malloc_multiply+0x4c>
  42300c:	ldr	x1, [sp, #24]
  423010:	ldr	x0, [sp, #16]
  423014:	mul	x0, x1, x0
  423018:	cmp	x0, #0x0
  42301c:	b.ne	423024 <malloc_multiply+0x48>  // b.any
  423020:	mov	x0, #0x1                   	// #1
  423024:	bl	407ce0 <malloc@plt>
  423028:	ldp	x29, x30, [sp], #32
  42302c:	ret

0000000000423030 <strna>:
  423030:	sub	sp, sp, #0x10
  423034:	str	x0, [sp, #8]
  423038:	ldr	x0, [sp, #8]
  42303c:	cmp	x0, #0x0
  423040:	b.ne	42304c <strna+0x1c>  // b.any
  423044:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423048:	add	x0, x0, #0x538
  42304c:	add	sp, sp, #0x10
  423050:	ret

0000000000423054 <closep>:
  423054:	stp	x29, x30, [sp, #-32]!
  423058:	mov	x29, sp
  42305c:	str	x0, [sp, #24]
  423060:	ldr	x0, [sp, #24]
  423064:	ldr	w0, [x0]
  423068:	bl	4075e0 <safe_close@plt>
  42306c:	nop
  423070:	ldp	x29, x30, [sp], #32
  423074:	ret

0000000000423078 <fclosep>:
  423078:	stp	x29, x30, [sp, #-32]!
  42307c:	mov	x29, sp
  423080:	str	x0, [sp, #24]
  423084:	ldr	x0, [sp, #24]
  423088:	ldr	x0, [x0]
  42308c:	bl	406fc0 <safe_fclose@plt>
  423090:	nop
  423094:	ldp	x29, x30, [sp], #32
  423098:	ret

000000000042309c <hashmap_remove>:
  42309c:	stp	x29, x30, [sp, #-32]!
  4230a0:	mov	x29, sp
  4230a4:	str	x0, [sp, #24]
  4230a8:	str	x1, [sp, #16]
  4230ac:	ldr	x1, [sp, #16]
  4230b0:	ldr	x0, [sp, #24]
  4230b4:	bl	406f90 <internal_hashmap_remove@plt>
  4230b8:	ldp	x29, x30, [sp], #32
  4230bc:	ret

00000000004230c0 <hashmap_iterate>:
  4230c0:	stp	x29, x30, [sp, #-48]!
  4230c4:	mov	x29, sp
  4230c8:	str	x0, [sp, #40]
  4230cc:	str	x1, [sp, #32]
  4230d0:	str	x2, [sp, #24]
  4230d4:	str	x3, [sp, #16]
  4230d8:	ldr	x3, [sp, #16]
  4230dc:	ldr	x2, [sp, #24]
  4230e0:	ldr	x1, [sp, #32]
  4230e4:	ldr	x0, [sp, #40]
  4230e8:	bl	407f80 <internal_hashmap_iterate@plt>
  4230ec:	and	w0, w0, #0xff
  4230f0:	ldp	x29, x30, [sp], #48
  4230f4:	ret

00000000004230f8 <inhibitor_freep>:
  4230f8:	stp	x29, x30, [sp, #-32]!
  4230fc:	mov	x29, sp
  423100:	str	x0, [sp, #24]
  423104:	ldr	x0, [sp, #24]
  423108:	ldr	x0, [x0]
  42310c:	cmp	x0, #0x0
  423110:	b.eq	423120 <inhibitor_freep+0x28>  // b.none
  423114:	ldr	x0, [sp, #24]
  423118:	ldr	x0, [x0]
  42311c:	bl	423370 <inhibitor_free>
  423120:	nop
  423124:	ldp	x29, x30, [sp], #32
  423128:	ret

000000000042312c <inhibitor_new>:
  42312c:	stp	x29, x30, [sp, #-192]!
  423130:	mov	x29, sp
  423134:	str	x19, [sp, #16]
  423138:	str	x0, [sp, #56]
  42313c:	str	x1, [sp, #48]
  423140:	str	x2, [sp, #40]
  423144:	adrp	x0, 460000 <wordlist.10364+0x370>
  423148:	ldr	x0, [x0, #4024]
  42314c:	ldr	x1, [x0]
  423150:	str	x1, [sp, #184]
  423154:	mov	x1, #0x0                   	// #0
  423158:	str	xzr, [sp, #80]
  42315c:	ldr	x0, [sp, #56]
  423160:	cmp	x0, #0x0
  423164:	cset	w0, eq  // eq = none
  423168:	and	w0, w0, #0xff
  42316c:	and	x0, x0, #0xff
  423170:	cmp	x0, #0x0
  423174:	b.eq	4231a0 <inhibitor_new+0x74>  // b.none
  423178:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42317c:	add	x1, x0, #0x543
  423180:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423184:	add	x4, x0, #0x900
  423188:	mov	w3, #0x21                  	// #33
  42318c:	mov	x2, x1
  423190:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423194:	add	x1, x0, #0x560
  423198:	mov	w0, #0x0                   	// #0
  42319c:	bl	407650 <log_assert_failed_realm@plt>
  4231a0:	ldr	x0, [sp, #48]
  4231a4:	cmp	x0, #0x0
  4231a8:	cset	w0, eq  // eq = none
  4231ac:	and	w0, w0, #0xff
  4231b0:	and	x0, x0, #0xff
  4231b4:	cmp	x0, #0x0
  4231b8:	b.eq	4231e4 <inhibitor_new+0xb8>  // b.none
  4231bc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4231c0:	add	x1, x0, #0x543
  4231c4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4231c8:	add	x4, x0, #0x900
  4231cc:	mov	w3, #0x22                  	// #34
  4231d0:	mov	x2, x1
  4231d4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4231d8:	add	x1, x0, #0x568
  4231dc:	mov	w0, #0x0                   	// #0
  4231e0:	bl	407650 <log_assert_failed_realm@plt>
  4231e4:	ldr	x0, [sp, #40]
  4231e8:	cmp	x0, #0x0
  4231ec:	cset	w0, eq  // eq = none
  4231f0:	and	w0, w0, #0xff
  4231f4:	and	x0, x0, #0xff
  4231f8:	cmp	x0, #0x0
  4231fc:	b.eq	423228 <inhibitor_new+0xfc>  // b.none
  423200:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423204:	add	x1, x0, #0x543
  423208:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42320c:	add	x4, x0, #0x900
  423210:	mov	w3, #0x23                  	// #35
  423214:	mov	x2, x1
  423218:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42321c:	add	x1, x0, #0x570
  423220:	mov	w0, #0x0                   	// #0
  423224:	bl	407650 <log_assert_failed_realm@plt>
  423228:	mov	x1, #0x1                   	// #1
  42322c:	mov	x0, #0x68                  	// #104
  423230:	bl	422fdc <malloc_multiply>
  423234:	str	x0, [sp, #80]
  423238:	ldr	x0, [sp, #80]
  42323c:	cmp	x0, #0x0
  423240:	b.ne	42324c <inhibitor_new+0x120>  // b.any
  423244:	mov	w19, #0xfffffff4            	// #-12
  423248:	b	423334 <inhibitor_new+0x208>
  42324c:	ldr	x0, [sp, #80]
  423250:	stp	xzr, xzr, [x0]
  423254:	stp	xzr, xzr, [x0, #16]
  423258:	stp	xzr, xzr, [x0, #32]
  42325c:	stp	xzr, xzr, [x0, #48]
  423260:	stp	xzr, xzr, [x0, #64]
  423264:	stp	xzr, xzr, [x0, #80]
  423268:	str	xzr, [x0, #96]
  42326c:	ldr	x1, [sp, #48]
  423270:	str	x1, [x0]
  423274:	mov	w1, #0xffffffff            	// #-1
  423278:	str	w1, [x0, #36]
  42327c:	mov	w1, #0xffffffff            	// #-1
  423280:	str	w1, [x0, #56]
  423284:	mov	w1, #0xffffffff            	// #-1
  423288:	str	w1, [x0, #64]
  42328c:	mov	w1, #0xffffffff            	// #-1
  423290:	str	w1, [x0, #96]
  423294:	ldr	x19, [sp, #80]
  423298:	mov	x2, #0xffffffffffffffff    	// #-1
  42329c:	ldr	x1, [sp, #40]
  4232a0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4232a4:	add	x0, x0, #0x578
  4232a8:	bl	407bb0 <path_join_internal@plt>
  4232ac:	str	x0, [x19, #24]
  4232b0:	ldr	x0, [sp, #80]
  4232b4:	ldr	x0, [x0, #24]
  4232b8:	cmp	x0, #0x0
  4232bc:	b.ne	4232c8 <inhibitor_new+0x19c>  // b.any
  4232c0:	mov	w19, #0xfffffff4            	// #-12
  4232c4:	b	423334 <inhibitor_new+0x208>
  4232c8:	ldr	x0, [sp, #80]
  4232cc:	ldr	x0, [x0, #24]
  4232d0:	ldr	x19, [sp, #80]
  4232d4:	bl	407b50 <basename@plt>
  4232d8:	str	x0, [x19, #16]
  4232dc:	ldr	x0, [sp, #48]
  4232e0:	ldr	x3, [x0, #56]
  4232e4:	ldr	x0, [sp, #80]
  4232e8:	ldr	x0, [x0, #16]
  4232ec:	ldr	x1, [sp, #80]
  4232f0:	mov	x2, x1
  4232f4:	mov	x1, x0
  4232f8:	mov	x0, x3
  4232fc:	bl	407dd0 <hashmap_put@plt>
  423300:	str	w0, [sp, #68]
  423304:	ldr	w0, [sp, #68]
  423308:	cmp	w0, #0x0
  42330c:	b.ge	423318 <inhibitor_new+0x1ec>  // b.tcont
  423310:	ldr	w19, [sp, #68]
  423314:	b	423334 <inhibitor_new+0x208>
  423318:	ldr	x0, [sp, #80]
  42331c:	str	x0, [sp, #72]
  423320:	str	xzr, [sp, #80]
  423324:	ldr	x1, [sp, #72]
  423328:	ldr	x0, [sp, #56]
  42332c:	str	x1, [x0]
  423330:	mov	w19, #0x0                   	// #0
  423334:	add	x0, sp, #0x50
  423338:	bl	4230f8 <inhibitor_freep>
  42333c:	mov	w1, w19
  423340:	adrp	x0, 460000 <wordlist.10364+0x370>
  423344:	ldr	x0, [x0, #4024]
  423348:	ldr	x2, [sp, #184]
  42334c:	ldr	x0, [x0]
  423350:	eor	x0, x2, x0
  423354:	cmp	x0, #0x0
  423358:	b.eq	423360 <inhibitor_new+0x234>  // b.none
  42335c:	bl	407b20 <__stack_chk_fail@plt>
  423360:	mov	w0, w1
  423364:	ldr	x19, [sp, #16]
  423368:	ldp	x29, x30, [sp], #192
  42336c:	ret

0000000000423370 <inhibitor_free>:
  423370:	stp	x29, x30, [sp, #-32]!
  423374:	mov	x29, sp
  423378:	str	x0, [sp, #24]
  42337c:	ldr	x0, [sp, #24]
  423380:	cmp	x0, #0x0
  423384:	b.ne	423390 <inhibitor_free+0x20>  // b.any
  423388:	mov	x0, #0x0                   	// #0
  42338c:	b	423400 <inhibitor_free+0x90>
  423390:	ldr	x0, [sp, #24]
  423394:	ldr	x0, [x0, #40]
  423398:	bl	408150 <free@plt>
  42339c:	ldr	x0, [sp, #24]
  4233a0:	ldr	x0, [x0, #48]
  4233a4:	bl	408150 <free@plt>
  4233a8:	ldr	x0, [sp, #24]
  4233ac:	ldr	x0, [x0, #8]
  4233b0:	bl	407550 <sd_event_source_unref@plt>
  4233b4:	ldr	x0, [sp, #24]
  4233b8:	ldr	w0, [x0, #96]
  4233bc:	bl	4075e0 <safe_close@plt>
  4233c0:	ldr	x0, [sp, #24]
  4233c4:	ldr	x0, [x0]
  4233c8:	ldr	x2, [x0, #56]
  4233cc:	ldr	x0, [sp, #24]
  4233d0:	ldr	x0, [x0, #16]
  4233d4:	mov	x1, x0
  4233d8:	mov	x0, x2
  4233dc:	bl	42309c <hashmap_remove>
  4233e0:	ldr	x0, [sp, #24]
  4233e4:	ldr	x0, [x0, #24]
  4233e8:	bl	408150 <free@plt>
  4233ec:	ldr	x0, [sp, #24]
  4233f0:	ldr	x0, [x0, #88]
  4233f4:	bl	408150 <free@plt>
  4233f8:	ldr	x0, [sp, #24]
  4233fc:	bl	422f1c <mfree>
  423400:	ldp	x29, x30, [sp], #32
  423404:	ret

0000000000423408 <inhibitor_save>:
  423408:	stp	x29, x30, [sp, #-96]!
  42340c:	mov	x29, sp
  423410:	stp	x19, x20, [sp, #16]
  423414:	str	x0, [sp, #40]
  423418:	adrp	x0, 460000 <wordlist.10364+0x370>
  42341c:	ldr	x0, [x0, #4024]
  423420:	ldr	x1, [x0]
  423424:	str	x1, [sp, #88]
  423428:	mov	x1, #0x0                   	// #0
  42342c:	str	xzr, [sp, #64]
  423430:	str	xzr, [sp, #72]
  423434:	ldr	x0, [sp, #40]
  423438:	cmp	x0, #0x0
  42343c:	cset	w0, eq  // eq = none
  423440:	and	w0, w0, #0xff
  423444:	and	x0, x0, #0xff
  423448:	cmp	x0, #0x0
  42344c:	b.eq	423478 <inhibitor_save+0x70>  // b.none
  423450:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423454:	add	x1, x0, #0x543
  423458:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42345c:	add	x4, x0, #0x910
  423460:	mov	w3, #0x59                  	// #89
  423464:	mov	x2, x1
  423468:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42346c:	add	x1, x0, #0x590
  423470:	mov	w0, #0x0                   	// #0
  423474:	bl	407650 <log_assert_failed_realm@plt>
  423478:	mov	w4, #0x2                   	// #2
  42347c:	mov	w3, #0x0                   	// #0
  423480:	mov	w2, #0x0                   	// #0
  423484:	mov	w1, #0x1ed                 	// #493
  423488:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42348c:	add	x0, x0, #0x578
  423490:	bl	407ab0 <mkdir_safe_label@plt>
  423494:	str	w0, [sp, #48]
  423498:	ldr	w0, [sp, #48]
  42349c:	cmp	w0, #0x0
  4234a0:	b.lt	423690 <inhibitor_save+0x288>  // b.tstop
  4234a4:	ldr	x0, [sp, #40]
  4234a8:	ldr	x0, [x0, #24]
  4234ac:	add	x2, sp, #0x40
  4234b0:	add	x1, sp, #0x48
  4234b4:	bl	407870 <fopen_temporary@plt>
  4234b8:	str	w0, [sp, #48]
  4234bc:	ldr	w0, [sp, #48]
  4234c0:	cmp	w0, #0x0
  4234c4:	b.lt	423698 <inhibitor_save+0x290>  // b.tstop
  4234c8:	ldr	x0, [sp, #72]
  4234cc:	bl	407300 <fileno@plt>
  4234d0:	mov	w1, #0x1a4                 	// #420
  4234d4:	bl	407150 <fchmod@plt>
  4234d8:	ldr	x19, [sp, #72]
  4234dc:	ldr	x0, [sp, #40]
  4234e0:	ldr	w0, [x0, #36]
  4234e4:	bl	42498c <inhibit_what_to_string>
  4234e8:	mov	x20, x0
  4234ec:	ldr	x0, [sp, #40]
  4234f0:	ldr	w0, [x0, #56]
  4234f4:	bl	424e50 <inhibit_mode_to_string>
  4234f8:	mov	x2, x0
  4234fc:	ldr	x0, [sp, #40]
  423500:	ldr	w1, [x0, #64]
  423504:	ldr	x0, [sp, #40]
  423508:	ldr	w0, [x0, #60]
  42350c:	mov	w5, w0
  423510:	mov	w4, w1
  423514:	mov	x3, x2
  423518:	mov	x2, x20
  42351c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423520:	add	x1, x0, #0x598
  423524:	mov	x0, x19
  423528:	bl	4074c0 <fprintf@plt>
  42352c:	ldr	x0, [sp, #40]
  423530:	ldr	x0, [x0, #40]
  423534:	cmp	x0, #0x0
  423538:	b.eq	42359c <inhibitor_save+0x194>  // b.none
  42353c:	str	xzr, [sp, #80]
  423540:	ldr	x0, [sp, #40]
  423544:	ldr	x0, [x0, #40]
  423548:	bl	407320 <cescape@plt>
  42354c:	str	x0, [sp, #80]
  423550:	ldr	x0, [sp, #80]
  423554:	cmp	x0, #0x0
  423558:	b.ne	42356c <inhibitor_save+0x164>  // b.any
  42355c:	mov	w0, #0xfffffff4            	// #-12
  423560:	str	w0, [sp, #48]
  423564:	mov	w19, #0x0                   	// #0
  423568:	b	42358c <inhibitor_save+0x184>
  42356c:	ldr	x3, [sp, #72]
  423570:	ldr	x0, [sp, #80]
  423574:	mov	x2, x0
  423578:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42357c:	add	x1, x0, #0x5e0
  423580:	mov	x0, x3
  423584:	bl	4074c0 <fprintf@plt>
  423588:	mov	w19, #0x1                   	// #1
  42358c:	add	x0, sp, #0x50
  423590:	bl	422f3c <freep>
  423594:	cmp	w19, #0x1
  423598:	b.ne	4236a4 <inhibitor_save+0x29c>  // b.any
  42359c:	ldr	x0, [sp, #40]
  4235a0:	ldr	x0, [x0, #48]
  4235a4:	cmp	x0, #0x0
  4235a8:	b.eq	42360c <inhibitor_save+0x204>  // b.none
  4235ac:	str	xzr, [sp, #80]
  4235b0:	ldr	x0, [sp, #40]
  4235b4:	ldr	x0, [x0, #48]
  4235b8:	bl	407320 <cescape@plt>
  4235bc:	str	x0, [sp, #80]
  4235c0:	ldr	x0, [sp, #80]
  4235c4:	cmp	x0, #0x0
  4235c8:	b.ne	4235dc <inhibitor_save+0x1d4>  // b.any
  4235cc:	mov	w0, #0xfffffff4            	// #-12
  4235d0:	str	w0, [sp, #48]
  4235d4:	mov	w19, #0x0                   	// #0
  4235d8:	b	4235fc <inhibitor_save+0x1f4>
  4235dc:	ldr	x3, [sp, #72]
  4235e0:	ldr	x0, [sp, #80]
  4235e4:	mov	x2, x0
  4235e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4235ec:	add	x1, x0, #0x5e8
  4235f0:	mov	x0, x3
  4235f4:	bl	4074c0 <fprintf@plt>
  4235f8:	mov	w19, #0x1                   	// #1
  4235fc:	add	x0, sp, #0x50
  423600:	bl	422f3c <freep>
  423604:	cmp	w19, #0x1
  423608:	b.ne	4236a4 <inhibitor_save+0x29c>  // b.any
  42360c:	ldr	x0, [sp, #40]
  423610:	ldr	x0, [x0, #88]
  423614:	cmp	x0, #0x0
  423618:	b.eq	42363c <inhibitor_save+0x234>  // b.none
  42361c:	ldr	x3, [sp, #72]
  423620:	ldr	x0, [sp, #40]
  423624:	ldr	x0, [x0, #88]
  423628:	mov	x2, x0
  42362c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423630:	add	x1, x0, #0x5f0
  423634:	mov	x0, x3
  423638:	bl	4074c0 <fprintf@plt>
  42363c:	ldr	x0, [sp, #72]
  423640:	bl	408360 <fflush_and_check@plt>
  423644:	str	w0, [sp, #48]
  423648:	ldr	w0, [sp, #48]
  42364c:	cmp	w0, #0x0
  423650:	b.lt	4236a0 <inhibitor_save+0x298>  // b.tstop
  423654:	ldr	x2, [sp, #64]
  423658:	ldr	x0, [sp, #40]
  42365c:	ldr	x0, [x0, #24]
  423660:	mov	x1, x0
  423664:	mov	x0, x2
  423668:	bl	407370 <rename@plt>
  42366c:	cmp	w0, #0x0
  423670:	b.ge	423688 <inhibitor_save+0x280>  // b.tcont
  423674:	bl	407960 <__errno_location@plt>
  423678:	ldr	w0, [x0]
  42367c:	neg	w0, w0
  423680:	str	w0, [sp, #48]
  423684:	b	4236a4 <inhibitor_save+0x29c>
  423688:	mov	w19, #0x0                   	// #0
  42368c:	b	42375c <inhibitor_save+0x354>
  423690:	nop
  423694:	b	4236a4 <inhibitor_save+0x29c>
  423698:	nop
  42369c:	b	4236a4 <inhibitor_save+0x29c>
  4236a0:	nop
  4236a4:	ldr	x0, [sp, #40]
  4236a8:	ldr	x0, [x0, #24]
  4236ac:	bl	4070c0 <unlink@plt>
  4236b0:	ldr	x0, [sp, #64]
  4236b4:	cmp	x0, #0x0
  4236b8:	b.eq	4236c4 <inhibitor_save+0x2bc>  // b.none
  4236bc:	ldr	x0, [sp, #64]
  4236c0:	bl	4070c0 <unlink@plt>
  4236c4:	mov	w0, #0x3                   	// #3
  4236c8:	str	w0, [sp, #52]
  4236cc:	ldr	w0, [sp, #48]
  4236d0:	str	w0, [sp, #56]
  4236d4:	str	wzr, [sp, #60]
  4236d8:	ldr	w0, [sp, #60]
  4236dc:	bl	4083e0 <log_get_max_level_realm@plt>
  4236e0:	mov	w1, w0
  4236e4:	ldr	w0, [sp, #52]
  4236e8:	and	w0, w0, #0x7
  4236ec:	cmp	w1, w0
  4236f0:	b.lt	423744 <inhibitor_save+0x33c>  // b.tstop
  4236f4:	ldr	w0, [sp, #60]
  4236f8:	lsl	w1, w0, #10
  4236fc:	ldr	w0, [sp, #52]
  423700:	orr	w7, w1, w0
  423704:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423708:	add	x1, x0, #0x543
  42370c:	ldr	x0, [sp, #40]
  423710:	ldr	x0, [x0, #24]
  423714:	mov	x6, x0
  423718:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42371c:	add	x5, x0, #0x600
  423720:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423724:	add	x4, x0, #0x920
  423728:	mov	w3, #0x9c                  	// #156
  42372c:	mov	x2, x1
  423730:	ldr	w1, [sp, #56]
  423734:	mov	w0, w7
  423738:	bl	407d60 <log_internal_realm@plt>
  42373c:	mov	w19, w0
  423740:	b	423758 <inhibitor_save+0x350>
  423744:	ldr	w0, [sp, #56]
  423748:	cmp	w0, #0x0
  42374c:	cneg	w0, w0, lt  // lt = tstop
  423750:	and	w0, w0, #0xff
  423754:	neg	w19, w0
  423758:	nop
  42375c:	add	x0, sp, #0x48
  423760:	bl	423078 <fclosep>
  423764:	add	x0, sp, #0x40
  423768:	bl	422f3c <freep>
  42376c:	mov	w1, w19
  423770:	adrp	x0, 460000 <wordlist.10364+0x370>
  423774:	ldr	x0, [x0, #4024]
  423778:	ldr	x2, [sp, #88]
  42377c:	ldr	x0, [x0]
  423780:	eor	x0, x2, x0
  423784:	cmp	x0, #0x0
  423788:	b.eq	423790 <inhibitor_save+0x388>  // b.none
  42378c:	bl	407b20 <__stack_chk_fail@plt>
  423790:	mov	w0, w1
  423794:	ldp	x19, x20, [sp, #16]
  423798:	ldp	x29, x30, [sp], #96
  42379c:	ret

00000000004237a0 <bus_manager_send_inhibited_change>:
  4237a0:	stp	x29, x30, [sp, #-48]!
  4237a4:	mov	x29, sp
  4237a8:	str	x0, [sp, #24]
  4237ac:	ldr	x0, [sp, #24]
  4237b0:	cmp	x0, #0x0
  4237b4:	cset	w0, eq  // eq = none
  4237b8:	and	w0, w0, #0xff
  4237bc:	and	x0, x0, #0xff
  4237c0:	cmp	x0, #0x0
  4237c4:	b.eq	4237f0 <bus_manager_send_inhibited_change+0x50>  // b.none
  4237c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4237cc:	add	x1, x0, #0x543
  4237d0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4237d4:	add	x4, x0, #0x930
  4237d8:	mov	w3, #0xa2                  	// #162
  4237dc:	mov	x2, x1
  4237e0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4237e4:	add	x1, x0, #0x590
  4237e8:	mov	w0, #0x0                   	// #0
  4237ec:	bl	407650 <log_assert_failed_realm@plt>
  4237f0:	ldr	x0, [sp, #24]
  4237f4:	ldr	w0, [x0, #56]
  4237f8:	cmp	w0, #0x0
  4237fc:	b.ne	42380c <bus_manager_send_inhibited_change+0x6c>  // b.any
  423800:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423804:	add	x0, x0, #0x628
  423808:	b	423814 <bus_manager_send_inhibited_change+0x74>
  42380c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423810:	add	x0, x0, #0x638
  423814:	str	x0, [sp, #40]
  423818:	ldr	x0, [sp, #24]
  42381c:	ldr	x0, [x0]
  423820:	mov	x2, #0x0                   	// #0
  423824:	ldr	x1, [sp, #40]
  423828:	bl	421190 <manager_send_changed>
  42382c:	ldp	x29, x30, [sp], #48
  423830:	ret

0000000000423834 <inhibitor_start>:
  423834:	sub	sp, sp, #0x80
  423838:	stp	x29, x30, [sp, #32]
  42383c:	add	x29, sp, #0x20
  423840:	stp	x19, x20, [sp, #48]
  423844:	stp	x21, x22, [sp, #64]
  423848:	stp	x23, x24, [sp, #80]
  42384c:	str	x0, [sp, #104]
  423850:	ldr	x0, [sp, #104]
  423854:	cmp	x0, #0x0
  423858:	cset	w0, eq  // eq = none
  42385c:	and	w0, w0, #0xff
  423860:	and	x0, x0, #0xff
  423864:	cmp	x0, #0x0
  423868:	b.eq	423894 <inhibitor_start+0x60>  // b.none
  42386c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423870:	add	x1, x0, #0x543
  423874:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423878:	add	x4, x0, #0x958
  42387c:	mov	w3, #0xaa                  	// #170
  423880:	mov	x2, x1
  423884:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423888:	add	x1, x0, #0x590
  42388c:	mov	w0, #0x0                   	// #0
  423890:	bl	407650 <log_assert_failed_realm@plt>
  423894:	ldr	x0, [sp, #104]
  423898:	ldrb	w0, [x0, #32]
  42389c:	cmp	w0, #0x0
  4238a0:	b.eq	4238ac <inhibitor_start+0x78>  // b.none
  4238a4:	mov	w0, #0x0                   	// #0
  4238a8:	b	42399c <inhibitor_start+0x168>
  4238ac:	ldr	x0, [sp, #104]
  4238b0:	add	x0, x0, #0x48
  4238b4:	bl	4070a0 <dual_timestamp_get@plt>
  4238b8:	mov	w0, #0x7                   	// #7
  4238bc:	str	w0, [sp, #116]
  4238c0:	str	wzr, [sp, #120]
  4238c4:	str	wzr, [sp, #124]
  4238c8:	ldr	w0, [sp, #124]
  4238cc:	bl	4083e0 <log_get_max_level_realm@plt>
  4238d0:	mov	w1, w0
  4238d4:	ldr	w0, [sp, #116]
  4238d8:	and	w0, w0, #0x7
  4238dc:	cmp	w1, w0
  4238e0:	b.lt	423974 <inhibitor_start+0x140>  // b.tstop
  4238e4:	ldr	w0, [sp, #124]
  4238e8:	lsl	w1, w0, #10
  4238ec:	ldr	w0, [sp, #116]
  4238f0:	orr	w21, w1, w0
  4238f4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4238f8:	add	x22, x0, #0x543
  4238fc:	ldr	x0, [sp, #104]
  423900:	ldr	x0, [x0, #40]
  423904:	bl	423030 <strna>
  423908:	mov	x23, x0
  42390c:	ldr	x0, [sp, #104]
  423910:	ldr	x0, [x0, #48]
  423914:	bl	423030 <strna>
  423918:	mov	x24, x0
  42391c:	ldr	x0, [sp, #104]
  423920:	ldr	w19, [x0, #60]
  423924:	ldr	x0, [sp, #104]
  423928:	ldr	w20, [x0, #64]
  42392c:	ldr	x0, [sp, #104]
  423930:	ldr	w0, [x0, #56]
  423934:	bl	424e50 <inhibit_mode_to_string>
  423938:	str	x0, [sp, #16]
  42393c:	str	w20, [sp, #8]
  423940:	str	w19, [sp]
  423944:	mov	x7, x24
  423948:	mov	x6, x23
  42394c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423950:	add	x5, x0, #0x648
  423954:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423958:	add	x4, x0, #0x968
  42395c:	mov	w3, #0xb1                  	// #177
  423960:	mov	x2, x22
  423964:	ldr	w1, [sp, #120]
  423968:	mov	w0, w21
  42396c:	bl	407d60 <log_internal_realm@plt>
  423970:	b	42397c <inhibitor_start+0x148>
  423974:	ldr	w0, [sp, #120]
  423978:	cmp	w0, #0x0
  42397c:	ldr	x0, [sp, #104]
  423980:	mov	w1, #0x1                   	// #1
  423984:	strb	w1, [x0, #32]
  423988:	ldr	x0, [sp, #104]
  42398c:	bl	423408 <inhibitor_save>
  423990:	ldr	x0, [sp, #104]
  423994:	bl	4237a0 <bus_manager_send_inhibited_change>
  423998:	mov	w0, #0x0                   	// #0
  42399c:	ldp	x19, x20, [sp, #48]
  4239a0:	ldp	x21, x22, [sp, #64]
  4239a4:	ldp	x23, x24, [sp, #80]
  4239a8:	ldp	x29, x30, [sp, #32]
  4239ac:	add	sp, sp, #0x80
  4239b0:	ret

00000000004239b4 <inhibitor_stop>:
  4239b4:	sub	sp, sp, #0x80
  4239b8:	stp	x29, x30, [sp, #32]
  4239bc:	add	x29, sp, #0x20
  4239c0:	stp	x19, x20, [sp, #48]
  4239c4:	stp	x21, x22, [sp, #64]
  4239c8:	stp	x23, x24, [sp, #80]
  4239cc:	str	x0, [sp, #104]
  4239d0:	ldr	x0, [sp, #104]
  4239d4:	cmp	x0, #0x0
  4239d8:	cset	w0, eq  // eq = none
  4239dc:	and	w0, w0, #0xff
  4239e0:	and	x0, x0, #0xff
  4239e4:	cmp	x0, #0x0
  4239e8:	b.eq	423a14 <inhibitor_stop+0x60>  // b.none
  4239ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4239f0:	add	x1, x0, #0x543
  4239f4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4239f8:	add	x4, x0, #0x978
  4239fc:	mov	w3, #0xc0                  	// #192
  423a00:	mov	x2, x1
  423a04:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423a08:	add	x1, x0, #0x590
  423a0c:	mov	w0, #0x0                   	// #0
  423a10:	bl	407650 <log_assert_failed_realm@plt>
  423a14:	ldr	x0, [sp, #104]
  423a18:	ldrb	w0, [x0, #32]
  423a1c:	cmp	w0, #0x0
  423a20:	b.eq	423ae8 <inhibitor_stop+0x134>  // b.none
  423a24:	mov	w0, #0x7                   	// #7
  423a28:	str	w0, [sp, #116]
  423a2c:	str	wzr, [sp, #120]
  423a30:	str	wzr, [sp, #124]
  423a34:	ldr	w0, [sp, #124]
  423a38:	bl	4083e0 <log_get_max_level_realm@plt>
  423a3c:	mov	w1, w0
  423a40:	ldr	w0, [sp, #116]
  423a44:	and	w0, w0, #0x7
  423a48:	cmp	w1, w0
  423a4c:	b.lt	423ae0 <inhibitor_stop+0x12c>  // b.tstop
  423a50:	ldr	w0, [sp, #124]
  423a54:	lsl	w1, w0, #10
  423a58:	ldr	w0, [sp, #116]
  423a5c:	orr	w21, w1, w0
  423a60:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423a64:	add	x22, x0, #0x543
  423a68:	ldr	x0, [sp, #104]
  423a6c:	ldr	x0, [x0, #40]
  423a70:	bl	423030 <strna>
  423a74:	mov	x23, x0
  423a78:	ldr	x0, [sp, #104]
  423a7c:	ldr	x0, [x0, #48]
  423a80:	bl	423030 <strna>
  423a84:	mov	x24, x0
  423a88:	ldr	x0, [sp, #104]
  423a8c:	ldr	w19, [x0, #60]
  423a90:	ldr	x0, [sp, #104]
  423a94:	ldr	w20, [x0, #64]
  423a98:	ldr	x0, [sp, #104]
  423a9c:	ldr	w0, [x0, #56]
  423aa0:	bl	424e50 <inhibit_mode_to_string>
  423aa4:	str	x0, [sp, #16]
  423aa8:	str	w20, [sp, #8]
  423aac:	str	w19, [sp]
  423ab0:	mov	x7, x24
  423ab4:	mov	x6, x23
  423ab8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423abc:	add	x5, x0, #0x680
  423ac0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423ac4:	add	x4, x0, #0x988
  423ac8:	mov	w3, #0xc3                  	// #195
  423acc:	mov	x2, x22
  423ad0:	ldr	w1, [sp, #120]
  423ad4:	mov	w0, w21
  423ad8:	bl	407d60 <log_internal_realm@plt>
  423adc:	b	423ae8 <inhibitor_stop+0x134>
  423ae0:	ldr	w0, [sp, #120]
  423ae4:	cmp	w0, #0x0
  423ae8:	ldr	x0, [sp, #104]
  423aec:	bl	4243fc <inhibitor_remove_fifo>
  423af0:	ldr	x0, [sp, #104]
  423af4:	ldr	x0, [x0, #24]
  423af8:	cmp	x0, #0x0
  423afc:	b.eq	423b0c <inhibitor_stop+0x158>  // b.none
  423b00:	ldr	x0, [sp, #104]
  423b04:	ldr	x0, [x0, #24]
  423b08:	bl	4070c0 <unlink@plt>
  423b0c:	ldr	x0, [sp, #104]
  423b10:	strb	wzr, [x0, #32]
  423b14:	ldr	x0, [sp, #104]
  423b18:	bl	4237a0 <bus_manager_send_inhibited_change>
  423b1c:	nop
  423b20:	ldp	x19, x20, [sp, #48]
  423b24:	ldp	x21, x22, [sp, #64]
  423b28:	ldp	x23, x24, [sp, #80]
  423b2c:	ldp	x29, x30, [sp, #32]
  423b30:	add	sp, sp, #0x80
  423b34:	ret

0000000000423b38 <inhibitor_load>:
  423b38:	sub	sp, sp, #0x100
  423b3c:	stp	x29, x30, [sp, #80]
  423b40:	add	x29, sp, #0x50
  423b44:	stp	x19, x20, [sp, #96]
  423b48:	str	x0, [sp, #120]
  423b4c:	adrp	x0, 460000 <wordlist.10364+0x370>
  423b50:	ldr	x0, [x0, #4024]
  423b54:	ldr	x1, [x0]
  423b58:	str	x1, [sp, #248]
  423b5c:	mov	x1, #0x0                   	// #0
  423b60:	str	xzr, [sp, #192]
  423b64:	str	xzr, [sp, #200]
  423b68:	str	xzr, [sp, #208]
  423b6c:	str	xzr, [sp, #216]
  423b70:	str	xzr, [sp, #224]
  423b74:	str	xzr, [sp, #232]
  423b78:	ldr	x0, [sp, #120]
  423b7c:	ldr	x1, [x0, #24]
  423b80:	ldr	x0, [sp, #120]
  423b84:	add	x0, x0, #0x58
  423b88:	add	x4, sp, #0xd0
  423b8c:	add	x3, sp, #0xc8
  423b90:	add	x2, sp, #0xc0
  423b94:	str	xzr, [sp, #64]
  423b98:	str	x0, [sp, #56]
  423b9c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423ba0:	add	x0, x0, #0x6d0
  423ba4:	str	x0, [sp, #48]
  423ba8:	add	x0, sp, #0xe8
  423bac:	str	x0, [sp, #40]
  423bb0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423bb4:	add	x0, x0, #0x6d8
  423bb8:	str	x0, [sp, #32]
  423bbc:	add	x0, sp, #0xe0
  423bc0:	str	x0, [sp, #24]
  423bc4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423bc8:	add	x0, x0, #0x6e0
  423bcc:	str	x0, [sp, #16]
  423bd0:	add	x0, sp, #0xd8
  423bd4:	str	x0, [sp, #8]
  423bd8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423bdc:	add	x0, x0, #0x6e8
  423be0:	str	x0, [sp]
  423be4:	mov	x7, x4
  423be8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423bec:	add	x6, x0, #0x6b8
  423bf0:	mov	x5, x3
  423bf4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423bf8:	add	x4, x0, #0x6c0
  423bfc:	mov	x3, x2
  423c00:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423c04:	add	x2, x0, #0x6c8
  423c08:	mov	x0, #0x0                   	// #0
  423c0c:	bl	407a20 <parse_env_file_sentinel@plt>
  423c10:	str	w0, [sp, #132]
  423c14:	ldr	w0, [sp, #132]
  423c18:	cmp	w0, #0x0
  423c1c:	b.ge	423cb8 <inhibitor_load+0x180>  // b.tcont
  423c20:	mov	w0, #0x3                   	// #3
  423c24:	str	w0, [sp, #180]
  423c28:	ldr	w0, [sp, #132]
  423c2c:	str	w0, [sp, #184]
  423c30:	str	wzr, [sp, #188]
  423c34:	ldr	w0, [sp, #188]
  423c38:	bl	4083e0 <log_get_max_level_realm@plt>
  423c3c:	mov	w1, w0
  423c40:	ldr	w0, [sp, #180]
  423c44:	and	w0, w0, #0x7
  423c48:	cmp	w1, w0
  423c4c:	b.lt	423ca0 <inhibitor_load+0x168>  // b.tstop
  423c50:	ldr	w0, [sp, #188]
  423c54:	lsl	w1, w0, #10
  423c58:	ldr	w0, [sp, #180]
  423c5c:	orr	w7, w1, w0
  423c60:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423c64:	add	x1, x0, #0x543
  423c68:	ldr	x0, [sp, #120]
  423c6c:	ldr	x0, [x0, #24]
  423c70:	mov	x6, x0
  423c74:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423c78:	add	x5, x0, #0x6f0
  423c7c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423c80:	add	x4, x0, #0x998
  423c84:	mov	w3, #0xea                  	// #234
  423c88:	mov	x2, x1
  423c8c:	ldr	w1, [sp, #184]
  423c90:	mov	w0, w7
  423c94:	bl	407d60 <log_internal_realm@plt>
  423c98:	mov	w19, w0
  423c9c:	b	424048 <inhibitor_load+0x510>
  423ca0:	ldr	w0, [sp, #184]
  423ca4:	cmp	w0, #0x0
  423ca8:	cneg	w0, w0, lt  // lt = tstop
  423cac:	and	w0, w0, #0xff
  423cb0:	neg	w19, w0
  423cb4:	b	424048 <inhibitor_load+0x510>
  423cb8:	ldr	x0, [sp, #192]
  423cbc:	cmp	x0, #0x0
  423cc0:	b.eq	423cd0 <inhibitor_load+0x198>  // b.none
  423cc4:	ldr	x0, [sp, #192]
  423cc8:	bl	424bf4 <inhibit_what_from_string>
  423ccc:	b	423cd4 <inhibitor_load+0x19c>
  423cd0:	mov	w0, #0x0                   	// #0
  423cd4:	str	w0, [sp, #136]
  423cd8:	ldr	w0, [sp, #136]
  423cdc:	cmp	w0, #0x0
  423ce0:	b.lt	423cf0 <inhibitor_load+0x1b8>  // b.tstop
  423ce4:	ldr	x0, [sp, #120]
  423ce8:	ldr	w1, [sp, #136]
  423cec:	str	w1, [x0, #36]
  423cf0:	ldr	x0, [sp, #232]
  423cf4:	cmp	x0, #0x0
  423cf8:	b.eq	423d08 <inhibitor_load+0x1d0>  // b.none
  423cfc:	ldr	x0, [sp, #232]
  423d00:	bl	424e90 <inhibit_mode_from_string>
  423d04:	b	423d0c <inhibitor_load+0x1d4>
  423d08:	mov	w0, #0x0                   	// #0
  423d0c:	str	w0, [sp, #140]
  423d10:	ldr	w0, [sp, #140]
  423d14:	cmp	w0, #0x0
  423d18:	b.lt	423d28 <inhibitor_load+0x1f0>  // b.tstop
  423d1c:	ldr	x0, [sp, #120]
  423d20:	ldr	w1, [sp, #140]
  423d24:	str	w1, [x0, #56]
  423d28:	ldr	x0, [sp, #200]
  423d2c:	cmp	x0, #0x0
  423d30:	b.eq	423ddc <inhibitor_load+0x2a4>  // b.none
  423d34:	ldr	x2, [sp, #200]
  423d38:	ldr	x0, [sp, #120]
  423d3c:	add	x0, x0, #0x40
  423d40:	mov	x1, x0
  423d44:	mov	x0, x2
  423d48:	bl	407ee0 <parse_uid@plt>
  423d4c:	str	w0, [sp, #132]
  423d50:	ldr	w0, [sp, #132]
  423d54:	cmp	w0, #0x0
  423d58:	b.ge	423ddc <inhibitor_load+0x2a4>  // b.tcont
  423d5c:	mov	w0, #0x7                   	// #7
  423d60:	str	w0, [sp, #144]
  423d64:	ldr	w0, [sp, #132]
  423d68:	str	w0, [sp, #148]
  423d6c:	str	wzr, [sp, #152]
  423d70:	ldr	w0, [sp, #152]
  423d74:	bl	4083e0 <log_get_max_level_realm@plt>
  423d78:	mov	w1, w0
  423d7c:	ldr	w0, [sp, #144]
  423d80:	and	w0, w0, #0x7
  423d84:	cmp	w1, w0
  423d88:	b.lt	423dd4 <inhibitor_load+0x29c>  // b.tstop
  423d8c:	ldr	w0, [sp, #152]
  423d90:	lsl	w1, w0, #10
  423d94:	ldr	w0, [sp, #144]
  423d98:	orr	w7, w1, w0
  423d9c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423da0:	add	x1, x0, #0x543
  423da4:	ldr	x0, [sp, #200]
  423da8:	mov	x6, x0
  423dac:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423db0:	add	x5, x0, #0x708
  423db4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423db8:	add	x4, x0, #0x998
  423dbc:	mov	w3, #0xf7                  	// #247
  423dc0:	mov	x2, x1
  423dc4:	ldr	w1, [sp, #148]
  423dc8:	mov	w0, w7
  423dcc:	bl	407d60 <log_internal_realm@plt>
  423dd0:	b	423ddc <inhibitor_load+0x2a4>
  423dd4:	ldr	w0, [sp, #148]
  423dd8:	cmp	w0, #0x0
  423ddc:	ldr	x0, [sp, #208]
  423de0:	cmp	x0, #0x0
  423de4:	b.eq	423e90 <inhibitor_load+0x358>  // b.none
  423de8:	ldr	x2, [sp, #208]
  423dec:	ldr	x0, [sp, #120]
  423df0:	add	x0, x0, #0x3c
  423df4:	mov	x1, x0
  423df8:	mov	x0, x2
  423dfc:	bl	4078c0 <parse_pid@plt>
  423e00:	str	w0, [sp, #132]
  423e04:	ldr	w0, [sp, #132]
  423e08:	cmp	w0, #0x0
  423e0c:	b.ge	423e90 <inhibitor_load+0x358>  // b.tcont
  423e10:	mov	w0, #0x7                   	// #7
  423e14:	str	w0, [sp, #156]
  423e18:	ldr	w0, [sp, #132]
  423e1c:	str	w0, [sp, #160]
  423e20:	str	wzr, [sp, #164]
  423e24:	ldr	w0, [sp, #164]
  423e28:	bl	4083e0 <log_get_max_level_realm@plt>
  423e2c:	mov	w1, w0
  423e30:	ldr	w0, [sp, #156]
  423e34:	and	w0, w0, #0x7
  423e38:	cmp	w1, w0
  423e3c:	b.lt	423e88 <inhibitor_load+0x350>  // b.tstop
  423e40:	ldr	w0, [sp, #164]
  423e44:	lsl	w1, w0, #10
  423e48:	ldr	w0, [sp, #156]
  423e4c:	orr	w7, w1, w0
  423e50:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423e54:	add	x1, x0, #0x543
  423e58:	ldr	x0, [sp, #208]
  423e5c:	mov	x6, x0
  423e60:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423e64:	add	x5, x0, #0x730
  423e68:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423e6c:	add	x4, x0, #0x998
  423e70:	mov	w3, #0xfd                  	// #253
  423e74:	mov	x2, x1
  423e78:	ldr	w1, [sp, #160]
  423e7c:	mov	w0, w7
  423e80:	bl	407d60 <log_internal_realm@plt>
  423e84:	b	423e90 <inhibitor_load+0x358>
  423e88:	ldr	w0, [sp, #160]
  423e8c:	cmp	w0, #0x0
  423e90:	ldr	x0, [sp, #216]
  423e94:	cmp	x0, #0x0
  423e98:	b.eq	423f00 <inhibitor_load+0x3c8>  // b.none
  423e9c:	ldr	x0, [sp, #216]
  423ea0:	add	x1, sp, #0xf0
  423ea4:	mov	x2, x1
  423ea8:	mov	w1, #0x0                   	// #0
  423eac:	bl	4076b0 <cunescape@plt>
  423eb0:	str	w0, [sp, #132]
  423eb4:	ldr	w0, [sp, #132]
  423eb8:	cmp	w0, #0x0
  423ebc:	b.ge	423ee4 <inhibitor_load+0x3ac>  // b.tcont
  423ec0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423ec4:	add	x1, x0, #0x543
  423ec8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423ecc:	add	x3, x0, #0x998
  423ed0:	mov	w2, #0x103                 	// #259
  423ed4:	mov	w0, #0x0                   	// #0
  423ed8:	bl	408330 <log_oom_internal@plt>
  423edc:	mov	w19, w0
  423ee0:	b	424048 <inhibitor_load+0x510>
  423ee4:	ldr	x0, [sp, #120]
  423ee8:	ldr	x0, [x0, #40]
  423eec:	bl	408150 <free@plt>
  423ef0:	ldr	x1, [sp, #240]
  423ef4:	ldr	x0, [sp, #120]
  423ef8:	str	x1, [x0, #40]
  423efc:	str	xzr, [sp, #240]
  423f00:	ldr	x0, [sp, #224]
  423f04:	cmp	x0, #0x0
  423f08:	b.eq	423f70 <inhibitor_load+0x438>  // b.none
  423f0c:	ldr	x0, [sp, #224]
  423f10:	add	x1, sp, #0xf0
  423f14:	mov	x2, x1
  423f18:	mov	w1, #0x0                   	// #0
  423f1c:	bl	4076b0 <cunescape@plt>
  423f20:	str	w0, [sp, #132]
  423f24:	ldr	w0, [sp, #132]
  423f28:	cmp	w0, #0x0
  423f2c:	b.ge	423f54 <inhibitor_load+0x41c>  // b.tcont
  423f30:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423f34:	add	x1, x0, #0x543
  423f38:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423f3c:	add	x3, x0, #0x998
  423f40:	mov	w2, #0x10b                 	// #267
  423f44:	mov	w0, #0x0                   	// #0
  423f48:	bl	408330 <log_oom_internal@plt>
  423f4c:	mov	w19, w0
  423f50:	b	424048 <inhibitor_load+0x510>
  423f54:	ldr	x0, [sp, #120]
  423f58:	ldr	x0, [x0, #48]
  423f5c:	bl	408150 <free@plt>
  423f60:	ldr	x1, [sp, #240]
  423f64:	ldr	x0, [sp, #120]
  423f68:	str	x1, [x0, #48]
  423f6c:	str	xzr, [sp, #240]
  423f70:	ldr	x0, [sp, #120]
  423f74:	ldr	x0, [x0, #88]
  423f78:	cmp	x0, #0x0
  423f7c:	b.eq	424044 <inhibitor_load+0x50c>  // b.none
  423f80:	mov	w0, #0xffffffff            	// #-1
  423f84:	str	w0, [sp, #128]
  423f88:	ldr	x0, [sp, #120]
  423f8c:	bl	4241c0 <inhibitor_create_fifo>
  423f90:	str	w0, [sp, #128]
  423f94:	ldr	w0, [sp, #128]
  423f98:	cmp	w0, #0x0
  423f9c:	b.ge	424030 <inhibitor_load+0x4f8>  // b.tcont
  423fa0:	mov	w0, #0x3                   	// #3
  423fa4:	str	w0, [sp, #168]
  423fa8:	ldr	w0, [sp, #128]
  423fac:	str	w0, [sp, #172]
  423fb0:	str	wzr, [sp, #176]
  423fb4:	ldr	w0, [sp, #176]
  423fb8:	bl	4083e0 <log_get_max_level_realm@plt>
  423fbc:	mov	w1, w0
  423fc0:	ldr	w0, [sp, #168]
  423fc4:	and	w0, w0, #0x7
  423fc8:	cmp	w1, w0
  423fcc:	b.lt	424014 <inhibitor_load+0x4dc>  // b.tstop
  423fd0:	ldr	w0, [sp, #176]
  423fd4:	lsl	w1, w0, #10
  423fd8:	ldr	w0, [sp, #168]
  423fdc:	orr	w6, w1, w0
  423fe0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423fe4:	add	x1, x0, #0x543
  423fe8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423fec:	add	x5, x0, #0x758
  423ff0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  423ff4:	add	x4, x0, #0x998
  423ff8:	mov	w3, #0x116                 	// #278
  423ffc:	mov	x2, x1
  424000:	ldr	w1, [sp, #172]
  424004:	mov	w0, w6
  424008:	bl	407d60 <log_internal_realm@plt>
  42400c:	mov	w19, w0
  424010:	b	424028 <inhibitor_load+0x4f0>
  424014:	ldr	w0, [sp, #172]
  424018:	cmp	w0, #0x0
  42401c:	cneg	w0, w0, lt  // lt = tstop
  424020:	and	w0, w0, #0xff
  424024:	neg	w19, w0
  424028:	mov	w20, #0x0                   	// #0
  42402c:	b	424034 <inhibitor_load+0x4fc>
  424030:	mov	w20, #0x1                   	// #1
  424034:	add	x0, sp, #0x80
  424038:	bl	423054 <closep>
  42403c:	cmp	w20, #0x1
  424040:	b.ne	424048 <inhibitor_load+0x510>  // b.any
  424044:	mov	w19, #0x0                   	// #0
  424048:	add	x0, sp, #0xe8
  42404c:	bl	422f3c <freep>
  424050:	add	x0, sp, #0xe0
  424054:	bl	422f3c <freep>
  424058:	add	x0, sp, #0xd8
  42405c:	bl	422f3c <freep>
  424060:	add	x0, sp, #0xd0
  424064:	bl	422f3c <freep>
  424068:	add	x0, sp, #0xc8
  42406c:	bl	422f3c <freep>
  424070:	add	x0, sp, #0xc0
  424074:	bl	422f3c <freep>
  424078:	mov	w1, w19
  42407c:	adrp	x0, 460000 <wordlist.10364+0x370>
  424080:	ldr	x0, [x0, #4024]
  424084:	ldr	x2, [sp, #248]
  424088:	ldr	x0, [x0]
  42408c:	eor	x0, x2, x0
  424090:	cmp	x0, #0x0
  424094:	b.eq	42409c <inhibitor_load+0x564>  // b.none
  424098:	bl	407b20 <__stack_chk_fail@plt>
  42409c:	mov	w0, w1
  4240a0:	ldp	x19, x20, [sp, #96]
  4240a4:	ldp	x29, x30, [sp, #80]
  4240a8:	add	sp, sp, #0x100
  4240ac:	ret

00000000004240b0 <inhibitor_dispatch_fifo>:
  4240b0:	stp	x29, x30, [sp, #-64]!
  4240b4:	mov	x29, sp
  4240b8:	str	x0, [sp, #40]
  4240bc:	str	w1, [sp, #36]
  4240c0:	str	w2, [sp, #32]
  4240c4:	str	x3, [sp, #24]
  4240c8:	ldr	x0, [sp, #24]
  4240cc:	str	x0, [sp, #56]
  4240d0:	ldr	x0, [sp, #40]
  4240d4:	cmp	x0, #0x0
  4240d8:	cset	w0, eq  // eq = none
  4240dc:	and	w0, w0, #0xff
  4240e0:	and	x0, x0, #0xff
  4240e4:	cmp	x0, #0x0
  4240e8:	b.eq	424114 <inhibitor_dispatch_fifo+0x64>  // b.none
  4240ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4240f0:	add	x1, x0, #0x543
  4240f4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4240f8:	add	x4, x0, #0x9a8
  4240fc:	mov	w3, #0x11f                 	// #287
  424100:	mov	x2, x1
  424104:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424108:	add	x1, x0, #0x778
  42410c:	mov	w0, #0x0                   	// #0
  424110:	bl	407650 <log_assert_failed_realm@plt>
  424114:	ldr	x0, [sp, #56]
  424118:	ldr	w0, [x0, #96]
  42411c:	ldr	w1, [sp, #36]
  424120:	cmp	w1, w0
  424124:	cset	w0, ne  // ne = any
  424128:	and	w0, w0, #0xff
  42412c:	and	x0, x0, #0xff
  424130:	cmp	x0, #0x0
  424134:	b.eq	424160 <inhibitor_dispatch_fifo+0xb0>  // b.none
  424138:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42413c:	add	x1, x0, #0x543
  424140:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424144:	add	x4, x0, #0x9a8
  424148:	mov	w3, #0x120                 	// #288
  42414c:	mov	x2, x1
  424150:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424154:	add	x1, x0, #0x780
  424158:	mov	w0, #0x0                   	// #0
  42415c:	bl	407650 <log_assert_failed_realm@plt>
  424160:	ldr	x0, [sp, #56]
  424164:	cmp	x0, #0x0
  424168:	cset	w0, eq  // eq = none
  42416c:	and	w0, w0, #0xff
  424170:	and	x0, x0, #0xff
  424174:	cmp	x0, #0x0
  424178:	b.eq	4241a4 <inhibitor_dispatch_fifo+0xf4>  // b.none
  42417c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424180:	add	x1, x0, #0x543
  424184:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424188:	add	x4, x0, #0x9a8
  42418c:	mov	w3, #0x121                 	// #289
  424190:	mov	x2, x1
  424194:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424198:	add	x1, x0, #0x590
  42419c:	mov	w0, #0x0                   	// #0
  4241a0:	bl	407650 <log_assert_failed_realm@plt>
  4241a4:	ldr	x0, [sp, #56]
  4241a8:	bl	4239b4 <inhibitor_stop>
  4241ac:	ldr	x0, [sp, #56]
  4241b0:	bl	423370 <inhibitor_free>
  4241b4:	mov	w0, #0x0                   	// #0
  4241b8:	ldp	x29, x30, [sp], #64
  4241bc:	ret

00000000004241c0 <inhibitor_create_fifo>:
  4241c0:	stp	x29, x30, [sp, #-48]!
  4241c4:	mov	x29, sp
  4241c8:	str	x0, [sp, #24]
  4241cc:	ldr	x0, [sp, #24]
  4241d0:	cmp	x0, #0x0
  4241d4:	cset	w0, eq  // eq = none
  4241d8:	and	w0, w0, #0xff
  4241dc:	and	x0, x0, #0xff
  4241e0:	cmp	x0, #0x0
  4241e4:	b.eq	424210 <inhibitor_create_fifo+0x50>  // b.none
  4241e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4241ec:	add	x1, x0, #0x543
  4241f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4241f4:	add	x4, x0, #0x9c0
  4241f8:	mov	w3, #0x12c                 	// #300
  4241fc:	mov	x2, x1
  424200:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424204:	add	x1, x0, #0x590
  424208:	mov	w0, #0x0                   	// #0
  42420c:	bl	407650 <log_assert_failed_realm@plt>
  424210:	ldr	x0, [sp, #24]
  424214:	ldr	x0, [x0, #88]
  424218:	cmp	x0, #0x0
  42421c:	b.ne	4242d0 <inhibitor_create_fifo+0x110>  // b.any
  424220:	mov	w4, #0x2                   	// #2
  424224:	mov	w3, #0x0                   	// #0
  424228:	mov	w2, #0x0                   	// #0
  42422c:	mov	w1, #0x1ed                 	// #493
  424230:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424234:	add	x0, x0, #0x578
  424238:	bl	407ab0 <mkdir_safe_label@plt>
  42423c:	str	w0, [sp, #44]
  424240:	ldr	w0, [sp, #44]
  424244:	cmp	w0, #0x0
  424248:	b.ge	424254 <inhibitor_create_fifo+0x94>  // b.tcont
  42424c:	ldr	w0, [sp, #44]
  424250:	b	4243f4 <inhibitor_create_fifo+0x234>
  424254:	ldr	x0, [sp, #24]
  424258:	ldr	x1, [x0, #16]
  42425c:	mov	x3, #0x0                   	// #0
  424260:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424264:	add	x2, x0, #0x798
  424268:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42426c:	add	x0, x0, #0x7a0
  424270:	bl	4075d0 <strjoin_real@plt>
  424274:	mov	x1, x0
  424278:	ldr	x0, [sp, #24]
  42427c:	str	x1, [x0, #88]
  424280:	ldr	x0, [sp, #24]
  424284:	ldr	x0, [x0, #88]
  424288:	cmp	x0, #0x0
  42428c:	b.ne	424298 <inhibitor_create_fifo+0xd8>  // b.any
  424290:	mov	w0, #0xfffffff4            	// #-12
  424294:	b	4243f4 <inhibitor_create_fifo+0x234>
  424298:	ldr	x0, [sp, #24]
  42429c:	ldr	x0, [x0, #88]
  4242a0:	mov	w1, #0x180                 	// #384
  4242a4:	bl	407df0 <mkfifo@plt>
  4242a8:	cmp	w0, #0x0
  4242ac:	b.ge	4242d0 <inhibitor_create_fifo+0x110>  // b.tcont
  4242b0:	bl	407960 <__errno_location@plt>
  4242b4:	ldr	w0, [x0]
  4242b8:	cmp	w0, #0x11
  4242bc:	b.eq	4242d0 <inhibitor_create_fifo+0x110>  // b.none
  4242c0:	bl	407960 <__errno_location@plt>
  4242c4:	ldr	w0, [x0]
  4242c8:	neg	w0, w0
  4242cc:	b	4243f4 <inhibitor_create_fifo+0x234>
  4242d0:	ldr	x0, [sp, #24]
  4242d4:	ldr	w0, [x0, #96]
  4242d8:	cmp	w0, #0x0
  4242dc:	b.ge	424320 <inhibitor_create_fifo+0x160>  // b.tcont
  4242e0:	ldr	x0, [sp, #24]
  4242e4:	ldr	x0, [x0, #88]
  4242e8:	mov	w1, #0x800                 	// #2048
  4242ec:	movk	w1, #0x8, lsl #16
  4242f0:	bl	4082c0 <open64@plt>
  4242f4:	mov	w1, w0
  4242f8:	ldr	x0, [sp, #24]
  4242fc:	str	w1, [x0, #96]
  424300:	ldr	x0, [sp, #24]
  424304:	ldr	w0, [x0, #96]
  424308:	cmp	w0, #0x0
  42430c:	b.ge	424320 <inhibitor_create_fifo+0x160>  // b.tcont
  424310:	bl	407960 <__errno_location@plt>
  424314:	ldr	w0, [x0]
  424318:	neg	w0, w0
  42431c:	b	4243f4 <inhibitor_create_fifo+0x234>
  424320:	ldr	x0, [sp, #24]
  424324:	ldr	x0, [x0, #8]
  424328:	cmp	x0, #0x0
  42432c:	b.ne	4243bc <inhibitor_create_fifo+0x1fc>  // b.any
  424330:	ldr	x0, [sp, #24]
  424334:	ldr	x0, [x0]
  424338:	ldr	x6, [x0]
  42433c:	ldr	x0, [sp, #24]
  424340:	add	x1, x0, #0x8
  424344:	ldr	x0, [sp, #24]
  424348:	ldr	w2, [x0, #96]
  42434c:	ldr	x5, [sp, #24]
  424350:	adrp	x0, 424000 <inhibitor_load+0x4c8>
  424354:	add	x4, x0, #0xb0
  424358:	mov	w3, #0x0                   	// #0
  42435c:	mov	x0, x6
  424360:	bl	407eb0 <sd_event_add_io@plt>
  424364:	str	w0, [sp, #44]
  424368:	ldr	w0, [sp, #44]
  42436c:	cmp	w0, #0x0
  424370:	b.ge	42437c <inhibitor_create_fifo+0x1bc>  // b.tcont
  424374:	ldr	w0, [sp, #44]
  424378:	b	4243f4 <inhibitor_create_fifo+0x234>
  42437c:	ldr	x0, [sp, #24]
  424380:	ldr	x0, [x0, #8]
  424384:	mov	x1, #0x5a                  	// #90
  424388:	bl	407a30 <sd_event_source_set_priority@plt>
  42438c:	str	w0, [sp, #44]
  424390:	ldr	w0, [sp, #44]
  424394:	cmp	w0, #0x0
  424398:	b.ge	4243a4 <inhibitor_create_fifo+0x1e4>  // b.tcont
  42439c:	ldr	w0, [sp, #44]
  4243a0:	b	4243f4 <inhibitor_create_fifo+0x234>
  4243a4:	ldr	x0, [sp, #24]
  4243a8:	ldr	x2, [x0, #8]
  4243ac:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4243b0:	add	x1, x0, #0x7b8
  4243b4:	mov	x0, x2
  4243b8:	bl	408380 <sd_event_source_set_description@plt>
  4243bc:	ldr	x0, [sp, #24]
  4243c0:	ldr	x0, [x0, #88]
  4243c4:	mov	w1, #0x801                 	// #2049
  4243c8:	movk	w1, #0x8, lsl #16
  4243cc:	bl	4082c0 <open64@plt>
  4243d0:	str	w0, [sp, #44]
  4243d4:	ldr	w0, [sp, #44]
  4243d8:	cmp	w0, #0x0
  4243dc:	b.ge	4243f0 <inhibitor_create_fifo+0x230>  // b.tcont
  4243e0:	bl	407960 <__errno_location@plt>
  4243e4:	ldr	w0, [x0]
  4243e8:	neg	w0, w0
  4243ec:	b	4243f4 <inhibitor_create_fifo+0x234>
  4243f0:	ldr	w0, [sp, #44]
  4243f4:	ldp	x29, x30, [sp], #48
  4243f8:	ret

00000000004243fc <inhibitor_remove_fifo>:
  4243fc:	stp	x29, x30, [sp, #-32]!
  424400:	mov	x29, sp
  424404:	str	x0, [sp, #24]
  424408:	ldr	x0, [sp, #24]
  42440c:	cmp	x0, #0x0
  424410:	cset	w0, eq  // eq = none
  424414:	and	w0, w0, #0xff
  424418:	and	x0, x0, #0xff
  42441c:	cmp	x0, #0x0
  424420:	b.eq	42444c <inhibitor_remove_fifo+0x50>  // b.none
  424424:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424428:	add	x1, x0, #0x543
  42442c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424430:	add	x4, x0, #0x9d8
  424434:	mov	w3, #0x158                 	// #344
  424438:	mov	x2, x1
  42443c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424440:	add	x1, x0, #0x590
  424444:	mov	w0, #0x0                   	// #0
  424448:	bl	407650 <log_assert_failed_realm@plt>
  42444c:	ldr	x0, [sp, #24]
  424450:	ldr	x0, [x0, #8]
  424454:	bl	407550 <sd_event_source_unref@plt>
  424458:	mov	x1, x0
  42445c:	ldr	x0, [sp, #24]
  424460:	str	x1, [x0, #8]
  424464:	ldr	x0, [sp, #24]
  424468:	ldr	w0, [x0, #96]
  42446c:	bl	4075e0 <safe_close@plt>
  424470:	mov	w1, w0
  424474:	ldr	x0, [sp, #24]
  424478:	str	w1, [x0, #96]
  42447c:	ldr	x0, [sp, #24]
  424480:	ldr	x0, [x0, #88]
  424484:	cmp	x0, #0x0
  424488:	b.eq	4244b0 <inhibitor_remove_fifo+0xb4>  // b.none
  42448c:	ldr	x0, [sp, #24]
  424490:	ldr	x0, [x0, #88]
  424494:	bl	4070c0 <unlink@plt>
  424498:	ldr	x0, [sp, #24]
  42449c:	ldr	x0, [x0, #88]
  4244a0:	bl	422f1c <mfree>
  4244a4:	mov	x1, x0
  4244a8:	ldr	x0, [sp, #24]
  4244ac:	str	x1, [x0, #88]
  4244b0:	nop
  4244b4:	ldp	x29, x30, [sp], #32
  4244b8:	ret

00000000004244bc <inhibitor_is_orphan>:
  4244bc:	stp	x29, x30, [sp, #-32]!
  4244c0:	mov	x29, sp
  4244c4:	str	x0, [sp, #24]
  4244c8:	ldr	x0, [sp, #24]
  4244cc:	cmp	x0, #0x0
  4244d0:	cset	w0, eq  // eq = none
  4244d4:	and	w0, w0, #0xff
  4244d8:	and	x0, x0, #0xff
  4244dc:	cmp	x0, #0x0
  4244e0:	b.eq	42450c <inhibitor_is_orphan+0x50>  // b.none
  4244e4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4244e8:	add	x1, x0, #0x543
  4244ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4244f0:	add	x4, x0, #0x9f0
  4244f4:	mov	w3, #0x164                 	// #356
  4244f8:	mov	x2, x1
  4244fc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424500:	add	x1, x0, #0x590
  424504:	mov	w0, #0x0                   	// #0
  424508:	bl	407650 <log_assert_failed_realm@plt>
  42450c:	ldr	x0, [sp, #24]
  424510:	ldrb	w0, [x0, #32]
  424514:	eor	w0, w0, #0x1
  424518:	and	w0, w0, #0xff
  42451c:	cmp	w0, #0x0
  424520:	b.eq	42452c <inhibitor_is_orphan+0x70>  // b.none
  424524:	mov	w0, #0x1                   	// #1
  424528:	b	42457c <inhibitor_is_orphan+0xc0>
  42452c:	ldr	x0, [sp, #24]
  424530:	ldr	x0, [x0, #88]
  424534:	cmp	x0, #0x0
  424538:	b.ne	424544 <inhibitor_is_orphan+0x88>  // b.any
  42453c:	mov	w0, #0x1                   	// #1
  424540:	b	42457c <inhibitor_is_orphan+0xc0>
  424544:	ldr	x0, [sp, #24]
  424548:	ldr	w0, [x0, #96]
  42454c:	cmp	w0, #0x0
  424550:	b.ge	42455c <inhibitor_is_orphan+0xa0>  // b.tcont
  424554:	mov	w0, #0x1                   	// #1
  424558:	b	42457c <inhibitor_is_orphan+0xc0>
  42455c:	ldr	x0, [sp, #24]
  424560:	ldr	w0, [x0, #96]
  424564:	bl	407ba0 <pipe_eof@plt>
  424568:	cmp	w0, #0x0
  42456c:	b.eq	424578 <inhibitor_is_orphan+0xbc>  // b.none
  424570:	mov	w0, #0x1                   	// #1
  424574:	b	42457c <inhibitor_is_orphan+0xc0>
  424578:	mov	w0, #0x0                   	// #0
  42457c:	ldp	x29, x30, [sp], #32
  424580:	ret

0000000000424584 <manager_inhibit_what>:
  424584:	stp	x29, x30, [sp, #-80]!
  424588:	mov	x29, sp
  42458c:	str	x0, [sp, #24]
  424590:	str	w1, [sp, #20]
  424594:	adrp	x0, 460000 <wordlist.10364+0x370>
  424598:	ldr	x0, [x0, #4024]
  42459c:	ldr	x1, [x0]
  4245a0:	str	x1, [sp, #72]
  4245a4:	mov	x1, #0x0                   	// #0
  4245a8:	str	wzr, [sp, #44]
  4245ac:	ldr	x0, [sp, #24]
  4245b0:	cmp	x0, #0x0
  4245b4:	cset	w0, eq  // eq = none
  4245b8:	and	w0, w0, #0xff
  4245bc:	and	x0, x0, #0xff
  4245c0:	cmp	x0, #0x0
  4245c4:	b.eq	4245f0 <manager_inhibit_what+0x6c>  // b.none
  4245c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4245cc:	add	x1, x0, #0x543
  4245d0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4245d4:	add	x4, x0, #0xa08
  4245d8:	mov	w3, #0x17a                 	// #378
  4245dc:	mov	x2, x1
  4245e0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4245e4:	add	x1, x0, #0x568
  4245e8:	mov	w0, #0x0                   	// #0
  4245ec:	bl	407650 <log_assert_failed_realm@plt>
  4245f0:	mov	w0, #0xfffffffe            	// #-2
  4245f4:	str	w0, [sp, #56]
  4245f8:	str	xzr, [sp, #64]
  4245fc:	b	424638 <manager_inhibit_what+0xb4>
  424600:	ldr	x0, [sp, #48]
  424604:	ldr	w0, [x0, #56]
  424608:	ldr	w1, [sp, #20]
  42460c:	cmp	w1, w0
  424610:	b.ne	424638 <manager_inhibit_what+0xb4>  // b.any
  424614:	ldr	x0, [sp, #48]
  424618:	ldrb	w0, [x0, #32]
  42461c:	cmp	w0, #0x0
  424620:	b.eq	424638 <manager_inhibit_what+0xb4>  // b.none
  424624:	ldr	x0, [sp, #48]
  424628:	ldr	w0, [x0, #36]
  42462c:	ldr	w1, [sp, #44]
  424630:	orr	w0, w1, w0
  424634:	str	w0, [sp, #44]
  424638:	ldr	x0, [sp, #24]
  42463c:	ldr	x0, [x0, #56]
  424640:	add	x2, sp, #0x30
  424644:	add	x1, sp, #0x38
  424648:	mov	x3, #0x0                   	// #0
  42464c:	bl	4230c0 <hashmap_iterate>
  424650:	and	w0, w0, #0xff
  424654:	cmp	w0, #0x0
  424658:	b.ne	424600 <manager_inhibit_what+0x7c>  // b.any
  42465c:	ldr	w0, [sp, #44]
  424660:	mov	w1, w0
  424664:	adrp	x0, 460000 <wordlist.10364+0x370>
  424668:	ldr	x0, [x0, #4024]
  42466c:	ldr	x2, [sp, #72]
  424670:	ldr	x0, [x0]
  424674:	eor	x0, x2, x0
  424678:	cmp	x0, #0x0
  42467c:	b.eq	424684 <manager_inhibit_what+0x100>  // b.none
  424680:	bl	407b20 <__stack_chk_fail@plt>
  424684:	mov	w0, w1
  424688:	ldp	x29, x30, [sp], #80
  42468c:	ret

0000000000424690 <pid_is_active>:
  424690:	stp	x29, x30, [sp, #-64]!
  424694:	mov	x29, sp
  424698:	str	x0, [sp, #24]
  42469c:	str	w1, [sp, #20]
  4246a0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4246a4:	ldr	x0, [x0, #4024]
  4246a8:	ldr	x1, [x0]
  4246ac:	str	x1, [sp, #56]
  4246b0:	mov	x1, #0x0                   	// #0
  4246b4:	add	x0, sp, #0x30
  4246b8:	mov	x2, x0
  4246bc:	ldr	w1, [sp, #20]
  4246c0:	ldr	x0, [sp, #24]
  4246c4:	bl	411fa4 <manager_get_session_by_pid>
  4246c8:	str	w0, [sp, #44]
  4246cc:	ldr	w0, [sp, #44]
  4246d0:	cmp	w0, #0x0
  4246d4:	b.ge	4246e0 <pid_is_active+0x50>  // b.tcont
  4246d8:	ldr	w0, [sp, #44]
  4246dc:	b	424700 <pid_is_active+0x70>
  4246e0:	ldr	w0, [sp, #44]
  4246e4:	cmp	w0, #0x0
  4246e8:	b.ne	4246f4 <pid_is_active+0x64>  // b.any
  4246ec:	mov	w0, #0x1                   	// #1
  4246f0:	b	424700 <pid_is_active+0x70>
  4246f4:	ldr	x0, [sp, #48]
  4246f8:	bl	4326f4 <session_is_active>
  4246fc:	and	w0, w0, #0xff
  424700:	mov	w1, w0
  424704:	adrp	x0, 460000 <wordlist.10364+0x370>
  424708:	ldr	x0, [x0, #4024]
  42470c:	ldr	x2, [sp, #56]
  424710:	ldr	x0, [x0]
  424714:	eor	x0, x2, x0
  424718:	cmp	x0, #0x0
  42471c:	b.eq	424724 <pid_is_active+0x94>  // b.none
  424720:	bl	407b20 <__stack_chk_fail@plt>
  424724:	mov	w0, w1
  424728:	ldp	x29, x30, [sp], #64
  42472c:	ret

0000000000424730 <manager_is_inhibited>:
  424730:	stp	x29, x30, [sp, #-128]!
  424734:	mov	x29, sp
  424738:	str	x0, [sp, #56]
  42473c:	str	w1, [sp, #52]
  424740:	str	w2, [sp, #48]
  424744:	str	x3, [sp, #40]
  424748:	strb	w4, [sp, #39]
  42474c:	strb	w5, [sp, #38]
  424750:	str	w6, [sp, #32]
  424754:	str	x7, [sp, #24]
  424758:	adrp	x0, 460000 <wordlist.10364+0x370>
  42475c:	ldr	x0, [x0, #4024]
  424760:	ldr	x1, [x0]
  424764:	str	x1, [sp, #120]
  424768:	mov	x1, #0x0                   	// #0
  42476c:	stp	xzr, xzr, [sp, #104]
  424770:	strb	wzr, [sp, #79]
  424774:	ldr	x0, [sp, #56]
  424778:	cmp	x0, #0x0
  42477c:	cset	w0, eq  // eq = none
  424780:	and	w0, w0, #0xff
  424784:	and	x0, x0, #0xff
  424788:	cmp	x0, #0x0
  42478c:	b.eq	4247b8 <manager_is_inhibited+0x88>  // b.none
  424790:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424794:	add	x1, x0, #0x543
  424798:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42479c:	add	x4, x0, #0xa20
  4247a0:	mov	w3, #0x1a4                 	// #420
  4247a4:	mov	x2, x1
  4247a8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4247ac:	add	x1, x0, #0x568
  4247b0:	mov	w0, #0x0                   	// #0
  4247b4:	bl	407650 <log_assert_failed_realm@plt>
  4247b8:	ldr	w0, [sp, #52]
  4247bc:	cmp	w0, #0x0
  4247c0:	cset	w0, le
  4247c4:	and	w0, w0, #0xff
  4247c8:	and	x0, x0, #0xff
  4247cc:	cmp	x0, #0x0
  4247d0:	b.ne	4247f0 <manager_is_inhibited+0xc0>  // b.any
  4247d4:	ldr	w0, [sp, #52]
  4247d8:	cmp	w0, #0x7f
  4247dc:	cset	w0, gt
  4247e0:	and	w0, w0, #0xff
  4247e4:	and	x0, x0, #0xff
  4247e8:	cmp	x0, #0x0
  4247ec:	b.eq	424818 <manager_is_inhibited+0xe8>  // b.none
  4247f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4247f4:	add	x1, x0, #0x543
  4247f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4247fc:	add	x4, x0, #0xa20
  424800:	mov	w3, #0x1a5                 	// #421
  424804:	mov	x2, x1
  424808:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42480c:	add	x1, x0, #0x7c8
  424810:	mov	w0, #0x0                   	// #0
  424814:	bl	407650 <log_assert_failed_realm@plt>
  424818:	mov	w0, #0xfffffffe            	// #-2
  42481c:	str	w0, [sp, #88]
  424820:	str	xzr, [sp, #96]
  424824:	b	42491c <manager_is_inhibited+0x1ec>
  424828:	ldr	x0, [sp, #80]
  42482c:	ldrb	w0, [x0, #32]
  424830:	eor	w0, w0, #0x1
  424834:	and	w0, w0, #0xff
  424838:	cmp	w0, #0x0
  42483c:	b.eq	424844 <manager_is_inhibited+0x114>  // b.none
  424840:	b	42491c <manager_is_inhibited+0x1ec>
  424844:	ldr	x0, [sp, #80]
  424848:	ldr	w1, [x0, #36]
  42484c:	ldr	w0, [sp, #52]
  424850:	and	w0, w1, w0
  424854:	cmp	w0, #0x0
  424858:	b.ne	424860 <manager_is_inhibited+0x130>  // b.any
  42485c:	b	42491c <manager_is_inhibited+0x1ec>
  424860:	ldr	x0, [sp, #80]
  424864:	ldr	w0, [x0, #56]
  424868:	ldr	w1, [sp, #48]
  42486c:	cmp	w1, w0
  424870:	b.eq	424878 <manager_is_inhibited+0x148>  // b.none
  424874:	b	42491c <manager_is_inhibited+0x1ec>
  424878:	ldrb	w0, [sp, #39]
  42487c:	cmp	w0, #0x0
  424880:	b.eq	4248a4 <manager_is_inhibited+0x174>  // b.none
  424884:	ldr	x0, [sp, #80]
  424888:	ldr	w0, [x0, #60]
  42488c:	mov	w1, w0
  424890:	ldr	x0, [sp, #56]
  424894:	bl	424690 <pid_is_active>
  424898:	cmp	w0, #0x0
  42489c:	b.gt	4248a4 <manager_is_inhibited+0x174>
  4248a0:	b	42491c <manager_is_inhibited+0x1ec>
  4248a4:	ldrb	w0, [sp, #38]
  4248a8:	cmp	w0, #0x0
  4248ac:	b.eq	4248c8 <manager_is_inhibited+0x198>  // b.none
  4248b0:	ldr	x0, [sp, #80]
  4248b4:	ldr	w0, [x0, #64]
  4248b8:	ldr	w1, [sp, #32]
  4248bc:	cmp	w1, w0
  4248c0:	b.ne	4248c8 <manager_is_inhibited+0x198>  // b.any
  4248c4:	b	42491c <manager_is_inhibited+0x1ec>
  4248c8:	ldrb	w0, [sp, #79]
  4248cc:	eor	w0, w0, #0x1
  4248d0:	and	w0, w0, #0xff
  4248d4:	cmp	w0, #0x0
  4248d8:	b.ne	4248f0 <manager_is_inhibited+0x1c0>  // b.any
  4248dc:	ldr	x0, [sp, #80]
  4248e0:	ldr	x1, [x0, #80]
  4248e4:	ldr	x0, [sp, #112]
  4248e8:	cmp	x1, x0
  4248ec:	b.cs	4248fc <manager_is_inhibited+0x1cc>  // b.hs, b.nlast
  4248f0:	ldr	x0, [sp, #80]
  4248f4:	ldp	x0, x1, [x0, #72]
  4248f8:	stp	x0, x1, [sp, #104]
  4248fc:	mov	w0, #0x1                   	// #1
  424900:	strb	w0, [sp, #79]
  424904:	ldr	x0, [sp, #24]
  424908:	cmp	x0, #0x0
  42490c:	b.eq	42491c <manager_is_inhibited+0x1ec>  // b.none
  424910:	ldr	x1, [sp, #80]
  424914:	ldr	x0, [sp, #24]
  424918:	str	x1, [x0]
  42491c:	ldr	x0, [sp, #56]
  424920:	ldr	x0, [x0, #56]
  424924:	add	x2, sp, #0x50
  424928:	add	x1, sp, #0x58
  42492c:	mov	x3, #0x0                   	// #0
  424930:	bl	4230c0 <hashmap_iterate>
  424934:	and	w0, w0, #0xff
  424938:	cmp	w0, #0x0
  42493c:	b.ne	424828 <manager_is_inhibited+0xf8>  // b.any
  424940:	ldr	x0, [sp, #40]
  424944:	cmp	x0, #0x0
  424948:	b.eq	424958 <manager_is_inhibited+0x228>  // b.none
  42494c:	ldr	x2, [sp, #40]
  424950:	ldp	x0, x1, [sp, #104]
  424954:	stp	x0, x1, [x2]
  424958:	ldrb	w0, [sp, #79]
  42495c:	mov	w1, w0
  424960:	adrp	x0, 460000 <wordlist.10364+0x370>
  424964:	ldr	x0, [x0, #4024]
  424968:	ldr	x2, [sp, #120]
  42496c:	ldr	x0, [x0]
  424970:	eor	x0, x2, x0
  424974:	cmp	x0, #0x0
  424978:	b.eq	424980 <manager_is_inhibited+0x250>  // b.none
  42497c:	bl	407b20 <__stack_chk_fail@plt>
  424980:	mov	w0, w1
  424984:	ldp	x29, x30, [sp], #128
  424988:	ret

000000000042498c <inhibit_what_to_string>:
  42498c:	stp	x29, x30, [sp, #-48]!
  424990:	mov	x29, sp
  424994:	str	w0, [sp, #28]
  424998:	ldr	w0, [sp, #28]
  42499c:	cmp	w0, #0x0
  4249a0:	b.lt	4249b0 <inhibit_what_to_string+0x24>  // b.tstop
  4249a4:	ldr	w0, [sp, #28]
  4249a8:	cmp	w0, #0x7f
  4249ac:	b.le	4249b8 <inhibit_what_to_string+0x2c>
  4249b0:	mov	x0, #0x0                   	// #0
  4249b4:	b	424bec <inhibit_what_to_string+0x260>
  4249b8:	movz	x0, #0x0, lsl #16
  4249bc:	movk	x0, #0x10
  4249c0:	nop
  4249c4:	nop
  4249c8:	mrs	x1, tpidr_el0
  4249cc:	add	x0, x1, x0
  4249d0:	str	x0, [sp, #40]
  4249d4:	ldr	w0, [sp, #28]
  4249d8:	and	w0, w0, #0x1
  4249dc:	cmp	w0, #0x0
  4249e0:	b.eq	424a10 <inhibit_what_to_string+0x84>  // b.none
  4249e4:	ldr	x2, [sp, #40]
  4249e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4249ec:	add	x1, x0, #0x7e8
  4249f0:	mov	x0, x2
  4249f4:	ldr	x2, [x1]
  4249f8:	str	x2, [x0]
  4249fc:	ldrh	w1, [x1, #8]
  424a00:	strh	w1, [x0, #8]
  424a04:	ldr	x0, [sp, #40]
  424a08:	add	x0, x0, #0x9
  424a0c:	str	x0, [sp, #40]
  424a10:	ldr	w0, [sp, #28]
  424a14:	and	w0, w0, #0x2
  424a18:	cmp	w0, #0x0
  424a1c:	b.eq	424a4c <inhibit_what_to_string+0xc0>  // b.none
  424a20:	ldr	x2, [sp, #40]
  424a24:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424a28:	add	x1, x0, #0x7f8
  424a2c:	mov	x0, x2
  424a30:	ldr	w2, [x1]
  424a34:	str	w2, [x0]
  424a38:	ldur	w1, [x1, #3]
  424a3c:	stur	w1, [x0, #3]
  424a40:	ldr	x0, [sp, #40]
  424a44:	add	x0, x0, #0x6
  424a48:	str	x0, [sp, #40]
  424a4c:	ldr	w0, [sp, #28]
  424a50:	and	w0, w0, #0x4
  424a54:	cmp	w0, #0x0
  424a58:	b.eq	424a88 <inhibit_what_to_string+0xfc>  // b.none
  424a5c:	ldr	x2, [sp, #40]
  424a60:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424a64:	add	x1, x0, #0x800
  424a68:	mov	x0, x2
  424a6c:	ldr	w2, [x1]
  424a70:	str	w2, [x0]
  424a74:	ldrh	w1, [x1, #4]
  424a78:	strh	w1, [x0, #4]
  424a7c:	ldr	x0, [sp, #40]
  424a80:	add	x0, x0, #0x5
  424a84:	str	x0, [sp, #40]
  424a88:	ldr	w0, [sp, #28]
  424a8c:	and	w0, w0, #0x8
  424a90:	cmp	w0, #0x0
  424a94:	b.eq	424ac8 <inhibit_what_to_string+0x13c>  // b.none
  424a98:	ldr	x1, [sp, #40]
  424a9c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424aa0:	add	x0, x0, #0x808
  424aa4:	mov	x2, x1
  424aa8:	mov	x3, x0
  424aac:	ldp	x0, x1, [x3]
  424ab0:	stp	x0, x1, [x2]
  424ab4:	ldrh	w0, [x3, #16]
  424ab8:	strh	w0, [x2, #16]
  424abc:	ldr	x0, [sp, #40]
  424ac0:	add	x0, x0, #0x11
  424ac4:	str	x0, [sp, #40]
  424ac8:	ldr	w0, [sp, #28]
  424acc:	and	w0, w0, #0x10
  424ad0:	cmp	w0, #0x0
  424ad4:	b.eq	424b08 <inhibit_what_to_string+0x17c>  // b.none
  424ad8:	ldr	x1, [sp, #40]
  424adc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424ae0:	add	x0, x0, #0x820
  424ae4:	mov	x2, x1
  424ae8:	mov	x3, x0
  424aec:	ldp	x0, x1, [x3]
  424af0:	stp	x0, x1, [x2]
  424af4:	ldr	w0, [x3, #16]
  424af8:	str	w0, [x2, #16]
  424afc:	ldr	x0, [sp, #40]
  424b00:	add	x0, x0, #0x13
  424b04:	str	x0, [sp, #40]
  424b08:	ldr	w0, [sp, #28]
  424b0c:	and	w0, w0, #0x20
  424b10:	cmp	w0, #0x0
  424b14:	b.eq	424b50 <inhibit_what_to_string+0x1c4>  // b.none
  424b18:	ldr	x1, [sp, #40]
  424b1c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424b20:	add	x0, x0, #0x838
  424b24:	mov	x2, x1
  424b28:	mov	x3, x0
  424b2c:	ldp	x0, x1, [x3]
  424b30:	stp	x0, x1, [x2]
  424b34:	add	x1, x3, #0xe
  424b38:	add	x0, x2, #0xe
  424b3c:	ldr	x1, [x1]
  424b40:	str	x1, [x0]
  424b44:	ldr	x0, [sp, #40]
  424b48:	add	x0, x0, #0x15
  424b4c:	str	x0, [sp, #40]
  424b50:	ldr	w0, [sp, #28]
  424b54:	and	w0, w0, #0x40
  424b58:	cmp	w0, #0x0
  424b5c:	b.eq	424b98 <inhibit_what_to_string+0x20c>  // b.none
  424b60:	ldr	x1, [sp, #40]
  424b64:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424b68:	add	x0, x0, #0x850
  424b6c:	mov	x2, x1
  424b70:	mov	x3, x0
  424b74:	ldp	x0, x1, [x3]
  424b78:	stp	x0, x1, [x2]
  424b7c:	add	x1, x3, #0xf
  424b80:	add	x0, x2, #0xf
  424b84:	ldr	w1, [x1]
  424b88:	str	w1, [x0]
  424b8c:	ldr	x0, [sp, #40]
  424b90:	add	x0, x0, #0x12
  424b94:	str	x0, [sp, #40]
  424b98:	ldr	x1, [sp, #40]
  424b9c:	movz	x0, #0x0, lsl #16
  424ba0:	movk	x0, #0x10
  424ba4:	nop
  424ba8:	nop
  424bac:	mrs	x2, tpidr_el0
  424bb0:	add	x0, x2, x0
  424bb4:	cmp	x1, x0
  424bb8:	b.ls	424bcc <inhibit_what_to_string+0x240>  // b.plast
  424bbc:	ldr	x0, [sp, #40]
  424bc0:	sub	x0, x0, #0x1
  424bc4:	strb	wzr, [x0]
  424bc8:	b	424bd4 <inhibit_what_to_string+0x248>
  424bcc:	ldr	x0, [sp, #40]
  424bd0:	strb	wzr, [x0]
  424bd4:	movz	x0, #0x0, lsl #16
  424bd8:	movk	x0, #0x10
  424bdc:	nop
  424be0:	nop
  424be4:	mrs	x1, tpidr_el0
  424be8:	add	x0, x1, x0
  424bec:	ldp	x29, x30, [sp], #48
  424bf0:	ret

0000000000424bf4 <inhibit_what_from_string>:
  424bf4:	stp	x29, x30, [sp, #-80]!
  424bf8:	mov	x29, sp
  424bfc:	str	x0, [sp, #24]
  424c00:	adrp	x0, 460000 <wordlist.10364+0x370>
  424c04:	ldr	x0, [x0, #4024]
  424c08:	ldr	x1, [x0]
  424c0c:	str	x1, [sp, #72]
  424c10:	mov	x1, #0x0                   	// #0
  424c14:	str	wzr, [sp, #44]
  424c18:	ldr	x0, [sp, #24]
  424c1c:	str	x0, [sp, #48]
  424c20:	add	x1, sp, #0x38
  424c24:	add	x4, sp, #0x30
  424c28:	mov	w3, #0x0                   	// #0
  424c2c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424c30:	add	x2, x0, #0x868
  424c34:	mov	x0, x4
  424c38:	bl	407e00 <split@plt>
  424c3c:	str	x0, [sp, #64]
  424c40:	b	424e10 <inhibit_what_from_string+0x21c>
  424c44:	ldr	x0, [sp, #56]
  424c48:	cmp	x0, #0x8
  424c4c:	b.ne	424c80 <inhibit_what_from_string+0x8c>  // b.any
  424c50:	ldr	x0, [sp, #56]
  424c54:	mov	x2, x0
  424c58:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424c5c:	add	x1, x0, #0x870
  424c60:	ldr	x0, [sp, #64]
  424c64:	bl	407770 <strncmp@plt>
  424c68:	cmp	w0, #0x0
  424c6c:	b.ne	424c80 <inhibit_what_from_string+0x8c>  // b.any
  424c70:	ldr	w0, [sp, #44]
  424c74:	orr	w0, w0, #0x1
  424c78:	str	w0, [sp, #44]
  424c7c:	b	424df0 <inhibit_what_from_string+0x1fc>
  424c80:	ldr	x0, [sp, #56]
  424c84:	cmp	x0, #0x5
  424c88:	b.ne	424cbc <inhibit_what_from_string+0xc8>  // b.any
  424c8c:	ldr	x0, [sp, #56]
  424c90:	mov	x2, x0
  424c94:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424c98:	add	x1, x0, #0x880
  424c9c:	ldr	x0, [sp, #64]
  424ca0:	bl	407770 <strncmp@plt>
  424ca4:	cmp	w0, #0x0
  424ca8:	b.ne	424cbc <inhibit_what_from_string+0xc8>  // b.any
  424cac:	ldr	w0, [sp, #44]
  424cb0:	orr	w0, w0, #0x2
  424cb4:	str	w0, [sp, #44]
  424cb8:	b	424df0 <inhibit_what_from_string+0x1fc>
  424cbc:	ldr	x0, [sp, #56]
  424cc0:	cmp	x0, #0x4
  424cc4:	b.ne	424cf8 <inhibit_what_from_string+0x104>  // b.any
  424cc8:	ldr	x0, [sp, #56]
  424ccc:	mov	x2, x0
  424cd0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424cd4:	add	x1, x0, #0x888
  424cd8:	ldr	x0, [sp, #64]
  424cdc:	bl	407770 <strncmp@plt>
  424ce0:	cmp	w0, #0x0
  424ce4:	b.ne	424cf8 <inhibit_what_from_string+0x104>  // b.any
  424ce8:	ldr	w0, [sp, #44]
  424cec:	orr	w0, w0, #0x4
  424cf0:	str	w0, [sp, #44]
  424cf4:	b	424df0 <inhibit_what_from_string+0x1fc>
  424cf8:	ldr	x0, [sp, #56]
  424cfc:	cmp	x0, #0x10
  424d00:	b.ne	424d34 <inhibit_what_from_string+0x140>  // b.any
  424d04:	ldr	x0, [sp, #56]
  424d08:	mov	x2, x0
  424d0c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424d10:	add	x1, x0, #0x890
  424d14:	ldr	x0, [sp, #64]
  424d18:	bl	407770 <strncmp@plt>
  424d1c:	cmp	w0, #0x0
  424d20:	b.ne	424d34 <inhibit_what_from_string+0x140>  // b.any
  424d24:	ldr	w0, [sp, #44]
  424d28:	orr	w0, w0, #0x8
  424d2c:	str	w0, [sp, #44]
  424d30:	b	424df0 <inhibit_what_from_string+0x1fc>
  424d34:	ldr	x0, [sp, #56]
  424d38:	cmp	x0, #0x12
  424d3c:	b.ne	424d70 <inhibit_what_from_string+0x17c>  // b.any
  424d40:	ldr	x0, [sp, #56]
  424d44:	mov	x2, x0
  424d48:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424d4c:	add	x1, x0, #0x8a8
  424d50:	ldr	x0, [sp, #64]
  424d54:	bl	407770 <strncmp@plt>
  424d58:	cmp	w0, #0x0
  424d5c:	b.ne	424d70 <inhibit_what_from_string+0x17c>  // b.any
  424d60:	ldr	w0, [sp, #44]
  424d64:	orr	w0, w0, #0x10
  424d68:	str	w0, [sp, #44]
  424d6c:	b	424df0 <inhibit_what_from_string+0x1fc>
  424d70:	ldr	x0, [sp, #56]
  424d74:	cmp	x0, #0x14
  424d78:	b.ne	424dac <inhibit_what_from_string+0x1b8>  // b.any
  424d7c:	ldr	x0, [sp, #56]
  424d80:	mov	x2, x0
  424d84:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424d88:	add	x1, x0, #0x8c0
  424d8c:	ldr	x0, [sp, #64]
  424d90:	bl	407770 <strncmp@plt>
  424d94:	cmp	w0, #0x0
  424d98:	b.ne	424dac <inhibit_what_from_string+0x1b8>  // b.any
  424d9c:	ldr	w0, [sp, #44]
  424da0:	orr	w0, w0, #0x20
  424da4:	str	w0, [sp, #44]
  424da8:	b	424df0 <inhibit_what_from_string+0x1fc>
  424dac:	ldr	x0, [sp, #56]
  424db0:	cmp	x0, #0x11
  424db4:	b.ne	424de8 <inhibit_what_from_string+0x1f4>  // b.any
  424db8:	ldr	x0, [sp, #56]
  424dbc:	mov	x2, x0
  424dc0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424dc4:	add	x1, x0, #0x8d8
  424dc8:	ldr	x0, [sp, #64]
  424dcc:	bl	407770 <strncmp@plt>
  424dd0:	cmp	w0, #0x0
  424dd4:	b.ne	424de8 <inhibit_what_from_string+0x1f4>  // b.any
  424dd8:	ldr	w0, [sp, #44]
  424ddc:	orr	w0, w0, #0x40
  424de0:	str	w0, [sp, #44]
  424de4:	b	424df0 <inhibit_what_from_string+0x1fc>
  424de8:	mov	w0, #0xffffffff            	// #-1
  424dec:	b	424e20 <inhibit_what_from_string+0x22c>
  424df0:	add	x1, sp, #0x38
  424df4:	add	x4, sp, #0x30
  424df8:	mov	w3, #0x0                   	// #0
  424dfc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  424e00:	add	x2, x0, #0x868
  424e04:	mov	x0, x4
  424e08:	bl	407e00 <split@plt>
  424e0c:	str	x0, [sp, #64]
  424e10:	ldr	x0, [sp, #64]
  424e14:	cmp	x0, #0x0
  424e18:	b.ne	424c44 <inhibit_what_from_string+0x50>  // b.any
  424e1c:	ldr	w0, [sp, #44]
  424e20:	mov	w1, w0
  424e24:	adrp	x0, 460000 <wordlist.10364+0x370>
  424e28:	ldr	x0, [x0, #4024]
  424e2c:	ldr	x2, [sp, #72]
  424e30:	ldr	x0, [x0]
  424e34:	eor	x0, x2, x0
  424e38:	cmp	x0, #0x0
  424e3c:	b.eq	424e44 <inhibit_what_from_string+0x250>  // b.none
  424e40:	bl	407b20 <__stack_chk_fail@plt>
  424e44:	mov	w0, w1
  424e48:	ldp	x29, x30, [sp], #80
  424e4c:	ret

0000000000424e50 <inhibit_mode_to_string>:
  424e50:	sub	sp, sp, #0x10
  424e54:	str	w0, [sp, #12]
  424e58:	ldr	w0, [sp, #12]
  424e5c:	cmp	w0, #0x0
  424e60:	b.lt	424e70 <inhibit_mode_to_string+0x20>  // b.tstop
  424e64:	ldr	w0, [sp, #12]
  424e68:	cmp	w0, #0x1
  424e6c:	b.le	424e78 <inhibit_mode_to_string+0x28>
  424e70:	mov	x0, #0x0                   	// #0
  424e74:	b	424e88 <inhibit_mode_to_string+0x38>
  424e78:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  424e7c:	add	x0, x0, #0x430
  424e80:	ldrsw	x1, [sp, #12]
  424e84:	ldr	x0, [x0, x1, lsl #3]
  424e88:	add	sp, sp, #0x10
  424e8c:	ret

0000000000424e90 <inhibit_mode_from_string>:
  424e90:	stp	x29, x30, [sp, #-32]!
  424e94:	mov	x29, sp
  424e98:	str	x0, [sp, #24]
  424e9c:	ldr	x2, [sp, #24]
  424ea0:	mov	x1, #0x2                   	// #2
  424ea4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  424ea8:	add	x0, x0, #0x430
  424eac:	bl	407ef0 <string_table_lookup@plt>
  424eb0:	ldp	x29, x30, [sp], #32
  424eb4:	ret

0000000000424eb8 <freep>:
  424eb8:	stp	x29, x30, [sp, #-32]!
  424ebc:	mov	x29, sp
  424ec0:	str	x0, [sp, #24]
  424ec4:	ldr	x0, [sp, #24]
  424ec8:	ldr	x0, [x0]
  424ecc:	bl	408150 <free@plt>
  424ed0:	nop
  424ed4:	ldp	x29, x30, [sp], #32
  424ed8:	ret

0000000000424edc <size_multiply_overflow>:
  424edc:	sub	sp, sp, #0x10
  424ee0:	str	x0, [sp, #8]
  424ee4:	str	x1, [sp]
  424ee8:	ldr	x0, [sp]
  424eec:	cmp	x0, #0x0
  424ef0:	cset	w0, ne  // ne = any
  424ef4:	and	w0, w0, #0xff
  424ef8:	and	x0, x0, #0xff
  424efc:	cmp	x0, #0x0
  424f00:	b.eq	424f44 <size_multiply_overflow+0x68>  // b.none
  424f04:	mov	x2, #0x0                   	// #0
  424f08:	ldr	x1, [sp, #8]
  424f0c:	ldr	x0, [sp]
  424f10:	umulh	x0, x1, x0
  424f14:	cmp	x0, #0x0
  424f18:	b.eq	424f20 <size_multiply_overflow+0x44>  // b.none
  424f1c:	mov	x2, #0x1                   	// #1
  424f20:	mov	x0, x2
  424f24:	cmp	x0, #0x0
  424f28:	cset	w0, ne  // ne = any
  424f2c:	and	w0, w0, #0xff
  424f30:	and	x0, x0, #0xff
  424f34:	cmp	x0, #0x0
  424f38:	b.eq	424f44 <size_multiply_overflow+0x68>  // b.none
  424f3c:	mov	w0, #0x1                   	// #1
  424f40:	b	424f48 <size_multiply_overflow+0x6c>
  424f44:	mov	w0, #0x0                   	// #0
  424f48:	and	w0, w0, #0x1
  424f4c:	and	w0, w0, #0xff
  424f50:	add	sp, sp, #0x10
  424f54:	ret

0000000000424f58 <sd_bus_creds_unrefp>:
  424f58:	stp	x29, x30, [sp, #-32]!
  424f5c:	mov	x29, sp
  424f60:	str	x0, [sp, #24]
  424f64:	ldr	x0, [sp, #24]
  424f68:	ldr	x0, [x0]
  424f6c:	cmp	x0, #0x0
  424f70:	b.eq	424f80 <sd_bus_creds_unrefp+0x28>  // b.none
  424f74:	ldr	x0, [sp, #24]
  424f78:	ldr	x0, [x0]
  424f7c:	bl	4072e0 <sd_bus_creds_unref@plt>
  424f80:	nop
  424f84:	ldp	x29, x30, [sp], #32
  424f88:	ret

0000000000424f8c <startswith>:
  424f8c:	stp	x29, x30, [sp, #-48]!
  424f90:	mov	x29, sp
  424f94:	str	x0, [sp, #24]
  424f98:	str	x1, [sp, #16]
  424f9c:	ldr	x0, [sp, #16]
  424fa0:	bl	4082f0 <strlen@plt>
  424fa4:	str	x0, [sp, #40]
  424fa8:	ldr	x2, [sp, #40]
  424fac:	ldr	x1, [sp, #16]
  424fb0:	ldr	x0, [sp, #24]
  424fb4:	bl	407770 <strncmp@plt>
  424fb8:	cmp	w0, #0x0
  424fbc:	b.ne	424fd0 <startswith+0x44>  // b.any
  424fc0:	ldr	x1, [sp, #24]
  424fc4:	ldr	x0, [sp, #40]
  424fc8:	add	x0, x1, x0
  424fcc:	b	424fd4 <startswith+0x48>
  424fd0:	mov	x0, #0x0                   	// #0
  424fd4:	ldp	x29, x30, [sp], #48
  424fd8:	ret

0000000000424fdc <strlen_ptr>:
  424fdc:	stp	x29, x30, [sp, #-32]!
  424fe0:	mov	x29, sp
  424fe4:	str	x0, [sp, #24]
  424fe8:	ldr	x0, [sp, #24]
  424fec:	cmp	x0, #0x0
  424ff0:	b.ne	424ffc <strlen_ptr+0x20>  // b.any
  424ff4:	mov	x0, #0x0                   	// #0
  424ff8:	b	425004 <strlen_ptr+0x28>
  424ffc:	ldr	x0, [sp, #24]
  425000:	bl	4082f0 <strlen@plt>
  425004:	ldp	x29, x30, [sp], #32
  425008:	ret

000000000042500c <bus_label_unescape>:
  42500c:	stp	x29, x30, [sp, #-32]!
  425010:	mov	x29, sp
  425014:	str	x0, [sp, #24]
  425018:	ldr	x0, [sp, #24]
  42501c:	bl	424fdc <strlen_ptr>
  425020:	mov	x1, x0
  425024:	ldr	x0, [sp, #24]
  425028:	bl	408050 <bus_label_unescape_n@plt>
  42502c:	ldp	x29, x30, [sp], #32
  425030:	ret

0000000000425034 <hashmap_get>:
  425034:	stp	x29, x30, [sp, #-32]!
  425038:	mov	x29, sp
  42503c:	str	x0, [sp, #24]
  425040:	str	x1, [sp, #16]
  425044:	ldr	x1, [sp, #16]
  425048:	ldr	x0, [sp, #24]
  42504c:	bl	407860 <internal_hashmap_get@plt>
  425050:	ldp	x29, x30, [sp], #32
  425054:	ret

0000000000425058 <hashmap_iterate>:
  425058:	stp	x29, x30, [sp, #-48]!
  42505c:	mov	x29, sp
  425060:	str	x0, [sp, #40]
  425064:	str	x1, [sp, #32]
  425068:	str	x2, [sp, #24]
  42506c:	str	x3, [sp, #16]
  425070:	ldr	x3, [sp, #16]
  425074:	ldr	x2, [sp, #24]
  425078:	ldr	x1, [sp, #32]
  42507c:	ldr	x0, [sp, #40]
  425080:	bl	407f80 <internal_hashmap_iterate@plt>
  425084:	and	w0, w0, #0xff
  425088:	ldp	x29, x30, [sp], #48
  42508c:	ret

0000000000425090 <strv_freep>:
  425090:	stp	x29, x30, [sp, #-32]!
  425094:	mov	x29, sp
  425098:	str	x0, [sp, #24]
  42509c:	ldr	x0, [sp, #24]
  4250a0:	ldr	x0, [x0]
  4250a4:	cmp	x0, #0x0
  4250a8:	b.eq	4250b8 <strv_freep+0x28>  // b.none
  4250ac:	ldr	x0, [sp, #24]
  4250b0:	ldr	x0, [x0]
  4250b4:	bl	4079a0 <strv_free@plt>
  4250b8:	nop
  4250bc:	ldp	x29, x30, [sp], #32
  4250c0:	ret

00000000004250c4 <property_get_can_multi_session>:
  4250c4:	stp	x29, x30, [sp, #-96]!
  4250c8:	mov	x29, sp
  4250cc:	str	x0, [sp, #72]
  4250d0:	str	x1, [sp, #64]
  4250d4:	str	x2, [sp, #56]
  4250d8:	str	x3, [sp, #48]
  4250dc:	str	x4, [sp, #40]
  4250e0:	str	x5, [sp, #32]
  4250e4:	str	x6, [sp, #24]
  4250e8:	ldr	x0, [sp, #32]
  4250ec:	str	x0, [sp, #88]
  4250f0:	ldr	x0, [sp, #72]
  4250f4:	cmp	x0, #0x0
  4250f8:	cset	w0, eq  // eq = none
  4250fc:	and	w0, w0, #0xff
  425100:	and	x0, x0, #0xff
  425104:	cmp	x0, #0x0
  425108:	b.eq	425134 <property_get_can_multi_session+0x70>  // b.none
  42510c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425110:	add	x1, x0, #0xa3b
  425114:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425118:	add	x4, x0, #0xda8
  42511c:	mov	w3, #0x13                  	// #19
  425120:	mov	x2, x1
  425124:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425128:	add	x1, x0, #0xa58
  42512c:	mov	w0, #0x0                   	// #0
  425130:	bl	407650 <log_assert_failed_realm@plt>
  425134:	ldr	x0, [sp, #40]
  425138:	cmp	x0, #0x0
  42513c:	cset	w0, eq  // eq = none
  425140:	and	w0, w0, #0xff
  425144:	and	x0, x0, #0xff
  425148:	cmp	x0, #0x0
  42514c:	b.eq	425178 <property_get_can_multi_session+0xb4>  // b.none
  425150:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425154:	add	x1, x0, #0xa3b
  425158:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42515c:	add	x4, x0, #0xda8
  425160:	mov	w3, #0x13                  	// #19
  425164:	mov	x2, x1
  425168:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42516c:	add	x1, x0, #0xa60
  425170:	mov	w0, #0x0                   	// #0
  425174:	bl	407650 <log_assert_failed_realm@plt>
  425178:	ldr	x0, [sp, #88]
  42517c:	cmp	x0, #0x0
  425180:	cset	w0, eq  // eq = none
  425184:	and	w0, w0, #0xff
  425188:	and	x0, x0, #0xff
  42518c:	cmp	x0, #0x0
  425190:	b.eq	4251bc <property_get_can_multi_session+0xf8>  // b.none
  425194:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425198:	add	x1, x0, #0xa3b
  42519c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4251a0:	add	x4, x0, #0xda8
  4251a4:	mov	w3, #0x13                  	// #19
  4251a8:	mov	x2, x1
  4251ac:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4251b0:	add	x1, x0, #0xa68
  4251b4:	mov	w0, #0x0                   	// #0
  4251b8:	bl	407650 <log_assert_failed_realm@plt>
  4251bc:	ldr	x0, [sp, #88]
  4251c0:	bl	4290b8 <seat_can_multi_session>
  4251c4:	and	w0, w0, #0xff
  4251c8:	mov	w2, w0
  4251cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4251d0:	add	x1, x0, #0xa70
  4251d4:	ldr	x0, [sp, #40]
  4251d8:	bl	407590 <sd_bus_message_append@plt>
  4251dc:	ldp	x29, x30, [sp], #96
  4251e0:	ret

00000000004251e4 <property_get_can_tty>:
  4251e4:	stp	x29, x30, [sp, #-96]!
  4251e8:	mov	x29, sp
  4251ec:	str	x0, [sp, #72]
  4251f0:	str	x1, [sp, #64]
  4251f4:	str	x2, [sp, #56]
  4251f8:	str	x3, [sp, #48]
  4251fc:	str	x4, [sp, #40]
  425200:	str	x5, [sp, #32]
  425204:	str	x6, [sp, #24]
  425208:	ldr	x0, [sp, #32]
  42520c:	str	x0, [sp, #88]
  425210:	ldr	x0, [sp, #72]
  425214:	cmp	x0, #0x0
  425218:	cset	w0, eq  // eq = none
  42521c:	and	w0, w0, #0xff
  425220:	and	x0, x0, #0xff
  425224:	cmp	x0, #0x0
  425228:	b.eq	425254 <property_get_can_tty+0x70>  // b.none
  42522c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425230:	add	x1, x0, #0xa3b
  425234:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425238:	add	x4, x0, #0xdc8
  42523c:	mov	w3, #0x14                  	// #20
  425240:	mov	x2, x1
  425244:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425248:	add	x1, x0, #0xa58
  42524c:	mov	w0, #0x0                   	// #0
  425250:	bl	407650 <log_assert_failed_realm@plt>
  425254:	ldr	x0, [sp, #40]
  425258:	cmp	x0, #0x0
  42525c:	cset	w0, eq  // eq = none
  425260:	and	w0, w0, #0xff
  425264:	and	x0, x0, #0xff
  425268:	cmp	x0, #0x0
  42526c:	b.eq	425298 <property_get_can_tty+0xb4>  // b.none
  425270:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425274:	add	x1, x0, #0xa3b
  425278:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42527c:	add	x4, x0, #0xdc8
  425280:	mov	w3, #0x14                  	// #20
  425284:	mov	x2, x1
  425288:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42528c:	add	x1, x0, #0xa60
  425290:	mov	w0, #0x0                   	// #0
  425294:	bl	407650 <log_assert_failed_realm@plt>
  425298:	ldr	x0, [sp, #88]
  42529c:	cmp	x0, #0x0
  4252a0:	cset	w0, eq  // eq = none
  4252a4:	and	w0, w0, #0xff
  4252a8:	and	x0, x0, #0xff
  4252ac:	cmp	x0, #0x0
  4252b0:	b.eq	4252dc <property_get_can_tty+0xf8>  // b.none
  4252b4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4252b8:	add	x1, x0, #0xa3b
  4252bc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4252c0:	add	x4, x0, #0xdc8
  4252c4:	mov	w3, #0x14                  	// #20
  4252c8:	mov	x2, x1
  4252cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4252d0:	add	x1, x0, #0xa68
  4252d4:	mov	w0, #0x0                   	// #0
  4252d8:	bl	407650 <log_assert_failed_realm@plt>
  4252dc:	ldr	x0, [sp, #88]
  4252e0:	bl	42911c <seat_can_tty>
  4252e4:	and	w0, w0, #0xff
  4252e8:	mov	w2, w0
  4252ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4252f0:	add	x1, x0, #0xa70
  4252f4:	ldr	x0, [sp, #40]
  4252f8:	bl	407590 <sd_bus_message_append@plt>
  4252fc:	ldp	x29, x30, [sp], #96
  425300:	ret

0000000000425304 <property_get_can_graphical>:
  425304:	stp	x29, x30, [sp, #-96]!
  425308:	mov	x29, sp
  42530c:	str	x0, [sp, #72]
  425310:	str	x1, [sp, #64]
  425314:	str	x2, [sp, #56]
  425318:	str	x3, [sp, #48]
  42531c:	str	x4, [sp, #40]
  425320:	str	x5, [sp, #32]
  425324:	str	x6, [sp, #24]
  425328:	ldr	x0, [sp, #32]
  42532c:	str	x0, [sp, #88]
  425330:	ldr	x0, [sp, #72]
  425334:	cmp	x0, #0x0
  425338:	cset	w0, eq  // eq = none
  42533c:	and	w0, w0, #0xff
  425340:	and	x0, x0, #0xff
  425344:	cmp	x0, #0x0
  425348:	b.eq	425374 <property_get_can_graphical+0x70>  // b.none
  42534c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425350:	add	x1, x0, #0xa3b
  425354:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425358:	add	x4, x0, #0xde0
  42535c:	mov	w3, #0x15                  	// #21
  425360:	mov	x2, x1
  425364:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425368:	add	x1, x0, #0xa58
  42536c:	mov	w0, #0x0                   	// #0
  425370:	bl	407650 <log_assert_failed_realm@plt>
  425374:	ldr	x0, [sp, #40]
  425378:	cmp	x0, #0x0
  42537c:	cset	w0, eq  // eq = none
  425380:	and	w0, w0, #0xff
  425384:	and	x0, x0, #0xff
  425388:	cmp	x0, #0x0
  42538c:	b.eq	4253b8 <property_get_can_graphical+0xb4>  // b.none
  425390:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425394:	add	x1, x0, #0xa3b
  425398:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42539c:	add	x4, x0, #0xde0
  4253a0:	mov	w3, #0x15                  	// #21
  4253a4:	mov	x2, x1
  4253a8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4253ac:	add	x1, x0, #0xa60
  4253b0:	mov	w0, #0x0                   	// #0
  4253b4:	bl	407650 <log_assert_failed_realm@plt>
  4253b8:	ldr	x0, [sp, #88]
  4253bc:	cmp	x0, #0x0
  4253c0:	cset	w0, eq  // eq = none
  4253c4:	and	w0, w0, #0xff
  4253c8:	and	x0, x0, #0xff
  4253cc:	cmp	x0, #0x0
  4253d0:	b.eq	4253fc <property_get_can_graphical+0xf8>  // b.none
  4253d4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4253d8:	add	x1, x0, #0xa3b
  4253dc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4253e0:	add	x4, x0, #0xde0
  4253e4:	mov	w3, #0x15                  	// #21
  4253e8:	mov	x2, x1
  4253ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4253f0:	add	x1, x0, #0xa68
  4253f4:	mov	w0, #0x0                   	// #0
  4253f8:	bl	407650 <log_assert_failed_realm@plt>
  4253fc:	ldr	x0, [sp, #88]
  425400:	bl	429210 <seat_can_graphical>
  425404:	and	w0, w0, #0xff
  425408:	mov	w2, w0
  42540c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425410:	add	x1, x0, #0xa70
  425414:	ldr	x0, [sp, #40]
  425418:	bl	407590 <sd_bus_message_append@plt>
  42541c:	ldp	x29, x30, [sp], #96
  425420:	ret

0000000000425424 <property_get_active_session>:
  425424:	stp	x29, x30, [sp, #-128]!
  425428:	mov	x29, sp
  42542c:	str	x19, [sp, #16]
  425430:	str	x0, [sp, #88]
  425434:	str	x1, [sp, #80]
  425438:	str	x2, [sp, #72]
  42543c:	str	x3, [sp, #64]
  425440:	str	x4, [sp, #56]
  425444:	str	x5, [sp, #48]
  425448:	str	x6, [sp, #40]
  42544c:	adrp	x0, 460000 <wordlist.10364+0x370>
  425450:	ldr	x0, [x0, #4024]
  425454:	ldr	x1, [x0]
  425458:	str	x1, [sp, #120]
  42545c:	mov	x1, #0x0                   	// #0
  425460:	str	xzr, [sp, #104]
  425464:	ldr	x0, [sp, #48]
  425468:	str	x0, [sp, #112]
  42546c:	ldr	x0, [sp, #88]
  425470:	cmp	x0, #0x0
  425474:	cset	w0, eq  // eq = none
  425478:	and	w0, w0, #0xff
  42547c:	and	x0, x0, #0xff
  425480:	cmp	x0, #0x0
  425484:	b.eq	4254b0 <property_get_active_session+0x8c>  // b.none
  425488:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42548c:	add	x1, x0, #0xa3b
  425490:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425494:	add	x4, x0, #0xe00
  425498:	mov	w3, #0x23                  	// #35
  42549c:	mov	x2, x1
  4254a0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4254a4:	add	x1, x0, #0xa58
  4254a8:	mov	w0, #0x0                   	// #0
  4254ac:	bl	407650 <log_assert_failed_realm@plt>
  4254b0:	ldr	x0, [sp, #56]
  4254b4:	cmp	x0, #0x0
  4254b8:	cset	w0, eq  // eq = none
  4254bc:	and	w0, w0, #0xff
  4254c0:	and	x0, x0, #0xff
  4254c4:	cmp	x0, #0x0
  4254c8:	b.eq	4254f4 <property_get_active_session+0xd0>  // b.none
  4254cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4254d0:	add	x1, x0, #0xa3b
  4254d4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4254d8:	add	x4, x0, #0xe00
  4254dc:	mov	w3, #0x24                  	// #36
  4254e0:	mov	x2, x1
  4254e4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4254e8:	add	x1, x0, #0xa60
  4254ec:	mov	w0, #0x0                   	// #0
  4254f0:	bl	407650 <log_assert_failed_realm@plt>
  4254f4:	ldr	x0, [sp, #112]
  4254f8:	cmp	x0, #0x0
  4254fc:	cset	w0, eq  // eq = none
  425500:	and	w0, w0, #0xff
  425504:	and	x0, x0, #0xff
  425508:	cmp	x0, #0x0
  42550c:	b.eq	425538 <property_get_active_session+0x114>  // b.none
  425510:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425514:	add	x1, x0, #0xa3b
  425518:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42551c:	add	x4, x0, #0xe00
  425520:	mov	w3, #0x25                  	// #37
  425524:	mov	x2, x1
  425528:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42552c:	add	x1, x0, #0xa78
  425530:	mov	w0, #0x0                   	// #0
  425534:	bl	407650 <log_assert_failed_realm@plt>
  425538:	ldr	x0, [sp, #112]
  42553c:	ldr	x0, [x0, #32]
  425540:	cmp	x0, #0x0
  425544:	b.eq	425558 <property_get_active_session+0x134>  // b.none
  425548:	ldr	x0, [sp, #112]
  42554c:	ldr	x0, [x0, #32]
  425550:	bl	42c318 <session_bus_path>
  425554:	b	425564 <property_get_active_session+0x140>
  425558:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42555c:	add	x0, x0, #0xa80
  425560:	bl	407f90 <strdup@plt>
  425564:	str	x0, [sp, #104]
  425568:	ldr	x0, [sp, #104]
  42556c:	cmp	x0, #0x0
  425570:	b.ne	42557c <property_get_active_session+0x158>  // b.any
  425574:	mov	w19, #0xfffffff4            	// #-12
  425578:	b	4255c4 <property_get_active_session+0x1a0>
  42557c:	ldr	x0, [sp, #112]
  425580:	ldr	x0, [x0, #32]
  425584:	cmp	x0, #0x0
  425588:	b.eq	42559c <property_get_active_session+0x178>  // b.none
  42558c:	ldr	x0, [sp, #112]
  425590:	ldr	x0, [x0, #32]
  425594:	ldr	x0, [x0, #8]
  425598:	b	4255a4 <property_get_active_session+0x180>
  42559c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4255a0:	add	x0, x0, #0xa88
  4255a4:	ldr	x1, [sp, #104]
  4255a8:	mov	x3, x1
  4255ac:	mov	x2, x0
  4255b0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4255b4:	add	x1, x0, #0xa90
  4255b8:	ldr	x0, [sp, #56]
  4255bc:	bl	407590 <sd_bus_message_append@plt>
  4255c0:	mov	w19, w0
  4255c4:	add	x0, sp, #0x68
  4255c8:	bl	424eb8 <freep>
  4255cc:	mov	w1, w19
  4255d0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4255d4:	ldr	x0, [x0, #4024]
  4255d8:	ldr	x2, [sp, #120]
  4255dc:	ldr	x0, [x0]
  4255e0:	eor	x0, x2, x0
  4255e4:	cmp	x0, #0x0
  4255e8:	b.eq	4255f0 <property_get_active_session+0x1cc>  // b.none
  4255ec:	bl	407b20 <__stack_chk_fail@plt>
  4255f0:	mov	w0, w1
  4255f4:	ldr	x19, [sp, #16]
  4255f8:	ldp	x29, x30, [sp], #128
  4255fc:	ret

0000000000425600 <property_get_sessions>:
  425600:	stp	x29, x30, [sp, #-144]!
  425604:	mov	x29, sp
  425608:	stp	x19, x20, [sp, #16]
  42560c:	str	x0, [sp, #88]
  425610:	str	x1, [sp, #80]
  425614:	str	x2, [sp, #72]
  425618:	str	x3, [sp, #64]
  42561c:	str	x4, [sp, #56]
  425620:	str	x5, [sp, #48]
  425624:	str	x6, [sp, #40]
  425628:	adrp	x0, 460000 <wordlist.10364+0x370>
  42562c:	ldr	x0, [x0, #4024]
  425630:	ldr	x1, [x0]
  425634:	str	x1, [sp, #136]
  425638:	mov	x1, #0x0                   	// #0
  42563c:	ldr	x0, [sp, #48]
  425640:	str	x0, [sp, #128]
  425644:	ldr	x0, [sp, #88]
  425648:	cmp	x0, #0x0
  42564c:	cset	w0, eq  // eq = none
  425650:	and	w0, w0, #0xff
  425654:	and	x0, x0, #0xff
  425658:	cmp	x0, #0x0
  42565c:	b.eq	425688 <property_get_sessions+0x88>  // b.none
  425660:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425664:	add	x1, x0, #0xa3b
  425668:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42566c:	add	x4, x0, #0xe20
  425670:	mov	w3, #0x3b                  	// #59
  425674:	mov	x2, x1
  425678:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42567c:	add	x1, x0, #0xa58
  425680:	mov	w0, #0x0                   	// #0
  425684:	bl	407650 <log_assert_failed_realm@plt>
  425688:	ldr	x0, [sp, #56]
  42568c:	cmp	x0, #0x0
  425690:	cset	w0, eq  // eq = none
  425694:	and	w0, w0, #0xff
  425698:	and	x0, x0, #0xff
  42569c:	cmp	x0, #0x0
  4256a0:	b.eq	4256cc <property_get_sessions+0xcc>  // b.none
  4256a4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4256a8:	add	x1, x0, #0xa3b
  4256ac:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4256b0:	add	x4, x0, #0xe20
  4256b4:	mov	w3, #0x3c                  	// #60
  4256b8:	mov	x2, x1
  4256bc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4256c0:	add	x1, x0, #0xa60
  4256c4:	mov	w0, #0x0                   	// #0
  4256c8:	bl	407650 <log_assert_failed_realm@plt>
  4256cc:	ldr	x0, [sp, #128]
  4256d0:	cmp	x0, #0x0
  4256d4:	cset	w0, eq  // eq = none
  4256d8:	and	w0, w0, #0xff
  4256dc:	and	x0, x0, #0xff
  4256e0:	cmp	x0, #0x0
  4256e4:	b.eq	425710 <property_get_sessions+0x110>  // b.none
  4256e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4256ec:	add	x1, x0, #0xa3b
  4256f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4256f4:	add	x4, x0, #0xe20
  4256f8:	mov	w3, #0x3d                  	// #61
  4256fc:	mov	x2, x1
  425700:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425704:	add	x1, x0, #0xa78
  425708:	mov	w0, #0x0                   	// #0
  42570c:	bl	407650 <log_assert_failed_realm@plt>
  425710:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425714:	add	x2, x0, #0xa90
  425718:	mov	w1, #0x61                  	// #97
  42571c:	ldr	x0, [sp, #56]
  425720:	bl	407490 <sd_bus_message_open_container@plt>
  425724:	str	w0, [sp, #108]
  425728:	ldr	w0, [sp, #108]
  42572c:	cmp	w0, #0x0
  425730:	b.ge	42573c <property_get_sessions+0x13c>  // b.tcont
  425734:	ldr	w19, [sp, #108]
  425738:	b	425804 <property_get_sessions+0x204>
  42573c:	ldr	x0, [sp, #128]
  425740:	ldr	x0, [x0, #48]
  425744:	str	x0, [sp, #120]
  425748:	b	4257d4 <property_get_sessions+0x1d4>
  42574c:	str	xzr, [sp, #112]
  425750:	ldr	x0, [sp, #120]
  425754:	bl	42c318 <session_bus_path>
  425758:	str	x0, [sp, #112]
  42575c:	ldr	x0, [sp, #112]
  425760:	cmp	x0, #0x0
  425764:	b.ne	425774 <property_get_sessions+0x174>  // b.any
  425768:	mov	w19, #0xfffffff4            	// #-12
  42576c:	mov	w20, #0x0                   	// #0
  425770:	b	4257b8 <property_get_sessions+0x1b8>
  425774:	ldr	x0, [sp, #120]
  425778:	ldr	x0, [x0, #8]
  42577c:	ldr	x1, [sp, #112]
  425780:	mov	x3, x1
  425784:	mov	x2, x0
  425788:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42578c:	add	x1, x0, #0xa90
  425790:	ldr	x0, [sp, #56]
  425794:	bl	407590 <sd_bus_message_append@plt>
  425798:	str	w0, [sp, #108]
  42579c:	ldr	w0, [sp, #108]
  4257a0:	cmp	w0, #0x0
  4257a4:	b.ge	4257b4 <property_get_sessions+0x1b4>  // b.tcont
  4257a8:	ldr	w19, [sp, #108]
  4257ac:	mov	w20, #0x0                   	// #0
  4257b0:	b	4257b8 <property_get_sessions+0x1b8>
  4257b4:	mov	w20, #0x1                   	// #1
  4257b8:	add	x0, sp, #0x70
  4257bc:	bl	424eb8 <freep>
  4257c0:	cmp	w20, #0x1
  4257c4:	b.ne	425804 <property_get_sessions+0x204>  // b.any
  4257c8:	ldr	x0, [sp, #120]
  4257cc:	ldr	x0, [x0, #272]
  4257d0:	str	x0, [sp, #120]
  4257d4:	ldr	x0, [sp, #120]
  4257d8:	cmp	x0, #0x0
  4257dc:	b.ne	42574c <property_get_sessions+0x14c>  // b.any
  4257e0:	ldr	x0, [sp, #56]
  4257e4:	bl	408420 <sd_bus_message_close_container@plt>
  4257e8:	str	w0, [sp, #108]
  4257ec:	ldr	w0, [sp, #108]
  4257f0:	cmp	w0, #0x0
  4257f4:	b.ge	425800 <property_get_sessions+0x200>  // b.tcont
  4257f8:	ldr	w19, [sp, #108]
  4257fc:	b	425804 <property_get_sessions+0x204>
  425800:	mov	w19, #0x1                   	// #1
  425804:	mov	w1, w19
  425808:	adrp	x0, 460000 <wordlist.10364+0x370>
  42580c:	ldr	x0, [x0, #4024]
  425810:	ldr	x2, [sp, #136]
  425814:	ldr	x0, [x0]
  425818:	eor	x0, x2, x0
  42581c:	cmp	x0, #0x0
  425820:	b.eq	425828 <property_get_sessions+0x228>  // b.none
  425824:	bl	407b20 <__stack_chk_fail@plt>
  425828:	mov	w0, w1
  42582c:	ldp	x19, x20, [sp, #16]
  425830:	ldp	x29, x30, [sp], #144
  425834:	ret

0000000000425838 <property_get_idle_hint>:
  425838:	stp	x29, x30, [sp, #-96]!
  42583c:	mov	x29, sp
  425840:	str	x0, [sp, #72]
  425844:	str	x1, [sp, #64]
  425848:	str	x2, [sp, #56]
  42584c:	str	x3, [sp, #48]
  425850:	str	x4, [sp, #40]
  425854:	str	x5, [sp, #32]
  425858:	str	x6, [sp, #24]
  42585c:	ldr	x0, [sp, #32]
  425860:	str	x0, [sp, #88]
  425864:	ldr	x0, [sp, #72]
  425868:	cmp	x0, #0x0
  42586c:	cset	w0, eq  // eq = none
  425870:	and	w0, w0, #0xff
  425874:	and	x0, x0, #0xff
  425878:	cmp	x0, #0x0
  42587c:	b.eq	4258a8 <property_get_idle_hint+0x70>  // b.none
  425880:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425884:	add	x1, x0, #0xa3b
  425888:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42588c:	add	x4, x0, #0xe38
  425890:	mov	w3, #0x62                  	// #98
  425894:	mov	x2, x1
  425898:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42589c:	add	x1, x0, #0xa58
  4258a0:	mov	w0, #0x0                   	// #0
  4258a4:	bl	407650 <log_assert_failed_realm@plt>
  4258a8:	ldr	x0, [sp, #40]
  4258ac:	cmp	x0, #0x0
  4258b0:	cset	w0, eq  // eq = none
  4258b4:	and	w0, w0, #0xff
  4258b8:	and	x0, x0, #0xff
  4258bc:	cmp	x0, #0x0
  4258c0:	b.eq	4258ec <property_get_idle_hint+0xb4>  // b.none
  4258c4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4258c8:	add	x1, x0, #0xa3b
  4258cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4258d0:	add	x4, x0, #0xe38
  4258d4:	mov	w3, #0x63                  	// #99
  4258d8:	mov	x2, x1
  4258dc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4258e0:	add	x1, x0, #0xa60
  4258e4:	mov	w0, #0x0                   	// #0
  4258e8:	bl	407650 <log_assert_failed_realm@plt>
  4258ec:	ldr	x0, [sp, #88]
  4258f0:	cmp	x0, #0x0
  4258f4:	cset	w0, eq  // eq = none
  4258f8:	and	w0, w0, #0xff
  4258fc:	and	x0, x0, #0xff
  425900:	cmp	x0, #0x0
  425904:	b.eq	425930 <property_get_idle_hint+0xf8>  // b.none
  425908:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42590c:	add	x1, x0, #0xa3b
  425910:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425914:	add	x4, x0, #0xe38
  425918:	mov	w3, #0x64                  	// #100
  42591c:	mov	x2, x1
  425920:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425924:	add	x1, x0, #0xa78
  425928:	mov	w0, #0x0                   	// #0
  42592c:	bl	407650 <log_assert_failed_realm@plt>
  425930:	mov	x1, #0x0                   	// #0
  425934:	ldr	x0, [sp, #88]
  425938:	bl	429274 <seat_get_idle_hint>
  42593c:	cmp	w0, #0x0
  425940:	cset	w0, gt
  425944:	and	w0, w0, #0xff
  425948:	mov	w2, w0
  42594c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425950:	add	x1, x0, #0xa70
  425954:	ldr	x0, [sp, #40]
  425958:	bl	407590 <sd_bus_message_append@plt>
  42595c:	ldp	x29, x30, [sp], #96
  425960:	ret

0000000000425964 <property_get_idle_since_hint>:
  425964:	stp	x29, x30, [sp, #-128]!
  425968:	mov	x29, sp
  42596c:	str	x0, [sp, #72]
  425970:	str	x1, [sp, #64]
  425974:	str	x2, [sp, #56]
  425978:	str	x3, [sp, #48]
  42597c:	str	x4, [sp, #40]
  425980:	str	x5, [sp, #32]
  425984:	str	x6, [sp, #24]
  425988:	adrp	x0, 460000 <wordlist.10364+0x370>
  42598c:	ldr	x0, [x0, #4024]
  425990:	ldr	x1, [x0]
  425994:	str	x1, [sp, #120]
  425998:	mov	x1, #0x0                   	// #0
  42599c:	ldr	x0, [sp, #32]
  4259a0:	str	x0, [sp, #88]
  4259a4:	ldr	x0, [sp, #72]
  4259a8:	cmp	x0, #0x0
  4259ac:	cset	w0, eq  // eq = none
  4259b0:	and	w0, w0, #0xff
  4259b4:	and	x0, x0, #0xff
  4259b8:	cmp	x0, #0x0
  4259bc:	b.eq	4259e8 <property_get_idle_since_hint+0x84>  // b.none
  4259c0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4259c4:	add	x1, x0, #0xa3b
  4259c8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4259cc:	add	x4, x0, #0xe50
  4259d0:	mov	w3, #0x77                  	// #119
  4259d4:	mov	x2, x1
  4259d8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4259dc:	add	x1, x0, #0xa58
  4259e0:	mov	w0, #0x0                   	// #0
  4259e4:	bl	407650 <log_assert_failed_realm@plt>
  4259e8:	ldr	x0, [sp, #40]
  4259ec:	cmp	x0, #0x0
  4259f0:	cset	w0, eq  // eq = none
  4259f4:	and	w0, w0, #0xff
  4259f8:	and	x0, x0, #0xff
  4259fc:	cmp	x0, #0x0
  425a00:	b.eq	425a2c <property_get_idle_since_hint+0xc8>  // b.none
  425a04:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a08:	add	x1, x0, #0xa3b
  425a0c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a10:	add	x4, x0, #0xe50
  425a14:	mov	w3, #0x78                  	// #120
  425a18:	mov	x2, x1
  425a1c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a20:	add	x1, x0, #0xa60
  425a24:	mov	w0, #0x0                   	// #0
  425a28:	bl	407650 <log_assert_failed_realm@plt>
  425a2c:	ldr	x0, [sp, #88]
  425a30:	cmp	x0, #0x0
  425a34:	cset	w0, eq  // eq = none
  425a38:	and	w0, w0, #0xff
  425a3c:	and	x0, x0, #0xff
  425a40:	cmp	x0, #0x0
  425a44:	b.eq	425a70 <property_get_idle_since_hint+0x10c>  // b.none
  425a48:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a4c:	add	x1, x0, #0xa3b
  425a50:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a54:	add	x4, x0, #0xe50
  425a58:	mov	w3, #0x79                  	// #121
  425a5c:	mov	x2, x1
  425a60:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a64:	add	x1, x0, #0xa78
  425a68:	mov	w0, #0x0                   	// #0
  425a6c:	bl	407650 <log_assert_failed_realm@plt>
  425a70:	add	x0, sp, #0x68
  425a74:	mov	x1, x0
  425a78:	ldr	x0, [sp, #88]
  425a7c:	bl	429274 <seat_get_idle_hint>
  425a80:	str	w0, [sp, #84]
  425a84:	ldr	w0, [sp, #84]
  425a88:	cmp	w0, #0x0
  425a8c:	b.ge	425a98 <property_get_idle_since_hint+0x134>  // b.tcont
  425a90:	ldr	w0, [sp, #84]
  425a94:	b	425ad4 <property_get_idle_since_hint+0x170>
  425a98:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425a9c:	add	x1, x0, #0xa98
  425aa0:	ldr	x0, [sp, #48]
  425aa4:	bl	407f30 <strcmp@plt>
  425aa8:	cmp	w0, #0x0
  425aac:	b.ne	425ab8 <property_get_idle_since_hint+0x154>  // b.any
  425ab0:	ldr	x0, [sp, #104]
  425ab4:	b	425abc <property_get_idle_since_hint+0x158>
  425ab8:	ldr	x0, [sp, #112]
  425abc:	str	x0, [sp, #96]
  425ac0:	ldr	x2, [sp, #96]
  425ac4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ac8:	add	x1, x0, #0xaa8
  425acc:	ldr	x0, [sp, #40]
  425ad0:	bl	407590 <sd_bus_message_append@plt>
  425ad4:	mov	w1, w0
  425ad8:	adrp	x0, 460000 <wordlist.10364+0x370>
  425adc:	ldr	x0, [x0, #4024]
  425ae0:	ldr	x2, [sp, #120]
  425ae4:	ldr	x0, [x0]
  425ae8:	eor	x0, x2, x0
  425aec:	cmp	x0, #0x0
  425af0:	b.eq	425af8 <property_get_idle_since_hint+0x194>  // b.none
  425af4:	bl	407b20 <__stack_chk_fail@plt>
  425af8:	mov	w0, w1
  425afc:	ldp	x29, x30, [sp], #128
  425b00:	ret

0000000000425b04 <bus_seat_method_terminate>:
  425b04:	stp	x29, x30, [sp, #-64]!
  425b08:	mov	x29, sp
  425b0c:	str	x0, [sp, #40]
  425b10:	str	x1, [sp, #32]
  425b14:	str	x2, [sp, #24]
  425b18:	ldr	x0, [sp, #32]
  425b1c:	str	x0, [sp, #56]
  425b20:	ldr	x0, [sp, #40]
  425b24:	cmp	x0, #0x0
  425b28:	cset	w0, eq  // eq = none
  425b2c:	and	w0, w0, #0xff
  425b30:	and	x0, x0, #0xff
  425b34:	cmp	x0, #0x0
  425b38:	b.eq	425b64 <bus_seat_method_terminate+0x60>  // b.none
  425b3c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425b40:	add	x1, x0, #0xa3b
  425b44:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425b48:	add	x4, x0, #0xe70
  425b4c:	mov	w3, #0x88                  	// #136
  425b50:	mov	x2, x1
  425b54:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425b58:	add	x1, x0, #0xab0
  425b5c:	mov	w0, #0x0                   	// #0
  425b60:	bl	407650 <log_assert_failed_realm@plt>
  425b64:	ldr	x0, [sp, #56]
  425b68:	cmp	x0, #0x0
  425b6c:	cset	w0, eq  // eq = none
  425b70:	and	w0, w0, #0xff
  425b74:	and	x0, x0, #0xff
  425b78:	cmp	x0, #0x0
  425b7c:	b.eq	425ba8 <bus_seat_method_terminate+0xa4>  // b.none
  425b80:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425b84:	add	x1, x0, #0xa3b
  425b88:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425b8c:	add	x4, x0, #0xe70
  425b90:	mov	w3, #0x89                  	// #137
  425b94:	mov	x2, x1
  425b98:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425b9c:	add	x1, x0, #0xa78
  425ba0:	mov	w0, #0x0                   	// #0
  425ba4:	bl	407650 <log_assert_failed_realm@plt>
  425ba8:	ldr	x0, [sp, #56]
  425bac:	ldr	x0, [x0]
  425bb0:	add	x0, x0, #0x1b0
  425bb4:	ldr	x7, [sp, #24]
  425bb8:	mov	x6, x0
  425bbc:	mov	w5, #0xffffffff            	// #-1
  425bc0:	mov	w4, #0x0                   	// #0
  425bc4:	mov	x3, #0x0                   	// #0
  425bc8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425bcc:	add	x2, x0, #0xab8
  425bd0:	mov	w1, #0x5                   	// #5
  425bd4:	ldr	x0, [sp, #40]
  425bd8:	bl	408350 <bus_verify_polkit_async@plt>
  425bdc:	str	w0, [sp, #52]
  425be0:	ldr	w0, [sp, #52]
  425be4:	cmp	w0, #0x0
  425be8:	b.ge	425bf4 <bus_seat_method_terminate+0xf0>  // b.tcont
  425bec:	ldr	w0, [sp, #52]
  425bf0:	b	425c38 <bus_seat_method_terminate+0x134>
  425bf4:	ldr	w0, [sp, #52]
  425bf8:	cmp	w0, #0x0
  425bfc:	b.ne	425c08 <bus_seat_method_terminate+0x104>  // b.any
  425c00:	mov	w0, #0x1                   	// #1
  425c04:	b	425c38 <bus_seat_method_terminate+0x134>
  425c08:	mov	w1, #0x1                   	// #1
  425c0c:	ldr	x0, [sp, #56]
  425c10:	bl	428a1c <seat_stop_sessions>
  425c14:	str	w0, [sp, #52]
  425c18:	ldr	w0, [sp, #52]
  425c1c:	cmp	w0, #0x0
  425c20:	b.ge	425c2c <bus_seat_method_terminate+0x128>  // b.tcont
  425c24:	ldr	w0, [sp, #52]
  425c28:	b	425c38 <bus_seat_method_terminate+0x134>
  425c2c:	mov	x1, #0x0                   	// #0
  425c30:	ldr	x0, [sp, #40]
  425c34:	bl	4070e0 <sd_bus_reply_method_return@plt>
  425c38:	ldp	x29, x30, [sp], #64
  425c3c:	ret

0000000000425c40 <method_activate_session>:
  425c40:	stp	x29, x30, [sp, #-96]!
  425c44:	mov	x29, sp
  425c48:	str	x0, [sp, #40]
  425c4c:	str	x1, [sp, #32]
  425c50:	str	x2, [sp, #24]
  425c54:	adrp	x0, 460000 <wordlist.10364+0x370>
  425c58:	ldr	x0, [x0, #4024]
  425c5c:	ldr	x1, [x0]
  425c60:	str	x1, [sp, #88]
  425c64:	mov	x1, #0x0                   	// #0
  425c68:	ldr	x0, [sp, #32]
  425c6c:	str	x0, [sp, #72]
  425c70:	ldr	x0, [sp, #40]
  425c74:	cmp	x0, #0x0
  425c78:	cset	w0, eq  // eq = none
  425c7c:	and	w0, w0, #0xff
  425c80:	and	x0, x0, #0xff
  425c84:	cmp	x0, #0x0
  425c88:	b.eq	425cb4 <method_activate_session+0x74>  // b.none
  425c8c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425c90:	add	x1, x0, #0xa3b
  425c94:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425c98:	add	x4, x0, #0xe90
  425c9c:	mov	w3, #0xa6                  	// #166
  425ca0:	mov	x2, x1
  425ca4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ca8:	add	x1, x0, #0xab0
  425cac:	mov	w0, #0x0                   	// #0
  425cb0:	bl	407650 <log_assert_failed_realm@plt>
  425cb4:	ldr	x0, [sp, #72]
  425cb8:	cmp	x0, #0x0
  425cbc:	cset	w0, eq  // eq = none
  425cc0:	and	w0, w0, #0xff
  425cc4:	and	x0, x0, #0xff
  425cc8:	cmp	x0, #0x0
  425ccc:	b.eq	425cf8 <method_activate_session+0xb8>  // b.none
  425cd0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425cd4:	add	x1, x0, #0xa3b
  425cd8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425cdc:	add	x4, x0, #0xe90
  425ce0:	mov	w3, #0xa7                  	// #167
  425ce4:	mov	x2, x1
  425ce8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425cec:	add	x1, x0, #0xa78
  425cf0:	mov	w0, #0x0                   	// #0
  425cf4:	bl	407650 <log_assert_failed_realm@plt>
  425cf8:	add	x0, sp, #0x40
  425cfc:	mov	x2, x0
  425d00:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425d04:	add	x1, x0, #0xa78
  425d08:	ldr	x0, [sp, #40]
  425d0c:	bl	407660 <sd_bus_message_read@plt>
  425d10:	str	w0, [sp, #60]
  425d14:	ldr	w0, [sp, #60]
  425d18:	cmp	w0, #0x0
  425d1c:	b.ge	425d28 <method_activate_session+0xe8>  // b.tcont
  425d20:	ldr	w0, [sp, #60]
  425d24:	b	425de0 <method_activate_session+0x1a0>
  425d28:	ldr	x0, [sp, #72]
  425d2c:	ldr	x0, [x0]
  425d30:	ldr	x0, [x0, #32]
  425d34:	ldr	x1, [sp, #64]
  425d38:	bl	425034 <hashmap_get>
  425d3c:	str	x0, [sp, #80]
  425d40:	ldr	x0, [sp, #80]
  425d44:	cmp	x0, #0x0
  425d48:	b.ne	425d70 <method_activate_session+0x130>  // b.any
  425d4c:	ldr	x0, [sp, #64]
  425d50:	mov	x3, x0
  425d54:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425d58:	add	x2, x0, #0xad8
  425d5c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425d60:	add	x1, x0, #0xaf0
  425d64:	ldr	x0, [sp, #24]
  425d68:	bl	407ae0 <sd_bus_error_setf@plt>
  425d6c:	b	425de0 <method_activate_session+0x1a0>
  425d70:	ldr	x0, [sp, #80]
  425d74:	ldr	x0, [x0, #136]
  425d78:	ldr	x1, [sp, #72]
  425d7c:	cmp	x1, x0
  425d80:	b.eq	425db4 <method_activate_session+0x174>  // b.none
  425d84:	ldr	x1, [sp, #64]
  425d88:	ldr	x0, [sp, #72]
  425d8c:	ldr	x0, [x0, #8]
  425d90:	mov	x4, x0
  425d94:	mov	x3, x1
  425d98:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425d9c:	add	x2, x0, #0xb18
  425da0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425da4:	add	x1, x0, #0xb38
  425da8:	ldr	x0, [sp, #24]
  425dac:	bl	407ae0 <sd_bus_error_setf@plt>
  425db0:	b	425de0 <method_activate_session+0x1a0>
  425db4:	ldr	x0, [sp, #80]
  425db8:	bl	431470 <session_activate>
  425dbc:	str	w0, [sp, #60]
  425dc0:	ldr	w0, [sp, #60]
  425dc4:	cmp	w0, #0x0
  425dc8:	b.ge	425dd4 <method_activate_session+0x194>  // b.tcont
  425dcc:	ldr	w0, [sp, #60]
  425dd0:	b	425de0 <method_activate_session+0x1a0>
  425dd4:	mov	x1, #0x0                   	// #0
  425dd8:	ldr	x0, [sp, #40]
  425ddc:	bl	4070e0 <sd_bus_reply_method_return@plt>
  425de0:	mov	w1, w0
  425de4:	adrp	x0, 460000 <wordlist.10364+0x370>
  425de8:	ldr	x0, [x0, #4024]
  425dec:	ldr	x2, [sp, #88]
  425df0:	ldr	x0, [x0]
  425df4:	eor	x0, x2, x0
  425df8:	cmp	x0, #0x0
  425dfc:	b.eq	425e04 <method_activate_session+0x1c4>  // b.none
  425e00:	bl	407b20 <__stack_chk_fail@plt>
  425e04:	mov	w0, w1
  425e08:	ldp	x29, x30, [sp], #96
  425e0c:	ret

0000000000425e10 <method_switch_to>:
  425e10:	stp	x29, x30, [sp, #-80]!
  425e14:	mov	x29, sp
  425e18:	str	x0, [sp, #40]
  425e1c:	str	x1, [sp, #32]
  425e20:	str	x2, [sp, #24]
  425e24:	adrp	x0, 460000 <wordlist.10364+0x370>
  425e28:	ldr	x0, [x0, #4024]
  425e2c:	ldr	x1, [x0]
  425e30:	str	x1, [sp, #72]
  425e34:	mov	x1, #0x0                   	// #0
  425e38:	ldr	x0, [sp, #32]
  425e3c:	str	x0, [sp, #64]
  425e40:	ldr	x0, [sp, #40]
  425e44:	cmp	x0, #0x0
  425e48:	cset	w0, eq  // eq = none
  425e4c:	and	w0, w0, #0xff
  425e50:	and	x0, x0, #0xff
  425e54:	cmp	x0, #0x0
  425e58:	b.eq	425e84 <method_switch_to+0x74>  // b.none
  425e5c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425e60:	add	x1, x0, #0xa3b
  425e64:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425e68:	add	x4, x0, #0xea8
  425e6c:	mov	w3, #0xc0                  	// #192
  425e70:	mov	x2, x1
  425e74:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425e78:	add	x1, x0, #0xab0
  425e7c:	mov	w0, #0x0                   	// #0
  425e80:	bl	407650 <log_assert_failed_realm@plt>
  425e84:	ldr	x0, [sp, #64]
  425e88:	cmp	x0, #0x0
  425e8c:	cset	w0, eq  // eq = none
  425e90:	and	w0, w0, #0xff
  425e94:	and	x0, x0, #0xff
  425e98:	cmp	x0, #0x0
  425e9c:	b.eq	425ec8 <method_switch_to+0xb8>  // b.none
  425ea0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ea4:	add	x1, x0, #0xa3b
  425ea8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425eac:	add	x4, x0, #0xea8
  425eb0:	mov	w3, #0xc1                  	// #193
  425eb4:	mov	x2, x1
  425eb8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ebc:	add	x1, x0, #0xa78
  425ec0:	mov	w0, #0x0                   	// #0
  425ec4:	bl	407650 <log_assert_failed_realm@plt>
  425ec8:	add	x0, sp, #0x38
  425ecc:	mov	x2, x0
  425ed0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ed4:	add	x1, x0, #0xb60
  425ed8:	ldr	x0, [sp, #40]
  425edc:	bl	407660 <sd_bus_message_read@plt>
  425ee0:	str	w0, [sp, #60]
  425ee4:	ldr	w0, [sp, #60]
  425ee8:	cmp	w0, #0x0
  425eec:	b.ge	425ef8 <method_switch_to+0xe8>  // b.tcont
  425ef0:	ldr	w0, [sp, #60]
  425ef4:	b	425f40 <method_switch_to+0x130>
  425ef8:	ldr	w0, [sp, #56]
  425efc:	cmp	w0, #0x0
  425f00:	b.ne	425f0c <method_switch_to+0xfc>  // b.any
  425f04:	mov	w0, #0xffffffea            	// #-22
  425f08:	b	425f40 <method_switch_to+0x130>
  425f0c:	ldr	w0, [sp, #56]
  425f10:	mov	w1, w0
  425f14:	ldr	x0, [sp, #64]
  425f18:	bl	427f6c <seat_switch_to>
  425f1c:	str	w0, [sp, #60]
  425f20:	ldr	w0, [sp, #60]
  425f24:	cmp	w0, #0x0
  425f28:	b.ge	425f34 <method_switch_to+0x124>  // b.tcont
  425f2c:	ldr	w0, [sp, #60]
  425f30:	b	425f40 <method_switch_to+0x130>
  425f34:	mov	x1, #0x0                   	// #0
  425f38:	ldr	x0, [sp, #40]
  425f3c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  425f40:	mov	w1, w0
  425f44:	adrp	x0, 460000 <wordlist.10364+0x370>
  425f48:	ldr	x0, [x0, #4024]
  425f4c:	ldr	x2, [sp, #72]
  425f50:	ldr	x0, [x0]
  425f54:	eor	x0, x2, x0
  425f58:	cmp	x0, #0x0
  425f5c:	b.eq	425f64 <method_switch_to+0x154>  // b.none
  425f60:	bl	407b20 <__stack_chk_fail@plt>
  425f64:	mov	w0, w1
  425f68:	ldp	x29, x30, [sp], #80
  425f6c:	ret

0000000000425f70 <method_switch_to_next>:
  425f70:	stp	x29, x30, [sp, #-64]!
  425f74:	mov	x29, sp
  425f78:	str	x0, [sp, #40]
  425f7c:	str	x1, [sp, #32]
  425f80:	str	x2, [sp, #24]
  425f84:	ldr	x0, [sp, #32]
  425f88:	str	x0, [sp, #56]
  425f8c:	ldr	x0, [sp, #40]
  425f90:	cmp	x0, #0x0
  425f94:	cset	w0, eq  // eq = none
  425f98:	and	w0, w0, #0xff
  425f9c:	and	x0, x0, #0xff
  425fa0:	cmp	x0, #0x0
  425fa4:	b.eq	425fd0 <method_switch_to_next+0x60>  // b.none
  425fa8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425fac:	add	x1, x0, #0xa3b
  425fb0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425fb4:	add	x4, x0, #0xec0
  425fb8:	mov	w3, #0xd5                  	// #213
  425fbc:	mov	x2, x1
  425fc0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425fc4:	add	x1, x0, #0xab0
  425fc8:	mov	w0, #0x0                   	// #0
  425fcc:	bl	407650 <log_assert_failed_realm@plt>
  425fd0:	ldr	x0, [sp, #56]
  425fd4:	cmp	x0, #0x0
  425fd8:	cset	w0, eq  // eq = none
  425fdc:	and	w0, w0, #0xff
  425fe0:	and	x0, x0, #0xff
  425fe4:	cmp	x0, #0x0
  425fe8:	b.eq	426014 <method_switch_to_next+0xa4>  // b.none
  425fec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ff0:	add	x1, x0, #0xa3b
  425ff4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  425ff8:	add	x4, x0, #0xec0
  425ffc:	mov	w3, #0xd6                  	// #214
  426000:	mov	x2, x1
  426004:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426008:	add	x1, x0, #0xa78
  42600c:	mov	w0, #0x0                   	// #0
  426010:	bl	407650 <log_assert_failed_realm@plt>
  426014:	ldr	x0, [sp, #56]
  426018:	bl	42801c <seat_switch_to_next>
  42601c:	str	w0, [sp, #52]
  426020:	ldr	w0, [sp, #52]
  426024:	cmp	w0, #0x0
  426028:	b.ge	426034 <method_switch_to_next+0xc4>  // b.tcont
  42602c:	ldr	w0, [sp, #52]
  426030:	b	426040 <method_switch_to_next+0xd0>
  426034:	mov	x1, #0x0                   	// #0
  426038:	ldr	x0, [sp, #40]
  42603c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  426040:	ldp	x29, x30, [sp], #64
  426044:	ret

0000000000426048 <method_switch_to_previous>:
  426048:	stp	x29, x30, [sp, #-64]!
  42604c:	mov	x29, sp
  426050:	str	x0, [sp, #40]
  426054:	str	x1, [sp, #32]
  426058:	str	x2, [sp, #24]
  42605c:	ldr	x0, [sp, #32]
  426060:	str	x0, [sp, #56]
  426064:	ldr	x0, [sp, #40]
  426068:	cmp	x0, #0x0
  42606c:	cset	w0, eq  // eq = none
  426070:	and	w0, w0, #0xff
  426074:	and	x0, x0, #0xff
  426078:	cmp	x0, #0x0
  42607c:	b.eq	4260a8 <method_switch_to_previous+0x60>  // b.none
  426080:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426084:	add	x1, x0, #0xa3b
  426088:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42608c:	add	x4, x0, #0xed8
  426090:	mov	w3, #0xe3                  	// #227
  426094:	mov	x2, x1
  426098:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42609c:	add	x1, x0, #0xab0
  4260a0:	mov	w0, #0x0                   	// #0
  4260a4:	bl	407650 <log_assert_failed_realm@plt>
  4260a8:	ldr	x0, [sp, #56]
  4260ac:	cmp	x0, #0x0
  4260b0:	cset	w0, eq  // eq = none
  4260b4:	and	w0, w0, #0xff
  4260b8:	and	x0, x0, #0xff
  4260bc:	cmp	x0, #0x0
  4260c0:	b.eq	4260ec <method_switch_to_previous+0xa4>  // b.none
  4260c4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4260c8:	add	x1, x0, #0xa3b
  4260cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4260d0:	add	x4, x0, #0xed8
  4260d4:	mov	w3, #0xe4                  	// #228
  4260d8:	mov	x2, x1
  4260dc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4260e0:	add	x1, x0, #0xa78
  4260e4:	mov	w0, #0x0                   	// #0
  4260e8:	bl	407650 <log_assert_failed_realm@plt>
  4260ec:	ldr	x0, [sp, #56]
  4260f0:	bl	428160 <seat_switch_to_previous>
  4260f4:	str	w0, [sp, #52]
  4260f8:	ldr	w0, [sp, #52]
  4260fc:	cmp	w0, #0x0
  426100:	b.ge	42610c <method_switch_to_previous+0xc4>  // b.tcont
  426104:	ldr	w0, [sp, #52]
  426108:	b	426118 <method_switch_to_previous+0xd0>
  42610c:	mov	x1, #0x0                   	// #0
  426110:	ldr	x0, [sp, #40]
  426114:	bl	4070e0 <sd_bus_reply_method_return@plt>
  426118:	ldp	x29, x30, [sp], #64
  42611c:	ret

0000000000426120 <seat_object_find>:
  426120:	stp	x29, x30, [sp, #-144]!
  426124:	mov	x29, sp
  426128:	str	x19, [sp, #16]
  42612c:	str	x0, [sp, #72]
  426130:	str	x1, [sp, #64]
  426134:	str	x2, [sp, #56]
  426138:	str	x3, [sp, #48]
  42613c:	str	x4, [sp, #40]
  426140:	str	x5, [sp, #32]
  426144:	adrp	x0, 460000 <wordlist.10364+0x370>
  426148:	ldr	x0, [x0, #4024]
  42614c:	ldr	x1, [x0]
  426150:	str	x1, [sp, #136]
  426154:	mov	x1, #0x0                   	// #0
  426158:	str	xzr, [sp, #96]
  42615c:	ldr	x0, [sp, #48]
  426160:	str	x0, [sp, #112]
  426164:	ldr	x0, [sp, #72]
  426168:	cmp	x0, #0x0
  42616c:	cset	w0, eq  // eq = none
  426170:	and	w0, w0, #0xff
  426174:	and	x0, x0, #0xff
  426178:	cmp	x0, #0x0
  42617c:	b.eq	4261a8 <seat_object_find+0x88>  // b.none
  426180:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426184:	add	x1, x0, #0xa3b
  426188:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42618c:	add	x4, x0, #0xef8
  426190:	mov	w3, #0x10b                 	// #267
  426194:	mov	x2, x1
  426198:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42619c:	add	x1, x0, #0xa58
  4261a0:	mov	w0, #0x0                   	// #0
  4261a4:	bl	407650 <log_assert_failed_realm@plt>
  4261a8:	ldr	x0, [sp, #64]
  4261ac:	cmp	x0, #0x0
  4261b0:	cset	w0, eq  // eq = none
  4261b4:	and	w0, w0, #0xff
  4261b8:	and	x0, x0, #0xff
  4261bc:	cmp	x0, #0x0
  4261c0:	b.eq	4261ec <seat_object_find+0xcc>  // b.none
  4261c4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4261c8:	add	x1, x0, #0xa3b
  4261cc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4261d0:	add	x4, x0, #0xef8
  4261d4:	mov	w3, #0x10c                 	// #268
  4261d8:	mov	x2, x1
  4261dc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4261e0:	add	x1, x0, #0xc40
  4261e4:	mov	w0, #0x0                   	// #0
  4261e8:	bl	407650 <log_assert_failed_realm@plt>
  4261ec:	ldr	x0, [sp, #56]
  4261f0:	cmp	x0, #0x0
  4261f4:	cset	w0, eq  // eq = none
  4261f8:	and	w0, w0, #0xff
  4261fc:	and	x0, x0, #0xff
  426200:	cmp	x0, #0x0
  426204:	b.eq	426230 <seat_object_find+0x110>  // b.none
  426208:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42620c:	add	x1, x0, #0xa3b
  426210:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426214:	add	x4, x0, #0xef8
  426218:	mov	w3, #0x10d                 	// #269
  42621c:	mov	x2, x1
  426220:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426224:	add	x1, x0, #0xc48
  426228:	mov	w0, #0x0                   	// #0
  42622c:	bl	407650 <log_assert_failed_realm@plt>
  426230:	ldr	x0, [sp, #40]
  426234:	cmp	x0, #0x0
  426238:	cset	w0, eq  // eq = none
  42623c:	and	w0, w0, #0xff
  426240:	and	x0, x0, #0xff
  426244:	cmp	x0, #0x0
  426248:	b.eq	426274 <seat_object_find+0x154>  // b.none
  42624c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426250:	add	x1, x0, #0xa3b
  426254:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426258:	add	x4, x0, #0xef8
  42625c:	mov	w3, #0x10e                 	// #270
  426260:	mov	x2, x1
  426264:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426268:	add	x1, x0, #0xc58
  42626c:	mov	w0, #0x0                   	// #0
  426270:	bl	407650 <log_assert_failed_realm@plt>
  426274:	ldr	x0, [sp, #112]
  426278:	cmp	x0, #0x0
  42627c:	cset	w0, eq  // eq = none
  426280:	and	w0, w0, #0xff
  426284:	and	x0, x0, #0xff
  426288:	cmp	x0, #0x0
  42628c:	b.eq	4262b8 <seat_object_find+0x198>  // b.none
  426290:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426294:	add	x1, x0, #0xa3b
  426298:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42629c:	add	x4, x0, #0xef8
  4262a0:	mov	w3, #0x10f                 	// #271
  4262a4:	mov	x2, x1
  4262a8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4262ac:	add	x1, x0, #0xc60
  4262b0:	mov	w0, #0x0                   	// #0
  4262b4:	bl	407650 <log_assert_failed_realm@plt>
  4262b8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4262bc:	add	x1, x0, #0xc68
  4262c0:	ldr	x0, [sp, #64]
  4262c4:	bl	424f8c <startswith>
  4262c8:	str	x0, [sp, #120]
  4262cc:	ldr	x0, [sp, #120]
  4262d0:	cmp	x0, #0x0
  4262d4:	b.ne	4262e0 <seat_object_find+0x1c0>  // b.any
  4262d8:	mov	w19, #0x0                   	// #0
  4262dc:	b	426370 <seat_object_find+0x250>
  4262e0:	ldr	x0, [sp, #120]
  4262e4:	bl	42500c <bus_label_unescape>
  4262e8:	str	x0, [sp, #96]
  4262ec:	ldr	x0, [sp, #96]
  4262f0:	cmp	x0, #0x0
  4262f4:	b.ne	426300 <seat_object_find+0x1e0>  // b.any
  4262f8:	mov	w19, #0xfffffff4            	// #-12
  4262fc:	b	426370 <seat_object_find+0x250>
  426300:	ldr	x0, [sp, #72]
  426304:	bl	407ad0 <sd_bus_get_current_message@plt>
  426308:	str	x0, [sp, #128]
  42630c:	ldr	x0, [sp, #96]
  426310:	add	x1, sp, #0x68
  426314:	mov	x4, x1
  426318:	ldr	x3, [sp, #32]
  42631c:	mov	x2, x0
  426320:	ldr	x1, [sp, #128]
  426324:	ldr	x0, [sp, #112]
  426328:	bl	414844 <manager_get_seat_from_creds>
  42632c:	str	w0, [sp, #92]
  426330:	ldr	w0, [sp, #92]
  426334:	cmn	w0, #0x6
  426338:	b.ne	42634c <seat_object_find+0x22c>  // b.any
  42633c:	ldr	x0, [sp, #32]
  426340:	bl	407c80 <sd_bus_error_free@plt>
  426344:	mov	w19, #0x0                   	// #0
  426348:	b	426370 <seat_object_find+0x250>
  42634c:	ldr	w0, [sp, #92]
  426350:	cmp	w0, #0x0
  426354:	b.ge	426360 <seat_object_find+0x240>  // b.tcont
  426358:	ldr	w19, [sp, #92]
  42635c:	b	426370 <seat_object_find+0x250>
  426360:	ldr	x1, [sp, #104]
  426364:	ldr	x0, [sp, #40]
  426368:	str	x1, [x0]
  42636c:	mov	w19, #0x1                   	// #1
  426370:	add	x0, sp, #0x60
  426374:	bl	424eb8 <freep>
  426378:	mov	w1, w19
  42637c:	adrp	x0, 460000 <wordlist.10364+0x370>
  426380:	ldr	x0, [x0, #4024]
  426384:	ldr	x2, [sp, #136]
  426388:	ldr	x0, [x0]
  42638c:	eor	x0, x2, x0
  426390:	cmp	x0, #0x0
  426394:	b.eq	42639c <seat_object_find+0x27c>  // b.none
  426398:	bl	407b20 <__stack_chk_fail@plt>
  42639c:	mov	w0, w1
  4263a0:	ldr	x19, [sp, #16]
  4263a4:	ldp	x29, x30, [sp], #144
  4263a8:	ret

00000000004263ac <seat_bus_path>:
  4263ac:	stp	x29, x30, [sp, #-64]!
  4263b0:	mov	x29, sp
  4263b4:	str	x19, [sp, #16]
  4263b8:	str	x0, [sp, #40]
  4263bc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4263c0:	ldr	x0, [x0, #4024]
  4263c4:	ldr	x1, [x0]
  4263c8:	str	x1, [sp, #56]
  4263cc:	mov	x1, #0x0                   	// #0
  4263d0:	str	xzr, [sp, #48]
  4263d4:	ldr	x0, [sp, #40]
  4263d8:	cmp	x0, #0x0
  4263dc:	cset	w0, eq  // eq = none
  4263e0:	and	w0, w0, #0xff
  4263e4:	and	x0, x0, #0xff
  4263e8:	cmp	x0, #0x0
  4263ec:	b.eq	426418 <seat_bus_path+0x6c>  // b.none
  4263f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4263f4:	add	x1, x0, #0xa3b
  4263f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4263fc:	add	x4, x0, #0xf10
  426400:	mov	w3, #0x12a                 	// #298
  426404:	mov	x2, x1
  426408:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42640c:	add	x1, x0, #0xa78
  426410:	mov	w0, #0x0                   	// #0
  426414:	bl	407650 <log_assert_failed_realm@plt>
  426418:	ldr	x0, [sp, #40]
  42641c:	ldr	x0, [x0, #8]
  426420:	bl	406ff0 <bus_label_escape@plt>
  426424:	str	x0, [sp, #48]
  426428:	ldr	x0, [sp, #48]
  42642c:	cmp	x0, #0x0
  426430:	b.ne	42643c <seat_bus_path+0x90>  // b.any
  426434:	mov	x19, #0x0                   	// #0
  426438:	b	426458 <seat_bus_path+0xac>
  42643c:	ldr	x0, [sp, #48]
  426440:	mov	x2, #0x0                   	// #0
  426444:	mov	x1, x0
  426448:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42644c:	add	x0, x0, #0xc68
  426450:	bl	4075d0 <strjoin_real@plt>
  426454:	mov	x19, x0
  426458:	add	x0, sp, #0x30
  42645c:	bl	424eb8 <freep>
  426460:	mov	x1, x19
  426464:	adrp	x0, 460000 <wordlist.10364+0x370>
  426468:	ldr	x0, [x0, #4024]
  42646c:	ldr	x2, [sp, #56]
  426470:	ldr	x0, [x0]
  426474:	eor	x0, x2, x0
  426478:	cmp	x0, #0x0
  42647c:	b.eq	426484 <seat_bus_path+0xd8>  // b.none
  426480:	bl	407b20 <__stack_chk_fail@plt>
  426484:	mov	x0, x1
  426488:	ldr	x19, [sp, #16]
  42648c:	ldp	x29, x30, [sp], #64
  426490:	ret

0000000000426494 <seat_node_enumerator>:
  426494:	stp	x29, x30, [sp, #-208]!
  426498:	mov	x29, sp
  42649c:	stp	x19, x20, [sp, #16]
  4264a0:	str	x0, [sp, #72]
  4264a4:	str	x1, [sp, #64]
  4264a8:	str	x2, [sp, #56]
  4264ac:	str	x3, [sp, #48]
  4264b0:	str	x4, [sp, #40]
  4264b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4264b8:	ldr	x0, [x0, #4024]
  4264bc:	ldr	x1, [x0]
  4264c0:	str	x1, [sp, #200]
  4264c4:	mov	x1, #0x0                   	// #0
  4264c8:	str	xzr, [sp, #104]
  4264cc:	ldr	x0, [sp, #56]
  4264d0:	str	x0, [sp, #136]
  4264d4:	ldr	x0, [sp, #72]
  4264d8:	cmp	x0, #0x0
  4264dc:	cset	w0, eq  // eq = none
  4264e0:	and	w0, w0, #0xff
  4264e4:	and	x0, x0, #0xff
  4264e8:	cmp	x0, #0x0
  4264ec:	b.eq	426518 <seat_node_enumerator+0x84>  // b.none
  4264f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4264f4:	add	x1, x0, #0xa3b
  4264f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4264fc:	add	x4, x0, #0xf20
  426500:	mov	w3, #0x13b                 	// #315
  426504:	mov	x2, x1
  426508:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42650c:	add	x1, x0, #0xa58
  426510:	mov	w0, #0x0                   	// #0
  426514:	bl	407650 <log_assert_failed_realm@plt>
  426518:	ldr	x0, [sp, #64]
  42651c:	cmp	x0, #0x0
  426520:	cset	w0, eq  // eq = none
  426524:	and	w0, w0, #0xff
  426528:	and	x0, x0, #0xff
  42652c:	cmp	x0, #0x0
  426530:	b.eq	42655c <seat_node_enumerator+0xc8>  // b.none
  426534:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426538:	add	x1, x0, #0xa3b
  42653c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426540:	add	x4, x0, #0xf20
  426544:	mov	w3, #0x13c                 	// #316
  426548:	mov	x2, x1
  42654c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426550:	add	x1, x0, #0xc40
  426554:	mov	w0, #0x0                   	// #0
  426558:	bl	407650 <log_assert_failed_realm@plt>
  42655c:	ldr	x0, [sp, #48]
  426560:	cmp	x0, #0x0
  426564:	cset	w0, eq  // eq = none
  426568:	and	w0, w0, #0xff
  42656c:	and	x0, x0, #0xff
  426570:	cmp	x0, #0x0
  426574:	b.eq	4265a0 <seat_node_enumerator+0x10c>  // b.none
  426578:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42657c:	add	x1, x0, #0xa3b
  426580:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426584:	add	x4, x0, #0xf20
  426588:	mov	w3, #0x13d                 	// #317
  42658c:	mov	x2, x1
  426590:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426594:	add	x1, x0, #0xc88
  426598:	mov	w0, #0x0                   	// #0
  42659c:	bl	407650 <log_assert_failed_realm@plt>
  4265a0:	mov	w0, #0xfffffffe            	// #-2
  4265a4:	str	w0, [sp, #184]
  4265a8:	str	xzr, [sp, #192]
  4265ac:	b	4265f4 <seat_node_enumerator+0x160>
  4265b0:	ldr	x0, [sp, #112]
  4265b4:	bl	4263ac <seat_bus_path>
  4265b8:	str	x0, [sp, #176]
  4265bc:	ldr	x0, [sp, #176]
  4265c0:	cmp	x0, #0x0
  4265c4:	b.ne	4265d0 <seat_node_enumerator+0x13c>  // b.any
  4265c8:	mov	w19, #0xfffffff4            	// #-12
  4265cc:	b	4267f0 <seat_node_enumerator+0x35c>
  4265d0:	add	x0, sp, #0x68
  4265d4:	ldr	x1, [sp, #176]
  4265d8:	bl	407880 <strv_consume@plt>
  4265dc:	str	w0, [sp, #100]
  4265e0:	ldr	w0, [sp, #100]
  4265e4:	cmp	w0, #0x0
  4265e8:	b.ge	4265f4 <seat_node_enumerator+0x160>  // b.tcont
  4265ec:	ldr	w19, [sp, #100]
  4265f0:	b	4267f0 <seat_node_enumerator+0x35c>
  4265f4:	ldr	x0, [sp, #136]
  4265f8:	ldr	x0, [x0, #24]
  4265fc:	add	x2, sp, #0x70
  426600:	add	x1, sp, #0xb8
  426604:	mov	x3, #0x0                   	// #0
  426608:	bl	425058 <hashmap_iterate>
  42660c:	and	w0, w0, #0xff
  426610:	cmp	w0, #0x0
  426614:	b.ne	4265b0 <seat_node_enumerator+0x11c>  // b.any
  426618:	ldr	x0, [sp, #72]
  42661c:	bl	407ad0 <sd_bus_get_current_message@plt>
  426620:	str	x0, [sp, #144]
  426624:	ldr	x0, [sp, #144]
  426628:	cmp	x0, #0x0
  42662c:	b.ne	426634 <seat_node_enumerator+0x1a0>  // b.any
  426630:	b	4267d4 <seat_node_enumerator+0x340>
  426634:	str	xzr, [sp, #120]
  426638:	add	x0, sp, #0x78
  42663c:	mov	x2, x0
  426640:	mov	x1, #0x600000              	// #6291456
  426644:	movk	x1, #0x8000, lsl #48
  426648:	ldr	x0, [sp, #144]
  42664c:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  426650:	str	w0, [sp, #100]
  426654:	ldr	w0, [sp, #100]
  426658:	cmp	w0, #0x0
  42665c:	b.lt	4267c0 <seat_node_enumerator+0x32c>  // b.tstop
  426660:	strb	wzr, [sp, #95]
  426664:	ldr	x0, [sp, #120]
  426668:	add	x1, sp, #0x80
  42666c:	bl	4072f0 <sd_bus_creds_get_session@plt>
  426670:	str	w0, [sp, #100]
  426674:	ldr	w0, [sp, #100]
  426678:	cmp	w0, #0x0
  42667c:	b.lt	4266e4 <seat_node_enumerator+0x250>  // b.tstop
  426680:	ldr	x0, [sp, #136]
  426684:	ldr	x0, [x0, #32]
  426688:	ldr	x1, [sp, #128]
  42668c:	bl	425034 <hashmap_get>
  426690:	str	x0, [sp, #152]
  426694:	ldr	x0, [sp, #152]
  426698:	cmp	x0, #0x0
  42669c:	b.eq	4266e4 <seat_node_enumerator+0x250>  // b.none
  4266a0:	ldr	x0, [sp, #152]
  4266a4:	ldr	x0, [x0, #136]
  4266a8:	cmp	x0, #0x0
  4266ac:	b.eq	4266e4 <seat_node_enumerator+0x250>  // b.none
  4266b0:	add	x2, sp, #0x68
  4266b4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4266b8:	add	x1, x0, #0xc90
  4266bc:	mov	x0, x2
  4266c0:	bl	407a50 <strv_extend@plt>
  4266c4:	str	w0, [sp, #100]
  4266c8:	ldr	w0, [sp, #100]
  4266cc:	cmp	w0, #0x0
  4266d0:	b.ge	4266dc <seat_node_enumerator+0x248>  // b.tcont
  4266d4:	ldr	w19, [sp, #100]
  4266d8:	b	4267b8 <seat_node_enumerator+0x324>
  4266dc:	mov	w0, #0x1                   	// #1
  4266e0:	strb	w0, [sp, #95]
  4266e4:	ldrb	w0, [sp, #95]
  4266e8:	eor	w0, w0, #0x1
  4266ec:	and	w0, w0, #0xff
  4266f0:	cmp	w0, #0x0
  4266f4:	b.eq	426784 <seat_node_enumerator+0x2f0>  // b.none
  4266f8:	ldr	x0, [sp, #120]
  4266fc:	add	x1, sp, #0x60
  426700:	bl	407e40 <sd_bus_creds_get_owner_uid@plt>
  426704:	str	w0, [sp, #100]
  426708:	ldr	w0, [sp, #100]
  42670c:	cmp	w0, #0x0
  426710:	b.lt	426784 <seat_node_enumerator+0x2f0>  // b.tstop
  426714:	ldr	x0, [sp, #136]
  426718:	ldr	x2, [x0, #48]
  42671c:	ldr	w0, [sp, #96]
  426720:	mov	w0, w0
  426724:	add	x0, x0, #0x1
  426728:	mov	x1, x0
  42672c:	mov	x0, x2
  426730:	bl	425034 <hashmap_get>
  426734:	str	x0, [sp, #160]
  426738:	ldr	x0, [sp, #160]
  42673c:	cmp	x0, #0x0
  426740:	b.eq	426770 <seat_node_enumerator+0x2dc>  // b.none
  426744:	ldr	x0, [sp, #160]
  426748:	ldr	x0, [x0, #80]
  42674c:	cmp	x0, #0x0
  426750:	b.eq	426770 <seat_node_enumerator+0x2dc>  // b.none
  426754:	ldr	x0, [sp, #160]
  426758:	ldr	x0, [x0, #80]
  42675c:	ldr	x0, [x0, #136]
  426760:	cmp	x0, #0x0
  426764:	b.eq	426770 <seat_node_enumerator+0x2dc>  // b.none
  426768:	mov	w0, #0x1                   	// #1
  42676c:	b	426774 <seat_node_enumerator+0x2e0>
  426770:	mov	w0, #0x0                   	// #0
  426774:	strb	w0, [sp, #95]
  426778:	ldrb	w0, [sp, #95]
  42677c:	and	w0, w0, #0x1
  426780:	strb	w0, [sp, #95]
  426784:	ldrb	w0, [sp, #95]
  426788:	cmp	w0, #0x0
  42678c:	b.eq	4267c0 <seat_node_enumerator+0x32c>  // b.none
  426790:	add	x2, sp, #0x68
  426794:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426798:	add	x1, x0, #0xcb8
  42679c:	mov	x0, x2
  4267a0:	bl	407a50 <strv_extend@plt>
  4267a4:	str	w0, [sp, #100]
  4267a8:	ldr	w0, [sp, #100]
  4267ac:	cmp	w0, #0x0
  4267b0:	b.ge	4267c0 <seat_node_enumerator+0x32c>  // b.tcont
  4267b4:	ldr	w19, [sp, #100]
  4267b8:	mov	w20, #0x0                   	// #0
  4267bc:	b	4267c4 <seat_node_enumerator+0x330>
  4267c0:	mov	w20, #0x1                   	// #1
  4267c4:	add	x0, sp, #0x78
  4267c8:	bl	424f58 <sd_bus_creds_unrefp>
  4267cc:	cmp	w20, #0x1
  4267d0:	b.ne	4267f0 <seat_node_enumerator+0x35c>  // b.any
  4267d4:	ldr	x0, [sp, #104]
  4267d8:	str	x0, [sp, #168]
  4267dc:	str	xzr, [sp, #104]
  4267e0:	ldr	x1, [sp, #168]
  4267e4:	ldr	x0, [sp, #48]
  4267e8:	str	x1, [x0]
  4267ec:	mov	w19, #0x1                   	// #1
  4267f0:	add	x0, sp, #0x68
  4267f4:	bl	425090 <strv_freep>
  4267f8:	mov	w1, w19
  4267fc:	adrp	x0, 460000 <wordlist.10364+0x370>
  426800:	ldr	x0, [x0, #4024]
  426804:	ldr	x2, [sp, #200]
  426808:	ldr	x0, [x0]
  42680c:	eor	x0, x2, x0
  426810:	cmp	x0, #0x0
  426814:	b.eq	42681c <seat_node_enumerator+0x388>  // b.none
  426818:	bl	407b20 <__stack_chk_fail@plt>
  42681c:	mov	w0, w1
  426820:	ldp	x19, x20, [sp, #16]
  426824:	ldp	x29, x30, [sp], #208
  426828:	ret

000000000042682c <seat_send_signal>:
  42682c:	stp	x29, x30, [sp, #-64]!
  426830:	mov	x29, sp
  426834:	str	x19, [sp, #16]
  426838:	str	x0, [sp, #40]
  42683c:	strb	w1, [sp, #39]
  426840:	adrp	x0, 460000 <wordlist.10364+0x370>
  426844:	ldr	x0, [x0, #4024]
  426848:	ldr	x1, [x0]
  42684c:	str	x1, [sp, #56]
  426850:	mov	x1, #0x0                   	// #0
  426854:	str	xzr, [sp, #48]
  426858:	ldr	x0, [sp, #40]
  42685c:	cmp	x0, #0x0
  426860:	cset	w0, eq  // eq = none
  426864:	and	w0, w0, #0xff
  426868:	and	x0, x0, #0xff
  42686c:	cmp	x0, #0x0
  426870:	b.eq	42689c <seat_send_signal+0x70>  // b.none
  426874:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426878:	add	x1, x0, #0xa3b
  42687c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426880:	add	x4, x0, #0xf38
  426884:	mov	w3, #0x17d                 	// #381
  426888:	mov	x2, x1
  42688c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426890:	add	x1, x0, #0xa78
  426894:	mov	w0, #0x0                   	// #0
  426898:	bl	407650 <log_assert_failed_realm@plt>
  42689c:	ldr	x0, [sp, #40]
  4268a0:	bl	4263ac <seat_bus_path>
  4268a4:	str	x0, [sp, #48]
  4268a8:	ldr	x0, [sp, #48]
  4268ac:	cmp	x0, #0x0
  4268b0:	b.ne	4268bc <seat_send_signal+0x90>  // b.any
  4268b4:	mov	w19, #0xfffffff4            	// #-12
  4268b8:	b	426924 <seat_send_signal+0xf8>
  4268bc:	ldr	x0, [sp, #40]
  4268c0:	ldr	x0, [x0]
  4268c4:	ldr	x7, [x0, #8]
  4268c8:	ldrb	w0, [sp, #39]
  4268cc:	cmp	w0, #0x0
  4268d0:	b.eq	4268e0 <seat_send_signal+0xb4>  // b.none
  4268d4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4268d8:	add	x0, x0, #0xce0
  4268dc:	b	4268e8 <seat_send_signal+0xbc>
  4268e0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4268e4:	add	x0, x0, #0xce8
  4268e8:	ldr	x1, [sp, #40]
  4268ec:	ldr	x1, [x1, #8]
  4268f0:	ldr	x2, [sp, #48]
  4268f4:	mov	x6, x2
  4268f8:	mov	x5, x1
  4268fc:	adrp	x1, 442000 <__PRETTY_FUNCTION__.16211>
  426900:	add	x4, x1, #0xcf8
  426904:	mov	x3, x0
  426908:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42690c:	add	x2, x0, #0xd00
  426910:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426914:	add	x1, x0, #0xd20
  426918:	mov	x0, x7
  42691c:	bl	407a40 <sd_bus_emit_signal@plt>
  426920:	mov	w19, w0
  426924:	add	x0, sp, #0x30
  426928:	bl	424eb8 <freep>
  42692c:	mov	w1, w19
  426930:	adrp	x0, 460000 <wordlist.10364+0x370>
  426934:	ldr	x0, [x0, #4024]
  426938:	ldr	x2, [sp, #56]
  42693c:	ldr	x0, [x0]
  426940:	eor	x0, x2, x0
  426944:	cmp	x0, #0x0
  426948:	b.eq	426950 <seat_send_signal+0x124>  // b.none
  42694c:	bl	407b20 <__stack_chk_fail@plt>
  426950:	mov	w0, w1
  426954:	ldr	x19, [sp, #16]
  426958:	ldp	x29, x30, [sp], #64
  42695c:	ret

0000000000426960 <seat_send_changed>:
  426960:	stp	x29, x30, [sp, #-304]!
  426964:	mov	x29, sp
  426968:	str	x19, [sp, #16]
  42696c:	str	x0, [x29, #40]
  426970:	str	x1, [x29, #32]
  426974:	str	x2, [x29, #256]
  426978:	str	x3, [x29, #264]
  42697c:	str	x4, [x29, #272]
  426980:	str	x5, [x29, #280]
  426984:	str	x6, [x29, #288]
  426988:	str	x7, [x29, #296]
  42698c:	str	q0, [x29, #128]
  426990:	str	q1, [x29, #144]
  426994:	str	q2, [x29, #160]
  426998:	str	q3, [x29, #176]
  42699c:	str	q4, [x29, #192]
  4269a0:	str	q5, [x29, #208]
  4269a4:	str	q6, [x29, #224]
  4269a8:	str	q7, [x29, #240]
  4269ac:	adrp	x0, 460000 <wordlist.10364+0x370>
  4269b0:	ldr	x0, [x0, #4024]
  4269b4:	ldr	x1, [x0]
  4269b8:	str	x1, [x29, #120]
  4269bc:	mov	x1, #0x0                   	// #0
  4269c0:	str	xzr, [x29, #48]
  4269c4:	ldr	x0, [x29, #40]
  4269c8:	cmp	x0, #0x0
  4269cc:	cset	w0, eq  // eq = none
  4269d0:	and	w0, w0, #0xff
  4269d4:	and	x0, x0, #0xff
  4269d8:	cmp	x0, #0x0
  4269dc:	b.eq	426a08 <seat_send_changed+0xa8>  // b.none
  4269e0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4269e4:	add	x1, x0, #0xa3b
  4269e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4269ec:	add	x4, x0, #0xf50
  4269f0:	mov	w3, #0x18f                 	// #399
  4269f4:	mov	x2, x1
  4269f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4269fc:	add	x1, x0, #0xa78
  426a00:	mov	w0, #0x0                   	// #0
  426a04:	bl	407650 <log_assert_failed_realm@plt>
  426a08:	ldr	x0, [x29, #40]
  426a0c:	ldrb	w0, [x0, #72]
  426a10:	ubfx	x0, x0, #1, #1
  426a14:	and	w0, w0, #0xff
  426a18:	eor	w0, w0, #0x1
  426a1c:	and	w0, w0, #0xff
  426a20:	cmp	w0, #0x0
  426a24:	b.eq	426a30 <seat_send_changed+0xd0>  // b.none
  426a28:	mov	w19, #0x0                   	// #0
  426a2c:	b	426cd4 <seat_send_changed+0x374>
  426a30:	ldr	x0, [x29, #40]
  426a34:	bl	4263ac <seat_bus_path>
  426a38:	str	x0, [x29, #48]
  426a3c:	ldr	x0, [x29, #48]
  426a40:	cmp	x0, #0x0
  426a44:	b.ne	426a50 <seat_send_changed+0xf0>  // b.any
  426a48:	mov	w19, #0xfffffff4            	// #-12
  426a4c:	b	426cd4 <seat_send_changed+0x374>
  426a50:	ldr	x0, [x29, #32]
  426a54:	cmp	x0, #0x0
  426a58:	b.ne	426a68 <seat_send_changed+0x108>  // b.any
  426a5c:	add	x0, x29, #0x20
  426a60:	str	x0, [x29, #56]
  426a64:	b	426ca4 <seat_send_changed+0x344>
  426a68:	mov	x0, #0x1                   	// #1
  426a6c:	str	x0, [x29, #64]
  426a70:	add	x0, x29, #0x130
  426a74:	str	x0, [x29, #88]
  426a78:	add	x0, x29, #0x130
  426a7c:	str	x0, [x29, #96]
  426a80:	add	x0, x29, #0x100
  426a84:	str	x0, [x29, #104]
  426a88:	mov	w0, #0xffffffd0            	// #-48
  426a8c:	str	w0, [x29, #112]
  426a90:	mov	w0, #0xffffff80            	// #-128
  426a94:	str	w0, [x29, #116]
  426a98:	b	426aa8 <seat_send_changed+0x148>
  426a9c:	ldr	x0, [x29, #64]
  426aa0:	add	x0, x0, #0x1
  426aa4:	str	x0, [x29, #64]
  426aa8:	ldr	w1, [x29, #112]
  426aac:	ldr	x0, [x29, #88]
  426ab0:	cmp	w1, #0x0
  426ab4:	b.lt	426ac8 <seat_send_changed+0x168>  // b.tstop
  426ab8:	add	x1, x0, #0xf
  426abc:	and	x1, x1, #0xfffffffffffffff8
  426ac0:	str	x1, [x29, #88]
  426ac4:	b	426af8 <seat_send_changed+0x198>
  426ac8:	add	w2, w1, #0x8
  426acc:	str	w2, [x29, #112]
  426ad0:	ldr	w2, [x29, #112]
  426ad4:	cmp	w2, #0x0
  426ad8:	b.le	426aec <seat_send_changed+0x18c>
  426adc:	add	x1, x0, #0xf
  426ae0:	and	x1, x1, #0xfffffffffffffff8
  426ae4:	str	x1, [x29, #88]
  426ae8:	b	426af8 <seat_send_changed+0x198>
  426aec:	ldr	x2, [x29, #96]
  426af0:	sxtw	x0, w1
  426af4:	add	x0, x2, x0
  426af8:	ldr	x0, [x0]
  426afc:	cmp	x0, #0x0
  426b00:	b.ne	426a9c <seat_send_changed+0x13c>  // b.any
  426b04:	ldr	x0, [x29, #64]
  426b08:	add	x0, x0, #0x1
  426b0c:	str	x0, [x29, #72]
  426b10:	ldr	x1, [x29, #72]
  426b14:	mov	x0, #0x8                   	// #8
  426b18:	bl	424edc <size_multiply_overflow>
  426b1c:	and	w0, w0, #0xff
  426b20:	and	x0, x0, #0xff
  426b24:	cmp	x0, #0x0
  426b28:	b.eq	426b54 <seat_send_changed+0x1f4>  // b.none
  426b2c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426b30:	add	x1, x0, #0xa3b
  426b34:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426b38:	add	x4, x0, #0xf50
  426b3c:	mov	w3, #0x198                 	// #408
  426b40:	mov	x2, x1
  426b44:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426b48:	add	x1, x0, #0xd38
  426b4c:	mov	w0, #0x0                   	// #0
  426b50:	bl	407650 <log_assert_failed_realm@plt>
  426b54:	ldr	x0, [x29, #72]
  426b58:	lsl	x0, x0, #3
  426b5c:	cmp	x0, #0x400, lsl #12
  426b60:	cset	w0, hi  // hi = pmore
  426b64:	and	w0, w0, #0xff
  426b68:	and	x0, x0, #0xff
  426b6c:	cmp	x0, #0x0
  426b70:	b.eq	426b9c <seat_send_changed+0x23c>  // b.none
  426b74:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426b78:	add	x1, x0, #0xa3b
  426b7c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426b80:	add	x4, x0, #0xf50
  426b84:	mov	w3, #0x198                 	// #408
  426b88:	mov	x2, x1
  426b8c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426b90:	add	x1, x0, #0xd68
  426b94:	mov	w0, #0x0                   	// #0
  426b98:	bl	407650 <log_assert_failed_realm@plt>
  426b9c:	ldr	x0, [x29, #72]
  426ba0:	lsl	x0, x0, #3
  426ba4:	add	x0, x0, #0xf
  426ba8:	lsr	x0, x0, #4
  426bac:	lsl	x0, x0, #4
  426bb0:	sub	sp, sp, x0
  426bb4:	mov	x0, sp
  426bb8:	add	x0, x0, #0xf
  426bbc:	lsr	x0, x0, #4
  426bc0:	lsl	x0, x0, #4
  426bc4:	str	x0, [x29, #56]
  426bc8:	str	xzr, [x29, #64]
  426bcc:	ldr	x0, [x29, #64]
  426bd0:	lsl	x0, x0, #3
  426bd4:	ldr	x1, [x29, #56]
  426bd8:	add	x0, x1, x0
  426bdc:	ldr	x1, [x29, #32]
  426be0:	str	x1, [x0]
  426be4:	add	x0, x29, #0x130
  426be8:	str	x0, [x29, #88]
  426bec:	add	x0, x29, #0x130
  426bf0:	str	x0, [x29, #96]
  426bf4:	add	x0, x29, #0x100
  426bf8:	str	x0, [x29, #104]
  426bfc:	mov	w0, #0xffffffd0            	// #-48
  426c00:	str	w0, [x29, #112]
  426c04:	mov	w0, #0xffffff80            	// #-128
  426c08:	str	w0, [x29, #116]
  426c0c:	ldr	x0, [x29, #64]
  426c10:	add	x0, x0, #0x1
  426c14:	str	x0, [x29, #64]
  426c18:	ldr	x0, [x29, #64]
  426c1c:	lsl	x0, x0, #3
  426c20:	ldr	x1, [x29, #56]
  426c24:	add	x2, x1, x0
  426c28:	ldr	w1, [x29, #112]
  426c2c:	ldr	x0, [x29, #88]
  426c30:	cmp	w1, #0x0
  426c34:	b.lt	426c48 <seat_send_changed+0x2e8>  // b.tstop
  426c38:	add	x1, x0, #0xf
  426c3c:	and	x1, x1, #0xfffffffffffffff8
  426c40:	str	x1, [x29, #88]
  426c44:	b	426c78 <seat_send_changed+0x318>
  426c48:	add	w3, w1, #0x8
  426c4c:	str	w3, [x29, #112]
  426c50:	ldr	w3, [x29, #112]
  426c54:	cmp	w3, #0x0
  426c58:	b.le	426c6c <seat_send_changed+0x30c>
  426c5c:	add	x1, x0, #0xf
  426c60:	and	x1, x1, #0xfffffffffffffff8
  426c64:	str	x1, [x29, #88]
  426c68:	b	426c78 <seat_send_changed+0x318>
  426c6c:	ldr	x3, [x29, #96]
  426c70:	sxtw	x0, w1
  426c74:	add	x0, x3, x0
  426c78:	ldr	x0, [x0]
  426c7c:	str	x0, [x2]
  426c80:	ldr	x0, [x29, #64]
  426c84:	lsl	x0, x0, #3
  426c88:	ldr	x1, [x29, #56]
  426c8c:	add	x0, x1, x0
  426c90:	ldr	x0, [x0]
  426c94:	cmp	x0, #0x0
  426c98:	b.eq	426ca0 <seat_send_changed+0x340>  // b.none
  426c9c:	b	426c0c <seat_send_changed+0x2ac>
  426ca0:	nop
  426ca4:	ldr	x0, [x29, #56]
  426ca8:	str	x0, [x29, #80]
  426cac:	ldr	x0, [x29, #40]
  426cb0:	ldr	x0, [x0]
  426cb4:	ldr	x4, [x0, #8]
  426cb8:	ldr	x1, [x29, #48]
  426cbc:	ldr	x3, [x29, #80]
  426cc0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426cc4:	add	x2, x0, #0xd88
  426cc8:	mov	x0, x4
  426ccc:	bl	4082d0 <sd_bus_emit_properties_changed_strv@plt>
  426cd0:	mov	w19, w0
  426cd4:	add	x0, x29, #0x30
  426cd8:	bl	424eb8 <freep>
  426cdc:	mov	w1, w19
  426ce0:	adrp	x0, 460000 <wordlist.10364+0x370>
  426ce4:	ldr	x0, [x0, #4024]
  426ce8:	ldr	x2, [x29, #120]
  426cec:	ldr	x0, [x0]
  426cf0:	eor	x0, x2, x0
  426cf4:	cmp	x0, #0x0
  426cf8:	b.eq	426d00 <seat_send_changed+0x3a0>  // b.none
  426cfc:	bl	407b20 <__stack_chk_fail@plt>
  426d00:	mov	w0, w1
  426d04:	mov	sp, x29
  426d08:	ldr	x19, [sp, #16]
  426d0c:	ldp	x29, x30, [sp], #304
  426d10:	ret

0000000000426d14 <mfree>:
  426d14:	stp	x29, x30, [sp, #-32]!
  426d18:	mov	x29, sp
  426d1c:	str	x0, [sp, #24]
  426d20:	ldr	x0, [sp, #24]
  426d24:	bl	408150 <free@plt>
  426d28:	mov	x0, #0x0                   	// #0
  426d2c:	ldp	x29, x30, [sp], #32
  426d30:	ret

0000000000426d34 <freep>:
  426d34:	stp	x29, x30, [sp, #-32]!
  426d38:	mov	x29, sp
  426d3c:	str	x0, [sp, #24]
  426d40:	ldr	x0, [sp, #24]
  426d44:	ldr	x0, [x0]
  426d48:	bl	408150 <free@plt>
  426d4c:	nop
  426d50:	ldp	x29, x30, [sp], #32
  426d54:	ret

0000000000426d58 <size_multiply_overflow>:
  426d58:	sub	sp, sp, #0x10
  426d5c:	str	x0, [sp, #8]
  426d60:	str	x1, [sp]
  426d64:	ldr	x0, [sp]
  426d68:	cmp	x0, #0x0
  426d6c:	cset	w0, ne  // ne = any
  426d70:	and	w0, w0, #0xff
  426d74:	and	x0, x0, #0xff
  426d78:	cmp	x0, #0x0
  426d7c:	b.eq	426dc0 <size_multiply_overflow+0x68>  // b.none
  426d80:	mov	x2, #0x0                   	// #0
  426d84:	ldr	x1, [sp, #8]
  426d88:	ldr	x0, [sp]
  426d8c:	umulh	x0, x1, x0
  426d90:	cmp	x0, #0x0
  426d94:	b.eq	426d9c <size_multiply_overflow+0x44>  // b.none
  426d98:	mov	x2, #0x1                   	// #1
  426d9c:	mov	x0, x2
  426da0:	cmp	x0, #0x0
  426da4:	cset	w0, ne  // ne = any
  426da8:	and	w0, w0, #0xff
  426dac:	and	x0, x0, #0xff
  426db0:	cmp	x0, #0x0
  426db4:	b.eq	426dc0 <size_multiply_overflow+0x68>  // b.none
  426db8:	mov	w0, #0x1                   	// #1
  426dbc:	b	426dc4 <size_multiply_overflow+0x6c>
  426dc0:	mov	w0, #0x0                   	// #0
  426dc4:	and	w0, w0, #0x1
  426dc8:	and	w0, w0, #0xff
  426dcc:	add	sp, sp, #0x10
  426dd0:	ret

0000000000426dd4 <malloc_multiply>:
  426dd4:	stp	x29, x30, [sp, #-32]!
  426dd8:	mov	x29, sp
  426ddc:	str	x0, [sp, #24]
  426de0:	str	x1, [sp, #16]
  426de4:	ldr	x1, [sp, #16]
  426de8:	ldr	x0, [sp, #24]
  426dec:	bl	426d58 <size_multiply_overflow>
  426df0:	and	w0, w0, #0xff
  426df4:	cmp	w0, #0x0
  426df8:	b.eq	426e04 <malloc_multiply+0x30>  // b.none
  426dfc:	mov	x0, #0x0                   	// #0
  426e00:	b	426e20 <malloc_multiply+0x4c>
  426e04:	ldr	x1, [sp, #24]
  426e08:	ldr	x0, [sp, #16]
  426e0c:	mul	x0, x1, x0
  426e10:	cmp	x0, #0x0
  426e14:	b.ne	426e1c <malloc_multiply+0x48>  // b.any
  426e18:	mov	x0, #0x1                   	// #1
  426e1c:	bl	407ce0 <malloc@plt>
  426e20:	ldp	x29, x30, [sp], #32
  426e24:	ret

0000000000426e28 <strerror_safe>:
  426e28:	stp	x29, x30, [sp, #-32]!
  426e2c:	mov	x29, sp
  426e30:	str	w0, [sp, #28]
  426e34:	ldr	w0, [sp, #28]
  426e38:	cmp	w0, #0x0
  426e3c:	cneg	w0, w0, lt  // lt = tstop
  426e40:	bl	408170 <strerror@plt>
  426e44:	ldp	x29, x30, [sp], #32
  426e48:	ret

0000000000426e4c <closep>:
  426e4c:	stp	x29, x30, [sp, #-32]!
  426e50:	mov	x29, sp
  426e54:	str	x0, [sp, #24]
  426e58:	ldr	x0, [sp, #24]
  426e5c:	ldr	w0, [x0]
  426e60:	bl	4075e0 <safe_close@plt>
  426e64:	nop
  426e68:	ldp	x29, x30, [sp], #32
  426e6c:	ret

0000000000426e70 <fclosep>:
  426e70:	stp	x29, x30, [sp, #-32]!
  426e74:	mov	x29, sp
  426e78:	str	x0, [sp, #24]
  426e7c:	ldr	x0, [sp, #24]
  426e80:	ldr	x0, [x0]
  426e84:	bl	406fc0 <safe_fclose@plt>
  426e88:	nop
  426e8c:	ldp	x29, x30, [sp], #32
  426e90:	ret

0000000000426e94 <hashmap_remove>:
  426e94:	stp	x29, x30, [sp, #-32]!
  426e98:	mov	x29, sp
  426e9c:	str	x0, [sp, #24]
  426ea0:	str	x1, [sp, #16]
  426ea4:	ldr	x1, [sp, #16]
  426ea8:	ldr	x0, [sp, #24]
  426eac:	bl	406f90 <internal_hashmap_remove@plt>
  426eb0:	ldp	x29, x30, [sp], #32
  426eb4:	ret

0000000000426eb8 <startswith>:
  426eb8:	stp	x29, x30, [sp, #-48]!
  426ebc:	mov	x29, sp
  426ec0:	str	x0, [sp, #24]
  426ec4:	str	x1, [sp, #16]
  426ec8:	ldr	x0, [sp, #16]
  426ecc:	bl	4082f0 <strlen@plt>
  426ed0:	str	x0, [sp, #40]
  426ed4:	ldr	x2, [sp, #40]
  426ed8:	ldr	x1, [sp, #16]
  426edc:	ldr	x0, [sp, #24]
  426ee0:	bl	407770 <strncmp@plt>
  426ee4:	cmp	w0, #0x0
  426ee8:	b.ne	426efc <startswith+0x44>  // b.any
  426eec:	ldr	x1, [sp, #24]
  426ef0:	ldr	x0, [sp, #40]
  426ef4:	add	x0, x1, x0
  426ef8:	b	426f00 <startswith+0x48>
  426efc:	mov	x0, #0x0                   	// #0
  426f00:	ldp	x29, x30, [sp], #48
  426f04:	ret

0000000000426f08 <seat_freep>:
  426f08:	stp	x29, x30, [sp, #-32]!
  426f0c:	mov	x29, sp
  426f10:	str	x0, [sp, #24]
  426f14:	ldr	x0, [sp, #24]
  426f18:	ldr	x0, [x0]
  426f1c:	cmp	x0, #0x0
  426f20:	b.eq	426f30 <seat_freep+0x28>  // b.none
  426f24:	ldr	x0, [sp, #24]
  426f28:	ldr	x0, [x0]
  426f2c:	bl	427180 <seat_free>
  426f30:	nop
  426f34:	ldp	x29, x30, [sp], #32
  426f38:	ret

0000000000426f3c <seat_new>:
  426f3c:	stp	x29, x30, [sp, #-192]!
  426f40:	mov	x29, sp
  426f44:	str	x19, [sp, #16]
  426f48:	str	x0, [sp, #56]
  426f4c:	str	x1, [sp, #48]
  426f50:	str	x2, [sp, #40]
  426f54:	adrp	x0, 460000 <wordlist.10364+0x370>
  426f58:	ldr	x0, [x0, #4024]
  426f5c:	ldr	x1, [x0]
  426f60:	str	x1, [sp, #184]
  426f64:	mov	x1, #0x0                   	// #0
  426f68:	str	xzr, [sp, #88]
  426f6c:	ldr	x0, [sp, #56]
  426f70:	cmp	x0, #0x0
  426f74:	cset	w0, eq  // eq = none
  426f78:	and	w0, w0, #0xff
  426f7c:	and	x0, x0, #0xff
  426f80:	cmp	x0, #0x0
  426f84:	b.eq	426fb0 <seat_new+0x74>  // b.none
  426f88:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426f8c:	add	x1, x0, #0xf6b
  426f90:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  426f94:	add	x4, x0, #0x328
  426f98:	mov	w3, #0x20                  	// #32
  426f9c:	mov	x2, x1
  426fa0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426fa4:	add	x1, x0, #0xf88
  426fa8:	mov	w0, #0x0                   	// #0
  426fac:	bl	407650 <log_assert_failed_realm@plt>
  426fb0:	ldr	x0, [sp, #48]
  426fb4:	cmp	x0, #0x0
  426fb8:	cset	w0, eq  // eq = none
  426fbc:	and	w0, w0, #0xff
  426fc0:	and	x0, x0, #0xff
  426fc4:	cmp	x0, #0x0
  426fc8:	b.eq	426ff4 <seat_new+0xb8>  // b.none
  426fcc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426fd0:	add	x1, x0, #0xf6b
  426fd4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  426fd8:	add	x4, x0, #0x328
  426fdc:	mov	w3, #0x21                  	// #33
  426fe0:	mov	x2, x1
  426fe4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  426fe8:	add	x1, x0, #0xf90
  426fec:	mov	w0, #0x0                   	// #0
  426ff0:	bl	407650 <log_assert_failed_realm@plt>
  426ff4:	ldr	x0, [sp, #40]
  426ff8:	cmp	x0, #0x0
  426ffc:	cset	w0, eq  // eq = none
  427000:	and	w0, w0, #0xff
  427004:	and	x0, x0, #0xff
  427008:	cmp	x0, #0x0
  42700c:	b.eq	427038 <seat_new+0xfc>  // b.none
  427010:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427014:	add	x1, x0, #0xf6b
  427018:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42701c:	add	x4, x0, #0x328
  427020:	mov	w3, #0x22                  	// #34
  427024:	mov	x2, x1
  427028:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42702c:	add	x1, x0, #0xf98
  427030:	mov	w0, #0x0                   	// #0
  427034:	bl	407650 <log_assert_failed_realm@plt>
  427038:	ldr	x0, [sp, #40]
  42703c:	bl	42968c <seat_name_is_valid>
  427040:	and	w0, w0, #0xff
  427044:	eor	w0, w0, #0x1
  427048:	and	w0, w0, #0xff
  42704c:	cmp	w0, #0x0
  427050:	b.eq	42705c <seat_new+0x120>  // b.none
  427054:	mov	w19, #0xffffffea            	// #-22
  427058:	b	427144 <seat_new+0x208>
  42705c:	mov	x1, #0x1                   	// #1
  427060:	mov	x0, #0x60                  	// #96
  427064:	bl	426dd4 <malloc_multiply>
  427068:	str	x0, [sp, #88]
  42706c:	ldr	x0, [sp, #88]
  427070:	cmp	x0, #0x0
  427074:	b.ne	427080 <seat_new+0x144>  // b.any
  427078:	mov	w19, #0xfffffff4            	// #-12
  42707c:	b	427144 <seat_new+0x208>
  427080:	ldr	x0, [sp, #88]
  427084:	stp	xzr, xzr, [x0]
  427088:	stp	xzr, xzr, [x0, #16]
  42708c:	stp	xzr, xzr, [x0, #32]
  427090:	stp	xzr, xzr, [x0, #48]
  427094:	stp	xzr, xzr, [x0, #64]
  427098:	stp	xzr, xzr, [x0, #80]
  42709c:	ldr	x1, [sp, #48]
  4270a0:	str	x1, [x0]
  4270a4:	ldr	x19, [sp, #88]
  4270a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4270ac:	ldr	x1, [sp, #40]
  4270b0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4270b4:	add	x0, x0, #0xfa0
  4270b8:	bl	407bb0 <path_join_internal@plt>
  4270bc:	str	x0, [x19, #16]
  4270c0:	ldr	x0, [sp, #88]
  4270c4:	ldr	x0, [x0, #16]
  4270c8:	cmp	x0, #0x0
  4270cc:	b.ne	4270d8 <seat_new+0x19c>  // b.any
  4270d0:	mov	w19, #0xfffffff4            	// #-12
  4270d4:	b	427144 <seat_new+0x208>
  4270d8:	ldr	x0, [sp, #88]
  4270dc:	ldr	x0, [x0, #16]
  4270e0:	ldr	x19, [sp, #88]
  4270e4:	bl	407b50 <basename@plt>
  4270e8:	str	x0, [x19, #8]
  4270ec:	ldr	x0, [sp, #48]
  4270f0:	ldr	x3, [x0, #24]
  4270f4:	ldr	x0, [sp, #88]
  4270f8:	ldr	x0, [x0, #8]
  4270fc:	ldr	x1, [sp, #88]
  427100:	mov	x2, x1
  427104:	mov	x1, x0
  427108:	mov	x0, x3
  42710c:	bl	407dd0 <hashmap_put@plt>
  427110:	str	w0, [sp, #76]
  427114:	ldr	w0, [sp, #76]
  427118:	cmp	w0, #0x0
  42711c:	b.ge	427128 <seat_new+0x1ec>  // b.tcont
  427120:	ldr	w19, [sp, #76]
  427124:	b	427144 <seat_new+0x208>
  427128:	ldr	x0, [sp, #88]
  42712c:	str	x0, [sp, #80]
  427130:	str	xzr, [sp, #88]
  427134:	ldr	x1, [sp, #80]
  427138:	ldr	x0, [sp, #56]
  42713c:	str	x1, [x0]
  427140:	mov	w19, #0x0                   	// #0
  427144:	add	x0, sp, #0x58
  427148:	bl	426f08 <seat_freep>
  42714c:	mov	w1, w19
  427150:	adrp	x0, 460000 <wordlist.10364+0x370>
  427154:	ldr	x0, [x0, #4024]
  427158:	ldr	x2, [sp, #184]
  42715c:	ldr	x0, [x0]
  427160:	eor	x0, x2, x0
  427164:	cmp	x0, #0x0
  427168:	b.eq	427170 <seat_new+0x234>  // b.none
  42716c:	bl	407b20 <__stack_chk_fail@plt>
  427170:	mov	w0, w1
  427174:	ldr	x19, [sp, #16]
  427178:	ldp	x29, x30, [sp], #192
  42717c:	ret

0000000000427180 <seat_free>:
  427180:	stp	x29, x30, [sp, #-48]!
  427184:	mov	x29, sp
  427188:	str	x0, [sp, #24]
  42718c:	ldr	x0, [sp, #24]
  427190:	cmp	x0, #0x0
  427194:	b.ne	4271a0 <seat_free+0x20>  // b.any
  427198:	mov	x0, #0x0                   	// #0
  42719c:	b	427398 <seat_free+0x218>
  4271a0:	ldr	x0, [sp, #24]
  4271a4:	ldrb	w0, [x0, #72]
  4271a8:	and	w0, w0, #0x1
  4271ac:	and	w0, w0, #0xff
  4271b0:	cmp	w0, #0x0
  4271b4:	b.eq	4272e4 <seat_free+0x164>  // b.none
  4271b8:	ldr	x0, [sp, #24]
  4271bc:	ldr	x0, [x0]
  4271c0:	add	x0, x0, #0x50
  4271c4:	str	x0, [sp, #32]
  4271c8:	ldr	x0, [sp, #24]
  4271cc:	str	x0, [sp, #40]
  4271d0:	ldr	x0, [sp, #40]
  4271d4:	cmp	x0, #0x0
  4271d8:	cset	w0, eq  // eq = none
  4271dc:	and	w0, w0, #0xff
  4271e0:	and	x0, x0, #0xff
  4271e4:	cmp	x0, #0x0
  4271e8:	b.eq	427214 <seat_free+0x94>  // b.none
  4271ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4271f0:	add	x1, x0, #0xf6b
  4271f4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4271f8:	add	x4, x0, #0x338
  4271fc:	mov	w3, #0x42                  	// #66
  427200:	mov	x2, x1
  427204:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427208:	add	x1, x0, #0xfb8
  42720c:	mov	w0, #0x0                   	// #0
  427210:	bl	407650 <log_assert_failed_realm@plt>
  427214:	ldr	x0, [sp, #40]
  427218:	ldr	x0, [x0, #80]
  42721c:	cmp	x0, #0x0
  427220:	b.eq	427238 <seat_free+0xb8>  // b.none
  427224:	ldr	x0, [sp, #40]
  427228:	ldr	x0, [x0, #80]
  42722c:	ldr	x1, [sp, #40]
  427230:	ldr	x1, [x1, #88]
  427234:	str	x1, [x0, #88]
  427238:	ldr	x0, [sp, #40]
  42723c:	ldr	x0, [x0, #88]
  427240:	cmp	x0, #0x0
  427244:	b.eq	427260 <seat_free+0xe0>  // b.none
  427248:	ldr	x0, [sp, #40]
  42724c:	ldr	x0, [x0, #88]
  427250:	ldr	x1, [sp, #40]
  427254:	ldr	x1, [x1, #80]
  427258:	str	x1, [x0, #80]
  42725c:	b	4272bc <seat_free+0x13c>
  427260:	ldr	x0, [sp, #32]
  427264:	ldr	x0, [x0]
  427268:	ldr	x1, [sp, #40]
  42726c:	cmp	x1, x0
  427270:	cset	w0, ne  // ne = any
  427274:	and	w0, w0, #0xff
  427278:	and	x0, x0, #0xff
  42727c:	cmp	x0, #0x0
  427280:	b.eq	4272ac <seat_free+0x12c>  // b.none
  427284:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427288:	add	x1, x0, #0xf6b
  42728c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427290:	add	x4, x0, #0x338
  427294:	mov	w3, #0x42                  	// #66
  427298:	mov	x2, x1
  42729c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4272a0:	add	x1, x0, #0xfc0
  4272a4:	mov	w0, #0x0                   	// #0
  4272a8:	bl	407650 <log_assert_failed_realm@plt>
  4272ac:	ldr	x0, [sp, #40]
  4272b0:	ldr	x1, [x0, #80]
  4272b4:	ldr	x0, [sp, #32]
  4272b8:	str	x1, [x0]
  4272bc:	ldr	x0, [sp, #40]
  4272c0:	str	xzr, [x0, #88]
  4272c4:	ldr	x0, [sp, #40]
  4272c8:	ldr	x1, [x0, #88]
  4272cc:	ldr	x0, [sp, #40]
  4272d0:	str	x1, [x0, #80]
  4272d4:	b	4272e4 <seat_free+0x164>
  4272d8:	ldr	x0, [sp, #24]
  4272dc:	ldr	x0, [x0, #48]
  4272e0:	bl	42f474 <session_free>
  4272e4:	ldr	x0, [sp, #24]
  4272e8:	ldr	x0, [x0, #48]
  4272ec:	cmp	x0, #0x0
  4272f0:	b.ne	4272d8 <seat_free+0x158>  // b.any
  4272f4:	ldr	x0, [sp, #24]
  4272f8:	ldr	x0, [x0, #32]
  4272fc:	cmp	x0, #0x0
  427300:	cset	w0, ne  // ne = any
  427304:	and	w0, w0, #0xff
  427308:	and	x0, x0, #0xff
  42730c:	cmp	x0, #0x0
  427310:	b.eq	427348 <seat_free+0x1c8>  // b.none
  427314:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427318:	add	x1, x0, #0xf6b
  42731c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427320:	add	x4, x0, #0x338
  427324:	mov	w3, #0x47                  	// #71
  427328:	mov	x2, x1
  42732c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427330:	add	x1, x0, #0xfd0
  427334:	mov	w0, #0x0                   	// #0
  427338:	bl	407650 <log_assert_failed_realm@plt>
  42733c:	ldr	x0, [sp, #24]
  427340:	ldr	x0, [x0, #24]
  427344:	bl	422b30 <device_free>
  427348:	ldr	x0, [sp, #24]
  42734c:	ldr	x0, [x0, #24]
  427350:	cmp	x0, #0x0
  427354:	b.ne	42733c <seat_free+0x1bc>  // b.any
  427358:	ldr	x0, [sp, #24]
  42735c:	ldr	x0, [x0]
  427360:	ldr	x2, [x0, #24]
  427364:	ldr	x0, [sp, #24]
  427368:	ldr	x0, [x0, #8]
  42736c:	mov	x1, x0
  427370:	mov	x0, x2
  427374:	bl	426e94 <hashmap_remove>
  427378:	ldr	x0, [sp, #24]
  42737c:	ldr	x0, [x0, #56]
  427380:	bl	408150 <free@plt>
  427384:	ldr	x0, [sp, #24]
  427388:	ldr	x0, [x0, #16]
  42738c:	bl	408150 <free@plt>
  427390:	ldr	x0, [sp, #24]
  427394:	bl	426d14 <mfree>
  427398:	ldp	x29, x30, [sp], #48
  42739c:	ret

00000000004273a0 <seat_save>:
  4273a0:	stp	x29, x30, [sp, #-112]!
  4273a4:	mov	x29, sp
  4273a8:	stp	x19, x20, [sp, #16]
  4273ac:	stp	x21, x22, [sp, #32]
  4273b0:	str	x0, [sp, #56]
  4273b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4273b8:	ldr	x0, [x0, #4024]
  4273bc:	ldr	x1, [x0]
  4273c0:	str	x1, [sp, #104]
  4273c4:	mov	x1, #0x0                   	// #0
  4273c8:	str	xzr, [sp, #80]
  4273cc:	str	xzr, [sp, #88]
  4273d0:	ldr	x0, [sp, #56]
  4273d4:	cmp	x0, #0x0
  4273d8:	cset	w0, eq  // eq = none
  4273dc:	and	w0, w0, #0xff
  4273e0:	and	x0, x0, #0xff
  4273e4:	cmp	x0, #0x0
  4273e8:	b.eq	427414 <seat_save+0x74>  // b.none
  4273ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4273f0:	add	x1, x0, #0xf6b
  4273f4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4273f8:	add	x4, x0, #0x348
  4273fc:	mov	w3, #0x59                  	// #89
  427400:	mov	x2, x1
  427404:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427408:	add	x1, x0, #0xfe0
  42740c:	mov	w0, #0x0                   	// #0
  427410:	bl	407650 <log_assert_failed_realm@plt>
  427414:	ldr	x0, [sp, #56]
  427418:	ldrb	w0, [x0, #72]
  42741c:	ubfx	x0, x0, #1, #1
  427420:	and	w0, w0, #0xff
  427424:	eor	w0, w0, #0x1
  427428:	and	w0, w0, #0xff
  42742c:	cmp	w0, #0x0
  427430:	b.eq	42743c <seat_save+0x9c>  // b.none
  427434:	mov	w19, #0x0                   	// #0
  427438:	b	4277cc <seat_save+0x42c>
  42743c:	mov	w4, #0x2                   	// #2
  427440:	mov	w3, #0x0                   	// #0
  427444:	mov	w2, #0x0                   	// #0
  427448:	mov	w1, #0x1ed                 	// #493
  42744c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427450:	add	x0, x0, #0xfa0
  427454:	bl	407ab0 <mkdir_safe_label@plt>
  427458:	str	w0, [sp, #64]
  42745c:	ldr	w0, [sp, #64]
  427460:	cmp	w0, #0x0
  427464:	b.lt	427700 <seat_save+0x360>  // b.tstop
  427468:	ldr	x0, [sp, #56]
  42746c:	ldr	x0, [x0, #16]
  427470:	add	x2, sp, #0x50
  427474:	add	x1, sp, #0x58
  427478:	bl	407870 <fopen_temporary@plt>
  42747c:	str	w0, [sp, #64]
  427480:	ldr	w0, [sp, #64]
  427484:	cmp	w0, #0x0
  427488:	b.lt	427708 <seat_save+0x368>  // b.tstop
  42748c:	ldr	x0, [sp, #88]
  427490:	bl	407300 <fileno@plt>
  427494:	mov	w1, #0x1a4                 	// #420
  427498:	bl	407150 <fchmod@plt>
  42749c:	ldr	x19, [sp, #88]
  4274a0:	ldr	x0, [sp, #56]
  4274a4:	bl	429044 <seat_is_seat0>
  4274a8:	and	w0, w0, #0xff
  4274ac:	mov	w20, w0
  4274b0:	ldr	x0, [sp, #56]
  4274b4:	bl	4290b8 <seat_can_multi_session>
  4274b8:	and	w0, w0, #0xff
  4274bc:	mov	w21, w0
  4274c0:	ldr	x0, [sp, #56]
  4274c4:	bl	42911c <seat_can_tty>
  4274c8:	and	w0, w0, #0xff
  4274cc:	mov	w22, w0
  4274d0:	ldr	x0, [sp, #56]
  4274d4:	bl	429210 <seat_can_graphical>
  4274d8:	and	w0, w0, #0xff
  4274dc:	mov	w5, w0
  4274e0:	mov	w4, w22
  4274e4:	mov	w3, w21
  4274e8:	mov	w2, w20
  4274ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4274f0:	add	x1, x0, #0xfe8
  4274f4:	mov	x0, x19
  4274f8:	bl	4074c0 <fprintf@plt>
  4274fc:	ldr	x0, [sp, #56]
  427500:	ldr	x0, [x0, #32]
  427504:	cmp	x0, #0x0
  427508:	b.eq	427590 <seat_save+0x1f0>  // b.none
  42750c:	ldr	x0, [sp, #56]
  427510:	ldr	x0, [x0, #32]
  427514:	ldr	x0, [x0, #40]
  427518:	cmp	x0, #0x0
  42751c:	cset	w0, eq  // eq = none
  427520:	and	w0, w0, #0xff
  427524:	and	x0, x0, #0xff
  427528:	cmp	x0, #0x0
  42752c:	b.eq	427558 <seat_save+0x1b8>  // b.none
  427530:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427534:	add	x1, x0, #0xf6b
  427538:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42753c:	add	x4, x0, #0x348
  427540:	mov	w3, #0x74                  	// #116
  427544:	mov	x2, x1
  427548:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42754c:	add	x1, x0, #0x50
  427550:	mov	w0, #0x0                   	// #0
  427554:	bl	407650 <log_assert_failed_realm@plt>
  427558:	ldr	x4, [sp, #88]
  42755c:	ldr	x0, [sp, #56]
  427560:	ldr	x0, [x0, #32]
  427564:	ldr	x1, [x0, #8]
  427568:	ldr	x0, [sp, #56]
  42756c:	ldr	x0, [x0, #32]
  427570:	ldr	x0, [x0, #40]
  427574:	ldr	w0, [x0, #8]
  427578:	mov	w3, w0
  42757c:	mov	x2, x1
  427580:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427584:	add	x1, x0, #0x60
  427588:	mov	x0, x4
  42758c:	bl	4074c0 <fprintf@plt>
  427590:	ldr	x0, [sp, #56]
  427594:	ldr	x0, [x0, #48]
  427598:	cmp	x0, #0x0
  42759c:	b.eq	4276ac <seat_save+0x30c>  // b.none
  4275a0:	ldr	x0, [sp, #88]
  4275a4:	mov	x3, x0
  4275a8:	mov	x2, #0x9                   	// #9
  4275ac:	mov	x1, #0x1                   	// #1
  4275b0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4275b4:	add	x0, x0, #0x80
  4275b8:	bl	4081e0 <fwrite@plt>
  4275bc:	ldr	x0, [sp, #56]
  4275c0:	ldr	x0, [x0, #48]
  4275c4:	str	x0, [sp, #96]
  4275c8:	b	427618 <seat_save+0x278>
  4275cc:	ldr	x4, [sp, #88]
  4275d0:	ldr	x0, [sp, #96]
  4275d4:	ldr	x1, [x0, #8]
  4275d8:	ldr	x0, [sp, #96]
  4275dc:	ldr	x0, [x0, #272]
  4275e0:	cmp	x0, #0x0
  4275e4:	b.eq	4275f0 <seat_save+0x250>  // b.none
  4275e8:	mov	w0, #0x20                  	// #32
  4275ec:	b	4275f4 <seat_save+0x254>
  4275f0:	mov	w0, #0xa                   	// #10
  4275f4:	mov	w3, w0
  4275f8:	mov	x2, x1
  4275fc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427600:	add	x1, x0, #0x90
  427604:	mov	x0, x4
  427608:	bl	4074c0 <fprintf@plt>
  42760c:	ldr	x0, [sp, #96]
  427610:	ldr	x0, [x0, #272]
  427614:	str	x0, [sp, #96]
  427618:	ldr	x0, [sp, #96]
  42761c:	cmp	x0, #0x0
  427620:	b.ne	4275cc <seat_save+0x22c>  // b.any
  427624:	ldr	x0, [sp, #88]
  427628:	mov	x3, x0
  42762c:	mov	x2, #0x5                   	// #5
  427630:	mov	x1, #0x1                   	// #1
  427634:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427638:	add	x0, x0, #0x98
  42763c:	bl	4081e0 <fwrite@plt>
  427640:	ldr	x0, [sp, #56]
  427644:	ldr	x0, [x0, #48]
  427648:	str	x0, [sp, #96]
  42764c:	b	4276a0 <seat_save+0x300>
  427650:	ldr	x4, [sp, #88]
  427654:	ldr	x0, [sp, #96]
  427658:	ldr	x0, [x0, #40]
  42765c:	ldr	w1, [x0, #8]
  427660:	ldr	x0, [sp, #96]
  427664:	ldr	x0, [x0, #272]
  427668:	cmp	x0, #0x0
  42766c:	b.eq	427678 <seat_save+0x2d8>  // b.none
  427670:	mov	w0, #0x20                  	// #32
  427674:	b	42767c <seat_save+0x2dc>
  427678:	mov	w0, #0xa                   	// #10
  42767c:	mov	w3, w0
  427680:	mov	w2, w1
  427684:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427688:	add	x1, x0, #0xa0
  42768c:	mov	x0, x4
  427690:	bl	4074c0 <fprintf@plt>
  427694:	ldr	x0, [sp, #96]
  427698:	ldr	x0, [x0, #272]
  42769c:	str	x0, [sp, #96]
  4276a0:	ldr	x0, [sp, #96]
  4276a4:	cmp	x0, #0x0
  4276a8:	b.ne	427650 <seat_save+0x2b0>  // b.any
  4276ac:	ldr	x0, [sp, #88]
  4276b0:	bl	408360 <fflush_and_check@plt>
  4276b4:	str	w0, [sp, #64]
  4276b8:	ldr	w0, [sp, #64]
  4276bc:	cmp	w0, #0x0
  4276c0:	b.lt	427710 <seat_save+0x370>  // b.tstop
  4276c4:	ldr	x2, [sp, #80]
  4276c8:	ldr	x0, [sp, #56]
  4276cc:	ldr	x0, [x0, #16]
  4276d0:	mov	x1, x0
  4276d4:	mov	x0, x2
  4276d8:	bl	407370 <rename@plt>
  4276dc:	cmp	w0, #0x0
  4276e0:	b.ge	4276f8 <seat_save+0x358>  // b.tcont
  4276e4:	bl	407960 <__errno_location@plt>
  4276e8:	ldr	w0, [x0]
  4276ec:	neg	w0, w0
  4276f0:	str	w0, [sp, #64]
  4276f4:	b	427714 <seat_save+0x374>
  4276f8:	mov	w19, #0x0                   	// #0
  4276fc:	b	4277cc <seat_save+0x42c>
  427700:	nop
  427704:	b	427714 <seat_save+0x374>
  427708:	nop
  42770c:	b	427714 <seat_save+0x374>
  427710:	nop
  427714:	ldr	x0, [sp, #56]
  427718:	ldr	x0, [x0, #16]
  42771c:	bl	4070c0 <unlink@plt>
  427720:	ldr	x0, [sp, #80]
  427724:	cmp	x0, #0x0
  427728:	b.eq	427734 <seat_save+0x394>  // b.none
  42772c:	ldr	x0, [sp, #80]
  427730:	bl	4070c0 <unlink@plt>
  427734:	mov	w0, #0x3                   	// #3
  427738:	str	w0, [sp, #68]
  42773c:	ldr	w0, [sp, #64]
  427740:	str	w0, [sp, #72]
  427744:	str	wzr, [sp, #76]
  427748:	ldr	w0, [sp, #76]
  42774c:	bl	4083e0 <log_get_max_level_realm@plt>
  427750:	mov	w1, w0
  427754:	ldr	w0, [sp, #68]
  427758:	and	w0, w0, #0x7
  42775c:	cmp	w1, w0
  427760:	b.lt	4277b4 <seat_save+0x414>  // b.tstop
  427764:	ldr	w0, [sp, #76]
  427768:	lsl	w1, w0, #10
  42776c:	ldr	w0, [sp, #68]
  427770:	orr	w7, w1, w0
  427774:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427778:	add	x1, x0, #0xf6b
  42777c:	ldr	x0, [sp, #56]
  427780:	ldr	x0, [x0, #16]
  427784:	mov	x6, x0
  427788:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42778c:	add	x5, x0, #0xa8
  427790:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427794:	add	x4, x0, #0x358
  427798:	mov	w3, #0xa1                  	// #161
  42779c:	mov	x2, x1
  4277a0:	ldr	w1, [sp, #72]
  4277a4:	mov	w0, w7
  4277a8:	bl	407d60 <log_internal_realm@plt>
  4277ac:	mov	w19, w0
  4277b0:	b	4277c8 <seat_save+0x428>
  4277b4:	ldr	w0, [sp, #72]
  4277b8:	cmp	w0, #0x0
  4277bc:	cneg	w0, w0, lt  // lt = tstop
  4277c0:	and	w0, w0, #0xff
  4277c4:	neg	w19, w0
  4277c8:	nop
  4277cc:	add	x0, sp, #0x58
  4277d0:	bl	426e70 <fclosep>
  4277d4:	add	x0, sp, #0x50
  4277d8:	bl	426d34 <freep>
  4277dc:	mov	w1, w19
  4277e0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4277e4:	ldr	x0, [x0, #4024]
  4277e8:	ldr	x2, [sp, #104]
  4277ec:	ldr	x0, [x0]
  4277f0:	eor	x0, x2, x0
  4277f4:	cmp	x0, #0x0
  4277f8:	b.eq	427800 <seat_save+0x460>  // b.none
  4277fc:	bl	407b20 <__stack_chk_fail@plt>
  427800:	mov	w0, w1
  427804:	ldp	x19, x20, [sp, #16]
  427808:	ldp	x21, x22, [sp, #32]
  42780c:	ldp	x29, x30, [sp], #112
  427810:	ret

0000000000427814 <seat_load>:
  427814:	stp	x29, x30, [sp, #-32]!
  427818:	mov	x29, sp
  42781c:	str	x0, [sp, #24]
  427820:	ldr	x0, [sp, #24]
  427824:	cmp	x0, #0x0
  427828:	cset	w0, eq  // eq = none
  42782c:	and	w0, w0, #0xff
  427830:	and	x0, x0, #0xff
  427834:	cmp	x0, #0x0
  427838:	b.eq	427864 <seat_load+0x50>  // b.none
  42783c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427840:	add	x1, x0, #0xf6b
  427844:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427848:	add	x4, x0, #0x368
  42784c:	mov	w3, #0xa5                  	// #165
  427850:	mov	x2, x1
  427854:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427858:	add	x1, x0, #0xfe0
  42785c:	mov	w0, #0x0                   	// #0
  427860:	bl	407650 <log_assert_failed_realm@plt>
  427864:	mov	w0, #0x0                   	// #0
  427868:	ldp	x29, x30, [sp], #32
  42786c:	ret

0000000000427870 <vt_allocate>:
  427870:	stp	x29, x30, [sp, #-96]!
  427874:	mov	x29, sp
  427878:	str	x19, [sp, #16]
  42787c:	str	w0, [sp, #44]
  427880:	adrp	x0, 460000 <wordlist.10364+0x370>
  427884:	ldr	x0, [x0, #4024]
  427888:	ldr	x1, [x0]
  42788c:	str	x1, [sp, #88]
  427890:	mov	x1, #0x0                   	// #0
  427894:	mov	w0, #0xffffffff            	// #-1
  427898:	str	w0, [sp, #60]
  42789c:	ldr	w0, [sp, #44]
  4278a0:	cmp	w0, #0x0
  4278a4:	cset	w0, eq  // eq = none
  4278a8:	and	w0, w0, #0xff
  4278ac:	and	x0, x0, #0xff
  4278b0:	cmp	x0, #0x0
  4278b4:	b.eq	4278e0 <vt_allocate+0x70>  // b.none
  4278b8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4278bc:	add	x1, x0, #0xf6b
  4278c0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4278c4:	add	x4, x0, #0x378
  4278c8:	mov	w3, #0xb0                  	// #176
  4278cc:	mov	x2, x1
  4278d0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4278d4:	add	x1, x0, #0xc8
  4278d8:	mov	w0, #0x0                   	// #0
  4278dc:	bl	407650 <log_assert_failed_realm@plt>
  4278e0:	add	x4, sp, #0x40
  4278e4:	ldr	w3, [sp, #44]
  4278e8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4278ec:	add	x2, x0, #0xd8
  4278f0:	mov	x1, #0x15                  	// #21
  4278f4:	mov	x0, x4
  4278f8:	bl	407460 <snprintf@plt>
  4278fc:	cmp	w0, #0x14
  427900:	cset	w0, hi  // hi = pmore
  427904:	and	w0, w0, #0xff
  427908:	and	x0, x0, #0xff
  42790c:	cmp	x0, #0x0
  427910:	b.eq	42793c <vt_allocate+0xcc>  // b.none
  427914:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427918:	add	x1, x0, #0xf6b
  42791c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427920:	add	x4, x0, #0x378
  427924:	mov	w3, #0xb2                  	// #178
  427928:	mov	x2, x1
  42792c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427930:	add	x1, x0, #0xe8
  427934:	mov	w0, #0x0                   	// #0
  427938:	bl	407650 <log_assert_failed_realm@plt>
  42793c:	add	x0, sp, #0x40
  427940:	mov	w1, #0x102                 	// #258
  427944:	movk	w1, #0x8, lsl #16
  427948:	bl	407d20 <open_terminal@plt>
  42794c:	str	w0, [sp, #60]
  427950:	ldr	w0, [sp, #60]
  427954:	cmp	w0, #0x0
  427958:	b.ge	427964 <vt_allocate+0xf4>  // b.tcont
  42795c:	ldr	w19, [sp, #60]
  427960:	b	427968 <vt_allocate+0xf8>
  427964:	mov	w19, #0x0                   	// #0
  427968:	add	x0, sp, #0x3c
  42796c:	bl	426e4c <closep>
  427970:	mov	w1, w19
  427974:	adrp	x0, 460000 <wordlist.10364+0x370>
  427978:	ldr	x0, [x0, #4024]
  42797c:	ldr	x2, [sp, #88]
  427980:	ldr	x0, [x0]
  427984:	eor	x0, x2, x0
  427988:	cmp	x0, #0x0
  42798c:	b.eq	427994 <vt_allocate+0x124>  // b.none
  427990:	bl	407b20 <__stack_chk_fail@plt>
  427994:	mov	w0, w1
  427998:	ldr	x19, [sp, #16]
  42799c:	ldp	x29, x30, [sp], #96
  4279a0:	ret

00000000004279a4 <seat_preallocate_vts>:
  4279a4:	stp	x29, x30, [sp, #-80]!
  4279a8:	mov	x29, sp
  4279ac:	str	x0, [sp, #24]
  4279b0:	str	wzr, [sp, #44]
  4279b4:	ldr	x0, [sp, #24]
  4279b8:	cmp	x0, #0x0
  4279bc:	cset	w0, eq  // eq = none
  4279c0:	and	w0, w0, #0xff
  4279c4:	and	x0, x0, #0xff
  4279c8:	cmp	x0, #0x0
  4279cc:	b.eq	4279f8 <seat_preallocate_vts+0x54>  // b.none
  4279d0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4279d4:	add	x1, x0, #0xf6b
  4279d8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4279dc:	add	x4, x0, #0x388
  4279e0:	mov	w3, #0xbe                  	// #190
  4279e4:	mov	x2, x1
  4279e8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4279ec:	add	x1, x0, #0xfe0
  4279f0:	mov	w0, #0x0                   	// #0
  4279f4:	bl	407650 <log_assert_failed_realm@plt>
  4279f8:	ldr	x0, [sp, #24]
  4279fc:	ldr	x0, [x0]
  427a00:	cmp	x0, #0x0
  427a04:	cset	w0, eq  // eq = none
  427a08:	and	w0, w0, #0xff
  427a0c:	and	x0, x0, #0xff
  427a10:	cmp	x0, #0x0
  427a14:	b.eq	427a40 <seat_preallocate_vts+0x9c>  // b.none
  427a18:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427a1c:	add	x1, x0, #0xf6b
  427a20:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427a24:	add	x4, x0, #0x388
  427a28:	mov	w3, #0xbf                  	// #191
  427a2c:	mov	x2, x1
  427a30:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427a34:	add	x1, x0, #0x110
  427a38:	mov	w0, #0x0                   	// #0
  427a3c:	bl	407650 <log_assert_failed_realm@plt>
  427a40:	ldr	x0, [sp, #24]
  427a44:	ldr	x0, [x0]
  427a48:	ldr	w0, [x0, #156]
  427a4c:	cmp	w0, #0x0
  427a50:	b.ne	427a5c <seat_preallocate_vts+0xb8>  // b.any
  427a54:	mov	w0, #0x0                   	// #0
  427a58:	b	427bcc <seat_preallocate_vts+0x228>
  427a5c:	ldr	x0, [sp, #24]
  427a60:	bl	428fb0 <seat_has_vts>
  427a64:	and	w0, w0, #0xff
  427a68:	eor	w0, w0, #0x1
  427a6c:	and	w0, w0, #0xff
  427a70:	cmp	w0, #0x0
  427a74:	b.eq	427a80 <seat_preallocate_vts+0xdc>  // b.none
  427a78:	mov	w0, #0x0                   	// #0
  427a7c:	b	427bcc <seat_preallocate_vts+0x228>
  427a80:	mov	w0, #0x7                   	// #7
  427a84:	str	w0, [sp, #52]
  427a88:	str	wzr, [sp, #56]
  427a8c:	str	wzr, [sp, #60]
  427a90:	ldr	w0, [sp, #60]
  427a94:	bl	4083e0 <log_get_max_level_realm@plt>
  427a98:	mov	w1, w0
  427a9c:	ldr	w0, [sp, #52]
  427aa0:	and	w0, w0, #0x7
  427aa4:	cmp	w1, w0
  427aa8:	b.lt	427aec <seat_preallocate_vts+0x148>  // b.tstop
  427aac:	ldr	w0, [sp, #60]
  427ab0:	lsl	w1, w0, #10
  427ab4:	ldr	w0, [sp, #52]
  427ab8:	orr	w6, w1, w0
  427abc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427ac0:	add	x1, x0, #0xf6b
  427ac4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427ac8:	add	x5, x0, #0x120
  427acc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427ad0:	add	x4, x0, #0x3a0
  427ad4:	mov	w3, #0xc7                  	// #199
  427ad8:	mov	x2, x1
  427adc:	ldr	w1, [sp, #56]
  427ae0:	mov	w0, w6
  427ae4:	bl	407d60 <log_internal_realm@plt>
  427ae8:	b	427af4 <seat_preallocate_vts+0x150>
  427aec:	ldr	w0, [sp, #56]
  427af0:	cmp	w0, #0x0
  427af4:	mov	w0, #0x1                   	// #1
  427af8:	str	w0, [sp, #48]
  427afc:	b	427bb0 <seat_preallocate_vts+0x20c>
  427b00:	ldr	w0, [sp, #48]
  427b04:	bl	427870 <vt_allocate>
  427b08:	str	w0, [sp, #64]
  427b0c:	ldr	w0, [sp, #64]
  427b10:	cmp	w0, #0x0
  427b14:	b.ge	427ba4 <seat_preallocate_vts+0x200>  // b.tcont
  427b18:	mov	w0, #0x3                   	// #3
  427b1c:	str	w0, [sp, #68]
  427b20:	ldr	w0, [sp, #64]
  427b24:	str	w0, [sp, #72]
  427b28:	str	wzr, [sp, #76]
  427b2c:	ldr	w0, [sp, #76]
  427b30:	bl	4083e0 <log_get_max_level_realm@plt>
  427b34:	mov	w1, w0
  427b38:	ldr	w0, [sp, #68]
  427b3c:	and	w0, w0, #0x7
  427b40:	cmp	w1, w0
  427b44:	b.lt	427b8c <seat_preallocate_vts+0x1e8>  // b.tstop
  427b48:	ldr	w0, [sp, #76]
  427b4c:	lsl	w1, w0, #10
  427b50:	ldr	w0, [sp, #68]
  427b54:	orr	w7, w1, w0
  427b58:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427b5c:	add	x1, x0, #0xf6b
  427b60:	ldr	w6, [sp, #48]
  427b64:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427b68:	add	x5, x0, #0x138
  427b6c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427b70:	add	x4, x0, #0x3a0
  427b74:	mov	w3, #0xce                  	// #206
  427b78:	mov	x2, x1
  427b7c:	ldr	w1, [sp, #72]
  427b80:	mov	w0, w7
  427b84:	bl	407d60 <log_internal_realm@plt>
  427b88:	b	427ba0 <seat_preallocate_vts+0x1fc>
  427b8c:	ldr	w0, [sp, #72]
  427b90:	cmp	w0, #0x0
  427b94:	cneg	w0, w0, lt  // lt = tstop
  427b98:	and	w0, w0, #0xff
  427b9c:	neg	w0, w0
  427ba0:	str	w0, [sp, #44]
  427ba4:	ldr	w0, [sp, #48]
  427ba8:	add	w0, w0, #0x1
  427bac:	str	w0, [sp, #48]
  427bb0:	ldr	x0, [sp, #24]
  427bb4:	ldr	x0, [x0]
  427bb8:	ldr	w0, [x0, #156]
  427bbc:	ldr	w1, [sp, #48]
  427bc0:	cmp	w1, w0
  427bc4:	b.ls	427b00 <seat_preallocate_vts+0x15c>  // b.plast
  427bc8:	ldr	w0, [sp, #44]
  427bcc:	ldp	x29, x30, [sp], #80
  427bd0:	ret

0000000000427bd4 <seat_apply_acls>:
  427bd4:	stp	x29, x30, [sp, #-48]!
  427bd8:	mov	x29, sp
  427bdc:	str	x0, [sp, #24]
  427be0:	str	x1, [sp, #16]
  427be4:	ldr	x0, [sp, #24]
  427be8:	cmp	x0, #0x0
  427bec:	cset	w0, eq  // eq = none
  427bf0:	and	w0, w0, #0xff
  427bf4:	and	x0, x0, #0xff
  427bf8:	cmp	x0, #0x0
  427bfc:	b.eq	427c28 <seat_apply_acls+0x54>  // b.none
  427c00:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427c04:	add	x1, x0, #0xf6b
  427c08:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427c0c:	add	x4, x0, #0x3b8
  427c10:	mov	w3, #0xd7                  	// #215
  427c14:	mov	x2, x1
  427c18:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427c1c:	add	x1, x0, #0xfe0
  427c20:	mov	w0, #0x0                   	// #0
  427c24:	bl	407650 <log_assert_failed_realm@plt>
  427c28:	ldr	x0, [sp, #24]
  427c2c:	ldr	x6, [x0, #8]
  427c30:	ldr	x0, [sp, #16]
  427c34:	cmp	x0, #0x0
  427c38:	cset	w0, ne  // ne = any
  427c3c:	and	w2, w0, #0xff
  427c40:	ldr	x0, [sp, #16]
  427c44:	cmp	x0, #0x0
  427c48:	b.eq	427c5c <seat_apply_acls+0x88>  // b.none
  427c4c:	ldr	x0, [sp, #16]
  427c50:	ldr	x0, [x0, #40]
  427c54:	ldr	w0, [x0, #8]
  427c58:	b	427c60 <seat_apply_acls+0x8c>
  427c5c:	mov	w0, #0x0                   	// #0
  427c60:	ldr	x1, [sp, #24]
  427c64:	ldr	x1, [x1, #32]
  427c68:	cmp	x1, #0x0
  427c6c:	cset	w1, ne  // ne = any
  427c70:	and	w3, w1, #0xff
  427c74:	ldr	x1, [sp, #24]
  427c78:	ldr	x1, [x1, #32]
  427c7c:	cmp	x1, #0x0
  427c80:	b.eq	427c98 <seat_apply_acls+0xc4>  // b.none
  427c84:	ldr	x1, [sp, #24]
  427c88:	ldr	x1, [x1, #32]
  427c8c:	ldr	x1, [x1, #40]
  427c90:	ldr	w1, [x1, #8]
  427c94:	b	427c9c <seat_apply_acls+0xc8>
  427c98:	mov	w1, #0x0                   	// #0
  427c9c:	mov	w5, w1
  427ca0:	mov	w4, w3
  427ca4:	mov	w3, w0
  427ca8:	mov	w1, #0x0                   	// #0
  427cac:	mov	x0, x6
  427cb0:	bl	43a97c <devnode_acl_all>
  427cb4:	str	w0, [sp, #32]
  427cb8:	ldr	w0, [sp, #32]
  427cbc:	cmp	w0, #0x0
  427cc0:	b.ge	427d4c <seat_apply_acls+0x178>  // b.tcont
  427cc4:	mov	w0, #0x3                   	// #3
  427cc8:	str	w0, [sp, #36]
  427ccc:	ldr	w0, [sp, #32]
  427cd0:	str	w0, [sp, #40]
  427cd4:	str	wzr, [sp, #44]
  427cd8:	ldr	w0, [sp, #44]
  427cdc:	bl	4083e0 <log_get_max_level_realm@plt>
  427ce0:	mov	w1, w0
  427ce4:	ldr	w0, [sp, #36]
  427ce8:	and	w0, w0, #0x7
  427cec:	cmp	w1, w0
  427cf0:	b.lt	427d34 <seat_apply_acls+0x160>  // b.tstop
  427cf4:	ldr	w0, [sp, #44]
  427cf8:	lsl	w1, w0, #10
  427cfc:	ldr	w0, [sp, #36]
  427d00:	orr	w6, w1, w0
  427d04:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427d08:	add	x1, x0, #0xf6b
  427d0c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427d10:	add	x5, x0, #0x158
  427d14:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427d18:	add	x4, x0, #0x3c8
  427d1c:	mov	w3, #0xdf                  	// #223
  427d20:	mov	x2, x1
  427d24:	ldr	w1, [sp, #40]
  427d28:	mov	w0, w6
  427d2c:	bl	407d60 <log_internal_realm@plt>
  427d30:	b	427d50 <seat_apply_acls+0x17c>
  427d34:	ldr	w0, [sp, #40]
  427d38:	cmp	w0, #0x0
  427d3c:	cneg	w0, w0, lt  // lt = tstop
  427d40:	and	w0, w0, #0xff
  427d44:	neg	w0, w0
  427d48:	b	427d50 <seat_apply_acls+0x17c>
  427d4c:	mov	w0, #0x0                   	// #0
  427d50:	ldp	x29, x30, [sp], #48
  427d54:	ret

0000000000427d58 <seat_set_active>:
  427d58:	stp	x29, x30, [sp, #-48]!
  427d5c:	mov	x29, sp
  427d60:	str	x0, [sp, #24]
  427d64:	str	x1, [sp, #16]
  427d68:	ldr	x0, [sp, #24]
  427d6c:	cmp	x0, #0x0
  427d70:	cset	w0, eq  // eq = none
  427d74:	and	w0, w0, #0xff
  427d78:	and	x0, x0, #0xff
  427d7c:	cmp	x0, #0x0
  427d80:	b.eq	427dac <seat_set_active+0x54>  // b.none
  427d84:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427d88:	add	x1, x0, #0xf6b
  427d8c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427d90:	add	x4, x0, #0x3d8
  427d94:	mov	w3, #0xe7                  	// #231
  427d98:	mov	x2, x1
  427d9c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427da0:	add	x1, x0, #0xfe0
  427da4:	mov	w0, #0x0                   	// #0
  427da8:	bl	407650 <log_assert_failed_realm@plt>
  427dac:	ldr	x0, [sp, #16]
  427db0:	cmp	x0, #0x0
  427db4:	cset	w0, ne  // ne = any
  427db8:	and	w0, w0, #0xff
  427dbc:	and	x0, x0, #0xff
  427dc0:	cmp	x0, #0x0
  427dc4:	b.eq	427e14 <seat_set_active+0xbc>  // b.none
  427dc8:	ldr	x0, [sp, #16]
  427dcc:	ldr	x0, [x0, #136]
  427dd0:	ldr	x1, [sp, #24]
  427dd4:	cmp	x1, x0
  427dd8:	cset	w0, ne  // ne = any
  427ddc:	and	w0, w0, #0xff
  427de0:	and	x0, x0, #0xff
  427de4:	cmp	x0, #0x0
  427de8:	b.eq	427e14 <seat_set_active+0xbc>  // b.none
  427dec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  427df0:	add	x1, x0, #0xf6b
  427df4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427df8:	add	x4, x0, #0x3d8
  427dfc:	mov	w3, #0xe8                  	// #232
  427e00:	mov	x2, x1
  427e04:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427e08:	add	x1, x0, #0x178
  427e0c:	mov	w0, #0x0                   	// #0
  427e10:	bl	407650 <log_assert_failed_realm@plt>
  427e14:	ldr	x0, [sp, #24]
  427e18:	ldr	x0, [x0, #32]
  427e1c:	ldr	x1, [sp, #16]
  427e20:	cmp	x1, x0
  427e24:	b.ne	427e30 <seat_set_active+0xd8>  // b.any
  427e28:	mov	w0, #0x0                   	// #0
  427e2c:	b	427f64 <seat_set_active+0x20c>
  427e30:	ldr	x0, [sp, #24]
  427e34:	ldr	x0, [x0, #32]
  427e38:	str	x0, [sp, #40]
  427e3c:	ldr	x0, [sp, #24]
  427e40:	ldr	x1, [sp, #16]
  427e44:	str	x1, [x0, #32]
  427e48:	ldr	x0, [sp, #40]
  427e4c:	cmp	x0, #0x0
  427e50:	b.eq	427e70 <seat_set_active+0x118>  // b.none
  427e54:	ldr	x0, [sp, #40]
  427e58:	bl	42e844 <session_device_pause_all>
  427e5c:	mov	x2, #0x0                   	// #0
  427e60:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427e64:	add	x1, x0, #0x198
  427e68:	ldr	x0, [sp, #40]
  427e6c:	bl	42c8a8 <session_send_changed>
  427e70:	ldr	x1, [sp, #40]
  427e74:	ldr	x0, [sp, #24]
  427e78:	bl	427bd4 <seat_apply_acls>
  427e7c:	ldr	x0, [sp, #16]
  427e80:	cmp	x0, #0x0
  427e84:	b.eq	427ebc <seat_set_active+0x164>  // b.none
  427e88:	ldr	x0, [sp, #16]
  427e8c:	ldrb	w0, [x0, #209]
  427e90:	and	w0, w0, #0x2
  427e94:	and	w0, w0, #0xff
  427e98:	cmp	w0, #0x0
  427e9c:	b.eq	427ebc <seat_set_active+0x164>  // b.none
  427ea0:	mov	x2, #0x0                   	// #0
  427ea4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427ea8:	add	x1, x0, #0x198
  427eac:	ldr	x0, [sp, #16]
  427eb0:	bl	42c8a8 <session_send_changed>
  427eb4:	ldr	x0, [sp, #16]
  427eb8:	bl	42e730 <session_device_resume_all>
  427ebc:	ldr	x0, [sp, #16]
  427ec0:	cmp	x0, #0x0
  427ec4:	b.eq	427ee0 <seat_set_active+0x188>  // b.none
  427ec8:	ldr	x0, [sp, #16]
  427ecc:	ldrb	w0, [x0, #209]
  427ed0:	and	w0, w0, #0x2
  427ed4:	and	w0, w0, #0xff
  427ed8:	cmp	w0, #0x0
  427edc:	b.eq	427ef4 <seat_set_active+0x19c>  // b.none
  427ee0:	mov	x2, #0x0                   	// #0
  427ee4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  427ee8:	add	x1, x0, #0x1a0
  427eec:	ldr	x0, [sp, #24]
  427ef0:	bl	426960 <seat_send_changed>
  427ef4:	ldr	x0, [sp, #24]
  427ef8:	bl	4273a0 <seat_save>
  427efc:	ldr	x0, [sp, #16]
  427f00:	cmp	x0, #0x0
  427f04:	b.eq	427f1c <seat_set_active+0x1c4>  // b.none
  427f08:	ldr	x0, [sp, #16]
  427f0c:	bl	42fde0 <session_save>
  427f10:	ldr	x0, [sp, #16]
  427f14:	ldr	x0, [x0, #40]
  427f18:	bl	437210 <user_save>
  427f1c:	ldr	x0, [sp, #40]
  427f20:	cmp	x0, #0x0
  427f24:	b.eq	427f60 <seat_set_active+0x208>  // b.none
  427f28:	ldr	x0, [sp, #40]
  427f2c:	bl	42fde0 <session_save>
  427f30:	ldr	x0, [sp, #16]
  427f34:	cmp	x0, #0x0
  427f38:	b.eq	427f54 <seat_set_active+0x1fc>  // b.none
  427f3c:	ldr	x0, [sp, #16]
  427f40:	ldr	x1, [x0, #40]
  427f44:	ldr	x0, [sp, #40]
  427f48:	ldr	x0, [x0, #40]
  427f4c:	cmp	x1, x0
  427f50:	b.eq	427f60 <seat_set_active+0x208>  // b.none
  427f54:	ldr	x0, [sp, #40]
  427f58:	ldr	x0, [x0, #40]
  427f5c:	bl	437210 <user_save>
  427f60:	mov	w0, #0x0                   	// #0
  427f64:	ldp	x29, x30, [sp], #48
  427f68:	ret

0000000000427f6c <seat_switch_to>:
  427f6c:	stp	x29, x30, [sp, #-32]!
  427f70:	mov	x29, sp
  427f74:	str	x0, [sp, #24]
  427f78:	str	w1, [sp, #20]
  427f7c:	ldr	w0, [sp, #20]
  427f80:	cmp	w0, #0x0
  427f84:	b.ne	427f90 <seat_switch_to+0x24>  // b.any
  427f88:	mov	w0, #0xffffffea            	// #-22
  427f8c:	b	428014 <seat_switch_to+0xa8>
  427f90:	ldr	w1, [sp, #20]
  427f94:	ldr	x0, [sp, #24]
  427f98:	ldr	x0, [x0, #64]
  427f9c:	cmp	x1, x0
  427fa0:	b.cs	427fc4 <seat_switch_to+0x58>  // b.hs, b.nlast
  427fa4:	ldr	x0, [sp, #24]
  427fa8:	ldr	x1, [x0, #56]
  427fac:	ldr	w0, [sp, #20]
  427fb0:	lsl	x0, x0, #3
  427fb4:	add	x0, x1, x0
  427fb8:	ldr	x0, [x0]
  427fbc:	cmp	x0, #0x0
  427fc0:	b.ne	427ff8 <seat_switch_to+0x8c>  // b.any
  427fc4:	ldr	x0, [sp, #24]
  427fc8:	bl	428fb0 <seat_has_vts>
  427fcc:	and	w0, w0, #0xff
  427fd0:	cmp	w0, #0x0
  427fd4:	b.eq	427ff0 <seat_switch_to+0x84>  // b.none
  427fd8:	ldr	w0, [sp, #20]
  427fdc:	cmp	w0, #0x3f
  427fe0:	b.hi	427ff0 <seat_switch_to+0x84>  // b.pmore
  427fe4:	ldr	w0, [sp, #20]
  427fe8:	bl	407820 <chvt@plt>
  427fec:	b	428014 <seat_switch_to+0xa8>
  427ff0:	mov	w0, #0xffffffea            	// #-22
  427ff4:	b	428014 <seat_switch_to+0xa8>
  427ff8:	ldr	x0, [sp, #24]
  427ffc:	ldr	x1, [x0, #56]
  428000:	ldr	w0, [sp, #20]
  428004:	lsl	x0, x0, #3
  428008:	add	x0, x1, x0
  42800c:	ldr	x0, [x0]
  428010:	bl	431470 <session_activate>
  428014:	ldp	x29, x30, [sp], #32
  428018:	ret

000000000042801c <seat_switch_to_next>:
  42801c:	stp	x29, x30, [sp, #-48]!
  428020:	mov	x29, sp
  428024:	str	x0, [sp, #24]
  428028:	ldr	x0, [sp, #24]
  42802c:	ldr	x0, [x0, #64]
  428030:	cmp	x0, #0x0
  428034:	b.ne	428040 <seat_switch_to_next+0x24>  // b.any
  428038:	mov	w0, #0xffffffea            	// #-22
  42803c:	b	428158 <seat_switch_to_next+0x13c>
  428040:	mov	w0, #0x1                   	// #1
  428044:	str	w0, [sp, #40]
  428048:	ldr	x0, [sp, #24]
  42804c:	ldr	x0, [x0, #32]
  428050:	cmp	x0, #0x0
  428054:	b.eq	42807c <seat_switch_to_next+0x60>  // b.none
  428058:	ldr	x0, [sp, #24]
  42805c:	ldr	x0, [x0, #32]
  428060:	ldr	w0, [x0, #16]
  428064:	cmp	w0, #0x0
  428068:	b.eq	42807c <seat_switch_to_next+0x60>  // b.none
  42806c:	ldr	x0, [sp, #24]
  428070:	ldr	x0, [x0, #32]
  428074:	ldr	w0, [x0, #16]
  428078:	str	w0, [sp, #40]
  42807c:	ldr	w0, [sp, #40]
  428080:	add	w0, w0, #0x1
  428084:	str	w0, [sp, #44]
  428088:	b	4280d8 <seat_switch_to_next+0xbc>
  42808c:	ldr	x0, [sp, #24]
  428090:	ldr	x1, [x0, #56]
  428094:	ldr	w0, [sp, #44]
  428098:	lsl	x0, x0, #3
  42809c:	add	x0, x1, x0
  4280a0:	ldr	x0, [x0]
  4280a4:	cmp	x0, #0x0
  4280a8:	b.eq	4280cc <seat_switch_to_next+0xb0>  // b.none
  4280ac:	ldr	x0, [sp, #24]
  4280b0:	ldr	x1, [x0, #56]
  4280b4:	ldr	w0, [sp, #44]
  4280b8:	lsl	x0, x0, #3
  4280bc:	add	x0, x1, x0
  4280c0:	ldr	x0, [x0]
  4280c4:	bl	431470 <session_activate>
  4280c8:	b	428158 <seat_switch_to_next+0x13c>
  4280cc:	ldr	w0, [sp, #44]
  4280d0:	add	w0, w0, #0x1
  4280d4:	str	w0, [sp, #44]
  4280d8:	ldr	w1, [sp, #44]
  4280dc:	ldr	x0, [sp, #24]
  4280e0:	ldr	x0, [x0, #64]
  4280e4:	cmp	x1, x0
  4280e8:	b.cc	42808c <seat_switch_to_next+0x70>  // b.lo, b.ul, b.last
  4280ec:	mov	w0, #0x1                   	// #1
  4280f0:	str	w0, [sp, #44]
  4280f4:	b	428144 <seat_switch_to_next+0x128>
  4280f8:	ldr	x0, [sp, #24]
  4280fc:	ldr	x1, [x0, #56]
  428100:	ldr	w0, [sp, #44]
  428104:	lsl	x0, x0, #3
  428108:	add	x0, x1, x0
  42810c:	ldr	x0, [x0]
  428110:	cmp	x0, #0x0
  428114:	b.eq	428138 <seat_switch_to_next+0x11c>  // b.none
  428118:	ldr	x0, [sp, #24]
  42811c:	ldr	x1, [x0, #56]
  428120:	ldr	w0, [sp, #44]
  428124:	lsl	x0, x0, #3
  428128:	add	x0, x1, x0
  42812c:	ldr	x0, [x0]
  428130:	bl	431470 <session_activate>
  428134:	b	428158 <seat_switch_to_next+0x13c>
  428138:	ldr	w0, [sp, #44]
  42813c:	add	w0, w0, #0x1
  428140:	str	w0, [sp, #44]
  428144:	ldr	w1, [sp, #44]
  428148:	ldr	w0, [sp, #40]
  42814c:	cmp	w1, w0
  428150:	b.cc	4280f8 <seat_switch_to_next+0xdc>  // b.lo, b.ul, b.last
  428154:	mov	w0, #0xffffffea            	// #-22
  428158:	ldp	x29, x30, [sp], #48
  42815c:	ret

0000000000428160 <seat_switch_to_previous>:
  428160:	stp	x29, x30, [sp, #-48]!
  428164:	mov	x29, sp
  428168:	str	x0, [sp, #24]
  42816c:	ldr	x0, [sp, #24]
  428170:	ldr	x0, [x0, #64]
  428174:	cmp	x0, #0x0
  428178:	b.ne	428184 <seat_switch_to_previous+0x24>  // b.any
  42817c:	mov	w0, #0xffffffea            	// #-22
  428180:	b	42829c <seat_switch_to_previous+0x13c>
  428184:	mov	w0, #0x1                   	// #1
  428188:	str	w0, [sp, #40]
  42818c:	ldr	x0, [sp, #24]
  428190:	ldr	x0, [x0, #32]
  428194:	cmp	x0, #0x0
  428198:	b.eq	4281c0 <seat_switch_to_previous+0x60>  // b.none
  42819c:	ldr	x0, [sp, #24]
  4281a0:	ldr	x0, [x0, #32]
  4281a4:	ldr	w0, [x0, #16]
  4281a8:	cmp	w0, #0x0
  4281ac:	b.eq	4281c0 <seat_switch_to_previous+0x60>  // b.none
  4281b0:	ldr	x0, [sp, #24]
  4281b4:	ldr	x0, [x0, #32]
  4281b8:	ldr	w0, [x0, #16]
  4281bc:	str	w0, [sp, #40]
  4281c0:	ldr	w0, [sp, #40]
  4281c4:	sub	w0, w0, #0x1
  4281c8:	str	w0, [sp, #44]
  4281cc:	b	42821c <seat_switch_to_previous+0xbc>
  4281d0:	ldr	x0, [sp, #24]
  4281d4:	ldr	x1, [x0, #56]
  4281d8:	ldr	w0, [sp, #44]
  4281dc:	lsl	x0, x0, #3
  4281e0:	add	x0, x1, x0
  4281e4:	ldr	x0, [x0]
  4281e8:	cmp	x0, #0x0
  4281ec:	b.eq	428210 <seat_switch_to_previous+0xb0>  // b.none
  4281f0:	ldr	x0, [sp, #24]
  4281f4:	ldr	x1, [x0, #56]
  4281f8:	ldr	w0, [sp, #44]
  4281fc:	lsl	x0, x0, #3
  428200:	add	x0, x1, x0
  428204:	ldr	x0, [x0]
  428208:	bl	431470 <session_activate>
  42820c:	b	42829c <seat_switch_to_previous+0x13c>
  428210:	ldr	w0, [sp, #44]
  428214:	sub	w0, w0, #0x1
  428218:	str	w0, [sp, #44]
  42821c:	ldr	w0, [sp, #44]
  428220:	cmp	w0, #0x0
  428224:	b.ne	4281d0 <seat_switch_to_previous+0x70>  // b.any
  428228:	ldr	x0, [sp, #24]
  42822c:	ldr	x0, [x0, #64]
  428230:	sub	w0, w0, #0x1
  428234:	str	w0, [sp, #44]
  428238:	b	428288 <seat_switch_to_previous+0x128>
  42823c:	ldr	x0, [sp, #24]
  428240:	ldr	x1, [x0, #56]
  428244:	ldr	w0, [sp, #44]
  428248:	lsl	x0, x0, #3
  42824c:	add	x0, x1, x0
  428250:	ldr	x0, [x0]
  428254:	cmp	x0, #0x0
  428258:	b.eq	42827c <seat_switch_to_previous+0x11c>  // b.none
  42825c:	ldr	x0, [sp, #24]
  428260:	ldr	x1, [x0, #56]
  428264:	ldr	w0, [sp, #44]
  428268:	lsl	x0, x0, #3
  42826c:	add	x0, x1, x0
  428270:	ldr	x0, [x0]
  428274:	bl	431470 <session_activate>
  428278:	b	42829c <seat_switch_to_previous+0x13c>
  42827c:	ldr	w0, [sp, #44]
  428280:	sub	w0, w0, #0x1
  428284:	str	w0, [sp, #44]
  428288:	ldr	w1, [sp, #44]
  42828c:	ldr	w0, [sp, #40]
  428290:	cmp	w1, w0
  428294:	b.hi	42823c <seat_switch_to_previous+0xdc>  // b.pmore
  428298:	mov	w0, #0xffffffea            	// #-22
  42829c:	ldp	x29, x30, [sp], #48
  4282a0:	ret

00000000004282a4 <seat_active_vt_changed>:
  4282a4:	stp	x29, x30, [sp, #-64]!
  4282a8:	mov	x29, sp
  4282ac:	str	x0, [sp, #24]
  4282b0:	str	w1, [sp, #20]
  4282b4:	str	xzr, [sp, #56]
  4282b8:	ldr	x0, [sp, #24]
  4282bc:	cmp	x0, #0x0
  4282c0:	cset	w0, eq  // eq = none
  4282c4:	and	w0, w0, #0xff
  4282c8:	and	x0, x0, #0xff
  4282cc:	cmp	x0, #0x0
  4282d0:	b.eq	4282fc <seat_active_vt_changed+0x58>  // b.none
  4282d4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4282d8:	add	x1, x0, #0xf6b
  4282dc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4282e0:	add	x4, x0, #0x3e8
  4282e4:	mov	w3, #0x14e                 	// #334
  4282e8:	mov	x2, x1
  4282ec:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4282f0:	add	x1, x0, #0xfe0
  4282f4:	mov	w0, #0x0                   	// #0
  4282f8:	bl	407650 <log_assert_failed_realm@plt>
  4282fc:	ldr	w0, [sp, #20]
  428300:	cmp	w0, #0x0
  428304:	cset	w0, eq  // eq = none
  428308:	and	w0, w0, #0xff
  42830c:	and	x0, x0, #0xff
  428310:	cmp	x0, #0x0
  428314:	b.eq	428340 <seat_active_vt_changed+0x9c>  // b.none
  428318:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42831c:	add	x1, x0, #0xf6b
  428320:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428324:	add	x4, x0, #0x3e8
  428328:	mov	w3, #0x14f                 	// #335
  42832c:	mov	x2, x1
  428330:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428334:	add	x1, x0, #0xc8
  428338:	mov	w0, #0x0                   	// #0
  42833c:	bl	407650 <log_assert_failed_realm@plt>
  428340:	ldr	x0, [sp, #24]
  428344:	bl	428fb0 <seat_has_vts>
  428348:	and	w0, w0, #0xff
  42834c:	eor	w0, w0, #0x1
  428350:	and	w0, w0, #0xff
  428354:	cmp	w0, #0x0
  428358:	b.eq	428364 <seat_active_vt_changed+0xc0>  // b.none
  42835c:	mov	w0, #0xffffffea            	// #-22
  428360:	b	4284bc <seat_active_vt_changed+0x218>
  428364:	mov	w0, #0x7                   	// #7
  428368:	str	w0, [sp, #32]
  42836c:	str	wzr, [sp, #36]
  428370:	str	wzr, [sp, #40]
  428374:	ldr	w0, [sp, #40]
  428378:	bl	4083e0 <log_get_max_level_realm@plt>
  42837c:	mov	w1, w0
  428380:	ldr	w0, [sp, #32]
  428384:	and	w0, w0, #0x7
  428388:	cmp	w1, w0
  42838c:	b.lt	4283d4 <seat_active_vt_changed+0x130>  // b.tstop
  428390:	ldr	w0, [sp, #40]
  428394:	lsl	w1, w0, #10
  428398:	ldr	w0, [sp, #32]
  42839c:	orr	w7, w1, w0
  4283a0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4283a4:	add	x1, x0, #0xf6b
  4283a8:	ldr	w6, [sp, #20]
  4283ac:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4283b0:	add	x5, x0, #0x1b0
  4283b4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4283b8:	add	x4, x0, #0x400
  4283bc:	mov	w3, #0x154                 	// #340
  4283c0:	mov	x2, x1
  4283c4:	ldr	w1, [sp, #36]
  4283c8:	mov	w0, w7
  4283cc:	bl	407d60 <log_internal_realm@plt>
  4283d0:	b	4283dc <seat_active_vt_changed+0x138>
  4283d4:	ldr	w0, [sp, #36]
  4283d8:	cmp	w0, #0x0
  4283dc:	ldr	x0, [sp, #24]
  4283e0:	ldr	x0, [x0, #48]
  4283e4:	str	x0, [sp, #48]
  4283e8:	b	428438 <seat_active_vt_changed+0x194>
  4283ec:	ldr	x0, [sp, #48]
  4283f0:	ldr	w0, [x0, #144]
  4283f4:	ldr	w1, [sp, #20]
  4283f8:	cmp	w1, w0
  4283fc:	b.ne	42842c <seat_active_vt_changed+0x188>  // b.any
  428400:	ldr	x0, [sp, #48]
  428404:	ldrb	w0, [x0, #209]
  428408:	ubfx	x0, x0, #2, #1
  42840c:	and	w0, w0, #0xff
  428410:	eor	w0, w0, #0x1
  428414:	and	w0, w0, #0xff
  428418:	cmp	w0, #0x0
  42841c:	b.eq	42842c <seat_active_vt_changed+0x188>  // b.none
  428420:	ldr	x0, [sp, #48]
  428424:	str	x0, [sp, #56]
  428428:	b	428444 <seat_active_vt_changed+0x1a0>
  42842c:	ldr	x0, [sp, #48]
  428430:	ldr	x0, [x0, #272]
  428434:	str	x0, [sp, #48]
  428438:	ldr	x0, [sp, #48]
  42843c:	cmp	x0, #0x0
  428440:	b.ne	4283ec <seat_active_vt_changed+0x148>  // b.any
  428444:	ldr	x0, [sp, #56]
  428448:	cmp	x0, #0x0
  42844c:	b.ne	428498 <seat_active_vt_changed+0x1f4>  // b.any
  428450:	ldr	x0, [sp, #24]
  428454:	ldr	x0, [x0, #48]
  428458:	str	x0, [sp, #48]
  42845c:	b	42848c <seat_active_vt_changed+0x1e8>
  428460:	ldr	x0, [sp, #48]
  428464:	ldr	w0, [x0, #144]
  428468:	ldr	w1, [sp, #20]
  42846c:	cmp	w1, w0
  428470:	b.ne	428480 <seat_active_vt_changed+0x1dc>  // b.any
  428474:	ldr	x0, [sp, #48]
  428478:	str	x0, [sp, #56]
  42847c:	b	428498 <seat_active_vt_changed+0x1f4>
  428480:	ldr	x0, [sp, #48]
  428484:	ldr	x0, [x0, #272]
  428488:	str	x0, [sp, #48]
  42848c:	ldr	x0, [sp, #48]
  428490:	cmp	x0, #0x0
  428494:	b.ne	428460 <seat_active_vt_changed+0x1bc>  // b.any
  428498:	ldr	x1, [sp, #56]
  42849c:	ldr	x0, [sp, #24]
  4284a0:	bl	427d58 <seat_set_active>
  4284a4:	str	w0, [sp, #44]
  4284a8:	ldr	x0, [sp, #24]
  4284ac:	ldr	x0, [x0]
  4284b0:	ldr	w1, [sp, #20]
  4284b4:	bl	412998 <manager_spawn_autovt>
  4284b8:	ldr	w0, [sp, #44]
  4284bc:	ldp	x29, x30, [sp], #64
  4284c0:	ret

00000000004284c4 <seat_read_active_vt>:
  4284c4:	stp	x29, x30, [sp, #-176]!
  4284c8:	mov	x29, sp
  4284cc:	stp	x19, x20, [sp, #16]
  4284d0:	str	x0, [sp, #40]
  4284d4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4284d8:	ldr	x0, [x0, #4024]
  4284dc:	ldr	x1, [x0]
  4284e0:	str	x1, [sp, #168]
  4284e4:	mov	x1, #0x0                   	// #0
  4284e8:	ldr	x0, [sp, #40]
  4284ec:	cmp	x0, #0x0
  4284f0:	cset	w0, eq  // eq = none
  4284f4:	and	w0, w0, #0xff
  4284f8:	and	x0, x0, #0xff
  4284fc:	cmp	x0, #0x0
  428500:	b.eq	42852c <seat_read_active_vt+0x68>  // b.none
  428504:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428508:	add	x1, x0, #0xf6b
  42850c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428510:	add	x4, x0, #0x418
  428514:	mov	w3, #0x173                 	// #371
  428518:	mov	x2, x1
  42851c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428520:	add	x1, x0, #0xfe0
  428524:	mov	w0, #0x0                   	// #0
  428528:	bl	407650 <log_assert_failed_realm@plt>
  42852c:	ldr	x0, [sp, #40]
  428530:	bl	428fb0 <seat_has_vts>
  428534:	and	w0, w0, #0xff
  428538:	eor	w0, w0, #0x1
  42853c:	and	w0, w0, #0xff
  428540:	cmp	w0, #0x0
  428544:	b.eq	428550 <seat_read_active_vt+0x8c>  // b.none
  428548:	mov	w0, #0x0                   	// #0
  42854c:	b	4287a0 <seat_read_active_vt+0x2dc>
  428550:	ldr	x0, [sp, #40]
  428554:	ldr	x0, [x0]
  428558:	ldr	w0, [x0, #152]
  42855c:	mov	w2, #0x0                   	// #0
  428560:	mov	x1, #0x0                   	// #0
  428564:	bl	4071d0 <lseek64@plt>
  428568:	cmp	x0, #0x0
  42856c:	b.ge	4285fc <seat_read_active_vt+0x138>  // b.tcont
  428570:	mov	w0, #0x3                   	// #3
  428574:	str	w0, [sp, #84]
  428578:	bl	407960 <__errno_location@plt>
  42857c:	ldr	w0, [x0]
  428580:	str	w0, [sp, #88]
  428584:	str	wzr, [sp, #92]
  428588:	ldr	w0, [sp, #92]
  42858c:	bl	4083e0 <log_get_max_level_realm@plt>
  428590:	mov	w1, w0
  428594:	ldr	w0, [sp, #84]
  428598:	and	w0, w0, #0x7
  42859c:	cmp	w1, w0
  4285a0:	b.lt	4285e4 <seat_read_active_vt+0x120>  // b.tstop
  4285a4:	ldr	w0, [sp, #92]
  4285a8:	lsl	w1, w0, #10
  4285ac:	ldr	w0, [sp, #84]
  4285b0:	orr	w6, w1, w0
  4285b4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4285b8:	add	x1, x0, #0xf6b
  4285bc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4285c0:	add	x5, x0, #0x1c8
  4285c4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4285c8:	add	x4, x0, #0x430
  4285cc:	mov	w3, #0x179                 	// #377
  4285d0:	mov	x2, x1
  4285d4:	ldr	w1, [sp, #88]
  4285d8:	mov	w0, w6
  4285dc:	bl	407d60 <log_internal_realm@plt>
  4285e0:	b	4287a0 <seat_read_active_vt+0x2dc>
  4285e4:	ldr	w0, [sp, #88]
  4285e8:	cmp	w0, #0x0
  4285ec:	cneg	w0, w0, lt  // lt = tstop
  4285f0:	and	w0, w0, #0xff
  4285f4:	neg	w0, w0
  4285f8:	b	4287a0 <seat_read_active_vt+0x2dc>
  4285fc:	ldr	x0, [sp, #40]
  428600:	ldr	x0, [x0]
  428604:	ldr	w0, [x0, #152]
  428608:	add	x1, sp, #0x68
  42860c:	mov	x2, #0x3f                  	// #63
  428610:	bl	4079d0 <read@plt>
  428614:	str	x0, [sp, #96]
  428618:	ldr	x0, [sp, #96]
  42861c:	cmp	x0, #0x0
  428620:	b.gt	4286e4 <seat_read_active_vt+0x220>
  428624:	mov	w0, #0x3                   	// #3
  428628:	str	w0, [sp, #72]
  42862c:	str	wzr, [sp, #76]
  428630:	str	wzr, [sp, #80]
  428634:	ldr	w0, [sp, #80]
  428638:	bl	4083e0 <log_get_max_level_realm@plt>
  42863c:	mov	w1, w0
  428640:	ldr	w0, [sp, #72]
  428644:	and	w0, w0, #0x7
  428648:	cmp	w1, w0
  42864c:	b.lt	4286b8 <seat_read_active_vt+0x1f4>  // b.tstop
  428650:	ldr	w0, [sp, #80]
  428654:	lsl	w1, w0, #10
  428658:	ldr	w0, [sp, #72]
  42865c:	orr	w19, w1, w0
  428660:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428664:	add	x20, x0, #0xf6b
  428668:	ldr	x0, [sp, #96]
  42866c:	cmp	x0, #0x0
  428670:	b.ge	428684 <seat_read_active_vt+0x1c0>  // b.tcont
  428674:	bl	407960 <__errno_location@plt>
  428678:	ldr	w0, [x0]
  42867c:	bl	426e28 <strerror_safe>
  428680:	b	42868c <seat_read_active_vt+0x1c8>
  428684:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428688:	add	x0, x0, #0x1f0
  42868c:	mov	x6, x0
  428690:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428694:	add	x5, x0, #0x1f8
  428698:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42869c:	add	x4, x0, #0x430
  4286a0:	mov	w3, #0x17d                 	// #381
  4286a4:	mov	x2, x20
  4286a8:	ldr	w1, [sp, #76]
  4286ac:	mov	w0, w19
  4286b0:	bl	407d60 <log_internal_realm@plt>
  4286b4:	b	4286c0 <seat_read_active_vt+0x1fc>
  4286b8:	ldr	w0, [sp, #76]
  4286bc:	cmp	w0, #0x0
  4286c0:	ldr	x0, [sp, #96]
  4286c4:	cmp	x0, #0x0
  4286c8:	b.ge	4286dc <seat_read_active_vt+0x218>  // b.tcont
  4286cc:	bl	407960 <__errno_location@plt>
  4286d0:	ldr	w0, [x0]
  4286d4:	neg	w0, w0
  4286d8:	b	4287a0 <seat_read_active_vt+0x2dc>
  4286dc:	mov	w0, #0xfffffffb            	// #-5
  4286e0:	b	4287a0 <seat_read_active_vt+0x2dc>
  4286e4:	ldr	x0, [sp, #96]
  4286e8:	add	x1, sp, #0x68
  4286ec:	strb	wzr, [x1, x0]
  4286f0:	add	x0, sp, #0x68
  4286f4:	bl	407640 <truncate_nl@plt>
  4286f8:	add	x0, sp, #0x68
  4286fc:	bl	407c90 <vtnr_from_tty@plt>
  428700:	str	w0, [sp, #56]
  428704:	ldr	w0, [sp, #56]
  428708:	cmp	w0, #0x0
  42870c:	b.ge	428790 <seat_read_active_vt+0x2cc>  // b.tcont
  428710:	mov	w0, #0x3                   	// #3
  428714:	str	w0, [sp, #60]
  428718:	ldr	w0, [sp, #56]
  42871c:	str	w0, [sp, #64]
  428720:	str	wzr, [sp, #68]
  428724:	ldr	w0, [sp, #68]
  428728:	bl	4083e0 <log_get_max_level_realm@plt>
  42872c:	mov	w1, w0
  428730:	ldr	w0, [sp, #60]
  428734:	and	w0, w0, #0x7
  428738:	cmp	w1, w0
  42873c:	b.lt	428780 <seat_read_active_vt+0x2bc>  // b.tstop
  428740:	ldr	w0, [sp, #68]
  428744:	lsl	w1, w0, #10
  428748:	ldr	w0, [sp, #60]
  42874c:	orr	w6, w1, w0
  428750:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428754:	add	x1, x0, #0xf6b
  428758:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42875c:	add	x5, x0, #0x220
  428760:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428764:	add	x4, x0, #0x430
  428768:	mov	w3, #0x186                 	// #390
  42876c:	mov	x2, x1
  428770:	ldr	w1, [sp, #64]
  428774:	mov	w0, w6
  428778:	bl	407d60 <log_internal_realm@plt>
  42877c:	b	428788 <seat_read_active_vt+0x2c4>
  428780:	ldr	w0, [sp, #64]
  428784:	cmp	w0, #0x0
  428788:	mov	w0, #0xfffffffb            	// #-5
  42878c:	b	4287a0 <seat_read_active_vt+0x2dc>
  428790:	ldr	w0, [sp, #56]
  428794:	mov	w1, w0
  428798:	ldr	x0, [sp, #40]
  42879c:	bl	4282a4 <seat_active_vt_changed>
  4287a0:	mov	w1, w0
  4287a4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4287a8:	ldr	x0, [x0, #4024]
  4287ac:	ldr	x2, [sp, #168]
  4287b0:	ldr	x0, [x0]
  4287b4:	eor	x0, x2, x0
  4287b8:	cmp	x0, #0x0
  4287bc:	b.eq	4287c4 <seat_read_active_vt+0x300>  // b.none
  4287c0:	bl	407b20 <__stack_chk_fail@plt>
  4287c4:	mov	w0, w1
  4287c8:	ldp	x19, x20, [sp, #16]
  4287cc:	ldp	x29, x30, [sp], #176
  4287d0:	ret

00000000004287d4 <seat_start>:
  4287d4:	sub	sp, sp, #0x40
  4287d8:	stp	x29, x30, [sp, #32]
  4287dc:	add	x29, sp, #0x20
  4287e0:	str	x0, [sp, #56]
  4287e4:	ldr	x0, [sp, #56]
  4287e8:	cmp	x0, #0x0
  4287ec:	cset	w0, eq  // eq = none
  4287f0:	and	w0, w0, #0xff
  4287f4:	and	x0, x0, #0xff
  4287f8:	cmp	x0, #0x0
  4287fc:	b.eq	428828 <seat_start+0x54>  // b.none
  428800:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428804:	add	x1, x0, #0xf6b
  428808:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42880c:	add	x4, x0, #0x448
  428810:	mov	w3, #0x18e                 	// #398
  428814:	mov	x2, x1
  428818:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42881c:	add	x1, x0, #0xfe0
  428820:	mov	w0, #0x0                   	// #0
  428824:	bl	407650 <log_assert_failed_realm@plt>
  428828:	ldr	x0, [sp, #56]
  42882c:	ldrb	w0, [x0, #72]
  428830:	and	w0, w0, #0x2
  428834:	and	w0, w0, #0xff
  428838:	cmp	w0, #0x0
  42883c:	b.eq	428848 <seat_start+0x74>  // b.none
  428840:	mov	w0, #0x0                   	// #0
  428844:	b	4288dc <seat_start+0x108>
  428848:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42884c:	add	x1, x0, #0xf6b
  428850:	ldr	x0, [sp, #56]
  428854:	ldr	x2, [x0, #8]
  428858:	ldr	x0, [sp, #56]
  42885c:	ldr	x0, [x0, #8]
  428860:	str	xzr, [sp, #16]
  428864:	str	x0, [sp, #8]
  428868:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42886c:	add	x0, x0, #0x298
  428870:	str	x0, [sp]
  428874:	mov	x7, x2
  428878:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42887c:	add	x6, x0, #0x258
  428880:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428884:	add	x5, x0, #0x268
  428888:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42888c:	add	x4, x0, #0x458
  428890:	mov	w3, #0x193                 	// #403
  428894:	mov	x2, x1
  428898:	mov	w1, #0x0                   	// #0
  42889c:	mov	w0, #0x6                   	// #6
  4288a0:	bl	407cd0 <log_struct_internal@plt>
  4288a4:	ldr	x0, [sp, #56]
  4288a8:	bl	4279a4 <seat_preallocate_vts>
  4288ac:	ldr	x0, [sp, #56]
  4288b0:	bl	4284c4 <seat_read_active_vt>
  4288b4:	ldr	x0, [sp, #56]
  4288b8:	ldrb	w1, [x0, #72]
  4288bc:	orr	w1, w1, #0x2
  4288c0:	strb	w1, [x0, #72]
  4288c4:	ldr	x0, [sp, #56]
  4288c8:	bl	4273a0 <seat_save>
  4288cc:	mov	w1, #0x1                   	// #1
  4288d0:	ldr	x0, [sp, #56]
  4288d4:	bl	42682c <seat_send_signal>
  4288d8:	mov	w0, #0x0                   	// #0
  4288dc:	ldp	x29, x30, [sp, #32]
  4288e0:	add	sp, sp, #0x40
  4288e4:	ret

00000000004288e8 <seat_stop>:
  4288e8:	sub	sp, sp, #0x50
  4288ec:	stp	x29, x30, [sp, #32]
  4288f0:	add	x29, sp, #0x20
  4288f4:	str	x0, [sp, #56]
  4288f8:	strb	w1, [sp, #55]
  4288fc:	ldr	x0, [sp, #56]
  428900:	cmp	x0, #0x0
  428904:	cset	w0, eq  // eq = none
  428908:	and	w0, w0, #0xff
  42890c:	and	x0, x0, #0xff
  428910:	cmp	x0, #0x0
  428914:	b.eq	428940 <seat_stop+0x58>  // b.none
  428918:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42891c:	add	x1, x0, #0xf6b
  428920:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428924:	add	x4, x0, #0x468
  428928:	mov	w3, #0x1ab                 	// #427
  42892c:	mov	x2, x1
  428930:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428934:	add	x1, x0, #0xfe0
  428938:	mov	w0, #0x0                   	// #0
  42893c:	bl	407650 <log_assert_failed_realm@plt>
  428940:	ldr	x0, [sp, #56]
  428944:	ldrb	w0, [x0, #72]
  428948:	and	w0, w0, #0x2
  42894c:	and	w0, w0, #0xff
  428950:	cmp	w0, #0x0
  428954:	b.eq	4289b4 <seat_stop+0xcc>  // b.none
  428958:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42895c:	add	x1, x0, #0xf6b
  428960:	ldr	x0, [sp, #56]
  428964:	ldr	x2, [x0, #8]
  428968:	ldr	x0, [sp, #56]
  42896c:	ldr	x0, [x0, #8]
  428970:	str	xzr, [sp, #16]
  428974:	str	x0, [sp, #8]
  428978:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42897c:	add	x0, x0, #0x2e0
  428980:	str	x0, [sp]
  428984:	mov	x7, x2
  428988:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42898c:	add	x6, x0, #0x258
  428990:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428994:	add	x5, x0, #0x2b0
  428998:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42899c:	add	x4, x0, #0x478
  4289a0:	mov	w3, #0x1ae                 	// #430
  4289a4:	mov	x2, x1
  4289a8:	mov	w1, #0x0                   	// #0
  4289ac:	mov	w0, #0x6                   	// #6
  4289b0:	bl	407cd0 <log_struct_internal@plt>
  4289b4:	ldrb	w1, [sp, #55]
  4289b8:	ldr	x0, [sp, #56]
  4289bc:	bl	428a1c <seat_stop_sessions>
  4289c0:	str	w0, [sp, #76]
  4289c4:	ldr	x0, [sp, #56]
  4289c8:	ldr	x0, [x0, #16]
  4289cc:	bl	4070c0 <unlink@plt>
  4289d0:	ldr	x0, [sp, #56]
  4289d4:	bl	4294c8 <seat_add_to_gc_queue>
  4289d8:	ldr	x0, [sp, #56]
  4289dc:	ldrb	w0, [x0, #72]
  4289e0:	and	w0, w0, #0x2
  4289e4:	and	w0, w0, #0xff
  4289e8:	cmp	w0, #0x0
  4289ec:	b.eq	4289fc <seat_stop+0x114>  // b.none
  4289f0:	mov	w1, #0x0                   	// #0
  4289f4:	ldr	x0, [sp, #56]
  4289f8:	bl	42682c <seat_send_signal>
  4289fc:	ldr	x0, [sp, #56]
  428a00:	ldrb	w1, [x0, #72]
  428a04:	and	w1, w1, #0xfffffffd
  428a08:	strb	w1, [x0, #72]
  428a0c:	ldr	w0, [sp, #76]
  428a10:	ldp	x29, x30, [sp, #32]
  428a14:	add	sp, sp, #0x50
  428a18:	ret

0000000000428a1c <seat_stop_sessions>:
  428a1c:	stp	x29, x30, [sp, #-48]!
  428a20:	mov	x29, sp
  428a24:	str	x0, [sp, #24]
  428a28:	strb	w1, [sp, #23]
  428a2c:	str	wzr, [sp, #32]
  428a30:	ldr	x0, [sp, #24]
  428a34:	cmp	x0, #0x0
  428a38:	cset	w0, eq  // eq = none
  428a3c:	and	w0, w0, #0xff
  428a40:	and	x0, x0, #0xff
  428a44:	cmp	x0, #0x0
  428a48:	b.eq	428a74 <seat_stop_sessions+0x58>  // b.none
  428a4c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428a50:	add	x1, x0, #0xf6b
  428a54:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428a58:	add	x4, x0, #0x488
  428a5c:	mov	w3, #0x1c4                 	// #452
  428a60:	mov	x2, x1
  428a64:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428a68:	add	x1, x0, #0xfe0
  428a6c:	mov	w0, #0x0                   	// #0
  428a70:	bl	407650 <log_assert_failed_realm@plt>
  428a74:	ldr	x0, [sp, #24]
  428a78:	ldr	x0, [x0, #48]
  428a7c:	str	x0, [sp, #40]
  428a80:	b	428ab4 <seat_stop_sessions+0x98>
  428a84:	ldrb	w1, [sp, #23]
  428a88:	ldr	x0, [sp, #40]
  428a8c:	bl	432194 <session_stop>
  428a90:	str	w0, [sp, #36]
  428a94:	ldr	w0, [sp, #36]
  428a98:	cmp	w0, #0x0
  428a9c:	b.ge	428aa8 <seat_stop_sessions+0x8c>  // b.tcont
  428aa0:	ldr	w0, [sp, #36]
  428aa4:	str	w0, [sp, #32]
  428aa8:	ldr	x0, [sp, #40]
  428aac:	ldr	x0, [x0, #272]
  428ab0:	str	x0, [sp, #40]
  428ab4:	ldr	x0, [sp, #40]
  428ab8:	cmp	x0, #0x0
  428abc:	b.ne	428a84 <seat_stop_sessions+0x68>  // b.any
  428ac0:	ldr	w0, [sp, #32]
  428ac4:	ldp	x29, x30, [sp], #48
  428ac8:	ret

0000000000428acc <seat_evict_position>:
  428acc:	stp	x29, x30, [sp, #-48]!
  428ad0:	mov	x29, sp
  428ad4:	str	x0, [sp, #24]
  428ad8:	str	x1, [sp, #16]
  428adc:	ldr	x0, [sp, #16]
  428ae0:	ldr	w0, [x0, #16]
  428ae4:	str	w0, [sp, #36]
  428ae8:	ldr	x0, [sp, #16]
  428aec:	str	wzr, [x0, #16]
  428af0:	ldr	w0, [sp, #36]
  428af4:	cmp	w0, #0x0
  428af8:	b.eq	428bbc <seat_evict_position+0xf0>  // b.none
  428afc:	ldr	w1, [sp, #36]
  428b00:	ldr	x0, [sp, #24]
  428b04:	ldr	x0, [x0, #64]
  428b08:	cmp	x1, x0
  428b0c:	b.cs	428bc0 <seat_evict_position+0xf4>  // b.hs, b.nlast
  428b10:	ldr	x0, [sp, #24]
  428b14:	ldr	x1, [x0, #56]
  428b18:	ldr	w0, [sp, #36]
  428b1c:	lsl	x0, x0, #3
  428b20:	add	x0, x1, x0
  428b24:	ldr	x0, [x0]
  428b28:	ldr	x1, [sp, #16]
  428b2c:	cmp	x1, x0
  428b30:	b.ne	428bc0 <seat_evict_position+0xf4>  // b.any
  428b34:	ldr	x0, [sp, #24]
  428b38:	ldr	x1, [x0, #56]
  428b3c:	ldr	w0, [sp, #36]
  428b40:	lsl	x0, x0, #3
  428b44:	add	x0, x1, x0
  428b48:	str	xzr, [x0]
  428b4c:	ldr	x0, [sp, #24]
  428b50:	ldr	x0, [x0, #48]
  428b54:	str	x0, [sp, #40]
  428b58:	b	428bac <seat_evict_position+0xe0>
  428b5c:	ldr	x0, [sp, #40]
  428b60:	ldr	w0, [x0, #16]
  428b64:	ldr	w1, [sp, #36]
  428b68:	cmp	w1, w0
  428b6c:	b.ne	428ba0 <seat_evict_position+0xd4>  // b.any
  428b70:	ldr	x0, [sp, #40]
  428b74:	bl	4336cc <session_get_state>
  428b78:	cmp	w0, #0x3
  428b7c:	b.eq	428ba0 <seat_evict_position+0xd4>  // b.none
  428b80:	ldr	x0, [sp, #24]
  428b84:	ldr	x1, [x0, #56]
  428b88:	ldr	w0, [sp, #36]
  428b8c:	lsl	x0, x0, #3
  428b90:	add	x0, x1, x0
  428b94:	ldr	x1, [sp, #40]
  428b98:	str	x1, [x0]
  428b9c:	b	428bc0 <seat_evict_position+0xf4>
  428ba0:	ldr	x0, [sp, #40]
  428ba4:	ldr	x0, [x0, #272]
  428ba8:	str	x0, [sp, #40]
  428bac:	ldr	x0, [sp, #40]
  428bb0:	cmp	x0, #0x0
  428bb4:	b.ne	428b5c <seat_evict_position+0x90>  // b.any
  428bb8:	b	428bc0 <seat_evict_position+0xf4>
  428bbc:	nop
  428bc0:	ldp	x29, x30, [sp], #48
  428bc4:	ret

0000000000428bc8 <seat_claim_position>:
  428bc8:	stp	x29, x30, [sp, #-48]!
  428bcc:	mov	x29, sp
  428bd0:	str	x0, [sp, #40]
  428bd4:	str	x1, [sp, #32]
  428bd8:	str	w2, [sp, #28]
  428bdc:	ldr	x0, [sp, #40]
  428be0:	bl	428fb0 <seat_has_vts>
  428be4:	and	w0, w0, #0xff
  428be8:	cmp	w0, #0x0
  428bec:	b.eq	428bfc <seat_claim_position+0x34>  // b.none
  428bf0:	ldr	x0, [sp, #32]
  428bf4:	ldr	w0, [x0, #144]
  428bf8:	str	w0, [sp, #28]
  428bfc:	ldr	x0, [sp, #40]
  428c00:	add	x4, x0, #0x38
  428c04:	ldr	x0, [sp, #40]
  428c08:	add	x1, x0, #0x40
  428c0c:	ldr	w0, [sp, #28]
  428c10:	add	w0, w0, #0x1
  428c14:	mov	w0, w0
  428c18:	mov	x3, #0x8                   	// #8
  428c1c:	mov	x2, x0
  428c20:	mov	x0, x4
  428c24:	bl	407220 <greedy_realloc0@plt>
  428c28:	cmp	x0, #0x0
  428c2c:	b.eq	428c74 <seat_claim_position+0xac>  // b.none
  428c30:	ldr	x1, [sp, #32]
  428c34:	ldr	x0, [sp, #40]
  428c38:	bl	428acc <seat_evict_position>
  428c3c:	ldr	x0, [sp, #32]
  428c40:	ldr	w1, [sp, #28]
  428c44:	str	w1, [x0, #16]
  428c48:	ldr	w0, [sp, #28]
  428c4c:	cmp	w0, #0x0
  428c50:	b.eq	428c78 <seat_claim_position+0xb0>  // b.none
  428c54:	ldr	x0, [sp, #40]
  428c58:	ldr	x1, [x0, #56]
  428c5c:	ldr	w0, [sp, #28]
  428c60:	lsl	x0, x0, #3
  428c64:	add	x0, x1, x0
  428c68:	ldr	x1, [sp, #32]
  428c6c:	str	x1, [x0]
  428c70:	b	428c78 <seat_claim_position+0xb0>
  428c74:	nop
  428c78:	ldp	x29, x30, [sp], #48
  428c7c:	ret

0000000000428c80 <seat_assign_position>:
  428c80:	stp	x29, x30, [sp, #-48]!
  428c84:	mov	x29, sp
  428c88:	str	x0, [sp, #24]
  428c8c:	str	x1, [sp, #16]
  428c90:	ldr	x0, [sp, #16]
  428c94:	ldr	w0, [x0, #16]
  428c98:	cmp	w0, #0x0
  428c9c:	b.ne	428d08 <seat_assign_position+0x88>  // b.any
  428ca0:	mov	w0, #0x1                   	// #1
  428ca4:	str	w0, [sp, #44]
  428ca8:	b	428cd8 <seat_assign_position+0x58>
  428cac:	ldr	x0, [sp, #24]
  428cb0:	ldr	x1, [x0, #56]
  428cb4:	ldr	w0, [sp, #44]
  428cb8:	lsl	x0, x0, #3
  428cbc:	add	x0, x1, x0
  428cc0:	ldr	x0, [x0]
  428cc4:	cmp	x0, #0x0
  428cc8:	b.eq	428cf0 <seat_assign_position+0x70>  // b.none
  428ccc:	ldr	w0, [sp, #44]
  428cd0:	add	w0, w0, #0x1
  428cd4:	str	w0, [sp, #44]
  428cd8:	ldr	w1, [sp, #44]
  428cdc:	ldr	x0, [sp, #24]
  428ce0:	ldr	x0, [x0, #64]
  428ce4:	cmp	x1, x0
  428ce8:	b.cc	428cac <seat_assign_position+0x2c>  // b.lo, b.ul, b.last
  428cec:	b	428cf4 <seat_assign_position+0x74>
  428cf0:	nop
  428cf4:	ldr	w2, [sp, #44]
  428cf8:	ldr	x1, [sp, #16]
  428cfc:	ldr	x0, [sp, #24]
  428d00:	bl	428bc8 <seat_claim_position>
  428d04:	b	428d0c <seat_assign_position+0x8c>
  428d08:	nop
  428d0c:	ldp	x29, x30, [sp], #48
  428d10:	ret

0000000000428d14 <seat_attach_session>:
  428d14:	stp	x29, x30, [sp, #-48]!
  428d18:	mov	x29, sp
  428d1c:	str	x0, [sp, #24]
  428d20:	str	x1, [sp, #16]
  428d24:	ldr	x0, [sp, #24]
  428d28:	cmp	x0, #0x0
  428d2c:	cset	w0, eq  // eq = none
  428d30:	and	w0, w0, #0xff
  428d34:	and	x0, x0, #0xff
  428d38:	cmp	x0, #0x0
  428d3c:	b.eq	428d68 <seat_attach_session+0x54>  // b.none
  428d40:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428d44:	add	x1, x0, #0xf6b
  428d48:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428d4c:	add	x4, x0, #0x4a0
  428d50:	mov	w3, #0x204                 	// #516
  428d54:	mov	x2, x1
  428d58:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428d5c:	add	x1, x0, #0xfe0
  428d60:	mov	w0, #0x0                   	// #0
  428d64:	bl	407650 <log_assert_failed_realm@plt>
  428d68:	ldr	x0, [sp, #16]
  428d6c:	cmp	x0, #0x0
  428d70:	cset	w0, eq  // eq = none
  428d74:	and	w0, w0, #0xff
  428d78:	and	x0, x0, #0xff
  428d7c:	cmp	x0, #0x0
  428d80:	b.eq	428dac <seat_attach_session+0x98>  // b.none
  428d84:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428d88:	add	x1, x0, #0xf6b
  428d8c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428d90:	add	x4, x0, #0x4a0
  428d94:	mov	w3, #0x205                 	// #517
  428d98:	mov	x2, x1
  428d9c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428da0:	add	x1, x0, #0x300
  428da4:	mov	w0, #0x0                   	// #0
  428da8:	bl	407650 <log_assert_failed_realm@plt>
  428dac:	ldr	x0, [sp, #16]
  428db0:	ldr	x0, [x0, #136]
  428db4:	cmp	x0, #0x0
  428db8:	cset	w0, ne  // ne = any
  428dbc:	and	w0, w0, #0xff
  428dc0:	and	x0, x0, #0xff
  428dc4:	cmp	x0, #0x0
  428dc8:	b.eq	428df4 <seat_attach_session+0xe0>  // b.none
  428dcc:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428dd0:	add	x1, x0, #0xf6b
  428dd4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428dd8:	add	x4, x0, #0x4a0
  428ddc:	mov	w3, #0x206                 	// #518
  428de0:	mov	x2, x1
  428de4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428de8:	add	x1, x0, #0x308
  428dec:	mov	w0, #0x0                   	// #0
  428df0:	bl	407650 <log_assert_failed_realm@plt>
  428df4:	ldr	x0, [sp, #24]
  428df8:	bl	428fb0 <seat_has_vts>
  428dfc:	and	w0, w0, #0xff
  428e00:	eor	w0, w0, #0x1
  428e04:	and	w0, w0, #0xff
  428e08:	mov	w1, w0
  428e0c:	ldr	x0, [sp, #16]
  428e10:	ldr	w0, [x0, #144]
  428e14:	cmp	w0, #0x0
  428e18:	cset	w0, eq  // eq = none
  428e1c:	and	w0, w0, #0xff
  428e20:	cmp	w1, w0
  428e24:	b.eq	428e30 <seat_attach_session+0x11c>  // b.none
  428e28:	mov	w0, #0xffffffea            	// #-22
  428e2c:	b	428f10 <seat_attach_session+0x1fc>
  428e30:	ldr	x0, [sp, #16]
  428e34:	ldr	x1, [sp, #24]
  428e38:	str	x1, [x0, #136]
  428e3c:	ldr	x0, [sp, #24]
  428e40:	add	x0, x0, #0x30
  428e44:	str	x0, [sp, #32]
  428e48:	ldr	x0, [sp, #16]
  428e4c:	str	x0, [sp, #40]
  428e50:	ldr	x0, [sp, #40]
  428e54:	cmp	x0, #0x0
  428e58:	cset	w0, eq  // eq = none
  428e5c:	and	w0, w0, #0xff
  428e60:	and	x0, x0, #0xff
  428e64:	cmp	x0, #0x0
  428e68:	b.eq	428e94 <seat_attach_session+0x180>  // b.none
  428e6c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428e70:	add	x1, x0, #0xf6b
  428e74:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428e78:	add	x4, x0, #0x4a0
  428e7c:	mov	w3, #0x20c                 	// #524
  428e80:	mov	x2, x1
  428e84:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428e88:	add	x1, x0, #0xfb8
  428e8c:	mov	w0, #0x0                   	// #0
  428e90:	bl	407650 <log_assert_failed_realm@plt>
  428e94:	ldr	x0, [sp, #32]
  428e98:	ldr	x1, [x0]
  428e9c:	ldr	x0, [sp, #40]
  428ea0:	str	x1, [x0, #272]
  428ea4:	ldr	x0, [sp, #40]
  428ea8:	ldr	x0, [x0, #272]
  428eac:	cmp	x0, #0x0
  428eb0:	b.eq	428ec4 <seat_attach_session+0x1b0>  // b.none
  428eb4:	ldr	x0, [sp, #40]
  428eb8:	ldr	x0, [x0, #272]
  428ebc:	ldr	x1, [sp, #40]
  428ec0:	str	x1, [x0, #280]
  428ec4:	ldr	x0, [sp, #40]
  428ec8:	str	xzr, [x0, #280]
  428ecc:	ldr	x0, [sp, #32]
  428ed0:	ldr	x1, [sp, #40]
  428ed4:	str	x1, [x0]
  428ed8:	ldr	x1, [sp, #16]
  428edc:	ldr	x0, [sp, #24]
  428ee0:	bl	428c80 <seat_assign_position>
  428ee4:	ldr	x0, [sp, #24]
  428ee8:	bl	428fb0 <seat_has_vts>
  428eec:	and	w0, w0, #0xff
  428ef0:	eor	w0, w0, #0x1
  428ef4:	and	w0, w0, #0xff
  428ef8:	cmp	w0, #0x0
  428efc:	b.eq	428f0c <seat_attach_session+0x1f8>  // b.none
  428f00:	ldr	x1, [sp, #16]
  428f04:	ldr	x0, [sp, #24]
  428f08:	bl	427d58 <seat_set_active>
  428f0c:	mov	w0, #0x0                   	// #0
  428f10:	ldp	x29, x30, [sp], #48
  428f14:	ret

0000000000428f18 <seat_complete_switch>:
  428f18:	stp	x29, x30, [sp, #-48]!
  428f1c:	mov	x29, sp
  428f20:	str	x0, [sp, #24]
  428f24:	ldr	x0, [sp, #24]
  428f28:	cmp	x0, #0x0
  428f2c:	cset	w0, eq  // eq = none
  428f30:	and	w0, w0, #0xff
  428f34:	and	x0, x0, #0xff
  428f38:	cmp	x0, #0x0
  428f3c:	b.eq	428f68 <seat_complete_switch+0x50>  // b.none
  428f40:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428f44:	add	x1, x0, #0xf6b
  428f48:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428f4c:	add	x4, x0, #0x4b8
  428f50:	mov	w3, #0x21a                 	// #538
  428f54:	mov	x2, x1
  428f58:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428f5c:	add	x1, x0, #0xfe0
  428f60:	mov	w0, #0x0                   	// #0
  428f64:	bl	407650 <log_assert_failed_realm@plt>
  428f68:	ldr	x0, [sp, #24]
  428f6c:	ldr	x0, [x0, #40]
  428f70:	cmp	x0, #0x0
  428f74:	b.eq	428fa4 <seat_complete_switch+0x8c>  // b.none
  428f78:	ldr	x0, [sp, #24]
  428f7c:	ldr	x0, [x0, #40]
  428f80:	str	x0, [sp, #32]
  428f84:	ldr	x0, [sp, #24]
  428f88:	str	xzr, [x0, #40]
  428f8c:	ldr	x0, [sp, #32]
  428f90:	str	x0, [sp, #40]
  428f94:	ldr	x1, [sp, #40]
  428f98:	ldr	x0, [sp, #24]
  428f9c:	bl	427d58 <seat_set_active>
  428fa0:	b	428fa8 <seat_complete_switch+0x90>
  428fa4:	nop
  428fa8:	ldp	x29, x30, [sp], #48
  428fac:	ret

0000000000428fb0 <seat_has_vts>:
  428fb0:	stp	x29, x30, [sp, #-32]!
  428fb4:	mov	x29, sp
  428fb8:	str	x0, [sp, #24]
  428fbc:	ldr	x0, [sp, #24]
  428fc0:	cmp	x0, #0x0
  428fc4:	cset	w0, eq  // eq = none
  428fc8:	and	w0, w0, #0xff
  428fcc:	and	x0, x0, #0xff
  428fd0:	cmp	x0, #0x0
  428fd4:	b.eq	429000 <seat_has_vts+0x50>  // b.none
  428fd8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428fdc:	add	x1, x0, #0xf6b
  428fe0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  428fe4:	add	x4, x0, #0x4d0
  428fe8:	mov	w3, #0x226                 	// #550
  428fec:	mov	x2, x1
  428ff0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  428ff4:	add	x1, x0, #0xfe0
  428ff8:	mov	w0, #0x0                   	// #0
  428ffc:	bl	407650 <log_assert_failed_realm@plt>
  429000:	ldr	x0, [sp, #24]
  429004:	bl	429044 <seat_is_seat0>
  429008:	and	w0, w0, #0xff
  42900c:	cmp	w0, #0x0
  429010:	b.eq	429030 <seat_has_vts+0x80>  // b.none
  429014:	ldr	x0, [sp, #24]
  429018:	ldr	x0, [x0]
  42901c:	ldr	w0, [x0, #152]
  429020:	cmp	w0, #0x0
  429024:	b.lt	429030 <seat_has_vts+0x80>  // b.tstop
  429028:	mov	w0, #0x1                   	// #1
  42902c:	b	429034 <seat_has_vts+0x84>
  429030:	mov	w0, #0x0                   	// #0
  429034:	and	w0, w0, #0x1
  429038:	and	w0, w0, #0xff
  42903c:	ldp	x29, x30, [sp], #32
  429040:	ret

0000000000429044 <seat_is_seat0>:
  429044:	stp	x29, x30, [sp, #-32]!
  429048:	mov	x29, sp
  42904c:	str	x0, [sp, #24]
  429050:	ldr	x0, [sp, #24]
  429054:	cmp	x0, #0x0
  429058:	cset	w0, eq  // eq = none
  42905c:	and	w0, w0, #0xff
  429060:	and	x0, x0, #0xff
  429064:	cmp	x0, #0x0
  429068:	b.eq	429094 <seat_is_seat0+0x50>  // b.none
  42906c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429070:	add	x1, x0, #0xf6b
  429074:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429078:	add	x4, x0, #0x4e0
  42907c:	mov	w3, #0x22c                 	// #556
  429080:	mov	x2, x1
  429084:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429088:	add	x1, x0, #0xfe0
  42908c:	mov	w0, #0x0                   	// #0
  429090:	bl	407650 <log_assert_failed_realm@plt>
  429094:	ldr	x0, [sp, #24]
  429098:	ldr	x0, [x0]
  42909c:	ldr	x0, [x0, #168]
  4290a0:	ldr	x1, [sp, #24]
  4290a4:	cmp	x1, x0
  4290a8:	cset	w0, eq  // eq = none
  4290ac:	and	w0, w0, #0xff
  4290b0:	ldp	x29, x30, [sp], #32
  4290b4:	ret

00000000004290b8 <seat_can_multi_session>:
  4290b8:	stp	x29, x30, [sp, #-32]!
  4290bc:	mov	x29, sp
  4290c0:	str	x0, [sp, #24]
  4290c4:	ldr	x0, [sp, #24]
  4290c8:	cmp	x0, #0x0
  4290cc:	cset	w0, eq  // eq = none
  4290d0:	and	w0, w0, #0xff
  4290d4:	and	x0, x0, #0xff
  4290d8:	cmp	x0, #0x0
  4290dc:	b.eq	429108 <seat_can_multi_session+0x50>  // b.none
  4290e0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4290e4:	add	x1, x0, #0xf6b
  4290e8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4290ec:	add	x4, x0, #0x4f0
  4290f0:	mov	w3, #0x232                 	// #562
  4290f4:	mov	x2, x1
  4290f8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4290fc:	add	x1, x0, #0xfe0
  429100:	mov	w0, #0x0                   	// #0
  429104:	bl	407650 <log_assert_failed_realm@plt>
  429108:	ldr	x0, [sp, #24]
  42910c:	bl	428fb0 <seat_has_vts>
  429110:	and	w0, w0, #0xff
  429114:	ldp	x29, x30, [sp], #32
  429118:	ret

000000000042911c <seat_can_tty>:
  42911c:	stp	x29, x30, [sp, #-32]!
  429120:	mov	x29, sp
  429124:	str	x0, [sp, #24]
  429128:	ldr	x0, [sp, #24]
  42912c:	cmp	x0, #0x0
  429130:	cset	w0, eq  // eq = none
  429134:	and	w0, w0, #0xff
  429138:	and	x0, x0, #0xff
  42913c:	cmp	x0, #0x0
  429140:	b.eq	42916c <seat_can_tty+0x50>  // b.none
  429144:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429148:	add	x1, x0, #0xf6b
  42914c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429150:	add	x4, x0, #0x508
  429154:	mov	w3, #0x238                 	// #568
  429158:	mov	x2, x1
  42915c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429160:	add	x1, x0, #0xfe0
  429164:	mov	w0, #0x0                   	// #0
  429168:	bl	407650 <log_assert_failed_realm@plt>
  42916c:	ldr	x0, [sp, #24]
  429170:	bl	428fb0 <seat_has_vts>
  429174:	and	w0, w0, #0xff
  429178:	ldp	x29, x30, [sp], #32
  42917c:	ret

0000000000429180 <seat_has_master_device>:
  429180:	stp	x29, x30, [sp, #-32]!
  429184:	mov	x29, sp
  429188:	str	x0, [sp, #24]
  42918c:	ldr	x0, [sp, #24]
  429190:	cmp	x0, #0x0
  429194:	cset	w0, eq  // eq = none
  429198:	and	w0, w0, #0xff
  42919c:	and	x0, x0, #0xff
  4291a0:	cmp	x0, #0x0
  4291a4:	b.eq	4291d0 <seat_has_master_device+0x50>  // b.none
  4291a8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4291ac:	add	x1, x0, #0xf6b
  4291b0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4291b4:	add	x4, x0, #0x518
  4291b8:	mov	w3, #0x23e                 	// #574
  4291bc:	mov	x2, x1
  4291c0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4291c4:	add	x1, x0, #0xfe0
  4291c8:	mov	w0, #0x0                   	// #0
  4291cc:	bl	407650 <log_assert_failed_realm@plt>
  4291d0:	ldr	x0, [sp, #24]
  4291d4:	ldr	x0, [x0, #24]
  4291d8:	cmp	x0, #0x0
  4291dc:	b.eq	4291fc <seat_has_master_device+0x7c>  // b.none
  4291e0:	ldr	x0, [sp, #24]
  4291e4:	ldr	x0, [x0, #24]
  4291e8:	ldrb	w0, [x0, #24]
  4291ec:	cmp	w0, #0x0
  4291f0:	b.eq	4291fc <seat_has_master_device+0x7c>  // b.none
  4291f4:	mov	w0, #0x1                   	// #1
  4291f8:	b	429200 <seat_has_master_device+0x80>
  4291fc:	mov	w0, #0x0                   	// #0
  429200:	and	w0, w0, #0x1
  429204:	and	w0, w0, #0xff
  429208:	ldp	x29, x30, [sp], #32
  42920c:	ret

0000000000429210 <seat_can_graphical>:
  429210:	stp	x29, x30, [sp, #-32]!
  429214:	mov	x29, sp
  429218:	str	x0, [sp, #24]
  42921c:	ldr	x0, [sp, #24]
  429220:	cmp	x0, #0x0
  429224:	cset	w0, eq  // eq = none
  429228:	and	w0, w0, #0xff
  42922c:	and	x0, x0, #0xff
  429230:	cmp	x0, #0x0
  429234:	b.eq	429260 <seat_can_graphical+0x50>  // b.none
  429238:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42923c:	add	x1, x0, #0xf6b
  429240:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429244:	add	x4, x0, #0x530
  429248:	mov	w3, #0x245                 	// #581
  42924c:	mov	x2, x1
  429250:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429254:	add	x1, x0, #0xfe0
  429258:	mov	w0, #0x0                   	// #0
  42925c:	bl	407650 <log_assert_failed_realm@plt>
  429260:	ldr	x0, [sp, #24]
  429264:	bl	429180 <seat_has_master_device>
  429268:	and	w0, w0, #0xff
  42926c:	ldp	x29, x30, [sp], #32
  429270:	ret

0000000000429274 <seat_get_idle_hint>:
  429274:	stp	x29, x30, [sp, #-96]!
  429278:	mov	x29, sp
  42927c:	str	x0, [sp, #24]
  429280:	str	x1, [sp, #16]
  429284:	adrp	x0, 460000 <wordlist.10364+0x370>
  429288:	ldr	x0, [x0, #4024]
  42928c:	ldr	x1, [x0]
  429290:	str	x1, [sp, #88]
  429294:	mov	x1, #0x0                   	// #0
  429298:	mov	w0, #0x1                   	// #1
  42929c:	strb	w0, [sp, #43]
  4292a0:	stp	xzr, xzr, [sp, #56]
  4292a4:	ldr	x0, [sp, #24]
  4292a8:	cmp	x0, #0x0
  4292ac:	cset	w0, eq  // eq = none
  4292b0:	and	w0, w0, #0xff
  4292b4:	and	x0, x0, #0xff
  4292b8:	cmp	x0, #0x0
  4292bc:	b.eq	4292e8 <seat_get_idle_hint+0x74>  // b.none
  4292c0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4292c4:	add	x1, x0, #0xf6b
  4292c8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4292cc:	add	x4, x0, #0x548
  4292d0:	mov	w3, #0x24f                 	// #591
  4292d4:	mov	x2, x1
  4292d8:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4292dc:	add	x1, x0, #0xfe0
  4292e0:	mov	w0, #0x0                   	// #0
  4292e4:	bl	407650 <log_assert_failed_realm@plt>
  4292e8:	ldr	x0, [sp, #24]
  4292ec:	ldr	x0, [x0, #48]
  4292f0:	str	x0, [sp, #48]
  4292f4:	b	42939c <seat_get_idle_hint+0x128>
  4292f8:	add	x0, sp, #0x48
  4292fc:	mov	x1, x0
  429300:	ldr	x0, [sp, #48]
  429304:	bl	432a54 <session_get_idle_hint>
  429308:	str	w0, [sp, #44]
  42930c:	ldr	w0, [sp, #44]
  429310:	cmp	w0, #0x0
  429314:	b.ge	429320 <seat_get_idle_hint+0xac>  // b.tcont
  429318:	ldr	w0, [sp, #44]
  42931c:	b	4293c4 <seat_get_idle_hint+0x150>
  429320:	ldr	w0, [sp, #44]
  429324:	cmp	w0, #0x0
  429328:	b.ne	42936c <seat_get_idle_hint+0xf8>  // b.any
  42932c:	ldrb	w0, [sp, #43]
  429330:	eor	w0, w0, #0x1
  429334:	and	w0, w0, #0xff
  429338:	cmp	w0, #0x0
  42933c:	b.eq	42935c <seat_get_idle_hint+0xe8>  // b.none
  429340:	ldr	x1, [sp, #80]
  429344:	ldr	x0, [sp, #64]
  429348:	cmp	x1, x0
  42934c:	b.ls	429390 <seat_get_idle_hint+0x11c>  // b.plast
  429350:	ldp	x0, x1, [sp, #72]
  429354:	stp	x0, x1, [sp, #56]
  429358:	b	429390 <seat_get_idle_hint+0x11c>
  42935c:	strb	wzr, [sp, #43]
  429360:	ldp	x0, x1, [sp, #72]
  429364:	stp	x0, x1, [sp, #56]
  429368:	b	429390 <seat_get_idle_hint+0x11c>
  42936c:	ldrb	w0, [sp, #43]
  429370:	cmp	w0, #0x0
  429374:	b.eq	429390 <seat_get_idle_hint+0x11c>  // b.none
  429378:	ldr	x1, [sp, #80]
  42937c:	ldr	x0, [sp, #64]
  429380:	cmp	x1, x0
  429384:	b.ls	429390 <seat_get_idle_hint+0x11c>  // b.plast
  429388:	ldp	x0, x1, [sp, #72]
  42938c:	stp	x0, x1, [sp, #56]
  429390:	ldr	x0, [sp, #48]
  429394:	ldr	x0, [x0, #272]
  429398:	str	x0, [sp, #48]
  42939c:	ldr	x0, [sp, #48]
  4293a0:	cmp	x0, #0x0
  4293a4:	b.ne	4292f8 <seat_get_idle_hint+0x84>  // b.any
  4293a8:	ldr	x0, [sp, #16]
  4293ac:	cmp	x0, #0x0
  4293b0:	b.eq	4293c0 <seat_get_idle_hint+0x14c>  // b.none
  4293b4:	ldr	x2, [sp, #16]
  4293b8:	ldp	x0, x1, [sp, #56]
  4293bc:	stp	x0, x1, [x2]
  4293c0:	ldrb	w0, [sp, #43]
  4293c4:	mov	w1, w0
  4293c8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4293cc:	ldr	x0, [x0, #4024]
  4293d0:	ldr	x2, [sp, #88]
  4293d4:	ldr	x0, [x0]
  4293d8:	eor	x0, x2, x0
  4293dc:	cmp	x0, #0x0
  4293e0:	b.eq	4293e8 <seat_get_idle_hint+0x174>  // b.none
  4293e4:	bl	407b20 <__stack_chk_fail@plt>
  4293e8:	mov	w0, w1
  4293ec:	ldp	x29, x30, [sp], #96
  4293f0:	ret

00000000004293f4 <seat_may_gc>:
  4293f4:	stp	x29, x30, [sp, #-32]!
  4293f8:	mov	x29, sp
  4293fc:	str	x0, [sp, #24]
  429400:	strb	w1, [sp, #23]
  429404:	ldr	x0, [sp, #24]
  429408:	cmp	x0, #0x0
  42940c:	cset	w0, eq  // eq = none
  429410:	and	w0, w0, #0xff
  429414:	and	x0, x0, #0xff
  429418:	cmp	x0, #0x0
  42941c:	b.eq	429448 <seat_may_gc+0x54>  // b.none
  429420:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429424:	add	x1, x0, #0xf6b
  429428:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42942c:	add	x4, x0, #0x560
  429430:	mov	w3, #0x26f                 	// #623
  429434:	mov	x2, x1
  429438:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42943c:	add	x1, x0, #0xfe0
  429440:	mov	w0, #0x0                   	// #0
  429444:	bl	407650 <log_assert_failed_realm@plt>
  429448:	ldrb	w0, [sp, #23]
  42944c:	cmp	w0, #0x0
  429450:	b.eq	42947c <seat_may_gc+0x88>  // b.none
  429454:	ldr	x0, [sp, #24]
  429458:	ldrb	w0, [x0, #72]
  42945c:	ubfx	x0, x0, #1, #1
  429460:	and	w0, w0, #0xff
  429464:	eor	w0, w0, #0x1
  429468:	and	w0, w0, #0xff
  42946c:	cmp	w0, #0x0
  429470:	b.eq	42947c <seat_may_gc+0x88>  // b.none
  429474:	mov	w0, #0x1                   	// #1
  429478:	b	4294c0 <seat_may_gc+0xcc>
  42947c:	ldr	x0, [sp, #24]
  429480:	bl	429044 <seat_is_seat0>
  429484:	and	w0, w0, #0xff
  429488:	cmp	w0, #0x0
  42948c:	b.eq	429498 <seat_may_gc+0xa4>  // b.none
  429490:	mov	w0, #0x0                   	// #0
  429494:	b	4294c0 <seat_may_gc+0xcc>
  429498:	ldr	x0, [sp, #24]
  42949c:	bl	429180 <seat_has_master_device>
  4294a0:	and	w0, w0, #0xff
  4294a4:	cmp	w0, #0x0
  4294a8:	cset	w0, ne  // ne = any
  4294ac:	and	w0, w0, #0xff
  4294b0:	eor	w0, w0, #0x1
  4294b4:	and	w0, w0, #0xff
  4294b8:	and	w0, w0, #0x1
  4294bc:	and	w0, w0, #0xff
  4294c0:	ldp	x29, x30, [sp], #32
  4294c4:	ret

00000000004294c8 <seat_add_to_gc_queue>:
  4294c8:	stp	x29, x30, [sp, #-48]!
  4294cc:	mov	x29, sp
  4294d0:	str	x0, [sp, #24]
  4294d4:	ldr	x0, [sp, #24]
  4294d8:	cmp	x0, #0x0
  4294dc:	cset	w0, eq  // eq = none
  4294e0:	and	w0, w0, #0xff
  4294e4:	and	x0, x0, #0xff
  4294e8:	cmp	x0, #0x0
  4294ec:	b.eq	429518 <seat_add_to_gc_queue+0x50>  // b.none
  4294f0:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4294f4:	add	x1, x0, #0xf6b
  4294f8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4294fc:	add	x4, x0, #0x570
  429500:	mov	w3, #0x27b                 	// #635
  429504:	mov	x2, x1
  429508:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  42950c:	add	x1, x0, #0xfe0
  429510:	mov	w0, #0x0                   	// #0
  429514:	bl	407650 <log_assert_failed_realm@plt>
  429518:	ldr	x0, [sp, #24]
  42951c:	ldrb	w0, [x0, #72]
  429520:	and	w0, w0, #0x1
  429524:	and	w0, w0, #0xff
  429528:	cmp	w0, #0x0
  42952c:	b.ne	4295e4 <seat_add_to_gc_queue+0x11c>  // b.any
  429530:	ldr	x0, [sp, #24]
  429534:	ldr	x0, [x0]
  429538:	add	x0, x0, #0x50
  42953c:	str	x0, [sp, #32]
  429540:	ldr	x0, [sp, #24]
  429544:	str	x0, [sp, #40]
  429548:	ldr	x0, [sp, #40]
  42954c:	cmp	x0, #0x0
  429550:	cset	w0, eq  // eq = none
  429554:	and	w0, w0, #0xff
  429558:	and	x0, x0, #0xff
  42955c:	cmp	x0, #0x0
  429560:	b.eq	42958c <seat_add_to_gc_queue+0xc4>  // b.none
  429564:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429568:	add	x1, x0, #0xf6b
  42956c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429570:	add	x4, x0, #0x570
  429574:	mov	w3, #0x280                 	// #640
  429578:	mov	x2, x1
  42957c:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  429580:	add	x1, x0, #0xfb8
  429584:	mov	w0, #0x0                   	// #0
  429588:	bl	407650 <log_assert_failed_realm@plt>
  42958c:	ldr	x0, [sp, #32]
  429590:	ldr	x1, [x0]
  429594:	ldr	x0, [sp, #40]
  429598:	str	x1, [x0, #80]
  42959c:	ldr	x0, [sp, #40]
  4295a0:	ldr	x0, [x0, #80]
  4295a4:	cmp	x0, #0x0
  4295a8:	b.eq	4295bc <seat_add_to_gc_queue+0xf4>  // b.none
  4295ac:	ldr	x0, [sp, #40]
  4295b0:	ldr	x0, [x0, #80]
  4295b4:	ldr	x1, [sp, #40]
  4295b8:	str	x1, [x0, #88]
  4295bc:	ldr	x0, [sp, #40]
  4295c0:	str	xzr, [x0, #88]
  4295c4:	ldr	x0, [sp, #32]
  4295c8:	ldr	x1, [sp, #40]
  4295cc:	str	x1, [x0]
  4295d0:	ldr	x0, [sp, #24]
  4295d4:	ldrb	w1, [x0, #72]
  4295d8:	orr	w1, w1, #0x1
  4295dc:	strb	w1, [x0, #72]
  4295e0:	b	4295e8 <seat_add_to_gc_queue+0x120>
  4295e4:	nop
  4295e8:	ldp	x29, x30, [sp], #48
  4295ec:	ret

00000000004295f0 <seat_name_valid_char>:
  4295f0:	sub	sp, sp, #0x20
  4295f4:	strb	w0, [sp, #15]
  4295f8:	ldrb	w0, [sp, #15]
  4295fc:	cmp	w0, #0x60
  429600:	b.ls	429610 <seat_name_valid_char+0x20>  // b.plast
  429604:	ldrb	w0, [sp, #15]
  429608:	cmp	w0, #0x7a
  42960c:	b.ls	429670 <seat_name_valid_char+0x80>  // b.plast
  429610:	ldrb	w0, [sp, #15]
  429614:	cmp	w0, #0x40
  429618:	b.ls	429628 <seat_name_valid_char+0x38>  // b.plast
  42961c:	ldrb	w0, [sp, #15]
  429620:	cmp	w0, #0x5a
  429624:	b.ls	429670 <seat_name_valid_char+0x80>  // b.plast
  429628:	ldrb	w0, [sp, #15]
  42962c:	cmp	w0, #0x2f
  429630:	b.ls	429640 <seat_name_valid_char+0x50>  // b.plast
  429634:	ldrb	w0, [sp, #15]
  429638:	cmp	w0, #0x39
  42963c:	b.ls	429670 <seat_name_valid_char+0x80>  // b.plast
  429640:	strb	wzr, [sp, #31]
  429644:	ldrb	w0, [sp, #15]
  429648:	cmp	w0, #0x2d
  42964c:	b.eq	429658 <seat_name_valid_char+0x68>  // b.none
  429650:	cmp	w0, #0x5f
  429654:	b.ne	429660 <seat_name_valid_char+0x70>  // b.any
  429658:	mov	w0, #0x1                   	// #1
  42965c:	strb	w0, [sp, #31]
  429660:	nop
  429664:	ldrb	w0, [sp, #31]
  429668:	cmp	w0, #0x0
  42966c:	b.eq	429678 <seat_name_valid_char+0x88>  // b.none
  429670:	mov	w0, #0x1                   	// #1
  429674:	b	42967c <seat_name_valid_char+0x8c>
  429678:	mov	w0, #0x0                   	// #0
  42967c:	and	w0, w0, #0x1
  429680:	and	w0, w0, #0xff
  429684:	add	sp, sp, #0x20
  429688:	ret

000000000042968c <seat_name_is_valid>:
  42968c:	stp	x29, x30, [sp, #-48]!
  429690:	mov	x29, sp
  429694:	str	x0, [sp, #24]
  429698:	ldr	x0, [sp, #24]
  42969c:	cmp	x0, #0x0
  4296a0:	cset	w0, eq  // eq = none
  4296a4:	and	w0, w0, #0xff
  4296a8:	and	x0, x0, #0xff
  4296ac:	cmp	x0, #0x0
  4296b0:	b.eq	4296dc <seat_name_is_valid+0x50>  // b.none
  4296b4:	adrp	x0, 442000 <__PRETTY_FUNCTION__.16211>
  4296b8:	add	x1, x0, #0xf6b
  4296bc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4296c0:	add	x4, x0, #0x588
  4296c4:	mov	w3, #0x28f                 	// #655
  4296c8:	mov	x2, x1
  4296cc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4296d0:	add	x1, x0, #0x318
  4296d4:	mov	w0, #0x0                   	// #0
  4296d8:	bl	407650 <log_assert_failed_realm@plt>
  4296dc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  4296e0:	add	x1, x0, #0x320
  4296e4:	ldr	x0, [sp, #24]
  4296e8:	bl	426eb8 <startswith>
  4296ec:	cmp	x0, #0x0
  4296f0:	b.ne	4296fc <seat_name_is_valid+0x70>  // b.any
  4296f4:	mov	w0, #0x0                   	// #0
  4296f8:	b	429784 <seat_name_is_valid+0xf8>
  4296fc:	ldr	x0, [sp, #24]
  429700:	add	x0, x0, #0x4
  429704:	ldrb	w0, [x0]
  429708:	cmp	w0, #0x0
  42970c:	b.ne	429718 <seat_name_is_valid+0x8c>  // b.any
  429710:	mov	w0, #0x0                   	// #0
  429714:	b	429784 <seat_name_is_valid+0xf8>
  429718:	ldr	x0, [sp, #24]
  42971c:	str	x0, [sp, #40]
  429720:	b	429758 <seat_name_is_valid+0xcc>
  429724:	ldr	x0, [sp, #40]
  429728:	ldrb	w0, [x0]
  42972c:	bl	4295f0 <seat_name_valid_char>
  429730:	and	w0, w0, #0xff
  429734:	eor	w0, w0, #0x1
  429738:	and	w0, w0, #0xff
  42973c:	cmp	w0, #0x0
  429740:	b.eq	42974c <seat_name_is_valid+0xc0>  // b.none
  429744:	mov	w0, #0x0                   	// #0
  429748:	b	429784 <seat_name_is_valid+0xf8>
  42974c:	ldr	x0, [sp, #40]
  429750:	add	x0, x0, #0x1
  429754:	str	x0, [sp, #40]
  429758:	ldr	x0, [sp, #40]
  42975c:	ldrb	w0, [x0]
  429760:	cmp	w0, #0x0
  429764:	b.ne	429724 <seat_name_is_valid+0x98>  // b.any
  429768:	ldr	x0, [sp, #24]
  42976c:	bl	4082f0 <strlen@plt>
  429770:	cmp	x0, #0xff
  429774:	b.ls	429780 <seat_name_is_valid+0xf4>  // b.plast
  429778:	mov	w0, #0x0                   	// #0
  42977c:	b	429784 <seat_name_is_valid+0xf8>
  429780:	mov	w0, #0x1                   	// #1
  429784:	ldp	x29, x30, [sp], #48
  429788:	ret

000000000042978c <freep>:
  42978c:	stp	x29, x30, [sp, #-32]!
  429790:	mov	x29, sp
  429794:	str	x0, [sp, #24]
  429798:	ldr	x0, [sp, #24]
  42979c:	ldr	x0, [x0]
  4297a0:	bl	408150 <free@plt>
  4297a4:	nop
  4297a8:	ldp	x29, x30, [sp], #32
  4297ac:	ret

00000000004297b0 <size_multiply_overflow>:
  4297b0:	sub	sp, sp, #0x10
  4297b4:	str	x0, [sp, #8]
  4297b8:	str	x1, [sp]
  4297bc:	ldr	x0, [sp]
  4297c0:	cmp	x0, #0x0
  4297c4:	cset	w0, ne  // ne = any
  4297c8:	and	w0, w0, #0xff
  4297cc:	and	x0, x0, #0xff
  4297d0:	cmp	x0, #0x0
  4297d4:	b.eq	429818 <size_multiply_overflow+0x68>  // b.none
  4297d8:	mov	x2, #0x0                   	// #0
  4297dc:	ldr	x1, [sp, #8]
  4297e0:	ldr	x0, [sp]
  4297e4:	umulh	x0, x1, x0
  4297e8:	cmp	x0, #0x0
  4297ec:	b.eq	4297f4 <size_multiply_overflow+0x44>  // b.none
  4297f0:	mov	x2, #0x1                   	// #1
  4297f4:	mov	x0, x2
  4297f8:	cmp	x0, #0x0
  4297fc:	cset	w0, ne  // ne = any
  429800:	and	w0, w0, #0xff
  429804:	and	x0, x0, #0xff
  429808:	cmp	x0, #0x0
  42980c:	b.eq	429818 <size_multiply_overflow+0x68>  // b.none
  429810:	mov	w0, #0x1                   	// #1
  429814:	b	42981c <size_multiply_overflow+0x6c>
  429818:	mov	w0, #0x0                   	// #0
  42981c:	and	w0, w0, #0x1
  429820:	and	w0, w0, #0xff
  429824:	add	sp, sp, #0x10
  429828:	ret

000000000042982c <sd_bus_message_unrefp>:
  42982c:	stp	x29, x30, [sp, #-32]!
  429830:	mov	x29, sp
  429834:	str	x0, [sp, #24]
  429838:	ldr	x0, [sp, #24]
  42983c:	ldr	x0, [x0]
  429840:	cmp	x0, #0x0
  429844:	b.eq	429854 <sd_bus_message_unrefp+0x28>  // b.none
  429848:	ldr	x0, [sp, #24]
  42984c:	ldr	x0, [x0]
  429850:	bl	407240 <sd_bus_message_unref@plt>
  429854:	nop
  429858:	ldp	x29, x30, [sp], #32
  42985c:	ret

0000000000429860 <sd_bus_creds_unrefp>:
  429860:	stp	x29, x30, [sp, #-32]!
  429864:	mov	x29, sp
  429868:	str	x0, [sp, #24]
  42986c:	ldr	x0, [sp, #24]
  429870:	ldr	x0, [x0]
  429874:	cmp	x0, #0x0
  429878:	b.eq	429888 <sd_bus_creds_unrefp+0x28>  // b.none
  42987c:	ldr	x0, [sp, #24]
  429880:	ldr	x0, [x0]
  429884:	bl	4072e0 <sd_bus_creds_unref@plt>
  429888:	nop
  42988c:	ldp	x29, x30, [sp], #32
  429890:	ret

0000000000429894 <streq_ptr>:
  429894:	stp	x29, x30, [sp, #-32]!
  429898:	mov	x29, sp
  42989c:	str	x0, [sp, #24]
  4298a0:	str	x1, [sp, #16]
  4298a4:	ldr	x1, [sp, #16]
  4298a8:	ldr	x0, [sp, #24]
  4298ac:	bl	407110 <strcmp_ptr@plt>
  4298b0:	cmp	w0, #0x0
  4298b4:	cset	w0, eq  // eq = none
  4298b8:	and	w0, w0, #0xff
  4298bc:	ldp	x29, x30, [sp], #32
  4298c0:	ret

00000000004298c4 <isempty>:
  4298c4:	sub	sp, sp, #0x10
  4298c8:	str	x0, [sp, #8]
  4298cc:	ldr	x0, [sp, #8]
  4298d0:	cmp	x0, #0x0
  4298d4:	b.eq	4298e8 <isempty+0x24>  // b.none
  4298d8:	ldr	x0, [sp, #8]
  4298dc:	ldrb	w0, [x0]
  4298e0:	cmp	w0, #0x0
  4298e4:	b.ne	4298f0 <isempty+0x2c>  // b.any
  4298e8:	mov	w0, #0x1                   	// #1
  4298ec:	b	4298f4 <isempty+0x30>
  4298f0:	mov	w0, #0x0                   	// #0
  4298f4:	and	w0, w0, #0x1
  4298f8:	and	w0, w0, #0xff
  4298fc:	add	sp, sp, #0x10
  429900:	ret

0000000000429904 <startswith>:
  429904:	stp	x29, x30, [sp, #-48]!
  429908:	mov	x29, sp
  42990c:	str	x0, [sp, #24]
  429910:	str	x1, [sp, #16]
  429914:	ldr	x0, [sp, #16]
  429918:	bl	4082f0 <strlen@plt>
  42991c:	str	x0, [sp, #40]
  429920:	ldr	x2, [sp, #40]
  429924:	ldr	x1, [sp, #16]
  429928:	ldr	x0, [sp, #24]
  42992c:	bl	407770 <strncmp@plt>
  429930:	cmp	w0, #0x0
  429934:	b.ne	429948 <startswith+0x44>  // b.any
  429938:	ldr	x1, [sp, #24]
  42993c:	ldr	x0, [sp, #40]
  429940:	add	x0, x1, x0
  429944:	b	42994c <startswith+0x48>
  429948:	mov	x0, #0x0                   	// #0
  42994c:	ldp	x29, x30, [sp], #48
  429950:	ret

0000000000429954 <strlen_ptr>:
  429954:	stp	x29, x30, [sp, #-32]!
  429958:	mov	x29, sp
  42995c:	str	x0, [sp, #24]
  429960:	ldr	x0, [sp, #24]
  429964:	cmp	x0, #0x0
  429968:	b.ne	429974 <strlen_ptr+0x20>  // b.any
  42996c:	mov	x0, #0x0                   	// #0
  429970:	b	42997c <strlen_ptr+0x28>
  429974:	ldr	x0, [sp, #24]
  429978:	bl	4082f0 <strlen@plt>
  42997c:	ldp	x29, x30, [sp], #32
  429980:	ret

0000000000429984 <bus_label_unescape>:
  429984:	stp	x29, x30, [sp, #-32]!
  429988:	mov	x29, sp
  42998c:	str	x0, [sp, #24]
  429990:	ldr	x0, [sp, #24]
  429994:	bl	429954 <strlen_ptr>
  429998:	mov	x1, x0
  42999c:	ldr	x0, [sp, #24]
  4299a0:	bl	408050 <bus_label_unescape_n@plt>
  4299a4:	ldp	x29, x30, [sp], #32
  4299a8:	ret

00000000004299ac <hashmap_get>:
  4299ac:	stp	x29, x30, [sp, #-32]!
  4299b0:	mov	x29, sp
  4299b4:	str	x0, [sp, #24]
  4299b8:	str	x1, [sp, #16]
  4299bc:	ldr	x1, [sp, #16]
  4299c0:	ldr	x0, [sp, #24]
  4299c4:	bl	407860 <internal_hashmap_get@plt>
  4299c8:	ldp	x29, x30, [sp], #32
  4299cc:	ret

00000000004299d0 <hashmap_iterate>:
  4299d0:	stp	x29, x30, [sp, #-48]!
  4299d4:	mov	x29, sp
  4299d8:	str	x0, [sp, #40]
  4299dc:	str	x1, [sp, #32]
  4299e0:	str	x2, [sp, #24]
  4299e4:	str	x3, [sp, #16]
  4299e8:	ldr	x3, [sp, #16]
  4299ec:	ldr	x2, [sp, #24]
  4299f0:	ldr	x1, [sp, #32]
  4299f4:	ldr	x0, [sp, #40]
  4299f8:	bl	407f80 <internal_hashmap_iterate@plt>
  4299fc:	and	w0, w0, #0xff
  429a00:	ldp	x29, x30, [sp], #48
  429a04:	ret

0000000000429a08 <closep>:
  429a08:	stp	x29, x30, [sp, #-32]!
  429a0c:	mov	x29, sp
  429a10:	str	x0, [sp, #24]
  429a14:	ldr	x0, [sp, #24]
  429a18:	ldr	w0, [x0]
  429a1c:	bl	4075e0 <safe_close@plt>
  429a20:	nop
  429a24:	ldp	x29, x30, [sp], #32
  429a28:	ret

0000000000429a2c <sd_device_unrefp>:
  429a2c:	stp	x29, x30, [sp, #-32]!
  429a30:	mov	x29, sp
  429a34:	str	x0, [sp, #24]
  429a38:	ldr	x0, [sp, #24]
  429a3c:	ldr	x0, [x0]
  429a40:	cmp	x0, #0x0
  429a44:	b.eq	429a54 <sd_device_unrefp+0x28>  // b.none
  429a48:	ldr	x0, [sp, #24]
  429a4c:	ldr	x0, [x0]
  429a50:	bl	4081a0 <sd_device_unref@plt>
  429a54:	nop
  429a58:	ldp	x29, x30, [sp], #32
  429a5c:	ret

0000000000429a60 <strv_freep>:
  429a60:	stp	x29, x30, [sp, #-32]!
  429a64:	mov	x29, sp
  429a68:	str	x0, [sp, #24]
  429a6c:	ldr	x0, [sp, #24]
  429a70:	ldr	x0, [x0]
  429a74:	cmp	x0, #0x0
  429a78:	b.eq	429a88 <strv_freep+0x28>  // b.none
  429a7c:	ldr	x0, [sp, #24]
  429a80:	ldr	x0, [x0]
  429a84:	bl	4079a0 <strv_free@plt>
  429a88:	nop
  429a8c:	ldp	x29, x30, [sp], #32
  429a90:	ret

0000000000429a94 <SIGNAL_VALID>:
  429a94:	sub	sp, sp, #0x10
  429a98:	str	w0, [sp, #12]
  429a9c:	ldr	w0, [sp, #12]
  429aa0:	cmp	w0, #0x0
  429aa4:	b.le	429abc <SIGNAL_VALID+0x28>
  429aa8:	ldr	w0, [sp, #12]
  429aac:	cmp	w0, #0x40
  429ab0:	b.gt	429abc <SIGNAL_VALID+0x28>
  429ab4:	mov	w0, #0x1                   	// #1
  429ab8:	b	429ac0 <SIGNAL_VALID+0x2c>
  429abc:	mov	w0, #0x0                   	// #0
  429ac0:	and	w0, w0, #0x1
  429ac4:	and	w0, w0, #0xff
  429ac8:	add	sp, sp, #0x10
  429acc:	ret

0000000000429ad0 <property_get_user>:
  429ad0:	stp	x29, x30, [sp, #-128]!
  429ad4:	mov	x29, sp
  429ad8:	str	x19, [sp, #16]
  429adc:	str	x0, [sp, #88]
  429ae0:	str	x1, [sp, #80]
  429ae4:	str	x2, [sp, #72]
  429ae8:	str	x3, [sp, #64]
  429aec:	str	x4, [sp, #56]
  429af0:	str	x5, [sp, #48]
  429af4:	str	x6, [sp, #40]
  429af8:	adrp	x0, 460000 <wordlist.10364+0x370>
  429afc:	ldr	x0, [x0, #4024]
  429b00:	ldr	x1, [x0]
  429b04:	str	x1, [sp, #120]
  429b08:	mov	x1, #0x0                   	// #0
  429b0c:	str	xzr, [sp, #104]
  429b10:	ldr	x0, [sp, #48]
  429b14:	str	x0, [sp, #112]
  429b18:	ldr	x0, [sp, #88]
  429b1c:	cmp	x0, #0x0
  429b20:	cset	w0, eq  // eq = none
  429b24:	and	w0, w0, #0xff
  429b28:	and	x0, x0, #0xff
  429b2c:	cmp	x0, #0x0
  429b30:	b.eq	429b5c <property_get_user+0x8c>  // b.none
  429b34:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429b38:	add	x1, x0, #0x5bb
  429b3c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429b40:	add	x4, x0, #0xe48
  429b44:	mov	w3, #0x26                  	// #38
  429b48:	mov	x2, x1
  429b4c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429b50:	add	x1, x0, #0x5e0
  429b54:	mov	w0, #0x0                   	// #0
  429b58:	bl	407650 <log_assert_failed_realm@plt>
  429b5c:	ldr	x0, [sp, #56]
  429b60:	cmp	x0, #0x0
  429b64:	cset	w0, eq  // eq = none
  429b68:	and	w0, w0, #0xff
  429b6c:	and	x0, x0, #0xff
  429b70:	cmp	x0, #0x0
  429b74:	b.eq	429ba0 <property_get_user+0xd0>  // b.none
  429b78:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429b7c:	add	x1, x0, #0x5bb
  429b80:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429b84:	add	x4, x0, #0xe48
  429b88:	mov	w3, #0x27                  	// #39
  429b8c:	mov	x2, x1
  429b90:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429b94:	add	x1, x0, #0x5e8
  429b98:	mov	w0, #0x0                   	// #0
  429b9c:	bl	407650 <log_assert_failed_realm@plt>
  429ba0:	ldr	x0, [sp, #112]
  429ba4:	cmp	x0, #0x0
  429ba8:	cset	w0, eq  // eq = none
  429bac:	and	w0, w0, #0xff
  429bb0:	and	x0, x0, #0xff
  429bb4:	cmp	x0, #0x0
  429bb8:	b.eq	429be4 <property_get_user+0x114>  // b.none
  429bbc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429bc0:	add	x1, x0, #0x5bb
  429bc4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429bc8:	add	x4, x0, #0xe48
  429bcc:	mov	w3, #0x28                  	// #40
  429bd0:	mov	x2, x1
  429bd4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429bd8:	add	x1, x0, #0x5f0
  429bdc:	mov	w0, #0x0                   	// #0
  429be0:	bl	407650 <log_assert_failed_realm@plt>
  429be4:	ldr	x0, [sp, #112]
  429be8:	ldr	x0, [x0, #40]
  429bec:	bl	435760 <user_bus_path>
  429bf0:	str	x0, [sp, #104]
  429bf4:	ldr	x0, [sp, #104]
  429bf8:	cmp	x0, #0x0
  429bfc:	b.ne	429c08 <property_get_user+0x138>  // b.any
  429c00:	mov	w19, #0xfffffff4            	// #-12
  429c04:	b	429c34 <property_get_user+0x164>
  429c08:	ldr	x0, [sp, #112]
  429c0c:	ldr	x0, [x0, #40]
  429c10:	ldr	w0, [x0, #8]
  429c14:	ldr	x1, [sp, #104]
  429c18:	mov	x3, x1
  429c1c:	mov	w2, w0
  429c20:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429c24:	add	x1, x0, #0x5f8
  429c28:	ldr	x0, [sp, #56]
  429c2c:	bl	407590 <sd_bus_message_append@plt>
  429c30:	mov	w19, w0
  429c34:	add	x0, sp, #0x68
  429c38:	bl	42978c <freep>
  429c3c:	mov	w1, w19
  429c40:	adrp	x0, 460000 <wordlist.10364+0x370>
  429c44:	ldr	x0, [x0, #4024]
  429c48:	ldr	x2, [sp, #120]
  429c4c:	ldr	x0, [x0]
  429c50:	eor	x0, x2, x0
  429c54:	cmp	x0, #0x0
  429c58:	b.eq	429c60 <property_get_user+0x190>  // b.none
  429c5c:	bl	407b20 <__stack_chk_fail@plt>
  429c60:	mov	w0, w1
  429c64:	ldr	x19, [sp, #16]
  429c68:	ldp	x29, x30, [sp], #128
  429c6c:	ret

0000000000429c70 <property_get_name>:
  429c70:	stp	x29, x30, [sp, #-96]!
  429c74:	mov	x29, sp
  429c78:	str	x0, [sp, #72]
  429c7c:	str	x1, [sp, #64]
  429c80:	str	x2, [sp, #56]
  429c84:	str	x3, [sp, #48]
  429c88:	str	x4, [sp, #40]
  429c8c:	str	x5, [sp, #32]
  429c90:	str	x6, [sp, #24]
  429c94:	ldr	x0, [sp, #32]
  429c98:	str	x0, [sp, #88]
  429c9c:	ldr	x0, [sp, #72]
  429ca0:	cmp	x0, #0x0
  429ca4:	cset	w0, eq  // eq = none
  429ca8:	and	w0, w0, #0xff
  429cac:	and	x0, x0, #0xff
  429cb0:	cmp	x0, #0x0
  429cb4:	b.eq	429ce0 <property_get_name+0x70>  // b.none
  429cb8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429cbc:	add	x1, x0, #0x5bb
  429cc0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429cc4:	add	x4, x0, #0xe60
  429cc8:	mov	w3, #0x3c                  	// #60
  429ccc:	mov	x2, x1
  429cd0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429cd4:	add	x1, x0, #0x5e0
  429cd8:	mov	w0, #0x0                   	// #0
  429cdc:	bl	407650 <log_assert_failed_realm@plt>
  429ce0:	ldr	x0, [sp, #40]
  429ce4:	cmp	x0, #0x0
  429ce8:	cset	w0, eq  // eq = none
  429cec:	and	w0, w0, #0xff
  429cf0:	and	x0, x0, #0xff
  429cf4:	cmp	x0, #0x0
  429cf8:	b.eq	429d24 <property_get_name+0xb4>  // b.none
  429cfc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d00:	add	x1, x0, #0x5bb
  429d04:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d08:	add	x4, x0, #0xe60
  429d0c:	mov	w3, #0x3d                  	// #61
  429d10:	mov	x2, x1
  429d14:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d18:	add	x1, x0, #0x5e8
  429d1c:	mov	w0, #0x0                   	// #0
  429d20:	bl	407650 <log_assert_failed_realm@plt>
  429d24:	ldr	x0, [sp, #88]
  429d28:	cmp	x0, #0x0
  429d2c:	cset	w0, eq  // eq = none
  429d30:	and	w0, w0, #0xff
  429d34:	and	x0, x0, #0xff
  429d38:	cmp	x0, #0x0
  429d3c:	b.eq	429d68 <property_get_name+0xf8>  // b.none
  429d40:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d44:	add	x1, x0, #0x5bb
  429d48:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d4c:	add	x4, x0, #0xe60
  429d50:	mov	w3, #0x3e                  	// #62
  429d54:	mov	x2, x1
  429d58:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d5c:	add	x1, x0, #0x5f0
  429d60:	mov	w0, #0x0                   	// #0
  429d64:	bl	407650 <log_assert_failed_realm@plt>
  429d68:	ldr	x0, [sp, #88]
  429d6c:	ldr	x0, [x0, #40]
  429d70:	ldr	x0, [x0, #16]
  429d74:	mov	x2, x0
  429d78:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429d7c:	add	x1, x0, #0x5f0
  429d80:	ldr	x0, [sp, #40]
  429d84:	bl	407590 <sd_bus_message_append@plt>
  429d88:	ldp	x29, x30, [sp], #96
  429d8c:	ret

0000000000429d90 <property_get_seat>:
  429d90:	stp	x29, x30, [sp, #-128]!
  429d94:	mov	x29, sp
  429d98:	str	x19, [sp, #16]
  429d9c:	str	x0, [sp, #88]
  429da0:	str	x1, [sp, #80]
  429da4:	str	x2, [sp, #72]
  429da8:	str	x3, [sp, #64]
  429dac:	str	x4, [sp, #56]
  429db0:	str	x5, [sp, #48]
  429db4:	str	x6, [sp, #40]
  429db8:	adrp	x0, 460000 <wordlist.10364+0x370>
  429dbc:	ldr	x0, [x0, #4024]
  429dc0:	ldr	x1, [x0]
  429dc4:	str	x1, [sp, #120]
  429dc8:	mov	x1, #0x0                   	// #0
  429dcc:	str	xzr, [sp, #104]
  429dd0:	ldr	x0, [sp, #48]
  429dd4:	str	x0, [sp, #112]
  429dd8:	ldr	x0, [sp, #88]
  429ddc:	cmp	x0, #0x0
  429de0:	cset	w0, eq  // eq = none
  429de4:	and	w0, w0, #0xff
  429de8:	and	x0, x0, #0xff
  429dec:	cmp	x0, #0x0
  429df0:	b.eq	429e1c <property_get_seat+0x8c>  // b.none
  429df4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429df8:	add	x1, x0, #0x5bb
  429dfc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e00:	add	x4, x0, #0xe78
  429e04:	mov	w3, #0x4f                  	// #79
  429e08:	mov	x2, x1
  429e0c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e10:	add	x1, x0, #0x5e0
  429e14:	mov	w0, #0x0                   	// #0
  429e18:	bl	407650 <log_assert_failed_realm@plt>
  429e1c:	ldr	x0, [sp, #56]
  429e20:	cmp	x0, #0x0
  429e24:	cset	w0, eq  // eq = none
  429e28:	and	w0, w0, #0xff
  429e2c:	and	x0, x0, #0xff
  429e30:	cmp	x0, #0x0
  429e34:	b.eq	429e60 <property_get_seat+0xd0>  // b.none
  429e38:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e3c:	add	x1, x0, #0x5bb
  429e40:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e44:	add	x4, x0, #0xe78
  429e48:	mov	w3, #0x50                  	// #80
  429e4c:	mov	x2, x1
  429e50:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e54:	add	x1, x0, #0x5e8
  429e58:	mov	w0, #0x0                   	// #0
  429e5c:	bl	407650 <log_assert_failed_realm@plt>
  429e60:	ldr	x0, [sp, #112]
  429e64:	cmp	x0, #0x0
  429e68:	cset	w0, eq  // eq = none
  429e6c:	and	w0, w0, #0xff
  429e70:	and	x0, x0, #0xff
  429e74:	cmp	x0, #0x0
  429e78:	b.eq	429ea4 <property_get_seat+0x114>  // b.none
  429e7c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e80:	add	x1, x0, #0x5bb
  429e84:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e88:	add	x4, x0, #0xe78
  429e8c:	mov	w3, #0x51                  	// #81
  429e90:	mov	x2, x1
  429e94:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429e98:	add	x1, x0, #0x5f0
  429e9c:	mov	w0, #0x0                   	// #0
  429ea0:	bl	407650 <log_assert_failed_realm@plt>
  429ea4:	ldr	x0, [sp, #112]
  429ea8:	ldr	x0, [x0, #136]
  429eac:	cmp	x0, #0x0
  429eb0:	b.eq	429ec4 <property_get_seat+0x134>  // b.none
  429eb4:	ldr	x0, [sp, #112]
  429eb8:	ldr	x0, [x0, #136]
  429ebc:	bl	4263ac <seat_bus_path>
  429ec0:	b	429ed0 <property_get_seat+0x140>
  429ec4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429ec8:	add	x0, x0, #0x600
  429ecc:	bl	407f90 <strdup@plt>
  429ed0:	str	x0, [sp, #104]
  429ed4:	ldr	x0, [sp, #104]
  429ed8:	cmp	x0, #0x0
  429edc:	b.ne	429ee8 <property_get_seat+0x158>  // b.any
  429ee0:	mov	w19, #0xfffffff4            	// #-12
  429ee4:	b	429f30 <property_get_seat+0x1a0>
  429ee8:	ldr	x0, [sp, #112]
  429eec:	ldr	x0, [x0, #136]
  429ef0:	cmp	x0, #0x0
  429ef4:	b.eq	429f08 <property_get_seat+0x178>  // b.none
  429ef8:	ldr	x0, [sp, #112]
  429efc:	ldr	x0, [x0, #136]
  429f00:	ldr	x0, [x0, #8]
  429f04:	b	429f10 <property_get_seat+0x180>
  429f08:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429f0c:	add	x0, x0, #0x608
  429f10:	ldr	x1, [sp, #104]
  429f14:	mov	x3, x1
  429f18:	mov	x2, x0
  429f1c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429f20:	add	x1, x0, #0x610
  429f24:	ldr	x0, [sp, #56]
  429f28:	bl	407590 <sd_bus_message_append@plt>
  429f2c:	mov	w19, w0
  429f30:	add	x0, sp, #0x68
  429f34:	bl	42978c <freep>
  429f38:	mov	w1, w19
  429f3c:	adrp	x0, 460000 <wordlist.10364+0x370>
  429f40:	ldr	x0, [x0, #4024]
  429f44:	ldr	x2, [sp, #120]
  429f48:	ldr	x0, [x0]
  429f4c:	eor	x0, x2, x0
  429f50:	cmp	x0, #0x0
  429f54:	b.eq	429f5c <property_get_seat+0x1cc>  // b.none
  429f58:	bl	407b20 <__stack_chk_fail@plt>
  429f5c:	mov	w0, w1
  429f60:	ldr	x19, [sp, #16]
  429f64:	ldp	x29, x30, [sp], #128
  429f68:	ret

0000000000429f6c <property_get_type>:
  429f6c:	stp	x29, x30, [sp, #-96]!
  429f70:	mov	x29, sp
  429f74:	str	x0, [sp, #72]
  429f78:	str	x1, [sp, #64]
  429f7c:	str	x2, [sp, #56]
  429f80:	str	x3, [sp, #48]
  429f84:	str	x4, [sp, #40]
  429f88:	str	x5, [sp, #32]
  429f8c:	str	x6, [sp, #24]
  429f90:	ldr	x0, [sp, #32]
  429f94:	str	x0, [sp, #88]
  429f98:	ldr	x0, [sp, #72]
  429f9c:	cmp	x0, #0x0
  429fa0:	cset	w0, eq  // eq = none
  429fa4:	and	w0, w0, #0xff
  429fa8:	and	x0, x0, #0xff
  429fac:	cmp	x0, #0x0
  429fb0:	b.eq	429fdc <property_get_type+0x70>  // b.none
  429fb4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429fb8:	add	x1, x0, #0x5bb
  429fbc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429fc0:	add	x4, x0, #0xe90
  429fc4:	mov	w3, #0x5a                  	// #90
  429fc8:	mov	x2, x1
  429fcc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429fd0:	add	x1, x0, #0x5e0
  429fd4:	mov	w0, #0x0                   	// #0
  429fd8:	bl	407650 <log_assert_failed_realm@plt>
  429fdc:	ldr	x0, [sp, #40]
  429fe0:	cmp	x0, #0x0
  429fe4:	cset	w0, eq  // eq = none
  429fe8:	and	w0, w0, #0xff
  429fec:	and	x0, x0, #0xff
  429ff0:	cmp	x0, #0x0
  429ff4:	b.eq	42a020 <property_get_type+0xb4>  // b.none
  429ff8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  429ffc:	add	x1, x0, #0x5bb
  42a000:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a004:	add	x4, x0, #0xe90
  42a008:	mov	w3, #0x5a                  	// #90
  42a00c:	mov	x2, x1
  42a010:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a014:	add	x1, x0, #0x5e8
  42a018:	mov	w0, #0x0                   	// #0
  42a01c:	bl	407650 <log_assert_failed_realm@plt>
  42a020:	ldr	x0, [sp, #88]
  42a024:	cmp	x0, #0x0
  42a028:	cset	w0, eq  // eq = none
  42a02c:	and	w0, w0, #0xff
  42a030:	and	x0, x0, #0xff
  42a034:	cmp	x0, #0x0
  42a038:	b.eq	42a064 <property_get_type+0xf8>  // b.none
  42a03c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a040:	add	x1, x0, #0x5bb
  42a044:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a048:	add	x4, x0, #0xe90
  42a04c:	mov	w3, #0x5a                  	// #90
  42a050:	mov	x2, x1
  42a054:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a058:	add	x1, x0, #0x618
  42a05c:	mov	w0, #0x0                   	// #0
  42a060:	bl	407650 <log_assert_failed_realm@plt>
  42a064:	ldr	x0, [sp, #88]
  42a068:	ldr	w0, [x0]
  42a06c:	bl	434508 <session_type_to_string>
  42a070:	mov	x2, x0
  42a074:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a078:	add	x1, x0, #0x5f0
  42a07c:	ldr	x0, [sp, #40]
  42a080:	bl	407590 <sd_bus_message_append@plt>
  42a084:	ldp	x29, x30, [sp], #96
  42a088:	ret

000000000042a08c <property_get_class>:
  42a08c:	stp	x29, x30, [sp, #-96]!
  42a090:	mov	x29, sp
  42a094:	str	x0, [sp, #72]
  42a098:	str	x1, [sp, #64]
  42a09c:	str	x2, [sp, #56]
  42a0a0:	str	x3, [sp, #48]
  42a0a4:	str	x4, [sp, #40]
  42a0a8:	str	x5, [sp, #32]
  42a0ac:	str	x6, [sp, #24]
  42a0b0:	ldr	x0, [sp, #32]
  42a0b4:	str	x0, [sp, #88]
  42a0b8:	ldr	x0, [sp, #72]
  42a0bc:	cmp	x0, #0x0
  42a0c0:	cset	w0, eq  // eq = none
  42a0c4:	and	w0, w0, #0xff
  42a0c8:	and	x0, x0, #0xff
  42a0cc:	cmp	x0, #0x0
  42a0d0:	b.eq	42a0fc <property_get_class+0x70>  // b.none
  42a0d4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a0d8:	add	x1, x0, #0x5bb
  42a0dc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a0e0:	add	x4, x0, #0xea8
  42a0e4:	mov	w3, #0x5b                  	// #91
  42a0e8:	mov	x2, x1
  42a0ec:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a0f0:	add	x1, x0, #0x5e0
  42a0f4:	mov	w0, #0x0                   	// #0
  42a0f8:	bl	407650 <log_assert_failed_realm@plt>
  42a0fc:	ldr	x0, [sp, #40]
  42a100:	cmp	x0, #0x0
  42a104:	cset	w0, eq  // eq = none
  42a108:	and	w0, w0, #0xff
  42a10c:	and	x0, x0, #0xff
  42a110:	cmp	x0, #0x0
  42a114:	b.eq	42a140 <property_get_class+0xb4>  // b.none
  42a118:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a11c:	add	x1, x0, #0x5bb
  42a120:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a124:	add	x4, x0, #0xea8
  42a128:	mov	w3, #0x5b                  	// #91
  42a12c:	mov	x2, x1
  42a130:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a134:	add	x1, x0, #0x5e8
  42a138:	mov	w0, #0x0                   	// #0
  42a13c:	bl	407650 <log_assert_failed_realm@plt>
  42a140:	ldr	x0, [sp, #88]
  42a144:	cmp	x0, #0x0
  42a148:	cset	w0, eq  // eq = none
  42a14c:	and	w0, w0, #0xff
  42a150:	and	x0, x0, #0xff
  42a154:	cmp	x0, #0x0
  42a158:	b.eq	42a184 <property_get_class+0xf8>  // b.none
  42a15c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a160:	add	x1, x0, #0x5bb
  42a164:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a168:	add	x4, x0, #0xea8
  42a16c:	mov	w3, #0x5b                  	// #91
  42a170:	mov	x2, x1
  42a174:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a178:	add	x1, x0, #0x618
  42a17c:	mov	w0, #0x0                   	// #0
  42a180:	bl	407650 <log_assert_failed_realm@plt>
  42a184:	ldr	x0, [sp, #88]
  42a188:	ldr	w0, [x0]
  42a18c:	bl	434570 <session_class_to_string>
  42a190:	mov	x2, x0
  42a194:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a198:	add	x1, x0, #0x5f0
  42a19c:	ldr	x0, [sp, #40]
  42a1a0:	bl	407590 <sd_bus_message_append@plt>
  42a1a4:	ldp	x29, x30, [sp], #96
  42a1a8:	ret

000000000042a1ac <property_get_active>:
  42a1ac:	stp	x29, x30, [sp, #-96]!
  42a1b0:	mov	x29, sp
  42a1b4:	str	x0, [sp, #72]
  42a1b8:	str	x1, [sp, #64]
  42a1bc:	str	x2, [sp, #56]
  42a1c0:	str	x3, [sp, #48]
  42a1c4:	str	x4, [sp, #40]
  42a1c8:	str	x5, [sp, #32]
  42a1cc:	str	x6, [sp, #24]
  42a1d0:	ldr	x0, [sp, #32]
  42a1d4:	str	x0, [sp, #88]
  42a1d8:	ldr	x0, [sp, #72]
  42a1dc:	cmp	x0, #0x0
  42a1e0:	cset	w0, eq  // eq = none
  42a1e4:	and	w0, w0, #0xff
  42a1e8:	and	x0, x0, #0xff
  42a1ec:	cmp	x0, #0x0
  42a1f0:	b.eq	42a21c <property_get_active+0x70>  // b.none
  42a1f4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a1f8:	add	x1, x0, #0x5bb
  42a1fc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a200:	add	x4, x0, #0xec0
  42a204:	mov	w3, #0x5c                  	// #92
  42a208:	mov	x2, x1
  42a20c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a210:	add	x1, x0, #0x5e0
  42a214:	mov	w0, #0x0                   	// #0
  42a218:	bl	407650 <log_assert_failed_realm@plt>
  42a21c:	ldr	x0, [sp, #40]
  42a220:	cmp	x0, #0x0
  42a224:	cset	w0, eq  // eq = none
  42a228:	and	w0, w0, #0xff
  42a22c:	and	x0, x0, #0xff
  42a230:	cmp	x0, #0x0
  42a234:	b.eq	42a260 <property_get_active+0xb4>  // b.none
  42a238:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a23c:	add	x1, x0, #0x5bb
  42a240:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a244:	add	x4, x0, #0xec0
  42a248:	mov	w3, #0x5c                  	// #92
  42a24c:	mov	x2, x1
  42a250:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a254:	add	x1, x0, #0x5e8
  42a258:	mov	w0, #0x0                   	// #0
  42a25c:	bl	407650 <log_assert_failed_realm@plt>
  42a260:	ldr	x0, [sp, #88]
  42a264:	cmp	x0, #0x0
  42a268:	cset	w0, eq  // eq = none
  42a26c:	and	w0, w0, #0xff
  42a270:	and	x0, x0, #0xff
  42a274:	cmp	x0, #0x0
  42a278:	b.eq	42a2a4 <property_get_active+0xf8>  // b.none
  42a27c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a280:	add	x1, x0, #0x5bb
  42a284:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a288:	add	x4, x0, #0xec0
  42a28c:	mov	w3, #0x5c                  	// #92
  42a290:	mov	x2, x1
  42a294:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a298:	add	x1, x0, #0x618
  42a29c:	mov	w0, #0x0                   	// #0
  42a2a0:	bl	407650 <log_assert_failed_realm@plt>
  42a2a4:	ldr	x0, [sp, #88]
  42a2a8:	bl	4326f4 <session_is_active>
  42a2ac:	and	w0, w0, #0xff
  42a2b0:	mov	w2, w0
  42a2b4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a2b8:	add	x1, x0, #0x620
  42a2bc:	ldr	x0, [sp, #40]
  42a2c0:	bl	407590 <sd_bus_message_append@plt>
  42a2c4:	ldp	x29, x30, [sp], #96
  42a2c8:	ret

000000000042a2cc <property_get_state>:
  42a2cc:	stp	x29, x30, [sp, #-96]!
  42a2d0:	mov	x29, sp
  42a2d4:	str	x0, [sp, #72]
  42a2d8:	str	x1, [sp, #64]
  42a2dc:	str	x2, [sp, #56]
  42a2e0:	str	x3, [sp, #48]
  42a2e4:	str	x4, [sp, #40]
  42a2e8:	str	x5, [sp, #32]
  42a2ec:	str	x6, [sp, #24]
  42a2f0:	ldr	x0, [sp, #32]
  42a2f4:	str	x0, [sp, #88]
  42a2f8:	ldr	x0, [sp, #72]
  42a2fc:	cmp	x0, #0x0
  42a300:	cset	w0, eq  // eq = none
  42a304:	and	w0, w0, #0xff
  42a308:	and	x0, x0, #0xff
  42a30c:	cmp	x0, #0x0
  42a310:	b.eq	42a33c <property_get_state+0x70>  // b.none
  42a314:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a318:	add	x1, x0, #0x5bb
  42a31c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a320:	add	x4, x0, #0xed8
  42a324:	mov	w3, #0x5d                  	// #93
  42a328:	mov	x2, x1
  42a32c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a330:	add	x1, x0, #0x5e0
  42a334:	mov	w0, #0x0                   	// #0
  42a338:	bl	407650 <log_assert_failed_realm@plt>
  42a33c:	ldr	x0, [sp, #40]
  42a340:	cmp	x0, #0x0
  42a344:	cset	w0, eq  // eq = none
  42a348:	and	w0, w0, #0xff
  42a34c:	and	x0, x0, #0xff
  42a350:	cmp	x0, #0x0
  42a354:	b.eq	42a380 <property_get_state+0xb4>  // b.none
  42a358:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a35c:	add	x1, x0, #0x5bb
  42a360:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a364:	add	x4, x0, #0xed8
  42a368:	mov	w3, #0x5d                  	// #93
  42a36c:	mov	x2, x1
  42a370:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a374:	add	x1, x0, #0x5e8
  42a378:	mov	w0, #0x0                   	// #0
  42a37c:	bl	407650 <log_assert_failed_realm@plt>
  42a380:	ldr	x0, [sp, #88]
  42a384:	cmp	x0, #0x0
  42a388:	cset	w0, eq  // eq = none
  42a38c:	and	w0, w0, #0xff
  42a390:	and	x0, x0, #0xff
  42a394:	cmp	x0, #0x0
  42a398:	b.eq	42a3c4 <property_get_state+0xf8>  // b.none
  42a39c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a3a0:	add	x1, x0, #0x5bb
  42a3a4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a3a8:	add	x4, x0, #0xed8
  42a3ac:	mov	w3, #0x5d                  	// #93
  42a3b0:	mov	x2, x1
  42a3b4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a3b8:	add	x1, x0, #0x618
  42a3bc:	mov	w0, #0x0                   	// #0
  42a3c0:	bl	407650 <log_assert_failed_realm@plt>
  42a3c4:	ldr	x0, [sp, #88]
  42a3c8:	bl	4336cc <session_get_state>
  42a3cc:	bl	4344c8 <session_state_to_string>
  42a3d0:	mov	x2, x0
  42a3d4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a3d8:	add	x1, x0, #0x5f0
  42a3dc:	ldr	x0, [sp, #40]
  42a3e0:	bl	407590 <sd_bus_message_append@plt>
  42a3e4:	ldp	x29, x30, [sp], #96
  42a3e8:	ret

000000000042a3ec <property_get_idle_hint>:
  42a3ec:	stp	x29, x30, [sp, #-96]!
  42a3f0:	mov	x29, sp
  42a3f4:	str	x0, [sp, #72]
  42a3f8:	str	x1, [sp, #64]
  42a3fc:	str	x2, [sp, #56]
  42a400:	str	x3, [sp, #48]
  42a404:	str	x4, [sp, #40]
  42a408:	str	x5, [sp, #32]
  42a40c:	str	x6, [sp, #24]
  42a410:	ldr	x0, [sp, #32]
  42a414:	str	x0, [sp, #88]
  42a418:	ldr	x0, [sp, #72]
  42a41c:	cmp	x0, #0x0
  42a420:	cset	w0, eq  // eq = none
  42a424:	and	w0, w0, #0xff
  42a428:	and	x0, x0, #0xff
  42a42c:	cmp	x0, #0x0
  42a430:	b.eq	42a45c <property_get_idle_hint+0x70>  // b.none
  42a434:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a438:	add	x1, x0, #0x5bb
  42a43c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a440:	add	x4, x0, #0xef0
  42a444:	mov	w3, #0x6a                  	// #106
  42a448:	mov	x2, x1
  42a44c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a450:	add	x1, x0, #0x5e0
  42a454:	mov	w0, #0x0                   	// #0
  42a458:	bl	407650 <log_assert_failed_realm@plt>
  42a45c:	ldr	x0, [sp, #40]
  42a460:	cmp	x0, #0x0
  42a464:	cset	w0, eq  // eq = none
  42a468:	and	w0, w0, #0xff
  42a46c:	and	x0, x0, #0xff
  42a470:	cmp	x0, #0x0
  42a474:	b.eq	42a4a0 <property_get_idle_hint+0xb4>  // b.none
  42a478:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a47c:	add	x1, x0, #0x5bb
  42a480:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a484:	add	x4, x0, #0xef0
  42a488:	mov	w3, #0x6b                  	// #107
  42a48c:	mov	x2, x1
  42a490:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a494:	add	x1, x0, #0x5e8
  42a498:	mov	w0, #0x0                   	// #0
  42a49c:	bl	407650 <log_assert_failed_realm@plt>
  42a4a0:	ldr	x0, [sp, #88]
  42a4a4:	cmp	x0, #0x0
  42a4a8:	cset	w0, eq  // eq = none
  42a4ac:	and	w0, w0, #0xff
  42a4b0:	and	x0, x0, #0xff
  42a4b4:	cmp	x0, #0x0
  42a4b8:	b.eq	42a4e4 <property_get_idle_hint+0xf8>  // b.none
  42a4bc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a4c0:	add	x1, x0, #0x5bb
  42a4c4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a4c8:	add	x4, x0, #0xef0
  42a4cc:	mov	w3, #0x6c                  	// #108
  42a4d0:	mov	x2, x1
  42a4d4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a4d8:	add	x1, x0, #0x5f0
  42a4dc:	mov	w0, #0x0                   	// #0
  42a4e0:	bl	407650 <log_assert_failed_realm@plt>
  42a4e4:	mov	x1, #0x0                   	// #0
  42a4e8:	ldr	x0, [sp, #88]
  42a4ec:	bl	432a54 <session_get_idle_hint>
  42a4f0:	cmp	w0, #0x0
  42a4f4:	cset	w0, gt
  42a4f8:	and	w0, w0, #0xff
  42a4fc:	mov	w2, w0
  42a500:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a504:	add	x1, x0, #0x620
  42a508:	ldr	x0, [sp, #40]
  42a50c:	bl	407590 <sd_bus_message_append@plt>
  42a510:	ldp	x29, x30, [sp], #96
  42a514:	ret

000000000042a518 <property_get_idle_since_hint>:
  42a518:	stp	x29, x30, [sp, #-128]!
  42a51c:	mov	x29, sp
  42a520:	str	x0, [sp, #72]
  42a524:	str	x1, [sp, #64]
  42a528:	str	x2, [sp, #56]
  42a52c:	str	x3, [sp, #48]
  42a530:	str	x4, [sp, #40]
  42a534:	str	x5, [sp, #32]
  42a538:	str	x6, [sp, #24]
  42a53c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42a540:	ldr	x0, [x0, #4024]
  42a544:	ldr	x1, [x0]
  42a548:	str	x1, [sp, #120]
  42a54c:	mov	x1, #0x0                   	// #0
  42a550:	ldr	x0, [sp, #32]
  42a554:	str	x0, [sp, #88]
  42a558:	stp	xzr, xzr, [sp, #104]
  42a55c:	ldr	x0, [sp, #72]
  42a560:	cmp	x0, #0x0
  42a564:	cset	w0, eq  // eq = none
  42a568:	and	w0, w0, #0xff
  42a56c:	and	x0, x0, #0xff
  42a570:	cmp	x0, #0x0
  42a574:	b.eq	42a5a0 <property_get_idle_since_hint+0x88>  // b.none
  42a578:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a57c:	add	x1, x0, #0x5bb
  42a580:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a584:	add	x4, x0, #0xf08
  42a588:	mov	w3, #0x7f                  	// #127
  42a58c:	mov	x2, x1
  42a590:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a594:	add	x1, x0, #0x5e0
  42a598:	mov	w0, #0x0                   	// #0
  42a59c:	bl	407650 <log_assert_failed_realm@plt>
  42a5a0:	ldr	x0, [sp, #40]
  42a5a4:	cmp	x0, #0x0
  42a5a8:	cset	w0, eq  // eq = none
  42a5ac:	and	w0, w0, #0xff
  42a5b0:	and	x0, x0, #0xff
  42a5b4:	cmp	x0, #0x0
  42a5b8:	b.eq	42a5e4 <property_get_idle_since_hint+0xcc>  // b.none
  42a5bc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a5c0:	add	x1, x0, #0x5bb
  42a5c4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a5c8:	add	x4, x0, #0xf08
  42a5cc:	mov	w3, #0x80                  	// #128
  42a5d0:	mov	x2, x1
  42a5d4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a5d8:	add	x1, x0, #0x5e8
  42a5dc:	mov	w0, #0x0                   	// #0
  42a5e0:	bl	407650 <log_assert_failed_realm@plt>
  42a5e4:	ldr	x0, [sp, #88]
  42a5e8:	cmp	x0, #0x0
  42a5ec:	cset	w0, eq  // eq = none
  42a5f0:	and	w0, w0, #0xff
  42a5f4:	and	x0, x0, #0xff
  42a5f8:	cmp	x0, #0x0
  42a5fc:	b.eq	42a628 <property_get_idle_since_hint+0x110>  // b.none
  42a600:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a604:	add	x1, x0, #0x5bb
  42a608:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a60c:	add	x4, x0, #0xf08
  42a610:	mov	w3, #0x81                  	// #129
  42a614:	mov	x2, x1
  42a618:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a61c:	add	x1, x0, #0x5f0
  42a620:	mov	w0, #0x0                   	// #0
  42a624:	bl	407650 <log_assert_failed_realm@plt>
  42a628:	add	x0, sp, #0x68
  42a62c:	mov	x1, x0
  42a630:	ldr	x0, [sp, #88]
  42a634:	bl	432a54 <session_get_idle_hint>
  42a638:	str	w0, [sp, #84]
  42a63c:	ldr	w0, [sp, #84]
  42a640:	cmp	w0, #0x0
  42a644:	b.ge	42a650 <property_get_idle_since_hint+0x138>  // b.tcont
  42a648:	ldr	w0, [sp, #84]
  42a64c:	b	42a68c <property_get_idle_since_hint+0x174>
  42a650:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a654:	add	x1, x0, #0x628
  42a658:	ldr	x0, [sp, #48]
  42a65c:	bl	407f30 <strcmp@plt>
  42a660:	cmp	w0, #0x0
  42a664:	b.ne	42a670 <property_get_idle_since_hint+0x158>  // b.any
  42a668:	ldr	x0, [sp, #104]
  42a66c:	b	42a674 <property_get_idle_since_hint+0x15c>
  42a670:	ldr	x0, [sp, #112]
  42a674:	str	x0, [sp, #96]
  42a678:	ldr	x2, [sp, #96]
  42a67c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a680:	add	x1, x0, #0x638
  42a684:	ldr	x0, [sp, #40]
  42a688:	bl	407590 <sd_bus_message_append@plt>
  42a68c:	mov	w1, w0
  42a690:	adrp	x0, 460000 <wordlist.10364+0x370>
  42a694:	ldr	x0, [x0, #4024]
  42a698:	ldr	x2, [sp, #120]
  42a69c:	ldr	x0, [x0]
  42a6a0:	eor	x0, x2, x0
  42a6a4:	cmp	x0, #0x0
  42a6a8:	b.eq	42a6b0 <property_get_idle_since_hint+0x198>  // b.none
  42a6ac:	bl	407b20 <__stack_chk_fail@plt>
  42a6b0:	mov	w0, w1
  42a6b4:	ldp	x29, x30, [sp], #128
  42a6b8:	ret

000000000042a6bc <property_get_locked_hint>:
  42a6bc:	stp	x29, x30, [sp, #-96]!
  42a6c0:	mov	x29, sp
  42a6c4:	str	x0, [sp, #72]
  42a6c8:	str	x1, [sp, #64]
  42a6cc:	str	x2, [sp, #56]
  42a6d0:	str	x3, [sp, #48]
  42a6d4:	str	x4, [sp, #40]
  42a6d8:	str	x5, [sp, #32]
  42a6dc:	str	x6, [sp, #24]
  42a6e0:	ldr	x0, [sp, #32]
  42a6e4:	str	x0, [sp, #88]
  42a6e8:	ldr	x0, [sp, #72]
  42a6ec:	cmp	x0, #0x0
  42a6f0:	cset	w0, eq  // eq = none
  42a6f4:	and	w0, w0, #0xff
  42a6f8:	and	x0, x0, #0xff
  42a6fc:	cmp	x0, #0x0
  42a700:	b.eq	42a72c <property_get_locked_hint+0x70>  // b.none
  42a704:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a708:	add	x1, x0, #0x5bb
  42a70c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a710:	add	x4, x0, #0xf28
  42a714:	mov	w3, #0x97                  	// #151
  42a718:	mov	x2, x1
  42a71c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a720:	add	x1, x0, #0x5e0
  42a724:	mov	w0, #0x0                   	// #0
  42a728:	bl	407650 <log_assert_failed_realm@plt>
  42a72c:	ldr	x0, [sp, #40]
  42a730:	cmp	x0, #0x0
  42a734:	cset	w0, eq  // eq = none
  42a738:	and	w0, w0, #0xff
  42a73c:	and	x0, x0, #0xff
  42a740:	cmp	x0, #0x0
  42a744:	b.eq	42a770 <property_get_locked_hint+0xb4>  // b.none
  42a748:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a74c:	add	x1, x0, #0x5bb
  42a750:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a754:	add	x4, x0, #0xf28
  42a758:	mov	w3, #0x98                  	// #152
  42a75c:	mov	x2, x1
  42a760:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a764:	add	x1, x0, #0x5e8
  42a768:	mov	w0, #0x0                   	// #0
  42a76c:	bl	407650 <log_assert_failed_realm@plt>
  42a770:	ldr	x0, [sp, #88]
  42a774:	cmp	x0, #0x0
  42a778:	cset	w0, eq  // eq = none
  42a77c:	and	w0, w0, #0xff
  42a780:	and	x0, x0, #0xff
  42a784:	cmp	x0, #0x0
  42a788:	b.eq	42a7b4 <property_get_locked_hint+0xf8>  // b.none
  42a78c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a790:	add	x1, x0, #0x5bb
  42a794:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a798:	add	x4, x0, #0xf28
  42a79c:	mov	w3, #0x99                  	// #153
  42a7a0:	mov	x2, x1
  42a7a4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a7a8:	add	x1, x0, #0x5f0
  42a7ac:	mov	w0, #0x0                   	// #0
  42a7b0:	bl	407650 <log_assert_failed_realm@plt>
  42a7b4:	ldr	x0, [sp, #88]
  42a7b8:	bl	432db0 <session_get_locked_hint>
  42a7bc:	cmp	w0, #0x0
  42a7c0:	cset	w0, gt
  42a7c4:	and	w0, w0, #0xff
  42a7c8:	mov	w2, w0
  42a7cc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a7d0:	add	x1, x0, #0x620
  42a7d4:	ldr	x0, [sp, #40]
  42a7d8:	bl	407590 <sd_bus_message_append@plt>
  42a7dc:	ldp	x29, x30, [sp], #96
  42a7e0:	ret

000000000042a7e4 <bus_session_method_terminate>:
  42a7e4:	stp	x29, x30, [sp, #-64]!
  42a7e8:	mov	x29, sp
  42a7ec:	str	x0, [sp, #40]
  42a7f0:	str	x1, [sp, #32]
  42a7f4:	str	x2, [sp, #24]
  42a7f8:	ldr	x0, [sp, #32]
  42a7fc:	str	x0, [sp, #56]
  42a800:	ldr	x0, [sp, #40]
  42a804:	cmp	x0, #0x0
  42a808:	cset	w0, eq  // eq = none
  42a80c:	and	w0, w0, #0xff
  42a810:	and	x0, x0, #0xff
  42a814:	cmp	x0, #0x0
  42a818:	b.eq	42a844 <bus_session_method_terminate+0x60>  // b.none
  42a81c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a820:	add	x1, x0, #0x5bb
  42a824:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a828:	add	x4, x0, #0xf48
  42a82c:	mov	w3, #0xa2                  	// #162
  42a830:	mov	x2, x1
  42a834:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a838:	add	x1, x0, #0x640
  42a83c:	mov	w0, #0x0                   	// #0
  42a840:	bl	407650 <log_assert_failed_realm@plt>
  42a844:	ldr	x0, [sp, #56]
  42a848:	cmp	x0, #0x0
  42a84c:	cset	w0, eq  // eq = none
  42a850:	and	w0, w0, #0xff
  42a854:	and	x0, x0, #0xff
  42a858:	cmp	x0, #0x0
  42a85c:	b.eq	42a888 <bus_session_method_terminate+0xa4>  // b.none
  42a860:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a864:	add	x1, x0, #0x5bb
  42a868:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a86c:	add	x4, x0, #0xf48
  42a870:	mov	w3, #0xa3                  	// #163
  42a874:	mov	x2, x1
  42a878:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a87c:	add	x1, x0, #0x5f0
  42a880:	mov	w0, #0x0                   	// #0
  42a884:	bl	407650 <log_assert_failed_realm@plt>
  42a888:	ldr	x0, [sp, #56]
  42a88c:	ldr	x0, [x0, #40]
  42a890:	ldr	w1, [x0, #8]
  42a894:	ldr	x0, [sp, #56]
  42a898:	ldr	x0, [x0]
  42a89c:	add	x0, x0, #0x1b0
  42a8a0:	ldr	x7, [sp, #24]
  42a8a4:	mov	x6, x0
  42a8a8:	mov	w5, w1
  42a8ac:	mov	w4, #0x0                   	// #0
  42a8b0:	mov	x3, #0x0                   	// #0
  42a8b4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a8b8:	add	x2, x0, #0x648
  42a8bc:	mov	w1, #0x5                   	// #5
  42a8c0:	ldr	x0, [sp, #40]
  42a8c4:	bl	408350 <bus_verify_polkit_async@plt>
  42a8c8:	str	w0, [sp, #52]
  42a8cc:	ldr	w0, [sp, #52]
  42a8d0:	cmp	w0, #0x0
  42a8d4:	b.ge	42a8e0 <bus_session_method_terminate+0xfc>  // b.tcont
  42a8d8:	ldr	w0, [sp, #52]
  42a8dc:	b	42a924 <bus_session_method_terminate+0x140>
  42a8e0:	ldr	w0, [sp, #52]
  42a8e4:	cmp	w0, #0x0
  42a8e8:	b.ne	42a8f4 <bus_session_method_terminate+0x110>  // b.any
  42a8ec:	mov	w0, #0x1                   	// #1
  42a8f0:	b	42a924 <bus_session_method_terminate+0x140>
  42a8f4:	mov	w1, #0x1                   	// #1
  42a8f8:	ldr	x0, [sp, #56]
  42a8fc:	bl	432194 <session_stop>
  42a900:	str	w0, [sp, #52]
  42a904:	ldr	w0, [sp, #52]
  42a908:	cmp	w0, #0x0
  42a90c:	b.ge	42a918 <bus_session_method_terminate+0x134>  // b.tcont
  42a910:	ldr	w0, [sp, #52]
  42a914:	b	42a924 <bus_session_method_terminate+0x140>
  42a918:	mov	x1, #0x0                   	// #0
  42a91c:	ldr	x0, [sp, #40]
  42a920:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42a924:	ldp	x29, x30, [sp], #64
  42a928:	ret

000000000042a92c <bus_session_method_activate>:
  42a92c:	stp	x29, x30, [sp, #-64]!
  42a930:	mov	x29, sp
  42a934:	str	x0, [sp, #40]
  42a938:	str	x1, [sp, #32]
  42a93c:	str	x2, [sp, #24]
  42a940:	ldr	x0, [sp, #32]
  42a944:	str	x0, [sp, #56]
  42a948:	ldr	x0, [sp, #40]
  42a94c:	cmp	x0, #0x0
  42a950:	cset	w0, eq  // eq = none
  42a954:	and	w0, w0, #0xff
  42a958:	and	x0, x0, #0xff
  42a95c:	cmp	x0, #0x0
  42a960:	b.eq	42a98c <bus_session_method_activate+0x60>  // b.none
  42a964:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a968:	add	x1, x0, #0x5bb
  42a96c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a970:	add	x4, x0, #0xf68
  42a974:	mov	w3, #0xbe                  	// #190
  42a978:	mov	x2, x1
  42a97c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a980:	add	x1, x0, #0x640
  42a984:	mov	w0, #0x0                   	// #0
  42a988:	bl	407650 <log_assert_failed_realm@plt>
  42a98c:	ldr	x0, [sp, #56]
  42a990:	cmp	x0, #0x0
  42a994:	cset	w0, eq  // eq = none
  42a998:	and	w0, w0, #0xff
  42a99c:	and	x0, x0, #0xff
  42a9a0:	cmp	x0, #0x0
  42a9a4:	b.eq	42a9d0 <bus_session_method_activate+0xa4>  // b.none
  42a9a8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a9ac:	add	x1, x0, #0x5bb
  42a9b0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a9b4:	add	x4, x0, #0xf68
  42a9b8:	mov	w3, #0xbf                  	// #191
  42a9bc:	mov	x2, x1
  42a9c0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42a9c4:	add	x1, x0, #0x5f0
  42a9c8:	mov	w0, #0x0                   	// #0
  42a9cc:	bl	407650 <log_assert_failed_realm@plt>
  42a9d0:	ldr	x0, [sp, #56]
  42a9d4:	bl	431470 <session_activate>
  42a9d8:	str	w0, [sp, #52]
  42a9dc:	ldr	w0, [sp, #52]
  42a9e0:	cmp	w0, #0x0
  42a9e4:	b.ge	42a9f0 <bus_session_method_activate+0xc4>  // b.tcont
  42a9e8:	ldr	w0, [sp, #52]
  42a9ec:	b	42a9fc <bus_session_method_activate+0xd0>
  42a9f0:	mov	x1, #0x0                   	// #0
  42a9f4:	ldr	x0, [sp, #40]
  42a9f8:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42a9fc:	ldp	x29, x30, [sp], #64
  42aa00:	ret

000000000042aa04 <bus_session_method_lock>:
  42aa04:	stp	x29, x30, [sp, #-64]!
  42aa08:	mov	x29, sp
  42aa0c:	str	x0, [sp, #40]
  42aa10:	str	x1, [sp, #32]
  42aa14:	str	x2, [sp, #24]
  42aa18:	ldr	x0, [sp, #32]
  42aa1c:	str	x0, [sp, #56]
  42aa20:	ldr	x0, [sp, #40]
  42aa24:	cmp	x0, #0x0
  42aa28:	cset	w0, eq  // eq = none
  42aa2c:	and	w0, w0, #0xff
  42aa30:	and	x0, x0, #0xff
  42aa34:	cmp	x0, #0x0
  42aa38:	b.eq	42aa64 <bus_session_method_lock+0x60>  // b.none
  42aa3c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aa40:	add	x1, x0, #0x5bb
  42aa44:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aa48:	add	x4, x0, #0xf88
  42aa4c:	mov	w3, #0xcc                  	// #204
  42aa50:	mov	x2, x1
  42aa54:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aa58:	add	x1, x0, #0x640
  42aa5c:	mov	w0, #0x0                   	// #0
  42aa60:	bl	407650 <log_assert_failed_realm@plt>
  42aa64:	ldr	x0, [sp, #56]
  42aa68:	cmp	x0, #0x0
  42aa6c:	cset	w0, eq  // eq = none
  42aa70:	and	w0, w0, #0xff
  42aa74:	and	x0, x0, #0xff
  42aa78:	cmp	x0, #0x0
  42aa7c:	b.eq	42aaa8 <bus_session_method_lock+0xa4>  // b.none
  42aa80:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aa84:	add	x1, x0, #0x5bb
  42aa88:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aa8c:	add	x4, x0, #0xf88
  42aa90:	mov	w3, #0xcd                  	// #205
  42aa94:	mov	x2, x1
  42aa98:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aa9c:	add	x1, x0, #0x5f0
  42aaa0:	mov	w0, #0x0                   	// #0
  42aaa4:	bl	407650 <log_assert_failed_realm@plt>
  42aaa8:	ldr	x0, [sp, #56]
  42aaac:	ldr	x0, [x0, #40]
  42aab0:	ldr	w1, [x0, #8]
  42aab4:	ldr	x0, [sp, #56]
  42aab8:	ldr	x0, [x0]
  42aabc:	add	x0, x0, #0x1b0
  42aac0:	ldr	x7, [sp, #24]
  42aac4:	mov	x6, x0
  42aac8:	mov	w5, w1
  42aacc:	mov	w4, #0x0                   	// #0
  42aad0:	mov	x3, #0x0                   	// #0
  42aad4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aad8:	add	x2, x0, #0x668
  42aadc:	mov	w1, #0x15                  	// #21
  42aae0:	ldr	x0, [sp, #40]
  42aae4:	bl	408350 <bus_verify_polkit_async@plt>
  42aae8:	str	w0, [sp, #52]
  42aaec:	ldr	w0, [sp, #52]
  42aaf0:	cmp	w0, #0x0
  42aaf4:	b.ge	42ab00 <bus_session_method_lock+0xfc>  // b.tcont
  42aaf8:	ldr	w0, [sp, #52]
  42aafc:	b	42ab6c <bus_session_method_lock+0x168>
  42ab00:	ldr	w0, [sp, #52]
  42ab04:	cmp	w0, #0x0
  42ab08:	b.ne	42ab14 <bus_session_method_lock+0x110>  // b.any
  42ab0c:	mov	w0, #0x1                   	// #1
  42ab10:	b	42ab6c <bus_session_method_lock+0x168>
  42ab14:	ldr	x0, [sp, #40]
  42ab18:	bl	407510 <sd_bus_message_get_member@plt>
  42ab1c:	mov	x2, x0
  42ab20:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ab24:	add	x1, x0, #0x690
  42ab28:	mov	x0, x2
  42ab2c:	bl	407690 <strstr@plt>
  42ab30:	cmp	x0, #0x0
  42ab34:	cset	w0, ne  // ne = any
  42ab38:	and	w0, w0, #0xff
  42ab3c:	mov	w1, w0
  42ab40:	ldr	x0, [sp, #56]
  42ab44:	bl	42cc5c <session_send_lock>
  42ab48:	str	w0, [sp, #52]
  42ab4c:	ldr	w0, [sp, #52]
  42ab50:	cmp	w0, #0x0
  42ab54:	b.ge	42ab60 <bus_session_method_lock+0x15c>  // b.tcont
  42ab58:	ldr	w0, [sp, #52]
  42ab5c:	b	42ab6c <bus_session_method_lock+0x168>
  42ab60:	mov	x1, #0x0                   	// #0
  42ab64:	ldr	x0, [sp, #40]
  42ab68:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42ab6c:	ldp	x29, x30, [sp], #64
  42ab70:	ret

000000000042ab74 <method_set_idle_hint>:
  42ab74:	stp	x29, x30, [sp, #-112]!
  42ab78:	mov	x29, sp
  42ab7c:	str	x19, [sp, #16]
  42ab80:	str	x0, [sp, #56]
  42ab84:	str	x1, [sp, #48]
  42ab88:	str	x2, [sp, #40]
  42ab8c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ab90:	ldr	x0, [x0, #4024]
  42ab94:	ldr	x1, [x0]
  42ab98:	str	x1, [sp, #104]
  42ab9c:	mov	x1, #0x0                   	// #0
  42aba0:	str	xzr, [sp, #88]
  42aba4:	ldr	x0, [sp, #48]
  42aba8:	str	x0, [sp, #96]
  42abac:	ldr	x0, [sp, #56]
  42abb0:	cmp	x0, #0x0
  42abb4:	cset	w0, eq  // eq = none
  42abb8:	and	w0, w0, #0xff
  42abbc:	and	x0, x0, #0xff
  42abc0:	cmp	x0, #0x0
  42abc4:	b.eq	42abf0 <method_set_idle_hint+0x7c>  // b.none
  42abc8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42abcc:	add	x1, x0, #0x5bb
  42abd0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42abd4:	add	x4, x0, #0xfa0
  42abd8:	mov	w3, #0xea                  	// #234
  42abdc:	mov	x2, x1
  42abe0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42abe4:	add	x1, x0, #0x640
  42abe8:	mov	w0, #0x0                   	// #0
  42abec:	bl	407650 <log_assert_failed_realm@plt>
  42abf0:	ldr	x0, [sp, #96]
  42abf4:	cmp	x0, #0x0
  42abf8:	cset	w0, eq  // eq = none
  42abfc:	and	w0, w0, #0xff
  42ac00:	and	x0, x0, #0xff
  42ac04:	cmp	x0, #0x0
  42ac08:	b.eq	42ac34 <method_set_idle_hint+0xc0>  // b.none
  42ac0c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ac10:	add	x1, x0, #0x5bb
  42ac14:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ac18:	add	x4, x0, #0xfa0
  42ac1c:	mov	w3, #0xeb                  	// #235
  42ac20:	mov	x2, x1
  42ac24:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ac28:	add	x1, x0, #0x5f0
  42ac2c:	mov	w0, #0x0                   	// #0
  42ac30:	bl	407650 <log_assert_failed_realm@plt>
  42ac34:	add	x0, sp, #0x50
  42ac38:	mov	x2, x0
  42ac3c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ac40:	add	x1, x0, #0x620
  42ac44:	ldr	x0, [sp, #56]
  42ac48:	bl	407660 <sd_bus_message_read@plt>
  42ac4c:	str	w0, [sp, #84]
  42ac50:	ldr	w0, [sp, #84]
  42ac54:	cmp	w0, #0x0
  42ac58:	b.ge	42ac64 <method_set_idle_hint+0xf0>  // b.tcont
  42ac5c:	ldr	w19, [sp, #84]
  42ac60:	b	42ad24 <method_set_idle_hint+0x1b0>
  42ac64:	add	x0, sp, #0x58
  42ac68:	mov	x2, x0
  42ac6c:	mov	x1, #0x10                  	// #16
  42ac70:	ldr	x0, [sp, #56]
  42ac74:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  42ac78:	str	w0, [sp, #84]
  42ac7c:	ldr	w0, [sp, #84]
  42ac80:	cmp	w0, #0x0
  42ac84:	b.ge	42ac90 <method_set_idle_hint+0x11c>  // b.tcont
  42ac88:	ldr	w19, [sp, #84]
  42ac8c:	b	42ad24 <method_set_idle_hint+0x1b0>
  42ac90:	ldr	x0, [sp, #88]
  42ac94:	add	x1, sp, #0x4c
  42ac98:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  42ac9c:	str	w0, [sp, #84]
  42aca0:	ldr	w0, [sp, #84]
  42aca4:	cmp	w0, #0x0
  42aca8:	b.ge	42acb4 <method_set_idle_hint+0x140>  // b.tcont
  42acac:	ldr	w19, [sp, #84]
  42acb0:	b	42ad24 <method_set_idle_hint+0x1b0>
  42acb4:	ldr	w0, [sp, #76]
  42acb8:	cmp	w0, #0x0
  42acbc:	b.eq	42acf8 <method_set_idle_hint+0x184>  // b.none
  42acc0:	ldr	x0, [sp, #96]
  42acc4:	ldr	x0, [x0, #40]
  42acc8:	ldr	w1, [x0, #8]
  42accc:	ldr	w0, [sp, #76]
  42acd0:	cmp	w1, w0
  42acd4:	b.eq	42acf8 <method_set_idle_hint+0x184>  // b.none
  42acd8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42acdc:	add	x2, x0, #0x698
  42ace0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ace4:	add	x1, x0, #0x6c0
  42ace8:	ldr	x0, [sp, #40]
  42acec:	bl	407ae0 <sd_bus_error_setf@plt>
  42acf0:	mov	w19, w0
  42acf4:	b	42ad24 <method_set_idle_hint+0x1b0>
  42acf8:	ldr	w0, [sp, #80]
  42acfc:	cmp	w0, #0x0
  42ad00:	cset	w0, ne  // ne = any
  42ad04:	and	w0, w0, #0xff
  42ad08:	mov	w1, w0
  42ad0c:	ldr	x0, [sp, #96]
  42ad10:	bl	432c68 <session_set_idle_hint>
  42ad14:	mov	x1, #0x0                   	// #0
  42ad18:	ldr	x0, [sp, #56]
  42ad1c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42ad20:	mov	w19, w0
  42ad24:	add	x0, sp, #0x58
  42ad28:	bl	429860 <sd_bus_creds_unrefp>
  42ad2c:	mov	w1, w19
  42ad30:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ad34:	ldr	x0, [x0, #4024]
  42ad38:	ldr	x2, [sp, #104]
  42ad3c:	ldr	x0, [x0]
  42ad40:	eor	x0, x2, x0
  42ad44:	cmp	x0, #0x0
  42ad48:	b.eq	42ad50 <method_set_idle_hint+0x1dc>  // b.none
  42ad4c:	bl	407b20 <__stack_chk_fail@plt>
  42ad50:	mov	w0, w1
  42ad54:	ldr	x19, [sp, #16]
  42ad58:	ldp	x29, x30, [sp], #112
  42ad5c:	ret

000000000042ad60 <method_set_locked_hint>:
  42ad60:	stp	x29, x30, [sp, #-112]!
  42ad64:	mov	x29, sp
  42ad68:	str	x19, [sp, #16]
  42ad6c:	str	x0, [sp, #56]
  42ad70:	str	x1, [sp, #48]
  42ad74:	str	x2, [sp, #40]
  42ad78:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ad7c:	ldr	x0, [x0, #4024]
  42ad80:	ldr	x1, [x0]
  42ad84:	str	x1, [sp, #104]
  42ad88:	mov	x1, #0x0                   	// #0
  42ad8c:	str	xzr, [sp, #88]
  42ad90:	ldr	x0, [sp, #48]
  42ad94:	str	x0, [sp, #96]
  42ad98:	ldr	x0, [sp, #56]
  42ad9c:	cmp	x0, #0x0
  42ada0:	cset	w0, eq  // eq = none
  42ada4:	and	w0, w0, #0xff
  42ada8:	and	x0, x0, #0xff
  42adac:	cmp	x0, #0x0
  42adb0:	b.eq	42addc <method_set_locked_hint+0x7c>  // b.none
  42adb4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42adb8:	add	x1, x0, #0x5bb
  42adbc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42adc0:	add	x4, x0, #0xfb8
  42adc4:	mov	w3, #0x107                 	// #263
  42adc8:	mov	x2, x1
  42adcc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42add0:	add	x1, x0, #0x640
  42add4:	mov	w0, #0x0                   	// #0
  42add8:	bl	407650 <log_assert_failed_realm@plt>
  42addc:	ldr	x0, [sp, #96]
  42ade0:	cmp	x0, #0x0
  42ade4:	cset	w0, eq  // eq = none
  42ade8:	and	w0, w0, #0xff
  42adec:	and	x0, x0, #0xff
  42adf0:	cmp	x0, #0x0
  42adf4:	b.eq	42ae20 <method_set_locked_hint+0xc0>  // b.none
  42adf8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42adfc:	add	x1, x0, #0x5bb
  42ae00:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ae04:	add	x4, x0, #0xfb8
  42ae08:	mov	w3, #0x108                 	// #264
  42ae0c:	mov	x2, x1
  42ae10:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ae14:	add	x1, x0, #0x5f0
  42ae18:	mov	w0, #0x0                   	// #0
  42ae1c:	bl	407650 <log_assert_failed_realm@plt>
  42ae20:	add	x0, sp, #0x50
  42ae24:	mov	x2, x0
  42ae28:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ae2c:	add	x1, x0, #0x620
  42ae30:	ldr	x0, [sp, #56]
  42ae34:	bl	407660 <sd_bus_message_read@plt>
  42ae38:	str	w0, [sp, #84]
  42ae3c:	ldr	w0, [sp, #84]
  42ae40:	cmp	w0, #0x0
  42ae44:	b.ge	42ae50 <method_set_locked_hint+0xf0>  // b.tcont
  42ae48:	ldr	w19, [sp, #84]
  42ae4c:	b	42af10 <method_set_locked_hint+0x1b0>
  42ae50:	add	x0, sp, #0x58
  42ae54:	mov	x2, x0
  42ae58:	mov	x1, #0x10                  	// #16
  42ae5c:	ldr	x0, [sp, #56]
  42ae60:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  42ae64:	str	w0, [sp, #84]
  42ae68:	ldr	w0, [sp, #84]
  42ae6c:	cmp	w0, #0x0
  42ae70:	b.ge	42ae7c <method_set_locked_hint+0x11c>  // b.tcont
  42ae74:	ldr	w19, [sp, #84]
  42ae78:	b	42af10 <method_set_locked_hint+0x1b0>
  42ae7c:	ldr	x0, [sp, #88]
  42ae80:	add	x1, sp, #0x4c
  42ae84:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  42ae88:	str	w0, [sp, #84]
  42ae8c:	ldr	w0, [sp, #84]
  42ae90:	cmp	w0, #0x0
  42ae94:	b.ge	42aea0 <method_set_locked_hint+0x140>  // b.tcont
  42ae98:	ldr	w19, [sp, #84]
  42ae9c:	b	42af10 <method_set_locked_hint+0x1b0>
  42aea0:	ldr	w0, [sp, #76]
  42aea4:	cmp	w0, #0x0
  42aea8:	b.eq	42aee4 <method_set_locked_hint+0x184>  // b.none
  42aeac:	ldr	x0, [sp, #96]
  42aeb0:	ldr	x0, [x0, #40]
  42aeb4:	ldr	w1, [x0, #8]
  42aeb8:	ldr	w0, [sp, #76]
  42aebc:	cmp	w1, w0
  42aec0:	b.eq	42aee4 <method_set_locked_hint+0x184>  // b.none
  42aec4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aec8:	add	x2, x0, #0x6e8
  42aecc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aed0:	add	x1, x0, #0x6c0
  42aed4:	ldr	x0, [sp, #40]
  42aed8:	bl	407ae0 <sd_bus_error_setf@plt>
  42aedc:	mov	w19, w0
  42aee0:	b	42af10 <method_set_locked_hint+0x1b0>
  42aee4:	ldr	w0, [sp, #80]
  42aee8:	cmp	w0, #0x0
  42aeec:	cset	w0, ne  // ne = any
  42aef0:	and	w0, w0, #0xff
  42aef4:	mov	w1, w0
  42aef8:	ldr	x0, [sp, #96]
  42aefc:	bl	432e10 <session_set_locked_hint>
  42af00:	mov	x1, #0x0                   	// #0
  42af04:	ldr	x0, [sp, #56]
  42af08:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42af0c:	mov	w19, w0
  42af10:	add	x0, sp, #0x58
  42af14:	bl	429860 <sd_bus_creds_unrefp>
  42af18:	mov	w1, w19
  42af1c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42af20:	ldr	x0, [x0, #4024]
  42af24:	ldr	x2, [sp, #104]
  42af28:	ldr	x0, [x0]
  42af2c:	eor	x0, x2, x0
  42af30:	cmp	x0, #0x0
  42af34:	b.eq	42af3c <method_set_locked_hint+0x1dc>  // b.none
  42af38:	bl	407b20 <__stack_chk_fail@plt>
  42af3c:	mov	w0, w1
  42af40:	ldr	x19, [sp, #16]
  42af44:	ldp	x29, x30, [sp], #112
  42af48:	ret

000000000042af4c <bus_session_method_kill>:
  42af4c:	stp	x29, x30, [sp, #-96]!
  42af50:	mov	x29, sp
  42af54:	str	x0, [sp, #40]
  42af58:	str	x1, [sp, #32]
  42af5c:	str	x2, [sp, #24]
  42af60:	adrp	x0, 460000 <wordlist.10364+0x370>
  42af64:	ldr	x0, [x0, #4024]
  42af68:	ldr	x1, [x0]
  42af6c:	str	x1, [sp, #88]
  42af70:	mov	x1, #0x0                   	// #0
  42af74:	ldr	x0, [sp, #32]
  42af78:	str	x0, [sp, #80]
  42af7c:	ldr	x0, [sp, #40]
  42af80:	cmp	x0, #0x0
  42af84:	cset	w0, eq  // eq = none
  42af88:	and	w0, w0, #0xff
  42af8c:	and	x0, x0, #0xff
  42af90:	cmp	x0, #0x0
  42af94:	b.eq	42afc0 <bus_session_method_kill+0x74>  // b.none
  42af98:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42af9c:	add	x1, x0, #0x5bb
  42afa0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42afa4:	add	x4, x0, #0xfd0
  42afa8:	mov	w3, #0x125                 	// #293
  42afac:	mov	x2, x1
  42afb0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42afb4:	add	x1, x0, #0x640
  42afb8:	mov	w0, #0x0                   	// #0
  42afbc:	bl	407650 <log_assert_failed_realm@plt>
  42afc0:	ldr	x0, [sp, #80]
  42afc4:	cmp	x0, #0x0
  42afc8:	cset	w0, eq  // eq = none
  42afcc:	and	w0, w0, #0xff
  42afd0:	and	x0, x0, #0xff
  42afd4:	cmp	x0, #0x0
  42afd8:	b.eq	42b004 <bus_session_method_kill+0xb8>  // b.none
  42afdc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42afe0:	add	x1, x0, #0x5bb
  42afe4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42afe8:	add	x4, x0, #0xfd0
  42afec:	mov	w3, #0x126                 	// #294
  42aff0:	mov	x2, x1
  42aff4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42aff8:	add	x1, x0, #0x5f0
  42affc:	mov	w0, #0x0                   	// #0
  42b000:	bl	407650 <log_assert_failed_realm@plt>
  42b004:	add	x1, sp, #0x3c
  42b008:	add	x0, sp, #0x48
  42b00c:	mov	x3, x1
  42b010:	mov	x2, x0
  42b014:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b018:	add	x1, x0, #0x718
  42b01c:	ldr	x0, [sp, #40]
  42b020:	bl	407660 <sd_bus_message_read@plt>
  42b024:	str	w0, [sp, #68]
  42b028:	ldr	w0, [sp, #68]
  42b02c:	cmp	w0, #0x0
  42b030:	b.ge	42b03c <bus_session_method_kill+0xf0>  // b.tcont
  42b034:	ldr	w0, [sp, #68]
  42b038:	b	42b17c <bus_session_method_kill+0x230>
  42b03c:	ldr	x0, [sp, #72]
  42b040:	bl	4298c4 <isempty>
  42b044:	and	w0, w0, #0xff
  42b048:	cmp	w0, #0x0
  42b04c:	b.eq	42b05c <bus_session_method_kill+0x110>  // b.none
  42b050:	mov	w0, #0x1                   	// #1
  42b054:	str	w0, [sp, #64]
  42b058:	b	42b098 <bus_session_method_kill+0x14c>
  42b05c:	ldr	x0, [sp, #72]
  42b060:	bl	4345d8 <kill_who_from_string>
  42b064:	str	w0, [sp, #64]
  42b068:	ldr	w0, [sp, #64]
  42b06c:	cmp	w0, #0x0
  42b070:	b.ge	42b098 <bus_session_method_kill+0x14c>  // b.tcont
  42b074:	ldr	x0, [sp, #72]
  42b078:	mov	x3, x0
  42b07c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b080:	add	x2, x0, #0x720
  42b084:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b088:	add	x1, x0, #0x740
  42b08c:	ldr	x0, [sp, #24]
  42b090:	bl	407ae0 <sd_bus_error_setf@plt>
  42b094:	b	42b17c <bus_session_method_kill+0x230>
  42b098:	ldr	w0, [sp, #60]
  42b09c:	bl	429a94 <SIGNAL_VALID>
  42b0a0:	and	w0, w0, #0xff
  42b0a4:	eor	w0, w0, #0x1
  42b0a8:	and	w0, w0, #0xff
  42b0ac:	cmp	w0, #0x0
  42b0b0:	b.eq	42b0d8 <bus_session_method_kill+0x18c>  // b.none
  42b0b4:	ldr	w0, [sp, #60]
  42b0b8:	mov	w3, w0
  42b0bc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b0c0:	add	x2, x0, #0x768
  42b0c4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b0c8:	add	x1, x0, #0x740
  42b0cc:	ldr	x0, [sp, #24]
  42b0d0:	bl	407ae0 <sd_bus_error_setf@plt>
  42b0d4:	b	42b17c <bus_session_method_kill+0x230>
  42b0d8:	ldr	x0, [sp, #80]
  42b0dc:	ldr	x0, [x0, #40]
  42b0e0:	ldr	w1, [x0, #8]
  42b0e4:	ldr	x0, [sp, #80]
  42b0e8:	ldr	x0, [x0]
  42b0ec:	add	x0, x0, #0x1b0
  42b0f0:	ldr	x7, [sp, #24]
  42b0f4:	mov	x6, x0
  42b0f8:	mov	w5, w1
  42b0fc:	mov	w4, #0x0                   	// #0
  42b100:	mov	x3, #0x0                   	// #0
  42b104:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b108:	add	x2, x0, #0x648
  42b10c:	mov	w1, #0x5                   	// #5
  42b110:	ldr	x0, [sp, #40]
  42b114:	bl	408350 <bus_verify_polkit_async@plt>
  42b118:	str	w0, [sp, #68]
  42b11c:	ldr	w0, [sp, #68]
  42b120:	cmp	w0, #0x0
  42b124:	b.ge	42b130 <bus_session_method_kill+0x1e4>  // b.tcont
  42b128:	ldr	w0, [sp, #68]
  42b12c:	b	42b17c <bus_session_method_kill+0x230>
  42b130:	ldr	w0, [sp, #68]
  42b134:	cmp	w0, #0x0
  42b138:	b.ne	42b144 <bus_session_method_kill+0x1f8>  // b.any
  42b13c:	mov	w0, #0x1                   	// #1
  42b140:	b	42b17c <bus_session_method_kill+0x230>
  42b144:	ldr	w0, [sp, #60]
  42b148:	mov	w2, w0
  42b14c:	ldr	w1, [sp, #64]
  42b150:	ldr	x0, [sp, #80]
  42b154:	bl	43379c <session_kill>
  42b158:	str	w0, [sp, #68]
  42b15c:	ldr	w0, [sp, #68]
  42b160:	cmp	w0, #0x0
  42b164:	b.ge	42b170 <bus_session_method_kill+0x224>  // b.tcont
  42b168:	ldr	w0, [sp, #68]
  42b16c:	b	42b17c <bus_session_method_kill+0x230>
  42b170:	mov	x1, #0x0                   	// #0
  42b174:	ldr	x0, [sp, #40]
  42b178:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42b17c:	mov	w1, w0
  42b180:	adrp	x0, 460000 <wordlist.10364+0x370>
  42b184:	ldr	x0, [x0, #4024]
  42b188:	ldr	x2, [sp, #88]
  42b18c:	ldr	x0, [x0]
  42b190:	eor	x0, x2, x0
  42b194:	cmp	x0, #0x0
  42b198:	b.eq	42b1a0 <bus_session_method_kill+0x254>  // b.none
  42b19c:	bl	407b20 <__stack_chk_fail@plt>
  42b1a0:	mov	w0, w1
  42b1a4:	ldp	x29, x30, [sp], #96
  42b1a8:	ret

000000000042b1ac <method_take_control>:
  42b1ac:	stp	x29, x30, [sp, #-112]!
  42b1b0:	mov	x29, sp
  42b1b4:	str	x19, [sp, #16]
  42b1b8:	str	x0, [sp, #56]
  42b1bc:	str	x1, [sp, #48]
  42b1c0:	str	x2, [sp, #40]
  42b1c4:	adrp	x0, 460000 <wordlist.10364+0x370>
  42b1c8:	ldr	x0, [x0, #4024]
  42b1cc:	ldr	x1, [x0]
  42b1d0:	str	x1, [sp, #104]
  42b1d4:	mov	x1, #0x0                   	// #0
  42b1d8:	str	xzr, [sp, #88]
  42b1dc:	ldr	x0, [sp, #48]
  42b1e0:	str	x0, [sp, #96]
  42b1e4:	ldr	x0, [sp, #56]
  42b1e8:	cmp	x0, #0x0
  42b1ec:	cset	w0, eq  // eq = none
  42b1f0:	and	w0, w0, #0xff
  42b1f4:	and	x0, x0, #0xff
  42b1f8:	cmp	x0, #0x0
  42b1fc:	b.eq	42b228 <method_take_control+0x7c>  // b.none
  42b200:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b204:	add	x1, x0, #0x5bb
  42b208:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b20c:	add	x4, x0, #0xfe8
  42b210:	mov	w3, #0x152                 	// #338
  42b214:	mov	x2, x1
  42b218:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b21c:	add	x1, x0, #0x640
  42b220:	mov	w0, #0x0                   	// #0
  42b224:	bl	407650 <log_assert_failed_realm@plt>
  42b228:	ldr	x0, [sp, #96]
  42b22c:	cmp	x0, #0x0
  42b230:	cset	w0, eq  // eq = none
  42b234:	and	w0, w0, #0xff
  42b238:	and	x0, x0, #0xff
  42b23c:	cmp	x0, #0x0
  42b240:	b.eq	42b26c <method_take_control+0xc0>  // b.none
  42b244:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b248:	add	x1, x0, #0x5bb
  42b24c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b250:	add	x4, x0, #0xfe8
  42b254:	mov	w3, #0x153                 	// #339
  42b258:	mov	x2, x1
  42b25c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b260:	add	x1, x0, #0x5f0
  42b264:	mov	w0, #0x0                   	// #0
  42b268:	bl	407650 <log_assert_failed_realm@plt>
  42b26c:	add	x0, sp, #0x4c
  42b270:	mov	x2, x0
  42b274:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b278:	add	x1, x0, #0x620
  42b27c:	ldr	x0, [sp, #56]
  42b280:	bl	407660 <sd_bus_message_read@plt>
  42b284:	str	w0, [sp, #84]
  42b288:	ldr	w0, [sp, #84]
  42b28c:	cmp	w0, #0x0
  42b290:	b.ge	42b29c <method_take_control+0xf0>  // b.tcont
  42b294:	ldr	w19, [sp, #84]
  42b298:	b	42b390 <method_take_control+0x1e4>
  42b29c:	add	x0, sp, #0x58
  42b2a0:	mov	x2, x0
  42b2a4:	mov	x1, #0x10                  	// #16
  42b2a8:	ldr	x0, [sp, #56]
  42b2ac:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  42b2b0:	str	w0, [sp, #84]
  42b2b4:	ldr	w0, [sp, #84]
  42b2b8:	cmp	w0, #0x0
  42b2bc:	b.ge	42b2c8 <method_take_control+0x11c>  // b.tcont
  42b2c0:	ldr	w19, [sp, #84]
  42b2c4:	b	42b390 <method_take_control+0x1e4>
  42b2c8:	ldr	x0, [sp, #88]
  42b2cc:	add	x1, sp, #0x50
  42b2d0:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  42b2d4:	str	w0, [sp, #84]
  42b2d8:	ldr	w0, [sp, #84]
  42b2dc:	cmp	w0, #0x0
  42b2e0:	b.ge	42b2ec <method_take_control+0x140>  // b.tcont
  42b2e4:	ldr	w19, [sp, #84]
  42b2e8:	b	42b390 <method_take_control+0x1e4>
  42b2ec:	ldr	w0, [sp, #80]
  42b2f0:	cmp	w0, #0x0
  42b2f4:	b.eq	42b33c <method_take_control+0x190>  // b.none
  42b2f8:	ldr	w0, [sp, #76]
  42b2fc:	cmp	w0, #0x0
  42b300:	b.ne	42b31c <method_take_control+0x170>  // b.any
  42b304:	ldr	x0, [sp, #96]
  42b308:	ldr	x0, [x0, #40]
  42b30c:	ldr	w1, [x0, #8]
  42b310:	ldr	w0, [sp, #80]
  42b314:	cmp	w1, w0
  42b318:	b.eq	42b33c <method_take_control+0x190>  // b.none
  42b31c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b320:	add	x2, x0, #0x780
  42b324:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b328:	add	x1, x0, #0x6c0
  42b32c:	ldr	x0, [sp, #40]
  42b330:	bl	407ae0 <sd_bus_error_setf@plt>
  42b334:	mov	w19, w0
  42b338:	b	42b390 <method_take_control+0x1e4>
  42b33c:	ldr	x0, [sp, #56]
  42b340:	bl	407830 <sd_bus_message_get_sender@plt>
  42b344:	mov	x1, x0
  42b348:	ldr	w0, [sp, #76]
  42b34c:	cmp	w0, #0x0
  42b350:	cset	w0, ne  // ne = any
  42b354:	and	w0, w0, #0xff
  42b358:	mov	w3, #0x1                   	// #1
  42b35c:	mov	w2, w0
  42b360:	ldr	x0, [sp, #96]
  42b364:	bl	4341cc <session_set_controller>
  42b368:	str	w0, [sp, #84]
  42b36c:	ldr	w0, [sp, #84]
  42b370:	cmp	w0, #0x0
  42b374:	b.ge	42b380 <method_take_control+0x1d4>  // b.tcont
  42b378:	ldr	w19, [sp, #84]
  42b37c:	b	42b390 <method_take_control+0x1e4>
  42b380:	mov	x1, #0x0                   	// #0
  42b384:	ldr	x0, [sp, #56]
  42b388:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42b38c:	mov	w19, w0
  42b390:	add	x0, sp, #0x58
  42b394:	bl	429860 <sd_bus_creds_unrefp>
  42b398:	mov	w1, w19
  42b39c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42b3a0:	ldr	x0, [x0, #4024]
  42b3a4:	ldr	x2, [sp, #104]
  42b3a8:	ldr	x0, [x0]
  42b3ac:	eor	x0, x2, x0
  42b3b0:	cmp	x0, #0x0
  42b3b4:	b.eq	42b3bc <method_take_control+0x210>  // b.none
  42b3b8:	bl	407b20 <__stack_chk_fail@plt>
  42b3bc:	mov	w0, w1
  42b3c0:	ldr	x19, [sp, #16]
  42b3c4:	ldp	x29, x30, [sp], #112
  42b3c8:	ret

000000000042b3cc <method_release_control>:
  42b3cc:	stp	x29, x30, [sp, #-64]!
  42b3d0:	mov	x29, sp
  42b3d4:	str	x0, [sp, #40]
  42b3d8:	str	x1, [sp, #32]
  42b3dc:	str	x2, [sp, #24]
  42b3e0:	ldr	x0, [sp, #32]
  42b3e4:	str	x0, [sp, #56]
  42b3e8:	ldr	x0, [sp, #40]
  42b3ec:	cmp	x0, #0x0
  42b3f0:	cset	w0, eq  // eq = none
  42b3f4:	and	w0, w0, #0xff
  42b3f8:	and	x0, x0, #0xff
  42b3fc:	cmp	x0, #0x0
  42b400:	b.eq	42b42c <method_release_control+0x60>  // b.none
  42b404:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b408:	add	x1, x0, #0x5bb
  42b40c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42b410:	add	x4, x0, #0x0
  42b414:	mov	w3, #0x16e                 	// #366
  42b418:	mov	x2, x1
  42b41c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b420:	add	x1, x0, #0x640
  42b424:	mov	w0, #0x0                   	// #0
  42b428:	bl	407650 <log_assert_failed_realm@plt>
  42b42c:	ldr	x0, [sp, #56]
  42b430:	cmp	x0, #0x0
  42b434:	cset	w0, eq  // eq = none
  42b438:	and	w0, w0, #0xff
  42b43c:	and	x0, x0, #0xff
  42b440:	cmp	x0, #0x0
  42b444:	b.eq	42b470 <method_release_control+0xa4>  // b.none
  42b448:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b44c:	add	x1, x0, #0x5bb
  42b450:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42b454:	add	x4, x0, #0x0
  42b458:	mov	w3, #0x16f                 	// #367
  42b45c:	mov	x2, x1
  42b460:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b464:	add	x1, x0, #0x5f0
  42b468:	mov	w0, #0x0                   	// #0
  42b46c:	bl	407650 <log_assert_failed_realm@plt>
  42b470:	ldr	x0, [sp, #40]
  42b474:	bl	407830 <sd_bus_message_get_sender@plt>
  42b478:	mov	x1, x0
  42b47c:	ldr	x0, [sp, #56]
  42b480:	bl	433fb8 <session_is_controller>
  42b484:	and	w0, w0, #0xff
  42b488:	eor	w0, w0, #0x1
  42b48c:	and	w0, w0, #0xff
  42b490:	cmp	w0, #0x0
  42b494:	b.eq	42b4b4 <method_release_control+0xe8>  // b.none
  42b498:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b49c:	add	x2, x0, #0x7a8
  42b4a0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b4a4:	add	x1, x0, #0x7d0
  42b4a8:	ldr	x0, [sp, #24]
  42b4ac:	bl	407ae0 <sd_bus_error_setf@plt>
  42b4b0:	b	42b4c8 <method_release_control+0xfc>
  42b4b4:	ldr	x0, [sp, #56]
  42b4b8:	bl	434424 <session_drop_controller>
  42b4bc:	mov	x1, #0x0                   	// #0
  42b4c0:	ldr	x0, [sp, #40]
  42b4c4:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42b4c8:	ldp	x29, x30, [sp], #64
  42b4cc:	ret

000000000042b4d0 <method_take_device>:
  42b4d0:	stp	x29, x30, [sp, #-112]!
  42b4d4:	mov	x29, sp
  42b4d8:	str	x0, [sp, #40]
  42b4dc:	str	x1, [sp, #32]
  42b4e0:	str	x2, [sp, #24]
  42b4e4:	adrp	x0, 460000 <wordlist.10364+0x370>
  42b4e8:	ldr	x0, [x0, #4024]
  42b4ec:	ldr	x1, [x0]
  42b4f0:	str	x1, [sp, #104]
  42b4f4:	mov	x1, #0x0                   	// #0
  42b4f8:	ldr	x0, [sp, #32]
  42b4fc:	str	x0, [sp, #96]
  42b500:	ldr	x0, [sp, #40]
  42b504:	cmp	x0, #0x0
  42b508:	cset	w0, eq  // eq = none
  42b50c:	and	w0, w0, #0xff
  42b510:	and	x0, x0, #0xff
  42b514:	cmp	x0, #0x0
  42b518:	b.eq	42b544 <method_take_device+0x74>  // b.none
  42b51c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b520:	add	x1, x0, #0x5bb
  42b524:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42b528:	add	x4, x0, #0x18
  42b52c:	mov	w3, #0x180                 	// #384
  42b530:	mov	x2, x1
  42b534:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b538:	add	x1, x0, #0x640
  42b53c:	mov	w0, #0x0                   	// #0
  42b540:	bl	407650 <log_assert_failed_realm@plt>
  42b544:	ldr	x0, [sp, #96]
  42b548:	cmp	x0, #0x0
  42b54c:	cset	w0, eq  // eq = none
  42b550:	and	w0, w0, #0xff
  42b554:	and	x0, x0, #0xff
  42b558:	cmp	x0, #0x0
  42b55c:	b.eq	42b588 <method_take_device+0xb8>  // b.none
  42b560:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b564:	add	x1, x0, #0x5bb
  42b568:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42b56c:	add	x4, x0, #0x18
  42b570:	mov	w3, #0x181                 	// #385
  42b574:	mov	x2, x1
  42b578:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b57c:	add	x1, x0, #0x5f0
  42b580:	mov	w0, #0x0                   	// #0
  42b584:	bl	407650 <log_assert_failed_realm@plt>
  42b588:	add	x1, sp, #0x38
  42b58c:	add	x0, sp, #0x34
  42b590:	mov	x3, x1
  42b594:	mov	x2, x0
  42b598:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b59c:	add	x1, x0, #0x7f8
  42b5a0:	ldr	x0, [sp, #40]
  42b5a4:	bl	407660 <sd_bus_message_read@plt>
  42b5a8:	str	w0, [sp, #60]
  42b5ac:	ldr	w0, [sp, #60]
  42b5b0:	cmp	w0, #0x0
  42b5b4:	b.ge	42b5c0 <method_take_device+0xf0>  // b.tcont
  42b5b8:	ldr	w0, [sp, #60]
  42b5bc:	b	42b7a4 <method_take_device+0x2d4>
  42b5c0:	ldr	w0, [sp, #52]
  42b5c4:	str	w0, [sp, #64]
  42b5c8:	str	wzr, [sp, #68]
  42b5cc:	ldr	w1, [sp, #64]
  42b5d0:	ldr	w0, [sp, #68]
  42b5d4:	cmp	w1, w0
  42b5d8:	b.cc	42b5f0 <method_take_device+0x120>  // b.lo, b.ul, b.last
  42b5dc:	ldr	w0, [sp, #64]
  42b5e0:	cmp	w0, #0xfff
  42b5e4:	b.hi	42b5f0 <method_take_device+0x120>  // b.pmore
  42b5e8:	mov	w0, #0x1                   	// #1
  42b5ec:	b	42b5f4 <method_take_device+0x124>
  42b5f0:	mov	w0, #0x0                   	// #0
  42b5f4:	cmp	w0, #0x0
  42b5f8:	b.eq	42b63c <method_take_device+0x16c>  // b.none
  42b5fc:	ldr	w0, [sp, #56]
  42b600:	str	w0, [sp, #72]
  42b604:	str	wzr, [sp, #76]
  42b608:	ldr	w1, [sp, #72]
  42b60c:	ldr	w0, [sp, #76]
  42b610:	cmp	w1, w0
  42b614:	b.cc	42b630 <method_take_device+0x160>  // b.lo, b.ul, b.last
  42b618:	ldr	w1, [sp, #72]
  42b61c:	mov	w0, #0xfffff               	// #1048575
  42b620:	cmp	w1, w0
  42b624:	b.hi	42b630 <method_take_device+0x160>  // b.pmore
  42b628:	mov	w0, #0x1                   	// #1
  42b62c:	b	42b634 <method_take_device+0x164>
  42b630:	mov	w0, #0x0                   	// #0
  42b634:	cmp	w0, #0x0
  42b638:	b.ne	42b658 <method_take_device+0x188>  // b.any
  42b63c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b640:	add	x2, x0, #0x800
  42b644:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b648:	add	x1, x0, #0x740
  42b64c:	ldr	x0, [sp, #24]
  42b650:	bl	407ae0 <sd_bus_error_setf@plt>
  42b654:	b	42b7a4 <method_take_device+0x2d4>
  42b658:	ldr	x0, [sp, #40]
  42b65c:	bl	407830 <sd_bus_message_get_sender@plt>
  42b660:	mov	x1, x0
  42b664:	ldr	x0, [sp, #96]
  42b668:	bl	433fb8 <session_is_controller>
  42b66c:	and	w0, w0, #0xff
  42b670:	eor	w0, w0, #0x1
  42b674:	and	w0, w0, #0xff
  42b678:	cmp	w0, #0x0
  42b67c:	b.eq	42b69c <method_take_device+0x1cc>  // b.none
  42b680:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b684:	add	x2, x0, #0x7a8
  42b688:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b68c:	add	x1, x0, #0x7d0
  42b690:	ldr	x0, [sp, #24]
  42b694:	bl	407ae0 <sd_bus_error_setf@plt>
  42b698:	b	42b7a4 <method_take_device+0x2d4>
  42b69c:	ldr	w0, [sp, #52]
  42b6a0:	ldr	w1, [sp, #56]
  42b6a4:	bl	407b00 <gnu_dev_makedev@plt>
  42b6a8:	str	x0, [sp, #88]
  42b6ac:	ldr	x0, [sp, #96]
  42b6b0:	ldr	x0, [x0, #240]
  42b6b4:	add	x1, sp, #0x58
  42b6b8:	bl	4299ac <hashmap_get>
  42b6bc:	str	x0, [sp, #80]
  42b6c0:	ldr	x0, [sp, #80]
  42b6c4:	cmp	x0, #0x0
  42b6c8:	b.eq	42b6e8 <method_take_device+0x218>  // b.none
  42b6cc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b6d0:	add	x2, x0, #0x828
  42b6d4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b6d8:	add	x1, x0, #0x840
  42b6dc:	ldr	x0, [sp, #24]
  42b6e0:	bl	407ae0 <sd_bus_error_setf@plt>
  42b6e4:	b	42b7a4 <method_take_device+0x2d4>
  42b6e8:	ldr	x0, [sp, #88]
  42b6ec:	add	x1, sp, #0x50
  42b6f0:	mov	x3, x1
  42b6f4:	mov	w2, #0x1                   	// #1
  42b6f8:	mov	x1, x0
  42b6fc:	ldr	x0, [sp, #96]
  42b700:	bl	42e118 <session_device_new>
  42b704:	str	w0, [sp, #60]
  42b708:	ldr	w0, [sp, #60]
  42b70c:	cmp	w0, #0x0
  42b710:	b.ge	42b71c <method_take_device+0x24c>  // b.tcont
  42b714:	ldr	w0, [sp, #60]
  42b718:	b	42b7a4 <method_take_device+0x2d4>
  42b71c:	ldr	x0, [sp, #80]
  42b720:	bl	42ea4c <session_device_save>
  42b724:	str	w0, [sp, #60]
  42b728:	ldr	w0, [sp, #60]
  42b72c:	cmp	w0, #0x0
  42b730:	b.lt	42b78c <method_take_device+0x2bc>  // b.tstop
  42b734:	ldr	x0, [sp, #80]
  42b738:	ldr	w1, [x0, #32]
  42b73c:	ldr	x0, [sp, #80]
  42b740:	ldrb	w0, [x0, #36]
  42b744:	ubfx	x0, x0, #3, #1
  42b748:	and	w0, w0, #0xff
  42b74c:	eor	w0, w0, #0x1
  42b750:	and	w0, w0, #0xff
  42b754:	mov	w3, w0
  42b758:	mov	w2, w1
  42b75c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b760:	add	x1, x0, #0x868
  42b764:	ldr	x0, [sp, #40]
  42b768:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42b76c:	str	w0, [sp, #60]
  42b770:	ldr	w0, [sp, #60]
  42b774:	cmp	w0, #0x0
  42b778:	b.lt	42b794 <method_take_device+0x2c4>  // b.tstop
  42b77c:	ldr	x0, [sp, #96]
  42b780:	bl	42fde0 <session_save>
  42b784:	mov	w0, #0x1                   	// #1
  42b788:	b	42b7a4 <method_take_device+0x2d4>
  42b78c:	nop
  42b790:	b	42b798 <method_take_device+0x2c8>
  42b794:	nop
  42b798:	ldr	x0, [sp, #80]
  42b79c:	bl	42e424 <session_device_free>
  42b7a0:	ldr	w0, [sp, #60]
  42b7a4:	mov	w1, w0
  42b7a8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42b7ac:	ldr	x0, [x0, #4024]
  42b7b0:	ldr	x2, [sp, #104]
  42b7b4:	ldr	x0, [x0]
  42b7b8:	eor	x0, x2, x0
  42b7bc:	cmp	x0, #0x0
  42b7c0:	b.eq	42b7c8 <method_take_device+0x2f8>  // b.none
  42b7c4:	bl	407b20 <__stack_chk_fail@plt>
  42b7c8:	mov	w0, w1
  42b7cc:	ldp	x29, x30, [sp], #112
  42b7d0:	ret

000000000042b7d4 <method_release_device>:
  42b7d4:	stp	x29, x30, [sp, #-112]!
  42b7d8:	mov	x29, sp
  42b7dc:	str	x0, [sp, #40]
  42b7e0:	str	x1, [sp, #32]
  42b7e4:	str	x2, [sp, #24]
  42b7e8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42b7ec:	ldr	x0, [x0, #4024]
  42b7f0:	ldr	x1, [x0]
  42b7f4:	str	x1, [sp, #104]
  42b7f8:	mov	x1, #0x0                   	// #0
  42b7fc:	ldr	x0, [sp, #32]
  42b800:	str	x0, [sp, #88]
  42b804:	ldr	x0, [sp, #40]
  42b808:	cmp	x0, #0x0
  42b80c:	cset	w0, eq  // eq = none
  42b810:	and	w0, w0, #0xff
  42b814:	and	x0, x0, #0xff
  42b818:	cmp	x0, #0x0
  42b81c:	b.eq	42b848 <method_release_device+0x74>  // b.none
  42b820:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b824:	add	x1, x0, #0x5bb
  42b828:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42b82c:	add	x4, x0, #0x30
  42b830:	mov	w3, #0x1b2                 	// #434
  42b834:	mov	x2, x1
  42b838:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b83c:	add	x1, x0, #0x640
  42b840:	mov	w0, #0x0                   	// #0
  42b844:	bl	407650 <log_assert_failed_realm@plt>
  42b848:	ldr	x0, [sp, #88]
  42b84c:	cmp	x0, #0x0
  42b850:	cset	w0, eq  // eq = none
  42b854:	and	w0, w0, #0xff
  42b858:	and	x0, x0, #0xff
  42b85c:	cmp	x0, #0x0
  42b860:	b.eq	42b88c <method_release_device+0xb8>  // b.none
  42b864:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b868:	add	x1, x0, #0x5bb
  42b86c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42b870:	add	x4, x0, #0x30
  42b874:	mov	w3, #0x1b3                 	// #435
  42b878:	mov	x2, x1
  42b87c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b880:	add	x1, x0, #0x5f0
  42b884:	mov	w0, #0x0                   	// #0
  42b888:	bl	407650 <log_assert_failed_realm@plt>
  42b88c:	add	x1, sp, #0x38
  42b890:	add	x0, sp, #0x34
  42b894:	mov	x3, x1
  42b898:	mov	x2, x0
  42b89c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b8a0:	add	x1, x0, #0x7f8
  42b8a4:	ldr	x0, [sp, #40]
  42b8a8:	bl	407660 <sd_bus_message_read@plt>
  42b8ac:	str	w0, [sp, #60]
  42b8b0:	ldr	w0, [sp, #60]
  42b8b4:	cmp	w0, #0x0
  42b8b8:	b.ge	42b8c4 <method_release_device+0xf0>  // b.tcont
  42b8bc:	ldr	w0, [sp, #60]
  42b8c0:	b	42ba08 <method_release_device+0x234>
  42b8c4:	ldr	w0, [sp, #52]
  42b8c8:	str	w0, [sp, #64]
  42b8cc:	str	wzr, [sp, #68]
  42b8d0:	ldr	w1, [sp, #64]
  42b8d4:	ldr	w0, [sp, #68]
  42b8d8:	cmp	w1, w0
  42b8dc:	b.cc	42b8f4 <method_release_device+0x120>  // b.lo, b.ul, b.last
  42b8e0:	ldr	w0, [sp, #64]
  42b8e4:	cmp	w0, #0xfff
  42b8e8:	b.hi	42b8f4 <method_release_device+0x120>  // b.pmore
  42b8ec:	mov	w0, #0x1                   	// #1
  42b8f0:	b	42b8f8 <method_release_device+0x124>
  42b8f4:	mov	w0, #0x0                   	// #0
  42b8f8:	cmp	w0, #0x0
  42b8fc:	b.eq	42b940 <method_release_device+0x16c>  // b.none
  42b900:	ldr	w0, [sp, #56]
  42b904:	str	w0, [sp, #72]
  42b908:	str	wzr, [sp, #76]
  42b90c:	ldr	w1, [sp, #72]
  42b910:	ldr	w0, [sp, #76]
  42b914:	cmp	w1, w0
  42b918:	b.cc	42b934 <method_release_device+0x160>  // b.lo, b.ul, b.last
  42b91c:	ldr	w1, [sp, #72]
  42b920:	mov	w0, #0xfffff               	// #1048575
  42b924:	cmp	w1, w0
  42b928:	b.hi	42b934 <method_release_device+0x160>  // b.pmore
  42b92c:	mov	w0, #0x1                   	// #1
  42b930:	b	42b938 <method_release_device+0x164>
  42b934:	mov	w0, #0x0                   	// #0
  42b938:	cmp	w0, #0x0
  42b93c:	b.ne	42b95c <method_release_device+0x188>  // b.any
  42b940:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b944:	add	x2, x0, #0x800
  42b948:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b94c:	add	x1, x0, #0x740
  42b950:	ldr	x0, [sp, #24]
  42b954:	bl	407ae0 <sd_bus_error_setf@plt>
  42b958:	b	42ba08 <method_release_device+0x234>
  42b95c:	ldr	x0, [sp, #40]
  42b960:	bl	407830 <sd_bus_message_get_sender@plt>
  42b964:	mov	x1, x0
  42b968:	ldr	x0, [sp, #88]
  42b96c:	bl	433fb8 <session_is_controller>
  42b970:	and	w0, w0, #0xff
  42b974:	eor	w0, w0, #0x1
  42b978:	and	w0, w0, #0xff
  42b97c:	cmp	w0, #0x0
  42b980:	b.eq	42b9a0 <method_release_device+0x1cc>  // b.none
  42b984:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b988:	add	x2, x0, #0x7a8
  42b98c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b990:	add	x1, x0, #0x7d0
  42b994:	ldr	x0, [sp, #24]
  42b998:	bl	407ae0 <sd_bus_error_setf@plt>
  42b99c:	b	42ba08 <method_release_device+0x234>
  42b9a0:	ldr	w0, [sp, #52]
  42b9a4:	ldr	w1, [sp, #56]
  42b9a8:	bl	407b00 <gnu_dev_makedev@plt>
  42b9ac:	str	x0, [sp, #80]
  42b9b0:	ldr	x0, [sp, #88]
  42b9b4:	ldr	x0, [x0, #240]
  42b9b8:	add	x1, sp, #0x50
  42b9bc:	bl	4299ac <hashmap_get>
  42b9c0:	str	x0, [sp, #96]
  42b9c4:	ldr	x0, [sp, #96]
  42b9c8:	cmp	x0, #0x0
  42b9cc:	b.ne	42b9ec <method_release_device+0x218>  // b.any
  42b9d0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b9d4:	add	x2, x0, #0x870
  42b9d8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42b9dc:	add	x1, x0, #0x888
  42b9e0:	ldr	x0, [sp, #24]
  42b9e4:	bl	407ae0 <sd_bus_error_setf@plt>
  42b9e8:	b	42ba08 <method_release_device+0x234>
  42b9ec:	ldr	x0, [sp, #96]
  42b9f0:	bl	42e424 <session_device_free>
  42b9f4:	ldr	x0, [sp, #88]
  42b9f8:	bl	42fde0 <session_save>
  42b9fc:	mov	x1, #0x0                   	// #0
  42ba00:	ldr	x0, [sp, #40]
  42ba04:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42ba08:	mov	w1, w0
  42ba0c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ba10:	ldr	x0, [x0, #4024]
  42ba14:	ldr	x2, [sp, #104]
  42ba18:	ldr	x0, [x0]
  42ba1c:	eor	x0, x2, x0
  42ba20:	cmp	x0, #0x0
  42ba24:	b.eq	42ba2c <method_release_device+0x258>  // b.none
  42ba28:	bl	407b20 <__stack_chk_fail@plt>
  42ba2c:	mov	w0, w1
  42ba30:	ldp	x29, x30, [sp], #112
  42ba34:	ret

000000000042ba38 <method_pause_device_complete>:
  42ba38:	stp	x29, x30, [sp, #-112]!
  42ba3c:	mov	x29, sp
  42ba40:	str	x0, [sp, #40]
  42ba44:	str	x1, [sp, #32]
  42ba48:	str	x2, [sp, #24]
  42ba4c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ba50:	ldr	x0, [x0, #4024]
  42ba54:	ldr	x1, [x0]
  42ba58:	str	x1, [sp, #104]
  42ba5c:	mov	x1, #0x0                   	// #0
  42ba60:	ldr	x0, [sp, #32]
  42ba64:	str	x0, [sp, #88]
  42ba68:	ldr	x0, [sp, #40]
  42ba6c:	cmp	x0, #0x0
  42ba70:	cset	w0, eq  // eq = none
  42ba74:	and	w0, w0, #0xff
  42ba78:	and	x0, x0, #0xff
  42ba7c:	cmp	x0, #0x0
  42ba80:	b.eq	42baac <method_pause_device_complete+0x74>  // b.none
  42ba84:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ba88:	add	x1, x0, #0x5bb
  42ba8c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ba90:	add	x4, x0, #0x48
  42ba94:	mov	w3, #0x1d1                 	// #465
  42ba98:	mov	x2, x1
  42ba9c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42baa0:	add	x1, x0, #0x640
  42baa4:	mov	w0, #0x0                   	// #0
  42baa8:	bl	407650 <log_assert_failed_realm@plt>
  42baac:	ldr	x0, [sp, #88]
  42bab0:	cmp	x0, #0x0
  42bab4:	cset	w0, eq  // eq = none
  42bab8:	and	w0, w0, #0xff
  42babc:	and	x0, x0, #0xff
  42bac0:	cmp	x0, #0x0
  42bac4:	b.eq	42baf0 <method_pause_device_complete+0xb8>  // b.none
  42bac8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bacc:	add	x1, x0, #0x5bb
  42bad0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42bad4:	add	x4, x0, #0x48
  42bad8:	mov	w3, #0x1d2                 	// #466
  42badc:	mov	x2, x1
  42bae0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bae4:	add	x1, x0, #0x5f0
  42bae8:	mov	w0, #0x0                   	// #0
  42baec:	bl	407650 <log_assert_failed_realm@plt>
  42baf0:	add	x1, sp, #0x38
  42baf4:	add	x0, sp, #0x34
  42baf8:	mov	x3, x1
  42bafc:	mov	x2, x0
  42bb00:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bb04:	add	x1, x0, #0x7f8
  42bb08:	ldr	x0, [sp, #40]
  42bb0c:	bl	407660 <sd_bus_message_read@plt>
  42bb10:	str	w0, [sp, #60]
  42bb14:	ldr	w0, [sp, #60]
  42bb18:	cmp	w0, #0x0
  42bb1c:	b.ge	42bb28 <method_pause_device_complete+0xf0>  // b.tcont
  42bb20:	ldr	w0, [sp, #60]
  42bb24:	b	42bc64 <method_pause_device_complete+0x22c>
  42bb28:	ldr	w0, [sp, #52]
  42bb2c:	str	w0, [sp, #64]
  42bb30:	str	wzr, [sp, #68]
  42bb34:	ldr	w1, [sp, #64]
  42bb38:	ldr	w0, [sp, #68]
  42bb3c:	cmp	w1, w0
  42bb40:	b.cc	42bb58 <method_pause_device_complete+0x120>  // b.lo, b.ul, b.last
  42bb44:	ldr	w0, [sp, #64]
  42bb48:	cmp	w0, #0xfff
  42bb4c:	b.hi	42bb58 <method_pause_device_complete+0x120>  // b.pmore
  42bb50:	mov	w0, #0x1                   	// #1
  42bb54:	b	42bb5c <method_pause_device_complete+0x124>
  42bb58:	mov	w0, #0x0                   	// #0
  42bb5c:	cmp	w0, #0x0
  42bb60:	b.eq	42bba4 <method_pause_device_complete+0x16c>  // b.none
  42bb64:	ldr	w0, [sp, #56]
  42bb68:	str	w0, [sp, #72]
  42bb6c:	str	wzr, [sp, #76]
  42bb70:	ldr	w1, [sp, #72]
  42bb74:	ldr	w0, [sp, #76]
  42bb78:	cmp	w1, w0
  42bb7c:	b.cc	42bb98 <method_pause_device_complete+0x160>  // b.lo, b.ul, b.last
  42bb80:	ldr	w1, [sp, #72]
  42bb84:	mov	w0, #0xfffff               	// #1048575
  42bb88:	cmp	w1, w0
  42bb8c:	b.hi	42bb98 <method_pause_device_complete+0x160>  // b.pmore
  42bb90:	mov	w0, #0x1                   	// #1
  42bb94:	b	42bb9c <method_pause_device_complete+0x164>
  42bb98:	mov	w0, #0x0                   	// #0
  42bb9c:	cmp	w0, #0x0
  42bba0:	b.ne	42bbc0 <method_pause_device_complete+0x188>  // b.any
  42bba4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bba8:	add	x2, x0, #0x800
  42bbac:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bbb0:	add	x1, x0, #0x740
  42bbb4:	ldr	x0, [sp, #24]
  42bbb8:	bl	407ae0 <sd_bus_error_setf@plt>
  42bbbc:	b	42bc64 <method_pause_device_complete+0x22c>
  42bbc0:	ldr	x0, [sp, #40]
  42bbc4:	bl	407830 <sd_bus_message_get_sender@plt>
  42bbc8:	mov	x1, x0
  42bbcc:	ldr	x0, [sp, #88]
  42bbd0:	bl	433fb8 <session_is_controller>
  42bbd4:	and	w0, w0, #0xff
  42bbd8:	eor	w0, w0, #0x1
  42bbdc:	and	w0, w0, #0xff
  42bbe0:	cmp	w0, #0x0
  42bbe4:	b.eq	42bc04 <method_pause_device_complete+0x1cc>  // b.none
  42bbe8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bbec:	add	x2, x0, #0x7a8
  42bbf0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bbf4:	add	x1, x0, #0x7d0
  42bbf8:	ldr	x0, [sp, #24]
  42bbfc:	bl	407ae0 <sd_bus_error_setf@plt>
  42bc00:	b	42bc64 <method_pause_device_complete+0x22c>
  42bc04:	ldr	w0, [sp, #52]
  42bc08:	ldr	w1, [sp, #56]
  42bc0c:	bl	407b00 <gnu_dev_makedev@plt>
  42bc10:	str	x0, [sp, #80]
  42bc14:	ldr	x0, [sp, #88]
  42bc18:	ldr	x0, [x0, #240]
  42bc1c:	add	x1, sp, #0x50
  42bc20:	bl	4299ac <hashmap_get>
  42bc24:	str	x0, [sp, #96]
  42bc28:	ldr	x0, [sp, #96]
  42bc2c:	cmp	x0, #0x0
  42bc30:	b.ne	42bc50 <method_pause_device_complete+0x218>  // b.any
  42bc34:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bc38:	add	x2, x0, #0x870
  42bc3c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bc40:	add	x1, x0, #0x888
  42bc44:	ldr	x0, [sp, #24]
  42bc48:	bl	407ae0 <sd_bus_error_setf@plt>
  42bc4c:	b	42bc64 <method_pause_device_complete+0x22c>
  42bc50:	ldr	x0, [sp, #96]
  42bc54:	bl	42e654 <session_device_complete_pause>
  42bc58:	mov	x1, #0x0                   	// #0
  42bc5c:	ldr	x0, [sp, #40]
  42bc60:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42bc64:	mov	w1, w0
  42bc68:	adrp	x0, 460000 <wordlist.10364+0x370>
  42bc6c:	ldr	x0, [x0, #4024]
  42bc70:	ldr	x2, [sp, #104]
  42bc74:	ldr	x0, [x0]
  42bc78:	eor	x0, x2, x0
  42bc7c:	cmp	x0, #0x0
  42bc80:	b.eq	42bc88 <method_pause_device_complete+0x250>  // b.none
  42bc84:	bl	407b20 <__stack_chk_fail@plt>
  42bc88:	mov	w0, w1
  42bc8c:	ldp	x29, x30, [sp], #112
  42bc90:	ret

000000000042bc94 <method_set_brightness>:
  42bc94:	stp	x29, x30, [sp, #-160]!
  42bc98:	mov	x29, sp
  42bc9c:	str	x19, [sp, #16]
  42bca0:	str	x0, [sp, #56]
  42bca4:	str	x1, [sp, #48]
  42bca8:	str	x2, [sp, #40]
  42bcac:	adrp	x0, 460000 <wordlist.10364+0x370>
  42bcb0:	ldr	x0, [x0, #4024]
  42bcb4:	ldr	x1, [x0]
  42bcb8:	str	x1, [sp, #152]
  42bcbc:	mov	x1, #0x0                   	// #0
  42bcc0:	str	xzr, [sp, #80]
  42bcc4:	str	xzr, [sp, #88]
  42bcc8:	ldr	x0, [sp, #48]
  42bccc:	str	x0, [sp, #120]
  42bcd0:	ldr	x0, [sp, #56]
  42bcd4:	cmp	x0, #0x0
  42bcd8:	cset	w0, eq  // eq = none
  42bcdc:	and	w0, w0, #0xff
  42bce0:	and	x0, x0, #0xff
  42bce4:	cmp	x0, #0x0
  42bce8:	b.eq	42bd14 <method_set_brightness+0x80>  // b.none
  42bcec:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bcf0:	add	x1, x0, #0x5bb
  42bcf4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42bcf8:	add	x4, x0, #0x68
  42bcfc:	mov	w3, #0x1f1                 	// #497
  42bd00:	mov	x2, x1
  42bd04:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bd08:	add	x1, x0, #0x640
  42bd0c:	mov	w0, #0x0                   	// #0
  42bd10:	bl	407650 <log_assert_failed_realm@plt>
  42bd14:	ldr	x0, [sp, #120]
  42bd18:	cmp	x0, #0x0
  42bd1c:	cset	w0, eq  // eq = none
  42bd20:	and	w0, w0, #0xff
  42bd24:	and	x0, x0, #0xff
  42bd28:	cmp	x0, #0x0
  42bd2c:	b.eq	42bd58 <method_set_brightness+0xc4>  // b.none
  42bd30:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bd34:	add	x1, x0, #0x5bb
  42bd38:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42bd3c:	add	x4, x0, #0x68
  42bd40:	mov	w3, #0x1f2                 	// #498
  42bd44:	mov	x2, x1
  42bd48:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bd4c:	add	x1, x0, #0x5f0
  42bd50:	mov	w0, #0x0                   	// #0
  42bd54:	bl	407650 <log_assert_failed_realm@plt>
  42bd58:	add	x2, sp, #0x44
  42bd5c:	add	x1, sp, #0x68
  42bd60:	add	x0, sp, #0x60
  42bd64:	mov	x4, x2
  42bd68:	mov	x3, x1
  42bd6c:	mov	x2, x0
  42bd70:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bd74:	add	x1, x0, #0x8b0
  42bd78:	ldr	x0, [sp, #56]
  42bd7c:	bl	407660 <sd_bus_message_read@plt>
  42bd80:	str	w0, [sp, #76]
  42bd84:	ldr	w0, [sp, #76]
  42bd88:	cmp	w0, #0x0
  42bd8c:	b.ge	42bd98 <method_set_brightness+0x104>  // b.tcont
  42bd90:	ldr	w19, [sp, #76]
  42bd94:	b	42c048 <method_set_brightness+0x3b4>
  42bd98:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  42bd9c:	add	x0, x0, #0x78
  42bda0:	add	x2, sp, #0x80
  42bda4:	mov	x3, x0
  42bda8:	ldp	x0, x1, [x3]
  42bdac:	stp	x0, x1, [x2]
  42bdb0:	ldr	x0, [x3, #16]
  42bdb4:	str	x0, [x2, #16]
  42bdb8:	ldr	x1, [sp, #96]
  42bdbc:	add	x0, sp, #0x80
  42bdc0:	bl	407cb0 <strv_find@plt>
  42bdc4:	cmp	x0, #0x0
  42bdc8:	b.ne	42bdf4 <method_set_brightness+0x160>  // b.any
  42bdcc:	ldr	x0, [sp, #96]
  42bdd0:	mov	x3, x0
  42bdd4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bdd8:	add	x2, x0, #0x8b8
  42bddc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bde0:	add	x1, x0, #0x900
  42bde4:	ldr	x0, [sp, #40]
  42bde8:	bl	407ae0 <sd_bus_error_setf@plt>
  42bdec:	mov	w19, w0
  42bdf0:	b	42c048 <method_set_brightness+0x3b4>
  42bdf4:	ldr	x0, [sp, #104]
  42bdf8:	bl	407090 <filename_is_valid@plt>
  42bdfc:	and	w0, w0, #0xff
  42be00:	eor	w0, w0, #0x1
  42be04:	and	w0, w0, #0xff
  42be08:	cmp	w0, #0x0
  42be0c:	b.eq	42be38 <method_set_brightness+0x1a4>  // b.none
  42be10:	ldr	x0, [sp, #104]
  42be14:	mov	x3, x0
  42be18:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42be1c:	add	x2, x0, #0x928
  42be20:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42be24:	add	x1, x0, #0x740
  42be28:	ldr	x0, [sp, #40]
  42be2c:	bl	407ae0 <sd_bus_error_setf@plt>
  42be30:	mov	w19, w0
  42be34:	b	42c048 <method_set_brightness+0x3b4>
  42be38:	ldr	x0, [sp, #120]
  42be3c:	ldr	x0, [x0, #136]
  42be40:	cmp	x0, #0x0
  42be44:	b.ne	42be68 <method_set_brightness+0x1d4>  // b.any
  42be48:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42be4c:	add	x2, x0, #0x950
  42be50:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42be54:	add	x1, x0, #0x978
  42be58:	ldr	x0, [sp, #40]
  42be5c:	bl	407ae0 <sd_bus_error_setf@plt>
  42be60:	mov	w19, w0
  42be64:	b	42c048 <method_set_brightness+0x3b4>
  42be68:	ldr	x0, [sp, #120]
  42be6c:	ldr	x0, [x0, #136]
  42be70:	ldr	x0, [x0, #32]
  42be74:	ldr	x1, [sp, #120]
  42be78:	cmp	x1, x0
  42be7c:	b.eq	42bea0 <method_set_brightness+0x20c>  // b.none
  42be80:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42be84:	add	x2, x0, #0x9a0
  42be88:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42be8c:	add	x1, x0, #0x978
  42be90:	ldr	x0, [sp, #40]
  42be94:	bl	407ae0 <sd_bus_error_setf@plt>
  42be98:	mov	w19, w0
  42be9c:	b	42c048 <method_set_brightness+0x3b4>
  42bea0:	add	x0, sp, #0x50
  42bea4:	mov	x2, x0
  42bea8:	mov	x1, #0x10                  	// #16
  42beac:	ldr	x0, [sp, #56]
  42beb0:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  42beb4:	str	w0, [sp, #76]
  42beb8:	ldr	w0, [sp, #76]
  42bebc:	cmp	w0, #0x0
  42bec0:	b.ge	42becc <method_set_brightness+0x238>  // b.tcont
  42bec4:	ldr	w19, [sp, #76]
  42bec8:	b	42c048 <method_set_brightness+0x3b4>
  42becc:	ldr	x0, [sp, #80]
  42bed0:	add	x1, sp, #0x48
  42bed4:	bl	406fe0 <sd_bus_creds_get_euid@plt>
  42bed8:	str	w0, [sp, #76]
  42bedc:	ldr	w0, [sp, #76]
  42bee0:	cmp	w0, #0x0
  42bee4:	b.ge	42bef0 <method_set_brightness+0x25c>  // b.tcont
  42bee8:	ldr	w19, [sp, #76]
  42beec:	b	42c048 <method_set_brightness+0x3b4>
  42bef0:	ldr	w0, [sp, #72]
  42bef4:	cmp	w0, #0x0
  42bef8:	b.eq	42bf34 <method_set_brightness+0x2a0>  // b.none
  42befc:	ldr	x0, [sp, #120]
  42bf00:	ldr	x0, [x0, #40]
  42bf04:	ldr	w1, [x0, #8]
  42bf08:	ldr	w0, [sp, #72]
  42bf0c:	cmp	w1, w0
  42bf10:	b.eq	42bf34 <method_set_brightness+0x2a0>  // b.none
  42bf14:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bf18:	add	x2, x0, #0x9c8
  42bf1c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bf20:	add	x1, x0, #0x6c0
  42bf24:	ldr	x0, [sp, #40]
  42bf28:	bl	407ae0 <sd_bus_error_setf@plt>
  42bf2c:	mov	w19, w0
  42bf30:	b	42c048 <method_set_brightness+0x3b4>
  42bf34:	ldr	x1, [sp, #96]
  42bf38:	ldr	x2, [sp, #104]
  42bf3c:	add	x0, sp, #0x58
  42bf40:	bl	4074e0 <sd_device_new_from_subsystem_sysname@plt>
  42bf44:	str	w0, [sp, #76]
  42bf48:	ldr	w0, [sp, #76]
  42bf4c:	cmp	w0, #0x0
  42bf50:	b.ge	42bf80 <method_set_brightness+0x2ec>  // b.tcont
  42bf54:	ldr	x0, [sp, #96]
  42bf58:	ldr	x1, [sp, #104]
  42bf5c:	mov	x4, x1
  42bf60:	mov	x3, x0
  42bf64:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bf68:	add	x2, x0, #0x9f8
  42bf6c:	ldr	w1, [sp, #76]
  42bf70:	ldr	x0, [sp, #40]
  42bf74:	bl	407330 <sd_bus_error_set_errnof@plt>
  42bf78:	mov	w19, w0
  42bf7c:	b	42c048 <method_set_brightness+0x3b4>
  42bf80:	ldr	x3, [sp, #88]
  42bf84:	add	x0, sp, #0x70
  42bf88:	mov	x2, x0
  42bf8c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bf90:	add	x1, x0, #0xa18
  42bf94:	mov	x0, x3
  42bf98:	bl	406fd0 <sd_device_get_property_value@plt>
  42bf9c:	cmp	w0, #0x0
  42bfa0:	b.lt	42c014 <method_set_brightness+0x380>  // b.tstop
  42bfa4:	ldr	x2, [sp, #112]
  42bfa8:	ldr	x0, [sp, #120]
  42bfac:	ldr	x0, [x0, #136]
  42bfb0:	ldr	x0, [x0, #8]
  42bfb4:	mov	x1, x0
  42bfb8:	mov	x0, x2
  42bfbc:	bl	429894 <streq_ptr>
  42bfc0:	and	w0, w0, #0xff
  42bfc4:	eor	w0, w0, #0x1
  42bfc8:	and	w0, w0, #0xff
  42bfcc:	cmp	w0, #0x0
  42bfd0:	b.eq	42c014 <method_set_brightness+0x380>  // b.none
  42bfd4:	ldr	x1, [sp, #96]
  42bfd8:	ldr	x2, [sp, #104]
  42bfdc:	ldr	x0, [sp, #120]
  42bfe0:	ldr	x0, [x0, #136]
  42bfe4:	ldr	x0, [x0, #8]
  42bfe8:	mov	x5, x0
  42bfec:	mov	x4, x2
  42bff0:	mov	x3, x1
  42bff4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42bff8:	add	x2, x0, #0xa20
  42bffc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c000:	add	x1, x0, #0x978
  42c004:	ldr	x0, [sp, #40]
  42c008:	bl	407ae0 <sd_bus_error_setf@plt>
  42c00c:	mov	w19, w0
  42c010:	b	42c048 <method_set_brightness+0x3b4>
  42c014:	ldr	x0, [sp, #120]
  42c018:	ldr	x0, [x0]
  42c01c:	ldr	x1, [sp, #88]
  42c020:	ldr	w2, [sp, #68]
  42c024:	ldr	x3, [sp, #56]
  42c028:	bl	43bc34 <manager_write_brightness>
  42c02c:	str	w0, [sp, #76]
  42c030:	ldr	w0, [sp, #76]
  42c034:	cmp	w0, #0x0
  42c038:	b.ge	42c044 <method_set_brightness+0x3b0>  // b.tcont
  42c03c:	ldr	w19, [sp, #76]
  42c040:	b	42c048 <method_set_brightness+0x3b4>
  42c044:	mov	w19, #0x1                   	// #1
  42c048:	add	x0, sp, #0x58
  42c04c:	bl	429a2c <sd_device_unrefp>
  42c050:	add	x0, sp, #0x50
  42c054:	bl	429860 <sd_bus_creds_unrefp>
  42c058:	mov	w1, w19
  42c05c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c060:	ldr	x0, [x0, #4024]
  42c064:	ldr	x2, [sp, #152]
  42c068:	ldr	x0, [x0]
  42c06c:	eor	x0, x2, x0
  42c070:	cmp	x0, #0x0
  42c074:	b.eq	42c07c <method_set_brightness+0x3e8>  // b.none
  42c078:	bl	407b20 <__stack_chk_fail@plt>
  42c07c:	mov	w0, w1
  42c080:	ldr	x19, [sp, #16]
  42c084:	ldp	x29, x30, [sp], #160
  42c088:	ret

000000000042c08c <session_object_find>:
  42c08c:	stp	x29, x30, [sp, #-144]!
  42c090:	mov	x29, sp
  42c094:	str	x19, [sp, #16]
  42c098:	str	x0, [sp, #72]
  42c09c:	str	x1, [sp, #64]
  42c0a0:	str	x2, [sp, #56]
  42c0a4:	str	x3, [sp, #48]
  42c0a8:	str	x4, [sp, #40]
  42c0ac:	str	x5, [sp, #32]
  42c0b0:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c0b4:	ldr	x0, [x0, #4024]
  42c0b8:	ldr	x1, [x0]
  42c0bc:	str	x1, [sp, #136]
  42c0c0:	mov	x1, #0x0                   	// #0
  42c0c4:	str	xzr, [sp, #96]
  42c0c8:	ldr	x0, [sp, #48]
  42c0cc:	str	x0, [sp, #112]
  42c0d0:	ldr	x0, [sp, #72]
  42c0d4:	cmp	x0, #0x0
  42c0d8:	cset	w0, eq  // eq = none
  42c0dc:	and	w0, w0, #0xff
  42c0e0:	and	x0, x0, #0xff
  42c0e4:	cmp	x0, #0x0
  42c0e8:	b.eq	42c114 <session_object_find+0x88>  // b.none
  42c0ec:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c0f0:	add	x1, x0, #0x5bb
  42c0f4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c0f8:	add	x4, x0, #0x80
  42c0fc:	mov	w3, #0x255                 	// #597
  42c100:	mov	x2, x1
  42c104:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c108:	add	x1, x0, #0x5e0
  42c10c:	mov	w0, #0x0                   	// #0
  42c110:	bl	407650 <log_assert_failed_realm@plt>
  42c114:	ldr	x0, [sp, #64]
  42c118:	cmp	x0, #0x0
  42c11c:	cset	w0, eq  // eq = none
  42c120:	and	w0, w0, #0xff
  42c124:	and	x0, x0, #0xff
  42c128:	cmp	x0, #0x0
  42c12c:	b.eq	42c158 <session_object_find+0xcc>  // b.none
  42c130:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c134:	add	x1, x0, #0x5bb
  42c138:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c13c:	add	x4, x0, #0x80
  42c140:	mov	w3, #0x256                 	// #598
  42c144:	mov	x2, x1
  42c148:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c14c:	add	x1, x0, #0xc50
  42c150:	mov	w0, #0x0                   	// #0
  42c154:	bl	407650 <log_assert_failed_realm@plt>
  42c158:	ldr	x0, [sp, #56]
  42c15c:	cmp	x0, #0x0
  42c160:	cset	w0, eq  // eq = none
  42c164:	and	w0, w0, #0xff
  42c168:	and	x0, x0, #0xff
  42c16c:	cmp	x0, #0x0
  42c170:	b.eq	42c19c <session_object_find+0x110>  // b.none
  42c174:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c178:	add	x1, x0, #0x5bb
  42c17c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c180:	add	x4, x0, #0x80
  42c184:	mov	w3, #0x257                 	// #599
  42c188:	mov	x2, x1
  42c18c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c190:	add	x1, x0, #0xc58
  42c194:	mov	w0, #0x0                   	// #0
  42c198:	bl	407650 <log_assert_failed_realm@plt>
  42c19c:	ldr	x0, [sp, #40]
  42c1a0:	cmp	x0, #0x0
  42c1a4:	cset	w0, eq  // eq = none
  42c1a8:	and	w0, w0, #0xff
  42c1ac:	and	x0, x0, #0xff
  42c1b0:	cmp	x0, #0x0
  42c1b4:	b.eq	42c1e0 <session_object_find+0x154>  // b.none
  42c1b8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c1bc:	add	x1, x0, #0x5bb
  42c1c0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c1c4:	add	x4, x0, #0x80
  42c1c8:	mov	w3, #0x258                 	// #600
  42c1cc:	mov	x2, x1
  42c1d0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c1d4:	add	x1, x0, #0xc68
  42c1d8:	mov	w0, #0x0                   	// #0
  42c1dc:	bl	407650 <log_assert_failed_realm@plt>
  42c1e0:	ldr	x0, [sp, #112]
  42c1e4:	cmp	x0, #0x0
  42c1e8:	cset	w0, eq  // eq = none
  42c1ec:	and	w0, w0, #0xff
  42c1f0:	and	x0, x0, #0xff
  42c1f4:	cmp	x0, #0x0
  42c1f8:	b.eq	42c224 <session_object_find+0x198>  // b.none
  42c1fc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c200:	add	x1, x0, #0x5bb
  42c204:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c208:	add	x4, x0, #0x80
  42c20c:	mov	w3, #0x259                 	// #601
  42c210:	mov	x2, x1
  42c214:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c218:	add	x1, x0, #0xc70
  42c21c:	mov	w0, #0x0                   	// #0
  42c220:	bl	407650 <log_assert_failed_realm@plt>
  42c224:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c228:	add	x1, x0, #0xc78
  42c22c:	ldr	x0, [sp, #64]
  42c230:	bl	429904 <startswith>
  42c234:	str	x0, [sp, #120]
  42c238:	ldr	x0, [sp, #120]
  42c23c:	cmp	x0, #0x0
  42c240:	b.ne	42c24c <session_object_find+0x1c0>  // b.any
  42c244:	mov	w19, #0x0                   	// #0
  42c248:	b	42c2dc <session_object_find+0x250>
  42c24c:	ldr	x0, [sp, #120]
  42c250:	bl	429984 <bus_label_unescape>
  42c254:	str	x0, [sp, #96]
  42c258:	ldr	x0, [sp, #96]
  42c25c:	cmp	x0, #0x0
  42c260:	b.ne	42c26c <session_object_find+0x1e0>  // b.any
  42c264:	mov	w19, #0xfffffff4            	// #-12
  42c268:	b	42c2dc <session_object_find+0x250>
  42c26c:	ldr	x0, [sp, #72]
  42c270:	bl	407ad0 <sd_bus_get_current_message@plt>
  42c274:	str	x0, [sp, #128]
  42c278:	ldr	x0, [sp, #96]
  42c27c:	add	x1, sp, #0x68
  42c280:	mov	x4, x1
  42c284:	ldr	x3, [sp, #32]
  42c288:	mov	x2, x0
  42c28c:	ldr	x1, [sp, #128]
  42c290:	ldr	x0, [sp, #112]
  42c294:	bl	414474 <manager_get_session_from_creds>
  42c298:	str	w0, [sp, #92]
  42c29c:	ldr	w0, [sp, #92]
  42c2a0:	cmn	w0, #0x6
  42c2a4:	b.ne	42c2b8 <session_object_find+0x22c>  // b.any
  42c2a8:	ldr	x0, [sp, #32]
  42c2ac:	bl	407c80 <sd_bus_error_free@plt>
  42c2b0:	mov	w19, #0x0                   	// #0
  42c2b4:	b	42c2dc <session_object_find+0x250>
  42c2b8:	ldr	w0, [sp, #92]
  42c2bc:	cmp	w0, #0x0
  42c2c0:	b.ge	42c2cc <session_object_find+0x240>  // b.tcont
  42c2c4:	ldr	w19, [sp, #92]
  42c2c8:	b	42c2dc <session_object_find+0x250>
  42c2cc:	ldr	x1, [sp, #104]
  42c2d0:	ldr	x0, [sp, #40]
  42c2d4:	str	x1, [x0]
  42c2d8:	mov	w19, #0x1                   	// #1
  42c2dc:	add	x0, sp, #0x60
  42c2e0:	bl	42978c <freep>
  42c2e4:	mov	w1, w19
  42c2e8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c2ec:	ldr	x0, [x0, #4024]
  42c2f0:	ldr	x2, [sp, #136]
  42c2f4:	ldr	x0, [x0]
  42c2f8:	eor	x0, x2, x0
  42c2fc:	cmp	x0, #0x0
  42c300:	b.eq	42c308 <session_object_find+0x27c>  // b.none
  42c304:	bl	407b20 <__stack_chk_fail@plt>
  42c308:	mov	w0, w1
  42c30c:	ldr	x19, [sp, #16]
  42c310:	ldp	x29, x30, [sp], #144
  42c314:	ret

000000000042c318 <session_bus_path>:
  42c318:	stp	x29, x30, [sp, #-64]!
  42c31c:	mov	x29, sp
  42c320:	str	x19, [sp, #16]
  42c324:	str	x0, [sp, #40]
  42c328:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c32c:	ldr	x0, [x0, #4024]
  42c330:	ldr	x1, [x0]
  42c334:	str	x1, [sp, #56]
  42c338:	mov	x1, #0x0                   	// #0
  42c33c:	str	xzr, [sp, #48]
  42c340:	ldr	x0, [sp, #40]
  42c344:	cmp	x0, #0x0
  42c348:	cset	w0, eq  // eq = none
  42c34c:	and	w0, w0, #0xff
  42c350:	and	x0, x0, #0xff
  42c354:	cmp	x0, #0x0
  42c358:	b.eq	42c384 <session_bus_path+0x6c>  // b.none
  42c35c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c360:	add	x1, x0, #0x5bb
  42c364:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c368:	add	x4, x0, #0x98
  42c36c:	mov	w3, #0x274                 	// #628
  42c370:	mov	x2, x1
  42c374:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c378:	add	x1, x0, #0x5f0
  42c37c:	mov	w0, #0x0                   	// #0
  42c380:	bl	407650 <log_assert_failed_realm@plt>
  42c384:	ldr	x0, [sp, #40]
  42c388:	ldr	x0, [x0, #8]
  42c38c:	bl	406ff0 <bus_label_escape@plt>
  42c390:	str	x0, [sp, #48]
  42c394:	ldr	x0, [sp, #48]
  42c398:	cmp	x0, #0x0
  42c39c:	b.ne	42c3a8 <session_bus_path+0x90>  // b.any
  42c3a0:	mov	x19, #0x0                   	// #0
  42c3a4:	b	42c3c4 <session_bus_path+0xac>
  42c3a8:	ldr	x0, [sp, #48]
  42c3ac:	mov	x2, #0x0                   	// #0
  42c3b0:	mov	x1, x0
  42c3b4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c3b8:	add	x0, x0, #0xc78
  42c3bc:	bl	4075d0 <strjoin_real@plt>
  42c3c0:	mov	x19, x0
  42c3c4:	add	x0, sp, #0x30
  42c3c8:	bl	42978c <freep>
  42c3cc:	mov	x1, x19
  42c3d0:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c3d4:	ldr	x0, [x0, #4024]
  42c3d8:	ldr	x2, [sp, #56]
  42c3dc:	ldr	x0, [x0]
  42c3e0:	eor	x0, x2, x0
  42c3e4:	cmp	x0, #0x0
  42c3e8:	b.eq	42c3f0 <session_bus_path+0xd8>  // b.none
  42c3ec:	bl	407b20 <__stack_chk_fail@plt>
  42c3f0:	mov	x0, x1
  42c3f4:	ldr	x19, [sp, #16]
  42c3f8:	ldp	x29, x30, [sp], #64
  42c3fc:	ret

000000000042c400 <session_node_enumerator>:
  42c400:	stp	x29, x30, [sp, #-192]!
  42c404:	mov	x29, sp
  42c408:	stp	x19, x20, [sp, #16]
  42c40c:	str	x0, [sp, #72]
  42c410:	str	x1, [sp, #64]
  42c414:	str	x2, [sp, #56]
  42c418:	str	x3, [sp, #48]
  42c41c:	str	x4, [sp, #40]
  42c420:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c424:	ldr	x0, [x0, #4024]
  42c428:	ldr	x1, [x0]
  42c42c:	str	x1, [sp, #184]
  42c430:	mov	x1, #0x0                   	// #0
  42c434:	str	xzr, [sp, #96]
  42c438:	ldr	x0, [sp, #56]
  42c43c:	str	x0, [sp, #128]
  42c440:	ldr	x0, [sp, #72]
  42c444:	cmp	x0, #0x0
  42c448:	cset	w0, eq  // eq = none
  42c44c:	and	w0, w0, #0xff
  42c450:	and	x0, x0, #0xff
  42c454:	cmp	x0, #0x0
  42c458:	b.eq	42c484 <session_node_enumerator+0x84>  // b.none
  42c45c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c460:	add	x1, x0, #0x5bb
  42c464:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c468:	add	x4, x0, #0xb0
  42c46c:	mov	w3, #0x285                 	// #645
  42c470:	mov	x2, x1
  42c474:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c478:	add	x1, x0, #0x5e0
  42c47c:	mov	w0, #0x0                   	// #0
  42c480:	bl	407650 <log_assert_failed_realm@plt>
  42c484:	ldr	x0, [sp, #64]
  42c488:	cmp	x0, #0x0
  42c48c:	cset	w0, eq  // eq = none
  42c490:	and	w0, w0, #0xff
  42c494:	and	x0, x0, #0xff
  42c498:	cmp	x0, #0x0
  42c49c:	b.eq	42c4c8 <session_node_enumerator+0xc8>  // b.none
  42c4a0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c4a4:	add	x1, x0, #0x5bb
  42c4a8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c4ac:	add	x4, x0, #0xb0
  42c4b0:	mov	w3, #0x286                 	// #646
  42c4b4:	mov	x2, x1
  42c4b8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c4bc:	add	x1, x0, #0xc50
  42c4c0:	mov	w0, #0x0                   	// #0
  42c4c4:	bl	407650 <log_assert_failed_realm@plt>
  42c4c8:	ldr	x0, [sp, #48]
  42c4cc:	cmp	x0, #0x0
  42c4d0:	cset	w0, eq  // eq = none
  42c4d4:	and	w0, w0, #0xff
  42c4d8:	and	x0, x0, #0xff
  42c4dc:	cmp	x0, #0x0
  42c4e0:	b.eq	42c50c <session_node_enumerator+0x10c>  // b.none
  42c4e4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c4e8:	add	x1, x0, #0x5bb
  42c4ec:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c4f0:	add	x4, x0, #0xb0
  42c4f4:	mov	w3, #0x287                 	// #647
  42c4f8:	mov	x2, x1
  42c4fc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c500:	add	x1, x0, #0xca0
  42c504:	mov	w0, #0x0                   	// #0
  42c508:	bl	407650 <log_assert_failed_realm@plt>
  42c50c:	mov	w0, #0xfffffffe            	// #-2
  42c510:	str	w0, [sp, #168]
  42c514:	str	xzr, [sp, #176]
  42c518:	b	42c560 <session_node_enumerator+0x160>
  42c51c:	ldr	x0, [sp, #104]
  42c520:	bl	42c318 <session_bus_path>
  42c524:	str	x0, [sp, #160]
  42c528:	ldr	x0, [sp, #160]
  42c52c:	cmp	x0, #0x0
  42c530:	b.ne	42c53c <session_node_enumerator+0x13c>  // b.any
  42c534:	mov	w19, #0xfffffff4            	// #-12
  42c538:	b	42c738 <session_node_enumerator+0x338>
  42c53c:	add	x0, sp, #0x60
  42c540:	ldr	x1, [sp, #160]
  42c544:	bl	407880 <strv_consume@plt>
  42c548:	str	w0, [sp, #92]
  42c54c:	ldr	w0, [sp, #92]
  42c550:	cmp	w0, #0x0
  42c554:	b.ge	42c560 <session_node_enumerator+0x160>  // b.tcont
  42c558:	ldr	w19, [sp, #92]
  42c55c:	b	42c738 <session_node_enumerator+0x338>
  42c560:	ldr	x0, [sp, #128]
  42c564:	ldr	x0, [x0, #32]
  42c568:	add	x2, sp, #0x68
  42c56c:	add	x1, sp, #0xa8
  42c570:	mov	x3, #0x0                   	// #0
  42c574:	bl	4299d0 <hashmap_iterate>
  42c578:	and	w0, w0, #0xff
  42c57c:	cmp	w0, #0x0
  42c580:	b.ne	42c51c <session_node_enumerator+0x11c>  // b.any
  42c584:	ldr	x0, [sp, #72]
  42c588:	bl	407ad0 <sd_bus_get_current_message@plt>
  42c58c:	str	x0, [sp, #136]
  42c590:	ldr	x0, [sp, #136]
  42c594:	cmp	x0, #0x0
  42c598:	b.ne	42c5a0 <session_node_enumerator+0x1a0>  // b.any
  42c59c:	b	42c71c <session_node_enumerator+0x31c>
  42c5a0:	str	xzr, [sp, #112]
  42c5a4:	add	x0, sp, #0x70
  42c5a8:	mov	x2, x0
  42c5ac:	mov	x1, #0x600000              	// #6291456
  42c5b0:	movk	x1, #0x8000, lsl #48
  42c5b4:	ldr	x0, [sp, #136]
  42c5b8:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  42c5bc:	str	w0, [sp, #92]
  42c5c0:	ldr	w0, [sp, #92]
  42c5c4:	cmp	w0, #0x0
  42c5c8:	b.lt	42c708 <session_node_enumerator+0x308>  // b.tstop
  42c5cc:	strb	wzr, [sp, #87]
  42c5d0:	ldr	x0, [sp, #112]
  42c5d4:	add	x1, sp, #0x78
  42c5d8:	bl	4072f0 <sd_bus_creds_get_session@plt>
  42c5dc:	str	w0, [sp, #92]
  42c5e0:	ldr	w0, [sp, #92]
  42c5e4:	cmp	w0, #0x0
  42c5e8:	b.lt	42c640 <session_node_enumerator+0x240>  // b.tstop
  42c5ec:	ldr	x0, [sp, #128]
  42c5f0:	ldr	x0, [x0, #32]
  42c5f4:	ldr	x1, [sp, #120]
  42c5f8:	bl	4299ac <hashmap_get>
  42c5fc:	str	x0, [sp, #104]
  42c600:	ldr	x0, [sp, #104]
  42c604:	cmp	x0, #0x0
  42c608:	b.eq	42c640 <session_node_enumerator+0x240>  // b.none
  42c60c:	add	x2, sp, #0x60
  42c610:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c614:	add	x1, x0, #0xca8
  42c618:	mov	x0, x2
  42c61c:	bl	407a50 <strv_extend@plt>
  42c620:	str	w0, [sp, #92]
  42c624:	ldr	w0, [sp, #92]
  42c628:	cmp	w0, #0x0
  42c62c:	b.ge	42c638 <session_node_enumerator+0x238>  // b.tcont
  42c630:	ldr	w19, [sp, #92]
  42c634:	b	42c700 <session_node_enumerator+0x300>
  42c638:	mov	w0, #0x1                   	// #1
  42c63c:	strb	w0, [sp, #87]
  42c640:	ldrb	w0, [sp, #87]
  42c644:	eor	w0, w0, #0x1
  42c648:	and	w0, w0, #0xff
  42c64c:	cmp	w0, #0x0
  42c650:	b.eq	42c6cc <session_node_enumerator+0x2cc>  // b.none
  42c654:	ldr	x0, [sp, #112]
  42c658:	add	x1, sp, #0x58
  42c65c:	bl	407e40 <sd_bus_creds_get_owner_uid@plt>
  42c660:	str	w0, [sp, #92]
  42c664:	ldr	w0, [sp, #92]
  42c668:	cmp	w0, #0x0
  42c66c:	b.lt	42c6cc <session_node_enumerator+0x2cc>  // b.tstop
  42c670:	ldr	x0, [sp, #128]
  42c674:	ldr	x2, [x0, #48]
  42c678:	ldr	w0, [sp, #88]
  42c67c:	mov	w0, w0
  42c680:	add	x0, x0, #0x1
  42c684:	mov	x1, x0
  42c688:	mov	x0, x2
  42c68c:	bl	4299ac <hashmap_get>
  42c690:	str	x0, [sp, #144]
  42c694:	ldr	x0, [sp, #144]
  42c698:	cmp	x0, #0x0
  42c69c:	b.eq	42c6b8 <session_node_enumerator+0x2b8>  // b.none
  42c6a0:	ldr	x0, [sp, #144]
  42c6a4:	ldr	x0, [x0, #80]
  42c6a8:	cmp	x0, #0x0
  42c6ac:	b.eq	42c6b8 <session_node_enumerator+0x2b8>  // b.none
  42c6b0:	mov	w0, #0x1                   	// #1
  42c6b4:	b	42c6bc <session_node_enumerator+0x2bc>
  42c6b8:	mov	w0, #0x0                   	// #0
  42c6bc:	strb	w0, [sp, #87]
  42c6c0:	ldrb	w0, [sp, #87]
  42c6c4:	and	w0, w0, #0x1
  42c6c8:	strb	w0, [sp, #87]
  42c6cc:	ldrb	w0, [sp, #87]
  42c6d0:	cmp	w0, #0x0
  42c6d4:	b.eq	42c708 <session_node_enumerator+0x308>  // b.none
  42c6d8:	add	x2, sp, #0x60
  42c6dc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c6e0:	add	x1, x0, #0xcd0
  42c6e4:	mov	x0, x2
  42c6e8:	bl	407a50 <strv_extend@plt>
  42c6ec:	str	w0, [sp, #92]
  42c6f0:	ldr	w0, [sp, #92]
  42c6f4:	cmp	w0, #0x0
  42c6f8:	b.ge	42c708 <session_node_enumerator+0x308>  // b.tcont
  42c6fc:	ldr	w19, [sp, #92]
  42c700:	mov	w20, #0x0                   	// #0
  42c704:	b	42c70c <session_node_enumerator+0x30c>
  42c708:	mov	w20, #0x1                   	// #1
  42c70c:	add	x0, sp, #0x70
  42c710:	bl	429860 <sd_bus_creds_unrefp>
  42c714:	cmp	w20, #0x1
  42c718:	b.ne	42c738 <session_node_enumerator+0x338>  // b.any
  42c71c:	ldr	x0, [sp, #96]
  42c720:	str	x0, [sp, #152]
  42c724:	str	xzr, [sp, #96]
  42c728:	ldr	x1, [sp, #152]
  42c72c:	ldr	x0, [sp, #48]
  42c730:	str	x1, [x0]
  42c734:	mov	w19, #0x1                   	// #1
  42c738:	add	x0, sp, #0x60
  42c73c:	bl	429a60 <strv_freep>
  42c740:	mov	w1, w19
  42c744:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c748:	ldr	x0, [x0, #4024]
  42c74c:	ldr	x2, [sp, #184]
  42c750:	ldr	x0, [x0]
  42c754:	eor	x0, x2, x0
  42c758:	cmp	x0, #0x0
  42c75c:	b.eq	42c764 <session_node_enumerator+0x364>  // b.none
  42c760:	bl	407b20 <__stack_chk_fail@plt>
  42c764:	mov	w0, w1
  42c768:	ldp	x19, x20, [sp, #16]
  42c76c:	ldp	x29, x30, [sp], #192
  42c770:	ret

000000000042c774 <session_send_signal>:
  42c774:	stp	x29, x30, [sp, #-64]!
  42c778:	mov	x29, sp
  42c77c:	str	x19, [sp, #16]
  42c780:	str	x0, [sp, #40]
  42c784:	strb	w1, [sp, #39]
  42c788:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c78c:	ldr	x0, [x0, #4024]
  42c790:	ldr	x1, [x0]
  42c794:	str	x1, [sp, #56]
  42c798:	mov	x1, #0x0                   	// #0
  42c79c:	str	xzr, [sp, #48]
  42c7a0:	ldr	x0, [sp, #40]
  42c7a4:	cmp	x0, #0x0
  42c7a8:	cset	w0, eq  // eq = none
  42c7ac:	and	w0, w0, #0xff
  42c7b0:	and	x0, x0, #0xff
  42c7b4:	cmp	x0, #0x0
  42c7b8:	b.eq	42c7e4 <session_send_signal+0x70>  // b.none
  42c7bc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c7c0:	add	x1, x0, #0x5bb
  42c7c4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c7c8:	add	x4, x0, #0xc8
  42c7cc:	mov	w3, #0x2c5                 	// #709
  42c7d0:	mov	x2, x1
  42c7d4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c7d8:	add	x1, x0, #0x5f0
  42c7dc:	mov	w0, #0x0                   	// #0
  42c7e0:	bl	407650 <log_assert_failed_realm@plt>
  42c7e4:	ldr	x0, [sp, #40]
  42c7e8:	bl	42c318 <session_bus_path>
  42c7ec:	str	x0, [sp, #48]
  42c7f0:	ldr	x0, [sp, #48]
  42c7f4:	cmp	x0, #0x0
  42c7f8:	b.ne	42c804 <session_send_signal+0x90>  // b.any
  42c7fc:	mov	w19, #0xfffffff4            	// #-12
  42c800:	b	42c86c <session_send_signal+0xf8>
  42c804:	ldr	x0, [sp, #40]
  42c808:	ldr	x0, [x0]
  42c80c:	ldr	x7, [x0, #8]
  42c810:	ldrb	w0, [sp, #39]
  42c814:	cmp	w0, #0x0
  42c818:	b.eq	42c828 <session_send_signal+0xb4>  // b.none
  42c81c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c820:	add	x0, x0, #0xcf8
  42c824:	b	42c830 <session_send_signal+0xbc>
  42c828:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c82c:	add	x0, x0, #0xd08
  42c830:	ldr	x1, [sp, #40]
  42c834:	ldr	x1, [x1, #8]
  42c838:	ldr	x2, [sp, #48]
  42c83c:	mov	x6, x2
  42c840:	mov	x5, x1
  42c844:	adrp	x1, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c848:	add	x4, x1, #0xd18
  42c84c:	mov	x3, x0
  42c850:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c854:	add	x2, x0, #0xd20
  42c858:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c85c:	add	x1, x0, #0xd40
  42c860:	mov	x0, x7
  42c864:	bl	407a40 <sd_bus_emit_signal@plt>
  42c868:	mov	w19, w0
  42c86c:	add	x0, sp, #0x30
  42c870:	bl	42978c <freep>
  42c874:	mov	w1, w19
  42c878:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c87c:	ldr	x0, [x0, #4024]
  42c880:	ldr	x2, [sp, #56]
  42c884:	ldr	x0, [x0]
  42c888:	eor	x0, x2, x0
  42c88c:	cmp	x0, #0x0
  42c890:	b.eq	42c898 <session_send_signal+0x124>  // b.none
  42c894:	bl	407b20 <__stack_chk_fail@plt>
  42c898:	mov	w0, w1
  42c89c:	ldr	x19, [sp, #16]
  42c8a0:	ldp	x29, x30, [sp], #64
  42c8a4:	ret

000000000042c8a8 <session_send_changed>:
  42c8a8:	stp	x29, x30, [sp, #-304]!
  42c8ac:	mov	x29, sp
  42c8b0:	str	x19, [sp, #16]
  42c8b4:	str	x0, [x29, #40]
  42c8b8:	str	x1, [x29, #32]
  42c8bc:	str	x2, [x29, #256]
  42c8c0:	str	x3, [x29, #264]
  42c8c4:	str	x4, [x29, #272]
  42c8c8:	str	x5, [x29, #280]
  42c8cc:	str	x6, [x29, #288]
  42c8d0:	str	x7, [x29, #296]
  42c8d4:	str	q0, [x29, #128]
  42c8d8:	str	q1, [x29, #144]
  42c8dc:	str	q2, [x29, #160]
  42c8e0:	str	q3, [x29, #176]
  42c8e4:	str	q4, [x29, #192]
  42c8e8:	str	q5, [x29, #208]
  42c8ec:	str	q6, [x29, #224]
  42c8f0:	str	q7, [x29, #240]
  42c8f4:	adrp	x0, 460000 <wordlist.10364+0x370>
  42c8f8:	ldr	x0, [x0, #4024]
  42c8fc:	ldr	x1, [x0]
  42c900:	str	x1, [x29, #120]
  42c904:	mov	x1, #0x0                   	// #0
  42c908:	str	xzr, [x29, #48]
  42c90c:	ldr	x0, [x29, #40]
  42c910:	cmp	x0, #0x0
  42c914:	cset	w0, eq  // eq = none
  42c918:	and	w0, w0, #0xff
  42c91c:	and	x0, x0, #0xff
  42c920:	cmp	x0, #0x0
  42c924:	b.eq	42c950 <session_send_changed+0xa8>  // b.none
  42c928:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c92c:	add	x1, x0, #0x5bb
  42c930:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42c934:	add	x4, x0, #0xe0
  42c938:	mov	w3, #0x2d7                 	// #727
  42c93c:	mov	x2, x1
  42c940:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42c944:	add	x1, x0, #0x5f0
  42c948:	mov	w0, #0x0                   	// #0
  42c94c:	bl	407650 <log_assert_failed_realm@plt>
  42c950:	ldr	x0, [x29, #40]
  42c954:	ldrb	w0, [x0, #209]
  42c958:	ubfx	x0, x0, #1, #1
  42c95c:	and	w0, w0, #0xff
  42c960:	eor	w0, w0, #0x1
  42c964:	and	w0, w0, #0xff
  42c968:	cmp	w0, #0x0
  42c96c:	b.eq	42c978 <session_send_changed+0xd0>  // b.none
  42c970:	mov	w19, #0x0                   	// #0
  42c974:	b	42cc1c <session_send_changed+0x374>
  42c978:	ldr	x0, [x29, #40]
  42c97c:	bl	42c318 <session_bus_path>
  42c980:	str	x0, [x29, #48]
  42c984:	ldr	x0, [x29, #48]
  42c988:	cmp	x0, #0x0
  42c98c:	b.ne	42c998 <session_send_changed+0xf0>  // b.any
  42c990:	mov	w19, #0xfffffff4            	// #-12
  42c994:	b	42cc1c <session_send_changed+0x374>
  42c998:	ldr	x0, [x29, #32]
  42c99c:	cmp	x0, #0x0
  42c9a0:	b.ne	42c9b0 <session_send_changed+0x108>  // b.any
  42c9a4:	add	x0, x29, #0x20
  42c9a8:	str	x0, [x29, #56]
  42c9ac:	b	42cbec <session_send_changed+0x344>
  42c9b0:	mov	x0, #0x1                   	// #1
  42c9b4:	str	x0, [x29, #64]
  42c9b8:	add	x0, x29, #0x130
  42c9bc:	str	x0, [x29, #88]
  42c9c0:	add	x0, x29, #0x130
  42c9c4:	str	x0, [x29, #96]
  42c9c8:	add	x0, x29, #0x100
  42c9cc:	str	x0, [x29, #104]
  42c9d0:	mov	w0, #0xffffffd0            	// #-48
  42c9d4:	str	w0, [x29, #112]
  42c9d8:	mov	w0, #0xffffff80            	// #-128
  42c9dc:	str	w0, [x29, #116]
  42c9e0:	b	42c9f0 <session_send_changed+0x148>
  42c9e4:	ldr	x0, [x29, #64]
  42c9e8:	add	x0, x0, #0x1
  42c9ec:	str	x0, [x29, #64]
  42c9f0:	ldr	w1, [x29, #112]
  42c9f4:	ldr	x0, [x29, #88]
  42c9f8:	cmp	w1, #0x0
  42c9fc:	b.lt	42ca10 <session_send_changed+0x168>  // b.tstop
  42ca00:	add	x1, x0, #0xf
  42ca04:	and	x1, x1, #0xfffffffffffffff8
  42ca08:	str	x1, [x29, #88]
  42ca0c:	b	42ca40 <session_send_changed+0x198>
  42ca10:	add	w2, w1, #0x8
  42ca14:	str	w2, [x29, #112]
  42ca18:	ldr	w2, [x29, #112]
  42ca1c:	cmp	w2, #0x0
  42ca20:	b.le	42ca34 <session_send_changed+0x18c>
  42ca24:	add	x1, x0, #0xf
  42ca28:	and	x1, x1, #0xfffffffffffffff8
  42ca2c:	str	x1, [x29, #88]
  42ca30:	b	42ca40 <session_send_changed+0x198>
  42ca34:	ldr	x2, [x29, #96]
  42ca38:	sxtw	x0, w1
  42ca3c:	add	x0, x2, x0
  42ca40:	ldr	x0, [x0]
  42ca44:	cmp	x0, #0x0
  42ca48:	b.ne	42c9e4 <session_send_changed+0x13c>  // b.any
  42ca4c:	ldr	x0, [x29, #64]
  42ca50:	add	x0, x0, #0x1
  42ca54:	str	x0, [x29, #72]
  42ca58:	ldr	x1, [x29, #72]
  42ca5c:	mov	x0, #0x8                   	// #8
  42ca60:	bl	4297b0 <size_multiply_overflow>
  42ca64:	and	w0, w0, #0xff
  42ca68:	and	x0, x0, #0xff
  42ca6c:	cmp	x0, #0x0
  42ca70:	b.eq	42ca9c <session_send_changed+0x1f4>  // b.none
  42ca74:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ca78:	add	x1, x0, #0x5bb
  42ca7c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ca80:	add	x4, x0, #0xe0
  42ca84:	mov	w3, #0x2e0                 	// #736
  42ca88:	mov	x2, x1
  42ca8c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ca90:	add	x1, x0, #0xd58
  42ca94:	mov	w0, #0x0                   	// #0
  42ca98:	bl	407650 <log_assert_failed_realm@plt>
  42ca9c:	ldr	x0, [x29, #72]
  42caa0:	lsl	x0, x0, #3
  42caa4:	cmp	x0, #0x400, lsl #12
  42caa8:	cset	w0, hi  // hi = pmore
  42caac:	and	w0, w0, #0xff
  42cab0:	and	x0, x0, #0xff
  42cab4:	cmp	x0, #0x0
  42cab8:	b.eq	42cae4 <session_send_changed+0x23c>  // b.none
  42cabc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cac0:	add	x1, x0, #0x5bb
  42cac4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42cac8:	add	x4, x0, #0xe0
  42cacc:	mov	w3, #0x2e0                 	// #736
  42cad0:	mov	x2, x1
  42cad4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cad8:	add	x1, x0, #0xd88
  42cadc:	mov	w0, #0x0                   	// #0
  42cae0:	bl	407650 <log_assert_failed_realm@plt>
  42cae4:	ldr	x0, [x29, #72]
  42cae8:	lsl	x0, x0, #3
  42caec:	add	x0, x0, #0xf
  42caf0:	lsr	x0, x0, #4
  42caf4:	lsl	x0, x0, #4
  42caf8:	sub	sp, sp, x0
  42cafc:	mov	x0, sp
  42cb00:	add	x0, x0, #0xf
  42cb04:	lsr	x0, x0, #4
  42cb08:	lsl	x0, x0, #4
  42cb0c:	str	x0, [x29, #56]
  42cb10:	str	xzr, [x29, #64]
  42cb14:	ldr	x0, [x29, #64]
  42cb18:	lsl	x0, x0, #3
  42cb1c:	ldr	x1, [x29, #56]
  42cb20:	add	x0, x1, x0
  42cb24:	ldr	x1, [x29, #32]
  42cb28:	str	x1, [x0]
  42cb2c:	add	x0, x29, #0x130
  42cb30:	str	x0, [x29, #88]
  42cb34:	add	x0, x29, #0x130
  42cb38:	str	x0, [x29, #96]
  42cb3c:	add	x0, x29, #0x100
  42cb40:	str	x0, [x29, #104]
  42cb44:	mov	w0, #0xffffffd0            	// #-48
  42cb48:	str	w0, [x29, #112]
  42cb4c:	mov	w0, #0xffffff80            	// #-128
  42cb50:	str	w0, [x29, #116]
  42cb54:	ldr	x0, [x29, #64]
  42cb58:	add	x0, x0, #0x1
  42cb5c:	str	x0, [x29, #64]
  42cb60:	ldr	x0, [x29, #64]
  42cb64:	lsl	x0, x0, #3
  42cb68:	ldr	x1, [x29, #56]
  42cb6c:	add	x2, x1, x0
  42cb70:	ldr	w1, [x29, #112]
  42cb74:	ldr	x0, [x29, #88]
  42cb78:	cmp	w1, #0x0
  42cb7c:	b.lt	42cb90 <session_send_changed+0x2e8>  // b.tstop
  42cb80:	add	x1, x0, #0xf
  42cb84:	and	x1, x1, #0xfffffffffffffff8
  42cb88:	str	x1, [x29, #88]
  42cb8c:	b	42cbc0 <session_send_changed+0x318>
  42cb90:	add	w3, w1, #0x8
  42cb94:	str	w3, [x29, #112]
  42cb98:	ldr	w3, [x29, #112]
  42cb9c:	cmp	w3, #0x0
  42cba0:	b.le	42cbb4 <session_send_changed+0x30c>
  42cba4:	add	x1, x0, #0xf
  42cba8:	and	x1, x1, #0xfffffffffffffff8
  42cbac:	str	x1, [x29, #88]
  42cbb0:	b	42cbc0 <session_send_changed+0x318>
  42cbb4:	ldr	x3, [x29, #96]
  42cbb8:	sxtw	x0, w1
  42cbbc:	add	x0, x3, x0
  42cbc0:	ldr	x0, [x0]
  42cbc4:	str	x0, [x2]
  42cbc8:	ldr	x0, [x29, #64]
  42cbcc:	lsl	x0, x0, #3
  42cbd0:	ldr	x1, [x29, #56]
  42cbd4:	add	x0, x1, x0
  42cbd8:	ldr	x0, [x0]
  42cbdc:	cmp	x0, #0x0
  42cbe0:	b.eq	42cbe8 <session_send_changed+0x340>  // b.none
  42cbe4:	b	42cb54 <session_send_changed+0x2ac>
  42cbe8:	nop
  42cbec:	ldr	x0, [x29, #56]
  42cbf0:	str	x0, [x29, #80]
  42cbf4:	ldr	x0, [x29, #40]
  42cbf8:	ldr	x0, [x0]
  42cbfc:	ldr	x4, [x0, #8]
  42cc00:	ldr	x1, [x29, #48]
  42cc04:	ldr	x3, [x29, #80]
  42cc08:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cc0c:	add	x2, x0, #0xda8
  42cc10:	mov	x0, x4
  42cc14:	bl	4082d0 <sd_bus_emit_properties_changed_strv@plt>
  42cc18:	mov	w19, w0
  42cc1c:	add	x0, x29, #0x30
  42cc20:	bl	42978c <freep>
  42cc24:	mov	w1, w19
  42cc28:	adrp	x0, 460000 <wordlist.10364+0x370>
  42cc2c:	ldr	x0, [x0, #4024]
  42cc30:	ldr	x2, [x29, #120]
  42cc34:	ldr	x0, [x0]
  42cc38:	eor	x0, x2, x0
  42cc3c:	cmp	x0, #0x0
  42cc40:	b.eq	42cc48 <session_send_changed+0x3a0>  // b.none
  42cc44:	bl	407b20 <__stack_chk_fail@plt>
  42cc48:	mov	w0, w1
  42cc4c:	mov	sp, x29
  42cc50:	ldr	x19, [sp, #16]
  42cc54:	ldp	x29, x30, [sp], #304
  42cc58:	ret

000000000042cc5c <session_send_lock>:
  42cc5c:	stp	x29, x30, [sp, #-64]!
  42cc60:	mov	x29, sp
  42cc64:	str	x19, [sp, #16]
  42cc68:	str	x0, [sp, #40]
  42cc6c:	strb	w1, [sp, #39]
  42cc70:	adrp	x0, 460000 <wordlist.10364+0x370>
  42cc74:	ldr	x0, [x0, #4024]
  42cc78:	ldr	x1, [x0]
  42cc7c:	str	x1, [sp, #56]
  42cc80:	mov	x1, #0x0                   	// #0
  42cc84:	str	xzr, [sp, #48]
  42cc88:	ldr	x0, [sp, #40]
  42cc8c:	cmp	x0, #0x0
  42cc90:	cset	w0, eq  // eq = none
  42cc94:	and	w0, w0, #0xff
  42cc98:	and	x0, x0, #0xff
  42cc9c:	cmp	x0, #0x0
  42cca0:	b.eq	42cccc <session_send_lock+0x70>  // b.none
  42cca4:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cca8:	add	x1, x0, #0x5bb
  42ccac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ccb0:	add	x4, x0, #0xf8
  42ccb4:	mov	w3, #0x2e8                 	// #744
  42ccb8:	mov	x2, x1
  42ccbc:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ccc0:	add	x1, x0, #0x5f0
  42ccc4:	mov	w0, #0x0                   	// #0
  42ccc8:	bl	407650 <log_assert_failed_realm@plt>
  42cccc:	ldr	x0, [sp, #40]
  42ccd0:	bl	42c318 <session_bus_path>
  42ccd4:	str	x0, [sp, #48]
  42ccd8:	ldr	x0, [sp, #48]
  42ccdc:	cmp	x0, #0x0
  42cce0:	b.ne	42ccec <session_send_lock+0x90>  // b.any
  42cce4:	mov	w19, #0xfffffff4            	// #-12
  42cce8:	b	42cd38 <session_send_lock+0xdc>
  42ccec:	ldr	x0, [sp, #40]
  42ccf0:	ldr	x0, [x0]
  42ccf4:	ldr	x5, [x0, #8]
  42ccf8:	ldr	x1, [sp, #48]
  42ccfc:	ldrb	w0, [sp, #39]
  42cd00:	cmp	w0, #0x0
  42cd04:	b.eq	42cd14 <session_send_lock+0xb8>  // b.none
  42cd08:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cd0c:	add	x0, x0, #0x690
  42cd10:	b	42cd1c <session_send_lock+0xc0>
  42cd14:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cd18:	add	x0, x0, #0xb88
  42cd1c:	mov	x4, #0x0                   	// #0
  42cd20:	mov	x3, x0
  42cd24:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cd28:	add	x2, x0, #0xda8
  42cd2c:	mov	x0, x5
  42cd30:	bl	407a40 <sd_bus_emit_signal@plt>
  42cd34:	mov	w19, w0
  42cd38:	add	x0, sp, #0x30
  42cd3c:	bl	42978c <freep>
  42cd40:	mov	w1, w19
  42cd44:	adrp	x0, 460000 <wordlist.10364+0x370>
  42cd48:	ldr	x0, [x0, #4024]
  42cd4c:	ldr	x2, [sp, #56]
  42cd50:	ldr	x0, [x0]
  42cd54:	eor	x0, x2, x0
  42cd58:	cmp	x0, #0x0
  42cd5c:	b.eq	42cd64 <session_send_lock+0x108>  // b.none
  42cd60:	bl	407b20 <__stack_chk_fail@plt>
  42cd64:	mov	w0, w1
  42cd68:	ldr	x19, [sp, #16]
  42cd6c:	ldp	x29, x30, [sp], #64
  42cd70:	ret

000000000042cd74 <session_send_lock_all>:
  42cd74:	stp	x29, x30, [sp, #-80]!
  42cd78:	mov	x29, sp
  42cd7c:	str	x0, [sp, #24]
  42cd80:	strb	w1, [sp, #23]
  42cd84:	adrp	x0, 460000 <wordlist.10364+0x370>
  42cd88:	ldr	x0, [x0, #4024]
  42cd8c:	ldr	x1, [x0]
  42cd90:	str	x1, [sp, #72]
  42cd94:	mov	x1, #0x0                   	// #0
  42cd98:	str	wzr, [sp, #40]
  42cd9c:	ldr	x0, [sp, #24]
  42cda0:	cmp	x0, #0x0
  42cda4:	cset	w0, eq  // eq = none
  42cda8:	and	w0, w0, #0xff
  42cdac:	and	x0, x0, #0xff
  42cdb0:	cmp	x0, #0x0
  42cdb4:	b.eq	42cde0 <session_send_lock_all+0x6c>  // b.none
  42cdb8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cdbc:	add	x1, x0, #0x5bb
  42cdc0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42cdc4:	add	x4, x0, #0x110
  42cdc8:	mov	w3, #0x2fb                 	// #763
  42cdcc:	mov	x2, x1
  42cdd0:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cdd4:	add	x1, x0, #0xc70
  42cdd8:	mov	w0, #0x0                   	// #0
  42cddc:	bl	407650 <log_assert_failed_realm@plt>
  42cde0:	mov	w0, #0xfffffffe            	// #-2
  42cde4:	str	w0, [sp, #56]
  42cde8:	str	xzr, [sp, #64]
  42cdec:	b	42ce14 <session_send_lock_all+0xa0>
  42cdf0:	ldr	x0, [sp, #48]
  42cdf4:	ldrb	w1, [sp, #23]
  42cdf8:	bl	42cc5c <session_send_lock>
  42cdfc:	str	w0, [sp, #44]
  42ce00:	ldr	w0, [sp, #44]
  42ce04:	cmp	w0, #0x0
  42ce08:	b.ge	42ce14 <session_send_lock_all+0xa0>  // b.tcont
  42ce0c:	ldr	w0, [sp, #44]
  42ce10:	str	w0, [sp, #40]
  42ce14:	ldr	x0, [sp, #24]
  42ce18:	ldr	x0, [x0, #32]
  42ce1c:	add	x2, sp, #0x30
  42ce20:	add	x1, sp, #0x38
  42ce24:	mov	x3, #0x0                   	// #0
  42ce28:	bl	4299d0 <hashmap_iterate>
  42ce2c:	and	w0, w0, #0xff
  42ce30:	cmp	w0, #0x0
  42ce34:	b.ne	42cdf0 <session_send_lock_all+0x7c>  // b.any
  42ce38:	ldr	w0, [sp, #40]
  42ce3c:	mov	w1, w0
  42ce40:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ce44:	ldr	x0, [x0, #4024]
  42ce48:	ldr	x2, [sp, #72]
  42ce4c:	ldr	x0, [x0]
  42ce50:	eor	x0, x2, x0
  42ce54:	cmp	x0, #0x0
  42ce58:	b.eq	42ce60 <session_send_lock_all+0xec>  // b.none
  42ce5c:	bl	407b20 <__stack_chk_fail@plt>
  42ce60:	mov	w0, w1
  42ce64:	ldp	x29, x30, [sp], #80
  42ce68:	ret

000000000042ce6c <session_ready>:
  42ce6c:	stp	x29, x30, [sp, #-32]!
  42ce70:	mov	x29, sp
  42ce74:	str	x0, [sp, #24]
  42ce78:	ldr	x0, [sp, #24]
  42ce7c:	cmp	x0, #0x0
  42ce80:	cset	w0, eq  // eq = none
  42ce84:	and	w0, w0, #0xff
  42ce88:	and	x0, x0, #0xff
  42ce8c:	cmp	x0, #0x0
  42ce90:	b.eq	42cebc <session_ready+0x50>  // b.none
  42ce94:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ce98:	add	x1, x0, #0x5bb
  42ce9c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42cea0:	add	x4, x0, #0x128
  42cea4:	mov	w3, #0x309                 	// #777
  42cea8:	mov	x2, x1
  42ceac:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42ceb0:	add	x1, x0, #0x5f0
  42ceb4:	mov	w0, #0x0                   	// #0
  42ceb8:	bl	407650 <log_assert_failed_realm@plt>
  42cebc:	ldr	x0, [sp, #24]
  42cec0:	ldr	x0, [x0, #128]
  42cec4:	cmp	x0, #0x0
  42cec8:	b.ne	42cee8 <session_ready+0x7c>  // b.any
  42cecc:	ldr	x0, [sp, #24]
  42ced0:	ldr	x0, [x0, #40]
  42ced4:	ldr	x0, [x0, #72]
  42ced8:	cmp	x0, #0x0
  42cedc:	b.ne	42cee8 <session_ready+0x7c>  // b.any
  42cee0:	mov	w0, #0x1                   	// #1
  42cee4:	b	42ceec <session_ready+0x80>
  42cee8:	mov	w0, #0x0                   	// #0
  42ceec:	and	w0, w0, #0x1
  42cef0:	and	w0, w0, #0xff
  42cef4:	ldp	x29, x30, [sp], #32
  42cef8:	ret

000000000042cefc <session_send_create_reply>:
  42cefc:	sub	sp, sp, #0x90
  42cf00:	stp	x29, x30, [sp, #48]
  42cf04:	add	x29, sp, #0x30
  42cf08:	str	x19, [sp, #64]
  42cf0c:	str	x0, [sp, #88]
  42cf10:	str	x1, [sp, #80]
  42cf14:	adrp	x0, 460000 <wordlist.10364+0x370>
  42cf18:	ldr	x0, [x0, #4024]
  42cf1c:	ldr	x1, [x0]
  42cf20:	str	x1, [sp, #136]
  42cf24:	mov	x1, #0x0                   	// #0
  42cf28:	str	xzr, [sp, #112]
  42cf2c:	mov	w0, #0xffffffff            	// #-1
  42cf30:	str	w0, [sp, #96]
  42cf34:	str	xzr, [sp, #120]
  42cf38:	ldr	x0, [sp, #88]
  42cf3c:	cmp	x0, #0x0
  42cf40:	cset	w0, eq  // eq = none
  42cf44:	and	w0, w0, #0xff
  42cf48:	and	x0, x0, #0xff
  42cf4c:	cmp	x0, #0x0
  42cf50:	b.eq	42cf7c <session_send_create_reply+0x80>  // b.none
  42cf54:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cf58:	add	x1, x0, #0x5bb
  42cf5c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42cf60:	add	x4, x0, #0x138
  42cf64:	mov	w3, #0x316                 	// #790
  42cf68:	mov	x2, x1
  42cf6c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42cf70:	add	x1, x0, #0x5f0
  42cf74:	mov	w0, #0x0                   	// #0
  42cf78:	bl	407650 <log_assert_failed_realm@plt>
  42cf7c:	ldr	x0, [sp, #88]
  42cf80:	ldr	x0, [x0, #216]
  42cf84:	cmp	x0, #0x0
  42cf88:	b.ne	42cf94 <session_send_create_reply+0x98>  // b.any
  42cf8c:	mov	w19, #0x0                   	// #0
  42cf90:	b	42d1b0 <session_send_create_reply+0x2b4>
  42cf94:	ldr	x0, [sp, #80]
  42cf98:	bl	407080 <sd_bus_error_is_set@plt>
  42cf9c:	cmp	w0, #0x0
  42cfa0:	b.ne	42cfc8 <session_send_create_reply+0xcc>  // b.any
  42cfa4:	ldr	x0, [sp, #88]
  42cfa8:	bl	42ce6c <session_ready>
  42cfac:	and	w0, w0, #0xff
  42cfb0:	eor	w0, w0, #0x1
  42cfb4:	and	w0, w0, #0xff
  42cfb8:	cmp	w0, #0x0
  42cfbc:	b.eq	42cfc8 <session_send_create_reply+0xcc>  // b.none
  42cfc0:	mov	w19, #0x0                   	// #0
  42cfc4:	b	42d1b0 <session_send_create_reply+0x2b4>
  42cfc8:	ldr	x0, [sp, #88]
  42cfcc:	ldr	x0, [x0, #216]
  42cfd0:	str	x0, [sp, #128]
  42cfd4:	ldr	x0, [sp, #88]
  42cfd8:	str	xzr, [x0, #216]
  42cfdc:	ldr	x0, [sp, #128]
  42cfe0:	str	x0, [sp, #112]
  42cfe4:	ldr	x0, [sp, #80]
  42cfe8:	cmp	x0, #0x0
  42cfec:	b.eq	42d004 <session_send_create_reply+0x108>  // b.none
  42cff0:	ldr	x0, [sp, #112]
  42cff4:	ldr	x1, [sp, #80]
  42cff8:	bl	407ea0 <sd_bus_reply_method_error@plt>
  42cffc:	mov	w19, w0
  42d000:	b	42d1b0 <session_send_create_reply+0x2b4>
  42d004:	ldr	x0, [sp, #88]
  42d008:	bl	432f78 <session_create_fifo>
  42d00c:	str	w0, [sp, #96]
  42d010:	ldr	w0, [sp, #96]
  42d014:	cmp	w0, #0x0
  42d018:	b.ge	42d024 <session_send_create_reply+0x128>  // b.tcont
  42d01c:	ldr	w19, [sp, #96]
  42d020:	b	42d1b0 <session_send_create_reply+0x2b4>
  42d024:	ldr	x0, [sp, #88]
  42d028:	bl	42fde0 <session_save>
  42d02c:	ldr	x0, [sp, #88]
  42d030:	bl	42c318 <session_bus_path>
  42d034:	str	x0, [sp, #120]
  42d038:	ldr	x0, [sp, #120]
  42d03c:	cmp	x0, #0x0
  42d040:	b.ne	42d04c <session_send_create_reply+0x150>  // b.any
  42d044:	mov	w19, #0xfffffff4            	// #-12
  42d048:	b	42d1b0 <session_send_create_reply+0x2b4>
  42d04c:	mov	w0, #0x7                   	// #7
  42d050:	str	w0, [sp, #100]
  42d054:	str	wzr, [sp, #104]
  42d058:	str	wzr, [sp, #108]
  42d05c:	ldr	w0, [sp, #108]
  42d060:	bl	4083e0 <log_get_max_level_realm@plt>
  42d064:	mov	w1, w0
  42d068:	ldr	w0, [sp, #100]
  42d06c:	and	w0, w0, #0x7
  42d070:	cmp	w1, w0
  42d074:	b.lt	42d12c <session_send_create_reply+0x230>  // b.tstop
  42d078:	ldr	w0, [sp, #108]
  42d07c:	lsl	w1, w0, #10
  42d080:	ldr	w0, [sp, #100]
  42d084:	orr	w8, w1, w0
  42d088:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42d08c:	add	x9, x0, #0x5bb
  42d090:	ldr	x0, [sp, #88]
  42d094:	ldr	x5, [x0, #8]
  42d098:	ldr	x6, [sp, #120]
  42d09c:	ldr	x0, [sp, #88]
  42d0a0:	ldr	x0, [x0, #40]
  42d0a4:	ldr	w1, [x0, #8]
  42d0a8:	ldr	x0, [sp, #88]
  42d0ac:	ldr	x0, [x0, #40]
  42d0b0:	ldr	x2, [x0, #40]
  42d0b4:	ldr	w3, [sp, #96]
  42d0b8:	ldr	x0, [sp, #88]
  42d0bc:	ldr	x0, [x0, #136]
  42d0c0:	cmp	x0, #0x0
  42d0c4:	b.eq	42d0d8 <session_send_create_reply+0x1dc>  // b.none
  42d0c8:	ldr	x0, [sp, #88]
  42d0cc:	ldr	x0, [x0, #136]
  42d0d0:	ldr	x0, [x0, #8]
  42d0d4:	b	42d0e0 <session_send_create_reply+0x1e4>
  42d0d8:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42d0dc:	add	x0, x0, #0x608
  42d0e0:	ldr	x4, [sp, #88]
  42d0e4:	ldr	w4, [x4, #144]
  42d0e8:	str	w4, [sp, #32]
  42d0ec:	str	x0, [sp, #24]
  42d0f0:	str	w3, [sp, #16]
  42d0f4:	str	x2, [sp, #8]
  42d0f8:	str	w1, [sp]
  42d0fc:	mov	x7, x6
  42d100:	mov	x6, x5
  42d104:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42d108:	add	x5, x0, #0xdc8
  42d10c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d110:	add	x4, x0, #0x158
  42d114:	mov	w3, #0x330                 	// #816
  42d118:	mov	x2, x9
  42d11c:	ldr	w1, [sp, #104]
  42d120:	mov	w0, w8
  42d124:	bl	407d60 <log_internal_realm@plt>
  42d128:	b	42d134 <session_send_create_reply+0x238>
  42d12c:	ldr	w0, [sp, #104]
  42d130:	cmp	w0, #0x0
  42d134:	ldr	x8, [sp, #112]
  42d138:	ldr	x0, [sp, #88]
  42d13c:	ldr	x2, [x0, #8]
  42d140:	ldr	x3, [sp, #120]
  42d144:	ldr	x0, [sp, #88]
  42d148:	ldr	x0, [x0, #40]
  42d14c:	ldr	x4, [x0, #40]
  42d150:	ldr	w5, [sp, #96]
  42d154:	ldr	x0, [sp, #88]
  42d158:	ldr	x0, [x0, #40]
  42d15c:	ldr	w6, [x0, #8]
  42d160:	ldr	x0, [sp, #88]
  42d164:	ldr	x0, [x0, #136]
  42d168:	cmp	x0, #0x0
  42d16c:	b.eq	42d180 <session_send_create_reply+0x284>  // b.none
  42d170:	ldr	x0, [sp, #88]
  42d174:	ldr	x0, [x0, #136]
  42d178:	ldr	x0, [x0, #8]
  42d17c:	b	42d188 <session_send_create_reply+0x28c>
  42d180:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42d184:	add	x0, x0, #0x608
  42d188:	ldr	x1, [sp, #88]
  42d18c:	ldr	w1, [x1, #144]
  42d190:	str	wzr, [sp, #8]
  42d194:	str	w1, [sp]
  42d198:	mov	x7, x0
  42d19c:	adrp	x0, 443000 <__PRETTY_FUNCTION__.11423+0xb0>
  42d1a0:	add	x1, x0, #0xe38
  42d1a4:	mov	x0, x8
  42d1a8:	bl	4070e0 <sd_bus_reply_method_return@plt>
  42d1ac:	mov	w19, w0
  42d1b0:	add	x0, sp, #0x78
  42d1b4:	bl	42978c <freep>
  42d1b8:	add	x0, sp, #0x60
  42d1bc:	bl	429a08 <closep>
  42d1c0:	add	x0, sp, #0x70
  42d1c4:	bl	42982c <sd_bus_message_unrefp>
  42d1c8:	mov	w1, w19
  42d1cc:	adrp	x0, 460000 <wordlist.10364+0x370>
  42d1d0:	ldr	x0, [x0, #4024]
  42d1d4:	ldr	x2, [sp, #136]
  42d1d8:	ldr	x0, [x0]
  42d1dc:	eor	x0, x2, x0
  42d1e0:	cmp	x0, #0x0
  42d1e4:	b.eq	42d1ec <session_send_create_reply+0x2f0>  // b.none
  42d1e8:	bl	407b20 <__stack_chk_fail@plt>
  42d1ec:	mov	w0, w1
  42d1f0:	ldr	x19, [sp, #64]
  42d1f4:	ldp	x29, x30, [sp, #48]
  42d1f8:	add	sp, sp, #0x90
  42d1fc:	ret

000000000042d200 <sd_device_unrefp>:
  42d200:	stp	x29, x30, [sp, #-32]!
  42d204:	mov	x29, sp
  42d208:	str	x0, [sp, #24]
  42d20c:	ldr	x0, [sp, #24]
  42d210:	ldr	x0, [x0]
  42d214:	cmp	x0, #0x0
  42d218:	b.eq	42d228 <sd_device_unrefp+0x28>  // b.none
  42d21c:	ldr	x0, [sp, #24]
  42d220:	ldr	x0, [x0]
  42d224:	bl	4081a0 <sd_device_unref@plt>
  42d228:	nop
  42d22c:	ldp	x29, x30, [sp], #32
  42d230:	ret

000000000042d234 <freep>:
  42d234:	stp	x29, x30, [sp, #-32]!
  42d238:	mov	x29, sp
  42d23c:	str	x0, [sp, #24]
  42d240:	ldr	x0, [sp, #24]
  42d244:	ldr	x0, [x0]
  42d248:	bl	408150 <free@plt>
  42d24c:	nop
  42d250:	ldp	x29, x30, [sp], #32
  42d254:	ret

000000000042d258 <sd_bus_message_unrefp>:
  42d258:	stp	x29, x30, [sp, #-32]!
  42d25c:	mov	x29, sp
  42d260:	str	x0, [sp, #24]
  42d264:	ldr	x0, [sp, #24]
  42d268:	ldr	x0, [x0]
  42d26c:	cmp	x0, #0x0
  42d270:	b.eq	42d280 <sd_bus_message_unrefp+0x28>  // b.none
  42d274:	ldr	x0, [sp, #24]
  42d278:	ldr	x0, [x0]
  42d27c:	bl	407240 <sd_bus_message_unref@plt>
  42d280:	nop
  42d284:	ldp	x29, x30, [sp], #32
  42d288:	ret

000000000042d28c <hashmap_get>:
  42d28c:	stp	x29, x30, [sp, #-32]!
  42d290:	mov	x29, sp
  42d294:	str	x0, [sp, #24]
  42d298:	str	x1, [sp, #16]
  42d29c:	ldr	x1, [sp, #16]
  42d2a0:	ldr	x0, [sp, #24]
  42d2a4:	bl	407860 <internal_hashmap_get@plt>
  42d2a8:	ldp	x29, x30, [sp], #32
  42d2ac:	ret

000000000042d2b0 <hashmap_remove>:
  42d2b0:	stp	x29, x30, [sp, #-32]!
  42d2b4:	mov	x29, sp
  42d2b8:	str	x0, [sp, #24]
  42d2bc:	str	x1, [sp, #16]
  42d2c0:	ldr	x1, [sp, #16]
  42d2c4:	ldr	x0, [sp, #24]
  42d2c8:	bl	406f90 <internal_hashmap_remove@plt>
  42d2cc:	ldp	x29, x30, [sp], #32
  42d2d0:	ret

000000000042d2d4 <hashmap_iterate>:
  42d2d4:	stp	x29, x30, [sp, #-48]!
  42d2d8:	mov	x29, sp
  42d2dc:	str	x0, [sp, #40]
  42d2e0:	str	x1, [sp, #32]
  42d2e4:	str	x2, [sp, #24]
  42d2e8:	str	x3, [sp, #16]
  42d2ec:	ldr	x3, [sp, #16]
  42d2f0:	ldr	x2, [sp, #24]
  42d2f4:	ldr	x1, [sp, #32]
  42d2f8:	ldr	x0, [sp, #40]
  42d2fc:	bl	407f80 <internal_hashmap_iterate@plt>
  42d300:	and	w0, w0, #0xff
  42d304:	ldp	x29, x30, [sp], #48
  42d308:	ret

000000000042d30c <startswith>:
  42d30c:	stp	x29, x30, [sp, #-48]!
  42d310:	mov	x29, sp
  42d314:	str	x0, [sp, #24]
  42d318:	str	x1, [sp, #16]
  42d31c:	ldr	x0, [sp, #16]
  42d320:	bl	4082f0 <strlen@plt>
  42d324:	str	x0, [sp, #40]
  42d328:	ldr	x2, [sp, #40]
  42d32c:	ldr	x1, [sp, #16]
  42d330:	ldr	x0, [sp, #24]
  42d334:	bl	407770 <strncmp@plt>
  42d338:	cmp	w0, #0x0
  42d33c:	b.ne	42d350 <startswith+0x44>  // b.any
  42d340:	ldr	x1, [sp, #24]
  42d344:	ldr	x0, [sp, #40]
  42d348:	add	x0, x1, x0
  42d34c:	b	42d354 <startswith+0x48>
  42d350:	mov	x0, #0x0                   	// #0
  42d354:	ldp	x29, x30, [sp], #48
  42d358:	ret

000000000042d35c <session_device_notify>:
  42d35c:	stp	x29, x30, [sp, #-96]!
  42d360:	mov	x29, sp
  42d364:	str	x19, [sp, #16]
  42d368:	str	x0, [sp, #40]
  42d36c:	str	w1, [sp, #36]
  42d370:	adrp	x0, 460000 <wordlist.10364+0x370>
  42d374:	ldr	x0, [x0, #4024]
  42d378:	ldr	x1, [x0]
  42d37c:	str	x1, [sp, #88]
  42d380:	mov	x1, #0x0                   	// #0
  42d384:	str	xzr, [sp, #64]
  42d388:	str	xzr, [sp, #72]
  42d38c:	str	xzr, [sp, #80]
  42d390:	ldr	x0, [sp, #40]
  42d394:	cmp	x0, #0x0
  42d398:	cset	w0, eq  // eq = none
  42d39c:	and	w0, w0, #0xff
  42d3a0:	and	x0, x0, #0xff
  42d3a4:	cmp	x0, #0x0
  42d3a8:	b.eq	42d3d4 <session_device_notify+0x78>  // b.none
  42d3ac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d3b0:	add	x1, x0, #0x17b
  42d3b4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d3b8:	add	x4, x0, #0x440
  42d3bc:	mov	w3, #0x23                  	// #35
  42d3c0:	mov	x2, x1
  42d3c4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d3c8:	add	x1, x0, #0x1a0
  42d3cc:	mov	w0, #0x0                   	// #0
  42d3d0:	bl	407650 <log_assert_failed_realm@plt>
  42d3d4:	ldr	x0, [sp, #40]
  42d3d8:	ldr	x0, [x0, #16]
  42d3dc:	bl	407e60 <gnu_dev_major@plt>
  42d3e0:	str	w0, [sp, #52]
  42d3e4:	ldr	x0, [sp, #40]
  42d3e8:	ldr	x0, [x0, #16]
  42d3ec:	bl	408160 <gnu_dev_minor@plt>
  42d3f0:	str	w0, [sp, #56]
  42d3f4:	ldr	x0, [sp, #40]
  42d3f8:	ldr	x0, [x0]
  42d3fc:	ldr	x0, [x0, #232]
  42d400:	cmp	x0, #0x0
  42d404:	b.ne	42d410 <session_device_notify+0xb4>  // b.any
  42d408:	mov	w19, #0x0                   	// #0
  42d40c:	b	42d5f8 <session_device_notify+0x29c>
  42d410:	ldr	x0, [sp, #40]
  42d414:	ldr	x0, [x0]
  42d418:	bl	42c318 <session_bus_path>
  42d41c:	str	x0, [sp, #72]
  42d420:	ldr	x0, [sp, #72]
  42d424:	cmp	x0, #0x0
  42d428:	b.ne	42d434 <session_device_notify+0xd8>  // b.any
  42d42c:	mov	w19, #0xfffffff4            	// #-12
  42d430:	b	42d5f8 <session_device_notify+0x29c>
  42d434:	ldr	x0, [sp, #40]
  42d438:	ldr	x0, [x0]
  42d43c:	ldr	x0, [x0]
  42d440:	ldr	x5, [x0, #8]
  42d444:	ldr	x2, [sp, #72]
  42d448:	ldr	w0, [sp, #36]
  42d44c:	cmp	w0, #0x0
  42d450:	b.ne	42d460 <session_device_notify+0x104>  // b.any
  42d454:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d458:	add	x0, x0, #0x1a8
  42d45c:	b	42d468 <session_device_notify+0x10c>
  42d460:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d464:	add	x0, x0, #0x1b8
  42d468:	add	x1, sp, #0x40
  42d46c:	mov	x4, x0
  42d470:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d474:	add	x3, x0, #0x1c8
  42d478:	mov	x0, x5
  42d47c:	bl	4080e0 <sd_bus_message_new_signal@plt>
  42d480:	str	w0, [sp, #60]
  42d484:	ldr	x0, [sp, #64]
  42d488:	cmp	x0, #0x0
  42d48c:	b.ne	42d498 <session_device_notify+0x13c>  // b.any
  42d490:	ldr	w19, [sp, #60]
  42d494:	b	42d5f8 <session_device_notify+0x29c>
  42d498:	ldr	x2, [sp, #64]
  42d49c:	ldr	x0, [sp, #40]
  42d4a0:	ldr	x0, [x0]
  42d4a4:	ldr	x0, [x0, #232]
  42d4a8:	mov	x1, x0
  42d4ac:	mov	x0, x2
  42d4b0:	bl	4080a0 <sd_bus_message_set_destination@plt>
  42d4b4:	str	w0, [sp, #60]
  42d4b8:	ldr	w0, [sp, #60]
  42d4bc:	cmp	w0, #0x0
  42d4c0:	b.ge	42d4cc <session_device_notify+0x170>  // b.tcont
  42d4c4:	ldr	w19, [sp, #60]
  42d4c8:	b	42d5f8 <session_device_notify+0x29c>
  42d4cc:	ldr	w0, [sp, #36]
  42d4d0:	cmp	w0, #0x3
  42d4d4:	b.eq	42d578 <session_device_notify+0x21c>  // b.none
  42d4d8:	ldr	w0, [sp, #36]
  42d4dc:	cmp	w0, #0x3
  42d4e0:	b.hi	42d588 <session_device_notify+0x22c>  // b.pmore
  42d4e4:	ldr	w0, [sp, #36]
  42d4e8:	cmp	w0, #0x2
  42d4ec:	b.eq	42d568 <session_device_notify+0x20c>  // b.none
  42d4f0:	ldr	w0, [sp, #36]
  42d4f4:	cmp	w0, #0x2
  42d4f8:	b.hi	42d588 <session_device_notify+0x22c>  // b.pmore
  42d4fc:	ldr	w0, [sp, #36]
  42d500:	cmp	w0, #0x0
  42d504:	b.eq	42d518 <session_device_notify+0x1bc>  // b.none
  42d508:	ldr	w0, [sp, #36]
  42d50c:	cmp	w0, #0x1
  42d510:	b.eq	42d558 <session_device_notify+0x1fc>  // b.none
  42d514:	b	42d588 <session_device_notify+0x22c>
  42d518:	ldr	x5, [sp, #64]
  42d51c:	ldr	x0, [sp, #40]
  42d520:	ldr	w0, [x0, #32]
  42d524:	mov	w4, w0
  42d528:	ldr	w3, [sp, #56]
  42d52c:	ldr	w2, [sp, #52]
  42d530:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d534:	add	x1, x0, #0x1e8
  42d538:	mov	x0, x5
  42d53c:	bl	407590 <sd_bus_message_append@plt>
  42d540:	str	w0, [sp, #60]
  42d544:	ldr	w0, [sp, #60]
  42d548:	cmp	w0, #0x0
  42d54c:	b.ge	42d590 <session_device_notify+0x234>  // b.tcont
  42d550:	ldr	w19, [sp, #60]
  42d554:	b	42d5f8 <session_device_notify+0x29c>
  42d558:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d55c:	add	x0, x0, #0x1f0
  42d560:	str	x0, [sp, #80]
  42d564:	b	42d594 <session_device_notify+0x238>
  42d568:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d56c:	add	x0, x0, #0x1f8
  42d570:	str	x0, [sp, #80]
  42d574:	b	42d594 <session_device_notify+0x238>
  42d578:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d57c:	add	x0, x0, #0x200
  42d580:	str	x0, [sp, #80]
  42d584:	b	42d594 <session_device_notify+0x238>
  42d588:	mov	w19, #0xffffffea            	// #-22
  42d58c:	b	42d5f8 <session_device_notify+0x29c>
  42d590:	nop
  42d594:	ldr	x0, [sp, #80]
  42d598:	cmp	x0, #0x0
  42d59c:	b.eq	42d5d8 <session_device_notify+0x27c>  // b.none
  42d5a0:	ldr	x5, [sp, #64]
  42d5a4:	ldr	x4, [sp, #80]
  42d5a8:	ldr	w3, [sp, #56]
  42d5ac:	ldr	w2, [sp, #52]
  42d5b0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d5b4:	add	x1, x0, #0x208
  42d5b8:	mov	x0, x5
  42d5bc:	bl	407590 <sd_bus_message_append@plt>
  42d5c0:	str	w0, [sp, #60]
  42d5c4:	ldr	w0, [sp, #60]
  42d5c8:	cmp	w0, #0x0
  42d5cc:	b.ge	42d5d8 <session_device_notify+0x27c>  // b.tcont
  42d5d0:	ldr	w19, [sp, #60]
  42d5d4:	b	42d5f8 <session_device_notify+0x29c>
  42d5d8:	ldr	x0, [sp, #40]
  42d5dc:	ldr	x0, [x0]
  42d5e0:	ldr	x0, [x0]
  42d5e4:	ldr	x0, [x0, #8]
  42d5e8:	ldr	x1, [sp, #64]
  42d5ec:	mov	x2, #0x0                   	// #0
  42d5f0:	bl	407b30 <sd_bus_send@plt>
  42d5f4:	mov	w19, w0
  42d5f8:	add	x0, sp, #0x48
  42d5fc:	bl	42d234 <freep>
  42d600:	add	x0, sp, #0x40
  42d604:	bl	42d258 <sd_bus_message_unrefp>
  42d608:	mov	w1, w19
  42d60c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42d610:	ldr	x0, [x0, #4024]
  42d614:	ldr	x2, [sp, #88]
  42d618:	ldr	x0, [x0]
  42d61c:	eor	x0, x2, x0
  42d620:	cmp	x0, #0x0
  42d624:	b.eq	42d62c <session_device_notify+0x2d0>  // b.none
  42d628:	bl	407b20 <__stack_chk_fail@plt>
  42d62c:	mov	w0, w1
  42d630:	ldr	x19, [sp, #16]
  42d634:	ldp	x29, x30, [sp], #96
  42d638:	ret

000000000042d63c <sd_eviocrevoke>:
  42d63c:	stp	x29, x30, [sp, #-48]!
  42d640:	mov	x29, sp
  42d644:	str	w0, [sp, #28]
  42d648:	ldr	w0, [sp, #28]
  42d64c:	lsr	w0, w0, #31
  42d650:	and	w0, w0, #0xff
  42d654:	and	x0, x0, #0xff
  42d658:	cmp	x0, #0x0
  42d65c:	b.eq	42d688 <sd_eviocrevoke+0x4c>  // b.none
  42d660:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d664:	add	x1, x0, #0x17b
  42d668:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d66c:	add	x4, x0, #0x458
  42d670:	mov	w3, #0x5f                  	// #95
  42d674:	mov	x2, x1
  42d678:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d67c:	add	x1, x0, #0x210
  42d680:	mov	w0, #0x0                   	// #0
  42d684:	bl	407650 <log_assert_failed_realm@plt>
  42d688:	mov	x2, #0x0                   	// #0
  42d68c:	mov	x1, #0x4591                	// #17809
  42d690:	movk	x1, #0x4004, lsl #16
  42d694:	ldr	w0, [sp, #28]
  42d698:	bl	407e30 <ioctl@plt>
  42d69c:	cmp	w0, #0x0
  42d6a0:	b.ge	42d75c <sd_eviocrevoke+0x120>  // b.tcont
  42d6a4:	bl	407960 <__errno_location@plt>
  42d6a8:	ldr	w0, [x0]
  42d6ac:	cmp	w0, #0x16
  42d6b0:	b.ne	42d75c <sd_eviocrevoke+0x120>  // b.any
  42d6b4:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  42d6b8:	add	x0, x0, #0x9d
  42d6bc:	ldrb	w0, [x0]
  42d6c0:	eor	w0, w0, #0x1
  42d6c4:	and	w0, w0, #0xff
  42d6c8:	cmp	w0, #0x0
  42d6cc:	b.eq	42d75c <sd_eviocrevoke+0x120>  // b.none
  42d6d0:	mov	w0, #0x4                   	// #4
  42d6d4:	str	w0, [sp, #36]
  42d6d8:	bl	407960 <__errno_location@plt>
  42d6dc:	ldr	w0, [x0]
  42d6e0:	str	w0, [sp, #40]
  42d6e4:	str	wzr, [sp, #44]
  42d6e8:	ldr	w0, [sp, #44]
  42d6ec:	bl	4083e0 <log_get_max_level_realm@plt>
  42d6f0:	mov	w1, w0
  42d6f4:	ldr	w0, [sp, #36]
  42d6f8:	and	w0, w0, #0x7
  42d6fc:	cmp	w1, w0
  42d700:	b.lt	42d744 <sd_eviocrevoke+0x108>  // b.tstop
  42d704:	ldr	w0, [sp, #44]
  42d708:	lsl	w1, w0, #10
  42d70c:	ldr	w0, [sp, #36]
  42d710:	orr	w6, w1, w0
  42d714:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d718:	add	x1, x0, #0x17b
  42d71c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d720:	add	x5, x0, #0x218
  42d724:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d728:	add	x4, x0, #0x468
  42d72c:	mov	w3, #0x64                  	// #100
  42d730:	mov	x2, x1
  42d734:	ldr	w1, [sp, #40]
  42d738:	mov	w0, w6
  42d73c:	bl	407d60 <log_internal_realm@plt>
  42d740:	b	42d74c <sd_eviocrevoke+0x110>
  42d744:	ldr	w0, [sp, #40]
  42d748:	cmp	w0, #0x0
  42d74c:	adrp	x0, 461000 <_GLOBAL_OFFSET_TABLE_+0x58>
  42d750:	add	x0, x0, #0x9d
  42d754:	mov	w1, #0x1                   	// #1
  42d758:	strb	w1, [x0]
  42d75c:	nop
  42d760:	ldp	x29, x30, [sp], #48
  42d764:	ret

000000000042d768 <sd_drmsetmaster>:
  42d768:	stp	x29, x30, [sp, #-32]!
  42d76c:	mov	x29, sp
  42d770:	str	w0, [sp, #28]
  42d774:	ldr	w0, [sp, #28]
  42d778:	lsr	w0, w0, #31
  42d77c:	and	w0, w0, #0xff
  42d780:	and	x0, x0, #0xff
  42d784:	cmp	x0, #0x0
  42d788:	b.eq	42d7b4 <sd_drmsetmaster+0x4c>  // b.none
  42d78c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d790:	add	x1, x0, #0x17b
  42d794:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d798:	add	x4, x0, #0x478
  42d79c:	mov	w3, #0x6b                  	// #107
  42d7a0:	mov	x2, x1
  42d7a4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d7a8:	add	x1, x0, #0x210
  42d7ac:	mov	w0, #0x0                   	// #0
  42d7b0:	bl	407650 <log_assert_failed_realm@plt>
  42d7b4:	mov	w2, #0x0                   	// #0
  42d7b8:	mov	x1, #0x641e                	// #25630
  42d7bc:	ldr	w0, [sp, #28]
  42d7c0:	bl	407e30 <ioctl@plt>
  42d7c4:	cmp	w0, #0x0
  42d7c8:	b.ge	42d7dc <sd_drmsetmaster+0x74>  // b.tcont
  42d7cc:	bl	407960 <__errno_location@plt>
  42d7d0:	ldr	w0, [x0]
  42d7d4:	neg	w0, w0
  42d7d8:	b	42d7e0 <sd_drmsetmaster+0x78>
  42d7dc:	mov	w0, #0x0                   	// #0
  42d7e0:	ldp	x29, x30, [sp], #32
  42d7e4:	ret

000000000042d7e8 <sd_drmdropmaster>:
  42d7e8:	stp	x29, x30, [sp, #-32]!
  42d7ec:	mov	x29, sp
  42d7f0:	str	w0, [sp, #28]
  42d7f4:	ldr	w0, [sp, #28]
  42d7f8:	lsr	w0, w0, #31
  42d7fc:	and	w0, w0, #0xff
  42d800:	and	x0, x0, #0xff
  42d804:	cmp	x0, #0x0
  42d808:	b.eq	42d834 <sd_drmdropmaster+0x4c>  // b.none
  42d80c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d810:	add	x1, x0, #0x17b
  42d814:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d818:	add	x4, x0, #0x488
  42d81c:	mov	w3, #0x74                  	// #116
  42d820:	mov	x2, x1
  42d824:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d828:	add	x1, x0, #0x210
  42d82c:	mov	w0, #0x0                   	// #0
  42d830:	bl	407650 <log_assert_failed_realm@plt>
  42d834:	mov	w2, #0x0                   	// #0
  42d838:	mov	x1, #0x641f                	// #25631
  42d83c:	ldr	w0, [sp, #28]
  42d840:	bl	407e30 <ioctl@plt>
  42d844:	cmp	w0, #0x0
  42d848:	b.ge	42d85c <sd_drmdropmaster+0x74>  // b.tcont
  42d84c:	bl	407960 <__errno_location@plt>
  42d850:	ldr	w0, [x0]
  42d854:	neg	w0, w0
  42d858:	b	42d860 <sd_drmdropmaster+0x78>
  42d85c:	mov	w0, #0x0                   	// #0
  42d860:	ldp	x29, x30, [sp], #32
  42d864:	ret

000000000042d868 <session_device_open>:
  42d868:	stp	x29, x30, [sp, #-48]!
  42d86c:	mov	x29, sp
  42d870:	str	x0, [sp, #24]
  42d874:	strb	w1, [sp, #23]
  42d878:	ldr	x0, [sp, #24]
  42d87c:	cmp	x0, #0x0
  42d880:	cset	w0, eq  // eq = none
  42d884:	and	w0, w0, #0xff
  42d888:	and	x0, x0, #0xff
  42d88c:	cmp	x0, #0x0
  42d890:	b.eq	42d8bc <session_device_open+0x54>  // b.none
  42d894:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d898:	add	x1, x0, #0x17b
  42d89c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d8a0:	add	x4, x0, #0x4a0
  42d8a4:	mov	w3, #0x7f                  	// #127
  42d8a8:	mov	x2, x1
  42d8ac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d8b0:	add	x1, x0, #0x1a0
  42d8b4:	mov	w0, #0x0                   	// #0
  42d8b8:	bl	407650 <log_assert_failed_realm@plt>
  42d8bc:	ldr	x0, [sp, #24]
  42d8c0:	ldrb	w0, [x0, #36]
  42d8c4:	and	w0, w0, #0x7
  42d8c8:	and	w0, w0, #0xff
  42d8cc:	cmp	w0, #0x0
  42d8d0:	cset	w0, eq  // eq = none
  42d8d4:	and	w0, w0, #0xff
  42d8d8:	and	x0, x0, #0xff
  42d8dc:	cmp	x0, #0x0
  42d8e0:	b.eq	42d90c <session_device_open+0xa4>  // b.none
  42d8e4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d8e8:	add	x1, x0, #0x17b
  42d8ec:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d8f0:	add	x4, x0, #0x4a0
  42d8f4:	mov	w3, #0x80                  	// #128
  42d8f8:	mov	x2, x1
  42d8fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d900:	add	x1, x0, #0x248
  42d904:	mov	w0, #0x0                   	// #0
  42d908:	bl	407650 <log_assert_failed_realm@plt>
  42d90c:	ldr	x0, [sp, #24]
  42d910:	ldr	x0, [x0, #24]
  42d914:	cmp	x0, #0x0
  42d918:	cset	w0, eq  // eq = none
  42d91c:	and	w0, w0, #0xff
  42d920:	and	x0, x0, #0xff
  42d924:	cmp	x0, #0x0
  42d928:	b.eq	42d954 <session_device_open+0xec>  // b.none
  42d92c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d930:	add	x1, x0, #0x17b
  42d934:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d938:	add	x4, x0, #0x4a0
  42d93c:	mov	w3, #0x81                  	// #129
  42d940:	mov	x2, x1
  42d944:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42d948:	add	x1, x0, #0x268
  42d94c:	mov	w0, #0x0                   	// #0
  42d950:	bl	407650 <log_assert_failed_realm@plt>
  42d954:	ldr	x0, [sp, #24]
  42d958:	ldr	x0, [x0, #24]
  42d95c:	mov	w1, #0x902                 	// #2306
  42d960:	movk	w1, #0x8, lsl #16
  42d964:	bl	4082c0 <open64@plt>
  42d968:	str	w0, [sp, #40]
  42d96c:	ldr	w0, [sp, #40]
  42d970:	cmp	w0, #0x0
  42d974:	b.ge	42d988 <session_device_open+0x120>  // b.tcont
  42d978:	bl	407960 <__errno_location@plt>
  42d97c:	ldr	w0, [x0]
  42d980:	neg	w0, w0
  42d984:	b	42da1c <session_device_open+0x1b4>
  42d988:	ldr	x0, [sp, #24]
  42d98c:	ldrb	w0, [x0, #36]
  42d990:	ubfx	x0, x0, #0, #3
  42d994:	and	w0, w0, #0xff
  42d998:	cmp	w0, #0x1
  42d99c:	b.eq	42d9ac <session_device_open+0x144>  // b.none
  42d9a0:	cmp	w0, #0x2
  42d9a4:	b.eq	42d9ec <session_device_open+0x184>  // b.none
  42d9a8:	b	42da18 <session_device_open+0x1b0>
  42d9ac:	ldrb	w0, [sp, #23]
  42d9b0:	cmp	w0, #0x0
  42d9b4:	b.eq	42d9e0 <session_device_open+0x178>  // b.none
  42d9b8:	ldr	w0, [sp, #40]
  42d9bc:	bl	42d768 <sd_drmsetmaster>
  42d9c0:	str	w0, [sp, #44]
  42d9c4:	ldr	w0, [sp, #44]
  42d9c8:	cmp	w0, #0x0
  42d9cc:	b.ge	42da0c <session_device_open+0x1a4>  // b.tcont
  42d9d0:	ldr	w0, [sp, #40]
  42d9d4:	bl	4074f0 <close_nointr@plt>
  42d9d8:	ldr	w0, [sp, #44]
  42d9dc:	b	42da1c <session_device_open+0x1b4>
  42d9e0:	ldr	w0, [sp, #40]
  42d9e4:	bl	42d7e8 <sd_drmdropmaster>
  42d9e8:	b	42da0c <session_device_open+0x1a4>
  42d9ec:	ldrb	w0, [sp, #23]
  42d9f0:	eor	w0, w0, #0x1
  42d9f4:	and	w0, w0, #0xff
  42d9f8:	cmp	w0, #0x0
  42d9fc:	b.eq	42da14 <session_device_open+0x1ac>  // b.none
  42da00:	ldr	w0, [sp, #40]
  42da04:	bl	42d63c <sd_eviocrevoke>
  42da08:	b	42da14 <session_device_open+0x1ac>
  42da0c:	nop
  42da10:	b	42da18 <session_device_open+0x1b0>
  42da14:	nop
  42da18:	ldr	w0, [sp, #40]
  42da1c:	ldp	x29, x30, [sp], #48
  42da20:	ret

000000000042da24 <session_device_start>:
  42da24:	stp	x29, x30, [sp, #-48]!
  42da28:	mov	x29, sp
  42da2c:	str	x0, [sp, #24]
  42da30:	ldr	x0, [sp, #24]
  42da34:	cmp	x0, #0x0
  42da38:	cset	w0, eq  // eq = none
  42da3c:	and	w0, w0, #0xff
  42da40:	and	x0, x0, #0xff
  42da44:	cmp	x0, #0x0
  42da48:	b.eq	42da74 <session_device_start+0x50>  // b.none
  42da4c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42da50:	add	x1, x0, #0x17b
  42da54:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42da58:	add	x4, x0, #0x4b8
  42da5c:	mov	w3, #0xaa                  	// #170
  42da60:	mov	x2, x1
  42da64:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42da68:	add	x1, x0, #0x1a0
  42da6c:	mov	w0, #0x0                   	// #0
  42da70:	bl	407650 <log_assert_failed_realm@plt>
  42da74:	ldr	x0, [sp, #24]
  42da78:	ldr	x0, [x0]
  42da7c:	bl	4326f4 <session_is_active>
  42da80:	and	w0, w0, #0xff
  42da84:	eor	w0, w0, #0x1
  42da88:	and	w0, w0, #0xff
  42da8c:	and	x0, x0, #0xff
  42da90:	cmp	x0, #0x0
  42da94:	b.eq	42dac0 <session_device_start+0x9c>  // b.none
  42da98:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42da9c:	add	x1, x0, #0x17b
  42daa0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42daa4:	add	x4, x0, #0x4b8
  42daa8:	mov	w3, #0xab                  	// #171
  42daac:	mov	x2, x1
  42dab0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dab4:	add	x1, x0, #0x278
  42dab8:	mov	w0, #0x0                   	// #0
  42dabc:	bl	407650 <log_assert_failed_realm@plt>
  42dac0:	ldr	x0, [sp, #24]
  42dac4:	ldrb	w0, [x0, #36]
  42dac8:	and	w0, w0, #0x8
  42dacc:	and	w0, w0, #0xff
  42dad0:	cmp	w0, #0x0
  42dad4:	b.eq	42dae0 <session_device_start+0xbc>  // b.none
  42dad8:	mov	w0, #0x0                   	// #0
  42dadc:	b	42dc1c <session_device_start+0x1f8>
  42dae0:	ldr	x0, [sp, #24]
  42dae4:	ldrb	w0, [x0, #36]
  42dae8:	ubfx	x0, x0, #0, #3
  42daec:	and	w0, w0, #0xff
  42daf0:	cmp	w0, #0x1
  42daf4:	b.eq	42db04 <session_device_start+0xe0>  // b.none
  42daf8:	cmp	w0, #0x2
  42dafc:	b.eq	42dbc4 <session_device_start+0x1a0>  // b.none
  42db00:	b	42dc08 <session_device_start+0x1e4>
  42db04:	ldr	x0, [sp, #24]
  42db08:	ldr	w0, [x0, #32]
  42db0c:	cmp	w0, #0x0
  42db10:	b.ge	42dba0 <session_device_start+0x17c>  // b.tcont
  42db14:	mov	w0, #0x3                   	// #3
  42db18:	str	w0, [sp, #36]
  42db1c:	mov	w0, #0x9                   	// #9
  42db20:	movk	w0, #0x4000, lsl #16
  42db24:	str	w0, [sp, #40]
  42db28:	str	wzr, [sp, #44]
  42db2c:	ldr	w0, [sp, #44]
  42db30:	bl	4083e0 <log_get_max_level_realm@plt>
  42db34:	mov	w1, w0
  42db38:	ldr	w0, [sp, #36]
  42db3c:	and	w0, w0, #0x7
  42db40:	cmp	w1, w0
  42db44:	b.lt	42db88 <session_device_start+0x164>  // b.tstop
  42db48:	ldr	w0, [sp, #44]
  42db4c:	lsl	w1, w0, #10
  42db50:	ldr	w0, [sp, #36]
  42db54:	orr	w6, w1, w0
  42db58:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42db5c:	add	x1, x0, #0x17b
  42db60:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42db64:	add	x5, x0, #0x298
  42db68:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42db6c:	add	x4, x0, #0x4d0
  42db70:	mov	w3, #0xb4                  	// #180
  42db74:	mov	x2, x1
  42db78:	ldr	w1, [sp, #40]
  42db7c:	mov	w0, w6
  42db80:	bl	407d60 <log_internal_realm@plt>
  42db84:	b	42dc1c <session_device_start+0x1f8>
  42db88:	ldr	w0, [sp, #40]
  42db8c:	cmp	w0, #0x0
  42db90:	cneg	w0, w0, lt  // lt = tstop
  42db94:	and	w0, w0, #0xff
  42db98:	neg	w0, w0
  42db9c:	b	42dc1c <session_device_start+0x1f8>
  42dba0:	ldr	x0, [sp, #24]
  42dba4:	ldr	w0, [x0, #32]
  42dba8:	bl	42d768 <sd_drmsetmaster>
  42dbac:	str	w0, [sp, #32]
  42dbb0:	ldr	w0, [sp, #32]
  42dbb4:	cmp	w0, #0x0
  42dbb8:	b.ge	42dc04 <session_device_start+0x1e0>  // b.tcont
  42dbbc:	ldr	w0, [sp, #32]
  42dbc0:	b	42dc1c <session_device_start+0x1f8>
  42dbc4:	mov	w1, #0x1                   	// #1
  42dbc8:	ldr	x0, [sp, #24]
  42dbcc:	bl	42d868 <session_device_open>
  42dbd0:	str	w0, [sp, #32]
  42dbd4:	ldr	w0, [sp, #32]
  42dbd8:	cmp	w0, #0x0
  42dbdc:	b.ge	42dbe8 <session_device_start+0x1c4>  // b.tcont
  42dbe0:	ldr	w0, [sp, #32]
  42dbe4:	b	42dc1c <session_device_start+0x1f8>
  42dbe8:	ldr	x0, [sp, #24]
  42dbec:	ldr	w0, [x0, #32]
  42dbf0:	bl	4075e0 <safe_close@plt>
  42dbf4:	ldr	x0, [sp, #24]
  42dbf8:	ldr	w1, [sp, #32]
  42dbfc:	str	w1, [x0, #32]
  42dc00:	b	42dc08 <session_device_start+0x1e4>
  42dc04:	nop
  42dc08:	ldr	x0, [sp, #24]
  42dc0c:	ldrb	w1, [x0, #36]
  42dc10:	orr	w1, w1, #0x8
  42dc14:	strb	w1, [x0, #36]
  42dc18:	mov	w0, #0x0                   	// #0
  42dc1c:	ldp	x29, x30, [sp], #48
  42dc20:	ret

000000000042dc24 <session_device_stop>:
  42dc24:	stp	x29, x30, [sp, #-48]!
  42dc28:	mov	x29, sp
  42dc2c:	str	x0, [sp, #24]
  42dc30:	ldr	x0, [sp, #24]
  42dc34:	cmp	x0, #0x0
  42dc38:	cset	w0, eq  // eq = none
  42dc3c:	and	w0, w0, #0xff
  42dc40:	and	x0, x0, #0xff
  42dc44:	cmp	x0, #0x0
  42dc48:	b.eq	42dc74 <session_device_stop+0x50>  // b.none
  42dc4c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dc50:	add	x1, x0, #0x17b
  42dc54:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dc58:	add	x4, x0, #0x4e8
  42dc5c:	mov	w3, #0xd5                  	// #213
  42dc60:	mov	x2, x1
  42dc64:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dc68:	add	x1, x0, #0x1a0
  42dc6c:	mov	w0, #0x0                   	// #0
  42dc70:	bl	407650 <log_assert_failed_realm@plt>
  42dc74:	ldr	x0, [sp, #24]
  42dc78:	ldrb	w0, [x0, #36]
  42dc7c:	ubfx	x0, x0, #3, #1
  42dc80:	and	w0, w0, #0xff
  42dc84:	eor	w0, w0, #0x1
  42dc88:	and	w0, w0, #0xff
  42dc8c:	cmp	w0, #0x0
  42dc90:	b.ne	42dd74 <session_device_stop+0x150>  // b.any
  42dc94:	ldr	x0, [sp, #24]
  42dc98:	ldrb	w0, [x0, #36]
  42dc9c:	ubfx	x0, x0, #0, #3
  42dca0:	and	w0, w0, #0xff
  42dca4:	cmp	w0, #0x1
  42dca8:	b.eq	42dcb8 <session_device_stop+0x94>  // b.none
  42dcac:	cmp	w0, #0x2
  42dcb0:	b.eq	42dd50 <session_device_stop+0x12c>  // b.none
  42dcb4:	b	42dd60 <session_device_stop+0x13c>
  42dcb8:	ldr	x0, [sp, #24]
  42dcbc:	ldr	w0, [x0, #32]
  42dcc0:	cmp	w0, #0x0
  42dcc4:	b.ge	42dd40 <session_device_stop+0x11c>  // b.tcont
  42dcc8:	mov	w0, #0x3                   	// #3
  42dccc:	str	w0, [sp, #36]
  42dcd0:	str	wzr, [sp, #40]
  42dcd4:	str	wzr, [sp, #44]
  42dcd8:	ldr	w0, [sp, #44]
  42dcdc:	bl	4083e0 <log_get_max_level_realm@plt>
  42dce0:	mov	w1, w0
  42dce4:	ldr	w0, [sp, #36]
  42dce8:	and	w0, w0, #0x7
  42dcec:	cmp	w1, w0
  42dcf0:	b.lt	42dd34 <session_device_stop+0x110>  // b.tstop
  42dcf4:	ldr	w0, [sp, #44]
  42dcf8:	lsl	w1, w0, #10
  42dcfc:	ldr	w0, [sp, #36]
  42dd00:	orr	w6, w1, w0
  42dd04:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dd08:	add	x1, x0, #0x17b
  42dd0c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dd10:	add	x5, x0, #0x2f0
  42dd14:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dd18:	add	x4, x0, #0x500
  42dd1c:	mov	w3, #0xde                  	// #222
  42dd20:	mov	x2, x1
  42dd24:	ldr	w1, [sp, #40]
  42dd28:	mov	w0, w6
  42dd2c:	bl	407d60 <log_internal_realm@plt>
  42dd30:	b	42dd78 <session_device_stop+0x154>
  42dd34:	ldr	w0, [sp, #40]
  42dd38:	cmp	w0, #0x0
  42dd3c:	b	42dd78 <session_device_stop+0x154>
  42dd40:	ldr	x0, [sp, #24]
  42dd44:	ldr	w0, [x0, #32]
  42dd48:	bl	42d7e8 <sd_drmdropmaster>
  42dd4c:	b	42dd60 <session_device_stop+0x13c>
  42dd50:	ldr	x0, [sp, #24]
  42dd54:	ldr	w0, [x0, #32]
  42dd58:	bl	42d63c <sd_eviocrevoke>
  42dd5c:	nop
  42dd60:	ldr	x0, [sp, #24]
  42dd64:	ldrb	w1, [x0, #36]
  42dd68:	and	w1, w1, #0xfffffff7
  42dd6c:	strb	w1, [x0, #36]
  42dd70:	b	42dd78 <session_device_stop+0x154>
  42dd74:	nop
  42dd78:	ldp	x29, x30, [sp], #48
  42dd7c:	ret

000000000042dd80 <detect_device_type>:
  42dd80:	stp	x29, x30, [sp, #-64]!
  42dd84:	mov	x29, sp
  42dd88:	str	x0, [sp, #24]
  42dd8c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42dd90:	ldr	x0, [x0, #4024]
  42dd94:	ldr	x1, [x0]
  42dd98:	str	x1, [sp, #56]
  42dd9c:	mov	x1, #0x0                   	// #0
  42dda0:	str	wzr, [sp, #36]
  42dda4:	add	x0, sp, #0x28
  42dda8:	mov	x1, x0
  42ddac:	ldr	x0, [sp, #24]
  42ddb0:	bl	407630 <sd_device_get_sysname@plt>
  42ddb4:	cmp	w0, #0x0
  42ddb8:	b.lt	42ddd4 <detect_device_type+0x54>  // b.tstop
  42ddbc:	add	x0, sp, #0x30
  42ddc0:	mov	x1, x0
  42ddc4:	ldr	x0, [sp, #24]
  42ddc8:	bl	407890 <sd_device_get_subsystem@plt>
  42ddcc:	cmp	w0, #0x0
  42ddd0:	b.ge	42dddc <detect_device_type+0x5c>  // b.tcont
  42ddd4:	ldr	w0, [sp, #36]
  42ddd8:	b	42de64 <detect_device_type+0xe4>
  42dddc:	ldr	x2, [sp, #48]
  42dde0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42dde4:	add	x1, x0, #0x348
  42dde8:	mov	x0, x2
  42ddec:	bl	407f30 <strcmp@plt>
  42ddf0:	cmp	w0, #0x0
  42ddf4:	b.ne	42de20 <detect_device_type+0xa0>  // b.any
  42ddf8:	ldr	x2, [sp, #40]
  42ddfc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42de00:	add	x1, x0, #0x350
  42de04:	mov	x0, x2
  42de08:	bl	42d30c <startswith>
  42de0c:	cmp	x0, #0x0
  42de10:	b.eq	42de60 <detect_device_type+0xe0>  // b.none
  42de14:	mov	w0, #0x1                   	// #1
  42de18:	str	w0, [sp, #36]
  42de1c:	b	42de60 <detect_device_type+0xe0>
  42de20:	ldr	x2, [sp, #48]
  42de24:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42de28:	add	x1, x0, #0x358
  42de2c:	mov	x0, x2
  42de30:	bl	407f30 <strcmp@plt>
  42de34:	cmp	w0, #0x0
  42de38:	b.ne	42de60 <detect_device_type+0xe0>  // b.any
  42de3c:	ldr	x2, [sp, #40]
  42de40:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42de44:	add	x1, x0, #0x360
  42de48:	mov	x0, x2
  42de4c:	bl	42d30c <startswith>
  42de50:	cmp	x0, #0x0
  42de54:	b.eq	42de60 <detect_device_type+0xe0>  // b.none
  42de58:	mov	w0, #0x2                   	// #2
  42de5c:	str	w0, [sp, #36]
  42de60:	ldr	w0, [sp, #36]
  42de64:	mov	w1, w0
  42de68:	adrp	x0, 460000 <wordlist.10364+0x370>
  42de6c:	ldr	x0, [x0, #4024]
  42de70:	ldr	x2, [sp, #56]
  42de74:	ldr	x0, [x0]
  42de78:	eor	x0, x2, x0
  42de7c:	cmp	x0, #0x0
  42de80:	b.eq	42de88 <detect_device_type+0x108>  // b.none
  42de84:	bl	407b20 <__stack_chk_fail@plt>
  42de88:	mov	w0, w1
  42de8c:	ldp	x29, x30, [sp], #64
  42de90:	ret

000000000042de94 <session_device_verify>:
  42de94:	stp	x29, x30, [sp, #-96]!
  42de98:	mov	x29, sp
  42de9c:	str	x19, [sp, #16]
  42dea0:	str	x0, [sp, #40]
  42dea4:	adrp	x0, 460000 <wordlist.10364+0x370>
  42dea8:	ldr	x0, [x0, #4024]
  42deac:	ldr	x1, [x0]
  42deb0:	str	x1, [sp, #88]
  42deb4:	mov	x1, #0x0                   	// #0
  42deb8:	str	xzr, [sp, #56]
  42debc:	ldr	x0, [sp, #40]
  42dec0:	ldr	x1, [x0, #16]
  42dec4:	add	x0, sp, #0x38
  42dec8:	mov	x2, x1
  42decc:	mov	w1, #0x63                  	// #99
  42ded0:	bl	407b40 <sd_device_new_from_devnum@plt>
  42ded4:	str	w0, [sp, #52]
  42ded8:	ldr	w0, [sp, #52]
  42dedc:	cmp	w0, #0x0
  42dee0:	b.ge	42deec <session_device_verify+0x58>  // b.tcont
  42dee4:	ldr	w19, [sp, #52]
  42dee8:	b	42e0dc <session_device_verify+0x248>
  42deec:	ldr	x0, [sp, #56]
  42def0:	str	x0, [sp, #80]
  42def4:	ldr	x0, [sp, #80]
  42def8:	add	x1, sp, #0x40
  42defc:	bl	408320 <sd_device_get_syspath@plt>
  42df00:	cmp	w0, #0x0
  42df04:	b.lt	42df1c <session_device_verify+0x88>  // b.tstop
  42df08:	ldr	x0, [sp, #80]
  42df0c:	add	x1, sp, #0x48
  42df10:	bl	407340 <sd_device_get_devname@plt>
  42df14:	cmp	w0, #0x0
  42df18:	b.ge	42df24 <session_device_verify+0x90>  // b.tcont
  42df1c:	mov	w19, #0xffffffea            	// #-22
  42df20:	b	42e0dc <session_device_verify+0x248>
  42df24:	ldr	x0, [sp, #80]
  42df28:	bl	42dd80 <detect_device_type>
  42df2c:	and	w0, w0, #0x7
  42df30:	and	w2, w0, #0xff
  42df34:	ldr	x1, [sp, #40]
  42df38:	ldrb	w0, [x1, #36]
  42df3c:	bfxil	w0, w2, #0, #3
  42df40:	strb	w0, [x1, #36]
  42df44:	ldr	x0, [sp, #40]
  42df48:	ldrb	w0, [x0, #36]
  42df4c:	and	w0, w0, #0x7
  42df50:	and	w0, w0, #0xff
  42df54:	cmp	w0, #0x0
  42df58:	b.ne	42df64 <session_device_verify+0xd0>  // b.any
  42df5c:	mov	w19, #0xffffffed            	// #-19
  42df60:	b	42e0dc <session_device_verify+0x248>
  42df64:	ldr	x0, [sp, #40]
  42df68:	ldrb	w0, [x0, #36]
  42df6c:	and	w0, w0, #0x7
  42df70:	and	w0, w0, #0xff
  42df74:	cmp	w0, #0x2
  42df78:	b.ne	42dfc8 <session_device_verify+0x134>  // b.any
  42df7c:	ldr	x4, [sp, #56]
  42df80:	add	x0, sp, #0x50
  42df84:	mov	x3, x0
  42df88:	mov	x2, #0x0                   	// #0
  42df8c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42df90:	add	x1, x0, #0x358
  42df94:	mov	x0, x4
  42df98:	bl	407130 <sd_device_get_parent_with_subsystem_devtype@plt>
  42df9c:	cmp	w0, #0x0
  42dfa0:	b.ge	42dfac <session_device_verify+0x118>  // b.tcont
  42dfa4:	mov	w19, #0xffffffed            	// #-19
  42dfa8:	b	42e0dc <session_device_verify+0x248>
  42dfac:	ldr	x0, [sp, #80]
  42dfb0:	add	x1, sp, #0x40
  42dfb4:	bl	408320 <sd_device_get_syspath@plt>
  42dfb8:	cmp	w0, #0x0
  42dfbc:	b.ge	42dfe8 <session_device_verify+0x154>  // b.tcont
  42dfc0:	mov	w19, #0xffffffed            	// #-19
  42dfc4:	b	42e0dc <session_device_verify+0x248>
  42dfc8:	ldr	x0, [sp, #40]
  42dfcc:	ldrb	w0, [x0, #36]
  42dfd0:	and	w0, w0, #0x7
  42dfd4:	and	w0, w0, #0xff
  42dfd8:	cmp	w0, #0x1
  42dfdc:	b.eq	42dfe8 <session_device_verify+0x154>  // b.none
  42dfe0:	mov	w19, #0xffffffed            	// #-19
  42dfe4:	b	42e0dc <session_device_verify+0x248>
  42dfe8:	ldr	x0, [sp, #40]
  42dfec:	ldr	x0, [x0]
  42dff0:	ldr	x0, [x0]
  42dff4:	ldr	x0, [x0, #16]
  42dff8:	ldr	x1, [sp, #64]
  42dffc:	bl	42d28c <hashmap_get>
  42e000:	mov	x1, x0
  42e004:	ldr	x0, [sp, #40]
  42e008:	str	x1, [x0, #8]
  42e00c:	ldr	x0, [sp, #40]
  42e010:	ldr	x0, [x0, #8]
  42e014:	cmp	x0, #0x0
  42e018:	b.ne	42e084 <session_device_verify+0x1f0>  // b.any
  42e01c:	ldr	x0, [sp, #40]
  42e020:	ldr	x0, [x0]
  42e024:	ldr	x0, [x0]
  42e028:	ldr	x1, [sp, #80]
  42e02c:	bl	411a94 <manager_process_seat_device>
  42e030:	str	w0, [sp, #52]
  42e034:	ldr	w0, [sp, #52]
  42e038:	cmp	w0, #0x0
  42e03c:	b.ge	42e048 <session_device_verify+0x1b4>  // b.tcont
  42e040:	ldr	w19, [sp, #52]
  42e044:	b	42e0dc <session_device_verify+0x248>
  42e048:	ldr	x0, [sp, #40]
  42e04c:	ldr	x0, [x0]
  42e050:	ldr	x0, [x0]
  42e054:	ldr	x0, [x0, #16]
  42e058:	ldr	x1, [sp, #64]
  42e05c:	bl	42d28c <hashmap_get>
  42e060:	mov	x1, x0
  42e064:	ldr	x0, [sp, #40]
  42e068:	str	x1, [x0, #8]
  42e06c:	ldr	x0, [sp, #40]
  42e070:	ldr	x0, [x0, #8]
  42e074:	cmp	x0, #0x0
  42e078:	b.ne	42e084 <session_device_verify+0x1f0>  // b.any
  42e07c:	mov	w19, #0xffffffed            	// #-19
  42e080:	b	42e0dc <session_device_verify+0x248>
  42e084:	ldr	x0, [sp, #40]
  42e088:	ldr	x0, [x0, #8]
  42e08c:	ldr	x1, [x0, #16]
  42e090:	ldr	x0, [sp, #40]
  42e094:	ldr	x0, [x0]
  42e098:	ldr	x0, [x0, #136]
  42e09c:	cmp	x1, x0
  42e0a0:	b.eq	42e0ac <session_device_verify+0x218>  // b.none
  42e0a4:	mov	w19, #0xffffffff            	// #-1
  42e0a8:	b	42e0dc <session_device_verify+0x248>
  42e0ac:	ldr	x0, [sp, #72]
  42e0b0:	bl	407f90 <strdup@plt>
  42e0b4:	mov	x1, x0
  42e0b8:	ldr	x0, [sp, #40]
  42e0bc:	str	x1, [x0, #24]
  42e0c0:	ldr	x0, [sp, #40]
  42e0c4:	ldr	x0, [x0, #24]
  42e0c8:	cmp	x0, #0x0
  42e0cc:	b.ne	42e0d8 <session_device_verify+0x244>  // b.any
  42e0d0:	mov	w19, #0xfffffff4            	// #-12
  42e0d4:	b	42e0dc <session_device_verify+0x248>
  42e0d8:	mov	w19, #0x0                   	// #0
  42e0dc:	add	x0, sp, #0x38
  42e0e0:	bl	42d200 <sd_device_unrefp>
  42e0e4:	mov	w1, w19
  42e0e8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e0ec:	ldr	x0, [x0, #4024]
  42e0f0:	ldr	x2, [sp, #88]
  42e0f4:	ldr	x0, [x0]
  42e0f8:	eor	x0, x2, x0
  42e0fc:	cmp	x0, #0x0
  42e100:	b.eq	42e108 <session_device_verify+0x274>  // b.none
  42e104:	bl	407b20 <__stack_chk_fail@plt>
  42e108:	mov	w0, w1
  42e10c:	ldr	x19, [sp, #16]
  42e110:	ldp	x29, x30, [sp], #96
  42e114:	ret

000000000042e118 <session_device_new>:
  42e118:	stp	x29, x30, [sp, #-80]!
  42e11c:	mov	x29, sp
  42e120:	str	x0, [sp, #40]
  42e124:	str	x1, [sp, #32]
  42e128:	strb	w2, [sp, #31]
  42e12c:	str	x3, [sp, #16]
  42e130:	ldr	x0, [sp, #40]
  42e134:	cmp	x0, #0x0
  42e138:	cset	w0, eq  // eq = none
  42e13c:	and	w0, w0, #0xff
  42e140:	and	x0, x0, #0xff
  42e144:	cmp	x0, #0x0
  42e148:	b.eq	42e174 <session_device_new+0x5c>  // b.none
  42e14c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e150:	add	x1, x0, #0x17b
  42e154:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e158:	add	x4, x0, #0x518
  42e15c:	mov	w3, #0x14d                 	// #333
  42e160:	mov	x2, x1
  42e164:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e168:	add	x1, x0, #0x368
  42e16c:	mov	w0, #0x0                   	// #0
  42e170:	bl	407650 <log_assert_failed_realm@plt>
  42e174:	ldr	x0, [sp, #16]
  42e178:	cmp	x0, #0x0
  42e17c:	cset	w0, eq  // eq = none
  42e180:	and	w0, w0, #0xff
  42e184:	and	x0, x0, #0xff
  42e188:	cmp	x0, #0x0
  42e18c:	b.eq	42e1b8 <session_device_new+0xa0>  // b.none
  42e190:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e194:	add	x1, x0, #0x17b
  42e198:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e19c:	add	x4, x0, #0x518
  42e1a0:	mov	w3, #0x14e                 	// #334
  42e1a4:	mov	x2, x1
  42e1a8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e1ac:	add	x1, x0, #0x370
  42e1b0:	mov	w0, #0x0                   	// #0
  42e1b4:	bl	407650 <log_assert_failed_realm@plt>
  42e1b8:	ldr	x0, [sp, #40]
  42e1bc:	ldr	x0, [x0, #136]
  42e1c0:	cmp	x0, #0x0
  42e1c4:	b.ne	42e1d0 <session_device_new+0xb8>  // b.any
  42e1c8:	mov	w0, #0xffffffff            	// #-1
  42e1cc:	b	42e41c <session_device_new+0x304>
  42e1d0:	mov	x1, #0x38                  	// #56
  42e1d4:	mov	x0, #0x1                   	// #1
  42e1d8:	bl	407fa0 <calloc@plt>
  42e1dc:	str	x0, [sp, #56]
  42e1e0:	ldr	x0, [sp, #56]
  42e1e4:	cmp	x0, #0x0
  42e1e8:	b.ne	42e1f4 <session_device_new+0xdc>  // b.any
  42e1ec:	mov	w0, #0xfffffff4            	// #-12
  42e1f0:	b	42e41c <session_device_new+0x304>
  42e1f4:	ldr	x0, [sp, #56]
  42e1f8:	ldr	x1, [sp, #40]
  42e1fc:	str	x1, [x0]
  42e200:	ldr	x0, [sp, #56]
  42e204:	ldr	x1, [sp, #32]
  42e208:	str	x1, [x0, #16]
  42e20c:	ldr	x0, [sp, #56]
  42e210:	mov	w1, #0xffffffff            	// #-1
  42e214:	str	w1, [x0, #32]
  42e218:	ldr	x0, [sp, #56]
  42e21c:	ldrb	w1, [x0, #36]
  42e220:	and	w1, w1, #0xfffffff8
  42e224:	strb	w1, [x0, #36]
  42e228:	ldr	x0, [sp, #56]
  42e22c:	bl	42de94 <session_device_verify>
  42e230:	str	w0, [sp, #52]
  42e234:	ldr	w0, [sp, #52]
  42e238:	cmp	w0, #0x0
  42e23c:	b.lt	42e3d4 <session_device_new+0x2bc>  // b.tstop
  42e240:	ldr	x0, [sp, #40]
  42e244:	ldr	x3, [x0, #240]
  42e248:	ldr	x0, [sp, #56]
  42e24c:	add	x0, x0, #0x10
  42e250:	ldr	x2, [sp, #56]
  42e254:	mov	x1, x0
  42e258:	mov	x0, x3
  42e25c:	bl	407dd0 <hashmap_put@plt>
  42e260:	str	w0, [sp, #52]
  42e264:	ldr	w0, [sp, #52]
  42e268:	cmp	w0, #0x0
  42e26c:	b.lt	42e3dc <session_device_new+0x2c4>  // b.tstop
  42e270:	ldrb	w0, [sp, #31]
  42e274:	cmp	w0, #0x0
  42e278:	b.eq	42e320 <session_device_new+0x208>  // b.none
  42e27c:	ldr	x0, [sp, #40]
  42e280:	bl	4326f4 <session_is_active>
  42e284:	and	w2, w0, #0xff
  42e288:	ldr	x1, [sp, #56]
  42e28c:	ldrb	w0, [x1, #36]
  42e290:	bfi	w0, w2, #3, #1
  42e294:	strb	w0, [x1, #36]
  42e298:	ldr	x0, [sp, #56]
  42e29c:	ldrb	w0, [x0, #36]
  42e2a0:	ubfx	x0, x0, #3, #1
  42e2a4:	and	w0, w0, #0xff
  42e2a8:	mov	w1, w0
  42e2ac:	ldr	x0, [sp, #56]
  42e2b0:	bl	42d868 <session_device_open>
  42e2b4:	str	w0, [sp, #52]
  42e2b8:	ldr	w0, [sp, #52]
  42e2bc:	cmp	w0, #0x0
  42e2c0:	b.ge	42e314 <session_device_new+0x1fc>  // b.tcont
  42e2c4:	ldr	x0, [sp, #56]
  42e2c8:	ldrb	w0, [x0, #36]
  42e2cc:	and	w0, w0, #0x8
  42e2d0:	and	w0, w0, #0xff
  42e2d4:	cmp	w0, #0x0
  42e2d8:	b.eq	42e308 <session_device_new+0x1f0>  // b.none
  42e2dc:	ldr	w0, [sp, #52]
  42e2e0:	cmn	w0, #0x16
  42e2e4:	b.ne	42e308 <session_device_new+0x1f0>  // b.any
  42e2e8:	ldr	x0, [sp, #56]
  42e2ec:	ldrb	w1, [x0, #36]
  42e2f0:	and	w1, w1, #0xfffffff7
  42e2f4:	strb	w1, [x0, #36]
  42e2f8:	mov	w1, #0x0                   	// #0
  42e2fc:	ldr	x0, [sp, #56]
  42e300:	bl	42d868 <session_device_open>
  42e304:	str	w0, [sp, #52]
  42e308:	ldr	w0, [sp, #52]
  42e30c:	cmp	w0, #0x0
  42e310:	b.lt	42e3e4 <session_device_new+0x2cc>  // b.tstop
  42e314:	ldr	x0, [sp, #56]
  42e318:	ldr	w1, [sp, #52]
  42e31c:	str	w1, [x0, #32]
  42e320:	ldr	x0, [sp, #56]
  42e324:	ldr	x0, [x0, #8]
  42e328:	add	x0, x0, #0x40
  42e32c:	str	x0, [sp, #64]
  42e330:	ldr	x0, [sp, #56]
  42e334:	str	x0, [sp, #72]
  42e338:	ldr	x0, [sp, #72]
  42e33c:	cmp	x0, #0x0
  42e340:	cset	w0, eq  // eq = none
  42e344:	and	w0, w0, #0xff
  42e348:	and	x0, x0, #0xff
  42e34c:	cmp	x0, #0x0
  42e350:	b.eq	42e37c <session_device_new+0x264>  // b.none
  42e354:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e358:	add	x1, x0, #0x17b
  42e35c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e360:	add	x4, x0, #0x518
  42e364:	mov	w3, #0x177                 	// #375
  42e368:	mov	x2, x1
  42e36c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e370:	add	x1, x0, #0x378
  42e374:	mov	w0, #0x0                   	// #0
  42e378:	bl	407650 <log_assert_failed_realm@plt>
  42e37c:	ldr	x0, [sp, #64]
  42e380:	ldr	x1, [x0]
  42e384:	ldr	x0, [sp, #72]
  42e388:	str	x1, [x0, #40]
  42e38c:	ldr	x0, [sp, #72]
  42e390:	ldr	x0, [x0, #40]
  42e394:	cmp	x0, #0x0
  42e398:	b.eq	42e3ac <session_device_new+0x294>  // b.none
  42e39c:	ldr	x0, [sp, #72]
  42e3a0:	ldr	x0, [x0, #40]
  42e3a4:	ldr	x1, [sp, #72]
  42e3a8:	str	x1, [x0, #48]
  42e3ac:	ldr	x0, [sp, #72]
  42e3b0:	str	xzr, [x0, #48]
  42e3b4:	ldr	x0, [sp, #64]
  42e3b8:	ldr	x1, [sp, #72]
  42e3bc:	str	x1, [x0]
  42e3c0:	ldr	x0, [sp, #16]
  42e3c4:	ldr	x1, [sp, #56]
  42e3c8:	str	x1, [x0]
  42e3cc:	mov	w0, #0x0                   	// #0
  42e3d0:	b	42e41c <session_device_new+0x304>
  42e3d4:	nop
  42e3d8:	b	42e3e8 <session_device_new+0x2d0>
  42e3dc:	nop
  42e3e0:	b	42e3e8 <session_device_new+0x2d0>
  42e3e4:	nop
  42e3e8:	ldr	x0, [sp, #40]
  42e3ec:	ldr	x2, [x0, #240]
  42e3f0:	ldr	x0, [sp, #56]
  42e3f4:	add	x0, x0, #0x10
  42e3f8:	mov	x1, x0
  42e3fc:	mov	x0, x2
  42e400:	bl	42d2b0 <hashmap_remove>
  42e404:	ldr	x0, [sp, #56]
  42e408:	ldr	x0, [x0, #24]
  42e40c:	bl	408150 <free@plt>
  42e410:	ldr	x0, [sp, #56]
  42e414:	bl	408150 <free@plt>
  42e418:	ldr	w0, [sp, #52]
  42e41c:	ldp	x29, x30, [sp], #80
  42e420:	ret

000000000042e424 <session_device_free>:
  42e424:	stp	x29, x30, [sp, #-64]!
  42e428:	mov	x29, sp
  42e42c:	stp	x19, x20, [sp, #16]
  42e430:	str	x0, [sp, #40]
  42e434:	ldr	x0, [sp, #40]
  42e438:	cmp	x0, #0x0
  42e43c:	cset	w0, eq  // eq = none
  42e440:	and	w0, w0, #0xff
  42e444:	and	x0, x0, #0xff
  42e448:	cmp	x0, #0x0
  42e44c:	b.eq	42e478 <session_device_free+0x54>  // b.none
  42e450:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e454:	add	x1, x0, #0x17b
  42e458:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e45c:	add	x4, x0, #0x530
  42e460:	mov	w3, #0x184                 	// #388
  42e464:	mov	x2, x1
  42e468:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e46c:	add	x1, x0, #0x1a0
  42e470:	mov	w0, #0x0                   	// #0
  42e474:	bl	407650 <log_assert_failed_realm@plt>
  42e478:	ldr	x0, [sp, #40]
  42e47c:	ldrb	w0, [x0, #36]
  42e480:	and	w0, w0, #0x10
  42e484:	and	w0, w0, #0xff
  42e488:	cmp	w0, #0x0
  42e48c:	b.eq	42e4d4 <session_device_free+0xb0>  // b.none
  42e490:	ldr	x0, [sp, #40]
  42e494:	ldr	x0, [x0]
  42e498:	ldr	x19, [x0, #8]
  42e49c:	ldr	x0, [sp, #40]
  42e4a0:	ldr	x0, [x0, #16]
  42e4a4:	bl	407e60 <gnu_dev_major@plt>
  42e4a8:	mov	w20, w0
  42e4ac:	ldr	x0, [sp, #40]
  42e4b0:	ldr	x0, [x0, #16]
  42e4b4:	bl	408160 <gnu_dev_minor@plt>
  42e4b8:	mov	w4, w0
  42e4bc:	mov	w3, w20
  42e4c0:	mov	x2, x19
  42e4c4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e4c8:	add	x1, x0, #0x380
  42e4cc:	mov	w0, #0x0                   	// #0
  42e4d0:	bl	407990 <sd_notifyf@plt>
  42e4d4:	ldr	x0, [sp, #40]
  42e4d8:	bl	42dc24 <session_device_stop>
  42e4dc:	mov	w1, #0x3                   	// #3
  42e4e0:	ldr	x0, [sp, #40]
  42e4e4:	bl	42d35c <session_device_notify>
  42e4e8:	ldr	x0, [sp, #40]
  42e4ec:	ldr	w0, [x0, #32]
  42e4f0:	bl	4075e0 <safe_close@plt>
  42e4f4:	ldr	x0, [sp, #40]
  42e4f8:	ldr	x0, [x0, #8]
  42e4fc:	add	x0, x0, #0x40
  42e500:	str	x0, [sp, #48]
  42e504:	ldr	x0, [sp, #40]
  42e508:	str	x0, [sp, #56]
  42e50c:	ldr	x0, [sp, #56]
  42e510:	cmp	x0, #0x0
  42e514:	cset	w0, eq  // eq = none
  42e518:	and	w0, w0, #0xff
  42e51c:	and	x0, x0, #0xff
  42e520:	cmp	x0, #0x0
  42e524:	b.eq	42e550 <session_device_free+0x12c>  // b.none
  42e528:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e52c:	add	x1, x0, #0x17b
  42e530:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e534:	add	x4, x0, #0x530
  42e538:	mov	w3, #0x191                 	// #401
  42e53c:	mov	x2, x1
  42e540:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e544:	add	x1, x0, #0x378
  42e548:	mov	w0, #0x0                   	// #0
  42e54c:	bl	407650 <log_assert_failed_realm@plt>
  42e550:	ldr	x0, [sp, #56]
  42e554:	ldr	x0, [x0, #40]
  42e558:	cmp	x0, #0x0
  42e55c:	b.eq	42e574 <session_device_free+0x150>  // b.none
  42e560:	ldr	x0, [sp, #56]
  42e564:	ldr	x0, [x0, #40]
  42e568:	ldr	x1, [sp, #56]
  42e56c:	ldr	x1, [x1, #48]
  42e570:	str	x1, [x0, #48]
  42e574:	ldr	x0, [sp, #56]
  42e578:	ldr	x0, [x0, #48]
  42e57c:	cmp	x0, #0x0
  42e580:	b.eq	42e59c <session_device_free+0x178>  // b.none
  42e584:	ldr	x0, [sp, #56]
  42e588:	ldr	x0, [x0, #48]
  42e58c:	ldr	x1, [sp, #56]
  42e590:	ldr	x1, [x1, #40]
  42e594:	str	x1, [x0, #40]
  42e598:	b	42e5f8 <session_device_free+0x1d4>
  42e59c:	ldr	x0, [sp, #48]
  42e5a0:	ldr	x0, [x0]
  42e5a4:	ldr	x1, [sp, #56]
  42e5a8:	cmp	x1, x0
  42e5ac:	cset	w0, ne  // ne = any
  42e5b0:	and	w0, w0, #0xff
  42e5b4:	and	x0, x0, #0xff
  42e5b8:	cmp	x0, #0x0
  42e5bc:	b.eq	42e5e8 <session_device_free+0x1c4>  // b.none
  42e5c0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e5c4:	add	x1, x0, #0x17b
  42e5c8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e5cc:	add	x4, x0, #0x530
  42e5d0:	mov	w3, #0x191                 	// #401
  42e5d4:	mov	x2, x1
  42e5d8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e5dc:	add	x1, x0, #0x3b0
  42e5e0:	mov	w0, #0x0                   	// #0
  42e5e4:	bl	407650 <log_assert_failed_realm@plt>
  42e5e8:	ldr	x0, [sp, #56]
  42e5ec:	ldr	x1, [x0, #40]
  42e5f0:	ldr	x0, [sp, #48]
  42e5f4:	str	x1, [x0]
  42e5f8:	ldr	x0, [sp, #56]
  42e5fc:	str	xzr, [x0, #48]
  42e600:	ldr	x0, [sp, #56]
  42e604:	ldr	x1, [x0, #48]
  42e608:	ldr	x0, [sp, #56]
  42e60c:	str	x1, [x0, #40]
  42e610:	ldr	x0, [sp, #40]
  42e614:	ldr	x0, [x0]
  42e618:	ldr	x2, [x0, #240]
  42e61c:	ldr	x0, [sp, #40]
  42e620:	add	x0, x0, #0x10
  42e624:	mov	x1, x0
  42e628:	mov	x0, x2
  42e62c:	bl	42d2b0 <hashmap_remove>
  42e630:	ldr	x0, [sp, #40]
  42e634:	ldr	x0, [x0, #24]
  42e638:	bl	408150 <free@plt>
  42e63c:	ldr	x0, [sp, #40]
  42e640:	bl	408150 <free@plt>
  42e644:	nop
  42e648:	ldp	x19, x20, [sp, #16]
  42e64c:	ldp	x29, x30, [sp], #64
  42e650:	ret

000000000042e654 <session_device_complete_pause>:
  42e654:	stp	x29, x30, [sp, #-64]!
  42e658:	mov	x29, sp
  42e65c:	str	x0, [sp, #24]
  42e660:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e664:	ldr	x0, [x0, #4024]
  42e668:	ldr	x1, [x0]
  42e66c:	str	x1, [sp, #56]
  42e670:	mov	x1, #0x0                   	// #0
  42e674:	ldr	x0, [sp, #24]
  42e678:	ldrb	w0, [x0, #36]
  42e67c:	ubfx	x0, x0, #3, #1
  42e680:	and	w0, w0, #0xff
  42e684:	eor	w0, w0, #0x1
  42e688:	and	w0, w0, #0xff
  42e68c:	cmp	w0, #0x0
  42e690:	b.ne	42e704 <session_device_complete_pause+0xb0>  // b.any
  42e694:	ldr	x0, [sp, #24]
  42e698:	bl	42dc24 <session_device_stop>
  42e69c:	mov	w0, #0xfffffffe            	// #-2
  42e6a0:	str	w0, [sp, #40]
  42e6a4:	str	xzr, [sp, #48]
  42e6a8:	b	42e6c8 <session_device_complete_pause+0x74>
  42e6ac:	ldr	x0, [sp, #32]
  42e6b0:	ldrb	w0, [x0, #36]
  42e6b4:	and	w0, w0, #0x8
  42e6b8:	and	w0, w0, #0xff
  42e6bc:	cmp	w0, #0x0
  42e6c0:	b.eq	42e6c8 <session_device_complete_pause+0x74>  // b.none
  42e6c4:	b	42e708 <session_device_complete_pause+0xb4>
  42e6c8:	ldr	x0, [sp, #24]
  42e6cc:	ldr	x0, [x0]
  42e6d0:	ldr	x0, [x0, #240]
  42e6d4:	add	x2, sp, #0x20
  42e6d8:	add	x1, sp, #0x28
  42e6dc:	mov	x3, #0x0                   	// #0
  42e6e0:	bl	42d2d4 <hashmap_iterate>
  42e6e4:	and	w0, w0, #0xff
  42e6e8:	cmp	w0, #0x0
  42e6ec:	b.ne	42e6ac <session_device_complete_pause+0x58>  // b.any
  42e6f0:	ldr	x0, [sp, #24]
  42e6f4:	ldr	x0, [x0]
  42e6f8:	ldr	x0, [x0, #136]
  42e6fc:	bl	428f18 <seat_complete_switch>
  42e700:	b	42e708 <session_device_complete_pause+0xb4>
  42e704:	nop
  42e708:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e70c:	ldr	x0, [x0, #4024]
  42e710:	ldr	x1, [sp, #56]
  42e714:	ldr	x0, [x0]
  42e718:	eor	x0, x1, x0
  42e71c:	cmp	x0, #0x0
  42e720:	b.eq	42e728 <session_device_complete_pause+0xd4>  // b.none
  42e724:	bl	407b20 <__stack_chk_fail@plt>
  42e728:	ldp	x29, x30, [sp], #64
  42e72c:	ret

000000000042e730 <session_device_resume_all>:
  42e730:	stp	x29, x30, [sp, #-64]!
  42e734:	mov	x29, sp
  42e738:	str	x0, [sp, #24]
  42e73c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e740:	ldr	x0, [x0, #4024]
  42e744:	ldr	x1, [x0]
  42e748:	str	x1, [sp, #56]
  42e74c:	mov	x1, #0x0                   	// #0
  42e750:	ldr	x0, [sp, #24]
  42e754:	cmp	x0, #0x0
  42e758:	cset	w0, eq  // eq = none
  42e75c:	and	w0, w0, #0xff
  42e760:	and	x0, x0, #0xff
  42e764:	cmp	x0, #0x0
  42e768:	b.eq	42e794 <session_device_resume_all+0x64>  // b.none
  42e76c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e770:	add	x1, x0, #0x17b
  42e774:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e778:	add	x4, x0, #0x548
  42e77c:	mov	w3, #0x1af                 	// #431
  42e780:	mov	x2, x1
  42e784:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e788:	add	x1, x0, #0x368
  42e78c:	mov	w0, #0x0                   	// #0
  42e790:	bl	407650 <log_assert_failed_realm@plt>
  42e794:	mov	w0, #0xfffffffe            	// #-2
  42e798:	str	w0, [sp, #40]
  42e79c:	str	xzr, [sp, #48]
  42e7a0:	b	42e7f4 <session_device_resume_all+0xc4>
  42e7a4:	ldr	x0, [sp, #32]
  42e7a8:	ldrb	w0, [x0, #36]
  42e7ac:	and	w0, w0, #0x8
  42e7b0:	and	w0, w0, #0xff
  42e7b4:	cmp	w0, #0x0
  42e7b8:	b.eq	42e7c0 <session_device_resume_all+0x90>  // b.none
  42e7bc:	b	42e7f4 <session_device_resume_all+0xc4>
  42e7c0:	ldr	x0, [sp, #32]
  42e7c4:	bl	42da24 <session_device_start>
  42e7c8:	cmp	w0, #0x0
  42e7cc:	b.ge	42e7d4 <session_device_resume_all+0xa4>  // b.tcont
  42e7d0:	b	42e7f4 <session_device_resume_all+0xc4>
  42e7d4:	ldr	x0, [sp, #32]
  42e7d8:	bl	42ea4c <session_device_save>
  42e7dc:	cmp	w0, #0x0
  42e7e0:	b.ge	42e7e8 <session_device_resume_all+0xb8>  // b.tcont
  42e7e4:	b	42e7f4 <session_device_resume_all+0xc4>
  42e7e8:	ldr	x0, [sp, #32]
  42e7ec:	mov	w1, #0x0                   	// #0
  42e7f0:	bl	42d35c <session_device_notify>
  42e7f4:	ldr	x0, [sp, #24]
  42e7f8:	ldr	x0, [x0, #240]
  42e7fc:	add	x2, sp, #0x20
  42e800:	add	x1, sp, #0x28
  42e804:	mov	x3, #0x0                   	// #0
  42e808:	bl	42d2d4 <hashmap_iterate>
  42e80c:	and	w0, w0, #0xff
  42e810:	cmp	w0, #0x0
  42e814:	b.ne	42e7a4 <session_device_resume_all+0x74>  // b.any
  42e818:	nop
  42e81c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e820:	ldr	x0, [x0, #4024]
  42e824:	ldr	x1, [sp, #56]
  42e828:	ldr	x0, [x0]
  42e82c:	eor	x0, x1, x0
  42e830:	cmp	x0, #0x0
  42e834:	b.eq	42e83c <session_device_resume_all+0x10c>  // b.none
  42e838:	bl	407b20 <__stack_chk_fail@plt>
  42e83c:	ldp	x29, x30, [sp], #64
  42e840:	ret

000000000042e844 <session_device_pause_all>:
  42e844:	stp	x29, x30, [sp, #-64]!
  42e848:	mov	x29, sp
  42e84c:	str	x0, [sp, #24]
  42e850:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e854:	ldr	x0, [x0, #4024]
  42e858:	ldr	x1, [x0]
  42e85c:	str	x1, [sp, #56]
  42e860:	mov	x1, #0x0                   	// #0
  42e864:	ldr	x0, [sp, #24]
  42e868:	cmp	x0, #0x0
  42e86c:	cset	w0, eq  // eq = none
  42e870:	and	w0, w0, #0xff
  42e874:	and	x0, x0, #0xff
  42e878:	cmp	x0, #0x0
  42e87c:	b.eq	42e8a8 <session_device_pause_all+0x64>  // b.none
  42e880:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e884:	add	x1, x0, #0x17b
  42e888:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e88c:	add	x4, x0, #0x568
  42e890:	mov	w3, #0x1c2                 	// #450
  42e894:	mov	x2, x1
  42e898:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e89c:	add	x1, x0, #0x368
  42e8a0:	mov	w0, #0x0                   	// #0
  42e8a4:	bl	407650 <log_assert_failed_realm@plt>
  42e8a8:	mov	w0, #0xfffffffe            	// #-2
  42e8ac:	str	w0, [sp, #40]
  42e8b0:	str	xzr, [sp, #48]
  42e8b4:	b	42e8f0 <session_device_pause_all+0xac>
  42e8b8:	ldr	x0, [sp, #32]
  42e8bc:	ldrb	w0, [x0, #36]
  42e8c0:	ubfx	x0, x0, #3, #1
  42e8c4:	and	w0, w0, #0xff
  42e8c8:	eor	w0, w0, #0x1
  42e8cc:	and	w0, w0, #0xff
  42e8d0:	cmp	w0, #0x0
  42e8d4:	b.eq	42e8dc <session_device_pause_all+0x98>  // b.none
  42e8d8:	b	42e8f0 <session_device_pause_all+0xac>
  42e8dc:	ldr	x0, [sp, #32]
  42e8e0:	bl	42dc24 <session_device_stop>
  42e8e4:	ldr	x0, [sp, #32]
  42e8e8:	mov	w1, #0x2                   	// #2
  42e8ec:	bl	42d35c <session_device_notify>
  42e8f0:	ldr	x0, [sp, #24]
  42e8f4:	ldr	x0, [x0, #240]
  42e8f8:	add	x2, sp, #0x20
  42e8fc:	add	x1, sp, #0x28
  42e900:	mov	x3, #0x0                   	// #0
  42e904:	bl	42d2d4 <hashmap_iterate>
  42e908:	and	w0, w0, #0xff
  42e90c:	cmp	w0, #0x0
  42e910:	b.ne	42e8b8 <session_device_pause_all+0x74>  // b.any
  42e914:	nop
  42e918:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e91c:	ldr	x0, [x0, #4024]
  42e920:	ldr	x1, [sp, #56]
  42e924:	ldr	x0, [x0]
  42e928:	eor	x0, x1, x0
  42e92c:	cmp	x0, #0x0
  42e930:	b.eq	42e938 <session_device_pause_all+0xf4>  // b.none
  42e934:	bl	407b20 <__stack_chk_fail@plt>
  42e938:	ldp	x29, x30, [sp], #64
  42e93c:	ret

000000000042e940 <session_device_try_pause_all>:
  42e940:	stp	x29, x30, [sp, #-80]!
  42e944:	mov	x29, sp
  42e948:	str	x0, [sp, #24]
  42e94c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42e950:	ldr	x0, [x0, #4024]
  42e954:	ldr	x1, [x0]
  42e958:	str	x1, [sp, #72]
  42e95c:	mov	x1, #0x0                   	// #0
  42e960:	str	wzr, [sp, #44]
  42e964:	ldr	x0, [sp, #24]
  42e968:	cmp	x0, #0x0
  42e96c:	cset	w0, eq  // eq = none
  42e970:	and	w0, w0, #0xff
  42e974:	and	x0, x0, #0xff
  42e978:	cmp	x0, #0x0
  42e97c:	b.eq	42e9a8 <session_device_try_pause_all+0x68>  // b.none
  42e980:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e984:	add	x1, x0, #0x17b
  42e988:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e98c:	add	x4, x0, #0x588
  42e990:	mov	w3, #0x1d2                 	// #466
  42e994:	mov	x2, x1
  42e998:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42e99c:	add	x1, x0, #0x368
  42e9a0:	mov	w0, #0x0                   	// #0
  42e9a4:	bl	407650 <log_assert_failed_realm@plt>
  42e9a8:	mov	w0, #0xfffffffe            	// #-2
  42e9ac:	str	w0, [sp, #56]
  42e9b0:	str	xzr, [sp, #64]
  42e9b4:	b	42e9f4 <session_device_try_pause_all+0xb4>
  42e9b8:	ldr	x0, [sp, #48]
  42e9bc:	ldrb	w0, [x0, #36]
  42e9c0:	ubfx	x0, x0, #3, #1
  42e9c4:	and	w0, w0, #0xff
  42e9c8:	eor	w0, w0, #0x1
  42e9cc:	and	w0, w0, #0xff
  42e9d0:	cmp	w0, #0x0
  42e9d4:	b.eq	42e9dc <session_device_try_pause_all+0x9c>  // b.none
  42e9d8:	b	42e9f4 <session_device_try_pause_all+0xb4>
  42e9dc:	ldr	x0, [sp, #48]
  42e9e0:	mov	w1, #0x1                   	// #1
  42e9e4:	bl	42d35c <session_device_notify>
  42e9e8:	ldr	w0, [sp, #44]
  42e9ec:	add	w0, w0, #0x1
  42e9f0:	str	w0, [sp, #44]
  42e9f4:	ldr	x0, [sp, #24]
  42e9f8:	ldr	x0, [x0, #240]
  42e9fc:	add	x2, sp, #0x30
  42ea00:	add	x1, sp, #0x38
  42ea04:	mov	x3, #0x0                   	// #0
  42ea08:	bl	42d2d4 <hashmap_iterate>
  42ea0c:	and	w0, w0, #0xff
  42ea10:	cmp	w0, #0x0
  42ea14:	b.ne	42e9b8 <session_device_try_pause_all+0x78>  // b.any
  42ea18:	ldr	w0, [sp, #44]
  42ea1c:	mov	w1, w0
  42ea20:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ea24:	ldr	x0, [x0, #4024]
  42ea28:	ldr	x2, [sp, #72]
  42ea2c:	ldr	x0, [x0]
  42ea30:	eor	x0, x2, x0
  42ea34:	cmp	x0, #0x0
  42ea38:	b.eq	42ea40 <session_device_try_pause_all+0x100>  // b.none
  42ea3c:	bl	407b20 <__stack_chk_fail@plt>
  42ea40:	mov	w0, w1
  42ea44:	ldp	x29, x30, [sp], #80
  42ea48:	ret

000000000042ea4c <session_device_save>:
  42ea4c:	stp	x29, x30, [sp, #-80]!
  42ea50:	mov	x29, sp
  42ea54:	str	x19, [sp, #16]
  42ea58:	str	x0, [sp, #40]
  42ea5c:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ea60:	ldr	x0, [x0, #4024]
  42ea64:	ldr	x1, [x0]
  42ea68:	str	x1, [sp, #72]
  42ea6c:	mov	x1, #0x0                   	// #0
  42ea70:	str	xzr, [sp, #56]
  42ea74:	ldr	x0, [sp, #40]
  42ea78:	cmp	x0, #0x0
  42ea7c:	cset	w0, eq  // eq = none
  42ea80:	and	w0, w0, #0xff
  42ea84:	and	x0, x0, #0xff
  42ea88:	cmp	x0, #0x0
  42ea8c:	b.eq	42eab8 <session_device_save+0x6c>  // b.none
  42ea90:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ea94:	add	x1, x0, #0x17b
  42ea98:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ea9c:	add	x4, x0, #0x5a8
  42eaa0:	mov	w3, #0x1e4                 	// #484
  42eaa4:	mov	x2, x1
  42eaa8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eaac:	add	x1, x0, #0x1a0
  42eab0:	mov	w0, #0x0                   	// #0
  42eab4:	bl	407650 <log_assert_failed_realm@plt>
  42eab8:	ldr	x0, [sp, #40]
  42eabc:	ldrb	w0, [x0, #36]
  42eac0:	and	w0, w0, #0x10
  42eac4:	and	w0, w0, #0xff
  42eac8:	cmp	w0, #0x0
  42eacc:	b.eq	42ead8 <session_device_save+0x8c>  // b.none
  42ead0:	mov	w19, #0x0                   	// #0
  42ead4:	b	42ebec <session_device_save+0x1a0>
  42ead8:	ldr	x0, [sp, #40]
  42eadc:	ldr	x0, [x0]
  42eae0:	ldr	x0, [x0, #8]
  42eae4:	str	x0, [sp, #64]
  42eae8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eaec:	add	x1, x0, #0x3c0
  42eaf0:	ldr	x0, [sp, #64]
  42eaf4:	bl	4070f0 <strcspn@plt>
  42eaf8:	mov	x1, x0
  42eafc:	ldr	x0, [sp, #64]
  42eb00:	add	x0, x0, x1
  42eb04:	ldrb	w0, [x0]
  42eb08:	cmp	w0, #0x0
  42eb0c:	cset	w0, ne  // ne = any
  42eb10:	and	w0, w0, #0xff
  42eb14:	and	x0, x0, #0xff
  42eb18:	cmp	x0, #0x0
  42eb1c:	b.eq	42eb48 <session_device_save+0xfc>  // b.none
  42eb20:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eb24:	add	x1, x0, #0x17b
  42eb28:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eb2c:	add	x4, x0, #0x5a8
  42eb30:	mov	w3, #0x1f2                 	// #498
  42eb34:	mov	x2, x1
  42eb38:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eb3c:	add	x1, x0, #0x3c8
  42eb40:	mov	w0, #0x0                   	// #0
  42eb44:	bl	407650 <log_assert_failed_realm@plt>
  42eb48:	ldr	x0, [sp, #40]
  42eb4c:	ldr	x0, [x0, #16]
  42eb50:	bl	407e60 <gnu_dev_major@plt>
  42eb54:	mov	w19, w0
  42eb58:	ldr	x0, [sp, #40]
  42eb5c:	ldr	x0, [x0, #16]
  42eb60:	bl	408160 <gnu_dev_minor@plt>
  42eb64:	add	x5, sp, #0x38
  42eb68:	mov	w4, w0
  42eb6c:	mov	w3, w19
  42eb70:	ldr	x2, [sp, #64]
  42eb74:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eb78:	add	x1, x0, #0x3f0
  42eb7c:	mov	x0, x5
  42eb80:	bl	408060 <asprintf@plt>
  42eb84:	str	w0, [sp, #52]
  42eb88:	ldr	w0, [sp, #52]
  42eb8c:	cmp	w0, #0x0
  42eb90:	b.ge	42eb9c <session_device_save+0x150>  // b.tcont
  42eb94:	ldr	w19, [sp, #52]
  42eb98:	b	42ebec <session_device_save+0x1a0>
  42eb9c:	ldr	x1, [sp, #56]
  42eba0:	ldr	x0, [sp, #40]
  42eba4:	add	x0, x0, #0x20
  42eba8:	mov	w4, #0x1                   	// #1
  42ebac:	mov	x3, x0
  42ebb0:	mov	x2, x1
  42ebb4:	mov	w1, #0x0                   	// #0
  42ebb8:	mov	w0, #0x0                   	// #0
  42ebbc:	bl	407040 <sd_pid_notify_with_fds@plt>
  42ebc0:	str	w0, [sp, #52]
  42ebc4:	ldr	w0, [sp, #52]
  42ebc8:	cmp	w0, #0x0
  42ebcc:	b.ge	42ebd8 <session_device_save+0x18c>  // b.tcont
  42ebd0:	ldr	w19, [sp, #52]
  42ebd4:	b	42ebec <session_device_save+0x1a0>
  42ebd8:	ldr	x0, [sp, #40]
  42ebdc:	ldrb	w1, [x0, #36]
  42ebe0:	orr	w1, w1, #0x10
  42ebe4:	strb	w1, [x0, #36]
  42ebe8:	mov	w19, #0x1                   	// #1
  42ebec:	add	x0, sp, #0x38
  42ebf0:	bl	42d234 <freep>
  42ebf4:	mov	w1, w19
  42ebf8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42ebfc:	ldr	x0, [x0, #4024]
  42ec00:	ldr	x2, [sp, #72]
  42ec04:	ldr	x0, [x0]
  42ec08:	eor	x0, x2, x0
  42ec0c:	cmp	x0, #0x0
  42ec10:	b.eq	42ec18 <session_device_save+0x1cc>  // b.none
  42ec14:	bl	407b20 <__stack_chk_fail@plt>
  42ec18:	mov	w0, w1
  42ec1c:	ldr	x19, [sp, #16]
  42ec20:	ldp	x29, x30, [sp], #80
  42ec24:	ret

000000000042ec28 <session_device_attach_fd>:
  42ec28:	stp	x29, x30, [sp, #-32]!
  42ec2c:	mov	x29, sp
  42ec30:	str	x0, [sp, #24]
  42ec34:	str	w1, [sp, #20]
  42ec38:	strb	w2, [sp, #19]
  42ec3c:	ldr	w0, [sp, #20]
  42ec40:	lsr	w0, w0, #31
  42ec44:	and	w0, w0, #0xff
  42ec48:	and	x0, x0, #0xff
  42ec4c:	cmp	x0, #0x0
  42ec50:	b.eq	42ec7c <session_device_attach_fd+0x54>  // b.none
  42ec54:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ec58:	add	x1, x0, #0x17b
  42ec5c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ec60:	add	x4, x0, #0x5c0
  42ec64:	mov	w3, #0x203                 	// #515
  42ec68:	mov	x2, x1
  42ec6c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ec70:	add	x1, x0, #0x210
  42ec74:	mov	w0, #0x0                   	// #0
  42ec78:	bl	407650 <log_assert_failed_realm@plt>
  42ec7c:	ldr	x0, [sp, #24]
  42ec80:	cmp	x0, #0x0
  42ec84:	cset	w0, eq  // eq = none
  42ec88:	and	w0, w0, #0xff
  42ec8c:	and	x0, x0, #0xff
  42ec90:	cmp	x0, #0x0
  42ec94:	b.eq	42ecc0 <session_device_attach_fd+0x98>  // b.none
  42ec98:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ec9c:	add	x1, x0, #0x17b
  42eca0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42eca4:	add	x4, x0, #0x5c0
  42eca8:	mov	w3, #0x204                 	// #516
  42ecac:	mov	x2, x1
  42ecb0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ecb4:	add	x1, x0, #0x1a0
  42ecb8:	mov	w0, #0x0                   	// #0
  42ecbc:	bl	407650 <log_assert_failed_realm@plt>
  42ecc0:	ldr	x0, [sp, #24]
  42ecc4:	ldr	w0, [x0, #32]
  42ecc8:	mvn	w0, w0
  42eccc:	lsr	w0, w0, #31
  42ecd0:	and	w0, w0, #0xff
  42ecd4:	and	x0, x0, #0xff
  42ecd8:	cmp	x0, #0x0
  42ecdc:	b.eq	42ed08 <session_device_attach_fd+0xe0>  // b.none
  42ece0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ece4:	add	x1, x0, #0x17b
  42ece8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ecec:	add	x4, x0, #0x5c0
  42ecf0:	mov	w3, #0x205                 	// #517
  42ecf4:	mov	x2, x1
  42ecf8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ecfc:	add	x1, x0, #0x420
  42ed00:	mov	w0, #0x0                   	// #0
  42ed04:	bl	407650 <log_assert_failed_realm@plt>
  42ed08:	ldr	x0, [sp, #24]
  42ed0c:	ldrb	w0, [x0, #36]
  42ed10:	and	w0, w0, #0x8
  42ed14:	and	w0, w0, #0xff
  42ed18:	cmp	w0, #0x0
  42ed1c:	cset	w0, ne  // ne = any
  42ed20:	and	w0, w0, #0xff
  42ed24:	and	x0, x0, #0xff
  42ed28:	cmp	x0, #0x0
  42ed2c:	b.eq	42ed58 <session_device_attach_fd+0x130>  // b.none
  42ed30:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ed34:	add	x1, x0, #0x17b
  42ed38:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ed3c:	add	x4, x0, #0x5c0
  42ed40:	mov	w3, #0x206                 	// #518
  42ed44:	mov	x2, x1
  42ed48:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ed4c:	add	x1, x0, #0x430
  42ed50:	mov	w0, #0x0                   	// #0
  42ed54:	bl	407650 <log_assert_failed_realm@plt>
  42ed58:	ldr	x0, [sp, #24]
  42ed5c:	ldr	w1, [sp, #20]
  42ed60:	str	w1, [x0, #32]
  42ed64:	ldr	x0, [sp, #24]
  42ed68:	ldrb	w1, [x0, #36]
  42ed6c:	orr	w1, w1, #0x10
  42ed70:	strb	w1, [x0, #36]
  42ed74:	ldr	x1, [sp, #24]
  42ed78:	ldrb	w0, [x1, #36]
  42ed7c:	ldrb	w2, [sp, #19]
  42ed80:	bfi	w0, w2, #3, #1
  42ed84:	strb	w0, [x1, #36]
  42ed88:	nop
  42ed8c:	ldp	x29, x30, [sp], #32
  42ed90:	ret

000000000042ed94 <mfree>:
  42ed94:	stp	x29, x30, [sp, #-32]!
  42ed98:	mov	x29, sp
  42ed9c:	str	x0, [sp, #24]
  42eda0:	ldr	x0, [sp, #24]
  42eda4:	bl	408150 <free@plt>
  42eda8:	mov	x0, #0x0                   	// #0
  42edac:	ldp	x29, x30, [sp], #32
  42edb0:	ret

000000000042edb4 <freep>:
  42edb4:	stp	x29, x30, [sp, #-32]!
  42edb8:	mov	x29, sp
  42edbc:	str	x0, [sp, #24]
  42edc0:	ldr	x0, [sp, #24]
  42edc4:	ldr	x0, [x0]
  42edc8:	bl	408150 <free@plt>
  42edcc:	nop
  42edd0:	ldp	x29, x30, [sp], #32
  42edd4:	ret

000000000042edd8 <size_multiply_overflow>:
  42edd8:	sub	sp, sp, #0x10
  42eddc:	str	x0, [sp, #8]
  42ede0:	str	x1, [sp]
  42ede4:	ldr	x0, [sp]
  42ede8:	cmp	x0, #0x0
  42edec:	cset	w0, ne  // ne = any
  42edf0:	and	w0, w0, #0xff
  42edf4:	and	x0, x0, #0xff
  42edf8:	cmp	x0, #0x0
  42edfc:	b.eq	42ee40 <size_multiply_overflow+0x68>  // b.none
  42ee00:	mov	x2, #0x0                   	// #0
  42ee04:	ldr	x1, [sp, #8]
  42ee08:	ldr	x0, [sp]
  42ee0c:	umulh	x0, x1, x0
  42ee10:	cmp	x0, #0x0
  42ee14:	b.eq	42ee1c <size_multiply_overflow+0x44>  // b.none
  42ee18:	mov	x2, #0x1                   	// #1
  42ee1c:	mov	x0, x2
  42ee20:	cmp	x0, #0x0
  42ee24:	cset	w0, ne  // ne = any
  42ee28:	and	w0, w0, #0xff
  42ee2c:	and	x0, x0, #0xff
  42ee30:	cmp	x0, #0x0
  42ee34:	b.eq	42ee40 <size_multiply_overflow+0x68>  // b.none
  42ee38:	mov	w0, #0x1                   	// #1
  42ee3c:	b	42ee44 <size_multiply_overflow+0x6c>
  42ee40:	mov	w0, #0x0                   	// #0
  42ee44:	and	w0, w0, #0x1
  42ee48:	and	w0, w0, #0xff
  42ee4c:	add	sp, sp, #0x10
  42ee50:	ret

000000000042ee54 <malloc_multiply>:
  42ee54:	stp	x29, x30, [sp, #-32]!
  42ee58:	mov	x29, sp
  42ee5c:	str	x0, [sp, #24]
  42ee60:	str	x1, [sp, #16]
  42ee64:	ldr	x1, [sp, #16]
  42ee68:	ldr	x0, [sp, #24]
  42ee6c:	bl	42edd8 <size_multiply_overflow>
  42ee70:	and	w0, w0, #0xff
  42ee74:	cmp	w0, #0x0
  42ee78:	b.eq	42ee84 <malloc_multiply+0x30>  // b.none
  42ee7c:	mov	x0, #0x0                   	// #0
  42ee80:	b	42eea0 <malloc_multiply+0x4c>
  42ee84:	ldr	x1, [sp, #24]
  42ee88:	ldr	x0, [sp, #16]
  42ee8c:	mul	x0, x1, x0
  42ee90:	cmp	x0, #0x0
  42ee94:	b.ne	42ee9c <malloc_multiply+0x48>  // b.any
  42ee98:	mov	x0, #0x1                   	// #1
  42ee9c:	bl	407ce0 <malloc@plt>
  42eea0:	ldp	x29, x30, [sp], #32
  42eea4:	ret

000000000042eea8 <audit_session_is_valid>:
  42eea8:	sub	sp, sp, #0x10
  42eeac:	str	w0, [sp, #12]
  42eeb0:	ldr	w0, [sp, #12]
  42eeb4:	cmp	w0, #0x0
  42eeb8:	b.eq	42eed0 <audit_session_is_valid+0x28>  // b.none
  42eebc:	ldr	w0, [sp, #12]
  42eec0:	cmn	w0, #0x1
  42eec4:	b.eq	42eed0 <audit_session_is_valid+0x28>  // b.none
  42eec8:	mov	w0, #0x1                   	// #1
  42eecc:	b	42eed4 <audit_session_is_valid+0x2c>
  42eed0:	mov	w0, #0x0                   	// #0
  42eed4:	and	w0, w0, #0x1
  42eed8:	and	w0, w0, #0xff
  42eedc:	add	sp, sp, #0x10
  42eee0:	ret

000000000042eee4 <hashmap_free>:
  42eee4:	stp	x29, x30, [sp, #-32]!
  42eee8:	mov	x29, sp
  42eeec:	str	x0, [sp, #24]
  42eef0:	mov	x2, #0x0                   	// #0
  42eef4:	mov	x1, #0x0                   	// #0
  42eef8:	ldr	x0, [sp, #24]
  42eefc:	bl	4070d0 <internal_hashmap_free@plt>
  42ef00:	ldp	x29, x30, [sp], #32
  42ef04:	ret

000000000042ef08 <hashmap_get>:
  42ef08:	stp	x29, x30, [sp, #-32]!
  42ef0c:	mov	x29, sp
  42ef10:	str	x0, [sp, #24]
  42ef14:	str	x1, [sp, #16]
  42ef18:	ldr	x1, [sp, #16]
  42ef1c:	ldr	x0, [sp, #24]
  42ef20:	bl	407860 <internal_hashmap_get@plt>
  42ef24:	ldp	x29, x30, [sp], #32
  42ef28:	ret

000000000042ef2c <hashmap_remove>:
  42ef2c:	stp	x29, x30, [sp, #-32]!
  42ef30:	mov	x29, sp
  42ef34:	str	x0, [sp, #24]
  42ef38:	str	x1, [sp, #16]
  42ef3c:	ldr	x1, [sp, #16]
  42ef40:	ldr	x0, [sp, #24]
  42ef44:	bl	406f90 <internal_hashmap_remove@plt>
  42ef48:	ldp	x29, x30, [sp], #32
  42ef4c:	ret

000000000042ef50 <hashmap_remove_value>:
  42ef50:	stp	x29, x30, [sp, #-48]!
  42ef54:	mov	x29, sp
  42ef58:	str	x0, [sp, #40]
  42ef5c:	str	x1, [sp, #32]
  42ef60:	str	x2, [sp, #24]
  42ef64:	ldr	x2, [sp, #24]
  42ef68:	ldr	x1, [sp, #32]
  42ef6c:	ldr	x0, [sp, #40]
  42ef70:	bl	407c40 <internal_hashmap_remove_value@plt>
  42ef74:	ldp	x29, x30, [sp], #48
  42ef78:	ret

000000000042ef7c <hashmap_size>:
  42ef7c:	stp	x29, x30, [sp, #-32]!
  42ef80:	mov	x29, sp
  42ef84:	str	x0, [sp, #24]
  42ef88:	ldr	x0, [sp, #24]
  42ef8c:	bl	407d30 <internal_hashmap_size@plt>
  42ef90:	ldp	x29, x30, [sp], #32
  42ef94:	ret

000000000042ef98 <hashmap_isempty>:
  42ef98:	stp	x29, x30, [sp, #-32]!
  42ef9c:	mov	x29, sp
  42efa0:	str	x0, [sp, #24]
  42efa4:	ldr	x0, [sp, #24]
  42efa8:	bl	42ef7c <hashmap_size>
  42efac:	cmp	w0, #0x0
  42efb0:	cset	w0, eq  // eq = none
  42efb4:	and	w0, w0, #0xff
  42efb8:	ldp	x29, x30, [sp], #32
  42efbc:	ret

000000000042efc0 <hashmap_iterate>:
  42efc0:	stp	x29, x30, [sp, #-48]!
  42efc4:	mov	x29, sp
  42efc8:	str	x0, [sp, #40]
  42efcc:	str	x1, [sp, #32]
  42efd0:	str	x2, [sp, #24]
  42efd4:	str	x3, [sp, #16]
  42efd8:	ldr	x3, [sp, #16]
  42efdc:	ldr	x2, [sp, #24]
  42efe0:	ldr	x1, [sp, #32]
  42efe4:	ldr	x0, [sp, #40]
  42efe8:	bl	407f80 <internal_hashmap_iterate@plt>
  42efec:	and	w0, w0, #0xff
  42eff0:	ldp	x29, x30, [sp], #48
  42eff4:	ret

000000000042eff8 <hashmap_first>:
  42eff8:	stp	x29, x30, [sp, #-32]!
  42effc:	mov	x29, sp
  42f000:	str	x0, [sp, #24]
  42f004:	mov	x2, #0x0                   	// #0
  42f008:	mov	w1, #0x0                   	// #0
  42f00c:	ldr	x0, [sp, #24]
  42f010:	bl	407fc0 <internal_hashmap_first_key_and_value@plt>
  42f014:	ldp	x29, x30, [sp], #32
  42f018:	ret

000000000042f01c <streq_ptr>:
  42f01c:	stp	x29, x30, [sp, #-32]!
  42f020:	mov	x29, sp
  42f024:	str	x0, [sp, #24]
  42f028:	str	x1, [sp, #16]
  42f02c:	ldr	x1, [sp, #16]
  42f030:	ldr	x0, [sp, #24]
  42f034:	bl	407110 <strcmp_ptr@plt>
  42f038:	cmp	w0, #0x0
  42f03c:	cset	w0, eq  // eq = none
  42f040:	and	w0, w0, #0xff
  42f044:	ldp	x29, x30, [sp], #32
  42f048:	ret

000000000042f04c <timestamp_is_set>:
  42f04c:	sub	sp, sp, #0x10
  42f050:	str	x0, [sp, #8]
  42f054:	ldr	x0, [sp, #8]
  42f058:	cmp	x0, #0x0
  42f05c:	b.eq	42f074 <timestamp_is_set+0x28>  // b.none
  42f060:	ldr	x0, [sp, #8]
  42f064:	cmn	x0, #0x1
  42f068:	b.eq	42f074 <timestamp_is_set+0x28>  // b.none
  42f06c:	mov	w0, #0x1                   	// #1
  42f070:	b	42f078 <timestamp_is_set+0x2c>
  42f074:	mov	w0, #0x0                   	// #0
  42f078:	and	w0, w0, #0x1
  42f07c:	and	w0, w0, #0xff
  42f080:	add	sp, sp, #0x10
  42f084:	ret

000000000042f088 <dual_timestamp_is_set>:
  42f088:	stp	x29, x30, [sp, #-32]!
  42f08c:	mov	x29, sp
  42f090:	str	x0, [sp, #24]
  42f094:	ldr	x0, [sp, #24]
  42f098:	ldr	x0, [x0]
  42f09c:	bl	42f04c <timestamp_is_set>
  42f0a0:	and	w0, w0, #0xff
  42f0a4:	cmp	w0, #0x0
  42f0a8:	b.ne	42f0c4 <dual_timestamp_is_set+0x3c>  // b.any
  42f0ac:	ldr	x0, [sp, #24]
  42f0b0:	ldr	x0, [x0, #8]
  42f0b4:	bl	42f04c <timestamp_is_set>
  42f0b8:	and	w0, w0, #0xff
  42f0bc:	cmp	w0, #0x0
  42f0c0:	b.eq	42f0cc <dual_timestamp_is_set+0x44>  // b.none
  42f0c4:	mov	w0, #0x1                   	// #1
  42f0c8:	b	42f0d0 <dual_timestamp_is_set+0x48>
  42f0cc:	mov	w0, #0x0                   	// #0
  42f0d0:	and	w0, w0, #0x1
  42f0d4:	and	w0, w0, #0xff
  42f0d8:	ldp	x29, x30, [sp], #32
  42f0dc:	ret

000000000042f0e0 <usec_add>:
  42f0e0:	sub	sp, sp, #0x20
  42f0e4:	str	x0, [sp, #8]
  42f0e8:	str	x1, [sp]
  42f0ec:	ldr	x1, [sp, #8]
  42f0f0:	ldr	x0, [sp]
  42f0f4:	add	x0, x1, x0
  42f0f8:	str	x0, [sp, #24]
  42f0fc:	ldr	x1, [sp, #24]
  42f100:	ldr	x0, [sp, #8]
  42f104:	cmp	x1, x0
  42f108:	b.cc	42f11c <usec_add+0x3c>  // b.lo, b.ul, b.last
  42f10c:	ldr	x1, [sp, #24]
  42f110:	ldr	x0, [sp]
  42f114:	cmp	x1, x0
  42f118:	b.cs	42f124 <usec_add+0x44>  // b.hs, b.nlast
  42f11c:	mov	x0, #0xffffffffffffffff    	// #-1
  42f120:	b	42f128 <usec_add+0x48>
  42f124:	ldr	x0, [sp, #24]
  42f128:	add	sp, sp, #0x20
  42f12c:	ret

000000000042f130 <fclosep>:
  42f130:	stp	x29, x30, [sp, #-32]!
  42f134:	mov	x29, sp
  42f138:	str	x0, [sp, #24]
  42f13c:	ldr	x0, [sp, #24]
  42f140:	ldr	x0, [x0]
  42f144:	bl	406fc0 <safe_fclose@plt>
  42f148:	nop
  42f14c:	ldp	x29, x30, [sp], #32
  42f150:	ret

000000000042f154 <session_freep>:
  42f154:	stp	x29, x30, [sp, #-32]!
  42f158:	mov	x29, sp
  42f15c:	str	x0, [sp, #24]
  42f160:	ldr	x0, [sp, #24]
  42f164:	ldr	x0, [x0]
  42f168:	cmp	x0, #0x0
  42f16c:	b.eq	42f17c <session_freep+0x28>  // b.none
  42f170:	ldr	x0, [sp, #24]
  42f174:	ldr	x0, [x0]
  42f178:	bl	42f474 <session_free>
  42f17c:	nop
  42f180:	ldp	x29, x30, [sp], #32
  42f184:	ret

000000000042f188 <safe_atou>:
  42f188:	stp	x29, x30, [sp, #-32]!
  42f18c:	mov	x29, sp
  42f190:	str	x0, [sp, #24]
  42f194:	str	x1, [sp, #16]
  42f198:	ldr	x2, [sp, #16]
  42f19c:	mov	w1, #0x0                   	// #0
  42f1a0:	ldr	x0, [sp, #24]
  42f1a4:	bl	407d10 <safe_atou_full@plt>
  42f1a8:	ldp	x29, x30, [sp], #32
  42f1ac:	ret

000000000042f1b0 <PID_TO_PTR>:
  42f1b0:	sub	sp, sp, #0x10
  42f1b4:	str	w0, [sp, #12]
  42f1b8:	ldrsw	x0, [sp, #12]
  42f1bc:	add	sp, sp, #0x10
  42f1c0:	ret

000000000042f1c4 <pid_is_valid>:
  42f1c4:	sub	sp, sp, #0x10
  42f1c8:	str	w0, [sp, #12]
  42f1cc:	ldr	w0, [sp, #12]
  42f1d0:	cmp	w0, #0x0
  42f1d4:	cset	w0, gt
  42f1d8:	and	w0, w0, #0xff
  42f1dc:	add	sp, sp, #0x10
  42f1e0:	ret

000000000042f1e4 <session_new>:
  42f1e4:	stp	x29, x30, [sp, #-400]!
  42f1e8:	mov	x29, sp
  42f1ec:	str	x19, [sp, #16]
  42f1f0:	str	x0, [sp, #56]
  42f1f4:	str	x1, [sp, #48]
  42f1f8:	str	x2, [sp, #40]
  42f1fc:	adrp	x0, 460000 <wordlist.10364+0x370>
  42f200:	ldr	x0, [x0, #4024]
  42f204:	ldr	x1, [x0]
  42f208:	str	x1, [sp, #392]
  42f20c:	mov	x1, #0x0                   	// #0
  42f210:	str	xzr, [sp, #88]
  42f214:	ldr	x0, [sp, #56]
  42f218:	cmp	x0, #0x0
  42f21c:	cset	w0, eq  // eq = none
  42f220:	and	w0, w0, #0xff
  42f224:	and	x0, x0, #0xff
  42f228:	cmp	x0, #0x0
  42f22c:	b.eq	42f258 <session_new+0x74>  // b.none
  42f230:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f234:	add	x1, x0, #0x5e3
  42f238:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f23c:	add	x4, x0, #0xe0
  42f240:	mov	w3, #0x32                  	// #50
  42f244:	mov	x2, x1
  42f248:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f24c:	add	x1, x0, #0x600
  42f250:	mov	w0, #0x0                   	// #0
  42f254:	bl	407650 <log_assert_failed_realm@plt>
  42f258:	ldr	x0, [sp, #48]
  42f25c:	cmp	x0, #0x0
  42f260:	cset	w0, eq  // eq = none
  42f264:	and	w0, w0, #0xff
  42f268:	and	x0, x0, #0xff
  42f26c:	cmp	x0, #0x0
  42f270:	b.eq	42f29c <session_new+0xb8>  // b.none
  42f274:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f278:	add	x1, x0, #0x5e3
  42f27c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f280:	add	x4, x0, #0xe0
  42f284:	mov	w3, #0x33                  	// #51
  42f288:	mov	x2, x1
  42f28c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f290:	add	x1, x0, #0x608
  42f294:	mov	w0, #0x0                   	// #0
  42f298:	bl	407650 <log_assert_failed_realm@plt>
  42f29c:	ldr	x0, [sp, #40]
  42f2a0:	cmp	x0, #0x0
  42f2a4:	cset	w0, eq  // eq = none
  42f2a8:	and	w0, w0, #0xff
  42f2ac:	and	x0, x0, #0xff
  42f2b0:	cmp	x0, #0x0
  42f2b4:	b.eq	42f2e0 <session_new+0xfc>  // b.none
  42f2b8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f2bc:	add	x1, x0, #0x5e3
  42f2c0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f2c4:	add	x4, x0, #0xe0
  42f2c8:	mov	w3, #0x34                  	// #52
  42f2cc:	mov	x2, x1
  42f2d0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f2d4:	add	x1, x0, #0x610
  42f2d8:	mov	w0, #0x0                   	// #0
  42f2dc:	bl	407650 <log_assert_failed_realm@plt>
  42f2e0:	ldr	x0, [sp, #40]
  42f2e4:	bl	4075b0 <session_id_valid@plt>
  42f2e8:	and	w0, w0, #0xff
  42f2ec:	eor	w0, w0, #0x1
  42f2f0:	and	w0, w0, #0xff
  42f2f4:	cmp	w0, #0x0
  42f2f8:	b.eq	42f304 <session_new+0x120>  // b.none
  42f2fc:	mov	w19, #0xffffffea            	// #-22
  42f300:	b	42f438 <session_new+0x254>
  42f304:	mov	x1, #0x1                   	// #1
  42f308:	mov	x0, #0x130                 	// #304
  42f30c:	bl	42ee54 <malloc_multiply>
  42f310:	str	x0, [sp, #88]
  42f314:	ldr	x0, [sp, #88]
  42f318:	cmp	x0, #0x0
  42f31c:	b.ne	42f328 <session_new+0x144>  // b.any
  42f320:	mov	w19, #0xfffffff4            	// #-12
  42f324:	b	42f438 <session_new+0x254>
  42f328:	ldr	x19, [sp, #88]
  42f32c:	mov	x3, x19
  42f330:	mov	x0, #0x130                 	// #304
  42f334:	mov	x2, x0
  42f338:	mov	w1, #0x0                   	// #0
  42f33c:	mov	x0, x3
  42f340:	bl	408390 <memset@plt>
  42f344:	ldr	x0, [sp, #48]
  42f348:	str	x0, [x19]
  42f34c:	mov	w0, #0xffffffff            	// #-1
  42f350:	str	w0, [x19, #80]
  42f354:	mov	w0, #0xffffffff            	// #-1
  42f358:	str	w0, [x19, #148]
  42f35c:	mov	w0, #0xffffffff            	// #-1
  42f360:	str	w0, [x19, #156]
  42f364:	mov	w0, #0xffffffff            	// #-1
  42f368:	str	w0, [x19, #160]
  42f36c:	ldr	x19, [sp, #88]
  42f370:	mov	x2, #0xffffffffffffffff    	// #-1
  42f374:	ldr	x1, [sp, #40]
  42f378:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f37c:	add	x0, x0, #0x618
  42f380:	bl	407bb0 <path_join_internal@plt>
  42f384:	str	x0, [x19, #32]
  42f388:	ldr	x0, [sp, #88]
  42f38c:	ldr	x0, [x0, #32]
  42f390:	cmp	x0, #0x0
  42f394:	b.ne	42f3a0 <session_new+0x1bc>  // b.any
  42f398:	mov	w19, #0xfffffff4            	// #-12
  42f39c:	b	42f438 <session_new+0x254>
  42f3a0:	ldr	x0, [sp, #88]
  42f3a4:	ldr	x0, [x0, #32]
  42f3a8:	ldr	x19, [sp, #88]
  42f3ac:	bl	407b50 <basename@plt>
  42f3b0:	str	x0, [x19, #8]
  42f3b4:	ldr	x19, [sp, #88]
  42f3b8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42f3bc:	ldr	x0, [x0, #4048]
  42f3c0:	bl	407b10 <internal_hashmap_new@plt>
  42f3c4:	str	x0, [x19, #240]
  42f3c8:	ldr	x0, [sp, #88]
  42f3cc:	ldr	x0, [x0, #240]
  42f3d0:	cmp	x0, #0x0
  42f3d4:	b.ne	42f3e0 <session_new+0x1fc>  // b.any
  42f3d8:	mov	w19, #0xfffffff4            	// #-12
  42f3dc:	b	42f438 <session_new+0x254>
  42f3e0:	ldr	x0, [sp, #48]
  42f3e4:	ldr	x3, [x0, #32]
  42f3e8:	ldr	x0, [sp, #88]
  42f3ec:	ldr	x0, [x0, #8]
  42f3f0:	ldr	x1, [sp, #88]
  42f3f4:	mov	x2, x1
  42f3f8:	mov	x1, x0
  42f3fc:	mov	x0, x3
  42f400:	bl	407dd0 <hashmap_put@plt>
  42f404:	str	w0, [sp, #76]
  42f408:	ldr	w0, [sp, #76]
  42f40c:	cmp	w0, #0x0
  42f410:	b.ge	42f41c <session_new+0x238>  // b.tcont
  42f414:	ldr	w19, [sp, #76]
  42f418:	b	42f438 <session_new+0x254>
  42f41c:	ldr	x0, [sp, #88]
  42f420:	str	x0, [sp, #80]
  42f424:	str	xzr, [sp, #88]
  42f428:	ldr	x1, [sp, #80]
  42f42c:	ldr	x0, [sp, #56]
  42f430:	str	x1, [x0]
  42f434:	mov	w19, #0x0                   	// #0
  42f438:	add	x0, sp, #0x58
  42f43c:	bl	42f154 <session_freep>
  42f440:	mov	w1, w19
  42f444:	adrp	x0, 460000 <wordlist.10364+0x370>
  42f448:	ldr	x0, [x0, #4024]
  42f44c:	ldr	x2, [sp, #392]
  42f450:	ldr	x0, [x0]
  42f454:	eor	x0, x2, x0
  42f458:	cmp	x0, #0x0
  42f45c:	b.eq	42f464 <session_new+0x280>  // b.none
  42f460:	bl	407b20 <__stack_chk_fail@plt>
  42f464:	mov	w0, w1
  42f468:	ldr	x19, [sp, #16]
  42f46c:	ldp	x29, x30, [sp], #400
  42f470:	ret

000000000042f474 <session_free>:
  42f474:	stp	x29, x30, [sp, #-112]!
  42f478:	mov	x29, sp
  42f47c:	str	x19, [sp, #16]
  42f480:	str	x0, [sp, #40]
  42f484:	ldr	x0, [sp, #40]
  42f488:	cmp	x0, #0x0
  42f48c:	b.ne	42f498 <session_free+0x24>  // b.any
  42f490:	mov	x0, #0x0                   	// #0
  42f494:	b	42fa34 <session_free+0x5c0>
  42f498:	ldr	x0, [sp, #40]
  42f49c:	ldrb	w0, [x0, #209]
  42f4a0:	and	w0, w0, #0x1
  42f4a4:	and	w0, w0, #0xff
  42f4a8:	cmp	w0, #0x0
  42f4ac:	b.eq	42f5cc <session_free+0x158>  // b.none
  42f4b0:	ldr	x0, [sp, #40]
  42f4b4:	ldr	x0, [x0]
  42f4b8:	add	x0, x0, #0x58
  42f4bc:	str	x0, [sp, #56]
  42f4c0:	ldr	x0, [sp, #40]
  42f4c4:	str	x0, [sp, #64]
  42f4c8:	ldr	x0, [sp, #64]
  42f4cc:	cmp	x0, #0x0
  42f4d0:	cset	w0, eq  // eq = none
  42f4d4:	and	w0, w0, #0xff
  42f4d8:	and	x0, x0, #0xff
  42f4dc:	cmp	x0, #0x0
  42f4e0:	b.eq	42f50c <session_free+0x98>  // b.none
  42f4e4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f4e8:	add	x1, x0, #0x5e3
  42f4ec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f4f0:	add	x4, x0, #0xf0
  42f4f4:	mov	w3, #0x5e                  	// #94
  42f4f8:	mov	x2, x1
  42f4fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f500:	add	x1, x0, #0x630
  42f504:	mov	w0, #0x0                   	// #0
  42f508:	bl	407650 <log_assert_failed_realm@plt>
  42f50c:	ldr	x0, [sp, #64]
  42f510:	ldr	x0, [x0, #288]
  42f514:	cmp	x0, #0x0
  42f518:	b.eq	42f530 <session_free+0xbc>  // b.none
  42f51c:	ldr	x0, [sp, #64]
  42f520:	ldr	x0, [x0, #288]
  42f524:	ldr	x1, [sp, #64]
  42f528:	ldr	x1, [x1, #296]
  42f52c:	str	x1, [x0, #296]
  42f530:	ldr	x0, [sp, #64]
  42f534:	ldr	x0, [x0, #296]
  42f538:	cmp	x0, #0x0
  42f53c:	b.eq	42f558 <session_free+0xe4>  // b.none
  42f540:	ldr	x0, [sp, #64]
  42f544:	ldr	x0, [x0, #296]
  42f548:	ldr	x1, [sp, #64]
  42f54c:	ldr	x1, [x1, #288]
  42f550:	str	x1, [x0, #288]
  42f554:	b	42f5b4 <session_free+0x140>
  42f558:	ldr	x0, [sp, #56]
  42f55c:	ldr	x0, [x0]
  42f560:	ldr	x1, [sp, #64]
  42f564:	cmp	x1, x0
  42f568:	cset	w0, ne  // ne = any
  42f56c:	and	w0, w0, #0xff
  42f570:	and	x0, x0, #0xff
  42f574:	cmp	x0, #0x0
  42f578:	b.eq	42f5a4 <session_free+0x130>  // b.none
  42f57c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f580:	add	x1, x0, #0x5e3
  42f584:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f588:	add	x4, x0, #0xf0
  42f58c:	mov	w3, #0x5e                  	// #94
  42f590:	mov	x2, x1
  42f594:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f598:	add	x1, x0, #0x638
  42f59c:	mov	w0, #0x0                   	// #0
  42f5a0:	bl	407650 <log_assert_failed_realm@plt>
  42f5a4:	ldr	x0, [sp, #64]
  42f5a8:	ldr	x1, [x0, #288]
  42f5ac:	ldr	x0, [sp, #56]
  42f5b0:	str	x1, [x0]
  42f5b4:	ldr	x0, [sp, #64]
  42f5b8:	str	xzr, [x0, #296]
  42f5bc:	ldr	x0, [sp, #64]
  42f5c0:	ldr	x1, [x0, #296]
  42f5c4:	ldr	x0, [sp, #64]
  42f5c8:	str	x1, [x0, #288]
  42f5cc:	ldr	x0, [sp, #40]
  42f5d0:	ldr	x0, [x0, #224]
  42f5d4:	bl	407550 <sd_event_source_unref@plt>
  42f5d8:	mov	x1, x0
  42f5dc:	ldr	x0, [sp, #40]
  42f5e0:	str	x1, [x0, #224]
  42f5e4:	ldr	x0, [sp, #40]
  42f5e8:	bl	434424 <session_drop_controller>
  42f5ec:	b	42f5f8 <session_free+0x184>
  42f5f0:	ldr	x0, [sp, #72]
  42f5f4:	bl	42e424 <session_device_free>
  42f5f8:	ldr	x0, [sp, #40]
  42f5fc:	ldr	x0, [x0, #240]
  42f600:	bl	42eff8 <hashmap_first>
  42f604:	str	x0, [sp, #72]
  42f608:	ldr	x0, [sp, #72]
  42f60c:	cmp	x0, #0x0
  42f610:	b.ne	42f5f0 <session_free+0x17c>  // b.any
  42f614:	ldr	x0, [sp, #40]
  42f618:	ldr	x0, [x0, #240]
  42f61c:	bl	42eee4 <hashmap_free>
  42f620:	ldr	x0, [sp, #40]
  42f624:	ldr	x0, [x0, #40]
  42f628:	cmp	x0, #0x0
  42f62c:	b.eq	42f77c <session_free+0x308>  // b.none
  42f630:	ldr	x0, [sp, #40]
  42f634:	ldr	x0, [x0, #40]
  42f638:	add	x0, x0, #0x80
  42f63c:	str	x0, [sp, #80]
  42f640:	ldr	x0, [sp, #40]
  42f644:	str	x0, [sp, #88]
  42f648:	ldr	x0, [sp, #88]
  42f64c:	cmp	x0, #0x0
  42f650:	cset	w0, eq  // eq = none
  42f654:	and	w0, w0, #0xff
  42f658:	and	x0, x0, #0xff
  42f65c:	cmp	x0, #0x0
  42f660:	b.eq	42f68c <session_free+0x218>  // b.none
  42f664:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f668:	add	x1, x0, #0x5e3
  42f66c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f670:	add	x4, x0, #0xf0
  42f674:	mov	w3, #0x6a                  	// #106
  42f678:	mov	x2, x1
  42f67c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f680:	add	x1, x0, #0x630
  42f684:	mov	w0, #0x0                   	// #0
  42f688:	bl	407650 <log_assert_failed_realm@plt>
  42f68c:	ldr	x0, [sp, #88]
  42f690:	ldr	x0, [x0, #256]
  42f694:	cmp	x0, #0x0
  42f698:	b.eq	42f6b0 <session_free+0x23c>  // b.none
  42f69c:	ldr	x0, [sp, #88]
  42f6a0:	ldr	x0, [x0, #256]
  42f6a4:	ldr	x1, [sp, #88]
  42f6a8:	ldr	x1, [x1, #264]
  42f6ac:	str	x1, [x0, #264]
  42f6b0:	ldr	x0, [sp, #88]
  42f6b4:	ldr	x0, [x0, #264]
  42f6b8:	cmp	x0, #0x0
  42f6bc:	b.eq	42f6d8 <session_free+0x264>  // b.none
  42f6c0:	ldr	x0, [sp, #88]
  42f6c4:	ldr	x0, [x0, #264]
  42f6c8:	ldr	x1, [sp, #88]
  42f6cc:	ldr	x1, [x1, #256]
  42f6d0:	str	x1, [x0, #256]
  42f6d4:	b	42f734 <session_free+0x2c0>
  42f6d8:	ldr	x0, [sp, #80]
  42f6dc:	ldr	x0, [x0]
  42f6e0:	ldr	x1, [sp, #88]
  42f6e4:	cmp	x1, x0
  42f6e8:	cset	w0, ne  // ne = any
  42f6ec:	and	w0, w0, #0xff
  42f6f0:	and	x0, x0, #0xff
  42f6f4:	cmp	x0, #0x0
  42f6f8:	b.eq	42f724 <session_free+0x2b0>  // b.none
  42f6fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f700:	add	x1, x0, #0x5e3
  42f704:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f708:	add	x4, x0, #0xf0
  42f70c:	mov	w3, #0x6a                  	// #106
  42f710:	mov	x2, x1
  42f714:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f718:	add	x1, x0, #0x638
  42f71c:	mov	w0, #0x0                   	// #0
  42f720:	bl	407650 <log_assert_failed_realm@plt>
  42f724:	ldr	x0, [sp, #88]
  42f728:	ldr	x1, [x0, #256]
  42f72c:	ldr	x0, [sp, #80]
  42f730:	str	x1, [x0]
  42f734:	ldr	x0, [sp, #88]
  42f738:	str	xzr, [x0, #264]
  42f73c:	ldr	x0, [sp, #88]
  42f740:	ldr	x1, [x0, #264]
  42f744:	ldr	x0, [sp, #88]
  42f748:	str	x1, [x0, #256]
  42f74c:	ldr	x0, [sp, #40]
  42f750:	ldr	x0, [x0, #40]
  42f754:	ldr	x0, [x0, #80]
  42f758:	ldr	x1, [sp, #40]
  42f75c:	cmp	x1, x0
  42f760:	b.ne	42f770 <session_free+0x2fc>  // b.any
  42f764:	ldr	x0, [sp, #40]
  42f768:	ldr	x0, [x0, #40]
  42f76c:	str	xzr, [x0, #80]
  42f770:	ldr	x0, [sp, #40]
  42f774:	ldr	x0, [x0, #40]
  42f778:	bl	439060 <user_update_last_session_timer>
  42f77c:	ldr	x0, [sp, #40]
  42f780:	ldr	x0, [x0, #136]
  42f784:	cmp	x0, #0x0
  42f788:	b.eq	42f900 <session_free+0x48c>  // b.none
  42f78c:	ldr	x0, [sp, #40]
  42f790:	ldr	x0, [x0, #136]
  42f794:	ldr	x0, [x0, #32]
  42f798:	ldr	x1, [sp, #40]
  42f79c:	cmp	x1, x0
  42f7a0:	b.ne	42f7b0 <session_free+0x33c>  // b.any
  42f7a4:	ldr	x0, [sp, #40]
  42f7a8:	ldr	x0, [x0, #136]
  42f7ac:	str	xzr, [x0, #32]
  42f7b0:	ldr	x0, [sp, #40]
  42f7b4:	ldr	x0, [x0, #136]
  42f7b8:	ldr	x0, [x0, #40]
  42f7bc:	ldr	x1, [sp, #40]
  42f7c0:	cmp	x1, x0
  42f7c4:	b.ne	42f7d4 <session_free+0x360>  // b.any
  42f7c8:	ldr	x0, [sp, #40]
  42f7cc:	ldr	x0, [x0, #136]
  42f7d0:	str	xzr, [x0, #40]
  42f7d4:	ldr	x0, [sp, #40]
  42f7d8:	ldr	x0, [x0, #136]
  42f7dc:	ldr	x1, [sp, #40]
  42f7e0:	bl	428acc <seat_evict_position>
  42f7e4:	ldr	x0, [sp, #40]
  42f7e8:	ldr	x0, [x0, #136]
  42f7ec:	add	x0, x0, #0x30
  42f7f0:	str	x0, [sp, #96]
  42f7f4:	ldr	x0, [sp, #40]
  42f7f8:	str	x0, [sp, #104]
  42f7fc:	ldr	x0, [sp, #104]
  42f800:	cmp	x0, #0x0
  42f804:	cset	w0, eq  // eq = none
  42f808:	and	w0, w0, #0xff
  42f80c:	and	x0, x0, #0xff
  42f810:	cmp	x0, #0x0
  42f814:	b.eq	42f840 <session_free+0x3cc>  // b.none
  42f818:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f81c:	add	x1, x0, #0x5e3
  42f820:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f824:	add	x4, x0, #0xf0
  42f828:	mov	w3, #0x79                  	// #121
  42f82c:	mov	x2, x1
  42f830:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f834:	add	x1, x0, #0x630
  42f838:	mov	w0, #0x0                   	// #0
  42f83c:	bl	407650 <log_assert_failed_realm@plt>
  42f840:	ldr	x0, [sp, #104]
  42f844:	ldr	x0, [x0, #272]
  42f848:	cmp	x0, #0x0
  42f84c:	b.eq	42f864 <session_free+0x3f0>  // b.none
  42f850:	ldr	x0, [sp, #104]
  42f854:	ldr	x0, [x0, #272]
  42f858:	ldr	x1, [sp, #104]
  42f85c:	ldr	x1, [x1, #280]
  42f860:	str	x1, [x0, #280]
  42f864:	ldr	x0, [sp, #104]
  42f868:	ldr	x0, [x0, #280]
  42f86c:	cmp	x0, #0x0
  42f870:	b.eq	42f88c <session_free+0x418>  // b.none
  42f874:	ldr	x0, [sp, #104]
  42f878:	ldr	x0, [x0, #280]
  42f87c:	ldr	x1, [sp, #104]
  42f880:	ldr	x1, [x1, #272]
  42f884:	str	x1, [x0, #272]
  42f888:	b	42f8e8 <session_free+0x474>
  42f88c:	ldr	x0, [sp, #96]
  42f890:	ldr	x0, [x0]
  42f894:	ldr	x1, [sp, #104]
  42f898:	cmp	x1, x0
  42f89c:	cset	w0, ne  // ne = any
  42f8a0:	and	w0, w0, #0xff
  42f8a4:	and	x0, x0, #0xff
  42f8a8:	cmp	x0, #0x0
  42f8ac:	b.eq	42f8d8 <session_free+0x464>  // b.none
  42f8b0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f8b4:	add	x1, x0, #0x5e3
  42f8b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42f8bc:	add	x4, x0, #0xf0
  42f8c0:	mov	w3, #0x79                  	// #121
  42f8c4:	mov	x2, x1
  42f8c8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42f8cc:	add	x1, x0, #0x638
  42f8d0:	mov	w0, #0x0                   	// #0
  42f8d4:	bl	407650 <log_assert_failed_realm@plt>
  42f8d8:	ldr	x0, [sp, #104]
  42f8dc:	ldr	x1, [x0, #272]
  42f8e0:	ldr	x0, [sp, #96]
  42f8e4:	str	x1, [x0]
  42f8e8:	ldr	x0, [sp, #104]
  42f8ec:	str	xzr, [x0, #280]
  42f8f0:	ldr	x0, [sp, #104]
  42f8f4:	ldr	x1, [x0, #280]
  42f8f8:	ldr	x0, [sp, #104]
  42f8fc:	str	x1, [x0, #272]
  42f900:	ldr	x0, [sp, #40]
  42f904:	ldr	x0, [x0, #120]
  42f908:	cmp	x0, #0x0
  42f90c:	b.eq	42f93c <session_free+0x4c8>  // b.none
  42f910:	ldr	x0, [sp, #40]
  42f914:	ldr	x0, [x0]
  42f918:	ldr	x2, [x0, #216]
  42f91c:	ldr	x0, [sp, #40]
  42f920:	ldr	x0, [x0, #120]
  42f924:	mov	x1, x0
  42f928:	mov	x0, x2
  42f92c:	bl	42ef2c <hashmap_remove>
  42f930:	ldr	x0, [sp, #40]
  42f934:	ldr	x0, [x0, #120]
  42f938:	bl	408150 <free@plt>
  42f93c:	ldr	x0, [sp, #40]
  42f940:	ldr	w0, [x0, #152]
  42f944:	bl	42f1c4 <pid_is_valid>
  42f948:	and	w0, w0, #0xff
  42f94c:	cmp	w0, #0x0
  42f950:	b.eq	42f97c <session_free+0x508>  // b.none
  42f954:	ldr	x0, [sp, #40]
  42f958:	ldr	x0, [x0]
  42f95c:	ldr	x19, [x0, #40]
  42f960:	ldr	x0, [sp, #40]
  42f964:	ldr	w0, [x0, #152]
  42f968:	bl	42f1b0 <PID_TO_PTR>
  42f96c:	ldr	x2, [sp, #40]
  42f970:	mov	x1, x0
  42f974:	mov	x0, x19
  42f978:	bl	42ef50 <hashmap_remove_value>
  42f97c:	ldr	x0, [sp, #40]
  42f980:	ldr	x0, [x0, #128]
  42f984:	bl	408150 <free@plt>
  42f988:	ldr	x0, [sp, #40]
  42f98c:	ldr	x0, [x0, #216]
  42f990:	bl	407240 <sd_bus_message_unref@plt>
  42f994:	ldr	x0, [sp, #40]
  42f998:	ldr	x0, [x0, #72]
  42f99c:	bl	408150 <free@plt>
  42f9a0:	ldr	x0, [sp, #40]
  42f9a4:	ldr	x0, [x0, #64]
  42f9a8:	bl	408150 <free@plt>
  42f9ac:	ldr	x0, [sp, #40]
  42f9b0:	ldr	x0, [x0, #96]
  42f9b4:	bl	408150 <free@plt>
  42f9b8:	ldr	x0, [sp, #40]
  42f9bc:	ldr	x0, [x0, #88]
  42f9c0:	bl	408150 <free@plt>
  42f9c4:	ldr	x0, [sp, #40]
  42f9c8:	ldr	x0, [x0, #104]
  42f9cc:	bl	408150 <free@plt>
  42f9d0:	ldr	x0, [sp, #40]
  42f9d4:	ldr	x0, [x0, #112]
  42f9d8:	bl	408150 <free@plt>
  42f9dc:	ldr	x0, [sp, #40]
  42f9e0:	ldr	x0, [x0]
  42f9e4:	ldr	x2, [x0, #32]
  42f9e8:	ldr	x0, [sp, #40]
  42f9ec:	ldr	x0, [x0, #8]
  42f9f0:	mov	x1, x0
  42f9f4:	mov	x0, x2
  42f9f8:	bl	42ef2c <hashmap_remove>
  42f9fc:	ldr	x0, [sp, #40]
  42fa00:	ldr	x0, [x0, #176]
  42fa04:	bl	407550 <sd_event_source_unref@plt>
  42fa08:	ldr	x0, [sp, #40]
  42fa0c:	ldr	w0, [x0, #160]
  42fa10:	bl	4075e0 <safe_close@plt>
  42fa14:	ldr	x0, [sp, #40]
  42fa18:	ldr	x0, [x0, #32]
  42fa1c:	bl	408150 <free@plt>
  42fa20:	ldr	x0, [sp, #40]
  42fa24:	ldr	x0, [x0, #168]
  42fa28:	bl	408150 <free@plt>
  42fa2c:	ldr	x0, [sp, #40]
  42fa30:	bl	42ed94 <mfree>
  42fa34:	ldr	x19, [sp, #16]
  42fa38:	ldp	x29, x30, [sp], #112
  42fa3c:	ret

000000000042fa40 <session_set_user>:
  42fa40:	stp	x29, x30, [sp, #-48]!
  42fa44:	mov	x29, sp
  42fa48:	str	x0, [sp, #24]
  42fa4c:	str	x1, [sp, #16]
  42fa50:	ldr	x0, [sp, #24]
  42fa54:	cmp	x0, #0x0
  42fa58:	cset	w0, eq  // eq = none
  42fa5c:	and	w0, w0, #0xff
  42fa60:	and	x0, x0, #0xff
  42fa64:	cmp	x0, #0x0
  42fa68:	b.eq	42fa94 <session_set_user+0x54>  // b.none
  42fa6c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fa70:	add	x1, x0, #0x5e3
  42fa74:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42fa78:	add	x4, x0, #0x100
  42fa7c:	mov	w3, #0x9d                  	// #157
  42fa80:	mov	x2, x1
  42fa84:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fa88:	add	x1, x0, #0x648
  42fa8c:	mov	w0, #0x0                   	// #0
  42fa90:	bl	407650 <log_assert_failed_realm@plt>
  42fa94:	ldr	x0, [sp, #24]
  42fa98:	ldr	x0, [x0, #40]
  42fa9c:	cmp	x0, #0x0
  42faa0:	cset	w0, ne  // ne = any
  42faa4:	and	w0, w0, #0xff
  42faa8:	and	x0, x0, #0xff
  42faac:	cmp	x0, #0x0
  42fab0:	b.eq	42fadc <session_set_user+0x9c>  // b.none
  42fab4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fab8:	add	x1, x0, #0x5e3
  42fabc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42fac0:	add	x4, x0, #0x100
  42fac4:	mov	w3, #0x9e                  	// #158
  42fac8:	mov	x2, x1
  42facc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fad0:	add	x1, x0, #0x650
  42fad4:	mov	w0, #0x0                   	// #0
  42fad8:	bl	407650 <log_assert_failed_realm@plt>
  42fadc:	ldr	x0, [sp, #24]
  42fae0:	ldr	x1, [sp, #16]
  42fae4:	str	x1, [x0, #40]
  42fae8:	ldr	x0, [sp, #16]
  42faec:	add	x0, x0, #0x80
  42faf0:	str	x0, [sp, #32]
  42faf4:	ldr	x0, [sp, #24]
  42faf8:	str	x0, [sp, #40]
  42fafc:	ldr	x0, [sp, #40]
  42fb00:	cmp	x0, #0x0
  42fb04:	cset	w0, eq  // eq = none
  42fb08:	and	w0, w0, #0xff
  42fb0c:	and	x0, x0, #0xff
  42fb10:	cmp	x0, #0x0
  42fb14:	b.eq	42fb40 <session_set_user+0x100>  // b.none
  42fb18:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fb1c:	add	x1, x0, #0x5e3
  42fb20:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42fb24:	add	x4, x0, #0x100
  42fb28:	mov	w3, #0xa1                  	// #161
  42fb2c:	mov	x2, x1
  42fb30:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fb34:	add	x1, x0, #0x630
  42fb38:	mov	w0, #0x0                   	// #0
  42fb3c:	bl	407650 <log_assert_failed_realm@plt>
  42fb40:	ldr	x0, [sp, #32]
  42fb44:	ldr	x1, [x0]
  42fb48:	ldr	x0, [sp, #40]
  42fb4c:	str	x1, [x0, #256]
  42fb50:	ldr	x0, [sp, #40]
  42fb54:	ldr	x0, [x0, #256]
  42fb58:	cmp	x0, #0x0
  42fb5c:	b.eq	42fb70 <session_set_user+0x130>  // b.none
  42fb60:	ldr	x0, [sp, #40]
  42fb64:	ldr	x0, [x0, #256]
  42fb68:	ldr	x1, [sp, #40]
  42fb6c:	str	x1, [x0, #264]
  42fb70:	ldr	x0, [sp, #40]
  42fb74:	str	xzr, [x0, #264]
  42fb78:	ldr	x0, [sp, #32]
  42fb7c:	ldr	x1, [sp, #40]
  42fb80:	str	x1, [x0]
  42fb84:	ldr	x0, [sp, #16]
  42fb88:	bl	439060 <user_update_last_session_timer>
  42fb8c:	nop
  42fb90:	ldp	x29, x30, [sp], #48
  42fb94:	ret

000000000042fb98 <session_set_leader>:
  42fb98:	stp	x29, x30, [sp, #-64]!
  42fb9c:	mov	x29, sp
  42fba0:	str	x19, [sp, #16]
  42fba4:	str	x0, [sp, #40]
  42fba8:	str	w1, [sp, #36]
  42fbac:	ldr	x0, [sp, #40]
  42fbb0:	cmp	x0, #0x0
  42fbb4:	cset	w0, eq  // eq = none
  42fbb8:	and	w0, w0, #0xff
  42fbbc:	and	x0, x0, #0xff
  42fbc0:	cmp	x0, #0x0
  42fbc4:	b.eq	42fbf0 <session_set_leader+0x58>  // b.none
  42fbc8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fbcc:	add	x1, x0, #0x5e3
  42fbd0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42fbd4:	add	x4, x0, #0x118
  42fbd8:	mov	w3, #0xa9                  	// #169
  42fbdc:	mov	x2, x1
  42fbe0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fbe4:	add	x1, x0, #0x648
  42fbe8:	mov	w0, #0x0                   	// #0
  42fbec:	bl	407650 <log_assert_failed_realm@plt>
  42fbf0:	ldr	w0, [sp, #36]
  42fbf4:	bl	42f1c4 <pid_is_valid>
  42fbf8:	and	w0, w0, #0xff
  42fbfc:	eor	w0, w0, #0x1
  42fc00:	and	w0, w0, #0xff
  42fc04:	cmp	w0, #0x0
  42fc08:	b.eq	42fc14 <session_set_leader+0x7c>  // b.none
  42fc0c:	mov	w0, #0xffffffea            	// #-22
  42fc10:	b	42fcd0 <session_set_leader+0x138>
  42fc14:	ldr	x0, [sp, #40]
  42fc18:	ldr	w0, [x0, #152]
  42fc1c:	ldr	w1, [sp, #36]
  42fc20:	cmp	w1, w0
  42fc24:	b.ne	42fc30 <session_set_leader+0x98>  // b.any
  42fc28:	mov	w0, #0x0                   	// #0
  42fc2c:	b	42fcd0 <session_set_leader+0x138>
  42fc30:	ldr	x0, [sp, #40]
  42fc34:	ldr	x0, [x0]
  42fc38:	ldr	x19, [x0, #40]
  42fc3c:	ldr	w0, [sp, #36]
  42fc40:	bl	42f1b0 <PID_TO_PTR>
  42fc44:	ldr	x2, [sp, #40]
  42fc48:	mov	x1, x0
  42fc4c:	mov	x0, x19
  42fc50:	bl	407dd0 <hashmap_put@plt>
  42fc54:	str	w0, [sp, #60]
  42fc58:	ldr	w0, [sp, #60]
  42fc5c:	cmp	w0, #0x0
  42fc60:	b.ge	42fc6c <session_set_leader+0xd4>  // b.tcont
  42fc64:	ldr	w0, [sp, #60]
  42fc68:	b	42fcd0 <session_set_leader+0x138>
  42fc6c:	ldr	x0, [sp, #40]
  42fc70:	ldr	w0, [x0, #152]
  42fc74:	bl	42f1c4 <pid_is_valid>
  42fc78:	and	w0, w0, #0xff
  42fc7c:	cmp	w0, #0x0
  42fc80:	b.eq	42fcac <session_set_leader+0x114>  // b.none
  42fc84:	ldr	x0, [sp, #40]
  42fc88:	ldr	x0, [x0]
  42fc8c:	ldr	x19, [x0, #40]
  42fc90:	ldr	x0, [sp, #40]
  42fc94:	ldr	w0, [x0, #152]
  42fc98:	bl	42f1b0 <PID_TO_PTR>
  42fc9c:	ldr	x2, [sp, #40]
  42fca0:	mov	x1, x0
  42fca4:	mov	x0, x19
  42fca8:	bl	42ef50 <hashmap_remove_value>
  42fcac:	ldr	x0, [sp, #40]
  42fcb0:	ldr	w1, [sp, #36]
  42fcb4:	str	w1, [x0, #152]
  42fcb8:	ldr	x0, [sp, #40]
  42fcbc:	add	x0, x0, #0x9c
  42fcc0:	mov	x1, x0
  42fcc4:	ldr	w0, [sp, #36]
  42fcc8:	bl	408070 <audit_session_from_pid@plt>
  42fccc:	mov	w0, #0x1                   	// #1
  42fcd0:	ldr	x19, [sp, #16]
  42fcd4:	ldp	x29, x30, [sp], #64
  42fcd8:	ret

000000000042fcdc <session_save_devices>:
  42fcdc:	stp	x29, x30, [sp, #-80]!
  42fce0:	mov	x29, sp
  42fce4:	str	x19, [sp, #16]
  42fce8:	str	x0, [sp, #40]
  42fcec:	str	x1, [sp, #32]
  42fcf0:	adrp	x0, 460000 <wordlist.10364+0x370>
  42fcf4:	ldr	x0, [x0, #4024]
  42fcf8:	ldr	x1, [x0]
  42fcfc:	str	x1, [sp, #72]
  42fd00:	mov	x1, #0x0                   	// #0
  42fd04:	ldr	x0, [sp, #40]
  42fd08:	ldr	x0, [x0, #240]
  42fd0c:	bl	42ef98 <hashmap_isempty>
  42fd10:	and	w0, w0, #0xff
  42fd14:	eor	w0, w0, #0x1
  42fd18:	and	w0, w0, #0xff
  42fd1c:	cmp	w0, #0x0
  42fd20:	b.eq	42fdb0 <session_save_devices+0xd4>  // b.none
  42fd24:	ldr	x3, [sp, #32]
  42fd28:	mov	x2, #0x8                   	// #8
  42fd2c:	mov	x1, #0x1                   	// #1
  42fd30:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fd34:	add	x0, x0, #0x660
  42fd38:	bl	4081e0 <fwrite@plt>
  42fd3c:	mov	w0, #0xfffffffe            	// #-2
  42fd40:	str	w0, [sp, #56]
  42fd44:	str	xzr, [sp, #64]
  42fd48:	b	42fd80 <session_save_devices+0xa4>
  42fd4c:	ldr	x0, [sp, #48]
  42fd50:	ldr	x0, [x0, #16]
  42fd54:	bl	407e60 <gnu_dev_major@plt>
  42fd58:	mov	w19, w0
  42fd5c:	ldr	x0, [sp, #48]
  42fd60:	ldr	x0, [x0, #16]
  42fd64:	bl	408160 <gnu_dev_minor@plt>
  42fd68:	mov	w3, w0
  42fd6c:	mov	w2, w19
  42fd70:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fd74:	add	x1, x0, #0x670
  42fd78:	ldr	x0, [sp, #32]
  42fd7c:	bl	4074c0 <fprintf@plt>
  42fd80:	ldr	x0, [sp, #40]
  42fd84:	ldr	x0, [x0, #240]
  42fd88:	add	x2, sp, #0x30
  42fd8c:	add	x1, sp, #0x38
  42fd90:	mov	x3, #0x0                   	// #0
  42fd94:	bl	42efc0 <hashmap_iterate>
  42fd98:	and	w0, w0, #0xff
  42fd9c:	cmp	w0, #0x0
  42fda0:	b.ne	42fd4c <session_save_devices+0x70>  // b.any
  42fda4:	ldr	x1, [sp, #32]
  42fda8:	mov	w0, #0xa                   	// #10
  42fdac:	bl	407740 <fputc@plt>
  42fdb0:	nop
  42fdb4:	adrp	x0, 460000 <wordlist.10364+0x370>
  42fdb8:	ldr	x0, [x0, #4024]
  42fdbc:	ldr	x1, [sp, #72]
  42fdc0:	ldr	x0, [x0]
  42fdc4:	eor	x0, x1, x0
  42fdc8:	cmp	x0, #0x0
  42fdcc:	b.eq	42fdd4 <session_save_devices+0xf8>  // b.none
  42fdd0:	bl	407b20 <__stack_chk_fail@plt>
  42fdd4:	ldr	x19, [sp, #16]
  42fdd8:	ldp	x29, x30, [sp], #80
  42fddc:	ret

000000000042fde0 <session_save>:
  42fde0:	stp	x29, x30, [sp, #-128]!
  42fde4:	mov	x29, sp
  42fde8:	stp	x19, x20, [sp, #16]
  42fdec:	stp	x21, x22, [sp, #32]
  42fdf0:	str	x23, [sp, #48]
  42fdf4:	str	x0, [sp, #72]
  42fdf8:	adrp	x0, 460000 <wordlist.10364+0x370>
  42fdfc:	ldr	x0, [x0, #4024]
  42fe00:	ldr	x1, [x0]
  42fe04:	str	x1, [sp, #120]
  42fe08:	mov	x1, #0x0                   	// #0
  42fe0c:	str	xzr, [sp, #96]
  42fe10:	str	xzr, [sp, #104]
  42fe14:	str	wzr, [sp, #80]
  42fe18:	ldr	x0, [sp, #72]
  42fe1c:	cmp	x0, #0x0
  42fe20:	cset	w0, eq  // eq = none
  42fe24:	and	w0, w0, #0xff
  42fe28:	and	x0, x0, #0xff
  42fe2c:	cmp	x0, #0x0
  42fe30:	b.eq	42fe5c <session_save+0x7c>  // b.none
  42fe34:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fe38:	add	x1, x0, #0x5e3
  42fe3c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  42fe40:	add	x4, x0, #0x130
  42fe44:	mov	w3, #0xcf                  	// #207
  42fe48:	mov	x2, x1
  42fe4c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42fe50:	add	x1, x0, #0x648
  42fe54:	mov	w0, #0x0                   	// #0
  42fe58:	bl	407650 <log_assert_failed_realm@plt>
  42fe5c:	ldr	x0, [sp, #72]
  42fe60:	ldr	x0, [x0, #40]
  42fe64:	cmp	x0, #0x0
  42fe68:	b.ne	42fe74 <session_save+0x94>  // b.any
  42fe6c:	mov	w19, #0xffffff8c            	// #-116
  42fe70:	b	430584 <session_save+0x7a4>
  42fe74:	ldr	x0, [sp, #72]
  42fe78:	ldrb	w0, [x0, #209]
  42fe7c:	ubfx	x0, x0, #1, #1
  42fe80:	and	w0, w0, #0xff
  42fe84:	eor	w0, w0, #0x1
  42fe88:	and	w0, w0, #0xff
  42fe8c:	cmp	w0, #0x0
  42fe90:	b.eq	42fe9c <session_save+0xbc>  // b.none
  42fe94:	mov	w19, #0x0                   	// #0
  42fe98:	b	430584 <session_save+0x7a4>
  42fe9c:	mov	w4, #0x2                   	// #2
  42fea0:	mov	w3, #0x0                   	// #0
  42fea4:	mov	w2, #0x0                   	// #0
  42fea8:	mov	w1, #0x1ed                 	// #493
  42feac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42feb0:	add	x0, x0, #0x618
  42feb4:	bl	407ab0 <mkdir_safe_label@plt>
  42feb8:	str	w0, [sp, #80]
  42febc:	ldr	w0, [sp, #80]
  42fec0:	cmp	w0, #0x0
  42fec4:	b.lt	4304b8 <session_save+0x6d8>  // b.tstop
  42fec8:	ldr	x0, [sp, #72]
  42fecc:	ldr	x0, [x0, #32]
  42fed0:	add	x2, sp, #0x60
  42fed4:	add	x1, sp, #0x68
  42fed8:	bl	407870 <fopen_temporary@plt>
  42fedc:	str	w0, [sp, #80]
  42fee0:	ldr	w0, [sp, #80]
  42fee4:	cmp	w0, #0x0
  42fee8:	b.lt	4304c0 <session_save+0x6e0>  // b.tstop
  42feec:	ldr	x0, [sp, #104]
  42fef0:	bl	407300 <fileno@plt>
  42fef4:	mov	w1, #0x1a4                 	// #420
  42fef8:	bl	407150 <fchmod@plt>
  42fefc:	ldr	x19, [sp, #104]
  42ff00:	ldr	x0, [sp, #72]
  42ff04:	ldr	x0, [x0, #40]
  42ff08:	ldr	w20, [x0, #8]
  42ff0c:	ldr	x0, [sp, #72]
  42ff10:	ldr	x0, [x0, #40]
  42ff14:	ldr	x21, [x0, #16]
  42ff18:	ldr	x0, [sp, #72]
  42ff1c:	bl	4326f4 <session_is_active>
  42ff20:	and	w0, w0, #0xff
  42ff24:	mov	w22, w0
  42ff28:	ldr	x0, [sp, #72]
  42ff2c:	ldr	x0, [x0, #40]
  42ff30:	ldr	x0, [x0, #80]
  42ff34:	ldr	x1, [sp, #72]
  42ff38:	cmp	x1, x0
  42ff3c:	cset	w0, eq  // eq = none
  42ff40:	and	w0, w0, #0xff
  42ff44:	mov	w23, w0
  42ff48:	ldr	x0, [sp, #72]
  42ff4c:	bl	4336cc <session_get_state>
  42ff50:	bl	4344c8 <session_state_to_string>
  42ff54:	mov	x1, x0
  42ff58:	ldr	x0, [sp, #72]
  42ff5c:	ldrb	w0, [x0, #84]
  42ff60:	mov	w7, w0
  42ff64:	mov	x6, x1
  42ff68:	mov	w5, w23
  42ff6c:	mov	w4, w22
  42ff70:	mov	x3, x21
  42ff74:	mov	w2, w20
  42ff78:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ff7c:	add	x1, x0, #0x678
  42ff80:	mov	x0, x19
  42ff84:	bl	4074c0 <fprintf@plt>
  42ff88:	ldr	x0, [sp, #72]
  42ff8c:	ldr	w0, [x0, #20]
  42ff90:	cmp	w0, #0x0
  42ff94:	b.lt	42ffbc <session_save+0x1dc>  // b.tstop
  42ff98:	ldr	x19, [sp, #104]
  42ff9c:	ldr	x0, [sp, #72]
  42ffa0:	ldr	w0, [x0, #20]
  42ffa4:	bl	434508 <session_type_to_string>
  42ffa8:	mov	x2, x0
  42ffac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ffb0:	add	x1, x0, #0x6e0
  42ffb4:	mov	x0, x19
  42ffb8:	bl	4074c0 <fprintf@plt>
  42ffbc:	ldr	x0, [sp, #72]
  42ffc0:	ldr	w0, [x0, #24]
  42ffc4:	cmp	w0, #0x0
  42ffc8:	b.lt	42fff0 <session_save+0x210>  // b.tstop
  42ffcc:	ldr	x19, [sp, #104]
  42ffd0:	ldr	x0, [sp, #72]
  42ffd4:	ldr	w0, [x0, #24]
  42ffd8:	bl	434570 <session_class_to_string>
  42ffdc:	mov	x2, x0
  42ffe0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  42ffe4:	add	x1, x0, #0x6f0
  42ffe8:	mov	x0, x19
  42ffec:	bl	4074c0 <fprintf@plt>
  42fff0:	ldr	x0, [sp, #72]
  42fff4:	ldr	x0, [x0, #120]
  42fff8:	cmp	x0, #0x0
  42fffc:	b.eq	430020 <session_save+0x240>  // b.none
  430000:	ldr	x3, [sp, #104]
  430004:	ldr	x0, [sp, #72]
  430008:	ldr	x0, [x0, #120]
  43000c:	mov	x2, x0
  430010:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430014:	add	x1, x0, #0x700
  430018:	mov	x0, x3
  43001c:	bl	4074c0 <fprintf@plt>
  430020:	ldr	x0, [sp, #72]
  430024:	ldr	x0, [x0, #128]
  430028:	cmp	x0, #0x0
  43002c:	b.eq	430050 <session_save+0x270>  // b.none
  430030:	ldr	x3, [sp, #104]
  430034:	ldr	x0, [sp, #72]
  430038:	ldr	x0, [x0, #128]
  43003c:	mov	x2, x0
  430040:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430044:	add	x1, x0, #0x710
  430048:	mov	x0, x3
  43004c:	bl	4074c0 <fprintf@plt>
  430050:	ldr	x0, [sp, #72]
  430054:	ldr	x0, [x0, #168]
  430058:	cmp	x0, #0x0
  43005c:	b.eq	430080 <session_save+0x2a0>  // b.none
  430060:	ldr	x3, [sp, #104]
  430064:	ldr	x0, [sp, #72]
  430068:	ldr	x0, [x0, #168]
  43006c:	mov	x2, x0
  430070:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430074:	add	x1, x0, #0x720
  430078:	mov	x0, x3
  43007c:	bl	4074c0 <fprintf@plt>
  430080:	ldr	x0, [sp, #72]
  430084:	ldr	x0, [x0, #136]
  430088:	cmp	x0, #0x0
  43008c:	b.eq	4300b4 <session_save+0x2d4>  // b.none
  430090:	ldr	x3, [sp, #104]
  430094:	ldr	x0, [sp, #72]
  430098:	ldr	x0, [x0, #136]
  43009c:	ldr	x0, [x0, #8]
  4300a0:	mov	x2, x0
  4300a4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4300a8:	add	x1, x0, #0x730
  4300ac:	mov	x0, x3
  4300b0:	bl	4074c0 <fprintf@plt>
  4300b4:	ldr	x0, [sp, #72]
  4300b8:	ldr	x0, [x0, #72]
  4300bc:	cmp	x0, #0x0
  4300c0:	b.eq	4300e4 <session_save+0x304>  // b.none
  4300c4:	ldr	x3, [sp, #104]
  4300c8:	ldr	x0, [sp, #72]
  4300cc:	ldr	x0, [x0, #72]
  4300d0:	mov	x2, x0
  4300d4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4300d8:	add	x1, x0, #0x740
  4300dc:	mov	x0, x3
  4300e0:	bl	4074c0 <fprintf@plt>
  4300e4:	ldr	x0, [sp, #72]
  4300e8:	ldr	w0, [x0, #80]
  4300ec:	cmp	w0, #0x0
  4300f0:	b.lt	430118 <session_save+0x338>  // b.tstop
  4300f4:	ldr	x19, [sp, #104]
  4300f8:	ldr	x0, [sp, #72]
  4300fc:	ldr	w0, [x0, #80]
  430100:	bl	434600 <tty_validity_to_string>
  430104:	mov	x2, x0
  430108:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43010c:	add	x1, x0, #0x748
  430110:	mov	x0, x19
  430114:	bl	4074c0 <fprintf@plt>
  430118:	ldr	x0, [sp, #72]
  43011c:	ldr	x0, [x0, #64]
  430120:	cmp	x0, #0x0
  430124:	b.eq	430148 <session_save+0x368>  // b.none
  430128:	ldr	x3, [sp, #104]
  43012c:	ldr	x0, [sp, #72]
  430130:	ldr	x0, [x0, #64]
  430134:	mov	x2, x0
  430138:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43013c:	add	x1, x0, #0x760
  430140:	mov	x0, x3
  430144:	bl	4074c0 <fprintf@plt>
  430148:	ldr	x0, [sp, #72]
  43014c:	ldr	x0, [x0, #96]
  430150:	cmp	x0, #0x0
  430154:	b.eq	4301b4 <session_save+0x3d4>  // b.none
  430158:	ldr	x0, [sp, #72]
  43015c:	ldr	x0, [x0, #96]
  430160:	bl	407320 <cescape@plt>
  430164:	str	x0, [sp, #112]
  430168:	ldr	x0, [sp, #112]
  43016c:	cmp	x0, #0x0
  430170:	b.ne	430184 <session_save+0x3a4>  // b.any
  430174:	mov	w0, #0xfffffff4            	// #-12
  430178:	str	w0, [sp, #80]
  43017c:	mov	w19, #0x0                   	// #0
  430180:	b	4301a4 <session_save+0x3c4>
  430184:	ldr	x3, [sp, #104]
  430188:	ldr	x0, [sp, #112]
  43018c:	mov	x2, x0
  430190:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430194:	add	x1, x0, #0x770
  430198:	mov	x0, x3
  43019c:	bl	4074c0 <fprintf@plt>
  4301a0:	mov	w19, #0x1                   	// #1
  4301a4:	add	x0, sp, #0x70
  4301a8:	bl	42edb4 <freep>
  4301ac:	cmp	w19, #0x1
  4301b0:	b.ne	4304cc <session_save+0x6ec>  // b.any
  4301b4:	ldr	x0, [sp, #72]
  4301b8:	ldr	x0, [x0, #88]
  4301bc:	cmp	x0, #0x0
  4301c0:	b.eq	430220 <session_save+0x440>  // b.none
  4301c4:	ldr	x0, [sp, #72]
  4301c8:	ldr	x0, [x0, #88]
  4301cc:	bl	407320 <cescape@plt>
  4301d0:	str	x0, [sp, #112]
  4301d4:	ldr	x0, [sp, #112]
  4301d8:	cmp	x0, #0x0
  4301dc:	b.ne	4301f0 <session_save+0x410>  // b.any
  4301e0:	mov	w0, #0xfffffff4            	// #-12
  4301e4:	str	w0, [sp, #80]
  4301e8:	mov	w19, #0x0                   	// #0
  4301ec:	b	430210 <session_save+0x430>
  4301f0:	ldr	x3, [sp, #104]
  4301f4:	ldr	x0, [sp, #112]
  4301f8:	mov	x2, x0
  4301fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430200:	add	x1, x0, #0x780
  430204:	mov	x0, x3
  430208:	bl	4074c0 <fprintf@plt>
  43020c:	mov	w19, #0x1                   	// #1
  430210:	add	x0, sp, #0x70
  430214:	bl	42edb4 <freep>
  430218:	cmp	w19, #0x1
  43021c:	b.ne	4304cc <session_save+0x6ec>  // b.any
  430220:	ldr	x0, [sp, #72]
  430224:	ldr	x0, [x0, #104]
  430228:	cmp	x0, #0x0
  43022c:	b.eq	43028c <session_save+0x4ac>  // b.none
  430230:	ldr	x0, [sp, #72]
  430234:	ldr	x0, [x0, #104]
  430238:	bl	407320 <cescape@plt>
  43023c:	str	x0, [sp, #112]
  430240:	ldr	x0, [sp, #112]
  430244:	cmp	x0, #0x0
  430248:	b.ne	43025c <session_save+0x47c>  // b.any
  43024c:	mov	w0, #0xfffffff4            	// #-12
  430250:	str	w0, [sp, #80]
  430254:	mov	w19, #0x0                   	// #0
  430258:	b	43027c <session_save+0x49c>
  43025c:	ldr	x3, [sp, #104]
  430260:	ldr	x0, [sp, #112]
  430264:	mov	x2, x0
  430268:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43026c:	add	x1, x0, #0x790
  430270:	mov	x0, x3
  430274:	bl	4074c0 <fprintf@plt>
  430278:	mov	w19, #0x1                   	// #1
  43027c:	add	x0, sp, #0x70
  430280:	bl	42edb4 <freep>
  430284:	cmp	w19, #0x1
  430288:	b.ne	4304cc <session_save+0x6ec>  // b.any
  43028c:	ldr	x0, [sp, #72]
  430290:	ldr	x0, [x0, #112]
  430294:	cmp	x0, #0x0
  430298:	b.eq	4302f8 <session_save+0x518>  // b.none
  43029c:	ldr	x0, [sp, #72]
  4302a0:	ldr	x0, [x0, #112]
  4302a4:	bl	407320 <cescape@plt>
  4302a8:	str	x0, [sp, #112]
  4302ac:	ldr	x0, [sp, #112]
  4302b0:	cmp	x0, #0x0
  4302b4:	b.ne	4302c8 <session_save+0x4e8>  // b.any
  4302b8:	mov	w0, #0xfffffff4            	// #-12
  4302bc:	str	w0, [sp, #80]
  4302c0:	mov	w19, #0x0                   	// #0
  4302c4:	b	4302e8 <session_save+0x508>
  4302c8:	ldr	x3, [sp, #104]
  4302cc:	ldr	x0, [sp, #112]
  4302d0:	mov	x2, x0
  4302d4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4302d8:	add	x1, x0, #0x7a0
  4302dc:	mov	x0, x3
  4302e0:	bl	4074c0 <fprintf@plt>
  4302e4:	mov	w19, #0x1                   	// #1
  4302e8:	add	x0, sp, #0x70
  4302ec:	bl	42edb4 <freep>
  4302f0:	cmp	w19, #0x1
  4302f4:	b.ne	4304cc <session_save+0x6ec>  // b.any
  4302f8:	ldr	x0, [sp, #72]
  4302fc:	ldr	x0, [x0, #136]
  430300:	cmp	x0, #0x0
  430304:	b.eq	430340 <session_save+0x560>  // b.none
  430308:	ldr	x0, [sp, #72]
  43030c:	ldr	x0, [x0, #136]
  430310:	bl	428fb0 <seat_has_vts>
  430314:	and	w0, w0, #0xff
  430318:	cmp	w0, #0x0
  43031c:	b.eq	430340 <session_save+0x560>  // b.none
  430320:	ldr	x3, [sp, #104]
  430324:	ldr	x0, [sp, #72]
  430328:	ldr	w0, [x0, #144]
  43032c:	mov	w2, w0
  430330:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430334:	add	x1, x0, #0x7b0
  430338:	mov	x0, x3
  43033c:	bl	4074c0 <fprintf@plt>
  430340:	ldr	x0, [sp, #72]
  430344:	ldr	w0, [x0, #144]
  430348:	cmp	w0, #0x0
  43034c:	b.ne	430370 <session_save+0x590>  // b.any
  430350:	ldr	x3, [sp, #104]
  430354:	ldr	x0, [sp, #72]
  430358:	ldr	w0, [x0, #16]
  43035c:	mov	w2, w0
  430360:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430364:	add	x1, x0, #0x7c0
  430368:	mov	x0, x3
  43036c:	bl	4074c0 <fprintf@plt>
  430370:	ldr	x0, [sp, #72]
  430374:	ldr	w0, [x0, #152]
  430378:	bl	42f1c4 <pid_is_valid>
  43037c:	and	w0, w0, #0xff
  430380:	cmp	w0, #0x0
  430384:	b.eq	4303a8 <session_save+0x5c8>  // b.none
  430388:	ldr	x3, [sp, #104]
  43038c:	ldr	x0, [sp, #72]
  430390:	ldr	w0, [x0, #152]
  430394:	mov	w2, w0
  430398:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43039c:	add	x1, x0, #0x7d0
  4303a0:	mov	x0, x3
  4303a4:	bl	4074c0 <fprintf@plt>
  4303a8:	ldr	x0, [sp, #72]
  4303ac:	ldr	w0, [x0, #156]
  4303b0:	bl	42eea8 <audit_session_is_valid>
  4303b4:	and	w0, w0, #0xff
  4303b8:	cmp	w0, #0x0
  4303bc:	b.eq	4303e0 <session_save+0x600>  // b.none
  4303c0:	ldr	x3, [sp, #104]
  4303c4:	ldr	x0, [sp, #72]
  4303c8:	ldr	w0, [x0, #156]
  4303cc:	mov	w2, w0
  4303d0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4303d4:	add	x1, x0, #0x7e0
  4303d8:	mov	x0, x3
  4303dc:	bl	4074c0 <fprintf@plt>
  4303e0:	ldr	x0, [sp, #72]
  4303e4:	add	x0, x0, #0x30
  4303e8:	bl	42f088 <dual_timestamp_is_set>
  4303ec:	and	w0, w0, #0xff
  4303f0:	cmp	w0, #0x0
  4303f4:	b.eq	430424 <session_save+0x644>  // b.none
  4303f8:	ldr	x4, [sp, #104]
  4303fc:	ldr	x0, [sp, #72]
  430400:	ldr	x1, [x0, #48]
  430404:	ldr	x0, [sp, #72]
  430408:	ldr	x0, [x0, #56]
  43040c:	mov	x3, x0
  430410:	mov	x2, x1
  430414:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430418:	add	x1, x0, #0x7f0
  43041c:	mov	x0, x4
  430420:	bl	4074c0 <fprintf@plt>
  430424:	ldr	x0, [sp, #72]
  430428:	ldr	x0, [x0, #232]
  43042c:	cmp	x0, #0x0
  430430:	b.eq	430464 <session_save+0x684>  // b.none
  430434:	ldr	x3, [sp, #104]
  430438:	ldr	x0, [sp, #72]
  43043c:	ldr	x0, [x0, #232]
  430440:	mov	x2, x0
  430444:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430448:	add	x1, x0, #0x810
  43044c:	mov	x0, x3
  430450:	bl	4074c0 <fprintf@plt>
  430454:	ldr	x0, [sp, #104]
  430458:	mov	x1, x0
  43045c:	ldr	x0, [sp, #72]
  430460:	bl	42fcdc <session_save_devices>
  430464:	ldr	x0, [sp, #104]
  430468:	bl	408360 <fflush_and_check@plt>
  43046c:	str	w0, [sp, #80]
  430470:	ldr	w0, [sp, #80]
  430474:	cmp	w0, #0x0
  430478:	b.lt	4304c8 <session_save+0x6e8>  // b.tstop
  43047c:	ldr	x2, [sp, #96]
  430480:	ldr	x0, [sp, #72]
  430484:	ldr	x0, [x0, #32]
  430488:	mov	x1, x0
  43048c:	mov	x0, x2
  430490:	bl	407370 <rename@plt>
  430494:	cmp	w0, #0x0
  430498:	b.ge	4304b0 <session_save+0x6d0>  // b.tcont
  43049c:	bl	407960 <__errno_location@plt>
  4304a0:	ldr	w0, [x0]
  4304a4:	neg	w0, w0
  4304a8:	str	w0, [sp, #80]
  4304ac:	b	4304cc <session_save+0x6ec>
  4304b0:	mov	w19, #0x0                   	// #0
  4304b4:	b	430584 <session_save+0x7a4>
  4304b8:	nop
  4304bc:	b	4304cc <session_save+0x6ec>
  4304c0:	nop
  4304c4:	b	4304cc <session_save+0x6ec>
  4304c8:	nop
  4304cc:	ldr	x0, [sp, #72]
  4304d0:	ldr	x0, [x0, #32]
  4304d4:	bl	4070c0 <unlink@plt>
  4304d8:	ldr	x0, [sp, #96]
  4304dc:	cmp	x0, #0x0
  4304e0:	b.eq	4304ec <session_save+0x70c>  // b.none
  4304e4:	ldr	x0, [sp, #96]
  4304e8:	bl	4070c0 <unlink@plt>
  4304ec:	mov	w0, #0x3                   	// #3
  4304f0:	str	w0, [sp, #84]
  4304f4:	ldr	w0, [sp, #80]
  4304f8:	str	w0, [sp, #88]
  4304fc:	str	wzr, [sp, #92]
  430500:	ldr	w0, [sp, #92]
  430504:	bl	4083e0 <log_get_max_level_realm@plt>
  430508:	mov	w1, w0
  43050c:	ldr	w0, [sp, #84]
  430510:	and	w0, w0, #0x7
  430514:	cmp	w1, w0
  430518:	b.lt	43056c <session_save+0x78c>  // b.tstop
  43051c:	ldr	w0, [sp, #92]
  430520:	lsl	w1, w0, #10
  430524:	ldr	w0, [sp, #84]
  430528:	orr	w7, w1, w0
  43052c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430530:	add	x1, x0, #0x5e3
  430534:	ldr	x0, [sp, #72]
  430538:	ldr	x0, [x0, #32]
  43053c:	mov	x6, x0
  430540:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430544:	add	x5, x0, #0x820
  430548:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43054c:	add	x4, x0, #0x140
  430550:	mov	w3, #0x163                 	// #355
  430554:	mov	x2, x1
  430558:	ldr	w1, [sp, #88]
  43055c:	mov	w0, w7
  430560:	bl	407d60 <log_internal_realm@plt>
  430564:	mov	w19, w0
  430568:	b	430580 <session_save+0x7a0>
  43056c:	ldr	w0, [sp, #88]
  430570:	cmp	w0, #0x0
  430574:	cneg	w0, w0, lt  // lt = tstop
  430578:	and	w0, w0, #0xff
  43057c:	neg	w19, w0
  430580:	nop
  430584:	add	x0, sp, #0x68
  430588:	bl	42f130 <fclosep>
  43058c:	add	x0, sp, #0x60
  430590:	bl	42edb4 <freep>
  430594:	mov	w1, w19
  430598:	adrp	x0, 460000 <wordlist.10364+0x370>
  43059c:	ldr	x0, [x0, #4024]
  4305a0:	ldr	x2, [sp, #120]
  4305a4:	ldr	x0, [x0]
  4305a8:	eor	x0, x2, x0
  4305ac:	cmp	x0, #0x0
  4305b0:	b.eq	4305b8 <session_save+0x7d8>  // b.none
  4305b4:	bl	407b20 <__stack_chk_fail@plt>
  4305b8:	mov	w0, w1
  4305bc:	ldp	x19, x20, [sp, #16]
  4305c0:	ldp	x21, x22, [sp, #32]
  4305c4:	ldr	x23, [sp, #48]
  4305c8:	ldp	x29, x30, [sp], #128
  4305cc:	ret

00000000004305d0 <session_load_devices>:
  4305d0:	stp	x29, x30, [sp, #-112]!
  4305d4:	mov	x29, sp
  4305d8:	str	x19, [sp, #16]
  4305dc:	str	x0, [sp, #40]
  4305e0:	str	x1, [sp, #32]
  4305e4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4305e8:	ldr	x0, [x0, #4024]
  4305ec:	ldr	x1, [x0]
  4305f0:	str	x1, [sp, #104]
  4305f4:	mov	x1, #0x0                   	// #0
  4305f8:	str	wzr, [sp, #52]
  4305fc:	ldr	x0, [sp, #40]
  430600:	cmp	x0, #0x0
  430604:	cset	w0, eq  // eq = none
  430608:	and	w0, w0, #0xff
  43060c:	and	x0, x0, #0xff
  430610:	cmp	x0, #0x0
  430614:	b.eq	430640 <session_load_devices+0x70>  // b.none
  430618:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43061c:	add	x1, x0, #0x5e3
  430620:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430624:	add	x4, x0, #0x150
  430628:	mov	w3, #0x16a                 	// #362
  43062c:	mov	x2, x1
  430630:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430634:	add	x1, x0, #0x648
  430638:	mov	w0, #0x0                   	// #0
  43063c:	bl	407650 <log_assert_failed_realm@plt>
  430640:	ldr	x0, [sp, #32]
  430644:	str	x0, [sp, #72]
  430648:	str	xzr, [sp, #80]
  43064c:	add	x1, sp, #0x50
  430650:	add	x0, sp, #0x48
  430654:	mov	w3, #0x0                   	// #0
  430658:	mov	x2, #0x0                   	// #0
  43065c:	bl	407f40 <extract_first_word@plt>
  430660:	str	w0, [sp, #56]
  430664:	ldr	w0, [sp, #56]
  430668:	cmp	w0, #0x0
  43066c:	b.ne	430678 <session_load_devices+0xa8>  // b.any
  430670:	mov	w19, #0x0                   	// #0
  430674:	b	4306f8 <session_load_devices+0x128>
  430678:	ldr	w0, [sp, #56]
  43067c:	cmp	w0, #0x0
  430680:	b.ge	430694 <session_load_devices+0xc4>  // b.tcont
  430684:	ldr	w0, [sp, #56]
  430688:	str	w0, [sp, #52]
  43068c:	mov	w19, #0x0                   	// #0
  430690:	b	4306f8 <session_load_devices+0x128>
  430694:	ldr	x0, [sp, #80]
  430698:	add	x1, sp, #0x60
  43069c:	bl	4079f0 <parse_dev@plt>
  4306a0:	str	w0, [sp, #56]
  4306a4:	ldr	w0, [sp, #56]
  4306a8:	cmp	w0, #0x0
  4306ac:	b.ge	4306c0 <session_load_devices+0xf0>  // b.tcont
  4306b0:	ldr	w0, [sp, #56]
  4306b4:	str	w0, [sp, #52]
  4306b8:	mov	w19, #0x1                   	// #1
  4306bc:	b	4306f8 <session_load_devices+0x128>
  4306c0:	ldr	x0, [sp, #96]
  4306c4:	add	x1, sp, #0x58
  4306c8:	mov	x3, x1
  4306cc:	mov	w2, #0x0                   	// #0
  4306d0:	mov	x1, x0
  4306d4:	ldr	x0, [sp, #40]
  4306d8:	bl	42e118 <session_device_new>
  4306dc:	str	w0, [sp, #56]
  4306e0:	ldr	w0, [sp, #56]
  4306e4:	cmp	w0, #0x0
  4306e8:	b.ge	4306f4 <session_load_devices+0x124>  // b.tcont
  4306ec:	ldr	w0, [sp, #56]
  4306f0:	str	w0, [sp, #52]
  4306f4:	mov	w19, #0x2                   	// #2
  4306f8:	add	x0, sp, #0x50
  4306fc:	bl	42edb4 <freep>
  430700:	cmp	w19, #0x0
  430704:	b.eq	430710 <session_load_devices+0x140>  // b.none
  430708:	cmp	w19, #0x2
  43070c:	b	430648 <session_load_devices+0x78>
  430710:	ldr	w0, [sp, #52]
  430714:	cmp	w0, #0x0
  430718:	b.lt	430720 <session_load_devices+0x150>  // b.tstop
  43071c:	b	4307a4 <session_load_devices+0x1d4>
  430720:	mov	w0, #0x3                   	// #3
  430724:	str	w0, [sp, #60]
  430728:	ldr	w0, [sp, #52]
  43072c:	str	w0, [sp, #64]
  430730:	str	wzr, [sp, #68]
  430734:	ldr	w0, [sp, #68]
  430738:	bl	4083e0 <log_get_max_level_realm@plt>
  43073c:	mov	w1, w0
  430740:	ldr	w0, [sp, #60]
  430744:	and	w0, w0, #0x7
  430748:	cmp	w1, w0
  43074c:	b.lt	43079c <session_load_devices+0x1cc>  // b.tstop
  430750:	ldr	w0, [sp, #68]
  430754:	lsl	w1, w0, #10
  430758:	ldr	w0, [sp, #60]
  43075c:	orr	w7, w1, w0
  430760:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430764:	add	x1, x0, #0x5e3
  430768:	ldr	x0, [sp, #40]
  43076c:	ldr	x0, [x0, #8]
  430770:	mov	x6, x0
  430774:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430778:	add	x5, x0, #0x848
  43077c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430780:	add	x4, x0, #0x168
  430784:	mov	w3, #0x187                 	// #391
  430788:	mov	x2, x1
  43078c:	ldr	w1, [sp, #64]
  430790:	mov	w0, w7
  430794:	bl	407d60 <log_internal_realm@plt>
  430798:	b	4307a4 <session_load_devices+0x1d4>
  43079c:	ldr	w0, [sp, #64]
  4307a0:	cmp	w0, #0x0
  4307a4:	ldr	w0, [sp, #52]
  4307a8:	mov	w1, w0
  4307ac:	adrp	x0, 460000 <wordlist.10364+0x370>
  4307b0:	ldr	x0, [x0, #4024]
  4307b4:	ldr	x2, [sp, #104]
  4307b8:	ldr	x0, [x0]
  4307bc:	eor	x0, x2, x0
  4307c0:	cmp	x0, #0x0
  4307c4:	b.eq	4307cc <session_load_devices+0x1fc>  // b.none
  4307c8:	bl	407b20 <__stack_chk_fail@plt>
  4307cc:	mov	w0, w1
  4307d0:	ldr	x19, [sp, #16]
  4307d4:	ldp	x29, x30, [sp], #112
  4307d8:	ret

00000000004307dc <session_load>:
  4307dc:	sub	sp, sp, #0x2c0
  4307e0:	stp	x29, x30, [sp, #368]
  4307e4:	add	x29, sp, #0x170
  4307e8:	str	x19, [sp, #384]
  4307ec:	str	x0, [sp, #408]
  4307f0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4307f4:	ldr	x0, [x0, #4024]
  4307f8:	ldr	x1, [x0]
  4307fc:	str	x1, [sp, #696]
  430800:	mov	x1, #0x0                   	// #0
  430804:	str	xzr, [sp, #552]
  430808:	str	xzr, [sp, #560]
  43080c:	str	xzr, [sp, #568]
  430810:	str	xzr, [sp, #576]
  430814:	str	xzr, [sp, #584]
  430818:	str	xzr, [sp, #592]
  43081c:	str	xzr, [sp, #600]
  430820:	str	xzr, [sp, #608]
  430824:	str	xzr, [sp, #616]
  430828:	str	xzr, [sp, #624]
  43082c:	str	xzr, [sp, #632]
  430830:	str	xzr, [sp, #640]
  430834:	str	xzr, [sp, #648]
  430838:	str	xzr, [sp, #656]
  43083c:	str	xzr, [sp, #664]
  430840:	str	xzr, [sp, #672]
  430844:	ldr	x0, [sp, #408]
  430848:	cmp	x0, #0x0
  43084c:	cset	w0, eq  // eq = none
  430850:	and	w0, w0, #0xff
  430854:	and	x0, x0, #0xff
  430858:	cmp	x0, #0x0
  43085c:	b.eq	430888 <session_load+0xac>  // b.none
  430860:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430864:	add	x1, x0, #0x5e3
  430868:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43086c:	add	x4, x0, #0x180
  430870:	mov	w3, #0x1a0                 	// #416
  430874:	mov	x2, x1
  430878:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43087c:	add	x1, x0, #0x648
  430880:	mov	w0, #0x0                   	// #0
  430884:	bl	407650 <log_assert_failed_realm@plt>
  430888:	ldr	x0, [sp, #408]
  43088c:	ldr	x8, [x0, #32]
  430890:	ldr	x0, [sp, #408]
  430894:	add	x10, x0, #0x78
  430898:	ldr	x0, [sp, #408]
  43089c:	add	x11, x0, #0x80
  4308a0:	ldr	x0, [sp, #408]
  4308a4:	add	x0, x0, #0xa8
  4308a8:	ldr	x1, [sp, #408]
  4308ac:	add	x1, x1, #0x48
  4308b0:	ldr	x2, [sp, #408]
  4308b4:	add	x2, x2, #0x40
  4308b8:	ldr	x3, [sp, #408]
  4308bc:	add	x3, x3, #0x60
  4308c0:	ldr	x4, [sp, #408]
  4308c4:	add	x4, x4, #0x58
  4308c8:	ldr	x5, [sp, #408]
  4308cc:	add	x5, x5, #0x68
  4308d0:	ldr	x6, [sp, #408]
  4308d4:	add	x6, x6, #0x70
  4308d8:	add	x9, sp, #0x228
  4308dc:	str	xzr, [sp, #352]
  4308e0:	add	x7, sp, #0x2a0
  4308e4:	str	x7, [sp, #344]
  4308e8:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  4308ec:	add	x7, x7, #0x8a0
  4308f0:	str	x7, [sp, #336]
  4308f4:	add	x7, sp, #0x298
  4308f8:	str	x7, [sp, #328]
  4308fc:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  430900:	add	x7, x7, #0x8b0
  430904:	str	x7, [sp, #320]
  430908:	add	x7, sp, #0x290
  43090c:	str	x7, [sp, #312]
  430910:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  430914:	add	x7, x7, #0x8b8
  430918:	str	x7, [sp, #304]
  43091c:	add	x7, sp, #0x288
  430920:	str	x7, [sp, #296]
  430924:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  430928:	add	x7, x7, #0x8c0
  43092c:	str	x7, [sp, #288]
  430930:	add	x7, sp, #0x280
  430934:	str	x7, [sp, #280]
  430938:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  43093c:	add	x7, x7, #0x8d0
  430940:	str	x7, [sp, #272]
  430944:	add	x7, sp, #0x278
  430948:	str	x7, [sp, #264]
  43094c:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  430950:	add	x7, x7, #0x8e0
  430954:	str	x7, [sp, #256]
  430958:	add	x7, sp, #0x270
  43095c:	str	x7, [sp, #248]
  430960:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  430964:	add	x7, x7, #0x8f0
  430968:	str	x7, [sp, #240]
  43096c:	add	x7, sp, #0x268
  430970:	str	x7, [sp, #232]
  430974:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  430978:	add	x7, x7, #0x8f8
  43097c:	str	x7, [sp, #224]
  430980:	add	x7, sp, #0x260
  430984:	str	x7, [sp, #216]
  430988:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  43098c:	add	x7, x7, #0x900
  430990:	str	x7, [sp, #208]
  430994:	add	x7, sp, #0x258
  430998:	str	x7, [sp, #200]
  43099c:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  4309a0:	add	x7, x7, #0x908
  4309a4:	str	x7, [sp, #192]
  4309a8:	add	x7, sp, #0x250
  4309ac:	str	x7, [sp, #184]
  4309b0:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  4309b4:	add	x7, x7, #0x910
  4309b8:	str	x7, [sp, #176]
  4309bc:	add	x7, sp, #0x248
  4309c0:	str	x7, [sp, #168]
  4309c4:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  4309c8:	add	x7, x7, #0x920
  4309cc:	str	x7, [sp, #160]
  4309d0:	add	x7, sp, #0x240
  4309d4:	str	x7, [sp, #152]
  4309d8:	adrp	x7, 444000 <__PRETTY_FUNCTION__.12458>
  4309dc:	add	x7, x7, #0x928
  4309e0:	str	x7, [sp, #144]
  4309e4:	str	x6, [sp, #136]
  4309e8:	adrp	x6, 444000 <__PRETTY_FUNCTION__.12458>
  4309ec:	add	x6, x6, #0x930
  4309f0:	str	x6, [sp, #128]
  4309f4:	str	x5, [sp, #120]
  4309f8:	adrp	x5, 444000 <__PRETTY_FUNCTION__.12458>
  4309fc:	add	x5, x5, #0x938
  430a00:	str	x5, [sp, #112]
  430a04:	str	x4, [sp, #104]
  430a08:	adrp	x4, 444000 <__PRETTY_FUNCTION__.12458>
  430a0c:	add	x4, x4, #0x940
  430a10:	str	x4, [sp, #96]
  430a14:	str	x3, [sp, #88]
  430a18:	adrp	x3, 444000 <__PRETTY_FUNCTION__.12458>
  430a1c:	add	x3, x3, #0x950
  430a20:	str	x3, [sp, #80]
  430a24:	str	x2, [sp, #72]
  430a28:	adrp	x2, 444000 <__PRETTY_FUNCTION__.12458>
  430a2c:	add	x2, x2, #0x960
  430a30:	str	x2, [sp, #64]
  430a34:	add	x2, sp, #0x238
  430a38:	str	x2, [sp, #56]
  430a3c:	adrp	x2, 444000 <__PRETTY_FUNCTION__.12458>
  430a40:	add	x2, x2, #0x968
  430a44:	str	x2, [sp, #48]
  430a48:	str	x1, [sp, #40]
  430a4c:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  430a50:	add	x1, x1, #0x978
  430a54:	str	x1, [sp, #32]
  430a58:	add	x1, sp, #0x230
  430a5c:	str	x1, [sp, #24]
  430a60:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  430a64:	add	x1, x1, #0x980
  430a68:	str	x1, [sp, #16]
  430a6c:	str	x0, [sp, #8]
  430a70:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430a74:	add	x0, x0, #0x988
  430a78:	str	x0, [sp]
  430a7c:	mov	x7, x11
  430a80:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430a84:	add	x6, x0, #0x880
  430a88:	mov	x5, x10
  430a8c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430a90:	add	x4, x0, #0x890
  430a94:	mov	x3, x9
  430a98:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430a9c:	add	x2, x0, #0x898
  430aa0:	mov	x1, x8
  430aa4:	mov	x0, #0x0                   	// #0
  430aa8:	bl	407a20 <parse_env_file_sentinel@plt>
  430aac:	str	w0, [sp, #420]
  430ab0:	ldr	w0, [sp, #420]
  430ab4:	cmp	w0, #0x0
  430ab8:	b.ge	430b54 <session_load+0x378>  // b.tcont
  430abc:	mov	w0, #0x3                   	// #3
  430ac0:	str	w0, [sp, #540]
  430ac4:	ldr	w0, [sp, #420]
  430ac8:	str	w0, [sp, #544]
  430acc:	str	wzr, [sp, #548]
  430ad0:	ldr	w0, [sp, #548]
  430ad4:	bl	4083e0 <log_get_max_level_realm@plt>
  430ad8:	mov	w1, w0
  430adc:	ldr	w0, [sp, #540]
  430ae0:	and	w0, w0, #0x7
  430ae4:	cmp	w1, w0
  430ae8:	b.lt	430b3c <session_load+0x360>  // b.tstop
  430aec:	ldr	w0, [sp, #548]
  430af0:	lsl	w1, w0, #10
  430af4:	ldr	w0, [sp, #540]
  430af8:	orr	w7, w1, w0
  430afc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430b00:	add	x1, x0, #0x5e3
  430b04:	ldr	x0, [sp, #408]
  430b08:	ldr	x0, [x0, #32]
  430b0c:	mov	x6, x0
  430b10:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430b14:	add	x5, x0, #0x990
  430b18:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430b1c:	add	x4, x0, #0x190
  430b20:	mov	w3, #0x1be                 	// #446
  430b24:	mov	x2, x1
  430b28:	ldr	w1, [sp, #544]
  430b2c:	mov	w0, w7
  430b30:	bl	407d60 <log_internal_realm@plt>
  430b34:	mov	w19, w0
  430b38:	b	4313b8 <session_load+0xbdc>
  430b3c:	ldr	w0, [sp, #544]
  430b40:	cmp	w0, #0x0
  430b44:	cneg	w0, w0, lt  // lt = tstop
  430b48:	and	w0, w0, #0xff
  430b4c:	neg	w19, w0
  430b50:	b	4313b8 <session_load+0xbdc>
  430b54:	ldr	x0, [sp, #408]
  430b58:	ldr	x0, [x0, #40]
  430b5c:	cmp	x0, #0x0
  430b60:	b.ne	430d94 <session_load+0x5b8>  // b.any
  430b64:	ldr	x0, [sp, #624]
  430b68:	cmp	x0, #0x0
  430b6c:	b.ne	430c0c <session_load+0x430>  // b.any
  430b70:	mov	w0, #0x3                   	// #3
  430b74:	str	w0, [sp, #448]
  430b78:	mov	w0, #0x2                   	// #2
  430b7c:	movk	w0, #0x4000, lsl #16
  430b80:	str	w0, [sp, #452]
  430b84:	str	wzr, [sp, #456]
  430b88:	ldr	w0, [sp, #456]
  430b8c:	bl	4083e0 <log_get_max_level_realm@plt>
  430b90:	mov	w1, w0
  430b94:	ldr	w0, [sp, #448]
  430b98:	and	w0, w0, #0x7
  430b9c:	cmp	w1, w0
  430ba0:	b.lt	430bf4 <session_load+0x418>  // b.tstop
  430ba4:	ldr	w0, [sp, #456]
  430ba8:	lsl	w1, w0, #10
  430bac:	ldr	w0, [sp, #448]
  430bb0:	orr	w7, w1, w0
  430bb4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430bb8:	add	x1, x0, #0x5e3
  430bbc:	ldr	x0, [sp, #408]
  430bc0:	ldr	x0, [x0, #8]
  430bc4:	mov	x6, x0
  430bc8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430bcc:	add	x5, x0, #0x9a8
  430bd0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430bd4:	add	x4, x0, #0x190
  430bd8:	mov	w3, #0x1c5                 	// #453
  430bdc:	mov	x2, x1
  430be0:	ldr	w1, [sp, #452]
  430be4:	mov	w0, w7
  430be8:	bl	407d60 <log_internal_realm@plt>
  430bec:	mov	w19, w0
  430bf0:	b	4313b8 <session_load+0xbdc>
  430bf4:	ldr	w0, [sp, #452]
  430bf8:	cmp	w0, #0x0
  430bfc:	cneg	w0, w0, lt  // lt = tstop
  430c00:	and	w0, w0, #0xff
  430c04:	neg	w19, w0
  430c08:	b	4313b8 <session_load+0xbdc>
  430c0c:	ldr	x0, [sp, #624]
  430c10:	add	x1, sp, #0x1a0
  430c14:	bl	407ee0 <parse_uid@plt>
  430c18:	str	w0, [sp, #420]
  430c1c:	ldr	w0, [sp, #420]
  430c20:	cmp	w0, #0x0
  430c24:	b.ge	430cb8 <session_load+0x4dc>  // b.tcont
  430c28:	mov	w0, #0x3                   	// #3
  430c2c:	str	w0, [sp, #436]
  430c30:	str	wzr, [sp, #440]
  430c34:	str	wzr, [sp, #444]
  430c38:	ldr	w0, [sp, #444]
  430c3c:	bl	4083e0 <log_get_max_level_realm@plt>
  430c40:	mov	w1, w0
  430c44:	ldr	w0, [sp, #436]
  430c48:	and	w0, w0, #0x7
  430c4c:	cmp	w1, w0
  430c50:	b.lt	430ca8 <session_load+0x4cc>  // b.tstop
  430c54:	ldr	w0, [sp, #444]
  430c58:	lsl	w1, w0, #10
  430c5c:	ldr	w0, [sp, #436]
  430c60:	orr	w8, w1, w0
  430c64:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430c68:	add	x1, x0, #0x5e3
  430c6c:	ldr	x2, [sp, #624]
  430c70:	ldr	x0, [sp, #408]
  430c74:	ldr	x0, [x0, #8]
  430c78:	mov	x7, x0
  430c7c:	mov	x6, x2
  430c80:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430c84:	add	x5, x0, #0x9d0
  430c88:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430c8c:	add	x4, x0, #0x190
  430c90:	mov	w3, #0x1cb                 	// #459
  430c94:	mov	x2, x1
  430c98:	ldr	w1, [sp, #440]
  430c9c:	mov	w0, w8
  430ca0:	bl	407d60 <log_internal_realm@plt>
  430ca4:	b	430cb0 <session_load+0x4d4>
  430ca8:	ldr	w0, [sp, #440]
  430cac:	cmp	w0, #0x0
  430cb0:	ldr	w19, [sp, #420]
  430cb4:	b	4313b8 <session_load+0xbdc>
  430cb8:	ldr	x0, [sp, #408]
  430cbc:	ldr	x0, [x0]
  430cc0:	ldr	x2, [x0, #48]
  430cc4:	ldr	w0, [sp, #416]
  430cc8:	mov	w0, w0
  430ccc:	add	x0, x0, #0x1
  430cd0:	mov	x1, x0
  430cd4:	mov	x0, x2
  430cd8:	bl	42ef08 <hashmap_get>
  430cdc:	str	x0, [sp, #680]
  430ce0:	ldr	x0, [sp, #680]
  430ce4:	cmp	x0, #0x0
  430ce8:	b.ne	430d88 <session_load+0x5ac>  // b.any
  430cec:	mov	w0, #0x3                   	// #3
  430cf0:	str	w0, [sp, #424]
  430cf4:	mov	w0, #0x2                   	// #2
  430cf8:	movk	w0, #0x4000, lsl #16
  430cfc:	str	w0, [sp, #428]
  430d00:	str	wzr, [sp, #432]
  430d04:	ldr	w0, [sp, #432]
  430d08:	bl	4083e0 <log_get_max_level_realm@plt>
  430d0c:	mov	w1, w0
  430d10:	ldr	w0, [sp, #424]
  430d14:	and	w0, w0, #0x7
  430d18:	cmp	w1, w0
  430d1c:	b.lt	430d70 <session_load+0x594>  // b.tstop
  430d20:	ldr	w0, [sp, #432]
  430d24:	lsl	w1, w0, #10
  430d28:	ldr	w0, [sp, #424]
  430d2c:	orr	w7, w1, w0
  430d30:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430d34:	add	x1, x0, #0x5e3
  430d38:	ldr	x0, [sp, #408]
  430d3c:	ldr	x0, [x0, #8]
  430d40:	mov	x6, x0
  430d44:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430d48:	add	x5, x0, #0xa00
  430d4c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430d50:	add	x4, x0, #0x190
  430d54:	mov	w3, #0x1d1                 	// #465
  430d58:	mov	x2, x1
  430d5c:	ldr	w1, [sp, #428]
  430d60:	mov	w0, w7
  430d64:	bl	407d60 <log_internal_realm@plt>
  430d68:	mov	w19, w0
  430d6c:	b	4313b8 <session_load+0xbdc>
  430d70:	ldr	w0, [sp, #428]
  430d74:	cmp	w0, #0x0
  430d78:	cneg	w0, w0, lt  // lt = tstop
  430d7c:	and	w0, w0, #0xff
  430d80:	neg	w19, w0
  430d84:	b	4313b8 <session_load+0xbdc>
  430d88:	ldr	x1, [sp, #680]
  430d8c:	ldr	x0, [sp, #408]
  430d90:	bl	42fa40 <session_set_user>
  430d94:	ldr	x0, [sp, #552]
  430d98:	cmp	x0, #0x0
  430d9c:	b.eq	430dd0 <session_load+0x5f4>  // b.none
  430da0:	ldr	x0, [sp, #552]
  430da4:	bl	407290 <parse_boolean@plt>
  430da8:	str	w0, [sp, #460]
  430dac:	ldr	w0, [sp, #460]
  430db0:	cmp	w0, #0x0
  430db4:	b.lt	430dd0 <session_load+0x5f4>  // b.tstop
  430db8:	ldr	w0, [sp, #460]
  430dbc:	cmp	w0, #0x0
  430dc0:	cset	w0, ne  // ne = any
  430dc4:	and	w1, w0, #0xff
  430dc8:	ldr	x0, [sp, #408]
  430dcc:	strb	w1, [x0, #84]
  430dd0:	ldr	x0, [sp, #576]
  430dd4:	cmp	x0, #0x0
  430dd8:	b.eq	430df4 <session_load+0x618>  // b.none
  430ddc:	ldr	x2, [sp, #576]
  430de0:	ldr	x0, [sp, #408]
  430de4:	add	x0, x0, #0x90
  430de8:	mov	x1, x0
  430dec:	mov	x0, x2
  430df0:	bl	42f188 <safe_atou>
  430df4:	ldr	x0, [sp, #560]
  430df8:	cmp	x0, #0x0
  430dfc:	b.eq	430ee4 <session_load+0x708>  // b.none
  430e00:	ldr	x0, [sp, #408]
  430e04:	ldr	x0, [x0, #136]
  430e08:	cmp	x0, #0x0
  430e0c:	b.ne	430ee4 <session_load+0x708>  // b.any
  430e10:	ldr	x0, [sp, #408]
  430e14:	ldr	x0, [x0]
  430e18:	ldr	x0, [x0, #24]
  430e1c:	ldr	x1, [sp, #560]
  430e20:	bl	42ef08 <hashmap_get>
  430e24:	str	x0, [sp, #688]
  430e28:	ldr	x0, [sp, #688]
  430e2c:	cmp	x0, #0x0
  430e30:	b.eq	430e44 <session_load+0x668>  // b.none
  430e34:	ldr	x1, [sp, #408]
  430e38:	ldr	x0, [sp, #688]
  430e3c:	bl	428d14 <seat_attach_session>
  430e40:	str	w0, [sp, #420]
  430e44:	ldr	x0, [sp, #688]
  430e48:	cmp	x0, #0x0
  430e4c:	b.eq	430e5c <session_load+0x680>  // b.none
  430e50:	ldr	w0, [sp, #420]
  430e54:	cmp	w0, #0x0
  430e58:	b.ge	430ee4 <session_load+0x708>  // b.tcont
  430e5c:	mov	w0, #0x3                   	// #3
  430e60:	str	w0, [sp, #464]
  430e64:	str	wzr, [sp, #468]
  430e68:	str	wzr, [sp, #472]
  430e6c:	ldr	w0, [sp, #472]
  430e70:	bl	4083e0 <log_get_max_level_realm@plt>
  430e74:	mov	w1, w0
  430e78:	ldr	w0, [sp, #464]
  430e7c:	and	w0, w0, #0x7
  430e80:	cmp	w1, w0
  430e84:	b.lt	430edc <session_load+0x700>  // b.tstop
  430e88:	ldr	w0, [sp, #472]
  430e8c:	lsl	w1, w0, #10
  430e90:	ldr	w0, [sp, #464]
  430e94:	orr	w8, w1, w0
  430e98:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430e9c:	add	x1, x0, #0x5e3
  430ea0:	ldr	x0, [sp, #408]
  430ea4:	ldr	x0, [x0, #8]
  430ea8:	ldr	x2, [sp, #560]
  430eac:	mov	x7, x2
  430eb0:	mov	x6, x0
  430eb4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430eb8:	add	x5, x0, #0xa20
  430ebc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430ec0:	add	x4, x0, #0x190
  430ec4:	mov	w3, #0x1e8                 	// #488
  430ec8:	mov	x2, x1
  430ecc:	ldr	w1, [sp, #468]
  430ed0:	mov	w0, w8
  430ed4:	bl	407d60 <log_internal_realm@plt>
  430ed8:	b	430ee4 <session_load+0x708>
  430edc:	ldr	w0, [sp, #468]
  430ee0:	cmp	w0, #0x0
  430ee4:	ldr	x0, [sp, #408]
  430ee8:	ldr	x0, [x0, #136]
  430eec:	cmp	x0, #0x0
  430ef0:	b.eq	430f14 <session_load+0x738>  // b.none
  430ef4:	ldr	x0, [sp, #408]
  430ef8:	ldr	x0, [x0, #136]
  430efc:	bl	428fb0 <seat_has_vts>
  430f00:	and	w0, w0, #0xff
  430f04:	eor	w0, w0, #0x1
  430f08:	and	w0, w0, #0xff
  430f0c:	cmp	w0, #0x0
  430f10:	b.eq	430f1c <session_load+0x740>  // b.none
  430f14:	ldr	x0, [sp, #408]
  430f18:	str	wzr, [x0, #144]
  430f1c:	ldr	x0, [sp, #592]
  430f20:	cmp	x0, #0x0
  430f24:	b.eq	430f5c <session_load+0x780>  // b.none
  430f28:	ldr	x0, [sp, #408]
  430f2c:	ldr	x0, [x0, #136]
  430f30:	cmp	x0, #0x0
  430f34:	b.eq	430f5c <session_load+0x780>  // b.none
  430f38:	ldr	x0, [sp, #592]
  430f3c:	add	x1, sp, #0x1a0
  430f40:	bl	42f188 <safe_atou>
  430f44:	ldr	x0, [sp, #408]
  430f48:	ldr	x0, [x0, #136]
  430f4c:	ldr	w1, [sp, #416]
  430f50:	mov	w2, w1
  430f54:	ldr	x1, [sp, #408]
  430f58:	bl	428bc8 <seat_claim_position>
  430f5c:	ldr	x0, [sp, #568]
  430f60:	cmp	x0, #0x0
  430f64:	b.eq	43100c <session_load+0x830>  // b.none
  430f68:	ldr	x0, [sp, #568]
  430f6c:	bl	434640 <tty_validity_from_string>
  430f70:	str	w0, [sp, #476]
  430f74:	ldr	w0, [sp, #476]
  430f78:	cmp	w0, #0x0
  430f7c:	b.ge	431000 <session_load+0x824>  // b.tcont
  430f80:	mov	w0, #0x7                   	// #7
  430f84:	str	w0, [sp, #480]
  430f88:	str	wzr, [sp, #484]
  430f8c:	str	wzr, [sp, #488]
  430f90:	ldr	w0, [sp, #488]
  430f94:	bl	4083e0 <log_get_max_level_realm@plt>
  430f98:	mov	w1, w0
  430f9c:	ldr	w0, [sp, #480]
  430fa0:	and	w0, w0, #0x7
  430fa4:	cmp	w1, w0
  430fa8:	b.lt	430ff4 <session_load+0x818>  // b.tstop
  430fac:	ldr	w0, [sp, #488]
  430fb0:	lsl	w1, w0, #10
  430fb4:	ldr	w0, [sp, #480]
  430fb8:	orr	w7, w1, w0
  430fbc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430fc0:	add	x1, x0, #0x5e3
  430fc4:	ldr	x0, [sp, #568]
  430fc8:	mov	x6, x0
  430fcc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  430fd0:	add	x5, x0, #0xa48
  430fd4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  430fd8:	add	x4, x0, #0x190
  430fdc:	mov	w3, #0x1fa                 	// #506
  430fe0:	mov	x2, x1
  430fe4:	ldr	w1, [sp, #484]
  430fe8:	mov	w0, w7
  430fec:	bl	407d60 <log_internal_realm@plt>
  430ff0:	b	43100c <session_load+0x830>
  430ff4:	ldr	w0, [sp, #484]
  430ff8:	cmp	w0, #0x0
  430ffc:	b	43100c <session_load+0x830>
  431000:	ldr	x0, [sp, #408]
  431004:	ldr	w1, [sp, #476]
  431008:	str	w1, [x0, #80]
  43100c:	ldr	x0, [sp, #600]
  431010:	cmp	x0, #0x0
  431014:	b.eq	431150 <session_load+0x974>  // b.none
  431018:	ldr	x0, [sp, #600]
  43101c:	add	x1, sp, #0x1a0
  431020:	bl	4078c0 <parse_pid@plt>
  431024:	str	w0, [sp, #420]
  431028:	ldr	w0, [sp, #420]
  43102c:	cmp	w0, #0x0
  431030:	b.ge	4310b8 <session_load+0x8dc>  // b.tcont
  431034:	mov	w0, #0x7                   	// #7
  431038:	str	w0, [sp, #504]
  43103c:	ldr	w0, [sp, #420]
  431040:	str	w0, [sp, #508]
  431044:	str	wzr, [sp, #512]
  431048:	ldr	w0, [sp, #512]
  43104c:	bl	4083e0 <log_get_max_level_realm@plt>
  431050:	mov	w1, w0
  431054:	ldr	w0, [sp, #504]
  431058:	and	w0, w0, #0x7
  43105c:	cmp	w1, w0
  431060:	b.lt	4310ac <session_load+0x8d0>  // b.tstop
  431064:	ldr	w0, [sp, #512]
  431068:	lsl	w1, w0, #10
  43106c:	ldr	w0, [sp, #504]
  431070:	orr	w7, w1, w0
  431074:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431078:	add	x1, x0, #0x5e3
  43107c:	ldr	x0, [sp, #600]
  431080:	mov	x6, x0
  431084:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431088:	add	x5, x0, #0xa70
  43108c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431090:	add	x4, x0, #0x190
  431094:	mov	w3, #0x204                 	// #516
  431098:	mov	x2, x1
  43109c:	ldr	w1, [sp, #508]
  4310a0:	mov	w0, w7
  4310a4:	bl	407d60 <log_internal_realm@plt>
  4310a8:	b	431150 <session_load+0x974>
  4310ac:	ldr	w0, [sp, #508]
  4310b0:	cmp	w0, #0x0
  4310b4:	b	431150 <session_load+0x974>
  4310b8:	ldr	w0, [sp, #416]
  4310bc:	mov	w1, w0
  4310c0:	ldr	x0, [sp, #408]
  4310c4:	bl	42fb98 <session_set_leader>
  4310c8:	str	w0, [sp, #420]
  4310cc:	ldr	w0, [sp, #420]
  4310d0:	cmp	w0, #0x0
  4310d4:	b.ge	431150 <session_load+0x974>  // b.tcont
  4310d8:	mov	w0, #0x4                   	// #4
  4310dc:	str	w0, [sp, #492]
  4310e0:	ldr	w0, [sp, #420]
  4310e4:	str	w0, [sp, #496]
  4310e8:	str	wzr, [sp, #500]
  4310ec:	ldr	w0, [sp, #500]
  4310f0:	bl	4083e0 <log_get_max_level_realm@plt>
  4310f4:	mov	w1, w0
  4310f8:	ldr	w0, [sp, #492]
  4310fc:	and	w0, w0, #0x7
  431100:	cmp	w1, w0
  431104:	b.lt	431148 <session_load+0x96c>  // b.tstop
  431108:	ldr	w0, [sp, #500]
  43110c:	lsl	w1, w0, #10
  431110:	ldr	w0, [sp, #492]
  431114:	orr	w6, w1, w0
  431118:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43111c:	add	x1, x0, #0x5e3
  431120:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431124:	add	x5, x0, #0xaa0
  431128:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43112c:	add	x4, x0, #0x190
  431130:	mov	w3, #0x208                 	// #520
  431134:	mov	x2, x1
  431138:	ldr	w1, [sp, #496]
  43113c:	mov	w0, w6
  431140:	bl	407d60 <log_internal_realm@plt>
  431144:	b	431150 <session_load+0x974>
  431148:	ldr	w0, [sp, #496]
  43114c:	cmp	w0, #0x0
  431150:	ldr	x0, [sp, #608]
  431154:	cmp	x0, #0x0
  431158:	b.eq	431180 <session_load+0x9a4>  // b.none
  43115c:	ldr	x0, [sp, #608]
  431160:	bl	434548 <session_type_from_string>
  431164:	str	w0, [sp, #516]
  431168:	ldr	w0, [sp, #516]
  43116c:	cmp	w0, #0x0
  431170:	b.lt	431180 <session_load+0x9a4>  // b.tstop
  431174:	ldr	x0, [sp, #408]
  431178:	ldr	w1, [sp, #516]
  43117c:	str	w1, [x0, #20]
  431180:	ldr	x0, [sp, #616]
  431184:	cmp	x0, #0x0
  431188:	b.eq	4311b0 <session_load+0x9d4>  // b.none
  43118c:	ldr	x0, [sp, #616]
  431190:	bl	4345b0 <session_class_from_string>
  431194:	str	w0, [sp, #520]
  431198:	ldr	w0, [sp, #520]
  43119c:	cmp	w0, #0x0
  4311a0:	b.lt	4311b0 <session_load+0x9d4>  // b.tstop
  4311a4:	ldr	x0, [sp, #408]
  4311a8:	ldr	w1, [sp, #520]
  4311ac:	str	w1, [x0, #24]
  4311b0:	ldr	x0, [sp, #584]
  4311b4:	cmp	x0, #0x0
  4311b8:	b.eq	4311e8 <session_load+0xa0c>  // b.none
  4311bc:	ldr	x2, [sp, #584]
  4311c0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4311c4:	add	x1, x0, #0xad0
  4311c8:	mov	x0, x2
  4311cc:	bl	407f30 <strcmp@plt>
  4311d0:	cmp	w0, #0x0
  4311d4:	b.ne	4311e8 <session_load+0xa0c>  // b.any
  4311d8:	ldr	x0, [sp, #408]
  4311dc:	ldrb	w1, [x0, #209]
  4311e0:	orr	w1, w1, #0x4
  4311e4:	strb	w1, [x0, #209]
  4311e8:	ldr	x0, [sp, #408]
  4311ec:	ldr	x0, [x0, #168]
  4311f0:	cmp	x0, #0x0
  4311f4:	b.eq	43120c <session_load+0xa30>  // b.none
  4311f8:	ldr	x0, [sp, #408]
  4311fc:	bl	432f78 <session_create_fifo>
  431200:	str	w0, [sp, #524]
  431204:	ldr	w0, [sp, #524]
  431208:	bl	4075e0 <safe_close@plt>
  43120c:	ldr	x0, [sp, #632]
  431210:	cmp	x0, #0x0
  431214:	b.eq	431230 <session_load+0xa54>  // b.none
  431218:	ldr	x2, [sp, #632]
  43121c:	ldr	x0, [sp, #408]
  431220:	add	x0, x0, #0x30
  431224:	mov	x1, x0
  431228:	mov	x0, x2
  43122c:	bl	408000 <deserialize_usec@plt>
  431230:	ldr	x0, [sp, #640]
  431234:	cmp	x0, #0x0
  431238:	b.eq	431254 <session_load+0xa78>  // b.none
  43123c:	ldr	x2, [sp, #640]
  431240:	ldr	x0, [sp, #408]
  431244:	add	x0, x0, #0x38
  431248:	mov	x1, x0
  43124c:	mov	x0, x2
  431250:	bl	408000 <deserialize_usec@plt>
  431254:	ldr	x0, [sp, #656]
  431258:	cmp	x0, #0x0
  43125c:	b.eq	431298 <session_load+0xabc>  // b.none
  431260:	ldr	x0, [sp, #656]
  431264:	bl	407290 <parse_boolean@plt>
  431268:	str	w0, [sp, #460]
  43126c:	ldr	w0, [sp, #460]
  431270:	cmp	w0, #0x0
  431274:	b.lt	431298 <session_load+0xabc>  // b.tstop
  431278:	ldr	w0, [sp, #460]
  43127c:	cmp	w0, #0x0
  431280:	cset	w0, ne  // ne = any
  431284:	and	w2, w0, #0xff
  431288:	ldr	x1, [sp, #408]
  43128c:	ldrb	w0, [x1, #209]
  431290:	bfi	w0, w2, #3, #1
  431294:	strb	w0, [x1, #209]
  431298:	ldr	x0, [sp, #672]
  43129c:	cmp	x0, #0x0
  4312a0:	b.eq	431354 <session_load+0xb78>  // b.none
  4312a4:	ldr	x0, [sp, #672]
  4312a8:	bl	407290 <parse_boolean@plt>
  4312ac:	str	w0, [sp, #460]
  4312b0:	ldr	w0, [sp, #460]
  4312b4:	cmp	w0, #0x0
  4312b8:	b.ge	431338 <session_load+0xb5c>  // b.tcont
  4312bc:	mov	w0, #0x4                   	// #4
  4312c0:	str	w0, [sp, #528]
  4312c4:	ldr	w0, [sp, #460]
  4312c8:	str	w0, [sp, #532]
  4312cc:	str	wzr, [sp, #536]
  4312d0:	ldr	w0, [sp, #536]
  4312d4:	bl	4083e0 <log_get_max_level_realm@plt>
  4312d8:	mov	w1, w0
  4312dc:	ldr	w0, [sp, #528]
  4312e0:	and	w0, w0, #0x7
  4312e4:	cmp	w1, w0
  4312e8:	b.lt	43132c <session_load+0xb50>  // b.tstop
  4312ec:	ldr	w0, [sp, #536]
  4312f0:	lsl	w1, w0, #10
  4312f4:	ldr	w0, [sp, #528]
  4312f8:	orr	w6, w1, w0
  4312fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431300:	add	x1, x0, #0x5e3
  431304:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431308:	add	x5, x0, #0xad8
  43130c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431310:	add	x4, x0, #0x190
  431314:	mov	w3, #0x23f                 	// #575
  431318:	mov	x2, x1
  43131c:	ldr	w1, [sp, #532]
  431320:	mov	w0, w6
  431324:	bl	407d60 <log_internal_realm@plt>
  431328:	b	431354 <session_load+0xb78>
  43132c:	ldr	w0, [sp, #532]
  431330:	cmp	w0, #0x0
  431334:	b	431354 <session_load+0xb78>
  431338:	ldr	w0, [sp, #460]
  43133c:	cmp	w0, #0x0
  431340:	b.le	431354 <session_load+0xb78>
  431344:	ldr	x0, [sp, #408]
  431348:	ldr	x0, [x0, #40]
  43134c:	ldr	x1, [sp, #408]
  431350:	str	x1, [x0, #80]
  431354:	ldr	x0, [sp, #648]
  431358:	cmp	x0, #0x0
  43135c:	b.eq	4313b4 <session_load+0xbd8>  // b.none
  431360:	ldr	x0, [sp, #408]
  431364:	ldr	x0, [x0]
  431368:	ldr	x0, [x0, #8]
  43136c:	ldr	x1, [sp, #648]
  431370:	mov	x2, #0x0                   	// #0
  431374:	bl	407950 <bus_name_has_owner@plt>
  431378:	cmp	w0, #0x0
  43137c:	b.le	4313ac <session_load+0xbd0>
  431380:	ldr	x0, [sp, #648]
  431384:	mov	w3, #0x0                   	// #0
  431388:	mov	w2, #0x0                   	// #0
  43138c:	mov	x1, x0
  431390:	ldr	x0, [sp, #408]
  431394:	bl	4341cc <session_set_controller>
  431398:	ldr	x0, [sp, #664]
  43139c:	mov	x1, x0
  4313a0:	ldr	x0, [sp, #408]
  4313a4:	bl	4305d0 <session_load_devices>
  4313a8:	b	4313b4 <session_load+0xbd8>
  4313ac:	ldr	x0, [sp, #408]
  4313b0:	bl	433d80 <session_restore_vt>
  4313b4:	ldr	w19, [sp, #420]
  4313b8:	add	x0, sp, #0x2a0
  4313bc:	bl	42edb4 <freep>
  4313c0:	add	x0, sp, #0x298
  4313c4:	bl	42edb4 <freep>
  4313c8:	add	x0, sp, #0x290
  4313cc:	bl	42edb4 <freep>
  4313d0:	add	x0, sp, #0x288
  4313d4:	bl	42edb4 <freep>
  4313d8:	add	x0, sp, #0x280
  4313dc:	bl	42edb4 <freep>
  4313e0:	add	x0, sp, #0x278
  4313e4:	bl	42edb4 <freep>
  4313e8:	add	x0, sp, #0x270
  4313ec:	bl	42edb4 <freep>
  4313f0:	add	x0, sp, #0x268
  4313f4:	bl	42edb4 <freep>
  4313f8:	add	x0, sp, #0x260
  4313fc:	bl	42edb4 <freep>
  431400:	add	x0, sp, #0x258
  431404:	bl	42edb4 <freep>
  431408:	add	x0, sp, #0x250
  43140c:	bl	42edb4 <freep>
  431410:	add	x0, sp, #0x248
  431414:	bl	42edb4 <freep>
  431418:	add	x0, sp, #0x240
  43141c:	bl	42edb4 <freep>
  431420:	add	x0, sp, #0x238
  431424:	bl	42edb4 <freep>
  431428:	add	x0, sp, #0x230
  43142c:	bl	42edb4 <freep>
  431430:	add	x0, sp, #0x228
  431434:	bl	42edb4 <freep>
  431438:	mov	w1, w19
  43143c:	adrp	x0, 460000 <wordlist.10364+0x370>
  431440:	ldr	x0, [x0, #4024]
  431444:	ldr	x2, [sp, #696]
  431448:	ldr	x0, [x0]
  43144c:	eor	x0, x2, x0
  431450:	cmp	x0, #0x0
  431454:	b.eq	43145c <session_load+0xc80>  // b.none
  431458:	bl	407b20 <__stack_chk_fail@plt>
  43145c:	mov	w0, w1
  431460:	ldr	x19, [sp, #384]
  431464:	ldp	x29, x30, [sp, #368]
  431468:	add	sp, sp, #0x2c0
  43146c:	ret

0000000000431470 <session_activate>:
  431470:	stp	x29, x30, [sp, #-48]!
  431474:	mov	x29, sp
  431478:	str	x0, [sp, #24]
  43147c:	ldr	x0, [sp, #24]
  431480:	cmp	x0, #0x0
  431484:	cset	w0, eq  // eq = none
  431488:	and	w0, w0, #0xff
  43148c:	and	x0, x0, #0xff
  431490:	cmp	x0, #0x0
  431494:	b.eq	4314c0 <session_activate+0x50>  // b.none
  431498:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43149c:	add	x1, x0, #0x5e3
  4314a0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4314a4:	add	x4, x0, #0x1a0
  4314a8:	mov	w3, #0x252                 	// #594
  4314ac:	mov	x2, x1
  4314b0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4314b4:	add	x1, x0, #0x648
  4314b8:	mov	w0, #0x0                   	// #0
  4314bc:	bl	407650 <log_assert_failed_realm@plt>
  4314c0:	ldr	x0, [sp, #24]
  4314c4:	ldr	x0, [x0, #40]
  4314c8:	cmp	x0, #0x0
  4314cc:	cset	w0, eq  // eq = none
  4314d0:	and	w0, w0, #0xff
  4314d4:	and	x0, x0, #0xff
  4314d8:	cmp	x0, #0x0
  4314dc:	b.eq	431508 <session_activate+0x98>  // b.none
  4314e0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4314e4:	add	x1, x0, #0x5e3
  4314e8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4314ec:	add	x4, x0, #0x1a0
  4314f0:	mov	w3, #0x253                 	// #595
  4314f4:	mov	x2, x1
  4314f8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4314fc:	add	x1, x0, #0xb08
  431500:	mov	w0, #0x0                   	// #0
  431504:	bl	407650 <log_assert_failed_realm@plt>
  431508:	ldr	x0, [sp, #24]
  43150c:	ldr	x0, [x0, #136]
  431510:	cmp	x0, #0x0
  431514:	b.ne	431520 <session_activate+0xb0>  // b.any
  431518:	mov	w0, #0xffffffa1            	// #-95
  43151c:	b	4315b8 <session_activate+0x148>
  431520:	ldr	x0, [sp, #24]
  431524:	ldr	x0, [x0, #136]
  431528:	ldr	x0, [x0, #32]
  43152c:	ldr	x1, [sp, #24]
  431530:	cmp	x1, x0
  431534:	b.ne	431540 <session_activate+0xd0>  // b.any
  431538:	mov	w0, #0x0                   	// #0
  43153c:	b	4315b8 <session_activate+0x148>
  431540:	ldr	x0, [sp, #24]
  431544:	ldr	x0, [x0, #136]
  431548:	bl	428fb0 <seat_has_vts>
  43154c:	and	w0, w0, #0xff
  431550:	cmp	w0, #0x0
  431554:	b.eq	431580 <session_activate+0x110>  // b.none
  431558:	ldr	x0, [sp, #24]
  43155c:	ldr	w0, [x0, #144]
  431560:	cmp	w0, #0x0
  431564:	b.ne	431570 <session_activate+0x100>  // b.any
  431568:	mov	w0, #0xffffffa1            	// #-95
  43156c:	b	4315b8 <session_activate+0x148>
  431570:	ldr	x0, [sp, #24]
  431574:	ldr	w0, [x0, #144]
  431578:	bl	407820 <chvt@plt>
  43157c:	b	4315b8 <session_activate+0x148>
  431580:	ldr	x0, [sp, #24]
  431584:	ldr	x0, [x0, #136]
  431588:	ldr	x1, [sp, #24]
  43158c:	str	x1, [x0, #40]
  431590:	ldr	x0, [sp, #24]
  431594:	bl	42e940 <session_device_try_pause_all>
  431598:	str	w0, [sp, #44]
  43159c:	ldr	w0, [sp, #44]
  4315a0:	cmp	w0, #0x0
  4315a4:	b.ne	4315b4 <session_activate+0x144>  // b.any
  4315a8:	ldr	x0, [sp, #24]
  4315ac:	ldr	x0, [x0, #136]
  4315b0:	bl	428f18 <seat_complete_switch>
  4315b4:	mov	w0, #0x0                   	// #0
  4315b8:	ldp	x29, x30, [sp], #48
  4315bc:	ret

00000000004315c0 <session_start_scope>:
  4315c0:	stp	x29, x30, [sp, #-240]!
  4315c4:	mov	x29, sp
  4315c8:	stp	x19, x20, [sp, #16]
  4315cc:	str	x21, [sp, #32]
  4315d0:	sub	sp, sp, #0x20
  4315d4:	str	x0, [x29, #72]
  4315d8:	str	x1, [x29, #64]
  4315dc:	str	x2, [x29, #56]
  4315e0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4315e4:	ldr	x0, [x0, #4024]
  4315e8:	ldr	x1, [x0]
  4315ec:	str	x1, [x29, #232]
  4315f0:	mov	x1, #0x0                   	// #0
  4315f4:	ldr	x0, [x29, #72]
  4315f8:	cmp	x0, #0x0
  4315fc:	cset	w0, eq  // eq = none
  431600:	and	w0, w0, #0xff
  431604:	and	x0, x0, #0xff
  431608:	cmp	x0, #0x0
  43160c:	b.eq	431638 <session_start_scope+0x78>  // b.none
  431610:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431614:	add	x1, x0, #0x5e3
  431618:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43161c:	add	x4, x0, #0x1b8
  431620:	mov	w3, #0x277                 	// #631
  431624:	mov	x2, x1
  431628:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43162c:	add	x1, x0, #0x648
  431630:	mov	w0, #0x0                   	// #0
  431634:	bl	407650 <log_assert_failed_realm@plt>
  431638:	ldr	x0, [x29, #72]
  43163c:	ldr	x0, [x0, #40]
  431640:	cmp	x0, #0x0
  431644:	cset	w0, eq  // eq = none
  431648:	and	w0, w0, #0xff
  43164c:	and	x0, x0, #0xff
  431650:	cmp	x0, #0x0
  431654:	b.eq	431680 <session_start_scope+0xc0>  // b.none
  431658:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43165c:	add	x1, x0, #0x5e3
  431660:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431664:	add	x4, x0, #0x1b8
  431668:	mov	w3, #0x278                 	// #632
  43166c:	mov	x2, x1
  431670:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431674:	add	x1, x0, #0xb08
  431678:	mov	w0, #0x0                   	// #0
  43167c:	bl	407650 <log_assert_failed_realm@plt>
  431680:	ldr	x0, [x29, #72]
  431684:	ldr	x0, [x0, #120]
  431688:	cmp	x0, #0x0
  43168c:	b.ne	431a70 <session_start_scope+0x4b0>  // b.any
  431690:	str	xzr, [x29, #104]
  431694:	ldr	x0, [x29, #72]
  431698:	ldr	x0, [x0, #128]
  43169c:	bl	42ed94 <mfree>
  4316a0:	mov	x1, x0
  4316a4:	ldr	x0, [x29, #72]
  4316a8:	str	x1, [x0, #128]
  4316ac:	ldr	x0, [x29, #72]
  4316b0:	ldr	x1, [x0, #8]
  4316b4:	mov	x3, #0x0                   	// #0
  4316b8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4316bc:	add	x2, x0, #0xb10
  4316c0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4316c4:	add	x0, x0, #0xb18
  4316c8:	bl	4075d0 <strjoin_real@plt>
  4316cc:	str	x0, [x29, #104]
  4316d0:	ldr	x0, [x29, #104]
  4316d4:	cmp	x0, #0x0
  4316d8:	b.ne	431704 <session_start_scope+0x144>  // b.any
  4316dc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4316e0:	add	x1, x0, #0x5e3
  4316e4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4316e8:	add	x3, x0, #0x1d0
  4316ec:	mov	w2, #0x282                 	// #642
  4316f0:	mov	w0, #0x0                   	// #0
  4316f4:	bl	408330 <log_oom_internal@plt>
  4316f8:	mov	w19, w0
  4316fc:	mov	w20, #0x0                   	// #0
  431700:	b	431a60 <session_start_scope+0x4a0>
  431704:	add	x0, x29, #0xc0
  431708:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  43170c:	add	x1, x1, #0xb28
  431710:	str	x1, [x0]
  431714:	ldr	x0, [x29, #72]
  431718:	ldr	x1, [x0, #8]
  43171c:	add	x0, x29, #0xc0
  431720:	str	x1, [x0, #8]
  431724:	add	x0, x29, #0xc0
  431728:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  43172c:	add	x1, x1, #0xb38
  431730:	str	x1, [x0, #16]
  431734:	ldr	x0, [x29, #72]
  431738:	ldr	x0, [x0, #40]
  43173c:	ldr	x1, [x0, #16]
  431740:	add	x0, x29, #0xc0
  431744:	str	x1, [x0, #24]
  431748:	str	xzr, [x29, #120]
  43174c:	str	xzr, [x29, #128]
  431750:	b	431780 <session_start_scope+0x1c0>
  431754:	add	x0, x29, #0xc0
  431758:	ldr	x1, [x29, #128]
  43175c:	ldr	x0, [x0, x1, lsl #3]
  431760:	bl	4082f0 <strlen@plt>
  431764:	mov	x1, x0
  431768:	ldr	x0, [x29, #120]
  43176c:	add	x0, x0, x1
  431770:	str	x0, [x29, #120]
  431774:	ldr	x0, [x29, #128]
  431778:	add	x0, x0, #0x1
  43177c:	str	x0, [x29, #128]
  431780:	ldr	x0, [x29, #128]
  431784:	cmp	x0, #0x3
  431788:	b.hi	4317a0 <session_start_scope+0x1e0>  // b.pmore
  43178c:	add	x0, x29, #0xc0
  431790:	ldr	x1, [x29, #128]
  431794:	ldr	x0, [x0, x1, lsl #3]
  431798:	cmp	x0, #0x0
  43179c:	b.ne	431754 <session_start_scope+0x194>  // b.any
  4317a0:	ldr	x0, [x29, #120]
  4317a4:	add	x0, x0, #0x1
  4317a8:	str	x0, [x29, #136]
  4317ac:	ldr	x1, [x29, #136]
  4317b0:	mov	x0, #0x1                   	// #1
  4317b4:	bl	42edd8 <size_multiply_overflow>
  4317b8:	and	w0, w0, #0xff
  4317bc:	and	x0, x0, #0xff
  4317c0:	cmp	x0, #0x0
  4317c4:	b.eq	4317f0 <session_start_scope+0x230>  // b.none
  4317c8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4317cc:	add	x1, x0, #0x5e3
  4317d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4317d4:	add	x4, x0, #0x1b8
  4317d8:	mov	w3, #0x284                 	// #644
  4317dc:	mov	x2, x1
  4317e0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4317e4:	add	x1, x0, #0xb48
  4317e8:	mov	w0, #0x0                   	// #0
  4317ec:	bl	407650 <log_assert_failed_realm@plt>
  4317f0:	ldr	x0, [x29, #136]
  4317f4:	cmp	x0, #0x400, lsl #12
  4317f8:	cset	w0, hi  // hi = pmore
  4317fc:	and	w0, w0, #0xff
  431800:	and	x0, x0, #0xff
  431804:	cmp	x0, #0x0
  431808:	b.eq	431834 <session_start_scope+0x274>  // b.none
  43180c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431810:	add	x1, x0, #0x5e3
  431814:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431818:	add	x4, x0, #0x1b8
  43181c:	mov	w3, #0x284                 	// #644
  431820:	mov	x2, x1
  431824:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431828:	add	x1, x0, #0xb78
  43182c:	mov	w0, #0x0                   	// #0
  431830:	bl	407650 <log_assert_failed_realm@plt>
  431834:	ldr	x0, [x29, #136]
  431838:	add	x0, x0, #0xf
  43183c:	lsr	x0, x0, #4
  431840:	lsl	x0, x0, #4
  431844:	sub	sp, sp, x0
  431848:	add	x0, sp, #0x20
  43184c:	add	x0, x0, #0xf
  431850:	lsr	x0, x0, #4
  431854:	lsl	x0, x0, #4
  431858:	str	x0, [x29, #144]
  43185c:	ldr	x0, [x29, #144]
  431860:	str	x0, [x29, #112]
  431864:	str	xzr, [x29, #128]
  431868:	b	431894 <session_start_scope+0x2d4>
  43186c:	add	x0, x29, #0xc0
  431870:	ldr	x1, [x29, #128]
  431874:	ldr	x0, [x0, x1, lsl #3]
  431878:	mov	x1, x0
  43187c:	ldr	x0, [x29, #112]
  431880:	bl	407160 <stpcpy@plt>
  431884:	str	x0, [x29, #112]
  431888:	ldr	x0, [x29, #128]
  43188c:	add	x0, x0, #0x1
  431890:	str	x0, [x29, #128]
  431894:	ldr	x0, [x29, #128]
  431898:	cmp	x0, #0x3
  43189c:	b.hi	4318b4 <session_start_scope+0x2f4>  // b.pmore
  4318a0:	add	x0, x29, #0xc0
  4318a4:	ldr	x1, [x29, #128]
  4318a8:	ldr	x0, [x0, x1, lsl #3]
  4318ac:	cmp	x0, #0x0
  4318b0:	b.ne	43186c <session_start_scope+0x2ac>  // b.any
  4318b4:	ldr	x0, [x29, #112]
  4318b8:	strb	wzr, [x0]
  4318bc:	ldr	x0, [x29, #144]
  4318c0:	str	x0, [x29, #152]
  4318c4:	ldr	x0, [x29, #72]
  4318c8:	ldr	x8, [x0]
  4318cc:	ldr	x1, [x29, #104]
  4318d0:	ldr	x0, [x29, #72]
  4318d4:	ldr	w2, [x0, #152]
  4318d8:	ldr	x0, [x29, #72]
  4318dc:	ldr	x0, [x0, #40]
  4318e0:	ldr	x3, [x0, #48]
  4318e4:	ldr	x0, [x29, #72]
  4318e8:	ldr	x0, [x0, #40]
  4318ec:	ldr	x0, [x0, #64]
  4318f0:	str	x0, [x29, #168]
  4318f4:	ldr	x0, [x29, #72]
  4318f8:	ldr	x0, [x0, #40]
  4318fc:	ldr	x0, [x0, #56]
  431900:	str	x0, [x29, #176]
  431904:	str	xzr, [x29, #184]
  431908:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43190c:	add	x0, x0, #0xb98
  431910:	str	x0, [x29, #192]
  431914:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431918:	add	x0, x0, #0xbb0
  43191c:	str	x0, [x29, #200]
  431920:	ldr	x0, [x29, #72]
  431924:	ldr	x0, [x0, #40]
  431928:	ldr	x0, [x0, #64]
  43192c:	str	x0, [x29, #208]
  431930:	ldr	x0, [x29, #72]
  431934:	ldr	x0, [x0, #40]
  431938:	ldr	x0, [x0, #56]
  43193c:	str	x0, [x29, #216]
  431940:	str	xzr, [x29, #224]
  431944:	ldr	x0, [x29, #72]
  431948:	ldr	x0, [x0, #40]
  43194c:	ldr	x6, [x0, #24]
  431950:	ldr	x0, [x29, #72]
  431954:	add	x0, x0, #0x80
  431958:	add	x5, x29, #0xc0
  43195c:	add	x4, x29, #0xa8
  431960:	str	x0, [sp, #16]
  431964:	ldr	x0, [x29, #56]
  431968:	str	x0, [sp, #8]
  43196c:	ldr	x0, [x29, #64]
  431970:	str	x0, [sp]
  431974:	mov	x7, x6
  431978:	mov	x6, x5
  43197c:	mov	x5, x4
  431980:	ldr	x4, [x29, #152]
  431984:	mov	x0, x8
  431988:	bl	421598 <manager_start_scope>
  43198c:	str	w0, [x29, #88]
  431990:	ldr	w0, [x29, #88]
  431994:	cmp	w0, #0x0
  431998:	b.ge	431a44 <session_start_scope+0x484>  // b.tcont
  43199c:	mov	w0, #0x3                   	// #3
  4319a0:	str	w0, [x29, #92]
  4319a4:	ldr	w0, [x29, #88]
  4319a8:	str	w0, [x29, #96]
  4319ac:	str	wzr, [x29, #100]
  4319b0:	ldr	w0, [x29, #100]
  4319b4:	bl	4083e0 <log_get_max_level_realm@plt>
  4319b8:	mov	w1, w0
  4319bc:	ldr	w0, [x29, #92]
  4319c0:	and	w0, w0, #0x7
  4319c4:	cmp	w1, w0
  4319c8:	b.lt	431a28 <session_start_scope+0x468>  // b.tstop
  4319cc:	ldr	w0, [x29, #100]
  4319d0:	lsl	w1, w0, #10
  4319d4:	ldr	w0, [x29, #92]
  4319d8:	orr	w19, w1, w0
  4319dc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4319e0:	add	x20, x0, #0x5e3
  4319e4:	ldr	x21, [x29, #104]
  4319e8:	ldr	w1, [x29, #88]
  4319ec:	ldr	x0, [x29, #56]
  4319f0:	bl	407000 <bus_error_message@plt>
  4319f4:	mov	x7, x0
  4319f8:	mov	x6, x21
  4319fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431a00:	add	x5, x0, #0xbd0
  431a04:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431a08:	add	x4, x0, #0x1d0
  431a0c:	mov	w3, #0x299                 	// #665
  431a10:	mov	x2, x20
  431a14:	ldr	w1, [x29, #96]
  431a18:	mov	w0, w19
  431a1c:	bl	407d60 <log_internal_realm@plt>
  431a20:	mov	w19, w0
  431a24:	b	431a3c <session_start_scope+0x47c>
  431a28:	ldr	w0, [x29, #96]
  431a2c:	cmp	w0, #0x0
  431a30:	cneg	w0, w0, lt  // lt = tstop
  431a34:	and	w0, w0, #0xff
  431a38:	neg	w19, w0
  431a3c:	mov	w20, #0x0                   	// #0
  431a40:	b	431a60 <session_start_scope+0x4a0>
  431a44:	ldr	x0, [x29, #104]
  431a48:	str	x0, [x29, #160]
  431a4c:	str	xzr, [x29, #104]
  431a50:	ldr	x1, [x29, #160]
  431a54:	ldr	x0, [x29, #72]
  431a58:	str	x1, [x0, #120]
  431a5c:	mov	w20, #0x1                   	// #1
  431a60:	add	x0, x29, #0x68
  431a64:	bl	42edb4 <freep>
  431a68:	cmp	w20, #0x1
  431a6c:	b.ne	431a98 <session_start_scope+0x4d8>  // b.any
  431a70:	ldr	x0, [x29, #72]
  431a74:	ldr	x0, [x0]
  431a78:	ldr	x3, [x0, #216]
  431a7c:	ldr	x0, [x29, #72]
  431a80:	ldr	x0, [x0, #120]
  431a84:	ldr	x2, [x29, #72]
  431a88:	mov	x1, x0
  431a8c:	mov	x0, x3
  431a90:	bl	407dd0 <hashmap_put@plt>
  431a94:	mov	w19, #0x0                   	// #0
  431a98:	mov	w1, w19
  431a9c:	adrp	x0, 460000 <wordlist.10364+0x370>
  431aa0:	ldr	x0, [x0, #4024]
  431aa4:	ldr	x2, [x29, #232]
  431aa8:	ldr	x0, [x0]
  431aac:	eor	x0, x2, x0
  431ab0:	cmp	x0, #0x0
  431ab4:	b.eq	431abc <session_start_scope+0x4fc>  // b.none
  431ab8:	bl	407b20 <__stack_chk_fail@plt>
  431abc:	mov	w0, w1
  431ac0:	mov	sp, x29
  431ac4:	ldp	x19, x20, [sp, #16]
  431ac8:	ldr	x21, [sp, #32]
  431acc:	ldp	x29, x30, [sp], #240
  431ad0:	ret

0000000000431ad4 <session_start>:
  431ad4:	sub	sp, sp, #0x80
  431ad8:	stp	x29, x30, [sp, #64]
  431adc:	add	x29, sp, #0x40
  431ae0:	str	x0, [sp, #104]
  431ae4:	str	x1, [sp, #96]
  431ae8:	str	x2, [sp, #88]
  431aec:	ldr	x0, [sp, #104]
  431af0:	cmp	x0, #0x0
  431af4:	cset	w0, eq  // eq = none
  431af8:	and	w0, w0, #0xff
  431afc:	and	x0, x0, #0xff
  431b00:	cmp	x0, #0x0
  431b04:	b.eq	431b30 <session_start+0x5c>  // b.none
  431b08:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431b0c:	add	x1, x0, #0x5e3
  431b10:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431b14:	add	x4, x0, #0x1e8
  431b18:	mov	w3, #0x2a7                 	// #679
  431b1c:	mov	x2, x1
  431b20:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431b24:	add	x1, x0, #0x648
  431b28:	mov	w0, #0x0                   	// #0
  431b2c:	bl	407650 <log_assert_failed_realm@plt>
  431b30:	ldr	x0, [sp, #104]
  431b34:	ldr	x0, [x0, #40]
  431b38:	cmp	x0, #0x0
  431b3c:	b.ne	431b48 <session_start+0x74>  // b.any
  431b40:	mov	w0, #0xffffff8c            	// #-116
  431b44:	b	431d90 <session_start+0x2bc>
  431b48:	ldr	x0, [sp, #104]
  431b4c:	ldrb	w0, [x0, #209]
  431b50:	and	w0, w0, #0x4
  431b54:	and	w0, w0, #0xff
  431b58:	cmp	w0, #0x0
  431b5c:	b.eq	431b68 <session_start+0x94>  // b.none
  431b60:	mov	w0, #0xffffffea            	// #-22
  431b64:	b	431d90 <session_start+0x2bc>
  431b68:	ldr	x0, [sp, #104]
  431b6c:	ldrb	w0, [x0, #209]
  431b70:	and	w0, w0, #0x2
  431b74:	and	w0, w0, #0xff
  431b78:	cmp	w0, #0x0
  431b7c:	b.eq	431b88 <session_start+0xb4>  // b.none
  431b80:	mov	w0, #0x0                   	// #0
  431b84:	b	431d90 <session_start+0x2bc>
  431b88:	ldr	x0, [sp, #104]
  431b8c:	ldr	x0, [x0, #40]
  431b90:	bl	437790 <user_start>
  431b94:	str	w0, [sp, #124]
  431b98:	ldr	w0, [sp, #124]
  431b9c:	cmp	w0, #0x0
  431ba0:	b.ge	431bac <session_start+0xd8>  // b.tcont
  431ba4:	ldr	w0, [sp, #124]
  431ba8:	b	431d90 <session_start+0x2bc>
  431bac:	ldr	x2, [sp, #88]
  431bb0:	ldr	x1, [sp, #96]
  431bb4:	ldr	x0, [sp, #104]
  431bb8:	bl	4315c0 <session_start_scope>
  431bbc:	str	w0, [sp, #124]
  431bc0:	ldr	w0, [sp, #124]
  431bc4:	cmp	w0, #0x0
  431bc8:	b.ge	431bd4 <session_start+0x100>  // b.tcont
  431bcc:	ldr	w0, [sp, #124]
  431bd0:	b	431d90 <session_start+0x2bc>
  431bd4:	ldr	x0, [sp, #104]
  431bd8:	ldr	w0, [x0, #24]
  431bdc:	cmp	w0, #0x3
  431be0:	b.ne	431bec <session_start+0x118>  // b.any
  431be4:	mov	w0, #0x7                   	// #7
  431be8:	b	431bf0 <session_start+0x11c>
  431bec:	mov	w0, #0x6                   	// #6
  431bf0:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  431bf4:	add	x8, x1, #0x5e3
  431bf8:	ldr	x1, [sp, #104]
  431bfc:	ldr	x5, [x1, #8]
  431c00:	ldr	x1, [sp, #104]
  431c04:	ldr	x1, [x1, #40]
  431c08:	ldr	x1, [x1, #16]
  431c0c:	ldr	x2, [sp, #104]
  431c10:	ldr	w2, [x2, #152]
  431c14:	ldr	x3, [sp, #104]
  431c18:	ldr	x3, [x3, #8]
  431c1c:	ldr	x4, [sp, #104]
  431c20:	ldr	x4, [x4, #40]
  431c24:	ldr	x4, [x4, #16]
  431c28:	str	xzr, [sp, #56]
  431c2c:	str	x4, [sp, #48]
  431c30:	str	x3, [sp, #40]
  431c34:	adrp	x3, 444000 <__PRETTY_FUNCTION__.12458>
  431c38:	add	x3, x3, #0xc38
  431c3c:	str	x3, [sp, #32]
  431c40:	str	w2, [sp, #24]
  431c44:	adrp	x2, 444000 <__PRETTY_FUNCTION__.12458>
  431c48:	add	x2, x2, #0xc60
  431c4c:	str	x2, [sp, #16]
  431c50:	str	x1, [sp, #8]
  431c54:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  431c58:	add	x1, x1, #0xc70
  431c5c:	str	x1, [sp]
  431c60:	mov	x7, x5
  431c64:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  431c68:	add	x6, x1, #0xbf8
  431c6c:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  431c70:	add	x5, x1, #0xc08
  431c74:	adrp	x1, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431c78:	add	x4, x1, #0x1f8
  431c7c:	mov	w3, #0x2ba                 	// #698
  431c80:	mov	x2, x8
  431c84:	mov	w1, #0x0                   	// #0
  431c88:	bl	407cd0 <log_struct_internal@plt>
  431c8c:	ldr	x0, [sp, #104]
  431c90:	add	x0, x0, #0x30
  431c94:	bl	42f088 <dual_timestamp_is_set>
  431c98:	and	w0, w0, #0xff
  431c9c:	eor	w0, w0, #0x1
  431ca0:	and	w0, w0, #0xff
  431ca4:	cmp	w0, #0x0
  431ca8:	b.eq	431cb8 <session_start+0x1e4>  // b.none
  431cac:	ldr	x0, [sp, #104]
  431cb0:	add	x0, x0, #0x30
  431cb4:	bl	4070a0 <dual_timestamp_get@plt>
  431cb8:	ldr	x0, [sp, #104]
  431cbc:	ldr	x0, [x0, #136]
  431cc0:	cmp	x0, #0x0
  431cc4:	b.eq	431cd4 <session_start+0x200>  // b.none
  431cc8:	ldr	x0, [sp, #104]
  431ccc:	ldr	x0, [x0, #136]
  431cd0:	bl	4284c4 <seat_read_active_vt>
  431cd4:	ldr	x0, [sp, #104]
  431cd8:	ldrb	w1, [x0, #209]
  431cdc:	orr	w1, w1, #0x2
  431ce0:	strb	w1, [x0, #209]
  431ce4:	ldr	x0, [sp, #104]
  431ce8:	ldr	x0, [x0, #40]
  431cec:	bl	438d70 <user_elect_display>
  431cf0:	ldr	x0, [sp, #104]
  431cf4:	bl	42fde0 <session_save>
  431cf8:	ldr	x0, [sp, #104]
  431cfc:	ldr	x0, [x0, #40]
  431d00:	bl	437210 <user_save>
  431d04:	ldr	x0, [sp, #104]
  431d08:	ldr	x0, [x0, #136]
  431d0c:	cmp	x0, #0x0
  431d10:	b.eq	431d20 <session_start+0x24c>  // b.none
  431d14:	ldr	x0, [sp, #104]
  431d18:	ldr	x0, [x0, #136]
  431d1c:	bl	4273a0 <seat_save>
  431d20:	mov	w1, #0x1                   	// #1
  431d24:	ldr	x0, [sp, #104]
  431d28:	bl	42c774 <session_send_signal>
  431d2c:	ldr	x0, [sp, #104]
  431d30:	ldr	x3, [x0, #40]
  431d34:	mov	x2, #0x0                   	// #0
  431d38:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431d3c:	add	x1, x0, #0xc80
  431d40:	mov	x0, x3
  431d44:	bl	435c10 <user_send_changed>
  431d48:	ldr	x0, [sp, #104]
  431d4c:	ldr	x0, [x0, #136]
  431d50:	cmp	x0, #0x0
  431d54:	b.eq	431d8c <session_start+0x2b8>  // b.none
  431d58:	ldr	x0, [sp, #104]
  431d5c:	ldr	x0, [x0, #136]
  431d60:	ldr	x0, [x0, #32]
  431d64:	ldr	x1, [sp, #104]
  431d68:	cmp	x1, x0
  431d6c:	b.ne	431d8c <session_start+0x2b8>  // b.any
  431d70:	ldr	x0, [sp, #104]
  431d74:	ldr	x3, [x0, #136]
  431d78:	mov	x2, #0x0                   	// #0
  431d7c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431d80:	add	x1, x0, #0xc88
  431d84:	mov	x0, x3
  431d88:	bl	426960 <seat_send_changed>
  431d8c:	mov	w0, #0x0                   	// #0
  431d90:	ldp	x29, x30, [sp, #64]
  431d94:	add	sp, sp, #0x80
  431d98:	ret

0000000000431d9c <session_stop_scope>:
  431d9c:	sub	sp, sp, #0xb0
  431da0:	stp	x29, x30, [sp, #48]
  431da4:	add	x29, sp, #0x30
  431da8:	stp	x19, x20, [sp, #64]
  431dac:	str	x0, [sp, #88]
  431db0:	strb	w1, [sp, #87]
  431db4:	adrp	x0, 460000 <wordlist.10364+0x370>
  431db8:	ldr	x0, [x0, #4024]
  431dbc:	ldr	x1, [x0]
  431dc0:	str	x1, [sp, #168]
  431dc4:	mov	x1, #0x0                   	// #0
  431dc8:	str	xzr, [sp, #144]
  431dcc:	str	xzr, [sp, #152]
  431dd0:	str	wzr, [sp, #160]
  431dd4:	ldr	x0, [sp, #88]
  431dd8:	cmp	x0, #0x0
  431ddc:	cset	w0, eq  // eq = none
  431de0:	and	w0, w0, #0xff
  431de4:	and	x0, x0, #0xff
  431de8:	cmp	x0, #0x0
  431dec:	b.eq	431e18 <session_stop_scope+0x7c>  // b.none
  431df0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431df4:	add	x1, x0, #0x5e3
  431df8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431dfc:	add	x4, x0, #0x208
  431e00:	mov	w3, #0x2e0                 	// #736
  431e04:	mov	x2, x1
  431e08:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431e0c:	add	x1, x0, #0x648
  431e10:	mov	w0, #0x0                   	// #0
  431e14:	bl	407650 <log_assert_failed_realm@plt>
  431e18:	ldr	x0, [sp, #88]
  431e1c:	ldr	x0, [x0, #120]
  431e20:	cmp	x0, #0x0
  431e24:	b.ne	431e30 <session_stop_scope+0x94>  // b.any
  431e28:	mov	w19, #0x0                   	// #0
  431e2c:	b	432154 <session_stop_scope+0x3b8>
  431e30:	ldr	x0, [sp, #88]
  431e34:	ldr	x3, [x0]
  431e38:	ldr	x0, [sp, #88]
  431e3c:	ldr	x0, [x0, #120]
  431e40:	add	x1, sp, #0x90
  431e44:	mov	x2, x1
  431e48:	mov	x1, x0
  431e4c:	mov	x0, x3
  431e50:	bl	422008 <manager_abandon_scope>
  431e54:	str	w0, [sp, #104]
  431e58:	ldr	w0, [sp, #104]
  431e5c:	cmp	w0, #0x0
  431e60:	b.ge	431ef4 <session_stop_scope+0x158>  // b.tcont
  431e64:	mov	w0, #0x4                   	// #4
  431e68:	str	w0, [sp, #108]
  431e6c:	ldr	w0, [sp, #104]
  431e70:	str	w0, [sp, #112]
  431e74:	str	wzr, [sp, #116]
  431e78:	ldr	w0, [sp, #116]
  431e7c:	bl	4083e0 <log_get_max_level_realm@plt>
  431e80:	mov	w1, w0
  431e84:	ldr	w0, [sp, #108]
  431e88:	and	w0, w0, #0x7
  431e8c:	cmp	w1, w0
  431e90:	b.lt	431ee4 <session_stop_scope+0x148>  // b.tstop
  431e94:	ldr	w0, [sp, #116]
  431e98:	lsl	w1, w0, #10
  431e9c:	ldr	w0, [sp, #108]
  431ea0:	orr	w19, w1, w0
  431ea4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431ea8:	add	x20, x0, #0x5e3
  431eac:	add	x0, sp, #0x90
  431eb0:	ldr	w1, [sp, #104]
  431eb4:	bl	407000 <bus_error_message@plt>
  431eb8:	mov	x6, x0
  431ebc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431ec0:	add	x5, x0, #0xc98
  431ec4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431ec8:	add	x4, x0, #0x220
  431ecc:	mov	w3, #0x2ea                 	// #746
  431ed0:	mov	x2, x20
  431ed4:	ldr	w1, [sp, #112]
  431ed8:	mov	w0, w19
  431edc:	bl	407d60 <log_internal_realm@plt>
  431ee0:	b	431eec <session_stop_scope+0x150>
  431ee4:	ldr	w0, [sp, #112]
  431ee8:	cmp	w0, #0x0
  431eec:	add	x0, sp, #0x90
  431ef0:	bl	407c80 <sd_bus_error_free@plt>
  431ef4:	ldr	x0, [sp, #88]
  431ef8:	ldr	x0, [x0, #128]
  431efc:	bl	42ed94 <mfree>
  431f00:	mov	x1, x0
  431f04:	ldr	x0, [sp, #88]
  431f08:	str	x1, [x0, #128]
  431f0c:	ldrb	w0, [sp, #87]
  431f10:	cmp	w0, #0x0
  431f14:	b.ne	431f44 <session_stop_scope+0x1a8>  // b.any
  431f18:	ldr	x0, [sp, #88]
  431f1c:	ldr	x2, [x0]
  431f20:	ldr	x0, [sp, #88]
  431f24:	ldr	x0, [x0, #40]
  431f28:	ldr	x0, [x0, #16]
  431f2c:	mov	x1, x0
  431f30:	mov	x0, x2
  431f34:	bl	412408 <manager_shall_kill>
  431f38:	and	w0, w0, #0xff
  431f3c:	cmp	w0, #0x0
  431f40:	b.eq	4320b4 <session_stop_scope+0x318>  // b.none
  431f44:	ldr	x0, [sp, #88]
  431f48:	ldr	x4, [x0]
  431f4c:	ldr	x0, [sp, #88]
  431f50:	ldr	x1, [x0, #120]
  431f54:	ldr	x0, [sp, #88]
  431f58:	add	x2, x0, #0x80
  431f5c:	add	x0, sp, #0x90
  431f60:	mov	x3, x2
  431f64:	mov	x2, x0
  431f68:	mov	x0, x4
  431f6c:	bl	421dfc <manager_stop_unit>
  431f70:	str	w0, [sp, #104]
  431f74:	ldr	w0, [sp, #104]
  431f78:	cmp	w0, #0x0
  431f7c:	b.ge	432150 <session_stop_scope+0x3b4>  // b.tcont
  431f80:	ldrb	w0, [sp, #87]
  431f84:	cmp	w0, #0x0
  431f88:	b.eq	432028 <session_stop_scope+0x28c>  // b.none
  431f8c:	mov	w0, #0x3                   	// #3
  431f90:	str	w0, [sp, #132]
  431f94:	ldr	w0, [sp, #104]
  431f98:	str	w0, [sp, #136]
  431f9c:	str	wzr, [sp, #140]
  431fa0:	ldr	w0, [sp, #140]
  431fa4:	bl	4083e0 <log_get_max_level_realm@plt>
  431fa8:	mov	w1, w0
  431fac:	ldr	w0, [sp, #132]
  431fb0:	and	w0, w0, #0x7
  431fb4:	cmp	w1, w0
  431fb8:	b.lt	432010 <session_stop_scope+0x274>  // b.tstop
  431fbc:	ldr	w0, [sp, #140]
  431fc0:	lsl	w1, w0, #10
  431fc4:	ldr	w0, [sp, #132]
  431fc8:	orr	w19, w1, w0
  431fcc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431fd0:	add	x20, x0, #0x5e3
  431fd4:	add	x0, sp, #0x90
  431fd8:	ldr	w1, [sp, #104]
  431fdc:	bl	407000 <bus_error_message@plt>
  431fe0:	mov	x6, x0
  431fe4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  431fe8:	add	x5, x0, #0xcc8
  431fec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  431ff0:	add	x4, x0, #0x220
  431ff4:	mov	w3, #0x2f6                 	// #758
  431ff8:	mov	x2, x20
  431ffc:	ldr	w1, [sp, #136]
  432000:	mov	w0, w19
  432004:	bl	407d60 <log_internal_realm@plt>
  432008:	mov	w19, w0
  43200c:	b	432154 <session_stop_scope+0x3b8>
  432010:	ldr	w0, [sp, #136]
  432014:	cmp	w0, #0x0
  432018:	cneg	w0, w0, lt  // lt = tstop
  43201c:	and	w0, w0, #0xff
  432020:	neg	w19, w0
  432024:	b	432154 <session_stop_scope+0x3b8>
  432028:	mov	w0, #0x4                   	// #4
  43202c:	str	w0, [sp, #120]
  432030:	ldr	w0, [sp, #104]
  432034:	str	w0, [sp, #124]
  432038:	str	wzr, [sp, #128]
  43203c:	ldr	w0, [sp, #128]
  432040:	bl	4083e0 <log_get_max_level_realm@plt>
  432044:	mov	w1, w0
  432048:	ldr	w0, [sp, #120]
  43204c:	and	w0, w0, #0x7
  432050:	cmp	w1, w0
  432054:	b.lt	4320a8 <session_stop_scope+0x30c>  // b.tstop
  432058:	ldr	w0, [sp, #128]
  43205c:	lsl	w1, w0, #10
  432060:	ldr	w0, [sp, #120]
  432064:	orr	w19, w1, w0
  432068:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43206c:	add	x20, x0, #0x5e3
  432070:	add	x0, sp, #0x90
  432074:	ldr	w1, [sp, #104]
  432078:	bl	407000 <bus_error_message@plt>
  43207c:	mov	x6, x0
  432080:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432084:	add	x5, x0, #0xcf0
  432088:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43208c:	add	x4, x0, #0x220
  432090:	mov	w3, #0x2f8                 	// #760
  432094:	mov	x2, x20
  432098:	ldr	w1, [sp, #124]
  43209c:	mov	w0, w19
  4320a0:	bl	407d60 <log_internal_realm@plt>
  4320a4:	b	432150 <session_stop_scope+0x3b4>
  4320a8:	ldr	w0, [sp, #124]
  4320ac:	cmp	w0, #0x0
  4320b0:	b	432150 <session_stop_scope+0x3b4>
  4320b4:	ldr	x0, [sp, #88]
  4320b8:	ldr	w0, [x0, #24]
  4320bc:	cmp	w0, #0x3
  4320c0:	b.ne	4320cc <session_stop_scope+0x330>  // b.any
  4320c4:	mov	w0, #0x7                   	// #7
  4320c8:	b	4320d0 <session_stop_scope+0x334>
  4320cc:	mov	w0, #0x6                   	// #6
  4320d0:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  4320d4:	add	x8, x1, #0x5e3
  4320d8:	ldr	x1, [sp, #88]
  4320dc:	ldr	x4, [x1, #8]
  4320e0:	ldr	x1, [sp, #88]
  4320e4:	ldr	x1, [x1, #40]
  4320e8:	ldr	x1, [x1, #16]
  4320ec:	ldr	x2, [sp, #88]
  4320f0:	ldr	w2, [x2, #152]
  4320f4:	ldr	x3, [sp, #88]
  4320f8:	ldr	x3, [x3, #8]
  4320fc:	str	xzr, [sp, #40]
  432100:	str	x3, [sp, #32]
  432104:	adrp	x3, 444000 <__PRETTY_FUNCTION__.12458>
  432108:	add	x3, x3, #0xd20
  43210c:	str	x3, [sp, #24]
  432110:	str	w2, [sp, #16]
  432114:	adrp	x2, 444000 <__PRETTY_FUNCTION__.12458>
  432118:	add	x2, x2, #0xc60
  43211c:	str	x2, [sp, #8]
  432120:	str	x1, [sp]
  432124:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  432128:	add	x7, x1, #0xc70
  43212c:	mov	x6, x4
  432130:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  432134:	add	x5, x1, #0xbf8
  432138:	adrp	x1, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43213c:	add	x4, x1, #0x220
  432140:	mov	w3, #0x2ff                 	// #767
  432144:	mov	x2, x8
  432148:	mov	w1, #0x0                   	// #0
  43214c:	bl	407cd0 <log_struct_internal@plt>
  432150:	mov	w19, #0x0                   	// #0
  432154:	add	x0, sp, #0x90
  432158:	bl	407c80 <sd_bus_error_free@plt>
  43215c:	mov	w1, w19
  432160:	adrp	x0, 460000 <wordlist.10364+0x370>
  432164:	ldr	x0, [x0, #4024]
  432168:	ldr	x2, [sp, #168]
  43216c:	ldr	x0, [x0]
  432170:	eor	x0, x2, x0
  432174:	cmp	x0, #0x0
  432178:	b.eq	432180 <session_stop_scope+0x3e4>  // b.none
  43217c:	bl	407b20 <__stack_chk_fail@plt>
  432180:	mov	w0, w1
  432184:	ldp	x19, x20, [sp, #64]
  432188:	ldp	x29, x30, [sp, #48]
  43218c:	add	sp, sp, #0xb0
  432190:	ret

0000000000432194 <session_stop>:
  432194:	stp	x29, x30, [sp, #-48]!
  432198:	mov	x29, sp
  43219c:	str	x0, [sp, #24]
  4321a0:	strb	w1, [sp, #23]
  4321a4:	ldr	x0, [sp, #24]
  4321a8:	cmp	x0, #0x0
  4321ac:	cset	w0, eq  // eq = none
  4321b0:	and	w0, w0, #0xff
  4321b4:	and	x0, x0, #0xff
  4321b8:	cmp	x0, #0x0
  4321bc:	b.eq	4321e8 <session_stop+0x54>  // b.none
  4321c0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4321c4:	add	x1, x0, #0x5e3
  4321c8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4321cc:	add	x4, x0, #0x238
  4321d0:	mov	w3, #0x30c                 	// #780
  4321d4:	mov	x2, x1
  4321d8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4321dc:	add	x1, x0, #0x648
  4321e0:	mov	w0, #0x0                   	// #0
  4321e4:	bl	407650 <log_assert_failed_realm@plt>
  4321e8:	ldr	x0, [sp, #24]
  4321ec:	ldr	x0, [x0, #40]
  4321f0:	cmp	x0, #0x0
  4321f4:	b.ne	432200 <session_stop+0x6c>  // b.any
  4321f8:	mov	w0, #0xffffff8c            	// #-116
  4321fc:	b	4322cc <session_stop+0x138>
  432200:	ldr	x0, [sp, #24]
  432204:	ldrb	w0, [x0, #209]
  432208:	ubfx	x0, x0, #1, #1
  43220c:	and	w0, w0, #0xff
  432210:	eor	w0, w0, #0x1
  432214:	and	w0, w0, #0xff
  432218:	cmp	w0, #0x0
  43221c:	b.eq	432228 <session_stop+0x94>  // b.none
  432220:	mov	w0, #0x0                   	// #0
  432224:	b	4322cc <session_stop+0x138>
  432228:	ldr	x0, [sp, #24]
  43222c:	ldrb	w0, [x0, #209]
  432230:	and	w0, w0, #0x4
  432234:	and	w0, w0, #0xff
  432238:	cmp	w0, #0x0
  43223c:	b.eq	432248 <session_stop+0xb4>  // b.none
  432240:	mov	w0, #0x0                   	// #0
  432244:	b	4322cc <session_stop+0x138>
  432248:	ldr	x0, [sp, #24]
  43224c:	ldr	x0, [x0, #224]
  432250:	bl	407550 <sd_event_source_unref@plt>
  432254:	mov	x1, x0
  432258:	ldr	x0, [sp, #24]
  43225c:	str	x1, [x0, #224]
  432260:	ldr	x0, [sp, #24]
  432264:	ldr	x0, [x0, #136]
  432268:	cmp	x0, #0x0
  43226c:	b.eq	432280 <session_stop+0xec>  // b.none
  432270:	ldr	x0, [sp, #24]
  432274:	ldr	x0, [x0, #136]
  432278:	ldr	x1, [sp, #24]
  43227c:	bl	428acc <seat_evict_position>
  432280:	ldr	x0, [sp, #24]
  432284:	bl	43319c <session_remove_fifo>
  432288:	ldrb	w1, [sp, #23]
  43228c:	ldr	x0, [sp, #24]
  432290:	bl	431d9c <session_stop_scope>
  432294:	str	w0, [sp, #44]
  432298:	ldr	x0, [sp, #24]
  43229c:	ldrb	w1, [x0, #209]
  4322a0:	orr	w1, w1, #0x4
  4322a4:	strb	w1, [x0, #209]
  4322a8:	ldr	x0, [sp, #24]
  4322ac:	ldr	x0, [x0, #40]
  4322b0:	bl	438d70 <user_elect_display>
  4322b4:	ldr	x0, [sp, #24]
  4322b8:	bl	42fde0 <session_save>
  4322bc:	ldr	x0, [sp, #24]
  4322c0:	ldr	x0, [x0, #40]
  4322c4:	bl	437210 <user_save>
  4322c8:	ldr	w0, [sp, #44]
  4322cc:	ldp	x29, x30, [sp], #48
  4322d0:	ret

00000000004322d4 <session_finalize>:
  4322d4:	sub	sp, sp, #0x70
  4322d8:	stp	x29, x30, [sp, #64]
  4322dc:	add	x29, sp, #0x40
  4322e0:	str	x0, [sp, #88]
  4322e4:	ldr	x0, [sp, #88]
  4322e8:	cmp	x0, #0x0
  4322ec:	cset	w0, eq  // eq = none
  4322f0:	and	w0, w0, #0xff
  4322f4:	and	x0, x0, #0xff
  4322f8:	cmp	x0, #0x0
  4322fc:	b.eq	432328 <session_finalize+0x54>  // b.none
  432300:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432304:	add	x1, x0, #0x5e3
  432308:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43230c:	add	x4, x0, #0x248
  432310:	mov	w3, #0x332                 	// #818
  432314:	mov	x2, x1
  432318:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43231c:	add	x1, x0, #0x648
  432320:	mov	w0, #0x0                   	// #0
  432324:	bl	407650 <log_assert_failed_realm@plt>
  432328:	ldr	x0, [sp, #88]
  43232c:	ldr	x0, [x0, #40]
  432330:	cmp	x0, #0x0
  432334:	b.ne	432340 <session_finalize+0x6c>  // b.any
  432338:	mov	w0, #0xffffff8c            	// #-116
  43233c:	b	432524 <session_finalize+0x250>
  432340:	ldr	x0, [sp, #88]
  432344:	ldrb	w0, [x0, #209]
  432348:	and	w0, w0, #0x2
  43234c:	and	w0, w0, #0xff
  432350:	cmp	w0, #0x0
  432354:	b.eq	432400 <session_finalize+0x12c>  // b.none
  432358:	ldr	x0, [sp, #88]
  43235c:	ldr	w0, [x0, #24]
  432360:	cmp	w0, #0x3
  432364:	b.ne	432370 <session_finalize+0x9c>  // b.any
  432368:	mov	w0, #0x7                   	// #7
  43236c:	b	432374 <session_finalize+0xa0>
  432370:	mov	w0, #0x6                   	// #6
  432374:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  432378:	add	x8, x1, #0x5e3
  43237c:	ldr	x1, [sp, #88]
  432380:	ldr	x4, [x1, #8]
  432384:	ldr	x1, [sp, #88]
  432388:	ldr	x1, [x1, #40]
  43238c:	ldr	x1, [x1, #16]
  432390:	ldr	x2, [sp, #88]
  432394:	ldr	w2, [x2, #152]
  432398:	ldr	x3, [sp, #88]
  43239c:	ldr	x3, [x3, #8]
  4323a0:	str	xzr, [sp, #48]
  4323a4:	str	x3, [sp, #40]
  4323a8:	adrp	x3, 444000 <__PRETTY_FUNCTION__.12458>
  4323ac:	add	x3, x3, #0xd90
  4323b0:	str	x3, [sp, #32]
  4323b4:	str	w2, [sp, #24]
  4323b8:	adrp	x2, 444000 <__PRETTY_FUNCTION__.12458>
  4323bc:	add	x2, x2, #0xc60
  4323c0:	str	x2, [sp, #16]
  4323c4:	str	x1, [sp, #8]
  4323c8:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  4323cc:	add	x1, x1, #0xc70
  4323d0:	str	x1, [sp]
  4323d4:	mov	x7, x4
  4323d8:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  4323dc:	add	x6, x1, #0xbf8
  4323e0:	adrp	x1, 444000 <__PRETTY_FUNCTION__.12458>
  4323e4:	add	x5, x1, #0xd60
  4323e8:	adrp	x1, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4323ec:	add	x4, x1, #0x260
  4323f0:	mov	w3, #0x338                 	// #824
  4323f4:	mov	x2, x8
  4323f8:	mov	w1, #0x0                   	// #0
  4323fc:	bl	407cd0 <log_struct_internal@plt>
  432400:	ldr	x0, [sp, #88]
  432404:	ldr	x0, [x0, #224]
  432408:	bl	407550 <sd_event_source_unref@plt>
  43240c:	mov	x1, x0
  432410:	ldr	x0, [sp, #88]
  432414:	str	x1, [x0, #224]
  432418:	ldr	x0, [sp, #88]
  43241c:	ldr	x0, [x0, #136]
  432420:	cmp	x0, #0x0
  432424:	b.eq	432444 <session_finalize+0x170>  // b.none
  432428:	ldr	x0, [sp, #88]
  43242c:	ldr	x0, [x0, #136]
  432430:	ldr	x1, [sp, #88]
  432434:	bl	428acc <seat_evict_position>
  432438:	b	432444 <session_finalize+0x170>
  43243c:	ldr	x0, [sp, #104]
  432440:	bl	42e424 <session_device_free>
  432444:	ldr	x0, [sp, #88]
  432448:	ldr	x0, [x0, #240]
  43244c:	bl	42eff8 <hashmap_first>
  432450:	str	x0, [sp, #104]
  432454:	ldr	x0, [sp, #104]
  432458:	cmp	x0, #0x0
  43245c:	b.ne	43243c <session_finalize+0x168>  // b.any
  432460:	ldr	x0, [sp, #88]
  432464:	ldr	x0, [x0, #32]
  432468:	bl	4070c0 <unlink@plt>
  43246c:	ldr	x0, [sp, #88]
  432470:	bl	4335a4 <session_add_to_gc_queue>
  432474:	ldr	x0, [sp, #88]
  432478:	ldr	x0, [x0, #40]
  43247c:	bl	438778 <user_add_to_gc_queue>
  432480:	ldr	x0, [sp, #88]
  432484:	ldrb	w0, [x0, #209]
  432488:	and	w0, w0, #0x2
  43248c:	and	w0, w0, #0xff
  432490:	cmp	w0, #0x0
  432494:	b.eq	4324b4 <session_finalize+0x1e0>  // b.none
  432498:	mov	w1, #0x0                   	// #0
  43249c:	ldr	x0, [sp, #88]
  4324a0:	bl	42c774 <session_send_signal>
  4324a4:	ldr	x0, [sp, #88]
  4324a8:	ldrb	w1, [x0, #209]
  4324ac:	and	w1, w1, #0xfffffffd
  4324b0:	strb	w1, [x0, #209]
  4324b4:	ldr	x0, [sp, #88]
  4324b8:	ldr	x0, [x0, #136]
  4324bc:	cmp	x0, #0x0
  4324c0:	b.eq	4324f8 <session_finalize+0x224>  // b.none
  4324c4:	ldr	x0, [sp, #88]
  4324c8:	ldr	x0, [x0, #136]
  4324cc:	ldr	x0, [x0, #32]
  4324d0:	ldr	x1, [sp, #88]
  4324d4:	cmp	x1, x0
  4324d8:	b.ne	4324ec <session_finalize+0x218>  // b.any
  4324dc:	ldr	x0, [sp, #88]
  4324e0:	ldr	x0, [x0, #136]
  4324e4:	mov	x1, #0x0                   	// #0
  4324e8:	bl	427d58 <seat_set_active>
  4324ec:	ldr	x0, [sp, #88]
  4324f0:	ldr	x0, [x0, #136]
  4324f4:	bl	4273a0 <seat_save>
  4324f8:	ldr	x0, [sp, #88]
  4324fc:	ldr	x0, [x0, #40]
  432500:	bl	437210 <user_save>
  432504:	ldr	x0, [sp, #88]
  432508:	ldr	x3, [x0, #40]
  43250c:	mov	x2, #0x0                   	// #0
  432510:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432514:	add	x1, x0, #0xc80
  432518:	mov	x0, x3
  43251c:	bl	435c10 <user_send_changed>
  432520:	mov	w0, #0x0                   	// #0
  432524:	ldp	x29, x30, [sp, #64]
  432528:	add	sp, sp, #0x70
  43252c:	ret

0000000000432530 <release_timeout_callback>:
  432530:	stp	x29, x30, [sp, #-64]!
  432534:	mov	x29, sp
  432538:	str	x0, [sp, #40]
  43253c:	str	x1, [sp, #32]
  432540:	str	x2, [sp, #24]
  432544:	ldr	x0, [sp, #24]
  432548:	str	x0, [sp, #56]
  43254c:	ldr	x0, [sp, #40]
  432550:	cmp	x0, #0x0
  432554:	cset	w0, eq  // eq = none
  432558:	and	w0, w0, #0xff
  43255c:	and	x0, x0, #0xff
  432560:	cmp	x0, #0x0
  432564:	b.eq	432590 <release_timeout_callback+0x60>  // b.none
  432568:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43256c:	add	x1, x0, #0x5e3
  432570:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432574:	add	x4, x0, #0x278
  432578:	mov	w3, #0x361                 	// #865
  43257c:	mov	x2, x1
  432580:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432584:	add	x1, x0, #0xdb0
  432588:	mov	w0, #0x0                   	// #0
  43258c:	bl	407650 <log_assert_failed_realm@plt>
  432590:	ldr	x0, [sp, #56]
  432594:	cmp	x0, #0x0
  432598:	cset	w0, eq  // eq = none
  43259c:	and	w0, w0, #0xff
  4325a0:	and	x0, x0, #0xff
  4325a4:	cmp	x0, #0x0
  4325a8:	b.eq	4325d4 <release_timeout_callback+0xa4>  // b.none
  4325ac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4325b0:	add	x1, x0, #0x5e3
  4325b4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4325b8:	add	x4, x0, #0x278
  4325bc:	mov	w3, #0x362                 	// #866
  4325c0:	mov	x2, x1
  4325c4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4325c8:	add	x1, x0, #0x648
  4325cc:	mov	w0, #0x0                   	// #0
  4325d0:	bl	407650 <log_assert_failed_realm@plt>
  4325d4:	mov	w1, #0x0                   	// #0
  4325d8:	ldr	x0, [sp, #56]
  4325dc:	bl	432194 <session_stop>
  4325e0:	mov	w0, #0x0                   	// #0
  4325e4:	ldp	x29, x30, [sp], #64
  4325e8:	ret

00000000004325ec <session_release>:
  4325ec:	stp	x29, x30, [sp, #-48]!
  4325f0:	mov	x29, sp
  4325f4:	stp	x19, x20, [sp, #16]
  4325f8:	str	x0, [sp, #40]
  4325fc:	ldr	x0, [sp, #40]
  432600:	cmp	x0, #0x0
  432604:	cset	w0, eq  // eq = none
  432608:	and	w0, w0, #0xff
  43260c:	and	x0, x0, #0xff
  432610:	cmp	x0, #0x0
  432614:	b.eq	432640 <session_release+0x54>  // b.none
  432618:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43261c:	add	x1, x0, #0x5e3
  432620:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432624:	add	x4, x0, #0x298
  432628:	mov	w3, #0x369                 	// #873
  43262c:	mov	x2, x1
  432630:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432634:	add	x1, x0, #0x648
  432638:	mov	w0, #0x0                   	// #0
  43263c:	bl	407650 <log_assert_failed_realm@plt>
  432640:	ldr	x0, [sp, #40]
  432644:	ldrb	w0, [x0, #209]
  432648:	ubfx	x0, x0, #1, #1
  43264c:	and	w0, w0, #0xff
  432650:	eor	w0, w0, #0x1
  432654:	and	w0, w0, #0xff
  432658:	cmp	w0, #0x0
  43265c:	b.ne	432678 <session_release+0x8c>  // b.any
  432660:	ldr	x0, [sp, #40]
  432664:	ldrb	w0, [x0, #209]
  432668:	and	w0, w0, #0x4
  43266c:	and	w0, w0, #0xff
  432670:	cmp	w0, #0x0
  432674:	b.eq	432680 <session_release+0x94>  // b.none
  432678:	mov	w0, #0x0                   	// #0
  43267c:	b	4326e8 <session_release+0xfc>
  432680:	ldr	x0, [sp, #40]
  432684:	ldr	x0, [x0, #224]
  432688:	cmp	x0, #0x0
  43268c:	b.eq	432698 <session_release+0xac>  // b.none
  432690:	mov	w0, #0x0                   	// #0
  432694:	b	4326e8 <session_release+0xfc>
  432698:	ldr	x0, [sp, #40]
  43269c:	ldr	x0, [x0]
  4326a0:	ldr	x19, [x0]
  4326a4:	ldr	x0, [sp, #40]
  4326a8:	add	x20, x0, #0xe0
  4326ac:	mov	w0, #0x1                   	// #1
  4326b0:	bl	407e80 <now@plt>
  4326b4:	mov	x1, #0x2d00                	// #11520
  4326b8:	movk	x1, #0x131, lsl #16
  4326bc:	bl	42f0e0 <usec_add>
  4326c0:	mov	x1, x0
  4326c4:	ldr	x6, [sp, #40]
  4326c8:	adrp	x0, 432000 <session_stop_scope+0x264>
  4326cc:	add	x5, x0, #0x530
  4326d0:	mov	x4, #0x0                   	// #0
  4326d4:	mov	x3, x1
  4326d8:	mov	w2, #0x1                   	// #1
  4326dc:	mov	x1, x20
  4326e0:	mov	x0, x19
  4326e4:	bl	4074d0 <sd_event_add_time@plt>
  4326e8:	ldp	x19, x20, [sp, #16]
  4326ec:	ldp	x29, x30, [sp], #48
  4326f0:	ret

00000000004326f4 <session_is_active>:
  4326f4:	stp	x29, x30, [sp, #-32]!
  4326f8:	mov	x29, sp
  4326fc:	str	x0, [sp, #24]
  432700:	ldr	x0, [sp, #24]
  432704:	cmp	x0, #0x0
  432708:	cset	w0, eq  // eq = none
  43270c:	and	w0, w0, #0xff
  432710:	and	x0, x0, #0xff
  432714:	cmp	x0, #0x0
  432718:	b.eq	432744 <session_is_active+0x50>  // b.none
  43271c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432720:	add	x1, x0, #0x5e3
  432724:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432728:	add	x4, x0, #0x2a8
  43272c:	mov	w3, #0x379                 	// #889
  432730:	mov	x2, x1
  432734:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432738:	add	x1, x0, #0x648
  43273c:	mov	w0, #0x0                   	// #0
  432740:	bl	407650 <log_assert_failed_realm@plt>
  432744:	ldr	x0, [sp, #24]
  432748:	ldr	x0, [x0, #136]
  43274c:	cmp	x0, #0x0
  432750:	b.ne	43275c <session_is_active+0x68>  // b.any
  432754:	mov	w0, #0x1                   	// #1
  432758:	b	432778 <session_is_active+0x84>
  43275c:	ldr	x0, [sp, #24]
  432760:	ldr	x0, [x0, #136]
  432764:	ldr	x0, [x0, #32]
  432768:	ldr	x1, [sp, #24]
  43276c:	cmp	x1, x0
  432770:	cset	w0, eq  // eq = none
  432774:	and	w0, w0, #0xff
  432778:	ldp	x29, x30, [sp], #32
  43277c:	ret

0000000000432780 <get_tty_atime>:
  432780:	stp	x29, x30, [sp, #-192]!
  432784:	mov	x29, sp
  432788:	str	x19, [sp, #16]
  43278c:	str	x0, [sp, #40]
  432790:	str	x1, [sp, #32]
  432794:	adrp	x0, 460000 <wordlist.10364+0x370>
  432798:	ldr	x0, [x0, #4024]
  43279c:	ldr	x1, [x0]
  4327a0:	str	x1, [sp, #184]
  4327a4:	mov	x1, #0x0                   	// #0
  4327a8:	str	xzr, [sp, #48]
  4327ac:	ldr	x0, [sp, #40]
  4327b0:	cmp	x0, #0x0
  4327b4:	cset	w0, eq  // eq = none
  4327b8:	and	w0, w0, #0xff
  4327bc:	and	x0, x0, #0xff
  4327c0:	cmp	x0, #0x0
  4327c4:	b.eq	4327f0 <get_tty_atime+0x70>  // b.none
  4327c8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4327cc:	add	x1, x0, #0x5e3
  4327d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4327d4:	add	x4, x0, #0x2c0
  4327d8:	mov	w3, #0x385                 	// #901
  4327dc:	mov	x2, x1
  4327e0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4327e4:	add	x1, x0, #0xdb8
  4327e8:	mov	w0, #0x0                   	// #0
  4327ec:	bl	407650 <log_assert_failed_realm@plt>
  4327f0:	ldr	x0, [sp, #32]
  4327f4:	cmp	x0, #0x0
  4327f8:	cset	w0, eq  // eq = none
  4327fc:	and	w0, w0, #0xff
  432800:	and	x0, x0, #0xff
  432804:	cmp	x0, #0x0
  432808:	b.eq	432834 <get_tty_atime+0xb4>  // b.none
  43280c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432810:	add	x1, x0, #0x5e3
  432814:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432818:	add	x4, x0, #0x2c0
  43281c:	mov	w3, #0x386                 	// #902
  432820:	mov	x2, x1
  432824:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432828:	add	x1, x0, #0xdc0
  43282c:	mov	w0, #0x0                   	// #0
  432830:	bl	407650 <log_assert_failed_realm@plt>
  432834:	ldr	x0, [sp, #40]
  432838:	bl	407720 <path_is_absolute@plt>
  43283c:	and	w0, w0, #0xff
  432840:	eor	w0, w0, #0x1
  432844:	and	w0, w0, #0xff
  432848:	cmp	w0, #0x0
  43284c:	b.eq	432888 <get_tty_atime+0x108>  // b.none
  432850:	mov	x2, #0xffffffffffffffff    	// #-1
  432854:	ldr	x1, [sp, #40]
  432858:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43285c:	add	x0, x0, #0xdc8
  432860:	bl	407bb0 <path_join_internal@plt>
  432864:	str	x0, [sp, #48]
  432868:	ldr	x0, [sp, #48]
  43286c:	cmp	x0, #0x0
  432870:	b.ne	43287c <get_tty_atime+0xfc>  // b.any
  432874:	mov	w19, #0xfffffff4            	// #-12
  432878:	b	4328ec <get_tty_atime+0x16c>
  43287c:	ldr	x0, [sp, #48]
  432880:	str	x0, [sp, #40]
  432884:	b	4328a8 <get_tty_atime+0x128>
  432888:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43288c:	add	x1, x0, #0xdd0
  432890:	ldr	x0, [sp, #40]
  432894:	bl	4078d0 <path_startswith@plt>
  432898:	cmp	x0, #0x0
  43289c:	b.ne	4328a8 <get_tty_atime+0x128>  // b.any
  4328a0:	mov	w19, #0xfffffffe            	// #-2
  4328a4:	b	4328ec <get_tty_atime+0x16c>
  4328a8:	add	x0, sp, #0x38
  4328ac:	mov	x1, x0
  4328b0:	ldr	x0, [sp, #40]
  4328b4:	bl	43c240 <lstat64>
  4328b8:	cmp	w0, #0x0
  4328bc:	b.ge	4328d0 <get_tty_atime+0x150>  // b.tcont
  4328c0:	bl	407960 <__errno_location@plt>
  4328c4:	ldr	w0, [x0]
  4328c8:	neg	w19, w0
  4328cc:	b	4328ec <get_tty_atime+0x16c>
  4328d0:	add	x0, sp, #0x38
  4328d4:	add	x0, x0, #0x48
  4328d8:	bl	408080 <timespec_load@plt>
  4328dc:	mov	x1, x0
  4328e0:	ldr	x0, [sp, #32]
  4328e4:	str	x1, [x0]
  4328e8:	mov	w19, #0x0                   	// #0
  4328ec:	add	x0, sp, #0x30
  4328f0:	bl	42edb4 <freep>
  4328f4:	mov	w1, w19
  4328f8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4328fc:	ldr	x0, [x0, #4024]
  432900:	ldr	x2, [sp, #184]
  432904:	ldr	x0, [x0]
  432908:	eor	x0, x2, x0
  43290c:	cmp	x0, #0x0
  432910:	b.eq	432918 <get_tty_atime+0x198>  // b.none
  432914:	bl	407b20 <__stack_chk_fail@plt>
  432918:	mov	w0, w1
  43291c:	ldr	x19, [sp, #16]
  432920:	ldp	x29, x30, [sp], #192
  432924:	ret

0000000000432928 <get_process_ctty_atime>:
  432928:	stp	x29, x30, [sp, #-80]!
  43292c:	mov	x29, sp
  432930:	str	x19, [sp, #16]
  432934:	str	w0, [sp, #44]
  432938:	str	x1, [sp, #32]
  43293c:	adrp	x0, 460000 <wordlist.10364+0x370>
  432940:	ldr	x0, [x0, #4024]
  432944:	ldr	x1, [x0]
  432948:	str	x1, [sp, #72]
  43294c:	mov	x1, #0x0                   	// #0
  432950:	str	xzr, [sp, #64]
  432954:	ldr	w0, [sp, #44]
  432958:	cmp	w0, #0x0
  43295c:	cset	w0, le
  432960:	and	w0, w0, #0xff
  432964:	and	x0, x0, #0xff
  432968:	cmp	x0, #0x0
  43296c:	b.eq	432998 <get_process_ctty_atime+0x70>  // b.none
  432970:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432974:	add	x1, x0, #0x5e3
  432978:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43297c:	add	x4, x0, #0x2d0
  432980:	mov	w3, #0x39c                 	// #924
  432984:	mov	x2, x1
  432988:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43298c:	add	x1, x0, #0xdd8
  432990:	mov	w0, #0x0                   	// #0
  432994:	bl	407650 <log_assert_failed_realm@plt>
  432998:	ldr	x0, [sp, #32]
  43299c:	cmp	x0, #0x0
  4329a0:	cset	w0, eq  // eq = none
  4329a4:	and	w0, w0, #0xff
  4329a8:	and	x0, x0, #0xff
  4329ac:	cmp	x0, #0x0
  4329b0:	b.eq	4329dc <get_process_ctty_atime+0xb4>  // b.none
  4329b4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4329b8:	add	x1, x0, #0x5e3
  4329bc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4329c0:	add	x4, x0, #0x2d0
  4329c4:	mov	w3, #0x39d                 	// #925
  4329c8:	mov	x2, x1
  4329cc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4329d0:	add	x1, x0, #0xdc0
  4329d4:	mov	w0, #0x0                   	// #0
  4329d8:	bl	407650 <log_assert_failed_realm@plt>
  4329dc:	add	x0, sp, #0x40
  4329e0:	mov	x2, x0
  4329e4:	mov	x1, #0x0                   	// #0
  4329e8:	ldr	w0, [sp, #44]
  4329ec:	bl	4081f0 <get_ctty@plt>
  4329f0:	str	w0, [sp, #60]
  4329f4:	ldr	w0, [sp, #60]
  4329f8:	cmp	w0, #0x0
  4329fc:	b.ge	432a08 <get_process_ctty_atime+0xe0>  // b.tcont
  432a00:	ldr	w19, [sp, #60]
  432a04:	b	432a18 <get_process_ctty_atime+0xf0>
  432a08:	ldr	x0, [sp, #64]
  432a0c:	ldr	x1, [sp, #32]
  432a10:	bl	432780 <get_tty_atime>
  432a14:	mov	w19, w0
  432a18:	add	x0, sp, #0x40
  432a1c:	bl	42edb4 <freep>
  432a20:	mov	w1, w19
  432a24:	adrp	x0, 460000 <wordlist.10364+0x370>
  432a28:	ldr	x0, [x0, #4024]
  432a2c:	ldr	x2, [sp, #72]
  432a30:	ldr	x0, [x0]
  432a34:	eor	x0, x2, x0
  432a38:	cmp	x0, #0x0
  432a3c:	b.eq	432a44 <get_process_ctty_atime+0x11c>  // b.none
  432a40:	bl	407b20 <__stack_chk_fail@plt>
  432a44:	mov	w0, w1
  432a48:	ldr	x19, [sp, #16]
  432a4c:	ldp	x29, x30, [sp], #80
  432a50:	ret

0000000000432a54 <session_get_idle_hint>:
  432a54:	stp	x29, x30, [sp, #-64]!
  432a58:	mov	x29, sp
  432a5c:	str	x0, [sp, #24]
  432a60:	str	x1, [sp, #16]
  432a64:	adrp	x0, 460000 <wordlist.10364+0x370>
  432a68:	ldr	x0, [x0, #4024]
  432a6c:	ldr	x1, [x0]
  432a70:	str	x1, [sp, #56]
  432a74:	mov	x1, #0x0                   	// #0
  432a78:	str	xzr, [sp, #40]
  432a7c:	ldr	x0, [sp, #24]
  432a80:	cmp	x0, #0x0
  432a84:	cset	w0, eq  // eq = none
  432a88:	and	w0, w0, #0xff
  432a8c:	and	x0, x0, #0xff
  432a90:	cmp	x0, #0x0
  432a94:	b.eq	432ac0 <session_get_idle_hint+0x6c>  // b.none
  432a98:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432a9c:	add	x1, x0, #0x5e3
  432aa0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432aa4:	add	x4, x0, #0x2e8
  432aa8:	mov	w3, #0x3aa                 	// #938
  432aac:	mov	x2, x1
  432ab0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432ab4:	add	x1, x0, #0x648
  432ab8:	mov	w0, #0x0                   	// #0
  432abc:	bl	407650 <log_assert_failed_realm@plt>
  432ac0:	ldr	x0, [sp, #24]
  432ac4:	ldrb	w0, [x0, #184]
  432ac8:	cmp	w0, #0x0
  432acc:	b.eq	432af8 <session_get_idle_hint+0xa4>  // b.none
  432ad0:	ldr	x0, [sp, #16]
  432ad4:	cmp	x0, #0x0
  432ad8:	b.eq	432aec <session_get_idle_hint+0x98>  // b.none
  432adc:	ldr	x2, [sp, #16]
  432ae0:	ldr	x0, [sp, #24]
  432ae4:	ldp	x0, x1, [x0, #192]
  432ae8:	stp	x0, x1, [x2]
  432aec:	ldr	x0, [sp, #24]
  432af0:	ldrb	w0, [x0, #184]
  432af4:	b	432c38 <session_get_idle_hint+0x1e4>
  432af8:	strb	wzr, [sp, #35]
  432afc:	ldr	x0, [sp, #24]
  432b00:	ldr	w0, [x0, #20]
  432b04:	sub	w0, w0, #0x2
  432b08:	cmp	w0, #0x2
  432b0c:	b.hi	432b18 <session_get_idle_hint+0xc4>  // b.pmore
  432b10:	mov	w0, #0x1                   	// #1
  432b14:	strb	w0, [sp, #35]
  432b18:	nop
  432b1c:	ldrb	w0, [sp, #35]
  432b20:	cmp	w0, #0x0
  432b24:	b.ne	432b94 <session_get_idle_hint+0x140>  // b.any
  432b28:	ldr	x0, [sp, #24]
  432b2c:	ldr	x0, [x0, #72]
  432b30:	cmp	x0, #0x0
  432b34:	b.eq	432b58 <session_get_idle_hint+0x104>  // b.none
  432b38:	ldr	x0, [sp, #24]
  432b3c:	ldr	x0, [x0, #72]
  432b40:	add	x1, sp, #0x28
  432b44:	bl	432780 <get_tty_atime>
  432b48:	str	w0, [sp, #36]
  432b4c:	ldr	w0, [sp, #36]
  432b50:	cmp	w0, #0x0
  432b54:	b.ge	432bc4 <session_get_idle_hint+0x170>  // b.tcont
  432b58:	ldr	x0, [sp, #24]
  432b5c:	ldr	w0, [x0, #152]
  432b60:	bl	42f1c4 <pid_is_valid>
  432b64:	and	w0, w0, #0xff
  432b68:	cmp	w0, #0x0
  432b6c:	b.eq	432b9c <session_get_idle_hint+0x148>  // b.none
  432b70:	ldr	x0, [sp, #24]
  432b74:	ldr	w0, [x0, #152]
  432b78:	add	x1, sp, #0x28
  432b7c:	bl	432928 <get_process_ctty_atime>
  432b80:	str	w0, [sp, #36]
  432b84:	ldr	w0, [sp, #36]
  432b88:	cmp	w0, #0x0
  432b8c:	b.ge	432bcc <session_get_idle_hint+0x178>  // b.tcont
  432b90:	b	432b9c <session_get_idle_hint+0x148>
  432b94:	nop
  432b98:	b	432ba0 <session_get_idle_hint+0x14c>
  432b9c:	nop
  432ba0:	ldr	x0, [sp, #16]
  432ba4:	cmp	x0, #0x0
  432ba8:	b.eq	432bbc <session_get_idle_hint+0x168>  // b.none
  432bac:	ldr	x2, [sp, #16]
  432bb0:	ldr	x0, [sp, #24]
  432bb4:	ldp	x0, x1, [x0, #192]
  432bb8:	stp	x0, x1, [x2]
  432bbc:	mov	w0, #0x0                   	// #0
  432bc0:	b	432c38 <session_get_idle_hint+0x1e4>
  432bc4:	nop
  432bc8:	b	432bd0 <session_get_idle_hint+0x17c>
  432bcc:	nop
  432bd0:	ldr	x0, [sp, #16]
  432bd4:	cmp	x0, #0x0
  432bd8:	b.eq	432bec <session_get_idle_hint+0x198>  // b.none
  432bdc:	ldr	x0, [sp, #40]
  432be0:	mov	x1, x0
  432be4:	ldr	x0, [sp, #16]
  432be8:	bl	4075a0 <dual_timestamp_from_realtime@plt>
  432bec:	mov	w0, #0x0                   	// #0
  432bf0:	bl	407e80 <now@plt>
  432bf4:	str	x0, [sp, #48]
  432bf8:	ldr	x0, [sp, #24]
  432bfc:	ldr	x0, [x0]
  432c00:	ldr	x0, [x0, #376]
  432c04:	cmp	x0, #0x0
  432c08:	b.ne	432c14 <session_get_idle_hint+0x1c0>  // b.any
  432c0c:	mov	w0, #0x0                   	// #0
  432c10:	b	432c38 <session_get_idle_hint+0x1e4>
  432c14:	ldr	x0, [sp, #24]
  432c18:	ldr	x0, [x0]
  432c1c:	ldr	x1, [x0, #376]
  432c20:	ldr	x0, [sp, #40]
  432c24:	add	x0, x1, x0
  432c28:	ldr	x1, [sp, #48]
  432c2c:	cmp	x1, x0
  432c30:	cset	w0, cs  // cs = hs, nlast
  432c34:	and	w0, w0, #0xff
  432c38:	mov	w1, w0
  432c3c:	adrp	x0, 460000 <wordlist.10364+0x370>
  432c40:	ldr	x0, [x0, #4024]
  432c44:	ldr	x2, [sp, #56]
  432c48:	ldr	x0, [x0]
  432c4c:	eor	x0, x2, x0
  432c50:	cmp	x0, #0x0
  432c54:	b.eq	432c5c <session_get_idle_hint+0x208>  // b.none
  432c58:	bl	407b20 <__stack_chk_fail@plt>
  432c5c:	mov	w0, w1
  432c60:	ldp	x29, x30, [sp], #64
  432c64:	ret

0000000000432c68 <session_set_idle_hint>:
  432c68:	stp	x29, x30, [sp, #-32]!
  432c6c:	mov	x29, sp
  432c70:	str	x0, [sp, #24]
  432c74:	strb	w1, [sp, #23]
  432c78:	ldr	x0, [sp, #24]
  432c7c:	cmp	x0, #0x0
  432c80:	cset	w0, eq  // eq = none
  432c84:	and	w0, w0, #0xff
  432c88:	and	x0, x0, #0xff
  432c8c:	cmp	x0, #0x0
  432c90:	b.eq	432cbc <session_set_idle_hint+0x54>  // b.none
  432c94:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432c98:	add	x1, x0, #0x5e3
  432c9c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432ca0:	add	x4, x0, #0x300
  432ca4:	mov	w3, #0x3dc                 	// #988
  432ca8:	mov	x2, x1
  432cac:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432cb0:	add	x1, x0, #0x648
  432cb4:	mov	w0, #0x0                   	// #0
  432cb8:	bl	407650 <log_assert_failed_realm@plt>
  432cbc:	ldr	x0, [sp, #24]
  432cc0:	ldrb	w0, [x0, #184]
  432cc4:	ldrb	w1, [sp, #23]
  432cc8:	cmp	w1, w0
  432ccc:	b.eq	432da4 <session_set_idle_hint+0x13c>  // b.none
  432cd0:	ldr	x0, [sp, #24]
  432cd4:	ldrb	w1, [sp, #23]
  432cd8:	strb	w1, [x0, #184]
  432cdc:	ldr	x0, [sp, #24]
  432ce0:	add	x0, x0, #0xc0
  432ce4:	bl	4070a0 <dual_timestamp_get@plt>
  432ce8:	mov	x4, #0x0                   	// #0
  432cec:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432cf0:	add	x3, x0, #0xde0
  432cf4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432cf8:	add	x2, x0, #0xdf8
  432cfc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d00:	add	x1, x0, #0xe08
  432d04:	ldr	x0, [sp, #24]
  432d08:	bl	42c8a8 <session_send_changed>
  432d0c:	ldr	x0, [sp, #24]
  432d10:	ldr	x0, [x0, #136]
  432d14:	cmp	x0, #0x0
  432d18:	b.eq	432d48 <session_set_idle_hint+0xe0>  // b.none
  432d1c:	ldr	x0, [sp, #24]
  432d20:	ldr	x5, [x0, #136]
  432d24:	mov	x4, #0x0                   	// #0
  432d28:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d2c:	add	x3, x0, #0xde0
  432d30:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d34:	add	x2, x0, #0xdf8
  432d38:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d3c:	add	x1, x0, #0xe08
  432d40:	mov	x0, x5
  432d44:	bl	426960 <seat_send_changed>
  432d48:	ldr	x0, [sp, #24]
  432d4c:	ldr	x5, [x0, #40]
  432d50:	mov	x4, #0x0                   	// #0
  432d54:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d58:	add	x3, x0, #0xde0
  432d5c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d60:	add	x2, x0, #0xdf8
  432d64:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d68:	add	x1, x0, #0xe08
  432d6c:	mov	x0, x5
  432d70:	bl	435c10 <user_send_changed>
  432d74:	ldr	x0, [sp, #24]
  432d78:	ldr	x5, [x0]
  432d7c:	mov	x4, #0x0                   	// #0
  432d80:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d84:	add	x3, x0, #0xde0
  432d88:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d8c:	add	x2, x0, #0xdf8
  432d90:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432d94:	add	x1, x0, #0xe08
  432d98:	mov	x0, x5
  432d9c:	bl	421190 <manager_send_changed>
  432da0:	b	432da8 <session_set_idle_hint+0x140>
  432da4:	nop
  432da8:	ldp	x29, x30, [sp], #32
  432dac:	ret

0000000000432db0 <session_get_locked_hint>:
  432db0:	stp	x29, x30, [sp, #-32]!
  432db4:	mov	x29, sp
  432db8:	str	x0, [sp, #24]
  432dbc:	ldr	x0, [sp, #24]
  432dc0:	cmp	x0, #0x0
  432dc4:	cset	w0, eq  // eq = none
  432dc8:	and	w0, w0, #0xff
  432dcc:	and	x0, x0, #0xff
  432dd0:	cmp	x0, #0x0
  432dd4:	b.eq	432e00 <session_get_locked_hint+0x50>  // b.none
  432dd8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432ddc:	add	x1, x0, #0x5e3
  432de0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432de4:	add	x4, x0, #0x318
  432de8:	mov	w3, #0x3ee                 	// #1006
  432dec:	mov	x2, x1
  432df0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432df4:	add	x1, x0, #0x648
  432df8:	mov	w0, #0x0                   	// #0
  432dfc:	bl	407650 <log_assert_failed_realm@plt>
  432e00:	ldr	x0, [sp, #24]
  432e04:	ldrb	w0, [x0, #208]
  432e08:	ldp	x29, x30, [sp], #32
  432e0c:	ret

0000000000432e10 <session_set_locked_hint>:
  432e10:	stp	x29, x30, [sp, #-32]!
  432e14:	mov	x29, sp
  432e18:	str	x0, [sp, #24]
  432e1c:	strb	w1, [sp, #23]
  432e20:	ldr	x0, [sp, #24]
  432e24:	cmp	x0, #0x0
  432e28:	cset	w0, eq  // eq = none
  432e2c:	and	w0, w0, #0xff
  432e30:	and	x0, x0, #0xff
  432e34:	cmp	x0, #0x0
  432e38:	b.eq	432e64 <session_set_locked_hint+0x54>  // b.none
  432e3c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432e40:	add	x1, x0, #0x5e3
  432e44:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432e48:	add	x4, x0, #0x330
  432e4c:	mov	w3, #0x3f4                 	// #1012
  432e50:	mov	x2, x1
  432e54:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432e58:	add	x1, x0, #0x648
  432e5c:	mov	w0, #0x0                   	// #0
  432e60:	bl	407650 <log_assert_failed_realm@plt>
  432e64:	ldr	x0, [sp, #24]
  432e68:	ldrb	w0, [x0, #208]
  432e6c:	ldrb	w1, [sp, #23]
  432e70:	cmp	w1, w0
  432e74:	b.eq	432e9c <session_set_locked_hint+0x8c>  // b.none
  432e78:	ldr	x0, [sp, #24]
  432e7c:	ldrb	w1, [sp, #23]
  432e80:	strb	w1, [x0, #208]
  432e84:	mov	x2, #0x0                   	// #0
  432e88:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432e8c:	add	x1, x0, #0xe18
  432e90:	ldr	x0, [sp, #24]
  432e94:	bl	42c8a8 <session_send_changed>
  432e98:	b	432ea0 <session_set_locked_hint+0x90>
  432e9c:	nop
  432ea0:	ldp	x29, x30, [sp], #32
  432ea4:	ret

0000000000432ea8 <session_dispatch_fifo>:
  432ea8:	stp	x29, x30, [sp, #-64]!
  432eac:	mov	x29, sp
  432eb0:	str	x0, [sp, #40]
  432eb4:	str	w1, [sp, #36]
  432eb8:	str	w2, [sp, #32]
  432ebc:	str	x3, [sp, #24]
  432ec0:	ldr	x0, [sp, #24]
  432ec4:	str	x0, [sp, #56]
  432ec8:	ldr	x0, [sp, #56]
  432ecc:	cmp	x0, #0x0
  432ed0:	cset	w0, eq  // eq = none
  432ed4:	and	w0, w0, #0xff
  432ed8:	and	x0, x0, #0xff
  432edc:	cmp	x0, #0x0
  432ee0:	b.eq	432f0c <session_dispatch_fifo+0x64>  // b.none
  432ee4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432ee8:	add	x1, x0, #0x5e3
  432eec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432ef0:	add	x4, x0, #0x348
  432ef4:	mov	w3, #0x401                 	// #1025
  432ef8:	mov	x2, x1
  432efc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432f00:	add	x1, x0, #0x648
  432f04:	mov	w0, #0x0                   	// #0
  432f08:	bl	407650 <log_assert_failed_realm@plt>
  432f0c:	ldr	x0, [sp, #56]
  432f10:	ldr	w0, [x0, #160]
  432f14:	ldr	w1, [sp, #36]
  432f18:	cmp	w1, w0
  432f1c:	cset	w0, ne  // ne = any
  432f20:	and	w0, w0, #0xff
  432f24:	and	x0, x0, #0xff
  432f28:	cmp	x0, #0x0
  432f2c:	b.eq	432f58 <session_dispatch_fifo+0xb0>  // b.none
  432f30:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432f34:	add	x1, x0, #0x5e3
  432f38:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432f3c:	add	x4, x0, #0x348
  432f40:	mov	w3, #0x402                 	// #1026
  432f44:	mov	x2, x1
  432f48:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432f4c:	add	x1, x0, #0xe28
  432f50:	mov	w0, #0x0                   	// #0
  432f54:	bl	407650 <log_assert_failed_realm@plt>
  432f58:	ldr	x0, [sp, #56]
  432f5c:	bl	43319c <session_remove_fifo>
  432f60:	mov	w1, #0x0                   	// #0
  432f64:	ldr	x0, [sp, #56]
  432f68:	bl	432194 <session_stop>
  432f6c:	mov	w0, #0x1                   	// #1
  432f70:	ldp	x29, x30, [sp], #64
  432f74:	ret

0000000000432f78 <session_create_fifo>:
  432f78:	stp	x29, x30, [sp, #-48]!
  432f7c:	mov	x29, sp
  432f80:	str	x0, [sp, #24]
  432f84:	ldr	x0, [sp, #24]
  432f88:	cmp	x0, #0x0
  432f8c:	cset	w0, eq  // eq = none
  432f90:	and	w0, w0, #0xff
  432f94:	and	x0, x0, #0xff
  432f98:	cmp	x0, #0x0
  432f9c:	b.eq	432fc8 <session_create_fifo+0x50>  // b.none
  432fa0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432fa4:	add	x1, x0, #0x5e3
  432fa8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  432fac:	add	x4, x0, #0x360
  432fb0:	mov	w3, #0x40f                 	// #1039
  432fb4:	mov	x2, x1
  432fb8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432fbc:	add	x1, x0, #0x648
  432fc0:	mov	w0, #0x0                   	// #0
  432fc4:	bl	407650 <log_assert_failed_realm@plt>
  432fc8:	ldr	x0, [sp, #24]
  432fcc:	ldr	x0, [x0, #168]
  432fd0:	cmp	x0, #0x0
  432fd4:	b.ne	433088 <session_create_fifo+0x110>  // b.any
  432fd8:	mov	w4, #0x2                   	// #2
  432fdc:	mov	w3, #0x0                   	// #0
  432fe0:	mov	w2, #0x0                   	// #0
  432fe4:	mov	w1, #0x1ed                 	// #493
  432fe8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  432fec:	add	x0, x0, #0x618
  432ff0:	bl	407ab0 <mkdir_safe_label@plt>
  432ff4:	str	w0, [sp, #44]
  432ff8:	ldr	w0, [sp, #44]
  432ffc:	cmp	w0, #0x0
  433000:	b.ge	43300c <session_create_fifo+0x94>  // b.tcont
  433004:	ldr	w0, [sp, #44]
  433008:	b	433194 <session_create_fifo+0x21c>
  43300c:	ldr	x0, [sp, #24]
  433010:	ldr	x1, [x0, #8]
  433014:	mov	x3, #0x0                   	// #0
  433018:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43301c:	add	x2, x0, #0xe40
  433020:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433024:	add	x0, x0, #0xe48
  433028:	bl	4075d0 <strjoin_real@plt>
  43302c:	mov	x1, x0
  433030:	ldr	x0, [sp, #24]
  433034:	str	x1, [x0, #168]
  433038:	ldr	x0, [sp, #24]
  43303c:	ldr	x0, [x0, #168]
  433040:	cmp	x0, #0x0
  433044:	b.ne	433050 <session_create_fifo+0xd8>  // b.any
  433048:	mov	w0, #0xfffffff4            	// #-12
  43304c:	b	433194 <session_create_fifo+0x21c>
  433050:	ldr	x0, [sp, #24]
  433054:	ldr	x0, [x0, #168]
  433058:	mov	w1, #0x180                 	// #384
  43305c:	bl	407df0 <mkfifo@plt>
  433060:	cmp	w0, #0x0
  433064:	b.ge	433088 <session_create_fifo+0x110>  // b.tcont
  433068:	bl	407960 <__errno_location@plt>
  43306c:	ldr	w0, [x0]
  433070:	cmp	w0, #0x11
  433074:	b.eq	433088 <session_create_fifo+0x110>  // b.none
  433078:	bl	407960 <__errno_location@plt>
  43307c:	ldr	w0, [x0]
  433080:	neg	w0, w0
  433084:	b	433194 <session_create_fifo+0x21c>
  433088:	ldr	x0, [sp, #24]
  43308c:	ldr	w0, [x0, #160]
  433090:	cmp	w0, #0x0
  433094:	b.ge	4330d8 <session_create_fifo+0x160>  // b.tcont
  433098:	ldr	x0, [sp, #24]
  43309c:	ldr	x0, [x0, #168]
  4330a0:	mov	w1, #0x800                 	// #2048
  4330a4:	movk	w1, #0x8, lsl #16
  4330a8:	bl	4082c0 <open64@plt>
  4330ac:	mov	w1, w0
  4330b0:	ldr	x0, [sp, #24]
  4330b4:	str	w1, [x0, #160]
  4330b8:	ldr	x0, [sp, #24]
  4330bc:	ldr	w0, [x0, #160]
  4330c0:	cmp	w0, #0x0
  4330c4:	b.ge	4330d8 <session_create_fifo+0x160>  // b.tcont
  4330c8:	bl	407960 <__errno_location@plt>
  4330cc:	ldr	w0, [x0]
  4330d0:	neg	w0, w0
  4330d4:	b	433194 <session_create_fifo+0x21c>
  4330d8:	ldr	x0, [sp, #24]
  4330dc:	ldr	x0, [x0, #176]
  4330e0:	cmp	x0, #0x0
  4330e4:	b.ne	43315c <session_create_fifo+0x1e4>  // b.any
  4330e8:	ldr	x0, [sp, #24]
  4330ec:	ldr	x0, [x0]
  4330f0:	ldr	x6, [x0]
  4330f4:	ldr	x0, [sp, #24]
  4330f8:	add	x1, x0, #0xb0
  4330fc:	ldr	x0, [sp, #24]
  433100:	ldr	w2, [x0, #160]
  433104:	ldr	x5, [sp, #24]
  433108:	adrp	x0, 432000 <session_stop_scope+0x264>
  43310c:	add	x4, x0, #0xea8
  433110:	mov	w3, #0x0                   	// #0
  433114:	mov	x0, x6
  433118:	bl	407eb0 <sd_event_add_io@plt>
  43311c:	str	w0, [sp, #44]
  433120:	ldr	w0, [sp, #44]
  433124:	cmp	w0, #0x0
  433128:	b.ge	433134 <session_create_fifo+0x1bc>  // b.tcont
  43312c:	ldr	w0, [sp, #44]
  433130:	b	433194 <session_create_fifo+0x21c>
  433134:	ldr	x0, [sp, #24]
  433138:	ldr	x0, [x0, #176]
  43313c:	mov	x1, #0xfffffffffffffff6    	// #-10
  433140:	bl	407a30 <sd_event_source_set_priority@plt>
  433144:	str	w0, [sp, #44]
  433148:	ldr	w0, [sp, #44]
  43314c:	cmp	w0, #0x0
  433150:	b.ge	43315c <session_create_fifo+0x1e4>  // b.tcont
  433154:	ldr	w0, [sp, #44]
  433158:	b	433194 <session_create_fifo+0x21c>
  43315c:	ldr	x0, [sp, #24]
  433160:	ldr	x0, [x0, #168]
  433164:	mov	w1, #0x801                 	// #2049
  433168:	movk	w1, #0x8, lsl #16
  43316c:	bl	4082c0 <open64@plt>
  433170:	str	w0, [sp, #44]
  433174:	ldr	w0, [sp, #44]
  433178:	cmp	w0, #0x0
  43317c:	b.ge	433190 <session_create_fifo+0x218>  // b.tcont
  433180:	bl	407960 <__errno_location@plt>
  433184:	ldr	w0, [x0]
  433188:	neg	w0, w0
  43318c:	b	433194 <session_create_fifo+0x21c>
  433190:	ldr	w0, [sp, #44]
  433194:	ldp	x29, x30, [sp], #48
  433198:	ret

000000000043319c <session_remove_fifo>:
  43319c:	stp	x29, x30, [sp, #-32]!
  4331a0:	mov	x29, sp
  4331a4:	str	x0, [sp, #24]
  4331a8:	ldr	x0, [sp, #24]
  4331ac:	cmp	x0, #0x0
  4331b0:	cset	w0, eq  // eq = none
  4331b4:	and	w0, w0, #0xff
  4331b8:	and	x0, x0, #0xff
  4331bc:	cmp	x0, #0x0
  4331c0:	b.eq	4331ec <session_remove_fifo+0x50>  // b.none
  4331c4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4331c8:	add	x1, x0, #0x5e3
  4331cc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4331d0:	add	x4, x0, #0x378
  4331d4:	mov	w3, #0x43b                 	// #1083
  4331d8:	mov	x2, x1
  4331dc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4331e0:	add	x1, x0, #0x648
  4331e4:	mov	w0, #0x0                   	// #0
  4331e8:	bl	407650 <log_assert_failed_realm@plt>
  4331ec:	ldr	x0, [sp, #24]
  4331f0:	ldr	x0, [x0, #176]
  4331f4:	bl	407550 <sd_event_source_unref@plt>
  4331f8:	mov	x1, x0
  4331fc:	ldr	x0, [sp, #24]
  433200:	str	x1, [x0, #176]
  433204:	ldr	x0, [sp, #24]
  433208:	ldr	w0, [x0, #160]
  43320c:	bl	4075e0 <safe_close@plt>
  433210:	mov	w1, w0
  433214:	ldr	x0, [sp, #24]
  433218:	str	w1, [x0, #160]
  43321c:	ldr	x0, [sp, #24]
  433220:	ldr	x0, [x0, #168]
  433224:	cmp	x0, #0x0
  433228:	b.eq	433250 <session_remove_fifo+0xb4>  // b.none
  43322c:	ldr	x0, [sp, #24]
  433230:	ldr	x0, [x0, #168]
  433234:	bl	4070c0 <unlink@plt>
  433238:	ldr	x0, [sp, #24]
  43323c:	ldr	x0, [x0, #168]
  433240:	bl	42ed94 <mfree>
  433244:	mov	x1, x0
  433248:	ldr	x0, [sp, #24]
  43324c:	str	x1, [x0, #168]
  433250:	nop
  433254:	ldp	x29, x30, [sp], #32
  433258:	ret

000000000043325c <session_may_gc>:
  43325c:	stp	x29, x30, [sp, #-128]!
  433260:	mov	x29, sp
  433264:	stp	x19, x20, [sp, #16]
  433268:	stp	x21, x22, [sp, #32]
  43326c:	str	x0, [sp, #56]
  433270:	strb	w1, [sp, #55]
  433274:	mov	w19, #0x0                   	// #0
  433278:	adrp	x0, 460000 <wordlist.10364+0x370>
  43327c:	ldr	x0, [x0, #4024]
  433280:	ldr	x1, [x0]
  433284:	str	x1, [sp, #120]
  433288:	mov	x1, #0x0                   	// #0
  43328c:	ldr	x0, [sp, #56]
  433290:	cmp	x0, #0x0
  433294:	cset	w0, eq  // eq = none
  433298:	and	w0, w0, #0xff
  43329c:	and	x0, x0, #0xff
  4332a0:	cmp	x0, #0x0
  4332a4:	b.eq	4332d0 <session_may_gc+0x74>  // b.none
  4332a8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4332ac:	add	x1, x0, #0x5e3
  4332b0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4332b4:	add	x4, x0, #0x390
  4332b8:	mov	w3, #0x449                 	// #1097
  4332bc:	mov	x2, x1
  4332c0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4332c4:	add	x1, x0, #0x648
  4332c8:	mov	w0, #0x0                   	// #0
  4332cc:	bl	407650 <log_assert_failed_realm@plt>
  4332d0:	ldrb	w0, [sp, #55]
  4332d4:	cmp	w0, #0x0
  4332d8:	b.eq	433304 <session_may_gc+0xa8>  // b.none
  4332dc:	ldr	x0, [sp, #56]
  4332e0:	ldrb	w0, [x0, #209]
  4332e4:	ubfx	x0, x0, #1, #1
  4332e8:	and	w0, w0, #0xff
  4332ec:	eor	w0, w0, #0x1
  4332f0:	and	w0, w0, #0xff
  4332f4:	cmp	w0, #0x0
  4332f8:	b.eq	433304 <session_may_gc+0xa8>  // b.none
  4332fc:	mov	w19, #0x1                   	// #1
  433300:	b	43356c <session_may_gc+0x310>
  433304:	ldr	x0, [sp, #56]
  433308:	ldr	x0, [x0, #40]
  43330c:	cmp	x0, #0x0
  433310:	b.ne	43331c <session_may_gc+0xc0>  // b.any
  433314:	mov	w19, #0x1                   	// #1
  433318:	b	43356c <session_may_gc+0x310>
  43331c:	ldr	x0, [sp, #56]
  433320:	ldr	w0, [x0, #160]
  433324:	cmp	w0, #0x0
  433328:	b.lt	433348 <session_may_gc+0xec>  // b.tstop
  43332c:	ldr	x0, [sp, #56]
  433330:	ldr	w0, [x0, #160]
  433334:	bl	407ba0 <pipe_eof@plt>
  433338:	cmp	w0, #0x0
  43333c:	b.gt	433348 <session_may_gc+0xec>
  433340:	mov	w19, #0x0                   	// #0
  433344:	b	43356c <session_may_gc+0x310>
  433348:	ldr	x0, [sp, #56]
  43334c:	ldr	x0, [x0, #128]
  433350:	cmp	x0, #0x0
  433354:	b.eq	433458 <session_may_gc+0x1fc>  // b.none
  433358:	str	xzr, [sp, #96]
  43335c:	str	xzr, [sp, #104]
  433360:	str	wzr, [sp, #112]
  433364:	ldr	x0, [sp, #56]
  433368:	ldr	x3, [x0]
  43336c:	ldr	x0, [sp, #56]
  433370:	ldr	x0, [x0, #128]
  433374:	add	x1, sp, #0x60
  433378:	mov	x2, x1
  43337c:	mov	x1, x0
  433380:	mov	x0, x3
  433384:	bl	4225b4 <manager_job_is_active>
  433388:	str	w0, [sp, #68]
  43338c:	ldr	w0, [sp, #68]
  433390:	cmp	w0, #0x0
  433394:	b.ge	43342c <session_may_gc+0x1d0>  // b.tcont
  433398:	mov	w0, #0x7                   	// #7
  43339c:	str	w0, [sp, #72]
  4333a0:	ldr	w0, [sp, #68]
  4333a4:	str	w0, [sp, #76]
  4333a8:	str	wzr, [sp, #80]
  4333ac:	ldr	w0, [sp, #80]
  4333b0:	bl	4083e0 <log_get_max_level_realm@plt>
  4333b4:	mov	w1, w0
  4333b8:	ldr	w0, [sp, #72]
  4333bc:	and	w0, w0, #0x7
  4333c0:	cmp	w1, w0
  4333c4:	b.lt	433424 <session_may_gc+0x1c8>  // b.tstop
  4333c8:	ldr	w0, [sp, #80]
  4333cc:	lsl	w1, w0, #10
  4333d0:	ldr	w0, [sp, #72]
  4333d4:	orr	w20, w1, w0
  4333d8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4333dc:	add	x21, x0, #0x5e3
  4333e0:	ldr	x0, [sp, #56]
  4333e4:	ldr	x22, [x0, #128]
  4333e8:	add	x0, sp, #0x60
  4333ec:	ldr	w1, [sp, #68]
  4333f0:	bl	407000 <bus_error_message@plt>
  4333f4:	mov	x7, x0
  4333f8:	mov	x6, x22
  4333fc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433400:	add	x5, x0, #0xe60
  433404:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433408:	add	x4, x0, #0x3a0
  43340c:	mov	w3, #0x45b                 	// #1115
  433410:	mov	x2, x21
  433414:	ldr	w1, [sp, #76]
  433418:	mov	w0, w20
  43341c:	bl	407d60 <log_internal_realm@plt>
  433420:	b	43342c <session_may_gc+0x1d0>
  433424:	ldr	w0, [sp, #76]
  433428:	cmp	w0, #0x0
  43342c:	ldr	w0, [sp, #68]
  433430:	cmp	w0, #0x0
  433434:	b.eq	433444 <session_may_gc+0x1e8>  // b.none
  433438:	mov	w19, #0x0                   	// #0
  43343c:	mov	w20, #0x0                   	// #0
  433440:	b	433448 <session_may_gc+0x1ec>
  433444:	mov	w20, #0x1                   	// #1
  433448:	add	x0, sp, #0x60
  43344c:	bl	407c80 <sd_bus_error_free@plt>
  433450:	cmp	w20, #0x1
  433454:	b.ne	43356c <session_may_gc+0x310>  // b.any
  433458:	ldr	x0, [sp, #56]
  43345c:	ldr	x0, [x0, #120]
  433460:	cmp	x0, #0x0
  433464:	b.eq	433568 <session_may_gc+0x30c>  // b.none
  433468:	str	xzr, [sp, #96]
  43346c:	str	xzr, [sp, #104]
  433470:	str	wzr, [sp, #112]
  433474:	ldr	x0, [sp, #56]
  433478:	ldr	x3, [x0]
  43347c:	ldr	x0, [sp, #56]
  433480:	ldr	x0, [x0, #120]
  433484:	add	x1, sp, #0x60
  433488:	mov	x2, x1
  43348c:	mov	x1, x0
  433490:	mov	x0, x3
  433494:	bl	422320 <manager_unit_is_active>
  433498:	str	w0, [sp, #68]
  43349c:	ldr	w0, [sp, #68]
  4334a0:	cmp	w0, #0x0
  4334a4:	b.ge	43353c <session_may_gc+0x2e0>  // b.tcont
  4334a8:	mov	w0, #0x7                   	// #7
  4334ac:	str	w0, [sp, #84]
  4334b0:	ldr	w0, [sp, #68]
  4334b4:	str	w0, [sp, #88]
  4334b8:	str	wzr, [sp, #92]
  4334bc:	ldr	w0, [sp, #92]
  4334c0:	bl	4083e0 <log_get_max_level_realm@plt>
  4334c4:	mov	w1, w0
  4334c8:	ldr	w0, [sp, #84]
  4334cc:	and	w0, w0, #0x7
  4334d0:	cmp	w1, w0
  4334d4:	b.lt	433534 <session_may_gc+0x2d8>  // b.tstop
  4334d8:	ldr	w0, [sp, #92]
  4334dc:	lsl	w1, w0, #10
  4334e0:	ldr	w0, [sp, #84]
  4334e4:	orr	w20, w1, w0
  4334e8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4334ec:	add	x21, x0, #0x5e3
  4334f0:	ldr	x0, [sp, #56]
  4334f4:	ldr	x22, [x0, #120]
  4334f8:	add	x0, sp, #0x60
  4334fc:	ldr	w1, [sp, #68]
  433500:	bl	407000 <bus_error_message@plt>
  433504:	mov	x7, x0
  433508:	mov	x6, x22
  43350c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433510:	add	x5, x0, #0xea0
  433514:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433518:	add	x4, x0, #0x3a0
  43351c:	mov	w3, #0x465                 	// #1125
  433520:	mov	x2, x21
  433524:	ldr	w1, [sp, #88]
  433528:	mov	w0, w20
  43352c:	bl	407d60 <log_internal_realm@plt>
  433530:	b	43353c <session_may_gc+0x2e0>
  433534:	ldr	w0, [sp, #88]
  433538:	cmp	w0, #0x0
  43353c:	ldr	w0, [sp, #68]
  433540:	cmp	w0, #0x0
  433544:	b.eq	433554 <session_may_gc+0x2f8>  // b.none
  433548:	mov	w19, #0x0                   	// #0
  43354c:	mov	w20, #0x0                   	// #0
  433550:	b	433558 <session_may_gc+0x2fc>
  433554:	mov	w20, #0x1                   	// #1
  433558:	add	x0, sp, #0x60
  43355c:	bl	407c80 <sd_bus_error_free@plt>
  433560:	cmp	w20, #0x1
  433564:	b.ne	43356c <session_may_gc+0x310>  // b.any
  433568:	mov	w19, #0x1                   	// #1
  43356c:	mov	w1, w19
  433570:	adrp	x0, 460000 <wordlist.10364+0x370>
  433574:	ldr	x0, [x0, #4024]
  433578:	ldr	x2, [sp, #120]
  43357c:	ldr	x0, [x0]
  433580:	eor	x0, x2, x0
  433584:	cmp	x0, #0x0
  433588:	b.eq	433590 <session_may_gc+0x334>  // b.none
  43358c:	bl	407b20 <__stack_chk_fail@plt>
  433590:	mov	w0, w1
  433594:	ldp	x19, x20, [sp, #16]
  433598:	ldp	x21, x22, [sp, #32]
  43359c:	ldp	x29, x30, [sp], #128
  4335a0:	ret

00000000004335a4 <session_add_to_gc_queue>:
  4335a4:	stp	x29, x30, [sp, #-48]!
  4335a8:	mov	x29, sp
  4335ac:	str	x0, [sp, #24]
  4335b0:	ldr	x0, [sp, #24]
  4335b4:	cmp	x0, #0x0
  4335b8:	cset	w0, eq  // eq = none
  4335bc:	and	w0, w0, #0xff
  4335c0:	and	x0, x0, #0xff
  4335c4:	cmp	x0, #0x0
  4335c8:	b.eq	4335f4 <session_add_to_gc_queue+0x50>  // b.none
  4335cc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4335d0:	add	x1, x0, #0x5e3
  4335d4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4335d8:	add	x4, x0, #0x3b0
  4335dc:	mov	w3, #0x46e                 	// #1134
  4335e0:	mov	x2, x1
  4335e4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4335e8:	add	x1, x0, #0x648
  4335ec:	mov	w0, #0x0                   	// #0
  4335f0:	bl	407650 <log_assert_failed_realm@plt>
  4335f4:	ldr	x0, [sp, #24]
  4335f8:	ldrb	w0, [x0, #209]
  4335fc:	and	w0, w0, #0x1
  433600:	and	w0, w0, #0xff
  433604:	cmp	w0, #0x0
  433608:	b.ne	4336c0 <session_add_to_gc_queue+0x11c>  // b.any
  43360c:	ldr	x0, [sp, #24]
  433610:	ldr	x0, [x0]
  433614:	add	x0, x0, #0x58
  433618:	str	x0, [sp, #32]
  43361c:	ldr	x0, [sp, #24]
  433620:	str	x0, [sp, #40]
  433624:	ldr	x0, [sp, #40]
  433628:	cmp	x0, #0x0
  43362c:	cset	w0, eq  // eq = none
  433630:	and	w0, w0, #0xff
  433634:	and	x0, x0, #0xff
  433638:	cmp	x0, #0x0
  43363c:	b.eq	433668 <session_add_to_gc_queue+0xc4>  // b.none
  433640:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433644:	add	x1, x0, #0x5e3
  433648:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43364c:	add	x4, x0, #0x3b0
  433650:	mov	w3, #0x473                 	// #1139
  433654:	mov	x2, x1
  433658:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  43365c:	add	x1, x0, #0x630
  433660:	mov	w0, #0x0                   	// #0
  433664:	bl	407650 <log_assert_failed_realm@plt>
  433668:	ldr	x0, [sp, #32]
  43366c:	ldr	x1, [x0]
  433670:	ldr	x0, [sp, #40]
  433674:	str	x1, [x0, #288]
  433678:	ldr	x0, [sp, #40]
  43367c:	ldr	x0, [x0, #288]
  433680:	cmp	x0, #0x0
  433684:	b.eq	433698 <session_add_to_gc_queue+0xf4>  // b.none
  433688:	ldr	x0, [sp, #40]
  43368c:	ldr	x0, [x0, #288]
  433690:	ldr	x1, [sp, #40]
  433694:	str	x1, [x0, #296]
  433698:	ldr	x0, [sp, #40]
  43369c:	str	xzr, [x0, #296]
  4336a0:	ldr	x0, [sp, #32]
  4336a4:	ldr	x1, [sp, #40]
  4336a8:	str	x1, [x0]
  4336ac:	ldr	x0, [sp, #24]
  4336b0:	ldrb	w1, [x0, #209]
  4336b4:	orr	w1, w1, #0x1
  4336b8:	strb	w1, [x0, #209]
  4336bc:	b	4336c4 <session_add_to_gc_queue+0x120>
  4336c0:	nop
  4336c4:	ldp	x29, x30, [sp], #48
  4336c8:	ret

00000000004336cc <session_get_state>:
  4336cc:	stp	x29, x30, [sp, #-32]!
  4336d0:	mov	x29, sp
  4336d4:	str	x0, [sp, #24]
  4336d8:	ldr	x0, [sp, #24]
  4336dc:	cmp	x0, #0x0
  4336e0:	cset	w0, eq  // eq = none
  4336e4:	and	w0, w0, #0xff
  4336e8:	and	x0, x0, #0xff
  4336ec:	cmp	x0, #0x0
  4336f0:	b.eq	43371c <session_get_state+0x50>  // b.none
  4336f4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4336f8:	add	x1, x0, #0x5e3
  4336fc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433700:	add	x4, x0, #0x3c8
  433704:	mov	w3, #0x478                 	// #1144
  433708:	mov	x2, x1
  43370c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433710:	add	x1, x0, #0x648
  433714:	mov	w0, #0x0                   	// #0
  433718:	bl	407650 <log_assert_failed_realm@plt>
  43371c:	ldr	x0, [sp, #24]
  433720:	ldrb	w0, [x0, #209]
  433724:	and	w0, w0, #0x4
  433728:	and	w0, w0, #0xff
  43372c:	cmp	w0, #0x0
  433730:	b.ne	433744 <session_get_state+0x78>  // b.any
  433734:	ldr	x0, [sp, #24]
  433738:	ldr	x0, [x0, #224]
  43373c:	cmp	x0, #0x0
  433740:	b.eq	43374c <session_get_state+0x80>  // b.none
  433744:	mov	w0, #0x3                   	// #3
  433748:	b	433794 <session_get_state+0xc8>
  43374c:	ldr	x0, [sp, #24]
  433750:	ldr	x0, [x0, #128]
  433754:	cmp	x0, #0x0
  433758:	b.ne	43376c <session_get_state+0xa0>  // b.any
  43375c:	ldr	x0, [sp, #24]
  433760:	ldr	w0, [x0, #160]
  433764:	cmp	w0, #0x0
  433768:	b.ge	433774 <session_get_state+0xa8>  // b.tcont
  43376c:	mov	w0, #0x0                   	// #0
  433770:	b	433794 <session_get_state+0xc8>
  433774:	ldr	x0, [sp, #24]
  433778:	bl	4326f4 <session_is_active>
  43377c:	and	w0, w0, #0xff
  433780:	cmp	w0, #0x0
  433784:	b.eq	433790 <session_get_state+0xc4>  // b.none
  433788:	mov	w0, #0x2                   	// #2
  43378c:	b	433794 <session_get_state+0xc8>
  433790:	mov	w0, #0x1                   	// #1
  433794:	ldp	x29, x30, [sp], #32
  433798:	ret

000000000043379c <session_kill>:
  43379c:	stp	x29, x30, [sp, #-32]!
  4337a0:	mov	x29, sp
  4337a4:	str	x0, [sp, #24]
  4337a8:	str	w1, [sp, #20]
  4337ac:	str	w2, [sp, #16]
  4337b0:	ldr	x0, [sp, #24]
  4337b4:	cmp	x0, #0x0
  4337b8:	cset	w0, eq  // eq = none
  4337bc:	and	w0, w0, #0xff
  4337c0:	and	x0, x0, #0xff
  4337c4:	cmp	x0, #0x0
  4337c8:	b.eq	4337f4 <session_kill+0x58>  // b.none
  4337cc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4337d0:	add	x1, x0, #0x5e3
  4337d4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4337d8:	add	x4, x0, #0x3e0
  4337dc:	mov	w3, #0x488                 	// #1160
  4337e0:	mov	x2, x1
  4337e4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4337e8:	add	x1, x0, #0x648
  4337ec:	mov	w0, #0x0                   	// #0
  4337f0:	bl	407650 <log_assert_failed_realm@plt>
  4337f4:	ldr	x0, [sp, #24]
  4337f8:	ldr	x0, [x0, #120]
  4337fc:	cmp	x0, #0x0
  433800:	b.ne	43380c <session_kill+0x70>  // b.any
  433804:	mov	w0, #0xfffffffd            	// #-3
  433808:	b	433834 <session_kill+0x98>
  43380c:	ldr	x0, [sp, #24]
  433810:	ldr	x5, [x0]
  433814:	ldr	x0, [sp, #24]
  433818:	ldr	x0, [x0, #120]
  43381c:	mov	x4, #0x0                   	// #0
  433820:	ldr	w3, [sp, #16]
  433824:	ldr	w2, [sp, #20]
  433828:	mov	x1, x0
  43382c:	mov	x0, x5
  433830:	bl	4221f8 <manager_kill_unit>
  433834:	ldp	x29, x30, [sp], #32
  433838:	ret

000000000043383c <session_open_vt>:
  43383c:	stp	x29, x30, [sp, #-80]!
  433840:	mov	x29, sp
  433844:	str	x0, [sp, #24]
  433848:	adrp	x0, 460000 <wordlist.10364+0x370>
  43384c:	ldr	x0, [x0, #4024]
  433850:	ldr	x1, [x0]
  433854:	str	x1, [sp, #72]
  433858:	mov	x1, #0x0                   	// #0
  43385c:	ldr	x0, [sp, #24]
  433860:	ldr	w0, [x0, #144]
  433864:	cmp	w0, #0x0
  433868:	b.ne	433874 <session_open_vt+0x38>  // b.any
  43386c:	mov	w0, #0xffffffed            	// #-19
  433870:	b	433984 <session_open_vt+0x148>
  433874:	ldr	x0, [sp, #24]
  433878:	ldr	w0, [x0, #148]
  43387c:	cmp	w0, #0x0
  433880:	b.lt	433890 <session_open_vt+0x54>  // b.tstop
  433884:	ldr	x0, [sp, #24]
  433888:	ldr	w0, [x0, #148]
  43388c:	b	433984 <session_open_vt+0x148>
  433890:	ldr	x0, [sp, #24]
  433894:	ldr	w0, [x0, #144]
  433898:	add	x3, sp, #0x30
  43389c:	mov	w2, w0
  4338a0:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4338a4:	add	x1, x0, #0xee0
  4338a8:	mov	x0, x3
  4338ac:	bl	408190 <sprintf@plt>
  4338b0:	add	x0, sp, #0x30
  4338b4:	mov	w1, #0x902                 	// #2306
  4338b8:	movk	w1, #0x8, lsl #16
  4338bc:	bl	407d20 <open_terminal@plt>
  4338c0:	mov	w1, w0
  4338c4:	ldr	x0, [sp, #24]
  4338c8:	str	w1, [x0, #148]
  4338cc:	ldr	x0, [sp, #24]
  4338d0:	ldr	w0, [x0, #148]
  4338d4:	cmp	w0, #0x0
  4338d8:	b.ge	43397c <session_open_vt+0x140>  // b.tcont
  4338dc:	mov	w0, #0x3                   	// #3
  4338e0:	str	w0, [sp, #36]
  4338e4:	ldr	x0, [sp, #24]
  4338e8:	ldr	w0, [x0, #148]
  4338ec:	str	w0, [sp, #40]
  4338f0:	str	wzr, [sp, #44]
  4338f4:	ldr	w0, [sp, #44]
  4338f8:	bl	4083e0 <log_get_max_level_realm@plt>
  4338fc:	mov	w1, w0
  433900:	ldr	w0, [sp, #36]
  433904:	and	w0, w0, #0x7
  433908:	cmp	w1, w0
  43390c:	b.lt	433964 <session_open_vt+0x128>  // b.tstop
  433910:	ldr	w0, [sp, #44]
  433914:	lsl	w1, w0, #10
  433918:	ldr	w0, [sp, #36]
  43391c:	orr	w8, w1, w0
  433920:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433924:	add	x1, x0, #0x5e3
  433928:	ldr	x0, [sp, #24]
  43392c:	ldr	x2, [x0, #8]
  433930:	add	x0, sp, #0x30
  433934:	mov	x7, x2
  433938:	mov	x6, x0
  43393c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433940:	add	x5, x0, #0xef0
  433944:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433948:	add	x4, x0, #0x3f0
  43394c:	mov	w3, #0x49c                 	// #1180
  433950:	mov	x2, x1
  433954:	ldr	w1, [sp, #40]
  433958:	mov	w0, w8
  43395c:	bl	407d60 <log_internal_realm@plt>
  433960:	b	433984 <session_open_vt+0x148>
  433964:	ldr	w0, [sp, #40]
  433968:	cmp	w0, #0x0
  43396c:	cneg	w0, w0, lt  // lt = tstop
  433970:	and	w0, w0, #0xff
  433974:	neg	w0, w0
  433978:	b	433984 <session_open_vt+0x148>
  43397c:	ldr	x0, [sp, #24]
  433980:	ldr	w0, [x0, #148]
  433984:	mov	w1, w0
  433988:	adrp	x0, 460000 <wordlist.10364+0x370>
  43398c:	ldr	x0, [x0, #4024]
  433990:	ldr	x2, [sp, #72]
  433994:	ldr	x0, [x0]
  433998:	eor	x0, x2, x0
  43399c:	cmp	x0, #0x0
  4339a0:	b.eq	4339a8 <session_open_vt+0x16c>  // b.none
  4339a4:	bl	407b20 <__stack_chk_fail@plt>
  4339a8:	mov	w0, w1
  4339ac:	ldp	x29, x30, [sp], #80
  4339b0:	ret

00000000004339b4 <session_prepare_vt>:
  4339b4:	stp	x29, x30, [sp, #-112]!
  4339b8:	mov	x29, sp
  4339bc:	str	x0, [sp, #24]
  4339c0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4339c4:	ldr	x0, [x0, #4024]
  4339c8:	ldr	x1, [x0]
  4339cc:	str	x1, [sp, #104]
  4339d0:	mov	x1, #0x0                   	// #0
  4339d4:	str	xzr, [sp, #96]
  4339d8:	ldr	x0, [sp, #24]
  4339dc:	ldr	w0, [x0, #144]
  4339e0:	cmp	w0, #0x0
  4339e4:	b.ne	4339f0 <session_prepare_vt+0x3c>  // b.any
  4339e8:	mov	w0, #0x0                   	// #0
  4339ec:	b	433d50 <session_prepare_vt+0x39c>
  4339f0:	ldr	x0, [sp, #24]
  4339f4:	bl	43383c <session_open_vt>
  4339f8:	str	w0, [sp, #44]
  4339fc:	ldr	w0, [sp, #44]
  433a00:	cmp	w0, #0x0
  433a04:	b.ge	433a10 <session_prepare_vt+0x5c>  // b.tcont
  433a08:	ldr	w0, [sp, #44]
  433a0c:	b	433d50 <session_prepare_vt+0x39c>
  433a10:	ldr	x0, [sp, #24]
  433a14:	ldr	x0, [x0, #40]
  433a18:	ldr	w0, [x0, #8]
  433a1c:	mov	w2, #0xffffffff            	// #-1
  433a20:	mov	w1, w0
  433a24:	ldr	w0, [sp, #44]
  433a28:	bl	408130 <fchown@plt>
  433a2c:	str	w0, [sp, #40]
  433a30:	ldr	w0, [sp, #40]
  433a34:	cmp	w0, #0x0
  433a38:	b.ge	433ad8 <session_prepare_vt+0x124>  // b.tcont
  433a3c:	mov	w0, #0x3                   	// #3
  433a40:	str	w0, [sp, #84]
  433a44:	bl	407960 <__errno_location@plt>
  433a48:	ldr	w0, [x0]
  433a4c:	str	w0, [sp, #88]
  433a50:	str	wzr, [sp, #92]
  433a54:	ldr	w0, [sp, #92]
  433a58:	bl	4083e0 <log_get_max_level_realm@plt>
  433a5c:	mov	w1, w0
  433a60:	ldr	w0, [sp, #84]
  433a64:	and	w0, w0, #0x7
  433a68:	cmp	w1, w0
  433a6c:	b.lt	433abc <session_prepare_vt+0x108>  // b.tstop
  433a70:	ldr	w0, [sp, #92]
  433a74:	lsl	w1, w0, #10
  433a78:	ldr	w0, [sp, #84]
  433a7c:	orr	w7, w1, w0
  433a80:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433a84:	add	x1, x0, #0x5e3
  433a88:	ldr	x0, [sp, #24]
  433a8c:	ldr	w0, [x0, #144]
  433a90:	mov	w6, w0
  433a94:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433a98:	add	x5, x0, #0xf18
  433a9c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433aa0:	add	x4, x0, #0x400
  433aa4:	mov	w3, #0x4ae                 	// #1198
  433aa8:	mov	x2, x1
  433aac:	ldr	w1, [sp, #88]
  433ab0:	mov	w0, w7
  433ab4:	bl	407d60 <log_internal_realm@plt>
  433ab8:	b	433ad0 <session_prepare_vt+0x11c>
  433abc:	ldr	w0, [sp, #88]
  433ac0:	cmp	w0, #0x0
  433ac4:	cneg	w0, w0, lt  // lt = tstop
  433ac8:	and	w0, w0, #0xff
  433acc:	neg	w0, w0
  433ad0:	str	w0, [sp, #40]
  433ad4:	b	433d44 <session_prepare_vt+0x390>
  433ad8:	mov	w2, #0x4                   	// #4
  433adc:	mov	x1, #0x4b45                	// #19269
  433ae0:	ldr	w0, [sp, #44]
  433ae4:	bl	407e30 <ioctl@plt>
  433ae8:	str	w0, [sp, #40]
  433aec:	ldr	w0, [sp, #40]
  433af0:	cmp	w0, #0x0
  433af4:	b.ge	433b94 <session_prepare_vt+0x1e0>  // b.tcont
  433af8:	mov	w0, #0x3                   	// #3
  433afc:	str	w0, [sp, #72]
  433b00:	bl	407960 <__errno_location@plt>
  433b04:	ldr	w0, [x0]
  433b08:	str	w0, [sp, #76]
  433b0c:	str	wzr, [sp, #80]
  433b10:	ldr	w0, [sp, #80]
  433b14:	bl	4083e0 <log_get_max_level_realm@plt>
  433b18:	mov	w1, w0
  433b1c:	ldr	w0, [sp, #72]
  433b20:	and	w0, w0, #0x7
  433b24:	cmp	w1, w0
  433b28:	b.lt	433b78 <session_prepare_vt+0x1c4>  // b.tstop
  433b2c:	ldr	w0, [sp, #80]
  433b30:	lsl	w1, w0, #10
  433b34:	ldr	w0, [sp, #72]
  433b38:	orr	w7, w1, w0
  433b3c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433b40:	add	x1, x0, #0x5e3
  433b44:	ldr	x0, [sp, #24]
  433b48:	ldr	w0, [x0, #144]
  433b4c:	mov	w6, w0
  433b50:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433b54:	add	x5, x0, #0xf40
  433b58:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433b5c:	add	x4, x0, #0x400
  433b60:	mov	w3, #0x4b6                 	// #1206
  433b64:	mov	x2, x1
  433b68:	ldr	w1, [sp, #76]
  433b6c:	mov	w0, w7
  433b70:	bl	407d60 <log_internal_realm@plt>
  433b74:	b	433b8c <session_prepare_vt+0x1d8>
  433b78:	ldr	w0, [sp, #76]
  433b7c:	cmp	w0, #0x0
  433b80:	cneg	w0, w0, lt  // lt = tstop
  433b84:	and	w0, w0, #0xff
  433b88:	neg	w0, w0
  433b8c:	str	w0, [sp, #40]
  433b90:	b	433d44 <session_prepare_vt+0x390>
  433b94:	mov	w2, #0x1                   	// #1
  433b98:	mov	x1, #0x4b3a                	// #19258
  433b9c:	ldr	w0, [sp, #44]
  433ba0:	bl	407e30 <ioctl@plt>
  433ba4:	str	w0, [sp, #40]
  433ba8:	ldr	w0, [sp, #40]
  433bac:	cmp	w0, #0x0
  433bb0:	b.ge	433c50 <session_prepare_vt+0x29c>  // b.tcont
  433bb4:	mov	w0, #0x3                   	// #3
  433bb8:	str	w0, [sp, #60]
  433bbc:	bl	407960 <__errno_location@plt>
  433bc0:	ldr	w0, [x0]
  433bc4:	str	w0, [sp, #64]
  433bc8:	str	wzr, [sp, #68]
  433bcc:	ldr	w0, [sp, #68]
  433bd0:	bl	4083e0 <log_get_max_level_realm@plt>
  433bd4:	mov	w1, w0
  433bd8:	ldr	w0, [sp, #60]
  433bdc:	and	w0, w0, #0x7
  433be0:	cmp	w1, w0
  433be4:	b.lt	433c34 <session_prepare_vt+0x280>  // b.tstop
  433be8:	ldr	w0, [sp, #68]
  433bec:	lsl	w1, w0, #10
  433bf0:	ldr	w0, [sp, #60]
  433bf4:	orr	w7, w1, w0
  433bf8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433bfc:	add	x1, x0, #0x5e3
  433c00:	ldr	x0, [sp, #24]
  433c04:	ldr	w0, [x0, #144]
  433c08:	mov	w6, w0
  433c0c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433c10:	add	x5, x0, #0xf68
  433c14:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433c18:	add	x4, x0, #0x400
  433c1c:	mov	w3, #0x4be                 	// #1214
  433c20:	mov	x2, x1
  433c24:	ldr	w1, [sp, #64]
  433c28:	mov	w0, w7
  433c2c:	bl	407d60 <log_internal_realm@plt>
  433c30:	b	433c48 <session_prepare_vt+0x294>
  433c34:	ldr	w0, [sp, #64]
  433c38:	cmp	w0, #0x0
  433c3c:	cneg	w0, w0, lt  // lt = tstop
  433c40:	and	w0, w0, #0xff
  433c44:	neg	w0, w0
  433c48:	str	w0, [sp, #40]
  433c4c:	b	433d44 <session_prepare_vt+0x390>
  433c50:	mov	w0, #0x1                   	// #1
  433c54:	strb	w0, [sp, #96]
  433c58:	bl	4075f0 <__libc_current_sigrtmin@plt>
  433c5c:	sxth	w0, w0
  433c60:	strh	w0, [sp, #98]
  433c64:	bl	4075f0 <__libc_current_sigrtmin@plt>
  433c68:	and	w0, w0, #0xffff
  433c6c:	add	w0, w0, #0x1
  433c70:	and	w0, w0, #0xffff
  433c74:	sxth	w0, w0
  433c78:	strh	w0, [sp, #100]
  433c7c:	add	x0, sp, #0x60
  433c80:	mov	x2, x0
  433c84:	mov	x1, #0x5602                	// #22018
  433c88:	ldr	w0, [sp, #44]
  433c8c:	bl	407e30 <ioctl@plt>
  433c90:	str	w0, [sp, #40]
  433c94:	ldr	w0, [sp, #40]
  433c98:	cmp	w0, #0x0
  433c9c:	b.ge	433d3c <session_prepare_vt+0x388>  // b.tcont
  433ca0:	mov	w0, #0x3                   	// #3
  433ca4:	str	w0, [sp, #48]
  433ca8:	bl	407960 <__errno_location@plt>
  433cac:	ldr	w0, [x0]
  433cb0:	str	w0, [sp, #52]
  433cb4:	str	wzr, [sp, #56]
  433cb8:	ldr	w0, [sp, #56]
  433cbc:	bl	4083e0 <log_get_max_level_realm@plt>
  433cc0:	mov	w1, w0
  433cc4:	ldr	w0, [sp, #48]
  433cc8:	and	w0, w0, #0x7
  433ccc:	cmp	w1, w0
  433cd0:	b.lt	433d20 <session_prepare_vt+0x36c>  // b.tstop
  433cd4:	ldr	w0, [sp, #56]
  433cd8:	lsl	w1, w0, #10
  433cdc:	ldr	w0, [sp, #48]
  433ce0:	orr	w7, w1, w0
  433ce4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433ce8:	add	x1, x0, #0x5e3
  433cec:	ldr	x0, [sp, #24]
  433cf0:	ldr	w0, [x0, #144]
  433cf4:	mov	w6, w0
  433cf8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433cfc:	add	x5, x0, #0xf98
  433d00:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433d04:	add	x4, x0, #0x400
  433d08:	mov	w3, #0x4cc                 	// #1228
  433d0c:	mov	x2, x1
  433d10:	ldr	w1, [sp, #52]
  433d14:	mov	w0, w7
  433d18:	bl	407d60 <log_internal_realm@plt>
  433d1c:	b	433d34 <session_prepare_vt+0x380>
  433d20:	ldr	w0, [sp, #52]
  433d24:	cmp	w0, #0x0
  433d28:	cneg	w0, w0, lt  // lt = tstop
  433d2c:	and	w0, w0, #0xff
  433d30:	neg	w0, w0
  433d34:	str	w0, [sp, #40]
  433d38:	b	433d44 <session_prepare_vt+0x390>
  433d3c:	mov	w0, #0x0                   	// #0
  433d40:	b	433d50 <session_prepare_vt+0x39c>
  433d44:	ldr	x0, [sp, #24]
  433d48:	bl	433d80 <session_restore_vt>
  433d4c:	ldr	w0, [sp, #40]
  433d50:	mov	w1, w0
  433d54:	adrp	x0, 460000 <wordlist.10364+0x370>
  433d58:	ldr	x0, [x0, #4024]
  433d5c:	ldr	x2, [sp, #104]
  433d60:	ldr	x0, [x0]
  433d64:	eor	x0, x2, x0
  433d68:	cmp	x0, #0x0
  433d6c:	b.eq	433d74 <session_prepare_vt+0x3c0>  // b.none
  433d70:	bl	407b20 <__stack_chk_fail@plt>
  433d74:	mov	w0, w1
  433d78:	ldp	x29, x30, [sp], #112
  433d7c:	ret

0000000000433d80 <session_restore_vt>:
  433d80:	stp	x29, x30, [sp, #-64]!
  433d84:	mov	x29, sp
  433d88:	str	x0, [sp, #24]
  433d8c:	ldr	x0, [sp, #24]
  433d90:	ldr	w0, [x0, #148]
  433d94:	bl	407600 <vt_restore@plt>
  433d98:	str	w0, [sp, #36]
  433d9c:	ldr	w0, [sp, #36]
  433da0:	cmn	w0, #0x5
  433da4:	b.ne	433df4 <session_restore_vt+0x74>  // b.any
  433da8:	ldr	x0, [sp, #24]
  433dac:	ldr	w0, [x0, #148]
  433db0:	str	w0, [sp, #40]
  433db4:	ldr	x0, [sp, #24]
  433db8:	mov	w1, #0xffffffff            	// #-1
  433dbc:	str	w1, [x0, #148]
  433dc0:	ldr	w0, [sp, #40]
  433dc4:	str	w0, [sp, #44]
  433dc8:	ldr	x0, [sp, #24]
  433dcc:	bl	43383c <session_open_vt>
  433dd0:	str	w0, [sp, #48]
  433dd4:	ldr	w0, [sp, #44]
  433dd8:	bl	4075e0 <safe_close@plt>
  433ddc:	ldr	w0, [sp, #48]
  433de0:	cmp	w0, #0x0
  433de4:	b.lt	433df4 <session_restore_vt+0x74>  // b.tstop
  433de8:	ldr	w0, [sp, #48]
  433dec:	bl	407600 <vt_restore@plt>
  433df0:	str	w0, [sp, #36]
  433df4:	ldr	w0, [sp, #36]
  433df8:	cmp	w0, #0x0
  433dfc:	b.ge	433e78 <session_restore_vt+0xf8>  // b.tcont
  433e00:	mov	w0, #0x4                   	// #4
  433e04:	str	w0, [sp, #52]
  433e08:	ldr	w0, [sp, #36]
  433e0c:	str	w0, [sp, #56]
  433e10:	str	wzr, [sp, #60]
  433e14:	ldr	w0, [sp, #60]
  433e18:	bl	4083e0 <log_get_max_level_realm@plt>
  433e1c:	mov	w1, w0
  433e20:	ldr	w0, [sp, #52]
  433e24:	and	w0, w0, #0x7
  433e28:	cmp	w1, w0
  433e2c:	b.lt	433e70 <session_restore_vt+0xf0>  // b.tstop
  433e30:	ldr	w0, [sp, #60]
  433e34:	lsl	w1, w0, #10
  433e38:	ldr	w0, [sp, #52]
  433e3c:	orr	w6, w1, w0
  433e40:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433e44:	add	x1, x0, #0x5e3
  433e48:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433e4c:	add	x5, x0, #0xfc0
  433e50:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433e54:	add	x4, x0, #0x418
  433e58:	mov	w3, #0x4f0                 	// #1264
  433e5c:	mov	x2, x1
  433e60:	ldr	w1, [sp, #56]
  433e64:	mov	w0, w6
  433e68:	bl	407d60 <log_internal_realm@plt>
  433e6c:	b	433e78 <session_restore_vt+0xf8>
  433e70:	ldr	w0, [sp, #56]
  433e74:	cmp	w0, #0x0
  433e78:	ldr	x0, [sp, #24]
  433e7c:	ldr	w0, [x0, #148]
  433e80:	bl	4075e0 <safe_close@plt>
  433e84:	mov	w1, w0
  433e88:	ldr	x0, [sp, #24]
  433e8c:	str	w1, [x0, #148]
  433e90:	nop
  433e94:	ldp	x29, x30, [sp], #64
  433e98:	ret

0000000000433e9c <session_leave_vt>:
  433e9c:	stp	x29, x30, [sp, #-48]!
  433ea0:	mov	x29, sp
  433ea4:	str	x0, [sp, #24]
  433ea8:	ldr	x0, [sp, #24]
  433eac:	cmp	x0, #0x0
  433eb0:	cset	w0, eq  // eq = none
  433eb4:	and	w0, w0, #0xff
  433eb8:	and	x0, x0, #0xff
  433ebc:	cmp	x0, #0x0
  433ec0:	b.eq	433eec <session_leave_vt+0x50>  // b.none
  433ec4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433ec8:	add	x1, x0, #0x5e3
  433ecc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433ed0:	add	x4, x0, #0x430
  433ed4:	mov	w3, #0x4f8                 	// #1272
  433ed8:	mov	x2, x1
  433edc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433ee0:	add	x1, x0, #0x648
  433ee4:	mov	w0, #0x0                   	// #0
  433ee8:	bl	407650 <log_assert_failed_realm@plt>
  433eec:	ldr	x0, [sp, #24]
  433ef0:	ldr	w0, [x0, #148]
  433ef4:	cmp	w0, #0x0
  433ef8:	b.lt	433fac <session_leave_vt+0x110>  // b.tstop
  433efc:	ldr	x0, [sp, #24]
  433f00:	bl	42e844 <session_device_pause_all>
  433f04:	ldr	x0, [sp, #24]
  433f08:	ldr	w0, [x0, #148]
  433f0c:	mov	w1, #0x0                   	// #0
  433f10:	bl	4079c0 <vt_release@plt>
  433f14:	str	w0, [sp, #32]
  433f18:	ldr	w0, [sp, #32]
  433f1c:	cmp	w0, #0x0
  433f20:	b.ge	433fb0 <session_leave_vt+0x114>  // b.tcont
  433f24:	mov	w0, #0x7                   	// #7
  433f28:	str	w0, [sp, #36]
  433f2c:	ldr	w0, [sp, #32]
  433f30:	str	w0, [sp, #40]
  433f34:	str	wzr, [sp, #44]
  433f38:	ldr	w0, [sp, #44]
  433f3c:	bl	4083e0 <log_get_max_level_realm@plt>
  433f40:	mov	w1, w0
  433f44:	ldr	w0, [sp, #36]
  433f48:	and	w0, w0, #0x7
  433f4c:	cmp	w1, w0
  433f50:	b.lt	433fa0 <session_leave_vt+0x104>  // b.tstop
  433f54:	ldr	w0, [sp, #44]
  433f58:	lsl	w1, w0, #10
  433f5c:	ldr	w0, [sp, #36]
  433f60:	orr	w7, w1, w0
  433f64:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433f68:	add	x1, x0, #0x5e3
  433f6c:	ldr	x0, [sp, #24]
  433f70:	ldr	x0, [x0, #8]
  433f74:	mov	x6, x0
  433f78:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433f7c:	add	x5, x0, #0xfe8
  433f80:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433f84:	add	x4, x0, #0x448
  433f88:	mov	w3, #0x50b                 	// #1291
  433f8c:	mov	x2, x1
  433f90:	ldr	w1, [sp, #40]
  433f94:	mov	w0, w7
  433f98:	bl	407d60 <log_internal_realm@plt>
  433f9c:	b	433fb0 <session_leave_vt+0x114>
  433fa0:	ldr	w0, [sp, #40]
  433fa4:	cmp	w0, #0x0
  433fa8:	b	433fb0 <session_leave_vt+0x114>
  433fac:	nop
  433fb0:	ldp	x29, x30, [sp], #48
  433fb4:	ret

0000000000433fb8 <session_is_controller>:
  433fb8:	stp	x29, x30, [sp, #-32]!
  433fbc:	mov	x29, sp
  433fc0:	str	x0, [sp, #24]
  433fc4:	str	x1, [sp, #16]
  433fc8:	ldr	x0, [sp, #24]
  433fcc:	cmp	x0, #0x0
  433fd0:	cset	w0, eq  // eq = none
  433fd4:	and	w0, w0, #0xff
  433fd8:	and	x0, x0, #0xff
  433fdc:	cmp	x0, #0x0
  433fe0:	b.eq	43400c <session_is_controller+0x54>  // b.none
  433fe4:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  433fe8:	add	x1, x0, #0x5e3
  433fec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  433ff0:	add	x4, x0, #0x460
  433ff4:	mov	w3, #0x50f                 	// #1295
  433ff8:	mov	x2, x1
  433ffc:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434000:	add	x1, x0, #0x648
  434004:	mov	w0, #0x0                   	// #0
  434008:	bl	407650 <log_assert_failed_realm@plt>
  43400c:	ldr	x0, [sp, #24]
  434010:	ldr	x0, [x0, #232]
  434014:	ldr	x1, [sp, #16]
  434018:	bl	42f01c <streq_ptr>
  43401c:	and	w0, w0, #0xff
  434020:	ldp	x29, x30, [sp], #32
  434024:	ret

0000000000434028 <session_release_controller>:
  434028:	stp	x29, x30, [sp, #-80]!
  43402c:	mov	x29, sp
  434030:	str	x19, [sp, #16]
  434034:	str	x0, [sp, #40]
  434038:	strb	w1, [sp, #39]
  43403c:	adrp	x0, 460000 <wordlist.10364+0x370>
  434040:	ldr	x0, [x0, #4024]
  434044:	ldr	x1, [x0]
  434048:	str	x1, [sp, #72]
  43404c:	mov	x1, #0x0                   	// #0
  434050:	str	xzr, [sp, #56]
  434054:	ldr	x0, [sp, #40]
  434058:	ldr	x0, [x0, #232]
  43405c:	cmp	x0, #0x0
  434060:	b.ne	43406c <session_release_controller+0x44>  // b.any
  434064:	mov	w19, #0x0                   	// #0
  434068:	b	4340e0 <session_release_controller+0xb8>
  43406c:	ldr	x0, [sp, #40]
  434070:	ldr	x0, [x0, #232]
  434074:	str	x0, [sp, #56]
  434078:	ldrb	w0, [sp, #39]
  43407c:	eor	w0, w0, #0x1
  434080:	and	w0, w0, #0xff
  434084:	cmp	w0, #0x0
  434088:	b.eq	4340a0 <session_release_controller+0x78>  // b.none
  43408c:	ldr	x0, [sp, #40]
  434090:	str	xzr, [x0, #232]
  434094:	b	4340a0 <session_release_controller+0x78>
  434098:	ldr	x0, [sp, #64]
  43409c:	bl	42e424 <session_device_free>
  4340a0:	ldr	x0, [sp, #40]
  4340a4:	ldr	x0, [x0, #240]
  4340a8:	bl	42eff8 <hashmap_first>
  4340ac:	str	x0, [sp, #64]
  4340b0:	ldr	x0, [sp, #64]
  4340b4:	cmp	x0, #0x0
  4340b8:	b.ne	434098 <session_release_controller+0x70>  // b.any
  4340bc:	ldr	x0, [sp, #40]
  4340c0:	str	xzr, [x0, #232]
  4340c4:	ldr	x0, [sp, #40]
  4340c8:	ldr	x0, [x0, #248]
  4340cc:	bl	4078e0 <sd_bus_track_unref@plt>
  4340d0:	mov	x1, x0
  4340d4:	ldr	x0, [sp, #40]
  4340d8:	str	x1, [x0, #248]
  4340dc:	mov	w19, #0x1                   	// #1
  4340e0:	add	x0, sp, #0x38
  4340e4:	bl	42edb4 <freep>
  4340e8:	cmp	w19, #0x1
  4340ec:	adrp	x0, 460000 <wordlist.10364+0x370>
  4340f0:	ldr	x0, [x0, #4024]
  4340f4:	ldr	x1, [sp, #72]
  4340f8:	ldr	x0, [x0]
  4340fc:	eor	x0, x1, x0
  434100:	cmp	x0, #0x0
  434104:	b.eq	43410c <session_release_controller+0xe4>  // b.none
  434108:	bl	407b20 <__stack_chk_fail@plt>
  43410c:	ldr	x19, [sp, #16]
  434110:	ldp	x29, x30, [sp], #80
  434114:	ret

0000000000434118 <on_bus_track>:
  434118:	stp	x29, x30, [sp, #-48]!
  43411c:	mov	x29, sp
  434120:	str	x0, [sp, #24]
  434124:	str	x1, [sp, #16]
  434128:	ldr	x0, [sp, #16]
  43412c:	str	x0, [sp, #40]
  434130:	ldr	x0, [sp, #24]
  434134:	cmp	x0, #0x0
  434138:	cset	w0, eq  // eq = none
  43413c:	and	w0, w0, #0xff
  434140:	and	x0, x0, #0xff
  434144:	cmp	x0, #0x0
  434148:	b.eq	434174 <on_bus_track+0x5c>  // b.none
  43414c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434150:	add	x1, x0, #0x5e3
  434154:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434158:	add	x4, x0, #0x478
  43415c:	mov	w3, #0x52d                 	// #1325
  434160:	mov	x2, x1
  434164:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434168:	add	x1, x0, #0x10
  43416c:	mov	w0, #0x0                   	// #0
  434170:	bl	407650 <log_assert_failed_realm@plt>
  434174:	ldr	x0, [sp, #40]
  434178:	cmp	x0, #0x0
  43417c:	cset	w0, eq  // eq = none
  434180:	and	w0, w0, #0xff
  434184:	and	x0, x0, #0xff
  434188:	cmp	x0, #0x0
  43418c:	b.eq	4341b8 <on_bus_track+0xa0>  // b.none
  434190:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434194:	add	x1, x0, #0x5e3
  434198:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43419c:	add	x4, x0, #0x478
  4341a0:	mov	w3, #0x52e                 	// #1326
  4341a4:	mov	x2, x1
  4341a8:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  4341ac:	add	x1, x0, #0x648
  4341b0:	mov	w0, #0x0                   	// #0
  4341b4:	bl	407650 <log_assert_failed_realm@plt>
  4341b8:	ldr	x0, [sp, #40]
  4341bc:	bl	434424 <session_drop_controller>
  4341c0:	mov	w0, #0x0                   	// #0
  4341c4:	ldp	x29, x30, [sp], #48
  4341c8:	ret

00000000004341cc <session_set_controller>:
  4341cc:	stp	x29, x30, [sp, #-96]!
  4341d0:	mov	x29, sp
  4341d4:	str	x19, [sp, #16]
  4341d8:	str	x0, [sp, #56]
  4341dc:	str	x1, [sp, #48]
  4341e0:	strb	w2, [sp, #47]
  4341e4:	strb	w3, [sp, #46]
  4341e8:	adrp	x0, 460000 <wordlist.10364+0x370>
  4341ec:	ldr	x0, [x0, #4024]
  4341f0:	ldr	x1, [x0]
  4341f4:	str	x1, [sp, #88]
  4341f8:	mov	x1, #0x0                   	// #0
  4341fc:	str	xzr, [sp, #72]
  434200:	ldr	x0, [sp, #56]
  434204:	cmp	x0, #0x0
  434208:	cset	w0, eq  // eq = none
  43420c:	and	w0, w0, #0xff
  434210:	and	x0, x0, #0xff
  434214:	cmp	x0, #0x0
  434218:	b.eq	434244 <session_set_controller+0x78>  // b.none
  43421c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434220:	add	x1, x0, #0x5e3
  434224:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434228:	add	x4, x0, #0x488
  43422c:	mov	w3, #0x539                 	// #1337
  434230:	mov	x2, x1
  434234:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434238:	add	x1, x0, #0x648
  43423c:	mov	w0, #0x0                   	// #0
  434240:	bl	407650 <log_assert_failed_realm@plt>
  434244:	ldr	x0, [sp, #48]
  434248:	cmp	x0, #0x0
  43424c:	cset	w0, eq  // eq = none
  434250:	and	w0, w0, #0xff
  434254:	and	x0, x0, #0xff
  434258:	cmp	x0, #0x0
  43425c:	b.eq	434288 <session_set_controller+0xbc>  // b.none
  434260:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434264:	add	x1, x0, #0x5e3
  434268:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43426c:	add	x4, x0, #0x488
  434270:	mov	w3, #0x53a                 	// #1338
  434274:	mov	x2, x1
  434278:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43427c:	add	x1, x0, #0x18
  434280:	mov	w0, #0x0                   	// #0
  434284:	bl	407650 <log_assert_failed_realm@plt>
  434288:	ldr	x1, [sp, #48]
  43428c:	ldr	x0, [sp, #56]
  434290:	bl	433fb8 <session_is_controller>
  434294:	and	w0, w0, #0xff
  434298:	cmp	w0, #0x0
  43429c:	b.eq	4342a8 <session_set_controller+0xdc>  // b.none
  4342a0:	mov	w19, #0x0                   	// #0
  4342a4:	b	4343e8 <session_set_controller+0x21c>
  4342a8:	ldr	x0, [sp, #56]
  4342ac:	ldr	x0, [x0, #232]
  4342b0:	cmp	x0, #0x0
  4342b4:	b.eq	4342d4 <session_set_controller+0x108>  // b.none
  4342b8:	ldrb	w0, [sp, #47]
  4342bc:	eor	w0, w0, #0x1
  4342c0:	and	w0, w0, #0xff
  4342c4:	cmp	w0, #0x0
  4342c8:	b.eq	4342d4 <session_set_controller+0x108>  // b.none
  4342cc:	mov	w19, #0xfffffff0            	// #-16
  4342d0:	b	4343e8 <session_set_controller+0x21c>
  4342d4:	ldr	x0, [sp, #48]
  4342d8:	bl	407f90 <strdup@plt>
  4342dc:	str	x0, [sp, #72]
  4342e0:	ldr	x0, [sp, #72]
  4342e4:	cmp	x0, #0x0
  4342e8:	b.ne	4342f4 <session_set_controller+0x128>  // b.any
  4342ec:	mov	w19, #0xfffffff4            	// #-12
  4342f0:	b	4343e8 <session_set_controller+0x21c>
  4342f4:	ldr	x0, [sp, #56]
  4342f8:	ldr	x0, [x0, #248]
  4342fc:	bl	4078e0 <sd_bus_track_unref@plt>
  434300:	mov	x1, x0
  434304:	ldr	x0, [sp, #56]
  434308:	str	x1, [x0, #248]
  43430c:	ldr	x0, [sp, #56]
  434310:	ldr	x0, [x0]
  434314:	ldr	x4, [x0, #8]
  434318:	ldr	x0, [sp, #56]
  43431c:	add	x1, x0, #0xf8
  434320:	ldr	x3, [sp, #56]
  434324:	adrp	x0, 434000 <session_is_controller+0x48>
  434328:	add	x2, x0, #0x118
  43432c:	mov	x0, x4
  434330:	bl	407190 <sd_bus_track_new@plt>
  434334:	str	w0, [sp, #68]
  434338:	ldr	w0, [sp, #68]
  43433c:	cmp	w0, #0x0
  434340:	b.ge	43434c <session_set_controller+0x180>  // b.tcont
  434344:	ldr	w19, [sp, #68]
  434348:	b	4343e8 <session_set_controller+0x21c>
  43434c:	ldr	x0, [sp, #56]
  434350:	ldr	x0, [x0, #248]
  434354:	ldr	x1, [sp, #72]
  434358:	bl	407520 <sd_bus_track_add_name@plt>
  43435c:	str	w0, [sp, #68]
  434360:	ldr	w0, [sp, #68]
  434364:	cmp	w0, #0x0
  434368:	b.ge	434374 <session_set_controller+0x1a8>  // b.tcont
  43436c:	ldr	w19, [sp, #68]
  434370:	b	4343e8 <session_set_controller+0x21c>
  434374:	ldrb	w0, [sp, #46]
  434378:	cmp	w0, #0x0
  43437c:	b.eq	4343b8 <session_set_controller+0x1ec>  // b.none
  434380:	ldr	x0, [sp, #56]
  434384:	bl	4339b4 <session_prepare_vt>
  434388:	str	w0, [sp, #68]
  43438c:	ldr	w0, [sp, #68]
  434390:	cmp	w0, #0x0
  434394:	b.ge	4343b8 <session_set_controller+0x1ec>  // b.tcont
  434398:	ldr	x0, [sp, #56]
  43439c:	ldr	x0, [x0, #248]
  4343a0:	bl	4078e0 <sd_bus_track_unref@plt>
  4343a4:	mov	x1, x0
  4343a8:	ldr	x0, [sp, #56]
  4343ac:	str	x1, [x0, #248]
  4343b0:	ldr	w19, [sp, #68]
  4343b4:	b	4343e8 <session_set_controller+0x21c>
  4343b8:	mov	w1, #0x1                   	// #1
  4343bc:	ldr	x0, [sp, #56]
  4343c0:	bl	434028 <session_release_controller>
  4343c4:	ldr	x0, [sp, #72]
  4343c8:	str	x0, [sp, #80]
  4343cc:	str	xzr, [sp, #72]
  4343d0:	ldr	x1, [sp, #80]
  4343d4:	ldr	x0, [sp, #56]
  4343d8:	str	x1, [x0, #232]
  4343dc:	ldr	x0, [sp, #56]
  4343e0:	bl	42fde0 <session_save>
  4343e4:	mov	w19, #0x0                   	// #0
  4343e8:	add	x0, sp, #0x48
  4343ec:	bl	42edb4 <freep>
  4343f0:	mov	w1, w19
  4343f4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4343f8:	ldr	x0, [x0, #4024]
  4343fc:	ldr	x2, [sp, #88]
  434400:	ldr	x0, [x0]
  434404:	eor	x0, x2, x0
  434408:	cmp	x0, #0x0
  43440c:	b.eq	434414 <session_set_controller+0x248>  // b.none
  434410:	bl	407b20 <__stack_chk_fail@plt>
  434414:	mov	w0, w1
  434418:	ldr	x19, [sp, #16]
  43441c:	ldp	x29, x30, [sp], #96
  434420:	ret

0000000000434424 <session_drop_controller>:
  434424:	stp	x29, x30, [sp, #-32]!
  434428:	mov	x29, sp
  43442c:	str	x0, [sp, #24]
  434430:	ldr	x0, [sp, #24]
  434434:	cmp	x0, #0x0
  434438:	cset	w0, eq  // eq = none
  43443c:	and	w0, w0, #0xff
  434440:	and	x0, x0, #0xff
  434444:	cmp	x0, #0x0
  434448:	b.eq	434474 <session_drop_controller+0x50>  // b.none
  43444c:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434450:	add	x1, x0, #0x5e3
  434454:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434458:	add	x4, x0, #0x4a0
  43445c:	mov	w3, #0x567                 	// #1383
  434460:	mov	x2, x1
  434464:	adrp	x0, 444000 <__PRETTY_FUNCTION__.12458>
  434468:	add	x1, x0, #0x648
  43446c:	mov	w0, #0x0                   	// #0
  434470:	bl	407650 <log_assert_failed_realm@plt>
  434474:	ldr	x0, [sp, #24]
  434478:	ldr	x0, [x0, #232]
  43447c:	cmp	x0, #0x0
  434480:	b.eq	4344bc <session_drop_controller+0x98>  // b.none
  434484:	ldr	x0, [sp, #24]
  434488:	ldr	x0, [x0, #248]
  43448c:	bl	4078e0 <sd_bus_track_unref@plt>
  434490:	mov	x1, x0
  434494:	ldr	x0, [sp, #24]
  434498:	str	x1, [x0, #248]
  43449c:	mov	w1, #0x0                   	// #0
  4344a0:	ldr	x0, [sp, #24]
  4344a4:	bl	434028 <session_release_controller>
  4344a8:	ldr	x0, [sp, #24]
  4344ac:	bl	42fde0 <session_save>
  4344b0:	ldr	x0, [sp, #24]
  4344b4:	bl	433d80 <session_restore_vt>
  4344b8:	b	4344c0 <session_drop_controller+0x9c>
  4344bc:	nop
  4344c0:	ldp	x29, x30, [sp], #32
  4344c4:	ret

00000000004344c8 <session_state_to_string>:
  4344c8:	sub	sp, sp, #0x10
  4344cc:	str	w0, [sp, #12]
  4344d0:	ldr	w0, [sp, #12]
  4344d4:	cmp	w0, #0x0
  4344d8:	b.lt	4344e8 <session_state_to_string+0x20>  // b.tstop
  4344dc:	ldr	w0, [sp, #12]
  4344e0:	cmp	w0, #0x3
  4344e4:	b.le	4344f0 <session_state_to_string+0x28>
  4344e8:	mov	x0, #0x0                   	// #0
  4344ec:	b	434500 <session_state_to_string+0x38>
  4344f0:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4344f4:	add	x0, x0, #0x440
  4344f8:	ldrsw	x1, [sp, #12]
  4344fc:	ldr	x0, [x0, x1, lsl #3]
  434500:	add	sp, sp, #0x10
  434504:	ret

0000000000434508 <session_type_to_string>:
  434508:	sub	sp, sp, #0x10
  43450c:	str	w0, [sp, #12]
  434510:	ldr	w0, [sp, #12]
  434514:	cmp	w0, #0x0
  434518:	b.lt	434528 <session_type_to_string+0x20>  // b.tstop
  43451c:	ldr	w0, [sp, #12]
  434520:	cmp	w0, #0x5
  434524:	b.le	434530 <session_type_to_string+0x28>
  434528:	mov	x0, #0x0                   	// #0
  43452c:	b	434540 <session_type_to_string+0x38>
  434530:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  434534:	add	x0, x0, #0x460
  434538:	ldrsw	x1, [sp, #12]
  43453c:	ldr	x0, [x0, x1, lsl #3]
  434540:	add	sp, sp, #0x10
  434544:	ret

0000000000434548 <session_type_from_string>:
  434548:	stp	x29, x30, [sp, #-32]!
  43454c:	mov	x29, sp
  434550:	str	x0, [sp, #24]
  434554:	ldr	x2, [sp, #24]
  434558:	mov	x1, #0x6                   	// #6
  43455c:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  434560:	add	x0, x0, #0x460
  434564:	bl	407ef0 <string_table_lookup@plt>
  434568:	ldp	x29, x30, [sp], #32
  43456c:	ret

0000000000434570 <session_class_to_string>:
  434570:	sub	sp, sp, #0x10
  434574:	str	w0, [sp, #12]
  434578:	ldr	w0, [sp, #12]
  43457c:	cmp	w0, #0x0
  434580:	b.lt	434590 <session_class_to_string+0x20>  // b.tstop
  434584:	ldr	w0, [sp, #12]
  434588:	cmp	w0, #0x3
  43458c:	b.le	434598 <session_class_to_string+0x28>
  434590:	mov	x0, #0x0                   	// #0
  434594:	b	4345a8 <session_class_to_string+0x38>
  434598:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  43459c:	add	x0, x0, #0x490
  4345a0:	ldrsw	x1, [sp, #12]
  4345a4:	ldr	x0, [x0, x1, lsl #3]
  4345a8:	add	sp, sp, #0x10
  4345ac:	ret

00000000004345b0 <session_class_from_string>:
  4345b0:	stp	x29, x30, [sp, #-32]!
  4345b4:	mov	x29, sp
  4345b8:	str	x0, [sp, #24]
  4345bc:	ldr	x2, [sp, #24]
  4345c0:	mov	x1, #0x4                   	// #4
  4345c4:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4345c8:	add	x0, x0, #0x490
  4345cc:	bl	407ef0 <string_table_lookup@plt>
  4345d0:	ldp	x29, x30, [sp], #32
  4345d4:	ret

00000000004345d8 <kill_who_from_string>:
  4345d8:	stp	x29, x30, [sp, #-32]!
  4345dc:	mov	x29, sp
  4345e0:	str	x0, [sp, #24]
  4345e4:	ldr	x2, [sp, #24]
  4345e8:	mov	x1, #0x2                   	// #2
  4345ec:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  4345f0:	add	x0, x0, #0x4b0
  4345f4:	bl	407ef0 <string_table_lookup@plt>
  4345f8:	ldp	x29, x30, [sp], #32
  4345fc:	ret

0000000000434600 <tty_validity_to_string>:
  434600:	sub	sp, sp, #0x10
  434604:	str	w0, [sp, #12]
  434608:	ldr	w0, [sp, #12]
  43460c:	cmp	w0, #0x0
  434610:	b.lt	434620 <tty_validity_to_string+0x20>  // b.tstop
  434614:	ldr	w0, [sp, #12]
  434618:	cmp	w0, #0x2
  43461c:	b.le	434628 <tty_validity_to_string+0x28>
  434620:	mov	x0, #0x0                   	// #0
  434624:	b	434638 <tty_validity_to_string+0x38>
  434628:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  43462c:	add	x0, x0, #0x4c0
  434630:	ldrsw	x1, [sp, #12]
  434634:	ldr	x0, [x0, x1, lsl #3]
  434638:	add	sp, sp, #0x10
  43463c:	ret

0000000000434640 <tty_validity_from_string>:
  434640:	stp	x29, x30, [sp, #-32]!
  434644:	mov	x29, sp
  434648:	str	x0, [sp, #24]
  43464c:	ldr	x2, [sp, #24]
  434650:	mov	x1, #0x3                   	// #3
  434654:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  434658:	add	x0, x0, #0x4c0
  43465c:	bl	407ef0 <string_table_lookup@plt>
  434660:	ldp	x29, x30, [sp], #32
  434664:	ret

0000000000434668 <freep>:
  434668:	stp	x29, x30, [sp, #-32]!
  43466c:	mov	x29, sp
  434670:	str	x0, [sp, #24]
  434674:	ldr	x0, [sp, #24]
  434678:	ldr	x0, [x0]
  43467c:	bl	408150 <free@plt>
  434680:	nop
  434684:	ldp	x29, x30, [sp], #32
  434688:	ret

000000000043468c <size_multiply_overflow>:
  43468c:	sub	sp, sp, #0x10
  434690:	str	x0, [sp, #8]
  434694:	str	x1, [sp]
  434698:	ldr	x0, [sp]
  43469c:	cmp	x0, #0x0
  4346a0:	cset	w0, ne  // ne = any
  4346a4:	and	w0, w0, #0xff
  4346a8:	and	x0, x0, #0xff
  4346ac:	cmp	x0, #0x0
  4346b0:	b.eq	4346f4 <size_multiply_overflow+0x68>  // b.none
  4346b4:	mov	x2, #0x0                   	// #0
  4346b8:	ldr	x1, [sp, #8]
  4346bc:	ldr	x0, [sp]
  4346c0:	umulh	x0, x1, x0
  4346c4:	cmp	x0, #0x0
  4346c8:	b.eq	4346d0 <size_multiply_overflow+0x44>  // b.none
  4346cc:	mov	x2, #0x1                   	// #1
  4346d0:	mov	x0, x2
  4346d4:	cmp	x0, #0x0
  4346d8:	cset	w0, ne  // ne = any
  4346dc:	and	w0, w0, #0xff
  4346e0:	and	x0, x0, #0xff
  4346e4:	cmp	x0, #0x0
  4346e8:	b.eq	4346f4 <size_multiply_overflow+0x68>  // b.none
  4346ec:	mov	w0, #0x1                   	// #1
  4346f0:	b	4346f8 <size_multiply_overflow+0x6c>
  4346f4:	mov	w0, #0x0                   	// #0
  4346f8:	and	w0, w0, #0x1
  4346fc:	and	w0, w0, #0xff
  434700:	add	sp, sp, #0x10
  434704:	ret

0000000000434708 <sd_bus_creds_unrefp>:
  434708:	stp	x29, x30, [sp, #-32]!
  43470c:	mov	x29, sp
  434710:	str	x0, [sp, #24]
  434714:	ldr	x0, [sp, #24]
  434718:	ldr	x0, [x0]
  43471c:	cmp	x0, #0x0
  434720:	b.eq	434730 <sd_bus_creds_unrefp+0x28>  // b.none
  434724:	ldr	x0, [sp, #24]
  434728:	ldr	x0, [x0]
  43472c:	bl	4072e0 <sd_bus_creds_unref@plt>
  434730:	nop
  434734:	ldp	x29, x30, [sp], #32
  434738:	ret

000000000043473c <hashmap_get>:
  43473c:	stp	x29, x30, [sp, #-32]!
  434740:	mov	x29, sp
  434744:	str	x0, [sp, #24]
  434748:	str	x1, [sp, #16]
  43474c:	ldr	x1, [sp, #16]
  434750:	ldr	x0, [sp, #24]
  434754:	bl	407860 <internal_hashmap_get@plt>
  434758:	ldp	x29, x30, [sp], #32
  43475c:	ret

0000000000434760 <hashmap_iterate>:
  434760:	stp	x29, x30, [sp, #-48]!
  434764:	mov	x29, sp
  434768:	str	x0, [sp, #40]
  43476c:	str	x1, [sp, #32]
  434770:	str	x2, [sp, #24]
  434774:	str	x3, [sp, #16]
  434778:	ldr	x3, [sp, #16]
  43477c:	ldr	x2, [sp, #24]
  434780:	ldr	x1, [sp, #32]
  434784:	ldr	x0, [sp, #40]
  434788:	bl	407f80 <internal_hashmap_iterate@plt>
  43478c:	and	w0, w0, #0xff
  434790:	ldp	x29, x30, [sp], #48
  434794:	ret

0000000000434798 <startswith>:
  434798:	stp	x29, x30, [sp, #-48]!
  43479c:	mov	x29, sp
  4347a0:	str	x0, [sp, #24]
  4347a4:	str	x1, [sp, #16]
  4347a8:	ldr	x0, [sp, #16]
  4347ac:	bl	4082f0 <strlen@plt>
  4347b0:	str	x0, [sp, #40]
  4347b4:	ldr	x2, [sp, #40]
  4347b8:	ldr	x1, [sp, #16]
  4347bc:	ldr	x0, [sp, #24]
  4347c0:	bl	407770 <strncmp@plt>
  4347c4:	cmp	w0, #0x0
  4347c8:	b.ne	4347dc <startswith+0x44>  // b.any
  4347cc:	ldr	x1, [sp, #24]
  4347d0:	ldr	x0, [sp, #40]
  4347d4:	add	x0, x1, x0
  4347d8:	b	4347e0 <startswith+0x48>
  4347dc:	mov	x0, #0x0                   	// #0
  4347e0:	ldp	x29, x30, [sp], #48
  4347e4:	ret

00000000004347e8 <SIGNAL_VALID>:
  4347e8:	sub	sp, sp, #0x10
  4347ec:	str	w0, [sp, #12]
  4347f0:	ldr	w0, [sp, #12]
  4347f4:	cmp	w0, #0x0
  4347f8:	b.le	434810 <SIGNAL_VALID+0x28>
  4347fc:	ldr	w0, [sp, #12]
  434800:	cmp	w0, #0x40
  434804:	b.gt	434810 <SIGNAL_VALID+0x28>
  434808:	mov	w0, #0x1                   	// #1
  43480c:	b	434814 <SIGNAL_VALID+0x2c>
  434810:	mov	w0, #0x0                   	// #0
  434814:	and	w0, w0, #0x1
  434818:	and	w0, w0, #0xff
  43481c:	add	sp, sp, #0x10
  434820:	ret

0000000000434824 <strv_freep>:
  434824:	stp	x29, x30, [sp, #-32]!
  434828:	mov	x29, sp
  43482c:	str	x0, [sp, #24]
  434830:	ldr	x0, [sp, #24]
  434834:	ldr	x0, [x0]
  434838:	cmp	x0, #0x0
  43483c:	b.eq	43484c <strv_freep+0x28>  // b.none
  434840:	ldr	x0, [sp, #24]
  434844:	ldr	x0, [x0]
  434848:	bl	4079a0 <strv_free@plt>
  43484c:	nop
  434850:	ldp	x29, x30, [sp], #32
  434854:	ret

0000000000434858 <property_get_state>:
  434858:	stp	x29, x30, [sp, #-96]!
  43485c:	mov	x29, sp
  434860:	str	x0, [sp, #72]
  434864:	str	x1, [sp, #64]
  434868:	str	x2, [sp, #56]
  43486c:	str	x3, [sp, #48]
  434870:	str	x4, [sp, #40]
  434874:	str	x5, [sp, #32]
  434878:	str	x6, [sp, #24]
  43487c:	ldr	x0, [sp, #32]
  434880:	str	x0, [sp, #88]
  434884:	ldr	x0, [sp, #72]
  434888:	cmp	x0, #0x0
  43488c:	cset	w0, eq  // eq = none
  434890:	and	w0, w0, #0xff
  434894:	and	x0, x0, #0xff
  434898:	cmp	x0, #0x0
  43489c:	b.eq	4348c8 <property_get_state+0x70>  // b.none
  4348a0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4348a4:	add	x1, x0, #0x4bb
  4348a8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4348ac:	add	x4, x0, #0x7e0
  4348b0:	mov	w3, #0x12                  	// #18
  4348b4:	mov	x2, x1
  4348b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4348bc:	add	x1, x0, #0x4d8
  4348c0:	mov	w0, #0x0                   	// #0
  4348c4:	bl	407650 <log_assert_failed_realm@plt>
  4348c8:	ldr	x0, [sp, #40]
  4348cc:	cmp	x0, #0x0
  4348d0:	cset	w0, eq  // eq = none
  4348d4:	and	w0, w0, #0xff
  4348d8:	and	x0, x0, #0xff
  4348dc:	cmp	x0, #0x0
  4348e0:	b.eq	43490c <property_get_state+0xb4>  // b.none
  4348e4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4348e8:	add	x1, x0, #0x4bb
  4348ec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4348f0:	add	x4, x0, #0x7e0
  4348f4:	mov	w3, #0x12                  	// #18
  4348f8:	mov	x2, x1
  4348fc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434900:	add	x1, x0, #0x4e0
  434904:	mov	w0, #0x0                   	// #0
  434908:	bl	407650 <log_assert_failed_realm@plt>
  43490c:	ldr	x0, [sp, #88]
  434910:	cmp	x0, #0x0
  434914:	cset	w0, eq  // eq = none
  434918:	and	w0, w0, #0xff
  43491c:	and	x0, x0, #0xff
  434920:	cmp	x0, #0x0
  434924:	b.eq	434950 <property_get_state+0xf8>  // b.none
  434928:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43492c:	add	x1, x0, #0x4bb
  434930:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434934:	add	x4, x0, #0x7e0
  434938:	mov	w3, #0x12                  	// #18
  43493c:	mov	x2, x1
  434940:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434944:	add	x1, x0, #0x4e8
  434948:	mov	w0, #0x0                   	// #0
  43494c:	bl	407650 <log_assert_failed_realm@plt>
  434950:	ldr	x0, [sp, #88]
  434954:	bl	4388a0 <user_get_state>
  434958:	bl	439420 <user_state_to_string>
  43495c:	mov	x2, x0
  434960:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434964:	add	x1, x0, #0x4f0
  434968:	ldr	x0, [sp, #40]
  43496c:	bl	407590 <sd_bus_message_append@plt>
  434970:	ldp	x29, x30, [sp], #96
  434974:	ret

0000000000434978 <property_get_display>:
  434978:	stp	x29, x30, [sp, #-128]!
  43497c:	mov	x29, sp
  434980:	str	x19, [sp, #16]
  434984:	str	x0, [sp, #88]
  434988:	str	x1, [sp, #80]
  43498c:	str	x2, [sp, #72]
  434990:	str	x3, [sp, #64]
  434994:	str	x4, [sp, #56]
  434998:	str	x5, [sp, #48]
  43499c:	str	x6, [sp, #40]
  4349a0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4349a4:	ldr	x0, [x0, #4024]
  4349a8:	ldr	x1, [x0]
  4349ac:	str	x1, [sp, #120]
  4349b0:	mov	x1, #0x0                   	// #0
  4349b4:	str	xzr, [sp, #104]
  4349b8:	ldr	x0, [sp, #48]
  4349bc:	str	x0, [sp, #112]
  4349c0:	ldr	x0, [sp, #88]
  4349c4:	cmp	x0, #0x0
  4349c8:	cset	w0, eq  // eq = none
  4349cc:	and	w0, w0, #0xff
  4349d0:	and	x0, x0, #0xff
  4349d4:	cmp	x0, #0x0
  4349d8:	b.eq	434a04 <property_get_display+0x8c>  // b.none
  4349dc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4349e0:	add	x1, x0, #0x4bb
  4349e4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4349e8:	add	x4, x0, #0x7f8
  4349ec:	mov	w3, #0x20                  	// #32
  4349f0:	mov	x2, x1
  4349f4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4349f8:	add	x1, x0, #0x4d8
  4349fc:	mov	w0, #0x0                   	// #0
  434a00:	bl	407650 <log_assert_failed_realm@plt>
  434a04:	ldr	x0, [sp, #56]
  434a08:	cmp	x0, #0x0
  434a0c:	cset	w0, eq  // eq = none
  434a10:	and	w0, w0, #0xff
  434a14:	and	x0, x0, #0xff
  434a18:	cmp	x0, #0x0
  434a1c:	b.eq	434a48 <property_get_display+0xd0>  // b.none
  434a20:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434a24:	add	x1, x0, #0x4bb
  434a28:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434a2c:	add	x4, x0, #0x7f8
  434a30:	mov	w3, #0x21                  	// #33
  434a34:	mov	x2, x1
  434a38:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434a3c:	add	x1, x0, #0x4e0
  434a40:	mov	w0, #0x0                   	// #0
  434a44:	bl	407650 <log_assert_failed_realm@plt>
  434a48:	ldr	x0, [sp, #112]
  434a4c:	cmp	x0, #0x0
  434a50:	cset	w0, eq  // eq = none
  434a54:	and	w0, w0, #0xff
  434a58:	and	x0, x0, #0xff
  434a5c:	cmp	x0, #0x0
  434a60:	b.eq	434a8c <property_get_display+0x114>  // b.none
  434a64:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434a68:	add	x1, x0, #0x4bb
  434a6c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434a70:	add	x4, x0, #0x7f8
  434a74:	mov	w3, #0x22                  	// #34
  434a78:	mov	x2, x1
  434a7c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434a80:	add	x1, x0, #0x4f8
  434a84:	mov	w0, #0x0                   	// #0
  434a88:	bl	407650 <log_assert_failed_realm@plt>
  434a8c:	ldr	x0, [sp, #112]
  434a90:	ldr	x0, [x0, #80]
  434a94:	cmp	x0, #0x0
  434a98:	b.eq	434aac <property_get_display+0x134>  // b.none
  434a9c:	ldr	x0, [sp, #112]
  434aa0:	ldr	x0, [x0, #80]
  434aa4:	bl	42c318 <session_bus_path>
  434aa8:	b	434ab8 <property_get_display+0x140>
  434aac:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434ab0:	add	x0, x0, #0x500
  434ab4:	bl	407f90 <strdup@plt>
  434ab8:	str	x0, [sp, #104]
  434abc:	ldr	x0, [sp, #104]
  434ac0:	cmp	x0, #0x0
  434ac4:	b.ne	434ad0 <property_get_display+0x158>  // b.any
  434ac8:	mov	w19, #0xfffffff4            	// #-12
  434acc:	b	434b18 <property_get_display+0x1a0>
  434ad0:	ldr	x0, [sp, #112]
  434ad4:	ldr	x0, [x0, #80]
  434ad8:	cmp	x0, #0x0
  434adc:	b.eq	434af0 <property_get_display+0x178>  // b.none
  434ae0:	ldr	x0, [sp, #112]
  434ae4:	ldr	x0, [x0, #80]
  434ae8:	ldr	x0, [x0, #8]
  434aec:	b	434af8 <property_get_display+0x180>
  434af0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434af4:	add	x0, x0, #0x508
  434af8:	ldr	x1, [sp, #104]
  434afc:	mov	x3, x1
  434b00:	mov	x2, x0
  434b04:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434b08:	add	x1, x0, #0x510
  434b0c:	ldr	x0, [sp, #56]
  434b10:	bl	407590 <sd_bus_message_append@plt>
  434b14:	mov	w19, w0
  434b18:	add	x0, sp, #0x68
  434b1c:	bl	434668 <freep>
  434b20:	mov	w1, w19
  434b24:	adrp	x0, 460000 <wordlist.10364+0x370>
  434b28:	ldr	x0, [x0, #4024]
  434b2c:	ldr	x2, [sp, #120]
  434b30:	ldr	x0, [x0]
  434b34:	eor	x0, x2, x0
  434b38:	cmp	x0, #0x0
  434b3c:	b.eq	434b44 <property_get_display+0x1cc>  // b.none
  434b40:	bl	407b20 <__stack_chk_fail@plt>
  434b44:	mov	w0, w1
  434b48:	ldr	x19, [sp, #16]
  434b4c:	ldp	x29, x30, [sp], #128
  434b50:	ret

0000000000434b54 <property_get_sessions>:
  434b54:	stp	x29, x30, [sp, #-144]!
  434b58:	mov	x29, sp
  434b5c:	stp	x19, x20, [sp, #16]
  434b60:	str	x0, [sp, #88]
  434b64:	str	x1, [sp, #80]
  434b68:	str	x2, [sp, #72]
  434b6c:	str	x3, [sp, #64]
  434b70:	str	x4, [sp, #56]
  434b74:	str	x5, [sp, #48]
  434b78:	str	x6, [sp, #40]
  434b7c:	adrp	x0, 460000 <wordlist.10364+0x370>
  434b80:	ldr	x0, [x0, #4024]
  434b84:	ldr	x1, [x0]
  434b88:	str	x1, [sp, #136]
  434b8c:	mov	x1, #0x0                   	// #0
  434b90:	ldr	x0, [sp, #48]
  434b94:	str	x0, [sp, #128]
  434b98:	ldr	x0, [sp, #88]
  434b9c:	cmp	x0, #0x0
  434ba0:	cset	w0, eq  // eq = none
  434ba4:	and	w0, w0, #0xff
  434ba8:	and	x0, x0, #0xff
  434bac:	cmp	x0, #0x0
  434bb0:	b.eq	434bdc <property_get_sessions+0x88>  // b.none
  434bb4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434bb8:	add	x1, x0, #0x4bb
  434bbc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434bc0:	add	x4, x0, #0x810
  434bc4:	mov	w3, #0x38                  	// #56
  434bc8:	mov	x2, x1
  434bcc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434bd0:	add	x1, x0, #0x4d8
  434bd4:	mov	w0, #0x0                   	// #0
  434bd8:	bl	407650 <log_assert_failed_realm@plt>
  434bdc:	ldr	x0, [sp, #56]
  434be0:	cmp	x0, #0x0
  434be4:	cset	w0, eq  // eq = none
  434be8:	and	w0, w0, #0xff
  434bec:	and	x0, x0, #0xff
  434bf0:	cmp	x0, #0x0
  434bf4:	b.eq	434c20 <property_get_sessions+0xcc>  // b.none
  434bf8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434bfc:	add	x1, x0, #0x4bb
  434c00:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434c04:	add	x4, x0, #0x810
  434c08:	mov	w3, #0x39                  	// #57
  434c0c:	mov	x2, x1
  434c10:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434c14:	add	x1, x0, #0x4e0
  434c18:	mov	w0, #0x0                   	// #0
  434c1c:	bl	407650 <log_assert_failed_realm@plt>
  434c20:	ldr	x0, [sp, #128]
  434c24:	cmp	x0, #0x0
  434c28:	cset	w0, eq  // eq = none
  434c2c:	and	w0, w0, #0xff
  434c30:	and	x0, x0, #0xff
  434c34:	cmp	x0, #0x0
  434c38:	b.eq	434c64 <property_get_sessions+0x110>  // b.none
  434c3c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434c40:	add	x1, x0, #0x4bb
  434c44:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434c48:	add	x4, x0, #0x810
  434c4c:	mov	w3, #0x3a                  	// #58
  434c50:	mov	x2, x1
  434c54:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434c58:	add	x1, x0, #0x4f8
  434c5c:	mov	w0, #0x0                   	// #0
  434c60:	bl	407650 <log_assert_failed_realm@plt>
  434c64:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434c68:	add	x2, x0, #0x510
  434c6c:	mov	w1, #0x61                  	// #97
  434c70:	ldr	x0, [sp, #56]
  434c74:	bl	407490 <sd_bus_message_open_container@plt>
  434c78:	str	w0, [sp, #108]
  434c7c:	ldr	w0, [sp, #108]
  434c80:	cmp	w0, #0x0
  434c84:	b.ge	434c90 <property_get_sessions+0x13c>  // b.tcont
  434c88:	ldr	w19, [sp, #108]
  434c8c:	b	434d40 <property_get_sessions+0x1ec>
  434c90:	ldr	x0, [sp, #128]
  434c94:	ldr	x0, [x0, #128]
  434c98:	str	x0, [sp, #120]
  434c9c:	b	434d28 <property_get_sessions+0x1d4>
  434ca0:	str	xzr, [sp, #112]
  434ca4:	ldr	x0, [sp, #120]
  434ca8:	bl	42c318 <session_bus_path>
  434cac:	str	x0, [sp, #112]
  434cb0:	ldr	x0, [sp, #112]
  434cb4:	cmp	x0, #0x0
  434cb8:	b.ne	434cc8 <property_get_sessions+0x174>  // b.any
  434cbc:	mov	w19, #0xfffffff4            	// #-12
  434cc0:	mov	w20, #0x0                   	// #0
  434cc4:	b	434d0c <property_get_sessions+0x1b8>
  434cc8:	ldr	x0, [sp, #120]
  434ccc:	ldr	x0, [x0, #8]
  434cd0:	ldr	x1, [sp, #112]
  434cd4:	mov	x3, x1
  434cd8:	mov	x2, x0
  434cdc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434ce0:	add	x1, x0, #0x510
  434ce4:	ldr	x0, [sp, #56]
  434ce8:	bl	407590 <sd_bus_message_append@plt>
  434cec:	str	w0, [sp, #108]
  434cf0:	ldr	w0, [sp, #108]
  434cf4:	cmp	w0, #0x0
  434cf8:	b.ge	434d08 <property_get_sessions+0x1b4>  // b.tcont
  434cfc:	ldr	w19, [sp, #108]
  434d00:	mov	w20, #0x0                   	// #0
  434d04:	b	434d0c <property_get_sessions+0x1b8>
  434d08:	mov	w20, #0x1                   	// #1
  434d0c:	add	x0, sp, #0x70
  434d10:	bl	434668 <freep>
  434d14:	cmp	w20, #0x1
  434d18:	b.ne	434d40 <property_get_sessions+0x1ec>  // b.any
  434d1c:	ldr	x0, [sp, #120]
  434d20:	ldr	x0, [x0, #256]
  434d24:	str	x0, [sp, #120]
  434d28:	ldr	x0, [sp, #120]
  434d2c:	cmp	x0, #0x0
  434d30:	b.ne	434ca0 <property_get_sessions+0x14c>  // b.any
  434d34:	ldr	x0, [sp, #56]
  434d38:	bl	408420 <sd_bus_message_close_container@plt>
  434d3c:	mov	w19, w0
  434d40:	mov	w1, w19
  434d44:	adrp	x0, 460000 <wordlist.10364+0x370>
  434d48:	ldr	x0, [x0, #4024]
  434d4c:	ldr	x2, [sp, #136]
  434d50:	ldr	x0, [x0]
  434d54:	eor	x0, x2, x0
  434d58:	cmp	x0, #0x0
  434d5c:	b.eq	434d64 <property_get_sessions+0x210>  // b.none
  434d60:	bl	407b20 <__stack_chk_fail@plt>
  434d64:	mov	w0, w1
  434d68:	ldp	x19, x20, [sp, #16]
  434d6c:	ldp	x29, x30, [sp], #144
  434d70:	ret

0000000000434d74 <property_get_idle_hint>:
  434d74:	stp	x29, x30, [sp, #-96]!
  434d78:	mov	x29, sp
  434d7c:	str	x0, [sp, #72]
  434d80:	str	x1, [sp, #64]
  434d84:	str	x2, [sp, #56]
  434d88:	str	x3, [sp, #48]
  434d8c:	str	x4, [sp, #40]
  434d90:	str	x5, [sp, #32]
  434d94:	str	x6, [sp, #24]
  434d98:	ldr	x0, [sp, #32]
  434d9c:	str	x0, [sp, #88]
  434da0:	ldr	x0, [sp, #72]
  434da4:	cmp	x0, #0x0
  434da8:	cset	w0, eq  // eq = none
  434dac:	and	w0, w0, #0xff
  434db0:	and	x0, x0, #0xff
  434db4:	cmp	x0, #0x0
  434db8:	b.eq	434de4 <property_get_idle_hint+0x70>  // b.none
  434dbc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434dc0:	add	x1, x0, #0x4bb
  434dc4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434dc8:	add	x4, x0, #0x828
  434dcc:	mov	w3, #0x5b                  	// #91
  434dd0:	mov	x2, x1
  434dd4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434dd8:	add	x1, x0, #0x4d8
  434ddc:	mov	w0, #0x0                   	// #0
  434de0:	bl	407650 <log_assert_failed_realm@plt>
  434de4:	ldr	x0, [sp, #40]
  434de8:	cmp	x0, #0x0
  434dec:	cset	w0, eq  // eq = none
  434df0:	and	w0, w0, #0xff
  434df4:	and	x0, x0, #0xff
  434df8:	cmp	x0, #0x0
  434dfc:	b.eq	434e28 <property_get_idle_hint+0xb4>  // b.none
  434e00:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e04:	add	x1, x0, #0x4bb
  434e08:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e0c:	add	x4, x0, #0x828
  434e10:	mov	w3, #0x5c                  	// #92
  434e14:	mov	x2, x1
  434e18:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e1c:	add	x1, x0, #0x4e0
  434e20:	mov	w0, #0x0                   	// #0
  434e24:	bl	407650 <log_assert_failed_realm@plt>
  434e28:	ldr	x0, [sp, #88]
  434e2c:	cmp	x0, #0x0
  434e30:	cset	w0, eq  // eq = none
  434e34:	and	w0, w0, #0xff
  434e38:	and	x0, x0, #0xff
  434e3c:	cmp	x0, #0x0
  434e40:	b.eq	434e6c <property_get_idle_hint+0xf8>  // b.none
  434e44:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e48:	add	x1, x0, #0x4bb
  434e4c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e50:	add	x4, x0, #0x828
  434e54:	mov	w3, #0x5d                  	// #93
  434e58:	mov	x2, x1
  434e5c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e60:	add	x1, x0, #0x4f8
  434e64:	mov	w0, #0x0                   	// #0
  434e68:	bl	407650 <log_assert_failed_realm@plt>
  434e6c:	mov	x1, #0x0                   	// #0
  434e70:	ldr	x0, [sp, #88]
  434e74:	bl	437e40 <user_get_idle_hint>
  434e78:	cmp	w0, #0x0
  434e7c:	cset	w0, gt
  434e80:	and	w0, w0, #0xff
  434e84:	mov	w2, w0
  434e88:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434e8c:	add	x1, x0, #0x518
  434e90:	ldr	x0, [sp, #40]
  434e94:	bl	407590 <sd_bus_message_append@plt>
  434e98:	ldp	x29, x30, [sp], #96
  434e9c:	ret

0000000000434ea0 <property_get_idle_since_hint>:
  434ea0:	stp	x29, x30, [sp, #-128]!
  434ea4:	mov	x29, sp
  434ea8:	str	x0, [sp, #72]
  434eac:	str	x1, [sp, #64]
  434eb0:	str	x2, [sp, #56]
  434eb4:	str	x3, [sp, #48]
  434eb8:	str	x4, [sp, #40]
  434ebc:	str	x5, [sp, #32]
  434ec0:	str	x6, [sp, #24]
  434ec4:	adrp	x0, 460000 <wordlist.10364+0x370>
  434ec8:	ldr	x0, [x0, #4024]
  434ecc:	ldr	x1, [x0]
  434ed0:	str	x1, [sp, #120]
  434ed4:	mov	x1, #0x0                   	// #0
  434ed8:	ldr	x0, [sp, #32]
  434edc:	str	x0, [sp, #88]
  434ee0:	stp	xzr, xzr, [sp, #104]
  434ee4:	ldr	x0, [sp, #72]
  434ee8:	cmp	x0, #0x0
  434eec:	cset	w0, eq  // eq = none
  434ef0:	and	w0, w0, #0xff
  434ef4:	and	x0, x0, #0xff
  434ef8:	cmp	x0, #0x0
  434efc:	b.eq	434f28 <property_get_idle_since_hint+0x88>  // b.none
  434f00:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f04:	add	x1, x0, #0x4bb
  434f08:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f0c:	add	x4, x0, #0x840
  434f10:	mov	w3, #0x6f                  	// #111
  434f14:	mov	x2, x1
  434f18:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f1c:	add	x1, x0, #0x4d8
  434f20:	mov	w0, #0x0                   	// #0
  434f24:	bl	407650 <log_assert_failed_realm@plt>
  434f28:	ldr	x0, [sp, #40]
  434f2c:	cmp	x0, #0x0
  434f30:	cset	w0, eq  // eq = none
  434f34:	and	w0, w0, #0xff
  434f38:	and	x0, x0, #0xff
  434f3c:	cmp	x0, #0x0
  434f40:	b.eq	434f6c <property_get_idle_since_hint+0xcc>  // b.none
  434f44:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f48:	add	x1, x0, #0x4bb
  434f4c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f50:	add	x4, x0, #0x840
  434f54:	mov	w3, #0x70                  	// #112
  434f58:	mov	x2, x1
  434f5c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f60:	add	x1, x0, #0x4e0
  434f64:	mov	w0, #0x0                   	// #0
  434f68:	bl	407650 <log_assert_failed_realm@plt>
  434f6c:	ldr	x0, [sp, #88]
  434f70:	cmp	x0, #0x0
  434f74:	cset	w0, eq  // eq = none
  434f78:	and	w0, w0, #0xff
  434f7c:	and	x0, x0, #0xff
  434f80:	cmp	x0, #0x0
  434f84:	b.eq	434fb0 <property_get_idle_since_hint+0x110>  // b.none
  434f88:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f8c:	add	x1, x0, #0x4bb
  434f90:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434f94:	add	x4, x0, #0x840
  434f98:	mov	w3, #0x71                  	// #113
  434f9c:	mov	x2, x1
  434fa0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434fa4:	add	x1, x0, #0x4f8
  434fa8:	mov	w0, #0x0                   	// #0
  434fac:	bl	407650 <log_assert_failed_realm@plt>
  434fb0:	add	x0, sp, #0x68
  434fb4:	mov	x1, x0
  434fb8:	ldr	x0, [sp, #88]
  434fbc:	bl	437e40 <user_get_idle_hint>
  434fc0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434fc4:	add	x1, x0, #0x520
  434fc8:	ldr	x0, [sp, #48]
  434fcc:	bl	407f30 <strcmp@plt>
  434fd0:	cmp	w0, #0x0
  434fd4:	b.ne	434fe0 <property_get_idle_since_hint+0x140>  // b.any
  434fd8:	ldr	x0, [sp, #104]
  434fdc:	b	434fe4 <property_get_idle_since_hint+0x144>
  434fe0:	ldr	x0, [sp, #112]
  434fe4:	str	x0, [sp, #96]
  434fe8:	ldr	x2, [sp, #96]
  434fec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  434ff0:	add	x1, x0, #0x530
  434ff4:	ldr	x0, [sp, #40]
  434ff8:	bl	407590 <sd_bus_message_append@plt>
  434ffc:	mov	w1, w0
  435000:	adrp	x0, 460000 <wordlist.10364+0x370>
  435004:	ldr	x0, [x0, #4024]
  435008:	ldr	x2, [sp, #120]
  43500c:	ldr	x0, [x0]
  435010:	eor	x0, x2, x0
  435014:	cmp	x0, #0x0
  435018:	b.eq	435020 <property_get_idle_since_hint+0x180>  // b.none
  43501c:	bl	407b20 <__stack_chk_fail@plt>
  435020:	mov	w0, w1
  435024:	ldp	x29, x30, [sp], #128
  435028:	ret

000000000043502c <property_get_linger>:
  43502c:	stp	x29, x30, [sp, #-96]!
  435030:	mov	x29, sp
  435034:	str	x0, [sp, #72]
  435038:	str	x1, [sp, #64]
  43503c:	str	x2, [sp, #56]
  435040:	str	x3, [sp, #48]
  435044:	str	x4, [sp, #40]
  435048:	str	x5, [sp, #32]
  43504c:	str	x6, [sp, #24]
  435050:	ldr	x0, [sp, #32]
  435054:	str	x0, [sp, #88]
  435058:	ldr	x0, [sp, #72]
  43505c:	cmp	x0, #0x0
  435060:	cset	w0, eq  // eq = none
  435064:	and	w0, w0, #0xff
  435068:	and	x0, x0, #0xff
  43506c:	cmp	x0, #0x0
  435070:	b.eq	43509c <property_get_linger+0x70>  // b.none
  435074:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435078:	add	x1, x0, #0x4bb
  43507c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435080:	add	x4, x0, #0x860
  435084:	mov	w3, #0x85                  	// #133
  435088:	mov	x2, x1
  43508c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435090:	add	x1, x0, #0x4d8
  435094:	mov	w0, #0x0                   	// #0
  435098:	bl	407650 <log_assert_failed_realm@plt>
  43509c:	ldr	x0, [sp, #40]
  4350a0:	cmp	x0, #0x0
  4350a4:	cset	w0, eq  // eq = none
  4350a8:	and	w0, w0, #0xff
  4350ac:	and	x0, x0, #0xff
  4350b0:	cmp	x0, #0x0
  4350b4:	b.eq	4350e0 <property_get_linger+0xb4>  // b.none
  4350b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4350bc:	add	x1, x0, #0x4bb
  4350c0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4350c4:	add	x4, x0, #0x860
  4350c8:	mov	w3, #0x86                  	// #134
  4350cc:	mov	x2, x1
  4350d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4350d4:	add	x1, x0, #0x4e0
  4350d8:	mov	w0, #0x0                   	// #0
  4350dc:	bl	407650 <log_assert_failed_realm@plt>
  4350e0:	ldr	x0, [sp, #88]
  4350e4:	cmp	x0, #0x0
  4350e8:	cset	w0, eq  // eq = none
  4350ec:	and	w0, w0, #0xff
  4350f0:	and	x0, x0, #0xff
  4350f4:	cmp	x0, #0x0
  4350f8:	b.eq	435124 <property_get_linger+0xf8>  // b.none
  4350fc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435100:	add	x1, x0, #0x4bb
  435104:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435108:	add	x4, x0, #0x860
  43510c:	mov	w3, #0x87                  	// #135
  435110:	mov	x2, x1
  435114:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435118:	add	x1, x0, #0x4f8
  43511c:	mov	w0, #0x0                   	// #0
  435120:	bl	407650 <log_assert_failed_realm@plt>
  435124:	ldr	x0, [sp, #88]
  435128:	bl	437fc0 <user_check_linger_file>
  43512c:	str	w0, [sp, #84]
  435130:	ldr	w0, [sp, #84]
  435134:	cmp	w0, #0x0
  435138:	cset	w0, gt
  43513c:	and	w0, w0, #0xff
  435140:	mov	w2, w0
  435144:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435148:	add	x1, x0, #0x518
  43514c:	ldr	x0, [sp, #40]
  435150:	bl	407590 <sd_bus_message_append@plt>
  435154:	ldp	x29, x30, [sp], #96
  435158:	ret

000000000043515c <bus_user_method_terminate>:
  43515c:	stp	x29, x30, [sp, #-64]!
  435160:	mov	x29, sp
  435164:	str	x0, [sp, #40]
  435168:	str	x1, [sp, #32]
  43516c:	str	x2, [sp, #24]
  435170:	ldr	x0, [sp, #32]
  435174:	str	x0, [sp, #56]
  435178:	ldr	x0, [sp, #40]
  43517c:	cmp	x0, #0x0
  435180:	cset	w0, eq  // eq = none
  435184:	and	w0, w0, #0xff
  435188:	and	x0, x0, #0xff
  43518c:	cmp	x0, #0x0
  435190:	b.eq	4351bc <bus_user_method_terminate+0x60>  // b.none
  435194:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435198:	add	x1, x0, #0x4bb
  43519c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4351a0:	add	x4, x0, #0x878
  4351a4:	mov	w3, #0x92                  	// #146
  4351a8:	mov	x2, x1
  4351ac:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4351b0:	add	x1, x0, #0x538
  4351b4:	mov	w0, #0x0                   	// #0
  4351b8:	bl	407650 <log_assert_failed_realm@plt>
  4351bc:	ldr	x0, [sp, #56]
  4351c0:	cmp	x0, #0x0
  4351c4:	cset	w0, eq  // eq = none
  4351c8:	and	w0, w0, #0xff
  4351cc:	and	x0, x0, #0xff
  4351d0:	cmp	x0, #0x0
  4351d4:	b.eq	435200 <bus_user_method_terminate+0xa4>  // b.none
  4351d8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4351dc:	add	x1, x0, #0x4bb
  4351e0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4351e4:	add	x4, x0, #0x878
  4351e8:	mov	w3, #0x93                  	// #147
  4351ec:	mov	x2, x1
  4351f0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4351f4:	add	x1, x0, #0x4f8
  4351f8:	mov	w0, #0x0                   	// #0
  4351fc:	bl	407650 <log_assert_failed_realm@plt>
  435200:	ldr	x0, [sp, #56]
  435204:	ldr	w1, [x0, #8]
  435208:	ldr	x0, [sp, #56]
  43520c:	ldr	x0, [x0]
  435210:	add	x0, x0, #0x1b0
  435214:	ldr	x7, [sp, #24]
  435218:	mov	x6, x0
  43521c:	mov	w5, w1
  435220:	mov	w4, #0x0                   	// #0
  435224:	mov	x3, #0x0                   	// #0
  435228:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43522c:	add	x2, x0, #0x540
  435230:	mov	w1, #0x5                   	// #5
  435234:	ldr	x0, [sp, #40]
  435238:	bl	408350 <bus_verify_polkit_async@plt>
  43523c:	str	w0, [sp, #52]
  435240:	ldr	w0, [sp, #52]
  435244:	cmp	w0, #0x0
  435248:	b.ge	435254 <bus_user_method_terminate+0xf8>  // b.tcont
  43524c:	ldr	w0, [sp, #52]
  435250:	b	435298 <bus_user_method_terminate+0x13c>
  435254:	ldr	w0, [sp, #52]
  435258:	cmp	w0, #0x0
  43525c:	b.ne	435268 <bus_user_method_terminate+0x10c>  // b.any
  435260:	mov	w0, #0x1                   	// #1
  435264:	b	435298 <bus_user_method_terminate+0x13c>
  435268:	mov	w1, #0x1                   	// #1
  43526c:	ldr	x0, [sp, #56]
  435270:	bl	437b40 <user_stop>
  435274:	str	w0, [sp, #52]
  435278:	ldr	w0, [sp, #52]
  43527c:	cmp	w0, #0x0
  435280:	b.ge	43528c <bus_user_method_terminate+0x130>  // b.tcont
  435284:	ldr	w0, [sp, #52]
  435288:	b	435298 <bus_user_method_terminate+0x13c>
  43528c:	mov	x1, #0x0                   	// #0
  435290:	ldr	x0, [sp, #40]
  435294:	bl	4070e0 <sd_bus_reply_method_return@plt>
  435298:	ldp	x29, x30, [sp], #64
  43529c:	ret

00000000004352a0 <bus_user_method_kill>:
  4352a0:	stp	x29, x30, [sp, #-80]!
  4352a4:	mov	x29, sp
  4352a8:	str	x0, [sp, #40]
  4352ac:	str	x1, [sp, #32]
  4352b0:	str	x2, [sp, #24]
  4352b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4352b8:	ldr	x0, [x0, #4024]
  4352bc:	ldr	x1, [x0]
  4352c0:	str	x1, [sp, #72]
  4352c4:	mov	x1, #0x0                   	// #0
  4352c8:	ldr	x0, [sp, #32]
  4352cc:	str	x0, [sp, #64]
  4352d0:	ldr	x0, [sp, #40]
  4352d4:	cmp	x0, #0x0
  4352d8:	cset	w0, eq  // eq = none
  4352dc:	and	w0, w0, #0xff
  4352e0:	and	x0, x0, #0xff
  4352e4:	cmp	x0, #0x0
  4352e8:	b.eq	435314 <bus_user_method_kill+0x74>  // b.none
  4352ec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4352f0:	add	x1, x0, #0x4bb
  4352f4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4352f8:	add	x4, x0, #0x898
  4352fc:	mov	w3, #0xaf                  	// #175
  435300:	mov	x2, x1
  435304:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435308:	add	x1, x0, #0x538
  43530c:	mov	w0, #0x0                   	// #0
  435310:	bl	407650 <log_assert_failed_realm@plt>
  435314:	ldr	x0, [sp, #64]
  435318:	cmp	x0, #0x0
  43531c:	cset	w0, eq  // eq = none
  435320:	and	w0, w0, #0xff
  435324:	and	x0, x0, #0xff
  435328:	cmp	x0, #0x0
  43532c:	b.eq	435358 <bus_user_method_kill+0xb8>  // b.none
  435330:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435334:	add	x1, x0, #0x4bb
  435338:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43533c:	add	x4, x0, #0x898
  435340:	mov	w3, #0xb0                  	// #176
  435344:	mov	x2, x1
  435348:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43534c:	add	x1, x0, #0x4f8
  435350:	mov	w0, #0x0                   	// #0
  435354:	bl	407650 <log_assert_failed_realm@plt>
  435358:	ldr	x0, [sp, #64]
  43535c:	ldr	w1, [x0, #8]
  435360:	ldr	x0, [sp, #64]
  435364:	ldr	x0, [x0]
  435368:	add	x0, x0, #0x1b0
  43536c:	ldr	x7, [sp, #24]
  435370:	mov	x6, x0
  435374:	mov	w5, w1
  435378:	mov	w4, #0x0                   	// #0
  43537c:	mov	x3, #0x0                   	// #0
  435380:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435384:	add	x2, x0, #0x540
  435388:	mov	w1, #0x5                   	// #5
  43538c:	ldr	x0, [sp, #40]
  435390:	bl	408350 <bus_verify_polkit_async@plt>
  435394:	str	w0, [sp, #60]
  435398:	ldr	w0, [sp, #60]
  43539c:	cmp	w0, #0x0
  4353a0:	b.ge	4353ac <bus_user_method_kill+0x10c>  // b.tcont
  4353a4:	ldr	w0, [sp, #60]
  4353a8:	b	435464 <bus_user_method_kill+0x1c4>
  4353ac:	ldr	w0, [sp, #60]
  4353b0:	cmp	w0, #0x0
  4353b4:	b.ne	4353c0 <bus_user_method_kill+0x120>  // b.any
  4353b8:	mov	w0, #0x1                   	// #1
  4353bc:	b	435464 <bus_user_method_kill+0x1c4>
  4353c0:	add	x0, sp, #0x38
  4353c4:	mov	x2, x0
  4353c8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4353cc:	add	x1, x0, #0x560
  4353d0:	ldr	x0, [sp, #40]
  4353d4:	bl	407660 <sd_bus_message_read@plt>
  4353d8:	str	w0, [sp, #60]
  4353dc:	ldr	w0, [sp, #60]
  4353e0:	cmp	w0, #0x0
  4353e4:	b.ge	4353f0 <bus_user_method_kill+0x150>  // b.tcont
  4353e8:	ldr	w0, [sp, #60]
  4353ec:	b	435464 <bus_user_method_kill+0x1c4>
  4353f0:	ldr	w0, [sp, #56]
  4353f4:	bl	4347e8 <SIGNAL_VALID>
  4353f8:	and	w0, w0, #0xff
  4353fc:	eor	w0, w0, #0x1
  435400:	and	w0, w0, #0xff
  435404:	cmp	w0, #0x0
  435408:	b.eq	435430 <bus_user_method_kill+0x190>  // b.none
  43540c:	ldr	w0, [sp, #56]
  435410:	mov	w3, w0
  435414:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435418:	add	x2, x0, #0x568
  43541c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435420:	add	x1, x0, #0x580
  435424:	ldr	x0, [sp, #24]
  435428:	bl	407ae0 <sd_bus_error_setf@plt>
  43542c:	b	435464 <bus_user_method_kill+0x1c4>
  435430:	ldr	w0, [sp, #56]
  435434:	mov	w1, w0
  435438:	ldr	x0, [sp, #64]
  43543c:	bl	438a0c <user_kill>
  435440:	str	w0, [sp, #60]
  435444:	ldr	w0, [sp, #60]
  435448:	cmp	w0, #0x0
  43544c:	b.ge	435458 <bus_user_method_kill+0x1b8>  // b.tcont
  435450:	ldr	w0, [sp, #60]
  435454:	b	435464 <bus_user_method_kill+0x1c4>
  435458:	mov	x1, #0x0                   	// #0
  43545c:	ldr	x0, [sp, #40]
  435460:	bl	4070e0 <sd_bus_reply_method_return@plt>
  435464:	mov	w1, w0
  435468:	adrp	x0, 460000 <wordlist.10364+0x370>
  43546c:	ldr	x0, [x0, #4024]
  435470:	ldr	x2, [sp, #72]
  435474:	ldr	x0, [x0]
  435478:	eor	x0, x2, x0
  43547c:	cmp	x0, #0x0
  435480:	b.eq	435488 <bus_user_method_kill+0x1e8>  // b.none
  435484:	bl	407b20 <__stack_chk_fail@plt>
  435488:	mov	w0, w1
  43548c:	ldp	x29, x30, [sp], #80
  435490:	ret

0000000000435494 <user_object_find>:
  435494:	stp	x29, x30, [sp, #-112]!
  435498:	mov	x29, sp
  43549c:	str	x0, [sp, #56]
  4354a0:	str	x1, [sp, #48]
  4354a4:	str	x2, [sp, #40]
  4354a8:	str	x3, [sp, #32]
  4354ac:	str	x4, [sp, #24]
  4354b0:	str	x5, [sp, #16]
  4354b4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4354b8:	ldr	x0, [x0, #4024]
  4354bc:	ldr	x1, [x0]
  4354c0:	str	x1, [sp, #104]
  4354c4:	mov	x1, #0x0                   	// #0
  4354c8:	ldr	x0, [sp, #32]
  4354cc:	str	x0, [sp, #80]
  4354d0:	ldr	x0, [sp, #56]
  4354d4:	cmp	x0, #0x0
  4354d8:	cset	w0, eq  // eq = none
  4354dc:	and	w0, w0, #0xff
  4354e0:	and	x0, x0, #0xff
  4354e4:	cmp	x0, #0x0
  4354e8:	b.eq	435514 <user_object_find+0x80>  // b.none
  4354ec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4354f0:	add	x1, x0, #0x4bb
  4354f4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4354f8:	add	x4, x0, #0x8b0
  4354fc:	mov	w3, #0xec                  	// #236
  435500:	mov	x2, x1
  435504:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435508:	add	x1, x0, #0x4d8
  43550c:	mov	w0, #0x0                   	// #0
  435510:	bl	407650 <log_assert_failed_realm@plt>
  435514:	ldr	x0, [sp, #48]
  435518:	cmp	x0, #0x0
  43551c:	cset	w0, eq  // eq = none
  435520:	and	w0, w0, #0xff
  435524:	and	x0, x0, #0xff
  435528:	cmp	x0, #0x0
  43552c:	b.eq	435558 <user_object_find+0xc4>  // b.none
  435530:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435534:	add	x1, x0, #0x4bb
  435538:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43553c:	add	x4, x0, #0x8b0
  435540:	mov	w3, #0xed                  	// #237
  435544:	mov	x2, x1
  435548:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43554c:	add	x1, x0, #0x678
  435550:	mov	w0, #0x0                   	// #0
  435554:	bl	407650 <log_assert_failed_realm@plt>
  435558:	ldr	x0, [sp, #40]
  43555c:	cmp	x0, #0x0
  435560:	cset	w0, eq  // eq = none
  435564:	and	w0, w0, #0xff
  435568:	and	x0, x0, #0xff
  43556c:	cmp	x0, #0x0
  435570:	b.eq	43559c <user_object_find+0x108>  // b.none
  435574:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435578:	add	x1, x0, #0x4bb
  43557c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435580:	add	x4, x0, #0x8b0
  435584:	mov	w3, #0xee                  	// #238
  435588:	mov	x2, x1
  43558c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435590:	add	x1, x0, #0x680
  435594:	mov	w0, #0x0                   	// #0
  435598:	bl	407650 <log_assert_failed_realm@plt>
  43559c:	ldr	x0, [sp, #24]
  4355a0:	cmp	x0, #0x0
  4355a4:	cset	w0, eq  // eq = none
  4355a8:	and	w0, w0, #0xff
  4355ac:	and	x0, x0, #0xff
  4355b0:	cmp	x0, #0x0
  4355b4:	b.eq	4355e0 <user_object_find+0x14c>  // b.none
  4355b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4355bc:	add	x1, x0, #0x4bb
  4355c0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4355c4:	add	x4, x0, #0x8b0
  4355c8:	mov	w3, #0xef                  	// #239
  4355cc:	mov	x2, x1
  4355d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4355d4:	add	x1, x0, #0x690
  4355d8:	mov	w0, #0x0                   	// #0
  4355dc:	bl	407650 <log_assert_failed_realm@plt>
  4355e0:	ldr	x0, [sp, #80]
  4355e4:	cmp	x0, #0x0
  4355e8:	cset	w0, eq  // eq = none
  4355ec:	and	w0, w0, #0xff
  4355f0:	and	x0, x0, #0xff
  4355f4:	cmp	x0, #0x0
  4355f8:	b.eq	435624 <user_object_find+0x190>  // b.none
  4355fc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435600:	add	x1, x0, #0x4bb
  435604:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435608:	add	x4, x0, #0x8b0
  43560c:	mov	w3, #0xf0                  	// #240
  435610:	mov	x2, x1
  435614:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435618:	add	x1, x0, #0x698
  43561c:	mov	w0, #0x0                   	// #0
  435620:	bl	407650 <log_assert_failed_realm@plt>
  435624:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435628:	add	x1, x0, #0x6a0
  43562c:	ldr	x0, [sp, #48]
  435630:	bl	407f30 <strcmp@plt>
  435634:	cmp	w0, #0x0
  435638:	b.ne	435698 <user_object_find+0x204>  // b.any
  43563c:	ldr	x0, [sp, #56]
  435640:	bl	407ad0 <sd_bus_get_current_message@plt>
  435644:	str	x0, [sp, #96]
  435648:	add	x0, sp, #0x48
  43564c:	mov	x4, x0
  435650:	ldr	x3, [sp, #16]
  435654:	mov	w2, #0xffffffff            	// #-1
  435658:	ldr	x1, [sp, #96]
  43565c:	ldr	x0, [sp, #80]
  435660:	bl	414708 <manager_get_user_from_creds>
  435664:	str	w0, [sp, #68]
  435668:	ldr	w0, [sp, #68]
  43566c:	cmn	w0, #0x6
  435670:	b.ne	435684 <user_object_find+0x1f0>  // b.any
  435674:	ldr	x0, [sp, #16]
  435678:	bl	407c80 <sd_bus_error_free@plt>
  43567c:	mov	w0, #0x0                   	// #0
  435680:	b	435730 <user_object_find+0x29c>
  435684:	ldr	w0, [sp, #68]
  435688:	cmp	w0, #0x0
  43568c:	b.ge	435720 <user_object_find+0x28c>  // b.tcont
  435690:	ldr	w0, [sp, #68]
  435694:	b	435730 <user_object_find+0x29c>
  435698:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43569c:	add	x1, x0, #0x6c8
  4356a0:	ldr	x0, [sp, #48]
  4356a4:	bl	434798 <startswith>
  4356a8:	str	x0, [sp, #88]
  4356ac:	ldr	x0, [sp, #88]
  4356b0:	cmp	x0, #0x0
  4356b4:	b.ne	4356c0 <user_object_find+0x22c>  // b.any
  4356b8:	mov	w0, #0x0                   	// #0
  4356bc:	b	435730 <user_object_find+0x29c>
  4356c0:	add	x0, sp, #0x40
  4356c4:	mov	x1, x0
  4356c8:	ldr	x0, [sp, #88]
  4356cc:	bl	407ee0 <parse_uid@plt>
  4356d0:	str	w0, [sp, #68]
  4356d4:	ldr	w0, [sp, #68]
  4356d8:	cmp	w0, #0x0
  4356dc:	b.ge	4356e8 <user_object_find+0x254>  // b.tcont
  4356e0:	mov	w0, #0x0                   	// #0
  4356e4:	b	435730 <user_object_find+0x29c>
  4356e8:	ldr	x0, [sp, #80]
  4356ec:	ldr	x2, [x0, #48]
  4356f0:	ldr	w0, [sp, #64]
  4356f4:	mov	w0, w0
  4356f8:	add	x0, x0, #0x1
  4356fc:	mov	x1, x0
  435700:	mov	x0, x2
  435704:	bl	43473c <hashmap_get>
  435708:	str	x0, [sp, #72]
  43570c:	ldr	x0, [sp, #72]
  435710:	cmp	x0, #0x0
  435714:	b.ne	435720 <user_object_find+0x28c>  // b.any
  435718:	mov	w0, #0x0                   	// #0
  43571c:	b	435730 <user_object_find+0x29c>
  435720:	ldr	x1, [sp, #72]
  435724:	ldr	x0, [sp, #24]
  435728:	str	x1, [x0]
  43572c:	mov	w0, #0x1                   	// #1
  435730:	mov	w1, w0
  435734:	adrp	x0, 460000 <wordlist.10364+0x370>
  435738:	ldr	x0, [x0, #4024]
  43573c:	ldr	x2, [sp, #104]
  435740:	ldr	x0, [x0]
  435744:	eor	x0, x2, x0
  435748:	cmp	x0, #0x0
  43574c:	b.eq	435754 <user_object_find+0x2c0>  // b.none
  435750:	bl	407b20 <__stack_chk_fail@plt>
  435754:	mov	w0, w1
  435758:	ldp	x29, x30, [sp], #112
  43575c:	ret

0000000000435760 <user_bus_path>:
  435760:	stp	x29, x30, [sp, #-48]!
  435764:	mov	x29, sp
  435768:	str	x0, [sp, #24]
  43576c:	adrp	x0, 460000 <wordlist.10364+0x370>
  435770:	ldr	x0, [x0, #4024]
  435774:	ldr	x1, [x0]
  435778:	str	x1, [sp, #40]
  43577c:	mov	x1, #0x0                   	// #0
  435780:	ldr	x0, [sp, #24]
  435784:	cmp	x0, #0x0
  435788:	cset	w0, eq  // eq = none
  43578c:	and	w0, w0, #0xff
  435790:	and	x0, x0, #0xff
  435794:	cmp	x0, #0x0
  435798:	b.eq	4357c4 <user_bus_path+0x64>  // b.none
  43579c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4357a0:	add	x1, x0, #0x4bb
  4357a4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4357a8:	add	x4, x0, #0x8c8
  4357ac:	mov	w3, #0x115                 	// #277
  4357b0:	mov	x2, x1
  4357b4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4357b8:	add	x1, x0, #0x4f8
  4357bc:	mov	w0, #0x0                   	// #0
  4357c0:	bl	407650 <log_assert_failed_realm@plt>
  4357c4:	ldr	x0, [sp, #24]
  4357c8:	ldr	w0, [x0, #8]
  4357cc:	add	x3, sp, #0x20
  4357d0:	mov	w2, w0
  4357d4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4357d8:	add	x1, x0, #0x6e8
  4357dc:	mov	x0, x3
  4357e0:	bl	408060 <asprintf@plt>
  4357e4:	cmp	w0, #0x0
  4357e8:	b.ge	4357f4 <user_bus_path+0x94>  // b.tcont
  4357ec:	mov	x0, #0x0                   	// #0
  4357f0:	b	4357f8 <user_bus_path+0x98>
  4357f4:	ldr	x0, [sp, #32]
  4357f8:	mov	x1, x0
  4357fc:	adrp	x0, 460000 <wordlist.10364+0x370>
  435800:	ldr	x0, [x0, #4024]
  435804:	ldr	x2, [sp, #40]
  435808:	ldr	x0, [x0]
  43580c:	eor	x0, x2, x0
  435810:	cmp	x0, #0x0
  435814:	b.eq	43581c <user_bus_path+0xbc>  // b.none
  435818:	bl	407b20 <__stack_chk_fail@plt>
  43581c:	mov	x0, x1
  435820:	ldp	x29, x30, [sp], #48
  435824:	ret

0000000000435828 <user_node_enumerator>:
  435828:	stp	x29, x30, [sp, #-176]!
  43582c:	mov	x29, sp
  435830:	stp	x19, x20, [sp, #16]
  435834:	str	x0, [sp, #72]
  435838:	str	x1, [sp, #64]
  43583c:	str	x2, [sp, #56]
  435840:	str	x3, [sp, #48]
  435844:	str	x4, [sp, #40]
  435848:	adrp	x0, 460000 <wordlist.10364+0x370>
  43584c:	ldr	x0, [x0, #4024]
  435850:	ldr	x1, [x0]
  435854:	str	x1, [sp, #168]
  435858:	mov	x1, #0x0                   	// #0
  43585c:	str	xzr, [sp, #96]
  435860:	ldr	x0, [sp, #56]
  435864:	str	x0, [sp, #120]
  435868:	ldr	x0, [sp, #72]
  43586c:	cmp	x0, #0x0
  435870:	cset	w0, eq  // eq = none
  435874:	and	w0, w0, #0xff
  435878:	and	x0, x0, #0xff
  43587c:	cmp	x0, #0x0
  435880:	b.eq	4358ac <user_node_enumerator+0x84>  // b.none
  435884:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435888:	add	x1, x0, #0x4bb
  43588c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435890:	add	x4, x0, #0x8d8
  435894:	mov	w3, #0x125                 	// #293
  435898:	mov	x2, x1
  43589c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4358a0:	add	x1, x0, #0x4d8
  4358a4:	mov	w0, #0x0                   	// #0
  4358a8:	bl	407650 <log_assert_failed_realm@plt>
  4358ac:	ldr	x0, [sp, #64]
  4358b0:	cmp	x0, #0x0
  4358b4:	cset	w0, eq  // eq = none
  4358b8:	and	w0, w0, #0xff
  4358bc:	and	x0, x0, #0xff
  4358c0:	cmp	x0, #0x0
  4358c4:	b.eq	4358f0 <user_node_enumerator+0xc8>  // b.none
  4358c8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4358cc:	add	x1, x0, #0x4bb
  4358d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4358d4:	add	x4, x0, #0x8d8
  4358d8:	mov	w3, #0x126                 	// #294
  4358dc:	mov	x2, x1
  4358e0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4358e4:	add	x1, x0, #0x678
  4358e8:	mov	w0, #0x0                   	// #0
  4358ec:	bl	407650 <log_assert_failed_realm@plt>
  4358f0:	ldr	x0, [sp, #48]
  4358f4:	cmp	x0, #0x0
  4358f8:	cset	w0, eq  // eq = none
  4358fc:	and	w0, w0, #0xff
  435900:	and	x0, x0, #0xff
  435904:	cmp	x0, #0x0
  435908:	b.eq	435934 <user_node_enumerator+0x10c>  // b.none
  43590c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435910:	add	x1, x0, #0x4bb
  435914:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435918:	add	x4, x0, #0x8d8
  43591c:	mov	w3, #0x127                 	// #295
  435920:	mov	x2, x1
  435924:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435928:	add	x1, x0, #0x710
  43592c:	mov	w0, #0x0                   	// #0
  435930:	bl	407650 <log_assert_failed_realm@plt>
  435934:	mov	w0, #0xfffffffe            	// #-2
  435938:	str	w0, [sp, #152]
  43593c:	str	xzr, [sp, #160]
  435940:	b	435988 <user_node_enumerator+0x160>
  435944:	ldr	x0, [sp, #104]
  435948:	bl	435760 <user_bus_path>
  43594c:	str	x0, [sp, #144]
  435950:	ldr	x0, [sp, #144]
  435954:	cmp	x0, #0x0
  435958:	b.ne	435964 <user_node_enumerator+0x13c>  // b.any
  43595c:	mov	w19, #0xfffffff4            	// #-12
  435960:	b	435aa0 <user_node_enumerator+0x278>
  435964:	add	x0, sp, #0x60
  435968:	ldr	x1, [sp, #144]
  43596c:	bl	407880 <strv_consume@plt>
  435970:	str	w0, [sp, #92]
  435974:	ldr	w0, [sp, #92]
  435978:	cmp	w0, #0x0
  43597c:	b.ge	435988 <user_node_enumerator+0x160>  // b.tcont
  435980:	ldr	w19, [sp, #92]
  435984:	b	435aa0 <user_node_enumerator+0x278>
  435988:	ldr	x0, [sp, #120]
  43598c:	ldr	x0, [x0, #48]
  435990:	add	x2, sp, #0x68
  435994:	add	x1, sp, #0x98
  435998:	mov	x3, #0x0                   	// #0
  43599c:	bl	434760 <hashmap_iterate>
  4359a0:	and	w0, w0, #0xff
  4359a4:	cmp	w0, #0x0
  4359a8:	b.ne	435944 <user_node_enumerator+0x11c>  // b.any
  4359ac:	ldr	x0, [sp, #72]
  4359b0:	bl	407ad0 <sd_bus_get_current_message@plt>
  4359b4:	str	x0, [sp, #128]
  4359b8:	ldr	x0, [sp, #128]
  4359bc:	cmp	x0, #0x0
  4359c0:	b.ne	4359c8 <user_node_enumerator+0x1a0>  // b.any
  4359c4:	b	435a84 <user_node_enumerator+0x25c>
  4359c8:	str	xzr, [sp, #112]
  4359cc:	add	x0, sp, #0x70
  4359d0:	mov	x2, x0
  4359d4:	mov	x1, #0x400000              	// #4194304
  4359d8:	movk	x1, #0x8000, lsl #48
  4359dc:	ldr	x0, [sp, #128]
  4359e0:	bl	4083b0 <sd_bus_query_sender_creds@plt>
  4359e4:	str	w0, [sp, #92]
  4359e8:	ldr	w0, [sp, #92]
  4359ec:	cmp	w0, #0x0
  4359f0:	b.lt	435a70 <user_node_enumerator+0x248>  // b.tstop
  4359f4:	ldr	x0, [sp, #112]
  4359f8:	add	x1, sp, #0x58
  4359fc:	bl	407e40 <sd_bus_creds_get_owner_uid@plt>
  435a00:	str	w0, [sp, #92]
  435a04:	ldr	w0, [sp, #92]
  435a08:	cmp	w0, #0x0
  435a0c:	b.lt	435a70 <user_node_enumerator+0x248>  // b.tstop
  435a10:	ldr	x0, [sp, #120]
  435a14:	ldr	x2, [x0, #48]
  435a18:	ldr	w0, [sp, #88]
  435a1c:	mov	w0, w0
  435a20:	add	x0, x0, #0x1
  435a24:	mov	x1, x0
  435a28:	mov	x0, x2
  435a2c:	bl	43473c <hashmap_get>
  435a30:	str	x0, [sp, #104]
  435a34:	ldr	x0, [sp, #104]
  435a38:	cmp	x0, #0x0
  435a3c:	b.eq	435a70 <user_node_enumerator+0x248>  // b.none
  435a40:	add	x2, sp, #0x60
  435a44:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435a48:	add	x1, x0, #0x6a0
  435a4c:	mov	x0, x2
  435a50:	bl	407a50 <strv_extend@plt>
  435a54:	str	w0, [sp, #92]
  435a58:	ldr	w0, [sp, #92]
  435a5c:	cmp	w0, #0x0
  435a60:	b.ge	435a70 <user_node_enumerator+0x248>  // b.tcont
  435a64:	ldr	w19, [sp, #92]
  435a68:	mov	w20, #0x0                   	// #0
  435a6c:	b	435a74 <user_node_enumerator+0x24c>
  435a70:	mov	w20, #0x1                   	// #1
  435a74:	add	x0, sp, #0x70
  435a78:	bl	434708 <sd_bus_creds_unrefp>
  435a7c:	cmp	w20, #0x1
  435a80:	b.ne	435aa0 <user_node_enumerator+0x278>  // b.any
  435a84:	ldr	x0, [sp, #96]
  435a88:	str	x0, [sp, #136]
  435a8c:	str	xzr, [sp, #96]
  435a90:	ldr	x1, [sp, #136]
  435a94:	ldr	x0, [sp, #48]
  435a98:	str	x1, [x0]
  435a9c:	mov	w19, #0x1                   	// #1
  435aa0:	add	x0, sp, #0x60
  435aa4:	bl	434824 <strv_freep>
  435aa8:	mov	w1, w19
  435aac:	adrp	x0, 460000 <wordlist.10364+0x370>
  435ab0:	ldr	x0, [x0, #4024]
  435ab4:	ldr	x2, [sp, #168]
  435ab8:	ldr	x0, [x0]
  435abc:	eor	x0, x2, x0
  435ac0:	cmp	x0, #0x0
  435ac4:	b.eq	435acc <user_node_enumerator+0x2a4>  // b.none
  435ac8:	bl	407b20 <__stack_chk_fail@plt>
  435acc:	mov	w0, w1
  435ad0:	ldp	x19, x20, [sp, #16]
  435ad4:	ldp	x29, x30, [sp], #176
  435ad8:	ret

0000000000435adc <user_send_signal>:
  435adc:	stp	x29, x30, [sp, #-64]!
  435ae0:	mov	x29, sp
  435ae4:	str	x19, [sp, #16]
  435ae8:	str	x0, [sp, #40]
  435aec:	strb	w1, [sp, #39]
  435af0:	adrp	x0, 460000 <wordlist.10364+0x370>
  435af4:	ldr	x0, [x0, #4024]
  435af8:	ldr	x1, [x0]
  435afc:	str	x1, [sp, #56]
  435b00:	mov	x1, #0x0                   	// #0
  435b04:	str	xzr, [sp, #48]
  435b08:	ldr	x0, [sp, #40]
  435b0c:	cmp	x0, #0x0
  435b10:	cset	w0, eq  // eq = none
  435b14:	and	w0, w0, #0xff
  435b18:	and	x0, x0, #0xff
  435b1c:	cmp	x0, #0x0
  435b20:	b.eq	435b4c <user_send_signal+0x70>  // b.none
  435b24:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435b28:	add	x1, x0, #0x4bb
  435b2c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435b30:	add	x4, x0, #0x8f0
  435b34:	mov	w3, #0x151                 	// #337
  435b38:	mov	x2, x1
  435b3c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435b40:	add	x1, x0, #0x4f8
  435b44:	mov	w0, #0x0                   	// #0
  435b48:	bl	407650 <log_assert_failed_realm@plt>
  435b4c:	ldr	x0, [sp, #40]
  435b50:	bl	435760 <user_bus_path>
  435b54:	str	x0, [sp, #48]
  435b58:	ldr	x0, [sp, #48]
  435b5c:	cmp	x0, #0x0
  435b60:	b.ne	435b6c <user_send_signal+0x90>  // b.any
  435b64:	mov	w19, #0xfffffff4            	// #-12
  435b68:	b	435bd4 <user_send_signal+0xf8>
  435b6c:	ldr	x0, [sp, #40]
  435b70:	ldr	x0, [x0]
  435b74:	ldr	x7, [x0, #8]
  435b78:	ldrb	w0, [sp, #39]
  435b7c:	cmp	w0, #0x0
  435b80:	b.eq	435b90 <user_send_signal+0xb4>  // b.none
  435b84:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435b88:	add	x0, x0, #0x718
  435b8c:	b	435b98 <user_send_signal+0xbc>
  435b90:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435b94:	add	x0, x0, #0x720
  435b98:	ldr	x1, [sp, #40]
  435b9c:	ldr	w1, [x1, #8]
  435ba0:	ldr	x2, [sp, #48]
  435ba4:	mov	x6, x2
  435ba8:	mov	w5, w1
  435bac:	adrp	x1, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435bb0:	add	x4, x1, #0x730
  435bb4:	mov	x3, x0
  435bb8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435bbc:	add	x2, x0, #0x738
  435bc0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435bc4:	add	x1, x0, #0x758
  435bc8:	mov	x0, x7
  435bcc:	bl	407a40 <sd_bus_emit_signal@plt>
  435bd0:	mov	w19, w0
  435bd4:	add	x0, sp, #0x30
  435bd8:	bl	434668 <freep>
  435bdc:	mov	w1, w19
  435be0:	adrp	x0, 460000 <wordlist.10364+0x370>
  435be4:	ldr	x0, [x0, #4024]
  435be8:	ldr	x2, [sp, #56]
  435bec:	ldr	x0, [x0]
  435bf0:	eor	x0, x2, x0
  435bf4:	cmp	x0, #0x0
  435bf8:	b.eq	435c00 <user_send_signal+0x124>  // b.none
  435bfc:	bl	407b20 <__stack_chk_fail@plt>
  435c00:	mov	w0, w1
  435c04:	ldr	x19, [sp, #16]
  435c08:	ldp	x29, x30, [sp], #64
  435c0c:	ret

0000000000435c10 <user_send_changed>:
  435c10:	stp	x29, x30, [sp, #-304]!
  435c14:	mov	x29, sp
  435c18:	str	x19, [sp, #16]
  435c1c:	str	x0, [x29, #40]
  435c20:	str	x1, [x29, #32]
  435c24:	str	x2, [x29, #256]
  435c28:	str	x3, [x29, #264]
  435c2c:	str	x4, [x29, #272]
  435c30:	str	x5, [x29, #280]
  435c34:	str	x6, [x29, #288]
  435c38:	str	x7, [x29, #296]
  435c3c:	str	q0, [x29, #128]
  435c40:	str	q1, [x29, #144]
  435c44:	str	q2, [x29, #160]
  435c48:	str	q3, [x29, #176]
  435c4c:	str	q4, [x29, #192]
  435c50:	str	q5, [x29, #208]
  435c54:	str	q6, [x29, #224]
  435c58:	str	q7, [x29, #240]
  435c5c:	adrp	x0, 460000 <wordlist.10364+0x370>
  435c60:	ldr	x0, [x0, #4024]
  435c64:	ldr	x1, [x0]
  435c68:	str	x1, [x29, #120]
  435c6c:	mov	x1, #0x0                   	// #0
  435c70:	str	xzr, [x29, #48]
  435c74:	ldr	x0, [x29, #40]
  435c78:	cmp	x0, #0x0
  435c7c:	cset	w0, eq  // eq = none
  435c80:	and	w0, w0, #0xff
  435c84:	and	x0, x0, #0xff
  435c88:	cmp	x0, #0x0
  435c8c:	b.eq	435cb8 <user_send_changed+0xa8>  // b.none
  435c90:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435c94:	add	x1, x0, #0x4bb
  435c98:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435c9c:	add	x4, x0, #0x908
  435ca0:	mov	w3, #0x163                 	// #355
  435ca4:	mov	x2, x1
  435ca8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435cac:	add	x1, x0, #0x4f8
  435cb0:	mov	w0, #0x0                   	// #0
  435cb4:	bl	407650 <log_assert_failed_realm@plt>
  435cb8:	ldr	x0, [x29, #40]
  435cbc:	ldrb	w0, [x0, #120]
  435cc0:	ubfx	x0, x0, #1, #1
  435cc4:	and	w0, w0, #0xff
  435cc8:	eor	w0, w0, #0x1
  435ccc:	and	w0, w0, #0xff
  435cd0:	cmp	w0, #0x0
  435cd4:	b.eq	435ce0 <user_send_changed+0xd0>  // b.none
  435cd8:	mov	w19, #0x0                   	// #0
  435cdc:	b	435f84 <user_send_changed+0x374>
  435ce0:	ldr	x0, [x29, #40]
  435ce4:	bl	435760 <user_bus_path>
  435ce8:	str	x0, [x29, #48]
  435cec:	ldr	x0, [x29, #48]
  435cf0:	cmp	x0, #0x0
  435cf4:	b.ne	435d00 <user_send_changed+0xf0>  // b.any
  435cf8:	mov	w19, #0xfffffff4            	// #-12
  435cfc:	b	435f84 <user_send_changed+0x374>
  435d00:	ldr	x0, [x29, #32]
  435d04:	cmp	x0, #0x0
  435d08:	b.ne	435d18 <user_send_changed+0x108>  // b.any
  435d0c:	add	x0, x29, #0x20
  435d10:	str	x0, [x29, #56]
  435d14:	b	435f54 <user_send_changed+0x344>
  435d18:	mov	x0, #0x1                   	// #1
  435d1c:	str	x0, [x29, #64]
  435d20:	add	x0, x29, #0x130
  435d24:	str	x0, [x29, #88]
  435d28:	add	x0, x29, #0x130
  435d2c:	str	x0, [x29, #96]
  435d30:	add	x0, x29, #0x100
  435d34:	str	x0, [x29, #104]
  435d38:	mov	w0, #0xffffffd0            	// #-48
  435d3c:	str	w0, [x29, #112]
  435d40:	mov	w0, #0xffffff80            	// #-128
  435d44:	str	w0, [x29, #116]
  435d48:	b	435d58 <user_send_changed+0x148>
  435d4c:	ldr	x0, [x29, #64]
  435d50:	add	x0, x0, #0x1
  435d54:	str	x0, [x29, #64]
  435d58:	ldr	w1, [x29, #112]
  435d5c:	ldr	x0, [x29, #88]
  435d60:	cmp	w1, #0x0
  435d64:	b.lt	435d78 <user_send_changed+0x168>  // b.tstop
  435d68:	add	x1, x0, #0xf
  435d6c:	and	x1, x1, #0xfffffffffffffff8
  435d70:	str	x1, [x29, #88]
  435d74:	b	435da8 <user_send_changed+0x198>
  435d78:	add	w2, w1, #0x8
  435d7c:	str	w2, [x29, #112]
  435d80:	ldr	w2, [x29, #112]
  435d84:	cmp	w2, #0x0
  435d88:	b.le	435d9c <user_send_changed+0x18c>
  435d8c:	add	x1, x0, #0xf
  435d90:	and	x1, x1, #0xfffffffffffffff8
  435d94:	str	x1, [x29, #88]
  435d98:	b	435da8 <user_send_changed+0x198>
  435d9c:	ldr	x2, [x29, #96]
  435da0:	sxtw	x0, w1
  435da4:	add	x0, x2, x0
  435da8:	ldr	x0, [x0]
  435dac:	cmp	x0, #0x0
  435db0:	b.ne	435d4c <user_send_changed+0x13c>  // b.any
  435db4:	ldr	x0, [x29, #64]
  435db8:	add	x0, x0, #0x1
  435dbc:	str	x0, [x29, #72]
  435dc0:	ldr	x1, [x29, #72]
  435dc4:	mov	x0, #0x8                   	// #8
  435dc8:	bl	43468c <size_multiply_overflow>
  435dcc:	and	w0, w0, #0xff
  435dd0:	and	x0, x0, #0xff
  435dd4:	cmp	x0, #0x0
  435dd8:	b.eq	435e04 <user_send_changed+0x1f4>  // b.none
  435ddc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435de0:	add	x1, x0, #0x4bb
  435de4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435de8:	add	x4, x0, #0x908
  435dec:	mov	w3, #0x16c                 	// #364
  435df0:	mov	x2, x1
  435df4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435df8:	add	x1, x0, #0x770
  435dfc:	mov	w0, #0x0                   	// #0
  435e00:	bl	407650 <log_assert_failed_realm@plt>
  435e04:	ldr	x0, [x29, #72]
  435e08:	lsl	x0, x0, #3
  435e0c:	cmp	x0, #0x400, lsl #12
  435e10:	cset	w0, hi  // hi = pmore
  435e14:	and	w0, w0, #0xff
  435e18:	and	x0, x0, #0xff
  435e1c:	cmp	x0, #0x0
  435e20:	b.eq	435e4c <user_send_changed+0x23c>  // b.none
  435e24:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435e28:	add	x1, x0, #0x4bb
  435e2c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435e30:	add	x4, x0, #0x908
  435e34:	mov	w3, #0x16c                 	// #364
  435e38:	mov	x2, x1
  435e3c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435e40:	add	x1, x0, #0x7a0
  435e44:	mov	w0, #0x0                   	// #0
  435e48:	bl	407650 <log_assert_failed_realm@plt>
  435e4c:	ldr	x0, [x29, #72]
  435e50:	lsl	x0, x0, #3
  435e54:	add	x0, x0, #0xf
  435e58:	lsr	x0, x0, #4
  435e5c:	lsl	x0, x0, #4
  435e60:	sub	sp, sp, x0
  435e64:	mov	x0, sp
  435e68:	add	x0, x0, #0xf
  435e6c:	lsr	x0, x0, #4
  435e70:	lsl	x0, x0, #4
  435e74:	str	x0, [x29, #56]
  435e78:	str	xzr, [x29, #64]
  435e7c:	ldr	x0, [x29, #64]
  435e80:	lsl	x0, x0, #3
  435e84:	ldr	x1, [x29, #56]
  435e88:	add	x0, x1, x0
  435e8c:	ldr	x1, [x29, #32]
  435e90:	str	x1, [x0]
  435e94:	add	x0, x29, #0x130
  435e98:	str	x0, [x29, #88]
  435e9c:	add	x0, x29, #0x130
  435ea0:	str	x0, [x29, #96]
  435ea4:	add	x0, x29, #0x100
  435ea8:	str	x0, [x29, #104]
  435eac:	mov	w0, #0xffffffd0            	// #-48
  435eb0:	str	w0, [x29, #112]
  435eb4:	mov	w0, #0xffffff80            	// #-128
  435eb8:	str	w0, [x29, #116]
  435ebc:	ldr	x0, [x29, #64]
  435ec0:	add	x0, x0, #0x1
  435ec4:	str	x0, [x29, #64]
  435ec8:	ldr	x0, [x29, #64]
  435ecc:	lsl	x0, x0, #3
  435ed0:	ldr	x1, [x29, #56]
  435ed4:	add	x2, x1, x0
  435ed8:	ldr	w1, [x29, #112]
  435edc:	ldr	x0, [x29, #88]
  435ee0:	cmp	w1, #0x0
  435ee4:	b.lt	435ef8 <user_send_changed+0x2e8>  // b.tstop
  435ee8:	add	x1, x0, #0xf
  435eec:	and	x1, x1, #0xfffffffffffffff8
  435ef0:	str	x1, [x29, #88]
  435ef4:	b	435f28 <user_send_changed+0x318>
  435ef8:	add	w3, w1, #0x8
  435efc:	str	w3, [x29, #112]
  435f00:	ldr	w3, [x29, #112]
  435f04:	cmp	w3, #0x0
  435f08:	b.le	435f1c <user_send_changed+0x30c>
  435f0c:	add	x1, x0, #0xf
  435f10:	and	x1, x1, #0xfffffffffffffff8
  435f14:	str	x1, [x29, #88]
  435f18:	b	435f28 <user_send_changed+0x318>
  435f1c:	ldr	x3, [x29, #96]
  435f20:	sxtw	x0, w1
  435f24:	add	x0, x3, x0
  435f28:	ldr	x0, [x0]
  435f2c:	str	x0, [x2]
  435f30:	ldr	x0, [x29, #64]
  435f34:	lsl	x0, x0, #3
  435f38:	ldr	x1, [x29, #56]
  435f3c:	add	x0, x1, x0
  435f40:	ldr	x0, [x0]
  435f44:	cmp	x0, #0x0
  435f48:	b.eq	435f50 <user_send_changed+0x340>  // b.none
  435f4c:	b	435ebc <user_send_changed+0x2ac>
  435f50:	nop
  435f54:	ldr	x0, [x29, #56]
  435f58:	str	x0, [x29, #80]
  435f5c:	ldr	x0, [x29, #40]
  435f60:	ldr	x0, [x0]
  435f64:	ldr	x4, [x0, #8]
  435f68:	ldr	x1, [x29, #48]
  435f6c:	ldr	x3, [x29, #80]
  435f70:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  435f74:	add	x2, x0, #0x7c0
  435f78:	mov	x0, x4
  435f7c:	bl	4082d0 <sd_bus_emit_properties_changed_strv@plt>
  435f80:	mov	w19, w0
  435f84:	add	x0, x29, #0x30
  435f88:	bl	434668 <freep>
  435f8c:	mov	w1, w19
  435f90:	adrp	x0, 460000 <wordlist.10364+0x370>
  435f94:	ldr	x0, [x0, #4024]
  435f98:	ldr	x2, [x29, #120]
  435f9c:	ldr	x0, [x0]
  435fa0:	eor	x0, x2, x0
  435fa4:	cmp	x0, #0x0
  435fa8:	b.eq	435fb0 <user_send_changed+0x3a0>  // b.none
  435fac:	bl	407b20 <__stack_chk_fail@plt>
  435fb0:	mov	w0, w1
  435fb4:	mov	sp, x29
  435fb8:	ldr	x19, [sp, #16]
  435fbc:	ldp	x29, x30, [sp], #304
  435fc0:	ret

0000000000435fc4 <ALIGN_TO>:
  435fc4:	sub	sp, sp, #0x10
  435fc8:	str	x0, [sp, #8]
  435fcc:	str	x1, [sp]
  435fd0:	ldr	x1, [sp, #8]
  435fd4:	ldr	x0, [sp]
  435fd8:	add	x0, x1, x0
  435fdc:	sub	x1, x0, #0x1
  435fe0:	ldr	x0, [sp]
  435fe4:	neg	x0, x0
  435fe8:	and	x0, x1, x0
  435fec:	add	sp, sp, #0x10
  435ff0:	ret

0000000000435ff4 <mfree>:
  435ff4:	stp	x29, x30, [sp, #-32]!
  435ff8:	mov	x29, sp
  435ffc:	str	x0, [sp, #24]
  436000:	ldr	x0, [sp, #24]
  436004:	bl	408150 <free@plt>
  436008:	mov	x0, #0x0                   	// #0
  43600c:	ldp	x29, x30, [sp], #32
  436010:	ret

0000000000436014 <freep>:
  436014:	stp	x29, x30, [sp, #-32]!
  436018:	mov	x29, sp
  43601c:	str	x0, [sp, #24]
  436020:	ldr	x0, [sp, #24]
  436024:	ldr	x0, [x0]
  436028:	bl	408150 <free@plt>
  43602c:	nop
  436030:	ldp	x29, x30, [sp], #32
  436034:	ret

0000000000436038 <size_multiply_overflow>:
  436038:	sub	sp, sp, #0x10
  43603c:	str	x0, [sp, #8]
  436040:	str	x1, [sp]
  436044:	ldr	x0, [sp]
  436048:	cmp	x0, #0x0
  43604c:	cset	w0, ne  // ne = any
  436050:	and	w0, w0, #0xff
  436054:	and	x0, x0, #0xff
  436058:	cmp	x0, #0x0
  43605c:	b.eq	4360a0 <size_multiply_overflow+0x68>  // b.none
  436060:	mov	x2, #0x0                   	// #0
  436064:	ldr	x1, [sp, #8]
  436068:	ldr	x0, [sp]
  43606c:	umulh	x0, x1, x0
  436070:	cmp	x0, #0x0
  436074:	b.eq	43607c <size_multiply_overflow+0x44>  // b.none
  436078:	mov	x2, #0x1                   	// #1
  43607c:	mov	x0, x2
  436080:	cmp	x0, #0x0
  436084:	cset	w0, ne  // ne = any
  436088:	and	w0, w0, #0xff
  43608c:	and	x0, x0, #0xff
  436090:	cmp	x0, #0x0
  436094:	b.eq	4360a0 <size_multiply_overflow+0x68>  // b.none
  436098:	mov	w0, #0x1                   	// #1
  43609c:	b	4360a4 <size_multiply_overflow+0x6c>
  4360a0:	mov	w0, #0x0                   	// #0
  4360a4:	and	w0, w0, #0x1
  4360a8:	and	w0, w0, #0xff
  4360ac:	add	sp, sp, #0x10
  4360b0:	ret

00000000004360b4 <malloc_multiply>:
  4360b4:	stp	x29, x30, [sp, #-32]!
  4360b8:	mov	x29, sp
  4360bc:	str	x0, [sp, #24]
  4360c0:	str	x1, [sp, #16]
  4360c4:	ldr	x1, [sp, #16]
  4360c8:	ldr	x0, [sp, #24]
  4360cc:	bl	436038 <size_multiply_overflow>
  4360d0:	and	w0, w0, #0xff
  4360d4:	cmp	w0, #0x0
  4360d8:	b.eq	4360e4 <malloc_multiply+0x30>  // b.none
  4360dc:	mov	x0, #0x0                   	// #0
  4360e0:	b	436100 <malloc_multiply+0x4c>
  4360e4:	ldr	x1, [sp, #24]
  4360e8:	ldr	x0, [sp, #16]
  4360ec:	mul	x0, x1, x0
  4360f0:	cmp	x0, #0x0
  4360f4:	b.ne	4360fc <malloc_multiply+0x48>  // b.any
  4360f8:	mov	x0, #0x1                   	// #1
  4360fc:	bl	407ce0 <malloc@plt>
  436100:	ldp	x29, x30, [sp], #32
  436104:	ret

0000000000436108 <hashmap_remove_value>:
  436108:	stp	x29, x30, [sp, #-48]!
  43610c:	mov	x29, sp
  436110:	str	x0, [sp, #40]
  436114:	str	x1, [sp, #32]
  436118:	str	x2, [sp, #24]
  43611c:	ldr	x2, [sp, #24]
  436120:	ldr	x1, [sp, #32]
  436124:	ldr	x0, [sp, #40]
  436128:	bl	407c40 <internal_hashmap_remove_value@plt>
  43612c:	ldp	x29, x30, [sp], #48
  436130:	ret

0000000000436134 <yes_no>:
  436134:	sub	sp, sp, #0x10
  436138:	strb	w0, [sp, #15]
  43613c:	ldrb	w0, [sp, #15]
  436140:	cmp	w0, #0x0
  436144:	b.eq	436154 <yes_no+0x20>  // b.none
  436148:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43614c:	add	x0, x0, #0x920
  436150:	b	43615c <yes_no+0x28>
  436154:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436158:	add	x0, x0, #0x928
  43615c:	add	sp, sp, #0x10
  436160:	ret

0000000000436164 <timestamp_is_set>:
  436164:	sub	sp, sp, #0x10
  436168:	str	x0, [sp, #8]
  43616c:	ldr	x0, [sp, #8]
  436170:	cmp	x0, #0x0
  436174:	b.eq	43618c <timestamp_is_set+0x28>  // b.none
  436178:	ldr	x0, [sp, #8]
  43617c:	cmn	x0, #0x1
  436180:	b.eq	43618c <timestamp_is_set+0x28>  // b.none
  436184:	mov	w0, #0x1                   	// #1
  436188:	b	436190 <timestamp_is_set+0x2c>
  43618c:	mov	w0, #0x0                   	// #0
  436190:	and	w0, w0, #0x1
  436194:	and	w0, w0, #0xff
  436198:	add	sp, sp, #0x10
  43619c:	ret

00000000004361a0 <dual_timestamp_is_set>:
  4361a0:	stp	x29, x30, [sp, #-32]!
  4361a4:	mov	x29, sp
  4361a8:	str	x0, [sp, #24]
  4361ac:	ldr	x0, [sp, #24]
  4361b0:	ldr	x0, [x0]
  4361b4:	bl	436164 <timestamp_is_set>
  4361b8:	and	w0, w0, #0xff
  4361bc:	cmp	w0, #0x0
  4361c0:	b.ne	4361dc <dual_timestamp_is_set+0x3c>  // b.any
  4361c4:	ldr	x0, [sp, #24]
  4361c8:	ldr	x0, [x0, #8]
  4361cc:	bl	436164 <timestamp_is_set>
  4361d0:	and	w0, w0, #0xff
  4361d4:	cmp	w0, #0x0
  4361d8:	b.eq	4361e4 <dual_timestamp_is_set+0x44>  // b.none
  4361dc:	mov	w0, #0x1                   	// #1
  4361e0:	b	4361e8 <dual_timestamp_is_set+0x48>
  4361e4:	mov	w0, #0x0                   	// #0
  4361e8:	and	w0, w0, #0x1
  4361ec:	and	w0, w0, #0xff
  4361f0:	ldp	x29, x30, [sp], #32
  4361f4:	ret

00000000004361f8 <usec_add>:
  4361f8:	sub	sp, sp, #0x20
  4361fc:	str	x0, [sp, #8]
  436200:	str	x1, [sp]
  436204:	ldr	x1, [sp, #8]
  436208:	ldr	x0, [sp]
  43620c:	add	x0, x1, x0
  436210:	str	x0, [sp, #24]
  436214:	ldr	x1, [sp, #24]
  436218:	ldr	x0, [sp, #8]
  43621c:	cmp	x1, x0
  436220:	b.cc	436234 <usec_add+0x3c>  // b.lo, b.ul, b.last
  436224:	ldr	x1, [sp, #24]
  436228:	ldr	x0, [sp]
  43622c:	cmp	x1, x0
  436230:	b.cs	43623c <usec_add+0x44>  // b.hs, b.nlast
  436234:	mov	x0, #0xffffffffffffffff    	// #-1
  436238:	b	436240 <usec_add+0x48>
  43623c:	ldr	x0, [sp, #24]
  436240:	add	sp, sp, #0x20
  436244:	ret

0000000000436248 <uid_is_system>:
  436248:	sub	sp, sp, #0x10
  43624c:	str	w0, [sp, #12]
  436250:	ldr	w0, [sp, #12]
  436254:	cmp	w0, #0x3e7
  436258:	cset	w0, ls  // ls = plast
  43625c:	and	w0, w0, #0xff
  436260:	add	sp, sp, #0x10
  436264:	ret

0000000000436268 <fclosep>:
  436268:	stp	x29, x30, [sp, #-32]!
  43626c:	mov	x29, sp
  436270:	str	x0, [sp, #24]
  436274:	ldr	x0, [sp, #24]
  436278:	ldr	x0, [x0]
  43627c:	bl	406fc0 <safe_fclose@plt>
  436280:	nop
  436284:	ldp	x29, x30, [sp], #32
  436288:	ret

000000000043628c <user_freep>:
  43628c:	stp	x29, x30, [sp, #-32]!
  436290:	mov	x29, sp
  436294:	str	x0, [sp, #24]
  436298:	ldr	x0, [sp, #24]
  43629c:	ldr	x0, [x0]
  4362a0:	cmp	x0, #0x0
  4362a4:	b.eq	4362b4 <user_freep+0x28>  // b.none
  4362a8:	ldr	x0, [sp, #24]
  4362ac:	ldr	x0, [x0]
  4362b0:	bl	436744 <user_free>
  4362b4:	nop
  4362b8:	ldp	x29, x30, [sp], #32
  4362bc:	ret

00000000004362c0 <user_new>:
  4362c0:	stp	x29, x30, [sp, #-272]!
  4362c4:	mov	x29, sp
  4362c8:	str	x19, [sp, #16]
  4362cc:	str	x0, [sp, #72]
  4362d0:	str	x1, [sp, #64]
  4362d4:	str	w2, [sp, #60]
  4362d8:	str	w3, [sp, #56]
  4362dc:	str	x4, [sp, #48]
  4362e0:	str	x5, [sp, #40]
  4362e4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4362e8:	ldr	x0, [x0, #4024]
  4362ec:	ldr	x1, [x0]
  4362f0:	str	x1, [sp, #264]
  4362f4:	mov	x1, #0x0                   	// #0
  4362f8:	str	xzr, [sp, #96]
  4362fc:	ldr	x0, [sp, #72]
  436300:	cmp	x0, #0x0
  436304:	cset	w0, eq  // eq = none
  436308:	and	w0, w0, #0xff
  43630c:	and	x0, x0, #0xff
  436310:	cmp	x0, #0x0
  436314:	b.eq	436340 <user_new+0x80>  // b.none
  436318:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43631c:	add	x1, x0, #0x933
  436320:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  436324:	add	x4, x0, #0x90
  436328:	mov	w3, #0x31                  	// #49
  43632c:	mov	x2, x1
  436330:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436334:	add	x1, x0, #0x950
  436338:	mov	w0, #0x0                   	// #0
  43633c:	bl	407650 <log_assert_failed_realm@plt>
  436340:	ldr	x0, [sp, #64]
  436344:	cmp	x0, #0x0
  436348:	cset	w0, eq  // eq = none
  43634c:	and	w0, w0, #0xff
  436350:	and	x0, x0, #0xff
  436354:	cmp	x0, #0x0
  436358:	b.eq	436384 <user_new+0xc4>  // b.none
  43635c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436360:	add	x1, x0, #0x933
  436364:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  436368:	add	x4, x0, #0x90
  43636c:	mov	w3, #0x32                  	// #50
  436370:	mov	x2, x1
  436374:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436378:	add	x1, x0, #0x958
  43637c:	mov	w0, #0x0                   	// #0
  436380:	bl	407650 <log_assert_failed_realm@plt>
  436384:	ldr	x0, [sp, #48]
  436388:	cmp	x0, #0x0
  43638c:	cset	w0, eq  // eq = none
  436390:	and	w0, w0, #0xff
  436394:	and	x0, x0, #0xff
  436398:	cmp	x0, #0x0
  43639c:	b.eq	4363c8 <user_new+0x108>  // b.none
  4363a0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4363a4:	add	x1, x0, #0x933
  4363a8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4363ac:	add	x4, x0, #0x90
  4363b0:	mov	w3, #0x33                  	// #51
  4363b4:	mov	x2, x1
  4363b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4363bc:	add	x1, x0, #0x960
  4363c0:	mov	w0, #0x0                   	// #0
  4363c4:	bl	407650 <log_assert_failed_realm@plt>
  4363c8:	mov	x1, #0x1                   	// #1
  4363cc:	mov	x0, #0x98                  	// #152
  4363d0:	bl	4360b4 <malloc_multiply>
  4363d4:	str	x0, [sp, #96]
  4363d8:	ldr	x0, [sp, #96]
  4363dc:	cmp	x0, #0x0
  4363e0:	b.ne	4363ec <user_new+0x12c>  // b.any
  4363e4:	mov	w19, #0xfffffff4            	// #-12
  4363e8:	b	436708 <user_new+0x448>
  4363ec:	ldr	x0, [sp, #96]
  4363f0:	stp	xzr, xzr, [x0]
  4363f4:	stp	xzr, xzr, [x0, #16]
  4363f8:	stp	xzr, xzr, [x0, #32]
  4363fc:	stp	xzr, xzr, [x0, #48]
  436400:	stp	xzr, xzr, [x0, #64]
  436404:	stp	xzr, xzr, [x0, #80]
  436408:	stp	xzr, xzr, [x0, #96]
  43640c:	stp	xzr, xzr, [x0, #112]
  436410:	stp	xzr, xzr, [x0, #128]
  436414:	str	xzr, [x0, #144]
  436418:	ldr	x1, [sp, #64]
  43641c:	str	x1, [x0]
  436420:	ldr	w1, [sp, #60]
  436424:	str	w1, [x0, #8]
  436428:	ldr	w1, [sp, #56]
  43642c:	str	w1, [x0, #12]
  436430:	mov	x1, #0xffffffffffffffff    	// #-1
  436434:	str	x1, [x0, #104]
  436438:	ldr	x19, [sp, #96]
  43643c:	ldr	x0, [sp, #48]
  436440:	bl	407f90 <strdup@plt>
  436444:	str	x0, [x19, #16]
  436448:	ldr	x0, [sp, #96]
  43644c:	ldr	x0, [x0, #16]
  436450:	cmp	x0, #0x0
  436454:	b.ne	436460 <user_new+0x1a0>  // b.any
  436458:	mov	w19, #0xfffffff4            	// #-12
  43645c:	b	436708 <user_new+0x448>
  436460:	ldr	x19, [sp, #96]
  436464:	ldr	x0, [sp, #40]
  436468:	bl	407f90 <strdup@plt>
  43646c:	str	x0, [x19, #24]
  436470:	ldr	x0, [sp, #96]
  436474:	ldr	x0, [x0, #24]
  436478:	cmp	x0, #0x0
  43647c:	b.ne	436488 <user_new+0x1c8>  // b.any
  436480:	mov	w19, #0xfffffff4            	// #-12
  436484:	b	436708 <user_new+0x448>
  436488:	ldr	x0, [sp, #96]
  43648c:	ldr	x0, [x0, #24]
  436490:	mov	w1, #0x1                   	// #1
  436494:	bl	407f10 <path_simplify@plt>
  436498:	ldr	x0, [sp, #96]
  43649c:	add	x3, x0, #0x20
  4364a0:	ldr	w2, [sp, #60]
  4364a4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4364a8:	add	x1, x0, #0x968
  4364ac:	mov	x0, x3
  4364b0:	bl	408060 <asprintf@plt>
  4364b4:	cmp	w0, #0x0
  4364b8:	b.ge	4364c4 <user_new+0x204>  // b.tcont
  4364bc:	mov	w19, #0xfffffff4            	// #-12
  4364c0:	b	436708 <user_new+0x448>
  4364c4:	ldr	x0, [sp, #96]
  4364c8:	add	x3, x0, #0x28
  4364cc:	ldr	w2, [sp, #60]
  4364d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4364d4:	add	x1, x0, #0x980
  4364d8:	mov	x0, x3
  4364dc:	bl	408060 <asprintf@plt>
  4364e0:	cmp	w0, #0x0
  4364e4:	b.ge	4364f0 <user_new+0x230>  // b.tcont
  4364e8:	mov	w19, #0xfffffff4            	// #-12
  4364ec:	b	436708 <user_new+0x448>
  4364f0:	add	x4, sp, #0xf8
  4364f4:	ldr	w3, [sp, #60]
  4364f8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4364fc:	add	x2, x0, #0x990
  436500:	mov	x1, #0xd                   	// #13
  436504:	mov	x0, x4
  436508:	bl	407460 <snprintf@plt>
  43650c:	cmp	w0, #0xc
  436510:	cset	w0, hi  // hi = pmore
  436514:	and	w0, w0, #0xff
  436518:	and	x0, x0, #0xff
  43651c:	cmp	x0, #0x0
  436520:	b.eq	43654c <user_new+0x28c>  // b.none
  436524:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436528:	add	x1, x0, #0x933
  43652c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  436530:	add	x4, x0, #0x90
  436534:	mov	w3, #0x50                  	// #80
  436538:	mov	x2, x1
  43653c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436540:	add	x1, x0, #0x998
  436544:	mov	w0, #0x0                   	// #0
  436548:	bl	407650 <log_assert_failed_realm@plt>
  43654c:	ldr	x0, [sp, #96]
  436550:	add	x1, x0, #0x30
  436554:	add	x0, sp, #0xf8
  436558:	mov	x2, x1
  43655c:	mov	x1, x0
  436560:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436564:	add	x0, x0, #0x9c0
  436568:	bl	4077d0 <slice_build_subslice@plt>
  43656c:	str	w0, [sp, #84]
  436570:	ldr	w0, [sp, #84]
  436574:	cmp	w0, #0x0
  436578:	b.ge	436584 <user_new+0x2c4>  // b.tcont
  43657c:	ldr	w19, [sp, #84]
  436580:	b	436708 <user_new+0x448>
  436584:	ldr	x0, [sp, #96]
  436588:	add	x0, x0, #0x38
  43658c:	add	x1, sp, #0xf8
  436590:	mov	x3, x0
  436594:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436598:	add	x2, x0, #0x9d0
  43659c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4365a0:	add	x0, x0, #0x9e0
  4365a4:	bl	4071b0 <unit_name_build@plt>
  4365a8:	str	w0, [sp, #84]
  4365ac:	ldr	w0, [sp, #84]
  4365b0:	cmp	w0, #0x0
  4365b4:	b.ge	4365c0 <user_new+0x300>  // b.tcont
  4365b8:	ldr	w19, [sp, #84]
  4365bc:	b	436708 <user_new+0x448>
  4365c0:	ldr	x0, [sp, #96]
  4365c4:	add	x0, x0, #0x40
  4365c8:	add	x1, sp, #0xf8
  4365cc:	mov	x3, x0
  4365d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4365d4:	add	x2, x0, #0x9d0
  4365d8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4365dc:	add	x0, x0, #0x9e8
  4365e0:	bl	4071b0 <unit_name_build@plt>
  4365e4:	str	w0, [sp, #84]
  4365e8:	ldr	w0, [sp, #84]
  4365ec:	cmp	w0, #0x0
  4365f0:	b.ge	4365fc <user_new+0x33c>  // b.tcont
  4365f4:	ldr	w19, [sp, #84]
  4365f8:	b	436708 <user_new+0x448>
  4365fc:	ldr	x0, [sp, #64]
  436600:	ldr	x3, [x0, #48]
  436604:	ldr	w0, [sp, #60]
  436608:	add	x0, x0, #0x1
  43660c:	mov	x1, x0
  436610:	ldr	x0, [sp, #96]
  436614:	mov	x2, x0
  436618:	mov	x0, x3
  43661c:	bl	407dd0 <hashmap_put@plt>
  436620:	str	w0, [sp, #84]
  436624:	ldr	w0, [sp, #84]
  436628:	cmp	w0, #0x0
  43662c:	b.ge	436638 <user_new+0x378>  // b.tcont
  436630:	ldr	w19, [sp, #84]
  436634:	b	436708 <user_new+0x448>
  436638:	ldr	x0, [sp, #64]
  43663c:	ldr	x3, [x0, #224]
  436640:	ldr	x0, [sp, #96]
  436644:	ldr	x0, [x0, #48]
  436648:	ldr	x1, [sp, #96]
  43664c:	mov	x2, x1
  436650:	mov	x1, x0
  436654:	mov	x0, x3
  436658:	bl	407dd0 <hashmap_put@plt>
  43665c:	str	w0, [sp, #84]
  436660:	ldr	w0, [sp, #84]
  436664:	cmp	w0, #0x0
  436668:	b.ge	436674 <user_new+0x3b4>  // b.tcont
  43666c:	ldr	w19, [sp, #84]
  436670:	b	436708 <user_new+0x448>
  436674:	ldr	x0, [sp, #64]
  436678:	ldr	x3, [x0, #224]
  43667c:	ldr	x0, [sp, #96]
  436680:	ldr	x0, [x0, #56]
  436684:	ldr	x1, [sp, #96]
  436688:	mov	x2, x1
  43668c:	mov	x1, x0
  436690:	mov	x0, x3
  436694:	bl	407dd0 <hashmap_put@plt>
  436698:	str	w0, [sp, #84]
  43669c:	ldr	w0, [sp, #84]
  4366a0:	cmp	w0, #0x0
  4366a4:	b.ge	4366b0 <user_new+0x3f0>  // b.tcont
  4366a8:	ldr	w19, [sp, #84]
  4366ac:	b	436708 <user_new+0x448>
  4366b0:	ldr	x0, [sp, #64]
  4366b4:	ldr	x3, [x0, #224]
  4366b8:	ldr	x0, [sp, #96]
  4366bc:	ldr	x0, [x0, #64]
  4366c0:	ldr	x1, [sp, #96]
  4366c4:	mov	x2, x1
  4366c8:	mov	x1, x0
  4366cc:	mov	x0, x3
  4366d0:	bl	407dd0 <hashmap_put@plt>
  4366d4:	str	w0, [sp, #84]
  4366d8:	ldr	w0, [sp, #84]
  4366dc:	cmp	w0, #0x0
  4366e0:	b.ge	4366ec <user_new+0x42c>  // b.tcont
  4366e4:	ldr	w19, [sp, #84]
  4366e8:	b	436708 <user_new+0x448>
  4366ec:	ldr	x0, [sp, #96]
  4366f0:	str	x0, [sp, #88]
  4366f4:	str	xzr, [sp, #96]
  4366f8:	ldr	x1, [sp, #88]
  4366fc:	ldr	x0, [sp, #72]
  436700:	str	x1, [x0]
  436704:	mov	w19, #0x0                   	// #0
  436708:	add	x0, sp, #0x60
  43670c:	bl	43628c <user_freep>
  436710:	mov	w1, w19
  436714:	adrp	x0, 460000 <wordlist.10364+0x370>
  436718:	ldr	x0, [x0, #4024]
  43671c:	ldr	x2, [sp, #264]
  436720:	ldr	x0, [x0]
  436724:	eor	x0, x2, x0
  436728:	cmp	x0, #0x0
  43672c:	b.eq	436734 <user_new+0x474>  // b.none
  436730:	bl	407b20 <__stack_chk_fail@plt>
  436734:	mov	w0, w1
  436738:	ldr	x19, [sp, #16]
  43673c:	ldp	x29, x30, [sp], #272
  436740:	ret

0000000000436744 <user_free>:
  436744:	stp	x29, x30, [sp, #-48]!
  436748:	mov	x29, sp
  43674c:	str	x0, [sp, #24]
  436750:	ldr	x0, [sp, #24]
  436754:	cmp	x0, #0x0
  436758:	b.ne	436764 <user_free+0x20>  // b.any
  43675c:	mov	x0, #0x0                   	// #0
  436760:	b	436a54 <user_free+0x310>
  436764:	ldr	x0, [sp, #24]
  436768:	ldrb	w0, [x0, #120]
  43676c:	and	w0, w0, #0x1
  436770:	and	w0, w0, #0xff
  436774:	cmp	w0, #0x0
  436778:	b.eq	4368a8 <user_free+0x164>  // b.none
  43677c:	ldr	x0, [sp, #24]
  436780:	ldr	x0, [x0]
  436784:	add	x0, x0, #0x60
  436788:	str	x0, [sp, #32]
  43678c:	ldr	x0, [sp, #24]
  436790:	str	x0, [sp, #40]
  436794:	ldr	x0, [sp, #40]
  436798:	cmp	x0, #0x0
  43679c:	cset	w0, eq  // eq = none
  4367a0:	and	w0, w0, #0xff
  4367a4:	and	x0, x0, #0xff
  4367a8:	cmp	x0, #0x0
  4367ac:	b.eq	4367d8 <user_free+0x94>  // b.none
  4367b0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4367b4:	add	x1, x0, #0x933
  4367b8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4367bc:	add	x4, x0, #0xa0
  4367c0:	mov	w3, #0x76                  	// #118
  4367c4:	mov	x2, x1
  4367c8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4367cc:	add	x1, x0, #0xa00
  4367d0:	mov	w0, #0x0                   	// #0
  4367d4:	bl	407650 <log_assert_failed_realm@plt>
  4367d8:	ldr	x0, [sp, #40]
  4367dc:	ldr	x0, [x0, #136]
  4367e0:	cmp	x0, #0x0
  4367e4:	b.eq	4367fc <user_free+0xb8>  // b.none
  4367e8:	ldr	x0, [sp, #40]
  4367ec:	ldr	x0, [x0, #136]
  4367f0:	ldr	x1, [sp, #40]
  4367f4:	ldr	x1, [x1, #144]
  4367f8:	str	x1, [x0, #144]
  4367fc:	ldr	x0, [sp, #40]
  436800:	ldr	x0, [x0, #144]
  436804:	cmp	x0, #0x0
  436808:	b.eq	436824 <user_free+0xe0>  // b.none
  43680c:	ldr	x0, [sp, #40]
  436810:	ldr	x0, [x0, #144]
  436814:	ldr	x1, [sp, #40]
  436818:	ldr	x1, [x1, #136]
  43681c:	str	x1, [x0, #136]
  436820:	b	436880 <user_free+0x13c>
  436824:	ldr	x0, [sp, #32]
  436828:	ldr	x0, [x0]
  43682c:	ldr	x1, [sp, #40]
  436830:	cmp	x1, x0
  436834:	cset	w0, ne  // ne = any
  436838:	and	w0, w0, #0xff
  43683c:	and	x0, x0, #0xff
  436840:	cmp	x0, #0x0
  436844:	b.eq	436870 <user_free+0x12c>  // b.none
  436848:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43684c:	add	x1, x0, #0x933
  436850:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  436854:	add	x4, x0, #0xa0
  436858:	mov	w3, #0x76                  	// #118
  43685c:	mov	x2, x1
  436860:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436864:	add	x1, x0, #0xa08
  436868:	mov	w0, #0x0                   	// #0
  43686c:	bl	407650 <log_assert_failed_realm@plt>
  436870:	ldr	x0, [sp, #40]
  436874:	ldr	x1, [x0, #136]
  436878:	ldr	x0, [sp, #32]
  43687c:	str	x1, [x0]
  436880:	ldr	x0, [sp, #40]
  436884:	str	xzr, [x0, #144]
  436888:	ldr	x0, [sp, #40]
  43688c:	ldr	x1, [x0, #144]
  436890:	ldr	x0, [sp, #40]
  436894:	str	x1, [x0, #136]
  436898:	b	4368a8 <user_free+0x164>
  43689c:	ldr	x0, [sp, #24]
  4368a0:	ldr	x0, [x0, #128]
  4368a4:	bl	42f474 <session_free>
  4368a8:	ldr	x0, [sp, #24]
  4368ac:	ldr	x0, [x0, #128]
  4368b0:	cmp	x0, #0x0
  4368b4:	b.ne	43689c <user_free+0x158>  // b.any
  4368b8:	ldr	x0, [sp, #24]
  4368bc:	ldr	x0, [x0, #56]
  4368c0:	cmp	x0, #0x0
  4368c4:	b.eq	4368ec <user_free+0x1a8>  // b.none
  4368c8:	ldr	x0, [sp, #24]
  4368cc:	ldr	x0, [x0]
  4368d0:	ldr	x3, [x0, #224]
  4368d4:	ldr	x0, [sp, #24]
  4368d8:	ldr	x0, [x0, #56]
  4368dc:	ldr	x2, [sp, #24]
  4368e0:	mov	x1, x0
  4368e4:	mov	x0, x3
  4368e8:	bl	436108 <hashmap_remove_value>
  4368ec:	ldr	x0, [sp, #24]
  4368f0:	ldr	x0, [x0, #64]
  4368f4:	cmp	x0, #0x0
  4368f8:	b.eq	436920 <user_free+0x1dc>  // b.none
  4368fc:	ldr	x0, [sp, #24]
  436900:	ldr	x0, [x0]
  436904:	ldr	x3, [x0, #224]
  436908:	ldr	x0, [sp, #24]
  43690c:	ldr	x0, [x0, #64]
  436910:	ldr	x2, [sp, #24]
  436914:	mov	x1, x0
  436918:	mov	x0, x3
  43691c:	bl	436108 <hashmap_remove_value>
  436920:	ldr	x0, [sp, #24]
  436924:	ldr	x0, [x0, #48]
  436928:	cmp	x0, #0x0
  43692c:	b.eq	436954 <user_free+0x210>  // b.none
  436930:	ldr	x0, [sp, #24]
  436934:	ldr	x0, [x0]
  436938:	ldr	x3, [x0, #224]
  43693c:	ldr	x0, [sp, #24]
  436940:	ldr	x0, [x0, #48]
  436944:	ldr	x2, [sp, #24]
  436948:	mov	x1, x0
  43694c:	mov	x0, x3
  436950:	bl	436108 <hashmap_remove_value>
  436954:	ldr	x0, [sp, #24]
  436958:	ldr	x0, [x0]
  43695c:	ldr	x3, [x0, #48]
  436960:	ldr	x0, [sp, #24]
  436964:	ldr	w0, [x0, #8]
  436968:	mov	w0, w0
  43696c:	add	x0, x0, #0x1
  436970:	ldr	x2, [sp, #24]
  436974:	mov	x1, x0
  436978:	mov	x0, x3
  43697c:	bl	436108 <hashmap_remove_value>
  436980:	ldr	x0, [sp, #24]
  436984:	ldr	x0, [x0, #112]
  436988:	bl	407550 <sd_event_source_unref@plt>
  43698c:	ldr	x0, [sp, #24]
  436990:	ldr	x0, [x0, #72]
  436994:	bl	435ff4 <mfree>
  436998:	mov	x1, x0
  43699c:	ldr	x0, [sp, #24]
  4369a0:	str	x1, [x0, #72]
  4369a4:	ldr	x0, [sp, #24]
  4369a8:	ldr	x0, [x0, #56]
  4369ac:	bl	435ff4 <mfree>
  4369b0:	mov	x1, x0
  4369b4:	ldr	x0, [sp, #24]
  4369b8:	str	x1, [x0, #56]
  4369bc:	ldr	x0, [sp, #24]
  4369c0:	ldr	x0, [x0, #64]
  4369c4:	bl	435ff4 <mfree>
  4369c8:	mov	x1, x0
  4369cc:	ldr	x0, [sp, #24]
  4369d0:	str	x1, [x0, #64]
  4369d4:	ldr	x0, [sp, #24]
  4369d8:	ldr	x0, [x0, #48]
  4369dc:	bl	435ff4 <mfree>
  4369e0:	mov	x1, x0
  4369e4:	ldr	x0, [sp, #24]
  4369e8:	str	x1, [x0, #48]
  4369ec:	ldr	x0, [sp, #24]
  4369f0:	ldr	x0, [x0, #40]
  4369f4:	bl	435ff4 <mfree>
  4369f8:	mov	x1, x0
  4369fc:	ldr	x0, [sp, #24]
  436a00:	str	x1, [x0, #40]
  436a04:	ldr	x0, [sp, #24]
  436a08:	ldr	x0, [x0, #32]
  436a0c:	bl	435ff4 <mfree>
  436a10:	mov	x1, x0
  436a14:	ldr	x0, [sp, #24]
  436a18:	str	x1, [x0, #32]
  436a1c:	ldr	x0, [sp, #24]
  436a20:	ldr	x0, [x0, #16]
  436a24:	bl	435ff4 <mfree>
  436a28:	mov	x1, x0
  436a2c:	ldr	x0, [sp, #24]
  436a30:	str	x1, [x0, #16]
  436a34:	ldr	x0, [sp, #24]
  436a38:	ldr	x0, [x0, #24]
  436a3c:	bl	435ff4 <mfree>
  436a40:	mov	x1, x0
  436a44:	ldr	x0, [sp, #24]
  436a48:	str	x1, [x0, #24]
  436a4c:	ldr	x0, [sp, #24]
  436a50:	bl	435ff4 <mfree>
  436a54:	ldp	x29, x30, [sp], #48
  436a58:	ret

0000000000436a5c <user_save_internal>:
  436a5c:	stp	x29, x30, [sp, #-128]!
  436a60:	mov	x29, sp
  436a64:	stp	x19, x20, [sp, #16]
  436a68:	str	x21, [sp, #32]
  436a6c:	str	x0, [sp, #56]
  436a70:	adrp	x0, 460000 <wordlist.10364+0x370>
  436a74:	ldr	x0, [x0, #4024]
  436a78:	ldr	x1, [x0]
  436a7c:	str	x1, [sp, #120]
  436a80:	mov	x1, #0x0                   	// #0
  436a84:	str	xzr, [sp, #96]
  436a88:	str	xzr, [sp, #104]
  436a8c:	ldr	x0, [sp, #56]
  436a90:	cmp	x0, #0x0
  436a94:	cset	w0, eq  // eq = none
  436a98:	and	w0, w0, #0xff
  436a9c:	and	x0, x0, #0xff
  436aa0:	cmp	x0, #0x0
  436aa4:	b.eq	436ad0 <user_save_internal+0x74>  // b.none
  436aa8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436aac:	add	x1, x0, #0x933
  436ab0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  436ab4:	add	x4, x0, #0xb0
  436ab8:	mov	w3, #0x9a                  	// #154
  436abc:	mov	x2, x1
  436ac0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436ac4:	add	x1, x0, #0xa18
  436ac8:	mov	w0, #0x0                   	// #0
  436acc:	bl	407650 <log_assert_failed_realm@plt>
  436ad0:	ldr	x0, [sp, #56]
  436ad4:	ldr	x0, [x0, #32]
  436ad8:	cmp	x0, #0x0
  436adc:	cset	w0, eq  // eq = none
  436ae0:	and	w0, w0, #0xff
  436ae4:	and	x0, x0, #0xff
  436ae8:	cmp	x0, #0x0
  436aec:	b.eq	436b18 <user_save_internal+0xbc>  // b.none
  436af0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436af4:	add	x1, x0, #0x933
  436af8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  436afc:	add	x4, x0, #0xb0
  436b00:	mov	w3, #0x9b                  	// #155
  436b04:	mov	x2, x1
  436b08:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436b0c:	add	x1, x0, #0xa20
  436b10:	mov	w0, #0x0                   	// #0
  436b14:	bl	407650 <log_assert_failed_realm@plt>
  436b18:	mov	w4, #0x2                   	// #2
  436b1c:	mov	w3, #0x0                   	// #0
  436b20:	mov	w2, #0x0                   	// #0
  436b24:	mov	w1, #0x1ed                 	// #493
  436b28:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436b2c:	add	x0, x0, #0xa30
  436b30:	bl	407ab0 <mkdir_safe_label@plt>
  436b34:	str	w0, [sp, #80]
  436b38:	ldr	w0, [sp, #80]
  436b3c:	cmp	w0, #0x0
  436b40:	b.lt	4370fc <user_save_internal+0x6a0>  // b.tstop
  436b44:	ldr	x0, [sp, #56]
  436b48:	ldr	x0, [x0, #32]
  436b4c:	add	x2, sp, #0x60
  436b50:	add	x1, sp, #0x68
  436b54:	bl	407870 <fopen_temporary@plt>
  436b58:	str	w0, [sp, #80]
  436b5c:	ldr	w0, [sp, #80]
  436b60:	cmp	w0, #0x0
  436b64:	b.lt	437104 <user_save_internal+0x6a8>  // b.tstop
  436b68:	ldr	x0, [sp, #104]
  436b6c:	bl	407300 <fileno@plt>
  436b70:	mov	w1, #0x1a4                 	// #420
  436b74:	bl	407150 <fchmod@plt>
  436b78:	ldr	x19, [sp, #104]
  436b7c:	ldr	x0, [sp, #56]
  436b80:	ldr	x20, [x0, #16]
  436b84:	ldr	x0, [sp, #56]
  436b88:	bl	4388a0 <user_get_state>
  436b8c:	bl	439420 <user_state_to_string>
  436b90:	mov	x21, x0
  436b94:	ldr	x0, [sp, #56]
  436b98:	ldrb	w0, [x0, #120]
  436b9c:	ubfx	x0, x0, #2, #1
  436ba0:	and	w0, w0, #0xff
  436ba4:	bl	436134 <yes_no>
  436ba8:	mov	x4, x0
  436bac:	mov	x3, x21
  436bb0:	mov	x2, x20
  436bb4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436bb8:	add	x1, x0, #0xa48
  436bbc:	mov	x0, x19
  436bc0:	bl	4074c0 <fprintf@plt>
  436bc4:	ldr	x0, [sp, #56]
  436bc8:	ldr	x0, [x0, #40]
  436bcc:	cmp	x0, #0x0
  436bd0:	b.eq	436bf4 <user_save_internal+0x198>  // b.none
  436bd4:	ldr	x3, [sp, #104]
  436bd8:	ldr	x0, [sp, #56]
  436bdc:	ldr	x0, [x0, #40]
  436be0:	mov	x2, x0
  436be4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436be8:	add	x1, x0, #0xa90
  436bec:	mov	x0, x3
  436bf0:	bl	4074c0 <fprintf@plt>
  436bf4:	ldr	x0, [sp, #56]
  436bf8:	ldr	x0, [x0, #72]
  436bfc:	cmp	x0, #0x0
  436c00:	b.eq	436c24 <user_save_internal+0x1c8>  // b.none
  436c04:	ldr	x3, [sp, #104]
  436c08:	ldr	x0, [sp, #56]
  436c0c:	ldr	x0, [x0, #72]
  436c10:	mov	x2, x0
  436c14:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436c18:	add	x1, x0, #0xaa0
  436c1c:	mov	x0, x3
  436c20:	bl	4074c0 <fprintf@plt>
  436c24:	ldr	x0, [sp, #56]
  436c28:	ldr	x0, [x0, #80]
  436c2c:	cmp	x0, #0x0
  436c30:	b.eq	436c58 <user_save_internal+0x1fc>  // b.none
  436c34:	ldr	x3, [sp, #104]
  436c38:	ldr	x0, [sp, #56]
  436c3c:	ldr	x0, [x0, #80]
  436c40:	ldr	x0, [x0, #8]
  436c44:	mov	x2, x0
  436c48:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436c4c:	add	x1, x0, #0xab0
  436c50:	mov	x0, x3
  436c54:	bl	4074c0 <fprintf@plt>
  436c58:	ldr	x0, [sp, #56]
  436c5c:	add	x0, x0, #0x58
  436c60:	bl	4361a0 <dual_timestamp_is_set>
  436c64:	and	w0, w0, #0xff
  436c68:	cmp	w0, #0x0
  436c6c:	b.eq	436c9c <user_save_internal+0x240>  // b.none
  436c70:	ldr	x4, [sp, #104]
  436c74:	ldr	x0, [sp, #56]
  436c78:	ldr	x1, [x0, #88]
  436c7c:	ldr	x0, [sp, #56]
  436c80:	ldr	x0, [x0, #96]
  436c84:	mov	x3, x0
  436c88:	mov	x2, x1
  436c8c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436c90:	add	x1, x0, #0xac0
  436c94:	mov	x0, x4
  436c98:	bl	4074c0 <fprintf@plt>
  436c9c:	ldr	x0, [sp, #56]
  436ca0:	ldr	x0, [x0, #104]
  436ca4:	cmn	x0, #0x1
  436ca8:	b.eq	436ccc <user_save_internal+0x270>  // b.none
  436cac:	ldr	x3, [sp, #104]
  436cb0:	ldr	x0, [sp, #56]
  436cb4:	ldr	x0, [x0, #104]
  436cb8:	mov	x2, x0
  436cbc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436cc0:	add	x1, x0, #0xae0
  436cc4:	mov	x0, x3
  436cc8:	bl	4074c0 <fprintf@plt>
  436ccc:	ldr	x0, [sp, #56]
  436cd0:	ldr	x0, [x0, #128]
  436cd4:	cmp	x0, #0x0
  436cd8:	b.eq	4370a8 <user_save_internal+0x64c>  // b.none
  436cdc:	ldr	x0, [sp, #104]
  436ce0:	mov	x3, x0
  436ce4:	mov	x2, #0x9                   	// #9
  436ce8:	mov	x1, #0x1                   	// #1
  436cec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436cf0:	add	x0, x0, #0xb00
  436cf4:	bl	4081e0 <fwrite@plt>
  436cf8:	mov	w0, #0x1                   	// #1
  436cfc:	strb	w0, [sp, #79]
  436d00:	ldr	x0, [sp, #56]
  436d04:	ldr	x0, [x0, #128]
  436d08:	str	x0, [sp, #112]
  436d0c:	b	436d50 <user_save_internal+0x2f4>
  436d10:	ldrb	w0, [sp, #79]
  436d14:	cmp	w0, #0x0
  436d18:	b.eq	436d24 <user_save_internal+0x2c8>  // b.none
  436d1c:	strb	wzr, [sp, #79]
  436d20:	b	436d34 <user_save_internal+0x2d8>
  436d24:	ldr	x0, [sp, #104]
  436d28:	mov	x1, x0
  436d2c:	mov	w0, #0x20                  	// #32
  436d30:	bl	407740 <fputc@plt>
  436d34:	ldr	x0, [sp, #112]
  436d38:	ldr	x0, [x0, #8]
  436d3c:	ldr	x1, [sp, #104]
  436d40:	bl	408250 <fputs@plt>
  436d44:	ldr	x0, [sp, #112]
  436d48:	ldr	x0, [x0, #256]
  436d4c:	str	x0, [sp, #112]
  436d50:	ldr	x0, [sp, #112]
  436d54:	cmp	x0, #0x0
  436d58:	b.ne	436d10 <user_save_internal+0x2b4>  // b.any
  436d5c:	ldr	x0, [sp, #104]
  436d60:	mov	x3, x0
  436d64:	mov	x2, #0x7                   	// #7
  436d68:	mov	x1, #0x1                   	// #1
  436d6c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436d70:	add	x0, x0, #0xb10
  436d74:	bl	4081e0 <fwrite@plt>
  436d78:	mov	w0, #0x1                   	// #1
  436d7c:	strb	w0, [sp, #79]
  436d80:	ldr	x0, [sp, #56]
  436d84:	ldr	x0, [x0, #128]
  436d88:	str	x0, [sp, #112]
  436d8c:	b	436dec <user_save_internal+0x390>
  436d90:	ldr	x0, [sp, #112]
  436d94:	ldr	x0, [x0, #136]
  436d98:	cmp	x0, #0x0
  436d9c:	b.eq	436ddc <user_save_internal+0x380>  // b.none
  436da0:	ldrb	w0, [sp, #79]
  436da4:	cmp	w0, #0x0
  436da8:	b.eq	436db4 <user_save_internal+0x358>  // b.none
  436dac:	strb	wzr, [sp, #79]
  436db0:	b	436dc4 <user_save_internal+0x368>
  436db4:	ldr	x0, [sp, #104]
  436db8:	mov	x1, x0
  436dbc:	mov	w0, #0x20                  	// #32
  436dc0:	bl	407740 <fputc@plt>
  436dc4:	ldr	x0, [sp, #112]
  436dc8:	ldr	x0, [x0, #136]
  436dcc:	ldr	x0, [x0, #8]
  436dd0:	ldr	x1, [sp, #104]
  436dd4:	bl	408250 <fputs@plt>
  436dd8:	b	436de0 <user_save_internal+0x384>
  436ddc:	nop
  436de0:	ldr	x0, [sp, #112]
  436de4:	ldr	x0, [x0, #256]
  436de8:	str	x0, [sp, #112]
  436dec:	ldr	x0, [sp, #112]
  436df0:	cmp	x0, #0x0
  436df4:	b.ne	436d90 <user_save_internal+0x334>  // b.any
  436df8:	ldr	x0, [sp, #104]
  436dfc:	mov	x3, x0
  436e00:	mov	x2, #0x11                  	// #17
  436e04:	mov	x1, #0x1                   	// #1
  436e08:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436e0c:	add	x0, x0, #0xb18
  436e10:	bl	4081e0 <fwrite@plt>
  436e14:	mov	w0, #0x1                   	// #1
  436e18:	strb	w0, [sp, #79]
  436e1c:	ldr	x0, [sp, #56]
  436e20:	ldr	x0, [x0, #128]
  436e24:	str	x0, [sp, #112]
  436e28:	b	436e90 <user_save_internal+0x434>
  436e2c:	ldr	x0, [sp, #112]
  436e30:	bl	4326f4 <session_is_active>
  436e34:	and	w0, w0, #0xff
  436e38:	eor	w0, w0, #0x1
  436e3c:	and	w0, w0, #0xff
  436e40:	cmp	w0, #0x0
  436e44:	b.ne	436e80 <user_save_internal+0x424>  // b.any
  436e48:	ldrb	w0, [sp, #79]
  436e4c:	cmp	w0, #0x0
  436e50:	b.eq	436e5c <user_save_internal+0x400>  // b.none
  436e54:	strb	wzr, [sp, #79]
  436e58:	b	436e6c <user_save_internal+0x410>
  436e5c:	ldr	x0, [sp, #104]
  436e60:	mov	x1, x0
  436e64:	mov	w0, #0x20                  	// #32
  436e68:	bl	407740 <fputc@plt>
  436e6c:	ldr	x0, [sp, #112]
  436e70:	ldr	x0, [x0, #8]
  436e74:	ldr	x1, [sp, #104]
  436e78:	bl	408250 <fputs@plt>
  436e7c:	b	436e84 <user_save_internal+0x428>
  436e80:	nop
  436e84:	ldr	x0, [sp, #112]
  436e88:	ldr	x0, [x0, #256]
  436e8c:	str	x0, [sp, #112]
  436e90:	ldr	x0, [sp, #112]
  436e94:	cmp	x0, #0x0
  436e98:	b.ne	436e2c <user_save_internal+0x3d0>  // b.any
  436e9c:	ldr	x0, [sp, #104]
  436ea0:	mov	x3, x0
  436ea4:	mov	x2, #0x11                  	// #17
  436ea8:	mov	x1, #0x1                   	// #1
  436eac:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436eb0:	add	x0, x0, #0xb30
  436eb4:	bl	4081e0 <fwrite@plt>
  436eb8:	mov	w0, #0x1                   	// #1
  436ebc:	strb	w0, [sp, #79]
  436ec0:	ldr	x0, [sp, #56]
  436ec4:	ldr	x0, [x0, #128]
  436ec8:	str	x0, [sp, #112]
  436ecc:	b	436f28 <user_save_internal+0x4cc>
  436ed0:	ldr	x0, [sp, #112]
  436ed4:	bl	4336cc <session_get_state>
  436ed8:	cmp	w0, #0x3
  436edc:	b.eq	436f18 <user_save_internal+0x4bc>  // b.none
  436ee0:	ldrb	w0, [sp, #79]
  436ee4:	cmp	w0, #0x0
  436ee8:	b.eq	436ef4 <user_save_internal+0x498>  // b.none
  436eec:	strb	wzr, [sp, #79]
  436ef0:	b	436f04 <user_save_internal+0x4a8>
  436ef4:	ldr	x0, [sp, #104]
  436ef8:	mov	x1, x0
  436efc:	mov	w0, #0x20                  	// #32
  436f00:	bl	407740 <fputc@plt>
  436f04:	ldr	x0, [sp, #112]
  436f08:	ldr	x0, [x0, #8]
  436f0c:	ldr	x1, [sp, #104]
  436f10:	bl	408250 <fputs@plt>
  436f14:	b	436f1c <user_save_internal+0x4c0>
  436f18:	nop
  436f1c:	ldr	x0, [sp, #112]
  436f20:	ldr	x0, [x0, #256]
  436f24:	str	x0, [sp, #112]
  436f28:	ldr	x0, [sp, #112]
  436f2c:	cmp	x0, #0x0
  436f30:	b.ne	436ed0 <user_save_internal+0x474>  // b.any
  436f34:	ldr	x0, [sp, #104]
  436f38:	mov	x3, x0
  436f3c:	mov	x2, #0xe                   	// #14
  436f40:	mov	x1, #0x1                   	// #1
  436f44:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  436f48:	add	x0, x0, #0xb48
  436f4c:	bl	4081e0 <fwrite@plt>
  436f50:	mov	w0, #0x1                   	// #1
  436f54:	strb	w0, [sp, #79]
  436f58:	ldr	x0, [sp, #56]
  436f5c:	ldr	x0, [x0, #128]
  436f60:	str	x0, [sp, #112]
  436f64:	b	436fe0 <user_save_internal+0x584>
  436f68:	ldr	x0, [sp, #112]
  436f6c:	bl	4326f4 <session_is_active>
  436f70:	and	w0, w0, #0xff
  436f74:	eor	w0, w0, #0x1
  436f78:	and	w0, w0, #0xff
  436f7c:	cmp	w0, #0x0
  436f80:	b.ne	436fd0 <user_save_internal+0x574>  // b.any
  436f84:	ldr	x0, [sp, #112]
  436f88:	ldr	x0, [x0, #136]
  436f8c:	cmp	x0, #0x0
  436f90:	b.eq	436fd0 <user_save_internal+0x574>  // b.none
  436f94:	ldrb	w0, [sp, #79]
  436f98:	cmp	w0, #0x0
  436f9c:	b.eq	436fa8 <user_save_internal+0x54c>  // b.none
  436fa0:	strb	wzr, [sp, #79]
  436fa4:	b	436fb8 <user_save_internal+0x55c>
  436fa8:	ldr	x0, [sp, #104]
  436fac:	mov	x1, x0
  436fb0:	mov	w0, #0x20                  	// #32
  436fb4:	bl	407740 <fputc@plt>
  436fb8:	ldr	x0, [sp, #112]
  436fbc:	ldr	x0, [x0, #136]
  436fc0:	ldr	x0, [x0, #8]
  436fc4:	ldr	x1, [sp, #104]
  436fc8:	bl	408250 <fputs@plt>
  436fcc:	b	436fd4 <user_save_internal+0x578>
  436fd0:	nop
  436fd4:	ldr	x0, [sp, #112]
  436fd8:	ldr	x0, [x0, #256]
  436fdc:	str	x0, [sp, #112]
  436fe0:	ldr	x0, [sp, #112]
  436fe4:	cmp	x0, #0x0
  436fe8:	b.ne	436f68 <user_save_internal+0x50c>  // b.any
  436fec:	ldr	x0, [sp, #104]
  436ff0:	mov	x3, x0
  436ff4:	mov	x2, #0xe                   	// #14
  436ff8:	mov	x1, #0x1                   	// #1
  436ffc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437000:	add	x0, x0, #0xb58
  437004:	bl	4081e0 <fwrite@plt>
  437008:	mov	w0, #0x1                   	// #1
  43700c:	strb	w0, [sp, #79]
  437010:	ldr	x0, [sp, #56]
  437014:	ldr	x0, [x0, #128]
  437018:	str	x0, [sp, #112]
  43701c:	b	43708c <user_save_internal+0x630>
  437020:	ldr	x0, [sp, #112]
  437024:	bl	4336cc <session_get_state>
  437028:	cmp	w0, #0x3
  43702c:	b.eq	43707c <user_save_internal+0x620>  // b.none
  437030:	ldr	x0, [sp, #112]
  437034:	ldr	x0, [x0, #136]
  437038:	cmp	x0, #0x0
  43703c:	b.eq	43707c <user_save_internal+0x620>  // b.none
  437040:	ldrb	w0, [sp, #79]
  437044:	cmp	w0, #0x0
  437048:	b.eq	437054 <user_save_internal+0x5f8>  // b.none
  43704c:	strb	wzr, [sp, #79]
  437050:	b	437064 <user_save_internal+0x608>
  437054:	ldr	x0, [sp, #104]
  437058:	mov	x1, x0
  43705c:	mov	w0, #0x20                  	// #32
  437060:	bl	407740 <fputc@plt>
  437064:	ldr	x0, [sp, #112]
  437068:	ldr	x0, [x0, #136]
  43706c:	ldr	x0, [x0, #8]
  437070:	ldr	x1, [sp, #104]
  437074:	bl	408250 <fputs@plt>
  437078:	b	437080 <user_save_internal+0x624>
  43707c:	nop
  437080:	ldr	x0, [sp, #112]
  437084:	ldr	x0, [x0, #256]
  437088:	str	x0, [sp, #112]
  43708c:	ldr	x0, [sp, #112]
  437090:	cmp	x0, #0x0
  437094:	b.ne	437020 <user_save_internal+0x5c4>  // b.any
  437098:	ldr	x0, [sp, #104]
  43709c:	mov	x1, x0
  4370a0:	mov	w0, #0xa                   	// #10
  4370a4:	bl	407740 <fputc@plt>
  4370a8:	ldr	x0, [sp, #104]
  4370ac:	bl	408360 <fflush_and_check@plt>
  4370b0:	str	w0, [sp, #80]
  4370b4:	ldr	w0, [sp, #80]
  4370b8:	cmp	w0, #0x0
  4370bc:	b.lt	43710c <user_save_internal+0x6b0>  // b.tstop
  4370c0:	ldr	x2, [sp, #96]
  4370c4:	ldr	x0, [sp, #56]
  4370c8:	ldr	x0, [x0, #32]
  4370cc:	mov	x1, x0
  4370d0:	mov	x0, x2
  4370d4:	bl	407370 <rename@plt>
  4370d8:	cmp	w0, #0x0
  4370dc:	b.ge	4370f4 <user_save_internal+0x698>  // b.tcont
  4370e0:	bl	407960 <__errno_location@plt>
  4370e4:	ldr	w0, [x0]
  4370e8:	neg	w0, w0
  4370ec:	str	w0, [sp, #80]
  4370f0:	b	437110 <user_save_internal+0x6b4>
  4370f4:	mov	w19, #0x0                   	// #0
  4370f8:	b	4371c8 <user_save_internal+0x76c>
  4370fc:	nop
  437100:	b	437110 <user_save_internal+0x6b4>
  437104:	nop
  437108:	b	437110 <user_save_internal+0x6b4>
  43710c:	nop
  437110:	ldr	x0, [sp, #56]
  437114:	ldr	x0, [x0, #32]
  437118:	bl	4070c0 <unlink@plt>
  43711c:	ldr	x0, [sp, #96]
  437120:	cmp	x0, #0x0
  437124:	b.eq	437130 <user_save_internal+0x6d4>  // b.none
  437128:	ldr	x0, [sp, #96]
  43712c:	bl	4070c0 <unlink@plt>
  437130:	mov	w0, #0x3                   	// #3
  437134:	str	w0, [sp, #84]
  437138:	ldr	w0, [sp, #80]
  43713c:	str	w0, [sp, #88]
  437140:	str	wzr, [sp, #92]
  437144:	ldr	w0, [sp, #92]
  437148:	bl	4083e0 <log_get_max_level_realm@plt>
  43714c:	mov	w1, w0
  437150:	ldr	w0, [sp, #84]
  437154:	and	w0, w0, #0x7
  437158:	cmp	w1, w0
  43715c:	b.lt	4371b0 <user_save_internal+0x754>  // b.tstop
  437160:	ldr	w0, [sp, #92]
  437164:	lsl	w1, w0, #10
  437168:	ldr	w0, [sp, #84]
  43716c:	orr	w7, w1, w0
  437170:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437174:	add	x1, x0, #0x933
  437178:	ldr	x0, [sp, #56]
  43717c:	ldr	x0, [x0, #32]
  437180:	mov	x6, x0
  437184:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437188:	add	x5, x0, #0xb68
  43718c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437190:	add	x4, x0, #0xc8
  437194:	mov	w3, #0x12d                 	// #301
  437198:	mov	x2, x1
  43719c:	ldr	w1, [sp, #88]
  4371a0:	mov	w0, w7
  4371a4:	bl	407d60 <log_internal_realm@plt>
  4371a8:	mov	w19, w0
  4371ac:	b	4371c4 <user_save_internal+0x768>
  4371b0:	ldr	w0, [sp, #88]
  4371b4:	cmp	w0, #0x0
  4371b8:	cneg	w0, w0, lt  // lt = tstop
  4371bc:	and	w0, w0, #0xff
  4371c0:	neg	w19, w0
  4371c4:	nop
  4371c8:	add	x0, sp, #0x68
  4371cc:	bl	436268 <fclosep>
  4371d0:	add	x0, sp, #0x60
  4371d4:	bl	436014 <freep>
  4371d8:	mov	w1, w19
  4371dc:	adrp	x0, 460000 <wordlist.10364+0x370>
  4371e0:	ldr	x0, [x0, #4024]
  4371e4:	ldr	x2, [sp, #120]
  4371e8:	ldr	x0, [x0]
  4371ec:	eor	x0, x2, x0
  4371f0:	cmp	x0, #0x0
  4371f4:	b.eq	4371fc <user_save_internal+0x7a0>  // b.none
  4371f8:	bl	407b20 <__stack_chk_fail@plt>
  4371fc:	mov	w0, w1
  437200:	ldp	x19, x20, [sp, #16]
  437204:	ldr	x21, [sp, #32]
  437208:	ldp	x29, x30, [sp], #128
  43720c:	ret

0000000000437210 <user_save>:
  437210:	stp	x29, x30, [sp, #-32]!
  437214:	mov	x29, sp
  437218:	str	x0, [sp, #24]
  43721c:	ldr	x0, [sp, #24]
  437220:	cmp	x0, #0x0
  437224:	cset	w0, eq  // eq = none
  437228:	and	w0, w0, #0xff
  43722c:	and	x0, x0, #0xff
  437230:	cmp	x0, #0x0
  437234:	b.eq	437260 <user_save+0x50>  // b.none
  437238:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43723c:	add	x1, x0, #0x933
  437240:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437244:	add	x4, x0, #0xe0
  437248:	mov	w3, #0x131                 	// #305
  43724c:	mov	x2, x1
  437250:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437254:	add	x1, x0, #0xa18
  437258:	mov	w0, #0x0                   	// #0
  43725c:	bl	407650 <log_assert_failed_realm@plt>
  437260:	ldr	x0, [sp, #24]
  437264:	ldrb	w0, [x0, #120]
  437268:	ubfx	x0, x0, #1, #1
  43726c:	and	w0, w0, #0xff
  437270:	eor	w0, w0, #0x1
  437274:	and	w0, w0, #0xff
  437278:	cmp	w0, #0x0
  43727c:	b.eq	437288 <user_save+0x78>  // b.none
  437280:	mov	w0, #0x0                   	// #0
  437284:	b	437290 <user_save+0x80>
  437288:	ldr	x0, [sp, #24]
  43728c:	bl	436a5c <user_save_internal>
  437290:	ldp	x29, x30, [sp], #32
  437294:	ret

0000000000437298 <user_load>:
  437298:	sub	sp, sp, #0xb0
  43729c:	stp	x29, x30, [sp, #48]
  4372a0:	add	x29, sp, #0x30
  4372a4:	str	x19, [sp, #64]
  4372a8:	str	x0, [sp, #88]
  4372ac:	adrp	x0, 460000 <wordlist.10364+0x370>
  4372b0:	ldr	x0, [x0, #4024]
  4372b4:	ldr	x1, [x0]
  4372b8:	str	x1, [sp, #168]
  4372bc:	mov	x1, #0x0                   	// #0
  4372c0:	str	xzr, [sp, #136]
  4372c4:	str	xzr, [sp, #144]
  4372c8:	str	xzr, [sp, #152]
  4372cc:	str	xzr, [sp, #160]
  4372d0:	ldr	x0, [sp, #88]
  4372d4:	cmp	x0, #0x0
  4372d8:	cset	w0, eq  // eq = none
  4372dc:	and	w0, w0, #0xff
  4372e0:	and	x0, x0, #0xff
  4372e4:	cmp	x0, #0x0
  4372e8:	b.eq	437314 <user_load+0x7c>  // b.none
  4372ec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4372f0:	add	x1, x0, #0x933
  4372f4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4372f8:	add	x4, x0, #0xf0
  4372fc:	mov	w3, #0x13d                 	// #317
  437300:	mov	x2, x1
  437304:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437308:	add	x1, x0, #0xa18
  43730c:	mov	w0, #0x0                   	// #0
  437310:	bl	407650 <log_assert_failed_realm@plt>
  437314:	ldr	x0, [sp, #88]
  437318:	ldr	x1, [x0, #32]
  43731c:	ldr	x0, [sp, #88]
  437320:	add	x2, x0, #0x48
  437324:	add	x4, sp, #0x88
  437328:	add	x3, sp, #0x98
  43732c:	str	xzr, [sp, #32]
  437330:	add	x0, sp, #0xa0
  437334:	str	x0, [sp, #24]
  437338:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43733c:	add	x0, x0, #0xbb8
  437340:	str	x0, [sp, #16]
  437344:	add	x0, sp, #0x90
  437348:	str	x0, [sp, #8]
  43734c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437350:	add	x0, x0, #0xbd0
  437354:	str	x0, [sp]
  437358:	mov	x7, x4
  43735c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437360:	add	x6, x0, #0xb88
  437364:	mov	x5, x3
  437368:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43736c:	add	x4, x0, #0xb98
  437370:	mov	x3, x2
  437374:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437378:	add	x2, x0, #0xba8
  43737c:	mov	x0, #0x0                   	// #0
  437380:	bl	407a20 <parse_env_file_sentinel@plt>
  437384:	str	w0, [sp, #108]
  437388:	ldr	w0, [sp, #108]
  43738c:	cmn	w0, #0x2
  437390:	b.ne	43739c <user_load+0x104>  // b.any
  437394:	mov	w19, #0x0                   	// #0
  437398:	b	437578 <user_load+0x2e0>
  43739c:	ldr	w0, [sp, #108]
  4373a0:	cmp	w0, #0x0
  4373a4:	b.ge	437440 <user_load+0x1a8>  // b.tcont
  4373a8:	mov	w0, #0x3                   	// #3
  4373ac:	str	w0, [sp, #124]
  4373b0:	ldr	w0, [sp, #108]
  4373b4:	str	w0, [sp, #128]
  4373b8:	str	wzr, [sp, #132]
  4373bc:	ldr	w0, [sp, #132]
  4373c0:	bl	4083e0 <log_get_max_level_realm@plt>
  4373c4:	mov	w1, w0
  4373c8:	ldr	w0, [sp, #124]
  4373cc:	and	w0, w0, #0x7
  4373d0:	cmp	w1, w0
  4373d4:	b.lt	437428 <user_load+0x190>  // b.tstop
  4373d8:	ldr	w0, [sp, #132]
  4373dc:	lsl	w1, w0, #10
  4373e0:	ldr	w0, [sp, #124]
  4373e4:	orr	w7, w1, w0
  4373e8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4373ec:	add	x1, x0, #0x933
  4373f0:	ldr	x0, [sp, #88]
  4373f4:	ldr	x0, [x0, #32]
  4373f8:	mov	x6, x0
  4373fc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437400:	add	x5, x0, #0xbe0
  437404:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437408:	add	x4, x0, #0x100
  43740c:	mov	w3, #0x148                 	// #328
  437410:	mov	x2, x1
  437414:	ldr	w1, [sp, #128]
  437418:	mov	w0, w7
  43741c:	bl	407d60 <log_internal_realm@plt>
  437420:	mov	w19, w0
  437424:	b	437578 <user_load+0x2e0>
  437428:	ldr	w0, [sp, #128]
  43742c:	cmp	w0, #0x0
  437430:	cneg	w0, w0, lt  // lt = tstop
  437434:	and	w0, w0, #0xff
  437438:	neg	w19, w0
  43743c:	b	437578 <user_load+0x2e0>
  437440:	ldr	x0, [sp, #152]
  437444:	cmp	x0, #0x0
  437448:	b.eq	437508 <user_load+0x270>  // b.none
  43744c:	ldr	x0, [sp, #152]
  437450:	bl	407290 <parse_boolean@plt>
  437454:	str	w0, [sp, #108]
  437458:	ldr	w0, [sp, #108]
  43745c:	cmp	w0, #0x0
  437460:	b.ge	4374e8 <user_load+0x250>  // b.tcont
  437464:	mov	w0, #0x7                   	// #7
  437468:	str	w0, [sp, #112]
  43746c:	ldr	w0, [sp, #108]
  437470:	str	w0, [sp, #116]
  437474:	str	wzr, [sp, #120]
  437478:	ldr	w0, [sp, #120]
  43747c:	bl	4083e0 <log_get_max_level_realm@plt>
  437480:	mov	w1, w0
  437484:	ldr	w0, [sp, #112]
  437488:	and	w0, w0, #0x7
  43748c:	cmp	w1, w0
  437490:	b.lt	4374dc <user_load+0x244>  // b.tstop
  437494:	ldr	w0, [sp, #120]
  437498:	lsl	w1, w0, #10
  43749c:	ldr	w0, [sp, #112]
  4374a0:	orr	w7, w1, w0
  4374a4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4374a8:	add	x1, x0, #0x933
  4374ac:	ldr	x0, [sp, #152]
  4374b0:	mov	x6, x0
  4374b4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4374b8:	add	x5, x0, #0xbf8
  4374bc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4374c0:	add	x4, x0, #0x100
  4374c4:	mov	w3, #0x14d                 	// #333
  4374c8:	mov	x2, x1
  4374cc:	ldr	w1, [sp, #116]
  4374d0:	mov	w0, w7
  4374d4:	bl	407d60 <log_internal_realm@plt>
  4374d8:	b	437508 <user_load+0x270>
  4374dc:	ldr	w0, [sp, #116]
  4374e0:	cmp	w0, #0x0
  4374e4:	b	437508 <user_load+0x270>
  4374e8:	ldr	w0, [sp, #108]
  4374ec:	cmp	w0, #0x0
  4374f0:	cset	w0, ne  // ne = any
  4374f4:	and	w2, w0, #0xff
  4374f8:	ldr	x1, [sp, #88]
  4374fc:	ldrb	w0, [x1, #120]
  437500:	bfi	w0, w2, #2, #1
  437504:	strb	w0, [x1, #120]
  437508:	ldr	x0, [sp, #136]
  43750c:	cmp	x0, #0x0
  437510:	b.eq	43752c <user_load+0x294>  // b.none
  437514:	ldr	x2, [sp, #136]
  437518:	ldr	x0, [sp, #88]
  43751c:	add	x0, x0, #0x58
  437520:	mov	x1, x0
  437524:	mov	x0, x2
  437528:	bl	408000 <deserialize_usec@plt>
  43752c:	ldr	x0, [sp, #144]
  437530:	cmp	x0, #0x0
  437534:	b.eq	437550 <user_load+0x2b8>  // b.none
  437538:	ldr	x2, [sp, #144]
  43753c:	ldr	x0, [sp, #88]
  437540:	add	x0, x0, #0x60
  437544:	mov	x1, x0
  437548:	mov	x0, x2
  43754c:	bl	408000 <deserialize_usec@plt>
  437550:	ldr	x0, [sp, #160]
  437554:	cmp	x0, #0x0
  437558:	b.eq	437574 <user_load+0x2dc>  // b.none
  43755c:	ldr	x2, [sp, #160]
  437560:	ldr	x0, [sp, #88]
  437564:	add	x0, x0, #0x68
  437568:	mov	x1, x0
  43756c:	mov	x0, x2
  437570:	bl	408000 <deserialize_usec@plt>
  437574:	mov	w19, #0x0                   	// #0
  437578:	add	x0, sp, #0xa0
  43757c:	bl	436014 <freep>
  437580:	add	x0, sp, #0x98
  437584:	bl	436014 <freep>
  437588:	add	x0, sp, #0x90
  43758c:	bl	436014 <freep>
  437590:	add	x0, sp, #0x88
  437594:	bl	436014 <freep>
  437598:	mov	w1, w19
  43759c:	adrp	x0, 460000 <wordlist.10364+0x370>
  4375a0:	ldr	x0, [x0, #4024]
  4375a4:	ldr	x2, [sp, #168]
  4375a8:	ldr	x0, [x0]
  4375ac:	eor	x0, x2, x0
  4375b0:	cmp	x0, #0x0
  4375b4:	b.eq	4375bc <user_load+0x324>  // b.none
  4375b8:	bl	407b20 <__stack_chk_fail@plt>
  4375bc:	mov	w0, w1
  4375c0:	ldr	x19, [sp, #64]
  4375c4:	ldp	x29, x30, [sp, #48]
  4375c8:	add	sp, sp, #0xb0
  4375cc:	ret

00000000004375d0 <user_start_service>:
  4375d0:	stp	x29, x30, [sp, #-112]!
  4375d4:	mov	x29, sp
  4375d8:	stp	x19, x20, [sp, #16]
  4375dc:	str	x21, [sp, #32]
  4375e0:	str	x0, [sp, #56]
  4375e4:	adrp	x0, 460000 <wordlist.10364+0x370>
  4375e8:	ldr	x0, [x0, #4024]
  4375ec:	ldr	x1, [x0]
  4375f0:	str	x1, [sp, #104]
  4375f4:	mov	x1, #0x0                   	// #0
  4375f8:	str	xzr, [sp, #80]
  4375fc:	str	xzr, [sp, #88]
  437600:	str	wzr, [sp, #96]
  437604:	ldr	x0, [sp, #56]
  437608:	cmp	x0, #0x0
  43760c:	cset	w0, eq  // eq = none
  437610:	and	w0, w0, #0xff
  437614:	and	x0, x0, #0xff
  437618:	cmp	x0, #0x0
  43761c:	b.eq	437648 <user_start_service+0x78>  // b.none
  437620:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437624:	add	x1, x0, #0x933
  437628:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43762c:	add	x4, x0, #0x110
  437630:	mov	w3, #0x160                 	// #352
  437634:	mov	x2, x1
  437638:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43763c:	add	x1, x0, #0xa18
  437640:	mov	w0, #0x0                   	// #0
  437644:	bl	407650 <log_assert_failed_realm@plt>
  437648:	ldr	x0, [sp, #56]
  43764c:	ldr	x0, [x0, #72]
  437650:	bl	435ff4 <mfree>
  437654:	mov	x1, x0
  437658:	ldr	x0, [sp, #56]
  43765c:	str	x1, [x0, #72]
  437660:	ldr	x0, [sp, #56]
  437664:	ldr	x4, [x0]
  437668:	ldr	x0, [sp, #56]
  43766c:	ldr	x1, [x0, #56]
  437670:	ldr	x0, [sp, #56]
  437674:	add	x2, x0, #0x48
  437678:	add	x0, sp, #0x50
  43767c:	mov	x3, x2
  437680:	mov	x2, x0
  437684:	mov	x0, x4
  437688:	bl	421c38 <manager_start_unit>
  43768c:	str	w0, [sp, #64]
  437690:	ldr	w0, [sp, #64]
  437694:	cmp	w0, #0x0
  437698:	b.ge	437754 <user_start_service+0x184>  // b.tcont
  43769c:	add	x2, sp, #0x50
  4376a0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4376a4:	add	x1, x0, #0xc20
  4376a8:	mov	x0, x2
  4376ac:	bl	407fb0 <sd_bus_error_has_name@plt>
  4376b0:	cmp	w0, #0x0
  4376b4:	b.eq	4376c0 <user_start_service+0xf0>  // b.none
  4376b8:	mov	w0, #0x7                   	// #7
  4376bc:	b	4376c4 <user_start_service+0xf4>
  4376c0:	mov	w0, #0x4                   	// #4
  4376c4:	str	w0, [sp, #68]
  4376c8:	ldr	w0, [sp, #64]
  4376cc:	str	w0, [sp, #72]
  4376d0:	str	wzr, [sp, #76]
  4376d4:	ldr	w0, [sp, #76]
  4376d8:	bl	4083e0 <log_get_max_level_realm@plt>
  4376dc:	mov	w1, w0
  4376e0:	ldr	w0, [sp, #68]
  4376e4:	and	w0, w0, #0x7
  4376e8:	cmp	w1, w0
  4376ec:	b.lt	43774c <user_start_service+0x17c>  // b.tstop
  4376f0:	ldr	w0, [sp, #76]
  4376f4:	lsl	w1, w0, #10
  4376f8:	ldr	w0, [sp, #68]
  4376fc:	orr	w19, w1, w0
  437700:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437704:	add	x20, x0, #0x933
  437708:	ldr	x0, [sp, #56]
  43770c:	ldr	x21, [x0, #56]
  437710:	add	x0, sp, #0x50
  437714:	ldr	w1, [sp, #64]
  437718:	bl	407000 <bus_error_message@plt>
  43771c:	mov	x7, x0
  437720:	mov	x6, x21
  437724:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437728:	add	x5, x0, #0xc48
  43772c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437730:	add	x4, x0, #0x128
  437734:	mov	w3, #0x16a                 	// #362
  437738:	mov	x2, x20
  43773c:	ldr	w1, [sp, #72]
  437740:	mov	w0, w19
  437744:	bl	407d60 <log_internal_realm@plt>
  437748:	b	437754 <user_start_service+0x184>
  43774c:	ldr	w0, [sp, #72]
  437750:	cmp	w0, #0x0
  437754:	add	x0, sp, #0x50
  437758:	bl	407c80 <sd_bus_error_free@plt>
  43775c:	nop
  437760:	adrp	x0, 460000 <wordlist.10364+0x370>
  437764:	ldr	x0, [x0, #4024]
  437768:	ldr	x1, [sp, #104]
  43776c:	ldr	x0, [x0]
  437770:	eor	x0, x1, x0
  437774:	cmp	x0, #0x0
  437778:	b.eq	437780 <user_start_service+0x1b0>  // b.none
  43777c:	bl	407b20 <__stack_chk_fail@plt>
  437780:	ldp	x19, x20, [sp, #16]
  437784:	ldr	x21, [sp, #32]
  437788:	ldp	x29, x30, [sp], #112
  43778c:	ret

0000000000437790 <user_start>:
  437790:	stp	x29, x30, [sp, #-48]!
  437794:	mov	x29, sp
  437798:	str	x0, [sp, #24]
  43779c:	ldr	x0, [sp, #24]
  4377a0:	cmp	x0, #0x0
  4377a4:	cset	w0, eq  // eq = none
  4377a8:	and	w0, w0, #0xff
  4377ac:	and	x0, x0, #0xff
  4377b0:	cmp	x0, #0x0
  4377b4:	b.eq	4377e0 <user_start+0x50>  // b.none
  4377b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4377bc:	add	x1, x0, #0x933
  4377c0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4377c4:	add	x4, x0, #0x140
  4377c8:	mov	w3, #0x16f                 	// #367
  4377cc:	mov	x2, x1
  4377d0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4377d4:	add	x1, x0, #0xa18
  4377d8:	mov	w0, #0x0                   	// #0
  4377dc:	bl	407650 <log_assert_failed_realm@plt>
  4377e0:	ldr	x0, [sp, #24]
  4377e4:	ldrb	w0, [x0, #120]
  4377e8:	and	w0, w0, #0x2
  4377ec:	and	w0, w0, #0xff
  4377f0:	cmp	w0, #0x0
  4377f4:	b.eq	437820 <user_start+0x90>  // b.none
  4377f8:	ldr	x0, [sp, #24]
  4377fc:	ldrb	w0, [x0, #120]
  437800:	ubfx	x0, x0, #2, #1
  437804:	and	w0, w0, #0xff
  437808:	eor	w0, w0, #0x1
  43780c:	and	w0, w0, #0xff
  437810:	cmp	w0, #0x0
  437814:	b.eq	437820 <user_start+0x90>  // b.none
  437818:	mov	w0, #0x0                   	// #0
  43781c:	b	437954 <user_start+0x1c4>
  437820:	ldr	x0, [sp, #24]
  437824:	ldrb	w1, [x0, #120]
  437828:	and	w1, w1, #0xfffffffb
  43782c:	strb	w1, [x0, #120]
  437830:	ldr	x0, [sp, #24]
  437834:	ldrb	w0, [x0, #120]
  437838:	ubfx	x0, x0, #1, #1
  43783c:	and	w0, w0, #0xff
  437840:	eor	w0, w0, #0x1
  437844:	and	w0, w0, #0xff
  437848:	cmp	w0, #0x0
  43784c:	b.eq	4378d0 <user_start+0x140>  // b.none
  437850:	mov	w0, #0x7                   	// #7
  437854:	str	w0, [sp, #36]
  437858:	str	wzr, [sp, #40]
  43785c:	str	wzr, [sp, #44]
  437860:	ldr	w0, [sp, #44]
  437864:	bl	4083e0 <log_get_max_level_realm@plt>
  437868:	mov	w1, w0
  43786c:	ldr	w0, [sp, #36]
  437870:	and	w0, w0, #0x7
  437874:	cmp	w1, w0
  437878:	b.lt	4378c8 <user_start+0x138>  // b.tstop
  43787c:	ldr	w0, [sp, #44]
  437880:	lsl	w1, w0, #10
  437884:	ldr	w0, [sp, #36]
  437888:	orr	w7, w1, w0
  43788c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437890:	add	x1, x0, #0x933
  437894:	ldr	x0, [sp, #24]
  437898:	ldr	x0, [x0, #16]
  43789c:	mov	x6, x0
  4378a0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4378a4:	add	x5, x0, #0xc78
  4378a8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4378ac:	add	x4, x0, #0x150
  4378b0:	mov	w3, #0x17b                 	// #379
  4378b4:	mov	x2, x1
  4378b8:	ldr	w1, [sp, #40]
  4378bc:	mov	w0, w7
  4378c0:	bl	407d60 <log_internal_realm@plt>
  4378c4:	b	4378d0 <user_start+0x140>
  4378c8:	ldr	w0, [sp, #40]
  4378cc:	cmp	w0, #0x0
  4378d0:	ldr	x0, [sp, #24]
  4378d4:	bl	436a5c <user_save_internal>
  4378d8:	ldr	x0, [sp, #24]
  4378dc:	bl	4375d0 <user_start_service>
  4378e0:	ldr	x0, [sp, #24]
  4378e4:	ldrb	w0, [x0, #120]
  4378e8:	ubfx	x0, x0, #1, #1
  4378ec:	and	w0, w0, #0xff
  4378f0:	eor	w0, w0, #0x1
  4378f4:	and	w0, w0, #0xff
  4378f8:	cmp	w0, #0x0
  4378fc:	b.eq	437948 <user_start+0x1b8>  // b.none
  437900:	ldr	x0, [sp, #24]
  437904:	add	x0, x0, #0x58
  437908:	bl	4361a0 <dual_timestamp_is_set>
  43790c:	and	w0, w0, #0xff
  437910:	eor	w0, w0, #0x1
  437914:	and	w0, w0, #0xff
  437918:	cmp	w0, #0x0
  43791c:	b.eq	43792c <user_start+0x19c>  // b.none
  437920:	ldr	x0, [sp, #24]
  437924:	add	x0, x0, #0x58
  437928:	bl	4070a0 <dual_timestamp_get@plt>
  43792c:	mov	w1, #0x1                   	// #1
  437930:	ldr	x0, [sp, #24]
  437934:	bl	435adc <user_send_signal>
  437938:	ldr	x0, [sp, #24]
  43793c:	ldrb	w1, [x0, #120]
  437940:	orr	w1, w1, #0x2
  437944:	strb	w1, [x0, #120]
  437948:	ldr	x0, [sp, #24]
  43794c:	bl	437210 <user_save>
  437950:	mov	w0, #0x0                   	// #0
  437954:	ldp	x29, x30, [sp], #48
  437958:	ret

000000000043795c <user_stop_service>:
  43795c:	stp	x29, x30, [sp, #-112]!
  437960:	mov	x29, sp
  437964:	stp	x19, x20, [sp, #16]
  437968:	str	x21, [sp, #32]
  43796c:	str	x0, [sp, #56]
  437970:	adrp	x0, 460000 <wordlist.10364+0x370>
  437974:	ldr	x0, [x0, #4024]
  437978:	ldr	x1, [x0]
  43797c:	str	x1, [sp, #104]
  437980:	mov	x1, #0x0                   	// #0
  437984:	str	xzr, [sp, #80]
  437988:	str	xzr, [sp, #88]
  43798c:	str	wzr, [sp, #96]
  437990:	ldr	x0, [sp, #56]
  437994:	cmp	x0, #0x0
  437998:	cset	w0, eq  // eq = none
  43799c:	and	w0, w0, #0xff
  4379a0:	and	x0, x0, #0xff
  4379a4:	cmp	x0, #0x0
  4379a8:	b.eq	4379d4 <user_stop_service+0x78>  // b.none
  4379ac:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4379b0:	add	x1, x0, #0x933
  4379b4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4379b8:	add	x4, x0, #0x160
  4379bc:	mov	w3, #0x195                 	// #405
  4379c0:	mov	x2, x1
  4379c4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4379c8:	add	x1, x0, #0xa18
  4379cc:	mov	w0, #0x0                   	// #0
  4379d0:	bl	407650 <log_assert_failed_realm@plt>
  4379d4:	ldr	x0, [sp, #56]
  4379d8:	ldr	x0, [x0, #56]
  4379dc:	cmp	x0, #0x0
  4379e0:	cset	w0, eq  // eq = none
  4379e4:	and	w0, w0, #0xff
  4379e8:	and	x0, x0, #0xff
  4379ec:	cmp	x0, #0x0
  4379f0:	b.eq	437a1c <user_stop_service+0xc0>  // b.none
  4379f4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4379f8:	add	x1, x0, #0x933
  4379fc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437a00:	add	x4, x0, #0x160
  437a04:	mov	w3, #0x196                 	// #406
  437a08:	mov	x2, x1
  437a0c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437a10:	add	x1, x0, #0xca0
  437a14:	mov	w0, #0x0                   	// #0
  437a18:	bl	407650 <log_assert_failed_realm@plt>
  437a1c:	ldr	x0, [sp, #56]
  437a20:	ldr	x0, [x0, #72]
  437a24:	bl	435ff4 <mfree>
  437a28:	mov	x1, x0
  437a2c:	ldr	x0, [sp, #56]
  437a30:	str	x1, [x0, #72]
  437a34:	ldr	x0, [sp, #56]
  437a38:	ldr	x4, [x0]
  437a3c:	ldr	x0, [sp, #56]
  437a40:	ldr	x1, [x0, #56]
  437a44:	ldr	x0, [sp, #56]
  437a48:	add	x2, x0, #0x48
  437a4c:	add	x0, sp, #0x50
  437a50:	mov	x3, x2
  437a54:	mov	x2, x0
  437a58:	mov	x0, x4
  437a5c:	bl	421dfc <manager_stop_unit>
  437a60:	str	w0, [sp, #64]
  437a64:	ldr	w0, [sp, #64]
  437a68:	cmp	w0, #0x0
  437a6c:	b.ge	437b04 <user_stop_service+0x1a8>  // b.tcont
  437a70:	mov	w0, #0x4                   	// #4
  437a74:	str	w0, [sp, #68]
  437a78:	ldr	w0, [sp, #64]
  437a7c:	str	w0, [sp, #72]
  437a80:	str	wzr, [sp, #76]
  437a84:	ldr	w0, [sp, #76]
  437a88:	bl	4083e0 <log_get_max_level_realm@plt>
  437a8c:	mov	w1, w0
  437a90:	ldr	w0, [sp, #68]
  437a94:	and	w0, w0, #0x7
  437a98:	cmp	w1, w0
  437a9c:	b.lt	437afc <user_stop_service+0x1a0>  // b.tstop
  437aa0:	ldr	w0, [sp, #76]
  437aa4:	lsl	w1, w0, #10
  437aa8:	ldr	w0, [sp, #68]
  437aac:	orr	w19, w1, w0
  437ab0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437ab4:	add	x20, x0, #0x933
  437ab8:	ldr	x0, [sp, #56]
  437abc:	ldr	x21, [x0, #56]
  437ac0:	add	x0, sp, #0x50
  437ac4:	ldr	w1, [sp, #64]
  437ac8:	bl	407000 <bus_error_message@plt>
  437acc:	mov	x7, x0
  437ad0:	mov	x6, x21
  437ad4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437ad8:	add	x5, x0, #0xcb0
  437adc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437ae0:	add	x4, x0, #0x178
  437ae4:	mov	w3, #0x19f                 	// #415
  437ae8:	mov	x2, x20
  437aec:	ldr	w1, [sp, #72]
  437af0:	mov	w0, w19
  437af4:	bl	407d60 <log_internal_realm@plt>
  437af8:	b	437b04 <user_stop_service+0x1a8>
  437afc:	ldr	w0, [sp, #72]
  437b00:	cmp	w0, #0x0
  437b04:	add	x0, sp, #0x50
  437b08:	bl	407c80 <sd_bus_error_free@plt>
  437b0c:	nop
  437b10:	adrp	x0, 460000 <wordlist.10364+0x370>
  437b14:	ldr	x0, [x0, #4024]
  437b18:	ldr	x1, [sp, #104]
  437b1c:	ldr	x0, [x0]
  437b20:	eor	x0, x1, x0
  437b24:	cmp	x0, #0x0
  437b28:	b.eq	437b30 <user_stop_service+0x1d4>  // b.none
  437b2c:	bl	407b20 <__stack_chk_fail@plt>
  437b30:	ldp	x19, x20, [sp, #16]
  437b34:	ldr	x21, [sp, #32]
  437b38:	ldp	x29, x30, [sp], #112
  437b3c:	ret

0000000000437b40 <user_stop>:
  437b40:	stp	x29, x30, [sp, #-48]!
  437b44:	mov	x29, sp
  437b48:	str	x0, [sp, #24]
  437b4c:	strb	w1, [sp, #23]
  437b50:	str	wzr, [sp, #32]
  437b54:	ldr	x0, [sp, #24]
  437b58:	cmp	x0, #0x0
  437b5c:	cset	w0, eq  // eq = none
  437b60:	and	w0, w0, #0xff
  437b64:	and	x0, x0, #0xff
  437b68:	cmp	x0, #0x0
  437b6c:	b.eq	437b98 <user_stop+0x58>  // b.none
  437b70:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437b74:	add	x1, x0, #0x933
  437b78:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437b7c:	add	x4, x0, #0x190
  437b80:	mov	w3, #0x1a5                 	// #421
  437b84:	mov	x2, x1
  437b88:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437b8c:	add	x1, x0, #0xa18
  437b90:	mov	w0, #0x0                   	// #0
  437b94:	bl	407650 <log_assert_failed_realm@plt>
  437b98:	ldr	x0, [sp, #24]
  437b9c:	ldrb	w0, [x0, #120]
  437ba0:	ubfx	x0, x0, #1, #1
  437ba4:	and	w0, w0, #0xff
  437ba8:	eor	w0, w0, #0x1
  437bac:	and	w0, w0, #0xff
  437bb0:	cmp	w0, #0x0
  437bb4:	b.eq	437bc0 <user_stop+0x80>  // b.none
  437bb8:	mov	w0, #0x0                   	// #0
  437bbc:	b	437c58 <user_stop+0x118>
  437bc0:	ldr	x0, [sp, #24]
  437bc4:	ldrb	w0, [x0, #120]
  437bc8:	and	w0, w0, #0x4
  437bcc:	and	w0, w0, #0xff
  437bd0:	cmp	w0, #0x0
  437bd4:	b.eq	437be8 <user_stop+0xa8>  // b.none
  437bd8:	ldr	x0, [sp, #24]
  437bdc:	bl	437210 <user_save>
  437be0:	mov	w0, #0x0                   	// #0
  437be4:	b	437c58 <user_stop+0x118>
  437be8:	ldr	x0, [sp, #24]
  437bec:	ldr	x0, [x0, #128]
  437bf0:	str	x0, [sp, #40]
  437bf4:	b	437c28 <user_stop+0xe8>
  437bf8:	ldrb	w1, [sp, #23]
  437bfc:	ldr	x0, [sp, #40]
  437c00:	bl	432194 <session_stop>
  437c04:	str	w0, [sp, #36]
  437c08:	ldr	w0, [sp, #36]
  437c0c:	cmp	w0, #0x0
  437c10:	b.ge	437c1c <user_stop+0xdc>  // b.tcont
  437c14:	ldr	w0, [sp, #36]
  437c18:	str	w0, [sp, #32]
  437c1c:	ldr	x0, [sp, #40]
  437c20:	ldr	x0, [x0, #256]
  437c24:	str	x0, [sp, #40]
  437c28:	ldr	x0, [sp, #40]
  437c2c:	cmp	x0, #0x0
  437c30:	b.ne	437bf8 <user_stop+0xb8>  // b.any
  437c34:	ldr	x0, [sp, #24]
  437c38:	bl	43795c <user_stop_service>
  437c3c:	ldr	x0, [sp, #24]
  437c40:	ldrb	w1, [x0, #120]
  437c44:	orr	w1, w1, #0x4
  437c48:	strb	w1, [x0, #120]
  437c4c:	ldr	x0, [sp, #24]
  437c50:	bl	437210 <user_save>
  437c54:	ldr	w0, [sp, #32]
  437c58:	ldp	x29, x30, [sp], #48
  437c5c:	ret

0000000000437c60 <user_finalize>:
  437c60:	stp	x29, x30, [sp, #-64]!
  437c64:	mov	x29, sp
  437c68:	str	x0, [sp, #24]
  437c6c:	str	wzr, [sp, #36]
  437c70:	ldr	x0, [sp, #24]
  437c74:	cmp	x0, #0x0
  437c78:	cset	w0, eq  // eq = none
  437c7c:	and	w0, w0, #0xff
  437c80:	and	x0, x0, #0xff
  437c84:	cmp	x0, #0x0
  437c88:	b.eq	437cb4 <user_finalize+0x54>  // b.none
  437c8c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437c90:	add	x1, x0, #0x933
  437c94:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437c98:	add	x4, x0, #0x1a0
  437c9c:	mov	w3, #0x1c9                 	// #457
  437ca0:	mov	x2, x1
  437ca4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437ca8:	add	x1, x0, #0xa18
  437cac:	mov	w0, #0x0                   	// #0
  437cb0:	bl	407650 <log_assert_failed_realm@plt>
  437cb4:	ldr	x0, [sp, #24]
  437cb8:	ldrb	w0, [x0, #120]
  437cbc:	and	w0, w0, #0x2
  437cc0:	and	w0, w0, #0xff
  437cc4:	cmp	w0, #0x0
  437cc8:	b.eq	437d4c <user_finalize+0xec>  // b.none
  437ccc:	mov	w0, #0x7                   	// #7
  437cd0:	str	w0, [sp, #40]
  437cd4:	str	wzr, [sp, #44]
  437cd8:	str	wzr, [sp, #48]
  437cdc:	ldr	w0, [sp, #48]
  437ce0:	bl	4083e0 <log_get_max_level_realm@plt>
  437ce4:	mov	w1, w0
  437ce8:	ldr	w0, [sp, #40]
  437cec:	and	w0, w0, #0x7
  437cf0:	cmp	w1, w0
  437cf4:	b.lt	437d44 <user_finalize+0xe4>  // b.tstop
  437cf8:	ldr	w0, [sp, #48]
  437cfc:	lsl	w1, w0, #10
  437d00:	ldr	w0, [sp, #40]
  437d04:	orr	w7, w1, w0
  437d08:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437d0c:	add	x1, x0, #0x933
  437d10:	ldr	x0, [sp, #24]
  437d14:	ldr	x0, [x0, #16]
  437d18:	mov	x6, x0
  437d1c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437d20:	add	x5, x0, #0xce0
  437d24:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437d28:	add	x4, x0, #0x1b0
  437d2c:	mov	w3, #0x1cf                 	// #463
  437d30:	mov	x2, x1
  437d34:	ldr	w1, [sp, #44]
  437d38:	mov	w0, w7
  437d3c:	bl	407d60 <log_internal_realm@plt>
  437d40:	b	437d4c <user_finalize+0xec>
  437d44:	ldr	w0, [sp, #44]
  437d48:	cmp	w0, #0x0
  437d4c:	ldr	x0, [sp, #24]
  437d50:	ldr	x0, [x0, #128]
  437d54:	str	x0, [sp, #56]
  437d58:	b	437d88 <user_finalize+0x128>
  437d5c:	ldr	x0, [sp, #56]
  437d60:	bl	4322d4 <session_finalize>
  437d64:	str	w0, [sp, #52]
  437d68:	ldr	w0, [sp, #52]
  437d6c:	cmp	w0, #0x0
  437d70:	b.ge	437d7c <user_finalize+0x11c>  // b.tcont
  437d74:	ldr	w0, [sp, #52]
  437d78:	str	w0, [sp, #36]
  437d7c:	ldr	x0, [sp, #56]
  437d80:	ldr	x0, [x0, #256]
  437d84:	str	x0, [sp, #56]
  437d88:	ldr	x0, [sp, #56]
  437d8c:	cmp	x0, #0x0
  437d90:	b.ne	437d5c <user_finalize+0xfc>  // b.any
  437d94:	ldr	x0, [sp, #24]
  437d98:	ldr	x0, [x0]
  437d9c:	ldrb	w0, [x0, #424]
  437da0:	cmp	w0, #0x0
  437da4:	b.eq	437dec <user_finalize+0x18c>  // b.none
  437da8:	ldr	x0, [sp, #24]
  437dac:	ldr	w0, [x0, #8]
  437db0:	bl	436248 <uid_is_system>
  437db4:	and	w0, w0, #0xff
  437db8:	eor	w0, w0, #0x1
  437dbc:	and	w0, w0, #0xff
  437dc0:	cmp	w0, #0x0
  437dc4:	b.eq	437dec <user_finalize+0x18c>  // b.none
  437dc8:	ldr	x0, [sp, #24]
  437dcc:	ldr	w0, [x0, #8]
  437dd0:	bl	4074a0 <clean_ipc_by_uid@plt>
  437dd4:	str	w0, [sp, #52]
  437dd8:	ldr	w0, [sp, #52]
  437ddc:	cmp	w0, #0x0
  437de0:	b.ge	437dec <user_finalize+0x18c>  // b.tcont
  437de4:	ldr	w0, [sp, #52]
  437de8:	str	w0, [sp, #36]
  437dec:	ldr	x0, [sp, #24]
  437df0:	ldr	x0, [x0, #32]
  437df4:	bl	4070c0 <unlink@plt>
  437df8:	ldr	x0, [sp, #24]
  437dfc:	bl	438778 <user_add_to_gc_queue>
  437e00:	ldr	x0, [sp, #24]
  437e04:	ldrb	w0, [x0, #120]
  437e08:	and	w0, w0, #0x2
  437e0c:	and	w0, w0, #0xff
  437e10:	cmp	w0, #0x0
  437e14:	b.eq	437e34 <user_finalize+0x1d4>  // b.none
  437e18:	mov	w1, #0x0                   	// #0
  437e1c:	ldr	x0, [sp, #24]
  437e20:	bl	435adc <user_send_signal>
  437e24:	ldr	x0, [sp, #24]
  437e28:	ldrb	w1, [x0, #120]
  437e2c:	and	w1, w1, #0xfffffffd
  437e30:	strb	w1, [x0, #120]
  437e34:	ldr	w0, [sp, #36]
  437e38:	ldp	x29, x30, [sp], #64
  437e3c:	ret

0000000000437e40 <user_get_idle_hint>:
  437e40:	stp	x29, x30, [sp, #-96]!
  437e44:	mov	x29, sp
  437e48:	str	x0, [sp, #24]
  437e4c:	str	x1, [sp, #16]
  437e50:	adrp	x0, 460000 <wordlist.10364+0x370>
  437e54:	ldr	x0, [x0, #4024]
  437e58:	ldr	x1, [x0]
  437e5c:	str	x1, [sp, #88]
  437e60:	mov	x1, #0x0                   	// #0
  437e64:	mov	w0, #0x1                   	// #1
  437e68:	strb	w0, [sp, #43]
  437e6c:	stp	xzr, xzr, [sp, #56]
  437e70:	ldr	x0, [sp, #24]
  437e74:	cmp	x0, #0x0
  437e78:	cset	w0, eq  // eq = none
  437e7c:	and	w0, w0, #0xff
  437e80:	and	x0, x0, #0xff
  437e84:	cmp	x0, #0x0
  437e88:	b.eq	437eb4 <user_get_idle_hint+0x74>  // b.none
  437e8c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437e90:	add	x1, x0, #0x933
  437e94:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  437e98:	add	x4, x0, #0x1c0
  437e9c:	mov	w3, #0x1f3                 	// #499
  437ea0:	mov	x2, x1
  437ea4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  437ea8:	add	x1, x0, #0xa18
  437eac:	mov	w0, #0x0                   	// #0
  437eb0:	bl	407650 <log_assert_failed_realm@plt>
  437eb4:	ldr	x0, [sp, #24]
  437eb8:	ldr	x0, [x0, #128]
  437ebc:	str	x0, [sp, #48]
  437ec0:	b	437f68 <user_get_idle_hint+0x128>
  437ec4:	add	x0, sp, #0x48
  437ec8:	mov	x1, x0
  437ecc:	ldr	x0, [sp, #48]
  437ed0:	bl	432a54 <session_get_idle_hint>
  437ed4:	str	w0, [sp, #44]
  437ed8:	ldr	w0, [sp, #44]
  437edc:	cmp	w0, #0x0
  437ee0:	b.ge	437eec <user_get_idle_hint+0xac>  // b.tcont
  437ee4:	ldr	w0, [sp, #44]
  437ee8:	b	437f90 <user_get_idle_hint+0x150>
  437eec:	ldr	w0, [sp, #44]
  437ef0:	cmp	w0, #0x0
  437ef4:	b.ne	437f38 <user_get_idle_hint+0xf8>  // b.any
  437ef8:	ldrb	w0, [sp, #43]
  437efc:	eor	w0, w0, #0x1
  437f00:	and	w0, w0, #0xff
  437f04:	cmp	w0, #0x0
  437f08:	b.eq	437f28 <user_get_idle_hint+0xe8>  // b.none
  437f0c:	ldr	x1, [sp, #80]
  437f10:	ldr	x0, [sp, #64]
  437f14:	cmp	x1, x0
  437f18:	b.cs	437f5c <user_get_idle_hint+0x11c>  // b.hs, b.nlast
  437f1c:	ldp	x0, x1, [sp, #72]
  437f20:	stp	x0, x1, [sp, #56]
  437f24:	b	437f5c <user_get_idle_hint+0x11c>
  437f28:	strb	wzr, [sp, #43]
  437f2c:	ldp	x0, x1, [sp, #72]
  437f30:	stp	x0, x1, [sp, #56]
  437f34:	b	437f5c <user_get_idle_hint+0x11c>
  437f38:	ldrb	w0, [sp, #43]
  437f3c:	cmp	w0, #0x0
  437f40:	b.eq	437f5c <user_get_idle_hint+0x11c>  // b.none
  437f44:	ldr	x1, [sp, #80]
  437f48:	ldr	x0, [sp, #64]
  437f4c:	cmp	x1, x0
  437f50:	b.ls	437f5c <user_get_idle_hint+0x11c>  // b.plast
  437f54:	ldp	x0, x1, [sp, #72]
  437f58:	stp	x0, x1, [sp, #56]
  437f5c:	ldr	x0, [sp, #48]
  437f60:	ldr	x0, [x0, #256]
  437f64:	str	x0, [sp, #48]
  437f68:	ldr	x0, [sp, #48]
  437f6c:	cmp	x0, #0x0
  437f70:	b.ne	437ec4 <user_get_idle_hint+0x84>  // b.any
  437f74:	ldr	x0, [sp, #16]
  437f78:	cmp	x0, #0x0
  437f7c:	b.eq	437f8c <user_get_idle_hint+0x14c>  // b.none
  437f80:	ldr	x2, [sp, #16]
  437f84:	ldp	x0, x1, [sp, #56]
  437f88:	stp	x0, x1, [x2]
  437f8c:	ldrb	w0, [sp, #43]
  437f90:	mov	w1, w0
  437f94:	adrp	x0, 460000 <wordlist.10364+0x370>
  437f98:	ldr	x0, [x0, #4024]
  437f9c:	ldr	x2, [sp, #88]
  437fa0:	ldr	x0, [x0]
  437fa4:	eor	x0, x2, x0
  437fa8:	cmp	x0, #0x0
  437fac:	b.eq	437fb4 <user_get_idle_hint+0x174>  // b.none
  437fb0:	bl	407b20 <__stack_chk_fail@plt>
  437fb4:	mov	w0, w1
  437fb8:	ldp	x29, x30, [sp], #96
  437fbc:	ret

0000000000437fc0 <user_check_linger_file>:
  437fc0:	stp	x29, x30, [sp, #-128]!
  437fc4:	mov	x29, sp
  437fc8:	str	x19, [sp, #16]
  437fcc:	str	x0, [x29, #40]
  437fd0:	adrp	x0, 460000 <wordlist.10364+0x370>
  437fd4:	ldr	x0, [x0, #4024]
  437fd8:	ldr	x1, [x0]
  437fdc:	str	x1, [x29, #120]
  437fe0:	mov	x1, #0x0                   	// #0
  437fe4:	str	xzr, [x29, #48]
  437fe8:	str	xzr, [x29, #80]
  437fec:	ldr	x0, [x29, #40]
  437ff0:	ldr	x0, [x0, #16]
  437ff4:	bl	407320 <cescape@plt>
  437ff8:	str	x0, [x29, #48]
  437ffc:	ldr	x0, [x29, #48]
  438000:	cmp	x0, #0x0
  438004:	b.ne	438010 <user_check_linger_file+0x50>  // b.any
  438008:	mov	w19, #0xfffffff4            	// #-12
  43800c:	b	4381f0 <user_check_linger_file+0x230>
  438010:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438014:	add	x0, x0, #0xcf8
  438018:	str	x0, [x29, #104]
  43801c:	ldr	x0, [x29, #48]
  438020:	str	x0, [x29, #112]
  438024:	str	xzr, [x29, #64]
  438028:	str	xzr, [x29, #72]
  43802c:	b	438060 <user_check_linger_file+0xa0>
  438030:	ldr	x0, [x29, #72]
  438034:	lsl	x0, x0, #3
  438038:	add	x1, x29, #0x68
  43803c:	ldr	x0, [x1, x0]
  438040:	bl	4082f0 <strlen@plt>
  438044:	mov	x1, x0
  438048:	ldr	x0, [x29, #64]
  43804c:	add	x0, x0, x1
  438050:	str	x0, [x29, #64]
  438054:	ldr	x0, [x29, #72]
  438058:	add	x0, x0, #0x1
  43805c:	str	x0, [x29, #72]
  438060:	ldr	x0, [x29, #72]
  438064:	cmp	x0, #0x1
  438068:	b.hi	438084 <user_check_linger_file+0xc4>  // b.pmore
  43806c:	ldr	x0, [x29, #72]
  438070:	lsl	x0, x0, #3
  438074:	add	x1, x29, #0x68
  438078:	ldr	x0, [x1, x0]
  43807c:	cmp	x0, #0x0
  438080:	b.ne	438030 <user_check_linger_file+0x70>  // b.any
  438084:	ldr	x0, [x29, #64]
  438088:	add	x0, x0, #0x1
  43808c:	str	x0, [x29, #88]
  438090:	ldr	x1, [x29, #88]
  438094:	mov	x0, #0x1                   	// #1
  438098:	bl	436038 <size_multiply_overflow>
  43809c:	and	w0, w0, #0xff
  4380a0:	and	x0, x0, #0xff
  4380a4:	cmp	x0, #0x0
  4380a8:	b.eq	4380d4 <user_check_linger_file+0x114>  // b.none
  4380ac:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4380b0:	add	x1, x0, #0x933
  4380b4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4380b8:	add	x4, x0, #0x1d8
  4380bc:	mov	w3, #0x21a                 	// #538
  4380c0:	mov	x2, x1
  4380c4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4380c8:	add	x1, x0, #0xd18
  4380cc:	mov	w0, #0x0                   	// #0
  4380d0:	bl	407650 <log_assert_failed_realm@plt>
  4380d4:	ldr	x0, [x29, #88]
  4380d8:	cmp	x0, #0x400, lsl #12
  4380dc:	cset	w0, hi  // hi = pmore
  4380e0:	and	w0, w0, #0xff
  4380e4:	and	x0, x0, #0xff
  4380e8:	cmp	x0, #0x0
  4380ec:	b.eq	438118 <user_check_linger_file+0x158>  // b.none
  4380f0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4380f4:	add	x1, x0, #0x933
  4380f8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4380fc:	add	x4, x0, #0x1d8
  438100:	mov	w3, #0x21a                 	// #538
  438104:	mov	x2, x1
  438108:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43810c:	add	x1, x0, #0xd48
  438110:	mov	w0, #0x0                   	// #0
  438114:	bl	407650 <log_assert_failed_realm@plt>
  438118:	ldr	x0, [x29, #88]
  43811c:	add	x0, x0, #0xf
  438120:	lsr	x0, x0, #4
  438124:	lsl	x0, x0, #4
  438128:	sub	sp, sp, x0
  43812c:	mov	x0, sp
  438130:	add	x0, x0, #0xf
  438134:	lsr	x0, x0, #4
  438138:	lsl	x0, x0, #4
  43813c:	str	x0, [x29, #96]
  438140:	ldr	x0, [x29, #96]
  438144:	str	x0, [x29, #56]
  438148:	str	xzr, [x29, #72]
  43814c:	b	43817c <user_check_linger_file+0x1bc>
  438150:	ldr	x0, [x29, #72]
  438154:	lsl	x0, x0, #3
  438158:	add	x1, x29, #0x68
  43815c:	ldr	x0, [x1, x0]
  438160:	mov	x1, x0
  438164:	ldr	x0, [x29, #56]
  438168:	bl	407160 <stpcpy@plt>
  43816c:	str	x0, [x29, #56]
  438170:	ldr	x0, [x29, #72]
  438174:	add	x0, x0, #0x1
  438178:	str	x0, [x29, #72]
  43817c:	ldr	x0, [x29, #72]
  438180:	cmp	x0, #0x1
  438184:	b.hi	4381a0 <user_check_linger_file+0x1e0>  // b.pmore
  438188:	ldr	x0, [x29, #72]
  43818c:	lsl	x0, x0, #3
  438190:	add	x1, x29, #0x68
  438194:	ldr	x0, [x1, x0]
  438198:	cmp	x0, #0x0
  43819c:	b.ne	438150 <user_check_linger_file+0x190>  // b.any
  4381a0:	ldr	x0, [x29, #56]
  4381a4:	strb	wzr, [x0]
  4381a8:	ldr	x0, [x29, #96]
  4381ac:	str	x0, [x29, #80]
  4381b0:	mov	w1, #0x0                   	// #0
  4381b4:	ldr	x0, [x29, #80]
  4381b8:	bl	4077a0 <access@plt>
  4381bc:	cmp	w0, #0x0
  4381c0:	b.ge	4381ec <user_check_linger_file+0x22c>  // b.tcont
  4381c4:	bl	407960 <__errno_location@plt>
  4381c8:	ldr	w0, [x0]
  4381cc:	cmp	w0, #0x2
  4381d0:	b.eq	4381e4 <user_check_linger_file+0x224>  // b.none
  4381d4:	bl	407960 <__errno_location@plt>
  4381d8:	ldr	w0, [x0]
  4381dc:	neg	w19, w0
  4381e0:	b	4381f0 <user_check_linger_file+0x230>
  4381e4:	mov	w19, #0x0                   	// #0
  4381e8:	b	4381f0 <user_check_linger_file+0x230>
  4381ec:	mov	w19, #0x1                   	// #1
  4381f0:	add	x0, x29, #0x30
  4381f4:	bl	436014 <freep>
  4381f8:	mov	w1, w19
  4381fc:	adrp	x0, 460000 <wordlist.10364+0x370>
  438200:	ldr	x0, [x0, #4024]
  438204:	ldr	x2, [x29, #120]
  438208:	ldr	x0, [x0]
  43820c:	eor	x0, x2, x0
  438210:	cmp	x0, #0x0
  438214:	b.eq	43821c <user_check_linger_file+0x25c>  // b.none
  438218:	bl	407b20 <__stack_chk_fail@plt>
  43821c:	mov	w0, w1
  438220:	mov	sp, x29
  438224:	ldr	x19, [sp, #16]
  438228:	ldp	x29, x30, [sp], #128
  43822c:	ret

0000000000438230 <user_unit_active>:
  438230:	stp	x29, x30, [sp, #-160]!
  438234:	mov	x29, sp
  438238:	stp	x19, x20, [sp, #16]
  43823c:	stp	x21, x22, [sp, #32]
  438240:	str	x0, [sp, #56]
  438244:	mov	w19, #0x0                   	// #0
  438248:	adrp	x0, 460000 <wordlist.10364+0x370>
  43824c:	ldr	x0, [x0, #4024]
  438250:	ldr	x1, [x0]
  438254:	str	x1, [sp, #152]
  438258:	mov	x1, #0x0                   	// #0
  43825c:	ldr	x0, [sp, #56]
  438260:	ldr	x0, [x0, #56]
  438264:	cmp	x0, #0x0
  438268:	cset	w0, eq  // eq = none
  43826c:	and	w0, w0, #0xff
  438270:	and	x0, x0, #0xff
  438274:	cmp	x0, #0x0
  438278:	b.eq	4382a4 <user_unit_active+0x74>  // b.none
  43827c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438280:	add	x1, x0, #0x933
  438284:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438288:	add	x4, x0, #0x1f0
  43828c:	mov	w3, #0x229                 	// #553
  438290:	mov	x2, x1
  438294:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438298:	add	x1, x0, #0xca0
  43829c:	mov	w0, #0x0                   	// #0
  4382a0:	bl	407650 <log_assert_failed_realm@plt>
  4382a4:	ldr	x0, [sp, #56]
  4382a8:	ldr	x0, [x0, #64]
  4382ac:	cmp	x0, #0x0
  4382b0:	cset	w0, eq  // eq = none
  4382b4:	and	w0, w0, #0xff
  4382b8:	and	x0, x0, #0xff
  4382bc:	cmp	x0, #0x0
  4382c0:	b.eq	4382ec <user_unit_active+0xbc>  // b.none
  4382c4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4382c8:	add	x1, x0, #0x933
  4382cc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4382d0:	add	x4, x0, #0x1f0
  4382d4:	mov	w3, #0x22a                 	// #554
  4382d8:	mov	x2, x1
  4382dc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4382e0:	add	x1, x0, #0xd68
  4382e4:	mov	w0, #0x0                   	// #0
  4382e8:	bl	407650 <log_assert_failed_realm@plt>
  4382ec:	ldr	x0, [sp, #56]
  4382f0:	ldr	x0, [x0, #48]
  4382f4:	cmp	x0, #0x0
  4382f8:	cset	w0, eq  // eq = none
  4382fc:	and	w0, w0, #0xff
  438300:	and	x0, x0, #0xff
  438304:	cmp	x0, #0x0
  438308:	b.eq	438334 <user_unit_active+0x104>  // b.none
  43830c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438310:	add	x1, x0, #0x933
  438314:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438318:	add	x4, x0, #0x1f0
  43831c:	mov	w3, #0x22b                 	// #555
  438320:	mov	x2, x1
  438324:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438328:	add	x1, x0, #0xd80
  43832c:	mov	w0, #0x0                   	// #0
  438330:	bl	407650 <log_assert_failed_realm@plt>
  438334:	ldr	x0, [sp, #56]
  438338:	ldr	x0, [x0, #56]
  43833c:	str	x0, [sp, #80]
  438340:	ldr	x0, [sp, #80]
  438344:	str	x0, [sp, #120]
  438348:	ldr	x0, [sp, #56]
  43834c:	ldr	x0, [x0, #64]
  438350:	str	x0, [sp, #128]
  438354:	ldr	x0, [sp, #56]
  438358:	ldr	x0, [x0, #48]
  43835c:	str	x0, [sp, #136]
  438360:	str	xzr, [sp, #144]
  438364:	add	x0, sp, #0x78
  438368:	str	x0, [sp, #88]
  43836c:	b	43847c <user_unit_active+0x24c>
  438370:	str	xzr, [sp, #96]
  438374:	str	xzr, [sp, #104]
  438378:	str	wzr, [sp, #112]
  43837c:	ldr	x0, [sp, #56]
  438380:	ldr	x0, [x0]
  438384:	add	x1, sp, #0x60
  438388:	mov	x2, x1
  43838c:	ldr	x1, [sp, #80]
  438390:	bl	422320 <manager_unit_is_active>
  438394:	str	w0, [sp, #64]
  438398:	ldr	w0, [sp, #64]
  43839c:	cmp	w0, #0x0
  4383a0:	b.ge	438438 <user_unit_active+0x208>  // b.tcont
  4383a4:	mov	w0, #0x7                   	// #7
  4383a8:	str	w0, [sp, #68]
  4383ac:	ldr	w0, [sp, #64]
  4383b0:	str	w0, [sp, #72]
  4383b4:	str	wzr, [sp, #76]
  4383b8:	ldr	w0, [sp, #76]
  4383bc:	bl	4083e0 <log_get_max_level_realm@plt>
  4383c0:	mov	w1, w0
  4383c4:	ldr	w0, [sp, #68]
  4383c8:	and	w0, w0, #0x7
  4383cc:	cmp	w1, w0
  4383d0:	b.lt	438430 <user_unit_active+0x200>  // b.tstop
  4383d4:	ldr	w0, [sp, #76]
  4383d8:	lsl	w1, w0, #10
  4383dc:	ldr	w0, [sp, #68]
  4383e0:	orr	w20, w1, w0
  4383e4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4383e8:	add	x21, x0, #0x933
  4383ec:	ldr	x0, [sp, #56]
  4383f0:	ldr	x22, [x0, #56]
  4383f4:	add	x0, sp, #0x60
  4383f8:	ldr	w1, [sp, #64]
  4383fc:	bl	407000 <bus_error_message@plt>
  438400:	mov	x7, x0
  438404:	mov	x6, x22
  438408:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43840c:	add	x5, x0, #0xd90
  438410:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438414:	add	x4, x0, #0x208
  438418:	mov	w3, #0x232                 	// #562
  43841c:	mov	x2, x21
  438420:	ldr	w1, [sp, #72]
  438424:	mov	w0, w20
  438428:	bl	407d60 <log_internal_realm@plt>
  43842c:	b	438438 <user_unit_active+0x208>
  438430:	ldr	w0, [sp, #72]
  438434:	cmp	w0, #0x0
  438438:	ldr	w0, [sp, #64]
  43843c:	cmp	w0, #0x0
  438440:	b.eq	438450 <user_unit_active+0x220>  // b.none
  438444:	mov	w19, #0x1                   	// #1
  438448:	mov	w20, #0x0                   	// #0
  43844c:	b	438454 <user_unit_active+0x224>
  438450:	mov	w20, #0x1                   	// #1
  438454:	add	x0, sp, #0x60
  438458:	bl	407c80 <sd_bus_error_free@plt>
  43845c:	cmp	w20, #0x1
  438460:	b.ne	43848c <user_unit_active+0x25c>  // b.any
  438464:	ldr	x0, [sp, #88]
  438468:	add	x0, x0, #0x8
  43846c:	str	x0, [sp, #88]
  438470:	ldr	x0, [sp, #88]
  438474:	ldr	x0, [x0]
  438478:	str	x0, [sp, #80]
  43847c:	ldr	x0, [sp, #80]
  438480:	cmp	x0, #0x0
  438484:	b.ne	438370 <user_unit_active+0x140>  // b.any
  438488:	mov	w19, #0x0                   	// #0
  43848c:	mov	w1, w19
  438490:	adrp	x0, 460000 <wordlist.10364+0x370>
  438494:	ldr	x0, [x0, #4024]
  438498:	ldr	x2, [sp, #152]
  43849c:	ldr	x0, [x0]
  4384a0:	eor	x0, x2, x0
  4384a4:	cmp	x0, #0x0
  4384a8:	b.eq	4384b0 <user_unit_active+0x280>  // b.none
  4384ac:	bl	407b20 <__stack_chk_fail@plt>
  4384b0:	mov	w0, w1
  4384b4:	ldp	x19, x20, [sp, #16]
  4384b8:	ldp	x21, x22, [sp, #32]
  4384bc:	ldp	x29, x30, [sp], #160
  4384c0:	ret

00000000004384c4 <user_may_gc>:
  4384c4:	stp	x29, x30, [sp, #-112]!
  4384c8:	mov	x29, sp
  4384cc:	stp	x19, x20, [sp, #16]
  4384d0:	stp	x21, x22, [sp, #32]
  4384d4:	str	x0, [sp, #56]
  4384d8:	strb	w1, [sp, #55]
  4384dc:	mov	w19, #0x0                   	// #0
  4384e0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4384e4:	ldr	x0, [x0, #4024]
  4384e8:	ldr	x1, [x0]
  4384ec:	str	x1, [sp, #104]
  4384f0:	mov	x1, #0x0                   	// #0
  4384f4:	ldr	x0, [sp, #56]
  4384f8:	cmp	x0, #0x0
  4384fc:	cset	w0, eq  // eq = none
  438500:	and	w0, w0, #0xff
  438504:	and	x0, x0, #0xff
  438508:	cmp	x0, #0x0
  43850c:	b.eq	438538 <user_may_gc+0x74>  // b.none
  438510:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438514:	add	x1, x0, #0x933
  438518:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43851c:	add	x4, x0, #0x220
  438520:	mov	w3, #0x23d                 	// #573
  438524:	mov	x2, x1
  438528:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43852c:	add	x1, x0, #0xa18
  438530:	mov	w0, #0x0                   	// #0
  438534:	bl	407650 <log_assert_failed_realm@plt>
  438538:	ldrb	w0, [sp, #55]
  43853c:	cmp	w0, #0x0
  438540:	b.eq	43856c <user_may_gc+0xa8>  // b.none
  438544:	ldr	x0, [sp, #56]
  438548:	ldrb	w0, [x0, #120]
  43854c:	ubfx	x0, x0, #1, #1
  438550:	and	w0, w0, #0xff
  438554:	eor	w0, w0, #0x1
  438558:	and	w0, w0, #0xff
  43855c:	cmp	w0, #0x0
  438560:	b.eq	43856c <user_may_gc+0xa8>  // b.none
  438564:	mov	w19, #0x1                   	// #1
  438568:	b	438740 <user_may_gc+0x27c>
  43856c:	ldr	x0, [sp, #56]
  438570:	ldr	x0, [x0, #128]
  438574:	cmp	x0, #0x0
  438578:	b.eq	438584 <user_may_gc+0xc0>  // b.none
  43857c:	mov	w19, #0x0                   	// #0
  438580:	b	438740 <user_may_gc+0x27c>
  438584:	ldr	x0, [sp, #56]
  438588:	ldr	x0, [x0, #104]
  43858c:	cmn	x0, #0x1
  438590:	b.eq	438600 <user_may_gc+0x13c>  // b.none
  438594:	ldr	x0, [sp, #56]
  438598:	ldr	x0, [x0]
  43859c:	ldr	x0, [x0, #240]
  4385a0:	cmn	x0, #0x1
  4385a4:	b.ne	4385b0 <user_may_gc+0xec>  // b.any
  4385a8:	mov	w19, #0x0                   	// #0
  4385ac:	b	438740 <user_may_gc+0x27c>
  4385b0:	ldr	x0, [sp, #56]
  4385b4:	ldr	x0, [x0]
  4385b8:	ldr	x0, [x0, #240]
  4385bc:	cmp	x0, #0x0
  4385c0:	b.eq	438600 <user_may_gc+0x13c>  // b.none
  4385c4:	mov	w0, #0x1                   	// #1
  4385c8:	bl	407e80 <now@plt>
  4385cc:	mov	x20, x0
  4385d0:	ldr	x0, [sp, #56]
  4385d4:	ldr	x2, [x0, #104]
  4385d8:	ldr	x0, [sp, #56]
  4385dc:	ldr	x0, [x0]
  4385e0:	ldr	x0, [x0, #240]
  4385e4:	mov	x1, x0
  4385e8:	mov	x0, x2
  4385ec:	bl	4361f8 <usec_add>
  4385f0:	cmp	x20, x0
  4385f4:	b.cs	438600 <user_may_gc+0x13c>  // b.hs, b.nlast
  4385f8:	mov	w19, #0x0                   	// #0
  4385fc:	b	438740 <user_may_gc+0x27c>
  438600:	ldr	x0, [sp, #56]
  438604:	bl	437fc0 <user_check_linger_file>
  438608:	cmp	w0, #0x0
  43860c:	b.le	43862c <user_may_gc+0x168>
  438610:	ldr	x0, [sp, #56]
  438614:	bl	438230 <user_unit_active>
  438618:	and	w0, w0, #0xff
  43861c:	cmp	w0, #0x0
  438620:	b.eq	43862c <user_may_gc+0x168>  // b.none
  438624:	mov	w19, #0x0                   	// #0
  438628:	b	438740 <user_may_gc+0x27c>
  43862c:	ldr	x0, [sp, #56]
  438630:	ldr	x0, [x0, #72]
  438634:	cmp	x0, #0x0
  438638:	b.eq	43873c <user_may_gc+0x278>  // b.none
  43863c:	str	xzr, [sp, #80]
  438640:	str	xzr, [sp, #88]
  438644:	str	wzr, [sp, #96]
  438648:	ldr	x0, [sp, #56]
  43864c:	ldr	x3, [x0]
  438650:	ldr	x0, [sp, #56]
  438654:	ldr	x0, [x0, #72]
  438658:	add	x1, sp, #0x50
  43865c:	mov	x2, x1
  438660:	mov	x1, x0
  438664:	mov	x0, x3
  438668:	bl	4225b4 <manager_job_is_active>
  43866c:	str	w0, [sp, #64]
  438670:	ldr	w0, [sp, #64]
  438674:	cmp	w0, #0x0
  438678:	b.ge	438710 <user_may_gc+0x24c>  // b.tcont
  43867c:	mov	w0, #0x7                   	// #7
  438680:	str	w0, [sp, #68]
  438684:	ldr	w0, [sp, #64]
  438688:	str	w0, [sp, #72]
  43868c:	str	wzr, [sp, #76]
  438690:	ldr	w0, [sp, #76]
  438694:	bl	4083e0 <log_get_max_level_realm@plt>
  438698:	mov	w1, w0
  43869c:	ldr	w0, [sp, #68]
  4386a0:	and	w0, w0, #0x7
  4386a4:	cmp	w1, w0
  4386a8:	b.lt	438708 <user_may_gc+0x244>  // b.tstop
  4386ac:	ldr	w0, [sp, #76]
  4386b0:	lsl	w1, w0, #10
  4386b4:	ldr	w0, [sp, #68]
  4386b8:	orr	w20, w1, w0
  4386bc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4386c0:	add	x21, x0, #0x933
  4386c4:	ldr	x0, [sp, #56]
  4386c8:	ldr	x22, [x0, #72]
  4386cc:	add	x0, sp, #0x50
  4386d0:	ldr	w1, [sp, #64]
  4386d4:	bl	407000 <bus_error_message@plt>
  4386d8:	mov	x7, x0
  4386dc:	mov	x6, x22
  4386e0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4386e4:	add	x5, x0, #0xdd0
  4386e8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4386ec:	add	x4, x0, #0x230
  4386f0:	mov	w3, #0x25b                 	// #603
  4386f4:	mov	x2, x21
  4386f8:	ldr	w1, [sp, #72]
  4386fc:	mov	w0, w20
  438700:	bl	407d60 <log_internal_realm@plt>
  438704:	b	438710 <user_may_gc+0x24c>
  438708:	ldr	w0, [sp, #72]
  43870c:	cmp	w0, #0x0
  438710:	ldr	w0, [sp, #64]
  438714:	cmp	w0, #0x0
  438718:	b.eq	438728 <user_may_gc+0x264>  // b.none
  43871c:	mov	w19, #0x0                   	// #0
  438720:	mov	w20, #0x0                   	// #0
  438724:	b	43872c <user_may_gc+0x268>
  438728:	mov	w20, #0x1                   	// #1
  43872c:	add	x0, sp, #0x50
  438730:	bl	407c80 <sd_bus_error_free@plt>
  438734:	cmp	w20, #0x1
  438738:	b.ne	438740 <user_may_gc+0x27c>  // b.any
  43873c:	mov	w19, #0x1                   	// #1
  438740:	mov	w1, w19
  438744:	adrp	x0, 460000 <wordlist.10364+0x370>
  438748:	ldr	x0, [x0, #4024]
  43874c:	ldr	x2, [sp, #104]
  438750:	ldr	x0, [x0]
  438754:	eor	x0, x2, x0
  438758:	cmp	x0, #0x0
  43875c:	b.eq	438764 <user_may_gc+0x2a0>  // b.none
  438760:	bl	407b20 <__stack_chk_fail@plt>
  438764:	mov	w0, w1
  438768:	ldp	x19, x20, [sp, #16]
  43876c:	ldp	x21, x22, [sp, #32]
  438770:	ldp	x29, x30, [sp], #112
  438774:	ret

0000000000438778 <user_add_to_gc_queue>:
  438778:	stp	x29, x30, [sp, #-48]!
  43877c:	mov	x29, sp
  438780:	str	x0, [sp, #24]
  438784:	ldr	x0, [sp, #24]
  438788:	cmp	x0, #0x0
  43878c:	cset	w0, eq  // eq = none
  438790:	and	w0, w0, #0xff
  438794:	and	x0, x0, #0xff
  438798:	cmp	x0, #0x0
  43879c:	b.eq	4387c8 <user_add_to_gc_queue+0x50>  // b.none
  4387a0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4387a4:	add	x1, x0, #0x933
  4387a8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4387ac:	add	x4, x0, #0x240
  4387b0:	mov	w3, #0x267                 	// #615
  4387b4:	mov	x2, x1
  4387b8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4387bc:	add	x1, x0, #0xa18
  4387c0:	mov	w0, #0x0                   	// #0
  4387c4:	bl	407650 <log_assert_failed_realm@plt>
  4387c8:	ldr	x0, [sp, #24]
  4387cc:	ldrb	w0, [x0, #120]
  4387d0:	and	w0, w0, #0x1
  4387d4:	and	w0, w0, #0xff
  4387d8:	cmp	w0, #0x0
  4387dc:	b.ne	438894 <user_add_to_gc_queue+0x11c>  // b.any
  4387e0:	ldr	x0, [sp, #24]
  4387e4:	ldr	x0, [x0]
  4387e8:	add	x0, x0, #0x60
  4387ec:	str	x0, [sp, #32]
  4387f0:	ldr	x0, [sp, #24]
  4387f4:	str	x0, [sp, #40]
  4387f8:	ldr	x0, [sp, #40]
  4387fc:	cmp	x0, #0x0
  438800:	cset	w0, eq  // eq = none
  438804:	and	w0, w0, #0xff
  438808:	and	x0, x0, #0xff
  43880c:	cmp	x0, #0x0
  438810:	b.eq	43883c <user_add_to_gc_queue+0xc4>  // b.none
  438814:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438818:	add	x1, x0, #0x933
  43881c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438820:	add	x4, x0, #0x240
  438824:	mov	w3, #0x26c                 	// #620
  438828:	mov	x2, x1
  43882c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438830:	add	x1, x0, #0xa00
  438834:	mov	w0, #0x0                   	// #0
  438838:	bl	407650 <log_assert_failed_realm@plt>
  43883c:	ldr	x0, [sp, #32]
  438840:	ldr	x1, [x0]
  438844:	ldr	x0, [sp, #40]
  438848:	str	x1, [x0, #136]
  43884c:	ldr	x0, [sp, #40]
  438850:	ldr	x0, [x0, #136]
  438854:	cmp	x0, #0x0
  438858:	b.eq	43886c <user_add_to_gc_queue+0xf4>  // b.none
  43885c:	ldr	x0, [sp, #40]
  438860:	ldr	x0, [x0, #136]
  438864:	ldr	x1, [sp, #40]
  438868:	str	x1, [x0, #144]
  43886c:	ldr	x0, [sp, #40]
  438870:	str	xzr, [x0, #144]
  438874:	ldr	x0, [sp, #32]
  438878:	ldr	x1, [sp, #40]
  43887c:	str	x1, [x0]
  438880:	ldr	x0, [sp, #24]
  438884:	ldrb	w1, [x0, #120]
  438888:	orr	w1, w1, #0x1
  43888c:	strb	w1, [x0, #120]
  438890:	b	438898 <user_add_to_gc_queue+0x120>
  438894:	nop
  438898:	ldp	x29, x30, [sp], #48
  43889c:	ret

00000000004388a0 <user_get_state>:
  4388a0:	stp	x29, x30, [sp, #-48]!
  4388a4:	mov	x29, sp
  4388a8:	str	x0, [sp, #24]
  4388ac:	ldr	x0, [sp, #24]
  4388b0:	cmp	x0, #0x0
  4388b4:	cset	w0, eq  // eq = none
  4388b8:	and	w0, w0, #0xff
  4388bc:	and	x0, x0, #0xff
  4388c0:	cmp	x0, #0x0
  4388c4:	b.eq	4388f0 <user_get_state+0x50>  // b.none
  4388c8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4388cc:	add	x1, x0, #0x933
  4388d0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4388d4:	add	x4, x0, #0x258
  4388d8:	mov	w3, #0x273                 	// #627
  4388dc:	mov	x2, x1
  4388e0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4388e4:	add	x1, x0, #0xa18
  4388e8:	mov	w0, #0x0                   	// #0
  4388ec:	bl	407650 <log_assert_failed_realm@plt>
  4388f0:	ldr	x0, [sp, #24]
  4388f4:	ldrb	w0, [x0, #120]
  4388f8:	and	w0, w0, #0x4
  4388fc:	and	w0, w0, #0xff
  438900:	cmp	w0, #0x0
  438904:	b.eq	438910 <user_get_state+0x70>  // b.none
  438908:	mov	w0, #0x5                   	// #5
  43890c:	b	438a04 <user_get_state+0x164>
  438910:	ldr	x0, [sp, #24]
  438914:	ldrb	w0, [x0, #120]
  438918:	ubfx	x0, x0, #1, #1
  43891c:	and	w0, w0, #0xff
  438920:	eor	w0, w0, #0x1
  438924:	and	w0, w0, #0xff
  438928:	cmp	w0, #0x0
  43892c:	b.ne	438940 <user_get_state+0xa0>  // b.any
  438930:	ldr	x0, [sp, #24]
  438934:	ldr	x0, [x0, #72]
  438938:	cmp	x0, #0x0
  43893c:	b.eq	438948 <user_get_state+0xa8>  // b.none
  438940:	mov	w0, #0x1                   	// #1
  438944:	b	438a04 <user_get_state+0x164>
  438948:	ldr	x0, [sp, #24]
  43894c:	ldr	x0, [x0, #128]
  438950:	cmp	x0, #0x0
  438954:	b.eq	4389d4 <user_get_state+0x134>  // b.none
  438958:	mov	w0, #0x1                   	// #1
  43895c:	strb	w0, [sp, #35]
  438960:	ldr	x0, [sp, #24]
  438964:	ldr	x0, [x0, #128]
  438968:	str	x0, [sp, #40]
  43896c:	b	4389ac <user_get_state+0x10c>
  438970:	ldr	x0, [sp, #40]
  438974:	bl	4336cc <session_get_state>
  438978:	str	w0, [sp, #36]
  43897c:	ldr	w0, [sp, #36]
  438980:	cmp	w0, #0x2
  438984:	b.ne	438990 <user_get_state+0xf0>  // b.any
  438988:	mov	w0, #0x4                   	// #4
  43898c:	b	438a04 <user_get_state+0x164>
  438990:	ldr	w0, [sp, #36]
  438994:	cmp	w0, #0x3
  438998:	b.eq	4389a0 <user_get_state+0x100>  // b.none
  43899c:	strb	wzr, [sp, #35]
  4389a0:	ldr	x0, [sp, #40]
  4389a4:	ldr	x0, [x0, #256]
  4389a8:	str	x0, [sp, #40]
  4389ac:	ldr	x0, [sp, #40]
  4389b0:	cmp	x0, #0x0
  4389b4:	b.ne	438970 <user_get_state+0xd0>  // b.any
  4389b8:	ldrb	w0, [sp, #35]
  4389bc:	cmp	w0, #0x0
  4389c0:	b.eq	4389cc <user_get_state+0x12c>  // b.none
  4389c4:	mov	w0, #0x5                   	// #5
  4389c8:	b	438a04 <user_get_state+0x164>
  4389cc:	mov	w0, #0x3                   	// #3
  4389d0:	b	438a04 <user_get_state+0x164>
  4389d4:	ldr	x0, [sp, #24]
  4389d8:	bl	437fc0 <user_check_linger_file>
  4389dc:	cmp	w0, #0x0
  4389e0:	b.le	438a00 <user_get_state+0x160>
  4389e4:	ldr	x0, [sp, #24]
  4389e8:	bl	438230 <user_unit_active>
  4389ec:	and	w0, w0, #0xff
  4389f0:	cmp	w0, #0x0
  4389f4:	b.eq	438a00 <user_get_state+0x160>  // b.none
  4389f8:	mov	w0, #0x2                   	// #2
  4389fc:	b	438a04 <user_get_state+0x164>
  438a00:	mov	w0, #0x5                   	// #5
  438a04:	ldp	x29, x30, [sp], #48
  438a08:	ret

0000000000438a0c <user_kill>:
  438a0c:	stp	x29, x30, [sp, #-32]!
  438a10:	mov	x29, sp
  438a14:	str	x0, [sp, #24]
  438a18:	str	w1, [sp, #20]
  438a1c:	ldr	x0, [sp, #24]
  438a20:	cmp	x0, #0x0
  438a24:	cset	w0, eq  // eq = none
  438a28:	and	w0, w0, #0xff
  438a2c:	and	x0, x0, #0xff
  438a30:	cmp	x0, #0x0
  438a34:	b.eq	438a60 <user_kill+0x54>  // b.none
  438a38:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438a3c:	add	x1, x0, #0x933
  438a40:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438a44:	add	x4, x0, #0x268
  438a48:	mov	w3, #0x292                 	// #658
  438a4c:	mov	x2, x1
  438a50:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438a54:	add	x1, x0, #0xa18
  438a58:	mov	w0, #0x0                   	// #0
  438a5c:	bl	407650 <log_assert_failed_realm@plt>
  438a60:	ldr	x0, [sp, #24]
  438a64:	ldr	x5, [x0]
  438a68:	ldr	x0, [sp, #24]
  438a6c:	ldr	x0, [x0, #48]
  438a70:	mov	x4, #0x0                   	// #0
  438a74:	ldr	w3, [sp, #20]
  438a78:	mov	w2, #0x1                   	// #1
  438a7c:	mov	x1, x0
  438a80:	mov	x0, x5
  438a84:	bl	4221f8 <manager_kill_unit>
  438a88:	ldp	x29, x30, [sp], #32
  438a8c:	ret

0000000000438a90 <elect_display_filter>:
  438a90:	stp	x29, x30, [sp, #-48]!
  438a94:	mov	x29, sp
  438a98:	str	x0, [sp, #24]
  438a9c:	ldr	x0, [sp, #24]
  438aa0:	cmp	x0, #0x0
  438aa4:	cset	w0, eq  // eq = none
  438aa8:	and	w0, w0, #0xff
  438aac:	and	x0, x0, #0xff
  438ab0:	cmp	x0, #0x0
  438ab4:	b.eq	438ae0 <elect_display_filter+0x50>  // b.none
  438ab8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438abc:	add	x1, x0, #0x933
  438ac0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438ac4:	add	x4, x0, #0x278
  438ac8:	mov	w3, #0x299                 	// #665
  438acc:	mov	x2, x1
  438ad0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438ad4:	add	x1, x0, #0xe10
  438ad8:	mov	w0, #0x0                   	// #0
  438adc:	bl	407650 <log_assert_failed_realm@plt>
  438ae0:	strb	wzr, [sp, #47]
  438ae4:	ldr	x0, [sp, #24]
  438ae8:	ldr	w0, [x0, #24]
  438aec:	cmp	w0, #0x1
  438af0:	b.hi	438afc <elect_display_filter+0x6c>  // b.pmore
  438af4:	mov	w0, #0x1                   	// #1
  438af8:	strb	w0, [sp, #47]
  438afc:	nop
  438b00:	ldrb	w0, [sp, #47]
  438b04:	cmp	w0, #0x0
  438b08:	b.eq	438b4c <elect_display_filter+0xbc>  // b.none
  438b0c:	ldr	x0, [sp, #24]
  438b10:	ldrb	w0, [x0, #209]
  438b14:	and	w0, w0, #0x2
  438b18:	and	w0, w0, #0xff
  438b1c:	cmp	w0, #0x0
  438b20:	b.eq	438b4c <elect_display_filter+0xbc>  // b.none
  438b24:	ldr	x0, [sp, #24]
  438b28:	ldrb	w0, [x0, #209]
  438b2c:	ubfx	x0, x0, #2, #1
  438b30:	and	w0, w0, #0xff
  438b34:	eor	w0, w0, #0x1
  438b38:	and	w0, w0, #0xff
  438b3c:	cmp	w0, #0x0
  438b40:	b.eq	438b4c <elect_display_filter+0xbc>  // b.none
  438b44:	mov	w0, #0x1                   	// #1
  438b48:	b	438b50 <elect_display_filter+0xc0>
  438b4c:	mov	w0, #0x0                   	// #0
  438b50:	and	w0, w0, #0x1
  438b54:	and	w0, w0, #0xff
  438b58:	ldp	x29, x30, [sp], #48
  438b5c:	ret

0000000000438b60 <elect_display_compare>:
  438b60:	sub	sp, sp, #0x10
  438b64:	str	x0, [sp, #8]
  438b68:	str	x1, [sp]
  438b6c:	ldr	x0, [sp, #8]
  438b70:	cmp	x0, #0x0
  438b74:	b.ne	438b8c <elect_display_compare+0x2c>  // b.any
  438b78:	ldr	x0, [sp]
  438b7c:	cmp	x0, #0x0
  438b80:	b.ne	438b8c <elect_display_compare+0x2c>  // b.any
  438b84:	mov	w0, #0x0                   	// #0
  438b88:	b	438d68 <elect_display_compare+0x208>
  438b8c:	ldr	x0, [sp, #8]
  438b90:	cmp	x0, #0x0
  438b94:	cset	w0, eq  // eq = none
  438b98:	and	w1, w0, #0xff
  438b9c:	ldr	x0, [sp]
  438ba0:	cmp	x0, #0x0
  438ba4:	cset	w0, eq  // eq = none
  438ba8:	and	w0, w0, #0xff
  438bac:	eor	w0, w1, w0
  438bb0:	and	w0, w0, #0xff
  438bb4:	cmp	w0, #0x0
  438bb8:	b.eq	438be8 <elect_display_compare+0x88>  // b.none
  438bbc:	ldr	x0, [sp, #8]
  438bc0:	cmp	x0, #0x0
  438bc4:	cset	w0, eq  // eq = none
  438bc8:	and	w0, w0, #0xff
  438bcc:	mov	w1, w0
  438bd0:	ldr	x0, [sp]
  438bd4:	cmp	x0, #0x0
  438bd8:	cset	w0, eq  // eq = none
  438bdc:	and	w0, w0, #0xff
  438be0:	sub	w0, w1, w0
  438be4:	b	438d68 <elect_display_compare+0x208>
  438be8:	ldr	x0, [sp, #8]
  438bec:	ldrb	w0, [x0, #209]
  438bf0:	ubfx	x0, x0, #2, #1
  438bf4:	and	w1, w0, #0xff
  438bf8:	ldr	x0, [sp]
  438bfc:	ldrb	w0, [x0, #209]
  438c00:	ubfx	x0, x0, #2, #1
  438c04:	and	w0, w0, #0xff
  438c08:	cmp	w1, w0
  438c0c:	b.eq	438c3c <elect_display_compare+0xdc>  // b.none
  438c10:	ldr	x0, [sp, #8]
  438c14:	ldrb	w0, [x0, #209]
  438c18:	ubfx	x0, x0, #2, #1
  438c1c:	and	w0, w0, #0xff
  438c20:	mov	w1, w0
  438c24:	ldr	x0, [sp]
  438c28:	ldrb	w0, [x0, #209]
  438c2c:	ubfx	x0, x0, #2, #1
  438c30:	and	w0, w0, #0xff
  438c34:	sub	w0, w1, w0
  438c38:	b	438d68 <elect_display_compare+0x208>
  438c3c:	ldr	x0, [sp, #8]
  438c40:	ldr	w0, [x0, #24]
  438c44:	cmp	w0, #0x0
  438c48:	cset	w0, ne  // ne = any
  438c4c:	and	w1, w0, #0xff
  438c50:	ldr	x0, [sp]
  438c54:	ldr	w0, [x0, #24]
  438c58:	cmp	w0, #0x0
  438c5c:	cset	w0, ne  // ne = any
  438c60:	and	w0, w0, #0xff
  438c64:	eor	w0, w1, w0
  438c68:	and	w0, w0, #0xff
  438c6c:	cmp	w0, #0x0
  438c70:	b.eq	438ca8 <elect_display_compare+0x148>  // b.none
  438c74:	ldr	x0, [sp, #8]
  438c78:	ldr	w0, [x0, #24]
  438c7c:	cmp	w0, #0x0
  438c80:	cset	w0, ne  // ne = any
  438c84:	and	w0, w0, #0xff
  438c88:	mov	w1, w0
  438c8c:	ldr	x0, [sp]
  438c90:	ldr	w0, [x0, #24]
  438c94:	cmp	w0, #0x0
  438c98:	cset	w0, ne  // ne = any
  438c9c:	and	w0, w0, #0xff
  438ca0:	sub	w0, w1, w0
  438ca4:	b	438d68 <elect_display_compare+0x208>
  438ca8:	ldr	x0, [sp, #8]
  438cac:	ldr	w0, [x0, #20]
  438cb0:	cmn	w0, #0x1
  438cb4:	cset	w0, eq  // eq = none
  438cb8:	and	w1, w0, #0xff
  438cbc:	ldr	x0, [sp]
  438cc0:	ldr	w0, [x0, #20]
  438cc4:	cmn	w0, #0x1
  438cc8:	cset	w0, eq  // eq = none
  438ccc:	and	w0, w0, #0xff
  438cd0:	eor	w0, w1, w0
  438cd4:	and	w0, w0, #0xff
  438cd8:	cmp	w0, #0x0
  438cdc:	b.eq	438d14 <elect_display_compare+0x1b4>  // b.none
  438ce0:	ldr	x0, [sp, #8]
  438ce4:	ldr	w0, [x0, #20]
  438ce8:	cmn	w0, #0x1
  438cec:	cset	w0, eq  // eq = none
  438cf0:	and	w0, w0, #0xff
  438cf4:	mov	w1, w0
  438cf8:	ldr	x0, [sp]
  438cfc:	ldr	w0, [x0, #20]
  438d00:	cmn	w0, #0x1
  438d04:	cset	w0, eq  // eq = none
  438d08:	and	w0, w0, #0xff
  438d0c:	sub	w0, w1, w0
  438d10:	b	438d68 <elect_display_compare+0x208>
  438d14:	ldr	x0, [sp, #8]
  438d18:	ldr	w1, [x0, #20]
  438d1c:	ldr	x0, [sp]
  438d20:	ldr	w0, [x0, #20]
  438d24:	cmp	w1, w0
  438d28:	b.eq	438d64 <elect_display_compare+0x204>  // b.none
  438d2c:	ldr	x0, [sp, #8]
  438d30:	ldr	w1, [x0, #20]
  438d34:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438d38:	add	x0, x0, #0x290
  438d3c:	sxtw	x1, w1
  438d40:	ldr	w1, [x0, x1, lsl #2]
  438d44:	ldr	x0, [sp]
  438d48:	ldr	w2, [x0, #20]
  438d4c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438d50:	add	x0, x0, #0x290
  438d54:	sxtw	x2, w2
  438d58:	ldr	w0, [x0, x2, lsl #2]
  438d5c:	sub	w0, w1, w0
  438d60:	b	438d68 <elect_display_compare+0x208>
  438d64:	mov	w0, #0x0                   	// #0
  438d68:	add	sp, sp, #0x10
  438d6c:	ret

0000000000438d70 <user_elect_display>:
  438d70:	stp	x29, x30, [sp, #-80]!
  438d74:	mov	x29, sp
  438d78:	str	x0, [sp, #24]
  438d7c:	ldr	x0, [sp, #24]
  438d80:	cmp	x0, #0x0
  438d84:	cset	w0, eq  // eq = none
  438d88:	and	w0, w0, #0xff
  438d8c:	and	x0, x0, #0xff
  438d90:	cmp	x0, #0x0
  438d94:	b.eq	438dc0 <user_elect_display+0x50>  // b.none
  438d98:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438d9c:	add	x1, x0, #0x933
  438da0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438da4:	add	x4, x0, #0x2a8
  438da8:	mov	w3, #0x2c7                 	// #711
  438dac:	mov	x2, x1
  438db0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438db4:	add	x1, x0, #0xa18
  438db8:	mov	w0, #0x0                   	// #0
  438dbc:	bl	407650 <log_assert_failed_realm@plt>
  438dc0:	mov	w0, #0x7                   	// #7
  438dc4:	str	w0, [sp, #36]
  438dc8:	str	wzr, [sp, #40]
  438dcc:	str	wzr, [sp, #44]
  438dd0:	ldr	w0, [sp, #44]
  438dd4:	bl	4083e0 <log_get_max_level_realm@plt>
  438dd8:	mov	w1, w0
  438ddc:	ldr	w0, [sp, #36]
  438de0:	and	w0, w0, #0x7
  438de4:	cmp	w1, w0
  438de8:	b.lt	438e38 <user_elect_display+0xc8>  // b.tstop
  438dec:	ldr	w0, [sp, #44]
  438df0:	lsl	w1, w0, #10
  438df4:	ldr	w0, [sp, #36]
  438df8:	orr	w7, w1, w0
  438dfc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438e00:	add	x1, x0, #0x933
  438e04:	ldr	x0, [sp, #24]
  438e08:	ldr	x0, [x0, #16]
  438e0c:	mov	x6, x0
  438e10:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438e14:	add	x5, x0, #0xe18
  438e18:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438e1c:	add	x4, x0, #0x2c0
  438e20:	mov	w3, #0x2cb                 	// #715
  438e24:	mov	x2, x1
  438e28:	ldr	w1, [sp, #40]
  438e2c:	mov	w0, w7
  438e30:	bl	407d60 <log_internal_realm@plt>
  438e34:	b	438e40 <user_elect_display+0xd0>
  438e38:	ldr	w0, [sp, #40]
  438e3c:	cmp	w0, #0x0
  438e40:	ldr	x0, [sp, #24]
  438e44:	ldr	x0, [x0, #128]
  438e48:	str	x0, [sp, #72]
  438e4c:	b	438fd0 <user_elect_display+0x260>
  438e50:	ldr	x0, [sp, #72]
  438e54:	bl	438a90 <elect_display_filter>
  438e58:	and	w0, w0, #0xff
  438e5c:	eor	w0, w0, #0x1
  438e60:	and	w0, w0, #0xff
  438e64:	cmp	w0, #0x0
  438e68:	b.eq	438ef0 <user_elect_display+0x180>  // b.none
  438e6c:	mov	w0, #0x7                   	// #7
  438e70:	str	w0, [sp, #60]
  438e74:	str	wzr, [sp, #64]
  438e78:	str	wzr, [sp, #68]
  438e7c:	ldr	w0, [sp, #68]
  438e80:	bl	4083e0 <log_get_max_level_realm@plt>
  438e84:	mov	w1, w0
  438e88:	ldr	w0, [sp, #60]
  438e8c:	and	w0, w0, #0x7
  438e90:	cmp	w1, w0
  438e94:	b.lt	438ee4 <user_elect_display+0x174>  // b.tstop
  438e98:	ldr	w0, [sp, #68]
  438e9c:	lsl	w1, w0, #10
  438ea0:	ldr	w0, [sp, #60]
  438ea4:	orr	w7, w1, w0
  438ea8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438eac:	add	x1, x0, #0x933
  438eb0:	ldr	x0, [sp, #72]
  438eb4:	ldr	x0, [x0, #8]
  438eb8:	mov	x6, x0
  438ebc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438ec0:	add	x5, x0, #0xe40
  438ec4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438ec8:	add	x4, x0, #0x2c0
  438ecc:	mov	w3, #0x2cf                 	// #719
  438ed0:	mov	x2, x1
  438ed4:	ldr	w1, [sp, #64]
  438ed8:	mov	w0, w7
  438edc:	bl	407d60 <log_internal_realm@plt>
  438ee0:	b	438fc4 <user_elect_display+0x254>
  438ee4:	ldr	w0, [sp, #64]
  438ee8:	cmp	w0, #0x0
  438eec:	b	438fc4 <user_elect_display+0x254>
  438ef0:	ldr	x0, [sp, #24]
  438ef4:	ldr	x0, [x0, #80]
  438ef8:	mov	x1, x0
  438efc:	ldr	x0, [sp, #72]
  438f00:	bl	438b60 <elect_display_compare>
  438f04:	cmp	w0, #0x0
  438f08:	b.ge	438fc4 <user_elect_display+0x254>  // b.tcont
  438f0c:	mov	w0, #0x7                   	// #7
  438f10:	str	w0, [sp, #48]
  438f14:	str	wzr, [sp, #52]
  438f18:	str	wzr, [sp, #56]
  438f1c:	ldr	w0, [sp, #56]
  438f20:	bl	4083e0 <log_get_max_level_realm@plt>
  438f24:	mov	w1, w0
  438f28:	ldr	w0, [sp, #48]
  438f2c:	and	w0, w0, #0x7
  438f30:	cmp	w1, w0
  438f34:	b.lt	438fb0 <user_elect_display+0x240>  // b.tstop
  438f38:	ldr	w0, [sp, #56]
  438f3c:	lsl	w1, w0, #10
  438f40:	ldr	w0, [sp, #48]
  438f44:	orr	w8, w1, w0
  438f48:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438f4c:	add	x1, x0, #0x933
  438f50:	ldr	x0, [sp, #72]
  438f54:	ldr	x2, [x0, #8]
  438f58:	ldr	x0, [sp, #24]
  438f5c:	ldr	x0, [x0, #80]
  438f60:	cmp	x0, #0x0
  438f64:	b.eq	438f78 <user_elect_display+0x208>  // b.none
  438f68:	ldr	x0, [sp, #24]
  438f6c:	ldr	x0, [x0, #80]
  438f70:	ldr	x0, [x0, #8]
  438f74:	b	438f80 <user_elect_display+0x210>
  438f78:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438f7c:	add	x0, x0, #0xe58
  438f80:	mov	x7, x0
  438f84:	mov	x6, x2
  438f88:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  438f8c:	add	x5, x0, #0xe60
  438f90:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  438f94:	add	x4, x0, #0x2c0
  438f98:	mov	w3, #0x2d4                 	// #724
  438f9c:	mov	x2, x1
  438fa0:	ldr	w1, [sp, #52]
  438fa4:	mov	w0, w8
  438fa8:	bl	407d60 <log_internal_realm@plt>
  438fac:	b	438fb8 <user_elect_display+0x248>
  438fb0:	ldr	w0, [sp, #52]
  438fb4:	cmp	w0, #0x0
  438fb8:	ldr	x0, [sp, #24]
  438fbc:	ldr	x1, [sp, #72]
  438fc0:	str	x1, [x0, #80]
  438fc4:	ldr	x0, [sp, #72]
  438fc8:	ldr	x0, [x0, #256]
  438fcc:	str	x0, [sp, #72]
  438fd0:	ldr	x0, [sp, #72]
  438fd4:	cmp	x0, #0x0
  438fd8:	b.ne	438e50 <user_elect_display+0xe0>  // b.any
  438fdc:	nop
  438fe0:	nop
  438fe4:	ldp	x29, x30, [sp], #80
  438fe8:	ret

0000000000438fec <user_stop_timeout_callback>:
  438fec:	stp	x29, x30, [sp, #-64]!
  438ff0:	mov	x29, sp
  438ff4:	str	x0, [sp, #40]
  438ff8:	str	x1, [sp, #32]
  438ffc:	str	x2, [sp, #24]
  439000:	ldr	x0, [sp, #24]
  439004:	str	x0, [sp, #56]
  439008:	ldr	x0, [sp, #56]
  43900c:	cmp	x0, #0x0
  439010:	cset	w0, eq  // eq = none
  439014:	and	w0, w0, #0xff
  439018:	and	x0, x0, #0xff
  43901c:	cmp	x0, #0x0
  439020:	b.eq	43904c <user_stop_timeout_callback+0x60>  // b.none
  439024:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439028:	add	x1, x0, #0x933
  43902c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439030:	add	x4, x0, #0x2d8
  439034:	mov	w3, #0x2dd                 	// #733
  439038:	mov	x2, x1
  43903c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439040:	add	x1, x0, #0xa18
  439044:	mov	w0, #0x0                   	// #0
  439048:	bl	407650 <log_assert_failed_realm@plt>
  43904c:	ldr	x0, [sp, #56]
  439050:	bl	438778 <user_add_to_gc_queue>
  439054:	mov	w0, #0x0                   	// #0
  439058:	ldp	x29, x30, [sp], #64
  43905c:	ret

0000000000439060 <user_update_last_session_timer>:
  439060:	stp	x29, x30, [sp, #-192]!
  439064:	mov	x29, sp
  439068:	stp	x19, x20, [sp, #16]
  43906c:	str	x21, [sp, #32]
  439070:	str	x0, [sp, #56]
  439074:	adrp	x0, 460000 <wordlist.10364+0x370>
  439078:	ldr	x0, [x0, #4024]
  43907c:	ldr	x1, [x0]
  439080:	str	x1, [sp, #184]
  439084:	mov	x1, #0x0                   	// #0
  439088:	ldr	x0, [sp, #56]
  43908c:	cmp	x0, #0x0
  439090:	cset	w0, eq  // eq = none
  439094:	and	w0, w0, #0xff
  439098:	and	x0, x0, #0xff
  43909c:	cmp	x0, #0x0
  4390a0:	b.eq	4390cc <user_update_last_session_timer+0x6c>  // b.none
  4390a4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4390a8:	add	x1, x0, #0x933
  4390ac:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4390b0:	add	x4, x0, #0x2f8
  4390b4:	mov	w3, #0x2e6                 	// #742
  4390b8:	mov	x2, x1
  4390bc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4390c0:	add	x1, x0, #0xa18
  4390c4:	mov	w0, #0x0                   	// #0
  4390c8:	bl	407650 <log_assert_failed_realm@plt>
  4390cc:	ldr	x0, [sp, #56]
  4390d0:	ldr	x0, [x0, #128]
  4390d4:	cmp	x0, #0x0
  4390d8:	b.eq	439104 <user_update_last_session_timer+0xa4>  // b.none
  4390dc:	ldr	x0, [sp, #56]
  4390e0:	mov	x1, #0xffffffffffffffff    	// #-1
  4390e4:	str	x1, [x0, #104]
  4390e8:	ldr	x0, [sp, #56]
  4390ec:	ldr	x0, [x0, #112]
  4390f0:	bl	407550 <sd_event_source_unref@plt>
  4390f4:	mov	x1, x0
  4390f8:	ldr	x0, [sp, #56]
  4390fc:	str	x1, [x0, #112]
  439100:	b	4393f0 <user_update_last_session_timer+0x390>
  439104:	ldr	x0, [sp, #56]
  439108:	ldr	x0, [x0, #104]
  43910c:	cmn	x0, #0x1
  439110:	b.ne	4393e4 <user_update_last_session_timer+0x384>  // b.any
  439114:	mov	w0, #0x1                   	// #1
  439118:	bl	407e80 <now@plt>
  43911c:	mov	x1, x0
  439120:	ldr	x0, [sp, #56]
  439124:	str	x1, [x0, #104]
  439128:	ldr	x0, [sp, #56]
  43912c:	ldr	x0, [x0, #112]
  439130:	cmp	x0, #0x0
  439134:	cset	w0, ne  // ne = any
  439138:	and	w0, w0, #0xff
  43913c:	and	x0, x0, #0xff
  439140:	cmp	x0, #0x0
  439144:	b.eq	439170 <user_update_last_session_timer+0x110>  // b.none
  439148:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43914c:	add	x1, x0, #0x933
  439150:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439154:	add	x4, x0, #0x2f8
  439158:	mov	w3, #0x2f4                 	// #756
  43915c:	mov	x2, x1
  439160:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439164:	add	x1, x0, #0xe88
  439168:	mov	w0, #0x0                   	// #0
  43916c:	bl	407650 <log_assert_failed_realm@plt>
  439170:	strb	wzr, [sp, #79]
  439174:	ldr	x0, [sp, #56]
  439178:	ldr	x0, [x0]
  43917c:	ldr	x0, [x0, #240]
  439180:	cmp	x0, #0x0
  439184:	b.eq	439190 <user_update_last_session_timer+0x130>  // b.none
  439188:	cmn	x0, #0x1
  43918c:	b.ne	439198 <user_update_last_session_timer+0x138>  // b.any
  439190:	mov	w0, #0x1                   	// #1
  439194:	strb	w0, [sp, #79]
  439198:	nop
  43919c:	ldrb	w0, [sp, #79]
  4391a0:	cmp	w0, #0x0
  4391a4:	b.ne	4393ec <user_update_last_session_timer+0x38c>  // b.any
  4391a8:	ldr	x0, [sp, #56]
  4391ac:	ldr	x0, [x0]
  4391b0:	ldr	x0, [x0]
  4391b4:	bl	407530 <sd_event_get_state@plt>
  4391b8:	cmp	w0, #0x5
  4391bc:	b.ne	439238 <user_update_last_session_timer+0x1d8>  // b.any
  4391c0:	mov	w0, #0x7                   	// #7
  4391c4:	str	w0, [sp, #108]
  4391c8:	str	wzr, [sp, #112]
  4391cc:	str	wzr, [sp, #116]
  4391d0:	ldr	w0, [sp, #116]
  4391d4:	bl	4083e0 <log_get_max_level_realm@plt>
  4391d8:	mov	w1, w0
  4391dc:	ldr	w0, [sp, #108]
  4391e0:	and	w0, w0, #0x7
  4391e4:	cmp	w1, w0
  4391e8:	b.lt	43922c <user_update_last_session_timer+0x1cc>  // b.tstop
  4391ec:	ldr	w0, [sp, #116]
  4391f0:	lsl	w1, w0, #10
  4391f4:	ldr	w0, [sp, #108]
  4391f8:	orr	w6, w1, w0
  4391fc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439200:	add	x1, x0, #0x933
  439204:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439208:	add	x5, x0, #0xea0
  43920c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439210:	add	x4, x0, #0x318
  439214:	mov	w3, #0x2fa                 	// #762
  439218:	mov	x2, x1
  43921c:	ldr	w1, [sp, #112]
  439220:	mov	w0, w6
  439224:	bl	407d60 <log_internal_realm@plt>
  439228:	b	4393f0 <user_update_last_session_timer+0x390>
  43922c:	ldr	w0, [sp, #112]
  439230:	cmp	w0, #0x0
  439234:	b	4393f0 <user_update_last_session_timer+0x390>
  439238:	ldr	x0, [sp, #56]
  43923c:	ldr	x0, [x0]
  439240:	ldr	x19, [x0]
  439244:	ldr	x0, [sp, #56]
  439248:	add	x20, x0, #0x70
  43924c:	ldr	x0, [sp, #56]
  439250:	ldr	x2, [x0, #104]
  439254:	ldr	x0, [sp, #56]
  439258:	ldr	x0, [x0]
  43925c:	ldr	x0, [x0, #240]
  439260:	mov	x1, x0
  439264:	mov	x0, x2
  439268:	bl	4361f8 <usec_add>
  43926c:	mov	x1, x0
  439270:	ldr	x6, [sp, #56]
  439274:	adrp	x0, 438000 <user_check_linger_file+0x40>
  439278:	add	x5, x0, #0xfec
  43927c:	mov	x4, #0x0                   	// #0
  439280:	mov	x3, x1
  439284:	mov	w2, #0x1                   	// #1
  439288:	mov	x1, x20
  43928c:	mov	x0, x19
  439290:	bl	4074d0 <sd_event_add_time@plt>
  439294:	str	w0, [sp, #80]
  439298:	ldr	w0, [sp, #80]
  43929c:	cmp	w0, #0x0
  4392a0:	b.ge	43931c <user_update_last_session_timer+0x2bc>  // b.tcont
  4392a4:	mov	w0, #0x4                   	// #4
  4392a8:	str	w0, [sp, #84]
  4392ac:	ldr	w0, [sp, #80]
  4392b0:	str	w0, [sp, #88]
  4392b4:	str	wzr, [sp, #92]
  4392b8:	ldr	w0, [sp, #92]
  4392bc:	bl	4083e0 <log_get_max_level_realm@plt>
  4392c0:	mov	w1, w0
  4392c4:	ldr	w0, [sp, #84]
  4392c8:	and	w0, w0, #0x7
  4392cc:	cmp	w1, w0
  4392d0:	b.lt	439314 <user_update_last_session_timer+0x2b4>  // b.tstop
  4392d4:	ldr	w0, [sp, #92]
  4392d8:	lsl	w1, w0, #10
  4392dc:	ldr	w0, [sp, #84]
  4392e0:	orr	w6, w1, w0
  4392e4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4392e8:	add	x1, x0, #0x933
  4392ec:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4392f0:	add	x5, x0, #0xee0
  4392f4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4392f8:	add	x4, x0, #0x318
  4392fc:	mov	w3, #0x304                 	// #772
  439300:	mov	x2, x1
  439304:	ldr	w1, [sp, #88]
  439308:	mov	w0, w6
  43930c:	bl	407d60 <log_internal_realm@plt>
  439310:	b	43931c <user_update_last_session_timer+0x2bc>
  439314:	ldr	w0, [sp, #88]
  439318:	cmp	w0, #0x0
  43931c:	mov	w0, #0x0                   	// #0
  439320:	bl	4083e0 <log_get_max_level_realm@plt>
  439324:	cmp	w0, #0x6
  439328:	cset	w0, gt
  43932c:	and	w0, w0, #0xff
  439330:	and	x0, x0, #0xff
  439334:	cmp	x0, #0x0
  439338:	b.eq	4393f0 <user_update_last_session_timer+0x390>  // b.none
  43933c:	mov	w0, #0x7                   	// #7
  439340:	str	w0, [sp, #96]
  439344:	str	wzr, [sp, #100]
  439348:	str	wzr, [sp, #104]
  43934c:	ldr	w0, [sp, #104]
  439350:	bl	4083e0 <log_get_max_level_realm@plt>
  439354:	mov	w1, w0
  439358:	ldr	w0, [sp, #96]
  43935c:	and	w0, w0, #0x7
  439360:	cmp	w1, w0
  439364:	b.lt	4393d8 <user_update_last_session_timer+0x378>  // b.tstop
  439368:	ldr	w0, [sp, #104]
  43936c:	lsl	w1, w0, #10
  439370:	ldr	w0, [sp, #96]
  439374:	orr	w19, w1, w0
  439378:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43937c:	add	x20, x0, #0x933
  439380:	ldr	x0, [sp, #56]
  439384:	ldr	x21, [x0, #16]
  439388:	ldr	x0, [sp, #56]
  43938c:	ldr	x0, [x0]
  439390:	ldr	x1, [x0, #240]
  439394:	add	x0, sp, #0x78
  439398:	mov	x3, #0x3e8                 	// #1000
  43939c:	mov	x2, x1
  4393a0:	mov	x1, #0x40                  	// #64
  4393a4:	bl	4071e0 <format_timespan@plt>
  4393a8:	mov	x7, x0
  4393ac:	mov	x6, x21
  4393b0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4393b4:	add	x5, x0, #0xf18
  4393b8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4393bc:	add	x4, x0, #0x318
  4393c0:	mov	w3, #0x309                 	// #777
  4393c4:	mov	x2, x20
  4393c8:	ldr	w1, [sp, #100]
  4393cc:	mov	w0, w19
  4393d0:	bl	407d60 <log_internal_realm@plt>
  4393d4:	b	4393f0 <user_update_last_session_timer+0x390>
  4393d8:	ldr	w0, [sp, #100]
  4393dc:	cmp	w0, #0x0
  4393e0:	b	4393f0 <user_update_last_session_timer+0x390>
  4393e4:	nop
  4393e8:	b	4393f0 <user_update_last_session_timer+0x390>
  4393ec:	nop
  4393f0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4393f4:	ldr	x0, [x0, #4024]
  4393f8:	ldr	x1, [sp, #184]
  4393fc:	ldr	x0, [x0]
  439400:	eor	x0, x1, x0
  439404:	cmp	x0, #0x0
  439408:	b.eq	439410 <user_update_last_session_timer+0x3b0>  // b.none
  43940c:	bl	407b20 <__stack_chk_fail@plt>
  439410:	ldp	x19, x20, [sp, #16]
  439414:	ldr	x21, [sp, #32]
  439418:	ldp	x29, x30, [sp], #192
  43941c:	ret

0000000000439420 <user_state_to_string>:
  439420:	sub	sp, sp, #0x10
  439424:	str	w0, [sp, #12]
  439428:	ldr	w0, [sp, #12]
  43942c:	cmp	w0, #0x0
  439430:	b.lt	439440 <user_state_to_string+0x20>  // b.tstop
  439434:	ldr	w0, [sp, #12]
  439438:	cmp	w0, #0x5
  43943c:	b.le	439448 <user_state_to_string+0x28>
  439440:	mov	x0, #0x0                   	// #0
  439444:	b	439458 <user_state_to_string+0x38>
  439448:	adrp	x0, 45d000 <__FRAME_END__+0x1032c>
  43944c:	add	x0, x0, #0x4d8
  439450:	ldrsw	x1, [sp, #12]
  439454:	ldr	x0, [x0, x1, lsl #3]
  439458:	add	sp, sp, #0x10
  43945c:	ret

0000000000439460 <config_parse_tmpfs_size>:
  439460:	sub	sp, sp, #0xb0
  439464:	stp	x29, x30, [sp, #16]
  439468:	add	x29, sp, #0x10
  43946c:	str	x19, [sp, #32]
  439470:	str	x0, [sp, #120]
  439474:	str	x1, [sp, #112]
  439478:	str	w2, [sp, #108]
  43947c:	str	x3, [sp, #96]
  439480:	str	w4, [sp, #104]
  439484:	str	x5, [sp, #88]
  439488:	str	w6, [sp, #84]
  43948c:	str	x7, [sp, #72]
  439490:	ldr	x0, [sp, #176]
  439494:	str	x0, [sp, #64]
  439498:	ldr	x0, [sp, #184]
  43949c:	str	x0, [sp, #56]
  4394a0:	adrp	x0, 460000 <wordlist.10364+0x370>
  4394a4:	ldr	x0, [x0, #4024]
  4394a8:	ldr	x1, [x0]
  4394ac:	str	x1, [sp, #168]
  4394b0:	mov	x1, #0x0                   	// #0
  4394b4:	ldr	x0, [sp, #64]
  4394b8:	str	x0, [sp, #160]
  4394bc:	ldr	x0, [sp, #112]
  4394c0:	cmp	x0, #0x0
  4394c4:	cset	w0, eq  // eq = none
  4394c8:	and	w0, w0, #0xff
  4394cc:	and	x0, x0, #0xff
  4394d0:	cmp	x0, #0x0
  4394d4:	b.eq	439500 <config_parse_tmpfs_size+0xa0>  // b.none
  4394d8:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4394dc:	add	x1, x0, #0x933
  4394e0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4394e4:	add	x4, x0, #0x338
  4394e8:	mov	w3, #0x329                 	// #809
  4394ec:	mov	x2, x1
  4394f0:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4394f4:	add	x1, x0, #0xf98
  4394f8:	mov	w0, #0x0                   	// #0
  4394fc:	bl	407650 <log_assert_failed_realm@plt>
  439500:	ldr	x0, [sp, #88]
  439504:	cmp	x0, #0x0
  439508:	cset	w0, eq  // eq = none
  43950c:	and	w0, w0, #0xff
  439510:	and	x0, x0, #0xff
  439514:	cmp	x0, #0x0
  439518:	b.eq	439544 <config_parse_tmpfs_size+0xe4>  // b.none
  43951c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439520:	add	x1, x0, #0x933
  439524:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439528:	add	x4, x0, #0x338
  43952c:	mov	w3, #0x32a                 	// #810
  439530:	mov	x2, x1
  439534:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439538:	add	x1, x0, #0xfa8
  43953c:	mov	w0, #0x0                   	// #0
  439540:	bl	407650 <log_assert_failed_realm@plt>
  439544:	ldr	x0, [sp, #72]
  439548:	cmp	x0, #0x0
  43954c:	cset	w0, eq  // eq = none
  439550:	and	w0, w0, #0xff
  439554:	and	x0, x0, #0xff
  439558:	cmp	x0, #0x0
  43955c:	b.eq	439588 <config_parse_tmpfs_size+0x128>  // b.none
  439560:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439564:	add	x1, x0, #0x933
  439568:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43956c:	add	x4, x0, #0x338
  439570:	mov	w3, #0x32b                 	// #811
  439574:	mov	x2, x1
  439578:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43957c:	add	x1, x0, #0xfb0
  439580:	mov	w0, #0x0                   	// #0
  439584:	bl	407650 <log_assert_failed_realm@plt>
  439588:	ldr	x0, [sp, #64]
  43958c:	cmp	x0, #0x0
  439590:	cset	w0, eq  // eq = none
  439594:	and	w0, w0, #0xff
  439598:	and	x0, x0, #0xff
  43959c:	cmp	x0, #0x0
  4395a0:	b.eq	4395cc <config_parse_tmpfs_size+0x16c>  // b.none
  4395a4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4395a8:	add	x1, x0, #0x933
  4395ac:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4395b0:	add	x4, x0, #0x338
  4395b4:	mov	w3, #0x32c                 	// #812
  4395b8:	mov	x2, x1
  4395bc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4395c0:	add	x1, x0, #0xfb8
  4395c4:	mov	w0, #0x0                   	// #0
  4395c8:	bl	407650 <log_assert_failed_realm@plt>
  4395cc:	ldr	x0, [sp, #72]
  4395d0:	bl	407f00 <parse_permille@plt>
  4395d4:	str	w0, [sp, #140]
  4395d8:	ldr	w0, [sp, #140]
  4395dc:	cmp	w0, #0x0
  4395e0:	b.le	43960c <config_parse_tmpfs_size+0x1ac>
  4395e4:	ldr	w0, [sp, #140]
  4395e8:	cmp	w0, #0x3e7
  4395ec:	b.gt	43960c <config_parse_tmpfs_size+0x1ac>
  4395f0:	ldrsw	x0, [sp, #140]
  4395f4:	mov	x1, #0x3e8                 	// #1000
  4395f8:	bl	407c00 <physical_memory_scale@plt>
  4395fc:	mov	x1, x0
  439600:	ldr	x0, [sp, #160]
  439604:	str	x1, [x0]
  439608:	b	4396f4 <config_parse_tmpfs_size+0x294>
  43960c:	add	x0, sp, #0x98
  439610:	mov	x2, x0
  439614:	mov	x1, #0x400                 	// #1024
  439618:	ldr	x0, [sp, #72]
  43961c:	bl	4073f0 <parse_size@plt>
  439620:	str	w0, [sp, #140]
  439624:	ldr	w0, [sp, #140]
  439628:	cmp	w0, #0x0
  43962c:	b.lt	439644 <config_parse_tmpfs_size+0x1e4>  // b.tstop
  439630:	ldr	x0, [sp, #152]
  439634:	cmp	x0, #0x0
  439638:	b.ne	439644 <config_parse_tmpfs_size+0x1e4>  // b.any
  43963c:	mov	w0, #0xffffffde            	// #-34
  439640:	str	w0, [sp, #140]
  439644:	ldr	w0, [sp, #140]
  439648:	cmp	w0, #0x0
  43964c:	b.ge	4396d4 <config_parse_tmpfs_size+0x274>  // b.tcont
  439650:	mov	w0, #0x3                   	// #3
  439654:	str	w0, [sp, #144]
  439658:	ldr	w0, [sp, #140]
  43965c:	str	w0, [sp, #148]
  439660:	mov	w0, #0x0                   	// #0
  439664:	bl	4083e0 <log_get_max_level_realm@plt>
  439668:	mov	w1, w0
  43966c:	ldr	w0, [sp, #144]
  439670:	and	w0, w0, #0x7
  439674:	cmp	w1, w0
  439678:	b.lt	4396c4 <config_parse_tmpfs_size+0x264>  // b.tstop
  43967c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439680:	add	x1, x0, #0x933
  439684:	ldr	x0, [sp, #72]
  439688:	str	x0, [sp, #8]
  43968c:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439690:	add	x0, x0, #0xfc0
  439694:	str	x0, [sp]
  439698:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43969c:	add	x7, x0, #0x350
  4396a0:	mov	w6, #0x33b                 	// #827
  4396a4:	mov	x5, x1
  4396a8:	ldr	w4, [sp, #148]
  4396ac:	ldr	w3, [sp, #108]
  4396b0:	ldr	x2, [sp, #112]
  4396b4:	ldr	w1, [sp, #144]
  4396b8:	ldr	x0, [sp, #120]
  4396bc:	bl	407ed0 <log_syntax_internal@plt>
  4396c0:	b	4396cc <config_parse_tmpfs_size+0x26c>
  4396c4:	ldr	w0, [sp, #148]
  4396c8:	cmp	w0, #0x0
  4396cc:	mov	w0, #0x0                   	// #0
  4396d0:	b	4396f8 <config_parse_tmpfs_size+0x298>
  4396d4:	ldr	x19, [sp, #152]
  4396d8:	bl	407e20 <page_size@plt>
  4396dc:	mov	x1, x0
  4396e0:	mov	x0, x19
  4396e4:	bl	435fc4 <ALIGN_TO>
  4396e8:	mov	x1, x0
  4396ec:	ldr	x0, [sp, #160]
  4396f0:	str	x1, [x0]
  4396f4:	mov	w0, #0x0                   	// #0
  4396f8:	mov	w1, w0
  4396fc:	adrp	x0, 460000 <wordlist.10364+0x370>
  439700:	ldr	x0, [x0, #4024]
  439704:	ldr	x2, [sp, #168]
  439708:	ldr	x0, [x0]
  43970c:	eor	x0, x2, x0
  439710:	cmp	x0, #0x0
  439714:	b.eq	43971c <config_parse_tmpfs_size+0x2bc>  // b.none
  439718:	bl	407b20 <__stack_chk_fail@plt>
  43971c:	mov	w0, w1
  439720:	ldr	x19, [sp, #32]
  439724:	ldp	x29, x30, [sp, #16]
  439728:	add	sp, sp, #0xb0
  43972c:	ret

0000000000439730 <config_parse_compat_user_tasks_max>:
  439730:	sub	sp, sp, #0x80
  439734:	stp	x29, x30, [sp, #16]
  439738:	add	x29, sp, #0x10
  43973c:	str	x0, [sp, #88]
  439740:	str	x1, [sp, #80]
  439744:	str	w2, [sp, #76]
  439748:	str	x3, [sp, #64]
  43974c:	str	w4, [sp, #72]
  439750:	str	x5, [sp, #56]
  439754:	str	w6, [sp, #52]
  439758:	str	x7, [sp, #40]
  43975c:	ldr	x0, [sp, #80]
  439760:	cmp	x0, #0x0
  439764:	cset	w0, eq  // eq = none
  439768:	and	w0, w0, #0xff
  43976c:	and	x0, x0, #0xff
  439770:	cmp	x0, #0x0
  439774:	b.eq	4397a0 <config_parse_compat_user_tasks_max+0x70>  // b.none
  439778:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43977c:	add	x1, x0, #0x933
  439780:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439784:	add	x4, x0, #0x368
  439788:	mov	w3, #0x351                 	// #849
  43978c:	mov	x2, x1
  439790:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439794:	add	x1, x0, #0xf98
  439798:	mov	w0, #0x0                   	// #0
  43979c:	bl	407650 <log_assert_failed_realm@plt>
  4397a0:	ldr	x0, [sp, #56]
  4397a4:	cmp	x0, #0x0
  4397a8:	cset	w0, eq  // eq = none
  4397ac:	and	w0, w0, #0xff
  4397b0:	and	x0, x0, #0xff
  4397b4:	cmp	x0, #0x0
  4397b8:	b.eq	4397e4 <config_parse_compat_user_tasks_max+0xb4>  // b.none
  4397bc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4397c0:	add	x1, x0, #0x933
  4397c4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4397c8:	add	x4, x0, #0x368
  4397cc:	mov	w3, #0x352                 	// #850
  4397d0:	mov	x2, x1
  4397d4:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4397d8:	add	x1, x0, #0xfa8
  4397dc:	mov	w0, #0x0                   	// #0
  4397e0:	bl	407650 <log_assert_failed_realm@plt>
  4397e4:	ldr	x0, [sp, #40]
  4397e8:	cmp	x0, #0x0
  4397ec:	cset	w0, eq  // eq = none
  4397f0:	and	w0, w0, #0xff
  4397f4:	and	x0, x0, #0xff
  4397f8:	cmp	x0, #0x0
  4397fc:	b.eq	439828 <config_parse_compat_user_tasks_max+0xf8>  // b.none
  439800:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439804:	add	x1, x0, #0x933
  439808:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43980c:	add	x4, x0, #0x368
  439810:	mov	w3, #0x353                 	// #851
  439814:	mov	x2, x1
  439818:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  43981c:	add	x1, x0, #0xfb0
  439820:	mov	w0, #0x0                   	// #0
  439824:	bl	407650 <log_assert_failed_realm@plt>
  439828:	mov	w0, #0x5                   	// #5
  43982c:	str	w0, [sp, #108]
  439830:	str	wzr, [sp, #112]
  439834:	mov	w0, #0x0                   	// #0
  439838:	bl	4083e0 <log_get_max_level_realm@plt>
  43983c:	mov	w1, w0
  439840:	ldr	w0, [sp, #108]
  439844:	and	w0, w0, #0x7
  439848:	cmp	w1, w0
  43984c:	b.lt	439898 <config_parse_compat_user_tasks_max+0x168>  // b.tstop
  439850:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439854:	add	x1, x0, #0x933
  439858:	ldr	x0, [sp, #56]
  43985c:	str	x0, [sp, #8]
  439860:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  439864:	add	x0, x0, #0xff0
  439868:	str	x0, [sp]
  43986c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439870:	add	x7, x0, #0x390
  439874:	mov	w6, #0x355                 	// #853
  439878:	mov	x5, x1
  43987c:	ldr	w4, [sp, #112]
  439880:	ldr	w3, [sp, #76]
  439884:	ldr	x2, [sp, #80]
  439888:	ldr	w1, [sp, #108]
  43988c:	ldr	x0, [sp, #88]
  439890:	bl	407ed0 <log_syntax_internal@plt>
  439894:	b	4398a0 <config_parse_compat_user_tasks_max+0x170>
  439898:	ldr	w0, [sp, #112]
  43989c:	cmp	w0, #0x0
  4398a0:	mov	w0, #0x6                   	// #6
  4398a4:	str	w0, [sp, #116]
  4398a8:	str	wzr, [sp, #120]
  4398ac:	str	wzr, [sp, #124]
  4398b0:	ldr	w0, [sp, #124]
  4398b4:	bl	4083e0 <log_get_max_level_realm@plt>
  4398b8:	mov	w1, w0
  4398bc:	ldr	w0, [sp, #116]
  4398c0:	and	w0, w0, #0x7
  4398c4:	cmp	w1, w0
  4398c8:	b.lt	439910 <config_parse_compat_user_tasks_max+0x1e0>  // b.tstop
  4398cc:	ldr	w0, [sp, #124]
  4398d0:	lsl	w1, w0, #10
  4398d4:	ldr	w0, [sp, #116]
  4398d8:	orr	w7, w1, w0
  4398dc:	adrp	x0, 445000 <__PRETTY_FUNCTION__.11617+0xa40>
  4398e0:	add	x1, x0, #0x933
  4398e4:	ldr	x6, [sp, #40]
  4398e8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4398ec:	add	x5, x0, #0x20
  4398f0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4398f4:	add	x4, x0, #0x390
  4398f8:	mov	w3, #0x358                 	// #856
  4398fc:	mov	x2, x1
  439900:	ldr	w1, [sp, #120]
  439904:	mov	w0, w7
  439908:	bl	407d60 <log_internal_realm@plt>
  43990c:	b	439918 <config_parse_compat_user_tasks_max+0x1e8>
  439910:	ldr	w0, [sp, #120]
  439914:	cmp	w0, #0x0
  439918:	mov	w0, #0x0                   	// #0
  43991c:	ldp	x29, x30, [sp, #16]
  439920:	add	sp, sp, #0x80
  439924:	ret

0000000000439928 <freep>:
  439928:	stp	x29, x30, [sp, #-32]!
  43992c:	mov	x29, sp
  439930:	str	x0, [sp, #24]
  439934:	ldr	x0, [sp, #24]
  439938:	ldr	x0, [x0]
  43993c:	bl	408150 <free@plt>
  439940:	nop
  439944:	ldp	x29, x30, [sp], #32
  439948:	ret

000000000043994c <strempty>:
  43994c:	sub	sp, sp, #0x10
  439950:	str	x0, [sp, #8]
  439954:	ldr	x0, [sp, #8]
  439958:	cmp	x0, #0x0
  43995c:	b.ne	439968 <strempty+0x1c>  // b.any
  439960:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439964:	add	x0, x0, #0x3b8
  439968:	add	sp, sp, #0x10
  43996c:	ret

0000000000439970 <isempty>:
  439970:	sub	sp, sp, #0x10
  439974:	str	x0, [sp, #8]
  439978:	ldr	x0, [sp, #8]
  43997c:	cmp	x0, #0x0
  439980:	b.eq	439994 <isempty+0x24>  // b.none
  439984:	ldr	x0, [sp, #8]
  439988:	ldrb	w0, [x0]
  43998c:	cmp	w0, #0x0
  439990:	b.ne	43999c <isempty+0x2c>  // b.any
  439994:	mov	w0, #0x1                   	// #1
  439998:	b	4399a0 <isempty+0x30>
  43999c:	mov	w0, #0x0                   	// #0
  4399a0:	and	w0, w0, #0x1
  4399a4:	and	w0, w0, #0xff
  4399a8:	add	sp, sp, #0x10
  4399ac:	ret

00000000004399b0 <when_wall>:
  4399b0:	sub	sp, sp, #0x20
  4399b4:	str	x0, [sp, #8]
  4399b8:	str	x1, [sp]
  4399bc:	ldr	x1, [sp, #8]
  4399c0:	ldr	x0, [sp]
  4399c4:	cmp	x1, x0
  4399c8:	b.cc	4399d4 <when_wall+0x24>  // b.lo, b.ul, b.last
  4399cc:	mov	x0, #0x0                   	// #0
  4399d0:	b	439a94 <when_wall+0xe4>
  4399d4:	ldr	x1, [sp]
  4399d8:	ldr	x0, [sp, #8]
  4399dc:	sub	x0, x1, x0
  4399e0:	str	x0, [sp, #24]
  4399e4:	mov	w0, #0x1                   	// #1
  4399e8:	str	w0, [sp, #20]
  4399ec:	b	439a5c <when_wall+0xac>
  4399f0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  4399f4:	add	x0, x0, #0x4d8
  4399f8:	ldr	w1, [sp, #20]
  4399fc:	ldr	w0, [x0, x1, lsl #2]
  439a00:	sxtw	x1, w0
  439a04:	mov	x0, #0x8700                	// #34560
  439a08:	movk	x0, #0x393, lsl #16
  439a0c:	mul	x0, x1, x0
  439a10:	ldr	x1, [sp, #24]
  439a14:	cmp	x1, x0
  439a18:	b.hi	439a50 <when_wall+0xa0>  // b.pmore
  439a1c:	ldr	w0, [sp, #20]
  439a20:	sub	w1, w0, #0x1
  439a24:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439a28:	add	x0, x0, #0x4d8
  439a2c:	mov	w1, w1
  439a30:	ldr	w0, [x0, x1, lsl #2]
  439a34:	sxtw	x1, w0
  439a38:	mov	x0, #0x8700                	// #34560
  439a3c:	movk	x0, #0x393, lsl #16
  439a40:	mul	x0, x1, x0
  439a44:	ldr	x1, [sp, #24]
  439a48:	sub	x0, x1, x0
  439a4c:	b	439a94 <when_wall+0xe4>
  439a50:	ldr	w0, [sp, #20]
  439a54:	add	w0, w0, #0x1
  439a58:	str	w0, [sp, #20]
  439a5c:	ldr	w0, [sp, #20]
  439a60:	cmp	w0, #0x12
  439a64:	b.ls	4399f0 <when_wall+0x40>  // b.plast
  439a68:	ldr	x1, [sp, #24]
  439a6c:	mov	x0, #0x29c5                	// #10693
  439a70:	movk	x0, #0x3e5, lsl #16
  439a74:	movk	x0, #0xbf2c, lsl #32
  439a78:	movk	x0, #0x98b5, lsl #48
  439a7c:	umulh	x0, x1, x0
  439a80:	lsr	x0, x0, #31
  439a84:	mov	x2, #0xa400                	// #41984
  439a88:	movk	x2, #0xd693, lsl #16
  439a8c:	mul	x0, x0, x2
  439a90:	sub	x0, x1, x0
  439a94:	add	sp, sp, #0x20
  439a98:	ret

0000000000439a9c <logind_wall_tty_filter>:
  439a9c:	stp	x29, x30, [sp, #-48]!
  439aa0:	mov	x29, sp
  439aa4:	str	x0, [sp, #24]
  439aa8:	str	x1, [sp, #16]
  439aac:	ldr	x0, [sp, #16]
  439ab0:	str	x0, [sp, #32]
  439ab4:	ldr	x0, [sp, #32]
  439ab8:	cmp	x0, #0x0
  439abc:	cset	w0, eq  // eq = none
  439ac0:	and	w0, w0, #0xff
  439ac4:	and	x0, x0, #0xff
  439ac8:	cmp	x0, #0x0
  439acc:	b.eq	439af8 <logind_wall_tty_filter+0x5c>  // b.none
  439ad0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439ad4:	add	x1, x0, #0x3c3
  439ad8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439adc:	add	x4, x0, #0x528
  439ae0:	mov	w3, #0x30                  	// #48
  439ae4:	mov	x2, x1
  439ae8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439aec:	add	x1, x0, #0x3e0
  439af0:	mov	w0, #0x0                   	// #0
  439af4:	bl	407650 <log_assert_failed_realm@plt>
  439af8:	ldr	x0, [sp, #32]
  439afc:	ldr	x0, [x0, #312]
  439b00:	cmp	x0, #0x0
  439b04:	b.ne	439b10 <logind_wall_tty_filter+0x74>  // b.any
  439b08:	mov	w0, #0x1                   	// #1
  439b0c:	b	439b58 <logind_wall_tty_filter+0xbc>
  439b10:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439b14:	add	x1, x0, #0x3e8
  439b18:	ldr	x0, [sp, #24]
  439b1c:	bl	4078d0 <path_startswith@plt>
  439b20:	str	x0, [sp, #40]
  439b24:	ldr	x0, [sp, #40]
  439b28:	cmp	x0, #0x0
  439b2c:	b.ne	439b38 <logind_wall_tty_filter+0x9c>  // b.any
  439b30:	mov	w0, #0x1                   	// #1
  439b34:	b	439b58 <logind_wall_tty_filter+0xbc>
  439b38:	ldr	x0, [sp, #32]
  439b3c:	ldr	x0, [x0, #312]
  439b40:	mov	x1, x0
  439b44:	ldr	x0, [sp, #40]
  439b48:	bl	407f30 <strcmp@plt>
  439b4c:	cmp	w0, #0x0
  439b50:	cset	w0, ne  // ne = any
  439b54:	and	w0, w0, #0xff
  439b58:	ldp	x29, x30, [sp], #48
  439b5c:	ret

0000000000439b60 <warn_wall>:
  439b60:	stp	x29, x30, [sp, #-144]!
  439b64:	mov	x29, sp
  439b68:	stp	x19, x20, [sp, #16]
  439b6c:	stp	x21, x22, [sp, #32]
  439b70:	str	x0, [sp, #56]
  439b74:	str	x1, [sp, #48]
  439b78:	adrp	x0, 460000 <wordlist.10364+0x370>
  439b7c:	ldr	x0, [x0, #4024]
  439b80:	ldr	x1, [x0]
  439b84:	str	x1, [sp, #136]
  439b88:	mov	x1, #0x0                   	// #0
  439b8c:	stp	xzr, xzr, [sp, #96]
  439b90:	stp	xzr, xzr, [sp, #112]
  439b94:	str	wzr, [sp, #128]
  439b98:	strh	wzr, [sp, #132]
  439b9c:	str	xzr, [sp, #72]
  439ba0:	str	xzr, [sp, #80]
  439ba4:	ldr	x0, [sp, #56]
  439ba8:	cmp	x0, #0x0
  439bac:	cset	w0, eq  // eq = none
  439bb0:	and	w0, w0, #0xff
  439bb4:	and	x0, x0, #0xff
  439bb8:	cmp	x0, #0x0
  439bbc:	b.eq	439be8 <warn_wall+0x88>  // b.none
  439bc0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439bc4:	add	x1, x0, #0x3c3
  439bc8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439bcc:	add	x4, x0, #0x540
  439bd0:	mov	w3, #0x42                  	// #66
  439bd4:	mov	x2, x1
  439bd8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439bdc:	add	x1, x0, #0x3e0
  439be0:	mov	w0, #0x0                   	// #0
  439be4:	bl	407650 <log_assert_failed_realm@plt>
  439be8:	ldr	x0, [sp, #56]
  439bec:	ldr	w0, [x0, #344]
  439bf0:	cmp	w0, #0x0
  439bf4:	b.ne	439c00 <warn_wall+0xa0>  // b.any
  439bf8:	mov	w19, #0x0                   	// #0
  439bfc:	b	439d48 <warn_wall+0x1e8>
  439c00:	ldr	x0, [sp, #56]
  439c04:	ldr	x0, [x0, #288]
  439c08:	ldr	x1, [sp, #48]
  439c0c:	cmp	x1, x0
  439c10:	cset	w0, cc  // cc = lo, ul, last
  439c14:	and	w0, w0, #0xff
  439c18:	and	x0, x0, #0xff
  439c1c:	str	x0, [sp, #88]
  439c20:	ldr	x0, [sp, #56]
  439c24:	ldr	x0, [x0, #336]
  439c28:	bl	43994c <strempty>
  439c2c:	mov	x22, x0
  439c30:	ldr	x0, [sp, #56]
  439c34:	ldr	x0, [x0, #336]
  439c38:	bl	439970 <isempty>
  439c3c:	and	w0, w0, #0xff
  439c40:	cmp	w0, #0x0
  439c44:	b.eq	439c54 <warn_wall+0xf4>  // b.none
  439c48:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439c4c:	add	x19, x0, #0x3b8
  439c50:	b	439c5c <warn_wall+0xfc>
  439c54:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439c58:	add	x19, x0, #0x3f0
  439c5c:	ldr	x0, [sp, #56]
  439c60:	ldr	x21, [x0, #280]
  439c64:	ldr	x0, [sp, #88]
  439c68:	cmp	x0, #0x0
  439c6c:	b.eq	439c7c <warn_wall+0x11c>  // b.none
  439c70:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439c74:	add	x20, x0, #0x3f8
  439c78:	b	439c84 <warn_wall+0x124>
  439c7c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439c80:	add	x20, x0, #0x400
  439c84:	ldr	x0, [sp, #88]
  439c88:	cmp	x0, #0x0
  439c8c:	b.eq	439cac <warn_wall+0x14c>  // b.none
  439c90:	ldr	x0, [sp, #56]
  439c94:	ldr	x1, [x0, #288]
  439c98:	add	x0, sp, #0x60
  439c9c:	mov	x2, x1
  439ca0:	mov	x1, #0x26                  	// #38
  439ca4:	bl	4078b0 <format_timestamp@plt>
  439ca8:	b	439cb4 <warn_wall+0x154>
  439cac:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439cb0:	add	x0, x0, #0x3b8
  439cb4:	add	x7, sp, #0x48
  439cb8:	mov	x6, x0
  439cbc:	mov	x5, x20
  439cc0:	mov	x4, x21
  439cc4:	mov	x3, x19
  439cc8:	mov	x2, x22
  439ccc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439cd0:	add	x1, x0, #0x408
  439cd4:	mov	x0, x7
  439cd8:	bl	408060 <asprintf@plt>
  439cdc:	str	w0, [sp, #68]
  439ce0:	ldr	w0, [sp, #68]
  439ce4:	cmp	w0, #0x0
  439ce8:	b.ge	439d10 <warn_wall+0x1b0>  // b.tcont
  439cec:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439cf0:	add	x1, x0, #0x3c3
  439cf4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439cf8:	add	x3, x0, #0x550
  439cfc:	mov	w2, #0x50                  	// #80
  439d00:	mov	w0, #0x0                   	// #0
  439d04:	bl	408330 <log_oom_internal@plt>
  439d08:	mov	w19, #0x0                   	// #0
  439d0c:	b	439d48 <warn_wall+0x1e8>
  439d10:	ldr	x0, [sp, #56]
  439d14:	ldr	w0, [x0, #304]
  439d18:	bl	4080b0 <uid_to_name@plt>
  439d1c:	str	x0, [sp, #80]
  439d20:	ldr	x5, [sp, #72]
  439d24:	ldr	x1, [sp, #80]
  439d28:	ldr	x0, [sp, #56]
  439d2c:	ldr	x2, [x0, #312]
  439d30:	ldr	x4, [sp, #56]
  439d34:	adrp	x0, 439000 <user_stop_timeout_callback+0x14>
  439d38:	add	x3, x0, #0xa9c
  439d3c:	mov	x0, x5
  439d40:	bl	407de0 <utmp_wall@plt>
  439d44:	mov	w19, #0x1                   	// #1
  439d48:	add	x0, sp, #0x50
  439d4c:	bl	439928 <freep>
  439d50:	add	x0, sp, #0x48
  439d54:	bl	439928 <freep>
  439d58:	mov	w1, w19
  439d5c:	adrp	x0, 460000 <wordlist.10364+0x370>
  439d60:	ldr	x0, [x0, #4024]
  439d64:	ldr	x2, [sp, #136]
  439d68:	ldr	x0, [x0]
  439d6c:	eor	x0, x2, x0
  439d70:	cmp	x0, #0x0
  439d74:	b.eq	439d7c <warn_wall+0x21c>  // b.none
  439d78:	bl	407b20 <__stack_chk_fail@plt>
  439d7c:	mov	w0, w1
  439d80:	ldp	x19, x20, [sp, #16]
  439d84:	ldp	x21, x22, [sp, #32]
  439d88:	ldp	x29, x30, [sp], #144
  439d8c:	ret

0000000000439d90 <wall_message_timeout_handler>:
  439d90:	stp	x29, x30, [sp, #-112]!
  439d94:	mov	x29, sp
  439d98:	str	x0, [sp, #40]
  439d9c:	str	x1, [sp, #32]
  439da0:	str	x2, [sp, #24]
  439da4:	ldr	x0, [sp, #24]
  439da8:	str	x0, [sp, #88]
  439dac:	ldr	x0, [sp, #88]
  439db0:	cmp	x0, #0x0
  439db4:	cset	w0, eq  // eq = none
  439db8:	and	w0, w0, #0xff
  439dbc:	and	x0, x0, #0xff
  439dc0:	cmp	x0, #0x0
  439dc4:	b.eq	439df0 <wall_message_timeout_handler+0x60>  // b.none
  439dc8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439dcc:	add	x1, x0, #0x3c3
  439dd0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439dd4:	add	x4, x0, #0x560
  439dd8:	mov	w3, #0x63                  	// #99
  439ddc:	mov	x2, x1
  439de0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439de4:	add	x1, x0, #0x3e0
  439de8:	mov	w0, #0x0                   	// #0
  439dec:	bl	407650 <log_assert_failed_realm@plt>
  439df0:	ldr	x0, [sp, #88]
  439df4:	ldr	x0, [x0, #352]
  439df8:	ldr	x1, [sp, #40]
  439dfc:	cmp	x1, x0
  439e00:	cset	w0, ne  // ne = any
  439e04:	and	w0, w0, #0xff
  439e08:	and	x0, x0, #0xff
  439e0c:	cmp	x0, #0x0
  439e10:	b.eq	439e3c <wall_message_timeout_handler+0xac>  // b.none
  439e14:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439e18:	add	x1, x0, #0x3c3
  439e1c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439e20:	add	x4, x0, #0x560
  439e24:	mov	w3, #0x64                  	// #100
  439e28:	mov	x2, x1
  439e2c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439e30:	add	x1, x0, #0x438
  439e34:	mov	w0, #0x0                   	// #0
  439e38:	bl	407650 <log_assert_failed_realm@plt>
  439e3c:	mov	w0, #0x0                   	// #0
  439e40:	bl	407e80 <now@plt>
  439e44:	str	x0, [sp, #96]
  439e48:	ldr	x1, [sp, #96]
  439e4c:	ldr	x0, [sp, #88]
  439e50:	bl	439b60 <warn_wall>
  439e54:	str	w0, [sp, #60]
  439e58:	ldr	w0, [sp, #60]
  439e5c:	cmp	w0, #0x0
  439e60:	b.ne	439e6c <wall_message_timeout_handler+0xdc>  // b.any
  439e64:	mov	w0, #0x0                   	// #0
  439e68:	b	439fe8 <wall_message_timeout_handler+0x258>
  439e6c:	ldr	x0, [sp, #88]
  439e70:	ldr	x0, [x0, #288]
  439e74:	mov	x1, x0
  439e78:	ldr	x0, [sp, #96]
  439e7c:	bl	4399b0 <when_wall>
  439e80:	str	x0, [sp, #104]
  439e84:	ldr	x0, [sp, #104]
  439e88:	cmp	x0, #0x0
  439e8c:	b.eq	439fe4 <wall_message_timeout_handler+0x254>  // b.none
  439e90:	ldr	x1, [sp, #96]
  439e94:	ldr	x0, [sp, #104]
  439e98:	add	x0, x1, x0
  439e9c:	mov	x1, x0
  439ea0:	ldr	x0, [sp, #40]
  439ea4:	bl	4070b0 <sd_event_source_set_time@plt>
  439ea8:	str	w0, [sp, #60]
  439eac:	ldr	w0, [sp, #60]
  439eb0:	cmp	w0, #0x0
  439eb4:	b.ge	439f40 <wall_message_timeout_handler+0x1b0>  // b.tcont
  439eb8:	mov	w0, #0x3                   	// #3
  439ebc:	str	w0, [sp, #76]
  439ec0:	ldr	w0, [sp, #60]
  439ec4:	str	w0, [sp, #80]
  439ec8:	str	wzr, [sp, #84]
  439ecc:	ldr	w0, [sp, #84]
  439ed0:	bl	4083e0 <log_get_max_level_realm@plt>
  439ed4:	mov	w1, w0
  439ed8:	ldr	w0, [sp, #76]
  439edc:	and	w0, w0, #0x7
  439ee0:	cmp	w1, w0
  439ee4:	b.lt	439f28 <wall_message_timeout_handler+0x198>  // b.tstop
  439ee8:	ldr	w0, [sp, #84]
  439eec:	lsl	w1, w0, #10
  439ef0:	ldr	w0, [sp, #76]
  439ef4:	orr	w6, w1, w0
  439ef8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439efc:	add	x1, x0, #0x3c3
  439f00:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439f04:	add	x5, x0, #0x460
  439f08:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439f0c:	add	x4, x0, #0x580
  439f10:	mov	w3, #0x70                  	// #112
  439f14:	mov	x2, x1
  439f18:	ldr	w1, [sp, #80]
  439f1c:	mov	w0, w6
  439f20:	bl	407d60 <log_internal_realm@plt>
  439f24:	b	439fe8 <wall_message_timeout_handler+0x258>
  439f28:	ldr	w0, [sp, #80]
  439f2c:	cmp	w0, #0x0
  439f30:	cneg	w0, w0, lt  // lt = tstop
  439f34:	and	w0, w0, #0xff
  439f38:	neg	w0, w0
  439f3c:	b	439fe8 <wall_message_timeout_handler+0x258>
  439f40:	mov	w1, #0xffffffff            	// #-1
  439f44:	ldr	x0, [sp, #40]
  439f48:	bl	4076f0 <sd_event_source_set_enabled@plt>
  439f4c:	str	w0, [sp, #60]
  439f50:	ldr	w0, [sp, #60]
  439f54:	cmp	w0, #0x0
  439f58:	b.ge	439fe4 <wall_message_timeout_handler+0x254>  // b.tcont
  439f5c:	mov	w0, #0x3                   	// #3
  439f60:	str	w0, [sp, #64]
  439f64:	ldr	w0, [sp, #60]
  439f68:	str	w0, [sp, #68]
  439f6c:	str	wzr, [sp, #72]
  439f70:	ldr	w0, [sp, #72]
  439f74:	bl	4083e0 <log_get_max_level_realm@plt>
  439f78:	mov	w1, w0
  439f7c:	ldr	w0, [sp, #64]
  439f80:	and	w0, w0, #0x7
  439f84:	cmp	w1, w0
  439f88:	b.lt	439fcc <wall_message_timeout_handler+0x23c>  // b.tstop
  439f8c:	ldr	w0, [sp, #72]
  439f90:	lsl	w1, w0, #10
  439f94:	ldr	w0, [sp, #64]
  439f98:	orr	w6, w1, w0
  439f9c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439fa0:	add	x1, x0, #0x3c3
  439fa4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439fa8:	add	x5, x0, #0x488
  439fac:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  439fb0:	add	x4, x0, #0x580
  439fb4:	mov	w3, #0x74                  	// #116
  439fb8:	mov	x2, x1
  439fbc:	ldr	w1, [sp, #68]
  439fc0:	mov	w0, w6
  439fc4:	bl	407d60 <log_internal_realm@plt>
  439fc8:	b	439fe8 <wall_message_timeout_handler+0x258>
  439fcc:	ldr	w0, [sp, #68]
  439fd0:	cmp	w0, #0x0
  439fd4:	cneg	w0, w0, lt  // lt = tstop
  439fd8:	and	w0, w0, #0xff
  439fdc:	neg	w0, w0
  439fe0:	b	439fe8 <wall_message_timeout_handler+0x258>
  439fe4:	mov	w0, #0x0                   	// #0
  439fe8:	ldp	x29, x30, [sp], #112
  439fec:	ret

0000000000439ff0 <manager_setup_wall_message_timer>:
  439ff0:	stp	x29, x30, [sp, #-96]!
  439ff4:	mov	x29, sp
  439ff8:	str	x0, [sp, #24]
  439ffc:	ldr	x0, [sp, #24]
  43a000:	cmp	x0, #0x0
  43a004:	cset	w0, eq  // eq = none
  43a008:	and	w0, w0, #0xff
  43a00c:	and	x0, x0, #0xff
  43a010:	cmp	x0, #0x0
  43a014:	b.eq	43a040 <manager_setup_wall_message_timer+0x50>  // b.none
  43a018:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a01c:	add	x1, x0, #0x3c3
  43a020:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a024:	add	x4, x0, #0x5a0
  43a028:	mov	w3, #0x7f                  	// #127
  43a02c:	mov	x2, x1
  43a030:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a034:	add	x1, x0, #0x3e0
  43a038:	mov	w0, #0x0                   	// #0
  43a03c:	bl	407650 <log_assert_failed_realm@plt>
  43a040:	mov	w0, #0x0                   	// #0
  43a044:	bl	407e80 <now@plt>
  43a048:	str	x0, [sp, #80]
  43a04c:	ldr	x0, [sp, #24]
  43a050:	ldr	x0, [x0, #288]
  43a054:	str	x0, [sp, #88]
  43a058:	ldr	x0, [sp, #24]
  43a05c:	ldr	x0, [x0, #280]
  43a060:	bl	439970 <isempty>
  43a064:	and	w0, w0, #0xff
  43a068:	cmp	w0, #0x0
  43a06c:	b.eq	43a084 <manager_setup_wall_message_timer+0x94>  // b.none
  43a070:	ldr	x1, [sp, #80]
  43a074:	ldr	x0, [sp, #24]
  43a078:	bl	439b60 <warn_wall>
  43a07c:	mov	w0, #0x0                   	// #0
  43a080:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a084:	ldr	x1, [sp, #88]
  43a088:	ldr	x0, [sp, #80]
  43a08c:	cmp	x1, x0
  43a090:	b.cs	43a09c <manager_setup_wall_message_timer+0xac>  // b.hs, b.nlast
  43a094:	mov	w0, #0x0                   	// #0
  43a098:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a09c:	ldr	x1, [sp, #88]
  43a0a0:	ldr	x0, [sp, #80]
  43a0a4:	sub	x1, x1, x0
  43a0a8:	mov	x0, #0xe8ff                	// #59647
  43a0ac:	movk	x0, #0x35a4, lsl #16
  43a0b0:	cmp	x1, x0
  43a0b4:	b.hi	43a0dc <manager_setup_wall_message_timer+0xec>  // b.pmore
  43a0b8:	ldr	x1, [sp, #80]
  43a0bc:	ldr	x0, [sp, #24]
  43a0c0:	bl	439b60 <warn_wall>
  43a0c4:	str	w0, [sp, #40]
  43a0c8:	ldr	w0, [sp, #40]
  43a0cc:	cmp	w0, #0x0
  43a0d0:	b.ne	43a0dc <manager_setup_wall_message_timer+0xec>  // b.any
  43a0d4:	mov	w0, #0x0                   	// #0
  43a0d8:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a0dc:	ldr	x1, [sp, #88]
  43a0e0:	ldr	x0, [sp, #80]
  43a0e4:	bl	4399b0 <when_wall>
  43a0e8:	str	x0, [sp, #88]
  43a0ec:	ldr	x0, [sp, #88]
  43a0f0:	cmp	x0, #0x0
  43a0f4:	b.ne	43a100 <manager_setup_wall_message_timer+0x110>  // b.any
  43a0f8:	mov	w0, #0x0                   	// #0
  43a0fc:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a100:	ldr	x0, [sp, #24]
  43a104:	ldr	x0, [x0, #352]
  43a108:	cmp	x0, #0x0
  43a10c:	b.eq	43a270 <manager_setup_wall_message_timer+0x280>  // b.none
  43a110:	ldr	x0, [sp, #24]
  43a114:	ldr	x2, [x0, #352]
  43a118:	ldr	x1, [sp, #80]
  43a11c:	ldr	x0, [sp, #88]
  43a120:	add	x0, x1, x0
  43a124:	mov	x1, x0
  43a128:	mov	x0, x2
  43a12c:	bl	4070b0 <sd_event_source_set_time@plt>
  43a130:	str	w0, [sp, #40]
  43a134:	ldr	w0, [sp, #40]
  43a138:	cmp	w0, #0x0
  43a13c:	b.ge	43a1c8 <manager_setup_wall_message_timer+0x1d8>  // b.tcont
  43a140:	mov	w0, #0x3                   	// #3
  43a144:	str	w0, [sp, #68]
  43a148:	ldr	w0, [sp, #40]
  43a14c:	str	w0, [sp, #72]
  43a150:	str	wzr, [sp, #76]
  43a154:	ldr	w0, [sp, #76]
  43a158:	bl	4083e0 <log_get_max_level_realm@plt>
  43a15c:	mov	w1, w0
  43a160:	ldr	w0, [sp, #68]
  43a164:	and	w0, w0, #0x7
  43a168:	cmp	w1, w0
  43a16c:	b.lt	43a1b0 <manager_setup_wall_message_timer+0x1c0>  // b.tstop
  43a170:	ldr	w0, [sp, #76]
  43a174:	lsl	w1, w0, #10
  43a178:	ldr	w0, [sp, #68]
  43a17c:	orr	w6, w1, w0
  43a180:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a184:	add	x1, x0, #0x3c3
  43a188:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a18c:	add	x5, x0, #0x460
  43a190:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a194:	add	x4, x0, #0x5c8
  43a198:	mov	w3, #0x9c                  	// #156
  43a19c:	mov	x2, x1
  43a1a0:	ldr	w1, [sp, #72]
  43a1a4:	mov	w0, w6
  43a1a8:	bl	407d60 <log_internal_realm@plt>
  43a1ac:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a1b0:	ldr	w0, [sp, #72]
  43a1b4:	cmp	w0, #0x0
  43a1b8:	cneg	w0, w0, lt  // lt = tstop
  43a1bc:	and	w0, w0, #0xff
  43a1c0:	neg	w0, w0
  43a1c4:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a1c8:	ldr	x0, [sp, #24]
  43a1cc:	ldr	x0, [x0, #352]
  43a1d0:	mov	w1, #0xffffffff            	// #-1
  43a1d4:	bl	4076f0 <sd_event_source_set_enabled@plt>
  43a1d8:	str	w0, [sp, #40]
  43a1dc:	ldr	w0, [sp, #40]
  43a1e0:	cmp	w0, #0x0
  43a1e4:	b.ge	43a348 <manager_setup_wall_message_timer+0x358>  // b.tcont
  43a1e8:	mov	w0, #0x3                   	// #3
  43a1ec:	str	w0, [sp, #56]
  43a1f0:	ldr	w0, [sp, #40]
  43a1f4:	str	w0, [sp, #60]
  43a1f8:	str	wzr, [sp, #64]
  43a1fc:	ldr	w0, [sp, #64]
  43a200:	bl	4083e0 <log_get_max_level_realm@plt>
  43a204:	mov	w1, w0
  43a208:	ldr	w0, [sp, #56]
  43a20c:	and	w0, w0, #0x7
  43a210:	cmp	w1, w0
  43a214:	b.lt	43a258 <manager_setup_wall_message_timer+0x268>  // b.tstop
  43a218:	ldr	w0, [sp, #64]
  43a21c:	lsl	w1, w0, #10
  43a220:	ldr	w0, [sp, #56]
  43a224:	orr	w6, w1, w0
  43a228:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a22c:	add	x1, x0, #0x3c3
  43a230:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a234:	add	x5, x0, #0x488
  43a238:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a23c:	add	x4, x0, #0x5c8
  43a240:	mov	w3, #0xa0                  	// #160
  43a244:	mov	x2, x1
  43a248:	ldr	w1, [sp, #60]
  43a24c:	mov	w0, w6
  43a250:	bl	407d60 <log_internal_realm@plt>
  43a254:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a258:	ldr	w0, [sp, #60]
  43a25c:	cmp	w0, #0x0
  43a260:	cneg	w0, w0, lt  // lt = tstop
  43a264:	and	w0, w0, #0xff
  43a268:	neg	w0, w0
  43a26c:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a270:	ldr	x0, [sp, #24]
  43a274:	ldr	x7, [x0]
  43a278:	ldr	x0, [sp, #24]
  43a27c:	add	x8, x0, #0x160
  43a280:	ldr	x1, [sp, #80]
  43a284:	ldr	x0, [sp, #88]
  43a288:	add	x1, x1, x0
  43a28c:	ldr	x6, [sp, #24]
  43a290:	adrp	x0, 439000 <user_stop_timeout_callback+0x14>
  43a294:	add	x5, x0, #0xd90
  43a298:	mov	x4, #0x0                   	// #0
  43a29c:	mov	x3, x1
  43a2a0:	mov	w2, #0x0                   	// #0
  43a2a4:	mov	x1, x8
  43a2a8:	mov	x0, x7
  43a2ac:	bl	4074d0 <sd_event_add_time@plt>
  43a2b0:	str	w0, [sp, #40]
  43a2b4:	ldr	w0, [sp, #40]
  43a2b8:	cmp	w0, #0x0
  43a2bc:	b.ge	43a348 <manager_setup_wall_message_timer+0x358>  // b.tcont
  43a2c0:	mov	w0, #0x3                   	// #3
  43a2c4:	str	w0, [sp, #44]
  43a2c8:	ldr	w0, [sp, #40]
  43a2cc:	str	w0, [sp, #48]
  43a2d0:	str	wzr, [sp, #52]
  43a2d4:	ldr	w0, [sp, #52]
  43a2d8:	bl	4083e0 <log_get_max_level_realm@plt>
  43a2dc:	mov	w1, w0
  43a2e0:	ldr	w0, [sp, #44]
  43a2e4:	and	w0, w0, #0x7
  43a2e8:	cmp	w1, w0
  43a2ec:	b.lt	43a330 <manager_setup_wall_message_timer+0x340>  // b.tstop
  43a2f0:	ldr	w0, [sp, #52]
  43a2f4:	lsl	w1, w0, #10
  43a2f8:	ldr	w0, [sp, #44]
  43a2fc:	orr	w6, w1, w0
  43a300:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a304:	add	x1, x0, #0x3c3
  43a308:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a30c:	add	x5, x0, #0x4b8
  43a310:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a314:	add	x4, x0, #0x5c8
  43a318:	mov	w3, #0xa5                  	// #165
  43a31c:	mov	x2, x1
  43a320:	ldr	w1, [sp, #48]
  43a324:	mov	w0, w6
  43a328:	bl	407d60 <log_internal_realm@plt>
  43a32c:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a330:	ldr	w0, [sp, #48]
  43a334:	cmp	w0, #0x0
  43a338:	cneg	w0, w0, lt  // lt = tstop
  43a33c:	and	w0, w0, #0xff
  43a340:	neg	w0, w0
  43a344:	b	43a34c <manager_setup_wall_message_timer+0x35c>
  43a348:	mov	w0, #0x0                   	// #0
  43a34c:	ldp	x29, x30, [sp], #96
  43a350:	ret

000000000043a354 <sd_device_enumerator_unrefp>:
  43a354:	stp	x29, x30, [sp, #-32]!
  43a358:	mov	x29, sp
  43a35c:	str	x0, [sp, #24]
  43a360:	ldr	x0, [sp, #24]
  43a364:	ldr	x0, [x0]
  43a368:	cmp	x0, #0x0
  43a36c:	b.eq	43a37c <sd_device_enumerator_unrefp+0x28>  // b.none
  43a370:	ldr	x0, [sp, #24]
  43a374:	ldr	x0, [x0]
  43a378:	bl	407500 <sd_device_enumerator_unref@plt>
  43a37c:	nop
  43a380:	ldp	x29, x30, [sp], #32
  43a384:	ret

000000000043a388 <freep>:
  43a388:	stp	x29, x30, [sp, #-32]!
  43a38c:	mov	x29, sp
  43a390:	str	x0, [sp, #24]
  43a394:	ldr	x0, [sp, #24]
  43a398:	ldr	x0, [x0]
  43a39c:	bl	408150 <free@plt>
  43a3a0:	nop
  43a3a4:	ldp	x29, x30, [sp], #32
  43a3a8:	ret

000000000043a3ac <isempty>:
  43a3ac:	sub	sp, sp, #0x10
  43a3b0:	str	x0, [sp, #8]
  43a3b4:	ldr	x0, [sp, #8]
  43a3b8:	cmp	x0, #0x0
  43a3bc:	b.eq	43a3d0 <isempty+0x24>  // b.none
  43a3c0:	ldr	x0, [sp, #8]
  43a3c4:	ldrb	w0, [x0]
  43a3c8:	cmp	w0, #0x0
  43a3cc:	b.ne	43a3d8 <isempty+0x2c>  // b.any
  43a3d0:	mov	w0, #0x1                   	// #1
  43a3d4:	b	43a3dc <isempty+0x30>
  43a3d8:	mov	w0, #0x0                   	// #0
  43a3dc:	and	w0, w0, #0x1
  43a3e0:	and	w0, w0, #0xff
  43a3e4:	add	sp, sp, #0x10
  43a3e8:	ret

000000000043a3ec <closedirp>:
  43a3ec:	stp	x29, x30, [sp, #-32]!
  43a3f0:	mov	x29, sp
  43a3f4:	str	x0, [sp, #24]
  43a3f8:	ldr	x0, [sp, #24]
  43a3fc:	ldr	x0, [x0]
  43a400:	cmp	x0, #0x0
  43a404:	b.eq	43a414 <closedirp+0x28>  // b.none
  43a408:	ldr	x0, [sp, #24]
  43a40c:	ldr	x0, [x0]
  43a410:	bl	407760 <closedir@plt>
  43a414:	nop
  43a418:	ldp	x29, x30, [sp], #32
  43a41c:	ret

000000000043a420 <set_free_free>:
  43a420:	stp	x29, x30, [sp, #-32]!
  43a424:	mov	x29, sp
  43a428:	str	x0, [sp, #24]
  43a42c:	mov	x2, #0x0                   	// #0
  43a430:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a434:	ldr	x1, [x0, #4088]
  43a438:	ldr	x0, [sp, #24]
  43a43c:	bl	4070d0 <internal_hashmap_free@plt>
  43a440:	ldp	x29, x30, [sp], #32
  43a444:	ret

000000000043a448 <set_free_freep>:
  43a448:	stp	x29, x30, [sp, #-32]!
  43a44c:	mov	x29, sp
  43a450:	str	x0, [sp, #24]
  43a454:	ldr	x0, [sp, #24]
  43a458:	ldr	x0, [x0]
  43a45c:	cmp	x0, #0x0
  43a460:	b.eq	43a470 <set_free_freep+0x28>  // b.none
  43a464:	ldr	x0, [sp, #24]
  43a468:	ldr	x0, [x0]
  43a46c:	bl	43a420 <set_free_free>
  43a470:	nop
  43a474:	ldp	x29, x30, [sp], #32
  43a478:	ret

000000000043a47c <flush_acl>:
  43a47c:	stp	x29, x30, [sp, #-64]!
  43a480:	mov	x29, sp
  43a484:	str	x0, [sp, #24]
  43a488:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a48c:	ldr	x0, [x0, #4024]
  43a490:	ldr	x1, [x0]
  43a494:	str	x1, [sp, #56]
  43a498:	mov	x1, #0x0                   	// #0
  43a49c:	strb	wzr, [sp, #39]
  43a4a0:	ldr	x0, [sp, #24]
  43a4a4:	cmp	x0, #0x0
  43a4a8:	cset	w0, eq  // eq = none
  43a4ac:	and	w0, w0, #0xff
  43a4b0:	and	x0, x0, #0xff
  43a4b4:	cmp	x0, #0x0
  43a4b8:	b.eq	43a4e4 <flush_acl+0x68>  // b.none
  43a4bc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a4c0:	add	x1, x0, #0x5f3
  43a4c4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a4c8:	add	x4, x0, #0x738
  43a4cc:	mov	w3, #0x18                  	// #24
  43a4d0:	mov	x2, x1
  43a4d4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a4d8:	add	x1, x0, #0x610
  43a4dc:	mov	w0, #0x0                   	// #0
  43a4e0:	bl	407650 <log_assert_failed_realm@plt>
  43a4e4:	add	x0, sp, #0x30
  43a4e8:	mov	x2, x0
  43a4ec:	mov	w1, #0x0                   	// #0
  43a4f0:	ldr	x0, [sp, #24]
  43a4f4:	bl	407ff0 <acl_get_entry@plt>
  43a4f8:	str	w0, [sp, #44]
  43a4fc:	b	43a580 <flush_acl+0x104>
  43a500:	ldr	x0, [sp, #48]
  43a504:	add	x1, sp, #0x28
  43a508:	bl	407f20 <acl_get_tag_type@plt>
  43a50c:	cmp	w0, #0x0
  43a510:	b.ge	43a524 <flush_acl+0xa8>  // b.tcont
  43a514:	bl	407960 <__errno_location@plt>
  43a518:	ldr	w0, [x0]
  43a51c:	neg	w0, w0
  43a520:	b	43a5ac <flush_acl+0x130>
  43a524:	ldr	w0, [sp, #40]
  43a528:	cmp	w0, #0x2
  43a52c:	b.ne	43a564 <flush_acl+0xe8>  // b.any
  43a530:	ldr	x0, [sp, #48]
  43a534:	mov	x1, x0
  43a538:	ldr	x0, [sp, #24]
  43a53c:	bl	4080f0 <acl_delete_entry@plt>
  43a540:	cmp	w0, #0x0
  43a544:	b.ge	43a558 <flush_acl+0xdc>  // b.tcont
  43a548:	bl	407960 <__errno_location@plt>
  43a54c:	ldr	w0, [x0]
  43a550:	neg	w0, w0
  43a554:	b	43a5ac <flush_acl+0x130>
  43a558:	mov	w0, #0x1                   	// #1
  43a55c:	strb	w0, [sp, #39]
  43a560:	b	43a568 <flush_acl+0xec>
  43a564:	nop
  43a568:	add	x0, sp, #0x30
  43a56c:	mov	x2, x0
  43a570:	mov	w1, #0x1                   	// #1
  43a574:	ldr	x0, [sp, #24]
  43a578:	bl	407ff0 <acl_get_entry@plt>
  43a57c:	str	w0, [sp, #44]
  43a580:	ldr	w0, [sp, #44]
  43a584:	cmp	w0, #0x0
  43a588:	b.gt	43a500 <flush_acl+0x84>
  43a58c:	ldr	w0, [sp, #44]
  43a590:	cmp	w0, #0x0
  43a594:	b.ge	43a5a8 <flush_acl+0x12c>  // b.tcont
  43a598:	bl	407960 <__errno_location@plt>
  43a59c:	ldr	w0, [x0]
  43a5a0:	neg	w0, w0
  43a5a4:	b	43a5ac <flush_acl+0x130>
  43a5a8:	ldrb	w0, [sp, #39]
  43a5ac:	mov	w1, w0
  43a5b0:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a5b4:	ldr	x0, [x0, #4024]
  43a5b8:	ldr	x2, [sp, #56]
  43a5bc:	ldr	x0, [x0]
  43a5c0:	eor	x0, x2, x0
  43a5c4:	cmp	x0, #0x0
  43a5c8:	b.eq	43a5d0 <flush_acl+0x154>  // b.none
  43a5cc:	bl	407b20 <__stack_chk_fail@plt>
  43a5d0:	mov	w0, w1
  43a5d4:	ldp	x29, x30, [sp], #64
  43a5d8:	ret

000000000043a5dc <devnode_acl>:
  43a5dc:	stp	x29, x30, [sp, #-96]!
  43a5e0:	mov	x29, sp
  43a5e4:	str	x0, [sp, #40]
  43a5e8:	strb	w1, [sp, #39]
  43a5ec:	strb	w2, [sp, #38]
  43a5f0:	str	w3, [sp, #32]
  43a5f4:	strb	w4, [sp, #37]
  43a5f8:	str	w5, [sp, #28]
  43a5fc:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a600:	ldr	x0, [x0, #4024]
  43a604:	ldr	x1, [x0]
  43a608:	str	x1, [sp, #88]
  43a60c:	mov	x1, #0x0                   	// #0
  43a610:	str	wzr, [sp, #52]
  43a614:	strb	wzr, [sp, #51]
  43a618:	ldr	x0, [sp, #40]
  43a61c:	cmp	x0, #0x0
  43a620:	cset	w0, eq  // eq = none
  43a624:	and	w0, w0, #0xff
  43a628:	and	x0, x0, #0xff
  43a62c:	cmp	x0, #0x0
  43a630:	b.eq	43a65c <devnode_acl+0x80>  // b.none
  43a634:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a638:	add	x1, x0, #0x5f3
  43a63c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a640:	add	x4, x0, #0x748
  43a644:	mov	w3, #0x3b                  	// #59
  43a648:	mov	x2, x1
  43a64c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43a650:	add	x1, x0, #0x618
  43a654:	mov	w0, #0x0                   	// #0
  43a658:	bl	407650 <log_assert_failed_realm@plt>
  43a65c:	mov	w1, #0x8000                	// #32768
  43a660:	ldr	x0, [sp, #40]
  43a664:	bl	407a60 <acl_get_file@plt>
  43a668:	str	x0, [sp, #64]
  43a66c:	ldr	x0, [sp, #64]
  43a670:	cmp	x0, #0x0
  43a674:	b.ne	43a688 <devnode_acl+0xac>  // b.any
  43a678:	bl	407960 <__errno_location@plt>
  43a67c:	ldr	w0, [x0]
  43a680:	neg	w0, w0
  43a684:	b	43a94c <devnode_acl+0x370>
  43a688:	ldrb	w0, [sp, #39]
  43a68c:	cmp	w0, #0x0
  43a690:	b.eq	43a6c4 <devnode_acl+0xe8>  // b.none
  43a694:	ldr	x0, [sp, #64]
  43a698:	bl	43a47c <flush_acl>
  43a69c:	str	w0, [sp, #52]
  43a6a0:	ldr	w0, [sp, #52]
  43a6a4:	cmp	w0, #0x0
  43a6a8:	b.lt	43a924 <devnode_acl+0x348>  // b.tstop
  43a6ac:	ldr	w0, [sp, #52]
  43a6b0:	cmp	w0, #0x0
  43a6b4:	b.le	43a73c <devnode_acl+0x160>
  43a6b8:	mov	w0, #0x1                   	// #1
  43a6bc:	strb	w0, [sp, #51]
  43a6c0:	b	43a73c <devnode_acl+0x160>
  43a6c4:	ldrb	w0, [sp, #38]
  43a6c8:	cmp	w0, #0x0
  43a6cc:	b.eq	43a73c <devnode_acl+0x160>  // b.none
  43a6d0:	ldr	w0, [sp, #32]
  43a6d4:	cmp	w0, #0x0
  43a6d8:	b.eq	43a73c <devnode_acl+0x160>  // b.none
  43a6dc:	ldr	x0, [sp, #64]
  43a6e0:	add	x1, sp, #0x50
  43a6e4:	mov	x2, x1
  43a6e8:	ldr	w1, [sp, #32]
  43a6ec:	bl	407580 <acl_find_uid@plt>
  43a6f0:	str	w0, [sp, #52]
  43a6f4:	ldr	w0, [sp, #52]
  43a6f8:	cmp	w0, #0x0
  43a6fc:	b.lt	43a92c <devnode_acl+0x350>  // b.tstop
  43a700:	ldr	w0, [sp, #52]
  43a704:	cmp	w0, #0x0
  43a708:	b.le	43a73c <devnode_acl+0x160>
  43a70c:	ldr	x0, [sp, #64]
  43a710:	ldr	x1, [sp, #80]
  43a714:	bl	4080f0 <acl_delete_entry@plt>
  43a718:	cmp	w0, #0x0
  43a71c:	b.ge	43a734 <devnode_acl+0x158>  // b.tcont
  43a720:	bl	407960 <__errno_location@plt>
  43a724:	ldr	w0, [x0]
  43a728:	neg	w0, w0
  43a72c:	str	w0, [sp, #52]
  43a730:	b	43a940 <devnode_acl+0x364>
  43a734:	mov	w0, #0x1                   	// #1
  43a738:	strb	w0, [sp, #51]
  43a73c:	ldrb	w0, [sp, #37]
  43a740:	cmp	w0, #0x0
  43a744:	b.eq	43a8b4 <devnode_acl+0x2d8>  // b.none
  43a748:	ldr	w0, [sp, #28]
  43a74c:	cmp	w0, #0x0
  43a750:	b.eq	43a8b4 <devnode_acl+0x2d8>  // b.none
  43a754:	ldr	x0, [sp, #64]
  43a758:	ldr	w1, [sp, #28]
  43a75c:	add	x2, sp, #0x48
  43a760:	bl	407580 <acl_find_uid@plt>
  43a764:	str	w0, [sp, #52]
  43a768:	ldr	w0, [sp, #52]
  43a76c:	cmp	w0, #0x0
  43a770:	b.lt	43a934 <devnode_acl+0x358>  // b.tstop
  43a774:	ldr	w0, [sp, #52]
  43a778:	cmp	w0, #0x0
  43a77c:	b.ne	43a7e4 <devnode_acl+0x208>  // b.any
  43a780:	add	x1, sp, #0x48
  43a784:	add	x0, sp, #0x40
  43a788:	bl	408400 <acl_create_entry@plt>
  43a78c:	cmp	w0, #0x0
  43a790:	b.ge	43a7a8 <devnode_acl+0x1cc>  // b.tcont
  43a794:	bl	407960 <__errno_location@plt>
  43a798:	ldr	w0, [x0]
  43a79c:	neg	w0, w0
  43a7a0:	str	w0, [sp, #52]
  43a7a4:	b	43a940 <devnode_acl+0x364>
  43a7a8:	ldr	x0, [sp, #72]
  43a7ac:	mov	w1, #0x2                   	// #2
  43a7b0:	bl	407db0 <acl_set_tag_type@plt>
  43a7b4:	cmp	w0, #0x0
  43a7b8:	b.lt	43a7d0 <devnode_acl+0x1f4>  // b.tstop
  43a7bc:	ldr	x0, [sp, #72]
  43a7c0:	add	x1, sp, #0x1c
  43a7c4:	bl	4076d0 <acl_set_qualifier@plt>
  43a7c8:	cmp	w0, #0x0
  43a7cc:	b.ge	43a7e4 <devnode_acl+0x208>  // b.tcont
  43a7d0:	bl	407960 <__errno_location@plt>
  43a7d4:	ldr	w0, [x0]
  43a7d8:	neg	w0, w0
  43a7dc:	str	w0, [sp, #52]
  43a7e0:	b	43a940 <devnode_acl+0x364>
  43a7e4:	ldr	x0, [sp, #72]
  43a7e8:	add	x1, sp, #0x50
  43a7ec:	bl	4073b0 <acl_get_permset@plt>
  43a7f0:	cmp	w0, #0x0
  43a7f4:	b.ge	43a80c <devnode_acl+0x230>  // b.tcont
  43a7f8:	bl	407960 <__errno_location@plt>
  43a7fc:	ldr	w0, [x0]
  43a800:	neg	w0, w0
  43a804:	str	w0, [sp, #52]
  43a808:	b	43a940 <devnode_acl+0x364>
  43a80c:	ldr	x0, [sp, #80]
  43a810:	mov	w1, #0x4                   	// #4
  43a814:	bl	4080c0 <acl_get_perm@plt>
  43a818:	str	w0, [sp, #56]
  43a81c:	ldr	w0, [sp, #56]
  43a820:	cmp	w0, #0x0
  43a824:	b.ge	43a83c <devnode_acl+0x260>  // b.tcont
  43a828:	bl	407960 <__errno_location@plt>
  43a82c:	ldr	w0, [x0]
  43a830:	neg	w0, w0
  43a834:	str	w0, [sp, #52]
  43a838:	b	43a940 <devnode_acl+0x364>
  43a83c:	ldr	x0, [sp, #80]
  43a840:	mov	w1, #0x2                   	// #2
  43a844:	bl	4080c0 <acl_get_perm@plt>
  43a848:	str	w0, [sp, #60]
  43a84c:	ldr	w0, [sp, #60]
  43a850:	cmp	w0, #0x0
  43a854:	b.ge	43a86c <devnode_acl+0x290>  // b.tcont
  43a858:	bl	407960 <__errno_location@plt>
  43a85c:	ldr	w0, [x0]
  43a860:	neg	w0, w0
  43a864:	str	w0, [sp, #52]
  43a868:	b	43a940 <devnode_acl+0x364>
  43a86c:	ldr	w0, [sp, #56]
  43a870:	cmp	w0, #0x0
  43a874:	b.eq	43a884 <devnode_acl+0x2a8>  // b.none
  43a878:	ldr	w0, [sp, #60]
  43a87c:	cmp	w0, #0x0
  43a880:	b.ne	43a8b4 <devnode_acl+0x2d8>  // b.any
  43a884:	ldr	x0, [sp, #80]
  43a888:	mov	w1, #0x6                   	// #6
  43a88c:	bl	4077c0 <acl_add_perm@plt>
  43a890:	cmp	w0, #0x0
  43a894:	b.ge	43a8ac <devnode_acl+0x2d0>  // b.tcont
  43a898:	bl	407960 <__errno_location@plt>
  43a89c:	ldr	w0, [x0]
  43a8a0:	neg	w0, w0
  43a8a4:	str	w0, [sp, #52]
  43a8a8:	b	43a940 <devnode_acl+0x364>
  43a8ac:	mov	w0, #0x1                   	// #1
  43a8b0:	strb	w0, [sp, #51]
  43a8b4:	ldrb	w0, [sp, #51]
  43a8b8:	eor	w0, w0, #0x1
  43a8bc:	and	w0, w0, #0xff
  43a8c0:	cmp	w0, #0x0
  43a8c4:	b.ne	43a93c <devnode_acl+0x360>  // b.any
  43a8c8:	add	x0, sp, #0x40
  43a8cc:	bl	407af0 <acl_calc_mask@plt>
  43a8d0:	cmp	w0, #0x0
  43a8d4:	b.ge	43a8ec <devnode_acl+0x310>  // b.tcont
  43a8d8:	bl	407960 <__errno_location@plt>
  43a8dc:	ldr	w0, [x0]
  43a8e0:	neg	w0, w0
  43a8e4:	str	w0, [sp, #52]
  43a8e8:	b	43a940 <devnode_acl+0x364>
  43a8ec:	ldr	x0, [sp, #64]
  43a8f0:	mov	x2, x0
  43a8f4:	mov	w1, #0x8000                	// #32768
  43a8f8:	ldr	x0, [sp, #40]
  43a8fc:	bl	407d50 <acl_set_file@plt>
  43a900:	cmp	w0, #0x0
  43a904:	b.ge	43a91c <devnode_acl+0x340>  // b.tcont
  43a908:	bl	407960 <__errno_location@plt>
  43a90c:	ldr	w0, [x0]
  43a910:	neg	w0, w0
  43a914:	str	w0, [sp, #52]
  43a918:	b	43a940 <devnode_acl+0x364>
  43a91c:	str	wzr, [sp, #52]
  43a920:	b	43a940 <devnode_acl+0x364>
  43a924:	nop
  43a928:	b	43a940 <devnode_acl+0x364>
  43a92c:	nop
  43a930:	b	43a940 <devnode_acl+0x364>
  43a934:	nop
  43a938:	b	43a940 <devnode_acl+0x364>
  43a93c:	nop
  43a940:	ldr	x0, [sp, #64]
  43a944:	bl	408180 <acl_free@plt>
  43a948:	ldr	w0, [sp, #52]
  43a94c:	mov	w1, w0
  43a950:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a954:	ldr	x0, [x0, #4024]
  43a958:	ldr	x2, [sp, #88]
  43a95c:	ldr	x0, [x0]
  43a960:	eor	x0, x2, x0
  43a964:	cmp	x0, #0x0
  43a968:	b.eq	43a970 <devnode_acl+0x394>  // b.none
  43a96c:	bl	407b20 <__stack_chk_fail@plt>
  43a970:	mov	w0, w1
  43a974:	ldp	x29, x30, [sp], #96
  43a978:	ret

000000000043a97c <devnode_acl_all>:
  43a97c:	sub	sp, sp, #0xf0
  43a980:	stp	x29, x30, [sp, #32]
  43a984:	add	x29, sp, #0x20
  43a988:	stp	x19, x20, [sp, #48]
  43a98c:	str	x0, [sp, #88]
  43a990:	strb	w1, [sp, #87]
  43a994:	strb	w2, [sp, #86]
  43a998:	str	w3, [sp, #80]
  43a99c:	strb	w4, [sp, #85]
  43a9a0:	str	w5, [sp, #76]
  43a9a4:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a9a8:	ldr	x0, [x0, #4024]
  43a9ac:	ldr	x1, [x0]
  43a9b0:	str	x1, [sp, #232]
  43a9b4:	mov	x1, #0x0                   	// #0
  43a9b8:	str	xzr, [sp, #152]
  43a9bc:	str	xzr, [sp, #160]
  43a9c0:	str	xzr, [sp, #168]
  43a9c4:	adrp	x0, 460000 <wordlist.10364+0x370>
  43a9c8:	ldr	x0, [x0, #4056]
  43a9cc:	bl	407a10 <internal_set_new@plt>
  43a9d0:	str	x0, [sp, #160]
  43a9d4:	ldr	x0, [sp, #160]
  43a9d8:	cmp	x0, #0x0
  43a9dc:	b.ne	43a9e8 <devnode_acl_all+0x6c>  // b.any
  43a9e0:	mov	w19, #0xfffffff4            	// #-12
  43a9e4:	b	43af8c <devnode_acl_all+0x610>
  43a9e8:	add	x0, sp, #0x98
  43a9ec:	bl	4072c0 <sd_device_enumerator_new@plt>
  43a9f0:	str	w0, [sp, #100]
  43a9f4:	ldr	w0, [sp, #100]
  43a9f8:	cmp	w0, #0x0
  43a9fc:	b.ge	43aa08 <devnode_acl_all+0x8c>  // b.tcont
  43aa00:	ldr	w19, [sp, #100]
  43aa04:	b	43af8c <devnode_acl_all+0x610>
  43aa08:	ldr	x0, [sp, #88]
  43aa0c:	bl	43a3ac <isempty>
  43aa10:	and	w0, w0, #0xff
  43aa14:	cmp	w0, #0x0
  43aa18:	b.eq	43aa28 <devnode_acl_all+0xac>  // b.none
  43aa1c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43aa20:	add	x0, x0, #0x620
  43aa24:	str	x0, [sp, #88]
  43aa28:	ldr	x2, [sp, #152]
  43aa2c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43aa30:	add	x1, x0, #0x628
  43aa34:	mov	x0, x2
  43aa38:	bl	408240 <sd_device_enumerator_add_match_tag@plt>
  43aa3c:	str	w0, [sp, #100]
  43aa40:	ldr	w0, [sp, #100]
  43aa44:	cmp	w0, #0x0
  43aa48:	b.ge	43aa54 <devnode_acl_all+0xd8>  // b.tcont
  43aa4c:	ldr	w19, [sp, #100]
  43aa50:	b	43af8c <devnode_acl_all+0x610>
  43aa54:	ldr	x0, [sp, #152]
  43aa58:	bl	407470 <sd_device_enumerator_get_device_first@plt>
  43aa5c:	str	x0, [sp, #200]
  43aa60:	b	43abdc <devnode_acl_all+0x260>
  43aa64:	add	x0, sp, #0xb8
  43aa68:	mov	x2, x0
  43aa6c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43aa70:	add	x1, x0, #0x630
  43aa74:	ldr	x0, [sp, #200]
  43aa78:	bl	406fd0 <sd_device_get_property_value@plt>
  43aa7c:	cmp	w0, #0x0
  43aa80:	b.lt	43aa98 <devnode_acl_all+0x11c>  // b.tstop
  43aa84:	ldr	x0, [sp, #184]
  43aa88:	bl	43a3ac <isempty>
  43aa8c:	and	w0, w0, #0xff
  43aa90:	cmp	w0, #0x0
  43aa94:	b.eq	43aaa4 <devnode_acl_all+0x128>  // b.none
  43aa98:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43aa9c:	add	x0, x0, #0x620
  43aaa0:	str	x0, [sp, #184]
  43aaa4:	ldr	x0, [sp, #184]
  43aaa8:	mov	x1, x0
  43aaac:	ldr	x0, [sp, #88]
  43aab0:	bl	407f30 <strcmp@plt>
  43aab4:	cmp	w0, #0x0
  43aab8:	b.ne	43abc4 <devnode_acl_all+0x248>  // b.any
  43aabc:	add	x0, sp, #0xb0
  43aac0:	mov	x1, x0
  43aac4:	ldr	x0, [sp, #200]
  43aac8:	bl	407340 <sd_device_get_devname@plt>
  43aacc:	cmp	w0, #0x0
  43aad0:	b.lt	43abcc <devnode_acl_all+0x250>  // b.tstop
  43aad4:	str	xzr, [sp, #216]
  43aad8:	ldr	x0, [sp, #200]
  43aadc:	str	x0, [sp, #208]
  43aae0:	mov	w0, #0x7                   	// #7
  43aae4:	str	w0, [sp, #144]
  43aae8:	str	wzr, [sp, #148]
  43aaec:	ldr	x0, [sp, #208]
  43aaf0:	cmp	x0, #0x0
  43aaf4:	b.eq	43ab30 <devnode_acl_all+0x1b4>  // b.none
  43aaf8:	mov	w0, #0x0                   	// #0
  43aafc:	bl	4083e0 <log_get_max_level_realm@plt>
  43ab00:	mov	w1, w0
  43ab04:	ldr	w0, [sp, #144]
  43ab08:	cmp	w0, w1
  43ab0c:	cset	w0, le
  43ab10:	and	w0, w0, #0xff
  43ab14:	and	x0, x0, #0xff
  43ab18:	cmp	x0, #0x0
  43ab1c:	b.eq	43ab30 <devnode_acl_all+0x1b4>  // b.none
  43ab20:	add	x0, sp, #0xd8
  43ab24:	mov	x1, x0
  43ab28:	ldr	x0, [sp, #208]
  43ab2c:	bl	407630 <sd_device_get_sysname@plt>
  43ab30:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ab34:	add	x8, x0, #0x5f3
  43ab38:	ldr	x0, [sp, #216]
  43ab3c:	cmp	x0, #0x0
  43ab40:	b.eq	43ab50 <devnode_acl_all+0x1d4>  // b.none
  43ab44:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ab48:	add	x0, x0, #0x638
  43ab4c:	b	43ab54 <devnode_acl_all+0x1d8>
  43ab50:	mov	x0, #0x0                   	// #0
  43ab54:	ldr	x3, [sp, #216]
  43ab58:	ldr	x1, [sp, #176]
  43ab5c:	ldr	x2, [sp, #88]
  43ab60:	str	x2, [sp, #24]
  43ab64:	str	x1, [sp, #16]
  43ab68:	adrp	x1, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ab6c:	add	x1, x1, #0x640
  43ab70:	str	x1, [sp, #8]
  43ab74:	str	xzr, [sp]
  43ab78:	mov	x7, #0x0                   	// #0
  43ab7c:	mov	x6, x3
  43ab80:	mov	x5, x0
  43ab84:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ab88:	add	x4, x0, #0x758
  43ab8c:	mov	w3, #0xd0                  	// #208
  43ab90:	mov	x2, x8
  43ab94:	ldr	w1, [sp, #148]
  43ab98:	ldr	w0, [sp, #144]
  43ab9c:	bl	407940 <log_object_internal@plt>
  43aba0:	ldr	x0, [sp, #160]
  43aba4:	ldr	x1, [sp, #176]
  43aba8:	bl	407c30 <set_put_strdup@plt>
  43abac:	str	w0, [sp, #100]
  43abb0:	ldr	w0, [sp, #100]
  43abb4:	cmp	w0, #0x0
  43abb8:	b.ge	43abd0 <devnode_acl_all+0x254>  // b.tcont
  43abbc:	ldr	w19, [sp, #100]
  43abc0:	b	43af8c <devnode_acl_all+0x610>
  43abc4:	nop
  43abc8:	b	43abd0 <devnode_acl_all+0x254>
  43abcc:	nop
  43abd0:	ldr	x0, [sp, #152]
  43abd4:	bl	407c50 <sd_device_enumerator_get_device_next@plt>
  43abd8:	str	x0, [sp, #200]
  43abdc:	ldr	x0, [sp, #200]
  43abe0:	cmp	x0, #0x0
  43abe4:	b.ne	43aa64 <devnode_acl_all+0xe8>  // b.any
  43abe8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43abec:	add	x0, x0, #0x660
  43abf0:	bl	407f50 <opendir@plt>
  43abf4:	str	x0, [sp, #168]
  43abf8:	ldr	x0, [sp, #168]
  43abfc:	cmp	x0, #0x0
  43ac00:	b.eq	43adb8 <devnode_acl_all+0x43c>  // b.none
  43ac04:	bl	407960 <__errno_location@plt>
  43ac08:	str	wzr, [x0]
  43ac0c:	ldr	x0, [sp, #168]
  43ac10:	bl	407670 <readdir64@plt>
  43ac14:	str	x0, [sp, #192]
  43ac18:	ldr	x0, [sp, #192]
  43ac1c:	cmp	x0, #0x0
  43ac20:	b.ne	43ac44 <devnode_acl_all+0x2c8>  // b.any
  43ac24:	bl	407960 <__errno_location@plt>
  43ac28:	ldr	w0, [x0]
  43ac2c:	cmp	w0, #0x0
  43ac30:	b.le	43adb4 <devnode_acl_all+0x438>
  43ac34:	bl	407960 <__errno_location@plt>
  43ac38:	ldr	w0, [x0]
  43ac3c:	neg	w19, w0
  43ac40:	b	43af8c <devnode_acl_all+0x610>
  43ac44:	ldr	x0, [sp, #192]
  43ac48:	add	x0, x0, #0x13
  43ac4c:	bl	407410 <hidden_or_backup_file@plt>
  43ac50:	and	w0, w0, #0xff
  43ac54:	cmp	w0, #0x0
  43ac58:	b.ne	43ad98 <devnode_acl_all+0x41c>  // b.any
  43ac5c:	str	xzr, [sp, #216]
  43ac60:	ldr	x0, [sp, #192]
  43ac64:	add	x0, x0, #0x13
  43ac68:	add	x1, sp, #0xd8
  43ac6c:	mov	x2, x1
  43ac70:	mov	w1, #0x1                   	// #1
  43ac74:	bl	4076b0 <cunescape@plt>
  43ac78:	cmp	w0, #0x0
  43ac7c:	b.ge	43ac8c <devnode_acl_all+0x310>  // b.tcont
  43ac80:	mov	w19, #0xfffffff4            	// #-12
  43ac84:	mov	w20, #0x0                   	// #0
  43ac88:	b	43ad80 <devnode_acl_all+0x404>
  43ac8c:	ldr	x0, [sp, #216]
  43ac90:	mov	x2, #0xffffffffffffffff    	// #-1
  43ac94:	mov	x1, x0
  43ac98:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ac9c:	add	x0, x0, #0x688
  43aca0:	bl	407bb0 <path_join_internal@plt>
  43aca4:	str	x0, [sp, #184]
  43aca8:	ldr	x0, [sp, #184]
  43acac:	cmp	x0, #0x0
  43acb0:	b.ne	43acc0 <devnode_acl_all+0x344>  // b.any
  43acb4:	mov	w19, #0xfffffff4            	// #-12
  43acb8:	mov	w20, #0x0                   	// #0
  43acbc:	b	43ad80 <devnode_acl_all+0x404>
  43acc0:	mov	w0, #0x7                   	// #7
  43acc4:	str	w0, [sp, #104]
  43acc8:	str	wzr, [sp, #108]
  43accc:	str	wzr, [sp, #112]
  43acd0:	ldr	w0, [sp, #112]
  43acd4:	bl	4083e0 <log_get_max_level_realm@plt>
  43acd8:	mov	w1, w0
  43acdc:	ldr	w0, [sp, #104]
  43ace0:	and	w0, w0, #0x7
  43ace4:	cmp	w1, w0
  43ace8:	b.lt	43ad38 <devnode_acl_all+0x3bc>  // b.tstop
  43acec:	ldr	w0, [sp, #112]
  43acf0:	lsl	w1, w0, #10
  43acf4:	ldr	w0, [sp, #104]
  43acf8:	orr	w8, w1, w0
  43acfc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ad00:	add	x1, x0, #0x5f3
  43ad04:	ldr	x0, [sp, #184]
  43ad08:	ldr	x7, [sp, #88]
  43ad0c:	mov	x6, x0
  43ad10:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ad14:	add	x5, x0, #0x690
  43ad18:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ad1c:	add	x4, x0, #0x758
  43ad20:	mov	w3, #0xe4                  	// #228
  43ad24:	mov	x2, x1
  43ad28:	ldr	w1, [sp, #108]
  43ad2c:	mov	w0, w8
  43ad30:	bl	407d60 <log_internal_realm@plt>
  43ad34:	b	43ad40 <devnode_acl_all+0x3c4>
  43ad38:	ldr	w0, [sp, #108]
  43ad3c:	cmp	w0, #0x0
  43ad40:	ldr	x0, [sp, #160]
  43ad44:	ldr	x1, [sp, #184]
  43ad48:	bl	407390 <set_consume@plt>
  43ad4c:	str	w0, [sp, #100]
  43ad50:	ldr	w0, [sp, #100]
  43ad54:	cmn	w0, #0x11
  43ad58:	b.ne	43ad64 <devnode_acl_all+0x3e8>  // b.any
  43ad5c:	mov	w20, #0x1                   	// #1
  43ad60:	b	43ad80 <devnode_acl_all+0x404>
  43ad64:	ldr	w0, [sp, #100]
  43ad68:	cmp	w0, #0x0
  43ad6c:	b.ge	43ad7c <devnode_acl_all+0x400>  // b.tcont
  43ad70:	ldr	w19, [sp, #100]
  43ad74:	mov	w20, #0x0                   	// #0
  43ad78:	b	43ad80 <devnode_acl_all+0x404>
  43ad7c:	mov	w20, #0x2                   	// #2
  43ad80:	add	x0, sp, #0xd8
  43ad84:	bl	43a388 <freep>
  43ad88:	cmp	w20, #0x0
  43ad8c:	b.eq	43af8c <devnode_acl_all+0x610>  // b.none
  43ad90:	cmp	w20, #0x2
  43ad94:	b	43ad9c <devnode_acl_all+0x420>
  43ad98:	nop
  43ad9c:	bl	407960 <__errno_location@plt>
  43ada0:	str	wzr, [x0]
  43ada4:	ldr	x0, [sp, #168]
  43ada8:	bl	407670 <readdir64@plt>
  43adac:	str	x0, [sp, #192]
  43adb0:	b	43ac18 <devnode_acl_all+0x29c>
  43adb4:	nop
  43adb8:	str	wzr, [sp, #100]
  43adbc:	mov	w0, #0xfffffffe            	// #-2
  43adc0:	str	w0, [sp, #216]
  43adc4:	str	xzr, [sp, #224]
  43adc8:	b	43af6c <devnode_acl_all+0x5f0>
  43adcc:	mov	w0, #0x7                   	// #7
  43add0:	str	w0, [sp, #116]
  43add4:	str	wzr, [sp, #120]
  43add8:	str	wzr, [sp, #124]
  43addc:	ldr	w0, [sp, #124]
  43ade0:	bl	4083e0 <log_get_max_level_realm@plt>
  43ade4:	mov	w1, w0
  43ade8:	ldr	w0, [sp, #116]
  43adec:	and	w0, w0, #0x7
  43adf0:	cmp	w1, w0
  43adf4:	b.lt	43ae98 <devnode_acl_all+0x51c>  // b.tstop
  43adf8:	ldr	w0, [sp, #124]
  43adfc:	lsl	w1, w0, #10
  43ae00:	ldr	w0, [sp, #116]
  43ae04:	orr	w8, w1, w0
  43ae08:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae0c:	add	x2, x0, #0x5f3
  43ae10:	ldr	x3, [sp, #184]
  43ae14:	ldrb	w0, [sp, #86]
  43ae18:	cmp	w0, #0x0
  43ae1c:	b.eq	43ae2c <devnode_acl_all+0x4b0>  // b.none
  43ae20:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae24:	add	x0, x0, #0x6b8
  43ae28:	b	43ae34 <devnode_acl_all+0x4b8>
  43ae2c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae30:	add	x0, x0, #0x6c0
  43ae34:	ldrb	w1, [sp, #85]
  43ae38:	cmp	w1, #0x0
  43ae3c:	b.eq	43ae4c <devnode_acl_all+0x4d0>  // b.none
  43ae40:	adrp	x1, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae44:	add	x1, x1, #0x6c8
  43ae48:	b	43ae54 <devnode_acl_all+0x4d8>
  43ae4c:	adrp	x1, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae50:	add	x1, x1, #0x6c0
  43ae54:	str	x1, [sp, #24]
  43ae58:	str	x0, [sp, #16]
  43ae5c:	ldr	w0, [sp, #76]
  43ae60:	str	w0, [sp, #8]
  43ae64:	ldr	w0, [sp, #80]
  43ae68:	str	w0, [sp]
  43ae6c:	ldr	x7, [sp, #88]
  43ae70:	mov	x6, x3
  43ae74:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae78:	add	x5, x0, #0x6d0
  43ae7c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ae80:	add	x4, x0, #0x758
  43ae84:	mov	w3, #0xf1                  	// #241
  43ae88:	ldr	w1, [sp, #120]
  43ae8c:	mov	w0, w8
  43ae90:	bl	407d60 <log_internal_realm@plt>
  43ae94:	b	43aea0 <devnode_acl_all+0x524>
  43ae98:	ldr	w0, [sp, #120]
  43ae9c:	cmp	w0, #0x0
  43aea0:	ldr	x0, [sp, #184]
  43aea4:	ldr	w5, [sp, #76]
  43aea8:	ldrb	w4, [sp, #85]
  43aeac:	ldr	w3, [sp, #80]
  43aeb0:	ldrb	w2, [sp, #86]
  43aeb4:	ldrb	w1, [sp, #87]
  43aeb8:	bl	43a5dc <devnode_acl>
  43aebc:	str	w0, [sp, #128]
  43aec0:	ldr	w0, [sp, #128]
  43aec4:	cmn	w0, #0x2
  43aec8:	b.ne	43af4c <devnode_acl_all+0x5d0>  // b.any
  43aecc:	mov	w0, #0x7                   	// #7
  43aed0:	str	w0, [sp, #132]
  43aed4:	str	wzr, [sp, #136]
  43aed8:	str	wzr, [sp, #140]
  43aedc:	ldr	w0, [sp, #140]
  43aee0:	bl	4083e0 <log_get_max_level_realm@plt>
  43aee4:	mov	w1, w0
  43aee8:	ldr	w0, [sp, #132]
  43aeec:	and	w0, w0, #0x7
  43aef0:	cmp	w1, w0
  43aef4:	b.lt	43af40 <devnode_acl_all+0x5c4>  // b.tstop
  43aef8:	ldr	w0, [sp, #140]
  43aefc:	lsl	w1, w0, #10
  43af00:	ldr	w0, [sp, #132]
  43af04:	orr	w7, w1, w0
  43af08:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43af0c:	add	x1, x0, #0x5f3
  43af10:	ldr	x0, [sp, #184]
  43af14:	mov	x6, x0
  43af18:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43af1c:	add	x5, x0, #0x708
  43af20:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43af24:	add	x4, x0, #0x758
  43af28:	mov	w3, #0xf7                  	// #247
  43af2c:	mov	x2, x1
  43af30:	ldr	w1, [sp, #136]
  43af34:	mov	w0, w7
  43af38:	bl	407d60 <log_internal_realm@plt>
  43af3c:	b	43af6c <devnode_acl_all+0x5f0>
  43af40:	ldr	w0, [sp, #136]
  43af44:	cmp	w0, #0x0
  43af48:	b	43af6c <devnode_acl_all+0x5f0>
  43af4c:	ldr	w0, [sp, #128]
  43af50:	cmp	w0, #0x0
  43af54:	b.ge	43af6c <devnode_acl_all+0x5f0>  // b.tcont
  43af58:	ldr	w0, [sp, #100]
  43af5c:	cmp	w0, #0x0
  43af60:	b.ne	43af6c <devnode_acl_all+0x5f0>  // b.any
  43af64:	ldr	w0, [sp, #128]
  43af68:	str	w0, [sp, #100]
  43af6c:	ldr	x0, [sp, #160]
  43af70:	add	x2, sp, #0xb8
  43af74:	add	x1, sp, #0xd8
  43af78:	bl	407800 <set_iterate@plt>
  43af7c:	and	w0, w0, #0xff
  43af80:	cmp	w0, #0x0
  43af84:	b.ne	43adcc <devnode_acl_all+0x450>  // b.any
  43af88:	ldr	w19, [sp, #100]
  43af8c:	add	x0, sp, #0xa8
  43af90:	bl	43a3ec <closedirp>
  43af94:	add	x0, sp, #0xa0
  43af98:	bl	43a448 <set_free_freep>
  43af9c:	add	x0, sp, #0x98
  43afa0:	bl	43a354 <sd_device_enumerator_unrefp>
  43afa4:	mov	w1, w19
  43afa8:	adrp	x0, 460000 <wordlist.10364+0x370>
  43afac:	ldr	x0, [x0, #4024]
  43afb0:	ldr	x2, [sp, #232]
  43afb4:	ldr	x0, [x0]
  43afb8:	eor	x0, x2, x0
  43afbc:	cmp	x0, #0x0
  43afc0:	b.eq	43afc8 <devnode_acl_all+0x64c>  // b.none
  43afc4:	bl	407b20 <__stack_chk_fail@plt>
  43afc8:	mov	w0, w1
  43afcc:	ldp	x19, x20, [sp, #48]
  43afd0:	ldp	x29, x30, [sp, #32]
  43afd4:	add	sp, sp, #0xf0
  43afd8:	ret

000000000043afdc <logind_gperf_hash>:
  43afdc:	mov	x2, x1
  43afe0:	add	x0, x0, #0x9
  43afe4:	ldrb	w0, [x0]
  43afe8:	mov	w3, w0
  43afec:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43aff0:	add	x1, x0, #0xa00
  43aff4:	sxtw	x0, w3
  43aff8:	ldrb	w0, [x1, x0]
  43affc:	mov	w1, w0
  43b000:	mov	w0, w2
  43b004:	add	w0, w1, w0
  43b008:	ret

000000000043b00c <logind_gperf_lookup>:
  43b00c:	stp	x29, x30, [sp, #-48]!
  43b010:	mov	x29, sp
  43b014:	stp	x19, x20, [sp, #16]
  43b018:	str	x21, [sp, #32]
  43b01c:	mov	x20, x0
  43b020:	mov	x0, x1
  43b024:	cmp	x0, #0x22
  43b028:	b.hi	43b0a8 <logind_gperf_lookup+0x9c>  // b.pmore
  43b02c:	cmp	x0, #0xd
  43b030:	b.ls	43b0a8 <logind_gperf_lookup+0x9c>  // b.plast
  43b034:	mov	x1, x0
  43b038:	mov	x0, x20
  43b03c:	bl	43afdc <logind_gperf_hash>
  43b040:	mov	w21, w0
  43b044:	cmp	w21, #0x31
  43b048:	b.hi	43b0a8 <logind_gperf_lookup+0x9c>  // b.pmore
  43b04c:	adrp	x0, 45f000 <session_vtable+0x138>
  43b050:	add	x1, x0, #0xc90
  43b054:	mov	w0, w21
  43b058:	lsl	x0, x0, #5
  43b05c:	add	x0, x1, x0
  43b060:	ldr	x19, [x0]
  43b064:	cmp	x19, #0x0
  43b068:	b.eq	43b0a8 <logind_gperf_lookup+0x9c>  // b.none
  43b06c:	ldrb	w1, [x20]
  43b070:	ldrb	w0, [x19]
  43b074:	cmp	w1, w0
  43b078:	b.ne	43b0a8 <logind_gperf_lookup+0x9c>  // b.any
  43b07c:	add	x0, x20, #0x1
  43b080:	add	x1, x19, #0x1
  43b084:	bl	407f30 <strcmp@plt>
  43b088:	cmp	w0, #0x0
  43b08c:	b.ne	43b0a8 <logind_gperf_lookup+0x9c>  // b.any
  43b090:	mov	w0, w21
  43b094:	lsl	x1, x0, #5
  43b098:	adrp	x0, 45f000 <session_vtable+0x138>
  43b09c:	add	x0, x0, #0xc90
  43b0a0:	add	x0, x1, x0
  43b0a4:	b	43b0ac <logind_gperf_lookup+0xa0>
  43b0a8:	mov	x0, #0x0                   	// #0
  43b0ac:	ldp	x19, x20, [sp, #16]
  43b0b0:	ldr	x21, [sp, #32]
  43b0b4:	ldp	x29, x30, [sp], #48
  43b0b8:	ret

000000000043b0bc <sd_bus_message_unrefp>:
  43b0bc:	stp	x29, x30, [sp, #-32]!
  43b0c0:	mov	x29, sp
  43b0c4:	str	x0, [sp, #24]
  43b0c8:	ldr	x0, [sp, #24]
  43b0cc:	ldr	x0, [x0]
  43b0d0:	cmp	x0, #0x0
  43b0d4:	b.eq	43b0e4 <sd_bus_message_unrefp+0x28>  // b.none
  43b0d8:	ldr	x0, [sp, #24]
  43b0dc:	ldr	x0, [x0]
  43b0e0:	bl	407240 <sd_bus_message_unref@plt>
  43b0e4:	nop
  43b0e8:	ldp	x29, x30, [sp], #32
  43b0ec:	ret

000000000043b0f0 <size_multiply_overflow>:
  43b0f0:	sub	sp, sp, #0x10
  43b0f4:	str	x0, [sp, #8]
  43b0f8:	str	x1, [sp]
  43b0fc:	ldr	x0, [sp]
  43b100:	cmp	x0, #0x0
  43b104:	cset	w0, ne  // ne = any
  43b108:	and	w0, w0, #0xff
  43b10c:	and	x0, x0, #0xff
  43b110:	cmp	x0, #0x0
  43b114:	b.eq	43b158 <size_multiply_overflow+0x68>  // b.none
  43b118:	mov	x2, #0x0                   	// #0
  43b11c:	ldr	x1, [sp, #8]
  43b120:	ldr	x0, [sp]
  43b124:	umulh	x0, x1, x0
  43b128:	cmp	x0, #0x0
  43b12c:	b.eq	43b134 <size_multiply_overflow+0x44>  // b.none
  43b130:	mov	x2, #0x1                   	// #1
  43b134:	mov	x0, x2
  43b138:	cmp	x0, #0x0
  43b13c:	cset	w0, ne  // ne = any
  43b140:	and	w0, w0, #0xff
  43b144:	and	x0, x0, #0xff
  43b148:	cmp	x0, #0x0
  43b14c:	b.eq	43b158 <size_multiply_overflow+0x68>  // b.none
  43b150:	mov	w0, #0x1                   	// #1
  43b154:	b	43b15c <size_multiply_overflow+0x6c>
  43b158:	mov	w0, #0x0                   	// #0
  43b15c:	and	w0, w0, #0x1
  43b160:	and	w0, w0, #0xff
  43b164:	add	sp, sp, #0x10
  43b168:	ret

000000000043b16c <malloc_multiply>:
  43b16c:	stp	x29, x30, [sp, #-32]!
  43b170:	mov	x29, sp
  43b174:	str	x0, [sp, #24]
  43b178:	str	x1, [sp, #16]
  43b17c:	ldr	x1, [sp, #16]
  43b180:	ldr	x0, [sp, #24]
  43b184:	bl	43b0f0 <size_multiply_overflow>
  43b188:	and	w0, w0, #0xff
  43b18c:	cmp	w0, #0x0
  43b190:	b.eq	43b19c <malloc_multiply+0x30>  // b.none
  43b194:	mov	x0, #0x0                   	// #0
  43b198:	b	43b1b8 <malloc_multiply+0x4c>
  43b19c:	ldr	x1, [sp, #24]
  43b1a0:	ldr	x0, [sp, #16]
  43b1a4:	mul	x0, x1, x0
  43b1a8:	cmp	x0, #0x0
  43b1ac:	b.ne	43b1b4 <malloc_multiply+0x48>  // b.any
  43b1b0:	mov	x0, #0x1                   	// #1
  43b1b4:	bl	407ce0 <malloc@plt>
  43b1b8:	ldp	x29, x30, [sp], #32
  43b1bc:	ret

000000000043b1c0 <hashmap_get>:
  43b1c0:	stp	x29, x30, [sp, #-32]!
  43b1c4:	mov	x29, sp
  43b1c8:	str	x0, [sp, #24]
  43b1cc:	str	x1, [sp, #16]
  43b1d0:	ldr	x1, [sp, #16]
  43b1d4:	ldr	x0, [sp, #24]
  43b1d8:	bl	407860 <internal_hashmap_get@plt>
  43b1dc:	ldp	x29, x30, [sp], #32
  43b1e0:	ret

000000000043b1e4 <hashmap_remove_value>:
  43b1e4:	stp	x29, x30, [sp, #-48]!
  43b1e8:	mov	x29, sp
  43b1ec:	str	x0, [sp, #40]
  43b1f0:	str	x1, [sp, #32]
  43b1f4:	str	x2, [sp, #24]
  43b1f8:	ldr	x2, [sp, #24]
  43b1fc:	ldr	x1, [sp, #32]
  43b200:	ldr	x0, [sp, #40]
  43b204:	bl	407c40 <internal_hashmap_remove_value@plt>
  43b208:	ldp	x29, x30, [sp], #48
  43b20c:	ret

000000000043b210 <set_free>:
  43b210:	stp	x29, x30, [sp, #-32]!
  43b214:	mov	x29, sp
  43b218:	str	x0, [sp, #24]
  43b21c:	mov	x2, #0x0                   	// #0
  43b220:	mov	x1, #0x0                   	// #0
  43b224:	ldr	x0, [sp, #24]
  43b228:	bl	4070d0 <internal_hashmap_free@plt>
  43b22c:	ldp	x29, x30, [sp], #32
  43b230:	ret

000000000043b234 <set_steal_first>:
  43b234:	stp	x29, x30, [sp, #-32]!
  43b238:	mov	x29, sp
  43b23c:	str	x0, [sp, #24]
  43b240:	mov	x2, #0x0                   	// #0
  43b244:	mov	w1, #0x1                   	// #1
  43b248:	ldr	x0, [sp, #24]
  43b24c:	bl	407fc0 <internal_hashmap_first_key_and_value@plt>
  43b250:	ldp	x29, x30, [sp], #32
  43b254:	ret

000000000043b258 <safe_fork>:
  43b258:	stp	x29, x30, [sp, #-48]!
  43b25c:	mov	x29, sp
  43b260:	str	x0, [sp, #40]
  43b264:	str	w1, [sp, #36]
  43b268:	str	x2, [sp, #24]
  43b26c:	ldr	x4, [sp, #24]
  43b270:	ldr	w3, [sp, #36]
  43b274:	mov	x2, #0x0                   	// #0
  43b278:	mov	x1, #0x0                   	// #0
  43b27c:	ldr	x0, [sp, #40]
  43b280:	bl	407fe0 <safe_fork_full@plt>
  43b284:	ldp	x29, x30, [sp], #48
  43b288:	ret

000000000043b28c <brightness_writer_free>:
  43b28c:	stp	x29, x30, [sp, #-32]!
  43b290:	mov	x29, sp
  43b294:	str	x0, [sp, #24]
  43b298:	ldr	x0, [sp, #24]
  43b29c:	cmp	x0, #0x0
  43b2a0:	b.eq	43b33c <brightness_writer_free+0xb0>  // b.none
  43b2a4:	ldr	x0, [sp, #24]
  43b2a8:	ldr	x0, [x0]
  43b2ac:	cmp	x0, #0x0
  43b2b0:	b.eq	43b2e8 <brightness_writer_free+0x5c>  // b.none
  43b2b4:	ldr	x0, [sp, #24]
  43b2b8:	ldr	x0, [x0, #16]
  43b2bc:	cmp	x0, #0x0
  43b2c0:	b.eq	43b2e8 <brightness_writer_free+0x5c>  // b.none
  43b2c4:	ldr	x0, [sp, #24]
  43b2c8:	ldr	x0, [x0]
  43b2cc:	ldr	x3, [x0, #72]
  43b2d0:	ldr	x0, [sp, #24]
  43b2d4:	ldr	x0, [x0, #16]
  43b2d8:	ldr	x2, [sp, #24]
  43b2dc:	mov	x1, x0
  43b2e0:	mov	x0, x3
  43b2e4:	bl	43b1e4 <hashmap_remove_value>
  43b2e8:	ldr	x0, [sp, #24]
  43b2ec:	ldr	x0, [x0, #8]
  43b2f0:	bl	4081a0 <sd_device_unref@plt>
  43b2f4:	ldr	x0, [sp, #24]
  43b2f8:	ldr	x0, [x0, #16]
  43b2fc:	bl	408150 <free@plt>
  43b300:	ldr	x0, [sp, #24]
  43b304:	ldr	x0, [x0, #40]
  43b308:	bl	43b210 <set_free>
  43b30c:	ldr	x0, [sp, #24]
  43b310:	ldr	x0, [x0, #48]
  43b314:	bl	43b210 <set_free>
  43b318:	ldr	x0, [sp, #24]
  43b31c:	ldr	x0, [x0, #56]
  43b320:	bl	407550 <sd_event_source_unref@plt>
  43b324:	mov	x1, x0
  43b328:	ldr	x0, [sp, #24]
  43b32c:	str	x1, [x0, #56]
  43b330:	ldr	x0, [sp, #24]
  43b334:	bl	408150 <free@plt>
  43b338:	b	43b340 <brightness_writer_free+0xb4>
  43b33c:	nop
  43b340:	ldp	x29, x30, [sp], #32
  43b344:	ret

000000000043b348 <brightness_writer_freep>:
  43b348:	stp	x29, x30, [sp, #-32]!
  43b34c:	mov	x29, sp
  43b350:	str	x0, [sp, #24]
  43b354:	ldr	x0, [sp, #24]
  43b358:	ldr	x0, [x0]
  43b35c:	cmp	x0, #0x0
  43b360:	b.eq	43b370 <brightness_writer_freep+0x28>  // b.none
  43b364:	ldr	x0, [sp, #24]
  43b368:	ldr	x0, [x0]
  43b36c:	bl	43b28c <brightness_writer_free>
  43b370:	nop
  43b374:	ldp	x29, x30, [sp], #32
  43b378:	ret

000000000043b37c <__unique_prefix_static_free_wrapper4>:
  43b37c:	stp	x29, x30, [sp, #-48]!
  43b380:	mov	x29, sp
  43b384:	str	x0, [sp, #24]
  43b388:	ldr	x0, [sp, #24]
  43b38c:	str	x0, [sp, #40]
  43b390:	ldr	x0, [sp, #40]
  43b394:	bl	43b28c <brightness_writer_free>
  43b398:	nop
  43b39c:	ldp	x29, x30, [sp], #48
  43b3a0:	ret

000000000043b3a4 <brightness_writer_reply>:
  43b3a4:	stp	x29, x30, [sp, #-80]!
  43b3a8:	mov	x29, sp
  43b3ac:	str	x19, [sp, #16]
  43b3b0:	str	x0, [sp, #40]
  43b3b4:	str	w1, [sp, #36]
  43b3b8:	adrp	x0, 460000 <wordlist.10364+0x370>
  43b3bc:	ldr	x0, [x0, #4024]
  43b3c0:	ldr	x1, [x0]
  43b3c4:	str	x1, [sp, #72]
  43b3c8:	mov	x1, #0x0                   	// #0
  43b3cc:	ldr	x0, [sp, #40]
  43b3d0:	cmp	x0, #0x0
  43b3d4:	cset	w0, eq  // eq = none
  43b3d8:	and	w0, w0, #0xff
  43b3dc:	and	x0, x0, #0xff
  43b3e0:	cmp	x0, #0x0
  43b3e4:	b.eq	43b410 <brightness_writer_reply+0x6c>  // b.none
  43b3e8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b3ec:	add	x1, x0, #0xb03
  43b3f0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b3f4:	add	x4, x0, #0xd50
  43b3f8:	mov	w3, #0x4e                  	// #78
  43b3fc:	mov	x2, x1
  43b400:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b404:	add	x1, x0, #0xb28
  43b408:	mov	w0, #0x0                   	// #0
  43b40c:	bl	407650 <log_assert_failed_realm@plt>
  43b410:	str	xzr, [sp, #64]
  43b414:	ldr	x0, [sp, #40]
  43b418:	ldr	x0, [x0, #40]
  43b41c:	bl	43b234 <set_steal_first>
  43b420:	str	x0, [sp, #64]
  43b424:	ldr	x0, [sp, #64]
  43b428:	cmp	x0, #0x0
  43b42c:	b.ne	43b438 <brightness_writer_reply+0x94>  // b.any
  43b430:	mov	w19, #0x0                   	// #0
  43b434:	b	43b4fc <brightness_writer_reply+0x158>
  43b438:	ldr	w0, [sp, #36]
  43b43c:	cmp	w0, #0x0
  43b440:	b.ne	43b458 <brightness_writer_reply+0xb4>  // b.any
  43b444:	ldr	x0, [sp, #64]
  43b448:	mov	x1, #0x0                   	// #0
  43b44c:	bl	4070e0 <sd_bus_reply_method_return@plt>
  43b450:	str	w0, [sp, #48]
  43b454:	b	43b474 <brightness_writer_reply+0xd0>
  43b458:	ldr	x3, [sp, #64]
  43b45c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b460:	add	x2, x0, #0xb30
  43b464:	ldr	w1, [sp, #36]
  43b468:	mov	x0, x3
  43b46c:	bl	4079b0 <sd_bus_reply_method_errnof@plt>
  43b470:	str	w0, [sp, #48]
  43b474:	ldr	w0, [sp, #48]
  43b478:	cmp	w0, #0x0
  43b47c:	b.ge	43b4f8 <brightness_writer_reply+0x154>  // b.tcont
  43b480:	mov	w0, #0x4                   	// #4
  43b484:	str	w0, [sp, #52]
  43b488:	ldr	w0, [sp, #48]
  43b48c:	str	w0, [sp, #56]
  43b490:	str	wzr, [sp, #60]
  43b494:	ldr	w0, [sp, #60]
  43b498:	bl	4083e0 <log_get_max_level_realm@plt>
  43b49c:	mov	w1, w0
  43b4a0:	ldr	w0, [sp, #52]
  43b4a4:	and	w0, w0, #0x7
  43b4a8:	cmp	w1, w0
  43b4ac:	b.lt	43b4f0 <brightness_writer_reply+0x14c>  // b.tstop
  43b4b0:	ldr	w0, [sp, #60]
  43b4b4:	lsl	w1, w0, #10
  43b4b8:	ldr	w0, [sp, #52]
  43b4bc:	orr	w6, w1, w0
  43b4c0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b4c4:	add	x1, x0, #0xb03
  43b4c8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b4cc:	add	x5, x0, #0xb60
  43b4d0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b4d4:	add	x4, x0, #0xd68
  43b4d8:	mov	w3, #0x5c                  	// #92
  43b4dc:	mov	x2, x1
  43b4e0:	ldr	w1, [sp, #56]
  43b4e4:	mov	w0, w6
  43b4e8:	bl	407d60 <log_internal_realm@plt>
  43b4ec:	b	43b4f8 <brightness_writer_reply+0x154>
  43b4f0:	ldr	w0, [sp, #56]
  43b4f4:	cmp	w0, #0x0
  43b4f8:	mov	w19, #0x1                   	// #1
  43b4fc:	add	x0, sp, #0x40
  43b500:	bl	43b0bc <sd_bus_message_unrefp>
  43b504:	cmp	w19, #0x1
  43b508:	b.ne	43b510 <brightness_writer_reply+0x16c>  // b.any
  43b50c:	b	43b410 <brightness_writer_reply+0x6c>
  43b510:	nop
  43b514:	adrp	x0, 460000 <wordlist.10364+0x370>
  43b518:	ldr	x0, [x0, #4024]
  43b51c:	ldr	x1, [sp, #72]
  43b520:	ldr	x0, [x0]
  43b524:	eor	x0, x1, x0
  43b528:	cmp	x0, #0x0
  43b52c:	b.eq	43b534 <brightness_writer_reply+0x190>  // b.none
  43b530:	bl	407b20 <__stack_chk_fail@plt>
  43b534:	ldr	x19, [sp, #16]
  43b538:	ldp	x29, x30, [sp], #80
  43b53c:	ret

000000000043b540 <on_brightness_writer_exit>:
  43b540:	stp	x29, x30, [sp, #-80]!
  43b544:	mov	x29, sp
  43b548:	str	x0, [sp, #40]
  43b54c:	str	x1, [sp, #32]
  43b550:	str	x2, [sp, #24]
  43b554:	ldr	x0, [sp, #24]
  43b558:	str	x0, [sp, #64]
  43b55c:	ldr	x0, [sp, #40]
  43b560:	cmp	x0, #0x0
  43b564:	cset	w0, eq  // eq = none
  43b568:	and	w0, w0, #0xff
  43b56c:	and	x0, x0, #0xff
  43b570:	cmp	x0, #0x0
  43b574:	b.eq	43b5a0 <on_brightness_writer_exit+0x60>  // b.none
  43b578:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b57c:	add	x1, x0, #0xb03
  43b580:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b584:	add	x4, x0, #0xd80
  43b588:	mov	w3, #0x66                  	// #102
  43b58c:	mov	x2, x1
  43b590:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b594:	add	x1, x0, #0xb90
  43b598:	mov	w0, #0x0                   	// #0
  43b59c:	bl	407650 <log_assert_failed_realm@plt>
  43b5a0:	ldr	x0, [sp, #32]
  43b5a4:	cmp	x0, #0x0
  43b5a8:	cset	w0, eq  // eq = none
  43b5ac:	and	w0, w0, #0xff
  43b5b0:	and	x0, x0, #0xff
  43b5b4:	cmp	x0, #0x0
  43b5b8:	b.eq	43b5e4 <on_brightness_writer_exit+0xa4>  // b.none
  43b5bc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b5c0:	add	x1, x0, #0xb03
  43b5c4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b5c8:	add	x4, x0, #0xd80
  43b5cc:	mov	w3, #0x67                  	// #103
  43b5d0:	mov	x2, x1
  43b5d4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b5d8:	add	x1, x0, #0xb98
  43b5dc:	mov	w0, #0x0                   	// #0
  43b5e0:	bl	407650 <log_assert_failed_realm@plt>
  43b5e4:	ldr	x0, [sp, #64]
  43b5e8:	cmp	x0, #0x0
  43b5ec:	cset	w0, eq  // eq = none
  43b5f0:	and	w0, w0, #0xff
  43b5f4:	and	x0, x0, #0xff
  43b5f8:	cmp	x0, #0x0
  43b5fc:	b.eq	43b628 <on_brightness_writer_exit+0xe8>  // b.none
  43b600:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b604:	add	x1, x0, #0xb03
  43b608:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b60c:	add	x4, x0, #0xd80
  43b610:	mov	w3, #0x68                  	// #104
  43b614:	mov	x2, x1
  43b618:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b61c:	add	x1, x0, #0xb28
  43b620:	mov	w0, #0x0                   	// #0
  43b624:	bl	407650 <log_assert_failed_realm@plt>
  43b628:	ldr	x0, [sp, #32]
  43b62c:	ldr	w1, [x0, #16]
  43b630:	ldr	x0, [sp, #64]
  43b634:	ldr	w0, [x0, #24]
  43b638:	cmp	w1, w0
  43b63c:	cset	w0, ne  // ne = any
  43b640:	and	w0, w0, #0xff
  43b644:	and	x0, x0, #0xff
  43b648:	cmp	x0, #0x0
  43b64c:	b.eq	43b678 <on_brightness_writer_exit+0x138>  // b.none
  43b650:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b654:	add	x1, x0, #0xb03
  43b658:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b65c:	add	x4, x0, #0xd80
  43b660:	mov	w3, #0x6a                  	// #106
  43b664:	mov	x2, x1
  43b668:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b66c:	add	x1, x0, #0xba0
  43b670:	mov	w0, #0x0                   	// #0
  43b674:	bl	407650 <log_assert_failed_realm@plt>
  43b678:	ldr	x0, [sp, #64]
  43b67c:	str	wzr, [x0, #24]
  43b680:	ldr	x0, [sp, #64]
  43b684:	ldr	x0, [x0, #56]
  43b688:	bl	407550 <sd_event_source_unref@plt>
  43b68c:	mov	x1, x0
  43b690:	ldr	x0, [sp, #64]
  43b694:	str	x1, [x0, #56]
  43b698:	ldr	x0, [sp, #32]
  43b69c:	ldr	w0, [x0, #8]
  43b6a0:	cmp	w0, #0x1
  43b6a4:	b.ne	43b6c0 <on_brightness_writer_exit+0x180>  // b.any
  43b6a8:	ldr	x0, [sp, #32]
  43b6ac:	ldr	w0, [x0, #24]
  43b6b0:	cmp	w0, #0x0
  43b6b4:	b.ne	43b6c0 <on_brightness_writer_exit+0x180>  // b.any
  43b6b8:	mov	w0, #0x0                   	// #0
  43b6bc:	b	43b6c4 <on_brightness_writer_exit+0x184>
  43b6c0:	mov	w0, #0xffffffb9            	// #-71
  43b6c4:	mov	w1, w0
  43b6c8:	ldr	x0, [sp, #64]
  43b6cc:	bl	43b3a4 <brightness_writer_reply>
  43b6d0:	ldr	x0, [sp, #64]
  43b6d4:	ldrb	w0, [x0, #32]
  43b6d8:	cmp	w0, #0x0
  43b6dc:	b.eq	43b740 <on_brightness_writer_exit+0x200>  // b.none
  43b6e0:	ldr	x0, [sp, #64]
  43b6e4:	strb	wzr, [x0, #32]
  43b6e8:	ldr	x0, [sp, #64]
  43b6ec:	ldr	x0, [x0, #40]
  43b6f0:	bl	43b210 <set_free>
  43b6f4:	ldr	x0, [sp, #64]
  43b6f8:	ldr	x0, [x0, #48]
  43b6fc:	str	x0, [sp, #72]
  43b700:	ldr	x0, [sp, #64]
  43b704:	str	xzr, [x0, #48]
  43b708:	ldr	x1, [sp, #72]
  43b70c:	ldr	x0, [sp, #64]
  43b710:	str	x1, [x0, #40]
  43b714:	ldr	x0, [sp, #64]
  43b718:	bl	43b754 <brightness_writer_fork>
  43b71c:	str	w0, [sp, #60]
  43b720:	ldr	w0, [sp, #60]
  43b724:	cmp	w0, #0x0
  43b728:	b.lt	43b734 <on_brightness_writer_exit+0x1f4>  // b.tstop
  43b72c:	mov	w0, #0x0                   	// #0
  43b730:	b	43b74c <on_brightness_writer_exit+0x20c>
  43b734:	ldr	w1, [sp, #60]
  43b738:	ldr	x0, [sp, #64]
  43b73c:	bl	43b3a4 <brightness_writer_reply>
  43b740:	ldr	x0, [sp, #64]
  43b744:	bl	43b28c <brightness_writer_free>
  43b748:	mov	w0, #0x0                   	// #0
  43b74c:	ldp	x29, x30, [sp], #80
  43b750:	ret

000000000043b754 <brightness_writer_fork>:
  43b754:	sub	sp, sp, #0x70
  43b758:	stp	x29, x30, [sp, #16]
  43b75c:	add	x29, sp, #0x10
  43b760:	str	x0, [sp, #40]
  43b764:	adrp	x0, 460000 <wordlist.10364+0x370>
  43b768:	ldr	x0, [x0, #4024]
  43b76c:	ldr	x1, [x0]
  43b770:	str	x1, [sp, #104]
  43b774:	mov	x1, #0x0                   	// #0
  43b778:	ldr	x0, [sp, #40]
  43b77c:	cmp	x0, #0x0
  43b780:	cset	w0, eq  // eq = none
  43b784:	and	w0, w0, #0xff
  43b788:	and	x0, x0, #0xff
  43b78c:	cmp	x0, #0x0
  43b790:	b.eq	43b7bc <brightness_writer_fork+0x68>  // b.none
  43b794:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b798:	add	x1, x0, #0xb03
  43b79c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b7a0:	add	x4, x0, #0xda0
  43b7a4:	mov	w3, #0x87                  	// #135
  43b7a8:	mov	x2, x1
  43b7ac:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b7b0:	add	x1, x0, #0xb28
  43b7b4:	mov	w0, #0x0                   	// #0
  43b7b8:	bl	407650 <log_assert_failed_realm@plt>
  43b7bc:	ldr	x0, [sp, #40]
  43b7c0:	ldr	x0, [x0]
  43b7c4:	cmp	x0, #0x0
  43b7c8:	cset	w0, eq  // eq = none
  43b7cc:	and	w0, w0, #0xff
  43b7d0:	and	x0, x0, #0xff
  43b7d4:	cmp	x0, #0x0
  43b7d8:	b.eq	43b804 <brightness_writer_fork+0xb0>  // b.none
  43b7dc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b7e0:	add	x1, x0, #0xb03
  43b7e4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b7e8:	add	x4, x0, #0xda0
  43b7ec:	mov	w3, #0x88                  	// #136
  43b7f0:	mov	x2, x1
  43b7f4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b7f8:	add	x1, x0, #0xbb8
  43b7fc:	mov	w0, #0x0                   	// #0
  43b800:	bl	407650 <log_assert_failed_realm@plt>
  43b804:	ldr	x0, [sp, #40]
  43b808:	ldr	w0, [x0, #24]
  43b80c:	cmp	w0, #0x0
  43b810:	cset	w0, ne  // ne = any
  43b814:	and	w0, w0, #0xff
  43b818:	and	x0, x0, #0xff
  43b81c:	cmp	x0, #0x0
  43b820:	b.eq	43b84c <brightness_writer_fork+0xf8>  // b.none
  43b824:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b828:	add	x1, x0, #0xb03
  43b82c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b830:	add	x4, x0, #0xda0
  43b834:	mov	w3, #0x89                  	// #137
  43b838:	mov	x2, x1
  43b83c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b840:	add	x1, x0, #0xbc8
  43b844:	mov	w0, #0x0                   	// #0
  43b848:	bl	407650 <log_assert_failed_realm@plt>
  43b84c:	ldr	x0, [sp, #40]
  43b850:	ldr	x0, [x0, #56]
  43b854:	cmp	x0, #0x0
  43b858:	cset	w0, ne  // ne = any
  43b85c:	and	w0, w0, #0xff
  43b860:	and	x0, x0, #0xff
  43b864:	cmp	x0, #0x0
  43b868:	b.eq	43b894 <brightness_writer_fork+0x140>  // b.none
  43b86c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b870:	add	x1, x0, #0xb03
  43b874:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b878:	add	x4, x0, #0xda0
  43b87c:	mov	w3, #0x8a                  	// #138
  43b880:	mov	x2, x1
  43b884:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b888:	add	x1, x0, #0xbd8
  43b88c:	mov	w0, #0x0                   	// #0
  43b890:	bl	407650 <log_assert_failed_realm@plt>
  43b894:	ldr	x0, [sp, #40]
  43b898:	add	x0, x0, #0x18
  43b89c:	mov	x2, x0
  43b8a0:	mov	w1, #0x2e                  	// #46
  43b8a4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b8a8:	add	x0, x0, #0xbf0
  43b8ac:	bl	43b258 <safe_fork>
  43b8b0:	str	w0, [sp, #48]
  43b8b4:	ldr	w0, [sp, #48]
  43b8b8:	cmp	w0, #0x0
  43b8bc:	b.ge	43b8c8 <brightness_writer_fork+0x174>  // b.tcont
  43b8c0:	ldr	w0, [sp, #48]
  43b8c4:	b	43bb14 <brightness_writer_fork+0x3c0>
  43b8c8:	ldr	w0, [sp, #48]
  43b8cc:	cmp	w0, #0x0
  43b8d0:	b.ne	43ba38 <brightness_writer_fork+0x2e4>  // b.any
  43b8d4:	ldr	x0, [sp, #40]
  43b8d8:	ldr	w0, [x0, #28]
  43b8dc:	add	x4, sp, #0x58
  43b8e0:	mov	w3, w0
  43b8e4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b8e8:	add	x2, x0, #0xc00
  43b8ec:	mov	x1, #0xd                   	// #13
  43b8f0:	mov	x0, x4
  43b8f4:	bl	407460 <snprintf@plt>
  43b8f8:	cmp	w0, #0xc
  43b8fc:	cset	w0, hi  // hi = pmore
  43b900:	and	w0, w0, #0xff
  43b904:	and	x0, x0, #0xff
  43b908:	cmp	x0, #0x0
  43b90c:	b.eq	43b938 <brightness_writer_fork+0x1e4>  // b.none
  43b910:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b914:	add	x1, x0, #0xb03
  43b918:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b91c:	add	x4, x0, #0xda0
  43b920:	mov	w3, #0x93                  	// #147
  43b924:	mov	x2, x1
  43b928:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b92c:	add	x1, x0, #0xc08
  43b930:	mov	w0, #0x0                   	// #0
  43b934:	bl	407650 <log_assert_failed_realm@plt>
  43b938:	ldr	x0, [sp, #40]
  43b93c:	ldr	x3, [x0, #8]
  43b940:	add	x0, sp, #0x58
  43b944:	mov	x2, x0
  43b948:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b94c:	add	x1, x0, #0xc30
  43b950:	mov	x0, x3
  43b954:	bl	408090 <sd_device_set_sysattr_value@plt>
  43b958:	str	w0, [sp, #48]
  43b95c:	ldr	w0, [sp, #48]
  43b960:	cmp	w0, #0x0
  43b964:	b.ge	43ba30 <brightness_writer_fork+0x2dc>  // b.tcont
  43b968:	str	xzr, [sp, #72]
  43b96c:	ldr	x0, [sp, #40]
  43b970:	ldr	x0, [x0, #8]
  43b974:	str	x0, [sp, #80]
  43b978:	mov	w0, #0x3                   	// #3
  43b97c:	str	w0, [sp, #64]
  43b980:	ldr	w0, [sp, #48]
  43b984:	str	w0, [sp, #68]
  43b988:	ldr	x0, [sp, #80]
  43b98c:	cmp	x0, #0x0
  43b990:	b.eq	43b9cc <brightness_writer_fork+0x278>  // b.none
  43b994:	mov	w0, #0x0                   	// #0
  43b998:	bl	4083e0 <log_get_max_level_realm@plt>
  43b99c:	mov	w1, w0
  43b9a0:	ldr	w0, [sp, #64]
  43b9a4:	cmp	w0, w1
  43b9a8:	cset	w0, le
  43b9ac:	and	w0, w0, #0xff
  43b9b0:	and	x0, x0, #0xff
  43b9b4:	cmp	x0, #0x0
  43b9b8:	b.eq	43b9cc <brightness_writer_fork+0x278>  // b.none
  43b9bc:	add	x0, sp, #0x48
  43b9c0:	mov	x1, x0
  43b9c4:	ldr	x0, [sp, #80]
  43b9c8:	bl	407630 <sd_device_get_sysname@plt>
  43b9cc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b9d0:	add	x2, x0, #0xb03
  43b9d4:	ldr	x0, [sp, #72]
  43b9d8:	cmp	x0, #0x0
  43b9dc:	b.eq	43b9ec <brightness_writer_fork+0x298>  // b.none
  43b9e0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b9e4:	add	x0, x0, #0xc40
  43b9e8:	b	43b9f0 <brightness_writer_fork+0x29c>
  43b9ec:	mov	x0, #0x0                   	// #0
  43b9f0:	ldr	x3, [sp, #72]
  43b9f4:	adrp	x1, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43b9f8:	add	x1, x1, #0xc48
  43b9fc:	str	x1, [sp, #8]
  43ba00:	str	xzr, [sp]
  43ba04:	mov	x7, #0x0                   	// #0
  43ba08:	mov	x6, x3
  43ba0c:	mov	x5, x0
  43ba10:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43ba14:	add	x4, x0, #0xdb8
  43ba18:	mov	w3, #0x97                  	// #151
  43ba1c:	ldr	w1, [sp, #68]
  43ba20:	ldr	w0, [sp, #64]
  43ba24:	bl	407940 <log_object_internal@plt>
  43ba28:	mov	w0, #0x1                   	// #1
  43ba2c:	bl	4076a0 <_exit@plt>
  43ba30:	mov	w0, #0x0                   	// #0
  43ba34:	bl	4076a0 <_exit@plt>
  43ba38:	ldr	x0, [sp, #40]
  43ba3c:	ldr	x0, [x0]
  43ba40:	ldr	x6, [x0]
  43ba44:	ldr	x0, [sp, #40]
  43ba48:	add	x1, x0, #0x38
  43ba4c:	ldr	x0, [sp, #40]
  43ba50:	ldr	w2, [x0, #24]
  43ba54:	ldr	x5, [sp, #40]
  43ba58:	adrp	x0, 43b000 <logind_gperf_hash+0x24>
  43ba5c:	add	x4, x0, #0x540
  43ba60:	mov	w3, #0x4                   	// #4
  43ba64:	mov	x0, x6
  43ba68:	bl	407170 <sd_event_add_child@plt>
  43ba6c:	str	w0, [sp, #48]
  43ba70:	ldr	w0, [sp, #48]
  43ba74:	cmp	w0, #0x0
  43ba78:	b.ge	43bb10 <brightness_writer_fork+0x3bc>  // b.tcont
  43ba7c:	mov	w0, #0x3                   	// #3
  43ba80:	str	w0, [sp, #52]
  43ba84:	ldr	w0, [sp, #48]
  43ba88:	str	w0, [sp, #56]
  43ba8c:	str	wzr, [sp, #60]
  43ba90:	ldr	w0, [sp, #60]
  43ba94:	bl	4083e0 <log_get_max_level_realm@plt>
  43ba98:	mov	w1, w0
  43ba9c:	ldr	w0, [sp, #52]
  43baa0:	and	w0, w0, #0x7
  43baa4:	cmp	w1, w0
  43baa8:	b.lt	43baf8 <brightness_writer_fork+0x3a4>  // b.tstop
  43baac:	ldr	w0, [sp, #60]
  43bab0:	lsl	w1, w0, #10
  43bab4:	ldr	w0, [sp, #52]
  43bab8:	orr	w7, w1, w0
  43babc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bac0:	add	x1, x0, #0xb03
  43bac4:	ldr	x0, [sp, #40]
  43bac8:	ldr	w0, [x0, #24]
  43bacc:	mov	w6, w0
  43bad0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bad4:	add	x5, x0, #0xc78
  43bad8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43badc:	add	x4, x0, #0xdb8
  43bae0:	mov	w3, #0xa0                  	// #160
  43bae4:	mov	x2, x1
  43bae8:	ldr	w1, [sp, #56]
  43baec:	mov	w0, w7
  43baf0:	bl	407d60 <log_internal_realm@plt>
  43baf4:	b	43bb14 <brightness_writer_fork+0x3c0>
  43baf8:	ldr	w0, [sp, #56]
  43bafc:	cmp	w0, #0x0
  43bb00:	cneg	w0, w0, lt  // lt = tstop
  43bb04:	and	w0, w0, #0xff
  43bb08:	neg	w0, w0
  43bb0c:	b	43bb14 <brightness_writer_fork+0x3c0>
  43bb10:	mov	w0, #0x0                   	// #0
  43bb14:	mov	w1, w0
  43bb18:	adrp	x0, 460000 <wordlist.10364+0x370>
  43bb1c:	ldr	x0, [x0, #4024]
  43bb20:	ldr	x2, [sp, #104]
  43bb24:	ldr	x0, [x0]
  43bb28:	eor	x0, x2, x0
  43bb2c:	cmp	x0, #0x0
  43bb30:	b.eq	43bb38 <brightness_writer_fork+0x3e4>  // b.none
  43bb34:	bl	407b20 <__stack_chk_fail@plt>
  43bb38:	mov	w0, w1
  43bb3c:	ldp	x29, x30, [sp, #16]
  43bb40:	add	sp, sp, #0x70
  43bb44:	ret

000000000043bb48 <set_add_message>:
  43bb48:	stp	x29, x30, [sp, #-48]!
  43bb4c:	mov	x29, sp
  43bb50:	str	x0, [sp, #24]
  43bb54:	str	x1, [sp, #16]
  43bb58:	ldr	x0, [sp, #24]
  43bb5c:	cmp	x0, #0x0
  43bb60:	cset	w0, eq  // eq = none
  43bb64:	and	w0, w0, #0xff
  43bb68:	and	x0, x0, #0xff
  43bb6c:	cmp	x0, #0x0
  43bb70:	b.eq	43bb9c <set_add_message+0x54>  // b.none
  43bb74:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bb78:	add	x1, x0, #0xb03
  43bb7c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bb80:	add	x4, x0, #0xdd0
  43bb84:	mov	w3, #0xa8                  	// #168
  43bb88:	mov	x2, x1
  43bb8c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bb90:	add	x1, x0, #0xca8
  43bb94:	mov	w0, #0x0                   	// #0
  43bb98:	bl	407650 <log_assert_failed_realm@plt>
  43bb9c:	ldr	x0, [sp, #16]
  43bba0:	cmp	x0, #0x0
  43bba4:	b.ne	43bbb0 <set_add_message+0x68>  // b.any
  43bba8:	mov	w0, #0x0                   	// #0
  43bbac:	b	43bc2c <set_add_message+0xe4>
  43bbb0:	ldr	x0, [sp, #16]
  43bbb4:	bl	4083d0 <sd_bus_message_get_expect_reply@plt>
  43bbb8:	str	w0, [sp, #44]
  43bbbc:	ldr	w0, [sp, #44]
  43bbc0:	cmp	w0, #0x0
  43bbc4:	b.gt	43bbd0 <set_add_message+0x88>
  43bbc8:	ldr	w0, [sp, #44]
  43bbcc:	b	43bc2c <set_add_message+0xe4>
  43bbd0:	adrp	x0, 460000 <wordlist.10364+0x370>
  43bbd4:	ldr	x1, [x0, #4064]
  43bbd8:	ldr	x0, [sp, #24]
  43bbdc:	bl	407100 <internal_set_ensure_allocated@plt>
  43bbe0:	str	w0, [sp, #44]
  43bbe4:	ldr	w0, [sp, #44]
  43bbe8:	cmp	w0, #0x0
  43bbec:	b.ge	43bbf8 <set_add_message+0xb0>  // b.tcont
  43bbf0:	ldr	w0, [sp, #44]
  43bbf4:	b	43bc2c <set_add_message+0xe4>
  43bbf8:	ldr	x0, [sp, #24]
  43bbfc:	ldr	x0, [x0]
  43bc00:	ldr	x1, [sp, #16]
  43bc04:	bl	4082e0 <set_put@plt>
  43bc08:	str	w0, [sp, #44]
  43bc0c:	ldr	w0, [sp, #44]
  43bc10:	cmp	w0, #0x0
  43bc14:	b.ge	43bc20 <set_add_message+0xd8>  // b.tcont
  43bc18:	ldr	w0, [sp, #44]
  43bc1c:	b	43bc2c <set_add_message+0xe4>
  43bc20:	ldr	x0, [sp, #16]
  43bc24:	bl	408300 <sd_bus_message_ref@plt>
  43bc28:	mov	w0, #0x1                   	// #1
  43bc2c:	ldp	x29, x30, [sp], #48
  43bc30:	ret

000000000043bc34 <manager_write_brightness>:
  43bc34:	sub	sp, sp, #0xf0
  43bc38:	stp	x29, x30, [sp, #16]
  43bc3c:	add	x29, sp, #0x10
  43bc40:	stp	x19, x20, [sp, #32]
  43bc44:	str	x0, [sp, #72]
  43bc48:	str	x1, [sp, #64]
  43bc4c:	str	w2, [sp, #60]
  43bc50:	str	x3, [sp, #48]
  43bc54:	adrp	x0, 460000 <wordlist.10364+0x370>
  43bc58:	ldr	x0, [x0, #4024]
  43bc5c:	ldr	x1, [x0]
  43bc60:	str	x1, [sp, #232]
  43bc64:	mov	x1, #0x0                   	// #0
  43bc68:	str	xzr, [sp, #128]
  43bc6c:	ldr	x0, [sp, #72]
  43bc70:	cmp	x0, #0x0
  43bc74:	cset	w0, eq  // eq = none
  43bc78:	and	w0, w0, #0xff
  43bc7c:	and	x0, x0, #0xff
  43bc80:	cmp	x0, #0x0
  43bc84:	b.eq	43bcb0 <manager_write_brightness+0x7c>  // b.none
  43bc88:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bc8c:	add	x1, x0, #0xb03
  43bc90:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bc94:	add	x4, x0, #0xde0
  43bc98:	mov	w3, #0xc8                  	// #200
  43bc9c:	mov	x2, x1
  43bca0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bca4:	add	x1, x0, #0xcb0
  43bca8:	mov	w0, #0x0                   	// #0
  43bcac:	bl	407650 <log_assert_failed_realm@plt>
  43bcb0:	ldr	x0, [sp, #64]
  43bcb4:	cmp	x0, #0x0
  43bcb8:	cset	w0, eq  // eq = none
  43bcbc:	and	w0, w0, #0xff
  43bcc0:	and	x0, x0, #0xff
  43bcc4:	cmp	x0, #0x0
  43bcc8:	b.eq	43bcf4 <manager_write_brightness+0xc0>  // b.none
  43bccc:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bcd0:	add	x1, x0, #0xb03
  43bcd4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bcd8:	add	x4, x0, #0xde0
  43bcdc:	mov	w3, #0xc9                  	// #201
  43bce0:	mov	x2, x1
  43bce4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bce8:	add	x1, x0, #0xcb8
  43bcec:	mov	w0, #0x0                   	// #0
  43bcf0:	bl	407650 <log_assert_failed_realm@plt>
  43bcf4:	add	x0, sp, #0x88
  43bcf8:	mov	x1, x0
  43bcfc:	ldr	x0, [sp, #64]
  43bd00:	bl	408320 <sd_device_get_syspath@plt>
  43bd04:	str	w0, [sp, #80]
  43bd08:	ldr	w0, [sp, #80]
  43bd0c:	cmp	w0, #0x0
  43bd10:	b.ge	43bdd8 <manager_write_brightness+0x1a4>  // b.tcont
  43bd14:	str	xzr, [sp, #168]
  43bd18:	ldr	x0, [sp, #64]
  43bd1c:	str	x0, [sp, #160]
  43bd20:	mov	w0, #0x3                   	// #3
  43bd24:	str	w0, [sp, #120]
  43bd28:	ldr	w0, [sp, #80]
  43bd2c:	str	w0, [sp, #124]
  43bd30:	ldr	x0, [sp, #160]
  43bd34:	cmp	x0, #0x0
  43bd38:	b.eq	43bd74 <manager_write_brightness+0x140>  // b.none
  43bd3c:	mov	w0, #0x0                   	// #0
  43bd40:	bl	4083e0 <log_get_max_level_realm@plt>
  43bd44:	mov	w1, w0
  43bd48:	ldr	w0, [sp, #120]
  43bd4c:	cmp	w0, w1
  43bd50:	cset	w0, le
  43bd54:	and	w0, w0, #0xff
  43bd58:	and	x0, x0, #0xff
  43bd5c:	cmp	x0, #0x0
  43bd60:	b.eq	43bd74 <manager_write_brightness+0x140>  // b.none
  43bd64:	add	x0, sp, #0xa8
  43bd68:	mov	x1, x0
  43bd6c:	ldr	x0, [sp, #160]
  43bd70:	bl	407630 <sd_device_get_sysname@plt>
  43bd74:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bd78:	add	x2, x0, #0xb03
  43bd7c:	ldr	x0, [sp, #168]
  43bd80:	cmp	x0, #0x0
  43bd84:	b.eq	43bd94 <manager_write_brightness+0x160>  // b.none
  43bd88:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bd8c:	add	x0, x0, #0xc40
  43bd90:	b	43bd98 <manager_write_brightness+0x164>
  43bd94:	mov	x0, #0x0                   	// #0
  43bd98:	ldr	x3, [sp, #168]
  43bd9c:	adrp	x1, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bda0:	add	x1, x1, #0xcc0
  43bda4:	str	x1, [sp, #8]
  43bda8:	str	xzr, [sp]
  43bdac:	mov	x7, #0x0                   	// #0
  43bdb0:	mov	x6, x3
  43bdb4:	mov	x5, x0
  43bdb8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bdbc:	add	x4, x0, #0xe00
  43bdc0:	mov	w3, #0xcd                  	// #205
  43bdc4:	ldr	w1, [sp, #124]
  43bdc8:	ldr	w0, [sp, #120]
  43bdcc:	bl	407940 <log_object_internal@plt>
  43bdd0:	mov	w19, w0
  43bdd4:	b	43c164 <manager_write_brightness+0x530>
  43bdd8:	ldr	x0, [sp, #72]
  43bddc:	ldr	x0, [x0, #72]
  43bde0:	ldr	x1, [sp, #136]
  43bde4:	bl	43b1c0 <hashmap_get>
  43bde8:	str	x0, [sp, #144]
  43bdec:	ldr	x0, [sp, #144]
  43bdf0:	cmp	x0, #0x0
  43bdf4:	b.eq	43bec4 <manager_write_brightness+0x290>  // b.none
  43bdf8:	ldr	x0, [sp, #144]
  43bdfc:	add	x0, x0, #0x30
  43be00:	ldr	x1, [sp, #48]
  43be04:	bl	43bb48 <set_add_message>
  43be08:	str	w0, [sp, #80]
  43be0c:	ldr	w0, [sp, #80]
  43be10:	cmp	w0, #0x0
  43be14:	b.ge	43bea4 <manager_write_brightness+0x270>  // b.tcont
  43be18:	mov	w0, #0x3                   	// #3
  43be1c:	str	w0, [sp, #108]
  43be20:	ldr	w0, [sp, #80]
  43be24:	str	w0, [sp, #112]
  43be28:	str	wzr, [sp, #116]
  43be2c:	ldr	w0, [sp, #116]
  43be30:	bl	4083e0 <log_get_max_level_realm@plt>
  43be34:	mov	w1, w0
  43be38:	ldr	w0, [sp, #108]
  43be3c:	and	w0, w0, #0x7
  43be40:	cmp	w1, w0
  43be44:	b.lt	43be8c <manager_write_brightness+0x258>  // b.tstop
  43be48:	ldr	w0, [sp, #116]
  43be4c:	lsl	w1, w0, #10
  43be50:	ldr	w0, [sp, #108]
  43be54:	orr	w6, w1, w0
  43be58:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43be5c:	add	x1, x0, #0xb03
  43be60:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43be64:	add	x5, x0, #0xcf8
  43be68:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43be6c:	add	x4, x0, #0xe00
  43be70:	mov	w3, #0xd6                  	// #214
  43be74:	mov	x2, x1
  43be78:	ldr	w1, [sp, #112]
  43be7c:	mov	w0, w6
  43be80:	bl	407d60 <log_internal_realm@plt>
  43be84:	mov	w19, w0
  43be88:	b	43c164 <manager_write_brightness+0x530>
  43be8c:	ldr	w0, [sp, #112]
  43be90:	cmp	w0, #0x0
  43be94:	cneg	w0, w0, lt  // lt = tstop
  43be98:	and	w0, w0, #0xff
  43be9c:	neg	w19, w0
  43bea0:	b	43c164 <manager_write_brightness+0x530>
  43bea4:	ldr	x0, [sp, #144]
  43bea8:	ldr	w1, [sp, #60]
  43beac:	str	w1, [x0, #28]
  43beb0:	ldr	x0, [sp, #144]
  43beb4:	mov	w1, #0x1                   	// #1
  43beb8:	strb	w1, [x0, #32]
  43bebc:	mov	w19, #0x0                   	// #0
  43bec0:	b	43c164 <manager_write_brightness+0x530>
  43bec4:	ldr	x0, [sp, #72]
  43bec8:	add	x2, x0, #0x48
  43becc:	adrp	x0, 460000 <wordlist.10364+0x370>
  43bed0:	add	x1, x0, #0x2d0
  43bed4:	mov	x0, x2
  43bed8:	bl	4081c0 <internal_hashmap_ensure_allocated@plt>
  43bedc:	str	w0, [sp, #80]
  43bee0:	ldr	w0, [sp, #80]
  43bee4:	cmp	w0, #0x0
  43bee8:	b.ge	43bf10 <manager_write_brightness+0x2dc>  // b.tcont
  43beec:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bef0:	add	x1, x0, #0xb03
  43bef4:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bef8:	add	x3, x0, #0xe00
  43befc:	mov	w2, #0xe2                  	// #226
  43bf00:	mov	w0, #0x0                   	// #0
  43bf04:	bl	408330 <log_oom_internal@plt>
  43bf08:	mov	w19, w0
  43bf0c:	b	43c164 <manager_write_brightness+0x530>
  43bf10:	mov	x1, #0x1                   	// #1
  43bf14:	mov	x0, #0x40                  	// #64
  43bf18:	bl	43b16c <malloc_multiply>
  43bf1c:	str	x0, [sp, #128]
  43bf20:	ldr	x0, [sp, #128]
  43bf24:	cmp	x0, #0x0
  43bf28:	b.ne	43bf50 <manager_write_brightness+0x31c>  // b.any
  43bf2c:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bf30:	add	x1, x0, #0xb03
  43bf34:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bf38:	add	x3, x0, #0xe00
  43bf3c:	mov	w2, #0xe6                  	// #230
  43bf40:	mov	w0, #0x0                   	// #0
  43bf44:	bl	408330 <log_oom_internal@plt>
  43bf48:	mov	w19, w0
  43bf4c:	b	43c164 <manager_write_brightness+0x530>
  43bf50:	ldr	x19, [sp, #128]
  43bf54:	ldr	x0, [sp, #64]
  43bf58:	bl	408230 <sd_device_ref@plt>
  43bf5c:	mov	x20, x0
  43bf60:	ldr	x0, [sp, #136]
  43bf64:	bl	407f90 <strdup@plt>
  43bf68:	stp	xzr, xzr, [x19]
  43bf6c:	stp	xzr, xzr, [x19, #16]
  43bf70:	stp	xzr, xzr, [x19, #32]
  43bf74:	stp	xzr, xzr, [x19, #48]
  43bf78:	str	x20, [x19, #8]
  43bf7c:	str	x0, [x19, #16]
  43bf80:	ldr	w0, [sp, #60]
  43bf84:	str	w0, [x19, #28]
  43bf88:	ldr	x0, [sp, #128]
  43bf8c:	ldr	x0, [x0, #16]
  43bf90:	cmp	x0, #0x0
  43bf94:	b.ne	43bfbc <manager_write_brightness+0x388>  // b.any
  43bf98:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bf9c:	add	x1, x0, #0xb03
  43bfa0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43bfa4:	add	x3, x0, #0xe00
  43bfa8:	mov	w2, #0xef                  	// #239
  43bfac:	mov	w0, #0x0                   	// #0
  43bfb0:	bl	408330 <log_oom_internal@plt>
  43bfb4:	mov	w19, w0
  43bfb8:	b	43c164 <manager_write_brightness+0x530>
  43bfbc:	ldr	x0, [sp, #72]
  43bfc0:	ldr	x3, [x0, #72]
  43bfc4:	ldr	x0, [sp, #128]
  43bfc8:	ldr	x0, [x0, #16]
  43bfcc:	ldr	x1, [sp, #128]
  43bfd0:	mov	x2, x1
  43bfd4:	mov	x1, x0
  43bfd8:	mov	x0, x3
  43bfdc:	bl	407dd0 <hashmap_put@plt>
  43bfe0:	str	w0, [sp, #80]
  43bfe4:	ldr	w0, [sp, #80]
  43bfe8:	cmp	w0, #0x0
  43bfec:	b.ge	43c07c <manager_write_brightness+0x448>  // b.tcont
  43bff0:	mov	w0, #0x3                   	// #3
  43bff4:	str	w0, [sp, #96]
  43bff8:	ldr	w0, [sp, #80]
  43bffc:	str	w0, [sp, #100]
  43c000:	str	wzr, [sp, #104]
  43c004:	ldr	w0, [sp, #104]
  43c008:	bl	4083e0 <log_get_max_level_realm@plt>
  43c00c:	mov	w1, w0
  43c010:	ldr	w0, [sp, #96]
  43c014:	and	w0, w0, #0x7
  43c018:	cmp	w1, w0
  43c01c:	b.lt	43c064 <manager_write_brightness+0x430>  // b.tstop
  43c020:	ldr	w0, [sp, #104]
  43c024:	lsl	w1, w0, #10
  43c028:	ldr	w0, [sp, #96]
  43c02c:	orr	w6, w1, w0
  43c030:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43c034:	add	x1, x0, #0xb03
  43c038:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43c03c:	add	x5, x0, #0xd20
  43c040:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43c044:	add	x4, x0, #0xe00
  43c048:	mov	w3, #0xf3                  	// #243
  43c04c:	mov	x2, x1
  43c050:	ldr	w1, [sp, #100]
  43c054:	mov	w0, w6
  43c058:	bl	407d60 <log_internal_realm@plt>
  43c05c:	mov	w19, w0
  43c060:	b	43c164 <manager_write_brightness+0x530>
  43c064:	ldr	w0, [sp, #100]
  43c068:	cmp	w0, #0x0
  43c06c:	cneg	w0, w0, lt  // lt = tstop
  43c070:	and	w0, w0, #0xff
  43c074:	neg	w19, w0
  43c078:	b	43c164 <manager_write_brightness+0x530>
  43c07c:	ldr	x0, [sp, #128]
  43c080:	ldr	x1, [sp, #72]
  43c084:	str	x1, [x0]
  43c088:	ldr	x0, [sp, #128]
  43c08c:	add	x0, x0, #0x28
  43c090:	ldr	x1, [sp, #48]
  43c094:	bl	43bb48 <set_add_message>
  43c098:	str	w0, [sp, #80]
  43c09c:	ldr	w0, [sp, #80]
  43c0a0:	cmp	w0, #0x0
  43c0a4:	b.ge	43c134 <manager_write_brightness+0x500>  // b.tcont
  43c0a8:	mov	w0, #0x3                   	// #3
  43c0ac:	str	w0, [sp, #84]
  43c0b0:	ldr	w0, [sp, #80]
  43c0b4:	str	w0, [sp, #88]
  43c0b8:	str	wzr, [sp, #92]
  43c0bc:	ldr	w0, [sp, #92]
  43c0c0:	bl	4083e0 <log_get_max_level_realm@plt>
  43c0c4:	mov	w1, w0
  43c0c8:	ldr	w0, [sp, #84]
  43c0cc:	and	w0, w0, #0x7
  43c0d0:	cmp	w1, w0
  43c0d4:	b.lt	43c11c <manager_write_brightness+0x4e8>  // b.tstop
  43c0d8:	ldr	w0, [sp, #92]
  43c0dc:	lsl	w1, w0, #10
  43c0e0:	ldr	w0, [sp, #84]
  43c0e4:	orr	w6, w1, w0
  43c0e8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43c0ec:	add	x1, x0, #0xb03
  43c0f0:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43c0f4:	add	x5, x0, #0xcf8
  43c0f8:	adrp	x0, 446000 <__PRETTY_FUNCTION__.11734+0x6f8>
  43c0fc:	add	x4, x0, #0xe00
  43c100:	mov	w3, #0xf8                  	// #248
  43c104:	mov	x2, x1
  43c108:	ldr	w1, [sp, #88]
  43c10c:	mov	w0, w6
  43c110:	bl	407d60 <log_internal_realm@plt>
  43c114:	mov	w19, w0
  43c118:	b	43c164 <manager_write_brightness+0x530>
  43c11c:	ldr	w0, [sp, #88]
  43c120:	cmp	w0, #0x0
  43c124:	cneg	w0, w0, lt  // lt = tstop
  43c128:	and	w0, w0, #0xff
  43c12c:	neg	w19, w0
  43c130:	b	43c164 <manager_write_brightness+0x530>
  43c134:	ldr	x0, [sp, #128]
  43c138:	bl	43b754 <brightness_writer_fork>
  43c13c:	str	w0, [sp, #80]
  43c140:	ldr	w0, [sp, #80]
  43c144:	cmp	w0, #0x0
  43c148:	b.ge	43c154 <manager_write_brightness+0x520>  // b.tcont
  43c14c:	ldr	w19, [sp, #80]
  43c150:	b	43c164 <manager_write_brightness+0x530>
  43c154:	ldr	x0, [sp, #128]
  43c158:	str	x0, [sp, #152]
  43c15c:	str	xzr, [sp, #128]
  43c160:	mov	w19, #0x0                   	// #0
  43c164:	add	x0, sp, #0x80
  43c168:	bl	43b348 <brightness_writer_freep>
  43c16c:	mov	w1, w19
  43c170:	adrp	x0, 460000 <wordlist.10364+0x370>
  43c174:	ldr	x0, [x0, #4024]
  43c178:	ldr	x2, [sp, #232]
  43c17c:	ldr	x0, [x0]
  43c180:	eor	x0, x2, x0
  43c184:	cmp	x0, #0x0
  43c188:	b.eq	43c190 <manager_write_brightness+0x55c>  // b.none
  43c18c:	bl	407b20 <__stack_chk_fail@plt>
  43c190:	mov	w0, w1
  43c194:	ldp	x19, x20, [sp, #32]
  43c198:	ldp	x29, x30, [sp, #16]
  43c19c:	add	sp, sp, #0xf0
  43c1a0:	ret
  43c1a4:	nop

000000000043c1a8 <__libc_csu_init>:
  43c1a8:	stp	x29, x30, [sp, #-64]!
  43c1ac:	mov	x29, sp
  43c1b0:	stp	x19, x20, [sp, #16]
  43c1b4:	adrp	x20, 45d000 <__FRAME_END__+0x1032c>
  43c1b8:	add	x20, x20, #0x338
  43c1bc:	stp	x21, x22, [sp, #32]
  43c1c0:	adrp	x21, 45d000 <__FRAME_END__+0x1032c>
  43c1c4:	add	x21, x21, #0x330
  43c1c8:	sub	x20, x20, x21
  43c1cc:	mov	w22, w0
  43c1d0:	stp	x23, x24, [sp, #48]
  43c1d4:	mov	x23, x1
  43c1d8:	mov	x24, x2
  43c1dc:	bl	406f58 <_init>
  43c1e0:	cmp	xzr, x20, asr #3
  43c1e4:	b.eq	43c210 <__libc_csu_init+0x68>  // b.none
  43c1e8:	asr	x20, x20, #3
  43c1ec:	mov	x19, #0x0                   	// #0
  43c1f0:	ldr	x3, [x21, x19, lsl #3]
  43c1f4:	mov	x2, x24
  43c1f8:	add	x19, x19, #0x1
  43c1fc:	mov	x1, x23
  43c200:	mov	w0, w22
  43c204:	blr	x3
  43c208:	cmp	x20, x19
  43c20c:	b.ne	43c1f0 <__libc_csu_init+0x48>  // b.any
  43c210:	ldp	x19, x20, [sp, #16]
  43c214:	ldp	x21, x22, [sp, #32]
  43c218:	ldp	x23, x24, [sp, #48]
  43c21c:	ldp	x29, x30, [sp], #64
  43c220:	ret
  43c224:	nop

000000000043c228 <__libc_csu_fini>:
  43c228:	ret
  43c22c:	nop

000000000043c230 <fstat64>:
  43c230:	mov	x2, x1
  43c234:	mov	w1, w0
  43c238:	mov	w0, #0x0                   	// #0
  43c23c:	b	4078a0 <__fxstat64@plt>

000000000043c240 <lstat64>:
  43c240:	mov	x2, x1
  43c244:	mov	x1, x0
  43c248:	mov	w0, #0x0                   	// #0
  43c24c:	b	407a80 <__lxstat64@plt>

Disassembly of section .fini:

000000000043c250 <_fini>:
  43c250:	stp	x29, x30, [sp, #-16]!
  43c254:	mov	x29, sp
  43c258:	ldp	x29, x30, [sp], #16
  43c25c:	ret
