
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004018a0 <.init>:
  4018a0:	stp	x29, x30, [sp, #-16]!
  4018a4:	mov	x29, sp
  4018a8:	bl	401d60 <ferror@plt+0x60>
  4018ac:	ldp	x29, x30, [sp], #16
  4018b0:	ret

Disassembly of section .plt:

00000000004018c0 <mbrtowc@plt-0x20>:
  4018c0:	stp	x16, x30, [sp, #-16]!
  4018c4:	adrp	x16, 417000 <_obstack_memory_used@@Base+0x11040>
  4018c8:	ldr	x17, [x16, #4088]
  4018cc:	add	x16, x16, #0xff8
  4018d0:	br	x17
  4018d4:	nop
  4018d8:	nop
  4018dc:	nop

00000000004018e0 <mbrtowc@plt>:
  4018e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16]
  4018e8:	add	x16, x16, #0x0
  4018ec:	br	x17

00000000004018f0 <memcpy@plt>:
  4018f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #8]
  4018f8:	add	x16, x16, #0x8
  4018fc:	br	x17

0000000000401900 <_exit@plt>:
  401900:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #16]
  401908:	add	x16, x16, #0x10
  40190c:	br	x17

0000000000401910 <strlen@plt>:
  401910:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #24]
  401918:	add	x16, x16, #0x18
  40191c:	br	x17

0000000000401920 <fputs@plt>:
  401920:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #32]
  401928:	add	x16, x16, #0x20
  40192c:	br	x17

0000000000401930 <exit@plt>:
  401930:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #40]
  401938:	add	x16, x16, #0x28
  40193c:	br	x17

0000000000401940 <error@plt>:
  401940:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #48]
  401948:	add	x16, x16, #0x30
  40194c:	br	x17

0000000000401950 <sysinfo@plt>:
  401950:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #56]
  401958:	add	x16, x16, #0x38
  40195c:	br	x17

0000000000401960 <ferror_unlocked@plt>:
  401960:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #64]
  401968:	add	x16, x16, #0x40
  40196c:	br	x17

0000000000401970 <__cxa_atexit@plt>:
  401970:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #72]
  401978:	add	x16, x16, #0x48
  40197c:	br	x17

0000000000401980 <iswcntrl@plt>:
  401980:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #80]
  401988:	add	x16, x16, #0x50
  40198c:	br	x17

0000000000401990 <setvbuf@plt>:
  401990:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #88]
  401998:	add	x16, x16, #0x58
  40199c:	br	x17

00000000004019a0 <lseek@plt>:
  4019a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #96]
  4019a8:	add	x16, x16, #0x60
  4019ac:	br	x17

00000000004019b0 <__fpending@plt>:
  4019b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #104]
  4019b8:	add	x16, x16, #0x68
  4019bc:	br	x17

00000000004019c0 <fileno@plt>:
  4019c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #112]
  4019c8:	add	x16, x16, #0x70
  4019cc:	br	x17

00000000004019d0 <fclose@plt>:
  4019d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #120]
  4019d8:	add	x16, x16, #0x78
  4019dc:	br	x17

00000000004019e0 <iswspace@plt>:
  4019e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #128]
  4019e8:	add	x16, x16, #0x80
  4019ec:	br	x17

00000000004019f0 <nl_langinfo@plt>:
  4019f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #136]
  4019f8:	add	x16, x16, #0x88
  4019fc:	br	x17

0000000000401a00 <fopen@plt>:
  401a00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #144]
  401a08:	add	x16, x16, #0x90
  401a0c:	br	x17

0000000000401a10 <malloc@plt>:
  401a10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #152]
  401a18:	add	x16, x16, #0x98
  401a1c:	br	x17

0000000000401a20 <wcwidth@plt>:
  401a20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #160]
  401a28:	add	x16, x16, #0xa0
  401a2c:	br	x17

0000000000401a30 <getdelim@plt>:
  401a30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #168]
  401a38:	add	x16, x16, #0xa8
  401a3c:	br	x17

0000000000401a40 <open@plt>:
  401a40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #176]
  401a48:	add	x16, x16, #0xb0
  401a4c:	br	x17

0000000000401a50 <strncmp@plt>:
  401a50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #184]
  401a58:	add	x16, x16, #0xb8
  401a5c:	br	x17

0000000000401a60 <bindtextdomain@plt>:
  401a60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #192]
  401a68:	add	x16, x16, #0xc0
  401a6c:	br	x17

0000000000401a70 <__libc_start_main@plt>:
  401a70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #200]
  401a78:	add	x16, x16, #0xc8
  401a7c:	br	x17

0000000000401a80 <fgetc@plt>:
  401a80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #208]
  401a88:	add	x16, x16, #0xd0
  401a8c:	br	x17

0000000000401a90 <__printf_chk@plt>:
  401a90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #216]
  401a98:	add	x16, x16, #0xd8
  401a9c:	br	x17

0000000000401aa0 <memset@plt>:
  401aa0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #224]
  401aa8:	add	x16, x16, #0xe0
  401aac:	br	x17

0000000000401ab0 <putchar_unlocked@plt>:
  401ab0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #232]
  401ab8:	add	x16, x16, #0xe8
  401abc:	br	x17

0000000000401ac0 <calloc@plt>:
  401ac0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #240]
  401ac8:	add	x16, x16, #0xf0
  401acc:	br	x17

0000000000401ad0 <bcmp@plt>:
  401ad0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #248]
  401ad8:	add	x16, x16, #0xf8
  401adc:	br	x17

0000000000401ae0 <realloc@plt>:
  401ae0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #256]
  401ae8:	add	x16, x16, #0x100
  401aec:	br	x17

0000000000401af0 <getpagesize@plt>:
  401af0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #264]
  401af8:	add	x16, x16, #0x108
  401afc:	br	x17

0000000000401b00 <close@plt>:
  401b00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #272]
  401b08:	add	x16, x16, #0x110
  401b0c:	br	x17

0000000000401b10 <strrchr@plt>:
  401b10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #280]
  401b18:	add	x16, x16, #0x118
  401b1c:	br	x17

0000000000401b20 <__gmon_start__@plt>:
  401b20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #288]
  401b28:	add	x16, x16, #0x120
  401b2c:	br	x17

0000000000401b30 <btowc@plt>:
  401b30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #296]
  401b38:	add	x16, x16, #0x128
  401b3c:	br	x17

0000000000401b40 <abort@plt>:
  401b40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #304]
  401b48:	add	x16, x16, #0x130
  401b4c:	br	x17

0000000000401b50 <posix_fadvise@plt>:
  401b50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #312]
  401b58:	add	x16, x16, #0x138
  401b5c:	br	x17

0000000000401b60 <mbsinit@plt>:
  401b60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #320]
  401b68:	add	x16, x16, #0x140
  401b6c:	br	x17

0000000000401b70 <feof@plt>:
  401b70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #328]
  401b78:	add	x16, x16, #0x148
  401b7c:	br	x17

0000000000401b80 <textdomain@plt>:
  401b80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #336]
  401b88:	add	x16, x16, #0x150
  401b8c:	br	x17

0000000000401b90 <getopt_long@plt>:
  401b90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #344]
  401b98:	add	x16, x16, #0x158
  401b9c:	br	x17

0000000000401ba0 <__fprintf_chk@plt>:
  401ba0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #352]
  401ba8:	add	x16, x16, #0x160
  401bac:	br	x17

0000000000401bb0 <strcmp@plt>:
  401bb0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #360]
  401bb8:	add	x16, x16, #0x168
  401bbc:	br	x17

0000000000401bc0 <__ctype_b_loc@plt>:
  401bc0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #368]
  401bc8:	add	x16, x16, #0x170
  401bcc:	br	x17

0000000000401bd0 <fseeko@plt>:
  401bd0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #376]
  401bd8:	add	x16, x16, #0x178
  401bdc:	br	x17

0000000000401be0 <free@plt>:
  401be0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #384]
  401be8:	add	x16, x16, #0x180
  401bec:	br	x17

0000000000401bf0 <__ctype_get_mb_cur_max@plt>:
  401bf0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #392]
  401bf8:	add	x16, x16, #0x188
  401bfc:	br	x17

0000000000401c00 <strchr@plt>:
  401c00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #400]
  401c08:	add	x16, x16, #0x190
  401c0c:	br	x17

0000000000401c10 <fflush@plt>:
  401c10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #408]
  401c18:	add	x16, x16, #0x198
  401c1c:	br	x17

0000000000401c20 <read@plt>:
  401c20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #416]
  401c28:	add	x16, x16, #0x1a0
  401c2c:	br	x17

0000000000401c30 <memchr@plt>:
  401c30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #424]
  401c38:	add	x16, x16, #0x1a8
  401c3c:	br	x17

0000000000401c40 <sysconf@plt>:
  401c40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #432]
  401c48:	add	x16, x16, #0x1b0
  401c4c:	br	x17

0000000000401c50 <__fxstat@plt>:
  401c50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #440]
  401c58:	add	x16, x16, #0x1b8
  401c5c:	br	x17

0000000000401c60 <dcgettext@plt>:
  401c60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #448]
  401c68:	add	x16, x16, #0x1c0
  401c6c:	br	x17

0000000000401c70 <fputs_unlocked@plt>:
  401c70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #456]
  401c78:	add	x16, x16, #0x1c8
  401c7c:	br	x17

0000000000401c80 <__freading@plt>:
  401c80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #464]
  401c88:	add	x16, x16, #0x1d0
  401c8c:	br	x17

0000000000401c90 <iswprint@plt>:
  401c90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #472]
  401c98:	add	x16, x16, #0x1d8
  401c9c:	br	x17

0000000000401ca0 <__assert_fail@plt>:
  401ca0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #480]
  401ca8:	add	x16, x16, #0x1e0
  401cac:	br	x17

0000000000401cb0 <__errno_location@plt>:
  401cb0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #488]
  401cb8:	add	x16, x16, #0x1e8
  401cbc:	br	x17

0000000000401cc0 <getenv@plt>:
  401cc0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #496]
  401cc8:	add	x16, x16, #0x1f0
  401ccc:	br	x17

0000000000401cd0 <__xstat@plt>:
  401cd0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #504]
  401cd8:	add	x16, x16, #0x1f8
  401cdc:	br	x17

0000000000401ce0 <__memmove_chk@plt>:
  401ce0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #512]
  401ce8:	add	x16, x16, #0x200
  401cec:	br	x17

0000000000401cf0 <setlocale@plt>:
  401cf0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cf4:	ldr	x17, [x16, #520]
  401cf8:	add	x16, x16, #0x208
  401cfc:	br	x17

0000000000401d00 <ferror@plt>:
  401d00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401d04:	ldr	x17, [x16, #528]
  401d08:	add	x16, x16, #0x210
  401d0c:	br	x17

Disassembly of section .text:

0000000000401d10 <_obstack_begin@@Base-0x3f98>:
  401d10:	mov	x29, #0x0                   	// #0
  401d14:	mov	x30, #0x0                   	// #0
  401d18:	mov	x5, x0
  401d1c:	ldr	x1, [sp]
  401d20:	add	x2, sp, #0x8
  401d24:	mov	x6, sp
  401d28:	movz	x0, #0x0, lsl #48
  401d2c:	movk	x0, #0x0, lsl #32
  401d30:	movk	x0, #0x40, lsl #16
  401d34:	movk	x0, #0x2070
  401d38:	movz	x3, #0x0, lsl #48
  401d3c:	movk	x3, #0x0, lsl #32
  401d40:	movk	x3, #0x40, lsl #16
  401d44:	movk	x3, #0x6148
  401d48:	movz	x4, #0x0, lsl #48
  401d4c:	movk	x4, #0x0, lsl #32
  401d50:	movk	x4, #0x40, lsl #16
  401d54:	movk	x4, #0x61c8
  401d58:	bl	401a70 <__libc_start_main@plt>
  401d5c:	bl	401b40 <abort@plt>
  401d60:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x11040>
  401d64:	ldr	x0, [x0, #4064]
  401d68:	cbz	x0, 401d70 <ferror@plt+0x70>
  401d6c:	b	401b20 <__gmon_start__@plt>
  401d70:	ret
  401d74:	nop
  401d78:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12040>
  401d7c:	add	x0, x0, #0x298
  401d80:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x12040>
  401d84:	add	x1, x1, #0x298
  401d88:	cmp	x1, x0
  401d8c:	b.eq	401da4 <ferror@plt+0xa4>  // b.none
  401d90:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401d94:	ldr	x1, [x1, #536]
  401d98:	cbz	x1, 401da4 <ferror@plt+0xa4>
  401d9c:	mov	x16, x1
  401da0:	br	x16
  401da4:	ret
  401da8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12040>
  401dac:	add	x0, x0, #0x298
  401db0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x12040>
  401db4:	add	x1, x1, #0x298
  401db8:	sub	x1, x1, x0
  401dbc:	lsr	x2, x1, #63
  401dc0:	add	x1, x2, x1, asr #3
  401dc4:	cmp	xzr, x1, asr #1
  401dc8:	asr	x1, x1, #1
  401dcc:	b.eq	401de4 <ferror@plt+0xe4>  // b.none
  401dd0:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  401dd4:	ldr	x2, [x2, #544]
  401dd8:	cbz	x2, 401de4 <ferror@plt+0xe4>
  401ddc:	mov	x16, x2
  401de0:	br	x16
  401de4:	ret
  401de8:	stp	x29, x30, [sp, #-32]!
  401dec:	mov	x29, sp
  401df0:	str	x19, [sp, #16]
  401df4:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x12040>
  401df8:	ldrb	w0, [x19, #720]
  401dfc:	cbnz	w0, 401e0c <ferror@plt+0x10c>
  401e00:	bl	401d78 <ferror@plt+0x78>
  401e04:	mov	w0, #0x1                   	// #1
  401e08:	strb	w0, [x19, #720]
  401e0c:	ldr	x19, [sp, #16]
  401e10:	ldp	x29, x30, [sp], #32
  401e14:	ret
  401e18:	b	401da8 <ferror@plt+0xa8>
  401e1c:	sub	sp, sp, #0xa0
  401e20:	stp	x20, x19, [sp, #144]
  401e24:	mov	w19, w0
  401e28:	stp	x29, x30, [sp, #112]
  401e2c:	stp	x22, x21, [sp, #128]
  401e30:	add	x29, sp, #0x70
  401e34:	cbnz	w0, 402034 <ferror@plt+0x334>
  401e38:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401e3c:	add	x1, x1, #0x3f4
  401e40:	mov	w2, #0x5                   	// #5
  401e44:	mov	x0, xzr
  401e48:	bl	401c60 <dcgettext@plt>
  401e4c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  401e50:	ldr	x2, [x8, #816]
  401e54:	mov	x1, x0
  401e58:	mov	w0, #0x1                   	// #1
  401e5c:	mov	x3, x2
  401e60:	bl	401a90 <__printf_chk@plt>
  401e64:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401e68:	add	x1, x1, #0x43b
  401e6c:	mov	w2, #0x5                   	// #5
  401e70:	mov	x0, xzr
  401e74:	bl	401c60 <dcgettext@plt>
  401e78:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x12040>
  401e7c:	ldr	x1, [x22, #696]
  401e80:	bl	401c70 <fputs_unlocked@plt>
  401e84:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401e88:	add	x1, x1, #0x948
  401e8c:	mov	w2, #0x5                   	// #5
  401e90:	mov	x0, xzr
  401e94:	bl	401c60 <dcgettext@plt>
  401e98:	ldr	x1, [x22, #696]
  401e9c:	bl	401c70 <fputs_unlocked@plt>
  401ea0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401ea4:	add	x1, x1, #0x4f3
  401ea8:	mov	w2, #0x5                   	// #5
  401eac:	mov	x0, xzr
  401eb0:	bl	401c60 <dcgettext@plt>
  401eb4:	ldr	x1, [x22, #696]
  401eb8:	bl	401c70 <fputs_unlocked@plt>
  401ebc:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401ec0:	add	x1, x1, #0x620
  401ec4:	mov	w2, #0x5                   	// #5
  401ec8:	mov	x0, xzr
  401ecc:	bl	401c60 <dcgettext@plt>
  401ed0:	ldr	x1, [x22, #696]
  401ed4:	bl	401c70 <fputs_unlocked@plt>
  401ed8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401edc:	add	x1, x1, #0x74d
  401ee0:	mov	w2, #0x5                   	// #5
  401ee4:	mov	x0, xzr
  401ee8:	bl	401c60 <dcgettext@plt>
  401eec:	ldr	x1, [x22, #696]
  401ef0:	bl	401c70 <fputs_unlocked@plt>
  401ef4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401ef8:	add	x1, x1, #0x77a
  401efc:	mov	w2, #0x5                   	// #5
  401f00:	mov	x0, xzr
  401f04:	bl	401c60 <dcgettext@plt>
  401f08:	ldr	x1, [x22, #696]
  401f0c:	bl	401c70 <fputs_unlocked@plt>
  401f10:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401f14:	add	x1, x1, #0x358
  401f18:	mov	x0, sp
  401f1c:	mov	w2, #0x70                  	// #112
  401f20:	mov	x21, sp
  401f24:	bl	4018f0 <memcpy@plt>
  401f28:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401f2c:	adrp	x20, 406000 <_obstack_memory_used@@Base+0x40>
  401f30:	add	x1, x1, #0x980
  401f34:	add	x20, x20, #0x7b0
  401f38:	mov	x0, x20
  401f3c:	bl	401bb0 <strcmp@plt>
  401f40:	cbz	w0, 401f4c <ferror@plt+0x24c>
  401f44:	ldr	x1, [x21, #16]!
  401f48:	cbnz	x1, 401f38 <ferror@plt+0x238>
  401f4c:	ldr	x8, [x21, #8]
  401f50:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401f54:	add	x1, x1, #0x9df
  401f58:	mov	w2, #0x5                   	// #5
  401f5c:	cmp	x8, #0x0
  401f60:	mov	x0, xzr
  401f64:	csel	x21, x20, x8, eq  // eq = none
  401f68:	bl	401c60 <dcgettext@plt>
  401f6c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  401f70:	adrp	x3, 406000 <_obstack_memory_used@@Base+0x40>
  401f74:	mov	x1, x0
  401f78:	add	x2, x2, #0x7db
  401f7c:	add	x3, x3, #0x9f6
  401f80:	mov	w0, #0x1                   	// #1
  401f84:	bl	401a90 <__printf_chk@plt>
  401f88:	mov	w0, #0x5                   	// #5
  401f8c:	mov	x1, xzr
  401f90:	bl	401cf0 <setlocale@plt>
  401f94:	cbz	x0, 401fc8 <ferror@plt+0x2c8>
  401f98:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401f9c:	add	x1, x1, #0xa1e
  401fa0:	mov	w2, #0x3                   	// #3
  401fa4:	bl	401a50 <strncmp@plt>
  401fa8:	cbz	w0, 401fc8 <ferror@plt+0x2c8>
  401fac:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401fb0:	add	x1, x1, #0xa22
  401fb4:	mov	w2, #0x5                   	// #5
  401fb8:	mov	x0, xzr
  401fbc:	bl	401c60 <dcgettext@plt>
  401fc0:	ldr	x1, [x22, #696]
  401fc4:	bl	401c70 <fputs_unlocked@plt>
  401fc8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401fcc:	add	x1, x1, #0xa69
  401fd0:	mov	w2, #0x5                   	// #5
  401fd4:	mov	x0, xzr
  401fd8:	bl	401c60 <dcgettext@plt>
  401fdc:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  401fe0:	mov	x1, x0
  401fe4:	add	x2, x2, #0x9f6
  401fe8:	mov	w0, #0x1                   	// #1
  401fec:	mov	x3, x20
  401ff0:	bl	401a90 <__printf_chk@plt>
  401ff4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  401ff8:	add	x1, x1, #0xa84
  401ffc:	mov	w2, #0x5                   	// #5
  402000:	mov	x0, xzr
  402004:	bl	401c60 <dcgettext@plt>
  402008:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  40200c:	adrp	x9, 406000 <_obstack_memory_used@@Base+0x40>
  402010:	add	x8, x8, #0xdd3
  402014:	add	x9, x9, #0x99c
  402018:	cmp	x21, x20
  40201c:	mov	x1, x0
  402020:	csel	x3, x9, x8, eq  // eq = none
  402024:	mov	w0, #0x1                   	// #1
  402028:	mov	x2, x21
  40202c:	bl	401a90 <__printf_chk@plt>
  402030:	b	402068 <ferror@plt+0x368>
  402034:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402038:	ldr	x20, [x8, #672]
  40203c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402040:	add	x1, x1, #0x3cd
  402044:	mov	w2, #0x5                   	// #5
  402048:	mov	x0, xzr
  40204c:	bl	401c60 <dcgettext@plt>
  402050:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402054:	ldr	x3, [x8, #816]
  402058:	mov	x2, x0
  40205c:	mov	w1, #0x1                   	// #1
  402060:	mov	x0, x20
  402064:	bl	401ba0 <__fprintf_chk@plt>
  402068:	mov	w0, w19
  40206c:	bl	401930 <exit@plt>
  402070:	stp	d9, d8, [sp, #-112]!
  402074:	stp	x29, x30, [sp, #16]
  402078:	stp	x28, x27, [sp, #32]
  40207c:	stp	x26, x25, [sp, #48]
  402080:	stp	x24, x23, [sp, #64]
  402084:	stp	x22, x21, [sp, #80]
  402088:	stp	x20, x19, [sp, #96]
  40208c:	mov	x29, sp
  402090:	sub	sp, sp, #0x1b0
  402094:	ldr	x8, [x1]
  402098:	mov	w21, w0
  40209c:	mov	x20, x1
  4020a0:	mov	x0, x8
  4020a4:	bl	4038ec <ferror@plt+0x1bec>
  4020a8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4020ac:	add	x1, x1, #0xdd3
  4020b0:	mov	w0, #0x6                   	// #6
  4020b4:	bl	401cf0 <setlocale@plt>
  4020b8:	adrp	x19, 406000 <_obstack_memory_used@@Base+0x40>
  4020bc:	add	x19, x19, #0x7df
  4020c0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4020c4:	add	x1, x1, #0x7b3
  4020c8:	mov	x0, x19
  4020cc:	bl	401a60 <bindtextdomain@plt>
  4020d0:	mov	x0, x19
  4020d4:	bl	401b80 <textdomain@plt>
  4020d8:	adrp	x0, 403000 <ferror@plt+0x1300>
  4020dc:	add	x0, x0, #0x5ec
  4020e0:	bl	4061d0 <_obstack_memory_used@@Base+0x210>
  4020e4:	bl	401af0 <getpagesize@plt>
  4020e8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4020ec:	ldr	x8, [x8, #696]
  4020f0:	sxtw	x9, w0
  4020f4:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x12040>
  4020f8:	mov	w2, #0x1                   	// #1
  4020fc:	mov	x0, x8
  402100:	mov	x1, xzr
  402104:	mov	x3, xzr
  402108:	str	x9, [x10, #728]
  40210c:	mov	w24, #0x1                   	// #1
  402110:	bl	401990 <setvbuf@plt>
  402114:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x40>
  402118:	add	x0, x0, #0x7c5
  40211c:	bl	401cc0 <getenv@plt>
  402120:	cmp	x0, #0x0
  402124:	adrp	x22, 406000 <_obstack_memory_used@@Base+0x40>
  402128:	adrp	x23, 406000 <_obstack_memory_used@@Base+0x40>
  40212c:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x12040>
  402130:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x12040>
  402134:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x12040>
  402138:	mov	x19, xzr
  40213c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402140:	adrp	x15, 418000 <_obstack_memory_used@@Base+0x12040>
  402144:	adrp	x16, 418000 <_obstack_memory_used@@Base+0x12040>
  402148:	adrp	x18, 418000 <_obstack_memory_used@@Base+0x12040>
  40214c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12040>
  402150:	adrp	x17, 418000 <_obstack_memory_used@@Base+0x12040>
  402154:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x12040>
  402158:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x12040>
  40215c:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x12040>
  402160:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x12040>
  402164:	adrp	x14, 418000 <_obstack_memory_used@@Base+0x12040>
  402168:	add	x22, x22, #0x7d5
  40216c:	add	x23, x23, #0x238
  402170:	add	x27, x27, #0x2e4
  402174:	add	x26, x26, #0x2e2
  402178:	cset	w9, ne  // ne = any
  40217c:	add	x25, x25, #0x2e3
  402180:	adrp	x28, 418000 <_obstack_memory_used@@Base+0x12040>
  402184:	strb	w9, [x8, #736]
  402188:	strb	wzr, [x15, #737]
  40218c:	strb	wzr, [x16, #738]
  402190:	strb	wzr, [x18, #739]
  402194:	strb	wzr, [x0, #740]
  402198:	strb	wzr, [x17, #741]
  40219c:	str	xzr, [x10, #744]
  4021a0:	str	xzr, [x11, #752]
  4021a4:	str	xzr, [x12, #760]
  4021a8:	str	xzr, [x13, #768]
  4021ac:	str	xzr, [x14, #776]
  4021b0:	mov	w0, w21
  4021b4:	mov	x1, x20
  4021b8:	mov	x2, x22
  4021bc:	mov	x3, x23
  4021c0:	mov	x4, xzr
  4021c4:	bl	401b90 <getopt_long@plt>
  4021c8:	cmp	w0, #0x6b
  4021cc:	b.le	4021e8 <ferror@plt+0x4e8>
  4021d0:	cmp	w0, #0x76
  4021d4:	b.gt	402204 <ferror@plt+0x504>
  4021d8:	cmp	w0, #0x6c
  4021dc:	b.ne	402214 <ferror@plt+0x514>  // b.any
  4021e0:	mov	x8, x27
  4021e4:	b	402244 <ferror@plt+0x544>
  4021e8:	cmp	w0, #0x4b
  4021ec:	b.le	40224c <ferror@plt+0x54c>
  4021f0:	cmp	w0, #0x4c
  4021f4:	b.ne	402234 <ferror@plt+0x534>  // b.any
  4021f8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4021fc:	add	x8, x8, #0x2e5
  402200:	b	402244 <ferror@plt+0x544>
  402204:	cmp	w0, #0x77
  402208:	b.ne	402224 <ferror@plt+0x524>  // b.any
  40220c:	mov	x8, x25
  402210:	b	402244 <ferror@plt+0x544>
  402214:	cmp	w0, #0x6d
  402218:	b.ne	4029f4 <ferror@plt+0xcf4>  // b.any
  40221c:	mov	x8, x26
  402220:	b	402244 <ferror@plt+0x544>
  402224:	cmp	w0, #0x100
  402228:	b.ne	4029f4 <ferror@plt+0xcf4>  // b.any
  40222c:	ldr	x19, [x28, #680]
  402230:	b	4021b0 <ferror@plt+0x4b0>
  402234:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402238:	cmp	w0, #0x63
  40223c:	add	x8, x8, #0x2e1
  402240:	b.ne	4029f4 <ferror@plt+0xcf4>  // b.any
  402244:	strb	w24, [x8]
  402248:	b	4021b0 <ferror@plt+0x4b0>
  40224c:	cmn	w0, #0x1
  402250:	b.ne	402900 <ferror@plt+0xc00>  // b.any
  402254:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x12040>
  402258:	ldrb	w8, [x23, #740]
  40225c:	tbnz	w8, #0, 4022a8 <ferror@plt+0x5a8>
  402260:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402264:	ldrb	w8, [x8, #739]
  402268:	tbnz	w8, #0, 4022a8 <ferror@plt+0x5a8>
  40226c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402270:	ldrb	w8, [x8, #738]
  402274:	tbnz	w8, #0, 4022a8 <ferror@plt+0x5a8>
  402278:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40227c:	ldrb	w8, [x8, #737]
  402280:	tbnz	w8, #0, 4022a8 <ferror@plt+0x5a8>
  402284:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402288:	ldrb	w8, [x8, #741]
  40228c:	tbnz	w8, #0, 4022a8 <ferror@plt+0x5a8>
  402290:	mov	w8, #0x1                   	// #1
  402294:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  402298:	strb	w8, [x9, #737]
  40229c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  4022a0:	strb	w8, [x9, #739]
  4022a4:	strb	w8, [x23, #740]
  4022a8:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x12040>
  4022ac:	ldrsw	x8, [x22, #688]
  4022b0:	cbz	x19, 402328 <ferror@plt+0x628>
  4022b4:	cmp	w8, w21
  4022b8:	b.lt	402984 <ferror@plt+0xc84>  // b.tstop
  4022bc:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4022c0:	add	x1, x1, #0xb76
  4022c4:	mov	x0, x19
  4022c8:	bl	401bb0 <strcmp@plt>
  4022cc:	cbz	w0, 402354 <ferror@plt+0x654>
  4022d0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4022d4:	add	x1, x1, #0x890
  4022d8:	mov	x0, x19
  4022dc:	bl	401a00 <fopen@plt>
  4022e0:	mov	x20, x0
  4022e4:	cbnz	x0, 40235c <ferror@plt+0x65c>
  4022e8:	bl	401cb0 <__errno_location@plt>
  4022ec:	ldr	w20, [x0]
  4022f0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4022f4:	add	x1, x1, #0x849
  4022f8:	mov	w2, #0x5                   	// #5
  4022fc:	mov	x0, xzr
  402300:	bl	401c60 <dcgettext@plt>
  402304:	mov	x21, x0
  402308:	mov	w0, #0x4                   	// #4
  40230c:	mov	x1, x19
  402310:	bl	404b54 <ferror@plt+0x2e54>
  402314:	mov	x3, x0
  402318:	mov	w0, #0x1                   	// #1
  40231c:	mov	w1, w20
  402320:	mov	x2, x21
  402324:	bl	401940 <error@plt>
  402328:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x12040>
  40232c:	add	x9, x20, x8, lsl #3
  402330:	add	x10, x10, #0x310
  402334:	subs	w8, w21, w8
  402338:	csel	x22, x9, x10, gt
  40233c:	csinc	w8, w8, wzr, gt
  402340:	mov	x0, x22
  402344:	sxtw	x26, w8
  402348:	bl	403470 <ferror@plt+0x1770>
  40234c:	mov	x20, x0
  402350:	b	4023c8 <ferror@plt+0x6c8>
  402354:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402358:	ldr	x20, [x8, #704]
  40235c:	mov	x0, x20
  402360:	bl	4019c0 <fileno@plt>
  402364:	add	x1, sp, #0x8
  402368:	bl	4061f0 <_obstack_memory_used@@Base+0x230>
  40236c:	cbnz	w0, 4023b4 <ferror@plt+0x6b4>
  402370:	ldr	w8, [sp, #24]
  402374:	and	w8, w8, #0xf000
  402378:	cmp	w8, #0x8, lsl #12
  40237c:	b.ne	4023b4 <ferror@plt+0x6b4>  // b.any
  402380:	ldr	d0, [sp, #56]
  402384:	scvtf	d8, d0
  402388:	bl	403868 <ferror@plt+0x1b68>
  40238c:	fmov	d9, #5.000000000000000000e-01
  402390:	mov	x8, #0x4164000000000000    	// #4711891110136381440
  402394:	fmul	d1, d0, d9
  402398:	fmov	d0, x8
  40239c:	fcmp	d1, d0
  4023a0:	b.gt	4023ac <ferror@plt+0x6ac>
  4023a4:	bl	403868 <ferror@plt+0x1b68>
  4023a8:	fmul	d0, d0, d9
  4023ac:	fcmp	d0, d8
  4023b0:	b.ge	4028c0 <ferror@plt+0xbc0>  // b.tcont
  4023b4:	mov	x0, x20
  4023b8:	bl	4034a0 <ferror@plt+0x17a0>
  4023bc:	mov	x20, x0
  4023c0:	mov	x22, xzr
  4023c4:	mov	x26, xzr
  4023c8:	mov	w10, wzr
  4023cc:	cbz	x20, 402960 <ferror@plt+0xc60>
  4023d0:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  4023d4:	cmp	x26, #0x0
  4023d8:	movk	x9, #0xf0f1
  4023dc:	csinc	x8, x26, xzr, ne  // ne = any
  4023e0:	movk	x9, #0xf0, lsl #48
  4023e4:	cmp	x8, x9
  4023e8:	b.cs	402960 <ferror@plt+0xc60>  // b.hs, b.nlast
  4023ec:	add	x8, x8, x8, lsl #4
  4023f0:	lsl	x0, x8, #3
  4023f4:	str	w10, [sp, #4]
  4023f8:	bl	4057f4 <ferror@plt+0x3af4>
  4023fc:	mov	x21, x0
  402400:	cbz	x26, 402448 <ferror@plt+0x748>
  402404:	cmp	x26, #0x1
  402408:	b.ne	402454 <ferror@plt+0x754>  // b.any
  40240c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  402410:	ldrb	w8, [x23, #740]
  402414:	ldrb	w9, [x9, #739]
  402418:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x12040>
  40241c:	ldrb	w10, [x10, #738]
  402420:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x12040>
  402424:	ldrb	w11, [x11, #737]
  402428:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x12040>
  40242c:	ldrb	w12, [x12, #741]
  402430:	add	w8, w9, w8
  402434:	add	w8, w8, w10
  402438:	add	w8, w8, w11
  40243c:	add	w8, w8, w12
  402440:	cmp	w8, #0x1
  402444:	b.ne	402454 <ferror@plt+0x754>  // b.any
  402448:	mov	w8, #0x1                   	// #1
  40244c:	str	w8, [x21]
  402450:	b	4024ac <ferror@plt+0x7ac>
  402454:	adrp	x24, 406000 <_obstack_memory_used@@Base+0x40>
  402458:	add	x23, x21, #0x8
  40245c:	add	x24, x24, #0xb76
  402460:	mov	x27, x26
  402464:	ldr	x25, [x22]
  402468:	cbz	x25, 40248c <ferror@plt+0x78c>
  40246c:	mov	x0, x25
  402470:	mov	x1, x24
  402474:	bl	401bb0 <strcmp@plt>
  402478:	cbz	w0, 40248c <ferror@plt+0x78c>
  40247c:	mov	x0, x25
  402480:	mov	x1, x23
  402484:	bl	4061e0 <_obstack_memory_used@@Base+0x220>
  402488:	b	402498 <ferror@plt+0x798>
  40248c:	mov	w0, wzr
  402490:	mov	x1, x23
  402494:	bl	4061f0 <_obstack_memory_used@@Base+0x230>
  402498:	stur	w0, [x23, #-8]
  40249c:	add	x23, x23, #0x88
  4024a0:	subs	x27, x27, #0x1
  4024a4:	add	x22, x22, #0x8
  4024a8:	b.ne	402464 <ferror@plt+0x764>  // b.any
  4024ac:	cbz	x26, 4024bc <ferror@plt+0x7bc>
  4024b0:	ldr	w12, [x21]
  4024b4:	cmp	w12, #0x0
  4024b8:	b.le	4024c4 <ferror@plt+0x7c4>
  4024bc:	mov	w8, #0x1                   	// #1
  4024c0:	b	40253c <ferror@plt+0x83c>
  4024c4:	mov	x9, xzr
  4024c8:	add	x10, x21, #0x88
  4024cc:	sub	x11, x26, #0x1
  4024d0:	mov	w8, #0x1                   	// #1
  4024d4:	cbnz	w12, 4024f0 <ferror@plt+0x7f0>
  4024d8:	ldur	w12, [x10, #-112]
  4024dc:	and	w12, w12, #0xf000
  4024e0:	cmp	w12, #0x8, lsl #12
  4024e4:	b.ne	402504 <ferror@plt+0x804>  // b.any
  4024e8:	ldur	x12, [x10, #-80]
  4024ec:	add	x9, x12, x9
  4024f0:	cbz	x11, 40250c <ferror@plt+0x80c>
  4024f4:	ldr	w12, [x10], #136
  4024f8:	sub	x11, x11, #0x1
  4024fc:	cbnz	w12, 4024f0 <ferror@plt+0x7f0>
  402500:	b	4024d8 <ferror@plt+0x7d8>
  402504:	mov	w8, #0x7                   	// #7
  402508:	cbnz	x11, 4024f4 <ferror@plt+0x7f4>
  40250c:	mov	w10, #0x1                   	// #1
  402510:	cmp	x9, #0xa
  402514:	b.cc	402534 <ferror@plt+0x834>  // b.lo, b.ul, b.last
  402518:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  40251c:	movk	x11, #0xcccd
  402520:	umulh	x12, x9, x11
  402524:	cmp	x9, #0x63
  402528:	lsr	x9, x12, #3
  40252c:	add	w10, w10, #0x1
  402530:	b.hi	402520 <ferror@plt+0x820>  // b.pmore
  402534:	cmp	w10, w8
  402538:	csel	w8, w8, w10, lt  // lt = tstop
  40253c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  402540:	add	x1, sp, #0x8
  402544:	mov	x0, x20
  402548:	str	w8, [x9, #792]
  40254c:	bl	4034d8 <ferror@plt+0x17d8>
  402550:	cbz	x0, 402758 <ferror@plt+0xa58>
  402554:	adrp	x22, 406000 <_obstack_memory_used@@Base+0x40>
  402558:	mov	x27, x0
  40255c:	mov	x25, xzr
  402560:	add	x22, x22, #0xb76
  402564:	mov	w24, #0x1                   	// #1
  402568:	cbz	x19, 40258c <ferror@plt+0x88c>
  40256c:	mov	x0, x19
  402570:	mov	x1, x22
  402574:	bl	401bb0 <strcmp@plt>
  402578:	cbnz	w0, 40258c <ferror@plt+0x88c>
  40257c:	mov	x0, x27
  402580:	mov	x1, x22
  402584:	bl	401bb0 <strcmp@plt>
  402588:	cbz	w0, 402718 <ferror@plt+0xa18>
  40258c:	mov	w8, wzr
  402590:	ldrb	w9, [x27]
  402594:	cbz	w9, 40262c <ferror@plt+0x92c>
  402598:	tbnz	w8, #0, 4026b4 <ferror@plt+0x9b4>
  40259c:	cmp	x26, #0x0
  4025a0:	csel	x8, xzr, x25, eq  // eq = none
  4025a4:	mov	w9, #0x88                  	// #136
  4025a8:	mov	x0, x27
  4025ac:	mov	x1, x22
  4025b0:	madd	x28, x8, x9, x21
  4025b4:	bl	401bb0 <strcmp@plt>
  4025b8:	cbz	w0, 4026e8 <ferror@plt+0x9e8>
  4025bc:	mov	x0, x27
  4025c0:	mov	w1, wzr
  4025c4:	bl	401a40 <open@plt>
  4025c8:	cmn	w0, #0x1
  4025cc:	b.eq	4025f4 <ferror@plt+0x8f4>  // b.none
  4025d0:	mov	x1, x27
  4025d4:	mov	x2, x28
  4025d8:	mov	x3, xzr
  4025dc:	mov	w23, w0
  4025e0:	bl	402c0c <ferror@plt+0xf0c>
  4025e4:	mov	w28, w0
  4025e8:	mov	w0, w23
  4025ec:	bl	401b00 <close@plt>
  4025f0:	cbz	w0, 402708 <ferror@plt+0xa08>
  4025f4:	bl	401cb0 <__errno_location@plt>
  4025f8:	ldr	w23, [x0]
  4025fc:	mov	w1, #0x3                   	// #3
  402600:	mov	w0, wzr
  402604:	mov	x2, x27
  402608:	bl	404d18 <ferror@plt+0x3018>
  40260c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  402610:	mov	x3, x0
  402614:	mov	w0, wzr
  402618:	mov	w1, w23
  40261c:	add	x2, x2, #0xb10
  402620:	bl	401940 <error@plt>
  402624:	mov	w28, wzr
  402628:	b	402708 <ferror@plt+0xa08>
  40262c:	cbz	x19, 402688 <ferror@plt+0x988>
  402630:	mov	x0, x20
  402634:	bl	403580 <ferror@plt+0x1880>
  402638:	mov	x23, x0
  40263c:	mov	w1, #0x3                   	// #3
  402640:	mov	w0, wzr
  402644:	mov	x2, x19
  402648:	bl	404d18 <ferror@plt+0x3018>
  40264c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402650:	mov	x27, x0
  402654:	mov	w2, #0x5                   	// #5
  402658:	mov	x0, xzr
  40265c:	add	x1, x1, #0x919
  402660:	bl	401c60 <dcgettext@plt>
  402664:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  402668:	mov	x5, x0
  40266c:	mov	w0, wzr
  402670:	mov	w1, wzr
  402674:	add	x2, x2, #0x937
  402678:	mov	x3, x27
  40267c:	mov	x4, x23
  402680:	bl	401940 <error@plt>
  402684:	b	4026b4 <ferror@plt+0x9b4>
  402688:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40268c:	mov	w2, #0x5                   	// #5
  402690:	mov	x0, xzr
  402694:	add	x1, x1, #0x919
  402698:	bl	401c60 <dcgettext@plt>
  40269c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4026a0:	mov	x3, x0
  4026a4:	mov	w0, wzr
  4026a8:	mov	w1, wzr
  4026ac:	add	x2, x2, #0xb10
  4026b0:	bl	401940 <error@plt>
  4026b4:	mov	w8, wzr
  4026b8:	cbnz	x26, 4026c4 <ferror@plt+0x9c4>
  4026bc:	mov	w9, #0x1                   	// #1
  4026c0:	str	w9, [x21]
  4026c4:	cmp	w8, #0x0
  4026c8:	add	x1, sp, #0x8
  4026cc:	mov	x0, x20
  4026d0:	cset	w24, ne  // ne = any
  4026d4:	add	x25, x25, #0x1
  4026d8:	bl	4034d8 <ferror@plt+0x17d8>
  4026dc:	mov	x27, x0
  4026e0:	cbnz	x0, 402568 <ferror@plt+0x868>
  4026e4:	b	40275c <ferror@plt+0xa5c>
  4026e8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4026ec:	mov	w9, #0x1                   	// #1
  4026f0:	mov	x3, #0xffffffffffffffff    	// #-1
  4026f4:	mov	x1, x27
  4026f8:	mov	x2, x28
  4026fc:	strb	w9, [x8, #796]
  402700:	bl	402c0c <ferror@plt+0xf0c>
  402704:	mov	w28, w0
  402708:	and	w8, w24, w28
  40270c:	and	w8, w8, #0x1
  402710:	cbnz	x26, 4026c4 <ferror@plt+0x9c4>
  402714:	b	4026bc <ferror@plt+0x9bc>
  402718:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40271c:	mov	w2, #0x5                   	// #5
  402720:	mov	x0, xzr
  402724:	add	x1, x1, #0x8da
  402728:	bl	401c60 <dcgettext@plt>
  40272c:	mov	x23, x0
  402730:	mov	w0, #0x4                   	// #4
  402734:	mov	x1, x27
  402738:	bl	404b54 <ferror@plt+0x2e54>
  40273c:	mov	x3, x0
  402740:	mov	w0, wzr
  402744:	mov	w1, wzr
  402748:	mov	x2, x23
  40274c:	bl	401940 <error@plt>
  402750:	mov	w8, #0x1                   	// #1
  402754:	b	402590 <ferror@plt+0x890>
  402758:	mov	w24, #0x1                   	// #1
  40275c:	ldr	w8, [sp, #8]
  402760:	cmp	w8, #0x2
  402764:	b.eq	4027bc <ferror@plt+0xabc>  // b.none
  402768:	cmp	w8, #0x4
  40276c:	b.ne	402958 <ferror@plt+0xc58>  // b.any
  402770:	bl	401cb0 <__errno_location@plt>
  402774:	ldr	w22, [x0]
  402778:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40277c:	add	x1, x1, #0x883
  402780:	mov	w2, #0x5                   	// #5
  402784:	mov	x0, xzr
  402788:	bl	401c60 <dcgettext@plt>
  40278c:	mov	x23, x0
  402790:	mov	w1, #0x3                   	// #3
  402794:	mov	w0, wzr
  402798:	mov	x2, x19
  40279c:	bl	404d18 <ferror@plt+0x3018>
  4027a0:	mov	x3, x0
  4027a4:	mov	w0, wzr
  4027a8:	mov	w1, w22
  4027ac:	mov	x2, x23
  4027b0:	bl	401940 <error@plt>
  4027b4:	mov	w24, wzr
  4027b8:	b	4027f4 <ferror@plt+0xaf4>
  4027bc:	cbnz	x19, 4027f4 <ferror@plt+0xaf4>
  4027c0:	eor	w8, w24, #0x1
  4027c4:	tbnz	w8, #0, 4027f4 <ferror@plt+0xaf4>
  4027c8:	mov	x0, x20
  4027cc:	bl	403580 <ferror@plt+0x1880>
  4027d0:	cbnz	x0, 4027f4 <ferror@plt+0xaf4>
  4027d4:	mov	w8, #0x1                   	// #1
  4027d8:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  4027dc:	mov	x3, #0xffffffffffffffff    	// #-1
  4027e0:	mov	x1, xzr
  4027e4:	mov	x2, x21
  4027e8:	strb	w8, [x9, #796]
  4027ec:	bl	402c0c <ferror@plt+0xf0c>
  4027f0:	and	w24, w24, w0
  4027f4:	ldr	w8, [sp, #4]
  4027f8:	cbz	w8, 402804 <ferror@plt+0xb04>
  4027fc:	add	x0, sp, #0x88
  402800:	bl	40502c <ferror@plt+0x332c>
  402804:	mov	x0, x20
  402808:	bl	403580 <ferror@plt+0x1880>
  40280c:	cmp	x0, #0x2
  402810:	b.cc	40286c <ferror@plt+0xb6c>  // b.lo, b.ul, b.last
  402814:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402818:	ldr	x19, [x8, #776]
  40281c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402820:	ldr	x22, [x8, #768]
  402824:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402828:	ldr	x23, [x8, #760]
  40282c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402830:	ldr	x26, [x8, #752]
  402834:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402838:	ldr	x25, [x8, #744]
  40283c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402840:	add	x1, x1, #0x942
  402844:	mov	w2, #0x5                   	// #5
  402848:	mov	x0, xzr
  40284c:	bl	401c60 <dcgettext@plt>
  402850:	mov	x5, x0
  402854:	mov	x0, x19
  402858:	mov	x1, x22
  40285c:	mov	x2, x23
  402860:	mov	x3, x26
  402864:	mov	x4, x25
  402868:	bl	402a4c <ferror@plt+0xd4c>
  40286c:	mov	x0, x20
  402870:	bl	4035a0 <ferror@plt+0x18a0>
  402874:	mov	x0, x21
  402878:	bl	401be0 <free@plt>
  40287c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402880:	ldrb	w8, [x8, #796]
  402884:	cmp	w8, #0x1
  402888:	b.ne	402898 <ferror@plt+0xb98>  // b.any
  40288c:	mov	w0, wzr
  402890:	bl	401b00 <close@plt>
  402894:	cbnz	w0, 4029fc <ferror@plt+0xcfc>
  402898:	eor	w0, w24, #0x1
  40289c:	add	sp, sp, #0x1b0
  4028a0:	ldp	x20, x19, [sp, #96]
  4028a4:	ldp	x22, x21, [sp, #80]
  4028a8:	ldp	x24, x23, [sp, #64]
  4028ac:	ldp	x26, x25, [sp, #48]
  4028b0:	ldp	x28, x27, [sp, #32]
  4028b4:	ldp	x29, x30, [sp, #16]
  4028b8:	ldp	d9, d8, [sp], #112
  4028bc:	ret
  4028c0:	add	x0, sp, #0x88
  4028c4:	bl	404fac <ferror@plt+0x32ac>
  4028c8:	add	x1, sp, #0x88
  4028cc:	mov	x0, x20
  4028d0:	bl	405068 <ferror@plt+0x3368>
  4028d4:	tbz	w0, #0, 402a14 <ferror@plt+0xd14>
  4028d8:	mov	x0, x20
  4028dc:	bl	405ac0 <ferror@plt+0x3dc0>
  4028e0:	cbnz	w0, 402a14 <ferror@plt+0xd14>
  4028e4:	ldp	x26, x22, [sp, #136]
  4028e8:	mov	x0, x22
  4028ec:	bl	403470 <ferror@plt+0x1770>
  4028f0:	mov	x20, x0
  4028f4:	mov	w10, #0x1                   	// #1
  4028f8:	cbnz	x20, 4023d0 <ferror@plt+0x6d0>
  4028fc:	b	402960 <ferror@plt+0xc60>
  402900:	cmn	w0, #0x3
  402904:	b.ne	402948 <ferror@plt+0xc48>  // b.any
  402908:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40290c:	ldr	x0, [x8, #696]
  402910:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402914:	ldr	x3, [x8, #552]
  402918:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40291c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  402920:	adrp	x4, 406000 <_obstack_memory_used@@Base+0x40>
  402924:	adrp	x5, 406000 <_obstack_memory_used@@Base+0x40>
  402928:	add	x1, x1, #0x7b0
  40292c:	add	x2, x2, #0x7db
  402930:	add	x4, x4, #0x7e9
  402934:	add	x5, x5, #0x7f4
  402938:	mov	x6, xzr
  40293c:	bl	4056e8 <ferror@plt+0x39e8>
  402940:	mov	w0, wzr
  402944:	bl	401930 <exit@plt>
  402948:	cmn	w0, #0x2
  40294c:	b.ne	4029f4 <ferror@plt+0xcf4>  // b.any
  402950:	mov	w0, wzr
  402954:	bl	401e1c <ferror@plt+0x11c>
  402958:	cmp	w8, #0x3
  40295c:	b.ne	402964 <ferror@plt+0xc64>  // b.any
  402960:	bl	405a30 <ferror@plt+0x3d30>
  402964:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x40>
  402968:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40296c:	adrp	x3, 406000 <_obstack_memory_used@@Base+0x40>
  402970:	add	x0, x0, #0x892
  402974:	add	x1, x1, #0x8ba
  402978:	add	x3, x3, #0x8c3
  40297c:	mov	w2, #0x33f                 	// #831
  402980:	bl	401ca0 <__assert_fail@plt>
  402984:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402988:	add	x1, x1, #0x804
  40298c:	mov	w2, #0x5                   	// #5
  402990:	mov	x0, xzr
  402994:	bl	401c60 <dcgettext@plt>
  402998:	ldrsw	x8, [x22, #688]
  40299c:	mov	x19, x0
  4029a0:	mov	w0, #0x4                   	// #4
  4029a4:	ldr	x1, [x20, x8, lsl #3]
  4029a8:	bl	404b54 <ferror@plt+0x2e54>
  4029ac:	mov	x3, x0
  4029b0:	mov	w0, wzr
  4029b4:	mov	w1, wzr
  4029b8:	mov	x2, x19
  4029bc:	bl	401940 <error@plt>
  4029c0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4029c4:	ldr	x19, [x8, #672]
  4029c8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4029cc:	add	x1, x1, #0x815
  4029d0:	mov	w2, #0x5                   	// #5
  4029d4:	mov	x0, xzr
  4029d8:	bl	401c60 <dcgettext@plt>
  4029dc:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4029e0:	mov	x3, x0
  4029e4:	add	x2, x2, #0xcf9
  4029e8:	mov	w1, #0x1                   	// #1
  4029ec:	mov	x0, x19
  4029f0:	bl	401ba0 <__fprintf_chk@plt>
  4029f4:	mov	w0, #0x1                   	// #1
  4029f8:	bl	401e1c <ferror@plt+0x11c>
  4029fc:	bl	401cb0 <__errno_location@plt>
  402a00:	ldr	w1, [x0]
  402a04:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  402a08:	add	x2, x2, #0xb76
  402a0c:	mov	w0, #0x1                   	// #1
  402a10:	bl	401940 <error@plt>
  402a14:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402a18:	add	x1, x1, #0x864
  402a1c:	mov	w2, #0x5                   	// #5
  402a20:	mov	x0, xzr
  402a24:	bl	401c60 <dcgettext@plt>
  402a28:	mov	x20, x0
  402a2c:	mov	w0, #0x4                   	// #4
  402a30:	mov	x1, x19
  402a34:	bl	404b54 <ferror@plt+0x2e54>
  402a38:	mov	x3, x0
  402a3c:	mov	w0, #0x1                   	// #1
  402a40:	mov	w1, wzr
  402a44:	mov	x2, x20
  402a48:	bl	401940 <error@plt>
  402a4c:	sub	sp, sp, #0x70
  402a50:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402a54:	ldrb	w8, [x8, #740]
  402a58:	stp	x26, x25, [sp, #48]
  402a5c:	stp	x24, x23, [sp, #64]
  402a60:	stp	x22, x21, [sp, #80]
  402a64:	stp	x20, x19, [sp, #96]
  402a68:	mov	x19, x5
  402a6c:	mov	x20, x4
  402a70:	mov	x22, x3
  402a74:	mov	x23, x2
  402a78:	mov	x24, x1
  402a7c:	cmp	w8, #0x1
  402a80:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x12040>
  402a84:	stp	x29, x30, [sp, #32]
  402a88:	add	x29, sp, #0x20
  402a8c:	b.ne	402abc <ferror@plt+0xdbc>  // b.any
  402a90:	ldr	w25, [x26, #792]
  402a94:	adrp	x21, 406000 <_obstack_memory_used@@Base+0x40>
  402a98:	add	x1, sp, #0x8
  402a9c:	add	x21, x21, #0x3c8
  402aa0:	bl	4036f8 <ferror@plt+0x19f8>
  402aa4:	mov	x3, x0
  402aa8:	add	x1, x21, #0x1
  402aac:	mov	w0, #0x1                   	// #1
  402ab0:	mov	w2, w25
  402ab4:	bl	401a90 <__printf_chk@plt>
  402ab8:	b	402ac4 <ferror@plt+0xdc4>
  402abc:	adrp	x21, 406000 <_obstack_memory_used@@Base+0x40>
  402ac0:	add	x21, x21, #0x3c9
  402ac4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402ac8:	ldrb	w8, [x8, #739]
  402acc:	cmp	w8, #0x1
  402ad0:	b.ne	402b00 <ferror@plt+0xe00>  // b.any
  402ad4:	ldr	w25, [x26, #792]
  402ad8:	add	x1, sp, #0x8
  402adc:	mov	x0, x24
  402ae0:	bl	4036f8 <ferror@plt+0x19f8>
  402ae4:	mov	x3, x0
  402ae8:	mov	w0, #0x1                   	// #1
  402aec:	mov	x1, x21
  402af0:	mov	w2, w25
  402af4:	bl	401a90 <__printf_chk@plt>
  402af8:	adrp	x21, 406000 <_obstack_memory_used@@Base+0x40>
  402afc:	add	x21, x21, #0x3c8
  402b00:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402b04:	ldrb	w8, [x8, #738]
  402b08:	cmp	w8, #0x1
  402b0c:	b.ne	402b3c <ferror@plt+0xe3c>  // b.any
  402b10:	ldr	w24, [x26, #792]
  402b14:	add	x1, sp, #0x8
  402b18:	mov	x0, x23
  402b1c:	bl	4036f8 <ferror@plt+0x19f8>
  402b20:	mov	x3, x0
  402b24:	mov	w0, #0x1                   	// #1
  402b28:	mov	x1, x21
  402b2c:	mov	w2, w24
  402b30:	bl	401a90 <__printf_chk@plt>
  402b34:	adrp	x21, 406000 <_obstack_memory_used@@Base+0x40>
  402b38:	add	x21, x21, #0x3c8
  402b3c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402b40:	ldrb	w8, [x8, #737]
  402b44:	cmp	w8, #0x1
  402b48:	b.ne	402b78 <ferror@plt+0xe78>  // b.any
  402b4c:	ldr	w23, [x26, #792]
  402b50:	add	x1, sp, #0x8
  402b54:	mov	x0, x22
  402b58:	bl	4036f8 <ferror@plt+0x19f8>
  402b5c:	mov	x3, x0
  402b60:	mov	w0, #0x1                   	// #1
  402b64:	mov	x1, x21
  402b68:	mov	w2, w23
  402b6c:	bl	401a90 <__printf_chk@plt>
  402b70:	adrp	x21, 406000 <_obstack_memory_used@@Base+0x40>
  402b74:	add	x21, x21, #0x3c8
  402b78:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402b7c:	ldrb	w8, [x8, #741]
  402b80:	cmp	w8, #0x1
  402b84:	b.ne	402bac <ferror@plt+0xeac>  // b.any
  402b88:	ldr	w22, [x26, #792]
  402b8c:	add	x1, sp, #0x8
  402b90:	mov	x0, x20
  402b94:	bl	4036f8 <ferror@plt+0x19f8>
  402b98:	mov	x3, x0
  402b9c:	mov	w0, #0x1                   	// #1
  402ba0:	mov	x1, x21
  402ba4:	mov	w2, w22
  402ba8:	bl	401a90 <__printf_chk@plt>
  402bac:	cbz	x19, 402be8 <ferror@plt+0xee8>
  402bb0:	mov	w1, #0xa                   	// #10
  402bb4:	mov	x0, x19
  402bb8:	bl	401c00 <strchr@plt>
  402bbc:	cbz	x0, 402bd4 <ferror@plt+0xed4>
  402bc0:	mov	w1, #0x3                   	// #3
  402bc4:	mov	w0, wzr
  402bc8:	mov	x2, x19
  402bcc:	bl	404d18 <ferror@plt+0x3018>
  402bd0:	mov	x19, x0
  402bd4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402bd8:	add	x1, x1, #0xb0f
  402bdc:	mov	w0, #0x1                   	// #1
  402be0:	mov	x2, x19
  402be4:	bl	401a90 <__printf_chk@plt>
  402be8:	mov	w0, #0xa                   	// #10
  402bec:	bl	401ab0 <putchar_unlocked@plt>
  402bf0:	ldp	x20, x19, [sp, #96]
  402bf4:	ldp	x22, x21, [sp, #80]
  402bf8:	ldp	x24, x23, [sp, #64]
  402bfc:	ldp	x26, x25, [sp, #48]
  402c00:	ldp	x29, x30, [sp, #32]
  402c04:	add	sp, sp, #0x70
  402c08:	ret
  402c0c:	stp	x29, x30, [sp, #-96]!
  402c10:	stp	x28, x27, [sp, #16]
  402c14:	stp	x26, x25, [sp, #32]
  402c18:	stp	x24, x23, [sp, #48]
  402c1c:	stp	x22, x21, [sp, #64]
  402c20:	stp	x20, x19, [sp, #80]
  402c24:	mov	x29, sp
  402c28:	sub	sp, sp, #0x4, lsl #12
  402c2c:	sub	sp, sp, #0x40
  402c30:	mov	x25, x3
  402c34:	mov	x23, x2
  402c38:	mov	x27, x1
  402c3c:	mov	w28, w0
  402c40:	mov	x22, x1
  402c44:	cbnz	x1, 402c60 <ferror@plt+0xf60>
  402c48:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  402c4c:	add	x1, x1, #0xaec
  402c50:	mov	w2, #0x5                   	// #5
  402c54:	mov	x0, xzr
  402c58:	bl	401c60 <dcgettext@plt>
  402c5c:	mov	x22, x0
  402c60:	bl	401bf0 <__ctype_get_mb_cur_max@plt>
  402c64:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x12040>
  402c68:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402c6c:	ldrb	w11, [x11, #738]
  402c70:	cmp	x0, #0x1
  402c74:	ldrb	w8, [x8, #737]
  402c78:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  402c7c:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x12040>
  402c80:	cset	w10, hi  // hi = pmore
  402c84:	cmp	x0, #0x2
  402c88:	ldrb	w9, [x9, #739]
  402c8c:	ldrb	w12, [x12, #741]
  402c90:	cset	w13, cc  // cc = lo, ul, last
  402c94:	and	w13, w11, w13
  402c98:	orr	w8, w8, w13
  402c9c:	and	w26, w10, w11
  402ca0:	eor	w8, w8, #0x1
  402ca4:	orr	w19, w9, w12
  402ca8:	orr	w20, w26, w8
  402cac:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x12040>
  402cb0:	tbnz	w20, #0, 402cc8 <ferror@plt+0xfc8>
  402cb4:	ldrb	w8, [x21, #740]
  402cb8:	tbnz	w8, #0, 402cc8 <ferror@plt+0xfc8>
  402cbc:	tbnz	w19, #0, 402cc8 <ferror@plt+0xfc8>
  402cc0:	mov	w8, wzr
  402cc4:	b	402ce0 <ferror@plt+0xfe0>
  402cc8:	mov	w3, #0x2                   	// #2
  402ccc:	mov	w0, w28
  402cd0:	mov	x1, xzr
  402cd4:	mov	x2, xzr
  402cd8:	bl	4036c0 <ferror@plt+0x19c0>
  402cdc:	ldrb	w8, [x21, #740]
  402ce0:	orr	w8, w19, w8
  402ce4:	orr	w8, w20, w8
  402ce8:	str	w26, [sp, #16]
  402cec:	tbz	w8, #0, 402f70 <ferror@plt+0x1270>
  402cf0:	orr	w8, w26, w19
  402cf4:	str	x22, [sp, #8]
  402cf8:	tbz	w8, #0, 402fd0 <ferror@plt+0x12d0>
  402cfc:	bl	401bf0 <__ctype_get_mb_cur_max@plt>
  402d00:	cmp	x0, #0x1
  402d04:	mov	x19, xzr
  402d08:	str	x27, [sp]
  402d0c:	str	w28, [sp, #20]
  402d10:	b.ls	403150 <ferror@plt+0x1450>  // b.plast
  402d14:	mov	x28, xzr
  402d18:	mov	x27, xzr
  402d1c:	mov	x23, xzr
  402d20:	mov	w22, wzr
  402d24:	mov	x21, xzr
  402d28:	mov	w20, wzr
  402d2c:	mov	x26, xzr
  402d30:	str	xzr, [sp, #24]
  402d34:	str	xzr, [sp, #40]
  402d38:	ldr	w0, [sp, #20]
  402d3c:	add	x8, sp, #0x34
  402d40:	add	x1, x8, x26
  402d44:	mov	w8, #0x4000                	// #16384
  402d48:	sub	x2, x8, x26
  402d4c:	bl	4052f0 <ferror@plt+0x35f0>
  402d50:	cbz	x0, 4032d4 <ferror@plt+0x15d4>
  402d54:	cmn	x0, #0x1
  402d58:	b.eq	4032dc <ferror@plt+0x15dc>  // b.none
  402d5c:	ldr	x8, [sp, #24]
  402d60:	add	x24, sp, #0x34
  402d64:	add	x25, x0, x26
  402d68:	add	x8, x0, x8
  402d6c:	str	x8, [sp, #24]
  402d70:	tbnz	w20, #0, 402dac <ferror@plt+0x10ac>
  402d74:	ldrb	w9, [x24]
  402d78:	adrp	x10, 406000 <_obstack_memory_used@@Base+0x40>
  402d7c:	add	x10, x10, #0xb14
  402d80:	lsr	x8, x9, #3
  402d84:	and	x8, x8, #0x1c
  402d88:	ldr	w8, [x10, x8]
  402d8c:	lsr	w8, w8, w9
  402d90:	tbz	w8, #0, 402dac <ferror@plt+0x10ac>
  402d94:	and	w0, w9, #0xff
  402d98:	mov	w20, wzr
  402d9c:	mov	w8, wzr
  402da0:	str	w0, [sp, #36]
  402da4:	mov	w26, #0x1                   	// #1
  402da8:	b	402df4 <ferror@plt+0x10f4>
  402dac:	ldr	x20, [sp, #40]
  402db0:	add	x0, sp, #0x24
  402db4:	add	x3, sp, #0x28
  402db8:	mov	x1, x24
  402dbc:	mov	x2, x25
  402dc0:	bl	405c38 <ferror@plt+0x3f38>
  402dc4:	cmn	x0, #0x1
  402dc8:	b.eq	402e24 <ferror@plt+0x1124>  // b.none
  402dcc:	mov	x26, x0
  402dd0:	cmn	x0, #0x2
  402dd4:	b.eq	402f38 <ferror@plt+0x1238>  // b.none
  402dd8:	add	x0, sp, #0x28
  402ddc:	bl	401b60 <mbsinit@plt>
  402de0:	cmp	w0, #0x0
  402de4:	cset	w20, eq  // eq = none
  402de8:	cbz	x26, 402e48 <ferror@plt+0x1148>
  402dec:	ldr	w0, [sp, #36]
  402df0:	mov	w8, #0x1                   	// #1
  402df4:	sub	w9, w0, #0x9
  402df8:	cmp	w9, #0x4
  402dfc:	b.hi	402e38 <ferror@plt+0x1138>  // b.pmore
  402e00:	adrp	x11, 406000 <_obstack_memory_used@@Base+0x40>
  402e04:	add	x11, x11, #0x22d
  402e08:	adr	x8, 402e18 <ferror@plt+0x1118>
  402e0c:	ldrb	w10, [x11, x9]
  402e10:	add	x8, x8, x10, lsl #2
  402e14:	br	x8
  402e18:	and	x8, x21, #0xfffffffffffffff8
  402e1c:	add	x21, x8, #0x8
  402e20:	b	402ea4 <ferror@plt+0x11a4>
  402e24:	add	x24, x24, #0x1
  402e28:	sub	x25, x25, #0x1
  402e2c:	mov	w20, #0x1                   	// #1
  402e30:	cbnz	x25, 402d70 <ferror@plt+0x1070>
  402e34:	b	402f30 <ferror@plt+0x1230>
  402e38:	cmp	w0, #0x20
  402e3c:	b.ne	402e6c <ferror@plt+0x116c>  // b.any
  402e40:	add	x21, x21, #0x1
  402e44:	b	402ea4 <ferror@plt+0x11a4>
  402e48:	mov	w0, wzr
  402e4c:	str	wzr, [sp, #36]
  402e50:	mov	w26, #0x1                   	// #1
  402e54:	b	402e70 <ferror@plt+0x1170>
  402e58:	add	x23, x23, #0x1
  402e5c:	cmp	x21, x19
  402e60:	csel	x19, x21, x19, hi  // hi = pmore
  402e64:	mov	x21, xzr
  402e68:	b	402ea4 <ferror@plt+0x11a4>
  402e6c:	cbz	w8, 402ef0 <ferror@plt+0x11f0>
  402e70:	bl	401c90 <iswprint@plt>
  402e74:	cbz	w0, 402eb0 <ferror@plt+0x11b0>
  402e78:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402e7c:	ldrb	w8, [x8, #741]
  402e80:	cmp	w8, #0x1
  402e84:	b.ne	402e98 <ferror@plt+0x1198>  // b.any
  402e88:	ldr	w0, [sp, #36]
  402e8c:	bl	401a20 <wcwidth@plt>
  402e90:	bic	w8, w0, w0, asr #31
  402e94:	add	x21, x21, x8
  402e98:	ldr	w0, [sp, #36]
  402e9c:	bl	4019e0 <iswspace@plt>
  402ea0:	cbz	w0, 402ec4 <ferror@plt+0x11c4>
  402ea4:	and	x8, x22, #0x1
  402ea8:	mov	w22, wzr
  402eac:	add	x27, x27, x8
  402eb0:	add	x24, x24, x26
  402eb4:	sub	x25, x25, x26
  402eb8:	add	x28, x28, #0x1
  402ebc:	cbnz	x25, 402d70 <ferror@plt+0x1070>
  402ec0:	b	402f30 <ferror@plt+0x1230>
  402ec4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  402ec8:	ldrb	w8, [x8, #736]
  402ecc:	cbnz	w8, 402f28 <ferror@plt+0x1228>
  402ed0:	ldr	w8, [sp, #36]
  402ed4:	mov	w9, #0x202e                	// #8238
  402ed8:	cmp	w8, w9
  402edc:	b.gt	402f10 <ferror@plt+0x1210>
  402ee0:	cmp	w8, #0xa0
  402ee4:	b.eq	402ea4 <ferror@plt+0x11a4>  // b.none
  402ee8:	mov	w9, #0x2007                	// #8199
  402eec:	b	402f20 <ferror@plt+0x1220>
  402ef0:	bl	401bc0 <__ctype_b_loc@plt>
  402ef4:	ldr	x8, [x0]
  402ef8:	ldrb	w9, [x24]
  402efc:	ldrh	w8, [x8, x9, lsl #1]
  402f00:	tbz	w8, #14, 402eb0 <ferror@plt+0x11b0>
  402f04:	add	x21, x21, #0x1
  402f08:	tbnz	w8, #13, 402ea4 <ferror@plt+0x11a4>
  402f0c:	b	402f28 <ferror@plt+0x1228>
  402f10:	mov	w9, #0x202f                	// #8239
  402f14:	cmp	w8, w9
  402f18:	b.eq	402ea4 <ferror@plt+0x11a4>  // b.none
  402f1c:	mov	w9, #0x2060                	// #8288
  402f20:	cmp	w8, w9
  402f24:	b.eq	402ea4 <ferror@plt+0x11a4>  // b.none
  402f28:	mov	w22, #0x1                   	// #1
  402f2c:	b	402eb0 <ferror@plt+0x11b0>
  402f30:	mov	x26, xzr
  402f34:	b	402d38 <ferror@plt+0x1038>
  402f38:	mov	x26, xzr
  402f3c:	str	x20, [sp, #40]
  402f40:	mov	w20, #0x1                   	// #1
  402f44:	cbz	x25, 402d38 <ferror@plt+0x1038>
  402f48:	cmp	x25, #0x4, lsl #12
  402f4c:	mov	w8, #0x3fff                	// #16383
  402f50:	csel	x26, x8, x25, eq  // eq = none
  402f54:	cinc	x1, x24, eq  // eq = none
  402f58:	add	x0, sp, #0x34
  402f5c:	mov	w3, #0x4001                	// #16385
  402f60:	mov	x2, x26
  402f64:	bl	401ce0 <__memmove_chk@plt>
  402f68:	mov	w20, #0x1                   	// #1
  402f6c:	b	402d38 <ferror@plt+0x1038>
  402f70:	ldr	w0, [x23]
  402f74:	cmp	w0, #0x1
  402f78:	b.lt	402f8c <ferror@plt+0x128c>  // b.tstop
  402f7c:	add	x1, x23, #0x8
  402f80:	mov	w0, w28
  402f84:	bl	4061f0 <_obstack_memory_used@@Base+0x230>
  402f88:	str	w0, [x23]
  402f8c:	cbz	w0, 4030e4 <ferror@plt+0x13e4>
  402f90:	mov	x20, xzr
  402f94:	mov	w3, #0x2                   	// #2
  402f98:	mov	w0, w28
  402f9c:	mov	x1, xzr
  402fa0:	mov	x2, xzr
  402fa4:	bl	4036c0 <ferror@plt+0x19c0>
  402fa8:	add	x1, sp, #0x34
  402fac:	mov	w2, #0x4000                	// #16384
  402fb0:	mov	w0, w28
  402fb4:	bl	4052f0 <ferror@plt+0x35f0>
  402fb8:	mov	x24, x0
  402fbc:	cbz	x0, 403084 <ferror@plt+0x1384>
  402fc0:	cmn	x24, #0x1
  402fc4:	b.eq	40309c <ferror@plt+0x139c>  // b.none
  402fc8:	add	x20, x24, x20
  402fcc:	b	402fa8 <ferror@plt+0x12a8>
  402fd0:	mov	x20, #0x8888888888888888    	// #-8608480567731124088
  402fd4:	mov	x25, xzr
  402fd8:	mov	x23, xzr
  402fdc:	mov	w22, wzr
  402fe0:	add	x19, sp, #0x34
  402fe4:	movk	x20, #0x8889
  402fe8:	add	x1, sp, #0x34
  402fec:	mov	w2, #0x4000                	// #16384
  402ff0:	mov	w0, w28
  402ff4:	bl	4052f0 <ferror@plt+0x35f0>
  402ff8:	mov	x24, x0
  402ffc:	cbz	x0, 403278 <ferror@plt+0x1578>
  403000:	cmn	x24, #0x1
  403004:	b.eq	40328c <ferror@plt+0x158c>  // b.none
  403008:	add	x25, x24, x25
  40300c:	tbz	w22, #0, 40304c <ferror@plt+0x134c>
  403010:	add	x0, sp, #0x34
  403014:	mov	w1, #0xa                   	// #10
  403018:	mov	x2, x24
  40301c:	bl	401c30 <memchr@plt>
  403020:	mov	x21, x23
  403024:	cbz	x0, 40306c <ferror@plt+0x136c>
  403028:	add	x22, x19, x24
  40302c:	mov	x21, x23
  403030:	add	x0, x0, #0x1
  403034:	sub	x2, x22, x0
  403038:	mov	w1, #0xa                   	// #10
  40303c:	add	x21, x21, #0x1
  403040:	bl	401c30 <memchr@plt>
  403044:	cbnz	x0, 403030 <ferror@plt+0x1330>
  403048:	b	40306c <ferror@plt+0x136c>
  40304c:	add	x8, sp, #0x34
  403050:	mov	x9, x24
  403054:	mov	x21, x23
  403058:	ldrb	w10, [x8], #1
  40305c:	cmp	w10, #0xa
  403060:	cinc	x21, x21, eq  // eq = none
  403064:	subs	x9, x9, #0x1
  403068:	b.ne	403058 <ferror@plt+0x1358>  // b.any
  40306c:	sub	x8, x21, x23
  403070:	umulh	x9, x24, x20
  403074:	cmp	x8, x9, lsr #3
  403078:	cset	w22, ls  // ls = plast
  40307c:	mov	x23, x21
  403080:	b	402fe8 <ferror@plt+0x12e8>
  403084:	mov	w26, #0x1                   	// #1
  403088:	mov	x28, x24
  40308c:	mov	x22, x24
  403090:	mov	x23, x24
  403094:	str	x20, [sp, #24]
  403098:	b	403378 <ferror@plt+0x1678>
  40309c:	str	x20, [sp, #24]
  4030a0:	bl	401cb0 <__errno_location@plt>
  4030a4:	mov	x2, x22
  4030a8:	ldr	w22, [x0]
  4030ac:	mov	w1, #0x3                   	// #3
  4030b0:	mov	w0, wzr
  4030b4:	bl	404d18 <ferror@plt+0x3018>
  4030b8:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4030bc:	mov	x3, x0
  4030c0:	add	x2, x2, #0xb10
  4030c4:	mov	w0, wzr
  4030c8:	mov	w1, w22
  4030cc:	bl	401940 <error@plt>
  4030d0:	mov	x24, xzr
  4030d4:	mov	x28, xzr
  4030d8:	mov	x22, xzr
  4030dc:	mov	x23, xzr
  4030e0:	b	4032cc <ferror@plt+0x15cc>
  4030e4:	ldr	w8, [x23, #24]
  4030e8:	and	w8, w8, #0xf000
  4030ec:	orr	w8, w8, #0x2000
  4030f0:	cmp	w8, #0xa, lsl #12
  4030f4:	b.ne	402f90 <ferror@plt+0x1290>  // b.any
  4030f8:	ldr	x19, [x23, #56]
  4030fc:	tbnz	x19, #63, 402f90 <ferror@plt+0x1290>
  403100:	tbz	x25, #63, 403118 <ferror@plt+0x1418>
  403104:	mov	w2, #0x1                   	// #1
  403108:	mov	w0, w28
  40310c:	mov	x1, xzr
  403110:	bl	4019a0 <lseek@plt>
  403114:	mov	x25, x0
  403118:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40311c:	ldr	x8, [x8, #728]
  403120:	udiv	x9, x19, x8
  403124:	msub	x8, x9, x8, x19
  403128:	cbz	x8, 40342c <ferror@plt+0x172c>
  40312c:	subs	x8, x19, x25
  403130:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
  403134:	mov	x24, xzr
  403138:	mov	x28, xzr
  40313c:	mov	x22, xzr
  403140:	mov	x23, xzr
  403144:	str	x8, [sp, #24]
  403148:	mov	w26, #0x1                   	// #1
  40314c:	b	403378 <ferror@plt+0x1678>
  403150:	adrp	x26, 406000 <_obstack_memory_used@@Base+0x40>
  403154:	mov	x24, xzr
  403158:	mov	x20, xzr
  40315c:	mov	x23, xzr
  403160:	mov	w27, wzr
  403164:	mov	x21, xzr
  403168:	add	x26, x26, #0x228
  40316c:	add	x1, sp, #0x34
  403170:	mov	w2, #0x4000                	// #16384
  403174:	mov	w0, w28
  403178:	bl	4052f0 <ferror@plt+0x35f0>
  40317c:	cmn	x0, #0x1
  403180:	str	x24, [sp, #24]
  403184:	b.eq	403324 <ferror@plt+0x1624>  // b.none
  403188:	mov	x22, x0
  40318c:	cbz	x0, 40335c <ferror@plt+0x165c>
  403190:	add	x28, sp, #0x34
  403194:	mov	x24, x22
  403198:	ldrb	w25, [x28], #1
  40319c:	sub	w8, w25, #0x9
  4031a0:	cmp	w8, #0x4
  4031a4:	b.hi	4031c4 <ferror@plt+0x14c4>  // b.pmore
  4031a8:	adr	x9, 4031b8 <ferror@plt+0x14b8>
  4031ac:	ldrb	w10, [x26, x8]
  4031b0:	add	x9, x9, x10, lsl #2
  4031b4:	br	x9
  4031b8:	and	x8, x21, #0xfffffffffffffff8
  4031bc:	add	x21, x8, #0x8
  4031c0:	b	4031e4 <ferror@plt+0x14e4>
  4031c4:	cmp	w25, #0x20
  4031c8:	b.ne	4031fc <ferror@plt+0x14fc>  // b.any
  4031cc:	add	x21, x21, #0x1
  4031d0:	b	4031e4 <ferror@plt+0x14e4>
  4031d4:	add	x23, x23, #0x1
  4031d8:	cmp	x21, x19
  4031dc:	csel	x19, x21, x19, hi  // hi = pmore
  4031e0:	mov	x21, xzr
  4031e4:	and	x8, x27, #0x1
  4031e8:	mov	w27, wzr
  4031ec:	add	x20, x20, x8
  4031f0:	subs	x24, x24, #0x1
  4031f4:	b.ne	403198 <ferror@plt+0x1498>  // b.any
  4031f8:	b	403268 <ferror@plt+0x1568>
  4031fc:	bl	401bc0 <__ctype_b_loc@plt>
  403200:	ldr	x8, [x0]
  403204:	ldrh	w8, [x8, x25, lsl #1]
  403208:	tbz	w8, #14, 4031f0 <ferror@plt+0x14f0>
  40320c:	add	x21, x21, #0x1
  403210:	tbnz	w8, #13, 4031e4 <ferror@plt+0x14e4>
  403214:	mov	w0, w25
  403218:	bl	401b30 <btowc@plt>
  40321c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403220:	ldrb	w8, [x8, #736]
  403224:	cbz	w8, 403230 <ferror@plt+0x1530>
  403228:	mov	w27, #0x1                   	// #1
  40322c:	b	4031f0 <ferror@plt+0x14f0>
  403230:	mov	w8, #0x202e                	// #8238
  403234:	cmp	w0, w8
  403238:	b.gt	40324c <ferror@plt+0x154c>
  40323c:	cmp	w0, #0xa0
  403240:	b.eq	4031e4 <ferror@plt+0x14e4>  // b.none
  403244:	mov	w8, #0x2007                	// #8199
  403248:	b	40325c <ferror@plt+0x155c>
  40324c:	mov	w8, #0x202f                	// #8239
  403250:	cmp	w0, w8
  403254:	b.eq	4031e4 <ferror@plt+0x14e4>  // b.none
  403258:	mov	w8, #0x2060                	// #8288
  40325c:	cmp	w0, w8
  403260:	b.eq	4031e4 <ferror@plt+0x14e4>  // b.none
  403264:	b	403228 <ferror@plt+0x1528>
  403268:	ldr	x24, [sp, #24]
  40326c:	ldr	w28, [sp, #20]
  403270:	add	x24, x22, x24
  403274:	b	40316c <ferror@plt+0x146c>
  403278:	str	x25, [sp, #24]
  40327c:	mov	w26, #0x1                   	// #1
  403280:	mov	x28, x24
  403284:	mov	x22, x24
  403288:	b	403378 <ferror@plt+0x1678>
  40328c:	str	x25, [sp, #24]
  403290:	bl	401cb0 <__errno_location@plt>
  403294:	ldr	x2, [sp, #8]
  403298:	ldr	w22, [x0]
  40329c:	mov	w1, #0x3                   	// #3
  4032a0:	mov	w0, wzr
  4032a4:	bl	404d18 <ferror@plt+0x3018>
  4032a8:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4032ac:	mov	x3, x0
  4032b0:	add	x2, x2, #0xb10
  4032b4:	mov	w0, wzr
  4032b8:	mov	w1, w22
  4032bc:	bl	401940 <error@plt>
  4032c0:	mov	x24, xzr
  4032c4:	mov	x28, xzr
  4032c8:	mov	x22, xzr
  4032cc:	mov	w26, wzr
  4032d0:	b	403378 <ferror@plt+0x1678>
  4032d4:	mov	w26, #0x1                   	// #1
  4032d8:	b	403310 <ferror@plt+0x1610>
  4032dc:	bl	401cb0 <__errno_location@plt>
  4032e0:	ldr	x2, [sp, #8]
  4032e4:	ldr	w24, [x0]
  4032e8:	mov	w1, #0x3                   	// #3
  4032ec:	mov	w0, wzr
  4032f0:	bl	404d18 <ferror@plt+0x3018>
  4032f4:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4032f8:	mov	x3, x0
  4032fc:	add	x2, x2, #0xb10
  403300:	mov	w0, wzr
  403304:	mov	w1, w24
  403308:	bl	401940 <error@plt>
  40330c:	mov	w26, wzr
  403310:	cmp	x21, x19
  403314:	and	x8, x22, #0x1
  403318:	csel	x24, x21, x19, hi  // hi = pmore
  40331c:	add	x22, x27, x8
  403320:	b	403374 <ferror@plt+0x1674>
  403324:	bl	401cb0 <__errno_location@plt>
  403328:	ldr	x2, [sp, #8]
  40332c:	ldr	w22, [x0]
  403330:	mov	w1, #0x3                   	// #3
  403334:	mov	w0, wzr
  403338:	bl	404d18 <ferror@plt+0x3018>
  40333c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  403340:	mov	x3, x0
  403344:	add	x2, x2, #0xb10
  403348:	mov	w0, wzr
  40334c:	mov	w1, w22
  403350:	bl	401940 <error@plt>
  403354:	mov	w26, wzr
  403358:	b	403360 <ferror@plt+0x1660>
  40335c:	mov	w26, #0x1                   	// #1
  403360:	cmp	x21, x19
  403364:	and	x8, x27, #0x1
  403368:	mov	x28, xzr
  40336c:	csel	x24, x21, x19, hi  // hi = pmore
  403370:	add	x22, x20, x8
  403374:	ldr	x27, [sp]
  403378:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40337c:	ldr	w9, [sp, #16]
  403380:	ldrb	w8, [x8, #738]
  403384:	ldr	x19, [sp, #24]
  403388:	mov	x0, x23
  40338c:	eor	w9, w9, #0x1
  403390:	tst	w8, w9
  403394:	csel	x25, x19, x28, ne  // ne = any
  403398:	mov	x1, x22
  40339c:	mov	x2, x25
  4033a0:	mov	x3, x19
  4033a4:	mov	x4, x24
  4033a8:	mov	x5, x27
  4033ac:	bl	402a4c <ferror@plt+0xd4c>
  4033b0:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  4033b4:	ldr	x11, [x9, #776]
  4033b8:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x12040>
  4033bc:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x12040>
  4033c0:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x12040>
  4033c4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4033c8:	add	x11, x11, x23
  4033cc:	ldr	x14, [x10, #768]
  4033d0:	str	x11, [x9, #776]
  4033d4:	ldr	x9, [x12, #760]
  4033d8:	ldr	x11, [x13, #752]
  4033dc:	ldr	x15, [x8, #744]
  4033e0:	add	x14, x14, x22
  4033e4:	str	x14, [x10, #768]
  4033e8:	add	x9, x9, x25
  4033ec:	add	x10, x11, x19
  4033f0:	cmp	x24, x15
  4033f4:	str	x9, [x12, #760]
  4033f8:	str	x10, [x13, #752]
  4033fc:	b.ls	403404 <ferror@plt+0x1704>  // b.plast
  403400:	str	x24, [x8, #744]
  403404:	mov	w0, w26
  403408:	add	sp, sp, #0x4, lsl #12
  40340c:	add	sp, sp, #0x40
  403410:	ldp	x20, x19, [sp, #80]
  403414:	ldp	x22, x21, [sp, #64]
  403418:	ldp	x24, x23, [sp, #48]
  40341c:	ldp	x26, x25, [sp, #32]
  403420:	ldp	x28, x27, [sp, #16]
  403424:	ldp	x29, x30, [sp], #96
  403428:	ret
  40342c:	ldr	w8, [x23, #64]
  403430:	mov	w9, #0x201                 	// #513
  403434:	mov	x20, xzr
  403438:	cmp	w8, #0x0
  40343c:	csinc	w8, w9, w8, le
  403440:	tbnz	x25, #63, 402f94 <ferror@plt+0x1294>
  403444:	sxtw	x8, w8
  403448:	udiv	x9, x19, x8
  40344c:	mul	x1, x9, x8
  403450:	subs	x19, x1, x25
  403454:	b.le	402f94 <ferror@plt+0x1294>
  403458:	mov	w2, #0x1                   	// #1
  40345c:	mov	w0, w28
  403460:	bl	4019a0 <lseek@plt>
  403464:	cmp	x0, #0x0
  403468:	csel	x20, xzr, x19, lt  // lt = tstop
  40346c:	b	402f94 <ferror@plt+0x1294>
  403470:	stp	x29, x30, [sp, #-32]!
  403474:	str	x19, [sp, #16]
  403478:	mov	x19, x0
  40347c:	mov	w0, #0x30                  	// #48
  403480:	mov	x29, sp
  403484:	bl	401a10 <malloc@plt>
  403488:	cbz	x0, 403494 <ferror@plt+0x1794>
  40348c:	str	xzr, [x0]
  403490:	stp	x19, x19, [x0, #32]
  403494:	ldr	x19, [sp, #16]
  403498:	ldp	x29, x30, [sp], #32
  40349c:	ret
  4034a0:	stp	x29, x30, [sp, #-32]!
  4034a4:	str	x19, [sp, #16]
  4034a8:	mov	x19, x0
  4034ac:	mov	w0, #0x30                  	// #48
  4034b0:	mov	x29, sp
  4034b4:	bl	401a10 <malloc@plt>
  4034b8:	cbz	x0, 4034cc <ferror@plt+0x17cc>
  4034bc:	movi	v0.2d, #0x0
  4034c0:	str	x19, [x0]
  4034c4:	stur	q0, [x0, #8]
  4034c8:	stur	q0, [x0, #24]
  4034cc:	ldr	x19, [sp, #16]
  4034d0:	ldp	x29, x30, [sp], #32
  4034d4:	ret
  4034d8:	stp	x29, x30, [sp, #-32]!
  4034dc:	stp	x20, x19, [sp, #16]
  4034e0:	ldr	x3, [x0]
  4034e4:	mov	x20, x0
  4034e8:	mov	x19, x1
  4034ec:	mov	x29, sp
  4034f0:	cbz	x3, 403520 <ferror@plt+0x1820>
  4034f4:	add	x0, x20, #0x10
  4034f8:	add	x1, x20, #0x18
  4034fc:	mov	w2, wzr
  403500:	bl	401a30 <getdelim@plt>
  403504:	tbnz	x0, #63, 403548 <ferror@plt+0x1848>
  403508:	mov	w8, #0x1                   	// #1
  40350c:	str	w8, [x19]
  403510:	ldp	x8, x0, [x20, #8]
  403514:	add	x8, x8, #0x1
  403518:	str	x8, [x20, #8]
  40351c:	b	403574 <ferror@plt+0x1874>
  403520:	ldr	x8, [x20, #40]
  403524:	ldr	x8, [x8]
  403528:	cbz	x8, 403568 <ferror@plt+0x1868>
  40352c:	mov	w8, #0x1                   	// #1
  403530:	str	w8, [x19]
  403534:	ldr	x8, [x20, #40]
  403538:	add	x9, x8, #0x8
  40353c:	str	x9, [x20, #40]
  403540:	ldr	x0, [x8]
  403544:	b	403574 <ferror@plt+0x1874>
  403548:	ldr	x0, [x20]
  40354c:	bl	401b70 <feof@plt>
  403550:	mov	w8, w0
  403554:	cmp	w8, #0x0
  403558:	mov	w8, #0x2                   	// #2
  40355c:	mov	w9, #0x4                   	// #4
  403560:	csel	w8, w9, w8, eq  // eq = none
  403564:	b	40356c <ferror@plt+0x186c>
  403568:	mov	w8, #0x2                   	// #2
  40356c:	mov	x0, xzr
  403570:	str	w8, [x19]
  403574:	ldp	x20, x19, [sp, #16]
  403578:	ldp	x29, x30, [sp], #32
  40357c:	ret
  403580:	ldr	x8, [x0]
  403584:	cbz	x8, 403590 <ferror@plt+0x1890>
  403588:	ldr	x0, [x0, #8]
  40358c:	ret
  403590:	ldp	x9, x8, [x0, #32]
  403594:	sub	x8, x8, x9
  403598:	asr	x0, x8, #3
  40359c:	ret
  4035a0:	stp	x29, x30, [sp, #-32]!
  4035a4:	ldr	x8, [x0]
  4035a8:	str	x19, [sp, #16]
  4035ac:	mov	x19, x0
  4035b0:	mov	x29, sp
  4035b4:	cbz	x8, 4035c0 <ferror@plt+0x18c0>
  4035b8:	ldr	x0, [x19, #16]
  4035bc:	bl	401be0 <free@plt>
  4035c0:	mov	x0, x19
  4035c4:	ldr	x19, [sp, #16]
  4035c8:	ldp	x29, x30, [sp], #32
  4035cc:	b	401be0 <free@plt>
  4035d0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4035d4:	str	x0, [x8, #800]
  4035d8:	ret
  4035dc:	and	w8, w0, #0x1
  4035e0:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  4035e4:	strb	w8, [x9, #808]
  4035e8:	ret
  4035ec:	stp	x29, x30, [sp, #-48]!
  4035f0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4035f4:	ldr	x0, [x8, #696]
  4035f8:	str	x21, [sp, #16]
  4035fc:	stp	x20, x19, [sp, #32]
  403600:	mov	x29, sp
  403604:	bl	406034 <_obstack_memory_used@@Base+0x74>
  403608:	cbz	w0, 403628 <ferror@plt+0x1928>
  40360c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403610:	ldrb	w8, [x8, #808]
  403614:	cbz	w8, 403648 <ferror@plt+0x1948>
  403618:	bl	401cb0 <__errno_location@plt>
  40361c:	ldr	w8, [x0]
  403620:	cmp	w8, #0x20
  403624:	b.ne	403648 <ferror@plt+0x1948>  // b.any
  403628:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40362c:	ldr	x0, [x8, #672]
  403630:	bl	406034 <_obstack_memory_used@@Base+0x74>
  403634:	cbnz	w0, 4036b4 <ferror@plt+0x19b4>
  403638:	ldp	x20, x19, [sp, #32]
  40363c:	ldr	x21, [sp, #16]
  403640:	ldp	x29, x30, [sp], #48
  403644:	ret
  403648:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40364c:	add	x1, x1, #0xb00
  403650:	mov	w2, #0x5                   	// #5
  403654:	mov	x0, xzr
  403658:	bl	401c60 <dcgettext@plt>
  40365c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403660:	ldr	x21, [x8, #800]
  403664:	mov	x19, x0
  403668:	bl	401cb0 <__errno_location@plt>
  40366c:	ldr	w20, [x0]
  403670:	cbnz	x21, 403690 <ferror@plt+0x1990>
  403674:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  403678:	add	x2, x2, #0xb10
  40367c:	mov	w0, wzr
  403680:	mov	w1, w20
  403684:	mov	x3, x19
  403688:	bl	401940 <error@plt>
  40368c:	b	4036b4 <ferror@plt+0x19b4>
  403690:	mov	x0, x21
  403694:	bl	404c68 <ferror@plt+0x2f68>
  403698:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  40369c:	mov	x3, x0
  4036a0:	add	x2, x2, #0xb0c
  4036a4:	mov	w0, wzr
  4036a8:	mov	w1, w20
  4036ac:	mov	x4, x19
  4036b0:	bl	401940 <error@plt>
  4036b4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4036b8:	ldr	w0, [x8, #560]
  4036bc:	bl	401900 <_exit@plt>
  4036c0:	b	401b50 <posix_fadvise@plt>
  4036c4:	cbz	x0, 4036f4 <ferror@plt+0x19f4>
  4036c8:	stp	x29, x30, [sp, #-32]!
  4036cc:	str	x19, [sp, #16]
  4036d0:	mov	x29, sp
  4036d4:	mov	w19, w1
  4036d8:	bl	4019c0 <fileno@plt>
  4036dc:	mov	w3, w19
  4036e0:	ldr	x19, [sp, #16]
  4036e4:	mov	x1, xzr
  4036e8:	mov	x2, xzr
  4036ec:	ldp	x29, x30, [sp], #32
  4036f0:	b	401b50 <posix_fadvise@plt>
  4036f4:	ret
  4036f8:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  4036fc:	movk	x8, #0xcccd
  403700:	strb	wzr, [x1, #20]!
  403704:	mov	w9, #0xa                   	// #10
  403708:	umulh	x10, x0, x8
  40370c:	lsr	x10, x10, #3
  403710:	msub	w11, w10, w9, w0
  403714:	orr	w11, w11, #0x30
  403718:	cmp	x0, #0x9
  40371c:	strb	w11, [x1, #-1]!
  403720:	mov	x0, x10
  403724:	b.hi	403708 <ferror@plt+0x1a08>  // b.pmore
  403728:	mov	x0, x1
  40372c:	ret
  403730:	stp	x29, x30, [sp, #-32]!
  403734:	str	x19, [sp, #16]
  403738:	mov	x29, sp
  40373c:	mov	w19, w0
  403740:	bl	401a20 <wcwidth@plt>
  403744:	tbz	w0, #31, 403758 <ferror@plt+0x1a58>
  403748:	mov	w0, w19
  40374c:	bl	401980 <iswcntrl@plt>
  403750:	cmp	w0, #0x0
  403754:	cset	w0, eq  // eq = none
  403758:	ldr	x19, [sp, #16]
  40375c:	ldp	x29, x30, [sp], #32
  403760:	ret
  403764:	stp	x29, x30, [sp, #-48]!
  403768:	str	x21, [sp, #16]
  40376c:	stp	x20, x19, [sp, #32]
  403770:	mov	x8, x1
  403774:	mov	x19, x1
  403778:	ldr	x1, [x8], #24
  40377c:	mov	x20, x0
  403780:	mov	x29, sp
  403784:	cmp	x1, x8
  403788:	b.ne	4037a0 <ferror@plt+0x1aa0>  // b.any
  40378c:	ldr	x2, [x19, #8]
  403790:	add	x21, x20, #0x18
  403794:	mov	x0, x21
  403798:	bl	4018f0 <memcpy@plt>
  40379c:	mov	x1, x21
  4037a0:	str	x1, [x20]
  4037a4:	ldr	x8, [x19, #8]
  4037a8:	str	x8, [x20, #8]
  4037ac:	ldrb	w8, [x19, #16]
  4037b0:	strb	w8, [x20, #16]
  4037b4:	cbz	w8, 4037c0 <ferror@plt+0x1ac0>
  4037b8:	ldr	w8, [x19, #20]
  4037bc:	str	w8, [x20, #20]
  4037c0:	ldp	x20, x19, [sp, #32]
  4037c4:	ldr	x21, [sp, #16]
  4037c8:	ldp	x29, x30, [sp], #48
  4037cc:	ret
  4037d0:	lsr	w8, w0, #3
  4037d4:	adrp	x9, 406000 <_obstack_memory_used@@Base+0x40>
  4037d8:	and	x8, x8, #0x1c
  4037dc:	add	x9, x9, #0xb14
  4037e0:	ldr	w8, [x9, x8]
  4037e4:	lsr	w8, w8, w0
  4037e8:	and	w0, w8, #0x1
  4037ec:	ret
  4037f0:	sub	sp, sp, #0x90
  4037f4:	mov	w0, #0x55                  	// #85
  4037f8:	stp	x29, x30, [sp, #112]
  4037fc:	str	x19, [sp, #128]
  403800:	add	x29, sp, #0x70
  403804:	bl	401c40 <sysconf@plt>
  403808:	mov	x19, x0
  40380c:	mov	w0, #0x1e                  	// #30
  403810:	bl	401c40 <sysconf@plt>
  403814:	orr	x8, x0, x19
  403818:	tbnz	x8, #63, 40382c <ferror@plt+0x1b2c>
  40381c:	scvtf	d0, x0
  403820:	scvtf	d1, x19
  403824:	fmul	d0, d1, d0
  403828:	b	403858 <ferror@plt+0x1b58>
  40382c:	mov	x0, sp
  403830:	bl	401950 <sysinfo@plt>
  403834:	cbz	w0, 403844 <ferror@plt+0x1b44>
  403838:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40383c:	fmov	d0, x8
  403840:	b	403858 <ferror@plt+0x1b58>
  403844:	ldr	d0, [sp, #32]
  403848:	ldr	s1, [sp, #104]
  40384c:	ucvtf	d0, d0
  403850:	ucvtf	d1, d1
  403854:	fmul	d0, d0, d1
  403858:	ldr	x19, [sp, #128]
  40385c:	ldp	x29, x30, [sp, #112]
  403860:	add	sp, sp, #0x90
  403864:	ret
  403868:	sub	sp, sp, #0x90
  40386c:	mov	w0, #0x56                  	// #86
  403870:	stp	x29, x30, [sp, #112]
  403874:	str	x19, [sp, #128]
  403878:	add	x29, sp, #0x70
  40387c:	bl	401c40 <sysconf@plt>
  403880:	mov	x19, x0
  403884:	mov	w0, #0x1e                  	// #30
  403888:	bl	401c40 <sysconf@plt>
  40388c:	orr	x8, x0, x19
  403890:	tbnz	x8, #63, 4038a4 <ferror@plt+0x1ba4>
  403894:	scvtf	d0, x0
  403898:	scvtf	d1, x19
  40389c:	fmul	d0, d1, d0
  4038a0:	b	4038dc <ferror@plt+0x1bdc>
  4038a4:	mov	x0, sp
  4038a8:	bl	401950 <sysinfo@plt>
  4038ac:	cbz	w0, 4038bc <ferror@plt+0x1bbc>
  4038b0:	bl	4037f0 <ferror@plt+0x1af0>
  4038b4:	fmov	d1, #2.500000000000000000e-01
  4038b8:	b	4038d8 <ferror@plt+0x1bd8>
  4038bc:	ldr	d0, [sp, #40]
  4038c0:	ldr	d1, [sp, #56]
  4038c4:	ldr	s2, [sp, #104]
  4038c8:	ucvtf	d0, d0
  4038cc:	ucvtf	d1, d1
  4038d0:	fadd	d0, d0, d1
  4038d4:	ucvtf	d1, d2
  4038d8:	fmul	d0, d0, d1
  4038dc:	ldr	x19, [sp, #128]
  4038e0:	ldp	x29, x30, [sp, #112]
  4038e4:	add	sp, sp, #0x90
  4038e8:	ret
  4038ec:	stp	x29, x30, [sp, #-32]!
  4038f0:	stp	x20, x19, [sp, #16]
  4038f4:	mov	x29, sp
  4038f8:	cbz	x0, 403978 <ferror@plt+0x1c78>
  4038fc:	mov	w1, #0x2f                  	// #47
  403900:	mov	x19, x0
  403904:	bl	401b10 <strrchr@plt>
  403908:	cmp	x0, #0x0
  40390c:	csinc	x20, x19, x0, eq  // eq = none
  403910:	sub	x8, x20, x19
  403914:	cmp	x8, #0x7
  403918:	b.lt	40395c <ferror@plt+0x1c5c>  // b.tstop
  40391c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  403920:	sub	x0, x20, #0x7
  403924:	add	x1, x1, #0xb6c
  403928:	mov	w2, #0x7                   	// #7
  40392c:	bl	401a50 <strncmp@plt>
  403930:	cbnz	w0, 40395c <ferror@plt+0x1c5c>
  403934:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  403938:	add	x1, x1, #0xb74
  40393c:	mov	w2, #0x3                   	// #3
  403940:	mov	x0, x20
  403944:	bl	401a50 <strncmp@plt>
  403948:	mov	x19, x20
  40394c:	cbnz	w0, 40395c <ferror@plt+0x1c5c>
  403950:	add	x19, x20, #0x3
  403954:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403958:	str	x19, [x8, #712]
  40395c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403960:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  403964:	str	x19, [x8, #816]
  403968:	str	x19, [x9, #664]
  40396c:	ldp	x20, x19, [sp, #16]
  403970:	ldp	x29, x30, [sp], #32
  403974:	ret
  403978:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40397c:	ldr	x1, [x8, #672]
  403980:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x40>
  403984:	add	x0, x0, #0xb34
  403988:	bl	401920 <fputs@plt>
  40398c:	bl	401b40 <abort@plt>
  403990:	stp	x29, x30, [sp, #-48]!
  403994:	str	x21, [sp, #16]
  403998:	stp	x20, x19, [sp, #32]
  40399c:	mov	x29, sp
  4039a0:	mov	x19, x0
  4039a4:	bl	401cb0 <__errno_location@plt>
  4039a8:	ldr	w21, [x0]
  4039ac:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4039b0:	add	x8, x8, #0x338
  4039b4:	cmp	x19, #0x0
  4039b8:	mov	x20, x0
  4039bc:	csel	x0, x8, x19, eq  // eq = none
  4039c0:	mov	w1, #0x38                  	// #56
  4039c4:	bl	4059a4 <ferror@plt+0x3ca4>
  4039c8:	str	w21, [x20]
  4039cc:	ldp	x20, x19, [sp, #32]
  4039d0:	ldr	x21, [sp, #16]
  4039d4:	ldp	x29, x30, [sp], #48
  4039d8:	ret
  4039dc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4039e0:	add	x8, x8, #0x338
  4039e4:	cmp	x0, #0x0
  4039e8:	csel	x8, x8, x0, eq  // eq = none
  4039ec:	ldr	w0, [x8]
  4039f0:	ret
  4039f4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4039f8:	add	x8, x8, #0x338
  4039fc:	cmp	x0, #0x0
  403a00:	csel	x8, x8, x0, eq  // eq = none
  403a04:	str	w1, [x8]
  403a08:	ret
  403a0c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403a10:	add	x8, x8, #0x338
  403a14:	cmp	x0, #0x0
  403a18:	ubfx	w9, w1, #5, #3
  403a1c:	csel	x8, x8, x0, eq  // eq = none
  403a20:	add	x8, x8, w9, uxtw #2
  403a24:	ldr	w9, [x8, #8]
  403a28:	lsr	w10, w9, w1
  403a2c:	and	w0, w10, #0x1
  403a30:	and	w10, w2, #0x1
  403a34:	eor	w10, w0, w10
  403a38:	lsl	w10, w10, w1
  403a3c:	eor	w9, w10, w9
  403a40:	str	w9, [x8, #8]
  403a44:	ret
  403a48:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403a4c:	add	x8, x8, #0x338
  403a50:	cmp	x0, #0x0
  403a54:	csel	x8, x8, x0, eq  // eq = none
  403a58:	ldr	w0, [x8, #4]
  403a5c:	str	w1, [x8, #4]
  403a60:	ret
  403a64:	stp	x29, x30, [sp, #-16]!
  403a68:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403a6c:	add	x8, x8, #0x338
  403a70:	cmp	x0, #0x0
  403a74:	csel	x8, x8, x0, eq  // eq = none
  403a78:	mov	w9, #0xa                   	// #10
  403a7c:	mov	x29, sp
  403a80:	str	w9, [x8]
  403a84:	cbz	x1, 403a98 <ferror@plt+0x1d98>
  403a88:	cbz	x2, 403a98 <ferror@plt+0x1d98>
  403a8c:	stp	x1, x2, [x8, #40]
  403a90:	ldp	x29, x30, [sp], #16
  403a94:	ret
  403a98:	bl	401b40 <abort@plt>
  403a9c:	sub	sp, sp, #0x60
  403aa0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  403aa4:	add	x8, x8, #0x338
  403aa8:	cmp	x4, #0x0
  403aac:	stp	x29, x30, [sp, #16]
  403ab0:	str	x25, [sp, #32]
  403ab4:	stp	x24, x23, [sp, #48]
  403ab8:	stp	x22, x21, [sp, #64]
  403abc:	stp	x20, x19, [sp, #80]
  403ac0:	add	x29, sp, #0x10
  403ac4:	mov	x19, x3
  403ac8:	mov	x20, x2
  403acc:	mov	x21, x1
  403ad0:	mov	x22, x0
  403ad4:	csel	x24, x8, x4, eq  // eq = none
  403ad8:	bl	401cb0 <__errno_location@plt>
  403adc:	ldp	w4, w5, [x24]
  403ae0:	ldp	x7, x8, [x24, #40]
  403ae4:	ldr	w25, [x0]
  403ae8:	mov	x23, x0
  403aec:	add	x6, x24, #0x8
  403af0:	mov	x0, x22
  403af4:	mov	x1, x21
  403af8:	mov	x2, x20
  403afc:	mov	x3, x19
  403b00:	str	x8, [sp]
  403b04:	bl	403b28 <ferror@plt+0x1e28>
  403b08:	str	w25, [x23]
  403b0c:	ldp	x20, x19, [sp, #80]
  403b10:	ldp	x22, x21, [sp, #64]
  403b14:	ldp	x24, x23, [sp, #48]
  403b18:	ldr	x25, [sp, #32]
  403b1c:	ldp	x29, x30, [sp, #16]
  403b20:	add	sp, sp, #0x60
  403b24:	ret
  403b28:	sub	sp, sp, #0x120
  403b2c:	stp	x29, x30, [sp, #192]
  403b30:	add	x29, sp, #0xc0
  403b34:	ldr	x8, [x29, #96]
  403b38:	stp	x28, x27, [sp, #208]
  403b3c:	stp	x26, x25, [sp, #224]
  403b40:	stp	x24, x23, [sp, #240]
  403b44:	stp	x22, x21, [sp, #256]
  403b48:	stp	x20, x19, [sp, #272]
  403b4c:	str	x7, [sp, #88]
  403b50:	stur	x6, [x29, #-40]
  403b54:	mov	w19, w5
  403b58:	mov	w22, w4
  403b5c:	mov	x28, x3
  403b60:	mov	x20, x2
  403b64:	mov	x24, x1
  403b68:	stur	x8, [x29, #-88]
  403b6c:	mov	x21, x0
  403b70:	bl	401bf0 <__ctype_get_mb_cur_max@plt>
  403b74:	mov	w4, w22
  403b78:	mov	w8, wzr
  403b7c:	mov	w14, wzr
  403b80:	str	w19, [sp, #80]
  403b84:	ubfx	w19, w19, #1, #1
  403b88:	add	x9, x20, #0x1
  403b8c:	mov	w25, #0x1                   	// #1
  403b90:	str	x0, [sp, #48]
  403b94:	str	xzr, [sp, #64]
  403b98:	stur	xzr, [x29, #-64]
  403b9c:	stur	xzr, [x29, #-32]
  403ba0:	str	wzr, [sp, #72]
  403ba4:	stur	x20, [x29, #-80]
  403ba8:	str	x9, [sp, #96]
  403bac:	cmp	w4, #0xa
  403bb0:	b.hi	404748 <ferror@plt+0x2a48>  // b.pmore
  403bb4:	adrp	x12, 406000 <_obstack_memory_used@@Base+0x40>
  403bb8:	mov	w9, w4
  403bbc:	add	x12, x12, #0xb78
  403bc0:	mov	x22, x24
  403bc4:	adr	x10, 403be4 <ferror@plt+0x1ee4>
  403bc8:	ldrb	w11, [x12, x9]
  403bcc:	add	x10, x10, x11, lsl #2
  403bd0:	ldur	x24, [x29, #-80]
  403bd4:	mov	x20, xzr
  403bd8:	mov	w16, wzr
  403bdc:	mov	w9, #0x1                   	// #1
  403be0:	br	x10
  403be4:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x40>
  403be8:	add	x0, x0, #0xcd4
  403bec:	mov	w1, w4
  403bf0:	mov	w20, w4
  403bf4:	mov	w23, w14
  403bf8:	bl	404e74 <ferror@plt+0x3174>
  403bfc:	str	x0, [sp, #88]
  403c00:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x40>
  403c04:	add	x0, x0, #0xcd6
  403c08:	mov	w1, w20
  403c0c:	bl	404e74 <ferror@plt+0x3174>
  403c10:	mov	w14, w23
  403c14:	mov	w4, w20
  403c18:	stur	x0, [x29, #-88]
  403c1c:	tbnz	w19, #0, 403c5c <ferror@plt+0x1f5c>
  403c20:	ldr	x8, [sp, #88]
  403c24:	ldrb	w9, [x8]
  403c28:	cbz	w9, 403c5c <ferror@plt+0x1f5c>
  403c2c:	mov	w27, w14
  403c30:	mov	w26, w4
  403c34:	mov	x10, xzr
  403c38:	add	x8, x8, #0x1
  403c3c:	cmp	x10, x22
  403c40:	b.cs	403c48 <ferror@plt+0x1f48>  // b.hs, b.nlast
  403c44:	strb	w9, [x21, x10]
  403c48:	ldrb	w9, [x8, x10]
  403c4c:	add	x20, x10, #0x1
  403c50:	mov	x10, x20
  403c54:	cbnz	w9, 403c3c <ferror@plt+0x1f3c>
  403c58:	b	403c68 <ferror@plt+0x1f68>
  403c5c:	mov	w27, w14
  403c60:	mov	w26, w4
  403c64:	mov	x20, xzr
  403c68:	ldur	x23, [x29, #-88]
  403c6c:	mov	x0, x23
  403c70:	bl	401910 <strlen@plt>
  403c74:	stur	x0, [x29, #-32]
  403c78:	stur	x23, [x29, #-64]
  403c7c:	mov	w9, #0x1                   	// #1
  403c80:	mov	w16, w19
  403c84:	mov	w4, w26
  403c88:	mov	w14, w27
  403c8c:	b	403d08 <ferror@plt+0x2008>
  403c90:	mov	w8, #0x1                   	// #1
  403c94:	b	403ce4 <ferror@plt+0x1fe4>
  403c98:	mov	w4, wzr
  403c9c:	mov	x20, xzr
  403ca0:	mov	w16, wzr
  403ca4:	mov	w9, w8
  403ca8:	b	403d08 <ferror@plt+0x2008>
  403cac:	tbnz	w19, #0, 403ce4 <ferror@plt+0x1fe4>
  403cb0:	mov	w9, w8
  403cb4:	b	4045fc <ferror@plt+0x28fc>
  403cb8:	tbz	w19, #0, 4045c4 <ferror@plt+0x28c4>
  403cbc:	mov	w8, #0x1                   	// #1
  403cc0:	stur	x8, [x29, #-32]
  403cc4:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  403cc8:	add	x8, x8, #0x8b8
  403ccc:	mov	x20, xzr
  403cd0:	mov	w4, #0x5                   	// #5
  403cd4:	stur	x8, [x29, #-64]
  403cd8:	mov	w9, #0x1                   	// #1
  403cdc:	b	403d04 <ferror@plt+0x2004>
  403ce0:	tbz	w19, #0, 4045f8 <ferror@plt+0x28f8>
  403ce4:	mov	w9, #0x1                   	// #1
  403ce8:	stur	x9, [x29, #-32]
  403cec:	adrp	x9, 406000 <_obstack_memory_used@@Base+0x40>
  403cf0:	add	x9, x9, #0xcd6
  403cf4:	mov	x20, xzr
  403cf8:	mov	w4, #0x2                   	// #2
  403cfc:	stur	x9, [x29, #-64]
  403d00:	mov	w9, w8
  403d04:	mov	w16, #0x1                   	// #1
  403d08:	mov	w15, w9
  403d0c:	ldp	x8, x9, [x29, #-40]
  403d10:	eor	w17, w16, #0x1
  403d14:	stur	w17, [x29, #-68]
  403d18:	mov	x23, xzr
  403d1c:	cmp	x8, #0x0
  403d20:	cset	w8, eq  // eq = none
  403d24:	cmp	x9, #0x0
  403d28:	cset	w9, ne  // ne = any
  403d2c:	cmp	w4, #0x2
  403d30:	cset	w10, ne  // ne = any
  403d34:	and	w13, w10, w15
  403d38:	and	w12, w9, w16
  403d3c:	orr	w10, w10, w17
  403d40:	and	w17, w9, w13
  403d44:	orr	w9, w13, w16
  403d48:	eor	w9, w9, #0x1
  403d4c:	cset	w11, eq  // eq = none
  403d50:	orr	w8, w8, w9
  403d54:	and	w12, w15, w12
  403d58:	str	w10, [sp, #84]
  403d5c:	and	w10, w11, w16
  403d60:	stur	w8, [x29, #-24]
  403d64:	eor	w8, w15, #0x1
  403d68:	str	w12, [sp, #56]
  403d6c:	str	w10, [sp, #76]
  403d70:	stur	w15, [x29, #-72]
  403d74:	str	w8, [sp, #60]
  403d78:	stp	w16, w4, [x29, #-48]
  403d7c:	stur	w17, [x29, #-52]
  403d80:	cmn	x28, #0x1
  403d84:	b.eq	403d94 <ferror@plt+0x2094>  // b.none
  403d88:	cmp	x23, x28
  403d8c:	b.ne	403d9c <ferror@plt+0x209c>  // b.any
  403d90:	b	404554 <ferror@plt+0x2854>
  403d94:	ldrb	w8, [x24, x23]
  403d98:	cbz	w8, 40455c <ferror@plt+0x285c>
  403d9c:	cbz	w17, 403ddc <ferror@plt+0x20dc>
  403da0:	ldur	x8, [x29, #-32]
  403da4:	cmp	x8, #0x2
  403da8:	add	x19, x23, x8
  403dac:	b.cc	403dd4 <ferror@plt+0x20d4>  // b.lo, b.ul, b.last
  403db0:	cmn	x28, #0x1
  403db4:	b.ne	403dd4 <ferror@plt+0x20d4>  // b.any
  403db8:	mov	x0, x24
  403dbc:	mov	w26, w14
  403dc0:	bl	401910 <strlen@plt>
  403dc4:	ldp	w17, w16, [x29, #-52]
  403dc8:	ldur	w4, [x29, #-44]
  403dcc:	mov	w14, w26
  403dd0:	mov	x28, x0
  403dd4:	cmp	x19, x28
  403dd8:	b.ls	403de4 <ferror@plt+0x20e4>  // b.plast
  403ddc:	mov	w27, wzr
  403de0:	b	403e1c <ferror@plt+0x211c>
  403de4:	ldur	x1, [x29, #-64]
  403de8:	ldur	x2, [x29, #-32]
  403dec:	add	x0, x24, x23
  403df0:	mov	w19, w14
  403df4:	bl	401ad0 <bcmp@plt>
  403df8:	ldur	w9, [x29, #-68]
  403dfc:	cmp	w0, #0x0
  403e00:	cset	w8, ne  // ne = any
  403e04:	cset	w27, eq  // eq = none
  403e08:	orr	w8, w8, w9
  403e0c:	tbz	w8, #0, 404654 <ferror@plt+0x2954>
  403e10:	ldp	w16, w4, [x29, #-48]
  403e14:	ldur	w17, [x29, #-52]
  403e18:	mov	w14, w19
  403e1c:	ldrb	w19, [x24, x23]
  403e20:	cmp	w19, #0x7e
  403e24:	b.hi	40403c <ferror@plt+0x233c>  // b.pmore
  403e28:	adrp	x13, 406000 <_obstack_memory_used@@Base+0x40>
  403e2c:	add	x13, x13, #0xb83
  403e30:	adr	x12, 403e54 <ferror@plt+0x2154>
  403e34:	ldrb	w9, [x13, x19]
  403e38:	add	x12, x12, x9, lsl #2
  403e3c:	mov	w10, wzr
  403e40:	mov	w8, wzr
  403e44:	mov	w26, #0x1                   	// #1
  403e48:	mov	w11, #0x6e                  	// #110
  403e4c:	mov	w9, #0x61                  	// #97
  403e50:	br	x12
  403e54:	ldur	w9, [x29, #-24]
  403e58:	tbnz	w9, #0, 403e78 <ferror@plt+0x2178>
  403e5c:	ldur	x10, [x29, #-40]
  403e60:	lsr	w9, w19, #5
  403e64:	ldr	w9, [x10, w9, uxtw #2]
  403e68:	lsr	w9, w9, w19
  403e6c:	tbz	w9, #0, 403e78 <ferror@plt+0x2178>
  403e70:	mov	w9, w19
  403e74:	b	403e80 <ferror@plt+0x2180>
  403e78:	mov	w9, w19
  403e7c:	cbz	w27, 4040a0 <ferror@plt+0x23a0>
  403e80:	tbnz	w16, #0, 40462c <ferror@plt+0x292c>
  403e84:	cmp	w4, #0x2
  403e88:	cset	w8, ne  // ne = any
  403e8c:	orr	w8, w8, w14
  403e90:	tbnz	w8, #0, 403ed4 <ferror@plt+0x21d4>
  403e94:	cmp	x20, x22
  403e98:	b.cs	403ea4 <ferror@plt+0x21a4>  // b.hs, b.nlast
  403e9c:	mov	w8, #0x27                  	// #39
  403ea0:	strb	w8, [x21, x20]
  403ea4:	add	x8, x20, #0x1
  403ea8:	cmp	x8, x22
  403eac:	b.cs	403eb8 <ferror@plt+0x21b8>  // b.hs, b.nlast
  403eb0:	mov	w10, #0x24                  	// #36
  403eb4:	strb	w10, [x21, x8]
  403eb8:	add	x8, x20, #0x2
  403ebc:	cmp	x8, x22
  403ec0:	b.cs	403ecc <ferror@plt+0x21cc>  // b.hs, b.nlast
  403ec4:	mov	w10, #0x27                  	// #39
  403ec8:	strb	w10, [x21, x8]
  403ecc:	add	x20, x20, #0x3
  403ed0:	mov	w14, #0x1                   	// #1
  403ed4:	cmp	x20, x22
  403ed8:	b.cs	403ee4 <ferror@plt+0x21e4>  // b.hs, b.nlast
  403edc:	mov	w8, #0x5c                  	// #92
  403ee0:	strb	w8, [x21, x20]
  403ee4:	add	x20, x20, #0x1
  403ee8:	b	4040d8 <ferror@plt+0x23d8>
  403eec:	cmp	x28, #0x1
  403ef0:	b.eq	403f14 <ferror@plt+0x2214>  // b.none
  403ef4:	cmn	x28, #0x1
  403ef8:	b.ne	403f18 <ferror@plt+0x2218>  // b.any
  403efc:	ldrb	w8, [x24, #1]
  403f00:	cbz	w8, 403f14 <ferror@plt+0x2214>
  403f04:	mov	w8, wzr
  403f08:	mov	w26, wzr
  403f0c:	mov	x28, #0xffffffffffffffff    	// #-1
  403f10:	b	403e54 <ferror@plt+0x2154>
  403f14:	cbz	x23, 403f24 <ferror@plt+0x2224>
  403f18:	mov	w8, wzr
  403f1c:	mov	w26, wzr
  403f20:	b	403e54 <ferror@plt+0x2154>
  403f24:	mov	w10, #0x1                   	// #1
  403f28:	cmp	w4, #0x2
  403f2c:	b.ne	403f34 <ferror@plt+0x2234>  // b.any
  403f30:	tbnz	w16, #0, 40462c <ferror@plt+0x292c>
  403f34:	mov	w8, wzr
  403f38:	mov	w26, w10
  403f3c:	b	403e54 <ferror@plt+0x2154>
  403f40:	cmp	w4, #0x2
  403f44:	b.ne	404088 <ferror@plt+0x2388>  // b.any
  403f48:	tbz	w16, #0, 404094 <ferror@plt+0x2394>
  403f4c:	b	40462c <ferror@plt+0x292c>
  403f50:	mov	w9, #0x66                  	// #102
  403f54:	b	4040f4 <ferror@plt+0x23f4>
  403f58:	mov	w11, #0x74                  	// #116
  403f5c:	b	403f6c <ferror@plt+0x226c>
  403f60:	mov	w9, #0x62                  	// #98
  403f64:	b	4040f4 <ferror@plt+0x23f4>
  403f68:	mov	w11, #0x72                  	// #114
  403f6c:	ldr	w8, [sp, #84]
  403f70:	mov	w9, w11
  403f74:	tbnz	w8, #0, 4040f4 <ferror@plt+0x23f4>
  403f78:	b	40462c <ferror@plt+0x292c>
  403f7c:	ldur	w8, [x29, #-72]
  403f80:	tbz	w8, #0, 404108 <ferror@plt+0x2408>
  403f84:	cmp	w4, #0x2
  403f88:	tbnz	w16, #0, 40473c <ferror@plt+0x2a3c>
  403f8c:	cset	w8, ne  // ne = any
  403f90:	orr	w8, w8, w14
  403f94:	tbz	w8, #0, 40443c <ferror@plt+0x273c>
  403f98:	mov	x8, x20
  403f9c:	b	40447c <ferror@plt+0x277c>
  403fa0:	cmp	w4, #0x5
  403fa4:	b.eq	40422c <ferror@plt+0x252c>  // b.none
  403fa8:	cmp	w4, #0x2
  403fac:	b.ne	4042dc <ferror@plt+0x25dc>  // b.any
  403fb0:	tbz	w16, #0, 4042dc <ferror@plt+0x25dc>
  403fb4:	b	40462c <ferror@plt+0x292c>
  403fb8:	mov	w9, #0x76                  	// #118
  403fbc:	b	4040f4 <ferror@plt+0x23f4>
  403fc0:	cmp	w4, #0x2
  403fc4:	b.ne	404118 <ferror@plt+0x2418>  // b.any
  403fc8:	tbnz	w16, #0, 40462c <ferror@plt+0x292c>
  403fcc:	ldr	x10, [sp, #64]
  403fd0:	cmp	x22, #0x0
  403fd4:	cset	w8, eq  // eq = none
  403fd8:	cmp	x10, #0x0
  403fdc:	cset	w9, ne  // ne = any
  403fe0:	orr	w8, w9, w8
  403fe4:	cmp	w8, #0x0
  403fe8:	csel	x10, x10, x22, ne  // ne = any
  403fec:	csel	x22, x22, xzr, ne  // ne = any
  403ff0:	cmp	x20, x22
  403ff4:	str	x10, [sp, #64]
  403ff8:	b.cs	404004 <ferror@plt+0x2304>  // b.hs, b.nlast
  403ffc:	mov	w8, #0x27                  	// #39
  404000:	strb	w8, [x21, x20]
  404004:	add	x8, x20, #0x1
  404008:	cmp	x8, x22
  40400c:	b.cs	404018 <ferror@plt+0x2318>  // b.hs, b.nlast
  404010:	mov	w9, #0x5c                  	// #92
  404014:	strb	w9, [x21, x8]
  404018:	add	x8, x20, #0x2
  40401c:	cmp	x8, x22
  404020:	b.cs	40402c <ferror@plt+0x232c>  // b.hs, b.nlast
  404024:	mov	w9, #0x27                  	// #39
  404028:	strb	w9, [x21, x8]
  40402c:	mov	w14, wzr
  404030:	mov	w8, wzr
  404034:	add	x20, x20, #0x3
  404038:	b	40411c <ferror@plt+0x241c>
  40403c:	ldr	x8, [sp, #48]
  404040:	str	w14, [sp, #28]
  404044:	cmp	x8, #0x1
  404048:	b.ne	404130 <ferror@plt+0x2430>  // b.any
  40404c:	bl	401bc0 <__ctype_b_loc@plt>
  404050:	ldr	x8, [x0]
  404054:	mov	w11, #0x1                   	// #1
  404058:	ldrh	w8, [x8, x19, lsl #1]
  40405c:	ubfx	w26, w8, #14, #1
  404060:	ldr	w8, [sp, #60]
  404064:	ldp	w16, w4, [x29, #-48]
  404068:	ldr	w14, [sp, #28]
  40406c:	ldur	w17, [x29, #-52]
  404070:	cmp	x11, #0x1
  404074:	orr	w8, w26, w8
  404078:	b.hi	4042ec <ferror@plt+0x25ec>  // b.pmore
  40407c:	tbz	w8, #0, 4042ec <ferror@plt+0x25ec>
  404080:	mov	w8, wzr
  404084:	b	403e54 <ferror@plt+0x2154>
  404088:	ldr	w8, [sp, #56]
  40408c:	mov	w9, #0x5c                  	// #92
  404090:	tbz	w8, #0, 4040f4 <ferror@plt+0x23f4>
  404094:	mov	w8, wzr
  404098:	mov	w26, wzr
  40409c:	mov	w19, #0x5c                  	// #92
  4040a0:	tbnz	w8, #0, 4040d4 <ferror@plt+0x23d4>
  4040a4:	tbz	w14, #0, 4040d4 <ferror@plt+0x23d4>
  4040a8:	cmp	x20, x22
  4040ac:	b.cs	4040b8 <ferror@plt+0x23b8>  // b.hs, b.nlast
  4040b0:	mov	w8, #0x27                  	// #39
  4040b4:	strb	w8, [x21, x20]
  4040b8:	add	x8, x20, #0x1
  4040bc:	cmp	x8, x22
  4040c0:	b.cs	4040cc <ferror@plt+0x23cc>  // b.hs, b.nlast
  4040c4:	mov	w9, #0x27                  	// #39
  4040c8:	strb	w9, [x21, x8]
  4040cc:	mov	w14, wzr
  4040d0:	add	x20, x20, #0x2
  4040d4:	mov	w9, w19
  4040d8:	cmp	x20, x22
  4040dc:	b.cs	4040e4 <ferror@plt+0x23e4>  // b.hs, b.nlast
  4040e0:	strb	w9, [x21, x20]
  4040e4:	add	x20, x20, #0x1
  4040e8:	and	w25, w25, w26
  4040ec:	add	x23, x23, #0x1
  4040f0:	b	403d80 <ferror@plt+0x2080>
  4040f4:	ldur	w10, [x29, #-72]
  4040f8:	mov	w8, wzr
  4040fc:	mov	w26, wzr
  404100:	tbz	w10, #0, 403e54 <ferror@plt+0x2154>
  404104:	b	403e80 <ferror@plt+0x2180>
  404108:	ldr	w8, [sp, #80]
  40410c:	tbnz	w8, #0, 4040ec <ferror@plt+0x23ec>
  404110:	mov	w19, wzr
  404114:	b	403f18 <ferror@plt+0x2218>
  404118:	mov	w8, wzr
  40411c:	mov	w9, #0x1                   	// #1
  404120:	mov	w19, #0x27                  	// #39
  404124:	str	w9, [sp, #72]
  404128:	mov	w26, #0x1                   	// #1
  40412c:	b	403e54 <ferror@plt+0x2154>
  404130:	cmn	x28, #0x1
  404134:	stur	xzr, [x29, #-16]
  404138:	b.ne	404148 <ferror@plt+0x2448>  // b.any
  40413c:	mov	x0, x24
  404140:	bl	401910 <strlen@plt>
  404144:	mov	x28, x0
  404148:	ldr	x8, [sp, #96]
  40414c:	mov	x11, xzr
  404150:	mov	w26, #0x1                   	// #1
  404154:	str	x21, [sp, #32]
  404158:	add	x8, x8, x23
  40415c:	str	x8, [sp, #16]
  404160:	add	x21, x11, x23
  404164:	add	x1, x24, x21
  404168:	sub	x2, x28, x21
  40416c:	sub	x0, x29, #0x14
  404170:	sub	x3, x29, #0x10
  404174:	str	x11, [sp, #40]
  404178:	bl	405c38 <ferror@plt+0x3f38>
  40417c:	cbz	x0, 404534 <ferror@plt+0x2834>
  404180:	mov	x24, x0
  404184:	cmn	x0, #0x1
  404188:	b.eq	404530 <ferror@plt+0x2830>  // b.none
  40418c:	cmn	x24, #0x2
  404190:	b.eq	4044f4 <ferror@plt+0x27f4>  // b.none
  404194:	ldr	w9, [sp, #76]
  404198:	ldr	x21, [sp, #32]
  40419c:	cmp	x24, #0x2
  4041a0:	cset	w8, cc  // cc = lo, ul, last
  4041a4:	eor	w9, w9, #0x1
  4041a8:	mov	x12, #0x2b                  	// #43
  4041ac:	orr	w8, w9, w8
  4041b0:	mov	w11, #0x1                   	// #1
  4041b4:	movk	x12, #0x2, lsl #32
  4041b8:	tbnz	w8, #0, 4041f4 <ferror@plt+0x24f4>
  4041bc:	ldr	x9, [sp, #40]
  4041c0:	ldr	x10, [sp, #16]
  4041c4:	sub	x8, x24, #0x1
  4041c8:	add	x9, x10, x9
  4041cc:	ldrb	w10, [x9]
  4041d0:	sub	w10, w10, #0x5b
  4041d4:	cmp	w10, #0x21
  4041d8:	b.hi	4041e8 <ferror@plt+0x24e8>  // b.pmore
  4041dc:	lsl	x10, x11, x10
  4041e0:	tst	x10, x12
  4041e4:	b.ne	404660 <ferror@plt+0x2960>  // b.any
  4041e8:	subs	x8, x8, #0x1
  4041ec:	add	x9, x9, #0x1
  4041f0:	b.ne	4041cc <ferror@plt+0x24cc>  // b.any
  4041f4:	ldur	w0, [x29, #-20]
  4041f8:	bl	401c90 <iswprint@plt>
  4041fc:	ldr	x21, [sp, #40]
  404200:	cmp	w0, #0x0
  404204:	cset	w8, ne  // ne = any
  404208:	sub	x0, x29, #0x10
  40420c:	and	w26, w26, w8
  404210:	add	x21, x24, x21
  404214:	bl	401b60 <mbsinit@plt>
  404218:	mov	x11, x21
  40421c:	ldr	x21, [sp, #32]
  404220:	ldur	x24, [x29, #-80]
  404224:	cbz	w0, 404160 <ferror@plt+0x2460>
  404228:	b	404060 <ferror@plt+0x2360>
  40422c:	ldr	w8, [sp, #80]
  404230:	tbz	w8, #2, 4042dc <ferror@plt+0x25dc>
  404234:	add	x9, x23, #0x2
  404238:	cmp	x9, x28
  40423c:	b.cs	4042dc <ferror@plt+0x25dc>  // b.hs, b.nlast
  404240:	add	x8, x23, x24
  404244:	ldrb	w8, [x8, #1]
  404248:	cmp	w8, #0x3f
  40424c:	b.ne	4042dc <ferror@plt+0x25dc>  // b.any
  404250:	ldrb	w19, [x24, x9]
  404254:	mov	w8, wzr
  404258:	cmp	w19, #0x3e
  40425c:	b.hi	404548 <ferror@plt+0x2848>  // b.pmore
  404260:	mov	w10, #0x1                   	// #1
  404264:	mov	x11, #0xa38200000000        	// #179778741075968
  404268:	lsl	x10, x10, x19
  40426c:	movk	x11, #0x7000, lsl #48
  404270:	tst	x10, x11
  404274:	b.eq	404548 <ferror@plt+0x2848>  // b.none
  404278:	tbnz	w16, #0, 40462c <ferror@plt+0x292c>
  40427c:	cmp	x20, x22
  404280:	b.cs	40428c <ferror@plt+0x258c>  // b.hs, b.nlast
  404284:	mov	w8, #0x3f                  	// #63
  404288:	strb	w8, [x21, x20]
  40428c:	add	x8, x20, #0x1
  404290:	cmp	x8, x22
  404294:	b.cs	4042a0 <ferror@plt+0x25a0>  // b.hs, b.nlast
  404298:	mov	w10, #0x22                  	// #34
  40429c:	strb	w10, [x21, x8]
  4042a0:	add	x8, x20, #0x2
  4042a4:	cmp	x8, x22
  4042a8:	b.cs	4042b4 <ferror@plt+0x25b4>  // b.hs, b.nlast
  4042ac:	mov	w10, #0x22                  	// #34
  4042b0:	strb	w10, [x21, x8]
  4042b4:	add	x8, x20, #0x3
  4042b8:	cmp	x8, x22
  4042bc:	b.cs	4042c8 <ferror@plt+0x25c8>  // b.hs, b.nlast
  4042c0:	mov	w10, #0x3f                  	// #63
  4042c4:	strb	w10, [x21, x8]
  4042c8:	mov	w8, wzr
  4042cc:	mov	w26, wzr
  4042d0:	add	x20, x20, #0x4
  4042d4:	mov	x23, x9
  4042d8:	b	403e54 <ferror@plt+0x2154>
  4042dc:	mov	w8, wzr
  4042e0:	mov	w26, wzr
  4042e4:	mov	w19, #0x3f                  	// #63
  4042e8:	b	403e54 <ferror@plt+0x2154>
  4042ec:	mov	w10, wzr
  4042f0:	add	x9, x11, x23
  4042f4:	tbz	w8, #0, 404354 <ferror@plt+0x2654>
  4042f8:	b	404400 <ferror@plt+0x2700>
  4042fc:	and	w12, w10, #0x1
  404300:	orn	w12, w12, w14
  404304:	tbnz	w12, #0, 404334 <ferror@plt+0x2634>
  404308:	cmp	x20, x22
  40430c:	b.cs	404318 <ferror@plt+0x2618>  // b.hs, b.nlast
  404310:	mov	w12, #0x27                  	// #39
  404314:	strb	w12, [x21, x20]
  404318:	add	x12, x20, #0x1
  40431c:	cmp	x12, x22
  404320:	b.cs	40432c <ferror@plt+0x262c>  // b.hs, b.nlast
  404324:	mov	w13, #0x27                  	// #39
  404328:	strb	w13, [x21, x12]
  40432c:	mov	w14, wzr
  404330:	add	x20, x20, #0x2
  404334:	cmp	x20, x22
  404338:	b.cs	404340 <ferror@plt+0x2640>  // b.hs, b.nlast
  40433c:	strb	w19, [x21, x20]
  404340:	ldr	x12, [sp, #96]
  404344:	add	x20, x20, #0x1
  404348:	ldrb	w19, [x12, x23]
  40434c:	mov	x23, x11
  404350:	tbnz	w8, #0, 404400 <ferror@plt+0x2700>
  404354:	tbnz	w16, #0, 40462c <ferror@plt+0x292c>
  404358:	cmp	w4, #0x2
  40435c:	cset	w10, ne  // ne = any
  404360:	orr	w10, w10, w14
  404364:	tbnz	w10, #0, 4043a8 <ferror@plt+0x26a8>
  404368:	cmp	x20, x22
  40436c:	b.cs	404378 <ferror@plt+0x2678>  // b.hs, b.nlast
  404370:	mov	w10, #0x27                  	// #39
  404374:	strb	w10, [x21, x20]
  404378:	add	x10, x20, #0x1
  40437c:	cmp	x10, x22
  404380:	b.cs	40438c <ferror@plt+0x268c>  // b.hs, b.nlast
  404384:	mov	w11, #0x24                  	// #36
  404388:	strb	w11, [x21, x10]
  40438c:	add	x10, x20, #0x2
  404390:	cmp	x10, x22
  404394:	b.cs	4043a0 <ferror@plt+0x26a0>  // b.hs, b.nlast
  404398:	mov	w11, #0x27                  	// #39
  40439c:	strb	w11, [x21, x10]
  4043a0:	add	x20, x20, #0x3
  4043a4:	mov	w14, #0x1                   	// #1
  4043a8:	cmp	x20, x22
  4043ac:	b.cs	4043b8 <ferror@plt+0x26b8>  // b.hs, b.nlast
  4043b0:	mov	w10, #0x5c                  	// #92
  4043b4:	strb	w10, [x21, x20]
  4043b8:	add	x10, x20, #0x1
  4043bc:	cmp	x10, x22
  4043c0:	b.cs	4043d0 <ferror@plt+0x26d0>  // b.hs, b.nlast
  4043c4:	mov	w11, #0x30                  	// #48
  4043c8:	bfxil	w11, w19, #6, #2
  4043cc:	strb	w11, [x21, x10]
  4043d0:	add	x10, x20, #0x2
  4043d4:	cmp	x10, x22
  4043d8:	b.cs	4043e8 <ferror@plt+0x26e8>  // b.hs, b.nlast
  4043dc:	mov	w11, #0x30                  	// #48
  4043e0:	bfxil	w11, w19, #3, #3
  4043e4:	strb	w11, [x21, x10]
  4043e8:	mov	w11, #0x30                  	// #48
  4043ec:	bfxil	w11, w19, #0, #3
  4043f0:	add	x20, x20, #0x3
  4043f4:	mov	w10, #0x1                   	// #1
  4043f8:	mov	w19, w11
  4043fc:	b	404424 <ferror@plt+0x2724>
  404400:	tbz	w27, #0, 404420 <ferror@plt+0x2720>
  404404:	cmp	x20, x22
  404408:	b.cs	404414 <ferror@plt+0x2714>  // b.hs, b.nlast
  40440c:	mov	w11, #0x5c                  	// #92
  404410:	strb	w11, [x21, x20]
  404414:	mov	w27, wzr
  404418:	add	x20, x20, #0x1
  40441c:	b	404424 <ferror@plt+0x2724>
  404420:	mov	w27, wzr
  404424:	add	x11, x23, #0x1
  404428:	cmp	x9, x11
  40442c:	b.hi	4042fc <ferror@plt+0x25fc>  // b.pmore
  404430:	and	w8, w10, #0x1
  404434:	tbz	w8, #0, 4040a4 <ferror@plt+0x23a4>
  404438:	b	4040d4 <ferror@plt+0x23d4>
  40443c:	cmp	x20, x22
  404440:	b.cs	40444c <ferror@plt+0x274c>  // b.hs, b.nlast
  404444:	mov	w8, #0x27                  	// #39
  404448:	strb	w8, [x21, x20]
  40444c:	add	x8, x20, #0x1
  404450:	cmp	x8, x22
  404454:	b.cs	404460 <ferror@plt+0x2760>  // b.hs, b.nlast
  404458:	mov	w9, #0x24                  	// #36
  40445c:	strb	w9, [x21, x8]
  404460:	add	x8, x20, #0x2
  404464:	cmp	x8, x22
  404468:	b.cs	404474 <ferror@plt+0x2774>  // b.hs, b.nlast
  40446c:	mov	w9, #0x27                  	// #39
  404470:	strb	w9, [x21, x8]
  404474:	add	x8, x20, #0x3
  404478:	mov	w14, #0x1                   	// #1
  40447c:	cmp	x8, x22
  404480:	b.cs	40448c <ferror@plt+0x278c>  // b.hs, b.nlast
  404484:	mov	w9, #0x5c                  	// #92
  404488:	strb	w9, [x21, x8]
  40448c:	cmp	w4, #0x2
  404490:	add	x20, x8, #0x1
  404494:	b.eq	4044e4 <ferror@plt+0x27e4>  // b.none
  404498:	add	x9, x23, #0x1
  40449c:	cmp	x9, x28
  4044a0:	b.cs	4044e4 <ferror@plt+0x27e4>  // b.hs, b.nlast
  4044a4:	ldrb	w9, [x24, x9]
  4044a8:	sub	w9, w9, #0x30
  4044ac:	cmp	w9, #0x9
  4044b0:	b.hi	4044e4 <ferror@plt+0x27e4>  // b.pmore
  4044b4:	cmp	x20, x22
  4044b8:	b.cs	4044c4 <ferror@plt+0x27c4>  // b.hs, b.nlast
  4044bc:	mov	w9, #0x30                  	// #48
  4044c0:	strb	w9, [x21, x20]
  4044c4:	add	x9, x8, #0x2
  4044c8:	cmp	x9, x22
  4044cc:	b.cs	4044d8 <ferror@plt+0x27d8>  // b.hs, b.nlast
  4044d0:	mov	w10, #0x30                  	// #48
  4044d4:	strb	w10, [x21, x9]
  4044d8:	mov	w26, wzr
  4044dc:	add	x20, x8, #0x3
  4044e0:	b	4044e8 <ferror@plt+0x27e8>
  4044e4:	mov	w26, wzr
  4044e8:	mov	w8, #0x1                   	// #1
  4044ec:	mov	w19, #0x30                  	// #48
  4044f0:	b	403e54 <ferror@plt+0x2154>
  4044f4:	cmp	x28, x21
  4044f8:	b.ls	404530 <ferror@plt+0x2830>  // b.plast
  4044fc:	ldur	x24, [x29, #-80]
  404500:	ldp	x21, x11, [sp, #32]
  404504:	sub	x8, x28, x23
  404508:	add	x9, x24, x23
  40450c:	ldrb	w10, [x9, x11]
  404510:	cbz	w10, 404540 <ferror@plt+0x2840>
  404514:	add	x11, x11, #0x1
  404518:	add	x10, x23, x11
  40451c:	cmp	x10, x28
  404520:	b.cc	40450c <ferror@plt+0x280c>  // b.lo, b.ul, b.last
  404524:	mov	w26, wzr
  404528:	mov	x11, x8
  40452c:	b	404060 <ferror@plt+0x2360>
  404530:	mov	w26, wzr
  404534:	ldp	x21, x11, [sp, #32]
  404538:	ldur	x24, [x29, #-80]
  40453c:	b	404060 <ferror@plt+0x2360>
  404540:	mov	w26, wzr
  404544:	b	404060 <ferror@plt+0x2360>
  404548:	mov	w19, #0x3f                  	// #63
  40454c:	mov	w26, w8
  404550:	b	403e54 <ferror@plt+0x2154>
  404554:	mov	x28, x23
  404558:	b	404560 <ferror@plt+0x2860>
  40455c:	mov	x28, #0xffffffffffffffff    	// #-1
  404560:	cmp	w4, #0x2
  404564:	ldur	w10, [x29, #-72]
  404568:	cset	w8, eq  // eq = none
  40456c:	cmp	x20, #0x0
  404570:	cset	w9, eq  // eq = none
  404574:	and	w8, w8, w9
  404578:	and	w8, w16, w8
  40457c:	tbnz	w8, #0, 404630 <ferror@plt+0x2930>
  404580:	cmp	w4, #0x2
  404584:	cset	w8, ne  // ne = any
  404588:	orr	w8, w16, w8
  40458c:	tbnz	w8, #0, 4046fc <ferror@plt+0x29fc>
  404590:	ldr	w8, [sp, #72]
  404594:	eor	w8, w8, #0x1
  404598:	tbnz	w8, #0, 4046fc <ferror@plt+0x29fc>
  40459c:	tbnz	w25, #0, 4046cc <ferror@plt+0x29cc>
  4045a0:	ldr	x24, [sp, #64]
  4045a4:	mov	w19, wzr
  4045a8:	cbz	x24, 4046f8 <ferror@plt+0x29f8>
  4045ac:	mov	w4, #0x2                   	// #2
  4045b0:	mov	w8, w10
  4045b4:	mov	w25, w19
  4045b8:	mov	w16, w19
  4045bc:	cbz	x22, 403bac <ferror@plt+0x1eac>
  4045c0:	b	4046fc <ferror@plt+0x29fc>
  4045c4:	mov	w16, wzr
  4045c8:	cbz	x22, 4045d4 <ferror@plt+0x28d4>
  4045cc:	mov	w8, #0x22                  	// #34
  4045d0:	strb	w8, [x21]
  4045d4:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  4045d8:	add	x8, x8, #0x8b8
  4045dc:	stur	x8, [x29, #-64]
  4045e0:	mov	w8, #0x1                   	// #1
  4045e4:	mov	w20, #0x1                   	// #1
  4045e8:	mov	w4, #0x5                   	// #5
  4045ec:	stur	x8, [x29, #-32]
  4045f0:	mov	w9, #0x1                   	// #1
  4045f4:	b	403d08 <ferror@plt+0x2008>
  4045f8:	mov	w9, #0x1                   	// #1
  4045fc:	mov	w16, wzr
  404600:	cbz	x22, 40460c <ferror@plt+0x290c>
  404604:	mov	w8, #0x27                  	// #39
  404608:	strb	w8, [x21]
  40460c:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  404610:	add	x8, x8, #0xcd6
  404614:	stur	x8, [x29, #-64]
  404618:	mov	w8, #0x1                   	// #1
  40461c:	mov	w4, #0x2                   	// #2
  404620:	mov	w20, #0x1                   	// #1
  404624:	stur	x8, [x29, #-32]
  404628:	b	403d08 <ferror@plt+0x2008>
  40462c:	ldur	w10, [x29, #-72]
  404630:	tst	w10, #0x1
  404634:	mov	w8, #0x2                   	// #2
  404638:	mov	w9, #0x4                   	// #4
  40463c:	csel	w8, w9, w8, ne  // ne = any
  404640:	cmp	w4, #0x2
  404644:	b.ne	40464c <ferror@plt+0x294c>  // b.any
  404648:	mov	w4, w8
  40464c:	ldr	x7, [sp, #88]
  404650:	b	40467c <ferror@plt+0x297c>
  404654:	ldr	x7, [sp, #88]
  404658:	ldur	w4, [x29, #-44]
  40465c:	b	40467c <ferror@plt+0x297c>
  404660:	ldur	w8, [x29, #-72]
  404664:	ldr	x7, [sp, #88]
  404668:	ldur	x24, [x29, #-80]
  40466c:	mov	w9, #0x4                   	// #4
  404670:	tst	w8, #0x1
  404674:	mov	w8, #0x2                   	// #2
  404678:	csel	w4, w9, w8, ne  // ne = any
  40467c:	ldr	w8, [sp, #80]
  404680:	mov	x0, x21
  404684:	mov	x1, x22
  404688:	mov	x2, x24
  40468c:	and	w5, w8, #0xfffffffd
  404690:	ldur	x8, [x29, #-88]
  404694:	mov	x3, x28
  404698:	mov	x6, xzr
  40469c:	str	x8, [sp]
  4046a0:	bl	403b28 <ferror@plt+0x1e28>
  4046a4:	mov	x20, x0
  4046a8:	mov	x0, x20
  4046ac:	ldp	x20, x19, [sp, #272]
  4046b0:	ldp	x22, x21, [sp, #256]
  4046b4:	ldp	x24, x23, [sp, #240]
  4046b8:	ldp	x26, x25, [sp, #224]
  4046bc:	ldp	x28, x27, [sp, #208]
  4046c0:	ldp	x29, x30, [sp, #192]
  4046c4:	add	sp, sp, #0x120
  4046c8:	ret
  4046cc:	ldur	x8, [x29, #-88]
  4046d0:	ldr	x1, [sp, #64]
  4046d4:	ldur	x2, [x29, #-80]
  4046d8:	ldr	w5, [sp, #80]
  4046dc:	ldur	x6, [x29, #-40]
  4046e0:	ldr	x7, [sp, #88]
  4046e4:	mov	w4, #0x5                   	// #5
  4046e8:	str	x8, [sp]
  4046ec:	mov	x0, x21
  4046f0:	mov	x3, x28
  4046f4:	b	4046a0 <ferror@plt+0x29a0>
  4046f8:	mov	w16, w19
  4046fc:	ldur	x8, [x29, #-64]
  404700:	cbz	x8, 40472c <ferror@plt+0x2a2c>
  404704:	tbnz	w16, #0, 40472c <ferror@plt+0x2a2c>
  404708:	ldrb	w9, [x8]
  40470c:	cbz	w9, 40472c <ferror@plt+0x2a2c>
  404710:	add	x8, x8, #0x1
  404714:	cmp	x20, x22
  404718:	b.cs	404720 <ferror@plt+0x2a20>  // b.hs, b.nlast
  40471c:	strb	w9, [x21, x20]
  404720:	ldrb	w9, [x8], #1
  404724:	add	x20, x20, #0x1
  404728:	cbnz	w9, 404714 <ferror@plt+0x2a14>
  40472c:	cmp	x20, x22
  404730:	b.cs	4046a8 <ferror@plt+0x29a8>  // b.hs, b.nlast
  404734:	strb	wzr, [x21, x20]
  404738:	b	4046a8 <ferror@plt+0x29a8>
  40473c:	b.ne	40464c <ferror@plt+0x294c>  // b.any
  404740:	mov	w4, #0x4                   	// #4
  404744:	b	40464c <ferror@plt+0x294c>
  404748:	bl	401b40 <abort@plt>
  40474c:	mov	x3, x2
  404750:	mov	x2, xzr
  404754:	b	404758 <ferror@plt+0x2a58>
  404758:	sub	sp, sp, #0x70
  40475c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  404760:	add	x8, x8, #0x338
  404764:	cmp	x3, #0x0
  404768:	stp	x29, x30, [sp, #16]
  40476c:	stp	x28, x27, [sp, #32]
  404770:	stp	x26, x25, [sp, #48]
  404774:	stp	x24, x23, [sp, #64]
  404778:	stp	x22, x21, [sp, #80]
  40477c:	stp	x20, x19, [sp, #96]
  404780:	add	x29, sp, #0x10
  404784:	mov	x19, x2
  404788:	mov	x22, x1
  40478c:	mov	x23, x0
  404790:	csel	x21, x8, x3, eq  // eq = none
  404794:	bl	401cb0 <__errno_location@plt>
  404798:	ldp	w4, w8, [x21]
  40479c:	cmp	x19, #0x0
  4047a0:	ldp	x7, x9, [x21, #40]
  4047a4:	ldr	w28, [x0]
  4047a8:	cset	w10, eq  // eq = none
  4047ac:	orr	w25, w8, w10
  4047b0:	add	x26, x21, #0x8
  4047b4:	mov	x24, x0
  4047b8:	mov	x0, xzr
  4047bc:	mov	x1, xzr
  4047c0:	mov	x2, x23
  4047c4:	mov	x3, x22
  4047c8:	mov	w5, w25
  4047cc:	mov	x6, x26
  4047d0:	str	x9, [sp]
  4047d4:	bl	403b28 <ferror@plt+0x1e28>
  4047d8:	add	x27, x0, #0x1
  4047dc:	mov	x20, x0
  4047e0:	mov	x0, x27
  4047e4:	bl	4057f4 <ferror@plt+0x3af4>
  4047e8:	ldr	w4, [x21]
  4047ec:	ldp	x7, x8, [x21, #40]
  4047f0:	mov	x1, x27
  4047f4:	mov	x2, x23
  4047f8:	mov	x3, x22
  4047fc:	mov	w5, w25
  404800:	mov	x6, x26
  404804:	mov	x21, x0
  404808:	str	x8, [sp]
  40480c:	bl	403b28 <ferror@plt+0x1e28>
  404810:	str	w28, [x24]
  404814:	cbz	x19, 40481c <ferror@plt+0x2b1c>
  404818:	str	x20, [x19]
  40481c:	mov	x0, x21
  404820:	ldp	x20, x19, [sp, #96]
  404824:	ldp	x22, x21, [sp, #80]
  404828:	ldp	x24, x23, [sp, #64]
  40482c:	ldp	x26, x25, [sp, #48]
  404830:	ldp	x28, x27, [sp, #32]
  404834:	ldp	x29, x30, [sp, #16]
  404838:	add	sp, sp, #0x70
  40483c:	ret
  404840:	stp	x29, x30, [sp, #-64]!
  404844:	stp	x20, x19, [sp, #48]
  404848:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12040>
  40484c:	stp	x22, x21, [sp, #32]
  404850:	ldr	w8, [x20, #576]
  404854:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x12040>
  404858:	ldr	x19, [x21, #568]
  40485c:	str	x23, [sp, #16]
  404860:	cmp	w8, #0x2
  404864:	mov	x29, sp
  404868:	b.lt	40488c <ferror@plt+0x2b8c>  // b.tstop
  40486c:	add	x22, x19, #0x18
  404870:	mov	w23, #0x1                   	// #1
  404874:	ldr	x0, [x22], #16
  404878:	bl	401be0 <free@plt>
  40487c:	ldrsw	x8, [x20, #576]
  404880:	add	x23, x23, #0x1
  404884:	cmp	x23, x8
  404888:	b.lt	404874 <ferror@plt+0x2b74>  // b.tstop
  40488c:	ldr	x0, [x19, #8]
  404890:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x12040>
  404894:	add	x23, x23, #0x370
  404898:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x12040>
  40489c:	cmp	x0, x23
  4048a0:	add	x22, x22, #0x248
  4048a4:	b.eq	4048b4 <ferror@plt+0x2bb4>  // b.none
  4048a8:	bl	401be0 <free@plt>
  4048ac:	mov	w8, #0x100                 	// #256
  4048b0:	stp	x8, x23, [x22]
  4048b4:	cmp	x19, x22
  4048b8:	b.eq	4048c8 <ferror@plt+0x2bc8>  // b.none
  4048bc:	mov	x0, x19
  4048c0:	bl	401be0 <free@plt>
  4048c4:	str	x22, [x21, #568]
  4048c8:	mov	w8, #0x1                   	// #1
  4048cc:	str	w8, [x20, #576]
  4048d0:	ldp	x20, x19, [sp, #48]
  4048d4:	ldp	x22, x21, [sp, #32]
  4048d8:	ldr	x23, [sp, #16]
  4048dc:	ldp	x29, x30, [sp], #64
  4048e0:	ret
  4048e4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  4048e8:	add	x3, x3, #0x338
  4048ec:	mov	x2, #0xffffffffffffffff    	// #-1
  4048f0:	b	4048f4 <ferror@plt+0x2bf4>
  4048f4:	sub	sp, sp, #0x80
  4048f8:	stp	x29, x30, [sp, #32]
  4048fc:	add	x29, sp, #0x20
  404900:	stp	x28, x27, [sp, #48]
  404904:	stp	x26, x25, [sp, #64]
  404908:	stp	x24, x23, [sp, #80]
  40490c:	stp	x22, x21, [sp, #96]
  404910:	stp	x20, x19, [sp, #112]
  404914:	mov	x22, x3
  404918:	stur	x2, [x29, #-8]
  40491c:	mov	x21, x1
  404920:	mov	w23, w0
  404924:	bl	401cb0 <__errno_location@plt>
  404928:	tbnz	w23, #31, 404a78 <ferror@plt+0x2d78>
  40492c:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x12040>
  404930:	ldr	w8, [x25, #576]
  404934:	adrp	x28, 418000 <_obstack_memory_used@@Base+0x12040>
  404938:	ldr	w20, [x0]
  40493c:	ldr	x27, [x28, #568]
  404940:	mov	x19, x0
  404944:	cmp	w8, w23
  404948:	b.gt	4049b4 <ferror@plt+0x2cb4>
  40494c:	mov	w8, #0x7fffffff            	// #2147483647
  404950:	cmp	w23, w8
  404954:	stur	w20, [x29, #-12]
  404958:	b.eq	404a7c <ferror@plt+0x2d7c>  // b.none
  40495c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12040>
  404960:	add	x20, x20, #0x248
  404964:	add	w26, w23, #0x1
  404968:	cmp	x27, x20
  40496c:	csel	x0, xzr, x27, eq  // eq = none
  404970:	sbfiz	x1, x26, #4, #32
  404974:	bl	405844 <ferror@plt+0x3b44>
  404978:	mov	x24, x0
  40497c:	cmp	x27, x20
  404980:	str	x0, [x28, #568]
  404984:	b.ne	404990 <ferror@plt+0x2c90>  // b.any
  404988:	ldr	q0, [x20]
  40498c:	str	q0, [x24]
  404990:	ldrsw	x8, [x25, #576]
  404994:	mov	w1, wzr
  404998:	add	x0, x24, x8, lsl #4
  40499c:	sub	w8, w26, w8
  4049a0:	sbfiz	x2, x8, #4, #32
  4049a4:	bl	401aa0 <memset@plt>
  4049a8:	ldur	w20, [x29, #-12]
  4049ac:	mov	x27, x24
  4049b0:	str	w26, [x25, #576]
  4049b4:	add	x28, x27, w23, uxtw #4
  4049b8:	mov	x27, x28
  4049bc:	ldr	x26, [x28]
  4049c0:	ldr	x23, [x27, #8]!
  4049c4:	ldp	w4, w8, [x22]
  4049c8:	ldp	x7, x9, [x22, #40]
  4049cc:	ldur	x3, [x29, #-8]
  4049d0:	add	x24, x22, #0x8
  4049d4:	orr	w25, w8, #0x1
  4049d8:	mov	x0, x23
  4049dc:	mov	x1, x26
  4049e0:	mov	x2, x21
  4049e4:	mov	w5, w25
  4049e8:	mov	x6, x24
  4049ec:	str	x9, [sp]
  4049f0:	bl	403b28 <ferror@plt+0x1e28>
  4049f4:	cmp	x26, x0
  4049f8:	b.hi	404a50 <ferror@plt+0x2d50>  // b.pmore
  4049fc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  404a00:	add	x8, x8, #0x370
  404a04:	add	x26, x0, #0x1
  404a08:	cmp	x23, x8
  404a0c:	str	x26, [x28]
  404a10:	b.eq	404a1c <ferror@plt+0x2d1c>  // b.none
  404a14:	mov	x0, x23
  404a18:	bl	401be0 <free@plt>
  404a1c:	mov	x0, x26
  404a20:	bl	4057f4 <ferror@plt+0x3af4>
  404a24:	str	x0, [x27]
  404a28:	ldr	w4, [x22]
  404a2c:	ldp	x7, x8, [x22, #40]
  404a30:	ldur	x3, [x29, #-8]
  404a34:	mov	x1, x26
  404a38:	mov	x2, x21
  404a3c:	mov	w5, w25
  404a40:	mov	x6, x24
  404a44:	mov	x23, x0
  404a48:	str	x8, [sp]
  404a4c:	bl	403b28 <ferror@plt+0x1e28>
  404a50:	str	w20, [x19]
  404a54:	mov	x0, x23
  404a58:	ldp	x20, x19, [sp, #112]
  404a5c:	ldp	x22, x21, [sp, #96]
  404a60:	ldp	x24, x23, [sp, #80]
  404a64:	ldp	x26, x25, [sp, #64]
  404a68:	ldp	x28, x27, [sp, #48]
  404a6c:	ldp	x29, x30, [sp, #32]
  404a70:	add	sp, sp, #0x80
  404a74:	ret
  404a78:	bl	401b40 <abort@plt>
  404a7c:	bl	405a30 <ferror@plt+0x3d30>
  404a80:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404a84:	add	x3, x3, #0x338
  404a88:	b	4048f4 <ferror@plt+0x2bf4>
  404a8c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404a90:	add	x3, x3, #0x338
  404a94:	mov	x2, #0xffffffffffffffff    	// #-1
  404a98:	mov	x1, x0
  404a9c:	mov	w0, wzr
  404aa0:	b	4048f4 <ferror@plt+0x2bf4>
  404aa4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404aa8:	mov	x2, x1
  404aac:	add	x3, x3, #0x338
  404ab0:	mov	x1, x0
  404ab4:	mov	w0, wzr
  404ab8:	b	4048f4 <ferror@plt+0x2bf4>
  404abc:	sub	sp, sp, #0x50
  404ac0:	movi	v0.2d, #0x0
  404ac4:	cmp	w1, #0xa
  404ac8:	stp	x29, x30, [sp, #64]
  404acc:	add	x29, sp, #0x40
  404ad0:	str	xzr, [sp, #48]
  404ad4:	stp	q0, q0, [sp, #16]
  404ad8:	str	q0, [sp]
  404adc:	b.eq	404b04 <ferror@plt+0x2e04>  // b.none
  404ae0:	mov	x8, x2
  404ae4:	str	w1, [sp]
  404ae8:	mov	x3, sp
  404aec:	mov	x2, #0xffffffffffffffff    	// #-1
  404af0:	mov	x1, x8
  404af4:	bl	4048f4 <ferror@plt+0x2bf4>
  404af8:	ldp	x29, x30, [sp, #64]
  404afc:	add	sp, sp, #0x50
  404b00:	ret
  404b04:	bl	401b40 <abort@plt>
  404b08:	sub	sp, sp, #0x50
  404b0c:	movi	v0.2d, #0x0
  404b10:	cmp	w1, #0xa
  404b14:	stp	x29, x30, [sp, #64]
  404b18:	add	x29, sp, #0x40
  404b1c:	str	xzr, [sp, #48]
  404b20:	stp	q0, q0, [sp, #16]
  404b24:	str	q0, [sp]
  404b28:	b.eq	404b50 <ferror@plt+0x2e50>  // b.none
  404b2c:	mov	x8, x3
  404b30:	str	w1, [sp]
  404b34:	mov	x3, sp
  404b38:	mov	x1, x2
  404b3c:	mov	x2, x8
  404b40:	bl	4048f4 <ferror@plt+0x2bf4>
  404b44:	ldp	x29, x30, [sp, #64]
  404b48:	add	sp, sp, #0x50
  404b4c:	ret
  404b50:	bl	401b40 <abort@plt>
  404b54:	mov	x2, x1
  404b58:	mov	w1, w0
  404b5c:	mov	w0, wzr
  404b60:	b	404abc <ferror@plt+0x2dbc>
  404b64:	mov	x3, x2
  404b68:	mov	x2, x1
  404b6c:	mov	w1, w0
  404b70:	mov	w0, wzr
  404b74:	b	404b08 <ferror@plt+0x2e08>
  404b78:	sub	sp, sp, #0x50
  404b7c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  404b80:	add	x9, x9, #0x338
  404b84:	ldp	q0, q1, [x9]
  404b88:	ubfx	w10, w2, #5, #3
  404b8c:	mov	x11, sp
  404b90:	mov	x8, x1
  404b94:	stp	q0, q1, [sp]
  404b98:	ldr	q0, [x9, #32]
  404b9c:	ldr	x9, [x9, #48]
  404ba0:	mov	x1, x0
  404ba4:	mov	x3, sp
  404ba8:	str	q0, [sp, #32]
  404bac:	str	x9, [sp, #48]
  404bb0:	add	x9, x11, w10, uxtw #2
  404bb4:	ldr	w10, [x9, #8]
  404bb8:	mov	w0, wzr
  404bbc:	stp	x29, x30, [sp, #64]
  404bc0:	add	x29, sp, #0x40
  404bc4:	lsr	w11, w10, w2
  404bc8:	mvn	w11, w11
  404bcc:	and	w11, w11, #0x1
  404bd0:	lsl	w11, w11, w2
  404bd4:	eor	w10, w11, w10
  404bd8:	mov	x2, x8
  404bdc:	str	w10, [x9, #8]
  404be0:	bl	4048f4 <ferror@plt+0x2bf4>
  404be4:	ldp	x29, x30, [sp, #64]
  404be8:	add	sp, sp, #0x50
  404bec:	ret
  404bf0:	sub	sp, sp, #0x50
  404bf4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  404bf8:	add	x9, x9, #0x338
  404bfc:	ldp	q0, q1, [x9]
  404c00:	ubfx	w10, w1, #5, #3
  404c04:	mov	x11, sp
  404c08:	mov	x8, x0
  404c0c:	stp	q0, q1, [sp]
  404c10:	ldr	q0, [x9, #32]
  404c14:	ldr	x9, [x9, #48]
  404c18:	mov	x3, sp
  404c1c:	mov	x2, #0xffffffffffffffff    	// #-1
  404c20:	str	q0, [sp, #32]
  404c24:	str	x9, [sp, #48]
  404c28:	add	x9, x11, w10, uxtw #2
  404c2c:	ldr	w10, [x9, #8]
  404c30:	mov	w0, wzr
  404c34:	stp	x29, x30, [sp, #64]
  404c38:	add	x29, sp, #0x40
  404c3c:	lsr	w11, w10, w1
  404c40:	mvn	w11, w11
  404c44:	and	w11, w11, #0x1
  404c48:	lsl	w11, w11, w1
  404c4c:	eor	w10, w11, w10
  404c50:	mov	x1, x8
  404c54:	str	w10, [x9, #8]
  404c58:	bl	4048f4 <ferror@plt+0x2bf4>
  404c5c:	ldp	x29, x30, [sp, #64]
  404c60:	add	sp, sp, #0x50
  404c64:	ret
  404c68:	sub	sp, sp, #0x50
  404c6c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  404c70:	add	x8, x8, #0x338
  404c74:	ldp	q0, q1, [x8]
  404c78:	ldr	q2, [x8, #32]
  404c7c:	ldr	x8, [x8, #48]
  404c80:	mov	x1, x0
  404c84:	stp	q0, q1, [sp]
  404c88:	ldr	w9, [sp, #12]
  404c8c:	str	x8, [sp, #48]
  404c90:	mov	x3, sp
  404c94:	mov	x2, #0xffffffffffffffff    	// #-1
  404c98:	orr	w8, w9, #0x4000000
  404c9c:	mov	w0, wzr
  404ca0:	stp	x29, x30, [sp, #64]
  404ca4:	add	x29, sp, #0x40
  404ca8:	str	q2, [sp, #32]
  404cac:	str	w8, [sp, #12]
  404cb0:	bl	4048f4 <ferror@plt+0x2bf4>
  404cb4:	ldp	x29, x30, [sp, #64]
  404cb8:	add	sp, sp, #0x50
  404cbc:	ret
  404cc0:	sub	sp, sp, #0x50
  404cc4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  404cc8:	add	x8, x8, #0x338
  404ccc:	ldp	q0, q1, [x8]
  404cd0:	ldr	q2, [x8, #32]
  404cd4:	ldr	x8, [x8, #48]
  404cd8:	mov	x2, x1
  404cdc:	stp	q0, q1, [sp]
  404ce0:	ldr	w9, [sp, #12]
  404ce4:	mov	x1, x0
  404ce8:	str	x8, [sp, #48]
  404cec:	mov	x3, sp
  404cf0:	orr	w8, w9, #0x4000000
  404cf4:	mov	w0, wzr
  404cf8:	stp	x29, x30, [sp, #64]
  404cfc:	add	x29, sp, #0x40
  404d00:	str	q2, [sp, #32]
  404d04:	str	w8, [sp, #12]
  404d08:	bl	4048f4 <ferror@plt+0x2bf4>
  404d0c:	ldp	x29, x30, [sp, #64]
  404d10:	add	sp, sp, #0x50
  404d14:	ret
  404d18:	sub	sp, sp, #0x80
  404d1c:	movi	v0.2d, #0x0
  404d20:	cmp	w1, #0xa
  404d24:	stp	x29, x30, [sp, #112]
  404d28:	add	x29, sp, #0x70
  404d2c:	str	wzr, [sp, #48]
  404d30:	stp	q0, q0, [sp, #16]
  404d34:	str	q0, [sp]
  404d38:	b.eq	404d88 <ferror@plt+0x3088>  // b.none
  404d3c:	ldp	q0, q1, [sp]
  404d40:	ldr	w9, [sp, #48]
  404d44:	ldr	q2, [sp, #32]
  404d48:	mov	x8, x2
  404d4c:	stur	q0, [sp, #60]
  404d50:	ldr	w10, [sp, #68]
  404d54:	str	w1, [sp, #56]
  404d58:	str	w9, [sp, #108]
  404d5c:	add	x3, sp, #0x38
  404d60:	orr	w9, w10, #0x4000000
  404d64:	mov	x2, #0xffffffffffffffff    	// #-1
  404d68:	mov	x1, x8
  404d6c:	stur	q1, [sp, #76]
  404d70:	stur	q2, [sp, #92]
  404d74:	str	w9, [sp, #68]
  404d78:	bl	4048f4 <ferror@plt+0x2bf4>
  404d7c:	ldp	x29, x30, [sp, #112]
  404d80:	add	sp, sp, #0x80
  404d84:	ret
  404d88:	bl	401b40 <abort@plt>
  404d8c:	mov	x4, #0xffffffffffffffff    	// #-1
  404d90:	b	404d94 <ferror@plt+0x3094>
  404d94:	sub	sp, sp, #0x50
  404d98:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12040>
  404d9c:	add	x9, x9, #0x338
  404da0:	ldp	q0, q1, [x9]
  404da4:	ldr	x10, [x9, #48]
  404da8:	stp	x29, x30, [sp, #64]
  404dac:	add	x29, sp, #0x40
  404db0:	stp	q0, q1, [sp]
  404db4:	ldr	q0, [x9, #32]
  404db8:	mov	w9, #0xa                   	// #10
  404dbc:	str	x10, [sp, #48]
  404dc0:	str	w9, [sp]
  404dc4:	str	q0, [sp, #32]
  404dc8:	cbz	x1, 404df4 <ferror@plt+0x30f4>
  404dcc:	cbz	x2, 404df4 <ferror@plt+0x30f4>
  404dd0:	mov	x8, x3
  404dd4:	stp	x1, x2, [sp, #40]
  404dd8:	mov	x3, sp
  404ddc:	mov	x1, x8
  404de0:	mov	x2, x4
  404de4:	bl	4048f4 <ferror@plt+0x2bf4>
  404de8:	ldp	x29, x30, [sp, #64]
  404dec:	add	sp, sp, #0x50
  404df0:	ret
  404df4:	bl	401b40 <abort@plt>
  404df8:	mov	x3, x2
  404dfc:	mov	x2, x1
  404e00:	mov	x4, #0xffffffffffffffff    	// #-1
  404e04:	mov	x1, x0
  404e08:	mov	w0, wzr
  404e0c:	b	404d94 <ferror@plt+0x3094>
  404e10:	mov	x4, x3
  404e14:	mov	x3, x2
  404e18:	mov	x2, x1
  404e1c:	mov	x1, x0
  404e20:	mov	w0, wzr
  404e24:	b	404d94 <ferror@plt+0x3094>
  404e28:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404e2c:	add	x3, x3, #0x258
  404e30:	b	4048f4 <ferror@plt+0x2bf4>
  404e34:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404e38:	mov	x2, x1
  404e3c:	add	x3, x3, #0x258
  404e40:	mov	x1, x0
  404e44:	mov	w0, wzr
  404e48:	b	4048f4 <ferror@plt+0x2bf4>
  404e4c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404e50:	add	x3, x3, #0x258
  404e54:	mov	x2, #0xffffffffffffffff    	// #-1
  404e58:	b	4048f4 <ferror@plt+0x2bf4>
  404e5c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12040>
  404e60:	add	x3, x3, #0x258
  404e64:	mov	x2, #0xffffffffffffffff    	// #-1
  404e68:	mov	x1, x0
  404e6c:	mov	w0, wzr
  404e70:	b	4048f4 <ferror@plt+0x2bf4>
  404e74:	stp	x29, x30, [sp, #-32]!
  404e78:	stp	x20, x19, [sp, #16]
  404e7c:	mov	x20, x0
  404e80:	mov	w19, w1
  404e84:	mov	w2, #0x5                   	// #5
  404e88:	mov	x0, xzr
  404e8c:	mov	x1, x20
  404e90:	mov	x29, sp
  404e94:	bl	401c60 <dcgettext@plt>
  404e98:	cmp	x0, x20
  404e9c:	b.ne	404f80 <ferror@plt+0x3280>  // b.any
  404ea0:	bl	406108 <_obstack_memory_used@@Base+0x148>
  404ea4:	ldrb	w8, [x0]
  404ea8:	and	w8, w8, #0xffffffdf
  404eac:	cmp	w8, #0x47
  404eb0:	b.eq	404f14 <ferror@plt+0x3214>  // b.none
  404eb4:	cmp	w8, #0x55
  404eb8:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404ebc:	ldrb	w8, [x0, #1]
  404ec0:	and	w8, w8, #0xffffffdf
  404ec4:	cmp	w8, #0x54
  404ec8:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404ecc:	ldrb	w8, [x0, #2]
  404ed0:	and	w8, w8, #0xffffffdf
  404ed4:	cmp	w8, #0x46
  404ed8:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404edc:	ldrb	w8, [x0, #3]
  404ee0:	cmp	w8, #0x2d
  404ee4:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404ee8:	ldrb	w8, [x0, #4]
  404eec:	cmp	w8, #0x38
  404ef0:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404ef4:	ldrb	w8, [x0, #5]
  404ef8:	cbnz	w8, 404f68 <ferror@plt+0x3268>
  404efc:	ldrb	w8, [x20]
  404f00:	adrp	x9, 406000 <_obstack_memory_used@@Base+0x40>
  404f04:	adrp	x10, 406000 <_obstack_memory_used@@Base+0x40>
  404f08:	add	x9, x9, #0xcdc
  404f0c:	add	x10, x10, #0xcd8
  404f10:	b	404fa0 <ferror@plt+0x32a0>
  404f14:	ldrb	w8, [x0, #1]
  404f18:	and	w8, w8, #0xffffffdf
  404f1c:	cmp	w8, #0x42
  404f20:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404f24:	ldrb	w8, [x0, #2]
  404f28:	cmp	w8, #0x31
  404f2c:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404f30:	ldrb	w8, [x0, #3]
  404f34:	cmp	w8, #0x38
  404f38:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404f3c:	ldrb	w8, [x0, #4]
  404f40:	cmp	w8, #0x30
  404f44:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404f48:	ldrb	w8, [x0, #5]
  404f4c:	cmp	w8, #0x33
  404f50:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404f54:	ldrb	w8, [x0, #6]
  404f58:	cmp	w8, #0x30
  404f5c:	b.ne	404f68 <ferror@plt+0x3268>  // b.any
  404f60:	ldrb	w8, [x0, #7]
  404f64:	cbz	w8, 404f8c <ferror@plt+0x328c>
  404f68:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  404f6c:	adrp	x9, 406000 <_obstack_memory_used@@Base+0x40>
  404f70:	add	x8, x8, #0xcd6
  404f74:	add	x9, x9, #0x8b8
  404f78:	cmp	w19, #0x9
  404f7c:	csel	x0, x9, x8, eq  // eq = none
  404f80:	ldp	x20, x19, [sp, #16]
  404f84:	ldp	x29, x30, [sp], #32
  404f88:	ret
  404f8c:	ldrb	w8, [x20]
  404f90:	adrp	x9, 406000 <_obstack_memory_used@@Base+0x40>
  404f94:	adrp	x10, 406000 <_obstack_memory_used@@Base+0x40>
  404f98:	add	x9, x9, #0xce4
  404f9c:	add	x10, x10, #0xce0
  404fa0:	cmp	w8, #0x60
  404fa4:	csel	x0, x10, x9, eq  // eq = none
  404fa8:	b	404f80 <ferror@plt+0x3280>
  404fac:	stp	x29, x30, [sp, #-48]!
  404fb0:	str	x21, [sp, #16]
  404fb4:	stp	x20, x19, [sp, #32]
  404fb8:	adrp	x20, 401000 <mbrtowc@plt-0x8e0>
  404fbc:	adrp	x21, 401000 <mbrtowc@plt-0x8e0>
  404fc0:	add	x20, x20, #0xa10
  404fc4:	add	x21, x21, #0xbe0
  404fc8:	mov	x19, x0
  404fcc:	add	x0, x0, #0x18
  404fd0:	mov	x1, xzr
  404fd4:	mov	x2, xzr
  404fd8:	mov	x3, x20
  404fdc:	mov	x4, x21
  404fe0:	mov	x29, sp
  404fe4:	stp	xzr, xzr, [x19]
  404fe8:	str	xzr, [x19, #16]
  404fec:	bl	405ca8 <_obstack_begin@@Base>
  404ff0:	add	x0, x19, #0x70
  404ff4:	mov	x1, xzr
  404ff8:	mov	x2, xzr
  404ffc:	mov	x3, x20
  405000:	mov	x4, x21
  405004:	bl	405ca8 <_obstack_begin@@Base>
  405008:	add	x0, x19, #0xc8
  40500c:	mov	x3, x20
  405010:	mov	x4, x21
  405014:	ldp	x20, x19, [sp, #32]
  405018:	ldr	x21, [sp, #16]
  40501c:	mov	x1, xzr
  405020:	mov	x2, xzr
  405024:	ldp	x29, x30, [sp], #48
  405028:	b	405ca8 <_obstack_begin@@Base>
  40502c:	stp	x29, x30, [sp, #-32]!
  405030:	str	x19, [sp, #16]
  405034:	mov	x19, x0
  405038:	add	x0, x0, #0x18
  40503c:	mov	x1, xzr
  405040:	mov	x29, sp
  405044:	bl	405f28 <_obstack_free@@Base>
  405048:	add	x0, x19, #0x70
  40504c:	mov	x1, xzr
  405050:	bl	405f28 <_obstack_free@@Base>
  405054:	add	x0, x19, #0xc8
  405058:	ldr	x19, [sp, #16]
  40505c:	mov	x1, xzr
  405060:	ldp	x29, x30, [sp], #32
  405064:	b	405f28 <_obstack_free@@Base>
  405068:	stp	x29, x30, [sp, #-48]!
  40506c:	stp	x22, x21, [sp, #16]
  405070:	stp	x20, x19, [sp, #32]
  405074:	mov	x29, sp
  405078:	mov	x20, x1
  40507c:	mov	x19, x0
  405080:	bl	401a80 <fgetc@plt>
  405084:	cmn	w0, #0x1
  405088:	b.eq	4050dc <ferror@plt+0x33dc>  // b.none
  40508c:	mov	w22, w0
  405090:	add	x21, x20, #0x18
  405094:	ldp	x8, x9, [x20, #48]
  405098:	cmp	x9, x8
  40509c:	b.ne	4050b0 <ferror@plt+0x33b0>  // b.any
  4050a0:	mov	w1, #0x1                   	// #1
  4050a4:	mov	x0, x21
  4050a8:	bl	405db0 <_obstack_newchunk@@Base>
  4050ac:	ldr	x8, [x20, #48]
  4050b0:	add	x9, x8, #0x1
  4050b4:	str	x9, [x20, #48]
  4050b8:	strb	w22, [x8]
  4050bc:	cbnz	w22, 4050c8 <ferror@plt+0x33c8>
  4050c0:	mov	x0, x20
  4050c4:	bl	405204 <ferror@plt+0x3504>
  4050c8:	mov	x0, x19
  4050cc:	bl	401a80 <fgetc@plt>
  4050d0:	mov	w22, w0
  4050d4:	cmn	w0, #0x1
  4050d8:	b.ne	405094 <ferror@plt+0x3394>  // b.any
  4050dc:	ldp	x9, x8, [x20, #40]
  4050e0:	cmp	x8, x9
  4050e4:	b.eq	405118 <ferror@plt+0x3418>  // b.none
  4050e8:	ldr	x9, [x20, #56]
  4050ec:	cmp	x9, x8
  4050f0:	b.ne	405104 <ferror@plt+0x3404>  // b.any
  4050f4:	add	x0, x20, #0x18
  4050f8:	mov	w1, #0x1                   	// #1
  4050fc:	bl	405db0 <_obstack_newchunk@@Base>
  405100:	ldr	x8, [x20, #48]
  405104:	add	x9, x8, #0x1
  405108:	mov	x0, x20
  40510c:	str	x9, [x20, #48]
  405110:	strb	wzr, [x8]
  405114:	bl	405204 <ferror@plt+0x3504>
  405118:	ldp	x8, x9, [x20, #136]
  40511c:	sub	x9, x9, x8
  405120:	cmp	x9, #0x8
  405124:	b.cs	405138 <ferror@plt+0x3438>  // b.hs, b.nlast
  405128:	add	x0, x20, #0x70
  40512c:	mov	w1, #0x8                   	// #8
  405130:	bl	405db0 <_obstack_newchunk@@Base>
  405134:	ldr	x8, [x20, #136]
  405138:	str	xzr, [x8]
  40513c:	ldp	x8, x9, [x20, #128]
  405140:	add	x9, x9, #0x8
  405144:	cmp	x9, x8
  405148:	str	x9, [x20, #136]
  40514c:	b.ne	40515c <ferror@plt+0x345c>  // b.any
  405150:	ldrb	w10, [x20, #192]
  405154:	orr	w10, w10, #0x2
  405158:	strb	w10, [x20, #192]
  40515c:	ldr	x11, [x20, #160]
  405160:	ldr	x12, [x20, #120]
  405164:	ldr	x10, [x20, #144]
  405168:	add	x9, x11, x9
  40516c:	bic	x11, x9, x11
  405170:	sub	x9, x11, x12
  405174:	sub	x12, x10, x12
  405178:	cmp	x9, x12
  40517c:	str	x11, [x20, #136]
  405180:	b.ls	40518c <ferror@plt+0x348c>  // b.plast
  405184:	mov	x11, x10
  405188:	str	x10, [x20, #136]
  40518c:	ldp	x9, x10, [x20, #216]
  405190:	str	x11, [x20, #128]
  405194:	str	x8, [x20, #8]
  405198:	cmp	x10, x9
  40519c:	b.ne	4051ac <ferror@plt+0x34ac>  // b.any
  4051a0:	ldrb	w8, [x20, #280]
  4051a4:	orr	w8, w8, #0x2
  4051a8:	strb	w8, [x20, #280]
  4051ac:	ldr	x11, [x20, #248]
  4051b0:	ldr	x12, [x20, #208]
  4051b4:	ldr	x8, [x20, #232]
  4051b8:	add	x10, x11, x10
  4051bc:	bic	x10, x10, x11
  4051c0:	sub	x11, x10, x12
  4051c4:	sub	x12, x8, x12
  4051c8:	cmp	x11, x12
  4051cc:	str	x10, [x20, #224]
  4051d0:	b.ls	4051dc <ferror@plt+0x34dc>  // b.plast
  4051d4:	mov	x10, x8
  4051d8:	str	x8, [x20, #224]
  4051dc:	mov	x0, x19
  4051e0:	str	x10, [x20, #216]
  4051e4:	str	x9, [x20, #16]
  4051e8:	bl	401d00 <ferror@plt>
  4051ec:	ldp	x20, x19, [sp, #32]
  4051f0:	ldp	x22, x21, [sp, #16]
  4051f4:	cmp	w0, #0x0
  4051f8:	cset	w0, eq  // eq = none
  4051fc:	ldp	x29, x30, [sp], #48
  405200:	ret
  405204:	sub	sp, sp, #0x30
  405208:	stp	x29, x30, [sp, #16]
  40520c:	stp	x20, x19, [sp, #32]
  405210:	ldp	x20, x8, [x0, #40]
  405214:	mov	x19, x0
  405218:	add	x29, sp, #0x10
  40521c:	mvn	x9, x20
  405220:	add	x9, x8, x9
  405224:	cmp	x8, x20
  405228:	str	x9, [sp, #8]
  40522c:	b.ne	40523c <ferror@plt+0x353c>  // b.any
  405230:	ldrb	w9, [x19, #104]
  405234:	orr	w9, w9, #0x2
  405238:	strb	w9, [x19, #104]
  40523c:	ldr	x9, [x19, #72]
  405240:	ldr	x11, [x19, #32]
  405244:	ldr	x10, [x19, #56]
  405248:	add	x8, x9, x8
  40524c:	bic	x9, x8, x9
  405250:	sub	x8, x9, x11
  405254:	sub	x11, x10, x11
  405258:	cmp	x8, x11
  40525c:	str	x9, [x19, #48]
  405260:	b.ls	40526c <ferror@plt+0x356c>  // b.plast
  405264:	mov	x9, x10
  405268:	str	x10, [x19, #48]
  40526c:	ldp	x8, x10, [x19, #136]
  405270:	str	x9, [x19, #40]
  405274:	sub	x10, x10, x8
  405278:	cmp	x10, #0x8
  40527c:	b.cs	405290 <ferror@plt+0x3590>  // b.hs, b.nlast
  405280:	add	x0, x19, #0x70
  405284:	mov	w1, #0x8                   	// #8
  405288:	bl	405db0 <_obstack_newchunk@@Base>
  40528c:	ldr	x8, [x19, #136]
  405290:	str	x20, [x8]
  405294:	ldp	x8, x10, [x19, #224]
  405298:	ldr	x9, [x19, #136]
  40529c:	sub	x10, x10, x8
  4052a0:	add	x9, x9, #0x8
  4052a4:	cmp	x10, #0x7
  4052a8:	str	x9, [x19, #136]
  4052ac:	b.hi	4052c0 <ferror@plt+0x35c0>  // b.pmore
  4052b0:	add	x0, x19, #0xc8
  4052b4:	mov	w1, #0x8                   	// #8
  4052b8:	bl	405db0 <_obstack_newchunk@@Base>
  4052bc:	ldr	x8, [x19, #224]
  4052c0:	ldr	x9, [sp, #8]
  4052c4:	str	x9, [x8]
  4052c8:	ldr	x8, [x19, #224]
  4052cc:	ldr	x9, [x19]
  4052d0:	add	x8, x8, #0x8
  4052d4:	add	x9, x9, #0x1
  4052d8:	str	x8, [x19, #224]
  4052dc:	str	x9, [x19]
  4052e0:	ldp	x20, x19, [sp, #32]
  4052e4:	ldp	x29, x30, [sp, #16]
  4052e8:	add	sp, sp, #0x30
  4052ec:	ret
  4052f0:	stp	x29, x30, [sp, #-64]!
  4052f4:	str	x23, [sp, #16]
  4052f8:	mov	w23, #0x1                   	// #1
  4052fc:	stp	x22, x21, [sp, #32]
  405300:	stp	x20, x19, [sp, #48]
  405304:	mov	x21, x2
  405308:	mov	x19, x1
  40530c:	mov	w20, w0
  405310:	movk	w23, #0x7ff0, lsl #16
  405314:	mov	x29, sp
  405318:	mov	w0, w20
  40531c:	mov	x1, x19
  405320:	mov	x2, x21
  405324:	bl	401c20 <read@plt>
  405328:	mov	x22, x0
  40532c:	tbz	x0, #63, 405354 <ferror@plt+0x3654>
  405330:	bl	401cb0 <__errno_location@plt>
  405334:	ldr	w8, [x0]
  405338:	cmp	w8, #0x4
  40533c:	b.eq	405318 <ferror@plt+0x3618>  // b.none
  405340:	cmp	x21, x23
  405344:	b.cc	405354 <ferror@plt+0x3654>  // b.lo, b.ul, b.last
  405348:	cmp	w8, #0x16
  40534c:	mov	w21, #0x7ff00000            	// #2146435072
  405350:	b.eq	405318 <ferror@plt+0x3618>  // b.none
  405354:	mov	x0, x22
  405358:	ldp	x20, x19, [sp, #48]
  40535c:	ldp	x22, x21, [sp, #32]
  405360:	ldr	x23, [sp, #16]
  405364:	ldp	x29, x30, [sp], #64
  405368:	ret
  40536c:	sub	sp, sp, #0x50
  405370:	str	x21, [sp, #48]
  405374:	stp	x20, x19, [sp, #64]
  405378:	mov	x21, x5
  40537c:	mov	x20, x4
  405380:	mov	x5, x3
  405384:	mov	x4, x2
  405388:	mov	x19, x0
  40538c:	stp	x29, x30, [sp, #32]
  405390:	add	x29, sp, #0x20
  405394:	cbz	x1, 4053b4 <ferror@plt+0x36b4>
  405398:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  40539c:	mov	x3, x1
  4053a0:	add	x2, x2, #0xcf1
  4053a4:	mov	w1, #0x1                   	// #1
  4053a8:	mov	x0, x19
  4053ac:	bl	401ba0 <__fprintf_chk@plt>
  4053b0:	b	4053d0 <ferror@plt+0x36d0>
  4053b4:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4053b8:	add	x2, x2, #0xcfd
  4053bc:	mov	w1, #0x1                   	// #1
  4053c0:	mov	x0, x19
  4053c4:	mov	x3, x4
  4053c8:	mov	x4, x5
  4053cc:	bl	401ba0 <__fprintf_chk@plt>
  4053d0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4053d4:	add	x1, x1, #0xd04
  4053d8:	mov	w2, #0x5                   	// #5
  4053dc:	mov	x0, xzr
  4053e0:	bl	401c60 <dcgettext@plt>
  4053e4:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  4053e8:	mov	x3, x0
  4053ec:	add	x2, x2, #0xfcf
  4053f0:	mov	w1, #0x1                   	// #1
  4053f4:	mov	w4, #0x7e3                 	// #2019
  4053f8:	mov	x0, x19
  4053fc:	bl	401ba0 <__fprintf_chk@plt>
  405400:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405404:	add	x1, x1, #0xd08
  405408:	mov	w2, #0x5                   	// #5
  40540c:	mov	x0, xzr
  405410:	bl	401c60 <dcgettext@plt>
  405414:	mov	x1, x19
  405418:	bl	401c70 <fputs_unlocked@plt>
  40541c:	cmp	x21, #0x9
  405420:	b.hi	405474 <ferror@plt+0x3774>  // b.pmore
  405424:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  405428:	add	x8, x8, #0xce7
  40542c:	adr	x9, 40543c <ferror@plt+0x373c>
  405430:	ldrb	w10, [x8, x21]
  405434:	add	x9, x9, x10, lsl #2
  405438:	br	x9
  40543c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405440:	add	x1, x1, #0xdd4
  405444:	mov	w2, #0x5                   	// #5
  405448:	mov	x0, xzr
  40544c:	bl	401c60 <dcgettext@plt>
  405450:	ldr	x3, [x20]
  405454:	mov	x2, x0
  405458:	mov	x0, x19
  40545c:	ldp	x20, x19, [sp, #64]
  405460:	ldr	x21, [sp, #48]
  405464:	ldp	x29, x30, [sp, #32]
  405468:	mov	w1, #0x1                   	// #1
  40546c:	add	sp, sp, #0x50
  405470:	b	401ba0 <__fprintf_chk@plt>
  405474:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405478:	add	x1, x1, #0xf13
  40547c:	b	4055d8 <ferror@plt+0x38d8>
  405480:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405484:	add	x1, x1, #0xde4
  405488:	mov	w2, #0x5                   	// #5
  40548c:	mov	x0, xzr
  405490:	bl	401c60 <dcgettext@plt>
  405494:	ldp	x3, x4, [x20]
  405498:	mov	x2, x0
  40549c:	mov	x0, x19
  4054a0:	ldp	x20, x19, [sp, #64]
  4054a4:	ldr	x21, [sp, #48]
  4054a8:	ldp	x29, x30, [sp, #32]
  4054ac:	mov	w1, #0x1                   	// #1
  4054b0:	add	sp, sp, #0x50
  4054b4:	b	401ba0 <__fprintf_chk@plt>
  4054b8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4054bc:	add	x1, x1, #0xdfb
  4054c0:	mov	w2, #0x5                   	// #5
  4054c4:	mov	x0, xzr
  4054c8:	bl	401c60 <dcgettext@plt>
  4054cc:	ldp	x3, x4, [x20]
  4054d0:	ldr	x5, [x20, #16]
  4054d4:	mov	x2, x0
  4054d8:	mov	x0, x19
  4054dc:	ldp	x20, x19, [sp, #64]
  4054e0:	ldr	x21, [sp, #48]
  4054e4:	ldp	x29, x30, [sp, #32]
  4054e8:	mov	w1, #0x1                   	// #1
  4054ec:	add	sp, sp, #0x50
  4054f0:	b	401ba0 <__fprintf_chk@plt>
  4054f4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4054f8:	add	x1, x1, #0xe17
  4054fc:	mov	w2, #0x5                   	// #5
  405500:	mov	x0, xzr
  405504:	bl	401c60 <dcgettext@plt>
  405508:	ldp	x3, x4, [x20]
  40550c:	ldp	x5, x6, [x20, #16]
  405510:	mov	x2, x0
  405514:	mov	x0, x19
  405518:	ldp	x20, x19, [sp, #64]
  40551c:	ldr	x21, [sp, #48]
  405520:	ldp	x29, x30, [sp, #32]
  405524:	mov	w1, #0x1                   	// #1
  405528:	add	sp, sp, #0x50
  40552c:	b	401ba0 <__fprintf_chk@plt>
  405530:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405534:	add	x1, x1, #0xe37
  405538:	mov	w2, #0x5                   	// #5
  40553c:	mov	x0, xzr
  405540:	bl	401c60 <dcgettext@plt>
  405544:	ldp	x3, x4, [x20]
  405548:	ldp	x5, x6, [x20, #16]
  40554c:	ldr	x7, [x20, #32]
  405550:	mov	x2, x0
  405554:	mov	x0, x19
  405558:	ldp	x20, x19, [sp, #64]
  40555c:	ldr	x21, [sp, #48]
  405560:	ldp	x29, x30, [sp, #32]
  405564:	mov	w1, #0x1                   	// #1
  405568:	add	sp, sp, #0x50
  40556c:	b	401ba0 <__fprintf_chk@plt>
  405570:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405574:	add	x1, x1, #0xe5b
  405578:	mov	w2, #0x5                   	// #5
  40557c:	mov	x0, xzr
  405580:	bl	401c60 <dcgettext@plt>
  405584:	ldp	x3, x4, [x20]
  405588:	ldp	x5, x6, [x20, #16]
  40558c:	ldp	x7, x8, [x20, #32]
  405590:	mov	x2, x0
  405594:	b	4055c4 <ferror@plt+0x38c4>
  405598:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  40559c:	add	x1, x1, #0xe83
  4055a0:	mov	w2, #0x5                   	// #5
  4055a4:	mov	x0, xzr
  4055a8:	bl	401c60 <dcgettext@plt>
  4055ac:	ldr	x9, [x20, #48]
  4055b0:	ldp	x3, x4, [x20]
  4055b4:	ldp	x5, x6, [x20, #16]
  4055b8:	ldp	x7, x8, [x20, #32]
  4055bc:	mov	x2, x0
  4055c0:	str	x9, [sp, #8]
  4055c4:	mov	w1, #0x1                   	// #1
  4055c8:	str	x8, [sp]
  4055cc:	b	40563c <ferror@plt+0x393c>
  4055d0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4055d4:	add	x1, x1, #0xedf
  4055d8:	mov	w2, #0x5                   	// #5
  4055dc:	mov	x0, xzr
  4055e0:	bl	401c60 <dcgettext@plt>
  4055e4:	ldp	x8, x9, [x20, #56]
  4055e8:	ldp	x3, x4, [x20]
  4055ec:	ldp	x5, x6, [x20, #16]
  4055f0:	ldr	x7, [x20, #32]
  4055f4:	ldur	q0, [x20, #40]
  4055f8:	mov	x2, x0
  4055fc:	str	x9, [sp, #24]
  405600:	b	405630 <ferror@plt+0x3930>
  405604:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405608:	add	x1, x1, #0xeaf
  40560c:	mov	w2, #0x5                   	// #5
  405610:	mov	x0, xzr
  405614:	bl	401c60 <dcgettext@plt>
  405618:	ldp	x3, x4, [x20]
  40561c:	ldp	x5, x6, [x20, #16]
  405620:	ldr	x7, [x20, #32]
  405624:	ldur	q0, [x20, #40]
  405628:	ldr	x8, [x20, #56]
  40562c:	mov	x2, x0
  405630:	str	x8, [sp, #16]
  405634:	mov	w1, #0x1                   	// #1
  405638:	str	q0, [sp]
  40563c:	mov	x0, x19
  405640:	bl	401ba0 <__fprintf_chk@plt>
  405644:	ldp	x20, x19, [sp, #64]
  405648:	ldr	x21, [sp, #48]
  40564c:	ldp	x29, x30, [sp, #32]
  405650:	add	sp, sp, #0x50
  405654:	ret
  405658:	mov	x8, xzr
  40565c:	ldr	x9, [x4, x8, lsl #3]
  405660:	add	x8, x8, #0x1
  405664:	cbnz	x9, 40565c <ferror@plt+0x395c>
  405668:	sub	x5, x8, #0x1
  40566c:	b	40536c <ferror@plt+0x366c>
  405670:	sub	sp, sp, #0x60
  405674:	stp	x29, x30, [sp, #80]
  405678:	ldr	w8, [x4, #24]
  40567c:	mov	x5, xzr
  405680:	mov	x9, sp
  405684:	add	x29, sp, #0x50
  405688:	tbz	w8, #31, 4056b0 <ferror@plt+0x39b0>
  40568c:	add	w11, w8, #0x8
  405690:	cmn	w8, #0x8
  405694:	str	w11, [x4, #24]
  405698:	b.gt	4056ac <ferror@plt+0x39ac>
  40569c:	ldr	x10, [x4, #8]
  4056a0:	add	x10, x10, w8, sxtw
  4056a4:	mov	w8, w11
  4056a8:	b	4056bc <ferror@plt+0x39bc>
  4056ac:	mov	w8, w11
  4056b0:	ldr	x10, [x4]
  4056b4:	add	x11, x10, #0x8
  4056b8:	str	x11, [x4]
  4056bc:	ldr	x10, [x10]
  4056c0:	str	x10, [x9, x5, lsl #3]
  4056c4:	cbz	x10, 4056d4 <ferror@plt+0x39d4>
  4056c8:	add	x5, x5, #0x1
  4056cc:	cmp	x5, #0xa
  4056d0:	b.ne	405688 <ferror@plt+0x3988>  // b.any
  4056d4:	mov	x4, sp
  4056d8:	bl	40536c <ferror@plt+0x366c>
  4056dc:	ldp	x29, x30, [sp, #80]
  4056e0:	add	sp, sp, #0x60
  4056e4:	ret
  4056e8:	sub	sp, sp, #0xf0
  4056ec:	stp	x29, x30, [sp, #224]
  4056f0:	add	x29, sp, #0xe0
  4056f4:	mov	x8, #0xffffffffffffffe0    	// #-32
  4056f8:	mov	x9, sp
  4056fc:	sub	x10, x29, #0x60
  405700:	movk	x8, #0xff80, lsl #32
  405704:	add	x11, x29, #0x10
  405708:	add	x9, x9, #0x80
  40570c:	add	x10, x10, #0x20
  405710:	stp	x9, x8, [x29, #-16]
  405714:	stp	x11, x10, [x29, #-32]
  405718:	stp	x4, x5, [x29, #-96]
  40571c:	stp	x6, x7, [x29, #-80]
  405720:	stp	q0, q1, [sp]
  405724:	ldp	q0, q1, [x29, #-32]
  405728:	sub	x4, x29, #0x40
  40572c:	stp	q2, q3, [sp, #32]
  405730:	stp	q4, q5, [sp, #64]
  405734:	stp	q6, q7, [sp, #96]
  405738:	stp	q0, q1, [x29, #-64]
  40573c:	bl	405670 <ferror@plt+0x3970>
  405740:	ldp	x29, x30, [sp, #224]
  405744:	add	sp, sp, #0xf0
  405748:	ret
  40574c:	stp	x29, x30, [sp, #-16]!
  405750:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405754:	add	x1, x1, #0xf4f
  405758:	mov	w2, #0x5                   	// #5
  40575c:	mov	x0, xzr
  405760:	mov	x29, sp
  405764:	bl	401c60 <dcgettext@plt>
  405768:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  40576c:	mov	x1, x0
  405770:	add	x2, x2, #0xf64
  405774:	mov	w0, #0x1                   	// #1
  405778:	bl	401a90 <__printf_chk@plt>
  40577c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405780:	add	x1, x1, #0xf7a
  405784:	mov	w2, #0x5                   	// #5
  405788:	mov	x0, xzr
  40578c:	bl	401c60 <dcgettext@plt>
  405790:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  405794:	adrp	x3, 406000 <_obstack_memory_used@@Base+0x40>
  405798:	mov	x1, x0
  40579c:	add	x2, x2, #0x7db
  4057a0:	add	x3, x3, #0x9f6
  4057a4:	mov	w0, #0x1                   	// #1
  4057a8:	bl	401a90 <__printf_chk@plt>
  4057ac:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  4057b0:	add	x1, x1, #0xf8e
  4057b4:	mov	w2, #0x5                   	// #5
  4057b8:	mov	x0, xzr
  4057bc:	bl	401c60 <dcgettext@plt>
  4057c0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  4057c4:	ldr	x1, [x8, #696]
  4057c8:	ldp	x29, x30, [sp], #16
  4057cc:	b	401c70 <fputs_unlocked@plt>
  4057d0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4057d4:	udiv	x8, x8, x1
  4057d8:	cmp	x8, x0
  4057dc:	b.cc	4057e8 <ferror@plt+0x3ae8>  // b.lo, b.ul, b.last
  4057e0:	mul	x0, x1, x0
  4057e4:	b	4057f4 <ferror@plt+0x3af4>
  4057e8:	stp	x29, x30, [sp, #-16]!
  4057ec:	mov	x29, sp
  4057f0:	bl	405a30 <ferror@plt+0x3d30>
  4057f4:	stp	x29, x30, [sp, #-32]!
  4057f8:	str	x19, [sp, #16]
  4057fc:	mov	x29, sp
  405800:	mov	x19, x0
  405804:	bl	401a10 <malloc@plt>
  405808:	cbz	x19, 405810 <ferror@plt+0x3b10>
  40580c:	cbz	x0, 40581c <ferror@plt+0x3b1c>
  405810:	ldr	x19, [sp, #16]
  405814:	ldp	x29, x30, [sp], #32
  405818:	ret
  40581c:	bl	405a30 <ferror@plt+0x3d30>
  405820:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405824:	udiv	x8, x8, x2
  405828:	cmp	x8, x1
  40582c:	b.cc	405838 <ferror@plt+0x3b38>  // b.lo, b.ul, b.last
  405830:	mul	x1, x2, x1
  405834:	b	405844 <ferror@plt+0x3b44>
  405838:	stp	x29, x30, [sp, #-16]!
  40583c:	mov	x29, sp
  405840:	bl	405a30 <ferror@plt+0x3d30>
  405844:	stp	x29, x30, [sp, #-32]!
  405848:	str	x19, [sp, #16]
  40584c:	mov	x19, x1
  405850:	mov	x29, sp
  405854:	cbz	x0, 405868 <ferror@plt+0x3b68>
  405858:	cbnz	x19, 405868 <ferror@plt+0x3b68>
  40585c:	bl	401be0 <free@plt>
  405860:	mov	x0, xzr
  405864:	b	405878 <ferror@plt+0x3b78>
  405868:	mov	x1, x19
  40586c:	bl	401ae0 <realloc@plt>
  405870:	cbz	x19, 405878 <ferror@plt+0x3b78>
  405874:	cbz	x0, 405884 <ferror@plt+0x3b84>
  405878:	ldr	x19, [sp, #16]
  40587c:	ldp	x29, x30, [sp], #32
  405880:	ret
  405884:	bl	405a30 <ferror@plt+0x3d30>
  405888:	stp	x29, x30, [sp, #-16]!
  40588c:	ldr	x9, [x1]
  405890:	mov	x29, sp
  405894:	cbz	x0, 4058b8 <ferror@plt+0x3bb8>
  405898:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  40589c:	movk	x8, #0x5554
  4058a0:	udiv	x8, x8, x2
  4058a4:	cmp	x8, x9
  4058a8:	b.ls	4058f0 <ferror@plt+0x3bf0>  // b.plast
  4058ac:	add	x8, x9, x9, lsr #1
  4058b0:	add	x9, x8, #0x1
  4058b4:	b	4058dc <ferror@plt+0x3bdc>
  4058b8:	cbnz	x9, 4058cc <ferror@plt+0x3bcc>
  4058bc:	mov	w8, #0x80                  	// #128
  4058c0:	udiv	x8, x8, x2
  4058c4:	cmp	x2, #0x80
  4058c8:	cinc	x9, x8, hi  // hi = pmore
  4058cc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4058d0:	udiv	x8, x8, x2
  4058d4:	cmp	x8, x9
  4058d8:	b.cc	4058f0 <ferror@plt+0x3bf0>  // b.lo, b.ul, b.last
  4058dc:	mul	x8, x9, x2
  4058e0:	str	x9, [x1]
  4058e4:	mov	x1, x8
  4058e8:	ldp	x29, x30, [sp], #16
  4058ec:	b	405844 <ferror@plt+0x3b44>
  4058f0:	bl	405a30 <ferror@plt+0x3d30>
  4058f4:	b	4057f4 <ferror@plt+0x3af4>
  4058f8:	stp	x29, x30, [sp, #-16]!
  4058fc:	ldr	x8, [x1]
  405900:	mov	x29, sp
  405904:	cbz	x0, 405924 <ferror@plt+0x3c24>
  405908:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40590c:	movk	x9, #0x5554
  405910:	cmp	x8, x9
  405914:	b.cs	40592c <ferror@plt+0x3c2c>  // b.hs, b.nlast
  405918:	add	x8, x8, x8, lsr #1
  40591c:	add	x8, x8, #0x1
  405920:	b	405934 <ferror@plt+0x3c34>
  405924:	cbz	x8, 405930 <ferror@plt+0x3c30>
  405928:	tbz	x8, #63, 405934 <ferror@plt+0x3c34>
  40592c:	bl	405a30 <ferror@plt+0x3d30>
  405930:	mov	w8, #0x80                  	// #128
  405934:	str	x8, [x1]
  405938:	mov	x1, x8
  40593c:	ldp	x29, x30, [sp], #16
  405940:	b	405844 <ferror@plt+0x3b44>
  405944:	stp	x29, x30, [sp, #-32]!
  405948:	stp	x20, x19, [sp, #16]
  40594c:	mov	x29, sp
  405950:	mov	x19, x0
  405954:	bl	4057f4 <ferror@plt+0x3af4>
  405958:	mov	w1, wzr
  40595c:	mov	x2, x19
  405960:	mov	x20, x0
  405964:	bl	401aa0 <memset@plt>
  405968:	mov	x0, x20
  40596c:	ldp	x20, x19, [sp, #16]
  405970:	ldp	x29, x30, [sp], #32
  405974:	ret
  405978:	stp	x29, x30, [sp, #-16]!
  40597c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405980:	udiv	x8, x8, x1
  405984:	cmp	x8, x0
  405988:	mov	x29, sp
  40598c:	b.cc	4059a0 <ferror@plt+0x3ca0>  // b.lo, b.ul, b.last
  405990:	bl	405a74 <ferror@plt+0x3d74>
  405994:	cbz	x0, 4059a0 <ferror@plt+0x3ca0>
  405998:	ldp	x29, x30, [sp], #16
  40599c:	ret
  4059a0:	bl	405a30 <ferror@plt+0x3d30>
  4059a4:	stp	x29, x30, [sp, #-48]!
  4059a8:	stp	x20, x19, [sp, #32]
  4059ac:	mov	x20, x0
  4059b0:	mov	x0, x1
  4059b4:	str	x21, [sp, #16]
  4059b8:	mov	x29, sp
  4059bc:	mov	x19, x1
  4059c0:	bl	4057f4 <ferror@plt+0x3af4>
  4059c4:	mov	x1, x20
  4059c8:	mov	x2, x19
  4059cc:	mov	x21, x0
  4059d0:	bl	4018f0 <memcpy@plt>
  4059d4:	mov	x0, x21
  4059d8:	ldp	x20, x19, [sp, #32]
  4059dc:	ldr	x21, [sp, #16]
  4059e0:	ldp	x29, x30, [sp], #48
  4059e4:	ret
  4059e8:	stp	x29, x30, [sp, #-48]!
  4059ec:	str	x21, [sp, #16]
  4059f0:	stp	x20, x19, [sp, #32]
  4059f4:	mov	x29, sp
  4059f8:	mov	x19, x0
  4059fc:	bl	401910 <strlen@plt>
  405a00:	add	x20, x0, #0x1
  405a04:	mov	x0, x20
  405a08:	bl	4057f4 <ferror@plt+0x3af4>
  405a0c:	mov	x1, x19
  405a10:	mov	x2, x20
  405a14:	mov	x21, x0
  405a18:	bl	4018f0 <memcpy@plt>
  405a1c:	mov	x0, x21
  405a20:	ldp	x20, x19, [sp, #32]
  405a24:	ldr	x21, [sp, #16]
  405a28:	ldp	x29, x30, [sp], #48
  405a2c:	ret
  405a30:	stp	x29, x30, [sp, #-32]!
  405a34:	str	x19, [sp, #16]
  405a38:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  405a3c:	ldr	w19, [x8, #560]
  405a40:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405a44:	add	x1, x1, #0xffe
  405a48:	mov	w2, #0x5                   	// #5
  405a4c:	mov	x0, xzr
  405a50:	mov	x29, sp
  405a54:	bl	401c60 <dcgettext@plt>
  405a58:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  405a5c:	mov	x3, x0
  405a60:	add	x2, x2, #0xb10
  405a64:	mov	w0, w19
  405a68:	mov	w1, wzr
  405a6c:	bl	401940 <error@plt>
  405a70:	bl	401b40 <abort@plt>
  405a74:	mov	x8, x1
  405a78:	mov	w1, #0x1                   	// #1
  405a7c:	mov	w9, #0x1                   	// #1
  405a80:	cbz	x0, 405ab8 <ferror@plt+0x3db8>
  405a84:	cbz	x8, 405ab8 <ferror@plt+0x3db8>
  405a88:	umulh	x10, x8, x0
  405a8c:	mov	x1, x8
  405a90:	mov	x9, x0
  405a94:	cbz	x10, 405ab8 <ferror@plt+0x3db8>
  405a98:	stp	x29, x30, [sp, #-16]!
  405a9c:	mov	x29, sp
  405aa0:	bl	401cb0 <__errno_location@plt>
  405aa4:	mov	w8, #0xc                   	// #12
  405aa8:	str	w8, [x0]
  405aac:	mov	x0, xzr
  405ab0:	ldp	x29, x30, [sp], #16
  405ab4:	ret
  405ab8:	mov	x0, x9
  405abc:	b	401ac0 <calloc@plt>
  405ac0:	stp	x29, x30, [sp, #-48]!
  405ac4:	str	x21, [sp, #16]
  405ac8:	stp	x20, x19, [sp, #32]
  405acc:	mov	x29, sp
  405ad0:	mov	x19, x0
  405ad4:	bl	4019c0 <fileno@plt>
  405ad8:	tbnz	w0, #31, 405b40 <ferror@plt+0x3e40>
  405adc:	mov	x0, x19
  405ae0:	bl	401c80 <__freading@plt>
  405ae4:	cbz	w0, 405b04 <ferror@plt+0x3e04>
  405ae8:	mov	x0, x19
  405aec:	bl	4019c0 <fileno@plt>
  405af0:	mov	w2, #0x1                   	// #1
  405af4:	mov	x1, xzr
  405af8:	bl	4019a0 <lseek@plt>
  405afc:	cmn	x0, #0x1
  405b00:	b.eq	405b40 <ferror@plt+0x3e40>  // b.none
  405b04:	mov	x0, x19
  405b08:	bl	405b54 <ferror@plt+0x3e54>
  405b0c:	cbz	w0, 405b40 <ferror@plt+0x3e40>
  405b10:	bl	401cb0 <__errno_location@plt>
  405b14:	ldr	w21, [x0]
  405b18:	mov	x20, x0
  405b1c:	mov	x0, x19
  405b20:	bl	4019d0 <fclose@plt>
  405b24:	cbz	w21, 405b30 <ferror@plt+0x3e30>
  405b28:	mov	w0, #0xffffffff            	// #-1
  405b2c:	str	w21, [x20]
  405b30:	ldp	x20, x19, [sp, #32]
  405b34:	ldr	x21, [sp, #16]
  405b38:	ldp	x29, x30, [sp], #48
  405b3c:	ret
  405b40:	mov	x0, x19
  405b44:	ldp	x20, x19, [sp, #32]
  405b48:	ldr	x21, [sp, #16]
  405b4c:	ldp	x29, x30, [sp], #48
  405b50:	b	4019d0 <fclose@plt>
  405b54:	stp	x29, x30, [sp, #-32]!
  405b58:	str	x19, [sp, #16]
  405b5c:	mov	x19, x0
  405b60:	mov	x29, sp
  405b64:	cbz	x0, 405b8c <ferror@plt+0x3e8c>
  405b68:	mov	x0, x19
  405b6c:	bl	401c80 <__freading@plt>
  405b70:	cbz	w0, 405b8c <ferror@plt+0x3e8c>
  405b74:	ldrb	w8, [x19, #1]
  405b78:	tbz	w8, #0, 405b8c <ferror@plt+0x3e8c>
  405b7c:	mov	w2, #0x1                   	// #1
  405b80:	mov	x0, x19
  405b84:	mov	x1, xzr
  405b88:	bl	405b9c <ferror@plt+0x3e9c>
  405b8c:	mov	x0, x19
  405b90:	ldr	x19, [sp, #16]
  405b94:	ldp	x29, x30, [sp], #32
  405b98:	b	401c10 <fflush@plt>
  405b9c:	stp	x29, x30, [sp, #-48]!
  405ba0:	str	x21, [sp, #16]
  405ba4:	stp	x20, x19, [sp, #32]
  405ba8:	ldp	x9, x8, [x0, #8]
  405bac:	mov	w20, w2
  405bb0:	mov	x19, x0
  405bb4:	mov	x21, x1
  405bb8:	cmp	x8, x9
  405bbc:	mov	x29, sp
  405bc0:	b.ne	405bd8 <ferror@plt+0x3ed8>  // b.any
  405bc4:	ldp	x9, x8, [x19, #32]
  405bc8:	cmp	x8, x9
  405bcc:	b.ne	405bd8 <ferror@plt+0x3ed8>  // b.any
  405bd0:	ldr	x8, [x19, #72]
  405bd4:	cbz	x8, 405bf4 <ferror@plt+0x3ef4>
  405bd8:	mov	x0, x19
  405bdc:	mov	x1, x21
  405be0:	mov	w2, w20
  405be4:	ldp	x20, x19, [sp, #32]
  405be8:	ldr	x21, [sp, #16]
  405bec:	ldp	x29, x30, [sp], #48
  405bf0:	b	401bd0 <fseeko@plt>
  405bf4:	mov	x0, x19
  405bf8:	bl	4019c0 <fileno@plt>
  405bfc:	mov	x1, x21
  405c00:	mov	w2, w20
  405c04:	bl	4019a0 <lseek@plt>
  405c08:	cmn	x0, #0x1
  405c0c:	b.eq	405c28 <ferror@plt+0x3f28>  // b.none
  405c10:	ldr	w9, [x19]
  405c14:	mov	x8, x0
  405c18:	mov	w0, wzr
  405c1c:	str	x8, [x19, #144]
  405c20:	and	w9, w9, #0xffffffef
  405c24:	str	w9, [x19]
  405c28:	ldp	x20, x19, [sp, #32]
  405c2c:	ldr	x21, [sp, #16]
  405c30:	ldp	x29, x30, [sp], #48
  405c34:	ret
  405c38:	sub	sp, sp, #0x40
  405c3c:	stp	x29, x30, [sp, #16]
  405c40:	add	x29, sp, #0x10
  405c44:	cmp	x0, #0x0
  405c48:	sub	x8, x29, #0x4
  405c4c:	stp	x20, x19, [sp, #48]
  405c50:	csel	x20, x8, x0, eq  // eq = none
  405c54:	mov	x0, x20
  405c58:	stp	x22, x21, [sp, #32]
  405c5c:	mov	x22, x2
  405c60:	mov	x19, x1
  405c64:	bl	4018e0 <mbrtowc@plt>
  405c68:	mov	x21, x0
  405c6c:	cbz	x22, 405c90 <ferror@plt+0x3f90>
  405c70:	cmn	x21, #0x2
  405c74:	b.cc	405c90 <ferror@plt+0x3f90>  // b.lo, b.ul, b.last
  405c78:	mov	w0, wzr
  405c7c:	bl	4060b0 <_obstack_memory_used@@Base+0xf0>
  405c80:	tbnz	w0, #0, 405c90 <ferror@plt+0x3f90>
  405c84:	ldrb	w8, [x19]
  405c88:	mov	w21, #0x1                   	// #1
  405c8c:	str	w8, [x20]
  405c90:	mov	x0, x21
  405c94:	ldp	x20, x19, [sp, #48]
  405c98:	ldp	x22, x21, [sp, #32]
  405c9c:	ldp	x29, x30, [sp, #16]
  405ca0:	add	sp, sp, #0x40
  405ca4:	ret

0000000000405ca8 <_obstack_begin@@Base>:
  405ca8:	stp	x29, x30, [sp, #-16]!
  405cac:	ldrb	w8, [x0, #80]
  405cb0:	mov	x29, sp
  405cb4:	stp	x3, x4, [x0, #56]
  405cb8:	and	w8, w8, #0xfe
  405cbc:	strb	w8, [x0, #80]
  405cc0:	bl	405cd0 <_obstack_begin@@Base+0x28>
  405cc4:	mov	w0, #0x1                   	// #1
  405cc8:	ldp	x29, x30, [sp], #16
  405ccc:	ret
  405cd0:	stp	x29, x30, [sp, #-48]!
  405cd4:	stp	x20, x19, [sp, #32]
  405cd8:	ldrb	w10, [x0, #80]
  405cdc:	cmp	x2, #0x0
  405ce0:	mov	w8, #0x10                  	// #16
  405ce4:	mov	w9, #0xfe0                 	// #4064
  405ce8:	csel	x20, x8, x2, eq  // eq = none
  405cec:	cmp	x1, #0x0
  405cf0:	str	x21, [sp, #16]
  405cf4:	mov	x19, x0
  405cf8:	csel	x1, x9, x1, eq  // eq = none
  405cfc:	sub	x21, x20, #0x1
  405d00:	mov	x29, sp
  405d04:	str	x1, [x0]
  405d08:	str	x21, [x0, #48]
  405d0c:	tbnz	w10, #0, 405d20 <_obstack_begin@@Base+0x78>
  405d10:	ldr	x8, [x19, #56]
  405d14:	mov	x0, x1
  405d18:	blr	x8
  405d1c:	b	405d2c <_obstack_begin@@Base+0x84>
  405d20:	ldr	x8, [x19, #56]
  405d24:	ldr	x0, [x19, #72]
  405d28:	blr	x8
  405d2c:	str	x0, [x19, #8]
  405d30:	cbz	x0, 405d78 <_obstack_begin@@Base+0xd0>
  405d34:	ldr	x10, [x19]
  405d38:	add	x8, x0, x21
  405d3c:	neg	x9, x20
  405d40:	add	x8, x8, #0x10
  405d44:	and	x8, x8, x9
  405d48:	stp	x8, x8, [x19, #16]
  405d4c:	add	x8, x0, x10
  405d50:	str	x8, [x0]
  405d54:	str	x8, [x19, #32]
  405d58:	str	xzr, [x0, #8]
  405d5c:	ldrb	w8, [x19, #80]
  405d60:	ldr	x21, [sp, #16]
  405d64:	and	w8, w8, #0xfffffff9
  405d68:	strb	w8, [x19, #80]
  405d6c:	ldp	x20, x19, [sp, #32]
  405d70:	ldp	x29, x30, [sp], #48
  405d74:	ret
  405d78:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  405d7c:	ldr	x8, [x8, #656]
  405d80:	blr	x8

0000000000405d84 <_obstack_begin_1@@Base>:
  405d84:	stp	x29, x30, [sp, #-16]!
  405d88:	ldrb	w8, [x0, #80]
  405d8c:	mov	x29, sp
  405d90:	stp	x3, x4, [x0, #56]
  405d94:	str	x5, [x0, #72]
  405d98:	orr	w8, w8, #0x1
  405d9c:	strb	w8, [x0, #80]
  405da0:	bl	405cd0 <_obstack_begin@@Base+0x28>
  405da4:	mov	w0, #0x1                   	// #1
  405da8:	ldp	x29, x30, [sp], #16
  405dac:	ret

0000000000405db0 <_obstack_newchunk@@Base>:
  405db0:	stp	x29, x30, [sp, #-64]!
  405db4:	str	x23, [sp, #16]
  405db8:	stp	x22, x21, [sp, #32]
  405dbc:	stp	x20, x19, [sp, #48]
  405dc0:	ldp	x9, x8, [x0, #16]
  405dc4:	ldr	x10, [x0, #48]
  405dc8:	ldr	x11, [x0]
  405dcc:	mov	x29, sp
  405dd0:	sub	x20, x8, x9
  405dd4:	adds	x8, x20, x1
  405dd8:	lsr	x9, x20, #3
  405ddc:	cset	w12, cs  // cs = hs, nlast
  405de0:	adds	x10, x8, x10
  405de4:	add	x9, x9, #0x64
  405de8:	cset	w8, cs  // cs = hs, nlast
  405dec:	adds	x9, x9, x10
  405df0:	csel	x9, x10, x9, cs  // cs = hs, nlast
  405df4:	cmp	x9, x11
  405df8:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  405dfc:	tbnz	w12, #0, 405ee8 <_obstack_newchunk@@Base+0x138>
  405e00:	tbnz	w8, #0, 405ee8 <_obstack_newchunk@@Base+0x138>
  405e04:	ldrb	w8, [x0, #80]
  405e08:	ldr	x21, [x0, #8]
  405e0c:	mov	x19, x0
  405e10:	tbnz	w8, #0, 405e24 <_obstack_newchunk@@Base+0x74>
  405e14:	ldr	x8, [x19, #56]
  405e18:	mov	x0, x23
  405e1c:	blr	x8
  405e20:	b	405e34 <_obstack_newchunk@@Base+0x84>
  405e24:	ldr	x8, [x19, #56]
  405e28:	ldr	x0, [x19, #72]
  405e2c:	mov	x1, x23
  405e30:	blr	x8
  405e34:	mov	x22, x0
  405e38:	cbz	x0, 405ee8 <_obstack_newchunk@@Base+0x138>
  405e3c:	add	x8, x22, x23
  405e40:	str	x22, [x19, #8]
  405e44:	str	x21, [x22, #8]
  405e48:	str	x8, [x19, #32]
  405e4c:	str	x8, [x22]
  405e50:	ldr	x8, [x19, #48]
  405e54:	ldr	x1, [x19, #16]
  405e58:	mov	x2, x20
  405e5c:	add	x9, x22, x8
  405e60:	add	x9, x9, #0x10
  405e64:	bic	x23, x9, x8
  405e68:	mov	x0, x23
  405e6c:	bl	4018f0 <memcpy@plt>
  405e70:	ldrb	w8, [x19, #80]
  405e74:	tbnz	w8, #1, 405ec0 <_obstack_newchunk@@Base+0x110>
  405e78:	ldr	x8, [x19, #48]
  405e7c:	ldr	x9, [x19, #16]
  405e80:	add	x10, x21, x8
  405e84:	add	x10, x10, #0x10
  405e88:	bic	x8, x10, x8
  405e8c:	cmp	x9, x8
  405e90:	b.ne	405ec0 <_obstack_newchunk@@Base+0x110>  // b.any
  405e94:	ldr	x8, [x21, #8]
  405e98:	str	x8, [x22, #8]
  405e9c:	ldrb	w8, [x19, #80]
  405ea0:	tbnz	w8, #0, 405eb4 <_obstack_newchunk@@Base+0x104>
  405ea4:	ldr	x8, [x19, #64]
  405ea8:	mov	x0, x21
  405eac:	blr	x8
  405eb0:	b	405ec0 <_obstack_newchunk@@Base+0x110>
  405eb4:	ldp	x8, x0, [x19, #64]
  405eb8:	mov	x1, x21
  405ebc:	blr	x8
  405ec0:	ldrb	w8, [x19, #80]
  405ec4:	add	x9, x23, x20
  405ec8:	stp	x23, x9, [x19, #16]
  405ecc:	ldr	x23, [sp, #16]
  405ed0:	and	w8, w8, #0xfffffffd
  405ed4:	strb	w8, [x19, #80]
  405ed8:	ldp	x20, x19, [sp, #48]
  405edc:	ldp	x22, x21, [sp, #32]
  405ee0:	ldp	x29, x30, [sp], #64
  405ee4:	ret
  405ee8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  405eec:	ldr	x8, [x8, #656]
  405ef0:	blr	x8

0000000000405ef4 <_obstack_allocated_p@@Base>:
  405ef4:	ldr	x8, [x0, #8]
  405ef8:	cbz	x8, 405f18 <_obstack_allocated_p@@Base+0x24>
  405efc:	cmp	x8, x1
  405f00:	b.cs	405f10 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  405f04:	ldr	x9, [x8]
  405f08:	cmp	x9, x1
  405f0c:	b.cs	405f20 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  405f10:	ldr	x8, [x8, #8]
  405f14:	cbnz	x8, 405efc <_obstack_allocated_p@@Base+0x8>
  405f18:	mov	w0, wzr
  405f1c:	ret
  405f20:	mov	w0, #0x1                   	// #1
  405f24:	ret

0000000000405f28 <_obstack_free@@Base>:
  405f28:	stp	x29, x30, [sp, #-48]!
  405f2c:	stp	x20, x19, [sp, #32]
  405f30:	ldr	x8, [x0, #8]
  405f34:	mov	x20, x1
  405f38:	str	x21, [sp, #16]
  405f3c:	mov	x29, sp
  405f40:	cbz	x8, 405f98 <_obstack_free@@Base+0x70>
  405f44:	mov	x19, x0
  405f48:	cmp	x8, x20
  405f4c:	b.cs	405f5c <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  405f50:	ldr	x9, [x8]
  405f54:	cmp	x9, x20
  405f58:	b.cs	405fa0 <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  405f5c:	ldrb	w9, [x19, #80]
  405f60:	ldr	x21, [x8, #8]
  405f64:	tbnz	w9, #0, 405f78 <_obstack_free@@Base+0x50>
  405f68:	ldr	x9, [x19, #64]
  405f6c:	mov	x0, x8
  405f70:	blr	x9
  405f74:	b	405f84 <_obstack_free@@Base+0x5c>
  405f78:	ldp	x9, x0, [x19, #64]
  405f7c:	mov	x1, x8
  405f80:	blr	x9
  405f84:	ldrb	w8, [x19, #80]
  405f88:	orr	w8, w8, #0x2
  405f8c:	strb	w8, [x19, #80]
  405f90:	mov	x8, x21
  405f94:	cbnz	x21, 405f48 <_obstack_free@@Base+0x20>
  405f98:	cbz	x20, 405fb0 <_obstack_free@@Base+0x88>
  405f9c:	bl	401b40 <abort@plt>
  405fa0:	stp	x20, x20, [x19, #16]
  405fa4:	ldr	x9, [x8]
  405fa8:	str	x8, [x19, #8]
  405fac:	str	x9, [x19, #32]
  405fb0:	ldp	x20, x19, [sp, #32]
  405fb4:	ldr	x21, [sp, #16]
  405fb8:	ldp	x29, x30, [sp], #48
  405fbc:	ret

0000000000405fc0 <_obstack_memory_used@@Base>:
  405fc0:	ldr	x8, [x0, #8]
  405fc4:	cbz	x8, 405fe0 <_obstack_memory_used@@Base+0x20>
  405fc8:	mov	x0, xzr
  405fcc:	sub	x10, x0, x8
  405fd0:	ldp	x9, x8, [x8]
  405fd4:	add	x0, x10, x9
  405fd8:	cbnz	x8, 405fcc <_obstack_memory_used@@Base+0xc>
  405fdc:	ret
  405fe0:	mov	x0, xzr
  405fe4:	ret
  405fe8:	stp	x29, x30, [sp, #-32]!
  405fec:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  405ff0:	str	x19, [sp, #16]
  405ff4:	ldr	x19, [x8, #672]
  405ff8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x40>
  405ffc:	add	x1, x1, #0xffe
  406000:	mov	w2, #0x5                   	// #5
  406004:	mov	x0, xzr
  406008:	mov	x29, sp
  40600c:	bl	401c60 <dcgettext@plt>
  406010:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x40>
  406014:	mov	x3, x0
  406018:	add	x2, x2, #0xcf9
  40601c:	mov	w1, #0x1                   	// #1
  406020:	mov	x0, x19
  406024:	bl	401ba0 <__fprintf_chk@plt>
  406028:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12040>
  40602c:	ldr	w0, [x8, #560]
  406030:	bl	401930 <exit@plt>
  406034:	stp	x29, x30, [sp, #-48]!
  406038:	str	x21, [sp, #16]
  40603c:	stp	x20, x19, [sp, #32]
  406040:	mov	x29, sp
  406044:	mov	x20, x0
  406048:	bl	4019b0 <__fpending@plt>
  40604c:	mov	x19, x0
  406050:	mov	x0, x20
  406054:	bl	401960 <ferror_unlocked@plt>
  406058:	mov	w21, w0
  40605c:	mov	x0, x20
  406060:	bl	405ac0 <ferror@plt+0x3dc0>
  406064:	mov	w8, w0
  406068:	cbz	w21, 406080 <_obstack_memory_used@@Base+0xc0>
  40606c:	cbnz	w8, 406078 <_obstack_memory_used@@Base+0xb8>
  406070:	bl	401cb0 <__errno_location@plt>
  406074:	str	wzr, [x0]
  406078:	mov	w0, #0xffffffff            	// #-1
  40607c:	b	4060a0 <_obstack_memory_used@@Base+0xe0>
  406080:	cmp	w8, #0x0
  406084:	csetm	w0, ne  // ne = any
  406088:	cbnz	x19, 4060a0 <_obstack_memory_used@@Base+0xe0>
  40608c:	cbz	w8, 4060a0 <_obstack_memory_used@@Base+0xe0>
  406090:	bl	401cb0 <__errno_location@plt>
  406094:	ldr	w8, [x0]
  406098:	cmp	w8, #0x9
  40609c:	csetm	w0, ne  // ne = any
  4060a0:	ldp	x20, x19, [sp, #32]
  4060a4:	ldr	x21, [sp, #16]
  4060a8:	ldp	x29, x30, [sp], #48
  4060ac:	ret
  4060b0:	stp	x29, x30, [sp, #-32]!
  4060b4:	mov	x1, xzr
  4060b8:	str	x19, [sp, #16]
  4060bc:	mov	x29, sp
  4060c0:	bl	401cf0 <setlocale@plt>
  4060c4:	cbz	x0, 4060f0 <_obstack_memory_used@@Base+0x130>
  4060c8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1040>
  4060cc:	add	x1, x1, #0xf
  4060d0:	mov	x19, x0
  4060d4:	bl	401bb0 <strcmp@plt>
  4060d8:	cbz	w0, 4060f8 <_obstack_memory_used@@Base+0x138>
  4060dc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1040>
  4060e0:	add	x1, x1, #0x11
  4060e4:	mov	x0, x19
  4060e8:	bl	401bb0 <strcmp@plt>
  4060ec:	cbz	w0, 4060f8 <_obstack_memory_used@@Base+0x138>
  4060f0:	mov	w0, #0x1                   	// #1
  4060f4:	b	4060fc <_obstack_memory_used@@Base+0x13c>
  4060f8:	mov	w0, wzr
  4060fc:	ldr	x19, [sp, #16]
  406100:	ldp	x29, x30, [sp], #32
  406104:	ret
  406108:	stp	x29, x30, [sp, #-16]!
  40610c:	mov	w0, #0xe                   	// #14
  406110:	mov	x29, sp
  406114:	bl	4019f0 <nl_langinfo@plt>
  406118:	adrp	x8, 406000 <_obstack_memory_used@@Base+0x40>
  40611c:	add	x8, x8, #0xdd3
  406120:	cmp	x0, #0x0
  406124:	csel	x8, x8, x0, eq  // eq = none
  406128:	ldrb	w9, [x8]
  40612c:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x1040>
  406130:	add	x10, x10, #0x17
  406134:	cmp	w9, #0x0
  406138:	csel	x0, x10, x8, eq  // eq = none
  40613c:	ldp	x29, x30, [sp], #16
  406140:	ret
  406144:	nop
  406148:	stp	x29, x30, [sp, #-64]!
  40614c:	mov	x29, sp
  406150:	stp	x19, x20, [sp, #16]
  406154:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x11040>
  406158:	add	x20, x20, #0xdf0
  40615c:	stp	x21, x22, [sp, #32]
  406160:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x11040>
  406164:	add	x21, x21, #0xde8
  406168:	sub	x20, x20, x21
  40616c:	mov	w22, w0
  406170:	stp	x23, x24, [sp, #48]
  406174:	mov	x23, x1
  406178:	mov	x24, x2
  40617c:	bl	4018a0 <mbrtowc@plt-0x40>
  406180:	cmp	xzr, x20, asr #3
  406184:	b.eq	4061b0 <_obstack_memory_used@@Base+0x1f0>  // b.none
  406188:	asr	x20, x20, #3
  40618c:	mov	x19, #0x0                   	// #0
  406190:	ldr	x3, [x21, x19, lsl #3]
  406194:	mov	x2, x24
  406198:	add	x19, x19, #0x1
  40619c:	mov	x1, x23
  4061a0:	mov	w0, w22
  4061a4:	blr	x3
  4061a8:	cmp	x20, x19
  4061ac:	b.ne	406190 <_obstack_memory_used@@Base+0x1d0>  // b.any
  4061b0:	ldp	x19, x20, [sp, #16]
  4061b4:	ldp	x21, x22, [sp, #32]
  4061b8:	ldp	x23, x24, [sp, #48]
  4061bc:	ldp	x29, x30, [sp], #64
  4061c0:	ret
  4061c4:	nop
  4061c8:	ret
  4061cc:	nop
  4061d0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x12040>
  4061d4:	mov	x1, #0x0                   	// #0
  4061d8:	ldr	x2, [x2, #544]
  4061dc:	b	401970 <__cxa_atexit@plt>
  4061e0:	mov	x2, x1
  4061e4:	mov	x1, x0
  4061e8:	mov	w0, #0x0                   	// #0
  4061ec:	b	401cd0 <__xstat@plt>
  4061f0:	mov	x2, x1
  4061f4:	mov	w1, w0
  4061f8:	mov	w0, #0x0                   	// #0
  4061fc:	b	401c50 <__fxstat@plt>

Disassembly of section .fini:

0000000000406200 <.fini>:
  406200:	stp	x29, x30, [sp, #-16]!
  406204:	mov	x29, sp
  406208:	ldp	x29, x30, [sp], #16
  40620c:	ret
