In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libncurses++w.a_gcc_-O0:

cursesf.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN16NCursesFormFieldD1Ev>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	adrp	x0, 0 <_ZN16NCursesFormFieldD1Ev>
      10:	ldr	x0, [x0]
      14:	add	x1, x0, #0x10
      18:	ldr	x0, [sp, #24]
      1c:	str	x1, [x0]
      20:	ldr	x0, [sp, #24]
      24:	ldr	x0, [x0, #8]
      28:	cmp	x0, #0x0
      2c:	b.eq	48 <_ZN16NCursesFormFieldD1Ev+0x48>  // b.none
      30:	ldr	x0, [sp, #24]
      34:	ldr	x0, [x0, #8]
      38:	bl	0 <free_field>
      3c:	mov	w1, w0
      40:	ldr	x0, [sp, #24]
      44:	bl	0 <_ZN16NCursesFormFieldD1Ev>
      48:	nop
      4c:	ldp	x29, x30, [sp], #32
      50:	ret

0000000000000054 <_ZN16NCursesFormFieldD0Ev>:
      54:	stp	x29, x30, [sp, #-32]!
      58:	mov	x29, sp
      5c:	str	x0, [sp, #24]
      60:	ldr	x0, [sp, #24]
      64:	bl	0 <_ZN16NCursesFormFieldD1Ev>
      68:	mov	x1, #0x18                  	// #24
      6c:	ldr	x0, [sp, #24]
      70:	bl	0 <_ZdlPvm>
      74:	ldp	x29, x30, [sp], #32
      78:	ret

000000000000007c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>:
      7c:	stp	x29, x30, [sp, #-64]!
      80:	mov	x29, sp
      84:	str	x0, [sp, #24]
      88:	str	x1, [sp, #16]
      8c:	str	wzr, [sp, #60]
      90:	str	wzr, [sp, #56]
      94:	ldrsw	x0, [sp, #56]
      98:	lsl	x0, x0, #3
      9c:	ldr	x1, [sp, #16]
      a0:	add	x0, x1, x0
      a4:	ldr	x0, [x0]
      a8:	ldr	x0, [x0, #8]
      ac:	cmp	x0, #0x0
      b0:	b.eq	d0 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x54>  // b.none
      b4:	ldr	w0, [sp, #60]
      b8:	add	w0, w0, #0x1
      bc:	str	w0, [sp, #60]
      c0:	ldr	w0, [sp, #56]
      c4:	add	w0, w0, #0x1
      c8:	str	w0, [sp, #56]
      cc:	b	94 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x18>
      d0:	ldr	w0, [sp, #60]
      d4:	add	w0, w0, #0x1
      d8:	sxtw	x0, w0
      dc:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
      e0:	cmp	x0, x1
      e4:	b.hi	fc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x80>  // b.pmore
      e8:	lsl	x0, x0, #3
      ec:	bl	0 <_Znam>
      f0:	str	x0, [sp, #40]
      f4:	str	wzr, [sp, #56]
      f8:	b	100 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x84>
      fc:	bl	0 <__cxa_throw_bad_array_new_length>
     100:	ldrsw	x0, [sp, #56]
     104:	lsl	x0, x0, #3
     108:	ldr	x1, [sp, #16]
     10c:	add	x0, x1, x0
     110:	ldr	x0, [x0]
     114:	ldr	x0, [x0, #8]
     118:	cmp	x0, #0x0
     11c:	b.eq	15c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xe0>  // b.none
     120:	ldrsw	x0, [sp, #56]
     124:	lsl	x0, x0, #3
     128:	ldr	x1, [sp, #16]
     12c:	add	x0, x1, x0
     130:	ldr	x1, [x0]
     134:	ldrsw	x0, [sp, #56]
     138:	lsl	x0, x0, #3
     13c:	ldr	x2, [sp, #40]
     140:	add	x0, x2, x0
     144:	ldr	x1, [x1, #8]
     148:	str	x1, [x0]
     14c:	ldr	w0, [sp, #56]
     150:	add	w0, w0, #0x1
     154:	str	w0, [sp, #56]
     158:	b	100 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x84>
     15c:	ldrsw	x0, [sp, #56]
     160:	lsl	x0, x0, #3
     164:	ldr	x1, [sp, #40]
     168:	add	x0, x1, x0
     16c:	str	xzr, [x0]
     170:	ldr	x0, [sp, #24]
     174:	ldr	x1, [sp, #16]
     178:	str	x1, [x0, #80]
     17c:	ldr	x0, [sp, #24]
     180:	ldr	x0, [x0, #56]
     184:	cmp	x0, #0x0
     188:	b.eq	1b0 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x134>  // b.none
     18c:	ldr	x0, [sp, #24]
     190:	ldr	x0, [x0, #56]
     194:	bl	0 <form_fields>
     198:	str	x0, [sp, #48]
     19c:	ldr	x0, [sp, #48]
     1a0:	cmp	x0, #0x0
     1a4:	b.eq	1b0 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x134>  // b.none
     1a8:	mov	w0, #0x1                   	// #1
     1ac:	b	1b4 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x138>
     1b0:	mov	w0, #0x0                   	// #0
     1b4:	cmp	w0, #0x0
     1b8:	b.eq	1e0 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x164>  // b.none
     1bc:	ldr	x0, [sp, #24]
     1c0:	ldr	x0, [x0, #56]
     1c4:	mov	x1, #0x0                   	// #0
     1c8:	bl	0 <set_form_fields>
     1cc:	ldr	x0, [sp, #48]
     1d0:	cmp	x0, #0x0
     1d4:	b.eq	1e0 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x164>  // b.none
     1d8:	ldr	x0, [sp, #48]
     1dc:	bl	0 <_ZdaPv>
     1e0:	ldr	x0, [sp, #40]
     1e4:	ldp	x29, x30, [sp], #64
     1e8:	ret

00000000000001ec <_ZN11NCursesForm20setDefaultAttributesEv>:
     1ec:	stp	x29, x30, [sp, #-80]!
     1f0:	mov	x29, sp
     1f4:	str	x19, [sp, #16]
     1f8:	str	x0, [sp, #40]
     1fc:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     200:	str	x0, [sp, #64]
     204:	ldr	x0, [sp, #40]
     208:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     20c:	str	w0, [sp, #60]
     210:	ldr	w0, [sp, #60]
     214:	cmp	w0, #0x0
     218:	b.le	30c <_ZN11NCursesForm20setDefaultAttributesEv+0x120>
     21c:	str	wzr, [sp, #76]
     220:	ldr	w1, [sp, #76]
     224:	ldr	w0, [sp, #60]
     228:	cmp	w1, w0
     22c:	b.ge	30c <_ZN11NCursesForm20setDefaultAttributesEv+0x120>  // b.tcont
     230:	ldr	w1, [sp, #76]
     234:	ldr	x0, [sp, #40]
     238:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     23c:	str	x0, [sp, #48]
     240:	ldr	x0, [sp, #48]
     244:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     248:	mov	w1, w0
     24c:	mov	w0, #0xa                   	// #10
     250:	and	w0, w1, w0
     254:	cmp	w0, #0xa
     258:	cset	w0, eq  // eq = none
     25c:	and	w0, w0, #0xff
     260:	cmp	w0, #0x0
     264:	b.eq	2cc <_ZN11NCursesForm20setDefaultAttributesEv+0xe0>  // b.none
     268:	ldr	x0, [sp, #64]
     26c:	cmp	x0, #0x0
     270:	b.eq	2bc <_ZN11NCursesForm20setDefaultAttributesEv+0xd0>  // b.none
     274:	ldr	x0, [sp, #64]
     278:	ldr	x0, [x0]
     27c:	add	x0, x0, #0x48
     280:	ldr	x1, [x0]
     284:	ldr	x0, [sp, #64]
     288:	blr	x1
     28c:	mov	w1, w0
     290:	ldr	x0, [sp, #48]
     294:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     298:	ldr	x0, [sp, #64]
     29c:	ldr	x0, [x0]
     2a0:	add	x0, x0, #0x50
     2a4:	ldr	x1, [x0]
     2a8:	ldr	x0, [sp, #64]
     2ac:	blr	x1
     2b0:	mov	w1, w0
     2b4:	ldr	x0, [sp, #48]
     2b8:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     2bc:	mov	w1, #0x5f                  	// #95
     2c0:	ldr	x0, [sp, #48]
     2c4:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     2c8:	b	2fc <_ZN11NCursesForm20setDefaultAttributesEv+0x110>
     2cc:	ldr	x0, [sp, #64]
     2d0:	cmp	x0, #0x0
     2d4:	b.eq	2fc <_ZN11NCursesForm20setDefaultAttributesEv+0x110>  // b.none
     2d8:	ldr	x0, [sp, #64]
     2dc:	ldr	x0, [x0]
     2e0:	add	x0, x0, #0x60
     2e4:	ldr	x1, [x0]
     2e8:	ldr	x0, [sp, #64]
     2ec:	blr	x1
     2f0:	mov	w1, w0
     2f4:	ldr	x0, [sp, #48]
     2f8:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     2fc:	ldr	w0, [sp, #76]
     300:	add	w0, w0, #0x1
     304:	str	w0, [sp, #76]
     308:	b	220 <_ZN11NCursesForm20setDefaultAttributesEv+0x34>
     30c:	ldr	x0, [sp, #64]
     310:	cmp	x0, #0x0
     314:	b.eq	384 <_ZN11NCursesForm20setDefaultAttributesEv+0x198>  // b.none
     318:	ldr	x19, [sp, #40]
     31c:	ldr	x0, [sp, #64]
     320:	ldr	x0, [x0]
     324:	add	x0, x0, #0x68
     328:	ldr	x1, [x0]
     32c:	ldr	x0, [sp, #64]
     330:	blr	x1
     334:	orr	w0, w0, #0x20
     338:	mov	w1, w0
     33c:	mov	x0, x19
     340:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     344:	ldr	x0, [sp, #40]
     348:	ldr	x0, [x0, #64]
     34c:	cmp	x0, #0x0
     350:	b.eq	384 <_ZN11NCursesForm20setDefaultAttributesEv+0x198>  // b.none
     354:	ldr	x0, [sp, #40]
     358:	ldr	x19, [x0, #64]
     35c:	ldr	x0, [sp, #64]
     360:	ldr	x0, [x0]
     364:	add	x0, x0, #0x68
     368:	ldr	x1, [x0]
     36c:	ldr	x0, [sp, #64]
     370:	blr	x1
     374:	orr	w0, w0, #0x20
     378:	mov	w1, w0
     37c:	mov	x0, x19
     380:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     384:	nop
     388:	ldr	x19, [sp, #16]
     38c:	ldp	x29, x30, [sp], #80
     390:	ret

0000000000000394 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb>:
     394:	stp	x29, x30, [sp, #-80]!
     398:	mov	x29, sp
     39c:	stp	x19, x20, [sp, #16]
     3a0:	str	x0, [sp, #56]
     3a4:	str	x1, [sp, #48]
     3a8:	strb	w2, [sp, #47]
     3ac:	strb	w3, [sp, #46]
     3b0:	ldr	x0, [sp, #56]
     3b4:	mov	w1, #0x1                   	// #1
     3b8:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     3bc:	ldr	x0, [sp, #56]
     3c0:	mov	w1, #0x1                   	// #1
     3c4:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     3c8:	ldr	x0, [sp, #56]
     3cc:	ldrb	w1, [sp, #47]
     3d0:	strb	w1, [x0, #73]
     3d4:	ldr	x0, [sp, #56]
     3d8:	ldrb	w1, [sp, #46]
     3dc:	strb	w1, [x0, #74]
     3e0:	ldr	x0, [sp, #56]
     3e4:	str	xzr, [x0, #56]
     3e8:	ldr	x1, [sp, #48]
     3ec:	ldr	x0, [sp, #56]
     3f0:	bl	7c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>
     3f4:	bl	0 <new_form>
     3f8:	mov	x1, x0
     3fc:	ldr	x0, [sp, #56]
     400:	str	x1, [x0, #56]
     404:	ldr	x0, [sp, #56]
     408:	ldr	x0, [x0, #56]
     40c:	cmp	x0, #0x0
     410:	b.ne	420 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x8c>  // b.any
     414:	mov	w1, #0xffffffff            	// #-1
     418:	ldr	x0, [sp, #56]
     41c:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     420:	mov	x0, #0x18                  	// #24
     424:	bl	0 <_Znwm>
     428:	str	x0, [sp, #72]
     42c:	ldr	x0, [sp, #72]
     430:	str	xzr, [x0]
     434:	ldr	x0, [sp, #72]
     438:	ldr	x1, [sp, #56]
     43c:	str	x1, [x0, #8]
     440:	ldr	x0, [sp, #56]
     444:	ldr	x1, [x0, #56]
     448:	ldr	x0, [sp, #72]
     44c:	str	x1, [x0, #16]
     450:	ldr	x0, [sp, #56]
     454:	ldr	x0, [x0, #56]
     458:	ldr	x1, [sp, #72]
     45c:	bl	0 <set_form_userptr>
     460:	ldr	x0, [sp, #56]
     464:	ldr	x2, [x0, #56]
     468:	adrp	x0, 878 <_nc_xx_frm_init>
     46c:	ldr	x1, [x0]
     470:	mov	x0, x2
     474:	bl	0 <set_form_init>
     478:	ldr	x0, [sp, #56]
     47c:	ldr	x2, [x0, #56]
     480:	adrp	x0, 8a8 <_nc_xx_frm_term>
     484:	ldr	x1, [x0]
     488:	mov	x0, x2
     48c:	bl	0 <set_form_term>
     490:	ldr	x0, [sp, #56]
     494:	ldr	x2, [x0, #56]
     498:	adrp	x0, 8d8 <_nc_xx_fld_init>
     49c:	ldr	x1, [x0]
     4a0:	mov	x0, x2
     4a4:	bl	0 <set_field_init>
     4a8:	ldr	x0, [sp, #56]
     4ac:	ldr	x2, [x0, #56]
     4b0:	adrp	x0, 928 <_nc_xx_fld_term>
     4b4:	ldr	x1, [x0]
     4b8:	mov	x0, x2
     4bc:	bl	0 <set_field_term>
     4c0:	add	x1, sp, #0x40
     4c4:	add	x0, sp, #0x44
     4c8:	mov	x2, x1
     4cc:	mov	x1, x0
     4d0:	ldr	x0, [sp, #56]
     4d4:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     4d8:	ldr	x0, [sp, #56]
     4dc:	ldr	x2, [x0, #56]
     4e0:	ldr	x0, [sp, #56]
     4e4:	ldr	x0, [x0, #8]
     4e8:	mov	x1, x0
     4ec:	mov	x0, x2
     4f0:	bl	0 <set_form_win>
     4f4:	ldrb	w0, [sp, #47]
     4f8:	cmp	w0, #0x0
     4fc:	b.eq	5c0 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x22c>  // b.none
     500:	ldr	x0, [sp, #56]
     504:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     508:	sub	w1, w0, #0x1
     50c:	ldr	w0, [sp, #68]
     510:	cmp	w1, w0
     514:	b.le	530 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x19c>
     518:	ldr	x0, [sp, #56]
     51c:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     520:	sub	w1, w0, #0x1
     524:	ldr	w0, [sp, #64]
     528:	cmp	w1, w0
     52c:	b.gt	538 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>
     530:	mov	w0, #0x1                   	// #1
     534:	b	53c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a8>
     538:	mov	w0, #0x0                   	// #0
     53c:	cmp	w0, #0x0
     540:	b.eq	550 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1bc>  // b.none
     544:	mov	w1, #0xfffffffa            	// #-6
     548:	ldr	x0, [sp, #56]
     54c:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     550:	mov	x0, #0x30                  	// #48
     554:	bl	0 <_Znwm>
     558:	mov	x19, x0
     55c:	ldr	x0, [sp, #56]
     560:	ldr	w1, [sp, #68]
     564:	ldr	w2, [sp, #64]
     568:	mov	w6, #0x72                  	// #114
     56c:	mov	w5, #0x1                   	// #1
     570:	mov	w4, #0x1                   	// #1
     574:	mov	w3, w2
     578:	mov	w2, w1
     57c:	mov	x1, x0
     580:	mov	x0, x19
     584:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
     588:	ldr	x0, [sp, #56]
     58c:	str	x19, [x0, #64]
     590:	ldr	x0, [sp, #56]
     594:	ldr	x2, [x0, #56]
     598:	ldr	x0, [sp, #56]
     59c:	ldr	x0, [x0, #64]
     5a0:	ldr	x0, [x0, #8]
     5a4:	mov	x1, x0
     5a8:	mov	x0, x2
     5ac:	bl	0 <set_form_sub>
     5b0:	ldr	x0, [sp, #56]
     5b4:	mov	w1, #0x1                   	// #1
     5b8:	strb	w1, [x0, #72]
     5bc:	b	5d0 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x23c>
     5c0:	ldr	x0, [sp, #56]
     5c4:	str	xzr, [x0, #64]
     5c8:	ldr	x0, [sp, #56]
     5cc:	strb	wzr, [x0, #72]
     5d0:	mov	w1, #0x1                   	// #1
     5d4:	ldr	x0, [sp, #56]
     5d8:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     5dc:	ldr	x0, [sp, #56]
     5e0:	ldr	x0, [x0]
     5e4:	add	x0, x0, #0x60
     5e8:	ldr	x1, [x0]
     5ec:	ldr	x0, [sp, #56]
     5f0:	blr	x1
     5f4:	b	610 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x27c>
     5f8:	mov	x20, x0
     5fc:	mov	x1, #0x30                  	// #48
     600:	mov	x0, x19
     604:	bl	0 <_ZdlPvm>
     608:	mov	x0, x20
     60c:	bl	0 <_Unwind_Resume>
     610:	ldp	x19, x20, [sp, #16]
     614:	ldp	x29, x30, [sp], #80
     618:	ret

000000000000061c <_ZN11NCursesFormD1Ev>:
     61c:	stp	x29, x30, [sp, #-64]!
     620:	mov	x29, sp
     624:	str	x0, [sp, #24]
     628:	adrp	x0, 0 <_ZN16NCursesFormFieldD1Ev>
     62c:	ldr	x0, [x0]
     630:	add	x1, x0, #0x10
     634:	ldr	x0, [sp, #24]
     638:	str	x1, [x0]
     63c:	ldr	x0, [sp, #24]
     640:	ldr	x0, [x0, #56]
     644:	bl	0 <form_userptr>
     648:	str	x0, [sp, #48]
     64c:	ldr	x0, [sp, #48]
     650:	cmp	x0, #0x0
     654:	b.eq	660 <_ZN11NCursesFormD1Ev+0x44>  // b.none
     658:	mov	x1, #0x18                  	// #24
     65c:	bl	0 <_ZdlPvm>
     660:	ldr	x0, [sp, #24]
     664:	ldrb	w0, [x0, #72]
     668:	cmp	w0, #0x0
     66c:	b.eq	6a0 <_ZN11NCursesFormD1Ev+0x84>  // b.none
     670:	ldr	x0, [sp, #24]
     674:	ldr	x0, [x0, #64]
     678:	cmp	x0, #0x0
     67c:	b.eq	690 <_ZN11NCursesFormD1Ev+0x74>  // b.none
     680:	ldr	x1, [x0]
     684:	add	x1, x1, #0x10
     688:	ldr	x1, [x1]
     68c:	blr	x1
     690:	ldr	x0, [sp, #24]
     694:	ldr	x0, [x0, #56]
     698:	mov	x1, #0x0                   	// #0
     69c:	bl	0 <set_form_sub>
     6a0:	ldr	x0, [sp, #24]
     6a4:	ldr	x0, [x0, #56]
     6a8:	cmp	x0, #0x0
     6ac:	b.eq	794 <_ZN11NCursesFormD1Ev+0x178>  // b.none
     6b0:	ldr	x0, [sp, #24]
     6b4:	ldr	x0, [x0, #56]
     6b8:	bl	0 <form_fields>
     6bc:	str	x0, [sp, #40]
     6c0:	ldr	x0, [sp, #24]
     6c4:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     6c8:	str	w0, [sp, #36]
     6cc:	ldr	x0, [sp, #24]
     6d0:	ldr	x0, [x0, #56]
     6d4:	mov	x1, #0x0                   	// #0
     6d8:	bl	0 <set_form_fields>
     6dc:	mov	w1, w0
     6e0:	ldr	x0, [sp, #24]
     6e4:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     6e8:	ldr	x0, [sp, #24]
     6ec:	ldrb	w0, [x0, #74]
     6f0:	cmp	w0, #0x0
     6f4:	b.eq	774 <_ZN11NCursesFormD1Ev+0x158>  // b.none
     6f8:	ldr	w0, [sp, #36]
     6fc:	cmp	w0, #0x0
     700:	b.le	758 <_ZN11NCursesFormD1Ev+0x13c>
     704:	str	wzr, [sp, #60]
     708:	ldr	w1, [sp, #60]
     70c:	ldr	w0, [sp, #36]
     710:	cmp	w1, w0
     714:	b.gt	758 <_ZN11NCursesFormD1Ev+0x13c>
     718:	ldr	x0, [sp, #24]
     71c:	ldr	x1, [x0, #80]
     720:	ldrsw	x0, [sp, #60]
     724:	lsl	x0, x0, #3
     728:	add	x0, x1, x0
     72c:	ldr	x0, [x0]
     730:	cmp	x0, #0x0
     734:	b.eq	748 <_ZN11NCursesFormD1Ev+0x12c>  // b.none
     738:	ldr	x1, [x0]
     73c:	add	x1, x1, #0x8
     740:	ldr	x1, [x1]
     744:	blr	x1
     748:	ldr	w0, [sp, #60]
     74c:	add	w0, w0, #0x1
     750:	str	w0, [sp, #60]
     754:	b	708 <_ZN11NCursesFormD1Ev+0xec>
     758:	ldr	x0, [sp, #24]
     75c:	ldr	x0, [x0, #80]
     760:	cmp	x0, #0x0
     764:	b.eq	774 <_ZN11NCursesFormD1Ev+0x158>  // b.none
     768:	ldr	x0, [sp, #24]
     76c:	ldr	x0, [x0, #80]
     770:	bl	0 <_ZdaPv>
     774:	ldr	x0, [sp, #24]
     778:	ldr	x0, [x0, #56]
     77c:	bl	0 <free_form>
     780:	ldr	x0, [sp, #40]
     784:	cmp	x0, #0x0
     788:	b.eq	794 <_ZN11NCursesFormD1Ev+0x178>  // b.none
     78c:	ldr	x0, [sp, #40]
     790:	bl	0 <_ZdaPv>
     794:	ldr	x0, [sp, #24]
     798:	bl	0 <_ZN12NCursesPanelD2Ev>
     79c:	nop
     7a0:	ldp	x29, x30, [sp], #64
     7a4:	ret

00000000000007a8 <_ZN11NCursesFormD0Ev>:
     7a8:	stp	x29, x30, [sp, #-32]!
     7ac:	mov	x29, sp
     7b0:	str	x0, [sp, #24]
     7b4:	ldr	x0, [sp, #24]
     7b8:	bl	61c <_ZN11NCursesFormD1Ev>
     7bc:	mov	x1, #0x58                  	// #88
     7c0:	ldr	x0, [sp, #24]
     7c4:	bl	0 <_ZdlPvm>
     7c8:	ldp	x29, x30, [sp], #32
     7cc:	ret

00000000000007d0 <_ZN11NCursesForm12setSubWindowER13NCursesWindow>:
     7d0:	stp	x29, x30, [sp, #-32]!
     7d4:	mov	x29, sp
     7d8:	str	x0, [sp, #24]
     7dc:	str	x1, [sp, #16]
     7e0:	ldr	x0, [sp, #24]
     7e4:	ldr	x1, [sp, #16]
     7e8:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
     7ec:	and	w0, w0, #0xff
     7f0:	eor	w0, w0, #0x1
     7f4:	and	w0, w0, #0xff
     7f8:	cmp	w0, #0x0
     7fc:	b.eq	810 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x40>  // b.none
     800:	mov	w1, #0xffffffff            	// #-1
     804:	ldr	x0, [sp, #24]
     808:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     80c:	b	86c <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x9c>
     810:	ldr	x0, [sp, #24]
     814:	ldrb	w0, [x0, #72]
     818:	cmp	w0, #0x0
     81c:	b.eq	840 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x70>  // b.none
     820:	ldr	x0, [sp, #24]
     824:	ldr	x0, [x0, #64]
     828:	cmp	x0, #0x0
     82c:	b.eq	840 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x70>  // b.none
     830:	ldr	x1, [x0]
     834:	add	x1, x1, #0x10
     838:	ldr	x1, [x1]
     83c:	blr	x1
     840:	ldr	x0, [sp, #24]
     844:	ldr	x1, [sp, #16]
     848:	str	x1, [x0, #64]
     84c:	ldr	x0, [sp, #24]
     850:	ldr	x2, [x0, #56]
     854:	ldr	x0, [sp, #24]
     858:	ldr	x0, [x0, #64]
     85c:	ldr	x0, [x0, #8]
     860:	mov	x1, x0
     864:	mov	x0, x2
     868:	bl	0 <set_form_sub>
     86c:	nop
     870:	ldp	x29, x30, [sp], #32
     874:	ret

0000000000000878 <_nc_xx_frm_init>:
     878:	stp	x29, x30, [sp, #-32]!
     87c:	mov	x29, sp
     880:	str	x0, [sp, #24]
     884:	ldr	x0, [sp, #24]
     888:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     88c:	ldr	x1, [x0]
     890:	add	x1, x1, #0x68
     894:	ldr	x1, [x1]
     898:	blr	x1
     89c:	nop
     8a0:	ldp	x29, x30, [sp], #32
     8a4:	ret

00000000000008a8 <_nc_xx_frm_term>:
     8a8:	stp	x29, x30, [sp, #-32]!
     8ac:	mov	x29, sp
     8b0:	str	x0, [sp, #24]
     8b4:	ldr	x0, [sp, #24]
     8b8:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     8bc:	ldr	x1, [x0]
     8c0:	add	x1, x1, #0x70
     8c4:	ldr	x1, [x1]
     8c8:	blr	x1
     8cc:	nop
     8d0:	ldp	x29, x30, [sp], #32
     8d4:	ret

00000000000008d8 <_nc_xx_fld_init>:
     8d8:	stp	x29, x30, [sp, #-64]!
     8dc:	mov	x29, sp
     8e0:	str	x19, [sp, #16]
     8e4:	str	x0, [sp, #40]
     8e8:	ldr	x0, [sp, #40]
     8ec:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     8f0:	str	x0, [sp, #56]
     8f4:	ldr	x0, [sp, #56]
     8f8:	ldr	x0, [x0]
     8fc:	add	x0, x0, #0x78
     900:	ldr	x19, [x0]
     904:	ldr	x0, [sp, #56]
     908:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     90c:	mov	x1, x0
     910:	ldr	x0, [sp, #56]
     914:	blr	x19
     918:	nop
     91c:	ldr	x19, [sp, #16]
     920:	ldp	x29, x30, [sp], #64
     924:	ret

0000000000000928 <_nc_xx_fld_term>:
     928:	stp	x29, x30, [sp, #-64]!
     92c:	mov	x29, sp
     930:	str	x19, [sp, #16]
     934:	str	x0, [sp, #40]
     938:	ldr	x0, [sp, #40]
     93c:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     940:	str	x0, [sp, #56]
     944:	ldr	x0, [sp, #56]
     948:	ldr	x0, [x0]
     94c:	add	x0, x0, #0x80
     950:	ldr	x19, [x0]
     954:	ldr	x0, [sp, #56]
     958:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     95c:	mov	x1, x0
     960:	ldr	x0, [sp, #56]
     964:	blr	x19
     968:	nop
     96c:	ldr	x19, [sp, #16]
     970:	ldp	x29, x30, [sp], #64
     974:	ret

0000000000000978 <_ZN11NCursesForm12On_Form_InitEv>:
     978:	sub	sp, sp, #0x10
     97c:	str	x0, [sp, #8]
     980:	nop
     984:	add	sp, sp, #0x10
     988:	ret

000000000000098c <_ZN11NCursesForm19On_Form_TerminationEv>:
     98c:	sub	sp, sp, #0x10
     990:	str	x0, [sp, #8]
     994:	nop
     998:	add	sp, sp, #0x10
     99c:	ret

00000000000009a0 <_ZN11NCursesForm13On_Field_InitER16NCursesFormField>:
     9a0:	sub	sp, sp, #0x10
     9a4:	str	x0, [sp, #8]
     9a8:	str	x1, [sp]
     9ac:	nop
     9b0:	add	sp, sp, #0x10
     9b4:	ret

00000000000009b8 <_ZN11NCursesForm20On_Field_TerminationER16NCursesFormField>:
     9b8:	sub	sp, sp, #0x10
     9bc:	str	x0, [sp, #8]
     9c0:	str	x1, [sp]
     9c4:	nop
     9c8:	add	sp, sp, #0x10
     9cc:	ret

00000000000009d0 <_ZN11NCursesForm6driverEi>:
     9d0:	stp	x29, x30, [sp, #-48]!
     9d4:	mov	x29, sp
     9d8:	str	x0, [sp, #24]
     9dc:	str	w1, [sp, #20]
     9e0:	ldr	x0, [sp, #24]
     9e4:	ldr	x0, [x0, #56]
     9e8:	ldr	w1, [sp, #20]
     9ec:	bl	0 <form_driver>
     9f0:	str	w0, [sp, #44]
     9f4:	ldr	w0, [sp, #44]
     9f8:	add	w0, w0, #0xd
     9fc:	cmp	w0, #0xd
     a00:	cset	w1, hi  // hi = pmore
     a04:	and	w1, w1, #0xff
     a08:	cmp	w1, #0x0
     a0c:	b.ne	a34 <_ZN11NCursesForm6driverEi+0x64>  // b.any
     a10:	mov	x1, #0x1                   	// #1
     a14:	lsl	x1, x1, x0
     a18:	mov	x0, #0x2023                	// #8227
     a1c:	and	x0, x1, x0
     a20:	cmp	x0, #0x0
     a24:	cset	w0, ne  // ne = any
     a28:	and	w0, w0, #0xff
     a2c:	cmp	w0, #0x0
     a30:	b.ne	a44 <_ZN11NCursesForm6driverEi+0x74>  // b.any
     a34:	ldr	w1, [sp, #44]
     a38:	ldr	x0, [sp, #24]
     a3c:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     a40:	b	a48 <_ZN11NCursesForm6driverEi+0x78>
     a44:	nop
     a48:	ldr	w0, [sp, #44]
     a4c:	ldp	x29, x30, [sp], #48
     a50:	ret

0000000000000a54 <_ZNK11NCursesForm17On_Request_DeniedEi>:
     a54:	stp	x29, x30, [sp, #-32]!
     a58:	mov	x29, sp
     a5c:	str	x0, [sp, #24]
     a60:	str	w1, [sp, #20]
     a64:	bl	0 <beep>
     a68:	nop
     a6c:	ldp	x29, x30, [sp], #32
     a70:	ret

0000000000000a74 <_ZNK11NCursesForm16On_Invalid_FieldEi>:
     a74:	stp	x29, x30, [sp, #-32]!
     a78:	mov	x29, sp
     a7c:	str	x0, [sp, #24]
     a80:	str	w1, [sp, #20]
     a84:	bl	0 <beep>
     a88:	nop
     a8c:	ldp	x29, x30, [sp], #32
     a90:	ret

0000000000000a94 <_ZNK11NCursesForm18On_Unknown_CommandEi>:
     a94:	stp	x29, x30, [sp, #-32]!
     a98:	mov	x29, sp
     a9c:	str	x0, [sp, #24]
     aa0:	str	w1, [sp, #20]
     aa4:	bl	0 <beep>
     aa8:	nop
     aac:	ldp	x29, x30, [sp], #32
     ab0:	ret

0000000000000ab4 <_ZN11NCursesFormclEv>:
     ab4:	stp	x29, x30, [sp, #-64]!
     ab8:	mov	x29, sp
     abc:	str	x19, [sp, #16]
     ac0:	str	x0, [sp, #40]
     ac4:	mov	w1, #0x1                   	// #1
     ac8:	ldr	x0, [sp, #40]
     acc:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     ad0:	ldr	x0, [sp, #40]
     ad4:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     ad8:	ldr	x2, [sp, #40]
     adc:	ldr	x0, [sp, #40]
     ae0:	ldr	x0, [x0]
     ae4:	add	x0, x0, #0x20
     ae8:	ldr	x1, [x0]
     aec:	mov	x0, x2
     af0:	blr	x1
     af4:	ldr	x0, [sp, #40]
     af8:	ldr	x0, [x0]
     afc:	add	x0, x0, #0x88
     b00:	ldr	x19, [x0]
     b04:	ldr	x2, [sp, #40]
     b08:	ldr	x0, [sp, #40]
     b0c:	ldr	x0, [x0]
     b10:	add	x0, x0, #0x30
     b14:	ldr	x1, [x0]
     b18:	mov	x0, x2
     b1c:	blr	x1
     b20:	str	w0, [sp, #60]
     b24:	ldr	w1, [sp, #60]
     b28:	ldr	x0, [sp, #40]
     b2c:	blr	x19
     b30:	str	w0, [sp, #56]
     b34:	ldr	w0, [sp, #56]
     b38:	cmp	w0, #0x280
     b3c:	cset	w0, ne  // ne = any
     b40:	and	w0, w0, #0xff
     b44:	cmp	w0, #0x0
     b48:	b.eq	c18 <_ZN11NCursesFormclEv+0x164>  // b.none
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	x0, [x0]
     b54:	add	x0, x0, #0x58
     b58:	ldr	x2, [x0]
     b5c:	ldr	w1, [sp, #56]
     b60:	ldr	x0, [sp, #40]
     b64:	blr	x2
     b68:	str	w0, [sp, #52]
     b6c:	ldr	w0, [sp, #52]
     b70:	cmp	w0, #0x0
     b74:	b.eq	c10 <_ZN11NCursesFormclEv+0x15c>  // b.none
     b78:	cmp	w0, #0x0
     b7c:	b.gt	c00 <_ZN11NCursesFormclEv+0x14c>
     b80:	cmn	w0, #0x8
     b84:	b.eq	be0 <_ZN11NCursesFormclEv+0x12c>  // b.none
     b88:	cmn	w0, #0x8
     b8c:	b.gt	c00 <_ZN11NCursesFormclEv+0x14c>
     b90:	cmn	w0, #0xd
     b94:	b.eq	bc0 <_ZN11NCursesFormclEv+0x10c>  // b.none
     b98:	cmn	w0, #0xc
     b9c:	b.ne	c00 <_ZN11NCursesFormclEv+0x14c>  // b.any
     ba0:	ldr	x0, [sp, #40]
     ba4:	ldr	x0, [x0]
     ba8:	add	x0, x0, #0x98
     bac:	ldr	x2, [x0]
     bb0:	ldr	w1, [sp, #60]
     bb4:	ldr	x0, [sp, #40]
     bb8:	blr	x2
     bbc:	b	c14 <_ZN11NCursesFormclEv+0x160>
     bc0:	ldr	x0, [sp, #40]
     bc4:	ldr	x0, [x0]
     bc8:	add	x0, x0, #0xa0
     bcc:	ldr	x2, [x0]
     bd0:	ldr	w1, [sp, #60]
     bd4:	ldr	x0, [sp, #40]
     bd8:	blr	x2
     bdc:	b	c14 <_ZN11NCursesFormclEv+0x160>
     be0:	ldr	x0, [sp, #40]
     be4:	ldr	x0, [x0]
     be8:	add	x0, x0, #0xa8
     bec:	ldr	x2, [x0]
     bf0:	ldr	w1, [sp, #60]
     bf4:	ldr	x0, [sp, #40]
     bf8:	blr	x2
     bfc:	b	c14 <_ZN11NCursesFormclEv+0x160>
     c00:	ldr	w1, [sp, #52]
     c04:	ldr	x0, [sp, #40]
     c08:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     c0c:	b	af4 <_ZN11NCursesFormclEv+0x40>
     c10:	nop
     c14:	b	af4 <_ZN11NCursesFormclEv+0x40>
     c18:	ldr	x0, [sp, #40]
     c1c:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     c20:	ldr	x0, [sp, #40]
     c24:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     c28:	ldr	x2, [sp, #40]
     c2c:	ldr	x0, [sp, #40]
     c30:	ldr	x0, [x0]
     c34:	add	x0, x0, #0x20
     c38:	ldr	x1, [x0]
     c3c:	mov	x0, x2
     c40:	blr	x1
     c44:	ldr	x0, [sp, #40]
     c48:	ldr	x19, [x0, #80]
     c4c:	ldr	x0, [sp, #40]
     c50:	ldr	x0, [x0, #56]
     c54:	bl	0 <current_field>
     c58:	bl	0 <field_index>
     c5c:	sxtw	x0, w0
     c60:	lsl	x0, x0, #3
     c64:	add	x0, x19, x0
     c68:	ldr	x0, [x0]
     c6c:	ldr	x19, [sp, #16]
     c70:	ldp	x29, x30, [sp], #64
     c74:	ret

0000000000000c78 <_ZN11NCursesForm10virtualizeEi>:
     c78:	sub	sp, sp, #0x10
     c7c:	str	x0, [sp, #8]
     c80:	str	w1, [sp, #4]
     c84:	ldr	w0, [sp, #4]
     c88:	cmp	w0, #0x168
     c8c:	b.eq	dcc <_ZN11NCursesForm10virtualizeEi+0x154>  // b.none
     c90:	ldr	w0, [sp, #4]
     c94:	cmp	w0, #0x168
     c98:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     c9c:	ldr	w0, [sp, #4]
     ca0:	cmp	w0, #0x157
     ca4:	b.eq	e0c <_ZN11NCursesForm10virtualizeEi+0x194>  // b.none
     ca8:	ldr	w0, [sp, #4]
     cac:	cmp	w0, #0x157
     cb0:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     cb4:	ldr	w0, [sp, #4]
     cb8:	cmp	w0, #0x153
     cbc:	b.eq	dfc <_ZN11NCursesForm10virtualizeEi+0x184>  // b.none
     cc0:	ldr	w0, [sp, #4]
     cc4:	cmp	w0, #0x153
     cc8:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     ccc:	ldr	w0, [sp, #4]
     cd0:	cmp	w0, #0x152
     cd4:	b.eq	df4 <_ZN11NCursesForm10virtualizeEi+0x17c>  // b.none
     cd8:	ldr	w0, [sp, #4]
     cdc:	cmp	w0, #0x152
     ce0:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     ce4:	ldr	w0, [sp, #4]
     ce8:	cmp	w0, #0x14d
     cec:	b.eq	e14 <_ZN11NCursesForm10virtualizeEi+0x19c>  // b.none
     cf0:	ldr	w0, [sp, #4]
     cf4:	cmp	w0, #0x14d
     cf8:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     cfc:	ldr	w0, [sp, #4]
     d00:	cmp	w0, #0x107
     d04:	b.eq	e04 <_ZN11NCursesForm10virtualizeEi+0x18c>  // b.none
     d08:	ldr	w0, [sp, #4]
     d0c:	cmp	w0, #0x107
     d10:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     d14:	ldr	w0, [sp, #4]
     d18:	cmp	w0, #0x106
     d1c:	b.eq	dc4 <_ZN11NCursesForm10virtualizeEi+0x14c>  // b.none
     d20:	ldr	w0, [sp, #4]
     d24:	cmp	w0, #0x106
     d28:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     d2c:	ldr	w0, [sp, #4]
     d30:	cmp	w0, #0x105
     d34:	b.eq	dec <_ZN11NCursesForm10virtualizeEi+0x174>  // b.none
     d38:	ldr	w0, [sp, #4]
     d3c:	cmp	w0, #0x105
     d40:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     d44:	ldr	w0, [sp, #4]
     d48:	cmp	w0, #0x104
     d4c:	b.eq	de4 <_ZN11NCursesForm10virtualizeEi+0x16c>  // b.none
     d50:	ldr	w0, [sp, #4]
     d54:	cmp	w0, #0x104
     d58:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     d5c:	ldr	w0, [sp, #4]
     d60:	cmp	w0, #0x103
     d64:	b.eq	ddc <_ZN11NCursesForm10virtualizeEi+0x164>  // b.none
     d68:	ldr	w0, [sp, #4]
     d6c:	cmp	w0, #0x103
     d70:	b.gt	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     d74:	ldr	w0, [sp, #4]
     d78:	cmp	w0, #0x19
     d7c:	b.gt	db4 <_ZN11NCursesForm10virtualizeEi+0x13c>
     d80:	ldr	w0, [sp, #4]
     d84:	cmp	w0, #0x0
     d88:	b.le	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     d8c:	ldr	w0, [sp, #4]
     d90:	sub	w0, w0, #0x1
     d94:	cmp	w0, #0x18
     d98:	b.hi	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>  // b.pmore
     d9c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
     da0:	add	x1, x1, #0x0
     da4:	ldr	w0, [x1, w0, uxtw #2]
     da8:	adr	x1, db4 <_ZN11NCursesForm10virtualizeEi+0x13c>
     dac:	add	x0, x1, w0, sxtw #2
     db0:	br	x0
     db4:	ldr	w0, [sp, #4]
     db8:	cmp	w0, #0x102
     dbc:	b.eq	dd4 <_ZN11NCursesForm10virtualizeEi+0x15c>  // b.none
     dc0:	b	ec4 <_ZN11NCursesForm10virtualizeEi+0x24c>
     dc4:	mov	w0, #0x206                 	// #518
     dc8:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     dcc:	mov	w0, #0x207                 	// #519
     dd0:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     dd4:	mov	w0, #0x21d                 	// #541
     dd8:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     ddc:	mov	w0, #0x21c                 	// #540
     de0:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     de4:	mov	w0, #0x211                 	// #529
     de8:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     dec:	mov	w0, #0x210                 	// #528
     df0:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     df4:	mov	w0, #0x200                 	// #512
     df8:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     dfc:	mov	w0, #0x201                 	// #513
     e00:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e04:	mov	w0, #0x222                 	// #546
     e08:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e0c:	mov	w0, #0x21e                 	// #542
     e10:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e14:	mov	w0, #0x227                 	// #551
     e18:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e1c:	mov	w0, #0x280                 	// #640
     e20:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e24:	mov	w0, #0x204                 	// #516
     e28:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e2c:	mov	w0, #0x205                 	// #517
     e30:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e34:	mov	w0, #0x20c                 	// #524
     e38:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e3c:	mov	w0, #0x20d                 	// #525
     e40:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e44:	mov	w0, #0x20e                 	// #526
     e48:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e4c:	mov	w0, #0x20f                 	// #527
     e50:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e54:	mov	w0, #0x214                 	// #532
     e58:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e5c:	mov	w0, #0x215                 	// #533
     e60:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e64:	mov	w0, #0x216                 	// #534
     e68:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e6c:	mov	w0, #0x217                 	// #535
     e70:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e74:	mov	w0, #0x21f                 	// #543
     e78:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e7c:	mov	w0, #0x21e                 	// #542
     e80:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e84:	mov	w0, #0x220                 	// #544
     e88:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e8c:	mov	w0, #0x221                 	// #545
     e90:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e94:	mov	w0, #0x222                 	// #546
     e98:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     e9c:	mov	w0, #0x223                 	// #547
     ea0:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     ea4:	mov	w0, #0x224                 	// #548
     ea8:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     eac:	mov	w0, #0x226                 	// #550
     eb0:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     eb4:	mov	w0, #0x237                 	// #567
     eb8:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     ebc:	mov	w0, #0x238                 	// #568
     ec0:	b	ec8 <_ZN11NCursesForm10virtualizeEi+0x250>
     ec4:	ldr	w0, [sp, #4]
     ec8:	add	sp, sp, #0x10
     ecc:	ret

0000000000000ed0 <_nc_xx_fld_fcheck>:
     ed0:	stp	x29, x30, [sp, #-48]!
     ed4:	mov	x29, sp
     ed8:	str	x0, [sp, #24]
     edc:	str	x1, [sp, #16]
     ee0:	ldr	x0, [sp, #16]
     ee4:	str	x0, [sp, #40]
     ee8:	ldr	x0, [sp, #40]
     eec:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     ef0:	str	x0, [sp, #32]
     ef4:	ldr	x0, [sp, #32]
     ef8:	ldr	x0, [x0]
     efc:	add	x0, x0, #0x18
     f00:	ldr	x2, [x0]
     f04:	ldr	x1, [sp, #40]
     f08:	ldr	x0, [sp, #32]
     f0c:	blr	x2
     f10:	and	w0, w0, #0xff
     f14:	ldp	x29, x30, [sp], #48
     f18:	ret

0000000000000f1c <_nc_xx_fld_ccheck>:
     f1c:	stp	x29, x30, [sp, #-48]!
     f20:	mov	x29, sp
     f24:	str	w0, [sp, #28]
     f28:	str	x1, [sp, #16]
     f2c:	ldr	x0, [sp, #16]
     f30:	str	x0, [sp, #40]
     f34:	ldr	x0, [sp, #40]
     f38:	bl	0 <_ZN16NCursesFormFieldD1Ev>
     f3c:	str	x0, [sp, #32]
     f40:	ldr	x0, [sp, #32]
     f44:	ldr	x0, [x0]
     f48:	add	x0, x0, #0x20
     f4c:	ldr	x2, [x0]
     f50:	ldr	w1, [sp, #28]
     f54:	ldr	x0, [sp, #32]
     f58:	blr	x2
     f5c:	and	w0, w0, #0xff
     f60:	ldp	x29, x30, [sp], #48
     f64:	ret

0000000000000f68 <_nc_xx_fld_makearg>:
     f68:	sub	sp, sp, #0x10
     f6c:	str	x0, [sp, #8]
     f70:	ldr	x0, [sp, #8]
     f74:	ldr	w1, [x0, #24]
     f78:	ldr	x0, [sp, #8]
     f7c:	ldr	x0, [x0]
     f80:	cmp	w1, #0x0
     f84:	b.lt	f9c <_nc_xx_fld_makearg+0x34>  // b.tstop
     f88:	add	x1, x0, #0xf
     f8c:	and	x2, x1, #0xfffffffffffffff8
     f90:	ldr	x1, [sp, #8]
     f94:	str	x2, [x1]
     f98:	b	fdc <_nc_xx_fld_makearg+0x74>
     f9c:	add	w3, w1, #0x8
     fa0:	ldr	x2, [sp, #8]
     fa4:	str	w3, [x2, #24]
     fa8:	ldr	x2, [sp, #8]
     fac:	ldr	w2, [x2, #24]
     fb0:	cmp	w2, #0x0
     fb4:	b.le	fcc <_nc_xx_fld_makearg+0x64>
     fb8:	add	x1, x0, #0xf
     fbc:	and	x2, x1, #0xfffffffffffffff8
     fc0:	ldr	x1, [sp, #8]
     fc4:	str	x2, [x1]
     fc8:	b	fdc <_nc_xx_fld_makearg+0x74>
     fcc:	ldr	x0, [sp, #8]
     fd0:	ldr	x2, [x0, #8]
     fd4:	sxtw	x0, w1
     fd8:	add	x0, x2, x0
     fdc:	ldr	x0, [x0]
     fe0:	add	sp, sp, #0x10
     fe4:	ret

0000000000000fe8 <_nc_xx_next_choice>:
     fe8:	stp	x29, x30, [sp, #-48]!
     fec:	mov	x29, sp
     ff0:	str	x0, [sp, #24]
     ff4:	str	x1, [sp, #16]
     ff8:	ldr	x0, [sp, #16]
     ffc:	str	x0, [sp, #40]
    1000:	ldr	x0, [sp, #40]
    1004:	bl	0 <_ZN16NCursesFormFieldD1Ev>
    1008:	str	x0, [sp, #32]
    100c:	ldr	x0, [sp, #32]
    1010:	ldr	x0, [x0]
    1014:	add	x0, x0, #0x28
    1018:	ldr	x2, [x0]
    101c:	ldr	x1, [sp, #40]
    1020:	ldr	x0, [sp, #32]
    1024:	blr	x2
    1028:	and	w0, w0, #0xff
    102c:	ldp	x29, x30, [sp], #48
    1030:	ret

0000000000001034 <_nc_xx_prev_choice>:
    1034:	stp	x29, x30, [sp, #-48]!
    1038:	mov	x29, sp
    103c:	str	x0, [sp, #24]
    1040:	str	x1, [sp, #16]
    1044:	ldr	x0, [sp, #16]
    1048:	str	x0, [sp, #40]
    104c:	ldr	x0, [sp, #40]
    1050:	bl	0 <_ZN16NCursesFormFieldD1Ev>
    1054:	str	x0, [sp, #32]
    1058:	ldr	x0, [sp, #32]
    105c:	ldr	x0, [x0]
    1060:	add	x0, x0, #0x30
    1064:	ldr	x2, [x0]
    1068:	ldr	x1, [sp, #40]
    106c:	ldr	x0, [sp, #32]
    1070:	blr	x2
    1074:	and	w0, w0, #0xff
    1078:	ldp	x29, x30, [sp], #48
    107c:	ret

0000000000001080 <_Z41__static_initialization_and_destruction_0ii>:
    1080:	stp	x29, x30, [sp, #-48]!
    1084:	mov	x29, sp
    1088:	stp	x19, x20, [sp, #16]
    108c:	str	w0, [sp, #44]
    1090:	str	w1, [sp, #40]
    1094:	ldr	w0, [sp, #44]
    1098:	cmp	w0, #0x1
    109c:	b.ne	115c <_Z41__static_initialization_and_destruction_0ii+0xdc>  // b.any
    10a0:	ldr	w1, [sp, #40]
    10a4:	mov	w0, #0xffff                	// #65535
    10a8:	cmp	w1, w0
    10ac:	b.ne	115c <_Z41__static_initialization_and_destruction_0ii+0xdc>  // b.any
    10b0:	adrp	x0, 0 <_ZN16NCursesFormFieldD1Ev>
    10b4:	add	x0, x0, #0x0
    10b8:	bl	0 <_ZNSt8ios_base4InitC1Ev>
    10bc:	adrp	x0, 0 <__dso_handle>
    10c0:	add	x2, x0, #0x0
    10c4:	adrp	x0, 0 <_ZN16NCursesFormFieldD1Ev>
    10c8:	add	x1, x0, #0x0
    10cc:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
    10d0:	ldr	x0, [x0]
    10d4:	bl	0 <__cxa_atexit>
    10d8:	adrp	x0, f1c <_nc_xx_fld_ccheck>
    10dc:	ldr	x1, [x0]
    10e0:	adrp	x0, ed0 <_nc_xx_fld_fcheck>
    10e4:	ldr	x0, [x0]
    10e8:	bl	0 <new_fieldtype>
    10ec:	mov	x1, x0
    10f0:	adrp	x0, 0 <_ZN16NCursesFormFieldD1Ev>
    10f4:	ldr	x0, [x0]
    10f8:	str	x1, [x0]
    10fc:	adrp	x0, f1c <_nc_xx_fld_ccheck>
    1100:	ldr	x1, [x0]
    1104:	adrp	x0, ed0 <_nc_xx_fld_fcheck>
    1108:	ldr	x0, [x0]
    110c:	bl	0 <new_fieldtype>
    1110:	mov	x1, x0
    1114:	adrp	x0, 8 <_ZN16NCursesFormFieldD1Ev+0x8>
    1118:	ldr	x0, [x0]
    111c:	str	x1, [x0]
    1120:	mov	x0, #0x4                   	// #4
    1124:	bl	0 <_Znwm>
    1128:	mov	x19, x0
    112c:	mov	x0, x19
    1130:	bl	0 <_ZN16NCursesFormFieldD1Ev>
    1134:	adrp	x0, 10 <_ZN16NCursesFormFieldD1Ev+0x10>
    1138:	ldr	x0, [x0]
    113c:	str	x19, [x0]
    1140:	b	115c <_Z41__static_initialization_and_destruction_0ii+0xdc>
    1144:	mov	x20, x0
    1148:	mov	x1, #0x4                   	// #4
    114c:	mov	x0, x19
    1150:	bl	0 <_ZdlPvm>
    1154:	mov	x0, x20
    1158:	bl	0 <_Unwind_Resume>
    115c:	ldp	x19, x20, [sp, #16]
    1160:	ldp	x29, x30, [sp], #48
    1164:	ret

0000000000001168 <_GLOBAL__sub_I_cursesf.cc>:
    1168:	stp	x29, x30, [sp, #-16]!
    116c:	mov	x29, sp
    1170:	mov	w1, #0xffff                	// #65535
    1174:	mov	w0, #0x1                   	// #1
    1178:	bl	1080 <_Z41__static_initialization_and_destruction_0ii>
    117c:	ldp	x29, x30, [sp], #16
    1180:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKci:

0000000000000000 <_ZN16NCursesExceptionC1EPKci>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKci>
  14:	ldr	x0, [x0]
  18:	add	x1, x0, #0x10
  1c:	ldr	x0, [sp, #24]
  20:	str	x1, [x0]
  24:	ldr	x0, [sp, #24]
  28:	ldr	x1, [sp, #16]
  2c:	str	x1, [x0, #8]
  30:	ldr	x0, [sp, #24]
  34:	ldr	w1, [sp, #12]
  38:	str	w1, [x0, #16]
  3c:	nop
  40:	add	sp, sp, #0x20
  44:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionC2EPK12NCursesPaneli:

0000000000000000 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	x3, [sp, #40]
  18:	ldr	w2, [sp, #28]
  1c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  20:	add	x1, x0, #0x0
  24:	mov	x0, x3
  28:	bl	0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  2c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  30:	ldr	x0, [x0]
  34:	add	x1, x0, #0x10
  38:	ldr	x0, [sp, #40]
  3c:	str	x1, [x0]
  40:	ldr	x0, [sp, #40]
  44:	ldr	x1, [sp, #32]
  48:	str	x1, [x0, #24]
  4c:	nop
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZNK21NCursesPanelException9classnameEv:

0000000000000000 <_ZNK21NCursesPanelException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK21NCursesPanelException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionD2Ev:

0000000000000000 <_ZN21NCursesPanelExceptionD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN21NCursesPanelExceptionD1Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionD0Ev:

0000000000000000 <_ZN21NCursesPanelExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN21NCursesPanelExceptionD0Ev>
  14:	mov	x1, #0x20                  	// #32
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN20NCursesFormExceptionC2Ei:

0000000000000000 <_ZN20NCursesFormExceptionC1Ei>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x3, [sp, #24]
  14:	ldr	w2, [sp, #20]
  18:	adrp	x0, 0 <_ZN20NCursesFormExceptionC1Ei>
  1c:	add	x1, x0, #0x0
  20:	mov	x0, x3
  24:	bl	0 <_ZN20NCursesFormExceptionC1Ei>
  28:	adrp	x0, 0 <_ZN20NCursesFormExceptionC1Ei>
  2c:	ldr	x0, [x0]
  30:	add	x1, x0, #0x10
  34:	ldr	x0, [sp, #24]
  38:	str	x1, [x0]
  3c:	ldr	x0, [sp, #24]
  40:	str	xzr, [x0, #24]
  44:	nop
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNK20NCursesFormException9classnameEv:

0000000000000000 <_ZNK20NCursesFormException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK20NCursesFormException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN20NCursesFormExceptionD2Ev:

0000000000000000 <_ZN20NCursesFormExceptionD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN20NCursesFormExceptionD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN20NCursesFormExceptionD1Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN20NCursesFormExceptionD0Ev:

0000000000000000 <_ZN20NCursesFormExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN20NCursesFormExceptionD0Ev>
  14:	mov	x1, #0x20                  	// #32
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._ZNK13NCursesWindow6heightEv:

0000000000000000 <_ZNK13NCursesWindow6heightEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow6heightEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow5widthEv:

0000000000000000 <_ZNK13NCursesWindow5widthEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow5widthEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxxEv:

0000000000000000 <_ZNK13NCursesWindow4maxxEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxxEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #6]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxxEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxxEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxxEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #6]
  54:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxyEv:

0000000000000000 <_ZNK13NCursesWindow4maxyEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxyEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #4]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxyEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxyEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxyEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #4]
  54:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZN13NCursesWindow8CUR_bkgdEj:

0000000000000000 <_ZN13NCursesWindow8CUR_bkgdEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <wbkgd>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow6keypadEb:

0000000000000000 <_ZN13NCursesWindow6keypadEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <keypad>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow4metaEb:

0000000000000000 <_ZN13NCursesWindow4metaEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <meta>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK12NCursesPanel7OnErrorEi:

0000000000000000 <_ZNK12NCursesPanel7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmn	w0, #0x1
  1c:	b.ne	44 <_ZNK12NCursesPanel7OnErrorEi+0x44>  // b.any
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w2, [sp, #36]
  30:	ldr	x1, [sp, #40]
  34:	mov	x0, x19
  38:	bl	0 <_ZNK12NCursesPanel7OnErrorEi>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK12NCursesPanel7OnErrorEi>
  44:	nop
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN12NCursesPanel4hideEv:

0000000000000000 <_ZN12NCursesPanel4hideEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <hide_panel>
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN12NCursesPanel4hideEv>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN12NCursesPanel4showEv:

0000000000000000 <_ZN12NCursesPanel4showEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <show_panel>
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN12NCursesPanel4showEv>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	str	w2, [sp, #16]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x0, [x0, #48]
  1c:	ldr	w2, [sp, #16]
  20:	ldr	w1, [sp, #20]
  24:	bl	0 <move_panel>
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN12NCursesPanel5mvwinEii>
  34:	mov	w0, #0x0                   	// #0
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNK16NCursesFormField7OnErrorEi:

0000000000000000 <_ZNK16NCursesFormField7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmp	w0, #0x0
  1c:	b.eq	40 <_ZNK16NCursesFormField7OnErrorEi+0x40>  // b.none
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w1, [sp, #36]
  30:	mov	x0, x19
  34:	bl	0 <_ZNK16NCursesFormField7OnErrorEi>
  38:	mov	x0, x19
  3c:	bl	0 <_ZNK16NCursesFormField7OnErrorEi>
  40:	nop
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZN16NCursesFormField14set_foregroundEj:

0000000000000000 <_ZN16NCursesFormField14set_foregroundEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <set_field_fore>
  20:	mov	w1, w0
  24:	ldr	x0, [sp, #24]
  28:	bl	0 <_ZN16NCursesFormField14set_foregroundEj>
  2c:	nop
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN16NCursesFormField14set_backgroundEj:

0000000000000000 <_ZN16NCursesFormField14set_backgroundEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <set_field_back>
  20:	mov	w1, w0
  24:	ldr	x0, [sp, #24]
  28:	bl	0 <_ZN16NCursesFormField14set_backgroundEj>
  2c:	nop
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN16NCursesFormField17set_pad_characterEi:

0000000000000000 <_ZN16NCursesFormField17set_pad_characterEi>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <set_field_pad>
  20:	mov	w1, w0
  24:	ldr	x0, [sp, #24]
  28:	bl	0 <_ZN16NCursesFormField17set_pad_characterEi>
  2c:	nop
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNK16NCursesFormField7optionsEv:

0000000000000000 <_ZNK16NCursesFormField7optionsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <field_opts>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK16NCursesFormField9fieldtypeEv:

0000000000000000 <_ZNK16NCursesFormField9fieldtypeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #16]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN11NCursesForm7getHookEPK8formnode:

0000000000000000 <_ZN11NCursesForm7getHookEPK8formnode>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <form_userptr>
  14:	str	x0, [sp, #40]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #8]
  20:	ldp	x29, x30, [sp], #48
  24:	ret

Disassembly of section .text._ZNK11NCursesForm7OnErrorEi:

0000000000000000 <_ZNK11NCursesForm7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmp	w0, #0x0
  1c:	b.eq	40 <_ZNK11NCursesForm7OnErrorEi+0x40>  // b.none
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w1, [sp, #36]
  30:	mov	x0, x19
  34:	bl	0 <_ZNK11NCursesForm7OnErrorEi>
  38:	mov	x0, x19
  3c:	bl	0 <_ZNK11NCursesForm7OnErrorEi>
  40:	nop
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZNK11NCursesForm13current_fieldEv:

0000000000000000 <_ZNK11NCursesForm13current_fieldEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	ldr	x19, [x0, #80]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #56]
  20:	bl	0 <current_field>
  24:	bl	0 <field_index>
  28:	sxtw	x0, w0
  2c:	lsl	x0, x0, #3
  30:	add	x0, x19, x0
  34:	ldr	x0, [x0]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN11NCursesForm6unpostEv:

0000000000000000 <_ZN11NCursesForm6unpostEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #56]
  14:	bl	0 <unpost_form>
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN11NCursesForm6unpostEv>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN11NCursesForm4postEb:

0000000000000000 <_ZN11NCursesForm4postEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldrb	w0, [sp, #23]
  14:	cmp	w0, #0x0
  18:	b.eq	2c <_ZN11NCursesForm4postEb+0x2c>  // b.none
  1c:	ldr	x0, [sp, #24]
  20:	ldr	x0, [x0, #56]
  24:	bl	0 <post_form>
  28:	b	38 <_ZN11NCursesForm4postEb+0x38>
  2c:	ldr	x0, [sp, #24]
  30:	ldr	x0, [x0, #56]
  34:	bl	0 <unpost_form>
  38:	mov	w1, w0
  3c:	ldr	x0, [sp, #24]
  40:	bl	0 <_ZN11NCursesForm4postEb>
  44:	nop
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN11NCursesForm5frameEPKcS1_:

0000000000000000 <_ZN11NCursesForm5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldrb	w0, [x0, #73]
  1c:	cmp	w0, #0x0
  20:	b.eq	38 <_ZN11NCursesForm5frameEPKcS1_+0x38>  // b.none
  24:	ldr	x0, [sp, #40]
  28:	ldr	x2, [sp, #24]
  2c:	ldr	x1, [sp, #32]
  30:	bl	0 <_ZN12NCursesPanel5frameEPKcS1_>
  34:	b	44 <_ZN11NCursesForm5frameEPKcS1_+0x44>
  38:	mov	w1, #0xffffffff            	// #-1
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_ZN11NCursesForm5frameEPKcS1_>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZN11NCursesForm9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesForm9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldrb	w0, [x0, #73]
  1c:	cmp	w0, #0x0
  20:	b.eq	38 <_ZN11NCursesForm9boldframeEPKcS1_+0x38>  // b.none
  24:	ldr	x0, [sp, #40]
  28:	ldr	x2, [sp, #24]
  2c:	ldr	x1, [sp, #32]
  30:	bl	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  34:	b	44 <_ZN11NCursesForm9boldframeEPKcS1_+0x44>
  38:	mov	w1, #0xffffffff            	// #-1
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_ZN11NCursesForm9boldframeEPKcS1_>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZN11NCursesForm5labelEPKcS1_:

0000000000000000 <_ZN11NCursesForm5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldrb	w0, [x0, #73]
  1c:	cmp	w0, #0x0
  20:	b.eq	38 <_ZN11NCursesForm5labelEPKcS1_+0x38>  // b.none
  24:	ldr	x0, [sp, #40]
  28:	ldr	x2, [sp, #24]
  2c:	ldr	x1, [sp, #32]
  30:	bl	0 <_ZN12NCursesPanel5labelEPKcS1_>
  34:	b	44 <_ZN11NCursesForm5labelEPKcS1_+0x44>
  38:	mov	w1, #0xffffffff            	// #-1
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_ZN11NCursesForm5labelEPKcS1_>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZNK11NCursesForm5scaleERiS0_:

0000000000000000 <_ZNK11NCursesForm5scaleERiS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x2, [sp, #24]
  20:	ldr	x1, [sp, #32]
  24:	bl	0 <scale_form>
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #40]
  30:	bl	0 <_ZNK11NCursesForm5scaleERiS0_>
  34:	nop
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZNK11NCursesForm5countEv:

0000000000000000 <_ZNK11NCursesForm5countEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #56]
  14:	bl	0 <field_count>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN11NCursesForm10options_onEi:

0000000000000000 <_ZN11NCursesForm10options_onEi>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #56]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <form_opts_on>
  20:	mov	w1, w0
  24:	ldr	x0, [sp, #24]
  28:	bl	0 <_ZN11NCursesForm10options_onEi>
  2c:	nop
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNK11NCursesFormixEi:

0000000000000000 <_ZNK11NCursesFormixEi>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	w0, [sp, #20]
  14:	cmp	w0, #0x0
  18:	b.lt	38 <_ZNK11NCursesFormixEi+0x38>  // b.tstop
  1c:	ldr	x0, [sp, #24]
  20:	ldr	x0, [x0, #56]
  24:	bl	0 <field_count>
  28:	mov	w1, w0
  2c:	ldr	w0, [sp, #20]
  30:	cmp	w0, w1
  34:	b.lt	40 <_ZNK11NCursesFormixEi+0x40>  // b.tstop
  38:	mov	w0, #0x1                   	// #1
  3c:	b	44 <_ZNK11NCursesFormixEi+0x44>
  40:	mov	w0, #0x0                   	// #0
  44:	cmp	w0, #0x0
  48:	b.eq	58 <_ZNK11NCursesFormixEi+0x58>  // b.none
  4c:	mov	w1, #0xfffffffe            	// #-2
  50:	ldr	x0, [sp, #24]
  54:	bl	0 <_ZNK11NCursesFormixEi>
  58:	ldr	x0, [sp, #24]
  5c:	ldr	x1, [x0, #80]
  60:	ldrsw	x0, [sp, #20]
  64:	lsl	x0, x0, #3
  68:	add	x0, x1, x0
  6c:	ldr	x0, [x0]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZN18NCursesApplication14getApplicationEv:

0000000000000000 <_ZN18NCursesApplication14getApplicationEv>:
   0:	adrp	x0, 0 <_ZN18NCursesApplication6theAppE>
   4:	ldr	x0, [x0]
   8:	ldr	x0, [x0]
   c:	ret

Disassembly of section .text._ZN8UDF_InitC2Ev:

0000000000000000 <_ZN8UDF_InitC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	str	wzr, [x0]
  14:	adrp	x0, 0 <_ZN8UDF_InitC1Ev>
  18:	ldr	x0, [x0]
  1c:	ldr	x4, [x0]
  20:	mov	x3, #0x0                   	// #0
  24:	mov	x2, #0x0                   	// #0
  28:	adrp	x0, f68 <_nc_xx_fld_makearg>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x4
  34:	bl	0 <set_fieldtype_arg>
  38:	mov	w1, w0
  3c:	ldr	x0, [sp, #24]
  40:	str	w1, [x0]
  44:	ldr	x0, [sp, #24]
  48:	ldr	w0, [x0]
  4c:	cmp	w0, #0x0
  50:	b.ne	84 <_ZN8UDF_InitC1Ev+0x84>  // b.any
  54:	adrp	x0, 8 <_ZN8UDF_InitC1Ev+0x8>
  58:	ldr	x0, [x0]
  5c:	ldr	x4, [x0]
  60:	mov	x3, #0x0                   	// #0
  64:	mov	x2, #0x0                   	// #0
  68:	adrp	x0, f68 <_nc_xx_fld_makearg>
  6c:	ldr	x1, [x0]
  70:	mov	x0, x4
  74:	bl	0 <set_fieldtype_arg>
  78:	mov	w1, w0
  7c:	ldr	x0, [sp, #24]
  80:	str	w1, [x0]
  84:	ldr	x0, [sp, #24]
  88:	ldr	w0, [x0]
  8c:	cmp	w0, #0x0
  90:	b.ne	c4 <_ZN8UDF_InitC1Ev+0xc4>  // b.any
  94:	adrp	x0, 8 <_ZN8UDF_InitC1Ev+0x8>
  98:	ldr	x0, [x0]
  9c:	ldr	x3, [x0]
  a0:	adrp	x0, 1034 <_nc_xx_prev_choice>
  a4:	ldr	x2, [x0]
  a8:	adrp	x0, fe8 <_nc_xx_next_choice>
  ac:	ldr	x1, [x0]
  b0:	mov	x0, x3
  b4:	bl	0 <set_fieldtype_choice>
  b8:	mov	w1, w0
  bc:	ldr	x0, [sp, #24]
  c0:	str	w1, [x0]
  c4:	nop
  c8:	ldp	x29, x30, [sp], #32
  cc:	ret

cursesm.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN15NCursesMenuItemD1Ev>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	adrp	x0, 0 <_ZN15NCursesMenuItemD1Ev>
      10:	ldr	x0, [x0]
      14:	add	x1, x0, #0x10
      18:	ldr	x0, [sp, #24]
      1c:	str	x1, [x0]
      20:	ldr	x0, [sp, #24]
      24:	ldr	x0, [x0, #8]
      28:	cmp	x0, #0x0
      2c:	b.eq	48 <_ZN15NCursesMenuItemD1Ev+0x48>  // b.none
      30:	ldr	x0, [sp, #24]
      34:	ldr	x0, [x0, #8]
      38:	bl	0 <free_item>
      3c:	mov	w1, w0
      40:	ldr	x0, [sp, #24]
      44:	bl	0 <_ZN15NCursesMenuItemD1Ev>
      48:	nop
      4c:	ldp	x29, x30, [sp], #32
      50:	ret

0000000000000054 <_ZN15NCursesMenuItemD0Ev>:
      54:	stp	x29, x30, [sp, #-32]!
      58:	mov	x29, sp
      5c:	str	x0, [sp, #24]
      60:	ldr	x0, [sp, #24]
      64:	bl	0 <_ZN15NCursesMenuItemD1Ev>
      68:	mov	x1, #0x10                  	// #16
      6c:	ldr	x0, [sp, #24]
      70:	bl	0 <_ZdlPvm>
      74:	ldp	x29, x30, [sp], #32
      78:	ret

000000000000007c <_ZN15NCursesMenuItem6actionEv>:
      7c:	sub	sp, sp, #0x10
      80:	str	x0, [sp, #8]
      84:	mov	w0, #0x0                   	// #0
      88:	add	sp, sp, #0x10
      8c:	ret

0000000000000090 <_ZN23NCursesMenuCallbackItemD1Ev>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	mov	x29, sp
      98:	str	x0, [sp, #24]
      9c:	adrp	x0, 0 <_ZN15NCursesMenuItemD1Ev>
      a0:	ldr	x0, [x0]
      a4:	add	x1, x0, #0x10
      a8:	ldr	x0, [sp, #24]
      ac:	str	x1, [x0]
      b0:	ldr	x0, [sp, #24]
      b4:	bl	0 <_ZN15NCursesMenuItemD1Ev>
      b8:	nop
      bc:	ldp	x29, x30, [sp], #32
      c0:	ret

00000000000000c4 <_ZN23NCursesMenuCallbackItemD0Ev>:
      c4:	stp	x29, x30, [sp, #-32]!
      c8:	mov	x29, sp
      cc:	str	x0, [sp, #24]
      d0:	ldr	x0, [sp, #24]
      d4:	bl	90 <_ZN23NCursesMenuCallbackItemD1Ev>
      d8:	mov	x1, #0x18                  	// #24
      dc:	ldr	x0, [sp, #24]
      e0:	bl	0 <_ZdlPvm>
      e4:	ldp	x29, x30, [sp], #32
      e8:	ret

00000000000000ec <_ZN23NCursesMenuCallbackItem6actionEv>:
      ec:	stp	x29, x30, [sp, #-32]!
      f0:	mov	x29, sp
      f4:	str	x0, [sp, #24]
      f8:	ldr	x0, [sp, #24]
      fc:	ldr	x0, [x0, #16]
     100:	cmp	x0, #0x0
     104:	b.eq	120 <_ZN23NCursesMenuCallbackItem6actionEv+0x34>  // b.none
     108:	ldr	x0, [sp, #24]
     10c:	ldr	x1, [x0, #16]
     110:	ldr	x0, [sp, #24]
     114:	blr	x1
     118:	and	w0, w0, #0xff
     11c:	b	124 <_ZN23NCursesMenuCallbackItem6actionEv+0x38>
     120:	mov	w0, #0x0                   	// #0
     124:	ldp	x29, x30, [sp], #32
     128:	ret

000000000000012c <_nc_xx_mnu_init>:
     12c:	stp	x29, x30, [sp, #-32]!
     130:	mov	x29, sp
     134:	str	x0, [sp, #24]
     138:	ldr	x0, [sp, #24]
     13c:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     140:	ldr	x1, [x0]
     144:	add	x1, x1, #0x68
     148:	ldr	x1, [x1]
     14c:	blr	x1
     150:	nop
     154:	ldp	x29, x30, [sp], #32
     158:	ret

000000000000015c <_nc_xx_mnu_term>:
     15c:	stp	x29, x30, [sp, #-32]!
     160:	mov	x29, sp
     164:	str	x0, [sp, #24]
     168:	ldr	x0, [sp, #24]
     16c:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     170:	ldr	x1, [x0]
     174:	add	x1, x1, #0x70
     178:	ldr	x1, [x1]
     17c:	blr	x1
     180:	nop
     184:	ldp	x29, x30, [sp], #32
     188:	ret

000000000000018c <_nc_xx_itm_init>:
     18c:	stp	x29, x30, [sp, #-64]!
     190:	mov	x29, sp
     194:	str	x19, [sp, #16]
     198:	str	x0, [sp, #40]
     19c:	ldr	x0, [sp, #40]
     1a0:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     1a4:	str	x0, [sp, #56]
     1a8:	ldr	x0, [sp, #56]
     1ac:	ldr	x0, [x0]
     1b0:	add	x0, x0, #0x78
     1b4:	ldr	x19, [x0]
     1b8:	ldr	x0, [sp, #56]
     1bc:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     1c0:	mov	x1, x0
     1c4:	ldr	x0, [sp, #56]
     1c8:	blr	x19
     1cc:	nop
     1d0:	ldr	x19, [sp, #16]
     1d4:	ldp	x29, x30, [sp], #64
     1d8:	ret

00000000000001dc <_nc_xx_itm_term>:
     1dc:	stp	x29, x30, [sp, #-64]!
     1e0:	mov	x29, sp
     1e4:	str	x19, [sp, #16]
     1e8:	str	x0, [sp, #40]
     1ec:	ldr	x0, [sp, #40]
     1f0:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     1f4:	str	x0, [sp, #56]
     1f8:	ldr	x0, [sp, #56]
     1fc:	ldr	x0, [x0]
     200:	add	x0, x0, #0x80
     204:	ldr	x19, [x0]
     208:	ldr	x0, [sp, #56]
     20c:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     210:	mov	x1, x0
     214:	ldr	x0, [sp, #56]
     218:	blr	x19
     21c:	nop
     220:	ldr	x19, [sp, #16]
     224:	ldp	x29, x30, [sp], #64
     228:	ret

000000000000022c <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>:
     22c:	stp	x29, x30, [sp, #-48]!
     230:	mov	x29, sp
     234:	str	x0, [sp, #24]
     238:	str	x1, [sp, #16]
     23c:	str	wzr, [sp, #44]
     240:	str	wzr, [sp, #40]
     244:	ldrsw	x0, [sp, #40]
     248:	lsl	x0, x0, #3
     24c:	ldr	x1, [sp, #16]
     250:	add	x0, x1, x0
     254:	ldr	x0, [x0]
     258:	ldr	x0, [x0, #8]
     25c:	cmp	x0, #0x0
     260:	b.eq	280 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x54>  // b.none
     264:	ldr	w0, [sp, #44]
     268:	add	w0, w0, #0x1
     26c:	str	w0, [sp, #44]
     270:	ldr	w0, [sp, #40]
     274:	add	w0, w0, #0x1
     278:	str	w0, [sp, #40]
     27c:	b	244 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x18>
     280:	ldr	w0, [sp, #44]
     284:	add	w0, w0, #0x1
     288:	sxtw	x0, w0
     28c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
     290:	cmp	x0, x1
     294:	b.hi	2ac <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x80>  // b.pmore
     298:	lsl	x0, x0, #3
     29c:	bl	0 <_Znam>
     2a0:	str	x0, [sp, #32]
     2a4:	str	wzr, [sp, #40]
     2a8:	b	2b0 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x84>
     2ac:	bl	0 <__cxa_throw_bad_array_new_length>
     2b0:	ldrsw	x0, [sp, #40]
     2b4:	lsl	x0, x0, #3
     2b8:	ldr	x1, [sp, #16]
     2bc:	add	x0, x1, x0
     2c0:	ldr	x0, [x0]
     2c4:	ldr	x0, [x0, #8]
     2c8:	cmp	x0, #0x0
     2cc:	b.eq	30c <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0xe0>  // b.none
     2d0:	ldrsw	x0, [sp, #40]
     2d4:	lsl	x0, x0, #3
     2d8:	ldr	x1, [sp, #16]
     2dc:	add	x0, x1, x0
     2e0:	ldr	x1, [x0]
     2e4:	ldrsw	x0, [sp, #40]
     2e8:	lsl	x0, x0, #3
     2ec:	ldr	x2, [sp, #32]
     2f0:	add	x0, x2, x0
     2f4:	ldr	x1, [x1, #8]
     2f8:	str	x1, [x0]
     2fc:	ldr	w0, [sp, #40]
     300:	add	w0, w0, #0x1
     304:	str	w0, [sp, #40]
     308:	b	2b0 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x84>
     30c:	ldrsw	x0, [sp, #40]
     310:	lsl	x0, x0, #3
     314:	ldr	x1, [sp, #32]
     318:	add	x0, x1, x0
     31c:	str	xzr, [x0]
     320:	ldr	x0, [sp, #24]
     324:	ldr	x1, [sp, #16]
     328:	str	x1, [x0, #80]
     32c:	ldr	x0, [sp, #24]
     330:	ldr	x0, [x0, #56]
     334:	cmp	x0, #0x0
     338:	b.eq	354 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x128>  // b.none
     33c:	ldr	x0, [sp, #24]
     340:	ldr	x0, [x0, #56]
     344:	bl	0 <menu_items>
     348:	cmp	x0, #0x0
     34c:	b.eq	354 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x128>  // b.none
     350:	bl	0 <_ZdaPv>
     354:	ldr	x0, [sp, #32]
     358:	ldp	x29, x30, [sp], #48
     35c:	ret

0000000000000360 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb>:
     360:	stp	x29, x30, [sp, #-80]!
     364:	mov	x29, sp
     368:	stp	x19, x20, [sp, #16]
     36c:	str	x0, [sp, #56]
     370:	str	x1, [sp, #48]
     374:	strb	w2, [sp, #47]
     378:	strb	w3, [sp, #46]
     37c:	ldr	x0, [sp, #56]
     380:	mov	w1, #0x1                   	// #1
     384:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     388:	ldr	x0, [sp, #56]
     38c:	mov	w1, #0x1                   	// #1
     390:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     394:	ldr	x0, [sp, #56]
     398:	ldrb	w1, [sp, #47]
     39c:	strb	w1, [x0, #73]
     3a0:	ldr	x0, [sp, #56]
     3a4:	ldrb	w1, [sp, #46]
     3a8:	strb	w1, [x0, #74]
     3ac:	ldr	x0, [sp, #56]
     3b0:	str	xzr, [x0, #56]
     3b4:	ldr	x1, [sp, #48]
     3b8:	ldr	x0, [sp, #56]
     3bc:	bl	22c <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>
     3c0:	bl	0 <new_menu>
     3c4:	mov	x1, x0
     3c8:	ldr	x0, [sp, #56]
     3cc:	str	x1, [x0, #56]
     3d0:	ldr	x0, [sp, #56]
     3d4:	ldr	x0, [x0, #56]
     3d8:	cmp	x0, #0x0
     3dc:	b.ne	3ec <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x8c>  // b.any
     3e0:	mov	w1, #0xffffffff            	// #-1
     3e4:	ldr	x0, [sp, #56]
     3e8:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     3ec:	mov	x0, #0x18                  	// #24
     3f0:	bl	0 <_Znwm>
     3f4:	str	x0, [sp, #72]
     3f8:	ldr	x0, [sp, #72]
     3fc:	str	xzr, [x0]
     400:	ldr	x0, [sp, #72]
     404:	ldr	x1, [sp, #56]
     408:	str	x1, [x0, #8]
     40c:	ldr	x0, [sp, #56]
     410:	ldr	x1, [x0, #56]
     414:	ldr	x0, [sp, #72]
     418:	str	x1, [x0, #16]
     41c:	ldr	x0, [sp, #56]
     420:	ldr	x0, [x0, #56]
     424:	ldr	x1, [sp, #72]
     428:	bl	0 <set_menu_userptr>
     42c:	ldr	x0, [sp, #56]
     430:	ldr	x2, [x0, #56]
     434:	adrp	x0, 12c <_nc_xx_mnu_init>
     438:	ldr	x1, [x0]
     43c:	mov	x0, x2
     440:	bl	0 <set_menu_init>
     444:	ldr	x0, [sp, #56]
     448:	ldr	x2, [x0, #56]
     44c:	adrp	x0, 15c <_nc_xx_mnu_term>
     450:	ldr	x1, [x0]
     454:	mov	x0, x2
     458:	bl	0 <set_menu_term>
     45c:	ldr	x0, [sp, #56]
     460:	ldr	x2, [x0, #56]
     464:	adrp	x0, 18c <_nc_xx_itm_init>
     468:	ldr	x1, [x0]
     46c:	mov	x0, x2
     470:	bl	0 <set_item_init>
     474:	ldr	x0, [sp, #56]
     478:	ldr	x2, [x0, #56]
     47c:	adrp	x0, 1dc <_nc_xx_itm_term>
     480:	ldr	x1, [x0]
     484:	mov	x0, x2
     488:	bl	0 <set_item_term>
     48c:	add	x1, sp, #0x40
     490:	add	x0, sp, #0x44
     494:	mov	x2, x1
     498:	mov	x1, x0
     49c:	ldr	x0, [sp, #56]
     4a0:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     4a4:	ldr	x0, [sp, #56]
     4a8:	ldr	x2, [x0, #56]
     4ac:	ldr	x0, [sp, #56]
     4b0:	ldr	x0, [x0, #8]
     4b4:	mov	x1, x0
     4b8:	mov	x0, x2
     4bc:	bl	0 <set_menu_win>
     4c0:	ldrb	w0, [sp, #47]
     4c4:	cmp	w0, #0x0
     4c8:	b.eq	58c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x22c>  // b.none
     4cc:	ldr	x0, [sp, #56]
     4d0:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     4d4:	sub	w1, w0, #0x1
     4d8:	ldr	w0, [sp, #68]
     4dc:	cmp	w1, w0
     4e0:	b.le	4fc <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x19c>
     4e4:	ldr	x0, [sp, #56]
     4e8:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     4ec:	sub	w1, w0, #0x1
     4f0:	ldr	w0, [sp, #64]
     4f4:	cmp	w1, w0
     4f8:	b.gt	504 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1a4>
     4fc:	mov	w0, #0x1                   	// #1
     500:	b	508 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1a8>
     504:	mov	w0, #0x0                   	// #0
     508:	cmp	w0, #0x0
     50c:	b.eq	51c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1bc>  // b.none
     510:	mov	w1, #0xfffffffa            	// #-6
     514:	ldr	x0, [sp, #56]
     518:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     51c:	mov	x0, #0x30                  	// #48
     520:	bl	0 <_Znwm>
     524:	mov	x19, x0
     528:	ldr	x0, [sp, #56]
     52c:	ldr	w1, [sp, #68]
     530:	ldr	w2, [sp, #64]
     534:	mov	w6, #0x72                  	// #114
     538:	mov	w5, #0x1                   	// #1
     53c:	mov	w4, #0x1                   	// #1
     540:	mov	w3, w2
     544:	mov	w2, w1
     548:	mov	x1, x0
     54c:	mov	x0, x19
     550:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
     554:	ldr	x0, [sp, #56]
     558:	str	x19, [x0, #64]
     55c:	ldr	x0, [sp, #56]
     560:	ldr	x2, [x0, #56]
     564:	ldr	x0, [sp, #56]
     568:	ldr	x0, [x0, #64]
     56c:	ldr	x0, [x0, #8]
     570:	mov	x1, x0
     574:	mov	x0, x2
     578:	bl	0 <set_menu_sub>
     57c:	ldr	x0, [sp, #56]
     580:	mov	w1, #0x1                   	// #1
     584:	strb	w1, [x0, #72]
     588:	b	59c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x23c>
     58c:	ldr	x0, [sp, #56]
     590:	str	xzr, [x0, #64]
     594:	ldr	x0, [sp, #56]
     598:	strb	wzr, [x0, #72]
     59c:	ldr	x0, [sp, #56]
     5a0:	ldr	x0, [x0]
     5a4:	add	x0, x0, #0x60
     5a8:	ldr	x1, [x0]
     5ac:	ldr	x0, [sp, #56]
     5b0:	blr	x1
     5b4:	b	5d0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x270>
     5b8:	mov	x20, x0
     5bc:	mov	x1, #0x30                  	// #48
     5c0:	mov	x0, x19
     5c4:	bl	0 <_ZdlPvm>
     5c8:	mov	x0, x20
     5cc:	bl	0 <_Unwind_Resume>
     5d0:	ldp	x19, x20, [sp, #16]
     5d4:	ldp	x29, x30, [sp], #80
     5d8:	ret

00000000000005dc <_ZN11NCursesMenu20setDefaultAttributesEv>:
     5dc:	stp	x29, x30, [sp, #-64]!
     5e0:	mov	x29, sp
     5e4:	str	x19, [sp, #16]
     5e8:	str	x0, [sp, #40]
     5ec:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     5f0:	str	x0, [sp, #56]
     5f4:	ldr	x0, [sp, #56]
     5f8:	cmp	x0, #0x0
     5fc:	b.eq	684 <_ZN11NCursesMenu20setDefaultAttributesEv+0xa8>  // b.none
     600:	ldr	x0, [sp, #40]
     604:	ldr	x19, [x0, #56]
     608:	ldr	x0, [sp, #56]
     60c:	ldr	x0, [x0]
     610:	add	x0, x0, #0x48
     614:	ldr	x1, [x0]
     618:	ldr	x0, [sp, #56]
     61c:	blr	x1
     620:	mov	w1, w0
     624:	mov	x0, x19
     628:	bl	0 <set_menu_fore>
     62c:	ldr	x0, [sp, #40]
     630:	ldr	x19, [x0, #56]
     634:	ldr	x0, [sp, #56]
     638:	ldr	x0, [x0]
     63c:	add	x0, x0, #0x50
     640:	ldr	x1, [x0]
     644:	ldr	x0, [sp, #56]
     648:	blr	x1
     64c:	mov	w1, w0
     650:	mov	x0, x19
     654:	bl	0 <set_menu_back>
     658:	ldr	x0, [sp, #40]
     65c:	ldr	x19, [x0, #56]
     660:	ldr	x0, [sp, #56]
     664:	ldr	x0, [x0]
     668:	add	x0, x0, #0x58
     66c:	ldr	x1, [x0]
     670:	ldr	x0, [sp, #56]
     674:	blr	x1
     678:	mov	w1, w0
     67c:	mov	x0, x19
     680:	bl	0 <set_menu_grey>
     684:	nop
     688:	ldr	x19, [sp, #16]
     68c:	ldp	x29, x30, [sp], #64
     690:	ret

0000000000000694 <_ZN11NCursesMenuD1Ev>:
     694:	stp	x29, x30, [sp, #-64]!
     698:	mov	x29, sp
     69c:	str	x0, [sp, #24]
     6a0:	adrp	x0, 0 <_ZN15NCursesMenuItemD1Ev>
     6a4:	ldr	x0, [x0]
     6a8:	add	x1, x0, #0x10
     6ac:	ldr	x0, [sp, #24]
     6b0:	str	x1, [x0]
     6b4:	ldr	x0, [sp, #24]
     6b8:	ldr	x0, [x0, #56]
     6bc:	bl	0 <menu_userptr>
     6c0:	str	x0, [sp, #48]
     6c4:	ldr	x0, [sp, #48]
     6c8:	cmp	x0, #0x0
     6cc:	b.eq	6d8 <_ZN11NCursesMenuD1Ev+0x44>  // b.none
     6d0:	mov	x1, #0x18                  	// #24
     6d4:	bl	0 <_ZdlPvm>
     6d8:	ldr	x0, [sp, #24]
     6dc:	ldrb	w0, [x0, #72]
     6e0:	cmp	w0, #0x0
     6e4:	b.eq	718 <_ZN11NCursesMenuD1Ev+0x84>  // b.none
     6e8:	ldr	x0, [sp, #24]
     6ec:	ldr	x0, [x0, #56]
     6f0:	mov	x1, #0x0                   	// #0
     6f4:	bl	0 <set_menu_sub>
     6f8:	ldr	x0, [sp, #24]
     6fc:	ldr	x0, [x0, #64]
     700:	cmp	x0, #0x0
     704:	b.eq	718 <_ZN11NCursesMenuD1Ev+0x84>  // b.none
     708:	ldr	x1, [x0]
     70c:	add	x1, x1, #0x10
     710:	ldr	x1, [x1]
     714:	blr	x1
     718:	ldr	x0, [sp, #24]
     71c:	ldr	x0, [x0, #56]
     720:	cmp	x0, #0x0
     724:	b.eq	80c <_ZN11NCursesMenuD1Ev+0x178>  // b.none
     728:	ldr	x0, [sp, #24]
     72c:	ldr	x0, [x0, #56]
     730:	bl	0 <menu_items>
     734:	str	x0, [sp, #40]
     738:	ldr	x0, [sp, #24]
     73c:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     740:	str	w0, [sp, #36]
     744:	ldr	x0, [sp, #24]
     748:	ldr	x0, [x0, #56]
     74c:	mov	x1, #0x0                   	// #0
     750:	bl	0 <set_menu_items>
     754:	mov	w1, w0
     758:	ldr	x0, [sp, #24]
     75c:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     760:	ldr	x0, [sp, #24]
     764:	ldrb	w0, [x0, #74]
     768:	cmp	w0, #0x0
     76c:	b.eq	7ec <_ZN11NCursesMenuD1Ev+0x158>  // b.none
     770:	ldr	w0, [sp, #36]
     774:	cmp	w0, #0x0
     778:	b.le	7d0 <_ZN11NCursesMenuD1Ev+0x13c>
     77c:	str	wzr, [sp, #60]
     780:	ldr	w1, [sp, #60]
     784:	ldr	w0, [sp, #36]
     788:	cmp	w1, w0
     78c:	b.gt	7d0 <_ZN11NCursesMenuD1Ev+0x13c>
     790:	ldr	x0, [sp, #24]
     794:	ldr	x1, [x0, #80]
     798:	ldrsw	x0, [sp, #60]
     79c:	lsl	x0, x0, #3
     7a0:	add	x0, x1, x0
     7a4:	ldr	x0, [x0]
     7a8:	cmp	x0, #0x0
     7ac:	b.eq	7c0 <_ZN11NCursesMenuD1Ev+0x12c>  // b.none
     7b0:	ldr	x1, [x0]
     7b4:	add	x1, x1, #0x8
     7b8:	ldr	x1, [x1]
     7bc:	blr	x1
     7c0:	ldr	w0, [sp, #60]
     7c4:	add	w0, w0, #0x1
     7c8:	str	w0, [sp, #60]
     7cc:	b	780 <_ZN11NCursesMenuD1Ev+0xec>
     7d0:	ldr	x0, [sp, #24]
     7d4:	ldr	x0, [x0, #80]
     7d8:	cmp	x0, #0x0
     7dc:	b.eq	7ec <_ZN11NCursesMenuD1Ev+0x158>  // b.none
     7e0:	ldr	x0, [sp, #24]
     7e4:	ldr	x0, [x0, #80]
     7e8:	bl	0 <_ZdaPv>
     7ec:	ldr	x0, [sp, #24]
     7f0:	ldr	x0, [x0, #56]
     7f4:	bl	0 <free_menu>
     7f8:	ldr	x0, [sp, #40]
     7fc:	cmp	x0, #0x0
     800:	b.eq	80c <_ZN11NCursesMenuD1Ev+0x178>  // b.none
     804:	ldr	x0, [sp, #40]
     808:	bl	0 <_ZdaPv>
     80c:	ldr	x0, [sp, #24]
     810:	bl	0 <_ZN12NCursesPanelD2Ev>
     814:	nop
     818:	ldp	x29, x30, [sp], #64
     81c:	ret

0000000000000820 <_ZN11NCursesMenuD0Ev>:
     820:	stp	x29, x30, [sp, #-32]!
     824:	mov	x29, sp
     828:	str	x0, [sp, #24]
     82c:	ldr	x0, [sp, #24]
     830:	bl	694 <_ZN11NCursesMenuD1Ev>
     834:	mov	x1, #0x58                  	// #88
     838:	ldr	x0, [sp, #24]
     83c:	bl	0 <_ZdlPvm>
     840:	ldp	x29, x30, [sp], #32
     844:	ret

0000000000000848 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow>:
     848:	stp	x29, x30, [sp, #-32]!
     84c:	mov	x29, sp
     850:	str	x0, [sp, #24]
     854:	str	x1, [sp, #16]
     858:	ldr	x0, [sp, #24]
     85c:	ldr	x1, [sp, #16]
     860:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
     864:	and	w0, w0, #0xff
     868:	eor	w0, w0, #0x1
     86c:	and	w0, w0, #0xff
     870:	cmp	w0, #0x0
     874:	b.eq	888 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x40>  // b.none
     878:	mov	w1, #0xffffffff            	// #-1
     87c:	ldr	x0, [sp, #24]
     880:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     884:	b	8e4 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x9c>
     888:	ldr	x0, [sp, #24]
     88c:	ldrb	w0, [x0, #72]
     890:	cmp	w0, #0x0
     894:	b.eq	8b8 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x70>  // b.none
     898:	ldr	x0, [sp, #24]
     89c:	ldr	x0, [x0, #64]
     8a0:	cmp	x0, #0x0
     8a4:	b.eq	8b8 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x70>  // b.none
     8a8:	ldr	x1, [x0]
     8ac:	add	x1, x1, #0x10
     8b0:	ldr	x1, [x1]
     8b4:	blr	x1
     8b8:	ldr	x0, [sp, #24]
     8bc:	ldr	x1, [sp, #16]
     8c0:	str	x1, [x0, #64]
     8c4:	ldr	x0, [sp, #24]
     8c8:	ldr	x2, [x0, #56]
     8cc:	ldr	x0, [sp, #24]
     8d0:	ldr	x0, [x0, #64]
     8d4:	ldr	x0, [x0, #8]
     8d8:	mov	x1, x0
     8dc:	mov	x0, x2
     8e0:	bl	0 <set_menu_sub>
     8e4:	nop
     8e8:	ldp	x29, x30, [sp], #32
     8ec:	ret

00000000000008f0 <_ZN11NCursesMenu11set_patternEPKc>:
     8f0:	stp	x29, x30, [sp, #-48]!
     8f4:	mov	x29, sp
     8f8:	str	x0, [sp, #24]
     8fc:	str	x1, [sp, #16]
     900:	ldr	x0, [sp, #24]
     904:	ldr	x0, [x0, #56]
     908:	ldr	x1, [sp, #16]
     90c:	bl	0 <set_menu_pattern>
     910:	str	w0, [sp, #44]
     914:	ldr	w0, [sp, #44]
     918:	cmn	w0, #0x9
     91c:	b.eq	930 <_ZN11NCursesMenu11set_patternEPKc+0x40>  // b.none
     920:	ldr	w0, [sp, #44]
     924:	cmp	w0, #0x0
     928:	b.ne	938 <_ZN11NCursesMenu11set_patternEPKc+0x48>  // b.any
     92c:	b	944 <_ZN11NCursesMenu11set_patternEPKc+0x54>
     930:	mov	w0, #0x0                   	// #0
     934:	b	948 <_ZN11NCursesMenu11set_patternEPKc+0x58>
     938:	ldr	w1, [sp, #44]
     93c:	ldr	x0, [sp, #24]
     940:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     944:	mov	w0, #0x1                   	// #1
     948:	ldp	x29, x30, [sp], #48
     94c:	ret

0000000000000950 <_ZN11NCursesMenu6driverEi>:
     950:	stp	x29, x30, [sp, #-48]!
     954:	mov	x29, sp
     958:	str	x0, [sp, #24]
     95c:	str	w1, [sp, #20]
     960:	ldr	x0, [sp, #24]
     964:	ldr	x0, [x0, #56]
     968:	ldr	w1, [sp, #20]
     96c:	bl	0 <menu_driver>
     970:	str	w0, [sp, #44]
     974:	ldr	w0, [sp, #44]
     978:	add	w0, w0, #0xc
     97c:	cmp	w0, #0xc
     980:	cset	w1, hi  // hi = pmore
     984:	and	w1, w1, #0xff
     988:	cmp	w1, #0x0
     98c:	b.ne	9b4 <_ZN11NCursesMenu6driverEi+0x64>  // b.any
     990:	mov	x1, #0x1                   	// #1
     994:	lsl	x1, x1, x0
     998:	mov	x0, #0x101d                	// #4125
     99c:	and	x0, x1, x0
     9a0:	cmp	x0, #0x0
     9a4:	cset	w0, ne  // ne = any
     9a8:	and	w0, w0, #0xff
     9ac:	cmp	w0, #0x0
     9b0:	b.ne	9c4 <_ZN11NCursesMenu6driverEi+0x74>  // b.any
     9b4:	ldr	w1, [sp, #44]
     9b8:	ldr	x0, [sp, #24]
     9bc:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     9c0:	b	9c8 <_ZN11NCursesMenu6driverEi+0x78>
     9c4:	nop
     9c8:	ldr	w0, [sp, #44]
     9cc:	ldp	x29, x30, [sp], #48
     9d0:	ret

00000000000009d4 <_ZN11NCursesMenu10virtualizeEi>:
     9d4:	sub	sp, sp, #0x10
     9d8:	str	x0, [sp, #8]
     9dc:	str	w1, [sp, #4]
     9e0:	ldr	w0, [sp, #4]
     9e4:	cmp	w0, #0x168
     9e8:	b.eq	c84 <_ZN11NCursesMenu10virtualizeEi+0x2b0>  // b.none
     9ec:	ldr	w0, [sp, #4]
     9f0:	cmp	w0, #0x168
     9f4:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     9f8:	ldr	w0, [sp, #4]
     9fc:	cmp	w0, #0x153
     a00:	b.eq	c9c <_ZN11NCursesMenu10virtualizeEi+0x2c8>  // b.none
     a04:	ldr	w0, [sp, #4]
     a08:	cmp	w0, #0x153
     a0c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     a10:	ldr	w0, [sp, #4]
     a14:	cmp	w0, #0x152
     a18:	b.eq	c94 <_ZN11NCursesMenu10virtualizeEi+0x2c0>  // b.none
     a1c:	ldr	w0, [sp, #4]
     a20:	cmp	w0, #0x152
     a24:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     a28:	ldr	w0, [sp, #4]
     a2c:	cmp	w0, #0x107
     a30:	b.eq	c8c <_ZN11NCursesMenu10virtualizeEi+0x2b8>  // b.none
     a34:	ldr	w0, [sp, #4]
     a38:	cmp	w0, #0x107
     a3c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     a40:	ldr	w0, [sp, #4]
     a44:	cmp	w0, #0x106
     a48:	b.eq	c6c <_ZN11NCursesMenu10virtualizeEi+0x298>  // b.none
     a4c:	ldr	w0, [sp, #4]
     a50:	cmp	w0, #0x106
     a54:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     a58:	ldr	w0, [sp, #4]
     a5c:	cmp	w0, #0x105
     a60:	b.eq	c7c <_ZN11NCursesMenu10virtualizeEi+0x2a8>  // b.none
     a64:	ldr	w0, [sp, #4]
     a68:	cmp	w0, #0x105
     a6c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     a70:	ldr	w0, [sp, #4]
     a74:	cmp	w0, #0x104
     a78:	b.eq	c74 <_ZN11NCursesMenu10virtualizeEi+0x2a0>  // b.none
     a7c:	ldr	w0, [sp, #4]
     a80:	cmp	w0, #0x104
     a84:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     a88:	ldr	w0, [sp, #4]
     a8c:	cmp	w0, #0x103
     a90:	b.eq	c0c <_ZN11NCursesMenu10virtualizeEi+0x238>  // b.none
     a94:	ldr	w0, [sp, #4]
     a98:	cmp	w0, #0x103
     a9c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     aa0:	ldr	w0, [sp, #4]
     aa4:	cmp	w0, #0x102
     aa8:	b.eq	bfc <_ZN11NCursesMenu10virtualizeEi+0x228>  // b.none
     aac:	ldr	w0, [sp, #4]
     ab0:	cmp	w0, #0x102
     ab4:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     ab8:	ldr	w0, [sp, #4]
     abc:	cmp	w0, #0x19
     ac0:	b.eq	c3c <_ZN11NCursesMenu10virtualizeEi+0x268>  // b.none
     ac4:	ldr	w0, [sp, #4]
     ac8:	cmp	w0, #0x19
     acc:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     ad0:	ldr	w0, [sp, #4]
     ad4:	cmp	w0, #0x18
     ad8:	b.eq	bf4 <_ZN11NCursesMenu10virtualizeEi+0x220>  // b.none
     adc:	ldr	w0, [sp, #4]
     ae0:	cmp	w0, #0x18
     ae4:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     ae8:	ldr	w0, [sp, #4]
     aec:	cmp	w0, #0x15
     af0:	b.eq	c1c <_ZN11NCursesMenu10virtualizeEi+0x248>  // b.none
     af4:	ldr	w0, [sp, #4]
     af8:	cmp	w0, #0x15
     afc:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b00:	ldr	w0, [sp, #4]
     b04:	cmp	w0, #0x14
     b08:	b.eq	c5c <_ZN11NCursesMenu10virtualizeEi+0x288>  // b.none
     b0c:	ldr	w0, [sp, #4]
     b10:	cmp	w0, #0x14
     b14:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b18:	ldr	w0, [sp, #4]
     b1c:	cmp	w0, #0x10
     b20:	b.eq	c14 <_ZN11NCursesMenu10virtualizeEi+0x240>  // b.none
     b24:	ldr	w0, [sp, #4]
     b28:	cmp	w0, #0x10
     b2c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b30:	ldr	w0, [sp, #4]
     b34:	cmp	w0, #0xe
     b38:	b.eq	c04 <_ZN11NCursesMenu10virtualizeEi+0x230>  // b.none
     b3c:	ldr	w0, [sp, #4]
     b40:	cmp	w0, #0xe
     b44:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b48:	ldr	w0, [sp, #4]
     b4c:	cmp	w0, #0xd
     b50:	b.eq	c64 <_ZN11NCursesMenu10virtualizeEi+0x290>  // b.none
     b54:	ldr	w0, [sp, #4]
     b58:	cmp	w0, #0xd
     b5c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b60:	ldr	w0, [sp, #4]
     b64:	cmp	w0, #0xa
     b68:	b.eq	c64 <_ZN11NCursesMenu10virtualizeEi+0x290>  // b.none
     b6c:	ldr	w0, [sp, #4]
     b70:	cmp	w0, #0xa
     b74:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b78:	ldr	w0, [sp, #4]
     b7c:	cmp	w0, #0x8
     b80:	b.eq	c44 <_ZN11NCursesMenu10virtualizeEi+0x270>  // b.none
     b84:	ldr	w0, [sp, #4]
     b88:	cmp	w0, #0x8
     b8c:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     b90:	ldr	w0, [sp, #4]
     b94:	cmp	w0, #0x6
     b98:	b.eq	c2c <_ZN11NCursesMenu10virtualizeEi+0x258>  // b.none
     b9c:	ldr	w0, [sp, #4]
     ba0:	cmp	w0, #0x6
     ba4:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     ba8:	ldr	w0, [sp, #4]
     bac:	cmp	w0, #0x5
     bb0:	b.eq	c54 <_ZN11NCursesMenu10virtualizeEi+0x280>  // b.none
     bb4:	ldr	w0, [sp, #4]
     bb8:	cmp	w0, #0x5
     bbc:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     bc0:	ldr	w0, [sp, #4]
     bc4:	cmp	w0, #0x4
     bc8:	b.eq	c24 <_ZN11NCursesMenu10virtualizeEi+0x250>  // b.none
     bcc:	ldr	w0, [sp, #4]
     bd0:	cmp	w0, #0x4
     bd4:	b.gt	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     bd8:	ldr	w0, [sp, #4]
     bdc:	cmp	w0, #0x1
     be0:	b.eq	c4c <_ZN11NCursesMenu10virtualizeEi+0x278>  // b.none
     be4:	ldr	w0, [sp, #4]
     be8:	cmp	w0, #0x2
     bec:	b.eq	c34 <_ZN11NCursesMenu10virtualizeEi+0x260>  // b.none
     bf0:	b	ca4 <_ZN11NCursesMenu10virtualizeEi+0x2d0>
     bf4:	mov	w0, #0x280                 	// #640
     bf8:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     bfc:	mov	w0, #0x203                 	// #515
     c00:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c04:	mov	w0, #0x20a                 	// #522
     c08:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c0c:	mov	w0, #0x202                 	// #514
     c10:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c14:	mov	w0, #0x20b                 	// #523
     c18:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c1c:	mov	w0, #0x204                 	// #516
     c20:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c24:	mov	w0, #0x205                 	// #517
     c28:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c2c:	mov	w0, #0x206                 	// #518
     c30:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c34:	mov	w0, #0x207                 	// #519
     c38:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c3c:	mov	w0, #0x20d                 	// #525
     c40:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c44:	mov	w0, #0x20e                 	// #526
     c48:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c4c:	mov	w0, #0x20f                 	// #527
     c50:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c54:	mov	w0, #0x210                 	// #528
     c58:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c5c:	mov	w0, #0x20c                 	// #524
     c60:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c64:	mov	w0, #0x281                 	// #641
     c68:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c6c:	mov	w0, #0x208                 	// #520
     c70:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c74:	mov	w0, #0x200                 	// #512
     c78:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c7c:	mov	w0, #0x201                 	// #513
     c80:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c84:	mov	w0, #0x209                 	// #521
     c88:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c8c:	mov	w0, #0x20e                 	// #526
     c90:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c94:	mov	w0, #0x206                 	// #518
     c98:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     c9c:	mov	w0, #0x207                 	// #519
     ca0:	b	ca8 <_ZN11NCursesMenu10virtualizeEi+0x2d4>
     ca4:	ldr	w0, [sp, #4]
     ca8:	add	sp, sp, #0x10
     cac:	ret

0000000000000cb0 <_ZN11NCursesMenuclEv>:
     cb0:	stp	x29, x30, [sp, #-96]!
     cb4:	mov	x29, sp
     cb8:	str	x19, [sp, #16]
     cbc:	str	x0, [sp, #40]
     cc0:	strb	wzr, [sp, #87]
     cc4:	mov	w1, #0x1                   	// #1
     cc8:	ldr	x0, [sp, #40]
     ccc:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     cd0:	ldr	x0, [sp, #40]
     cd4:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     cd8:	ldr	x2, [sp, #40]
     cdc:	ldr	x0, [sp, #40]
     ce0:	ldr	x0, [x0]
     ce4:	add	x0, x0, #0x20
     ce8:	ldr	x1, [x0]
     cec:	mov	x0, x2
     cf0:	blr	x1
     cf4:	ldrb	w0, [sp, #87]
     cf8:	eor	w0, w0, #0x1
     cfc:	and	w0, w0, #0xff
     d00:	cmp	w0, #0x0
     d04:	b.eq	d5c <_ZN11NCursesMenuclEv+0xac>  // b.none
     d08:	ldr	x0, [sp, #40]
     d0c:	ldr	x0, [x0]
     d10:	add	x0, x0, #0x88
     d14:	ldr	x19, [x0]
     d18:	ldr	x2, [sp, #40]
     d1c:	ldr	x0, [sp, #40]
     d20:	ldr	x0, [x0]
     d24:	add	x0, x0, #0x30
     d28:	ldr	x1, [x0]
     d2c:	mov	x0, x2
     d30:	blr	x1
     d34:	str	w0, [sp, #88]
     d38:	ldr	w1, [sp, #88]
     d3c:	ldr	x0, [sp, #40]
     d40:	blr	x19
     d44:	str	w0, [sp, #92]
     d48:	ldr	w0, [sp, #92]
     d4c:	cmp	w0, #0x280
     d50:	b.eq	d5c <_ZN11NCursesMenuclEv+0xac>  // b.none
     d54:	mov	w0, #0x1                   	// #1
     d58:	b	d60 <_ZN11NCursesMenuclEv+0xb0>
     d5c:	mov	w0, #0x0                   	// #0
     d60:	cmp	w0, #0x0
     d64:	b.eq	fd8 <_ZN11NCursesMenuclEv+0x328>  // b.none
     d68:	ldr	x0, [sp, #40]
     d6c:	ldr	x0, [x0]
     d70:	add	x0, x0, #0x58
     d74:	ldr	x2, [x0]
     d78:	ldr	w1, [sp, #92]
     d7c:	ldr	x0, [sp, #40]
     d80:	blr	x2
     d84:	str	w0, [sp, #76]
     d88:	ldr	w0, [sp, #76]
     d8c:	cmp	w0, #0x0
     d90:	b.eq	fc8 <_ZN11NCursesMenuclEv+0x318>  // b.none
     d94:	cmp	w0, #0x0
     d98:	b.gt	fb8 <_ZN11NCursesMenuclEv+0x308>
     d9c:	cmn	w0, #0x8
     da0:	b.eq	e10 <_ZN11NCursesMenuclEv+0x160>  // b.none
     da4:	cmn	w0, #0x8
     da8:	b.gt	fb8 <_ZN11NCursesMenuclEv+0x308>
     dac:	cmn	w0, #0x9
     db0:	b.eq	f98 <_ZN11NCursesMenuclEv+0x2e8>  // b.none
     db4:	cmn	w0, #0x9
     db8:	b.gt	fb8 <_ZN11NCursesMenuclEv+0x308>
     dbc:	cmn	w0, #0xc
     dc0:	b.eq	dd0 <_ZN11NCursesMenuclEv+0x120>  // b.none
     dc4:	cmn	w0, #0xa
     dc8:	b.eq	df0 <_ZN11NCursesMenuclEv+0x140>  // b.none
     dcc:	b	fb8 <_ZN11NCursesMenuclEv+0x308>
     dd0:	ldr	x0, [sp, #40]
     dd4:	ldr	x0, [x0]
     dd8:	add	x0, x0, #0x98
     ddc:	ldr	x2, [x0]
     de0:	ldr	w1, [sp, #88]
     de4:	ldr	x0, [sp, #40]
     de8:	blr	x2
     dec:	b	fd4 <_ZN11NCursesMenuclEv+0x324>
     df0:	ldr	x0, [sp, #40]
     df4:	ldr	x0, [x0]
     df8:	add	x0, x0, #0xa0
     dfc:	ldr	x2, [x0]
     e00:	ldr	w1, [sp, #88]
     e04:	ldr	x0, [sp, #40]
     e08:	blr	x2
     e0c:	b	fd4 <_ZN11NCursesMenuclEv+0x324>
     e10:	ldr	w0, [sp, #92]
     e14:	cmp	w0, #0x281
     e18:	b.ne	f78 <_ZN11NCursesMenuclEv+0x2c8>  // b.any
     e1c:	ldr	x0, [sp, #40]
     e20:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     e24:	and	w0, w0, #0x1
     e28:	cmp	w0, #0x0
     e2c:	cset	w0, ne  // ne = any
     e30:	and	w0, w0, #0xff
     e34:	cmp	w0, #0x0
     e38:	b.eq	ec8 <_ZN11NCursesMenuclEv+0x218>  // b.none
     e3c:	ldr	x0, [sp, #40]
     e40:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     e44:	str	x0, [sp, #56]
     e48:	ldr	x0, [sp, #56]
     e4c:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     e50:	and	w0, w0, #0x1
     e54:	cmp	w0, #0x0
     e58:	cset	w0, ne  // ne = any
     e5c:	and	w0, w0, #0xff
     e60:	cmp	w0, #0x0
     e64:	b.eq	ea8 <_ZN11NCursesMenuclEv+0x1f8>  // b.none
     e68:	ldr	x0, [sp, #56]
     e6c:	ldr	x0, [x0]
     e70:	add	x0, x0, #0x10
     e74:	ldr	x1, [x0]
     e78:	ldr	x0, [sp, #56]
     e7c:	blr	x1
     e80:	and	w0, w0, #0xff
     e84:	strb	w0, [sp, #87]
     e88:	ldr	x2, [sp, #40]
     e8c:	ldr	x0, [sp, #40]
     e90:	ldr	x0, [x0]
     e94:	add	x0, x0, #0x20
     e98:	ldr	x1, [x0]
     e9c:	mov	x0, x2
     ea0:	blr	x1
     ea4:	b	fd0 <_ZN11NCursesMenuclEv+0x320>
     ea8:	ldr	x0, [sp, #40]
     eac:	ldr	x0, [x0]
     eb0:	add	x0, x0, #0xa0
     eb4:	ldr	x2, [x0]
     eb8:	ldr	w1, [sp, #88]
     ebc:	ldr	x0, [sp, #40]
     ec0:	blr	x2
     ec4:	b	fd0 <_ZN11NCursesMenuclEv+0x320>
     ec8:	ldr	x0, [sp, #40]
     ecc:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     ed0:	str	w0, [sp, #72]
     ed4:	str	wzr, [sp, #80]
     ed8:	ldr	w1, [sp, #80]
     edc:	ldr	w0, [sp, #72]
     ee0:	cmp	w1, w0
     ee4:	b.ge	fd0 <_ZN11NCursesMenuclEv+0x320>  // b.tcont
     ee8:	ldr	x0, [sp, #40]
     eec:	ldr	x1, [x0, #80]
     ef0:	ldrsw	x0, [sp, #80]
     ef4:	lsl	x0, x0, #3
     ef8:	add	x0, x1, x0
     efc:	ldr	x0, [x0]
     f00:	str	x0, [sp, #64]
     f04:	ldr	x0, [sp, #64]
     f08:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     f0c:	and	w0, w0, #0xff
     f10:	cmp	w0, #0x0
     f14:	b.eq	f68 <_ZN11NCursesMenuclEv+0x2b8>  // b.none
     f18:	ldr	x0, [sp, #64]
     f1c:	ldr	x0, [x0]
     f20:	add	x0, x0, #0x10
     f24:	ldr	x1, [x0]
     f28:	ldr	x0, [sp, #64]
     f2c:	blr	x1
     f30:	and	w1, w0, #0xff
     f34:	ldrb	w0, [sp, #87]
     f38:	orr	w0, w1, w0
     f3c:	and	w0, w0, #0xff
     f40:	cmp	w0, #0x0
     f44:	cset	w0, ne  // ne = any
     f48:	strb	w0, [sp, #87]
     f4c:	ldr	x2, [sp, #40]
     f50:	ldr	x0, [sp, #40]
     f54:	ldr	x0, [x0]
     f58:	add	x0, x0, #0x20
     f5c:	ldr	x1, [x0]
     f60:	mov	x0, x2
     f64:	blr	x1
     f68:	ldr	w0, [sp, #80]
     f6c:	add	w0, w0, #0x1
     f70:	str	w0, [sp, #80]
     f74:	b	ed8 <_ZN11NCursesMenuclEv+0x228>
     f78:	ldr	x0, [sp, #40]
     f7c:	ldr	x0, [x0]
     f80:	add	x0, x0, #0xb0
     f84:	ldr	x2, [x0]
     f88:	ldr	w1, [sp, #88]
     f8c:	ldr	x0, [sp, #40]
     f90:	blr	x2
     f94:	b	fd0 <_ZN11NCursesMenuclEv+0x320>
     f98:	ldr	x0, [sp, #40]
     f9c:	ldr	x0, [x0]
     fa0:	add	x0, x0, #0xa8
     fa4:	ldr	x2, [x0]
     fa8:	ldr	w1, [sp, #88]
     fac:	ldr	x0, [sp, #40]
     fb0:	blr	x2
     fb4:	b	fd4 <_ZN11NCursesMenuclEv+0x324>
     fb8:	ldr	w1, [sp, #76]
     fbc:	ldr	x0, [sp, #40]
     fc0:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     fc4:	b	cf4 <_ZN11NCursesMenuclEv+0x44>
     fc8:	nop
     fcc:	b	cf4 <_ZN11NCursesMenuclEv+0x44>
     fd0:	nop
     fd4:	b	cf4 <_ZN11NCursesMenuclEv+0x44>
     fd8:	ldr	x0, [sp, #40]
     fdc:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     fe0:	ldr	x0, [sp, #40]
     fe4:	bl	0 <_ZN15NCursesMenuItemD1Ev>
     fe8:	ldr	x2, [sp, #40]
     fec:	ldr	x0, [sp, #40]
     ff0:	ldr	x0, [x0]
     ff4:	add	x0, x0, #0x20
     ff8:	ldr	x1, [x0]
     ffc:	mov	x0, x2
    1000:	blr	x1
    1004:	ldr	x0, [sp, #40]
    1008:	bl	0 <_ZN15NCursesMenuItemD1Ev>
    100c:	and	w0, w0, #0x1
    1010:	cmp	w0, #0x0
    1014:	cset	w0, ne  // ne = any
    1018:	and	w0, w0, #0xff
    101c:	cmp	w0, #0x0
    1020:	b.eq	1050 <_ZN11NCursesMenuclEv+0x3a0>  // b.none
    1024:	ldr	x0, [sp, #40]
    1028:	ldr	x19, [x0, #80]
    102c:	ldr	x0, [sp, #40]
    1030:	ldr	x0, [x0, #56]
    1034:	bl	0 <current_item>
    1038:	bl	0 <item_index>
    103c:	sxtw	x0, w0
    1040:	lsl	x0, x0, #3
    1044:	add	x0, x19, x0
    1048:	ldr	x0, [x0]
    104c:	b	1054 <_ZN11NCursesMenuclEv+0x3a4>
    1050:	mov	x0, #0x0                   	// #0
    1054:	ldr	x19, [sp, #16]
    1058:	ldp	x29, x30, [sp], #96
    105c:	ret

0000000000001060 <_ZN11NCursesMenu12On_Menu_InitEv>:
    1060:	sub	sp, sp, #0x10
    1064:	str	x0, [sp, #8]
    1068:	nop
    106c:	add	sp, sp, #0x10
    1070:	ret

0000000000001074 <_ZN11NCursesMenu19On_Menu_TerminationEv>:
    1074:	sub	sp, sp, #0x10
    1078:	str	x0, [sp, #8]
    107c:	nop
    1080:	add	sp, sp, #0x10
    1084:	ret

0000000000001088 <_ZN11NCursesMenu12On_Item_InitER15NCursesMenuItem>:
    1088:	sub	sp, sp, #0x10
    108c:	str	x0, [sp, #8]
    1090:	str	x1, [sp]
    1094:	nop
    1098:	add	sp, sp, #0x10
    109c:	ret

00000000000010a0 <_ZN11NCursesMenu19On_Item_TerminationER15NCursesMenuItem>:
    10a0:	sub	sp, sp, #0x10
    10a4:	str	x0, [sp, #8]
    10a8:	str	x1, [sp]
    10ac:	nop
    10b0:	add	sp, sp, #0x10
    10b4:	ret

00000000000010b8 <_ZNK11NCursesMenu17On_Request_DeniedEi>:
    10b8:	stp	x29, x30, [sp, #-32]!
    10bc:	mov	x29, sp
    10c0:	str	x0, [sp, #24]
    10c4:	str	w1, [sp, #20]
    10c8:	bl	0 <beep>
    10cc:	nop
    10d0:	ldp	x29, x30, [sp], #32
    10d4:	ret

00000000000010d8 <_ZNK11NCursesMenu17On_Not_SelectableEi>:
    10d8:	stp	x29, x30, [sp, #-32]!
    10dc:	mov	x29, sp
    10e0:	str	x0, [sp, #24]
    10e4:	str	w1, [sp, #20]
    10e8:	bl	0 <beep>
    10ec:	nop
    10f0:	ldp	x29, x30, [sp], #32
    10f4:	ret

00000000000010f8 <_ZNK11NCursesMenu11On_No_MatchEi>:
    10f8:	stp	x29, x30, [sp, #-32]!
    10fc:	mov	x29, sp
    1100:	str	x0, [sp, #24]
    1104:	str	w1, [sp, #20]
    1108:	bl	0 <beep>
    110c:	nop
    1110:	ldp	x29, x30, [sp], #32
    1114:	ret

0000000000001118 <_ZNK11NCursesMenu18On_Unknown_CommandEi>:
    1118:	stp	x29, x30, [sp, #-32]!
    111c:	mov	x29, sp
    1120:	str	x0, [sp, #24]
    1124:	str	w1, [sp, #20]
    1128:	bl	0 <beep>
    112c:	nop
    1130:	ldp	x29, x30, [sp], #32
    1134:	ret

0000000000001138 <_Z41__static_initialization_and_destruction_0ii>:
    1138:	stp	x29, x30, [sp, #-32]!
    113c:	mov	x29, sp
    1140:	str	w0, [sp, #28]
    1144:	str	w1, [sp, #24]
    1148:	ldr	w0, [sp, #28]
    114c:	cmp	w0, #0x1
    1150:	b.ne	118c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
    1154:	ldr	w1, [sp, #24]
    1158:	mov	w0, #0xffff                	// #65535
    115c:	cmp	w1, w0
    1160:	b.ne	118c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
    1164:	adrp	x0, 0 <_ZN15NCursesMenuItemD1Ev>
    1168:	add	x0, x0, #0x0
    116c:	bl	0 <_ZNSt8ios_base4InitC1Ev>
    1170:	adrp	x0, 0 <__dso_handle>
    1174:	add	x2, x0, #0x0
    1178:	adrp	x0, 0 <_ZN15NCursesMenuItemD1Ev>
    117c:	add	x1, x0, #0x0
    1180:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
    1184:	ldr	x0, [x0]
    1188:	bl	0 <__cxa_atexit>
    118c:	nop
    1190:	ldp	x29, x30, [sp], #32
    1194:	ret

0000000000001198 <_GLOBAL__sub_I_cursesm.cc>:
    1198:	stp	x29, x30, [sp, #-16]!
    119c:	mov	x29, sp
    11a0:	mov	w1, #0xffff                	// #65535
    11a4:	mov	w0, #0x1                   	// #1
    11a8:	bl	1138 <_Z41__static_initialization_and_destruction_0ii>
    11ac:	ldp	x29, x30, [sp], #16
    11b0:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKci:

0000000000000000 <_ZN16NCursesExceptionC1EPKci>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKci>
  14:	ldr	x0, [x0]
  18:	add	x1, x0, #0x10
  1c:	ldr	x0, [sp, #24]
  20:	str	x1, [x0]
  24:	ldr	x0, [sp, #24]
  28:	ldr	x1, [sp, #16]
  2c:	str	x1, [x0, #8]
  30:	ldr	x0, [sp, #24]
  34:	ldr	w1, [sp, #12]
  38:	str	w1, [x0, #16]
  3c:	nop
  40:	add	sp, sp, #0x20
  44:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionC2EPK12NCursesPaneli:

0000000000000000 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	x3, [sp, #40]
  18:	ldr	w2, [sp, #28]
  1c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  20:	add	x1, x0, #0x0
  24:	mov	x0, x3
  28:	bl	0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  2c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  30:	ldr	x0, [x0]
  34:	add	x1, x0, #0x10
  38:	ldr	x0, [sp, #40]
  3c:	str	x1, [x0]
  40:	ldr	x0, [sp, #40]
  44:	ldr	x1, [sp, #32]
  48:	str	x1, [x0, #24]
  4c:	nop
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZNK21NCursesPanelException9classnameEv:

0000000000000000 <_ZNK21NCursesPanelException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK21NCursesPanelException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionD2Ev:

0000000000000000 <_ZN21NCursesPanelExceptionD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN21NCursesPanelExceptionD1Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionD0Ev:

0000000000000000 <_ZN21NCursesPanelExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN21NCursesPanelExceptionD0Ev>
  14:	mov	x1, #0x20                  	// #32
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN20NCursesMenuExceptionC2Ei:

0000000000000000 <_ZN20NCursesMenuExceptionC1Ei>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x3, [sp, #24]
  14:	ldr	w2, [sp, #20]
  18:	adrp	x0, 0 <_ZN20NCursesMenuExceptionC1Ei>
  1c:	add	x1, x0, #0x0
  20:	mov	x0, x3
  24:	bl	0 <_ZN20NCursesMenuExceptionC1Ei>
  28:	adrp	x0, 0 <_ZN20NCursesMenuExceptionC1Ei>
  2c:	ldr	x0, [x0]
  30:	add	x1, x0, #0x10
  34:	ldr	x0, [sp, #24]
  38:	str	x1, [x0]
  3c:	ldr	x0, [sp, #24]
  40:	str	xzr, [x0, #24]
  44:	nop
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN20NCursesMenuExceptionC2EPK11NCursesMenui:

0000000000000000 <_ZN20NCursesMenuExceptionC1EPK11NCursesMenui>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	x3, [sp, #40]
  18:	ldr	w2, [sp, #28]
  1c:	adrp	x0, 0 <_ZN20NCursesMenuExceptionC1EPK11NCursesMenui>
  20:	add	x1, x0, #0x0
  24:	mov	x0, x3
  28:	bl	0 <_ZN20NCursesMenuExceptionC1EPK11NCursesMenui>
  2c:	adrp	x0, 0 <_ZN20NCursesMenuExceptionC1EPK11NCursesMenui>
  30:	ldr	x0, [x0]
  34:	add	x1, x0, #0x10
  38:	ldr	x0, [sp, #40]
  3c:	str	x1, [x0]
  40:	ldr	x0, [sp, #40]
  44:	ldr	x1, [sp, #32]
  48:	str	x1, [x0, #24]
  4c:	nop
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZNK20NCursesMenuException9classnameEv:

0000000000000000 <_ZNK20NCursesMenuException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK20NCursesMenuException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN20NCursesMenuExceptionD2Ev:

0000000000000000 <_ZN20NCursesMenuExceptionD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN20NCursesMenuExceptionD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN20NCursesMenuExceptionD1Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN20NCursesMenuExceptionD0Ev:

0000000000000000 <_ZN20NCursesMenuExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN20NCursesMenuExceptionD0Ev>
  14:	mov	x1, #0x20                  	// #32
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._ZNK13NCursesWindow6heightEv:

0000000000000000 <_ZNK13NCursesWindow6heightEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow6heightEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow5widthEv:

0000000000000000 <_ZNK13NCursesWindow5widthEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow5widthEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxxEv:

0000000000000000 <_ZNK13NCursesWindow4maxxEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxxEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #6]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxxEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxxEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxxEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #6]
  54:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxyEv:

0000000000000000 <_ZNK13NCursesWindow4maxyEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxyEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #4]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxyEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxyEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxyEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #4]
  54:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZN13NCursesWindow6keypadEb:

0000000000000000 <_ZN13NCursesWindow6keypadEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <keypad>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow4metaEb:

0000000000000000 <_ZN13NCursesWindow4metaEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <meta>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK12NCursesPanel7OnErrorEi:

0000000000000000 <_ZNK12NCursesPanel7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmn	w0, #0x1
  1c:	b.ne	44 <_ZNK12NCursesPanel7OnErrorEi+0x44>  // b.any
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w2, [sp, #36]
  30:	ldr	x1, [sp, #40]
  34:	mov	x0, x19
  38:	bl	0 <_ZNK12NCursesPanel7OnErrorEi>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK12NCursesPanel7OnErrorEi>
  44:	nop
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN12NCursesPanel4hideEv:

0000000000000000 <_ZN12NCursesPanel4hideEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <hide_panel>
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN12NCursesPanel4hideEv>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN12NCursesPanel4showEv:

0000000000000000 <_ZN12NCursesPanel4showEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <show_panel>
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN12NCursesPanel4showEv>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	str	w2, [sp, #16]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x0, [x0, #48]
  1c:	ldr	w2, [sp, #16]
  20:	ldr	w1, [sp, #20]
  24:	bl	0 <move_panel>
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN12NCursesPanel5mvwinEii>
  34:	mov	w0, #0x0                   	// #0
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNK15NCursesMenuItem7OnErrorEi:

0000000000000000 <_ZNK15NCursesMenuItem7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmp	w0, #0x0
  1c:	b.eq	40 <_ZNK15NCursesMenuItem7OnErrorEi+0x40>  // b.none
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w1, [sp, #36]
  30:	mov	x0, x19
  34:	bl	0 <_ZNK15NCursesMenuItem7OnErrorEi>
  38:	mov	x0, x19
  3c:	bl	0 <_ZNK15NCursesMenuItem7OnErrorEi>
  40:	nop
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZNK15NCursesMenuItem7optionsEv:

0000000000000000 <_ZNK15NCursesMenuItem7optionsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <item_opts>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK15NCursesMenuItem5valueEv:

0000000000000000 <_ZNK15NCursesMenuItem5valueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <item_value>
  18:	and	w0, w0, #0xff
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZN11NCursesMenu7getHookEPK7tagMENU:

0000000000000000 <_ZN11NCursesMenu7getHookEPK7tagMENU>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <menu_userptr>
  14:	str	x0, [sp, #40]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #8]
  20:	ldp	x29, x30, [sp], #48
  24:	ret

Disassembly of section .text._ZNK11NCursesMenu7OnErrorEi:

0000000000000000 <_ZNK11NCursesMenu7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmp	w0, #0x0
  1c:	b.eq	44 <_ZNK11NCursesMenu7OnErrorEi+0x44>  // b.none
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w2, [sp, #36]
  30:	ldr	x1, [sp, #40]
  34:	mov	x0, x19
  38:	bl	0 <_ZNK11NCursesMenu7OnErrorEi>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK11NCursesMenu7OnErrorEi>
  44:	nop
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN11NCursesMenu6unpostEv:

0000000000000000 <_ZN11NCursesMenu6unpostEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #56]
  14:	bl	0 <unpost_menu>
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN11NCursesMenu6unpostEv>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN11NCursesMenu4postEb:

0000000000000000 <_ZN11NCursesMenu4postEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldrb	w0, [sp, #23]
  14:	cmp	w0, #0x0
  18:	b.eq	38 <_ZN11NCursesMenu4postEb+0x38>  // b.none
  1c:	ldr	x0, [sp, #24]
  20:	ldr	x0, [x0, #56]
  24:	bl	0 <post_menu>
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN11NCursesMenu4postEb>
  34:	b	50 <_ZN11NCursesMenu4postEb+0x50>
  38:	ldr	x0, [sp, #24]
  3c:	ldr	x0, [x0, #56]
  40:	bl	0 <unpost_menu>
  44:	mov	w1, w0
  48:	ldr	x0, [sp, #24]
  4c:	bl	0 <_ZN11NCursesMenu4postEb>
  50:	nop
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZNK11NCursesMenu5scaleERiS0_:

0000000000000000 <_ZNK11NCursesMenu5scaleERiS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x2, [sp, #24]
  20:	ldr	x1, [sp, #32]
  24:	bl	0 <scale_menu>
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #40]
  30:	bl	0 <_ZNK11NCursesMenu5scaleERiS0_>
  34:	nop
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZNK11NCursesMenu5countEv:

0000000000000000 <_ZNK11NCursesMenu5countEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #56]
  14:	bl	0 <item_count>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK11NCursesMenu12current_itemEv:

0000000000000000 <_ZNK11NCursesMenu12current_itemEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	ldr	x19, [x0, #80]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #56]
  20:	bl	0 <current_item>
  24:	bl	0 <item_index>
  28:	sxtw	x0, w0
  2c:	lsl	x0, x0, #3
  30:	add	x0, x19, x0
  34:	ldr	x0, [x0]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZNK11NCursesMenu7optionsEv:

0000000000000000 <_ZNK11NCursesMenu7optionsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #56]
  14:	bl	0 <menu_opts>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN11NCursesMenu5frameEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldrb	w0, [x0, #73]
  1c:	cmp	w0, #0x0
  20:	b.eq	38 <_ZN11NCursesMenu5frameEPKcS1_+0x38>  // b.none
  24:	ldr	x0, [sp, #40]
  28:	ldr	x2, [sp, #24]
  2c:	ldr	x1, [sp, #32]
  30:	bl	0 <_ZN12NCursesPanel5frameEPKcS1_>
  34:	b	44 <_ZN11NCursesMenu5frameEPKcS1_+0x44>
  38:	mov	w1, #0xffffffff            	// #-1
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_ZN11NCursesMenu5frameEPKcS1_>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZN11NCursesMenu9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesMenu9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldrb	w0, [x0, #73]
  1c:	cmp	w0, #0x0
  20:	b.eq	38 <_ZN11NCursesMenu9boldframeEPKcS1_+0x38>  // b.none
  24:	ldr	x0, [sp, #40]
  28:	ldr	x2, [sp, #24]
  2c:	ldr	x1, [sp, #32]
  30:	bl	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  34:	b	44 <_ZN11NCursesMenu9boldframeEPKcS1_+0x44>
  38:	mov	w1, #0xffffffff            	// #-1
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZN11NCursesMenu5labelEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldrb	w0, [x0, #73]
  1c:	cmp	w0, #0x0
  20:	b.eq	38 <_ZN11NCursesMenu5labelEPKcS1_+0x38>  // b.none
  24:	ldr	x0, [sp, #40]
  28:	ldr	x2, [sp, #24]
  2c:	ldr	x1, [sp, #32]
  30:	bl	0 <_ZN12NCursesPanel5labelEPKcS1_>
  34:	b	44 <_ZN11NCursesMenu5labelEPKcS1_+0x44>
  38:	mov	w1, #0xffffffff            	// #-1
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_ZN11NCursesMenu5labelEPKcS1_>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZN18NCursesApplication14getApplicationEv:

0000000000000000 <_ZN18NCursesApplication14getApplicationEv>:
   0:	adrp	x0, 0 <_ZN18NCursesApplication6theAppE>
   4:	ldr	x0, [x0]
   8:	ldr	x0, [x0]
   c:	ret

cursesw.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN13NCursesWindow5scanwEPKcz>:
       0:	stp	x29, x30, [sp, #-288]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #56]
       c:	str	x1, [sp, #48]
      10:	str	x2, [sp, #240]
      14:	str	x3, [sp, #248]
      18:	str	x4, [sp, #256]
      1c:	str	x5, [sp, #264]
      20:	str	x6, [sp, #272]
      24:	str	x7, [sp, #280]
      28:	str	q0, [sp, #112]
      2c:	str	q1, [sp, #128]
      30:	str	q2, [sp, #144]
      34:	str	q3, [sp, #160]
      38:	str	q4, [sp, #176]
      3c:	str	q5, [sp, #192]
      40:	str	q6, [sp, #208]
      44:	str	q7, [sp, #224]
      48:	mov	w0, #0xffffffff            	// #-1
      4c:	str	w0, [sp, #108]
      50:	add	x0, sp, #0x120
      54:	str	x0, [sp, #72]
      58:	add	x0, sp, #0x120
      5c:	str	x0, [sp, #80]
      60:	add	x0, sp, #0xf0
      64:	str	x0, [sp, #88]
      68:	mov	w0, #0xffffffd0            	// #-48
      6c:	str	w0, [sp, #96]
      70:	mov	w0, #0xffffff80            	// #-128
      74:	str	w0, [sp, #100]
      78:	ldr	x0, [sp, #56]
      7c:	ldr	x4, [x0, #8]
      80:	add	x2, sp, #0x10
      84:	add	x3, sp, #0x48
      88:	ldp	x0, x1, [x3]
      8c:	stp	x0, x1, [x2]
      90:	ldp	x0, x1, [x3, #16]
      94:	stp	x0, x1, [x2, #16]
      98:	add	x0, sp, #0x10
      9c:	mov	x2, x0
      a0:	ldr	x1, [sp, #48]
      a4:	mov	x0, x4
      a8:	bl	0 <vw_scanw>
      ac:	str	w0, [sp, #108]
      b0:	ldr	w0, [sp, #108]
      b4:	ldp	x29, x30, [sp], #288
      b8:	ret

00000000000000bc <_ZN13NCursesWindow5scanwEiiPKcz>:
      bc:	stp	x29, x30, [sp, #-288]!
      c0:	mov	x29, sp
      c4:	str	x0, [sp, #72]
      c8:	str	w1, [sp, #68]
      cc:	str	w2, [sp, #64]
      d0:	str	x3, [sp, #56]
      d4:	str	x4, [sp, #256]
      d8:	str	x5, [sp, #264]
      dc:	str	x6, [sp, #272]
      e0:	str	x7, [sp, #280]
      e4:	str	q0, [sp, #128]
      e8:	str	q1, [sp, #144]
      ec:	str	q2, [sp, #160]
      f0:	str	q3, [sp, #176]
      f4:	str	q4, [sp, #192]
      f8:	str	q5, [sp, #208]
      fc:	str	q6, [sp, #224]
     100:	str	q7, [sp, #240]
     104:	mov	w0, #0xffffffff            	// #-1
     108:	str	w0, [sp, #124]
     10c:	ldr	x0, [sp, #72]
     110:	ldr	x0, [x0, #8]
     114:	ldr	w2, [sp, #64]
     118:	ldr	w1, [sp, #68]
     11c:	bl	0 <wmove>
     120:	cmn	w0, #0x1
     124:	cset	w0, ne  // ne = any
     128:	and	w0, w0, #0xff
     12c:	cmp	w0, #0x0
     130:	b.eq	194 <_ZN13NCursesWindow5scanwEiiPKcz+0xd8>  // b.none
     134:	add	x0, sp, #0x120
     138:	str	x0, [sp, #88]
     13c:	add	x0, sp, #0x120
     140:	str	x0, [sp, #96]
     144:	add	x0, sp, #0x100
     148:	str	x0, [sp, #104]
     14c:	mov	w0, #0xffffffe0            	// #-32
     150:	str	w0, [sp, #112]
     154:	mov	w0, #0xffffff80            	// #-128
     158:	str	w0, [sp, #116]
     15c:	ldr	x0, [sp, #72]
     160:	ldr	x4, [x0, #8]
     164:	add	x2, sp, #0x10
     168:	add	x3, sp, #0x58
     16c:	ldp	x0, x1, [x3]
     170:	stp	x0, x1, [x2]
     174:	ldp	x0, x1, [x3, #16]
     178:	stp	x0, x1, [x2, #16]
     17c:	add	x0, sp, #0x10
     180:	mov	x2, x0
     184:	ldr	x1, [sp, #56]
     188:	mov	x0, x4
     18c:	bl	0 <vw_scanw>
     190:	str	w0, [sp, #124]
     194:	ldr	w0, [sp, #124]
     198:	ldp	x29, x30, [sp], #288
     19c:	ret

00000000000001a0 <_ZN13NCursesWindow5scanwEPKcSt9__va_list>:
     1a0:	stp	x29, x30, [sp, #-96]!
     1a4:	mov	x29, sp
     1a8:	str	x19, [sp, #16]
     1ac:	str	x0, [sp, #72]
     1b0:	str	x1, [sp, #64]
     1b4:	mov	x19, x2
     1b8:	mov	w0, #0xffffffff            	// #-1
     1bc:	str	w0, [sp, #92]
     1c0:	ldr	x0, [sp, #72]
     1c4:	ldr	x4, [x0, #8]
     1c8:	add	x2, sp, #0x20
     1cc:	mov	x3, x19
     1d0:	ldp	x0, x1, [x3]
     1d4:	stp	x0, x1, [x2]
     1d8:	ldp	x0, x1, [x3, #16]
     1dc:	stp	x0, x1, [x2, #16]
     1e0:	add	x0, sp, #0x20
     1e4:	mov	x2, x0
     1e8:	ldr	x1, [sp, #64]
     1ec:	mov	x0, x4
     1f0:	bl	0 <vw_scanw>
     1f4:	str	w0, [sp, #92]
     1f8:	ldr	w0, [sp, #92]
     1fc:	ldr	x19, [sp, #16]
     200:	ldp	x29, x30, [sp], #96
     204:	ret

0000000000000208 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list>:
     208:	stp	x29, x30, [sp, #-112]!
     20c:	mov	x29, sp
     210:	str	x19, [sp, #16]
     214:	str	x0, [sp, #88]
     218:	str	w1, [sp, #84]
     21c:	str	w2, [sp, #80]
     220:	str	x3, [sp, #72]
     224:	mov	x19, x4
     228:	mov	w0, #0xffffffff            	// #-1
     22c:	str	w0, [sp, #108]
     230:	ldr	x0, [sp, #88]
     234:	ldr	x0, [x0, #8]
     238:	ldr	w2, [sp, #80]
     23c:	ldr	w1, [sp, #84]
     240:	bl	0 <wmove>
     244:	cmn	w0, #0x1
     248:	cset	w0, ne  // ne = any
     24c:	and	w0, w0, #0xff
     250:	cmp	w0, #0x0
     254:	b.eq	290 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list+0x88>  // b.none
     258:	ldr	x0, [sp, #88]
     25c:	ldr	x4, [x0, #8]
     260:	add	x2, sp, #0x20
     264:	mov	x3, x19
     268:	ldp	x0, x1, [x3]
     26c:	stp	x0, x1, [x2]
     270:	ldp	x0, x1, [x3, #16]
     274:	stp	x0, x1, [x2, #16]
     278:	add	x0, sp, #0x20
     27c:	mov	x2, x0
     280:	ldr	x1, [sp, #72]
     284:	mov	x0, x4
     288:	bl	0 <vw_scanw>
     28c:	str	w0, [sp, #108]
     290:	ldr	w0, [sp, #108]
     294:	ldr	x19, [sp, #16]
     298:	ldp	x29, x30, [sp], #112
     29c:	ret

00000000000002a0 <_ZN13NCursesWindow6printwEPKcz>:
     2a0:	stp	x29, x30, [sp, #-288]!
     2a4:	mov	x29, sp
     2a8:	str	x0, [sp, #56]
     2ac:	str	x1, [sp, #48]
     2b0:	str	x2, [sp, #240]
     2b4:	str	x3, [sp, #248]
     2b8:	str	x4, [sp, #256]
     2bc:	str	x5, [sp, #264]
     2c0:	str	x6, [sp, #272]
     2c4:	str	x7, [sp, #280]
     2c8:	str	q0, [sp, #112]
     2cc:	str	q1, [sp, #128]
     2d0:	str	q2, [sp, #144]
     2d4:	str	q3, [sp, #160]
     2d8:	str	q4, [sp, #176]
     2dc:	str	q5, [sp, #192]
     2e0:	str	q6, [sp, #208]
     2e4:	str	q7, [sp, #224]
     2e8:	add	x0, sp, #0x120
     2ec:	str	x0, [sp, #72]
     2f0:	add	x0, sp, #0x120
     2f4:	str	x0, [sp, #80]
     2f8:	add	x0, sp, #0xf0
     2fc:	str	x0, [sp, #88]
     300:	mov	w0, #0xffffffd0            	// #-48
     304:	str	w0, [sp, #96]
     308:	mov	w0, #0xffffff80            	// #-128
     30c:	str	w0, [sp, #100]
     310:	ldr	x0, [sp, #56]
     314:	ldr	x4, [x0, #8]
     318:	add	x2, sp, #0x10
     31c:	add	x3, sp, #0x48
     320:	ldp	x0, x1, [x3]
     324:	stp	x0, x1, [x2]
     328:	ldp	x0, x1, [x3, #16]
     32c:	stp	x0, x1, [x2, #16]
     330:	add	x0, sp, #0x10
     334:	mov	x2, x0
     338:	ldr	x1, [sp, #48]
     33c:	mov	x0, x4
     340:	bl	0 <vw_printw>
     344:	str	w0, [sp, #108]
     348:	ldr	w0, [sp, #108]
     34c:	ldp	x29, x30, [sp], #288
     350:	ret

0000000000000354 <_ZN13NCursesWindow6printwEiiPKcz>:
     354:	stp	x29, x30, [sp, #-288]!
     358:	mov	x29, sp
     35c:	str	x0, [sp, #72]
     360:	str	w1, [sp, #68]
     364:	str	w2, [sp, #64]
     368:	str	x3, [sp, #56]
     36c:	str	x4, [sp, #256]
     370:	str	x5, [sp, #264]
     374:	str	x6, [sp, #272]
     378:	str	x7, [sp, #280]
     37c:	str	q0, [sp, #128]
     380:	str	q1, [sp, #144]
     384:	str	q2, [sp, #160]
     388:	str	q3, [sp, #176]
     38c:	str	q4, [sp, #192]
     390:	str	q5, [sp, #208]
     394:	str	q6, [sp, #224]
     398:	str	q7, [sp, #240]
     39c:	add	x0, sp, #0x120
     3a0:	str	x0, [sp, #88]
     3a4:	add	x0, sp, #0x120
     3a8:	str	x0, [sp, #96]
     3ac:	add	x0, sp, #0x100
     3b0:	str	x0, [sp, #104]
     3b4:	mov	w0, #0xffffffe0            	// #-32
     3b8:	str	w0, [sp, #112]
     3bc:	mov	w0, #0xffffff80            	// #-128
     3c0:	str	w0, [sp, #116]
     3c4:	ldr	x0, [sp, #72]
     3c8:	ldr	x0, [x0, #8]
     3cc:	ldr	w2, [sp, #64]
     3d0:	ldr	w1, [sp, #68]
     3d4:	bl	0 <wmove>
     3d8:	str	w0, [sp, #124]
     3dc:	ldr	w0, [sp, #124]
     3e0:	cmp	w0, #0x0
     3e4:	b.ne	420 <_ZN13NCursesWindow6printwEiiPKcz+0xcc>  // b.any
     3e8:	ldr	x0, [sp, #72]
     3ec:	ldr	x4, [x0, #8]
     3f0:	add	x2, sp, #0x10
     3f4:	add	x3, sp, #0x58
     3f8:	ldp	x0, x1, [x3]
     3fc:	stp	x0, x1, [x2]
     400:	ldp	x0, x1, [x3, #16]
     404:	stp	x0, x1, [x2, #16]
     408:	add	x0, sp, #0x10
     40c:	mov	x2, x0
     410:	ldr	x1, [sp, #56]
     414:	mov	x0, x4
     418:	bl	0 <vw_printw>
     41c:	str	w0, [sp, #124]
     420:	ldr	w0, [sp, #124]
     424:	ldp	x29, x30, [sp], #288
     428:	ret

000000000000042c <_ZN13NCursesWindow6printwEPKcSt9__va_list>:
     42c:	stp	x29, x30, [sp, #-96]!
     430:	mov	x29, sp
     434:	str	x19, [sp, #16]
     438:	str	x0, [sp, #72]
     43c:	str	x1, [sp, #64]
     440:	mov	x19, x2
     444:	ldr	x0, [sp, #72]
     448:	ldr	x4, [x0, #8]
     44c:	add	x2, sp, #0x20
     450:	mov	x3, x19
     454:	ldp	x0, x1, [x3]
     458:	stp	x0, x1, [x2]
     45c:	ldp	x0, x1, [x3, #16]
     460:	stp	x0, x1, [x2, #16]
     464:	add	x0, sp, #0x20
     468:	mov	x2, x0
     46c:	ldr	x1, [sp, #64]
     470:	mov	x0, x4
     474:	bl	0 <vw_printw>
     478:	str	w0, [sp, #92]
     47c:	ldr	w0, [sp, #92]
     480:	ldr	x19, [sp, #16]
     484:	ldp	x29, x30, [sp], #96
     488:	ret

000000000000048c <_ZN13NCursesWindow6printwEiiPKcSt9__va_list>:
     48c:	stp	x29, x30, [sp, #-112]!
     490:	mov	x29, sp
     494:	str	x19, [sp, #16]
     498:	str	x0, [sp, #88]
     49c:	str	w1, [sp, #84]
     4a0:	str	w2, [sp, #80]
     4a4:	str	x3, [sp, #72]
     4a8:	mov	x19, x4
     4ac:	ldr	x0, [sp, #88]
     4b0:	ldr	x0, [x0, #8]
     4b4:	ldr	w2, [sp, #80]
     4b8:	ldr	w1, [sp, #84]
     4bc:	bl	0 <wmove>
     4c0:	str	w0, [sp, #108]
     4c4:	ldr	w0, [sp, #108]
     4c8:	cmp	w0, #0x0
     4cc:	b.ne	508 <_ZN13NCursesWindow6printwEiiPKcSt9__va_list+0x7c>  // b.any
     4d0:	ldr	x0, [sp, #88]
     4d4:	ldr	x4, [x0, #8]
     4d8:	add	x2, sp, #0x20
     4dc:	mov	x3, x19
     4e0:	ldp	x0, x1, [x3]
     4e4:	stp	x0, x1, [x2]
     4e8:	ldp	x0, x1, [x3, #16]
     4ec:	stp	x0, x1, [x2, #16]
     4f0:	add	x0, sp, #0x20
     4f4:	mov	x2, x0
     4f8:	ldr	x1, [sp, #72]
     4fc:	mov	x0, x4
     500:	bl	0 <vw_printw>
     504:	str	w0, [sp, #108]
     508:	ldr	w0, [sp, #108]
     50c:	ldr	x19, [sp, #16]
     510:	ldp	x29, x30, [sp], #112
     514:	ret

0000000000000518 <_ZN13NCursesWindow12set_keyboardEv>:
     518:	stp	x29, x30, [sp, #-32]!
     51c:	mov	x29, sp
     520:	str	x0, [sp, #24]
     524:	mov	w1, #0x1                   	// #1
     528:	ldr	x0, [sp, #24]
     52c:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     530:	mov	w1, #0x1                   	// #1
     534:	ldr	x0, [sp, #24]
     538:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     53c:	nop
     540:	ldp	x29, x30, [sp], #32
     544:	ret

0000000000000548 <_ZNK13NCursesWindow11err_handlerEPKc>:
     548:	stp	x29, x30, [sp, #-48]!
     54c:	mov	x29, sp
     550:	str	x19, [sp, #16]
     554:	str	x0, [sp, #40]
     558:	str	x1, [sp, #32]
     55c:	mov	x0, #0x18                  	// #24
     560:	bl	0 <_Znwm>
     564:	mov	x19, x0
     568:	ldr	x1, [sp, #32]
     56c:	mov	x0, x19
     570:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     574:	mov	x0, x19
     578:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     57c:	nop
     580:	ldr	x19, [sp, #16]
     584:	ldp	x29, x30, [sp], #48
     588:	ret

000000000000058c <_ZN13NCursesWindow10initializeEv>:
     58c:	stp	x29, x30, [sp, #-16]!
     590:	mov	x29, sp
     594:	adrp	x0, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     598:	ldr	x0, [x0]
     59c:	ldrb	w0, [x0]
     5a0:	eor	w0, w0, #0x1
     5a4:	and	w0, w0, #0xff
     5a8:	cmp	w0, #0x0
     5ac:	b.eq	5f0 <_ZN13NCursesWindow10initializeEv+0x64>  // b.none
     5b0:	bl	0 <initscr>
     5b4:	adrp	x0, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     5b8:	ldr	x0, [x0]
     5bc:	mov	w1, #0x1                   	// #1
     5c0:	strb	w1, [x0]
     5c4:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     5c8:	ldr	x0, [x0]
     5cc:	ldr	w0, [x0]
     5d0:	cmn	w0, #0x1
     5d4:	b.ne	5e8 <_ZN13NCursesWindow10initializeEv+0x5c>  // b.any
     5d8:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     5dc:	ldr	x0, [x0]
     5e0:	str	wzr, [x0]
     5e4:	bl	eec <_ZN13NCursesWindow9useColorsEv>
     5e8:	bl	0 <noecho>
     5ec:	bl	0 <cbreak>
     5f0:	nop
     5f4:	ldp	x29, x30, [sp], #16
     5f8:	ret

00000000000005fc <_ZN13NCursesWindow12constructingEv>:
     5fc:	stp	x29, x30, [sp, #-32]!
     600:	mov	x29, sp
     604:	str	x0, [sp, #24]
     608:	bl	58c <_ZN13NCursesWindow10initializeEv>
     60c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     610:	ldr	x0, [x0]
     614:	ldr	x0, [x0]
     618:	add	x1, x0, #0x1
     61c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     620:	ldr	x0, [x0]
     624:	str	x1, [x0]
     628:	nop
     62c:	ldp	x29, x30, [sp], #32
     630:	ret

0000000000000634 <_ZN13NCursesWindowC1Ev>:
     634:	stp	x29, x30, [sp, #-32]!
     638:	mov	x29, sp
     63c:	str	x0, [sp, #24]
     640:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     644:	ldr	x0, [x0]
     648:	add	x1, x0, #0x10
     64c:	ldr	x0, [sp, #24]
     650:	str	x1, [x0]
     654:	ldr	x0, [sp, #24]
     658:	str	xzr, [x0, #8]
     65c:	ldr	x0, [sp, #24]
     660:	strb	wzr, [x0, #16]
     664:	ldr	x0, [sp, #24]
     668:	str	xzr, [x0, #24]
     66c:	ldr	x0, [sp, #24]
     670:	str	xzr, [x0, #32]
     674:	ldr	x0, [sp, #24]
     678:	str	xzr, [x0, #40]
     67c:	ldr	x0, [sp, #24]
     680:	bl	5fc <_ZN13NCursesWindow12constructingEv>
     684:	ldr	x0, [sp, #24]
     688:	str	xzr, [x0, #8]
     68c:	nop
     690:	ldp	x29, x30, [sp], #32
     694:	ret

0000000000000698 <_ZN13NCursesWindowC1Eiiii>:
     698:	stp	x29, x30, [sp, #-48]!
     69c:	mov	x29, sp
     6a0:	str	x0, [sp, #40]
     6a4:	str	w1, [sp, #36]
     6a8:	str	w2, [sp, #32]
     6ac:	str	w3, [sp, #28]
     6b0:	str	w4, [sp, #24]
     6b4:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     6b8:	ldr	x0, [x0]
     6bc:	add	x1, x0, #0x10
     6c0:	ldr	x0, [sp, #40]
     6c4:	str	x1, [x0]
     6c8:	ldr	x0, [sp, #40]
     6cc:	str	xzr, [x0, #8]
     6d0:	ldr	x0, [sp, #40]
     6d4:	mov	w1, #0x1                   	// #1
     6d8:	strb	w1, [x0, #16]
     6dc:	ldr	x0, [sp, #40]
     6e0:	str	xzr, [x0, #24]
     6e4:	ldr	x0, [sp, #40]
     6e8:	str	xzr, [x0, #32]
     6ec:	ldr	x0, [sp, #40]
     6f0:	str	xzr, [x0, #40]
     6f4:	ldr	x0, [sp, #40]
     6f8:	bl	5fc <_ZN13NCursesWindow12constructingEv>
     6fc:	ldr	w3, [sp, #24]
     700:	ldr	w2, [sp, #28]
     704:	ldr	w1, [sp, #32]
     708:	ldr	w0, [sp, #36]
     70c:	bl	0 <newwin>
     710:	mov	x1, x0
     714:	ldr	x0, [sp, #40]
     718:	str	x1, [x0, #8]
     71c:	ldr	x0, [sp, #40]
     720:	ldr	x0, [x0, #8]
     724:	cmp	x0, #0x0
     728:	b.ne	73c <_ZN13NCursesWindowC1Eiiii+0xa4>  // b.any
     72c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     730:	add	x1, x0, #0x0
     734:	ldr	x0, [sp, #40]
     738:	bl	548 <_ZNK13NCursesWindow11err_handlerEPKc>
     73c:	ldr	x0, [sp, #40]
     740:	bl	518 <_ZN13NCursesWindow12set_keyboardEv>
     744:	nop
     748:	ldp	x29, x30, [sp], #48
     74c:	ret

0000000000000750 <_ZN13NCursesWindowC1EP7_win_st>:
     750:	stp	x29, x30, [sp, #-32]!
     754:	mov	x29, sp
     758:	str	x0, [sp, #24]
     75c:	str	x1, [sp, #16]
     760:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     764:	ldr	x0, [x0]
     768:	add	x1, x0, #0x10
     76c:	ldr	x0, [sp, #24]
     770:	str	x1, [x0]
     774:	ldr	x0, [sp, #24]
     778:	str	xzr, [x0, #8]
     77c:	ldr	x0, [sp, #24]
     780:	strb	wzr, [x0, #16]
     784:	ldr	x0, [sp, #24]
     788:	str	xzr, [x0, #24]
     78c:	ldr	x0, [sp, #24]
     790:	str	xzr, [x0, #32]
     794:	ldr	x0, [sp, #24]
     798:	str	xzr, [x0, #40]
     79c:	ldr	x0, [sp, #24]
     7a0:	bl	5fc <_ZN13NCursesWindow12constructingEv>
     7a4:	ldr	x0, [sp, #16]
     7a8:	cmp	x0, #0x0
     7ac:	b.eq	7b8 <_ZN13NCursesWindowC1EP7_win_st+0x68>  // b.none
     7b0:	ldr	x0, [sp, #16]
     7b4:	b	7c4 <_ZN13NCursesWindowC1EP7_win_st+0x74>
     7b8:	adrp	x0, 0 <stdscr>
     7bc:	ldr	x0, [x0]
     7c0:	ldr	x0, [x0]
     7c4:	ldr	x1, [sp, #24]
     7c8:	str	x0, [x1, #8]
     7cc:	ldr	x0, [sp, #24]
     7d0:	bl	518 <_ZN13NCursesWindow12set_keyboardEv>
     7d4:	nop
     7d8:	ldp	x29, x30, [sp], #32
     7dc:	ret

00000000000007e0 <_ZN13NCursesWindowC1ERS_iiiic>:
     7e0:	stp	x29, x30, [sp, #-64]!
     7e4:	mov	x29, sp
     7e8:	str	x0, [sp, #56]
     7ec:	str	x1, [sp, #48]
     7f0:	str	w2, [sp, #44]
     7f4:	str	w3, [sp, #40]
     7f8:	str	w4, [sp, #36]
     7fc:	str	w5, [sp, #32]
     800:	strb	w6, [sp, #31]
     804:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     808:	ldr	x0, [x0]
     80c:	add	x1, x0, #0x10
     810:	ldr	x0, [sp, #56]
     814:	str	x1, [x0]
     818:	ldr	x0, [sp, #56]
     81c:	str	xzr, [x0, #8]
     820:	ldr	x0, [sp, #56]
     824:	mov	w1, #0x1                   	// #1
     828:	strb	w1, [x0, #16]
     82c:	ldr	x0, [sp, #56]
     830:	str	xzr, [x0, #24]
     834:	ldr	x0, [sp, #56]
     838:	str	xzr, [x0, #32]
     83c:	ldr	x0, [sp, #56]
     840:	str	xzr, [x0, #40]
     844:	ldr	x0, [sp, #56]
     848:	bl	5fc <_ZN13NCursesWindow12constructingEv>
     84c:	ldrb	w0, [sp, #31]
     850:	cmp	w0, #0x61
     854:	b.ne	888 <_ZN13NCursesWindowC1ERS_iiiic+0xa8>  // b.any
     858:	ldr	x0, [sp, #48]
     85c:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     860:	mov	w1, w0
     864:	ldr	w0, [sp, #36]
     868:	sub	w0, w0, w1
     86c:	str	w0, [sp, #36]
     870:	ldr	x0, [sp, #48]
     874:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     878:	mov	w1, w0
     87c:	ldr	w0, [sp, #32]
     880:	sub	w0, w0, w1
     884:	str	w0, [sp, #32]
     888:	ldr	x0, [sp, #48]
     88c:	ldr	x0, [x0, #8]
     890:	ldr	w4, [sp, #32]
     894:	ldr	w3, [sp, #36]
     898:	ldr	w2, [sp, #40]
     89c:	ldr	w1, [sp, #44]
     8a0:	bl	0 <derwin>
     8a4:	mov	x1, x0
     8a8:	ldr	x0, [sp, #56]
     8ac:	str	x1, [x0, #8]
     8b0:	ldr	x0, [sp, #56]
     8b4:	ldr	x0, [x0, #8]
     8b8:	cmp	x0, #0x0
     8bc:	b.ne	8d0 <_ZN13NCursesWindowC1ERS_iiiic+0xf0>  // b.any
     8c0:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     8c4:	add	x1, x0, #0x0
     8c8:	ldr	x0, [sp, #56]
     8cc:	bl	548 <_ZNK13NCursesWindow11err_handlerEPKc>
     8d0:	ldr	x0, [sp, #56]
     8d4:	ldr	x1, [sp, #48]
     8d8:	str	x1, [x0, #24]
     8dc:	ldr	x0, [sp, #48]
     8e0:	ldr	x1, [x0, #32]
     8e4:	ldr	x0, [sp, #56]
     8e8:	str	x1, [x0, #40]
     8ec:	ldr	x0, [sp, #48]
     8f0:	ldr	x1, [sp, #56]
     8f4:	str	x1, [x0, #32]
     8f8:	nop
     8fc:	ldp	x29, x30, [sp], #64
     900:	ret

0000000000000904 <_ZN13NCursesWindowC1ERS_b>:
     904:	stp	x29, x30, [sp, #-64]!
     908:	mov	x29, sp
     90c:	str	x0, [sp, #40]
     910:	str	x1, [sp, #32]
     914:	strb	w2, [sp, #31]
     918:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     91c:	ldr	x0, [x0]
     920:	add	x1, x0, #0x10
     924:	ldr	x0, [sp, #40]
     928:	str	x1, [x0]
     92c:	ldr	x0, [sp, #40]
     930:	str	xzr, [x0, #8]
     934:	ldr	x0, [sp, #40]
     938:	mov	w1, #0x1                   	// #1
     93c:	strb	w1, [x0, #16]
     940:	ldr	x0, [sp, #40]
     944:	str	xzr, [x0, #24]
     948:	ldr	x0, [sp, #40]
     94c:	str	xzr, [x0, #32]
     950:	ldr	x0, [sp, #40]
     954:	str	xzr, [x0, #40]
     958:	ldr	x0, [sp, #40]
     95c:	bl	5fc <_ZN13NCursesWindow12constructingEv>
     960:	ldr	x0, [sp, #32]
     964:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     968:	str	w0, [sp, #60]
     96c:	ldr	x0, [sp, #32]
     970:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     974:	str	w0, [sp, #56]
     978:	ldr	x0, [sp, #32]
     97c:	ldr	x5, [x0, #8]
     980:	ldr	w0, [sp, #60]
     984:	sub	w1, w0, #0x2
     988:	ldr	w0, [sp, #56]
     98c:	sub	w0, w0, #0x2
     990:	mov	w4, #0x1                   	// #1
     994:	mov	w3, #0x1                   	// #1
     998:	mov	w2, w0
     99c:	mov	x0, x5
     9a0:	bl	0 <derwin>
     9a4:	mov	x1, x0
     9a8:	ldr	x0, [sp, #40]
     9ac:	str	x1, [x0, #8]
     9b0:	ldr	x0, [sp, #40]
     9b4:	ldr	x0, [x0, #8]
     9b8:	cmp	x0, #0x0
     9bc:	b.ne	9d0 <_ZN13NCursesWindowC1ERS_b+0xcc>  // b.any
     9c0:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     9c4:	add	x1, x0, #0x0
     9c8:	ldr	x0, [sp, #40]
     9cc:	bl	548 <_ZNK13NCursesWindow11err_handlerEPKc>
     9d0:	ldr	x0, [sp, #40]
     9d4:	ldr	x1, [sp, #32]
     9d8:	str	x1, [x0, #24]
     9dc:	ldr	x0, [sp, #32]
     9e0:	ldr	x1, [x0, #32]
     9e4:	ldr	x0, [sp, #40]
     9e8:	str	x1, [x0, #40]
     9ec:	ldr	x0, [sp, #32]
     9f0:	ldr	x1, [sp, #40]
     9f4:	str	x1, [x0, #32]
     9f8:	ldr	x0, [sp, #40]
     9fc:	str	xzr, [x0, #32]
     a00:	ldrb	w0, [sp, #31]
     a04:	cmp	w0, #0x0
     a08:	b.eq	a24 <_ZN13NCursesWindowC1ERS_b+0x120>  // b.none
     a0c:	mov	w2, #0x0                   	// #0
     a10:	mov	w1, #0x0                   	// #0
     a14:	ldr	x0, [sp, #32]
     a18:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     a1c:	ldr	x0, [sp, #32]
     a20:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     a24:	nop
     a28:	ldp	x29, x30, [sp], #64
     a2c:	ret

0000000000000a30 <_ZN13NCursesWindow5CloneEv>:
     a30:	stp	x29, x30, [sp, #-64]!
     a34:	mov	x29, sp
     a38:	str	x19, [sp, #16]
     a3c:	mov	x19, x8
     a40:	str	x0, [sp, #40]
     a44:	ldr	x0, [sp, #40]
     a48:	ldr	x0, [x0, #8]
     a4c:	bl	0 <dupwin>
     a50:	str	x0, [sp, #56]
     a54:	ldr	x1, [sp, #56]
     a58:	mov	x0, x19
     a5c:	bl	750 <_ZN13NCursesWindowC1EP7_win_st>
     a60:	ldr	x0, [sp, #40]
     a64:	ldr	x0, [x0, #32]
     a68:	str	x0, [x19, #32]
     a6c:	ldr	x0, [sp, #40]
     a70:	ldr	x0, [x0, #40]
     a74:	str	x0, [x19, #40]
     a78:	ldr	x0, [sp, #40]
     a7c:	ldr	x0, [x0, #24]
     a80:	str	x0, [x19, #24]
     a84:	ldr	x0, [sp, #40]
     a88:	ldrb	w0, [x0, #16]
     a8c:	strb	w0, [x19, #16]
     a90:	nop
     a94:	mov	x0, x19
     a98:	ldr	x19, [sp, #16]
     a9c:	ldp	x29, x30, [sp], #64
     aa0:	ret

0000000000000aa4 <_ZN13NCursesWindowC1EP7_win_sti>:
     aa4:	stp	x29, x30, [sp, #-48]!
     aa8:	mov	x29, sp
     aac:	str	x0, [sp, #40]
     ab0:	str	x1, [sp, #32]
     ab4:	str	w2, [sp, #28]
     ab8:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     abc:	ldr	x0, [x0]
     ac0:	add	x1, x0, #0x10
     ac4:	ldr	x0, [sp, #40]
     ac8:	str	x1, [x0]
     acc:	ldr	x0, [sp, #40]
     ad0:	str	xzr, [x0, #8]
     ad4:	ldr	x0, [sp, #40]
     ad8:	strb	wzr, [x0, #16]
     adc:	ldr	x0, [sp, #40]
     ae0:	str	xzr, [x0, #24]
     ae4:	ldr	x0, [sp, #40]
     ae8:	str	xzr, [x0, #32]
     aec:	ldr	x0, [sp, #40]
     af0:	str	xzr, [x0, #40]
     af4:	bl	58c <_ZN13NCursesWindow10initializeEv>
     af8:	ldr	x0, [sp, #40]
     afc:	ldr	x1, [sp, #32]
     b00:	str	x1, [x0, #8]
     b04:	nop
     b08:	ldp	x29, x30, [sp], #48
     b0c:	ret

0000000000000b10 <_nc_xx_ripoff_init>:
     b10:	stp	x29, x30, [sp, #-64]!
     b14:	mov	x29, sp
     b18:	stp	x19, x20, [sp, #16]
     b1c:	str	x0, [sp, #40]
     b20:	str	w1, [sp, #36]
     b24:	mov	w0, #0xffffffff            	// #-1
     b28:	str	w0, [sp, #60]
     b2c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     b30:	add	x0, x0, #0x0
     b34:	ldr	x0, [x0]
     b38:	add	x2, x0, #0x8
     b3c:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     b40:	add	x1, x1, #0x0
     b44:	str	x2, [x1]
     b48:	ldr	x0, [x0]
     b4c:	str	x0, [sp, #48]
     b50:	ldr	x0, [sp, #48]
     b54:	cmp	x0, #0x0
     b58:	b.eq	b88 <_nc_xx_ripoff_init+0x78>  // b.none
     b5c:	mov	x0, #0x30                  	// #48
     b60:	bl	0 <_Znwm>
     b64:	mov	x19, x0
     b68:	ldr	w2, [sp, #36]
     b6c:	ldr	x1, [sp, #40]
     b70:	mov	x0, x19
     b74:	bl	aa4 <_ZN13NCursesWindowC1EP7_win_sti>
     b78:	ldr	x1, [sp, #48]
     b7c:	mov	x0, x19
     b80:	blr	x1
     b84:	str	w0, [sp, #60]
     b88:	ldr	w0, [sp, #60]
     b8c:	b	ba8 <_nc_xx_ripoff_init+0x98>
     b90:	mov	x20, x0
     b94:	mov	x1, #0x30                  	// #48
     b98:	mov	x0, x19
     b9c:	bl	0 <_ZdlPvm>
     ba0:	mov	x0, x20
     ba4:	bl	0 <_Unwind_Resume>
     ba8:	ldp	x19, x20, [sp, #16]
     bac:	ldp	x29, x30, [sp], #64
     bb0:	ret

0000000000000bb4 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>:
     bb4:	stp	x29, x30, [sp, #-48]!
     bb8:	mov	x29, sp
     bbc:	str	w0, [sp, #28]
     bc0:	str	x1, [sp, #16]
     bc4:	adrp	x0, b10 <_nc_xx_ripoff_init>
     bc8:	ldr	x1, [x0]
     bcc:	ldr	w0, [sp, #28]
     bd0:	bl	0 <_nc_ripoffline>
     bd4:	str	w0, [sp, #44]
     bd8:	ldr	w0, [sp, #44]
     bdc:	cmp	w0, #0x0
     be0:	b.ne	c2c <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x78>  // b.any
     be4:	ldr	x0, [sp, #16]
     be8:	cmp	x0, #0x0
     bec:	b.eq	c2c <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x78>  // b.none
     bf0:	ldr	w0, [sp, #28]
     bf4:	cmp	w0, #0x0
     bf8:	b.eq	c2c <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x78>  // b.none
     bfc:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     c00:	add	x0, x0, #0x0
     c04:	ldr	w0, [x0]
     c08:	add	w2, w0, #0x1
     c0c:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     c10:	add	x1, x1, #0x0
     c14:	str	w2, [x1]
     c18:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     c1c:	add	x1, x1, #0x0
     c20:	sxtw	x0, w0
     c24:	ldr	x2, [sp, #16]
     c28:	str	x2, [x1, x0, lsl #3]
     c2c:	ldr	w0, [sp, #44]
     c30:	ldp	x29, x30, [sp], #48
     c34:	ret

0000000000000c38 <_ZN13NCursesWindow12isDescendantERS_>:
     c38:	stp	x29, x30, [sp, #-48]!
     c3c:	mov	x29, sp
     c40:	str	x0, [sp, #24]
     c44:	str	x1, [sp, #16]
     c48:	strb	wzr, [sp, #47]
     c4c:	ldr	x0, [sp, #24]
     c50:	ldr	x0, [x0, #32]
     c54:	str	x0, [sp, #32]
     c58:	ldr	x0, [sp, #32]
     c5c:	cmp	x0, #0x0
     c60:	b.eq	cbc <_ZN13NCursesWindow12isDescendantERS_+0x84>  // b.none
     c64:	ldr	x1, [sp, #32]
     c68:	ldr	x0, [sp, #16]
     c6c:	cmp	x1, x0
     c70:	b.eq	c8c <_ZN13NCursesWindow12isDescendantERS_+0x54>  // b.none
     c74:	ldr	x1, [sp, #16]
     c78:	ldr	x0, [sp, #32]
     c7c:	bl	c38 <_ZN13NCursesWindow12isDescendantERS_>
     c80:	and	w0, w0, #0xff
     c84:	cmp	w0, #0x0
     c88:	b.eq	c94 <_ZN13NCursesWindow12isDescendantERS_+0x5c>  // b.none
     c8c:	mov	w0, #0x1                   	// #1
     c90:	b	c98 <_ZN13NCursesWindow12isDescendantERS_+0x60>
     c94:	mov	w0, #0x0                   	// #0
     c98:	cmp	w0, #0x0
     c9c:	b.eq	cac <_ZN13NCursesWindow12isDescendantERS_+0x74>  // b.none
     ca0:	mov	w0, #0x1                   	// #1
     ca4:	strb	w0, [sp, #47]
     ca8:	b	cbc <_ZN13NCursesWindow12isDescendantERS_+0x84>
     cac:	ldr	x0, [sp, #32]
     cb0:	ldr	x0, [x0, #40]
     cb4:	str	x0, [sp, #32]
     cb8:	b	c58 <_ZN13NCursesWindow12isDescendantERS_+0x20>
     cbc:	ldrb	w0, [sp, #47]
     cc0:	ldp	x29, x30, [sp], #48
     cc4:	ret

0000000000000cc8 <_ZN13NCursesWindow15kill_subwindowsEv>:
     cc8:	stp	x29, x30, [sp, #-48]!
     ccc:	mov	x29, sp
     cd0:	str	x0, [sp, #24]
     cd4:	ldr	x0, [sp, #24]
     cd8:	ldr	x0, [x0, #32]
     cdc:	str	x0, [sp, #40]
     ce0:	ldr	x0, [sp, #24]
     ce4:	str	xzr, [x0, #32]
     ce8:	ldr	x0, [sp, #40]
     cec:	cmp	x0, #0x0
     cf0:	b.eq	d5c <_ZN13NCursesWindow15kill_subwindowsEv+0x94>  // b.none
     cf4:	ldr	x0, [sp, #40]
     cf8:	ldr	x0, [x0, #40]
     cfc:	str	x0, [sp, #32]
     d00:	ldr	x0, [sp, #40]
     d04:	bl	cc8 <_ZN13NCursesWindow15kill_subwindowsEv>
     d08:	ldr	x0, [sp, #40]
     d0c:	ldrb	w0, [x0, #16]
     d10:	cmp	w0, #0x0
     d14:	b.eq	d34 <_ZN13NCursesWindow15kill_subwindowsEv+0x6c>  // b.none
     d18:	ldr	x0, [sp, #40]
     d1c:	ldr	x0, [x0, #8]
     d20:	cmp	x0, #0x0
     d24:	b.eq	d34 <_ZN13NCursesWindow15kill_subwindowsEv+0x6c>  // b.none
     d28:	ldr	x0, [sp, #40]
     d2c:	ldr	x0, [x0, #8]
     d30:	bl	0 <delwin>
     d34:	ldr	x0, [sp, #40]
     d38:	cmp	x0, #0x0
     d3c:	b.eq	d50 <_ZN13NCursesWindow15kill_subwindowsEv+0x88>  // b.none
     d40:	ldr	x1, [x0]
     d44:	add	x1, x1, #0x10
     d48:	ldr	x1, [x1]
     d4c:	blr	x1
     d50:	ldr	x0, [sp, #32]
     d54:	str	x0, [sp, #40]
     d58:	b	ce8 <_ZN13NCursesWindow15kill_subwindowsEv+0x20>
     d5c:	nop
     d60:	ldp	x29, x30, [sp], #48
     d64:	ret

0000000000000d68 <_ZN13NCursesWindowD1Ev>:
     d68:	stp	x29, x30, [sp, #-48]!
     d6c:	mov	x29, sp
     d70:	str	x0, [sp, #24]
     d74:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     d78:	ldr	x0, [x0]
     d7c:	add	x1, x0, #0x10
     d80:	ldr	x0, [sp, #24]
     d84:	str	x1, [x0]
     d88:	ldr	x0, [sp, #24]
     d8c:	bl	cc8 <_ZN13NCursesWindow15kill_subwindowsEv>
     d90:	ldr	x0, [sp, #24]
     d94:	ldr	x0, [x0, #24]
     d98:	cmp	x0, #0x0
     d9c:	b.eq	e20 <_ZN13NCursesWindowD1Ev+0xb8>  // b.none
     da0:	ldr	x0, [sp, #24]
     da4:	ldr	x0, [x0, #24]
     da8:	ldr	x0, [x0, #32]
     dac:	str	x0, [sp, #40]
     db0:	str	xzr, [sp, #32]
     db4:	ldr	x0, [sp, #40]
     db8:	cmp	x0, #0x0
     dbc:	b.eq	e20 <_ZN13NCursesWindowD1Ev+0xb8>  // b.none
     dc0:	ldr	x1, [sp, #40]
     dc4:	ldr	x0, [sp, #24]
     dc8:	cmp	x1, x0
     dcc:	b.ne	e08 <_ZN13NCursesWindowD1Ev+0xa0>  // b.any
     dd0:	ldr	x0, [sp, #32]
     dd4:	cmp	x0, #0x0
     dd8:	b.eq	df0 <_ZN13NCursesWindowD1Ev+0x88>  // b.none
     ddc:	ldr	x0, [sp, #40]
     de0:	ldr	x1, [x0, #40]
     de4:	ldr	x0, [sp, #32]
     de8:	str	x1, [x0, #40]
     dec:	b	e20 <_ZN13NCursesWindowD1Ev+0xb8>
     df0:	ldr	x0, [sp, #24]
     df4:	ldr	x0, [x0, #24]
     df8:	ldr	x1, [sp, #40]
     dfc:	ldr	x1, [x1, #40]
     e00:	str	x1, [x0, #32]
     e04:	b	e20 <_ZN13NCursesWindowD1Ev+0xb8>
     e08:	ldr	x0, [sp, #40]
     e0c:	str	x0, [sp, #32]
     e10:	ldr	x0, [sp, #40]
     e14:	ldr	x0, [x0, #40]
     e18:	str	x0, [sp, #40]
     e1c:	b	db4 <_ZN13NCursesWindowD1Ev+0x4c>
     e20:	ldr	x0, [sp, #24]
     e24:	ldrb	w0, [x0, #16]
     e28:	cmp	w0, #0x0
     e2c:	b.eq	e4c <_ZN13NCursesWindowD1Ev+0xe4>  // b.none
     e30:	ldr	x0, [sp, #24]
     e34:	ldr	x0, [x0, #8]
     e38:	cmp	x0, #0x0
     e3c:	b.eq	e4c <_ZN13NCursesWindowD1Ev+0xe4>  // b.none
     e40:	ldr	x0, [sp, #24]
     e44:	ldr	x0, [x0, #8]
     e48:	bl	0 <delwin>
     e4c:	ldr	x0, [sp, #24]
     e50:	ldrb	w0, [x0, #16]
     e54:	cmp	w0, #0x0
     e58:	b.eq	eb8 <_ZN13NCursesWindowD1Ev+0x150>  // b.none
     e5c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e60:	ldr	x0, [x0]
     e64:	ldr	x0, [x0]
     e68:	sub	x1, x0, #0x1
     e6c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e70:	ldr	x0, [x0]
     e74:	str	x1, [x0]
     e78:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e7c:	ldr	x0, [x0]
     e80:	ldr	x0, [x0]
     e84:	cmp	x0, #0x0
     e88:	b.ne	e94 <_ZN13NCursesWindowD1Ev+0x12c>  // b.any
     e8c:	bl	0 <endwin>
     e90:	b	eb8 <_ZN13NCursesWindowD1Ev+0x150>
     e94:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e98:	ldr	x0, [x0]
     e9c:	ldr	x0, [x0]
     ea0:	cmp	x0, #0x0
     ea4:	b.ge	eb8 <_ZN13NCursesWindowD1Ev+0x150>  // b.tcont
     ea8:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
     eac:	add	x1, x0, #0x0
     eb0:	ldr	x0, [sp, #24]
     eb4:	bl	548 <_ZNK13NCursesWindow11err_handlerEPKc>
     eb8:	nop
     ebc:	ldp	x29, x30, [sp], #48
     ec0:	ret

0000000000000ec4 <_ZN13NCursesWindowD0Ev>:
     ec4:	stp	x29, x30, [sp, #-32]!
     ec8:	mov	x29, sp
     ecc:	str	x0, [sp, #24]
     ed0:	ldr	x0, [sp, #24]
     ed4:	bl	d68 <_ZN13NCursesWindowD1Ev>
     ed8:	mov	x1, #0x30                  	// #48
     edc:	ldr	x0, [sp, #24]
     ee0:	bl	0 <_ZdlPvm>
     ee4:	ldp	x29, x30, [sp], #32
     ee8:	ret

0000000000000eec <_ZN13NCursesWindow9useColorsEv>:
     eec:	stp	x29, x30, [sp, #-16]!
     ef0:	mov	x29, sp
     ef4:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     ef8:	ldr	x0, [x0]
     efc:	ldr	w0, [x0]
     f00:	cmp	w0, #0x0
     f04:	b.ne	f68 <_ZN13NCursesWindow9useColorsEv+0x7c>  // b.any
     f08:	adrp	x0, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     f0c:	ldr	x0, [x0]
     f10:	ldrb	w0, [x0]
     f14:	cmp	w0, #0x0
     f18:	b.eq	f58 <_ZN13NCursesWindow9useColorsEv+0x6c>  // b.none
     f1c:	bl	0 <has_colors>
     f20:	and	w0, w0, #0xff
     f24:	cmp	w0, #0x0
     f28:	b.eq	f44 <_ZN13NCursesWindow9useColorsEv+0x58>  // b.none
     f2c:	bl	0 <start_color>
     f30:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     f34:	ldr	x0, [x0]
     f38:	mov	w1, #0x2                   	// #2
     f3c:	str	w1, [x0]
     f40:	b	f68 <_ZN13NCursesWindow9useColorsEv+0x7c>
     f44:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     f48:	ldr	x0, [x0]
     f4c:	mov	w1, #0x1                   	// #1
     f50:	str	w1, [x0]
     f54:	b	f68 <_ZN13NCursesWindow9useColorsEv+0x7c>
     f58:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     f5c:	ldr	x0, [x0]
     f60:	mov	w1, #0xffffffff            	// #-1
     f64:	str	w1, [x0]
     f68:	nop
     f6c:	ldp	x29, x30, [sp], #16
     f70:	ret

0000000000000f74 <_ZNK13NCursesWindow7getPairEv>:
     f74:	stp	x29, x30, [sp, #-32]!
     f78:	mov	x29, sp
     f7c:	str	x0, [sp, #24]
     f80:	ldr	x0, [sp, #24]
     f84:	ldr	x0, [x0, #8]
     f88:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
     f8c:	sxtw	x0, w0
     f90:	lsr	x0, x0, #8
     f94:	sxth	w0, w0
     f98:	and	w0, w0, #0xff
     f9c:	sxth	w0, w0
     fa0:	ldp	x29, x30, [sp], #32
     fa4:	ret

0000000000000fa8 <_ZNK13NCursesWindow8getcolorEi>:
     fa8:	stp	x29, x30, [sp, #-48]!
     fac:	mov	x29, sp
     fb0:	str	x0, [sp, #24]
     fb4:	str	w1, [sp, #20]
     fb8:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     fbc:	ldr	x0, [x0]
     fc0:	ldr	w0, [x0]
     fc4:	cmp	w0, #0x2
     fc8:	b.ne	1024 <_ZNK13NCursesWindow8getcolorEi+0x7c>  // b.any
     fcc:	ldr	x0, [sp, #24]
     fd0:	bl	f74 <_ZNK13NCursesWindow7getPairEv>
     fd4:	sxth	w3, w0
     fd8:	add	x1, sp, #0x2c
     fdc:	add	x0, sp, #0x2e
     fe0:	mov	x2, x1
     fe4:	mov	x1, x0
     fe8:	mov	w0, w3
     fec:	bl	0 <pair_content>
     ff0:	cmn	w0, #0x1
     ff4:	cset	w0, eq  // eq = none
     ff8:	and	w0, w0, #0xff
     ffc:	cmp	w0, #0x0
    1000:	b.eq	1030 <_ZNK13NCursesWindow8getcolorEi+0x88>  // b.none
    1004:	ldr	x0, [sp, #24]
    1008:	ldr	x0, [x0]
    100c:	ldr	x2, [x0]
    1010:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
    1014:	add	x1, x0, #0x0
    1018:	ldr	x0, [sp, #24]
    101c:	blr	x2
    1020:	b	1030 <_ZNK13NCursesWindow8getcolorEi+0x88>
    1024:	strh	wzr, [sp, #44]
    1028:	mov	w0, #0x7                   	// #7
    102c:	strh	w0, [sp, #46]
    1030:	ldr	w0, [sp, #20]
    1034:	cmp	w0, #0x0
    1038:	b.eq	1044 <_ZNK13NCursesWindow8getcolorEi+0x9c>  // b.none
    103c:	ldrsh	w0, [sp, #44]
    1040:	b	1048 <_ZNK13NCursesWindow8getcolorEi+0xa0>
    1044:	ldrsh	w0, [sp, #46]
    1048:	ldp	x29, x30, [sp], #48
    104c:	ret

0000000000001050 <_ZN13NCursesWindow14NumberOfColorsEv>:
    1050:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    1054:	ldr	x0, [x0]
    1058:	ldr	w0, [x0]
    105c:	cmp	w0, #0x2
    1060:	b.ne	1074 <_ZN13NCursesWindow14NumberOfColorsEv+0x24>  // b.any
    1064:	adrp	x0, 0 <COLORS>
    1068:	ldr	x0, [x0]
    106c:	ldr	w0, [x0]
    1070:	b	1078 <_ZN13NCursesWindow14NumberOfColorsEv+0x28>
    1074:	mov	w0, #0x1                   	// #1
    1078:	ret

000000000000107c <_ZNK13NCursesWindow8getcolorEv>:
    107c:	stp	x29, x30, [sp, #-32]!
    1080:	mov	x29, sp
    1084:	str	x0, [sp, #24]
    1088:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    108c:	ldr	x0, [x0]
    1090:	ldr	w0, [x0]
    1094:	cmp	w0, #0x2
    1098:	b.ne	10ac <_ZNK13NCursesWindow8getcolorEv+0x30>  // b.any
    109c:	ldr	x0, [sp, #24]
    10a0:	bl	f74 <_ZNK13NCursesWindow7getPairEv>
    10a4:	sxth	w0, w0
    10a8:	b	10b0 <_ZNK13NCursesWindow8getcolorEv+0x34>
    10ac:	mov	w0, #0x0                   	// #0
    10b0:	ldp	x29, x30, [sp], #32
    10b4:	ret

00000000000010b8 <_ZN13NCursesWindow10setpaletteEsss>:
    10b8:	stp	x29, x30, [sp, #-32]!
    10bc:	mov	x29, sp
    10c0:	strh	w0, [sp, #30]
    10c4:	strh	w1, [sp, #28]
    10c8:	strh	w2, [sp, #26]
    10cc:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    10d0:	ldr	x0, [x0]
    10d4:	ldr	w0, [x0]
    10d8:	cmp	w0, #0x2
    10dc:	b.ne	10f4 <_ZN13NCursesWindow10setpaletteEsss+0x3c>  // b.any
    10e0:	ldrh	w2, [sp, #28]
    10e4:	ldrh	w1, [sp, #30]
    10e8:	ldrh	w0, [sp, #26]
    10ec:	bl	0 <init_pair>
    10f0:	b	10f8 <_ZN13NCursesWindow10setpaletteEsss+0x40>
    10f4:	mov	w0, #0x0                   	// #0
    10f8:	ldp	x29, x30, [sp], #32
    10fc:	ret

0000000000001100 <_ZN13NCursesWindow10setpaletteEss>:
    1100:	stp	x29, x30, [sp, #-32]!
    1104:	mov	x29, sp
    1108:	str	x0, [sp, #24]
    110c:	strh	w1, [sp, #22]
    1110:	strh	w2, [sp, #20]
    1114:	ldr	x0, [sp, #24]
    1118:	bl	f74 <_ZNK13NCursesWindow7getPairEv>
    111c:	sxth	w0, w0
    1120:	mov	w2, w0
    1124:	ldrh	w1, [sp, #20]
    1128:	ldrh	w0, [sp, #22]
    112c:	bl	10b8 <_ZN13NCursesWindow10setpaletteEsss>
    1130:	ldp	x29, x30, [sp], #32
    1134:	ret

0000000000001138 <_ZN13NCursesWindow8setcolorEs>:
    1138:	stp	x29, x30, [sp, #-32]!
    113c:	mov	x29, sp
    1140:	str	x0, [sp, #24]
    1144:	strh	w1, [sp, #22]
    1148:	adrp	x0, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    114c:	ldr	x0, [x0]
    1150:	ldr	w0, [x0]
    1154:	cmp	w0, #0x2
    1158:	b.ne	11c0 <_ZN13NCursesWindow8setcolorEs+0x88>  // b.any
    115c:	ldrsh	w0, [sp, #22]
    1160:	cmp	w0, #0x0
    1164:	b.le	1180 <_ZN13NCursesWindow8setcolorEs+0x48>
    1168:	ldrsh	w1, [sp, #22]
    116c:	adrp	x0, 0 <COLOR_PAIRS>
    1170:	ldr	x0, [x0]
    1174:	ldr	w0, [x0]
    1178:	cmp	w1, w0
    117c:	b.le	119c <_ZN13NCursesWindow8setcolorEs+0x64>
    1180:	ldr	x0, [sp, #24]
    1184:	ldr	x0, [x0]
    1188:	ldr	x2, [x0]
    118c:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
    1190:	add	x1, x0, #0x0
    1194:	ldr	x0, [sp, #24]
    1198:	blr	x2
    119c:	mov	w1, #0xff00                	// #65280
    11a0:	ldr	x0, [sp, #24]
    11a4:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
    11a8:	ldrsh	w0, [sp, #22]
    11ac:	lsl	w0, w0, #8
    11b0:	and	w0, w0, #0xffff
    11b4:	mov	w1, w0
    11b8:	ldr	x0, [sp, #24]
    11bc:	bl	0 <_ZN13NCursesWindow5scanwEPKcz>
    11c0:	mov	w0, #0x0                   	// #0
    11c4:	ldp	x29, x30, [sp], #32
    11c8:	ret

00000000000011cc <_ZNK13NCursesWindow9has_mouseEv>:
    11cc:	stp	x29, x30, [sp, #-32]!
    11d0:	mov	x29, sp
    11d4:	str	x0, [sp, #24]
    11d8:	mov	w0, #0x199                 	// #409
    11dc:	bl	0 <has_key>
    11e0:	cmp	w0, #0x0
    11e4:	b.ne	11f8 <_ZNK13NCursesWindow9has_mouseEv+0x2c>  // b.any
    11e8:	bl	0 <has_mouse>
    11ec:	and	w0, w0, #0xff
    11f0:	cmp	w0, #0x0
    11f4:	b.eq	1200 <_ZNK13NCursesWindow9has_mouseEv+0x34>  // b.none
    11f8:	mov	w0, #0x1                   	// #1
    11fc:	b	1204 <_ZNK13NCursesWindow9has_mouseEv+0x38>
    1200:	mov	w0, #0x0                   	// #0
    1204:	cmp	w0, #0x0
    1208:	cset	w0, ne  // ne = any
    120c:	and	w0, w0, #0xff
    1210:	ldp	x29, x30, [sp], #32
    1214:	ret

0000000000001218 <_Z41__static_initialization_and_destruction_0ii>:
    1218:	stp	x29, x30, [sp, #-32]!
    121c:	mov	x29, sp
    1220:	str	w0, [sp, #28]
    1224:	str	w1, [sp, #24]
    1228:	ldr	w0, [sp, #28]
    122c:	cmp	w0, #0x1
    1230:	b.ne	126c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
    1234:	ldr	w1, [sp, #24]
    1238:	mov	w0, #0xffff                	// #65535
    123c:	cmp	w1, w0
    1240:	b.ne	126c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
    1244:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
    1248:	add	x0, x0, #0x0
    124c:	bl	0 <_ZNSt8ios_base4InitC1Ev>
    1250:	adrp	x0, 0 <__dso_handle>
    1254:	add	x2, x0, #0x0
    1258:	adrp	x0, 0 <_ZN13NCursesWindow5scanwEPKcz>
    125c:	add	x1, x0, #0x0
    1260:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
    1264:	ldr	x0, [x0]
    1268:	bl	0 <__cxa_atexit>
    126c:	nop
    1270:	ldp	x29, x30, [sp], #32
    1274:	ret

0000000000001278 <_GLOBAL__sub_I_cursesw.cc>:
    1278:	stp	x29, x30, [sp, #-16]!
    127c:	mov	x29, sp
    1280:	mov	w1, #0xffff                	// #65535
    1284:	mov	w0, #0x1                   	// #1
    1288:	bl	1218 <_Z41__static_initialization_and_destruction_0ii>
    128c:	ldp	x29, x30, [sp], #16
    1290:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKc:

0000000000000000 <_ZN16NCursesExceptionC1EPKc>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKc>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #8]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #8]
  24:	ldr	x1, [sp]
  28:	str	x1, [x0, #8]
  2c:	ldr	x0, [sp, #8]
  30:	mov	w1, #0xffffffff            	// #-1
  34:	str	w1, [x0, #16]
  38:	nop
  3c:	add	sp, sp, #0x10
  40:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._Z12CUR_getattrsP7_win_st:

0000000000000000 <_Z12CUR_getattrsP7_win_st>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	cmp	x0, #0x0
  10:	b.eq	20 <_Z12CUR_getattrsP7_win_st+0x20>  // b.none
  14:	ldr	x0, [sp, #8]
  18:	ldr	w0, [x0, #16]
  1c:	b	24 <_Z12CUR_getattrsP7_win_st+0x24>
  20:	mov	w0, #0x0                   	// #0
  24:	add	sp, sp, #0x10
  28:	ret

Disassembly of section .text._Z12CUR_wattroffP7_win_sti:

0000000000000000 <_Z12CUR_wattroffP7_win_sti>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	w0, [sp, #20]
  14:	mov	x2, #0x0                   	// #0
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <wattr_off>
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._Z12CUR_wattrsetP7_win_sti:

0000000000000000 <_Z12CUR_wattrsetP7_win_sti>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	40 <_Z12CUR_wattrsetP7_win_sti+0x40>  // b.none
  18:	ldrsw	x0, [sp, #4]
  1c:	lsr	x0, x0, #8
  20:	and	w1, w0, #0xff
  24:	ldr	x0, [sp, #8]
  28:	str	w1, [x0, #116]
  2c:	ldr	w1, [sp, #4]
  30:	ldr	x0, [sp, #8]
  34:	str	w1, [x0, #16]
  38:	mov	w0, #0x0                   	// #0
  3c:	b	44 <_Z12CUR_wattrsetP7_win_sti+0x44>
  40:	mov	w0, #0xffffffff            	// #-1
  44:	add	sp, sp, #0x10
  48:	ret

Disassembly of section .text._ZNK13NCursesWindow6heightEv:

0000000000000000 <_ZNK13NCursesWindow6heightEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow6heightEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow5widthEv:

0000000000000000 <_ZNK13NCursesWindow5widthEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow5widthEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow4begxEv:

0000000000000000 <_ZNK13NCursesWindow4begxEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	28 <_ZNK13NCursesWindow4begxEv+0x28>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #10]
  24:	b	2c <_ZNK13NCursesWindow4begxEv+0x2c>
  28:	mov	w0, #0xffffffff            	// #-1
  2c:	add	sp, sp, #0x10
  30:	ret

Disassembly of section .text._ZNK13NCursesWindow4begyEv:

0000000000000000 <_ZNK13NCursesWindow4begyEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	28 <_ZNK13NCursesWindow4begyEv+0x28>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #8]
  24:	b	2c <_ZNK13NCursesWindow4begyEv+0x2c>
  28:	mov	w0, #0xffffffff            	// #-1
  2c:	add	sp, sp, #0x10
  30:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxxEv:

0000000000000000 <_ZNK13NCursesWindow4maxxEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxxEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #6]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxxEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxxEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxxEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #6]
  54:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxyEv:

0000000000000000 <_ZNK13NCursesWindow4maxyEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxyEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #4]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxyEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxyEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxyEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #4]
  54:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	str	w2, [sp, #16]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x0, [x0, #8]
  1c:	ldr	w2, [sp, #16]
  20:	ldr	w1, [sp, #20]
  24:	bl	0 <mvwin>
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN13NCursesWindow11CUR_attroffEj:

0000000000000000 <_ZN13NCursesWindow11CUR_attroffEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <_ZN13NCursesWindow11CUR_attroffEj>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow11CUR_attrsetEj:

0000000000000000 <_ZN13NCursesWindow11CUR_attrsetEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <_ZN13NCursesWindow11CUR_attrsetEj>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow3boxEjj:

0000000000000000 <_ZN13NCursesWindow3boxEjj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	str	w2, [sp, #32]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #8]
  20:	str	wzr, [sp]
  24:	mov	w7, #0x0                   	// #0
  28:	mov	w6, #0x0                   	// #0
  2c:	mov	w5, #0x0                   	// #0
  30:	ldr	w4, [sp, #32]
  34:	ldr	w3, [sp, #32]
  38:	ldr	w2, [sp, #36]
  3c:	ldr	w1, [sp, #36]
  40:	bl	0 <wborder>
  44:	ldp	x29, x30, [sp, #16]
  48:	add	sp, sp, #0x30
  4c:	ret

Disassembly of section .text._ZN13NCursesWindow12CUR_touchwinEv:

0000000000000000 <_ZN13NCursesWindow12CUR_touchwinEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	ldr	x19, [x0, #8]
  18:	ldr	x0, [sp, #40]
  1c:	bl	0 <_ZN13NCursesWindow12CUR_touchwinEv>
  20:	mov	w3, #0x1                   	// #1
  24:	mov	w2, w0
  28:	mov	w1, #0x0                   	// #0
  2c:	mov	x0, x19
  30:	bl	0 <wtouchln>
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN13NCursesWindow6keypadEb:

0000000000000000 <_ZN13NCursesWindow6keypadEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <keypad>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow4metaEb:

0000000000000000 <_ZN13NCursesWindow4metaEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <meta>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow7refreshEv:

0000000000000000 <_ZN13NCursesWindow7refreshEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <wrefresh>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN13NCursesWindow11noutrefreshEv:

0000000000000000 <_ZN13NCursesWindow11noutrefreshEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <wnoutrefresh>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

cursespad.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN10NCursesPadC1Eii>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	str	w2, [sp, #32]
  18:	ldr	x0, [sp, #40]
  1c:	bl	0 <_ZN13NCursesWindowC2Ev>
  20:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
  24:	ldr	x0, [x0]
  28:	add	x1, x0, #0x10
  2c:	ldr	x0, [sp, #40]
  30:	str	x1, [x0]
  34:	ldr	x0, [sp, #40]
  38:	str	xzr, [x0, #48]
  3c:	ldr	x0, [sp, #40]
  40:	str	xzr, [x0, #56]
  44:	ldr	x0, [sp, #40]
  48:	str	wzr, [x0, #64]
  4c:	ldr	x0, [sp, #40]
  50:	str	wzr, [x0, #68]
  54:	ldr	x0, [sp, #40]
  58:	str	wzr, [x0, #72]
  5c:	ldr	x0, [sp, #40]
  60:	str	wzr, [x0, #76]
  64:	ldr	w1, [sp, #32]
  68:	ldr	w0, [sp, #36]
  6c:	bl	0 <newpad>
  70:	mov	x1, x0
  74:	ldr	x0, [sp, #40]
  78:	str	x1, [x0, #8]
  7c:	ldr	x0, [sp, #40]
  80:	ldr	x0, [x0, #8]
  84:	cmp	x0, #0x0
  88:	b.ne	bc <_ZN10NCursesPadC1Eii+0xbc>  // b.any
  8c:	adrp	x0, 0 <_ZN13NCursesWindow5countE>
  90:	ldr	x0, [x0]
  94:	ldr	x0, [x0]
  98:	sub	x1, x0, #0x1
  9c:	adrp	x0, 0 <_ZN13NCursesWindow5countE>
  a0:	ldr	x0, [x0]
  a4:	str	x1, [x0]
  a8:	ldr	x2, [sp, #40]
  ac:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
  b0:	add	x1, x0, #0x0
  b4:	mov	x0, x2
  b8:	bl	0 <_ZNK13NCursesWindow11err_handlerEPKc>
  bc:	ldr	x0, [sp, #40]
  c0:	mov	w1, #0x1                   	// #1
  c4:	strb	w1, [x0, #16]
  c8:	b	e0 <_ZN10NCursesPadC1Eii+0xe0>
  cc:	mov	x19, x0
  d0:	ldr	x0, [sp, #40]
  d4:	bl	0 <_ZN13NCursesWindowD2Ev>
  d8:	mov	x0, x19
  dc:	bl	0 <_Unwind_Resume>
  e0:	ldr	x19, [sp, #16]
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret

00000000000000ec <_ZN10NCursesPad6driverEi>:
  ec:	sub	sp, sp, #0x10
  f0:	str	x0, [sp, #8]
  f4:	str	w1, [sp, #4]
  f8:	ldr	w0, [sp, #4]
  fc:	cmp	w0, #0x169
 100:	b.eq	194 <_ZN10NCursesPad6driverEi+0xa8>  // b.none
 104:	ldr	w0, [sp, #4]
 108:	cmp	w0, #0x169
 10c:	b.gt	19c <_ZN10NCursesPad6driverEi+0xb0>
 110:	ldr	w0, [sp, #4]
 114:	cmp	w0, #0x105
 118:	b.eq	18c <_ZN10NCursesPad6driverEi+0xa0>  // b.none
 11c:	ldr	w0, [sp, #4]
 120:	cmp	w0, #0x105
 124:	b.gt	19c <_ZN10NCursesPad6driverEi+0xb0>
 128:	ldr	w0, [sp, #4]
 12c:	cmp	w0, #0x104
 130:	b.eq	184 <_ZN10NCursesPad6driverEi+0x98>  // b.none
 134:	ldr	w0, [sp, #4]
 138:	cmp	w0, #0x104
 13c:	b.gt	19c <_ZN10NCursesPad6driverEi+0xb0>
 140:	ldr	w0, [sp, #4]
 144:	cmp	w0, #0x103
 148:	b.eq	174 <_ZN10NCursesPad6driverEi+0x88>  // b.none
 14c:	ldr	w0, [sp, #4]
 150:	cmp	w0, #0x103
 154:	b.gt	19c <_ZN10NCursesPad6driverEi+0xb0>
 158:	ldr	w0, [sp, #4]
 15c:	cmp	w0, #0x18
 160:	b.eq	194 <_ZN10NCursesPad6driverEi+0xa8>  // b.none
 164:	ldr	w0, [sp, #4]
 168:	cmp	w0, #0x102
 16c:	b.eq	17c <_ZN10NCursesPad6driverEi+0x90>  // b.none
 170:	b	19c <_ZN10NCursesPad6driverEi+0xb0>
 174:	mov	w0, #0x201                 	// #513
 178:	b	1a0 <_ZN10NCursesPad6driverEi+0xb4>
 17c:	mov	w0, #0x202                 	// #514
 180:	b	1a0 <_ZN10NCursesPad6driverEi+0xb4>
 184:	mov	w0, #0x203                 	// #515
 188:	b	1a0 <_ZN10NCursesPad6driverEi+0xb4>
 18c:	mov	w0, #0x204                 	// #516
 190:	b	1a0 <_ZN10NCursesPad6driverEi+0xb4>
 194:	mov	w0, #0x205                 	// #517
 198:	b	1a0 <_ZN10NCursesPad6driverEi+0xb4>
 19c:	ldr	w0, [sp, #4]
 1a0:	add	sp, sp, #0x10
 1a4:	ret

00000000000001a8 <_ZN10NCursesPadclEv>:
 1a8:	stp	x29, x30, [sp, #-80]!
 1ac:	mov	x29, sp
 1b0:	str	x19, [sp, #16]
 1b4:	str	x0, [sp, #40]
 1b8:	ldr	x0, [sp, #40]
 1bc:	bl	0 <_ZN10NCursesPadC1Eii>
 1c0:	str	x0, [sp, #64]
 1c4:	ldr	x0, [sp, #64]
 1c8:	cmp	x0, #0x0
 1cc:	b.eq	610 <_ZN10NCursesPadclEv+0x468>  // b.none
 1d0:	ldr	x0, [sp, #64]
 1d4:	bl	0 <_ZN10NCursesPadC1Eii>
 1d8:	str	w0, [sp, #60]
 1dc:	ldr	x0, [sp, #64]
 1e0:	bl	0 <_ZN10NCursesPadC1Eii>
 1e4:	str	w0, [sp, #56]
 1e8:	mov	w0, #0x200                 	// #512
 1ec:	str	w0, [sp, #76]
 1f0:	mov	w1, #0x1                   	// #1
 1f4:	ldr	x0, [sp, #64]
 1f8:	bl	0 <_ZN10NCursesPadC1Eii>
 1fc:	mov	w1, #0x1                   	// #1
 200:	ldr	x0, [sp, #64]
 204:	bl	0 <_ZN10NCursesPadC1Eii>
 208:	ldr	x0, [sp, #40]
 20c:	ldr	x0, [x0]
 210:	add	x0, x0, #0x20
 214:	ldr	x1, [x0]
 218:	ldr	x0, [sp, #40]
 21c:	blr	x1
 220:	strb	wzr, [sp, #75]
 224:	ldr	w0, [sp, #76]
 228:	cmp	w0, #0x204
 22c:	b.eq	310 <_ZN10NCursesPadclEv+0x168>  // b.none
 230:	ldr	w0, [sp, #76]
 234:	cmp	w0, #0x204
 238:	b.gt	544 <_ZN10NCursesPadclEv+0x39c>
 23c:	ldr	w0, [sp, #76]
 240:	cmp	w0, #0x203
 244:	b.eq	294 <_ZN10NCursesPadclEv+0xec>  // b.none
 248:	ldr	w0, [sp, #76]
 24c:	cmp	w0, #0x203
 250:	b.gt	544 <_ZN10NCursesPadclEv+0x39c>
 254:	ldr	w0, [sp, #76]
 258:	cmp	w0, #0x202
 25c:	b.eq	468 <_ZN10NCursesPadclEv+0x2c0>  // b.none
 260:	ldr	w0, [sp, #76]
 264:	cmp	w0, #0x202
 268:	b.gt	544 <_ZN10NCursesPadclEv+0x39c>
 26c:	ldr	w0, [sp, #76]
 270:	cmp	w0, #0x200
 274:	b.eq	288 <_ZN10NCursesPadclEv+0xe0>  // b.none
 278:	ldr	w0, [sp, #76]
 27c:	cmp	w0, #0x201
 280:	b.eq	3ec <_ZN10NCursesPadclEv+0x244>  // b.none
 284:	b	544 <_ZN10NCursesPadclEv+0x39c>
 288:	mov	w0, #0x1                   	// #1
 28c:	strb	w0, [sp, #75]
 290:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 294:	ldr	x0, [sp, #40]
 298:	ldr	w0, [x0, #76]
 29c:	cmp	w0, #0x0
 2a0:	b.le	2f0 <_ZN10NCursesPadclEv+0x148>
 2a4:	mov	w0, #0x1                   	// #1
 2a8:	strb	w0, [sp, #75]
 2ac:	ldr	x0, [sp, #40]
 2b0:	ldr	w1, [x0, #76]
 2b4:	ldr	x0, [sp, #40]
 2b8:	ldr	w0, [x0, #64]
 2bc:	cmp	w1, w0
 2c0:	b.ge	2d0 <_ZN10NCursesPadclEv+0x128>  // b.tcont
 2c4:	ldr	x0, [sp, #40]
 2c8:	str	wzr, [x0, #76]
 2cc:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 2d0:	ldr	x0, [sp, #40]
 2d4:	ldr	w1, [x0, #76]
 2d8:	ldr	x0, [sp, #40]
 2dc:	ldr	w0, [x0, #64]
 2e0:	sub	w1, w1, w0
 2e4:	ldr	x0, [sp, #40]
 2e8:	str	w1, [x0, #76]
 2ec:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 2f0:	ldr	x0, [sp, #40]
 2f4:	ldr	x0, [x0]
 2f8:	add	x0, x0, #0x40
 2fc:	ldr	x2, [x0]
 300:	ldr	w1, [sp, #76]
 304:	ldr	x0, [sp, #40]
 308:	blr	x2
 30c:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 310:	ldr	x0, [sp, #40]
 314:	ldr	w19, [x0, #76]
 318:	ldr	x0, [sp, #40]
 31c:	bl	0 <_ZN10NCursesPadC1Eii>
 320:	mov	w1, w0
 324:	ldr	w0, [sp, #60]
 328:	sub	w0, w1, w0
 32c:	sub	w0, w0, #0x1
 330:	cmp	w19, w0
 334:	cset	w0, lt  // lt = tstop
 338:	and	w0, w0, #0xff
 33c:	cmp	w0, #0x0
 340:	b.eq	3cc <_ZN10NCursesPadclEv+0x224>  // b.none
 344:	mov	w0, #0x1                   	// #1
 348:	strb	w0, [sp, #75]
 34c:	ldr	x0, [sp, #40]
 350:	bl	0 <_ZN10NCursesPadC1Eii>
 354:	mov	w1, w0
 358:	ldr	w0, [sp, #60]
 35c:	sub	w1, w1, w0
 360:	ldr	x0, [sp, #40]
 364:	ldr	w0, [x0, #64]
 368:	sub	w1, w1, w0
 36c:	ldr	x0, [sp, #40]
 370:	ldr	w0, [x0, #76]
 374:	cmp	w1, w0
 378:	cset	w0, le
 37c:	and	w0, w0, #0xff
 380:	cmp	w0, #0x0
 384:	b.eq	3ac <_ZN10NCursesPadclEv+0x204>  // b.none
 388:	ldr	x0, [sp, #40]
 38c:	bl	0 <_ZN10NCursesPadC1Eii>
 390:	mov	w1, w0
 394:	ldr	w0, [sp, #60]
 398:	sub	w0, w1, w0
 39c:	sub	w1, w0, #0x1
 3a0:	ldr	x0, [sp, #40]
 3a4:	str	w1, [x0, #76]
 3a8:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 3ac:	ldr	x0, [sp, #40]
 3b0:	ldr	w1, [x0, #76]
 3b4:	ldr	x0, [sp, #40]
 3b8:	ldr	w0, [x0, #64]
 3bc:	add	w1, w1, w0
 3c0:	ldr	x0, [sp, #40]
 3c4:	str	w1, [x0, #76]
 3c8:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 3cc:	ldr	x0, [sp, #40]
 3d0:	ldr	x0, [x0]
 3d4:	add	x0, x0, #0x40
 3d8:	ldr	x2, [x0]
 3dc:	ldr	w1, [sp, #76]
 3e0:	ldr	x0, [sp, #40]
 3e4:	blr	x2
 3e8:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 3ec:	ldr	x0, [sp, #40]
 3f0:	ldr	w0, [x0, #72]
 3f4:	cmp	w0, #0x0
 3f8:	b.le	448 <_ZN10NCursesPadclEv+0x2a0>
 3fc:	mov	w0, #0x1                   	// #1
 400:	strb	w0, [sp, #75]
 404:	ldr	x0, [sp, #40]
 408:	ldr	w1, [x0, #72]
 40c:	ldr	x0, [sp, #40]
 410:	ldr	w0, [x0, #68]
 414:	cmp	w1, w0
 418:	b.ge	428 <_ZN10NCursesPadclEv+0x280>  // b.tcont
 41c:	ldr	x0, [sp, #40]
 420:	str	wzr, [x0, #72]
 424:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 428:	ldr	x0, [sp, #40]
 42c:	ldr	w1, [x0, #72]
 430:	ldr	x0, [sp, #40]
 434:	ldr	w0, [x0, #68]
 438:	sub	w1, w1, w0
 43c:	ldr	x0, [sp, #40]
 440:	str	w1, [x0, #72]
 444:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 448:	ldr	x0, [sp, #40]
 44c:	ldr	x0, [x0]
 450:	add	x0, x0, #0x40
 454:	ldr	x2, [x0]
 458:	ldr	w1, [sp, #76]
 45c:	ldr	x0, [sp, #40]
 460:	blr	x2
 464:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 468:	ldr	x0, [sp, #40]
 46c:	ldr	w19, [x0, #72]
 470:	ldr	x0, [sp, #40]
 474:	bl	0 <_ZN10NCursesPadC1Eii>
 478:	mov	w1, w0
 47c:	ldr	w0, [sp, #56]
 480:	sub	w0, w1, w0
 484:	sub	w0, w0, #0x1
 488:	cmp	w19, w0
 48c:	cset	w0, lt  // lt = tstop
 490:	and	w0, w0, #0xff
 494:	cmp	w0, #0x0
 498:	b.eq	524 <_ZN10NCursesPadclEv+0x37c>  // b.none
 49c:	mov	w0, #0x1                   	// #1
 4a0:	strb	w0, [sp, #75]
 4a4:	ldr	x0, [sp, #40]
 4a8:	bl	0 <_ZN10NCursesPadC1Eii>
 4ac:	mov	w1, w0
 4b0:	ldr	w0, [sp, #56]
 4b4:	sub	w1, w1, w0
 4b8:	ldr	x0, [sp, #40]
 4bc:	ldr	w0, [x0, #68]
 4c0:	sub	w1, w1, w0
 4c4:	ldr	x0, [sp, #40]
 4c8:	ldr	w0, [x0, #72]
 4cc:	cmp	w1, w0
 4d0:	cset	w0, le
 4d4:	and	w0, w0, #0xff
 4d8:	cmp	w0, #0x0
 4dc:	b.eq	504 <_ZN10NCursesPadclEv+0x35c>  // b.none
 4e0:	ldr	x0, [sp, #40]
 4e4:	bl	0 <_ZN10NCursesPadC1Eii>
 4e8:	mov	w1, w0
 4ec:	ldr	w0, [sp, #56]
 4f0:	sub	w0, w1, w0
 4f4:	sub	w1, w0, #0x1
 4f8:	ldr	x0, [sp, #40]
 4fc:	str	w1, [x0, #72]
 500:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 504:	ldr	x0, [sp, #40]
 508:	ldr	w1, [x0, #72]
 50c:	ldr	x0, [sp, #40]
 510:	ldr	w0, [x0, #68]
 514:	add	w1, w1, w0
 518:	ldr	x0, [sp, #40]
 51c:	str	w1, [x0, #72]
 520:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 524:	ldr	x0, [sp, #40]
 528:	ldr	x0, [x0]
 52c:	add	x0, x0, #0x40
 530:	ldr	x2, [x0]
 534:	ldr	w1, [sp, #76]
 538:	ldr	x0, [sp, #40]
 53c:	blr	x2
 540:	b	560 <_ZN10NCursesPadclEv+0x3b8>
 544:	ldr	x0, [sp, #40]
 548:	ldr	x0, [x0]
 54c:	add	x0, x0, #0x38
 550:	ldr	x2, [x0]
 554:	ldr	w1, [sp, #76]
 558:	ldr	x0, [sp, #40]
 55c:	blr	x2
 560:	ldrb	w0, [sp, #75]
 564:	cmp	w0, #0x0
 568:	b.eq	5cc <_ZN10NCursesPadclEv+0x424>  // b.none
 56c:	ldr	x0, [sp, #40]
 570:	ldr	x0, [x0]
 574:	add	x0, x0, #0x28
 578:	ldr	x1, [x0]
 57c:	ldr	x0, [sp, #40]
 580:	blr	x1
 584:	ldr	x0, [sp, #64]
 588:	bl	0 <_ZN10NCursesPadC1Eii>
 58c:	ldr	x0, [sp, #40]
 590:	ldr	x0, [x0]
 594:	add	x0, x0, #0x48
 598:	ldr	x2, [x0]
 59c:	ldr	w1, [sp, #76]
 5a0:	ldr	x0, [sp, #40]
 5a4:	blr	x2
 5a8:	ldr	x0, [sp, #40]
 5ac:	ldr	x2, [x0, #48]
 5b0:	ldr	x0, [sp, #40]
 5b4:	ldr	x0, [x0, #48]
 5b8:	ldr	x0, [x0]
 5bc:	add	x0, x0, #0x20
 5c0:	ldr	x1, [x0]
 5c4:	mov	x0, x2
 5c8:	blr	x1
 5cc:	ldr	x0, [sp, #40]
 5d0:	ldr	x0, [x0]
 5d4:	add	x0, x0, #0x30
 5d8:	ldr	x19, [x0]
 5dc:	ldr	x0, [sp, #64]
 5e0:	bl	0 <_ZN10NCursesPadC1Eii>
 5e4:	mov	w1, w0
 5e8:	ldr	x0, [sp, #40]
 5ec:	blr	x19
 5f0:	str	w0, [sp, #76]
 5f4:	ldr	w0, [sp, #76]
 5f8:	cmp	w0, #0x205
 5fc:	cset	w0, ne  // ne = any
 600:	and	w0, w0, #0xff
 604:	cmp	w0, #0x0
 608:	b.eq	610 <_ZN10NCursesPadclEv+0x468>  // b.none
 60c:	b	220 <_ZN10NCursesPadclEv+0x78>
 610:	nop
 614:	ldr	x19, [sp, #16]
 618:	ldp	x29, x30, [sp], #80
 61c:	ret

0000000000000620 <_ZN10NCursesPad7refreshEv>:
 620:	stp	x29, x30, [sp, #-48]!
 624:	mov	x29, sp
 628:	str	x0, [sp, #24]
 62c:	ldr	x0, [sp, #24]
 630:	ldr	x0, [x0]
 634:	add	x0, x0, #0x28
 638:	ldr	x1, [x0]
 63c:	ldr	x0, [sp, #24]
 640:	blr	x1
 644:	str	w0, [sp, #44]
 648:	ldr	w0, [sp, #44]
 64c:	cmp	w0, #0x0
 650:	b.ne	68c <_ZN10NCursesPad7refreshEv+0x6c>  // b.any
 654:	ldr	x0, [sp, #24]
 658:	ldr	x0, [x0, #48]
 65c:	cmp	x0, #0x0
 660:	b.eq	68c <_ZN10NCursesPad7refreshEv+0x6c>  // b.none
 664:	ldr	x0, [sp, #24]
 668:	ldr	x2, [x0, #48]
 66c:	ldr	x0, [sp, #24]
 670:	ldr	x0, [x0, #48]
 674:	ldr	x0, [x0]
 678:	add	x0, x0, #0x20
 67c:	ldr	x1, [x0]
 680:	mov	x0, x2
 684:	blr	x1
 688:	str	w0, [sp, #44]
 68c:	ldr	w0, [sp, #44]
 690:	ldp	x29, x30, [sp], #48
 694:	ret

0000000000000698 <_ZN10NCursesPad11noutrefreshEv>:
 698:	sub	sp, sp, #0x50
 69c:	stp	x29, x30, [sp, #16]
 6a0:	add	x29, sp, #0x10
 6a4:	str	x0, [sp, #40]
 6a8:	str	wzr, [sp, #76]
 6ac:	ldr	x0, [sp, #40]
 6b0:	bl	0 <_ZN10NCursesPadC1Eii>
 6b4:	str	x0, [sp, #64]
 6b8:	ldr	x0, [sp, #64]
 6bc:	cmp	x0, #0x0
 6c0:	b.eq	758 <_ZN10NCursesPad11noutrefreshEv+0xc0>  // b.none
 6c4:	ldr	x0, [sp, #64]
 6c8:	bl	0 <_ZN10NCursesPadC1Eii>
 6cc:	str	w0, [sp, #60]
 6d0:	ldr	x0, [sp, #64]
 6d4:	bl	0 <_ZN10NCursesPadC1Eii>
 6d8:	str	w0, [sp, #56]
 6dc:	ldr	x8, [sp, #40]
 6e0:	ldr	x0, [sp, #40]
 6e4:	ldr	w1, [x0, #72]
 6e8:	ldr	x0, [sp, #40]
 6ec:	ldr	w0, [x0, #76]
 6f0:	strb	wzr, [sp]
 6f4:	ldr	w7, [sp, #56]
 6f8:	ldr	w6, [sp, #60]
 6fc:	mov	w5, #0x0                   	// #0
 700:	mov	w4, #0x0                   	// #0
 704:	mov	w3, w0
 708:	mov	w2, w1
 70c:	ldr	x1, [sp, #64]
 710:	mov	x0, x8
 714:	bl	0 <_ZN10NCursesPadC1Eii>
 718:	str	w0, [sp, #76]
 71c:	ldr	w0, [sp, #76]
 720:	cmp	w0, #0x0
 724:	b.ne	758 <_ZN10NCursesPad11noutrefreshEv+0xc0>  // b.any
 728:	ldr	x0, [sp, #64]
 72c:	bl	0 <_ZN10NCursesPadC1Eii>
 730:	ldr	x0, [sp, #40]
 734:	ldr	x2, [x0, #48]
 738:	ldr	x0, [sp, #40]
 73c:	ldr	x0, [x0, #48]
 740:	ldr	x0, [x0]
 744:	add	x0, x0, #0x28
 748:	ldr	x1, [x0]
 74c:	mov	x0, x2
 750:	blr	x1
 754:	str	w0, [sp, #76]
 758:	ldr	w0, [sp, #76]
 75c:	ldp	x29, x30, [sp, #16]
 760:	add	sp, sp, #0x50
 764:	ret

0000000000000768 <_ZN10NCursesPad9setWindowER13NCursesWindowii>:
 768:	stp	x29, x30, [sp, #-48]!
 76c:	mov	x29, sp
 770:	str	x0, [sp, #40]
 774:	str	x1, [sp, #32]
 778:	str	w2, [sp, #28]
 77c:	str	w3, [sp, #24]
 780:	ldr	x0, [sp, #40]
 784:	ldr	x1, [sp, #32]
 788:	str	x1, [x0, #48]
 78c:	ldr	x0, [sp, #40]
 790:	str	wzr, [x0, #76]
 794:	ldr	x0, [sp, #40]
 798:	ldr	w1, [x0, #76]
 79c:	ldr	x0, [sp, #40]
 7a0:	str	w1, [x0, #72]
 7a4:	ldr	w0, [sp, #24]
 7a8:	cmp	w0, #0x0
 7ac:	b.le	7bc <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x54>
 7b0:	ldr	w0, [sp, #28]
 7b4:	cmp	w0, #0x0
 7b8:	b.gt	7e0 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x78>
 7bc:	ldr	x3, [sp, #40]
 7c0:	ldr	x0, [sp, #40]
 7c4:	ldr	x0, [x0]
 7c8:	ldr	x2, [x0]
 7cc:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
 7d0:	add	x1, x0, #0x0
 7d4:	mov	x0, x3
 7d8:	blr	x2
 7dc:	b	7fc <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x94>
 7e0:	ldr	x0, [sp, #40]
 7e4:	ldr	w1, [sp, #24]
 7e8:	str	w1, [x0, #64]
 7ec:	ldr	x0, [sp, #40]
 7f0:	ldr	w1, [sp, #28]
 7f4:	str	w1, [x0, #68]
 7f8:	nop
 7fc:	nop
 800:	ldp	x29, x30, [sp], #48
 804:	ret

0000000000000808 <_ZN10NCursesPad12setSubWindowER13NCursesWindow>:
 808:	stp	x29, x30, [sp, #-48]!
 80c:	mov	x29, sp
 810:	str	x19, [sp, #16]
 814:	str	x0, [sp, #40]
 818:	str	x1, [sp, #32]
 81c:	ldr	x0, [sp, #40]
 820:	ldr	x0, [x0, #48]
 824:	cmp	x0, #0x0
 828:	b.ne	84c <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x44>  // b.any
 82c:	ldr	x3, [sp, #40]
 830:	ldr	x0, [sp, #40]
 834:	ldr	x0, [x0]
 838:	ldr	x2, [x0]
 83c:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
 840:	add	x1, x0, #0x0
 844:	mov	x0, x3
 848:	blr	x2
 84c:	ldr	x0, [sp, #40]
 850:	ldr	x0, [x0, #48]
 854:	ldr	x1, [sp, #32]
 858:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 85c:	and	w0, w0, #0xff
 860:	eor	w0, w0, #0x1
 864:	and	w0, w0, #0xff
 868:	cmp	w0, #0x0
 86c:	b.eq	898 <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x90>  // b.none
 870:	mov	x0, #0x18                  	// #24
 874:	bl	0 <_Znwm>
 878:	mov	x19, x0
 87c:	mov	w2, #0xffffffff            	// #-1
 880:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
 884:	add	x1, x0, #0x0
 888:	mov	x0, x19
 88c:	bl	0 <_ZN10NCursesPadC1Eii>
 890:	mov	x0, x19
 894:	bl	0 <_ZN10NCursesPadC1Eii>
 898:	ldr	x0, [sp, #40]
 89c:	ldr	x1, [sp, #32]
 8a0:	str	x1, [x0, #56]
 8a4:	nop
 8a8:	ldr	x19, [sp, #16]
 8ac:	ldp	x29, x30, [sp], #48
 8b0:	ret

00000000000008b4 <_ZN16NCursesFramedPad11OnOperationEi>:
 8b4:	stp	x29, x30, [sp, #-96]!
 8b8:	mov	x29, sp
 8bc:	str	x0, [sp, #24]
 8c0:	str	w1, [sp, #20]
 8c4:	ldr	x0, [sp, #24]
 8c8:	bl	0 <_ZN10NCursesPadC1Eii>
 8cc:	str	x0, [sp, #64]
 8d0:	ldr	x0, [sp, #24]
 8d4:	bl	0 <_ZN10NCursesPadC1Eii>
 8d8:	str	x0, [sp, #56]
 8dc:	ldr	x0, [sp, #64]
 8e0:	cmp	x0, #0x0
 8e4:	b.eq	d2c <_ZN16NCursesFramedPad11OnOperationEi+0x478>  // b.none
 8e8:	ldr	x0, [sp, #56]
 8ec:	cmp	x0, #0x0
 8f0:	b.eq	d2c <_ZN16NCursesFramedPad11OnOperationEi+0x478>  // b.none
 8f4:	ldr	x0, [sp, #64]
 8f8:	bl	0 <_ZN10NCursesPadC1Eii>
 8fc:	str	w0, [sp, #52]
 900:	ldr	x0, [sp, #64]
 904:	bl	0 <_ZN10NCursesPadC1Eii>
 908:	str	w0, [sp, #48]
 90c:	ldr	x0, [sp, #24]
 910:	bl	0 <_ZN10NCursesPadC1Eii>
 914:	str	w0, [sp, #44]
 918:	ldr	w0, [sp, #44]
 91c:	cmp	w0, #0x0
 920:	b.eq	974 <_ZN16NCursesFramedPad11OnOperationEi+0xc0>  // b.none
 924:	ldr	w0, [sp, #52]
 928:	mul	w1, w0, w0
 92c:	ldr	w0, [sp, #44]
 930:	add	w0, w1, w0
 934:	sub	w1, w0, #0x1
 938:	ldr	w0, [sp, #44]
 93c:	sdiv	w0, w1, w0
 940:	str	w0, [sp, #80]
 944:	ldr	w0, [sp, #80]
 948:	cmp	w0, #0x0
 94c:	b.ne	958 <_ZN16NCursesFramedPad11OnOperationEi+0xa4>  // b.any
 950:	mov	w0, #0x1                   	// #1
 954:	str	w0, [sp, #80]
 958:	ldr	w1, [sp, #80]
 95c:	ldr	w0, [sp, #52]
 960:	cmp	w1, w0
 964:	b.le	97c <_ZN16NCursesFramedPad11OnOperationEi+0xc8>
 968:	ldr	w0, [sp, #52]
 96c:	str	w0, [sp, #80]
 970:	b	97c <_ZN16NCursesFramedPad11OnOperationEi+0xc8>
 974:	mov	w0, #0x1                   	// #1
 978:	str	w0, [sp, #80]
 97c:	ldr	x0, [sp, #24]
 980:	bl	0 <_ZN10NCursesPadC1Eii>
 984:	str	w0, [sp, #40]
 988:	ldr	w0, [sp, #40]
 98c:	cmp	w0, #0x0
 990:	b.eq	9e4 <_ZN16NCursesFramedPad11OnOperationEi+0x130>  // b.none
 994:	ldr	w0, [sp, #48]
 998:	mul	w1, w0, w0
 99c:	ldr	w0, [sp, #40]
 9a0:	add	w0, w1, w0
 9a4:	sub	w1, w0, #0x1
 9a8:	ldr	w0, [sp, #40]
 9ac:	sdiv	w0, w1, w0
 9b0:	str	w0, [sp, #76]
 9b4:	ldr	w0, [sp, #76]
 9b8:	cmp	w0, #0x0
 9bc:	b.ne	9c8 <_ZN16NCursesFramedPad11OnOperationEi+0x114>  // b.any
 9c0:	mov	w0, #0x1                   	// #1
 9c4:	str	w0, [sp, #76]
 9c8:	ldr	w1, [sp, #76]
 9cc:	ldr	w0, [sp, #48]
 9d0:	cmp	w1, w0
 9d4:	b.le	9ec <_ZN16NCursesFramedPad11OnOperationEi+0x138>
 9d8:	ldr	w0, [sp, #48]
 9dc:	str	w0, [sp, #76]
 9e0:	b	9ec <_ZN16NCursesFramedPad11OnOperationEi+0x138>
 9e4:	mov	w0, #0x1                   	// #1
 9e8:	str	w0, [sp, #76]
 9ec:	ldr	w0, [sp, #44]
 9f0:	cmp	w0, #0x0
 9f4:	b.eq	a4c <_ZN16NCursesFramedPad11OnOperationEi+0x198>  // b.none
 9f8:	ldr	x0, [sp, #24]
 9fc:	ldr	w1, [x0, #76]
 a00:	ldr	w0, [sp, #52]
 a04:	mul	w1, w1, w0
 a08:	ldr	w0, [sp, #44]
 a0c:	add	w0, w1, w0
 a10:	sub	w1, w0, #0x1
 a14:	ldr	w0, [sp, #44]
 a18:	sdiv	w0, w1, w0
 a1c:	str	w0, [sp, #84]
 a20:	ldr	w1, [sp, #84]
 a24:	ldr	w0, [sp, #80]
 a28:	add	w0, w1, w0
 a2c:	ldr	w1, [sp, #52]
 a30:	cmp	w1, w0
 a34:	b.ge	a50 <_ZN16NCursesFramedPad11OnOperationEi+0x19c>  // b.tcont
 a38:	ldr	w1, [sp, #52]
 a3c:	ldr	w0, [sp, #80]
 a40:	sub	w0, w1, w0
 a44:	str	w0, [sp, #84]
 a48:	b	a50 <_ZN16NCursesFramedPad11OnOperationEi+0x19c>
 a4c:	str	wzr, [sp, #84]
 a50:	ldr	w0, [sp, #40]
 a54:	cmp	w0, #0x0
 a58:	b.eq	ab0 <_ZN16NCursesFramedPad11OnOperationEi+0x1fc>  // b.none
 a5c:	ldr	x0, [sp, #24]
 a60:	ldr	w1, [x0, #72]
 a64:	ldr	w0, [sp, #48]
 a68:	mul	w1, w1, w0
 a6c:	ldr	w0, [sp, #40]
 a70:	add	w0, w1, w0
 a74:	sub	w1, w0, #0x1
 a78:	ldr	w0, [sp, #40]
 a7c:	sdiv	w0, w1, w0
 a80:	str	w0, [sp, #88]
 a84:	ldr	w1, [sp, #88]
 a88:	ldr	w0, [sp, #76]
 a8c:	add	w0, w1, w0
 a90:	ldr	w1, [sp, #48]
 a94:	cmp	w1, w0
 a98:	b.ge	ab4 <_ZN16NCursesFramedPad11OnOperationEi+0x200>  // b.tcont
 a9c:	ldr	w1, [sp, #48]
 aa0:	ldr	w0, [sp, #76]
 aa4:	sub	w0, w1, w0
 aa8:	str	w0, [sp, #88]
 aac:	b	ab4 <_ZN16NCursesFramedPad11OnOperationEi+0x200>
 ab0:	str	wzr, [sp, #88]
 ab4:	ldr	w0, [sp, #52]
 ab8:	add	w0, w0, #0x1
 abc:	mov	w4, #0x0                   	// #0
 ac0:	ldr	w3, [sp, #48]
 ac4:	mov	w2, w0
 ac8:	mov	w1, #0x1                   	// #1
 acc:	ldr	x0, [sp, #56]
 ad0:	bl	0 <_ZN10NCursesPadC1Eii>
 ad4:	mov	w1, #0x40000               	// #262144
 ad8:	ldr	x0, [sp, #56]
 adc:	bl	0 <_ZN10NCursesPadC1Eii>
 ae0:	ldr	w0, [sp, #76]
 ae4:	cmp	w0, #0x1
 ae8:	b.le	b90 <_ZN16NCursesFramedPad11OnOperationEi+0x2dc>
 aec:	ldr	w0, [sp, #88]
 af0:	add	w1, w0, #0x1
 af4:	ldr	w0, [sp, #52]
 af8:	add	w2, w0, #0x1
 afc:	adrp	x0, 0 <acs_map>
 b00:	ldr	x0, [x0]
 b04:	ldr	w0, [x0, #180]
 b08:	mov	w3, w0
 b0c:	ldr	x0, [sp, #56]
 b10:	bl	0 <_ZN10NCursesPadC1Eii>
 b14:	mov	w0, #0x2                   	// #2
 b18:	str	w0, [sp, #92]
 b1c:	ldr	w1, [sp, #92]
 b20:	ldr	w0, [sp, #76]
 b24:	cmp	w1, w0
 b28:	b.ge	b60 <_ZN16NCursesFramedPad11OnOperationEi+0x2ac>  // b.tcont
 b2c:	ldr	w1, [sp, #88]
 b30:	ldr	w0, [sp, #92]
 b34:	add	w1, w1, w0
 b38:	ldr	w0, [sp, #52]
 b3c:	add	w0, w0, #0x1
 b40:	mov	w3, #0x20                  	// #32
 b44:	mov	w2, w0
 b48:	ldr	x0, [sp, #56]
 b4c:	bl	0 <_ZN10NCursesPadC1Eii>
 b50:	ldr	w0, [sp, #92]
 b54:	add	w0, w0, #0x1
 b58:	str	w0, [sp, #92]
 b5c:	b	b1c <_ZN16NCursesFramedPad11OnOperationEi+0x268>
 b60:	ldr	w1, [sp, #88]
 b64:	ldr	w0, [sp, #76]
 b68:	add	w1, w1, w0
 b6c:	ldr	w0, [sp, #52]
 b70:	add	w2, w0, #0x1
 b74:	adrp	x0, 0 <acs_map>
 b78:	ldr	x0, [x0]
 b7c:	ldr	w0, [x0, #184]
 b80:	mov	w3, w0
 b84:	ldr	x0, [sp, #56]
 b88:	bl	0 <_ZN10NCursesPadC1Eii>
 b8c:	b	bdc <_ZN16NCursesFramedPad11OnOperationEi+0x328>
 b90:	mov	w0, #0x1                   	// #1
 b94:	str	w0, [sp, #92]
 b98:	ldr	w1, [sp, #92]
 b9c:	ldr	w0, [sp, #76]
 ba0:	cmp	w1, w0
 ba4:	b.gt	bdc <_ZN16NCursesFramedPad11OnOperationEi+0x328>
 ba8:	ldr	w1, [sp, #88]
 bac:	ldr	w0, [sp, #92]
 bb0:	add	w1, w1, w0
 bb4:	ldr	w0, [sp, #52]
 bb8:	add	w0, w0, #0x1
 bbc:	mov	w3, #0x20                  	// #32
 bc0:	mov	w2, w0
 bc4:	ldr	x0, [sp, #56]
 bc8:	bl	0 <_ZN10NCursesPadC1Eii>
 bcc:	ldr	w0, [sp, #92]
 bd0:	add	w0, w0, #0x1
 bd4:	str	w0, [sp, #92]
 bd8:	b	b98 <_ZN16NCursesFramedPad11OnOperationEi+0x2e4>
 bdc:	mov	w1, #0x40000               	// #262144
 be0:	ldr	x0, [sp, #56]
 be4:	bl	0 <_ZN10NCursesPadC1Eii>
 be8:	ldr	w0, [sp, #48]
 bec:	add	w0, w0, #0x1
 bf0:	mov	w4, #0x0                   	// #0
 bf4:	ldr	w3, [sp, #52]
 bf8:	mov	w2, #0x1                   	// #1
 bfc:	mov	w1, w0
 c00:	ldr	x0, [sp, #56]
 c04:	bl	0 <_ZN10NCursesPadC1Eii>
 c08:	mov	w1, #0x40000               	// #262144
 c0c:	ldr	x0, [sp, #56]
 c10:	bl	0 <_ZN10NCursesPadC1Eii>
 c14:	ldr	w0, [sp, #80]
 c18:	cmp	w0, #0x1
 c1c:	b.le	cd0 <_ZN16NCursesFramedPad11OnOperationEi+0x41c>
 c20:	ldr	w0, [sp, #48]
 c24:	add	w1, w0, #0x1
 c28:	ldr	w0, [sp, #84]
 c2c:	add	w2, w0, #0x1
 c30:	adrp	x0, 0 <acs_map>
 c34:	ldr	x0, [x0]
 c38:	ldr	w0, [x0, #176]
 c3c:	mov	w3, w0
 c40:	ldr	x0, [sp, #56]
 c44:	bl	0 <_ZN10NCursesPadC1Eii>
 c48:	mov	w0, #0x2                   	// #2
 c4c:	str	w0, [sp, #92]
 c50:	ldr	w1, [sp, #92]
 c54:	ldr	w0, [sp, #80]
 c58:	cmp	w1, w0
 c5c:	b.ge	c98 <_ZN16NCursesFramedPad11OnOperationEi+0x3e4>  // b.tcont
 c60:	ldr	w0, [sp, #48]
 c64:	add	w4, w0, #0x1
 c68:	ldr	w1, [sp, #84]
 c6c:	ldr	w0, [sp, #92]
 c70:	add	w0, w1, w0
 c74:	mov	w3, #0x20                  	// #32
 c78:	mov	w2, w0
 c7c:	mov	w1, w4
 c80:	ldr	x0, [sp, #56]
 c84:	bl	0 <_ZN10NCursesPadC1Eii>
 c88:	ldr	w0, [sp, #92]
 c8c:	add	w0, w0, #0x1
 c90:	str	w0, [sp, #92]
 c94:	b	c50 <_ZN16NCursesFramedPad11OnOperationEi+0x39c>
 c98:	ldr	w0, [sp, #48]
 c9c:	add	w4, w0, #0x1
 ca0:	ldr	w1, [sp, #84]
 ca4:	ldr	w0, [sp, #80]
 ca8:	add	w1, w1, w0
 cac:	adrp	x0, 0 <acs_map>
 cb0:	ldr	x0, [x0]
 cb4:	ldr	w0, [x0, #172]
 cb8:	mov	w3, w0
 cbc:	mov	w2, w1
 cc0:	mov	w1, w4
 cc4:	ldr	x0, [sp, #56]
 cc8:	bl	0 <_ZN10NCursesPadC1Eii>
 ccc:	b	d20 <_ZN16NCursesFramedPad11OnOperationEi+0x46c>
 cd0:	mov	w0, #0x1                   	// #1
 cd4:	str	w0, [sp, #92]
 cd8:	ldr	w1, [sp, #92]
 cdc:	ldr	w0, [sp, #80]
 ce0:	cmp	w1, w0
 ce4:	b.gt	d20 <_ZN16NCursesFramedPad11OnOperationEi+0x46c>
 ce8:	ldr	w0, [sp, #48]
 cec:	add	w4, w0, #0x1
 cf0:	ldr	w1, [sp, #84]
 cf4:	ldr	w0, [sp, #92]
 cf8:	add	w0, w1, w0
 cfc:	mov	w3, #0x20                  	// #32
 d00:	mov	w2, w0
 d04:	mov	w1, w4
 d08:	ldr	x0, [sp, #56]
 d0c:	bl	0 <_ZN10NCursesPadC1Eii>
 d10:	ldr	w0, [sp, #92]
 d14:	add	w0, w0, #0x1
 d18:	str	w0, [sp, #92]
 d1c:	b	cd8 <_ZN16NCursesFramedPad11OnOperationEi+0x424>
 d20:	mov	w1, #0x40000               	// #262144
 d24:	ldr	x0, [sp, #56]
 d28:	bl	0 <_ZN10NCursesPadC1Eii>
 d2c:	nop
 d30:	ldp	x29, x30, [sp], #96
 d34:	ret

0000000000000d38 <_Z41__static_initialization_and_destruction_0ii>:
 d38:	stp	x29, x30, [sp, #-32]!
 d3c:	mov	x29, sp
 d40:	str	w0, [sp, #28]
 d44:	str	w1, [sp, #24]
 d48:	ldr	w0, [sp, #28]
 d4c:	cmp	w0, #0x1
 d50:	b.ne	d8c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 d54:	ldr	w1, [sp, #24]
 d58:	mov	w0, #0xffff                	// #65535
 d5c:	cmp	w1, w0
 d60:	b.ne	d8c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 d64:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
 d68:	add	x0, x0, #0x0
 d6c:	bl	0 <_ZNSt8ios_base4InitC1Ev>
 d70:	adrp	x0, 0 <__dso_handle>
 d74:	add	x2, x0, #0x0
 d78:	adrp	x0, 0 <_ZN10NCursesPadC1Eii>
 d7c:	add	x1, x0, #0x0
 d80:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
 d84:	ldr	x0, [x0]
 d88:	bl	0 <__cxa_atexit>
 d8c:	nop
 d90:	ldp	x29, x30, [sp], #32
 d94:	ret

0000000000000d98 <_GLOBAL__sub_I_cursespad.cc>:
 d98:	stp	x29, x30, [sp, #-16]!
 d9c:	mov	x29, sp
 da0:	mov	w1, #0xffff                	// #65535
 da4:	mov	w0, #0x1                   	// #1
 da8:	bl	d38 <_Z41__static_initialization_and_destruction_0ii>
 dac:	ldp	x29, x30, [sp], #16
 db0:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKci:

0000000000000000 <_ZN16NCursesExceptionC1EPKci>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKci>
  14:	ldr	x0, [x0]
  18:	add	x1, x0, #0x10
  1c:	ldr	x0, [sp, #24]
  20:	str	x1, [x0]
  24:	ldr	x0, [sp, #24]
  28:	ldr	x1, [sp, #16]
  2c:	str	x1, [x0, #8]
  30:	ldr	x0, [sp, #24]
  34:	ldr	w1, [sp, #12]
  38:	str	w1, [x0, #16]
  3c:	nop
  40:	add	sp, sp, #0x20
  44:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._Z12CUR_mvwaddchP7_win_stiij:

0000000000000000 <_Z12CUR_mvwaddchP7_win_stiij>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	w3, [sp, #28]
  18:	ldr	w2, [sp, #32]
  1c:	ldr	w1, [sp, #36]
  20:	ldr	x0, [sp, #40]
  24:	bl	0 <wmove>
  28:	cmn	w0, #0x1
  2c:	b.eq	40 <_Z12CUR_mvwaddchP7_win_stiij+0x40>  // b.none
  30:	ldr	w1, [sp, #28]
  34:	ldr	x0, [sp, #40]
  38:	bl	0 <waddch>
  3c:	b	44 <_Z12CUR_mvwaddchP7_win_stiij+0x44>
  40:	mov	w0, #0xffffffff            	// #-1
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._Z12CUR_mvwhlineP7_win_stiiji:

0000000000000000 <_Z12CUR_mvwhlineP7_win_stiiji>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	w3, [sp, #28]
  18:	str	w4, [sp, #24]
  1c:	ldr	w2, [sp, #32]
  20:	ldr	w1, [sp, #36]
  24:	ldr	x0, [sp, #40]
  28:	bl	0 <wmove>
  2c:	cmn	w0, #0x1
  30:	b.eq	48 <_Z12CUR_mvwhlineP7_win_stiiji+0x48>  // b.none
  34:	ldr	w2, [sp, #24]
  38:	ldr	w1, [sp, #28]
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <whline>
  44:	b	4c <_Z12CUR_mvwhlineP7_win_stiiji+0x4c>
  48:	mov	w0, #0xffffffff            	// #-1
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._Z12CUR_mvwvlineP7_win_stiiji:

0000000000000000 <_Z12CUR_mvwvlineP7_win_stiiji>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	w3, [sp, #28]
  18:	str	w4, [sp, #24]
  1c:	ldr	w2, [sp, #32]
  20:	ldr	w1, [sp, #36]
  24:	ldr	x0, [sp, #40]
  28:	bl	0 <wmove>
  2c:	cmn	w0, #0x1
  30:	b.eq	48 <_Z12CUR_mvwvlineP7_win_stiiji+0x48>  // b.none
  34:	ldr	w2, [sp, #24]
  38:	ldr	w1, [sp, #28]
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <wvline>
  44:	b	4c <_Z12CUR_mvwvlineP7_win_stiiji+0x4c>
  48:	mov	w0, #0xffffffff            	// #-1
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._Z12CUR_wattroffP7_win_sti:

0000000000000000 <_Z12CUR_wattroffP7_win_sti>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	w0, [sp, #20]
  14:	mov	x2, #0x0                   	// #0
  18:	mov	w1, w0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <wattr_off>
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK13NCursesWindow6heightEv:

0000000000000000 <_ZNK13NCursesWindow6heightEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow6heightEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow5widthEv:

0000000000000000 <_ZNK13NCursesWindow5widthEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow5widthEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxxEv:

0000000000000000 <_ZNK13NCursesWindow4maxxEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxxEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #6]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxxEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxxEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxxEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #6]
  54:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxyEv:

0000000000000000 <_ZNK13NCursesWindow4maxyEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxyEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #4]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxyEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxyEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxyEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #4]
  54:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	str	w2, [sp, #16]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x0, [x0, #8]
  1c:	ldr	w2, [sp, #16]
  20:	ldr	w1, [sp, #20]
  24:	bl	0 <mvwin>
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_getchEv:

0000000000000000 <_ZN13NCursesWindow9CUR_getchEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <wgetch>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_addchEiij:

0000000000000000 <_ZN13NCursesWindow9CUR_addchEiij>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	w3, [sp, #28]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #8]
  20:	ldr	w3, [sp, #28]
  24:	ldr	w2, [sp, #32]
  28:	ldr	w1, [sp, #36]
  2c:	bl	0 <_ZN13NCursesWindow9CUR_addchEiij>
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZN13NCursesWindow10CUR_attronEj:

0000000000000000 <_ZN13NCursesWindow10CUR_attronEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	mov	x2, #0x0                   	// #0
  1c:	ldr	w1, [sp, #20]
  20:	bl	0 <wattr_on>
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZN13NCursesWindow11CUR_attroffEj:

0000000000000000 <_ZN13NCursesWindow11CUR_attroffEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <_ZN13NCursesWindow11CUR_attroffEj>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_hlineEiiij:

0000000000000000 <_ZN13NCursesWindow9CUR_hlineEiiij>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	w3, [sp, #28]
  18:	str	w4, [sp, #24]
  1c:	ldr	x0, [sp, #40]
  20:	ldr	x0, [x0, #8]
  24:	ldr	w4, [sp, #28]
  28:	ldr	w3, [sp, #24]
  2c:	ldr	w2, [sp, #32]
  30:	ldr	w1, [sp, #36]
  34:	bl	0 <_ZN13NCursesWindow9CUR_hlineEiiij>
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_vlineEiiij:

0000000000000000 <_ZN13NCursesWindow9CUR_vlineEiiij>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	w3, [sp, #28]
  18:	str	w4, [sp, #24]
  1c:	ldr	x0, [sp, #40]
  20:	ldr	x0, [x0, #8]
  24:	ldr	w4, [sp, #28]
  28:	ldr	w3, [sp, #24]
  2c:	ldr	w2, [sp, #32]
  30:	ldr	w1, [sp, #36]
  34:	bl	0 <_ZN13NCursesWindow9CUR_vlineEiiij>
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN13NCursesWindow6syncupEv:

0000000000000000 <_ZN13NCursesWindow6syncupEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <wsyncup>
  18:	nop
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZN13NCursesWindow6keypadEb:

0000000000000000 <_ZN13NCursesWindow6keypadEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <keypad>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow4metaEb:

0000000000000000 <_ZN13NCursesWindow4metaEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strb	w1, [sp, #23]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldrb	w1, [sp, #23]
  1c:	bl	0 <meta>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN13NCursesWindow7copywinERS_iiiiiib:

0000000000000000 <_ZN13NCursesWindow7copywinERS_iiiiiib>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #72]
  10:	str	x1, [sp, #64]
  14:	str	w2, [sp, #60]
  18:	str	w3, [sp, #56]
  1c:	str	w4, [sp, #52]
  20:	str	w5, [sp, #48]
  24:	str	w6, [sp, #44]
  28:	str	w7, [sp, #40]
  2c:	ldr	x0, [sp, #72]
  30:	ldr	x8, [x0, #8]
  34:	ldr	x0, [sp, #64]
  38:	ldr	x1, [x0, #8]
  3c:	ldrb	w0, [sp, #80]
  40:	cmp	w0, #0x0
  44:	b.eq	50 <_ZN13NCursesWindow7copywinERS_iiiiiib+0x50>  // b.none
  48:	mov	w0, #0x1                   	// #1
  4c:	b	54 <_ZN13NCursesWindow7copywinERS_iiiiiib+0x54>
  50:	mov	w0, #0x0                   	// #0
  54:	str	w0, [sp]
  58:	ldr	w7, [sp, #40]
  5c:	ldr	w6, [sp, #44]
  60:	ldr	w5, [sp, #48]
  64:	ldr	w4, [sp, #52]
  68:	ldr	w3, [sp, #56]
  6c:	ldr	w2, [sp, #60]
  70:	mov	x0, x8
  74:	bl	0 <copywin>
  78:	ldp	x29, x30, [sp, #16]
  7c:	add	sp, sp, #0x50
  80:	ret

Disassembly of section .text._ZNK10NCursesPad3WinEv:

0000000000000000 <_ZNK10NCursesPad3WinEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #56]
  10:	cmp	x0, #0x0
  14:	b.eq	24 <_ZNK10NCursesPad3WinEv+0x24>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #56]
  20:	b	2c <_ZNK10NCursesPad3WinEv+0x2c>
  24:	ldr	x0, [sp, #8]
  28:	ldr	x0, [x0, #48]
  2c:	add	sp, sp, #0x10
  30:	ret

Disassembly of section .text._ZNK10NCursesPad9getWindowEv:

0000000000000000 <_ZNK10NCursesPad9getWindowEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #48]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK10NCursesPad12getSubWindowEv:

0000000000000000 <_ZNK10NCursesPad12getSubWindowEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #56]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN10NCursesPad18OnUnknownOperationEi:

0000000000000000 <_ZN10NCursesPad18OnUnknownOperationEi>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	bl	0 <beep>
  14:	nop
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN10NCursesPad17OnNavigationErrorEi:

0000000000000000 <_ZN10NCursesPad17OnNavigationErrorEi>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	bl	0 <beep>
  14:	nop
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN10NCursesPad11OnOperationEi:

0000000000000000 <_ZN10NCursesPad11OnOperationEi>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	nop
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN10NCursesPadD2Ev:

0000000000000000 <_ZN10NCursesPadD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN10NCursesPadD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN13NCursesWindowD2Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN10NCursesPadD0Ev:

0000000000000000 <_ZN10NCursesPadD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN10NCursesPadD0Ev>
  14:	mov	x1, #0x50                  	// #80
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN16NCursesFramedPadD2Ev:

0000000000000000 <_ZN16NCursesFramedPadD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN16NCursesFramedPadD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN16NCursesFramedPadD1Ev>
  28:	cmp	x0, #0x0
  2c:	b.eq	40 <_ZN16NCursesFramedPadD1Ev+0x40>  // b.none
  30:	ldr	x1, [x0]
  34:	add	x1, x1, #0x10
  38:	ldr	x1, [x1]
  3c:	blr	x1
  40:	ldr	x0, [sp, #24]
  44:	bl	0 <_ZN16NCursesFramedPadD1Ev>
  48:	nop
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN16NCursesFramedPadD0Ev:

0000000000000000 <_ZN16NCursesFramedPadD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesFramedPadD0Ev>
  14:	mov	x1, #0x50                  	// #80
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN16NCursesFramedPad9setWindowER13NCursesWindowii:

0000000000000000 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	str	w3, [sp, #24]
  18:	ldr	x3, [sp, #40]
  1c:	ldr	x0, [sp, #40]
  20:	ldr	x0, [x0]
  24:	ldr	x2, [x0]
  28:	adrp	x0, 0 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>
  2c:	add	x1, x0, #0x0
  30:	mov	x0, x3
  34:	blr	x2
  38:	nop
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN16NCursesFramedPad12setSubWindowER13NCursesWindow:

0000000000000000 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x3, [sp, #24]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x0, [x0]
  1c:	ldr	x2, [x0]
  20:	adrp	x0, 0 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>
  24:	add	x1, x0, #0x0
  28:	mov	x0, x3
  2c:	blr	x2
  30:	nop
  34:	ldp	x29, x30, [sp], #32
  38:	ret

cursesp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12NCursesPanel4initEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <new_panel>
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #24]
  20:	str	x1, [x0, #48]
  24:	ldr	x0, [sp, #24]
  28:	ldr	x0, [x0, #48]
  2c:	cmp	x0, #0x0
  30:	b.ne	40 <_ZN12NCursesPanel4initEv+0x40>  // b.any
  34:	mov	w1, #0xffffffff            	// #-1
  38:	ldr	x0, [sp, #24]
  3c:	bl	0 <_ZN12NCursesPanel4initEv>
  40:	mov	x0, #0x18                  	// #24
  44:	bl	0 <_Znwm>
  48:	str	x0, [sp, #40]
  4c:	ldr	x0, [sp, #40]
  50:	str	xzr, [x0]
  54:	ldr	x0, [sp, #40]
  58:	ldr	x1, [sp, #24]
  5c:	str	x1, [x0, #8]
  60:	ldr	x0, [sp, #24]
  64:	ldr	x1, [x0, #48]
  68:	ldr	x0, [sp, #40]
  6c:	str	x1, [x0, #16]
  70:	ldr	x0, [sp, #24]
  74:	ldr	x0, [x0, #48]
  78:	ldr	x1, [sp, #40]
  7c:	bl	0 <set_panel_userptr>
  80:	nop
  84:	ldp	x29, x30, [sp], #48
  88:	ret

000000000000008c <_ZN12NCursesPanelD1Ev>:
  8c:	stp	x29, x30, [sp, #-48]!
  90:	mov	x29, sp
  94:	str	x0, [sp, #24]
  98:	adrp	x0, 0 <_ZN12NCursesPanel4initEv>
  9c:	ldr	x0, [x0]
  a0:	add	x1, x0, #0x10
  a4:	ldr	x0, [sp, #24]
  a8:	str	x1, [x0]
  ac:	ldr	x0, [sp, #24]
  b0:	bl	0 <_ZN12NCursesPanel4initEv>
  b4:	str	x0, [sp, #40]
  b8:	ldr	x0, [sp, #40]
  bc:	cmp	x0, #0x0
  c0:	b.eq	cc <_ZN12NCursesPanelD1Ev+0x40>  // b.none
  c4:	mov	x1, #0x18                  	// #24
  c8:	bl	0 <_ZdlPvm>
  cc:	ldr	x0, [sp, #24]
  d0:	ldr	x0, [x0, #48]
  d4:	bl	0 <del_panel>
  d8:	bl	0 <update_panels>
  dc:	ldr	x0, [sp, #24]
  e0:	bl	0 <_ZN13NCursesWindowD2Ev>
  e4:	nop
  e8:	ldp	x29, x30, [sp], #48
  ec:	ret

00000000000000f0 <_ZN12NCursesPanelD0Ev>:
  f0:	stp	x29, x30, [sp, #-32]!
  f4:	mov	x29, sp
  f8:	str	x0, [sp, #24]
  fc:	ldr	x0, [sp, #24]
 100:	bl	8c <_ZN12NCursesPanelD1Ev>
 104:	mov	x1, #0x38                  	// #56
 108:	ldr	x0, [sp, #24]
 10c:	bl	0 <_ZdlPvm>
 110:	ldp	x29, x30, [sp], #32
 114:	ret

0000000000000118 <_ZN12NCursesPanel6redrawEv>:
 118:	stp	x29, x30, [sp, #-32]!
 11c:	mov	x29, sp
 120:	mov	x0, #0x0                   	// #0
 124:	bl	0 <panel_above>
 128:	str	x0, [sp, #24]
 12c:	ldr	x0, [sp, #24]
 130:	cmp	x0, #0x0
 134:	b.eq	154 <_ZN12NCursesPanel6redrawEv+0x3c>  // b.none
 138:	ldr	x0, [sp, #24]
 13c:	bl	0 <panel_window>
 140:	bl	0 <_ZN12NCursesPanel4initEv>
 144:	ldr	x0, [sp, #24]
 148:	bl	0 <panel_above>
 14c:	str	x0, [sp, #24]
 150:	b	12c <_ZN12NCursesPanel6redrawEv+0x14>
 154:	bl	0 <update_panels>
 158:	bl	0 <doupdate>
 15c:	nop
 160:	ldp	x29, x30, [sp], #32
 164:	ret

0000000000000168 <_ZN12NCursesPanel7refreshEv>:
 168:	stp	x29, x30, [sp, #-32]!
 16c:	mov	x29, sp
 170:	str	x0, [sp, #24]
 174:	bl	0 <update_panels>
 178:	bl	0 <doupdate>
 17c:	ldp	x29, x30, [sp], #32
 180:	ret

0000000000000184 <_ZN12NCursesPanel11noutrefreshEv>:
 184:	stp	x29, x30, [sp, #-32]!
 188:	mov	x29, sp
 18c:	str	x0, [sp, #24]
 190:	bl	0 <update_panels>
 194:	mov	w0, #0x0                   	// #0
 198:	ldp	x29, x30, [sp], #32
 19c:	ret

00000000000001a0 <_ZN12NCursesPanel9boldframeEPKcS1_>:
 1a0:	stp	x29, x30, [sp, #-48]!
 1a4:	mov	x29, sp
 1a8:	str	x0, [sp, #40]
 1ac:	str	x1, [sp, #32]
 1b0:	str	x2, [sp, #24]
 1b4:	ldr	x0, [sp, #40]
 1b8:	bl	0 <_ZN12NCursesPanel4initEv>
 1bc:	ldr	x0, [sp, #40]
 1c0:	ldr	x0, [x0]
 1c4:	add	x0, x0, #0x38
 1c8:	ldr	x3, [x0]
 1cc:	ldr	x2, [sp, #24]
 1d0:	ldr	x1, [sp, #32]
 1d4:	ldr	x0, [sp, #40]
 1d8:	blr	x3
 1dc:	ldr	x0, [sp, #40]
 1e0:	bl	0 <_ZN12NCursesPanel4initEv>
 1e4:	nop
 1e8:	ldp	x29, x30, [sp], #48
 1ec:	ret

00000000000001f0 <_ZN12NCursesPanel5frameEPKcS1_>:
 1f0:	stp	x29, x30, [sp, #-64]!
 1f4:	mov	x29, sp
 1f8:	str	x0, [sp, #40]
 1fc:	str	x1, [sp, #32]
 200:	str	x2, [sp, #24]
 204:	str	wzr, [sp, #60]
 208:	ldr	x0, [sp, #32]
 20c:	cmp	x0, #0x0
 210:	b.ne	238 <_ZN12NCursesPanel5frameEPKcS1_+0x48>  // b.any
 214:	ldr	x0, [sp, #24]
 218:	cmp	x0, #0x0
 21c:	b.ne	238 <_ZN12NCursesPanel5frameEPKcS1_+0x48>  // b.any
 220:	ldr	x0, [sp, #40]
 224:	mov	w2, #0x0                   	// #0
 228:	mov	w1, #0x0                   	// #0
 22c:	bl	0 <_ZN12NCursesPanel4initEv>
 230:	str	w0, [sp, #60]
 234:	b	278 <_ZN12NCursesPanel5frameEPKcS1_+0x88>
 238:	ldr	x0, [sp, #40]
 23c:	mov	w2, #0x0                   	// #0
 240:	mov	w1, #0x0                   	// #0
 244:	bl	0 <_ZN12NCursesPanel4initEv>
 248:	str	w0, [sp, #60]
 24c:	ldr	w0, [sp, #60]
 250:	cmp	w0, #0x0
 254:	b.ne	278 <_ZN12NCursesPanel5frameEPKcS1_+0x88>  // b.any
 258:	ldr	x0, [sp, #40]
 25c:	ldr	x0, [x0]
 260:	add	x0, x0, #0x48
 264:	ldr	x3, [x0]
 268:	ldr	x2, [sp, #24]
 26c:	ldr	x1, [sp, #32]
 270:	ldr	x0, [sp, #40]
 274:	blr	x3
 278:	ldr	w1, [sp, #60]
 27c:	ldr	x0, [sp, #40]
 280:	bl	0 <_ZN12NCursesPanel4initEv>
 284:	nop
 288:	ldp	x29, x30, [sp], #64
 28c:	ret

0000000000000290 <_ZN12NCursesPanel5labelEPKcS1_>:
 290:	stp	x29, x30, [sp, #-64]!
 294:	mov	x29, sp
 298:	str	x19, [sp, #16]
 29c:	str	x0, [sp, #56]
 2a0:	str	x1, [sp, #48]
 2a4:	str	x2, [sp, #40]
 2a8:	ldr	x0, [sp, #48]
 2ac:	cmp	x0, #0x0
 2b0:	b.eq	2d4 <_ZN12NCursesPanel5labelEPKcS1_+0x44>  // b.none
 2b4:	ldr	x0, [sp, #56]
 2b8:	ldr	x0, [x0]
 2bc:	add	x0, x0, #0x50
 2c0:	ldr	x3, [x0]
 2c4:	ldr	x2, [sp, #48]
 2c8:	mov	w1, #0x0                   	// #0
 2cc:	ldr	x0, [sp, #56]
 2d0:	blr	x3
 2d4:	ldr	x0, [sp, #40]
 2d8:	cmp	x0, #0x0
 2dc:	b.eq	308 <_ZN12NCursesPanel5labelEPKcS1_+0x78>  // b.none
 2e0:	ldr	x0, [sp, #56]
 2e4:	ldr	x0, [x0]
 2e8:	add	x0, x0, #0x50
 2ec:	ldr	x19, [x0]
 2f0:	ldr	x0, [sp, #56]
 2f4:	bl	0 <_ZN12NCursesPanel4initEv>
 2f8:	ldr	x2, [sp, #40]
 2fc:	mov	w1, w0
 300:	ldr	x0, [sp, #56]
 304:	blr	x19
 308:	nop
 30c:	ldr	x19, [sp, #16]
 310:	ldp	x29, x30, [sp], #64
 314:	ret

0000000000000318 <_ZN12NCursesPanel10centertextEiPKc>:
 318:	stp	x29, x30, [sp, #-80]!
 31c:	mov	x29, sp
 320:	str	x19, [sp, #16]
 324:	str	x0, [sp, #56]
 328:	str	w1, [sp, #52]
 32c:	str	x2, [sp, #40]
 330:	ldr	x0, [sp, #40]
 334:	cmp	x0, #0x0
 338:	b.eq	39c <_ZN12NCursesPanel10centertextEiPKc+0x84>  // b.none
 33c:	ldr	x0, [sp, #56]
 340:	bl	0 <_ZN12NCursesPanel4initEv>
 344:	sxtw	x19, w0
 348:	ldr	x0, [sp, #40]
 34c:	bl	0 <strlen>
 350:	sub	x0, x19, x0
 354:	lsr	x0, x0, #1
 358:	str	w0, [sp, #76]
 35c:	ldr	w0, [sp, #76]
 360:	cmp	w0, #0x0
 364:	b.ge	36c <_ZN12NCursesPanel10centertextEiPKc+0x54>  // b.tcont
 368:	str	wzr, [sp, #76]
 36c:	ldr	x19, [sp, #56]
 370:	ldr	x0, [sp, #56]
 374:	bl	0 <_ZN12NCursesPanel4initEv>
 378:	mov	w4, w0
 37c:	ldr	x3, [sp, #40]
 380:	ldr	w2, [sp, #76]
 384:	ldr	w1, [sp, #52]
 388:	mov	x0, x19
 38c:	bl	0 <_ZN12NCursesPanel4initEv>
 390:	mov	w1, w0
 394:	ldr	x0, [sp, #56]
 398:	bl	0 <_ZN12NCursesPanel4initEv>
 39c:	nop
 3a0:	ldr	x19, [sp, #16]
 3a4:	ldp	x29, x30, [sp], #80
 3a8:	ret

00000000000003ac <_ZN12NCursesPanel6getKeyEv>:
 3ac:	stp	x29, x30, [sp, #-32]!
 3b0:	mov	x29, sp
 3b4:	str	x0, [sp, #24]
 3b8:	ldr	x0, [sp, #24]
 3bc:	bl	0 <_ZN12NCursesPanel4initEv>
 3c0:	ldp	x29, x30, [sp], #32
 3c4:	ret

00000000000003c8 <_Z41__static_initialization_and_destruction_0ii>:
 3c8:	stp	x29, x30, [sp, #-32]!
 3cc:	mov	x29, sp
 3d0:	str	w0, [sp, #28]
 3d4:	str	w1, [sp, #24]
 3d8:	ldr	w0, [sp, #28]
 3dc:	cmp	w0, #0x1
 3e0:	b.ne	41c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 3e4:	ldr	w1, [sp, #24]
 3e8:	mov	w0, #0xffff                	// #65535
 3ec:	cmp	w1, w0
 3f0:	b.ne	41c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 3f4:	adrp	x0, 0 <_ZN12NCursesPanel4initEv>
 3f8:	add	x0, x0, #0x0
 3fc:	bl	0 <_ZNSt8ios_base4InitC1Ev>
 400:	adrp	x0, 0 <__dso_handle>
 404:	add	x2, x0, #0x0
 408:	adrp	x0, 0 <_ZN12NCursesPanel4initEv>
 40c:	add	x1, x0, #0x0
 410:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
 414:	ldr	x0, [x0]
 418:	bl	0 <__cxa_atexit>
 41c:	nop
 420:	ldp	x29, x30, [sp], #32
 424:	ret

0000000000000428 <_GLOBAL__sub_I_cursesp.cc>:
 428:	stp	x29, x30, [sp, #-16]!
 42c:	mov	x29, sp
 430:	mov	w1, #0xffff                	// #65535
 434:	mov	w0, #0x1                   	// #1
 438:	bl	3c8 <_Z41__static_initialization_and_destruction_0ii>
 43c:	ldp	x29, x30, [sp], #16
 440:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKci:

0000000000000000 <_ZN16NCursesExceptionC1EPKci>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKci>
  14:	ldr	x0, [x0]
  18:	add	x1, x0, #0x10
  1c:	ldr	x0, [sp, #24]
  20:	str	x1, [x0]
  24:	ldr	x0, [sp, #24]
  28:	ldr	x1, [sp, #16]
  2c:	str	x1, [x0, #8]
  30:	ldr	x0, [sp, #24]
  34:	ldr	w1, [sp, #12]
  38:	str	w1, [x0, #16]
  3c:	nop
  40:	add	sp, sp, #0x20
  44:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionC2EPK12NCursesPaneli:

0000000000000000 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	x3, [sp, #40]
  18:	ldr	w2, [sp, #28]
  1c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  20:	add	x1, x0, #0x0
  24:	mov	x0, x3
  28:	bl	0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  2c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionC1EPK12NCursesPaneli>
  30:	ldr	x0, [x0]
  34:	add	x1, x0, #0x10
  38:	ldr	x0, [sp, #40]
  3c:	str	x1, [x0]
  40:	ldr	x0, [sp, #40]
  44:	ldr	x1, [sp, #32]
  48:	str	x1, [x0, #24]
  4c:	nop
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZNK21NCursesPanelException9classnameEv:

0000000000000000 <_ZNK21NCursesPanelException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK21NCursesPanelException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionD2Ev:

0000000000000000 <_ZN21NCursesPanelExceptionD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN21NCursesPanelExceptionD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN21NCursesPanelExceptionD1Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN21NCursesPanelExceptionD0Ev:

0000000000000000 <_ZN21NCursesPanelExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN21NCursesPanelExceptionD0Ev>
  14:	mov	x1, #0x20                  	// #32
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._Z14CUR_mvwaddnstrP7_win_stiiPKci:

0000000000000000 <_Z14CUR_mvwaddnstrP7_win_stiiPKci>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	x3, [sp, #24]
  18:	str	w4, [sp, #20]
  1c:	ldr	w2, [sp, #32]
  20:	ldr	w1, [sp, #36]
  24:	ldr	x0, [sp, #40]
  28:	bl	0 <wmove>
  2c:	cmn	w0, #0x1
  30:	b.eq	48 <_Z14CUR_mvwaddnstrP7_win_stiiPKci+0x48>  // b.none
  34:	ldr	w2, [sp, #20]
  38:	ldr	x1, [sp, #24]
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <waddnstr>
  44:	b	4c <_Z14CUR_mvwaddnstrP7_win_stiiPKci+0x4c>
  48:	mov	w0, #0xffffffff            	// #-1
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._Z12CUR_touchwinP7_win_st:

0000000000000000 <_Z12CUR_touchwinP7_win_st>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	cmp	x0, #0x0
  14:	b.eq	28 <_Z12CUR_touchwinP7_win_st+0x28>  // b.none
  18:	ldr	x0, [sp, #24]
  1c:	ldrsh	w0, [x0, #4]
  20:	add	w0, w0, #0x1
  24:	b	2c <_Z12CUR_touchwinP7_win_st+0x2c>
  28:	mov	w0, #0xffffffff            	// #-1
  2c:	mov	w3, #0x1                   	// #1
  30:	mov	w2, w0
  34:	mov	w1, #0x0                   	// #0
  38:	ldr	x0, [sp, #24]
  3c:	bl	0 <wtouchln>
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._Z12CUR_wattrsetP7_win_sti:

0000000000000000 <_Z12CUR_wattrsetP7_win_sti>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	40 <_Z12CUR_wattrsetP7_win_sti+0x40>  // b.none
  18:	ldrsw	x0, [sp, #4]
  1c:	lsr	x0, x0, #8
  20:	and	w1, w0, #0xff
  24:	ldr	x0, [sp, #8]
  28:	str	w1, [x0, #116]
  2c:	ldr	w1, [sp, #4]
  30:	ldr	x0, [sp, #8]
  34:	str	w1, [x0, #16]
  38:	mov	w0, #0x0                   	// #0
  3c:	b	44 <_Z12CUR_wattrsetP7_win_sti+0x44>
  40:	mov	w0, #0xffffffff            	// #-1
  44:	add	sp, sp, #0x10
  48:	ret

Disassembly of section .text._Z13CUR_wstandendP7_win_st:

0000000000000000 <_Z13CUR_wstandendP7_win_st>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	mov	w1, #0x0                   	// #0
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_Z13CUR_wstandendP7_win_st>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._Z13CUR_wstandoutP7_win_st:

0000000000000000 <_Z13CUR_wstandoutP7_win_st>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	mov	w1, #0x10000               	// #65536
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_Z13CUR_wstandoutP7_win_st>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow5widthEv:

0000000000000000 <_ZNK13NCursesWindow5widthEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK13NCursesWindow5widthEv>
  14:	add	w0, w0, #0x1
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxxEv:

0000000000000000 <_ZNK13NCursesWindow4maxxEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxxEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #6]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxxEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxxEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxxEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #6]
  54:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxxEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZNK13NCursesWindow4maxyEv:

0000000000000000 <_ZNK13NCursesWindow4maxyEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	cmp	x0, #0x0
  14:	b.eq	2c <_ZNK13NCursesWindow4maxyEv+0x2c>  // b.none
  18:	ldr	x0, [sp, #8]
  1c:	ldr	x0, [x0, #8]
  20:	ldrsh	w0, [x0, #4]
  24:	add	w0, w0, #0x1
  28:	b	30 <_ZNK13NCursesWindow4maxyEv+0x30>
  2c:	mov	w0, #0xffffffff            	// #-1
  30:	cmn	w0, #0x1
  34:	b.eq	60 <_ZNK13NCursesWindow4maxyEv+0x60>  // b.none
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x0, #0x0
  44:	b.eq	58 <_ZNK13NCursesWindow4maxyEv+0x58>  // b.none
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x0, [x0, #8]
  50:	ldrsh	w0, [x0, #4]
  54:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  58:	mov	w0, #0xfffffffe            	// #-2
  5c:	b	64 <_ZNK13NCursesWindow4maxyEv+0x64>
  60:	mov	w0, #0xffffffff            	// #-1
  64:	add	sp, sp, #0x10
  68:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_getchEv:

0000000000000000 <_ZN13NCursesWindow9CUR_getchEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <wgetch>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN13NCursesWindow10CUR_addstrEiiPKci:

0000000000000000 <_ZN13NCursesWindow10CUR_addstrEiiPKci>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	x3, [sp, #24]
  18:	str	w4, [sp, #20]
  1c:	ldr	x0, [sp, #40]
  20:	ldr	x0, [x0, #8]
  24:	ldr	w4, [sp, #20]
  28:	ldr	x3, [sp, #24]
  2c:	ldr	w2, [sp, #32]
  30:	ldr	w1, [sp, #36]
  34:	bl	0 <_ZN13NCursesWindow10CUR_addstrEiiPKci>
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN13NCursesWindow3boxEjj:

0000000000000000 <_ZN13NCursesWindow3boxEjj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	str	w2, [sp, #32]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #8]
  20:	str	wzr, [sp]
  24:	mov	w7, #0x0                   	// #0
  28:	mov	w6, #0x0                   	// #0
  2c:	mov	w5, #0x0                   	// #0
  30:	ldr	w4, [sp, #32]
  34:	ldr	w3, [sp, #32]
  38:	ldr	w2, [sp, #36]
  3c:	ldr	w1, [sp, #36]
  40:	bl	0 <wborder>
  44:	ldp	x29, x30, [sp, #16]
  48:	add	sp, sp, #0x30
  4c:	ret

Disassembly of section .text._ZN13NCursesWindow12CUR_standoutEv:

0000000000000000 <_ZN13NCursesWindow12CUR_standoutEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZN13NCursesWindow12CUR_standoutEv>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN13NCursesWindow12CUR_standendEv:

0000000000000000 <_ZN13NCursesWindow12CUR_standendEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZN13NCursesWindow12CUR_standendEv>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN12NCursesPanel11UserPointerEv:

0000000000000000 <_ZN12NCursesPanel11UserPointerEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <panel_userptr>
  18:	str	x0, [sp, #40]
  1c:	ldr	x0, [sp, #40]
  20:	ldp	x29, x30, [sp], #48
  24:	ret

Disassembly of section .text._ZNK12NCursesPanel7OnErrorEi:

0000000000000000 <_ZNK12NCursesPanel7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	ldr	w0, [sp, #36]
  18:	cmn	w0, #0x1
  1c:	b.ne	44 <_ZNK12NCursesPanel7OnErrorEi+0x44>  // b.any
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	ldr	w2, [sp, #36]
  30:	ldr	x1, [sp, #40]
  34:	mov	x0, x19
  38:	bl	0 <_ZNK12NCursesPanel7OnErrorEi>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK12NCursesPanel7OnErrorEi>
  44:	nop
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	str	w2, [sp, #16]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x0, [x0, #48]
  1c:	ldr	w2, [sp, #16]
  20:	ldr	w1, [sp, #20]
  24:	bl	0 <move_panel>
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN12NCursesPanel5mvwinEii>
  34:	mov	w0, #0x0                   	// #0
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

cursslk.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	cmp	x0, #0x0
  1c:	b.eq	2c <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x2c>  // b.none
  20:	ldr	x0, [sp, #24]
  24:	ldr	x0, [x0, #8]
  28:	bl	0 <_ZdaPv>
  2c:	ldr	x0, [sp, #16]
  30:	bl	0 <strlen>
  34:	add	x0, x0, #0x1
  38:	str	x0, [sp, #40]
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <_Znam>
  44:	mov	x1, x0
  48:	ldr	x0, [sp, #24]
  4c:	str	x1, [x0, #8]
  50:	ldr	x0, [sp, #24]
  54:	ldr	x0, [x0, #8]
  58:	ldr	x1, [sp, #16]
  5c:	bl	0 <strcpy>
  60:	ldr	x0, [sp, #24]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

000000000000006c <_ZN18Soft_Label_Key_Set4initEv>:
  6c:	stp	x29, x30, [sp, #-80]!
  70:	mov	x29, sp
  74:	stp	x19, x20, [sp, #16]
  78:	str	x21, [sp, #32]
  7c:	str	x0, [sp, #56]
  80:	adrp	x0, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
  84:	ldr	x0, [x0]
  88:	ldr	w0, [x0]
  8c:	sxtw	x19, w0
  90:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  94:	movk	x0, #0x555, lsl #48
  98:	cmp	x19, x0
  9c:	b.hi	b8 <_ZN18Soft_Label_Key_Set4initEv+0x4c>  // b.pmore
  a0:	mov	x0, x19
  a4:	lsl	x0, x0, #1
  a8:	add	x0, x0, x19
  ac:	lsl	x0, x0, #3
  b0:	add	x0, x0, #0x8
  b4:	b	bc <_ZN18Soft_Label_Key_Set4initEv+0x50>
  b8:	mov	x0, #0xffffffffffffffff    	// #-1
  bc:	bl	0 <_Znam>
  c0:	mov	x20, x0
  c4:	str	x19, [x20]
  c8:	add	x0, x20, #0x8
  cc:	sub	x1, x19, #0x1
  d0:	mov	x19, x1
  d4:	mov	x21, x0
  d8:	cmp	x19, #0x0
  dc:	b.lt	f4 <_ZN18Soft_Label_Key_Set4initEv+0x88>  // b.tstop
  e0:	mov	x0, x21
  e4:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
  e8:	add	x21, x21, #0x18
  ec:	sub	x19, x19, #0x1
  f0:	b	d8 <_ZN18Soft_Label_Key_Set4initEv+0x6c>
  f4:	add	x1, x20, #0x8
  f8:	ldr	x0, [sp, #56]
  fc:	str	x1, [x0, #16]
 100:	str	wzr, [sp, #76]
 104:	adrp	x0, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 108:	ldr	x0, [x0]
 10c:	ldr	w0, [x0]
 110:	ldr	w1, [sp, #76]
 114:	cmp	w1, w0
 118:	b.ge	158 <_ZN18Soft_Label_Key_Set4initEv+0xec>  // b.tcont
 11c:	ldr	x0, [sp, #56]
 120:	ldr	x2, [x0, #16]
 124:	ldrsw	x1, [sp, #76]
 128:	mov	x0, x1
 12c:	lsl	x0, x0, #1
 130:	add	x0, x0, x1
 134:	lsl	x0, x0, #3
 138:	add	x0, x2, x0
 13c:	ldr	w1, [sp, #76]
 140:	add	w1, w1, #0x1
 144:	str	w1, [x0, #20]
 148:	ldr	w0, [sp, #76]
 14c:	add	w0, w0, #0x1
 150:	str	w0, [sp, #76]
 154:	b	104 <_ZN18Soft_Label_Key_Set4initEv+0x98>
 158:	ldr	x0, [sp, #56]
 15c:	strb	wzr, [x0, #8]
 160:	nop
 164:	ldp	x19, x20, [sp, #16]
 168:	ldr	x21, [sp, #32]
 16c:	ldp	x29, x30, [sp], #80
 170:	ret

0000000000000174 <_ZN18Soft_Label_Key_SetC1Ev>:
 174:	stp	x29, x30, [sp, #-32]!
 178:	mov	x29, sp
 17c:	str	x0, [sp, #24]
 180:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 184:	ldr	x0, [x0]
 188:	add	x1, x0, #0x10
 18c:	ldr	x0, [sp, #24]
 190:	str	x1, [x0]
 194:	ldr	x0, [sp, #24]
 198:	strb	wzr, [x0, #8]
 19c:	ldr	x0, [sp, #24]
 1a0:	str	xzr, [x0, #16]
 1a4:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1a8:	ldr	x0, [x0]
 1ac:	ldr	w0, [x0]
 1b0:	cmn	w0, #0x1
 1b4:	b.ne	1c8 <_ZN18Soft_Label_Key_SetC1Ev+0x54>  // b.any
 1b8:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1bc:	add	x1, x0, #0x0
 1c0:	ldr	x0, [sp, #24]
 1c4:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1c8:	ldr	x0, [sp, #24]
 1cc:	bl	6c <_ZN18Soft_Label_Key_Set4initEv>
 1d0:	nop
 1d4:	ldp	x29, x30, [sp], #32
 1d8:	ret

00000000000001dc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>:
 1dc:	stp	x29, x30, [sp, #-32]!
 1e0:	mov	x29, sp
 1e4:	str	x0, [sp, #24]
 1e8:	str	w1, [sp, #20]
 1ec:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1f0:	ldr	x0, [x0]
 1f4:	add	x1, x0, #0x10
 1f8:	ldr	x0, [sp, #24]
 1fc:	str	x1, [x0]
 200:	ldr	x0, [sp, #24]
 204:	strb	wzr, [x0, #8]
 208:	ldr	x0, [sp, #24]
 20c:	str	xzr, [x0, #16]
 210:	ldr	w0, [sp, #20]
 214:	cmn	w0, #0x1
 218:	b.ne	22c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x50>  // b.any
 21c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 220:	add	x1, x0, #0x0
 224:	ldr	x0, [sp, #24]
 228:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 22c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 230:	ldr	x0, [x0]
 234:	ldr	x0, [x0]
 238:	add	x2, x0, #0x1
 23c:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 240:	ldr	x1, [x1]
 244:	str	x2, [x1]
 248:	cmp	x0, #0x0
 24c:	cset	w0, eq  // eq = none
 250:	and	w0, w0, #0xff
 254:	cmp	w0, #0x0
 258:	b.eq	2c0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xe4>  // b.none
 25c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 260:	ldr	x0, [x0]
 264:	ldr	w1, [sp, #20]
 268:	str	w1, [x0]
 26c:	ldr	w0, [sp, #20]
 270:	bl	0 <slk_init>
 274:	cmn	w0, #0x1
 278:	cset	w0, eq  // eq = none
 27c:	and	w0, w0, #0xff
 280:	cmp	w0, #0x0
 284:	b.eq	298 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xbc>  // b.none
 288:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 28c:	add	x1, x0, #0x0
 290:	ldr	x0, [sp, #24]
 294:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 298:	ldr	w0, [sp, #20]
 29c:	cmp	w0, #0x1
 2a0:	b.le	2ac <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xd0>
 2a4:	mov	w0, #0xc                   	// #12
 2a8:	b	2b0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xd4>
 2ac:	mov	w0, #0x8                   	// #8
 2b0:	adrp	x1, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 2b4:	ldr	x1, [x1]
 2b8:	str	w0, [x1]
 2bc:	b	2e8 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x10c>
 2c0:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2c4:	ldr	x0, [x0]
 2c8:	ldr	w0, [x0]
 2cc:	ldr	w1, [sp, #20]
 2d0:	cmp	w1, w0
 2d4:	b.eq	2e8 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x10c>  // b.none
 2d8:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2dc:	add	x1, x0, #0x0
 2e0:	ldr	x0, [sp, #24]
 2e4:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2e8:	ldr	x0, [sp, #24]
 2ec:	bl	6c <_ZN18Soft_Label_Key_Set4initEv>
 2f0:	nop
 2f4:	ldp	x29, x30, [sp], #32
 2f8:	ret

00000000000002fc <_ZN18Soft_Label_Key_SetD1Ev>:
 2fc:	stp	x29, x30, [sp, #-48]!
 300:	mov	x29, sp
 304:	str	x19, [sp, #16]
 308:	str	x0, [sp, #40]
 30c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 310:	ldr	x0, [x0]
 314:	add	x1, x0, #0x10
 318:	ldr	x0, [sp, #40]
 31c:	str	x1, [x0]
 320:	bl	0 <isendwin>
 324:	and	w0, w0, #0xff
 328:	eor	w0, w0, #0x1
 32c:	and	w0, w0, #0xff
 330:	cmp	w0, #0x0
 334:	b.eq	340 <_ZN18Soft_Label_Key_SetD1Ev+0x44>  // b.none
 338:	ldr	x0, [sp, #40]
 33c:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 340:	ldr	x0, [sp, #40]
 344:	ldr	x0, [x0, #16]
 348:	cmp	x0, #0x0
 34c:	b.eq	3e0 <_ZN18Soft_Label_Key_SetD1Ev+0xe4>  // b.none
 350:	ldr	x0, [sp, #40]
 354:	ldr	x2, [x0, #16]
 358:	ldr	x0, [sp, #40]
 35c:	ldr	x0, [x0, #16]
 360:	sub	x0, x0, #0x8
 364:	ldr	x1, [x0]
 368:	mov	x0, x1
 36c:	lsl	x0, x0, #1
 370:	add	x0, x0, x1
 374:	lsl	x0, x0, #3
 378:	add	x19, x2, x0
 37c:	ldr	x0, [sp, #40]
 380:	ldr	x0, [x0, #16]
 384:	cmp	x19, x0
 388:	b.eq	3a4 <_ZN18Soft_Label_Key_SetD1Ev+0xa8>  // b.none
 38c:	sub	x19, x19, #0x18
 390:	ldr	x0, [x19]
 394:	ldr	x1, [x0]
 398:	mov	x0, x19
 39c:	blr	x1
 3a0:	b	37c <_ZN18Soft_Label_Key_SetD1Ev+0x80>
 3a4:	ldr	x0, [sp, #40]
 3a8:	ldr	x0, [x0, #16]
 3ac:	sub	x2, x0, #0x8
 3b0:	ldr	x0, [sp, #40]
 3b4:	ldr	x0, [x0, #16]
 3b8:	sub	x0, x0, #0x8
 3bc:	ldr	x1, [x0]
 3c0:	mov	x0, x1
 3c4:	lsl	x0, x0, #1
 3c8:	add	x0, x0, x1
 3cc:	lsl	x0, x0, #3
 3d0:	add	x0, x0, #0x8
 3d4:	mov	x1, x0
 3d8:	mov	x0, x2
 3dc:	bl	0 <_ZdaPvm>
 3e0:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3e4:	ldr	x0, [x0]
 3e8:	ldr	x0, [x0]
 3ec:	sub	x1, x0, #0x1
 3f0:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3f4:	ldr	x0, [x0]
 3f8:	str	x1, [x0]
 3fc:	nop
 400:	ldr	x19, [sp, #16]
 404:	ldp	x29, x30, [sp], #48
 408:	ret

000000000000040c <_ZN18Soft_Label_Key_SetD0Ev>:
 40c:	stp	x29, x30, [sp, #-32]!
 410:	mov	x29, sp
 414:	str	x0, [sp, #24]
 418:	ldr	x0, [sp, #24]
 41c:	bl	2fc <_ZN18Soft_Label_Key_SetD1Ev>
 420:	mov	x1, #0x18                  	// #24
 424:	ldr	x0, [sp, #24]
 428:	bl	0 <_ZdlPvm>
 42c:	ldp	x29, x30, [sp], #32
 430:	ret

0000000000000434 <_ZN18Soft_Label_Key_SetixEi>:
 434:	stp	x29, x30, [sp, #-32]!
 438:	mov	x29, sp
 43c:	str	x0, [sp, #24]
 440:	str	w1, [sp, #20]
 444:	ldr	w0, [sp, #20]
 448:	cmp	w0, #0x0
 44c:	b.le	468 <_ZN18Soft_Label_Key_SetixEi+0x34>
 450:	adrp	x0, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 454:	ldr	x0, [x0]
 458:	ldr	w0, [x0]
 45c:	ldr	w1, [sp, #20]
 460:	cmp	w1, w0
 464:	b.le	478 <_ZN18Soft_Label_Key_SetixEi+0x44>
 468:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 46c:	add	x1, x0, #0x0
 470:	ldr	x0, [sp, #24]
 474:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 478:	ldr	x0, [sp, #24]
 47c:	ldr	x2, [x0, #16]
 480:	ldrsw	x1, [sp, #20]
 484:	mov	x0, x1
 488:	lsl	x0, x0, #1
 48c:	add	x0, x0, x1
 490:	lsl	x0, x0, #3
 494:	sub	x0, x0, #0x18
 498:	add	x0, x2, x0
 49c:	ldp	x29, x30, [sp], #32
 4a0:	ret

00000000000004a4 <_ZN18Soft_Label_Key_Set14activate_labelEib>:
 4a4:	stp	x29, x30, [sp, #-48]!
 4a8:	mov	x29, sp
 4ac:	str	x0, [sp, #24]
 4b0:	str	w1, [sp, #20]
 4b4:	strb	w2, [sp, #19]
 4b8:	ldr	x0, [sp, #24]
 4bc:	ldrb	w0, [x0, #8]
 4c0:	eor	w0, w0, #0x1
 4c4:	and	w0, w0, #0xff
 4c8:	cmp	w0, #0x0
 4cc:	b.eq	514 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x70>  // b.none
 4d0:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 4d4:	str	x0, [sp, #40]
 4d8:	ldr	x0, [sp, #40]
 4dc:	cmp	x0, #0x0
 4e0:	b.eq	508 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x64>  // b.none
 4e4:	ldr	x0, [sp, #40]
 4e8:	ldr	x0, [x0]
 4ec:	add	x0, x0, #0x60
 4f0:	ldr	x1, [x0]
 4f4:	ldr	x0, [sp, #40]
 4f8:	blr	x1
 4fc:	mov	w1, w0
 500:	ldr	x0, [sp, #24]
 504:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 508:	ldr	x0, [sp, #24]
 50c:	mov	w1, #0x1                   	// #1
 510:	strb	w1, [x0, #8]
 514:	ldr	w1, [sp, #20]
 518:	ldr	x0, [sp, #24]
 51c:	bl	434 <_ZN18Soft_Label_Key_SetixEi>
 520:	str	x0, [sp, #32]
 524:	ldr	x0, [sp, #32]
 528:	ldr	w3, [x0, #20]
 52c:	ldrb	w0, [sp, #19]
 530:	cmp	w0, #0x0
 534:	b.eq	544 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xa0>  // b.none
 538:	ldr	x0, [sp, #32]
 53c:	ldr	x0, [x0, #8]
 540:	b	54c <_ZN18Soft_Label_Key_Set14activate_labelEib+0xa8>
 544:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 548:	add	x0, x0, #0x0
 54c:	ldr	x1, [sp, #32]
 550:	ldr	w1, [x1, #16]
 554:	mov	w2, w1
 558:	mov	x1, x0
 55c:	mov	w0, w3
 560:	bl	0 <slk_set>
 564:	cmn	w0, #0x1
 568:	cset	w0, eq  // eq = none
 56c:	and	w0, w0, #0xff
 570:	cmp	w0, #0x0
 574:	b.eq	588 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xe4>  // b.none
 578:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 57c:	add	x1, x0, #0x0
 580:	ldr	x0, [sp, #24]
 584:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 588:	ldr	x0, [sp, #24]
 58c:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 590:	nop
 594:	ldp	x29, x30, [sp], #48
 598:	ret

000000000000059c <_ZN18Soft_Label_Key_Set15activate_labelsEb>:
 59c:	stp	x29, x30, [sp, #-64]!
 5a0:	mov	x29, sp
 5a4:	str	x0, [sp, #24]
 5a8:	strb	w1, [sp, #23]
 5ac:	ldr	x0, [sp, #24]
 5b0:	ldrb	w0, [x0, #8]
 5b4:	eor	w0, w0, #0x1
 5b8:	and	w0, w0, #0xff
 5bc:	cmp	w0, #0x0
 5c0:	b.eq	608 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x6c>  // b.none
 5c4:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5c8:	str	x0, [sp, #48]
 5cc:	ldr	x0, [sp, #48]
 5d0:	cmp	x0, #0x0
 5d4:	b.eq	5fc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x60>  // b.none
 5d8:	ldr	x0, [sp, #48]
 5dc:	ldr	x0, [x0]
 5e0:	add	x0, x0, #0x60
 5e4:	ldr	x1, [x0]
 5e8:	ldr	x0, [sp, #48]
 5ec:	blr	x1
 5f0:	mov	w1, w0
 5f4:	ldr	x0, [sp, #24]
 5f8:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5fc:	ldr	x0, [sp, #24]
 600:	mov	w1, #0x1                   	// #1
 604:	strb	w1, [x0, #8]
 608:	mov	w0, #0x1                   	// #1
 60c:	str	w0, [sp, #60]
 610:	adrp	x0, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 614:	ldr	x0, [x0]
 618:	ldr	w0, [x0]
 61c:	ldr	w1, [sp, #60]
 620:	cmp	w1, w0
 624:	b.gt	6ac <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x110>
 628:	ldr	w1, [sp, #60]
 62c:	ldr	x0, [sp, #24]
 630:	bl	434 <_ZN18Soft_Label_Key_SetixEi>
 634:	str	x0, [sp, #40]
 638:	ldr	x0, [sp, #40]
 63c:	ldr	w3, [x0, #20]
 640:	ldrb	w0, [sp, #23]
 644:	cmp	w0, #0x0
 648:	b.eq	658 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xbc>  // b.none
 64c:	ldr	x0, [sp, #40]
 650:	ldr	x0, [x0, #8]
 654:	b	660 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xc4>
 658:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 65c:	add	x0, x0, #0x0
 660:	ldr	x1, [sp, #40]
 664:	ldr	w1, [x1, #16]
 668:	mov	w2, w1
 66c:	mov	x1, x0
 670:	mov	w0, w3
 674:	bl	0 <slk_set>
 678:	cmn	w0, #0x1
 67c:	cset	w0, eq  // eq = none
 680:	and	w0, w0, #0xff
 684:	cmp	w0, #0x0
 688:	b.eq	69c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x100>  // b.none
 68c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 690:	add	x1, x0, #0x0
 694:	ldr	x0, [sp, #24]
 698:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 69c:	ldr	w0, [sp, #60]
 6a0:	add	w0, w0, #0x1
 6a4:	str	w0, [sp, #60]
 6a8:	b	610 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x74>
 6ac:	ldrb	w0, [sp, #23]
 6b0:	cmp	w0, #0x0
 6b4:	b.eq	6c4 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x128>  // b.none
 6b8:	ldr	x0, [sp, #24]
 6bc:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6c0:	b	6cc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x130>
 6c4:	ldr	x0, [sp, #24]
 6c8:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6cc:	ldr	x0, [sp, #24]
 6d0:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6d4:	nop
 6d8:	ldp	x29, x30, [sp], #64
 6dc:	ret

00000000000006e0 <_Z41__static_initialization_and_destruction_0ii>:
 6e0:	stp	x29, x30, [sp, #-32]!
 6e4:	mov	x29, sp
 6e8:	str	w0, [sp, #28]
 6ec:	str	w1, [sp, #24]
 6f0:	ldr	w0, [sp, #28]
 6f4:	cmp	w0, #0x1
 6f8:	b.ne	734 <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 6fc:	ldr	w1, [sp, #24]
 700:	mov	w0, #0xffff                	// #65535
 704:	cmp	w1, w0
 708:	b.ne	734 <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 70c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 710:	add	x0, x0, #0x0
 714:	bl	0 <_ZNSt8ios_base4InitC1Ev>
 718:	adrp	x0, 0 <__dso_handle>
 71c:	add	x2, x0, #0x0
 720:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 724:	add	x1, x0, #0x0
 728:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
 72c:	ldr	x0, [x0]
 730:	bl	0 <__cxa_atexit>
 734:	nop
 738:	ldp	x29, x30, [sp], #32
 73c:	ret

0000000000000740 <_GLOBAL__sub_I_cursslk.cc>:
 740:	stp	x29, x30, [sp, #-16]!
 744:	mov	x29, sp
 748:	mov	w1, #0xffff                	// #65535
 74c:	mov	w0, #0x1                   	// #1
 750:	bl	6e0 <_Z41__static_initialization_and_destruction_0ii>
 754:	ldp	x29, x30, [sp], #16
 758:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKc:

0000000000000000 <_ZN16NCursesExceptionC1EPKc>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKc>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #8]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #8]
  24:	ldr	x1, [sp]
  28:	str	x1, [x0, #8]
  2c:	ldr	x0, [sp, #8]
  30:	mov	w1, #0xffffffff            	// #-1
  34:	str	w1, [x0, #16]
  38:	nop
  3c:	add	sp, sp, #0x10
  40:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyC2Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyC1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	ldr	x0, [sp, #8]
  20:	str	xzr, [x0, #8]
  24:	ldr	x0, [sp, #8]
  28:	str	wzr, [x0, #16]
  2c:	ldr	x0, [sp, #8]
  30:	mov	w1, #0xffffffff            	// #-1
  34:	str	w1, [x0, #20]
  38:	nop
  3c:	add	sp, sp, #0x10
  40:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD1Ev>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	ldr	x0, [x0, #8]
  28:	cmp	x0, #0x0
  2c:	b.eq	3c <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD1Ev+0x3c>  // b.none
  30:	ldr	x0, [sp, #24]
  34:	ldr	x0, [x0, #8]
  38:	bl	0 <_ZdaPv>
  3c:	nop
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK18Soft_Label_Key_Set5ErrorEPKc:

0000000000000000 <_ZNK18Soft_Label_Key_Set5ErrorEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	mov	x0, #0x18                  	// #24
  18:	bl	0 <_Znwm>
  1c:	mov	x19, x0
  20:	ldr	x1, [sp, #32]
  24:	mov	x0, x19
  28:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc>
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc>
  34:	nop
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set5clearEv:

0000000000000000 <_ZN18Soft_Label_Key_Set5clearEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <slk_clear>
  10:	cmn	w0, #0x1
  14:	cset	w0, eq  // eq = none
  18:	and	w0, w0, #0xff
  1c:	cmp	w0, #0x0
  20:	b.eq	34 <_ZN18Soft_Label_Key_Set5clearEv+0x34>  // b.none
  24:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set5clearEv>
  28:	add	x1, x0, #0x0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN18Soft_Label_Key_Set5clearEv>
  34:	nop
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set7restoreEv:

0000000000000000 <_ZN18Soft_Label_Key_Set7restoreEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <slk_restore>
  10:	cmn	w0, #0x1
  14:	cset	w0, eq  // eq = none
  18:	and	w0, w0, #0xff
  1c:	cmp	w0, #0x0
  20:	b.eq	34 <_ZN18Soft_Label_Key_Set7restoreEv+0x34>  // b.none
  24:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set7restoreEv>
  28:	add	x1, x0, #0x0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN18Soft_Label_Key_Set7restoreEv>
  34:	nop
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set11noutrefreshEv:

0000000000000000 <_ZN18Soft_Label_Key_Set11noutrefreshEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <slk_noutrefresh>
  10:	cmn	w0, #0x1
  14:	cset	w0, eq  // eq = none
  18:	and	w0, w0, #0xff
  1c:	cmp	w0, #0x0
  20:	b.eq	34 <_ZN18Soft_Label_Key_Set11noutrefreshEv+0x34>  // b.none
  24:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set11noutrefreshEv>
  28:	add	x1, x0, #0x0
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <_ZN18Soft_Label_Key_Set11noutrefreshEv>
  34:	nop
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set11CUR_attrsetEj:

0000000000000000 <_ZN18Soft_Label_Key_Set11CUR_attrsetEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	w0, [sp, #20]
  14:	bl	0 <slk_attrset>
  18:	cmn	w0, #0x1
  1c:	cset	w0, eq  // eq = none
  20:	and	w0, w0, #0xff
  24:	cmp	w0, #0x0
  28:	b.eq	3c <_ZN18Soft_Label_Key_Set11CUR_attrsetEj+0x3c>  // b.none
  2c:	adrp	x0, 0 <_ZN18Soft_Label_Key_Set11CUR_attrsetEj>
  30:	add	x1, x0, #0x0
  34:	ldr	x0, [sp, #24]
  38:	bl	0 <_ZN18Soft_Label_Key_Set11CUR_attrsetEj>
  3c:	nop
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN18NCursesApplication14getApplicationEv:

0000000000000000 <_ZN18NCursesApplication14getApplicationEv>:
   0:	adrp	x0, 0 <_ZN18NCursesApplication6theAppE>
   4:	ldr	x0, [x0]
   8:	ldr	x0, [x0]
   c:	ret

cursesapp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18NCursesApplication4initEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	strb	w1, [sp, #39]
  14:	ldrb	w0, [sp, #39]
  18:	cmp	w0, #0x0
  1c:	b.eq	24 <_ZN18NCursesApplication4initEb+0x24>  // b.none
  20:	bl	0 <_ZN13NCursesWindow9useColorsEv>
  24:	ldr	x0, [sp, #40]
  28:	ldr	x0, [x0, #16]
  2c:	bl	0 <_ZN18NCursesApplication4initEb>
  30:	cmp	w0, #0x1
  34:	cset	w0, gt
  38:	and	w0, w0, #0xff
  3c:	cmp	w0, #0x0
  40:	b.eq	12c <_ZN18NCursesApplication4initEb+0x12c>  // b.none
  44:	ldr	x0, [sp, #40]
  48:	mov	w1, #0x1                   	// #1
  4c:	strb	w1, [x0, #8]
  50:	ldr	x0, [sp, #40]
  54:	ldr	x0, [x0, #16]
  58:	mov	w1, #0x1                   	// #1
  5c:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  60:	ldr	x0, [sp, #40]
  64:	ldr	x0, [x0, #16]
  68:	mov	w2, #0x4                   	// #4
  6c:	mov	w1, #0x3                   	// #3
  70:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  74:	ldr	x0, [sp, #40]
  78:	ldr	x0, [x0, #16]
  7c:	mov	w1, #0x2                   	// #2
  80:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  84:	ldr	x0, [sp, #40]
  88:	ldr	x0, [x0, #16]
  8c:	mov	w2, #0x4                   	// #4
  90:	mov	w1, #0x6                   	// #6
  94:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  98:	ldr	x0, [sp, #40]
  9c:	ldr	x0, [x0, #16]
  a0:	mov	w1, #0x3                   	// #3
  a4:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  a8:	ldr	x0, [sp, #40]
  ac:	ldr	x0, [x0, #16]
  b0:	mov	w2, #0x4                   	// #4
  b4:	mov	w1, #0x0                   	// #0
  b8:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  bc:	ldr	x0, [sp, #40]
  c0:	ldr	x0, [x0, #16]
  c4:	mov	w1, #0x4                   	// #4
  c8:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  cc:	ldr	x0, [sp, #40]
  d0:	ldr	x0, [x0, #16]
  d4:	mov	w2, #0x6                   	// #6
  d8:	mov	w1, #0x0                   	// #0
  dc:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  e0:	ldr	x0, [sp, #40]
  e4:	ldr	x0, [x0, #16]
  e8:	mov	w1, #0x5                   	// #5
  ec:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  f0:	ldr	x0, [sp, #40]
  f4:	ldr	x0, [x0, #16]
  f8:	mov	w2, #0x3                   	// #3
  fc:	mov	w1, #0x4                   	// #4
 100:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
 104:	ldr	x0, [sp, #40]
 108:	ldr	x0, [x0, #16]
 10c:	mov	w1, #0x6                   	// #6
 110:	bl	0 <_ZN13NCursesWindow8setcolorEs>
 114:	ldr	x0, [sp, #40]
 118:	ldr	x0, [x0, #16]
 11c:	mov	w2, #0x2                   	// #2
 120:	mov	w1, #0x0                   	// #0
 124:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
 128:	b	134 <_ZN18NCursesApplication4initEb+0x134>
 12c:	ldr	x0, [sp, #40]
 130:	strb	wzr, [x0, #8]
 134:	ldr	x0, [sp, #40]
 138:	ldr	x19, [x0, #16]
 13c:	ldr	x0, [sp, #40]
 140:	ldr	x0, [x0]
 144:	add	x0, x0, #0x70
 148:	ldr	x1, [x0]
 14c:	ldr	x0, [sp, #40]
 150:	blr	x1
 154:	orr	w0, w0, #0x20
 158:	mov	w1, w0
 15c:	mov	x0, x19
 160:	bl	0 <_ZN18NCursesApplication4initEb>
 164:	nop
 168:	ldr	x19, [sp, #16]
 16c:	ldp	x29, x30, [sp], #48
 170:	ret

0000000000000174 <_ZN18NCursesApplicationD1Ev>:
 174:	stp	x29, x30, [sp, #-48]!
 178:	mov	x29, sp
 17c:	str	x0, [sp, #24]
 180:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 184:	ldr	x0, [x0]
 188:	add	x1, x0, #0x10
 18c:	ldr	x0, [sp, #24]
 190:	str	x1, [x0]
 194:	adrp	x0, 8 <_ZN18NCursesApplication4initEb+0x8>
 198:	ldr	x0, [x0]
 19c:	ldr	x0, [x0]
 1a0:	cmp	x0, #0x0
 1a4:	b.eq	1b8 <_ZN18NCursesApplicationD1Ev+0x44>  // b.none
 1a8:	ldr	x1, [x0]
 1ac:	add	x1, x1, #0x10
 1b0:	ldr	x1, [x1]
 1b4:	blr	x1
 1b8:	adrp	x0, 8 <_ZN18NCursesApplication4initEb+0x8>
 1bc:	ldr	x0, [x0]
 1c0:	str	xzr, [x0]
 1c4:	ldr	x0, [sp, #24]
 1c8:	bl	3b4 <_ZNK18NCursesApplication3topEv>
 1cc:	str	x0, [sp, #40]
 1d0:	ldr	x0, [sp, #40]
 1d4:	cmp	x0, #0x0
 1d8:	cset	w0, ne  // ne = any
 1dc:	and	w0, w0, #0xff
 1e0:	cmp	w0, #0x0
 1e4:	b.eq	210 <_ZN18NCursesApplicationD1Ev+0x9c>  // b.none
 1e8:	ldr	x0, [sp, #24]
 1ec:	bl	304 <_ZN18NCursesApplication3popEv>
 1f0:	ldr	x0, [sp, #40]
 1f4:	cmp	x0, #0x0
 1f8:	b.eq	1c4 <_ZN18NCursesApplicationD1Ev+0x50>  // b.none
 1fc:	ldr	x1, [x0]
 200:	add	x1, x1, #0x8
 204:	ldr	x1, [x1]
 208:	blr	x1
 20c:	b	1c4 <_ZN18NCursesApplicationD1Ev+0x50>
 210:	ldr	x0, [sp, #24]
 214:	ldr	x0, [x0, #16]
 218:	cmp	x0, #0x0
 21c:	b.eq	230 <_ZN18NCursesApplicationD1Ev+0xbc>  // b.none
 220:	ldr	x1, [x0]
 224:	add	x1, x1, #0x10
 228:	ldr	x1, [x1]
 22c:	blr	x1
 230:	ldr	x0, [sp, #24]
 234:	str	xzr, [x0, #16]
 238:	bl	0 <endwin>
 23c:	nop
 240:	ldp	x29, x30, [sp], #48
 244:	ret

0000000000000248 <_ZN18NCursesApplicationD0Ev>:
 248:	stp	x29, x30, [sp, #-32]!
 24c:	mov	x29, sp
 250:	str	x0, [sp, #24]
 254:	ldr	x0, [sp, #24]
 258:	bl	174 <_ZN18NCursesApplicationD1Ev>
 25c:	mov	x1, #0x18                  	// #24
 260:	ldr	x0, [sp, #24]
 264:	bl	0 <_ZdlPvm>
 268:	ldp	x29, x30, [sp], #32
 26c:	ret

0000000000000270 <_ZN18NCursesApplication5rinitER13NCursesWindow>:
 270:	sub	sp, sp, #0x10
 274:	str	x0, [sp, #8]
 278:	adrp	x0, 8 <_ZN18NCursesApplication4initEb+0x8>
 27c:	ldr	x0, [x0]
 280:	ldr	x1, [sp, #8]
 284:	str	x1, [x0]
 288:	mov	w0, #0x0                   	// #0
 28c:	add	sp, sp, #0x10
 290:	ret

0000000000000294 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>:
 294:	stp	x29, x30, [sp, #-48]!
 298:	mov	x29, sp
 29c:	str	x0, [sp, #24]
 2a0:	str	x1, [sp, #16]
 2a4:	mov	x0, #0x10                  	// #16
 2a8:	bl	0 <_Znwm>
 2ac:	str	x0, [sp, #40]
 2b0:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 2b4:	ldr	x0, [x0]
 2b8:	ldr	x1, [x0]
 2bc:	ldr	x0, [sp, #40]
 2c0:	str	x1, [x0]
 2c4:	ldr	x0, [sp, #40]
 2c8:	ldr	x1, [sp, #16]
 2cc:	str	x1, [x0, #8]
 2d0:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 2d4:	ldr	x0, [x0]
 2d8:	ldr	x1, [sp, #40]
 2dc:	str	x1, [x0]
 2e0:	ldr	x0, [sp, #24]
 2e4:	ldr	x0, [x0, #16]
 2e8:	cmp	x0, #0x0
 2ec:	b.eq	2f8 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set+0x64>  // b.none
 2f0:	ldr	x0, [sp, #16]
 2f4:	bl	0 <_ZN18NCursesApplication4initEb>
 2f8:	nop
 2fc:	ldp	x29, x30, [sp], #48
 300:	ret

0000000000000304 <_ZN18NCursesApplication3popEv>:
 304:	stp	x29, x30, [sp, #-48]!
 308:	mov	x29, sp
 30c:	str	x0, [sp, #24]
 310:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 314:	ldr	x0, [x0]
 318:	ldr	x0, [x0]
 31c:	cmp	x0, #0x0
 320:	b.eq	394 <_ZN18NCursesApplication3popEv+0x90>  // b.none
 324:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 328:	ldr	x0, [x0]
 32c:	ldr	x0, [x0]
 330:	str	x0, [sp, #40]
 334:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 338:	ldr	x0, [x0]
 33c:	ldr	x0, [x0]
 340:	ldr	x1, [x0]
 344:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 348:	ldr	x0, [x0]
 34c:	str	x1, [x0]
 350:	ldr	x0, [sp, #40]
 354:	cmp	x0, #0x0
 358:	b.eq	364 <_ZN18NCursesApplication3popEv+0x60>  // b.none
 35c:	mov	x1, #0x10                  	// #16
 360:	bl	0 <_ZdlPvm>
 364:	ldr	x0, [sp, #24]
 368:	ldr	x0, [x0, #16]
 36c:	cmp	x0, #0x0
 370:	b.eq	394 <_ZN18NCursesApplication3popEv+0x90>  // b.none
 374:	ldr	x0, [sp, #24]
 378:	bl	3b4 <_ZNK18NCursesApplication3topEv>
 37c:	str	x0, [sp, #32]
 380:	ldr	x0, [sp, #32]
 384:	cmp	x0, #0x0
 388:	b.eq	394 <_ZN18NCursesApplication3popEv+0x90>  // b.none
 38c:	ldr	x0, [sp, #32]
 390:	bl	0 <_ZN18NCursesApplication4initEb>
 394:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 398:	ldr	x0, [x0]
 39c:	ldr	x0, [x0]
 3a0:	cmp	x0, #0x0
 3a4:	cset	w0, eq  // eq = none
 3a8:	and	w0, w0, #0xff
 3ac:	ldp	x29, x30, [sp], #48
 3b0:	ret

00000000000003b4 <_ZNK18NCursesApplication3topEv>:
 3b4:	sub	sp, sp, #0x10
 3b8:	str	x0, [sp, #8]
 3bc:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 3c0:	ldr	x0, [x0]
 3c4:	ldr	x0, [x0]
 3c8:	cmp	x0, #0x0
 3cc:	b.eq	3e4 <_ZNK18NCursesApplication3topEv+0x30>  // b.none
 3d0:	adrp	x0, 10 <_ZN18NCursesApplication4initEb+0x10>
 3d4:	ldr	x0, [x0]
 3d8:	ldr	x0, [x0]
 3dc:	ldr	x0, [x0, #8]
 3e0:	b	3e8 <_ZNK18NCursesApplication3topEv+0x34>
 3e4:	mov	x0, #0x0                   	// #0
 3e8:	add	sp, sp, #0x10
 3ec:	ret

00000000000003f0 <_ZN18NCursesApplicationclEv>:
 3f0:	stp	x29, x30, [sp, #-80]!
 3f4:	mov	x29, sp
 3f8:	stp	x19, x20, [sp, #16]
 3fc:	str	x0, [sp, #40]
 400:	ldr	x0, [sp, #40]
 404:	ldrb	w0, [x0, #8]
 408:	strb	w0, [sp, #71]
 40c:	str	xzr, [sp, #72]
 410:	ldr	x0, [sp, #40]
 414:	ldr	x0, [x0]
 418:	add	x0, x0, #0x8
 41c:	ldr	x1, [x0]
 420:	ldr	x0, [sp, #40]
 424:	blr	x1
 428:	str	w0, [sp, #64]
 42c:	ldr	w0, [sp, #64]
 430:	cmp	w0, #0x0
 434:	b.le	448 <_ZN18NCursesApplicationclEv+0x58>
 438:	adrp	x0, 270 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 43c:	ldr	x1, [x0]
 440:	ldr	w0, [sp, #64]
 444:	bl	0 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>
 448:	ldr	x0, [sp, #40]
 44c:	ldr	x0, [x0]
 450:	add	x0, x0, #0x18
 454:	ldr	x1, [x0]
 458:	ldr	x0, [sp, #40]
 45c:	blr	x1
 460:	str	w0, [sp, #60]
 464:	ldr	w0, [sp, #60]
 468:	cmn	w0, #0x1
 46c:	b.eq	4a8 <_ZN18NCursesApplicationclEv+0xb8>  // b.none
 470:	mov	x0, #0x18                  	// #24
 474:	bl	0 <_Znwm>
 478:	mov	x19, x0
 47c:	ldr	w1, [sp, #60]
 480:	mov	x0, x19
 484:	bl	0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>
 488:	str	x19, [sp, #72]
 48c:	ldr	x0, [sp, #40]
 490:	ldr	x0, [x0]
 494:	add	x0, x0, #0x20
 498:	ldr	x2, [x0]
 49c:	ldr	x1, [sp, #72]
 4a0:	ldr	x0, [sp, #40]
 4a4:	blr	x2
 4a8:	mov	x0, #0x30                  	// #48
 4ac:	bl	0 <_Znwm>
 4b0:	mov	x19, x0
 4b4:	adrp	x0, 0 <stdscr>
 4b8:	ldr	x0, [x0]
 4bc:	ldr	x0, [x0]
 4c0:	mov	x1, x0
 4c4:	mov	x0, x19
 4c8:	bl	0 <_ZN13NCursesWindowC1EP7_win_st>
 4cc:	ldr	x0, [sp, #40]
 4d0:	str	x19, [x0, #16]
 4d4:	ldr	x0, [sp, #40]
 4d8:	ldr	x0, [x0]
 4dc:	ldr	x2, [x0]
 4e0:	ldrb	w1, [sp, #71]
 4e4:	ldr	x0, [sp, #40]
 4e8:	blr	x2
 4ec:	ldr	w0, [sp, #64]
 4f0:	cmp	w0, #0x0
 4f4:	b.le	510 <_ZN18NCursesApplicationclEv+0x120>
 4f8:	ldr	x0, [sp, #40]
 4fc:	ldr	x0, [x0]
 500:	add	x0, x0, #0x10
 504:	ldr	x1, [x0]
 508:	ldr	x0, [sp, #40]
 50c:	blr	x1
 510:	ldr	w0, [sp, #60]
 514:	cmn	w0, #0x1
 518:	b.eq	528 <_ZN18NCursesApplicationclEv+0x138>  // b.none
 51c:	ldr	x1, [sp, #72]
 520:	ldr	x0, [sp, #40]
 524:	bl	294 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>
 528:	ldr	x0, [sp, #40]
 52c:	ldr	x0, [x0]
 530:	add	x0, x0, #0x28
 534:	ldr	x1, [x0]
 538:	ldr	x0, [sp, #40]
 53c:	blr	x1
 540:	b	574 <_ZN18NCursesApplicationclEv+0x184>
 544:	mov	x20, x0
 548:	mov	x1, #0x18                  	// #24
 54c:	mov	x0, x19
 550:	bl	0 <_ZdlPvm>
 554:	mov	x0, x20
 558:	bl	0 <_Unwind_Resume>
 55c:	mov	x20, x0
 560:	mov	x1, #0x30                  	// #48
 564:	mov	x0, x19
 568:	bl	0 <_ZdlPvm>
 56c:	mov	x0, x20
 570:	bl	0 <_Unwind_Resume>
 574:	ldp	x19, x20, [sp, #16]
 578:	ldp	x29, x30, [sp], #80
 57c:	ret

0000000000000580 <_ZN18NCursesApplicationC1Eb>:
 580:	stp	x29, x30, [sp, #-48]!
 584:	mov	x29, sp
 588:	str	x19, [sp, #16]
 58c:	str	x0, [sp, #40]
 590:	strb	w1, [sp, #39]
 594:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 598:	ldr	x0, [x0]
 59c:	add	x1, x0, #0x10
 5a0:	ldr	x0, [sp, #40]
 5a4:	str	x1, [x0]
 5a8:	ldr	x0, [sp, #40]
 5ac:	ldrb	w1, [sp, #39]
 5b0:	strb	w1, [x0, #8]
 5b4:	ldr	x0, [sp, #40]
 5b8:	str	xzr, [x0, #16]
 5bc:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 5c0:	ldr	x0, [x0]
 5c4:	ldr	x0, [x0]
 5c8:	cmp	x0, #0x0
 5cc:	b.eq	5f8 <_ZN18NCursesApplicationC1Eb+0x78>  // b.none
 5d0:	mov	x0, #0x18                  	// #24
 5d4:	bl	0 <_Znwm>
 5d8:	mov	x19, x0
 5dc:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 5e0:	add	x1, x0, #0x0
 5e4:	mov	x0, x19
 5e8:	bl	0 <_ZN18NCursesApplication4initEb>
 5ec:	mov	x0, x19
 5f0:	bl	0 <_ZN18NCursesApplication4initEb>
 5f4:	b	608 <_ZN18NCursesApplicationC1Eb+0x88>
 5f8:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 5fc:	ldr	x0, [x0]
 600:	ldr	x1, [sp, #40]
 604:	str	x1, [x0]
 608:	nop
 60c:	ldr	x19, [sp, #16]
 610:	ldp	x29, x30, [sp], #48
 614:	ret

0000000000000618 <_Z41__static_initialization_and_destruction_0ii>:
 618:	stp	x29, x30, [sp, #-32]!
 61c:	mov	x29, sp
 620:	str	w0, [sp, #28]
 624:	str	w1, [sp, #24]
 628:	ldr	w0, [sp, #28]
 62c:	cmp	w0, #0x1
 630:	b.ne	66c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 634:	ldr	w1, [sp, #24]
 638:	mov	w0, #0xffff                	// #65535
 63c:	cmp	w1, w0
 640:	b.ne	66c <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
 644:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 648:	add	x0, x0, #0x0
 64c:	bl	0 <_ZNSt8ios_base4InitC1Ev>
 650:	adrp	x0, 0 <__dso_handle>
 654:	add	x2, x0, #0x0
 658:	adrp	x0, 0 <_ZN18NCursesApplication4initEb>
 65c:	add	x1, x0, #0x0
 660:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
 664:	ldr	x0, [x0]
 668:	bl	0 <__cxa_atexit>
 66c:	nop
 670:	ldp	x29, x30, [sp], #32
 674:	ret

0000000000000678 <_GLOBAL__sub_I_cursesapp.cc>:
 678:	stp	x29, x30, [sp, #-16]!
 67c:	mov	x29, sp
 680:	mov	w1, #0xffff                	// #65535
 684:	mov	w0, #0x1                   	// #1
 688:	bl	618 <_Z41__static_initialization_and_destruction_0ii>
 68c:	ldp	x29, x30, [sp], #16
 690:	ret

Disassembly of section .text._ZN16NCursesExceptionC2EPKc:

0000000000000000 <_ZN16NCursesExceptionC1EPKc>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	adrp	x0, 0 <_ZN16NCursesExceptionC1EPKc>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #8]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #8]
  24:	ldr	x1, [sp]
  28:	str	x1, [x0, #8]
  2c:	ldr	x0, [sp, #8]
  30:	mov	w1, #0xffffffff            	// #-1
  34:	str	w1, [x0, #16]
  38:	nop
  3c:	add	sp, sp, #0x10
  40:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   c:	add	x0, x0, #0x0
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	adrp	x0, 0 <_ZN16NCursesExceptionD1Ev>
   c:	ldr	x0, [x0]
  10:	add	x1, x0, #0x10
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN16NCursesExceptionD0Ev>
  14:	mov	x1, #0x18                  	// #24
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._Z5THROWPK16NCursesException:

0000000000000000 <_Z5THROWPK16NCursesException>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <endwin>
  10:	adrp	x0, 0 <_Z5THROWPK16NCursesException>
  14:	add	x1, x0, #0x0
  18:	adrp	x0, 0 <_ZSt4cerr>
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
  24:	mov	x2, x0
  28:	adrp	x0, 0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  2c:	ldr	x1, [x0]
  30:	mov	x0, x2
  34:	bl	0 <_ZNSolsEPFRSoS_E>
  38:	mov	w0, #0x1                   	// #1
  3c:	bl	0 <exit>

Disassembly of section .text._ZNK13NCursesWindow6colorsEv:

0000000000000000 <_ZNK13NCursesWindow6colorsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <_ZN13NCursesWindow14NumberOfColorsEv>
  10:	ldp	x29, x30, [sp], #32
  14:	ret

Disassembly of section .text._ZN13NCursesWindow8CUR_bkgdEj:

0000000000000000 <_ZN13NCursesWindow8CUR_bkgdEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <wbkgd>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set4showEv:

0000000000000000 <_ZN18Soft_Label_Key_Set4showEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	mov	w1, #0x0                   	// #0
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
  18:	mov	w1, #0x1                   	// #1
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZNK18NCursesApplication9titlesizeEv:

0000000000000000 <_ZNK18NCursesApplication9titlesizeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, #0x0                   	// #0
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN18NCursesApplication5titleEv:

0000000000000000 <_ZN18NCursesApplication5titleEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	nop
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication7useSLKsEv:

0000000000000000 <_ZNK18NCursesApplication7useSLKsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, #0xffffffff            	// #-1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set:

0000000000000000 <_ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	nop
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN18NCursesApplication10handleArgsEiPPc:

0000000000000000 <_ZN18NCursesApplication10handleArgsEiPPc>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	w1, [sp, #20]
   c:	str	x2, [sp, #8]
  10:	nop
  14:	add	sp, sp, #0x20
  18:	ret

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	20 <_ZNK18NCursesApplication11foregroundsEv+0x20>  // b.none
  18:	mov	w0, #0x100                 	// #256
  1c:	b	24 <_ZNK18NCursesApplication11foregroundsEv+0x24>
  20:	mov	w0, #0x200000              	// #2097152
  24:	add	sp, sp, #0x10
  28:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	20 <_ZNK18NCursesApplication11backgroundsEv+0x20>  // b.none
  18:	mov	w0, #0x200                 	// #512
  1c:	b	24 <_ZNK18NCursesApplication11backgroundsEv+0x24>
  20:	mov	w0, #0x0                   	// #0
  24:	add	sp, sp, #0x10
  28:	ret

Disassembly of section .text._ZNK18NCursesApplication9inactivesEv:

0000000000000000 <_ZNK18NCursesApplication9inactivesEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	24 <_ZNK18NCursesApplication9inactivesEv+0x24>  // b.none
  18:	mov	w0, #0x300                 	// #768
  1c:	movk	w0, #0x10, lsl #16
  20:	b	28 <_ZNK18NCursesApplication9inactivesEv+0x28>
  24:	mov	w0, #0x100000              	// #1048576
  28:	add	sp, sp, #0x10
  2c:	ret

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	20 <_ZNK18NCursesApplication6labelsEv+0x20>  // b.none
  18:	mov	w0, #0x400                 	// #1024
  1c:	b	24 <_ZNK18NCursesApplication6labelsEv+0x24>
  20:	mov	w0, #0x0                   	// #0
  24:	add	sp, sp, #0x10
  28:	ret

Disassembly of section .text._ZNK18NCursesApplication18dialog_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18dialog_backgroundsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	20 <_ZNK18NCursesApplication18dialog_backgroundsEv+0x20>  // b.none
  18:	mov	w0, #0x400                 	// #1024
  1c:	b	24 <_ZNK18NCursesApplication18dialog_backgroundsEv+0x24>
  20:	mov	w0, #0x0                   	// #0
  24:	add	sp, sp, #0x10
  28:	ret

Disassembly of section .text._ZNK18NCursesApplication18window_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18window_backgroundsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	20 <_ZNK18NCursesApplication18window_backgroundsEv+0x20>  // b.none
  18:	mov	w0, #0x500                 	// #1280
  1c:	b	24 <_ZNK18NCursesApplication18window_backgroundsEv+0x24>
  20:	mov	w0, #0x0                   	// #0
  24:	add	sp, sp, #0x10
  28:	ret

Disassembly of section .text._ZNK18NCursesApplication13screen_titlesEv:

0000000000000000 <_ZNK18NCursesApplication13screen_titlesEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	20 <_ZNK18NCursesApplication13screen_titlesEv+0x20>  // b.none
  18:	mov	w0, #0x600                 	// #1536
  1c:	b	24 <_ZNK18NCursesApplication13screen_titlesEv+0x24>
  20:	mov	w0, #0x200000              	// #2097152
  24:	add	sp, sp, #0x10
  28:	ret

cursesmain.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <main>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	adrp	x0, 0 <main>
  14:	add	x1, x0, #0x0
  18:	mov	w0, #0x6                   	// #6
  1c:	bl	0 <setlocale>
  20:	bl	0 <main>
  24:	str	x0, [sp, #40]
  28:	ldr	x0, [sp, #40]
  2c:	cmp	x0, #0x0
  30:	b.ne	3c <main+0x3c>  // b.any
  34:	mov	w0, #0x1                   	// #1
  38:	b	74 <main+0x74>
  3c:	ldr	x0, [sp, #40]
  40:	ldr	x0, [x0]
  44:	add	x0, x0, #0x40
  48:	ldr	x3, [x0]
  4c:	ldr	x2, [sp, #16]
  50:	ldr	w1, [sp, #28]
  54:	ldr	x0, [sp, #40]
  58:	blr	x3
  5c:	bl	0 <endwin>
  60:	ldr	x0, [sp, #40]
  64:	bl	0 <_ZN18NCursesApplicationclEv>
  68:	str	w0, [sp, #36]
  6c:	bl	0 <endwin>
  70:	ldr	w0, [sp, #36]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

000000000000007c <_Z41__static_initialization_and_destruction_0ii>:
  7c:	stp	x29, x30, [sp, #-32]!
  80:	mov	x29, sp
  84:	str	w0, [sp, #28]
  88:	str	w1, [sp, #24]
  8c:	ldr	w0, [sp, #28]
  90:	cmp	w0, #0x1
  94:	b.ne	d0 <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
  98:	ldr	w1, [sp, #24]
  9c:	mov	w0, #0xffff                	// #65535
  a0:	cmp	w1, w0
  a4:	b.ne	d0 <_Z41__static_initialization_and_destruction_0ii+0x54>  // b.any
  a8:	adrp	x0, 0 <main>
  ac:	add	x0, x0, #0x0
  b0:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  b4:	adrp	x0, 0 <__dso_handle>
  b8:	add	x2, x0, #0x0
  bc:	adrp	x0, 0 <main>
  c0:	add	x1, x0, #0x0
  c4:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  c8:	ldr	x0, [x0]
  cc:	bl	0 <__cxa_atexit>
  d0:	nop
  d4:	ldp	x29, x30, [sp], #32
  d8:	ret

00000000000000dc <_GLOBAL__sub_I_cursesmain.cc>:
  dc:	stp	x29, x30, [sp, #-16]!
  e0:	mov	x29, sp
  e4:	mov	w1, #0xffff                	// #65535
  e8:	mov	w0, #0x1                   	// #1
  ec:	bl	7c <_Z41__static_initialization_and_destruction_0ii>
  f0:	ldp	x29, x30, [sp], #16
  f4:	ret

Disassembly of section .text._ZN18NCursesApplication14getApplicationEv:

0000000000000000 <_ZN18NCursesApplication14getApplicationEv>:
   0:	adrp	x0, 0 <_ZN18NCursesApplication6theAppE>
   4:	ldr	x0, [x0]
   8:	ldr	x0, [x0]
   c:	ret
