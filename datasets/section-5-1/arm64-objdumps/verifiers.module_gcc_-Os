
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//verifiers.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <verified_read>:
   0:	mov	x3, x0
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x0, x1
   c:	mov	x29, sp
  10:	ldr	x1, [x3, #80]
  14:	ldr	x4, [x1, #8]
  18:	ldr	x1, [x3, #24]
  1c:	str	x19, [sp, #16]
  20:	mov	x19, x2
  24:	add	x1, x4, x1
  28:	bl	0 <grub_memmove>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

000000000000003c <verified_close>:
  3c:	stp	x29, x30, [sp, #-32]!
  40:	mov	x29, sp
  44:	stp	x19, x20, [sp, #16]
  48:	mov	x19, x0
  4c:	ldr	x20, [x0, #80]
  50:	ldr	x0, [x20]
  54:	bl	0 <grub_file_close>
  58:	ldr	x0, [x20, #8]
  5c:	bl	0 <grub_free>
  60:	mov	x0, x20
  64:	bl	0 <grub_free>
  68:	adrp	x0, 0 <verified_read>
  6c:	str	xzr, [x19, #80]
  70:	ldr	x0, [x0]
  74:	ldr	w0, [x0]
  78:	stp	xzr, xzr, [x19]
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret
	...

0000000000000090 <grub_verifiers_open>:
  90:	stp	x29, x30, [sp, #-80]!
  94:	mov	w5, w1
  98:	mov	x29, sp
  9c:	stp	x21, x22, [sp, #32]
  a0:	mov	x21, x0
  a4:	ldr	x4, [x0]
  a8:	adrp	x0, 0 <verified_read>
  ac:	stp	x19, x20, [sp, #16]
  b0:	ldr	x3, [x0]
  b4:	adrp	x0, 0 <verified_read>
  b8:	stp	x23, x24, [sp, #48]
  bc:	mov	w23, w1
  c0:	mov	w1, #0x58                  	// #88
  c4:	ldr	x2, [x0]
  c8:	adrp	x0, 0 <verified_read>
  cc:	ldr	x0, [x0]
  d0:	bl	0 <grub_real_dprintf>
  d4:	and	w0, w23, #0xffff
  d8:	cmp	w0, #0x3b
  dc:	ccmp	w0, #0x1e, #0x4, ne  // ne = any
  e0:	b.eq	298 <grub_verifiers_open+0x208>  // b.none
  e4:	tbnz	w23, #16, 298 <grub_verifiers_open+0x208>
  e8:	ldr	x0, [x21, #8]
  ec:	ldr	x0, [x0]
  f0:	cbz	x0, 108 <grub_verifiers_open+0x78>
  f4:	ldr	x0, [x0, #8]
  f8:	ldr	w0, [x0, #8]
  fc:	cmp	w0, #0x7
 100:	ccmp	w0, #0xd, #0x4, ne  // ne = any
 104:	b.eq	298 <grub_verifiers_open+0x208>  // b.none
 108:	adrp	x0, 0 <verified_read>
 10c:	mov	w20, #0x0                   	// #0
 110:	ldr	x0, [x0]
 114:	ldr	x19, [x0]
 118:	cbnz	x19, 138 <grub_verifiers_open+0xa8>
 11c:	cbz	w20, 298 <grub_verifiers_open+0x208>
 120:	adrp	x0, 0 <verified_read>
 124:	ldr	x2, [x21]
 128:	ldr	x1, [x0]
 12c:	mov	w0, #0x1e                  	// #30
 130:	bl	0 <grub_error>
 134:	b	158 <grub_verifiers_open+0xc8>
 138:	ldr	x4, [x19, #24]
 13c:	str	wzr, [sp, #68]
 140:	add	x3, sp, #0x44
 144:	add	x2, sp, #0x48
 148:	mov	w1, w23
 14c:	mov	x0, x21
 150:	blr	x4
 154:	cbz	w0, 16c <grub_verifiers_open+0xdc>
 158:	mov	x20, #0x0                   	// #0
 15c:	mov	x0, x20
 160:	mov	x21, #0x0                   	// #0
 164:	bl	0 <grub_free>
 168:	b	298 <grub_verifiers_open+0x208>
 16c:	ldr	w0, [sp, #68]
 170:	tbz	w0, #2, 180 <grub_verifiers_open+0xf0>
 174:	mov	w20, #0x1                   	// #1
 178:	ldr	x19, [x19]
 17c:	b	118 <grub_verifiers_open+0x88>
 180:	tbnz	w0, #0, 178 <grub_verifiers_open+0xe8>
 184:	mov	x0, #0x68                  	// #104
 188:	bl	0 <grub_malloc>
 18c:	mov	x20, x0
 190:	cbnz	x0, 19c <grub_verifiers_open+0x10c>
 194:	mov	x22, #0x0                   	// #0
 198:	b	238 <grub_verifiers_open+0x1a8>
 19c:	mov	x1, x21
 1a0:	mov	x2, #0x68                  	// #104
 1a4:	bl	0 <memcpy>
 1a8:	str	wzr, [x20, #72]
 1ac:	adrp	x0, 0 <verified_read>
 1b0:	ldr	x0, [x0]
 1b4:	str	x0, [x20, #16]
 1b8:	ldr	x0, [x20, #64]
 1bc:	tbz	x0, #63, 1d4 <grub_verifiers_open+0x144>
 1c0:	adrp	x0, 0 <verified_read>
 1c4:	ldr	x1, [x0]
 1c8:	mov	w0, #0x18                  	// #24
 1cc:	bl	0 <grub_error>
 1d0:	b	194 <grub_verifiers_open+0x104>
 1d4:	mov	x0, #0x10                  	// #16
 1d8:	bl	0 <grub_malloc>
 1dc:	mov	x22, x0
 1e0:	cbz	x0, 238 <grub_verifiers_open+0x1a8>
 1e4:	ldr	x0, [x20, #64]
 1e8:	bl	0 <grub_malloc>
 1ec:	str	x0, [x22, #8]
 1f0:	mov	x1, x0
 1f4:	cbz	x0, 238 <grub_verifiers_open+0x1a8>
 1f8:	ldr	x2, [x20, #64]
 1fc:	mov	x0, x21
 200:	bl	0 <grub_file_read>
 204:	mov	x2, x0
 208:	ldr	x0, [x20, #64]
 20c:	cmp	x2, x0
 210:	b.eq	25c <grub_verifiers_open+0x1cc>  // b.none
 214:	adrp	x0, 0 <verified_read>
 218:	ldr	x0, [x0]
 21c:	ldr	w0, [x0]
 220:	cbnz	w0, 238 <grub_verifiers_open+0x1a8>
 224:	adrp	x0, 0 <verified_read>
 228:	ldr	x2, [x21]
 22c:	ldr	x1, [x0]
 230:	mov	w0, #0x6                   	// #6
 234:	bl	0 <grub_error>
 238:	ldr	x1, [x19, #48]
 23c:	ldr	x0, [sp, #72]
 240:	blr	x1
 244:	cbz	x22, 15c <grub_verifiers_open+0xcc>
 248:	ldr	x0, [x22, #8]
 24c:	bl	0 <grub_free>
 250:	mov	x0, x22
 254:	bl	0 <grub_free>
 258:	b	15c <grub_verifiers_open+0xcc>
 25c:	ldr	x1, [x22, #8]
 260:	ldr	x3, [x19, #32]
 264:	ldr	x0, [sp, #72]
 268:	blr	x3
 26c:	cbnz	w0, 238 <grub_verifiers_open+0x1a8>
 270:	ldr	x1, [x19, #40]
 274:	cbnz	x1, 2b0 <grub_verifiers_open+0x220>
 278:	ldr	x1, [x19, #48]
 27c:	cbnz	x1, 2c0 <grub_verifiers_open+0x230>
 280:	ldr	x19, [x19]
 284:	mov	w24, #0x5                   	// #5
 288:	cbnz	x19, 2cc <grub_verifiers_open+0x23c>
 28c:	str	x21, [x22]
 290:	mov	x21, x20
 294:	str	x22, [x20, #80]
 298:	mov	x0, x21
 29c:	ldp	x19, x20, [sp, #16]
 2a0:	ldp	x21, x22, [sp, #32]
 2a4:	ldp	x23, x24, [sp, #48]
 2a8:	ldp	x29, x30, [sp], #80
 2ac:	ret
 2b0:	ldr	x0, [sp, #72]
 2b4:	blr	x1
 2b8:	cbz	w0, 278 <grub_verifiers_open+0x1e8>
 2bc:	b	238 <grub_verifiers_open+0x1a8>
 2c0:	ldr	x0, [sp, #72]
 2c4:	blr	x1
 2c8:	b	280 <grub_verifiers_open+0x1f0>
 2cc:	ldr	x4, [x19, #24]
 2d0:	str	wzr, [sp, #68]
 2d4:	add	x3, sp, #0x44
 2d8:	add	x2, sp, #0x48
 2dc:	mov	w1, w23
 2e0:	mov	x0, x21
 2e4:	blr	x4
 2e8:	cbnz	w0, 248 <grub_verifiers_open+0x1b8>
 2ec:	ldr	w0, [sp, #68]
 2f0:	tst	w0, w24
 2f4:	b.eq	300 <grub_verifiers_open+0x270>  // b.none
 2f8:	ldr	x19, [x19]
 2fc:	b	288 <grub_verifiers_open+0x1f8>
 300:	ldr	x1, [x22, #8]
 304:	ldr	x3, [x19, #32]
 308:	ldr	x2, [x20, #64]
 30c:	ldr	x0, [sp, #72]
 310:	blr	x3
 314:	cbnz	w0, 238 <grub_verifiers_open+0x1a8>
 318:	ldr	x1, [x19, #40]
 31c:	cbnz	x1, 334 <grub_verifiers_open+0x2a4>
 320:	ldr	x1, [x19, #48]
 324:	cbz	x1, 2f8 <grub_verifiers_open+0x268>
 328:	ldr	x0, [sp, #72]
 32c:	blr	x1
 330:	b	2f8 <grub_verifiers_open+0x268>
 334:	ldr	x0, [sp, #72]
 338:	blr	x1
 33c:	cbz	w0, 320 <grub_verifiers_open+0x290>
 340:	b	238 <grub_verifiers_open+0x1a8>
 344:	nop
	...

0000000000000390 <grub_verify_string>:
 390:	stp	x29, x30, [sp, #-48]!
 394:	mov	x29, sp
 398:	stp	x19, x20, [sp, #16]
 39c:	mov	x20, x0
 3a0:	adrp	x0, 0 <verified_read>
 3a4:	ldr	x0, [x0]
 3a8:	ldr	x19, [x0]
 3ac:	str	x21, [sp, #32]
 3b0:	mov	w21, w1
 3b4:	cbnz	x19, 3c0 <grub_verify_string+0x30>
 3b8:	mov	w0, #0x0                   	// #0
 3bc:	b	3e0 <grub_verify_string+0x50>
 3c0:	ldr	x2, [x19, #56]
 3c4:	cbnz	x2, 3d0 <grub_verify_string+0x40>
 3c8:	ldr	x19, [x19]
 3cc:	b	3b4 <grub_verify_string+0x24>
 3d0:	mov	w1, w21
 3d4:	mov	x0, x20
 3d8:	blr	x2
 3dc:	cbz	w0, 3c8 <grub_verify_string+0x38>
 3e0:	ldp	x19, x20, [sp, #16]
 3e4:	ldr	x21, [sp, #32]
 3e8:	ldp	x29, x30, [sp], #48
 3ec:	ret
	...

00000000000003f8 <grub_mod_init>:
 3f8:	adrp	x0, 0 <verified_read>
 3fc:	adrp	x1, 0 <verified_read>
 400:	ldr	x0, [x0]
 404:	ldr	x1, [x1]
 408:	str	x1, [x0]
 40c:	ret
	...

0000000000000420 <grub_mod_fini>:
 420:	adrp	x0, 0 <verified_read>
 424:	ldr	x0, [x0]
 428:	str	xzr, [x0]
 42c:	ret
	...
