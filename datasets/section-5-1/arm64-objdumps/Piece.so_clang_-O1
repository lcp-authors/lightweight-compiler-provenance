
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Piece.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000f48 <.init>:
 f48:	stp	x29, x30, [sp, #-16]!
 f4c:	mov	x29, sp
 f50:	bl	1200 <Perl_newSVpvn@plt+0x10>
 f54:	ldp	x29, x30, [sp], #16
 f58:	ret

Disassembly of section .plt:

0000000000000f60 <Perl_sv_2iv_flags@plt-0x20>:
     f60:	stp	x16, x30, [sp, #-16]!
     f64:	adrp	x16, 13000 <boot_Time__Piece@@Base+0x11d2c>
     f68:	ldr	x17, [x16, #4088]
     f6c:	add	x16, x16, #0xff8
     f70:	br	x17
     f74:	nop
     f78:	nop
     f7c:	nop

0000000000000f80 <Perl_sv_2iv_flags@plt>:
     f80:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     f84:	ldr	x17, [x16]
     f88:	add	x16, x16, #0x0
     f8c:	br	x17

0000000000000f90 <strlen@plt>:
     f90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     f94:	ldr	x17, [x16, #8]
     f98:	add	x16, x16, #0x8
     f9c:	br	x17

0000000000000fa0 <Perl_newRV_noinc@plt>:
     fa0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fa4:	ldr	x17, [x16, #16]
     fa8:	add	x16, x16, #0x10
     fac:	br	x17

0000000000000fb0 <Perl_stack_grow@plt>:
     fb0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fb4:	ldr	x17, [x16, #24]
     fb8:	add	x16, x16, #0x18
     fbc:	br	x17

0000000000000fc0 <__cxa_finalize@plt>:
     fc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fc4:	ldr	x17, [x16, #32]
     fc8:	add	x16, x16, #0x20
     fcc:	br	x17

0000000000000fd0 <strftime@plt>:
     fd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fd4:	ldr	x17, [x16, #40]
     fd8:	add	x16, x16, #0x28
     fdc:	br	x17

0000000000000fe0 <Perl_av_len@plt>:
     fe0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fe4:	ldr	x17, [x16, #48]
     fe8:	add	x16, x16, #0x30
     fec:	br	x17

0000000000000ff0 <Perl_warn_nocontext@plt>:
     ff0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     ff4:	ldr	x17, [x16, #56]
     ff8:	add	x16, x16, #0x38
     ffc:	br	x17

0000000000001000 <localtime@plt>:
    1000:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1004:	ldr	x17, [x16, #64]
    1008:	add	x16, x16, #0x40
    100c:	br	x17

0000000000001010 <malloc@plt>:
    1010:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1014:	ldr	x17, [x16, #72]
    1018:	add	x16, x16, #0x48
    101c:	br	x17

0000000000001020 <tzset@plt>:
    1020:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1024:	ldr	x17, [x16, #80]
    1028:	add	x16, x16, #0x50
    102c:	br	x17

0000000000001030 <Perl_sv_2pv_flags@plt>:
    1030:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1034:	ldr	x17, [x16, #88]
    1038:	add	x16, x16, #0x58
    103c:	br	x17

0000000000001040 <Perl_xs_boot_epilog@plt>:
    1040:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1044:	ldr	x17, [x16, #96]
    1048:	add	x16, x16, #0x60
    104c:	br	x17

0000000000001050 <Perl_safesysmalloc@plt>:
    1050:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1054:	ldr	x17, [x16, #104]
    1058:	add	x16, x16, #0x68
    105c:	br	x17

0000000000001060 <gmtime@plt>:
    1060:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1064:	ldr	x17, [x16, #112]
    1068:	add	x16, x16, #0x70
    106c:	br	x17

0000000000001070 <__stack_chk_fail@plt>:
    1070:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1074:	ldr	x17, [x16, #120]
    1078:	add	x16, x16, #0x78
    107c:	br	x17

0000000000001080 <__gmon_start__@plt>:
    1080:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1084:	ldr	x17, [x16, #128]
    1088:	add	x16, x16, #0x80
    108c:	br	x17

0000000000001090 <Perl_croak_xs_usage@plt>:
    1090:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1094:	ldr	x17, [x16, #136]
    1098:	add	x16, x16, #0x88
    109c:	br	x17

00000000000010a0 <Perl_sv_2nv_flags@plt>:
    10a0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10a4:	ldr	x17, [x16, #144]
    10a8:	add	x16, x16, #0x90
    10ac:	br	x17

00000000000010b0 <Perl_av_push@plt>:
    10b0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10b4:	ldr	x17, [x16, #152]
    10b8:	add	x16, x16, #0x98
    10bc:	br	x17

00000000000010c0 <Perl_newSVpv@plt>:
    10c0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10c4:	ldr	x17, [x16, #160]
    10c8:	add	x16, x16, #0xa0
    10cc:	br	x17

00000000000010d0 <strcmp@plt>:
    10d0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10d4:	ldr	x17, [x16, #168]
    10d8:	add	x16, x16, #0xa8
    10dc:	br	x17

00000000000010e0 <__ctype_b_loc@plt>:
    10e0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10e4:	ldr	x17, [x16, #176]
    10e8:	add	x16, x16, #0xb0
    10ec:	br	x17

00000000000010f0 <strtol@plt>:
    10f0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10f4:	ldr	x17, [x16, #184]
    10f8:	add	x16, x16, #0xb8
    10fc:	br	x17

0000000000001100 <Perl_croak_nocontext@plt>:
    1100:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1104:	ldr	x17, [x16, #192]
    1108:	add	x16, x16, #0xc0
    110c:	br	x17

0000000000001110 <free@plt>:
    1110:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1114:	ldr	x17, [x16, #200]
    1118:	add	x16, x16, #0xc8
    111c:	br	x17

0000000000001120 <strncasecmp@plt>:
    1120:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1124:	ldr	x17, [x16, #208]
    1128:	add	x16, x16, #0xd0
    112c:	br	x17

0000000000001130 <Perl_newXS_flags@plt>:
    1130:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1134:	ldr	x17, [x16, #216]
    1138:	add	x16, x16, #0xd8
    113c:	br	x17

0000000000001140 <Perl_sv_2mortal@plt>:
    1140:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1144:	ldr	x17, [x16, #224]
    1148:	add	x16, x16, #0xe0
    114c:	br	x17

0000000000001150 <Perl_safesysfree@plt>:
    1150:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1154:	ldr	x17, [x16, #232]
    1158:	add	x16, x16, #0xe8
    115c:	br	x17

0000000000001160 <Perl_safesysrealloc@plt>:
    1160:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1164:	ldr	x17, [x16, #240]
    1168:	add	x16, x16, #0xf0
    116c:	br	x17

0000000000001170 <Perl_xs_handshake@plt>:
    1170:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1174:	ldr	x17, [x16, #248]
    1178:	add	x16, x16, #0xf8
    117c:	br	x17

0000000000001180 <Perl_av_fetch@plt>:
    1180:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1184:	ldr	x17, [x16, #256]
    1188:	add	x16, x16, #0x100
    118c:	br	x17

0000000000001190 <Perl_hv_common_key_len@plt>:
    1190:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1194:	ldr	x17, [x16, #264]
    1198:	add	x16, x16, #0x108
    119c:	br	x17

00000000000011a0 <Perl_newRV@plt>:
    11a0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11a4:	ldr	x17, [x16, #272]
    11a8:	add	x16, x16, #0x110
    11ac:	br	x17

00000000000011b0 <Perl_newSV_type@plt>:
    11b0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11b4:	ldr	x17, [x16, #280]
    11b8:	add	x16, x16, #0x118
    11bc:	br	x17

00000000000011c0 <strncpy@plt>:
    11c0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11c4:	ldr	x17, [x16, #288]
    11c8:	add	x16, x16, #0x120
    11cc:	br	x17

00000000000011d0 <Perl_newSViv@plt>:
    11d0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11d4:	ldr	x17, [x16, #296]
    11d8:	add	x16, x16, #0x128
    11dc:	br	x17

00000000000011e0 <__errno_location@plt>:
    11e0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11e4:	ldr	x17, [x16, #304]
    11e8:	add	x16, x16, #0x130
    11ec:	br	x17

00000000000011f0 <Perl_newSVpvn@plt>:
    11f0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11f4:	ldr	x17, [x16, #312]
    11f8:	add	x16, x16, #0x138
    11fc:	br	x17

Disassembly of section .text:

0000000000001200 <boot_Time__Piece@@Base-0xd4>:
    1200:	adrp	x0, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1204:	ldr	x0, [x0, #4048]
    1208:	cbz	x0, 1210 <Perl_newSVpvn@plt+0x20>
    120c:	b	1080 <__gmon_start__@plt>
    1210:	ret
    1214:	nop
    1218:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    121c:	add	x0, x0, #0x148
    1220:	adrp	x1, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1224:	add	x1, x1, #0x148
    1228:	cmp	x1, x0
    122c:	b.eq	1244 <Perl_newSVpvn@plt+0x54>  // b.none
    1230:	adrp	x1, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1234:	ldr	x1, [x1, #4032]
    1238:	cbz	x1, 1244 <Perl_newSVpvn@plt+0x54>
    123c:	mov	x16, x1
    1240:	br	x16
    1244:	ret
    1248:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    124c:	add	x0, x0, #0x148
    1250:	adrp	x1, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1254:	add	x1, x1, #0x148
    1258:	sub	x1, x1, x0
    125c:	lsr	x2, x1, #63
    1260:	add	x1, x2, x1, asr #3
    1264:	cmp	xzr, x1, asr #1
    1268:	asr	x1, x1, #1
    126c:	b.eq	1284 <Perl_newSVpvn@plt+0x94>  // b.none
    1270:	adrp	x2, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1274:	ldr	x2, [x2, #4064]
    1278:	cbz	x2, 1284 <Perl_newSVpvn@plt+0x94>
    127c:	mov	x16, x2
    1280:	br	x16
    1284:	ret
    1288:	stp	x29, x30, [sp, #-32]!
    128c:	mov	x29, sp
    1290:	str	x19, [sp, #16]
    1294:	adrp	x19, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1298:	ldrb	w0, [x19, #328]
    129c:	cbnz	w0, 12c4 <Perl_newSVpvn@plt+0xd4>
    12a0:	adrp	x0, 13000 <boot_Time__Piece@@Base+0x11d2c>
    12a4:	ldr	x0, [x0, #4040]
    12a8:	cbz	x0, 12b8 <Perl_newSVpvn@plt+0xc8>
    12ac:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    12b0:	ldr	x0, [x0, #320]
    12b4:	bl	fc0 <__cxa_finalize@plt>
    12b8:	bl	1218 <Perl_newSVpvn@plt+0x28>
    12bc:	mov	w0, #0x1                   	// #1
    12c0:	strb	w0, [x19, #328]
    12c4:	ldr	x19, [sp, #16]
    12c8:	ldp	x29, x30, [sp], #32
    12cc:	ret
    12d0:	b	1248 <Perl_newSVpvn@plt+0x58>

00000000000012d4 <boot_Time__Piece@@Base>:
    12d4:	stp	x29, x30, [sp, #-64]!
    12d8:	stp	x20, x19, [sp, #48]
    12dc:	adrp	x20, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12e0:	mov	x19, x0
    12e4:	add	x20, x20, #0x74e
    12e8:	adrp	x3, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12ec:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12f0:	mov	w0, #0x4e7                 	// #1255
    12f4:	add	x3, x3, #0x756
    12f8:	add	x4, x4, #0x75e
    12fc:	movk	w0, #0xd30, lsl #16
    1300:	mov	x1, x19
    1304:	mov	x2, x20
    1308:	stp	x24, x23, [sp, #16]
    130c:	stp	x22, x21, [sp, #32]
    1310:	mov	x29, sp
    1314:	bl	1170 <Perl_xs_handshake@plt>
    1318:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    131c:	adrp	x2, 1000 <localtime@plt>
    1320:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1324:	mov	w21, w0
    1328:	add	x1, x1, #0x763
    132c:	add	x2, x2, #0x468
    1330:	add	x4, x4, #0x77a
    1334:	mov	x0, x19
    1338:	mov	x3, x20
    133c:	mov	w5, wzr
    1340:	bl	1130 <Perl_newXS_flags@plt>
    1344:	adrp	x22, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1348:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    134c:	adrp	x2, 1000 <localtime@plt>
    1350:	add	x22, x22, #0x7ca
    1354:	add	x1, x1, #0x77f
    1358:	add	x2, x2, #0x724
    135c:	mov	x0, x19
    1360:	mov	x3, x20
    1364:	mov	x4, x22
    1368:	mov	w5, wzr
    136c:	bl	1130 <Perl_newXS_flags@plt>
    1370:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1374:	adrp	x2, 1000 <localtime@plt>
    1378:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    137c:	add	x1, x1, #0x793
    1380:	add	x2, x2, #0x780
    1384:	add	x4, x4, #0x7c6
    1388:	mov	x0, x19
    138c:	mov	x3, x20
    1390:	mov	w5, wzr
    1394:	bl	1130 <Perl_newXS_flags@plt>
    1398:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    139c:	adrp	x2, 1000 <localtime@plt>
    13a0:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13a4:	add	x1, x1, #0x7aa
    13a8:	add	x2, x2, #0x980
    13ac:	add	x4, x4, #0x7c4
    13b0:	mov	x0, x19
    13b4:	mov	x3, x20
    13b8:	mov	w5, wzr
    13bc:	bl	1130 <Perl_newXS_flags@plt>
    13c0:	adrp	x23, 1000 <localtime@plt>
    13c4:	adrp	x24, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13c8:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13cc:	add	x23, x23, #0xbc0
    13d0:	add	x24, x24, #0x7c9
    13d4:	add	x1, x1, #0x7cb
    13d8:	mov	x0, x19
    13dc:	mov	x2, x23
    13e0:	mov	x3, x20
    13e4:	mov	x4, x24
    13e8:	mov	w5, wzr
    13ec:	bl	1130 <Perl_newXS_flags@plt>
    13f0:	ldr	x8, [x0]
    13f4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13f8:	mov	w9, #0x1                   	// #1
    13fc:	add	x1, x1, #0x7e4
    1400:	mov	x0, x19
    1404:	mov	x2, x23
    1408:	mov	x3, x20
    140c:	mov	x4, x24
    1410:	mov	w5, wzr
    1414:	str	w9, [x8, #40]
    1418:	bl	1130 <Perl_newXS_flags@plt>
    141c:	ldr	x8, [x0]
    1420:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1424:	adrp	x2, 1000 <localtime@plt>
    1428:	add	x1, x1, #0x800
    142c:	add	x2, x2, #0xd38
    1430:	mov	x0, x19
    1434:	mov	x3, x20
    1438:	mov	x4, x22
    143c:	mov	w5, wzr
    1440:	str	wzr, [x8, #40]
    1444:	bl	1130 <Perl_newXS_flags@plt>
    1448:	mov	x0, x19
    144c:	mov	w1, w21
    1450:	bl	1040 <Perl_xs_boot_epilog@plt>
    1454:	ldp	x20, x19, [sp, #48]
    1458:	ldp	x22, x21, [sp, #32]
    145c:	ldp	x24, x23, [sp, #16]
    1460:	ldp	x29, x30, [sp], #64
    1464:	ret
    1468:	sub	sp, sp, #0x150
    146c:	stp	x29, x30, [sp, #240]
    1470:	str	x28, [sp, #256]
    1474:	stp	x26, x25, [sp, #272]
    1478:	stp	x24, x23, [sp, #288]
    147c:	stp	x22, x21, [sp, #304]
    1480:	stp	x20, x19, [sp, #320]
    1484:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1488:	ldr	x8, [x8, #4056]
    148c:	add	x29, sp, #0xf0
    1490:	mov	x19, x0
    1494:	mov	x20, x1
    1498:	ldr	x8, [x8]
    149c:	stur	x8, [x29, #-8]
    14a0:	ldr	x21, [x0]
    14a4:	bl	2158 <boot_Time__Piece@@Base+0xe84>
    14a8:	ldr	x8, [x19, #24]
    14ac:	add	x9, x8, w0, sxtw #3
    14b0:	sub	x9, x21, x9
    14b4:	lsr	x21, x9, #3
    14b8:	and	w9, w21, #0xfffffffe
    14bc:	cmp	w9, #0x2
    14c0:	b.ne	1714 <boot_Time__Piece@@Base+0x440>  // b.any
    14c4:	sxtw	x22, w0
    14c8:	add	x25, x22, #0x1
    14cc:	ldr	x1, [x8, x25, lsl #3]
    14d0:	mov	w23, #0x100                 	// #256
    14d4:	movk	w23, #0x20, lsl #16
    14d8:	add	w9, w23, #0x300
    14dc:	ldr	w8, [x1, #12]
    14e0:	and	w8, w8, w9
    14e4:	cmp	w8, #0x400
    14e8:	b.ne	14f4 <boot_Time__Piece@@Base+0x220>  // b.any
    14ec:	ldr	x20, [x1, #16]
    14f0:	b	1508 <boot_Time__Piece@@Base+0x234>
    14f4:	mov	w3, #0x2                   	// #2
    14f8:	mov	x0, x19
    14fc:	mov	x2, xzr
    1500:	bl	1030 <Perl_sv_2pv_flags@plt>
    1504:	mov	x20, x0
    1508:	ldr	x8, [x19, #24]
    150c:	add	w9, w23, #0x100
    1510:	add	x8, x8, x22, lsl #3
    1514:	ldr	x1, [x8, #16]
    1518:	ldr	w8, [x1, #12]
    151c:	and	w8, w8, w9
    1520:	cmp	w8, #0x200
    1524:	b.ne	1534 <boot_Time__Piece@@Base+0x260>  // b.any
    1528:	ldr	x8, [x1]
    152c:	ldr	d0, [x8, #40]
    1530:	b	1540 <boot_Time__Piece@@Base+0x26c>
    1534:	mov	w2, #0x2                   	// #2
    1538:	mov	x0, x19
    153c:	bl	10a0 <Perl_sv_2nv_flags@plt>
    1540:	fcvtzs	x8, d0
    1544:	cmp	w21, #0x3
    1548:	str	x8, [sp, #64]
    154c:	b.ge	1564 <boot_Time__Piece@@Base+0x290>  // b.tcont
    1550:	mov	w8, #0x1                   	// #1
    1554:	add	x0, sp, #0x40
    1558:	cbnz	w8, 15a8 <boot_Time__Piece@@Base+0x2d4>
    155c:	bl	1060 <gmtime@plt>
    1560:	b	15ac <boot_Time__Piece@@Base+0x2d8>
    1564:	ldr	x8, [x19, #24]
    1568:	add	x8, x8, x22, lsl #3
    156c:	ldr	x1, [x8, #24]
    1570:	ldr	w8, [x1, #12]
    1574:	and	w8, w8, w23
    1578:	cmp	w8, #0x100
    157c:	b.ne	158c <boot_Time__Piece@@Base+0x2b8>  // b.any
    1580:	ldr	x8, [x1]
    1584:	ldr	x0, [x8, #32]
    1588:	b	1598 <boot_Time__Piece@@Base+0x2c4>
    158c:	mov	w2, #0x2                   	// #2
    1590:	mov	x0, x19
    1594:	bl	f80 <Perl_sv_2iv_flags@plt>
    1598:	cmp	w0, #0x1
    159c:	cset	w8, eq  // eq = none
    15a0:	add	x0, sp, #0x40
    15a4:	cbz	w8, 155c <boot_Time__Piece@@Base+0x288>
    15a8:	bl	1000 <localtime@plt>
    15ac:	ldr	x8, [x0, #48]
    15b0:	ldp	q1, q0, [x0, #16]
    15b4:	ldr	q2, [x0]
    15b8:	add	x0, sp, #0x48
    15bc:	mov	x3, sp
    15c0:	mov	w1, #0xa0                  	// #160
    15c4:	mov	x2, x20
    15c8:	str	x8, [sp, #48]
    15cc:	stp	q1, q0, [sp, #16]
    15d0:	str	q2, [sp]
    15d4:	bl	fd0 <strftime@plt>
    15d8:	sub	x8, x0, #0x1
    15dc:	mov	x21, x0
    15e0:	cmp	x8, #0x9f
    15e4:	b.cc	16a8 <boot_Time__Piece@@Base+0x3d4>  // b.lo, b.ul, b.last
    15e8:	cbnz	x21, 15f4 <boot_Time__Piece@@Base+0x320>
    15ec:	ldrb	w8, [x20]
    15f0:	cbz	w8, 16a8 <boot_Time__Piece@@Base+0x3d4>
    15f4:	mov	x0, x20
    15f8:	bl	f90 <strlen@plt>
    15fc:	add	x24, x0, #0xa0
    1600:	mov	x23, x0
    1604:	mov	x0, x24
    1608:	bl	1050 <Perl_safesysmalloc@plt>
    160c:	mov	x22, x0
    1610:	cbz	x0, 1664 <boot_Time__Piece@@Base+0x390>
    1614:	mov	w8, #0x64                  	// #100
    1618:	mul	x26, x23, x8
    161c:	mov	x3, sp
    1620:	mov	x0, x22
    1624:	mov	x1, x24
    1628:	mov	x2, x20
    162c:	bl	fd0 <strftime@plt>
    1630:	mov	x23, x0
    1634:	cbz	x0, 1640 <boot_Time__Piece@@Base+0x36c>
    1638:	cmp	x23, x24
    163c:	b.cc	1664 <boot_Time__Piece@@Base+0x390>  // b.lo, b.ul, b.last
    1640:	cmp	x24, x26
    1644:	b.hi	1698 <boot_Time__Piece@@Base+0x3c4>  // b.pmore
    1648:	lsl	x24, x24, #1
    164c:	mov	x0, x22
    1650:	mov	x1, x24
    1654:	bl	1160 <Perl_safesysrealloc@plt>
    1658:	mov	x22, x0
    165c:	cbnz	x0, 161c <boot_Time__Piece@@Base+0x348>
    1660:	b	1664 <boot_Time__Piece@@Base+0x390>
    1664:	cbz	x22, 16a8 <boot_Time__Piece@@Base+0x3d4>
    1668:	mov	x0, x19
    166c:	mov	x1, x22
    1670:	mov	x2, x23
    1674:	bl	10c0 <Perl_newSVpv@plt>
    1678:	mov	x1, x0
    167c:	mov	x0, x19
    1680:	bl	1140 <Perl_sv_2mortal@plt>
    1684:	ldr	x8, [x19, #24]
    1688:	str	x0, [x8, x25, lsl #3]
    168c:	mov	x0, x22
    1690:	bl	1150 <Perl_safesysfree@plt>
    1694:	b	16cc <boot_Time__Piece@@Base+0x3f8>
    1698:	mov	x0, x22
    169c:	bl	1150 <Perl_safesysfree@plt>
    16a0:	mov	x22, xzr
    16a4:	cbnz	x22, 1668 <boot_Time__Piece@@Base+0x394>
    16a8:	add	x1, sp, #0x48
    16ac:	mov	x0, x19
    16b0:	mov	x2, x21
    16b4:	bl	10c0 <Perl_newSVpv@plt>
    16b8:	mov	x1, x0
    16bc:	mov	x0, x19
    16c0:	bl	1140 <Perl_sv_2mortal@plt>
    16c4:	ldr	x8, [x19, #24]
    16c8:	str	x0, [x8, x25, lsl #3]
    16cc:	ldr	x8, [x19, #24]
    16d0:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    16d4:	add	x8, x8, x25, lsl #3
    16d8:	str	x8, [x19]
    16dc:	ldur	x8, [x29, #-8]
    16e0:	ldr	x9, [x9, #4056]
    16e4:	ldr	x9, [x9]
    16e8:	cmp	x9, x8
    16ec:	b.ne	1710 <boot_Time__Piece@@Base+0x43c>  // b.any
    16f0:	ldp	x20, x19, [sp, #320]
    16f4:	ldp	x22, x21, [sp, #304]
    16f8:	ldp	x24, x23, [sp, #288]
    16fc:	ldp	x26, x25, [sp, #272]
    1700:	ldr	x28, [sp, #256]
    1704:	ldp	x29, x30, [sp, #240]
    1708:	add	sp, sp, #0x150
    170c:	ret
    1710:	bl	1070 <__stack_chk_fail@plt>
    1714:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1718:	add	x1, x1, #0x81f
    171c:	mov	x0, x20
    1720:	bl	1090 <Perl_croak_xs_usage@plt>
    1724:	stp	x29, x30, [sp, #-48]!
    1728:	stp	x20, x19, [sp, #32]
    172c:	str	x21, [sp, #16]
    1730:	ldr	x21, [x0]
    1734:	mov	x29, sp
    1738:	mov	x19, x0
    173c:	mov	x20, x1
    1740:	bl	2158 <boot_Time__Piece@@Base+0xe84>
    1744:	ldr	x8, [x19, #24]
    1748:	add	x8, x8, w0, uxtw #3
    174c:	sub	x8, x21, x8
    1750:	tst	x8, #0x7fffffff8
    1754:	b.ne	1770 <boot_Time__Piece@@Base+0x49c>  // b.any
    1758:	str	x21, [x19]
    175c:	bl	216c <boot_Time__Piece@@Base+0xe98>
    1760:	ldp	x20, x19, [sp, #32]
    1764:	ldr	x21, [sp, #16]
    1768:	ldp	x29, x30, [sp], #48
    176c:	ret
    1770:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1774:	add	x1, x1, #0x7ca
    1778:	mov	x0, x20
    177c:	bl	1090 <Perl_croak_xs_usage@plt>
    1780:	sub	sp, sp, #0x90
    1784:	stp	x29, x30, [sp, #80]
    1788:	stp	x24, x23, [sp, #96]
    178c:	stp	x22, x21, [sp, #112]
    1790:	stp	x20, x19, [sp, #128]
    1794:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1798:	ldr	x8, [x8, #4056]
    179c:	add	x29, sp, #0x50
    17a0:	mov	x19, x0
    17a4:	mov	x20, x1
    17a8:	ldr	x8, [x8]
    17ac:	stur	x8, [x29, #-8]
    17b0:	ldr	x22, [x0]
    17b4:	bl	2158 <boot_Time__Piece@@Base+0xe84>
    17b8:	ldr	x8, [x19, #24]
    17bc:	add	x9, x8, w0, sxtw #3
    17c0:	sub	x9, x22, x9
    17c4:	and	x9, x9, #0x7fffffff8
    17c8:	cmp	x9, #0x20
    17cc:	b.ne	1958 <boot_Time__Piece@@Base+0x684>  // b.any
    17d0:	sxtw	x23, w0
    17d4:	add	x8, x8, x23, lsl #3
    17d8:	ldr	x1, [x8, #8]
    17dc:	mov	w24, #0x400                 	// #1024
    17e0:	movk	w24, #0x20, lsl #16
    17e4:	ldr	w8, [x1, #12]
    17e8:	and	w8, w8, w24
    17ec:	cmp	w8, #0x400
    17f0:	b.ne	17fc <boot_Time__Piece@@Base+0x528>  // b.any
    17f4:	ldr	x20, [x1, #16]
    17f8:	b	1810 <boot_Time__Piece@@Base+0x53c>
    17fc:	mov	w3, #0x2                   	// #2
    1800:	mov	x0, x19
    1804:	mov	x2, xzr
    1808:	bl	1030 <Perl_sv_2pv_flags@plt>
    180c:	mov	x20, x0
    1810:	ldr	x8, [x19, #24]
    1814:	add	x8, x8, x23, lsl #3
    1818:	ldr	x1, [x8, #16]
    181c:	ldr	w8, [x1, #12]
    1820:	and	w8, w8, w24
    1824:	cmp	w8, #0x400
    1828:	b.ne	1834 <boot_Time__Piece@@Base+0x560>  // b.any
    182c:	ldr	x21, [x1, #16]
    1830:	b	1848 <boot_Time__Piece@@Base+0x574>
    1834:	mov	w3, #0x2                   	// #2
    1838:	mov	x0, x19
    183c:	mov	x2, xzr
    1840:	bl	1030 <Perl_sv_2pv_flags@plt>
    1844:	mov	x21, x0
    1848:	ldr	x8, [x19, #24]
    184c:	sub	w9, w24, #0x300
    1850:	add	x8, x8, x23, lsl #3
    1854:	ldr	x1, [x8, #24]
    1858:	ldr	w8, [x1, #12]
    185c:	and	w8, w8, w9
    1860:	cmp	w8, #0x100
    1864:	b.ne	1874 <boot_Time__Piece@@Base+0x5a0>  // b.any
    1868:	ldr	x8, [x1]
    186c:	ldr	x0, [x8, #32]
    1870:	b	1880 <boot_Time__Piece@@Base+0x5ac>
    1874:	mov	w2, #0x2                   	// #2
    1878:	mov	x0, x19
    187c:	bl	f80 <Perl_sv_2iv_flags@plt>
    1880:	stur	w0, [x29, #-12]
    1884:	ldr	x8, [x19, #24]
    1888:	movi	v0.2d, #0x0
    188c:	mov	w9, #0x1                   	// #1
    1890:	add	x8, x8, x23, lsl #3
    1894:	ldr	x8, [x8, #32]
    1898:	stp	q0, q0, [sp]
    189c:	str	w9, [sp, #12]
    18a0:	mov	x9, #0x46                  	// #70
    18a4:	movk	x9, #0x4, lsl #32
    18a8:	stur	x9, [sp, #20]
    18ac:	mov	w9, #0xffffffff            	// #-1
    18b0:	str	q0, [sp, #32]
    18b4:	str	xzr, [sp, #48]
    18b8:	str	w9, [sp, #32]
    18bc:	ldr	x1, [x8, #16]
    18c0:	ldrb	w8, [x1, #12]
    18c4:	cmp	w8, #0xc
    18c8:	b.ne	1968 <boot_Time__Piece@@Base+0x694>  // b.any
    18cc:	mov	x0, x19
    18d0:	bl	2180 <boot_Time__Piece@@Base+0xeac>
    18d4:	mov	x2, sp
    18d8:	sub	x3, x29, #0xc
    18dc:	mov	x0, x20
    18e0:	mov	x1, x21
    18e4:	bl	26e8 <boot_Time__Piece@@Base+0x1414>
    18e8:	cbz	x0, 1974 <boot_Time__Piece@@Base+0x6a0>
    18ec:	ldrb	w8, [x0]
    18f0:	mov	x1, x0
    18f4:	sub	x20, x22, #0x20
    18f8:	cbz	w8, 1914 <boot_Time__Piece@@Base+0x640>
    18fc:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1900:	add	x0, x0, #0x89f
    1904:	bl	ff0 <Perl_warn_nocontext@plt>
    1908:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    190c:	add	x0, x0, #0x8c8
    1910:	bl	ff0 <Perl_warn_nocontext@plt>
    1914:	mov	x2, sp
    1918:	mov	x0, x19
    191c:	mov	x1, x20
    1920:	bl	3158 <boot_Time__Piece@@Base+0x1e84>
    1924:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1928:	ldur	x8, [x29, #-8]
    192c:	ldr	x9, [x9, #4056]
    1930:	ldr	x9, [x9]
    1934:	cmp	x9, x8
    1938:	b.ne	1954 <boot_Time__Piece@@Base+0x680>  // b.any
    193c:	ldp	x20, x19, [sp, #128]
    1940:	ldp	x22, x21, [sp, #112]
    1944:	ldp	x24, x23, [sp, #96]
    1948:	ldp	x29, x30, [sp, #80]
    194c:	add	sp, sp, #0x90
    1950:	ret
    1954:	bl	1070 <__stack_chk_fail@plt>
    1958:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    195c:	add	x1, x1, #0x837
    1960:	mov	x0, x20
    1964:	bl	1090 <Perl_croak_xs_usage@plt>
    1968:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    196c:	add	x0, x0, #0x85d
    1970:	bl	1100 <Perl_croak_nocontext@plt>
    1974:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1978:	add	x0, x0, #0x88c
    197c:	bl	1100 <Perl_croak_nocontext@plt>
    1980:	sub	sp, sp, #0xb0
    1984:	stp	x29, x30, [sp, #80]
    1988:	str	x27, [sp, #96]
    198c:	stp	x26, x25, [sp, #112]
    1990:	stp	x24, x23, [sp, #128]
    1994:	stp	x22, x21, [sp, #144]
    1998:	stp	x20, x19, [sp, #160]
    199c:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    19a0:	ldr	x8, [x8, #4056]
    19a4:	add	x29, sp, #0x50
    19a8:	mov	x19, x0
    19ac:	mov	x20, x1
    19b0:	ldr	x8, [x8]
    19b4:	stur	x8, [x29, #-8]
    19b8:	ldr	x24, [x0]
    19bc:	bl	2158 <boot_Time__Piece@@Base+0xe84>
    19c0:	ldr	x8, [x19, #24]
    19c4:	add	x9, x8, w0, sxtw #3
    19c8:	sub	x9, x24, x9
    19cc:	and	x9, x9, #0x7fffffff8
    19d0:	cmp	x9, #0x30
    19d4:	b.ne	1bb0 <boot_Time__Piece@@Base+0x8dc>  // b.any
    19d8:	sxtw	x26, w0
    19dc:	add	x8, x8, x26, lsl #3
    19e0:	ldr	x1, [x8, #8]
    19e4:	mov	w27, #0x100                 	// #256
    19e8:	movk	w27, #0x20, lsl #16
    19ec:	ldr	w8, [x1, #12]
    19f0:	and	w8, w8, w27
    19f4:	cmp	w8, #0x100
    19f8:	b.ne	1a08 <boot_Time__Piece@@Base+0x734>  // b.any
    19fc:	ldr	x8, [x1]
    1a00:	ldr	x20, [x8, #32]
    1a04:	b	1a18 <boot_Time__Piece@@Base+0x744>
    1a08:	mov	w2, #0x2                   	// #2
    1a0c:	mov	x0, x19
    1a10:	bl	f80 <Perl_sv_2iv_flags@plt>
    1a14:	mov	x20, x0
    1a18:	ldr	x8, [x19, #24]
    1a1c:	add	x8, x8, x26, lsl #3
    1a20:	ldr	x1, [x8, #16]
    1a24:	ldr	w8, [x1, #12]
    1a28:	and	w8, w8, w27
    1a2c:	cmp	w8, #0x100
    1a30:	b.ne	1a40 <boot_Time__Piece@@Base+0x76c>  // b.any
    1a34:	ldr	x8, [x1]
    1a38:	ldr	x21, [x8, #32]
    1a3c:	b	1a50 <boot_Time__Piece@@Base+0x77c>
    1a40:	mov	w2, #0x2                   	// #2
    1a44:	mov	x0, x19
    1a48:	bl	f80 <Perl_sv_2iv_flags@plt>
    1a4c:	mov	x21, x0
    1a50:	ldr	x8, [x19, #24]
    1a54:	add	x8, x8, x26, lsl #3
    1a58:	ldr	x1, [x8, #24]
    1a5c:	ldr	w8, [x1, #12]
    1a60:	and	w8, w8, w27
    1a64:	cmp	w8, #0x100
    1a68:	b.ne	1a78 <boot_Time__Piece@@Base+0x7a4>  // b.any
    1a6c:	ldr	x8, [x1]
    1a70:	ldr	x22, [x8, #32]
    1a74:	b	1a88 <boot_Time__Piece@@Base+0x7b4>
    1a78:	mov	w2, #0x2                   	// #2
    1a7c:	mov	x0, x19
    1a80:	bl	f80 <Perl_sv_2iv_flags@plt>
    1a84:	mov	x22, x0
    1a88:	ldr	x8, [x19, #24]
    1a8c:	add	x8, x8, x26, lsl #3
    1a90:	ldr	x1, [x8, #32]
    1a94:	ldr	w8, [x1, #12]
    1a98:	and	w8, w8, w27
    1a9c:	cmp	w8, #0x100
    1aa0:	b.ne	1ab0 <boot_Time__Piece@@Base+0x7dc>  // b.any
    1aa4:	ldr	x8, [x1]
    1aa8:	ldr	x23, [x8, #32]
    1aac:	b	1ac0 <boot_Time__Piece@@Base+0x7ec>
    1ab0:	mov	w2, #0x2                   	// #2
    1ab4:	mov	x0, x19
    1ab8:	bl	f80 <Perl_sv_2iv_flags@plt>
    1abc:	mov	x23, x0
    1ac0:	ldr	x8, [x19, #24]
    1ac4:	sub	x24, x24, #0x30
    1ac8:	add	x8, x8, x26, lsl #3
    1acc:	ldr	x1, [x8, #40]
    1ad0:	ldr	w8, [x1, #12]
    1ad4:	and	w8, w8, w27
    1ad8:	cmp	w8, #0x100
    1adc:	b.ne	1aec <boot_Time__Piece@@Base+0x818>  // b.any
    1ae0:	ldr	x8, [x1]
    1ae4:	ldr	x25, [x8, #32]
    1ae8:	b	1afc <boot_Time__Piece@@Base+0x828>
    1aec:	mov	w2, #0x2                   	// #2
    1af0:	mov	x0, x19
    1af4:	bl	f80 <Perl_sv_2iv_flags@plt>
    1af8:	mov	x25, x0
    1afc:	ldr	x8, [x19, #24]
    1b00:	add	x8, x8, x26, lsl #3
    1b04:	ldr	x1, [x8, #48]
    1b08:	ldr	w8, [x1, #12]
    1b0c:	and	w8, w8, w27
    1b10:	cmp	w8, #0x100
    1b14:	b.ne	1b24 <boot_Time__Piece@@Base+0x850>  // b.any
    1b18:	ldr	x8, [x1]
    1b1c:	ldr	x26, [x8, #32]
    1b20:	b	1b34 <boot_Time__Piece@@Base+0x860>
    1b24:	mov	w2, #0x2                   	// #2
    1b28:	mov	x0, x19
    1b2c:	bl	f80 <Perl_sv_2iv_flags@plt>
    1b30:	mov	x26, x0
    1b34:	add	x0, sp, #0x8
    1b38:	str	xzr, [sp, #8]
    1b3c:	bl	1060 <gmtime@plt>
    1b40:	ldp	q0, q1, [x0]
    1b44:	ldr	x8, [x0, #48]
    1b48:	ldr	q2, [x0, #32]
    1b4c:	add	x2, sp, #0x10
    1b50:	mov	x0, x19
    1b54:	mov	x1, x24
    1b58:	stp	q0, q1, [sp, #16]
    1b5c:	str	x8, [sp, #64]
    1b60:	str	q2, [sp, #48]
    1b64:	stp	w20, w21, [sp, #16]
    1b68:	stp	w22, w23, [sp, #24]
    1b6c:	stp	w25, w26, [sp, #32]
    1b70:	bl	3158 <boot_Time__Piece@@Base+0x1e84>
    1b74:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1b78:	ldur	x8, [x29, #-8]
    1b7c:	ldr	x9, [x9, #4056]
    1b80:	ldr	x9, [x9]
    1b84:	cmp	x9, x8
    1b88:	b.ne	1bac <boot_Time__Piece@@Base+0x8d8>  // b.any
    1b8c:	ldp	x20, x19, [sp, #160]
    1b90:	ldp	x22, x21, [sp, #144]
    1b94:	ldp	x24, x23, [sp, #128]
    1b98:	ldp	x26, x25, [sp, #112]
    1b9c:	ldr	x27, [sp, #96]
    1ba0:	ldp	x29, x30, [sp, #80]
    1ba4:	add	sp, sp, #0xb0
    1ba8:	ret
    1bac:	bl	1070 <__stack_chk_fail@plt>
    1bb0:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1bb4:	add	x1, x1, #0x980
    1bb8:	mov	x0, x20
    1bbc:	bl	1090 <Perl_croak_xs_usage@plt>
    1bc0:	sub	sp, sp, #0x80
    1bc4:	stp	x29, x30, [sp, #80]
    1bc8:	stp	x22, x21, [sp, #96]
    1bcc:	stp	x20, x19, [sp, #112]
    1bd0:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1bd4:	ldr	x8, [x8, #4056]
    1bd8:	add	x29, sp, #0x50
    1bdc:	mov	x19, x0
    1be0:	mov	x20, x1
    1be4:	ldr	x8, [x8]
    1be8:	stur	x8, [x29, #-8]
    1bec:	ldr	x21, [x0]
    1bf0:	bl	2158 <boot_Time__Piece@@Base+0xe84>
    1bf4:	ldr	x8, [x19, #24]
    1bf8:	add	x9, x8, w0, sxtw #3
    1bfc:	sub	x9, x21, x9
    1c00:	and	x9, x9, #0x7fffffff8
    1c04:	cmp	x9, #0x8
    1c08:	b.ne	1d28 <boot_Time__Piece@@Base+0xa54>  // b.any
    1c0c:	sxtw	x9, w0
    1c10:	add	x8, x8, x9, lsl #3
    1c14:	ldr	x1, [x8, #8]
    1c18:	ldr	x8, [x20]
    1c1c:	ldr	w9, [x1, #12]
    1c20:	ldr	w22, [x8, #40]
    1c24:	mov	w8, #0x200                 	// #512
    1c28:	movk	w8, #0x20, lsl #16
    1c2c:	and	w8, w9, w8
    1c30:	cmp	w8, #0x200
    1c34:	b.ne	1c44 <boot_Time__Piece@@Base+0x970>  // b.any
    1c38:	ldr	x8, [x1]
    1c3c:	ldr	d0, [x8, #40]
    1c40:	b	1c50 <boot_Time__Piece@@Base+0x97c>
    1c44:	mov	w2, #0x2                   	// #2
    1c48:	mov	x0, x19
    1c4c:	bl	10a0 <Perl_sv_2nv_flags@plt>
    1c50:	sub	x20, x21, #0x8
    1c54:	fcvtzs	x8, d0
    1c58:	add	x0, sp, #0x8
    1c5c:	str	x8, [sp, #8]
    1c60:	cbz	w22, 1c6c <boot_Time__Piece@@Base+0x998>
    1c64:	bl	1060 <gmtime@plt>
    1c68:	b	1c70 <boot_Time__Piece@@Base+0x99c>
    1c6c:	bl	1000 <localtime@plt>
    1c70:	ldr	x8, [x0, #48]
    1c74:	ldp	q1, q0, [x0, #16]
    1c78:	ldr	q2, [x0]
    1c7c:	str	x8, [sp, #64]
    1c80:	stp	q1, q0, [sp, #32]
    1c84:	str	q2, [sp, #16]
    1c88:	ldr	x8, [x19, #32]
    1c8c:	sub	x8, x8, x20
    1c90:	cmp	x8, #0x4f
    1c94:	b.le	1d08 <boot_Time__Piece@@Base+0xa34>
    1c98:	add	x2, sp, #0x10
    1c9c:	mov	x0, x19
    1ca0:	mov	x1, x20
    1ca4:	bl	358c <boot_Time__Piece@@Base+0x22b8>
    1ca8:	ldrsw	x1, [sp, #48]
    1cac:	mov	x20, x0
    1cb0:	mov	x0, x19
    1cb4:	bl	11d0 <Perl_newSViv@plt>
    1cb8:	mov	x8, x20
    1cbc:	str	x0, [x8, #8]!
    1cc0:	sub	x21, x20, #0x48
    1cc4:	str	x8, [x19]
    1cc8:	ldr	x1, [x21, #8]!
    1ccc:	mov	x0, x19
    1cd0:	bl	1140 <Perl_sv_2mortal@plt>
    1cd4:	cmp	x21, x20
    1cd8:	b.ls	1cc8 <boot_Time__Piece@@Base+0x9f4>  // b.plast
    1cdc:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1ce0:	ldur	x8, [x29, #-8]
    1ce4:	ldr	x9, [x9, #4056]
    1ce8:	ldr	x9, [x9]
    1cec:	cmp	x9, x8
    1cf0:	b.ne	1d24 <boot_Time__Piece@@Base+0xa50>  // b.any
    1cf4:	ldp	x20, x19, [sp, #112]
    1cf8:	ldp	x22, x21, [sp, #96]
    1cfc:	ldp	x29, x30, [sp, #80]
    1d00:	add	sp, sp, #0x80
    1d04:	ret
    1d08:	mov	w3, #0xa                   	// #10
    1d0c:	mov	x0, x19
    1d10:	mov	x1, x20
    1d14:	mov	x2, x20
    1d18:	bl	fb0 <Perl_stack_grow@plt>
    1d1c:	mov	x20, x0
    1d20:	b	1c98 <boot_Time__Piece@@Base+0x9c4>
    1d24:	bl	1070 <__stack_chk_fail@plt>
    1d28:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1d2c:	add	x1, x1, #0x9a0
    1d30:	mov	x0, x20
    1d34:	bl	1090 <Perl_croak_xs_usage@plt>
    1d38:	sub	sp, sp, #0x150
    1d3c:	stp	x29, x30, [sp, #240]
    1d40:	stp	x28, x27, [sp, #256]
    1d44:	stp	x26, x25, [sp, #272]
    1d48:	stp	x24, x23, [sp, #288]
    1d4c:	stp	x22, x21, [sp, #304]
    1d50:	stp	x20, x19, [sp, #320]
    1d54:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1d58:	ldr	x8, [x8, #4056]
    1d5c:	add	x29, sp, #0xf0
    1d60:	mov	x19, x0
    1d64:	mov	x20, x1
    1d68:	ldr	x8, [x8]
    1d6c:	stur	x8, [x29, #-16]
    1d70:	ldr	x21, [x0]
    1d74:	bl	2158 <boot_Time__Piece@@Base+0xe84>
    1d78:	ldr	x8, [x19, #24]
    1d7c:	add	x8, x8, w0, sxtw #3
    1d80:	sub	x8, x21, x8
    1d84:	tst	x8, #0x7fffffff8
    1d88:	b.ne	2148 <boot_Time__Piece@@Base+0xe74>  // b.any
    1d8c:	sxtw	x8, w0
    1d90:	mov	w1, #0xc                   	// #12
    1d94:	mov	x0, x19
    1d98:	add	x27, x8, #0x1
    1d9c:	bl	11b0 <Perl_newSV_type@plt>
    1da0:	mov	x20, x0
    1da4:	mov	w1, #0xb                   	// #11
    1da8:	mov	x0, x19
    1dac:	bl	11b0 <Perl_newSV_type@plt>
    1db0:	mov	x24, x0
    1db4:	mov	w1, #0xb                   	// #11
    1db8:	mov	x0, x19
    1dbc:	bl	11b0 <Perl_newSV_type@plt>
    1dc0:	mov	x23, x0
    1dc4:	mov	w1, #0xb                   	// #11
    1dc8:	mov	x0, x19
    1dcc:	bl	11b0 <Perl_newSV_type@plt>
    1dd0:	mov	x22, x0
    1dd4:	mov	w1, #0xb                   	// #11
    1dd8:	mov	x0, x19
    1ddc:	bl	11b0 <Perl_newSV_type@plt>
    1de0:	mov	w8, #0xcc30                	// #52272
    1de4:	mov	x21, x0
    1de8:	movk	w8, #0x4eff, lsl #16
    1dec:	add	x0, sp, #0x38
    1df0:	str	x8, [sp, #56]
    1df4:	bl	1060 <gmtime@plt>
    1df8:	ldp	q1, q0, [x0, #16]
    1dfc:	ldr	x8, [x0, #48]
    1e00:	ldr	q2, [x0]
    1e04:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e08:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e0c:	mov	w28, #0x7                   	// #7
    1e10:	add	x25, x25, #0x9a4
    1e14:	add	x26, x26, #0x9a7
    1e18:	str	x8, [sp, #48]
    1e1c:	stp	q1, q0, [sp, #16]
    1e20:	str	q2, [sp]
    1e24:	add	x0, sp, #0x40
    1e28:	mov	x3, sp
    1e2c:	mov	w1, #0xa0                  	// #160
    1e30:	mov	x2, x25
    1e34:	bl	fd0 <strftime@plt>
    1e38:	mov	x2, x0
    1e3c:	add	x1, sp, #0x40
    1e40:	mov	x0, x19
    1e44:	bl	11f0 <Perl_newSVpvn@plt>
    1e48:	mov	x2, x0
    1e4c:	mov	x0, x19
    1e50:	mov	x1, x24
    1e54:	bl	10b0 <Perl_av_push@plt>
    1e58:	add	x0, sp, #0x40
    1e5c:	mov	x3, sp
    1e60:	mov	w1, #0xa0                  	// #160
    1e64:	mov	x2, x26
    1e68:	bl	fd0 <strftime@plt>
    1e6c:	mov	x2, x0
    1e70:	add	x1, sp, #0x40
    1e74:	mov	x0, x19
    1e78:	bl	11f0 <Perl_newSVpvn@plt>
    1e7c:	mov	x2, x0
    1e80:	mov	x0, x19
    1e84:	mov	x1, x23
    1e88:	bl	10b0 <Perl_av_push@plt>
    1e8c:	ldr	w8, [sp, #24]
    1e90:	subs	x28, x28, #0x1
    1e94:	add	w8, w8, #0x1
    1e98:	str	w8, [sp, #24]
    1e9c:	b.ne	1e24 <boot_Time__Piece@@Base+0xb50>  // b.any
    1ea0:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ea4:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ea8:	mov	w28, #0xc                   	// #12
    1eac:	add	x25, x25, #0x9aa
    1eb0:	add	x26, x26, #0x9ad
    1eb4:	add	x0, sp, #0x40
    1eb8:	mov	x3, sp
    1ebc:	mov	w1, #0xa0                  	// #160
    1ec0:	mov	x2, x25
    1ec4:	bl	fd0 <strftime@plt>
    1ec8:	mov	x2, x0
    1ecc:	add	x1, sp, #0x40
    1ed0:	mov	x0, x19
    1ed4:	bl	11f0 <Perl_newSVpvn@plt>
    1ed8:	mov	x2, x0
    1edc:	mov	x0, x19
    1ee0:	mov	x1, x22
    1ee4:	bl	10b0 <Perl_av_push@plt>
    1ee8:	add	x0, sp, #0x40
    1eec:	mov	x3, sp
    1ef0:	mov	w1, #0xa0                  	// #160
    1ef4:	mov	x2, x26
    1ef8:	bl	fd0 <strftime@plt>
    1efc:	mov	x2, x0
    1f00:	add	x1, sp, #0x40
    1f04:	mov	x0, x19
    1f08:	bl	11f0 <Perl_newSVpvn@plt>
    1f0c:	mov	x2, x0
    1f10:	mov	x0, x19
    1f14:	mov	x1, x21
    1f18:	bl	10b0 <Perl_av_push@plt>
    1f1c:	ldr	w8, [sp, #16]
    1f20:	subs	x28, x28, #0x1
    1f24:	add	w8, w8, #0x1
    1f28:	str	w8, [sp, #16]
    1f2c:	b.ne	1eb4 <boot_Time__Piece@@Base+0xbe0>  // b.any
    1f30:	mov	x0, x19
    1f34:	mov	x1, x24
    1f38:	bl	fa0 <Perl_newRV_noinc@plt>
    1f3c:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1f40:	mov	x5, x0
    1f44:	add	x2, x2, #0x914
    1f48:	mov	w3, #0x4                   	// #4
    1f4c:	mov	w4, #0x24                  	// #36
    1f50:	mov	x0, x19
    1f54:	mov	x1, x20
    1f58:	mov	w6, wzr
    1f5c:	bl	1190 <Perl_hv_common_key_len@plt>
    1f60:	mov	x0, x19
    1f64:	mov	x1, x23
    1f68:	bl	fa0 <Perl_newRV_noinc@plt>
    1f6c:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1f70:	mov	x5, x0
    1f74:	add	x2, x2, #0x90c
    1f78:	mov	w3, #0x7                   	// #7
    1f7c:	mov	w4, #0x24                  	// #36
    1f80:	mov	x0, x19
    1f84:	mov	x1, x20
    1f88:	mov	w6, wzr
    1f8c:	bl	1190 <Perl_hv_common_key_len@plt>
    1f90:	mov	x0, x19
    1f94:	mov	x1, x22
    1f98:	bl	fa0 <Perl_newRV_noinc@plt>
    1f9c:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1fa0:	mov	x5, x0
    1fa4:	add	x2, x2, #0x908
    1fa8:	mov	w3, #0x3                   	// #3
    1fac:	mov	w4, #0x24                  	// #36
    1fb0:	mov	x0, x19
    1fb4:	mov	x1, x20
    1fb8:	mov	w6, wzr
    1fbc:	bl	1190 <Perl_hv_common_key_len@plt>
    1fc0:	mov	x0, x19
    1fc4:	mov	x1, x21
    1fc8:	bl	fa0 <Perl_newRV_noinc@plt>
    1fcc:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1fd0:	mov	x5, x0
    1fd4:	add	x2, x2, #0x902
    1fd8:	mov	w3, #0x5                   	// #5
    1fdc:	mov	w4, #0x24                  	// #36
    1fe0:	mov	x0, x19
    1fe4:	mov	x1, x20
    1fe8:	mov	w6, wzr
    1fec:	bl	1190 <Perl_hv_common_key_len@plt>
    1ff0:	mov	x0, x19
    1ff4:	mov	x1, x21
    1ff8:	bl	11a0 <Perl_newRV@plt>
    1ffc:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2000:	mov	x5, x0
    2004:	add	x2, x2, #0x8fe
    2008:	mov	w3, #0x9                   	// #9
    200c:	mov	w4, #0x24                  	// #36
    2010:	mov	x0, x19
    2014:	mov	x1, x20
    2018:	mov	w6, wzr
    201c:	bl	1190 <Perl_hv_common_key_len@plt>
    2020:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2024:	add	x21, x21, #0x964
    2028:	add	x0, sp, #0x40
    202c:	mov	x3, sp
    2030:	mov	w1, #0xa0                  	// #160
    2034:	mov	x2, x21
    2038:	bl	fd0 <strftime@plt>
    203c:	mov	x2, x0
    2040:	add	x1, sp, #0x40
    2044:	mov	x0, x19
    2048:	bl	11f0 <Perl_newSVpvn@plt>
    204c:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2050:	mov	x5, x0
    2054:	add	x2, x2, #0x91f
    2058:	mov	w3, #0x2                   	// #2
    205c:	mov	w4, #0x24                  	// #36
    2060:	mov	x0, x19
    2064:	mov	x1, x20
    2068:	mov	w6, wzr
    206c:	bl	1190 <Perl_hv_common_key_len@plt>
    2070:	mov	w8, #0x12                  	// #18
    2074:	add	x0, sp, #0x40
    2078:	mov	x3, sp
    207c:	mov	w1, #0xa0                  	// #160
    2080:	mov	x2, x21
    2084:	str	w8, [sp, #8]
    2088:	bl	fd0 <strftime@plt>
    208c:	mov	x2, x0
    2090:	add	x1, sp, #0x40
    2094:	mov	x0, x19
    2098:	bl	11f0 <Perl_newSVpvn@plt>
    209c:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    20a0:	mov	x5, x0
    20a4:	add	x2, x2, #0x922
    20a8:	mov	w3, #0x2                   	// #2
    20ac:	mov	w4, #0x24                  	// #36
    20b0:	mov	x0, x19
    20b4:	mov	x1, x20
    20b8:	mov	w6, wzr
    20bc:	bl	1190 <Perl_hv_common_key_len@plt>
    20c0:	cbz	x0, 213c <boot_Time__Piece@@Base+0xe68>
    20c4:	ldr	x8, [x0]
    20c8:	ldrb	w8, [x8, #13]
    20cc:	cbz	w8, 213c <boot_Time__Piece@@Base+0xe68>
    20d0:	mov	x0, x19
    20d4:	mov	x1, x20
    20d8:	bl	fa0 <Perl_newRV_noinc@plt>
    20dc:	mov	x1, x0
    20e0:	mov	x0, x19
    20e4:	bl	1140 <Perl_sv_2mortal@plt>
    20e8:	ldr	x8, [x19, #24]
    20ec:	lsl	x9, x27, #3
    20f0:	str	x0, [x8, x9]
    20f4:	ldr	x8, [x19, #24]
    20f8:	add	x8, x8, x9
    20fc:	str	x8, [x19]
    2100:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2104:	ldur	x8, [x29, #-16]
    2108:	ldr	x9, [x9, #4056]
    210c:	ldr	x9, [x9]
    2110:	cmp	x9, x8
    2114:	b.ne	2138 <boot_Time__Piece@@Base+0xe64>  // b.any
    2118:	ldp	x20, x19, [sp, #320]
    211c:	ldp	x22, x21, [sp, #304]
    2120:	ldp	x24, x23, [sp, #288]
    2124:	ldp	x26, x25, [sp, #272]
    2128:	ldp	x28, x27, [sp, #256]
    212c:	ldp	x29, x30, [sp, #240]
    2130:	add	sp, sp, #0x150
    2134:	ret
    2138:	bl	1070 <__stack_chk_fail@plt>
    213c:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2140:	add	x0, x0, #0x9b0
    2144:	bl	1100 <Perl_croak_nocontext@plt>
    2148:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    214c:	add	x1, x1, #0x7ca
    2150:	mov	x0, x20
    2154:	bl	1090 <Perl_croak_xs_usage@plt>
    2158:	ldr	x8, [x0, #120]
    215c:	sub	x9, x8, #0x4
    2160:	str	x9, [x0, #120]
    2164:	ldr	w0, [x8]
    2168:	ret
    216c:	stp	x29, x30, [sp, #-16]!
    2170:	mov	x29, sp
    2174:	bl	1020 <tzset@plt>
    2178:	ldp	x29, x30, [sp], #16
    217c:	ret
    2180:	stp	x29, x30, [sp, #-96]!
    2184:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2188:	stp	x26, x25, [sp, #32]
    218c:	mov	w25, #0x400                 	// #1024
    2190:	add	x2, x2, #0x8fe
    2194:	mov	w3, #0x9                   	// #9
    2198:	mov	w4, #0x20                  	// #32
    219c:	mov	x5, xzr
    21a0:	mov	w6, wzr
    21a4:	str	x27, [sp, #16]
    21a8:	stp	x24, x23, [sp, #48]
    21ac:	stp	x22, x21, [sp, #64]
    21b0:	stp	x20, x19, [sp, #80]
    21b4:	mov	x29, sp
    21b8:	mov	x20, x1
    21bc:	mov	x19, x0
    21c0:	movk	w25, #0x20, lsl #16
    21c4:	bl	1190 <Perl_hv_common_key_len@plt>
    21c8:	ldr	x8, [x0]
    21cc:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    21d0:	add	x2, x2, #0x902
    21d4:	mov	w3, #0x5                   	// #5
    21d8:	ldr	x21, [x8, #16]
    21dc:	mov	w4, #0x20                  	// #32
    21e0:	mov	x0, x19
    21e4:	mov	x1, x20
    21e8:	mov	x5, xzr
    21ec:	mov	w6, wzr
    21f0:	bl	1190 <Perl_hv_common_key_len@plt>
    21f4:	ldr	x8, [x0]
    21f8:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    21fc:	add	x2, x2, #0x908
    2200:	mov	w3, #0x3                   	// #3
    2204:	ldr	x22, [x8, #16]
    2208:	mov	w4, #0x20                  	// #32
    220c:	mov	x0, x19
    2210:	mov	x1, x20
    2214:	mov	x5, xzr
    2218:	mov	w6, wzr
    221c:	bl	1190 <Perl_hv_common_key_len@plt>
    2220:	ldr	x8, [x0]
    2224:	mov	x0, x19
    2228:	mov	x1, x22
    222c:	ldr	x23, [x8, #16]
    2230:	bl	fe0 <Perl_av_len@plt>
    2234:	adrp	x26, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2238:	add	x26, x26, #0x150
    223c:	tbnz	w0, #31, 2380 <boot_Time__Piece@@Base+0x10ac>
    2240:	mov	x24, xzr
    2244:	b	2278 <boot_Time__Piece@@Base+0xfa4>
    2248:	mov	w3, #0x2                   	// #2
    224c:	mov	x0, x19
    2250:	mov	x2, xzr
    2254:	bl	1030 <Perl_sv_2pv_flags@plt>
    2258:	str	x0, [x26, x24, lsl #3]
    225c:	mov	x0, x19
    2260:	mov	x1, x22
    2264:	add	x27, x24, #0x1
    2268:	bl	fe0 <Perl_av_len@plt>
    226c:	cmp	x24, w0, sxtw
    2270:	mov	x24, x27
    2274:	b.ge	2380 <boot_Time__Piece@@Base+0x10ac>  // b.tcont
    2278:	mov	x0, x19
    227c:	mov	x1, x21
    2280:	mov	x2, x24
    2284:	mov	w3, wzr
    2288:	bl	1180 <Perl_av_fetch@plt>
    228c:	ldr	x8, [x0]
    2290:	mov	x0, x19
    2294:	mov	x1, x21
    2298:	mov	x2, x24
    229c:	ldr	w8, [x8, #12]
    22a0:	mov	w3, wzr
    22a4:	and	w27, w8, w25
    22a8:	bl	1180 <Perl_av_fetch@plt>
    22ac:	ldr	x1, [x0]
    22b0:	cmp	w27, #0x400
    22b4:	b.ne	22c0 <boot_Time__Piece@@Base+0xfec>  // b.any
    22b8:	ldr	x0, [x1, #16]
    22bc:	b	22d0 <boot_Time__Piece@@Base+0xffc>
    22c0:	mov	w3, #0x2                   	// #2
    22c4:	mov	x0, x19
    22c8:	mov	x2, xzr
    22cc:	bl	1030 <Perl_sv_2pv_flags@plt>
    22d0:	add	x8, x26, x24, lsl #3
    22d4:	str	x0, [x8, #336]
    22d8:	mov	x0, x19
    22dc:	mov	x1, x22
    22e0:	mov	x2, x24
    22e4:	mov	w3, wzr
    22e8:	bl	1180 <Perl_av_fetch@plt>
    22ec:	ldr	x8, [x0]
    22f0:	mov	x0, x19
    22f4:	mov	x1, x22
    22f8:	mov	x2, x24
    22fc:	ldr	w8, [x8, #12]
    2300:	mov	w3, wzr
    2304:	and	w27, w8, w25
    2308:	bl	1180 <Perl_av_fetch@plt>
    230c:	ldr	x1, [x0]
    2310:	cmp	w27, #0x400
    2314:	b.ne	2320 <boot_Time__Piece@@Base+0x104c>  // b.any
    2318:	ldr	x0, [x1, #16]
    231c:	b	2330 <boot_Time__Piece@@Base+0x105c>
    2320:	mov	w3, #0x2                   	// #2
    2324:	mov	x0, x19
    2328:	mov	x2, xzr
    232c:	bl	1030 <Perl_sv_2pv_flags@plt>
    2330:	add	x8, x26, x24, lsl #3
    2334:	str	x0, [x8, #96]
    2338:	mov	x0, x19
    233c:	mov	x1, x23
    2340:	mov	x2, x24
    2344:	mov	w3, wzr
    2348:	bl	1180 <Perl_av_fetch@plt>
    234c:	ldr	x8, [x0]
    2350:	mov	x0, x19
    2354:	mov	x1, x23
    2358:	mov	x2, x24
    235c:	ldr	w8, [x8, #12]
    2360:	mov	w3, wzr
    2364:	and	w27, w8, w25
    2368:	bl	1180 <Perl_av_fetch@plt>
    236c:	ldr	x1, [x0]
    2370:	cmp	w27, #0x400
    2374:	b.ne	2248 <boot_Time__Piece@@Base+0xf74>  // b.any
    2378:	ldr	x0, [x1, #16]
    237c:	b	2258 <boot_Time__Piece@@Base+0xf84>
    2380:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2384:	add	x2, x2, #0x90c
    2388:	mov	w3, #0x7                   	// #7
    238c:	mov	w4, #0x20                  	// #32
    2390:	mov	x0, x19
    2394:	mov	x1, x20
    2398:	mov	x5, xzr
    239c:	mov	w6, wzr
    23a0:	bl	1190 <Perl_hv_common_key_len@plt>
    23a4:	ldr	x8, [x0]
    23a8:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    23ac:	add	x2, x2, #0x914
    23b0:	mov	w3, #0x4                   	// #4
    23b4:	ldr	x21, [x8, #16]
    23b8:	mov	w4, #0x20                  	// #32
    23bc:	mov	x0, x19
    23c0:	mov	x1, x20
    23c4:	mov	x5, xzr
    23c8:	mov	w6, wzr
    23cc:	bl	1190 <Perl_hv_common_key_len@plt>
    23d0:	ldr	x8, [x0]
    23d4:	mov	x0, x19
    23d8:	mov	x1, x21
    23dc:	ldr	x22, [x8, #16]
    23e0:	bl	fe0 <Perl_av_len@plt>
    23e4:	tbnz	w0, #31, 24cc <boot_Time__Piece@@Base+0x11f8>
    23e8:	mov	x23, xzr
    23ec:	b	2424 <boot_Time__Piece@@Base+0x1150>
    23f0:	mov	w3, #0x2                   	// #2
    23f4:	mov	x0, x19
    23f8:	mov	x2, xzr
    23fc:	bl	1030 <Perl_sv_2pv_flags@plt>
    2400:	add	x8, x26, x23, lsl #3
    2404:	str	x0, [x8, #248]
    2408:	mov	x0, x19
    240c:	mov	x1, x21
    2410:	add	x24, x23, #0x1
    2414:	bl	fe0 <Perl_av_len@plt>
    2418:	cmp	x23, w0, sxtw
    241c:	mov	x23, x24
    2420:	b.ge	24cc <boot_Time__Piece@@Base+0x11f8>  // b.tcont
    2424:	mov	x0, x19
    2428:	mov	x1, x22
    242c:	mov	x2, x23
    2430:	mov	w3, wzr
    2434:	bl	1180 <Perl_av_fetch@plt>
    2438:	ldr	x8, [x0]
    243c:	mov	x0, x19
    2440:	mov	x1, x22
    2444:	mov	x2, x23
    2448:	ldr	w8, [x8, #12]
    244c:	mov	w3, wzr
    2450:	and	w24, w8, w25
    2454:	bl	1180 <Perl_av_fetch@plt>
    2458:	ldr	x1, [x0]
    245c:	cmp	w24, #0x400
    2460:	b.ne	246c <boot_Time__Piece@@Base+0x1198>  // b.any
    2464:	ldr	x0, [x1, #16]
    2468:	b	247c <boot_Time__Piece@@Base+0x11a8>
    246c:	mov	w3, #0x2                   	// #2
    2470:	mov	x0, x19
    2474:	mov	x2, xzr
    2478:	bl	1030 <Perl_sv_2pv_flags@plt>
    247c:	add	x8, x26, x23, lsl #3
    2480:	str	x0, [x8, #192]
    2484:	mov	x0, x19
    2488:	mov	x1, x21
    248c:	mov	x2, x23
    2490:	mov	w3, wzr
    2494:	bl	1180 <Perl_av_fetch@plt>
    2498:	ldr	x8, [x0]
    249c:	mov	x0, x19
    24a0:	mov	x1, x21
    24a4:	mov	x2, x23
    24a8:	ldr	w8, [x8, #12]
    24ac:	mov	w3, wzr
    24b0:	and	w24, w8, w25
    24b4:	bl	1180 <Perl_av_fetch@plt>
    24b8:	ldr	x1, [x0]
    24bc:	cmp	w24, #0x400
    24c0:	b.ne	23f0 <boot_Time__Piece@@Base+0x111c>  // b.any
    24c4:	ldr	x0, [x1, #16]
    24c8:	b	2400 <boot_Time__Piece@@Base+0x112c>
    24cc:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    24d0:	add	x21, x21, #0x919
    24d4:	mov	w3, #0x2                   	// #2
    24d8:	mov	w4, #0x20                  	// #32
    24dc:	mov	x0, x19
    24e0:	mov	x1, x20
    24e4:	mov	x2, x21
    24e8:	mov	x5, xzr
    24ec:	mov	w6, wzr
    24f0:	bl	1190 <Perl_hv_common_key_len@plt>
    24f4:	ldr	x8, [x0]
    24f8:	mov	w3, #0x2                   	// #2
    24fc:	mov	w4, #0x20                  	// #32
    2500:	mov	x0, x19
    2504:	ldr	w8, [x8, #12]
    2508:	mov	x1, x20
    250c:	mov	x2, x21
    2510:	mov	x5, xzr
    2514:	mov	w6, wzr
    2518:	and	w22, w8, w25
    251c:	bl	1190 <Perl_hv_common_key_len@plt>
    2520:	ldr	x1, [x0]
    2524:	cmp	w22, #0x400
    2528:	b.ne	2534 <boot_Time__Piece@@Base+0x1260>  // b.any
    252c:	ldr	x0, [x1, #16]
    2530:	b	2544 <boot_Time__Piece@@Base+0x1270>
    2534:	mov	w3, #0x2                   	// #2
    2538:	mov	x0, x19
    253c:	mov	x2, xzr
    2540:	bl	1030 <Perl_sv_2pv_flags@plt>
    2544:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2548:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    254c:	add	x21, x21, #0x91c
    2550:	str	x0, [x8, #640]
    2554:	mov	w3, #0x2                   	// #2
    2558:	mov	w4, #0x20                  	// #32
    255c:	mov	x0, x19
    2560:	mov	x1, x20
    2564:	mov	x2, x21
    2568:	mov	x5, xzr
    256c:	mov	w6, wzr
    2570:	bl	1190 <Perl_hv_common_key_len@plt>
    2574:	ldr	x8, [x0]
    2578:	mov	w3, #0x2                   	// #2
    257c:	mov	w4, #0x20                  	// #32
    2580:	mov	x0, x19
    2584:	ldr	w8, [x8, #12]
    2588:	mov	x1, x20
    258c:	mov	x2, x21
    2590:	mov	x5, xzr
    2594:	mov	w6, wzr
    2598:	and	w22, w8, w25
    259c:	bl	1190 <Perl_hv_common_key_len@plt>
    25a0:	ldr	x1, [x0]
    25a4:	cmp	w22, #0x400
    25a8:	b.ne	25b4 <boot_Time__Piece@@Base+0x12e0>  // b.any
    25ac:	ldr	x0, [x1, #16]
    25b0:	b	25c4 <boot_Time__Piece@@Base+0x12f0>
    25b4:	mov	w3, #0x2                   	// #2
    25b8:	mov	x0, x19
    25bc:	mov	x2, xzr
    25c0:	bl	1030 <Perl_sv_2pv_flags@plt>
    25c4:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    25c8:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    25cc:	add	x21, x21, #0x91f
    25d0:	str	x0, [x8, #648]
    25d4:	mov	w3, #0x2                   	// #2
    25d8:	mov	w4, #0x20                  	// #32
    25dc:	mov	x0, x19
    25e0:	mov	x1, x20
    25e4:	mov	x2, x21
    25e8:	mov	x5, xzr
    25ec:	mov	w6, wzr
    25f0:	bl	1190 <Perl_hv_common_key_len@plt>
    25f4:	ldr	x8, [x0]
    25f8:	mov	w3, #0x2                   	// #2
    25fc:	mov	w4, #0x20                  	// #32
    2600:	mov	x0, x19
    2604:	ldr	w8, [x8, #12]
    2608:	mov	x1, x20
    260c:	mov	x2, x21
    2610:	mov	x5, xzr
    2614:	mov	w6, wzr
    2618:	and	w22, w8, w25
    261c:	bl	1190 <Perl_hv_common_key_len@plt>
    2620:	ldr	x1, [x0]
    2624:	cmp	w22, #0x400
    2628:	b.ne	2634 <boot_Time__Piece@@Base+0x1360>  // b.any
    262c:	ldr	x0, [x1, #16]
    2630:	b	2644 <boot_Time__Piece@@Base+0x1370>
    2634:	mov	w3, #0x2                   	// #2
    2638:	mov	x0, x19
    263c:	mov	x2, xzr
    2640:	bl	1030 <Perl_sv_2pv_flags@plt>
    2644:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2648:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    264c:	add	x21, x21, #0x922
    2650:	str	x0, [x8, #656]
    2654:	mov	w3, #0x2                   	// #2
    2658:	mov	w4, #0x20                  	// #32
    265c:	mov	x0, x19
    2660:	mov	x1, x20
    2664:	mov	x2, x21
    2668:	mov	x5, xzr
    266c:	mov	w6, wzr
    2670:	bl	1190 <Perl_hv_common_key_len@plt>
    2674:	ldr	x8, [x0]
    2678:	mov	w3, #0x2                   	// #2
    267c:	mov	w4, #0x20                  	// #32
    2680:	mov	x0, x19
    2684:	ldr	w8, [x8, #12]
    2688:	mov	x1, x20
    268c:	mov	x2, x21
    2690:	mov	x5, xzr
    2694:	mov	w6, wzr
    2698:	and	w22, w8, w25
    269c:	bl	1190 <Perl_hv_common_key_len@plt>
    26a0:	ldr	x1, [x0]
    26a4:	cmp	w22, #0x400
    26a8:	b.ne	26b4 <boot_Time__Piece@@Base+0x13e0>  // b.any
    26ac:	ldr	x0, [x1, #16]
    26b0:	b	26c4 <boot_Time__Piece@@Base+0x13f0>
    26b4:	mov	w3, #0x2                   	// #2
    26b8:	mov	x0, x19
    26bc:	mov	x2, xzr
    26c0:	bl	1030 <Perl_sv_2pv_flags@plt>
    26c4:	ldp	x20, x19, [sp, #80]
    26c8:	ldp	x22, x21, [sp, #64]
    26cc:	ldp	x24, x23, [sp, #48]
    26d0:	ldp	x26, x25, [sp, #32]
    26d4:	ldr	x27, [sp, #16]
    26d8:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    26dc:	str	x0, [x8, #664]
    26e0:	ldp	x29, x30, [sp], #96
    26e4:	ret
    26e8:	sub	sp, sp, #0x80
    26ec:	stp	x29, x30, [sp, #32]
    26f0:	stp	x28, x27, [sp, #48]
    26f4:	stp	x26, x25, [sp, #64]
    26f8:	stp	x24, x23, [sp, #80]
    26fc:	stp	x22, x21, [sp, #96]
    2700:	stp	x20, x19, [sp, #112]
    2704:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2708:	ldr	x8, [x8, #4056]
    270c:	add	x29, sp, #0x20
    2710:	mov	x23, x0
    2714:	ldr	x8, [x8]
    2718:	stur	x8, [x29, #-8]
    271c:	ldrb	w27, [x1]
    2720:	cbz	w27, 3118 <boot_Time__Piece@@Base+0x1e44>
    2724:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2728:	mov	x19, x3
    272c:	mov	x20, x2
    2730:	mov	x21, x1
    2734:	add	x26, x26, #0x658
    2738:	mov	x25, x21
    273c:	add	x21, x21, #0x2
    2740:	b	275c <boot_Time__Piece@@Base+0x1488>
    2744:	cmp	w24, w27, uxtb
    2748:	b.ne	3114 <boot_Time__Piece@@Base+0x1e40>  // b.any
    274c:	add	x23, x23, #0x1
    2750:	ldrb	w27, [x25, #1]!
    2754:	add	x21, x21, #0x1
    2758:	cbz	w27, 3118 <boot_Time__Piece@@Base+0x1e44>
    275c:	ldrb	w24, [x23]
    2760:	cbz	x24, 3118 <boot_Time__Piece@@Base+0x1e44>
    2764:	and	w8, w27, #0xff
    2768:	cmp	w8, #0x25
    276c:	b.eq	27a4 <boot_Time__Piece@@Base+0x14d0>  // b.none
    2770:	bl	10e0 <__ctype_b_loc@plt>
    2774:	ldr	x8, [x0]
    2778:	and	x9, x27, #0xff
    277c:	ldrh	w9, [x8, x9, lsl #1]
    2780:	tbz	w9, #13, 2744 <boot_Time__Piece@@Base+0x1470>
    2784:	ldrb	w9, [x23]
    2788:	cbz	w9, 2750 <boot_Time__Piece@@Base+0x147c>
    278c:	and	x9, x9, #0xff
    2790:	ldrh	w9, [x8, x9, lsl #1]
    2794:	tbz	w9, #13, 2750 <boot_Time__Piece@@Base+0x147c>
    2798:	ldrb	w9, [x23, #1]!
    279c:	cbnz	w9, 278c <boot_Time__Piece@@Base+0x14b8>
    27a0:	b	2750 <boot_Time__Piece@@Base+0x147c>
    27a4:	mov	w8, wzr
    27a8:	mov	w27, wzr
    27ac:	ldurb	w25, [x21, #-1]
    27b0:	cmp	w25, #0x7a
    27b4:	b.hi	3020 <boot_Time__Piece@@Base+0x1d4c>  // b.pmore
    27b8:	adr	x9, 27c8 <boot_Time__Piece@@Base+0x14f4>
    27bc:	ldrh	w10, [x26, x25, lsl #1]
    27c0:	add	x9, x9, x10, lsl #2
    27c4:	br	x9
    27c8:	orr	w8, w27, w8
    27cc:	cbnz	w8, 3020 <boot_Time__Piece@@Base+0x1d4c>
    27d0:	mov	w27, wzr
    27d4:	mov	w8, #0x1                   	// #1
    27d8:	add	x21, x21, #0x1
    27dc:	b	27ac <boot_Time__Piece@@Base+0x14d8>
    27e0:	orr	w8, w27, w8
    27e4:	cbnz	w8, 3020 <boot_Time__Piece@@Base+0x1d4c>
    27e8:	mov	w27, #0x1                   	// #1
    27ec:	add	x21, x21, #0x1
    27f0:	b	27ac <boot_Time__Piece@@Base+0x14d8>
    27f4:	bl	10e0 <__ctype_b_loc@plt>
    27f8:	ldr	x10, [x0]
    27fc:	ldrh	w8, [x10, x24, lsl #1]
    2800:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2804:	mov	w9, wzr
    2808:	add	x8, x23, #0x2
    280c:	mov	w22, #0x2                   	// #2
    2810:	ldrb	w11, [x23]
    2814:	cbz	w11, 2908 <boot_Time__Piece@@Base+0x1634>
    2818:	ldrh	w12, [x10, w11, uxtw #1]
    281c:	tbz	w12, #11, 2908 <boot_Time__Piece@@Base+0x1634>
    2820:	mov	w12, #0xa                   	// #10
    2824:	madd	w9, w9, w12, w11
    2828:	subs	x22, x22, #0x1
    282c:	sub	w9, w9, #0x30
    2830:	add	x23, x23, #0x1
    2834:	b.ne	2810 <boot_Time__Piece@@Base+0x153c>  // b.any
    2838:	b	290c <boot_Time__Piece@@Base+0x1638>
    283c:	mov	x28, xzr
    2840:	b	2874 <boot_Time__Piece@@Base+0x15a0>
    2844:	ldr	x24, [x8, x28, lsl #3]
    2848:	mov	x0, x24
    284c:	bl	f90 <strlen@plt>
    2850:	mov	x22, x0
    2854:	mov	x0, x23
    2858:	mov	x1, x24
    285c:	mov	x2, x22
    2860:	bl	1120 <strncasecmp@plt>
    2864:	cbz	w0, 28f4 <boot_Time__Piece@@Base+0x1620>
    2868:	add	x28, x28, #0x1
    286c:	cmp	x28, #0xc
    2870:	b.eq	28f4 <boot_Time__Piece@@Base+0x1620>  // b.none
    2874:	cmp	w25, #0x42
    2878:	cbz	w27, 2894 <boot_Time__Piece@@Base+0x15c0>
    287c:	b.ne	2868 <boot_Time__Piece@@Base+0x1594>  // b.any
    2880:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2884:	add	x8, x8, #0x150
    2888:	add	x8, x8, x28, lsl #3
    288c:	ldr	x24, [x8, #336]
    2890:	b	2848 <boot_Time__Piece@@Base+0x1574>
    2894:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2898:	add	x8, x8, #0x150
    289c:	b.ne	2844 <boot_Time__Piece@@Base+0x1570>  // b.any
    28a0:	add	x8, x8, x28, lsl #3
    28a4:	ldr	x24, [x8, #96]
    28a8:	b	2848 <boot_Time__Piece@@Base+0x1574>
    28ac:	bl	10e0 <__ctype_b_loc@plt>
    28b0:	ldr	x9, [x0]
    28b4:	ldrh	w8, [x9, x24, lsl #1]
    28b8:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    28bc:	mov	w10, wzr
    28c0:	add	x8, x23, #0x2
    28c4:	mov	w22, #0x2                   	// #2
    28c8:	ldrb	w11, [x23]
    28cc:	cbz	x11, 2bbc <boot_Time__Piece@@Base+0x18e8>
    28d0:	ldrh	w12, [x9, x11, lsl #1]
    28d4:	tbz	w12, #11, 2bbc <boot_Time__Piece@@Base+0x18e8>
    28d8:	mov	w12, #0xa                   	// #10
    28dc:	madd	w10, w10, w12, w11
    28e0:	subs	x22, x22, #0x1
    28e4:	sub	w10, w10, #0x30
    28e8:	add	x23, x23, #0x1
    28ec:	b.ne	28c8 <boot_Time__Piece@@Base+0x15f4>  // b.any
    28f0:	b	2bc0 <boot_Time__Piece@@Base+0x18ec>
    28f4:	cmp	w28, #0xc
    28f8:	b.eq	3114 <boot_Time__Piece@@Base+0x1e40>  // b.none
    28fc:	str	w28, [x20, #16]
    2900:	add	x23, x23, x22
    2904:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2908:	mov	x8, x23
    290c:	cmp	w25, #0x6b
    2910:	b.eq	291c <boot_Time__Piece@@Base+0x1648>  // b.none
    2914:	cmp	w25, #0x48
    2918:	b.ne	2c3c <boot_Time__Piece@@Base+0x1968>  // b.any
    291c:	cmp	w9, #0x17
    2920:	b.le	2c44 <boot_Time__Piece@@Base+0x1970>
    2924:	b	3114 <boot_Time__Piece@@Base+0x1e40>
    2928:	cmp	w24, #0x25
    292c:	b.ne	3114 <boot_Time__Piece@@Base+0x1e40>  // b.any
    2930:	add	x23, x23, #0x1
    2934:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2938:	mov	x27, xzr
    293c:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2940:	add	x8, x8, #0x150
    2944:	add	x8, x8, x27, lsl #3
    2948:	cmp	w25, #0x41
    294c:	b.ne	2958 <boot_Time__Piece@@Base+0x1684>  // b.any
    2950:	ldr	x24, [x8, #248]
    2954:	b	295c <boot_Time__Piece@@Base+0x1688>
    2958:	ldr	x24, [x8, #192]
    295c:	mov	x0, x24
    2960:	bl	f90 <strlen@plt>
    2964:	mov	x22, x0
    2968:	mov	x0, x23
    296c:	mov	x1, x24
    2970:	mov	x2, x22
    2974:	bl	1120 <strncasecmp@plt>
    2978:	cbz	w0, 2988 <boot_Time__Piece@@Base+0x16b4>
    297c:	add	x27, x27, #0x1
    2980:	cmp	x27, #0x7
    2984:	b.ne	293c <boot_Time__Piece@@Base+0x1668>  // b.any
    2988:	cmp	w27, #0x7
    298c:	b.eq	3114 <boot_Time__Piece@@Base+0x1e40>  // b.none
    2990:	str	w27, [x20, #24]
    2994:	add	x23, x23, x22
    2998:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    299c:	bl	10e0 <__ctype_b_loc@plt>
    29a0:	ldr	x10, [x0]
    29a4:	ldrh	w8, [x10, x24, lsl #1]
    29a8:	tbnz	w8, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    29ac:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    29b0:	mov	w9, wzr
    29b4:	add	x8, x23, #0x2
    29b8:	mov	w22, #0x2                   	// #2
    29bc:	ldrb	w11, [x23]
    29c0:	cbz	w11, 2eb4 <boot_Time__Piece@@Base+0x1be0>
    29c4:	ldrh	w12, [x10, w11, uxtw #1]
    29c8:	tbz	w12, #11, 2eb4 <boot_Time__Piece@@Base+0x1be0>
    29cc:	mov	w12, #0xa                   	// #10
    29d0:	madd	w9, w9, w12, w11
    29d4:	subs	x22, x22, #0x1
    29d8:	sub	w9, w9, #0x30
    29dc:	add	x23, x23, #0x1
    29e0:	b.ne	29bc <boot_Time__Piece@@Base+0x16e8>  // b.any
    29e4:	b	2eb8 <boot_Time__Piece@@Base+0x1be4>
    29e8:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    29ec:	ldr	x24, [x8, #640]
    29f0:	mov	x0, x24
    29f4:	bl	f90 <strlen@plt>
    29f8:	mov	x22, x0
    29fc:	mov	x0, x23
    2a00:	mov	x1, x24
    2a04:	mov	x2, x22
    2a08:	bl	1120 <strncasecmp@plt>
    2a0c:	cbz	w0, 2c7c <boot_Time__Piece@@Base+0x19a8>
    2a10:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2a14:	ldr	x1, [x8, #656]
    2a18:	mov	x0, x23
    2a1c:	mov	x2, x22
    2a20:	bl	1120 <strncasecmp@plt>
    2a24:	cbz	w0, 2c7c <boot_Time__Piece@@Base+0x19a8>
    2a28:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2a2c:	ldr	x24, [x8, #648]
    2a30:	mov	x0, x24
    2a34:	bl	f90 <strlen@plt>
    2a38:	mov	x22, x0
    2a3c:	mov	x0, x23
    2a40:	mov	x1, x24
    2a44:	mov	x2, x22
    2a48:	bl	1120 <strncasecmp@plt>
    2a4c:	cbz	w0, 2a68 <boot_Time__Piece@@Base+0x1794>
    2a50:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2a54:	ldr	x1, [x8, #664]
    2a58:	mov	x0, x23
    2a5c:	mov	x2, x22
    2a60:	bl	1120 <strncasecmp@plt>
    2a64:	cbnz	w0, 3114 <boot_Time__Piece@@Base+0x1e40>
    2a68:	ldr	w8, [x20, #8]
    2a6c:	cmp	w8, #0xc
    2a70:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2a74:	b.eq	2c90 <boot_Time__Piece@@Base+0x19bc>  // b.none
    2a78:	add	w8, w8, #0xc
    2a7c:	str	w8, [x20, #8]
    2a80:	b	2c90 <boot_Time__Piece@@Base+0x19bc>
    2a84:	bl	10e0 <__ctype_b_loc@plt>
    2a88:	ldr	x10, [x0]
    2a8c:	ldrh	w8, [x10, x24, lsl #1]
    2a90:	tbnz	w8, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2a94:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2a98:	cmp	w25, #0x59
    2a9c:	mov	w8, #0x2                   	// #2
    2aa0:	mov	w11, #0x4                   	// #4
    2aa4:	csel	x22, x11, x8, eq  // eq = none
    2aa8:	mov	w9, wzr
    2aac:	add	x8, x23, x22
    2ab0:	ldrb	w11, [x23]
    2ab4:	cbz	w11, 2ed0 <boot_Time__Piece@@Base+0x1bfc>
    2ab8:	ldrh	w12, [x10, w11, uxtw #1]
    2abc:	tbz	w12, #11, 2ed0 <boot_Time__Piece@@Base+0x1bfc>
    2ac0:	mov	w12, #0xa                   	// #10
    2ac4:	madd	w9, w9, w12, w11
    2ac8:	subs	x22, x22, #0x1
    2acc:	sub	w9, w9, #0x30
    2ad0:	add	x23, x23, #0x1
    2ad4:	b.ne	2ab0 <boot_Time__Piece@@Base+0x17dc>  // b.any
    2ad8:	b	2ed4 <boot_Time__Piece@@Base+0x1c00>
    2adc:	bl	10e0 <__ctype_b_loc@plt>
    2ae0:	ldr	x10, [x0]
    2ae4:	ldrh	w8, [x10, x24, lsl #1]
    2ae8:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2aec:	mov	w9, wzr
    2af0:	add	x8, x23, #0x2
    2af4:	mov	w22, #0x2                   	// #2
    2af8:	ldrb	w11, [x23]
    2afc:	cbz	x11, 2bf8 <boot_Time__Piece@@Base+0x1924>
    2b00:	ldrh	w12, [x10, x11, lsl #1]
    2b04:	tbz	w12, #11, 2bf8 <boot_Time__Piece@@Base+0x1924>
    2b08:	mov	w12, #0xa                   	// #10
    2b0c:	madd	w9, w9, w12, w11
    2b10:	subs	x22, x22, #0x1
    2b14:	sub	w9, w9, #0x30
    2b18:	add	x23, x23, #0x1
    2b1c:	b.ne	2af8 <boot_Time__Piece@@Base+0x1824>  // b.any
    2b20:	b	2bfc <boot_Time__Piece@@Base+0x1928>
    2b24:	bl	10e0 <__ctype_b_loc@plt>
    2b28:	ldr	x8, [x0]
    2b2c:	ldrh	w9, [x8, x24, lsl #1]
    2b30:	tbz	w9, #13, 3114 <boot_Time__Piece@@Base+0x1e40>
    2b34:	sub	x23, x23, #0x1
    2b38:	ldrb	w9, [x23, #1]!
    2b3c:	ldrh	w9, [x8, x9, lsl #1]
    2b40:	tbnz	w9, #13, 2b38 <boot_Time__Piece@@Base+0x1864>
    2b44:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2b48:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2b4c:	add	x1, x1, #0x95b
    2b50:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2b54:	bl	10e0 <__ctype_b_loc@plt>
    2b58:	ldr	x8, [x0]
    2b5c:	ldrh	w8, [x8, x24, lsl #1]
    2b60:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2b64:	cmp	w25, #0x75
    2b68:	mov	w9, #0x6                   	// #6
    2b6c:	sub	w8, w24, #0x30
    2b70:	cinc	w9, w9, eq  // eq = none
    2b74:	cmp	w8, w9
    2b78:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2b7c:	cmp	w8, #0x7
    2b80:	csel	w8, wzr, w8, eq  // eq = none
    2b84:	str	w8, [x20, #24]
    2b88:	ldrb	w9, [x23, #1]!
    2b8c:	cbz	x9, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2b90:	ldr	x8, [x0]
    2b94:	ldrh	w9, [x8, x9, lsl #1]
    2b98:	tbz	w9, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2b9c:	ldrb	w9, [x21]
    2ba0:	cbz	w9, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2ba4:	and	x9, x9, #0xff
    2ba8:	ldrh	w9, [x8, x9, lsl #1]
    2bac:	tbnz	w9, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2bb0:	ldrb	w9, [x21, #1]!
    2bb4:	cbnz	w9, 2ba4 <boot_Time__Piece@@Base+0x18d0>
    2bb8:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2bbc:	mov	x8, x23
    2bc0:	cmp	w10, #0x35
    2bc4:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2bc8:	ldrb	w10, [x8]
    2bcc:	cbz	x10, 301c <boot_Time__Piece@@Base+0x1d48>
    2bd0:	ldrh	w10, [x9, x10, lsl #1]
    2bd4:	tbz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2bd8:	ldrb	w10, [x21]
    2bdc:	cbz	w10, 301c <boot_Time__Piece@@Base+0x1d48>
    2be0:	and	x10, x10, #0xff
    2be4:	ldrh	w10, [x9, x10, lsl #1]
    2be8:	tbnz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2bec:	ldrb	w10, [x21, #1]!
    2bf0:	cbnz	w10, 2be0 <boot_Time__Piece@@Base+0x190c>
    2bf4:	b	301c <boot_Time__Piece@@Base+0x1d48>
    2bf8:	mov	x8, x23
    2bfc:	cmp	w9, #0x1f
    2c00:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2c04:	str	w9, [x20, #12]
    2c08:	ldrb	w10, [x8]
    2c0c:	cbz	x10, 301c <boot_Time__Piece@@Base+0x1d48>
    2c10:	ldr	x9, [x0]
    2c14:	ldrh	w10, [x9, x10, lsl #1]
    2c18:	tbz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2c1c:	ldrb	w10, [x21]
    2c20:	cbz	w10, 301c <boot_Time__Piece@@Base+0x1d48>
    2c24:	and	x10, x10, #0xff
    2c28:	ldrh	w10, [x9, x10, lsl #1]
    2c2c:	tbnz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2c30:	ldrb	w10, [x21, #1]!
    2c34:	cbnz	w10, 2c24 <boot_Time__Piece@@Base+0x1950>
    2c38:	b	301c <boot_Time__Piece@@Base+0x1d48>
    2c3c:	cmp	w9, #0xc
    2c40:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2c44:	str	w9, [x20, #8]
    2c48:	ldrb	w10, [x8]
    2c4c:	cbz	x10, 301c <boot_Time__Piece@@Base+0x1d48>
    2c50:	ldr	x9, [x0]
    2c54:	ldrh	w10, [x9, x10, lsl #1]
    2c58:	tbz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2c5c:	ldrb	w10, [x21]
    2c60:	cbz	w10, 301c <boot_Time__Piece@@Base+0x1d48>
    2c64:	and	x10, x10, #0xff
    2c68:	ldrh	w10, [x9, x10, lsl #1]
    2c6c:	tbnz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2c70:	ldrb	w10, [x21, #1]!
    2c74:	cbnz	w10, 2c64 <boot_Time__Piece@@Base+0x1990>
    2c78:	b	301c <boot_Time__Piece@@Base+0x1d48>
    2c7c:	ldr	w8, [x20, #8]
    2c80:	cmp	w8, #0xc
    2c84:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2c88:	b.ne	2c90 <boot_Time__Piece@@Base+0x19bc>  // b.any
    2c8c:	str	wzr, [x20, #8]
    2c90:	add	x23, x23, x22
    2c94:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2c98:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2c9c:	add	x1, x1, #0x925
    2ca0:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2ca4:	bl	10e0 <__ctype_b_loc@plt>
    2ca8:	ldr	x10, [x0]
    2cac:	ldrh	w8, [x10, x24, lsl #1]
    2cb0:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2cb4:	mov	w8, wzr
    2cb8:	add	x9, x23, #0x2
    2cbc:	mov	w22, #0x2                   	// #2
    2cc0:	ldrb	w11, [x23]
    2cc4:	cbz	x11, 2f30 <boot_Time__Piece@@Base+0x1c5c>
    2cc8:	ldrh	w12, [x10, x11, lsl #1]
    2ccc:	tbz	w12, #11, 2f30 <boot_Time__Piece@@Base+0x1c5c>
    2cd0:	mov	w12, #0xa                   	// #10
    2cd4:	madd	w8, w8, w12, w11
    2cd8:	subs	x22, x22, #0x1
    2cdc:	sub	w8, w8, #0x30
    2ce0:	add	x23, x23, #0x1
    2ce4:	b.ne	2cc0 <boot_Time__Piece@@Base+0x19ec>  // b.any
    2ce8:	b	2f34 <boot_Time__Piece@@Base+0x1c60>
    2cec:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2cf0:	add	x1, x1, #0x943
    2cf4:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2cf8:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2cfc:	add	x1, x1, #0x94c
    2d00:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2d04:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2d08:	add	x1, x1, #0x955
    2d0c:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2d10:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2d14:	add	x1, x1, #0x967
    2d18:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2d1c:	ldrb	w24, [x23]
    2d20:	mov	x27, x23
    2d24:	cbz	w24, 2d48 <boot_Time__Piece@@Base+0x1a74>
    2d28:	bl	10e0 <__ctype_b_loc@plt>
    2d2c:	ldr	x8, [x0]
    2d30:	mov	x27, x23
    2d34:	and	x9, x24, #0xff
    2d38:	ldrh	w9, [x8, x9, lsl #1]
    2d3c:	tbz	w9, #8, 2d48 <boot_Time__Piece@@Base+0x1a74>
    2d40:	ldrb	w24, [x27, #1]!
    2d44:	cbnz	w24, 2d34 <boot_Time__Piece@@Base+0x1a60>
    2d48:	subs	x25, x27, x23
    2d4c:	b.eq	302c <boot_Time__Piece@@Base+0x1d58>  // b.none
    2d50:	add	x0, x25, #0x1
    2d54:	bl	1010 <malloc@plt>
    2d58:	cbz	x0, 3100 <boot_Time__Piece@@Base+0x1e2c>
    2d5c:	mov	x1, x23
    2d60:	mov	x2, x25
    2d64:	mov	x24, x0
    2d68:	bl	11c0 <strncpy@plt>
    2d6c:	strb	wzr, [x0, x25]
    2d70:	bl	216c <boot_Time__Piece@@Base+0xe98>
    2d74:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2d78:	add	x1, x1, #0x97c
    2d7c:	mov	x0, x24
    2d80:	bl	10d0 <strcmp@plt>
    2d84:	cbnz	w0, 2d90 <boot_Time__Piece@@Base+0x1abc>
    2d88:	mov	w8, #0x1                   	// #1
    2d8c:	str	w8, [x19]
    2d90:	mov	x0, x24
    2d94:	bl	1110 <free@plt>
    2d98:	ldr	w8, [x19]
    2d9c:	cbnz	w8, 3030 <boot_Time__Piece@@Base+0x1d5c>
    2da0:	b	3110 <boot_Time__Piece@@Base+0x1e3c>
    2da4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2da8:	add	x1, x1, #0x928
    2dac:	b	2e80 <boot_Time__Piece@@Base+0x1bac>
    2db0:	bl	10e0 <__ctype_b_loc@plt>
    2db4:	ldr	x10, [x0]
    2db8:	ldrh	w8, [x10, x24, lsl #1]
    2dbc:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2dc0:	mov	w9, wzr
    2dc4:	add	x8, x23, #0x3
    2dc8:	mov	w22, #0x3                   	// #3
    2dcc:	ldrb	w11, [x23]
    2dd0:	cbz	x11, 2f54 <boot_Time__Piece@@Base+0x1c80>
    2dd4:	ldrh	w12, [x10, x11, lsl #1]
    2dd8:	tbz	w12, #11, 2f54 <boot_Time__Piece@@Base+0x1c80>
    2ddc:	mov	w12, #0xa                   	// #10
    2de0:	madd	w9, w9, w12, w11
    2de4:	subs	x22, x22, #0x1
    2de8:	sub	w9, w9, #0x30
    2dec:	add	x23, x23, #0x1
    2df0:	b.ne	2dcc <boot_Time__Piece@@Base+0x1af8>  // b.any
    2df4:	b	2f58 <boot_Time__Piece@@Base+0x1c84>
    2df8:	bl	10e0 <__ctype_b_loc@plt>
    2dfc:	ldr	x10, [x0]
    2e00:	ldrh	w8, [x10, x24, lsl #1]
    2e04:	tbz	w8, #11, 3114 <boot_Time__Piece@@Base+0x1e40>
    2e08:	mov	w9, wzr
    2e0c:	add	x8, x23, #0x2
    2e10:	mov	w22, #0x2                   	// #2
    2e14:	ldrb	w11, [x23]
    2e18:	cbz	x11, 2f74 <boot_Time__Piece@@Base+0x1ca0>
    2e1c:	ldrh	w12, [x10, x11, lsl #1]
    2e20:	tbz	w12, #11, 2f74 <boot_Time__Piece@@Base+0x1ca0>
    2e24:	mov	w12, #0xa                   	// #10
    2e28:	madd	w9, w9, w12, w11
    2e2c:	subs	x22, x22, #0x1
    2e30:	sub	w9, w9, #0x30
    2e34:	add	x23, x23, #0x1
    2e38:	b.ne	2e14 <boot_Time__Piece@@Base+0x1b40>  // b.any
    2e3c:	b	2f78 <boot_Time__Piece@@Base+0x1ca4>
    2e40:	bl	11e0 <__errno_location@plt>
    2e44:	ldr	w25, [x0]
    2e48:	mov	x24, x0
    2e4c:	str	wzr, [x0]
    2e50:	add	x1, sp, #0x10
    2e54:	mov	w2, #0xa                   	// #10
    2e58:	mov	x0, x23
    2e5c:	bl	10f0 <strtol@plt>
    2e60:	ldr	w8, [x24]
    2e64:	cmp	w8, #0x22
    2e68:	b.ne	2fbc <boot_Time__Piece@@Base+0x1ce8>  // b.any
    2e6c:	mov	w8, wzr
    2e70:	str	w25, [x24]
    2e74:	b	3110 <boot_Time__Piece@@Base+0x1e3c>
    2e78:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2e7c:	add	x1, x1, #0x970
    2e80:	mov	x0, x23
    2e84:	mov	x2, x20
    2e88:	mov	x3, x19
    2e8c:	bl	26e8 <boot_Time__Piece@@Base+0x1414>
    2e90:	mov	x23, x0
    2e94:	cbnz	x0, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2e98:	b	3118 <boot_Time__Piece@@Base+0x1e44>
    2e9c:	cmp	w24, #0x2b
    2ea0:	b.eq	303c <boot_Time__Piece@@Base+0x1d68>  // b.none
    2ea4:	cmp	w24, #0x2d
    2ea8:	b.ne	30d8 <boot_Time__Piece@@Base+0x1e04>  // b.any
    2eac:	mov	w24, #0xffffffff            	// #-1
    2eb0:	b	3040 <boot_Time__Piece@@Base+0x1d6c>
    2eb4:	mov	x8, x23
    2eb8:	cmp	w25, #0x4d
    2ebc:	b.ne	2fe0 <boot_Time__Piece@@Base+0x1d0c>  // b.any
    2ec0:	cmp	w9, #0x3b
    2ec4:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2ec8:	str	w9, [x20, #4]
    2ecc:	b	2fec <boot_Time__Piece@@Base+0x1d18>
    2ed0:	mov	x8, x23
    2ed4:	sub	w10, w9, #0x76c
    2ed8:	cmp	w25, #0x59
    2edc:	csel	w9, w10, w9, eq  // eq = none
    2ee0:	mov	w11, #0x79                  	// #121
    2ee4:	cmp	w9, #0x45
    2ee8:	ccmp	w25, w11, #0x0, lt  // lt = tstop
    2eec:	add	w10, w9, #0x64
    2ef0:	csel	w9, w10, w9, eq  // eq = none
    2ef4:	tbnz	w9, #31, 3114 <boot_Time__Piece@@Base+0x1e40>
    2ef8:	str	w9, [x20, #20]
    2efc:	ldrb	w10, [x8]
    2f00:	cbz	x10, 301c <boot_Time__Piece@@Base+0x1d48>
    2f04:	ldr	x9, [x0]
    2f08:	ldrh	w10, [x9, x10, lsl #1]
    2f0c:	tbz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2f10:	ldrb	w10, [x21]
    2f14:	cbz	w10, 301c <boot_Time__Piece@@Base+0x1d48>
    2f18:	and	x10, x10, #0xff
    2f1c:	ldrh	w10, [x9, x10, lsl #1]
    2f20:	tbnz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2f24:	ldrb	w10, [x21, #1]!
    2f28:	cbnz	w10, 2f18 <boot_Time__Piece@@Base+0x1c44>
    2f2c:	b	301c <boot_Time__Piece@@Base+0x1d48>
    2f30:	mov	x9, x23
    2f34:	cmp	w8, #0x13
    2f38:	b.lt	3114 <boot_Time__Piece@@Base+0x1e40>  // b.tstop
    2f3c:	mov	w10, #0x64                  	// #100
    2f40:	mul	w8, w8, w10
    2f44:	sub	w8, w8, #0x76c
    2f48:	mov	x23, x9
    2f4c:	str	w8, [x20, #20]
    2f50:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2f54:	mov	x8, x23
    2f58:	sub	w9, w9, #0x1
    2f5c:	cmp	w9, #0x16d
    2f60:	b.hi	3114 <boot_Time__Piece@@Base+0x1e40>  // b.pmore
    2f64:	str	w9, [x20, #28]
    2f68:	str	wzr, [x20, #12]
    2f6c:	mov	x23, x8
    2f70:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2f74:	mov	x8, x23
    2f78:	sub	w9, w9, #0x1
    2f7c:	cmp	w9, #0xb
    2f80:	b.hi	3114 <boot_Time__Piece@@Base+0x1e40>  // b.pmore
    2f84:	str	w9, [x20, #16]
    2f88:	ldrb	w10, [x8]
    2f8c:	cbz	x10, 301c <boot_Time__Piece@@Base+0x1d48>
    2f90:	ldr	x9, [x0]
    2f94:	ldrh	w10, [x9, x10, lsl #1]
    2f98:	tbz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2f9c:	ldrb	w10, [x21]
    2fa0:	cbz	w10, 301c <boot_Time__Piece@@Base+0x1d48>
    2fa4:	and	x10, x10, #0xff
    2fa8:	ldrh	w10, [x9, x10, lsl #1]
    2fac:	tbnz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    2fb0:	ldrb	w10, [x21, #1]!
    2fb4:	cbnz	w10, 2fa4 <boot_Time__Piece@@Base+0x1cd0>
    2fb8:	b	301c <boot_Time__Piece@@Base+0x1d48>
    2fbc:	str	x0, [sp, #8]
    2fc0:	str	w25, [x24]
    2fc4:	ldr	w8, [x19]
    2fc8:	ldr	x23, [sp, #16]
    2fcc:	add	x0, sp, #0x8
    2fd0:	cmp	w8, #0x1
    2fd4:	b.ne	30e4 <boot_Time__Piece@@Base+0x1e10>  // b.any
    2fd8:	bl	1000 <localtime@plt>
    2fdc:	b	30e8 <boot_Time__Piece@@Base+0x1e14>
    2fe0:	cmp	w9, #0x3c
    2fe4:	b.gt	3114 <boot_Time__Piece@@Base+0x1e40>
    2fe8:	str	w9, [x20]
    2fec:	ldrb	w10, [x8]
    2ff0:	cbz	x10, 301c <boot_Time__Piece@@Base+0x1d48>
    2ff4:	ldr	x9, [x0]
    2ff8:	ldrh	w10, [x9, x10, lsl #1]
    2ffc:	tbz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    3000:	ldrb	w10, [x21]
    3004:	cbz	w10, 301c <boot_Time__Piece@@Base+0x1d48>
    3008:	and	x10, x10, #0xff
    300c:	ldrh	w10, [x9, x10, lsl #1]
    3010:	tbnz	w10, #13, 301c <boot_Time__Piece@@Base+0x1d48>
    3014:	ldrb	w10, [x21, #1]!
    3018:	cbnz	w10, 3008 <boot_Time__Piece@@Base+0x1d34>
    301c:	mov	x23, x8
    3020:	ldrb	w27, [x21]
    3024:	cbnz	w27, 2738 <boot_Time__Piece@@Base+0x1464>
    3028:	b	3118 <boot_Time__Piece@@Base+0x1e44>
    302c:	mov	x27, x23
    3030:	mov	w8, #0x1                   	// #1
    3034:	mov	x23, x27
    3038:	b	3110 <boot_Time__Piece@@Base+0x1e3c>
    303c:	mov	w24, #0x1                   	// #1
    3040:	bl	10e0 <__ctype_b_loc@plt>
    3044:	ldr	x11, [x0]
    3048:	mov	x10, xzr
    304c:	mov	w9, wzr
    3050:	add	x8, x23, #0x5
    3054:	add	x12, x23, #0x1
    3058:	ldrb	w13, [x12, x10]
    305c:	ldrh	w14, [x11, x13, lsl #1]
    3060:	tbz	w14, #11, 30c0 <boot_Time__Piece@@Base+0x1dec>
    3064:	mov	w14, #0xa                   	// #10
    3068:	add	x10, x10, #0x1
    306c:	madd	w9, w9, w14, w13
    3070:	cmp	x10, #0x4
    3074:	sub	w9, w9, #0x30
    3078:	b.ne	3058 <boot_Time__Piece@@Base+0x1d84>  // b.any
    307c:	mov	w10, #0x851f                	// #34079
    3080:	movk	w10, #0x51eb, lsl #16
    3084:	ldp	w12, w11, [x20, #4]
    3088:	smull	x10, w9, w10
    308c:	lsr	x13, x10, #63
    3090:	asr	x10, x10, #37
    3094:	add	w10, w10, w13
    3098:	mov	w13, #0x64                  	// #100
    309c:	msub	w9, w10, w13, w9
    30a0:	msub	w10, w10, w24, w11
    30a4:	msub	w11, w9, w24, w12
    30a8:	mov	w9, #0x1                   	// #1
    30ac:	mov	x22, xzr
    30b0:	stp	w11, w10, [x20, #4]
    30b4:	str	w9, [x19]
    30b8:	mov	x23, x8
    30bc:	b	30dc <boot_Time__Piece@@Base+0x1e08>
    30c0:	add	x8, x23, x10
    30c4:	mov	w11, #0x4                   	// #4
    30c8:	mov	w9, wzr
    30cc:	add	x23, x8, #0x1
    30d0:	sub	x22, x11, x10
    30d4:	b	30dc <boot_Time__Piece@@Base+0x1e08>
    30d8:	mov	w9, wzr
    30dc:	cbnz	w9, 3020 <boot_Time__Piece@@Base+0x1d4c>
    30e0:	b	3114 <boot_Time__Piece@@Base+0x1e40>
    30e4:	bl	1060 <gmtime@plt>
    30e8:	ldr	w8, [x0, #32]
    30ec:	ldp	q0, q1, [x0]
    30f0:	str	w8, [x20, #32]
    30f4:	mov	w8, #0x1                   	// #1
    30f8:	stp	q0, q1, [x20]
    30fc:	b	3110 <boot_Time__Piece@@Base+0x1e3c>
    3100:	bl	11e0 <__errno_location@plt>
    3104:	mov	w9, #0xc                   	// #12
    3108:	mov	w8, wzr
    310c:	str	w9, [x0]
    3110:	tbnz	w8, #0, 3020 <boot_Time__Piece@@Base+0x1d4c>
    3114:	mov	x23, xzr
    3118:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    311c:	ldur	x8, [x29, #-8]
    3120:	ldr	x9, [x9, #4056]
    3124:	ldr	x9, [x9]
    3128:	cmp	x9, x8
    312c:	b.ne	3154 <boot_Time__Piece@@Base+0x1e80>  // b.any
    3130:	mov	x0, x23
    3134:	ldp	x20, x19, [sp, #112]
    3138:	ldp	x22, x21, [sp, #96]
    313c:	ldp	x24, x23, [sp, #80]
    3140:	ldp	x26, x25, [sp, #64]
    3144:	ldp	x28, x27, [sp, #48]
    3148:	ldp	x29, x30, [sp, #32]
    314c:	add	sp, sp, #0x80
    3150:	ret
    3154:	bl	1070 <__stack_chk_fail@plt>
    3158:	stp	x29, x30, [sp, #-48]!
    315c:	stp	x20, x19, [sp, #32]
    3160:	mov	x19, x0
    3164:	mov	x0, x2
    3168:	str	x21, [sp, #16]
    316c:	mov	x29, sp
    3170:	mov	x20, x2
    3174:	mov	x21, x1
    3178:	bl	3210 <boot_Time__Piece@@Base+0x1f3c>
    317c:	ldr	x8, [x19, #32]
    3180:	sub	x8, x8, x21
    3184:	cmp	x8, #0x57
    3188:	b.le	31f4 <boot_Time__Piece@@Base+0x1f20>
    318c:	mov	x0, x19
    3190:	mov	x1, x21
    3194:	mov	x2, x20
    3198:	bl	358c <boot_Time__Piece@@Base+0x22b8>
    319c:	mov	x20, x0
    31a0:	mov	x0, x19
    31a4:	mov	x1, xzr
    31a8:	bl	11d0 <Perl_newSViv@plt>
    31ac:	str	x0, [x20, #8]
    31b0:	mov	x0, x19
    31b4:	mov	x1, xzr
    31b8:	bl	11d0 <Perl_newSViv@plt>
    31bc:	str	x0, [x20, #16]!
    31c0:	mov	x21, xzr
    31c4:	str	x20, [x19]
    31c8:	sub	x20, x20, #0x50
    31cc:	ldr	x1, [x20, x21]
    31d0:	mov	x0, x19
    31d4:	bl	1140 <Perl_sv_2mortal@plt>
    31d8:	add	x21, x21, #0x8
    31dc:	cmp	x21, #0x58
    31e0:	b.ne	31cc <boot_Time__Piece@@Base+0x1ef8>  // b.any
    31e4:	ldp	x20, x19, [sp, #32]
    31e8:	ldr	x21, [sp, #16]
    31ec:	ldp	x29, x30, [sp], #48
    31f0:	ret
    31f4:	mov	w3, #0xb                   	// #11
    31f8:	mov	x0, x19
    31fc:	mov	x1, x21
    3200:	mov	x2, x21
    3204:	bl	fb0 <Perl_stack_grow@plt>
    3208:	mov	x21, x0
    320c:	b	318c <boot_Time__Piece@@Base+0x1eb8>
    3210:	ldr	w10, [x0, #28]
    3214:	ldr	w12, [x0, #12]
    3218:	ldp	w11, w8, [x0, #16]
    321c:	mov	w13, #0xe                   	// #14
    3220:	cmp	w10, #0x0
    3224:	cset	w14, ge  // ge = tcont
    3228:	cmp	w12, #0x1
    322c:	cset	w15, lt  // lt = tstop
    3230:	cmp	w11, #0x1
    3234:	and	w14, w15, w14
    3238:	cset	w15, lt  // lt = tstop
    323c:	tst	w15, w14
    3240:	csel	w11, wzr, w11, ne  // ne = any
    3244:	mov	w15, #0x76b                 	// #1899
    3248:	csinc	w10, w12, w10, eq  // eq = none
    324c:	cmp	w11, #0x1
    3250:	mov	w14, #0x2                   	// #2
    3254:	mov	w12, #0x7ae1                	// #31457
    3258:	cinc	w15, w15, gt
    325c:	movk	w12, #0xae14, lsl #16
    3260:	csel	w13, w14, w13, gt
    3264:	mov	w14, #0x851f                	// #34079
    3268:	add	w15, w15, w8
    326c:	movk	w14, #0x51eb, lsl #16
    3270:	add	w11, w13, w11
    3274:	mov	w13, #0x99                  	// #153
    3278:	smull	x12, w15, w12
    327c:	mul	w11, w11, w13
    3280:	smull	x13, w15, w14
    3284:	lsr	x14, x12, #63
    3288:	asr	x12, x12, #37
    328c:	mov	w16, #0x6667                	// #26215
    3290:	add	w12, w12, w14
    3294:	lsr	x14, x13, #63
    3298:	asr	x13, x13, #39
    329c:	movk	w16, #0x6666, lsl #16
    32a0:	add	w13, w13, w14
    32a4:	add	w14, w15, #0x3
    32a8:	cmp	w15, #0x0
    32ac:	smull	x11, w11, w16
    32b0:	csel	w14, w14, w15, lt  // lt = tstop
    32b4:	ldr	w8, [x0]
    32b8:	add	w14, w10, w14, asr #2
    32bc:	lsr	x10, x11, #63
    32c0:	asr	x11, x11, #33
    32c4:	add	w10, w11, w10
    32c8:	mov	w11, #0x16d                 	// #365
    32cc:	madd	w11, w15, w11, w14
    32d0:	add	w11, w11, w12
    32d4:	mov	w9, wzr
    32d8:	cmp	w8, #0x3d
    32dc:	add	w11, w11, w13
    32e0:	b.cc	32ec <boot_Time__Piece@@Base+0x2018>  // b.lo, b.ul, b.last
    32e4:	mov	w9, w8
    32e8:	str	wzr, [x0]
    32ec:	add	w8, w11, w10
    32f0:	ldp	w12, w10, [x0, #4]
    32f4:	mov	w11, #0x3c                  	// #60
    32f8:	madd	w9, w12, w11, w9
    32fc:	mov	w11, #0xe10                 	// #3600
    3300:	madd	w10, w10, w11, w9
    3304:	mov	w9, #0x5180                	// #20864
    3308:	movk	w9, #0x1, lsl #16
    330c:	tbnz	w10, #31, 332c <boot_Time__Piece@@Base+0x2058>
    3310:	sub	w11, w9, #0x1
    3314:	cmp	w10, w11
    3318:	b.le	3348 <boot_Time__Piece@@Base+0x2074>
    331c:	sdiv	w11, w10, w9
    3320:	add	w8, w11, w8
    3324:	msub	w9, w11, w9, w10
    3328:	b	335c <boot_Time__Piece@@Base+0x2088>
    332c:	mov	w11, #0xae80                	// #44672
    3330:	movk	w11, #0xfffe, lsl #16
    3334:	sdiv	w12, w10, w9
    3338:	madd	w9, w12, w11, w10
    333c:	tbnz	w9, #31, 3350 <boot_Time__Piece@@Base+0x207c>
    3340:	add	w8, w12, w8
    3344:	b	335c <boot_Time__Piece@@Base+0x2088>
    3348:	mov	w9, w10
    334c:	b	335c <boot_Time__Piece@@Base+0x2088>
    3350:	sub	w9, w12, #0x1
    3354:	add	w8, w9, w8
    3358:	madd	w9, w9, w11, w10
    335c:	mov	w15, #0x6bd                 	// #1725
    3360:	sub	w10, w8, #0x7b
    3364:	movk	w15, #0x396b, lsl #16
    3368:	mov	w11, #0xb3c5                	// #46021
    336c:	smull	x15, w10, w15
    3370:	movk	w11, #0x91a2, lsl #16
    3374:	lsr	x16, x15, #32
    3378:	lsr	x15, x15, #63
    337c:	add	w15, w15, w16, asr #15
    3380:	mov	w16, #0x3ab1                	// #15025
    3384:	smull	x11, w9, w11
    3388:	movk	w16, #0x2, lsl #16
    338c:	lsr	x11, x11, #32
    3390:	msub	w10, w15, w16, w10
    3394:	mov	w16, #0x190                 	// #400
    3398:	add	w11, w11, w9
    339c:	mul	w15, w15, w16
    33a0:	asr	w16, w11, #11
    33a4:	add	w11, w16, w11, lsr #31
    33a8:	mov	w16, #0x81fb                	// #33275
    33ac:	movk	w16, #0xe5ac, lsl #16
    33b0:	mov	w12, #0xe10                 	// #3600
    33b4:	mov	w13, #0x8889                	// #34953
    33b8:	smull	x16, w10, w16
    33bc:	movk	w13, #0x8888, lsl #16
    33c0:	msub	w9, w11, w12, w9
    33c4:	lsr	x12, x16, #32
    33c8:	add	w12, w12, w10
    33cc:	smull	x13, w9, w13
    33d0:	asr	w16, w12, #15
    33d4:	lsr	x13, x13, #32
    33d8:	add	w16, w16, w12, lsr #31
    33dc:	mov	w12, #0x64                  	// #100
    33e0:	add	w13, w13, w9
    33e4:	madd	w15, w16, w12, w15
    33e8:	asr	w12, w13, #5
    33ec:	add	w13, w12, w13, lsr #31
    33f0:	ldr	w17, [x0]
    33f4:	mov	w14, #0x3c                  	// #60
    33f8:	mov	w12, #0x8eac                	// #36524
    33fc:	stp	w13, w11, [x0, #4]
    3400:	mov	w11, #0xb073                	// #45171
    3404:	msub	w9, w13, w14, w9
    3408:	movk	w11, #0x166d, lsl #16
    340c:	msub	w13, w16, w12, w10
    3410:	smull	x11, w13, w11
    3414:	add	w9, w17, w9
    3418:	lsr	x14, x11, #32
    341c:	lsr	x11, x11, #63
    3420:	add	w11, w11, w14, asr #7
    3424:	str	w9, [x0]
    3428:	mov	w9, #0x5b5                 	// #1461
    342c:	msub	w13, w11, w9, w13
    3430:	mov	w9, #0xf9b1                	// #63921
    3434:	movk	w9, #0xb38c, lsl #16
    3438:	smull	x9, w13, w9
    343c:	lsr	x9, x9, #32
    3440:	add	w9, w9, w13
    3444:	asr	w14, w9, #8
    3448:	add	w11, w15, w11, lsl #2
    344c:	add	w9, w14, w9, lsr #31
    3450:	mov	w14, #0x16d                 	// #365
    3454:	msub	w14, w9, w14, w13
    3458:	add	w9, w11, w9
    345c:	cbnz	w14, 3488 <boot_Time__Piece@@Base+0x21b4>
    3460:	mov	w11, #0xc550                	// #50512
    3464:	movk	w11, #0xfffd, lsl #16
    3468:	add	w10, w10, w11
    346c:	mov	w11, #0x1d                  	// #29
    3470:	cmp	w10, w12
    3474:	mov	w10, #0x1                   	// #1
    3478:	b.cc	34e8 <boot_Time__Piece@@Base+0x2214>  // b.lo, b.ul, b.last
    347c:	sub	w12, w13, #0x5b4
    3480:	cmp	w12, #0x16d
    3484:	b.cc	34e8 <boot_Time__Piece@@Base+0x2214>  // b.lo, b.ul, b.last
    3488:	add	w11, w14, #0x7b
    348c:	mov	w10, #0x80d7                	// #32983
    3490:	movk	w10, #0xd62b, lsl #16
    3494:	add	w13, w11, w11, lsl #2
    3498:	smull	x10, w13, w10
    349c:	lsr	x10, x10, #32
    34a0:	add	w10, w10, w13
    34a4:	asr	w14, w10, #7
    34a8:	mov	w12, #0x99                  	// #153
    34ac:	add	w10, w14, w10, lsr #31
    34b0:	mov	w14, #0x6667                	// #26215
    34b4:	movk	w14, #0x6666, lsl #16
    34b8:	mul	w12, w10, w12
    34bc:	smull	x12, w12, w14
    34c0:	lsr	x14, x12, #63
    34c4:	asr	x12, x12, #33
    34c8:	add	w12, w12, w14
    34cc:	cmp	w13, #0x85e
    34d0:	sub	w11, w11, w12
    34d4:	b.lt	34e4 <boot_Time__Piece@@Base+0x2210>  // b.tstop
    34d8:	sub	w10, w10, #0xe
    34dc:	add	w9, w9, #0x1
    34e0:	b	34e8 <boot_Time__Piece@@Base+0x2214>
    34e4:	sub	w10, w10, #0x2
    34e8:	sub	w12, w9, #0x76c
    34ec:	str	w12, [x0, #20]
    34f0:	cbnz	w11, 34fc <boot_Time__Piece@@Base+0x2228>
    34f4:	mov	w11, #0x1f                  	// #31
    34f8:	sub	w10, w10, #0x1
    34fc:	str	w11, [x0, #12]
    3500:	mov	w11, #0x7ae1                	// #31457
    3504:	str	w10, [x0, #16]
    3508:	sub	w10, w9, #0x1
    350c:	movk	w11, #0xae14, lsl #16
    3510:	mov	w13, #0x851f                	// #34079
    3514:	movk	w13, #0x51eb, lsl #16
    3518:	smull	x11, w10, w11
    351c:	add	w9, w9, #0x2
    3520:	smull	x13, w10, w13
    3524:	lsr	x14, x11, #32
    3528:	lsr	x11, x11, #63
    352c:	cmp	w10, #0x0
    3530:	add	w11, w11, w14, asr #7
    3534:	lsr	x14, x13, #32
    3538:	lsr	x13, x13, #63
    353c:	csel	w9, w9, w10, lt  // lt = tstop
    3540:	add	w13, w13, w14, asr #5
    3544:	add	w14, w8, #0x6
    3548:	sub	w8, w8, w9, asr #2
    354c:	mov	w9, #0x2493                	// #9363
    3550:	movk	w9, #0x9249, lsl #16
    3554:	smull	x9, w14, w9
    3558:	lsr	x9, x9, #32
    355c:	mov	w12, #0xfffffe93            	// #-365
    3560:	add	w9, w9, w14
    3564:	madd	w8, w10, w12, w8
    3568:	asr	w10, w9, #2
    356c:	add	w8, w8, w13
    3570:	add	w9, w10, w9, lsr #31
    3574:	add	w8, w8, w11
    3578:	sub	w9, w9, w9, lsl #3
    357c:	sub	w8, w8, #0x1ad
    3580:	add	w9, w14, w9
    3584:	stp	w9, w8, [x0, #24]
    3588:	ret
    358c:	stp	x29, x30, [sp, #-48]!
    3590:	stp	x20, x19, [sp, #32]
    3594:	mov	x19, x1
    3598:	ldrsw	x1, [x2]
    359c:	str	x21, [sp, #16]
    35a0:	mov	x29, sp
    35a4:	mov	x20, x2
    35a8:	mov	x21, x0
    35ac:	bl	11d0 <Perl_newSViv@plt>
    35b0:	str	x0, [x19, #8]
    35b4:	ldrsw	x1, [x20, #4]
    35b8:	mov	x0, x21
    35bc:	bl	11d0 <Perl_newSViv@plt>
    35c0:	str	x0, [x19, #16]
    35c4:	ldrsw	x1, [x20, #8]
    35c8:	mov	x0, x21
    35cc:	bl	11d0 <Perl_newSViv@plt>
    35d0:	str	x0, [x19, #24]
    35d4:	ldrsw	x1, [x20, #12]
    35d8:	mov	x0, x21
    35dc:	bl	11d0 <Perl_newSViv@plt>
    35e0:	str	x0, [x19, #32]
    35e4:	ldrsw	x1, [x20, #16]
    35e8:	mov	x0, x21
    35ec:	bl	11d0 <Perl_newSViv@plt>
    35f0:	str	x0, [x19, #40]
    35f4:	ldrsw	x1, [x20, #20]
    35f8:	mov	x0, x21
    35fc:	bl	11d0 <Perl_newSViv@plt>
    3600:	str	x0, [x19, #48]
    3604:	ldrsw	x1, [x20, #24]
    3608:	mov	x0, x21
    360c:	bl	11d0 <Perl_newSViv@plt>
    3610:	str	x0, [x19, #56]
    3614:	ldrsw	x1, [x20, #28]
    3618:	mov	x0, x21
    361c:	bl	11d0 <Perl_newSViv@plt>
    3620:	str	x0, [x19, #64]
    3624:	ldrsw	x1, [x20, #32]
    3628:	mov	x0, x21
    362c:	bl	11d0 <Perl_newSViv@plt>
    3630:	str	x0, [x19, #72]!
    3634:	mov	x0, x19
    3638:	ldp	x20, x19, [sp, #32]
    363c:	ldr	x21, [sp, #16]
    3640:	ldp	x29, x30, [sp], #48
    3644:	ret

Disassembly of section .fini:

0000000000003648 <.fini>:
    3648:	stp	x29, x30, [sp, #-16]!
    364c:	mov	x29, sp
    3650:	ldp	x29, x30, [sp], #16
    3654:	ret
