
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404d98 <.init>:
  404d98:	stp	x29, x30, [sp, #-16]!
  404d9c:	mov	x29, sp
  404da0:	bl	405630 <_start@@Base+0x50>
  404da4:	ldp	x29, x30, [sp], #16
  404da8:	ret

Disassembly of section .plt:

0000000000404db0 <memcpy@plt-0x20>:
  404db0:	stp	x16, x30, [sp, #-16]!
  404db4:	adrp	x16, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  404db8:	ldr	x17, [x16, #4088]
  404dbc:	add	x16, x16, #0xff8
  404dc0:	br	x17
  404dc4:	nop
  404dc8:	nop
  404dcc:	nop

0000000000404dd0 <memcpy@plt>:
  404dd0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16]
  404dd8:	add	x16, x16, #0x0
  404ddc:	br	x17

0000000000404de0 <recvmsg@plt>:
  404de0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #8]
  404de8:	add	x16, x16, #0x8
  404dec:	br	x17

0000000000404df0 <strtoul@plt>:
  404df0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #16]
  404df8:	add	x16, x16, #0x10
  404dfc:	br	x17

0000000000404e00 <strlen@plt>:
  404e00:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #24]
  404e08:	add	x16, x16, #0x18
  404e0c:	br	x17

0000000000404e10 <fputs@plt>:
  404e10:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #32]
  404e18:	add	x16, x16, #0x20
  404e1c:	br	x17

0000000000404e20 <exit@plt>:
  404e20:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #40]
  404e28:	add	x16, x16, #0x28
  404e2c:	br	x17

0000000000404e30 <perror@plt>:
  404e30:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #48]
  404e38:	add	x16, x16, #0x30
  404e3c:	br	x17

0000000000404e40 <__cmsg_nxthdr@plt>:
  404e40:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #56]
  404e48:	add	x16, x16, #0x38
  404e4c:	br	x17

0000000000404e50 <strtoll@plt>:
  404e50:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #64]
  404e58:	add	x16, x16, #0x40
  404e5c:	br	x17

0000000000404e60 <strtod@plt>:
  404e60:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #72]
  404e68:	add	x16, x16, #0x48
  404e6c:	br	x17

0000000000404e70 <geteuid@plt>:
  404e70:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #80]
  404e78:	add	x16, x16, #0x50
  404e7c:	br	x17

0000000000404e80 <sethostent@plt>:
  404e80:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #88]
  404e88:	add	x16, x16, #0x58
  404e8c:	br	x17

0000000000404e90 <bind@plt>:
  404e90:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #96]
  404e98:	add	x16, x16, #0x60
  404e9c:	br	x17

0000000000404ea0 <ftell@plt>:
  404ea0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #104]
  404ea8:	add	x16, x16, #0x68
  404eac:	br	x17

0000000000404eb0 <sprintf@plt>:
  404eb0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #112]
  404eb8:	add	x16, x16, #0x70
  404ebc:	br	x17

0000000000404ec0 <getuid@plt>:
  404ec0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #120]
  404ec8:	add	x16, x16, #0x78
  404ecc:	br	x17

0000000000404ed0 <putc@plt>:
  404ed0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #128]
  404ed8:	add	x16, x16, #0x80
  404edc:	br	x17

0000000000404ee0 <strftime@plt>:
  404ee0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #136]
  404ee8:	add	x16, x16, #0x88
  404eec:	br	x17

0000000000404ef0 <fputc@plt>:
  404ef0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #144]
  404ef8:	add	x16, x16, #0x90
  404efc:	br	x17

0000000000404f00 <dlopen@plt>:
  404f00:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #152]
  404f08:	add	x16, x16, #0x98
  404f0c:	br	x17

0000000000404f10 <snprintf@plt>:
  404f10:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #160]
  404f18:	add	x16, x16, #0xa0
  404f1c:	br	x17

0000000000404f20 <fileno@plt>:
  404f20:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #168]
  404f28:	add	x16, x16, #0xa8
  404f2c:	br	x17

0000000000404f30 <localtime@plt>:
  404f30:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #176]
  404f38:	add	x16, x16, #0xb0
  404f3c:	br	x17

0000000000404f40 <fclose@plt>:
  404f40:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #184]
  404f48:	add	x16, x16, #0xb8
  404f4c:	br	x17

0000000000404f50 <atoi@plt>:
  404f50:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #192]
  404f58:	add	x16, x16, #0xc0
  404f5c:	br	x17

0000000000404f60 <time@plt>:
  404f60:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #200]
  404f68:	add	x16, x16, #0xc8
  404f6c:	br	x17

0000000000404f70 <malloc@plt>:
  404f70:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #208]
  404f78:	add	x16, x16, #0xd0
  404f7c:	br	x17

0000000000404f80 <setsockopt@plt>:
  404f80:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #216]
  404f88:	add	x16, x16, #0xd8
  404f8c:	br	x17

0000000000404f90 <dlsym@plt>:
  404f90:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #224]
  404f98:	add	x16, x16, #0xe0
  404f9c:	br	x17

0000000000404fa0 <__isoc99_fscanf@plt>:
  404fa0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #232]
  404fa8:	add	x16, x16, #0xe8
  404fac:	br	x17

0000000000404fb0 <__libc_start_main@plt>:
  404fb0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #240]
  404fb8:	add	x16, x16, #0xf0
  404fbc:	br	x17

0000000000404fc0 <strcat@plt>:
  404fc0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #248]
  404fc8:	add	x16, x16, #0xf8
  404fcc:	br	x17

0000000000404fd0 <if_indextoname@plt>:
  404fd0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #256]
  404fd8:	add	x16, x16, #0x100
  404fdc:	br	x17

0000000000404fe0 <memset@plt>:
  404fe0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #264]
  404fe8:	add	x16, x16, #0x108
  404fec:	br	x17

0000000000404ff0 <gettimeofday@plt>:
  404ff0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #272]
  404ff8:	add	x16, x16, #0x110
  404ffc:	br	x17

0000000000405000 <sendmsg@plt>:
  405000:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #280]
  405008:	add	x16, x16, #0x118
  40500c:	br	x17

0000000000405010 <calloc@plt>:
  405010:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #288]
  405018:	add	x16, x16, #0x120
  40501c:	br	x17

0000000000405020 <cap_get_flag@plt>:
  405020:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #296]
  405028:	add	x16, x16, #0x128
  40502c:	br	x17

0000000000405030 <strcasecmp@plt>:
  405030:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #304]
  405038:	add	x16, x16, #0x130
  40503c:	br	x17

0000000000405040 <realloc@plt>:
  405040:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #312]
  405048:	add	x16, x16, #0x138
  40504c:	br	x17

0000000000405050 <cap_set_proc@plt>:
  405050:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #320]
  405058:	add	x16, x16, #0x140
  40505c:	br	x17

0000000000405060 <strdup@plt>:
  405060:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #328]
  405068:	add	x16, x16, #0x148
  40506c:	br	x17

0000000000405070 <strerror@plt>:
  405070:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #336]
  405078:	add	x16, x16, #0x150
  40507c:	br	x17

0000000000405080 <close@plt>:
  405080:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #344]
  405088:	add	x16, x16, #0x158
  40508c:	br	x17

0000000000405090 <strrchr@plt>:
  405090:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #352]
  405098:	add	x16, x16, #0x160
  40509c:	br	x17

00000000004050a0 <recv@plt>:
  4050a0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #360]
  4050a8:	add	x16, x16, #0x168
  4050ac:	br	x17

00000000004050b0 <__gmon_start__@plt>:
  4050b0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #368]
  4050b8:	add	x16, x16, #0x170
  4050bc:	br	x17

00000000004050c0 <abort@plt>:
  4050c0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #376]
  4050c8:	add	x16, x16, #0x178
  4050cc:	br	x17

00000000004050d0 <feof@plt>:
  4050d0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #384]
  4050d8:	add	x16, x16, #0x180
  4050dc:	br	x17

00000000004050e0 <memcmp@plt>:
  4050e0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #392]
  4050e8:	add	x16, x16, #0x188
  4050ec:	br	x17

00000000004050f0 <strcmp@plt>:
  4050f0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #400]
  4050f8:	add	x16, x16, #0x190
  4050fc:	br	x17

0000000000405100 <__ctype_b_loc@plt>:
  405100:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #408]
  405108:	add	x16, x16, #0x198
  40510c:	br	x17

0000000000405110 <strtol@plt>:
  405110:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #416]
  405118:	add	x16, x16, #0x1a0
  40511c:	br	x17

0000000000405120 <cap_get_proc@plt>:
  405120:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #424]
  405128:	add	x16, x16, #0x1a8
  40512c:	br	x17

0000000000405130 <fread@plt>:
  405130:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #432]
  405138:	add	x16, x16, #0x1b0
  40513c:	br	x17

0000000000405140 <getline@plt>:
  405140:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #440]
  405148:	add	x16, x16, #0x1b8
  40514c:	br	x17

0000000000405150 <gethostbyaddr@plt>:
  405150:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #448]
  405158:	add	x16, x16, #0x1c0
  40515c:	br	x17

0000000000405160 <free@plt>:
  405160:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #456]
  405168:	add	x16, x16, #0x1c8
  40516c:	br	x17

0000000000405170 <inet_pton@plt>:
  405170:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #464]
  405178:	add	x16, x16, #0x1d0
  40517c:	br	x17

0000000000405180 <send@plt>:
  405180:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #472]
  405188:	add	x16, x16, #0x1d8
  40518c:	br	x17

0000000000405190 <strspn@plt>:
  405190:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #480]
  405198:	add	x16, x16, #0x1e0
  40519c:	br	x17

00000000004051a0 <strchr@plt>:
  4051a0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #488]
  4051a8:	add	x16, x16, #0x1e8
  4051ac:	br	x17

00000000004051b0 <strtoull@plt>:
  4051b0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #496]
  4051b8:	add	x16, x16, #0x1f0
  4051bc:	br	x17

00000000004051c0 <fwrite@plt>:
  4051c0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #504]
  4051c8:	add	x16, x16, #0x1f8
  4051cc:	br	x17

00000000004051d0 <socket@plt>:
  4051d0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #512]
  4051d8:	add	x16, x16, #0x200
  4051dc:	br	x17

00000000004051e0 <fflush@plt>:
  4051e0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #520]
  4051e8:	add	x16, x16, #0x208
  4051ec:	br	x17

00000000004051f0 <strcpy@plt>:
  4051f0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #528]
  4051f8:	add	x16, x16, #0x210
  4051fc:	br	x17

0000000000405200 <fopen64@plt>:
  405200:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #536]
  405208:	add	x16, x16, #0x218
  40520c:	br	x17

0000000000405210 <cap_clear@plt>:
  405210:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #544]
  405218:	add	x16, x16, #0x220
  40521c:	br	x17

0000000000405220 <isatty@plt>:
  405220:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #552]
  405228:	add	x16, x16, #0x228
  40522c:	br	x17

0000000000405230 <sysconf@plt>:
  405230:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #560]
  405238:	add	x16, x16, #0x230
  40523c:	br	x17

0000000000405240 <asctime@plt>:
  405240:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #568]
  405248:	add	x16, x16, #0x238
  40524c:	br	x17

0000000000405250 <cap_free@plt>:
  405250:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #576]
  405258:	add	x16, x16, #0x240
  40525c:	br	x17

0000000000405260 <if_nametoindex@plt>:
  405260:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #584]
  405268:	add	x16, x16, #0x248
  40526c:	br	x17

0000000000405270 <strchrnul@plt>:
  405270:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #592]
  405278:	add	x16, x16, #0x250
  40527c:	br	x17

0000000000405280 <strstr@plt>:
  405280:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405284:	ldr	x17, [x16, #600]
  405288:	add	x16, x16, #0x258
  40528c:	br	x17

0000000000405290 <__isoc99_sscanf@plt>:
  405290:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405294:	ldr	x17, [x16, #608]
  405298:	add	x16, x16, #0x260
  40529c:	br	x17

00000000004052a0 <strncpy@plt>:
  4052a0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4052a4:	ldr	x17, [x16, #616]
  4052a8:	add	x16, x16, #0x268
  4052ac:	br	x17

00000000004052b0 <strcspn@plt>:
  4052b0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4052b4:	ldr	x17, [x16, #624]
  4052b8:	add	x16, x16, #0x270
  4052bc:	br	x17

00000000004052c0 <vfprintf@plt>:
  4052c0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4052c4:	ldr	x17, [x16, #632]
  4052c8:	add	x16, x16, #0x278
  4052cc:	br	x17

00000000004052d0 <printf@plt>:
  4052d0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4052d4:	ldr	x17, [x16, #640]
  4052d8:	add	x16, x16, #0x280
  4052dc:	br	x17

00000000004052e0 <__assert_fail@plt>:
  4052e0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4052e4:	ldr	x17, [x16, #648]
  4052e8:	add	x16, x16, #0x288
  4052ec:	br	x17

00000000004052f0 <__errno_location@plt>:
  4052f0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4052f4:	ldr	x17, [x16, #656]
  4052f8:	add	x16, x16, #0x290
  4052fc:	br	x17

0000000000405300 <getenv@plt>:
  405300:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405304:	ldr	x17, [x16, #664]
  405308:	add	x16, x16, #0x298
  40530c:	br	x17

0000000000405310 <putchar@plt>:
  405310:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405314:	ldr	x17, [x16, #672]
  405318:	add	x16, x16, #0x2a0
  40531c:	br	x17

0000000000405320 <getsockname@plt>:
  405320:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405324:	ldr	x17, [x16, #680]
  405328:	add	x16, x16, #0x2a8
  40532c:	br	x17

0000000000405330 <fprintf@plt>:
  405330:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405334:	ldr	x17, [x16, #688]
  405338:	add	x16, x16, #0x2b0
  40533c:	br	x17

0000000000405340 <fgets@plt>:
  405340:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405344:	ldr	x17, [x16, #696]
  405348:	add	x16, x16, #0x2b8
  40534c:	br	x17

0000000000405350 <inet_ntop@plt>:
  405350:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405354:	ldr	x17, [x16, #704]
  405358:	add	x16, x16, #0x2c0
  40535c:	br	x17

0000000000405360 <ferror@plt>:
  405360:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405364:	ldr	x17, [x16, #712]
  405368:	add	x16, x16, #0x2c8
  40536c:	br	x17

Disassembly of section .text:

0000000000405370 <main@@Base>:
  405370:	stp	x29, x30, [sp, #-320]!
  405374:	mov	x29, sp
  405378:	stp	x19, x20, [sp, #16]
  40537c:	adrp	x19, 40c000 <addattr_nest@@Base+0x4>
  405380:	mov	x20, x1
  405384:	add	x19, x19, #0x62a
  405388:	stp	x21, x22, [sp, #32]
  40538c:	mov	w22, w0
  405390:	stp	x23, x24, [sp, #48]
  405394:	adrp	x23, 40c000 <addattr_nest@@Base+0x4>
  405398:	add	x23, x23, #0x631
  40539c:	adrp	x24, 40c000 <addattr_nest@@Base+0x4>
  4053a0:	cmp	w22, #0x1
  4053a4:	b.le	40549c <main@@Base+0x12c>
  4053a8:	ldr	x21, [x20, #8]
  4053ac:	ldrb	w0, [x21]
  4053b0:	cmp	w0, #0x2d
  4053b4:	b.ne	4055d0 <main@@Base+0x260>  // b.any
  4053b8:	mov	x1, x19
  4053bc:	mov	x0, x21
  4053c0:	bl	406fc4 <matches@@Base>
  4053c4:	tst	w0, #0xff
  4053c8:	b.ne	4053e8 <main@@Base+0x78>  // b.any
  4053cc:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4053d0:	ldr	w0, [x1, #3468]
  4053d4:	add	w0, w0, #0x1
  4053d8:	str	w0, [x1, #3468]
  4053dc:	sub	w22, w22, #0x1
  4053e0:	add	x20, x20, #0x8
  4053e4:	b	4053a0 <main@@Base+0x30>
  4053e8:	ldr	x0, [x20, #8]
  4053ec:	mov	x1, x23
  4053f0:	bl	406fc4 <matches@@Base>
  4053f4:	tst	w0, #0xff
  4053f8:	b.eq	4053cc <main@@Base+0x5c>  // b.none
  4053fc:	ldr	x0, [x20, #8]
  405400:	add	x1, x24, #0x63d
  405404:	bl	406fc4 <matches@@Base>
  405408:	tst	w0, #0xff
  40540c:	b.ne	405424 <main@@Base+0xb4>  // b.any
  405410:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  405414:	ldr	w0, [x1, #3464]
  405418:	add	w0, w0, #0x1
  40541c:	str	w0, [x1, #3464]
  405420:	b	4053dc <main@@Base+0x6c>
  405424:	ldr	x0, [x20, #8]
  405428:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40542c:	add	x1, x1, #0x646
  405430:	bl	406fc4 <matches@@Base>
  405434:	tst	w0, #0xff
  405438:	b.ne	405450 <main@@Base+0xe0>  // b.any
  40543c:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  405440:	ldr	w0, [x1, #3472]
  405444:	add	w0, w0, #0x1
  405448:	str	w0, [x1, #3472]
  40544c:	b	4053dc <main@@Base+0x6c>
  405450:	ldr	x0, [x20, #8]
  405454:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405458:	add	x1, x1, #0x64b
  40545c:	bl	406fc4 <matches@@Base>
  405460:	tst	w0, #0xff
  405464:	b.ne	405484 <main@@Base+0x114>  // b.any
  405468:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40546c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405470:	add	x1, x1, #0x6c2
  405474:	add	x0, x0, #0x654
  405478:	bl	4052d0 <printf@plt>
  40547c:	mov	w0, #0x0                   	// #0
  405480:	bl	404e20 <exit@plt>
  405484:	ldr	x0, [x20, #8]
  405488:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40548c:	add	x1, x1, #0x671
  405490:	bl	406fc4 <matches@@Base>
  405494:	tst	w0, #0xff
  405498:	b.ne	4054a0 <main@@Base+0x130>  // b.any
  40549c:	bl	40572c <_start@@Base+0x14c>
  4054a0:	ldr	x2, [x20, #8]
  4054a4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4054a8:	add	x1, x1, #0x677
  4054ac:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  4054b0:	ldr	x0, [x0, #792]
  4054b4:	bl	405330 <fprintf@plt>
  4054b8:	mov	w0, #0xffffffff            	// #-1
  4054bc:	b	405480 <main@@Base+0x110>
  4054c0:	mov	x1, x21
  4054c4:	add	x0, x19, #0x8
  4054c8:	bl	4050f0 <strcmp@plt>
  4054cc:	cbz	w0, 405558 <main@@Base+0x1e8>
  4054d0:	ldr	x19, [x19]
  4054d4:	cbnz	x19, 4054c0 <main@@Base+0x150>
  4054d8:	mov	x3, x21
  4054dc:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4054e0:	add	x2, x2, #0x6a2
  4054e4:	mov	x1, #0x100                 	// #256
  4054e8:	add	x0, sp, #0x40
  4054ec:	bl	404f10 <snprintf@plt>
  4054f0:	add	x0, sp, #0x40
  4054f4:	mov	w1, #0x1                   	// #1
  4054f8:	bl	404f00 <dlopen@plt>
  4054fc:	mov	x19, x0
  405500:	cbnz	x0, 405520 <main@@Base+0x1b0>
  405504:	ldr	x19, [x24, #816]
  405508:	cbnz	x19, 405520 <main@@Base+0x1b0>
  40550c:	mov	w1, #0x1                   	// #1
  405510:	bl	404f00 <dlopen@plt>
  405514:	str	x0, [x24, #816]
  405518:	mov	x19, x0
  40551c:	cbz	x0, 405580 <main@@Base+0x210>
  405520:	mov	x3, x21
  405524:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  405528:	add	x2, x2, #0x6a8
  40552c:	mov	x1, #0x100                 	// #256
  405530:	add	x0, sp, #0x40
  405534:	bl	404f10 <snprintf@plt>
  405538:	mov	x0, x19
  40553c:	add	x1, sp, #0x40
  405540:	bl	404f90 <dlsym@plt>
  405544:	mov	x19, x0
  405548:	cbz	x0, 405580 <main@@Base+0x210>
  40554c:	ldr	x0, [x23, #8]
  405550:	str	x0, [x19]
  405554:	str	x19, [x23, #8]
  405558:	ldr	x3, [x19, #24]
  40555c:	add	x2, x20, #0x8
  405560:	sub	w1, w22, #0x1
  405564:	mov	x0, x19
  405568:	blr	x3
  40556c:	ldp	x19, x20, [sp, #16]
  405570:	ldp	x21, x22, [sp, #32]
  405574:	ldp	x23, x24, [sp, #48]
  405578:	ldp	x29, x30, [sp], #320
  40557c:	ret
  405580:	mov	x1, #0x28                  	// #40
  405584:	mov	x0, #0x1                   	// #1
  405588:	bl	405010 <calloc@plt>
  40558c:	mov	x19, x0
  405590:	cbz	x0, 4055c0 <main@@Base+0x250>
  405594:	mov	x1, x21
  405598:	add	x0, x0, #0x8
  40559c:	mov	x2, #0xf                   	// #15
  4055a0:	bl	4052a0 <strncpy@plt>
  4055a4:	adrp	x0, 405000 <sendmsg@plt>
  4055a8:	add	x0, x0, #0x750
  4055ac:	str	x0, [x19, #24]
  4055b0:	adrp	x0, 405000 <sendmsg@plt>
  4055b4:	add	x0, x0, #0x70c
  4055b8:	str	x0, [x19, #32]
  4055bc:	b	40554c <main@@Base+0x1dc>
  4055c0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4055c4:	add	x1, x1, #0x6b5
  4055c8:	ldr	x2, [x20, #8]
  4055cc:	b	4054ac <main@@Base+0x13c>
  4055d0:	adrp	x24, 420000 <memcpy@GLIBC_2.17>
  4055d4:	add	x23, x24, #0x330
  4055d8:	ldr	x19, [x23, #8]
  4055dc:	b	4054d4 <main@@Base+0x164>

00000000004055e0 <_start@@Base>:
  4055e0:	mov	x29, #0x0                   	// #0
  4055e4:	mov	x30, #0x0                   	// #0
  4055e8:	mov	x5, x0
  4055ec:	ldr	x1, [sp]
  4055f0:	add	x2, sp, #0x8
  4055f4:	mov	x6, sp
  4055f8:	movz	x0, #0x0, lsl #48
  4055fc:	movk	x0, #0x0, lsl #32
  405600:	movk	x0, #0x40, lsl #16
  405604:	movk	x0, #0x5370
  405608:	movz	x3, #0x0, lsl #48
  40560c:	movk	x3, #0x0, lsl #32
  405610:	movk	x3, #0x40, lsl #16
  405614:	movk	x3, #0xc498
  405618:	movz	x4, #0x0, lsl #48
  40561c:	movk	x4, #0x0, lsl #32
  405620:	movk	x4, #0x40, lsl #16
  405624:	movk	x4, #0xc518
  405628:	bl	404fb0 <__libc_start_main@plt>
  40562c:	bl	4050c0 <abort@plt>
  405630:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  405634:	ldr	x0, [x0, #4040]
  405638:	cbz	x0, 405640 <_start@@Base+0x60>
  40563c:	b	4050b0 <__gmon_start__@plt>
  405640:	ret
  405644:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405648:	add	x1, x0, #0x318
  40564c:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405650:	add	x0, x0, #0x318
  405654:	cmp	x1, x0
  405658:	b.eq	405684 <_start@@Base+0xa4>  // b.none
  40565c:	sub	sp, sp, #0x10
  405660:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405664:	ldr	x1, [x1, #1336]
  405668:	str	x1, [sp, #8]
  40566c:	cbz	x1, 40567c <_start@@Base+0x9c>
  405670:	mov	x16, x1
  405674:	add	sp, sp, #0x10
  405678:	br	x16
  40567c:	add	sp, sp, #0x10
  405680:	ret
  405684:	ret
  405688:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  40568c:	add	x1, x0, #0x318
  405690:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405694:	add	x0, x0, #0x318
  405698:	sub	x1, x1, x0
  40569c:	mov	x2, #0x2                   	// #2
  4056a0:	asr	x1, x1, #3
  4056a4:	sdiv	x1, x1, x2
  4056a8:	cbz	x1, 4056d4 <_start@@Base+0xf4>
  4056ac:	sub	sp, sp, #0x10
  4056b0:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4056b4:	ldr	x2, [x2, #1344]
  4056b8:	str	x2, [sp, #8]
  4056bc:	cbz	x2, 4056cc <_start@@Base+0xec>
  4056c0:	mov	x16, x2
  4056c4:	add	sp, sp, #0x10
  4056c8:	br	x16
  4056cc:	add	sp, sp, #0x10
  4056d0:	ret
  4056d4:	ret
  4056d8:	stp	x29, x30, [sp, #-32]!
  4056dc:	mov	x29, sp
  4056e0:	str	x19, [sp, #16]
  4056e4:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  4056e8:	ldrb	w0, [x19, #808]
  4056ec:	cbnz	w0, 4056fc <_start@@Base+0x11c>
  4056f0:	bl	405644 <_start@@Base+0x64>
  4056f4:	mov	w0, #0x1                   	// #1
  4056f8:	strb	w0, [x19, #808]
  4056fc:	ldr	x19, [sp, #16]
  405700:	ldp	x29, x30, [sp], #32
  405704:	ret
  405708:	b	405688 <_start@@Base+0xa8>
  40570c:	stp	x29, x30, [sp, #-16]!
  405710:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405714:	add	x0, x0, #0x548
  405718:	mov	x29, sp
  40571c:	bl	404e10 <fputs@plt>
  405720:	mov	w0, #0x0                   	// #0
  405724:	ldp	x29, x30, [sp], #16
  405728:	ret
  40572c:	stp	x29, x30, [sp, #-16]!
  405730:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405734:	mov	x29, sp
  405738:	ldr	x1, [x0, #792]
  40573c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405740:	add	x0, x0, #0x55e
  405744:	bl	404e10 <fputs@plt>
  405748:	mov	w0, #0xffffffff            	// #-1
  40574c:	bl	404e20 <exit@plt>
  405750:	cbz	w1, 405788 <_start@@Base+0x1a8>
  405754:	stp	x29, x30, [sp, #-16]!
  405758:	mov	x4, x0
  40575c:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405760:	mov	x29, sp
  405764:	ldr	x0, [x0, #792]
  405768:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40576c:	ldr	x3, [x2]
  405770:	add	x1, x1, #0x5f6
  405774:	add	x2, x4, #0x8
  405778:	bl	405330 <fprintf@plt>
  40577c:	mov	w0, #0xffffffff            	// #-1
  405780:	ldp	x29, x30, [sp], #16
  405784:	ret
  405788:	mov	w0, w1
  40578c:	ret
  405790:	sub	sp, sp, #0x8b0
  405794:	stp	x29, x30, [sp]
  405798:	mov	x29, sp
  40579c:	stp	x19, x20, [sp, #16]
  4057a0:	mov	x19, x2
  4057a4:	stp	x21, x22, [sp, #32]
  4057a8:	stp	x23, x24, [sp, #48]
  4057ac:	str	x25, [sp, #64]
  4057b0:	ldrh	w3, [x1, #4]
  4057b4:	ldr	w2, [x1]
  4057b8:	cmp	w3, #0x10
  4057bc:	b.eq	4057dc <_start@@Base+0x1fc>  // b.none
  4057c0:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  4057c4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4057c8:	add	x1, x1, #0x6c9
  4057cc:	ldr	x0, [x0, #792]
  4057d0:	bl	405330 <fprintf@plt>
  4057d4:	mov	w0, #0x0                   	// #0
  4057d8:	b	405838 <_start@@Base+0x258>
  4057dc:	ldrb	w0, [x1, #16]
  4057e0:	sub	w4, w0, #0x1
  4057e4:	sub	w3, w0, #0x7
  4057e8:	and	w4, w4, #0xff
  4057ec:	and	w3, w3, #0xff
  4057f0:	cmp	w4, #0x2
  4057f4:	ccmp	w3, #0x1, #0x0, hi  // hi = pmore
  4057f8:	b.ls	405818 <_start@@Base+0x238>  // b.plast
  4057fc:	mov	w2, w0
  405800:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405804:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405808:	add	x1, x1, #0x701
  40580c:	ldr	x0, [x0, #792]
  405810:	bl	405330 <fprintf@plt>
  405814:	b	4057d4 <_start@@Base+0x1f4>
  405818:	subs	w2, w2, #0x14
  40581c:	b.pl	405854 <_start@@Base+0x274>  // b.nfrst
  405820:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405824:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405828:	add	x1, x1, #0x720
  40582c:	ldr	x0, [x0, #792]
  405830:	bl	405330 <fprintf@plt>
  405834:	mov	w0, #0xffffffff            	// #-1
  405838:	ldp	x29, x30, [sp]
  40583c:	ldp	x19, x20, [sp, #16]
  405840:	ldp	x21, x22, [sp, #32]
  405844:	ldp	x23, x24, [sp, #48]
  405848:	ldr	x25, [sp, #64]
  40584c:	add	sp, sp, #0x8b0
  405850:	ret
  405854:	mov	w3, w2
  405858:	add	x0, sp, #0x68
  40585c:	add	x2, x1, #0x14
  405860:	mov	w1, #0x7                   	// #7
  405864:	bl	40c3a8 <parse_rtattr@@Base>
  405868:	ldr	x2, [sp, #120]
  40586c:	cbz	x2, 405884 <_start@@Base+0x2a4>
  405870:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405874:	add	x2, x2, #0x4
  405878:	add	x1, x1, #0x741
  40587c:	mov	x0, x19
  405880:	bl	405330 <fprintf@plt>
  405884:	ldr	x0, [sp, #112]
  405888:	cbz	x0, 4058a0 <_start@@Base+0x2c0>
  40588c:	ldrh	w2, [x0, #4]
  405890:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405894:	mov	x0, x19
  405898:	add	x1, x1, #0x74c
  40589c:	bl	405330 <fprintf@plt>
  4058a0:	ldr	x20, [sp, #128]
  4058a4:	cbz	x20, 405a7c <_start@@Base+0x49c>
  4058a8:	ldr	w2, [x20, #4]
  4058ac:	mov	x0, x19
  4058b0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4058b4:	add	x1, x1, #0x757
  4058b8:	bl	405330 <fprintf@plt>
  4058bc:	ldr	w24, [x20, #4]
  4058c0:	ldr	x0, [sp, #136]
  4058c4:	cbz	x0, 4058dc <_start@@Base+0x2fc>
  4058c8:	ldr	w2, [x0, #4]
  4058cc:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4058d0:	mov	x0, x19
  4058d4:	add	x1, x1, #0x767
  4058d8:	bl	405330 <fprintf@plt>
  4058dc:	ldr	x0, [sp, #144]
  4058e0:	cbz	x0, 4058f8 <_start@@Base+0x318>
  4058e4:	ldr	w2, [x0, #4]
  4058e8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4058ec:	mov	x0, x19
  4058f0:	add	x1, x1, #0x779
  4058f4:	bl	405330 <fprintf@plt>
  4058f8:	mov	x1, x19
  4058fc:	mov	w0, #0xa                   	// #10
  405900:	bl	404ef0 <fputc@plt>
  405904:	ldr	x2, [sp, #152]
  405908:	cbz	x2, 40599c <_start@@Base+0x3bc>
  40590c:	ldrh	w3, [x2], #4
  405910:	adrp	x23, 40c000 <addattr_nest@@Base+0x4>
  405914:	adrp	x25, 40c000 <addattr_nest@@Base+0x4>
  405918:	add	x23, x23, #0x7a2
  40591c:	sub	w3, w3, #0x4
  405920:	add	x25, x25, #0x7cc
  405924:	add	x22, sp, #0xa8
  405928:	mov	x20, #0x0                   	// #0
  40592c:	mov	w1, #0x100                 	// #256
  405930:	mov	x0, x22
  405934:	bl	40c3a8 <parse_rtattr@@Base>
  405938:	mov	x1, x19
  40593c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405940:	add	x0, x0, #0x78b
  405944:	bl	404e10 <fputs@plt>
  405948:	ldr	x0, [x22, x20, lsl #3]
  40594c:	cbz	x0, 405984 <_start@@Base+0x3a4>
  405950:	mov	w2, w20
  405954:	mov	x1, x23
  405958:	mov	x0, x19
  40595c:	bl	405330 <fprintf@plt>
  405960:	ldr	x2, [x22, x20, lsl #3]
  405964:	cbnz	x2, 405a84 <_start@@Base+0x4a4>
  405968:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  40596c:	mov	x1, x19
  405970:	add	x0, x0, #0x7aa
  405974:	bl	404e10 <fputs@plt>
  405978:	mov	x1, x19
  40597c:	mov	w0, #0xa                   	// #10
  405980:	bl	404ef0 <fputc@plt>
  405984:	add	x20, x20, #0x1
  405988:	cmp	x20, #0x100
  40598c:	b.ne	405948 <_start@@Base+0x368>  // b.any
  405990:	mov	x1, x19
  405994:	mov	w0, #0xa                   	// #10
  405998:	bl	404ef0 <fputc@plt>
  40599c:	ldr	x2, [sp, #160]
  4059a0:	cbz	x2, 405a70 <_start@@Base+0x490>
  4059a4:	ldrh	w3, [x2], #4
  4059a8:	adrp	x22, 40c000 <addattr_nest@@Base+0x4>
  4059ac:	adrp	x23, 40c000 <addattr_nest@@Base+0x4>
  4059b0:	add	x22, x22, #0x7a2
  4059b4:	sub	w3, w3, #0x4
  4059b8:	add	x23, x23, #0x849
  4059bc:	add	x21, sp, #0xa8
  4059c0:	mov	x20, #0x0                   	// #0
  4059c4:	mov	w1, #0x100                 	// #256
  4059c8:	mov	x0, x21
  4059cc:	bl	40c3a8 <parse_rtattr@@Base>
  4059d0:	mov	x1, x19
  4059d4:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4059d8:	add	x0, x0, #0x82a
  4059dc:	bl	404e10 <fputs@plt>
  4059e0:	ldr	x0, [x21, x20, lsl #3]
  4059e4:	cbz	x0, 405a58 <_start@@Base+0x478>
  4059e8:	mov	w2, w20
  4059ec:	mov	x1, x22
  4059f0:	mov	x0, x19
  4059f4:	bl	405330 <fprintf@plt>
  4059f8:	ldr	x2, [x21, x20, lsl #3]
  4059fc:	cbz	x2, 405b50 <_start@@Base+0x570>
  405a00:	ldrh	w3, [x2], #4
  405a04:	add	x0, sp, #0x50
  405a08:	mov	w1, #0x2                   	// #2
  405a0c:	sub	w3, w3, #0x4
  405a10:	bl	40c3a8 <parse_rtattr@@Base>
  405a14:	ldr	x0, [sp, #96]
  405a18:	cbz	x0, 405a30 <_start@@Base+0x450>
  405a1c:	ldr	w2, [x0, #4]
  405a20:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405a24:	mov	x0, x19
  405a28:	add	x1, x1, #0x7c2
  405a2c:	bl	405330 <fprintf@plt>
  405a30:	ldr	x2, [sp, #88]
  405a34:	cbz	x2, 405a4c <_start@@Base+0x46c>
  405a38:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405a3c:	add	x2, x2, #0x4
  405a40:	add	x1, x1, #0x83e
  405a44:	mov	x0, x19
  405a48:	bl	405330 <fprintf@plt>
  405a4c:	mov	x1, x19
  405a50:	mov	w0, #0xa                   	// #10
  405a54:	bl	404ef0 <fputc@plt>
  405a58:	add	x20, x20, #0x1
  405a5c:	cmp	x20, #0x100
  405a60:	b.ne	4059e0 <_start@@Base+0x400>  // b.any
  405a64:	mov	x1, x19
  405a68:	mov	w0, #0xa                   	// #10
  405a6c:	bl	404ef0 <fputc@plt>
  405a70:	mov	x0, x19
  405a74:	bl	4051e0 <fflush@plt>
  405a78:	b	4057d4 <_start@@Base+0x1f4>
  405a7c:	mov	w24, #0x1                   	// #1
  405a80:	b	4058c0 <_start@@Base+0x2e0>
  405a84:	ldrh	w3, [x2], #4
  405a88:	add	x0, sp, #0x50
  405a8c:	mov	w1, #0x2                   	// #2
  405a90:	sub	w3, w3, #0x4
  405a94:	bl	40c3a8 <parse_rtattr@@Base>
  405a98:	ldr	x0, [sp, #88]
  405a9c:	cbz	x0, 405ab4 <_start@@Base+0x4d4>
  405aa0:	ldr	w2, [x0, #4]
  405aa4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405aa8:	mov	x0, x19
  405aac:	add	x1, x1, #0x7c2
  405ab0:	bl	405330 <fprintf@plt>
  405ab4:	ldr	x0, [sp, #96]
  405ab8:	cbz	x0, 405978 <_start@@Base+0x398>
  405abc:	cmp	w24, #0x1
  405ac0:	b.ls	405978 <_start@@Base+0x398>  // b.plast
  405ac4:	ldr	w21, [x0, #4]
  405ac8:	mov	x1, x25
  405acc:	mov	x0, x19
  405ad0:	mov	w2, w21
  405ad4:	bl	405330 <fprintf@plt>
  405ad8:	cbnz	w21, 405aec <_start@@Base+0x50c>
  405adc:	mov	x1, x19
  405ae0:	mov	w0, #0xa                   	// #10
  405ae4:	bl	404ef0 <fputc@plt>
  405ae8:	b	405978 <_start@@Base+0x398>
  405aec:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405af0:	mov	x1, x19
  405af4:	add	x0, x0, #0x7e6
  405af8:	bl	404e10 <fputs@plt>
  405afc:	tbz	w21, #0, 405b10 <_start@@Base+0x530>
  405b00:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405b04:	mov	x1, x19
  405b08:	add	x0, x0, #0x7ea
  405b0c:	bl	404e10 <fputs@plt>
  405b10:	tbz	w21, #1, 405b24 <_start@@Base+0x544>
  405b14:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405b18:	mov	x1, x19
  405b1c:	add	x0, x0, #0x806
  405b20:	bl	404e10 <fputs@plt>
  405b24:	tbz	w21, #2, 405b38 <_start@@Base+0x558>
  405b28:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405b2c:	mov	x1, x19
  405b30:	add	x0, x0, #0x811
  405b34:	bl	404e10 <fputs@plt>
  405b38:	tbz	w21, #3, 405adc <_start@@Base+0x4fc>
  405b3c:	mov	x1, x19
  405b40:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405b44:	add	x0, x0, #0x81e
  405b48:	bl	404e10 <fputs@plt>
  405b4c:	b	405adc <_start@@Base+0x4fc>
  405b50:	mov	x1, x19
  405b54:	mov	x0, x23
  405b58:	bl	404e10 <fputs@plt>
  405b5c:	b	405a4c <_start@@Base+0x46c>
  405b60:	mov	x2, x1
  405b64:	mov	x1, x0
  405b68:	mov	x0, #0x0                   	// #0
  405b6c:	b	405790 <_start@@Base+0x1b0>
  405b70:	mov	x12, #0x10a0                	// #4256
  405b74:	sub	sp, sp, x12
  405b78:	stp	x29, x30, [sp]
  405b7c:	mov	x29, sp
  405b80:	stp	x19, x20, [sp, #16]
  405b84:	mov	w19, w0
  405b88:	mov	x20, x2
  405b8c:	add	x0, sp, #0x88
  405b90:	mov	x2, #0x1014                	// #4116
  405b94:	str	x21, [sp, #32]
  405b98:	mov	w21, w1
  405b9c:	mov	w1, #0x0                   	// #0
  405ba0:	bl	404fe0 <memset@plt>
  405ba4:	mov	x0, #0x14                  	// #20
  405ba8:	mov	w2, #0x10                  	// #16
  405bac:	movk	x0, #0x10, lsl #32
  405bb0:	mov	w1, #0x0                   	// #0
  405bb4:	movk	x0, #0x5, lsl #48
  405bb8:	str	x0, [sp, #136]
  405bbc:	mov	w0, #0x3                   	// #3
  405bc0:	str	xzr, [sp, #56]
  405bc4:	strb	w0, [sp, #152]
  405bc8:	add	x0, sp, #0x50
  405bcc:	bl	40abec <rtnl_open_byproto@@Base>
  405bd0:	tbz	w0, #31, 405bf0 <_start@@Base+0x610>
  405bd4:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405bd8:	ldr	x1, [x0, #792]
  405bdc:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405be0:	add	x0, x0, #0x85f
  405be4:	bl	404e10 <fputs@plt>
  405be8:	mov	w0, #0x1                   	// #1
  405bec:	bl	404e20 <exit@plt>
  405bf0:	cmp	w19, #0x3
  405bf4:	b.ne	405d50 <_start@@Base+0x770>  // b.any
  405bf8:	cmp	w21, #0x2
  405bfc:	b.eq	405c30 <_start@@Base+0x650>  // b.none
  405c00:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405c04:	ldr	x1, [x0, #792]
  405c08:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405c0c:	add	x0, x0, #0x883
  405c10:	bl	404e10 <fputs@plt>
  405c14:	mov	w0, #0xffffffff            	// #-1
  405c18:	mov	x12, #0x10a0                	// #4256
  405c1c:	ldp	x29, x30, [sp]
  405c20:	ldp	x19, x20, [sp, #16]
  405c24:	ldr	x21, [sp, #32]
  405c28:	add	sp, sp, x12
  405c2c:	ret
  405c30:	ldr	x0, [x20]
  405c34:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405c38:	add	x1, x1, #0xdd9
  405c3c:	bl	406fc4 <matches@@Base>
  405c40:	tst	w0, #0xff
  405c44:	b.ne	405ca0 <_start@@Base+0x6c0>  // b.any
  405c48:	ldr	x1, [x20, #8]
  405c4c:	mov	x2, #0x10                  	// #16
  405c50:	add	x0, sp, #0x40
  405c54:	bl	40815c <strlcpy@@Base>
  405c58:	add	x0, sp, #0x40
  405c5c:	bl	404e00 <strlen@plt>
  405c60:	add	x3, sp, #0x40
  405c64:	add	w4, w0, #0x1
  405c68:	mov	w2, w21
  405c6c:	mov	w1, #0x80                  	// #128
  405c70:	add	x0, sp, #0x88
  405c74:	bl	40bdcc <addattr_l@@Base>
  405c78:	add	x2, sp, #0x38
  405c7c:	add	x1, sp, #0x88
  405c80:	add	x0, sp, #0x50
  405c84:	bl	40b930 <rtnl_talk@@Base>
  405c88:	tbz	w0, #31, 405d0c <_start@@Base+0x72c>
  405c8c:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405c90:	ldr	x1, [x0, #792]
  405c94:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405c98:	add	x0, x0, #0x8b7
  405c9c:	b	405cdc <_start@@Base+0x6fc>
  405ca0:	ldr	x0, [x20]
  405ca4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405ca8:	add	x1, x1, #0xcd2
  405cac:	bl	406fc4 <matches@@Base>
  405cb0:	tst	w0, #0xff
  405cb4:	b.ne	405cf8 <_start@@Base+0x718>  // b.any
  405cb8:	ldr	x1, [x20, #8]
  405cbc:	add	x0, sp, #0x40
  405cc0:	mov	w2, #0x0                   	// #0
  405cc4:	bl	406578 <get_u16@@Base>
  405cc8:	cbz	w0, 405ce8 <_start@@Base+0x708>
  405ccc:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405cd0:	ldr	x1, [x0, #792]
  405cd4:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405cd8:	add	x0, x0, #0x89b
  405cdc:	bl	404e10 <fputs@plt>
  405ce0:	mov	w19, #0xffffffff            	// #-1
  405ce4:	b	405d24 <_start@@Base+0x744>
  405ce8:	mov	w4, w21
  405cec:	add	x3, sp, #0x40
  405cf0:	mov	w2, #0x1                   	// #1
  405cf4:	b	405c6c <_start@@Base+0x68c>
  405cf8:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405cfc:	ldr	x1, [x0, #792]
  405d00:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405d04:	add	x0, x0, #0x8a9
  405d08:	b	405cdc <_start@@Base+0x6fc>
  405d0c:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405d10:	ldr	x1, [x0, #800]
  405d14:	ldr	x0, [sp, #56]
  405d18:	bl	405b60 <_start@@Base+0x580>
  405d1c:	tbnz	w0, #31, 405d3c <_start@@Base+0x75c>
  405d20:	mov	w19, #0x0                   	// #0
  405d24:	ldr	x0, [sp, #56]
  405d28:	bl	405160 <free@plt>
  405d2c:	add	x0, sp, #0x50
  405d30:	bl	40abbc <rtnl_close@@Base>
  405d34:	mov	w0, w19
  405d38:	b	405c18 <_start@@Base+0x638>
  405d3c:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405d40:	ldr	x1, [x0, #792]
  405d44:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405d48:	add	x0, x0, #0x8d4
  405d4c:	b	405cdc <_start@@Base+0x6fc>
  405d50:	cbnz	w19, 405d20 <_start@@Base+0x740>
  405d54:	mov	w0, #0x301                 	// #769
  405d58:	ldr	w2, [sp, #136]
  405d5c:	strh	w0, [sp, #142]
  405d60:	add	x1, sp, #0x88
  405d64:	ldr	w0, [sp, #108]
  405d68:	add	w0, w0, #0x1
  405d6c:	stp	w0, w0, [sp, #108]
  405d70:	str	w0, [sp, #144]
  405d74:	add	x0, sp, #0x50
  405d78:	bl	40b3f0 <rtnl_send@@Base>
  405d7c:	tbz	w0, #31, 405d90 <_start@@Base+0x7b0>
  405d80:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405d84:	add	x0, x0, #0x8e5
  405d88:	bl	404e30 <perror@plt>
  405d8c:	b	405ce0 <_start@@Base+0x700>
  405d90:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405d94:	mov	w3, #0x0                   	// #0
  405d98:	adrp	x1, 405000 <sendmsg@plt>
  405d9c:	add	x1, x1, #0xb60
  405da0:	ldr	x2, [x0, #800]
  405da4:	add	x0, sp, #0x50
  405da8:	bl	40b610 <rtnl_dump_filter_nc@@Base>
  405dac:	b	405d24 <_start@@Base+0x744>
  405db0:	stp	x29, x30, [sp, #-96]!
  405db4:	cmp	w1, #0x1
  405db8:	mov	x29, sp
  405dbc:	stp	x19, x20, [sp, #16]
  405dc0:	b.gt	405de0 <_start@@Base+0x800>
  405dc4:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405dc8:	ldr	x1, [x0, #792]
  405dcc:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405dd0:	add	x0, x0, #0x902
  405dd4:	bl	404e10 <fputs@plt>
  405dd8:	mov	w0, #0xffffffff            	// #-1
  405ddc:	b	405e44 <_start@@Base+0x864>
  405de0:	ldr	x0, [x2, #8]
  405de4:	mov	w20, w1
  405de8:	mov	x19, x2
  405dec:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405df0:	add	x1, x1, #0x91b
  405df4:	bl	406fc4 <matches@@Base>
  405df8:	tst	w0, #0xff
  405dfc:	b.ne	405e50 <_start@@Base+0x870>  // b.any
  405e00:	add	x0, sp, #0x28
  405e04:	mov	w2, #0x10                  	// #16
  405e08:	mov	w1, #0x8000                	// #32768
  405e0c:	bl	40abec <rtnl_open_byproto@@Base>
  405e10:	tbz	w0, #31, 405e28 <_start@@Base+0x848>
  405e14:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405e18:	ldr	x1, [x0, #792]
  405e1c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405e20:	add	x0, x0, #0x923
  405e24:	b	405dd4 <_start@@Base+0x7f4>
  405e28:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405e2c:	adrp	x1, 405000 <sendmsg@plt>
  405e30:	add	x1, x1, #0x790
  405e34:	ldr	x2, [x0, #800]
  405e38:	add	x0, sp, #0x28
  405e3c:	bl	40b9fc <rtnl_listen@@Base>
  405e40:	asr	w0, w0, #31
  405e44:	ldp	x19, x20, [sp, #16]
  405e48:	ldp	x29, x30, [sp], #96
  405e4c:	ret
  405e50:	ldr	x0, [x19, #8]
  405e54:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405e58:	add	x1, x1, #0x946
  405e5c:	bl	406fc4 <matches@@Base>
  405e60:	tst	w0, #0xff
  405e64:	b.ne	405e7c <_start@@Base+0x89c>  // b.any
  405e68:	add	x2, x19, #0x10
  405e6c:	sub	w1, w20, #0x2
  405e70:	mov	w0, #0x3                   	// #3
  405e74:	bl	405b70 <_start@@Base+0x590>
  405e78:	b	405e44 <_start@@Base+0x864>
  405e7c:	ldr	x0, [x19, #8]
  405e80:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405e84:	add	x1, x1, #0x94a
  405e88:	bl	406fc4 <matches@@Base>
  405e8c:	tst	w0, #0xff
  405e90:	b.ne	405ea4 <_start@@Base+0x8c4>  // b.any
  405e94:	add	x2, x19, #0x10
  405e98:	sub	w1, w20, #0x2
  405e9c:	mov	w0, #0x0                   	// #0
  405ea0:	b	405e74 <_start@@Base+0x894>
  405ea4:	ldr	x0, [x19, #8]
  405ea8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405eac:	add	x1, x1, #0x94f
  405eb0:	bl	406fc4 <matches@@Base>
  405eb4:	tst	w0, #0xff
  405eb8:	b.eq	405e94 <_start@@Base+0x8b4>  // b.none
  405ebc:	ldr	x0, [x19, #8]
  405ec0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405ec4:	add	x1, x1, #0x954
  405ec8:	bl	406fc4 <matches@@Base>
  405ecc:	tst	w0, #0xff
  405ed0:	b.eq	405e94 <_start@@Base+0x8b4>  // b.none
  405ed4:	ldr	x0, [x19, #8]
  405ed8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405edc:	add	x1, x1, #0x672
  405ee0:	bl	406fc4 <matches@@Base>
  405ee4:	tst	w0, #0xff
  405ee8:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405eec:	b.ne	405f00 <_start@@Base+0x920>  // b.any
  405ef0:	ldr	x1, [x0, #792]
  405ef4:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  405ef8:	add	x0, x0, #0x958
  405efc:	b	405dd4 <_start@@Base+0x7f4>
  405f00:	ldr	x0, [x0, #792]
  405f04:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  405f08:	ldr	x2, [x19, #8]
  405f0c:	add	x1, x1, #0x9f8
  405f10:	bl	405330 <fprintf@plt>
  405f14:	b	405dd8 <_start@@Base+0x7f8>
  405f18:	ldrh	w1, [x0, #6]
  405f1c:	cmp	w1, #0x2
  405f20:	b.eq	405f30 <_start@@Base+0x950>  // b.none
  405f24:	cmp	w1, #0xa
  405f28:	b.eq	405f64 <_start@@Base+0x984>  // b.none
  405f2c:	ret
  405f30:	ldr	w2, [x0, #8]
  405f34:	ldrh	w1, [x0]
  405f38:	cbnz	w2, 405f44 <_start@@Base+0x964>
  405f3c:	orr	w1, w1, #0x6
  405f40:	b	405f5c <_start@@Base+0x97c>
  405f44:	and	w2, w2, #0xf0
  405f48:	orr	w3, w1, #0x2
  405f4c:	cmp	w2, #0xe0
  405f50:	mov	w4, #0xa                   	// #10
  405f54:	orr	w1, w1, w4
  405f58:	csel	w1, w1, w3, eq  // eq = none
  405f5c:	strh	w1, [x0]
  405f60:	b	405f2c <_start@@Base+0x94c>
  405f64:	ldr	w2, [x0, #8]
  405f68:	ldrh	w1, [x0]
  405f6c:	cbnz	w2, 405f88 <_start@@Base+0x9a8>
  405f70:	ldr	w2, [x0, #12]
  405f74:	cbnz	w2, 405f88 <_start@@Base+0x9a8>
  405f78:	ldr	w2, [x0, #16]
  405f7c:	cbnz	w2, 405f88 <_start@@Base+0x9a8>
  405f80:	ldr	w2, [x0, #20]
  405f84:	cbz	w2, 405f3c <_start@@Base+0x95c>
  405f88:	ldrb	w3, [x0, #8]
  405f8c:	orr	w2, w1, #0x2
  405f90:	mov	w4, #0xa                   	// #10
  405f94:	orr	w1, w1, w4
  405f98:	cmp	w3, #0xff
  405f9c:	csel	w1, w1, w2, eq  // eq = none
  405fa0:	b	405f5c <_start@@Base+0x97c>
  405fa4:	stp	x29, x30, [sp, #-32]!
  405fa8:	mov	x29, sp
  405fac:	stp	x19, x20, [sp, #16]
  405fb0:	mov	x20, x0
  405fb4:	ldrb	w19, [x20]
  405fb8:	cbnz	w19, 405fcc <_start@@Base+0x9ec>
  405fbc:	mov	w0, #0x0                   	// #0
  405fc0:	ldp	x19, x20, [sp, #16]
  405fc4:	ldp	x29, x30, [sp], #32
  405fc8:	ret
  405fcc:	cmp	w19, #0x2f
  405fd0:	b.eq	405ff0 <_start@@Base+0xa10>  // b.none
  405fd4:	bl	405100 <__ctype_b_loc@plt>
  405fd8:	ubfiz	x19, x19, #1, #8
  405fdc:	ldr	x0, [x0]
  405fe0:	ldrh	w0, [x0, x19]
  405fe4:	tbnz	w0, #13, 405ff0 <_start@@Base+0xa10>
  405fe8:	add	x20, x20, #0x1
  405fec:	b	405fb4 <_start@@Base+0x9d4>
  405ff0:	mov	w0, #0xffffffff            	// #-1
  405ff4:	b	405fc0 <_start@@Base+0x9e0>

0000000000405ff8 <read_prop@@Base>:
  405ff8:	stp	x29, x30, [sp, #-288]!
  405ffc:	mov	x4, x1
  406000:	mov	x3, x0
  406004:	mov	x29, sp
  406008:	stp	x19, x20, [sp, #16]
  40600c:	add	x19, sp, #0xa0
  406010:	mov	x0, x19
  406014:	stp	x21, x22, [sp, #32]
  406018:	mov	x22, x1
  40601c:	mov	x1, #0x80                  	// #128
  406020:	str	x23, [sp, #48]
  406024:	mov	x23, x2
  406028:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  40602c:	add	x2, x2, #0xa28
  406030:	bl	404f10 <snprintf@plt>
  406034:	sub	w0, w0, #0x1
  406038:	cmp	w0, #0x7e
  40603c:	b.ls	406060 <read_prop@@Base+0x68>  // b.plast
  406040:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406044:	ldr	x0, [x0, #3992]
  406048:	ldr	x1, [x0]
  40604c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  406050:	add	x0, x0, #0xa3d
  406054:	bl	404e10 <fputs@plt>
  406058:	mov	w0, #0xffffffff            	// #-1
  40605c:	b	4061c4 <read_prop@@Base+0x1cc>
  406060:	mov	x0, x19
  406064:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  406068:	add	x1, x1, #0x37
  40606c:	bl	405200 <fopen64@plt>
  406070:	mov	x20, x0
  406074:	cbnz	x0, 4060ac <read_prop@@Base+0xb4>
  406078:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40607c:	ldr	x0, [x0, #3992]
  406080:	ldr	x20, [x0]
  406084:	bl	4052f0 <__errno_location@plt>
  406088:	ldr	w0, [x0]
  40608c:	bl	405070 <strerror@plt>
  406090:	mov	x3, x0
  406094:	mov	x2, x19
  406098:	mov	x0, x20
  40609c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4060a0:	add	x1, x1, #0xa64
  4060a4:	bl	405330 <fprintf@plt>
  4060a8:	b	406058 <read_prop@@Base+0x60>
  4060ac:	add	x21, sp, #0x50
  4060b0:	mov	x2, x0
  4060b4:	mov	w1, #0x50                  	// #80
  4060b8:	mov	x0, x21
  4060bc:	bl	405340 <fgets@plt>
  4060c0:	cbnz	x0, 40610c <read_prop@@Base+0x114>
  4060c4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4060c8:	mov	x3, x19
  4060cc:	mov	x2, x22
  4060d0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4060d4:	ldr	x0, [x0, #3992]
  4060d8:	add	x1, x1, #0xa72
  4060dc:	ldr	x0, [x0]
  4060e0:	bl	405330 <fprintf@plt>
  4060e4:	mov	x0, x20
  4060e8:	bl	404f40 <fclose@plt>
  4060ec:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4060f0:	mov	x2, x19
  4060f4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4060f8:	add	x1, x1, #0xad6
  4060fc:	ldr	x0, [x0, #3992]
  406100:	ldr	x0, [x0]
  406104:	bl	405330 <fprintf@plt>
  406108:	b	406058 <read_prop@@Base+0x60>
  40610c:	mov	x0, x21
  406110:	mov	w1, #0xa                   	// #10
  406114:	bl	4051a0 <strchr@plt>
  406118:	cbz	x0, 406120 <read_prop@@Base+0x128>
  40611c:	strb	wzr, [x0]
  406120:	mov	x0, x20
  406124:	bl	404f40 <fclose@plt>
  406128:	add	x1, sp, #0x48
  40612c:	mov	x0, x21
  406130:	mov	w2, #0x0                   	// #0
  406134:	bl	405110 <strtol@plt>
  406138:	mov	x20, x0
  40613c:	ldr	x0, [sp, #72]
  406140:	ldrb	w1, [x0]
  406144:	cbnz	w1, 406150 <read_prop@@Base+0x158>
  406148:	cmp	x0, x21
  40614c:	b.ne	406174 <read_prop@@Base+0x17c>  // b.any
  406150:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406154:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406158:	mov	x3, x19
  40615c:	mov	x2, x21
  406160:	ldr	x0, [x0, #3992]
  406164:	add	x1, x1, #0xaa1
  406168:	ldr	x0, [x0]
  40616c:	bl	405330 <fprintf@plt>
  406170:	b	4060ec <read_prop@@Base+0xf4>
  406174:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  406178:	add	x0, x20, x0
  40617c:	cmn	x0, #0x3
  406180:	b.ls	4061bc <read_prop@@Base+0x1c4>  // b.plast
  406184:	bl	4052f0 <__errno_location@plt>
  406188:	ldr	w0, [x0]
  40618c:	cmp	w0, #0x22
  406190:	b.ne	4061bc <read_prop@@Base+0x1c4>  // b.any
  406194:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406198:	ldr	x1, [x1, #3992]
  40619c:	ldr	x20, [x1]
  4061a0:	bl	405070 <strerror@plt>
  4061a4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4061a8:	mov	x3, x0
  4061ac:	mov	x2, x19
  4061b0:	add	x1, x1, #0xac8
  4061b4:	mov	x0, x20
  4061b8:	b	40616c <read_prop@@Base+0x174>
  4061bc:	mov	w0, #0x0                   	// #0
  4061c0:	str	x20, [x23]
  4061c4:	ldp	x19, x20, [sp, #16]
  4061c8:	ldp	x21, x22, [sp, #32]
  4061cc:	ldr	x23, [sp, #48]
  4061d0:	ldp	x29, x30, [sp], #288
  4061d4:	ret

00000000004061d8 <get_hex@@Base>:
  4061d8:	and	w0, w0, #0xff
  4061dc:	sub	w1, w0, #0x41
  4061e0:	and	w1, w1, #0xff
  4061e4:	cmp	w1, #0x5
  4061e8:	b.hi	4061f4 <get_hex@@Base+0x1c>  // b.pmore
  4061ec:	sub	w0, w0, #0x37
  4061f0:	ret
  4061f4:	sub	w1, w0, #0x61
  4061f8:	and	w1, w1, #0xff
  4061fc:	cmp	w1, #0x5
  406200:	b.hi	40620c <get_hex@@Base+0x34>  // b.pmore
  406204:	sub	w0, w0, #0x57
  406208:	b	4061f0 <get_hex@@Base+0x18>
  40620c:	sub	w0, w0, #0x30
  406210:	and	w1, w0, #0xff
  406214:	cmp	w1, #0x9
  406218:	csinv	w0, w0, wzr, ls  // ls = plast
  40621c:	b	4061f0 <get_hex@@Base+0x18>

0000000000406220 <get_integer@@Base>:
  406220:	cbnz	x1, 40622c <get_integer@@Base+0xc>
  406224:	mov	w0, #0xffffffff            	// #-1
  406228:	ret
  40622c:	stp	x29, x30, [sp, #-48]!
  406230:	mov	x29, sp
  406234:	stp	x19, x20, [sp, #16]
  406238:	mov	x20, x0
  40623c:	mov	x19, x1
  406240:	ldrb	w0, [x1]
  406244:	cbz	w0, 4062a4 <get_integer@@Base+0x84>
  406248:	add	x1, sp, #0x28
  40624c:	mov	x0, x19
  406250:	bl	405110 <strtol@plt>
  406254:	ldr	x1, [sp, #40]
  406258:	cbz	x1, 4062a4 <get_integer@@Base+0x84>
  40625c:	cmp	x1, x19
  406260:	b.eq	4062a4 <get_integer@@Base+0x84>  // b.none
  406264:	ldrb	w1, [x1]
  406268:	cbnz	w1, 4062a4 <get_integer@@Base+0x84>
  40626c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  406270:	add	x1, x0, x1
  406274:	cmn	x1, #0x3
  406278:	b.hi	4062a4 <get_integer@@Base+0x84>  // b.pmore
  40627c:	mov	x1, #0x80000000            	// #2147483648
  406280:	add	x1, x0, x1
  406284:	mov	x2, #0xffffffff            	// #4294967295
  406288:	cmp	x1, x2
  40628c:	b.hi	4062a4 <get_integer@@Base+0x84>  // b.pmore
  406290:	str	w0, [x20]
  406294:	mov	w0, #0x0                   	// #0
  406298:	ldp	x19, x20, [sp, #16]
  40629c:	ldp	x29, x30, [sp], #48
  4062a0:	ret
  4062a4:	mov	w0, #0xffffffff            	// #-1
  4062a8:	b	406298 <get_integer@@Base+0x78>

00000000004062ac <mask2bits@@Base>:
  4062ac:	rev	w1, w0
  4062b0:	neg	w0, w1
  4062b4:	bics	w0, w0, w1
  4062b8:	b.eq	4062cc <mask2bits@@Base+0x20>  // b.none
  4062bc:	mov	w0, #0xffffffff            	// #-1
  4062c0:	b	4062d0 <mask2bits@@Base+0x24>
  4062c4:	add	w0, w0, #0x1
  4062c8:	lsl	w1, w1, #1
  4062cc:	cbnz	w1, 4062c4 <mask2bits@@Base+0x18>
  4062d0:	ret

00000000004062d4 <get_unsigned@@Base>:
  4062d4:	cbnz	x1, 4062f0 <get_unsigned@@Base+0x1c>
  4062d8:	mov	w0, #0xffffffff            	// #-1
  4062dc:	ret
  4062e0:	mov	w0, #0xffffffff            	// #-1
  4062e4:	ldp	x19, x20, [sp, #16]
  4062e8:	ldp	x29, x30, [sp], #48
  4062ec:	ret
  4062f0:	stp	x29, x30, [sp, #-48]!
  4062f4:	mov	x29, sp
  4062f8:	stp	x19, x20, [sp, #16]
  4062fc:	mov	x20, x0
  406300:	mov	x19, x1
  406304:	ldrb	w0, [x1]
  406308:	cbz	w0, 4062e0 <get_unsigned@@Base+0xc>
  40630c:	add	x1, sp, #0x28
  406310:	mov	x0, x19
  406314:	bl	404df0 <strtoul@plt>
  406318:	ldr	x1, [sp, #40]
  40631c:	cbz	x1, 4062e0 <get_unsigned@@Base+0xc>
  406320:	cmp	x1, x19
  406324:	b.eq	4062e0 <get_unsigned@@Base+0xc>  // b.none
  406328:	ldrb	w1, [x1]
  40632c:	cbnz	w1, 4062e0 <get_unsigned@@Base+0xc>
  406330:	mov	x1, #0xffffffff            	// #4294967295
  406334:	cmp	x0, x1
  406338:	b.hi	4062e0 <get_unsigned@@Base+0xc>  // b.pmore
  40633c:	str	w0, [x20]
  406340:	mov	w0, #0x0                   	// #0
  406344:	b	4062e4 <get_unsigned@@Base+0x10>

0000000000406348 <get_time_rtt@@Base>:
  406348:	stp	x29, x30, [sp, #-80]!
  40634c:	mov	x29, sp
  406350:	stp	x19, x20, [sp, #16]
  406354:	mov	x20, x1
  406358:	mov	w1, #0x2e                  	// #46
  40635c:	stp	x21, x22, [sp, #32]
  406360:	mov	x21, x0
  406364:	mov	x22, x2
  406368:	mov	x0, x20
  40636c:	str	d8, [sp, #48]
  406370:	bl	4051a0 <strchr@plt>
  406374:	add	x1, sp, #0x48
  406378:	cbz	x0, 406460 <get_time_rtt@@Base+0x118>
  40637c:	mov	x0, x20
  406380:	bl	404e60 <strtod@plt>
  406384:	fcmpe	d0, #0.0
  406388:	fmov	d8, d0
  40638c:	b.pl	4063a8 <get_time_rtt@@Base+0x60>  // b.nfrst
  406390:	mov	w0, #0xffffffff            	// #-1
  406394:	ldp	x19, x20, [sp, #16]
  406398:	ldp	x21, x22, [sp, #32]
  40639c:	ldr	d8, [sp, #48]
  4063a0:	ldp	x29, x30, [sp], #80
  4063a4:	ret
  4063a8:	ldr	x0, [sp, #72]
  4063ac:	cbz	x0, 406390 <get_time_rtt@@Base+0x48>
  4063b0:	cmp	x0, x20
  4063b4:	b.eq	406390 <get_time_rtt@@Base+0x48>  // b.none
  4063b8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  4063bc:	fmov	d0, x0
  4063c0:	fcmp	d8, d0
  4063c4:	b.ne	4063d8 <get_time_rtt@@Base+0x90>  // b.any
  4063c8:	bl	4052f0 <__errno_location@plt>
  4063cc:	ldr	w0, [x0]
  4063d0:	cmp	w0, #0x22
  4063d4:	b.eq	406390 <get_time_rtt@@Base+0x48>  // b.none
  4063d8:	ldr	x19, [sp, #72]
  4063dc:	cmp	x19, x20
  4063e0:	b.eq	406390 <get_time_rtt@@Base+0x48>  // b.none
  4063e4:	mov	w0, #0x1                   	// #1
  4063e8:	str	w0, [x22]
  4063ec:	ldrb	w0, [x19]
  4063f0:	cbz	w0, 406444 <get_time_rtt@@Base+0xfc>
  4063f4:	str	wzr, [x22]
  4063f8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4063fc:	mov	x0, x19
  406400:	add	x1, x1, #0xad4
  406404:	bl	405030 <strcasecmp@plt>
  406408:	cbz	w0, 406434 <get_time_rtt@@Base+0xec>
  40640c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406410:	mov	x0, x19
  406414:	add	x1, x1, #0xaeb
  406418:	bl	405030 <strcasecmp@plt>
  40641c:	cbz	w0, 406434 <get_time_rtt@@Base+0xec>
  406420:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406424:	mov	x0, x19
  406428:	add	x1, x1, #0xaf0
  40642c:	bl	405030 <strcasecmp@plt>
  406430:	cbnz	w0, 4064a0 <get_time_rtt@@Base+0x158>
  406434:	mov	x0, #0x400000000000        	// #70368744177664
  406438:	movk	x0, #0x408f, lsl #48
  40643c:	fmov	d0, x0
  406440:	fmul	d8, d8, d0
  406444:	fcvtzu	w1, d8
  406448:	ucvtf	d0, w1
  40644c:	fcmpe	d0, d8
  406450:	b.mi	4064e0 <get_time_rtt@@Base+0x198>  // b.first
  406454:	mov	w0, #0x0                   	// #0
  406458:	str	w1, [x21]
  40645c:	b	406394 <get_time_rtt@@Base+0x4c>
  406460:	mov	x0, x20
  406464:	mov	w2, #0x0                   	// #0
  406468:	bl	404df0 <strtoul@plt>
  40646c:	mov	x19, x0
  406470:	ldr	x0, [sp, #72]
  406474:	cbz	x0, 406390 <get_time_rtt@@Base+0x48>
  406478:	cmp	x0, x20
  40647c:	b.eq	406390 <get_time_rtt@@Base+0x48>  // b.none
  406480:	cmn	x19, #0x1
  406484:	b.ne	406498 <get_time_rtt@@Base+0x150>  // b.any
  406488:	bl	4052f0 <__errno_location@plt>
  40648c:	ldr	w0, [x0]
  406490:	cmp	w0, #0x22
  406494:	b.eq	406390 <get_time_rtt@@Base+0x48>  // b.none
  406498:	ucvtf	d8, x19
  40649c:	b	4063d8 <get_time_rtt@@Base+0x90>
  4064a0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4064a4:	mov	x0, x19
  4064a8:	add	x1, x1, #0xe74
  4064ac:	bl	405030 <strcasecmp@plt>
  4064b0:	cbz	w0, 406444 <get_time_rtt@@Base+0xfc>
  4064b4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4064b8:	mov	x0, x19
  4064bc:	add	x1, x1, #0xaea
  4064c0:	bl	405030 <strcasecmp@plt>
  4064c4:	cbz	w0, 406444 <get_time_rtt@@Base+0xfc>
  4064c8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4064cc:	mov	x0, x19
  4064d0:	add	x1, x1, #0xaef
  4064d4:	bl	405030 <strcasecmp@plt>
  4064d8:	cbz	w0, 406444 <get_time_rtt@@Base+0xfc>
  4064dc:	b	406390 <get_time_rtt@@Base+0x48>
  4064e0:	add	w1, w1, #0x1
  4064e4:	b	406454 <get_time_rtt@@Base+0x10c>

00000000004064e8 <get_u64@@Base>:
  4064e8:	cbnz	x1, 406508 <get_u64@@Base+0x20>
  4064ec:	mov	w0, #0xffffffff            	// #-1
  4064f0:	ret
  4064f4:	mov	w0, #0xffffffff            	// #-1
  4064f8:	ldp	x19, x20, [sp, #16]
  4064fc:	ldr	x21, [sp, #32]
  406500:	ldp	x29, x30, [sp], #64
  406504:	ret
  406508:	stp	x29, x30, [sp, #-64]!
  40650c:	mov	x29, sp
  406510:	stp	x19, x20, [sp, #16]
  406514:	mov	x19, x1
  406518:	str	x21, [sp, #32]
  40651c:	mov	x21, x0
  406520:	ldrb	w0, [x1]
  406524:	cbz	w0, 4064f4 <get_u64@@Base+0xc>
  406528:	add	x1, sp, #0x38
  40652c:	mov	x0, x19
  406530:	bl	4051b0 <strtoull@plt>
  406534:	mov	x20, x0
  406538:	ldr	x0, [sp, #56]
  40653c:	cbz	x0, 4064f4 <get_u64@@Base+0xc>
  406540:	cmp	x0, x19
  406544:	b.eq	4064f4 <get_u64@@Base+0xc>  // b.none
  406548:	ldrb	w0, [x0]
  40654c:	cbnz	w0, 4064f4 <get_u64@@Base+0xc>
  406550:	cmn	x20, #0x1
  406554:	b.ne	406568 <get_u64@@Base+0x80>  // b.any
  406558:	bl	4052f0 <__errno_location@plt>
  40655c:	ldr	w0, [x0]
  406560:	cmp	w0, #0x22
  406564:	b.eq	4064f4 <get_u64@@Base+0xc>  // b.none
  406568:	mov	w0, #0x0                   	// #0
  40656c:	str	x20, [x21]
  406570:	b	4064f8 <get_u64@@Base+0x10>

0000000000406574 <get_u32@@Base>:
  406574:	b	4062d4 <get_unsigned@@Base>

0000000000406578 <get_u16@@Base>:
  406578:	cbnz	x1, 406594 <get_u16@@Base+0x1c>
  40657c:	mov	w0, #0xffffffff            	// #-1
  406580:	ret
  406584:	mov	w0, #0xffffffff            	// #-1
  406588:	ldp	x19, x20, [sp, #16]
  40658c:	ldp	x29, x30, [sp], #48
  406590:	ret
  406594:	stp	x29, x30, [sp, #-48]!
  406598:	mov	x29, sp
  40659c:	stp	x19, x20, [sp, #16]
  4065a0:	mov	x20, x0
  4065a4:	mov	x19, x1
  4065a8:	ldrb	w0, [x1]
  4065ac:	cbz	w0, 406584 <get_u16@@Base+0xc>
  4065b0:	add	x1, sp, #0x28
  4065b4:	mov	x0, x19
  4065b8:	bl	404df0 <strtoul@plt>
  4065bc:	ldr	x1, [sp, #40]
  4065c0:	cbz	x1, 406584 <get_u16@@Base+0xc>
  4065c4:	cmp	x1, x19
  4065c8:	b.eq	406584 <get_u16@@Base+0xc>  // b.none
  4065cc:	ldrb	w1, [x1]
  4065d0:	cbnz	w1, 406584 <get_u16@@Base+0xc>
  4065d4:	mov	x1, #0xffff                	// #65535
  4065d8:	cmp	x0, x1
  4065dc:	b.hi	406584 <get_u16@@Base+0xc>  // b.pmore
  4065e0:	strh	w0, [x20]
  4065e4:	mov	w0, #0x0                   	// #0
  4065e8:	b	406588 <get_u16@@Base+0x10>

00000000004065ec <get_u8@@Base>:
  4065ec:	cbnz	x1, 406608 <get_u8@@Base+0x1c>
  4065f0:	mov	w0, #0xffffffff            	// #-1
  4065f4:	ret
  4065f8:	mov	w0, #0xffffffff            	// #-1
  4065fc:	ldp	x19, x20, [sp, #16]
  406600:	ldp	x29, x30, [sp], #48
  406604:	ret
  406608:	stp	x29, x30, [sp, #-48]!
  40660c:	mov	x29, sp
  406610:	stp	x19, x20, [sp, #16]
  406614:	mov	x20, x0
  406618:	mov	x19, x1
  40661c:	ldrb	w0, [x1]
  406620:	cbz	w0, 4065f8 <get_u8@@Base+0xc>
  406624:	add	x1, sp, #0x28
  406628:	mov	x0, x19
  40662c:	bl	404df0 <strtoul@plt>
  406630:	ldr	x1, [sp, #40]
  406634:	cbz	x1, 4065f8 <get_u8@@Base+0xc>
  406638:	cmp	x1, x19
  40663c:	b.eq	4065f8 <get_u8@@Base+0xc>  // b.none
  406640:	ldrb	w1, [x1]
  406644:	cbnz	w1, 4065f8 <get_u8@@Base+0xc>
  406648:	cmp	x0, #0xff
  40664c:	b.hi	4065f8 <get_u8@@Base+0xc>  // b.pmore
  406650:	strb	w0, [x20]
  406654:	mov	w0, #0x0                   	// #0
  406658:	b	4065fc <get_u8@@Base+0x10>

000000000040665c <get_s64@@Base>:
  40665c:	stp	x29, x30, [sp, #-64]!
  406660:	mov	x29, sp
  406664:	stp	x19, x20, [sp, #16]
  406668:	mov	x19, x1
  40666c:	stp	x21, x22, [sp, #32]
  406670:	mov	x21, x0
  406674:	mov	w22, w2
  406678:	bl	4052f0 <__errno_location@plt>
  40667c:	str	wzr, [x0]
  406680:	cbnz	x19, 406698 <get_s64@@Base+0x3c>
  406684:	mov	w0, #0xffffffff            	// #-1
  406688:	ldp	x19, x20, [sp, #16]
  40668c:	ldp	x21, x22, [sp, #32]
  406690:	ldp	x29, x30, [sp], #64
  406694:	ret
  406698:	mov	x20, x0
  40669c:	ldrb	w0, [x19]
  4066a0:	cbz	w0, 406684 <get_s64@@Base+0x28>
  4066a4:	add	x1, sp, #0x38
  4066a8:	mov	w2, w22
  4066ac:	mov	x0, x19
  4066b0:	bl	404e50 <strtoll@plt>
  4066b4:	ldr	x1, [sp, #56]
  4066b8:	cbz	x1, 406684 <get_s64@@Base+0x28>
  4066bc:	cmp	x1, x19
  4066c0:	b.eq	406684 <get_s64@@Base+0x28>  // b.none
  4066c4:	ldrb	w1, [x1]
  4066c8:	cbnz	w1, 406684 <get_s64@@Base+0x28>
  4066cc:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  4066d0:	add	x1, x0, x1
  4066d4:	cmn	x1, #0x3
  4066d8:	b.ls	4066e8 <get_s64@@Base+0x8c>  // b.plast
  4066dc:	ldr	w1, [x20]
  4066e0:	cmp	w1, #0x22
  4066e4:	b.eq	406684 <get_s64@@Base+0x28>  // b.none
  4066e8:	str	x0, [x21]
  4066ec:	mov	w0, #0x0                   	// #0
  4066f0:	b	406688 <get_s64@@Base+0x2c>

00000000004066f4 <get_s32@@Base>:
  4066f4:	stp	x29, x30, [sp, #-64]!
  4066f8:	mov	x29, sp
  4066fc:	stp	x19, x20, [sp, #16]
  406700:	mov	x20, x0
  406704:	mov	x19, x1
  406708:	str	x21, [sp, #32]
  40670c:	mov	w21, w2
  406710:	bl	4052f0 <__errno_location@plt>
  406714:	str	wzr, [x0]
  406718:	cbnz	x19, 406724 <get_s32@@Base+0x30>
  40671c:	mov	w0, #0xffffffff            	// #-1
  406720:	b	406780 <get_s32@@Base+0x8c>
  406724:	ldrb	w0, [x19]
  406728:	cbz	w0, 40671c <get_s32@@Base+0x28>
  40672c:	add	x1, sp, #0x38
  406730:	mov	w2, w21
  406734:	mov	x0, x19
  406738:	bl	405110 <strtol@plt>
  40673c:	ldr	x1, [sp, #56]
  406740:	cbz	x1, 40671c <get_s32@@Base+0x28>
  406744:	cmp	x1, x19
  406748:	b.eq	40671c <get_s32@@Base+0x28>  // b.none
  40674c:	ldrb	w1, [x1]
  406750:	cbnz	w1, 40671c <get_s32@@Base+0x28>
  406754:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  406758:	add	x1, x0, x1
  40675c:	cmn	x1, #0x3
  406760:	b.hi	40671c <get_s32@@Base+0x28>  // b.pmore
  406764:	mov	x1, #0x80000000            	// #2147483648
  406768:	add	x1, x0, x1
  40676c:	mov	x2, #0xffffffff            	// #4294967295
  406770:	cmp	x1, x2
  406774:	b.hi	40671c <get_s32@@Base+0x28>  // b.pmore
  406778:	str	w0, [x20]
  40677c:	mov	w0, #0x0                   	// #0
  406780:	ldp	x19, x20, [sp, #16]
  406784:	ldr	x21, [sp, #32]
  406788:	ldp	x29, x30, [sp], #64
  40678c:	ret

0000000000406790 <get_be64@@Base>:
  406790:	stp	x29, x30, [sp, #-48]!
  406794:	mov	x29, sp
  406798:	str	x19, [sp, #16]
  40679c:	mov	x19, x0
  4067a0:	add	x0, sp, #0x28
  4067a4:	bl	4064e8 <get_u64@@Base>
  4067a8:	cbnz	w0, 4067c4 <get_be64@@Base+0x34>
  4067ac:	ldr	x1, [sp, #40]
  4067b0:	lsr	x2, x1, #32
  4067b4:	rev	w1, w1
  4067b8:	rev	w2, w2
  4067bc:	orr	x1, x2, x1, lsl #32
  4067c0:	str	x1, [x19]
  4067c4:	ldr	x19, [sp, #16]
  4067c8:	ldp	x29, x30, [sp], #48
  4067cc:	ret

00000000004067d0 <get_be32@@Base>:
  4067d0:	stp	x29, x30, [sp, #-48]!
  4067d4:	mov	x29, sp
  4067d8:	str	x19, [sp, #16]
  4067dc:	mov	x19, x0
  4067e0:	add	x0, sp, #0x2c
  4067e4:	bl	406574 <get_u32@@Base>
  4067e8:	cbnz	w0, 4067f8 <get_be32@@Base+0x28>
  4067ec:	ldr	w1, [sp, #44]
  4067f0:	rev	w1, w1
  4067f4:	str	w1, [x19]
  4067f8:	ldr	x19, [sp, #16]
  4067fc:	ldp	x29, x30, [sp], #48
  406800:	ret

0000000000406804 <get_be16@@Base>:
  406804:	stp	x29, x30, [sp, #-48]!
  406808:	mov	x29, sp
  40680c:	str	x19, [sp, #16]
  406810:	mov	x19, x0
  406814:	add	x0, sp, #0x2e
  406818:	bl	406578 <get_u16@@Base>
  40681c:	cbnz	w0, 40682c <get_be16@@Base+0x28>
  406820:	ldrh	w1, [sp, #46]
  406824:	rev16	w1, w1
  406828:	strh	w1, [x19]
  40682c:	ldr	x19, [sp, #16]
  406830:	ldp	x29, x30, [sp], #48
  406834:	ret

0000000000406838 <get_addr64@@Base>:
  406838:	stp	x29, x30, [sp, #-80]!
  40683c:	mov	x29, sp
  406840:	stp	x19, x20, [sp, #16]
  406844:	mov	x19, x1
  406848:	mov	x20, #0x0                   	// #0
  40684c:	stp	x21, x22, [sp, #32]
  406850:	mov	x21, x0
  406854:	mov	x22, #0xffff                	// #65535
  406858:	stp	x23, x24, [sp, #48]
  40685c:	add	x23, sp, #0x48
  406860:	add	x24, sp, #0x40
  406864:	mov	x1, x23
  406868:	mov	x0, x19
  40686c:	mov	w2, #0x10                  	// #16
  406870:	bl	404df0 <strtoul@plt>
  406874:	cmp	x0, x22
  406878:	b.ls	406894 <get_addr64@@Base+0x5c>  // b.plast
  40687c:	mov	w0, #0xffffffff            	// #-1
  406880:	ldp	x19, x20, [sp, #16]
  406884:	ldp	x21, x22, [sp, #32]
  406888:	ldp	x23, x24, [sp, #48]
  40688c:	ldp	x29, x30, [sp], #80
  406890:	ret
  406894:	ldr	x3, [sp, #72]
  406898:	cmp	x3, x19
  40689c:	b.eq	40687c <get_addr64@@Base+0x44>  // b.none
  4068a0:	rev16	w2, w0
  4068a4:	ldrb	w0, [x3]
  4068a8:	strh	w2, [x24, x20, lsl #1]
  4068ac:	cbz	w0, 4068cc <get_addr64@@Base+0x94>
  4068b0:	cmp	x20, #0x3
  4068b4:	b.eq	40687c <get_addr64@@Base+0x44>  // b.none
  4068b8:	add	x20, x20, #0x1
  4068bc:	cmp	w0, #0x3a
  4068c0:	b.ne	40687c <get_addr64@@Base+0x44>  // b.any
  4068c4:	add	x19, x3, #0x1
  4068c8:	b	406864 <get_addr64@@Base+0x2c>
  4068cc:	ldr	x0, [sp, #64]
  4068d0:	str	x0, [x21]
  4068d4:	mov	w0, #0x1                   	// #1
  4068d8:	b	406880 <get_addr64@@Base+0x48>

00000000004068dc <af_bit_len@@Base>:
  4068dc:	sub	w0, w0, #0x2
  4068e0:	cmp	w0, #0x1a
  4068e4:	b.hi	4068f8 <af_bit_len@@Base+0x1c>  // b.pmore
  4068e8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4068ec:	add	x1, x1, #0xea2
  4068f0:	ldrb	w0, [x1, w0, uxtw]
  4068f4:	ret
  4068f8:	mov	w0, #0x0                   	// #0
  4068fc:	b	4068f4 <af_bit_len@@Base+0x18>

0000000000406900 <get_addr_1@@Base>:
  406900:	stp	x29, x30, [sp, #-80]!
  406904:	mov	x29, sp
  406908:	stp	x19, x20, [sp, #16]
  40690c:	mov	w20, w2
  406910:	mov	x2, #0x108                 	// #264
  406914:	mov	x19, x0
  406918:	stp	x21, x22, [sp, #32]
  40691c:	mov	x21, x1
  406920:	mov	w1, #0x0                   	// #0
  406924:	str	x23, [sp, #48]
  406928:	bl	404fe0 <memset@plt>
  40692c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406930:	mov	x0, x21
  406934:	add	x1, x1, #0xaf5
  406938:	bl	4050f0 <strcmp@plt>
  40693c:	cbnz	w0, 4069a0 <get_addr_1@@Base+0xa0>
  406940:	and	w0, w20, #0xffffffef
  406944:	cmp	w0, #0xc
  406948:	b.ne	406964 <get_addr_1@@Base+0x64>  // b.any
  40694c:	mov	w0, #0xffffffff            	// #-1
  406950:	ldp	x19, x20, [sp, #16]
  406954:	ldp	x21, x22, [sp, #32]
  406958:	ldr	x23, [sp, #48]
  40695c:	ldp	x29, x30, [sp], #80
  406960:	ret
  406964:	strh	w20, [x19, #6]
  406968:	and	w0, w20, #0xffff
  40696c:	bl	4068dc <af_bit_len@@Base>
  406970:	mov	w1, #0x8                   	// #8
  406974:	sdiv	w0, w0, w1
  406978:	strh	w0, [x19, #2]
  40697c:	mov	w0, #0xfffffffe            	// #-2
  406980:	strh	w0, [x19, #4]
  406984:	ldrh	w0, [x19]
  406988:	orr	w0, w0, #0x1
  40698c:	strh	w0, [x19]
  406990:	mov	x0, x19
  406994:	bl	405f18 <_start@@Base+0x938>
  406998:	mov	w0, #0x0                   	// #0
  40699c:	b	406950 <get_addr_1@@Base+0x50>
  4069a0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4069a4:	mov	x0, x21
  4069a8:	add	x1, x1, #0xafd
  4069ac:	bl	4050f0 <strcmp@plt>
  4069b0:	cbz	w0, 4069c8 <get_addr_1@@Base+0xc8>
  4069b4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4069b8:	mov	x0, x21
  4069bc:	add	x1, x1, #0xb01
  4069c0:	bl	4050f0 <strcmp@plt>
  4069c4:	cbnz	w0, 4069e4 <get_addr_1@@Base+0xe4>
  4069c8:	and	w0, w20, #0xffffffef
  4069cc:	cmp	w0, #0xc
  4069d0:	b.eq	40694c <get_addr_1@@Base+0x4c>  // b.none
  4069d4:	mov	w0, #0xfffffffe            	// #-2
  4069d8:	strh	w20, [x19, #6]
  4069dc:	strh	w0, [x19, #4]
  4069e0:	b	406990 <get_addr_1@@Base+0x90>
  4069e4:	cmp	w20, #0x11
  4069e8:	b.ne	406a14 <get_addr_1@@Base+0x114>  // b.any
  4069ec:	mov	x2, x21
  4069f0:	add	x0, x19, #0x8
  4069f4:	mov	w1, #0x100                 	// #256
  4069f8:	bl	408fb0 <ll_addr_a2n@@Base>
  4069fc:	tbnz	w0, #31, 40694c <get_addr_1@@Base+0x4c>
  406a00:	and	w0, w0, #0xffff
  406a04:	strh	w0, [x19, #2]
  406a08:	strh	w20, [x19, #6]
  406a0c:	ubfiz	w0, w0, #3, #13
  406a10:	b	4069dc <get_addr_1@@Base+0xdc>
  406a14:	mov	x0, x21
  406a18:	mov	w1, #0x3a                  	// #58
  406a1c:	bl	4051a0 <strchr@plt>
  406a20:	cbz	x0, 406a5c <get_addr_1@@Base+0x15c>
  406a24:	mov	w0, #0xa                   	// #10
  406a28:	strh	w0, [x19, #6]
  406a2c:	cmp	w20, #0x0
  406a30:	ccmp	w20, #0xa, #0x4, ne  // ne = any
  406a34:	b.ne	40694c <get_addr_1@@Base+0x4c>  // b.any
  406a38:	add	x2, x19, #0x8
  406a3c:	mov	x1, x21
  406a40:	mov	w0, #0xa                   	// #10
  406a44:	bl	405170 <inet_pton@plt>
  406a48:	cmp	w0, #0x0
  406a4c:	b.le	40694c <get_addr_1@@Base+0x4c>
  406a50:	mov	w0, #0xffff0010            	// #-65520
  406a54:	stur	w0, [x19, #2]
  406a58:	b	406990 <get_addr_1@@Base+0x90>
  406a5c:	cmp	w20, #0x1c
  406a60:	b.ne	406ac0 <get_addr_1@@Base+0x1c0>  // b.any
  406a64:	strh	w20, [x19, #6]
  406a68:	add	x2, x19, #0x8
  406a6c:	mov	x1, x21
  406a70:	mov	w0, w20
  406a74:	mov	x3, #0x100                 	// #256
  406a78:	bl	409d64 <mpls_pton@@Base>
  406a7c:	cmp	w0, #0x0
  406a80:	b.le	40694c <get_addr_1@@Base+0x4c>
  406a84:	mov	w0, #0x4                   	// #4
  406a88:	add	x2, x19, #0x4
  406a8c:	movk	w0, #0x14, lsl #16
  406a90:	stur	w0, [x19, #2]
  406a94:	mov	x0, #0x1                   	// #1
  406a98:	ldr	w1, [x2, x0, lsl #2]
  406a9c:	rev	w1, w1
  406aa0:	tbz	w1, #8, 406ab0 <get_addr_1@@Base+0x1b0>
  406aa4:	ubfiz	w0, w0, #2, #14
  406aa8:	strh	w0, [x19, #2]
  406aac:	b	406990 <get_addr_1@@Base+0x90>
  406ab0:	add	x0, x0, #0x1
  406ab4:	cmp	x0, #0x41
  406ab8:	b.ne	406a98 <get_addr_1@@Base+0x198>  // b.any
  406abc:	b	406990 <get_addr_1@@Base+0x90>
  406ac0:	mov	w0, #0x2                   	// #2
  406ac4:	strh	w0, [x19, #6]
  406ac8:	tst	w20, #0xfffffffd
  406acc:	b.ne	40694c <get_addr_1@@Base+0x4c>  // b.any
  406ad0:	add	x20, x19, #0x8
  406ad4:	add	x23, x19, #0xb
  406ad8:	add	x22, sp, #0x48
  406adc:	mov	x1, x22
  406ae0:	mov	x0, x21
  406ae4:	mov	w2, #0x0                   	// #0
  406ae8:	bl	404df0 <strtoul@plt>
  406aec:	cmp	x0, #0xff
  406af0:	b.hi	40694c <get_addr_1@@Base+0x4c>  // b.pmore
  406af4:	ldr	x2, [sp, #72]
  406af8:	cmp	x2, x21
  406afc:	b.eq	40694c <get_addr_1@@Base+0x4c>  // b.none
  406b00:	strb	w0, [x20]
  406b04:	ldrb	w0, [x2]
  406b08:	cbz	w0, 406b28 <get_addr_1@@Base+0x228>
  406b0c:	cmp	x20, x23
  406b10:	b.eq	40694c <get_addr_1@@Base+0x4c>  // b.none
  406b14:	add	x20, x20, #0x1
  406b18:	cmp	w0, #0x2e
  406b1c:	b.ne	40694c <get_addr_1@@Base+0x4c>  // b.any
  406b20:	add	x21, x2, #0x1
  406b24:	b	406adc <get_addr_1@@Base+0x1dc>
  406b28:	mov	w0, #0xffff0004            	// #-65532
  406b2c:	b	406a54 <get_addr_1@@Base+0x154>
  406b30:	stp	x29, x30, [sp, #-320]!
  406b34:	mov	w2, #0x0                   	// #0
  406b38:	mov	x29, sp
  406b3c:	stp	x19, x20, [sp, #16]
  406b40:	mov	x20, x0
  406b44:	str	x21, [sp, #32]
  406b48:	mov	x21, x1
  406b4c:	bl	4062d4 <get_unsigned@@Base>
  406b50:	mov	w19, w0
  406b54:	cbz	w0, 406b74 <get_addr_1@@Base+0x274>
  406b58:	mov	x1, x21
  406b5c:	add	x0, sp, #0x38
  406b60:	mov	w2, #0x2                   	// #2
  406b64:	bl	406900 <get_addr_1@@Base>
  406b68:	mov	w19, w0
  406b6c:	cbz	w0, 406b88 <get_addr_1@@Base+0x288>
  406b70:	mov	w19, #0xffffffff            	// #-1
  406b74:	mov	w0, w19
  406b78:	ldp	x19, x20, [sp, #16]
  406b7c:	ldr	x21, [sp, #32]
  406b80:	ldp	x29, x30, [sp], #320
  406b84:	ret
  406b88:	ldrh	w0, [sp, #62]
  406b8c:	cmp	w0, #0x2
  406b90:	b.ne	406b70 <get_addr_1@@Base+0x270>  // b.any
  406b94:	ldr	w0, [sp, #64]
  406b98:	bl	4062ac <mask2bits@@Base>
  406b9c:	tbnz	w0, #31, 406b70 <get_addr_1@@Base+0x270>
  406ba0:	str	w0, [x20]
  406ba4:	b	406b74 <get_addr_1@@Base+0x274>

0000000000406ba8 <get_prefix_1@@Base>:
  406ba8:	stp	x29, x30, [sp, #-64]!
  406bac:	mov	x29, sp
  406bb0:	stp	x21, x22, [sp, #32]
  406bb4:	mov	x21, x1
  406bb8:	mov	w22, w2
  406bbc:	mov	w1, #0x2f                  	// #47
  406bc0:	stp	x19, x20, [sp, #16]
  406bc4:	mov	x19, x0
  406bc8:	mov	x0, x21
  406bcc:	bl	4051a0 <strchr@plt>
  406bd0:	mov	x20, x0
  406bd4:	cbz	x0, 406bdc <get_prefix_1@@Base+0x34>
  406bd8:	strb	wzr, [x0]
  406bdc:	mov	w2, w22
  406be0:	mov	x1, x21
  406be4:	mov	x0, x19
  406be8:	bl	406900 <get_addr_1@@Base>
  406bec:	mov	w22, w0
  406bf0:	cbz	x20, 406bfc <get_prefix_1@@Base+0x54>
  406bf4:	mov	w0, #0x2f                  	// #47
  406bf8:	strb	w0, [x20]
  406bfc:	cbnz	w22, 406c58 <get_prefix_1@@Base+0xb0>
  406c00:	ldrh	w0, [x19, #6]
  406c04:	bl	4068dc <af_bit_len@@Base>
  406c08:	mov	w21, w0
  406c0c:	ldrsh	w1, [x19, #4]
  406c10:	cbz	x20, 406c6c <get_prefix_1@@Base+0xc4>
  406c14:	cmn	w1, #0x2
  406c18:	b.eq	406c54 <get_prefix_1@@Base+0xac>  // b.none
  406c1c:	add	x1, x20, #0x1
  406c20:	add	x0, sp, #0x3c
  406c24:	bl	406b30 <get_addr_1@@Base+0x230>
  406c28:	cbnz	w0, 406c54 <get_prefix_1@@Base+0xac>
  406c2c:	ldr	w0, [sp, #60]
  406c30:	cmp	w0, w21
  406c34:	b.hi	406c54 <get_prefix_1@@Base+0xac>  // b.pmore
  406c38:	mov	w21, w0
  406c3c:	mov	w0, #0x1                   	// #1
  406c40:	ldrh	w1, [x19]
  406c44:	strh	w21, [x19, #4]
  406c48:	orr	w0, w0, w1
  406c4c:	strh	w0, [x19]
  406c50:	b	406c58 <get_prefix_1@@Base+0xb0>
  406c54:	mov	w22, #0xffffffff            	// #-1
  406c58:	mov	w0, w22
  406c5c:	ldp	x19, x20, [sp, #16]
  406c60:	ldp	x21, x22, [sp, #32]
  406c64:	ldp	x29, x30, [sp], #64
  406c68:	ret
  406c6c:	cmn	w1, #0x2
  406c70:	mov	w0, #0x0                   	// #0
  406c74:	csel	w21, w21, wzr, ne  // ne = any
  406c78:	b	406c40 <get_prefix_1@@Base+0x98>

0000000000406c7c <get_addr_rta@@Base>:
  406c7c:	ldrh	w3, [x1]
  406c80:	sub	w3, w3, #0x4
  406c84:	cmp	w3, #0xa
  406c88:	b.eq	406d2c <get_addr_rta@@Base+0xb0>  // b.none
  406c8c:	b.hi	406ca8 <get_addr_rta@@Base+0x2c>  // b.pmore
  406c90:	cmp	w3, #0x2
  406c94:	b.eq	406d14 <get_addr_rta@@Base+0x98>  // b.none
  406c98:	cmp	w3, #0x4
  406c9c:	b.eq	406ccc <get_addr_rta@@Base+0x50>  // b.none
  406ca0:	mov	w0, #0xffffffff            	// #-1
  406ca4:	ret
  406ca8:	cmp	w3, #0x10
  406cac:	b.ne	406ca0 <get_addr_rta@@Base+0x24>  // b.any
  406cb0:	add	x1, x1, #0x4
  406cb4:	mov	w4, #0xa                   	// #10
  406cb8:	strh	w3, [x0, #2]
  406cbc:	strh	w4, [x0, #6]
  406cc0:	ldp	x4, x5, [x1]
  406cc4:	stp	x4, x5, [x0, #8]
  406cc8:	b	406ce0 <get_addr_rta@@Base+0x64>
  406ccc:	mov	w4, #0x2                   	// #2
  406cd0:	strh	w3, [x0, #2]
  406cd4:	strh	w4, [x0, #6]
  406cd8:	ldr	w1, [x1, #4]
  406cdc:	str	w1, [x0, #8]
  406ce0:	cbz	w2, 406cf0 <get_addr_rta@@Base+0x74>
  406ce4:	ldrh	w1, [x0, #6]
  406ce8:	cmp	w1, w2
  406cec:	b.ne	406d4c <get_addr_rta@@Base+0xd0>  // b.any
  406cf0:	stp	x29, x30, [sp, #-16]!
  406cf4:	mov	w1, #0xffffffff            	// #-1
  406cf8:	mov	x29, sp
  406cfc:	strh	wzr, [x0]
  406d00:	strh	w1, [x0, #4]
  406d04:	bl	405f18 <_start@@Base+0x938>
  406d08:	mov	w0, #0x0                   	// #0
  406d0c:	ldp	x29, x30, [sp], #16
  406d10:	ret
  406d14:	mov	w4, #0xc                   	// #12
  406d18:	strh	w3, [x0, #2]
  406d1c:	strh	w4, [x0, #6]
  406d20:	ldrh	w1, [x1, #4]
  406d24:	strh	w1, [x0, #8]
  406d28:	b	406ce0 <get_addr_rta@@Base+0x64>
  406d2c:	mov	w4, #0x4                   	// #4
  406d30:	strh	w3, [x0, #2]
  406d34:	strh	w4, [x0, #6]
  406d38:	ldur	x3, [x1, #4]
  406d3c:	str	x3, [x0, #8]
  406d40:	ldrh	w1, [x1, #12]
  406d44:	strh	w1, [x0, #16]
  406d48:	b	406ce0 <get_addr_rta@@Base+0x64>
  406d4c:	mov	w0, #0xfffffffe            	// #-2
  406d50:	ret

0000000000406d54 <get_addr32@@Base>:
  406d54:	stp	x29, x30, [sp, #-304]!
  406d58:	mov	x1, x0
  406d5c:	mov	w2, #0x2                   	// #2
  406d60:	mov	x29, sp
  406d64:	str	x19, [sp, #16]
  406d68:	mov	x19, x0
  406d6c:	add	x0, sp, #0x28
  406d70:	bl	406900 <get_addr_1@@Base>
  406d74:	cbz	w0, 406d9c <get_addr32@@Base+0x48>
  406d78:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406d7c:	mov	x2, x19
  406d80:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406d84:	add	x1, x1, #0xb05
  406d88:	ldr	x0, [x0, #3992]
  406d8c:	ldr	x0, [x0]
  406d90:	bl	405330 <fprintf@plt>
  406d94:	mov	w0, #0x1                   	// #1
  406d98:	bl	404e20 <exit@plt>
  406d9c:	ldr	w0, [sp, #48]
  406da0:	ldr	x19, [sp, #16]
  406da4:	ldp	x29, x30, [sp], #304
  406da8:	ret

0000000000406dac <incomplete_command@@Base>:
  406dac:	stp	x29, x30, [sp, #-16]!
  406db0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406db4:	mov	x29, sp
  406db8:	ldr	x0, [x0, #3992]
  406dbc:	ldr	x1, [x0]
  406dc0:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  406dc4:	add	x0, x0, #0xb38
  406dc8:	bl	404e10 <fputs@plt>
  406dcc:	mov	w0, #0xffffffff            	// #-1
  406dd0:	bl	404e20 <exit@plt>

0000000000406dd4 <missarg@@Base>:
  406dd4:	stp	x29, x30, [sp, #-16]!
  406dd8:	mov	x2, x0
  406ddc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406de0:	mov	x29, sp
  406de4:	ldr	x0, [x0, #3992]
  406de8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406dec:	add	x1, x1, #0xb69
  406df0:	ldr	x0, [x0]
  406df4:	bl	405330 <fprintf@plt>
  406df8:	mov	w0, #0xffffffff            	// #-1
  406dfc:	bl	404e20 <exit@plt>

0000000000406e00 <invarg@@Base>:
  406e00:	stp	x29, x30, [sp, #-16]!
  406e04:	mov	x3, x0
  406e08:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406e0c:	mov	x29, sp
  406e10:	ldr	x0, [x0, #3992]
  406e14:	mov	x2, x1
  406e18:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406e1c:	add	x1, x1, #0xb8b
  406e20:	ldr	x0, [x0]
  406e24:	bl	405330 <fprintf@plt>
  406e28:	mov	w0, #0xffffffff            	// #-1
  406e2c:	bl	404e20 <exit@plt>

0000000000406e30 <duparg@@Base>:
  406e30:	stp	x29, x30, [sp, #-16]!
  406e34:	mov	x2, x0
  406e38:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406e3c:	mov	x29, sp
  406e40:	ldr	x0, [x0, #3992]
  406e44:	mov	x3, x1
  406e48:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406e4c:	add	x1, x1, #0xbae
  406e50:	ldr	x0, [x0]
  406e54:	bl	405330 <fprintf@plt>
  406e58:	mov	w0, #0xffffffff            	// #-1
  406e5c:	bl	404e20 <exit@plt>

0000000000406e60 <duparg2@@Base>:
  406e60:	stp	x29, x30, [sp, #-16]!
  406e64:	mov	x2, x0
  406e68:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406e6c:	mov	x29, sp
  406e70:	ldr	x0, [x0, #3992]
  406e74:	mov	x3, x1
  406e78:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406e7c:	add	x1, x1, #0xbe0
  406e80:	ldr	x0, [x0]
  406e84:	bl	405330 <fprintf@plt>
  406e88:	mov	w0, #0xffffffff            	// #-1
  406e8c:	bl	404e20 <exit@plt>

0000000000406e90 <nodev@@Base>:
  406e90:	stp	x29, x30, [sp, #-16]!
  406e94:	mov	x2, x0
  406e98:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406e9c:	mov	x29, sp
  406ea0:	ldr	x0, [x0, #3992]
  406ea4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406ea8:	add	x1, x1, #0xc18
  406eac:	ldr	x0, [x0]
  406eb0:	bl	405330 <fprintf@plt>
  406eb4:	mov	w0, #0xffffffff            	// #-1
  406eb8:	ldp	x29, x30, [sp], #16
  406ebc:	ret

0000000000406ec0 <check_ifname@@Base>:
  406ec0:	stp	x29, x30, [sp, #-32]!
  406ec4:	mov	x29, sp
  406ec8:	str	x19, [sp, #16]
  406ecc:	mov	x19, x0
  406ed0:	bl	404e00 <strlen@plt>
  406ed4:	cmp	x0, #0xf
  406ed8:	b.hi	406ef4 <check_ifname@@Base+0x34>  // b.pmore
  406edc:	ldrb	w0, [x19]
  406ee0:	cbz	w0, 406ef4 <check_ifname@@Base+0x34>
  406ee4:	mov	x0, x19
  406ee8:	ldr	x19, [sp, #16]
  406eec:	ldp	x29, x30, [sp], #32
  406ef0:	b	405fa4 <_start@@Base+0x9c4>
  406ef4:	mov	w0, #0xffffffff            	// #-1
  406ef8:	ldr	x19, [sp, #16]
  406efc:	ldp	x29, x30, [sp], #32
  406f00:	ret

0000000000406f04 <check_altifname@@Base>:
  406f04:	ldrb	w1, [x0]
  406f08:	cbz	w1, 406f10 <check_altifname@@Base+0xc>
  406f0c:	b	405fa4 <_start@@Base+0x9c4>
  406f10:	mov	w0, #0xffffffff            	// #-1
  406f14:	ret

0000000000406f18 <get_ifname@@Base>:
  406f18:	stp	x29, x30, [sp, #-48]!
  406f1c:	mov	x29, sp
  406f20:	stp	x19, x20, [sp, #16]
  406f24:	mov	x20, x1
  406f28:	str	x21, [sp, #32]
  406f2c:	mov	x21, x0
  406f30:	mov	x0, x1
  406f34:	bl	406ec0 <check_ifname@@Base>
  406f38:	mov	w19, w0
  406f3c:	cbnz	w0, 406f50 <get_ifname@@Base+0x38>
  406f40:	mov	x1, x20
  406f44:	mov	x0, x21
  406f48:	mov	x2, #0x10                  	// #16
  406f4c:	bl	4052a0 <strncpy@plt>
  406f50:	mov	w0, w19
  406f54:	ldp	x19, x20, [sp, #16]
  406f58:	ldr	x21, [sp, #32]
  406f5c:	ldp	x29, x30, [sp], #48
  406f60:	ret

0000000000406f64 <get_ifname_rta@@Base>:
  406f64:	stp	x29, x30, [sp, #-32]!
  406f68:	mov	x29, sp
  406f6c:	str	x19, [sp, #16]
  406f70:	cbz	x1, 406f94 <get_ifname_rta@@Base+0x30>
  406f74:	add	x19, x1, #0x4
  406f78:	mov	x0, x19
  406f7c:	bl	406ec0 <check_ifname@@Base>
  406f80:	cmp	w0, #0x0
  406f84:	csel	x0, x19, xzr, eq  // eq = none
  406f88:	ldr	x19, [sp, #16]
  406f8c:	ldp	x29, x30, [sp], #32
  406f90:	ret
  406f94:	mov	w19, w0
  406f98:	mov	w2, w0
  406f9c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  406fa0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  406fa4:	add	x1, x1, #0xc31
  406fa8:	ldr	x0, [x0, #3992]
  406fac:	ldr	x0, [x0]
  406fb0:	bl	405330 <fprintf@plt>
  406fb4:	mov	w0, w19
  406fb8:	bl	408bf8 <ll_idx_n2a@@Base>
  406fbc:	mov	x19, x0
  406fc0:	b	406f78 <get_ifname_rta@@Base+0x14>

0000000000406fc4 <matches@@Base>:
  406fc4:	ldrb	w2, [x0]
  406fc8:	cbz	w2, 406ff4 <matches@@Base+0x30>
  406fcc:	mov	x2, #0x0                   	// #0
  406fd0:	ldrb	w4, [x1, x2]
  406fd4:	ldrb	w3, [x0, x2]
  406fd8:	cbz	w4, 406fe8 <matches@@Base+0x24>
  406fdc:	add	x2, x2, #0x1
  406fe0:	cmp	w4, w3
  406fe4:	b.eq	406fd0 <matches@@Base+0xc>  // b.none
  406fe8:	cmp	w3, #0x0
  406fec:	cset	w0, ne  // ne = any
  406ff0:	ret
  406ff4:	mov	w0, #0x1                   	// #1
  406ff8:	b	406ff0 <matches@@Base+0x2c>

0000000000406ffc <inet_addr_match@@Base>:
  406ffc:	stp	x29, x30, [sp, #-48]!
  407000:	cmp	wzr, w2, asr #5
  407004:	mov	x29, sp
  407008:	stp	x19, x20, [sp, #16]
  40700c:	asr	w20, w2, #5
  407010:	and	w19, w2, #0x1f
  407014:	stp	x21, x22, [sp, #32]
  407018:	add	x22, x0, #0x8
  40701c:	add	x21, x1, #0x8
  407020:	b.eq	40703c <inet_addr_match@@Base+0x40>  // b.none
  407024:	lsl	w2, w20, #2
  407028:	mov	x1, x21
  40702c:	mov	x0, x22
  407030:	sxtw	x2, w2
  407034:	bl	4050e0 <memcmp@plt>
  407038:	cbnz	w0, 40707c <inet_addr_match@@Base+0x80>
  40703c:	cbz	w19, 407068 <inet_addr_match@@Base+0x6c>
  407040:	sbfiz	x20, x20, #2, #32
  407044:	neg	w19, w19
  407048:	mov	w2, #0xffffffff            	// #-1
  40704c:	lsl	w19, w2, w19
  407050:	rev	w19, w19
  407054:	ldr	w0, [x22, x20]
  407058:	ldr	w1, [x21, x20]
  40705c:	eor	w0, w0, w1
  407060:	tst	w0, w19
  407064:	cset	w19, ne  // ne = any
  407068:	mov	w0, w19
  40706c:	ldp	x19, x20, [sp, #16]
  407070:	ldp	x21, x22, [sp, #32]
  407074:	ldp	x29, x30, [sp], #48
  407078:	ret
  40707c:	mov	w19, #0xffffffff            	// #-1
  407080:	b	407068 <inet_addr_match@@Base+0x6c>

0000000000407084 <inet_addr_match_rta@@Base>:
  407084:	cbz	x1, 4070d8 <inet_addr_match_rta@@Base+0x54>
  407088:	stp	x29, x30, [sp, #-304]!
  40708c:	mov	x29, sp
  407090:	ldrh	w2, [x0, #6]
  407094:	stp	x19, x20, [sp, #16]
  407098:	mov	x19, x0
  40709c:	cbz	w2, 4070e0 <inet_addr_match_rta@@Base+0x5c>
  4070a0:	ldrsh	w0, [x0, #4]
  4070a4:	cmp	w0, #0x0
  4070a8:	b.le	4070e0 <inet_addr_match_rta@@Base+0x5c>
  4070ac:	add	x20, sp, #0x28
  4070b0:	mov	x0, x20
  4070b4:	bl	406c7c <get_addr_rta@@Base>
  4070b8:	cbnz	w0, 4070e8 <inet_addr_match_rta@@Base+0x64>
  4070bc:	ldrsh	w2, [x19, #4]
  4070c0:	mov	x1, x19
  4070c4:	mov	x0, x20
  4070c8:	bl	406ffc <inet_addr_match@@Base>
  4070cc:	ldp	x19, x20, [sp, #16]
  4070d0:	ldp	x29, x30, [sp], #304
  4070d4:	ret
  4070d8:	mov	w0, #0x0                   	// #0
  4070dc:	ret
  4070e0:	mov	w0, #0x0                   	// #0
  4070e4:	b	4070cc <inet_addr_match_rta@@Base+0x48>
  4070e8:	mov	w0, #0xffffffff            	// #-1
  4070ec:	b	4070cc <inet_addr_match_rta@@Base+0x48>

00000000004070f0 <__get_hz@@Base>:
  4070f0:	sub	sp, sp, #0x430
  4070f4:	stp	x29, x30, [sp]
  4070f8:	mov	x29, sp
  4070fc:	stp	x19, x20, [sp, #16]
  407100:	adrp	x19, 40c000 <addattr_nest@@Base+0x4>
  407104:	add	x19, x19, #0xc5d
  407108:	mov	x0, x19
  40710c:	bl	405300 <getenv@plt>
  407110:	cbz	x0, 407140 <__get_hz@@Base+0x50>
  407114:	mov	x0, x19
  407118:	bl	405300 <getenv@plt>
  40711c:	bl	404f50 <atoi@plt>
  407120:	mov	w19, w0
  407124:	cbnz	w19, 40712c <__get_hz@@Base+0x3c>
  407128:	mov	w19, #0x64                  	// #100
  40712c:	mov	w0, w19
  407130:	ldp	x29, x30, [sp]
  407134:	ldp	x19, x20, [sp, #16]
  407138:	add	sp, sp, #0x430
  40713c:	ret
  407140:	adrp	x20, 40c000 <addattr_nest@@Base+0x4>
  407144:	add	x20, x20, #0xc60
  407148:	mov	x0, x20
  40714c:	add	x19, sp, #0x30
  407150:	bl	405300 <getenv@plt>
  407154:	cbz	x0, 4071cc <__get_hz@@Base+0xdc>
  407158:	mov	x0, x20
  40715c:	bl	405300 <getenv@plt>
  407160:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  407164:	mov	x3, x0
  407168:	add	x2, x2, #0xad3
  40716c:	mov	x0, x19
  407170:	mov	x1, #0x3ff                 	// #1023
  407174:	bl	404f10 <snprintf@plt>
  407178:	mov	x0, x19
  40717c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  407180:	add	x1, x1, #0x37
  407184:	bl	405200 <fopen64@plt>
  407188:	mov	x20, x0
  40718c:	cbz	x0, 407128 <__get_hz@@Base+0x38>
  407190:	add	x3, sp, #0x2c
  407194:	add	x2, sp, #0x28
  407198:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40719c:	add	x1, x1, #0xc99
  4071a0:	bl	404fa0 <__isoc99_fscanf@plt>
  4071a4:	cmp	w0, #0x2
  4071a8:	b.ne	40720c <__get_hz@@Base+0x11c>  // b.any
  4071ac:	ldp	w1, w19, [sp, #40]
  4071b0:	mov	w0, #0x4240                	// #16960
  4071b4:	movk	w0, #0xf, lsl #16
  4071b8:	cmp	w1, w0
  4071bc:	csel	w19, w19, wzr, eq  // eq = none
  4071c0:	mov	x0, x20
  4071c4:	bl	404f40 <fclose@plt>
  4071c8:	b	407124 <__get_hz@@Base+0x34>
  4071cc:	adrp	x20, 40c000 <addattr_nest@@Base+0x4>
  4071d0:	add	x20, x20, #0xc70
  4071d4:	mov	x0, x20
  4071d8:	bl	405300 <getenv@plt>
  4071dc:	cbz	x0, 4071f8 <__get_hz@@Base+0x108>
  4071e0:	mov	x0, x20
  4071e4:	bl	405300 <getenv@plt>
  4071e8:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4071ec:	mov	x3, x0
  4071f0:	add	x2, x2, #0xc7a
  4071f4:	b	40716c <__get_hz@@Base+0x7c>
  4071f8:	mov	x0, x19
  4071fc:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407200:	add	x1, x1, #0xc88
  407204:	bl	4051f0 <strcpy@plt>
  407208:	b	407178 <__get_hz@@Base+0x88>
  40720c:	mov	w19, #0x0                   	// #0
  407210:	b	4071c0 <__get_hz@@Base+0xd0>

0000000000407214 <__get_user_hz@@Base>:
  407214:	stp	x29, x30, [sp, #-16]!
  407218:	mov	w0, #0x2                   	// #2
  40721c:	mov	x29, sp
  407220:	bl	405230 <sysconf@plt>
  407224:	ldp	x29, x30, [sp], #16
  407228:	ret

000000000040722c <rt_addr_n2a_r@@Base>:
  40722c:	mov	x5, x2
  407230:	cmp	w0, #0x11
  407234:	mov	x2, x3
  407238:	b.eq	407280 <rt_addr_n2a_r@@Base+0x54>  // b.none
  40723c:	b.gt	407260 <rt_addr_n2a_r@@Base+0x34>
  407240:	cmp	w0, #0x7
  407244:	b.eq	40728c <rt_addr_n2a_r@@Base+0x60>  // b.none
  407248:	and	w6, w0, #0xfffffff7
  40724c:	cmp	w6, #0x2
  407250:	b.eq	407274 <rt_addr_n2a_r@@Base+0x48>  // b.none
  407254:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  407258:	add	x0, x0, #0xcac
  40725c:	ret
  407260:	cmp	w0, #0x1c
  407264:	b.ne	407254 <rt_addr_n2a_r@@Base+0x28>  // b.any
  407268:	sxtw	x3, w4
  40726c:	mov	x1, x5
  407270:	b	409ca0 <mpls_ntop@@Base>
  407274:	mov	w3, w4
  407278:	mov	x1, x5
  40727c:	b	405350 <inet_ntop@plt>
  407280:	mov	x0, x5
  407284:	mov	w2, #0xffff                	// #65535
  407288:	b	408e98 <ll_addr_n2a@@Base>
  40728c:	ldrh	w0, [x5]
  407290:	cmp	w0, #0x2
  407294:	b.eq	4072ac <rt_addr_n2a_r@@Base+0x80>  // b.none
  407298:	cmp	w0, #0xa
  40729c:	b.ne	407254 <rt_addr_n2a_r@@Base+0x28>  // b.any
  4072a0:	mov	w3, w4
  4072a4:	add	x1, x5, #0x8
  4072a8:	b	40727c <rt_addr_n2a_r@@Base+0x50>
  4072ac:	mov	w3, w4
  4072b0:	add	x1, x5, #0x4
  4072b4:	b	40727c <rt_addr_n2a_r@@Base+0x50>

00000000004072b8 <rt_addr_n2a@@Base>:
  4072b8:	mov	w4, #0x100                 	// #256
  4072bc:	adrp	x3, 420000 <memcpy@GLIBC_2.17>
  4072c0:	add	x3, x3, #0x340
  4072c4:	b	40722c <rt_addr_n2a_r@@Base>

00000000004072c8 <read_family@@Base>:
  4072c8:	stp	x29, x30, [sp, #-32]!
  4072cc:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4072d0:	add	x1, x1, #0xcb0
  4072d4:	mov	x29, sp
  4072d8:	str	x19, [sp, #16]
  4072dc:	mov	x19, x0
  4072e0:	bl	4050f0 <strcmp@plt>
  4072e4:	cbz	w0, 407360 <read_family@@Base+0x98>
  4072e8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4072ec:	mov	x0, x19
  4072f0:	add	x1, x1, #0xcb5
  4072f4:	bl	4050f0 <strcmp@plt>
  4072f8:	cbz	w0, 407368 <read_family@@Base+0xa0>
  4072fc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  407300:	mov	x0, x19
  407304:	add	x1, x1, #0xfe
  407308:	bl	4050f0 <strcmp@plt>
  40730c:	cbz	w0, 407370 <read_family@@Base+0xa8>
  407310:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407314:	mov	x0, x19
  407318:	add	x1, x1, #0xcbb
  40731c:	bl	4050f0 <strcmp@plt>
  407320:	cbz	w0, 407378 <read_family@@Base+0xb0>
  407324:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407328:	mov	x0, x19
  40732c:	add	x1, x1, #0xcbf
  407330:	bl	4050f0 <strcmp@plt>
  407334:	cbz	w0, 407380 <read_family@@Base+0xb8>
  407338:	mov	x0, x19
  40733c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407340:	add	x1, x1, #0xcc4
  407344:	bl	4050f0 <strcmp@plt>
  407348:	cmp	w0, #0x0
  40734c:	mov	w0, #0x7                   	// #7
  407350:	csel	w0, wzr, w0, ne  // ne = any
  407354:	ldr	x19, [sp, #16]
  407358:	ldp	x29, x30, [sp], #32
  40735c:	ret
  407360:	mov	w0, #0x2                   	// #2
  407364:	b	407354 <read_family@@Base+0x8c>
  407368:	mov	w0, #0xa                   	// #10
  40736c:	b	407354 <read_family@@Base+0x8c>
  407370:	mov	w0, #0x11                  	// #17
  407374:	b	407354 <read_family@@Base+0x8c>
  407378:	mov	w0, #0x4                   	// #4
  40737c:	b	407354 <read_family@@Base+0x8c>
  407380:	mov	w0, #0x1c                  	// #28
  407384:	b	407354 <read_family@@Base+0x8c>

0000000000407388 <family_name@@Base>:
  407388:	cmp	w0, #0x2
  40738c:	b.eq	4073cc <family_name@@Base+0x44>  // b.none
  407390:	cmp	w0, #0xa
  407394:	b.eq	4073d8 <family_name@@Base+0x50>  // b.none
  407398:	cmp	w0, #0x11
  40739c:	b.eq	4073e4 <family_name@@Base+0x5c>  // b.none
  4073a0:	cmp	w0, #0x4
  4073a4:	b.eq	4073f0 <family_name@@Base+0x68>  // b.none
  4073a8:	cmp	w0, #0x1c
  4073ac:	b.eq	4073fc <family_name@@Base+0x74>  // b.none
  4073b0:	cmp	w0, #0x7
  4073b4:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4073b8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4073bc:	add	x2, x2, #0xcc4
  4073c0:	add	x0, x1, #0xcac
  4073c4:	csel	x0, x0, x2, ne  // ne = any
  4073c8:	ret
  4073cc:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4073d0:	add	x0, x0, #0xcb0
  4073d4:	b	4073c8 <family_name@@Base+0x40>
  4073d8:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4073dc:	add	x0, x0, #0xcb5
  4073e0:	b	4073c8 <family_name@@Base+0x40>
  4073e4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  4073e8:	add	x0, x0, #0xfe
  4073ec:	b	4073c8 <family_name@@Base+0x40>
  4073f0:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4073f4:	add	x0, x0, #0xcbb
  4073f8:	b	4073c8 <family_name@@Base+0x40>
  4073fc:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  407400:	add	x0, x0, #0xcbf
  407404:	b	4073c8 <family_name@@Base+0x40>

0000000000407408 <get_prefix@@Base>:
  407408:	stp	x29, x30, [sp, #-48]!
  40740c:	cmp	w2, #0x11
  407410:	mov	x29, sp
  407414:	stp	x19, x20, [sp, #16]
  407418:	mov	x20, x1
  40741c:	str	x21, [sp, #32]
  407420:	b.ne	407448 <get_prefix@@Base+0x40>  // b.any
  407424:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407428:	mov	x2, x1
  40742c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407430:	add	x1, x1, #0xcd5
  407434:	ldr	x0, [x0, #3992]
  407438:	ldr	x0, [x0]
  40743c:	bl	405330 <fprintf@plt>
  407440:	mov	w0, #0x1                   	// #1
  407444:	bl	404e20 <exit@plt>
  407448:	mov	w19, w2
  40744c:	bl	406ba8 <get_prefix_1@@Base>
  407450:	cbz	w0, 407494 <get_prefix@@Base+0x8c>
  407454:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407458:	ldr	x0, [x0, #3992]
  40745c:	ldr	x21, [x0]
  407460:	cbz	w19, 407488 <get_prefix@@Base+0x80>
  407464:	mov	w0, w19
  407468:	bl	407388 <family_name@@Base>
  40746c:	mov	x2, x0
  407470:	mov	x3, x20
  407474:	mov	x0, x21
  407478:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40747c:	add	x1, x1, #0xd1d
  407480:	bl	405330 <fprintf@plt>
  407484:	b	407440 <get_prefix@@Base+0x38>
  407488:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  40748c:	add	x2, x2, #0xccb
  407490:	b	407470 <get_prefix@@Base+0x68>
  407494:	ldp	x19, x20, [sp, #16]
  407498:	ldr	x21, [sp, #32]
  40749c:	ldp	x29, x30, [sp], #48
  4074a0:	ret

00000000004074a4 <get_addr@@Base>:
  4074a4:	stp	x29, x30, [sp, #-48]!
  4074a8:	mov	x29, sp
  4074ac:	stp	x19, x20, [sp, #16]
  4074b0:	mov	x20, x1
  4074b4:	mov	w19, w2
  4074b8:	str	x21, [sp, #32]
  4074bc:	bl	406900 <get_addr_1@@Base>
  4074c0:	cbz	w0, 407508 <get_addr@@Base+0x64>
  4074c4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4074c8:	ldr	x0, [x0, #3992]
  4074cc:	ldr	x21, [x0]
  4074d0:	cbz	w19, 4074fc <get_addr@@Base+0x58>
  4074d4:	mov	w0, w19
  4074d8:	bl	407388 <family_name@@Base>
  4074dc:	mov	x2, x0
  4074e0:	mov	x3, x20
  4074e4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4074e8:	add	x1, x1, #0xd4d
  4074ec:	mov	x0, x21
  4074f0:	bl	405330 <fprintf@plt>
  4074f4:	mov	w0, #0x1                   	// #1
  4074f8:	bl	404e20 <exit@plt>
  4074fc:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  407500:	add	x2, x2, #0xccb
  407504:	b	4074e0 <get_addr@@Base+0x3c>
  407508:	ldp	x19, x20, [sp, #16]
  40750c:	ldr	x21, [sp, #32]
  407510:	ldp	x29, x30, [sp], #48
  407514:	ret

0000000000407518 <format_host_r@@Base>:
  407518:	stp	x29, x30, [sp, #-128]!
  40751c:	mov	x29, sp
  407520:	stp	x19, x20, [sp, #16]
  407524:	mov	w19, w1
  407528:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40752c:	stp	x21, x22, [sp, #32]
  407530:	mov	x20, x2
  407534:	mov	w22, w0
  407538:	ldr	x1, [x1, #4064]
  40753c:	stp	x23, x24, [sp, #48]
  407540:	stp	x25, x26, [sp, #64]
  407544:	ldr	w1, [x1]
  407548:	stp	x27, x28, [sp, #80]
  40754c:	str	x3, [sp, #112]
  407550:	str	w4, [sp, #124]
  407554:	cbz	w1, 4076ac <format_host_r@@Base+0x194>
  407558:	cmp	w19, #0x0
  40755c:	b.gt	407574 <format_host_r@@Base+0x5c>
  407560:	mov	w19, #0x8                   	// #8
  407564:	bl	4068dc <af_bit_len@@Base>
  407568:	cmp	w0, #0x7
  40756c:	sdiv	w19, w0, w19
  407570:	b.le	4076ac <format_host_r@@Base+0x194>
  407574:	cmp	w22, #0xa
  407578:	b.ne	407668 <format_host_r@@Base+0x150>  // b.any
  40757c:	ldr	w0, [x20]
  407580:	cbnz	w0, 407668 <format_host_r@@Base+0x150>
  407584:	ldr	w0, [x20, #4]
  407588:	cbnz	w0, 407668 <format_host_r@@Base+0x150>
  40758c:	ldr	w0, [x20, #8]
  407590:	cmn	w0, #0x10, lsl #12
  407594:	b.ne	407668 <format_host_r@@Base+0x150>  // b.any
  407598:	add	x26, x20, #0xc
  40759c:	mov	w24, #0x2                   	// #2
  4075a0:	mov	w27, #0x4                   	// #4
  4075a4:	add	x0, x26, w27, sxtw
  4075a8:	adrp	x23, 420000 <memcpy@GLIBC_2.17>
  4075ac:	add	x1, x23, #0x340
  4075b0:	sxtw	x28, w27
  4075b4:	add	x1, x1, #0x100
  4075b8:	ldur	w25, [x0, #-4]
  4075bc:	mov	w0, #0x101                 	// #257
  4075c0:	udiv	w0, w25, w0
  4075c4:	add	w0, w0, w0, lsl #8
  4075c8:	sub	w25, w25, w0
  4075cc:	ldr	x0, [x1, x25, lsl #3]
  4075d0:	str	x0, [sp, #104]
  4075d4:	mov	x21, x0
  4075d8:	cbnz	x21, 407678 <format_host_r@@Base+0x160>
  4075dc:	mov	x0, #0x118                 	// #280
  4075e0:	bl	404f70 <malloc@plt>
  4075e4:	mov	x21, x0
  4075e8:	cbz	x0, 4076ac <format_host_r@@Base+0x194>
  4075ec:	strh	w27, [x0, #18]
  4075f0:	mov	x2, x28
  4075f4:	strh	w24, [x0, #22]
  4075f8:	mov	x1, x26
  4075fc:	str	xzr, [x21, #8]
  407600:	add	x0, x0, #0x18
  407604:	add	x23, x23, #0x340
  407608:	bl	404dd0 <memcpy@plt>
  40760c:	ldr	x0, [sp, #104]
  407610:	str	x0, [x21]
  407614:	add	x0, x23, #0x100
  407618:	str	x21, [x0, x25, lsl #3]
  40761c:	ldr	w0, [x23, #2312]
  407620:	add	w0, w0, #0x1
  407624:	str	w0, [x23, #2312]
  407628:	cmp	w0, #0x1
  40762c:	b.ne	407634 <format_host_r@@Base+0x11c>  // b.any
  407630:	bl	404e80 <sethostent@plt>
  407634:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407638:	ldr	x0, [x0, #4016]
  40763c:	ldr	x0, [x0]
  407640:	bl	4051e0 <fflush@plt>
  407644:	mov	w2, w24
  407648:	mov	w1, w27
  40764c:	mov	x0, x26
  407650:	bl	405150 <gethostbyaddr@plt>
  407654:	cbz	x0, 4076a4 <format_host_r@@Base+0x18c>
  407658:	ldr	x0, [x0]
  40765c:	bl	405060 <strdup@plt>
  407660:	str	x0, [x21, #8]
  407664:	b	4076a4 <format_host_r@@Base+0x18c>
  407668:	mov	w24, w22
  40766c:	mov	w27, w19
  407670:	mov	x26, x20
  407674:	b	4075a4 <format_host_r@@Base+0x8c>
  407678:	ldrh	w0, [x21, #22]
  40767c:	cmp	w0, w24
  407680:	b.ne	4076dc <format_host_r@@Base+0x1c4>  // b.any
  407684:	ldrh	w0, [x21, #18]
  407688:	cmp	w27, w0
  40768c:	b.ne	4076dc <format_host_r@@Base+0x1c4>  // b.any
  407690:	mov	x2, x28
  407694:	mov	x1, x26
  407698:	add	x0, x21, #0x18
  40769c:	bl	4050e0 <memcmp@plt>
  4076a0:	cbnz	w0, 4076dc <format_host_r@@Base+0x1c4>
  4076a4:	ldr	x0, [x21, #8]
  4076a8:	cbnz	x0, 4076e4 <format_host_r@@Base+0x1cc>
  4076ac:	ldr	w4, [sp, #124]
  4076b0:	mov	x2, x20
  4076b4:	mov	w1, w19
  4076b8:	mov	w0, w22
  4076bc:	ldp	x19, x20, [sp, #16]
  4076c0:	ldp	x21, x22, [sp, #32]
  4076c4:	ldp	x23, x24, [sp, #48]
  4076c8:	ldp	x25, x26, [sp, #64]
  4076cc:	ldp	x27, x28, [sp, #80]
  4076d0:	ldr	x3, [sp, #112]
  4076d4:	ldp	x29, x30, [sp], #128
  4076d8:	b	40722c <rt_addr_n2a_r@@Base>
  4076dc:	ldr	x21, [x21]
  4076e0:	b	4075d8 <format_host_r@@Base+0xc0>
  4076e4:	ldp	x19, x20, [sp, #16]
  4076e8:	ldp	x21, x22, [sp, #32]
  4076ec:	ldp	x23, x24, [sp, #48]
  4076f0:	ldp	x25, x26, [sp, #64]
  4076f4:	ldp	x27, x28, [sp, #80]
  4076f8:	ldp	x29, x30, [sp], #128
  4076fc:	ret

0000000000407700 <format_host@@Base>:
  407700:	adrp	x3, 420000 <memcpy@GLIBC_2.17>
  407704:	add	x3, x3, #0x340
  407708:	add	x3, x3, #0x90c
  40770c:	mov	w4, #0x100                 	// #256
  407710:	b	407518 <format_host_r@@Base>

0000000000407714 <hexstring_n2a@@Base>:
  407714:	stp	x29, x30, [sp, #-64]!
  407718:	mov	x29, sp
  40771c:	stp	x19, x20, [sp, #16]
  407720:	mov	x20, x2
  407724:	mov	x19, #0x0                   	// #0
  407728:	stp	x21, x22, [sp, #32]
  40772c:	mov	x22, x0
  407730:	mov	w21, w1
  407734:	stp	x23, x24, [sp, #48]
  407738:	adrp	x24, 40c000 <addattr_nest@@Base+0x4>
  40773c:	mov	w23, w3
  407740:	add	x24, x24, #0xee3
  407744:	add	x0, x20, x19, lsl #1
  407748:	cmp	w21, w19
  40774c:	b.gt	407768 <hexstring_n2a@@Base+0x54>
  407750:	mov	x0, x20
  407754:	ldp	x19, x20, [sp, #16]
  407758:	ldp	x21, x22, [sp, #32]
  40775c:	ldp	x23, x24, [sp, #48]
  407760:	ldp	x29, x30, [sp], #64
  407764:	ret
  407768:	sub	w1, w23, w19, lsl #1
  40776c:	cmp	w1, #0x2
  407770:	b.le	407750 <hexstring_n2a@@Base+0x3c>
  407774:	ldrb	w2, [x22, x19]
  407778:	mov	x1, x24
  40777c:	add	x19, x19, #0x1
  407780:	bl	404eb0 <sprintf@plt>
  407784:	b	407744 <hexstring_n2a@@Base+0x30>

0000000000407788 <hexstring_a2n@@Base>:
  407788:	stp	x29, x30, [sp, #-112]!
  40778c:	mov	x29, sp
  407790:	stp	x19, x20, [sp, #16]
  407794:	mov	x19, x1
  407798:	stp	x21, x22, [sp, #32]
  40779c:	mov	x21, x3
  4077a0:	stp	x23, x24, [sp, #48]
  4077a4:	mov	x23, x0
  4077a8:	mov	w24, w2
  4077ac:	stp	x25, x26, [sp, #64]
  4077b0:	str	x27, [sp, #80]
  4077b4:	bl	404e00 <strlen@plt>
  4077b8:	tbnz	w0, #0, 407864 <hexstring_a2n@@Base+0xdc>
  4077bc:	and	x20, x0, #0x1
  4077c0:	add	x25, sp, #0x60
  4077c4:	add	x26, sp, #0x68
  4077c8:	add	x22, x23, x20, lsl #1
  4077cc:	mov	w27, w20
  4077d0:	cmp	w24, w20
  4077d4:	b.hi	407808 <hexstring_a2n@@Base+0x80>  // b.pmore
  4077d8:	cbnz	x21, 40786c <hexstring_a2n@@Base+0xe4>
  4077dc:	mov	x0, x19
  4077e0:	ldp	x19, x20, [sp, #16]
  4077e4:	ldp	x21, x22, [sp, #32]
  4077e8:	ldp	x23, x24, [sp, #48]
  4077ec:	ldp	x25, x26, [sp, #64]
  4077f0:	ldr	x27, [sp, #80]
  4077f4:	ldp	x29, x30, [sp], #112
  4077f8:	ret
  4077fc:	strb	w0, [x19, x20]
  407800:	add	x20, x20, #0x1
  407804:	b	4077c8 <hexstring_a2n@@Base+0x40>
  407808:	mov	x0, x22
  40780c:	bl	404e00 <strlen@plt>
  407810:	cmp	x0, #0x1
  407814:	b.ls	4077d8 <hexstring_a2n@@Base+0x50>  // b.plast
  407818:	mov	x1, x22
  40781c:	mov	x2, #0x2                   	// #2
  407820:	mov	x0, x25
  407824:	bl	4052a0 <strncpy@plt>
  407828:	strb	wzr, [sp, #98]
  40782c:	bl	4052f0 <__errno_location@plt>
  407830:	mov	x22, x0
  407834:	mov	x1, x26
  407838:	mov	x0, x25
  40783c:	mov	w2, #0x10                  	// #16
  407840:	str	wzr, [x22]
  407844:	bl	404df0 <strtoul@plt>
  407848:	ldr	w1, [x22]
  40784c:	cbnz	w1, 407864 <hexstring_a2n@@Base+0xdc>
  407850:	cmp	w0, #0xff
  407854:	b.hi	407864 <hexstring_a2n@@Base+0xdc>  // b.pmore
  407858:	ldr	x1, [sp, #104]
  40785c:	ldrb	w1, [x1]
  407860:	cbz	w1, 4077fc <hexstring_a2n@@Base+0x74>
  407864:	mov	x19, #0x0                   	// #0
  407868:	b	4077dc <hexstring_a2n@@Base+0x54>
  40786c:	str	w27, [x21]
  407870:	b	4077dc <hexstring_a2n@@Base+0x54>

0000000000407874 <hex2mem@@Base>:
  407874:	stp	x29, x30, [sp, #-48]!
  407878:	mov	x29, sp
  40787c:	stp	x19, x20, [sp, #16]
  407880:	mov	x20, x0
  407884:	mov	x19, #0x0                   	// #0
  407888:	stp	x21, x22, [sp, #32]
  40788c:	mov	x22, x1
  407890:	mov	w21, w2
  407894:	cmp	w21, w19
  407898:	b.gt	4078a4 <hex2mem@@Base+0x30>
  40789c:	mov	w0, #0x0                   	// #0
  4078a0:	b	4078b4 <hex2mem@@Base+0x40>
  4078a4:	ldrb	w0, [x20]
  4078a8:	bl	4061d8 <get_hex@@Base>
  4078ac:	tbz	w0, #31, 4078c4 <hex2mem@@Base+0x50>
  4078b0:	mov	w0, #0xffffffff            	// #-1
  4078b4:	ldp	x19, x20, [sp, #16]
  4078b8:	ldp	x21, x22, [sp, #32]
  4078bc:	ldp	x29, x30, [sp], #48
  4078c0:	ret
  4078c4:	ubfiz	w0, w0, #4, #4
  4078c8:	strb	w0, [x22, x19]
  4078cc:	add	x20, x20, #0x2
  4078d0:	ldurb	w0, [x20, #-1]
  4078d4:	bl	4061d8 <get_hex@@Base>
  4078d8:	tbnz	w0, #31, 4078b0 <hex2mem@@Base+0x3c>
  4078dc:	ldrb	w1, [x22, x19]
  4078e0:	orr	w0, w0, w1
  4078e4:	strb	w0, [x22, x19]
  4078e8:	add	x19, x19, #0x1
  4078ec:	b	407894 <hex2mem@@Base+0x20>

00000000004078f0 <addr64_n2a@@Base>:
  4078f0:	stp	x29, x30, [sp, #-96]!
  4078f4:	mov	x29, sp
  4078f8:	stp	x21, x22, [sp, #32]
  4078fc:	adrp	x21, 40c000 <addattr_nest@@Base+0x4>
  407900:	mov	x22, x1
  407904:	add	x21, x21, #0xd7e
  407908:	stp	x23, x24, [sp, #48]
  40790c:	adrp	x24, 40c000 <addattr_nest@@Base+0x4>
  407910:	mov	x23, x2
  407914:	add	x24, x24, #0xd80
  407918:	stp	x25, x26, [sp, #64]
  40791c:	adrp	x25, 40c000 <addattr_nest@@Base+0x4>
  407920:	add	x26, sp, #0x58
  407924:	add	x25, x25, #0x7a1
  407928:	stp	x19, x20, [sp, #16]
  40792c:	mov	x19, #0x0                   	// #0
  407930:	mov	x20, #0x0                   	// #0
  407934:	str	x0, [sp, #88]
  407938:	cmp	x19, #0x3
  40793c:	ldrh	w3, [x26, x19, lsl #1]
  407940:	csel	x21, x21, x25, ne  // ne = any
  407944:	mov	x2, x24
  407948:	rev16	w3, w3
  40794c:	mov	x4, x21
  407950:	and	w3, w3, #0xffff
  407954:	sub	x1, x23, x20
  407958:	add	x0, x22, x20
  40795c:	bl	404f10 <snprintf@plt>
  407960:	tbnz	w0, #31, 407978 <addr64_n2a@@Base+0x88>
  407964:	add	x19, x19, #0x1
  407968:	add	x20, x20, w0, sxtw
  40796c:	cmp	x19, #0x4
  407970:	b.ne	407938 <addr64_n2a@@Base+0x48>  // b.any
  407974:	mov	w0, w20
  407978:	ldp	x19, x20, [sp, #16]
  40797c:	ldp	x21, x22, [sp, #32]
  407980:	ldp	x23, x24, [sp, #48]
  407984:	ldp	x25, x26, [sp, #64]
  407988:	ldp	x29, x30, [sp], #96
  40798c:	ret

0000000000407990 <print_escape_buf@@Base>:
  407990:	stp	x29, x30, [sp, #-64]!
  407994:	mov	x29, sp
  407998:	stp	x19, x20, [sp, #16]
  40799c:	mov	x19, x0
  4079a0:	stp	x21, x22, [sp, #32]
  4079a4:	mov	x22, x2
  4079a8:	add	x21, x0, x1
  4079ac:	str	x23, [sp, #48]
  4079b0:	adrp	x23, 40c000 <addattr_nest@@Base+0x4>
  4079b4:	add	x23, x23, #0xd85
  4079b8:	cmp	x19, x21
  4079bc:	b.ne	4079d4 <print_escape_buf@@Base+0x44>  // b.any
  4079c0:	ldp	x19, x20, [sp, #16]
  4079c4:	ldp	x21, x22, [sp, #32]
  4079c8:	ldr	x23, [sp, #48]
  4079cc:	ldp	x29, x30, [sp], #64
  4079d0:	ret
  4079d4:	bl	405100 <__ctype_b_loc@plt>
  4079d8:	ldrb	w20, [x19]
  4079dc:	ldrb	w1, [x19]
  4079e0:	ldr	x0, [x0]
  4079e4:	ldrh	w0, [x0, x1, lsl #1]
  4079e8:	tbz	w0, #14, 407a14 <print_escape_buf@@Base+0x84>
  4079ec:	cmp	w20, #0x5c
  4079f0:	b.eq	407a14 <print_escape_buf@@Base+0x84>  // b.none
  4079f4:	mov	w1, w20
  4079f8:	mov	x0, x22
  4079fc:	bl	4051a0 <strchr@plt>
  407a00:	cbnz	x0, 407a14 <print_escape_buf@@Base+0x84>
  407a04:	mov	w0, w20
  407a08:	bl	405310 <putchar@plt>
  407a0c:	add	x19, x19, #0x1
  407a10:	b	4079b8 <print_escape_buf@@Base+0x28>
  407a14:	mov	w1, w20
  407a18:	mov	x0, x23
  407a1c:	bl	4052d0 <printf@plt>
  407a20:	b	407a0c <print_escape_buf@@Base+0x7c>

0000000000407a24 <print_timestamp@@Base>:
  407a24:	stp	x29, x30, [sp, #-96]!
  407a28:	mov	x1, #0x0                   	// #0
  407a2c:	mov	x29, sp
  407a30:	stp	x19, x20, [sp, #16]
  407a34:	add	x20, sp, #0x28
  407a38:	mov	x19, x0
  407a3c:	mov	x0, x20
  407a40:	bl	404ff0 <gettimeofday@plt>
  407a44:	mov	x0, x20
  407a48:	bl	404f30 <localtime@plt>
  407a4c:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407a50:	ldr	x1, [x1, #4032]
  407a54:	ldr	w1, [x1]
  407a58:	cbz	w1, 407aa0 <print_timestamp@@Base+0x7c>
  407a5c:	add	x20, sp, #0x38
  407a60:	mov	x3, x0
  407a64:	mov	x1, #0x28                  	// #40
  407a68:	mov	x0, x20
  407a6c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  407a70:	add	x2, x2, #0xd8b
  407a74:	bl	404ee0 <strftime@plt>
  407a78:	ldr	x3, [sp, #48]
  407a7c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407a80:	mov	x2, x20
  407a84:	add	x1, x1, #0xd9d
  407a88:	mov	x0, x19
  407a8c:	bl	405330 <fprintf@plt>
  407a90:	mov	w0, #0x0                   	// #0
  407a94:	ldp	x19, x20, [sp, #16]
  407a98:	ldp	x29, x30, [sp], #96
  407a9c:	ret
  407aa0:	bl	405240 <asctime@plt>
  407aa4:	mov	x20, x0
  407aa8:	bl	404e00 <strlen@plt>
  407aac:	add	x0, x20, x0
  407ab0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407ab4:	mov	x2, x20
  407ab8:	add	x1, x1, #0xda9
  407abc:	sturb	wzr, [x0, #-1]
  407ac0:	ldr	x3, [sp, #48]
  407ac4:	b	407a88 <print_timestamp@@Base+0x64>

0000000000407ac8 <print_name_and_link@@Base>:
  407ac8:	stp	x29, x30, [sp, #-112]!
  407acc:	mov	x29, sp
  407ad0:	stp	x21, x22, [sp, #32]
  407ad4:	mov	x22, x0
  407ad8:	mov	x21, x1
  407adc:	ldr	x0, [x2, #40]
  407ae0:	stp	x19, x20, [sp, #16]
  407ae4:	cbz	x0, 407b20 <print_name_and_link@@Base+0x58>
  407ae8:	ldr	w20, [x0, #4]
  407aec:	cbz	w20, 407bd8 <print_name_and_link@@Base+0x110>
  407af0:	ldr	x0, [x2, #296]
  407af4:	cbz	x0, 407b8c <print_name_and_link@@Base+0xc4>
  407af8:	bl	4091a4 <is_json_context@@Base>
  407afc:	tst	w0, #0xff
  407b00:	b.eq	407b28 <print_name_and_link@@Base+0x60>  // b.none
  407b04:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  407b08:	mov	w4, w20
  407b0c:	add	x2, x2, #0xdc6
  407b10:	mov	x3, #0x0                   	// #0
  407b14:	mov	w1, #0x6                   	// #6
  407b18:	mov	w0, #0x2                   	// #2
  407b1c:	bl	4092b8 <print_color_int@@Base>
  407b20:	mov	w20, #0x0                   	// #0
  407b24:	b	407b5c <print_name_and_link@@Base+0x94>
  407b28:	mov	w0, w20
  407b2c:	bl	408bf8 <ll_idx_n2a@@Base>
  407b30:	mov	x19, x0
  407b34:	mov	w20, #0x0                   	// #0
  407b38:	cbz	x19, 407b5c <print_name_and_link@@Base+0x94>
  407b3c:	add	x0, sp, #0x30
  407b40:	mov	x3, x21
  407b44:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  407b48:	mov	x4, x19
  407b4c:	add	x2, x2, #0xdd1
  407b50:	mov	x21, x0
  407b54:	mov	x1, #0x40                  	// #64
  407b58:	bl	404f10 <snprintf@plt>
  407b5c:	mov	x4, x21
  407b60:	mov	x3, x22
  407b64:	mov	w1, #0x0                   	// #0
  407b68:	mov	w0, #0x4                   	// #4
  407b6c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  407b70:	add	x2, x2, #0xdd7
  407b74:	bl	409670 <print_color_string@@Base>
  407b78:	mov	w0, w20
  407b7c:	ldp	x19, x20, [sp, #16]
  407b80:	ldp	x21, x22, [sp, #32]
  407b84:	ldp	x29, x30, [sp], #112
  407b88:	ret
  407b8c:	mov	w0, w20
  407b90:	bl	408c34 <ll_index_to_name@@Base>
  407b94:	mov	x19, x0
  407b98:	bl	4091a4 <is_json_context@@Base>
  407b9c:	tst	w0, #0xff
  407ba0:	b.eq	407bc4 <print_name_and_link@@Base+0xfc>  // b.none
  407ba4:	mov	x4, x19
  407ba8:	mov	x19, #0x0                   	// #0
  407bac:	mov	x3, #0x0                   	// #0
  407bb0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0xad0>
  407bb4:	mov	w1, #0x6                   	// #6
  407bb8:	add	x2, x2, #0xfe
  407bbc:	mov	w0, #0x2                   	// #2
  407bc0:	bl	409670 <print_color_string@@Base>
  407bc4:	mov	w0, w20
  407bc8:	bl	408cf8 <ll_index_to_flags@@Base>
  407bcc:	mvn	w20, w0
  407bd0:	and	w20, w20, #0x1
  407bd4:	b	407b38 <print_name_and_link@@Base+0x70>
  407bd8:	bl	4091a4 <is_json_context@@Base>
  407bdc:	tst	w0, #0xff
  407be0:	b.eq	407c04 <print_name_and_link@@Base+0x13c>  // b.none
  407be4:	mov	x4, #0x0                   	// #0
  407be8:	mov	x3, #0x0                   	// #0
  407bec:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0xad0>
  407bf0:	mov	w1, #0x6                   	// #6
  407bf4:	add	x2, x2, #0xfe
  407bf8:	mov	w0, #0x2                   	// #2
  407bfc:	bl	4098ec <print_color_null@@Base>
  407c00:	b	407b20 <print_name_and_link@@Base+0x58>
  407c04:	adrp	x19, 40c000 <addattr_nest@@Base+0x4>
  407c08:	mov	w20, #0x0                   	// #0
  407c0c:	add	x19, x19, #0xdc1
  407c10:	b	407b3c <print_name_and_link@@Base+0x74>

0000000000407c14 <getcmdline@@Base>:
  407c14:	stp	x29, x30, [sp, #-128]!
  407c18:	mov	x29, sp
  407c1c:	stp	x19, x20, [sp, #16]
  407c20:	stp	x21, x22, [sp, #32]
  407c24:	mov	x22, x0
  407c28:	stp	x23, x24, [sp, #48]
  407c2c:	mov	x23, x1
  407c30:	stp	x25, x26, [sp, #64]
  407c34:	mov	x25, x2
  407c38:	stp	x27, x28, [sp, #80]
  407c3c:	bl	405140 <getline@plt>
  407c40:	mov	x20, x0
  407c44:	tbnz	x0, #63, 407cd0 <getcmdline@@Base+0xbc>
  407c48:	adrp	x21, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407c4c:	ldr	x1, [x21, #4000]
  407c50:	ldr	w0, [x1]
  407c54:	add	w0, w0, #0x1
  407c58:	str	w0, [x1]
  407c5c:	ldr	x0, [x22]
  407c60:	mov	w1, #0x23                  	// #35
  407c64:	bl	4051a0 <strchr@plt>
  407c68:	cbz	x0, 407c70 <getcmdline@@Base+0x5c>
  407c6c:	strb	wzr, [x0]
  407c70:	ldr	x21, [x21, #4000]
  407c74:	adrp	x24, 40c000 <addattr_nest@@Base+0x4>
  407c78:	add	x26, sp, #0x78
  407c7c:	add	x24, x24, #0xe08
  407c80:	add	x27, sp, #0x70
  407c84:	ldr	x0, [x22]
  407c88:	mov	x1, x24
  407c8c:	bl	405280 <strstr@plt>
  407c90:	mov	x28, x0
  407c94:	cbz	x0, 407cd0 <getcmdline@@Base+0xbc>
  407c98:	mov	x2, x25
  407c9c:	mov	x1, x26
  407ca0:	mov	x0, x27
  407ca4:	stp	xzr, xzr, [sp, #112]
  407ca8:	bl	405140 <getline@plt>
  407cac:	mov	x19, x0
  407cb0:	tbz	x0, #63, 407cf0 <getcmdline@@Base+0xdc>
  407cb4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407cb8:	ldr	x0, [x0, #3992]
  407cbc:	ldr	x1, [x0]
  407cc0:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  407cc4:	add	x0, x0, #0xdde
  407cc8:	bl	404e10 <fputs@plt>
  407ccc:	mov	x20, x19
  407cd0:	mov	x0, x20
  407cd4:	ldp	x19, x20, [sp, #16]
  407cd8:	ldp	x21, x22, [sp, #32]
  407cdc:	ldp	x23, x24, [sp, #48]
  407ce0:	ldp	x25, x26, [sp, #64]
  407ce4:	ldp	x27, x28, [sp, #80]
  407ce8:	ldp	x29, x30, [sp], #128
  407cec:	ret
  407cf0:	ldr	w0, [x21]
  407cf4:	mov	w1, #0x23                  	// #35
  407cf8:	add	w0, w0, #0x1
  407cfc:	str	w0, [x21]
  407d00:	strb	wzr, [x28]
  407d04:	ldr	x0, [sp, #112]
  407d08:	bl	4051a0 <strchr@plt>
  407d0c:	cbz	x0, 407d14 <getcmdline@@Base+0x100>
  407d10:	strb	wzr, [x0]
  407d14:	ldr	x2, [x22]
  407d18:	str	x2, [sp, #104]
  407d1c:	mov	x0, x2
  407d20:	bl	404e00 <strlen@plt>
  407d24:	mov	x28, x0
  407d28:	ldr	x0, [sp, #112]
  407d2c:	bl	404e00 <strlen@plt>
  407d30:	add	x1, x28, x0
  407d34:	ldr	x2, [sp, #104]
  407d38:	add	x1, x1, #0x1
  407d3c:	str	x1, [x23]
  407d40:	mov	x0, x2
  407d44:	bl	405040 <realloc@plt>
  407d48:	str	x0, [x22]
  407d4c:	cbnz	x0, 407d74 <getcmdline@@Base+0x160>
  407d50:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407d54:	mov	x19, #0xffffffffffffffff    	// #-1
  407d58:	ldr	x0, [x0, #3992]
  407d5c:	ldr	x1, [x0]
  407d60:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  407d64:	add	x0, x0, #0xdf9
  407d68:	bl	404e10 <fputs@plt>
  407d6c:	str	xzr, [x23]
  407d70:	b	407ccc <getcmdline@@Base+0xb8>
  407d74:	ldr	x1, [sp, #112]
  407d78:	sub	x19, x19, #0x2
  407d7c:	add	x20, x20, x19
  407d80:	bl	404fc0 <strcat@plt>
  407d84:	ldr	x0, [sp, #112]
  407d88:	bl	405160 <free@plt>
  407d8c:	b	407c84 <getcmdline@@Base+0x70>

0000000000407d90 <makeargs@@Base>:
  407d90:	stp	x29, x30, [sp, #-96]!
  407d94:	mov	x29, sp
  407d98:	stp	x21, x22, [sp, #32]
  407d9c:	adrp	x22, 40c000 <addattr_nest@@Base+0x4>
  407da0:	add	x22, x22, #0xea2
  407da4:	add	x22, x22, #0x1b
  407da8:	stp	x19, x20, [sp, #16]
  407dac:	mov	x19, x0
  407db0:	stp	x23, x24, [sp, #48]
  407db4:	mov	x23, x1
  407db8:	sub	w24, w2, #0x1
  407dbc:	mov	x21, #0x0                   	// #0
  407dc0:	stp	x25, x26, [sp, #64]
  407dc4:	mov	w25, #0x22                  	// #34
  407dc8:	str	x27, [sp, #80]
  407dcc:	ldrb	w0, [x19]
  407dd0:	mov	w27, w21
  407dd4:	mov	w26, w21
  407dd8:	cbnz	w0, 407e00 <makeargs@@Base+0x70>
  407ddc:	str	xzr, [x23, w26, sxtw #3]
  407de0:	mov	w0, w26
  407de4:	ldp	x19, x20, [sp, #16]
  407de8:	ldp	x21, x22, [sp, #32]
  407dec:	ldp	x23, x24, [sp, #48]
  407df0:	ldp	x25, x26, [sp, #64]
  407df4:	ldr	x27, [sp, #80]
  407df8:	ldp	x29, x30, [sp], #96
  407dfc:	ret
  407e00:	mov	x1, x22
  407e04:	mov	x0, x19
  407e08:	bl	405190 <strspn@plt>
  407e0c:	ldrb	w1, [x19, x0]
  407e10:	add	x20, x19, x0
  407e14:	cbz	w1, 407ddc <makeargs@@Base+0x4c>
  407e18:	cmp	w24, w21
  407e1c:	b.gt	407e40 <makeargs@@Base+0xb0>
  407e20:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407e24:	ldr	x0, [x0, #3992]
  407e28:	ldr	x1, [x0]
  407e2c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  407e30:	add	x0, x0, #0xe0b
  407e34:	bl	404e10 <fputs@plt>
  407e38:	mov	w0, #0x1                   	// #1
  407e3c:	bl	404e20 <exit@plt>
  407e40:	cmp	w1, #0x27
  407e44:	add	w26, w27, #0x1
  407e48:	ccmp	w1, w25, #0x4, ne  // ne = any
  407e4c:	b.ne	407e7c <makeargs@@Base+0xec>  // b.any
  407e50:	add	x0, x20, #0x1
  407e54:	str	x0, [x23, x21, lsl #3]
  407e58:	bl	4051a0 <strchr@plt>
  407e5c:	mov	x19, x0
  407e60:	cbnz	x0, 407e98 <makeargs@@Base+0x108>
  407e64:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  407e68:	ldr	x0, [x0, #3992]
  407e6c:	ldr	x1, [x0]
  407e70:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  407e74:	add	x0, x0, #0xe2a
  407e78:	b	407e34 <makeargs@@Base+0xa4>
  407e7c:	str	x20, [x23, x21, lsl #3]
  407e80:	mov	x1, x22
  407e84:	mov	x0, x20
  407e88:	bl	4052b0 <strcspn@plt>
  407e8c:	add	x19, x20, x0
  407e90:	ldrb	w0, [x20, x0]
  407e94:	cbz	w0, 407ddc <makeargs@@Base+0x4c>
  407e98:	add	x21, x21, #0x1
  407e9c:	strb	wzr, [x19], #1
  407ea0:	b	407dcc <makeargs@@Base+0x3c>

0000000000407ea4 <print_nlmsg_timestamp@@Base>:
  407ea4:	stp	x29, x30, [sp, #-64]!
  407ea8:	mov	x29, sp
  407eac:	stp	x19, x20, [sp, #16]
  407eb0:	mov	x20, x0
  407eb4:	ldr	w0, [x1, #16]
  407eb8:	str	x21, [sp, #32]
  407ebc:	ldr	w21, [x1, #20]
  407ec0:	str	x0, [sp, #56]
  407ec4:	add	x0, sp, #0x38
  407ec8:	bl	404f30 <localtime@plt>
  407ecc:	bl	405240 <asctime@plt>
  407ed0:	mov	x19, x0
  407ed4:	bl	404e00 <strlen@plt>
  407ed8:	add	x0, x19, x0
  407edc:	mov	x3, x21
  407ee0:	mov	x2, x19
  407ee4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407ee8:	add	x1, x1, #0xe46
  407eec:	sturb	wzr, [x0, #-1]
  407ef0:	mov	x0, x20
  407ef4:	bl	405330 <fprintf@plt>
  407ef8:	ldp	x19, x20, [sp, #16]
  407efc:	ldr	x21, [sp, #32]
  407f00:	ldp	x29, x30, [sp], #64
  407f04:	ret

0000000000407f08 <int_to_str@@Base>:
  407f08:	stp	x29, x30, [sp, #-32]!
  407f0c:	mov	w2, w0
  407f10:	mov	x29, sp
  407f14:	str	x19, [sp, #16]
  407f18:	mov	x19, x1
  407f1c:	mov	x0, x19
  407f20:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  407f24:	add	x1, x1, #0xe5c
  407f28:	bl	404eb0 <sprintf@plt>
  407f2c:	mov	x0, x19
  407f30:	ldr	x19, [sp, #16]
  407f34:	ldp	x29, x30, [sp], #32
  407f38:	ret

0000000000407f3c <get_guid@@Base>:
  407f3c:	stp	x29, x30, [sp, #-64]!
  407f40:	mov	x29, sp
  407f44:	stp	x19, x20, [sp, #16]
  407f48:	mov	x19, x1
  407f4c:	stp	x21, x22, [sp, #32]
  407f50:	mov	x21, x0
  407f54:	mov	x0, x1
  407f58:	bl	404e00 <strlen@plt>
  407f5c:	cmp	x0, #0x17
  407f60:	b.ne	407fec <get_guid@@Base+0xb0>  // b.any
  407f64:	add	x20, x19, #0x2
  407f68:	add	x19, x19, #0x17
  407f6c:	mov	x0, x20
  407f70:	ldrb	w1, [x0]
  407f74:	cmp	w1, #0x3a
  407f78:	b.ne	407fec <get_guid@@Base+0xb0>  // b.any
  407f7c:	add	x0, x0, #0x3
  407f80:	cmp	x0, x19
  407f84:	b.ne	407f70 <get_guid@@Base+0x34>  // b.any
  407f88:	add	x22, sp, #0x38
  407f8c:	mov	w19, #0x38                  	// #56
  407f90:	str	xzr, [x21]
  407f94:	mov	x1, x22
  407f98:	sub	x0, x20, #0x2
  407f9c:	mov	w2, #0x10                  	// #16
  407fa0:	bl	404df0 <strtoul@plt>
  407fa4:	ldr	x1, [sp, #56]
  407fa8:	cmp	x1, x20
  407fac:	b.ne	407fec <get_guid@@Base+0xb0>  // b.any
  407fb0:	cmp	x0, #0xff
  407fb4:	b.hi	407fec <get_guid@@Base+0xb0>  // b.pmore
  407fb8:	lsl	x2, x0, x19
  407fbc:	sub	w19, w19, #0x8
  407fc0:	ldr	x0, [x21]
  407fc4:	add	x20, x20, #0x3
  407fc8:	cmn	w19, #0x8
  407fcc:	orr	x0, x0, x2
  407fd0:	str	x0, [x21]
  407fd4:	b.ne	407f94 <get_guid@@Base+0x58>  // b.any
  407fd8:	mov	w0, #0x0                   	// #0
  407fdc:	ldp	x19, x20, [sp, #16]
  407fe0:	ldp	x21, x22, [sp, #32]
  407fe4:	ldp	x29, x30, [sp], #64
  407fe8:	ret
  407fec:	mov	w0, #0xffffffff            	// #-1
  407ff0:	b	407fdc <get_guid@@Base+0xa0>

0000000000407ff4 <get_real_family@@Base>:
  407ff4:	cmp	w0, #0x5
  407ff8:	b.ne	408010 <get_real_family@@Base+0x1c>  // b.any
  407ffc:	cmp	w1, #0x80
  408000:	b.eq	408018 <get_real_family@@Base+0x24>  // b.none
  408004:	cmp	w1, #0x81
  408008:	mov	w0, #0xa                   	// #10
  40800c:	csel	w1, w1, w0, ne  // ne = any
  408010:	mov	w0, w1
  408014:	ret
  408018:	mov	w1, #0x2                   	// #2
  40801c:	b	408010 <get_real_family@@Base+0x1c>

0000000000408020 <get_rtnl_link_stats_rta@@Base>:
  408020:	sub	sp, sp, #0x990
  408024:	stp	x29, x30, [sp]
  408028:	mov	x29, sp
  40802c:	str	x23, [sp, #48]
  408030:	ldr	x23, [x1, #184]
  408034:	stp	x19, x20, [sp, #16]
  408038:	mov	x19, x0
  40803c:	stp	x21, x22, [sp, #32]
  408040:	cbnz	x23, 4080e0 <get_rtnl_link_stats_rta@@Base+0xc0>
  408044:	ldr	x23, [x1, #56]
  408048:	cbnz	x23, 408140 <get_rtnl_link_stats_rta@@Base+0x120>
  40804c:	ldr	x2, [x1, #96]
  408050:	cbz	x2, 408154 <get_rtnl_link_stats_rta@@Base+0x134>
  408054:	ldrh	w3, [x2], #4
  408058:	add	x0, sp, #0x48
  40805c:	mov	w1, #0x128                 	// #296
  408060:	sub	w3, w3, #0x4
  408064:	bl	40c3a8 <parse_rtattr@@Base>
  408068:	ldr	x20, [sp, #96]
  40806c:	cbz	x20, 4080c0 <get_rtnl_link_stats_rta@@Base+0xa0>
  408070:	mov	x0, x19
  408074:	mov	x2, #0xc0                  	// #192
  408078:	mov	w1, #0x0                   	// #0
  40807c:	bl	404fe0 <memset@plt>
  408080:	ldur	x0, [x20, #12]
  408084:	str	x0, [x19]
  408088:	ldur	x0, [x20, #20]
  40808c:	str	x0, [x19, #16]
  408090:	ldur	x0, [x20, #44]
  408094:	str	x0, [x19, #8]
  408098:	ldur	x0, [x20, #52]
  40809c:	str	x0, [x19, #24]
  4080a0:	ldur	x0, [x20, #108]
  4080a4:	str	x0, [x19, #32]
  4080a8:	ldur	x0, [x20, #116]
  4080ac:	str	x0, [x19, #40]
  4080b0:	ldur	x0, [x20, #188]
  4080b4:	str	x0, [x19, #64]
  4080b8:	ldur	x0, [x20, #252]
  4080bc:	str	x0, [x19, #104]
  4080c0:	mov	w20, #0xc0                  	// #192
  4080c4:	mov	w0, w20
  4080c8:	ldp	x29, x30, [sp]
  4080cc:	ldp	x19, x20, [sp, #16]
  4080d0:	ldp	x21, x22, [sp, #32]
  4080d4:	ldr	x23, [sp, #48]
  4080d8:	add	sp, sp, #0x990
  4080dc:	ret
  4080e0:	mov	x22, x0
  4080e4:	mov	w20, #0xc0                  	// #192
  4080e8:	ldrh	w21, [x23]
  4080ec:	sub	w21, w21, #0x4
  4080f0:	cmp	w20, w21
  4080f4:	b.le	40814c <get_rtnl_link_stats_rta@@Base+0x12c>
  4080f8:	sub	w2, w20, w21
  4080fc:	add	x0, x22, w21, sxtw
  408100:	mov	w1, #0x0                   	// #0
  408104:	sxtw	x2, w2
  408108:	bl	404fe0 <memset@plt>
  40810c:	sxtw	x2, w21
  408110:	add	x1, x23, #0x4
  408114:	mov	x0, x22
  408118:	bl	404dd0 <memcpy@plt>
  40811c:	cmp	x22, x19
  408120:	b.eq	4080c4 <get_rtnl_link_stats_rta@@Base+0xa4>  // b.none
  408124:	mov	x0, #0x0                   	// #0
  408128:	ldr	w1, [x22, x0, lsl #2]
  40812c:	str	x1, [x19, x0, lsl #3]
  408130:	add	x0, x0, #0x1
  408134:	cmp	x0, #0x18
  408138:	b.ne	408128 <get_rtnl_link_stats_rta@@Base+0x108>  // b.any
  40813c:	b	4080c4 <get_rtnl_link_stats_rta@@Base+0xa4>
  408140:	add	x22, sp, #0x48
  408144:	mov	w20, #0x60                  	// #96
  408148:	b	4080e8 <get_rtnl_link_stats_rta@@Base+0xc8>
  40814c:	mov	w21, w20
  408150:	b	40810c <get_rtnl_link_stats_rta@@Base+0xec>
  408154:	mov	w20, #0xffffffff            	// #-1
  408158:	b	4080c4 <get_rtnl_link_stats_rta@@Base+0xa4>

000000000040815c <strlcpy@@Base>:
  40815c:	stp	x29, x30, [sp, #-48]!
  408160:	mov	x29, sp
  408164:	stp	x19, x20, [sp, #16]
  408168:	mov	x19, x2
  40816c:	stp	x21, x22, [sp, #32]
  408170:	mov	x21, x0
  408174:	mov	x22, x1
  408178:	mov	x0, x1
  40817c:	bl	404e00 <strlen@plt>
  408180:	mov	x20, x0
  408184:	cbz	x19, 4081a8 <strlcpy@@Base+0x4c>
  408188:	sub	x19, x19, #0x1
  40818c:	mov	x1, x22
  408190:	cmp	x19, x0
  408194:	csel	x19, x19, x0, ls  // ls = plast
  408198:	mov	x0, x21
  40819c:	mov	x2, x19
  4081a0:	bl	404dd0 <memcpy@plt>
  4081a4:	strb	wzr, [x21, x19]
  4081a8:	mov	x0, x20
  4081ac:	ldp	x19, x20, [sp, #16]
  4081b0:	ldp	x21, x22, [sp, #32]
  4081b4:	ldp	x29, x30, [sp], #48
  4081b8:	ret

00000000004081bc <strlcat@@Base>:
  4081bc:	stp	x29, x30, [sp, #-48]!
  4081c0:	mov	x29, sp
  4081c4:	stp	x21, x22, [sp, #32]
  4081c8:	mov	x21, x2
  4081cc:	mov	x22, x0
  4081d0:	stp	x19, x20, [sp, #16]
  4081d4:	mov	x20, x1
  4081d8:	bl	404e00 <strlen@plt>
  4081dc:	mov	x19, x0
  4081e0:	cmp	x0, x21
  4081e4:	b.cc	408204 <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  4081e8:	mov	x0, x20
  4081ec:	bl	404e00 <strlen@plt>
  4081f0:	add	x0, x0, x19
  4081f4:	ldp	x19, x20, [sp, #16]
  4081f8:	ldp	x21, x22, [sp, #32]
  4081fc:	ldp	x29, x30, [sp], #48
  408200:	ret
  408204:	sub	x2, x21, x0
  408208:	mov	x1, x20
  40820c:	add	x0, x22, x0
  408210:	bl	40815c <strlcpy@@Base>
  408214:	b	4081f0 <strlcat@@Base+0x34>

0000000000408218 <drop_cap@@Base>:
  408218:	stp	x29, x30, [sp, #-48]!
  40821c:	mov	x29, sp
  408220:	str	x19, [sp, #16]
  408224:	bl	404ec0 <getuid@plt>
  408228:	cbz	w0, 408284 <drop_cap@@Base+0x6c>
  40822c:	bl	404e70 <geteuid@plt>
  408230:	cbz	w0, 408284 <drop_cap@@Base+0x6c>
  408234:	bl	405120 <cap_get_proc@plt>
  408238:	mov	x19, x0
  40823c:	cbnz	x0, 408248 <drop_cap@@Base+0x30>
  408240:	mov	w0, #0x1                   	// #1
  408244:	bl	404e20 <exit@plt>
  408248:	add	x3, sp, #0x2c
  40824c:	mov	w2, #0x2                   	// #2
  408250:	mov	w1, #0xc                   	// #12
  408254:	bl	405020 <cap_get_flag@plt>
  408258:	cbnz	w0, 408240 <drop_cap@@Base+0x28>
  40825c:	ldr	w0, [sp, #44]
  408260:	cbnz	w0, 40827c <drop_cap@@Base+0x64>
  408264:	mov	x0, x19
  408268:	bl	405210 <cap_clear@plt>
  40826c:	cbnz	w0, 408240 <drop_cap@@Base+0x28>
  408270:	mov	x0, x19
  408274:	bl	405050 <cap_set_proc@plt>
  408278:	cbnz	w0, 408240 <drop_cap@@Base+0x28>
  40827c:	mov	x0, x19
  408280:	bl	405250 <cap_free@plt>
  408284:	ldr	x19, [sp, #16]
  408288:	ldp	x29, x30, [sp], #48
  40828c:	ret

0000000000408290 <get_time@@Base>:
  408290:	stp	x29, x30, [sp, #-64]!
  408294:	mov	x29, sp
  408298:	stp	x19, x20, [sp, #16]
  40829c:	mov	x20, x1
  4082a0:	add	x1, sp, #0x38
  4082a4:	str	x21, [sp, #32]
  4082a8:	mov	x21, x0
  4082ac:	mov	x0, x20
  4082b0:	str	d8, [sp, #40]
  4082b4:	bl	404e60 <strtod@plt>
  4082b8:	ldr	x19, [sp, #56]
  4082bc:	cmp	x19, x20
  4082c0:	b.eq	4083c0 <get_time@@Base+0x130>  // b.none
  4082c4:	ldrb	w0, [x19]
  4082c8:	fmov	d8, d0
  4082cc:	cbz	w0, 40831c <get_time@@Base+0x8c>
  4082d0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4082d4:	mov	x0, x19
  4082d8:	add	x1, x1, #0xad4
  4082dc:	bl	405030 <strcasecmp@plt>
  4082e0:	cbz	w0, 40830c <get_time@@Base+0x7c>
  4082e4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4082e8:	mov	x0, x19
  4082ec:	add	x1, x1, #0xaeb
  4082f0:	bl	405030 <strcasecmp@plt>
  4082f4:	cbz	w0, 40830c <get_time@@Base+0x7c>
  4082f8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4082fc:	mov	x0, x19
  408300:	add	x1, x1, #0xaf0
  408304:	bl	405030 <strcasecmp@plt>
  408308:	cbnz	w0, 40833c <get_time@@Base+0xac>
  40830c:	mov	x0, #0x848000000000        	// #145685290680320
  408310:	movk	x0, #0x412e, lsl #48
  408314:	fmov	d0, x0
  408318:	fmul	d8, d8, d0
  40831c:	fcvtzu	w1, d8
  408320:	mov	w0, #0x0                   	// #0
  408324:	str	w1, [x21]
  408328:	ldp	x19, x20, [sp, #16]
  40832c:	ldr	x21, [sp, #32]
  408330:	ldr	d8, [sp, #40]
  408334:	ldp	x29, x30, [sp], #64
  408338:	ret
  40833c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408340:	mov	x0, x19
  408344:	add	x1, x1, #0xe74
  408348:	bl	405030 <strcasecmp@plt>
  40834c:	cbz	w0, 408378 <get_time@@Base+0xe8>
  408350:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408354:	mov	x0, x19
  408358:	add	x1, x1, #0xaea
  40835c:	bl	405030 <strcasecmp@plt>
  408360:	cbz	w0, 408378 <get_time@@Base+0xe8>
  408364:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408368:	mov	x0, x19
  40836c:	add	x1, x1, #0xaef
  408370:	bl	405030 <strcasecmp@plt>
  408374:	cbnz	w0, 408384 <get_time@@Base+0xf4>
  408378:	mov	x0, #0x400000000000        	// #70368744177664
  40837c:	movk	x0, #0x408f, lsl #48
  408380:	b	408314 <get_time@@Base+0x84>
  408384:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408388:	mov	x0, x19
  40838c:	add	x1, x1, #0xe98
  408390:	bl	405030 <strcasecmp@plt>
  408394:	cbz	w0, 40831c <get_time@@Base+0x8c>
  408398:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40839c:	mov	x0, x19
  4083a0:	add	x1, x1, #0xe5f
  4083a4:	bl	405030 <strcasecmp@plt>
  4083a8:	cbz	w0, 40831c <get_time@@Base+0x8c>
  4083ac:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4083b0:	mov	x0, x19
  4083b4:	add	x1, x1, #0xe64
  4083b8:	bl	405030 <strcasecmp@plt>
  4083bc:	cbz	w0, 40831c <get_time@@Base+0x8c>
  4083c0:	mov	w0, #0xffffffff            	// #-1
  4083c4:	b	408328 <get_time@@Base+0x98>

00000000004083c8 <sprint_time@@Base>:
  4083c8:	stp	x29, x30, [sp, #-32]!
  4083cc:	mov	w3, w0
  4083d0:	ucvtf	d0, w0
  4083d4:	mov	x29, sp
  4083d8:	str	x19, [sp, #16]
  4083dc:	mov	w0, #0x423f                	// #16959
  4083e0:	movk	w0, #0xf, lsl #16
  4083e4:	mov	x19, x1
  4083e8:	cmp	w3, w0
  4083ec:	b.ls	408424 <sprint_time@@Base+0x5c>  // b.plast
  4083f0:	mov	x0, #0x848000000000        	// #145685290680320
  4083f4:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4083f8:	movk	x0, #0x412e, lsl #48
  4083fc:	fmov	d1, x0
  408400:	add	x2, x2, #0xe6a
  408404:	fdiv	d0, d0, d1
  408408:	mov	x0, x19
  40840c:	mov	x1, #0x3f                  	// #63
  408410:	bl	404f10 <snprintf@plt>
  408414:	mov	x0, x19
  408418:	ldr	x19, [sp, #16]
  40841c:	ldp	x29, x30, [sp], #32
  408420:	ret
  408424:	cmp	w3, #0x3e7
  408428:	b.ls	408448 <sprint_time@@Base+0x80>  // b.plast
  40842c:	mov	x0, #0x400000000000        	// #70368744177664
  408430:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408434:	movk	x0, #0x408f, lsl #48
  408438:	fmov	d1, x0
  40843c:	add	x2, x2, #0xe70
  408440:	fdiv	d0, d0, d1
  408444:	b	408408 <sprint_time@@Base+0x40>
  408448:	mov	x0, x19
  40844c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408450:	mov	x1, #0x3f                  	// #63
  408454:	add	x2, x2, #0xe77
  408458:	bl	404f10 <snprintf@plt>
  40845c:	b	408414 <sprint_time@@Base+0x4c>

0000000000408460 <get_time64@@Base>:
  408460:	stp	x29, x30, [sp, #-64]!
  408464:	mov	x29, sp
  408468:	stp	x19, x20, [sp, #16]
  40846c:	mov	x20, x1
  408470:	add	x1, sp, #0x38
  408474:	str	x21, [sp, #32]
  408478:	mov	x21, x0
  40847c:	mov	x0, x20
  408480:	str	d8, [sp, #40]
  408484:	bl	404e60 <strtod@plt>
  408488:	ldr	x19, [sp, #56]
  40848c:	cmp	x19, x20
  408490:	b.eq	4085d8 <get_time64@@Base+0x178>  // b.none
  408494:	ldrb	w0, [x19]
  408498:	fmov	d8, d0
  40849c:	cbz	w0, 4084ec <get_time64@@Base+0x8c>
  4084a0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4084a4:	mov	x0, x19
  4084a8:	add	x1, x1, #0xad4
  4084ac:	bl	405030 <strcasecmp@plt>
  4084b0:	cbz	w0, 4084dc <get_time64@@Base+0x7c>
  4084b4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4084b8:	mov	x0, x19
  4084bc:	add	x1, x1, #0xaeb
  4084c0:	bl	405030 <strcasecmp@plt>
  4084c4:	cbz	w0, 4084dc <get_time64@@Base+0x7c>
  4084c8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4084cc:	mov	x0, x19
  4084d0:	add	x1, x1, #0xaf0
  4084d4:	bl	405030 <strcasecmp@plt>
  4084d8:	cbnz	w0, 40850c <get_time64@@Base+0xac>
  4084dc:	mov	x0, #0xcd6500000000        	// #225833675390976
  4084e0:	movk	x0, #0x41cd, lsl #48
  4084e4:	fmov	d0, x0
  4084e8:	fmul	d8, d8, d0
  4084ec:	fcvtzs	d8, d8
  4084f0:	mov	w0, #0x0                   	// #0
  4084f4:	str	d8, [x21]
  4084f8:	ldp	x19, x20, [sp, #16]
  4084fc:	ldr	x21, [sp, #32]
  408500:	ldr	d8, [sp, #40]
  408504:	ldp	x29, x30, [sp], #64
  408508:	ret
  40850c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408510:	mov	x0, x19
  408514:	add	x1, x1, #0xe74
  408518:	bl	405030 <strcasecmp@plt>
  40851c:	cbz	w0, 408548 <get_time64@@Base+0xe8>
  408520:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408524:	mov	x0, x19
  408528:	add	x1, x1, #0xaea
  40852c:	bl	405030 <strcasecmp@plt>
  408530:	cbz	w0, 408548 <get_time64@@Base+0xe8>
  408534:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408538:	mov	x0, x19
  40853c:	add	x1, x1, #0xaef
  408540:	bl	405030 <strcasecmp@plt>
  408544:	cbnz	w0, 408554 <get_time64@@Base+0xf4>
  408548:	mov	x0, #0x848000000000        	// #145685290680320
  40854c:	movk	x0, #0x412e, lsl #48
  408550:	b	4084e4 <get_time64@@Base+0x84>
  408554:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408558:	mov	x0, x19
  40855c:	add	x1, x1, #0xe98
  408560:	bl	405030 <strcasecmp@plt>
  408564:	cbz	w0, 408590 <get_time64@@Base+0x130>
  408568:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40856c:	mov	x0, x19
  408570:	add	x1, x1, #0xe5f
  408574:	bl	405030 <strcasecmp@plt>
  408578:	cbz	w0, 408590 <get_time64@@Base+0x130>
  40857c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408580:	mov	x0, x19
  408584:	add	x1, x1, #0xe64
  408588:	bl	405030 <strcasecmp@plt>
  40858c:	cbnz	w0, 40859c <get_time64@@Base+0x13c>
  408590:	mov	x0, #0x400000000000        	// #70368744177664
  408594:	movk	x0, #0x408f, lsl #48
  408598:	b	4084e4 <get_time64@@Base+0x84>
  40859c:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4085a0:	mov	x0, x19
  4085a4:	add	x1, x1, #0xe9f
  4085a8:	bl	405030 <strcasecmp@plt>
  4085ac:	cbz	w0, 4084ec <get_time64@@Base+0x8c>
  4085b0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4085b4:	mov	x0, x19
  4085b8:	add	x1, x1, #0xe7c
  4085bc:	bl	405030 <strcasecmp@plt>
  4085c0:	cbz	w0, 4084ec <get_time64@@Base+0x8c>
  4085c4:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  4085c8:	mov	x0, x19
  4085cc:	add	x1, x1, #0xe81
  4085d0:	bl	405030 <strcasecmp@plt>
  4085d4:	cbz	w0, 4084ec <get_time64@@Base+0x8c>
  4085d8:	mov	w0, #0xffffffff            	// #-1
  4085dc:	b	4084f8 <get_time64@@Base+0x98>

00000000004085e0 <sprint_time64@@Base>:
  4085e0:	stp	x29, x30, [sp, #-32]!
  4085e4:	mov	x3, x0
  4085e8:	scvtf	d0, x0
  4085ec:	mov	x29, sp
  4085f0:	str	x19, [sp, #16]
  4085f4:	mov	x0, #0xc9ff                	// #51711
  4085f8:	movk	x0, #0x3b9a, lsl #16
  4085fc:	mov	x19, x1
  408600:	cmp	x3, x0
  408604:	b.le	40863c <sprint_time64@@Base+0x5c>
  408608:	mov	x0, #0xcd6500000000        	// #225833675390976
  40860c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408610:	movk	x0, #0x41cd, lsl #48
  408614:	fmov	d1, x0
  408618:	add	x2, x2, #0xe87
  40861c:	fdiv	d0, d0, d1
  408620:	mov	x0, x19
  408624:	mov	x1, #0x3f                  	// #63
  408628:	bl	404f10 <snprintf@plt>
  40862c:	mov	x0, x19
  408630:	ldr	x19, [sp, #16]
  408634:	ldp	x29, x30, [sp], #32
  408638:	ret
  40863c:	mov	x0, #0x423f                	// #16959
  408640:	movk	x0, #0xf, lsl #16
  408644:	cmp	x3, x0
  408648:	b.le	408668 <sprint_time64@@Base+0x88>
  40864c:	mov	x0, #0x848000000000        	// #145685290680320
  408650:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408654:	movk	x0, #0x412e, lsl #48
  408658:	fmov	d1, x0
  40865c:	add	x2, x2, #0xe8d
  408660:	fdiv	d0, d0, d1
  408664:	b	408620 <sprint_time64@@Base+0x40>
  408668:	cmp	x3, #0x3e7
  40866c:	b.le	40868c <sprint_time64@@Base+0xac>
  408670:	mov	x0, #0x400000000000        	// #70368744177664
  408674:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408678:	movk	x0, #0x408f, lsl #48
  40867c:	fmov	d1, x0
  408680:	add	x2, x2, #0xe94
  408684:	fdiv	d0, d0, d1
  408688:	b	408620 <sprint_time64@@Base+0x40>
  40868c:	mov	x0, x19
  408690:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408694:	mov	x1, #0x3f                  	// #63
  408698:	add	x2, x2, #0xe9b
  40869c:	bl	404f10 <snprintf@plt>
  4086a0:	b	40862c <sprint_time64@@Base+0x4c>
  4086a4:	ldp	x1, x0, [x0]
  4086a8:	str	x1, [x0]
  4086ac:	cbz	x1, 4086b4 <sprint_time64@@Base+0xd4>
  4086b0:	str	x0, [x1, #8]
  4086b4:	ret
  4086b8:	mov	w1, w0
  4086bc:	adrp	x0, 422000 <stdout@@GLIBC_2.17+0x1ce0>
  4086c0:	and	x2, x1, #0x3ff
  4086c4:	add	x0, x0, #0xd78
  4086c8:	ldr	x0, [x0, x2, lsl #3]
  4086cc:	cbnz	x0, 4086d4 <sprint_time64@@Base+0xf4>
  4086d0:	ret
  4086d4:	ldr	w2, [x0, #36]
  4086d8:	cmp	w2, w1
  4086dc:	b.eq	4086d0 <sprint_time64@@Base+0xf0>  // b.none
  4086e0:	ldr	x0, [x0]
  4086e4:	b	4086cc <sprint_time64@@Base+0xec>
  4086e8:	stp	x29, x30, [sp, #-32]!
  4086ec:	mov	x29, sp
  4086f0:	ldr	x2, [x0, #48]
  4086f4:	stp	x19, x20, [sp, #16]
  4086f8:	mov	x20, x0
  4086fc:	ldr	x19, [x2], #-48
  408700:	sub	x19, x19, #0x30
  408704:	cmp	x2, x20
  408708:	b.ne	408718 <sprint_time64@@Base+0x138>  // b.any
  40870c:	ldp	x19, x20, [sp, #16]
  408710:	ldp	x29, x30, [sp], #32
  408714:	ret
  408718:	add	x0, x2, #0x10
  40871c:	bl	4086a4 <sprint_time64@@Base+0xc4>
  408720:	ldp	x1, x0, [x2, #48]
  408724:	str	x0, [x1, #8]
  408728:	str	x1, [x0]
  40872c:	mov	x0, x2
  408730:	bl	405160 <free@plt>
  408734:	ldr	x0, [x19, #48]
  408738:	mov	x2, x19
  40873c:	sub	x19, x0, #0x30
  408740:	b	408704 <sprint_time64@@Base+0x124>

0000000000408744 <namehash@@Base>:
  408744:	mov	x1, x0
  408748:	mov	w0, #0x1505                	// #5381
  40874c:	ldrb	w2, [x1]
  408750:	cbnz	w2, 408758 <namehash@@Base+0x14>
  408754:	ret
  408758:	add	w2, w2, w0, lsl #5
  40875c:	add	x1, x1, #0x1
  408760:	add	w0, w0, w2
  408764:	b	40874c <namehash@@Base+0x8>
  408768:	stp	x29, x30, [sp, #-64]!
  40876c:	mov	x29, sp
  408770:	stp	x19, x20, [sp, #16]
  408774:	mov	x20, x2
  408778:	stp	x21, x22, [sp, #32]
  40877c:	mov	x22, x1
  408780:	str	x23, [sp, #48]
  408784:	mov	x23, x0
  408788:	mov	x0, x1
  40878c:	bl	404e00 <strlen@plt>
  408790:	add	x0, x0, #0x41
  408794:	bl	404f70 <malloc@plt>
  408798:	mov	x19, x0
  40879c:	cbz	x0, 408820 <namehash@@Base+0xdc>
  4087a0:	ldr	w21, [x23, #4]
  4087a4:	mov	x1, x22
  4087a8:	add	x0, x0, #0x40
  4087ac:	str	w21, [x19, #36]
  4087b0:	bl	4051f0 <strcpy@plt>
  4087b4:	ldrh	w0, [x23, #2]
  4087b8:	add	x1, x19, #0x30
  4087bc:	strh	w0, [x19, #40]
  4087c0:	ldr	w0, [x23, #8]
  4087c4:	str	w0, [x19, #32]
  4087c8:	cbz	x20, 408838 <namehash@@Base+0xf4>
  4087cc:	ldr	x0, [x20, #56]
  4087d0:	add	x20, x20, #0x30
  4087d4:	str	x1, [x20, #8]
  4087d8:	str	x20, [x19, #48]
  4087dc:	str	x0, [x19, #56]
  4087e0:	str	x1, [x0]
  4087e4:	mov	x0, x22
  4087e8:	bl	408744 <namehash@@Base>
  4087ec:	adrp	x1, 420000 <memcpy@GLIBC_2.17>
  4087f0:	and	x3, x0, #0x3ff
  4087f4:	add	x2, x1, #0xd78
  4087f8:	ubfiz	x0, x0, #3, #10
  4087fc:	add	x0, x0, x2
  408800:	add	x4, x19, #0x10
  408804:	ldr	x2, [x2, x3, lsl #3]
  408808:	str	x2, [x19, #16]
  40880c:	cbz	x2, 408814 <namehash@@Base+0xd0>
  408810:	str	x4, [x2, #8]
  408814:	add	x1, x1, #0xd78
  408818:	str	x0, [x19, #24]
  40881c:	str	x4, [x1, x3, lsl #3]
  408820:	mov	x0, x19
  408824:	ldp	x19, x20, [sp, #16]
  408828:	ldp	x21, x22, [sp, #32]
  40882c:	ldr	x23, [sp, #48]
  408830:	ldp	x29, x30, [sp], #64
  408834:	ret
  408838:	and	x3, x21, #0x3ff
  40883c:	adrp	x0, 422000 <stdout@@GLIBC_2.17+0x1ce0>
  408840:	add	x2, x0, #0xd78
  408844:	ubfiz	x21, x21, #3, #10
  408848:	add	x21, x21, x2
  40884c:	ldr	x2, [x2, x3, lsl #3]
  408850:	str	x2, [x19]
  408854:	cbz	x2, 40885c <namehash@@Base+0x118>
  408858:	str	x19, [x2, #8]
  40885c:	add	x0, x0, #0xd78
  408860:	str	x21, [x19, #8]
  408864:	stp	x1, x1, [x19, #48]
  408868:	str	x19, [x0, x3, lsl #3]
  40886c:	b	4087e4 <namehash@@Base+0xa0>
  408870:	stp	x29, x30, [sp, #-48]!
  408874:	mov	x29, sp
  408878:	stp	x19, x20, [sp, #16]
  40887c:	ldr	x19, [x2, #416]
  408880:	stp	x21, x22, [sp, #32]
  408884:	cbz	x19, 4088b4 <namehash@@Base+0x170>
  408888:	ldrh	w20, [x19], #4
  40888c:	mov	x21, x0
  408890:	mov	x22, x1
  408894:	sub	w20, w20, #0x4
  408898:	cmp	w20, #0x3
  40889c:	b.le	4088b4 <namehash@@Base+0x170>
  4088a0:	ldrh	w0, [x19]
  4088a4:	cmp	w0, #0x3
  4088a8:	b.ls	4088b4 <namehash@@Base+0x170>  // b.plast
  4088ac:	cmp	w0, w20
  4088b0:	b.le	4088c4 <namehash@@Base+0x180>
  4088b4:	ldp	x19, x20, [sp, #16]
  4088b8:	ldp	x21, x22, [sp, #32]
  4088bc:	ldp	x29, x30, [sp], #48
  4088c0:	ret
  4088c4:	ldrh	w0, [x19, #2]
  4088c8:	cmp	w0, #0x35
  4088cc:	b.ne	4088e0 <namehash@@Base+0x19c>  // b.any
  4088d0:	mov	x2, x21
  4088d4:	add	x1, x19, #0x4
  4088d8:	mov	x0, x22
  4088dc:	bl	408768 <namehash@@Base+0x24>
  4088e0:	ldrh	w2, [x19]
  4088e4:	add	w2, w2, #0x3
  4088e8:	and	w2, w2, #0xfffffffc
  4088ec:	sub	w20, w20, w2
  4088f0:	add	x19, x19, w2, uxtw
  4088f4:	b	408898 <namehash@@Base+0x154>

00000000004088f8 <ll_remember_index@@Base>:
  4088f8:	sub	sp, sp, #0x200
  4088fc:	stp	x29, x30, [sp]
  408900:	mov	x29, sp
  408904:	ldrh	w4, [x0, #4]
  408908:	stp	x19, x20, [sp, #16]
  40890c:	mov	x20, x0
  408910:	sub	w0, w4, #0x10
  408914:	stp	x21, x22, [sp, #32]
  408918:	and	w0, w0, #0xffff
  40891c:	cmp	w0, #0x1
  408920:	stp	x23, x24, [sp, #48]
  408924:	str	x25, [sp, #64]
  408928:	b.ls	40894c <ll_remember_index@@Base+0x54>  // b.plast
  40892c:	mov	w0, #0x0                   	// #0
  408930:	ldp	x29, x30, [sp]
  408934:	ldp	x19, x20, [sp, #16]
  408938:	ldp	x21, x22, [sp, #32]
  40893c:	ldp	x23, x24, [sp, #48]
  408940:	ldr	x25, [sp, #64]
  408944:	add	sp, sp, #0x200
  408948:	ret
  40894c:	ldr	w3, [x20]
  408950:	cmp	w3, #0x1f
  408954:	b.ls	408ad4 <ll_remember_index@@Base+0x1dc>  // b.plast
  408958:	ldr	w0, [x20, #20]
  40895c:	bl	4086b8 <sprint_time64@@Base+0xd8>
  408960:	mov	x19, x0
  408964:	cmp	w4, #0x11
  408968:	b.ne	408990 <ll_remember_index@@Base+0x98>  // b.any
  40896c:	cbz	x0, 40892c <ll_remember_index@@Base+0x34>
  408970:	bl	4086e8 <sprint_time64@@Base+0x108>
  408974:	add	x0, x19, #0x10
  408978:	bl	4086a4 <sprint_time64@@Base+0xc4>
  40897c:	mov	x0, x19
  408980:	bl	4086a4 <sprint_time64@@Base+0xc4>
  408984:	mov	x0, x19
  408988:	bl	405160 <free@plt>
  40898c:	b	40892c <ll_remember_index@@Base+0x34>
  408990:	add	x23, sp, #0x50
  408994:	mov	w1, #0x35                  	// #53
  408998:	sub	w3, w3, #0x20
  40899c:	add	x2, x20, #0x20
  4089a0:	mov	x0, x23
  4089a4:	mov	w4, #0xffff8000            	// #-32768
  4089a8:	bl	40c2d8 <parse_rtattr_flags@@Base>
  4089ac:	add	x22, x20, #0x10
  4089b0:	ldr	x1, [sp, #104]
  4089b4:	cbz	x19, 408ab0 <ll_remember_index@@Base+0x1b8>
  4089b8:	cbz	x1, 408a1c <ll_remember_index@@Base+0x124>
  4089bc:	ldr	w0, [x20, #24]
  4089c0:	add	x21, x1, #0x4
  4089c4:	str	w0, [x19, #32]
  4089c8:	mov	x1, x21
  4089cc:	add	x0, x19, #0x40
  4089d0:	bl	4050f0 <strcmp@plt>
  4089d4:	cbz	w0, 408a1c <ll_remember_index@@Base+0x124>
  4089d8:	add	x20, x19, #0x10
  4089dc:	mov	x0, x20
  4089e0:	bl	4086a4 <sprint_time64@@Base+0xc4>
  4089e4:	mov	x0, x21
  4089e8:	bl	408744 <namehash@@Base>
  4089ec:	adrp	x1, 420000 <memcpy@GLIBC_2.17>
  4089f0:	and	x3, x0, #0x3ff
  4089f4:	add	x2, x1, #0xd78
  4089f8:	ubfiz	x0, x0, #3, #10
  4089fc:	add	x0, x0, x2
  408a00:	ldr	x2, [x2, x3, lsl #3]
  408a04:	str	x2, [x19, #16]
  408a08:	cbz	x2, 408a10 <ll_remember_index@@Base+0x118>
  408a0c:	str	x20, [x2, #8]
  408a10:	add	x1, x1, #0xd78
  408a14:	str	x20, [x1, x3, lsl #3]
  408a18:	str	x0, [x19, #24]
  408a1c:	ldr	x20, [sp, #496]
  408a20:	cbnz	x20, 408a30 <ll_remember_index@@Base+0x138>
  408a24:	mov	x0, x19
  408a28:	bl	4086e8 <sprint_time64@@Base+0x108>
  408a2c:	b	40892c <ll_remember_index@@Base+0x34>
  408a30:	ldr	x24, [x19, #48]
  408a34:	ldrh	w25, [x20], #4
  408a38:	sub	x24, x24, #0x30
  408a3c:	sub	w25, w25, #0x4
  408a40:	cmp	w25, #0x3
  408a44:	b.le	408a5c <ll_remember_index@@Base+0x164>
  408a48:	ldrh	w21, [x20]
  408a4c:	cmp	w21, #0x3
  408a50:	b.ls	408a5c <ll_remember_index@@Base+0x164>  // b.plast
  408a54:	cmp	w25, w21
  408a58:	b.ge	408a78 <ll_remember_index@@Base+0x180>  // b.tcont
  408a5c:	mov	x0, x19
  408a60:	bl	4086e8 <sprint_time64@@Base+0x108>
  408a64:	mov	x2, x23
  408a68:	mov	x1, x22
  408a6c:	mov	x0, x19
  408a70:	bl	408870 <namehash@@Base+0x12c>
  408a74:	b	40892c <ll_remember_index@@Base+0x34>
  408a78:	ldrh	w0, [x20, #2]
  408a7c:	cmp	w0, #0x35
  408a80:	b.ne	408a9c <ll_remember_index@@Base+0x1a4>  // b.any
  408a84:	add	x1, x24, #0x40
  408a88:	add	x0, x20, #0x4
  408a8c:	bl	4050f0 <strcmp@plt>
  408a90:	cbnz	w0, 408a5c <ll_remember_index@@Base+0x164>
  408a94:	ldr	x24, [x24, #48]
  408a98:	sub	x24, x24, #0x30
  408a9c:	add	w21, w21, #0x3
  408aa0:	and	w21, w21, #0xfffffffc
  408aa4:	sub	w25, w25, w21
  408aa8:	add	x20, x20, w21, uxtw
  408aac:	b	408a40 <ll_remember_index@@Base+0x148>
  408ab0:	cbz	x1, 40892c <ll_remember_index@@Base+0x34>
  408ab4:	add	x1, x1, #0x4
  408ab8:	mov	x0, x22
  408abc:	mov	x2, #0x0                   	// #0
  408ac0:	bl	408768 <namehash@@Base+0x24>
  408ac4:	cbz	x0, 40892c <ll_remember_index@@Base+0x34>
  408ac8:	mov	x2, x23
  408acc:	mov	x1, x22
  408ad0:	b	408a70 <ll_remember_index@@Base+0x178>
  408ad4:	mov	w0, #0xffffffff            	// #-1
  408ad8:	b	408930 <ll_remember_index@@Base+0x38>
  408adc:	sub	sp, sp, #0x490
  408ae0:	mov	x2, #0x420                 	// #1056
  408ae4:	stp	x29, x30, [sp]
  408ae8:	mov	x29, sp
  408aec:	stp	x19, x20, [sp, #16]
  408af0:	add	x20, sp, #0x70
  408af4:	mov	x19, x0
  408af8:	mov	x0, x20
  408afc:	stp	x21, x22, [sp, #32]
  408b00:	mov	w21, w1
  408b04:	mov	w1, #0x0                   	// #0
  408b08:	bl	404fe0 <memset@plt>
  408b0c:	mov	x0, #0x20                  	// #32
  408b10:	str	w21, [sp, #132]
  408b14:	movk	x0, #0x12, lsl #32
  408b18:	add	x21, sp, #0x38
  408b1c:	movk	x0, #0x1, lsl #48
  408b20:	mov	w1, #0x0                   	// #0
  408b24:	stp	xzr, xzr, [sp, #56]
  408b28:	stp	xzr, xzr, [sp, #72]
  408b2c:	stp	xzr, xzr, [sp, #88]
  408b30:	stp	xzr, x0, [sp, #104]
  408b34:	mov	x0, x21
  408b38:	bl	40ad78 <rtnl_open@@Base>
  408b3c:	tbnz	w0, #31, 408bf0 <ll_remember_index@@Base+0x2f8>
  408b40:	mov	x0, x20
  408b44:	mov	w3, #0x9                   	// #9
  408b48:	mov	w2, #0x1d                  	// #29
  408b4c:	mov	w1, #0x420                 	// #1056
  408b50:	bl	40beb4 <addattr32@@Base>
  408b54:	cbz	x19, 408b90 <ll_remember_index@@Base+0x298>
  408b58:	mov	x0, x19
  408b5c:	bl	406ec0 <check_ifname@@Base>
  408b60:	cmp	w0, #0x0
  408b64:	mov	w2, #0x35                  	// #53
  408b68:	mov	x0, x19
  408b6c:	mov	w22, #0x3                   	// #3
  408b70:	csel	w22, w22, w2, eq  // eq = none
  408b74:	bl	404e00 <strlen@plt>
  408b78:	add	w4, w0, #0x1
  408b7c:	mov	x3, x19
  408b80:	mov	w2, w22
  408b84:	mov	x0, x20
  408b88:	mov	w1, #0x420                 	// #1056
  408b8c:	bl	40bdcc <addattr_l@@Base>
  408b90:	add	x2, sp, #0x30
  408b94:	mov	x1, x20
  408b98:	mov	x0, x21
  408b9c:	bl	40b968 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408ba0:	tbnz	w0, #31, 408be8 <ll_remember_index@@Base+0x2f0>
  408ba4:	ldr	x0, [sp, #48]
  408ba8:	mov	x1, #0x0                   	// #0
  408bac:	bl	4088f8 <ll_remember_index@@Base>
  408bb0:	mov	w19, w0
  408bb4:	cbnz	w0, 408bc0 <ll_remember_index@@Base+0x2c8>
  408bb8:	ldr	x0, [sp, #48]
  408bbc:	ldr	w19, [x0, #20]
  408bc0:	ldr	x0, [sp, #48]
  408bc4:	bl	405160 <free@plt>
  408bc8:	mov	x0, x21
  408bcc:	bl	40abbc <rtnl_close@@Base>
  408bd0:	mov	w0, w19
  408bd4:	ldp	x29, x30, [sp]
  408bd8:	ldp	x19, x20, [sp, #16]
  408bdc:	ldp	x21, x22, [sp, #32]
  408be0:	add	sp, sp, #0x490
  408be4:	ret
  408be8:	mov	w19, #0x0                   	// #0
  408bec:	b	408bc8 <ll_remember_index@@Base+0x2d0>
  408bf0:	mov	w19, #0x0                   	// #0
  408bf4:	b	408bd0 <ll_remember_index@@Base+0x2d8>

0000000000408bf8 <ll_idx_n2a@@Base>:
  408bf8:	stp	x29, x30, [sp, #-32]!
  408bfc:	mov	w3, w0
  408c00:	mov	x1, #0x10                  	// #16
  408c04:	mov	x29, sp
  408c08:	str	x19, [sp, #16]
  408c0c:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  408c10:	add	x19, x19, #0xd50
  408c14:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408c18:	mov	x0, x19
  408c1c:	add	x2, x2, #0xec2
  408c20:	bl	404f10 <snprintf@plt>
  408c24:	mov	x0, x19
  408c28:	ldr	x19, [sp, #16]
  408c2c:	ldp	x29, x30, [sp], #32
  408c30:	ret

0000000000408c34 <ll_index_to_name@@Base>:
  408c34:	cbz	w0, 408cbc <ll_index_to_name@@Base+0x88>
  408c38:	stp	x29, x30, [sp, #-32]!
  408c3c:	mov	x29, sp
  408c40:	stp	x19, x20, [sp, #16]
  408c44:	mov	w20, w0
  408c48:	bl	4086b8 <sprint_time64@@Base+0xd8>
  408c4c:	cbz	x0, 408c60 <ll_index_to_name@@Base+0x2c>
  408c50:	add	x0, x0, #0x40
  408c54:	ldp	x19, x20, [sp, #16]
  408c58:	ldp	x29, x30, [sp], #32
  408c5c:	ret
  408c60:	mov	w1, w20
  408c64:	bl	408adc <ll_remember_index@@Base+0x1e4>
  408c68:	cmp	w0, w20
  408c6c:	b.ne	408c80 <ll_index_to_name@@Base+0x4c>  // b.any
  408c70:	bl	4086b8 <sprint_time64@@Base+0xd8>
  408c74:	cbz	x0, 408c80 <ll_index_to_name@@Base+0x4c>
  408c78:	add	x0, x0, #0x40
  408c7c:	b	408c54 <ll_index_to_name@@Base+0x20>
  408c80:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  408c84:	add	x0, x19, #0xd50
  408c88:	add	x19, x0, #0x10
  408c8c:	mov	w0, w20
  408c90:	mov	x1, x19
  408c94:	bl	404fd0 <if_indextoname@plt>
  408c98:	cbnz	x0, 408cb4 <ll_index_to_name@@Base+0x80>
  408c9c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408ca0:	mov	w3, w20
  408ca4:	add	x2, x2, #0xec2
  408ca8:	mov	x0, x19
  408cac:	mov	x1, #0x10                  	// #16
  408cb0:	bl	404f10 <snprintf@plt>
  408cb4:	mov	x0, x19
  408cb8:	b	408c54 <ll_index_to_name@@Base+0x20>
  408cbc:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  408cc0:	add	x0, x0, #0xec7
  408cc4:	ret

0000000000408cc8 <ll_index_to_type@@Base>:
  408cc8:	cbz	w0, 408ce8 <ll_index_to_type@@Base+0x20>
  408ccc:	stp	x29, x30, [sp, #-16]!
  408cd0:	mov	x29, sp
  408cd4:	bl	4086b8 <sprint_time64@@Base+0xd8>
  408cd8:	cbz	x0, 408cf0 <ll_index_to_type@@Base+0x28>
  408cdc:	ldrh	w0, [x0, #40]
  408ce0:	ldp	x29, x30, [sp], #16
  408ce4:	ret
  408ce8:	mov	w0, #0xffffffff            	// #-1
  408cec:	ret
  408cf0:	mov	w0, #0xffffffff            	// #-1
  408cf4:	b	408ce0 <ll_index_to_type@@Base+0x18>

0000000000408cf8 <ll_index_to_flags@@Base>:
  408cf8:	cbz	w0, 408d18 <ll_index_to_flags@@Base+0x20>
  408cfc:	stp	x29, x30, [sp, #-16]!
  408d00:	mov	x29, sp
  408d04:	bl	4086b8 <sprint_time64@@Base+0xd8>
  408d08:	cbz	x0, 408d20 <ll_index_to_flags@@Base+0x28>
  408d0c:	ldr	w0, [x0, #32]
  408d10:	ldp	x29, x30, [sp], #16
  408d14:	ret
  408d18:	mov	w0, #0x0                   	// #0
  408d1c:	ret
  408d20:	mov	w0, #0xffffffff            	// #-1
  408d24:	b	408d10 <ll_index_to_flags@@Base+0x18>

0000000000408d28 <ll_name_to_index@@Base>:
  408d28:	stp	x29, x30, [sp, #-64]!
  408d2c:	mov	x29, sp
  408d30:	stp	x19, x20, [sp, #16]
  408d34:	str	x21, [sp, #32]
  408d38:	cbz	x0, 408dcc <ll_name_to_index@@Base+0xa4>
  408d3c:	mov	x20, x0
  408d40:	bl	408744 <namehash@@Base>
  408d44:	adrp	x1, 420000 <memcpy@GLIBC_2.17>
  408d48:	and	x0, x0, #0x3ff
  408d4c:	add	x1, x1, #0xd78
  408d50:	ldr	x19, [x1, x0, lsl #3]
  408d54:	cbnz	x19, 408db0 <ll_name_to_index@@Base+0x88>
  408d58:	mov	x0, x20
  408d5c:	mov	w1, #0x0                   	// #0
  408d60:	bl	408adc <ll_remember_index@@Base+0x1e4>
  408d64:	mov	w19, w0
  408d68:	cbnz	w0, 408d9c <ll_name_to_index@@Base+0x74>
  408d6c:	mov	x0, x20
  408d70:	bl	405260 <if_nametoindex@plt>
  408d74:	mov	w19, w0
  408d78:	cbnz	w0, 408d9c <ll_name_to_index@@Base+0x74>
  408d7c:	add	x2, sp, #0x3c
  408d80:	mov	x0, x20
  408d84:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  408d88:	add	x1, x1, #0xec2
  408d8c:	bl	405290 <__isoc99_sscanf@plt>
  408d90:	cmp	w0, #0x1
  408d94:	b.ne	408d9c <ll_name_to_index@@Base+0x74>  // b.any
  408d98:	ldr	w19, [sp, #60]
  408d9c:	mov	w0, w19
  408da0:	ldp	x19, x20, [sp, #16]
  408da4:	ldr	x21, [sp, #32]
  408da8:	ldp	x29, x30, [sp], #64
  408dac:	ret
  408db0:	sub	x21, x19, #0x10
  408db4:	mov	x1, x20
  408db8:	add	x0, x19, #0x30
  408dbc:	bl	4050f0 <strcmp@plt>
  408dc0:	cbz	w0, 408dd4 <ll_name_to_index@@Base+0xac>
  408dc4:	ldr	x19, [x19]
  408dc8:	b	408d54 <ll_name_to_index@@Base+0x2c>
  408dcc:	mov	w19, #0x0                   	// #0
  408dd0:	b	408d9c <ll_name_to_index@@Base+0x74>
  408dd4:	ldr	w19, [x21, #36]
  408dd8:	b	408d9c <ll_name_to_index@@Base+0x74>

0000000000408ddc <ll_drop_by_index@@Base>:
  408ddc:	stp	x29, x30, [sp, #-16]!
  408de0:	mov	x29, sp
  408de4:	bl	4086b8 <sprint_time64@@Base+0xd8>
  408de8:	cbz	x0, 408e08 <ll_drop_by_index@@Base+0x2c>
  408dec:	mov	x2, x0
  408df0:	bl	4086a4 <sprint_time64@@Base+0xc4>
  408df4:	add	x0, x2, #0x10
  408df8:	bl	4086a4 <sprint_time64@@Base+0xc4>
  408dfc:	mov	x0, x2
  408e00:	ldp	x29, x30, [sp], #16
  408e04:	b	405160 <free@plt>
  408e08:	ldp	x29, x30, [sp], #16
  408e0c:	ret

0000000000408e10 <ll_init_map@@Base>:
  408e10:	stp	x29, x30, [sp, #-32]!
  408e14:	mov	x29, sp
  408e18:	stp	x19, x20, [sp, #16]
  408e1c:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  408e20:	add	x19, x19, #0xd50
  408e24:	ldr	w1, [x19, #32]
  408e28:	cbnz	w1, 408e8c <ll_init_map@@Base+0x7c>
  408e2c:	mov	x20, x0
  408e30:	bl	40b258 <rtnl_linkdump_req@@Base>
  408e34:	tbz	w0, #31, 408e4c <ll_init_map@@Base+0x3c>
  408e38:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  408e3c:	add	x0, x0, #0xec9
  408e40:	bl	404e30 <perror@plt>
  408e44:	mov	w0, #0x1                   	// #1
  408e48:	bl	404e20 <exit@plt>
  408e4c:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  408e50:	mov	x0, x20
  408e54:	mov	w3, #0x0                   	// #0
  408e58:	mov	x2, #0x0                   	// #0
  408e5c:	ldr	x1, [x1, #4008]
  408e60:	bl	40b610 <rtnl_dump_filter_nc@@Base>
  408e64:	tbz	w0, #31, 408e84 <ll_init_map@@Base+0x74>
  408e68:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  408e6c:	ldr	x0, [x0, #3992]
  408e70:	ldr	x1, [x0]
  408e74:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  408e78:	add	x0, x0, #0x8d4
  408e7c:	bl	404e10 <fputs@plt>
  408e80:	b	408e44 <ll_init_map@@Base+0x34>
  408e84:	mov	w0, #0x1                   	// #1
  408e88:	str	w0, [x19, #32]
  408e8c:	ldp	x19, x20, [sp, #16]
  408e90:	ldp	x29, x30, [sp], #32
  408e94:	ret

0000000000408e98 <ll_addr_n2a@@Base>:
  408e98:	stp	x29, x30, [sp, #-80]!
  408e9c:	cmp	w1, #0x4
  408ea0:	mov	x29, sp
  408ea4:	stp	x19, x20, [sp, #16]
  408ea8:	mov	x19, x3
  408eac:	stp	x21, x22, [sp, #32]
  408eb0:	mov	x22, x0
  408eb4:	mov	w21, w4
  408eb8:	stp	x23, x24, [sp, #48]
  408ebc:	mov	w24, w1
  408ec0:	stp	x25, x26, [sp, #64]
  408ec4:	b.ne	408f04 <ll_addr_n2a@@Base+0x6c>  // b.any
  408ec8:	and	w0, w2, #0xfffffff7
  408ecc:	cmp	w0, #0x300
  408ed0:	b.eq	408edc <ll_addr_n2a@@Base+0x44>  // b.none
  408ed4:	cmp	w2, #0x30a
  408ed8:	b.ne	408f30 <ll_addr_n2a@@Base+0x98>  // b.any
  408edc:	mov	w3, w21
  408ee0:	mov	x2, x19
  408ee4:	mov	x1, x22
  408ee8:	mov	w0, #0x2                   	// #2
  408eec:	ldp	x19, x20, [sp, #16]
  408ef0:	ldp	x21, x22, [sp, #32]
  408ef4:	ldp	x23, x24, [sp, #48]
  408ef8:	ldp	x25, x26, [sp, #64]
  408efc:	ldp	x29, x30, [sp], #80
  408f00:	b	405350 <inet_ntop@plt>
  408f04:	cmp	w1, #0x10
  408f08:	b.ne	408f30 <ll_addr_n2a@@Base+0x98>  // b.any
  408f0c:	cmp	w2, #0x301
  408f10:	mov	w0, #0x337                 	// #823
  408f14:	ccmp	w2, w0, #0x4, ne  // ne = any
  408f18:	b.ne	408f30 <ll_addr_n2a@@Base+0x98>  // b.any
  408f1c:	mov	w3, w4
  408f20:	mov	x2, x19
  408f24:	mov	x1, x22
  408f28:	mov	w0, #0xa                   	// #10
  408f2c:	b	408eec <ll_addr_n2a@@Base+0x54>
  408f30:	sxtw	x23, w21
  408f34:	ldrb	w3, [x22]
  408f38:	mov	x1, x23
  408f3c:	adrp	x26, 40c000 <addattr_nest@@Base+0x4>
  408f40:	add	x25, x19, #0x2
  408f44:	add	x26, x26, #0xee2
  408f48:	add	x23, x19, x23
  408f4c:	mov	x20, #0x1                   	// #1
  408f50:	mov	x0, x19
  408f54:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  408f58:	add	x2, x2, #0xee3
  408f5c:	bl	404f10 <snprintf@plt>
  408f60:	add	w0, w20, w20, lsl #1
  408f64:	sub	w0, w0, #0x1
  408f68:	cmp	w21, w0
  408f6c:	ccmp	w24, w20, #0x4, gt
  408f70:	b.gt	408f90 <ll_addr_n2a@@Base+0xf8>
  408f74:	mov	x0, x19
  408f78:	ldp	x19, x20, [sp, #16]
  408f7c:	ldp	x21, x22, [sp, #32]
  408f80:	ldp	x23, x24, [sp, #48]
  408f84:	ldp	x25, x26, [sp, #64]
  408f88:	ldp	x29, x30, [sp], #80
  408f8c:	ret
  408f90:	ldrb	w3, [x22, x20]
  408f94:	sub	x1, x23, x25
  408f98:	mov	x0, x25
  408f9c:	mov	x2, x26
  408fa0:	add	x20, x20, #0x1
  408fa4:	add	x25, x25, #0x3
  408fa8:	bl	404f10 <snprintf@plt>
  408fac:	b	408f60 <ll_addr_n2a@@Base+0xc8>

0000000000408fb0 <ll_addr_a2n@@Base>:
  408fb0:	stp	x29, x30, [sp, #-352]!
  408fb4:	mov	x29, sp
  408fb8:	stp	x19, x20, [sp, #16]
  408fbc:	mov	x19, x2
  408fc0:	stp	x21, x22, [sp, #32]
  408fc4:	stp	x23, x24, [sp, #48]
  408fc8:	mov	x24, x0
  408fcc:	mov	w23, w1
  408fd0:	mov	x0, x2
  408fd4:	mov	w1, #0x2e                  	// #46
  408fd8:	stp	x25, x26, [sp, #64]
  408fdc:	bl	4051a0 <strchr@plt>
  408fe0:	cbz	x0, 4090a8 <ll_addr_a2n@@Base+0xf8>
  408fe4:	mov	x1, x19
  408fe8:	add	x0, sp, #0x58
  408fec:	mov	w2, #0x2                   	// #2
  408ff0:	bl	406900 <get_addr_1@@Base>
  408ff4:	cbz	w0, 40901c <ll_addr_a2n@@Base+0x6c>
  408ff8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  408ffc:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  409000:	mov	x2, x19
  409004:	add	x1, x1, #0xee8
  409008:	ldr	x0, [x0, #3992]
  40900c:	ldr	x0, [x0]
  409010:	bl	405330 <fprintf@plt>
  409014:	mov	w0, #0xffffffff            	// #-1
  409018:	b	409030 <ll_addr_a2n@@Base+0x80>
  40901c:	cmp	w23, #0x3
  409020:	b.le	409014 <ll_addr_a2n@@Base+0x64>
  409024:	ldr	w0, [sp, #96]
  409028:	str	w0, [x24]
  40902c:	mov	w0, #0x4                   	// #4
  409030:	ldp	x19, x20, [sp, #16]
  409034:	ldp	x21, x22, [sp, #32]
  409038:	ldp	x23, x24, [sp, #48]
  40903c:	ldp	x25, x26, [sp, #64]
  409040:	ldp	x29, x30, [sp], #352
  409044:	ret
  409048:	mov	x0, x19
  40904c:	mov	w1, #0x3a                  	// #58
  409050:	bl	4051a0 <strchr@plt>
  409054:	mov	x21, x0
  409058:	cbz	x0, 409060 <ll_addr_a2n@@Base+0xb0>
  40905c:	strb	wzr, [x21], #1
  409060:	mov	x2, x26
  409064:	mov	x1, x25
  409068:	mov	x0, x19
  40906c:	bl	405290 <__isoc99_sscanf@plt>
  409070:	cmp	w0, #0x1
  409074:	b.ne	408ff8 <ll_addr_a2n@@Base+0x48>  // b.any
  409078:	ldr	w0, [sp, #88]
  40907c:	cmp	w0, #0xff
  409080:	b.hi	408ff8 <ll_addr_a2n@@Base+0x48>  // b.pmore
  409084:	strb	w0, [x24, x22]
  409088:	add	x22, x22, #0x1
  40908c:	cbz	x21, 4090a0 <ll_addr_a2n@@Base+0xf0>
  409090:	mov	x19, x21
  409094:	mov	w20, w22
  409098:	cmp	w23, w22
  40909c:	b.gt	409048 <ll_addr_a2n@@Base+0x98>
  4090a0:	add	w0, w20, #0x1
  4090a4:	b	409030 <ll_addr_a2n@@Base+0x80>
  4090a8:	adrp	x25, 40c000 <addattr_nest@@Base+0x4>
  4090ac:	add	x26, sp, #0x58
  4090b0:	add	x25, x25, #0xf01
  4090b4:	mov	x22, #0x0                   	// #0
  4090b8:	b	409094 <ll_addr_a2n@@Base+0xe4>
  4090bc:	cbz	w0, 40913c <ll_addr_a2n@@Base+0x18c>
  4090c0:	stp	x29, x30, [sp, #-32]!
  4090c4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4090c8:	mov	x29, sp
  4090cc:	ldr	x0, [x0, #4016]
  4090d0:	stp	x19, x20, [sp, #16]
  4090d4:	and	w20, w1, #0xff
  4090d8:	ldr	x0, [x0]
  4090dc:	bl	40a014 <jsonw_new@@Base>
  4090e0:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4090e4:	mov	x19, x1
  4090e8:	str	x0, [x1, #3448]
  4090ec:	cbnz	x0, 409104 <ll_addr_a2n@@Base+0x154>
  4090f0:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4090f4:	add	x0, x0, #0xf04
  4090f8:	bl	404e30 <perror@plt>
  4090fc:	mov	w0, #0x1                   	// #1
  409100:	bl	404e20 <exit@plt>
  409104:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409108:	ldr	x1, [x1, #4056]
  40910c:	ldr	w1, [x1]
  409110:	cbz	w1, 40911c <ll_addr_a2n@@Base+0x16c>
  409114:	mov	w1, #0x1                   	// #1
  409118:	bl	40a0b4 <jsonw_pretty@@Base>
  40911c:	cbz	w20, 409130 <ll_addr_a2n@@Base+0x180>
  409120:	ldr	x0, [x19, #3448]
  409124:	ldp	x19, x20, [sp, #16]
  409128:	ldp	x29, x30, [sp], #32
  40912c:	b	40a24c <jsonw_start_array@@Base>
  409130:	ldp	x19, x20, [sp, #16]
  409134:	ldp	x29, x30, [sp], #32
  409138:	ret
  40913c:	ret

0000000000409140 <new_json_obj@@Base>:
  409140:	mov	w1, #0x1                   	// #1
  409144:	b	4090bc <ll_addr_a2n@@Base+0x10c>

0000000000409148 <delete_json_obj@@Base>:
  409148:	stp	x29, x30, [sp, #-32]!
  40914c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409150:	mov	x29, sp
  409154:	str	x19, [sp, #16]
  409158:	add	x19, x0, #0xd78
  40915c:	ldr	x0, [x0, #3448]
  409160:	cbz	x0, 409178 <delete_json_obj@@Base+0x30>
  409164:	bl	40a2a4 <jsonw_end_array@@Base>
  409168:	mov	x0, x19
  40916c:	ldr	x19, [sp, #16]
  409170:	ldp	x29, x30, [sp], #32
  409174:	b	40a048 <jsonw_destroy@@Base>
  409178:	ldr	x19, [sp, #16]
  40917c:	ldp	x29, x30, [sp], #32
  409180:	ret

0000000000409184 <new_json_obj_plain@@Base>:
  409184:	mov	w1, #0x0                   	// #0
  409188:	b	4090bc <ll_addr_a2n@@Base+0x10c>

000000000040918c <delete_json_obj_plain@@Base>:
  40918c:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409190:	add	x0, x1, #0xd78
  409194:	ldr	x1, [x1, #3448]
  409198:	cbz	x1, 4091a0 <delete_json_obj_plain@@Base+0x14>
  40919c:	b	40a048 <jsonw_destroy@@Base>
  4091a0:	ret

00000000004091a4 <is_json_context@@Base>:
  4091a4:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4091a8:	ldr	x0, [x0, #3448]
  4091ac:	cmp	x0, #0x0
  4091b0:	cset	w0, ne  // ne = any
  4091b4:	ret

00000000004091b8 <get_json_writer@@Base>:
  4091b8:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4091bc:	ldr	x0, [x0, #3448]
  4091c0:	ret

00000000004091c4 <open_json_object@@Base>:
  4091c4:	adrp	x2, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4091c8:	mov	x1, x0
  4091cc:	ldr	x0, [x2, #3448]
  4091d0:	cbz	x0, 4091fc <open_json_object@@Base+0x38>
  4091d4:	stp	x29, x30, [sp, #-32]!
  4091d8:	mov	x29, sp
  4091dc:	str	x19, [sp, #16]
  4091e0:	mov	x19, x2
  4091e4:	cbz	x1, 4091ec <open_json_object@@Base+0x28>
  4091e8:	bl	40a0bc <jsonw_name@@Base>
  4091ec:	ldr	x0, [x19, #3448]
  4091f0:	ldr	x19, [sp, #16]
  4091f4:	ldp	x29, x30, [sp], #32
  4091f8:	b	40a1b8 <jsonw_start_object@@Base>
  4091fc:	ret

0000000000409200 <close_json_object@@Base>:
  409200:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409204:	ldr	x0, [x0, #3448]
  409208:	cbz	x0, 409210 <close_json_object@@Base+0x10>
  40920c:	b	40a1f4 <jsonw_end_object@@Base>
  409210:	ret

0000000000409214 <open_json_array@@Base>:
  409214:	adrp	x4, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409218:	mov	w3, w0
  40921c:	mov	x2, x1
  409220:	tst	w3, #0x6
  409224:	ldr	x0, [x4, #3448]
  409228:	b.eq	409258 <open_json_array@@Base+0x44>  // b.none
  40922c:	cbz	x0, 40925c <open_json_array@@Base+0x48>
  409230:	stp	x29, x30, [sp, #-32]!
  409234:	mov	x29, sp
  409238:	str	x19, [sp, #16]
  40923c:	mov	x19, x4
  409240:	cbz	x1, 409248 <open_json_array@@Base+0x34>
  409244:	bl	40a0bc <jsonw_name@@Base>
  409248:	ldr	x0, [x19, #3448]
  40924c:	ldr	x19, [sp, #16]
  409250:	ldp	x29, x30, [sp], #32
  409254:	b	40a24c <jsonw_start_array@@Base>
  409258:	cbnz	x0, 409278 <open_json_array@@Base+0x64>
  40925c:	mov	w0, #0x5                   	// #5
  409260:	tst	w3, w0
  409264:	b.eq	409278 <open_json_array@@Base+0x64>  // b.none
  409268:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  40926c:	mov	x1, x2
  409270:	add	x0, x0, #0xad3
  409274:	b	4052d0 <printf@plt>
  409278:	ret

000000000040927c <close_json_array@@Base>:
  40927c:	mov	w2, w0
  409280:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409284:	tst	w2, #0x6
  409288:	ldr	x0, [x0, #3448]
  40928c:	b.eq	409298 <close_json_array@@Base+0x1c>  // b.none
  409290:	cbz	x0, 40929c <close_json_array@@Base+0x20>
  409294:	b	40a2a4 <jsonw_end_array@@Base>
  409298:	cbnz	x0, 4092b4 <close_json_array@@Base+0x38>
  40929c:	mov	w0, #0x5                   	// #5
  4092a0:	tst	w2, w0
  4092a4:	b.eq	4092b4 <close_json_array@@Base+0x38>  // b.none
  4092a8:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4092ac:	add	x0, x0, #0xad3
  4092b0:	b	4052d0 <printf@plt>
  4092b4:	ret

00000000004092b8 <print_color_int@@Base>:
  4092b8:	mov	w5, w0
  4092bc:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4092c0:	mov	x6, x2
  4092c4:	tst	w5, #0x6
  4092c8:	mov	x2, x3
  4092cc:	mov	w3, w4
  4092d0:	ldr	x0, [x0, #3448]
  4092d4:	b.eq	4092f4 <print_color_int@@Base+0x3c>  // b.none
  4092d8:	cbz	x0, 4092f8 <print_color_int@@Base+0x40>
  4092dc:	cbnz	x6, 4092e8 <print_color_int@@Base+0x30>
  4092e0:	mov	w1, w4
  4092e4:	b	40a3d4 <jsonw_int@@Base>
  4092e8:	mov	w2, w4
  4092ec:	mov	x1, x6
  4092f0:	b	40a5b4 <jsonw_int_field@@Base>
  4092f4:	cbnz	x0, 409314 <print_color_int@@Base+0x5c>
  4092f8:	mov	w0, #0x5                   	// #5
  4092fc:	tst	w5, w0
  409300:	b.eq	409314 <print_color_int@@Base+0x5c>  // b.none
  409304:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409308:	ldr	x0, [x0, #4016]
  40930c:	ldr	x0, [x0]
  409310:	b	409b1c <color_fprintf@@Base>
  409314:	ret

0000000000409318 <print_color_s64@@Base>:
  409318:	mov	w5, w0
  40931c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409320:	mov	x6, x2
  409324:	tst	w5, #0x6
  409328:	mov	x2, x3
  40932c:	mov	x3, x4
  409330:	ldr	x0, [x0, #3448]
  409334:	b.eq	409354 <print_color_s64@@Base+0x3c>  // b.none
  409338:	cbz	x0, 409358 <print_color_s64@@Base+0x40>
  40933c:	cbnz	x6, 409348 <print_color_s64@@Base+0x30>
  409340:	mov	x1, x4
  409344:	b	40a3e4 <jsonw_s64@@Base>
  409348:	mov	x2, x4
  40934c:	mov	x1, x6
  409350:	b	40a5e0 <jsonw_s64_field@@Base>
  409354:	cbnz	x0, 409374 <print_color_s64@@Base+0x5c>
  409358:	mov	w0, #0x5                   	// #5
  40935c:	tst	w5, w0
  409360:	b.eq	409374 <print_color_s64@@Base+0x5c>  // b.none
  409364:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409368:	ldr	x0, [x0, #4016]
  40936c:	ldr	x0, [x0]
  409370:	b	409b1c <color_fprintf@@Base>
  409374:	ret

0000000000409378 <print_color_hhu@@Base>:
  409378:	mov	w5, w0
  40937c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409380:	mov	x6, x2
  409384:	tst	w5, #0x6
  409388:	mov	x2, x3
  40938c:	and	w3, w4, #0xff
  409390:	ldr	x0, [x0, #3448]
  409394:	b.eq	4093b4 <print_color_hhu@@Base+0x3c>  // b.none
  409398:	cbz	x0, 4093b8 <print_color_hhu@@Base+0x40>
  40939c:	cbnz	x6, 4093a8 <print_color_hhu@@Base+0x30>
  4093a0:	mov	w1, w3
  4093a4:	b	40a370 <jsonw_hhu@@Base>
  4093a8:	mov	w2, w3
  4093ac:	mov	x1, x6
  4093b0:	b	40a504 <jsonw_hhu_field@@Base>
  4093b4:	cbnz	x0, 4093d4 <print_color_hhu@@Base+0x5c>
  4093b8:	mov	w0, #0x5                   	// #5
  4093bc:	tst	w5, w0
  4093c0:	b.eq	4093d4 <print_color_hhu@@Base+0x5c>  // b.none
  4093c4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4093c8:	ldr	x0, [x0, #4016]
  4093cc:	ldr	x0, [x0]
  4093d0:	b	409b1c <color_fprintf@@Base>
  4093d4:	ret

00000000004093d8 <print_color_hu@@Base>:
  4093d8:	mov	w5, w0
  4093dc:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4093e0:	mov	x6, x2
  4093e4:	tst	w5, #0x6
  4093e8:	mov	x2, x3
  4093ec:	and	w3, w4, #0xffff
  4093f0:	ldr	x0, [x0, #3448]
  4093f4:	b.eq	409414 <print_color_hu@@Base+0x3c>  // b.none
  4093f8:	cbz	x0, 409418 <print_color_hu@@Base+0x40>
  4093fc:	cbnz	x6, 409408 <print_color_hu@@Base+0x30>
  409400:	mov	w1, w3
  409404:	b	40a380 <jsonw_hu@@Base>
  409408:	mov	w2, w3
  40940c:	mov	x1, x6
  409410:	b	40a530 <jsonw_hu_field@@Base>
  409414:	cbnz	x0, 409434 <print_color_hu@@Base+0x5c>
  409418:	mov	w0, #0x5                   	// #5
  40941c:	tst	w5, w0
  409420:	b.eq	409434 <print_color_hu@@Base+0x5c>  // b.none
  409424:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409428:	ldr	x0, [x0, #4016]
  40942c:	ldr	x0, [x0]
  409430:	b	409b1c <color_fprintf@@Base>
  409434:	ret

0000000000409438 <print_color_uint@@Base>:
  409438:	mov	w5, w0
  40943c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409440:	mov	x6, x2
  409444:	tst	w5, #0x6
  409448:	mov	x2, x3
  40944c:	mov	w3, w4
  409450:	ldr	x0, [x0, #3448]
  409454:	b.eq	409474 <print_color_uint@@Base+0x3c>  // b.none
  409458:	cbz	x0, 409478 <print_color_uint@@Base+0x40>
  40945c:	cbnz	x6, 409468 <print_color_uint@@Base+0x30>
  409460:	mov	w1, w4
  409464:	b	40a390 <jsonw_uint@@Base>
  409468:	mov	w2, w4
  40946c:	mov	x1, x6
  409470:	b	40a480 <jsonw_uint_field@@Base>
  409474:	cbnz	x0, 409494 <print_color_uint@@Base+0x5c>
  409478:	mov	w0, #0x5                   	// #5
  40947c:	tst	w5, w0
  409480:	b.eq	409494 <print_color_uint@@Base+0x5c>  // b.none
  409484:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409488:	ldr	x0, [x0, #4016]
  40948c:	ldr	x0, [x0]
  409490:	b	409b1c <color_fprintf@@Base>
  409494:	ret

0000000000409498 <print_color_u64@@Base>:
  409498:	mov	w5, w0
  40949c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4094a0:	mov	x6, x2
  4094a4:	tst	w5, #0x6
  4094a8:	mov	x2, x3
  4094ac:	mov	x3, x4
  4094b0:	ldr	x0, [x0, #3448]
  4094b4:	b.eq	4094d4 <print_color_u64@@Base+0x3c>  // b.none
  4094b8:	cbz	x0, 4094d8 <print_color_u64@@Base+0x40>
  4094bc:	cbnz	x6, 4094c8 <print_color_u64@@Base+0x30>
  4094c0:	mov	x1, x4
  4094c4:	b	40a3a0 <jsonw_u64@@Base>
  4094c8:	mov	x2, x4
  4094cc:	mov	x1, x6
  4094d0:	b	40a4ac <jsonw_u64_field@@Base>
  4094d4:	cbnz	x0, 4094f4 <print_color_u64@@Base+0x5c>
  4094d8:	mov	w0, #0x5                   	// #5
  4094dc:	tst	w5, w0
  4094e0:	b.eq	4094f4 <print_color_u64@@Base+0x5c>  // b.none
  4094e4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4094e8:	ldr	x0, [x0, #4016]
  4094ec:	ldr	x0, [x0]
  4094f0:	b	409b1c <color_fprintf@@Base>
  4094f4:	ret

00000000004094f8 <print_color_luint@@Base>:
  4094f8:	mov	w5, w0
  4094fc:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409500:	mov	x6, x2
  409504:	tst	w5, #0x6
  409508:	mov	x2, x3
  40950c:	mov	x3, x4
  409510:	ldr	x0, [x0, #3448]
  409514:	b.eq	409534 <print_color_luint@@Base+0x3c>  // b.none
  409518:	cbz	x0, 409538 <print_color_luint@@Base+0x40>
  40951c:	cbnz	x6, 409528 <print_color_luint@@Base+0x30>
  409520:	mov	x1, x4
  409524:	b	40a3c0 <jsonw_luint@@Base>
  409528:	mov	x2, x4
  40952c:	mov	x1, x6
  409530:	b	40a55c <jsonw_luint_field@@Base>
  409534:	cbnz	x0, 409554 <print_color_luint@@Base+0x5c>
  409538:	mov	w0, #0x5                   	// #5
  40953c:	tst	w5, w0
  409540:	b.eq	409554 <print_color_luint@@Base+0x5c>  // b.none
  409544:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409548:	ldr	x0, [x0, #4016]
  40954c:	ldr	x0, [x0]
  409550:	b	409b1c <color_fprintf@@Base>
  409554:	ret

0000000000409558 <print_color_lluint@@Base>:
  409558:	mov	w5, w0
  40955c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409560:	mov	x6, x2
  409564:	tst	w5, #0x6
  409568:	mov	x2, x3
  40956c:	mov	x3, x4
  409570:	ldr	x0, [x0, #3448]
  409574:	b.eq	409594 <print_color_lluint@@Base+0x3c>  // b.none
  409578:	cbz	x0, 409598 <print_color_lluint@@Base+0x40>
  40957c:	cbnz	x6, 409588 <print_color_lluint@@Base+0x30>
  409580:	mov	x1, x4
  409584:	b	40a3c4 <jsonw_lluint@@Base>
  409588:	mov	x2, x4
  40958c:	mov	x1, x6
  409590:	b	40a588 <jsonw_lluint_field@@Base>
  409594:	cbnz	x0, 4095b4 <print_color_lluint@@Base+0x5c>
  409598:	mov	w0, #0x5                   	// #5
  40959c:	tst	w5, w0
  4095a0:	b.eq	4095b4 <print_color_lluint@@Base+0x5c>  // b.none
  4095a4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4095a8:	ldr	x0, [x0, #4016]
  4095ac:	ldr	x0, [x0]
  4095b0:	b	409b1c <color_fprintf@@Base>
  4095b4:	ret

00000000004095b8 <print_color_float@@Base>:
  4095b8:	mov	w4, w0
  4095bc:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4095c0:	mov	x5, x2
  4095c4:	fmov	d1, d0
  4095c8:	ldr	x0, [x0, #3448]
  4095cc:	mov	x2, x3
  4095d0:	tst	w4, #0x6
  4095d4:	b.eq	4095ec <print_color_float@@Base+0x34>  // b.none
  4095d8:	cbz	x0, 4095f0 <print_color_float@@Base+0x38>
  4095dc:	cbnz	x5, 4095e4 <print_color_float@@Base+0x2c>
  4095e0:	b	40a364 <jsonw_float@@Base>
  4095e4:	mov	x1, x5
  4095e8:	b	40a44c <jsonw_float_field@@Base>
  4095ec:	cbnz	x0, 409610 <print_color_float@@Base+0x58>
  4095f0:	mov	w0, #0x5                   	// #5
  4095f4:	tst	w4, w0
  4095f8:	b.eq	409610 <print_color_float@@Base+0x58>  // b.none
  4095fc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409600:	fmov	d0, d1
  409604:	ldr	x0, [x0, #4016]
  409608:	ldr	x0, [x0]
  40960c:	b	409b1c <color_fprintf@@Base>
  409610:	ret

0000000000409614 <print_uint_name_value@@Base>:
  409614:	stp	x29, x30, [sp, #-112]!
  409618:	mov	x3, x0
  40961c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  409620:	mov	x29, sp
  409624:	stp	x19, x20, [sp, #16]
  409628:	add	x20, sp, #0x30
  40962c:	mov	x19, x0
  409630:	add	x2, x2, #0xf10
  409634:	mov	x0, x20
  409638:	str	x21, [sp, #32]
  40963c:	mov	w21, w1
  409640:	mov	x1, #0x40                  	// #64
  409644:	bl	404f10 <snprintf@plt>
  409648:	mov	w4, w21
  40964c:	mov	x3, x20
  409650:	mov	x2, x19
  409654:	mov	w1, #0x6                   	// #6
  409658:	mov	w0, #0x4                   	// #4
  40965c:	bl	409438 <print_color_uint@@Base>
  409660:	ldp	x19, x20, [sp, #16]
  409664:	ldr	x21, [sp, #32]
  409668:	ldp	x29, x30, [sp], #112
  40966c:	ret

0000000000409670 <print_color_string@@Base>:
  409670:	mov	w5, w0
  409674:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409678:	mov	w6, w1
  40967c:	tst	w5, #0x6
  409680:	mov	x1, x2
  409684:	mov	x2, x3
  409688:	ldr	x0, [x0, #3448]
  40968c:	mov	x3, x4
  409690:	b.eq	4096c4 <print_color_string@@Base+0x54>  // b.none
  409694:	cbz	x0, 4096c8 <print_color_string@@Base+0x58>
  409698:	cmp	x1, #0x0
  40969c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  4096a0:	b.ne	4096a8 <print_color_string@@Base+0x38>  // b.any
  4096a4:	b	40a0bc <jsonw_name@@Base>
  4096a8:	cmp	x1, #0x0
  4096ac:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  4096b0:	b.eq	4096bc <print_color_string@@Base+0x4c>  // b.none
  4096b4:	mov	x1, x4
  4096b8:	b	40a308 <jsonw_string@@Base>
  4096bc:	mov	x2, x4
  4096c0:	b	40a3f4 <jsonw_string_field@@Base>
  4096c4:	cbnz	x0, 4096e8 <print_color_string@@Base+0x78>
  4096c8:	mov	w0, #0x5                   	// #5
  4096cc:	tst	w5, w0
  4096d0:	b.eq	4096e8 <print_color_string@@Base+0x78>  // b.none
  4096d4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4096d8:	mov	w1, w6
  4096dc:	ldr	x0, [x0, #4016]
  4096e0:	ldr	x0, [x0]
  4096e4:	b	409b1c <color_fprintf@@Base>
  4096e8:	ret

00000000004096ec <print_string_name_value@@Base>:
  4096ec:	stp	x29, x30, [sp, #-112]!
  4096f0:	mov	x3, x0
  4096f4:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4096f8:	mov	x29, sp
  4096fc:	stp	x19, x20, [sp, #16]
  409700:	add	x20, sp, #0x30
  409704:	mov	x19, x0
  409708:	add	x2, x2, #0xf17
  40970c:	mov	x0, x20
  409710:	str	x21, [sp, #32]
  409714:	mov	x21, x1
  409718:	mov	x1, #0x40                  	// #64
  40971c:	bl	404f10 <snprintf@plt>
  409720:	mov	x4, x21
  409724:	mov	x3, x20
  409728:	mov	x2, x19
  40972c:	mov	w1, #0x6                   	// #6
  409730:	mov	w0, #0x4                   	// #4
  409734:	bl	409670 <print_color_string@@Base>
  409738:	ldp	x19, x20, [sp, #16]
  40973c:	ldr	x21, [sp, #32]
  409740:	ldp	x29, x30, [sp], #112
  409744:	ret

0000000000409748 <print_color_bool@@Base>:
  409748:	mov	w5, w0
  40974c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409750:	mov	x6, x2
  409754:	and	w4, w4, #0xff
  409758:	ldr	x0, [x0, #3448]
  40975c:	mov	x2, x3
  409760:	tst	w5, #0x6
  409764:	b.eq	409784 <print_color_bool@@Base+0x3c>  // b.none
  409768:	cbz	x0, 409788 <print_color_bool@@Base+0x40>
  40976c:	cbz	x6, 40977c <print_color_bool@@Base+0x34>
  409770:	mov	w2, w4
  409774:	mov	x1, x6
  409778:	b	40a420 <jsonw_bool_field@@Base>
  40977c:	mov	w1, w4
  409780:	b	40a334 <jsonw_bool@@Base>
  409784:	cbnz	x0, 4097bc <print_color_bool@@Base+0x74>
  409788:	mov	w0, #0x5                   	// #5
  40978c:	tst	w5, w0
  409790:	b.eq	4097bc <print_color_bool@@Base+0x74>  // b.none
  409794:	cmp	w4, #0x0
  409798:	adrp	x3, 40c000 <addattr_nest@@Base+0x4>
  40979c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4097a0:	add	x3, x3, #0xf23
  4097a4:	add	x0, x0, #0xf1e
  4097a8:	csel	x3, x0, x3, ne  // ne = any
  4097ac:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4097b0:	ldr	x0, [x0, #4016]
  4097b4:	ldr	x0, [x0]
  4097b8:	b	409b1c <color_fprintf@@Base>
  4097bc:	ret

00000000004097c0 <print_color_0xhex@@Base>:
  4097c0:	stp	x29, x30, [sp, #-96]!
  4097c4:	tst	w0, #0x6
  4097c8:	mov	x29, sp
  4097cc:	stp	x19, x20, [sp, #16]
  4097d0:	mov	x20, x2
  4097d4:	mov	x2, x3
  4097d8:	mov	x3, x4
  4097dc:	adrp	x4, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4097e0:	ldr	x4, [x4, #3448]
  4097e4:	b.eq	409828 <print_color_0xhex@@Base+0x68>  // b.none
  4097e8:	cbz	x4, 40982c <print_color_0xhex@@Base+0x6c>
  4097ec:	add	x19, sp, #0x20
  4097f0:	mov	x1, #0x40                  	// #64
  4097f4:	mov	x0, x19
  4097f8:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  4097fc:	add	x2, x2, #0xf29
  409800:	bl	404f10 <snprintf@plt>
  409804:	mov	x4, x19
  409808:	mov	x2, x20
  40980c:	mov	x3, #0x0                   	// #0
  409810:	mov	w1, #0x6                   	// #6
  409814:	mov	w0, #0x2                   	// #2
  409818:	bl	409670 <print_color_string@@Base>
  40981c:	ldp	x19, x20, [sp, #16]
  409820:	ldp	x29, x30, [sp], #96
  409824:	ret
  409828:	cbnz	x4, 40981c <print_color_0xhex@@Base+0x5c>
  40982c:	mov	w4, #0x5                   	// #5
  409830:	tst	w0, w4
  409834:	b.eq	40981c <print_color_0xhex@@Base+0x5c>  // b.none
  409838:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40983c:	ldr	x0, [x0, #4016]
  409840:	ldr	x0, [x0]
  409844:	bl	409b1c <color_fprintf@@Base>
  409848:	b	40981c <print_color_0xhex@@Base+0x5c>

000000000040984c <print_color_hex@@Base>:
  40984c:	stp	x29, x30, [sp, #-112]!
  409850:	tst	w0, #0x6
  409854:	mov	x29, sp
  409858:	stp	x19, x20, [sp, #16]
  40985c:	adrp	x20, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409860:	mov	x19, x2
  409864:	str	x21, [sp, #32]
  409868:	mov	x2, x3
  40986c:	mov	w3, w4
  409870:	ldr	x4, [x20, #3448]
  409874:	b.eq	4098c8 <print_color_hex@@Base+0x7c>  // b.none
  409878:	cbz	x4, 4098cc <print_color_hex@@Base+0x80>
  40987c:	add	x21, sp, #0x30
  409880:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  409884:	mov	x0, x21
  409888:	add	x2, x2, #0xf01
  40988c:	mov	x1, #0x40                  	// #64
  409890:	bl	404f10 <snprintf@plt>
  409894:	cbz	x19, 4098b8 <print_color_hex@@Base+0x6c>
  409898:	ldr	x0, [x20, #3448]
  40989c:	mov	x2, x21
  4098a0:	mov	x1, x19
  4098a4:	bl	40a3f4 <jsonw_string_field@@Base>
  4098a8:	ldp	x19, x20, [sp, #16]
  4098ac:	ldr	x21, [sp, #32]
  4098b0:	ldp	x29, x30, [sp], #112
  4098b4:	ret
  4098b8:	ldr	x0, [x20, #3448]
  4098bc:	mov	x1, x21
  4098c0:	bl	40a308 <jsonw_string@@Base>
  4098c4:	b	4098a8 <print_color_hex@@Base+0x5c>
  4098c8:	cbnz	x4, 4098a8 <print_color_hex@@Base+0x5c>
  4098cc:	mov	w4, #0x5                   	// #5
  4098d0:	tst	w0, w4
  4098d4:	b.eq	4098a8 <print_color_hex@@Base+0x5c>  // b.none
  4098d8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4098dc:	ldr	x0, [x0, #4016]
  4098e0:	ldr	x0, [x0]
  4098e4:	bl	409b1c <color_fprintf@@Base>
  4098e8:	b	4098a8 <print_color_hex@@Base+0x5c>

00000000004098ec <print_color_null@@Base>:
  4098ec:	mov	w5, w0
  4098f0:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  4098f4:	mov	x6, x2
  4098f8:	tst	w5, #0x6
  4098fc:	mov	x2, x3
  409900:	mov	x3, x4
  409904:	ldr	x0, [x0, #3448]
  409908:	b.eq	409920 <print_color_null@@Base+0x34>  // b.none
  40990c:	cbz	x0, 409924 <print_color_null@@Base+0x38>
  409910:	cbz	x6, 40991c <print_color_null@@Base+0x30>
  409914:	mov	x1, x6
  409918:	b	40a60c <jsonw_null_field@@Base>
  40991c:	b	40a358 <jsonw_null@@Base>
  409920:	cbnz	x0, 409940 <print_color_null@@Base+0x54>
  409924:	mov	w0, #0x5                   	// #5
  409928:	tst	w5, w0
  40992c:	b.eq	409940 <print_color_null@@Base+0x54>  // b.none
  409930:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409934:	ldr	x0, [x0, #4016]
  409938:	ldr	x0, [x0]
  40993c:	b	409b1c <color_fprintf@@Base>
  409940:	ret

0000000000409944 <print_nl@@Base>:
  409944:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409948:	ldr	x0, [x0, #3448]
  40994c:	cbnz	x0, 409968 <print_nl@@Base+0x24>
  409950:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409954:	ldr	x0, [x0, #4048]
  409958:	ldr	x1, [x0]
  40995c:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  409960:	add	x0, x0, #0xad3
  409964:	b	4052d0 <printf@plt>
  409968:	ret

000000000040996c <check_enable_color@@Base>:
  40996c:	cmp	w1, #0x0
  409970:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  409974:	b.ne	409980 <check_enable_color@@Base+0x14>  // b.any
  409978:	mov	w0, #0x0                   	// #0
  40997c:	ret
  409980:	stp	x29, x30, [sp, #-32]!
  409984:	cmp	w0, #0x2
  409988:	mov	x29, sp
  40998c:	stp	x19, x20, [sp, #16]
  409990:	b.ne	4099bc <check_enable_color@@Base+0x50>  // b.any
  409994:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409998:	mov	w19, #0x1                   	// #1
  40999c:	add	x20, x0, #0xd80
  4099a0:	str	w19, [x0, #3456]
  4099a4:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  4099a8:	add	x0, x0, #0xf2f
  4099ac:	bl	405300 <getenv@plt>
  4099b0:	cbnz	x0, 4099e4 <check_enable_color@@Base+0x78>
  4099b4:	mov	w0, w19
  4099b8:	b	4099d8 <check_enable_color@@Base+0x6c>
  4099bc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  4099c0:	ldr	x0, [x0, #4016]
  4099c4:	ldr	x0, [x0]
  4099c8:	bl	404f20 <fileno@plt>
  4099cc:	bl	405220 <isatty@plt>
  4099d0:	cbnz	w0, 409994 <check_enable_color@@Base+0x28>
  4099d4:	mov	w0, #0x0                   	// #0
  4099d8:	ldp	x19, x20, [sp, #16]
  4099dc:	ldp	x29, x30, [sp], #32
  4099e0:	ret
  4099e4:	mov	w1, #0x3b                  	// #59
  4099e8:	bl	405090 <strrchr@plt>
  4099ec:	mov	x2, x0
  4099f0:	cbz	x0, 4099b4 <check_enable_color@@Base+0x48>
  4099f4:	ldrb	w3, [x0, #1]
  4099f8:	sub	w0, w3, #0x30
  4099fc:	and	w0, w0, #0xff
  409a00:	cmp	w0, #0x6
  409a04:	cset	w1, ls  // ls = plast
  409a08:	cmp	w3, #0x38
  409a0c:	csinc	w0, w1, wzr, ne  // ne = any
  409a10:	cbz	w0, 4099b4 <check_enable_color@@Base+0x48>
  409a14:	ldrb	w1, [x2, #2]
  409a18:	cbnz	w1, 4099d8 <check_enable_color@@Base+0x6c>
  409a1c:	str	w19, [x20, #4]
  409a20:	b	4099d8 <check_enable_color@@Base+0x6c>

0000000000409a24 <matches_color@@Base>:
  409a24:	cbnz	x1, 409a48 <matches_color@@Base+0x24>
  409a28:	mov	w0, #0x0                   	// #0
  409a2c:	ret
  409a30:	mov	w0, #0x0                   	// #0
  409a34:	mov	sp, x29
  409a38:	ldp	x19, x20, [sp, #16]
  409a3c:	ldr	x21, [sp, #32]
  409a40:	ldp	x29, x30, [sp], #48
  409a44:	ret
  409a48:	stp	x29, x30, [sp, #-48]!
  409a4c:	mov	x29, sp
  409a50:	stp	x19, x20, [sp, #16]
  409a54:	mov	x19, x0
  409a58:	mov	x20, x1
  409a5c:	str	x21, [sp, #32]
  409a60:	bl	404e00 <strlen@plt>
  409a64:	add	x1, x0, #0x10
  409a68:	add	x2, x0, #0x1
  409a6c:	and	x1, x1, #0xfffffffffffffff0
  409a70:	sub	sp, sp, x1
  409a74:	mov	x1, x19
  409a78:	mov	x0, sp
  409a7c:	bl	404dd0 <memcpy@plt>
  409a80:	mov	w1, #0x3d                  	// #61
  409a84:	mov	x21, x0
  409a88:	bl	405270 <strchrnul@plt>
  409a8c:	mov	x19, x0
  409a90:	ldrb	w0, [x0]
  409a94:	cbz	w0, 409a9c <matches_color@@Base+0x78>
  409a98:	strb	wzr, [x19], #1
  409a9c:	mov	x0, x21
  409aa0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  409aa4:	add	x1, x1, #0xf39
  409aa8:	bl	406fc4 <matches@@Base>
  409aac:	tst	w0, #0xff
  409ab0:	b.ne	409a30 <matches_color@@Base+0xc>  // b.any
  409ab4:	ldrb	w0, [x19]
  409ab8:	cbz	w0, 409ad0 <matches_color@@Base+0xac>
  409abc:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  409ac0:	mov	x0, x19
  409ac4:	add	x1, x1, #0xf40
  409ac8:	bl	4050f0 <strcmp@plt>
  409acc:	cbnz	w0, 409ae0 <matches_color@@Base+0xbc>
  409ad0:	mov	w0, #0x2                   	// #2
  409ad4:	str	w0, [x20]
  409ad8:	mov	w0, #0x1                   	// #1
  409adc:	b	409a34 <matches_color@@Base+0x10>
  409ae0:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  409ae4:	mov	x0, x19
  409ae8:	add	x1, x1, #0xf47
  409aec:	bl	4050f0 <strcmp@plt>
  409af0:	cbnz	w0, 409b00 <matches_color@@Base+0xdc>
  409af4:	mov	w0, #0x1                   	// #1
  409af8:	str	w0, [x20]
  409afc:	b	409a34 <matches_color@@Base+0x10>
  409b00:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  409b04:	mov	x0, x19
  409b08:	add	x1, x1, #0xf4c
  409b0c:	bl	4050f0 <strcmp@plt>
  409b10:	cbnz	w0, 409a30 <matches_color@@Base+0xc>
  409b14:	str	wzr, [x20]
  409b18:	b	409ad8 <matches_color@@Base+0xb4>

0000000000409b1c <color_fprintf@@Base>:
  409b1c:	stp	x29, x30, [sp, #-304]!
  409b20:	mov	x29, sp
  409b24:	stp	x19, x20, [sp, #16]
  409b28:	mov	x20, x0
  409b2c:	add	x0, sp, #0x130
  409b30:	stp	x0, x0, [sp, #96]
  409b34:	add	x0, sp, #0x100
  409b38:	str	x0, [sp, #112]
  409b3c:	mov	w0, #0xffffffd8            	// #-40
  409b40:	str	w0, [sp, #120]
  409b44:	mov	w0, #0xffffff80            	// #-128
  409b48:	str	w0, [sp, #124]
  409b4c:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x3ce0>
  409b50:	stp	x21, x22, [sp, #32]
  409b54:	mov	x22, x2
  409b58:	add	x2, x0, #0xd80
  409b5c:	ldr	w0, [x0, #3456]
  409b60:	str	x23, [sp, #48]
  409b64:	add	x23, sp, #0x40
  409b68:	str	q0, [sp, #128]
  409b6c:	str	q1, [sp, #144]
  409b70:	str	q2, [sp, #160]
  409b74:	str	q3, [sp, #176]
  409b78:	str	q4, [sp, #192]
  409b7c:	str	q5, [sp, #208]
  409b80:	str	q6, [sp, #224]
  409b84:	str	q7, [sp, #240]
  409b88:	stp	x3, x4, [sp, #264]
  409b8c:	stp	x5, x6, [sp, #280]
  409b90:	str	x7, [sp, #296]
  409b94:	cbz	w0, 409ba0 <color_fprintf@@Base+0x84>
  409b98:	cmp	w1, #0x6
  409b9c:	b.ne	409bd4 <color_fprintf@@Base+0xb8>  // b.any
  409ba0:	ldp	x0, x1, [sp, #96]
  409ba4:	stp	x0, x1, [sp, #64]
  409ba8:	mov	x2, x23
  409bac:	ldp	x0, x1, [sp, #112]
  409bb0:	stp	x0, x1, [sp, #80]
  409bb4:	mov	x1, x22
  409bb8:	mov	x0, x20
  409bbc:	bl	4052c0 <vfprintf@plt>
  409bc0:	ldp	x19, x20, [sp, #16]
  409bc4:	ldp	x21, x22, [sp, #32]
  409bc8:	ldr	x23, [sp, #48]
  409bcc:	ldp	x29, x30, [sp], #304
  409bd0:	ret
  409bd4:	ldr	w0, [x2, #4]
  409bd8:	adrp	x3, 40c000 <addattr_nest@@Base+0x4>
  409bdc:	mov	w1, w1
  409be0:	add	x3, x3, #0xfbc
  409be4:	cbz	w0, 409c50 <color_fprintf@@Base+0x134>
  409be8:	ldr	w1, [x3, x1, lsl #2]
  409bec:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409bf0:	add	x0, x0, #0xcf0
  409bf4:	adrp	x21, 40c000 <addattr_nest@@Base+0x4>
  409bf8:	add	x21, x21, #0xad3
  409bfc:	ldr	x2, [x0, w1, uxtw #3]
  409c00:	mov	x1, x21
  409c04:	mov	x0, x20
  409c08:	bl	405330 <fprintf@plt>
  409c0c:	mov	w19, w0
  409c10:	ldp	x0, x1, [sp, #96]
  409c14:	stp	x0, x1, [sp, #64]
  409c18:	mov	x2, x23
  409c1c:	ldp	x0, x1, [sp, #112]
  409c20:	stp	x0, x1, [sp, #80]
  409c24:	mov	x1, x22
  409c28:	mov	x0, x20
  409c2c:	bl	4052c0 <vfprintf@plt>
  409c30:	add	w19, w19, w0
  409c34:	mov	x1, x21
  409c38:	mov	x0, x20
  409c3c:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  409c40:	add	x2, x2, #0xf52
  409c44:	bl	405330 <fprintf@plt>
  409c48:	add	w0, w19, w0
  409c4c:	b	409bc0 <color_fprintf@@Base+0xa4>
  409c50:	add	x3, x3, #0x1c
  409c54:	b	409be8 <color_fprintf@@Base+0xcc>

0000000000409c58 <ifa_family_color@@Base>:
  409c58:	and	w0, w0, #0xff
  409c5c:	cmp	w0, #0x2
  409c60:	b.eq	409c74 <ifa_family_color@@Base+0x1c>  // b.none
  409c64:	cmp	w0, #0xa
  409c68:	mov	w1, #0x3                   	// #3
  409c6c:	mov	w0, #0x6                   	// #6
  409c70:	csel	w0, w0, w1, ne  // ne = any
  409c74:	ret

0000000000409c78 <oper_state_color@@Base>:
  409c78:	and	w0, w0, #0xff
  409c7c:	cmp	w0, #0x2
  409c80:	b.eq	409c98 <oper_state_color@@Base+0x20>  // b.none
  409c84:	cmp	w0, #0x6
  409c88:	mov	w1, #0x4                   	// #4
  409c8c:	mov	w0, #0x6                   	// #6
  409c90:	csel	w0, w0, w1, ne  // ne = any
  409c94:	ret
  409c98:	mov	w0, #0x5                   	// #5
  409c9c:	b	409c94 <oper_state_color@@Base+0x1c>

0000000000409ca0 <mpls_ntop@@Base>:
  409ca0:	stp	x29, x30, [sp, #-80]!
  409ca4:	mov	x29, sp
  409ca8:	stp	x19, x20, [sp, #16]
  409cac:	mov	x19, x1
  409cb0:	mov	x20, x2
  409cb4:	stp	x21, x22, [sp, #32]
  409cb8:	mov	x21, x3
  409cbc:	stp	x23, x24, [sp, #48]
  409cc0:	mov	w23, w0
  409cc4:	stp	x25, x26, [sp, #64]
  409cc8:	bl	4052f0 <__errno_location@plt>
  409ccc:	cmp	w23, #0x1c
  409cd0:	mov	x22, x0
  409cd4:	b.ne	409d5c <mpls_ntop@@Base+0xbc>  // b.any
  409cd8:	adrp	x25, 40c000 <addattr_nest@@Base+0x4>
  409cdc:	mov	x23, x20
  409ce0:	add	x25, x25, #0xf14
  409ce4:	mov	w26, #0x2f                  	// #47
  409ce8:	str	wzr, [x0]
  409cec:	ldr	w24, [x19]
  409cf0:	mov	x1, x21
  409cf4:	mov	x2, x25
  409cf8:	mov	x0, x23
  409cfc:	rev	w24, w24
  409d00:	lsr	w3, w24, #12
  409d04:	bl	404f10 <snprintf@plt>
  409d08:	sxtw	x1, w0
  409d0c:	cmp	x21, w0, sxtw
  409d10:	b.ls	409d34 <mpls_ntop@@Base+0x94>  // b.plast
  409d14:	add	x19, x19, #0x4
  409d18:	tbnz	w24, #8, 409d40 <mpls_ntop@@Base+0xa0>
  409d1c:	add	x0, x23, x1
  409d20:	strb	w26, [x23, x1]
  409d24:	mvn	x1, x1
  409d28:	add	x23, x0, #0x1
  409d2c:	add	x21, x21, x1
  409d30:	b	409cec <mpls_ntop@@Base+0x4c>
  409d34:	mov	w0, #0xfffffff9            	// #-7
  409d38:	mov	x20, #0x0                   	// #0
  409d3c:	str	w0, [x22]
  409d40:	mov	x0, x20
  409d44:	ldp	x19, x20, [sp, #16]
  409d48:	ldp	x21, x22, [sp, #32]
  409d4c:	ldp	x23, x24, [sp, #48]
  409d50:	ldp	x25, x26, [sp, #64]
  409d54:	ldp	x29, x30, [sp], #80
  409d58:	ret
  409d5c:	mov	w0, #0x61                  	// #97
  409d60:	b	409d38 <mpls_ntop@@Base+0x98>

0000000000409d64 <mpls_pton@@Base>:
  409d64:	stp	x29, x30, [sp, #-80]!
  409d68:	mov	x29, sp
  409d6c:	stp	x19, x20, [sp, #16]
  409d70:	mov	x19, x2
  409d74:	lsr	x20, x3, #2
  409d78:	stp	x21, x22, [sp, #32]
  409d7c:	mov	w22, w0
  409d80:	mov	x21, x1
  409d84:	str	x23, [sp, #48]
  409d88:	bl	4052f0 <__errno_location@plt>
  409d8c:	cmp	w22, #0x1c
  409d90:	b.ne	409e3c <mpls_pton@@Base+0xd8>  // b.any
  409d94:	add	x20, x19, w20, uxtw #2
  409d98:	add	x22, sp, #0x48
  409d9c:	mov	x23, #0xfffff               	// #1048575
  409da0:	str	wzr, [x0]
  409da4:	cmp	x20, x19
  409da8:	b.ne	409dc8 <mpls_pton@@Base+0x64>  // b.any
  409dac:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  409db0:	ldr	x0, [x0, #3992]
  409db4:	ldr	x1, [x0]
  409db8:	adrp	x0, 40c000 <addattr_nest@@Base+0x4>
  409dbc:	add	x0, x0, #0xff4
  409dc0:	bl	404e10 <fputs@plt>
  409dc4:	b	409de0 <mpls_pton@@Base+0x7c>
  409dc8:	mov	x1, x22
  409dcc:	mov	x0, x21
  409dd0:	mov	w2, #0x0                   	// #0
  409dd4:	bl	404df0 <strtoul@plt>
  409dd8:	cmp	x0, x23
  409ddc:	b.ls	409de8 <mpls_pton@@Base+0x84>  // b.plast
  409de0:	mov	w0, #0x0                   	// #0
  409de4:	b	409e14 <mpls_pton@@Base+0xb0>
  409de8:	ldr	x2, [sp, #72]
  409dec:	cmp	x21, x2
  409df0:	b.eq	409de0 <mpls_pton@@Base+0x7c>  // b.none
  409df4:	lsl	w0, w0, #12
  409df8:	rev	w0, w0
  409dfc:	str	w0, [x19]
  409e00:	ldrb	w3, [x2]
  409e04:	cbnz	w3, 409e28 <mpls_pton@@Base+0xc4>
  409e08:	orr	w0, w0, #0x10000
  409e0c:	str	w0, [x19]
  409e10:	mov	w0, #0x1                   	// #1
  409e14:	ldp	x19, x20, [sp, #16]
  409e18:	ldp	x21, x22, [sp, #32]
  409e1c:	ldr	x23, [sp, #48]
  409e20:	ldp	x29, x30, [sp], #80
  409e24:	ret
  409e28:	cmp	w3, #0x2f
  409e2c:	b.ne	409de0 <mpls_pton@@Base+0x7c>  // b.any
  409e30:	add	x21, x2, #0x1
  409e34:	add	x19, x19, #0x4
  409e38:	b	409da4 <mpls_pton@@Base+0x40>
  409e3c:	mov	w1, #0x61                  	// #97
  409e40:	str	w1, [x0]
  409e44:	mov	w0, #0xffffffff            	// #-1
  409e48:	b	409e14 <mpls_pton@@Base+0xb0>
  409e4c:	stp	x29, x30, [sp, #-32]!
  409e50:	mov	x29, sp
  409e54:	str	x19, [sp, #16]
  409e58:	mov	x19, x0
  409e5c:	ldrb	w0, [x0, #13]
  409e60:	cbz	w0, 409e6c <mpls_pton@@Base+0x108>
  409e64:	ldr	x1, [x19]
  409e68:	bl	404ed0 <putc@plt>
  409e6c:	mov	w0, #0x2c                  	// #44
  409e70:	strb	w0, [x19, #13]
  409e74:	ldr	x19, [sp, #16]
  409e78:	ldp	x29, x30, [sp], #32
  409e7c:	ret
  409e80:	stp	x29, x30, [sp, #-48]!
  409e84:	mov	x29, sp
  409e88:	ldr	x1, [x0]
  409e8c:	str	x21, [sp, #32]
  409e90:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0xad0>
  409e94:	add	x21, x21, #0xd
  409e98:	stp	x19, x20, [sp, #16]
  409e9c:	mov	w20, #0x0                   	// #0
  409ea0:	mov	x19, x0
  409ea4:	mov	w0, #0xa                   	// #10
  409ea8:	bl	404ed0 <putc@plt>
  409eac:	ldr	w0, [x19, #8]
  409eb0:	cmp	w20, w0
  409eb4:	b.cc	409ec8 <mpls_pton@@Base+0x164>  // b.lo, b.ul, b.last
  409eb8:	ldp	x19, x20, [sp, #16]
  409ebc:	ldr	x21, [sp, #32]
  409ec0:	ldp	x29, x30, [sp], #48
  409ec4:	ret
  409ec8:	ldr	x1, [x19]
  409ecc:	mov	x0, x21
  409ed0:	add	w20, w20, #0x1
  409ed4:	bl	404e10 <fputs@plt>
  409ed8:	b	409eac <mpls_pton@@Base+0x148>
  409edc:	stp	x29, x30, [sp, #-16]!
  409ee0:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0xad0>
  409ee4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  409ee8:	mov	x29, sp
  409eec:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  409ef0:	add	x3, x3, #0x82
  409ef4:	add	x1, x1, #0x12
  409ef8:	add	x0, x0, #0x20
  409efc:	mov	w2, #0x85                  	// #133
  409f00:	bl	4052e0 <__assert_fail@plt>
  409f04:	stp	x29, x30, [sp, #-64]!
  409f08:	mov	x29, sp
  409f0c:	stp	x19, x20, [sp, #16]
  409f10:	mov	x19, x1
  409f14:	mov	x20, x0
  409f18:	ldr	x1, [x0]
  409f1c:	stp	x21, x22, [sp, #32]
  409f20:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0xad0>
  409f24:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0xad0>
  409f28:	add	x21, x21, #0x45
  409f2c:	add	x22, x22, #0x3f
  409f30:	str	x23, [sp, #48]
  409f34:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0xad0>
  409f38:	mov	w0, #0x22                  	// #34
  409f3c:	bl	404ed0 <putc@plt>
  409f40:	ldrb	w0, [x19]
  409f44:	ldr	x1, [x20]
  409f48:	cbnz	w0, 409f64 <mpls_pton@@Base+0x200>
  409f4c:	ldp	x19, x20, [sp, #16]
  409f50:	mov	w0, #0x22                  	// #34
  409f54:	ldp	x21, x22, [sp, #32]
  409f58:	ldr	x23, [sp, #48]
  409f5c:	ldp	x29, x30, [sp], #64
  409f60:	b	404ed0 <putc@plt>
  409f64:	cmp	w0, #0xd
  409f68:	b.hi	409f98 <mpls_pton@@Base+0x234>  // b.pmore
  409f6c:	cmp	w0, #0x7
  409f70:	b.ls	409fb0 <mpls_pton@@Base+0x24c>  // b.plast
  409f74:	sub	w3, w0, #0x8
  409f78:	cmp	w3, #0x5
  409f7c:	b.hi	409fb0 <mpls_pton@@Base+0x24c>  // b.pmore
  409f80:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0xad0>
  409f84:	add	x2, x2, #0x7c
  409f88:	ldrb	w2, [x2, w3, uxtw]
  409f8c:	adr	x3, 409f98 <mpls_pton@@Base+0x234>
  409f90:	add	x2, x3, w2, sxtb #2
  409f94:	br	x2
  409f98:	cmp	w0, #0x27
  409f9c:	b.eq	40a00c <mpls_pton@@Base+0x2a8>  // b.none
  409fa0:	cmp	w0, #0x5c
  409fa4:	b.eq	409ffc <mpls_pton@@Base+0x298>  // b.none
  409fa8:	cmp	w0, #0x22
  409fac:	b.eq	40a004 <mpls_pton@@Base+0x2a0>  // b.none
  409fb0:	bl	404ed0 <putc@plt>
  409fb4:	b	409fc4 <mpls_pton@@Base+0x260>
  409fb8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  409fbc:	add	x0, x0, #0x30
  409fc0:	bl	404e10 <fputs@plt>
  409fc4:	add	x19, x19, #0x1
  409fc8:	b	409f40 <mpls_pton@@Base+0x1dc>
  409fcc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  409fd0:	add	x0, x0, #0x33
  409fd4:	b	409fc0 <mpls_pton@@Base+0x25c>
  409fd8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  409fdc:	add	x0, x0, #0x36
  409fe0:	b	409fc0 <mpls_pton@@Base+0x25c>
  409fe4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  409fe8:	add	x0, x0, #0x39
  409fec:	b	409fc0 <mpls_pton@@Base+0x25c>
  409ff0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  409ff4:	add	x0, x0, #0x3c
  409ff8:	b	409fc0 <mpls_pton@@Base+0x25c>
  409ffc:	mov	x0, x22
  40a000:	b	409fc0 <mpls_pton@@Base+0x25c>
  40a004:	add	x0, x23, #0x42
  40a008:	b	409fc0 <mpls_pton@@Base+0x25c>
  40a00c:	mov	x0, x21
  40a010:	b	409fc0 <mpls_pton@@Base+0x25c>

000000000040a014 <jsonw_new@@Base>:
  40a014:	stp	x29, x30, [sp, #-32]!
  40a018:	mov	x29, sp
  40a01c:	str	x19, [sp, #16]
  40a020:	mov	x19, x0
  40a024:	mov	x0, #0x10                  	// #16
  40a028:	bl	404f70 <malloc@plt>
  40a02c:	cbz	x0, 40a03c <jsonw_new@@Base+0x28>
  40a030:	str	x19, [x0]
  40a034:	str	wzr, [x0, #8]
  40a038:	strh	wzr, [x0, #12]
  40a03c:	ldr	x19, [sp, #16]
  40a040:	ldp	x29, x30, [sp], #32
  40a044:	ret

000000000040a048 <jsonw_destroy@@Base>:
  40a048:	stp	x29, x30, [sp, #-32]!
  40a04c:	mov	x29, sp
  40a050:	stp	x19, x20, [sp, #16]
  40a054:	mov	x19, x0
  40a058:	ldr	x20, [x0]
  40a05c:	ldr	w0, [x20, #8]
  40a060:	cbz	w0, 40a088 <jsonw_destroy@@Base+0x40>
  40a064:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a068:	add	x3, x3, #0x82
  40a06c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a070:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a074:	add	x3, x3, #0xa
  40a078:	add	x1, x1, #0x12
  40a07c:	add	x0, x0, #0x48
  40a080:	mov	w2, #0x6e                  	// #110
  40a084:	bl	4052e0 <__assert_fail@plt>
  40a088:	ldr	x1, [x20]
  40a08c:	mov	w0, #0xa                   	// #10
  40a090:	bl	404ef0 <fputc@plt>
  40a094:	ldr	x0, [x20]
  40a098:	bl	4051e0 <fflush@plt>
  40a09c:	mov	x0, x20
  40a0a0:	bl	405160 <free@plt>
  40a0a4:	str	xzr, [x19]
  40a0a8:	ldp	x19, x20, [sp, #16]
  40a0ac:	ldp	x29, x30, [sp], #32
  40a0b0:	ret

000000000040a0b4 <jsonw_pretty@@Base>:
  40a0b4:	strb	w1, [x0, #12]
  40a0b8:	ret

000000000040a0bc <jsonw_name@@Base>:
  40a0bc:	stp	x29, x30, [sp, #-32]!
  40a0c0:	mov	x29, sp
  40a0c4:	stp	x19, x20, [sp, #16]
  40a0c8:	mov	x19, x0
  40a0cc:	mov	x20, x1
  40a0d0:	bl	409e4c <mpls_pton@@Base+0xe8>
  40a0d4:	ldrb	w0, [x19, #12]
  40a0d8:	cbz	w0, 40a0e4 <jsonw_name@@Base+0x28>
  40a0dc:	mov	x0, x19
  40a0e0:	bl	409e80 <mpls_pton@@Base+0x11c>
  40a0e4:	strb	wzr, [x19, #13]
  40a0e8:	mov	x1, x20
  40a0ec:	mov	x0, x19
  40a0f0:	bl	409f04 <mpls_pton@@Base+0x1a0>
  40a0f4:	ldr	x1, [x19]
  40a0f8:	mov	w0, #0x3a                  	// #58
  40a0fc:	bl	404ed0 <putc@plt>
  40a100:	ldrb	w0, [x19, #12]
  40a104:	cbz	w0, 40a11c <jsonw_name@@Base+0x60>
  40a108:	ldr	x1, [x19]
  40a10c:	mov	w0, #0x20                  	// #32
  40a110:	ldp	x19, x20, [sp, #16]
  40a114:	ldp	x29, x30, [sp], #32
  40a118:	b	404ed0 <putc@plt>
  40a11c:	ldp	x19, x20, [sp, #16]
  40a120:	ldp	x29, x30, [sp], #32
  40a124:	ret

000000000040a128 <jsonw_printf@@Base>:
  40a128:	stp	x29, x30, [sp, #-272]!
  40a12c:	mov	x29, sp
  40a130:	stp	x19, x20, [sp, #16]
  40a134:	mov	x20, x1
  40a138:	add	x1, sp, #0x110
  40a13c:	stp	x1, x1, [sp, #64]
  40a140:	add	x1, sp, #0xe0
  40a144:	mov	x19, x0
  40a148:	str	x1, [sp, #80]
  40a14c:	mov	w1, #0xffffffd0            	// #-48
  40a150:	str	w1, [sp, #88]
  40a154:	mov	w1, #0xffffff80            	// #-128
  40a158:	str	w1, [sp, #92]
  40a15c:	str	q0, [sp, #96]
  40a160:	str	q1, [sp, #112]
  40a164:	str	q2, [sp, #128]
  40a168:	str	q3, [sp, #144]
  40a16c:	str	q4, [sp, #160]
  40a170:	str	q5, [sp, #176]
  40a174:	str	q6, [sp, #192]
  40a178:	str	q7, [sp, #208]
  40a17c:	stp	x2, x3, [sp, #224]
  40a180:	stp	x4, x5, [sp, #240]
  40a184:	stp	x6, x7, [sp, #256]
  40a188:	bl	409e4c <mpls_pton@@Base+0xe8>
  40a18c:	add	x2, sp, #0x20
  40a190:	ldp	x0, x1, [sp, #64]
  40a194:	stp	x0, x1, [sp, #32]
  40a198:	ldp	x0, x1, [sp, #80]
  40a19c:	stp	x0, x1, [sp, #48]
  40a1a0:	ldr	x0, [x19]
  40a1a4:	mov	x1, x20
  40a1a8:	bl	4052c0 <vfprintf@plt>
  40a1ac:	ldp	x19, x20, [sp, #16]
  40a1b0:	ldp	x29, x30, [sp], #272
  40a1b4:	ret

000000000040a1b8 <jsonw_start_object@@Base>:
  40a1b8:	stp	x29, x30, [sp, #-32]!
  40a1bc:	mov	x29, sp
  40a1c0:	str	x19, [sp, #16]
  40a1c4:	mov	x19, x0
  40a1c8:	bl	409e4c <mpls_pton@@Base+0xe8>
  40a1cc:	mov	w0, #0x7b                  	// #123
  40a1d0:	ldr	x1, [x19]
  40a1d4:	bl	404ed0 <putc@plt>
  40a1d8:	strb	wzr, [x19, #13]
  40a1dc:	ldr	w0, [x19, #8]
  40a1e0:	add	w0, w0, #0x1
  40a1e4:	str	w0, [x19, #8]
  40a1e8:	ldr	x19, [sp, #16]
  40a1ec:	ldp	x29, x30, [sp], #32
  40a1f0:	ret

000000000040a1f4 <jsonw_end_object@@Base>:
  40a1f4:	stp	x29, x30, [sp, #-32]!
  40a1f8:	mov	x29, sp
  40a1fc:	ldr	w1, [x0, #8]
  40a200:	str	x19, [sp, #16]
  40a204:	cbnz	w1, 40a20c <jsonw_end_object@@Base+0x18>
  40a208:	bl	409edc <mpls_pton@@Base+0x178>
  40a20c:	sub	w1, w1, #0x1
  40a210:	str	w1, [x0, #8]
  40a214:	ldrb	w1, [x0, #13]
  40a218:	mov	x19, x0
  40a21c:	cbz	w1, 40a22c <jsonw_end_object@@Base+0x38>
  40a220:	ldrb	w1, [x0, #12]
  40a224:	cbz	w1, 40a22c <jsonw_end_object@@Base+0x38>
  40a228:	bl	409e80 <mpls_pton@@Base+0x11c>
  40a22c:	ldr	x1, [x19]
  40a230:	mov	w0, #0x7d                  	// #125
  40a234:	bl	404ed0 <putc@plt>
  40a238:	mov	w0, #0x2c                  	// #44
  40a23c:	strb	w0, [x19, #13]
  40a240:	ldr	x19, [sp, #16]
  40a244:	ldp	x29, x30, [sp], #32
  40a248:	ret

000000000040a24c <jsonw_start_array@@Base>:
  40a24c:	stp	x29, x30, [sp, #-32]!
  40a250:	mov	x29, sp
  40a254:	str	x19, [sp, #16]
  40a258:	mov	x19, x0
  40a25c:	bl	409e4c <mpls_pton@@Base+0xe8>
  40a260:	mov	w0, #0x5b                  	// #91
  40a264:	ldr	x1, [x19]
  40a268:	bl	404ed0 <putc@plt>
  40a26c:	strb	wzr, [x19, #13]
  40a270:	ldr	w0, [x19, #8]
  40a274:	add	w0, w0, #0x1
  40a278:	str	w0, [x19, #8]
  40a27c:	ldrb	w0, [x19, #12]
  40a280:	cbz	w0, 40a298 <jsonw_start_array@@Base+0x4c>
  40a284:	ldr	x1, [x19]
  40a288:	mov	w0, #0x20                  	// #32
  40a28c:	ldr	x19, [sp, #16]
  40a290:	ldp	x29, x30, [sp], #32
  40a294:	b	404ed0 <putc@plt>
  40a298:	ldr	x19, [sp, #16]
  40a29c:	ldp	x29, x30, [sp], #32
  40a2a0:	ret

000000000040a2a4 <jsonw_end_array@@Base>:
  40a2a4:	stp	x29, x30, [sp, #-32]!
  40a2a8:	mov	x29, sp
  40a2ac:	str	x19, [sp, #16]
  40a2b0:	mov	x19, x0
  40a2b4:	ldrb	w0, [x0, #12]
  40a2b8:	cbz	w0, 40a2d0 <jsonw_end_array@@Base+0x2c>
  40a2bc:	ldrb	w0, [x19, #13]
  40a2c0:	cbz	w0, 40a2d0 <jsonw_end_array@@Base+0x2c>
  40a2c4:	ldr	x1, [x19]
  40a2c8:	mov	w0, #0x20                  	// #32
  40a2cc:	bl	404ed0 <putc@plt>
  40a2d0:	ldr	w0, [x19, #8]
  40a2d4:	strb	wzr, [x19, #13]
  40a2d8:	cbnz	w0, 40a2e0 <jsonw_end_array@@Base+0x3c>
  40a2dc:	bl	409edc <mpls_pton@@Base+0x178>
  40a2e0:	ldr	x1, [x19]
  40a2e4:	sub	w0, w0, #0x1
  40a2e8:	str	w0, [x19, #8]
  40a2ec:	mov	w0, #0x5d                  	// #93
  40a2f0:	bl	404ed0 <putc@plt>
  40a2f4:	mov	w0, #0x2c                  	// #44
  40a2f8:	strb	w0, [x19, #13]
  40a2fc:	ldr	x19, [sp, #16]
  40a300:	ldp	x29, x30, [sp], #32
  40a304:	ret

000000000040a308 <jsonw_string@@Base>:
  40a308:	stp	x29, x30, [sp, #-32]!
  40a30c:	mov	x29, sp
  40a310:	stp	x19, x20, [sp, #16]
  40a314:	mov	x19, x0
  40a318:	mov	x20, x1
  40a31c:	bl	409e4c <mpls_pton@@Base+0xe8>
  40a320:	mov	x1, x20
  40a324:	mov	x0, x19
  40a328:	ldp	x19, x20, [sp, #16]
  40a32c:	ldp	x29, x30, [sp], #32
  40a330:	b	409f04 <mpls_pton@@Base+0x1a0>

000000000040a334 <jsonw_bool@@Base>:
  40a334:	tst	w1, #0xff
  40a338:	adrp	x2, 40c000 <addattr_nest@@Base+0x4>
  40a33c:	adrp	x3, 40c000 <addattr_nest@@Base+0x4>
  40a340:	add	x2, x2, #0xf23
  40a344:	add	x3, x3, #0xf1e
  40a348:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40a34c:	csel	x2, x3, x2, ne  // ne = any
  40a350:	add	x1, x1, #0xad3
  40a354:	b	40a128 <jsonw_printf@@Base>

000000000040a358 <jsonw_null@@Base>:
  40a358:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a35c:	add	x1, x1, #0x59
  40a360:	b	40a128 <jsonw_printf@@Base>

000000000040a364 <jsonw_float@@Base>:
  40a364:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a368:	add	x1, x1, #0x5e
  40a36c:	b	40a128 <jsonw_printf@@Base>

000000000040a370 <jsonw_hhu@@Base>:
  40a370:	and	w2, w1, #0xff
  40a374:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a378:	add	x1, x1, #0x61
  40a37c:	b	40a128 <jsonw_printf@@Base>

000000000040a380 <jsonw_hu@@Base>:
  40a380:	and	w2, w1, #0xffff
  40a384:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a388:	add	x1, x1, #0x66
  40a38c:	b	40a128 <jsonw_printf@@Base>

000000000040a390 <jsonw_uint@@Base>:
  40a390:	mov	w2, w1
  40a394:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40a398:	add	x1, x1, #0xf14
  40a39c:	b	40a128 <jsonw_printf@@Base>

000000000040a3a0 <jsonw_u64@@Base>:
  40a3a0:	mov	x2, x1
  40a3a4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a3a8:	add	x1, x1, #0x6a
  40a3ac:	b	40a128 <jsonw_printf@@Base>

000000000040a3b0 <jsonw_xint@@Base>:
  40a3b0:	mov	x2, x1
  40a3b4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a3b8:	add	x1, x1, #0x6e
  40a3bc:	b	40a128 <jsonw_printf@@Base>

000000000040a3c0 <jsonw_luint@@Base>:
  40a3c0:	b	40a3a0 <jsonw_u64@@Base>

000000000040a3c4 <jsonw_lluint@@Base>:
  40a3c4:	mov	x2, x1
  40a3c8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a3cc:	add	x1, x1, #0x72
  40a3d0:	b	40a128 <jsonw_printf@@Base>

000000000040a3d4 <jsonw_int@@Base>:
  40a3d4:	mov	w2, w1
  40a3d8:	adrp	x1, 40c000 <addattr_nest@@Base+0x4>
  40a3dc:	add	x1, x1, #0xe5c
  40a3e0:	b	40a128 <jsonw_printf@@Base>

000000000040a3e4 <jsonw_s64@@Base>:
  40a3e4:	mov	x2, x1
  40a3e8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a3ec:	add	x1, x1, #0x77
  40a3f0:	b	40a128 <jsonw_printf@@Base>

000000000040a3f4 <jsonw_string_field@@Base>:
  40a3f4:	stp	x29, x30, [sp, #-32]!
  40a3f8:	mov	x29, sp
  40a3fc:	stp	x19, x20, [sp, #16]
  40a400:	mov	x20, x2
  40a404:	mov	x19, x0
  40a408:	bl	40a0bc <jsonw_name@@Base>
  40a40c:	mov	x1, x20
  40a410:	mov	x0, x19
  40a414:	ldp	x19, x20, [sp, #16]
  40a418:	ldp	x29, x30, [sp], #32
  40a41c:	b	40a308 <jsonw_string@@Base>

000000000040a420 <jsonw_bool_field@@Base>:
  40a420:	stp	x29, x30, [sp, #-32]!
  40a424:	mov	x29, sp
  40a428:	stp	x19, x20, [sp, #16]
  40a42c:	and	w20, w2, #0xff
  40a430:	mov	x19, x0
  40a434:	bl	40a0bc <jsonw_name@@Base>
  40a438:	mov	w1, w20
  40a43c:	mov	x0, x19
  40a440:	ldp	x19, x20, [sp, #16]
  40a444:	ldp	x29, x30, [sp], #32
  40a448:	b	40a334 <jsonw_bool@@Base>

000000000040a44c <jsonw_float_field@@Base>:
  40a44c:	stp	x29, x30, [sp, #-32]!
  40a450:	mov	x29, sp
  40a454:	str	d8, [sp, #24]
  40a458:	fmov	d8, d0
  40a45c:	str	x19, [sp, #16]
  40a460:	mov	x19, x0
  40a464:	bl	40a0bc <jsonw_name@@Base>
  40a468:	fmov	d0, d8
  40a46c:	mov	x0, x19
  40a470:	ldr	d8, [sp, #24]
  40a474:	ldr	x19, [sp, #16]
  40a478:	ldp	x29, x30, [sp], #32
  40a47c:	b	40a364 <jsonw_float@@Base>

000000000040a480 <jsonw_uint_field@@Base>:
  40a480:	stp	x29, x30, [sp, #-32]!
  40a484:	mov	x29, sp
  40a488:	stp	x19, x20, [sp, #16]
  40a48c:	mov	w20, w2
  40a490:	mov	x19, x0
  40a494:	bl	40a0bc <jsonw_name@@Base>
  40a498:	mov	w1, w20
  40a49c:	mov	x0, x19
  40a4a0:	ldp	x19, x20, [sp, #16]
  40a4a4:	ldp	x29, x30, [sp], #32
  40a4a8:	b	40a390 <jsonw_uint@@Base>

000000000040a4ac <jsonw_u64_field@@Base>:
  40a4ac:	stp	x29, x30, [sp, #-32]!
  40a4b0:	mov	x29, sp
  40a4b4:	stp	x19, x20, [sp, #16]
  40a4b8:	mov	x20, x2
  40a4bc:	mov	x19, x0
  40a4c0:	bl	40a0bc <jsonw_name@@Base>
  40a4c4:	mov	x1, x20
  40a4c8:	mov	x0, x19
  40a4cc:	ldp	x19, x20, [sp, #16]
  40a4d0:	ldp	x29, x30, [sp], #32
  40a4d4:	b	40a3a0 <jsonw_u64@@Base>

000000000040a4d8 <jsonw_xint_field@@Base>:
  40a4d8:	stp	x29, x30, [sp, #-32]!
  40a4dc:	mov	x29, sp
  40a4e0:	stp	x19, x20, [sp, #16]
  40a4e4:	mov	x20, x2
  40a4e8:	mov	x19, x0
  40a4ec:	bl	40a0bc <jsonw_name@@Base>
  40a4f0:	mov	x1, x20
  40a4f4:	mov	x0, x19
  40a4f8:	ldp	x19, x20, [sp, #16]
  40a4fc:	ldp	x29, x30, [sp], #32
  40a500:	b	40a3b0 <jsonw_xint@@Base>

000000000040a504 <jsonw_hhu_field@@Base>:
  40a504:	stp	x29, x30, [sp, #-32]!
  40a508:	mov	x29, sp
  40a50c:	stp	x19, x20, [sp, #16]
  40a510:	and	w20, w2, #0xff
  40a514:	mov	x19, x0
  40a518:	bl	40a0bc <jsonw_name@@Base>
  40a51c:	mov	w1, w20
  40a520:	mov	x0, x19
  40a524:	ldp	x19, x20, [sp, #16]
  40a528:	ldp	x29, x30, [sp], #32
  40a52c:	b	40a370 <jsonw_hhu@@Base>

000000000040a530 <jsonw_hu_field@@Base>:
  40a530:	stp	x29, x30, [sp, #-32]!
  40a534:	mov	x29, sp
  40a538:	stp	x19, x20, [sp, #16]
  40a53c:	and	w20, w2, #0xffff
  40a540:	mov	x19, x0
  40a544:	bl	40a0bc <jsonw_name@@Base>
  40a548:	mov	w1, w20
  40a54c:	mov	x0, x19
  40a550:	ldp	x19, x20, [sp, #16]
  40a554:	ldp	x29, x30, [sp], #32
  40a558:	b	40a380 <jsonw_hu@@Base>

000000000040a55c <jsonw_luint_field@@Base>:
  40a55c:	stp	x29, x30, [sp, #-32]!
  40a560:	mov	x29, sp
  40a564:	stp	x19, x20, [sp, #16]
  40a568:	mov	x20, x2
  40a56c:	mov	x19, x0
  40a570:	bl	40a0bc <jsonw_name@@Base>
  40a574:	mov	x1, x20
  40a578:	mov	x0, x19
  40a57c:	ldp	x19, x20, [sp, #16]
  40a580:	ldp	x29, x30, [sp], #32
  40a584:	b	40a3c0 <jsonw_luint@@Base>

000000000040a588 <jsonw_lluint_field@@Base>:
  40a588:	stp	x29, x30, [sp, #-32]!
  40a58c:	mov	x29, sp
  40a590:	stp	x19, x20, [sp, #16]
  40a594:	mov	x20, x2
  40a598:	mov	x19, x0
  40a59c:	bl	40a0bc <jsonw_name@@Base>
  40a5a0:	mov	x1, x20
  40a5a4:	mov	x0, x19
  40a5a8:	ldp	x19, x20, [sp, #16]
  40a5ac:	ldp	x29, x30, [sp], #32
  40a5b0:	b	40a3c4 <jsonw_lluint@@Base>

000000000040a5b4 <jsonw_int_field@@Base>:
  40a5b4:	stp	x29, x30, [sp, #-32]!
  40a5b8:	mov	x29, sp
  40a5bc:	stp	x19, x20, [sp, #16]
  40a5c0:	mov	w20, w2
  40a5c4:	mov	x19, x0
  40a5c8:	bl	40a0bc <jsonw_name@@Base>
  40a5cc:	mov	w1, w20
  40a5d0:	mov	x0, x19
  40a5d4:	ldp	x19, x20, [sp, #16]
  40a5d8:	ldp	x29, x30, [sp], #32
  40a5dc:	b	40a3d4 <jsonw_int@@Base>

000000000040a5e0 <jsonw_s64_field@@Base>:
  40a5e0:	stp	x29, x30, [sp, #-32]!
  40a5e4:	mov	x29, sp
  40a5e8:	stp	x19, x20, [sp, #16]
  40a5ec:	mov	x20, x2
  40a5f0:	mov	x19, x0
  40a5f4:	bl	40a0bc <jsonw_name@@Base>
  40a5f8:	mov	x1, x20
  40a5fc:	mov	x0, x19
  40a600:	ldp	x19, x20, [sp, #16]
  40a604:	ldp	x29, x30, [sp], #32
  40a608:	b	40a3e4 <jsonw_s64@@Base>

000000000040a60c <jsonw_null_field@@Base>:
  40a60c:	stp	x29, x30, [sp, #-32]!
  40a610:	mov	x29, sp
  40a614:	str	x19, [sp, #16]
  40a618:	mov	x19, x0
  40a61c:	bl	40a0bc <jsonw_name@@Base>
  40a620:	mov	x0, x19
  40a624:	ldr	x19, [sp, #16]
  40a628:	ldp	x29, x30, [sp], #32
  40a62c:	b	40a358 <jsonw_null@@Base>
  40a630:	stp	x29, x30, [sp, #-48]!
  40a634:	mov	x2, #0x20                  	// #32
  40a638:	movk	x2, #0x12, lsl #32
  40a63c:	mov	x29, sp
  40a640:	movk	x2, #0x301, lsl #48
  40a644:	mov	w3, #0x0                   	// #0
  40a648:	str	x2, [sp, #16]
  40a64c:	ldr	w2, [x0, #28]
  40a650:	stp	xzr, xzr, [sp, #24]
  40a654:	add	w2, w2, #0x1
  40a658:	stp	w2, w2, [x0, #28]
  40a65c:	ldr	w0, [x0]
  40a660:	str	w2, [sp, #24]
  40a664:	mov	x2, #0x20                  	// #32
  40a668:	strb	w1, [sp, #32]
  40a66c:	add	x1, sp, #0x10
  40a670:	str	xzr, [sp, #40]
  40a674:	bl	405180 <send@plt>
  40a678:	ldp	x29, x30, [sp], #48
  40a67c:	ret
  40a680:	stp	x29, x30, [sp, #-48]!
  40a684:	mov	x29, sp
  40a688:	stp	x19, x20, [sp, #16]
  40a68c:	mov	w20, w0
  40a690:	stp	x21, x22, [sp, #32]
  40a694:	mov	x21, x1
  40a698:	mov	w22, w2
  40a69c:	mov	w2, w22
  40a6a0:	mov	x1, x21
  40a6a4:	mov	w0, w20
  40a6a8:	bl	404de0 <recvmsg@plt>
  40a6ac:	tbz	w0, #31, 40a6fc <jsonw_null_field@@Base+0xf0>
  40a6b0:	bl	4052f0 <__errno_location@plt>
  40a6b4:	mov	x19, x0
  40a6b8:	ldr	w0, [x0]
  40a6bc:	cmp	w0, #0x4
  40a6c0:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40a6c4:	b.eq	40a69c <jsonw_null_field@@Base+0x90>  // b.none
  40a6c8:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40a6cc:	ldr	x1, [x1, #3992]
  40a6d0:	ldr	x20, [x1]
  40a6d4:	bl	405070 <strerror@plt>
  40a6d8:	ldr	w3, [x19]
  40a6dc:	mov	x2, x0
  40a6e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a6e4:	mov	x0, x20
  40a6e8:	add	x1, x1, #0xaa
  40a6ec:	bl	405330 <fprintf@plt>
  40a6f0:	ldr	w0, [x19]
  40a6f4:	neg	w0, w0
  40a6f8:	b	40a71c <jsonw_null_field@@Base+0x110>
  40a6fc:	cbnz	w0, 40a71c <jsonw_null_field@@Base+0x110>
  40a700:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40a704:	ldr	x0, [x0, #3992]
  40a708:	ldr	x1, [x0]
  40a70c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a710:	add	x0, x0, #0x9a
  40a714:	bl	404e10 <fputs@plt>
  40a718:	mov	w0, #0xffffffc3            	// #-61
  40a71c:	ldp	x19, x20, [sp, #16]
  40a720:	ldp	x21, x22, [sp, #32]
  40a724:	ldp	x29, x30, [sp], #48
  40a728:	ret
  40a72c:	stp	x29, x30, [sp, #-64]!
  40a730:	mov	x29, sp
  40a734:	stp	x21, x22, [sp, #32]
  40a738:	mov	x21, x1
  40a73c:	ldr	x22, [x1, #16]
  40a740:	stp	x19, x20, [sp, #16]
  40a744:	stp	x23, x24, [sp, #48]
  40a748:	mov	w24, w0
  40a74c:	mov	x23, x2
  40a750:	stp	xzr, xzr, [x22]
  40a754:	mov	w2, #0x22                  	// #34
  40a758:	bl	40a680 <jsonw_null_field@@Base+0x74>
  40a75c:	sxtw	x19, w0
  40a760:	tbnz	w19, #31, 40a79c <jsonw_null_field@@Base+0x190>
  40a764:	cmp	w19, #0x8, lsl #12
  40a768:	mov	x0, #0x8000                	// #32768
  40a76c:	csel	x19, x19, x0, ge  // ge = tcont
  40a770:	mov	x0, x19
  40a774:	bl	404f70 <malloc@plt>
  40a778:	mov	x20, x0
  40a77c:	cbnz	x0, 40a7b4 <jsonw_null_field@@Base+0x1a8>
  40a780:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40a784:	mov	w19, #0xfffffff4            	// #-12
  40a788:	ldr	x0, [x0, #3992]
  40a78c:	ldr	x1, [x0]
  40a790:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a794:	add	x0, x0, #0xc9
  40a798:	bl	404e10 <fputs@plt>
  40a79c:	mov	w0, w19
  40a7a0:	ldp	x19, x20, [sp, #16]
  40a7a4:	ldp	x21, x22, [sp, #32]
  40a7a8:	ldp	x23, x24, [sp, #48]
  40a7ac:	ldp	x29, x30, [sp], #64
  40a7b0:	ret
  40a7b4:	stp	x20, x19, [x22]
  40a7b8:	mov	x1, x21
  40a7bc:	mov	w0, w24
  40a7c0:	mov	w2, #0x0                   	// #0
  40a7c4:	bl	40a680 <jsonw_null_field@@Base+0x74>
  40a7c8:	mov	w19, w0
  40a7cc:	tbz	w0, #31, 40a7dc <jsonw_null_field@@Base+0x1d0>
  40a7d0:	mov	x0, x20
  40a7d4:	bl	405160 <free@plt>
  40a7d8:	b	40a79c <jsonw_null_field@@Base+0x190>
  40a7dc:	str	x20, [x23]
  40a7e0:	b	40a79c <jsonw_null_field@@Base+0x190>

000000000040a7e4 <nl_dump_ext_ack@@Base>:
  40a7e4:	mov	w0, #0x0                   	// #0
  40a7e8:	ret
  40a7ec:	stp	x29, x30, [sp, #-224]!
  40a7f0:	mov	x29, sp
  40a7f4:	stp	x19, x20, [sp, #16]
  40a7f8:	mov	x19, x0
  40a7fc:	and	w0, w4, #0xff
  40a800:	str	w0, [sp, #120]
  40a804:	mov	w0, #0x10                  	// #16
  40a808:	str	xzr, [sp, #136]
  40a80c:	mov	w20, #0x0                   	// #0
  40a810:	stp	x21, x22, [sp, #32]
  40a814:	mov	x21, x3
  40a818:	mov	x22, x2
  40a81c:	add	x3, x1, x2, lsl #4
  40a820:	strh	w0, [sp, #136]
  40a824:	add	x0, sp, #0x88
  40a828:	stp	xzr, xzr, [sp, #176]
  40a82c:	stp	xzr, xzr, [sp, #192]
  40a830:	stp	x23, x24, [sp, #48]
  40a834:	stp	x25, x26, [sp, #64]
  40a838:	stp	x27, x28, [sp, #80]
  40a83c:	str	wzr, [sp, #144]
  40a840:	str	x0, [sp, #168]
  40a844:	mov	w0, #0xc                   	// #12
  40a848:	str	w0, [sp, #176]
  40a84c:	stp	x1, x2, [sp, #184]
  40a850:	stp	xzr, xzr, [sp, #208]
  40a854:	cmp	x1, x3
  40a858:	b.ne	40a8a4 <nl_dump_ext_ack@@Base+0xc0>  // b.any
  40a85c:	ldr	w0, [x19]
  40a860:	add	x26, sp, #0xa8
  40a864:	mov	x1, x26
  40a868:	mov	w2, #0x0                   	// #0
  40a86c:	bl	405000 <sendmsg@plt>
  40a870:	tbz	w0, #31, 40a8d0 <nl_dump_ext_ack@@Base+0xec>
  40a874:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a878:	add	x0, x0, #0xea
  40a87c:	bl	404e30 <perror@plt>
  40a880:	mov	w28, #0xffffffff            	// #-1
  40a884:	mov	w0, w28
  40a888:	ldp	x19, x20, [sp, #16]
  40a88c:	ldp	x21, x22, [sp, #32]
  40a890:	ldp	x23, x24, [sp, #48]
  40a894:	ldp	x25, x26, [sp, #64]
  40a898:	ldp	x27, x28, [sp, #80]
  40a89c:	ldp	x29, x30, [sp], #224
  40a8a0:	ret
  40a8a4:	ldr	x0, [x1]
  40a8a8:	ldr	w20, [x19, #28]
  40a8ac:	add	w20, w20, #0x1
  40a8b0:	str	w20, [x19, #28]
  40a8b4:	str	w20, [x0, #8]
  40a8b8:	cbnz	x21, 40a8c8 <nl_dump_ext_ack@@Base+0xe4>
  40a8bc:	ldrh	w2, [x0, #6]
  40a8c0:	orr	w2, w2, #0x4
  40a8c4:	strh	w2, [x0, #6]
  40a8c8:	add	x1, x1, #0x10
  40a8cc:	b	40a854 <nl_dump_ext_ack@@Base+0x70>
  40a8d0:	add	x0, sp, #0x98
  40a8d4:	mov	w24, w20
  40a8d8:	add	x27, sp, #0x80
  40a8dc:	str	x0, [sp, #184]
  40a8e0:	mov	x0, #0x1                   	// #1
  40a8e4:	mov	x23, #0x0                   	// #0
  40a8e8:	adrp	x25, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40a8ec:	str	x0, [sp, #192]
  40a8f0:	sub	x0, x24, x22
  40a8f4:	str	x0, [sp, #104]
  40a8f8:	ldr	w0, [x19]
  40a8fc:	mov	x2, x27
  40a900:	mov	x1, x26
  40a904:	str	w23, [sp, #100]
  40a908:	bl	40a72c <jsonw_null_field@@Base+0x120>
  40a90c:	mov	w28, w0
  40a910:	tbnz	w0, #31, 40a884 <nl_dump_ext_ack@@Base+0xa0>
  40a914:	ldr	w2, [sp, #176]
  40a918:	cmp	w2, #0xc
  40a91c:	b.eq	40a938 <nl_dump_ext_ack@@Base+0x154>  // b.none
  40a920:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a924:	add	x1, x1, #0x103
  40a928:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40a92c:	ldr	x0, [x0, #3992]
  40a930:	ldr	x0, [x0]
  40a934:	b	40a990 <nl_dump_ext_ack@@Base+0x1ac>
  40a938:	ldr	x5, [x25, #3992]
  40a93c:	ldr	x24, [sp, #128]
  40a940:	adrp	x6, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a944:	b	40a9dc <nl_dump_ext_ack@@Base+0x1f8>
  40a948:	ldr	w2, [x24]
  40a94c:	subs	w1, w2, #0x10
  40a950:	ccmp	w2, w28, #0x0, pl  // pl = nfrst
  40a954:	b.le	40a99c <nl_dump_ext_ack@@Base+0x1b8>
  40a958:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40a95c:	ldr	w1, [sp, #216]
  40a960:	ldr	x0, [x0, #3992]
  40a964:	ldr	x0, [x0]
  40a968:	tbz	w1, #5, 40a988 <nl_dump_ext_ack@@Base+0x1a4>
  40a96c:	mov	x1, x0
  40a970:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a974:	add	x0, x0, #0x120
  40a978:	bl	404e10 <fputs@plt>
  40a97c:	ldr	x0, [sp, #128]
  40a980:	bl	405160 <free@plt>
  40a984:	b	40a880 <nl_dump_ext_ack@@Base+0x9c>
  40a988:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40a98c:	add	x1, x1, #0x133
  40a990:	bl	405330 <fprintf@plt>
  40a994:	mov	w0, #0x1                   	// #1
  40a998:	bl	404e20 <exit@plt>
  40a99c:	ldr	w0, [sp, #140]
  40a9a0:	cbnz	w0, 40a9cc <nl_dump_ext_ack@@Base+0x1e8>
  40a9a4:	ldr	w0, [x19, #8]
  40a9a8:	ldr	w7, [x24, #12]
  40a9ac:	cmp	w7, w0
  40a9b0:	b.ne	40a9cc <nl_dump_ext_ack@@Base+0x1e8>  // b.any
  40a9b4:	ldr	w0, [x24, #8]
  40a9b8:	cmp	w0, w20
  40a9bc:	b.hi	40a9cc <nl_dump_ext_ack@@Base+0x1e8>  // b.pmore
  40a9c0:	ldr	x3, [sp, #104]
  40a9c4:	cmp	x3, w0, uxtw
  40a9c8:	b.ls	40aa10 <nl_dump_ext_ack@@Base+0x22c>  // b.plast
  40a9cc:	add	w2, w2, #0x3
  40a9d0:	and	w2, w2, #0xfffffffc
  40a9d4:	sub	w28, w28, w2
  40a9d8:	add	x24, x24, w2, uxtw
  40a9dc:	cmp	w28, #0xf
  40a9e0:	b.hi	40a948 <nl_dump_ext_ack@@Base+0x164>  // b.pmore
  40a9e4:	ldr	x0, [sp, #128]
  40a9e8:	bl	405160 <free@plt>
  40a9ec:	ldr	w0, [sp, #216]
  40a9f0:	tbz	w0, #5, 40ab28 <nl_dump_ext_ack@@Base+0x344>
  40a9f4:	ldr	x0, [x25, #3992]
  40a9f8:	ldr	x1, [x0]
  40a9fc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40aa00:	add	x0, x0, #0x18e
  40aa04:	bl	404e10 <fputs@plt>
  40aa08:	add	x23, x23, #0x1
  40aa0c:	b	40a8f8 <nl_dump_ext_ack@@Base+0x114>
  40aa10:	ldrh	w0, [x24, #4]
  40aa14:	cmp	w0, #0x2
  40aa18:	b.ne	40aae4 <nl_dump_ext_ack@@Base+0x300>  // b.any
  40aa1c:	ldr	w28, [x24, #16]
  40aa20:	cmp	w1, #0x13
  40aa24:	b.hi	40aa40 <nl_dump_ext_ack@@Base+0x25c>  // b.pmore
  40aa28:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40aa2c:	ldr	x0, [x0, #3992]
  40aa30:	ldr	x1, [x0]
  40aa34:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40aa38:	add	x0, x0, #0x151
  40aa3c:	b	40a978 <nl_dump_ext_ack@@Base+0x194>
  40aa40:	cbnz	w28, 40aa78 <nl_dump_ext_ack@@Base+0x294>
  40aa44:	mov	x0, x24
  40aa48:	mov	x1, #0x0                   	// #0
  40aa4c:	bl	40a7e4 <nl_dump_ext_ack@@Base>
  40aa50:	ldr	x0, [sp, #128]
  40aa54:	cbz	x21, 40aadc <nl_dump_ext_ack@@Base+0x2f8>
  40aa58:	str	x0, [x21]
  40aa5c:	add	x0, x23, #0x1
  40aa60:	cmp	x22, x0
  40aa64:	b.hi	40aa08 <nl_dump_ext_ack@@Base+0x224>  // b.pmore
  40aa68:	cbz	w28, 40a884 <nl_dump_ext_ack@@Base+0xa0>
  40aa6c:	ldr	w0, [sp, #100]
  40aa70:	mvn	w28, w0
  40aa74:	b	40a884 <nl_dump_ext_ack@@Base+0xa0>
  40aa78:	bl	4052f0 <__errno_location@plt>
  40aa7c:	neg	w1, w28
  40aa80:	str	w1, [x0]
  40aa84:	ldr	w0, [x19, #36]
  40aa88:	cmp	w0, #0x4
  40aa8c:	b.eq	40aa50 <nl_dump_ext_ack@@Base+0x26c>  // b.none
  40aa90:	ldr	w0, [sp, #120]
  40aa94:	cbz	w0, 40aa50 <nl_dump_ext_ack@@Base+0x26c>
  40aa98:	mov	x0, x24
  40aa9c:	mov	x1, #0x0                   	// #0
  40aaa0:	bl	40a7e4 <nl_dump_ext_ack@@Base>
  40aaa4:	cbnz	w0, 40aa50 <nl_dump_ext_ack@@Base+0x26c>
  40aaa8:	ldr	x0, [x25, #3992]
  40aaac:	ldr	x5, [x0]
  40aab0:	str	x5, [sp, #112]
  40aab4:	ldr	w0, [x24, #16]
  40aab8:	neg	w0, w0
  40aabc:	bl	405070 <strerror@plt>
  40aac0:	ldr	x5, [sp, #112]
  40aac4:	mov	x2, x0
  40aac8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40aacc:	add	x1, x1, #0x162
  40aad0:	mov	x0, x5
  40aad4:	bl	405330 <fprintf@plt>
  40aad8:	b	40aa50 <nl_dump_ext_ack@@Base+0x26c>
  40aadc:	bl	405160 <free@plt>
  40aae0:	b	40aa5c <nl_dump_ext_ack@@Base+0x278>
  40aae4:	cbz	x21, 40aaf8 <nl_dump_ext_ack@@Base+0x314>
  40aae8:	ldr	x0, [sp, #128]
  40aaec:	mov	w28, #0x0                   	// #0
  40aaf0:	str	x0, [x21]
  40aaf4:	b	40a884 <nl_dump_ext_ack@@Base+0xa0>
  40aaf8:	ldr	x1, [x5]
  40aafc:	add	x0, x6, #0x179
  40ab00:	str	x5, [sp, #112]
  40ab04:	str	w2, [sp, #124]
  40ab08:	bl	404e10 <fputs@plt>
  40ab0c:	ldr	w2, [sp, #124]
  40ab10:	ldr	x5, [sp, #112]
  40ab14:	add	w2, w2, #0x3
  40ab18:	and	w2, w2, #0xfffffffc
  40ab1c:	sub	w28, w28, w2
  40ab20:	add	x24, x24, w2, uxtw
  40ab24:	b	40a940 <nl_dump_ext_ack@@Base+0x15c>
  40ab28:	cbz	w28, 40aa08 <nl_dump_ext_ack@@Base+0x224>
  40ab2c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40ab30:	mov	w2, w28
  40ab34:	add	x1, x1, #0x1a1
  40ab38:	b	40a928 <nl_dump_ext_ack@@Base+0x144>

000000000040ab3c <nl_dump_ext_ack_done@@Base>:
  40ab3c:	mov	w0, #0x0                   	// #0
  40ab40:	ret

000000000040ab44 <rtnl_set_strict_dump@@Base>:
  40ab44:	stp	x29, x30, [sp, #-48]!
  40ab48:	mov	w4, #0x4                   	// #4
  40ab4c:	mov	w2, #0xc                   	// #12
  40ab50:	mov	x29, sp
  40ab54:	str	x19, [sp, #16]
  40ab58:	mov	x19, x0
  40ab5c:	mov	w0, #0x1                   	// #1
  40ab60:	str	w0, [sp, #44]
  40ab64:	add	x3, sp, #0x2c
  40ab68:	mov	w1, #0x10e                 	// #270
  40ab6c:	ldr	w0, [x19]
  40ab70:	bl	404f80 <setsockopt@plt>
  40ab74:	tbnz	w0, #31, 40ab84 <rtnl_set_strict_dump@@Base+0x40>
  40ab78:	ldr	w0, [x19, #48]
  40ab7c:	orr	w0, w0, #0x4
  40ab80:	str	w0, [x19, #48]
  40ab84:	ldr	x19, [sp, #16]
  40ab88:	ldp	x29, x30, [sp], #48
  40ab8c:	ret

000000000040ab90 <rtnl_add_nl_group@@Base>:
  40ab90:	stp	x29, x30, [sp, #-32]!
  40ab94:	mov	w4, #0x4                   	// #4
  40ab98:	mov	w2, #0x1                   	// #1
  40ab9c:	mov	x29, sp
  40aba0:	ldr	w0, [x0]
  40aba4:	add	x3, sp, #0x1c
  40aba8:	str	w1, [sp, #28]
  40abac:	mov	w1, #0x10e                 	// #270
  40abb0:	bl	404f80 <setsockopt@plt>
  40abb4:	ldp	x29, x30, [sp], #32
  40abb8:	ret

000000000040abbc <rtnl_close@@Base>:
  40abbc:	stp	x29, x30, [sp, #-32]!
  40abc0:	mov	x29, sp
  40abc4:	str	x19, [sp, #16]
  40abc8:	mov	x19, x0
  40abcc:	ldr	w0, [x0]
  40abd0:	tbnz	w0, #31, 40abe0 <rtnl_close@@Base+0x24>
  40abd4:	bl	405080 <close@plt>
  40abd8:	mov	w0, #0xffffffff            	// #-1
  40abdc:	str	w0, [x19]
  40abe0:	ldr	x19, [sp, #16]
  40abe4:	ldp	x29, x30, [sp], #32
  40abe8:	ret

000000000040abec <rtnl_open_byproto@@Base>:
  40abec:	stp	x29, x30, [sp, #-64]!
  40abf0:	mov	x29, sp
  40abf4:	stp	x19, x20, [sp, #16]
  40abf8:	mov	x19, x0
  40abfc:	mov	w0, #0x8000                	// #32768
  40ac00:	mov	w20, #0x1                   	// #1
  40ac04:	stp	w0, w20, [sp, #56]
  40ac08:	stp	xzr, xzr, [x19, #32]
  40ac0c:	mov	w0, #0x10                  	// #16
  40ac10:	stp	xzr, xzr, [x19]
  40ac14:	stp	xzr, xzr, [x19, #16]
  40ac18:	str	w2, [x19, #36]
  40ac1c:	str	xzr, [x19, #48]
  40ac20:	str	x21, [sp, #32]
  40ac24:	mov	w21, w1
  40ac28:	mov	w1, #0x3                   	// #3
  40ac2c:	movk	w1, #0x8, lsl #16
  40ac30:	bl	4051d0 <socket@plt>
  40ac34:	str	w0, [x19]
  40ac38:	tbz	w0, #31, 40ac5c <rtnl_open_byproto@@Base+0x70>
  40ac3c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40ac40:	add	x0, x0, #0x1b8
  40ac44:	bl	404e30 <perror@plt>
  40ac48:	mov	w0, #0xffffffff            	// #-1
  40ac4c:	ldp	x19, x20, [sp, #16]
  40ac50:	ldr	x21, [sp, #32]
  40ac54:	ldp	x29, x30, [sp], #64
  40ac58:	ret
  40ac5c:	add	x3, sp, #0x38
  40ac60:	mov	w1, w20
  40ac64:	mov	w4, #0x4                   	// #4
  40ac68:	mov	w2, #0x7                   	// #7
  40ac6c:	bl	404f80 <setsockopt@plt>
  40ac70:	tbz	w0, #31, 40ac80 <rtnl_open_byproto@@Base+0x94>
  40ac74:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40ac78:	add	x0, x0, #0x1d3
  40ac7c:	b	40ac44 <rtnl_open_byproto@@Base+0x58>
  40ac80:	adrp	x3, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40ac84:	ldr	w0, [x19]
  40ac88:	mov	w1, w20
  40ac8c:	mov	w4, #0x4                   	// #4
  40ac90:	ldr	x3, [x3, #4024]
  40ac94:	mov	w2, #0x8                   	// #8
  40ac98:	bl	404f80 <setsockopt@plt>
  40ac9c:	tbz	w0, #31, 40acac <rtnl_open_byproto@@Base+0xc0>
  40aca0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40aca4:	add	x0, x0, #0x1dd
  40aca8:	b	40ac44 <rtnl_open_byproto@@Base+0x58>
  40acac:	mov	x20, x19
  40acb0:	mov	w2, #0xb                   	// #11
  40acb4:	mov	w1, #0x10e                 	// #270
  40acb8:	add	x3, sp, #0x3c
  40acbc:	mov	w4, #0x4                   	// #4
  40acc0:	ldr	w0, [x20], #4
  40acc4:	bl	404f80 <setsockopt@plt>
  40acc8:	stur	wzr, [x19, #6]
  40accc:	mov	w0, #0x10                  	// #16
  40acd0:	strh	w0, [x19, #4]
  40acd4:	ldr	w0, [x19]
  40acd8:	mov	x1, x20
  40acdc:	strh	wzr, [x19, #10]
  40ace0:	mov	w2, #0xc                   	// #12
  40ace4:	str	w21, [x19, #12]
  40ace8:	bl	404e90 <bind@plt>
  40acec:	tbz	w0, #31, 40acfc <rtnl_open_byproto@@Base+0x110>
  40acf0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40acf4:	add	x0, x0, #0x1e7
  40acf8:	b	40ac44 <rtnl_open_byproto@@Base+0x58>
  40acfc:	mov	w0, #0xc                   	// #12
  40ad00:	str	w0, [sp, #52]
  40ad04:	ldr	w0, [x19]
  40ad08:	add	x2, sp, #0x34
  40ad0c:	mov	x1, x20
  40ad10:	bl	405320 <getsockname@plt>
  40ad14:	tbz	w0, #31, 40ad24 <rtnl_open_byproto@@Base+0x138>
  40ad18:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40ad1c:	add	x0, x0, #0x202
  40ad20:	b	40ac44 <rtnl_open_byproto@@Base+0x58>
  40ad24:	ldr	w2, [sp, #52]
  40ad28:	cmp	w2, #0xc
  40ad2c:	b.eq	40ad4c <rtnl_open_byproto@@Base+0x160>  // b.none
  40ad30:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40ad34:	add	x1, x1, #0x215
  40ad38:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40ad3c:	ldr	x0, [x0, #3992]
  40ad40:	ldr	x0, [x0]
  40ad44:	bl	405330 <fprintf@plt>
  40ad48:	b	40ac48 <rtnl_open_byproto@@Base+0x5c>
  40ad4c:	ldrh	w2, [x19, #4]
  40ad50:	cmp	w2, #0x10
  40ad54:	b.eq	40ad64 <rtnl_open_byproto@@Base+0x178>  // b.none
  40ad58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40ad5c:	add	x1, x1, #0x22e
  40ad60:	b	40ad38 <rtnl_open_byproto@@Base+0x14c>
  40ad64:	mov	x0, #0x0                   	// #0
  40ad68:	bl	404f60 <time@plt>
  40ad6c:	str	w0, [x19, #28]
  40ad70:	mov	w0, #0x0                   	// #0
  40ad74:	b	40ac4c <rtnl_open_byproto@@Base+0x60>

000000000040ad78 <rtnl_open@@Base>:
  40ad78:	mov	w2, #0x0                   	// #0
  40ad7c:	b	40abec <rtnl_open_byproto@@Base>

000000000040ad80 <rtnl_nexthopdump_req@@Base>:
  40ad80:	stp	x29, x30, [sp, #-208]!
  40ad84:	mov	x29, sp
  40ad88:	stp	x19, x20, [sp, #16]
  40ad8c:	mov	x19, x0
  40ad90:	mov	x20, x2
  40ad94:	add	x0, sp, #0x40
  40ad98:	mov	x2, #0x90                  	// #144
  40ad9c:	str	x21, [sp, #32]
  40ada0:	mov	w21, w1
  40ada4:	mov	w1, #0x0                   	// #0
  40ada8:	bl	404fe0 <memset@plt>
  40adac:	mov	x0, #0x18                  	// #24
  40adb0:	strb	w21, [sp, #72]
  40adb4:	movk	x0, #0x6a, lsl #32
  40adb8:	add	x21, sp, #0x38
  40adbc:	movk	x0, #0x301, lsl #48
  40adc0:	str	x0, [sp, #56]
  40adc4:	ldr	w0, [x19, #28]
  40adc8:	add	w0, w0, #0x1
  40adcc:	stp	w0, w0, [x19, #28]
  40add0:	str	w0, [sp, #64]
  40add4:	cbnz	x20, 40adfc <rtnl_nexthopdump_req@@Base+0x7c>
  40add8:	ldr	w0, [x19]
  40addc:	mov	x1, x21
  40ade0:	mov	w3, #0x0                   	// #0
  40ade4:	mov	x2, #0x98                  	// #152
  40ade8:	bl	405180 <send@plt>
  40adec:	ldp	x19, x20, [sp, #16]
  40adf0:	ldr	x21, [sp, #32]
  40adf4:	ldp	x29, x30, [sp], #208
  40adf8:	ret
  40adfc:	mov	x0, x21
  40ae00:	mov	w1, #0x98                  	// #152
  40ae04:	blr	x20
  40ae08:	cbz	w0, 40add8 <rtnl_nexthopdump_req@@Base+0x58>
  40ae0c:	b	40adec <rtnl_nexthopdump_req@@Base+0x6c>

000000000040ae10 <rtnl_addrdump_req@@Base>:
  40ae10:	stp	x29, x30, [sp, #-208]!
  40ae14:	mov	x29, sp
  40ae18:	stp	x19, x20, [sp, #16]
  40ae1c:	mov	x19, x0
  40ae20:	mov	x20, x2
  40ae24:	add	x0, sp, #0x40
  40ae28:	mov	x2, #0x90                  	// #144
  40ae2c:	str	x21, [sp, #32]
  40ae30:	mov	w21, w1
  40ae34:	mov	w1, #0x0                   	// #0
  40ae38:	bl	404fe0 <memset@plt>
  40ae3c:	mov	x0, #0x18                  	// #24
  40ae40:	strb	w21, [sp, #72]
  40ae44:	movk	x0, #0x16, lsl #32
  40ae48:	add	x21, sp, #0x38
  40ae4c:	movk	x0, #0x301, lsl #48
  40ae50:	str	x0, [sp, #56]
  40ae54:	ldr	w0, [x19, #28]
  40ae58:	add	w0, w0, #0x1
  40ae5c:	stp	w0, w0, [x19, #28]
  40ae60:	str	w0, [sp, #64]
  40ae64:	cbnz	x20, 40ae8c <rtnl_addrdump_req@@Base+0x7c>
  40ae68:	ldr	w0, [x19]
  40ae6c:	mov	x1, x21
  40ae70:	mov	w3, #0x0                   	// #0
  40ae74:	mov	x2, #0x98                  	// #152
  40ae78:	bl	405180 <send@plt>
  40ae7c:	ldp	x19, x20, [sp, #16]
  40ae80:	ldr	x21, [sp, #32]
  40ae84:	ldp	x29, x30, [sp], #208
  40ae88:	ret
  40ae8c:	mov	x0, x21
  40ae90:	mov	w1, #0x98                  	// #152
  40ae94:	blr	x20
  40ae98:	cbz	w0, 40ae68 <rtnl_addrdump_req@@Base+0x58>
  40ae9c:	b	40ae7c <rtnl_addrdump_req@@Base+0x6c>

000000000040aea0 <rtnl_addrlbldump_req@@Base>:
  40aea0:	stp	x29, x30, [sp, #-48]!
  40aea4:	mov	x2, #0x1c                  	// #28
  40aea8:	movk	x2, #0x4a, lsl #32
  40aeac:	mov	x29, sp
  40aeb0:	movk	x2, #0x301, lsl #48
  40aeb4:	mov	w3, #0x0                   	// #0
  40aeb8:	str	x2, [sp, #16]
  40aebc:	ldr	w2, [x0, #28]
  40aec0:	stp	xzr, xzr, [sp, #24]
  40aec4:	add	w2, w2, #0x1
  40aec8:	stp	w2, w2, [x0, #28]
  40aecc:	ldr	w0, [x0]
  40aed0:	str	w2, [sp, #24]
  40aed4:	mov	x2, #0x1c                  	// #28
  40aed8:	strb	w1, [sp, #32]
  40aedc:	add	x1, sp, #0x10
  40aee0:	str	wzr, [sp, #40]
  40aee4:	bl	405180 <send@plt>
  40aee8:	ldp	x29, x30, [sp], #48
  40aeec:	ret

000000000040aef0 <rtnl_routedump_req@@Base>:
  40aef0:	stp	x29, x30, [sp, #-208]!
  40aef4:	mov	x29, sp
  40aef8:	stp	x19, x20, [sp, #16]
  40aefc:	mov	x19, x0
  40af00:	mov	x20, x2
  40af04:	add	x0, sp, #0x38
  40af08:	mov	x2, #0x94                  	// #148
  40af0c:	str	x21, [sp, #32]
  40af10:	mov	w21, w1
  40af14:	mov	w1, #0x0                   	// #0
  40af18:	bl	404fe0 <memset@plt>
  40af1c:	mov	x0, #0x1c                  	// #28
  40af20:	strb	w21, [sp, #64]
  40af24:	movk	x0, #0x1a, lsl #32
  40af28:	add	x21, sp, #0x30
  40af2c:	movk	x0, #0x301, lsl #48
  40af30:	str	x0, [sp, #48]
  40af34:	ldr	w0, [x19, #28]
  40af38:	add	w0, w0, #0x1
  40af3c:	stp	w0, w0, [x19, #28]
  40af40:	str	w0, [sp, #56]
  40af44:	cbnz	x20, 40af6c <rtnl_routedump_req@@Base+0x7c>
  40af48:	ldr	w0, [x19]
  40af4c:	mov	x1, x21
  40af50:	mov	w3, #0x0                   	// #0
  40af54:	mov	x2, #0x9c                  	// #156
  40af58:	bl	405180 <send@plt>
  40af5c:	ldp	x19, x20, [sp, #16]
  40af60:	ldr	x21, [sp, #32]
  40af64:	ldp	x29, x30, [sp], #208
  40af68:	ret
  40af6c:	mov	x0, x21
  40af70:	mov	w1, #0x9c                  	// #156
  40af74:	blr	x20
  40af78:	cbz	w0, 40af48 <rtnl_routedump_req@@Base+0x58>
  40af7c:	b	40af5c <rtnl_routedump_req@@Base+0x6c>

000000000040af80 <rtnl_ruledump_req@@Base>:
  40af80:	stp	x29, x30, [sp, #-48]!
  40af84:	mov	x2, #0x1c                  	// #28
  40af88:	movk	x2, #0x22, lsl #32
  40af8c:	mov	x29, sp
  40af90:	movk	x2, #0x301, lsl #48
  40af94:	mov	w3, #0x0                   	// #0
  40af98:	str	x2, [sp, #16]
  40af9c:	ldr	w2, [x0, #28]
  40afa0:	stp	xzr, xzr, [sp, #24]
  40afa4:	add	w2, w2, #0x1
  40afa8:	stp	w2, w2, [x0, #28]
  40afac:	ldr	w0, [x0]
  40afb0:	str	w2, [sp, #24]
  40afb4:	mov	x2, #0x1c                  	// #28
  40afb8:	strb	w1, [sp, #32]
  40afbc:	add	x1, sp, #0x10
  40afc0:	str	wzr, [sp, #40]
  40afc4:	bl	405180 <send@plt>
  40afc8:	ldp	x29, x30, [sp], #48
  40afcc:	ret

000000000040afd0 <rtnl_neighdump_req@@Base>:
  40afd0:	stp	x29, x30, [sp, #-336]!
  40afd4:	mov	x29, sp
  40afd8:	stp	x21, x22, [sp, #32]
  40afdc:	add	x21, sp, #0x30
  40afe0:	mov	w22, w1
  40afe4:	mov	w1, #0x0                   	// #0
  40afe8:	stp	x19, x20, [sp, #16]
  40afec:	mov	x19, x0
  40aff0:	mov	x20, x2
  40aff4:	mov	x0, x21
  40aff8:	mov	x2, #0x11c                 	// #284
  40affc:	bl	404fe0 <memset@plt>
  40b000:	mov	x0, #0x1c                  	// #28
  40b004:	strb	w22, [sp, #64]
  40b008:	movk	x0, #0x1e, lsl #32
  40b00c:	movk	x0, #0x301, lsl #48
  40b010:	str	x0, [sp, #48]
  40b014:	ldr	w0, [x19, #28]
  40b018:	add	w0, w0, #0x1
  40b01c:	stp	w0, w0, [x19, #28]
  40b020:	str	w0, [sp, #56]
  40b024:	cbnz	x20, 40b04c <rtnl_neighdump_req@@Base+0x7c>
  40b028:	ldr	w0, [x19]
  40b02c:	mov	x1, x21
  40b030:	mov	w3, #0x0                   	// #0
  40b034:	mov	x2, #0x11c                 	// #284
  40b038:	bl	405180 <send@plt>
  40b03c:	ldp	x19, x20, [sp, #16]
  40b040:	ldp	x21, x22, [sp, #32]
  40b044:	ldp	x29, x30, [sp], #336
  40b048:	ret
  40b04c:	mov	x0, x21
  40b050:	mov	w1, #0x11c                 	// #284
  40b054:	blr	x20
  40b058:	cbz	w0, 40b028 <rtnl_neighdump_req@@Base+0x58>
  40b05c:	b	40b03c <rtnl_neighdump_req@@Base+0x6c>

000000000040b060 <rtnl_neightbldump_req@@Base>:
  40b060:	stp	x29, x30, [sp, #-48]!
  40b064:	mov	x2, #0x14                  	// #20
  40b068:	movk	x2, #0x42, lsl #32
  40b06c:	mov	x29, sp
  40b070:	movk	x2, #0x301, lsl #48
  40b074:	mov	w3, #0x0                   	// #0
  40b078:	str	x2, [sp, #24]
  40b07c:	ldr	w2, [x0, #28]
  40b080:	stur	xzr, [sp, #36]
  40b084:	add	w2, w2, #0x1
  40b088:	stp	w2, w2, [x0, #28]
  40b08c:	ldr	w0, [x0]
  40b090:	str	w2, [sp, #32]
  40b094:	mov	x2, #0x14                  	// #20
  40b098:	strb	w1, [sp, #40]
  40b09c:	add	x1, sp, #0x18
  40b0a0:	bl	405180 <send@plt>
  40b0a4:	ldp	x29, x30, [sp], #48
  40b0a8:	ret

000000000040b0ac <rtnl_mdbdump_req@@Base>:
  40b0ac:	stp	x29, x30, [sp, #-48]!
  40b0b0:	mov	x2, #0x18                  	// #24
  40b0b4:	movk	x2, #0x56, lsl #32
  40b0b8:	mov	x29, sp
  40b0bc:	movk	x2, #0x301, lsl #48
  40b0c0:	mov	w3, #0x0                   	// #0
  40b0c4:	str	x2, [sp, #24]
  40b0c8:	ldr	w2, [x0, #28]
  40b0cc:	stp	xzr, xzr, [sp, #32]
  40b0d0:	add	w2, w2, #0x1
  40b0d4:	stp	w2, w2, [x0, #28]
  40b0d8:	ldr	w0, [x0]
  40b0dc:	str	w2, [sp, #32]
  40b0e0:	mov	x2, #0x18                  	// #24
  40b0e4:	strb	w1, [sp, #40]
  40b0e8:	add	x1, sp, x2
  40b0ec:	bl	405180 <send@plt>
  40b0f0:	ldp	x29, x30, [sp], #48
  40b0f4:	ret

000000000040b0f8 <rtnl_netconfdump_req@@Base>:
  40b0f8:	stp	x29, x30, [sp, #-48]!
  40b0fc:	mov	x2, #0x14                  	// #20
  40b100:	movk	x2, #0x52, lsl #32
  40b104:	mov	x29, sp
  40b108:	movk	x2, #0x301, lsl #48
  40b10c:	mov	w3, #0x0                   	// #0
  40b110:	str	x2, [sp, #24]
  40b114:	ldr	w2, [x0, #28]
  40b118:	stur	xzr, [sp, #36]
  40b11c:	add	w2, w2, #0x1
  40b120:	stp	w2, w2, [x0, #28]
  40b124:	ldr	w0, [x0]
  40b128:	str	w2, [sp, #32]
  40b12c:	mov	x2, #0x14                  	// #20
  40b130:	strb	w1, [sp, #40]
  40b134:	add	x1, sp, #0x18
  40b138:	bl	405180 <send@plt>
  40b13c:	ldp	x29, x30, [sp], #48
  40b140:	ret

000000000040b144 <rtnl_nsiddump_req_filter_fn@@Base>:
  40b144:	sub	sp, sp, #0x450
  40b148:	stp	x29, x30, [sp]
  40b14c:	mov	x29, sp
  40b150:	stp	x21, x22, [sp, #32]
  40b154:	add	x21, sp, #0x38
  40b158:	mov	w22, w1
  40b15c:	mov	w1, #0x0                   	// #0
  40b160:	stp	x19, x20, [sp, #16]
  40b164:	mov	x19, x0
  40b168:	mov	x20, x2
  40b16c:	mov	x0, x21
  40b170:	mov	x2, #0x414                 	// #1044
  40b174:	bl	404fe0 <memset@plt>
  40b178:	mov	x0, #0x14                  	// #20
  40b17c:	strb	w22, [sp, #72]
  40b180:	movk	x0, #0x5a, lsl #32
  40b184:	movk	x0, #0x301, lsl #48
  40b188:	str	x0, [sp, #56]
  40b18c:	ldr	w0, [x19, #28]
  40b190:	add	w0, w0, #0x1
  40b194:	stp	w0, w0, [x19, #28]
  40b198:	str	w0, [sp, #64]
  40b19c:	cbz	x20, 40b1d8 <rtnl_nsiddump_req_filter_fn@@Base+0x94>
  40b1a0:	mov	x0, x21
  40b1a4:	mov	w1, #0x414                 	// #1044
  40b1a8:	blr	x20
  40b1ac:	cbnz	w0, 40b1c4 <rtnl_nsiddump_req_filter_fn@@Base+0x80>
  40b1b0:	ldr	w0, [x19]
  40b1b4:	mov	x1, x21
  40b1b8:	ldr	w2, [sp, #56]
  40b1bc:	mov	w3, #0x0                   	// #0
  40b1c0:	bl	405180 <send@plt>
  40b1c4:	ldp	x29, x30, [sp]
  40b1c8:	ldp	x19, x20, [sp, #16]
  40b1cc:	ldp	x21, x22, [sp, #32]
  40b1d0:	add	sp, sp, #0x450
  40b1d4:	ret
  40b1d8:	mov	w0, #0xffffffea            	// #-22
  40b1dc:	b	40b1c4 <rtnl_nsiddump_req_filter_fn@@Base+0x80>

000000000040b1e0 <rtnl_linkdump_req_filter@@Base>:
  40b1e0:	stp	x29, x30, [sp, #-64]!
  40b1e4:	cmp	w1, #0x0
  40b1e8:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40b1ec:	mov	x29, sp
  40b1f0:	b.ne	40b250 <rtnl_linkdump_req_filter@@Base+0x70>  // b.any
  40b1f4:	mov	x4, x0
  40b1f8:	mov	x0, #0x28                  	// #40
  40b1fc:	movk	x0, #0x12, lsl #32
  40b200:	stp	xzr, xzr, [sp, #32]
  40b204:	movk	x0, #0x301, lsl #48
  40b208:	str	x0, [sp, #24]
  40b20c:	mov	w3, #0x0                   	// #0
  40b210:	ldr	w0, [x4, #28]
  40b214:	strb	w1, [sp, #40]
  40b218:	add	x1, sp, #0x18
  40b21c:	add	w0, w0, #0x1
  40b220:	stp	w0, w0, [x4, #28]
  40b224:	str	w0, [sp, #32]
  40b228:	mov	w0, #0x8                   	// #8
  40b22c:	movk	w0, #0x1d, lsl #16
  40b230:	str	w0, [sp, #56]
  40b234:	ldr	w0, [x4]
  40b238:	str	xzr, [sp, #48]
  40b23c:	str	w2, [sp, #60]
  40b240:	mov	x2, #0x28                  	// #40
  40b244:	bl	405180 <send@plt>
  40b248:	ldp	x29, x30, [sp], #64
  40b24c:	ret
  40b250:	bl	40a630 <jsonw_null_field@@Base+0x24>
  40b254:	b	40b248 <rtnl_linkdump_req_filter@@Base+0x68>

000000000040b258 <rtnl_linkdump_req@@Base>:
  40b258:	cbnz	w1, 40b264 <rtnl_linkdump_req@@Base+0xc>
  40b25c:	mov	w2, #0x1                   	// #1
  40b260:	b	40b1e0 <rtnl_linkdump_req_filter@@Base>
  40b264:	b	40a630 <jsonw_null_field@@Base+0x24>

000000000040b268 <rtnl_linkdump_req_filter_fn@@Base>:
  40b268:	sub	sp, sp, #0x450
  40b26c:	cmp	w1, #0x0
  40b270:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40b274:	stp	x29, x30, [sp]
  40b278:	mov	x29, sp
  40b27c:	stp	x19, x20, [sp, #16]
  40b280:	stp	x21, x22, [sp, #32]
  40b284:	b.ne	40b310 <rtnl_linkdump_req_filter_fn@@Base+0xa8>  // b.any
  40b288:	add	x22, sp, #0x30
  40b28c:	mov	x19, x0
  40b290:	mov	w20, w1
  40b294:	mov	x21, x2
  40b298:	mov	x0, x22
  40b29c:	mov	x2, #0x420                 	// #1056
  40b2a0:	mov	w1, #0x0                   	// #0
  40b2a4:	bl	404fe0 <memset@plt>
  40b2a8:	mov	x0, #0x20                  	// #32
  40b2ac:	strb	w20, [sp, #64]
  40b2b0:	movk	x0, #0x12, lsl #32
  40b2b4:	movk	x0, #0x301, lsl #48
  40b2b8:	str	x0, [sp, #48]
  40b2bc:	ldr	w0, [x19, #28]
  40b2c0:	add	w0, w0, #0x1
  40b2c4:	stp	w0, w0, [x19, #28]
  40b2c8:	str	w0, [sp, #56]
  40b2cc:	cbz	x21, 40b308 <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40b2d0:	mov	x0, x22
  40b2d4:	mov	w1, #0x420                 	// #1056
  40b2d8:	blr	x21
  40b2dc:	cbnz	w0, 40b2f4 <rtnl_linkdump_req_filter_fn@@Base+0x8c>
  40b2e0:	ldr	w0, [x19]
  40b2e4:	mov	x1, x22
  40b2e8:	ldr	w2, [sp, #48]
  40b2ec:	mov	w3, #0x0                   	// #0
  40b2f0:	bl	405180 <send@plt>
  40b2f4:	ldp	x29, x30, [sp]
  40b2f8:	ldp	x19, x20, [sp, #16]
  40b2fc:	ldp	x21, x22, [sp, #32]
  40b300:	add	sp, sp, #0x450
  40b304:	ret
  40b308:	mov	w0, #0xffffffea            	// #-22
  40b30c:	b	40b2f4 <rtnl_linkdump_req_filter_fn@@Base+0x8c>
  40b310:	bl	40a630 <jsonw_null_field@@Base+0x24>
  40b314:	b	40b2f4 <rtnl_linkdump_req_filter_fn@@Base+0x8c>

000000000040b318 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40b318:	stp	x29, x30, [sp, #-208]!
  40b31c:	mov	x2, #0x98                  	// #152
  40b320:	mov	x29, sp
  40b324:	stp	x19, x20, [sp, #16]
  40b328:	mov	x19, x0
  40b32c:	mov	x20, x1
  40b330:	add	x0, sp, #0x38
  40b334:	mov	w1, #0x0                   	// #0
  40b338:	str	x21, [sp, #32]
  40b33c:	bl	404fe0 <memset@plt>
  40b340:	mov	x0, #0x20                  	// #32
  40b344:	add	x21, sp, #0x30
  40b348:	movk	x0, #0x1e, lsl #32
  40b34c:	mov	w1, #0xa0                  	// #160
  40b350:	movk	x0, #0x301, lsl #48
  40b354:	str	x0, [sp, #48]
  40b358:	ldr	w0, [x19, #28]
  40b35c:	add	w0, w0, #0x1
  40b360:	stp	w0, w0, [x19, #28]
  40b364:	str	w0, [sp, #56]
  40b368:	mov	w0, #0x7                   	// #7
  40b36c:	strb	w0, [sp, #64]
  40b370:	mov	x0, x21
  40b374:	blr	x20
  40b378:	cbnz	w0, 40b390 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x78>
  40b37c:	ldr	w0, [x19]
  40b380:	mov	x1, x21
  40b384:	mov	w3, #0x0                   	// #0
  40b388:	mov	x2, #0xa0                  	// #160
  40b38c:	bl	405180 <send@plt>
  40b390:	ldp	x19, x20, [sp, #16]
  40b394:	ldr	x21, [sp, #32]
  40b398:	ldp	x29, x30, [sp], #208
  40b39c:	ret

000000000040b3a0 <rtnl_statsdump_req_filter@@Base>:
  40b3a0:	stp	x29, x30, [sp, #-48]!
  40b3a4:	mov	x3, #0x1c                  	// #28
  40b3a8:	movk	x3, #0x5e, lsl #32
  40b3ac:	mov	x29, sp
  40b3b0:	movk	x3, #0x301, lsl #48
  40b3b4:	str	x3, [sp, #16]
  40b3b8:	ldr	w3, [x0, #28]
  40b3bc:	stp	xzr, xzr, [sp, #24]
  40b3c0:	add	w3, w3, #0x1
  40b3c4:	stp	w3, w3, [x0, #28]
  40b3c8:	ldr	w0, [x0]
  40b3cc:	str	w3, [sp, #24]
  40b3d0:	mov	w3, #0x0                   	// #0
  40b3d4:	strb	w1, [sp, #32]
  40b3d8:	add	x1, sp, #0x10
  40b3dc:	str	w2, [sp, #40]
  40b3e0:	mov	x2, #0x1c                  	// #28
  40b3e4:	bl	405180 <send@plt>
  40b3e8:	ldp	x29, x30, [sp], #48
  40b3ec:	ret

000000000040b3f0 <rtnl_send@@Base>:
  40b3f0:	stp	x29, x30, [sp, #-16]!
  40b3f4:	sxtw	x2, w2
  40b3f8:	mov	w3, #0x0                   	// #0
  40b3fc:	mov	x29, sp
  40b400:	ldr	w0, [x0]
  40b404:	bl	405180 <send@plt>
  40b408:	ldp	x29, x30, [sp], #16
  40b40c:	ret

000000000040b410 <rtnl_send_check@@Base>:
  40b410:	sub	sp, sp, #0x420
  40b414:	sxtw	x2, w2
  40b418:	mov	w3, #0x0                   	// #0
  40b41c:	stp	x29, x30, [sp]
  40b420:	mov	x29, sp
  40b424:	stp	x19, x20, [sp, #16]
  40b428:	mov	x20, x0
  40b42c:	ldr	w0, [x0]
  40b430:	bl	405180 <send@plt>
  40b434:	tbnz	w0, #31, 40b468 <rtnl_send_check@@Base+0x58>
  40b438:	ldr	w0, [x20]
  40b43c:	add	x19, sp, #0x20
  40b440:	mov	x1, x19
  40b444:	mov	w3, #0x42                  	// #66
  40b448:	mov	x2, #0x400                 	// #1024
  40b44c:	bl	4050a0 <recv@plt>
  40b450:	mov	w1, w0
  40b454:	tbz	w0, #31, 40b4d0 <rtnl_send_check@@Base+0xc0>
  40b458:	bl	4052f0 <__errno_location@plt>
  40b45c:	ldr	w0, [x0]
  40b460:	cmp	w0, #0xb
  40b464:	csetm	w0, ne  // ne = any
  40b468:	ldp	x29, x30, [sp]
  40b46c:	ldp	x19, x20, [sp, #16]
  40b470:	add	sp, sp, #0x420
  40b474:	ret
  40b478:	ldrh	w2, [x19, #4]
  40b47c:	cmp	w2, #0x2
  40b480:	b.ne	40b4c0 <rtnl_send_check@@Base+0xb0>  // b.any
  40b484:	cmp	w0, #0x23
  40b488:	b.hi	40b4ac <rtnl_send_check@@Base+0x9c>  // b.pmore
  40b48c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b490:	ldr	x0, [x0, #3992]
  40b494:	ldr	x1, [x0]
  40b498:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b49c:	add	x0, x0, #0x151
  40b4a0:	bl	404e10 <fputs@plt>
  40b4a4:	mov	w0, #0xffffffff            	// #-1
  40b4a8:	b	40b468 <rtnl_send_check@@Base+0x58>
  40b4ac:	bl	4052f0 <__errno_location@plt>
  40b4b0:	ldr	w1, [x19, #16]
  40b4b4:	neg	w1, w1
  40b4b8:	str	w1, [x0]
  40b4bc:	b	40b4a4 <rtnl_send_check@@Base+0x94>
  40b4c0:	add	w0, w0, #0x3
  40b4c4:	and	w0, w0, #0xfffffffc
  40b4c8:	sub	w1, w1, w0
  40b4cc:	add	x19, x19, w0, uxtw
  40b4d0:	cmp	w1, #0xf
  40b4d4:	b.le	40b4ec <rtnl_send_check@@Base+0xdc>
  40b4d8:	ldr	w0, [x19]
  40b4dc:	cmp	w0, #0xf
  40b4e0:	b.ls	40b4ec <rtnl_send_check@@Base+0xdc>  // b.plast
  40b4e4:	cmp	w0, w1
  40b4e8:	b.ls	40b478 <rtnl_send_check@@Base+0x68>  // b.plast
  40b4ec:	mov	w0, #0x0                   	// #0
  40b4f0:	b	40b468 <rtnl_send_check@@Base+0x58>

000000000040b4f4 <rtnl_dump_request@@Base>:
  40b4f4:	stp	x29, x30, [sp, #-144]!
  40b4f8:	add	w4, w3, #0x10
  40b4fc:	sxtw	x3, w3
  40b500:	mov	x29, sp
  40b504:	strh	w1, [sp, #44]
  40b508:	mov	w1, #0x301                 	// #769
  40b50c:	strh	w1, [sp, #46]
  40b510:	ldr	w1, [x0, #28]
  40b514:	str	xzr, [sp, #24]
  40b518:	add	w1, w1, #0x1
  40b51c:	stp	w1, w1, [x0, #28]
  40b520:	stp	w1, wzr, [sp, #48]
  40b524:	mov	w1, #0x10                  	// #16
  40b528:	strh	w1, [sp, #24]
  40b52c:	add	x1, sp, #0x28
  40b530:	str	x1, [sp, #56]
  40b534:	mov	x1, #0x10                  	// #16
  40b538:	ldr	w0, [x0]
  40b53c:	str	x1, [sp, #64]
  40b540:	add	x1, sp, #0x18
  40b544:	str	x1, [sp, #88]
  40b548:	mov	w1, #0xc                   	// #12
  40b54c:	stp	xzr, xzr, [sp, #96]
  40b550:	str	w1, [sp, #96]
  40b554:	add	x1, sp, #0x38
  40b558:	str	x1, [sp, #104]
  40b55c:	mov	x1, #0x2                   	// #2
  40b560:	stp	xzr, xzr, [sp, #112]
  40b564:	str	wzr, [sp, #32]
  40b568:	str	w4, [sp, #40]
  40b56c:	stp	x2, x3, [sp, #72]
  40b570:	mov	w2, #0x0                   	// #0
  40b574:	str	x1, [sp, #112]
  40b578:	add	x1, sp, #0x58
  40b57c:	stp	xzr, xzr, [sp, #128]
  40b580:	bl	405000 <sendmsg@plt>
  40b584:	ldp	x29, x30, [sp], #144
  40b588:	ret

000000000040b58c <rtnl_dump_request_n@@Base>:
  40b58c:	stp	x29, x30, [sp, #-112]!
  40b590:	mov	w2, #0x10                  	// #16
  40b594:	mov	x29, sp
  40b598:	str	xzr, [sp, #24]
  40b59c:	strh	w2, [sp, #24]
  40b5a0:	ldr	w2, [x1]
  40b5a4:	str	x2, [sp, #48]
  40b5a8:	add	x2, sp, #0x18
  40b5ac:	str	x2, [sp, #56]
  40b5b0:	mov	w2, #0xc                   	// #12
  40b5b4:	stp	xzr, xzr, [sp, #64]
  40b5b8:	str	w2, [sp, #64]
  40b5bc:	add	x2, sp, #0x28
  40b5c0:	str	x2, [sp, #72]
  40b5c4:	mov	x2, #0x1                   	// #1
  40b5c8:	stp	xzr, xzr, [sp, #80]
  40b5cc:	str	x2, [sp, #80]
  40b5d0:	mov	w2, #0x301                 	// #769
  40b5d4:	strh	w2, [x1, #6]
  40b5d8:	ldr	w2, [x0, #28]
  40b5dc:	str	wzr, [x1, #12]
  40b5e0:	add	w2, w2, #0x1
  40b5e4:	stp	w2, w2, [x0, #28]
  40b5e8:	ldr	w0, [x0]
  40b5ec:	str	w2, [x1, #8]
  40b5f0:	mov	w2, #0x0                   	// #0
  40b5f4:	str	wzr, [sp, #32]
  40b5f8:	str	x1, [sp, #40]
  40b5fc:	add	x1, sp, #0x38
  40b600:	stp	xzr, xzr, [sp, #96]
  40b604:	bl	405000 <sendmsg@plt>
  40b608:	ldp	x29, x30, [sp], #112
  40b60c:	ret

000000000040b610 <rtnl_dump_filter_nc@@Base>:
  40b610:	stp	x29, x30, [sp, #-256]!
  40b614:	mov	x29, sp
  40b618:	stp	x21, x22, [sp, #32]
  40b61c:	mov	x21, x0
  40b620:	add	x0, sp, #0x78
  40b624:	stp	x25, x26, [sp, #64]
  40b628:	add	x26, sp, #0x70
  40b62c:	stp	x27, x28, [sp, #80]
  40b630:	add	x27, sp, #0xc8
  40b634:	str	x0, [sp, #200]
  40b638:	mov	w0, #0xc                   	// #12
  40b63c:	stp	xzr, xzr, [sp, #208]
  40b640:	stp	xzr, xzr, [sp, #224]
  40b644:	stp	x19, x20, [sp, #16]
  40b648:	mov	w20, #0x0                   	// #0
  40b64c:	stp	x23, x24, [sp, #48]
  40b650:	mov	x24, #0x1                   	// #1
  40b654:	stp	x1, x2, [sp, #152]
  40b658:	strh	w3, [sp, #168]
  40b65c:	stp	xzr, xzr, [sp, #176]
  40b660:	strh	wzr, [sp, #192]
  40b664:	str	w0, [sp, #208]
  40b668:	add	x0, sp, #0x88
  40b66c:	str	x0, [sp, #216]
  40b670:	str	x24, [sp, #224]
  40b674:	stp	xzr, xzr, [sp, #240]
  40b678:	ldr	w0, [x21]
  40b67c:	mov	x2, x26
  40b680:	mov	x1, x27
  40b684:	bl	40a72c <jsonw_null_field@@Base+0x120>
  40b688:	mov	w23, w0
  40b68c:	tbnz	w0, #31, 40b928 <rtnl_dump_filter_nc@@Base+0x318>
  40b690:	ldr	x3, [x21, #40]
  40b694:	cbz	x3, 40b6ac <rtnl_dump_filter_nc@@Base+0x9c>
  40b698:	add	w2, w0, #0x3
  40b69c:	mov	x1, #0x1                   	// #1
  40b6a0:	ldr	x0, [sp, #112]
  40b6a4:	and	x2, x2, #0xfffffffc
  40b6a8:	bl	4051c0 <fwrite@plt>
  40b6ac:	add	x28, sp, #0x98
  40b6b0:	mov	w22, #0x0                   	// #0
  40b6b4:	mov	w25, #0x0                   	// #0
  40b6b8:	ldr	x2, [x28]
  40b6bc:	ldr	x19, [sp, #112]
  40b6c0:	cbnz	x2, 40b8d4 <rtnl_dump_filter_nc@@Base+0x2c4>
  40b6c4:	mov	x0, x19
  40b6c8:	bl	405160 <free@plt>
  40b6cc:	cbz	w25, 40b8dc <rtnl_dump_filter_nc@@Base+0x2cc>
  40b6d0:	cbz	w20, 40b738 <rtnl_dump_filter_nc@@Base+0x128>
  40b6d4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b6d8:	mov	w20, #0x0                   	// #0
  40b6dc:	ldr	x0, [x0, #3992]
  40b6e0:	ldr	x1, [x0]
  40b6e4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b6e8:	add	x0, x0, #0x28e
  40b6ec:	bl	404e10 <fputs@plt>
  40b6f0:	b	40b738 <rtnl_dump_filter_nc@@Base+0x128>
  40b6f4:	tbz	w25, #31, 40b770 <rtnl_dump_filter_nc@@Base+0x160>
  40b6f8:	mov	w1, w25
  40b6fc:	mov	x0, x19
  40b700:	bl	40ab3c <nl_dump_ext_ack_done@@Base>
  40b704:	cbnz	w0, 40b72c <rtnl_dump_filter_nc@@Base+0x11c>
  40b708:	bl	4052f0 <__errno_location@plt>
  40b70c:	neg	w1, w25
  40b710:	str	w1, [x0]
  40b714:	cmn	w25, #0x5a
  40b718:	b.eq	40b758 <rtnl_dump_filter_nc@@Base+0x148>  // b.none
  40b71c:	cmn	w25, #0x5f
  40b720:	b.eq	40b72c <rtnl_dump_filter_nc@@Base+0x11c>  // b.none
  40b724:	cmn	w25, #0x2
  40b728:	b.ne	40b7e0 <rtnl_dump_filter_nc@@Base+0x1d0>  // b.any
  40b72c:	ldr	x0, [sp, #112]
  40b730:	mov	w20, #0xffffffff            	// #-1
  40b734:	bl	405160 <free@plt>
  40b738:	mov	w0, w20
  40b73c:	ldp	x19, x20, [sp, #16]
  40b740:	ldp	x21, x22, [sp, #32]
  40b744:	ldp	x23, x24, [sp, #48]
  40b748:	ldp	x25, x26, [sp, #64]
  40b74c:	ldp	x27, x28, [sp, #80]
  40b750:	ldp	x29, x30, [sp], #256
  40b754:	ret
  40b758:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b75c:	ldr	x0, [x0, #3992]
  40b760:	ldr	x1, [x0]
  40b764:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b768:	add	x0, x0, #0x257
  40b76c:	b	40b8cc <rtnl_dump_filter_nc@@Base+0x2bc>
  40b770:	mov	w25, #0x1                   	// #1
  40b774:	mov	x0, x19
  40b778:	mov	x1, #0x0                   	// #0
  40b77c:	bl	40a7e4 <nl_dump_ext_ack@@Base>
  40b780:	add	x28, x28, #0x18
  40b784:	b	40b6b8 <rtnl_dump_filter_nc@@Base+0xa8>
  40b788:	cmp	w0, #0x2
  40b78c:	b.ne	40b7f0 <rtnl_dump_filter_nc@@Base+0x1e0>  // b.any
  40b790:	cmp	w1, #0x23
  40b794:	b.hi	40b7b0 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.pmore
  40b798:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b79c:	ldr	x0, [x0, #3992]
  40b7a0:	ldr	x1, [x0]
  40b7a4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b7a8:	add	x0, x0, #0x151
  40b7ac:	b	40b8cc <rtnl_dump_filter_nc@@Base+0x2bc>
  40b7b0:	bl	4052f0 <__errno_location@plt>
  40b7b4:	ldr	w19, [x19, #16]
  40b7b8:	neg	w1, w19
  40b7bc:	str	w1, [x0]
  40b7c0:	ldr	w0, [x21, #36]
  40b7c4:	cmp	w0, #0x4
  40b7c8:	b.ne	40b7d8 <rtnl_dump_filter_nc@@Base+0x1c8>  // b.any
  40b7cc:	cmn	w19, #0x5f
  40b7d0:	ccmn	w19, #0x2, #0x4, ne  // ne = any
  40b7d4:	b.eq	40b72c <rtnl_dump_filter_nc@@Base+0x11c>  // b.none
  40b7d8:	ldr	w0, [x21, #48]
  40b7dc:	tbnz	w0, #1, 40b72c <rtnl_dump_filter_nc@@Base+0x11c>
  40b7e0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b7e4:	add	x0, x0, #0x27c
  40b7e8:	bl	404e30 <perror@plt>
  40b7ec:	b	40b72c <rtnl_dump_filter_nc@@Base+0x11c>
  40b7f0:	ldr	x0, [x21, #40]
  40b7f4:	cbnz	x0, 40b82c <rtnl_dump_filter_nc@@Base+0x21c>
  40b7f8:	ldr	x1, [x28, #8]
  40b7fc:	mov	x0, x19
  40b800:	str	x2, [sp, #104]
  40b804:	blr	x2
  40b808:	mov	w1, w0
  40b80c:	ldr	x2, [sp, #104]
  40b810:	tbz	w0, #31, 40b82c <rtnl_dump_filter_nc@@Base+0x21c>
  40b814:	ldr	x0, [sp, #112]
  40b818:	str	w1, [sp, #104]
  40b81c:	bl	405160 <free@plt>
  40b820:	ldr	w1, [sp, #104]
  40b824:	mov	w20, w1
  40b828:	b	40b738 <rtnl_dump_filter_nc@@Base+0x128>
  40b82c:	ldr	w0, [x19]
  40b830:	add	w0, w0, #0x3
  40b834:	and	w0, w0, #0xfffffffc
  40b838:	sub	w22, w22, w0
  40b83c:	add	x19, x19, w0, uxtw
  40b840:	cmp	w22, #0xf
  40b844:	b.le	40b780 <rtnl_dump_filter_nc@@Base+0x170>
  40b848:	ldr	w1, [x19]
  40b84c:	cmp	w1, #0xf
  40b850:	b.ls	40b780 <rtnl_dump_filter_nc@@Base+0x170>  // b.plast
  40b854:	cmp	w22, w1
  40b858:	b.cc	40b780 <rtnl_dump_filter_nc@@Base+0x170>  // b.lo, b.ul, b.last
  40b85c:	ldrh	w3, [x19, #6]
  40b860:	ldrh	w0, [x28, #16]
  40b864:	bic	w0, w3, w0
  40b868:	ldr	w3, [sp, #124]
  40b86c:	and	w0, w0, #0xffff
  40b870:	strh	w0, [x19, #6]
  40b874:	cbnz	w3, 40b82c <rtnl_dump_filter_nc@@Base+0x21c>
  40b878:	ldr	w4, [x19, #12]
  40b87c:	ldr	w3, [x21, #8]
  40b880:	cmp	w4, w3
  40b884:	b.ne	40b82c <rtnl_dump_filter_nc@@Base+0x21c>  // b.any
  40b888:	ldr	w4, [x19, #8]
  40b88c:	ldr	w3, [x21, #32]
  40b890:	cmp	w4, w3
  40b894:	b.ne	40b82c <rtnl_dump_filter_nc@@Base+0x21c>  // b.any
  40b898:	tst	x0, #0x10
  40b89c:	ldrh	w0, [x19, #4]
  40b8a0:	csel	w20, w20, w24, eq  // eq = none
  40b8a4:	cmp	w0, #0x3
  40b8a8:	b.ne	40b788 <rtnl_dump_filter_nc@@Base+0x178>  // b.any
  40b8ac:	ldr	w25, [x19, #16]
  40b8b0:	cmp	w1, #0x13
  40b8b4:	b.hi	40b6f4 <rtnl_dump_filter_nc@@Base+0xe4>  // b.pmore
  40b8b8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b8bc:	ldr	x0, [x0, #3992]
  40b8c0:	ldr	x1, [x0]
  40b8c4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b8c8:	add	x0, x0, #0x247
  40b8cc:	bl	404e10 <fputs@plt>
  40b8d0:	b	40b72c <rtnl_dump_filter_nc@@Base+0x11c>
  40b8d4:	mov	w22, w23
  40b8d8:	b	40b840 <rtnl_dump_filter_nc@@Base+0x230>
  40b8dc:	ldr	w0, [sp, #248]
  40b8e0:	tbz	w0, #5, 40b900 <rtnl_dump_filter_nc@@Base+0x2f0>
  40b8e4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b8e8:	ldr	x0, [x0, #3992]
  40b8ec:	ldr	x1, [x0]
  40b8f0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b8f4:	add	x0, x0, #0x18e
  40b8f8:	bl	404e10 <fputs@plt>
  40b8fc:	b	40b678 <rtnl_dump_filter_nc@@Base+0x68>
  40b900:	cbz	w22, 40b678 <rtnl_dump_filter_nc@@Base+0x68>
  40b904:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40b908:	mov	w2, w22
  40b90c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b910:	add	x1, x1, #0x1a1
  40b914:	ldr	x0, [x0, #3992]
  40b918:	ldr	x0, [x0]
  40b91c:	bl	405330 <fprintf@plt>
  40b920:	mov	w0, #0x1                   	// #1
  40b924:	bl	404e20 <exit@plt>
  40b928:	mov	w20, w0
  40b92c:	b	40b738 <rtnl_dump_filter_nc@@Base+0x128>

000000000040b930 <rtnl_talk@@Base>:
  40b930:	stp	x29, x30, [sp, #-32]!
  40b934:	mov	x3, x2
  40b938:	mov	w4, #0x1                   	// #1
  40b93c:	mov	x29, sp
  40b940:	str	x1, [sp, #16]
  40b944:	mov	x2, #0x1                   	// #1
  40b948:	ldr	w1, [x1]
  40b94c:	str	x1, [sp, #24]
  40b950:	add	x1, sp, #0x10
  40b954:	bl	40a7ec <nl_dump_ext_ack@@Base+0x8>
  40b958:	ldp	x29, x30, [sp], #32
  40b95c:	ret

000000000040b960 <rtnl_talk_iov@@Base>:
  40b960:	mov	w4, #0x1                   	// #1
  40b964:	b	40a7ec <nl_dump_ext_ack@@Base+0x8>

000000000040b968 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40b968:	stp	x29, x30, [sp, #-32]!
  40b96c:	mov	x3, x2
  40b970:	mov	w4, #0x0                   	// #0
  40b974:	mov	x29, sp
  40b978:	str	x1, [sp, #16]
  40b97c:	mov	x2, #0x1                   	// #1
  40b980:	ldr	w1, [x1]
  40b984:	str	x1, [sp, #24]
  40b988:	add	x1, sp, #0x10
  40b98c:	bl	40a7ec <nl_dump_ext_ack@@Base+0x8>
  40b990:	ldp	x29, x30, [sp], #32
  40b994:	ret

000000000040b998 <rtnl_listen_all_nsid@@Base>:
  40b998:	stp	x29, x30, [sp, #-48]!
  40b99c:	mov	w4, #0x4                   	// #4
  40b9a0:	mov	w2, #0x8                   	// #8
  40b9a4:	mov	x29, sp
  40b9a8:	str	x19, [sp, #16]
  40b9ac:	mov	x19, x0
  40b9b0:	mov	w0, #0x1                   	// #1
  40b9b4:	str	w0, [sp, #44]
  40b9b8:	add	x3, sp, #0x2c
  40b9bc:	mov	w1, #0x10e                 	// #270
  40b9c0:	ldr	w0, [x19]
  40b9c4:	bl	404f80 <setsockopt@plt>
  40b9c8:	tbz	w0, #31, 40b9e8 <rtnl_listen_all_nsid@@Base+0x50>
  40b9cc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40b9d0:	add	x0, x0, #0x2bd
  40b9d4:	bl	404e30 <perror@plt>
  40b9d8:	mov	w0, #0xffffffff            	// #-1
  40b9dc:	ldr	x19, [sp, #16]
  40b9e0:	ldp	x29, x30, [sp], #48
  40b9e4:	ret
  40b9e8:	ldr	w0, [x19, #48]
  40b9ec:	orr	w0, w0, #0x1
  40b9f0:	str	w0, [x19, #48]
  40b9f4:	mov	w0, #0x0                   	// #0
  40b9f8:	b	40b9dc <rtnl_listen_all_nsid@@Base+0x44>

000000000040b9fc <rtnl_listen@@Base>:
  40b9fc:	mov	x12, #0x60c0                	// #24768
  40ba00:	sub	sp, sp, x12
  40ba04:	stp	x29, x30, [sp]
  40ba08:	mov	x29, sp
  40ba0c:	stp	x19, x20, [sp, #16]
  40ba10:	mov	x20, x0
  40ba14:	mov	w0, #0x10                  	// #16
  40ba18:	str	xzr, [sp, #104]
  40ba1c:	strh	w0, [sp, #104]
  40ba20:	add	x0, sp, #0x68
  40ba24:	str	x0, [sp, #136]
  40ba28:	mov	w0, #0xc                   	// #12
  40ba2c:	stp	xzr, xzr, [sp, #144]
  40ba30:	str	w0, [sp, #144]
  40ba34:	add	x0, sp, #0x78
  40ba38:	str	x0, [sp, #152]
  40ba3c:	mov	x0, #0x1                   	// #1
  40ba40:	stp	xzr, xzr, [sp, #160]
  40ba44:	str	x0, [sp, #160]
  40ba48:	ldr	w0, [x20, #48]
  40ba4c:	stp	x21, x22, [sp, #32]
  40ba50:	mov	x21, x1
  40ba54:	mov	x22, x2
  40ba58:	stp	x23, x24, [sp, #48]
  40ba5c:	stp	x25, x26, [sp, #64]
  40ba60:	stp	x27, x28, [sp, #80]
  40ba64:	str	wzr, [sp, #112]
  40ba68:	stp	xzr, xzr, [sp, #176]
  40ba6c:	tbz	w0, #0, 40ba80 <rtnl_listen@@Base+0x84>
  40ba70:	add	x0, sp, #0xc0
  40ba74:	str	x0, [sp, #168]
  40ba78:	mov	x0, #0x2000                	// #8192
  40ba7c:	str	x0, [sp, #176]
  40ba80:	mov	x25, #0x10e                 	// #270
  40ba84:	add	x24, sp, #0x88
  40ba88:	add	x26, sp, #0x60
  40ba8c:	mov	x0, #0x20c0                	// #8384
  40ba90:	movk	x25, #0x8, lsl #32
  40ba94:	add	x23, sp, x0
  40ba98:	str	x23, [sp, #120]
  40ba9c:	mov	x0, #0x4000                	// #16384
  40baa0:	str	x0, [sp, #128]
  40baa4:	ldr	w0, [x20]
  40baa8:	mov	x1, x24
  40baac:	mov	w2, #0x0                   	// #0
  40bab0:	bl	404de0 <recvmsg@plt>
  40bab4:	mov	w27, w0
  40bab8:	cmp	w0, #0x0
  40babc:	b.ge	40bb34 <rtnl_listen@@Base+0x138>  // b.tcont
  40bac0:	bl	4052f0 <__errno_location@plt>
  40bac4:	mov	x19, x0
  40bac8:	ldr	w0, [x0]
  40bacc:	cmp	w0, #0x4
  40bad0:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40bad4:	b.eq	40ba9c <rtnl_listen@@Base+0xa0>  // b.none
  40bad8:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40badc:	ldr	x1, [x1, #3992]
  40bae0:	ldr	x27, [x1]
  40bae4:	bl	405070 <strerror@plt>
  40bae8:	ldr	w3, [x19]
  40baec:	mov	x2, x0
  40baf0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40baf4:	mov	x0, x27
  40baf8:	add	x1, x1, #0xaa
  40bafc:	bl	405330 <fprintf@plt>
  40bb00:	ldr	w0, [x19]
  40bb04:	cmp	w0, #0x69
  40bb08:	b.eq	40ba9c <rtnl_listen@@Base+0xa0>  // b.none
  40bb0c:	mov	w0, #0xffffffff            	// #-1
  40bb10:	mov	x12, #0x60c0                	// #24768
  40bb14:	ldp	x29, x30, [sp]
  40bb18:	ldp	x19, x20, [sp, #16]
  40bb1c:	ldp	x21, x22, [sp, #32]
  40bb20:	ldp	x23, x24, [sp, #48]
  40bb24:	ldp	x25, x26, [sp, #64]
  40bb28:	ldp	x27, x28, [sp, #80]
  40bb2c:	add	sp, sp, x12
  40bb30:	ret
  40bb34:	b.ne	40bb54 <rtnl_listen@@Base+0x158>  // b.any
  40bb38:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bb3c:	ldr	x0, [x0, #3992]
  40bb40:	ldr	x1, [x0]
  40bb44:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bb48:	add	x0, x0, #0x9a
  40bb4c:	bl	404e10 <fputs@plt>
  40bb50:	b	40bb0c <rtnl_listen@@Base+0x110>
  40bb54:	ldr	w2, [sp, #144]
  40bb58:	cmp	w2, #0xc
  40bb5c:	b.eq	40bb78 <rtnl_listen@@Base+0x17c>  // b.none
  40bb60:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bb64:	add	x1, x1, #0x2d5
  40bb68:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bb6c:	ldr	x0, [x0, #3992]
  40bb70:	ldr	x0, [x0]
  40bb74:	b	40bc3c <rtnl_listen@@Base+0x240>
  40bb78:	ldr	w0, [x20, #48]
  40bb7c:	tbnz	w0, #0, 40bbb0 <rtnl_listen@@Base+0x1b4>
  40bb80:	mov	x28, x23
  40bb84:	cmp	w27, #0xf
  40bb88:	b.hi	40bbfc <rtnl_listen@@Base+0x200>  // b.pmore
  40bb8c:	ldr	w0, [sp, #184]
  40bb90:	tbz	w0, #5, 40bc70 <rtnl_listen@@Base+0x274>
  40bb94:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bb98:	ldr	x0, [x0, #3992]
  40bb9c:	ldr	x1, [x0]
  40bba0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bba4:	add	x0, x0, #0x18e
  40bba8:	bl	404e10 <fputs@plt>
  40bbac:	b	40ba9c <rtnl_listen@@Base+0xa0>
  40bbb0:	mov	w0, #0xffffffff            	// #-1
  40bbb4:	str	w0, [sp, #96]
  40bbb8:	ldr	x0, [sp, #176]
  40bbbc:	cmp	x0, #0xf
  40bbc0:	b.ls	40bb80 <rtnl_listen@@Base+0x184>  // b.plast
  40bbc4:	ldr	x1, [sp, #168]
  40bbc8:	cbz	x1, 40bb80 <rtnl_listen@@Base+0x184>
  40bbcc:	ldr	x0, [x1, #8]
  40bbd0:	cmp	x0, x25
  40bbd4:	b.ne	40bbec <rtnl_listen@@Base+0x1f0>  // b.any
  40bbd8:	ldr	x0, [x1]
  40bbdc:	cmp	x0, #0x14
  40bbe0:	b.ne	40bbec <rtnl_listen@@Base+0x1f0>  // b.any
  40bbe4:	ldr	w0, [x1, #16]
  40bbe8:	str	w0, [sp, #96]
  40bbec:	mov	x0, x24
  40bbf0:	bl	404e40 <__cmsg_nxthdr@plt>
  40bbf4:	mov	x1, x0
  40bbf8:	b	40bbc8 <rtnl_listen@@Base+0x1cc>
  40bbfc:	ldr	w19, [x28]
  40bc00:	cmp	w19, #0x10
  40bc04:	ccmp	w27, w19, #0x1, pl  // pl = nfrst
  40bc08:	b.ge	40bc48 <rtnl_listen@@Base+0x24c>  // b.tcont
  40bc0c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bc10:	ldr	w1, [sp, #184]
  40bc14:	ldr	x0, [x0, #3992]
  40bc18:	ldr	x0, [x0]
  40bc1c:	tbz	w1, #5, 40bc30 <rtnl_listen@@Base+0x234>
  40bc20:	mov	x1, x0
  40bc24:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bc28:	add	x0, x0, #0x120
  40bc2c:	b	40bb4c <rtnl_listen@@Base+0x150>
  40bc30:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bc34:	mov	w2, w19
  40bc38:	add	x1, x1, #0x133
  40bc3c:	bl	405330 <fprintf@plt>
  40bc40:	mov	w0, #0x1                   	// #1
  40bc44:	bl	404e20 <exit@plt>
  40bc48:	mov	x2, x22
  40bc4c:	mov	x1, x28
  40bc50:	mov	x0, x26
  40bc54:	blr	x21
  40bc58:	tbnz	w0, #31, 40bb10 <rtnl_listen@@Base+0x114>
  40bc5c:	add	w19, w19, #0x3
  40bc60:	and	w19, w19, #0xfffffffc
  40bc64:	sub	w27, w27, w19
  40bc68:	add	x28, x28, w19, uxtw
  40bc6c:	b	40bb84 <rtnl_listen@@Base+0x188>
  40bc70:	cbz	w27, 40ba9c <rtnl_listen@@Base+0xa0>
  40bc74:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bc78:	mov	w2, w27
  40bc7c:	add	x1, x1, #0x1a1
  40bc80:	b	40bb68 <rtnl_listen@@Base+0x16c>

000000000040bc84 <rtnl_from_file@@Base>:
  40bc84:	mov	x12, #0x4050                	// #16464
  40bc88:	sub	sp, sp, x12
  40bc8c:	stp	x29, x30, [sp]
  40bc90:	mov	x29, sp
  40bc94:	stp	x21, x22, [sp, #32]
  40bc98:	add	x22, sp, #0x50
  40bc9c:	mov	x21, x1
  40bca0:	stp	x19, x20, [sp, #16]
  40bca4:	mov	x19, x0
  40bca8:	stp	x23, x24, [sp, #48]
  40bcac:	mov	x23, x2
  40bcb0:	mov	w24, #0x3ff0                	// #16368
  40bcb4:	str	x25, [sp, #64]
  40bcb8:	add	x25, x22, #0x10
  40bcbc:	mov	x3, x19
  40bcc0:	mov	x0, x22
  40bcc4:	mov	x2, #0x10                  	// #16
  40bcc8:	mov	x1, #0x1                   	// #1
  40bccc:	bl	405130 <fread@plt>
  40bcd0:	cbnz	x0, 40bd20 <rtnl_from_file@@Base+0x9c>
  40bcd4:	mov	x0, x19
  40bcd8:	bl	4050d0 <feof@plt>
  40bcdc:	cbnz	w0, 40bdc4 <rtnl_from_file@@Base+0x140>
  40bce0:	mov	x0, x19
  40bce4:	bl	405360 <ferror@plt>
  40bce8:	cbz	w0, 40bcf8 <rtnl_from_file@@Base+0x74>
  40bcec:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bcf0:	add	x0, x0, #0x2f2
  40bcf4:	bl	404e30 <perror@plt>
  40bcf8:	mov	x0, x19
  40bcfc:	bl	4050d0 <feof@plt>
  40bd00:	cbz	w0, 40bd64 <rtnl_from_file@@Base+0xe0>
  40bd04:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bd08:	ldr	x0, [x0, #3992]
  40bd0c:	ldr	x1, [x0]
  40bd10:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bd14:	add	x0, x0, #0x308
  40bd18:	bl	404e10 <fputs@plt>
  40bd1c:	b	40bd64 <rtnl_from_file@@Base+0xe0>
  40bd20:	cmp	x0, #0x10
  40bd24:	b.ne	40bce0 <rtnl_from_file@@Base+0x5c>  // b.any
  40bd28:	ldr	w20, [sp, #80]
  40bd2c:	sub	w0, w20, #0x10
  40bd30:	cmp	w0, w24
  40bd34:	b.ls	40bd88 <rtnl_from_file@@Base+0x104>  // b.plast
  40bd38:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bd3c:	ldr	x0, [x0, #3992]
  40bd40:	ldr	x21, [x0]
  40bd44:	mov	x0, x19
  40bd48:	bl	404ea0 <ftell@plt>
  40bd4c:	mov	x3, x0
  40bd50:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bd54:	mov	w2, w20
  40bd58:	add	x1, x1, #0x32b
  40bd5c:	mov	x0, x21
  40bd60:	bl	405330 <fprintf@plt>
  40bd64:	mov	w0, #0xffffffff            	// #-1
  40bd68:	mov	x12, #0x4050                	// #16464
  40bd6c:	ldp	x29, x30, [sp]
  40bd70:	ldp	x19, x20, [sp, #16]
  40bd74:	ldp	x21, x22, [sp, #32]
  40bd78:	ldp	x23, x24, [sp, #48]
  40bd7c:	ldr	x25, [sp, #64]
  40bd80:	add	sp, sp, x12
  40bd84:	ret
  40bd88:	sub	w20, w20, #0xd
  40bd8c:	mov	x3, x19
  40bd90:	and	x20, x20, #0xfffffffc
  40bd94:	mov	x0, x25
  40bd98:	mov	x2, x20
  40bd9c:	mov	x1, #0x1                   	// #1
  40bda0:	bl	405130 <fread@plt>
  40bda4:	cmp	x20, x0
  40bda8:	b.ne	40bce0 <rtnl_from_file@@Base+0x5c>  // b.any
  40bdac:	mov	x2, x23
  40bdb0:	mov	x1, x22
  40bdb4:	mov	x0, #0x0                   	// #0
  40bdb8:	blr	x21
  40bdbc:	tbz	w0, #31, 40bcbc <rtnl_from_file@@Base+0x38>
  40bdc0:	b	40bd68 <rtnl_from_file@@Base+0xe4>
  40bdc4:	mov	w0, #0x0                   	// #0
  40bdc8:	b	40bd68 <rtnl_from_file@@Base+0xe4>

000000000040bdcc <addattr_l@@Base>:
  40bdcc:	stp	x29, x30, [sp, #-32]!
  40bdd0:	mov	x29, sp
  40bdd4:	ldr	w5, [x0]
  40bdd8:	stp	x19, x20, [sp, #16]
  40bddc:	mov	x19, x0
  40bde0:	add	w5, w5, #0x3
  40bde4:	add	w0, w4, #0x7
  40bde8:	and	w5, w5, #0xfffffffc
  40bdec:	and	w20, w0, #0xfffffffc
  40bdf0:	add	w0, w5, w20
  40bdf4:	cmp	w0, w1
  40bdf8:	b.ls	40be28 <addattr_l@@Base+0x5c>  // b.plast
  40bdfc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40be00:	mov	w2, w1
  40be04:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40be08:	add	x1, x1, #0x34e
  40be0c:	ldr	x0, [x0, #3992]
  40be10:	ldr	x0, [x0]
  40be14:	bl	405330 <fprintf@plt>
  40be18:	mov	w0, #0xffffffff            	// #-1
  40be1c:	ldp	x19, x20, [sp, #16]
  40be20:	ldp	x29, x30, [sp], #32
  40be24:	ret
  40be28:	add	x0, x19, w5, uxtw
  40be2c:	mov	x1, x3
  40be30:	add	w3, w4, #0x4
  40be34:	strh	w2, [x0, #2]
  40be38:	strh	w3, [x19, w5, uxtw]
  40be3c:	cbz	w4, 40be4c <addattr_l@@Base+0x80>
  40be40:	sxtw	x2, w4
  40be44:	add	x0, x0, #0x4
  40be48:	bl	404dd0 <memcpy@plt>
  40be4c:	ldr	w0, [x19]
  40be50:	add	w0, w0, #0x3
  40be54:	and	w0, w0, #0xfffffffc
  40be58:	add	w0, w0, w20
  40be5c:	str	w0, [x19]
  40be60:	mov	w0, #0x0                   	// #0
  40be64:	b	40be1c <addattr_l@@Base+0x50>

000000000040be68 <addattr@@Base>:
  40be68:	mov	w4, #0x0                   	// #0
  40be6c:	mov	x3, #0x0                   	// #0
  40be70:	b	40bdcc <addattr_l@@Base>

000000000040be74 <addattr8@@Base>:
  40be74:	stp	x29, x30, [sp, #-32]!
  40be78:	mov	w4, #0x1                   	// #1
  40be7c:	mov	x29, sp
  40be80:	strb	w3, [sp, #31]
  40be84:	add	x3, sp, #0x1f
  40be88:	bl	40bdcc <addattr_l@@Base>
  40be8c:	ldp	x29, x30, [sp], #32
  40be90:	ret

000000000040be94 <addattr16@@Base>:
  40be94:	stp	x29, x30, [sp, #-32]!
  40be98:	mov	w4, #0x2                   	// #2
  40be9c:	mov	x29, sp
  40bea0:	strh	w3, [sp, #30]
  40bea4:	add	x3, sp, #0x1e
  40bea8:	bl	40bdcc <addattr_l@@Base>
  40beac:	ldp	x29, x30, [sp], #32
  40beb0:	ret

000000000040beb4 <addattr32@@Base>:
  40beb4:	stp	x29, x30, [sp, #-32]!
  40beb8:	mov	w4, #0x4                   	// #4
  40bebc:	mov	x29, sp
  40bec0:	str	w3, [sp, #28]
  40bec4:	add	x3, sp, #0x1c
  40bec8:	bl	40bdcc <addattr_l@@Base>
  40becc:	ldp	x29, x30, [sp], #32
  40bed0:	ret

000000000040bed4 <addattr64@@Base>:
  40bed4:	stp	x29, x30, [sp, #-32]!
  40bed8:	mov	w4, #0x8                   	// #8
  40bedc:	mov	x29, sp
  40bee0:	str	x3, [sp, #24]
  40bee4:	add	x3, sp, #0x18
  40bee8:	bl	40bdcc <addattr_l@@Base>
  40beec:	ldp	x29, x30, [sp], #32
  40bef0:	ret

000000000040bef4 <addattrstrz@@Base>:
  40bef4:	stp	x29, x30, [sp, #-48]!
  40bef8:	mov	x29, sp
  40befc:	stp	x19, x20, [sp, #16]
  40bf00:	mov	x20, x0
  40bf04:	mov	x19, x3
  40bf08:	mov	x0, x3
  40bf0c:	stp	x21, x22, [sp, #32]
  40bf10:	mov	w21, w1
  40bf14:	mov	w22, w2
  40bf18:	bl	404e00 <strlen@plt>
  40bf1c:	mov	x3, x19
  40bf20:	add	w4, w0, #0x1
  40bf24:	mov	w2, w22
  40bf28:	mov	w1, w21
  40bf2c:	mov	x0, x20
  40bf30:	ldp	x19, x20, [sp, #16]
  40bf34:	ldp	x21, x22, [sp, #32]
  40bf38:	ldp	x29, x30, [sp], #48
  40bf3c:	b	40bdcc <addattr_l@@Base>

000000000040bf40 <addraw_l@@Base>:
  40bf40:	stp	x29, x30, [sp, #-48]!
  40bf44:	mov	w4, w1
  40bf48:	mov	x1, x2
  40bf4c:	mov	x29, sp
  40bf50:	stp	x19, x20, [sp, #16]
  40bf54:	mov	x19, x0
  40bf58:	ldr	w0, [x0]
  40bf5c:	add	w20, w3, #0x3
  40bf60:	stp	x21, x22, [sp, #32]
  40bf64:	add	w0, w0, #0x3
  40bf68:	and	w20, w20, #0xfffffffc
  40bf6c:	and	w0, w0, #0xfffffffc
  40bf70:	add	w2, w0, w20
  40bf74:	cmp	w2, w4
  40bf78:	b.ls	40bfac <addraw_l@@Base+0x6c>  // b.plast
  40bf7c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40bf80:	mov	w2, w4
  40bf84:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40bf88:	add	x1, x1, #0x37d
  40bf8c:	ldr	x0, [x0, #3992]
  40bf90:	ldr	x0, [x0]
  40bf94:	bl	405330 <fprintf@plt>
  40bf98:	mov	w0, #0xffffffff            	// #-1
  40bf9c:	ldp	x19, x20, [sp, #16]
  40bfa0:	ldp	x21, x22, [sp, #32]
  40bfa4:	ldp	x29, x30, [sp], #48
  40bfa8:	ret
  40bfac:	sxtw	x22, w3
  40bfb0:	mov	w21, w3
  40bfb4:	mov	x2, x22
  40bfb8:	add	x0, x19, w0, uxtw
  40bfbc:	bl	404dd0 <memcpy@plt>
  40bfc0:	ldr	w0, [x19]
  40bfc4:	sub	w2, w20, w21
  40bfc8:	mov	w1, #0x0                   	// #0
  40bfcc:	add	w0, w0, #0x3
  40bfd0:	and	x0, x0, #0xfffffffc
  40bfd4:	add	x0, x0, x22
  40bfd8:	add	x0, x19, x0
  40bfdc:	bl	404fe0 <memset@plt>
  40bfe0:	ldr	w0, [x19]
  40bfe4:	add	w0, w0, #0x3
  40bfe8:	and	w0, w0, #0xfffffffc
  40bfec:	add	w0, w0, w20
  40bff0:	str	w0, [x19]
  40bff4:	mov	w0, #0x0                   	// #0
  40bff8:	b	40bf9c <addraw_l@@Base+0x5c>

000000000040bffc <addattr_nest@@Base>:
  40bffc:	stp	x29, x30, [sp, #-32]!
  40c000:	mov	w4, #0x0                   	// #0
  40c004:	mov	x3, #0x0                   	// #0
  40c008:	mov	x29, sp
  40c00c:	str	x19, [sp, #16]
  40c010:	ldr	w19, [x0]
  40c014:	add	w19, w19, #0x3
  40c018:	and	x19, x19, #0xfffffffc
  40c01c:	add	x19, x0, x19
  40c020:	bl	40bdcc <addattr_l@@Base>
  40c024:	mov	x0, x19
  40c028:	ldr	x19, [sp, #16]
  40c02c:	ldp	x29, x30, [sp], #32
  40c030:	ret

000000000040c034 <addattr_nest_end@@Base>:
  40c034:	mov	x2, x0
  40c038:	ldr	w0, [x0]
  40c03c:	add	w3, w0, #0x3
  40c040:	and	x3, x3, #0xfffffffc
  40c044:	add	x2, x2, x3
  40c048:	sub	x2, x2, x1
  40c04c:	strh	w2, [x1]
  40c050:	ret

000000000040c054 <addattr_nest_compat@@Base>:
  40c054:	stp	x29, x30, [sp, #-48]!
  40c058:	mov	x29, sp
  40c05c:	stp	x19, x20, [sp, #16]
  40c060:	mov	x20, x0
  40c064:	ldr	w19, [x0]
  40c068:	stp	x21, x22, [sp, #32]
  40c06c:	mov	w21, w1
  40c070:	add	w19, w19, #0x3
  40c074:	and	x19, x19, #0xfffffffc
  40c078:	mov	w22, w2
  40c07c:	add	x19, x0, x19
  40c080:	bl	40bdcc <addattr_l@@Base>
  40c084:	mov	w2, w22
  40c088:	mov	w1, w21
  40c08c:	mov	x0, x20
  40c090:	bl	40bffc <addattr_nest@@Base>
  40c094:	mov	x0, x19
  40c098:	ldp	x19, x20, [sp, #16]
  40c09c:	ldp	x21, x22, [sp, #32]
  40c0a0:	ldp	x29, x30, [sp], #48
  40c0a4:	ret

000000000040c0a8 <addattr_nest_compat_end@@Base>:
  40c0a8:	stp	x29, x30, [sp, #-32]!
  40c0ac:	mov	x29, sp
  40c0b0:	ldr	w2, [x0]
  40c0b4:	ldrh	w3, [x1]
  40c0b8:	add	w2, w2, #0x3
  40c0bc:	str	x19, [sp, #16]
  40c0c0:	and	x2, x2, #0xfffffffc
  40c0c4:	add	w3, w3, #0x3
  40c0c8:	add	x2, x0, x2
  40c0cc:	and	x3, x3, #0x1fffc
  40c0d0:	sub	x2, x2, x1
  40c0d4:	mov	x19, x0
  40c0d8:	strh	w2, [x1]
  40c0dc:	add	x1, x1, x3
  40c0e0:	bl	40c034 <addattr_nest_end@@Base>
  40c0e4:	ldr	w0, [x19]
  40c0e8:	ldr	x19, [sp, #16]
  40c0ec:	ldp	x29, x30, [sp], #32
  40c0f0:	ret

000000000040c0f4 <rta_addattr32@@Base>:
  40c0f4:	ldrh	w4, [x0]
  40c0f8:	add	w4, w4, #0x3
  40c0fc:	and	w4, w4, #0xfffffffc
  40c100:	add	w5, w4, #0x8
  40c104:	cmp	w5, w1
  40c108:	b.ls	40c13c <rta_addattr32@@Base+0x48>  // b.plast
  40c10c:	stp	x29, x30, [sp, #-16]!
  40c110:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40c114:	mov	w2, w1
  40c118:	mov	x29, sp
  40c11c:	ldr	x0, [x0, #3992]
  40c120:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40c124:	add	x1, x1, #0x3ab
  40c128:	ldr	x0, [x0]
  40c12c:	bl	405330 <fprintf@plt>
  40c130:	mov	w0, #0xffffffff            	// #-1
  40c134:	ldp	x29, x30, [sp], #16
  40c138:	ret
  40c13c:	add	x1, x0, w4, uxtw
  40c140:	strh	w2, [x1, #2]
  40c144:	mov	w2, #0x8                   	// #8
  40c148:	strh	w2, [x0, w4, uxtw]
  40c14c:	str	w3, [x1, #4]
  40c150:	ldrh	w1, [x0]
  40c154:	add	w1, w1, #0x3
  40c158:	and	w1, w1, #0xfffffffc
  40c15c:	add	w1, w1, #0x8
  40c160:	strh	w1, [x0]
  40c164:	mov	w0, #0x0                   	// #0
  40c168:	ret

000000000040c16c <rta_addattr_l@@Base>:
  40c16c:	stp	x29, x30, [sp, #-32]!
  40c170:	mov	x29, sp
  40c174:	ldrh	w5, [x0]
  40c178:	stp	x19, x20, [sp, #16]
  40c17c:	mov	x20, x0
  40c180:	add	w5, w5, #0x3
  40c184:	add	w0, w4, #0x7
  40c188:	and	w5, w5, #0xfffffffc
  40c18c:	and	w0, w0, #0xfffffffc
  40c190:	add	w0, w0, w5
  40c194:	cmp	w0, w1
  40c198:	b.ls	40c1c8 <rta_addattr_l@@Base+0x5c>  // b.plast
  40c19c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40c1a0:	mov	w2, w1
  40c1a4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40c1a8:	add	x1, x1, #0x3e0
  40c1ac:	ldr	x0, [x0, #3992]
  40c1b0:	ldr	x0, [x0]
  40c1b4:	bl	405330 <fprintf@plt>
  40c1b8:	mov	w0, #0xffffffff            	// #-1
  40c1bc:	ldp	x19, x20, [sp, #16]
  40c1c0:	ldp	x29, x30, [sp], #32
  40c1c4:	ret
  40c1c8:	add	x0, x20, w5, uxtw
  40c1cc:	add	w19, w4, #0x4
  40c1d0:	and	w19, w19, #0xffff
  40c1d4:	strh	w2, [x0, #2]
  40c1d8:	strh	w19, [x20, w5, uxtw]
  40c1dc:	cbz	w4, 40c1f0 <rta_addattr_l@@Base+0x84>
  40c1e0:	mov	x1, x3
  40c1e4:	sxtw	x2, w4
  40c1e8:	add	x0, x0, #0x4
  40c1ec:	bl	404dd0 <memcpy@plt>
  40c1f0:	ldrh	w0, [x20]
  40c1f4:	add	w19, w19, #0x3
  40c1f8:	and	w19, w19, #0xfffffffc
  40c1fc:	add	w0, w0, #0x3
  40c200:	and	w0, w0, #0xfffffffc
  40c204:	add	w19, w0, w19
  40c208:	mov	w0, #0x0                   	// #0
  40c20c:	strh	w19, [x20]
  40c210:	b	40c1bc <rta_addattr_l@@Base+0x50>

000000000040c214 <rta_addattr8@@Base>:
  40c214:	stp	x29, x30, [sp, #-32]!
  40c218:	mov	w4, #0x1                   	// #1
  40c21c:	mov	x29, sp
  40c220:	strb	w3, [sp, #31]
  40c224:	add	x3, sp, #0x1f
  40c228:	bl	40c16c <rta_addattr_l@@Base>
  40c22c:	ldp	x29, x30, [sp], #32
  40c230:	ret

000000000040c234 <rta_addattr16@@Base>:
  40c234:	stp	x29, x30, [sp, #-32]!
  40c238:	mov	w4, #0x2                   	// #2
  40c23c:	mov	x29, sp
  40c240:	strh	w3, [sp, #30]
  40c244:	add	x3, sp, #0x1e
  40c248:	bl	40c16c <rta_addattr_l@@Base>
  40c24c:	ldp	x29, x30, [sp], #32
  40c250:	ret

000000000040c254 <rta_addattr64@@Base>:
  40c254:	stp	x29, x30, [sp, #-32]!
  40c258:	mov	w4, #0x8                   	// #8
  40c25c:	mov	x29, sp
  40c260:	str	x3, [sp, #24]
  40c264:	add	x3, sp, #0x18
  40c268:	bl	40c16c <rta_addattr_l@@Base>
  40c26c:	ldp	x29, x30, [sp], #32
  40c270:	ret

000000000040c274 <rta_nest@@Base>:
  40c274:	stp	x29, x30, [sp, #-32]!
  40c278:	mov	w4, #0x0                   	// #0
  40c27c:	mov	x29, sp
  40c280:	ldrh	w3, [x0]
  40c284:	str	x19, [sp, #16]
  40c288:	add	w3, w3, #0x3
  40c28c:	and	x3, x3, #0x1fffc
  40c290:	add	x19, x0, x3
  40c294:	mov	x3, #0x0                   	// #0
  40c298:	bl	40c16c <rta_addattr_l@@Base>
  40c29c:	ldrh	w0, [x19, #2]
  40c2a0:	orr	w0, w0, #0xffff8000
  40c2a4:	strh	w0, [x19, #2]
  40c2a8:	mov	x0, x19
  40c2ac:	ldr	x19, [sp, #16]
  40c2b0:	ldp	x29, x30, [sp], #32
  40c2b4:	ret

000000000040c2b8 <rta_nest_end@@Base>:
  40c2b8:	ldrh	w2, [x0]
  40c2bc:	add	w2, w2, #0x3
  40c2c0:	and	x2, x2, #0x1fffc
  40c2c4:	add	x2, x0, x2
  40c2c8:	sub	x2, x2, x1
  40c2cc:	strh	w2, [x1]
  40c2d0:	ldrh	w0, [x0]
  40c2d4:	ret

000000000040c2d8 <parse_rtattr_flags@@Base>:
  40c2d8:	stp	x29, x30, [sp, #-64]!
  40c2dc:	mov	x29, sp
  40c2e0:	str	x23, [sp, #48]
  40c2e4:	and	w23, w4, #0xffff
  40c2e8:	mvn	w23, w23
  40c2ec:	stp	x19, x20, [sp, #16]
  40c2f0:	mov	x20, x2
  40c2f4:	add	w2, w1, #0x1
  40c2f8:	mov	w19, w3
  40c2fc:	stp	x21, x22, [sp, #32]
  40c300:	mov	x21, x0
  40c304:	mov	w22, w1
  40c308:	sbfiz	x2, x2, #3, #32
  40c30c:	mov	w1, #0x0                   	// #0
  40c310:	bl	404fe0 <memset@plt>
  40c314:	cmp	w19, #0x3
  40c318:	b.le	40c38c <parse_rtattr_flags@@Base+0xb4>
  40c31c:	ldrh	w2, [x20]
  40c320:	cmp	w2, #0x3
  40c324:	b.ls	40c330 <parse_rtattr_flags@@Base+0x58>  // b.plast
  40c328:	cmp	w2, w19
  40c32c:	b.le	40c354 <parse_rtattr_flags@@Base+0x7c>
  40c330:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40c334:	ldrh	w3, [x20]
  40c338:	mov	w2, w19
  40c33c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40c340:	ldr	x0, [x0, #3992]
  40c344:	add	x1, x1, #0x415
  40c348:	ldr	x0, [x0]
  40c34c:	bl	405330 <fprintf@plt>
  40c350:	b	40c390 <parse_rtattr_flags@@Base+0xb8>
  40c354:	ldrh	w1, [x20, #2]
  40c358:	and	w1, w23, w1
  40c35c:	and	w0, w1, #0xffff
  40c360:	cmp	w22, w1, uxth
  40c364:	b.lt	40c378 <parse_rtattr_flags@@Base+0xa0>  // b.tstop
  40c368:	ubfiz	x0, x0, #3, #16
  40c36c:	ldr	x1, [x21, x0]
  40c370:	cbnz	x1, 40c378 <parse_rtattr_flags@@Base+0xa0>
  40c374:	str	x20, [x21, x0]
  40c378:	add	w2, w2, #0x3
  40c37c:	and	w2, w2, #0xfffffffc
  40c380:	sub	w19, w19, w2
  40c384:	add	x20, x20, w2, uxtw
  40c388:	b	40c314 <parse_rtattr_flags@@Base+0x3c>
  40c38c:	cbnz	w19, 40c330 <parse_rtattr_flags@@Base+0x58>
  40c390:	mov	w0, #0x0                   	// #0
  40c394:	ldp	x19, x20, [sp, #16]
  40c398:	ldp	x21, x22, [sp, #32]
  40c39c:	ldr	x23, [sp, #48]
  40c3a0:	ldp	x29, x30, [sp], #64
  40c3a4:	ret

000000000040c3a8 <parse_rtattr@@Base>:
  40c3a8:	mov	w4, #0x0                   	// #0
  40c3ac:	b	40c2d8 <parse_rtattr_flags@@Base>

000000000040c3b0 <parse_rtattr_one@@Base>:
  40c3b0:	mov	w3, w0
  40c3b4:	mov	x0, x1
  40c3b8:	cmp	w2, #0x3
  40c3bc:	b.le	40c424 <parse_rtattr_one@@Base+0x74>
  40c3c0:	ldrh	w1, [x0]
  40c3c4:	cmp	w1, #0x3
  40c3c8:	b.ls	40c3d4 <parse_rtattr_one@@Base+0x24>  // b.plast
  40c3cc:	cmp	w1, w2
  40c3d0:	b.le	40c404 <parse_rtattr_one@@Base+0x54>
  40c3d4:	stp	x29, x30, [sp, #-16]!
  40c3d8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xad0>
  40c3dc:	add	x1, x1, #0x415
  40c3e0:	mov	x29, sp
  40c3e4:	ldrh	w3, [x0]
  40c3e8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40c3ec:	ldr	x0, [x0, #3992]
  40c3f0:	ldr	x0, [x0]
  40c3f4:	bl	405330 <fprintf@plt>
  40c3f8:	mov	x0, #0x0                   	// #0
  40c3fc:	ldp	x29, x30, [sp], #16
  40c400:	ret
  40c404:	ldrh	w4, [x0, #2]
  40c408:	cmp	w4, w3
  40c40c:	b.eq	40c430 <parse_rtattr_one@@Base+0x80>  // b.none
  40c410:	add	w1, w1, #0x3
  40c414:	and	w1, w1, #0xfffffffc
  40c418:	sub	w2, w2, w1
  40c41c:	add	x0, x0, w1, uxtw
  40c420:	b	40c3b8 <parse_rtattr_one@@Base+0x8>
  40c424:	cbnz	w2, 40c3d4 <parse_rtattr_one@@Base+0x24>
  40c428:	mov	x0, #0x0                   	// #0
  40c42c:	ret
  40c430:	ret

000000000040c434 <__parse_rtattr_nested_compat@@Base>:
  40c434:	ldrh	w5, [x2]
  40c438:	sub	x5, x5, #0x4
  40c43c:	cmp	x5, w3, sxtw
  40c440:	b.cc	40c490 <__parse_rtattr_nested_compat@@Base+0x5c>  // b.lo, b.ul, b.last
  40c444:	add	w3, w3, #0x3
  40c448:	and	x3, x3, #0xfffffffc
  40c44c:	add	x3, x3, #0x4
  40c450:	cmp	x5, x3
  40c454:	b.cc	40c46c <__parse_rtattr_nested_compat@@Base+0x38>  // b.lo, b.ul, b.last
  40c458:	add	x4, x2, x3
  40c45c:	ldrh	w3, [x2, x3]
  40c460:	add	x2, x4, #0x4
  40c464:	sub	w3, w3, #0x4
  40c468:	b	40c3a8 <parse_rtattr@@Base>
  40c46c:	stp	x29, x30, [sp, #-16]!
  40c470:	add	w2, w1, #0x1
  40c474:	mov	w1, #0x0                   	// #0
  40c478:	mov	x29, sp
  40c47c:	sbfiz	x2, x2, #3, #32
  40c480:	bl	404fe0 <memset@plt>
  40c484:	mov	w0, #0x0                   	// #0
  40c488:	ldp	x29, x30, [sp], #16
  40c48c:	ret
  40c490:	mov	w0, #0xffffffff            	// #-1
  40c494:	ret

000000000040c498 <__libc_csu_init@@Base>:
  40c498:	stp	x29, x30, [sp, #-64]!
  40c49c:	mov	x29, sp
  40c4a0:	stp	x19, x20, [sp, #16]
  40c4a4:	adrp	x20, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40c4a8:	add	x20, x20, #0xce8
  40c4ac:	stp	x21, x22, [sp, #32]
  40c4b0:	adrp	x21, 41f000 <_IO_stdin_used@@Base+0x12ad0>
  40c4b4:	add	x21, x21, #0xce0
  40c4b8:	sub	x20, x20, x21
  40c4bc:	mov	w22, w0
  40c4c0:	stp	x23, x24, [sp, #48]
  40c4c4:	mov	x23, x1
  40c4c8:	mov	x24, x2
  40c4cc:	bl	404d98 <memcpy@plt-0x38>
  40c4d0:	cmp	xzr, x20, asr #3
  40c4d4:	b.eq	40c500 <__libc_csu_init@@Base+0x68>  // b.none
  40c4d8:	asr	x20, x20, #3
  40c4dc:	mov	x19, #0x0                   	// #0
  40c4e0:	ldr	x3, [x21, x19, lsl #3]
  40c4e4:	mov	x2, x24
  40c4e8:	add	x19, x19, #0x1
  40c4ec:	mov	x1, x23
  40c4f0:	mov	w0, w22
  40c4f4:	blr	x3
  40c4f8:	cmp	x20, x19
  40c4fc:	b.ne	40c4e0 <__libc_csu_init@@Base+0x48>  // b.any
  40c500:	ldp	x19, x20, [sp, #16]
  40c504:	ldp	x21, x22, [sp, #32]
  40c508:	ldp	x23, x24, [sp, #48]
  40c50c:	ldp	x29, x30, [sp], #64
  40c510:	ret
  40c514:	nop

000000000040c518 <__libc_csu_fini@@Base>:
  40c518:	ret

Disassembly of section .fini:

000000000040c51c <.fini>:
  40c51c:	stp	x29, x30, [sp, #-16]!
  40c520:	mov	x29, sp
  40c524:	ldp	x29, x30, [sp], #16
  40c528:	ret
