
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//dirname_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000710 <_init>:
 710:	stp	x29, x30, [sp, #-16]!
 714:	mov	x29, sp
 718:	bl	7c0 <call_weak_fn>
 71c:	ldp	x29, x30, [sp], #16
 720:	ret

Disassembly of section .plt:

0000000000000730 <.plt>:
 730:	stp	x16, x30, [sp, #-16]!
 734:	adrp	x16, 10000 <__FRAME_END__+0xf3e4>
 738:	ldr	x17, [x16, #4088]
 73c:	add	x16, x16, #0xff8
 740:	br	x17
 744:	nop
 748:	nop
 74c:	nop

0000000000000750 <strlen@plt>:
 750:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 754:	ldr	x17, [x16]
 758:	add	x16, x16, #0x0
 75c:	br	x17

0000000000000760 <fputs@plt>:
 760:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 764:	ldr	x17, [x16, #8]
 768:	add	x16, x16, #0x8
 76c:	br	x17

0000000000000770 <__cxa_finalize@plt>:
 770:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 774:	ldr	x17, [x16, #16]
 778:	add	x16, x16, #0x10
 77c:	br	x17

0000000000000780 <builtin_usage@plt>:
 780:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 784:	ldr	x17, [x16, #24]
 788:	add	x16, x16, #0x18
 78c:	br	x17

0000000000000790 <__gmon_start__@plt>:
 790:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 794:	ldr	x17, [x16, #32]
 798:	add	x16, x16, #0x20
 79c:	br	x17

00000000000007a0 <no_options@plt>:
 7a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #40]
 7a8:	add	x16, x16, #0x28
 7ac:	br	x17

00000000000007b0 <printf@plt>:
 7b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #48]
 7b8:	add	x16, x16, #0x30
 7bc:	br	x17

Disassembly of section .text:

00000000000007c0 <call_weak_fn>:
 7c0:	adrp	x0, 10000 <__FRAME_END__+0xf3e4>
 7c4:	ldr	x0, [x0, #4048]
 7c8:	cbz	x0, 7d0 <call_weak_fn+0x10>
 7cc:	b	790 <__gmon_start__@plt>
 7d0:	ret
 7d4:	nop

00000000000007d8 <deregister_tm_clones>:
 7d8:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 7dc:	add	x0, x0, #0x98
 7e0:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 7e4:	add	x1, x1, #0x98
 7e8:	cmp	x1, x0
 7ec:	b.eq	804 <deregister_tm_clones+0x2c>  // b.none
 7f0:	adrp	x1, 10000 <__FRAME_END__+0xf3e4>
 7f4:	ldr	x1, [x1, #4024]
 7f8:	cbz	x1, 804 <deregister_tm_clones+0x2c>
 7fc:	mov	x16, x1
 800:	br	x16
 804:	ret

0000000000000808 <register_tm_clones>:
 808:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 80c:	add	x0, x0, #0x98
 810:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 814:	add	x1, x1, #0x98
 818:	sub	x1, x1, x0
 81c:	lsr	x2, x1, #63
 820:	add	x1, x2, x1, asr #3
 824:	cmp	xzr, x1, asr #1
 828:	asr	x1, x1, #1
 82c:	b.eq	844 <register_tm_clones+0x3c>  // b.none
 830:	adrp	x2, 10000 <__FRAME_END__+0xf3e4>
 834:	ldr	x2, [x2, #4064]
 838:	cbz	x2, 844 <register_tm_clones+0x3c>
 83c:	mov	x16, x2
 840:	br	x16
 844:	ret

0000000000000848 <__do_global_dtors_aux>:
 848:	stp	x29, x30, [sp, #-32]!
 84c:	mov	x29, sp
 850:	str	x19, [sp, #16]
 854:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 858:	ldrb	w0, [x19, #152]
 85c:	cbnz	w0, 884 <__do_global_dtors_aux+0x3c>
 860:	adrp	x0, 10000 <__FRAME_END__+0xf3e4>
 864:	ldr	x0, [x0, #4032]
 868:	cbz	x0, 878 <__do_global_dtors_aux+0x30>
 86c:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 870:	ldr	x0, [x0, #56]
 874:	bl	770 <__cxa_finalize@plt>
 878:	bl	7d8 <deregister_tm_clones>
 87c:	mov	w0, #0x1                   	// #1
 880:	strb	w0, [x19, #152]
 884:	ldr	x19, [sp, #16]
 888:	ldp	x29, x30, [sp], #32
 88c:	ret

0000000000000890 <frame_dummy>:
 890:	b	808 <register_tm_clones>

0000000000000894 <dirname_builtin>:
 894:	sub	sp, sp, #0x40
 898:	stp	x29, x30, [sp, #48]
 89c:	add	x29, sp, #0x30
 8a0:	stur	x0, [x29, #-16]
 8a4:	ldur	x0, [x29, #-16]
 8a8:	bl	7a0 <no_options@plt>
 8ac:	cbz	w0, 8bc <dirname_builtin+0x28>
 8b0:	mov	w8, #0x102                 	// #258
 8b4:	stur	w8, [x29, #-4]
 8b8:	b	a8c <dirname_builtin+0x1f8>
 8bc:	adrp	x8, 10000 <__FRAME_END__+0xf3e4>
 8c0:	ldr	x8, [x8, #4056]
 8c4:	ldr	x8, [x8]
 8c8:	stur	x8, [x29, #-16]
 8cc:	ldur	x8, [x29, #-16]
 8d0:	cbz	x8, 8e0 <dirname_builtin+0x4c>
 8d4:	ldur	x8, [x29, #-16]
 8d8:	ldr	x8, [x8]
 8dc:	cbz	x8, 8f0 <dirname_builtin+0x5c>
 8e0:	bl	780 <builtin_usage@plt>
 8e4:	mov	w8, #0x102                 	// #258
 8e8:	stur	w8, [x29, #-4]
 8ec:	b	a8c <dirname_builtin+0x1f8>
 8f0:	ldur	x8, [x29, #-16]
 8f4:	ldr	x8, [x8, #8]
 8f8:	ldr	x8, [x8]
 8fc:	str	x8, [sp, #16]
 900:	ldr	x0, [sp, #16]
 904:	bl	750 <strlen@plt>
 908:	stur	w0, [x29, #-20]
 90c:	ldur	w8, [x29, #-20]
 910:	cmp	w8, #0x0
 914:	cset	w8, le
 918:	mov	w9, #0x0                   	// #0
 91c:	str	w9, [sp, #12]
 920:	tbnz	w8, #0, 940 <dirname_builtin+0xac>
 924:	ldr	x8, [sp, #16]
 928:	ldur	w9, [x29, #-20]
 92c:	subs	w9, w9, #0x1
 930:	ldrb	w9, [x8, w9, sxtw]
 934:	cmp	w9, #0x2f
 938:	cset	w9, eq  // eq = none
 93c:	str	w9, [sp, #12]
 940:	ldr	w8, [sp, #12]
 944:	tbnz	w8, #0, 94c <dirname_builtin+0xb8>
 948:	b	95c <dirname_builtin+0xc8>
 94c:	ldur	w8, [x29, #-20]
 950:	subs	w8, w8, #0x1
 954:	stur	w8, [x29, #-20]
 958:	b	90c <dirname_builtin+0x78>
 95c:	ldur	w8, [x29, #-20]
 960:	cbnz	w8, 984 <dirname_builtin+0xf0>
 964:	adrp	x8, 10000 <__FRAME_END__+0xf3e4>
 968:	ldr	x8, [x8, #4040]
 96c:	ldr	x1, [x8]
 970:	adrp	x0, 0 <_init-0x710>
 974:	add	x0, x0, #0xaac
 978:	bl	760 <fputs@plt>
 97c:	stur	wzr, [x29, #-4]
 980:	b	a8c <dirname_builtin+0x1f8>
 984:	ldr	x8, [sp, #16]
 988:	ldursw	x9, [x29, #-20]
 98c:	add	x8, x8, x9
 990:	mov	w10, #0x0                   	// #0
 994:	strb	w10, [x8]
 998:	ldur	w8, [x29, #-20]
 99c:	subs	w8, w8, #0x1
 9a0:	stur	w8, [x29, #-20]
 9a4:	cmp	w8, #0x0
 9a8:	cset	w8, lt  // lt = tstop
 9ac:	tbnz	w8, #0, 9cc <dirname_builtin+0x138>
 9b0:	ldr	x8, [sp, #16]
 9b4:	ldursw	x9, [x29, #-20]
 9b8:	ldrb	w10, [x8, x9]
 9bc:	cmp	w10, #0x2f
 9c0:	b.ne	9c8 <dirname_builtin+0x134>  // b.any
 9c4:	b	9cc <dirname_builtin+0x138>
 9c8:	b	998 <dirname_builtin+0x104>
 9cc:	ldur	w8, [x29, #-20]
 9d0:	cmp	w8, #0x0
 9d4:	cset	w8, ge  // ge = tcont
 9d8:	tbnz	w8, #0, 9fc <dirname_builtin+0x168>
 9dc:	adrp	x8, 10000 <__FRAME_END__+0xf3e4>
 9e0:	ldr	x8, [x8, #4040]
 9e4:	ldr	x1, [x8]
 9e8:	adrp	x0, 0 <_init-0x710>
 9ec:	add	x0, x0, #0xaaf
 9f0:	bl	760 <fputs@plt>
 9f4:	stur	wzr, [x29, #-4]
 9f8:	b	a8c <dirname_builtin+0x1f8>
 9fc:	ldur	w8, [x29, #-20]
 a00:	subs	w8, w8, #0x1
 a04:	stur	w8, [x29, #-20]
 a08:	cmp	w8, #0x0
 a0c:	cset	w8, lt  // lt = tstop
 a10:	tbnz	w8, #0, a30 <dirname_builtin+0x19c>
 a14:	ldr	x8, [sp, #16]
 a18:	ldursw	x9, [x29, #-20]
 a1c:	ldrb	w10, [x8, x9]
 a20:	cmp	w10, #0x2f
 a24:	b.eq	a2c <dirname_builtin+0x198>  // b.none
 a28:	b	a30 <dirname_builtin+0x19c>
 a2c:	b	9fc <dirname_builtin+0x168>
 a30:	ldr	x8, [sp, #16]
 a34:	ldur	w9, [x29, #-20]
 a38:	add	w9, w9, #0x1
 a3c:	stur	w9, [x29, #-20]
 a40:	mov	w0, w9
 a44:	sxtw	x10, w0
 a48:	add	x8, x8, x10
 a4c:	mov	w9, #0x0                   	// #0
 a50:	strb	w9, [x8]
 a54:	ldur	w9, [x29, #-20]
 a58:	cbnz	w9, a6c <dirname_builtin+0x1d8>
 a5c:	adrp	x8, 0 <_init-0x710>
 a60:	add	x8, x8, #0xab6
 a64:	str	x8, [sp]
 a68:	b	a74 <dirname_builtin+0x1e0>
 a6c:	ldr	x8, [sp, #16]
 a70:	str	x8, [sp]
 a74:	ldr	x8, [sp]
 a78:	adrp	x0, 0 <_init-0x710>
 a7c:	add	x0, x0, #0xab2
 a80:	mov	x1, x8
 a84:	bl	7b0 <printf@plt>
 a88:	stur	wzr, [x29, #-4]
 a8c:	ldur	w0, [x29, #-4]
 a90:	ldp	x29, x30, [sp, #48]
 a94:	add	sp, sp, #0x40
 a98:	ret

Disassembly of section .fini:

0000000000000a9c <_fini>:
 a9c:	stp	x29, x30, [sp, #-16]!
 aa0:	mov	x29, sp
 aa4:	ldp	x29, x30, [sp], #16
 aa8:	ret
