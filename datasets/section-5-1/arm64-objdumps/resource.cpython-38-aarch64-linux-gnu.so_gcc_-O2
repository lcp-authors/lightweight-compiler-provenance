
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//resource.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001170 <.init>:
    1170:	stp	x29, x30, [sp, #-16]!
    1174:	mov	x29, sp
    1178:	bl	1350 <_PyLong_AsInt@plt+0x10>
    117c:	ldp	x29, x30, [sp], #16
    1180:	ret

Disassembly of section .plt:

0000000000001190 <PyModule_AddIntConstant@plt-0x20>:
    1190:	stp	x16, x30, [sp, #-16]!
    1194:	adrp	x16, 12000 <PyInit_resource@@Base+0x103e0>
    1198:	ldr	x17, [x16, #4088]
    119c:	add	x16, x16, #0xff8
    11a0:	br	x17
    11a4:	nop
    11a8:	nop
    11ac:	nop

00000000000011b0 <PyModule_AddIntConstant@plt>:
    11b0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11b4:	ldr	x17, [x16]
    11b8:	add	x16, x16, #0x0
    11bc:	br	x17

00000000000011c0 <getrlimit64@plt>:
    11c0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11c4:	ldr	x17, [x16, #8]
    11c8:	add	x16, x16, #0x8
    11cc:	br	x17

00000000000011d0 <PyErr_SetFromErrno@plt>:
    11d0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11d4:	ldr	x17, [x16, #16]
    11d8:	add	x16, x16, #0x10
    11dc:	br	x17

00000000000011e0 <__cxa_finalize@plt>:
    11e0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11e4:	ldr	x17, [x16, #24]
    11e8:	add	x16, x16, #0x18
    11ec:	br	x17

00000000000011f0 <PyStructSequence_New@plt>:
    11f0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    11f4:	ldr	x17, [x16, #32]
    11f8:	add	x16, x16, #0x20
    11fc:	br	x17

0000000000001200 <_Py_Dealloc@plt>:
    1200:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1204:	ldr	x17, [x16, #40]
    1208:	add	x16, x16, #0x28
    120c:	br	x17

0000000000001210 <PyErr_SetString@plt>:
    1210:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1214:	ldr	x17, [x16, #48]
    1218:	add	x16, x16, #0x30
    121c:	br	x17

0000000000001220 <PyFloat_FromDouble@plt>:
    1220:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1224:	ldr	x17, [x16, #56]
    1228:	add	x16, x16, #0x38
    122c:	br	x17

0000000000001230 <PyLong_FromLong@plt>:
    1230:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1234:	ldr	x17, [x16, #64]
    1238:	add	x16, x16, #0x40
    123c:	br	x17

0000000000001240 <getpagesize@plt>:
    1240:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1244:	ldr	x17, [x16, #72]
    1248:	add	x16, x16, #0x48
    124c:	br	x17

0000000000001250 <prlimit64@plt>:
    1250:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1254:	ldr	x17, [x16, #80]
    1258:	add	x16, x16, #0x50
    125c:	br	x17

0000000000001260 <__gmon_start__@plt>:
    1260:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1264:	ldr	x17, [x16, #88]
    1268:	add	x16, x16, #0x58
    126c:	br	x17

0000000000001270 <PyStructSequence_InitType2@plt>:
    1270:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1274:	ldr	x17, [x16, #96]
    1278:	add	x16, x16, #0x60
    127c:	br	x17

0000000000001280 <_PyArg_CheckPositional@plt>:
    1280:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1284:	ldr	x17, [x16, #104]
    1288:	add	x16, x16, #0x68
    128c:	br	x17

0000000000001290 <Py_BuildValue@plt>:
    1290:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1294:	ldr	x17, [x16, #112]
    1298:	add	x16, x16, #0x70
    129c:	br	x17

00000000000012a0 <PyErr_Occurred@plt>:
    12a0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12a4:	ldr	x17, [x16, #120]
    12a8:	add	x16, x16, #0x78
    12ac:	br	x17

00000000000012b0 <PyModule_Create2@plt>:
    12b0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12b4:	ldr	x17, [x16, #128]
    12b8:	add	x16, x16, #0x80
    12bc:	br	x17

00000000000012c0 <PyLong_AsLong@plt>:
    12c0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12c4:	ldr	x17, [x16, #136]
    12c8:	add	x16, x16, #0x88
    12cc:	br	x17

00000000000012d0 <getrusage@plt>:
    12d0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12d4:	ldr	x17, [x16, #144]
    12d8:	add	x16, x16, #0x90
    12dc:	br	x17

00000000000012e0 <setrlimit64@plt>:
    12e0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12e4:	ldr	x17, [x16, #152]
    12e8:	add	x16, x16, #0x98
    12ec:	br	x17

00000000000012f0 <PyArg_ParseTuple@plt>:
    12f0:	adrp	x16, 13000 <PyModule_AddIntConstant>
    12f4:	ldr	x17, [x16, #160]
    12f8:	add	x16, x16, #0xa0
    12fc:	br	x17

0000000000001300 <PyModule_AddObject@plt>:
    1300:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1304:	ldr	x17, [x16, #168]
    1308:	add	x16, x16, #0xa8
    130c:	br	x17

0000000000001310 <PySequence_Tuple@plt>:
    1310:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1314:	ldr	x17, [x16, #176]
    1318:	add	x16, x16, #0xb0
    131c:	br	x17

0000000000001320 <PyType_IsSubtype@plt>:
    1320:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1324:	ldr	x17, [x16, #184]
    1328:	add	x16, x16, #0xb8
    132c:	br	x17

0000000000001330 <__errno_location@plt>:
    1330:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1334:	ldr	x17, [x16, #192]
    1338:	add	x16, x16, #0xc0
    133c:	br	x17

0000000000001340 <_PyLong_AsInt@plt>:
    1340:	adrp	x16, 13000 <PyModule_AddIntConstant>
    1344:	ldr	x17, [x16, #200]
    1348:	add	x16, x16, #0xc8
    134c:	br	x17

Disassembly of section .text:

0000000000001350 <PyInit_resource@@Base-0x8d0>:
    1350:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1354:	ldr	x0, [x0, #4048]
    1358:	cbz	x0, 1360 <_PyLong_AsInt@plt+0x20>
    135c:	b	1260 <__gmon_start__@plt>
    1360:	ret
    1364:	nop
    1368:	adrp	x0, 13000 <PyInit_resource@@Base+0x113e0>
    136c:	add	x0, x0, #0x330
    1370:	adrp	x1, 13000 <PyInit_resource@@Base+0x113e0>
    1374:	add	x1, x1, #0x330
    1378:	cmp	x1, x0
    137c:	b.eq	1394 <_PyLong_AsInt@plt+0x54>  // b.none
    1380:	adrp	x1, 12000 <PyInit_resource@@Base+0x103e0>
    1384:	ldr	x1, [x1, #4000]
    1388:	cbz	x1, 1394 <_PyLong_AsInt@plt+0x54>
    138c:	mov	x16, x1
    1390:	br	x16
    1394:	ret
    1398:	adrp	x0, 13000 <PyInit_resource@@Base+0x113e0>
    139c:	add	x0, x0, #0x330
    13a0:	adrp	x1, 13000 <PyInit_resource@@Base+0x113e0>
    13a4:	add	x1, x1, #0x330
    13a8:	sub	x1, x1, x0
    13ac:	lsr	x2, x1, #63
    13b0:	add	x1, x2, x1, asr #3
    13b4:	cmp	xzr, x1, asr #1
    13b8:	asr	x1, x1, #1
    13bc:	b.eq	13d4 <_PyLong_AsInt@plt+0x94>  // b.none
    13c0:	adrp	x2, 12000 <PyInit_resource@@Base+0x103e0>
    13c4:	ldr	x2, [x2, #4064]
    13c8:	cbz	x2, 13d4 <_PyLong_AsInt@plt+0x94>
    13cc:	mov	x16, x2
    13d0:	br	x16
    13d4:	ret
    13d8:	stp	x29, x30, [sp, #-32]!
    13dc:	mov	x29, sp
    13e0:	str	x19, [sp, #16]
    13e4:	adrp	x19, 13000 <PyInit_resource@@Base+0x113e0>
    13e8:	ldrb	w0, [x19, #816]
    13ec:	cbnz	w0, 1414 <_PyLong_AsInt@plt+0xd4>
    13f0:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    13f4:	ldr	x0, [x0, #4016]
    13f8:	cbz	x0, 1408 <_PyLong_AsInt@plt+0xc8>
    13fc:	adrp	x0, 13000 <PyInit_resource@@Base+0x113e0>
    1400:	ldr	x0, [x0, #208]
    1404:	bl	11e0 <__cxa_finalize@plt>
    1408:	bl	1368 <_PyLong_AsInt@plt+0x28>
    140c:	mov	w0, #0x1                   	// #1
    1410:	strb	w0, [x19, #816]
    1414:	ldr	x19, [sp, #16]
    1418:	ldp	x29, x30, [sp], #32
    141c:	ret
    1420:	b	1398 <_PyLong_AsInt@plt+0x58>
    1424:	nop
    1428:	stp	x29, x30, [sp, #-32]!
    142c:	mov	x29, sp
    1430:	str	x19, [sp, #16]
    1434:	bl	1240 <getpagesize@plt>
    1438:	mov	w19, w0
    143c:	cmn	w0, #0x1
    1440:	b.eq	1454 <_PyLong_AsInt@plt+0x114>  // b.none
    1444:	sxtw	x0, w19
    1448:	ldr	x19, [sp, #16]
    144c:	ldp	x29, x30, [sp], #32
    1450:	b	1230 <PyLong_FromLong@plt>
    1454:	bl	12a0 <PyErr_Occurred@plt>
    1458:	cbz	x0, 1444 <_PyLong_AsInt@plt+0x104>
    145c:	mov	x0, #0x0                   	// #0
    1460:	ldr	x19, [sp, #16]
    1464:	ldp	x29, x30, [sp], #32
    1468:	ret
    146c:	nop
    1470:	stp	x29, x30, [sp, #-48]!
    1474:	mov	x29, sp
    1478:	stp	x19, x20, [sp, #16]
    147c:	mov	x20, x1
    1480:	stp	x21, x22, [sp, #32]
    1484:	mov	x21, x2
    1488:	bl	1310 <PySequence_Tuple@plt>
    148c:	cbz	x0, 1518 <_PyLong_AsInt@plt+0x1d8>
    1490:	mov	x19, x0
    1494:	ldr	x0, [x0, #16]
    1498:	cmp	x0, #0x2
    149c:	b.ne	14f0 <_PyLong_AsInt@plt+0x1b0>  // b.any
    14a0:	ldp	x0, x22, [x19, #24]
    14a4:	bl	12c0 <PyLong_AsLong@plt>
    14a8:	str	x0, [x20]
    14ac:	cmn	x0, #0x1
    14b0:	b.eq	1550 <_PyLong_AsInt@plt+0x210>  // b.none
    14b4:	mov	x0, x22
    14b8:	bl	12c0 <PyLong_AsLong@plt>
    14bc:	str	x0, [x21]
    14c0:	cmn	x0, #0x1
    14c4:	b.eq	155c <_PyLong_AsInt@plt+0x21c>  // b.none
    14c8:	ldr	x0, [x19]
    14cc:	mov	w20, #0x0                   	// #0
    14d0:	sub	x0, x0, #0x1
    14d4:	str	x0, [x19]
    14d8:	cbz	x0, 1534 <_PyLong_AsInt@plt+0x1f4>
    14dc:	mov	w0, w20
    14e0:	ldp	x19, x20, [sp, #16]
    14e4:	ldp	x21, x22, [sp, #32]
    14e8:	ldp	x29, x30, [sp], #48
    14ec:	ret
    14f0:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    14f4:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    14f8:	add	x1, x1, #0xe90
    14fc:	ldr	x0, [x0, #4024]
    1500:	ldr	x0, [x0]
    1504:	bl	1210 <PyErr_SetString@plt>
    1508:	ldr	x0, [x19]
    150c:	sub	x0, x0, #0x1
    1510:	str	x0, [x19]
    1514:	cbz	x0, 1530 <_PyLong_AsInt@plt+0x1f0>
    1518:	mov	w20, #0xffffffff            	// #-1
    151c:	mov	w0, w20
    1520:	ldp	x19, x20, [sp, #16]
    1524:	ldp	x21, x22, [sp, #32]
    1528:	ldp	x29, x30, [sp], #48
    152c:	ret
    1530:	mov	w20, #0xffffffff            	// #-1
    1534:	mov	x0, x19
    1538:	bl	1200 <_Py_Dealloc@plt>
    153c:	mov	w0, w20
    1540:	ldp	x19, x20, [sp, #16]
    1544:	ldp	x21, x22, [sp, #32]
    1548:	ldp	x29, x30, [sp], #48
    154c:	ret
    1550:	bl	12a0 <PyErr_Occurred@plt>
    1554:	cbnz	x0, 1508 <_PyLong_AsInt@plt+0x1c8>
    1558:	b	14b4 <_PyLong_AsInt@plt+0x174>
    155c:	bl	12a0 <PyErr_Occurred@plt>
    1560:	cbnz	x0, 1508 <_PyLong_AsInt@plt+0x1c8>
    1564:	b	14c8 <_PyLong_AsInt@plt+0x188>
    1568:	stp	x29, x30, [sp, #-64]!
    156c:	cmp	x2, #0x2
    1570:	mov	x29, sp
    1574:	stp	x19, x20, [sp, #16]
    1578:	mov	x19, x1
    157c:	b.ne	161c <_PyLong_AsInt@plt+0x2dc>  // b.any
    1580:	ldr	x0, [x19]
    1584:	adrp	x1, 12000 <PyInit_resource@@Base+0x103e0>
    1588:	ldr	x1, [x1, #4008]
    158c:	ldr	x0, [x0, #8]
    1590:	cmp	x0, x1
    1594:	b.eq	164c <_PyLong_AsInt@plt+0x30c>  // b.none
    1598:	bl	1320 <PyType_IsSubtype@plt>
    159c:	cbnz	w0, 164c <_PyLong_AsInt@plt+0x30c>
    15a0:	ldr	x0, [x19]
    15a4:	bl	1340 <_PyLong_AsInt@plt>
    15a8:	mov	w20, w0
    15ac:	cmn	w0, #0x1
    15b0:	b.eq	1678 <_PyLong_AsInt@plt+0x338>  // b.none
    15b4:	cmp	w0, #0xf
    15b8:	ldr	x0, [x19, #8]
    15bc:	b.hi	1680 <_PyLong_AsInt@plt+0x340>  // b.pmore
    15c0:	str	x21, [sp, #32]
    15c4:	add	x21, sp, #0x30
    15c8:	add	x2, sp, #0x38
    15cc:	mov	x1, x21
    15d0:	mov	x19, #0x0                   	// #0
    15d4:	bl	1470 <_PyLong_AsInt@plt+0x130>
    15d8:	tbnz	w0, #31, 16ac <_PyLong_AsInt@plt+0x36c>
    15dc:	mov	x1, x21
    15e0:	mov	w0, w20
    15e4:	bl	12e0 <setrlimit64@plt>
    15e8:	cmn	w0, #0x1
    15ec:	b.eq	16b4 <_PyLong_AsInt@plt+0x374>  // b.none
    15f0:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    15f4:	ldr	x21, [sp, #32]
    15f8:	ldr	x0, [x0, #4056]
    15fc:	mov	x19, x0
    1600:	ldr	x1, [x0]
    1604:	add	x1, x1, #0x1
    1608:	str	x1, [x0]
    160c:	mov	x0, x19
    1610:	ldp	x19, x20, [sp, #16]
    1614:	ldp	x29, x30, [sp], #64
    1618:	ret
    161c:	mov	x1, x2
    1620:	adrp	x0, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1624:	mov	x3, #0x2                   	// #2
    1628:	add	x0, x0, #0xeb0
    162c:	mov	x2, x3
    1630:	bl	1280 <_PyArg_CheckPositional@plt>
    1634:	cbnz	w0, 1580 <_PyLong_AsInt@plt+0x240>
    1638:	mov	x19, #0x0                   	// #0
    163c:	mov	x0, x19
    1640:	ldp	x19, x20, [sp, #16]
    1644:	ldp	x29, x30, [sp], #64
    1648:	ret
    164c:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1650:	mov	x19, #0x0                   	// #0
    1654:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1658:	add	x1, x1, #0xec0
    165c:	ldr	x0, [x0, #4032]
    1660:	ldr	x0, [x0]
    1664:	bl	1210 <PyErr_SetString@plt>
    1668:	mov	x0, x19
    166c:	ldp	x19, x20, [sp, #16]
    1670:	ldp	x29, x30, [sp], #64
    1674:	ret
    1678:	bl	12a0 <PyErr_Occurred@plt>
    167c:	cbnz	x0, 1638 <_PyLong_AsInt@plt+0x2f8>
    1680:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1684:	mov	x19, #0x0                   	// #0
    1688:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    168c:	add	x1, x1, #0xee8
    1690:	ldr	x0, [x0, #4024]
    1694:	ldr	x0, [x0]
    1698:	bl	1210 <PyErr_SetString@plt>
    169c:	mov	x0, x19
    16a0:	ldp	x19, x20, [sp, #16]
    16a4:	ldp	x29, x30, [sp], #64
    16a8:	ret
    16ac:	ldr	x21, [sp, #32]
    16b0:	b	160c <_PyLong_AsInt@plt+0x2cc>
    16b4:	bl	1330 <__errno_location@plt>
    16b8:	ldr	w0, [x0]
    16bc:	cmp	w0, #0x16
    16c0:	b.eq	1704 <_PyLong_AsInt@plt+0x3c4>  // b.none
    16c4:	cmp	w0, #0x1
    16c8:	b.eq	16e4 <_PyLong_AsInt@plt+0x3a4>  // b.none
    16cc:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    16d0:	ldr	x0, [x0, #4040]
    16d4:	ldr	x0, [x0]
    16d8:	bl	11d0 <PyErr_SetFromErrno@plt>
    16dc:	ldr	x21, [sp, #32]
    16e0:	b	160c <_PyLong_AsInt@plt+0x2cc>
    16e4:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    16e8:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    16ec:	add	x1, x1, #0xf30
    16f0:	ldr	x0, [x0, #4024]
    16f4:	ldr	x0, [x0]
    16f8:	bl	1210 <PyErr_SetString@plt>
    16fc:	ldr	x21, [sp, #32]
    1700:	b	160c <_PyLong_AsInt@plt+0x2cc>
    1704:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1708:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    170c:	add	x1, x1, #0xf08
    1710:	ldr	x0, [x0, #4024]
    1714:	ldr	x0, [x0]
    1718:	bl	1210 <PyErr_SetString@plt>
    171c:	ldr	x21, [sp, #32]
    1720:	b	160c <_PyLong_AsInt@plt+0x2cc>
    1724:	nop
    1728:	stp	x29, x30, [sp, #-96]!
    172c:	mov	x0, x1
    1730:	mov	x29, sp
    1734:	ldr	x1, [x1, #16]
    1738:	str	xzr, [sp, #56]
    173c:	cmp	x1, #0x2
    1740:	b.eq	1770 <_PyLong_AsInt@plt+0x430>  // b.none
    1744:	cmp	x1, #0x3
    1748:	b.eq	17c0 <_PyLong_AsInt@plt+0x480>  // b.none
    174c:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1750:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1754:	add	x1, x1, #0xf78
    1758:	ldr	x0, [x0, #4032]
    175c:	ldr	x0, [x0]
    1760:	bl	1210 <PyErr_SetString@plt>
    1764:	mov	x0, #0x0                   	// #0
    1768:	ldp	x29, x30, [sp], #96
    176c:	ret
    1770:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1774:	add	x3, sp, #0x34
    1778:	add	x1, x1, #0xf58
    177c:	add	x2, sp, #0x30
    1780:	bl	12f0 <PyArg_ParseTuple@plt>
    1784:	cbz	w0, 1860 <_PyLong_AsInt@plt+0x520>
    1788:	ldp	w0, w1, [sp, #48]
    178c:	cmp	w1, #0xf
    1790:	b.hi	1874 <_PyLong_AsInt@plt+0x534>  // b.pmore
    1794:	add	x3, sp, #0x40
    1798:	mov	x2, #0x0                   	// #0
    179c:	bl	1250 <prlimit64@plt>
    17a0:	cmn	w0, #0x1
    17a4:	b.eq	1840 <_PyLong_AsInt@plt+0x500>  // b.none
    17a8:	ldp	x1, x2, [sp, #64]
    17ac:	adrp	x0, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    17b0:	add	x0, x0, #0xfa8
    17b4:	bl	1290 <Py_BuildValue@plt>
    17b8:	ldp	x29, x30, [sp], #96
    17bc:	ret
    17c0:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    17c4:	add	x4, sp, #0x38
    17c8:	add	x1, x1, #0xf68
    17cc:	add	x3, sp, #0x34
    17d0:	add	x2, sp, #0x30
    17d4:	bl	12f0 <PyArg_ParseTuple@plt>
    17d8:	cbz	w0, 1860 <_PyLong_AsInt@plt+0x520>
    17dc:	stp	x19, x20, [sp, #16]
    17e0:	ldr	w20, [sp, #52]
    17e4:	str	x21, [sp, #32]
    17e8:	cmp	w20, #0xf
    17ec:	ldr	w21, [sp, #48]
    17f0:	ldr	x0, [sp, #56]
    17f4:	b.hi	186c <_PyLong_AsInt@plt+0x52c>  // b.pmore
    17f8:	add	x19, sp, #0x50
    17fc:	add	x2, sp, #0x58
    1800:	mov	x1, x19
    1804:	bl	1470 <_PyLong_AsInt@plt+0x130>
    1808:	mov	w1, w0
    180c:	mov	x0, #0x0                   	// #0
    1810:	tbnz	w1, #31, 1834 <_PyLong_AsInt@plt+0x4f4>
    1814:	mov	x2, x19
    1818:	mov	w1, w20
    181c:	mov	w0, w21
    1820:	add	x3, sp, #0x40
    1824:	bl	1250 <prlimit64@plt>
    1828:	ldp	x19, x20, [sp, #16]
    182c:	ldr	x21, [sp, #32]
    1830:	b	17a0 <_PyLong_AsInt@plt+0x460>
    1834:	ldp	x19, x20, [sp, #16]
    1838:	ldr	x21, [sp, #32]
    183c:	b	1768 <_PyLong_AsInt@plt+0x428>
    1840:	bl	1330 <__errno_location@plt>
    1844:	ldr	w0, [x0]
    1848:	cmp	w0, #0x16
    184c:	b.eq	1894 <_PyLong_AsInt@plt+0x554>  // b.none
    1850:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1854:	ldr	x0, [x0, #4040]
    1858:	ldr	x0, [x0]
    185c:	bl	11d0 <PyErr_SetFromErrno@plt>
    1860:	mov	x0, #0x0                   	// #0
    1864:	ldp	x29, x30, [sp], #96
    1868:	ret
    186c:	ldp	x19, x20, [sp, #16]
    1870:	ldr	x21, [sp, #32]
    1874:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1878:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    187c:	add	x1, x1, #0xee8
    1880:	ldr	x0, [x0, #4024]
    1884:	ldr	x0, [x0]
    1888:	bl	1210 <PyErr_SetString@plt>
    188c:	mov	x0, #0x0                   	// #0
    1890:	b	1768 <_PyLong_AsInt@plt+0x428>
    1894:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1898:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    189c:	add	x1, x1, #0xf08
    18a0:	ldr	x0, [x0, #4024]
    18a4:	ldr	x0, [x0]
    18a8:	bl	1210 <PyErr_SetString@plt>
    18ac:	mov	x0, #0x0                   	// #0
    18b0:	b	1768 <_PyLong_AsInt@plt+0x428>
    18b4:	nop
    18b8:	stp	x29, x30, [sp, #-48]!
    18bc:	adrp	x2, 12000 <PyInit_resource@@Base+0x103e0>
    18c0:	mov	x29, sp
    18c4:	str	x19, [sp, #16]
    18c8:	mov	x19, x1
    18cc:	ldr	x1, [x2, #4008]
    18d0:	ldr	x0, [x19, #8]
    18d4:	cmp	x0, x1
    18d8:	b.eq	1960 <_PyLong_AsInt@plt+0x620>  // b.none
    18dc:	bl	1320 <PyType_IsSubtype@plt>
    18e0:	cbnz	w0, 1960 <_PyLong_AsInt@plt+0x620>
    18e4:	mov	x0, x19
    18e8:	bl	1340 <_PyLong_AsInt@plt>
    18ec:	cmn	w0, #0x1
    18f0:	b.eq	1928 <_PyLong_AsInt@plt+0x5e8>  // b.none
    18f4:	cmp	w0, #0xf
    18f8:	b.hi	1938 <_PyLong_AsInt@plt+0x5f8>  // b.pmore
    18fc:	add	x1, sp, #0x20
    1900:	bl	11c0 <getrlimit64@plt>
    1904:	cmn	w0, #0x1
    1908:	b.eq	1988 <_PyLong_AsInt@plt+0x648>  // b.none
    190c:	ldp	x1, x2, [sp, #32]
    1910:	adrp	x0, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1914:	add	x0, x0, #0xfa8
    1918:	bl	1290 <Py_BuildValue@plt>
    191c:	ldr	x19, [sp, #16]
    1920:	ldp	x29, x30, [sp], #48
    1924:	ret
    1928:	bl	12a0 <PyErr_Occurred@plt>
    192c:	mov	x1, x0
    1930:	mov	x0, #0x0                   	// #0
    1934:	cbnz	x1, 191c <_PyLong_AsInt@plt+0x5dc>
    1938:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    193c:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1940:	add	x1, x1, #0xee8
    1944:	ldr	x0, [x0, #4024]
    1948:	ldr	x0, [x0]
    194c:	bl	1210 <PyErr_SetString@plt>
    1950:	mov	x0, #0x0                   	// #0
    1954:	ldr	x19, [sp, #16]
    1958:	ldp	x29, x30, [sp], #48
    195c:	ret
    1960:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1964:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1968:	add	x1, x1, #0xec0
    196c:	ldr	x0, [x0, #4032]
    1970:	ldr	x0, [x0]
    1974:	bl	1210 <PyErr_SetString@plt>
    1978:	mov	x0, #0x0                   	// #0
    197c:	ldr	x19, [sp, #16]
    1980:	ldp	x29, x30, [sp], #48
    1984:	ret
    1988:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    198c:	ldr	x0, [x0, #4040]
    1990:	ldr	x0, [x0]
    1994:	bl	11d0 <PyErr_SetFromErrno@plt>
    1998:	mov	x0, #0x0                   	// #0
    199c:	b	191c <_PyLong_AsInt@plt+0x5dc>
    19a0:	stp	x29, x30, [sp, #-192]!
    19a4:	adrp	x2, 12000 <PyInit_resource@@Base+0x103e0>
    19a8:	mov	x29, sp
    19ac:	stp	x19, x20, [sp, #16]
    19b0:	mov	x19, x1
    19b4:	ldr	x1, [x2, #4008]
    19b8:	ldr	x0, [x19, #8]
    19bc:	cmp	x0, x1
    19c0:	b.eq	1ba0 <_PyLong_AsInt@plt+0x860>  // b.none
    19c4:	bl	1320 <PyType_IsSubtype@plt>
    19c8:	cbnz	w0, 1ba0 <_PyLong_AsInt@plt+0x860>
    19cc:	mov	x0, x19
    19d0:	bl	1340 <_PyLong_AsInt@plt>
    19d4:	mov	w20, w0
    19d8:	cmn	w0, #0x1
    19dc:	b.eq	1b7c <_PyLong_AsInt@plt+0x83c>  // b.none
    19e0:	mov	w0, w20
    19e4:	add	x1, sp, #0x30
    19e8:	bl	12d0 <getrusage@plt>
    19ec:	cmn	w0, #0x1
    19f0:	b.ne	1a28 <_PyLong_AsInt@plt+0x6e8>  // b.any
    19f4:	bl	1330 <__errno_location@plt>
    19f8:	ldr	w0, [x0]
    19fc:	cmp	w0, #0x16
    1a00:	b.eq	1bcc <_PyLong_AsInt@plt+0x88c>  // b.none
    1a04:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1a08:	mov	x19, #0x0                   	// #0
    1a0c:	ldr	x0, [x0, #4040]
    1a10:	ldr	x0, [x0]
    1a14:	bl	11d0 <PyErr_SetFromErrno@plt>
    1a18:	mov	x0, x19
    1a1c:	ldp	x19, x20, [sp, #16]
    1a20:	ldp	x29, x30, [sp], #192
    1a24:	ret
    1a28:	adrp	x0, 13000 <PyInit_resource@@Base+0x113e0>
    1a2c:	add	x0, x0, #0x338
    1a30:	bl	11f0 <PyStructSequence_New@plt>
    1a34:	mov	x19, x0
    1a38:	cbz	x0, 1c00 <_PyLong_AsInt@plt+0x8c0>
    1a3c:	ldp	d1, d0, [sp, #48]
    1a40:	adrp	x0, 2000 <PyInit_resource@@Base+0x3e0>
    1a44:	str	d8, [sp, #32]
    1a48:	ldr	d8, [x0, #1056]
    1a4c:	scvtf	d0, d0
    1a50:	scvtf	d1, d1
    1a54:	fmul	d0, d0, d8
    1a58:	fadd	d0, d0, d1
    1a5c:	bl	1220 <PyFloat_FromDouble@plt>
    1a60:	ldp	d1, d0, [sp, #64]
    1a64:	str	x0, [x19, #24]
    1a68:	scvtf	d0, d0
    1a6c:	scvtf	d1, d1
    1a70:	fmul	d0, d0, d8
    1a74:	fadd	d0, d0, d1
    1a78:	bl	1220 <PyFloat_FromDouble@plt>
    1a7c:	mov	x1, x0
    1a80:	ldr	x0, [sp, #80]
    1a84:	str	x1, [x19, #32]
    1a88:	bl	1230 <PyLong_FromLong@plt>
    1a8c:	mov	x1, x0
    1a90:	ldr	x0, [sp, #88]
    1a94:	str	x1, [x19, #40]
    1a98:	bl	1230 <PyLong_FromLong@plt>
    1a9c:	mov	x1, x0
    1aa0:	ldr	x0, [sp, #96]
    1aa4:	str	x1, [x19, #48]
    1aa8:	bl	1230 <PyLong_FromLong@plt>
    1aac:	mov	x1, x0
    1ab0:	ldr	x0, [sp, #104]
    1ab4:	str	x1, [x19, #56]
    1ab8:	bl	1230 <PyLong_FromLong@plt>
    1abc:	mov	x1, x0
    1ac0:	ldr	x0, [sp, #112]
    1ac4:	str	x1, [x19, #64]
    1ac8:	bl	1230 <PyLong_FromLong@plt>
    1acc:	mov	x1, x0
    1ad0:	ldr	x0, [sp, #120]
    1ad4:	str	x1, [x19, #72]
    1ad8:	bl	1230 <PyLong_FromLong@plt>
    1adc:	mov	x1, x0
    1ae0:	ldr	x0, [sp, #128]
    1ae4:	str	x1, [x19, #80]
    1ae8:	bl	1230 <PyLong_FromLong@plt>
    1aec:	mov	x1, x0
    1af0:	ldr	x0, [sp, #136]
    1af4:	str	x1, [x19, #88]
    1af8:	bl	1230 <PyLong_FromLong@plt>
    1afc:	mov	x1, x0
    1b00:	ldr	x0, [sp, #144]
    1b04:	str	x1, [x19, #96]
    1b08:	bl	1230 <PyLong_FromLong@plt>
    1b0c:	mov	x1, x0
    1b10:	ldr	x0, [sp, #152]
    1b14:	str	x1, [x19, #104]
    1b18:	bl	1230 <PyLong_FromLong@plt>
    1b1c:	mov	x1, x0
    1b20:	ldr	x0, [sp, #160]
    1b24:	str	x1, [x19, #112]
    1b28:	bl	1230 <PyLong_FromLong@plt>
    1b2c:	mov	x1, x0
    1b30:	ldr	x0, [sp, #168]
    1b34:	str	x1, [x19, #120]
    1b38:	bl	1230 <PyLong_FromLong@plt>
    1b3c:	mov	x1, x0
    1b40:	ldr	x0, [sp, #176]
    1b44:	str	x1, [x19, #128]
    1b48:	bl	1230 <PyLong_FromLong@plt>
    1b4c:	mov	x1, x0
    1b50:	ldr	x0, [sp, #184]
    1b54:	str	x1, [x19, #136]
    1b58:	bl	1230 <PyLong_FromLong@plt>
    1b5c:	str	x0, [x19, #144]
    1b60:	bl	12a0 <PyErr_Occurred@plt>
    1b64:	cbnz	x0, 1bec <_PyLong_AsInt@plt+0x8ac>
    1b68:	mov	x0, x19
    1b6c:	ldr	d8, [sp, #32]
    1b70:	ldp	x19, x20, [sp, #16]
    1b74:	ldp	x29, x30, [sp], #192
    1b78:	ret
    1b7c:	mov	x19, #0x0                   	// #0
    1b80:	bl	12a0 <PyErr_Occurred@plt>
    1b84:	cbnz	x0, 1a18 <_PyLong_AsInt@plt+0x6d8>
    1b88:	mov	w0, w20
    1b8c:	add	x1, sp, #0x30
    1b90:	bl	12d0 <getrusage@plt>
    1b94:	cmn	w0, #0x1
    1b98:	b.eq	19f4 <_PyLong_AsInt@plt+0x6b4>  // b.none
    1b9c:	b	1a28 <_PyLong_AsInt@plt+0x6e8>
    1ba0:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1ba4:	mov	x19, #0x0                   	// #0
    1ba8:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1bac:	add	x1, x1, #0xec0
    1bb0:	ldr	x0, [x0, #4032]
    1bb4:	ldr	x0, [x0]
    1bb8:	bl	1210 <PyErr_SetString@plt>
    1bbc:	mov	x0, x19
    1bc0:	ldp	x19, x20, [sp, #16]
    1bc4:	ldp	x29, x30, [sp], #192
    1bc8:	ret
    1bcc:	adrp	x0, 12000 <PyInit_resource@@Base+0x103e0>
    1bd0:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1bd4:	mov	x19, #0x0                   	// #0
    1bd8:	add	x1, x1, #0xfb0
    1bdc:	ldr	x0, [x0, #4024]
    1be0:	ldr	x0, [x0]
    1be4:	bl	1210 <PyErr_SetString@plt>
    1be8:	b	1a18 <_PyLong_AsInt@plt+0x6d8>
    1bec:	ldr	x0, [x19]
    1bf0:	sub	x0, x0, #0x1
    1bf4:	str	x0, [x19]
    1bf8:	cbz	x0, 1c08 <_PyLong_AsInt@plt+0x8c8>
    1bfc:	ldr	d8, [sp, #32]
    1c00:	mov	x19, #0x0                   	// #0
    1c04:	b	1a18 <_PyLong_AsInt@plt+0x6d8>
    1c08:	mov	x0, x19
    1c0c:	bl	1200 <_Py_Dealloc@plt>
    1c10:	mov	x19, #0x0                   	// #0
    1c14:	ldr	d8, [sp, #32]
    1c18:	b	1a18 <_PyLong_AsInt@plt+0x6d8>
    1c1c:	nop

0000000000001c20 <PyInit_resource@@Base>:
    1c20:	stp	x29, x30, [sp, #-48]!
    1c24:	mov	w1, #0x3f5                 	// #1013
    1c28:	mov	x29, sp
    1c2c:	str	x21, [sp, #32]
    1c30:	adrp	x21, 13000 <PyInit_resource@@Base+0x113e0>
    1c34:	add	x21, x21, #0xd8
    1c38:	stp	x19, x20, [sp, #16]
    1c3c:	mov	x0, x21
    1c40:	bl	12b0 <PyModule_Create2@plt>
    1c44:	cbz	x0, 1e68 <PyInit_resource@@Base+0x248>
    1c48:	adrp	x2, 12000 <PyInit_resource@@Base+0x103e0>
    1c4c:	mov	x19, x0
    1c50:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c54:	add	x1, x1, #0xfc8
    1c58:	ldr	x2, [x2, #4040]
    1c5c:	adrp	x20, 13000 <PyInit_resource@@Base+0x113e0>
    1c60:	ldr	x2, [x2]
    1c64:	ldr	x3, [x2]
    1c68:	add	x3, x3, #0x1
    1c6c:	str	x3, [x2]
    1c70:	bl	1300 <PyModule_AddObject@plt>
    1c74:	add	x0, x20, #0x338
    1c78:	ldr	w1, [x0, #416]
    1c7c:	cbnz	w1, 1c8c <PyInit_resource@@Base+0x6c>
    1c80:	add	x1, x21, #0x68
    1c84:	bl	1270 <PyStructSequence_InitType2@plt>
    1c88:	tbnz	w0, #31, 1e68 <PyInit_resource@@Base+0x248>
    1c8c:	ldr	x3, [x20, #824]
    1c90:	add	x2, x20, #0x338
    1c94:	mov	x0, x19
    1c98:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1c9c:	add	x3, x3, #0x1
    1ca0:	add	x1, x1, #0xfd0
    1ca4:	str	x3, [x20, #824]
    1ca8:	bl	1300 <PyModule_AddObject@plt>
    1cac:	mov	x2, #0x0                   	// #0
    1cb0:	mov	x0, x19
    1cb4:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1cb8:	add	x1, x1, #0xfe0
    1cbc:	bl	11b0 <PyModule_AddIntConstant@plt>
    1cc0:	mov	x2, #0x1                   	// #1
    1cc4:	mov	x0, x19
    1cc8:	adrp	x1, 1000 <PyModule_AddIntConstant@plt-0x1b0>
    1ccc:	add	x1, x1, #0xff0
    1cd0:	bl	11b0 <PyModule_AddIntConstant@plt>
    1cd4:	mov	x2, #0x2                   	// #2
    1cd8:	mov	x0, x19
    1cdc:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1ce0:	add	x1, x1, #0x0
    1ce4:	bl	11b0 <PyModule_AddIntConstant@plt>
    1ce8:	mov	x2, #0x3                   	// #3
    1cec:	mov	x0, x19
    1cf0:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1cf4:	add	x1, x1, #0x10
    1cf8:	bl	11b0 <PyModule_AddIntConstant@plt>
    1cfc:	mov	x2, #0x4                   	// #4
    1d00:	mov	x0, x19
    1d04:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d08:	add	x1, x1, #0x20
    1d0c:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d10:	mov	x2, #0x7                   	// #7
    1d14:	mov	x0, x19
    1d18:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d1c:	add	x1, x1, #0x30
    1d20:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d24:	mov	x2, #0x7                   	// #7
    1d28:	mov	x0, x19
    1d2c:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d30:	add	x1, x1, #0x40
    1d34:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d38:	mov	x2, #0x9                   	// #9
    1d3c:	mov	x0, x19
    1d40:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d44:	add	x1, x1, #0x50
    1d48:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d4c:	mov	x2, #0x5                   	// #5
    1d50:	mov	x0, x19
    1d54:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d58:	add	x1, x1, #0x60
    1d5c:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d60:	mov	x2, #0x6                   	// #6
    1d64:	mov	x0, x19
    1d68:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d6c:	add	x1, x1, #0x70
    1d70:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d74:	mov	x2, #0x8                   	// #8
    1d78:	mov	x0, x19
    1d7c:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d80:	add	x1, x1, #0x80
    1d84:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d88:	mov	x2, #0xc                   	// #12
    1d8c:	mov	x0, x19
    1d90:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1d94:	add	x1, x1, #0x90
    1d98:	bl	11b0 <PyModule_AddIntConstant@plt>
    1d9c:	mov	x2, #0xd                   	// #13
    1da0:	mov	x0, x19
    1da4:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1da8:	add	x1, x1, #0xa0
    1dac:	bl	11b0 <PyModule_AddIntConstant@plt>
    1db0:	mov	x2, #0xe                   	// #14
    1db4:	mov	x0, x19
    1db8:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1dbc:	add	x1, x1, #0xb0
    1dc0:	bl	11b0 <PyModule_AddIntConstant@plt>
    1dc4:	mov	x2, #0xf                   	// #15
    1dc8:	mov	x0, x19
    1dcc:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1dd0:	add	x1, x1, #0xc0
    1dd4:	bl	11b0 <PyModule_AddIntConstant@plt>
    1dd8:	mov	x2, #0xb                   	// #11
    1ddc:	mov	x0, x19
    1de0:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1de4:	add	x1, x1, #0xd0
    1de8:	bl	11b0 <PyModule_AddIntConstant@plt>
    1dec:	mov	x2, #0x0                   	// #0
    1df0:	mov	x0, x19
    1df4:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1df8:	add	x1, x1, #0xe8
    1dfc:	bl	11b0 <PyModule_AddIntConstant@plt>
    1e00:	mov	x2, #0xffffffffffffffff    	// #-1
    1e04:	mov	x0, x19
    1e08:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1e0c:	add	x1, x1, #0xf8
    1e10:	bl	11b0 <PyModule_AddIntConstant@plt>
    1e14:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1e18:	add	x1, x1, #0x108
    1e1c:	mov	x2, #0x1                   	// #1
    1e20:	mov	x0, x19
    1e24:	bl	11b0 <PyModule_AddIntConstant@plt>
    1e28:	mov	x0, #0xffffffffffffffff    	// #-1
    1e2c:	bl	1230 <PyLong_FromLong@plt>
    1e30:	mov	x2, x0
    1e34:	cbz	x0, 1e48 <PyInit_resource@@Base+0x228>
    1e38:	adrp	x1, 2000 <PyInit_resource@@Base+0x3e0>
    1e3c:	mov	x0, x19
    1e40:	add	x1, x1, #0x118
    1e44:	bl	1300 <PyModule_AddObject@plt>
    1e48:	add	x20, x20, #0x338
    1e4c:	mov	w0, #0x1                   	// #1
    1e50:	ldr	x21, [sp, #32]
    1e54:	str	w0, [x20, #416]
    1e58:	mov	x0, x19
    1e5c:	ldp	x19, x20, [sp, #16]
    1e60:	ldp	x29, x30, [sp], #48
    1e64:	ret
    1e68:	mov	x19, #0x0                   	// #0
    1e6c:	mov	x0, x19
    1e70:	ldp	x19, x20, [sp, #16]
    1e74:	ldr	x21, [sp, #32]
    1e78:	ldp	x29, x30, [sp], #48
    1e7c:	ret

Disassembly of section .fini:

0000000000001e80 <.fini>:
    1e80:	stp	x29, x30, [sp, #-16]!
    1e84:	mov	x29, sp
    1e88:	ldp	x29, x30, [sp], #16
    1e8c:	ret
