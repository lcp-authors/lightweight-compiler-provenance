
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpc.so.3.1.0_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004958 <.init>:
    4958:	stp	x29, x30, [sp, #-16]!
    495c:	mov	x29, sp
    4960:	bl	55d0 <mpfr_get_emin_min@plt+0x10>
    4964:	ldp	x29, x30, [sp], #16
    4968:	ret

Disassembly of section .plt:

0000000000004970 <mpfr_set_underflow@plt-0x20>:
    4970:	stp	x16, x30, [sp, #-16]!
    4974:	adrp	x16, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    4978:	ldr	x17, [x16, #4088]
    497c:	add	x16, x16, #0xff8
    4980:	br	x17
    4984:	nop
    4988:	nop
    498c:	nop

0000000000004990 <mpfr_set_underflow@plt>:
    4990:	adrp	x16, 25000 <mpfr_set_underflow>
    4994:	ldr	x17, [x16]
    4998:	add	x16, x16, #0x0
    499c:	br	x17

00000000000049a0 <__gmpz_get_si@plt>:
    49a0:	adrp	x16, 25000 <mpfr_set_underflow>
    49a4:	ldr	x17, [x16, #8]
    49a8:	add	x16, x16, #0x8
    49ac:	br	x17

00000000000049b0 <mpfr_set_ld@plt>:
    49b0:	adrp	x16, 25000 <mpfr_set_underflow>
    49b4:	ldr	x17, [x16, #16]
    49b8:	add	x16, x16, #0x10
    49bc:	br	x17

00000000000049c0 <mpfr_mul_ui@plt>:
    49c0:	adrp	x16, 25000 <mpfr_set_underflow>
    49c4:	ldr	x17, [x16, #24]
    49c8:	add	x16, x16, #0x18
    49cc:	br	x17

00000000000049d0 <mpfr_mul_q@plt>:
    49d0:	adrp	x16, 25000 <mpfr_set_underflow>
    49d4:	ldr	x17, [x16, #32]
    49d8:	add	x16, x16, #0x20
    49dc:	br	x17

00000000000049e0 <mpfr_set_si_2exp@plt>:
    49e0:	adrp	x16, 25000 <mpfr_set_underflow>
    49e4:	ldr	x17, [x16, #40]
    49e8:	add	x16, x16, #0x28
    49ec:	br	x17

00000000000049f0 <__gmpz_scan1@plt>:
    49f0:	adrp	x16, 25000 <mpfr_set_underflow>
    49f4:	ldr	x17, [x16, #48]
    49f8:	add	x16, x16, #0x30
    49fc:	br	x17

0000000000004a00 <strlen@plt>:
    4a00:	adrp	x16, 25000 <mpfr_set_underflow>
    4a04:	ldr	x17, [x16, #56]
    4a08:	add	x16, x16, #0x38
    4a0c:	br	x17

0000000000004a10 <mpc_clear@plt>:
    4a10:	adrp	x16, 25000 <mpfr_set_underflow>
    4a14:	ldr	x17, [x16, #64]
    4a18:	add	x16, x16, #0x40
    4a1c:	br	x17

0000000000004a20 <mpfr_cosh@plt>:
    4a20:	adrp	x16, 25000 <mpfr_set_underflow>
    4a24:	ldr	x17, [x16, #72]
    4a28:	add	x16, x16, #0x48
    4a2c:	br	x17

0000000000004a30 <mpfr_tanh@plt>:
    4a30:	adrp	x16, 25000 <mpfr_set_underflow>
    4a34:	ldr	x17, [x16, #80]
    4a38:	add	x16, x16, #0x50
    4a3c:	br	x17

0000000000004a40 <mpfr_set_nan@plt>:
    4a40:	adrp	x16, 25000 <mpfr_set_underflow>
    4a44:	ldr	x17, [x16, #88]
    4a48:	add	x16, x16, #0x58
    4a4c:	br	x17

0000000000004a50 <mpfr_clear_overflow@plt>:
    4a50:	adrp	x16, 25000 <mpfr_set_underflow>
    4a54:	ldr	x17, [x16, #96]
    4a58:	add	x16, x16, #0x60
    4a5c:	br	x17

0000000000004a60 <mpfr_sub@plt>:
    4a60:	adrp	x16, 25000 <mpfr_set_underflow>
    4a64:	ldr	x17, [x16, #104]
    4a68:	add	x16, x16, #0x68
    4a6c:	br	x17

0000000000004a70 <mpfr_mul_2si@plt>:
    4a70:	adrp	x16, 25000 <mpfr_set_underflow>
    4a74:	ldr	x17, [x16, #112]
    4a78:	add	x16, x16, #0x70
    4a7c:	br	x17

0000000000004a80 <mpfr_const_pi@plt>:
    4a80:	adrp	x16, 25000 <mpfr_set_underflow>
    4a84:	ldr	x17, [x16, #120]
    4a88:	add	x16, x16, #0x78
    4a8c:	br	x17

0000000000004a90 <mpfr_fmms@plt>:
    4a90:	adrp	x16, 25000 <mpfr_set_underflow>
    4a94:	ldr	x17, [x16, #128]
    4a98:	add	x16, x16, #0x80
    4a9c:	br	x17

0000000000004aa0 <mpfr_init@plt>:
    4aa0:	adrp	x16, 25000 <mpfr_set_underflow>
    4aa4:	ldr	x17, [x16, #136]
    4aa8:	add	x16, x16, #0x88
    4aac:	br	x17

0000000000004ab0 <mpfr_tan@plt>:
    4ab0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ab4:	ldr	x17, [x16, #144]
    4ab8:	add	x16, x16, #0x90
    4abc:	br	x17

0000000000004ac0 <mpfr_strtofr@plt>:
    4ac0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ac4:	ldr	x17, [x16, #152]
    4ac8:	add	x16, x16, #0x98
    4acc:	br	x17

0000000000004ad0 <__gmpz_sub_ui@plt>:
    4ad0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ad4:	ldr	x17, [x16, #160]
    4ad8:	add	x16, x16, #0xa0
    4adc:	br	x17

0000000000004ae0 <__gmp_get_memory_functions@plt>:
    4ae0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ae4:	ldr	x17, [x16, #168]
    4ae8:	add	x16, x16, #0xa8
    4aec:	br	x17

0000000000004af0 <__gmpz_sqrt@plt>:
    4af0:	adrp	x16, 25000 <mpfr_set_underflow>
    4af4:	ldr	x17, [x16, #176]
    4af8:	add	x16, x16, #0xb0
    4afc:	br	x17

0000000000004b00 <mpfr_set_erangeflag@plt>:
    4b00:	adrp	x16, 25000 <mpfr_set_underflow>
    4b04:	ldr	x17, [x16, #184]
    4b08:	add	x16, x16, #0xb8
    4b0c:	br	x17

0000000000004b10 <__gmpz_set_ui@plt>:
    4b10:	adrp	x16, 25000 <mpfr_set_underflow>
    4b14:	ldr	x17, [x16, #192]
    4b18:	add	x16, x16, #0xc0
    4b1c:	br	x17

0000000000004b20 <__cxa_finalize@plt>:
    4b20:	adrp	x16, 25000 <mpfr_set_underflow>
    4b24:	ldr	x17, [x16, #200]
    4b28:	add	x16, x16, #0xc8
    4b2c:	br	x17

0000000000004b30 <sprintf@plt>:
    4b30:	adrp	x16, 25000 <mpfr_set_underflow>
    4b34:	ldr	x17, [x16, #208]
    4b38:	add	x16, x16, #0xd0
    4b3c:	br	x17

0000000000004b40 <mpc_sqrt@plt>:
    4b40:	adrp	x16, 25000 <mpfr_set_underflow>
    4b44:	ldr	x17, [x16, #216]
    4b48:	add	x16, x16, #0xd8
    4b4c:	br	x17

0000000000004b50 <mpfr_get_d@plt>:
    4b50:	adrp	x16, 25000 <mpfr_set_underflow>
    4b54:	ldr	x17, [x16, #224]
    4b58:	add	x16, x16, #0xe0
    4b5c:	br	x17

0000000000004b60 <mpfr_set_f@plt>:
    4b60:	adrp	x16, 25000 <mpfr_set_underflow>
    4b64:	ldr	x17, [x16, #232]
    4b68:	add	x16, x16, #0xe8
    4b6c:	br	x17

0000000000004b70 <mpfr_mul@plt>:
    4b70:	adrp	x16, 25000 <mpfr_set_underflow>
    4b74:	ldr	x17, [x16, #240]
    4b78:	add	x16, x16, #0xf0
    4b7c:	br	x17

0000000000004b80 <mpfr_neg@plt>:
    4b80:	adrp	x16, 25000 <mpfr_set_underflow>
    4b84:	ldr	x17, [x16, #248]
    4b88:	add	x16, x16, #0xf8
    4b8c:	br	x17

0000000000004b90 <mpfr_pow@plt>:
    4b90:	adrp	x16, 25000 <mpfr_set_underflow>
    4b94:	ldr	x17, [x16, #256]
    4b98:	add	x16, x16, #0x100
    4b9c:	br	x17

0000000000004ba0 <fputc@plt>:
    4ba0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ba4:	ldr	x17, [x16, #264]
    4ba8:	add	x16, x16, #0x108
    4bac:	br	x17

0000000000004bb0 <mpfr_nextbelow@plt>:
    4bb0:	adrp	x16, 25000 <mpfr_set_underflow>
    4bb4:	ldr	x17, [x16, #272]
    4bb8:	add	x16, x16, #0x110
    4bbc:	br	x17

0000000000004bc0 <__gmpz_sub@plt>:
    4bc0:	adrp	x16, 25000 <mpfr_set_underflow>
    4bc4:	ldr	x17, [x16, #280]
    4bc8:	add	x16, x16, #0x118
    4bcc:	br	x17

0000000000004bd0 <mpfr_get_z@plt>:
    4bd0:	adrp	x16, 25000 <mpfr_set_underflow>
    4bd4:	ldr	x17, [x16, #288]
    4bd8:	add	x16, x16, #0x120
    4bdc:	br	x17

0000000000004be0 <mpfr_sinh_cosh@plt>:
    4be0:	adrp	x16, 25000 <mpfr_set_underflow>
    4be4:	ldr	x17, [x16, #296]
    4be8:	add	x16, x16, #0x128
    4bec:	br	x17

0000000000004bf0 <mpc_alloc_str@plt>:
    4bf0:	adrp	x16, 25000 <mpfr_set_underflow>
    4bf4:	ldr	x17, [x16, #304]
    4bf8:	add	x16, x16, #0x130
    4bfc:	br	x17

0000000000004c00 <mpc_set_prec@plt>:
    4c00:	adrp	x16, 25000 <mpfr_set_underflow>
    4c04:	ldr	x17, [x16, #312]
    4c08:	add	x16, x16, #0x138
    4c0c:	br	x17

0000000000004c10 <mpfr_set_exp@plt>:
    4c10:	adrp	x16, 25000 <mpfr_set_underflow>
    4c14:	ldr	x17, [x16, #320]
    4c18:	add	x16, x16, #0x140
    4c1c:	br	x17

0000000000004c20 <mpc_tan@plt>:
    4c20:	adrp	x16, 25000 <mpfr_set_underflow>
    4c24:	ldr	x17, [x16, #328]
    4c28:	add	x16, x16, #0x148
    4c2c:	br	x17

0000000000004c30 <mpfr_set_d@plt>:
    4c30:	adrp	x16, 25000 <mpfr_set_underflow>
    4c34:	ldr	x17, [x16, #336]
    4c38:	add	x16, x16, #0x150
    4c3c:	br	x17

0000000000004c40 <__gmpz_divisible_2exp_p@plt>:
    4c40:	adrp	x16, 25000 <mpfr_set_underflow>
    4c44:	ldr	x17, [x16, #344]
    4c48:	add	x16, x16, #0x158
    4c4c:	br	x17

0000000000004c50 <__ctype_tolower_loc@plt>:
    4c50:	adrp	x16, 25000 <mpfr_set_underflow>
    4c54:	ldr	x17, [x16, #352]
    4c58:	add	x16, x16, #0x160
    4c5c:	br	x17

0000000000004c60 <__gmpz_fits_slong_p@plt>:
    4c60:	adrp	x16, 25000 <mpfr_set_underflow>
    4c64:	ldr	x17, [x16, #360]
    4c68:	add	x16, x16, #0x168
    4c6c:	br	x17

0000000000004c70 <localeconv@plt>:
    4c70:	adrp	x16, 25000 <mpfr_set_underflow>
    4c74:	ldr	x17, [x16, #368]
    4c78:	add	x16, x16, #0x170
    4c7c:	br	x17

0000000000004c80 <mpfr_set_prec@plt>:
    4c80:	adrp	x16, 25000 <mpfr_set_underflow>
    4c84:	ldr	x17, [x16, #376]
    4c88:	add	x16, x16, #0x178
    4c8c:	br	x17

0000000000004c90 <mpfr_fmma@plt>:
    4c90:	adrp	x16, 25000 <mpfr_set_underflow>
    4c94:	ldr	x17, [x16, #384]
    4c98:	add	x16, x16, #0x180
    4c9c:	br	x17

0000000000004ca0 <mpfr_atan2@plt>:
    4ca0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ca4:	ldr	x17, [x16, #392]
    4ca8:	add	x16, x16, #0x188
    4cac:	br	x17

0000000000004cb0 <mpfr_cmp_ui_2exp@plt>:
    4cb0:	adrp	x16, 25000 <mpfr_set_underflow>
    4cb4:	ldr	x17, [x16, #400]
    4cb8:	add	x16, x16, #0x190
    4cbc:	br	x17

0000000000004cc0 <__gmpz_divexact@plt>:
    4cc0:	adrp	x16, 25000 <mpfr_set_underflow>
    4cc4:	ldr	x17, [x16, #408]
    4cc8:	add	x16, x16, #0x198
    4ccc:	br	x17

0000000000004cd0 <mpc_add@plt>:
    4cd0:	adrp	x16, 25000 <mpfr_set_underflow>
    4cd4:	ldr	x17, [x16, #416]
    4cd8:	add	x16, x16, #0x1a0
    4cdc:	br	x17

0000000000004ce0 <mpc_set_ui@plt>:
    4ce0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ce4:	ldr	x17, [x16, #424]
    4ce8:	add	x16, x16, #0x1a8
    4cec:	br	x17

0000000000004cf0 <mpc_init2@plt>:
    4cf0:	adrp	x16, 25000 <mpfr_set_underflow>
    4cf4:	ldr	x17, [x16, #432]
    4cf8:	add	x16, x16, #0x1b0
    4cfc:	br	x17

0000000000004d00 <__gmpz_set@plt>:
    4d00:	adrp	x16, 25000 <mpfr_set_underflow>
    4d04:	ldr	x17, [x16, #440]
    4d08:	add	x16, x16, #0x1b8
    4d0c:	br	x17

0000000000004d10 <mpfr_set_zero@plt>:
    4d10:	adrp	x16, 25000 <mpfr_set_underflow>
    4d14:	ldr	x17, [x16, #448]
    4d18:	add	x16, x16, #0x1c0
    4d1c:	br	x17

0000000000004d20 <mpc_ceil_log2@plt>:
    4d20:	adrp	x16, 25000 <mpfr_set_underflow>
    4d24:	ldr	x17, [x16, #456]
    4d28:	add	x16, x16, #0x1c8
    4d2c:	br	x17

0000000000004d30 <__gmpz_tstbit@plt>:
    4d30:	adrp	x16, 25000 <mpfr_set_underflow>
    4d34:	ldr	x17, [x16, #464]
    4d38:	add	x16, x16, #0x1d0
    4d3c:	br	x17

0000000000004d40 <__gmpz_mul@plt>:
    4d40:	adrp	x16, 25000 <mpfr_set_underflow>
    4d44:	ldr	x17, [x16, #472]
    4d48:	add	x16, x16, #0x1d8
    4d4c:	br	x17

0000000000004d50 <mpc_set_ld_ld@plt>:
    4d50:	adrp	x16, 25000 <mpfr_set_underflow>
    4d54:	ldr	x17, [x16, #480]
    4d58:	add	x16, x16, #0x1e0
    4d5c:	br	x17

0000000000004d60 <mpfr_clear@plt>:
    4d60:	adrp	x16, 25000 <mpfr_set_underflow>
    4d64:	ldr	x17, [x16, #488]
    4d68:	add	x16, x16, #0x1e8
    4d6c:	br	x17

0000000000004d70 <__gmpfr_set_sj@plt>:
    4d70:	adrp	x16, 25000 <mpfr_set_underflow>
    4d74:	ldr	x17, [x16, #496]
    4d78:	add	x16, x16, #0x1f0
    4d7c:	br	x17

0000000000004d80 <mpfr_log@plt>:
    4d80:	adrp	x16, 25000 <mpfr_set_underflow>
    4d84:	ldr	x17, [x16, #504]
    4d88:	add	x16, x16, #0x1f8
    4d8c:	br	x17

0000000000004d90 <mpfr_atanh@plt>:
    4d90:	adrp	x16, 25000 <mpfr_set_underflow>
    4d94:	ldr	x17, [x16, #512]
    4d98:	add	x16, x16, #0x200
    4d9c:	br	x17

0000000000004da0 <__gmpz_swap@plt>:
    4da0:	adrp	x16, 25000 <mpfr_set_underflow>
    4da4:	ldr	x17, [x16, #520]
    4da8:	add	x16, x16, #0x208
    4dac:	br	x17

0000000000004db0 <mpc_log@plt>:
    4db0:	adrp	x16, 25000 <mpfr_set_underflow>
    4db4:	ldr	x17, [x16, #528]
    4db8:	add	x16, x16, #0x210
    4dbc:	br	x17

0000000000004dc0 <mpfr_asinh@plt>:
    4dc0:	adrp	x16, 25000 <mpfr_set_underflow>
    4dc4:	ldr	x17, [x16, #536]
    4dc8:	add	x16, x16, #0x218
    4dcc:	br	x17

0000000000004dd0 <mpc_fix_inf@plt>:
    4dd0:	adrp	x16, 25000 <mpfr_set_underflow>
    4dd4:	ldr	x17, [x16, #544]
    4dd8:	add	x16, x16, #0x220
    4ddc:	br	x17

0000000000004de0 <strcat@plt>:
    4de0:	adrp	x16, 25000 <mpfr_set_underflow>
    4de4:	ldr	x17, [x16, #552]
    4de8:	add	x16, x16, #0x228
    4dec:	br	x17

0000000000004df0 <mpc_pow_usi@plt>:
    4df0:	adrp	x16, 25000 <mpfr_set_underflow>
    4df4:	ldr	x17, [x16, #560]
    4df8:	add	x16, x16, #0x230
    4dfc:	br	x17

0000000000004e00 <mpfr_nextabove@plt>:
    4e00:	adrp	x16, 25000 <mpfr_set_underflow>
    4e04:	ldr	x17, [x16, #568]
    4e08:	add	x16, x16, #0x238
    4e0c:	br	x17

0000000000004e10 <__gmpz_fdiv_q_2exp@plt>:
    4e10:	adrp	x16, 25000 <mpfr_set_underflow>
    4e14:	ldr	x17, [x16, #576]
    4e18:	add	x16, x16, #0x240
    4e1c:	br	x17

0000000000004e20 <mpfr_clear_underflow@plt>:
    4e20:	adrp	x16, 25000 <mpfr_set_underflow>
    4e24:	ldr	x17, [x16, #584]
    4e28:	add	x16, x16, #0x248
    4e2c:	br	x17

0000000000004e30 <mpfr_integer_p@plt>:
    4e30:	adrp	x16, 25000 <mpfr_set_underflow>
    4e34:	ldr	x17, [x16, #592]
    4e38:	add	x16, x16, #0x250
    4e3c:	br	x17

0000000000004e40 <mpfr_asin@plt>:
    4e40:	adrp	x16, 25000 <mpfr_set_underflow>
    4e44:	ldr	x17, [x16, #600]
    4e48:	add	x16, x16, #0x258
    4e4c:	br	x17

0000000000004e50 <mpc_set_ld@plt>:
    4e50:	adrp	x16, 25000 <mpfr_set_underflow>
    4e54:	ldr	x17, [x16, #608]
    4e58:	add	x16, x16, #0x260
    4e5c:	br	x17

0000000000004e60 <mpfr_add@plt>:
    4e60:	adrp	x16, 25000 <mpfr_set_underflow>
    4e64:	ldr	x17, [x16, #616]
    4e68:	add	x16, x16, #0x268
    4e6c:	br	x17

0000000000004e70 <mpfr_clears@plt>:
    4e70:	adrp	x16, 25000 <mpfr_set_underflow>
    4e74:	ldr	x17, [x16, #624]
    4e78:	add	x16, x16, #0x270
    4e7c:	br	x17

0000000000004e80 <mpfr_set@plt>:
    4e80:	adrp	x16, 25000 <mpfr_set_underflow>
    4e84:	ldr	x17, [x16, #632]
    4e88:	add	x16, x16, #0x278
    4e8c:	br	x17

0000000000004e90 <__gmpz_mul_2exp@plt>:
    4e90:	adrp	x16, 25000 <mpfr_set_underflow>
    4e94:	ldr	x17, [x16, #640]
    4e98:	add	x16, x16, #0x280
    4e9c:	br	x17

0000000000004ea0 <mpc_norm@plt>:
    4ea0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ea4:	ldr	x17, [x16, #648]
    4ea8:	add	x16, x16, #0x288
    4eac:	br	x17

0000000000004eb0 <mpc_mul_naive@plt>:
    4eb0:	adrp	x16, 25000 <mpfr_set_underflow>
    4eb4:	ldr	x17, [x16, #656]
    4eb8:	add	x16, x16, #0x290
    4ebc:	br	x17

0000000000004ec0 <mpfr_set_z@plt>:
    4ec0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ec4:	ldr	x17, [x16, #664]
    4ec8:	add	x16, x16, #0x298
    4ecc:	br	x17

0000000000004ed0 <mpc_mul@plt>:
    4ed0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ed4:	ldr	x17, [x16, #672]
    4ed8:	add	x16, x16, #0x2a0
    4edc:	br	x17

0000000000004ee0 <mpfr_add_ui@plt>:
    4ee0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ee4:	ldr	x17, [x16, #680]
    4ee8:	add	x16, x16, #0x2a8
    4eec:	br	x17

0000000000004ef0 <mpc_set_nan@plt>:
    4ef0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ef4:	ldr	x17, [x16, #688]
    4ef8:	add	x16, x16, #0x2b0
    4efc:	br	x17

0000000000004f00 <mpc_strtoc@plt>:
    4f00:	adrp	x16, 25000 <mpfr_set_underflow>
    4f04:	ldr	x17, [x16, #696]
    4f08:	add	x16, x16, #0x2b8
    4f0c:	br	x17

0000000000004f10 <__gmpz_addmul@plt>:
    4f10:	adrp	x16, 25000 <mpfr_set_underflow>
    4f14:	ldr	x17, [x16, #704]
    4f18:	add	x16, x16, #0x2c0
    4f1c:	br	x17

0000000000004f20 <getc@plt>:
    4f20:	adrp	x16, 25000 <mpfr_set_underflow>
    4f24:	ldr	x17, [x16, #712]
    4f28:	add	x16, x16, #0x2c8
    4f2c:	br	x17

0000000000004f30 <mpc_sqr@plt>:
    4f30:	adrp	x16, 25000 <mpfr_set_underflow>
    4f34:	ldr	x17, [x16, #720]
    4f38:	add	x16, x16, #0x2d0
    4f3c:	br	x17

0000000000004f40 <mpfr_mul_2ui@plt>:
    4f40:	adrp	x16, 25000 <mpfr_set_underflow>
    4f44:	ldr	x17, [x16, #728]
    4f48:	add	x16, x16, #0x2d8
    4f4c:	br	x17

0000000000004f50 <mpc_sin@plt>:
    4f50:	adrp	x16, 25000 <mpfr_set_underflow>
    4f54:	ldr	x17, [x16, #736]
    4f58:	add	x16, x16, #0x2e0
    4f5c:	br	x17

0000000000004f60 <mpc_conj@plt>:
    4f60:	adrp	x16, 25000 <mpfr_set_underflow>
    4f64:	ldr	x17, [x16, #744]
    4f68:	add	x16, x16, #0x2e8
    4f6c:	br	x17

0000000000004f70 <mpfr_ui_div@plt>:
    4f70:	adrp	x16, 25000 <mpfr_set_underflow>
    4f74:	ldr	x17, [x16, #752]
    4f78:	add	x16, x16, #0x2f0
    4f7c:	br	x17

0000000000004f80 <mpfr_sinh@plt>:
    4f80:	adrp	x16, 25000 <mpfr_set_underflow>
    4f84:	ldr	x17, [x16, #760]
    4f88:	add	x16, x16, #0x2f8
    4f8c:	br	x17

0000000000004f90 <mpc_set_d_d@plt>:
    4f90:	adrp	x16, 25000 <mpfr_set_underflow>
    4f94:	ldr	x17, [x16, #768]
    4f98:	add	x16, x16, #0x300
    4f9c:	br	x17

0000000000004fa0 <__gmpz_add_ui@plt>:
    4fa0:	adrp	x16, 25000 <mpfr_set_underflow>
    4fa4:	ldr	x17, [x16, #776]
    4fa8:	add	x16, x16, #0x308
    4fac:	br	x17

0000000000004fb0 <__gmpq_clear@plt>:
    4fb0:	adrp	x16, 25000 <mpfr_set_underflow>
    4fb4:	ldr	x17, [x16, #784]
    4fb8:	add	x16, x16, #0x310
    4fbc:	br	x17

0000000000004fc0 <__gmon_start__@plt>:
    4fc0:	adrp	x16, 25000 <mpfr_set_underflow>
    4fc4:	ldr	x17, [x16, #792]
    4fc8:	add	x16, x16, #0x318
    4fcc:	br	x17

0000000000004fd0 <mpfr_acos@plt>:
    4fd0:	adrp	x16, 25000 <mpfr_set_underflow>
    4fd4:	ldr	x17, [x16, #800]
    4fd8:	add	x16, x16, #0x320
    4fdc:	br	x17

0000000000004fe0 <mpfr_cmp_si_2exp@plt>:
    4fe0:	adrp	x16, 25000 <mpfr_set_underflow>
    4fe4:	ldr	x17, [x16, #808]
    4fe8:	add	x16, x16, #0x328
    4fec:	br	x17

0000000000004ff0 <mpc_free_str@plt>:
    4ff0:	adrp	x16, 25000 <mpfr_set_underflow>
    4ff4:	ldr	x17, [x16, #816]
    4ff8:	add	x16, x16, #0x330
    4ffc:	br	x17

0000000000005000 <abort@plt>:
    5000:	adrp	x16, 25000 <mpfr_set_underflow>
    5004:	ldr	x17, [x16, #824]
    5008:	add	x16, x16, #0x338
    500c:	br	x17

0000000000005010 <mpfr_sqr@plt>:
    5010:	adrp	x16, 25000 <mpfr_set_underflow>
    5014:	ldr	x17, [x16, #832]
    5018:	add	x16, x16, #0x340
    501c:	br	x17

0000000000005020 <mpc_set_si@plt>:
    5020:	adrp	x16, 25000 <mpfr_set_underflow>
    5024:	ldr	x17, [x16, #840]
    5028:	add	x16, x16, #0x348
    502c:	br	x17

0000000000005030 <mpfr_div_2si@plt>:
    5030:	adrp	x16, 25000 <mpfr_set_underflow>
    5034:	ldr	x17, [x16, #848]
    5038:	add	x16, x16, #0x350
    503c:	br	x17

0000000000005040 <mpc_set_ui_ui@plt>:
    5040:	adrp	x16, 25000 <mpfr_set_underflow>
    5044:	ldr	x17, [x16, #856]
    5048:	add	x16, x16, #0x358
    504c:	br	x17

0000000000005050 <mpfr_cos@plt>:
    5050:	adrp	x16, 25000 <mpfr_set_underflow>
    5054:	ldr	x17, [x16, #864]
    5058:	add	x16, x16, #0x360
    505c:	br	x17

0000000000005060 <mpfr_get_emin@plt>:
    5060:	adrp	x16, 25000 <mpfr_set_underflow>
    5064:	ldr	x17, [x16, #872]
    5068:	add	x16, x16, #0x368
    506c:	br	x17

0000000000005070 <mpc_acos@plt>:
    5070:	adrp	x16, 25000 <mpfr_set_underflow>
    5074:	ldr	x17, [x16, #880]
    5078:	add	x16, x16, #0x370
    507c:	br	x17

0000000000005080 <mpfr_sin@plt>:
    5080:	adrp	x16, 25000 <mpfr_set_underflow>
    5084:	ldr	x17, [x16, #888]
    5088:	add	x16, x16, #0x378
    508c:	br	x17

0000000000005090 <mpfr_swap@plt>:
    5090:	adrp	x16, 25000 <mpfr_set_underflow>
    5094:	ldr	x17, [x16, #896]
    5098:	add	x16, x16, #0x380
    509c:	br	x17

00000000000050a0 <mpc_set_z@plt>:
    50a0:	adrp	x16, 25000 <mpfr_set_underflow>
    50a4:	ldr	x17, [x16, #904]
    50a8:	add	x16, x16, #0x388
    50ac:	br	x17

00000000000050b0 <__gmpz_ui_pow_ui@plt>:
    50b0:	adrp	x16, 25000 <mpfr_set_underflow>
    50b4:	ldr	x17, [x16, #912]
    50b8:	add	x16, x16, #0x390
    50bc:	br	x17

00000000000050c0 <mpfr_get_str@plt>:
    50c0:	adrp	x16, 25000 <mpfr_set_underflow>
    50c4:	ldr	x17, [x16, #920]
    50c8:	add	x16, x16, #0x398
    50cc:	br	x17

00000000000050d0 <mpc_fix_zero@plt>:
    50d0:	adrp	x16, 25000 <mpfr_set_underflow>
    50d4:	ldr	x17, [x16, #928]
    50d8:	add	x16, x16, #0x3a0
    50dc:	br	x17

00000000000050e0 <mpfr_acosh@plt>:
    50e0:	adrp	x16, 25000 <mpfr_set_underflow>
    50e4:	ldr	x17, [x16, #936]
    50e8:	add	x16, x16, #0x3a8
    50ec:	br	x17

00000000000050f0 <mpfr_sub_ui@plt>:
    50f0:	adrp	x16, 25000 <mpfr_set_underflow>
    50f4:	ldr	x17, [x16, #944]
    50f8:	add	x16, x16, #0x3b0
    50fc:	br	x17

0000000000005100 <__gmpq_set_ui@plt>:
    5100:	adrp	x16, 25000 <mpfr_set_underflow>
    5104:	ldr	x17, [x16, #952]
    5108:	add	x16, x16, #0x3b8
    510c:	br	x17

0000000000005110 <mpfr_get_ld@plt>:
    5110:	adrp	x16, 25000 <mpfr_set_underflow>
    5114:	ldr	x17, [x16, #960]
    5118:	add	x16, x16, #0x3c0
    511c:	br	x17

0000000000005120 <mpfr_set_inf@plt>:
    5120:	adrp	x16, 25000 <mpfr_set_underflow>
    5124:	ldr	x17, [x16, #968]
    5128:	add	x16, x16, #0x3c8
    512c:	br	x17

0000000000005130 <mpfr_set_ui_2exp@plt>:
    5130:	adrp	x16, 25000 <mpfr_set_underflow>
    5134:	ldr	x17, [x16, #976]
    5138:	add	x16, x16, #0x3d0
    513c:	br	x17

0000000000005140 <mpc_sin_cos@plt>:
    5140:	adrp	x16, 25000 <mpfr_set_underflow>
    5144:	ldr	x17, [x16, #984]
    5148:	add	x16, x16, #0x3d8
    514c:	br	x17

0000000000005150 <mpfr_div@plt>:
    5150:	adrp	x16, 25000 <mpfr_set_underflow>
    5154:	ldr	x17, [x16, #992]
    5158:	add	x16, x16, #0x3e0
    515c:	br	x17

0000000000005160 <mpc_mul_fr@plt>:
    5160:	adrp	x16, 25000 <mpfr_set_underflow>
    5164:	ldr	x17, [x16, #1000]
    5168:	add	x16, x16, #0x3e8
    516c:	br	x17

0000000000005170 <__ctype_b_loc@plt>:
    5170:	adrp	x16, 25000 <mpfr_set_underflow>
    5174:	ldr	x17, [x16, #1008]
    5178:	add	x16, x16, #0x3f0
    517c:	br	x17

0000000000005180 <__gmpz_clear@plt>:
    5180:	adrp	x16, 25000 <mpfr_set_underflow>
    5184:	ldr	x17, [x16, #1016]
    5188:	add	x16, x16, #0x3f8
    518c:	br	x17

0000000000005190 <__gmpfr_out_str@plt>:
    5190:	adrp	x16, 25000 <mpfr_set_underflow>
    5194:	ldr	x17, [x16, #1024]
    5198:	add	x16, x16, #0x400
    519c:	br	x17

00000000000051a0 <mpc_abs@plt>:
    51a0:	adrp	x16, 25000 <mpfr_set_underflow>
    51a4:	ldr	x17, [x16, #1032]
    51a8:	add	x16, x16, #0x408
    51ac:	br	x17

00000000000051b0 <mpfr_atan@plt>:
    51b0:	adrp	x16, 25000 <mpfr_set_underflow>
    51b4:	ldr	x17, [x16, #1040]
    51b8:	add	x16, x16, #0x410
    51bc:	br	x17

00000000000051c0 <mpfr_nexttoward@plt>:
    51c0:	adrp	x16, 25000 <mpfr_set_underflow>
    51c4:	ldr	x17, [x16, #1048]
    51c8:	add	x16, x16, #0x418
    51cc:	br	x17

00000000000051d0 <mpfr_set4@plt>:
    51d0:	adrp	x16, 25000 <mpfr_set_underflow>
    51d4:	ldr	x17, [x16, #1056]
    51d8:	add	x16, x16, #0x420
    51dc:	br	x17

00000000000051e0 <mpfr_log1p@plt>:
    51e0:	adrp	x16, 25000 <mpfr_set_underflow>
    51e4:	ldr	x17, [x16, #1064]
    51e8:	add	x16, x16, #0x428
    51ec:	br	x17

00000000000051f0 <mpfr_sgn@plt>:
    51f0:	adrp	x16, 25000 <mpfr_set_underflow>
    51f4:	ldr	x17, [x16, #1072]
    51f8:	add	x16, x16, #0x430
    51fc:	br	x17

0000000000005200 <mpfr_get_emax@plt>:
    5200:	adrp	x16, 25000 <mpfr_set_underflow>
    5204:	ldr	x17, [x16, #1080]
    5208:	add	x16, x16, #0x438
    520c:	br	x17

0000000000005210 <ungetc@plt>:
    5210:	adrp	x16, 25000 <mpfr_set_underflow>
    5214:	ldr	x17, [x16, #1088]
    5218:	add	x16, x16, #0x440
    521c:	br	x17

0000000000005220 <__gmpz_tdiv_q_2exp@plt>:
    5220:	adrp	x16, 25000 <mpfr_set_underflow>
    5224:	ldr	x17, [x16, #1096]
    5228:	add	x16, x16, #0x448
    522c:	br	x17

0000000000005230 <mpfr_exp@plt>:
    5230:	adrp	x16, 25000 <mpfr_set_underflow>
    5234:	ldr	x17, [x16, #1104]
    5238:	add	x16, x16, #0x450
    523c:	br	x17

0000000000005240 <mpc_pow@plt>:
    5240:	adrp	x16, 25000 <mpfr_set_underflow>
    5244:	ldr	x17, [x16, #1112]
    5248:	add	x16, x16, #0x458
    524c:	br	x17

0000000000005250 <mpc_div@plt>:
    5250:	adrp	x16, 25000 <mpfr_set_underflow>
    5254:	ldr	x17, [x16, #1120]
    5258:	add	x16, x16, #0x460
    525c:	br	x17

0000000000005260 <mpfr_add_si@plt>:
    5260:	adrp	x16, 25000 <mpfr_set_underflow>
    5264:	ldr	x17, [x16, #1128]
    5268:	add	x16, x16, #0x468
    526c:	br	x17

0000000000005270 <mpfr_set_si@plt>:
    5270:	adrp	x16, 25000 <mpfr_set_underflow>
    5274:	ldr	x17, [x16, #1136]
    5278:	add	x16, x16, #0x470
    527c:	br	x17

0000000000005280 <mpfr_sqrt_ui@plt>:
    5280:	adrp	x16, 25000 <mpfr_set_underflow>
    5284:	ldr	x17, [x16, #1144]
    5288:	add	x16, x16, #0x478
    528c:	br	x17

0000000000005290 <mpfr_set_q@plt>:
    5290:	adrp	x16, 25000 <mpfr_set_underflow>
    5294:	ldr	x17, [x16, #1152]
    5298:	add	x16, x16, #0x480
    529c:	br	x17

00000000000052a0 <mpc_exp@plt>:
    52a0:	adrp	x16, 25000 <mpfr_set_underflow>
    52a4:	ldr	x17, [x16, #1160]
    52a8:	add	x16, x16, #0x488
    52ac:	br	x17

00000000000052b0 <__gmpq_init@plt>:
    52b0:	adrp	x16, 25000 <mpfr_set_underflow>
    52b4:	ldr	x17, [x16, #1168]
    52b8:	add	x16, x16, #0x490
    52bc:	br	x17

00000000000052c0 <mpc_set_si_si@plt>:
    52c0:	adrp	x16, 25000 <mpfr_set_underflow>
    52c4:	ldr	x17, [x16, #1176]
    52c8:	add	x16, x16, #0x498
    52cc:	br	x17

00000000000052d0 <__gmpz_submul@plt>:
    52d0:	adrp	x16, 25000 <mpfr_set_underflow>
    52d4:	ldr	x17, [x16, #1184]
    52d8:	add	x16, x16, #0x4a0
    52dc:	br	x17

00000000000052e0 <mpfr_free_str@plt>:
    52e0:	adrp	x16, 25000 <mpfr_set_underflow>
    52e4:	ldr	x17, [x16, #1192]
    52e8:	add	x16, x16, #0x4a8
    52ec:	br	x17

00000000000052f0 <mpfr_underflow_p@plt>:
    52f0:	adrp	x16, 25000 <mpfr_set_underflow>
    52f4:	ldr	x17, [x16, #1200]
    52f8:	add	x16, x16, #0x4b0
    52fc:	br	x17

0000000000005300 <__gmpz_cmp@plt>:
    5300:	adrp	x16, 25000 <mpfr_set_underflow>
    5304:	ldr	x17, [x16, #1208]
    5308:	add	x16, x16, #0x4b8
    530c:	br	x17

0000000000005310 <mpc_cmp_si_si@plt>:
    5310:	adrp	x16, 25000 <mpfr_set_underflow>
    5314:	ldr	x17, [x16, #1216]
    5318:	add	x16, x16, #0x4c0
    531c:	br	x17

0000000000005320 <mpfr_div_2ui@plt>:
    5320:	adrp	x16, 25000 <mpfr_set_underflow>
    5324:	ldr	x17, [x16, #1224]
    5328:	add	x16, x16, #0x4c8
    532c:	br	x17

0000000000005330 <mpc_realloc_str@plt>:
    5330:	adrp	x16, 25000 <mpfr_set_underflow>
    5334:	ldr	x17, [x16, #1232]
    5338:	add	x16, x16, #0x4d0
    533c:	br	x17

0000000000005340 <strcpy@plt>:
    5340:	adrp	x16, 25000 <mpfr_set_underflow>
    5344:	ldr	x17, [x16, #1240]
    5348:	add	x16, x16, #0x4d8
    534c:	br	x17

0000000000005350 <mpfr_sqrt@plt>:
    5350:	adrp	x16, 25000 <mpfr_set_underflow>
    5354:	ldr	x17, [x16, #1248]
    5358:	add	x16, x16, #0x4e0
    535c:	br	x17

0000000000005360 <mpfr_mul_si@plt>:
    5360:	adrp	x16, 25000 <mpfr_set_underflow>
    5364:	ldr	x17, [x16, #1256]
    5368:	add	x16, x16, #0x4e8
    536c:	br	x17

0000000000005370 <mpfr_prec_round@plt>:
    5370:	adrp	x16, 25000 <mpfr_set_underflow>
    5374:	ldr	x17, [x16, #1264]
    5378:	add	x16, x16, #0x4f0
    537c:	br	x17

0000000000005380 <mpc_set_str@plt>:
    5380:	adrp	x16, 25000 <mpfr_set_underflow>
    5384:	ldr	x17, [x16, #1272]
    5388:	add	x16, x16, #0x4f8
    538c:	br	x17

0000000000005390 <mpfr_min_prec@plt>:
    5390:	adrp	x16, 25000 <mpfr_set_underflow>
    5394:	ldr	x17, [x16, #1280]
    5398:	add	x16, x16, #0x500
    539c:	br	x17

00000000000053a0 <mpfr_cmp3@plt>:
    53a0:	adrp	x16, 25000 <mpfr_set_underflow>
    53a4:	ldr	x17, [x16, #1288]
    53a8:	add	x16, x16, #0x508
    53ac:	br	x17

00000000000053b0 <mpfr_cmpabs@plt>:
    53b0:	adrp	x16, 25000 <mpfr_set_underflow>
    53b4:	ldr	x17, [x16, #1296]
    53b8:	add	x16, x16, #0x510
    53bc:	br	x17

00000000000053c0 <mpc_init3@plt>:
    53c0:	adrp	x16, 25000 <mpfr_set_underflow>
    53c4:	ldr	x17, [x16, #1304]
    53c8:	add	x16, x16, #0x518
    53cc:	br	x17

00000000000053d0 <__gmpz_add@plt>:
    53d0:	adrp	x16, 25000 <mpfr_set_underflow>
    53d4:	ldr	x17, [x16, #1312]
    53d8:	add	x16, x16, #0x520
    53dc:	br	x17

00000000000053e0 <mpc_cos@plt>:
    53e0:	adrp	x16, 25000 <mpfr_set_underflow>
    53e4:	ldr	x17, [x16, #1320]
    53e8:	add	x16, x16, #0x528
    53ec:	br	x17

00000000000053f0 <set_pi_over_2@plt>:
    53f0:	adrp	x16, 25000 <mpfr_set_underflow>
    53f4:	ldr	x17, [x16, #1328]
    53f8:	add	x16, x16, #0x530
    53fc:	br	x17

0000000000005400 <__gmpfr_set_uj@plt>:
    5400:	adrp	x16, 25000 <mpfr_set_underflow>
    5404:	ldr	x17, [x16, #1336]
    5408:	add	x16, x16, #0x538
    540c:	br	x17

0000000000005410 <mpc_atan@plt>:
    5410:	adrp	x16, 25000 <mpfr_set_underflow>
    5414:	ldr	x17, [x16, #1344]
    5418:	add	x16, x16, #0x540
    541c:	br	x17

0000000000005420 <__gmpn_perfect_square_p@plt>:
    5420:	adrp	x16, 25000 <mpfr_set_underflow>
    5424:	ldr	x17, [x16, #1352]
    5428:	add	x16, x16, #0x548
    542c:	br	x17

0000000000005430 <mpfr_ui_sub@plt>:
    5430:	adrp	x16, 25000 <mpfr_set_underflow>
    5434:	ldr	x17, [x16, #1360]
    5438:	add	x16, x16, #0x550
    543c:	br	x17

0000000000005440 <mpfr_init2@plt>:
    5440:	adrp	x16, 25000 <mpfr_set_underflow>
    5444:	ldr	x17, [x16, #1368]
    5448:	add	x16, x16, #0x558
    544c:	br	x17

0000000000005450 <mpfr_can_round@plt>:
    5450:	adrp	x16, 25000 <mpfr_set_underflow>
    5454:	ldr	x17, [x16, #1376]
    5458:	add	x16, x16, #0x560
    545c:	br	x17

0000000000005460 <mpc_set_d@plt>:
    5460:	adrp	x16, 25000 <mpfr_set_underflow>
    5464:	ldr	x17, [x16, #1384]
    5468:	add	x16, x16, #0x568
    546c:	br	x17

0000000000005470 <mpfr_get_z_2exp@plt>:
    5470:	adrp	x16, 25000 <mpfr_set_underflow>
    5474:	ldr	x17, [x16, #1392]
    5478:	add	x16, x16, #0x570
    547c:	br	x17

0000000000005480 <mpc_asin@plt>:
    5480:	adrp	x16, 25000 <mpfr_set_underflow>
    5484:	ldr	x17, [x16, #1400]
    5488:	add	x16, x16, #0x578
    548c:	br	x17

0000000000005490 <mpfr_set_overflow@plt>:
    5490:	adrp	x16, 25000 <mpfr_set_underflow>
    5494:	ldr	x17, [x16, #1408]
    5498:	add	x16, x16, #0x580
    549c:	br	x17

00000000000054a0 <__gmpz_init@plt>:
    54a0:	adrp	x16, 25000 <mpfr_set_underflow>
    54a4:	ldr	x17, [x16, #1416]
    54a8:	add	x16, x16, #0x588
    54ac:	br	x17

00000000000054b0 <__gmpz_sizeinbase@plt>:
    54b0:	adrp	x16, 25000 <mpfr_set_underflow>
    54b4:	ldr	x17, [x16, #1424]
    54b8:	add	x16, x16, #0x590
    54bc:	br	x17

00000000000054c0 <__gmpz_set_si@plt>:
    54c0:	adrp	x16, 25000 <mpfr_set_underflow>
    54c4:	ldr	x17, [x16, #1432]
    54c8:	add	x16, x16, #0x598
    54cc:	br	x17

00000000000054d0 <mpfr_number_p@plt>:
    54d0:	adrp	x16, 25000 <mpfr_set_underflow>
    54d4:	ldr	x17, [x16, #1440]
    54d8:	add	x16, x16, #0x5a0
    54dc:	br	x17

00000000000054e0 <mpfr_overflow_p@plt>:
    54e0:	adrp	x16, 25000 <mpfr_set_underflow>
    54e4:	ldr	x17, [x16, #1448]
    54e8:	add	x16, x16, #0x5a8
    54ec:	br	x17

00000000000054f0 <mpc_set_fr_fr@plt>:
    54f0:	adrp	x16, 25000 <mpfr_set_underflow>
    54f4:	ldr	x17, [x16, #1456]
    54f8:	add	x16, x16, #0x5b0
    54fc:	br	x17

0000000000005500 <mpfr_urandomb@plt>:
    5500:	adrp	x16, 25000 <mpfr_set_underflow>
    5504:	ldr	x17, [x16, #1464]
    5508:	add	x16, x16, #0x5b8
    550c:	br	x17

0000000000005510 <mpfr_set_ui@plt>:
    5510:	adrp	x16, 25000 <mpfr_set_underflow>
    5514:	ldr	x17, [x16, #1472]
    5518:	add	x16, x16, #0x5c0
    551c:	br	x17

0000000000005520 <mpfr_sin_cos@plt>:
    5520:	adrp	x16, 25000 <mpfr_set_underflow>
    5524:	ldr	x17, [x16, #1480]
    5528:	add	x16, x16, #0x5c8
    552c:	br	x17

0000000000005530 <mpc_div_2ui@plt>:
    5530:	adrp	x16, 25000 <mpfr_set_underflow>
    5534:	ldr	x17, [x16, #1488]
    5538:	add	x16, x16, #0x5d0
    553c:	br	x17

0000000000005540 <mpfr_inits2@plt>:
    5540:	adrp	x16, 25000 <mpfr_set_underflow>
    5544:	ldr	x17, [x16, #1496]
    5548:	add	x16, x16, #0x5d8
    554c:	br	x17

0000000000005550 <mpfr_div_ui@plt>:
    5550:	adrp	x16, 25000 <mpfr_set_underflow>
    5554:	ldr	x17, [x16, #1504]
    5558:	add	x16, x16, #0x5e0
    555c:	br	x17

0000000000005560 <mpc_fma_naive@plt>:
    5560:	adrp	x16, 25000 <mpfr_set_underflow>
    5564:	ldr	x17, [x16, #1512]
    5568:	add	x16, x16, #0x5e8
    556c:	br	x17

0000000000005570 <__gmpq_mul_2exp@plt>:
    5570:	adrp	x16, 25000 <mpfr_set_underflow>
    5574:	ldr	x17, [x16, #1520]
    5578:	add	x16, x16, #0x5f0
    557c:	br	x17

0000000000005580 <mpc_set@plt>:
    5580:	adrp	x16, 25000 <mpfr_set_underflow>
    5584:	ldr	x17, [x16, #1528]
    5588:	add	x16, x16, #0x5f8
    558c:	br	x17

0000000000005590 <mpfr_hypot@plt>:
    5590:	adrp	x16, 25000 <mpfr_set_underflow>
    5594:	ldr	x17, [x16, #1536]
    5598:	add	x16, x16, #0x600
    559c:	br	x17

00000000000055a0 <fprintf@plt>:
    55a0:	adrp	x16, 25000 <mpfr_set_underflow>
    55a4:	ldr	x17, [x16, #1544]
    55a8:	add	x16, x16, #0x608
    55ac:	br	x17

00000000000055b0 <mpc_ui_div@plt>:
    55b0:	adrp	x16, 25000 <mpfr_set_underflow>
    55b4:	ldr	x17, [x16, #1552]
    55b8:	add	x16, x16, #0x610
    55bc:	br	x17

00000000000055c0 <mpfr_get_emin_min@plt>:
    55c0:	adrp	x16, 25000 <mpfr_set_underflow>
    55c4:	ldr	x17, [x16, #1560]
    55c8:	add	x16, x16, #0x618
    55cc:	br	x17

Disassembly of section .text:

00000000000055d0 <mpc_abs@@Base-0xd4>:
    55d0:	adrp	x0, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    55d4:	ldr	x0, [x0, #4048]
    55d8:	cbz	x0, 55e0 <mpfr_get_emin_min@plt+0x20>
    55dc:	b	4fc0 <__gmon_start__@plt>
    55e0:	ret
    55e4:	nop
    55e8:	adrp	x0, 25000 <mpc_ui_ui_sub@@Base+0x12a8c>
    55ec:	add	x0, x0, #0x628
    55f0:	adrp	x1, 25000 <mpc_ui_ui_sub@@Base+0x12a8c>
    55f4:	add	x1, x1, #0x628
    55f8:	cmp	x1, x0
    55fc:	b.eq	5614 <mpfr_get_emin_min@plt+0x54>  // b.none
    5600:	adrp	x1, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    5604:	ldr	x1, [x1, #3992]
    5608:	cbz	x1, 5614 <mpfr_get_emin_min@plt+0x54>
    560c:	mov	x16, x1
    5610:	br	x16
    5614:	ret
    5618:	adrp	x0, 25000 <mpc_ui_ui_sub@@Base+0x12a8c>
    561c:	add	x0, x0, #0x628
    5620:	adrp	x1, 25000 <mpc_ui_ui_sub@@Base+0x12a8c>
    5624:	add	x1, x1, #0x628
    5628:	sub	x1, x1, x0
    562c:	lsr	x2, x1, #63
    5630:	add	x1, x2, x1, asr #3
    5634:	cmp	xzr, x1, asr #1
    5638:	asr	x1, x1, #1
    563c:	b.eq	5654 <mpfr_get_emin_min@plt+0x94>  // b.none
    5640:	adrp	x2, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    5644:	ldr	x2, [x2, #4064]
    5648:	cbz	x2, 5654 <mpfr_get_emin_min@plt+0x94>
    564c:	mov	x16, x2
    5650:	br	x16
    5654:	ret
    5658:	stp	x29, x30, [sp, #-32]!
    565c:	mov	x29, sp
    5660:	str	x19, [sp, #16]
    5664:	adrp	x19, 25000 <mpc_ui_ui_sub@@Base+0x12a8c>
    5668:	ldrb	w0, [x19, #1576]
    566c:	cbnz	w0, 5694 <mpfr_get_emin_min@plt+0xd4>
    5670:	adrp	x0, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    5674:	ldr	x0, [x0, #4000]
    5678:	cbz	x0, 5688 <mpfr_get_emin_min@plt+0xc8>
    567c:	adrp	x0, 25000 <mpc_ui_ui_sub@@Base+0x12a8c>
    5680:	ldr	x0, [x0, #1568]
    5684:	bl	4b20 <__cxa_finalize@plt>
    5688:	bl	55e8 <mpfr_get_emin_min@plt+0x28>
    568c:	mov	w0, #0x1                   	// #1
    5690:	strb	w0, [x19, #1576]
    5694:	ldr	x19, [sp, #16]
    5698:	ldp	x29, x30, [sp], #32
    569c:	ret
    56a0:	b	5618 <mpfr_get_emin_min@plt+0x58>

00000000000056a4 <mpc_abs@@Base>:
    56a4:	mov	w3, w2
    56a8:	add	x2, x1, #0x20
    56ac:	b	5590 <mpfr_hypot@plt>

00000000000056b0 <mpc_acos@@Base>:
    56b0:	sub	sp, sp, #0xd0
    56b4:	stp	x29, x30, [sp, #112]
    56b8:	stp	x28, x27, [sp, #128]
    56bc:	stp	x26, x25, [sp, #144]
    56c0:	stp	x24, x23, [sp, #160]
    56c4:	stp	x22, x21, [sp, #176]
    56c8:	stp	x20, x19, [sp, #192]
    56cc:	ldr	x8, [x1, #16]
    56d0:	mov	x27, #0x2                   	// #2
    56d4:	movk	x27, #0x8000, lsl #48
    56d8:	mov	x20, x1
    56dc:	cmp	x8, x27
    56e0:	mov	x24, x0
    56e4:	add	x29, sp, #0x70
    56e8:	b.ne	570c <mpc_acos@@Base+0x5c>  // b.any
    56ec:	ldr	x8, [x20, #48]
    56f0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    56f4:	cmp	x8, x9
    56f8:	b.eq	5728 <mpc_acos@@Base+0x78>  // b.none
    56fc:	mov	x0, x24
    5700:	bl	4a40 <mpfr_set_nan@plt>
    5704:	add	x0, x24, #0x20
    5708:	b	5744 <mpc_acos@@Base+0x94>
    570c:	ldr	x9, [x20, #48]
    5710:	mov	w19, w2
    5714:	cmp	x9, x27
    5718:	b.ne	5750 <mpc_acos@@Base+0xa0>  // b.any
    571c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    5720:	cmp	x8, x9
    5724:	b.ne	57c0 <mpc_acos@@Base+0x110>  // b.any
    5728:	ldr	w8, [x20, #40]
    572c:	add	x0, x24, #0x20
    5730:	cmp	w8, #0x0
    5734:	mov	w8, #0xffffffff            	// #-1
    5738:	cneg	w1, w8, lt  // lt = tstop
    573c:	bl	5120 <mpfr_set_inf@plt>
    5740:	mov	x0, x24
    5744:	bl	4a40 <mpfr_set_nan@plt>
    5748:	mov	w0, wzr
    574c:	b	5d14 <mpc_acos@@Base+0x664>
    5750:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5754:	cmp	x8, x10
    5758:	b.eq	57f0 <mpc_acos@@Base+0x140>  // b.none
    575c:	cmp	x9, x10
    5760:	b.eq	57f0 <mpc_acos@@Base+0x140>  // b.none
    5764:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    5768:	cmp	x9, x10
    576c:	b.ne	583c <mpc_acos@@Base+0x18c>  // b.any
    5770:	ldr	w22, [x20, #40]
    5774:	mov	w1, #0x1                   	// #1
    5778:	mov	x0, x20
    577c:	mov	x2, xzr
    5780:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    5784:	cmp	w0, #0x1
    5788:	b.lt	5944 <mpc_acos@@Base+0x294>  // b.tstop
    578c:	add	x0, x24, #0x20
    5790:	asr	w2, w19, #4
    5794:	tbnz	w22, #31, 59a4 <mpc_acos@@Base+0x2f4>
    5798:	cmp	w2, #0x3
    579c:	mov	w8, #0x2                   	// #2
    57a0:	csel	w8, w8, w2, eq  // eq = none
    57a4:	cmp	w2, #0x2
    57a8:	mov	w9, #0x3                   	// #3
    57ac:	csel	w2, w9, w8, eq  // eq = none
    57b0:	mov	x1, x20
    57b4:	bl	50e0 <mpfr_acosh@plt>
    57b8:	neg	w20, w0
    57bc:	b	59b0 <mpc_acos@@Base+0x300>
    57c0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    57c4:	cmp	x8, x9
    57c8:	b.ne	56fc <mpc_acos@@Base+0x4c>  // b.any
    57cc:	and	w2, w19, #0xf
    57d0:	mov	w1, #0x1                   	// #1
    57d4:	mov	x0, x24
    57d8:	bl	53f0 <set_pi_over_2@plt>
    57dc:	mov	w20, w0
    57e0:	add	x0, x24, #0x20
    57e4:	bl	4a40 <mpfr_set_nan@plt>
    57e8:	cmp	w20, #0x0
    57ec:	b	5aa8 <mpc_acos@@Base+0x3f8>
    57f0:	cmp	x8, x10
    57f4:	b.ne	58c0 <mpc_acos@@Base+0x210>  // b.any
    57f8:	ldr	w8, [x20, #8]
    57fc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5800:	cmp	x9, x10
    5804:	b.ne	58d8 <mpc_acos@@Base+0x228>  // b.any
    5808:	cmp	w8, #0x1
    580c:	b.lt	5a00 <mpc_acos@@Base+0x350>  // b.tstop
    5810:	and	w2, w19, #0xf
    5814:	mov	w1, #0x1                   	// #1
    5818:	mov	x0, x24
    581c:	bl	53f0 <set_pi_over_2@plt>
    5820:	mov	w21, w0
    5824:	mov	w2, #0x1                   	// #1
    5828:	mov	x0, x24
    582c:	mov	x1, x24
    5830:	mov	w3, wzr
    5834:	bl	5320 <mpfr_div_2ui@plt>
    5838:	b	5a8c <mpc_acos@@Base+0x3dc>
    583c:	cmp	x8, x10
    5840:	b.ne	58f8 <mpc_acos@@Base+0x248>  // b.any
    5844:	and	w2, w19, #0xf
    5848:	mov	w1, #0x1                   	// #1
    584c:	mov	x0, x24
    5850:	add	x20, x20, #0x20
    5854:	bl	53f0 <set_pi_over_2@plt>
    5858:	asr	w8, w19, #4
    585c:	mov	w19, #0x2                   	// #2
    5860:	cmp	w8, #0x3
    5864:	csel	w9, w19, w8, eq  // eq = none
    5868:	cmp	w8, #0x2
    586c:	mov	w8, #0x3                   	// #3
    5870:	mov	w22, w0
    5874:	add	x0, x24, #0x20
    5878:	csel	w2, w8, w9, eq  // eq = none
    587c:	mov	x1, x20
    5880:	bl	4dc0 <mpfr_asinh@plt>
    5884:	mov	w20, w0
    5888:	mov	x0, x24
    588c:	mov	x1, x24
    5890:	mov	w2, wzr
    5894:	bl	4f60 <mpc_conj@plt>
    5898:	cmp	w22, #0x0
    589c:	cset	w8, ne  // ne = any
    58a0:	csel	w8, w19, w8, lt  // lt = tstop
    58a4:	cmp	w20, #0x0
    58a8:	cset	w9, ne  // ne = any
    58ac:	lsl	w9, w9, #2
    58b0:	mov	w10, #0x8                   	// #8
    58b4:	csel	w9, w10, w9, gt
    58b8:	orr	w0, w9, w8
    58bc:	b	5d14 <mpc_acos@@Base+0x664>
    58c0:	and	w2, w19, #0xf
    58c4:	mov	w1, #0x1                   	// #1
    58c8:	mov	x0, x24
    58cc:	bl	53f0 <set_pi_over_2@plt>
    58d0:	mov	w21, w0
    58d4:	b	5a8c <mpc_acos@@Base+0x3dc>
    58d8:	cmp	w8, #0x1
    58dc:	b.lt	5ab8 <mpc_acos@@Base+0x408>  // b.tstop
    58e0:	mov	w8, #0x1                   	// #1
    58e4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    58e8:	mov	w21, wzr
    58ec:	str	w8, [x24, #8]
    58f0:	str	x9, [x24, #16]
    58f4:	b	5a8c <mpc_acos@@Base+0x3dc>
    58f8:	ldr	x22, [x24]
    58fc:	ldr	x2, [x24, #32]
    5900:	add	x0, sp, #0x30
    5904:	mov	x1, x22
    5908:	bl	53c0 <mpc_init3@plt>
    590c:	asr	w8, w19, #4
    5910:	cmp	w8, #0x1
    5914:	str	x24, [sp, #8]
    5918:	b.ne	5988 <mpc_acos@@Base+0x2d8>  // b.any
    591c:	ldr	x8, [x20, #48]
    5920:	mov	x9, #0x2                   	// #2
    5924:	movk	x9, #0x8000, lsl #48
    5928:	cmp	x8, x9
    592c:	b.gt	5b14 <mpc_acos@@Base+0x464>
    5930:	cmp	x8, x27
    5934:	b.ne	593c <mpc_acos@@Base+0x28c>  // b.any
    5938:	bl	4b00 <mpfr_set_erangeflag@plt>
    593c:	mov	w8, #0x2                   	// #2
    5940:	b	5b24 <mpc_acos@@Base+0x474>
    5944:	mov	x1, #0xffffffffffffffff    	// #-1
    5948:	mov	x0, x20
    594c:	mov	x2, xzr
    5950:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    5954:	tbnz	w0, #31, 5ac8 <mpc_acos@@Base+0x418>
    5958:	and	w2, w19, #0xf
    595c:	mov	x0, x24
    5960:	mov	x1, x20
    5964:	bl	4fd0 <mpfr_acos@plt>
    5968:	mov	w21, w0
    596c:	mov	w20, wzr
    5970:	mov	w8, #0x1                   	// #1
    5974:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    5978:	str	w8, [x24, #40]
    597c:	str	x9, [x24, #48]
    5980:	tbz	w22, #31, 59c8 <mpc_acos@@Base+0x318>
    5984:	b	59d8 <mpc_acos@@Base+0x328>
    5988:	cmp	w8, #0x3
    598c:	mov	w9, #0x2                   	// #2
    5990:	csel	w9, w9, w8, eq  // eq = none
    5994:	cmp	w8, #0x2
    5998:	mov	w8, #0x3                   	// #3
    599c:	csel	w8, w8, w9, eq  // eq = none
    59a0:	b	5b24 <mpc_acos@@Base+0x474>
    59a4:	mov	x1, x20
    59a8:	bl	50e0 <mpfr_acosh@plt>
    59ac:	mov	w20, w0
    59b0:	mov	w8, #0x1                   	// #1
    59b4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    59b8:	mov	w21, wzr
    59bc:	str	w8, [x24, #8]
    59c0:	str	x9, [x24, #16]
    59c4:	tbnz	w22, #31, 59d8 <mpc_acos@@Base+0x328>
    59c8:	mov	x0, x24
    59cc:	mov	x1, x24
    59d0:	mov	w2, wzr
    59d4:	bl	4f60 <mpc_conj@plt>
    59d8:	cmp	w21, #0x0
    59dc:	mov	w8, #0x2                   	// #2
    59e0:	cset	w9, ne  // ne = any
    59e4:	csel	w8, w8, w9, lt  // lt = tstop
    59e8:	cmp	w20, #0x0
    59ec:	cset	w9, ne  // ne = any
    59f0:	lsl	w9, w9, #2
    59f4:	mov	w10, #0x8                   	// #8
    59f8:	csel	w9, w10, w9, lt  // lt = tstop
    59fc:	b	5d10 <mpc_acos@@Base+0x660>
    5a00:	add	x0, sp, #0x30
    5a04:	bl	4aa0 <mpfr_init@plt>
    5a08:	ldr	x23, [x24]
    5a0c:	tst	w19, #0xf
    5a10:	and	w22, w19, #0xf
    5a14:	cinc	x21, x23, eq  // eq = none
    5a18:	mov	x0, x23
    5a1c:	bl	4d20 <mpc_ceil_log2@plt>
    5a20:	add	x23, x0, x23
    5a24:	add	x0, sp, #0x30
    5a28:	mov	x1, x23
    5a2c:	bl	4c80 <mpfr_set_prec@plt>
    5a30:	add	x0, sp, #0x30
    5a34:	mov	w1, #0x3                   	// #3
    5a38:	bl	4a80 <mpfr_const_pi@plt>
    5a3c:	add	x0, sp, #0x30
    5a40:	add	x1, sp, #0x30
    5a44:	mov	w2, #0x3                   	// #3
    5a48:	mov	w3, #0x3                   	// #3
    5a4c:	bl	49c0 <mpfr_mul_ui@plt>
    5a50:	sub	x1, x23, #0x1
    5a54:	add	x0, sp, #0x30
    5a58:	mov	w2, #0x3                   	// #3
    5a5c:	mov	w3, w22
    5a60:	mov	x4, x21
    5a64:	bl	5450 <mpfr_can_round@plt>
    5a68:	cbz	w0, 5a18 <mpc_acos@@Base+0x368>
    5a6c:	add	x1, sp, #0x30
    5a70:	mov	w2, #0x2                   	// #2
    5a74:	mov	x0, x24
    5a78:	mov	w3, w22
    5a7c:	bl	5320 <mpfr_div_2ui@plt>
    5a80:	mov	w21, w0
    5a84:	add	x0, sp, #0x30
    5a88:	bl	4d60 <mpfr_clear@plt>
    5a8c:	ldr	w8, [x20, #40]
    5a90:	add	x0, x24, #0x20
    5a94:	cmp	w8, #0x0
    5a98:	mov	w8, #0xffffffff            	// #-1
    5a9c:	cneg	w1, w8, lt  // lt = tstop
    5aa0:	bl	5120 <mpfr_set_inf@plt>
    5aa4:	cmp	w21, #0x0
    5aa8:	cset	w8, ne  // ne = any
    5aac:	mov	w9, #0x2                   	// #2
    5ab0:	csel	w0, w9, w8, lt  // lt = tstop
    5ab4:	b	5d14 <mpc_acos@@Base+0x664>
    5ab8:	and	w1, w19, #0xf
    5abc:	mov	x0, x24
    5ac0:	bl	4a80 <mpfr_const_pi@plt>
    5ac4:	b	58d0 <mpc_acos@@Base+0x220>
    5ac8:	ldp	q1, q0, [x20]
    5acc:	add	x0, sp, #0x30
    5ad0:	add	x1, sp, #0x30
    5ad4:	mov	w2, wzr
    5ad8:	stp	q1, q0, [sp, #48]
    5adc:	bl	4b80 <mpfr_neg@plt>
    5ae0:	add	x0, x24, #0x20
    5ae4:	asr	w2, w19, #4
    5ae8:	tbnz	w22, #31, 5d34 <mpc_acos@@Base+0x684>
    5aec:	cmp	w2, #0x3
    5af0:	mov	w8, #0x2                   	// #2
    5af4:	csel	w8, w8, w2, eq  // eq = none
    5af8:	cmp	w2, #0x2
    5afc:	mov	w9, #0x3                   	// #3
    5b00:	csel	w2, w9, w8, eq  // eq = none
    5b04:	add	x1, sp, #0x30
    5b08:	bl	50e0 <mpfr_acosh@plt>
    5b0c:	neg	w20, w0
    5b10:	b	5d40 <mpc_acos@@Base+0x690>
    5b14:	ldr	w8, [x20, #40]
    5b18:	cmp	w8, #0x0
    5b1c:	mov	w8, #0x2                   	// #2
    5b20:	cinc	w8, w8, gt
    5b24:	add	x0, sp, #0x10
    5b28:	mov	x1, x22
    5b2c:	lsl	w23, w8, #4
    5b30:	bl	5440 <mpfr_init2@plt>
    5b34:	add	x8, sp, #0x30
    5b38:	tst	w19, #0xf
    5b3c:	mov	x21, #0x2                   	// #2
    5b40:	mov	w28, wzr
    5b44:	movk	x21, #0x8000, lsl #48
    5b48:	add	x24, x8, #0x20
    5b4c:	cinc	x25, x22, eq  // eq = none
    5b50:	str	w19, [sp, #4]
    5b54:	cmp	w28, #0x1
    5b58:	b.hi	5b6c <mpc_acos@@Base+0x4bc>  // b.pmore
    5b5c:	mov	x0, x22
    5b60:	bl	4d20 <mpc_ceil_log2@plt>
    5b64:	add	x8, x0, #0x3
    5b68:	b	5b78 <mpc_acos@@Base+0x4c8>
    5b6c:	cmp	x22, #0x0
    5b70:	cinc	x8, x22, lt  // lt = tstop
    5b74:	asr	x8, x8, #1
    5b78:	add	x22, x8, x22
    5b7c:	add	x0, sp, #0x30
    5b80:	mov	x1, x22
    5b84:	bl	4c80 <mpfr_set_prec@plt>
    5b88:	add	x0, sp, #0x10
    5b8c:	mov	x1, x22
    5b90:	bl	4c80 <mpfr_set_prec@plt>
    5b94:	add	x0, sp, #0x10
    5b98:	mov	w1, #0x1                   	// #1
    5b9c:	mov	w2, wzr
    5ba0:	bl	53f0 <set_pi_over_2@plt>
    5ba4:	add	x0, sp, #0x30
    5ba8:	mov	x1, x20
    5bac:	mov	w2, w23
    5bb0:	bl	5480 <mpc_asin@plt>
    5bb4:	ldr	x8, [sp, #96]
    5bb8:	mov	w26, w0
    5bbc:	cmp	x8, x21
    5bc0:	b.gt	5bf4 <mpc_acos@@Base+0x544>
    5bc4:	cmp	x8, x27
    5bc8:	b.ne	5c24 <mpc_acos@@Base+0x574>  // b.any
    5bcc:	bl	4b00 <mpfr_set_erangeflag@plt>
    5bd0:	mov	w19, wzr
    5bd4:	ldr	x8, [x20, #48]
    5bd8:	cmp	x8, x21
    5bdc:	b.le	5c04 <mpc_acos@@Base+0x554>
    5be0:	ldr	w8, [x20, #40]
    5be4:	mul	w8, w8, w19
    5be8:	cmp	w8, #0x0
    5bec:	b.gt	5c48 <mpc_acos@@Base+0x598>
    5bf0:	b	5d58 <mpc_acos@@Base+0x6a8>
    5bf4:	ldr	w19, [sp, #88]
    5bf8:	ldr	x8, [x20, #48]
    5bfc:	cmp	x8, x21
    5c00:	b.gt	5be0 <mpc_acos@@Base+0x530>
    5c04:	cmp	x8, x27
    5c08:	b.ne	5c38 <mpc_acos@@Base+0x588>  // b.any
    5c0c:	bl	4b00 <mpfr_set_erangeflag@plt>
    5c10:	mov	w8, wzr
    5c14:	mul	w8, w8, w19
    5c18:	cmp	w8, #0x0
    5c1c:	b.gt	5c48 <mpc_acos@@Base+0x598>
    5c20:	b	5d58 <mpc_acos@@Base+0x6a8>
    5c24:	mov	w19, wzr
    5c28:	ldr	x8, [x20, #48]
    5c2c:	cmp	x8, x21
    5c30:	b.le	5c04 <mpc_acos@@Base+0x554>
    5c34:	b	5be0 <mpc_acos@@Base+0x530>
    5c38:	mov	w8, wzr
    5c3c:	mul	w8, w8, w19
    5c40:	cmp	w8, #0x0
    5c44:	b.le	5d58 <mpc_acos@@Base+0x6a8>
    5c48:	ldr	x19, [sp, #64]
    5c4c:	add	x0, sp, #0x30
    5c50:	add	x1, sp, #0x10
    5c54:	add	x2, sp, #0x30
    5c58:	mov	w3, wzr
    5c5c:	add	w28, w28, #0x1
    5c60:	bl	4a60 <mpfr_sub@plt>
    5c64:	ldr	x8, [sp, #64]
    5c68:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    5c6c:	cmp	x8, x9
    5c70:	b.eq	5b54 <mpc_acos@@Base+0x4a4>  // b.none
    5c74:	cmp	x19, #0x2
    5c78:	mov	w9, #0x2                   	// #2
    5c7c:	csinc	x9, x9, x19, lt  // lt = tstop
    5c80:	sub	x8, x9, x8
    5c84:	mov	x0, x24
    5c88:	mov	x1, x24
    5c8c:	mov	w2, wzr
    5c90:	bic	x19, x8, x8, asr #63
    5c94:	bl	4b80 <mpfr_neg@plt>
    5c98:	sub	x1, x22, x19
    5c9c:	add	x0, sp, #0x30
    5ca0:	mov	w3, #0x1                   	// #1
    5ca4:	mov	w2, wzr
    5ca8:	mov	x4, x25
    5cac:	bl	5450 <mpfr_can_round@plt>
    5cb0:	cbz	w0, 5b54 <mpc_acos@@Base+0x4a4>
    5cb4:	ldr	x0, [sp, #8]
    5cb8:	ldr	w2, [sp, #4]
    5cbc:	asr	w8, w26, #2
    5cc0:	cmp	w8, #0x0
    5cc4:	cset	w9, ne  // ne = any
    5cc8:	cmp	w8, #0x2
    5ccc:	add	x1, sp, #0x30
    5cd0:	csinv	w19, w9, wzr, ne  // ne = any
    5cd4:	bl	5580 <mpc_set@plt>
    5cd8:	and	w20, w0, #0x3
    5cdc:	tst	w0, #0x3
    5ce0:	add	x0, sp, #0x30
    5ce4:	cset	w21, ne  // ne = any
    5ce8:	bl	4a10 <mpc_clear@plt>
    5cec:	add	x0, sp, #0x10
    5cf0:	bl	4d60 <mpfr_clear@plt>
    5cf4:	cmp	w20, #0x2
    5cf8:	csel	w8, w20, w21, eq  // eq = none
    5cfc:	cmp	w19, #0x0
    5d00:	cset	w9, ne  // ne = any
    5d04:	lsl	w9, w9, #2
    5d08:	mov	w10, #0x8                   	// #8
    5d0c:	csel	w9, w10, w9, gt
    5d10:	orr	w0, w8, w9
    5d14:	ldp	x20, x19, [sp, #192]
    5d18:	ldp	x22, x21, [sp, #176]
    5d1c:	ldp	x24, x23, [sp, #160]
    5d20:	ldp	x26, x25, [sp, #144]
    5d24:	ldp	x28, x27, [sp, #128]
    5d28:	ldp	x29, x30, [sp, #112]
    5d2c:	add	sp, sp, #0xd0
    5d30:	ret
    5d34:	add	x1, sp, #0x30
    5d38:	bl	50e0 <mpfr_acosh@plt>
    5d3c:	mov	w20, w0
    5d40:	and	w1, w19, #0xf
    5d44:	mov	x0, x24
    5d48:	bl	4a80 <mpfr_const_pi@plt>
    5d4c:	mov	w21, w0
    5d50:	tbz	w22, #31, 59c8 <mpc_acos@@Base+0x318>
    5d54:	b	59d8 <mpc_acos@@Base+0x328>
    5d58:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    5d5c:	ldr	x8, [x8, #4008]
    5d60:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    5d64:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    5d68:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    5d6c:	ldr	x0, [x8]
    5d70:	add	x1, x1, #0x990
    5d74:	add	x2, x2, #0x9b1
    5d78:	add	x4, x4, #0x9b8
    5d7c:	mov	w3, #0xca                  	// #202
    5d80:	bl	55a0 <fprintf@plt>
    5d84:	bl	5000 <abort@plt>

0000000000005d88 <mpc_acosh@@Base>:
    5d88:	sub	sp, sp, #0x90
    5d8c:	stp	x29, x30, [sp, #96]
    5d90:	stp	x22, x21, [sp, #112]
    5d94:	stp	x20, x19, [sp, #128]
    5d98:	ldr	x8, [x1, #16]
    5d9c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    5da0:	mov	w19, w2
    5da4:	mov	x21, x1
    5da8:	cmp	x8, x9
    5dac:	mov	x20, x0
    5db0:	add	x29, sp, #0x60
    5db4:	b.ne	5de4 <mpc_acosh@@Base+0x5c>  // b.any
    5db8:	ldr	x8, [x21, #48]
    5dbc:	mov	x9, #0x2                   	// #2
    5dc0:	movk	x9, #0x8000, lsl #48
    5dc4:	cmp	x8, x9
    5dc8:	b.ne	5de4 <mpc_acosh@@Base+0x5c>  // b.any
    5dcc:	mov	x0, x20
    5dd0:	bl	4a40 <mpfr_set_nan@plt>
    5dd4:	add	x0, x20, #0x20
    5dd8:	bl	4a40 <mpfr_set_nan@plt>
    5ddc:	mov	w21, wzr
    5de0:	b	5f30 <mpc_acosh@@Base+0x1a8>
    5de4:	ldr	x1, [x20, #32]
    5de8:	ldr	x2, [x20]
    5dec:	add	x0, sp, #0x20
    5df0:	add	x22, sp, #0x20
    5df4:	bl	53c0 <mpc_init3@plt>
    5df8:	ldr	w9, [x21, #40]
    5dfc:	asr	w8, w19, #4
    5e00:	tbnz	w9, #31, 5e94 <mpc_acosh@@Base+0x10c>
    5e04:	and	w9, w19, #0xf
    5e08:	mov	w10, #0x20                  	// #32
    5e0c:	lsl	w11, w9, #4
    5e10:	cmp	w9, #0x3
    5e14:	csel	w10, w10, w11, eq  // eq = none
    5e18:	cmp	w9, #0x2
    5e1c:	mov	w9, #0x30                  	// #48
    5e20:	csel	w9, w9, w10, eq  // eq = none
    5e24:	add	w2, w9, w8
    5e28:	add	x0, sp, #0x20
    5e2c:	mov	x1, x21
    5e30:	bl	5070 <mpc_acos@plt>
    5e34:	ldp	q0, q1, [sp, #32]
    5e38:	ldp	q2, q3, [sp, #64]
    5e3c:	mov	w21, w0
    5e40:	add	x0, sp, #0x20
    5e44:	add	x1, sp, #0x20
    5e48:	mov	w2, wzr
    5e4c:	stp	q0, q1, [sp]
    5e50:	stp	q2, q3, [sp, #32]
    5e54:	stp	q0, q1, [sp, #64]
    5e58:	bl	4b80 <mpfr_neg@plt>
    5e5c:	asr	w8, w21, #2
    5e60:	cmp	w8, #0x0
    5e64:	mov	w9, #0x2                   	// #2
    5e68:	cset	w11, ne  // ne = any
    5e6c:	tst	w8, #0xfffffffd
    5e70:	csel	w8, w11, w9, eq  // eq = none
    5e74:	tst	w21, #0x3
    5e78:	and	w10, w21, #0x3
    5e7c:	cset	w9, ne  // ne = any
    5e80:	cmp	w10, #0x2
    5e84:	lsl	w9, w9, #2
    5e88:	mov	w10, #0x8                   	// #8
    5e8c:	csel	w9, w10, w9, eq  // eq = none
    5e90:	b	5f14 <mpc_acosh@@Base+0x18c>
    5e94:	cmp	w8, #0x3
    5e98:	mov	w9, #0x2                   	// #2
    5e9c:	mov	w10, #0x3                   	// #3
    5ea0:	csel	w9, w9, w8, eq  // eq = none
    5ea4:	cmp	w8, #0x2
    5ea8:	csel	w8, w10, w9, eq  // eq = none
    5eac:	ubfiz	w9, w19, #4, #4
    5eb0:	add	w2, w8, w9
    5eb4:	add	x0, sp, #0x20
    5eb8:	mov	x1, x21
    5ebc:	bl	5070 <mpc_acos@plt>
    5ec0:	ldp	q0, q1, [sp, #32]
    5ec4:	ldp	q2, q3, [sp, #64]
    5ec8:	mov	w21, w0
    5ecc:	add	x0, x22, #0x20
    5ed0:	mov	x1, x0
    5ed4:	mov	w2, wzr
    5ed8:	stp	q0, q1, [sp]
    5edc:	stp	q2, q3, [sp, #32]
    5ee0:	stp	q0, q1, [sp, #64]
    5ee4:	bl	4b80 <mpfr_neg@plt>
    5ee8:	asr	w8, w21, #2
    5eec:	cmp	w8, #0x0
    5ef0:	cset	w9, ne  // ne = any
    5ef4:	cmp	w8, #0x2
    5ef8:	csel	w8, w8, w9, eq  // eq = none
    5efc:	tst	w21, #0x3
    5f00:	cset	w9, ne  // ne = any
    5f04:	tst	w21, #0x1
    5f08:	lsl	w9, w9, #2
    5f0c:	mov	w10, #0x8                   	// #8
    5f10:	csel	w9, w9, w10, eq  // eq = none
    5f14:	add	x1, sp, #0x20
    5f18:	mov	x0, x20
    5f1c:	mov	w2, w19
    5f20:	orr	w21, w8, w9
    5f24:	bl	5580 <mpc_set@plt>
    5f28:	add	x0, sp, #0x20
    5f2c:	bl	4a10 <mpc_clear@plt>
    5f30:	mov	w0, w21
    5f34:	ldp	x20, x19, [sp, #128]
    5f38:	ldp	x22, x21, [sp, #112]
    5f3c:	ldp	x29, x30, [sp, #96]
    5f40:	add	sp, sp, #0x90
    5f44:	ret

0000000000005f48 <mpc_add@@Base>:
    5f48:	stp	x29, x30, [sp, #-64]!
    5f4c:	stp	x20, x19, [sp, #48]
    5f50:	mov	w19, w3
    5f54:	and	w3, w3, #0xf
    5f58:	str	x23, [sp, #16]
    5f5c:	stp	x22, x21, [sp, #32]
    5f60:	mov	x29, sp
    5f64:	mov	x20, x2
    5f68:	mov	x21, x1
    5f6c:	mov	x22, x0
    5f70:	bl	4e60 <mpfr_add@plt>
    5f74:	mov	w23, w0
    5f78:	add	x0, x22, #0x20
    5f7c:	add	x1, x21, #0x20
    5f80:	add	x2, x20, #0x20
    5f84:	asr	w3, w19, #4
    5f88:	bl	4e60 <mpfr_add@plt>
    5f8c:	cmp	w23, #0x0
    5f90:	mov	w8, #0x2                   	// #2
    5f94:	cset	w9, ne  // ne = any
    5f98:	csel	w8, w8, w9, lt  // lt = tstop
    5f9c:	cmp	w0, #0x0
    5fa0:	cset	w9, ne  // ne = any
    5fa4:	ldp	x20, x19, [sp, #48]
    5fa8:	ldp	x22, x21, [sp, #32]
    5fac:	ldr	x23, [sp, #16]
    5fb0:	lsl	w9, w9, #2
    5fb4:	mov	w10, #0x8                   	// #8
    5fb8:	csel	w9, w10, w9, lt  // lt = tstop
    5fbc:	orr	w0, w9, w8
    5fc0:	ldp	x29, x30, [sp], #64
    5fc4:	ret

0000000000005fc8 <mpc_add_fr@@Base>:
    5fc8:	stp	x29, x30, [sp, #-48]!
    5fcc:	stp	x20, x19, [sp, #32]
    5fd0:	mov	w19, w3
    5fd4:	and	w3, w3, #0xf
    5fd8:	stp	x22, x21, [sp, #16]
    5fdc:	mov	x29, sp
    5fe0:	mov	x20, x1
    5fe4:	mov	x21, x0
    5fe8:	bl	4e60 <mpfr_add@plt>
    5fec:	ldr	w3, [x20, #40]
    5ff0:	mov	w22, w0
    5ff4:	add	x0, x21, #0x20
    5ff8:	add	x1, x20, #0x20
    5ffc:	asr	w2, w19, #4
    6000:	bl	51d0 <mpfr_set4@plt>
    6004:	cmp	w22, #0x0
    6008:	mov	w8, #0x2                   	// #2
    600c:	cset	w9, ne  // ne = any
    6010:	csel	w8, w8, w9, lt  // lt = tstop
    6014:	cmp	w0, #0x0
    6018:	cset	w9, ne  // ne = any
    601c:	ldp	x20, x19, [sp, #32]
    6020:	ldp	x22, x21, [sp, #16]
    6024:	lsl	w9, w9, #2
    6028:	mov	w10, #0x8                   	// #8
    602c:	csel	w9, w10, w9, lt  // lt = tstop
    6030:	orr	w0, w9, w8
    6034:	ldp	x29, x30, [sp], #48
    6038:	ret

000000000000603c <mpc_add_si@@Base>:
    603c:	stp	x29, x30, [sp, #-48]!
    6040:	stp	x20, x19, [sp, #32]
    6044:	mov	w19, w3
    6048:	and	w3, w3, #0xf
    604c:	stp	x22, x21, [sp, #16]
    6050:	mov	x29, sp
    6054:	mov	x20, x1
    6058:	mov	x21, x0
    605c:	bl	5260 <mpfr_add_si@plt>
    6060:	ldr	w3, [x20, #40]
    6064:	mov	w22, w0
    6068:	add	x0, x21, #0x20
    606c:	add	x1, x20, #0x20
    6070:	asr	w2, w19, #4
    6074:	bl	51d0 <mpfr_set4@plt>
    6078:	cmp	w22, #0x0
    607c:	mov	w8, #0x2                   	// #2
    6080:	cset	w9, ne  // ne = any
    6084:	csel	w8, w8, w9, lt  // lt = tstop
    6088:	cmp	w0, #0x0
    608c:	cset	w9, ne  // ne = any
    6090:	ldp	x20, x19, [sp, #32]
    6094:	ldp	x22, x21, [sp, #16]
    6098:	lsl	w9, w9, #2
    609c:	mov	w10, #0x8                   	// #8
    60a0:	csel	w9, w10, w9, lt  // lt = tstop
    60a4:	orr	w0, w9, w8
    60a8:	ldp	x29, x30, [sp], #48
    60ac:	ret

00000000000060b0 <mpc_add_ui@@Base>:
    60b0:	stp	x29, x30, [sp, #-48]!
    60b4:	stp	x20, x19, [sp, #32]
    60b8:	mov	w19, w3
    60bc:	and	w3, w3, #0xf
    60c0:	stp	x22, x21, [sp, #16]
    60c4:	mov	x29, sp
    60c8:	mov	x20, x1
    60cc:	mov	x21, x0
    60d0:	bl	4ee0 <mpfr_add_ui@plt>
    60d4:	ldr	w3, [x20, #40]
    60d8:	mov	w22, w0
    60dc:	add	x0, x21, #0x20
    60e0:	add	x1, x20, #0x20
    60e4:	asr	w2, w19, #4
    60e8:	bl	51d0 <mpfr_set4@plt>
    60ec:	cmp	w22, #0x0
    60f0:	mov	w8, #0x2                   	// #2
    60f4:	cset	w9, ne  // ne = any
    60f8:	csel	w8, w8, w9, lt  // lt = tstop
    60fc:	cmp	w0, #0x0
    6100:	cset	w9, ne  // ne = any
    6104:	ldp	x20, x19, [sp, #32]
    6108:	ldp	x22, x21, [sp, #16]
    610c:	lsl	w9, w9, #2
    6110:	mov	w10, #0x8                   	// #8
    6114:	csel	w9, w10, w9, lt  // lt = tstop
    6118:	orr	w0, w9, w8
    611c:	ldp	x29, x30, [sp], #48
    6120:	ret

0000000000006124 <mpc_arg@@Base>:
    6124:	mov	w3, w2
    6128:	mov	x2, x1
    612c:	add	x1, x1, #0x20
    6130:	b	4ca0 <mpfr_atan2@plt>

0000000000006134 <mpc_asin@@Base>:
    6134:	sub	sp, sp, #0xf0
    6138:	stp	x29, x30, [sp, #144]
    613c:	stp	x28, x27, [sp, #160]
    6140:	stp	x26, x25, [sp, #176]
    6144:	stp	x24, x23, [sp, #192]
    6148:	stp	x22, x21, [sp, #208]
    614c:	stp	x20, x19, [sp, #224]
    6150:	ldr	x8, [x1, #16]
    6154:	mov	x9, #0x2                   	// #2
    6158:	movk	x9, #0x8000, lsl #48
    615c:	mov	x20, x1
    6160:	cmp	x8, x9
    6164:	mov	x19, x0
    6168:	add	x29, sp, #0x90
    616c:	b.ne	6194 <mpc_asin@@Base+0x60>  // b.any
    6170:	ldr	x8, [x20, #48]
    6174:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    6178:	cmp	x8, x9
    617c:	b.eq	61ac <mpc_asin@@Base+0x78>  // b.none
    6180:	mov	x0, x19
    6184:	bl	4a40 <mpfr_set_nan@plt>
    6188:	add	x0, x19, #0x20
    618c:	bl	4a40 <mpfr_set_nan@plt>
    6190:	b	61cc <mpc_asin@@Base+0x98>
    6194:	ldr	x22, [x20, #48]
    6198:	cmp	x22, x9
    619c:	b.ne	61f4 <mpc_asin@@Base+0xc0>  // b.any
    61a0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    61a4:	cmp	x8, x9
    61a8:	b.ne	6250 <mpc_asin@@Base+0x11c>  // b.any
    61ac:	mov	x0, x19
    61b0:	bl	4a40 <mpfr_set_nan@plt>
    61b4:	ldr	w8, [x20, #40]
    61b8:	add	x0, x19, #0x20
    61bc:	cmp	w8, #0x0
    61c0:	mov	w8, #0x1                   	// #1
    61c4:	cneg	w1, w8, lt  // lt = tstop
    61c8:	bl	5120 <mpfr_set_inf@plt>
    61cc:	mov	w19, wzr
    61d0:	mov	w0, w19
    61d4:	ldp	x20, x19, [sp, #224]
    61d8:	ldp	x22, x21, [sp, #208]
    61dc:	ldp	x24, x23, [sp, #192]
    61e0:	ldp	x26, x25, [sp, #176]
    61e4:	ldp	x28, x27, [sp, #160]
    61e8:	ldp	x29, x30, [sp, #144]
    61ec:	add	sp, sp, #0xf0
    61f0:	ret
    61f4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    61f8:	mov	w26, w2
    61fc:	cmp	x8, x9
    6200:	b.eq	6274 <mpc_asin@@Base+0x140>  // b.none
    6204:	cmp	x22, x9
    6208:	b.eq	6274 <mpc_asin@@Base+0x140>  // b.none
    620c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    6210:	cmp	x22, x9
    6214:	b.ne	62e4 <mpc_asin@@Base+0x1b0>  // b.any
    6218:	ldr	w23, [x20, #40]
    621c:	mov	w1, #0x1                   	// #1
    6220:	mov	x0, x20
    6224:	mov	x2, xzr
    6228:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    622c:	cmp	w0, #0x1
    6230:	b.lt	669c <mpc_asin@@Base+0x568>  // b.tstop
    6234:	add	x0, x19, #0x20
    6238:	asr	w2, w26, #4
    623c:	tbnz	w23, #31, 66fc <mpc_asin@@Base+0x5c8>
    6240:	mov	x1, x20
    6244:	bl	50e0 <mpfr_acosh@plt>
    6248:	mov	w22, w0
    624c:	b	6720 <mpc_asin@@Base+0x5ec>
    6250:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    6254:	cmp	x8, x9
    6258:	b.ne	6180 <mpc_asin@@Base+0x4c>  // b.any
    625c:	ldr	w3, [x20, #8]
    6260:	mov	x0, x19
    6264:	mov	x1, x20
    6268:	mov	w2, wzr
    626c:	bl	51d0 <mpfr_set4@plt>
    6270:	b	6188 <mpc_asin@@Base+0x54>
    6274:	ldr	w10, [x20, #8]
    6278:	mov	w23, #0x1                   	// #1
    627c:	cmp	w10, #0x0
    6280:	cneg	w1, w23, lt  // lt = tstop
    6284:	cmp	x8, x9
    6288:	b.ne	6340 <mpc_asin@@Base+0x20c>  // b.any
    628c:	and	w2, w26, #0xf
    6290:	mov	x0, x19
    6294:	bl	53f0 <set_pi_over_2@plt>
    6298:	ldr	w8, [x20, #40]
    629c:	mov	w21, w0
    62a0:	add	x0, x19, #0x20
    62a4:	cmp	w8, #0x0
    62a8:	cneg	w1, w23, lt  // lt = tstop
    62ac:	bl	5120 <mpfr_set_inf@plt>
    62b0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    62b4:	cmp	x22, x8
    62b8:	b.ne	62d0 <mpc_asin@@Base+0x19c>  // b.any
    62bc:	mov	w2, #0x1                   	// #1
    62c0:	mov	x0, x19
    62c4:	mov	x1, x19
    62c8:	mov	w3, wzr
    62cc:	bl	5320 <mpfr_div_2ui@plt>
    62d0:	cmp	w21, #0x0
    62d4:	cset	w8, ne  // ne = any
    62d8:	mov	w9, #0x2                   	// #2
    62dc:	csel	w19, w9, w8, lt  // lt = tstop
    62e0:	b	61d0 <mpc_asin@@Base+0x9c>
    62e4:	cmp	x8, x9
    62e8:	add	x22, x20, #0x20
    62ec:	b.ne	635c <mpc_asin@@Base+0x228>  // b.any
    62f0:	ldr	w8, [x20, #8]
    62f4:	mov	w9, #0x1                   	// #1
    62f8:	str	w9, [x19, #8]
    62fc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    6300:	str	x9, [x19, #16]
    6304:	tbz	w8, #31, 6318 <mpc_asin@@Base+0x1e4>
    6308:	mov	x0, x19
    630c:	mov	x1, x19
    6310:	mov	w2, wzr
    6314:	bl	4b80 <mpfr_neg@plt>
    6318:	add	x0, x19, #0x20
    631c:	asr	w2, w26, #4
    6320:	mov	x1, x22
    6324:	bl	4dc0 <mpfr_asinh@plt>
    6328:	cmp	w0, #0x0
    632c:	cset	w8, ne  // ne = any
    6330:	lsl	w8, w8, #2
    6334:	mov	w9, #0x8                   	// #8
    6338:	csel	w19, w9, w8, lt  // lt = tstop
    633c:	b	61d0 <mpc_asin@@Base+0x9c>
    6340:	mov	x0, x19
    6344:	bl	4d10 <mpfr_set_zero@plt>
    6348:	ldr	w8, [x20, #40]
    634c:	add	x0, x19, #0x20
    6350:	cmp	w8, #0x0
    6354:	cneg	w1, w23, lt  // lt = tstop
    6358:	b	61c8 <mpc_asin@@Base+0x94>
    635c:	ldr	x21, [x19]
    6360:	ldr	x25, [x19, #32]
    6364:	add	x0, sp, #0x30
    6368:	str	x19, [sp, #24]
    636c:	add	x23, sp, #0x30
    6370:	cmp	x21, x25
    6374:	csel	x24, x25, x21, lt  // lt = tstop
    6378:	mov	x1, x24
    637c:	bl	4cf0 <mpc_init2@plt>
    6380:	tst	w26, #0xf
    6384:	cset	w8, eq  // eq = none
    6388:	str	x8, [sp, #16]
    638c:	cinc	x8, x21, eq  // eq = none
    6390:	cmp	w26, #0x10
    6394:	str	x8, [sp, #40]
    6398:	cset	w8, cc  // cc = lo, ul, last
    639c:	mov	w28, wzr
    63a0:	add	x23, x23, #0x20
    63a4:	str	w26, [sp, #4]
    63a8:	str	x8, [sp, #8]
    63ac:	cinc	x8, x25, cc  // cc = lo, ul, last
    63b0:	mov	w26, #0x1                   	// #1
    63b4:	str	x8, [sp, #32]
    63b8:	cmp	w28, #0x1
    63bc:	b.hi	63d0 <mpc_asin@@Base+0x29c>  // b.pmore
    63c0:	mov	x0, x24
    63c4:	bl	4d20 <mpc_ceil_log2@plt>
    63c8:	add	x8, x0, #0x3
    63cc:	b	63dc <mpc_asin@@Base+0x2a8>
    63d0:	cmp	x24, #0x0
    63d4:	cinc	x8, x24, lt  // lt = tstop
    63d8:	asr	x8, x8, #1
    63dc:	add	x24, x8, x24
    63e0:	add	x0, sp, #0x30
    63e4:	mov	x1, x24
    63e8:	bl	4c80 <mpfr_set_prec@plt>
    63ec:	mov	x0, x23
    63f0:	mov	x1, x24
    63f4:	bl	4c80 <mpfr_set_prec@plt>
    63f8:	cbnz	w28, 64dc <mpc_asin@@Base+0x3a8>
    63fc:	ldr	x8, [x20, #48]
    6400:	tbz	x8, #63, 64dc <mpc_asin@@Base+0x3a8>
    6404:	ldr	x9, [sp, #48]
    6408:	cmp	x8, #0x0
    640c:	cinc	x8, x8, lt  // lt = tstop
    6410:	neg	x8, x8, asr #1
    6414:	cmp	x8, x9
    6418:	b.lt	64dc <mpc_asin@@Base+0x3a8>  // b.tstop
    641c:	add	x0, sp, #0x30
    6420:	mov	w1, wzr
    6424:	bl	4a80 <mpfr_const_pi@plt>
    6428:	add	x0, sp, #0x30
    642c:	add	x1, sp, #0x30
    6430:	mov	w2, #0x1                   	// #1
    6434:	mov	w3, wzr
    6438:	bl	5320 <mpfr_div_2ui@plt>
    643c:	ldp	x9, x8, [sp, #16]
    6440:	ldr	x1, [sp, #48]
    6444:	add	x0, sp, #0x30
    6448:	mov	w3, #0x1                   	// #1
    644c:	ldr	x8, [x8]
    6450:	mov	w2, wzr
    6454:	add	x4, x8, x9
    6458:	bl	5450 <mpfr_can_round@plt>
    645c:	cbz	w0, 64dc <mpc_asin@@Base+0x3a8>
    6460:	ldp	q1, q0, [x22]
    6464:	stp	q1, q0, [x29, #-32]
    6468:	ldr	w8, [x20, #40]
    646c:	tbz	w8, #31, 6480 <mpc_asin@@Base+0x34c>
    6470:	sub	x0, x29, #0x20
    6474:	sub	x1, x29, #0x20
    6478:	mov	w2, wzr
    647c:	bl	4b80 <mpfr_neg@plt>
    6480:	sub	x1, x29, #0x20
    6484:	mov	x0, x23
    6488:	mov	w2, wzr
    648c:	bl	5350 <mpfr_sqrt@plt>
    6490:	ldr	w8, [x20, #40]
    6494:	mov	w27, w0
    6498:	tbz	w8, #31, 64ac <mpc_asin@@Base+0x378>
    649c:	mov	x0, x23
    64a0:	mov	x1, x23
    64a4:	mov	w2, wzr
    64a8:	bl	4b80 <mpfr_neg@plt>
    64ac:	cbz	w27, 67b8 <mpc_asin@@Base+0x684>
    64b0:	ldr	x8, [sp, #80]
    64b4:	ldr	x9, [sp, #24]
    64b8:	mov	w2, #0x4                   	// #4
    64bc:	mov	w3, #0x1                   	// #1
    64c0:	sub	x1, x8, #0x1
    64c4:	ldr	x9, [x9, #32]
    64c8:	ldr	x8, [sp, #8]
    64cc:	mov	x0, x23
    64d0:	add	x4, x9, x8
    64d4:	bl	5450 <mpfr_can_round@plt>
    64d8:	cbnz	w0, 667c <mpc_asin@@Base+0x548>
    64dc:	add	x0, sp, #0x30
    64e0:	mov	x1, x20
    64e4:	mov	w2, wzr
    64e8:	add	w28, w28, #0x1
    64ec:	bl	4f30 <mpc_sqr@plt>
    64f0:	ldr	x21, [sp, #64]
    64f4:	add	x0, sp, #0x30
    64f8:	add	x2, sp, #0x30
    64fc:	mov	w1, #0x1                   	// #1
    6500:	mov	w3, wzr
    6504:	bl	5430 <mpfr_ui_sub@plt>
    6508:	mov	x0, x23
    650c:	mov	x1, x23
    6510:	mov	w2, wzr
    6514:	bl	4b80 <mpfr_neg@plt>
    6518:	ldr	x8, [sp, #64]
    651c:	ldr	x9, [sp, #96]
    6520:	mvn	x10, x24
    6524:	add	x0, sp, #0x30
    6528:	cmp	x21, x8
    652c:	csel	x11, x21, x8, gt
    6530:	add	x10, x9, x10
    6534:	sub	x11, x11, x24
    6538:	cmp	x11, x10
    653c:	csel	x25, x10, x11, lt  // lt = tstop
    6540:	cmp	x8, x9
    6544:	add	x1, sp, #0x30
    6548:	mov	w2, wzr
    654c:	csel	x19, x9, x8, lt  // lt = tstop
    6550:	bl	4b40 <mpc_sqrt@plt>
    6554:	mov	w8, #0x1                   	// #1
    6558:	ldr	x27, [sp, #64]
    655c:	ldr	x21, [sp, #96]
    6560:	bfi	x8, x25, #1, #63
    6564:	sub	x8, x8, x19
    6568:	cmp	x8, #0x0
    656c:	cinc	x8, x8, lt  // lt = tstop
    6570:	cmp	x27, x21
    6574:	asr	x8, x8, #1
    6578:	csel	x9, x21, x27, gt
    657c:	sub	x8, x8, x9
    6580:	add	x8, x8, x24
    6584:	cmp	x8, #0x1
    6588:	add	x0, sp, #0x30
    658c:	add	x1, sp, #0x30
    6590:	mov	x2, x22
    6594:	mov	w3, wzr
    6598:	csinc	x25, x26, x8, lt  // lt = tstop
    659c:	bl	4a60 <mpfr_sub@plt>
    65a0:	mov	x0, x23
    65a4:	mov	x1, x23
    65a8:	mov	x2, x20
    65ac:	mov	w3, wzr
    65b0:	bl	4e60 <mpfr_add@plt>
    65b4:	add	x0, sp, #0x30
    65b8:	bl	51f0 <mpfr_sgn@plt>
    65bc:	cbz	w0, 63b8 <mpc_asin@@Base+0x284>
    65c0:	mov	x0, x23
    65c4:	bl	51f0 <mpfr_sgn@plt>
    65c8:	cbz	w0, 63b8 <mpc_asin@@Base+0x284>
    65cc:	ldr	x8, [sp, #64]
    65d0:	ldr	x9, [sp, #96]
    65d4:	add	x0, sp, #0x30
    65d8:	add	x1, sp, #0x30
    65dc:	sub	x8, x27, x8
    65e0:	sub	x9, x21, x9
    65e4:	cmp	x8, x9
    65e8:	csel	x8, x9, x8, lt  // lt = tstop
    65ec:	add	x8, x8, x25
    65f0:	cmp	x8, #0x1
    65f4:	mov	w2, wzr
    65f8:	csinc	x19, x26, x8, lt  // lt = tstop
    65fc:	bl	4db0 <mpc_log@plt>
    6600:	ldr	x8, [sp, #64]
    6604:	ldr	x9, [sp, #96]
    6608:	add	x0, sp, #0x30
    660c:	mov	x1, x23
    6610:	cmp	x8, x9
    6614:	csel	x8, x9, x8, gt
    6618:	sub	x8, x19, x8
    661c:	add	x9, x8, #0x1
    6620:	add	x8, x8, #0x2
    6624:	cmp	x9, #0x1
    6628:	csinc	x19, x8, xzr, ge  // ge = tcont
    662c:	bl	5090 <mpfr_swap@plt>
    6630:	mov	x0, x23
    6634:	mov	x1, x23
    6638:	mov	w2, wzr
    663c:	bl	4b80 <mpfr_neg@plt>
    6640:	ldr	x4, [sp, #40]
    6644:	sub	x27, x24, x19
    6648:	add	x0, sp, #0x30
    664c:	mov	w3, #0x1                   	// #1
    6650:	mov	x1, x27
    6654:	mov	w2, wzr
    6658:	bl	5450 <mpfr_can_round@plt>
    665c:	cbz	w0, 63b8 <mpc_asin@@Base+0x284>
    6660:	ldr	x4, [sp, #32]
    6664:	mov	w3, #0x1                   	// #1
    6668:	mov	x0, x23
    666c:	mov	x1, x27
    6670:	mov	w2, wzr
    6674:	bl	5450 <mpfr_can_round@plt>
    6678:	cbz	w0, 63b8 <mpc_asin@@Base+0x284>
    667c:	ldr	x0, [sp, #24]
    6680:	ldr	w2, [sp, #4]
    6684:	add	x1, sp, #0x30
    6688:	bl	5580 <mpc_set@plt>
    668c:	mov	w19, w0
    6690:	add	x0, sp, #0x30
    6694:	bl	4a10 <mpc_clear@plt>
    6698:	b	61d0 <mpc_asin@@Base+0x9c>
    669c:	mov	x1, #0xffffffffffffffff    	// #-1
    66a0:	mov	x0, x20
    66a4:	mov	x2, xzr
    66a8:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    66ac:	tbnz	w0, #31, 678c <mpc_asin@@Base+0x658>
    66b0:	mov	w8, #0x1                   	// #1
    66b4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    66b8:	str	w8, [x19, #40]
    66bc:	str	x9, [x19, #48]
    66c0:	tbz	w23, #31, 66d4 <mpc_asin@@Base+0x5a0>
    66c4:	add	x0, x19, #0x20
    66c8:	mov	x1, x0
    66cc:	mov	w2, wzr
    66d0:	bl	4b80 <mpfr_neg@plt>
    66d4:	and	w2, w26, #0xf
    66d8:	mov	x0, x19
    66dc:	mov	x1, x20
    66e0:	bl	4e40 <mpfr_asin@plt>
    66e4:	cmp	w0, #0x0
    66e8:	cset	w8, ne  // ne = any
    66ec:	mov	w10, #0x2                   	// #2
    66f0:	mov	w9, wzr
    66f4:	csel	w8, w10, w8, lt  // lt = tstop
    66f8:	b	6774 <mpc_asin@@Base+0x640>
    66fc:	cmp	w2, #0x3
    6700:	mov	w8, #0x2                   	// #2
    6704:	csel	w8, w8, w2, eq  // eq = none
    6708:	cmp	w2, #0x2
    670c:	mov	w9, #0x3                   	// #3
    6710:	csel	w2, w9, w8, eq  // eq = none
    6714:	mov	x1, x20
    6718:	bl	50e0 <mpfr_acosh@plt>
    671c:	neg	w22, w0
    6720:	ldr	w8, [x20, #8]
    6724:	mov	w9, #0x1                   	// #1
    6728:	and	w2, w26, #0xf
    672c:	mov	x0, x19
    6730:	cmp	w8, #0x0
    6734:	cneg	w1, w9, lt  // lt = tstop
    6738:	bl	53f0 <set_pi_over_2@plt>
    673c:	mov	w20, w0
    6740:	tbz	w23, #31, 6754 <mpc_asin@@Base+0x620>
    6744:	mov	x0, x19
    6748:	mov	x1, x19
    674c:	mov	w2, wzr
    6750:	bl	4f60 <mpc_conj@plt>
    6754:	cmp	w20, #0x0
    6758:	mov	w8, #0x2                   	// #2
    675c:	cset	w9, ne  // ne = any
    6760:	csel	w8, w8, w9, lt  // lt = tstop
    6764:	lsr	w9, w22, #31
    6768:	cbz	w22, 6774 <mpc_asin@@Base+0x640>
    676c:	mov	w10, #0x4                   	// #4
    6770:	b	6778 <mpc_asin@@Base+0x644>
    6774:	mov	w10, wzr
    6778:	cmp	w9, #0x0
    677c:	mov	w9, #0x8                   	// #8
    6780:	csel	w9, w9, w10, ne  // ne = any
    6784:	orr	w19, w9, w8
    6788:	b	61d0 <mpc_asin@@Base+0x9c>
    678c:	ldp	q1, q0, [x20]
    6790:	add	x0, sp, #0x30
    6794:	add	x1, sp, #0x30
    6798:	mov	w2, wzr
    679c:	stp	q1, q0, [sp, #48]
    67a0:	bl	4b80 <mpfr_neg@plt>
    67a4:	add	x0, x19, #0x20
    67a8:	asr	w2, w26, #4
    67ac:	tbnz	w23, #31, 67cc <mpc_asin@@Base+0x698>
    67b0:	add	x1, sp, #0x30
    67b4:	b	6244 <mpc_asin@@Base+0x110>
    67b8:	ldr	w8, [x20, #40]
    67bc:	tbnz	w8, #31, 67ec <mpc_asin@@Base+0x6b8>
    67c0:	mov	x0, x23
    67c4:	bl	4e00 <mpfr_nextabove@plt>
    67c8:	b	667c <mpc_asin@@Base+0x548>
    67cc:	cmp	w2, #0x3
    67d0:	mov	w8, #0x2                   	// #2
    67d4:	csel	w8, w8, w2, eq  // eq = none
    67d8:	cmp	w2, #0x2
    67dc:	mov	w9, #0x3                   	// #3
    67e0:	csel	w2, w9, w8, eq  // eq = none
    67e4:	add	x1, sp, #0x30
    67e8:	b	6718 <mpc_asin@@Base+0x5e4>
    67ec:	mov	x0, x23
    67f0:	bl	4bb0 <mpfr_nextbelow@plt>
    67f4:	b	667c <mpc_asin@@Base+0x548>

00000000000067f8 <mpc_asinh@@Base>:
    67f8:	sub	sp, sp, #0xd0
    67fc:	stp	x29, x30, [sp, #160]
    6800:	str	x21, [sp, #176]
    6804:	stp	x20, x19, [sp, #192]
    6808:	ldp	q1, q0, [x1, #32]
    680c:	add	x29, sp, #0xa0
    6810:	mov	w19, w2
    6814:	mov	x20, x0
    6818:	stp	q1, q0, [x29, #-64]
    681c:	ldp	q1, q0, [x1]
    6820:	sub	x0, x29, #0x40
    6824:	sub	x1, x29, #0x40
    6828:	mov	w2, wzr
    682c:	stp	q1, q0, [x29, #-32]
    6830:	bl	4b80 <mpfr_neg@plt>
    6834:	ldr	x1, [x20, #32]
    6838:	ldr	x2, [x20]
    683c:	add	x0, sp, #0x20
    6840:	add	x21, sp, #0x20
    6844:	bl	53c0 <mpc_init3@plt>
    6848:	asr	w8, w19, #4
    684c:	mov	w9, #0x2                   	// #2
    6850:	cmp	w8, #0x3
    6854:	mov	w10, #0x3                   	// #3
    6858:	csel	w9, w9, w8, eq  // eq = none
    685c:	cmp	w8, #0x2
    6860:	csel	w8, w10, w9, eq  // eq = none
    6864:	ubfiz	w9, w19, #4, #4
    6868:	add	w2, w8, w9
    686c:	add	x0, sp, #0x20
    6870:	sub	x1, x29, #0x40
    6874:	bl	5480 <mpc_asin@plt>
    6878:	ldp	q0, q1, [sp, #32]
    687c:	ldp	q2, q3, [sp, #64]
    6880:	mov	w19, w0
    6884:	add	x0, x21, #0x20
    6888:	mov	x1, x0
    688c:	mov	w2, wzr
    6890:	stp	q0, q1, [sp]
    6894:	stp	q2, q3, [sp, #32]
    6898:	stp	q0, q1, [sp, #64]
    689c:	bl	4b80 <mpfr_neg@plt>
    68a0:	add	x1, sp, #0x20
    68a4:	mov	x0, x20
    68a8:	mov	w2, wzr
    68ac:	bl	5580 <mpc_set@plt>
    68b0:	add	x0, sp, #0x20
    68b4:	bl	4a10 <mpc_clear@plt>
    68b8:	asr	w8, w19, #2
    68bc:	cmp	w8, #0x0
    68c0:	cset	w9, ne  // ne = any
    68c4:	cmp	w8, #0x2
    68c8:	csel	w8, w8, w9, eq  // eq = none
    68cc:	tst	w19, #0x3
    68d0:	cset	w9, ne  // ne = any
    68d4:	tst	w19, #0x1
    68d8:	ldp	x20, x19, [sp, #192]
    68dc:	ldr	x21, [sp, #176]
    68e0:	ldp	x29, x30, [sp, #160]
    68e4:	lsl	w9, w9, #2
    68e8:	mov	w10, #0x8                   	// #8
    68ec:	csel	w9, w9, w10, eq  // eq = none
    68f0:	orr	w0, w8, w9
    68f4:	add	sp, sp, #0xd0
    68f8:	ret

00000000000068fc <set_pi_over_2@@Base>:
    68fc:	stp	x29, x30, [sp, #-48]!
    6900:	stp	x20, x19, [sp, #32]
    6904:	mov	w20, w1
    6908:	mov	x19, x0
    690c:	str	x21, [sp, #16]
    6910:	mov	x29, sp
    6914:	tbz	w1, #31, 6934 <set_pi_over_2@@Base+0x38>
    6918:	cmp	w2, #0x2
    691c:	b.ne	6928 <set_pi_over_2@@Base+0x2c>  // b.any
    6920:	mov	w2, #0x3                   	// #3
    6924:	b	6934 <set_pi_over_2@@Base+0x38>
    6928:	cmp	w2, #0x3
    692c:	mov	w8, #0x2                   	// #2
    6930:	csel	w2, w8, w2, eq  // eq = none
    6934:	mov	x0, x19
    6938:	mov	w1, w2
    693c:	bl	4a80 <mpfr_const_pi@plt>
    6940:	mov	w21, w0
    6944:	mov	w2, #0x1                   	// #1
    6948:	mov	x0, x19
    694c:	mov	x1, x19
    6950:	mov	w3, wzr
    6954:	bl	5320 <mpfr_div_2ui@plt>
    6958:	tbz	w20, #31, 6970 <set_pi_over_2@@Base+0x74>
    695c:	mov	x0, x19
    6960:	mov	x1, x19
    6964:	mov	w2, wzr
    6968:	neg	w21, w21
    696c:	bl	4b80 <mpfr_neg@plt>
    6970:	mov	w0, w21
    6974:	ldp	x20, x19, [sp, #32]
    6978:	ldr	x21, [sp, #16]
    697c:	ldp	x29, x30, [sp], #48
    6980:	ret

0000000000006984 <mpc_atan@@Base>:
    6984:	sub	sp, sp, #0x130
    6988:	stp	x29, x30, [sp, #208]
    698c:	stp	x28, x27, [sp, #224]
    6990:	stp	x26, x25, [sp, #240]
    6994:	stp	x24, x23, [sp, #256]
    6998:	stp	x22, x21, [sp, #272]
    699c:	stp	x20, x19, [sp, #288]
    69a0:	ldr	x8, [x1, #16]
    69a4:	ldr	w24, [x1, #40]
    69a8:	mov	x27, #0x2                   	// #2
    69ac:	movk	x27, #0x8000, lsl #48
    69b0:	mov	x22, x1
    69b4:	cmp	x8, x27
    69b8:	mov	x19, x0
    69bc:	add	x29, sp, #0xd0
    69c0:	b.ne	69fc <mpc_atan@@Base+0x78>  // b.any
    69c4:	mov	x0, x19
    69c8:	bl	4a40 <mpfr_set_nan@plt>
    69cc:	ldr	x8, [x22, #48]
    69d0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    69d4:	orr	x8, x8, #0x2
    69d8:	cmp	x8, x9
    69dc:	b.ne	6a9c <mpc_atan@@Base+0x118>  // b.any
    69e0:	mov	w8, #0x1                   	// #1
    69e4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    69e8:	str	w8, [x19, #40]
    69ec:	str	x9, [x19, #48]
    69f0:	tbnz	w24, #31, 6aac <mpc_atan@@Base+0x128>
    69f4:	mov	w19, wzr
    69f8:	b	6c6c <mpc_atan@@Base+0x2e8>
    69fc:	ldr	x9, [x22, #48]
    6a00:	ldr	w28, [x22, #8]
    6a04:	mov	w25, w2
    6a08:	cmp	x9, x27
    6a0c:	b.ne	6a34 <mpc_atan@@Base+0xb0>  // b.any
    6a10:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    6a14:	cmp	x8, x9
    6a18:	b.ne	6a94 <mpc_atan@@Base+0x110>  // b.any
    6a1c:	and	w1, w25, #0xf
    6a20:	tbz	w28, #31, 6b98 <mpc_atan@@Base+0x214>
    6a24:	cmp	w1, #0x2
    6a28:	b.ne	6b8c <mpc_atan@@Base+0x208>  // b.any
    6a2c:	mov	w1, #0x3                   	// #3
    6a30:	b	6b98 <mpc_atan@@Base+0x214>
    6a34:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    6a38:	cmp	x8, x10
    6a3c:	b.eq	6a7c <mpc_atan@@Base+0xf8>  // b.none
    6a40:	cmp	x9, x10
    6a44:	b.eq	6a7c <mpc_atan@@Base+0xf8>  // b.none
    6a48:	mov	x21, #0x8000000000000001    	// #-9223372036854775807
    6a4c:	cmp	x9, x21
    6a50:	b.ne	6ac4 <mpc_atan@@Base+0x140>  // b.any
    6a54:	and	w2, w25, #0xf
    6a58:	mov	x0, x19
    6a5c:	mov	x1, x22
    6a60:	bl	51b0 <mpfr_atan@plt>
    6a64:	mov	w20, w0
    6a68:	mov	w8, #0x1                   	// #1
    6a6c:	str	w8, [x19, #40]
    6a70:	str	x21, [x19, #48]
    6a74:	tbz	w24, #31, 6c5c <mpc_atan@@Base+0x2d8>
    6a78:	b	6c4c <mpc_atan@@Base+0x2c8>
    6a7c:	and	w1, w25, #0xf
    6a80:	tbz	w28, #31, 6c00 <mpc_atan@@Base+0x27c>
    6a84:	cmp	w1, #0x2
    6a88:	b.ne	6bf4 <mpc_atan@@Base+0x270>  // b.any
    6a8c:	mov	w1, #0x3                   	// #3
    6a90:	b	6c00 <mpc_atan@@Base+0x27c>
    6a94:	mov	x0, x19
    6a98:	bl	4a40 <mpfr_set_nan@plt>
    6a9c:	add	x0, x19, #0x20
    6aa0:	bl	4a40 <mpfr_set_nan@plt>
    6aa4:	mov	w19, wzr
    6aa8:	b	6c6c <mpc_atan@@Base+0x2e8>
    6aac:	mov	x0, x19
    6ab0:	mov	x1, x19
    6ab4:	mov	w2, wzr
    6ab8:	bl	4f60 <mpc_conj@plt>
    6abc:	mov	w19, wzr
    6ac0:	b	6c6c <mpc_atan@@Base+0x2e8>
    6ac4:	cmp	x8, x21
    6ac8:	add	x21, x22, #0x20
    6acc:	b.ne	6ae8 <mpc_atan@@Base+0x164>  // b.any
    6ad0:	tbnz	w24, #31, 7004 <mpc_atan@@Base+0x680>
    6ad4:	mov	w1, #0x1                   	// #1
    6ad8:	mov	x0, x21
    6adc:	mov	x2, xzr
    6ae0:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    6ae4:	b	7018 <mpc_atan@@Base+0x694>
    6ae8:	sub	x1, x29, #0x28
    6aec:	sub	x2, x29, #0x48
    6af0:	add	x3, sp, #0x68
    6af4:	add	x4, sp, #0x48
    6af8:	mov	w0, #0x1                   	// #1
    6afc:	mov	x5, xzr
    6b00:	bl	5540 <mpfr_inits2@plt>
    6b04:	ldp	q1, q0, [x22]
    6b08:	add	x0, sp, #0x20
    6b0c:	add	x1, sp, #0x20
    6b10:	mov	w2, wzr
    6b14:	stp	q1, q0, [sp, #32]
    6b18:	bl	4b80 <mpfr_neg@plt>
    6b1c:	ldr	x8, [x22, #48]
    6b20:	ldr	x20, [x19]
    6b24:	ldr	x26, [x22, #16]
    6b28:	mov	x9, #0x2                   	// #2
    6b2c:	neg	x10, x8
    6b30:	cmp	x20, x10
    6b34:	ccmp	x8, #0x0, #0x0, le
    6b38:	movk	x9, #0x8000, lsl #48
    6b3c:	csel	x8, xzr, x8, gt
    6b40:	cmp	x26, x9
    6b44:	sub	x23, x20, x8
    6b48:	b.gt	6c90 <mpc_atan@@Base+0x30c>
    6b4c:	cmp	x26, x27
    6b50:	b.ne	6b78 <mpc_atan@@Base+0x1f4>  // b.any
    6b54:	bl	4b00 <mpfr_set_erangeflag@plt>
    6b58:	ldr	x8, [x22, #16]
    6b5c:	mov	x9, #0x2                   	// #2
    6b60:	movk	x9, #0x8000, lsl #48
    6b64:	cmp	x8, x9
    6b68:	b.gt	71e8 <mpc_atan@@Base+0x864>
    6b6c:	cmp	x8, x27
    6b70:	b.ne	6b78 <mpc_atan@@Base+0x1f4>  // b.any
    6b74:	bl	4b00 <mpfr_set_erangeflag@plt>
    6b78:	mov	w8, #0x3                   	// #3
    6b7c:	str	w8, [sp, #16]
    6b80:	mov	w8, #0x2                   	// #2
    6b84:	str	w8, [sp, #28]
    6b88:	b	6cb8 <mpc_atan@@Base+0x334>
    6b8c:	cmp	w1, #0x3
    6b90:	mov	w8, #0x2                   	// #2
    6b94:	csel	w1, w8, w1, eq  // eq = none
    6b98:	mov	x0, x19
    6b9c:	bl	4a80 <mpfr_const_pi@plt>
    6ba0:	mov	w20, w0
    6ba4:	mov	w2, #0x1                   	// #1
    6ba8:	mov	x0, x19
    6bac:	mov	x1, x19
    6bb0:	mov	w3, wzr
    6bb4:	mov	w21, #0x1                   	// #1
    6bb8:	bl	5320 <mpfr_div_2ui@plt>
    6bbc:	tbz	w28, #31, 6bd4 <mpc_atan@@Base+0x250>
    6bc0:	mov	x0, x19
    6bc4:	mov	x1, x19
    6bc8:	mov	w2, wzr
    6bcc:	neg	w20, w20
    6bd0:	bl	4b80 <mpfr_neg@plt>
    6bd4:	cmp	w20, #0x0
    6bd8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    6bdc:	cset	w9, ne  // ne = any
    6be0:	mov	w10, #0x2                   	// #2
    6be4:	str	w21, [x19, #40]
    6be8:	csel	w0, w10, w9, lt  // lt = tstop
    6bec:	str	x8, [x19, #48]
    6bf0:	b	6c70 <mpc_atan@@Base+0x2ec>
    6bf4:	cmp	w1, #0x3
    6bf8:	mov	w8, #0x2                   	// #2
    6bfc:	csel	w1, w8, w1, eq  // eq = none
    6c00:	mov	x0, x19
    6c04:	bl	4a80 <mpfr_const_pi@plt>
    6c08:	mov	w20, w0
    6c0c:	mov	w2, #0x1                   	// #1
    6c10:	mov	x0, x19
    6c14:	mov	x1, x19
    6c18:	mov	w3, wzr
    6c1c:	mov	w21, #0x1                   	// #1
    6c20:	bl	5320 <mpfr_div_2ui@plt>
    6c24:	tbz	w28, #31, 6c3c <mpc_atan@@Base+0x2b8>
    6c28:	mov	x0, x19
    6c2c:	mov	x1, x19
    6c30:	mov	w2, wzr
    6c34:	neg	w20, w20
    6c38:	bl	4b80 <mpfr_neg@plt>
    6c3c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    6c40:	str	w21, [x19, #40]
    6c44:	str	x8, [x19, #48]
    6c48:	tbz	w24, #31, 6c5c <mpc_atan@@Base+0x2d8>
    6c4c:	mov	x0, x19
    6c50:	mov	x1, x19
    6c54:	mov	w2, wzr
    6c58:	bl	4f60 <mpc_conj@plt>
    6c5c:	cmp	w20, #0x0
    6c60:	cset	w8, ne  // ne = any
    6c64:	mov	w9, #0x2                   	// #2
    6c68:	csel	w19, w9, w8, lt  // lt = tstop
    6c6c:	mov	w0, w19
    6c70:	ldp	x20, x19, [sp, #288]
    6c74:	ldp	x22, x21, [sp, #272]
    6c78:	ldp	x24, x23, [sp, #256]
    6c7c:	ldp	x26, x25, [sp, #240]
    6c80:	ldp	x28, x27, [sp, #224]
    6c84:	ldp	x29, x30, [sp, #208]
    6c88:	add	sp, sp, #0x130
    6c8c:	ret
    6c90:	ldr	w8, [x22, #8]
    6c94:	cmp	w8, #0x0
    6c98:	mov	w8, #0x2                   	// #2
    6c9c:	cinc	w8, w8, gt
    6ca0:	str	w8, [sp, #28]
    6ca4:	ldr	w8, [x22, #8]
    6ca8:	cmp	w8, #0x0
    6cac:	mov	w8, #0x2                   	// #2
    6cb0:	cinc	w8, w8, ge  // ge = tcont
    6cb4:	str	w8, [sp, #16]
    6cb8:	tst	w25, #0xf
    6cbc:	add	x28, x26, #0x5
    6cc0:	cinc	x26, x20, eq  // eq = none
    6cc4:	mov	x20, #0x2                   	// #2
    6cc8:	movk	x20, #0x8000, lsl #48
    6ccc:	str	w25, [sp, #12]
    6cd0:	b	6d64 <mpc_atan@@Base+0x3e0>
    6cd4:	mov	x1, #0xffffffffffffffff    	// #-1
    6cd8:	mov	x0, x21
    6cdc:	mov	x2, xzr
    6ce0:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    6ce4:	mov	x24, x25
    6ce8:	cbnz	w0, 7294 <mpc_atan@@Base+0x910>
    6cec:	sub	x0, x29, #0x48
    6cf0:	add	x1, sp, #0x20
    6cf4:	sub	x2, x29, #0x28
    6cf8:	mov	w3, #0x3                   	// #3
    6cfc:	bl	4ca0 <mpfr_atan2@plt>
    6d00:	cmp	x25, x24
    6d04:	add	x0, sp, #0x68
    6d08:	add	x1, sp, #0x68
    6d0c:	sub	x2, x29, #0x48
    6d10:	mov	w3, #0x2                   	// #2
    6d14:	csel	x24, x25, x24, lt  // lt = tstop
    6d18:	bl	4a60 <mpfr_sub@plt>
    6d1c:	ldr	x8, [sp, #120]
    6d20:	sub	x9, x28, x24
    6d24:	add	x0, sp, #0x68
    6d28:	add	x1, sp, #0x68
    6d2c:	sub	x8, x9, x8
    6d30:	cmp	x8, #0x0
    6d34:	mov	w9, #0x1                   	// #1
    6d38:	mov	w2, #0x1                   	// #1
    6d3c:	mov	w3, #0x2                   	// #2
    6d40:	csinc	x24, x9, x8, lt  // lt = tstop
    6d44:	bl	5320 <mpfr_div_2ui@plt>
    6d48:	sub	x1, x23, x24
    6d4c:	add	x0, sp, #0x68
    6d50:	mov	w2, #0x2                   	// #2
    6d54:	mov	w3, #0x3                   	// #3
    6d58:	mov	x4, x26
    6d5c:	bl	5450 <mpfr_can_round@plt>
    6d60:	cbnz	w0, 6e38 <mpc_atan@@Base+0x4b4>
    6d64:	mov	x0, x23
    6d68:	bl	4d20 <mpc_ceil_log2@plt>
    6d6c:	add	x8, x23, x0
    6d70:	add	x23, x8, #0x2
    6d74:	sub	x0, x29, #0x28
    6d78:	mov	x1, x23
    6d7c:	bl	4c80 <mpfr_set_prec@plt>
    6d80:	sub	x0, x29, #0x48
    6d84:	mov	x1, x23
    6d88:	bl	4c80 <mpfr_set_prec@plt>
    6d8c:	add	x0, sp, #0x68
    6d90:	mov	x1, x23
    6d94:	bl	4c80 <mpfr_set_prec@plt>
    6d98:	ldr	w3, [sp, #28]
    6d9c:	sub	x0, x29, #0x28
    6da0:	mov	w1, #0x1                   	// #1
    6da4:	mov	x2, x21
    6da8:	bl	5430 <mpfr_ui_sub@plt>
    6dac:	ldur	x25, [x29, #-24]
    6db0:	cmp	x25, x20
    6db4:	b.gt	6dc8 <mpc_atan@@Base+0x444>
    6db8:	cmp	x25, x27
    6dbc:	b.ne	6dd0 <mpc_atan@@Base+0x44c>  // b.any
    6dc0:	bl	4b00 <mpfr_set_erangeflag@plt>
    6dc4:	b	6dd0 <mpc_atan@@Base+0x44c>
    6dc8:	ldur	w8, [x29, #-32]
    6dcc:	cbnz	w8, 6de8 <mpc_atan@@Base+0x464>
    6dd0:	mov	w1, #0x1                   	// #1
    6dd4:	mov	x0, x21
    6dd8:	mov	x2, xzr
    6ddc:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    6de0:	cbnz	w0, 72c4 <mpc_atan@@Base+0x940>
    6de4:	mov	w25, #0x2                   	// #2
    6de8:	add	x0, sp, #0x68
    6dec:	sub	x2, x29, #0x28
    6df0:	mov	w3, #0x2                   	// #2
    6df4:	mov	x1, x22
    6df8:	bl	4ca0 <mpfr_atan2@plt>
    6dfc:	ldr	w3, [sp, #16]
    6e00:	sub	x0, x29, #0x28
    6e04:	mov	w2, #0x1                   	// #1
    6e08:	mov	x1, x21
    6e0c:	bl	4ee0 <mpfr_add_ui@plt>
    6e10:	ldur	x24, [x29, #-24]
    6e14:	cmp	x24, x20
    6e18:	b.gt	6e2c <mpc_atan@@Base+0x4a8>
    6e1c:	cmp	x24, x27
    6e20:	b.ne	6cd4 <mpc_atan@@Base+0x350>  // b.any
    6e24:	bl	4b00 <mpfr_set_erangeflag@plt>
    6e28:	b	6cd4 <mpc_atan@@Base+0x350>
    6e2c:	ldur	w8, [x29, #-32]
    6e30:	cbnz	w8, 6cec <mpc_atan@@Base+0x368>
    6e34:	b	6cd4 <mpc_atan@@Base+0x350>
    6e38:	ldr	w8, [sp, #12]
    6e3c:	ldr	x23, [x19, #32]
    6e40:	mov	w20, #0x2                   	// #2
    6e44:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    6e48:	cmp	w8, #0x10
    6e4c:	cinc	x24, x23, cc  // cc = lo, ul, last
    6e50:	mov	w26, #0x5                   	// #5
    6e54:	b	6e60 <mpc_atan@@Base+0x4dc>
    6e58:	mov	w0, wzr
    6e5c:	cbnz	w0, 6fd0 <mpc_atan@@Base+0x64c>
    6e60:	mov	x0, x23
    6e64:	bl	4d20 <mpc_ceil_log2@plt>
    6e68:	add	x8, x20, x23
    6e6c:	add	x23, x8, x0
    6e70:	sub	x0, x29, #0x28
    6e74:	mov	x1, x23
    6e78:	bl	4c80 <mpfr_set_prec@plt>
    6e7c:	sub	x0, x29, #0x48
    6e80:	mov	x1, x23
    6e84:	bl	4c80 <mpfr_set_prec@plt>
    6e88:	add	x0, sp, #0x48
    6e8c:	mov	x1, x23
    6e90:	bl	4c80 <mpfr_set_prec@plt>
    6e94:	sub	x0, x29, #0x28
    6e98:	mov	w2, #0x1                   	// #1
    6e9c:	mov	w3, #0x4                   	// #4
    6ea0:	mov	x1, x21
    6ea4:	bl	4ee0 <mpfr_add_ui@plt>
    6ea8:	sub	x0, x29, #0x28
    6eac:	sub	x1, x29, #0x28
    6eb0:	mov	w2, #0x2                   	// #2
    6eb4:	bl	5010 <mpfr_sqr@plt>
    6eb8:	add	x0, sp, #0x48
    6ebc:	mov	w2, #0x2                   	// #2
    6ec0:	mov	x1, x22
    6ec4:	bl	5010 <mpfr_sqr@plt>
    6ec8:	sub	x0, x29, #0x28
    6ecc:	sub	x1, x29, #0x28
    6ed0:	add	x2, sp, #0x48
    6ed4:	mov	w3, #0x2                   	// #2
    6ed8:	bl	4e60 <mpfr_add@plt>
    6edc:	sub	x0, x29, #0x28
    6ee0:	sub	x1, x29, #0x28
    6ee4:	mov	w2, #0x2                   	// #2
    6ee8:	bl	4d80 <mpfr_log@plt>
    6eec:	sub	x0, x29, #0x48
    6ef0:	mov	w1, #0x1                   	// #1
    6ef4:	mov	w3, #0x1                   	// #1
    6ef8:	mov	x2, x21
    6efc:	bl	5430 <mpfr_ui_sub@plt>
    6f00:	sub	x0, x29, #0x48
    6f04:	sub	x1, x29, #0x48
    6f08:	mov	w2, #0x1                   	// #1
    6f0c:	bl	5010 <mpfr_sqr@plt>
    6f10:	add	x0, sp, #0x48
    6f14:	bl	4bb0 <mpfr_nextbelow@plt>
    6f18:	sub	x0, x29, #0x48
    6f1c:	sub	x1, x29, #0x48
    6f20:	add	x2, sp, #0x48
    6f24:	mov	w3, #0x1                   	// #1
    6f28:	bl	4e60 <mpfr_add@plt>
    6f2c:	sub	x0, x29, #0x48
    6f30:	sub	x1, x29, #0x48
    6f34:	mov	w2, #0x1                   	// #1
    6f38:	bl	4d80 <mpfr_log@plt>
    6f3c:	add	x0, sp, #0x48
    6f40:	sub	x1, x29, #0x28
    6f44:	sub	x2, x29, #0x48
    6f48:	mov	w3, #0x2                   	// #2
    6f4c:	bl	4a60 <mpfr_sub@plt>
    6f50:	ldr	x8, [sp, #88]
    6f54:	cmp	x8, x25
    6f58:	b.eq	6e58 <mpc_atan@@Base+0x4d4>  // b.none
    6f5c:	ldur	x9, [x29, #-24]
    6f60:	ldur	x10, [x29, #-56]
    6f64:	cmp	x9, x10
    6f68:	csel	x9, x9, x10, gt
    6f6c:	cmp	x9, #0x2
    6f70:	b.gt	6f84 <mpc_atan@@Base+0x600>
    6f74:	sub	x9, x26, x8
    6f78:	cmp	x8, #0x3
    6f7c:	csinc	x20, x9, xzr, le
    6f80:	b	6f94 <mpc_atan@@Base+0x610>
    6f84:	sub	x8, x9, x8
    6f88:	add	x9, x8, #0x3
    6f8c:	cmn	x8, #0x1
    6f90:	csinc	x20, x9, xzr, ge  // ge = tcont
    6f94:	add	x0, sp, #0x48
    6f98:	add	x1, sp, #0x48
    6f9c:	mov	w2, #0x2                   	// #2
    6fa0:	mov	w3, wzr
    6fa4:	bl	5320 <mpfr_div_2ui@plt>
    6fa8:	ldr	x8, [sp, #88]
    6fac:	cmp	x8, x25
    6fb0:	b.eq	72f4 <mpc_atan@@Base+0x970>  // b.none
    6fb4:	sub	x1, x23, x20
    6fb8:	add	x0, sp, #0x48
    6fbc:	mov	w2, #0x2                   	// #2
    6fc0:	mov	w3, #0x3                   	// #3
    6fc4:	mov	x4, x24
    6fc8:	bl	5450 <mpfr_can_round@plt>
    6fcc:	cbz	w0, 6e60 <mpc_atan@@Base+0x4dc>
    6fd0:	ldr	w3, [sp, #12]
    6fd4:	add	x1, sp, #0x68
    6fd8:	add	x2, sp, #0x48
    6fdc:	mov	x0, x19
    6fe0:	bl	54f0 <mpc_set_fr_fr@plt>
    6fe4:	mov	w19, w0
    6fe8:	sub	x0, x29, #0x28
    6fec:	sub	x1, x29, #0x48
    6ff0:	add	x2, sp, #0x68
    6ff4:	add	x3, sp, #0x48
    6ff8:	mov	x4, xzr
    6ffc:	bl	4e70 <mpfr_clears@plt>
    7000:	b	6c6c <mpc_atan@@Base+0x2e8>
    7004:	mov	x1, #0xffffffffffffffff    	// #-1
    7008:	mov	x0, x21
    700c:	mov	x2, xzr
    7010:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    7014:	neg	w0, w0
    7018:	tbnz	w0, #31, 7178 <mpc_atan@@Base+0x7f4>
    701c:	cbz	w0, 71b8 <mpc_atan@@Base+0x834>
    7020:	sub	x0, x29, #0x28
    7024:	str	w25, [sp, #12]
    7028:	asr	w20, w25, #4
    702c:	bl	4aa0 <mpfr_init@plt>
    7030:	sub	x0, x29, #0x48
    7034:	bl	4aa0 <mpfr_init@plt>
    7038:	mov	x8, x19
    703c:	cmp	w24, #0x0
    7040:	ldr	x24, [x8, #32]!
    7044:	str	w20, [sp, #28]
    7048:	str	x8, [sp, #16]
    704c:	mov	w8, #0x2                   	// #2
    7050:	cinc	w25, w8, lt  // lt = tstop
    7054:	cmp	w20, #0x0
    7058:	cinc	x26, x24, eq  // eq = none
    705c:	mov	w20, #0x1                   	// #1
    7060:	b	706c <mpc_atan@@Base+0x6e8>
    7064:	mov	w23, wzr
    7068:	cbnz	w23, 715c <mpc_atan@@Base+0x7d8>
    706c:	mov	x0, x24
    7070:	bl	4d20 <mpc_ceil_log2@plt>
    7074:	add	x8, x24, x0
    7078:	add	x24, x8, #0x2
    707c:	sub	x0, x29, #0x28
    7080:	mov	x1, x24
    7084:	bl	4c80 <mpfr_set_prec@plt>
    7088:	sub	x0, x29, #0x48
    708c:	mov	x1, x24
    7090:	bl	4c80 <mpfr_set_prec@plt>
    7094:	sub	x0, x29, #0x28
    7098:	mov	w1, #0x1                   	// #1
    709c:	mov	x2, x21
    70a0:	mov	w3, w25
    70a4:	bl	4f70 <mpfr_ui_div@plt>
    70a8:	ldur	x22, [x29, #-24]
    70ac:	mov	w27, w0
    70b0:	sub	x0, x29, #0x48
    70b4:	sub	x1, x29, #0x28
    70b8:	mov	w2, #0x2                   	// #2
    70bc:	bl	5010 <mpfr_sqr@plt>
    70c0:	sub	x0, x29, #0x48
    70c4:	mov	w1, #0x1                   	// #1
    70c8:	mov	x2, xzr
    70cc:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    70d0:	cmp	w0, #0x1
    70d4:	b.ge	7324 <mpc_atan@@Base+0x9a0>  // b.tcont
    70d8:	sub	x0, x29, #0x48
    70dc:	mov	w1, #0x1                   	// #1
    70e0:	mov	x2, xzr
    70e4:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    70e8:	cbz	w0, 7064 <mpc_atan@@Base+0x6e0>
    70ec:	sub	x0, x29, #0x48
    70f0:	sub	x2, x29, #0x48
    70f4:	mov	w1, #0x1                   	// #1
    70f8:	mov	w3, #0x1                   	// #1
    70fc:	mov	w23, #0x1                   	// #1
    7100:	bl	5430 <mpfr_ui_sub@plt>
    7104:	sub	x0, x29, #0x28
    7108:	sub	x1, x29, #0x28
    710c:	mov	w2, w25
    7110:	bl	4d90 <mpfr_atanh@plt>
    7114:	orr	w8, w0, w27
    7118:	cbz	w8, 7068 <mpc_atan@@Base+0x6e4>
    711c:	ldur	x8, [x29, #-24]
    7120:	ldur	x9, [x29, #-56]
    7124:	sub	x0, x29, #0x28
    7128:	mov	w3, #0x1                   	// #1
    712c:	sub	x8, x22, x8
    7130:	sub	x8, x8, x9
    7134:	add	x8, x8, #0x1
    7138:	cmp	x8, #0x0
    713c:	csinc	x8, x20, x8, lt  // lt = tstop
    7140:	sub	x1, x24, x8
    7144:	mov	w2, w25
    7148:	mov	x4, x26
    714c:	bl	5450 <mpfr_can_round@plt>
    7150:	cmp	w0, #0x0
    7154:	cset	w23, ne  // ne = any
    7158:	b	7068 <mpc_atan@@Base+0x6e4>
    715c:	ldr	w8, [sp, #12]
    7160:	and	w1, w8, #0xf
    7164:	tbz	w28, #31, 71fc <mpc_atan@@Base+0x878>
    7168:	cmp	w1, #0x2
    716c:	b.ne	71f0 <mpc_atan@@Base+0x86c>  // b.any
    7170:	mov	w1, #0x3                   	// #3
    7174:	b	71fc <mpc_atan@@Base+0x878>
    7178:	mov	w8, #0x1                   	// #1
    717c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    7180:	str	w8, [x19, #8]
    7184:	str	x9, [x19, #16]
    7188:	tbz	w28, #31, 719c <mpc_atan@@Base+0x818>
    718c:	mov	x0, x19
    7190:	mov	x1, x19
    7194:	mov	w2, wzr
    7198:	bl	4b80 <mpfr_neg@plt>
    719c:	add	x0, x19, #0x20
    71a0:	asr	w2, w25, #4
    71a4:	mov	x1, x21
    71a8:	bl	4d90 <mpfr_atanh@plt>
    71ac:	mov	w19, w0
    71b0:	mov	w8, wzr
    71b4:	b	726c <mpc_atan@@Base+0x8e8>
    71b8:	cmp	w28, #0x0
    71bc:	mov	w20, #0xffffffff            	// #-1
    71c0:	cneg	w1, w20, ge  // ge = tcont
    71c4:	mov	x0, x19
    71c8:	bl	4d10 <mpfr_set_zero@plt>
    71cc:	cmp	w24, #0x0
    71d0:	add	x0, x19, #0x20
    71d4:	cneg	w1, w20, ge  // ge = tcont
    71d8:	bl	5120 <mpfr_set_inf@plt>
    71dc:	mov	w9, wzr
    71e0:	mov	w8, wzr
    71e4:	b	727c <mpc_atan@@Base+0x8f8>
    71e8:	mov	w8, #0x2                   	// #2
    71ec:	b	6ca0 <mpc_atan@@Base+0x31c>
    71f0:	cmp	w1, #0x3
    71f4:	mov	w8, #0x2                   	// #2
    71f8:	csel	w1, w8, w1, eq  // eq = none
    71fc:	mov	x0, x19
    7200:	bl	4a80 <mpfr_const_pi@plt>
    7204:	mov	w20, w0
    7208:	mov	w2, #0x1                   	// #1
    720c:	mov	x0, x19
    7210:	mov	x1, x19
    7214:	mov	w3, wzr
    7218:	bl	5320 <mpfr_div_2ui@plt>
    721c:	tbz	w28, #31, 7234 <mpc_atan@@Base+0x8b0>
    7220:	mov	x0, x19
    7224:	mov	x1, x19
    7228:	mov	w2, wzr
    722c:	neg	w20, w20
    7230:	bl	4b80 <mpfr_neg@plt>
    7234:	ldur	w3, [x29, #-32]
    7238:	ldr	x0, [sp, #16]
    723c:	ldr	w2, [sp, #28]
    7240:	sub	x1, x29, #0x28
    7244:	bl	51d0 <mpfr_set4@plt>
    7248:	mov	w19, w0
    724c:	sub	x0, x29, #0x28
    7250:	bl	4d60 <mpfr_clear@plt>
    7254:	sub	x0, x29, #0x48
    7258:	bl	4d60 <mpfr_clear@plt>
    725c:	cmp	w20, #0x0
    7260:	cset	w8, ne  // ne = any
    7264:	mov	w9, #0x2                   	// #2
    7268:	csel	w8, w9, w8, lt  // lt = tstop
    726c:	lsr	w9, w19, #31
    7270:	cbz	w19, 727c <mpc_atan@@Base+0x8f8>
    7274:	mov	w10, #0x4                   	// #4
    7278:	b	7280 <mpc_atan@@Base+0x8fc>
    727c:	mov	w10, wzr
    7280:	cmp	w9, #0x0
    7284:	mov	w9, #0x8                   	// #8
    7288:	csel	w9, w9, w10, ne  // ne = any
    728c:	orr	w19, w9, w8
    7290:	b	6c6c <mpc_atan@@Base+0x2e8>
    7294:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    7298:	ldr	x8, [x8, #4008]
    729c:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    72a0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    72a4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    72a8:	ldr	x0, [x8]
    72ac:	add	x1, x1, #0x990
    72b0:	add	x2, x2, #0x9f4
    72b4:	add	x4, x4, #0xa39
    72b8:	mov	w3, #0x122                 	// #290
    72bc:	bl	55a0 <fprintf@plt>
    72c0:	bl	5000 <abort@plt>
    72c4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    72c8:	ldr	x8, [x8, #4008]
    72cc:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    72d0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    72d4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    72d8:	ldr	x0, [x8]
    72dc:	add	x1, x1, #0x990
    72e0:	add	x2, x2, #0x9f4
    72e4:	add	x4, x4, #0xa13
    72e8:	mov	w3, #0x113                 	// #275
    72ec:	bl	55a0 <fprintf@plt>
    72f0:	bl	5000 <abort@plt>
    72f4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    72f8:	ldr	x8, [x8, #4008]
    72fc:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    7300:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    7304:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    7308:	ldr	x0, [x8]
    730c:	add	x1, x1, #0x990
    7310:	add	x2, x2, #0x9f4
    7314:	add	x4, x4, #0xa60
    7318:	mov	w3, #0x17b                 	// #379
    731c:	bl	55a0 <fprintf@plt>
    7320:	bl	5000 <abort@plt>
    7324:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    7328:	ldr	x8, [x8, #4008]
    732c:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    7330:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    7334:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    7338:	ldr	x0, [x8]
    733c:	add	x1, x1, #0x990
    7340:	add	x2, x2, #0x9f4
    7344:	add	x4, x4, #0x9fb
    7348:	mov	w3, #0xba                  	// #186
    734c:	bl	55a0 <fprintf@plt>
    7350:	bl	5000 <abort@plt>

0000000000007354 <mpc_atanh@@Base>:
    7354:	sub	sp, sp, #0xd0
    7358:	stp	x29, x30, [sp, #160]
    735c:	stp	x22, x21, [sp, #176]
    7360:	stp	x20, x19, [sp, #192]
    7364:	ldp	q1, q0, [x1, #32]
    7368:	mov	w19, w2
    736c:	mov	x20, x0
    7370:	add	x0, sp, #0x40
    7374:	stp	q1, q0, [sp, #64]
    7378:	ldp	q1, q0, [x1]
    737c:	add	x1, sp, #0x40
    7380:	mov	w2, wzr
    7384:	add	x29, sp, #0xa0
    7388:	stp	q1, q0, [sp, #96]
    738c:	bl	4b80 <mpfr_neg@plt>
    7390:	ldr	x1, [x20, #32]
    7394:	ldr	x2, [x20]
    7398:	mov	x0, sp
    739c:	mov	x22, sp
    73a0:	bl	53c0 <mpc_init3@plt>
    73a4:	asr	w8, w19, #4
    73a8:	mov	w9, #0x2                   	// #2
    73ac:	cmp	w8, #0x3
    73b0:	mov	w10, #0x3                   	// #3
    73b4:	csel	w9, w9, w8, eq  // eq = none
    73b8:	cmp	w8, #0x2
    73bc:	csel	w8, w10, w9, eq  // eq = none
    73c0:	ubfiz	w9, w19, #4, #4
    73c4:	add	w2, w8, w9
    73c8:	mov	x0, sp
    73cc:	add	x1, sp, #0x40
    73d0:	bl	5410 <mpc_atan@plt>
    73d4:	ldp	q0, q1, [sp]
    73d8:	ldp	q2, q3, [sp, #32]
    73dc:	mov	w21, w0
    73e0:	add	x0, x22, #0x20
    73e4:	mov	x1, x0
    73e8:	mov	w2, wzr
    73ec:	stp	q0, q1, [x29, #-32]
    73f0:	stp	q2, q3, [sp]
    73f4:	stp	q0, q1, [sp, #32]
    73f8:	bl	4b80 <mpfr_neg@plt>
    73fc:	mov	x1, sp
    7400:	mov	x0, x20
    7404:	mov	w2, w19
    7408:	bl	5580 <mpc_set@plt>
    740c:	mov	x0, sp
    7410:	bl	4a10 <mpc_clear@plt>
    7414:	asr	w8, w21, #2
    7418:	cmp	w8, #0x0
    741c:	cset	w9, ne  // ne = any
    7420:	cmp	w8, #0x2
    7424:	csel	w8, w8, w9, eq  // eq = none
    7428:	tst	w21, #0x3
    742c:	cset	w9, ne  // ne = any
    7430:	tst	w21, #0x1
    7434:	ldp	x20, x19, [sp, #192]
    7438:	ldp	x22, x21, [sp, #176]
    743c:	ldp	x29, x30, [sp, #160]
    7440:	lsl	w9, w9, #2
    7444:	mov	w10, #0x8                   	// #8
    7448:	csel	w9, w9, w10, eq  // eq = none
    744c:	orr	w0, w8, w9
    7450:	add	sp, sp, #0xd0
    7454:	ret

0000000000007458 <mpc_clear@@Base>:
    7458:	stp	x29, x30, [sp, #-32]!
    745c:	str	x19, [sp, #16]
    7460:	mov	x29, sp
    7464:	mov	x19, x0
    7468:	bl	4d60 <mpfr_clear@plt>
    746c:	add	x0, x19, #0x20
    7470:	ldr	x19, [sp, #16]
    7474:	ldp	x29, x30, [sp], #32
    7478:	b	4d60 <mpfr_clear@plt>

000000000000747c <mpc_cmp@@Base>:
    747c:	stp	x29, x30, [sp, #-48]!
    7480:	mov	w2, #0x1                   	// #1
    7484:	str	x21, [sp, #16]
    7488:	stp	x20, x19, [sp, #32]
    748c:	mov	x29, sp
    7490:	mov	x19, x1
    7494:	mov	x20, x0
    7498:	bl	53a0 <mpfr_cmp3@plt>
    749c:	mov	w21, w0
    74a0:	add	x0, x20, #0x20
    74a4:	add	x1, x19, #0x20
    74a8:	mov	w2, #0x1                   	// #1
    74ac:	bl	53a0 <mpfr_cmp3@plt>
    74b0:	cmp	w21, #0x0
    74b4:	mov	w8, #0x2                   	// #2
    74b8:	cset	w9, ne  // ne = any
    74bc:	csel	w8, w8, w9, lt  // lt = tstop
    74c0:	cmp	w0, #0x0
    74c4:	cset	w9, ne  // ne = any
    74c8:	ldp	x20, x19, [sp, #32]
    74cc:	ldr	x21, [sp, #16]
    74d0:	lsl	w9, w9, #2
    74d4:	mov	w10, #0x8                   	// #8
    74d8:	csel	w9, w10, w9, lt  // lt = tstop
    74dc:	orr	w0, w9, w8
    74e0:	ldp	x29, x30, [sp], #48
    74e4:	ret

00000000000074e8 <mpc_cmp_abs@@Base>:
    74e8:	sub	sp, sp, #0xf0
    74ec:	stp	x29, x30, [sp, #192]
    74f0:	stp	x22, x21, [sp, #208]
    74f4:	stp	x20, x19, [sp, #224]
    74f8:	ldr	x10, [x0, #16]
    74fc:	mov	x12, #0x2                   	// #2
    7500:	movk	x12, #0x8000, lsl #48
    7504:	add	x29, sp, #0xc0
    7508:	cmp	x10, x12
    750c:	b.eq	753c <mpc_cmp_abs@@Base+0x54>  // b.none
    7510:	ldr	x11, [x0, #48]
    7514:	mov	x20, x0
    7518:	cmp	x11, x12
    751c:	b.eq	753c <mpc_cmp_abs@@Base+0x54>  // b.none
    7520:	ldr	x9, [x1, #16]
    7524:	mov	x19, x1
    7528:	cmp	x9, x12
    752c:	b.eq	753c <mpc_cmp_abs@@Base+0x54>  // b.none
    7530:	ldr	x8, [x19, #48]
    7534:	cmp	x8, x12
    7538:	b.ne	7580 <mpc_cmp_abs@@Base+0x98>  // b.any
    753c:	sub	x0, x29, #0x40
    7540:	bl	4aa0 <mpfr_init@plt>
    7544:	sub	x0, x29, #0x40
    7548:	bl	4a40 <mpfr_set_nan@plt>
    754c:	sub	x0, x29, #0x40
    7550:	sub	x1, x29, #0x40
    7554:	mov	w2, #0x1                   	// #1
    7558:	bl	53a0 <mpfr_cmp3@plt>
    755c:	mov	w21, w0
    7560:	sub	x0, x29, #0x40
    7564:	bl	4d60 <mpfr_clear@plt>
    7568:	mov	w0, w21
    756c:	ldp	x20, x19, [sp, #224]
    7570:	ldp	x22, x21, [sp, #208]
    7574:	ldp	x29, x30, [sp, #192]
    7578:	add	sp, sp, #0xf0
    757c:	ret
    7580:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
    7584:	cmp	x10, x12
    7588:	b.eq	7740 <mpc_cmp_abs@@Base+0x258>  // b.none
    758c:	cmp	x11, x12
    7590:	b.eq	7740 <mpc_cmp_abs@@Base+0x258>  // b.none
    7594:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    7598:	cmp	x9, x10
    759c:	mov	w21, #0xffffffff            	// #-1
    75a0:	b.eq	7568 <mpc_cmp_abs@@Base+0x80>  // b.none
    75a4:	cmp	x8, x10
    75a8:	b.eq	7568 <mpc_cmp_abs@@Base+0x80>  // b.none
    75ac:	ldp	q1, q0, [x20, #32]
    75b0:	ldp	q3, q2, [x20]
    75b4:	stp	q1, q0, [x29, #-32]
    75b8:	stp	q3, q2, [x29, #-64]
    75bc:	ldp	q1, q0, [x19, #32]
    75c0:	ldp	q3, q2, [x19]
    75c4:	stp	q1, q0, [sp, #96]
    75c8:	stp	q3, q2, [sp, #64]
    75cc:	ldr	w8, [x20, #8]
    75d0:	tbnz	w8, #31, 7760 <mpc_cmp_abs@@Base+0x278>
    75d4:	ldr	w8, [x20, #40]
    75d8:	tbnz	w8, #31, 7778 <mpc_cmp_abs@@Base+0x290>
    75dc:	ldr	w8, [x19, #8]
    75e0:	tbnz	w8, #31, 7794 <mpc_cmp_abs@@Base+0x2ac>
    75e4:	ldr	w8, [x19, #40]
    75e8:	tbnz	w8, #31, 77ac <mpc_cmp_abs@@Base+0x2c4>
    75ec:	sub	x8, x29, #0x40
    75f0:	add	x19, x8, #0x20
    75f4:	sub	x0, x29, #0x40
    75f8:	mov	w2, #0x1                   	// #1
    75fc:	mov	x1, x19
    7600:	bl	53a0 <mpfr_cmp3@plt>
    7604:	cmp	w0, #0x1
    7608:	b.lt	7618 <mpc_cmp_abs@@Base+0x130>  // b.tstop
    760c:	sub	x0, x29, #0x40
    7610:	mov	x1, x19
    7614:	bl	5090 <mpfr_swap@plt>
    7618:	add	x8, sp, #0x40
    761c:	add	x20, x8, #0x20
    7620:	add	x0, sp, #0x40
    7624:	mov	w2, #0x1                   	// #1
    7628:	mov	x1, x20
    762c:	bl	53a0 <mpfr_cmp3@plt>
    7630:	cmp	w0, #0x1
    7634:	b.lt	7644 <mpc_cmp_abs@@Base+0x15c>  // b.tstop
    7638:	add	x0, sp, #0x40
    763c:	mov	x1, x20
    7640:	bl	5090 <mpfr_swap@plt>
    7644:	sub	x0, x29, #0x40
    7648:	add	x1, sp, #0x40
    764c:	mov	w2, #0x1                   	// #1
    7650:	bl	53a0 <mpfr_cmp3@plt>
    7654:	mov	w22, w0
    7658:	mov	w2, #0x1                   	// #1
    765c:	mov	x0, x19
    7660:	mov	x1, x20
    7664:	bl	53a0 <mpfr_cmp3@plt>
    7668:	mov	w21, w0
    766c:	cbz	w22, 7568 <mpc_cmp_abs@@Base+0x80>
    7670:	cbz	w21, 77c4 <mpc_cmp_abs@@Base+0x2dc>
    7674:	add	x0, sp, #0x20
    7678:	bl	4aa0 <mpfr_init@plt>
    767c:	mov	x0, sp
    7680:	bl	4aa0 <mpfr_init@plt>
    7684:	ldur	x8, [x29, #-64]
    7688:	ldur	x9, [x29, #-32]
    768c:	ldr	x10, [sp, #64]
    7690:	ldr	x11, [sp, #96]
    7694:	cmp	x8, x9
    7698:	csel	x8, x8, x9, gt
    769c:	cmp	x10, x11
    76a0:	csel	x9, x10, x11, gt
    76a4:	mov	x10, #0xf5c3                	// #62915
    76a8:	movk	x10, #0x5c28, lsl #16
    76ac:	cmp	x8, x9
    76b0:	movk	x10, #0xc28f, lsl #32
    76b4:	csel	x8, x8, x9, gt
    76b8:	mov	w9, #0x1388                	// #5000
    76bc:	movk	x10, #0x28f5, lsl #48
    76c0:	cmp	x8, x9
    76c4:	lsr	x8, x8, #2
    76c8:	umulh	x8, x8, x10
    76cc:	lsr	x8, x8, #2
    76d0:	mov	w9, #0x32                  	// #50
    76d4:	csel	x19, x9, x8, lt  // lt = tstop
    76d8:	add	x0, sp, #0x20
    76dc:	mov	x1, x19
    76e0:	bl	4c80 <mpfr_set_prec@plt>
    76e4:	mov	x0, sp
    76e8:	mov	x1, x19
    76ec:	bl	4c80 <mpfr_set_prec@plt>
    76f0:	add	x0, sp, #0x20
    76f4:	sub	x1, x29, #0x40
    76f8:	mov	w2, #0x3                   	// #3
    76fc:	bl	4ea0 <mpc_norm@plt>
    7700:	mov	w22, w0
    7704:	mov	x0, sp
    7708:	add	x1, sp, #0x40
    770c:	mov	w2, #0x3                   	// #3
    7710:	bl	4ea0 <mpc_norm@plt>
    7714:	mov	w20, w0
    7718:	add	x0, sp, #0x20
    771c:	mov	x1, sp
    7720:	mov	w2, #0x1                   	// #1
    7724:	bl	53a0 <mpfr_cmp3@plt>
    7728:	cbnz	w0, 77dc <mpc_cmp_abs@@Base+0x2f4>
    772c:	cbz	w22, 77e4 <mpc_cmp_abs@@Base+0x2fc>
    7730:	lsl	x19, x19, #1
    7734:	cbnz	w20, 76d8 <mpc_cmp_abs@@Base+0x1f0>
    7738:	mov	w21, #0x1                   	// #1
    773c:	b	77ec <mpc_cmp_abs@@Base+0x304>
    7740:	cmp	x9, x12
    7744:	b.ne	7750 <mpc_cmp_abs@@Base+0x268>  // b.any
    7748:	mov	w21, wzr
    774c:	b	7568 <mpc_cmp_abs@@Base+0x80>
    7750:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    7754:	cmp	x8, x9
    7758:	cset	w21, ne  // ne = any
    775c:	b	7568 <mpc_cmp_abs@@Base+0x80>
    7760:	sub	x0, x29, #0x40
    7764:	sub	x1, x29, #0x40
    7768:	mov	w2, wzr
    776c:	bl	4b80 <mpfr_neg@plt>
    7770:	ldr	w8, [x20, #40]
    7774:	tbz	w8, #31, 75dc <mpc_cmp_abs@@Base+0xf4>
    7778:	sub	x8, x29, #0x40
    777c:	add	x0, x8, #0x20
    7780:	mov	x1, x0
    7784:	mov	w2, wzr
    7788:	bl	4b80 <mpfr_neg@plt>
    778c:	ldr	w8, [x19, #8]
    7790:	tbz	w8, #31, 75e4 <mpc_cmp_abs@@Base+0xfc>
    7794:	add	x0, sp, #0x40
    7798:	add	x1, sp, #0x40
    779c:	mov	w2, wzr
    77a0:	bl	4b80 <mpfr_neg@plt>
    77a4:	ldr	w8, [x19, #40]
    77a8:	tbz	w8, #31, 75ec <mpc_cmp_abs@@Base+0x104>
    77ac:	add	x8, sp, #0x40
    77b0:	add	x0, x8, #0x20
    77b4:	mov	x1, x0
    77b8:	mov	w2, wzr
    77bc:	bl	4b80 <mpfr_neg@plt>
    77c0:	b	75ec <mpc_cmp_abs@@Base+0x104>
    77c4:	sub	x0, x29, #0x40
    77c8:	add	x1, sp, #0x40
    77cc:	mov	w2, #0x1                   	// #1
    77d0:	bl	53a0 <mpfr_cmp3@plt>
    77d4:	mov	w21, w0
    77d8:	b	7568 <mpc_cmp_abs@@Base+0x80>
    77dc:	mov	w21, w0
    77e0:	b	77ec <mpc_cmp_abs@@Base+0x304>
    77e4:	cmp	w20, #0x0
    77e8:	csetm	w21, ne  // ne = any
    77ec:	add	x0, sp, #0x20
    77f0:	bl	4d60 <mpfr_clear@plt>
    77f4:	mov	x0, sp
    77f8:	b	7564 <mpc_cmp_abs@@Base+0x7c>

00000000000077fc <mpc_cmp_si_si@@Base>:
    77fc:	stp	x29, x30, [sp, #-48]!
    7800:	stp	x20, x19, [sp, #32]
    7804:	mov	x19, x2
    7808:	mov	x2, xzr
    780c:	str	x21, [sp, #16]
    7810:	mov	x29, sp
    7814:	mov	x20, x0
    7818:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    781c:	mov	w21, w0
    7820:	add	x0, x20, #0x20
    7824:	mov	x1, x19
    7828:	mov	x2, xzr
    782c:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    7830:	cmp	w21, #0x0
    7834:	mov	w8, #0x2                   	// #2
    7838:	cset	w9, ne  // ne = any
    783c:	csel	w8, w8, w9, lt  // lt = tstop
    7840:	cmp	w0, #0x0
    7844:	cset	w9, ne  // ne = any
    7848:	ldp	x20, x19, [sp, #32]
    784c:	ldr	x21, [sp, #16]
    7850:	lsl	w9, w9, #2
    7854:	mov	w10, #0x8                   	// #8
    7858:	csel	w9, w10, w9, lt  // lt = tstop
    785c:	orr	w0, w9, w8
    7860:	ldp	x29, x30, [sp], #48
    7864:	ret

0000000000007868 <mpc_conj@@Base>:
    7868:	stp	x29, x30, [sp, #-48]!
    786c:	stp	x22, x21, [sp, #16]
    7870:	stp	x20, x19, [sp, #32]
    7874:	ldr	w3, [x1, #8]
    7878:	mov	w19, w2
    787c:	and	w2, w2, #0xf
    7880:	mov	x29, sp
    7884:	mov	x20, x1
    7888:	mov	x21, x0
    788c:	bl	51d0 <mpfr_set4@plt>
    7890:	mov	w22, w0
    7894:	add	x0, x21, #0x20
    7898:	add	x1, x20, #0x20
    789c:	asr	w2, w19, #4
    78a0:	bl	4b80 <mpfr_neg@plt>
    78a4:	cmp	w22, #0x0
    78a8:	mov	w8, #0x2                   	// #2
    78ac:	cset	w9, ne  // ne = any
    78b0:	csel	w8, w8, w9, lt  // lt = tstop
    78b4:	cmp	w0, #0x0
    78b8:	cset	w9, ne  // ne = any
    78bc:	ldp	x20, x19, [sp, #32]
    78c0:	ldp	x22, x21, [sp, #16]
    78c4:	lsl	w9, w9, #2
    78c8:	mov	w10, #0x8                   	// #8
    78cc:	csel	w9, w10, w9, lt  // lt = tstop
    78d0:	orr	w0, w9, w8
    78d4:	ldp	x29, x30, [sp], #48
    78d8:	ret

00000000000078dc <mpc_cos@@Base>:
    78dc:	stp	x29, x30, [sp, #-16]!
    78e0:	mov	w4, w2
    78e4:	mov	x2, x1
    78e8:	mov	x1, x0
    78ec:	mov	x0, xzr
    78f0:	mov	w3, wzr
    78f4:	mov	x29, sp
    78f8:	bl	5140 <mpc_sin_cos@plt>
    78fc:	asr	w0, w0, #4
    7900:	ldp	x29, x30, [sp], #16
    7904:	ret

0000000000007908 <mpc_cosh@@Base>:
    7908:	sub	sp, sp, #0x60
    790c:	stp	x29, x30, [sp, #64]
    7910:	stp	x20, x19, [sp, #80]
    7914:	ldp	q1, q0, [x1, #32]
    7918:	mov	w19, w2
    791c:	mov	x20, x0
    7920:	mov	x0, sp
    7924:	stp	q1, q0, [sp]
    7928:	ldp	q1, q0, [x1]
    792c:	mov	x1, sp
    7930:	mov	w2, wzr
    7934:	add	x29, sp, #0x40
    7938:	stp	q1, q0, [sp, #32]
    793c:	bl	4b80 <mpfr_neg@plt>
    7940:	mov	x1, sp
    7944:	mov	x0, x20
    7948:	mov	w2, w19
    794c:	bl	53e0 <mpc_cos@plt>
    7950:	ldp	x20, x19, [sp, #80]
    7954:	ldp	x29, x30, [sp, #64]
    7958:	add	sp, sp, #0x60
    795c:	ret

0000000000007960 <mpc_div_2si@@Base>:
    7960:	stp	x29, x30, [sp, #-64]!
    7964:	stp	x20, x19, [sp, #48]
    7968:	mov	w19, w3
    796c:	and	w3, w3, #0xf
    7970:	str	x23, [sp, #16]
    7974:	stp	x22, x21, [sp, #32]
    7978:	mov	x29, sp
    797c:	mov	x20, x2
    7980:	mov	x21, x1
    7984:	mov	x22, x0
    7988:	bl	5030 <mpfr_div_2si@plt>
    798c:	mov	w23, w0
    7990:	add	x0, x22, #0x20
    7994:	add	x1, x21, #0x20
    7998:	asr	w3, w19, #4
    799c:	mov	x2, x20
    79a0:	bl	5030 <mpfr_div_2si@plt>
    79a4:	cmp	w23, #0x0
    79a8:	mov	w8, #0x2                   	// #2
    79ac:	cset	w9, ne  // ne = any
    79b0:	csel	w8, w8, w9, lt  // lt = tstop
    79b4:	cmp	w0, #0x0
    79b8:	cset	w9, ne  // ne = any
    79bc:	ldp	x20, x19, [sp, #48]
    79c0:	ldp	x22, x21, [sp, #32]
    79c4:	ldr	x23, [sp, #16]
    79c8:	lsl	w9, w9, #2
    79cc:	mov	w10, #0x8                   	// #8
    79d0:	csel	w9, w10, w9, lt  // lt = tstop
    79d4:	orr	w0, w9, w8
    79d8:	ldp	x29, x30, [sp], #64
    79dc:	ret

00000000000079e0 <mpc_div_2ui@@Base>:
    79e0:	stp	x29, x30, [sp, #-64]!
    79e4:	stp	x20, x19, [sp, #48]
    79e8:	mov	w19, w3
    79ec:	and	w3, w3, #0xf
    79f0:	str	x23, [sp, #16]
    79f4:	stp	x22, x21, [sp, #32]
    79f8:	mov	x29, sp
    79fc:	mov	x20, x2
    7a00:	mov	x21, x1
    7a04:	mov	x22, x0
    7a08:	bl	5320 <mpfr_div_2ui@plt>
    7a0c:	mov	w23, w0
    7a10:	add	x0, x22, #0x20
    7a14:	add	x1, x21, #0x20
    7a18:	asr	w3, w19, #4
    7a1c:	mov	x2, x20
    7a20:	bl	5320 <mpfr_div_2ui@plt>
    7a24:	cmp	w23, #0x0
    7a28:	mov	w8, #0x2                   	// #2
    7a2c:	cset	w9, ne  // ne = any
    7a30:	csel	w8, w8, w9, lt  // lt = tstop
    7a34:	cmp	w0, #0x0
    7a38:	cset	w9, ne  // ne = any
    7a3c:	ldp	x20, x19, [sp, #48]
    7a40:	ldp	x22, x21, [sp, #32]
    7a44:	ldr	x23, [sp, #16]
    7a48:	lsl	w9, w9, #2
    7a4c:	mov	w10, #0x8                   	// #8
    7a50:	csel	w9, w10, w9, lt  // lt = tstop
    7a54:	orr	w0, w9, w8
    7a58:	ldp	x29, x30, [sp], #64
    7a5c:	ret

0000000000007a60 <mpc_div@@Base>:
    7a60:	sub	sp, sp, #0x1e0
    7a64:	stp	x29, x30, [sp, #384]
    7a68:	stp	x28, x27, [sp, #400]
    7a6c:	stp	x26, x25, [sp, #416]
    7a70:	stp	x24, x23, [sp, #432]
    7a74:	stp	x22, x21, [sp, #448]
    7a78:	stp	x20, x19, [sp, #464]
    7a7c:	ldr	x9, [x2, #16]
    7a80:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    7a84:	mov	w25, w3
    7a88:	mov	x20, x2
    7a8c:	mov	x21, x1
    7a90:	mov	x19, x0
    7a94:	and	w24, w3, #0xf
    7a98:	cmp	x9, x8
    7a9c:	asr	w23, w3, #4
    7aa0:	add	x29, sp, #0x180
    7aa4:	b.ne	7b0c <mpc_div@@Base+0xac>  // b.any
    7aa8:	ldr	x9, [x20, #48]
    7aac:	cmp	x9, x8
    7ab0:	b.ne	7b0c <mpc_div@@Base+0xac>  // b.any
    7ab4:	ldr	w8, [x20, #8]
    7ab8:	add	x0, sp, #0x90
    7abc:	mov	w1, #0x1                   	// #1
    7ac0:	cmp	w8, #0x0
    7ac4:	mov	w8, #0x1                   	// #1
    7ac8:	cneg	w20, w8, lt  // lt = tstop
    7acc:	bl	5440 <mpfr_init2@plt>
    7ad0:	add	x0, sp, #0x90
    7ad4:	mov	w1, w20
    7ad8:	bl	5120 <mpfr_set_inf@plt>
    7adc:	add	x1, sp, #0x90
    7ae0:	mov	x0, x19
    7ae4:	mov	x2, x21
    7ae8:	mov	w3, w24
    7aec:	bl	4b70 <mpfr_mul@plt>
    7af0:	add	x0, x19, #0x20
    7af4:	add	x2, x21, #0x20
    7af8:	add	x1, sp, #0x90
    7afc:	mov	w3, w23
    7b00:	bl	4b70 <mpfr_mul@plt>
    7b04:	add	x0, sp, #0x90
    7b08:	b	800c <mpc_div@@Base+0x5ac>
    7b0c:	ldr	x9, [x21, #16]
    7b10:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    7b14:	cmp	x9, x8
    7b18:	b.eq	7b28 <mpc_div@@Base+0xc8>  // b.none
    7b1c:	ldr	x9, [x21, #48]
    7b20:	cmp	x9, x8
    7b24:	b.ne	7b78 <mpc_div@@Base+0x118>  // b.any
    7b28:	mov	x0, x20
    7b2c:	bl	54d0 <mpfr_number_p@plt>
    7b30:	cbz	w0, 7b78 <mpc_div@@Base+0x118>
    7b34:	add	x22, x20, #0x20
    7b38:	mov	x0, x22
    7b3c:	bl	54d0 <mpfr_number_p@plt>
    7b40:	cbz	w0, 7b78 <mpc_div@@Base+0x118>
    7b44:	ldr	x9, [x21, #16]
    7b48:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    7b4c:	cmp	x9, x8
    7b50:	b.ne	7df0 <mpc_div@@Base+0x390>  // b.any
    7b54:	ldr	w9, [x21, #8]
    7b58:	cmp	w9, #0x0
    7b5c:	mov	w9, #0x1                   	// #1
    7b60:	cneg	w23, w9, lt  // lt = tstop
    7b64:	ldr	x9, [x21, #48]
    7b68:	cmp	x9, x8
    7b6c:	b.eq	7e00 <mpc_div@@Base+0x3a0>  // b.none
    7b70:	mov	w8, wzr
    7b74:	b	7e78 <mpc_div@@Base+0x418>
    7b78:	mov	x0, x21
    7b7c:	bl	54d0 <mpfr_number_p@plt>
    7b80:	cbz	w0, 7c90 <mpc_div@@Base+0x230>
    7b84:	add	x22, x21, #0x20
    7b88:	mov	x0, x22
    7b8c:	bl	54d0 <mpfr_number_p@plt>
    7b90:	cbz	w0, 7c90 <mpc_div@@Base+0x230>
    7b94:	ldr	x8, [x20, #16]
    7b98:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
    7b9c:	cmp	x8, x26
    7ba0:	b.eq	7bb0 <mpc_div@@Base+0x150>  // b.none
    7ba4:	ldr	x8, [x20, #48]
    7ba8:	cmp	x8, x26
    7bac:	b.ne	7c90 <mpc_div@@Base+0x230>  // b.any
    7bb0:	mov	x24, #0x2                   	// #2
    7bb4:	add	x0, sp, #0x90
    7bb8:	mov	w1, #0x2                   	// #2
    7bbc:	movk	x24, #0x8000, lsl #48
    7bc0:	bl	5440 <mpfr_init2@plt>
    7bc4:	sub	x0, x29, #0x48
    7bc8:	mov	w1, #0x2                   	// #2
    7bcc:	bl	5440 <mpfr_init2@plt>
    7bd0:	sub	x0, x29, #0x88
    7bd4:	mov	w1, #0x2                   	// #2
    7bd8:	bl	5440 <mpfr_init2@plt>
    7bdc:	sub	x0, x29, #0xa8
    7be0:	mov	w1, #0x2                   	// #2
    7be4:	bl	5440 <mpfr_init2@plt>
    7be8:	add	x0, sp, #0xb8
    7bec:	mov	w1, #0x2                   	// #2
    7bf0:	bl	5440 <mpfr_init2@plt>
    7bf4:	mov	w23, #0x1                   	// #1
    7bf8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    7bfc:	str	w23, [sp, #192]
    7c00:	str	x8, [sp, #200]
    7c04:	ldr	x1, [x21]
    7c08:	add	x0, sp, #0x50
    7c0c:	bl	5440 <mpfr_init2@plt>
    7c10:	ldr	x1, [x21, #32]
    7c14:	sub	x0, x29, #0x68
    7c18:	bl	5440 <mpfr_init2@plt>
    7c1c:	ldr	x8, [x20, #16]
    7c20:	add	x0, sp, #0x90
    7c24:	mov	x2, xzr
    7c28:	mov	w3, wzr
    7c2c:	cmp	x8, x26
    7c30:	cset	w1, eq  // eq = none
    7c34:	bl	5130 <mpfr_set_ui_2exp@plt>
    7c38:	ldr	x8, [x20, #16]
    7c3c:	cmp	x8, x24
    7c40:	b.eq	7c48 <mpc_div@@Base+0x1e8>  // b.none
    7c44:	ldr	w23, [x20, #8]
    7c48:	add	x0, sp, #0x90
    7c4c:	add	x1, sp, #0x90
    7c50:	mov	w2, wzr
    7c54:	mov	w3, w23
    7c58:	bl	51d0 <mpfr_set4@plt>
    7c5c:	ldr	x8, [x20, #48]
    7c60:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    7c64:	sub	x0, x29, #0x48
    7c68:	mov	x2, xzr
    7c6c:	cmp	x8, x9
    7c70:	cset	w1, eq  // eq = none
    7c74:	mov	w3, wzr
    7c78:	bl	5130 <mpfr_set_ui_2exp@plt>
    7c7c:	ldr	x8, [x20, #48]
    7c80:	cmp	x8, x24
    7c84:	b.ne	7f0c <mpc_div@@Base+0x4ac>  // b.any
    7c88:	mov	w3, #0x1                   	// #1
    7c8c:	b	7f10 <mpc_div@@Base+0x4b0>
    7c90:	mov	x0, x21
    7c94:	bl	54d0 <mpfr_number_p@plt>
    7c98:	cbz	w0, 7de0 <mpc_div@@Base+0x380>
    7c9c:	add	x22, x21, #0x20
    7ca0:	mov	x0, x22
    7ca4:	bl	54d0 <mpfr_number_p@plt>
    7ca8:	cbz	w0, 7de0 <mpc_div@@Base+0x380>
    7cac:	mov	x0, x20
    7cb0:	bl	54d0 <mpfr_number_p@plt>
    7cb4:	cbz	w0, 7de0 <mpc_div@@Base+0x380>
    7cb8:	add	x26, x20, #0x20
    7cbc:	mov	x0, x26
    7cc0:	bl	54d0 <mpfr_number_p@plt>
    7cc4:	cbz	w0, 7de0 <mpc_div@@Base+0x380>
    7cc8:	ldr	x8, [x20, #48]
    7ccc:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
    7cd0:	cmp	x8, x27
    7cd4:	b.ne	8104 <mpc_div@@Base+0x6a4>  // b.any
    7cd8:	ldr	w8, [x21, #8]
    7cdc:	ldr	w10, [x21, #40]
    7ce0:	ldr	w11, [x20, #8]
    7ce4:	ldr	w12, [x20, #40]
    7ce8:	mov	w9, #0x1                   	// #1
    7cec:	cmp	w8, #0x0
    7cf0:	cneg	w8, w9, lt  // lt = tstop
    7cf4:	cmp	w10, #0x0
    7cf8:	str	w8, [sp, #72]
    7cfc:	cneg	w8, w9, lt  // lt = tstop
    7d00:	cmp	w11, #0x0
    7d04:	add	x25, x19, #0x20
    7d08:	cneg	w28, w9, lt  // lt = tstop
    7d0c:	cmp	w12, #0x0
    7d10:	mov	x0, x25
    7d14:	mov	x1, x22
    7d18:	mov	x2, x20
    7d1c:	mov	w3, w23
    7d20:	str	w8, [sp, #68]
    7d24:	cneg	w26, w9, lt  // lt = tstop
    7d28:	bl	5150 <mpfr_div@plt>
    7d2c:	mov	w22, w0
    7d30:	mov	x0, x19
    7d34:	mov	x1, x21
    7d38:	mov	x2, x20
    7d3c:	mov	w3, w24
    7d40:	bl	5150 <mpfr_div@plt>
    7d44:	ldr	x8, [x19, #16]
    7d48:	mov	w20, w0
    7d4c:	cmp	x8, x27
    7d50:	b.ne	7d7c <mpc_div@@Base+0x31c>  // b.any
    7d54:	ldr	w8, [sp, #68]
    7d58:	mov	x0, x19
    7d5c:	mov	x1, x19
    7d60:	mov	w2, wzr
    7d64:	cmp	w8, w26
    7d68:	ldr	w8, [sp, #72]
    7d6c:	ccmp	w8, w28, #0x4, ne  // ne = any
    7d70:	mov	w8, #0xffffffff            	// #-1
    7d74:	cneg	w3, w8, eq  // eq = none
    7d78:	bl	51d0 <mpfr_set4@plt>
    7d7c:	ldr	x8, [x19, #48]
    7d80:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    7d84:	cmp	x8, x9
    7d88:	b.ne	7db4 <mpc_div@@Base+0x354>  // b.any
    7d8c:	ldr	w8, [sp, #72]
    7d90:	mov	x0, x25
    7d94:	mov	x1, x25
    7d98:	mov	w2, wzr
    7d9c:	cmp	w8, w26
    7da0:	ldr	w8, [sp, #68]
    7da4:	ccmp	w8, w28, #0x4, eq  // eq = none
    7da8:	mov	w8, #0xffffffff            	// #-1
    7dac:	cneg	w3, w8, eq  // eq = none
    7db0:	bl	51d0 <mpfr_set4@plt>
    7db4:	cmp	w20, #0x0
    7db8:	mov	w8, #0x2                   	// #2
    7dbc:	cset	w9, ne  // ne = any
    7dc0:	csel	w8, w8, w9, lt  // lt = tstop
    7dc4:	cmp	w22, #0x0
    7dc8:	cset	w9, ne  // ne = any
    7dcc:	lsl	w9, w9, #2
    7dd0:	mov	w10, #0x8                   	// #8
    7dd4:	csel	w9, w10, w9, lt  // lt = tstop
    7dd8:	orr	w0, w8, w9
    7ddc:	b	8088 <mpc_div@@Base+0x628>
    7de0:	mov	x0, x19
    7de4:	bl	4ef0 <mpc_set_nan@plt>
    7de8:	mov	w0, wzr
    7dec:	b	8088 <mpc_div@@Base+0x628>
    7df0:	mov	w23, wzr
    7df4:	ldr	x9, [x21, #48]
    7df8:	cmp	x9, x8
    7dfc:	b.ne	7b70 <mpc_div@@Base+0x110>  // b.any
    7e00:	ldr	w21, [x21, #40]
    7e04:	mov	w8, #0x1                   	// #1
    7e08:	cmp	w21, #0x0
    7e0c:	cneg	w8, w8, lt  // lt = tstop
    7e10:	cbz	w23, 7e78 <mpc_div@@Base+0x418>
    7e14:	add	x0, sp, #0x90
    7e18:	mov	w1, #0x2                   	// #2
    7e1c:	bl	5440 <mpfr_init2@plt>
    7e20:	add	x0, sp, #0x90
    7e24:	cmp	w23, #0x1
    7e28:	b.ne	80a8 <mpc_div@@Base+0x648>  // b.any
    7e2c:	mov	x1, x20
    7e30:	mov	x2, x22
    7e34:	mov	w3, wzr
    7e38:	tbnz	w21, #31, 85f8 <mpc_div@@Base+0xb98>
    7e3c:	bl	4e60 <mpfr_add@plt>
    7e40:	ldr	w8, [sp, #152]
    7e44:	ldr	x9, [sp, #160]
    7e48:	mov	w23, #0x1                   	// #1
    7e4c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    7e50:	cmp	w8, #0x0
    7e54:	cneg	w8, w23, lt  // lt = tstop
    7e58:	cmp	x9, x10
    7e5c:	add	x0, sp, #0x90
    7e60:	mov	x1, x20
    7e64:	mov	x2, x22
    7e68:	mov	w3, wzr
    7e6c:	csel	w21, wzr, w8, eq  // eq = none
    7e70:	bl	4a60 <mpfr_sub@plt>
    7e74:	b	80f0 <mpc_div@@Base+0x690>
    7e78:	ldr	x9, [x20, #16]
    7e7c:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    7e80:	cmp	x9, x12
    7e84:	b.ne	8018 <mpc_div@@Base+0x5b8>  // b.any
    7e88:	mov	w11, wzr
    7e8c:	ldr	x10, [x20, #48]
    7e90:	cmp	x10, x12
    7e94:	b.eq	8034 <mpc_div@@Base+0x5d4>  // b.none
    7e98:	ldr	w12, [x20, #40]
    7e9c:	cmp	w12, #0x0
    7ea0:	mov	w12, #0x1                   	// #1
    7ea4:	cneg	w12, w12, lt  // lt = tstop
    7ea8:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
    7eac:	cmp	x9, x13
    7eb0:	mul	w9, w11, w23
    7eb4:	b.eq	8048 <mpc_div@@Base+0x5e8>  // b.none
    7eb8:	ldr	w11, [x20, #8]
    7ebc:	cmp	w11, #0x0
    7ec0:	mov	w11, #0x1                   	// #1
    7ec4:	cneg	w11, w11, lt  // lt = tstop
    7ec8:	madd	w21, w12, w8, w9
    7ecc:	cmp	x10, x13
    7ed0:	mul	w8, w11, w8
    7ed4:	b.eq	805c <mpc_div@@Base+0x5fc>  // b.none
    7ed8:	ldr	w9, [x20, #40]
    7edc:	cmp	w9, #0x0
    7ee0:	mov	w9, #0x1                   	// #1
    7ee4:	cneg	w9, w9, lt  // lt = tstop
    7ee8:	msub	w20, w9, w23, w8
    7eec:	mov	x0, x19
    7ef0:	cbnz	w21, 806c <mpc_div@@Base+0x60c>
    7ef4:	bl	4a40 <mpfr_set_nan@plt>
    7ef8:	add	x0, x19, #0x20
    7efc:	cbnz	w20, 807c <mpc_div@@Base+0x61c>
    7f00:	bl	4a40 <mpfr_set_nan@plt>
    7f04:	mov	w0, wzr
    7f08:	b	8088 <mpc_div@@Base+0x628>
    7f0c:	ldr	w3, [x20, #40]
    7f10:	sub	x0, x29, #0x48
    7f14:	sub	x1, x29, #0x48
    7f18:	mov	w2, wzr
    7f1c:	bl	51d0 <mpfr_set4@plt>
    7f20:	add	x0, sp, #0x50
    7f24:	add	x2, sp, #0x90
    7f28:	mov	x1, x21
    7f2c:	mov	w3, wzr
    7f30:	bl	4b70 <mpfr_mul@plt>
    7f34:	sub	x0, x29, #0x68
    7f38:	sub	x2, x29, #0x48
    7f3c:	mov	x1, x22
    7f40:	mov	w3, wzr
    7f44:	bl	4b70 <mpfr_mul@plt>
    7f48:	sub	x0, x29, #0x88
    7f4c:	add	x1, sp, #0x50
    7f50:	sub	x2, x29, #0x68
    7f54:	mov	w3, wzr
    7f58:	bl	4e60 <mpfr_add@plt>
    7f5c:	sub	x0, x29, #0x68
    7f60:	add	x2, sp, #0x90
    7f64:	mov	x1, x22
    7f68:	mov	w3, wzr
    7f6c:	bl	4b70 <mpfr_mul@plt>
    7f70:	add	x0, sp, #0x50
    7f74:	sub	x2, x29, #0x48
    7f78:	mov	x1, x21
    7f7c:	mov	w3, wzr
    7f80:	bl	4b70 <mpfr_mul@plt>
    7f84:	sub	x0, x29, #0xa8
    7f88:	sub	x1, x29, #0x68
    7f8c:	add	x2, sp, #0x50
    7f90:	mov	w3, wzr
    7f94:	bl	4a60 <mpfr_sub@plt>
    7f98:	ldur	x8, [x29, #-120]
    7f9c:	ldur	w9, [x29, #-128]
    7fa0:	add	x1, sp, #0xb8
    7fa4:	mov	x0, x19
    7fa8:	cmp	x8, x24
    7fac:	csinc	w3, w9, wzr, ne  // ne = any
    7fb0:	mov	w2, wzr
    7fb4:	bl	51d0 <mpfr_set4@plt>
    7fb8:	ldur	x8, [x29, #-152]
    7fbc:	ldur	w9, [x29, #-160]
    7fc0:	add	x0, x19, #0x20
    7fc4:	add	x1, sp, #0xb8
    7fc8:	cmp	x8, x24
    7fcc:	csinc	w3, w9, wzr, ne  // ne = any
    7fd0:	mov	w2, wzr
    7fd4:	bl	51d0 <mpfr_set4@plt>
    7fd8:	add	x0, sp, #0x90
    7fdc:	bl	4d60 <mpfr_clear@plt>
    7fe0:	sub	x0, x29, #0x48
    7fe4:	bl	4d60 <mpfr_clear@plt>
    7fe8:	sub	x0, x29, #0x88
    7fec:	bl	4d60 <mpfr_clear@plt>
    7ff0:	sub	x0, x29, #0xa8
    7ff4:	bl	4d60 <mpfr_clear@plt>
    7ff8:	add	x0, sp, #0xb8
    7ffc:	bl	4d60 <mpfr_clear@plt>
    8000:	add	x0, sp, #0x50
    8004:	bl	4d60 <mpfr_clear@plt>
    8008:	sub	x0, x29, #0x68
    800c:	bl	4d60 <mpfr_clear@plt>
    8010:	mov	w0, wzr
    8014:	b	8088 <mpc_div@@Base+0x628>
    8018:	ldr	w10, [x20, #8]
    801c:	cmp	w10, #0x0
    8020:	mov	w10, #0x1                   	// #1
    8024:	cneg	w11, w10, lt  // lt = tstop
    8028:	ldr	x10, [x20, #48]
    802c:	cmp	x10, x12
    8030:	b.ne	7e98 <mpc_div@@Base+0x438>  // b.any
    8034:	mov	w12, wzr
    8038:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
    803c:	cmp	x9, x13
    8040:	mul	w9, w11, w23
    8044:	b.ne	7eb8 <mpc_div@@Base+0x458>  // b.any
    8048:	mov	w11, wzr
    804c:	madd	w21, w12, w8, w9
    8050:	cmp	x10, x13
    8054:	mul	w8, w11, w8
    8058:	b.ne	7ed8 <mpc_div@@Base+0x478>  // b.any
    805c:	mov	w9, wzr
    8060:	msub	w20, wzr, w23, w8
    8064:	mov	x0, x19
    8068:	cbz	w21, 7ef4 <mpc_div@@Base+0x494>
    806c:	mov	w1, w21
    8070:	bl	5120 <mpfr_set_inf@plt>
    8074:	add	x0, x19, #0x20
    8078:	cbz	w20, 7f00 <mpc_div@@Base+0x4a0>
    807c:	mov	w1, w20
    8080:	bl	5120 <mpfr_set_inf@plt>
    8084:	mov	w0, wzr
    8088:	ldp	x20, x19, [sp, #464]
    808c:	ldp	x22, x21, [sp, #448]
    8090:	ldp	x24, x23, [sp, #432]
    8094:	ldp	x26, x25, [sp, #416]
    8098:	ldp	x28, x27, [sp, #400]
    809c:	ldp	x29, x30, [sp, #384]
    80a0:	add	sp, sp, #0x1e0
    80a4:	ret
    80a8:	tbnz	w21, #31, 8644 <mpc_div@@Base+0xbe4>
    80ac:	mov	x1, x22
    80b0:	mov	x2, x20
    80b4:	mov	w3, wzr
    80b8:	bl	4a60 <mpfr_sub@plt>
    80bc:	ldr	w8, [sp, #152]
    80c0:	ldr	x9, [sp, #160]
    80c4:	mov	w23, #0x1                   	// #1
    80c8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    80cc:	cmp	w8, #0x0
    80d0:	cneg	w8, w23, lt  // lt = tstop
    80d4:	cmp	x9, x10
    80d8:	add	x0, sp, #0x90
    80dc:	mov	x1, x20
    80e0:	mov	x2, x22
    80e4:	mov	w3, wzr
    80e8:	csel	w21, wzr, w8, eq  // eq = none
    80ec:	bl	4e60 <mpfr_add@plt>
    80f0:	ldr	w9, [sp, #152]
    80f4:	ldr	x8, [sp, #160]
    80f8:	cmp	w9, #0x0
    80fc:	cneg	w9, w23, lt  // lt = tstop
    8100:	b	869c <mpc_div@@Base+0xc3c>
    8104:	ldr	x8, [x20, #16]
    8108:	cmp	x8, x27
    810c:	b.ne	824c <mpc_div@@Base+0x7ec>  // b.any
    8110:	cmp	x19, x21
    8114:	ldr	x8, [x21, #16]
    8118:	ldr	w9, [x21, #8]
    811c:	cset	w12, eq  // eq = none
    8120:	cmp	x19, x20
    8124:	ldr	w11, [x21, #40]
    8128:	cset	w13, eq  // eq = none
    812c:	orr	w27, w12, w13
    8130:	ldr	w12, [x20, #8]
    8134:	str	x8, [sp, #72]
    8138:	sub	x8, x29, #0x48
    813c:	ldr	w13, [x20, #40]
    8140:	cmp	w27, #0x0
    8144:	mov	w10, #0x1                   	// #1
    8148:	csel	x25, x8, x19, ne  // ne = any
    814c:	cmp	w9, #0x0
    8150:	cneg	w8, w10, lt  // lt = tstop
    8154:	cmp	w11, #0x0
    8158:	str	w8, [sp, #68]
    815c:	cneg	w8, w10, lt  // lt = tstop
    8160:	cmp	w12, #0x0
    8164:	str	w8, [sp, #64]
    8168:	cneg	w8, w10, lt  // lt = tstop
    816c:	cmp	w13, #0x0
    8170:	cneg	w28, w10, lt  // lt = tstop
    8174:	str	w8, [sp, #60]
    8178:	cbz	w27, 818c <mpc_div@@Base+0x72c>
    817c:	ldr	x1, [x19]
    8180:	ldr	x2, [x19, #32]
    8184:	sub	x0, x29, #0x48
    8188:	bl	53c0 <mpc_init3@plt>
    818c:	ldp	q1, q0, [x26]
    8190:	add	x2, sp, #0x90
    8194:	mov	x0, x25
    8198:	mov	x1, x22
    819c:	mov	w3, w24
    81a0:	stp	q1, q0, [sp, #144]
    81a4:	bl	5150 <mpfr_div@plt>
    81a8:	mov	w20, w0
    81ac:	add	x0, sp, #0x90
    81b0:	add	x1, sp, #0x90
    81b4:	mov	w2, wzr
    81b8:	bl	4b80 <mpfr_neg@plt>
    81bc:	add	x0, x25, #0x20
    81c0:	add	x2, sp, #0x90
    81c4:	mov	x1, x21
    81c8:	mov	w3, w23
    81cc:	bl	5150 <mpfr_div@plt>
    81d0:	mov	w21, w0
    81d4:	cbz	w27, 85b0 <mpc_div@@Base+0xb50>
    81d8:	sub	x1, x29, #0x48
    81dc:	mov	x0, x19
    81e0:	mov	w2, wzr
    81e4:	bl	5580 <mpc_set@plt>
    81e8:	sub	x0, x29, #0x48
    81ec:	bl	4a10 <mpc_clear@plt>
    81f0:	ldr	x8, [x19, #16]
    81f4:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
    81f8:	cmp	x8, x22
    81fc:	b.eq	85c0 <mpc_div@@Base+0xb60>  // b.none
    8200:	ldr	x8, [sp, #72]
    8204:	cmp	x8, x22
    8208:	b.ne	8234 <mpc_div@@Base+0x7d4>  // b.any
    820c:	ldr	w8, [sp, #68]
    8210:	add	x0, x19, #0x20
    8214:	mov	x1, x0
    8218:	mov	w2, wzr
    821c:	cmp	w8, w28
    8220:	ldp	w9, w8, [sp, #60]
    8224:	ccmp	w8, w9, #0x4, eq  // eq = none
    8228:	mov	w8, #0xffffffff            	// #-1
    822c:	cneg	w3, w8, eq  // eq = none
    8230:	bl	51d0 <mpfr_set4@plt>
    8234:	cmp	w20, #0x0
    8238:	mov	w8, #0x2                   	// #2
    823c:	cset	w9, ne  // ne = any
    8240:	csel	w8, w8, w9, lt  // lt = tstop
    8244:	cmp	w21, #0x0
    8248:	b	8a0c <mpc_div@@Base+0xfac>
    824c:	mov	x10, x19
    8250:	ldr	x8, [x19]
    8254:	ldr	x9, [x10, #32]!
    8258:	sub	x0, x29, #0x48
    825c:	mov	w1, #0x2                   	// #2
    8260:	sub	x28, x29, #0x48
    8264:	cmp	x8, x9
    8268:	str	x10, [sp, #16]
    826c:	csel	x22, x8, x9, gt
    8270:	bl	4cf0 <mpc_init2@plt>
    8274:	sub	x0, x29, #0x68
    8278:	bl	4aa0 <mpfr_init@plt>
    827c:	ldp	q1, q0, [x20]
    8280:	add	x8, sp, #0x50
    8284:	add	x0, x8, #0x20
    8288:	mov	x1, x0
    828c:	stp	q1, q0, [sp, #80]
    8290:	ldp	q1, q0, [x26]
    8294:	mov	w2, wzr
    8298:	stp	q1, q0, [sp, #112]
    829c:	bl	4b80 <mpfr_neg@plt>
    82a0:	bl	52f0 <mpfr_underflow_p@plt>
    82a4:	str	w0, [sp, #4]
    82a8:	bl	54e0 <mpfr_overflow_p@plt>
    82ac:	mov	w8, wzr
    82b0:	cmp	w24, #0x0
    82b4:	add	x9, x28, #0x20
    82b8:	mov	w28, w8
    82bc:	cset	w8, eq  // eq = none
    82c0:	cmp	w23, #0x0
    82c4:	mov	w27, wzr
    82c8:	mov	w26, wzr
    82cc:	str	x8, [sp, #24]
    82d0:	cset	w8, eq  // eq = none
    82d4:	str	w0, [sp]
    82d8:	str	wzr, [sp, #60]
    82dc:	str	wzr, [sp, #36]
    82e0:	str	wzr, [sp, #72]
    82e4:	str	x9, [sp, #48]
    82e8:	str	x8, [sp, #8]
    82ec:	cmp	w27, #0x1
    82f0:	str	w28, [sp, #40]
    82f4:	b.hi	8308 <mpc_div@@Base+0x8a8>  // b.pmore
    82f8:	mov	x0, x22
    82fc:	bl	4d20 <mpc_ceil_log2@plt>
    8300:	add	x8, x0, #0x5
    8304:	b	8314 <mpc_div@@Base+0x8b4>
    8308:	cmp	x22, #0x0
    830c:	cinc	x8, x22, lt  // lt = tstop
    8310:	asr	x8, x8, #1
    8314:	add	x22, x8, x22
    8318:	sub	x0, x29, #0x48
    831c:	mov	x1, x22
    8320:	str	w26, [sp, #44]
    8324:	bl	4c00 <mpc_set_prec@plt>
    8328:	sub	x0, x29, #0x68
    832c:	mov	x1, x22
    8330:	bl	4c80 <mpfr_set_prec@plt>
    8334:	bl	4e20 <mpfr_clear_underflow@plt>
    8338:	bl	4a50 <mpfr_clear_overflow@plt>
    833c:	sub	x0, x29, #0x68
    8340:	mov	w2, #0x2                   	// #2
    8344:	mov	x1, x20
    8348:	bl	4ea0 <mpc_norm@plt>
    834c:	mov	w28, w0
    8350:	bl	52f0 <mpfr_underflow_p@plt>
    8354:	mov	w23, w0
    8358:	bl	54e0 <mpfr_overflow_p@plt>
    835c:	stp	w0, w23, [sp, #64]
    8360:	cbz	w23, 8374 <mpc_div@@Base+0x914>
    8364:	mov	w8, #0x1                   	// #1
    8368:	stur	w8, [x29, #-96]
    836c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    8370:	stur	x8, [x29, #-88]
    8374:	bl	4e20 <mpfr_clear_underflow@plt>
    8378:	bl	4a50 <mpfr_clear_overflow@plt>
    837c:	sub	x0, x29, #0x48
    8380:	add	x2, sp, #0x50
    8384:	mov	w3, #0x11                  	// #17
    8388:	mov	x1, x21
    838c:	bl	4ed0 <mpc_mul@plt>
    8390:	and	w8, w0, #0x3
    8394:	tst	w0, #0x3
    8398:	asr	w9, w0, #2
    839c:	cset	w10, ne  // ne = any
    83a0:	cmp	w8, #0x2
    83a4:	csinv	w23, w10, wzr, ne  // ne = any
    83a8:	cmp	w9, #0x0
    83ac:	cset	w8, ne  // ne = any
    83b0:	cmp	w9, #0x2
    83b4:	csinv	w26, w8, wzr, ne  // ne = any
    83b8:	bl	52f0 <mpfr_underflow_p@plt>
    83bc:	mov	w24, w0
    83c0:	bl	54e0 <mpfr_overflow_p@plt>
    83c4:	cbnz	w0, 86bc <mpc_div@@Base+0xc5c>
    83c8:	cbnz	w28, 83d4 <mpc_div@@Base+0x974>
    83cc:	cbz	w23, 8518 <mpc_div@@Base+0xab8>
    83d0:	cbz	w26, 8518 <mpc_div@@Base+0xab8>
    83d4:	sub	x0, x29, #0x68
    83d8:	sub	x2, x29, #0x68
    83dc:	mov	w1, #0x1                   	// #1
    83e0:	mov	w3, #0x1                   	// #1
    83e4:	bl	4f70 <mpfr_ui_div@plt>
    83e8:	orr	w8, w0, w28
    83ec:	cbz	w8, 8414 <mpc_div@@Base+0x9b4>
    83f0:	ldur	x8, [x29, #-56]
    83f4:	ldur	x9, [x29, #-24]
    83f8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    83fc:	cmp	x8, x10
    8400:	cset	w8, ne  // ne = any
    8404:	cmp	x9, x10
    8408:	orr	w23, w23, w8
    840c:	cset	w8, ne  // ne = any
    8410:	orr	w26, w26, w8
    8414:	bl	4e20 <mpfr_clear_underflow@plt>
    8418:	bl	4a50 <mpfr_clear_overflow@plt>
    841c:	sub	x0, x29, #0x48
    8420:	sub	x1, x29, #0x48
    8424:	sub	x2, x29, #0x68
    8428:	mov	w3, #0x1                   	// #1
    842c:	bl	4b70 <mpfr_mul@plt>
    8430:	orr	w23, w0, w23
    8434:	bl	52f0 <mpfr_underflow_p@plt>
    8438:	mov	w28, w0
    843c:	bl	54e0 <mpfr_overflow_p@plt>
    8440:	str	w0, [sp, #60]
    8444:	cbz	w23, 8478 <mpc_div@@Base+0xa18>
    8448:	ldr	w8, [sp, #60]
    844c:	orr	w8, w8, w28
    8450:	cbnz	w8, 8478 <mpc_div@@Base+0xa18>
    8454:	ldr	x8, [x19]
    8458:	ldr	x9, [sp, #24]
    845c:	sub	x1, x22, #0x4
    8460:	sub	x0, x29, #0x48
    8464:	mov	w3, #0x1                   	// #1
    8468:	add	x4, x8, x9
    846c:	mov	w2, wzr
    8470:	bl	5450 <mpfr_can_round@plt>
    8474:	cbz	w0, 85a4 <mpc_div@@Base+0xb44>
    8478:	bl	4e20 <mpfr_clear_underflow@plt>
    847c:	bl	4a50 <mpfr_clear_overflow@plt>
    8480:	ldr	x0, [sp, #48]
    8484:	sub	x2, x29, #0x68
    8488:	mov	w3, #0x1                   	// #1
    848c:	mov	w8, #0x1                   	// #1
    8490:	mov	x1, x0
    8494:	str	w8, [sp, #72]
    8498:	bl	4b70 <mpfr_mul@plt>
    849c:	orr	w23, w0, w26
    84a0:	bl	52f0 <mpfr_underflow_p@plt>
    84a4:	mov	w26, w0
    84a8:	bl	54e0 <mpfr_overflow_p@plt>
    84ac:	str	w0, [sp, #36]
    84b0:	cbz	w23, 84e8 <mpc_div@@Base+0xa88>
    84b4:	orr	w8, w0, w26
    84b8:	cbnz	w8, 84e8 <mpc_div@@Base+0xa88>
    84bc:	ldp	x9, x8, [sp, #8]
    84c0:	ldr	x0, [sp, #48]
    84c4:	sub	x1, x22, #0x4
    84c8:	mov	w3, #0x1                   	// #1
    84cc:	ldr	x8, [x8]
    84d0:	mov	w2, wzr
    84d4:	add	x4, x8, x9
    84d8:	bl	5450 <mpfr_can_round@plt>
    84dc:	cmp	w0, #0x0
    84e0:	cset	w8, ne  // ne = any
    84e4:	str	w8, [sp, #72]
    84e8:	mov	w8, #0x1                   	// #1
    84ec:	ldp	w10, w9, [sp, #68]
    84f0:	cmp	w9, #0x0
    84f4:	ldr	w9, [sp, #64]
    84f8:	orr	w9, w9, w10
    84fc:	orr	w10, w9, w24
    8500:	cset	w9, ne  // ne = any
    8504:	cbnz	w10, 86ec <mpc_div@@Base+0xc8c>
    8508:	and	w8, w8, w9
    850c:	add	w27, w27, #0x1
    8510:	cbz	w8, 82ec <mpc_div@@Base+0x88c>
    8514:	b	86ec <mpc_div@@Base+0xc8c>
    8518:	bl	4e20 <mpfr_clear_underflow@plt>
    851c:	bl	4a50 <mpfr_clear_overflow@plt>
    8520:	sub	x0, x29, #0x48
    8524:	sub	x1, x29, #0x48
    8528:	sub	x2, x29, #0x68
    852c:	mov	w3, #0x1                   	// #1
    8530:	bl	5150 <mpfr_div@plt>
    8534:	orr	w23, w0, w23
    8538:	bl	52f0 <mpfr_underflow_p@plt>
    853c:	mov	w28, w0
    8540:	bl	54e0 <mpfr_overflow_p@plt>
    8544:	str	w0, [sp, #60]
    8548:	cbz	w23, 857c <mpc_div@@Base+0xb1c>
    854c:	ldr	w8, [sp, #60]
    8550:	orr	w8, w8, w28
    8554:	cbnz	w8, 857c <mpc_div@@Base+0xb1c>
    8558:	ldr	x8, [x19]
    855c:	ldr	x9, [sp, #24]
    8560:	sub	x1, x22, #0x4
    8564:	sub	x0, x29, #0x48
    8568:	mov	w3, #0x1                   	// #1
    856c:	add	x4, x8, x9
    8570:	mov	w2, wzr
    8574:	bl	5450 <mpfr_can_round@plt>
    8578:	cbz	w0, 85a4 <mpc_div@@Base+0xb44>
    857c:	bl	4e20 <mpfr_clear_underflow@plt>
    8580:	bl	4a50 <mpfr_clear_overflow@plt>
    8584:	ldr	x0, [sp, #48]
    8588:	sub	x2, x29, #0x68
    858c:	mov	w3, #0x1                   	// #1
    8590:	mov	w8, #0x1                   	// #1
    8594:	mov	x1, x0
    8598:	str	w8, [sp, #72]
    859c:	bl	5150 <mpfr_div@plt>
    85a0:	b	849c <mpc_div@@Base+0xa3c>
    85a4:	ldr	w26, [sp, #44]
    85a8:	mov	w8, wzr
    85ac:	b	84ec <mpc_div@@Base+0xa8c>
    85b0:	ldr	x8, [x19, #16]
    85b4:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
    85b8:	cmp	x8, x22
    85bc:	b.ne	8200 <mpc_div@@Base+0x7a0>  // b.any
    85c0:	ldp	w9, w8, [sp, #60]
    85c4:	mov	x0, x19
    85c8:	mov	x1, x19
    85cc:	mov	w2, wzr
    85d0:	cmp	w8, w28
    85d4:	ldr	w8, [sp, #68]
    85d8:	ccmp	w8, w9, #0x4, ne  // ne = any
    85dc:	mov	w8, #0xffffffff            	// #-1
    85e0:	cneg	w3, w8, eq  // eq = none
    85e4:	bl	51d0 <mpfr_set4@plt>
    85e8:	ldr	x8, [sp, #72]
    85ec:	cmp	x8, x22
    85f0:	b.eq	820c <mpc_div@@Base+0x7ac>  // b.none
    85f4:	b	8234 <mpc_div@@Base+0x7d4>
    85f8:	bl	4a60 <mpfr_sub@plt>
    85fc:	ldr	w8, [sp, #152]
    8600:	ldr	x9, [sp, #160]
    8604:	mov	w10, #0x1                   	// #1
    8608:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    860c:	cmp	w8, #0x0
    8610:	cneg	w8, w10, lt  // lt = tstop
    8614:	cmp	x9, x11
    8618:	add	x0, sp, #0x90
    861c:	mov	x1, x20
    8620:	mov	x2, x22
    8624:	mov	w3, wzr
    8628:	csel	w21, wzr, w8, eq  // eq = none
    862c:	bl	4e60 <mpfr_add@plt>
    8630:	ldr	w9, [sp, #152]
    8634:	ldr	x8, [sp, #160]
    8638:	cmp	w9, #0x0
    863c:	mov	w9, #0xffffffff            	// #-1
    8640:	b	8698 <mpc_div@@Base+0xc38>
    8644:	mov	x1, x20
    8648:	mov	x2, x22
    864c:	mov	w3, wzr
    8650:	bl	4e60 <mpfr_add@plt>
    8654:	ldr	w8, [sp, #152]
    8658:	ldr	x9, [sp, #160]
    865c:	mov	w10, #0xffffffff            	// #-1
    8660:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    8664:	cmp	w8, #0x0
    8668:	cneg	w8, w10, lt  // lt = tstop
    866c:	cmp	x9, x11
    8670:	add	x0, sp, #0x90
    8674:	mov	x1, x22
    8678:	mov	x2, x20
    867c:	mov	w3, wzr
    8680:	csel	w21, wzr, w8, eq  // eq = none
    8684:	bl	4a60 <mpfr_sub@plt>
    8688:	ldr	w9, [sp, #152]
    868c:	ldr	x8, [sp, #160]
    8690:	cmp	w9, #0x0
    8694:	mov	w9, #0x1                   	// #1
    8698:	cneg	w9, w9, lt  // lt = tstop
    869c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    86a0:	cmp	x8, x10
    86a4:	add	x0, sp, #0x90
    86a8:	csel	w20, wzr, w9, eq  // eq = none
    86ac:	bl	4d60 <mpfr_clear@plt>
    86b0:	mov	x0, x19
    86b4:	cbnz	w21, 806c <mpc_div@@Base+0x60c>
    86b8:	b	7ef4 <mpc_div@@Base+0x494>
    86bc:	ldur	x8, [x29, #-56]
    86c0:	mov	x9, #0x2                   	// #2
    86c4:	movk	x9, #0x8000, lsl #48
    86c8:	cmp	x8, x9
    86cc:	b.gt	873c <mpc_div@@Base+0xcdc>
    86d0:	ldr	w27, [sp]
    86d4:	mov	x28, #0x2                   	// #2
    86d8:	movk	x28, #0x8000, lsl #48
    86dc:	cmp	x8, x28
    86e0:	b.ne	87b0 <mpc_div@@Base+0xd50>  // b.any
    86e4:	bl	4b00 <mpfr_set_erangeflag@plt>
    86e8:	b	87b0 <mpc_div@@Base+0xd50>
    86ec:	sub	x1, x29, #0x48
    86f0:	mov	x0, x19
    86f4:	mov	w2, w25
    86f8:	stp	w28, w26, [sp, #40]
    86fc:	bl	5580 <mpc_set@plt>
    8700:	and	w8, w0, #0x3
    8704:	tst	w0, #0x3
    8708:	asr	w9, w0, #2
    870c:	cset	w10, ne  // ne = any
    8710:	cmp	w8, #0x2
    8714:	ldp	w27, w25, [sp]
    8718:	csinv	w23, w10, wzr, ne  // ne = any
    871c:	cmp	w9, #0x0
    8720:	cset	w8, ne  // ne = any
    8724:	cmp	w9, #0x2
    8728:	mov	x28, #0x2                   	// #2
    872c:	mov	w20, wzr
    8730:	csinv	w26, w8, wzr, ne  // ne = any
    8734:	movk	x28, #0x8000, lsl #48
    8738:	b	885c <mpc_div@@Base+0xdfc>
    873c:	ldur	w20, [x29, #-64]
    8740:	ldr	w27, [sp]
    8744:	mov	x28, #0x2                   	// #2
    8748:	movk	x28, #0x8000, lsl #48
    874c:	cmp	w20, #0x1
    8750:	b.lt	8778 <mpc_div@@Base+0xd18>  // b.tstop
    8754:	sub	x0, x29, #0x48
    8758:	bl	4e00 <mpfr_nextabove@plt>
    875c:	ldur	x21, [x29, #-56]
    8760:	sub	x0, x29, #0x48
    8764:	bl	4bb0 <mpfr_nextbelow@plt>
    8768:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    876c:	cmp	x21, x8
    8770:	b.eq	879c <mpc_div@@Base+0xd3c>  // b.none
    8774:	b	87b0 <mpc_div@@Base+0xd50>
    8778:	tbz	w20, #31, 87b0 <mpc_div@@Base+0xd50>
    877c:	sub	x0, x29, #0x48
    8780:	bl	4bb0 <mpfr_nextbelow@plt>
    8784:	ldur	x21, [x29, #-56]
    8788:	sub	x0, x29, #0x48
    878c:	bl	4e00 <mpfr_nextabove@plt>
    8790:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    8794:	cmp	x21, x8
    8798:	b.ne	87b0 <mpc_div@@Base+0xd50>  // b.any
    879c:	sub	x0, x29, #0x48
    87a0:	mov	w1, w20
    87a4:	bl	5120 <mpfr_set_inf@plt>
    87a8:	mov	w8, #0x1                   	// #1
    87ac:	str	w8, [sp, #60]
    87b0:	ldur	x8, [x29, #-24]
    87b4:	mov	x9, #0x2                   	// #2
    87b8:	movk	x9, #0x8000, lsl #48
    87bc:	cmp	x8, x9
    87c0:	b.gt	87d4 <mpc_div@@Base+0xd74>
    87c4:	cmp	x8, x28
    87c8:	b.ne	8844 <mpc_div@@Base+0xde4>  // b.any
    87cc:	bl	4b00 <mpfr_set_erangeflag@plt>
    87d0:	b	8844 <mpc_div@@Base+0xde4>
    87d4:	ldur	w20, [x29, #-32]
    87d8:	cmp	w20, #0x1
    87dc:	b.lt	8808 <mpc_div@@Base+0xda8>  // b.tstop
    87e0:	ldr	x22, [sp, #48]
    87e4:	mov	x0, x22
    87e8:	bl	4e00 <mpfr_nextabove@plt>
    87ec:	ldur	x21, [x29, #-24]
    87f0:	mov	x0, x22
    87f4:	bl	4bb0 <mpfr_nextbelow@plt>
    87f8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    87fc:	cmp	x21, x8
    8800:	b.eq	8830 <mpc_div@@Base+0xdd0>  // b.none
    8804:	b	8844 <mpc_div@@Base+0xde4>
    8808:	ldr	x22, [sp, #48]
    880c:	tbz	w20, #31, 8844 <mpc_div@@Base+0xde4>
    8810:	mov	x0, x22
    8814:	bl	4bb0 <mpfr_nextbelow@plt>
    8818:	ldur	x21, [x29, #-24]
    881c:	mov	x0, x22
    8820:	bl	4e00 <mpfr_nextabove@plt>
    8824:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    8828:	cmp	x21, x8
    882c:	b.ne	8844 <mpc_div@@Base+0xde4>  // b.any
    8830:	mov	x0, x22
    8834:	mov	w1, w20
    8838:	bl	5120 <mpfr_set_inf@plt>
    883c:	mov	w8, #0x1                   	// #1
    8840:	str	w8, [sp, #36]
    8844:	sub	x1, x29, #0x48
    8848:	mov	x0, x19
    884c:	mov	w2, w25
    8850:	bl	5580 <mpc_set@plt>
    8854:	ldr	w25, [sp, #4]
    8858:	mov	w20, #0x1                   	// #1
    885c:	ldr	w8, [sp, #68]
    8860:	cmp	w8, #0x0
    8864:	cset	w8, eq  // eq = none
    8868:	cmp	w24, #0x0
    886c:	cset	w9, ne  // ne = any
    8870:	orr	w21, w8, w9
    8874:	cmp	w21, #0x1
    8878:	b.ne	88c4 <mpc_div@@Base+0xe64>  // b.any
    887c:	ldr	w8, [sp, #60]
    8880:	cbnz	w8, 88c4 <mpc_div@@Base+0xe64>
    8884:	ldr	w8, [sp, #64]
    8888:	eor	w9, w20, #0x1
    888c:	cmp	w8, #0x0
    8890:	cset	w8, ne  // ne = any
    8894:	and	w8, w8, w9
    8898:	tbnz	w8, #0, 88a4 <mpc_div@@Base+0xe44>
    889c:	ldr	w8, [sp, #40]
    88a0:	cbz	w8, 8924 <mpc_div@@Base+0xec4>
    88a4:	ldur	w8, [x29, #-64]
    88a8:	mov	x0, x19
    88ac:	cmp	w8, #0x0
    88b0:	mov	w8, #0xffffffff            	// #-1
    88b4:	cneg	w23, w8, lt  // lt = tstop
    88b8:	neg	w1, w23
    88bc:	bl	4d10 <mpfr_set_zero@plt>
    88c0:	b	8924 <mpc_div@@Base+0xec4>
    88c4:	ldur	x8, [x29, #-56]
    88c8:	mov	x9, #0x2                   	// #2
    88cc:	movk	x9, #0x8000, lsl #48
    88d0:	cmp	x8, x9
    88d4:	b.gt	88ec <mpc_div@@Base+0xe8c>
    88d8:	cmp	x8, x28
    88dc:	b.ne	88e4 <mpc_div@@Base+0xe84>  // b.any
    88e0:	bl	4b00 <mpfr_set_erangeflag@plt>
    88e4:	mov	w1, wzr
    88e8:	b	88f0 <mpc_div@@Base+0xe90>
    88ec:	ldur	w1, [x29, #-64]
    88f0:	mov	x0, x19
    88f4:	bl	5120 <mpfr_set_inf@plt>
    88f8:	ldur	x8, [x29, #-56]
    88fc:	mov	x9, #0x2                   	// #2
    8900:	movk	x9, #0x8000, lsl #48
    8904:	cmp	x8, x9
    8908:	b.gt	8920 <mpc_div@@Base+0xec0>
    890c:	cmp	x8, x28
    8910:	b.ne	8918 <mpc_div@@Base+0xeb8>  // b.any
    8914:	bl	4b00 <mpfr_set_erangeflag@plt>
    8918:	mov	w23, wzr
    891c:	b	8924 <mpc_div@@Base+0xec4>
    8920:	ldur	w23, [x29, #-64]
    8924:	ldr	w8, [sp, #36]
    8928:	cmp	w8, #0x0
    892c:	cset	w8, eq  // eq = none
    8930:	and	w8, w21, w8
    8934:	tbz	w8, #0, 8978 <mpc_div@@Base+0xf18>
    8938:	ldr	w8, [sp, #64]
    893c:	eor	w9, w20, #0x1
    8940:	cmp	w8, #0x0
    8944:	cset	w8, ne  // ne = any
    8948:	and	w8, w8, w9
    894c:	tbnz	w8, #0, 8958 <mpc_div@@Base+0xef8>
    8950:	ldr	w8, [sp, #44]
    8954:	cbz	w8, 89d8 <mpc_div@@Base+0xf78>
    8958:	ldur	w8, [x29, #-32]
    895c:	ldr	x0, [sp, #16]
    8960:	cmp	w8, #0x0
    8964:	mov	w8, #0xffffffff            	// #-1
    8968:	cneg	w26, w8, lt  // lt = tstop
    896c:	neg	w1, w26
    8970:	bl	4d10 <mpfr_set_zero@plt>
    8974:	b	89d8 <mpc_div@@Base+0xf78>
    8978:	ldur	x8, [x29, #-24]
    897c:	mov	x9, #0x2                   	// #2
    8980:	movk	x9, #0x8000, lsl #48
    8984:	cmp	x8, x9
    8988:	b.gt	89a0 <mpc_div@@Base+0xf40>
    898c:	cmp	x8, x28
    8990:	b.ne	8998 <mpc_div@@Base+0xf38>  // b.any
    8994:	bl	4b00 <mpfr_set_erangeflag@plt>
    8998:	mov	w1, wzr
    899c:	b	89a4 <mpc_div@@Base+0xf44>
    89a0:	ldur	w1, [x29, #-32]
    89a4:	ldr	x0, [sp, #16]
    89a8:	bl	5120 <mpfr_set_inf@plt>
    89ac:	ldur	x8, [x29, #-24]
    89b0:	mov	x9, #0x2                   	// #2
    89b4:	movk	x9, #0x8000, lsl #48
    89b8:	cmp	x8, x9
    89bc:	b.gt	89d4 <mpc_div@@Base+0xf74>
    89c0:	cmp	x8, x28
    89c4:	b.ne	89cc <mpc_div@@Base+0xf6c>  // b.any
    89c8:	bl	4b00 <mpfr_set_erangeflag@plt>
    89cc:	mov	w26, wzr
    89d0:	b	89d8 <mpc_div@@Base+0xf78>
    89d4:	ldur	w26, [x29, #-32]
    89d8:	sub	x0, x29, #0x48
    89dc:	bl	4a10 <mpc_clear@plt>
    89e0:	sub	x0, x29, #0x68
    89e4:	bl	4d60 <mpfr_clear@plt>
    89e8:	cbz	w25, 89f0 <mpc_div@@Base+0xf90>
    89ec:	bl	4990 <mpfr_set_underflow@plt>
    89f0:	cbz	w27, 89f8 <mpc_div@@Base+0xf98>
    89f4:	bl	5490 <mpfr_set_overflow@plt>
    89f8:	cmp	w23, #0x0
    89fc:	mov	w8, #0x2                   	// #2
    8a00:	cset	w9, ne  // ne = any
    8a04:	csel	w8, w8, w9, lt  // lt = tstop
    8a08:	cmp	w26, #0x0
    8a0c:	cset	w9, ne  // ne = any
    8a10:	lsl	w9, w9, #2
    8a14:	mov	w10, #0x8                   	// #8
    8a18:	csel	w9, w10, w9, lt  // lt = tstop
    8a1c:	orr	w0, w9, w8
    8a20:	b	8088 <mpc_div@@Base+0x628>

0000000000008a24 <mpc_div_fr@@Base>:
    8a24:	sub	sp, sp, #0x60
    8a28:	stp	x29, x30, [sp, #32]
    8a2c:	stp	x24, x23, [sp, #48]
    8a30:	stp	x22, x21, [sp, #64]
    8a34:	stp	x20, x19, [sp, #80]
    8a38:	mov	x22, x0
    8a3c:	ldr	x8, [x22], #32
    8a40:	mov	x21, x0
    8a44:	mov	x23, x1
    8a48:	mov	x0, sp
    8a4c:	mov	x1, x8
    8a50:	add	x29, sp, #0x20
    8a54:	mov	w19, w3
    8a58:	mov	x20, x2
    8a5c:	bl	5440 <mpfr_init2@plt>
    8a60:	and	w3, w19, #0xf
    8a64:	mov	x0, sp
    8a68:	mov	x1, x23
    8a6c:	mov	x2, x20
    8a70:	bl	5150 <mpfr_div@plt>
    8a74:	mov	w24, w0
    8a78:	add	x1, x23, #0x20
    8a7c:	asr	w3, w19, #4
    8a80:	mov	x0, x22
    8a84:	mov	x2, x20
    8a88:	bl	5150 <mpfr_div@plt>
    8a8c:	ldr	w3, [sp, #8]
    8a90:	mov	w19, w0
    8a94:	mov	x1, sp
    8a98:	mov	x0, x21
    8a9c:	mov	w2, wzr
    8aa0:	bl	51d0 <mpfr_set4@plt>
    8aa4:	mov	x0, sp
    8aa8:	bl	4d60 <mpfr_clear@plt>
    8aac:	cmp	w24, #0x0
    8ab0:	mov	w8, #0x2                   	// #2
    8ab4:	cset	w9, ne  // ne = any
    8ab8:	csel	w8, w8, w9, lt  // lt = tstop
    8abc:	cmp	w19, #0x0
    8ac0:	cset	w9, ne  // ne = any
    8ac4:	ldp	x20, x19, [sp, #80]
    8ac8:	ldp	x22, x21, [sp, #64]
    8acc:	ldp	x24, x23, [sp, #48]
    8ad0:	ldp	x29, x30, [sp, #32]
    8ad4:	lsl	w9, w9, #2
    8ad8:	mov	w10, #0x8                   	// #8
    8adc:	csel	w9, w10, w9, lt  // lt = tstop
    8ae0:	orr	w0, w9, w8
    8ae4:	add	sp, sp, #0x60
    8ae8:	ret

0000000000008aec <mpc_div_ui@@Base>:
    8aec:	stp	x29, x30, [sp, #-64]!
    8af0:	stp	x20, x19, [sp, #48]
    8af4:	mov	w19, w3
    8af8:	and	w3, w3, #0xf
    8afc:	str	x23, [sp, #16]
    8b00:	stp	x22, x21, [sp, #32]
    8b04:	mov	x29, sp
    8b08:	mov	x20, x2
    8b0c:	mov	x21, x1
    8b10:	mov	x22, x0
    8b14:	bl	5550 <mpfr_div_ui@plt>
    8b18:	mov	w23, w0
    8b1c:	add	x0, x22, #0x20
    8b20:	add	x1, x21, #0x20
    8b24:	asr	w3, w19, #4
    8b28:	mov	x2, x20
    8b2c:	bl	5550 <mpfr_div_ui@plt>
    8b30:	cmp	w23, #0x0
    8b34:	mov	w8, #0x2                   	// #2
    8b38:	cset	w9, ne  // ne = any
    8b3c:	csel	w8, w8, w9, lt  // lt = tstop
    8b40:	cmp	w0, #0x0
    8b44:	cset	w9, ne  // ne = any
    8b48:	ldp	x20, x19, [sp, #48]
    8b4c:	ldp	x22, x21, [sp, #32]
    8b50:	ldr	x23, [sp, #16]
    8b54:	lsl	w9, w9, #2
    8b58:	mov	w10, #0x8                   	// #8
    8b5c:	csel	w9, w10, w9, lt  // lt = tstop
    8b60:	orr	w0, w9, w8
    8b64:	ldp	x29, x30, [sp], #64
    8b68:	ret

0000000000008b6c <mpc_exp@@Base>:
    8b6c:	sub	sp, sp, #0xd0
    8b70:	stp	x29, x30, [sp, #112]
    8b74:	stp	x28, x27, [sp, #128]
    8b78:	stp	x26, x25, [sp, #144]
    8b7c:	stp	x24, x23, [sp, #160]
    8b80:	stp	x22, x21, [sp, #176]
    8b84:	stp	x20, x19, [sp, #192]
    8b88:	ldr	x8, [x1, #16]
    8b8c:	mov	x9, #0x2                   	// #2
    8b90:	movk	x9, #0x8000, lsl #48
    8b94:	mov	x21, x1
    8b98:	cmp	x8, x9
    8b9c:	mov	x19, x0
    8ba0:	add	x29, sp, #0x70
    8ba4:	b.ne	8bcc <mpc_exp@@Base+0x60>  // b.any
    8ba8:	ldr	x8, [x21, #48]
    8bac:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    8bb0:	cmp	x8, x9
    8bb4:	b.ne	8d1c <mpc_exp@@Base+0x1b0>  // b.any
    8bb8:	mov	x0, x19
    8bbc:	mov	x1, x21
    8bc0:	mov	w2, wzr
    8bc4:	bl	5580 <mpc_set@plt>
    8bc8:	b	8d30 <mpc_exp@@Base+0x1c4>
    8bcc:	ldr	x9, [x21, #48]
    8bd0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    8bd4:	mov	w22, w2
    8bd8:	add	x20, x21, #0x20
    8bdc:	cmp	x9, x10
    8be0:	b.eq	8c18 <mpc_exp@@Base+0xac>  // b.none
    8be4:	mov	x10, #0x2                   	// #2
    8be8:	movk	x10, #0x8000, lsl #48
    8bec:	cmp	x9, x10
    8bf0:	b.ne	8c48 <mpc_exp@@Base+0xdc>  // b.any
    8bf4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8bf8:	cmp	x8, x9
    8bfc:	b.ne	8d1c <mpc_exp@@Base+0x1b0>  // b.any
    8c00:	ldr	w8, [x21, #8]
    8c04:	tbnz	w8, #31, 8d50 <mpc_exp@@Base+0x1e4>
    8c08:	mov	w1, #0x1                   	// #1
    8c0c:	mov	x0, x19
    8c10:	bl	5120 <mpfr_set_inf@plt>
    8c14:	b	8d24 <mpc_exp@@Base+0x1b8>
    8c18:	and	w2, w22, #0xf
    8c1c:	mov	x0, x19
    8c20:	mov	x1, x21
    8c24:	bl	5230 <mpfr_exp@plt>
    8c28:	ldr	w3, [x21, #40]
    8c2c:	mov	w23, w0
    8c30:	add	x0, x19, #0x20
    8c34:	asr	w2, w22, #4
    8c38:	mov	x1, x20
    8c3c:	bl	51d0 <mpfr_set4@plt>
    8c40:	cmp	w23, #0x0
    8c44:	b	8c88 <mpc_exp@@Base+0x11c>
    8c48:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    8c4c:	cmp	x8, x10
    8c50:	b.eq	8cb0 <mpc_exp@@Base+0x144>  // b.none
    8c54:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    8c58:	cmp	x8, x10
    8c5c:	b.ne	8d10 <mpc_exp@@Base+0x1a4>  // b.any
    8c60:	and	w2, w22, #0xf
    8c64:	mov	x0, x19
    8c68:	mov	x1, x20
    8c6c:	bl	5050 <mpfr_cos@plt>
    8c70:	mov	w21, w0
    8c74:	add	x0, x19, #0x20
    8c78:	asr	w2, w22, #4
    8c7c:	mov	x1, x20
    8c80:	bl	5080 <mpfr_sin@plt>
    8c84:	cmp	w21, #0x0
    8c88:	mov	w8, #0x2                   	// #2
    8c8c:	cset	w9, ne  // ne = any
    8c90:	csel	w8, w8, w9, lt  // lt = tstop
    8c94:	cmp	w0, #0x0
    8c98:	cset	w9, ne  // ne = any
    8c9c:	lsl	w9, w9, #2
    8ca0:	mov	w10, #0x8                   	// #8
    8ca4:	csel	w9, w10, w9, lt  // lt = tstop
    8ca8:	orr	w0, w9, w8
    8cac:	b	8d30 <mpc_exp@@Base+0x1c4>
    8cb0:	sub	x0, x29, #0x20
    8cb4:	mov	w1, #0x2                   	// #2
    8cb8:	bl	5440 <mpfr_init2@plt>
    8cbc:	ldr	w8, [x21, #8]
    8cc0:	tbnz	w8, #31, 8f2c <mpc_exp@@Base+0x3c0>
    8cc4:	sub	x0, x29, #0x20
    8cc8:	mov	w1, #0x1                   	// #1
    8ccc:	bl	5120 <mpfr_set_inf@plt>
    8cd0:	ldr	x8, [x21, #48]
    8cd4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8cd8:	cmp	x8, x9
    8cdc:	b.ne	8f4c <mpc_exp@@Base+0x3e0>  // b.any
    8ce0:	ldur	w3, [x29, #-24]
    8ce4:	ldr	w21, [x21, #8]
    8ce8:	sub	x1, x29, #0x20
    8cec:	mov	x0, x19
    8cf0:	mov	w2, wzr
    8cf4:	bl	51d0 <mpfr_set4@plt>
    8cf8:	mov	w20, w0
    8cfc:	add	x0, x19, #0x20
    8d00:	tbnz	w21, #31, 8fbc <mpc_exp@@Base+0x450>
    8d04:	bl	4a40 <mpfr_set_nan@plt>
    8d08:	mov	w19, wzr
    8d0c:	b	8fd0 <mpc_exp@@Base+0x464>
    8d10:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    8d14:	cmp	x9, x10
    8d18:	b.ne	8d68 <mpc_exp@@Base+0x1fc>  // b.any
    8d1c:	mov	x0, x19
    8d20:	bl	4a40 <mpfr_set_nan@plt>
    8d24:	add	x0, x19, #0x20
    8d28:	bl	4a40 <mpfr_set_nan@plt>
    8d2c:	mov	w0, wzr
    8d30:	ldp	x20, x19, [sp, #192]
    8d34:	ldp	x22, x21, [sp, #176]
    8d38:	ldp	x24, x23, [sp, #160]
    8d3c:	ldp	x26, x25, [sp, #144]
    8d40:	ldp	x28, x27, [sp, #128]
    8d44:	ldp	x29, x30, [sp, #112]
    8d48:	add	sp, sp, #0xd0
    8d4c:	ret
    8d50:	mov	x0, x19
    8d54:	mov	x1, xzr
    8d58:	mov	x2, xzr
    8d5c:	mov	w3, wzr
    8d60:	bl	5040 <mpc_set_ui_ui@plt>
    8d64:	b	8d30 <mpc_exp@@Base+0x1c4>
    8d68:	mov	x25, x19
    8d6c:	ldr	x10, [x19]
    8d70:	ldr	x11, [x25, #32]!
    8d74:	neg	x12, x8
    8d78:	neg	x13, x9
    8d7c:	and	x8, x12, x8, asr #63
    8d80:	cmp	x10, x11
    8d84:	csel	x10, x10, x11, gt
    8d88:	cmp	x8, x13
    8d8c:	csneg	x8, x8, x9, gt
    8d90:	sub	x0, x29, #0x20
    8d94:	mov	w1, #0x2                   	// #2
    8d98:	add	x27, x10, x8
    8d9c:	bl	5440 <mpfr_init2@plt>
    8da0:	add	x0, sp, #0x30
    8da4:	mov	w1, #0x2                   	// #2
    8da8:	bl	5440 <mpfr_init2@plt>
    8dac:	add	x0, sp, #0x10
    8db0:	mov	w1, #0x2                   	// #2
    8db4:	bl	5440 <mpfr_init2@plt>
    8db8:	bl	52f0 <mpfr_underflow_p@plt>
    8dbc:	str	w0, [sp, #8]
    8dc0:	bl	54e0 <mpfr_overflow_p@plt>
    8dc4:	tst	w22, #0xf
    8dc8:	cset	w28, eq  // eq = none
    8dcc:	cmp	w22, #0x10
    8dd0:	and	w26, w22, #0xf
    8dd4:	cset	w23, cc  // cc = lo, ul, last
    8dd8:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
    8ddc:	str	w0, [sp, #12]
    8de0:	mov	x0, x27
    8de4:	bl	4d20 <mpc_ceil_log2@plt>
    8de8:	add	x8, x27, x0
    8dec:	add	x27, x8, #0x5
    8df0:	sub	x0, x29, #0x20
    8df4:	mov	x1, x27
    8df8:	bl	4c80 <mpfr_set_prec@plt>
    8dfc:	add	x0, sp, #0x30
    8e00:	mov	x1, x27
    8e04:	bl	4c80 <mpfr_set_prec@plt>
    8e08:	add	x0, sp, #0x10
    8e0c:	mov	x1, x27
    8e10:	bl	4c80 <mpfr_set_prec@plt>
    8e14:	bl	4a50 <mpfr_clear_overflow@plt>
    8e18:	bl	4e20 <mpfr_clear_underflow@plt>
    8e1c:	sub	x0, x29, #0x20
    8e20:	mov	x1, x21
    8e24:	mov	w2, wzr
    8e28:	bl	5230 <mpfr_exp@plt>
    8e2c:	add	x0, sp, #0x10
    8e30:	add	x1, sp, #0x30
    8e34:	mov	x2, x20
    8e38:	mov	w3, wzr
    8e3c:	bl	5520 <mpfr_sin_cos@plt>
    8e40:	add	x0, sp, #0x30
    8e44:	add	x1, sp, #0x30
    8e48:	sub	x2, x29, #0x20
    8e4c:	mov	w3, wzr
    8e50:	bl	4b70 <mpfr_mul@plt>
    8e54:	bl	54e0 <mpfr_overflow_p@plt>
    8e58:	cbnz	w0, 8e88 <mpc_exp@@Base+0x31c>
    8e5c:	ldur	x8, [x29, #-16]
    8e60:	cmp	x8, x24
    8e64:	b.eq	8e88 <mpc_exp@@Base+0x31c>  // b.none
    8e68:	ldr	x8, [x19]
    8e6c:	sub	x1, x27, #0x2
    8e70:	add	x0, sp, #0x30
    8e74:	mov	w3, #0x1                   	// #1
    8e78:	add	x4, x8, x28
    8e7c:	mov	w2, wzr
    8e80:	bl	5450 <mpfr_can_round@plt>
    8e84:	cbz	w0, 8de0 <mpc_exp@@Base+0x274>
    8e88:	add	x0, sp, #0x10
    8e8c:	add	x1, sp, #0x10
    8e90:	sub	x2, x29, #0x20
    8e94:	mov	w3, wzr
    8e98:	bl	4b70 <mpfr_mul@plt>
    8e9c:	bl	54e0 <mpfr_overflow_p@plt>
    8ea0:	cbnz	w0, 8ed0 <mpc_exp@@Base+0x364>
    8ea4:	ldur	x8, [x29, #-16]
    8ea8:	cmp	x8, x24
    8eac:	b.eq	8ed0 <mpc_exp@@Base+0x364>  // b.none
    8eb0:	ldr	x8, [x25]
    8eb4:	sub	x1, x27, #0x2
    8eb8:	add	x0, sp, #0x10
    8ebc:	mov	w3, #0x1                   	// #1
    8ec0:	add	x4, x8, x23
    8ec4:	mov	w2, wzr
    8ec8:	bl	5450 <mpfr_can_round@plt>
    8ecc:	cbz	w0, 8de0 <mpc_exp@@Base+0x274>
    8ed0:	ldr	w3, [sp, #56]
    8ed4:	add	x1, sp, #0x30
    8ed8:	mov	x0, x19
    8edc:	mov	w2, w26
    8ee0:	bl	51d0 <mpfr_set4@plt>
    8ee4:	ldr	w3, [sp, #24]
    8ee8:	asr	w22, w22, #4
    8eec:	mov	w20, w0
    8ef0:	add	x1, sp, #0x10
    8ef4:	mov	x0, x25
    8ef8:	mov	w2, w22
    8efc:	bl	51d0 <mpfr_set4@plt>
    8f00:	mov	w21, w0
    8f04:	bl	54e0 <mpfr_overflow_p@plt>
    8f08:	cbz	w0, 8ff0 <mpc_exp@@Base+0x484>
    8f0c:	mov	x0, x19
    8f10:	mov	w1, w26
    8f14:	bl	4dd0 <mpc_fix_inf@plt>
    8f18:	mov	w20, w0
    8f1c:	mov	x0, x25
    8f20:	mov	w1, w22
    8f24:	bl	4dd0 <mpc_fix_inf@plt>
    8f28:	b	9014 <mpc_exp@@Base+0x4a8>
    8f2c:	mov	w8, #0x1                   	// #1
    8f30:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    8f34:	stur	w8, [x29, #-24]
    8f38:	stur	x9, [x29, #-16]
    8f3c:	ldr	x8, [x21, #48]
    8f40:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8f44:	cmp	x8, x9
    8f48:	b.eq	8ce0 <mpc_exp@@Base+0x174>  // b.none
    8f4c:	add	x0, sp, #0x30
    8f50:	mov	w1, #0x2                   	// #2
    8f54:	bl	5440 <mpfr_init2@plt>
    8f58:	add	x0, sp, #0x10
    8f5c:	mov	w1, #0x2                   	// #2
    8f60:	bl	5440 <mpfr_init2@plt>
    8f64:	add	x0, sp, #0x10
    8f68:	add	x1, sp, #0x30
    8f6c:	mov	x2, x20
    8f70:	mov	w3, wzr
    8f74:	bl	5520 <mpfr_sin_cos@plt>
    8f78:	ldr	w3, [sp, #56]
    8f7c:	sub	x1, x29, #0x20
    8f80:	mov	x0, x19
    8f84:	mov	w2, wzr
    8f88:	bl	51d0 <mpfr_set4@plt>
    8f8c:	ldr	w3, [sp, #24]
    8f90:	mov	w20, w0
    8f94:	add	x0, x19, #0x20
    8f98:	sub	x1, x29, #0x20
    8f9c:	mov	w2, wzr
    8fa0:	bl	51d0 <mpfr_set4@plt>
    8fa4:	mov	w19, w0
    8fa8:	add	x0, sp, #0x10
    8fac:	bl	4d60 <mpfr_clear@plt>
    8fb0:	add	x0, sp, #0x30
    8fb4:	bl	4d60 <mpfr_clear@plt>
    8fb8:	b	8fd0 <mpc_exp@@Base+0x464>
    8fbc:	ldur	w3, [x29, #-24]
    8fc0:	sub	x1, x29, #0x20
    8fc4:	mov	w2, wzr
    8fc8:	bl	51d0 <mpfr_set4@plt>
    8fcc:	mov	w19, w0
    8fd0:	sub	x0, x29, #0x20
    8fd4:	bl	4d60 <mpfr_clear@plt>
    8fd8:	cmp	w20, #0x0
    8fdc:	mov	w8, #0x2                   	// #2
    8fe0:	cset	w9, ne  // ne = any
    8fe4:	csel	w8, w8, w9, lt  // lt = tstop
    8fe8:	cmp	w19, #0x0
    8fec:	b	905c <mpc_exp@@Base+0x4f0>
    8ff0:	bl	52f0 <mpfr_underflow_p@plt>
    8ff4:	cbz	w0, 9018 <mpc_exp@@Base+0x4ac>
    8ff8:	mov	x0, x19
    8ffc:	mov	w1, w26
    9000:	bl	50d0 <mpc_fix_zero@plt>
    9004:	mov	w20, w0
    9008:	mov	x0, x25
    900c:	mov	w1, w22
    9010:	bl	50d0 <mpc_fix_zero@plt>
    9014:	mov	w21, w0
    9018:	sub	x0, x29, #0x20
    901c:	bl	4d60 <mpfr_clear@plt>
    9020:	add	x0, sp, #0x30
    9024:	bl	4d60 <mpfr_clear@plt>
    9028:	add	x0, sp, #0x10
    902c:	bl	4d60 <mpfr_clear@plt>
    9030:	ldr	w8, [sp, #8]
    9034:	cbz	w8, 903c <mpc_exp@@Base+0x4d0>
    9038:	bl	4990 <mpfr_set_underflow@plt>
    903c:	ldr	w8, [sp, #12]
    9040:	cbz	w8, 9048 <mpc_exp@@Base+0x4dc>
    9044:	bl	5490 <mpfr_set_overflow@plt>
    9048:	cmp	w20, #0x0
    904c:	mov	w8, #0x2                   	// #2
    9050:	cset	w9, ne  // ne = any
    9054:	csel	w8, w8, w9, lt  // lt = tstop
    9058:	cmp	w21, #0x0
    905c:	cset	w9, ne  // ne = any
    9060:	lsl	w9, w9, #2
    9064:	mov	w10, #0x8                   	// #8
    9068:	csel	w9, w10, w9, lt  // lt = tstop
    906c:	orr	w0, w8, w9
    9070:	b	8d30 <mpc_exp@@Base+0x1c4>

0000000000009074 <mpc_fma_naive@@Base>:
    9074:	sub	sp, sp, #0xf0
    9078:	stp	x29, x30, [sp, #160]
    907c:	stp	x24, x23, [sp, #192]
    9080:	stp	x22, x21, [sp, #208]
    9084:	stp	x20, x19, [sp, #224]
    9088:	ldr	x8, [x1]
    908c:	ldr	x9, [x2]
    9090:	add	x29, sp, #0xa0
    9094:	mov	x23, x1
    9098:	mov	x20, x0
    909c:	add	x1, x9, x8
    90a0:	sub	x0, x29, #0x20
    90a4:	str	x25, [sp, #176]
    90a8:	mov	w19, w4
    90ac:	mov	x21, x3
    90b0:	mov	x22, x2
    90b4:	bl	5440 <mpfr_init2@plt>
    90b8:	mov	x24, x22
    90bc:	ldr	x8, [x23]
    90c0:	ldr	x9, [x24, #32]!
    90c4:	sub	x0, x29, #0x40
    90c8:	add	x1, x9, x8
    90cc:	bl	5440 <mpfr_init2@plt>
    90d0:	mov	x25, x23
    90d4:	ldr	x8, [x25, #32]!
    90d8:	ldr	x9, [x22]
    90dc:	add	x0, sp, #0x40
    90e0:	add	x1, x9, x8
    90e4:	bl	5440 <mpfr_init2@plt>
    90e8:	ldr	x8, [x25]
    90ec:	ldr	x9, [x24]
    90f0:	add	x0, sp, #0x20
    90f4:	add	x1, x9, x8
    90f8:	bl	5440 <mpfr_init2@plt>
    90fc:	sub	x0, x29, #0x20
    9100:	mov	w3, #0x1                   	// #1
    9104:	mov	x1, x23
    9108:	mov	x2, x22
    910c:	bl	4b70 <mpfr_mul@plt>
    9110:	sub	x0, x29, #0x40
    9114:	mov	w3, #0x1                   	// #1
    9118:	mov	x1, x23
    911c:	mov	x2, x24
    9120:	bl	4b70 <mpfr_mul@plt>
    9124:	add	x0, sp, #0x40
    9128:	mov	w3, #0x1                   	// #1
    912c:	mov	x1, x25
    9130:	mov	x2, x22
    9134:	bl	4b70 <mpfr_mul@plt>
    9138:	add	x0, sp, #0x20
    913c:	mov	w3, #0x1                   	// #1
    9140:	mov	x1, x25
    9144:	mov	x2, x24
    9148:	bl	4b70 <mpfr_mul@plt>
    914c:	ldur	x10, [x29, #-16]
    9150:	mov	x8, #0x4                   	// #4
    9154:	movk	x8, #0x8000, lsl #48
    9158:	cmp	x10, x8
    915c:	b.lt	921c <mpc_fma_naive@@Base+0x1a8>  // b.tstop
    9160:	ldr	x9, [sp, #48]
    9164:	ldur	x1, [x29, #-32]
    9168:	cmp	x9, x8
    916c:	mov	x8, x1
    9170:	b.lt	9198 <mpc_fma_naive@@Base+0x124>  // b.tstop
    9174:	ldr	x8, [sp, #32]
    9178:	sub	x11, x10, x1
    917c:	cmp	x9, x10
    9180:	csel	x12, x9, x10, gt
    9184:	sub	x8, x9, x8
    9188:	cmp	x11, x8
    918c:	csel	x8, x8, x11, gt
    9190:	sub	x8, x12, x8
    9194:	add	x8, x8, #0x1
    9198:	ldr	x11, [x21, #16]
    919c:	mov	x12, #0x4                   	// #4
    91a0:	movk	x12, #0x8000, lsl #48
    91a4:	cmp	x11, x12
    91a8:	b.lt	91d0 <mpc_fma_naive@@Base+0x15c>  // b.tstop
    91ac:	ldr	x12, [x21]
    91b0:	sub	x13, x10, x1
    91b4:	cmp	x11, x10
    91b8:	csel	x10, x11, x10, gt
    91bc:	sub	x12, x11, x12
    91c0:	cmp	x13, x12
    91c4:	csel	x11, x12, x13, gt
    91c8:	sub	x10, x10, x11
    91cc:	add	x1, x10, #0x1
    91d0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    91d4:	cmp	x9, x10
    91d8:	b.le	9234 <mpc_fma_naive@@Base+0x1c0>
    91dc:	ldr	x10, [x21, #16]
    91e0:	ldr	x23, [sp, #32]
    91e4:	mov	x11, #0x4                   	// #4
    91e8:	movk	x11, #0x8000, lsl #48
    91ec:	cmp	x10, x11
    91f0:	b.lt	9238 <mpc_fma_naive@@Base+0x1c4>  // b.tstop
    91f4:	ldr	x11, [x21]
    91f8:	sub	x12, x9, x23
    91fc:	cmp	x10, x9
    9200:	csel	x9, x10, x9, gt
    9204:	sub	x11, x10, x11
    9208:	cmp	x12, x11
    920c:	csel	x10, x11, x12, gt
    9210:	sub	x9, x9, x10
    9214:	add	x23, x9, #0x1
    9218:	b	9238 <mpc_fma_naive@@Base+0x1c4>
    921c:	ldr	x1, [x21]
    9220:	ldr	x8, [sp, #32]
    9224:	ldr	x9, [sp, #48]
    9228:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    922c:	cmp	x9, x10
    9230:	b.gt	91dc <mpc_fma_naive@@Base+0x168>
    9234:	ldr	x23, [x21]
    9238:	cmp	x8, x1
    923c:	b.gt	927c <mpc_fma_naive@@Base+0x208>
    9240:	cmp	x8, x23
    9244:	b.gt	927c <mpc_fma_naive@@Base+0x208>
    9248:	mov	x0, sp
    924c:	mov	x1, x8
    9250:	bl	5440 <mpfr_init2@plt>
    9254:	mov	x0, sp
    9258:	sub	x1, x29, #0x20
    925c:	add	x2, sp, #0x20
    9260:	mov	w3, #0x1                   	// #1
    9264:	bl	4a60 <mpfr_sub@plt>
    9268:	and	w3, w19, #0xf
    926c:	mov	x1, sp
    9270:	mov	x0, x20
    9274:	mov	x2, x21
    9278:	b	92b4 <mpc_fma_naive@@Base+0x240>
    927c:	mov	x0, sp
    9280:	cmp	x1, x23
    9284:	b.le	92bc <mpc_fma_naive@@Base+0x248>
    9288:	mov	x1, x23
    928c:	bl	5440 <mpfr_init2@plt>
    9290:	mov	x0, sp
    9294:	add	x2, sp, #0x20
    9298:	mov	w3, #0x1                   	// #1
    929c:	mov	x1, x21
    92a0:	bl	4a60 <mpfr_sub@plt>
    92a4:	and	w3, w19, #0xf
    92a8:	mov	x1, sp
    92ac:	sub	x2, x29, #0x20
    92b0:	mov	x0, x20
    92b4:	bl	4e60 <mpfr_add@plt>
    92b8:	b	92e8 <mpc_fma_naive@@Base+0x274>
    92bc:	bl	5440 <mpfr_init2@plt>
    92c0:	mov	x0, sp
    92c4:	sub	x1, x29, #0x20
    92c8:	mov	w3, #0x1                   	// #1
    92cc:	mov	x2, x21
    92d0:	bl	4e60 <mpfr_add@plt>
    92d4:	and	w3, w19, #0xf
    92d8:	mov	x1, sp
    92dc:	add	x2, sp, #0x20
    92e0:	mov	x0, x20
    92e4:	bl	4a60 <mpfr_sub@plt>
    92e8:	ldur	x10, [x29, #-48]
    92ec:	mov	x8, #0x4                   	// #4
    92f0:	movk	x8, #0x8000, lsl #48
    92f4:	mov	w22, w0
    92f8:	cmp	x10, x8
    92fc:	b.lt	93c0 <mpc_fma_naive@@Base+0x34c>  // b.tstop
    9300:	ldr	x9, [sp, #80]
    9304:	ldur	x1, [x29, #-64]
    9308:	cmp	x9, x8
    930c:	mov	x8, x1
    9310:	b.lt	9338 <mpc_fma_naive@@Base+0x2c4>  // b.tstop
    9314:	ldr	x8, [sp, #64]
    9318:	sub	x11, x10, x1
    931c:	cmp	x9, x10
    9320:	csel	x12, x9, x10, gt
    9324:	sub	x8, x9, x8
    9328:	cmp	x11, x8
    932c:	csel	x8, x8, x11, gt
    9330:	sub	x8, x12, x8
    9334:	add	x8, x8, #0x1
    9338:	ldr	x11, [x21, #48]
    933c:	mov	x12, #0x4                   	// #4
    9340:	movk	x12, #0x8000, lsl #48
    9344:	add	x24, x21, #0x20
    9348:	cmp	x11, x12
    934c:	b.lt	9374 <mpc_fma_naive@@Base+0x300>  // b.tstop
    9350:	ldr	x12, [x24]
    9354:	sub	x13, x10, x1
    9358:	cmp	x11, x10
    935c:	csel	x10, x11, x10, gt
    9360:	sub	x12, x11, x12
    9364:	cmp	x13, x12
    9368:	csel	x11, x12, x13, gt
    936c:	sub	x10, x10, x11
    9370:	add	x1, x10, #0x1
    9374:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    9378:	cmp	x9, x10
    937c:	b.le	93dc <mpc_fma_naive@@Base+0x368>
    9380:	ldr	x11, [x21, #48]
    9384:	ldr	x10, [sp, #64]
    9388:	mov	x12, #0x4                   	// #4
    938c:	movk	x12, #0x8000, lsl #48
    9390:	cmp	x11, x12
    9394:	b.lt	93e0 <mpc_fma_naive@@Base+0x36c>  // b.tstop
    9398:	ldr	x12, [x21, #32]
    939c:	sub	x10, x9, x10
    93a0:	cmp	x11, x9
    93a4:	csel	x9, x11, x9, gt
    93a8:	sub	x12, x11, x12
    93ac:	cmp	x10, x12
    93b0:	csel	x10, x12, x10, gt
    93b4:	sub	x9, x9, x10
    93b8:	add	x10, x9, #0x1
    93bc:	b	93e0 <mpc_fma_naive@@Base+0x36c>
    93c0:	mov	x24, x21
    93c4:	ldr	x8, [sp, #64]
    93c8:	ldr	x1, [x24, #32]!
    93cc:	ldr	x9, [sp, #80]
    93d0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    93d4:	cmp	x9, x10
    93d8:	b.gt	9380 <mpc_fma_naive@@Base+0x30c>
    93dc:	ldr	x10, [x21, #32]
    93e0:	cmp	x8, x1
    93e4:	b.gt	9424 <mpc_fma_naive@@Base+0x3b0>
    93e8:	cmp	x8, x10
    93ec:	b.gt	9424 <mpc_fma_naive@@Base+0x3b0>
    93f0:	mov	x0, sp
    93f4:	mov	x1, x8
    93f8:	bl	4c80 <mpfr_set_prec@plt>
    93fc:	mov	x0, sp
    9400:	sub	x1, x29, #0x40
    9404:	add	x2, sp, #0x40
    9408:	mov	w3, #0x1                   	// #1
    940c:	bl	4e60 <mpfr_add@plt>
    9410:	add	x0, x20, #0x20
    9414:	asr	w3, w19, #4
    9418:	mov	x1, sp
    941c:	mov	x2, x24
    9420:	b	9488 <mpc_fma_naive@@Base+0x414>
    9424:	mov	x0, sp
    9428:	cmp	x1, x10
    942c:	b.le	9460 <mpc_fma_naive@@Base+0x3ec>
    9430:	mov	x1, x23
    9434:	bl	4c80 <mpfr_set_prec@plt>
    9438:	mov	x0, sp
    943c:	add	x2, sp, #0x40
    9440:	mov	w3, #0x1                   	// #1
    9444:	mov	x1, x24
    9448:	bl	4e60 <mpfr_add@plt>
    944c:	add	x0, x20, #0x20
    9450:	asr	w3, w19, #4
    9454:	mov	x1, sp
    9458:	sub	x2, x29, #0x40
    945c:	b	9488 <mpc_fma_naive@@Base+0x414>
    9460:	bl	4c80 <mpfr_set_prec@plt>
    9464:	mov	x0, sp
    9468:	sub	x1, x29, #0x40
    946c:	mov	w3, #0x1                   	// #1
    9470:	mov	x2, x24
    9474:	bl	4e60 <mpfr_add@plt>
    9478:	add	x0, x20, #0x20
    947c:	asr	w3, w19, #4
    9480:	mov	x1, sp
    9484:	add	x2, sp, #0x40
    9488:	bl	4e60 <mpfr_add@plt>
    948c:	mov	w19, w0
    9490:	sub	x0, x29, #0x20
    9494:	bl	4d60 <mpfr_clear@plt>
    9498:	sub	x0, x29, #0x40
    949c:	bl	4d60 <mpfr_clear@plt>
    94a0:	add	x0, sp, #0x40
    94a4:	bl	4d60 <mpfr_clear@plt>
    94a8:	add	x0, sp, #0x20
    94ac:	bl	4d60 <mpfr_clear@plt>
    94b0:	mov	x0, sp
    94b4:	bl	4d60 <mpfr_clear@plt>
    94b8:	cmp	w22, #0x0
    94bc:	mov	w8, #0x2                   	// #2
    94c0:	cset	w9, ne  // ne = any
    94c4:	csel	w8, w8, w9, lt  // lt = tstop
    94c8:	cmp	w19, #0x0
    94cc:	cset	w9, ne  // ne = any
    94d0:	ldp	x20, x19, [sp, #224]
    94d4:	ldp	x22, x21, [sp, #208]
    94d8:	ldp	x24, x23, [sp, #192]
    94dc:	ldr	x25, [sp, #176]
    94e0:	ldp	x29, x30, [sp, #160]
    94e4:	lsl	w9, w9, #2
    94e8:	mov	w10, #0x8                   	// #8
    94ec:	csel	w9, w10, w9, lt  // lt = tstop
    94f0:	orr	w0, w9, w8
    94f4:	add	sp, sp, #0xf0
    94f8:	ret

00000000000094fc <mpc_fma@@Base>:
    94fc:	sub	sp, sp, #0xc0
    9500:	stp	x24, x23, [sp, #144]
    9504:	mov	x23, x0
    9508:	mov	x0, x1
    950c:	stp	x29, x30, [sp, #96]
    9510:	stp	x28, x27, [sp, #112]
    9514:	stp	x26, x25, [sp, #128]
    9518:	stp	x22, x21, [sp, #160]
    951c:	stp	x20, x19, [sp, #176]
    9520:	add	x29, sp, #0x60
    9524:	mov	w19, w4
    9528:	mov	x20, x3
    952c:	mov	x21, x2
    9530:	mov	x22, x1
    9534:	bl	54d0 <mpfr_number_p@plt>
    9538:	cbz	w0, 9620 <mpc_fma@@Base+0x124>
    953c:	add	x0, x22, #0x20
    9540:	bl	54d0 <mpfr_number_p@plt>
    9544:	cbz	w0, 9620 <mpc_fma@@Base+0x124>
    9548:	mov	x0, x21
    954c:	bl	54d0 <mpfr_number_p@plt>
    9550:	cbz	w0, 9620 <mpc_fma@@Base+0x124>
    9554:	add	x0, x21, #0x20
    9558:	bl	54d0 <mpfr_number_p@plt>
    955c:	cbz	w0, 9620 <mpc_fma@@Base+0x124>
    9560:	mov	x0, x20
    9564:	bl	54d0 <mpfr_number_p@plt>
    9568:	cbz	w0, 9620 <mpc_fma@@Base+0x124>
    956c:	add	x0, x20, #0x20
    9570:	bl	54d0 <mpfr_number_p@plt>
    9574:	cbz	w0, 9620 <mpc_fma@@Base+0x124>
    9578:	ldr	x25, [x23]
    957c:	ldr	x27, [x23, #32]
    9580:	mov	x0, x25
    9584:	bl	4d20 <mpc_ceil_log2@plt>
    9588:	add	x8, x25, x0
    958c:	mov	x0, x27
    9590:	add	x24, x8, #0xa
    9594:	bl	4d20 <mpc_ceil_log2@plt>
    9598:	add	x8, x27, x0
    959c:	add	x26, x8, #0xa
    95a0:	add	x0, sp, #0x20
    95a4:	mov	x1, x24
    95a8:	mov	x2, x26
    95ac:	bl	53c0 <mpc_init3@plt>
    95b0:	add	x0, sp, #0x20
    95b4:	mov	w3, #0x11                  	// #17
    95b8:	mov	x1, x22
    95bc:	mov	x2, x21
    95c0:	bl	4ed0 <mpc_mul@plt>
    95c4:	ldr	x28, [sp, #48]
    95c8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    95cc:	cmp	x28, x8
    95d0:	b.eq	9600 <mpc_fma@@Base+0x104>  // b.none
    95d4:	mov	x9, x25
    95d8:	ldr	x25, [sp, #80]
    95dc:	tst	w19, #0xf
    95e0:	cinc	x9, x9, eq  // eq = none
    95e4:	cmp	w19, #0x10
    95e8:	add	x10, sp, #0x20
    95ec:	str	x9, [sp, #8]
    95f0:	cinc	x9, x27, cc  // cc = lo, ul, last
    95f4:	cmp	x25, x8
    95f8:	str	x9, [sp]
    95fc:	b.ne	9660 <mpc_fma@@Base+0x164>  // b.any
    9600:	mov	w24, wzr
    9604:	mov	w25, wzr
    9608:	str	wzr, [sp, #28]
    960c:	add	x0, sp, #0x20
    9610:	bl	4a10 <mpc_clear@plt>
    9614:	cbz	w25, 9620 <mpc_fma@@Base+0x124>
    9618:	ldr	w8, [sp, #28]
    961c:	cbnz	w8, 963c <mpc_fma@@Base+0x140>
    9620:	mov	x0, x23
    9624:	mov	x1, x22
    9628:	mov	x2, x21
    962c:	mov	x3, x20
    9630:	mov	w4, w19
    9634:	bl	5560 <mpc_fma_naive@plt>
    9638:	mov	w24, w0
    963c:	mov	w0, w24
    9640:	ldp	x20, x19, [sp, #176]
    9644:	ldp	x22, x21, [sp, #160]
    9648:	ldp	x24, x23, [sp, #144]
    964c:	ldp	x26, x25, [sp, #128]
    9650:	ldp	x28, x27, [sp, #112]
    9654:	ldp	x29, x30, [sp, #96]
    9658:	add	sp, sp, #0xc0
    965c:	ret
    9660:	add	x8, x10, #0x20
    9664:	mov	w27, wzr
    9668:	stp	x8, xzr, [sp, #16]
    966c:	add	x0, sp, #0x20
    9670:	add	x1, sp, #0x20
    9674:	mov	w3, #0x11                  	// #17
    9678:	mov	x2, x20
    967c:	bl	4cd0 <mpc_add@plt>
    9680:	ldr	x8, [sp, #48]
    9684:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    9688:	cmp	x8, x10
    968c:	b.eq	97b8 <mpc_fma@@Base+0x2bc>  // b.none
    9690:	ldr	x9, [sp, #80]
    9694:	cmp	x9, x10
    9698:	b.eq	97b8 <mpc_fma@@Base+0x2bc>  // b.none
    969c:	sub	x8, x28, x8
    96a0:	sub	x9, x25, x9
    96a4:	cmp	x8, #0x1
    96a8:	mov	w10, #0x1                   	// #1
    96ac:	csinc	x28, x10, x8, lt  // lt = tstop
    96b0:	cmp	x9, #0x1
    96b4:	csinc	x25, x10, x9, lt  // lt = tstop
    96b8:	subs	x1, x24, x28
    96bc:	b.ge	96fc <mpc_fma@@Base+0x200>  // b.tcont
    96c0:	mov	w0, wzr
    96c4:	subs	x1, x26, x25
    96c8:	str	w0, [sp, #24]
    96cc:	b.lt	971c <mpc_fma@@Base+0x220>  // b.tstop
    96d0:	ldr	x0, [sp, #16]
    96d4:	ldr	x4, [sp]
    96d8:	mov	w3, #0x1                   	// #1
    96dc:	mov	w2, wzr
    96e0:	bl	5450 <mpfr_can_round@plt>
    96e4:	mov	w8, w0
    96e8:	ldr	w0, [sp, #24]
    96ec:	cbz	w0, 979c <mpc_fma@@Base+0x2a0>
    96f0:	mov	w9, w8
    96f4:	cbz	w8, 9720 <mpc_fma@@Base+0x224>
    96f8:	b	97c4 <mpc_fma@@Base+0x2c8>
    96fc:	ldr	x4, [sp, #8]
    9700:	add	x0, sp, #0x20
    9704:	mov	w3, #0x1                   	// #1
    9708:	mov	w2, wzr
    970c:	bl	5450 <mpfr_can_round@plt>
    9710:	subs	x1, x26, x25
    9714:	str	w0, [sp, #24]
    9718:	b.ge	96d0 <mpc_fma@@Base+0x1d4>  // b.tcont
    971c:	mov	w9, wzr
    9720:	cmp	w27, #0x1
    9724:	str	w9, [sp, #28]
    9728:	b.eq	97ac <mpc_fma@@Base+0x2b0>  // b.none
    972c:	cmp	w0, #0x0
    9730:	ccmp	x28, #0x1, #0x4, eq  // eq = none
    9734:	csel	x8, x28, xzr, gt
    9738:	cmp	w9, #0x0
    973c:	add	x24, x8, x24
    9740:	ccmp	x25, #0x1, #0x4, eq  // eq = none
    9744:	csel	x8, x25, xzr, gt
    9748:	add	x0, sp, #0x20
    974c:	mov	x1, x24
    9750:	add	x26, x8, x26
    9754:	bl	4c80 <mpfr_set_prec@plt>
    9758:	ldr	x0, [sp, #16]
    975c:	mov	x1, x26
    9760:	bl	4c80 <mpfr_set_prec@plt>
    9764:	add	x0, sp, #0x20
    9768:	mov	w3, #0x11                  	// #17
    976c:	mov	x1, x22
    9770:	mov	x2, x21
    9774:	bl	4ed0 <mpc_mul@plt>
    9778:	ldr	x28, [sp, #48]
    977c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    9780:	cmp	x28, x8
    9784:	b.eq	97b8 <mpc_fma@@Base+0x2bc>  // b.none
    9788:	ldr	x25, [sp, #80]
    978c:	mov	w27, #0x1                   	// #1
    9790:	cmp	x25, x8
    9794:	b.ne	966c <mpc_fma@@Base+0x170>  // b.any
    9798:	b	97b8 <mpc_fma@@Base+0x2bc>
    979c:	mov	w9, w8
    97a0:	cmp	w27, #0x1
    97a4:	str	w9, [sp, #28]
    97a8:	b.ne	972c <mpc_fma@@Base+0x230>  // b.any
    97ac:	mov	w24, wzr
    97b0:	mov	w25, w0
    97b4:	b	960c <mpc_fma@@Base+0x110>
    97b8:	ldr	w25, [sp, #24]
    97bc:	mov	w24, wzr
    97c0:	b	960c <mpc_fma@@Base+0x110>
    97c4:	add	x1, sp, #0x20
    97c8:	mov	x0, x23
    97cc:	mov	w2, w19
    97d0:	bl	5580 <mpc_set@plt>
    97d4:	mov	w8, #0x1                   	// #1
    97d8:	mov	w24, w0
    97dc:	mov	w25, #0x1                   	// #1
    97e0:	str	w8, [sp, #28]
    97e4:	b	960c <mpc_fma@@Base+0x110>

00000000000097e8 <mpc_fr_div@@Base>:
    97e8:	sub	sp, sp, #0x70
    97ec:	stp	x29, x30, [sp, #64]
    97f0:	stp	x22, x21, [sp, #80]
    97f4:	stp	x20, x19, [sp, #96]
    97f8:	ldp	q1, q0, [x1]
    97fc:	mov	x8, sp
    9800:	add	x22, x8, #0x20
    9804:	mov	x21, x0
    9808:	mov	x0, x22
    980c:	add	x29, sp, #0x40
    9810:	mov	w19, w3
    9814:	mov	x20, x2
    9818:	stp	q1, q0, [sp]
    981c:	bl	4aa0 <mpfr_init@plt>
    9820:	mov	w8, #0x1                   	// #1
    9824:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    9828:	mov	x1, sp
    982c:	mov	x0, x21
    9830:	mov	x2, x20
    9834:	mov	w3, w19
    9838:	str	w8, [sp, #40]
    983c:	str	x9, [sp, #48]
    9840:	bl	5250 <mpc_div@plt>
    9844:	mov	w19, w0
    9848:	mov	x0, x22
    984c:	bl	4d60 <mpfr_clear@plt>
    9850:	mov	w0, w19
    9854:	ldp	x20, x19, [sp, #96]
    9858:	ldp	x22, x21, [sp, #80]
    985c:	ldp	x29, x30, [sp, #64]
    9860:	add	sp, sp, #0x70
    9864:	ret

0000000000009868 <mpc_fr_sub@@Base>:
    9868:	stp	x29, x30, [sp, #-48]!
    986c:	stp	x20, x19, [sp, #32]
    9870:	mov	w19, w3
    9874:	and	w3, w3, #0xf
    9878:	stp	x22, x21, [sp, #16]
    987c:	mov	x29, sp
    9880:	mov	x20, x2
    9884:	mov	x21, x0
    9888:	bl	4a60 <mpfr_sub@plt>
    988c:	mov	w22, w0
    9890:	add	x0, x21, #0x20
    9894:	add	x1, x20, #0x20
    9898:	asr	w2, w19, #4
    989c:	bl	4b80 <mpfr_neg@plt>
    98a0:	cmp	w22, #0x0
    98a4:	mov	w8, #0x2                   	// #2
    98a8:	cset	w9, ne  // ne = any
    98ac:	csel	w8, w8, w9, lt  // lt = tstop
    98b0:	cmp	w0, #0x0
    98b4:	cset	w9, ne  // ne = any
    98b8:	ldp	x20, x19, [sp, #32]
    98bc:	ldp	x22, x21, [sp, #16]
    98c0:	lsl	w9, w9, #2
    98c4:	mov	w10, #0x8                   	// #8
    98c8:	csel	w9, w10, w9, lt  // lt = tstop
    98cc:	orr	w0, w9, w8
    98d0:	ldp	x29, x30, [sp], #48
    98d4:	ret

00000000000098d8 <mpc_get_prec2@@Base>:
    98d8:	ldr	x8, [x2]
    98dc:	str	x8, [x0]
    98e0:	ldr	x8, [x2, #32]
    98e4:	str	x8, [x1]
    98e8:	ret

00000000000098ec <mpc_get_prec@@Base>:
    98ec:	ldr	x8, [x0]
    98f0:	ldr	x9, [x0, #32]
    98f4:	cmp	x9, x8
    98f8:	csel	x0, x8, xzr, eq  // eq = none
    98fc:	ret

0000000000009900 <mpc_get_version@@Base>:
    9900:	adrp	x0, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9904:	add	x0, x0, #0xa71
    9908:	ret

000000000000990c <mpc_get_dc@@Base>:
    990c:	stp	d9, d8, [sp, #-48]!
    9910:	stp	x20, x19, [sp, #32]
    9914:	mov	w19, w1
    9918:	mov	x20, x0
    991c:	add	x0, x0, #0x20
    9920:	asr	w1, w1, #4
    9924:	stp	x29, x30, [sp, #16]
    9928:	mov	x29, sp
    992c:	bl	4b50 <mpfr_get_d@plt>
    9930:	mov	v8.16b, v0.16b
    9934:	fmov	d0, xzr
    9938:	and	w1, w19, #0xf
    993c:	mov	x0, x20
    9940:	fmul	d9, d8, d0
    9944:	bl	4b50 <mpfr_get_d@plt>
    9948:	ldp	x20, x19, [sp, #32]
    994c:	ldp	x29, x30, [sp, #16]
    9950:	fadd	d0, d9, d0
    9954:	mov	v1.16b, v8.16b
    9958:	ldp	d9, d8, [sp], #48
    995c:	ret

0000000000009960 <mpc_get_ldc@@Base>:
    9960:	sub	sp, sp, #0x40
    9964:	stp	x20, x19, [sp, #48]
    9968:	mov	w19, w1
    996c:	mov	x20, x0
    9970:	add	x0, x0, #0x20
    9974:	asr	w1, w1, #4
    9978:	stp	x29, x30, [sp, #32]
    997c:	add	x29, sp, #0x20
    9980:	bl	5110 <mpfr_get_ld@plt>
    9984:	adrp	x8, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9988:	ldr	q1, [x8, #2688]
    998c:	str	q0, [sp, #16]
    9990:	bl	13120 <mpc_ui_ui_sub@@Base+0xbac>
    9994:	and	w1, w19, #0xf
    9998:	mov	x0, x20
    999c:	str	q0, [sp]
    99a0:	bl	5110 <mpfr_get_ld@plt>
    99a4:	mov	v1.16b, v0.16b
    99a8:	ldr	q0, [sp]
    99ac:	bl	125f8 <mpc_ui_ui_sub@@Base+0x84>
    99b0:	ldr	q1, [sp, #16]
    99b4:	ldp	x20, x19, [sp, #48]
    99b8:	ldp	x29, x30, [sp, #32]
    99bc:	add	sp, sp, #0x40
    99c0:	ret

00000000000099c4 <mpc_get_str@@Base>:
    99c4:	stp	x29, x30, [sp, #-64]!
    99c8:	sub	w8, w0, #0x2
    99cc:	cmp	w8, #0x22
    99d0:	str	x23, [sp, #16]
    99d4:	stp	x22, x21, [sp, #32]
    99d8:	stp	x20, x19, [sp, #48]
    99dc:	mov	x29, sp
    99e0:	b.ls	99ec <mpc_get_str@@Base+0x28>  // b.plast
    99e4:	mov	x21, xzr
    99e8:	b	9a8c <mpc_get_str@@Base+0xc8>
    99ec:	mov	w20, w3
    99f0:	and	w3, w3, #0xf
    99f4:	mov	x22, x2
    99f8:	mov	w21, w0
    99fc:	mov	x23, x1
    9a00:	bl	9ad4 <mpc_get_str@@Base+0x110>
    9a04:	mov	x19, x0
    9a08:	add	x2, x22, #0x20
    9a0c:	asr	w3, w20, #4
    9a10:	mov	w0, w21
    9a14:	mov	x1, x23
    9a18:	bl	9ad4 <mpc_get_str@@Base+0x110>
    9a1c:	mov	x20, x0
    9a20:	mov	x0, x19
    9a24:	bl	4a00 <strlen@plt>
    9a28:	mov	x21, x0
    9a2c:	mov	x0, x20
    9a30:	bl	4a00 <strlen@plt>
    9a34:	add	x8, x21, x0
    9a38:	add	x0, x8, #0x4
    9a3c:	bl	4bf0 <mpc_alloc_str@plt>
    9a40:	cbz	x0, 9aa4 <mpc_get_str@@Base+0xe0>
    9a44:	mov	w8, #0x28                  	// #40
    9a48:	mov	x1, x19
    9a4c:	mov	x21, x0
    9a50:	strh	w8, [x0]
    9a54:	bl	4de0 <strcat@plt>
    9a58:	bl	4a00 <strlen@plt>
    9a5c:	mov	w8, #0x20                  	// #32
    9a60:	strh	w8, [x21, x0]
    9a64:	mov	x0, x21
    9a68:	mov	x1, x20
    9a6c:	bl	4de0 <strcat@plt>
    9a70:	bl	4a00 <strlen@plt>
    9a74:	mov	w8, #0x29                  	// #41
    9a78:	strh	w8, [x21, x0]
    9a7c:	mov	x0, x19
    9a80:	bl	4ff0 <mpc_free_str@plt>
    9a84:	mov	x0, x20
    9a88:	bl	4ff0 <mpc_free_str@plt>
    9a8c:	mov	x0, x21
    9a90:	ldp	x20, x19, [sp, #48]
    9a94:	ldp	x22, x21, [sp, #32]
    9a98:	ldr	x23, [sp, #16]
    9a9c:	ldp	x29, x30, [sp], #64
    9aa0:	ret
    9aa4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    9aa8:	ldr	x8, [x8, #4008]
    9aac:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9ab0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9ab4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9ab8:	ldr	x0, [x8]
    9abc:	add	x1, x1, #0x990
    9ac0:	add	x2, x2, #0xa90
    9ac4:	add	x4, x4, #0xa98
    9ac8:	mov	w3, #0xe0                  	// #224
    9acc:	bl	55a0 <fprintf@plt>
    9ad0:	bl	5000 <abort@plt>
    9ad4:	stp	x29, x30, [sp, #-80]!
    9ad8:	stp	x24, x23, [sp, #32]
    9adc:	stp	x22, x21, [sp, #48]
    9ae0:	stp	x20, x19, [sp, #64]
    9ae4:	ldr	x8, [x2, #16]
    9ae8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    9aec:	mov	x21, x2
    9af0:	str	x25, [sp, #16]
    9af4:	cmp	x8, x9
    9af8:	mov	x29, sp
    9afc:	b.ne	9b30 <mpc_get_str@@Base+0x16c>  // b.any
    9b00:	mov	w0, #0x3                   	// #3
    9b04:	bl	4bf0 <mpc_alloc_str@plt>
    9b08:	ldr	w8, [x21, #8]
    9b0c:	mov	w9, #0x2b                  	// #43
    9b10:	mov	w10, #0x2d                  	// #45
    9b14:	mov	w11, #0x30                  	// #48
    9b18:	cmp	w8, #0x0
    9b1c:	csel	w8, w10, w9, lt  // lt = tstop
    9b20:	mov	x22, x0
    9b24:	strb	w8, [x0]
    9b28:	sturh	w11, [x0, #1]
    9b2c:	b	9cc0 <mpc_get_str@@Base+0x2fc>
    9b30:	mov	w20, w0
    9b34:	mov	w5, w3
    9b38:	mov	x3, x1
    9b3c:	add	x1, x29, #0x18
    9b40:	mov	x0, xzr
    9b44:	mov	w2, w20
    9b48:	mov	x4, x21
    9b4c:	bl	50c0 <mpfr_get_str@plt>
    9b50:	cbz	x0, 9cdc <mpc_get_str@@Base+0x318>
    9b54:	ldr	x22, [x29, #24]
    9b58:	mov	x19, x0
    9b5c:	mov	x0, x21
    9b60:	bl	54d0 <mpfr_number_p@plt>
    9b64:	mov	w21, w0
    9b68:	mov	x0, x19
    9b6c:	bl	4a00 <strlen@plt>
    9b70:	mov	x8, x0
    9b74:	cbz	w21, 9ba0 <mpc_get_str@@Base+0x1dc>
    9b78:	ldrb	w24, [x19]
    9b7c:	sub	x9, x22, #0x1
    9b80:	lsl	x10, x9, #2
    9b84:	cmp	w20, #0x10
    9b88:	csel	x21, x10, x9, eq  // eq = none
    9b8c:	cbz	x21, 9bb8 <mpc_get_str@@Base+0x1f4>
    9b90:	add	x0, x8, #0x5
    9b94:	tbnz	x21, #63, 9bc0 <mpc_get_str@@Base+0x1fc>
    9b98:	mov	x9, x21
    9b9c:	b	9be4 <mpc_get_str@@Base+0x220>
    9ba0:	add	x0, x8, #0x1
    9ba4:	bl	4bf0 <mpc_alloc_str@plt>
    9ba8:	mov	x1, x19
    9bac:	mov	x22, x0
    9bb0:	bl	5340 <strcpy@plt>
    9bb4:	b	9cb8 <mpc_get_str@@Base+0x2f4>
    9bb8:	add	x0, x8, #0x2
    9bbc:	b	9c08 <mpc_get_str@@Base+0x244>
    9bc0:	cmn	x21, #0xb
    9bc4:	b.gt	9be0 <mpc_get_str@@Base+0x21c>
    9bc8:	mov	x9, #0x9999999999999999    	// #-7378697629483820647
    9bcc:	smulh	x9, x21, x9
    9bd0:	asr	x10, x9, #2
    9bd4:	add	x9, x10, x9, lsr #63
    9bd8:	add	x0, x8, #0x6
    9bdc:	b	9be4 <mpc_get_str@@Base+0x220>
    9be0:	neg	x9, x21
    9be4:	cmp	x9, #0xa
    9be8:	b.lt	9c08 <mpc_get_str@@Base+0x244>  // b.tstop
    9bec:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
    9bf0:	movk	x8, #0xcccd
    9bf4:	umulh	x10, x9, x8
    9bf8:	cmp	x9, #0x63
    9bfc:	lsr	x9, x10, #3
    9c00:	add	x0, x0, #0x1
    9c04:	b.hi	9bf4 <mpc_get_str@@Base+0x230>  // b.pmore
    9c08:	bl	4bf0 <mpc_alloc_str@plt>
    9c0c:	mov	x23, x19
    9c10:	ldrb	w8, [x23], #1
    9c14:	mov	x25, x0
    9c18:	mov	x22, x0
    9c1c:	cmp	w24, #0x2d
    9c20:	strb	w8, [x25], #1
    9c24:	b.eq	9c30 <mpc_get_str@@Base+0x26c>  // b.none
    9c28:	cmp	w24, #0x2b
    9c2c:	b.ne	9c40 <mpc_get_str@@Base+0x27c>  // b.any
    9c30:	ldrb	w8, [x19, #1]
    9c34:	add	x23, x19, #0x2
    9c38:	add	x25, x22, #0x2
    9c3c:	strb	w8, [x22, #1]
    9c40:	bl	4c70 <localeconv@plt>
    9c44:	ldr	x8, [x0]
    9c48:	mov	x0, x22
    9c4c:	mov	x1, x23
    9c50:	ldrb	w8, [x8]
    9c54:	strb	wzr, [x25, #1]
    9c58:	strb	w8, [x25]
    9c5c:	bl	4de0 <strcat@plt>
    9c60:	cbz	x21, 9cb8 <mpc_get_str@@Base+0x2f4>
    9c64:	mov	x0, x19
    9c68:	bl	4a00 <strlen@plt>
    9c6c:	add	x8, x22, x0
    9c70:	cmp	w20, #0x10
    9c74:	add	x0, x8, #0x1
    9c78:	b.eq	9c8c <mpc_get_str@@Base+0x2c8>  // b.none
    9c7c:	cmp	w20, #0xa
    9c80:	b.eq	9c94 <mpc_get_str@@Base+0x2d0>  // b.none
    9c84:	cmp	w20, #0x2
    9c88:	b.ne	9c9c <mpc_get_str@@Base+0x2d8>  // b.any
    9c8c:	mov	w8, #0x70                  	// #112
    9c90:	b	9ca0 <mpc_get_str@@Base+0x2dc>
    9c94:	mov	w8, #0x65                  	// #101
    9c98:	b	9ca0 <mpc_get_str@@Base+0x2dc>
    9c9c:	mov	w8, #0x40                  	// #64
    9ca0:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9ca4:	strb	w8, [x0]
    9ca8:	strb	wzr, [x0, #1]!
    9cac:	add	x1, x1, #0xab9
    9cb0:	mov	x2, x21
    9cb4:	bl	4b30 <sprintf@plt>
    9cb8:	mov	x0, x19
    9cbc:	bl	52e0 <mpfr_free_str@plt>
    9cc0:	mov	x0, x22
    9cc4:	ldp	x20, x19, [sp, #64]
    9cc8:	ldp	x22, x21, [sp, #48]
    9ccc:	ldp	x24, x23, [sp, #32]
    9cd0:	ldr	x25, [sp, #16]
    9cd4:	ldp	x29, x30, [sp], #80
    9cd8:	ret
    9cdc:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    9ce0:	ldr	x8, [x8, #4008]
    9ce4:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9ce8:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9cec:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    9cf0:	ldr	x0, [x8]
    9cf4:	add	x1, x1, #0x990
    9cf8:	add	x2, x2, #0xa90
    9cfc:	add	x4, x4, #0xaac
    9d00:	mov	w3, #0xc8                  	// #200
    9d04:	bl	55a0 <fprintf@plt>
    9d08:	bl	5000 <abort@plt>

0000000000009d0c <mpc_imag@@Base>:
    9d0c:	ldr	w3, [x1, #40]
    9d10:	add	x1, x1, #0x20
    9d14:	b	51d0 <mpfr_set4@plt>

0000000000009d18 <mpc_init2@@Base>:
    9d18:	stp	x29, x30, [sp, #-32]!
    9d1c:	stp	x20, x19, [sp, #16]
    9d20:	mov	x29, sp
    9d24:	mov	x19, x1
    9d28:	mov	x20, x0
    9d2c:	bl	5440 <mpfr_init2@plt>
    9d30:	add	x0, x20, #0x20
    9d34:	mov	x1, x19
    9d38:	ldp	x20, x19, [sp, #16]
    9d3c:	ldp	x29, x30, [sp], #32
    9d40:	b	5440 <mpfr_init2@plt>

0000000000009d44 <mpc_init3@@Base>:
    9d44:	stp	x29, x30, [sp, #-32]!
    9d48:	stp	x20, x19, [sp, #16]
    9d4c:	mov	x29, sp
    9d50:	mov	x19, x2
    9d54:	mov	x20, x0
    9d58:	bl	5440 <mpfr_init2@plt>
    9d5c:	add	x0, x20, #0x20
    9d60:	mov	x1, x19
    9d64:	ldp	x20, x19, [sp, #16]
    9d68:	ldp	x29, x30, [sp], #32
    9d6c:	b	5440 <mpfr_init2@plt>

0000000000009d70 <mpc_inp_str@@Base>:
    9d70:	sub	sp, sp, #0x80
    9d74:	stp	x29, x30, [sp, #32]
    9d78:	stp	x28, x27, [sp, #48]
    9d7c:	stp	x26, x25, [sp, #64]
    9d80:	stp	x24, x23, [sp, #80]
    9d84:	stp	x22, x21, [sp, #96]
    9d88:	stp	x20, x19, [sp, #112]
    9d8c:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    9d90:	ldr	x8, [x8, #4040]
    9d94:	cmp	x1, #0x0
    9d98:	mov	x20, x0
    9d9c:	add	x29, sp, #0x20
    9da0:	ldr	x8, [x8]
    9da4:	mov	w28, w4
    9da8:	mov	w21, w3
    9dac:	mov	x19, x2
    9db0:	csel	x23, x8, x1, eq  // eq = none
    9db4:	mov	x0, x23
    9db8:	bl	4f20 <getc@plt>
    9dbc:	cmn	w0, #0x1
    9dc0:	b.eq	9e00 <mpc_inp_str@@Base+0x90>  // b.none
    9dc4:	mov	w24, w0
    9dc8:	bl	5170 <__ctype_b_loc@plt>
    9dcc:	mov	x25, x0
    9dd0:	mov	x22, xzr
    9dd4:	ldr	x8, [x25]
    9dd8:	and	w9, w24, #0xff
    9ddc:	ldrh	w8, [x8, w9, uxtw #1]
    9de0:	tbz	w8, #13, 9edc <mpc_inp_str@@Base+0x16c>
    9de4:	mov	x0, x23
    9de8:	bl	4f20 <getc@plt>
    9dec:	mov	w24, w0
    9df0:	cmn	w0, #0x1
    9df4:	add	x22, x22, #0x1
    9df8:	b.ne	9dd4 <mpc_inp_str@@Base+0x64>  // b.any
    9dfc:	b	9e04 <mpc_inp_str@@Base+0x94>
    9e00:	mov	x22, xzr
    9e04:	mov	x0, x23
    9e08:	bl	4f20 <getc@plt>
    9e0c:	cmn	w0, #0x1
    9e10:	b.eq	9ef8 <mpc_inp_str@@Base+0x188>  // b.none
    9e14:	cmp	w0, #0x28
    9e18:	b.ne	9e68 <mpc_inp_str@@Base+0xf8>  // b.any
    9e1c:	mov	x0, x23
    9e20:	bl	4f20 <getc@plt>
    9e24:	cmn	w0, #0x1
    9e28:	b.eq	9f00 <mpc_inp_str@@Base+0x190>  // b.none
    9e2c:	mov	w24, w0
    9e30:	bl	5170 <__ctype_b_loc@plt>
    9e34:	mov	x25, x0
    9e38:	mov	x22, xzr
    9e3c:	ldr	x8, [x25]
    9e40:	and	w9, w24, #0xff
    9e44:	ldrh	w8, [x8, w9, uxtw #1]
    9e48:	tbz	w8, #13, 9f08 <mpc_inp_str@@Base+0x198>
    9e4c:	mov	x0, x23
    9e50:	bl	4f20 <getc@plt>
    9e54:	mov	w24, w0
    9e58:	cmn	w0, #0x1
    9e5c:	add	x22, x22, #0x1
    9e60:	b.ne	9e3c <mpc_inp_str@@Base+0xcc>  // b.any
    9e64:	b	9f14 <mpc_inp_str@@Base+0x1a4>
    9e68:	mov	x1, x23
    9e6c:	bl	5210 <ungetc@plt>
    9e70:	mov	x0, x23
    9e74:	bl	a168 <mpc_inp_str@@Base+0x3f8>
    9e78:	mov	x25, x0
    9e7c:	bl	4a00 <strlen@plt>
    9e80:	mov	x24, x0
    9e84:	mov	x0, x20
    9e88:	mov	x1, x25
    9e8c:	mov	w2, w21
    9e90:	mov	w3, w28
    9e94:	bl	5380 <mpc_set_str@plt>
    9e98:	mov	w21, w0
    9e9c:	mov	x0, x25
    9ea0:	bl	4ff0 <mpc_free_str@plt>
    9ea4:	cmn	w21, #0x1
    9ea8:	b.eq	9f60 <mpc_inp_str@@Base+0x1f0>  // b.none
    9eac:	cbz	x19, 9eb8 <mpc_inp_str@@Base+0x148>
    9eb0:	add	x8, x24, x22
    9eb4:	str	x8, [x19]
    9eb8:	mov	w0, w21
    9ebc:	ldp	x20, x19, [sp, #112]
    9ec0:	ldp	x22, x21, [sp, #96]
    9ec4:	ldp	x24, x23, [sp, #80]
    9ec8:	ldp	x26, x25, [sp, #64]
    9ecc:	ldp	x28, x27, [sp, #48]
    9ed0:	ldp	x29, x30, [sp, #32]
    9ed4:	add	sp, sp, #0x80
    9ed8:	ret
    9edc:	mov	w0, w24
    9ee0:	mov	x1, x23
    9ee4:	bl	5210 <ungetc@plt>
    9ee8:	mov	x0, x23
    9eec:	bl	4f20 <getc@plt>
    9ef0:	cmn	w0, #0x1
    9ef4:	b.ne	9e14 <mpc_inp_str@@Base+0xa4>  // b.any
    9ef8:	mov	x24, xzr
    9efc:	b	9f60 <mpc_inp_str@@Base+0x1f0>
    9f00:	mov	x22, xzr
    9f04:	b	9f14 <mpc_inp_str@@Base+0x1a4>
    9f08:	mov	w0, w24
    9f0c:	mov	x1, x23
    9f10:	bl	5210 <ungetc@plt>
    9f14:	mov	x0, x23
    9f18:	bl	a168 <mpc_inp_str@@Base+0x3f8>
    9f1c:	mov	x27, x0
    9f20:	bl	4a00 <strlen@plt>
    9f24:	add	x24, x0, #0x1
    9f28:	mov	x0, x23
    9f2c:	bl	4f20 <getc@plt>
    9f30:	mov	w25, w0
    9f34:	bl	5170 <__ctype_b_loc@plt>
    9f38:	ldr	x8, [x0]
    9f3c:	ldrh	w8, [x8, w25, sxtw #1]
    9f40:	tbnz	w8, #13, 9f7c <mpc_inp_str@@Base+0x20c>
    9f44:	cmn	w25, #0x1
    9f48:	b.eq	9f58 <mpc_inp_str@@Base+0x1e8>  // b.none
    9f4c:	mov	w0, w25
    9f50:	mov	x1, x23
    9f54:	bl	5210 <ungetc@plt>
    9f58:	mov	x0, x27
    9f5c:	bl	4ff0 <mpc_free_str@plt>
    9f60:	mov	x0, x20
    9f64:	bl	4a40 <mpfr_set_nan@plt>
    9f68:	add	x0, x20, #0x20
    9f6c:	bl	4a40 <mpfr_set_nan@plt>
    9f70:	mov	w21, #0xffffffff            	// #-1
    9f74:	cbnz	x19, 9eb0 <mpc_inp_str@@Base+0x140>
    9f78:	b	9eb8 <mpc_inp_str@@Base+0x148>
    9f7c:	mov	x26, x0
    9f80:	mov	w0, w25
    9f84:	mov	x1, x23
    9f88:	stur	w21, [x29, #-4]
    9f8c:	bl	5210 <ungetc@plt>
    9f90:	mov	x0, x23
    9f94:	bl	4f20 <getc@plt>
    9f98:	cmn	w0, #0x1
    9f9c:	b.eq	9fcc <mpc_inp_str@@Base+0x25c>  // b.none
    9fa0:	mov	x21, xzr
    9fa4:	ldr	x8, [x26]
    9fa8:	and	w9, w0, #0xff
    9fac:	ldrh	w8, [x8, w9, uxtw #1]
    9fb0:	tbz	w8, #13, 9fd4 <mpc_inp_str@@Base+0x264>
    9fb4:	mov	x0, x23
    9fb8:	bl	4f20 <getc@plt>
    9fbc:	cmn	w0, #0x1
    9fc0:	add	x21, x21, #0x1
    9fc4:	b.ne	9fa4 <mpc_inp_str@@Base+0x234>  // b.any
    9fc8:	b	9fdc <mpc_inp_str@@Base+0x26c>
    9fcc:	mov	x21, xzr
    9fd0:	b	9fdc <mpc_inp_str@@Base+0x26c>
    9fd4:	mov	x1, x23
    9fd8:	bl	5210 <ungetc@plt>
    9fdc:	mov	x0, x23
    9fe0:	str	x19, [sp, #8]
    9fe4:	stur	w28, [x29, #-8]
    9fe8:	bl	a168 <mpc_inp_str@@Base+0x3f8>
    9fec:	mov	x28, x0
    9ff0:	bl	4a00 <strlen@plt>
    9ff4:	add	x19, x0, x24
    9ff8:	add	x0, x19, #0x2
    9ffc:	str	x0, [sp]
    a000:	bl	4bf0 <mpc_alloc_str@plt>
    a004:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a008:	add	x1, x1, #0xabe
    a00c:	mov	x2, x27
    a010:	mov	x3, x28
    a014:	mov	x25, x0
    a018:	bl	4b30 <sprintf@plt>
    a01c:	tbnz	w0, #31, a108 <mpc_inp_str@@Base+0x398>
    a020:	mov	w24, w0
    a024:	add	x8, x19, #0x1
    a028:	cmp	x8, x24
    a02c:	str	x19, [sp, #16]
    a030:	b.ne	a138 <mpc_inp_str@@Base+0x3c8>  // b.any
    a034:	mov	x0, x27
    a038:	add	x21, x21, x22
    a03c:	bl	4ff0 <mpc_free_str@plt>
    a040:	mov	x0, x28
    a044:	bl	4ff0 <mpc_free_str@plt>
    a048:	mov	x0, x23
    a04c:	bl	4f20 <getc@plt>
    a050:	ldr	x19, [sp, #8]
    a054:	cmn	w0, #0x1
    a058:	mov	x22, xzr
    a05c:	b.eq	a090 <mpc_inp_str@@Base+0x320>  // b.none
    a060:	ldur	w28, [x29, #-8]
    a064:	ldr	x27, [sp, #16]
    a068:	ldr	x8, [x26]
    a06c:	and	w9, w0, #0xff
    a070:	ldrh	w8, [x8, w9, uxtw #1]
    a074:	tbz	w8, #13, a09c <mpc_inp_str@@Base+0x32c>
    a078:	mov	x0, x23
    a07c:	bl	4f20 <getc@plt>
    a080:	cmn	w0, #0x1
    a084:	add	x22, x22, #0x1
    a088:	b.ne	a068 <mpc_inp_str@@Base+0x2f8>  // b.any
    a08c:	b	a0a4 <mpc_inp_str@@Base+0x334>
    a090:	ldur	w28, [x29, #-8]
    a094:	ldr	x27, [sp, #16]
    a098:	b	a0a4 <mpc_inp_str@@Base+0x334>
    a09c:	mov	x1, x23
    a0a0:	bl	5210 <ungetc@plt>
    a0a4:	mov	x0, x23
    a0a8:	add	x22, x21, x22
    a0ac:	bl	4f20 <getc@plt>
    a0b0:	cmn	w0, #0x1
    a0b4:	b.eq	a0ec <mpc_inp_str@@Base+0x37c>  // b.none
    a0b8:	ldur	w21, [x29, #-4]
    a0bc:	cmp	w0, #0x29
    a0c0:	b.ne	a0f8 <mpc_inp_str@@Base+0x388>  // b.any
    a0c4:	ldr	x23, [sp]
    a0c8:	add	x2, x27, #0x3
    a0cc:	mov	x0, x25
    a0d0:	mov	x1, x23
    a0d4:	bl	5330 <mpc_realloc_str@plt>
    a0d8:	mov	w8, #0x29                  	// #41
    a0dc:	mov	x25, x0
    a0e0:	strb	w8, [x0, x24]
    a0e4:	strb	wzr, [x0, x23]
    a0e8:	b	9e84 <mpc_inp_str@@Base+0x114>
    a0ec:	ldur	w21, [x29, #-4]
    a0f0:	mov	x24, x27
    a0f4:	b	9e84 <mpc_inp_str@@Base+0x114>
    a0f8:	mov	x1, x23
    a0fc:	bl	5210 <ungetc@plt>
    a100:	mov	x24, x27
    a104:	b	9e84 <mpc_inp_str@@Base+0x114>
    a108:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    a10c:	ldr	x8, [x8, #4008]
    a110:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a114:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a118:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a11c:	ldr	x0, [x8]
    a120:	add	x1, x1, #0x990
    a124:	add	x2, x2, #0xac5
    a128:	add	x4, x4, #0xacf
    a12c:	mov	w3, #0xca                  	// #202
    a130:	bl	55a0 <fprintf@plt>
    a134:	bl	5000 <abort@plt>
    a138:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    a13c:	ldr	x8, [x8, #4008]
    a140:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a144:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a148:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a14c:	ldr	x0, [x8]
    a150:	add	x1, x1, #0x990
    a154:	add	x2, x2, #0xac5
    a158:	add	x4, x4, #0xad8
    a15c:	mov	w3, #0xcc                  	// #204
    a160:	bl	55a0 <fprintf@plt>
    a164:	bl	5000 <abort@plt>
    a168:	stp	x29, x30, [sp, #-96]!
    a16c:	stp	x20, x19, [sp, #80]
    a170:	mov	x19, x0
    a174:	mov	w0, #0x64                  	// #100
    a178:	str	x27, [sp, #16]
    a17c:	stp	x26, x25, [sp, #32]
    a180:	stp	x24, x23, [sp, #48]
    a184:	stp	x22, x21, [sp, #64]
    a188:	mov	x29, sp
    a18c:	mov	w22, #0x64                  	// #100
    a190:	bl	4bf0 <mpc_alloc_str@plt>
    a194:	mov	x20, x0
    a198:	mov	x8, xzr
    a19c:	add	x26, x8, #0x3
    a1a0:	neg	x21, x22
    a1a4:	mov	x0, x19
    a1a8:	bl	4f20 <getc@plt>
    a1ac:	mov	w23, w0
    a1b0:	cmn	w0, #0x1
    a1b4:	b.eq	a21c <mpc_inp_str@@Base+0x4ac>  // b.none
    a1b8:	cmp	w23, #0xa
    a1bc:	b.eq	a21c <mpc_inp_str@@Base+0x4ac>  // b.none
    a1c0:	bl	5170 <__ctype_b_loc@plt>
    a1c4:	orr	w8, w23, #0x1
    a1c8:	cmp	w8, #0x29
    a1cc:	b.eq	a21c <mpc_inp_str@@Base+0x4ac>  // b.none
    a1d0:	ldr	x8, [x0]
    a1d4:	and	w9, w23, #0xff
    a1d8:	ldrh	w8, [x8, w9, uxtw #1]
    a1dc:	tbnz	w8, #13, a21c <mpc_inp_str@@Base+0x4ac>
    a1e0:	add	x8, x20, x26
    a1e4:	add	x26, x26, #0x1
    a1e8:	add	x9, x21, x26
    a1ec:	cmp	x9, #0x3
    a1f0:	sturb	w23, [x8, #-3]
    a1f4:	b.ne	a1a4 <mpc_inp_str@@Base+0x434>  // b.any
    a1f8:	lsl	x21, x22, #1
    a1fc:	mov	x0, x20
    a200:	mov	x1, x22
    a204:	mov	x2, x21
    a208:	bl	5330 <mpc_realloc_str@plt>
    a20c:	mov	x20, x0
    a210:	sub	x8, x26, #0x3
    a214:	mov	x22, x21
    a218:	b	a19c <mpc_inp_str@@Base+0x42c>
    a21c:	sub	x21, x26, #0x2
    a220:	mov	x0, x20
    a224:	mov	x1, x22
    a228:	mov	x2, x21
    a22c:	bl	5330 <mpc_realloc_str@plt>
    a230:	mov	x20, x0
    a234:	add	x9, x0, x26
    a238:	subs	x8, x26, #0x3
    a23c:	sturb	wzr, [x9, #-3]
    a240:	b.eq	a344 <mpc_inp_str@@Base+0x5d4>  // b.none
    a244:	cmp	w23, #0x28
    a248:	b.eq	a25c <mpc_inp_str@@Base+0x4ec>  // b.none
    a24c:	cmn	w23, #0x1
    a250:	b.eq	a344 <mpc_inp_str@@Base+0x5d4>  // b.none
    a254:	mov	w0, w23
    a258:	b	a33c <mpc_inp_str@@Base+0x5cc>
    a25c:	cmp	x8, #0x5
    a260:	b.eq	a2e8 <mpc_inp_str@@Base+0x578>  // b.none
    a264:	cmp	x8, #0x3
    a268:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a26c:	bl	4c50 <__ctype_tolower_loc@plt>
    a270:	ldr	x8, [x0]
    a274:	ldrb	w9, [x20]
    a278:	ldr	w9, [x8, x9, lsl #2]
    a27c:	cmp	w9, #0x6e
    a280:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a284:	ldrb	w9, [x20, #1]
    a288:	ldr	w9, [x8, x9, lsl #2]
    a28c:	cmp	w9, #0x61
    a290:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a294:	ldrb	w9, [x20, #2]
    a298:	ldr	w8, [x8, x9, lsl #2]
    a29c:	cmp	w8, #0x6e
    a2a0:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a2a4:	mov	w0, #0x64                  	// #100
    a2a8:	mov	w23, #0x64                  	// #100
    a2ac:	bl	4bf0 <mpc_alloc_str@plt>
    a2b0:	mov	x22, x0
    a2b4:	mov	x0, x19
    a2b8:	bl	4f20 <getc@plt>
    a2bc:	mov	w24, w0
    a2c0:	bl	5170 <__ctype_b_loc@plt>
    a2c4:	cmp	w24, #0x5f
    a2c8:	mov	x25, x0
    a2cc:	b.eq	a364 <mpc_inp_str@@Base+0x5f4>  // b.none
    a2d0:	ldr	x8, [x25]
    a2d4:	and	w9, w24, #0xff
    a2d8:	ldrh	w8, [x8, w9, uxtw #1]
    a2dc:	tbnz	w8, #3, a364 <mpc_inp_str@@Base+0x5f4>
    a2e0:	mov	x27, xzr
    a2e4:	b	a3c0 <mpc_inp_str@@Base+0x650>
    a2e8:	ldrb	w8, [x20]
    a2ec:	cmp	w8, #0x40
    a2f0:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a2f4:	bl	4c50 <__ctype_tolower_loc@plt>
    a2f8:	ldr	x8, [x0]
    a2fc:	ldrb	w9, [x20, #1]
    a300:	ldr	w9, [x8, x9, lsl #2]
    a304:	cmp	w9, #0x6e
    a308:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a30c:	ldrb	w9, [x20, #2]
    a310:	ldr	w9, [x8, x9, lsl #2]
    a314:	cmp	w9, #0x61
    a318:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a31c:	ldrb	w9, [x20, #3]
    a320:	ldr	w8, [x8, x9, lsl #2]
    a324:	cmp	w8, #0x6e
    a328:	b.ne	a338 <mpc_inp_str@@Base+0x5c8>  // b.any
    a32c:	ldrb	w8, [x20, #4]
    a330:	cmp	w8, #0x40
    a334:	b.eq	a2a4 <mpc_inp_str@@Base+0x534>  // b.none
    a338:	mov	w0, #0x28                  	// #40
    a33c:	mov	x1, x19
    a340:	bl	5210 <ungetc@plt>
    a344:	mov	x0, x20
    a348:	ldp	x20, x19, [sp, #80]
    a34c:	ldp	x22, x21, [sp, #64]
    a350:	ldp	x24, x23, [sp, #48]
    a354:	ldp	x26, x25, [sp, #32]
    a358:	ldr	x27, [sp, #16]
    a35c:	ldp	x29, x30, [sp], #96
    a360:	ret
    a364:	mov	x27, xzr
    a368:	mov	w23, #0x64                  	// #100
    a36c:	strb	w24, [x22, x27]
    a370:	add	x27, x27, #0x1
    a374:	cmp	x27, x23
    a378:	b.ne	a398 <mpc_inp_str@@Base+0x628>  // b.any
    a37c:	lsl	x24, x23, #1
    a380:	mov	x0, x22
    a384:	mov	x1, x23
    a388:	mov	x2, x24
    a38c:	bl	5330 <mpc_realloc_str@plt>
    a390:	mov	x22, x0
    a394:	mov	x23, x24
    a398:	mov	x0, x19
    a39c:	bl	4f20 <getc@plt>
    a3a0:	ldr	x8, [x25]
    a3a4:	and	w9, w0, #0xff
    a3a8:	mov	w24, w0
    a3ac:	cmp	w0, #0x5f
    a3b0:	ldrh	w8, [x8, w9, uxtw #1]
    a3b4:	and	w8, w8, #0x8
    a3b8:	b.eq	a36c <mpc_inp_str@@Base+0x5fc>  // b.none
    a3bc:	cbnz	w8, a36c <mpc_inp_str@@Base+0x5fc>
    a3c0:	add	x2, x27, #0x1
    a3c4:	mov	x0, x22
    a3c8:	mov	x1, x23
    a3cc:	bl	5330 <mpc_realloc_str@plt>
    a3d0:	mov	x22, x0
    a3d4:	cmn	w24, #0x1
    a3d8:	strb	wzr, [x0, x27]
    a3dc:	b.eq	a3ec <mpc_inp_str@@Base+0x67c>  // b.none
    a3e0:	mov	w0, w24
    a3e4:	mov	x1, x19
    a3e8:	bl	5210 <ungetc@plt>
    a3ec:	mov	x0, x22
    a3f0:	bl	4a00 <strlen@plt>
    a3f4:	add	x8, x0, x26
    a3f8:	sub	x9, x8, #0x2
    a3fc:	mov	x23, x0
    a400:	cmp	x9, x21
    a404:	b.cc	a424 <mpc_inp_str@@Base+0x6b4>  // b.lo, b.ul, b.last
    a408:	sub	x24, x8, #0x1
    a40c:	mov	x0, x20
    a410:	mov	x1, x21
    a414:	mov	x2, x24
    a418:	bl	5330 <mpc_realloc_str@plt>
    a41c:	mov	x20, x0
    a420:	mov	x21, x24
    a424:	add	x8, x20, x26
    a428:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a42c:	sub	x0, x8, #0x3
    a430:	add	x1, x1, #0xae7
    a434:	mov	x2, x22
    a438:	bl	4b30 <sprintf@plt>
    a43c:	tbnz	w0, #31, a4a0 <mpc_inp_str@@Base+0x730>
    a440:	add	x8, x23, #0x1
    a444:	cmp	x8, w0, uxtw
    a448:	b.ne	a4d0 <mpc_inp_str@@Base+0x760>  // b.any
    a44c:	mov	x0, x19
    a450:	bl	4f20 <getc@plt>
    a454:	cmp	w0, #0x29
    a458:	b.eq	a470 <mpc_inp_str@@Base+0x700>  // b.none
    a45c:	cmn	w0, #0x1
    a460:	b.eq	a494 <mpc_inp_str@@Base+0x724>  // b.none
    a464:	mov	x1, x19
    a468:	bl	5210 <ungetc@plt>
    a46c:	b	a494 <mpc_inp_str@@Base+0x724>
    a470:	add	x2, x23, x26
    a474:	mov	x0, x20
    a478:	mov	x1, x21
    a47c:	bl	5330 <mpc_realloc_str@plt>
    a480:	add	x8, x0, x23
    a484:	add	x8, x8, x26
    a488:	mov	w9, #0x29                  	// #41
    a48c:	mov	x20, x0
    a490:	sturh	w9, [x8, #-2]
    a494:	mov	x0, x22
    a498:	bl	4ff0 <mpc_free_str@plt>
    a49c:	b	a344 <mpc_inp_str@@Base+0x5d4>
    a4a0:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    a4a4:	ldr	x8, [x8, #4008]
    a4a8:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a4ac:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a4b0:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a4b4:	ldr	x0, [x8]
    a4b8:	add	x1, x1, #0x990
    a4bc:	add	x2, x2, #0xac5
    a4c0:	add	x4, x4, #0xacf
    a4c4:	mov	w3, #0x88                  	// #136
    a4c8:	bl	55a0 <fprintf@plt>
    a4cc:	bl	5000 <abort@plt>
    a4d0:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    a4d4:	ldr	x8, [x8, #4008]
    a4d8:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a4dc:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a4e0:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    a4e4:	ldr	x0, [x8]
    a4e8:	add	x1, x1, #0x990
    a4ec:	add	x2, x2, #0xac5
    a4f0:	add	x4, x4, #0xaeb
    a4f4:	mov	w3, #0x8a                  	// #138
    a4f8:	bl	55a0 <fprintf@plt>
    a4fc:	bl	5000 <abort@plt>

000000000000a500 <mpc_log@@Base>:
    a500:	sub	sp, sp, #0xb0
    a504:	stp	x20, x19, [sp, #160]
    a508:	mov	x19, x0
    a50c:	mov	x0, x1
    a510:	stp	x29, x30, [sp, #80]
    a514:	stp	x28, x27, [sp, #96]
    a518:	stp	x26, x25, [sp, #112]
    a51c:	stp	x24, x23, [sp, #128]
    a520:	stp	x22, x21, [sp, #144]
    a524:	add	x29, sp, #0x50
    a528:	mov	w20, w2
    a52c:	mov	x21, x1
    a530:	bl	54d0 <mpfr_number_p@plt>
    a534:	cbz	w0, a678 <mpc_log@@Base+0x178>
    a538:	add	x22, x21, #0x20
    a53c:	mov	x0, x22
    a540:	bl	54d0 <mpfr_number_p@plt>
    a544:	cbz	w0, a678 <mpc_log@@Base+0x178>
    a548:	mov	x0, x21
    a54c:	bl	51f0 <mpfr_sgn@plt>
    a550:	mov	w23, w0
    a554:	mov	x0, x22
    a558:	bl	51f0 <mpfr_sgn@plt>
    a55c:	cbz	w0, a71c <mpc_log@@Base+0x21c>
    a560:	cbz	w23, a8bc <mpc_log@@Base+0x3bc>
    a564:	ldr	x24, [x19]
    a568:	add	x0, sp, #0x10
    a56c:	mov	w1, #0x2                   	// #2
    a570:	bl	5440 <mpfr_init2@plt>
    a574:	and	w8, w20, #0xf
    a578:	tst	w20, #0xf
    a57c:	mov	x0, x24
    a580:	stp	w8, w20, [sp, #8]
    a584:	cset	w27, eq  // eq = none
    a588:	bl	4d20 <mpc_ceil_log2@plt>
    a58c:	add	x8, x24, x0
    a590:	add	x24, x8, #0x4
    a594:	add	x0, sp, #0x10
    a598:	mov	x1, x24
    a59c:	bl	4c80 <mpfr_set_prec@plt>
    a5a0:	add	x0, sp, #0x10
    a5a4:	mov	x1, x21
    a5a8:	mov	w2, wzr
    a5ac:	bl	51a0 <mpc_abs@plt>
    a5b0:	ldr	x8, [sp, #32]
    a5b4:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
    a5b8:	cmp	x8, x25
    a5bc:	b.eq	a758 <mpc_log@@Base+0x258>  // b.none
    a5c0:	mov	w20, wzr
    a5c4:	mov	w26, #0x1                   	// #1
    a5c8:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
    a5cc:	mov	x23, #0x100000000           	// #4294967296
    a5d0:	add	x0, sp, #0x10
    a5d4:	add	x1, sp, #0x10
    a5d8:	mov	w2, wzr
    a5dc:	bl	4d80 <mpfr_log@plt>
    a5e0:	ldr	x8, [sp, #32]
    a5e4:	cmp	x8, x28
    a5e8:	b.eq	a668 <mpc_log@@Base+0x168>  // b.none
    a5ec:	ldr	x10, [x19]
    a5f0:	sub	x9, x23, x8, lsl #32
    a5f4:	asr	x9, x9, #32
    a5f8:	cmp	x8, #0x0
    a5fc:	csinc	x8, x9, xzr, lt  // lt = tstop
    a600:	sub	x1, x24, x8
    a604:	add	x4, x10, x27
    a608:	add	x0, sp, #0x10
    a60c:	mov	w3, #0x1                   	// #1
    a610:	mov	w2, wzr
    a614:	bl	5450 <mpfr_can_round@plt>
    a618:	cmp	w0, #0x0
    a61c:	cset	w20, ne  // ne = any
    a620:	cmp	w26, #0x1
    a624:	b.hi	a668 <mpc_log@@Base+0x168>  // b.pmore
    a628:	cbnz	w0, a668 <mpc_log@@Base+0x168>
    a62c:	mov	x0, x24
    a630:	add	w26, w26, #0x1
    a634:	bl	4d20 <mpc_ceil_log2@plt>
    a638:	add	x8, x24, x0
    a63c:	add	x24, x8, #0x4
    a640:	add	x0, sp, #0x10
    a644:	mov	x1, x24
    a648:	bl	4c80 <mpfr_set_prec@plt>
    a64c:	add	x0, sp, #0x10
    a650:	mov	x1, x21
    a654:	mov	w2, wzr
    a658:	bl	51a0 <mpc_abs@plt>
    a65c:	ldr	x8, [sp, #32]
    a660:	cmp	x8, x25
    a664:	b.ne	a5d0 <mpc_log@@Base+0xd0>  // b.any
    a668:	tbz	w20, #0, a758 <mpc_log@@Base+0x258>
    a66c:	ldp	w24, w20, [sp, #8]
    a670:	mov	w23, wzr
    a674:	b	a948 <mpc_log@@Base+0x448>
    a678:	ldr	x8, [x21, #16]
    a67c:	ldr	x9, [x21, #48]
    a680:	mov	x10, #0x2                   	// #2
    a684:	movk	x10, #0x8000, lsl #48
    a688:	cmp	x8, x10
    a68c:	b.ne	a6ac <mpc_log@@Base+0x1ac>  // b.any
    a690:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    a694:	cmp	x9, x8
    a698:	b.ne	a6c0 <mpc_log@@Base+0x1c0>  // b.any
    a69c:	mov	w1, #0x1                   	// #1
    a6a0:	mov	x0, x19
    a6a4:	bl	5120 <mpfr_set_inf@plt>
    a6a8:	b	a6c8 <mpc_log@@Base+0x1c8>
    a6ac:	cmp	x9, x10
    a6b0:	b.ne	a6e8 <mpc_log@@Base+0x1e8>  // b.any
    a6b4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a6b8:	cmp	x8, x9
    a6bc:	b.eq	a69c <mpc_log@@Base+0x19c>  // b.none
    a6c0:	mov	x0, x19
    a6c4:	bl	4a40 <mpfr_set_nan@plt>
    a6c8:	add	x0, x19, #0x20
    a6cc:	bl	4a40 <mpfr_set_nan@plt>
    a6d0:	mov	w8, wzr
    a6d4:	mov	w9, wzr
    a6d8:	cmp	w8, #0x0
    a6dc:	mov	w8, #0x8                   	// #8
    a6e0:	csel	w0, w8, w9, ne  // ne = any
    a6e4:	b	ab08 <mpc_log@@Base+0x608>
    a6e8:	add	x1, x21, #0x20
    a6ec:	add	x0, x19, #0x20
    a6f0:	asr	w3, w20, #4
    a6f4:	mov	x2, x21
    a6f8:	bl	4ca0 <mpfr_atan2@plt>
    a6fc:	mov	w20, w0
    a700:	mov	w1, #0x1                   	// #1
    a704:	mov	x0, x19
    a708:	bl	5120 <mpfr_set_inf@plt>
    a70c:	lsr	w8, w20, #31
    a710:	cbz	w20, a6d4 <mpc_log@@Base+0x1d4>
    a714:	mov	w9, #0x4                   	// #4
    a718:	b	a6d8 <mpc_log@@Base+0x1d8>
    a71c:	cbz	w23, a90c <mpc_log@@Base+0x40c>
    a720:	cmp	w23, #0x1
    a724:	b.lt	a9cc <mpc_log@@Base+0x4cc>  // b.tstop
    a728:	and	w2, w20, #0xf
    a72c:	mov	x0, x19
    a730:	mov	x1, x21
    a734:	bl	4d80 <mpfr_log@plt>
    a738:	ldr	w3, [x21, #40]
    a73c:	mov	w23, w0
    a740:	add	x0, x19, #0x20
    a744:	asr	w2, w20, #4
    a748:	mov	x1, x22
    a74c:	bl	51d0 <mpfr_set4@plt>
    a750:	mov	w20, w0
    a754:	b	aa48 <mpc_log@@Base+0x548>
    a758:	ldr	x24, [x19]
    a75c:	sub	x0, x29, #0x20
    a760:	mov	w1, #0x2                   	// #2
    a764:	bl	5440 <mpfr_init2@plt>
    a768:	mov	x0, x21
    a76c:	mov	x1, x22
    a770:	bl	53b0 <mpfr_cmpabs@plt>
    a774:	cmp	w0, #0x0
    a778:	csel	x25, x22, x21, ge  // ge = tcont
    a77c:	csel	x26, x21, x22, ge  // ge = tcont
    a780:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
    a784:	b	a7b4 <mpc_log@@Base+0x2b4>
    a788:	ldr	x8, [sp, #32]
    a78c:	cmp	x8, x28
    a790:	b.eq	a938 <mpc_log@@Base+0x438>  // b.none
    a794:	ldr	x8, [x19]
    a798:	sub	x1, x24, w20, sxtw
    a79c:	add	x0, sp, #0x10
    a7a0:	mov	w3, #0x1                   	// #1
    a7a4:	add	x4, x8, x27
    a7a8:	mov	w2, wzr
    a7ac:	bl	5450 <mpfr_can_round@plt>
    a7b0:	cbnz	w0, a904 <mpc_log@@Base+0x404>
    a7b4:	mov	x0, x24
    a7b8:	bl	4d20 <mpc_ceil_log2@plt>
    a7bc:	add	x8, x24, x0
    a7c0:	add	x24, x8, #0x4
    a7c4:	sub	x0, x29, #0x20
    a7c8:	mov	x1, x24
    a7cc:	bl	4c80 <mpfr_set_prec@plt>
    a7d0:	add	x0, sp, #0x10
    a7d4:	mov	x1, x24
    a7d8:	bl	4c80 <mpfr_set_prec@plt>
    a7dc:	sub	x0, x29, #0x20
    a7e0:	mov	w3, #0x3                   	// #3
    a7e4:	mov	x1, x25
    a7e8:	mov	x2, x26
    a7ec:	bl	5150 <mpfr_div@plt>
    a7f0:	sub	x0, x29, #0x20
    a7f4:	sub	x1, x29, #0x20
    a7f8:	mov	w2, #0x3                   	// #3
    a7fc:	bl	5010 <mpfr_sqr@plt>
    a800:	sub	x0, x29, #0x20
    a804:	sub	x1, x29, #0x20
    a808:	mov	w2, #0x3                   	// #3
    a80c:	bl	51e0 <mpfr_log1p@plt>
    a810:	sub	x0, x29, #0x20
    a814:	sub	x1, x29, #0x20
    a818:	mov	w2, #0x1                   	// #1
    a81c:	mov	w3, #0x3                   	// #3
    a820:	bl	5320 <mpfr_div_2ui@plt>
    a824:	add	x0, sp, #0x10
    a828:	mov	w3, #0x1                   	// #1
    a82c:	mov	x1, x26
    a830:	mov	w2, wzr
    a834:	bl	51d0 <mpfr_set4@plt>
    a838:	add	x0, sp, #0x10
    a83c:	add	x1, sp, #0x10
    a840:	mov	w2, wzr
    a844:	bl	4d80 <mpfr_log@plt>
    a848:	ldr	x20, [sp, #32]
    a84c:	ldr	w23, [sp, #24]
    a850:	add	x0, sp, #0x10
    a854:	add	x1, sp, #0x10
    a858:	sub	x2, x29, #0x20
    a85c:	mov	w3, wzr
    a860:	bl	4e60 <mpfr_add@plt>
    a864:	tbnz	w23, #31, a870 <mpc_log@@Base+0x370>
    a868:	mov	w20, #0x5                   	// #5
    a86c:	b	a890 <mpc_log@@Base+0x390>
    a870:	ldr	x9, [sp, #32]
    a874:	ldur	x8, [x29, #-16]
    a878:	mvn	x9, x9
    a87c:	add	x8, x8, #0x5
    a880:	add	x9, x20, x9
    a884:	cmp	x8, x9
    a888:	csel	x8, x8, x9, gt
    a88c:	add	x20, x8, #0x2
    a890:	mov	x1, #0xffffffffffffffff    	// #-1
    a894:	mov	x0, x26
    a898:	mov	x2, xzr
    a89c:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    a8a0:	cbz	w0, a788 <mpc_log@@Base+0x288>
    a8a4:	mov	w1, #0x1                   	// #1
    a8a8:	mov	x0, x26
    a8ac:	mov	x2, xzr
    a8b0:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    a8b4:	cbnz	w0, a794 <mpc_log@@Base+0x294>
    a8b8:	b	a788 <mpc_log@@Base+0x288>
    a8bc:	cmp	w0, #0x1
    a8c0:	b.lt	aa60 <mpc_log@@Base+0x560>  // b.tstop
    a8c4:	and	w2, w20, #0xf
    a8c8:	mov	x0, x19
    a8cc:	mov	x1, x22
    a8d0:	bl	4d80 <mpfr_log@plt>
    a8d4:	add	x22, x19, #0x20
    a8d8:	mov	w21, w0
    a8dc:	asr	w1, w20, #4
    a8e0:	mov	x0, x22
    a8e4:	bl	4a80 <mpfr_const_pi@plt>
    a8e8:	mov	w19, w0
    a8ec:	mov	w2, #0x1                   	// #1
    a8f0:	mov	x0, x22
    a8f4:	mov	x1, x22
    a8f8:	mov	w3, wzr
    a8fc:	bl	5320 <mpfr_div_2ui@plt>
    a900:	b	aae0 <mpc_log@@Base+0x5e0>
    a904:	mov	w23, wzr
    a908:	b	a93c <mpc_log@@Base+0x43c>
    a90c:	add	x0, x19, #0x20
    a910:	asr	w3, w20, #4
    a914:	mov	x1, x22
    a918:	mov	x2, x21
    a91c:	bl	4ca0 <mpfr_atan2@plt>
    a920:	mov	w20, w0
    a924:	mov	w1, #0xffffffff            	// #-1
    a928:	mov	x0, x19
    a92c:	bl	5120 <mpfr_set_inf@plt>
    a930:	mov	w8, wzr
    a934:	b	aa58 <mpc_log@@Base+0x558>
    a938:	mov	w23, #0x1                   	// #1
    a93c:	ldp	w24, w20, [sp, #8]
    a940:	sub	x0, x29, #0x20
    a944:	bl	4d60 <mpfr_clear@plt>
    a948:	add	x0, x19, #0x20
    a94c:	asr	w3, w20, #4
    a950:	mov	x1, x22
    a954:	mov	x2, x21
    a958:	bl	4ca0 <mpfr_atan2@plt>
    a95c:	mov	w20, w0
    a960:	cbz	w23, a980 <mpc_log@@Base+0x480>
    a964:	bl	55c0 <mpfr_get_emin_min@plt>
    a968:	sub	x2, x0, #0x2
    a96c:	mov	w1, #0x1                   	// #1
    a970:	mov	x0, x19
    a974:	mov	w3, w24
    a978:	bl	5130 <mpfr_set_ui_2exp@plt>
    a97c:	b	a994 <mpc_log@@Base+0x494>
    a980:	ldr	w3, [sp, #24]
    a984:	add	x1, sp, #0x10
    a988:	mov	x0, x19
    a98c:	mov	w2, w24
    a990:	bl	51d0 <mpfr_set4@plt>
    a994:	mov	w19, w0
    a998:	add	x0, sp, #0x10
    a99c:	bl	4d60 <mpfr_clear@plt>
    a9a0:	cmp	w19, #0x0
    a9a4:	mov	w8, #0x2                   	// #2
    a9a8:	cset	w9, ne  // ne = any
    a9ac:	csel	w8, w8, w9, lt  // lt = tstop
    a9b0:	cmp	w20, #0x0
    a9b4:	cset	w9, ne  // ne = any
    a9b8:	lsl	w9, w9, #2
    a9bc:	mov	w10, #0x8                   	// #8
    a9c0:	csel	w9, w10, w9, lt  // lt = tstop
    a9c4:	orr	w0, w8, w9
    a9c8:	b	ab08 <mpc_log@@Base+0x608>
    a9cc:	ldr	w22, [x21, #40]
    a9d0:	asr	w8, w20, #4
    a9d4:	ldp	q0, q1, [x21]
    a9d8:	mov	w9, #0x2                   	// #2
    a9dc:	cmp	w8, #0x3
    a9e0:	mov	w10, #0x3                   	// #3
    a9e4:	csel	w9, w9, w8, eq  // eq = none
    a9e8:	cmp	w8, #0x2
    a9ec:	csel	w9, w10, w9, eq  // eq = none
    a9f0:	cmp	w22, #0x0
    a9f4:	add	x0, sp, #0x10
    a9f8:	add	x1, sp, #0x10
    a9fc:	mov	w2, wzr
    aa00:	csel	w21, w9, w8, lt  // lt = tstop
    aa04:	stp	q0, q1, [sp, #16]
    aa08:	bl	4b80 <mpfr_neg@plt>
    aa0c:	and	w2, w20, #0xf
    aa10:	add	x1, sp, #0x10
    aa14:	mov	x0, x19
    aa18:	bl	4d80 <mpfr_log@plt>
    aa1c:	mov	w23, w0
    aa20:	add	x0, x19, #0x20
    aa24:	mov	w1, w21
    aa28:	bl	4a80 <mpfr_const_pi@plt>
    aa2c:	mov	w20, w0
    aa30:	tbz	w22, #31, aa48 <mpc_log@@Base+0x548>
    aa34:	mov	x0, x19
    aa38:	mov	x1, x19
    aa3c:	mov	w2, wzr
    aa40:	bl	4f60 <mpc_conj@plt>
    aa44:	neg	w20, w20
    aa48:	cmp	w23, #0x0
    aa4c:	cset	w8, ne  // ne = any
    aa50:	mov	w9, #0x2                   	// #2
    aa54:	csel	w8, w9, w8, lt  // lt = tstop
    aa58:	cmp	w20, #0x0
    aa5c:	b	aaf4 <mpc_log@@Base+0x5f4>
    aa60:	ldp	q1, q0, [x22]
    aa64:	add	x0, sp, #0x10
    aa68:	add	x1, sp, #0x10
    aa6c:	mov	w2, wzr
    aa70:	stp	q1, q0, [sp, #16]
    aa74:	bl	4b80 <mpfr_neg@plt>
    aa78:	and	w2, w20, #0xf
    aa7c:	add	x1, sp, #0x10
    aa80:	mov	x0, x19
    aa84:	bl	4d80 <mpfr_log@plt>
    aa88:	asr	w8, w20, #4
    aa8c:	mov	w9, #0x2                   	// #2
    aa90:	cmp	w8, #0x3
    aa94:	add	x19, x19, #0x20
    aa98:	csel	w9, w9, w8, eq  // eq = none
    aa9c:	cmp	w8, #0x2
    aaa0:	mov	w8, #0x3                   	// #3
    aaa4:	mov	w21, w0
    aaa8:	csel	w1, w8, w9, eq  // eq = none
    aaac:	mov	x0, x19
    aab0:	bl	4a80 <mpfr_const_pi@plt>
    aab4:	mov	w20, w0
    aab8:	mov	w2, #0x1                   	// #1
    aabc:	mov	x0, x19
    aac0:	mov	x1, x19
    aac4:	mov	w3, wzr
    aac8:	bl	5320 <mpfr_div_2ui@plt>
    aacc:	mov	x0, x19
    aad0:	mov	x1, x19
    aad4:	mov	w2, wzr
    aad8:	bl	4b80 <mpfr_neg@plt>
    aadc:	neg	w19, w20
    aae0:	cmp	w21, #0x0
    aae4:	mov	w8, #0x2                   	// #2
    aae8:	cset	w9, ne  // ne = any
    aaec:	csel	w8, w8, w9, lt  // lt = tstop
    aaf0:	cmp	w19, #0x0
    aaf4:	cset	w9, ne  // ne = any
    aaf8:	lsl	w9, w9, #2
    aafc:	mov	w10, #0x8                   	// #8
    ab00:	csel	w9, w10, w9, lt  // lt = tstop
    ab04:	orr	w0, w9, w8
    ab08:	ldp	x20, x19, [sp, #160]
    ab0c:	ldp	x22, x21, [sp, #144]
    ab10:	ldp	x24, x23, [sp, #128]
    ab14:	ldp	x26, x25, [sp, #112]
    ab18:	ldp	x28, x27, [sp, #96]
    ab1c:	ldp	x29, x30, [sp, #80]
    ab20:	add	sp, sp, #0xb0
    ab24:	ret

000000000000ab28 <mpc_log10@@Base>:
    ab28:	sub	sp, sp, #0x120
    ab2c:	stp	x29, x30, [sp, #192]
    ab30:	add	x29, sp, #0xc0
    ab34:	stp	x24, x23, [sp, #240]
    ab38:	stp	x22, x21, [sp, #256]
    ab3c:	mov	x23, x1
    ab40:	mov	x21, x0
    ab44:	sub	x0, x29, #0x28
    ab48:	mov	w1, #0x2                   	// #2
    ab4c:	stp	x28, x27, [sp, #208]
    ab50:	stp	x26, x25, [sp, #224]
    ab54:	stp	x20, x19, [sp, #272]
    ab58:	mov	w19, w2
    ab5c:	bl	5440 <mpfr_init2@plt>
    ab60:	add	x0, sp, #0x58
    ab64:	mov	w1, #0x2                   	// #2
    ab68:	add	x20, sp, #0x58
    ab6c:	bl	4cf0 <mpc_init2@plt>
    ab70:	str	x21, [sp, #32]
    ab74:	ldr	x8, [x21], #32
    ab78:	and	w10, w19, #0xf
    ab7c:	mov	w25, wzr
    ab80:	mov	w24, wzr
    ab84:	ldr	x9, [x21]
    ab88:	str	x21, [sp, #48]
    ab8c:	add	x21, x20, #0x20
    ab90:	str	w10, [sp, #12]
    ab94:	cmp	x8, x9
    ab98:	csel	x26, x8, x9, gt
    ab9c:	cmp	w19, #0x10
    aba0:	cset	w8, cc  // cc = lo, ul, last
    aba4:	tst	w19, #0xf
    aba8:	add	x10, x23, #0x20
    abac:	str	x8, [sp, #40]
    abb0:	cset	w8, eq  // eq = none
    abb4:	stp	x10, x8, [sp, #16]
    abb8:	b	abc4 <mpc_log10@@Base+0x9c>
    abbc:	mov	w28, w22
    abc0:	cbnz	w28, ae6c <mpc_log10@@Base+0x344>
    abc4:	cmp	w25, #0x1
    abc8:	b.hi	abdc <mpc_log10@@Base+0xb4>  // b.pmore
    abcc:	mov	x0, x26
    abd0:	bl	4d20 <mpc_ceil_log2@plt>
    abd4:	add	x8, x0, #0x4
    abd8:	b	abe8 <mpc_log10@@Base+0xc0>
    abdc:	cmp	x26, #0x0
    abe0:	cinc	x8, x26, lt  // lt = tstop
    abe4:	asr	x8, x8, #1
    abe8:	add	x26, x8, x26
    abec:	sub	x0, x29, #0x28
    abf0:	mov	x1, x26
    abf4:	add	w25, w25, #0x1
    abf8:	bl	4c80 <mpfr_set_prec@plt>
    abfc:	add	x0, sp, #0x58
    ac00:	mov	x1, x26
    ac04:	bl	4c00 <mpc_set_prec@plt>
    ac08:	add	x0, sp, #0x58
    ac0c:	mov	x1, x23
    ac10:	mov	w2, w19
    ac14:	bl	4db0 <mpc_log@plt>
    ac18:	mov	w27, w0
    ac1c:	mov	x0, x21
    ac20:	bl	54d0 <mpfr_number_p@plt>
    ac24:	mov	w28, #0x1                   	// #1
    ac28:	cbz	w0, acb8 <mpc_log10@@Base+0x190>
    ac2c:	ldr	x8, [sp, #136]
    ac30:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    ac34:	mov	w22, #0x1                   	// #1
    ac38:	cmp	x8, x9
    ac3c:	b.eq	aca4 <mpc_log10@@Base+0x17c>  // b.none
    ac40:	sub	x0, x29, #0x28
    ac44:	mov	w1, #0xa                   	// #10
    ac48:	mov	x2, xzr
    ac4c:	mov	w3, wzr
    ac50:	bl	5130 <mpfr_set_ui_2exp@plt>
    ac54:	sub	x0, x29, #0x28
    ac58:	sub	x1, x29, #0x28
    ac5c:	mov	w2, wzr
    ac60:	bl	4d80 <mpfr_log@plt>
    ac64:	sub	x2, x29, #0x28
    ac68:	mov	x0, x21
    ac6c:	mov	x1, x21
    ac70:	mov	w3, wzr
    ac74:	bl	5150 <mpfr_div@plt>
    ac78:	ldp	x9, x8, [sp, #40]
    ac7c:	sub	x1, x26, #0x2
    ac80:	mov	w3, #0x1                   	// #1
    ac84:	mov	x0, x21
    ac88:	ldr	x8, [x8]
    ac8c:	mov	w2, wzr
    ac90:	add	x4, x8, x9
    ac94:	bl	5450 <mpfr_can_round@plt>
    ac98:	mov	w28, w0
    ac9c:	mov	w22, wzr
    aca0:	cbz	w0, abbc <mpc_log10@@Base+0x94>
    aca4:	add	x0, sp, #0x58
    aca8:	bl	54d0 <mpfr_number_p@plt>
    acac:	mov	w20, #0x1                   	// #1
    acb0:	cbnz	w0, accc <mpc_log10@@Base+0x1a4>
    acb4:	b	ad40 <mpc_log10@@Base+0x218>
    acb8:	mov	w22, #0x1                   	// #1
    acbc:	add	x0, sp, #0x58
    acc0:	bl	54d0 <mpfr_number_p@plt>
    acc4:	mov	w20, #0x1                   	// #1
    acc8:	cbz	w0, ad40 <mpc_log10@@Base+0x218>
    accc:	ldr	x8, [sp, #104]
    acd0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    acd4:	cmp	x8, x9
    acd8:	b.eq	ad40 <mpc_log10@@Base+0x218>  // b.none
    acdc:	cbz	w22, ad04 <mpc_log10@@Base+0x1dc>
    ace0:	sub	x0, x29, #0x28
    ace4:	mov	w1, #0xa                   	// #10
    ace8:	mov	x2, xzr
    acec:	mov	w3, wzr
    acf0:	bl	5130 <mpfr_set_ui_2exp@plt>
    acf4:	sub	x0, x29, #0x28
    acf8:	sub	x1, x29, #0x28
    acfc:	mov	w2, wzr
    ad00:	bl	4d80 <mpfr_log@plt>
    ad04:	add	x0, sp, #0x58
    ad08:	add	x1, sp, #0x58
    ad0c:	sub	x2, x29, #0x28
    ad10:	mov	w3, wzr
    ad14:	bl	5150 <mpfr_div@plt>
    ad18:	ldp	x9, x8, [sp, #24]
    ad1c:	sub	x1, x26, #0x2
    ad20:	add	x0, sp, #0x58
    ad24:	mov	w3, #0x1                   	// #1
    ad28:	ldr	x8, [x8]
    ad2c:	mov	w2, wzr
    ad30:	add	x4, x8, x9
    ad34:	bl	5450 <mpfr_can_round@plt>
    ad38:	mov	w28, w0
    ad3c:	mov	w20, wzr
    ad40:	orr	w8, w28, w24
    ad44:	cbnz	w8, abc0 <mpc_log10@@Base+0x98>
    ad48:	mov	x0, x23
    ad4c:	bl	4e30 <mpfr_integer_p@plt>
    ad50:	cbz	w0, ae64 <mpc_log10@@Base+0x33c>
    ad54:	ldr	x24, [sp, #16]
    ad58:	mov	x0, x24
    ad5c:	bl	4e30 <mpfr_integer_p@plt>
    ad60:	cbz	w0, ae64 <mpc_log10@@Base+0x33c>
    ad64:	add	x0, sp, #0x48
    ad68:	bl	54a0 <__gmpz_init@plt>
    ad6c:	add	x0, sp, #0x38
    ad70:	bl	54a0 <__gmpz_init@plt>
    ad74:	add	x0, sp, #0x48
    ad78:	mov	x1, x23
    ad7c:	mov	w2, wzr
    ad80:	bl	4bd0 <mpfr_get_z@plt>
    ad84:	add	x0, sp, #0x38
    ad88:	mov	x1, x24
    ad8c:	mov	w2, wzr
    ad90:	bl	4bd0 <mpfr_get_z@plt>
    ad94:	add	x0, sp, #0x48
    ad98:	add	x1, sp, #0x48
    ad9c:	add	x2, sp, #0x48
    ada0:	bl	4d40 <__gmpz_mul@plt>
    ada4:	add	x0, sp, #0x38
    ada8:	add	x1, sp, #0x38
    adac:	add	x2, sp, #0x38
    adb0:	bl	4d40 <__gmpz_mul@plt>
    adb4:	add	x0, sp, #0x48
    adb8:	add	x1, sp, #0x48
    adbc:	add	x2, sp, #0x38
    adc0:	bl	53d0 <__gmpz_add@plt>
    adc4:	add	x0, sp, #0x48
    adc8:	mov	x1, xzr
    adcc:	bl	49f0 <__gmpz_scan1@plt>
    add0:	mov	x24, x0
    add4:	add	x0, sp, #0x48
    add8:	mov	w1, #0xa                   	// #10
    addc:	bl	54b0 <__gmpz_sizeinbase@plt>
    ade0:	add	x8, x24, #0x1
    ade4:	cmp	x0, x8
    ade8:	b.eq	adf8 <mpc_log10@@Base+0x2d0>  // b.none
    adec:	add	x8, x24, #0x2
    adf0:	cmp	x0, x8
    adf4:	b.ne	ae4c <mpc_log10@@Base+0x324>  // b.any
    adf8:	add	x0, sp, #0x48
    adfc:	add	x1, sp, #0x48
    ae00:	mov	x2, x24
    ae04:	bl	4e10 <__gmpz_fdiv_q_2exp@plt>
    ae08:	add	x0, sp, #0x38
    ae0c:	mov	w1, #0x5                   	// #5
    ae10:	mov	x2, x24
    ae14:	bl	50b0 <__gmpz_ui_pow_ui@plt>
    ae18:	add	x0, sp, #0x38
    ae1c:	add	x1, sp, #0x48
    ae20:	bl	5300 <__gmpz_cmp@plt>
    ae24:	cbnz	w0, ae4c <mpc_log10@@Base+0x324>
    ae28:	add	x0, sp, #0x58
    ae2c:	mov	w1, #0x40                  	// #64
    ae30:	bl	4c80 <mpfr_set_prec@plt>
    ae34:	add	x0, sp, #0x58
    ae38:	mov	x2, #0xffffffffffffffff    	// #-1
    ae3c:	mov	x1, x24
    ae40:	mov	w3, wzr
    ae44:	bl	5130 <mpfr_set_ui_2exp@plt>
    ae48:	mov	w28, #0x1                   	// #1
    ae4c:	add	x0, sp, #0x48
    ae50:	bl	5180 <__gmpz_clear@plt>
    ae54:	add	x0, sp, #0x38
    ae58:	bl	5180 <__gmpz_clear@plt>
    ae5c:	mov	w24, #0x1                   	// #1
    ae60:	b	abc0 <mpc_log10@@Base+0x98>
    ae64:	mov	w24, wzr
    ae68:	b	abc0 <mpc_log10@@Base+0x98>
    ae6c:	ldr	w3, [sp, #96]
    ae70:	ldr	x0, [sp, #32]
    ae74:	ldr	w2, [sp, #12]
    ae78:	add	x1, sp, #0x58
    ae7c:	bl	51d0 <mpfr_set4@plt>
    ae80:	cbz	w20, ae9c <mpc_log10@@Base+0x374>
    ae84:	and	w8, w27, #0x3
    ae88:	tst	w27, #0x3
    ae8c:	cset	w9, ne  // ne = any
    ae90:	cmp	w8, #0x2
    ae94:	csinv	w23, w9, wzr, ne  // ne = any
    ae98:	b	aea0 <mpc_log10@@Base+0x378>
    ae9c:	mov	w23, w0
    aea0:	ldr	w3, [sp, #128]
    aea4:	ldr	x0, [sp, #48]
    aea8:	asr	w2, w19, #4
    aeac:	mov	x1, x21
    aeb0:	bl	51d0 <mpfr_set4@plt>
    aeb4:	cbz	w22, aed0 <mpc_log10@@Base+0x3a8>
    aeb8:	asr	w8, w27, #2
    aebc:	cmp	w8, #0x0
    aec0:	cset	w9, ne  // ne = any
    aec4:	cmp	w8, #0x2
    aec8:	csinv	w19, w9, wzr, ne  // ne = any
    aecc:	b	aed4 <mpc_log10@@Base+0x3ac>
    aed0:	mov	w19, w0
    aed4:	sub	x0, x29, #0x28
    aed8:	bl	4d60 <mpfr_clear@plt>
    aedc:	add	x0, sp, #0x58
    aee0:	bl	4a10 <mpc_clear@plt>
    aee4:	cmp	w23, #0x0
    aee8:	mov	w8, #0x2                   	// #2
    aeec:	cset	w9, ne  // ne = any
    aef0:	csel	w8, w8, w9, lt  // lt = tstop
    aef4:	cmp	w19, #0x0
    aef8:	cset	w9, ne  // ne = any
    aefc:	ldp	x20, x19, [sp, #272]
    af00:	ldp	x22, x21, [sp, #256]
    af04:	ldp	x24, x23, [sp, #240]
    af08:	ldp	x26, x25, [sp, #224]
    af0c:	ldp	x28, x27, [sp, #208]
    af10:	ldp	x29, x30, [sp, #192]
    af14:	lsl	w9, w9, #2
    af18:	mov	w10, #0x8                   	// #8
    af1c:	csel	w9, w10, w9, lt  // lt = tstop
    af20:	orr	w0, w9, w8
    af24:	add	sp, sp, #0x120
    af28:	ret

000000000000af2c <mpc_alloc_str@@Base>:
    af2c:	stp	x29, x30, [sp, #-32]!
    af30:	mov	x29, sp
    af34:	str	x19, [sp, #16]
    af38:	mov	x19, x0
    af3c:	add	x0, x29, #0x18
    af40:	mov	x1, xzr
    af44:	mov	x2, xzr
    af48:	bl	4ae0 <__gmp_get_memory_functions@plt>
    af4c:	ldr	x8, [x29, #24]
    af50:	mov	x0, x19
    af54:	blr	x8
    af58:	ldr	x19, [sp, #16]
    af5c:	ldp	x29, x30, [sp], #32
    af60:	ret

000000000000af64 <mpc_realloc_str@@Base>:
    af64:	stp	x29, x30, [sp, #-48]!
    af68:	mov	x29, sp
    af6c:	str	x21, [sp, #16]
    af70:	stp	x20, x19, [sp, #32]
    af74:	mov	x19, x2
    af78:	mov	x20, x1
    af7c:	mov	x21, x0
    af80:	add	x1, x29, #0x18
    af84:	mov	x0, xzr
    af88:	mov	x2, xzr
    af8c:	bl	4ae0 <__gmp_get_memory_functions@plt>
    af90:	ldr	x8, [x29, #24]
    af94:	mov	x0, x21
    af98:	mov	x1, x20
    af9c:	mov	x2, x19
    afa0:	blr	x8
    afa4:	ldp	x20, x19, [sp, #32]
    afa8:	ldr	x21, [sp, #16]
    afac:	ldp	x29, x30, [sp], #48
    afb0:	ret

000000000000afb4 <mpc_free_str@@Base>:
    afb4:	sub	sp, sp, #0x30
    afb8:	stp	x20, x19, [sp, #32]
    afbc:	mov	x19, x0
    afc0:	add	x2, sp, #0x8
    afc4:	mov	x0, xzr
    afc8:	mov	x1, xzr
    afcc:	stp	x29, x30, [sp, #16]
    afd0:	add	x29, sp, #0x10
    afd4:	bl	4ae0 <__gmp_get_memory_functions@plt>
    afd8:	ldr	x20, [sp, #8]
    afdc:	mov	x0, x19
    afe0:	bl	4a00 <strlen@plt>
    afe4:	add	x1, x0, #0x1
    afe8:	mov	x0, x19
    afec:	blr	x20
    aff0:	ldp	x20, x19, [sp, #32]
    aff4:	ldp	x29, x30, [sp, #16]
    aff8:	add	sp, sp, #0x30
    affc:	ret

000000000000b000 <mpc_mul_2si@@Base>:
    b000:	stp	x29, x30, [sp, #-64]!
    b004:	stp	x20, x19, [sp, #48]
    b008:	mov	w19, w3
    b00c:	and	w3, w3, #0xf
    b010:	str	x23, [sp, #16]
    b014:	stp	x22, x21, [sp, #32]
    b018:	mov	x29, sp
    b01c:	mov	x20, x2
    b020:	mov	x21, x1
    b024:	mov	x22, x0
    b028:	bl	4a70 <mpfr_mul_2si@plt>
    b02c:	mov	w23, w0
    b030:	add	x0, x22, #0x20
    b034:	add	x1, x21, #0x20
    b038:	asr	w3, w19, #4
    b03c:	mov	x2, x20
    b040:	bl	4a70 <mpfr_mul_2si@plt>
    b044:	cmp	w23, #0x0
    b048:	mov	w8, #0x2                   	// #2
    b04c:	cset	w9, ne  // ne = any
    b050:	csel	w8, w8, w9, lt  // lt = tstop
    b054:	cmp	w0, #0x0
    b058:	cset	w9, ne  // ne = any
    b05c:	ldp	x20, x19, [sp, #48]
    b060:	ldp	x22, x21, [sp, #32]
    b064:	ldr	x23, [sp, #16]
    b068:	lsl	w9, w9, #2
    b06c:	mov	w10, #0x8                   	// #8
    b070:	csel	w9, w10, w9, lt  // lt = tstop
    b074:	orr	w0, w9, w8
    b078:	ldp	x29, x30, [sp], #64
    b07c:	ret

000000000000b080 <mpc_mul_2ui@@Base>:
    b080:	stp	x29, x30, [sp, #-64]!
    b084:	stp	x20, x19, [sp, #48]
    b088:	mov	w19, w3
    b08c:	and	w3, w3, #0xf
    b090:	str	x23, [sp, #16]
    b094:	stp	x22, x21, [sp, #32]
    b098:	mov	x29, sp
    b09c:	mov	x20, x2
    b0a0:	mov	x21, x1
    b0a4:	mov	x22, x0
    b0a8:	bl	4f40 <mpfr_mul_2ui@plt>
    b0ac:	mov	w23, w0
    b0b0:	add	x0, x22, #0x20
    b0b4:	add	x1, x21, #0x20
    b0b8:	asr	w3, w19, #4
    b0bc:	mov	x2, x20
    b0c0:	bl	4f40 <mpfr_mul_2ui@plt>
    b0c4:	cmp	w23, #0x0
    b0c8:	mov	w8, #0x2                   	// #2
    b0cc:	cset	w9, ne  // ne = any
    b0d0:	csel	w8, w8, w9, lt  // lt = tstop
    b0d4:	cmp	w0, #0x0
    b0d8:	cset	w9, ne  // ne = any
    b0dc:	ldp	x20, x19, [sp, #48]
    b0e0:	ldp	x22, x21, [sp, #32]
    b0e4:	ldr	x23, [sp, #16]
    b0e8:	lsl	w9, w9, #2
    b0ec:	mov	w10, #0x8                   	// #8
    b0f0:	csel	w9, w10, w9, lt  // lt = tstop
    b0f4:	orr	w0, w9, w8
    b0f8:	ldp	x29, x30, [sp], #64
    b0fc:	ret

000000000000b100 <mpc_mul_naive@@Base>:
    b100:	sub	sp, sp, #0xa0
    b104:	stp	x29, x30, [sp, #64]
    b108:	stp	x28, x27, [sp, #80]
    b10c:	stp	x26, x25, [sp, #96]
    b110:	stp	x24, x23, [sp, #112]
    b114:	stp	x22, x21, [sp, #128]
    b118:	stp	x20, x19, [sp, #144]
    b11c:	ldr	x9, [x1, #16]
    b120:	mov	x8, #0x4                   	// #4
    b124:	movk	x8, #0x8000, lsl #48
    b128:	add	x29, sp, #0x40
    b12c:	cmp	x9, x8
    b130:	b.lt	b2ac <mpc_mul_naive@@Base+0x1ac>  // b.tstop
    b134:	ldr	x9, [x1, #48]
    b138:	mov	x21, x1
    b13c:	cmp	x9, x8
    b140:	b.lt	b2ac <mpc_mul_naive@@Base+0x1ac>  // b.tstop
    b144:	ldr	x8, [x2, #16]
    b148:	mov	x9, #0x4                   	// #4
    b14c:	movk	x9, #0x8000, lsl #48
    b150:	mov	x20, x2
    b154:	cmp	x8, x9
    b158:	b.lt	b2ac <mpc_mul_naive@@Base+0x1ac>  // b.tstop
    b15c:	ldr	x8, [x20, #48]
    b160:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    b164:	cmp	x8, x9
    b168:	b.le	b2ac <mpc_mul_naive@@Base+0x1ac>
    b16c:	cmp	x0, x21
    b170:	cset	w8, eq  // eq = none
    b174:	cmp	x0, x20
    b178:	cset	w9, eq  // eq = none
    b17c:	orr	w26, w8, w9
    b180:	mov	w22, w3
    b184:	mov	x19, x0
    b188:	add	x23, x21, #0x20
    b18c:	cmp	w26, #0x1
    b190:	add	x24, x20, #0x20
    b194:	b.ne	b1ac <mpc_mul_naive@@Base+0xac>  // b.any
    b198:	ldr	x1, [x19]
    b19c:	ldr	x2, [x19, #32]
    b1a0:	mov	x0, sp
    b1a4:	bl	53c0 <mpc_init3@plt>
    b1a8:	b	b1bc <mpc_mul_naive@@Base+0xbc>
    b1ac:	ldp	q1, q0, [x19, #32]
    b1b0:	ldp	q3, q2, [x19]
    b1b4:	stp	q1, q0, [sp, #32]
    b1b8:	stp	q3, q2, [sp]
    b1bc:	and	w25, w22, #0xf
    b1c0:	mov	x0, sp
    b1c4:	mov	x1, x21
    b1c8:	mov	x2, x20
    b1cc:	mov	x3, x23
    b1d0:	mov	x4, x24
    b1d4:	mov	w5, w25
    b1d8:	mov	x28, sp
    b1dc:	bl	4a90 <mpfr_fmms@plt>
    b1e0:	tbnz	w0, #31, b20c <mpc_mul_naive@@Base+0x10c>
    b1e4:	mov	x0, sp
    b1e8:	mov	x1, x21
    b1ec:	mov	x2, x20
    b1f0:	mov	x3, x23
    b1f4:	mov	x4, x24
    b1f8:	mov	w5, w25
    b1fc:	bl	4a90 <mpfr_fmms@plt>
    b200:	cmp	w0, #0x0
    b204:	cset	w27, ne  // ne = any
    b208:	b	b210 <mpc_mul_naive@@Base+0x110>
    b20c:	mov	w27, #0x2                   	// #2
    b210:	add	x25, x28, #0x20
    b214:	asr	w22, w22, #4
    b218:	mov	x0, x25
    b21c:	mov	x1, x21
    b220:	mov	x2, x24
    b224:	mov	x3, x23
    b228:	mov	x4, x20
    b22c:	mov	w5, w22
    b230:	bl	4c90 <mpfr_fmma@plt>
    b234:	tbnz	w0, #31, b264 <mpc_mul_naive@@Base+0x164>
    b238:	mov	x0, x25
    b23c:	mov	x1, x21
    b240:	mov	x2, x24
    b244:	mov	x3, x23
    b248:	mov	x4, x20
    b24c:	mov	w5, w22
    b250:	bl	4c90 <mpfr_fmma@plt>
    b254:	cmp	w0, #0x0
    b258:	cset	w8, ne  // ne = any
    b25c:	lsl	w8, w8, #2
    b260:	b	b268 <mpc_mul_naive@@Base+0x168>
    b264:	mov	w8, #0x8                   	// #8
    b268:	mov	x1, sp
    b26c:	mov	x0, x19
    b270:	mov	w2, wzr
    b274:	orr	w20, w8, w27
    b278:	bl	5580 <mpc_set@plt>
    b27c:	cbz	w26, b288 <mpc_mul_naive@@Base+0x188>
    b280:	mov	x0, sp
    b284:	bl	4a10 <mpc_clear@plt>
    b288:	mov	w0, w20
    b28c:	ldp	x20, x19, [sp, #144]
    b290:	ldp	x22, x21, [sp, #128]
    b294:	ldp	x24, x23, [sp, #112]
    b298:	ldp	x26, x25, [sp, #96]
    b29c:	ldp	x28, x27, [sp, #80]
    b2a0:	ldp	x29, x30, [sp, #64]
    b2a4:	add	sp, sp, #0xa0
    b2a8:	ret
    b2ac:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    b2b0:	ldr	x8, [x8, #4008]
    b2b4:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    b2b8:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    b2bc:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    b2c0:	ldr	x0, [x8]
    b2c4:	add	x1, x1, #0x990
    b2c8:	add	x2, x2, #0xaf6
    b2cc:	add	x4, x4, #0xafc
    b2d0:	mov	w3, #0x175                 	// #373
    b2d4:	bl	55a0 <fprintf@plt>
    b2d8:	bl	5000 <abort@plt>

000000000000b2dc <mpc_mul_karatsuba@@Base>:
    b2dc:	sub	sp, sp, #0x1c0
    b2e0:	cmp	x0, x1
    b2e4:	cset	w8, eq  // eq = none
    b2e8:	cmp	x0, x2
    b2ec:	cset	w9, eq  // eq = none
    b2f0:	orr	w8, w8, w9
    b2f4:	stp	x26, x25, [sp, #384]
    b2f8:	stp	x24, x23, [sp, #400]
    b2fc:	stp	x22, x21, [sp, #416]
    b300:	mov	x23, x2
    b304:	mov	x25, x1
    b308:	mov	x21, x0
    b30c:	cmp	w8, #0x1
    b310:	mov	w26, w3
    b314:	stp	x29, x30, [sp, #352]
    b318:	stp	x28, x27, [sp, #368]
    b31c:	stp	x20, x19, [sp, #432]
    b320:	add	x29, sp, #0x160
    b324:	str	w8, [sp, #116]
    b328:	b.ne	b340 <mpc_mul_karatsuba@@Base+0x64>  // b.any
    b32c:	ldr	x1, [x21]
    b330:	ldr	x2, [x21, #32]
    b334:	add	x0, sp, #0x90
    b338:	bl	53c0 <mpc_init3@plt>
    b33c:	b	b350 <mpc_mul_karatsuba@@Base+0x74>
    b340:	ldp	q1, q0, [x21, #32]
    b344:	ldp	q3, q2, [x21]
    b348:	stp	q1, q0, [sp, #176]
    b34c:	stp	q3, q2, [sp, #144]
    b350:	add	x19, x25, #0x20
    b354:	mov	x0, x25
    b358:	mov	x1, x19
    b35c:	add	x20, x23, #0x20
    b360:	bl	53b0 <mpfr_cmpabs@plt>
    b364:	cmp	w0, #0x0
    b368:	mov	w22, #0xffffffff            	// #-1
    b36c:	mov	w24, w0
    b370:	cneg	w8, w22, ge  // ge = tcont
    b374:	mov	x0, x23
    b378:	mov	x1, x20
    b37c:	str	w8, [sp, #48]
    b380:	csel	x27, x25, x19, lt  // lt = tstop
    b384:	str	x25, [sp, #88]
    b388:	csel	x28, x19, x25, lt  // lt = tstop
    b38c:	bl	53b0 <mpfr_cmpabs@plt>
    b390:	cmp	w0, #0x0
    b394:	lsr	w8, w0, #31
    b398:	cneg	w16, w22, ge  // ge = tcont
    b39c:	add	w22, w8, w24, lsr #31
    b3a0:	asr	w14, w26, #4
    b3a4:	and	w15, w26, #0xf
    b3a8:	ldr	x11, [x21]
    b3ac:	ldr	x12, [x21, #32]
    b3b0:	ldr	x13, [x28]
    b3b4:	csel	x25, x23, x20, lt  // lt = tstop
    b3b8:	stp	x23, x21, [sp, #96]
    b3bc:	csel	x23, x20, x23, lt  // lt = tstop
    b3c0:	tst	w22, #0x1
    b3c4:	csel	w8, w15, w14, eq  // eq = none
    b3c8:	mov	w9, #0x2                   	// #2
    b3cc:	cmp	w8, #0x3
    b3d0:	mov	w10, #0x3                   	// #3
    b3d4:	csel	w9, w9, w8, eq  // eq = none
    b3d8:	cmp	w8, #0x2
    b3dc:	csel	w9, w10, w9, eq  // eq = none
    b3e0:	cmp	w22, #0x0
    b3e4:	stp	w15, w14, [sp, #24]
    b3e8:	and	w10, w22, #0x1
    b3ec:	csel	w8, w8, w9, eq  // eq = none
    b3f0:	str	w8, [sp, #44]
    b3f4:	ldr	x8, [x25]
    b3f8:	lsl	x9, x10, #5
    b3fc:	ldr	x9, [x21, x9]
    b400:	str	w0, [sp, #52]
    b404:	cmp	x11, x12
    b408:	add	x1, x8, x13
    b40c:	sub	x0, x29, #0x48
    b410:	str	w26, [sp, #84]
    b414:	str	w16, [sp, #72]
    b418:	str	x9, [sp, #32]
    b41c:	csel	x19, x11, x12, gt
    b420:	str	x1, [sp, #64]
    b424:	bl	5440 <mpfr_init2@plt>
    b428:	ldr	x8, [x27]
    b42c:	ldr	x9, [x23]
    b430:	sub	x0, x29, #0x68
    b434:	mov	x21, x27
    b438:	add	x1, x9, x8
    b43c:	str	x1, [sp, #56]
    b440:	bl	5440 <mpfr_init2@plt>
    b444:	sub	x0, x29, #0x28
    b448:	mov	w1, #0x2                   	// #2
    b44c:	bl	5440 <mpfr_init2@plt>
    b450:	sub	x0, x29, #0x88
    b454:	mov	w1, #0x2                   	// #2
    b458:	bl	5440 <mpfr_init2@plt>
    b45c:	sub	x0, x29, #0x48
    b460:	mov	x1, x28
    b464:	mov	x2, x25
    b468:	mov	w3, wzr
    b46c:	str	x28, [sp, #120]
    b470:	str	x25, [sp, #136]
    b474:	bl	4b70 <mpfr_mul@plt>
    b478:	mov	w25, wzr
    b47c:	mov	w26, wzr
    b480:	mov	w20, wzr
    b484:	cbnz	w0, ba24 <mpc_mul_karatsuba@@Base+0x748>
    b488:	str	x21, [sp, #16]
    b48c:	tbz	w24, #31, b4a0 <mpc_mul_karatsuba@@Base+0x1c4>
    b490:	sub	x0, x29, #0x48
    b494:	sub	x1, x29, #0x48
    b498:	mov	w2, wzr
    b49c:	bl	4b80 <mpfr_neg@plt>
    b4a0:	ldr	x1, [sp, #16]
    b4a4:	sub	x0, x29, #0x68
    b4a8:	mov	x2, x23
    b4ac:	mov	w3, wzr
    b4b0:	bl	4b70 <mpfr_mul@plt>
    b4b4:	mov	w25, wzr
    b4b8:	mov	w26, wzr
    b4bc:	mov	w20, wzr
    b4c0:	cbnz	w0, ba24 <mpc_mul_karatsuba@@Base+0x748>
    b4c4:	ldr	w8, [sp, #52]
    b4c8:	tbz	w8, #31, b4dc <mpc_mul_karatsuba@@Base+0x200>
    b4cc:	sub	x0, x29, #0x68
    b4d0:	sub	x1, x29, #0x68
    b4d4:	mov	w2, wzr
    b4d8:	bl	4b80 <mpfr_neg@plt>
    b4dc:	mov	x25, #0x2                   	// #2
    b4e0:	sub	x0, x29, #0x48
    b4e4:	sub	x1, x29, #0x68
    b4e8:	movk	x25, #0x8000, lsl #48
    b4ec:	bl	53b0 <mpfr_cmpabs@plt>
    b4f0:	ldr	w24, [sp, #72]
    b4f4:	cmp	w0, #0x1
    b4f8:	b.lt	b51c <mpc_mul_karatsuba@@Base+0x240>  // b.tstop
    b4fc:	ldur	x8, [x29, #-56]
    b500:	ldr	x26, [sp, #120]
    b504:	cmp	x8, x25
    b508:	b.gt	b54c <mpc_mul_karatsuba@@Base+0x270>
    b50c:	b.ne	b514 <mpc_mul_karatsuba@@Base+0x238>  // b.any
    b510:	bl	4b00 <mpfr_set_erangeflag@plt>
    b514:	mov	w8, wzr
    b518:	b	b550 <mpc_mul_karatsuba@@Base+0x274>
    b51c:	ldur	x8, [x29, #-56]
    b520:	ldr	x26, [sp, #120]
    b524:	mov	x9, #0x2                   	// #2
    b528:	movk	x9, #0x8000, lsl #48
    b52c:	cmp	x8, x9
    b530:	cbz	w0, b584 <mpc_mul_karatsuba@@Base+0x2a8>
    b534:	b.gt	b5a0 <mpc_mul_karatsuba@@Base+0x2c4>
    b538:	cmp	x8, x25
    b53c:	b.ne	b544 <mpc_mul_karatsuba@@Base+0x268>  // b.any
    b540:	bl	4b00 <mpfr_set_erangeflag@plt>
    b544:	mov	w20, wzr
    b548:	b	b5a4 <mpc_mul_karatsuba@@Base+0x2c8>
    b54c:	ldur	w8, [x29, #-64]
    b550:	ldur	x9, [x29, #-88]
    b554:	ldr	x27, [sp, #32]
    b558:	mov	x10, #0x2                   	// #2
    b55c:	movk	x10, #0x8000, lsl #48
    b560:	cmp	x9, x10
    b564:	lsl	w20, w8, #1
    b568:	b.gt	b604 <mpc_mul_karatsuba@@Base+0x328>
    b56c:	cmp	x9, x25
    b570:	b.ne	b578 <mpc_mul_karatsuba@@Base+0x29c>  // b.any
    b574:	bl	4b00 <mpfr_set_erangeflag@plt>
    b578:	mov	w8, wzr
    b57c:	sub	w20, w20, wzr
    b580:	b	b60c <mpc_mul_karatsuba@@Base+0x330>
    b584:	b.gt	b5dc <mpc_mul_karatsuba@@Base+0x300>
    b588:	ldr	x27, [sp, #32]
    b58c:	cmp	x8, x25
    b590:	b.ne	b598 <mpc_mul_karatsuba@@Base+0x2bc>  // b.any
    b594:	bl	4b00 <mpfr_set_erangeflag@plt>
    b598:	mov	w20, wzr
    b59c:	b	b5e4 <mpc_mul_karatsuba@@Base+0x308>
    b5a0:	ldur	w20, [x29, #-64]
    b5a4:	ldur	x8, [x29, #-88]
    b5a8:	ldr	x27, [sp, #32]
    b5ac:	mov	x9, #0x2                   	// #2
    b5b0:	movk	x9, #0x8000, lsl #48
    b5b4:	cmp	x8, x9
    b5b8:	b.gt	b5d0 <mpc_mul_karatsuba@@Base+0x2f4>
    b5bc:	cmp	x8, x25
    b5c0:	b.ne	b5c8 <mpc_mul_karatsuba@@Base+0x2ec>  // b.any
    b5c4:	bl	4b00 <mpfr_set_erangeflag@plt>
    b5c8:	mov	w8, wzr
    b5cc:	b	b5d4 <mpc_mul_karatsuba@@Base+0x2f8>
    b5d0:	ldur	w8, [x29, #-96]
    b5d4:	sub	w20, w20, w8, lsl #1
    b5d8:	b	b60c <mpc_mul_karatsuba@@Base+0x330>
    b5dc:	ldur	w20, [x29, #-64]
    b5e0:	ldr	x27, [sp, #32]
    b5e4:	ldur	x8, [x29, #-88]
    b5e8:	mov	x9, #0x2                   	// #2
    b5ec:	movk	x9, #0x8000, lsl #48
    b5f0:	cmp	x8, x9
    b5f4:	b.gt	b604 <mpc_mul_karatsuba@@Base+0x328>
    b5f8:	cmp	x8, x25
    b5fc:	b.eq	b574 <mpc_mul_karatsuba@@Base+0x298>  // b.none
    b600:	b	b578 <mpc_mul_karatsuba@@Base+0x29c>
    b604:	ldur	w8, [x29, #-96]
    b608:	sub	w20, w20, w8
    b60c:	ldr	x8, [x26, #16]
    b610:	mov	x9, #0x2                   	// #2
    b614:	movk	x9, #0x8000, lsl #48
    b618:	str	w22, [sp, #12]
    b61c:	cmp	x8, x9
    b620:	b.gt	b638 <mpc_mul_karatsuba@@Base+0x35c>
    b624:	cmp	x8, x25
    b628:	b.ne	b630 <mpc_mul_karatsuba@@Base+0x354>  // b.any
    b62c:	bl	4b00 <mpfr_set_erangeflag@plt>
    b630:	mov	w22, wzr
    b634:	b	b63c <mpc_mul_karatsuba@@Base+0x360>
    b638:	ldr	w22, [x26, #8]
    b63c:	ldr	x8, [x23, #16]
    b640:	mov	x9, #0x2                   	// #2
    b644:	movk	x9, #0x8000, lsl #48
    b648:	str	x23, [sp, #128]
    b64c:	cmp	x8, x9
    b650:	b.gt	b668 <mpc_mul_karatsuba@@Base+0x38c>
    b654:	cmp	x8, x25
    b658:	b.ne	b660 <mpc_mul_karatsuba@@Base+0x384>  // b.any
    b65c:	bl	4b00 <mpfr_set_erangeflag@plt>
    b660:	mov	w8, wzr
    b664:	b	b66c <mpc_mul_karatsuba@@Base+0x390>
    b668:	ldr	w8, [x23, #8]
    b66c:	ldp	w25, w21, [sp, #44]
    b670:	ldr	x28, [sp, #16]
    b674:	mul	w9, w24, w21
    b678:	mul	w9, w9, w22
    b67c:	mul	w23, w9, w8
    b680:	mul	w8, w23, w20
    b684:	tbnz	w8, #31, b6ac <mpc_mul_karatsuba@@Base+0x3d0>
    b688:	mov	w8, w24
    b68c:	mov	w24, w21
    b690:	mov	w21, w8
    b694:	ldr	x8, [sp, #136]
    b698:	str	x8, [sp, #120]
    b69c:	mov	x8, x26
    b6a0:	ldr	x26, [sp, #128]
    b6a4:	stp	x8, x28, [sp, #128]
    b6a8:	b	b6bc <mpc_mul_karatsuba@@Base+0x3e0>
    b6ac:	sub	x0, x29, #0x48
    b6b0:	sub	x1, x29, #0x68
    b6b4:	bl	5090 <mpfr_swap@plt>
    b6b8:	str	x28, [sp, #120]
    b6bc:	ldp	x9, x8, [sp, #56]
    b6c0:	mov	w10, #0x2                   	// #2
    b6c4:	mov	w22, wzr
    b6c8:	cmp	x8, x9
    b6cc:	csel	x8, x8, x9, gt
    b6d0:	cmp	w23, #0x0
    b6d4:	cinc	w20, w10, le
    b6d8:	cmp	w25, #0x0
    b6dc:	cinc	x28, x27, eq  // eq = none
    b6e0:	str	x8, [sp, #72]
    b6e4:	mov	x0, x19
    b6e8:	bl	4d20 <mpc_ceil_log2@plt>
    b6ec:	add	x8, x19, x0
    b6f0:	add	x19, x8, #0x3
    b6f4:	sub	x0, x29, #0x28
    b6f8:	mov	x1, x19
    b6fc:	bl	4c80 <mpfr_set_prec@plt>
    b700:	sub	x0, x29, #0x88
    b704:	mov	x1, x19
    b708:	bl	4c80 <mpfr_set_prec@plt>
    b70c:	sub	x0, x29, #0x28
    b710:	mov	w3, #0x4                   	// #4
    b714:	cmn	w24, #0x1
    b718:	b.eq	b728 <mpc_mul_karatsuba@@Base+0x44c>  // b.none
    b71c:	ldp	x2, x1, [sp, #128]
    b720:	bl	4e60 <mpfr_add@plt>
    b724:	b	b730 <mpc_mul_karatsuba@@Base+0x454>
    b728:	ldp	x2, x1, [sp, #128]
    b72c:	bl	4a60 <mpfr_sub@plt>
    b730:	mov	w27, w0
    b734:	mov	w25, w24
    b738:	sub	x0, x29, #0x88
    b73c:	mov	w3, #0x4                   	// #4
    b740:	mov	x1, x26
    b744:	cmn	w21, #0x1
    b748:	b.eq	b848 <mpc_mul_karatsuba@@Base+0x56c>  // b.none
    b74c:	ldr	x2, [sp, #120]
    b750:	bl	4a60 <mpfr_sub@plt>
    b754:	mov	w24, w0
    b758:	orr	w23, w24, w27
    b75c:	mov	x27, x19
    b760:	cbnz	w23, b778 <mpc_mul_karatsuba@@Base+0x49c>
    b764:	lsl	x27, x19, #1
    b768:	sub	x0, x29, #0x28
    b76c:	mov	x1, x27
    b770:	mov	w2, wzr
    b774:	bl	5370 <mpfr_prec_round@plt>
    b778:	sub	x0, x29, #0x28
    b77c:	sub	x1, x29, #0x28
    b780:	sub	x2, x29, #0x88
    b784:	mov	w3, #0x4                   	// #4
    b788:	bl	4b70 <mpfr_mul@plt>
    b78c:	orr	w23, w0, w23
    b790:	cbnz	w23, b7c8 <mpc_mul_karatsuba@@Base+0x4ec>
    b794:	ldur	x8, [x29, #-56]
    b798:	ldur	x9, [x29, #-88]
    b79c:	subs	x8, x8, x9
    b7a0:	ldr	x9, [sp, #72]
    b7a4:	cneg	x8, x8, mi  // mi = first
    b7a8:	add	x8, x8, x9
    b7ac:	cmp	x8, x27
    b7b0:	csinc	x1, x27, x8, ge  // ge = tcont
    b7b4:	cmp	x1, x19
    b7b8:	b.le	b7c8 <mpc_mul_karatsuba@@Base+0x4ec>
    b7bc:	sub	x0, x29, #0x88
    b7c0:	mov	w2, wzr
    b7c4:	bl	5370 <mpfr_prec_round@plt>
    b7c8:	sub	x0, x29, #0x88
    b7cc:	sub	x1, x29, #0x48
    b7d0:	sub	x2, x29, #0x68
    b7d4:	mov	w3, w20
    b7d8:	bl	4a60 <mpfr_sub@plt>
    b7dc:	ldur	x8, [x29, #-24]
    b7e0:	mov	x9, #0x2                   	// #2
    b7e4:	movk	x9, #0x8000, lsl #48
    b7e8:	orr	w23, w0, w23
    b7ec:	cmp	x8, x9
    b7f0:	b.gt	b80c <mpc_mul_karatsuba@@Base+0x530>
    b7f4:	mov	x9, #0x2                   	// #2
    b7f8:	movk	x9, #0x8000, lsl #48
    b7fc:	cmp	x8, x9
    b800:	b.ne	b818 <mpc_mul_karatsuba@@Base+0x53c>  // b.any
    b804:	bl	4b00 <mpfr_set_erangeflag@plt>
    b808:	b	b818 <mpc_mul_karatsuba@@Base+0x53c>
    b80c:	ldur	w8, [x29, #-32]
    b810:	mov	w24, w20
    b814:	cbnz	w8, b884 <mpc_mul_karatsuba@@Base+0x5a8>
    b818:	ldur	x8, [x29, #-120]
    b81c:	mov	x9, #0x2                   	// #2
    b820:	movk	x9, #0x8000, lsl #48
    b824:	cmp	x8, x9
    b828:	b.gt	b874 <mpc_mul_karatsuba@@Base+0x598>
    b82c:	mov	x9, #0x2                   	// #2
    b830:	movk	x9, #0x8000, lsl #48
    b834:	cmp	x8, x9
    b838:	b.ne	b840 <mpc_mul_karatsuba@@Base+0x564>  // b.any
    b83c:	bl	4b00 <mpfr_set_erangeflag@plt>
    b840:	mov	w24, #0x3                   	// #3
    b844:	b	b884 <mpc_mul_karatsuba@@Base+0x5a8>
    b848:	ldr	x2, [sp, #120]
    b84c:	bl	4e60 <mpfr_add@plt>
    b850:	mov	w24, w0
    b854:	sub	x0, x29, #0x88
    b858:	sub	x1, x29, #0x88
    b85c:	mov	w2, wzr
    b860:	bl	4b80 <mpfr_neg@plt>
    b864:	orr	w23, w24, w27
    b868:	mov	x27, x19
    b86c:	cbnz	w23, b778 <mpc_mul_karatsuba@@Base+0x49c>
    b870:	b	b764 <mpc_mul_karatsuba@@Base+0x488>
    b874:	ldur	w8, [x29, #-128]
    b878:	cmp	w8, #0x0
    b87c:	mov	w8, #0x2                   	// #2
    b880:	cinc	w24, w8, le
    b884:	sub	x0, x29, #0x28
    b888:	sub	x1, x29, #0x28
    b88c:	sub	x2, x29, #0x88
    b890:	mov	w3, w24
    b894:	bl	4e60 <mpfr_add@plt>
    b898:	orr	w8, w23, w0
    b89c:	cbz	w8, b8f4 <mpc_mul_karatsuba@@Base+0x618>
    b8a0:	sub	x1, x27, #0x3
    b8a4:	sub	x0, x29, #0x28
    b8a8:	mov	w3, #0x1                   	// #1
    b8ac:	mov	w2, w24
    b8b0:	mov	x4, x28
    b8b4:	bl	5450 <mpfr_can_round@plt>
    b8b8:	orr	w8, w22, w0
    b8bc:	mov	w22, #0x1                   	// #1
    b8c0:	mov	w24, w25
    b8c4:	cbz	w8, b6e4 <mpc_mul_karatsuba@@Base+0x408>
    b8c8:	cbz	w0, b968 <mpc_mul_karatsuba@@Base+0x68c>
    b8cc:	ldur	x8, [x29, #-24]
    b8d0:	mov	x9, #0x2                   	// #2
    b8d4:	movk	x9, #0x8000, lsl #48
    b8d8:	cmp	x8, x9
    b8dc:	b.gt	b978 <mpc_mul_karatsuba@@Base+0x69c>
    b8e0:	mov	x9, #0x2                   	// #2
    b8e4:	movk	x9, #0x8000, lsl #48
    b8e8:	cmp	x8, x9
    b8ec:	b.ne	b8f4 <mpc_mul_karatsuba@@Base+0x618>  // b.any
    b8f0:	bl	4b00 <mpfr_set_erangeflag@plt>
    b8f4:	mov	w20, wzr
    b8f8:	ldr	w8, [sp, #12]
    b8fc:	cmp	w8, #0x1
    b900:	b.eq	b988 <mpc_mul_karatsuba@@Base+0x6ac>  // b.none
    b904:	cbnz	w8, b948 <mpc_mul_karatsuba@@Base+0x66c>
    b908:	ldur	w3, [x29, #-32]
    b90c:	ldr	w2, [sp, #24]
    b910:	add	x0, sp, #0x90
    b914:	sub	x1, x29, #0x28
    b918:	add	x22, sp, #0x90
    b91c:	bl	51d0 <mpfr_set4@plt>
    b920:	ldr	w3, [sp, #28]
    b924:	mov	w19, w0
    b928:	add	x0, x22, #0x20
    b92c:	sub	x1, x29, #0x48
    b930:	sub	x2, x29, #0x68
    b934:	bl	4e60 <mpfr_add@plt>
    b938:	cmp	w19, #0x0
    b93c:	mov	w26, w0
    b940:	csel	w25, w20, w19, eq  // eq = none
    b944:	b	ba10 <mpc_mul_karatsuba@@Base+0x734>
    b948:	ldr	w2, [sp, #24]
    b94c:	add	x0, sp, #0x90
    b950:	sub	x1, x29, #0x28
    b954:	add	x19, sp, #0x90
    b958:	bl	4b80 <mpfr_neg@plt>
    b95c:	cbz	w0, b9a8 <mpc_mul_karatsuba@@Base+0x6cc>
    b960:	mov	w25, w0
    b964:	b	b9ac <mpc_mul_karatsuba@@Base+0x6d0>
    b968:	mov	w25, wzr
    b96c:	mov	w26, wzr
    b970:	mov	w20, wzr
    b974:	b	ba24 <mpc_mul_karatsuba@@Base+0x748>
    b978:	ldur	w20, [x29, #-32]
    b97c:	ldr	w8, [sp, #12]
    b980:	cmp	w8, #0x1
    b984:	b.ne	b904 <mpc_mul_karatsuba@@Base+0x628>  // b.any
    b988:	ldr	w2, [sp, #28]
    b98c:	add	x8, sp, #0x90
    b990:	add	x0, x8, #0x20
    b994:	sub	x1, x29, #0x28
    b998:	bl	4b80 <mpfr_neg@plt>
    b99c:	cbz	w0, b9f4 <mpc_mul_karatsuba@@Base+0x718>
    b9a0:	mov	w26, w0
    b9a4:	b	b9f8 <mpc_mul_karatsuba@@Base+0x71c>
    b9a8:	neg	w25, w20
    b9ac:	ldr	w20, [sp, #28]
    b9b0:	mov	w8, #0x2                   	// #2
    b9b4:	add	x19, x19, #0x20
    b9b8:	mov	w9, #0x3                   	// #3
    b9bc:	cmp	w20, #0x3
    b9c0:	csel	w8, w8, w20, eq  // eq = none
    b9c4:	cmp	w20, #0x2
    b9c8:	csel	w3, w9, w8, eq  // eq = none
    b9cc:	sub	x1, x29, #0x48
    b9d0:	sub	x2, x29, #0x68
    b9d4:	mov	x0, x19
    b9d8:	bl	4e60 <mpfr_add@plt>
    b9dc:	neg	w26, w0
    b9e0:	mov	x0, x19
    b9e4:	mov	x1, x19
    b9e8:	mov	w2, w20
    b9ec:	bl	4b80 <mpfr_neg@plt>
    b9f0:	b	ba10 <mpc_mul_karatsuba@@Base+0x734>
    b9f4:	neg	w26, w20
    b9f8:	ldr	w3, [sp, #24]
    b9fc:	add	x0, sp, #0x90
    ba00:	sub	x1, x29, #0x48
    ba04:	sub	x2, x29, #0x68
    ba08:	bl	4e60 <mpfr_add@plt>
    ba0c:	mov	w25, w0
    ba10:	ldr	x0, [sp, #104]
    ba14:	add	x1, sp, #0x90
    ba18:	mov	w2, wzr
    ba1c:	bl	5580 <mpc_set@plt>
    ba20:	mov	w20, #0x1                   	// #1
    ba24:	sub	x0, x29, #0x28
    ba28:	bl	4d60 <mpfr_clear@plt>
    ba2c:	sub	x0, x29, #0x48
    ba30:	bl	4d60 <mpfr_clear@plt>
    ba34:	sub	x0, x29, #0x68
    ba38:	bl	4d60 <mpfr_clear@plt>
    ba3c:	sub	x0, x29, #0x88
    ba40:	bl	4d60 <mpfr_clear@plt>
    ba44:	ldr	w8, [sp, #116]
    ba48:	cbz	w8, ba54 <mpc_mul_karatsuba@@Base+0x778>
    ba4c:	add	x0, sp, #0x90
    ba50:	bl	4a10 <mpc_clear@plt>
    ba54:	cbz	w20, ba84 <mpc_mul_karatsuba@@Base+0x7a8>
    ba58:	cmp	w25, #0x0
    ba5c:	mov	w8, #0x2                   	// #2
    ba60:	cset	w9, ne  // ne = any
    ba64:	csel	w8, w8, w9, lt  // lt = tstop
    ba68:	cmp	w26, #0x0
    ba6c:	cset	w9, ne  // ne = any
    ba70:	lsl	w9, w9, #2
    ba74:	mov	w10, #0x8                   	// #8
    ba78:	csel	w9, w10, w9, lt  // lt = tstop
    ba7c:	orr	w0, w9, w8
    ba80:	b	ba94 <mpc_mul_karatsuba@@Base+0x7b8>
    ba84:	ldp	x2, x0, [sp, #96]
    ba88:	ldr	x1, [sp, #88]
    ba8c:	ldr	w3, [sp, #84]
    ba90:	bl	4eb0 <mpc_mul_naive@plt>
    ba94:	ldp	x20, x19, [sp, #432]
    ba98:	ldp	x22, x21, [sp, #416]
    ba9c:	ldp	x24, x23, [sp, #400]
    baa0:	ldp	x26, x25, [sp, #384]
    baa4:	ldp	x28, x27, [sp, #368]
    baa8:	ldp	x29, x30, [sp, #352]
    baac:	add	sp, sp, #0x1c0
    bab0:	ret

000000000000bab4 <mpc_mul@@Base>:
    bab4:	stp	x29, x30, [sp, #-32]!
    bab8:	ldr	x10, [x1, #16]
    babc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    bac0:	str	x19, [sp, #16]
    bac4:	mov	x8, x1
    bac8:	cmp	x10, x9
    bacc:	mov	x19, x0
    bad0:	mov	x29, sp
    bad4:	b.eq	bae4 <mpc_mul@@Base+0x30>  // b.none
    bad8:	ldr	x12, [x8, #48]
    badc:	cmp	x12, x9
    bae0:	b.ne	baf0 <mpc_mul@@Base+0x3c>  // b.any
    bae4:	mov	x0, x19
    bae8:	mov	x1, x8
    baec:	b	bb18 <mpc_mul@@Base+0x64>
    baf0:	ldr	x9, [x2, #16]
    baf4:	mov	x13, #0x8000000000000003    	// #-9223372036854775805
    baf8:	cmp	x9, x13
    bafc:	b.eq	bb0c <mpc_mul@@Base+0x58>  // b.none
    bb00:	ldr	x11, [x2, #48]
    bb04:	cmp	x11, x13
    bb08:	b.ne	bb2c <mpc_mul@@Base+0x78>  // b.any
    bb0c:	mov	x0, x19
    bb10:	mov	x1, x2
    bb14:	mov	x2, x8
    bb18:	bl	bc98 <mpc_mul@@Base+0x1e4>
    bb1c:	ldr	x19, [sp, #16]
    bb20:	mov	w0, wzr
    bb24:	ldp	x29, x30, [sp], #32
    bb28:	ret
    bb2c:	mov	x13, #0x2                   	// #2
    bb30:	movk	x13, #0x8000, lsl #48
    bb34:	cmp	x10, x13
    bb38:	b.eq	bb70 <mpc_mul@@Base+0xbc>  // b.none
    bb3c:	cmp	x12, x13
    bb40:	b.eq	bb70 <mpc_mul@@Base+0xbc>  // b.none
    bb44:	cmp	x9, x13
    bb48:	b.eq	bb70 <mpc_mul@@Base+0xbc>  // b.none
    bb4c:	cmp	x11, x13
    bb50:	b.eq	bb70 <mpc_mul@@Base+0xbc>  // b.none
    bb54:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
    bb58:	cmp	x12, x13
    bb5c:	b.ne	bb90 <mpc_mul@@Base+0xdc>  // b.any
    bb60:	mov	x0, x19
    bb64:	mov	x1, x2
    bb68:	mov	x2, x8
    bb6c:	b	bba0 <mpc_mul@@Base+0xec>
    bb70:	mov	x0, x19
    bb74:	bl	4a40 <mpfr_set_nan@plt>
    bb78:	add	x0, x19, #0x20
    bb7c:	bl	4a40 <mpfr_set_nan@plt>
    bb80:	ldr	x19, [sp, #16]
    bb84:	mov	w0, wzr
    bb88:	ldp	x29, x30, [sp], #32
    bb8c:	ret
    bb90:	cmp	x11, x13
    bb94:	b.ne	bbac <mpc_mul@@Base+0xf8>  // b.any
    bb98:	mov	x0, x19
    bb9c:	mov	x1, x8
    bba0:	ldr	x19, [sp, #16]
    bba4:	ldp	x29, x30, [sp], #32
    bba8:	b	bf78 <mpc_mul@@Base+0x4c4>
    bbac:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
    bbb0:	cmp	x10, x13
    bbb4:	b.ne	bbc8 <mpc_mul@@Base+0x114>  // b.any
    bbb8:	mov	x0, x19
    bbbc:	mov	x1, x2
    bbc0:	mov	x2, x8
    bbc4:	b	bbd8 <mpc_mul@@Base+0x124>
    bbc8:	cmp	x9, x13
    bbcc:	b.ne	bbe4 <mpc_mul@@Base+0x130>  // b.any
    bbd0:	mov	x0, x19
    bbd4:	mov	x1, x8
    bbd8:	ldr	x19, [sp, #16]
    bbdc:	ldp	x29, x30, [sp], #32
    bbe0:	b	c060 <mpc_mul@@Base+0x5ac>
    bbe4:	ldr	x13, [x8]
    bbe8:	ldr	x14, [x8, #32]
    bbec:	subs	x10, x10, x12
    bbf0:	cneg	x10, x10, mi  // mi = first
    bbf4:	cmp	x13, x14
    bbf8:	csel	x12, x13, x14, gt
    bbfc:	cmp	x12, #0x0
    bc00:	cinc	x12, x12, lt  // lt = tstop
    bc04:	cmp	x10, x12, asr #1
    bc08:	b.gt	bc34 <mpc_mul@@Base+0x180>
    bc0c:	ldr	x10, [x2]
    bc10:	ldr	x12, [x2, #32]
    bc14:	subs	x9, x9, x11
    bc18:	cneg	x9, x9, mi  // mi = first
    bc1c:	cmp	x10, x12
    bc20:	csel	x10, x10, x12, gt
    bc24:	cmp	x10, #0x0
    bc28:	cinc	x10, x10, lt  // lt = tstop
    bc2c:	cmp	x9, x10, asr #1
    bc30:	b.le	bc48 <mpc_mul@@Base+0x194>
    bc34:	mov	x0, x19
    bc38:	ldr	x19, [sp, #16]
    bc3c:	mov	x1, x8
    bc40:	ldp	x29, x30, [sp], #32
    bc44:	b	4eb0 <mpc_mul_naive@plt>
    bc48:	adrp	x11, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    bc4c:	ldr	x9, [x19]
    bc50:	ldr	x10, [x19, #32]
    bc54:	ldr	x11, [x11, #4056]
    bc58:	mov	w12, #0x17                  	// #23
    bc5c:	mov	x0, x19
    bc60:	cmp	x9, x10
    bc64:	ldrsw	x11, [x11]
    bc68:	csel	x9, x9, x10, gt
    bc6c:	adrp	x10, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    bc70:	ldr	x10, [x10, #4032]
    bc74:	mul	x11, x11, x12
    bc78:	adrp	x12, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    bc7c:	ldr	x12, [x12, #4016]
    bc80:	ldr	x19, [sp, #16]
    bc84:	cmp	x9, x11
    bc88:	mov	x1, x8
    bc8c:	csel	x4, x12, x10, gt
    bc90:	ldp	x29, x30, [sp], #32
    bc94:	br	x4
    bc98:	stp	x29, x30, [sp, #-32]!
    bc9c:	stp	x20, x19, [sp, #16]
    bca0:	ldr	w8, [x1, #8]
    bca4:	ldr	w9, [x1, #40]
    bca8:	ldr	w14, [x2, #8]
    bcac:	ldr	w15, [x2, #40]
    bcb0:	mov	w11, #0x1                   	// #1
    bcb4:	ldr	x13, [x1, #16]
    bcb8:	cmp	w8, #0x0
    bcbc:	cneg	w12, w11, lt  // lt = tstop
    bcc0:	cmp	w9, #0x0
    bcc4:	cneg	w10, w11, lt  // lt = tstop
    bcc8:	cmp	w14, #0x0
    bccc:	mov	x8, #0x2                   	// #2
    bcd0:	cneg	w9, w11, lt  // lt = tstop
    bcd4:	cmp	w15, #0x0
    bcd8:	movk	x8, #0x8000, lsl #48
    bcdc:	cneg	w11, w11, lt  // lt = tstop
    bce0:	cmp	x13, x8
    bce4:	mov	x19, x0
    bce8:	mov	x29, sp
    bcec:	b.eq	bd14 <mpc_mul@@Base+0x260>  // b.none
    bcf0:	ldr	x16, [x1, #48]
    bcf4:	cmp	x16, x8
    bcf8:	b.eq	bd14 <mpc_mul@@Base+0x260>  // b.none
    bcfc:	ldr	x14, [x2, #16]
    bd00:	cmp	x14, x8
    bd04:	b.eq	bd14 <mpc_mul@@Base+0x260>  // b.none
    bd08:	ldr	x15, [x2, #48]
    bd0c:	cmp	x15, x8
    bd10:	b.ne	be08 <mpc_mul@@Base+0x354>  // b.any
    bd14:	mov	w20, wzr
    bd18:	mov	w8, wzr
    bd1c:	orr	w14, w8, w20
    bd20:	cbz	w14, bd4c <mpc_mul@@Base+0x298>
    bd24:	mov	x0, x19
    bd28:	cbz	w8, bdf0 <mpc_mul@@Base+0x33c>
    bd2c:	mov	w1, w8
    bd30:	bl	5120 <mpfr_set_inf@plt>
    bd34:	add	x0, x19, #0x20
    bd38:	cbz	w20, bdfc <mpc_mul@@Base+0x348>
    bd3c:	mov	w1, w20
    bd40:	ldp	x20, x19, [sp, #16]
    bd44:	ldp	x29, x30, [sp], #32
    bd48:	b	5120 <mpfr_set_inf@plt>
    bd4c:	ldr	x14, [x2, #16]
    bd50:	ldr	x15, [x2, #48]
    bd54:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    bd58:	ldr	x17, [x1, #48]
    bd5c:	add	x0, x14, x8
    bd60:	add	x1, x15, x8
    bd64:	cmp	x0, #0x1
    bd68:	mov	x16, #0x8000000000000003    	// #-9223372036854775805
    bd6c:	cset	w0, hi  // hi = pmore
    bd70:	cmp	x1, #0x1
    bd74:	cset	w1, hi  // hi = pmore
    bd78:	cmp	x14, x16
    bd7c:	cset	w14, eq  // eq = none
    bd80:	cmp	x15, x16
    bd84:	cset	w15, eq  // eq = none
    bd88:	orr	w2, w14, w15
    bd8c:	add	x18, x13, x8
    bd90:	cmp	w2, #0x0
    bd94:	csel	w14, w14, w0, ne  // ne = any
    bd98:	csel	w15, w15, w1, ne  // ne = any
    bd9c:	cmp	x18, #0x1
    bda0:	add	x8, x17, x8
    bda4:	ccmp	x13, x16, #0x0, hi  // hi = pmore
    bda8:	csel	w12, w12, wzr, eq  // eq = none
    bdac:	cmp	x8, #0x1
    bdb0:	ccmp	x17, x16, #0x0, hi  // hi = pmore
    bdb4:	csel	w10, w10, wzr, eq  // eq = none
    bdb8:	mul	w8, w12, w9
    bdbc:	cmp	w14, #0x0
    bdc0:	mul	w9, w10, w9
    bdc4:	mul	w12, w12, w11
    bdc8:	csel	w8, w8, wzr, ne  // ne = any
    bdcc:	mul	w11, w10, w11
    bdd0:	csel	w9, w9, wzr, ne  // ne = any
    bdd4:	cmp	w15, #0x0
    bdd8:	csel	w10, w11, wzr, ne  // ne = any
    bddc:	csel	w11, w12, wzr, ne  // ne = any
    bde0:	sub	w8, w8, w10
    bde4:	add	w20, w11, w9
    bde8:	mov	x0, x19
    bdec:	cbnz	w8, bd2c <mpc_mul@@Base+0x278>
    bdf0:	bl	4a40 <mpfr_set_nan@plt>
    bdf4:	add	x0, x19, #0x20
    bdf8:	cbnz	w20, bd3c <mpc_mul@@Base+0x288>
    bdfc:	ldp	x20, x19, [sp, #16]
    be00:	ldp	x29, x30, [sp], #32
    be04:	b	4a40 <mpfr_set_nan@plt>
    be08:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    be0c:	cmp	x13, x8
    be10:	b.ne	be28 <mpc_mul@@Base+0x374>  // b.any
    be14:	mov	x17, #0x8000000000000001    	// #-9223372036854775807
    be18:	cmp	x14, x17
    be1c:	b.ne	be3c <mpc_mul@@Base+0x388>  // b.any
    be20:	mov	w8, wzr
    be24:	b	bed0 <mpc_mul@@Base+0x41c>
    be28:	mov	x16, #0x8000000000000001    	// #-9223372036854775807
    be2c:	cmp	x15, x16
    be30:	b.ne	be74 <mpc_mul@@Base+0x3c0>  // b.any
    be34:	mov	w8, wzr
    be38:	b	bf2c <mpc_mul@@Base+0x478>
    be3c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    be40:	cmp	x16, x8
    be44:	b.ne	be54 <mpc_mul@@Base+0x3a0>  // b.any
    be48:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    be4c:	cmp	x15, x8
    be50:	b.eq	bd14 <mpc_mul@@Base+0x260>  // b.none
    be54:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    be58:	cmp	x16, x8
    be5c:	b.ne	beb4 <mpc_mul@@Base+0x400>  // b.any
    be60:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    be64:	cmp	x15, x8
    be68:	b.ne	beb4 <mpc_mul@@Base+0x400>  // b.any
    be6c:	mov	w8, wzr
    be70:	b	bf10 <mpc_mul@@Base+0x45c>
    be74:	cmp	x13, x16
    be78:	b.ne	be90 <mpc_mul@@Base+0x3dc>  // b.any
    be7c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    be80:	cmp	x14, x8
    be84:	b.ne	be90 <mpc_mul@@Base+0x3dc>  // b.any
    be88:	mov	w8, wzr
    be8c:	b	bf40 <mpc_mul@@Base+0x48c>
    be90:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    be94:	cmp	x14, x8
    be98:	b.ne	bf24 <mpc_mul@@Base+0x470>  // b.any
    be9c:	mul	w17, w9, w12
    bea0:	mul	w8, w11, w10
    bea4:	cmp	w17, w8
    bea8:	b.ne	bf28 <mpc_mul@@Base+0x474>  // b.any
    beac:	mov	w8, wzr
    beb0:	b	bf34 <mpc_mul@@Base+0x480>
    beb4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    beb8:	cmp	x15, x8
    bebc:	mul	w18, w9, w12
    bec0:	ccmp	x16, x8, #0x4, ne  // ne = any
    bec4:	mul	w8, w11, w10
    bec8:	ccmp	w18, w8, #0x0, eq  // eq = none
    becc:	csel	w8, wzr, w18, eq  // eq = none
    bed0:	cmp	x15, x17
    bed4:	b.eq	bf4c <mpc_mul@@Base+0x498>  // b.none
    bed8:	mov	x15, #0x8000000000000001    	// #-9223372036854775807
    bedc:	cmp	x16, x15
    bee0:	b.eq	bf10 <mpc_mul@@Base+0x45c>  // b.none
    bee4:	mov	x15, #0x8000000000000003    	// #-9223372036854775805
    bee8:	cmp	x16, x15
    beec:	b.ne	bf1c <mpc_mul@@Base+0x468>  // b.any
    bef0:	mov	x15, #0x8000000000000001    	// #-9223372036854775807
    bef4:	cmp	x14, x15
    bef8:	b.eq	bf4c <mpc_mul@@Base+0x498>  // b.none
    befc:	mul	w14, w11, w12
    bf00:	mul	w15, w9, w10
    bf04:	cmp	w14, w15
    bf08:	b.ne	bf4c <mpc_mul@@Base+0x498>  // b.any
    bf0c:	b	bf1c <mpc_mul@@Base+0x468>
    bf10:	mov	x15, #0x8000000000000003    	// #-9223372036854775805
    bf14:	cmp	x14, x15
    bf18:	b.eq	bf4c <mpc_mul@@Base+0x498>  // b.none
    bf1c:	mul	w20, w11, w12
    bf20:	b	bd1c <mpc_mul@@Base+0x268>
    bf24:	mul	w8, w11, w10
    bf28:	neg	w8, w8
    bf2c:	cmp	x14, x16
    bf30:	b.eq	bf4c <mpc_mul@@Base+0x498>  // b.none
    bf34:	mov	x14, #0x8000000000000001    	// #-9223372036854775807
    bf38:	cmp	x13, x14
    bf3c:	b.ne	bf54 <mpc_mul@@Base+0x4a0>  // b.any
    bf40:	mov	x14, #0x8000000000000003    	// #-9223372036854775805
    bf44:	cmp	x15, x14
    bf48:	b.ne	bf70 <mpc_mul@@Base+0x4bc>  // b.any
    bf4c:	mov	w20, wzr
    bf50:	b	bd1c <mpc_mul@@Base+0x268>
    bf54:	mov	x14, #0x8000000000000003    	// #-9223372036854775805
    bf58:	cmp	x15, x14
    bf5c:	b.ne	bf70 <mpc_mul@@Base+0x4bc>  // b.any
    bf60:	mul	w14, w11, w12
    bf64:	mul	w15, w9, w10
    bf68:	cmp	w14, w15
    bf6c:	b.ne	bf4c <mpc_mul@@Base+0x498>  // b.any
    bf70:	mul	w20, w9, w10
    bf74:	b	bd1c <mpc_mul@@Base+0x268>
    bf78:	stp	x29, x30, [sp, #-80]!
    bf7c:	stp	x26, x25, [sp, #16]
    bf80:	stp	x24, x23, [sp, #32]
    bf84:	stp	x22, x21, [sp, #48]
    bf88:	stp	x20, x19, [sp, #64]
    bf8c:	ldr	w8, [x1, #8]
    bf90:	ldr	w10, [x1, #40]
    bf94:	ldr	w11, [x2, #8]
    bf98:	ldr	w12, [x2, #40]
    bf9c:	mov	w9, #0x1                   	// #1
    bfa0:	cmp	w8, #0x0
    bfa4:	cneg	w24, w9, lt  // lt = tstop
    bfa8:	cmp	w10, #0x0
    bfac:	cneg	w22, w9, lt  // lt = tstop
    bfb0:	cmp	w11, #0x0
    bfb4:	cneg	w23, w9, lt  // lt = tstop
    bfb8:	cmp	w12, #0x0
    bfbc:	mov	x29, sp
    bfc0:	mov	w19, w3
    bfc4:	mov	x20, x0
    bfc8:	cneg	w25, w9, lt  // lt = tstop
    bfcc:	bl	5160 <mpc_mul_fr@plt>
    bfd0:	ldr	x8, [x20, #16]
    bfd4:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
    bfd8:	mov	w21, w0
    bfdc:	cmp	x8, x26
    bfe0:	b.ne	c00c <mpc_mul@@Base+0x558>  // b.any
    bfe4:	cmp	w22, w25
    bfe8:	and	w8, w19, #0xf
    bfec:	ccmp	w24, w23, #0x4, eq  // eq = none
    bff0:	ccmp	w8, #0x3, #0x4, eq  // eq = none
    bff4:	mov	w8, #0xffffffff            	// #-1
    bff8:	cneg	w3, w8, ne  // ne = any
    bffc:	mov	x0, x20
    c000:	mov	x1, x20
    c004:	mov	w2, wzr
    c008:	bl	51d0 <mpfr_set4@plt>
    c00c:	ldr	x8, [x20, #48]
    c010:	cmp	x8, x26
    c014:	b.ne	c044 <mpc_mul@@Base+0x590>  // b.any
    c018:	cmp	w24, w25
    c01c:	and	w8, w19, #0xfffffff0
    c020:	mov	w9, #0x30                  	// #48
    c024:	ccmp	w22, w23, #0x4, ne  // ne = any
    c028:	add	x0, x20, #0x20
    c02c:	ccmp	w8, w9, #0x4, eq  // eq = none
    c030:	mov	w8, #0xffffffff            	// #-1
    c034:	cneg	w3, w8, ne  // ne = any
    c038:	mov	x1, x0
    c03c:	mov	w2, wzr
    c040:	bl	51d0 <mpfr_set4@plt>
    c044:	mov	w0, w21
    c048:	ldp	x20, x19, [sp, #64]
    c04c:	ldp	x22, x21, [sp, #48]
    c050:	ldp	x24, x23, [sp, #32]
    c054:	ldp	x26, x25, [sp, #16]
    c058:	ldp	x29, x30, [sp], #80
    c05c:	ret
    c060:	sub	sp, sp, #0x90
    c064:	cmp	x0, x1
    c068:	cset	w8, eq  // eq = none
    c06c:	cmp	x0, x2
    c070:	cset	w9, eq  // eq = none
    c074:	stp	x24, x23, [sp, #96]
    c078:	orr	w24, w8, w9
    c07c:	stp	x22, x21, [sp, #112]
    c080:	stp	x20, x19, [sp, #128]
    c084:	mov	x22, x2
    c088:	mov	x20, x1
    c08c:	mov	x19, x0
    c090:	cmp	w24, #0x1
    c094:	mov	w21, w3
    c098:	stp	x29, x30, [sp, #64]
    c09c:	stp	x26, x25, [sp, #80]
    c0a0:	add	x29, sp, #0x40
    c0a4:	b.ne	c0bc <mpc_mul@@Base+0x608>  // b.any
    c0a8:	ldr	x1, [x19]
    c0ac:	ldr	x2, [x19, #32]
    c0b0:	mov	x0, sp
    c0b4:	bl	53c0 <mpc_init3@plt>
    c0b8:	b	c0cc <mpc_mul@@Base+0x618>
    c0bc:	ldp	q1, q0, [x19, #32]
    c0c0:	ldp	q3, q2, [x19]
    c0c4:	stp	q1, q0, [sp, #32]
    c0c8:	stp	q3, q2, [sp]
    c0cc:	ldr	w9, [x22, #8]
    c0d0:	ldr	w10, [x20, #40]
    c0d4:	mov	w8, #0x1                   	// #1
    c0d8:	add	x1, x20, #0x20
    c0dc:	cmp	w9, #0x0
    c0e0:	cneg	w9, w8, lt  // lt = tstop
    c0e4:	cmp	w10, #0x0
    c0e8:	cneg	w10, w8, lt  // lt = tstop
    c0ec:	cmp	w9, w10
    c0f0:	b.ne	c0fc <mpc_mul@@Base+0x648>  // b.any
    c0f4:	mov	w25, wzr
    c0f8:	b	c11c <mpc_mul@@Base+0x668>
    c0fc:	ldr	w9, [x22, #40]
    c100:	ldr	w10, [x20, #8]
    c104:	cmp	w9, #0x0
    c108:	cneg	w9, w8, lt  // lt = tstop
    c10c:	cmp	w10, #0x0
    c110:	cneg	w8, w8, lt  // lt = tstop
    c114:	cmp	w9, w8
    c118:	cset	w25, ne  // ne = any
    c11c:	and	w8, w21, #0xf
    c120:	mov	w9, #0x2                   	// #2
    c124:	cmp	w8, #0x3
    c128:	add	x23, x22, #0x20
    c12c:	csel	w9, w9, w8, eq  // eq = none
    c130:	cmp	w8, #0x2
    c134:	mov	w8, #0x3                   	// #3
    c138:	csel	w3, w8, w9, eq  // eq = none
    c13c:	mov	x0, sp
    c140:	mov	x2, x23
    c144:	mov	x26, sp
    c148:	bl	4b70 <mpfr_mul@plt>
    c14c:	mov	w22, w0
    c150:	mov	x0, sp
    c154:	mov	x1, sp
    c158:	mov	w2, wzr
    c15c:	bl	4b80 <mpfr_neg@plt>
    c160:	asr	w21, w21, #4
    c164:	add	x0, x26, #0x20
    c168:	mov	x1, x20
    c16c:	mov	x2, x23
    c170:	mov	w3, w21
    c174:	bl	4b70 <mpfr_mul@plt>
    c178:	mov	w20, w0
    c17c:	mov	x1, sp
    c180:	mov	x0, x19
    c184:	mov	w2, wzr
    c188:	bl	5580 <mpc_set@plt>
    c18c:	ldr	x8, [x19, #48]
    c190:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c194:	cmp	x8, x9
    c198:	b.ne	c1c4 <mpc_mul@@Base+0x710>  // b.any
    c19c:	cmp	w21, #0x3
    c1a0:	cset	w8, eq  // eq = none
    c1a4:	orr	w8, w8, w25
    c1a8:	add	x0, x19, #0x20
    c1ac:	cmp	w8, #0x0
    c1b0:	mov	w8, #0xffffffff            	// #-1
    c1b4:	cneg	w3, w8, eq  // eq = none
    c1b8:	mov	x1, x0
    c1bc:	mov	w2, wzr
    c1c0:	bl	51d0 <mpfr_set4@plt>
    c1c4:	cbz	w24, c1d0 <mpc_mul@@Base+0x71c>
    c1c8:	mov	x0, sp
    c1cc:	bl	4a10 <mpc_clear@plt>
    c1d0:	cmp	w22, #0x0
    c1d4:	mov	w8, #0x2                   	// #2
    c1d8:	cset	w9, ne  // ne = any
    c1dc:	csel	w8, w8, w9, gt
    c1e0:	cmp	w20, #0x0
    c1e4:	cset	w9, ne  // ne = any
    c1e8:	ldp	x20, x19, [sp, #128]
    c1ec:	ldp	x22, x21, [sp, #112]
    c1f0:	ldp	x24, x23, [sp, #96]
    c1f4:	ldp	x26, x25, [sp, #80]
    c1f8:	ldp	x29, x30, [sp, #64]
    c1fc:	lsl	w9, w9, #2
    c200:	mov	w10, #0x8                   	// #8
    c204:	csel	w9, w10, w9, lt  // lt = tstop
    c208:	orr	w0, w9, w8
    c20c:	add	sp, sp, #0x90
    c210:	ret

000000000000c214 <mpc_mul_fr@@Base>:
    c214:	sub	sp, sp, #0x60
    c218:	str	x23, [sp, #48]
    c21c:	stp	x22, x21, [sp, #64]
    c220:	stp	x20, x19, [sp, #80]
    c224:	mov	w21, w3
    c228:	mov	x19, x2
    c22c:	mov	x20, x0
    c230:	cmp	x0, x2
    c234:	mov	x23, x1
    c238:	stp	x29, x30, [sp, #32]
    c23c:	add	x29, sp, #0x20
    c240:	b.eq	c250 <mpc_mul_fr@@Base+0x3c>  // b.none
    c244:	ldp	q1, q0, [x20]
    c248:	stp	q1, q0, [sp]
    c24c:	b	c25c <mpc_mul_fr@@Base+0x48>
    c250:	ldr	x1, [x20]
    c254:	mov	x0, sp
    c258:	bl	5440 <mpfr_init2@plt>
    c25c:	and	w3, w21, #0xf
    c260:	mov	x0, sp
    c264:	mov	x1, x23
    c268:	mov	x2, x19
    c26c:	bl	4b70 <mpfr_mul@plt>
    c270:	mov	w22, w0
    c274:	add	x0, x20, #0x20
    c278:	add	x1, x23, #0x20
    c27c:	asr	w3, w21, #4
    c280:	mov	x2, x19
    c284:	bl	4b70 <mpfr_mul@plt>
    c288:	ldr	w3, [sp, #8]
    c28c:	mov	w21, w0
    c290:	mov	x1, sp
    c294:	mov	x0, x20
    c298:	mov	w2, wzr
    c29c:	bl	51d0 <mpfr_set4@plt>
    c2a0:	cmp	x20, x19
    c2a4:	b.ne	c2b0 <mpc_mul_fr@@Base+0x9c>  // b.any
    c2a8:	mov	x0, sp
    c2ac:	bl	4d60 <mpfr_clear@plt>
    c2b0:	cmp	w22, #0x0
    c2b4:	mov	w8, #0x2                   	// #2
    c2b8:	cset	w9, ne  // ne = any
    c2bc:	csel	w8, w8, w9, lt  // lt = tstop
    c2c0:	cmp	w21, #0x0
    c2c4:	cset	w9, ne  // ne = any
    c2c8:	ldp	x20, x19, [sp, #80]
    c2cc:	ldp	x22, x21, [sp, #64]
    c2d0:	ldr	x23, [sp, #48]
    c2d4:	ldp	x29, x30, [sp, #32]
    c2d8:	lsl	w9, w9, #2
    c2dc:	mov	w10, #0x8                   	// #8
    c2e0:	csel	w9, w10, w9, lt  // lt = tstop
    c2e4:	orr	w0, w9, w8
    c2e8:	add	sp, sp, #0x60
    c2ec:	ret

000000000000c2f0 <mpc_mul_i@@Base>:
    c2f0:	sub	sp, sp, #0x60
    c2f4:	stp	x29, x30, [sp, #32]
    c2f8:	str	x23, [sp, #48]
    c2fc:	stp	x22, x21, [sp, #64]
    c300:	stp	x20, x19, [sp, #80]
    c304:	mov	x20, x0
    c308:	mov	x19, x1
    c30c:	ldr	x1, [x1]
    c310:	ldr	x8, [x20, #32]!
    c314:	mov	w21, w3
    c318:	mov	x22, x0
    c31c:	mov	w23, w2
    c320:	cmp	x1, x8
    c324:	add	x29, sp, #0x20
    c328:	b.ne	c380 <mpc_mul_i@@Base+0x90>  // b.any
    c32c:	mov	x8, x19
    c330:	ldr	x9, [x8, #32]!
    c334:	ldr	x10, [x22]
    c338:	cmp	x9, x10
    c33c:	b.ne	c380 <mpc_mul_i@@Base+0x90>  // b.any
    c340:	cmp	x22, x19
    c344:	b.eq	c46c <mpc_mul_i@@Base+0x17c>  // b.none
    c348:	ldr	w3, [x19, #40]
    c34c:	mov	x0, x22
    c350:	mov	x1, x8
    c354:	mov	w2, wzr
    c358:	bl	51d0 <mpfr_set4@plt>
    c35c:	ldr	w3, [x19, #8]
    c360:	mov	x0, x20
    c364:	mov	x1, x19
    c368:	mov	w2, wzr
    c36c:	bl	51d0 <mpfr_set4@plt>
    c370:	tbnz	w23, #31, c47c <mpc_mul_i@@Base+0x18c>
    c374:	mov	x0, x22
    c378:	mov	x1, x22
    c37c:	b	c484 <mpc_mul_i@@Base+0x194>
    c380:	cmp	x22, x19
    c384:	b.eq	c3b8 <mpc_mul_i@@Base+0xc8>  // b.none
    c388:	add	x1, x19, #0x20
    c38c:	and	w2, w21, #0xf
    c390:	tbnz	w23, #31, c3f0 <mpc_mul_i@@Base+0x100>
    c394:	mov	x0, x22
    c398:	bl	4b80 <mpfr_neg@plt>
    c39c:	ldr	w3, [x19, #8]
    c3a0:	mov	w22, w0
    c3a4:	asr	w2, w21, #4
    c3a8:	mov	x0, x20
    c3ac:	mov	x1, x19
    c3b0:	bl	51d0 <mpfr_set4@plt>
    c3b4:	b	c410 <mpc_mul_i@@Base+0x120>
    c3b8:	mov	x0, sp
    c3bc:	bl	5440 <mpfr_init2@plt>
    c3c0:	add	x1, x19, #0x20
    c3c4:	and	w2, w21, #0xf
    c3c8:	tbnz	w23, #31, c418 <mpc_mul_i@@Base+0x128>
    c3cc:	mov	x0, sp
    c3d0:	bl	4b80 <mpfr_neg@plt>
    c3d4:	ldr	w3, [x19, #8]
    c3d8:	mov	w22, w0
    c3dc:	asr	w2, w21, #4
    c3e0:	mov	x0, x20
    c3e4:	mov	x1, x19
    c3e8:	bl	51d0 <mpfr_set4@plt>
    c3ec:	b	c438 <mpc_mul_i@@Base+0x148>
    c3f0:	ldr	w3, [x19, #40]
    c3f4:	mov	x0, x22
    c3f8:	bl	51d0 <mpfr_set4@plt>
    c3fc:	mov	w22, w0
    c400:	asr	w2, w21, #4
    c404:	mov	x0, x20
    c408:	mov	x1, x19
    c40c:	bl	4b80 <mpfr_neg@plt>
    c410:	mov	w20, w0
    c414:	b	c44c <mpc_mul_i@@Base+0x15c>
    c418:	ldr	w3, [x19, #40]
    c41c:	mov	x0, sp
    c420:	bl	51d0 <mpfr_set4@plt>
    c424:	mov	w22, w0
    c428:	asr	w2, w21, #4
    c42c:	mov	x0, x20
    c430:	mov	x1, x19
    c434:	bl	4b80 <mpfr_neg@plt>
    c438:	mov	w20, w0
    c43c:	mov	x0, x19
    c440:	bl	4d60 <mpfr_clear@plt>
    c444:	ldp	q1, q0, [sp]
    c448:	stp	q1, q0, [x19]
    c44c:	cmp	w22, #0x0
    c450:	mov	w8, #0x2                   	// #2
    c454:	cset	w9, ne  // ne = any
    c458:	csel	w8, w8, w9, lt  // lt = tstop
    c45c:	lsr	w9, w20, #31
    c460:	cbz	w20, c494 <mpc_mul_i@@Base+0x1a4>
    c464:	mov	w10, #0x4                   	// #4
    c468:	b	c498 <mpc_mul_i@@Base+0x1a8>
    c46c:	mov	x0, x22
    c470:	mov	x1, x20
    c474:	bl	5090 <mpfr_swap@plt>
    c478:	tbz	w23, #31, c374 <mpc_mul_i@@Base+0x84>
    c47c:	mov	x0, x20
    c480:	mov	x1, x20
    c484:	mov	w2, wzr
    c488:	bl	4b80 <mpfr_neg@plt>
    c48c:	mov	w9, wzr
    c490:	mov	w8, wzr
    c494:	mov	w10, wzr
    c498:	ldp	x20, x19, [sp, #80]
    c49c:	ldp	x22, x21, [sp, #64]
    c4a0:	ldr	x23, [sp, #48]
    c4a4:	ldp	x29, x30, [sp, #32]
    c4a8:	cmp	w9, #0x0
    c4ac:	mov	w9, #0x8                   	// #8
    c4b0:	csel	w9, w9, w10, ne  // ne = any
    c4b4:	orr	w0, w9, w8
    c4b8:	add	sp, sp, #0x60
    c4bc:	ret

000000000000c4c0 <mpc_mul_si@@Base>:
    c4c0:	stp	x29, x30, [sp, #-64]!
    c4c4:	stp	x20, x19, [sp, #48]
    c4c8:	mov	w19, w3
    c4cc:	and	w3, w3, #0xf
    c4d0:	str	x23, [sp, #16]
    c4d4:	stp	x22, x21, [sp, #32]
    c4d8:	mov	x29, sp
    c4dc:	mov	x20, x2
    c4e0:	mov	x21, x1
    c4e4:	mov	x22, x0
    c4e8:	bl	5360 <mpfr_mul_si@plt>
    c4ec:	mov	w23, w0
    c4f0:	add	x0, x22, #0x20
    c4f4:	add	x1, x21, #0x20
    c4f8:	asr	w3, w19, #4
    c4fc:	mov	x2, x20
    c500:	bl	5360 <mpfr_mul_si@plt>
    c504:	cmp	w23, #0x0
    c508:	mov	w8, #0x2                   	// #2
    c50c:	cset	w9, ne  // ne = any
    c510:	csel	w8, w8, w9, lt  // lt = tstop
    c514:	cmp	w0, #0x0
    c518:	cset	w9, ne  // ne = any
    c51c:	ldp	x20, x19, [sp, #48]
    c520:	ldp	x22, x21, [sp, #32]
    c524:	ldr	x23, [sp, #16]
    c528:	lsl	w9, w9, #2
    c52c:	mov	w10, #0x8                   	// #8
    c530:	csel	w9, w10, w9, lt  // lt = tstop
    c534:	orr	w0, w9, w8
    c538:	ldp	x29, x30, [sp], #64
    c53c:	ret

000000000000c540 <mpc_mul_ui@@Base>:
    c540:	stp	x29, x30, [sp, #-64]!
    c544:	stp	x20, x19, [sp, #48]
    c548:	mov	w19, w3
    c54c:	and	w3, w3, #0xf
    c550:	str	x23, [sp, #16]
    c554:	stp	x22, x21, [sp, #32]
    c558:	mov	x29, sp
    c55c:	mov	x20, x2
    c560:	mov	x21, x1
    c564:	mov	x22, x0
    c568:	bl	49c0 <mpfr_mul_ui@plt>
    c56c:	mov	w23, w0
    c570:	add	x0, x22, #0x20
    c574:	add	x1, x21, #0x20
    c578:	asr	w3, w19, #4
    c57c:	mov	x2, x20
    c580:	bl	49c0 <mpfr_mul_ui@plt>
    c584:	cmp	w23, #0x0
    c588:	mov	w8, #0x2                   	// #2
    c58c:	cset	w9, ne  // ne = any
    c590:	csel	w8, w8, w9, lt  // lt = tstop
    c594:	cmp	w0, #0x0
    c598:	cset	w9, ne  // ne = any
    c59c:	ldp	x20, x19, [sp, #48]
    c5a0:	ldp	x22, x21, [sp, #32]
    c5a4:	ldr	x23, [sp, #16]
    c5a8:	lsl	w9, w9, #2
    c5ac:	mov	w10, #0x8                   	// #8
    c5b0:	csel	w9, w10, w9, lt  // lt = tstop
    c5b4:	orr	w0, w9, w8
    c5b8:	ldp	x29, x30, [sp], #64
    c5bc:	ret

000000000000c5c0 <mpc_neg@@Base>:
    c5c0:	stp	x29, x30, [sp, #-48]!
    c5c4:	stp	x20, x19, [sp, #32]
    c5c8:	mov	w19, w2
    c5cc:	and	w2, w2, #0xf
    c5d0:	stp	x22, x21, [sp, #16]
    c5d4:	mov	x29, sp
    c5d8:	mov	x20, x1
    c5dc:	mov	x21, x0
    c5e0:	bl	4b80 <mpfr_neg@plt>
    c5e4:	mov	w22, w0
    c5e8:	add	x0, x21, #0x20
    c5ec:	add	x1, x20, #0x20
    c5f0:	asr	w2, w19, #4
    c5f4:	bl	4b80 <mpfr_neg@plt>
    c5f8:	cmp	w22, #0x0
    c5fc:	mov	w8, #0x2                   	// #2
    c600:	cset	w9, ne  // ne = any
    c604:	csel	w8, w8, w9, lt  // lt = tstop
    c608:	cmp	w0, #0x0
    c60c:	cset	w9, ne  // ne = any
    c610:	ldp	x20, x19, [sp, #32]
    c614:	ldp	x22, x21, [sp, #16]
    c618:	lsl	w9, w9, #2
    c61c:	mov	w10, #0x8                   	// #8
    c620:	csel	w9, w10, w9, lt  // lt = tstop
    c624:	orr	w0, w9, w8
    c628:	ldp	x29, x30, [sp], #48
    c62c:	ret

000000000000c630 <mpc_norm@@Base>:
    c630:	sub	sp, sp, #0xd0
    c634:	stp	x20, x19, [sp, #192]
    c638:	mov	x20, x0
    c63c:	mov	x0, x1
    c640:	stp	x29, x30, [sp, #112]
    c644:	stp	x28, x27, [sp, #128]
    c648:	stp	x26, x25, [sp, #144]
    c64c:	stp	x24, x23, [sp, #160]
    c650:	stp	x22, x21, [sp, #176]
    c654:	add	x29, sp, #0x70
    c658:	mov	w19, w2
    c65c:	mov	x24, x1
    c660:	bl	54d0 <mpfr_number_p@plt>
    c664:	cbz	w0, c6ac <mpc_norm@@Base+0x7c>
    c668:	add	x23, x24, #0x20
    c66c:	mov	x0, x23
    c670:	bl	54d0 <mpfr_number_p@plt>
    c674:	cbz	w0, c6ac <mpc_norm@@Base+0x7c>
    c678:	ldr	x10, [x24, #16]
    c67c:	ldr	x8, [x24, #48]
    c680:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c684:	cmp	x10, x9
    c688:	b.ne	c6d8 <mpc_norm@@Base+0xa8>  // b.any
    c68c:	cmp	x8, x9
    c690:	b.ne	c6ec <mpc_norm@@Base+0xbc>  // b.any
    c694:	mov	w8, #0x1                   	// #1
    c698:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c69c:	mov	w19, wzr
    c6a0:	str	w8, [x20, #8]
    c6a4:	str	x9, [x20, #16]
    c6a8:	b	c9bc <mpc_norm@@Base+0x38c>
    c6ac:	mov	x0, x20
    c6b0:	mov	x1, x24
    c6b4:	mov	w2, w19
    c6b8:	ldp	x20, x19, [sp, #192]
    c6bc:	ldp	x22, x21, [sp, #176]
    c6c0:	ldp	x24, x23, [sp, #160]
    c6c4:	ldp	x26, x25, [sp, #144]
    c6c8:	ldp	x28, x27, [sp, #128]
    c6cc:	ldp	x29, x30, [sp, #112]
    c6d0:	add	sp, sp, #0xd0
    c6d4:	b	51a0 <mpc_abs@plt>
    c6d8:	cmp	x8, x9
    c6dc:	b.ne	c718 <mpc_norm@@Base+0xe8>  // b.any
    c6e0:	mov	x0, x20
    c6e4:	mov	x1, x24
    c6e8:	b	c6f4 <mpc_norm@@Base+0xc4>
    c6ec:	mov	x0, x20
    c6f0:	mov	x1, x23
    c6f4:	mov	w2, w19
    c6f8:	ldp	x20, x19, [sp, #192]
    c6fc:	ldp	x22, x21, [sp, #176]
    c700:	ldp	x24, x23, [sp, #160]
    c704:	ldp	x26, x25, [sp, #144]
    c708:	ldp	x28, x27, [sp, #128]
    c70c:	ldp	x29, x30, [sp, #112]
    c710:	add	sp, sp, #0xd0
    c714:	b	5010 <mpfr_sqr@plt>
    c718:	ldr	x25, [x20]
    c71c:	sub	x0, x29, #0x20
    c720:	bl	4aa0 <mpfr_init@plt>
    c724:	add	x0, sp, #0x30
    c728:	bl	4aa0 <mpfr_init@plt>
    c72c:	add	x0, sp, #0x10
    c730:	bl	4aa0 <mpfr_init@plt>
    c734:	bl	52f0 <mpfr_underflow_p@plt>
    c738:	str	w0, [sp, #8]
    c73c:	bl	54e0 <mpfr_overflow_p@plt>
    c740:	str	w0, [sp, #12]
    c744:	bl	4e20 <mpfr_clear_underflow@plt>
    c748:	bl	4a50 <mpfr_clear_overflow@plt>
    c74c:	cmp	w19, #0x0
    c750:	cset	w21, eq  // eq = none
    c754:	mov	w22, #0x1                   	// #1
    c758:	mov	x0, x25
    c75c:	bl	4d20 <mpc_ceil_log2@plt>
    c760:	ldr	x8, [x24]
    c764:	add	x9, x25, x0
    c768:	add	x25, x9, #0x3
    c76c:	lsl	x27, x8, #1
    c770:	tbz	w22, #0, c790 <mpc_norm@@Base+0x160>
    c774:	ldr	x8, [x23]
    c778:	cmp	x25, x27
    c77c:	csel	x27, x25, x27, lt  // lt = tstop
    c780:	lsl	x8, x8, #1
    c784:	cmp	x25, x8
    c788:	csel	x26, x25, x8, lt  // lt = tstop
    c78c:	b	c798 <mpc_norm@@Base+0x168>
    c790:	ldr	x8, [x23]
    c794:	lsl	x26, x8, #1
    c798:	sub	x0, x29, #0x20
    c79c:	mov	x1, x27
    c7a0:	bl	4c80 <mpfr_set_prec@plt>
    c7a4:	add	x0, sp, #0x30
    c7a8:	mov	x1, x26
    c7ac:	bl	4c80 <mpfr_set_prec@plt>
    c7b0:	sub	x0, x29, #0x20
    c7b4:	mov	w2, #0x3                   	// #3
    c7b8:	mov	x1, x24
    c7bc:	bl	5010 <mpfr_sqr@plt>
    c7c0:	mov	w28, w0
    c7c4:	add	x0, sp, #0x30
    c7c8:	mov	w2, #0x3                   	// #3
    c7cc:	mov	x1, x23
    c7d0:	bl	5010 <mpfr_sqr@plt>
    c7d4:	orr	w8, w0, w28
    c7d8:	cbz	w8, c978 <mpc_norm@@Base+0x348>
    c7dc:	add	x0, sp, #0x10
    c7e0:	mov	x1, x25
    c7e4:	bl	4c80 <mpfr_set_prec@plt>
    c7e8:	add	x0, sp, #0x10
    c7ec:	sub	x1, x29, #0x20
    c7f0:	add	x2, sp, #0x30
    c7f4:	mov	w3, #0x3                   	// #3
    c7f8:	bl	4e60 <mpfr_add@plt>
    c7fc:	tbz	w22, #0, c824 <mpc_norm@@Base+0x1f4>
    c800:	ldr	x8, [x20]
    c804:	sub	x1, x25, #0x2
    c808:	add	x0, sp, #0x10
    c80c:	mov	w2, #0x3                   	// #3
    c810:	add	x4, x8, x21
    c814:	mov	w3, #0x2                   	// #2
    c818:	bl	5450 <mpfr_can_round@plt>
    c81c:	mov	w22, wzr
    c820:	cbz	w0, c758 <mpc_norm@@Base+0x128>
    c824:	bl	54e0 <mpfr_overflow_p@plt>
    c828:	cbz	w0, c868 <mpc_norm@@Base+0x238>
    c82c:	mov	w1, #0x1                   	// #1
    c830:	mov	x0, x20
    c834:	mov	x2, xzr
    c838:	mov	w3, wzr
    c83c:	bl	5130 <mpfr_set_ui_2exp@plt>
    c840:	bl	5200 <mpfr_get_emax@plt>
    c844:	mov	x2, x0
    c848:	mov	x0, x20
    c84c:	mov	x1, x20
    c850:	mov	w3, w19
    c854:	bl	4f40 <mpfr_mul_2ui@plt>
    c858:	mov	w19, w0
    c85c:	ldp	w8, w20, [sp, #8]
    c860:	cbnz	w8, c998 <mpc_norm@@Base+0x368>
    c864:	b	c99c <mpc_norm@@Base+0x36c>
    c868:	bl	52f0 <mpfr_underflow_p@plt>
    c86c:	cbz	w0, c8c0 <mpc_norm@@Base+0x290>
    c870:	bl	5060 <mpfr_get_emin@plt>
    c874:	ldur	x8, [x29, #-16]
    c878:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c87c:	mov	x25, x0
    c880:	cmp	x8, x9
    c884:	b.ne	c944 <mpc_norm@@Base+0x314>  // b.any
    c888:	ldr	x10, [sp, #64]
    c88c:	cmp	x10, x9
    c890:	b.eq	c8e4 <mpc_norm@@Base+0x2b4>  // b.none
    c894:	cmn	x10, #0x9
    c898:	b.lt	c8e4 <mpc_norm@@Base+0x2b4>  // b.tstop
    c89c:	sub	x9, x10, x26, lsl #1
    c8a0:	cmp	x9, x25
    c8a4:	b.le	c8e4 <mpc_norm@@Base+0x2b4>
    c8a8:	sub	x0, x29, #0x20
    c8ac:	mov	w1, #0x1                   	// #1
    c8b0:	bl	4c80 <mpfr_set_prec@plt>
    c8b4:	sub	x2, x25, #0x1
    c8b8:	sub	x0, x29, #0x20
    c8bc:	b	c96c <mpc_norm@@Base+0x33c>
    c8c0:	ldr	w3, [sp, #24]
    c8c4:	add	x1, sp, #0x10
    c8c8:	mov	x0, x20
    c8cc:	mov	w2, w19
    c8d0:	bl	51d0 <mpfr_set4@plt>
    c8d4:	mov	w19, w0
    c8d8:	ldp	w8, w20, [sp, #8]
    c8dc:	cbnz	w8, c998 <mpc_norm@@Base+0x368>
    c8e0:	b	c99c <mpc_norm@@Base+0x36c>
    c8e4:	ldr	x9, [x24, #16]
    c8e8:	ldr	x10, [x24, #48]
    c8ec:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    c8f0:	cmp	x8, x11
    c8f4:	neg	x9, x9
    c8f8:	neg	x10, x10
    c8fc:	lsr	x12, x10, #1
    c900:	and	x13, x9, #0x1
    c904:	and	x10, x10, #0x1
    c908:	add	x9, x12, x9, lsr #1
    c90c:	add	x10, x10, x13
    c910:	add	x26, x9, x10, lsr #1
    c914:	lsl	x25, x26, #1
    c918:	sub	x0, x29, #0x20
    c91c:	b.ne	c9e0 <mpc_norm@@Base+0x3b0>  // b.any
    c920:	mov	x1, x24
    c924:	mov	x2, x26
    c928:	mov	w3, wzr
    c92c:	bl	4f40 <mpfr_mul_2ui@plt>
    c930:	sub	x0, x29, #0x20
    c934:	sub	x1, x29, #0x20
    c938:	mov	w2, wzr
    c93c:	bl	5010 <mpfr_sqr@plt>
    c940:	b	c9f0 <mpc_norm@@Base+0x3c0>
    c944:	cmn	x8, #0x9
    c948:	b.lt	c888 <mpc_norm@@Base+0x258>  // b.tstop
    c94c:	sub	x10, x8, x27, lsl #1
    c950:	cmp	x10, x25
    c954:	b.le	c888 <mpc_norm@@Base+0x258>
    c958:	add	x0, sp, #0x30
    c95c:	mov	w1, #0x1                   	// #1
    c960:	bl	4c80 <mpfr_set_prec@plt>
    c964:	sub	x2, x25, #0x1
    c968:	add	x0, sp, #0x30
    c96c:	mov	w1, #0x1                   	// #1
    c970:	mov	w3, #0x1                   	// #1
    c974:	bl	5130 <mpfr_set_ui_2exp@plt>
    c978:	sub	x1, x29, #0x20
    c97c:	add	x2, sp, #0x30
    c980:	mov	x0, x20
    c984:	mov	w3, w19
    c988:	bl	4e60 <mpfr_add@plt>
    c98c:	mov	w19, w0
    c990:	ldp	w8, w20, [sp, #8]
    c994:	cbz	w8, c99c <mpc_norm@@Base+0x36c>
    c998:	bl	4990 <mpfr_set_underflow@plt>
    c99c:	cbz	w20, c9a4 <mpc_norm@@Base+0x374>
    c9a0:	bl	5490 <mpfr_set_overflow@plt>
    c9a4:	sub	x0, x29, #0x20
    c9a8:	bl	4d60 <mpfr_clear@plt>
    c9ac:	add	x0, sp, #0x30
    c9b0:	bl	4d60 <mpfr_clear@plt>
    c9b4:	add	x0, sp, #0x10
    c9b8:	bl	4d60 <mpfr_clear@plt>
    c9bc:	mov	w0, w19
    c9c0:	ldp	x20, x19, [sp, #192]
    c9c4:	ldp	x22, x21, [sp, #176]
    c9c8:	ldp	x24, x23, [sp, #160]
    c9cc:	ldp	x26, x25, [sp, #144]
    c9d0:	ldp	x28, x27, [sp, #128]
    c9d4:	ldp	x29, x30, [sp, #112]
    c9d8:	add	sp, sp, #0xd0
    c9dc:	ret
    c9e0:	sub	x1, x29, #0x20
    c9e4:	mov	x2, x25
    c9e8:	mov	w3, wzr
    c9ec:	bl	4f40 <mpfr_mul_2ui@plt>
    c9f0:	ldr	x8, [sp, #64]
    c9f4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c9f8:	add	x0, sp, #0x30
    c9fc:	cmp	x8, x9
    ca00:	b.ne	ca28 <mpc_norm@@Base+0x3f8>  // b.any
    ca04:	mov	x1, x23
    ca08:	mov	x2, x26
    ca0c:	mov	w3, wzr
    ca10:	bl	4f40 <mpfr_mul_2ui@plt>
    ca14:	add	x0, sp, #0x30
    ca18:	add	x1, sp, #0x30
    ca1c:	mov	w2, wzr
    ca20:	bl	5010 <mpfr_sqr@plt>
    ca24:	b	ca38 <mpc_norm@@Base+0x408>
    ca28:	add	x1, sp, #0x30
    ca2c:	mov	x2, x25
    ca30:	mov	w3, wzr
    ca34:	bl	4f40 <mpfr_mul_2ui@plt>
    ca38:	sub	x1, x29, #0x20
    ca3c:	add	x2, sp, #0x30
    ca40:	mov	x0, x20
    ca44:	mov	w3, w19
    ca48:	bl	4e60 <mpfr_add@plt>
    ca4c:	mov	w23, w0
    ca50:	bl	4e20 <mpfr_clear_underflow@plt>
    ca54:	mov	x0, x20
    ca58:	mov	x1, x20
    ca5c:	mov	x2, x25
    ca60:	mov	w3, w19
    ca64:	bl	5320 <mpfr_div_2ui@plt>
    ca68:	mov	w19, w0
    ca6c:	bl	52f0 <mpfr_underflow_p@plt>
    ca70:	cmp	w0, #0x0
    ca74:	csel	w19, w23, w19, eq  // eq = none
    ca78:	ldp	w8, w20, [sp, #8]
    ca7c:	cbnz	w8, c998 <mpc_norm@@Base+0x368>
    ca80:	b	c99c <mpc_norm@@Base+0x36c>

000000000000ca84 <mpc_out_str@@Base>:
    ca84:	stp	x29, x30, [sp, #-64]!
    ca88:	stp	x24, x23, [sp, #16]
    ca8c:	stp	x22, x21, [sp, #32]
    ca90:	stp	x20, x19, [sp, #48]
    ca94:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    ca98:	ldr	x8, [x8, #4024]
    ca9c:	cmp	x0, #0x0
    caa0:	mov	w22, w1
    caa4:	mov	x29, sp
    caa8:	ldr	x8, [x8]
    caac:	mov	w19, w4
    cab0:	mov	x20, x3
    cab4:	mov	x21, x2
    cab8:	csel	x23, x8, x0, eq  // eq = none
    cabc:	mov	w0, #0x28                  	// #40
    cac0:	mov	x1, x23
    cac4:	bl	4ba0 <fputc@plt>
    cac8:	and	w19, w19, #0xf
    cacc:	mov	x0, x23
    cad0:	mov	w1, w22
    cad4:	mov	x2, x21
    cad8:	mov	x3, x20
    cadc:	mov	w4, w19
    cae0:	bl	5190 <__gmpfr_out_str@plt>
    cae4:	mov	x24, x0
    cae8:	mov	w0, #0x20                  	// #32
    caec:	mov	x1, x23
    caf0:	bl	4ba0 <fputc@plt>
    caf4:	add	x3, x20, #0x20
    caf8:	mov	x0, x23
    cafc:	mov	w1, w22
    cb00:	mov	x2, x21
    cb04:	mov	w4, w19
    cb08:	bl	5190 <__gmpfr_out_str@plt>
    cb0c:	add	x8, x24, x0
    cb10:	mov	w0, #0x29                  	// #41
    cb14:	mov	x1, x23
    cb18:	add	x19, x8, #0x3
    cb1c:	bl	4ba0 <fputc@plt>
    cb20:	mov	x0, x19
    cb24:	ldp	x20, x19, [sp, #48]
    cb28:	ldp	x22, x21, [sp, #32]
    cb2c:	ldp	x24, x23, [sp, #16]
    cb30:	ldp	x29, x30, [sp], #64
    cb34:	ret

000000000000cb38 <mpc_pow@@Base>:
    cb38:	stp	x29, x30, [sp, #-96]!
    cb3c:	stp	x28, x27, [sp, #16]
    cb40:	stp	x26, x25, [sp, #32]
    cb44:	stp	x24, x23, [sp, #48]
    cb48:	stp	x22, x21, [sp, #64]
    cb4c:	stp	x20, x19, [sp, #80]
    cb50:	mov	x29, sp
    cb54:	sub	sp, sp, #0x1c0
    cb58:	mov	w25, w3
    cb5c:	mov	x22, x2
    cb60:	mov	x24, x1
    cb64:	mov	x21, x0
    cb68:	bl	52f0 <mpfr_underflow_p@plt>
    cb6c:	mov	w19, w0
    cb70:	bl	54e0 <mpfr_overflow_p@plt>
    cb74:	ldr	x23, [x22, #48]
    cb78:	ldr	x26, [x24, #48]
    cb7c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    cb80:	mov	w20, w0
    cb84:	cmp	x23, x8
    cb88:	b.ne	cbcc <mpc_pow@@Base+0x94>  // b.any
    cb8c:	ldr	x9, [x22, #16]
    cb90:	cmp	x9, x8
    cb94:	b.ne	cbcc <mpc_pow@@Base+0x94>  // b.any
    cb98:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    cb9c:	cmp	x26, x8
    cba0:	b.ne	cc6c <mpc_pow@@Base+0x134>  // b.any
    cba4:	ldr	x9, [x24, #16]
    cba8:	cmp	x9, x8
    cbac:	b.ne	cc6c <mpc_pow@@Base+0x134>  // b.any
    cbb0:	mov	w1, #0x1                   	// #1
    cbb4:	mov	x0, x21
    cbb8:	mov	x2, xzr
    cbbc:	mov	w3, wzr
    cbc0:	bl	5040 <mpc_set_ui_ui@plt>
    cbc4:	mov	w28, wzr
    cbc8:	b	cdd8 <mpc_pow@@Base+0x2a0>
    cbcc:	mov	x0, x24
    cbd0:	bl	54d0 <mpfr_number_p@plt>
    cbd4:	cbz	w0, cc1c <mpc_pow@@Base+0xe4>
    cbd8:	add	x27, x24, #0x20
    cbdc:	mov	x0, x27
    cbe0:	bl	54d0 <mpfr_number_p@plt>
    cbe4:	cbz	w0, cc1c <mpc_pow@@Base+0xe4>
    cbe8:	mov	x0, x22
    cbec:	bl	54d0 <mpfr_number_p@plt>
    cbf0:	cbz	w0, cc1c <mpc_pow@@Base+0xe4>
    cbf4:	add	x0, x22, #0x20
    cbf8:	bl	54d0 <mpfr_number_p@plt>
    cbfc:	cbz	w0, cc1c <mpc_pow@@Base+0xe4>
    cc00:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    cc04:	cmp	x26, x8
    cc08:	str	x23, [sp, #120]
    cc0c:	b.ne	ccc8 <mpc_pow@@Base+0x190>  // b.any
    cc10:	ldr	x9, [x24, #16]
    cc14:	cmp	x9, x8
    cc18:	b.ne	cdfc <mpc_pow@@Base+0x2c4>  // b.any
    cc1c:	add	x0, sp, #0xb8
    cc20:	mov	w1, #0x2                   	// #2
    cc24:	bl	4cf0 <mpc_init2@plt>
    cc28:	add	x0, sp, #0xb8
    cc2c:	mov	x1, x24
    cc30:	mov	w2, wzr
    cc34:	bl	4db0 <mpc_log@plt>
    cc38:	add	x0, sp, #0xb8
    cc3c:	add	x1, sp, #0xb8
    cc40:	mov	x2, x22
    cc44:	mov	w3, wzr
    cc48:	bl	4ed0 <mpc_mul@plt>
    cc4c:	add	x1, sp, #0xb8
    cc50:	mov	x0, x21
    cc54:	mov	w2, w25
    cc58:	bl	52a0 <mpc_exp@plt>
    cc5c:	mov	w28, w0
    cc60:	add	x0, sp, #0xb8
    cc64:	bl	4a10 <mpc_clear@plt>
    cc68:	b	cdd8 <mpc_pow@@Base+0x2a0>
    cc6c:	sub	x0, x29, #0xc8
    cc70:	bl	4aa0 <mpfr_init@plt>
    cc74:	sub	x0, x29, #0xc8
    cc78:	mov	x1, x24
    cc7c:	mov	w2, wzr
    cc80:	bl	4ea0 <mpc_norm@plt>
    cc84:	mov	w20, w0
    cc88:	sub	x0, x29, #0xc8
    cc8c:	mov	w1, #0x1                   	// #1
    cc90:	mov	x2, xzr
    cc94:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    cc98:	cmp	w0, #0x0
    cc9c:	ccmp	w20, #0x0, #0x4, eq  // eq = none
    cca0:	csneg	w8, w0, w20, eq  // eq = none
    cca4:	tbnz	w8, #31, ccb8 <mpc_pow@@Base+0x180>
    cca8:	cbz	w8, cd84 <mpc_pow@@Base+0x24c>
    ccac:	ldr	w8, [x22, #40]
    ccb0:	lsr	w19, w8, #31
    ccb4:	b	cd98 <mpc_pow@@Base+0x260>
    ccb8:	ldr	w8, [x22, #40]
    ccbc:	tbnz	w8, #31, cd94 <mpc_pow@@Base+0x25c>
    ccc0:	mov	w19, #0x1                   	// #1
    ccc4:	b	cd98 <mpc_pow@@Base+0x260>
    ccc8:	mov	w2, #0x1                   	// #1
    cccc:	mov	x0, x24
    ccd0:	mov	x1, xzr
    ccd4:	bl	5310 <mpc_cmp_si_si@plt>
    ccd8:	cbz	w0, cd08 <mpc_pow@@Base+0x1d0>
    ccdc:	mov	x2, #0xffffffffffffffff    	// #-1
    cce0:	mov	x0, x24
    cce4:	mov	x1, xzr
    cce8:	bl	5310 <mpc_cmp_si_si@plt>
    ccec:	cbz	w0, cd08 <mpc_pow@@Base+0x1d0>
    ccf0:	mov	x0, x24
    ccf4:	bl	51f0 <mpfr_sgn@plt>
    ccf8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    ccfc:	cmp	x23, x8
    cd00:	b.ne	ce94 <mpc_pow@@Base+0x35c>  // b.any
    cd04:	cbnz	w0, ce94 <mpc_pow@@Base+0x35c>
    cd08:	mov	x0, x22
    cd0c:	bl	4e30 <mpfr_integer_p@plt>
    cd10:	cbz	w0, ce94 <mpc_pow@@Base+0x35c>
    cd14:	ldr	x10, [x22, #16]
    cd18:	cmp	x10, #0x1
    cd1c:	b.lt	d088 <mpc_pow@@Base+0x550>  // b.tstop
    cd20:	ldr	x8, [x22]
    cd24:	cmp	x10, x8
    cd28:	b.gt	d088 <mpc_pow@@Base+0x550>
    cd2c:	adrp	x9, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    cd30:	ldr	x9, [x9, #4056]
    cd34:	sub	x8, x8, #0x1
    cd38:	neg	x12, x10
    cd3c:	ldrsw	x11, [x9]
    cd40:	ldr	x9, [x22, #24]
    cd44:	sdiv	x8, x8, x11
    cd48:	add	x8, x8, #0x1
    cd4c:	madd	x8, x8, x11, x12
    cd50:	sdiv	x8, x8, x11
    cd54:	ldr	x12, [x9, x8, lsl #3]
    cd58:	sdiv	x13, x10, x11
    cd5c:	msub	x10, x13, x11, x10
    cd60:	cbz	x10, d038 <mpc_pow@@Base+0x500>
    cd64:	sub	x10, x10, #0x1
    cd68:	sub	w11, w11, #0x1
    cd6c:	mov	w13, #0x1                   	// #1
    cd70:	lsl	x10, x12, x10
    cd74:	lsl	x11, x13, x11
    cd78:	cmp	x10, x11
    cd7c:	b.eq	d03c <mpc_pow@@Base+0x504>  // b.none
    cd80:	b	d08c <mpc_pow@@Base+0x554>
    cd84:	ldr	w8, [x24, #40]
    cd88:	ldr	w9, [x22, #8]
    cd8c:	eor	w8, w9, w8
    cd90:	tbnz	w8, #31, ccc0 <mpc_pow@@Base+0x188>
    cd94:	mov	w19, wzr
    cd98:	mov	w1, #0x1                   	// #1
    cd9c:	mov	x0, x21
    cda0:	mov	x2, xzr
    cda4:	mov	w3, w25
    cda8:	bl	5040 <mpc_set_ui_ui@plt>
    cdac:	and	w8, w25, #0xfffffff0
    cdb0:	cmp	w8, #0x30
    cdb4:	mov	w28, w0
    cdb8:	b.eq	cdc0 <mpc_pow@@Base+0x288>  // b.none
    cdbc:	cbz	w19, cdd0 <mpc_pow@@Base+0x298>
    cdc0:	mov	x0, x21
    cdc4:	mov	x1, x21
    cdc8:	mov	w2, wzr
    cdcc:	bl	4f60 <mpc_conj@plt>
    cdd0:	sub	x0, x29, #0xc8
    cdd4:	bl	4d60 <mpfr_clear@plt>
    cdd8:	mov	w0, w28
    cddc:	add	sp, sp, #0x1c0
    cde0:	ldp	x20, x19, [sp, #80]
    cde4:	ldp	x22, x21, [sp, #64]
    cde8:	ldp	x24, x23, [sp, #48]
    cdec:	ldp	x26, x25, [sp, #32]
    cdf0:	ldp	x28, x27, [sp, #16]
    cdf4:	ldp	x29, x30, [sp], #96
    cdf8:	ret
    cdfc:	mov	w1, #0x1                   	// #1
    ce00:	mov	x0, x24
    ce04:	mov	x2, xzr
    ce08:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    ce0c:	cbz	w0, cf38 <mpc_pow@@Base+0x400>
    ce10:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    ce14:	cmp	x23, x8
    ce18:	b.ne	cf7c <mpc_pow@@Base+0x444>  // b.any
    ce1c:	mov	x0, x22
    ce20:	bl	4e30 <mpfr_integer_p@plt>
    ce24:	cbnz	w0, ce34 <mpc_pow@@Base+0x2fc>
    ce28:	mov	x0, x24
    ce2c:	bl	51f0 <mpfr_sgn@plt>
    ce30:	tbnz	w0, #31, cf7c <mpc_pow@@Base+0x444>
    ce34:	ldr	w19, [x22, #8]
    ce38:	ldr	w20, [x24, #40]
    ce3c:	and	w3, w25, #0xf
    ce40:	mov	x0, x21
    ce44:	mov	x1, x24
    ce48:	mov	x2, x22
    ce4c:	bl	4b90 <mpfr_pow@plt>
    ce50:	cmp	w0, #0x0
    ce54:	mov	w8, #0x2                   	// #2
    ce58:	asr	w2, w25, #4
    ce5c:	cset	w11, ne  // ne = any
    ce60:	mov	w9, #0x1                   	// #1
    ce64:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    ce68:	csel	w28, w8, w11, lt  // lt = tstop
    ce6c:	cmp	w2, #0x3
    ce70:	str	w9, [x21, #40]
    ce74:	str	x10, [x21, #48]
    ce78:	b.eq	ce84 <mpc_pow@@Base+0x34c>  // b.none
    ce7c:	eor	w8, w20, w19
    ce80:	tbz	w8, #31, cdd8 <mpc_pow@@Base+0x2a0>
    ce84:	add	x0, x21, #0x20
    ce88:	mov	x1, x0
    ce8c:	bl	4b80 <mpfr_neg@plt>
    ce90:	b	cdd8 <mpc_pow@@Base+0x2a0>
    ce94:	mov	x0, x24
    ce98:	mov	x1, x27
    ce9c:	bl	53b0 <mpfr_cmpabs@plt>
    cea0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    cea4:	cmp	x23, x8
    cea8:	mov	w8, wzr
    ceac:	str	wzr, [sp, #140]
    ceb0:	b.ne	cf98 <mpc_pow@@Base+0x460>  // b.any
    ceb4:	str	x8, [sp, #144]
    ceb8:	cbnz	w0, d098 <mpc_pow@@Base+0x560>
    cebc:	mov	x0, x22
    cec0:	bl	4e30 <mpfr_integer_p@plt>
    cec4:	cbz	w0, dc38 <mpc_pow@@Base+0x1100>
    cec8:	ldr	x9, [x22, #16]
    cecc:	subs	x8, x9, #0x1
    ced0:	b.lt	d088 <mpc_pow@@Base+0x550>  // b.tstop
    ced4:	ldr	x10, [x22]
    ced8:	cmp	x9, x10
    cedc:	b.gt	d074 <mpc_pow@@Base+0x53c>
    cee0:	adrp	x11, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    cee4:	ldr	x11, [x11, #4056]
    cee8:	sub	x10, x10, #0x1
    ceec:	neg	x13, x9
    cef0:	ldrsw	x12, [x11]
    cef4:	ldr	x11, [x22, #24]
    cef8:	sdiv	x10, x10, x12
    cefc:	add	x10, x10, #0x1
    cf00:	madd	x10, x10, x12, x13
    cf04:	sdiv	x10, x10, x12
    cf08:	ldr	x13, [x11, x10, lsl #3]
    cf0c:	sdiv	x14, x9, x12
    cf10:	msub	x14, x14, x12, x9
    cf14:	cbz	x14, d058 <mpc_pow@@Base+0x520>
    cf18:	sub	x14, x14, #0x1
    cf1c:	sub	w12, w12, #0x1
    cf20:	mov	w15, #0x1                   	// #1
    cf24:	lsl	x13, x13, x14
    cf28:	lsl	x12, x15, x12
    cf2c:	cmp	x13, x12
    cf30:	b.eq	d05c <mpc_pow@@Base+0x524>  // b.none
    cf34:	b	d074 <mpc_pow@@Base+0x53c>
    cf38:	ldr	w19, [x22, #8]
    cf3c:	ldr	w20, [x24, #40]
    cf40:	mov	w1, #0x1                   	// #1
    cf44:	mov	x0, x21
    cf48:	mov	w2, w25
    cf4c:	bl	4ce0 <mpc_set_ui@plt>
    cf50:	and	w8, w25, #0xfffffff0
    cf54:	cmp	w8, #0x30
    cf58:	mov	w28, w0
    cf5c:	b.eq	cf68 <mpc_pow@@Base+0x430>  // b.none
    cf60:	eor	w8, w20, w19
    cf64:	tbz	w8, #31, cdd8 <mpc_pow@@Base+0x2a0>
    cf68:	mov	x0, x21
    cf6c:	mov	x1, x21
    cf70:	mov	w2, wzr
    cf74:	bl	4f60 <mpc_conj@plt>
    cf78:	b	cdd8 <mpc_pow@@Base+0x2a0>
    cf7c:	mov	x1, #0xffffffffffffffff    	// #-1
    cf80:	mov	x0, x24
    cf84:	mov	x2, xzr
    cf88:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    cf8c:	cbz	w0, cfa0 <mpc_pow@@Base+0x468>
    cf90:	str	xzr, [sp, #144]
    cf94:	b	cfb4 <mpc_pow@@Base+0x47c>
    cf98:	str	x8, [sp, #144]
    cf9c:	b	d098 <mpc_pow@@Base+0x560>
    cfa0:	mov	x0, x22
    cfa4:	bl	4e30 <mpfr_integer_p@plt>
    cfa8:	cmp	w0, #0x0
    cfac:	cset	w8, ne  // ne = any
    cfb0:	str	x8, [sp, #144]
    cfb4:	mov	x0, x24
    cfb8:	bl	51f0 <mpfr_sgn@plt>
    cfbc:	tbnz	w0, #31, cfc8 <mpc_pow@@Base+0x490>
    cfc0:	str	wzr, [sp, #140]
    cfc4:	b	d098 <mpc_pow@@Base+0x560>
    cfc8:	ldr	x8, [x22, #16]
    cfcc:	tbnz	x8, #63, cfc0 <mpc_pow@@Base+0x488>
    cfd0:	ldr	x9, [x22]
    cfd4:	cmp	x8, x9
    cfd8:	b.ge	cfc0 <mpc_pow@@Base+0x488>  // b.tcont
    cfdc:	adrp	x10, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    cfe0:	ldr	x10, [x10, #4056]
    cfe4:	add	x12, x8, #0x1
    cfe8:	sub	x8, x9, #0x1
    cfec:	ldr	x9, [x22, #24]
    cff0:	ldrsw	x10, [x10]
    cff4:	neg	x11, x12
    cff8:	sdiv	x8, x8, x10
    cffc:	add	x8, x8, #0x1
    d000:	madd	x8, x8, x10, x11
    d004:	sdiv	x8, x8, x10
    d008:	ldr	x11, [x9, x8, lsl #3]
    d00c:	sdiv	x13, x12, x10
    d010:	msub	x12, x13, x10, x12
    d014:	cbz	x12, de38 <mpc_pow@@Base+0x1300>
    d018:	sub	x12, x12, #0x1
    d01c:	sub	w10, w10, #0x1
    d020:	mov	w13, #0x1                   	// #1
    d024:	lsl	x11, x11, x12
    d028:	lsl	x10, x13, x10
    d02c:	cmp	x11, x10
    d030:	b.ne	cfc0 <mpc_pow@@Base+0x488>  // b.any
    d034:	b	de3c <mpc_pow@@Base+0x1304>
    d038:	tbz	w12, #0, d088 <mpc_pow@@Base+0x550>
    d03c:	sub	x9, x9, #0x8
    d040:	subs	x10, x8, #0x1
    d044:	b.lt	de30 <mpc_pow@@Base+0x12f8>  // b.tstop
    d048:	ldr	x11, [x9, x8, lsl #3]
    d04c:	mov	x8, x10
    d050:	cbz	x11, d040 <mpc_pow@@Base+0x508>
    d054:	b	d088 <mpc_pow@@Base+0x550>
    d058:	tbz	w13, #0, d074 <mpc_pow@@Base+0x53c>
    d05c:	sub	x11, x11, #0x8
    d060:	subs	x12, x10, #0x1
    d064:	b.lt	dc38 <mpc_pow@@Base+0x1100>  // b.tstop
    d068:	ldr	x13, [x11, x10, lsl #3]
    d06c:	mov	x10, x12
    d070:	cbz	x13, d060 <mpc_pow@@Base+0x528>
    d074:	cmp	x9, #0x2
    d078:	b.lt	d088 <mpc_pow@@Base+0x550>  // b.tstop
    d07c:	ldr	x9, [x22]
    d080:	cmp	x8, x9
    d084:	b.le	ddb8 <mpc_pow@@Base+0x1280>
    d088:	mov	w13, #0x1                   	// #1
    d08c:	eor	w8, w13, #0x1
    d090:	str	x13, [sp, #144]
    d094:	str	w8, [sp, #140]
    d098:	str	x27, [sp, #56]
    d09c:	str	x26, [sp, #8]
    d0a0:	stp	w20, w19, [sp, #48]
    d0a4:	mov	x26, x21
    d0a8:	ldr	x19, [x21]
    d0ac:	ldr	x20, [x26, #32]!
    d0b0:	mov	w9, #0x34                  	// #52
    d0b4:	add	x0, sp, #0xb8
    d0b8:	mov	x23, x21
    d0bc:	cmp	x19, x20
    d0c0:	csel	x8, x19, x20, gt
    d0c4:	cmp	x8, #0x34
    d0c8:	csel	x8, x8, x9, gt
    d0cc:	add	x27, x8, #0xc
    d0d0:	mov	x1, x27
    d0d4:	add	x21, sp, #0xb8
    d0d8:	bl	4cf0 <mpc_init2@plt>
    d0dc:	sub	x0, x29, #0xc8
    d0e0:	mov	x1, x27
    d0e4:	bl	4cf0 <mpc_init2@plt>
    d0e8:	ldr	x11, [x24, #16]
    d0ec:	and	w8, w25, #0xf
    d0f0:	str	w8, [sp, #28]
    d0f4:	ldr	x8, [x23]
    d0f8:	ldr	x9, [x26]
    d0fc:	tst	w25, #0xf
    d100:	asr	w10, w25, #4
    d104:	str	x11, [sp, #16]
    d108:	add	x11, x21, #0x20
    d10c:	str	x11, [sp, #128]
    d110:	cinc	x11, x19, eq  // eq = none
    d114:	cmp	w10, #0x0
    d118:	str	w10, [sp, #44]
    d11c:	cinc	x10, x20, eq  // eq = none
    d120:	cmp	x8, x9
    d124:	csel	x8, x8, x9, gt
    d128:	cmp	x23, x22
    d12c:	stp	x23, x11, [sp, #72]
    d130:	str	x8, [sp, #176]
    d134:	cset	w8, eq  // eq = none
    d138:	str	x26, [sp, #32]
    d13c:	cmp	x26, x22
    d140:	ldr	x23, [sp, #144]
    d144:	ldr	w26, [sp, #140]
    d148:	cset	w9, eq  // eq = none
    d14c:	mov	w28, #0xfffffffe            	// #-2
    d150:	orr	w8, w8, w9
    d154:	str	w25, [sp, #4]
    d158:	str	x10, [sp, #96]
    d15c:	str	w8, [sp, #68]
    d160:	b	d180 <mpc_pow@@Base+0x648>
    d164:	add	x27, x27, #0x40
    d168:	sub	x0, x29, #0xc8
    d16c:	mov	x1, x27
    d170:	bl	4c00 <mpc_set_prec@plt>
    d174:	add	x0, sp, #0xb8
    d178:	mov	x1, x27
    d17c:	bl	4c00 <mpc_set_prec@plt>
    d180:	sub	x0, x29, #0xc8
    d184:	mov	x1, x24
    d188:	mov	w2, wzr
    d18c:	bl	4db0 <mpc_log@plt>
    d190:	sub	x0, x29, #0xc8
    d194:	sub	x1, x29, #0xc8
    d198:	mov	x2, x22
    d19c:	mov	w3, wzr
    d1a0:	bl	4ed0 <mpc_mul@plt>
    d1a4:	ldur	x8, [x29, #-184]
    d1a8:	ldur	x9, [x29, #-152]
    d1ac:	bic	x8, x8, x8, asr #63
    d1b0:	cmp	x9, x8
    d1b4:	csel	x25, x9, x8, gt
    d1b8:	subs	x21, x27, x25
    d1bc:	b.le	d164 <mpc_pow@@Base+0x62c>
    d1c0:	bl	4a50 <mpfr_clear_overflow@plt>
    d1c4:	bl	4e20 <mpfr_clear_underflow@plt>
    d1c8:	add	x0, sp, #0xb8
    d1cc:	sub	x1, x29, #0xc8
    d1d0:	mov	w2, wzr
    d1d4:	bl	52a0 <mpc_exp@plt>
    d1d8:	mov	w20, w0
    d1dc:	bl	52f0 <mpfr_underflow_p@plt>
    d1e0:	cbnz	w0, dac8 <mpc_pow@@Base+0xf90>
    d1e4:	bl	54e0 <mpfr_overflow_p@plt>
    d1e8:	cbnz	w0, dac8 <mpc_pow@@Base+0xf90>
    d1ec:	ldr	x8, [sp, #200]
    d1f0:	ldr	x9, [sp, #232]
    d1f4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    d1f8:	cmp	x8, x10
    d1fc:	csel	x19, x9, x8, eq  // eq = none
    d200:	cmp	x9, x10
    d204:	csel	x8, x19, x9, eq  // eq = none
    d208:	sub	x9, x8, x19
    d20c:	stp	x9, x8, [sp, #160]
    d210:	subs	x8, x19, x8
    d214:	str	x8, [sp, #152]
    d218:	csel	x20, x8, xzr, gt
    d21c:	csel	x8, xzr, x9, gt
    d220:	tbnz	w26, #0, d254 <mpc_pow@@Base+0x71c>
    d224:	add	x9, x25, x8
    d228:	add	x9, x9, #0x3
    d22c:	cmp	x27, x9
    d230:	b.le	d28c <mpc_pow@@Base+0x754>
    d234:	ldr	x4, [sp, #80]
    d238:	sub	x8, x21, x8
    d23c:	sub	x1, x8, #0x3
    d240:	add	x0, sp, #0xb8
    d244:	mov	w3, #0x1                   	// #1
    d248:	mov	w2, wzr
    d24c:	bl	5450 <mpfr_can_round@plt>
    d250:	cbz	w0, d28c <mpc_pow@@Base+0x754>
    d254:	cbnz	w23, db6c <mpc_pow@@Base+0x1034>
    d258:	add	x8, x25, x20
    d25c:	add	x8, x8, #0x3
    d260:	cmp	x27, x8
    d264:	b.le	d288 <mpc_pow@@Base+0x750>
    d268:	ldr	x0, [sp, #128]
    d26c:	ldr	x4, [sp, #96]
    d270:	sub	x8, x21, x20
    d274:	sub	x1, x8, #0x3
    d278:	mov	w3, #0x1                   	// #1
    d27c:	mov	w2, wzr
    d280:	bl	5450 <mpfr_can_round@plt>
    d284:	cbnz	w0, dbd0 <mpc_pow@@Base+0x1098>
    d288:	tbnz	w26, #0, d29c <mpc_pow@@Base+0x764>
    d28c:	add	x0, sp, #0xb8
    d290:	bl	54d0 <mpfr_number_p@plt>
    d294:	cbz	w0, de84 <mpc_pow@@Base+0x134c>
    d298:	cbnz	w23, d2a8 <mpc_pow@@Base+0x770>
    d29c:	ldr	x0, [sp, #128]
    d2a0:	bl	54d0 <mpfr_number_p@plt>
    d2a4:	cbz	w0, deb4 <mpc_pow@@Base+0x137c>
    d2a8:	cmn	w28, #0x2
    d2ac:	b.ne	d308 <mpc_pow@@Base+0x7d0>  // b.any
    d2b0:	ldr	x8, [sp, #120]
    d2b4:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    d2b8:	cmp	x8, x25
    d2bc:	b.ne	d318 <mpc_pow@@Base+0x7e0>  // b.any
    d2c0:	ldr	w8, [x24, #8]
    d2c4:	ldr	x20, [x24, #16]
    d2c8:	str	w8, [sp, #92]
    d2cc:	ldr	w8, [x24, #40]
    d2d0:	str	w8, [sp, #88]
    d2d4:	ldr	w8, [sp, #68]
    d2d8:	cbz	w8, d320 <mpc_pow@@Base+0x7e8>
    d2dc:	ldr	x1, [x22]
    d2e0:	sub	x0, x29, #0x88
    d2e4:	bl	5440 <mpfr_init2@plt>
    d2e8:	ldr	w3, [x22, #8]
    d2ec:	sub	x0, x29, #0x88
    d2f0:	mov	x1, x22
    d2f4:	mov	w2, wzr
    d2f8:	bl	51d0 <mpfr_set4@plt>
    d2fc:	mov	w8, #0x1                   	// #1
    d300:	str	w8, [sp, #108]
    d304:	b	d324 <mpc_pow@@Base+0x7ec>
    d308:	cmp	x27, #0x0
    d30c:	cinc	x8, x27, lt  // lt = tstop
    d310:	add	x27, x27, x8, asr #1
    d314:	b	d168 <mpc_pow@@Base+0x630>
    d318:	mov	w28, #0xfffffffe            	// #-2
    d31c:	b	daac <mpc_pow@@Base+0xf74>
    d320:	str	wzr, [sp, #108]
    d324:	ldr	x23, [sp, #176]
    d328:	sub	x0, x29, #0x18
    d32c:	bl	54a0 <__gmpz_init@plt>
    d330:	sub	x0, x29, #0x28
    d334:	bl	54a0 <__gmpz_init@plt>
    d338:	sub	x0, x29, #0x38
    d33c:	bl	54a0 <__gmpz_init@plt>
    d340:	sub	x0, x29, #0x48
    d344:	bl	54a0 <__gmpz_init@plt>
    d348:	sub	x0, x29, #0x58
    d34c:	bl	54a0 <__gmpz_init@plt>
    d350:	sub	x0, x29, #0x68
    d354:	bl	54a0 <__gmpz_init@plt>
    d358:	sub	x0, x29, #0x18
    d35c:	mov	x1, x22
    d360:	bl	5470 <mpfr_get_z_2exp@plt>
    d364:	mov	x28, x0
    d368:	sub	x0, x29, #0x18
    d36c:	mov	x1, xzr
    d370:	bl	49f0 <__gmpz_scan1@plt>
    d374:	mov	x21, x0
    d378:	sub	x0, x29, #0x18
    d37c:	sub	x1, x29, #0x18
    d380:	mov	x2, x21
    d384:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d388:	cmp	x20, x25
    d38c:	sub	x0, x29, #0x48
    d390:	str	x20, [sp, #112]
    d394:	b.ne	d3a8 <mpc_pow@@Base+0x870>  // b.any
    d398:	mov	x1, xzr
    d39c:	bl	4b10 <__gmpz_set_ui@plt>
    d3a0:	mov	x26, xzr
    d3a4:	b	d3b4 <mpc_pow@@Base+0x87c>
    d3a8:	mov	x1, x24
    d3ac:	bl	5470 <mpfr_get_z_2exp@plt>
    d3b0:	mov	x26, x0
    d3b4:	ldr	x8, [x24, #48]
    d3b8:	lsl	x23, x23, #1
    d3bc:	sub	x0, x29, #0x58
    d3c0:	str	x23, [sp, #176]
    d3c4:	cmp	x8, x25
    d3c8:	b.ne	d420 <mpc_pow@@Base+0x8e8>  // b.any
    d3cc:	mov	x1, xzr
    d3d0:	bl	4b10 <__gmpz_set_ui@plt>
    d3d4:	ldur	w8, [x29, #-68]
    d3d8:	add	x20, x21, x28
    d3dc:	cbz	w8, d468 <mpc_pow@@Base+0x930>
    d3e0:	ldur	w25, [x29, #-84]
    d3e4:	sub	x0, x29, #0x48
    d3e8:	mov	x1, xzr
    d3ec:	bl	49f0 <__gmpz_scan1@plt>
    d3f0:	mov	x21, x0
    d3f4:	cbz	w25, d6e0 <mpc_pow@@Base+0xba8>
    d3f8:	sub	x0, x29, #0x58
    d3fc:	mov	x1, xzr
    d400:	bl	49f0 <__gmpz_scan1@plt>
    d404:	cmp	x0, x21
    d408:	csel	x21, x0, x21, cc  // cc = lo, ul, last
    d40c:	sub	x0, x29, #0x48
    d410:	sub	x1, x29, #0x48
    d414:	mov	x2, x21
    d418:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d41c:	b	d478 <mpc_pow@@Base+0x940>
    d420:	ldr	x1, [sp, #56]
    d424:	bl	5470 <mpfr_get_z_2exp@plt>
    d428:	ldr	x8, [sp, #112]
    d42c:	mov	x20, x0
    d430:	cmp	x8, x25
    d434:	csel	x26, x0, x26, eq  // eq = none
    d438:	subs	x2, x26, x0
    d43c:	b.ge	d6ac <mpc_pow@@Base+0xb74>  // b.tcont
    d440:	sub	x2, x20, x26
    d444:	sub	x0, x29, #0x58
    d448:	sub	x1, x29, #0x58
    d44c:	bl	4e90 <__gmpz_mul_2exp@plt>
    d450:	sub	x0, x29, #0x58
    d454:	mov	w1, #0x2                   	// #2
    d458:	bl	54b0 <__gmpz_sizeinbase@plt>
    d45c:	cmp	x0, x23
    d460:	b.le	d3d4 <mpc_pow@@Base+0x89c>
    d464:	b	d6d8 <mpc_pow@@Base+0xba0>
    d468:	sub	x0, x29, #0x58
    d46c:	mov	x1, xzr
    d470:	bl	49f0 <__gmpz_scan1@plt>
    d474:	mov	x21, x0
    d478:	sub	x0, x29, #0x58
    d47c:	sub	x1, x29, #0x58
    d480:	mov	x2, x21
    d484:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d488:	add	x21, x21, x26
    d48c:	tbnz	x20, #63, d6f8 <mpc_pow@@Base+0xbc0>
    d490:	mov	x26, x20
    d494:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    d498:	ldur	w8, [x29, #-20]
    d49c:	tbz	w8, #31, d508 <mpc_pow@@Base+0x9d0>
    d4a0:	sub	x0, x29, #0x28
    d4a4:	sub	x1, x29, #0x48
    d4a8:	sub	x2, x29, #0x48
    d4ac:	bl	4d40 <__gmpz_mul@plt>
    d4b0:	sub	x0, x29, #0x28
    d4b4:	sub	x1, x29, #0x58
    d4b8:	sub	x2, x29, #0x58
    d4bc:	bl	4f10 <__gmpz_addmul@plt>
    d4c0:	sub	x0, x29, #0x28
    d4c4:	mov	x1, xzr
    d4c8:	bl	49f0 <__gmpz_scan1@plt>
    d4cc:	mov	x20, x0
    d4d0:	sub	x0, x29, #0x28
    d4d4:	mov	w1, #0x2                   	// #2
    d4d8:	bl	54b0 <__gmpz_sizeinbase@plt>
    d4dc:	add	x8, x20, #0x1
    d4e0:	cmp	x0, x8
    d4e4:	b.ne	d7d4 <mpc_pow@@Base+0xc9c>  // b.any
    d4e8:	ldur	w8, [x29, #-84]
    d4ec:	ldur	w9, [x29, #-20]
    d4f0:	add	x10, x21, x20
    d4f4:	neg	x21, x10
    d4f8:	neg	w8, w8
    d4fc:	neg	w9, w9
    d500:	stur	w8, [x29, #-84]
    d504:	stur	w9, [x29, #-20]
    d508:	sub	x0, x29, #0x18
    d50c:	mov	w1, #0x2                   	// #2
    d510:	bl	54b0 <__gmpz_sizeinbase@plt>
    d514:	mov	x20, x0
    d518:	sub	x0, x29, #0x28
    d51c:	sub	x1, x29, #0x48
    d520:	bl	4d00 <__gmpz_set@plt>
    d524:	sub	x0, x29, #0x38
    d528:	sub	x1, x29, #0x58
    d52c:	bl	4d00 <__gmpz_set@plt>
    d530:	sub	x28, x20, #0x2
    d534:	mov	x20, x21
    d538:	cmn	x28, #0x1
    d53c:	b.eq	d700 <mpc_pow@@Base+0xbc8>  // b.none
    d540:	sub	x0, x29, #0x68
    d544:	sub	x1, x29, #0x28
    d548:	sub	x2, x29, #0x38
    d54c:	bl	4d40 <__gmpz_mul@plt>
    d550:	sub	x0, x29, #0x28
    d554:	sub	x1, x29, #0x28
    d558:	sub	x2, x29, #0x28
    d55c:	bl	4d40 <__gmpz_mul@plt>
    d560:	sub	x0, x29, #0x28
    d564:	sub	x1, x29, #0x38
    d568:	sub	x2, x29, #0x38
    d56c:	bl	52d0 <__gmpz_submul@plt>
    d570:	sub	x0, x29, #0x38
    d574:	sub	x1, x29, #0x68
    d578:	mov	w2, #0x1                   	// #1
    d57c:	bl	4e90 <__gmpz_mul_2exp@plt>
    d580:	sub	x0, x29, #0x18
    d584:	mov	x1, x28
    d588:	lsl	x25, x20, #1
    d58c:	bl	4d30 <__gmpz_tstbit@plt>
    d590:	cbz	w0, d5e4 <mpc_pow@@Base+0xaac>
    d594:	sub	x0, x29, #0x68
    d598:	sub	x1, x29, #0x28
    d59c:	sub	x2, x29, #0x48
    d5a0:	bl	4d40 <__gmpz_mul@plt>
    d5a4:	sub	x0, x29, #0x68
    d5a8:	sub	x1, x29, #0x38
    d5ac:	sub	x2, x29, #0x58
    d5b0:	bl	52d0 <__gmpz_submul@plt>
    d5b4:	sub	x0, x29, #0x38
    d5b8:	sub	x1, x29, #0x38
    d5bc:	sub	x2, x29, #0x48
    d5c0:	bl	4d40 <__gmpz_mul@plt>
    d5c4:	sub	x0, x29, #0x38
    d5c8:	sub	x1, x29, #0x28
    d5cc:	sub	x2, x29, #0x58
    d5d0:	bl	4f10 <__gmpz_addmul@plt>
    d5d4:	sub	x0, x29, #0x28
    d5d8:	sub	x1, x29, #0x68
    d5dc:	bl	4da0 <__gmpz_swap@plt>
    d5e0:	add	x25, x25, x21
    d5e4:	ldur	w8, [x29, #-36]
    d5e8:	cbz	w8, d634 <mpc_pow@@Base+0xafc>
    d5ec:	ldur	w23, [x29, #-52]
    d5f0:	sub	x0, x29, #0x28
    d5f4:	mov	x1, xzr
    d5f8:	bl	49f0 <__gmpz_scan1@plt>
    d5fc:	mov	x20, x0
    d600:	cbz	w23, d658 <mpc_pow@@Base+0xb20>
    d604:	sub	x0, x29, #0x38
    d608:	mov	x1, xzr
    d60c:	bl	49f0 <__gmpz_scan1@plt>
    d610:	cmp	x0, x20
    d614:	csel	x20, x0, x20, cc  // cc = lo, ul, last
    d618:	sub	x0, x29, #0x28
    d61c:	sub	x1, x29, #0x28
    d620:	mov	x2, x20
    d624:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d628:	sub	x0, x29, #0x38
    d62c:	sub	x1, x29, #0x38
    d630:	b	d660 <mpc_pow@@Base+0xb28>
    d634:	sub	x0, x29, #0x38
    d638:	mov	x1, xzr
    d63c:	bl	49f0 <__gmpz_scan1@plt>
    d640:	mov	x20, x0
    d644:	sub	x0, x29, #0x38
    d648:	sub	x1, x29, #0x38
    d64c:	mov	x2, x20
    d650:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d654:	b	d66c <mpc_pow@@Base+0xb34>
    d658:	sub	x0, x29, #0x28
    d65c:	sub	x1, x29, #0x28
    d660:	mov	x2, x20
    d664:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d668:	ldr	x23, [sp, #176]
    d66c:	sub	x0, x29, #0x28
    d670:	mov	w1, #0x2                   	// #2
    d674:	bl	54b0 <__gmpz_sizeinbase@plt>
    d678:	cmp	x0, x23
    d67c:	b.gt	d69c <mpc_pow@@Base+0xb64>
    d680:	sub	x0, x29, #0x38
    d684:	mov	w1, #0x2                   	// #2
    d688:	add	x20, x20, x25
    d68c:	bl	54b0 <__gmpz_sizeinbase@plt>
    d690:	cmp	x0, x23
    d694:	sub	x28, x28, #0x1
    d698:	b.le	d538 <mpc_pow@@Base+0xa00>
    d69c:	ldr	x23, [sp, #144]
    d6a0:	ldr	w26, [sp, #140]
    d6a4:	mov	w28, #0xfffffffe            	// #-2
    d6a8:	b	d870 <mpc_pow@@Base+0xd38>
    d6ac:	cmp	x20, x26
    d6b0:	b.ge	d3d4 <mpc_pow@@Base+0x89c>  // b.tcont
    d6b4:	sub	x0, x29, #0x48
    d6b8:	sub	x1, x29, #0x48
    d6bc:	bl	4e90 <__gmpz_mul_2exp@plt>
    d6c0:	sub	x0, x29, #0x48
    d6c4:	mov	w1, #0x2                   	// #2
    d6c8:	bl	54b0 <__gmpz_sizeinbase@plt>
    d6cc:	cmp	x0, x23
    d6d0:	mov	x26, x20
    d6d4:	b.le	d3d4 <mpc_pow@@Base+0x89c>
    d6d8:	mov	w28, #0xfffffffe            	// #-2
    d6dc:	b	d7d8 <mpc_pow@@Base+0xca0>
    d6e0:	sub	x0, x29, #0x48
    d6e4:	sub	x1, x29, #0x48
    d6e8:	mov	x2, x21
    d6ec:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d6f0:	add	x21, x21, x26
    d6f4:	tbz	x20, #63, d490 <mpc_pow@@Base+0x958>
    d6f8:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    d6fc:	b	d8e8 <mpc_pow@@Base+0xdb0>
    d700:	add	x25, x26, #0x1
    d704:	ldr	x23, [sp, #144]
    d708:	ldr	w26, [sp, #140]
    d70c:	sub	x25, x25, #0x1
    d710:	cmp	x25, #0x1
    d714:	b.lt	d7e4 <mpc_pow@@Base+0xcac>  // b.tstop
    d718:	sub	x0, x29, #0x68
    d71c:	sub	x1, x29, #0x28
    d720:	sub	x2, x29, #0x38
    d724:	bl	4d40 <__gmpz_mul@plt>
    d728:	sub	x0, x29, #0x28
    d72c:	sub	x1, x29, #0x28
    d730:	sub	x2, x29, #0x28
    d734:	bl	4d40 <__gmpz_mul@plt>
    d738:	sub	x0, x29, #0x28
    d73c:	sub	x1, x29, #0x38
    d740:	sub	x2, x29, #0x38
    d744:	bl	52d0 <__gmpz_submul@plt>
    d748:	sub	x0, x29, #0x38
    d74c:	sub	x1, x29, #0x68
    d750:	mov	w2, #0x1                   	// #1
    d754:	bl	4e90 <__gmpz_mul_2exp@plt>
    d758:	sub	x0, x29, #0x28
    d75c:	mov	x1, xzr
    d760:	bl	49f0 <__gmpz_scan1@plt>
    d764:	mov	x21, x0
    d768:	sub	x0, x29, #0x38
    d76c:	mov	x1, xzr
    d770:	bl	49f0 <__gmpz_scan1@plt>
    d774:	cmp	x21, x0
    d778:	csel	x21, x0, x21, hi  // hi = pmore
    d77c:	sub	x0, x29, #0x28
    d780:	sub	x1, x29, #0x28
    d784:	mov	x2, x21
    d788:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d78c:	sub	x0, x29, #0x38
    d790:	sub	x1, x29, #0x38
    d794:	mov	x2, x21
    d798:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d79c:	sub	x0, x29, #0x28
    d7a0:	mov	w1, #0x2                   	// #2
    d7a4:	bl	54b0 <__gmpz_sizeinbase@plt>
    d7a8:	ldr	x28, [sp, #176]
    d7ac:	cmp	x0, x28
    d7b0:	b.gt	d7cc <mpc_pow@@Base+0xc94>
    d7b4:	sub	x0, x29, #0x38
    d7b8:	mov	w1, #0x2                   	// #2
    d7bc:	add	x20, x21, x20, lsl #1
    d7c0:	bl	54b0 <__gmpz_sizeinbase@plt>
    d7c4:	cmp	x0, x28
    d7c8:	b.le	d70c <mpc_pow@@Base+0xbd4>
    d7cc:	mov	w28, #0xfffffffe            	// #-2
    d7d0:	b	d870 <mpc_pow@@Base+0xd38>
    d7d4:	mov	w28, #0xffffffff            	// #-1
    d7d8:	ldr	x23, [sp, #144]
    d7dc:	ldr	w26, [sp, #140]
    d7e0:	b	da30 <mpc_pow@@Base+0xef8>
    d7e4:	ldr	x0, [sp, #72]
    d7e8:	ldr	w2, [sp, #28]
    d7ec:	sub	x1, x29, #0x28
    d7f0:	bl	4ec0 <mpfr_set_z@plt>
    d7f4:	ldr	x21, [sp, #32]
    d7f8:	ldr	w25, [sp, #44]
    d7fc:	cmp	w0, #0x0
    d800:	cset	w8, ne  // ne = any
    d804:	mov	w9, #0x2                   	// #2
    d808:	sub	x1, x29, #0x38
    d80c:	mov	x0, x21
    d810:	mov	w2, w25
    d814:	csel	w28, w9, w8, lt  // lt = tstop
    d818:	bl	4ec0 <mpfr_set_z@plt>
    d81c:	tbnz	w0, #31, d840 <mpc_pow@@Base+0xd08>
    d820:	sub	x1, x29, #0x38
    d824:	mov	x0, x21
    d828:	mov	w2, w25
    d82c:	bl	4ec0 <mpfr_set_z@plt>
    d830:	cmp	w0, #0x0
    d834:	cset	w8, ne  // ne = any
    d838:	lsl	w8, w8, #2
    d83c:	b	d844 <mpc_pow@@Base+0xd0c>
    d840:	mov	w8, #0x8                   	// #8
    d844:	ldr	x0, [sp, #72]
    d848:	ldr	w3, [sp, #28]
    d84c:	mov	x2, x20
    d850:	orr	w28, w8, w28
    d854:	mov	x1, x0
    d858:	bl	4a70 <mpfr_mul_2si@plt>
    d85c:	mov	x0, x21
    d860:	mov	x1, x21
    d864:	mov	x2, x20
    d868:	mov	w3, w25
    d86c:	bl	4a70 <mpfr_mul_2si@plt>
    d870:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    d874:	b	da30 <mpc_pow@@Base+0xef8>
    d878:	mvn	w8, w1
    d87c:	lsr	w0, w8, #31
    d880:	cbz	w0, da2c <mpc_pow@@Base+0xef4>
    d884:	sub	x0, x29, #0x28
    d888:	sub	x1, x29, #0x28
    d88c:	bl	4af0 <__gmpz_sqrt@plt>
    d890:	sub	x0, x29, #0x38
    d894:	sub	x1, x29, #0x58
    d898:	mov	w2, #0x1                   	// #1
    d89c:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d8a0:	sub	x0, x29, #0x38
    d8a4:	sub	x1, x29, #0x38
    d8a8:	sub	x2, x29, #0x28
    d8ac:	bl	4cc0 <__gmpz_divexact@plt>
    d8b0:	sub	x0, x29, #0x28
    d8b4:	sub	x1, x29, #0x48
    d8b8:	bl	4da0 <__gmpz_swap@plt>
    d8bc:	sub	x0, x29, #0x38
    d8c0:	sub	x1, x29, #0x58
    d8c4:	bl	4da0 <__gmpz_swap@plt>
    d8c8:	ldr	x23, [sp, #176]
    d8cc:	cmp	x21, #0x0
    d8d0:	add	x26, x20, #0x1
    d8d4:	cinc	x8, x21, lt  // lt = tstop
    d8d8:	cmn	x20, #0x1
    d8dc:	asr	x21, x8, #1
    d8e0:	mov	x20, x26
    d8e4:	b.ge	d498 <mpc_pow@@Base+0x960>  // b.tcont
    d8e8:	tbz	w21, #0, d910 <mpc_pow@@Base+0xdd8>
    d8ec:	sub	x0, x29, #0x48
    d8f0:	sub	x1, x29, #0x48
    d8f4:	mov	w2, #0x1                   	// #1
    d8f8:	bl	4e90 <__gmpz_mul_2exp@plt>
    d8fc:	sub	x0, x29, #0x58
    d900:	sub	x1, x29, #0x58
    d904:	mov	w2, #0x1                   	// #1
    d908:	bl	4e90 <__gmpz_mul_2exp@plt>
    d90c:	sub	x21, x21, #0x1
    d910:	ldr	x23, [sp, #144]
    d914:	ldr	w26, [sp, #140]
    d918:	ldur	w8, [x29, #-84]
    d91c:	cbz	w8, d9c0 <mpc_pow@@Base+0xe88>
    d920:	sub	x0, x29, #0x58
    d924:	mov	w1, #0x1                   	// #1
    d928:	bl	4c40 <__gmpz_divisible_2exp_p@plt>
    d92c:	cbz	w0, da2c <mpc_pow@@Base+0xef4>
    d930:	sub	x0, x29, #0x28
    d934:	sub	x1, x29, #0x48
    d938:	sub	x2, x29, #0x48
    d93c:	bl	4d40 <__gmpz_mul@plt>
    d940:	sub	x0, x29, #0x28
    d944:	sub	x1, x29, #0x58
    d948:	sub	x2, x29, #0x58
    d94c:	bl	4f10 <__gmpz_addmul@plt>
    d950:	ldur	w1, [x29, #-36]
    d954:	cmp	w1, #0x1
    d958:	b.lt	da10 <mpc_pow@@Base+0xed8>  // b.tstop
    d95c:	ldur	x0, [x29, #-32]
    d960:	bl	5420 <__gmpn_perfect_square_p@plt>
    d964:	cbz	w0, da2c <mpc_pow@@Base+0xef4>
    d968:	sub	x0, x29, #0x28
    d96c:	sub	x1, x29, #0x28
    d970:	bl	4af0 <__gmpz_sqrt@plt>
    d974:	sub	x0, x29, #0x28
    d978:	sub	x1, x29, #0x48
    d97c:	sub	x2, x29, #0x28
    d980:	bl	53d0 <__gmpz_add@plt>
    d984:	sub	x0, x29, #0x28
    d988:	mov	w1, #0x1                   	// #1
    d98c:	bl	4c40 <__gmpz_divisible_2exp_p@plt>
    d990:	cbz	w0, da2c <mpc_pow@@Base+0xef4>
    d994:	sub	x0, x29, #0x28
    d998:	sub	x1, x29, #0x28
    d99c:	mov	w2, #0x1                   	// #1
    d9a0:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d9a4:	ldur	w1, [x29, #-36]
    d9a8:	cmp	w1, #0x1
    d9ac:	b.lt	d878 <mpc_pow@@Base+0xd40>  // b.tstop
    d9b0:	ldur	x0, [x29, #-32]
    d9b4:	bl	5420 <__gmpn_perfect_square_p@plt>
    d9b8:	cbnz	w0, d884 <mpc_pow@@Base+0xd4c>
    d9bc:	b	da2c <mpc_pow@@Base+0xef4>
    d9c0:	ldur	w8, [x29, #-68]
    d9c4:	tbz	w8, #31, dee4 <mpc_pow@@Base+0x13ac>
    d9c8:	sub	x0, x29, #0x38
    d9cc:	sub	x1, x29, #0x48
    d9d0:	bl	4d00 <__gmpz_set@plt>
    d9d4:	ldur	w9, [x29, #-52]
    d9d8:	neg	w8, w9
    d9dc:	stur	w8, [x29, #-52]
    d9e0:	tbz	w9, #31, da20 <mpc_pow@@Base+0xee8>
    d9e4:	ldur	x0, [x29, #-48]
    d9e8:	mov	w1, w8
    d9ec:	bl	5420 <__gmpn_perfect_square_p@plt>
    d9f0:	cbz	w0, da2c <mpc_pow@@Base+0xef4>
    d9f4:	sub	x0, x29, #0x38
    d9f8:	sub	x1, x29, #0x38
    d9fc:	bl	4af0 <__gmpz_sqrt@plt>
    da00:	sub	x0, x29, #0x28
    da04:	mov	x1, xzr
    da08:	bl	4b10 <__gmpz_set_ui@plt>
    da0c:	b	d8b0 <mpc_pow@@Base+0xd78>
    da10:	mvn	w8, w1
    da14:	lsr	w0, w8, #31
    da18:	cbnz	w0, d968 <mpc_pow@@Base+0xe30>
    da1c:	b	da2c <mpc_pow@@Base+0xef4>
    da20:	sub	w8, w9, #0x1
    da24:	lsr	w0, w8, #31
    da28:	cbnz	w0, d9f4 <mpc_pow@@Base+0xebc>
    da2c:	mov	w28, #0xffffffff            	// #-1
    da30:	sub	x0, x29, #0x18
    da34:	bl	5180 <__gmpz_clear@plt>
    da38:	sub	x0, x29, #0x28
    da3c:	bl	5180 <__gmpz_clear@plt>
    da40:	sub	x0, x29, #0x38
    da44:	bl	5180 <__gmpz_clear@plt>
    da48:	sub	x0, x29, #0x48
    da4c:	bl	5180 <__gmpz_clear@plt>
    da50:	sub	x0, x29, #0x58
    da54:	bl	5180 <__gmpz_clear@plt>
    da58:	sub	x0, x29, #0x68
    da5c:	bl	5180 <__gmpz_clear@plt>
    da60:	ldr	x8, [sp, #112]
    da64:	ldr	w20, [sp, #108]
    da68:	cmp	x8, x25
    da6c:	b.ne	da98 <mpc_pow@@Base+0xf60>  // b.any
    da70:	tbnz	w28, #31, da98 <mpc_pow@@Base+0xf60>
    da74:	ldr	w8, [sp, #92]
    da78:	ldr	x0, [sp, #72]
    da7c:	cmp	w20, #0x0
    da80:	lsr	w1, w8, #31
    da84:	ldr	w8, [sp, #88]
    da88:	lsr	w2, w8, #31
    da8c:	sub	x8, x29, #0x88
    da90:	csel	x3, x22, x8, eq  // eq = none
    da94:	bl	df14 <mpc_pow@@Base+0x13dc>
    da98:	cbz	w20, daa4 <mpc_pow@@Base+0xf6c>
    da9c:	sub	x0, x29, #0x88
    daa0:	bl	4d60 <mpfr_clear@plt>
    daa4:	cmn	w28, #0x2
    daa8:	b.cc	dd68 <mpc_pow@@Base+0x1230>  // b.lo, b.ul, b.last
    daac:	ldr	x8, [sp, #168]
    dab0:	cmp	x19, x8
    dab4:	ldp	x9, x8, [sp, #152]
    dab8:	csel	x8, x9, x8, gt
    dabc:	add	x8, x27, x8
    dac0:	add	x27, x8, #0x40
    dac4:	b	d168 <mpc_pow@@Base+0x630>
    dac8:	ldr	x22, [sp, #72]
    dacc:	add	x1, sp, #0xb8
    dad0:	mov	w2, wzr
    dad4:	mov	x0, x22
    dad8:	bl	5580 <mpc_set@plt>
    dadc:	and	w8, w20, #0x3
    dae0:	tst	w20, #0x3
    dae4:	ldr	x10, [x22, #16]
    dae8:	asr	w9, w20, #2
    daec:	cset	w11, ne  // ne = any
    daf0:	cmp	w8, #0x2
    daf4:	csinv	w21, w11, wzr, ne  // ne = any
    daf8:	cmp	w9, #0x0
    dafc:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
    db00:	cset	w8, ne  // ne = any
    db04:	cmp	w9, #0x2
    db08:	csinv	w20, w8, wzr, ne  // ne = any
    db0c:	cmp	x10, x19
    db10:	b.ne	db24 <mpc_pow@@Base+0xfec>  // b.any
    db14:	ldr	w1, [sp, #28]
    db18:	mov	x0, x22
    db1c:	bl	4dd0 <mpc_fix_inf@plt>
    db20:	mov	w21, w0
    db24:	ldr	x8, [x22, #48]
    db28:	ldr	w1, [sp, #44]
    db2c:	ldr	x0, [sp, #32]
    db30:	cmp	x8, x19
    db34:	b.ne	db40 <mpc_pow@@Base+0x1008>  // b.any
    db38:	bl	4dd0 <mpc_fix_inf@plt>
    db3c:	mov	w20, w0
    db40:	cmp	w21, #0x0
    db44:	mov	w8, #0x2                   	// #2
    db48:	cset	w9, ne  // ne = any
    db4c:	csel	w8, w8, w9, lt  // lt = tstop
    db50:	cmp	w20, #0x0
    db54:	cset	w9, ne  // ne = any
    db58:	lsl	w9, w9, #2
    db5c:	mov	w10, #0x8                   	// #8
    db60:	csel	w9, w10, w9, lt  // lt = tstop
    db64:	orr	w28, w9, w8
    db68:	b	dd68 <mpc_pow@@Base+0x1230>
    db6c:	ldr	w8, [x24, #40]
    db70:	ldr	w19, [x24, #8]
    db74:	sub	x0, x29, #0x88
    db78:	lsr	w20, w8, #31
    db7c:	bl	4aa0 <mpfr_init@plt>
    db80:	sub	x0, x29, #0x88
    db84:	mov	x1, x24
    db88:	mov	w2, wzr
    db8c:	bl	4ea0 <mpc_norm@plt>
    db90:	mov	w21, w0
    db94:	sub	x0, x29, #0x88
    db98:	mov	w1, #0x1                   	// #1
    db9c:	mov	x2, xzr
    dba0:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    dba4:	cmp	w0, #0x0
    dba8:	ccmp	w21, #0x0, #0x4, eq  // eq = none
    dbac:	csneg	w8, w0, w21, eq  // eq = none
    dbb0:	tbnz	w8, #31, dc44 <mpc_pow@@Base+0x110c>
    dbb4:	ldr	x27, [sp, #72]
    dbb8:	ldr	x21, [sp, #120]
    dbbc:	ldp	x9, x10, [sp, #8]
    dbc0:	cbz	w8, dc78 <mpc_pow@@Base+0x1140>
    dbc4:	ldr	w8, [x22, #40]
    dbc8:	lsr	w23, w8, #31
    dbcc:	b	dc88 <mpc_pow@@Base+0x1150>
    dbd0:	cbz	w26, dc60 <mpc_pow@@Base+0x1128>
    dbd4:	ldr	w3, [sp, #224]
    dbd8:	ldr	x0, [sp, #32]
    dbdc:	ldr	x1, [sp, #128]
    dbe0:	ldr	w2, [sp, #44]
    dbe4:	bl	51d0 <mpfr_set4@plt>
    dbe8:	ldr	x9, [sp, #120]
    dbec:	mov	w20, w0
    dbf0:	ldr	x0, [sp, #72]
    dbf4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    dbf8:	cmp	x9, x8
    dbfc:	b.ne	dd94 <mpc_pow@@Base+0x125c>  // b.any
    dc00:	ldr	x9, [sp, #16]
    dc04:	cmp	x9, x8
    dc08:	b.ne	dd94 <mpc_pow@@Base+0x125c>  // b.any
    dc0c:	ldr	w8, [x24, #8]
    dc10:	mov	w9, #0x1                   	// #1
    dc14:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    dc18:	mov	w2, wzr
    dc1c:	lsr	w1, w8, #31
    dc20:	mov	x3, x22
    dc24:	str	w9, [x0, #8]
    dc28:	str	x10, [x0, #16]
    dc2c:	bl	df14 <mpc_pow@@Base+0x13dc>
    dc30:	cmp	w20, #0x0
    dc34:	b	dda4 <mpc_pow@@Base+0x126c>
    dc38:	str	wzr, [sp, #140]
    dc3c:	str	xzr, [sp, #144]
    dc40:	b	d098 <mpc_pow@@Base+0x560>
    dc44:	ldr	w8, [x22, #40]
    dc48:	ldr	x27, [sp, #72]
    dc4c:	ldr	x21, [sp, #120]
    dc50:	ldp	x9, x10, [sp, #8]
    dc54:	tbnz	w8, #31, dc84 <mpc_pow@@Base+0x114c>
    dc58:	mov	w23, #0x1                   	// #1
    dc5c:	b	dc88 <mpc_pow@@Base+0x1150>
    dc60:	ldr	x0, [sp, #72]
    dc64:	ldr	w2, [sp, #4]
    dc68:	add	x1, sp, #0xb8
    dc6c:	bl	5580 <mpc_set@plt>
    dc70:	mov	w28, w0
    dc74:	b	dd68 <mpc_pow@@Base+0x1230>
    dc78:	ldr	w8, [x22, #8]
    dc7c:	cmp	w20, w8, lsr #31
    dc80:	b.ne	dc58 <mpc_pow@@Base+0x1120>  // b.any
    dc84:	mov	w23, wzr
    dc88:	ldr	x1, [x22]
    dc8c:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
    dc90:	cmp	x10, x24
    dc94:	cset	w25, eq  // eq = none
    dc98:	cmp	x9, x24
    dc9c:	sub	x0, x29, #0x88
    dca0:	cset	w26, eq  // eq = none
    dca4:	bl	4c80 <mpfr_set_prec@plt>
    dca8:	ldr	w3, [x22, #8]
    dcac:	sub	x0, x29, #0x88
    dcb0:	mov	x1, x22
    dcb4:	mov	w2, wzr
    dcb8:	bl	51d0 <mpfr_set4@plt>
    dcbc:	ldr	w3, [sp, #192]
    dcc0:	ldr	w2, [sp, #28]
    dcc4:	add	x1, sp, #0xb8
    dcc8:	mov	x0, x27
    dccc:	bl	51d0 <mpfr_set4@plt>
    dcd0:	cmp	x21, x24
    dcd4:	mov	w21, w0
    dcd8:	b.ne	dd1c <mpc_pow@@Base+0x11e4>  // b.any
    dcdc:	orr	w8, w26, w25
    dce0:	cbz	w8, dd1c <mpc_pow@@Base+0x11e4>
    dce4:	lsr	w1, w19, #31
    dce8:	mov	w8, #0x1                   	// #1
    dcec:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    dcf0:	sub	x3, x29, #0x88
    dcf4:	mov	x0, x27
    dcf8:	mov	w2, w20
    dcfc:	str	w8, [x27, #40]
    dd00:	str	x9, [x27, #48]
    dd04:	bl	df14 <mpc_pow@@Base+0x13dc>
    dd08:	cmp	w21, #0x0
    dd0c:	cset	w8, ne  // ne = any
    dd10:	mov	w9, #0x2                   	// #2
    dd14:	csel	w28, w9, w8, lt  // lt = tstop
    dd18:	b	dd60 <mpc_pow@@Base+0x1228>
    dd1c:	cmp	w21, #0x0
    dd20:	mov	w8, #0x2                   	// #2
    dd24:	cset	w10, ne  // ne = any
    dd28:	csel	w28, w8, w10, lt  // lt = tstop
    dd2c:	ldr	w8, [sp, #44]
    dd30:	mov	w9, #0x1                   	// #1
    dd34:	str	w9, [x27, #40]
    dd38:	eor	w9, w23, #0x1
    dd3c:	cmp	w8, #0x3
    dd40:	cset	w8, ne  // ne = any
    dd44:	and	w8, w8, w9
    dd48:	str	x24, [x27, #48]
    dd4c:	tbnz	w8, #0, dd60 <mpc_pow@@Base+0x1228>
    dd50:	mov	x0, x27
    dd54:	mov	x1, x27
    dd58:	mov	w2, wzr
    dd5c:	bl	4f60 <mpc_conj@plt>
    dd60:	sub	x0, x29, #0x88
    dd64:	bl	4d60 <mpfr_clear@plt>
    dd68:	sub	x0, x29, #0xc8
    dd6c:	bl	4a10 <mpc_clear@plt>
    dd70:	add	x0, sp, #0xb8
    dd74:	bl	4a10 <mpc_clear@plt>
    dd78:	ldr	w8, [sp, #52]
    dd7c:	cbz	w8, dd84 <mpc_pow@@Base+0x124c>
    dd80:	bl	4990 <mpfr_set_underflow@plt>
    dd84:	ldr	w8, [sp, #48]
    dd88:	cbz	w8, cdd8 <mpc_pow@@Base+0x2a0>
    dd8c:	bl	5490 <mpfr_set_overflow@plt>
    dd90:	b	cdd8 <mpc_pow@@Base+0x2a0>
    dd94:	mov	w9, #0x1                   	// #1
    dd98:	cmp	w20, #0x0
    dd9c:	str	x8, [x0, #16]
    dda0:	str	w9, [x0, #8]
    dda4:	cset	w8, ne  // ne = any
    dda8:	lsl	w8, w8, #2
    ddac:	mov	w9, #0x8                   	// #8
    ddb0:	csel	w28, w9, w8, lt  // lt = tstop
    ddb4:	b	dd68 <mpc_pow@@Base+0x1230>
    ddb8:	adrp	x10, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    ddbc:	ldr	x10, [x10, #4056]
    ddc0:	sub	x9, x9, #0x1
    ddc4:	neg	x12, x8
    ddc8:	ldrsw	x11, [x10]
    ddcc:	ldr	x10, [x22, #24]
    ddd0:	sdiv	x9, x9, x11
    ddd4:	add	x9, x9, #0x1
    ddd8:	madd	x9, x9, x11, x12
    dddc:	sdiv	x9, x9, x11
    dde0:	ldr	x12, [x10, x9, lsl #3]
    dde4:	sdiv	x13, x8, x11
    dde8:	msub	x8, x13, x11, x8
    ddec:	cbz	x8, de10 <mpc_pow@@Base+0x12d8>
    ddf0:	sub	x8, x8, #0x1
    ddf4:	sub	w11, w11, #0x1
    ddf8:	mov	w13, #0x1                   	// #1
    ddfc:	lsl	x8, x12, x8
    de00:	lsl	x11, x13, x11
    de04:	cmp	x8, x11
    de08:	b.ne	d08c <mpc_pow@@Base+0x554>  // b.any
    de0c:	b	de14 <mpc_pow@@Base+0x12dc>
    de10:	tbz	w12, #0, d088 <mpc_pow@@Base+0x550>
    de14:	sub	x8, x10, #0x8
    de18:	subs	x10, x9, #0x1
    de1c:	b.lt	de30 <mpc_pow@@Base+0x12f8>  // b.tstop
    de20:	ldr	x11, [x8, x9, lsl #3]
    de24:	mov	x9, x10
    de28:	cbz	x11, de18 <mpc_pow@@Base+0x12e0>
    de2c:	b	d088 <mpc_pow@@Base+0x550>
    de30:	mov	w13, wzr
    de34:	b	d08c <mpc_pow@@Base+0x554>
    de38:	tbz	w11, #0, cfc0 <mpc_pow@@Base+0x488>
    de3c:	ldr	x12, [sp, #120]
    de40:	sub	x9, x9, #0x8
    de44:	subs	x10, x8, #0x1
    de48:	b.lt	de5c <mpc_pow@@Base+0x1324>  // b.tstop
    de4c:	ldr	x11, [x9, x8, lsl #3]
    de50:	mov	x8, x10
    de54:	cbz	x11, de44 <mpc_pow@@Base+0x130c>
    de58:	b	cfc0 <mpc_pow@@Base+0x488>
    de5c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    de60:	cmp	x12, x8
    de64:	b.eq	de7c <mpc_pow@@Base+0x1344>  // b.none
    de68:	mov	x1, #0xffffffffffffffff    	// #-1
    de6c:	mov	x0, x24
    de70:	mov	x2, xzr
    de74:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    de78:	cbnz	w0, cfc0 <mpc_pow@@Base+0x488>
    de7c:	mov	w8, #0x1                   	// #1
    de80:	b	d094 <mpc_pow@@Base+0x55c>
    de84:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    de88:	ldr	x8, [x8, #4008]
    de8c:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    de90:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    de94:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    de98:	ldr	x0, [x8]
    de9c:	add	x1, x1, #0x990
    dea0:	add	x2, x2, #0xb89
    dea4:	add	x4, x4, #0xb8f
    dea8:	mov	w3, #0x2d6                 	// #726
    deac:	bl	55a0 <fprintf@plt>
    deb0:	bl	5000 <abort@plt>
    deb4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    deb8:	ldr	x8, [x8, #4008]
    debc:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    dec0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    dec4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    dec8:	ldr	x0, [x8]
    decc:	add	x1, x1, #0x990
    ded0:	add	x2, x2, #0xb89
    ded4:	add	x4, x4, #0xbb8
    ded8:	mov	w3, #0x2d8                 	// #728
    dedc:	bl	55a0 <fprintf@plt>
    dee0:	bl	5000 <abort@plt>
    dee4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    dee8:	ldr	x8, [x8, #4008]
    deec:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    def0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    def4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    def8:	ldr	x0, [x8]
    defc:	add	x1, x1, #0x990
    df00:	add	x2, x2, #0xb89
    df04:	add	x4, x4, #0xbe1
    df08:	mov	w3, #0x3c                  	// #60
    df0c:	bl	55a0 <fprintf@plt>
    df10:	bl	5000 <abort@plt>
    df14:	sub	sp, sp, #0x40
    df18:	stp	x20, x19, [sp, #48]
    df1c:	mov	x19, x0
    df20:	mov	x0, sp
    df24:	stp	x29, x30, [sp, #16]
    df28:	stp	x22, x21, [sp, #32]
    df2c:	add	x29, sp, #0x10
    df30:	mov	x22, x3
    df34:	mov	w21, w2
    df38:	mov	w20, w1
    df3c:	bl	54a0 <__gmpz_init@plt>
    df40:	mov	x0, sp
    df44:	mov	x1, x22
    df48:	bl	5470 <mpfr_get_z_2exp@plt>
    df4c:	mov	x22, x0
    df50:	mov	x0, sp
    df54:	mov	x1, xzr
    df58:	bl	49f0 <__gmpz_scan1@plt>
    df5c:	mov	x2, x0
    df60:	add	x22, x0, x22
    df64:	mov	x0, sp
    df68:	mov	x1, sp
    df6c:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    df70:	cmp	x22, #0x1
    df74:	b.le	df90 <mpc_pow@@Base+0x1458>
    df78:	mov	w8, wzr
    df7c:	ldr	x10, [x19, #16]
    df80:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    df84:	cmp	x10, x9
    df88:	b.eq	dfbc <mpc_pow@@Base+0x1484>  // b.none
    df8c:	b	e04c <mpc_pow@@Base+0x1514>
    df90:	cbz	x22, e008 <mpc_pow@@Base+0x14d0>
    df94:	cmp	x22, #0x1
    df98:	b.ne	e098 <mpc_pow@@Base+0x1560>  // b.any
    df9c:	mov	x0, sp
    dfa0:	mov	x1, xzr
    dfa4:	bl	4d30 <__gmpz_tstbit@plt>
    dfa8:	lsl	w8, w0, #1
    dfac:	ldr	x10, [x19, #16]
    dfb0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    dfb4:	cmp	x10, x9
    dfb8:	b.ne	e04c <mpc_pow@@Base+0x1514>  // b.any
    dfbc:	orr	w9, w8, #0x2
    dfc0:	cmp	w9, #0x3
    dfc4:	b.ne	e0b4 <mpc_pow@@Base+0x157c>  // b.any
    dfc8:	cmp	w8, #0x1
    dfcc:	cset	w9, eq  // eq = none
    dfd0:	cmp	w8, #0x3
    dfd4:	cset	w8, eq  // eq = none
    dfd8:	cmp	w20, #0x0
    dfdc:	cset	w10, eq  // eq = none
    dfe0:	cmp	w20, #0x1
    dfe4:	and	w10, w10, w8
    dfe8:	cset	w8, eq  // eq = none
    dfec:	tbnz	w10, #0, dff8 <mpc_pow@@Base+0x14c0>
    dff0:	and	w8, w8, w9
    dff4:	cbz	w8, e098 <mpc_pow@@Base+0x1560>
    dff8:	mov	w2, #0x1                   	// #1
    dffc:	mov	x0, x19
    e000:	mov	x1, x19
    e004:	b	e094 <mpc_pow@@Base+0x155c>
    e008:	mov	x0, sp
    e00c:	mov	w1, #0x1                   	// #1
    e010:	bl	4d30 <__gmpz_tstbit@plt>
    e014:	mov	w22, w0
    e018:	mov	x0, sp
    e01c:	mov	x1, xzr
    e020:	bl	4d30 <__gmpz_tstbit@plt>
    e024:	ldr	w8, [sp, #4]
    e028:	add	w9, w0, w22, lsl #1
    e02c:	mov	w10, #0x4                   	// #4
    e030:	sub	w10, w10, w9
    e034:	cmp	w8, #0x0
    e038:	csel	w8, w10, w9, lt  // lt = tstop
    e03c:	ldr	x10, [x19, #16]
    e040:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    e044:	cmp	x10, x9
    e048:	b.eq	dfbc <mpc_pow@@Base+0x1484>  // b.none
    e04c:	ldr	x10, [x19, #48]
    e050:	cmp	x10, x9
    e054:	b.ne	e098 <mpc_pow@@Base+0x1560>  // b.any
    e058:	tst	w8, #0xfffffffd
    e05c:	b.ne	e0e4 <mpc_pow@@Base+0x15ac>  // b.any
    e060:	cmp	w8, #0x2
    e064:	cset	w9, ne  // ne = any
    e068:	cmp	w8, #0x0
    e06c:	cset	w8, eq  // eq = none
    e070:	cmp	w21, w20
    e074:	cset	w10, eq  // eq = none
    e078:	and	w8, w10, w8
    e07c:	orr	w9, w10, w9
    e080:	cmp	w8, w9
    e084:	b.ne	e098 <mpc_pow@@Base+0x1560>  // b.any
    e088:	add	x0, x19, #0x20
    e08c:	mov	w2, #0x1                   	// #1
    e090:	mov	x1, x0
    e094:	bl	4b80 <mpfr_neg@plt>
    e098:	mov	x0, sp
    e09c:	bl	5180 <__gmpz_clear@plt>
    e0a0:	ldp	x20, x19, [sp, #48]
    e0a4:	ldp	x22, x21, [sp, #32]
    e0a8:	ldp	x29, x30, [sp, #16]
    e0ac:	add	sp, sp, #0x40
    e0b0:	ret
    e0b4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    e0b8:	ldr	x8, [x8, #4008]
    e0bc:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e0c0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e0c4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e0c8:	ldr	x0, [x8]
    e0cc:	add	x1, x1, #0x990
    e0d0:	add	x2, x2, #0xb89
    e0d4:	add	x4, x4, #0xbf7
    e0d8:	mov	w3, #0x89                  	// #137
    e0dc:	bl	55a0 <fprintf@plt>
    e0e0:	bl	5000 <abort@plt>
    e0e4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    e0e8:	ldr	x8, [x8, #4008]
    e0ec:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e0f0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e0f4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e0f8:	ldr	x0, [x8]
    e0fc:	add	x1, x1, #0x990
    e100:	add	x2, x2, #0xb89
    e104:	add	x4, x4, #0xc10
    e108:	mov	w3, #0x93                  	// #147
    e10c:	bl	55a0 <fprintf@plt>
    e110:	bl	5000 <abort@plt>

000000000000e114 <mpc_pow_fr@@Base>:
    e114:	sub	sp, sp, #0x80
    e118:	stp	x29, x30, [sp, #64]
    e11c:	str	x23, [sp, #80]
    e120:	stp	x22, x21, [sp, #96]
    e124:	stp	x20, x19, [sp, #112]
    e128:	ldp	q1, q0, [x2]
    e12c:	mov	x8, sp
    e130:	add	x22, x8, #0x20
    e134:	mov	x20, x1
    e138:	mov	x21, x0
    e13c:	mov	w1, #0x1                   	// #1
    e140:	mov	x0, x22
    e144:	add	x29, sp, #0x40
    e148:	mov	w19, w3
    e14c:	stp	q1, q0, [sp]
    e150:	mov	w23, #0x1                   	// #1
    e154:	bl	5440 <mpfr_init2@plt>
    e158:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    e15c:	mov	x2, sp
    e160:	mov	x0, x21
    e164:	mov	x1, x20
    e168:	mov	w3, w19
    e16c:	str	w23, [sp, #40]
    e170:	str	x8, [sp, #48]
    e174:	bl	5240 <mpc_pow@plt>
    e178:	mov	w19, w0
    e17c:	mov	x0, x22
    e180:	bl	4d60 <mpfr_clear@plt>
    e184:	mov	w0, w19
    e188:	ldp	x20, x19, [sp, #112]
    e18c:	ldp	x22, x21, [sp, #96]
    e190:	ldr	x23, [sp, #80]
    e194:	ldp	x29, x30, [sp, #64]
    e198:	add	sp, sp, #0x80
    e19c:	ret

000000000000e1a0 <mpc_pow_ld@@Base>:
    e1a0:	sub	sp, sp, #0x80
    e1a4:	str	x21, [sp, #96]
    e1a8:	stp	x20, x19, [sp, #112]
    e1ac:	mov	w19, w2
    e1b0:	mov	x20, x1
    e1b4:	mov	x21, x0
    e1b8:	add	x0, sp, #0x10
    e1bc:	mov	w1, #0x71                  	// #113
    e1c0:	mov	w2, #0x1                   	// #1
    e1c4:	stp	x29, x30, [sp, #80]
    e1c8:	add	x29, sp, #0x50
    e1cc:	str	q0, [sp]
    e1d0:	bl	53c0 <mpc_init3@plt>
    e1d4:	ldr	q0, [sp]
    e1d8:	add	x0, sp, #0x10
    e1dc:	mov	w1, wzr
    e1e0:	bl	4e50 <mpc_set_ld@plt>
    e1e4:	add	x2, sp, #0x10
    e1e8:	mov	x0, x21
    e1ec:	mov	x1, x20
    e1f0:	mov	w3, w19
    e1f4:	bl	5240 <mpc_pow@plt>
    e1f8:	mov	w19, w0
    e1fc:	add	x0, sp, #0x10
    e200:	bl	4a10 <mpc_clear@plt>
    e204:	mov	w0, w19
    e208:	ldp	x20, x19, [sp, #112]
    e20c:	ldr	x21, [sp, #96]
    e210:	ldp	x29, x30, [sp, #80]
    e214:	add	sp, sp, #0x80
    e218:	ret

000000000000e21c <mpc_pow_d@@Base>:
    e21c:	sub	sp, sp, #0x70
    e220:	str	x21, [sp, #88]
    e224:	stp	x20, x19, [sp, #96]
    e228:	mov	w19, w2
    e22c:	mov	x20, x1
    e230:	mov	x21, x0
    e234:	mov	x0, sp
    e238:	mov	w1, #0x35                  	// #53
    e23c:	mov	w2, #0x1                   	// #1
    e240:	str	d8, [sp, #64]
    e244:	stp	x29, x30, [sp, #72]
    e248:	add	x29, sp, #0x40
    e24c:	mov	v8.16b, v0.16b
    e250:	bl	53c0 <mpc_init3@plt>
    e254:	mov	x0, sp
    e258:	mov	v0.16b, v8.16b
    e25c:	mov	w1, wzr
    e260:	bl	5460 <mpc_set_d@plt>
    e264:	mov	x2, sp
    e268:	mov	x0, x21
    e26c:	mov	x1, x20
    e270:	mov	w3, w19
    e274:	bl	5240 <mpc_pow@plt>
    e278:	mov	w19, w0
    e27c:	mov	x0, sp
    e280:	bl	4a10 <mpc_clear@plt>
    e284:	mov	w0, w19
    e288:	ldp	x20, x19, [sp, #96]
    e28c:	ldr	x21, [sp, #88]
    e290:	ldp	x29, x30, [sp, #72]
    e294:	ldr	d8, [sp, #64]
    e298:	add	sp, sp, #0x70
    e29c:	ret

000000000000e2a0 <mpc_pow_si@@Base>:
    e2a0:	mov	w4, w3
    e2a4:	tbnz	x2, #63, e2b0 <mpc_pow_si@@Base+0x10>
    e2a8:	mov	w3, #0x1                   	// #1
    e2ac:	b	4df0 <mpc_pow_usi@plt>
    e2b0:	neg	x2, x2
    e2b4:	mov	w3, #0xffffffff            	// #-1
    e2b8:	b	4df0 <mpc_pow_usi@plt>

000000000000e2bc <mpc_pow_usi@@Base>:
    e2bc:	sub	sp, sp, #0x170
    e2c0:	stp	x20, x19, [sp, #352]
    e2c4:	mov	x20, x0
    e2c8:	mov	x0, x1
    e2cc:	stp	x29, x30, [sp, #272]
    e2d0:	stp	x28, x27, [sp, #288]
    e2d4:	stp	x26, x25, [sp, #304]
    e2d8:	stp	x24, x23, [sp, #320]
    e2dc:	stp	x22, x21, [sp, #336]
    e2e0:	add	x29, sp, #0x110
    e2e4:	mov	w19, w4
    e2e8:	mov	w23, w3
    e2ec:	mov	x22, x2
    e2f0:	mov	x21, x1
    e2f4:	bl	54d0 <mpfr_number_p@plt>
    e2f8:	cbz	w0, e318 <mpc_pow_usi@@Base+0x5c>
    e2fc:	add	x0, x21, #0x20
    e300:	bl	54d0 <mpfr_number_p@plt>
    e304:	cbz	w0, e318 <mpc_pow_usi@@Base+0x5c>
    e308:	ldr	x24, [x21, #16]
    e30c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    e310:	cmp	x24, x8
    e314:	b.ne	e398 <mpc_pow_usi@@Base+0xdc>  // b.any
    e318:	sub	x0, x29, #0x48
    e31c:	mov	w1, #0x40                  	// #64
    e320:	mov	w2, #0x1                   	// #1
    e324:	bl	53c0 <mpc_init3@plt>
    e328:	cmp	w23, #0x1
    e32c:	b.lt	e344 <mpc_pow_usi@@Base+0x88>  // b.tstop
    e330:	sub	x0, x29, #0x48
    e334:	mov	x1, x22
    e338:	mov	w2, wzr
    e33c:	bl	4ce0 <mpc_set_ui@plt>
    e340:	b	e354 <mpc_pow_usi@@Base+0x98>
    e344:	neg	x1, x22
    e348:	sub	x0, x29, #0x48
    e34c:	mov	w2, wzr
    e350:	bl	5020 <mpc_set_si@plt>
    e354:	sub	x2, x29, #0x48
    e358:	mov	x0, x20
    e35c:	mov	x1, x21
    e360:	mov	w3, w19
    e364:	bl	5240 <mpc_pow@plt>
    e368:	mov	w19, w0
    e36c:	sub	x0, x29, #0x48
    e370:	bl	4a10 <mpc_clear@plt>
    e374:	mov	w0, w19
    e378:	ldp	x20, x19, [sp, #352]
    e37c:	ldp	x22, x21, [sp, #336]
    e380:	ldp	x24, x23, [sp, #320]
    e384:	ldp	x26, x25, [sp, #304]
    e388:	ldp	x28, x27, [sp, #288]
    e38c:	ldp	x29, x30, [sp, #272]
    e390:	add	sp, sp, #0x170
    e394:	ret
    e398:	cbz	x22, e318 <mpc_pow_usi@@Base+0x5c>
    e39c:	ldr	x25, [x21, #48]
    e3a0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    e3a4:	cmp	x25, x8
    e3a8:	b.eq	e318 <mpc_pow_usi@@Base+0x5c>  // b.none
    e3ac:	cmp	x22, #0x1
    e3b0:	b.ne	e3d4 <mpc_pow_usi@@Base+0x118>  // b.any
    e3b4:	cmp	w23, #0x1
    e3b8:	b.lt	e69c <mpc_pow_usi@@Base+0x3e0>  // b.tstop
    e3bc:	mov	x0, x20
    e3c0:	mov	x1, x21
    e3c4:	mov	w2, w19
    e3c8:	bl	5580 <mpc_set@plt>
    e3cc:	mov	w19, w0
    e3d0:	b	e374 <mpc_pow_usi@@Base+0xb8>
    e3d4:	cmp	x22, #0x2
    e3d8:	b.ne	e3fc <mpc_pow_usi@@Base+0x140>  // b.any
    e3dc:	cmp	w23, #0x1
    e3e0:	b.lt	e3fc <mpc_pow_usi@@Base+0x140>  // b.tstop
    e3e4:	mov	x0, x20
    e3e8:	mov	x1, x21
    e3ec:	mov	w2, w19
    e3f0:	bl	4f30 <mpc_sqr@plt>
    e3f4:	mov	w19, w0
    e3f8:	b	e374 <mpc_pow_usi@@Base+0xb8>
    e3fc:	cmp	x24, x25
    e400:	csel	x26, x24, x25, gt
    e404:	bl	5200 <mpfr_get_emax@plt>
    e408:	sdiv	x8, x0, x22
    e40c:	cmp	x26, x8
    e410:	b.gt	e318 <mpc_pow_usi@@Base+0x5c>
    e414:	cmp	x25, x24
    e418:	csel	x24, x24, x25, gt
    e41c:	bl	5060 <mpfr_get_emin@plt>
    e420:	sdiv	x8, x0, x22
    e424:	cmp	x8, x24
    e428:	b.gt	e318 <mpc_pow_usi@@Base+0x5c>
    e42c:	cmp	x22, #0x4
    e430:	and	x27, x22, x22, lsr #1
    e434:	mov	x28, xzr
    e438:	b.cc	e450 <mpc_pow_usi@@Base+0x194>  // b.lo, b.ul, b.last
    e43c:	mov	x8, x22
    e440:	cmp	x8, #0x7
    e444:	lsr	x8, x8, #1
    e448:	add	x28, x28, #0x1
    e44c:	b.hi	e440 <mpc_pow_usi@@Base+0x184>  // b.pmore
    e450:	ldr	x8, [x20]
    e454:	ldr	x9, [x20, #32]
    e458:	add	x0, sp, #0x88
    e45c:	add	x26, sp, #0x88
    e460:	cmp	x8, x9
    e464:	csel	x8, x8, x9, gt
    e468:	add	x8, x28, x8
    e46c:	add	x25, x8, #0x22
    e470:	mov	x1, x25
    e474:	bl	4cf0 <mpc_init2@plt>
    e478:	cbz	x27, e488 <mpc_pow_usi@@Base+0x1cc>
    e47c:	add	x0, sp, #0x48
    e480:	mov	x1, x25
    e484:	bl	4cf0 <mpc_init2@plt>
    e488:	add	x8, x26, #0x20
    e48c:	str	x8, [sp, #32]
    e490:	mov	x8, #0xfffffffffffffffb    	// #-5
    e494:	add	x9, x28, #0x5
    e498:	tst	w19, #0xf
    e49c:	str	x9, [sp, #24]
    e4a0:	neg	x9, x22
    e4a4:	sub	x8, x8, x28
    e4a8:	str	x9, [sp, #8]
    e4ac:	mov	w9, #0x1                   	// #1
    e4b0:	stp	x8, x27, [sp, #56]
    e4b4:	cset	w8, eq  // eq = none
    e4b8:	str	x8, [sp, #48]
    e4bc:	cmp	w19, #0x10
    e4c0:	lsl	x8, x9, x28
    e4c4:	mov	w24, wzr
    e4c8:	cset	w9, cc  // cc = lo, ul, last
    e4cc:	and	x8, x8, x22
    e4d0:	str	x9, [sp, #16]
    e4d4:	str	x8, [sp, #40]
    e4d8:	add	x0, sp, #0x88
    e4dc:	mov	x1, x21
    e4e0:	mov	w2, wzr
    e4e4:	bl	4f30 <mpc_sqr@plt>
    e4e8:	cbz	x27, e518 <mpc_pow_usi@@Base+0x25c>
    e4ec:	add	x0, sp, #0x48
    e4f0:	add	x1, sp, #0x88
    e4f4:	mov	x2, x21
    e4f8:	mov	w3, wzr
    e4fc:	bl	4ed0 <mpc_mul@plt>
    e500:	ldr	x8, [sp, #40]
    e504:	cbz	x8, e518 <mpc_pow_usi@@Base+0x25c>
    e508:	add	x0, sp, #0x88
    e50c:	add	x1, sp, #0x48
    e510:	mov	w2, wzr
    e514:	bl	5580 <mpc_set@plt>
    e518:	cmp	x28, #0x1
    e51c:	b.lt	e5a0 <mpc_pow_usi@@Base+0x2e4>  // b.tstop
    e520:	mov	x27, x28
    e524:	b	e548 <mpc_pow_usi@@Base+0x28c>
    e528:	add	x0, sp, #0x88
    e52c:	add	x1, sp, #0x88
    e530:	mov	x2, x21
    e534:	mov	w3, wzr
    e538:	bl	4ed0 <mpc_mul@plt>
    e53c:	cmp	x26, #0x0
    e540:	mov	x27, x26
    e544:	b.le	e5a0 <mpc_pow_usi@@Base+0x2e4>
    e548:	add	x0, sp, #0x88
    e54c:	add	x1, sp, #0x88
    e550:	mov	w2, wzr
    e554:	sub	x26, x27, #0x1
    e558:	bl	4f30 <mpc_sqr@plt>
    e55c:	lsr	x8, x22, x26
    e560:	tbz	w8, #0, e53c <mpc_pow_usi@@Base+0x280>
    e564:	subs	x27, x27, #0x2
    e568:	b.lt	e528 <mpc_pow_usi@@Base+0x26c>  // b.tstop
    e56c:	lsr	x8, x22, x27
    e570:	tbz	w8, #0, e528 <mpc_pow_usi@@Base+0x26c>
    e574:	add	x0, sp, #0x88
    e578:	add	x1, sp, #0x88
    e57c:	mov	w2, wzr
    e580:	bl	4f30 <mpc_sqr@plt>
    e584:	add	x0, sp, #0x88
    e588:	add	x1, sp, #0x88
    e58c:	add	x2, sp, #0x48
    e590:	mov	w3, wzr
    e594:	bl	4ed0 <mpc_mul@plt>
    e598:	mov	x26, x27
    e59c:	b	e53c <mpc_pow_usi@@Base+0x280>
    e5a0:	tbz	w23, #31, e5b8 <mpc_pow_usi@@Base+0x2fc>
    e5a4:	add	x0, sp, #0x88
    e5a8:	add	x2, sp, #0x88
    e5ac:	mov	w1, #0x1                   	// #1
    e5b0:	mov	w3, wzr
    e5b4:	bl	55b0 <mpc_ui_div@plt>
    e5b8:	ldr	x8, [sp, #152]
    e5bc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    e5c0:	cmp	x8, x10
    e5c4:	b.eq	e6b8 <mpc_pow_usi@@Base+0x3fc>  // b.none
    e5c8:	ldr	x9, [sp, #184]
    e5cc:	cmp	x9, x10
    e5d0:	b.eq	e6b8 <mpc_pow_usi@@Base+0x3fc>  // b.none
    e5d4:	ldr	x10, [sp, #56]
    e5d8:	sub	x26, x8, x9
    e5dc:	and	x9, x26, x26, asr #63
    e5e0:	ldr	x8, [x20]
    e5e4:	add	x10, x10, x25
    e5e8:	add	x1, x10, x9
    e5ec:	ldr	x9, [sp, #48]
    e5f0:	add	x0, sp, #0x88
    e5f4:	mov	w3, #0x1                   	// #1
    e5f8:	mov	w2, wzr
    e5fc:	add	x4, x8, x9
    e600:	bl	5450 <mpfr_can_round@plt>
    e604:	cbz	w0, e638 <mpc_pow_usi@@Base+0x37c>
    e608:	ldp	x10, x0, [sp, #24]
    e60c:	cmp	x26, #0x0
    e610:	csel	x9, xzr, x26, lt  // lt = tstop
    e614:	ldr	x8, [x20, #32]
    e618:	add	x9, x10, x9
    e61c:	sub	x1, x25, x9
    e620:	ldr	x9, [sp, #16]
    e624:	mov	w3, #0x1                   	// #1
    e628:	mov	w2, wzr
    e62c:	add	x4, x8, x9
    e630:	bl	5450 <mpfr_can_round@plt>
    e634:	cbnz	w0, e728 <mpc_pow_usi@@Base+0x46c>
    e638:	cbnz	w24, e6b8 <mpc_pow_usi@@Base+0x3fc>
    e63c:	ldr	x8, [x20]
    e640:	ldr	x9, [x20, #32]
    e644:	cmp	x26, #0x0
    e648:	cneg	x10, x26, mi  // mi = first
    e64c:	cmp	x8, x9
    e650:	csel	x8, x8, x9, gt
    e654:	cmp	x10, x8
    e658:	b.ge	e6b8 <mpc_pow_usi@@Base+0x3fc>  // b.tcont
    e65c:	ldr	x8, [x21]
    e660:	ldr	x9, [x21, #32]
    e664:	add	x0, sp, #0x88
    e668:	cmp	x8, x9
    e66c:	csel	x8, x8, x9, gt
    e670:	add	x25, x8, x25
    e674:	mov	x1, x25
    e678:	bl	4c00 <mpc_set_prec@plt>
    e67c:	ldr	x27, [sp, #64]
    e680:	mov	w24, #0x1                   	// #1
    e684:	cbz	x27, e4d8 <mpc_pow_usi@@Base+0x21c>
    e688:	add	x0, sp, #0x48
    e68c:	mov	x1, x25
    e690:	bl	4c00 <mpc_set_prec@plt>
    e694:	mov	w24, #0x1                   	// #1
    e698:	b	e4d8 <mpc_pow_usi@@Base+0x21c>
    e69c:	mov	w1, #0x1                   	// #1
    e6a0:	mov	x0, x20
    e6a4:	mov	x2, x21
    e6a8:	mov	w3, w19
    e6ac:	bl	55b0 <mpc_ui_div@plt>
    e6b0:	mov	w19, w0
    e6b4:	b	e374 <mpc_pow_usi@@Base+0xb8>
    e6b8:	sub	x0, x29, #0x48
    e6bc:	mov	w1, #0x40                  	// #64
    e6c0:	mov	w2, #0x1                   	// #1
    e6c4:	bl	53c0 <mpc_init3@plt>
    e6c8:	sub	x0, x29, #0x48
    e6cc:	cmp	w23, #0x1
    e6d0:	b.lt	e6e4 <mpc_pow_usi@@Base+0x428>  // b.tstop
    e6d4:	mov	x1, x22
    e6d8:	mov	w2, wzr
    e6dc:	bl	4ce0 <mpc_set_ui@plt>
    e6e0:	b	e6f0 <mpc_pow_usi@@Base+0x434>
    e6e4:	ldr	x1, [sp, #8]
    e6e8:	mov	w2, wzr
    e6ec:	bl	5020 <mpc_set_si@plt>
    e6f0:	ldr	x22, [sp, #64]
    e6f4:	sub	x2, x29, #0x48
    e6f8:	mov	x0, x20
    e6fc:	mov	x1, x21
    e700:	mov	w3, w19
    e704:	bl	5240 <mpc_pow@plt>
    e708:	mov	w19, w0
    e70c:	sub	x0, x29, #0x48
    e710:	bl	4a10 <mpc_clear@plt>
    e714:	add	x0, sp, #0x88
    e718:	bl	4a10 <mpc_clear@plt>
    e71c:	cbz	x22, e374 <mpc_pow_usi@@Base+0xb8>
    e720:	add	x0, sp, #0x48
    e724:	b	e370 <mpc_pow_usi@@Base+0xb4>
    e728:	add	x1, sp, #0x88
    e72c:	mov	x0, x20
    e730:	mov	w2, w19
    e734:	bl	5580 <mpc_set@plt>
    e738:	ldr	x22, [sp, #64]
    e73c:	mov	w19, w0
    e740:	add	x0, sp, #0x88
    e744:	bl	4a10 <mpc_clear@plt>
    e748:	cbnz	x22, e720 <mpc_pow_usi@@Base+0x464>
    e74c:	b	e374 <mpc_pow_usi@@Base+0xb8>

000000000000e750 <mpc_pow_ui@@Base>:
    e750:	mov	w4, w3
    e754:	mov	w3, #0x1                   	// #1
    e758:	b	4df0 <mpc_pow_usi@plt>

000000000000e75c <mpc_pow_z@@Base>:
    e75c:	sub	sp, sp, #0x80
    e760:	stp	x22, x21, [sp, #96]
    e764:	stp	x20, x19, [sp, #112]
    e768:	mov	x20, x1
    e76c:	mov	x21, x0
    e770:	mov	w1, #0x2                   	// #2
    e774:	mov	x0, x2
    e778:	stp	x29, x30, [sp, #64]
    e77c:	str	x23, [sp, #80]
    e780:	add	x29, sp, #0x40
    e784:	mov	w19, w3
    e788:	mov	x22, x2
    e78c:	bl	54b0 <__gmpz_sizeinbase@plt>
    e790:	ldr	w8, [x22, #4]
    e794:	mov	x23, x0
    e798:	tbnz	w8, #31, e7bc <mpc_pow_z@@Base+0x60>
    e79c:	cmp	w8, #0x1
    e7a0:	b.hi	e7f0 <mpc_pow_z@@Base+0x94>  // b.pmore
    e7a4:	ldr	x9, [x22, #8]
    e7a8:	cmp	w8, #0x0
    e7ac:	mov	w3, #0x1                   	// #1
    e7b0:	ldr	x9, [x9]
    e7b4:	csel	x2, xzr, x9, eq  // eq = none
    e7b8:	b	e7d8 <mpc_pow_z@@Base+0x7c>
    e7bc:	mov	x0, x22
    e7c0:	bl	4c60 <__gmpz_fits_slong_p@plt>
    e7c4:	cbz	w0, e7f0 <mpc_pow_z@@Base+0x94>
    e7c8:	mov	x0, x22
    e7cc:	bl	49a0 <__gmpz_get_si@plt>
    e7d0:	neg	x2, x0
    e7d4:	mov	w3, #0xffffffff            	// #-1
    e7d8:	mov	x0, x21
    e7dc:	mov	x1, x20
    e7e0:	mov	w4, w19
    e7e4:	bl	4df0 <mpc_pow_usi@plt>
    e7e8:	mov	w19, w0
    e7ec:	b	e834 <mpc_pow_z@@Base+0xd8>
    e7f0:	cmp	x23, #0x1
    e7f4:	csinc	x1, x23, xzr, gt
    e7f8:	mov	x0, sp
    e7fc:	mov	w2, #0x1                   	// #1
    e800:	bl	53c0 <mpc_init3@plt>
    e804:	mov	x0, sp
    e808:	mov	x1, x22
    e80c:	mov	w2, wzr
    e810:	bl	50a0 <mpc_set_z@plt>
    e814:	mov	x2, sp
    e818:	mov	x0, x21
    e81c:	mov	x1, x20
    e820:	mov	w3, w19
    e824:	bl	5240 <mpc_pow@plt>
    e828:	mov	w19, w0
    e82c:	mov	x0, sp
    e830:	bl	4a10 <mpc_clear@plt>
    e834:	mov	w0, w19
    e838:	ldp	x20, x19, [sp, #112]
    e83c:	ldp	x22, x21, [sp, #96]
    e840:	ldr	x23, [sp, #80]
    e844:	ldp	x29, x30, [sp, #64]
    e848:	add	sp, sp, #0x80
    e84c:	ret

000000000000e850 <mpc_proj@@Base>:
    e850:	stp	x29, x30, [sp, #-48]!
    e854:	stp	x20, x19, [sp, #32]
    e858:	ldr	x9, [x1, #16]
    e85c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    e860:	mov	x19, x1
    e864:	mov	x20, x0
    e868:	cmp	x9, x8
    e86c:	str	x21, [sp, #16]
    e870:	mov	x29, sp
    e874:	b.eq	e884 <mpc_proj@@Base+0x34>  // b.none
    e878:	ldr	x9, [x19, #48]
    e87c:	cmp	x9, x8
    e880:	b.ne	e8bc <mpc_proj@@Base+0x6c>  // b.any
    e884:	mov	w1, #0x1                   	// #1
    e888:	mov	x0, x20
    e88c:	mov	w21, #0x1                   	// #1
    e890:	bl	5120 <mpfr_set_inf@plt>
    e894:	ldr	w8, [x19, #40]
    e898:	add	x0, x20, #0x20
    e89c:	cmp	w8, #0x0
    e8a0:	cneg	w1, w21, lt  // lt = tstop
    e8a4:	bl	4d10 <mpfr_set_zero@plt>
    e8a8:	ldp	x20, x19, [sp, #32]
    e8ac:	ldr	x21, [sp, #16]
    e8b0:	mov	w0, wzr
    e8b4:	ldp	x29, x30, [sp], #48
    e8b8:	ret
    e8bc:	mov	x0, x20
    e8c0:	mov	x1, x19
    e8c4:	ldp	x20, x19, [sp, #32]
    e8c8:	ldr	x21, [sp, #16]
    e8cc:	ldp	x29, x30, [sp], #48
    e8d0:	b	5580 <mpc_set@plt>

000000000000e8d4 <mpc_real@@Base>:
    e8d4:	ldr	w3, [x1, #8]
    e8d8:	b	51d0 <mpfr_set4@plt>

000000000000e8dc <mpc_rootofunity@@Base>:
    e8dc:	sub	sp, sp, #0xd0
    e8e0:	stp	x20, x19, [sp, #192]
    e8e4:	mov	x19, x0
    e8e8:	stp	x29, x30, [sp, #128]
    e8ec:	stp	x26, x25, [sp, #144]
    e8f0:	stp	x24, x23, [sp, #160]
    e8f4:	stp	x22, x21, [sp, #176]
    e8f8:	add	x29, sp, #0x80
    e8fc:	cbz	x1, e960 <mpc_rootofunity@@Base+0x84>
    e900:	udiv	x8, x2, x1
    e904:	msub	x8, x8, x1, x2
    e908:	mov	w20, w3
    e90c:	mov	x10, x1
    e910:	mov	x9, x8
    e914:	mov	x11, x9
    e918:	mov	x9, x10
    e91c:	udiv	x10, x11, x10
    e920:	msub	x10, x10, x9, x11
    e924:	cbnz	x10, e914 <mpc_rootofunity@@Base+0x38>
    e928:	udiv	x24, x1, x9
    e92c:	cmp	x24, #0x4
    e930:	udiv	x21, x8, x9
    e934:	b.eq	e990 <mpc_rootofunity@@Base+0xb4>  // b.none
    e938:	cmp	x24, #0x2
    e93c:	b.eq	e978 <mpc_rootofunity@@Base+0x9c>  // b.none
    e940:	cmp	x24, #0x1
    e944:	b.ne	e9bc <mpc_rootofunity@@Base+0xe0>  // b.any
    e948:	cmp	x9, x8
    e94c:	b.ls	ee4c <mpc_rootofunity@@Base+0x570>  // b.plast
    e950:	mov	w1, #0x1                   	// #1
    e954:	mov	x0, x19
    e958:	mov	x2, xzr
    e95c:	b	e9b0 <mpc_rootofunity@@Base+0xd4>
    e960:	mov	x0, x19
    e964:	bl	4a40 <mpfr_set_nan@plt>
    e968:	add	x0, x19, #0x20
    e96c:	bl	4a40 <mpfr_set_nan@plt>
    e970:	mov	w0, wzr
    e974:	b	ee30 <mpc_rootofunity@@Base+0x554>
    e978:	cmp	x21, #0x1
    e97c:	b.ne	ee7c <mpc_rootofunity@@Base+0x5a0>  // b.any
    e980:	mov	x1, #0xffffffffffffffff    	// #-1
    e984:	mov	x0, x19
    e988:	mov	x2, xzr
    e98c:	b	eaac <mpc_rootofunity@@Base+0x1d0>
    e990:	orr	x8, x21, #0x2
    e994:	cmp	x8, #0x3
    e998:	b.ne	eeac <mpc_rootofunity@@Base+0x5d0>  // b.any
    e99c:	cmp	x21, #0x1
    e9a0:	b.ne	eaa0 <mpc_rootofunity@@Base+0x1c4>  // b.any
    e9a4:	mov	w2, #0x1                   	// #1
    e9a8:	mov	x0, x19
    e9ac:	mov	x1, xzr
    e9b0:	mov	w3, w20
    e9b4:	bl	5040 <mpc_set_ui_ui@plt>
    e9b8:	b	ee30 <mpc_rootofunity@@Base+0x554>
    e9bc:	sub	x8, x24, #0x3
    e9c0:	cmp	x8, #0x9
    e9c4:	b.hi	ec8c <mpc_rootofunity@@Base+0x3b0>  // b.pmore
    e9c8:	adrp	x9, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    e9cc:	add	x9, x9, #0xc29
    e9d0:	adr	x10, e9e0 <mpc_rootofunity@@Base+0x104>
    e9d4:	ldrb	w11, [x9, x8]
    e9d8:	add	x10, x10, x11, lsl #2
    e9dc:	br	x10
    e9e0:	cmp	x24, #0x3
    e9e4:	b.ne	e9f4 <mpc_rootofunity@@Base+0x118>  // b.any
    e9e8:	sub	x8, x21, #0x1
    e9ec:	cmp	x8, #0x2
    e9f0:	b.cc	ea08 <mpc_rootofunity@@Base+0x12c>  // b.lo, b.ul, b.last
    e9f4:	cmp	x24, #0x6
    e9f8:	b.ne	eedc <mpc_rootofunity@@Base+0x600>  // b.any
    e9fc:	orr	x8, x21, #0x4
    ea00:	cmp	x8, #0x5
    ea04:	b.ne	eedc <mpc_rootofunity@@Base+0x600>  // b.any
    ea08:	cmp	x24, #0x3
    ea0c:	mov	x8, #0xffffffffffffffff    	// #-1
    ea10:	cneg	x1, x8, ne  // ne = any
    ea14:	and	w3, w20, #0xf
    ea18:	mov	x0, x19
    ea1c:	mov	x2, xzr
    ea20:	bl	49e0 <mpfr_set_si_2exp@plt>
    ea24:	asr	w8, w20, #4
    ea28:	mov	w24, #0x2                   	// #2
    ea2c:	cmp	w8, #0x3
    ea30:	mov	w9, #0x3                   	// #3
    ea34:	csel	w10, w24, w8, eq  // eq = none
    ea38:	cmp	w8, #0x2
    ea3c:	csel	w9, w9, w10, eq  // eq = none
    ea40:	cmp	x21, #0x1
    ea44:	add	x23, x19, #0x20
    ea48:	mov	w22, w0
    ea4c:	csel	w2, w9, w8, ne  // ne = any
    ea50:	mov	w1, #0x3                   	// #3
    ea54:	mov	x0, x23
    ea58:	bl	5280 <mpfr_sqrt_ui@plt>
    ea5c:	mov	w20, w0
    ea60:	mov	w2, #0x1                   	// #1
    ea64:	mov	x0, x19
    ea68:	mov	x1, x19
    ea6c:	mov	w3, wzr
    ea70:	bl	5530 <mpc_div_2ui@plt>
    ea74:	cmp	x21, #0x1
    ea78:	b.eq	ea90 <mpc_rootofunity@@Base+0x1b4>  // b.none
    ea7c:	mov	x0, x23
    ea80:	mov	x1, x23
    ea84:	mov	w2, wzr
    ea88:	bl	4b80 <mpfr_neg@plt>
    ea8c:	neg	w20, w20
    ea90:	cmp	w22, #0x0
    ea94:	cset	w8, ne  // ne = any
    ea98:	csel	w8, w24, w8, lt  // lt = tstop
    ea9c:	b	ee18 <mpc_rootofunity@@Base+0x53c>
    eaa0:	mov	x2, #0xffffffffffffffff    	// #-1
    eaa4:	mov	x0, x19
    eaa8:	mov	x1, xzr
    eaac:	mov	w3, w20
    eab0:	bl	52c0 <mpc_set_si_si@plt>
    eab4:	b	ee30 <mpc_rootofunity@@Base+0x554>
    eab8:	sub	x8, x21, #0x1
    eabc:	ror	x8, x8, #1
    eac0:	cmp	x8, #0x5
    eac4:	b.hi	ef0c <mpc_rootofunity@@Base+0x630>  // b.pmore
    eac8:	mov	w9, #0x1                   	// #1
    eacc:	lsl	x8, x9, x8
    ead0:	mov	w9, #0x2d                  	// #45
    ead4:	tst	x8, x9
    ead8:	b.eq	ef0c <mpc_rootofunity@@Base+0x630>  // b.none
    eadc:	and	w8, w20, #0xf
    eae0:	mov	w23, #0x2                   	// #2
    eae4:	cmp	w8, #0x3
    eae8:	orr	x24, x21, #0x2
    eaec:	mov	w9, #0x3                   	// #3
    eaf0:	csel	w10, w23, w8, eq  // eq = none
    eaf4:	cmp	w8, #0x2
    eaf8:	csel	w9, w9, w10, eq  // eq = none
    eafc:	cmp	x24, #0x7
    eb00:	csel	w2, w9, w8, eq  // eq = none
    eb04:	mov	w1, #0x3                   	// #3
    eb08:	mov	x0, x19
    eb0c:	bl	5280 <mpfr_sqrt_ui@plt>
    eb10:	cmp	x21, #0x6
    eb14:	mov	w8, #0x1                   	// #1
    eb18:	mov	w22, w0
    eb1c:	add	x0, x19, #0x20
    eb20:	cneg	x1, x8, cs  // cs = hs, nlast
    eb24:	asr	w3, w20, #4
    eb28:	mov	x2, xzr
    eb2c:	bl	49e0 <mpfr_set_si_2exp@plt>
    eb30:	mov	w20, w0
    eb34:	mov	w2, #0x1                   	// #1
    eb38:	mov	x0, x19
    eb3c:	mov	x1, x19
    eb40:	mov	w3, wzr
    eb44:	bl	5530 <mpc_div_2ui@plt>
    eb48:	cmp	x24, #0x7
    eb4c:	b.ne	eb64 <mpc_rootofunity@@Base+0x288>  // b.any
    eb50:	mov	x0, x19
    eb54:	mov	x1, x19
    eb58:	mov	w2, wzr
    eb5c:	bl	4b80 <mpfr_neg@plt>
    eb60:	neg	w22, w22
    eb64:	cmp	w22, #0x0
    eb68:	cset	w8, ne  // ne = any
    eb6c:	csel	w8, w23, w8, lt  // lt = tstop
    eb70:	cmp	w20, #0x0
    eb74:	cset	w9, ne  // ne = any
    eb78:	lsl	w9, w9, #2
    eb7c:	mov	w10, #0x8                   	// #8
    eb80:	csel	w9, w10, w9, lt  // lt = tstop
    eb84:	orr	w0, w8, w9
    eb88:	b	ee30 <mpc_rootofunity@@Base+0x554>
    eb8c:	cmp	x21, #0x7
    eb90:	b.hi	ef3c <mpc_rootofunity@@Base+0x660>  // b.pmore
    eb94:	mov	w8, #0x1                   	// #1
    eb98:	lsl	x8, x8, x21
    eb9c:	mov	w9, #0xaa                  	// #170
    eba0:	tst	x8, x9
    eba4:	b.eq	ef3c <mpc_rootofunity@@Base+0x660>  // b.none
    eba8:	cmp	x21, #0x5
    ebac:	and	w2, w20, #0xf
    ebb0:	b.eq	ebbc <mpc_rootofunity@@Base+0x2e0>  // b.none
    ebb4:	cmp	x21, #0x3
    ebb8:	b.ne	ebd4 <mpc_rootofunity@@Base+0x2f8>  // b.any
    ebbc:	cmp	w2, #0x3
    ebc0:	mov	w8, #0x2                   	// #2
    ebc4:	csel	w8, w8, w2, eq  // eq = none
    ebc8:	cmp	w2, #0x2
    ebcc:	mov	w9, #0x3                   	// #3
    ebd0:	csel	w2, w9, w8, eq  // eq = none
    ebd4:	asr	w8, w20, #4
    ebd8:	mov	w9, #0x2                   	// #2
    ebdc:	cmp	w8, #0x3
    ebe0:	mov	w10, #0x3                   	// #3
    ebe4:	csel	w9, w9, w8, eq  // eq = none
    ebe8:	cmp	w8, #0x2
    ebec:	csel	w9, w10, w9, eq  // eq = none
    ebf0:	cmp	x21, #0x4
    ebf4:	mov	w1, #0x2                   	// #2
    ebf8:	mov	x0, x19
    ebfc:	csel	w22, w9, w8, hi  // hi = pmore
    ec00:	bl	5280 <mpfr_sqrt_ui@plt>
    ec04:	add	x23, x19, #0x20
    ec08:	mov	w20, w0
    ec0c:	mov	w1, #0x2                   	// #2
    ec10:	mov	x0, x23
    ec14:	mov	w2, w22
    ec18:	bl	5280 <mpfr_sqrt_ui@plt>
    ec1c:	mov	w22, w0
    ec20:	mov	w2, #0x1                   	// #1
    ec24:	mov	x0, x19
    ec28:	mov	x1, x19
    ec2c:	mov	w3, wzr
    ec30:	bl	5530 <mpc_div_2ui@plt>
    ec34:	cmp	x21, #0x5
    ec38:	b.eq	ec44 <mpc_rootofunity@@Base+0x368>  // b.none
    ec3c:	cmp	x21, #0x3
    ec40:	b.ne	ec58 <mpc_rootofunity@@Base+0x37c>  // b.any
    ec44:	mov	x0, x19
    ec48:	mov	x1, x19
    ec4c:	mov	w2, wzr
    ec50:	bl	4b80 <mpfr_neg@plt>
    ec54:	neg	w20, w20
    ec58:	cmp	x21, #0x5
    ec5c:	b.cc	ec74 <mpc_rootofunity@@Base+0x398>  // b.lo, b.ul, b.last
    ec60:	mov	x0, x23
    ec64:	mov	x1, x23
    ec68:	mov	w2, wzr
    ec6c:	bl	4b80 <mpfr_neg@plt>
    ec70:	neg	w22, w22
    ec74:	cmp	w20, #0x0
    ec78:	mov	w8, #0x2                   	// #2
    ec7c:	cset	w9, ne  // ne = any
    ec80:	csel	w8, w8, w9, lt  // lt = tstop
    ec84:	cmp	w22, #0x0
    ec88:	b	ee1c <mpc_rootofunity@@Base+0x540>
    ec8c:	mov	x22, x19
    ec90:	ldr	x8, [x19]
    ec94:	ldr	x9, [x22, #32]!
    ec98:	add	x0, sp, #0x40
    ec9c:	mov	w1, #0x43                  	// #67
    eca0:	cmp	x8, x9
    eca4:	csel	x23, x8, x9, gt
    eca8:	bl	5440 <mpfr_init2@plt>
    ecac:	add	x0, sp, #0x20
    ecb0:	mov	w1, #0x43                  	// #67
    ecb4:	bl	5440 <mpfr_init2@plt>
    ecb8:	mov	x0, sp
    ecbc:	mov	w1, #0x43                  	// #67
    ecc0:	bl	5440 <mpfr_init2@plt>
    ecc4:	sub	x0, x29, #0x20
    ecc8:	bl	52b0 <__gmpq_init@plt>
    eccc:	sub	x0, x29, #0x20
    ecd0:	mov	x1, x21
    ecd4:	mov	x2, x24
    ecd8:	bl	5100 <__gmpq_set_ui@plt>
    ecdc:	sub	x0, x29, #0x20
    ece0:	sub	x1, x29, #0x20
    ece4:	mov	w2, #0x1                   	// #1
    ece8:	bl	5570 <__gmpq_mul_2exp@plt>
    ecec:	and	w21, w20, #0xf
    ecf0:	tst	w20, #0xf
    ecf4:	asr	w20, w20, #4
    ecf8:	cset	w24, eq  // eq = none
    ecfc:	cmp	w20, #0x0
    ed00:	cset	w25, eq  // eq = none
    ed04:	mov	x0, x23
    ed08:	bl	4d20 <mpc_ceil_log2@plt>
    ed0c:	add	x26, x23, x0
    ed10:	add	x23, x26, #0x5
    ed14:	add	x0, sp, #0x40
    ed18:	mov	x1, x23
    ed1c:	bl	4c80 <mpfr_set_prec@plt>
    ed20:	add	x0, sp, #0x20
    ed24:	mov	x1, x23
    ed28:	bl	4c80 <mpfr_set_prec@plt>
    ed2c:	mov	x0, sp
    ed30:	mov	x1, x23
    ed34:	bl	4c80 <mpfr_set_prec@plt>
    ed38:	add	x0, sp, #0x40
    ed3c:	mov	w1, wzr
    ed40:	bl	4a80 <mpfr_const_pi@plt>
    ed44:	add	x0, sp, #0x40
    ed48:	add	x1, sp, #0x40
    ed4c:	sub	x2, x29, #0x20
    ed50:	mov	w3, wzr
    ed54:	bl	49d0 <mpfr_mul_q@plt>
    ed58:	add	x0, sp, #0x20
    ed5c:	mov	x1, sp
    ed60:	add	x2, sp, #0x40
    ed64:	mov	w3, wzr
    ed68:	bl	5520 <mpfr_sin_cos@plt>
    ed6c:	ldr	x8, [sp, #16]
    ed70:	ldr	x9, [x19]
    ed74:	add	x26, x26, #0x1
    ed78:	mov	x0, sp
    ed7c:	add	x1, x26, x8
    ed80:	add	x4, x9, x24
    ed84:	mov	w3, #0x1                   	// #1
    ed88:	mov	w2, wzr
    ed8c:	bl	5450 <mpfr_can_round@plt>
    ed90:	cbz	w0, ed04 <mpc_rootofunity@@Base+0x428>
    ed94:	ldr	x8, [sp, #48]
    ed98:	ldr	x9, [x22]
    ed9c:	add	x0, sp, #0x20
    eda0:	mov	w3, #0x1                   	// #1
    eda4:	add	x1, x26, x8
    eda8:	add	x4, x9, x25
    edac:	mov	w2, wzr
    edb0:	bl	5450 <mpfr_can_round@plt>
    edb4:	cbz	w0, ed04 <mpc_rootofunity@@Base+0x428>
    edb8:	ldr	w3, [sp, #8]
    edbc:	mov	x1, sp
    edc0:	mov	x0, x19
    edc4:	mov	w2, w21
    edc8:	bl	51d0 <mpfr_set4@plt>
    edcc:	ldr	w3, [sp, #40]
    edd0:	mov	w19, w0
    edd4:	add	x1, sp, #0x20
    edd8:	mov	x0, x22
    eddc:	mov	w2, w20
    ede0:	bl	51d0 <mpfr_set4@plt>
    ede4:	mov	w20, w0
    ede8:	add	x0, sp, #0x40
    edec:	bl	4d60 <mpfr_clear@plt>
    edf0:	add	x0, sp, #0x20
    edf4:	bl	4d60 <mpfr_clear@plt>
    edf8:	mov	x0, sp
    edfc:	bl	4d60 <mpfr_clear@plt>
    ee00:	sub	x0, x29, #0x20
    ee04:	bl	4fb0 <__gmpq_clear@plt>
    ee08:	cmp	w19, #0x0
    ee0c:	mov	w8, #0x2                   	// #2
    ee10:	cset	w9, ne  // ne = any
    ee14:	csel	w8, w8, w9, lt  // lt = tstop
    ee18:	cmp	w20, #0x0
    ee1c:	cset	w9, ne  // ne = any
    ee20:	lsl	w9, w9, #2
    ee24:	mov	w10, #0x8                   	// #8
    ee28:	csel	w9, w10, w9, lt  // lt = tstop
    ee2c:	orr	w0, w9, w8
    ee30:	ldp	x20, x19, [sp, #192]
    ee34:	ldp	x22, x21, [sp, #176]
    ee38:	ldp	x24, x23, [sp, #160]
    ee3c:	ldp	x26, x25, [sp, #144]
    ee40:	ldp	x29, x30, [sp, #128]
    ee44:	add	sp, sp, #0xd0
    ee48:	ret
    ee4c:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    ee50:	ldr	x8, [x8, #4008]
    ee54:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ee58:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ee5c:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ee60:	ldr	x0, [x8]
    ee64:	add	x1, x1, #0x990
    ee68:	add	x2, x2, #0xc33
    ee6c:	add	x4, x4, #0xc41
    ee70:	mov	w3, #0x40                  	// #64
    ee74:	bl	55a0 <fprintf@plt>
    ee78:	bl	5000 <abort@plt>
    ee7c:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    ee80:	ldr	x8, [x8, #4008]
    ee84:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ee88:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ee8c:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ee90:	ldr	x0, [x8]
    ee94:	add	x1, x1, #0x990
    ee98:	add	x2, x2, #0xc33
    ee9c:	add	x4, x4, #0xc48
    eea0:	mov	w3, #0x46                  	// #70
    eea4:	bl	55a0 <fprintf@plt>
    eea8:	bl	5000 <abort@plt>
    eeac:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    eeb0:	ldr	x8, [x8, #4008]
    eeb4:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    eeb8:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    eebc:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    eec0:	ldr	x0, [x8]
    eec4:	add	x1, x1, #0x990
    eec8:	add	x2, x2, #0xc33
    eecc:	add	x4, x4, #0xc4f
    eed0:	mov	w3, #0x4d                  	// #77
    eed4:	bl	55a0 <fprintf@plt>
    eed8:	bl	5000 <abort@plt>
    eedc:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    eee0:	ldr	x8, [x8, #4008]
    eee4:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    eee8:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    eeec:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    eef0:	ldr	x0, [x8]
    eef4:	add	x1, x1, #0x990
    eef8:	add	x2, x2, #0xc33
    eefc:	add	x4, x4, #0xc60
    ef00:	mov	w3, #0x56                  	// #86
    ef04:	bl	55a0 <fprintf@plt>
    ef08:	bl	5000 <abort@plt>
    ef0c:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    ef10:	ldr	x8, [x8, #4008]
    ef14:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ef18:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ef1c:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ef20:	ldr	x0, [x8]
    ef24:	add	x1, x1, #0x990
    ef28:	add	x2, x2, #0xc33
    ef2c:	add	x4, x4, #0xca1
    ef30:	mov	w3, #0x6f                  	// #111
    ef34:	bl	55a0 <fprintf@plt>
    ef38:	bl	5000 <abort@plt>
    ef3c:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    ef40:	ldr	x8, [x8, #4008]
    ef44:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ef48:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ef4c:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    ef50:	ldr	x0, [x8]
    ef54:	add	x1, x1, #0x990
    ef58:	add	x2, x2, #0xc33
    ef5c:	add	x4, x4, #0xcc7
    ef60:	mov	w3, #0x86                  	// #134
    ef64:	bl	55a0 <fprintf@plt>
    ef68:	bl	5000 <abort@plt>

000000000000ef6c <mpc_urandom@@Base>:
    ef6c:	stp	x29, x30, [sp, #-48]!
    ef70:	str	x21, [sp, #16]
    ef74:	stp	x20, x19, [sp, #32]
    ef78:	mov	x29, sp
    ef7c:	mov	x19, x1
    ef80:	mov	x20, x0
    ef84:	bl	5500 <mpfr_urandomb@plt>
    ef88:	mov	w21, w0
    ef8c:	add	x0, x20, #0x20
    ef90:	mov	x1, x19
    ef94:	bl	5500 <mpfr_urandomb@plt>
    ef98:	cmp	w21, #0x0
    ef9c:	ldp	x20, x19, [sp, #32]
    efa0:	ldr	x21, [sp, #16]
    efa4:	cset	w8, ne  // ne = any
    efa8:	cmp	w0, #0x0
    efac:	cset	w9, ne  // ne = any
    efb0:	and	w0, w8, w9
    efb4:	ldp	x29, x30, [sp], #48
    efb8:	ret

000000000000efbc <mpc_set@@Base>:
    efbc:	stp	x29, x30, [sp, #-48]!
    efc0:	stp	x22, x21, [sp, #16]
    efc4:	stp	x20, x19, [sp, #32]
    efc8:	ldr	w3, [x1, #8]
    efcc:	mov	w19, w2
    efd0:	and	w2, w2, #0xf
    efd4:	mov	x29, sp
    efd8:	mov	x20, x1
    efdc:	mov	x21, x0
    efe0:	bl	51d0 <mpfr_set4@plt>
    efe4:	ldr	w3, [x20, #40]
    efe8:	mov	w22, w0
    efec:	add	x0, x21, #0x20
    eff0:	add	x1, x20, #0x20
    eff4:	asr	w2, w19, #4
    eff8:	bl	51d0 <mpfr_set4@plt>
    effc:	cmp	w22, #0x0
    f000:	mov	w8, #0x2                   	// #2
    f004:	cset	w9, ne  // ne = any
    f008:	csel	w8, w8, w9, lt  // lt = tstop
    f00c:	cmp	w0, #0x0
    f010:	cset	w9, ne  // ne = any
    f014:	ldp	x20, x19, [sp, #32]
    f018:	ldp	x22, x21, [sp, #16]
    f01c:	lsl	w9, w9, #2
    f020:	mov	w10, #0x8                   	// #8
    f024:	csel	w9, w10, w9, lt  // lt = tstop
    f028:	orr	w0, w9, w8
    f02c:	ldp	x29, x30, [sp], #48
    f030:	ret

000000000000f034 <mpc_set_prec@@Base>:
    f034:	stp	x29, x30, [sp, #-32]!
    f038:	stp	x20, x19, [sp, #16]
    f03c:	mov	x29, sp
    f040:	mov	x19, x1
    f044:	mov	x20, x0
    f048:	bl	4c80 <mpfr_set_prec@plt>
    f04c:	add	x0, x20, #0x20
    f050:	mov	x1, x19
    f054:	ldp	x20, x19, [sp, #16]
    f058:	ldp	x29, x30, [sp], #32
    f05c:	b	4c80 <mpfr_set_prec@plt>

000000000000f060 <mpc_set_str@@Base>:
    f060:	sub	sp, sp, #0x30
    f064:	mov	w4, w3
    f068:	mov	w3, w2
    f06c:	add	x2, sp, #0x8
    f070:	stp	x29, x30, [sp, #16]
    f074:	stp	x20, x19, [sp, #32]
    f078:	add	x29, sp, #0x10
    f07c:	mov	x19, x0
    f080:	bl	4f00 <mpc_strtoc@plt>
    f084:	cmn	w0, #0x1
    f088:	b.eq	f0c4 <mpc_set_str@@Base+0x64>  // b.none
    f08c:	mov	w20, w0
    f090:	bl	5170 <__ctype_b_loc@plt>
    f094:	ldr	x9, [sp, #8]
    f098:	ldr	x10, [x0]
    f09c:	ldrb	w8, [x9]
    f0a0:	ldrh	w10, [x10, x8, lsl #1]
    f0a4:	tbz	w10, #13, f0c0 <mpc_set_str@@Base+0x60>
    f0a8:	add	x9, x9, #0x1
    f0ac:	str	x9, [sp, #8]
    f0b0:	ldr	x10, [x0]
    f0b4:	ldrb	w8, [x9], #1
    f0b8:	ldrh	w10, [x10, x8, lsl #1]
    f0bc:	tbnz	w10, #13, f0ac <mpc_set_str@@Base+0x4c>
    f0c0:	cbz	w8, f0d8 <mpc_set_str@@Base+0x78>
    f0c4:	mov	x0, x19
    f0c8:	bl	4a40 <mpfr_set_nan@plt>
    f0cc:	add	x0, x19, #0x20
    f0d0:	bl	4a40 <mpfr_set_nan@plt>
    f0d4:	mov	w20, #0xffffffff            	// #-1
    f0d8:	mov	w0, w20
    f0dc:	ldp	x20, x19, [sp, #32]
    f0e0:	ldp	x29, x30, [sp, #16]
    f0e4:	add	sp, sp, #0x30
    f0e8:	ret

000000000000f0ec <mpc_set_fr@@Base>:
    f0ec:	stp	x29, x30, [sp, #-32]!
    f0f0:	and	w2, w2, #0xf
    f0f4:	str	x19, [sp, #16]
    f0f8:	mov	x29, sp
    f0fc:	mov	x19, x0
    f100:	bl	4e80 <mpfr_set@plt>
    f104:	mov	w8, #0x1                   	// #1
    f108:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f10c:	str	w8, [x19, #40]
    f110:	str	x9, [x19, #48]
    f114:	ldr	x19, [sp, #16]
    f118:	cmp	w0, #0x0
    f11c:	cset	w8, ne  // ne = any
    f120:	mov	w10, #0x2                   	// #2
    f124:	csel	w0, w10, w8, lt  // lt = tstop
    f128:	ldp	x29, x30, [sp], #32
    f12c:	ret

000000000000f130 <mpc_set_d@@Base>:
    f130:	stp	x29, x30, [sp, #-32]!
    f134:	and	w1, w1, #0xf
    f138:	str	x19, [sp, #16]
    f13c:	mov	x29, sp
    f140:	mov	x19, x0
    f144:	bl	4c30 <mpfr_set_d@plt>
    f148:	mov	w8, #0x1                   	// #1
    f14c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f150:	str	w8, [x19, #40]
    f154:	str	x9, [x19, #48]
    f158:	ldr	x19, [sp, #16]
    f15c:	cmp	w0, #0x0
    f160:	cset	w8, ne  // ne = any
    f164:	mov	w10, #0x2                   	// #2
    f168:	csel	w0, w10, w8, lt  // lt = tstop
    f16c:	ldp	x29, x30, [sp], #32
    f170:	ret

000000000000f174 <mpc_set_ld@@Base>:
    f174:	stp	x29, x30, [sp, #-32]!
    f178:	and	w1, w1, #0xf
    f17c:	str	x19, [sp, #16]
    f180:	mov	x29, sp
    f184:	mov	x19, x0
    f188:	bl	49b0 <mpfr_set_ld@plt>
    f18c:	mov	w8, #0x1                   	// #1
    f190:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f194:	str	w8, [x19, #40]
    f198:	str	x9, [x19, #48]
    f19c:	ldr	x19, [sp, #16]
    f1a0:	cmp	w0, #0x0
    f1a4:	cset	w8, ne  // ne = any
    f1a8:	mov	w10, #0x2                   	// #2
    f1ac:	csel	w0, w10, w8, lt  // lt = tstop
    f1b0:	ldp	x29, x30, [sp], #32
    f1b4:	ret

000000000000f1b8 <mpc_set_ui@@Base>:
    f1b8:	stp	x29, x30, [sp, #-32]!
    f1bc:	and	w2, w2, #0xf
    f1c0:	str	x19, [sp, #16]
    f1c4:	mov	x29, sp
    f1c8:	mov	x19, x0
    f1cc:	bl	5510 <mpfr_set_ui@plt>
    f1d0:	mov	w8, #0x1                   	// #1
    f1d4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f1d8:	str	w8, [x19, #40]
    f1dc:	str	x9, [x19, #48]
    f1e0:	ldr	x19, [sp, #16]
    f1e4:	cmp	w0, #0x0
    f1e8:	cset	w8, ne  // ne = any
    f1ec:	mov	w10, #0x2                   	// #2
    f1f0:	csel	w0, w10, w8, lt  // lt = tstop
    f1f4:	ldp	x29, x30, [sp], #32
    f1f8:	ret

000000000000f1fc <mpc_set_si@@Base>:
    f1fc:	stp	x29, x30, [sp, #-32]!
    f200:	and	w2, w2, #0xf
    f204:	str	x19, [sp, #16]
    f208:	mov	x29, sp
    f20c:	mov	x19, x0
    f210:	bl	5270 <mpfr_set_si@plt>
    f214:	mov	w8, #0x1                   	// #1
    f218:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f21c:	str	w8, [x19, #40]
    f220:	str	x9, [x19, #48]
    f224:	ldr	x19, [sp, #16]
    f228:	cmp	w0, #0x0
    f22c:	cset	w8, ne  // ne = any
    f230:	mov	w10, #0x2                   	// #2
    f234:	csel	w0, w10, w8, lt  // lt = tstop
    f238:	ldp	x29, x30, [sp], #32
    f23c:	ret

000000000000f240 <mpc_set_z@@Base>:
    f240:	stp	x29, x30, [sp, #-32]!
    f244:	and	w2, w2, #0xf
    f248:	str	x19, [sp, #16]
    f24c:	mov	x29, sp
    f250:	mov	x19, x0
    f254:	bl	4ec0 <mpfr_set_z@plt>
    f258:	mov	w8, #0x1                   	// #1
    f25c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f260:	str	w8, [x19, #40]
    f264:	str	x9, [x19, #48]
    f268:	ldr	x19, [sp, #16]
    f26c:	cmp	w0, #0x0
    f270:	cset	w8, ne  // ne = any
    f274:	mov	w10, #0x2                   	// #2
    f278:	csel	w0, w10, w8, lt  // lt = tstop
    f27c:	ldp	x29, x30, [sp], #32
    f280:	ret

000000000000f284 <mpc_set_q@@Base>:
    f284:	stp	x29, x30, [sp, #-32]!
    f288:	and	w2, w2, #0xf
    f28c:	str	x19, [sp, #16]
    f290:	mov	x29, sp
    f294:	mov	x19, x0
    f298:	bl	5290 <mpfr_set_q@plt>
    f29c:	mov	w8, #0x1                   	// #1
    f2a0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f2a4:	str	w8, [x19, #40]
    f2a8:	str	x9, [x19, #48]
    f2ac:	ldr	x19, [sp, #16]
    f2b0:	cmp	w0, #0x0
    f2b4:	cset	w8, ne  // ne = any
    f2b8:	mov	w10, #0x2                   	// #2
    f2bc:	csel	w0, w10, w8, lt  // lt = tstop
    f2c0:	ldp	x29, x30, [sp], #32
    f2c4:	ret

000000000000f2c8 <mpc_set_f@@Base>:
    f2c8:	stp	x29, x30, [sp, #-32]!
    f2cc:	and	w2, w2, #0xf
    f2d0:	str	x19, [sp, #16]
    f2d4:	mov	x29, sp
    f2d8:	mov	x19, x0
    f2dc:	bl	4b60 <mpfr_set_f@plt>
    f2e0:	mov	w8, #0x1                   	// #1
    f2e4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f2e8:	str	w8, [x19, #40]
    f2ec:	str	x9, [x19, #48]
    f2f0:	ldr	x19, [sp, #16]
    f2f4:	cmp	w0, #0x0
    f2f8:	cset	w8, ne  // ne = any
    f2fc:	mov	w10, #0x2                   	// #2
    f300:	csel	w0, w10, w8, lt  // lt = tstop
    f304:	ldp	x29, x30, [sp], #32
    f308:	ret

000000000000f30c <mpc_set_uj@@Base>:
    f30c:	stp	x29, x30, [sp, #-32]!
    f310:	and	w2, w2, #0xf
    f314:	str	x19, [sp, #16]
    f318:	mov	x29, sp
    f31c:	mov	x19, x0
    f320:	bl	5400 <__gmpfr_set_uj@plt>
    f324:	mov	w8, #0x1                   	// #1
    f328:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f32c:	str	w8, [x19, #40]
    f330:	str	x9, [x19, #48]
    f334:	ldr	x19, [sp, #16]
    f338:	cmp	w0, #0x0
    f33c:	cset	w8, ne  // ne = any
    f340:	mov	w10, #0x2                   	// #2
    f344:	csel	w0, w10, w8, lt  // lt = tstop
    f348:	ldp	x29, x30, [sp], #32
    f34c:	ret

000000000000f350 <mpc_set_sj@@Base>:
    f350:	stp	x29, x30, [sp, #-32]!
    f354:	and	w2, w2, #0xf
    f358:	str	x19, [sp, #16]
    f35c:	mov	x29, sp
    f360:	mov	x19, x0
    f364:	bl	4d70 <__gmpfr_set_sj@plt>
    f368:	mov	w8, #0x1                   	// #1
    f36c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f370:	str	w8, [x19, #40]
    f374:	str	x9, [x19, #48]
    f378:	ldr	x19, [sp, #16]
    f37c:	cmp	w0, #0x0
    f380:	cset	w8, ne  // ne = any
    f384:	mov	w10, #0x2                   	// #2
    f388:	csel	w0, w10, w8, lt  // lt = tstop
    f38c:	ldp	x29, x30, [sp], #32
    f390:	ret

000000000000f394 <mpc_set_dc@@Base>:
    f394:	b	4f90 <mpc_set_d_d@plt>

000000000000f398 <mpc_set_ldc@@Base>:
    f398:	b	4d50 <mpc_set_ld_ld@plt>

000000000000f39c <mpc_set_nan@@Base>:
    f39c:	stp	x29, x30, [sp, #-32]!
    f3a0:	str	x19, [sp, #16]
    f3a4:	mov	x29, sp
    f3a8:	mov	x19, x0
    f3ac:	bl	4a40 <mpfr_set_nan@plt>
    f3b0:	add	x0, x19, #0x20
    f3b4:	ldr	x19, [sp, #16]
    f3b8:	ldp	x29, x30, [sp], #32
    f3bc:	b	4a40 <mpfr_set_nan@plt>

000000000000f3c0 <mpc_set_d_d@@Base>:
    f3c0:	str	d8, [sp, #-48]!
    f3c4:	stp	x20, x19, [sp, #32]
    f3c8:	mov	w19, w1
    f3cc:	and	w1, w1, #0xf
    f3d0:	stp	x29, x30, [sp, #8]
    f3d4:	str	x21, [sp, #24]
    f3d8:	mov	x29, sp
    f3dc:	mov	v8.16b, v1.16b
    f3e0:	mov	x20, x0
    f3e4:	bl	4c30 <mpfr_set_d@plt>
    f3e8:	mov	w21, w0
    f3ec:	add	x0, x20, #0x20
    f3f0:	asr	w1, w19, #4
    f3f4:	mov	v0.16b, v8.16b
    f3f8:	bl	4c30 <mpfr_set_d@plt>
    f3fc:	cmp	w21, #0x0
    f400:	mov	w8, #0x2                   	// #2
    f404:	cset	w9, ne  // ne = any
    f408:	csel	w8, w8, w9, lt  // lt = tstop
    f40c:	cmp	w0, #0x0
    f410:	cset	w9, ne  // ne = any
    f414:	ldp	x20, x19, [sp, #32]
    f418:	ldr	x21, [sp, #24]
    f41c:	ldp	x29, x30, [sp, #8]
    f420:	lsl	w9, w9, #2
    f424:	mov	w10, #0x8                   	// #8
    f428:	csel	w9, w10, w9, lt  // lt = tstop
    f42c:	orr	w0, w9, w8
    f430:	ldr	d8, [sp], #48
    f434:	ret

000000000000f438 <mpc_set_f_f@@Base>:
    f438:	stp	x29, x30, [sp, #-48]!
    f43c:	stp	x20, x19, [sp, #32]
    f440:	mov	x20, x2
    f444:	and	w2, w3, #0xf
    f448:	stp	x22, x21, [sp, #16]
    f44c:	mov	x29, sp
    f450:	mov	w19, w3
    f454:	mov	x21, x0
    f458:	bl	4b60 <mpfr_set_f@plt>
    f45c:	mov	w22, w0
    f460:	add	x0, x21, #0x20
    f464:	asr	w2, w19, #4
    f468:	mov	x1, x20
    f46c:	bl	4b60 <mpfr_set_f@plt>
    f470:	cmp	w22, #0x0
    f474:	mov	w8, #0x2                   	// #2
    f478:	cset	w9, ne  // ne = any
    f47c:	csel	w8, w8, w9, lt  // lt = tstop
    f480:	cmp	w0, #0x0
    f484:	cset	w9, ne  // ne = any
    f488:	ldp	x20, x19, [sp, #32]
    f48c:	ldp	x22, x21, [sp, #16]
    f490:	lsl	w9, w9, #2
    f494:	mov	w10, #0x8                   	// #8
    f498:	csel	w9, w10, w9, lt  // lt = tstop
    f49c:	orr	w0, w9, w8
    f4a0:	ldp	x29, x30, [sp], #48
    f4a4:	ret

000000000000f4a8 <mpc_set_fr_fr@@Base>:
    f4a8:	stp	x29, x30, [sp, #-48]!
    f4ac:	stp	x20, x19, [sp, #32]
    f4b0:	mov	x20, x2
    f4b4:	and	w2, w3, #0xf
    f4b8:	stp	x22, x21, [sp, #16]
    f4bc:	mov	x29, sp
    f4c0:	mov	w19, w3
    f4c4:	mov	x21, x0
    f4c8:	bl	4e80 <mpfr_set@plt>
    f4cc:	mov	w22, w0
    f4d0:	add	x0, x21, #0x20
    f4d4:	asr	w2, w19, #4
    f4d8:	mov	x1, x20
    f4dc:	bl	4e80 <mpfr_set@plt>
    f4e0:	cmp	w22, #0x0
    f4e4:	mov	w8, #0x2                   	// #2
    f4e8:	cset	w9, ne  // ne = any
    f4ec:	csel	w8, w8, w9, lt  // lt = tstop
    f4f0:	cmp	w0, #0x0
    f4f4:	cset	w9, ne  // ne = any
    f4f8:	ldp	x20, x19, [sp, #32]
    f4fc:	ldp	x22, x21, [sp, #16]
    f500:	lsl	w9, w9, #2
    f504:	mov	w10, #0x8                   	// #8
    f508:	csel	w9, w10, w9, lt  // lt = tstop
    f50c:	orr	w0, w9, w8
    f510:	ldp	x29, x30, [sp], #48
    f514:	ret

000000000000f518 <mpc_set_ld_ld@@Base>:
    f518:	sub	sp, sp, #0x40
    f51c:	stp	x20, x19, [sp, #48]
    f520:	mov	w19, w1
    f524:	and	w1, w1, #0xf
    f528:	stp	x29, x30, [sp, #16]
    f52c:	str	x21, [sp, #32]
    f530:	add	x29, sp, #0x10
    f534:	str	q1, [sp]
    f538:	mov	x20, x0
    f53c:	bl	49b0 <mpfr_set_ld@plt>
    f540:	ldr	q0, [sp]
    f544:	mov	w21, w0
    f548:	add	x0, x20, #0x20
    f54c:	asr	w1, w19, #4
    f550:	bl	49b0 <mpfr_set_ld@plt>
    f554:	cmp	w21, #0x0
    f558:	mov	w8, #0x2                   	// #2
    f55c:	cset	w9, ne  // ne = any
    f560:	csel	w8, w8, w9, lt  // lt = tstop
    f564:	cmp	w0, #0x0
    f568:	cset	w9, ne  // ne = any
    f56c:	ldp	x20, x19, [sp, #48]
    f570:	ldr	x21, [sp, #32]
    f574:	ldp	x29, x30, [sp, #16]
    f578:	lsl	w9, w9, #2
    f57c:	mov	w10, #0x8                   	// #8
    f580:	csel	w9, w10, w9, lt  // lt = tstop
    f584:	orr	w0, w9, w8
    f588:	add	sp, sp, #0x40
    f58c:	ret

000000000000f590 <mpc_set_q_q@@Base>:
    f590:	stp	x29, x30, [sp, #-48]!
    f594:	stp	x20, x19, [sp, #32]
    f598:	mov	x20, x2
    f59c:	and	w2, w3, #0xf
    f5a0:	stp	x22, x21, [sp, #16]
    f5a4:	mov	x29, sp
    f5a8:	mov	w19, w3
    f5ac:	mov	x21, x0
    f5b0:	bl	5290 <mpfr_set_q@plt>
    f5b4:	mov	w22, w0
    f5b8:	add	x0, x21, #0x20
    f5bc:	asr	w2, w19, #4
    f5c0:	mov	x1, x20
    f5c4:	bl	5290 <mpfr_set_q@plt>
    f5c8:	cmp	w22, #0x0
    f5cc:	mov	w8, #0x2                   	// #2
    f5d0:	cset	w9, ne  // ne = any
    f5d4:	csel	w8, w8, w9, lt  // lt = tstop
    f5d8:	cmp	w0, #0x0
    f5dc:	cset	w9, ne  // ne = any
    f5e0:	ldp	x20, x19, [sp, #32]
    f5e4:	ldp	x22, x21, [sp, #16]
    f5e8:	lsl	w9, w9, #2
    f5ec:	mov	w10, #0x8                   	// #8
    f5f0:	csel	w9, w10, w9, lt  // lt = tstop
    f5f4:	orr	w0, w9, w8
    f5f8:	ldp	x29, x30, [sp], #48
    f5fc:	ret

000000000000f600 <mpc_set_si_si@@Base>:
    f600:	stp	x29, x30, [sp, #-48]!
    f604:	stp	x20, x19, [sp, #32]
    f608:	mov	x20, x2
    f60c:	and	w2, w3, #0xf
    f610:	stp	x22, x21, [sp, #16]
    f614:	mov	x29, sp
    f618:	mov	w19, w3
    f61c:	mov	x21, x0
    f620:	bl	5270 <mpfr_set_si@plt>
    f624:	mov	w22, w0
    f628:	add	x0, x21, #0x20
    f62c:	asr	w2, w19, #4
    f630:	mov	x1, x20
    f634:	bl	5270 <mpfr_set_si@plt>
    f638:	cmp	w22, #0x0
    f63c:	mov	w8, #0x2                   	// #2
    f640:	cset	w9, ne  // ne = any
    f644:	csel	w8, w8, w9, lt  // lt = tstop
    f648:	cmp	w0, #0x0
    f64c:	cset	w9, ne  // ne = any
    f650:	ldp	x20, x19, [sp, #32]
    f654:	ldp	x22, x21, [sp, #16]
    f658:	lsl	w9, w9, #2
    f65c:	mov	w10, #0x8                   	// #8
    f660:	csel	w9, w10, w9, lt  // lt = tstop
    f664:	orr	w0, w9, w8
    f668:	ldp	x29, x30, [sp], #48
    f66c:	ret

000000000000f670 <mpc_set_ui_ui@@Base>:
    f670:	stp	x29, x30, [sp, #-48]!
    f674:	stp	x20, x19, [sp, #32]
    f678:	mov	x20, x2
    f67c:	and	w2, w3, #0xf
    f680:	stp	x22, x21, [sp, #16]
    f684:	mov	x29, sp
    f688:	mov	w19, w3
    f68c:	mov	x21, x0
    f690:	bl	5510 <mpfr_set_ui@plt>
    f694:	mov	w22, w0
    f698:	add	x0, x21, #0x20
    f69c:	asr	w2, w19, #4
    f6a0:	mov	x1, x20
    f6a4:	bl	5510 <mpfr_set_ui@plt>
    f6a8:	cmp	w22, #0x0
    f6ac:	mov	w8, #0x2                   	// #2
    f6b0:	cset	w9, ne  // ne = any
    f6b4:	csel	w8, w8, w9, lt  // lt = tstop
    f6b8:	cmp	w0, #0x0
    f6bc:	cset	w9, ne  // ne = any
    f6c0:	ldp	x20, x19, [sp, #32]
    f6c4:	ldp	x22, x21, [sp, #16]
    f6c8:	lsl	w9, w9, #2
    f6cc:	mov	w10, #0x8                   	// #8
    f6d0:	csel	w9, w10, w9, lt  // lt = tstop
    f6d4:	orr	w0, w9, w8
    f6d8:	ldp	x29, x30, [sp], #48
    f6dc:	ret

000000000000f6e0 <mpc_set_z_z@@Base>:
    f6e0:	stp	x29, x30, [sp, #-48]!
    f6e4:	stp	x20, x19, [sp, #32]
    f6e8:	mov	x20, x2
    f6ec:	and	w2, w3, #0xf
    f6f0:	stp	x22, x21, [sp, #16]
    f6f4:	mov	x29, sp
    f6f8:	mov	w19, w3
    f6fc:	mov	x21, x0
    f700:	bl	4ec0 <mpfr_set_z@plt>
    f704:	mov	w22, w0
    f708:	add	x0, x21, #0x20
    f70c:	asr	w2, w19, #4
    f710:	mov	x1, x20
    f714:	bl	4ec0 <mpfr_set_z@plt>
    f718:	cmp	w22, #0x0
    f71c:	mov	w8, #0x2                   	// #2
    f720:	cset	w9, ne  // ne = any
    f724:	csel	w8, w8, w9, lt  // lt = tstop
    f728:	cmp	w0, #0x0
    f72c:	cset	w9, ne  // ne = any
    f730:	ldp	x20, x19, [sp, #32]
    f734:	ldp	x22, x21, [sp, #16]
    f738:	lsl	w9, w9, #2
    f73c:	mov	w10, #0x8                   	// #8
    f740:	csel	w9, w10, w9, lt  // lt = tstop
    f744:	orr	w0, w9, w8
    f748:	ldp	x29, x30, [sp], #48
    f74c:	ret

000000000000f750 <mpc_set_uj_uj@@Base>:
    f750:	stp	x29, x30, [sp, #-48]!
    f754:	stp	x20, x19, [sp, #32]
    f758:	mov	x20, x2
    f75c:	and	w2, w3, #0xf
    f760:	stp	x22, x21, [sp, #16]
    f764:	mov	x29, sp
    f768:	mov	w19, w3
    f76c:	mov	x21, x0
    f770:	bl	5400 <__gmpfr_set_uj@plt>
    f774:	mov	w22, w0
    f778:	add	x0, x21, #0x20
    f77c:	asr	w2, w19, #4
    f780:	mov	x1, x20
    f784:	bl	5400 <__gmpfr_set_uj@plt>
    f788:	cmp	w22, #0x0
    f78c:	mov	w8, #0x2                   	// #2
    f790:	cset	w9, ne  // ne = any
    f794:	csel	w8, w8, w9, lt  // lt = tstop
    f798:	cmp	w0, #0x0
    f79c:	cset	w9, ne  // ne = any
    f7a0:	ldp	x20, x19, [sp, #32]
    f7a4:	ldp	x22, x21, [sp, #16]
    f7a8:	lsl	w9, w9, #2
    f7ac:	mov	w10, #0x8                   	// #8
    f7b0:	csel	w9, w10, w9, lt  // lt = tstop
    f7b4:	orr	w0, w9, w8
    f7b8:	ldp	x29, x30, [sp], #48
    f7bc:	ret

000000000000f7c0 <mpc_set_sj_sj@@Base>:
    f7c0:	stp	x29, x30, [sp, #-48]!
    f7c4:	stp	x20, x19, [sp, #32]
    f7c8:	mov	x20, x2
    f7cc:	and	w2, w3, #0xf
    f7d0:	stp	x22, x21, [sp, #16]
    f7d4:	mov	x29, sp
    f7d8:	mov	w19, w3
    f7dc:	mov	x21, x0
    f7e0:	bl	4d70 <__gmpfr_set_sj@plt>
    f7e4:	mov	w22, w0
    f7e8:	add	x0, x21, #0x20
    f7ec:	asr	w2, w19, #4
    f7f0:	mov	x1, x20
    f7f4:	bl	4d70 <__gmpfr_set_sj@plt>
    f7f8:	cmp	w22, #0x0
    f7fc:	mov	w8, #0x2                   	// #2
    f800:	cset	w9, ne  // ne = any
    f804:	csel	w8, w8, w9, lt  // lt = tstop
    f808:	cmp	w0, #0x0
    f80c:	cset	w9, ne  // ne = any
    f810:	ldp	x20, x19, [sp, #32]
    f814:	ldp	x22, x21, [sp, #16]
    f818:	lsl	w9, w9, #2
    f81c:	mov	w10, #0x8                   	// #8
    f820:	csel	w9, w10, w9, lt  // lt = tstop
    f824:	orr	w0, w9, w8
    f828:	ldp	x29, x30, [sp], #48
    f82c:	ret

000000000000f830 <mpc_sin@@Base>:
    f830:	stp	x29, x30, [sp, #-16]!
    f834:	mov	w3, w2
    f838:	mov	x2, x1
    f83c:	mov	x1, xzr
    f840:	mov	w4, wzr
    f844:	mov	x29, sp
    f848:	bl	5140 <mpc_sin_cos@plt>
    f84c:	and	w0, w0, #0xf
    f850:	ldp	x29, x30, [sp], #16
    f854:	ret

000000000000f858 <mpc_fix_inf@@Base>:
    f858:	stp	x29, x30, [sp, #-32]!
    f85c:	stp	x20, x19, [sp, #16]
    f860:	ldr	x8, [x0, #16]
    f864:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f868:	mov	x29, sp
    f86c:	cmp	x8, x9
    f870:	b.ne	f910 <mpc_fix_inf@@Base+0xb8>  // b.any
    f874:	mov	x19, x0
    f878:	ldr	w0, [x0, #8]
    f87c:	cmp	w1, #0x1
    f880:	b.ne	f898 <mpc_fix_inf@@Base+0x40>  // b.any
    f884:	add	x20, x19, #0x8
    f888:	tbnz	w0, #31, f8a8 <mpc_fix_inf@@Base+0x50>
    f88c:	mov	x0, x19
    f890:	bl	4bb0 <mpfr_nextbelow@plt>
    f894:	b	f8b0 <mpc_fix_inf@@Base+0x58>
    f898:	cmp	w1, #0x2
    f89c:	b.ne	f8f0 <mpc_fix_inf@@Base+0x98>  // b.any
    f8a0:	tbz	w0, #31, f8f0 <mpc_fix_inf@@Base+0x98>
    f8a4:	add	x20, x19, #0x8
    f8a8:	mov	x0, x19
    f8ac:	bl	4e00 <mpfr_nextabove@plt>
    f8b0:	ldr	x8, [x19, #16]
    f8b4:	mov	x9, #0x2                   	// #2
    f8b8:	movk	x9, #0x8000, lsl #48
    f8bc:	cmp	x8, x9
    f8c0:	b.gt	f8dc <mpc_fix_inf@@Base+0x84>
    f8c4:	b.ne	f900 <mpc_fix_inf@@Base+0xa8>  // b.any
    f8c8:	bl	4b00 <mpfr_set_erangeflag@plt>
    f8cc:	mov	w0, wzr
    f8d0:	ldp	x20, x19, [sp, #16]
    f8d4:	ldp	x29, x30, [sp], #32
    f8d8:	ret
    f8dc:	ldr	w8, [x20]
    f8e0:	neg	w0, w8
    f8e4:	ldp	x20, x19, [sp, #16]
    f8e8:	ldp	x29, x30, [sp], #32
    f8ec:	ret
    f8f0:	cmp	w1, #0x3
    f8f4:	b.ne	f8d0 <mpc_fix_inf@@Base+0x78>  // b.any
    f8f8:	tbz	w0, #31, f884 <mpc_fix_inf@@Base+0x2c>
    f8fc:	b	f8d0 <mpc_fix_inf@@Base+0x78>
    f900:	mov	w0, wzr
    f904:	ldp	x20, x19, [sp, #16]
    f908:	ldp	x29, x30, [sp], #32
    f90c:	ret
    f910:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
    f914:	ldr	x8, [x8, #4008]
    f918:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    f91c:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    f920:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
    f924:	ldr	x0, [x8]
    f928:	add	x1, x1, #0x990
    f92c:	add	x2, x2, #0xcec
    f930:	add	x4, x4, #0xcf6
    f934:	mov	w3, #0x115                 	// #277
    f938:	bl	55a0 <fprintf@plt>
    f93c:	bl	5000 <abort@plt>

000000000000f940 <mpc_fix_zero@@Base>:
    f940:	stp	x29, x30, [sp, #-16]!
    f944:	ldr	w8, [x0, #8]
    f948:	cmp	w1, #0x3
    f94c:	mov	x29, sp
    f950:	b.ne	f968 <mpc_fix_zero@@Base+0x28>  // b.any
    f954:	tbz	w8, #31, f968 <mpc_fix_zero@@Base+0x28>
    f958:	bl	4bb0 <mpfr_nextbelow@plt>
    f95c:	mov	w0, #0xffffffff            	// #-1
    f960:	ldp	x29, x30, [sp], #16
    f964:	ret
    f968:	cmp	w1, #0x2
    f96c:	b.ne	f988 <mpc_fix_zero@@Base+0x48>  // b.any
    f970:	tbnz	w8, #31, f988 <mpc_fix_zero@@Base+0x48>
    f974:	tbnz	w8, #31, f958 <mpc_fix_zero@@Base+0x18>
    f978:	bl	4e00 <mpfr_nextabove@plt>
    f97c:	mov	w0, #0x1                   	// #1
    f980:	ldp	x29, x30, [sp], #16
    f984:	ret
    f988:	cmp	w8, #0x0
    f98c:	mov	w8, #0xffffffff            	// #-1
    f990:	cneg	w0, w8, lt  // lt = tstop
    f994:	ldp	x29, x30, [sp], #16
    f998:	ret

000000000000f99c <mpc_sin_cos@@Base>:
    f99c:	sub	sp, sp, #0x160
    f9a0:	stp	x22, x21, [sp, #320]
    f9a4:	mov	x21, x0
    f9a8:	mov	x0, x2
    f9ac:	stp	x29, x30, [sp, #256]
    f9b0:	stp	x28, x27, [sp, #272]
    f9b4:	stp	x26, x25, [sp, #288]
    f9b8:	stp	x24, x23, [sp, #304]
    f9bc:	stp	x20, x19, [sp, #336]
    f9c0:	add	x29, sp, #0x100
    f9c4:	mov	w25, w4
    f9c8:	mov	w27, w3
    f9cc:	mov	x23, x2
    f9d0:	mov	x19, x1
    f9d4:	bl	54d0 <mpfr_number_p@plt>
    f9d8:	cbz	w0, fa1c <mpc_sin_cos@@Base+0x80>
    f9dc:	add	x24, x23, #0x20
    f9e0:	mov	x0, x24
    f9e4:	bl	54d0 <mpfr_number_p@plt>
    f9e8:	cbz	w0, fa1c <mpc_sin_cos@@Base+0x80>
    f9ec:	ldr	x8, [x23, #48]
    f9f0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    f9f4:	cmp	x8, x10
    f9f8:	b.ne	faf4 <mpc_sin_cos@@Base+0x158>  // b.any
    f9fc:	ldr	w24, [x23, #40]
    fa00:	cbz	x21, fbf0 <mpc_sin_cos@@Base+0x254>
    fa04:	ldr	x1, [x21]
    fa08:	sub	x0, x29, #0x70
    fa0c:	bl	5440 <mpfr_init2@plt>
    fa10:	cbz	x19, fc00 <mpc_sin_cos@@Base+0x264>
    fa14:	ldr	x1, [x19]
    fa18:	b	fc04 <mpc_sin_cos@@Base+0x268>
    fa1c:	cmp	x21, x23
    fa20:	cset	w8, eq  // eq = none
    fa24:	cmp	x19, x23
    fa28:	cset	w9, eq  // eq = none
    fa2c:	orr	w24, w8, w9
    fa30:	cmp	w24, #0x1
    fa34:	b.ne	fa68 <mpc_sin_cos@@Base+0xcc>  // b.any
    fa38:	ldr	x1, [x23]
    fa3c:	ldr	x2, [x23, #32]
    fa40:	sub	x0, x29, #0x50
    fa44:	bl	53c0 <mpc_init3@plt>
    fa48:	sub	x0, x29, #0x50
    fa4c:	mov	x1, x23
    fa50:	mov	w2, wzr
    fa54:	bl	5580 <mpc_set@plt>
    fa58:	mov	x23, #0x2                   	// #2
    fa5c:	movk	x23, #0x8000, lsl #48
    fa60:	cbnz	x21, fa84 <mpc_sin_cos@@Base+0xe8>
    fa64:	b	10220 <mpc_sin_cos@@Base+0x884>
    fa68:	ldp	q1, q0, [x23, #32]
    fa6c:	ldp	q3, q2, [x23]
    fa70:	stp	q1, q0, [x29, #-48]
    fa74:	stp	q3, q2, [x29, #-80]
    fa78:	mov	x23, #0x2                   	// #2
    fa7c:	movk	x23, #0x8000, lsl #48
    fa80:	cbz	x21, 10220 <mpc_sin_cos@@Base+0x884>
    fa84:	ldur	x8, [x29, #-64]
    fa88:	cmp	x8, x23
    fa8c:	b.eq	fa9c <mpc_sin_cos@@Base+0x100>  // b.none
    fa90:	ldur	x9, [x29, #-32]
    fa94:	cmp	x9, x23
    fa98:	b.ne	fb98 <mpc_sin_cos@@Base+0x1fc>  // b.any
    fa9c:	sub	x1, x29, #0x50
    faa0:	mov	x0, x21
    faa4:	mov	w2, w27
    faa8:	bl	5580 <mpc_set@plt>
    faac:	ldur	x8, [x29, #-32]
    fab0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    fab4:	cmp	x8, x9
    fab8:	b.eq	10220 <mpc_sin_cos@@Base+0x884>  // b.none
    fabc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fac0:	cmp	x8, x9
    fac4:	b.eq	10220 <mpc_sin_cos@@Base+0x884>  // b.none
    fac8:	mov	x9, #0x2                   	// #2
    facc:	movk	x9, #0x8000, lsl #48
    fad0:	cmp	x8, x9
    fad4:	b.ne	fbe4 <mpc_sin_cos@@Base+0x248>  // b.any
    fad8:	ldur	x8, [x29, #-64]
    fadc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    fae0:	cmp	x8, x9
    fae4:	b.eq	10220 <mpc_sin_cos@@Base+0x884>  // b.none
    fae8:	mov	x0, x21
    faec:	bl	4a40 <mpfr_set_nan@plt>
    faf0:	b	10220 <mpc_sin_cos@@Base+0x884>
    faf4:	ldr	x9, [x23, #16]
    faf8:	cmp	x9, x10
    fafc:	b.ne	fb40 <mpc_sin_cos@@Base+0x1a4>  // b.any
    fb00:	cmp	x21, x23
    fb04:	cset	w8, eq  // eq = none
    fb08:	cmp	x19, x23
    fb0c:	cset	w9, eq  // eq = none
    fb10:	orr	w22, w8, w9
    fb14:	cmp	w22, #0x1
    fb18:	b.ne	fcec <mpc_sin_cos@@Base+0x350>  // b.any
    fb1c:	ldr	x1, [x23]
    fb20:	ldr	x2, [x23, #32]
    fb24:	sub	x0, x29, #0x50
    fb28:	bl	53c0 <mpc_init3@plt>
    fb2c:	sub	x0, x29, #0x50
    fb30:	mov	x1, x23
    fb34:	mov	w2, wzr
    fb38:	bl	5580 <mpc_set@plt>
    fb3c:	b	fcfc <mpc_sin_cos@@Base+0x360>
    fb40:	cbz	x21, fd7c <mpc_sin_cos@@Base+0x3e0>
    fb44:	ldr	x10, [x21]
    fb48:	ldr	x11, [x21, #32]
    fb4c:	ldr	x13, [x23]
    fb50:	ldr	x14, [x23, #32]
    fb54:	mov	w12, #0x2                   	// #2
    fb58:	cmp	x10, x11
    fb5c:	csel	x10, x10, x11, gt
    fb60:	cmp	x10, #0x2
    fb64:	csel	x26, x10, x12, gt
    fb68:	cmp	x13, x14
    fb6c:	csel	x10, x13, x14, gt
    fb70:	cmp	x10, x26
    fb74:	b.gt	fd80 <mpc_sin_cos@@Base+0x3e4>
    fb78:	cmp	x9, x8
    fb7c:	csel	x8, x8, x9, lt  // lt = tstop
    fb80:	tbz	x8, #63, fd80 <mpc_sin_cos@@Base+0x3e4>
    fb84:	mov	w9, #0x3                   	// #3
    fb88:	sub	x8, x9, x8, lsl #1
    fb8c:	cmp	x26, x8
    fb90:	csel	x26, x8, x26, lt  // lt = tstop
    fb94:	b	fd80 <mpc_sin_cos@@Base+0x3e4>
    fb98:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    fb9c:	cmp	x8, x9
    fba0:	b.eq	101b0 <mpc_sin_cos@@Base+0x814>  // b.none
    fba4:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
    fba8:	cmp	x8, x20
    fbac:	b.ne	101c4 <mpc_sin_cos@@Base+0x828>  // b.any
    fbb0:	mov	x0, x21
    fbb4:	bl	4a40 <mpfr_set_nan@plt>
    fbb8:	ldur	x8, [x29, #-32]
    fbbc:	orr	x8, x8, #0x2
    fbc0:	cmp	x8, x20
    fbc4:	b.ne	fbe4 <mpc_sin_cos@@Base+0x248>  // b.any
    fbc8:	ldur	w3, [x29, #-40]
    fbcc:	sub	x8, x29, #0x50
    fbd0:	add	x1, x8, #0x20
    fbd4:	add	x0, x21, #0x20
    fbd8:	asr	w2, w27, #4
    fbdc:	bl	51d0 <mpfr_set4@plt>
    fbe0:	b	10220 <mpc_sin_cos@@Base+0x884>
    fbe4:	add	x0, x21, #0x20
    fbe8:	bl	4a40 <mpfr_set_nan@plt>
    fbec:	b	10220 <mpc_sin_cos@@Base+0x884>
    fbf0:	mov	w1, #0x2                   	// #2
    fbf4:	sub	x0, x29, #0x70
    fbf8:	bl	5440 <mpfr_init2@plt>
    fbfc:	cbnz	x19, fa14 <mpc_sin_cos@@Base+0x78>
    fc00:	mov	w1, #0x2                   	// #2
    fc04:	add	x0, sp, #0x70
    fc08:	bl	5440 <mpfr_init2@plt>
    fc0c:	and	w2, w27, #0xf
    fc10:	sub	x0, x29, #0x70
    fc14:	mov	x1, x23
    fc18:	bl	5080 <mpfr_sin@plt>
    fc1c:	mov	w22, w0
    fc20:	and	w2, w25, #0xf
    fc24:	add	x0, sp, #0x70
    fc28:	mov	x1, x23
    fc2c:	bl	5050 <mpfr_cos@plt>
    fc30:	mov	w20, w0
    fc34:	cbz	x21, fcc0 <mpc_sin_cos@@Base+0x324>
    fc38:	ldur	w3, [x29, #-104]
    fc3c:	cmp	w24, #0x0
    fc40:	sub	x1, x29, #0x70
    fc44:	mov	x0, x21
    fc48:	mov	w2, wzr
    fc4c:	cset	w23, ge  // ge = tcont
    fc50:	bl	51d0 <mpfr_set4@plt>
    fc54:	ldr	w8, [sp, #120]
    fc58:	mov	w9, #0xffffffff            	// #-1
    fc5c:	add	x0, x21, #0x20
    fc60:	cmp	w8, #0x0
    fc64:	cset	w8, lt  // lt = tstop
    fc68:	orr	w10, w8, w23
    fc6c:	tst	w8, w23
    fc70:	cneg	w8, w9, eq  // eq = none
    fc74:	cmp	w10, #0x0
    fc78:	csinv	w1, w8, wzr, ne  // ne = any
    fc7c:	bl	4d10 <mpfr_set_zero@plt>
    fc80:	cbz	x19, fcc8 <mpc_sin_cos@@Base+0x32c>
    fc84:	ldr	w3, [sp, #120]
    fc88:	add	x1, sp, #0x70
    fc8c:	mov	x0, x19
    fc90:	mov	w2, wzr
    fc94:	bl	51d0 <mpfr_set4@plt>
    fc98:	ldur	w8, [x29, #-104]
    fc9c:	mov	w9, #0xffffffff            	// #-1
    fca0:	add	x0, x19, #0x20
    fca4:	orr	w10, w8, w24
    fca8:	cmp	w10, #0x0
    fcac:	cneg	w9, w9, lt  // lt = tstop
    fcb0:	tst	w8, w24
    fcb4:	csinv	w1, w9, wzr, ge  // ge = tcont
    fcb8:	bl	4d10 <mpfr_set_zero@plt>
    fcbc:	b	fccc <mpc_sin_cos@@Base+0x330>
    fcc0:	mov	w22, wzr
    fcc4:	cbnz	x19, fc84 <mpc_sin_cos@@Base+0x2e8>
    fcc8:	mov	w20, wzr
    fccc:	sub	x0, x29, #0x70
    fcd0:	bl	4d60 <mpfr_clear@plt>
    fcd4:	add	x0, sp, #0x70
    fcd8:	bl	4d60 <mpfr_clear@plt>
    fcdc:	cmp	w22, #0x0
    fce0:	mov	w8, #0x2                   	// #2
    fce4:	cset	w9, ne  // ne = any
    fce8:	b	100b8 <mpc_sin_cos@@Base+0x71c>
    fcec:	ldp	q1, q0, [x23, #32]
    fcf0:	ldp	q3, q2, [x23]
    fcf4:	stp	q1, q0, [x29, #-48]
    fcf8:	stp	q3, q2, [x29, #-80]
    fcfc:	cbz	x21, fd2c <mpc_sin_cos@@Base+0x390>
    fd00:	ldur	w3, [x29, #-72]
    fd04:	sub	x1, x29, #0x50
    fd08:	mov	x0, x21
    fd0c:	mov	w2, wzr
    fd10:	sub	x20, x29, #0x50
    fd14:	bl	51d0 <mpfr_set4@plt>
    fd18:	add	x0, x21, #0x20
    fd1c:	add	x1, x20, #0x20
    fd20:	asr	w2, w27, #4
    fd24:	bl	4f80 <mpfr_sinh@plt>
    fd28:	mov	w21, w0
    fd2c:	cbz	x19, 10098 <mpc_sin_cos@@Base+0x6fc>
    fd30:	sub	x8, x29, #0x50
    fd34:	add	x1, x8, #0x20
    fd38:	and	w2, w25, #0xf
    fd3c:	mov	x0, x19
    fd40:	bl	4a20 <mpfr_cosh@plt>
    fd44:	mov	w8, #0x1                   	// #1
    fd48:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    fd4c:	str	w8, [x19, #40]
    fd50:	str	x9, [x19, #48]
    fd54:	ldur	w8, [x29, #-72]
    fd58:	ldur	w9, [x29, #-40]
    fd5c:	mov	w20, w0
    fd60:	eor	w8, w9, w8
    fd64:	tbnz	w8, #31, 1009c <mpc_sin_cos@@Base+0x700>
    fd68:	add	x0, x19, #0x20
    fd6c:	mov	x1, x0
    fd70:	mov	w2, wzr
    fd74:	bl	4b80 <mpfr_neg@plt>
    fd78:	b	1009c <mpc_sin_cos@@Base+0x700>
    fd7c:	mov	w26, #0x2                   	// #2
    fd80:	cbz	x19, fd9c <mpc_sin_cos@@Base+0x400>
    fd84:	ldr	x8, [x19]
    fd88:	ldr	x9, [x19, #32]
    fd8c:	cmp	x8, x9
    fd90:	csel	x8, x8, x9, gt
    fd94:	cmp	x26, x8
    fd98:	csel	x26, x26, x8, gt
    fd9c:	sub	x0, x29, #0x50
    fda0:	mov	w1, #0x2                   	// #2
    fda4:	bl	5440 <mpfr_init2@plt>
    fda8:	sub	x0, x29, #0x70
    fdac:	mov	w1, #0x2                   	// #2
    fdb0:	bl	5440 <mpfr_init2@plt>
    fdb4:	add	x0, sp, #0x70
    fdb8:	mov	w1, #0x2                   	// #2
    fdbc:	bl	5440 <mpfr_init2@plt>
    fdc0:	add	x0, sp, #0x50
    fdc4:	mov	w1, #0x2                   	// #2
    fdc8:	bl	5440 <mpfr_init2@plt>
    fdcc:	add	x0, sp, #0x30
    fdd0:	mov	w1, #0x2                   	// #2
    fdd4:	bl	5440 <mpfr_init2@plt>
    fdd8:	add	x0, sp, #0x10
    fddc:	mov	w1, #0x2                   	// #2
    fde0:	bl	5440 <mpfr_init2@plt>
    fde4:	and	w8, w27, #0xf
    fde8:	stp	w27, w8, [sp]
    fdec:	tst	w27, #0xf
    fdf0:	and	w8, w25, #0xf
    fdf4:	str	w8, [sp, #8]
    fdf8:	mov	w8, w25
    fdfc:	cset	w25, eq  // eq = none
    fe00:	cmp	w27, #0x10
    fe04:	cset	w27, cc  // cc = lo, ul, last
    fe08:	tst	w8, #0xf
    fe0c:	cset	w20, eq  // eq = none
    fe10:	cmp	w8, #0x10
    fe14:	mov	w28, wzr
    fe18:	cset	w22, cc  // cc = lo, ul, last
    fe1c:	str	w8, [sp, #12]
    fe20:	b	fe28 <mpc_sin_cos@@Base+0x48c>
    fe24:	cbnz	w8, fff0 <mpc_sin_cos@@Base+0x654>
    fe28:	cmp	w28, #0x1
    fe2c:	add	w28, w28, #0x1
    fe30:	b.hi	fe44 <mpc_sin_cos@@Base+0x4a8>  // b.pmore
    fe34:	mov	x0, x26
    fe38:	bl	4d20 <mpc_ceil_log2@plt>
    fe3c:	add	x8, x0, #0x5
    fe40:	b	fe50 <mpc_sin_cos@@Base+0x4b4>
    fe44:	cmp	x26, #0x0
    fe48:	cinc	x8, x26, lt  // lt = tstop
    fe4c:	asr	x8, x8, #1
    fe50:	add	x26, x8, x26
    fe54:	sub	x0, x29, #0x50
    fe58:	mov	x1, x26
    fe5c:	bl	4c80 <mpfr_set_prec@plt>
    fe60:	sub	x0, x29, #0x70
    fe64:	mov	x1, x26
    fe68:	bl	4c80 <mpfr_set_prec@plt>
    fe6c:	add	x0, sp, #0x70
    fe70:	mov	x1, x26
    fe74:	bl	4c80 <mpfr_set_prec@plt>
    fe78:	add	x0, sp, #0x50
    fe7c:	mov	x1, x26
    fe80:	bl	4c80 <mpfr_set_prec@plt>
    fe84:	add	x0, sp, #0x30
    fe88:	mov	x1, x26
    fe8c:	bl	4c80 <mpfr_set_prec@plt>
    fe90:	add	x0, sp, #0x10
    fe94:	mov	x1, x26
    fe98:	bl	4c80 <mpfr_set_prec@plt>
    fe9c:	sub	x0, x29, #0x50
    fea0:	sub	x1, x29, #0x70
    fea4:	mov	x2, x23
    fea8:	mov	w3, wzr
    feac:	bl	5520 <mpfr_sin_cos@plt>
    feb0:	add	x0, sp, #0x70
    feb4:	add	x1, sp, #0x50
    feb8:	mov	x2, x24
    febc:	mov	w3, wzr
    fec0:	bl	4be0 <mpfr_sinh_cosh@plt>
    fec4:	cbz	x21, ff54 <mpc_sin_cos@@Base+0x5b8>
    fec8:	add	x0, sp, #0x30
    fecc:	sub	x1, x29, #0x50
    fed0:	add	x2, sp, #0x50
    fed4:	mov	w3, wzr
    fed8:	bl	4b70 <mpfr_mul@plt>
    fedc:	add	x0, sp, #0x30
    fee0:	bl	54d0 <mpfr_number_p@plt>
    fee4:	cbz	w0, ff08 <mpc_sin_cos@@Base+0x56c>
    fee8:	ldr	x8, [x21]
    feec:	sub	x1, x26, #0x2
    fef0:	add	x0, sp, #0x30
    fef4:	mov	w3, #0x1                   	// #1
    fef8:	add	x4, x8, x25
    fefc:	mov	w2, wzr
    ff00:	bl	5450 <mpfr_can_round@plt>
    ff04:	cbz	w0, fe28 <mpc_sin_cos@@Base+0x48c>
    ff08:	add	x0, sp, #0x10
    ff0c:	sub	x1, x29, #0x70
    ff10:	add	x2, sp, #0x70
    ff14:	mov	w3, wzr
    ff18:	bl	4b70 <mpfr_mul@plt>
    ff1c:	add	x0, sp, #0x10
    ff20:	bl	54d0 <mpfr_number_p@plt>
    ff24:	cbz	w0, ff54 <mpc_sin_cos@@Base+0x5b8>
    ff28:	ldr	x8, [x21, #32]
    ff2c:	sub	x1, x26, #0x2
    ff30:	add	x0, sp, #0x10
    ff34:	mov	w3, #0x1                   	// #1
    ff38:	add	x4, x8, x27
    ff3c:	mov	w2, wzr
    ff40:	bl	5450 <mpfr_can_round@plt>
    ff44:	cmp	w0, #0x0
    ff48:	cset	w8, ne  // ne = any
    ff4c:	cbnz	x19, ff5c <mpc_sin_cos@@Base+0x5c0>
    ff50:	b	fe24 <mpc_sin_cos@@Base+0x488>
    ff54:	mov	w8, #0x1                   	// #1
    ff58:	cbz	x19, fe24 <mpc_sin_cos@@Base+0x488>
    ff5c:	cbz	w8, fe24 <mpc_sin_cos@@Base+0x488>
    ff60:	sub	x0, x29, #0x70
    ff64:	sub	x1, x29, #0x70
    ff68:	add	x2, sp, #0x50
    ff6c:	mov	w3, wzr
    ff70:	bl	4b70 <mpfr_mul@plt>
    ff74:	sub	x0, x29, #0x70
    ff78:	bl	54d0 <mpfr_number_p@plt>
    ff7c:	cbz	w0, ffa0 <mpc_sin_cos@@Base+0x604>
    ff80:	ldr	x8, [x19]
    ff84:	sub	x1, x26, #0x2
    ff88:	sub	x0, x29, #0x70
    ff8c:	mov	w3, #0x1                   	// #1
    ff90:	add	x4, x8, x20
    ff94:	mov	w2, wzr
    ff98:	bl	5450 <mpfr_can_round@plt>
    ff9c:	cbz	w0, fe28 <mpc_sin_cos@@Base+0x48c>
    ffa0:	sub	x0, x29, #0x50
    ffa4:	sub	x1, x29, #0x50
    ffa8:	add	x2, sp, #0x70
    ffac:	mov	w3, wzr
    ffb0:	bl	4b70 <mpfr_mul@plt>
    ffb4:	sub	x0, x29, #0x50
    ffb8:	sub	x1, x29, #0x50
    ffbc:	mov	w2, wzr
    ffc0:	bl	4b80 <mpfr_neg@plt>
    ffc4:	sub	x0, x29, #0x50
    ffc8:	bl	54d0 <mpfr_number_p@plt>
    ffcc:	cbz	w0, fff0 <mpc_sin_cos@@Base+0x654>
    ffd0:	ldr	x8, [x19, #32]
    ffd4:	sub	x1, x26, #0x2
    ffd8:	sub	x0, x29, #0x50
    ffdc:	mov	w3, #0x1                   	// #1
    ffe0:	add	x4, x8, x22
    ffe4:	mov	w2, wzr
    ffe8:	bl	5450 <mpfr_can_round@plt>
    ffec:	cbz	w0, fe28 <mpc_sin_cos@@Base+0x48c>
    fff0:	cbz	x21, 100d8 <mpc_sin_cos@@Base+0x73c>
    fff4:	ldr	w22, [sp, #4]
    fff8:	ldr	w3, [sp, #56]
    fffc:	add	x1, sp, #0x30
   10000:	mov	x0, x21
   10004:	mov	w2, w22
   10008:	bl	51d0 <mpfr_set4@plt>
   1000c:	ldr	x8, [sp, #64]
   10010:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   10014:	cmp	x8, x20
   10018:	b.ne	10028 <mpc_sin_cos@@Base+0x68c>  // b.any
   1001c:	mov	x0, x21
   10020:	mov	w1, w22
   10024:	bl	4dd0 <mpc_fix_inf@plt>
   10028:	ldr	w8, [sp]
   1002c:	ldr	w3, [sp, #24]
   10030:	ldp	w22, w25, [sp, #8]
   10034:	add	x24, x21, #0x20
   10038:	asr	w21, w8, #4
   1003c:	mov	w23, w0
   10040:	add	x1, sp, #0x10
   10044:	mov	x0, x24
   10048:	mov	w2, w21
   1004c:	bl	51d0 <mpfr_set4@plt>
   10050:	ldr	x8, [sp, #32]
   10054:	cmp	x8, x20
   10058:	b.ne	10068 <mpc_sin_cos@@Base+0x6cc>  // b.any
   1005c:	mov	x0, x24
   10060:	mov	w1, w21
   10064:	bl	4dd0 <mpc_fix_inf@plt>
   10068:	cmp	w23, #0x0
   1006c:	mov	w8, #0x2                   	// #2
   10070:	cset	w9, ne  // ne = any
   10074:	csel	w8, w8, w9, lt  // lt = tstop
   10078:	cmp	w0, #0x0
   1007c:	cset	w9, ne  // ne = any
   10080:	lsl	w9, w9, #2
   10084:	mov	w10, #0x8                   	// #8
   10088:	csel	w9, w10, w9, lt  // lt = tstop
   1008c:	orr	w20, w9, w8
   10090:	cbnz	x19, 100e4 <mpc_sin_cos@@Base+0x748>
   10094:	b	10178 <mpc_sin_cos@@Base+0x7dc>
   10098:	mov	w20, wzr
   1009c:	cbz	w22, 100a8 <mpc_sin_cos@@Base+0x70c>
   100a0:	sub	x0, x29, #0x50
   100a4:	bl	4a10 <mpc_clear@plt>
   100a8:	cmp	w21, #0x0
   100ac:	cset	w9, ne  // ne = any
   100b0:	mov	w8, #0x8                   	// #8
   100b4:	lsl	w9, w9, #2
   100b8:	csel	w8, w8, w9, lt  // lt = tstop
   100bc:	cmp	w20, #0x0
   100c0:	cset	w9, ne  // ne = any
   100c4:	lsl	w9, w9, #4
   100c8:	mov	w10, #0x20                  	// #32
   100cc:	csel	w9, w10, w9, lt  // lt = tstop
   100d0:	orr	w0, w9, w8
   100d4:	b	103e4 <mpc_sin_cos@@Base+0xa48>
   100d8:	ldp	w22, w25, [sp, #8]
   100dc:	mov	w20, wzr
   100e0:	cbz	x19, 10178 <mpc_sin_cos@@Base+0x7dc>
   100e4:	ldur	w3, [x29, #-104]
   100e8:	sub	x1, x29, #0x70
   100ec:	mov	x0, x19
   100f0:	mov	w2, w22
   100f4:	bl	51d0 <mpfr_set4@plt>
   100f8:	ldur	x8, [x29, #-96]
   100fc:	mov	x23, #0x8000000000000003    	// #-9223372036854775805
   10100:	cmp	x8, x23
   10104:	b.ne	10114 <mpc_sin_cos@@Base+0x778>  // b.any
   10108:	mov	x0, x19
   1010c:	mov	w1, w22
   10110:	bl	4dd0 <mpc_fix_inf@plt>
   10114:	ldur	w3, [x29, #-72]
   10118:	add	x22, x19, #0x20
   1011c:	asr	w19, w25, #4
   10120:	mov	w21, w0
   10124:	sub	x1, x29, #0x50
   10128:	mov	x0, x22
   1012c:	mov	w2, w19
   10130:	bl	51d0 <mpfr_set4@plt>
   10134:	ldur	x8, [x29, #-64]
   10138:	cmp	x8, x23
   1013c:	b.ne	1014c <mpc_sin_cos@@Base+0x7b0>  // b.any
   10140:	mov	x0, x22
   10144:	mov	w1, w19
   10148:	bl	4dd0 <mpc_fix_inf@plt>
   1014c:	cmp	w21, #0x0
   10150:	cset	w9, ne  // ne = any
   10154:	mov	w8, #0x20                  	// #32
   10158:	lsl	w9, w9, #4
   1015c:	csel	w8, w8, w9, lt  // lt = tstop
   10160:	cmp	w0, #0x0
   10164:	cset	w9, ne  // ne = any
   10168:	lsl	w9, w9, #6
   1016c:	mov	w10, #0x80                  	// #128
   10170:	csel	w9, w10, w9, lt  // lt = tstop
   10174:	orr	w19, w9, w8
   10178:	sub	x0, x29, #0x50
   1017c:	bl	4d60 <mpfr_clear@plt>
   10180:	sub	x0, x29, #0x70
   10184:	bl	4d60 <mpfr_clear@plt>
   10188:	add	x0, sp, #0x70
   1018c:	bl	4d60 <mpfr_clear@plt>
   10190:	add	x0, sp, #0x50
   10194:	bl	4d60 <mpfr_clear@plt>
   10198:	add	x0, sp, #0x30
   1019c:	bl	4d60 <mpfr_clear@plt>
   101a0:	add	x0, sp, #0x10
   101a4:	bl	4d60 <mpfr_clear@plt>
   101a8:	orr	w0, w19, w20
   101ac:	b	103e4 <mpc_sin_cos@@Base+0xa48>
   101b0:	sub	x1, x29, #0x50
   101b4:	mov	x0, x21
   101b8:	mov	w2, w27
   101bc:	bl	5580 <mpc_set@plt>
   101c0:	b	10220 <mpc_sin_cos@@Base+0x884>
   101c4:	sub	x0, x29, #0x70
   101c8:	mov	w1, #0x2                   	// #2
   101cc:	bl	5440 <mpfr_init2@plt>
   101d0:	add	x0, sp, #0x70
   101d4:	mov	w1, #0x2                   	// #2
   101d8:	bl	5440 <mpfr_init2@plt>
   101dc:	sub	x0, x29, #0x70
   101e0:	add	x1, sp, #0x70
   101e4:	sub	x2, x29, #0x50
   101e8:	mov	w3, #0x1                   	// #1
   101ec:	bl	5520 <mpfr_sin_cos@plt>
   101f0:	ldur	w1, [x29, #-104]
   101f4:	mov	x0, x21
   101f8:	bl	5120 <mpfr_set_inf@plt>
   101fc:	ldr	w8, [sp, #120]
   10200:	ldur	w9, [x29, #-40]
   10204:	add	x0, x21, #0x20
   10208:	mul	w1, w9, w8
   1020c:	bl	5120 <mpfr_set_inf@plt>
   10210:	sub	x0, x29, #0x70
   10214:	bl	4d60 <mpfr_clear@plt>
   10218:	add	x0, sp, #0x70
   1021c:	bl	4d60 <mpfr_clear@plt>
   10220:	cbz	x19, 103d4 <mpc_sin_cos@@Base+0xa38>
   10224:	ldur	x9, [x29, #-64]
   10228:	ldur	x8, [x29, #-32]
   1022c:	sub	x10, x29, #0x50
   10230:	add	x21, x10, #0x20
   10234:	cmp	x9, x23
   10238:	b.ne	10258 <mpc_sin_cos@@Base+0x8bc>  // b.any
   1023c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10240:	cmp	x8, x9
   10244:	b.ne	10284 <mpc_sin_cos@@Base+0x8e8>  // b.any
   10248:	mov	w1, #0x1                   	// #1
   1024c:	mov	x0, x19
   10250:	bl	5120 <mpfr_set_inf@plt>
   10254:	b	1028c <mpc_sin_cos@@Base+0x8f0>
   10258:	cmp	x8, x23
   1025c:	b.ne	102b8 <mpc_sin_cos@@Base+0x91c>  // b.any
   10260:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   10264:	cmp	x9, x8
   10268:	add	x0, x19, #0x20
   1026c:	b.ne	102fc <mpc_sin_cos@@Base+0x960>  // b.any
   10270:	ldur	w3, [x29, #-72]
   10274:	asr	w2, w25, #4
   10278:	sub	x1, x29, #0x50
   1027c:	bl	51d0 <mpfr_set4@plt>
   10280:	b	10300 <mpc_sin_cos@@Base+0x964>
   10284:	mov	x0, x19
   10288:	bl	4a40 <mpfr_set_nan@plt>
   1028c:	ldur	x8, [x29, #-32]
   10290:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10294:	add	x0, x19, #0x20
   10298:	cmp	x8, x9
   1029c:	b.ne	103d0 <mpc_sin_cos@@Base+0xa34>  // b.any
   102a0:	ldur	w3, [x29, #-40]
   102a4:	asr	w2, w25, #4
   102a8:	mov	x1, x21
   102ac:	bl	51d0 <mpfr_set4@plt>
   102b0:	cbz	w24, 103e0 <mpc_sin_cos@@Base+0xa44>
   102b4:	b	103d8 <mpc_sin_cos@@Base+0xa3c>
   102b8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   102bc:	cmp	x9, x10
   102c0:	b.eq	10310 <mpc_sin_cos@@Base+0x974>  // b.none
   102c4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   102c8:	cmp	x9, x10
   102cc:	b.ne	1034c <mpc_sin_cos@@Base+0x9b0>  // b.any
   102d0:	ldur	w9, [x29, #-72]
   102d4:	ldur	w11, [x29, #-40]
   102d8:	cmp	x8, x10
   102dc:	eor	w20, w11, w9
   102e0:	b.ne	103a0 <mpc_sin_cos@@Base+0xa04>  // b.any
   102e4:	cmp	w20, #0x0
   102e8:	mov	w8, #0xffffffff            	// #-1
   102ec:	cneg	w1, w8, lt  // lt = tstop
   102f0:	mov	x0, x19
   102f4:	bl	5120 <mpfr_set_inf@plt>
   102f8:	b	103a8 <mpc_sin_cos@@Base+0xa0c>
   102fc:	bl	4a40 <mpfr_set_nan@plt>
   10300:	mov	x0, x19
   10304:	bl	4a40 <mpfr_set_nan@plt>
   10308:	cbz	w24, 103e0 <mpc_sin_cos@@Base+0xa44>
   1030c:	b	103d8 <mpc_sin_cos@@Base+0xa3c>
   10310:	ldur	w8, [x29, #-72]
   10314:	ldur	w9, [x29, #-40]
   10318:	add	x0, x19, #0x20
   1031c:	asr	w2, w25, #4
   10320:	sub	x1, x29, #0x50
   10324:	eor	w8, w9, w8
   10328:	cmp	w8, #0x0
   1032c:	mov	w8, #0xffffffff            	// #-1
   10330:	cneg	w3, w8, lt  // lt = tstop
   10334:	bl	51d0 <mpfr_set4@plt>
   10338:	mov	w1, #0x1                   	// #1
   1033c:	mov	x0, x19
   10340:	bl	5120 <mpfr_set_inf@plt>
   10344:	cbz	w24, 103e0 <mpc_sin_cos@@Base+0xa44>
   10348:	b	103d8 <mpc_sin_cos@@Base+0xa3c>
   1034c:	add	x0, sp, #0x70
   10350:	mov	w1, #0x2                   	// #2
   10354:	bl	5440 <mpfr_init2@plt>
   10358:	sub	x0, x29, #0x70
   1035c:	mov	w1, #0x2                   	// #2
   10360:	bl	5440 <mpfr_init2@plt>
   10364:	sub	x0, x29, #0x70
   10368:	add	x1, sp, #0x70
   1036c:	sub	x2, x29, #0x50
   10370:	mov	w3, wzr
   10374:	bl	5520 <mpfr_sin_cos@plt>
   10378:	ldr	x8, [sp, #128]
   1037c:	mov	x9, #0x2                   	// #2
   10380:	movk	x9, #0x8000, lsl #48
   10384:	cmp	x8, x9
   10388:	b.gt	10404 <mpc_sin_cos@@Base+0xa68>
   1038c:	cmp	x8, x23
   10390:	b.ne	10398 <mpc_sin_cos@@Base+0x9fc>  // b.any
   10394:	bl	4b00 <mpfr_set_erangeflag@plt>
   10398:	mov	w1, wzr
   1039c:	b	10408 <mpc_sin_cos@@Base+0xa6c>
   103a0:	mov	x0, x19
   103a4:	bl	4a40 <mpfr_set_nan@plt>
   103a8:	ldur	x8, [x29, #-32]
   103ac:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   103b0:	add	x0, x19, #0x20
   103b4:	cmp	x8, x9
   103b8:	b.ne	103d0 <mpc_sin_cos@@Base+0xa34>  // b.any
   103bc:	cmp	w20, #0x0
   103c0:	mov	w8, #0xffffffff            	// #-1
   103c4:	asr	w2, w25, #4
   103c8:	cneg	w3, w8, lt  // lt = tstop
   103cc:	b	102a8 <mpc_sin_cos@@Base+0x90c>
   103d0:	bl	4a40 <mpfr_set_nan@plt>
   103d4:	cbz	w24, 103e0 <mpc_sin_cos@@Base+0xa44>
   103d8:	sub	x0, x29, #0x50
   103dc:	bl	4a10 <mpc_clear@plt>
   103e0:	mov	w0, wzr
   103e4:	ldp	x20, x19, [sp, #336]
   103e8:	ldp	x22, x21, [sp, #320]
   103ec:	ldp	x24, x23, [sp, #304]
   103f0:	ldp	x26, x25, [sp, #288]
   103f4:	ldp	x28, x27, [sp, #272]
   103f8:	ldp	x29, x30, [sp, #256]
   103fc:	add	sp, sp, #0x160
   10400:	ret
   10404:	ldr	w1, [sp, #120]
   10408:	mov	x0, x19
   1040c:	bl	5120 <mpfr_set_inf@plt>
   10410:	ldur	x8, [x29, #-32]
   10414:	mov	x9, #0x2                   	// #2
   10418:	movk	x9, #0x8000, lsl #48
   1041c:	add	x19, x19, #0x20
   10420:	cmp	x8, x9
   10424:	b.gt	1043c <mpc_sin_cos@@Base+0xaa0>
   10428:	cmp	x8, x23
   1042c:	b.ne	10434 <mpc_sin_cos@@Base+0xa98>  // b.any
   10430:	bl	4b00 <mpfr_set_erangeflag@plt>
   10434:	mov	w20, wzr
   10438:	b	10440 <mpc_sin_cos@@Base+0xaa4>
   1043c:	ldur	w20, [x29, #-40]
   10440:	ldur	x8, [x29, #-96]
   10444:	mov	x9, #0x2                   	// #2
   10448:	movk	x9, #0x8000, lsl #48
   1044c:	cmp	x8, x9
   10450:	b.gt	10468 <mpc_sin_cos@@Base+0xacc>
   10454:	cmp	x8, x23
   10458:	b.ne	10460 <mpc_sin_cos@@Base+0xac4>  // b.any
   1045c:	bl	4b00 <mpfr_set_erangeflag@plt>
   10460:	mov	w8, wzr
   10464:	b	1046c <mpc_sin_cos@@Base+0xad0>
   10468:	ldur	w8, [x29, #-104]
   1046c:	cmp	w20, w8
   10470:	mov	w8, #0xffffffff            	// #-1
   10474:	cneg	w1, w8, ne  // ne = any
   10478:	mov	x0, x19
   1047c:	bl	5120 <mpfr_set_inf@plt>
   10480:	sub	x0, x29, #0x70
   10484:	bl	4d60 <mpfr_clear@plt>
   10488:	add	x0, sp, #0x70
   1048c:	bl	4d60 <mpfr_clear@plt>
   10490:	cbz	w24, 103e0 <mpc_sin_cos@@Base+0xa44>
   10494:	b	103d8 <mpc_sin_cos@@Base+0xa3c>

0000000000010498 <mpc_sinh@@Base>:
   10498:	sub	sp, sp, #0xa0
   1049c:	stp	x29, x30, [sp, #128]
   104a0:	str	x19, [sp, #144]
   104a4:	ldp	q1, q0, [x1, #32]
   104a8:	ubfiz	w8, w2, #4, #4
   104ac:	mov	x19, x0
   104b0:	add	w2, w8, w2, asr #4
   104b4:	stp	q1, q0, [sp, #64]
   104b8:	ldp	q1, q0, [x1]
   104bc:	add	x1, sp, #0x40
   104c0:	add	x29, sp, #0x80
   104c4:	stp	q1, q0, [sp, #96]
   104c8:	ldp	q1, q0, [x0, #32]
   104cc:	stp	q1, q0, [sp]
   104d0:	ldp	q1, q0, [x0]
   104d4:	mov	x0, sp
   104d8:	stp	q1, q0, [sp, #32]
   104dc:	bl	4f50 <mpc_sin@plt>
   104e0:	ldp	q1, q0, [sp, #32]
   104e4:	asr	w8, w0, #2
   104e8:	cmp	w8, #0x0
   104ec:	cset	w9, ne  // ne = any
   104f0:	stp	q1, q0, [x19]
   104f4:	ldp	q1, q0, [sp]
   104f8:	cmp	w8, #0x2
   104fc:	csel	w8, w8, w9, eq  // eq = none
   10500:	tst	w0, #0x3
   10504:	stp	q1, q0, [x19, #32]
   10508:	and	w9, w0, #0x3
   1050c:	cset	w10, ne  // ne = any
   10510:	ldr	x19, [sp, #144]
   10514:	ldp	x29, x30, [sp, #128]
   10518:	cmp	w9, #0x2
   1051c:	mov	w9, #0x8                   	// #8
   10520:	lsl	w10, w10, #2
   10524:	csel	w9, w9, w10, eq  // eq = none
   10528:	orr	w0, w8, w9
   1052c:	add	sp, sp, #0xa0
   10530:	ret

0000000000010534 <mpc_sqr@@Base>:
   10534:	sub	sp, sp, #0xd0
   10538:	stp	x20, x19, [sp, #192]
   1053c:	mov	x19, x0
   10540:	mov	x0, x1
   10544:	stp	x29, x30, [sp, #112]
   10548:	stp	x28, x27, [sp, #128]
   1054c:	stp	x26, x25, [sp, #144]
   10550:	stp	x24, x23, [sp, #160]
   10554:	stp	x22, x21, [sp, #176]
   10558:	add	x29, sp, #0x70
   1055c:	mov	w21, w2
   10560:	mov	x20, x1
   10564:	bl	54d0 <mpfr_number_p@plt>
   10568:	cbz	w0, 105f4 <mpc_sqr@@Base+0xc0>
   1056c:	add	x22, x20, #0x20
   10570:	mov	x0, x22
   10574:	bl	54d0 <mpfr_number_p@plt>
   10578:	cbz	w0, 105f4 <mpc_sqr@@Base+0xc0>
   1057c:	mov	x23, x19
   10580:	ldr	x9, [x19]
   10584:	ldr	x10, [x23, #32]!
   10588:	ldr	x8, [x20, #48]
   1058c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   10590:	cmp	x9, x10
   10594:	csel	x24, x9, x10, gt
   10598:	cmp	x8, x25
   1059c:	b.ne	10648 <mpc_sqr@@Base+0x114>  // b.any
   105a0:	ldr	w8, [x20, #8]
   105a4:	ldr	w9, [x20, #40]
   105a8:	and	w2, w21, #0xf
   105ac:	mov	x0, x19
   105b0:	mov	x1, x20
   105b4:	eor	w22, w9, w8
   105b8:	bl	5010 <mpfr_sqr@plt>
   105bc:	mov	w20, w0
   105c0:	mov	w8, #0x1                   	// #1
   105c4:	str	w8, [x19, #40]
   105c8:	str	x25, [x19, #48]
   105cc:	tbz	w22, #31, 105e0 <mpc_sqr@@Base+0xac>
   105d0:	mov	x0, x19
   105d4:	mov	x1, x19
   105d8:	mov	w2, wzr
   105dc:	bl	4f60 <mpc_conj@plt>
   105e0:	cmp	w20, #0x0
   105e4:	cset	w8, ne  // ne = any
   105e8:	mov	w9, #0x2                   	// #2
   105ec:	csel	w0, w9, w8, lt  // lt = tstop
   105f0:	b	10628 <mpc_sqr@@Base+0xf4>
   105f4:	ldr	x8, [x20, #16]
   105f8:	mov	x10, #0x2                   	// #2
   105fc:	movk	x10, #0x8000, lsl #48
   10600:	cmp	x8, x10
   10604:	b.eq	10614 <mpc_sqr@@Base+0xe0>  // b.none
   10608:	ldr	x9, [x20, #48]
   1060c:	cmp	x9, x10
   10610:	b.ne	106d0 <mpc_sqr@@Base+0x19c>  // b.any
   10614:	mov	x0, x19
   10618:	bl	4a40 <mpfr_set_nan@plt>
   1061c:	add	x0, x19, #0x20
   10620:	bl	4a40 <mpfr_set_nan@plt>
   10624:	mov	w0, wzr
   10628:	ldp	x20, x19, [sp, #192]
   1062c:	ldp	x22, x21, [sp, #176]
   10630:	ldp	x24, x23, [sp, #160]
   10634:	ldp	x26, x25, [sp, #144]
   10638:	ldp	x28, x27, [sp, #128]
   1063c:	ldp	x29, x30, [sp, #112]
   10640:	add	sp, sp, #0xd0
   10644:	ret
   10648:	ldr	x9, [x20, #16]
   1064c:	cmp	x9, x25
   10650:	b.ne	10700 <mpc_sqr@@Base+0x1cc>  // b.any
   10654:	ldr	w8, [x20, #8]
   10658:	ldr	w9, [x20, #40]
   1065c:	and	w10, w21, #0xf
   10660:	mov	w21, #0x2                   	// #2
   10664:	cmp	w10, #0x3
   10668:	mov	w11, #0x3                   	// #3
   1066c:	csel	w12, w21, w10, eq  // eq = none
   10670:	cmp	w10, #0x2
   10674:	csel	w2, w11, w12, eq  // eq = none
   10678:	mov	x0, x19
   1067c:	mov	x1, x22
   10680:	eor	w23, w9, w8
   10684:	bl	5010 <mpfr_sqr@plt>
   10688:	mov	w20, w0
   1068c:	mov	x0, x19
   10690:	mov	x1, x19
   10694:	mov	w2, wzr
   10698:	bl	4b80 <mpfr_neg@plt>
   1069c:	mov	w8, #0x1                   	// #1
   106a0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   106a4:	str	w8, [x19, #40]
   106a8:	str	x9, [x19, #48]
   106ac:	tbz	w23, #31, 106c0 <mpc_sqr@@Base+0x18c>
   106b0:	mov	x0, x19
   106b4:	mov	x1, x19
   106b8:	mov	w2, wzr
   106bc:	bl	4f60 <mpc_conj@plt>
   106c0:	cmp	w20, #0x0
   106c4:	cset	w8, ne  // ne = any
   106c8:	csel	w0, w21, w8, gt
   106cc:	b	10628 <mpc_sqr@@Base+0xf4>
   106d0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   106d4:	cmp	x8, x10
   106d8:	b.ne	10714 <mpc_sqr@@Base+0x1e0>  // b.any
   106dc:	cmp	x9, x10
   106e0:	b.ne	10730 <mpc_sqr@@Base+0x1fc>  // b.any
   106e4:	ldr	w8, [x20, #8]
   106e8:	ldr	w9, [x20, #40]
   106ec:	add	x0, x19, #0x20
   106f0:	mul	w1, w9, w8
   106f4:	bl	5120 <mpfr_set_inf@plt>
   106f8:	mov	x0, x19
   106fc:	b	10620 <mpc_sqr@@Base+0xec>
   10700:	cmp	x19, x20
   10704:	b.eq	10760 <mpc_sqr@@Base+0x22c>  // b.none
   10708:	ldp	q1, q0, [x20]
   1070c:	stp	q1, q0, [sp, #16]
   10710:	b	10788 <mpc_sqr@@Base+0x254>
   10714:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10718:	cmp	x8, x9
   1071c:	add	x0, x19, #0x20
   10720:	b.ne	10748 <mpc_sqr@@Base+0x214>  // b.any
   10724:	bl	4a40 <mpfr_set_nan@plt>
   10728:	mov	w1, #0xffffffff            	// #-1
   1072c:	b	10914 <mpc_sqr@@Base+0x3e0>
   10730:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   10734:	cmp	x9, x8
   10738:	add	x0, x19, #0x20
   1073c:	b.ne	10900 <mpc_sqr@@Base+0x3cc>  // b.any
   10740:	bl	4a40 <mpfr_set_nan@plt>
   10744:	b	10910 <mpc_sqr@@Base+0x3dc>
   10748:	ldr	w8, [x20, #8]
   1074c:	ldr	w9, [x20, #40]
   10750:	mul	w1, w9, w8
   10754:	bl	5120 <mpfr_set_inf@plt>
   10758:	mov	w1, #0xffffffff            	// #-1
   1075c:	b	10914 <mpc_sqr@@Base+0x3e0>
   10760:	ldr	x1, [x20]
   10764:	add	x0, sp, #0x10
   10768:	bl	5440 <mpfr_init2@plt>
   1076c:	ldr	w3, [x20, #8]
   10770:	add	x0, sp, #0x10
   10774:	mov	x1, x20
   10778:	mov	w2, wzr
   1077c:	bl	51d0 <mpfr_set4@plt>
   10780:	ldr	x9, [x20, #16]
   10784:	ldr	x8, [x20, #48]
   10788:	ldr	x10, [x20]
   1078c:	ldr	x11, [x20, #32]
   10790:	subs	x8, x9, x8
   10794:	cneg	x8, x8, mi  // mi = first
   10798:	cmp	x10, x11
   1079c:	csel	x9, x10, x11, gt
   107a0:	cmp	x9, #0x0
   107a4:	cinc	x9, x9, lt  // lt = tstop
   107a8:	cmp	x8, x9, asr #1
   107ac:	b.le	107cc <mpc_sqr@@Base+0x298>
   107b0:	and	w3, w21, #0xf
   107b4:	add	x1, sp, #0x10
   107b8:	mov	x0, x19
   107bc:	mov	x2, x22
   107c0:	bl	10a00 <mpc_sqr@@Base+0x4cc>
   107c4:	mov	w24, w0
   107c8:	b	10958 <mpc_sqr@@Base+0x424>
   107cc:	sub	x0, x29, #0x20
   107d0:	bl	4aa0 <mpfr_init@plt>
   107d4:	add	x0, sp, #0x30
   107d8:	bl	4aa0 <mpfr_init@plt>
   107dc:	bl	5060 <mpfr_get_emin@plt>
   107e0:	tst	w21, #0xf
   107e4:	mov	x25, #0x2                   	// #2
   107e8:	and	w8, w21, #0xf
   107ec:	movk	x25, #0x8000, lsl #48
   107f0:	cset	w26, eq  // eq = none
   107f4:	str	x0, [sp, #8]
   107f8:	str	w8, [sp, #4]
   107fc:	mov	x0, x24
   10800:	bl	4d20 <mpc_ceil_log2@plt>
   10804:	add	x8, x24, x0
   10808:	add	x24, x8, #0x5
   1080c:	sub	x0, x29, #0x20
   10810:	mov	x1, x24
   10814:	bl	4c80 <mpfr_set_prec@plt>
   10818:	add	x0, sp, #0x30
   1081c:	mov	x1, x24
   10820:	bl	4c80 <mpfr_set_prec@plt>
   10824:	sub	x0, x29, #0x20
   10828:	add	x1, sp, #0x10
   1082c:	mov	w3, #0x4                   	// #4
   10830:	mov	x2, x22
   10834:	bl	4e60 <mpfr_add@plt>
   10838:	mov	w27, w0
   1083c:	add	x0, sp, #0x30
   10840:	add	x1, sp, #0x10
   10844:	mov	w3, #0x4                   	// #4
   10848:	mov	x2, x22
   1084c:	bl	4a60 <mpfr_sub@plt>
   10850:	ldur	x8, [x29, #-16]
   10854:	cmp	x8, x25
   10858:	b.le	10920 <mpc_sqr@@Base+0x3ec>
   1085c:	ldur	w8, [x29, #-24]
   10860:	cbz	w8, 10934 <mpc_sqr@@Base+0x400>
   10864:	ldr	x8, [sp, #64]
   10868:	cmp	x8, x25
   1086c:	b.le	10920 <mpc_sqr@@Base+0x3ec>
   10870:	ldr	w8, [sp, #56]
   10874:	cbz	w8, 10934 <mpc_sqr@@Base+0x400>
   10878:	mov	w28, w0
   1087c:	sub	x0, x29, #0x20
   10880:	sub	x1, x29, #0x20
   10884:	add	x2, sp, #0x30
   10888:	mov	w3, #0x4                   	// #4
   1088c:	bl	4b70 <mpfr_mul@plt>
   10890:	ldur	x8, [x29, #-16]
   10894:	ldr	x9, [sp, #8]
   10898:	cmp	x8, x9
   1089c:	b.eq	109e4 <mpc_sqr@@Base+0x4b0>  // b.none
   108a0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   108a4:	cmp	x8, x9
   108a8:	b.eq	109e4 <mpc_sqr@@Base+0x4b0>  // b.none
   108ac:	ldr	x9, [x19]
   108b0:	orr	w8, w28, w27
   108b4:	orr	w27, w8, w0
   108b8:	cmp	w27, #0x0
   108bc:	sub	x1, x24, #0x3
   108c0:	add	x4, x9, x26
   108c4:	sub	x0, x29, #0x20
   108c8:	mov	w2, #0x4                   	// #4
   108cc:	mov	w3, #0x1                   	// #1
   108d0:	cset	w28, eq  // eq = none
   108d4:	bl	5450 <mpfr_can_round@plt>
   108d8:	orr	w8, w0, w28
   108dc:	cbz	w8, 107fc <mpc_sqr@@Base+0x2c8>
   108e0:	ldur	w3, [x29, #-24]
   108e4:	ldr	w2, [sp, #4]
   108e8:	sub	x1, x29, #0x20
   108ec:	mov	x0, x19
   108f0:	bl	51d0 <mpfr_set4@plt>
   108f4:	cmp	w0, #0x0
   108f8:	csel	w24, w27, w0, eq  // eq = none
   108fc:	b	10948 <mpc_sqr@@Base+0x414>
   10900:	ldr	w8, [x20, #8]
   10904:	ldr	w9, [x20, #40]
   10908:	mul	w1, w9, w8
   1090c:	bl	5120 <mpfr_set_inf@plt>
   10910:	mov	w1, #0x1                   	// #1
   10914:	mov	x0, x19
   10918:	bl	5120 <mpfr_set_inf@plt>
   1091c:	b	10624 <mpc_sqr@@Base+0xf0>
   10920:	mov	x9, #0x2                   	// #2
   10924:	movk	x9, #0x8000, lsl #48
   10928:	cmp	x8, x9
   1092c:	b.ne	10934 <mpc_sqr@@Base+0x400>  // b.any
   10930:	bl	4b00 <mpfr_set_erangeflag@plt>
   10934:	mov	w8, #0x1                   	// #1
   10938:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1093c:	mov	w24, wzr
   10940:	str	w8, [x19, #8]
   10944:	str	x9, [x19, #16]
   10948:	sub	x0, x29, #0x20
   1094c:	bl	4d60 <mpfr_clear@plt>
   10950:	add	x0, sp, #0x30
   10954:	bl	4d60 <mpfr_clear@plt>
   10958:	bl	52f0 <mpfr_underflow_p@plt>
   1095c:	mov	w25, w0
   10960:	bl	4e20 <mpfr_clear_underflow@plt>
   10964:	asr	w26, w21, #4
   10968:	add	x1, sp, #0x10
   1096c:	mov	x0, x23
   10970:	mov	x2, x22
   10974:	mov	w3, w26
   10978:	bl	4b70 <mpfr_mul@plt>
   1097c:	mov	w21, w0
   10980:	bl	52f0 <mpfr_underflow_p@plt>
   10984:	cbnz	w0, 109a0 <mpc_sqr@@Base+0x46c>
   10988:	mov	w2, #0x1                   	// #1
   1098c:	mov	x0, x23
   10990:	mov	x1, x23
   10994:	mov	w3, w26
   10998:	bl	4f40 <mpfr_mul_2ui@plt>
   1099c:	orr	w21, w0, w21
   109a0:	cbz	w25, 109a8 <mpc_sqr@@Base+0x474>
   109a4:	bl	4990 <mpfr_set_underflow@plt>
   109a8:	cmp	x19, x20
   109ac:	b.ne	109b8 <mpc_sqr@@Base+0x484>  // b.any
   109b0:	add	x0, sp, #0x10
   109b4:	bl	4d60 <mpfr_clear@plt>
   109b8:	cmp	w24, #0x0
   109bc:	mov	w8, #0x2                   	// #2
   109c0:	cset	w9, ne  // ne = any
   109c4:	csel	w8, w8, w9, lt  // lt = tstop
   109c8:	cmp	w21, #0x0
   109cc:	cset	w9, ne  // ne = any
   109d0:	lsl	w9, w9, #2
   109d4:	mov	w10, #0x8                   	// #8
   109d8:	csel	w9, w10, w9, lt  // lt = tstop
   109dc:	orr	w0, w9, w8
   109e0:	b	10628 <mpc_sqr@@Base+0xf4>
   109e4:	ldr	w3, [sp, #4]
   109e8:	add	x1, sp, #0x10
   109ec:	mov	x0, x19
   109f0:	mov	x2, x22
   109f4:	bl	10a00 <mpc_sqr@@Base+0x4cc>
   109f8:	mov	w24, w0
   109fc:	b	10948 <mpc_sqr@@Base+0x414>
   10a00:	sub	sp, sp, #0xb0
   10a04:	stp	x29, x30, [sp, #96]
   10a08:	stp	x26, x25, [sp, #112]
   10a0c:	stp	x24, x23, [sp, #128]
   10a10:	stp	x22, x21, [sp, #144]
   10a14:	stp	x20, x19, [sp, #160]
   10a18:	ldr	x8, [x1]
   10a1c:	add	x29, sp, #0x60
   10a20:	mov	x20, x1
   10a24:	mov	x22, x0
   10a28:	lsl	x1, x8, #1
   10a2c:	sub	x0, x29, #0x20
   10a30:	mov	w21, w3
   10a34:	mov	x19, x2
   10a38:	bl	5440 <mpfr_init2@plt>
   10a3c:	ldr	x8, [x19]
   10a40:	add	x0, sp, #0x20
   10a44:	lsl	x1, x8, #1
   10a48:	bl	5440 <mpfr_init2@plt>
   10a4c:	sub	x0, x29, #0x20
   10a50:	mov	x1, x20
   10a54:	mov	w2, wzr
   10a58:	bl	5010 <mpfr_sqr@plt>
   10a5c:	add	x0, sp, #0x20
   10a60:	mov	x1, x19
   10a64:	mov	w2, wzr
   10a68:	bl	5010 <mpfr_sqr@plt>
   10a6c:	sub	x1, x29, #0x20
   10a70:	add	x2, sp, #0x20
   10a74:	mov	x0, x22
   10a78:	mov	w3, w21
   10a7c:	bl	4a60 <mpfr_sub@plt>
   10a80:	ldr	x8, [x22, #16]
   10a84:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10a88:	cmp	x8, x9
   10a8c:	b.ne	10afc <mpc_sqr@@Base+0x5c8>  // b.any
   10a90:	ldr	w8, [x22, #8]
   10a94:	mov	x0, x22
   10a98:	mov	x2, xzr
   10a9c:	mov	w3, wzr
   10aa0:	cmp	w8, #0x0
   10aa4:	mov	w8, #0x1                   	// #1
   10aa8:	cneg	x1, x8, lt  // lt = tstop
   10aac:	bl	49e0 <mpfr_set_si_2exp@plt>
   10ab0:	bl	5200 <mpfr_get_emax@plt>
   10ab4:	mov	x2, x0
   10ab8:	mov	x0, x22
   10abc:	mov	x1, x22
   10ac0:	mov	w3, w21
   10ac4:	bl	4f40 <mpfr_mul_2ui@plt>
   10ac8:	mov	w25, w0
   10acc:	sub	x0, x29, #0x20
   10ad0:	bl	4d60 <mpfr_clear@plt>
   10ad4:	add	x0, sp, #0x20
   10ad8:	bl	4d60 <mpfr_clear@plt>
   10adc:	mov	w0, w25
   10ae0:	ldp	x20, x19, [sp, #160]
   10ae4:	ldp	x22, x21, [sp, #144]
   10ae8:	ldp	x24, x23, [sp, #128]
   10aec:	ldp	x26, x25, [sp, #112]
   10af0:	ldp	x29, x30, [sp, #96]
   10af4:	add	sp, sp, #0xb0
   10af8:	ret
   10afc:	ldur	x9, [x29, #-16]
   10b00:	ldr	x10, [sp, #48]
   10b04:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   10b08:	mov	w25, w0
   10b0c:	cmp	x9, x11
   10b10:	b.ne	10b30 <mpc_sqr@@Base+0x5fc>  // b.any
   10b14:	cmp	x10, x11
   10b18:	b.eq	10b4c <mpc_sqr@@Base+0x618>  // b.none
   10b1c:	ldur	w8, [x29, #-24]
   10b20:	cmp	w8, #0x0
   10b24:	mov	w8, #0xffffffff            	// #-1
   10b28:	cneg	w25, w8, lt  // lt = tstop
   10b2c:	b	10acc <mpc_sqr@@Base+0x598>
   10b30:	cmp	x10, x11
   10b34:	b.ne	10b4c <mpc_sqr@@Base+0x618>  // b.any
   10b38:	ldr	w8, [sp, #40]
   10b3c:	cmp	w8, #0x0
   10b40:	mov	w8, #0x1                   	// #1
   10b44:	cneg	w25, w8, lt  // lt = tstop
   10b48:	b	10acc <mpc_sqr@@Base+0x598>
   10b4c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   10b50:	mov	x26, #0x2                   	// #2
   10b54:	cmp	x9, x11
   10b58:	movk	x26, #0x8000, lsl #48
   10b5c:	cset	w9, eq  // eq = none
   10b60:	cmp	x10, x11
   10b64:	cset	w10, eq  // eq = none
   10b68:	cmp	x8, x26
   10b6c:	b.eq	10b78 <mpc_sqr@@Base+0x644>  // b.none
   10b70:	and	w8, w9, w10
   10b74:	cbz	w8, 10acc <mpc_sqr@@Base+0x598>
   10b78:	ldr	x24, [x20, #16]
   10b7c:	ldr	x23, [x19, #16]
   10b80:	mov	x0, x20
   10b84:	mov	x1, xzr
   10b88:	bl	4c10 <mpfr_set_exp@plt>
   10b8c:	mov	x0, x19
   10b90:	mov	x1, xzr
   10b94:	bl	4c10 <mpfr_set_exp@plt>
   10b98:	add	x0, sp, #0x10
   10b9c:	bl	54a0 <__gmpz_init@plt>
   10ba0:	mov	x0, sp
   10ba4:	bl	54a0 <__gmpz_init@plt>
   10ba8:	add	x0, sp, #0x10
   10bac:	mov	x1, x24
   10bb0:	bl	54c0 <__gmpz_set_si@plt>
   10bb4:	add	x0, sp, #0x10
   10bb8:	add	x1, sp, #0x10
   10bbc:	mov	w2, #0x1                   	// #1
   10bc0:	bl	4e90 <__gmpz_mul_2exp@plt>
   10bc4:	mov	x0, sp
   10bc8:	mov	x1, x23
   10bcc:	bl	54c0 <__gmpz_set_si@plt>
   10bd0:	mov	x0, sp
   10bd4:	mov	x1, sp
   10bd8:	mov	w2, #0x1                   	// #1
   10bdc:	bl	4e90 <__gmpz_mul_2exp@plt>
   10be0:	sub	x0, x29, #0x20
   10be4:	mov	x1, x20
   10be8:	mov	w2, wzr
   10bec:	bl	5010 <mpfr_sqr@plt>
   10bf0:	ldur	x8, [x29, #-16]
   10bf4:	add	x0, sp, #0x10
   10bf8:	add	x1, sp, #0x10
   10bfc:	neg	x2, x8
   10c00:	bl	4ad0 <__gmpz_sub_ui@plt>
   10c04:	sub	x0, x29, #0x20
   10c08:	mov	x1, xzr
   10c0c:	bl	4c10 <mpfr_set_exp@plt>
   10c10:	add	x0, sp, #0x20
   10c14:	mov	x1, x19
   10c18:	mov	w2, wzr
   10c1c:	bl	5010 <mpfr_sqr@plt>
   10c20:	ldr	x8, [sp, #48]
   10c24:	mov	x0, sp
   10c28:	mov	x1, sp
   10c2c:	neg	x2, x8
   10c30:	bl	4ad0 <__gmpz_sub_ui@plt>
   10c34:	add	x0, sp, #0x20
   10c38:	mov	x1, xzr
   10c3c:	bl	4c10 <mpfr_set_exp@plt>
   10c40:	ldr	x8, [x22, #16]
   10c44:	cmp	x8, x26
   10c48:	b.ne	10cb0 <mpc_sqr@@Base+0x77c>  // b.any
   10c4c:	bl	5200 <mpfr_get_emax@plt>
   10c50:	mov	x25, x0
   10c54:	add	x0, sp, #0x10
   10c58:	mov	x1, sp
   10c5c:	bl	5300 <__gmpz_cmp@plt>
   10c60:	tbnz	w0, #31, 10d1c <mpc_sqr@@Base+0x7e8>
   10c64:	sub	x0, x29, #0x20
   10c68:	mov	x1, x25
   10c6c:	bl	4c10 <mpfr_set_exp@plt>
   10c70:	add	x0, sp, #0x10
   10c74:	add	x1, sp, #0x10
   10c78:	mov	x2, x25
   10c7c:	bl	4ad0 <__gmpz_sub_ui@plt>
   10c80:	mov	x0, sp
   10c84:	mov	x1, sp
   10c88:	add	x2, sp, #0x10
   10c8c:	bl	4bc0 <__gmpz_sub@plt>
   10c90:	ldr	x8, [sp, #8]
   10c94:	ldr	w9, [sp, #4]
   10c98:	add	x0, sp, #0x20
   10c9c:	ldr	x8, [x8]
   10ca0:	cmp	w9, #0x0
   10ca4:	csel	x1, xzr, x8, eq  // eq = none
   10ca8:	bl	4c10 <mpfr_set_exp@plt>
   10cac:	b	10d70 <mpc_sqr@@Base+0x83c>
   10cb0:	bl	5060 <mpfr_get_emin@plt>
   10cb4:	mov	x25, x0
   10cb8:	add	x0, sp, #0x10
   10cbc:	mov	x1, sp
   10cc0:	bl	5300 <__gmpz_cmp@plt>
   10cc4:	cmp	w0, #0x0
   10cc8:	b.le	10db0 <mpc_sqr@@Base+0x87c>
   10ccc:	add	x0, sp, #0x20
   10cd0:	mov	x1, x25
   10cd4:	bl	4c10 <mpfr_set_exp@plt>
   10cd8:	neg	x2, x25
   10cdc:	mov	x0, sp
   10ce0:	mov	x1, sp
   10ce4:	bl	4fa0 <__gmpz_add_ui@plt>
   10ce8:	add	x0, sp, #0x10
   10cec:	add	x1, sp, #0x10
   10cf0:	mov	x2, sp
   10cf4:	bl	4bc0 <__gmpz_sub@plt>
   10cf8:	add	x0, sp, #0x10
   10cfc:	bl	49a0 <__gmpz_get_si@plt>
   10d00:	mov	x1, x0
   10d04:	sub	x0, x29, #0x20
   10d08:	bl	4c10 <mpfr_set_exp@plt>
   10d0c:	add	x0, sp, #0x10
   10d10:	mov	x1, sp
   10d14:	bl	4d00 <__gmpz_set@plt>
   10d18:	b	10df0 <mpc_sqr@@Base+0x8bc>
   10d1c:	add	x0, sp, #0x20
   10d20:	mov	x1, x25
   10d24:	bl	4c10 <mpfr_set_exp@plt>
   10d28:	mov	x0, sp
   10d2c:	mov	x1, sp
   10d30:	mov	x2, x25
   10d34:	bl	4ad0 <__gmpz_sub_ui@plt>
   10d38:	add	x0, sp, #0x10
   10d3c:	add	x1, sp, #0x10
   10d40:	mov	x2, sp
   10d44:	bl	4bc0 <__gmpz_sub@plt>
   10d48:	ldr	x8, [sp, #24]
   10d4c:	ldr	w9, [sp, #20]
   10d50:	sub	x0, x29, #0x20
   10d54:	ldr	x8, [x8]
   10d58:	cmp	w9, #0x0
   10d5c:	csel	x1, xzr, x8, eq  // eq = none
   10d60:	bl	4c10 <mpfr_set_exp@plt>
   10d64:	add	x0, sp, #0x10
   10d68:	mov	x1, sp
   10d6c:	bl	4d00 <__gmpz_set@plt>
   10d70:	sub	x1, x29, #0x20
   10d74:	add	x2, sp, #0x20
   10d78:	mov	x0, x22
   10d7c:	mov	w3, w21
   10d80:	bl	4a60 <mpfr_sub@plt>
   10d84:	ldr	x8, [sp, #24]
   10d88:	ldr	w9, [sp, #20]
   10d8c:	mov	w25, w0
   10d90:	mov	x0, x22
   10d94:	ldr	x8, [x8]
   10d98:	cmp	w9, #0x0
   10d9c:	mov	x1, x22
   10da0:	mov	w3, w21
   10da4:	csel	x2, xzr, x8, eq  // eq = none
   10da8:	bl	4f40 <mpfr_mul_2ui@plt>
   10dac:	b	10e34 <mpc_sqr@@Base+0x900>
   10db0:	sub	x0, x29, #0x20
   10db4:	mov	x1, x25
   10db8:	bl	4c10 <mpfr_set_exp@plt>
   10dbc:	neg	x2, x25
   10dc0:	add	x0, sp, #0x10
   10dc4:	add	x1, sp, #0x10
   10dc8:	bl	4fa0 <__gmpz_add_ui@plt>
   10dcc:	mov	x0, sp
   10dd0:	mov	x1, sp
   10dd4:	add	x2, sp, #0x10
   10dd8:	bl	4bc0 <__gmpz_sub@plt>
   10ddc:	mov	x0, sp
   10de0:	bl	49a0 <__gmpz_get_si@plt>
   10de4:	mov	x1, x0
   10de8:	add	x0, sp, #0x20
   10dec:	bl	4c10 <mpfr_set_exp@plt>
   10df0:	sub	x1, x29, #0x20
   10df4:	add	x2, sp, #0x20
   10df8:	mov	x0, x22
   10dfc:	mov	w3, w21
   10e00:	bl	4a60 <mpfr_sub@plt>
   10e04:	ldr	w8, [sp, #20]
   10e08:	ldr	x9, [sp, #24]
   10e0c:	mov	w25, w0
   10e10:	mov	x0, x22
   10e14:	neg	w10, w8
   10e18:	str	w10, [sp, #20]
   10e1c:	ldr	x9, [x9]
   10e20:	cmp	w8, #0x0
   10e24:	mov	x1, x22
   10e28:	mov	w3, w21
   10e2c:	csel	x2, xzr, x9, eq  // eq = none
   10e30:	bl	5320 <mpfr_div_2ui@plt>
   10e34:	cmp	w0, #0x0
   10e38:	csel	w25, w25, w0, eq  // eq = none
   10e3c:	add	x0, sp, #0x10
   10e40:	bl	5180 <__gmpz_clear@plt>
   10e44:	mov	x0, sp
   10e48:	bl	5180 <__gmpz_clear@plt>
   10e4c:	mov	x0, x20
   10e50:	mov	x1, x24
   10e54:	bl	4c10 <mpfr_set_exp@plt>
   10e58:	mov	x0, x19
   10e5c:	mov	x1, x23
   10e60:	bl	4c10 <mpfr_set_exp@plt>
   10e64:	b	10acc <mpc_sqr@@Base+0x598>

0000000000010e68 <mpc_sqrt@@Base>:
   10e68:	sub	sp, sp, #0xf0
   10e6c:	stp	x24, x23, [sp, #192]
   10e70:	mov	x24, x0
   10e74:	mov	x0, x1
   10e78:	stp	x29, x30, [sp, #144]
   10e7c:	stp	x28, x27, [sp, #160]
   10e80:	stp	x26, x25, [sp, #176]
   10e84:	stp	x22, x21, [sp, #208]
   10e88:	stp	x20, x19, [sp, #224]
   10e8c:	add	x29, sp, #0x90
   10e90:	mov	w28, w2
   10e94:	mov	x26, x1
   10e98:	bl	51f0 <mpfr_sgn@plt>
   10e9c:	mov	w25, w0
   10ea0:	add	x0, x26, #0x20
   10ea4:	str	x0, [sp, #72]
   10ea8:	bl	51f0 <mpfr_sgn@plt>
   10eac:	ldr	w20, [x26, #40]
   10eb0:	mov	w27, w0
   10eb4:	mov	w8, #0x2                   	// #2
   10eb8:	mov	x0, x26
   10ebc:	cmp	w20, #0x0
   10ec0:	cinc	w22, w8, lt  // lt = tstop
   10ec4:	bl	54d0 <mpfr_number_p@plt>
   10ec8:	cbz	w0, 10f48 <mpc_sqrt@@Base+0xe0>
   10ecc:	ldr	x0, [sp, #72]
   10ed0:	bl	54d0 <mpfr_number_p@plt>
   10ed4:	cbz	w0, 10f48 <mpc_sqrt@@Base+0xe0>
   10ed8:	cbz	w27, 10fd8 <mpc_sqrt@@Base+0x170>
   10edc:	cbz	w25, 11030 <mpc_sqrt@@Base+0x1c8>
   10ee0:	mov	x10, x24
   10ee4:	ldr	x8, [x24]
   10ee8:	ldr	x9, [x10, #32]!
   10eec:	sub	x0, x29, #0x20
   10ef0:	cmp	x8, x9
   10ef4:	str	x10, [sp, #16]
   10ef8:	csel	x23, x8, x9, gt
   10efc:	bl	4aa0 <mpfr_init@plt>
   10f00:	sub	x0, x29, #0x40
   10f04:	bl	4aa0 <mpfr_init@plt>
   10f08:	mov	w21, w25
   10f0c:	cmp	w25, #0x1
   10f10:	asr	w14, w28, #4
   10f14:	str	x24, [sp, #8]
   10f18:	stp	w14, w27, [sp]
   10f1c:	str	w28, [sp, #28]
   10f20:	b.lt	110ac <mpc_sqrt@@Base+0x244>  // b.tstop
   10f24:	and	w13, w28, #0xf
   10f28:	ldr	x28, [x24]
   10f2c:	ldr	x12, [x24, #32]
   10f30:	cmp	w27, #0x0
   10f34:	mov	w8, #0x2                   	// #2
   10f38:	cinc	w8, w8, gt
   10f3c:	cmp	w14, #0x1
   10f40:	csel	w9, w8, w14, eq  // eq = none
   10f44:	b	11214 <mpc_sqrt@@Base+0x3ac>
   10f48:	ldr	x8, [x26, #48]
   10f4c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10f50:	asr	w19, w20, #31
   10f54:	cmp	x8, x9
   10f58:	b.ne	10f7c <mpc_sqrt@@Base+0x114>  // b.any
   10f5c:	mov	w1, #0x1                   	// #1
   10f60:	mov	x0, x24
   10f64:	bl	5120 <mpfr_set_inf@plt>
   10f68:	add	x0, x24, #0x20
   10f6c:	mov	w1, w19
   10f70:	bl	5120 <mpfr_set_inf@plt>
   10f74:	mov	w0, wzr
   10f78:	b	1173c <mpc_sqrt@@Base+0x8d4>
   10f7c:	ldr	x9, [x26, #16]
   10f80:	mov	x10, #0x2                   	// #2
   10f84:	movk	x10, #0x8000, lsl #48
   10f88:	cmp	x9, x10
   10f8c:	b.eq	11094 <mpc_sqrt@@Base+0x22c>  // b.none
   10f90:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   10f94:	cmp	x9, x10
   10f98:	b.ne	11084 <mpc_sqrt@@Base+0x21c>  // b.any
   10f9c:	ldr	x0, [sp, #72]
   10fa0:	ldr	w21, [x26, #8]
   10fa4:	bl	54d0 <mpfr_number_p@plt>
   10fa8:	tbnz	w21, #31, 111c4 <mpc_sqrt@@Base+0x35c>
   10fac:	cbz	w0, 11544 <mpc_sqrt@@Base+0x6dc>
   10fb0:	mov	w1, #0x1                   	// #1
   10fb4:	mov	x0, x24
   10fb8:	mov	w19, #0x1                   	// #1
   10fbc:	bl	5120 <mpfr_set_inf@plt>
   10fc0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   10fc4:	str	w19, [x24, #40]
   10fc8:	str	x8, [x24, #48]
   10fcc:	tbnz	w20, #31, 110f4 <mpc_sqrt@@Base+0x28c>
   10fd0:	mov	w0, wzr
   10fd4:	b	1173c <mpc_sqrt@@Base+0x8d4>
   10fd8:	cbz	w25, 110d8 <mpc_sqrt@@Base+0x270>
   10fdc:	cmp	w25, #0x1
   10fe0:	b.lt	1110c <mpc_sqrt@@Base+0x2a4>  // b.tstop
   10fe4:	and	w2, w28, #0xf
   10fe8:	mov	x0, x24
   10fec:	mov	x1, x26
   10ff0:	bl	5350 <mpfr_sqrt@plt>
   10ff4:	mov	w19, w0
   10ff8:	mov	w8, #0x1                   	// #1
   10ffc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   11000:	str	w8, [x24, #40]
   11004:	str	x9, [x24, #48]
   11008:	tbz	w20, #31, 1101c <mpc_sqrt@@Base+0x1b4>
   1100c:	mov	x0, x24
   11010:	mov	x1, x24
   11014:	mov	w2, wzr
   11018:	bl	4f60 <mpc_conj@plt>
   1101c:	cmp	w19, #0x0
   11020:	cset	w8, ne  // ne = any
   11024:	mov	w9, #0x2                   	// #2
   11028:	csel	w0, w9, w8, lt  // lt = tstop
   1102c:	b	1173c <mpc_sqrt@@Base+0x8d4>
   11030:	ldr	x8, [sp, #72]
   11034:	sub	x0, x29, #0x20
   11038:	sub	x1, x29, #0x20
   1103c:	mov	w2, #0x1                   	// #1
   11040:	ldp	q1, q0, [x8]
   11044:	mov	w3, wzr
   11048:	stp	q1, q0, [x29, #-32]
   1104c:	bl	5320 <mpfr_div_2ui@plt>
   11050:	cmp	w27, #0x1
   11054:	b.lt	11148 <mpc_sqrt@@Base+0x2e0>  // b.tstop
   11058:	and	w2, w28, #0xf
   1105c:	sub	x1, x29, #0x20
   11060:	mov	x0, x24
   11064:	bl	5350 <mpfr_sqrt@plt>
   11068:	mov	w19, w0
   1106c:	add	x0, x24, #0x20
   11070:	asr	w2, w28, #4
   11074:	sub	x1, x29, #0x20
   11078:	bl	5350 <mpfr_sqrt@plt>
   1107c:	mov	w20, w0
   11080:	b	111ac <mpc_sqrt@@Base+0x344>
   11084:	mov	x9, #0x2                   	// #2
   11088:	movk	x9, #0x8000, lsl #48
   1108c:	cmp	x8, x9
   11090:	b.ne	10ed8 <mpc_sqrt@@Base+0x70>  // b.any
   11094:	mov	x0, x24
   11098:	bl	4a40 <mpfr_set_nan@plt>
   1109c:	add	x0, x24, #0x20
   110a0:	bl	4a40 <mpfr_set_nan@plt>
   110a4:	mov	w0, wzr
   110a8:	b	1173c <mpc_sqrt@@Base+0x8d4>
   110ac:	ldr	x28, [x24, #32]
   110b0:	ldr	x12, [x24]
   110b4:	cmp	w27, #0x1
   110b8:	b.lt	111dc <mpc_sqrt@@Base+0x374>  // b.tstop
   110bc:	ldr	w8, [sp, #28]
   110c0:	mov	w9, #0x3                   	// #3
   110c4:	mov	w13, w14
   110c8:	and	w8, w8, #0xf
   110cc:	cmp	w8, #0x1
   110d0:	csel	w9, w9, w8, eq  // eq = none
   110d4:	b	11214 <mpc_sqrt@@Base+0x3ac>
   110d8:	mov	x0, x24
   110dc:	mov	x1, xzr
   110e0:	mov	x2, xzr
   110e4:	mov	w3, wzr
   110e8:	bl	5040 <mpc_set_ui_ui@plt>
   110ec:	mov	w0, wzr
   110f0:	tbz	w20, #31, 1173c <mpc_sqrt@@Base+0x8d4>
   110f4:	mov	x0, x24
   110f8:	mov	x1, x24
   110fc:	mov	w2, wzr
   11100:	bl	4f60 <mpc_conj@plt>
   11104:	mov	w0, wzr
   11108:	b	1173c <mpc_sqrt@@Base+0x8d4>
   1110c:	ldr	x1, [x26]
   11110:	sub	x0, x29, #0x20
   11114:	bl	5440 <mpfr_init2@plt>
   11118:	sub	x0, x29, #0x20
   1111c:	mov	x1, x26
   11120:	mov	w2, wzr
   11124:	bl	4b80 <mpfr_neg@plt>
   11128:	add	x19, x24, #0x20
   1112c:	asr	w2, w28, #4
   11130:	tbnz	w20, #31, 11594 <mpc_sqrt@@Base+0x72c>
   11134:	sub	x1, x29, #0x20
   11138:	mov	x0, x19
   1113c:	bl	5350 <mpfr_sqrt@plt>
   11140:	mov	w20, w0
   11144:	b	115cc <mpc_sqrt@@Base+0x764>
   11148:	sub	x0, x29, #0x20
   1114c:	sub	x1, x29, #0x20
   11150:	mov	w2, wzr
   11154:	bl	4b80 <mpfr_neg@plt>
   11158:	and	w2, w28, #0xf
   1115c:	sub	x1, x29, #0x20
   11160:	mov	x0, x24
   11164:	bl	5350 <mpfr_sqrt@plt>
   11168:	asr	w8, w28, #4
   1116c:	mov	w9, #0x2                   	// #2
   11170:	cmp	w8, #0x3
   11174:	add	x21, x24, #0x20
   11178:	csel	w9, w9, w8, eq  // eq = none
   1117c:	cmp	w8, #0x2
   11180:	mov	w8, #0x3                   	// #3
   11184:	mov	w19, w0
   11188:	csel	w2, w8, w9, eq  // eq = none
   1118c:	sub	x1, x29, #0x20
   11190:	mov	x0, x21
   11194:	bl	5350 <mpfr_sqrt@plt>
   11198:	neg	w20, w0
   1119c:	mov	x0, x21
   111a0:	mov	x1, x21
   111a4:	mov	w2, wzr
   111a8:	bl	4b80 <mpfr_neg@plt>
   111ac:	cmp	w19, #0x0
   111b0:	mov	w8, #0x2                   	// #2
   111b4:	cset	w9, ne  // ne = any
   111b8:	csel	w8, w8, w9, lt  // lt = tstop
   111bc:	cmp	w20, #0x0
   111c0:	b	11728 <mpc_sqrt@@Base+0x8c0>
   111c4:	cbz	w0, 115fc <mpc_sqrt@@Base+0x794>
   111c8:	mov	w8, #0x1                   	// #1
   111cc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   111d0:	str	w8, [x24, #8]
   111d4:	str	x9, [x24, #16]
   111d8:	b	10f68 <mpc_sqrt@@Base+0x100>
   111dc:	ldr	w10, [sp, #28]
   111e0:	cmp	w14, #0x3
   111e4:	mov	w8, #0x2                   	// #2
   111e8:	mov	w9, #0x3                   	// #3
   111ec:	and	w10, w10, #0xf
   111f0:	csel	w11, w8, w14, eq  // eq = none
   111f4:	cmp	w14, #0x2
   111f8:	csel	w13, w9, w11, eq  // eq = none
   111fc:	cmp	w10, #0x3
   11200:	csel	w11, w8, w10, eq  // eq = none
   11204:	cmp	w10, #0x2
   11208:	csel	w9, w9, w11, eq  // eq = none
   1120c:	cmp	w9, #0x1
   11210:	csel	w9, w8, w9, eq  // eq = none
   11214:	cmp	w13, #0x0
   11218:	mov	w8, #0xffffffff            	// #-1
   1121c:	cinc	x10, x28, eq  // eq = none
   11220:	cmp	w20, #0x0
   11224:	cneg	w8, w8, ge  // ge = tcont
   11228:	cmp	w9, #0x0
   1122c:	mov	w27, wzr
   11230:	stp	w9, w8, [sp, #40]
   11234:	cinc	x8, x12, eq  // eq = none
   11238:	str	w13, [sp, #60]
   1123c:	str	x10, [sp, #48]
   11240:	str	x12, [sp, #64]
   11244:	str	x8, [sp, #32]
   11248:	b	11268 <mpc_sqrt@@Base+0x400>
   1124c:	ldr	x4, [sp, #32]
   11250:	sub	x0, x29, #0x40
   11254:	mov	w3, #0x1                   	// #1
   11258:	mov	w2, w22
   1125c:	bl	5450 <mpfr_can_round@plt>
   11260:	cbz	w24, 11410 <mpc_sqrt@@Base+0x5a8>
   11264:	cbnz	w0, 11410 <mpc_sqrt@@Base+0x5a8>
   11268:	cmp	w27, #0x1
   1126c:	b.hi	11280 <mpc_sqrt@@Base+0x418>  // b.pmore
   11270:	mov	x0, x23
   11274:	bl	4d20 <mpc_ceil_log2@plt>
   11278:	add	x8, x0, #0x4
   1127c:	b	1128c <mpc_sqrt@@Base+0x424>
   11280:	cmp	x23, #0x0
   11284:	cinc	x8, x23, lt  // lt = tstop
   11288:	asr	x8, x8, #1
   1128c:	add	x23, x8, x23
   11290:	sub	x0, x29, #0x20
   11294:	mov	x1, x23
   11298:	bl	4c80 <mpfr_set_prec@plt>
   1129c:	sub	x0, x29, #0x40
   112a0:	mov	x1, x23
   112a4:	bl	4c80 <mpfr_set_prec@plt>
   112a8:	sub	x0, x29, #0x20
   112ac:	mov	w2, #0x3                   	// #3
   112b0:	mov	x1, x26
   112b4:	bl	51a0 <mpc_abs@plt>
   112b8:	mov	w19, w0
   112bc:	sub	x0, x29, #0x20
   112c0:	sub	x1, x29, #0x20
   112c4:	mov	w3, #0x3                   	// #3
   112c8:	mov	x2, x26
   112cc:	tbnz	w21, #31, 112d8 <mpc_sqrt@@Base+0x470>
   112d0:	bl	4e60 <mpfr_add@plt>
   112d4:	b	112dc <mpc_sqrt@@Base+0x474>
   112d8:	bl	4a60 <mpfr_sub@plt>
   112dc:	orr	w19, w0, w19
   112e0:	sub	x0, x29, #0x20
   112e4:	sub	x1, x29, #0x20
   112e8:	mov	w2, #0x1                   	// #1
   112ec:	mov	w3, #0x3                   	// #3
   112f0:	add	w27, w27, #0x1
   112f4:	bl	5320 <mpfr_div_2ui@plt>
   112f8:	orr	w19, w19, w0
   112fc:	sub	x0, x29, #0x20
   11300:	sub	x1, x29, #0x20
   11304:	mov	w2, #0x3                   	// #3
   11308:	bl	5350 <mpfr_sqrt@plt>
   1130c:	orr	w25, w19, w0
   11310:	sub	x0, x29, #0x20
   11314:	bl	5390 <mpfr_min_prec@plt>
   11318:	mov	x19, x0
   1131c:	cmp	x0, x28
   11320:	sub	x1, x23, #0x2
   11324:	b.gt	1134c <mpc_sqrt@@Base+0x4e4>
   11328:	ldr	w8, [sp, #60]
   1132c:	cbz	w8, 11368 <mpc_sqrt@@Base+0x500>
   11330:	sub	x0, x29, #0x20
   11334:	mov	w2, #0x3                   	// #3
   11338:	mov	w3, #0x3                   	// #3
   1133c:	mov	x4, x28
   11340:	bl	5450 <mpfr_can_round@plt>
   11344:	cbnz	w25, 11380 <mpc_sqrt@@Base+0x518>
   11348:	b	11384 <mpc_sqrt@@Base+0x51c>
   1134c:	ldr	x4, [sp, #48]
   11350:	sub	x0, x29, #0x20
   11354:	mov	w2, #0x3                   	// #3
   11358:	mov	w3, #0x2                   	// #2
   1135c:	bl	5450 <mpfr_can_round@plt>
   11360:	cbnz	w25, 11380 <mpc_sqrt@@Base+0x518>
   11364:	b	11384 <mpc_sqrt@@Base+0x51c>
   11368:	sub	x0, x29, #0x20
   1136c:	mov	w2, #0x3                   	// #3
   11370:	mov	w3, wzr
   11374:	mov	x4, x28
   11378:	bl	5450 <mpfr_can_round@plt>
   1137c:	cbz	w25, 11384 <mpc_sqrt@@Base+0x51c>
   11380:	cbz	w0, 11268 <mpc_sqrt@@Base+0x400>
   11384:	ldr	x1, [sp, #72]
   11388:	sub	x0, x29, #0x40
   1138c:	sub	x2, x29, #0x20
   11390:	mov	w3, w22
   11394:	bl	5150 <mpfr_div@plt>
   11398:	ldr	w8, [sp, #44]
   1139c:	cmp	w0, #0x0
   113a0:	ccmp	w25, #0x0, #0x4, eq  // eq = none
   113a4:	sub	x1, x29, #0x40
   113a8:	csel	w20, w8, w0, ne  // ne = any
   113ac:	sub	x0, x29, #0x40
   113b0:	mov	w2, #0x1                   	// #1
   113b4:	mov	w3, w22
   113b8:	bl	5320 <mpfr_div_2ui@plt>
   113bc:	orr	w24, w20, w0
   113c0:	sub	x0, x29, #0x40
   113c4:	bl	5390 <mpfr_min_prec@plt>
   113c8:	ldr	x4, [sp, #64]
   113cc:	mov	x20, x0
   113d0:	sub	x1, x23, #0x3
   113d4:	cmp	x0, x4
   113d8:	b.gt	1124c <mpc_sqrt@@Base+0x3e4>
   113dc:	ldr	w8, [sp, #40]
   113e0:	cbz	w8, 113fc <mpc_sqrt@@Base+0x594>
   113e4:	sub	x0, x29, #0x40
   113e8:	mov	w2, w22
   113ec:	mov	w3, w22
   113f0:	bl	5450 <mpfr_can_round@plt>
   113f4:	cbnz	w24, 11264 <mpc_sqrt@@Base+0x3fc>
   113f8:	b	11410 <mpc_sqrt@@Base+0x5a8>
   113fc:	sub	x0, x29, #0x40
   11400:	mov	w2, w22
   11404:	mov	w3, wzr
   11408:	bl	5450 <mpfr_can_round@plt>
   1140c:	cbnz	w24, 11264 <mpc_sqrt@@Base+0x3fc>
   11410:	cmp	w21, #0x1
   11414:	b.lt	11454 <mpc_sqrt@@Base+0x5ec>  // b.tstop
   11418:	ldr	w8, [sp, #28]
   1141c:	ldr	x26, [sp, #8]
   11420:	ldur	w3, [x29, #-24]
   11424:	sub	x1, x29, #0x20
   11428:	and	w2, w8, #0xf
   1142c:	mov	x0, x26
   11430:	bl	51d0 <mpfr_set4@plt>
   11434:	ldur	w3, [x29, #-56]
   11438:	mov	w27, w0
   1143c:	ldr	x0, [sp, #16]
   11440:	ldr	w2, [sp]
   11444:	sub	x1, x29, #0x40
   11448:	bl	51d0 <mpfr_set4@plt>
   1144c:	ldr	w10, [sp, #4]
   11450:	b	114c4 <mpc_sqrt@@Base+0x65c>
   11454:	ldr	w9, [sp, #4]
   11458:	ldr	w8, [sp, #28]
   1145c:	ldr	x26, [sp, #8]
   11460:	cmp	w9, #0x1
   11464:	and	w2, w8, #0xf
   11468:	b.lt	1149c <mpc_sqrt@@Base+0x634>  // b.tstop
   1146c:	ldur	w3, [x29, #-56]
   11470:	sub	x1, x29, #0x40
   11474:	mov	x0, x26
   11478:	mov	w23, w9
   1147c:	bl	51d0 <mpfr_set4@plt>
   11480:	ldur	w3, [x29, #-24]
   11484:	mov	w27, w0
   11488:	ldr	x0, [sp, #16]
   1148c:	ldr	w2, [sp]
   11490:	sub	x1, x29, #0x20
   11494:	bl	51d0 <mpfr_set4@plt>
   11498:	b	114c0 <mpc_sqrt@@Base+0x658>
   1149c:	sub	x1, x29, #0x40
   114a0:	mov	x0, x26
   114a4:	mov	w23, w9
   114a8:	bl	4b80 <mpfr_neg@plt>
   114ac:	mov	w27, w0
   114b0:	ldr	x0, [sp, #16]
   114b4:	ldr	w2, [sp]
   114b8:	sub	x1, x29, #0x20
   114bc:	bl	4b80 <mpfr_neg@plt>
   114c0:	mov	w10, w23
   114c4:	mov	w23, w0
   114c8:	ldr	x8, [sp, #64]
   114cc:	ldr	w9, [sp, #60]
   114d0:	cmp	x19, x28
   114d4:	b.gt	11518 <mpc_sqrt@@Base+0x6b0>
   114d8:	ldr	w19, [sp, #40]
   114dc:	cbz	w25, 11524 <mpc_sqrt@@Base+0x6bc>
   114e0:	cbz	w9, 1152c <mpc_sqrt@@Base+0x6c4>
   114e4:	cmp	w21, #0x1
   114e8:	b.lt	11558 <mpc_sqrt@@Base+0x6f0>  // b.tstop
   114ec:	cmp	w9, #0x2
   114f0:	b.ne	1158c <mpc_sqrt@@Base+0x724>  // b.any
   114f4:	ldr	x8, [x26, #16]
   114f8:	mov	x9, #0x2                   	// #2
   114fc:	movk	x9, #0x8000, lsl #48
   11500:	mov	w27, w10
   11504:	cmp	x8, x9
   11508:	b.gt	11608 <mpc_sqrt@@Base+0x7a0>
   1150c:	b.ne	11620 <mpc_sqrt@@Base+0x7b8>  // b.any
   11510:	bl	4b00 <mpfr_set_erangeflag@plt>
   11514:	b	11620 <mpc_sqrt@@Base+0x7b8>
   11518:	ldr	w19, [sp, #40]
   1151c:	mov	w25, w27
   11520:	b	116d8 <mpc_sqrt@@Base+0x870>
   11524:	mov	w25, w27
   11528:	b	116d8 <mpc_sqrt@@Base+0x870>
   1152c:	cmp	w21, #0x0
   11530:	b.gt	116d8 <mpc_sqrt@@Base+0x870>
   11534:	cmp	w10, #0x0
   11538:	cneg	w23, w25, le
   1153c:	mov	w25, w27
   11540:	b	116d8 <mpc_sqrt@@Base+0x870>
   11544:	mov	x0, x24
   11548:	mov	x1, x26
   1154c:	mov	w2, w28
   11550:	bl	5580 <mpc_set@plt>
   11554:	b	1173c <mpc_sqrt@@Base+0x8d4>
   11558:	cmp	w10, #0x1
   1155c:	b.lt	11638 <mpc_sqrt@@Base+0x7d0>  // b.tstop
   11560:	cmp	w9, #0x2
   11564:	b.ne	11664 <mpc_sqrt@@Base+0x7fc>  // b.any
   11568:	ldr	x8, [x26, #48]
   1156c:	mov	x9, #0x2                   	// #2
   11570:	movk	x9, #0x8000, lsl #48
   11574:	mov	w28, w10
   11578:	cmp	x8, x9
   1157c:	b.gt	1167c <mpc_sqrt@@Base+0x814>
   11580:	b.ne	11698 <mpc_sqrt@@Base+0x830>  // b.any
   11584:	bl	4b00 <mpfr_set_erangeflag@plt>
   11588:	b	11698 <mpc_sqrt@@Base+0x830>
   1158c:	mov	w25, #0xffffffff            	// #-1
   11590:	b	116d8 <mpc_sqrt@@Base+0x870>
   11594:	cmp	w2, #0x3
   11598:	mov	w8, #0x2                   	// #2
   1159c:	csel	w8, w8, w2, eq  // eq = none
   115a0:	cmp	w2, #0x2
   115a4:	mov	w9, #0x3                   	// #3
   115a8:	csel	w2, w9, w8, eq  // eq = none
   115ac:	sub	x1, x29, #0x20
   115b0:	mov	x0, x19
   115b4:	bl	5350 <mpfr_sqrt@plt>
   115b8:	neg	w20, w0
   115bc:	mov	x0, x19
   115c0:	mov	x1, x19
   115c4:	mov	w2, wzr
   115c8:	bl	4b80 <mpfr_neg@plt>
   115cc:	mov	w8, #0x1                   	// #1
   115d0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   115d4:	sub	x0, x29, #0x20
   115d8:	str	w8, [x24, #8]
   115dc:	str	x9, [x24, #16]
   115e0:	bl	4d60 <mpfr_clear@plt>
   115e4:	cmp	w20, #0x0
   115e8:	cset	w8, ne  // ne = any
   115ec:	lsl	w8, w8, #2
   115f0:	mov	w9, #0x8                   	// #8
   115f4:	csel	w0, w9, w8, lt  // lt = tstop
   115f8:	b	1173c <mpc_sqrt@@Base+0x8d4>
   115fc:	mov	x0, x24
   11600:	bl	4a40 <mpfr_set_nan@plt>
   11604:	b	10f68 <mpc_sqrt@@Base+0x100>
   11608:	ldr	w8, [x26, #8]
   1160c:	cmp	w8, #0x1
   11610:	b.lt	11620 <mpc_sqrt@@Base+0x7b8>  // b.tstop
   11614:	mov	x0, x26
   11618:	bl	4e00 <mpfr_nextabove@plt>
   1161c:	b	11628 <mpc_sqrt@@Base+0x7c0>
   11620:	mov	x0, x26
   11624:	bl	4bb0 <mpfr_nextbelow@plt>
   11628:	ldr	x8, [sp, #64]
   1162c:	mov	w25, #0x1                   	// #1
   11630:	mov	w10, w27
   11634:	b	116d8 <mpc_sqrt@@Base+0x870>
   11638:	cmp	w9, #0x2
   1163c:	b.ne	11670 <mpc_sqrt@@Base+0x808>  // b.any
   11640:	ldr	x8, [x26, #48]
   11644:	mov	x9, #0x2                   	// #2
   11648:	movk	x9, #0x8000, lsl #48
   1164c:	mov	w28, w10
   11650:	cmp	x8, x9
   11654:	b.gt	116a8 <mpc_sqrt@@Base+0x840>
   11658:	b.ne	116c0 <mpc_sqrt@@Base+0x858>  // b.any
   1165c:	bl	4b00 <mpfr_set_erangeflag@plt>
   11660:	b	116c0 <mpc_sqrt@@Base+0x858>
   11664:	mov	w23, #0xffffffff            	// #-1
   11668:	mov	w25, w27
   1166c:	b	116d8 <mpc_sqrt@@Base+0x870>
   11670:	mov	w23, #0x1                   	// #1
   11674:	mov	w25, w27
   11678:	b	116d8 <mpc_sqrt@@Base+0x870>
   1167c:	ldr	w8, [x26, #40]
   11680:	cmp	w8, #0x1
   11684:	b.lt	11698 <mpc_sqrt@@Base+0x830>  // b.tstop
   11688:	ldr	x0, [sp, #16]
   1168c:	bl	4e00 <mpfr_nextabove@plt>
   11690:	mov	w23, #0x1                   	// #1
   11694:	b	116cc <mpc_sqrt@@Base+0x864>
   11698:	ldr	x0, [sp, #16]
   1169c:	bl	4bb0 <mpfr_nextbelow@plt>
   116a0:	mov	w23, #0x1                   	// #1
   116a4:	b	116cc <mpc_sqrt@@Base+0x864>
   116a8:	ldr	w8, [x26, #40]
   116ac:	cmp	w8, #0x1
   116b0:	b.lt	116c0 <mpc_sqrt@@Base+0x858>  // b.tstop
   116b4:	ldr	x0, [sp, #16]
   116b8:	bl	4e00 <mpfr_nextabove@plt>
   116bc:	b	116c8 <mpc_sqrt@@Base+0x860>
   116c0:	ldr	x0, [sp, #16]
   116c4:	bl	4bb0 <mpfr_nextbelow@plt>
   116c8:	mov	w23, #0xffffffff            	// #-1
   116cc:	ldr	x8, [sp, #64]
   116d0:	mov	w25, w27
   116d4:	mov	w10, w28
   116d8:	cmp	x20, x8
   116dc:	b.gt	11700 <mpc_sqrt@@Base+0x898>
   116e0:	cbz	w24, 11700 <mpc_sqrt@@Base+0x898>
   116e4:	cbz	w19, 1175c <mpc_sqrt@@Base+0x8f4>
   116e8:	cmp	w21, #0x1
   116ec:	b.lt	11778 <mpc_sqrt@@Base+0x910>  // b.tstop
   116f0:	cmp	w19, w22
   116f4:	b.ne	117ac <mpc_sqrt@@Base+0x944>  // b.any
   116f8:	mov	w19, w24
   116fc:	b	11704 <mpc_sqrt@@Base+0x89c>
   11700:	mov	w19, w23
   11704:	sub	x0, x29, #0x20
   11708:	bl	4d60 <mpfr_clear@plt>
   1170c:	sub	x0, x29, #0x40
   11710:	bl	4d60 <mpfr_clear@plt>
   11714:	cmp	w25, #0x0
   11718:	mov	w8, #0x2                   	// #2
   1171c:	cset	w9, ne  // ne = any
   11720:	csel	w8, w8, w9, lt  // lt = tstop
   11724:	cmp	w19, #0x0
   11728:	cset	w9, ne  // ne = any
   1172c:	lsl	w9, w9, #2
   11730:	mov	w10, #0x8                   	// #8
   11734:	csel	w9, w10, w9, lt  // lt = tstop
   11738:	orr	w0, w8, w9
   1173c:	ldp	x20, x19, [sp, #224]
   11740:	ldp	x22, x21, [sp, #208]
   11744:	ldp	x24, x23, [sp, #192]
   11748:	ldp	x26, x25, [sp, #176]
   1174c:	ldp	x28, x27, [sp, #160]
   11750:	ldp	x29, x30, [sp, #144]
   11754:	add	sp, sp, #0xf0
   11758:	ret
   1175c:	cmp	w21, #0x0
   11760:	mov	w19, w24
   11764:	b.gt	11704 <mpc_sqrt@@Base+0x89c>
   11768:	cmp	w10, #0x0
   1176c:	cneg	w25, w24, le
   11770:	mov	w19, w23
   11774:	b	11704 <mpc_sqrt@@Base+0x89c>
   11778:	cmp	w10, #0x1
   1177c:	b.lt	117f4 <mpc_sqrt@@Base+0x98c>  // b.tstop
   11780:	cmp	w19, w22
   11784:	b.eq	11874 <mpc_sqrt@@Base+0xa0c>  // b.none
   11788:	ldr	x8, [x26, #16]
   1178c:	mov	x9, #0x2                   	// #2
   11790:	movk	x9, #0x8000, lsl #48
   11794:	neg	w25, w24
   11798:	cmp	x8, x9
   1179c:	b.gt	11828 <mpc_sqrt@@Base+0x9c0>
   117a0:	b.ne	11844 <mpc_sqrt@@Base+0x9dc>  // b.any
   117a4:	bl	4b00 <mpfr_set_erangeflag@plt>
   117a8:	b	11844 <mpc_sqrt@@Base+0x9dc>
   117ac:	ldr	x8, [x26, #48]
   117b0:	mov	x9, #0x2                   	// #2
   117b4:	movk	x9, #0x8000, lsl #48
   117b8:	neg	w19, w24
   117bc:	cmp	x8, x9
   117c0:	b.gt	117d0 <mpc_sqrt@@Base+0x968>
   117c4:	b.ne	117e8 <mpc_sqrt@@Base+0x980>  // b.any
   117c8:	bl	4b00 <mpfr_set_erangeflag@plt>
   117cc:	b	117e8 <mpc_sqrt@@Base+0x980>
   117d0:	ldr	w8, [x26, #40]
   117d4:	cmp	w8, #0x1
   117d8:	b.lt	117e8 <mpc_sqrt@@Base+0x980>  // b.tstop
   117dc:	ldr	x0, [sp, #16]
   117e0:	bl	4bb0 <mpfr_nextbelow@plt>
   117e4:	b	11704 <mpc_sqrt@@Base+0x89c>
   117e8:	ldr	x0, [sp, #16]
   117ec:	bl	4e00 <mpfr_nextabove@plt>
   117f0:	b	11704 <mpc_sqrt@@Base+0x89c>
   117f4:	cmp	w19, w22
   117f8:	b.ne	11808 <mpc_sqrt@@Base+0x9a0>  // b.any
   117fc:	neg	w25, w24
   11800:	mov	w19, w23
   11804:	b	11704 <mpc_sqrt@@Base+0x89c>
   11808:	ldr	x8, [x26, #16]
   1180c:	mov	x9, #0x2                   	// #2
   11810:	movk	x9, #0x8000, lsl #48
   11814:	cmp	x8, x9
   11818:	b.gt	11854 <mpc_sqrt@@Base+0x9ec>
   1181c:	b.ne	1186c <mpc_sqrt@@Base+0xa04>  // b.any
   11820:	bl	4b00 <mpfr_set_erangeflag@plt>
   11824:	b	1186c <mpc_sqrt@@Base+0xa04>
   11828:	ldr	w8, [x26, #8]
   1182c:	cmp	w8, #0x1
   11830:	b.lt	11844 <mpc_sqrt@@Base+0x9dc>  // b.tstop
   11834:	mov	x0, x26
   11838:	bl	4bb0 <mpfr_nextbelow@plt>
   1183c:	mov	w19, w23
   11840:	b	11704 <mpc_sqrt@@Base+0x89c>
   11844:	mov	x0, x26
   11848:	bl	4e00 <mpfr_nextabove@plt>
   1184c:	mov	w19, w23
   11850:	b	11704 <mpc_sqrt@@Base+0x89c>
   11854:	ldr	w8, [x26, #8]
   11858:	cmp	w8, #0x1
   1185c:	b.lt	1186c <mpc_sqrt@@Base+0xa04>  // b.tstop
   11860:	mov	x0, x26
   11864:	bl	4bb0 <mpfr_nextbelow@plt>
   11868:	b	11874 <mpc_sqrt@@Base+0xa0c>
   1186c:	mov	x0, x26
   11870:	bl	4e00 <mpfr_nextabove@plt>
   11874:	mov	w19, w23
   11878:	mov	w25, w24
   1187c:	b	11704 <mpc_sqrt@@Base+0x89c>

0000000000011880 <mpc_strtoc@@Base>:
   11880:	stp	x29, x30, [sp, #-96]!
   11884:	stp	x22, x21, [sp, #64]
   11888:	stp	x20, x19, [sp, #80]
   1188c:	mov	x19, x2
   11890:	mov	x21, x1
   11894:	cmp	w3, #0x1
   11898:	mov	x20, x0
   1189c:	str	x27, [sp, #16]
   118a0:	stp	x26, x25, [sp, #32]
   118a4:	stp	x24, x23, [sp, #48]
   118a8:	mov	x29, sp
   118ac:	b.eq	11994 <mpc_strtoc@@Base+0x114>  // b.none
   118b0:	cbz	x21, 11994 <mpc_strtoc@@Base+0x114>
   118b4:	mov	w23, w3
   118b8:	cmp	w3, #0x24
   118bc:	b.gt	11994 <mpc_strtoc@@Base+0x114>
   118c0:	mov	w24, w4
   118c4:	bl	5170 <__ctype_b_loc@plt>
   118c8:	ldr	x8, [x0]
   118cc:	ldrb	w27, [x21]
   118d0:	mov	x25, x0
   118d4:	mov	x9, x21
   118d8:	ldrh	w10, [x8, x27, lsl #1]
   118dc:	tbz	w10, #13, 118f0 <mpc_strtoc@@Base+0x70>
   118e0:	mov	x9, x21
   118e4:	ldrb	w27, [x9, #1]!
   118e8:	ldrh	w10, [x8, x27, lsl #1]
   118ec:	tbnz	w10, #13, 118e4 <mpc_strtoc@@Base+0x64>
   118f0:	cmp	w27, #0x28
   118f4:	cinc	x22, x9, eq  // eq = none
   118f8:	and	w4, w24, #0xf
   118fc:	add	x2, x29, #0x18
   11900:	mov	x0, x20
   11904:	mov	x1, x22
   11908:	mov	w3, w23
   1190c:	bl	4ac0 <mpfr_strtofr@plt>
   11910:	ldr	x26, [x29, #24]
   11914:	cmp	x26, x22
   11918:	b.eq	11994 <mpc_strtoc@@Base+0x114>  // b.none
   1191c:	mov	w22, w0
   11920:	cmp	w27, #0x28
   11924:	b.ne	119cc <mpc_strtoc@@Base+0x14c>  // b.any
   11928:	ldr	x8, [x25]
   1192c:	ldrb	w9, [x26]
   11930:	ldrh	w9, [x8, x9, lsl #1]
   11934:	tbz	w9, #13, 11994 <mpc_strtoc@@Base+0x114>
   11938:	ldrb	w9, [x26, #1]!
   1193c:	ldrh	w9, [x8, x9, lsl #1]
   11940:	tbnz	w9, #13, 11938 <mpc_strtoc@@Base+0xb8>
   11944:	add	x0, x20, #0x20
   11948:	asr	w4, w24, #4
   1194c:	add	x2, x29, #0x18
   11950:	mov	x1, x26
   11954:	mov	w3, w23
   11958:	bl	4ac0 <mpfr_strtofr@plt>
   1195c:	ldr	x8, [x29, #24]
   11960:	cmp	x8, x26
   11964:	b.eq	11994 <mpc_strtoc@@Base+0x114>  // b.none
   11968:	ldr	x10, [x25]
   1196c:	ldrb	w9, [x8]
   11970:	ldrh	w11, [x10, x9, lsl #1]
   11974:	tbz	w11, #13, 11984 <mpc_strtoc@@Base+0x104>
   11978:	ldrb	w9, [x8, #1]!
   1197c:	ldrh	w11, [x10, x9, lsl #1]
   11980:	tbnz	w11, #13, 11978 <mpc_strtoc@@Base+0xf8>
   11984:	cmp	w9, #0x29
   11988:	b.ne	11994 <mpc_strtoc@@Base+0x114>  // b.any
   1198c:	add	x26, x8, #0x1
   11990:	b	119e0 <mpc_strtoc@@Base+0x160>
   11994:	cbz	x19, 1199c <mpc_strtoc@@Base+0x11c>
   11998:	str	x21, [x19]
   1199c:	mov	x0, x20
   119a0:	bl	4a40 <mpfr_set_nan@plt>
   119a4:	add	x0, x20, #0x20
   119a8:	bl	4a40 <mpfr_set_nan@plt>
   119ac:	mov	w0, #0xffffffff            	// #-1
   119b0:	ldp	x20, x19, [sp, #80]
   119b4:	ldp	x22, x21, [sp, #64]
   119b8:	ldp	x24, x23, [sp, #48]
   119bc:	ldp	x26, x25, [sp, #32]
   119c0:	ldr	x27, [sp, #16]
   119c4:	ldp	x29, x30, [sp], #96
   119c8:	ret
   119cc:	mov	w8, #0x1                   	// #1
   119d0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   119d4:	mov	w0, wzr
   119d8:	str	w8, [x20, #40]
   119dc:	str	x9, [x20, #48]
   119e0:	cbz	x19, 119e8 <mpc_strtoc@@Base+0x168>
   119e4:	str	x26, [x19]
   119e8:	cmp	w22, #0x0
   119ec:	mov	w8, #0x2                   	// #2
   119f0:	cset	w9, ne  // ne = any
   119f4:	csel	w8, w8, w9, lt  // lt = tstop
   119f8:	cmp	w0, #0x0
   119fc:	cset	w9, ne  // ne = any
   11a00:	lsl	w9, w9, #2
   11a04:	mov	w10, #0x8                   	// #8
   11a08:	csel	w9, w10, w9, lt  // lt = tstop
   11a0c:	orr	w0, w9, w8
   11a10:	b	119b0 <mpc_strtoc@@Base+0x130>

0000000000011a14 <mpc_sub@@Base>:
   11a14:	stp	x29, x30, [sp, #-64]!
   11a18:	stp	x20, x19, [sp, #48]
   11a1c:	mov	w19, w3
   11a20:	and	w3, w3, #0xf
   11a24:	str	x23, [sp, #16]
   11a28:	stp	x22, x21, [sp, #32]
   11a2c:	mov	x29, sp
   11a30:	mov	x20, x2
   11a34:	mov	x21, x1
   11a38:	mov	x22, x0
   11a3c:	bl	4a60 <mpfr_sub@plt>
   11a40:	mov	w23, w0
   11a44:	add	x0, x22, #0x20
   11a48:	add	x1, x21, #0x20
   11a4c:	add	x2, x20, #0x20
   11a50:	asr	w3, w19, #4
   11a54:	bl	4a60 <mpfr_sub@plt>
   11a58:	cmp	w23, #0x0
   11a5c:	mov	w8, #0x2                   	// #2
   11a60:	cset	w9, ne  // ne = any
   11a64:	csel	w8, w8, w9, lt  // lt = tstop
   11a68:	cmp	w0, #0x0
   11a6c:	cset	w9, ne  // ne = any
   11a70:	ldp	x20, x19, [sp, #48]
   11a74:	ldp	x22, x21, [sp, #32]
   11a78:	ldr	x23, [sp, #16]
   11a7c:	lsl	w9, w9, #2
   11a80:	mov	w10, #0x8                   	// #8
   11a84:	csel	w9, w10, w9, lt  // lt = tstop
   11a88:	orr	w0, w9, w8
   11a8c:	ldp	x29, x30, [sp], #64
   11a90:	ret

0000000000011a94 <mpc_sub_fr@@Base>:
   11a94:	stp	x29, x30, [sp, #-48]!
   11a98:	stp	x20, x19, [sp, #32]
   11a9c:	mov	w19, w3
   11aa0:	and	w3, w3, #0xf
   11aa4:	stp	x22, x21, [sp, #16]
   11aa8:	mov	x29, sp
   11aac:	mov	x20, x1
   11ab0:	mov	x21, x0
   11ab4:	bl	4a60 <mpfr_sub@plt>
   11ab8:	ldr	w3, [x20, #40]
   11abc:	mov	w22, w0
   11ac0:	add	x0, x21, #0x20
   11ac4:	add	x1, x20, #0x20
   11ac8:	asr	w2, w19, #4
   11acc:	bl	51d0 <mpfr_set4@plt>
   11ad0:	cmp	w22, #0x0
   11ad4:	mov	w8, #0x2                   	// #2
   11ad8:	cset	w9, ne  // ne = any
   11adc:	csel	w8, w8, w9, lt  // lt = tstop
   11ae0:	cmp	w0, #0x0
   11ae4:	cset	w9, ne  // ne = any
   11ae8:	ldp	x20, x19, [sp, #32]
   11aec:	ldp	x22, x21, [sp, #16]
   11af0:	lsl	w9, w9, #2
   11af4:	mov	w10, #0x8                   	// #8
   11af8:	csel	w9, w10, w9, lt  // lt = tstop
   11afc:	orr	w0, w9, w8
   11b00:	ldp	x29, x30, [sp], #48
   11b04:	ret

0000000000011b08 <mpc_sub_ui@@Base>:
   11b08:	stp	x29, x30, [sp, #-48]!
   11b0c:	stp	x20, x19, [sp, #32]
   11b10:	mov	w19, w3
   11b14:	and	w3, w3, #0xf
   11b18:	stp	x22, x21, [sp, #16]
   11b1c:	mov	x29, sp
   11b20:	mov	x20, x1
   11b24:	mov	x21, x0
   11b28:	bl	50f0 <mpfr_sub_ui@plt>
   11b2c:	ldr	w3, [x20, #40]
   11b30:	mov	w22, w0
   11b34:	add	x0, x21, #0x20
   11b38:	add	x1, x20, #0x20
   11b3c:	asr	w2, w19, #4
   11b40:	bl	51d0 <mpfr_set4@plt>
   11b44:	cmp	w22, #0x0
   11b48:	mov	w8, #0x2                   	// #2
   11b4c:	cset	w9, ne  // ne = any
   11b50:	csel	w8, w8, w9, lt  // lt = tstop
   11b54:	cmp	w0, #0x0
   11b58:	cset	w9, ne  // ne = any
   11b5c:	ldp	x20, x19, [sp, #32]
   11b60:	ldp	x22, x21, [sp, #16]
   11b64:	lsl	w9, w9, #2
   11b68:	mov	w10, #0x8                   	// #8
   11b6c:	csel	w9, w10, w9, lt  // lt = tstop
   11b70:	orr	w0, w9, w8
   11b74:	ldp	x29, x30, [sp], #48
   11b78:	ret

0000000000011b7c <mpc_swap@@Base>:
   11b7c:	stp	x29, x30, [sp, #-32]!
   11b80:	stp	x20, x19, [sp, #16]
   11b84:	mov	x29, sp
   11b88:	mov	x19, x1
   11b8c:	mov	x20, x0
   11b90:	bl	5090 <mpfr_swap@plt>
   11b94:	add	x0, x20, #0x20
   11b98:	add	x1, x19, #0x20
   11b9c:	ldp	x20, x19, [sp, #16]
   11ba0:	ldp	x29, x30, [sp], #32
   11ba4:	b	5090 <mpfr_swap@plt>

0000000000011ba8 <mpc_tan@@Base>:
   11ba8:	sub	sp, sp, #0x110
   11bac:	stp	x20, x19, [sp, #256]
   11bb0:	mov	x19, x0
   11bb4:	mov	x0, x1
   11bb8:	stp	x29, x30, [sp, #176]
   11bbc:	stp	x28, x27, [sp, #192]
   11bc0:	stp	x26, x25, [sp, #208]
   11bc4:	stp	x24, x23, [sp, #224]
   11bc8:	stp	x22, x21, [sp, #240]
   11bcc:	add	x29, sp, #0xb0
   11bd0:	mov	w20, w2
   11bd4:	mov	x21, x1
   11bd8:	bl	54d0 <mpfr_number_p@plt>
   11bdc:	cbz	w0, 11c3c <mpc_tan@@Base+0x94>
   11be0:	add	x22, x21, #0x20
   11be4:	mov	x0, x22
   11be8:	bl	54d0 <mpfr_number_p@plt>
   11bec:	cbz	w0, 11c3c <mpc_tan@@Base+0x94>
   11bf0:	ldr	x9, [x21, #16]
   11bf4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   11bf8:	cmp	x9, x8
   11bfc:	b.ne	11cb4 <mpc_tan@@Base+0x10c>  // b.any
   11c00:	ldr	w3, [x21, #8]
   11c04:	and	w2, w20, #0xf
   11c08:	mov	x0, x19
   11c0c:	mov	x1, x21
   11c10:	bl	51d0 <mpfr_set4@plt>
   11c14:	add	x0, x19, #0x20
   11c18:	asr	w2, w20, #4
   11c1c:	mov	x1, x22
   11c20:	bl	4a30 <mpfr_tanh@plt>
   11c24:	cmp	w0, #0x0
   11c28:	cset	w8, ne  // ne = any
   11c2c:	lsl	w8, w8, #2
   11c30:	mov	w9, #0x8                   	// #8
   11c34:	csel	w19, w9, w8, lt  // lt = tstop
   11c38:	b	12344 <mpc_tan@@Base+0x79c>
   11c3c:	ldr	x9, [x21, #16]
   11c40:	ldr	x8, [x21, #48]
   11c44:	mov	x10, #0x2                   	// #2
   11c48:	movk	x10, #0x8000, lsl #48
   11c4c:	cmp	x9, x10
   11c50:	b.ne	11c88 <mpc_tan@@Base+0xe0>  // b.any
   11c54:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   11c58:	cmp	x8, x9
   11c5c:	b.ne	11d5c <mpc_tan@@Base+0x1b4>  // b.any
   11c60:	ldr	w8, [x21, #40]
   11c64:	mov	x0, x19
   11c68:	mov	x1, xzr
   11c6c:	mov	w3, w20
   11c70:	cmp	w8, #0x0
   11c74:	mov	w8, #0x1                   	// #1
   11c78:	cneg	x2, x8, lt  // lt = tstop
   11c7c:	bl	52c0 <mpc_set_si_si@plt>
   11c80:	mov	w19, w0
   11c84:	b	12344 <mpc_tan@@Base+0x79c>
   11c88:	cmp	x8, x10
   11c8c:	b.ne	11cfc <mpc_tan@@Base+0x154>  // b.any
   11c90:	mov	x0, x21
   11c94:	bl	51f0 <mpfr_sgn@plt>
   11c98:	cbnz	w0, 11d5c <mpc_tan@@Base+0x1b4>
   11c9c:	mov	x0, x19
   11ca0:	mov	x1, x21
   11ca4:	mov	w2, w20
   11ca8:	bl	5580 <mpc_set@plt>
   11cac:	mov	w19, wzr
   11cb0:	b	12344 <mpc_tan@@Base+0x79c>
   11cb4:	ldr	x9, [x21, #48]
   11cb8:	cmp	x9, x8
   11cbc:	b.ne	11d74 <mpc_tan@@Base+0x1cc>  // b.any
   11cc0:	and	w2, w20, #0xf
   11cc4:	mov	x0, x19
   11cc8:	mov	x1, x21
   11ccc:	bl	4ab0 <mpfr_tan@plt>
   11cd0:	ldr	w3, [x21, #40]
   11cd4:	mov	w23, w0
   11cd8:	add	x0, x19, #0x20
   11cdc:	asr	w2, w20, #4
   11ce0:	mov	x1, x22
   11ce4:	bl	51d0 <mpfr_set4@plt>
   11ce8:	cmp	w23, #0x0
   11cec:	cset	w8, ne  // ne = any
   11cf0:	mov	w9, #0x2                   	// #2
   11cf4:	csel	w19, w9, w8, lt  // lt = tstop
   11cf8:	b	12344 <mpc_tan@@Base+0x79c>
   11cfc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   11d00:	cmp	x9, x10
   11d04:	b.ne	12158 <mpc_tan@@Base+0x5b0>  // b.any
   11d08:	cmp	x8, x10
   11d0c:	b.ne	11d5c <mpc_tan@@Base+0x1b4>  // b.any
   11d10:	ldr	w8, [x21, #8]
   11d14:	mov	w22, #0x1                   	// #1
   11d18:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   11d1c:	mov	x0, x19
   11d20:	cmp	w8, #0x0
   11d24:	cneg	w3, w22, lt  // lt = tstop
   11d28:	mov	x1, x19
   11d2c:	mov	w2, wzr
   11d30:	str	w22, [x19, #8]
   11d34:	str	x9, [x19, #16]
   11d38:	bl	51d0 <mpfr_set4@plt>
   11d3c:	ldr	w8, [x21, #40]
   11d40:	add	x0, x19, #0x20
   11d44:	asr	w3, w20, #4
   11d48:	mov	x2, xzr
   11d4c:	cmp	w8, #0x0
   11d50:	cneg	x1, x22, lt  // lt = tstop
   11d54:	bl	49e0 <mpfr_set_si_2exp@plt>
   11d58:	b	11c24 <mpc_tan@@Base+0x7c>
   11d5c:	mov	x0, x19
   11d60:	bl	4a40 <mpfr_set_nan@plt>
   11d64:	add	x0, x19, #0x20
   11d68:	bl	4a40 <mpfr_set_nan@plt>
   11d6c:	mov	w19, wzr
   11d70:	b	12344 <mpc_tan@@Base+0x79c>
   11d74:	mov	x25, x19
   11d78:	ldr	x8, [x19]
   11d7c:	ldr	x9, [x25, #32]!
   11d80:	mov	x27, #0x2                   	// #2
   11d84:	sub	x0, x29, #0x48
   11d88:	mov	w1, #0x2                   	// #2
   11d8c:	cmp	x8, x9
   11d90:	movk	x27, #0x8000, lsl #48
   11d94:	csel	x22, x8, x9, gt
   11d98:	sub	x23, x29, #0x48
   11d9c:	bl	4cf0 <mpc_init2@plt>
   11da0:	add	x0, sp, #0x28
   11da4:	mov	w1, #0x2                   	// #2
   11da8:	add	x24, sp, #0x28
   11dac:	bl	4cf0 <mpc_init2@plt>
   11db0:	and	w8, w20, #0xf
   11db4:	tst	w20, #0xf
   11db8:	str	w8, [sp, #20]
   11dbc:	cset	w8, eq  // eq = none
   11dc0:	cmp	w20, #0x10
   11dc4:	add	x28, x23, #0x20
   11dc8:	add	x23, x24, #0x20
   11dcc:	str	x8, [sp, #8]
   11dd0:	cset	w8, cc  // cc = lo, ul, last
   11dd4:	mov	w24, #0x7                   	// #7
   11dd8:	str	x8, [sp]
   11ddc:	mov	x0, x22
   11de0:	bl	4d20 <mpc_ceil_log2@plt>
   11de4:	add	x8, x22, x24
   11de8:	add	x22, x8, x0
   11dec:	sub	x0, x29, #0x48
   11df0:	mov	x1, x22
   11df4:	bl	4c00 <mpc_set_prec@plt>
   11df8:	add	x0, sp, #0x28
   11dfc:	mov	x1, x22
   11e00:	bl	4c00 <mpc_set_prec@plt>
   11e04:	sub	x0, x29, #0x48
   11e08:	add	x1, sp, #0x28
   11e0c:	mov	w3, #0x11                  	// #17
   11e10:	mov	w4, #0x11                  	// #17
   11e14:	mov	x2, x21
   11e18:	bl	5140 <mpc_sin_cos@plt>
   11e1c:	ldur	x8, [x29, #-56]
   11e20:	cmp	x8, x27
   11e24:	b.gt	11e38 <mpc_tan@@Base+0x290>
   11e28:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   11e2c:	b.ne	11ec4 <mpc_tan@@Base+0x31c>  // b.any
   11e30:	bl	4b00 <mpfr_set_erangeflag@plt>
   11e34:	b	11ec4 <mpc_tan@@Base+0x31c>
   11e38:	ldur	w8, [x29, #-64]
   11e3c:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   11e40:	cmp	w8, #0x1
   11e44:	b.lt	11ec4 <mpc_tan@@Base+0x31c>  // b.tstop
   11e48:	sub	x0, x29, #0x48
   11e4c:	bl	4e00 <mpfr_nextabove@plt>
   11e50:	ldur	x8, [x29, #-24]
   11e54:	cmp	x8, x27
   11e58:	b.le	11ed8 <mpc_tan@@Base+0x330>
   11e5c:	ldur	w8, [x29, #-32]
   11e60:	cmp	w8, #0x1
   11e64:	b.lt	11ee0 <mpc_tan@@Base+0x338>  // b.tstop
   11e68:	mov	x0, x28
   11e6c:	bl	4e00 <mpfr_nextabove@plt>
   11e70:	ldr	x8, [sp, #56]
   11e74:	cmp	x8, x27
   11e78:	b.le	11ef4 <mpc_tan@@Base+0x34c>
   11e7c:	ldr	w8, [sp, #48]
   11e80:	cmp	w8, #0x1
   11e84:	b.lt	11efc <mpc_tan@@Base+0x354>  // b.tstop
   11e88:	add	x0, sp, #0x28
   11e8c:	bl	4e00 <mpfr_nextabove@plt>
   11e90:	ldr	x8, [sp, #88]
   11e94:	cmp	x8, x27
   11e98:	b.le	11f10 <mpc_tan@@Base+0x368>
   11e9c:	ldr	w8, [sp, #80]
   11ea0:	cmp	w8, #0x1
   11ea4:	b.lt	11f18 <mpc_tan@@Base+0x370>  // b.tstop
   11ea8:	mov	x0, x23
   11eac:	bl	4e00 <mpfr_nextabove@plt>
   11eb0:	ldur	x26, [x29, #-56]
   11eb4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   11eb8:	cmp	x26, x9
   11ebc:	b.ne	11f30 <mpc_tan@@Base+0x388>  // b.any
   11ec0:	b	12110 <mpc_tan@@Base+0x568>
   11ec4:	sub	x0, x29, #0x48
   11ec8:	bl	4bb0 <mpfr_nextbelow@plt>
   11ecc:	ldur	x8, [x29, #-24]
   11ed0:	cmp	x8, x27
   11ed4:	b.gt	11e5c <mpc_tan@@Base+0x2b4>
   11ed8:	b.ne	11ee0 <mpc_tan@@Base+0x338>  // b.any
   11edc:	bl	4b00 <mpfr_set_erangeflag@plt>
   11ee0:	mov	x0, x28
   11ee4:	bl	4bb0 <mpfr_nextbelow@plt>
   11ee8:	ldr	x8, [sp, #56]
   11eec:	cmp	x8, x27
   11ef0:	b.gt	11e7c <mpc_tan@@Base+0x2d4>
   11ef4:	b.ne	11efc <mpc_tan@@Base+0x354>  // b.any
   11ef8:	bl	4b00 <mpfr_set_erangeflag@plt>
   11efc:	add	x0, sp, #0x28
   11f00:	bl	4bb0 <mpfr_nextbelow@plt>
   11f04:	ldr	x8, [sp, #88]
   11f08:	cmp	x8, x27
   11f0c:	b.gt	11e9c <mpc_tan@@Base+0x2f4>
   11f10:	b.ne	11f18 <mpc_tan@@Base+0x370>  // b.any
   11f14:	bl	4b00 <mpfr_set_erangeflag@plt>
   11f18:	mov	x0, x23
   11f1c:	bl	4bb0 <mpfr_nextbelow@plt>
   11f20:	ldur	x26, [x29, #-56]
   11f24:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   11f28:	cmp	x26, x9
   11f2c:	b.eq	12110 <mpc_tan@@Base+0x568>  // b.none
   11f30:	cmp	x26, x24
   11f34:	stp	x23, x25, [sp, #24]
   11f38:	b.eq	123c4 <mpc_tan@@Base+0x81c>  // b.none
   11f3c:	ldur	x8, [x29, #-24]
   11f40:	cmp	x8, x9
   11f44:	b.eq	12368 <mpc_tan@@Base+0x7c0>  // b.none
   11f48:	ldr	x23, [sp, #56]
   11f4c:	cmp	x23, x9
   11f50:	b.eq	12368 <mpc_tan@@Base+0x7c0>  // b.none
   11f54:	ldr	x25, [sp, #88]
   11f58:	cmp	x25, x9
   11f5c:	b.eq	12368 <mpc_tan@@Base+0x7c0>  // b.none
   11f60:	sub	x0, x29, #0x48
   11f64:	sub	x1, x29, #0x48
   11f68:	add	x2, sp, #0x28
   11f6c:	mov	w3, #0x11                  	// #17
   11f70:	bl	5250 <mpc_div@plt>
   11f74:	ldur	x9, [x29, #-56]
   11f78:	mov	w8, wzr
   11f7c:	cmp	x9, x24
   11f80:	b.eq	11fc0 <mpc_tan@@Base+0x418>  // b.none
   11f84:	ldur	x10, [x29, #-24]
   11f88:	cmp	x10, x24
   11f8c:	mov	x24, x22
   11f90:	b.eq	120e8 <mpc_tan@@Base+0x540>  // b.none
   11f94:	mov	w27, w0
   11f98:	tst	w0, #0x3
   11f9c:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   11fa0:	b.eq	11fe8 <mpc_tan@@Base+0x440>  // b.none
   11fa4:	mov	x8, #0x2                   	// #2
   11fa8:	movk	x8, #0x8000, lsl #48
   11fac:	cmp	x9, x8
   11fb0:	b.gt	11fc8 <mpc_tan@@Base+0x420>
   11fb4:	b.ne	11fe0 <mpc_tan@@Base+0x438>  // b.any
   11fb8:	bl	4b00 <mpfr_set_erangeflag@plt>
   11fbc:	b	11fe0 <mpc_tan@@Base+0x438>
   11fc0:	mov	x24, x22
   11fc4:	b	120e8 <mpc_tan@@Base+0x540>
   11fc8:	ldur	w8, [x29, #-64]
   11fcc:	cmp	w8, #0x1
   11fd0:	b.lt	11fe0 <mpc_tan@@Base+0x438>  // b.tstop
   11fd4:	sub	x0, x29, #0x48
   11fd8:	bl	4e00 <mpfr_nextabove@plt>
   11fdc:	b	11fe8 <mpc_tan@@Base+0x440>
   11fe0:	sub	x0, x29, #0x48
   11fe4:	bl	4bb0 <mpfr_nextbelow@plt>
   11fe8:	cmp	w27, #0x4
   11fec:	b.cc	12030 <mpc_tan@@Base+0x488>  // b.lo, b.ul, b.last
   11ff0:	ldur	x8, [x29, #-24]
   11ff4:	mov	x9, #0x2                   	// #2
   11ff8:	movk	x9, #0x8000, lsl #48
   11ffc:	cmp	x8, x9
   12000:	b.gt	12010 <mpc_tan@@Base+0x468>
   12004:	b.ne	12028 <mpc_tan@@Base+0x480>  // b.any
   12008:	bl	4b00 <mpfr_set_erangeflag@plt>
   1200c:	b	12028 <mpc_tan@@Base+0x480>
   12010:	ldur	w8, [x29, #-32]
   12014:	cmp	w8, #0x1
   12018:	b.lt	12028 <mpc_tan@@Base+0x480>  // b.tstop
   1201c:	mov	x0, x28
   12020:	bl	4e00 <mpfr_nextabove@plt>
   12024:	b	12030 <mpc_tan@@Base+0x488>
   12028:	mov	x0, x28
   1202c:	bl	4bb0 <mpfr_nextbelow@plt>
   12030:	ldur	x8, [x29, #-56]
   12034:	cmp	x8, x24
   12038:	b.eq	123f4 <mpc_tan@@Base+0x84c>  // b.none
   1203c:	neg	x9, x23
   12040:	sub	x10, x23, x25, lsl #1
   12044:	cmp	x10, x9
   12048:	sub	x8, x26, x8
   1204c:	csneg	x9, x10, x23, ge  // ge = tcont
   12050:	add	x8, x8, x9
   12054:	add	x9, x8, #0x5
   12058:	cmp	x8, #0x2
   1205c:	mov	w8, #0x8                   	// #8
   12060:	csel	x8, x8, x9, eq  // eq = none
   12064:	mov	w9, #0x7                   	// #7
   12068:	sub	x0, x29, #0x48
   1206c:	csel	x24, x9, x8, lt  // lt = tstop
   12070:	bl	54d0 <mpfr_number_p@plt>
   12074:	cbz	w0, 1209c <mpc_tan@@Base+0x4f4>
   12078:	ldr	x8, [x19]
   1207c:	ldr	x9, [sp, #8]
   12080:	sub	x1, x22, x24
   12084:	sub	x0, x29, #0x48
   12088:	mov	w3, #0x1                   	// #1
   1208c:	add	x4, x8, x9
   12090:	mov	w2, wzr
   12094:	bl	5450 <mpfr_can_round@plt>
   12098:	cbz	w0, 120e4 <mpc_tan@@Base+0x53c>
   1209c:	mov	x0, x28
   120a0:	mov	x23, x28
   120a4:	bl	54d0 <mpfr_number_p@plt>
   120a8:	cbz	w0, 120dc <mpc_tan@@Base+0x534>
   120ac:	ldr	x8, [sp, #32]
   120b0:	ldr	x9, [sp]
   120b4:	sub	x1, x22, #0x6
   120b8:	mov	w3, #0x1                   	// #1
   120bc:	ldr	x8, [x8]
   120c0:	mov	x0, x23
   120c4:	mov	w2, wzr
   120c8:	add	x4, x8, x9
   120cc:	bl	5450 <mpfr_can_round@plt>
   120d0:	cmp	w0, #0x0
   120d4:	cset	w8, ne  // ne = any
   120d8:	b	120e8 <mpc_tan@@Base+0x540>
   120dc:	mov	w8, #0x1                   	// #1
   120e0:	b	120e8 <mpc_tan@@Base+0x540>
   120e4:	mov	w8, wzr
   120e8:	ldp	x23, x25, [sp, #24]
   120ec:	mov	x27, #0x2                   	// #2
   120f0:	movk	x27, #0x8000, lsl #48
   120f4:	cbz	w8, 11ddc <mpc_tan@@Base+0x234>
   120f8:	sub	x1, x29, #0x48
   120fc:	mov	x0, x19
   12100:	mov	w2, w20
   12104:	bl	5580 <mpc_set@plt>
   12108:	mov	w19, w0
   1210c:	b	12334 <mpc_tan@@Base+0x78c>
   12110:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   12114:	mov	x23, x19
   12118:	str	x8, [x23, #16]!
   1211c:	mov	w8, #0x1                   	// #1
   12120:	stur	w8, [x23, #-8]
   12124:	ldur	w22, [x29, #-64]
   12128:	ldr	x8, [sp, #56]
   1212c:	mov	x9, #0x2                   	// #2
   12130:	movk	x9, #0x8000, lsl #48
   12134:	cmp	x8, x9
   12138:	b.gt	121f4 <mpc_tan@@Base+0x64c>
   1213c:	cmp	x8, x27
   12140:	b.ne	12208 <mpc_tan@@Base+0x660>  // b.any
   12144:	bl	4b00 <mpfr_set_erangeflag@plt>
   12148:	mov	w8, wzr
   1214c:	mul	w8, w8, w22
   12150:	tbz	w8, #31, 12200 <mpc_tan@@Base+0x658>
   12154:	b	12214 <mpc_tan@@Base+0x66c>
   12158:	sub	x0, x29, #0x48
   1215c:	bl	4aa0 <mpfr_init@plt>
   12160:	add	x0, sp, #0x28
   12164:	bl	4aa0 <mpfr_init@plt>
   12168:	add	x0, sp, #0x28
   1216c:	sub	x1, x29, #0x48
   12170:	mov	x2, x21
   12174:	mov	w3, wzr
   12178:	bl	5520 <mpfr_sin_cos@plt>
   1217c:	mov	w22, #0x1                   	// #1
   12180:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   12184:	str	w22, [x19, #8]
   12188:	str	x8, [x19, #16]
   1218c:	ldur	w8, [x29, #-64]
   12190:	ldr	w9, [sp, #48]
   12194:	mov	x0, x19
   12198:	mov	x1, x19
   1219c:	mov	w2, wzr
   121a0:	eor	w8, w9, w8
   121a4:	cmp	w8, #0x0
   121a8:	cneg	w3, w22, lt  // lt = tstop
   121ac:	bl	51d0 <mpfr_set4@plt>
   121b0:	ldr	w8, [x21, #40]
   121b4:	add	x0, x19, #0x20
   121b8:	asr	w3, w20, #4
   121bc:	mov	x2, xzr
   121c0:	cmp	w8, #0x0
   121c4:	cneg	x1, x22, lt  // lt = tstop
   121c8:	bl	49e0 <mpfr_set_si_2exp@plt>
   121cc:	cmp	w0, #0x0
   121d0:	cset	w8, ne  // ne = any
   121d4:	lsl	w8, w8, #2
   121d8:	mov	w9, #0x8                   	// #8
   121dc:	add	x0, sp, #0x28
   121e0:	csel	w19, w9, w8, lt  // lt = tstop
   121e4:	bl	4d60 <mpfr_clear@plt>
   121e8:	sub	x0, x29, #0x48
   121ec:	bl	4d60 <mpfr_clear@plt>
   121f0:	b	12344 <mpc_tan@@Base+0x79c>
   121f4:	ldr	w8, [sp, #48]
   121f8:	mul	w8, w8, w22
   121fc:	tbnz	w8, #31, 12214 <mpc_tan@@Base+0x66c>
   12200:	mov	w24, #0xffffffff            	// #-1
   12204:	b	12228 <mpc_tan@@Base+0x680>
   12208:	mov	w8, wzr
   1220c:	mul	w8, w8, w22
   12210:	tbz	w8, #31, 12200 <mpc_tan@@Base+0x658>
   12214:	mov	x0, x19
   12218:	mov	x1, x19
   1221c:	mov	w2, wzr
   12220:	bl	4b80 <mpfr_neg@plt>
   12224:	mov	w24, #0x1                   	// #1
   12228:	ldr	x8, [x21, #48]
   1222c:	mov	x9, #0x2                   	// #2
   12230:	movk	x9, #0x8000, lsl #48
   12234:	cmp	x8, x9
   12238:	b.gt	1224c <mpc_tan@@Base+0x6a4>
   1223c:	cmp	x8, x27
   12240:	b.ne	12280 <mpc_tan@@Base+0x6d8>  // b.any
   12244:	bl	4b00 <mpfr_set_erangeflag@plt>
   12248:	b	12280 <mpc_tan@@Base+0x6d8>
   1224c:	ldr	w8, [x21, #40]
   12250:	cmp	w8, #0x1
   12254:	b.lt	12280 <mpc_tan@@Base+0x6d8>  // b.tstop
   12258:	mov	w1, #0x1                   	// #1
   1225c:	mov	x0, x25
   12260:	mov	x2, xzr
   12264:	mov	w3, wzr
   12268:	mov	w21, #0x1                   	// #1
   1226c:	bl	5130 <mpfr_set_ui_2exp@plt>
   12270:	asr	w20, w20, #4
   12274:	cmp	w20, #0x1
   12278:	b.ne	122a4 <mpc_tan@@Base+0x6fc>  // b.any
   1227c:	b	122c0 <mpc_tan@@Base+0x718>
   12280:	mov	x1, #0xffffffffffffffff    	// #-1
   12284:	mov	x0, x25
   12288:	mov	x2, xzr
   1228c:	mov	w3, wzr
   12290:	bl	49e0 <mpfr_set_si_2exp@plt>
   12294:	mov	w21, #0xffffffff            	// #-1
   12298:	asr	w20, w20, #4
   1229c:	cmp	w20, #0x1
   122a0:	b.eq	122c0 <mpc_tan@@Base+0x718>  // b.none
   122a4:	ldr	w8, [x19, #40]
   122a8:	cmp	w20, #0x2
   122ac:	b.ne	122b4 <mpc_tan@@Base+0x70c>  // b.any
   122b0:	tbnz	w8, #31, 122c0 <mpc_tan@@Base+0x718>
   122b4:	cmp	w20, #0x3
   122b8:	b.ne	122d0 <mpc_tan@@Base+0x728>  // b.any
   122bc:	tbnz	w8, #31, 122d0 <mpc_tan@@Base+0x728>
   122c0:	mov	x0, x25
   122c4:	mov	x1, x19
   122c8:	bl	51c0 <mpfr_nexttoward@plt>
   122cc:	neg	w21, w21
   122d0:	ldr	x8, [x23]
   122d4:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
   122d8:	cmp	x8, x22
   122dc:	b.ne	122f0 <mpc_tan@@Base+0x748>  // b.any
   122e0:	ldr	w1, [sp, #20]
   122e4:	mov	x0, x19
   122e8:	bl	50d0 <mpc_fix_zero@plt>
   122ec:	mov	w24, w0
   122f0:	ldr	x8, [x19, #48]
   122f4:	cmp	x8, x22
   122f8:	b.ne	1230c <mpc_tan@@Base+0x764>  // b.any
   122fc:	mov	x0, x25
   12300:	mov	w1, w20
   12304:	bl	50d0 <mpc_fix_zero@plt>
   12308:	mov	w21, w0
   1230c:	cmp	w24, #0x0
   12310:	mov	w8, #0x2                   	// #2
   12314:	cset	w9, ne  // ne = any
   12318:	csel	w8, w8, w9, lt  // lt = tstop
   1231c:	cmp	w21, #0x0
   12320:	cset	w9, ne  // ne = any
   12324:	lsl	w9, w9, #2
   12328:	mov	w10, #0x8                   	// #8
   1232c:	csel	w9, w10, w9, lt  // lt = tstop
   12330:	orr	w19, w9, w8
   12334:	sub	x0, x29, #0x48
   12338:	bl	4a10 <mpc_clear@plt>
   1233c:	add	x0, sp, #0x28
   12340:	bl	4a10 <mpc_clear@plt>
   12344:	mov	w0, w19
   12348:	ldp	x20, x19, [sp, #256]
   1234c:	ldp	x22, x21, [sp, #240]
   12350:	ldp	x24, x23, [sp, #224]
   12354:	ldp	x26, x25, [sp, #208]
   12358:	ldp	x28, x27, [sp, #192]
   1235c:	ldp	x29, x30, [sp, #176]
   12360:	add	sp, sp, #0x110
   12364:	ret
   12368:	mov	x10, #0x2                   	// #2
   1236c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   12370:	mov	x23, x19
   12374:	movk	x10, #0x8000, lsl #48
   12378:	mov	w9, #0x1                   	// #1
   1237c:	str	x8, [x23, #16]!
   12380:	cmp	x26, x10
   12384:	stur	w9, [x23, #-8]
   12388:	b.gt	123b4 <mpc_tan@@Base+0x80c>
   1238c:	ldr	x25, [sp, #32]
   12390:	mov	x8, #0x2                   	// #2
   12394:	movk	x8, #0x8000, lsl #48
   12398:	cmp	x26, x8
   1239c:	b.ne	123a4 <mpc_tan@@Base+0x7fc>  // b.any
   123a0:	bl	4b00 <mpfr_set_erangeflag@plt>
   123a4:	mov	x27, #0x2                   	// #2
   123a8:	mov	w22, wzr
   123ac:	movk	x27, #0x8000, lsl #48
   123b0:	b	12128 <mpc_tan@@Base+0x580>
   123b4:	ldr	x25, [sp, #32]
   123b8:	mov	x27, #0x2                   	// #2
   123bc:	movk	x27, #0x8000, lsl #48
   123c0:	b	12124 <mpc_tan@@Base+0x57c>
   123c4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
   123c8:	ldr	x8, [x8, #4008]
   123cc:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
   123d0:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
   123d4:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
   123d8:	ldr	x0, [x8]
   123dc:	add	x1, x1, #0x990
   123e0:	add	x2, x2, #0x9f5
   123e4:	add	x4, x4, #0xd05
   123e8:	mov	w3, #0xc9                  	// #201
   123ec:	bl	55a0 <fprintf@plt>
   123f0:	bl	5000 <abort@plt>
   123f4:	adrp	x8, 24000 <mpc_ui_ui_sub@@Base+0x11a8c>
   123f8:	ldr	x8, [x8, #4008]
   123fc:	adrp	x1, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
   12400:	adrp	x2, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
   12404:	adrp	x4, 13000 <mpc_ui_ui_sub@@Base+0xa8c>
   12408:	ldr	x0, [x8]
   1240c:	add	x1, x1, #0x990
   12410:	add	x2, x2, #0x9f5
   12414:	add	x4, x4, #0xd05
   12418:	mov	w3, #0x107                 	// #263
   1241c:	bl	55a0 <fprintf@plt>
   12420:	bl	5000 <abort@plt>

0000000000012424 <mpc_tanh@@Base>:
   12424:	sub	sp, sp, #0xa0
   12428:	stp	x29, x30, [sp, #128]
   1242c:	str	x19, [sp, #144]
   12430:	ldp	q1, q0, [x1, #32]
   12434:	ubfiz	w8, w2, #4, #4
   12438:	mov	x19, x0
   1243c:	add	w2, w8, w2, asr #4
   12440:	stp	q1, q0, [sp, #64]
   12444:	ldp	q1, q0, [x1]
   12448:	add	x1, sp, #0x40
   1244c:	add	x29, sp, #0x80
   12450:	stp	q1, q0, [sp, #96]
   12454:	ldp	q1, q0, [x0, #32]
   12458:	stp	q1, q0, [sp]
   1245c:	ldp	q1, q0, [x0]
   12460:	mov	x0, sp
   12464:	stp	q1, q0, [sp, #32]
   12468:	bl	4c20 <mpc_tan@plt>
   1246c:	ldp	q1, q0, [sp, #32]
   12470:	asr	w8, w0, #2
   12474:	cmp	w8, #0x0
   12478:	cset	w9, ne  // ne = any
   1247c:	stp	q1, q0, [x19]
   12480:	ldp	q1, q0, [sp]
   12484:	cmp	w8, #0x2
   12488:	csel	w8, w8, w9, eq  // eq = none
   1248c:	tst	w0, #0x3
   12490:	stp	q1, q0, [x19, #32]
   12494:	and	w9, w0, #0x3
   12498:	cset	w10, ne  // ne = any
   1249c:	ldr	x19, [sp, #144]
   124a0:	ldp	x29, x30, [sp, #128]
   124a4:	cmp	w9, #0x2
   124a8:	mov	w9, #0x8                   	// #8
   124ac:	lsl	w10, w10, #2
   124b0:	csel	w9, w9, w10, eq  // eq = none
   124b4:	orr	w0, w8, w9
   124b8:	add	sp, sp, #0xa0
   124bc:	ret

00000000000124c0 <mpc_ceil_log2@@Base>:
   124c0:	cmp	x0, #0x2
   124c4:	b.lt	124f4 <mpc_ceil_log2@@Base+0x34>  // b.tstop
   124c8:	mov	x8, xzr
   124cc:	add	x9, x0, #0x1
   124d0:	add	x10, x0, #0x2
   124d4:	cmp	x9, #0x0
   124d8:	csinc	x9, x10, x0, lt  // lt = tstop
   124dc:	cmp	x0, #0x2
   124e0:	asr	x0, x9, #1
   124e4:	add	x8, x8, #0x1
   124e8:	b.gt	124cc <mpc_ceil_log2@@Base+0xc>
   124ec:	mov	x0, x8
   124f0:	ret
   124f4:	mov	x0, xzr
   124f8:	ret

00000000000124fc <mpc_ui_div@@Base>:
   124fc:	sub	sp, sp, #0x70
   12500:	stp	x22, x21, [sp, #80]
   12504:	mov	x21, x1
   12508:	mov	x22, x0
   1250c:	mov	x0, sp
   12510:	mov	w1, #0x40                  	// #64
   12514:	stp	x29, x30, [sp, #64]
   12518:	stp	x20, x19, [sp, #96]
   1251c:	add	x29, sp, #0x40
   12520:	mov	w19, w3
   12524:	mov	x20, x2
   12528:	bl	4cf0 <mpc_init2@plt>
   1252c:	mov	x0, sp
   12530:	mov	x1, x21
   12534:	mov	w2, w19
   12538:	bl	4ce0 <mpc_set_ui@plt>
   1253c:	mov	x1, sp
   12540:	mov	x0, x22
   12544:	mov	x2, x20
   12548:	mov	w3, w19
   1254c:	bl	5250 <mpc_div@plt>
   12550:	mov	w19, w0
   12554:	mov	x0, sp
   12558:	bl	4a10 <mpc_clear@plt>
   1255c:	mov	w0, w19
   12560:	ldp	x20, x19, [sp, #96]
   12564:	ldp	x22, x21, [sp, #80]
   12568:	ldp	x29, x30, [sp, #64]
   1256c:	add	sp, sp, #0x70
   12570:	ret

0000000000012574 <mpc_ui_ui_sub@@Base>:
   12574:	stp	x29, x30, [sp, #-64]!
   12578:	stp	x20, x19, [sp, #48]
   1257c:	mov	x20, x3
   12580:	stp	x22, x21, [sp, #32]
   12584:	mov	x21, x2
   12588:	and	w3, w4, #0xf
   1258c:	mov	x2, x20
   12590:	str	x23, [sp, #16]
   12594:	mov	x29, sp
   12598:	mov	w19, w4
   1259c:	mov	x22, x0
   125a0:	bl	5430 <mpfr_ui_sub@plt>
   125a4:	mov	w23, w0
   125a8:	add	x0, x22, #0x20
   125ac:	add	x2, x20, #0x20
   125b0:	asr	w3, w19, #4
   125b4:	mov	x1, x21
   125b8:	bl	5430 <mpfr_ui_sub@plt>
   125bc:	cmp	w23, #0x0
   125c0:	mov	w8, #0x2                   	// #2
   125c4:	cset	w9, ne  // ne = any
   125c8:	csel	w8, w8, w9, lt  // lt = tstop
   125cc:	cmp	w0, #0x0
   125d0:	cset	w9, ne  // ne = any
   125d4:	ldp	x20, x19, [sp, #48]
   125d8:	ldp	x22, x21, [sp, #32]
   125dc:	ldr	x23, [sp, #16]
   125e0:	lsl	w9, w9, #2
   125e4:	mov	w10, #0x8                   	// #8
   125e8:	csel	w9, w10, w9, lt  // lt = tstop
   125ec:	orr	w0, w9, w8
   125f0:	ldp	x29, x30, [sp], #64
   125f4:	ret
   125f8:	stp	x29, x30, [sp, #-48]!
   125fc:	mov	x29, sp
   12600:	str	q0, [sp, #16]
   12604:	str	q1, [sp, #32]
   12608:	ldp	x6, x1, [sp, #16]
   1260c:	ldp	x0, x3, [sp, #32]
   12610:	mrs	x15, fpcr
   12614:	lsr	x7, x1, #63
   12618:	mov	x10, x0
   1261c:	ubfiz	x4, x3, #3, #48
   12620:	lsr	x5, x3, #63
   12624:	mov	x12, x7
   12628:	ubfiz	x2, x1, #3, #48
   1262c:	orr	x4, x4, x0, lsr #61
   12630:	ubfx	x8, x1, #48, #15
   12634:	ubfx	x0, x3, #48, #15
   12638:	and	w7, w7, #0xff
   1263c:	mov	x16, x12
   12640:	cmp	x12, x5
   12644:	and	w11, w5, #0xff
   12648:	orr	x2, x2, x6, lsr #61
   1264c:	mov	x1, x8
   12650:	lsl	x9, x6, #3
   12654:	mov	x3, x0
   12658:	lsl	x13, x10, #3
   1265c:	b.eq	12808 <mpc_ui_ui_sub@@Base+0x294>  // b.none
   12660:	sub	w0, w8, w0
   12664:	cmp	w0, #0x0
   12668:	b.le	127b4 <mpc_ui_ui_sub@@Base+0x240>
   1266c:	cbz	x3, 12868 <mpc_ui_ui_sub@@Base+0x2f4>
   12670:	orr	x4, x4, #0x8000000000000
   12674:	mov	x3, #0x7fff                	// #32767
   12678:	cmp	x1, x3
   1267c:	b.eq	12a6c <mpc_ui_ui_sub@@Base+0x4f8>  // b.none
   12680:	cmp	w0, #0x74
   12684:	b.gt	12af0 <mpc_ui_ui_sub@@Base+0x57c>
   12688:	cmp	w0, #0x3f
   1268c:	b.gt	12c50 <mpc_ui_ui_sub@@Base+0x6dc>
   12690:	mov	w3, #0x40                  	// #64
   12694:	sub	w3, w3, w0
   12698:	lsr	x6, x13, x0
   1269c:	lsl	x13, x13, x3
   126a0:	cmp	x13, #0x0
   126a4:	cset	x5, ne  // ne = any
   126a8:	lsl	x3, x4, x3
   126ac:	orr	x3, x3, x6
   126b0:	lsr	x0, x4, x0
   126b4:	orr	x3, x3, x5
   126b8:	sub	x2, x2, x0
   126bc:	subs	x9, x9, x3
   126c0:	sbc	x2, x2, xzr
   126c4:	and	x3, x2, #0x7ffffffffffff
   126c8:	tbz	x2, #51, 128a8 <mpc_ui_ui_sub@@Base+0x334>
   126cc:	cbz	x3, 12ad4 <mpc_ui_ui_sub@@Base+0x560>
   126d0:	clz	x0, x3
   126d4:	sub	w0, w0, #0xc
   126d8:	neg	w2, w0
   126dc:	lsl	x4, x3, x0
   126e0:	lsl	x3, x9, x0
   126e4:	lsr	x9, x9, x2
   126e8:	orr	x2, x9, x4
   126ec:	cmp	x1, w0, sxtw
   126f0:	sxtw	x4, w0
   126f4:	b.gt	12ab4 <mpc_ui_ui_sub@@Base+0x540>
   126f8:	sub	w1, w0, w1
   126fc:	add	w0, w1, #0x1
   12700:	cmp	w0, #0x3f
   12704:	b.gt	12c18 <mpc_ui_ui_sub@@Base+0x6a4>
   12708:	mov	w1, #0x40                  	// #64
   1270c:	sub	w1, w1, w0
   12710:	lsr	x4, x3, x0
   12714:	lsl	x3, x3, x1
   12718:	cmp	x3, #0x0
   1271c:	lsl	x9, x2, x1
   12720:	cset	x1, ne  // ne = any
   12724:	orr	x9, x9, x4
   12728:	lsr	x2, x2, x0
   1272c:	orr	x9, x9, x1
   12730:	orr	x8, x9, x2
   12734:	cbz	x8, 128bc <mpc_ui_ui_sub@@Base+0x348>
   12738:	and	x0, x9, #0x7
   1273c:	mov	x1, #0x0                   	// #0
   12740:	mov	w5, #0x1                   	// #1
   12744:	cbz	x0, 12b00 <mpc_ui_ui_sub@@Base+0x58c>
   12748:	and	x3, x15, #0xc00000
   1274c:	cmp	x3, #0x400, lsl #12
   12750:	b.eq	12a44 <mpc_ui_ui_sub@@Base+0x4d0>  // b.none
   12754:	cmp	x3, #0x800, lsl #12
   12758:	b.eq	12a24 <mpc_ui_ui_sub@@Base+0x4b0>  // b.none
   1275c:	cbz	x3, 12a50 <mpc_ui_ui_sub@@Base+0x4dc>
   12760:	and	x3, x2, #0x8000000000000
   12764:	mov	w0, #0x10                  	// #16
   12768:	cbz	w5, 12770 <mpc_ui_ui_sub@@Base+0x1fc>
   1276c:	orr	w0, w0, #0x8
   12770:	cbz	x3, 12a88 <mpc_ui_ui_sub@@Base+0x514>
   12774:	add	x1, x1, #0x1
   12778:	mov	x3, #0x7fff                	// #32767
   1277c:	cmp	x1, x3
   12780:	b.eq	1296c <mpc_ui_ui_sub@@Base+0x3f8>  // b.none
   12784:	and	w1, w1, #0x7fff
   12788:	extr	x8, x2, x9, #3
   1278c:	ubfx	x2, x2, #3, #48
   12790:	mov	x5, #0x0                   	// #0
   12794:	orr	w1, w1, w7, lsl #15
   12798:	bfxil	x5, x2, #0, #48
   1279c:	fmov	d0, x8
   127a0:	bfi	x5, x1, #48, #16
   127a4:	fmov	v0.d[1], x5
   127a8:	cbnz	w0, 129c8 <mpc_ui_ui_sub@@Base+0x454>
   127ac:	ldp	x29, x30, [sp], #48
   127b0:	ret
   127b4:	mov	x14, x5
   127b8:	b.eq	128d4 <mpc_ui_ui_sub@@Base+0x360>  // b.none
   127bc:	cbnz	x8, 12b58 <mpc_ui_ui_sub@@Base+0x5e4>
   127c0:	orr	x1, x2, x9
   127c4:	cbz	x1, 12884 <mpc_ui_ui_sub@@Base+0x310>
   127c8:	cmn	w0, #0x1
   127cc:	b.eq	12f74 <mpc_ui_ui_sub@@Base+0xa00>  // b.none
   127d0:	mov	x1, #0x7fff                	// #32767
   127d4:	mvn	w0, w0
   127d8:	cmp	x3, x1
   127dc:	b.ne	12b6c <mpc_ui_ui_sub@@Base+0x5f8>  // b.any
   127e0:	orr	x0, x4, x13
   127e4:	cbnz	x0, 12ecc <mpc_ui_ui_sub@@Base+0x958>
   127e8:	mov	x16, x14
   127ec:	nop
   127f0:	mov	x4, #0x0                   	// #0
   127f4:	fmov	d0, x4
   127f8:	lsl	x16, x16, #63
   127fc:	orr	x5, x16, #0x7fff000000000000
   12800:	fmov	v0.d[1], x5
   12804:	b	127ac <mpc_ui_ui_sub@@Base+0x238>
   12808:	sub	w5, w8, w0
   1280c:	cmp	w5, #0x0
   12810:	b.le	129dc <mpc_ui_ui_sub@@Base+0x468>
   12814:	cbz	x0, 1291c <mpc_ui_ui_sub@@Base+0x3a8>
   12818:	orr	x4, x4, #0x8000000000000
   1281c:	mov	x0, #0x7fff                	// #32767
   12820:	cmp	x1, x0
   12824:	b.eq	12a6c <mpc_ui_ui_sub@@Base+0x4f8>  // b.none
   12828:	cmp	w5, #0x74
   1282c:	b.gt	12c00 <mpc_ui_ui_sub@@Base+0x68c>
   12830:	cmp	w5, #0x3f
   12834:	b.gt	12d00 <mpc_ui_ui_sub@@Base+0x78c>
   12838:	mov	w0, #0x40                  	// #64
   1283c:	sub	w0, w0, w5
   12840:	lsr	x6, x13, x5
   12844:	lsl	x13, x13, x0
   12848:	cmp	x13, #0x0
   1284c:	lsl	x0, x4, x0
   12850:	cset	x3, ne  // ne = any
   12854:	orr	x0, x0, x6
   12858:	lsr	x4, x4, x5
   1285c:	orr	x0, x0, x3
   12860:	add	x2, x2, x4
   12864:	b	12c0c <mpc_ui_ui_sub@@Base+0x698>
   12868:	orr	x3, x4, x13
   1286c:	cbz	x3, 12bdc <mpc_ui_ui_sub@@Base+0x668>
   12870:	subs	w0, w0, #0x1
   12874:	b.ne	12674 <mpc_ui_ui_sub@@Base+0x100>  // b.any
   12878:	subs	x9, x9, x13
   1287c:	sbc	x2, x2, x4
   12880:	b	126c4 <mpc_ui_ui_sub@@Base+0x150>
   12884:	mov	x0, #0x7fff                	// #32767
   12888:	cmp	x3, x0
   1288c:	b.eq	12fc0 <mpc_ui_ui_sub@@Base+0xa4c>  // b.none
   12890:	mov	w7, w11
   12894:	mov	x2, x4
   12898:	mov	x9, x13
   1289c:	mov	x1, x3
   128a0:	mov	x12, x5
   128a4:	nop
   128a8:	orr	x8, x9, x2
   128ac:	and	x0, x9, #0x7
   128b0:	mov	w5, #0x0                   	// #0
   128b4:	cbnz	x1, 12744 <mpc_ui_ui_sub@@Base+0x1d0>
   128b8:	cbnz	x8, 12738 <mpc_ui_ui_sub@@Base+0x1c4>
   128bc:	mov	x2, #0x0                   	// #0
   128c0:	mov	x1, #0x0                   	// #0
   128c4:	mov	w0, #0x0                   	// #0
   128c8:	and	x2, x2, #0xffffffffffff
   128cc:	and	w1, w1, #0x7fff
   128d0:	b	12790 <mpc_ui_ui_sub@@Base+0x21c>
   128d4:	add	x5, x8, #0x1
   128d8:	tst	x5, #0x7ffe
   128dc:	b.ne	12bac <mpc_ui_ui_sub@@Base+0x638>  // b.any
   128e0:	orr	x5, x2, x9
   128e4:	orr	x8, x4, x13
   128e8:	cbnz	x1, 12d6c <mpc_ui_ui_sub@@Base+0x7f8>
   128ec:	cbz	x5, 12e14 <mpc_ui_ui_sub@@Base+0x8a0>
   128f0:	cbz	x8, 12e28 <mpc_ui_ui_sub@@Base+0x8b4>
   128f4:	subs	x5, x9, x13
   128f8:	cmp	x9, x13
   128fc:	sbc	x3, x2, x4
   12900:	tbz	x3, #51, 12ff4 <mpc_ui_ui_sub@@Base+0xa80>
   12904:	subs	x9, x13, x9
   12908:	mov	w7, w11
   1290c:	sbc	x2, x4, x2
   12910:	mov	x12, x14
   12914:	orr	x8, x9, x2
   12918:	b	12734 <mpc_ui_ui_sub@@Base+0x1c0>
   1291c:	orr	x0, x4, x13
   12920:	cbz	x0, 12df4 <mpc_ui_ui_sub@@Base+0x880>
   12924:	subs	w5, w5, #0x1
   12928:	b.ne	1281c <mpc_ui_ui_sub@@Base+0x2a8>  // b.any
   1292c:	adds	x9, x9, x13
   12930:	adc	x2, x4, x2
   12934:	nop
   12938:	tbz	x2, #51, 128a8 <mpc_ui_ui_sub@@Base+0x334>
   1293c:	add	x1, x1, #0x1
   12940:	mov	x0, #0x7fff                	// #32767
   12944:	cmp	x1, x0
   12948:	b.eq	12e34 <mpc_ui_ui_sub@@Base+0x8c0>  // b.none
   1294c:	and	x0, x9, #0x1
   12950:	and	x3, x2, #0xfff7ffffffffffff
   12954:	orr	x9, x0, x9, lsr #1
   12958:	mov	w5, #0x0                   	// #0
   1295c:	orr	x9, x9, x2, lsl #63
   12960:	lsr	x2, x3, #1
   12964:	and	x0, x9, #0x7
   12968:	b	12744 <mpc_ui_ui_sub@@Base+0x1d0>
   1296c:	and	x3, x15, #0xc00000
   12970:	cbz	x3, 129a8 <mpc_ui_ui_sub@@Base+0x434>
   12974:	cmp	x3, #0x400, lsl #12
   12978:	b.eq	129a0 <mpc_ui_ui_sub@@Base+0x42c>  // b.none
   1297c:	cmp	x3, #0x800, lsl #12
   12980:	csel	w12, w12, wzr, eq  // eq = none
   12984:	cbnz	w12, 129a8 <mpc_ui_ui_sub@@Base+0x434>
   12988:	mov	w1, #0x14                  	// #20
   1298c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   12990:	orr	w0, w0, w1
   12994:	mov	x8, #0xffffffffffffffff    	// #-1
   12998:	mov	x1, #0x7ffe                	// #32766
   1299c:	b	128c8 <mpc_ui_ui_sub@@Base+0x354>
   129a0:	cbnz	x12, 12988 <mpc_ui_ui_sub@@Base+0x414>
   129a4:	nop
   129a8:	mov	w1, #0x14                  	// #20
   129ac:	and	x16, x7, #0xff
   129b0:	orr	w0, w0, w1
   129b4:	mov	x4, #0x0                   	// #0
   129b8:	fmov	d0, x4
   129bc:	lsl	x16, x16, #63
   129c0:	orr	x5, x16, #0x7fff000000000000
   129c4:	fmov	v0.d[1], x5
   129c8:	str	q0, [sp, #16]
   129cc:	bl	13908 <mpc_ui_ui_sub@@Base+0x1394>
   129d0:	ldr	q0, [sp, #16]
   129d4:	ldp	x29, x30, [sp], #48
   129d8:	ret
   129dc:	b.eq	12b1c <mpc_ui_ui_sub@@Base+0x5a8>  // b.none
   129e0:	cbnz	x8, 12ca0 <mpc_ui_ui_sub@@Base+0x72c>
   129e4:	orr	x0, x2, x9
   129e8:	cbz	x0, 12f0c <mpc_ui_ui_sub@@Base+0x998>
   129ec:	cmn	w5, #0x1
   129f0:	b.eq	1306c <mpc_ui_ui_sub@@Base+0xaf8>  // b.none
   129f4:	mov	x0, #0x7fff                	// #32767
   129f8:	mvn	w5, w5
   129fc:	cmp	x3, x0
   12a00:	b.ne	12cb4 <mpc_ui_ui_sub@@Base+0x740>  // b.any
   12a04:	orr	x0, x4, x13
   12a08:	cbz	x0, 127f0 <mpc_ui_ui_sub@@Base+0x27c>
   12a0c:	lsr	x5, x4, #50
   12a10:	mov	x9, x13
   12a14:	eor	x5, x5, #0x1
   12a18:	mov	x2, x4
   12a1c:	and	w5, w5, #0x1
   12a20:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   12a24:	mov	w0, #0x10                  	// #16
   12a28:	cbz	x12, 12a34 <mpc_ui_ui_sub@@Base+0x4c0>
   12a2c:	adds	x9, x9, #0x8
   12a30:	cinc	x2, x2, cs  // cs = hs, nlast
   12a34:	and	x3, x2, #0x8000000000000
   12a38:	cbz	w5, 12770 <mpc_ui_ui_sub@@Base+0x1fc>
   12a3c:	orr	w0, w0, #0x8
   12a40:	b	12770 <mpc_ui_ui_sub@@Base+0x1fc>
   12a44:	mov	w0, #0x10                  	// #16
   12a48:	cbnz	x12, 12a34 <mpc_ui_ui_sub@@Base+0x4c0>
   12a4c:	b	12a2c <mpc_ui_ui_sub@@Base+0x4b8>
   12a50:	and	x3, x9, #0xf
   12a54:	mov	w0, #0x10                  	// #16
   12a58:	cmp	x3, #0x4
   12a5c:	b.eq	12a34 <mpc_ui_ui_sub@@Base+0x4c0>  // b.none
   12a60:	adds	x9, x9, #0x4
   12a64:	cinc	x2, x2, cs  // cs = hs, nlast
   12a68:	b	12a34 <mpc_ui_ui_sub@@Base+0x4c0>
   12a6c:	orr	x0, x2, x9
   12a70:	cbz	x0, 127f0 <mpc_ui_ui_sub@@Base+0x27c>
   12a74:	lsr	x5, x2, #50
   12a78:	eor	x5, x5, #0x1
   12a7c:	and	w5, w5, #0x1
   12a80:	mov	w0, w5
   12a84:	mov	x1, #0x7fff                	// #32767
   12a88:	mov	x3, #0x7fff                	// #32767
   12a8c:	extr	x8, x2, x9, #3
   12a90:	cmp	x1, x3
   12a94:	lsr	x2, x2, #3
   12a98:	b.ne	128c8 <mpc_ui_ui_sub@@Base+0x354>  // b.any
   12a9c:	orr	x1, x8, x2
   12aa0:	cbz	x1, 1310c <mpc_ui_ui_sub@@Base+0xb98>
   12aa4:	orr	x2, x2, #0x800000000000
   12aa8:	mov	w1, #0x7fff                	// #32767
   12aac:	and	x2, x2, #0xffffffffffff
   12ab0:	b	12790 <mpc_ui_ui_sub@@Base+0x21c>
   12ab4:	mov	x9, x3
   12ab8:	and	x2, x2, #0xfff7ffffffffffff
   12abc:	sub	x1, x1, x4
   12ac0:	orr	x8, x9, x2
   12ac4:	and	x0, x9, #0x7
   12ac8:	mov	w5, #0x0                   	// #0
   12acc:	cbz	x1, 128b8 <mpc_ui_ui_sub@@Base+0x344>
   12ad0:	b	12744 <mpc_ui_ui_sub@@Base+0x1d0>
   12ad4:	clz	x2, x9
   12ad8:	add	w0, w2, #0x34
   12adc:	cmp	w0, #0x3f
   12ae0:	b.le	126d8 <mpc_ui_ui_sub@@Base+0x164>
   12ae4:	sub	w2, w2, #0xc
   12ae8:	lsl	x2, x9, x2
   12aec:	b	126ec <mpc_ui_ui_sub@@Base+0x178>
   12af0:	orr	x4, x4, x13
   12af4:	cmp	x4, #0x0
   12af8:	cset	x3, ne  // ne = any
   12afc:	b	126bc <mpc_ui_ui_sub@@Base+0x148>
   12b00:	and	x3, x2, #0x8000000000000
   12b04:	mov	w0, #0x0                   	// #0
   12b08:	cbz	w5, 12770 <mpc_ui_ui_sub@@Base+0x1fc>
   12b0c:	mov	w0, #0x0                   	// #0
   12b10:	tbz	w15, #11, 12770 <mpc_ui_ui_sub@@Base+0x1fc>
   12b14:	orr	w0, w0, #0x8
   12b18:	b	12770 <mpc_ui_ui_sub@@Base+0x1fc>
   12b1c:	add	x0, x8, #0x1
   12b20:	tst	x0, #0x7ffe
   12b24:	b.ne	12d2c <mpc_ui_ui_sub@@Base+0x7b8>  // b.any
   12b28:	orr	x0, x2, x9
   12b2c:	cbnz	x8, 12ee8 <mpc_ui_ui_sub@@Base+0x974>
   12b30:	orr	x8, x4, x13
   12b34:	cbz	x0, 12f3c <mpc_ui_ui_sub@@Base+0x9c8>
   12b38:	cbz	x8, 12e28 <mpc_ui_ui_sub@@Base+0x8b4>
   12b3c:	adds	x9, x9, x13
   12b40:	adc	x2, x4, x2
   12b44:	tbz	x2, #51, 12914 <mpc_ui_ui_sub@@Base+0x3a0>
   12b48:	and	x2, x2, #0xfff7ffffffffffff
   12b4c:	and	x0, x9, #0x7
   12b50:	mov	x1, #0x1                   	// #1
   12b54:	b	12744 <mpc_ui_ui_sub@@Base+0x1d0>
   12b58:	mov	x1, #0x7fff                	// #32767
   12b5c:	neg	w0, w0
   12b60:	orr	x2, x2, #0x8000000000000
   12b64:	cmp	x3, x1
   12b68:	b.eq	127e0 <mpc_ui_ui_sub@@Base+0x26c>  // b.none
   12b6c:	cmp	w0, #0x74
   12b70:	b.gt	12c7c <mpc_ui_ui_sub@@Base+0x708>
   12b74:	cmp	w0, #0x3f
   12b78:	b.gt	12e98 <mpc_ui_ui_sub@@Base+0x924>
   12b7c:	mov	w1, #0x40                  	// #64
   12b80:	sub	w1, w1, w0
   12b84:	lsr	x5, x9, x0
   12b88:	lsl	x9, x9, x1
   12b8c:	cmp	x9, #0x0
   12b90:	lsl	x9, x2, x1
   12b94:	cset	x1, ne  // ne = any
   12b98:	orr	x9, x9, x5
   12b9c:	lsr	x0, x2, x0
   12ba0:	orr	x9, x9, x1
   12ba4:	sub	x4, x4, x0
   12ba8:	b	12c88 <mpc_ui_ui_sub@@Base+0x714>
   12bac:	subs	x5, x9, x13
   12bb0:	cmp	x9, x13
   12bb4:	sbc	x3, x2, x4
   12bb8:	tbnz	x3, #51, 12d54 <mpc_ui_ui_sub@@Base+0x7e0>
   12bbc:	orr	x8, x5, x3
   12bc0:	cbnz	x8, 12e80 <mpc_ui_ui_sub@@Base+0x90c>
   12bc4:	and	x15, x15, #0xc00000
   12bc8:	mov	x2, #0x0                   	// #0
   12bcc:	cmp	x15, #0x800, lsl #12
   12bd0:	mov	x1, #0x0                   	// #0
   12bd4:	cset	w7, eq  // eq = none
   12bd8:	b	128c8 <mpc_ui_ui_sub@@Base+0x354>
   12bdc:	mov	x0, #0x7fff                	// #32767
   12be0:	cmp	x8, x0
   12be4:	b.ne	128a8 <mpc_ui_ui_sub@@Base+0x334>  // b.any
   12be8:	orr	x0, x2, x9
   12bec:	cbnz	x0, 12a74 <mpc_ui_ui_sub@@Base+0x500>
   12bf0:	mov	x2, #0x0                   	// #0
   12bf4:	mov	x8, #0x0                   	// #0
   12bf8:	mov	w0, #0x0                   	// #0
   12bfc:	b	12a9c <mpc_ui_ui_sub@@Base+0x528>
   12c00:	orr	x4, x4, x13
   12c04:	cmp	x4, #0x0
   12c08:	cset	x0, ne  // ne = any
   12c0c:	adds	x9, x0, x9
   12c10:	cinc	x2, x2, cs  // cs = hs, nlast
   12c14:	b	12938 <mpc_ui_ui_sub@@Base+0x3c4>
   12c18:	mov	w4, #0x80                  	// #128
   12c1c:	sub	w4, w4, w0
   12c20:	cmp	w0, #0x40
   12c24:	sub	w9, w1, #0x3f
   12c28:	lsl	x0, x2, x4
   12c2c:	orr	x0, x3, x0
   12c30:	csel	x3, x0, x3, ne  // ne = any
   12c34:	lsr	x9, x2, x9
   12c38:	cmp	x3, #0x0
   12c3c:	mov	x2, #0x0                   	// #0
   12c40:	cset	x0, ne  // ne = any
   12c44:	orr	x9, x0, x9
   12c48:	mov	x8, x9
   12c4c:	b	12734 <mpc_ui_ui_sub@@Base+0x1c0>
   12c50:	mov	w5, #0x80                  	// #128
   12c54:	sub	w5, w5, w0
   12c58:	subs	w0, w0, #0x40
   12c5c:	lsl	x5, x4, x5
   12c60:	orr	x5, x13, x5
   12c64:	csel	x13, x5, x13, ne  // ne = any
   12c68:	lsr	x4, x4, x0
   12c6c:	cmp	x13, #0x0
   12c70:	cset	x3, ne  // ne = any
   12c74:	orr	x3, x3, x4
   12c78:	b	126bc <mpc_ui_ui_sub@@Base+0x148>
   12c7c:	orr	x2, x2, x9
   12c80:	cmp	x2, #0x0
   12c84:	cset	x9, ne  // ne = any
   12c88:	subs	x9, x13, x9
   12c8c:	mov	w7, w11
   12c90:	sbc	x2, x4, xzr
   12c94:	mov	x1, x3
   12c98:	mov	x12, x14
   12c9c:	b	126c4 <mpc_ui_ui_sub@@Base+0x150>
   12ca0:	mov	x0, #0x7fff                	// #32767
   12ca4:	neg	w5, w5
   12ca8:	orr	x2, x2, #0x8000000000000
   12cac:	cmp	x3, x0
   12cb0:	b.eq	12a04 <mpc_ui_ui_sub@@Base+0x490>  // b.none
   12cb4:	cmp	w5, #0x74
   12cb8:	b.gt	12e88 <mpc_ui_ui_sub@@Base+0x914>
   12cbc:	cmp	w5, #0x3f
   12cc0:	b.gt	12f48 <mpc_ui_ui_sub@@Base+0x9d4>
   12cc4:	mov	w1, #0x40                  	// #64
   12cc8:	sub	w1, w1, w5
   12ccc:	lsr	x6, x9, x5
   12cd0:	lsl	x9, x9, x1
   12cd4:	cmp	x9, #0x0
   12cd8:	cset	x0, ne  // ne = any
   12cdc:	lsl	x9, x2, x1
   12ce0:	orr	x9, x9, x6
   12ce4:	lsr	x5, x2, x5
   12ce8:	orr	x9, x9, x0
   12cec:	add	x4, x4, x5
   12cf0:	adds	x9, x9, x13
   12cf4:	mov	x1, x3
   12cf8:	cinc	x2, x4, cs  // cs = hs, nlast
   12cfc:	b	12938 <mpc_ui_ui_sub@@Base+0x3c4>
   12d00:	mov	w0, #0x80                  	// #128
   12d04:	sub	w0, w0, w5
   12d08:	subs	w5, w5, #0x40
   12d0c:	lsl	x0, x4, x0
   12d10:	orr	x0, x13, x0
   12d14:	csel	x13, x0, x13, ne  // ne = any
   12d18:	lsr	x4, x4, x5
   12d1c:	cmp	x13, #0x0
   12d20:	cset	x0, ne  // ne = any
   12d24:	orr	x0, x0, x4
   12d28:	b	12c0c <mpc_ui_ui_sub@@Base+0x698>
   12d2c:	mov	x1, #0x7fff                	// #32767
   12d30:	cmp	x0, x1
   12d34:	b.eq	12f90 <mpc_ui_ui_sub@@Base+0xa1c>  // b.none
   12d38:	adds	x9, x9, x13
   12d3c:	mov	x1, x0
   12d40:	adc	x2, x4, x2
   12d44:	ubfx	x0, x9, #1, #3
   12d48:	extr	x9, x2, x9, #1
   12d4c:	lsr	x2, x2, #1
   12d50:	b	12744 <mpc_ui_ui_sub@@Base+0x1d0>
   12d54:	cmp	x13, x9
   12d58:	mov	w7, w11
   12d5c:	sbc	x3, x4, x2
   12d60:	sub	x9, x13, x9
   12d64:	mov	x12, x14
   12d68:	b	126cc <mpc_ui_ui_sub@@Base+0x158>
   12d6c:	mov	x12, #0x7fff                	// #32767
   12d70:	cmp	x1, x12
   12d74:	b.eq	12da0 <mpc_ui_ui_sub@@Base+0x82c>  // b.none
   12d78:	cmp	x3, x12
   12d7c:	b.eq	12fd0 <mpc_ui_ui_sub@@Base+0xa5c>  // b.none
   12d80:	cbnz	x5, 12db8 <mpc_ui_ui_sub@@Base+0x844>
   12d84:	mov	w5, w0
   12d88:	cbnz	x8, 130b0 <mpc_ui_ui_sub@@Base+0xb3c>
   12d8c:	mov	w7, #0x0                   	// #0
   12d90:	mov	x2, #0xffffffffffff        	// #281474976710655
   12d94:	mov	w0, #0x1                   	// #1
   12d98:	mov	x8, #0xffffffffffffffff    	// #-1
   12d9c:	b	12aa4 <mpc_ui_ui_sub@@Base+0x530>
   12da0:	cbz	x5, 130cc <mpc_ui_ui_sub@@Base+0xb58>
   12da4:	lsr	x0, x2, #50
   12da8:	cmp	x3, x1
   12dac:	eor	x0, x0, #0x1
   12db0:	and	w0, w0, #0x1
   12db4:	b.eq	12fd0 <mpc_ui_ui_sub@@Base+0xa5c>  // b.none
   12db8:	cbz	x8, 12fec <mpc_ui_ui_sub@@Base+0xa78>
   12dbc:	bfi	x6, x2, #61, #3
   12dc0:	lsr	x3, x2, #3
   12dc4:	tbz	x2, #50, 12de0 <mpc_ui_ui_sub@@Base+0x86c>
   12dc8:	lsr	x1, x4, #3
   12dcc:	tbnz	x4, #50, 12de0 <mpc_ui_ui_sub@@Base+0x86c>
   12dd0:	mov	x6, x10
   12dd4:	mov	w7, w11
   12dd8:	bfi	x6, x4, #61, #3
   12ddc:	mov	x3, x1
   12de0:	extr	x2, x3, x6, #61
   12de4:	bfi	x6, x2, #61, #3
   12de8:	lsr	x2, x2, #3
   12dec:	mov	x8, x6
   12df0:	b	12a9c <mpc_ui_ui_sub@@Base+0x528>
   12df4:	mov	x0, #0x7fff                	// #32767
   12df8:	cmp	x8, x0
   12dfc:	b.ne	128a8 <mpc_ui_ui_sub@@Base+0x334>  // b.any
   12e00:	orr	x0, x2, x9
   12e04:	cbz	x0, 12bf0 <mpc_ui_ui_sub@@Base+0x67c>
   12e08:	lsr	x5, x2, #50
   12e0c:	eor	w5, w5, #0x1
   12e10:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   12e14:	cbz	x8, 12f28 <mpc_ui_ui_sub@@Base+0x9b4>
   12e18:	mov	w7, w11
   12e1c:	mov	x2, x4
   12e20:	mov	x9, x13
   12e24:	mov	x12, x14
   12e28:	mov	x1, #0x0                   	// #0
   12e2c:	mov	x3, #0x0                   	// #0
   12e30:	b	12b0c <mpc_ui_ui_sub@@Base+0x598>
   12e34:	ands	x3, x15, #0xc00000
   12e38:	b.eq	12ec4 <mpc_ui_ui_sub@@Base+0x950>  // b.none
   12e3c:	cmp	x3, #0x400, lsl #12
   12e40:	eor	w0, w7, #0x1
   12e44:	cset	w1, eq  // eq = none
   12e48:	tst	w1, w0
   12e4c:	b.ne	130e8 <mpc_ui_ui_sub@@Base+0xb74>  // b.any
   12e50:	cmp	x3, #0x800, lsl #12
   12e54:	b.eq	13094 <mpc_ui_ui_sub@@Base+0xb20>  // b.none
   12e58:	cmp	x3, #0x400, lsl #12
   12e5c:	mov	w0, #0x14                  	// #20
   12e60:	b.ne	12970 <mpc_ui_ui_sub@@Base+0x3fc>  // b.any
   12e64:	mov	x2, #0xffffffffffffffff    	// #-1
   12e68:	mov	x1, #0x7ffe                	// #32766
   12e6c:	mov	x9, x2
   12e70:	mov	w5, #0x0                   	// #0
   12e74:	mov	w0, #0x14                  	// #20
   12e78:	cbnz	x12, 12a34 <mpc_ui_ui_sub@@Base+0x4c0>
   12e7c:	b	12a2c <mpc_ui_ui_sub@@Base+0x4b8>
   12e80:	mov	x9, x5
   12e84:	b	126cc <mpc_ui_ui_sub@@Base+0x158>
   12e88:	orr	x2, x2, x9
   12e8c:	cmp	x2, #0x0
   12e90:	cset	x9, ne  // ne = any
   12e94:	b	12cf0 <mpc_ui_ui_sub@@Base+0x77c>
   12e98:	mov	w1, #0x80                  	// #128
   12e9c:	sub	w1, w1, w0
   12ea0:	subs	w0, w0, #0x40
   12ea4:	lsl	x1, x2, x1
   12ea8:	orr	x1, x9, x1
   12eac:	csel	x9, x1, x9, ne  // ne = any
   12eb0:	lsr	x2, x2, x0
   12eb4:	cmp	x9, #0x0
   12eb8:	cset	x9, ne  // ne = any
   12ebc:	orr	x9, x9, x2
   12ec0:	b	12c88 <mpc_ui_ui_sub@@Base+0x714>
   12ec4:	mov	w0, #0x14                  	// #20
   12ec8:	b	129b4 <mpc_ui_ui_sub@@Base+0x440>
   12ecc:	lsr	x5, x4, #50
   12ed0:	mov	w7, w11
   12ed4:	eor	x5, x5, #0x1
   12ed8:	mov	x9, x13
   12edc:	and	w5, w5, #0x1
   12ee0:	mov	x2, x4
   12ee4:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   12ee8:	mov	x8, #0x7fff                	// #32767
   12eec:	cmp	x1, x8
   12ef0:	b.eq	13010 <mpc_ui_ui_sub@@Base+0xa9c>  // b.none
   12ef4:	cmp	x3, x8
   12ef8:	b.eq	13084 <mpc_ui_ui_sub@@Base+0xb10>  // b.none
   12efc:	cbnz	x0, 13028 <mpc_ui_ui_sub@@Base+0xab4>
   12f00:	mov	x2, x4
   12f04:	mov	x9, x13
   12f08:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   12f0c:	mov	x0, #0x7fff                	// #32767
   12f10:	cmp	x3, x0
   12f14:	b.eq	130c0 <mpc_ui_ui_sub@@Base+0xb4c>  // b.none
   12f18:	mov	x2, x4
   12f1c:	mov	x9, x13
   12f20:	mov	x1, x3
   12f24:	b	128a8 <mpc_ui_ui_sub@@Base+0x334>
   12f28:	and	x15, x15, #0xc00000
   12f2c:	mov	x2, #0x0                   	// #0
   12f30:	cmp	x15, #0x800, lsl #12
   12f34:	cset	w7, eq  // eq = none
   12f38:	b	128c8 <mpc_ui_ui_sub@@Base+0x354>
   12f3c:	mov	x2, x4
   12f40:	mov	x9, x13
   12f44:	b	12734 <mpc_ui_ui_sub@@Base+0x1c0>
   12f48:	mov	w0, #0x80                  	// #128
   12f4c:	sub	w0, w0, w5
   12f50:	subs	w5, w5, #0x40
   12f54:	lsl	x0, x2, x0
   12f58:	orr	x0, x9, x0
   12f5c:	csel	x9, x0, x9, ne  // ne = any
   12f60:	lsr	x2, x2, x5
   12f64:	cmp	x9, #0x0
   12f68:	cset	x9, ne  // ne = any
   12f6c:	orr	x9, x9, x2
   12f70:	b	12cf0 <mpc_ui_ui_sub@@Base+0x77c>
   12f74:	cmp	x13, x9
   12f78:	mov	w7, w11
   12f7c:	sbc	x2, x4, x2
   12f80:	sub	x9, x13, x9
   12f84:	mov	x1, x3
   12f88:	mov	x12, x5
   12f8c:	b	126c4 <mpc_ui_ui_sub@@Base+0x150>
   12f90:	ands	x3, x15, #0xc00000
   12f94:	b.eq	12ec4 <mpc_ui_ui_sub@@Base+0x950>  // b.none
   12f98:	cmp	x3, #0x400, lsl #12
   12f9c:	eor	w0, w7, #0x1
   12fa0:	csel	w0, w0, wzr, eq  // eq = none
   12fa4:	cbnz	w0, 130e8 <mpc_ui_ui_sub@@Base+0xb74>
   12fa8:	cmp	x3, #0x800, lsl #12
   12fac:	b.ne	12e58 <mpc_ui_ui_sub@@Base+0x8e4>  // b.any
   12fb0:	cbz	x12, 13098 <mpc_ui_ui_sub@@Base+0xb24>
   12fb4:	mov	w0, #0x14                  	// #20
   12fb8:	mov	x16, #0x1                   	// #1
   12fbc:	b	129b4 <mpc_ui_ui_sub@@Base+0x440>
   12fc0:	orr	x0, x4, x13
   12fc4:	cbnz	x0, 12ecc <mpc_ui_ui_sub@@Base+0x958>
   12fc8:	mov	w7, w11
   12fcc:	b	12bf0 <mpc_ui_ui_sub@@Base+0x67c>
   12fd0:	cbz	x8, 130dc <mpc_ui_ui_sub@@Base+0xb68>
   12fd4:	tst	x4, #0x4000000000000
   12fd8:	csinc	w0, w0, wzr, ne  // ne = any
   12fdc:	cbnz	x5, 12dbc <mpc_ui_ui_sub@@Base+0x848>
   12fe0:	mov	w7, w11
   12fe4:	mov	x2, x4
   12fe8:	mov	x9, x13
   12fec:	mov	w5, w0
   12ff0:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   12ff4:	orr	x8, x5, x3
   12ff8:	cbz	x8, 12f28 <mpc_ui_ui_sub@@Base+0x9b4>
   12ffc:	and	x0, x5, #0x7
   13000:	mov	x9, x5
   13004:	mov	x2, x3
   13008:	mov	w5, #0x1                   	// #1
   1300c:	b	12744 <mpc_ui_ui_sub@@Base+0x1d0>
   13010:	cbz	x0, 1307c <mpc_ui_ui_sub@@Base+0xb08>
   13014:	lsr	x5, x2, #50
   13018:	cmp	x3, x1
   1301c:	eor	x5, x5, #0x1
   13020:	and	w5, w5, #0x1
   13024:	b.eq	130f4 <mpc_ui_ui_sub@@Base+0xb80>  // b.none
   13028:	orr	x13, x4, x13
   1302c:	cbz	x13, 12a80 <mpc_ui_ui_sub@@Base+0x50c>
   13030:	bfi	x6, x2, #61, #3
   13034:	lsr	x0, x2, #3
   13038:	tbz	x2, #50, 13054 <mpc_ui_ui_sub@@Base+0xae0>
   1303c:	lsr	x1, x4, #3
   13040:	tbnz	x4, #50, 13054 <mpc_ui_ui_sub@@Base+0xae0>
   13044:	and	x6, x10, #0x1fffffffffffffff
   13048:	mov	w7, w11
   1304c:	orr	x6, x6, x4, lsl #61
   13050:	mov	x0, x1
   13054:	extr	x2, x0, x6, #61
   13058:	mov	w0, w5
   1305c:	bfi	x6, x2, #61, #3
   13060:	lsr	x2, x2, #3
   13064:	mov	x8, x6
   13068:	b	12a9c <mpc_ui_ui_sub@@Base+0x528>
   1306c:	adds	x9, x9, x13
   13070:	mov	x1, x3
   13074:	adc	x2, x4, x2
   13078:	b	12938 <mpc_ui_ui_sub@@Base+0x3c4>
   1307c:	cmp	x3, x1
   13080:	b.ne	12f00 <mpc_ui_ui_sub@@Base+0x98c>  // b.any
   13084:	orr	x1, x4, x13
   13088:	cbnz	x1, 130fc <mpc_ui_ui_sub@@Base+0xb88>
   1308c:	cbz	x0, 12bf0 <mpc_ui_ui_sub@@Base+0x67c>
   13090:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   13094:	cbnz	x16, 12fb4 <mpc_ui_ui_sub@@Base+0xa40>
   13098:	mov	x2, #0xffffffffffffffff    	// #-1
   1309c:	mov	w7, #0x0                   	// #0
   130a0:	mov	x9, x2
   130a4:	mov	x1, #0x7ffe                	// #32766
   130a8:	mov	w0, #0x14                  	// #20
   130ac:	b	12774 <mpc_ui_ui_sub@@Base+0x200>
   130b0:	mov	w7, w11
   130b4:	mov	x2, x4
   130b8:	mov	x9, x13
   130bc:	b	12a80 <mpc_ui_ui_sub@@Base+0x50c>
   130c0:	orr	x0, x4, x13
   130c4:	cbz	x0, 12bf0 <mpc_ui_ui_sub@@Base+0x67c>
   130c8:	b	12a0c <mpc_ui_ui_sub@@Base+0x498>
   130cc:	cmp	x3, x1
   130d0:	b.eq	12fd0 <mpc_ui_ui_sub@@Base+0xa5c>  // b.none
   130d4:	mov	w5, #0x0                   	// #0
   130d8:	b	12d88 <mpc_ui_ui_sub@@Base+0x814>
   130dc:	cbnz	x5, 12fec <mpc_ui_ui_sub@@Base+0xa78>
   130e0:	mov	w5, w0
   130e4:	b	12d88 <mpc_ui_ui_sub@@Base+0x814>
   130e8:	mov	w0, #0x14                  	// #20
   130ec:	mov	x16, #0x0                   	// #0
   130f0:	b	129b4 <mpc_ui_ui_sub@@Base+0x440>
   130f4:	orr	x1, x4, x13
   130f8:	cbz	x1, 12a80 <mpc_ui_ui_sub@@Base+0x50c>
   130fc:	tst	x4, #0x4000000000000
   13100:	csinc	w5, w5, wzr, ne  // ne = any
   13104:	cbnz	x0, 13030 <mpc_ui_ui_sub@@Base+0xabc>
   13108:	b	12f00 <mpc_ui_ui_sub@@Base+0x98c>
   1310c:	mov	x8, #0x0                   	// #0
   13110:	mov	w1, #0x7fff                	// #32767
   13114:	mov	x2, #0x0                   	// #0
   13118:	b	12790 <mpc_ui_ui_sub@@Base+0x21c>
   1311c:	nop
   13120:	stp	x29, x30, [sp, #-80]!
   13124:	mov	x29, sp
   13128:	str	q0, [sp, #48]
   1312c:	str	q1, [sp, #64]
   13130:	ldp	x1, x0, [sp, #48]
   13134:	ldp	x6, x2, [sp, #64]
   13138:	mrs	x11, fpcr
   1313c:	lsr	x3, x0, #63
   13140:	ubfx	x7, x0, #0, #48
   13144:	and	w12, w3, #0xff
   13148:	mov	x14, x3
   1314c:	ubfx	x3, x0, #48, #15
   13150:	cbz	w3, 134f8 <mpc_ui_ui_sub@@Base+0xf84>
   13154:	mov	w4, #0x7fff                	// #32767
   13158:	cmp	w3, w4
   1315c:	b.eq	1359c <mpc_ui_ui_sub@@Base+0x1028>  // b.none
   13160:	and	x3, x3, #0xffff
   13164:	extr	x4, x7, x1, #61
   13168:	mov	x18, #0xffffffffffffc001    	// #-16383
   1316c:	orr	x7, x4, #0x8000000000000
   13170:	add	x3, x3, x18
   13174:	lsl	x5, x1, #3
   13178:	mov	x16, #0x0                   	// #0
   1317c:	mov	x1, #0x0                   	// #0
   13180:	mov	w0, #0x0                   	// #0
   13184:	lsr	x8, x2, #63
   13188:	ubfx	x4, x2, #0, #48
   1318c:	and	w15, w8, #0xff
   13190:	mov	x13, x8
   13194:	ubfx	x9, x2, #48, #15
   13198:	cbz	w9, 13558 <mpc_ui_ui_sub@@Base+0xfe4>
   1319c:	mov	w8, #0x7fff                	// #32767
   131a0:	cmp	w9, w8
   131a4:	b.eq	13228 <mpc_ui_ui_sub@@Base+0xcb4>  // b.none
   131a8:	and	x9, x9, #0xffff
   131ac:	mov	x17, #0xffffffffffffc001    	// #-16383
   131b0:	add	x9, x9, x17
   131b4:	extr	x2, x4, x6, #61
   131b8:	add	x9, x9, x3
   131bc:	lsl	x6, x6, #3
   131c0:	orr	x4, x2, #0x8000000000000
   131c4:	mov	x2, #0x0                   	// #0
   131c8:	eor	w8, w12, w15
   131cc:	cmp	x1, #0xa
   131d0:	and	w10, w8, #0xff
   131d4:	add	x3, x9, #0x1
   131d8:	and	x8, x8, #0xff
   131dc:	b.le	13260 <mpc_ui_ui_sub@@Base+0xcec>
   131e0:	cmp	x1, #0xb
   131e4:	b.eq	138f8 <mpc_ui_ui_sub@@Base+0x1384>  // b.none
   131e8:	mov	w15, w12
   131ec:	mov	x13, x14
   131f0:	mov	w10, w15
   131f4:	cmp	x16, #0x2
   131f8:	b.eq	135bc <mpc_ui_ui_sub@@Base+0x1048>  // b.none
   131fc:	mov	x4, x7
   13200:	mov	x6, x5
   13204:	mov	x2, x16
   13208:	mov	x8, x13
   1320c:	cmp	x2, #0x3
   13210:	b.ne	1327c <mpc_ui_ui_sub@@Base+0xd08>  // b.any
   13214:	orr	x4, x4, #0x800000000000
   13218:	mov	x5, x6
   1321c:	and	x4, x4, #0xffffffffffff
   13220:	mov	w1, #0x7fff                	// #32767
   13224:	b	13290 <mpc_ui_ui_sub@@Base+0xd1c>
   13228:	mov	x8, #0x7fff                	// #32767
   1322c:	orr	x2, x4, x6
   13230:	add	x9, x3, x8
   13234:	cbnz	x2, 132b4 <mpc_ui_ui_sub@@Base+0xd40>
   13238:	eor	w8, w12, w15
   1323c:	orr	x1, x1, #0x2
   13240:	and	w10, w8, #0xff
   13244:	cmp	x1, #0xa
   13248:	add	x3, x3, #0x8, lsl #12
   1324c:	and	x8, x8, #0xff
   13250:	mov	x6, #0x0                   	// #0
   13254:	b.gt	1386c <mpc_ui_ui_sub@@Base+0x12f8>
   13258:	mov	x4, #0x0                   	// #0
   1325c:	mov	x2, #0x2                   	// #2
   13260:	cmp	x1, #0x2
   13264:	b.gt	132dc <mpc_ui_ui_sub@@Base+0xd68>
   13268:	sub	x1, x1, #0x1
   1326c:	cmp	x1, #0x1
   13270:	b.hi	13318 <mpc_ui_ui_sub@@Base+0xda4>  // b.pmore
   13274:	cmp	x2, #0x2
   13278:	b.eq	135bc <mpc_ui_ui_sub@@Base+0x1048>  // b.none
   1327c:	cmp	x2, #0x1
   13280:	b.ne	13478 <mpc_ui_ui_sub@@Base+0xf04>  // b.any
   13284:	mov	w1, #0x0                   	// #0
   13288:	mov	x4, #0x0                   	// #0
   1328c:	mov	x5, #0x0                   	// #0
   13290:	mov	x3, #0x0                   	// #0
   13294:	orr	w1, w1, w10, lsl #15
   13298:	bfxil	x3, x4, #0, #48
   1329c:	fmov	d0, x5
   132a0:	bfi	x3, x1, #48, #16
   132a4:	fmov	v0.d[1], x3
   132a8:	cbnz	w0, 136e8 <mpc_ui_ui_sub@@Base+0x1174>
   132ac:	ldp	x29, x30, [sp], #80
   132b0:	ret
   132b4:	tst	x4, #0x800000000000
   132b8:	eor	w8, w12, w15
   132bc:	orr	x1, x1, #0x3
   132c0:	csinc	w0, w0, wzr, ne  // ne = any
   132c4:	and	w10, w8, #0xff
   132c8:	add	x3, x3, #0x8, lsl #12
   132cc:	cmp	x1, #0xa
   132d0:	and	x8, x8, #0xff
   132d4:	mov	x2, #0x3                   	// #3
   132d8:	b.gt	138ec <mpc_ui_ui_sub@@Base+0x1378>
   132dc:	mov	x12, #0x1                   	// #1
   132e0:	mov	x14, #0x530                 	// #1328
   132e4:	lsl	x1, x12, x1
   132e8:	tst	x1, x14
   132ec:	b.ne	134ec <mpc_ui_ui_sub@@Base+0xf78>  // b.any
   132f0:	mov	x14, #0x240                 	// #576
   132f4:	tst	x1, x14
   132f8:	b.ne	134d4 <mpc_ui_ui_sub@@Base+0xf60>  // b.any
   132fc:	mov	x12, #0x88                  	// #136
   13300:	tst	x1, x12
   13304:	b.eq	13318 <mpc_ui_ui_sub@@Base+0xda4>  // b.none
   13308:	mov	x7, x4
   1330c:	mov	x5, x6
   13310:	mov	x16, x2
   13314:	b	131f0 <mpc_ui_ui_sub@@Base+0xc7c>
   13318:	lsr	x13, x5, #32
   1331c:	and	x12, x6, #0xffffffff
   13320:	and	x15, x5, #0xffffffff
   13324:	lsr	x6, x6, #32
   13328:	and	x18, x4, #0xffffffff
   1332c:	lsr	x2, x4, #32
   13330:	mul	x4, x13, x12
   13334:	stp	x21, x22, [sp, #32]
   13338:	lsr	x22, x7, #32
   1333c:	and	x5, x7, #0xffffffff
   13340:	mul	x16, x12, x15
   13344:	madd	x7, x6, x15, x4
   13348:	stp	x19, x20, [sp, #16]
   1334c:	mul	x1, x13, x18
   13350:	mul	x17, x15, x18
   13354:	and	x30, x16, #0xffffffff
   13358:	madd	x15, x2, x15, x1
   1335c:	add	x16, x7, x16, lsr #32
   13360:	mul	x21, x22, x12
   13364:	cmp	x4, x16
   13368:	mul	x20, x22, x18
   1336c:	mov	x14, #0x100000000           	// #4294967296
   13370:	mul	x19, x13, x6
   13374:	add	x15, x15, x17, lsr #32
   13378:	mul	x12, x12, x5
   1337c:	and	x17, x17, #0xffffffff
   13380:	mul	x18, x5, x18
   13384:	add	x4, x19, x14
   13388:	madd	x7, x6, x5, x21
   1338c:	csel	x19, x4, x19, hi  // hi = pmore
   13390:	madd	x5, x2, x5, x20
   13394:	cmp	x1, x15
   13398:	mul	x13, x13, x2
   1339c:	add	x17, x17, x15, lsl #32
   133a0:	mul	x6, x6, x22
   133a4:	add	x7, x7, x12, lsr #32
   133a8:	add	x5, x5, x18, lsr #32
   133ac:	add	x4, x13, x14
   133b0:	mul	x2, x2, x22
   133b4:	csel	x13, x4, x13, hi  // hi = pmore
   133b8:	and	x1, x18, #0xffffffff
   133bc:	cmp	x21, x7
   133c0:	add	x4, x6, x14
   133c4:	add	x30, x30, x16, lsl #32
   133c8:	csel	x6, x4, x6, hi  // hi = pmore
   133cc:	add	x13, x13, x15, lsr #32
   133d0:	cmp	x20, x5
   133d4:	add	x1, x1, x5, lsl #32
   133d8:	add	x16, x17, x16, lsr #32
   133dc:	add	x14, x2, x14
   133e0:	csel	x2, x14, x2, hi  // hi = pmore
   133e4:	add	x16, x19, x16
   133e8:	adds	x1, x1, x13
   133ec:	and	x12, x12, #0xffffffff
   133f0:	cset	x13, cs  // cs = hs, nlast
   133f4:	cmp	x16, x17
   133f8:	cset	x4, cc  // cc = lo, ul, last
   133fc:	add	x12, x12, x7, lsl #32
   13400:	adds	x1, x1, x4
   13404:	lsr	x5, x5, #32
   13408:	cset	x4, cs  // cs = hs, nlast
   1340c:	cmp	x13, #0x0
   13410:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   13414:	add	x7, x6, x7, lsr #32
   13418:	cinc	x5, x5, ne  // ne = any
   1341c:	adds	x6, x16, x12
   13420:	cset	x4, cs  // cs = hs, nlast
   13424:	adds	x1, x1, x7
   13428:	cset	x7, cs  // cs = hs, nlast
   1342c:	adds	x4, x1, x4
   13430:	cset	x1, cs  // cs = hs, nlast
   13434:	cmp	x7, #0x0
   13438:	orr	x30, x30, x6, lsl #13
   1343c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   13440:	cinc	x1, x2, ne  // ne = any
   13444:	cmp	x30, #0x0
   13448:	add	x1, x1, x5
   1344c:	cset	x2, ne  // ne = any
   13450:	orr	x6, x2, x6, lsr #51
   13454:	orr	x6, x6, x4, lsl #13
   13458:	extr	x4, x1, x4, #51
   1345c:	tbz	x1, #39, 13770 <mpc_ui_ui_sub@@Base+0x11fc>
   13460:	ldp	x19, x20, [sp, #16]
   13464:	and	x1, x6, #0x1
   13468:	ldp	x21, x22, [sp, #32]
   1346c:	orr	x6, x1, x6, lsr #1
   13470:	orr	x6, x6, x4, lsl #63
   13474:	lsr	x4, x4, #1
   13478:	mov	x1, #0x3fff                	// #16383
   1347c:	add	x2, x3, x1
   13480:	cmp	x2, #0x0
   13484:	b.le	1361c <mpc_ui_ui_sub@@Base+0x10a8>
   13488:	tst	x6, #0x7
   1348c:	b.eq	134ac <mpc_ui_ui_sub@@Base+0xf38>  // b.none
   13490:	and	x1, x11, #0xc00000
   13494:	orr	w0, w0, #0x10
   13498:	cmp	x1, #0x400, lsl #12
   1349c:	b.eq	13864 <mpc_ui_ui_sub@@Base+0x12f0>  // b.none
   134a0:	cmp	x1, #0x800, lsl #12
   134a4:	b.eq	1380c <mpc_ui_ui_sub@@Base+0x1298>  // b.none
   134a8:	cbz	x1, 137f4 <mpc_ui_ui_sub@@Base+0x1280>
   134ac:	tbz	x4, #52, 134b8 <mpc_ui_ui_sub@@Base+0xf44>
   134b0:	and	x4, x4, #0xffefffffffffffff
   134b4:	add	x2, x3, #0x4, lsl #12
   134b8:	mov	x1, #0x7ffe                	// #32766
   134bc:	cmp	x2, x1
   134c0:	b.gt	13744 <mpc_ui_ui_sub@@Base+0x11d0>
   134c4:	and	w1, w2, #0x7fff
   134c8:	extr	x5, x4, x6, #3
   134cc:	ubfx	x4, x4, #3, #48
   134d0:	b	13290 <mpc_ui_ui_sub@@Base+0xd1c>
   134d4:	mov	w0, w12
   134d8:	mov	w10, #0x0                   	// #0
   134dc:	mov	x4, #0xffffffffffff        	// #281474976710655
   134e0:	mov	x5, #0xffffffffffffffff    	// #-1
   134e4:	mov	w1, #0x7fff                	// #32767
   134e8:	b	13290 <mpc_ui_ui_sub@@Base+0xd1c>
   134ec:	mov	w15, w10
   134f0:	mov	x13, x8
   134f4:	b	131f0 <mpc_ui_ui_sub@@Base+0xc7c>
   134f8:	orr	x5, x7, x1
   134fc:	cbz	x5, 13604 <mpc_ui_ui_sub@@Base+0x1090>
   13500:	cbz	x7, 13720 <mpc_ui_ui_sub@@Base+0x11ac>
   13504:	clz	x0, x7
   13508:	sub	x4, x0, #0xf
   1350c:	add	w5, w4, #0x3
   13510:	mov	w3, #0x3d                  	// #61
   13514:	sub	w3, w3, w4
   13518:	lsl	x4, x7, x5
   1351c:	lsr	x3, x1, x3
   13520:	orr	x7, x3, x4
   13524:	lsl	x5, x1, x5
   13528:	lsr	x8, x2, #63
   1352c:	mov	x3, #0xffffffffffffc011    	// #-16367
   13530:	ubfx	x4, x2, #0, #48
   13534:	sub	x3, x3, x0
   13538:	and	w15, w8, #0xff
   1353c:	mov	x13, x8
   13540:	ubfx	x9, x2, #48, #15
   13544:	mov	x1, #0x0                   	// #0
   13548:	mov	x16, #0x0                   	// #0
   1354c:	mov	w0, #0x0                   	// #0
   13550:	cbnz	w9, 1319c <mpc_ui_ui_sub@@Base+0xc28>
   13554:	nop
   13558:	orr	x2, x4, x6
   1355c:	cbz	x2, 135cc <mpc_ui_ui_sub@@Base+0x1058>
   13560:	cbz	x4, 136fc <mpc_ui_ui_sub@@Base+0x1188>
   13564:	clz	x9, x4
   13568:	sub	x2, x9, #0xf
   1356c:	add	w10, w2, #0x3
   13570:	mov	w8, #0x3d                  	// #61
   13574:	sub	w8, w8, w2
   13578:	lsl	x2, x4, x10
   1357c:	lsr	x8, x6, x8
   13580:	orr	x4, x8, x2
   13584:	lsl	x6, x6, x10
   13588:	sub	x9, x3, x9
   1358c:	mov	x10, #0xffffffffffffc011    	// #-16367
   13590:	mov	x2, #0x0                   	// #0
   13594:	add	x9, x9, x10
   13598:	b	131c8 <mpc_ui_ui_sub@@Base+0xc54>
   1359c:	orr	x5, x7, x1
   135a0:	cbnz	x5, 135e4 <mpc_ui_ui_sub@@Base+0x1070>
   135a4:	mov	x7, #0x0                   	// #0
   135a8:	mov	x1, #0x8                   	// #8
   135ac:	mov	x3, #0x7fff                	// #32767
   135b0:	mov	x16, #0x2                   	// #2
   135b4:	mov	w0, #0x0                   	// #0
   135b8:	b	13184 <mpc_ui_ui_sub@@Base+0xc10>
   135bc:	mov	w1, #0x7fff                	// #32767
   135c0:	mov	x4, #0x0                   	// #0
   135c4:	mov	x5, #0x0                   	// #0
   135c8:	b	13290 <mpc_ui_ui_sub@@Base+0xd1c>
   135cc:	orr	x1, x1, #0x1
   135d0:	mov	x9, x3
   135d4:	mov	x4, #0x0                   	// #0
   135d8:	mov	x6, #0x0                   	// #0
   135dc:	mov	x2, #0x1                   	// #1
   135e0:	b	131c8 <mpc_ui_ui_sub@@Base+0xc54>
   135e4:	lsr	x0, x7, #47
   135e8:	mov	x5, x1
   135ec:	eor	x0, x0, #0x1
   135f0:	mov	x1, #0xc                   	// #12
   135f4:	and	w0, w0, #0x1
   135f8:	mov	x3, #0x7fff                	// #32767
   135fc:	mov	x16, #0x3                   	// #3
   13600:	b	13184 <mpc_ui_ui_sub@@Base+0xc10>
   13604:	mov	x7, #0x0                   	// #0
   13608:	mov	x1, #0x4                   	// #4
   1360c:	mov	x3, #0x0                   	// #0
   13610:	mov	x16, #0x1                   	// #1
   13614:	mov	w0, #0x0                   	// #0
   13618:	b	13184 <mpc_ui_ui_sub@@Base+0xc10>
   1361c:	mov	x1, #0x1                   	// #1
   13620:	sub	x2, x1, x2
   13624:	cmp	x2, #0x74
   13628:	b.gt	136a0 <mpc_ui_ui_sub@@Base+0x112c>
   1362c:	cmp	x2, #0x3f
   13630:	b.le	13780 <mpc_ui_ui_sub@@Base+0x120c>
   13634:	mov	w1, #0x80                  	// #128
   13638:	sub	w1, w1, w2
   1363c:	cmp	x2, #0x40
   13640:	sub	w2, w2, #0x40
   13644:	lsl	x1, x4, x1
   13648:	orr	x1, x6, x1
   1364c:	csel	x6, x1, x6, ne  // ne = any
   13650:	lsr	x2, x4, x2
   13654:	cmp	x6, #0x0
   13658:	cset	x5, ne  // ne = any
   1365c:	orr	x5, x5, x2
   13660:	ands	x2, x5, #0x7
   13664:	b.eq	137b4 <mpc_ui_ui_sub@@Base+0x1240>  // b.none
   13668:	mov	x2, #0x0                   	// #0
   1366c:	and	x11, x11, #0xc00000
   13670:	orr	w0, w0, #0x10
   13674:	cmp	x11, #0x400, lsl #12
   13678:	b.eq	138c4 <mpc_ui_ui_sub@@Base+0x1350>  // b.none
   1367c:	cmp	x11, #0x800, lsl #12
   13680:	b.eq	138d8 <mpc_ui_ui_sub@@Base+0x1364>  // b.none
   13684:	cbz	x11, 1381c <mpc_ui_ui_sub@@Base+0x12a8>
   13688:	tbnz	x2, #51, 13834 <mpc_ui_ui_sub@@Base+0x12c0>
   1368c:	ubfx	x4, x2, #3, #48
   13690:	extr	x5, x2, x5, #3
   13694:	orr	w0, w0, #0x8
   13698:	mov	w1, #0x0                   	// #0
   1369c:	b	136d0 <mpc_ui_ui_sub@@Base+0x115c>
   136a0:	orr	x5, x6, x4
   136a4:	cbz	x5, 136c4 <mpc_ui_ui_sub@@Base+0x1150>
   136a8:	and	x11, x11, #0xc00000
   136ac:	orr	w0, w0, #0x10
   136b0:	cmp	x11, #0x400, lsl #12
   136b4:	sub	x5, x1, x8
   136b8:	b.eq	136c4 <mpc_ui_ui_sub@@Base+0x1150>  // b.none
   136bc:	cmp	x11, #0x800, lsl #12
   136c0:	csel	x5, x8, xzr, eq  // eq = none
   136c4:	orr	w0, w0, #0x8
   136c8:	mov	w1, #0x0                   	// #0
   136cc:	mov	x4, #0x0                   	// #0
   136d0:	mov	x3, #0x0                   	// #0
   136d4:	fmov	d0, x5
   136d8:	bfxil	x3, x4, #0, #48
   136dc:	bfi	x3, x1, #48, #15
   136e0:	bfi	x3, x10, #63, #1
   136e4:	fmov	v0.d[1], x3
   136e8:	str	q0, [sp, #48]
   136ec:	bl	13908 <mpc_ui_ui_sub@@Base+0x1394>
   136f0:	ldr	q0, [sp, #48]
   136f4:	ldp	x29, x30, [sp], #80
   136f8:	ret
   136fc:	clz	x9, x6
   13700:	add	x2, x9, #0x31
   13704:	add	x9, x9, #0x40
   13708:	cmp	x2, #0x3c
   1370c:	b.le	1356c <mpc_ui_ui_sub@@Base+0xff8>
   13710:	sub	w2, w2, #0x3d
   13714:	lsl	x4, x6, x2
   13718:	mov	x6, #0x0                   	// #0
   1371c:	b	13588 <mpc_ui_ui_sub@@Base+0x1014>
   13720:	clz	x3, x1
   13724:	add	x4, x3, #0x31
   13728:	add	x0, x3, #0x40
   1372c:	cmp	x4, #0x3c
   13730:	b.le	1350c <mpc_ui_ui_sub@@Base+0xf98>
   13734:	sub	w4, w4, #0x3d
   13738:	mov	x5, #0x0                   	// #0
   1373c:	lsl	x7, x1, x4
   13740:	b	13528 <mpc_ui_ui_sub@@Base+0xfb4>
   13744:	and	x5, x11, #0xc00000
   13748:	cmp	x5, #0x400, lsl #12
   1374c:	b.eq	13848 <mpc_ui_ui_sub@@Base+0x12d4>  // b.none
   13750:	cmp	x5, #0x800, lsl #12
   13754:	b.eq	137d8 <mpc_ui_ui_sub@@Base+0x1264>  // b.none
   13758:	cbz	x5, 137cc <mpc_ui_ui_sub@@Base+0x1258>
   1375c:	mov	x4, #0xffffffffffff        	// #281474976710655
   13760:	mov	x5, #0xffffffffffffffff    	// #-1
   13764:	mov	w2, #0x14                  	// #20
   13768:	orr	w0, w0, w2
   1376c:	b	136d0 <mpc_ui_ui_sub@@Base+0x115c>
   13770:	mov	x3, x9
   13774:	ldp	x19, x20, [sp, #16]
   13778:	ldp	x21, x22, [sp, #32]
   1377c:	b	13478 <mpc_ui_ui_sub@@Base+0xf04>
   13780:	mov	w1, #0x40                  	// #64
   13784:	sub	w1, w1, w2
   13788:	lsr	x3, x6, x2
   1378c:	lsl	x6, x6, x1
   13790:	cmp	x6, #0x0
   13794:	lsl	x5, x4, x1
   13798:	cset	x1, ne  // ne = any
   1379c:	orr	x5, x5, x3
   137a0:	lsr	x2, x4, x2
   137a4:	orr	x5, x5, x1
   137a8:	tst	x5, #0x7
   137ac:	b.ne	1366c <mpc_ui_ui_sub@@Base+0x10f8>  // b.any
   137b0:	tbnz	x2, #51, 138e4 <mpc_ui_ui_sub@@Base+0x1370>
   137b4:	ubfx	x4, x2, #3, #48
   137b8:	extr	x5, x2, x5, #3
   137bc:	mov	w1, #0x0                   	// #0
   137c0:	tbz	w11, #11, 13290 <mpc_ui_ui_sub@@Base+0xd1c>
   137c4:	orr	w0, w0, #0x8
   137c8:	b	136d0 <mpc_ui_ui_sub@@Base+0x115c>
   137cc:	mov	w1, #0x7fff                	// #32767
   137d0:	mov	x4, #0x0                   	// #0
   137d4:	b	13764 <mpc_ui_ui_sub@@Base+0x11f0>
   137d8:	cmp	x8, #0x0
   137dc:	mov	w2, #0x7fff                	// #32767
   137e0:	mov	x4, #0xffffffffffff        	// #281474976710655
   137e4:	csel	w1, w1, w2, eq  // eq = none
   137e8:	csel	x4, x4, xzr, eq  // eq = none
   137ec:	csetm	x5, eq  // eq = none
   137f0:	b	13764 <mpc_ui_ui_sub@@Base+0x11f0>
   137f4:	and	x1, x6, #0xf
   137f8:	cmp	x1, #0x4
   137fc:	b.eq	134ac <mpc_ui_ui_sub@@Base+0xf38>  // b.none
   13800:	adds	x6, x6, #0x4
   13804:	cinc	x4, x4, cs  // cs = hs, nlast
   13808:	b	134ac <mpc_ui_ui_sub@@Base+0xf38>
   1380c:	cbz	x8, 134ac <mpc_ui_ui_sub@@Base+0xf38>
   13810:	adds	x6, x6, #0x8
   13814:	cinc	x4, x4, cs  // cs = hs, nlast
   13818:	b	134ac <mpc_ui_ui_sub@@Base+0xf38>
   1381c:	and	x1, x5, #0xf
   13820:	cmp	x1, #0x4
   13824:	b.eq	13830 <mpc_ui_ui_sub@@Base+0x12bc>  // b.none
   13828:	adds	x5, x5, #0x4
   1382c:	cinc	x2, x2, cs  // cs = hs, nlast
   13830:	tbz	x2, #51, 1368c <mpc_ui_ui_sub@@Base+0x1118>
   13834:	orr	w0, w0, #0x8
   13838:	mov	w1, #0x1                   	// #1
   1383c:	mov	x4, #0x0                   	// #0
   13840:	mov	x5, #0x0                   	// #0
   13844:	b	136d0 <mpc_ui_ui_sub@@Base+0x115c>
   13848:	cmp	x8, #0x0
   1384c:	mov	w2, #0x7fff                	// #32767
   13850:	mov	x4, #0xffffffffffff        	// #281474976710655
   13854:	csel	w1, w1, w2, ne  // ne = any
   13858:	csel	x4, x4, xzr, ne  // ne = any
   1385c:	csetm	x5, ne  // ne = any
   13860:	b	13764 <mpc_ui_ui_sub@@Base+0x11f0>
   13864:	cbnz	x8, 134ac <mpc_ui_ui_sub@@Base+0xf38>
   13868:	b	13810 <mpc_ui_ui_sub@@Base+0x129c>
   1386c:	mov	x4, #0x2                   	// #2
   13870:	cmp	x1, #0xf
   13874:	b.ne	13898 <mpc_ui_ui_sub@@Base+0x1324>  // b.any
   13878:	tbz	x7, #47, 138b0 <mpc_ui_ui_sub@@Base+0x133c>
   1387c:	tbnz	x2, #47, 138b0 <mpc_ui_ui_sub@@Base+0x133c>
   13880:	orr	x4, x2, #0x800000000000
   13884:	mov	w10, w15
   13888:	and	x4, x4, #0xffffffffffff
   1388c:	mov	x5, x6
   13890:	mov	w1, #0x7fff                	// #32767
   13894:	b	13290 <mpc_ui_ui_sub@@Base+0xd1c>
   13898:	cmp	x1, #0xb
   1389c:	b.ne	131e8 <mpc_ui_ui_sub@@Base+0xc74>  // b.any
   138a0:	mov	x7, x2
   138a4:	mov	x5, x6
   138a8:	mov	x16, x4
   138ac:	b	131f0 <mpc_ui_ui_sub@@Base+0xc7c>
   138b0:	orr	x4, x7, #0x800000000000
   138b4:	mov	w10, w12
   138b8:	and	x4, x4, #0xffffffffffff
   138bc:	mov	w1, #0x7fff                	// #32767
   138c0:	b	13290 <mpc_ui_ui_sub@@Base+0xd1c>
   138c4:	cbnz	x8, 13830 <mpc_ui_ui_sub@@Base+0x12bc>
   138c8:	adds	x5, x5, #0x8
   138cc:	cinc	x2, x2, cs  // cs = hs, nlast
   138d0:	tbnz	x2, #51, 13834 <mpc_ui_ui_sub@@Base+0x12c0>
   138d4:	b	1368c <mpc_ui_ui_sub@@Base+0x1118>
   138d8:	cbnz	x8, 138c8 <mpc_ui_ui_sub@@Base+0x1354>
   138dc:	tbnz	x2, #51, 13834 <mpc_ui_ui_sub@@Base+0x12c0>
   138e0:	b	1368c <mpc_ui_ui_sub@@Base+0x1118>
   138e4:	orr	w0, w0, #0x10
   138e8:	b	13834 <mpc_ui_ui_sub@@Base+0x12c0>
   138ec:	mov	x2, x4
   138f0:	mov	x4, #0x3                   	// #3
   138f4:	b	13870 <mpc_ui_ui_sub@@Base+0x12fc>
   138f8:	mov	w10, w15
   138fc:	mov	x8, x13
   13900:	b	1320c <mpc_ui_ui_sub@@Base+0xc98>
   13904:	nop
   13908:	tbz	w0, #0, 13918 <mpc_ui_ui_sub@@Base+0x13a4>
   1390c:	movi	v1.2s, #0x0
   13910:	fdiv	s0, s1, s1
   13914:	mrs	x1, fpsr
   13918:	tbz	w0, #1, 1392c <mpc_ui_ui_sub@@Base+0x13b8>
   1391c:	fmov	s1, #1.000000000000000000e+00
   13920:	movi	v2.2s, #0x0
   13924:	fdiv	s0, s1, s2
   13928:	mrs	x1, fpsr
   1392c:	tbz	w0, #2, 1394c <mpc_ui_ui_sub@@Base+0x13d8>
   13930:	mov	w2, #0xc5ae                	// #50606
   13934:	mov	w1, #0x7f7fffff            	// #2139095039
   13938:	movk	w2, #0x749d, lsl #16
   1393c:	fmov	s1, w1
   13940:	fmov	s2, w2
   13944:	fadd	s0, s1, s2
   13948:	mrs	x1, fpsr
   1394c:	tbz	w0, #3, 1395c <mpc_ui_ui_sub@@Base+0x13e8>
   13950:	movi	v1.2s, #0x80, lsl #16
   13954:	fmul	s0, s1, s1
   13958:	mrs	x1, fpsr
   1395c:	tbz	w0, #4, 13974 <mpc_ui_ui_sub@@Base+0x1400>
   13960:	mov	w0, #0x7f7fffff            	// #2139095039
   13964:	fmov	s2, #1.000000000000000000e+00
   13968:	fmov	s1, w0
   1396c:	fsub	s0, s1, s2
   13970:	mrs	x0, fpsr
   13974:	ret

Disassembly of section .fini:

0000000000013978 <.fini>:
   13978:	stp	x29, x30, [sp, #-16]!
   1397c:	mov	x29, sp
   13980:	ldp	x29, x30, [sp], #16
   13984:	ret
