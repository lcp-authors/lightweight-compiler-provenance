
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000005348 <.init>:
    5348:	stp	x29, x30, [sp, #-16]!
    534c:	mov	x29, sp
    5350:	bl	5950 <bcmp@plt+0x10>
    5354:	ldp	x29, x30, [sp], #16
    5358:	ret

Disassembly of section .plt:

0000000000005360 <_Znam@plt-0x20>:
    5360:	stp	x16, x30, [sp, #-16]!
    5364:	adrp	x16, 28000 <xexit@@Base+0x14018>
    5368:	ldr	x17, [x16, #4088]
    536c:	add	x16, x16, #0xff8
    5370:	br	x17
    5374:	nop
    5378:	nop
    537c:	nop

0000000000005380 <_Znam@plt>:
    5380:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5384:	ldr	x17, [x16]
    5388:	add	x16, x16, #0x0
    538c:	br	x17

0000000000005390 <memcpy@plt>:
    5390:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5394:	ldr	x17, [x16, #8]
    5398:	add	x16, x16, #0x8
    539c:	br	x17

00000000000053a0 <select@plt>:
    53a0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    53a4:	ldr	x17, [x16, #16]
    53a8:	add	x16, x16, #0x10
    53ac:	br	x17

00000000000053b0 <xregcomp@plt>:
    53b0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    53b4:	ldr	x17, [x16, #24]
    53b8:	add	x16, x16, #0x18
    53bc:	br	x17

00000000000053c0 <execvp@plt>:
    53c0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    53c4:	ldr	x17, [x16, #32]
    53c8:	add	x16, x16, #0x20
    53cc:	br	x17

00000000000053d0 <socketpair@plt>:
    53d0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    53d4:	ldr	x17, [x16, #40]
    53d8:	add	x16, x16, #0x28
    53dc:	br	x17

00000000000053e0 <calloc@plt>:
    53e0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    53e4:	ldr	x17, [x16, #48]
    53e8:	add	x16, x16, #0x30
    53ec:	br	x17

00000000000053f0 <pipe@plt>:
    53f0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    53f4:	ldr	x17, [x16, #56]
    53f8:	add	x16, x16, #0x38
    53fc:	br	x17

0000000000005400 <dup2@plt>:
    5400:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5404:	ldr	x17, [x16, #64]
    5408:	add	x16, x16, #0x40
    540c:	br	x17

0000000000005410 <_ZSt9terminatev@plt>:
    5410:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5414:	ldr	x17, [x16, #72]
    5418:	add	x16, x16, #0x48
    541c:	br	x17

0000000000005420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    5420:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5424:	ldr	x17, [x16, #80]
    5428:	add	x16, x16, #0x50
    542c:	br	x17

0000000000005430 <strlen@plt>:
    5430:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5434:	ldr	x17, [x16, #88]
    5438:	add	x16, x16, #0x58
    543c:	br	x17

0000000000005440 <fprintf@plt>:
    5440:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5444:	ldr	x17, [x16, #96]
    5448:	add	x16, x16, #0x60
    544c:	br	x17

0000000000005450 <xregfree@plt>:
    5450:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5454:	ldr	x17, [x16, #104]
    5458:	add	x16, x16, #0x68
    545c:	br	x17

0000000000005460 <_ZNSt8ios_baseD2Ev@plt>:
    5460:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5464:	ldr	x17, [x16, #112]
    5468:	add	x16, x16, #0x70
    546c:	br	x17

0000000000005470 <waitpid@plt>:
    5470:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5474:	ldr	x17, [x16, #120]
    5478:	add	x16, x16, #0x78
    547c:	br	x17

0000000000005480 <_ZSt17__throw_bad_allocv@plt>:
    5480:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5484:	ldr	x17, [x16, #128]
    5488:	add	x16, x16, #0x80
    548c:	br	x17

0000000000005490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>:
    5490:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5494:	ldr	x17, [x16, #136]
    5498:	add	x16, x16, #0x88
    549c:	br	x17

00000000000054a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>:
    54a0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    54a4:	ldr	x17, [x16, #144]
    54a8:	add	x16, x16, #0x90
    54ac:	br	x17

00000000000054b0 <htab_create_alloc@plt>:
    54b0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    54b4:	ldr	x17, [x16, #152]
    54b8:	add	x16, x16, #0x98
    54bc:	br	x17

00000000000054c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>:
    54c0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    54c4:	ldr	x17, [x16, #160]
    54c8:	add	x16, x16, #0xa0
    54cc:	br	x17

00000000000054d0 <__cxa_begin_catch@plt>:
    54d0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    54d4:	ldr	x17, [x16, #168]
    54d8:	add	x16, x16, #0xa8
    54dc:	br	x17

00000000000054e0 <xstrdup@plt>:
    54e0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    54e4:	ldr	x17, [x16, #176]
    54e8:	add	x16, x16, #0xb0
    54ec:	br	x17

00000000000054f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>:
    54f0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    54f4:	ldr	x17, [x16, #184]
    54f8:	add	x16, x16, #0xb8
    54fc:	br	x17

0000000000005500 <_ZSt20__throw_length_errorPKc@plt>:
    5500:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5504:	ldr	x17, [x16, #192]
    5508:	add	x16, x16, #0xc0
    550c:	br	x17

0000000000005510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
    5510:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5514:	ldr	x17, [x16, #200]
    5518:	add	x16, x16, #0xc8
    551c:	br	x17

0000000000005520 <free@plt>:
    5520:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5524:	ldr	x17, [x16, #208]
    5528:	add	x16, x16, #0xd0
    552c:	br	x17

0000000000005530 <memset@plt>:
    5530:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5534:	ldr	x17, [x16, #216]
    5538:	add	x16, x16, #0xd8
    553c:	br	x17

0000000000005540 <__cxa_finalize@plt>:
    5540:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5544:	ldr	x17, [x16, #224]
    5548:	add	x16, x16, #0xe0
    554c:	br	x17

0000000000005550 <realloc@plt>:
    5550:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5554:	ldr	x17, [x16, #232]
    5558:	add	x16, x16, #0xe8
    555c:	br	x17

0000000000005560 <xregexec@plt>:
    5560:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5564:	ldr	x17, [x16, #240]
    5568:	add	x16, x16, #0xf0
    556c:	br	x17

0000000000005570 <_exit@plt>:
    5570:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5574:	ldr	x17, [x16, #248]
    5578:	add	x16, x16, #0xf8
    557c:	br	x17

0000000000005580 <htab_find_slot_with_hash@plt>:
    5580:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5584:	ldr	x17, [x16, #256]
    5588:	add	x16, x16, #0x100
    558c:	br	x17

0000000000005590 <htab_create_typed_alloc@plt>:
    5590:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5594:	ldr	x17, [x16, #264]
    5598:	add	x16, x16, #0x108
    559c:	br	x17

00000000000055a0 <read@plt>:
    55a0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    55a4:	ldr	x17, [x16, #272]
    55a8:	add	x16, x16, #0x110
    55ac:	br	x17

00000000000055b0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    55b0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    55b4:	ldr	x17, [x16, #280]
    55b8:	add	x16, x16, #0x118
    55bc:	br	x17

00000000000055c0 <_ZSt19__throw_logic_errorPKc@plt>:
    55c0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    55c4:	ldr	x17, [x16, #288]
    55c8:	add	x16, x16, #0x120
    55cc:	br	x17

00000000000055d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>:
    55d0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    55d4:	ldr	x17, [x16, #296]
    55d8:	add	x16, x16, #0x128
    55dc:	br	x17

00000000000055e0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev@plt>:
    55e0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    55e4:	ldr	x17, [x16, #304]
    55e8:	add	x16, x16, #0x130
    55ec:	br	x17

00000000000055f0 <htab_find@plt>:
    55f0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    55f4:	ldr	x17, [x16, #312]
    55f8:	add	x16, x16, #0x138
    55fc:	br	x17

0000000000005600 <closedir@plt>:
    5600:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5604:	ldr	x17, [x16, #320]
    5608:	add	x16, x16, #0x140
    560c:	br	x17

0000000000005610 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@plt>:
    5610:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5614:	ldr	x17, [x16, #328]
    5618:	add	x16, x16, #0x148
    561c:	br	x17

0000000000005620 <concat@plt>:
    5620:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5624:	ldr	x17, [x16, #336]
    5628:	add	x16, x16, #0x150
    562c:	br	x17

0000000000005630 <xmalloc_failed@plt>:
    5630:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5634:	ldr	x17, [x16, #344]
    5638:	add	x16, x16, #0x158
    563c:	br	x17

0000000000005640 <htab_hash_string@plt>:
    5640:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5644:	ldr	x17, [x16, #352]
    5648:	add	x16, x16, #0x160
    564c:	br	x17

0000000000005650 <_ZdlPv@plt>:
    5650:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5654:	ldr	x17, [x16, #360]
    5658:	add	x16, x16, #0x168
    565c:	br	x17

0000000000005660 <_Znwm@plt>:
    5660:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5664:	ldr	x17, [x16, #368]
    5668:	add	x16, x16, #0x170
    566c:	br	x17

0000000000005670 <readdir@plt>:
    5670:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5674:	ldr	x17, [x16, #376]
    5678:	add	x16, x16, #0x178
    567c:	br	x17

0000000000005680 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>:
    5680:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5684:	ldr	x17, [x16, #384]
    5688:	add	x16, x16, #0x180
    568c:	br	x17

0000000000005690 <opendir@plt>:
    5690:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5694:	ldr	x17, [x16, #392]
    5698:	add	x16, x16, #0x188
    569c:	br	x17

00000000000056a0 <__ctype_b_loc@plt>:
    56a0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    56a4:	ldr	x17, [x16, #400]
    56a8:	add	x16, x16, #0x190
    56ac:	br	x17

00000000000056b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    56b0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    56b4:	ldr	x17, [x16, #408]
    56b8:	add	x16, x16, #0x198
    56bc:	br	x17

00000000000056c0 <snprintf@plt>:
    56c0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    56c4:	ldr	x17, [x16, #416]
    56c8:	add	x16, x16, #0x1a0
    56cc:	br	x17

00000000000056d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@plt>:
    56d0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    56d4:	ldr	x17, [x16, #424]
    56d8:	add	x16, x16, #0x1a8
    56dc:	br	x17

00000000000056e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    56e0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    56e4:	ldr	x17, [x16, #432]
    56e8:	add	x16, x16, #0x1b0
    56ec:	br	x17

00000000000056f0 <sbrk@plt>:
    56f0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    56f4:	ldr	x17, [x16, #440]
    56f8:	add	x16, x16, #0x1b8
    56fc:	br	x17

0000000000005700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>:
    5700:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5704:	ldr	x17, [x16, #448]
    5708:	add	x16, x16, #0x1c0
    570c:	br	x17

0000000000005710 <htab_remove_elt_with_hash@plt>:
    5710:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5714:	ldr	x17, [x16, #456]
    5718:	add	x16, x16, #0x1c8
    571c:	br	x17

0000000000005720 <htab_find_slot@plt>:
    5720:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5724:	ldr	x17, [x16, #464]
    5728:	add	x16, x16, #0x1d0
    572c:	br	x17

0000000000005730 <_ZdaPv@plt>:
    5730:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5734:	ldr	x17, [x16, #472]
    5738:	add	x16, x16, #0x1d8
    573c:	br	x17

0000000000005740 <__errno_location@plt>:
    5740:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5744:	ldr	x17, [x16, #480]
    5748:	add	x16, x16, #0x1e0
    574c:	br	x17

0000000000005750 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    5750:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5754:	ldr	x17, [x16, #488]
    5758:	add	x16, x16, #0x1e8
    575c:	br	x17

0000000000005760 <__ctype_tolower_loc@plt>:
    5760:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5764:	ldr	x17, [x16, #496]
    5768:	add	x16, x16, #0x1f0
    576c:	br	x17

0000000000005770 <xmalloc@plt>:
    5770:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5774:	ldr	x17, [x16, #504]
    5778:	add	x16, x16, #0x1f8
    577c:	br	x17

0000000000005780 <fork@plt>:
    5780:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5784:	ldr	x17, [x16, #512]
    5788:	add	x16, x16, #0x200
    578c:	br	x17

0000000000005790 <close@plt>:
    5790:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5794:	ldr	x17, [x16, #520]
    5798:	add	x16, x16, #0x208
    579c:	br	x17

00000000000057a0 <strcmp@plt>:
    57a0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    57a4:	ldr	x17, [x16, #528]
    57a8:	add	x16, x16, #0x210
    57ac:	br	x17

00000000000057b0 <__cxa_rethrow@plt>:
    57b0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    57b4:	ldr	x17, [x16, #536]
    57b8:	add	x16, x16, #0x218
    57bc:	br	x17

00000000000057c0 <write@plt>:
    57c0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    57c4:	ldr	x17, [x16, #544]
    57c8:	add	x16, x16, #0x220
    57cc:	br	x17

00000000000057d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    57d0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    57d4:	ldr	x17, [x16, #552]
    57d8:	add	x16, x16, #0x228
    57dc:	br	x17

00000000000057e0 <malloc@plt>:
    57e0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    57e4:	ldr	x17, [x16, #560]
    57e8:	add	x16, x16, #0x230
    57ec:	br	x17

00000000000057f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    57f0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    57f4:	ldr	x17, [x16, #568]
    57f8:	add	x16, x16, #0x238
    57fc:	br	x17

0000000000005800 <xexit@plt>:
    5800:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5804:	ldr	x17, [x16, #576]
    5808:	add	x16, x16, #0x240
    580c:	br	x17

0000000000005810 <_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@plt>:
    5810:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5814:	ldr	x17, [x16, #584]
    5818:	add	x16, x16, #0x248
    581c:	br	x17

0000000000005820 <abort@plt>:
    5820:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5824:	ldr	x17, [x16, #592]
    5828:	add	x16, x16, #0x250
    582c:	br	x17

0000000000005830 <getenv@plt>:
    5830:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5834:	ldr	x17, [x16, #600]
    5838:	add	x16, x16, #0x258
    583c:	br	x17

0000000000005840 <__cxa_end_catch@plt>:
    5840:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5844:	ldr	x17, [x16, #608]
    5848:	add	x16, x16, #0x260
    584c:	br	x17

0000000000005850 <_ZnamRKSt9nothrow_t@plt>:
    5850:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5854:	ldr	x17, [x16, #616]
    5858:	add	x16, x16, #0x268
    585c:	br	x17

0000000000005860 <xcalloc@plt>:
    5860:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5864:	ldr	x17, [x16, #624]
    5868:	add	x16, x16, #0x270
    586c:	br	x17

0000000000005870 <__gxx_personality_v0@plt>:
    5870:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5874:	ldr	x17, [x16, #632]
    5878:	add	x16, x16, #0x278
    587c:	br	x17

0000000000005880 <htab_find_with_hash@plt>:
    5880:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5884:	ldr	x17, [x16, #640]
    5888:	add	x16, x16, #0x280
    588c:	br	x17

0000000000005890 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    5890:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5894:	ldr	x17, [x16, #648]
    5898:	add	x16, x16, #0x288
    589c:	br	x17

00000000000058a0 <xregerror@plt>:
    58a0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    58a4:	ldr	x17, [x16, #656]
    58a8:	add	x16, x16, #0x290
    58ac:	br	x17

00000000000058b0 <exit@plt>:
    58b0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    58b4:	ldr	x17, [x16, #664]
    58b8:	add	x16, x16, #0x298
    58bc:	br	x17

00000000000058c0 <htab_delete@plt>:
    58c0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    58c4:	ldr	x17, [x16, #672]
    58c8:	add	x16, x16, #0x2a0
    58cc:	br	x17

00000000000058d0 <_Unwind_Resume@plt>:
    58d0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    58d4:	ldr	x17, [x16, #680]
    58d8:	add	x16, x16, #0x2a8
    58dc:	br	x17

00000000000058e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    58e0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    58e4:	ldr	x17, [x16, #688]
    58e8:	add	x16, x16, #0x2b0
    58ec:	br	x17

00000000000058f0 <xre_search_2@plt>:
    58f0:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    58f4:	ldr	x17, [x16, #696]
    58f8:	add	x16, x16, #0x2b8
    58fc:	br	x17

0000000000005900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
    5900:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5904:	ldr	x17, [x16, #704]
    5908:	add	x16, x16, #0x2c0
    590c:	br	x17

0000000000005910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>:
    5910:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5914:	ldr	x17, [x16, #712]
    5918:	add	x16, x16, #0x2c8
    591c:	br	x17

0000000000005920 <__gmon_start__@plt>:
    5920:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5924:	ldr	x17, [x16, #720]
    5928:	add	x16, x16, #0x2d0
    592c:	br	x17

0000000000005930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@plt>:
    5930:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5934:	ldr	x17, [x16, #728]
    5938:	add	x16, x16, #0x2d8
    593c:	br	x17

0000000000005940 <bcmp@plt>:
    5940:	adrp	x16, 29000 <_Znam@GLIBCXX_3.4>
    5944:	ldr	x17, [x16, #736]
    5948:	add	x16, x16, #0x2e0
    594c:	br	x17

Disassembly of section .text:

0000000000005950 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base-0x428>:
    5950:	adrp	x0, 28000 <xexit@@Base+0x14018>
    5954:	ldr	x0, [x0, #3968]
    5958:	cbz	x0, 5960 <bcmp@plt+0x20>
    595c:	b	5920 <__gmon_start__@plt>
    5960:	ret
    5964:	nop
    5968:	adrp	x0, 29000 <xexit@@Base+0x15018>
    596c:	add	x0, x0, #0x600
    5970:	adrp	x1, 29000 <xexit@@Base+0x15018>
    5974:	add	x1, x1, #0x600
    5978:	cmp	x1, x0
    597c:	b.eq	5994 <bcmp@plt+0x54>  // b.none
    5980:	adrp	x1, 28000 <xexit@@Base+0x14018>
    5984:	ldr	x1, [x1, #3912]
    5988:	cbz	x1, 5994 <bcmp@plt+0x54>
    598c:	mov	x16, x1
    5990:	br	x16
    5994:	ret
    5998:	adrp	x0, 29000 <xexit@@Base+0x15018>
    599c:	add	x0, x0, #0x600
    59a0:	adrp	x1, 29000 <xexit@@Base+0x15018>
    59a4:	add	x1, x1, #0x600
    59a8:	sub	x1, x1, x0
    59ac:	lsr	x2, x1, #63
    59b0:	add	x1, x2, x1, asr #3
    59b4:	cmp	xzr, x1, asr #1
    59b8:	asr	x1, x1, #1
    59bc:	b.eq	59d4 <bcmp@plt+0x94>  // b.none
    59c0:	adrp	x2, 28000 <xexit@@Base+0x14018>
    59c4:	ldr	x2, [x2, #4000]
    59c8:	cbz	x2, 59d4 <bcmp@plt+0x94>
    59cc:	mov	x16, x2
    59d0:	br	x16
    59d4:	ret
    59d8:	stp	x29, x30, [sp, #-32]!
    59dc:	mov	x29, sp
    59e0:	str	x19, [sp, #16]
    59e4:	adrp	x19, 29000 <xexit@@Base+0x15018>
    59e8:	ldrb	w0, [x19, #1536]
    59ec:	cbnz	w0, 5a14 <bcmp@plt+0xd4>
    59f0:	adrp	x0, 28000 <xexit@@Base+0x14018>
    59f4:	ldr	x0, [x0, #3432]
    59f8:	cbz	x0, 5a08 <bcmp@plt+0xc8>
    59fc:	adrp	x0, 29000 <xexit@@Base+0x15018>
    5a00:	ldr	x0, [x0, #744]
    5a04:	bl	5540 <__cxa_finalize@plt>
    5a08:	bl	5968 <bcmp@plt+0x28>
    5a0c:	mov	w0, #0x1                   	// #1
    5a10:	strb	w0, [x19, #1536]
    5a14:	ldr	x19, [sp, #16]
    5a18:	ldp	x29, x30, [sp], #32
    5a1c:	ret
    5a20:	b	5998 <bcmp@plt+0x58>
    5a24:	sub	sp, sp, #0xe0
    5a28:	stp	x29, x30, [sp, #144]
    5a2c:	str	x25, [sp, #160]
    5a30:	stp	x24, x23, [sp, #176]
    5a34:	stp	x22, x21, [sp, #192]
    5a38:	stp	x20, x19, [sp, #208]
    5a3c:	add	x29, sp, #0x90
    5a40:	mov	x20, x0
    5a44:	adrp	x0, 14000 <xexit@@Base+0x18>
    5a48:	add	x0, x0, #0x28
    5a4c:	mov	x19, x1
    5a50:	bl	5830 <getenv@plt>
    5a54:	cbz	x0, 5bb0 <bcmp@plt+0x270>
    5a58:	mov	x1, x0
    5a5c:	add	x0, sp, #0x28
    5a60:	sub	x2, x29, #0x20
    5a64:	sub	x21, x29, #0x20
    5a68:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    5a6c:	sub	x8, x29, #0x40
    5a70:	add	x9, sp, #0x8
    5a74:	add	x25, x21, #0x10
    5a78:	add	x24, x8, #0x10
    5a7c:	add	x23, x9, #0x10
    5a80:	str	xzr, [sp, #72]
    5a84:	add	x8, sp, #0x8
    5a88:	add	x0, sp, #0x28
    5a8c:	bl	5c64 <bcmp@plt+0x324>
    5a90:	ldr	x0, [sp, #8]
    5a94:	bl	5690 <opendir@plt>
    5a98:	cbz	x0, 5b28 <bcmp@plt+0x1e8>
    5a9c:	mov	x21, x0
    5aa0:	mov	x0, x21
    5aa4:	bl	5670 <readdir@plt>
    5aa8:	cbz	x0, 5b30 <bcmp@plt+0x1f0>
    5aac:	add	x22, x0, #0x13
    5ab0:	mov	x0, x20
    5ab4:	mov	x1, x22
    5ab8:	mov	x2, xzr
    5abc:	mov	x3, xzr
    5ac0:	mov	w4, wzr
    5ac4:	bl	5560 <xregexec@plt>
    5ac8:	cbnz	w0, 5aa0 <bcmp@plt+0x160>
    5acc:	ldp	x1, x8, [sp, #8]
    5ad0:	stur	x24, [x29, #-64]
    5ad4:	add	x2, x1, x8
    5ad8:	sub	x0, x29, #0x40
    5adc:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    5ae0:	ldur	x1, [x29, #-56]
    5ae4:	sub	x0, x29, #0x40
    5ae8:	mov	w3, #0x1                   	// #1
    5aec:	mov	w4, #0x2f                  	// #47
    5af0:	mov	x2, xzr
    5af4:	bl	5900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
    5af8:	sub	x0, x29, #0x40
    5afc:	mov	x1, x22
    5b00:	bl	5930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@plt>
    5b04:	stur	x25, [x29, #-32]
    5b08:	mov	x8, x0
    5b0c:	ldr	x9, [x8], #16
    5b10:	cmp	x9, x8
    5b14:	b.eq	5b38 <bcmp@plt+0x1f8>  // b.none
    5b18:	stur	x9, [x29, #-32]
    5b1c:	ldr	x9, [x0, #16]
    5b20:	stur	x9, [x29, #-16]
    5b24:	b	5b40 <bcmp@plt+0x200>
    5b28:	mov	w22, #0x1                   	// #1
    5b2c:	b	5b88 <bcmp@plt+0x248>
    5b30:	mov	w22, #0x1                   	// #1
    5b34:	b	5b80 <bcmp@plt+0x240>
    5b38:	ldr	q0, [x9]
    5b3c:	str	q0, [x25]
    5b40:	ldr	x9, [x0, #8]
    5b44:	sub	x1, x29, #0x20
    5b48:	stur	x9, [x29, #-24]
    5b4c:	stp	x8, xzr, [x0]
    5b50:	strb	wzr, [x0, #16]
    5b54:	mov	x0, x19
    5b58:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>
    5b5c:	ldur	x0, [x29, #-32]
    5b60:	cmp	x0, x25
    5b64:	b.eq	5b6c <bcmp@plt+0x22c>  // b.none
    5b68:	bl	5650 <_ZdlPv@plt>
    5b6c:	ldur	x0, [x29, #-64]
    5b70:	cmp	x0, x24
    5b74:	b.eq	5b7c <bcmp@plt+0x23c>  // b.none
    5b78:	bl	5650 <_ZdlPv@plt>
    5b7c:	mov	w22, wzr
    5b80:	mov	x0, x21
    5b84:	bl	5600 <closedir@plt>
    5b88:	ldr	x0, [sp, #8]
    5b8c:	cmp	x0, x23
    5b90:	b.eq	5b98 <bcmp@plt+0x258>  // b.none
    5b94:	bl	5650 <_ZdlPv@plt>
    5b98:	tbz	w22, #0, 5bb8 <bcmp@plt+0x278>
    5b9c:	ldr	x8, [sp, #72]
    5ba0:	cmn	x8, #0x1
    5ba4:	b.ne	5a84 <bcmp@plt+0x144>  // b.any
    5ba8:	mov	w19, wzr
    5bac:	b	5bbc <bcmp@plt+0x27c>
    5bb0:	mov	w19, wzr
    5bb4:	b	5bd4 <bcmp@plt+0x294>
    5bb8:	mov	w19, #0x1                   	// #1
    5bbc:	ldr	x0, [sp, #40]
    5bc0:	add	x8, sp, #0x28
    5bc4:	add	x8, x8, #0x10
    5bc8:	cmp	x0, x8
    5bcc:	b.eq	5bd4 <bcmp@plt+0x294>  // b.none
    5bd0:	bl	5650 <_ZdlPv@plt>
    5bd4:	mov	w0, w19
    5bd8:	ldp	x20, x19, [sp, #208]
    5bdc:	ldp	x22, x21, [sp, #192]
    5be0:	ldp	x24, x23, [sp, #176]
    5be4:	ldr	x25, [sp, #160]
    5be8:	ldp	x29, x30, [sp, #144]
    5bec:	add	sp, sp, #0xe0
    5bf0:	ret
    5bf4:	mov	x19, x0
    5bf8:	b	5c5c <bcmp@plt+0x31c>
    5bfc:	b	5c00 <bcmp@plt+0x2c0>
    5c00:	ldur	x8, [x29, #-64]
    5c04:	mov	x19, x0
    5c08:	cmp	x8, x24
    5c0c:	b.eq	5c2c <bcmp@plt+0x2ec>  // b.none
    5c10:	mov	x0, x8
    5c14:	bl	5650 <_ZdlPv@plt>
    5c18:	b	5c2c <bcmp@plt+0x2ec>
    5c1c:	b	5c28 <bcmp@plt+0x2e8>
    5c20:	mov	x19, x0
    5c24:	b	5c44 <bcmp@plt+0x304>
    5c28:	mov	x19, x0
    5c2c:	mov	x0, x21
    5c30:	bl	5600 <closedir@plt>
    5c34:	ldr	x0, [sp, #8]
    5c38:	cmp	x0, x23
    5c3c:	b.eq	5c44 <bcmp@plt+0x304>  // b.none
    5c40:	bl	5650 <_ZdlPv@plt>
    5c44:	ldr	x0, [sp, #40]
    5c48:	add	x8, sp, #0x28
    5c4c:	add	x8, x8, #0x10
    5c50:	cmp	x0, x8
    5c54:	b.eq	5c5c <bcmp@plt+0x31c>  // b.none
    5c58:	bl	5650 <_ZdlPv@plt>
    5c5c:	mov	x0, x19
    5c60:	bl	58d0 <_Unwind_Resume@plt>
    5c64:	sub	sp, sp, #0x60
    5c68:	stp	x29, x30, [sp, #32]
    5c6c:	str	x23, [sp, #48]
    5c70:	stp	x22, x21, [sp, #64]
    5c74:	stp	x20, x19, [sp, #80]
    5c78:	add	x29, sp, #0x20
    5c7c:	ldr	x21, [x0, #32]
    5c80:	mov	w1, #0x3a                  	// #58
    5c84:	mov	x20, x0
    5c88:	mov	x19, x8
    5c8c:	mov	x2, x21
    5c90:	bl	5750 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    5c94:	mov	x22, x19
    5c98:	cmn	x0, #0x1
    5c9c:	strb	wzr, [x22, #16]!
    5ca0:	stp	x22, xzr, [x19]
    5ca4:	b.eq	5ccc <bcmp@plt+0x38c>  // b.none
    5ca8:	add	x8, x0, #0x1
    5cac:	str	x8, [x20, #32]
    5cb0:	sub	x2, x0, x21
    5cb4:	mov	x8, sp
    5cb8:	mov	x0, x20
    5cbc:	mov	x1, x21
    5cc0:	mov	x23, sp
    5cc4:	bl	5680 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
    5cc8:	b	5cec <bcmp@plt+0x3ac>
    5ccc:	mov	x8, #0xffffffffffffffff    	// #-1
    5cd0:	str	x8, [x20, #32]
    5cd4:	mov	x8, sp
    5cd8:	mov	x2, #0xffffffffffffffff    	// #-1
    5cdc:	mov	x0, x20
    5ce0:	mov	x1, x21
    5ce4:	mov	x23, sp
    5ce8:	bl	5680 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
    5cec:	mov	x1, sp
    5cf0:	mov	x0, x19
    5cf4:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>
    5cf8:	ldr	x0, [sp]
    5cfc:	add	x8, x23, #0x10
    5d00:	cmp	x0, x8
    5d04:	b.eq	5d0c <bcmp@plt+0x3cc>  // b.none
    5d08:	bl	5650 <_ZdlPv@plt>
    5d0c:	adrp	x1, 14000 <xexit@@Base+0x18>
    5d10:	add	x1, x1, #0x15a
    5d14:	mov	x0, x19
    5d18:	bl	5420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    5d1c:	cbnz	w0, 5d3c <bcmp@plt+0x3fc>
    5d20:	ldr	x2, [x19, #8]
    5d24:	adrp	x3, 14000 <xexit@@Base+0x18>
    5d28:	add	x3, x3, #0x57
    5d2c:	mov	w4, #0x1                   	// #1
    5d30:	mov	x0, x19
    5d34:	mov	x1, xzr
    5d38:	bl	57d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5d3c:	ldp	x20, x19, [sp, #80]
    5d40:	ldp	x22, x21, [sp, #64]
    5d44:	ldr	x23, [sp, #48]
    5d48:	ldp	x29, x30, [sp, #32]
    5d4c:	add	sp, sp, #0x60
    5d50:	ret
    5d54:	b	5d5c <bcmp@plt+0x41c>
    5d58:	b	5d5c <bcmp@plt+0x41c>
    5d5c:	mov	x20, x0
    5d60:	ldr	x0, [x19]
    5d64:	cmp	x0, x22
    5d68:	b.eq	5d70 <bcmp@plt+0x430>  // b.none
    5d6c:	bl	5650 <_ZdlPv@plt>
    5d70:	mov	x0, x20
    5d74:	bl	58d0 <_Unwind_Resume@plt>

0000000000005d78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base>:
    5d78:	stp	x29, x30, [sp, #-48]!
    5d7c:	str	x21, [sp, #16]
    5d80:	stp	x20, x19, [sp, #32]
    5d84:	mov	x29, sp
    5d88:	mov	x20, x1
    5d8c:	mov	x19, x0
    5d90:	cbnz	x1, 5d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x24>
    5d94:	cmp	x20, x2
    5d98:	b.ne	5e18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0xa0>  // b.any
    5d9c:	sub	x21, x2, x20
    5da0:	cmp	x21, #0xf
    5da4:	str	x21, [x29, #24]
    5da8:	b.ls	5dd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x58>  // b.plast
    5dac:	add	x1, x29, #0x18
    5db0:	mov	x0, x19
    5db4:	mov	x2, xzr
    5db8:	bl	58e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5dbc:	str	x0, [x19]
    5dc0:	ldr	x8, [x29, #24]
    5dc4:	str	x8, [x19, #16]
    5dc8:	cbnz	x21, 5dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x60>
    5dcc:	b	5df8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x80>
    5dd0:	ldr	x0, [x19]
    5dd4:	cbz	x21, 5df8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x80>
    5dd8:	cmp	x21, #0x1
    5ddc:	b.ne	5dec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x74>  // b.any
    5de0:	ldrb	w8, [x20]
    5de4:	strb	w8, [x0]
    5de8:	b	5df8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x80>
    5dec:	mov	x1, x20
    5df0:	mov	x2, x21
    5df4:	bl	5390 <memcpy@plt>
    5df8:	ldr	x8, [x29, #24]
    5dfc:	ldr	x9, [x19]
    5e00:	ldr	x21, [sp, #16]
    5e04:	str	x8, [x19, #8]
    5e08:	strb	wzr, [x9, x8]
    5e0c:	ldp	x20, x19, [sp, #32]
    5e10:	ldp	x29, x30, [sp], #48
    5e14:	ret
    5e18:	adrp	x0, 14000 <xexit@@Base+0x18>
    5e1c:	add	x0, x0, #0x2d
    5e20:	bl	55c0 <_ZSt19__throw_logic_errorPKc@plt>
    5e24:	stp	x29, x30, [sp, #-32]!
    5e28:	str	x19, [sp, #16]
    5e2c:	mov	x29, sp
    5e30:	mov	x19, x1
    5e34:	add	x1, x29, #0x18
    5e38:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    5e3c:	cbz	w0, 5e4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0xd4>
    5e40:	ldr	x8, [x29, #24]
    5e44:	mov	w0, #0x1                   	// #1
    5e48:	str	w8, [x19]
    5e4c:	ldr	x19, [sp, #16]
    5e50:	ldp	x29, x30, [sp], #32
    5e54:	ret
    5e58:	stp	x29, x30, [sp, #-32]!
    5e5c:	str	x19, [sp, #16]
    5e60:	mov	x29, sp
    5e64:	mov	x19, x1
    5e68:	add	x1, x29, #0x18
    5e6c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    5e70:	cbz	w0, 5e80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x108>
    5e74:	ldr	x8, [x29, #24]
    5e78:	mov	w0, #0x1                   	// #1
    5e7c:	str	w8, [x19]
    5e80:	ldr	x19, [sp, #16]
    5e84:	ldp	x29, x30, [sp], #32
    5e88:	ret
    5e8c:	stp	x29, x30, [sp, #-32]!
    5e90:	str	x19, [sp, #16]
    5e94:	mov	x29, sp
    5e98:	mov	x19, x1
    5e9c:	add	x1, x29, #0x18
    5ea0:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    5ea4:	cbz	w0, 5eb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x13c>
    5ea8:	ldr	x8, [x29, #24]
    5eac:	mov	w0, #0x1                   	// #1
    5eb0:	str	w8, [x19]
    5eb4:	ldr	x19, [sp, #16]
    5eb8:	ldp	x29, x30, [sp], #32
    5ebc:	ret
    5ec0:	stp	x29, x30, [sp, #-48]!
    5ec4:	str	x21, [sp, #16]
    5ec8:	stp	x20, x19, [sp, #32]
    5ecc:	mov	x29, sp
    5ed0:	mov	x8, x0
    5ed4:	mov	x20, x2
    5ed8:	mov	x21, x1
    5edc:	mov	x19, x0
    5ee0:	movi	v0.2d, #0x0
    5ee4:	strb	wzr, [x8, #104]!
    5ee8:	stur	q0, [x8, #-40]
    5eec:	stur	q0, [x8, #-56]
    5ef0:	stur	q0, [x8, #-72]
    5ef4:	stur	q0, [x8, #-88]
    5ef8:	stp	xzr, x8, [x8, #-24]
    5efc:	stur	xzr, [x8, #-8]
    5f00:	strb	wzr, [x8, #16]
    5f04:	mov	w0, #0x10                  	// #16
    5f08:	bl	5660 <_Znwm@plt>
    5f0c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    5f10:	add	x8, x8, #0x548
    5f14:	stp	x8, x19, [x0]
    5f18:	str	x0, [x19, #128]
    5f1c:	stp	x21, x20, [x19]
    5f20:	ldp	x20, x19, [sp, #32]
    5f24:	ldr	x21, [sp, #16]
    5f28:	ldp	x29, x30, [sp], #48
    5f2c:	ret
    5f30:	mov	x20, x0
    5f34:	add	x0, x19, #0x40
    5f38:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    5f3c:	mov	x0, x20
    5f40:	bl	58d0 <_Unwind_Resume@plt>
    5f44:	stp	x29, x30, [sp, #-32]!
    5f48:	str	x19, [sp, #16]
    5f4c:	mov	x29, sp
    5f50:	mov	x19, x0
    5f54:	ldr	x0, [x0, #16]
    5f58:	cbz	x0, 5f68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x1f0>
    5f5c:	ldr	x8, [x0]
    5f60:	ldr	x8, [x8, #8]
    5f64:	blr	x8
    5f68:	ldr	x0, [x19, #128]
    5f6c:	cbz	x0, 5f7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x204>
    5f70:	ldr	x8, [x0]
    5f74:	ldr	x8, [x8, #16]
    5f78:	blr	x8
    5f7c:	ldr	x0, [x19, #88]
    5f80:	add	x8, x19, #0x68
    5f84:	cmp	x0, x8
    5f88:	b.eq	5f90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x218>  // b.none
    5f8c:	bl	5650 <_ZdlPv@plt>
    5f90:	add	x0, x19, #0x40
    5f94:	ldr	x19, [sp, #16]
    5f98:	ldp	x29, x30, [sp], #32
    5f9c:	b	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    5fa0:	adrp	x0, 14000 <xexit@@Base+0x18>
    5fa4:	add	x0, x0, #0x59
    5fa8:	b	54e0 <xstrdup@plt>
    5fac:	stp	x29, x30, [sp, #-96]!
    5fb0:	stp	x28, x27, [sp, #16]
    5fb4:	stp	x26, x25, [sp, #32]
    5fb8:	stp	x24, x23, [sp, #48]
    5fbc:	stp	x22, x21, [sp, #64]
    5fc0:	stp	x20, x19, [sp, #80]
    5fc4:	mov	x29, sp
    5fc8:	sub	sp, sp, #0x1b0
    5fcc:	mov	x19, sp
    5fd0:	ldr	x23, [x0, #16]
    5fd4:	mov	x21, x0
    5fd8:	add	x0, x19, #0x20
    5fdc:	mov	x20, x1
    5fe0:	add	x22, x19, #0x20
    5fe4:	bl	55b0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    5fe8:	add	x22, x22, #0x10
    5fec:	adrp	x1, 14000 <xexit@@Base+0x18>
    5ff0:	add	x1, x1, #0xaf3
    5ff4:	mov	w2, #0x1                   	// #1
    5ff8:	mov	x0, x22
    5ffc:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6000:	cbz	x23, 6020 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x2a8>
    6004:	mov	x0, x23
    6008:	bl	5430 <strlen@plt>
    600c:	mov	x2, x0
    6010:	mov	x0, x22
    6014:	mov	x1, x23
    6018:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    601c:	b	6038 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x2c0>
    6020:	ldr	x8, [x19, #48]
    6024:	ldur	x8, [x8, #-24]
    6028:	add	x0, x22, x8
    602c:	ldr	w8, [x0, #32]
    6030:	orr	w1, w8, #0x1
    6034:	bl	5890 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    6038:	adrp	x1, 14000 <xexit@@Base+0x18>
    603c:	add	x1, x1, #0x123
    6040:	mov	w2, #0x1                   	// #1
    6044:	mov	x0, x22
    6048:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    604c:	adrp	x23, 14000 <xexit@@Base+0x18>
    6050:	mov	x25, #0xb                   	// #11
    6054:	mov	x27, #0x4f1000000000        	// #86930138071040
    6058:	add	x23, x23, #0x79
    605c:	mov	w24, #0x1                   	// #1
    6060:	movk	x25, #0x3, lsl #32
    6064:	mov	w26, #0x5c                  	// #92
    6068:	movk	x27, #0x8000, lsl #48
    606c:	ldrb	w8, [x23]
    6070:	cmp	w8, #0x3f
    6074:	b.hi	6088 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x310>  // b.pmore
    6078:	lsl	x9, x24, x8
    607c:	tst	x9, x27
    6080:	b.ne	60a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x328>  // b.any
    6084:	cbz	x8, 60d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x35c>
    6088:	sub	w9, w8, #0x5b
    608c:	cmp	w9, #0x21
    6090:	b.hi	60b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x340>  // b.pmore
    6094:	lsl	x9, x24, x9
    6098:	tst	x9, x25
    609c:	b.eq	60b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x340>  // b.none
    60a0:	sturb	w26, [x29, #-4]
    60a4:	sub	x1, x29, #0x4
    60a8:	mov	w2, #0x1                   	// #1
    60ac:	mov	x0, x22
    60b0:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    60b4:	ldrb	w8, [x23]
    60b8:	sturb	w8, [x29, #-4]
    60bc:	sub	x1, x29, #0x4
    60c0:	mov	w2, #0x1                   	// #1
    60c4:	mov	x0, x22
    60c8:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    60cc:	add	x23, x23, #0x1
    60d0:	b	606c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x2f4>
    60d4:	adrp	x1, 14000 <xexit@@Base+0x18>
    60d8:	add	x1, x1, #0x125
    60dc:	mov	w2, #0x1                   	// #1
    60e0:	mov	x0, x22
    60e4:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    60e8:	add	x22, x19, #0x20
    60ec:	add	x0, x22, #0x18
    60f0:	add	x8, x19, #0x0
    60f4:	bl	5810 <_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@plt>
    60f8:	adrp	x1, 28000 <xexit@@Base+0x14018>
    60fc:	ldr	x1, [x1, #3320]
    6100:	add	x0, x19, #0x20
    6104:	bl	55e0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev@plt>
    6108:	add	x0, x22, #0x80
    610c:	bl	5460 <_ZNSt8ios_baseD2Ev@plt>
    6110:	ldr	x8, [x21, #8]
    6114:	ldrb	w8, [x8, #120]
    6118:	cbnz	w8, 6230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x4b8>
    611c:	ldr	x1, [x19]
    6120:	add	x0, x19, #0x20
    6124:	mov	w2, #0x9                   	// #9
    6128:	bl	53b0 <xregcomp@plt>
    612c:	mov	w22, w0
    6130:	cbz	w0, 61a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x428>
    6134:	add	x1, x19, #0x20
    6138:	mov	w0, w22
    613c:	mov	x2, xzr
    6140:	mov	x3, xzr
    6144:	bl	58a0 <xregerror@plt>
    6148:	add	x9, x0, #0xf
    614c:	mov	x8, sp
    6150:	and	x9, x9, #0xfffffffffffffff0
    6154:	mov	x21, sp
    6158:	sub	x20, x8, x9
    615c:	mov	x3, x0
    6160:	mov	sp, x20
    6164:	add	x1, x19, #0x20
    6168:	mov	w0, w22
    616c:	mov	x2, x20
    6170:	bl	58a0 <xregerror@plt>
    6174:	ldr	x1, [x19]
    6178:	adrp	x0, 14000 <xexit@@Base+0x18>
    617c:	adrp	x2, 14000 <xexit@@Base+0x18>
    6180:	add	x0, x0, #0xa7
    6184:	add	x2, x2, #0xc2
    6188:	mov	x3, x20
    618c:	mov	x4, xzr
    6190:	bl	5620 <concat@plt>
    6194:	mov	x20, x0
    6198:	mov	sp, x21
    619c:	b	61f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x47c>
    61a0:	add	x0, x19, #0x20
    61a4:	mov	x1, x20
    61a8:	bl	5a24 <bcmp@plt+0xe4>
    61ac:	tbz	w0, #0, 61cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x454>
    61b0:	add	x0, x19, #0x20
    61b4:	bl	5450 <xregfree@plt>
    61b8:	ldr	x8, [x21, #8]
    61bc:	ldrb	w8, [x8, #120]
    61c0:	cbnz	w8, 6250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x4d8>
    61c4:	mov	x20, xzr
    61c8:	b	61f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x47c>
    61cc:	add	x0, x19, #0x20
    61d0:	bl	5450 <xregfree@plt>
    61d4:	ldr	x1, [x19]
    61d8:	adrp	x0, 14000 <xexit@@Base+0x18>
    61dc:	adrp	x2, 14000 <xexit@@Base+0x18>
    61e0:	add	x0, x0, #0xc6
    61e4:	add	x2, x2, #0xe9
    61e8:	mov	x3, xzr
    61ec:	bl	5620 <concat@plt>
    61f0:	mov	x20, x0
    61f4:	ldr	x0, [x19]
    61f8:	add	x8, x19, #0x0
    61fc:	add	x8, x8, #0x10
    6200:	cmp	x0, x8
    6204:	b.eq	620c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x494>  // b.none
    6208:	bl	5650 <_ZdlPv@plt>
    620c:	mov	x0, x20
    6210:	mov	sp, x29
    6214:	ldp	x20, x19, [sp, #80]
    6218:	ldp	x22, x21, [sp, #64]
    621c:	ldp	x24, x23, [sp, #48]
    6220:	ldp	x26, x25, [sp, #32]
    6224:	ldp	x28, x27, [sp, #16]
    6228:	ldp	x29, x30, [sp], #96
    622c:	ret
    6230:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6234:	ldr	x8, [x8, #3976]
    6238:	ldr	x2, [x19]
    623c:	adrp	x1, 14000 <xexit@@Base+0x18>
    6240:	add	x1, x1, #0x7d
    6244:	ldr	x0, [x8]
    6248:	bl	5440 <fprintf@plt>
    624c:	b	611c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x3a4>
    6250:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6254:	ldr	x8, [x8, #3976]
    6258:	ldr	x2, [x20]
    625c:	adrp	x1, 14000 <xexit@@Base+0x18>
    6260:	add	x1, x1, #0xeb
    6264:	ldr	x0, [x8]
    6268:	bl	5440 <fprintf@plt>
    626c:	b	61c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x44c>
    6270:	b	6274 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x4fc>
    6274:	mov	x20, x0
    6278:	ldr	x0, [x19]
    627c:	add	x8, x19, #0x0
    6280:	add	x8, x8, #0x10
    6284:	cmp	x0, x8
    6288:	b.eq	62b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x540>  // b.none
    628c:	bl	5650 <_ZdlPv@plt>
    6290:	b	62b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x540>
    6294:	b	6298 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x520>
    6298:	adrp	x1, 28000 <xexit@@Base+0x14018>
    629c:	ldr	x1, [x1, #3320]
    62a0:	mov	x20, x0
    62a4:	add	x0, x19, #0x20
    62a8:	add	x21, x19, #0x20
    62ac:	bl	55e0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev@plt>
    62b0:	add	x0, x21, #0x80
    62b4:	bl	5460 <_ZNSt8ios_baseD2Ev@plt>
    62b8:	mov	x0, x20
    62bc:	bl	58d0 <_Unwind_Resume@plt>
    62c0:	stp	x29, x30, [sp, #-32]!
    62c4:	stp	x20, x19, [sp, #16]
    62c8:	mov	x29, sp
    62cc:	ldr	x8, [x0, #8]
    62d0:	mov	x19, x0
    62d4:	mov	x20, x1
    62d8:	ldrb	w8, [x8, #120]
    62dc:	cbnz	w8, 62fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x584>
    62e0:	add	x1, x19, #0x10
    62e4:	mov	x0, x20
    62e8:	bl	5510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    62ec:	ldp	x20, x19, [sp, #16]
    62f0:	mov	x0, xzr
    62f4:	ldp	x29, x30, [sp], #32
    62f8:	ret
    62fc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6300:	ldr	x8, [x8, #3976]
    6304:	ldr	x2, [x19, #16]
    6308:	adrp	x1, 14000 <xexit@@Base+0x18>
    630c:	add	x1, x1, #0xfe
    6310:	ldr	x0, [x8]
    6314:	bl	5440 <fprintf@plt>
    6318:	b	62e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x568>

000000000000631c <gcc_c_fe_context@@Base>:
    631c:	stp	x29, x30, [sp, #-32]!
    6320:	stp	x20, x19, [sp, #16]
    6324:	mov	x29, sp
    6328:	orr	w8, w1, w0
    632c:	cmp	w8, #0x1
    6330:	b.ls	633c <gcc_c_fe_context@@Base+0x20>  // b.plast
    6334:	mov	x19, xzr
    6338:	b	635c <gcc_c_fe_context@@Base+0x40>
    633c:	mov	w0, #0x88                  	// #136
    6340:	bl	5660 <_Znwm@plt>
    6344:	mov	x19, x0
    6348:	adrp	x1, 28000 <xexit@@Base+0x14018>
    634c:	adrp	x2, 28000 <xexit@@Base+0x14018>
    6350:	add	x1, x1, #0x400
    6354:	add	x2, x2, #0x458
    6358:	bl	5ec0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x148>
    635c:	mov	x0, x19
    6360:	ldp	x20, x19, [sp, #16]
    6364:	ldp	x29, x30, [sp], #32
    6368:	ret
    636c:	mov	x20, x0
    6370:	mov	x0, x19
    6374:	bl	5650 <_ZdlPv@plt>
    6378:	mov	x0, x20
    637c:	bl	58d0 <_Unwind_Resume@plt>
    6380:	stp	x29, x30, [sp, #-48]!
    6384:	str	x21, [sp, #16]
    6388:	stp	x20, x19, [sp, #32]
    638c:	mov	x29, sp
    6390:	mov	x19, x3
    6394:	mov	w20, w2
    6398:	mov	x21, x0
    639c:	bl	6a08 <gcc_c_fe_context@@Base+0x6ec>
    63a0:	mov	x0, x21
    63a4:	mov	w1, w20
    63a8:	mov	x2, x19
    63ac:	ldp	x20, x19, [sp, #32]
    63b0:	ldr	x21, [sp, #16]
    63b4:	ldp	x29, x30, [sp], #48
    63b8:	b	68f0 <gcc_c_fe_context@@Base+0x5d4>
    63bc:	stp	x29, x30, [sp, #-48]!
    63c0:	str	x21, [sp, #16]
    63c4:	stp	x20, x19, [sp, #32]
    63c8:	mov	x29, sp
    63cc:	ldr	x20, [x0, #96]
    63d0:	add	x21, x0, #0x58
    63d4:	mov	x0, x1
    63d8:	mov	x19, x1
    63dc:	bl	5430 <strlen@plt>
    63e0:	mov	x4, x0
    63e4:	mov	x0, x21
    63e8:	mov	x2, x20
    63ec:	mov	x3, x19
    63f0:	ldp	x20, x19, [sp, #32]
    63f4:	ldr	x21, [sp, #16]
    63f8:	mov	x1, xzr
    63fc:	ldp	x29, x30, [sp], #48
    6400:	b	57d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6404:	stp	x1, x2, [x0, #48]
    6408:	ret
    640c:	cmp	w2, #0x0
    6410:	cset	w8, ne  // ne = any
    6414:	strb	w8, [x0, #120]
    6418:	b	6458 <gcc_c_fe_context@@Base+0x13c>
    641c:	cbz	x0, 6444 <gcc_c_fe_context@@Base+0x128>
    6420:	stp	x29, x30, [sp, #-32]!
    6424:	str	x19, [sp, #16]
    6428:	mov	x29, sp
    642c:	mov	x19, x0
    6430:	bl	5f44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x1cc>
    6434:	mov	x0, x19
    6438:	ldr	x19, [sp, #16]
    643c:	ldp	x29, x30, [sp], #32
    6440:	b	5650 <_ZdlPv@plt>
    6444:	ret
    6448:	cmp	w1, #0x0
    644c:	cset	w8, ne  // ne = any
    6450:	strb	w8, [x0, #120]
    6454:	ret
    6458:	sub	sp, sp, #0xe0
    645c:	stp	x29, x30, [sp, #160]
    6460:	str	x23, [sp, #176]
    6464:	stp	x22, x21, [sp, #192]
    6468:	stp	x20, x19, [sp, #208]
    646c:	add	x29, sp, #0xa0
    6470:	mov	x21, x1
    6474:	mov	x19, x0
    6478:	add	x3, x29, #0x18
    647c:	mov	w0, #0x1                   	// #1
    6480:	mov	w1, #0x1                   	// #1
    6484:	mov	w2, wzr
    6488:	bl	53d0 <socketpair@plt>
    648c:	cbz	w0, 64a4 <gcc_c_fe_context@@Base+0x188>
    6490:	ldp	x8, x0, [x19, #48]
    6494:	adrp	x1, 14000 <xexit@@Base+0x18>
    6498:	add	x1, x1, #0x127
    649c:	blr	x8
    64a0:	b	64d0 <gcc_c_fe_context@@Base+0x1b4>
    64a4:	sub	x0, x29, #0x8
    64a8:	bl	53f0 <pipe@plt>
    64ac:	cbz	w0, 64ec <gcc_c_fe_context@@Base+0x1d0>
    64b0:	ldp	x8, x0, [x19, #48]
    64b4:	adrp	x1, 14000 <xexit@@Base+0x18>
    64b8:	add	x1, x1, #0x144
    64bc:	blr	x8
    64c0:	ldr	w0, [x29, #24]
    64c4:	bl	5790 <close@plt>
    64c8:	ldr	w0, [x29, #28]
    64cc:	bl	5790 <close@plt>
    64d0:	mov	w0, wzr
    64d4:	ldp	x20, x19, [sp, #208]
    64d8:	ldp	x22, x21, [sp, #192]
    64dc:	ldr	x23, [sp, #176]
    64e0:	ldp	x29, x30, [sp, #160]
    64e4:	add	sp, sp, #0xe0
    64e8:	ret
    64ec:	add	x8, sp, #0x30
    64f0:	add	x22, x8, #0x10
    64f4:	str	x22, [sp, #48]
    64f8:	adrp	x1, 14000 <xexit@@Base+0x18>
    64fc:	add	x1, x1, #0x15b
    6500:	add	x2, x1, #0x15
    6504:	add	x0, sp, #0x30
    6508:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    650c:	add	x20, x19, #0x40
    6510:	add	x1, sp, #0x30
    6514:	mov	x0, x20
    6518:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    651c:	ldr	x0, [sp, #48]
    6520:	cmp	x0, x22
    6524:	b.eq	652c <gcc_c_fe_context@@Base+0x210>  // b.none
    6528:	bl	5650 <_ZdlPv@plt>
    652c:	ldr	w3, [x29, #28]
    6530:	adrp	x2, 14000 <xexit@@Base+0x18>
    6534:	add	x2, x2, #0x171
    6538:	add	x0, sp, #0x30
    653c:	mov	w1, #0x64                  	// #100
    6540:	add	x23, sp, #0x30
    6544:	bl	56c0 <snprintf@plt>
    6548:	cmp	w0, #0x64
    654c:	b.ge	6834 <gcc_c_fe_context@@Base+0x518>  // b.tcont
    6550:	add	x8, sp, #0x10
    6554:	add	x22, x8, #0x10
    6558:	add	x0, sp, #0x30
    655c:	str	x22, [sp, #16]
    6560:	bl	5430 <strlen@plt>
    6564:	add	x2, x23, x0
    6568:	add	x0, sp, #0x10
    656c:	add	x1, sp, #0x30
    6570:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6574:	add	x1, sp, #0x10
    6578:	mov	x0, x20
    657c:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6580:	ldr	x0, [sp, #16]
    6584:	cmp	x0, x22
    6588:	b.eq	6590 <gcc_c_fe_context@@Base+0x274>  // b.none
    658c:	bl	5650 <_ZdlPv@plt>
    6590:	add	x1, x19, #0x58
    6594:	mov	x0, x20
    6598:	bl	54f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    659c:	add	x8, sp, #0x10
    65a0:	add	x22, x8, #0x10
    65a4:	str	x22, [sp, #16]
    65a8:	adrp	x1, 14000 <xexit@@Base+0x18>
    65ac:	add	x1, x1, #0x191
    65b0:	add	x2, x1, #0x2
    65b4:	add	x0, sp, #0x10
    65b8:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    65bc:	add	x1, sp, #0x10
    65c0:	mov	x0, x20
    65c4:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    65c8:	ldr	x0, [sp, #16]
    65cc:	cmp	x0, x22
    65d0:	b.eq	65d8 <gcc_c_fe_context@@Base+0x2bc>  // b.none
    65d4:	bl	5650 <_ZdlPv@plt>
    65d8:	add	x8, sp, #0x10
    65dc:	add	x22, x8, #0x10
    65e0:	str	x22, [sp, #16]
    65e4:	adrp	x1, 14000 <xexit@@Base+0x18>
    65e8:	add	x1, x1, #0x194
    65ec:	add	x2, x1, #0x2
    65f0:	add	x0, sp, #0x10
    65f4:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    65f8:	add	x1, sp, #0x10
    65fc:	mov	x0, x20
    6600:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6604:	ldr	x0, [sp, #16]
    6608:	cmp	x0, x22
    660c:	b.eq	6614 <gcc_c_fe_context@@Base+0x2f8>  // b.none
    6610:	bl	5650 <_ZdlPv@plt>
    6614:	add	x0, sp, #0x10
    6618:	add	x2, sp, #0x8
    661c:	mov	x1, x21
    6620:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    6624:	add	x1, sp, #0x10
    6628:	mov	x0, x20
    662c:	add	x21, sp, #0x10
    6630:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6634:	ldr	x0, [sp, #16]
    6638:	add	x8, x21, #0x10
    663c:	cmp	x0, x8
    6640:	b.eq	6648 <gcc_c_fe_context@@Base+0x32c>  // b.none
    6644:	bl	5650 <_ZdlPv@plt>
    6648:	ldrb	w8, [x19, #120]
    664c:	cbz	w8, 668c <gcc_c_fe_context@@Base+0x370>
    6650:	add	x8, sp, #0x10
    6654:	add	x21, x8, #0x10
    6658:	str	x21, [sp, #16]
    665c:	adrp	x1, 14000 <xexit@@Base+0x18>
    6660:	add	x1, x1, #0x197
    6664:	add	x2, x1, #0x2
    6668:	add	x0, sp, #0x10
    666c:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    6670:	add	x1, sp, #0x10
    6674:	mov	x0, x20
    6678:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    667c:	ldr	x0, [sp, #16]
    6680:	cmp	x0, x21
    6684:	b.eq	668c <gcc_c_fe_context@@Base+0x370>  // b.none
    6688:	bl	5650 <_ZdlPv@plt>
    668c:	mov	w0, #0x20                  	// #32
    6690:	bl	5660 <_Znwm@plt>
    6694:	adrp	x10, 28000 <xexit@@Base+0x14018>
    6698:	ldr	w8, [x29, #24]
    669c:	ldur	w9, [x29, #-8]
    66a0:	ldr	x10, [x10, #3368]
    66a4:	mov	x20, x0
    66a8:	add	x21, x0, #0x10
    66ac:	stp	w8, w9, [x0, #8]
    66b0:	add	x10, x10, #0x10
    66b4:	str	x10, [x0]
    66b8:	mov	x0, x21
    66bc:	bl	cc88 <gcc_cp_fe_context@@Base+0x398c>
    66c0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    66c4:	adrp	x1, 14000 <xexit@@Base+0x18>
    66c8:	adrp	x2, 6000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x288>
    66cc:	add	x8, x8, #0x600
    66d0:	add	x1, x1, #0x19a
    66d4:	add	x2, x2, #0xbc0
    66d8:	mov	x0, x21
    66dc:	str	x19, [x20, #24]
    66e0:	str	x8, [x20]
    66e4:	str	x20, [x19, #16]
    66e8:	bl	cd1c <gcc_cp_fe_context@@Base+0x3a20>
    66ec:	ldr	x8, [x19, #16]
    66f0:	adrp	x1, 14000 <xexit@@Base+0x18>
    66f4:	adrp	x2, 6000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x288>
    66f8:	add	x1, x1, #0x1a9
    66fc:	add	x0, x8, #0x10
    6700:	add	x2, x2, #0xc84
    6704:	bl	cd1c <gcc_cp_fe_context@@Base+0x3a20>
    6708:	ldp	x22, x8, [x19, #64]
    670c:	adrp	x1, 28000 <xexit@@Base+0x14018>
    6710:	ldr	x1, [x1, #3280]
    6714:	sub	x23, x8, x22
    6718:	asr	x21, x23, #5
    671c:	add	x8, x21, #0x1
    6720:	lsl	x9, x8, #3
    6724:	cmp	xzr, x8, lsr #61
    6728:	csinv	x0, x9, xzr, eq  // eq = none
    672c:	bl	5850 <_ZnamRKSt9nothrow_t@plt>
    6730:	cbz	x0, 64d4 <gcc_c_fe_context@@Base+0x1b8>
    6734:	mov	x20, x0
    6738:	cbz	x23, 6764 <gcc_c_fe_context@@Base+0x448>
    673c:	mov	x8, xzr
    6740:	mov	w9, #0x1                   	// #1
    6744:	lsl	x10, x8, #5
    6748:	ldr	x10, [x22, x10]
    674c:	cmp	x21, w9, uxtw
    6750:	str	x10, [x20, x8, lsl #3]
    6754:	add	w10, w9, #0x1
    6758:	mov	w8, w9
    675c:	mov	w9, w10
    6760:	b.hi	6744 <gcc_c_fe_context@@Base+0x428>  // b.pmore
    6764:	str	xzr, [x20, x21, lsl #3]
    6768:	bl	5780 <fork@plt>
    676c:	cmn	w0, #0x1
    6770:	b.eq	67c0 <gcc_c_fe_context@@Base+0x4a4>  // b.none
    6774:	mov	w21, w0
    6778:	cbz	w0, 6838 <gcc_c_fe_context@@Base+0x51c>
    677c:	ldr	w0, [x29, #28]
    6780:	bl	5790 <close@plt>
    6784:	ldur	w0, [x29, #-4]
    6788:	bl	5790 <close@plt>
    678c:	ldr	x0, [x19, #16]
    6790:	mov	w1, #0x48                  	// #72
    6794:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    6798:	cbz	w0, 67e0 <gcc_c_fe_context@@Base+0x4c4>
    679c:	ldr	x0, [x19, #16]
    67a0:	mov	w1, #0x1                   	// #1
    67a4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    67a8:	cbz	w0, 67e0 <gcc_c_fe_context@@Base+0x4c4>
    67ac:	ldr	x0, [x19, #16]
    67b0:	mov	w1, wzr
    67b4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    67b8:	mov	w19, w0
    67bc:	b	67e4 <gcc_c_fe_context@@Base+0x4c8>
    67c0:	ldr	w0, [x29, #24]
    67c4:	bl	5790 <close@plt>
    67c8:	ldr	w0, [x29, #28]
    67cc:	bl	5790 <close@plt>
    67d0:	ldur	w0, [x29, #-8]
    67d4:	bl	5790 <close@plt>
    67d8:	ldur	w0, [x29, #-4]
    67dc:	b	64cc <gcc_c_fe_context@@Base+0x1b0>
    67e0:	mov	w19, wzr
    67e4:	ldr	w0, [x29, #24]
    67e8:	bl	5790 <close@plt>
    67ec:	ldur	w0, [x29, #-8]
    67f0:	bl	5790 <close@plt>
    67f4:	add	x1, sp, #0x10
    67f8:	mov	w0, w21
    67fc:	mov	w2, wzr
    6800:	bl	5470 <waitpid@plt>
    6804:	cmn	w0, #0x1
    6808:	b.ne	681c <gcc_c_fe_context@@Base+0x500>  // b.any
    680c:	bl	5740 <__errno_location@plt>
    6810:	ldr	w8, [x0]
    6814:	cmp	w8, #0x4
    6818:	b.ne	64d0 <gcc_c_fe_context@@Base+0x1b4>  // b.any
    681c:	ldrh	w8, [sp, #16]
    6820:	tst	w8, #0xffffff7f
    6824:	b.ne	64d0 <gcc_c_fe_context@@Base+0x1b4>  // b.any
    6828:	cmp	w19, #0x0
    682c:	cset	w0, ne  // ne = any
    6830:	b	64d4 <gcc_c_fe_context@@Base+0x1b8>
    6834:	bl	5820 <abort@plt>
    6838:	ldur	w0, [x29, #-4]
    683c:	mov	w1, #0x1                   	// #1
    6840:	bl	5400 <dup2@plt>
    6844:	ldur	w0, [x29, #-4]
    6848:	mov	w1, #0x2                   	// #2
    684c:	bl	5400 <dup2@plt>
    6850:	ldur	w0, [x29, #-8]
    6854:	bl	5790 <close@plt>
    6858:	ldur	w0, [x29, #-4]
    685c:	bl	5790 <close@plt>
    6860:	ldr	w0, [x29, #24]
    6864:	bl	5790 <close@plt>
    6868:	ldr	x0, [x20]
    686c:	mov	x1, x20
    6870:	bl	53c0 <execvp@plt>
    6874:	mov	w0, #0x7f                  	// #127
    6878:	bl	5570 <_exit@plt>
    687c:	ldr	x8, [sp, #16]
    6880:	cmp	x8, x21
    6884:	b	68d0 <gcc_c_fe_context@@Base+0x5b4>
    6888:	b	68e4 <gcc_c_fe_context@@Base+0x5c8>
    688c:	mov	x19, x0
    6890:	mov	x0, x20
    6894:	b	68dc <gcc_c_fe_context@@Base+0x5c0>
    6898:	ldr	x8, [sp, #16]
    689c:	add	x9, x21, #0x10
    68a0:	cmp	x8, x9
    68a4:	b	68d0 <gcc_c_fe_context@@Base+0x5b4>
    68a8:	b	68e4 <gcc_c_fe_context@@Base+0x5c8>
    68ac:	b	68bc <gcc_c_fe_context@@Base+0x5a0>
    68b0:	b	68e4 <gcc_c_fe_context@@Base+0x5c8>
    68b4:	b	68bc <gcc_c_fe_context@@Base+0x5a0>
    68b8:	b	68e4 <gcc_c_fe_context@@Base+0x5c8>
    68bc:	ldr	x8, [sp, #16]
    68c0:	b	68cc <gcc_c_fe_context@@Base+0x5b0>
    68c4:	b	68e4 <gcc_c_fe_context@@Base+0x5c8>
    68c8:	ldr	x8, [sp, #48]
    68cc:	cmp	x8, x22
    68d0:	mov	x19, x0
    68d4:	b.eq	68e8 <gcc_c_fe_context@@Base+0x5cc>  // b.none
    68d8:	mov	x0, x8
    68dc:	bl	5650 <_ZdlPv@plt>
    68e0:	b	68e8 <gcc_c_fe_context@@Base+0x5cc>
    68e4:	mov	x19, x0
    68e8:	mov	x0, x19
    68ec:	bl	58d0 <_Unwind_Resume@plt>
    68f0:	sub	sp, sp, #0x80
    68f4:	stp	x29, x30, [sp, #64]
    68f8:	str	x23, [sp, #80]
    68fc:	stp	x22, x21, [sp, #96]
    6900:	stp	x20, x19, [sp, #112]
    6904:	add	x29, sp, #0x40
    6908:	add	x8, sp, #0x20
    690c:	add	x23, x8, #0x10
    6910:	stp	x23, xzr, [sp, #32]
    6914:	strb	wzr, [sp, #48]
    6918:	mov	x20, x0
    691c:	ldr	x0, [x0, #128]
    6920:	mov	x19, x2
    6924:	mov	w21, w1
    6928:	ldr	x8, [x0]
    692c:	ldr	x8, [x8]
    6930:	add	x1, sp, #0x20
    6934:	blr	x8
    6938:	mov	x22, x0
    693c:	cbnz	x0, 69a0 <gcc_c_fe_context@@Base+0x684>
    6940:	add	x20, x20, #0x40
    6944:	add	x1, sp, #0x20
    6948:	mov	x0, x20
    694c:	bl	54f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    6950:	cmp	w21, #0x1
    6954:	b.lt	699c <gcc_c_fe_context@@Base+0x680>  // b.tstop
    6958:	mov	x8, sp
    695c:	add	x22, x8, #0x10
    6960:	mov	w21, w21
    6964:	ldr	x1, [x19]
    6968:	mov	x0, sp
    696c:	add	x2, x29, #0x18
    6970:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    6974:	mov	x1, sp
    6978:	mov	x0, x20
    697c:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    6980:	ldr	x0, [sp]
    6984:	cmp	x0, x22
    6988:	b.eq	6990 <gcc_c_fe_context@@Base+0x674>  // b.none
    698c:	bl	5650 <_ZdlPv@plt>
    6990:	subs	x21, x21, #0x1
    6994:	add	x19, x19, #0x8
    6998:	b.ne	6964 <gcc_c_fe_context@@Base+0x648>  // b.any
    699c:	mov	x22, xzr
    69a0:	ldr	x0, [sp, #32]
    69a4:	cmp	x0, x23
    69a8:	b.eq	69b0 <gcc_c_fe_context@@Base+0x694>  // b.none
    69ac:	bl	5650 <_ZdlPv@plt>
    69b0:	mov	x0, x22
    69b4:	ldp	x20, x19, [sp, #112]
    69b8:	ldp	x22, x21, [sp, #96]
    69bc:	ldr	x23, [sp, #80]
    69c0:	ldp	x29, x30, [sp, #64]
    69c4:	add	sp, sp, #0x80
    69c8:	ret
    69cc:	b	69ec <gcc_c_fe_context@@Base+0x6d0>
    69d0:	ldr	x8, [sp]
    69d4:	mov	x19, x0
    69d8:	cmp	x8, x22
    69dc:	b.eq	69f0 <gcc_c_fe_context@@Base+0x6d4>  // b.none
    69e0:	mov	x0, x8
    69e4:	bl	5650 <_ZdlPv@plt>
    69e8:	b	69f0 <gcc_c_fe_context@@Base+0x6d4>
    69ec:	mov	x19, x0
    69f0:	ldr	x0, [sp, #32]
    69f4:	cmp	x0, x23
    69f8:	b.eq	6a00 <gcc_c_fe_context@@Base+0x6e4>  // b.none
    69fc:	bl	5650 <_ZdlPv@plt>
    6a00:	mov	x0, x19
    6a04:	bl	58d0 <_Unwind_Resume@plt>
    6a08:	sub	sp, sp, #0x50
    6a0c:	stp	x29, x30, [sp, #32]
    6a10:	str	x21, [sp, #48]
    6a14:	stp	x20, x19, [sp, #64]
    6a18:	add	x29, sp, #0x20
    6a1c:	mov	x20, x0
    6a20:	ldr	x0, [x0, #128]
    6a24:	mov	x21, x1
    6a28:	cbz	x0, 6a38 <gcc_c_fe_context@@Base+0x71c>
    6a2c:	ldr	x8, [x0]
    6a30:	ldr	x8, [x8, #16]
    6a34:	blr	x8
    6a38:	mov	w0, #0x30                  	// #48
    6a3c:	bl	5660 <_Znwm@plt>
    6a40:	mov	x19, x0
    6a44:	mov	x0, sp
    6a48:	add	x2, x29, #0x18
    6a4c:	mov	x1, x21
    6a50:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    6a54:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6a58:	ldp	x1, x9, [sp]
    6a5c:	add	x8, x8, #0x580
    6a60:	stp	x8, x20, [x19]
    6a64:	add	x8, x19, #0x20
    6a68:	mov	x0, x19
    6a6c:	str	x8, [x0, #16]!
    6a70:	add	x2, x1, x9
    6a74:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6a78:	str	x19, [x20, #128]
    6a7c:	ldr	x0, [sp]
    6a80:	mov	x8, sp
    6a84:	add	x8, x8, #0x10
    6a88:	cmp	x0, x8
    6a8c:	b.eq	6a94 <gcc_c_fe_context@@Base+0x778>  // b.none
    6a90:	bl	5650 <_ZdlPv@plt>
    6a94:	ldp	x20, x19, [sp, #64]
    6a98:	ldr	x21, [sp, #48]
    6a9c:	ldp	x29, x30, [sp, #32]
    6aa0:	mov	x0, xzr
    6aa4:	add	sp, sp, #0x50
    6aa8:	ret
    6aac:	ldr	x8, [sp]
    6ab0:	mov	x9, sp
    6ab4:	add	x9, x9, #0x10
    6ab8:	mov	x20, x0
    6abc:	cmp	x8, x9
    6ac0:	b.eq	6ad4 <gcc_c_fe_context@@Base+0x7b8>  // b.none
    6ac4:	mov	x0, x8
    6ac8:	bl	5650 <_ZdlPv@plt>
    6acc:	b	6ad4 <gcc_c_fe_context@@Base+0x7b8>
    6ad0:	mov	x20, x0
    6ad4:	mov	x0, x19
    6ad8:	bl	5650 <_ZdlPv@plt>
    6adc:	mov	x0, x20
    6ae0:	bl	58d0 <_Unwind_Resume@plt>
    6ae4:	sub	sp, sp, #0x50
    6ae8:	stp	x29, x30, [sp, #32]
    6aec:	str	x21, [sp, #48]
    6af0:	stp	x20, x19, [sp, #64]
    6af4:	add	x29, sp, #0x20
    6af8:	mov	x20, x0
    6afc:	ldr	x0, [x0, #128]
    6b00:	mov	x21, x1
    6b04:	cbz	x0, 6b14 <gcc_c_fe_context@@Base+0x7f8>
    6b08:	ldr	x8, [x0]
    6b0c:	ldr	x8, [x8, #16]
    6b10:	blr	x8
    6b14:	mov	w0, #0x30                  	// #48
    6b18:	bl	5660 <_Znwm@plt>
    6b1c:	mov	x19, x0
    6b20:	mov	x0, sp
    6b24:	add	x2, x29, #0x18
    6b28:	mov	x1, x21
    6b2c:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    6b30:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6b34:	ldp	x1, x9, [sp]
    6b38:	add	x8, x8, #0x5c0
    6b3c:	stp	x8, x20, [x19]
    6b40:	add	x8, x19, #0x20
    6b44:	mov	x0, x19
    6b48:	str	x8, [x0, #16]!
    6b4c:	add	x2, x1, x9
    6b50:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6b54:	str	x19, [x20, #128]
    6b58:	ldr	x0, [sp]
    6b5c:	mov	x8, sp
    6b60:	add	x8, x8, #0x10
    6b64:	cmp	x0, x8
    6b68:	b.eq	6b70 <gcc_c_fe_context@@Base+0x854>  // b.none
    6b6c:	bl	5650 <_ZdlPv@plt>
    6b70:	ldp	x20, x19, [sp, #64]
    6b74:	ldr	x21, [sp, #48]
    6b78:	ldp	x29, x30, [sp, #32]
    6b7c:	mov	x0, xzr
    6b80:	add	sp, sp, #0x50
    6b84:	ret
    6b88:	ldr	x8, [sp]
    6b8c:	mov	x9, sp
    6b90:	add	x9, x9, #0x10
    6b94:	mov	x20, x0
    6b98:	cmp	x8, x9
    6b9c:	b.eq	6bb0 <gcc_c_fe_context@@Base+0x894>  // b.none
    6ba0:	mov	x0, x8
    6ba4:	bl	5650 <_ZdlPv@plt>
    6ba8:	b	6bb0 <gcc_c_fe_context@@Base+0x894>
    6bac:	mov	x20, x0
    6bb0:	mov	x0, x19
    6bb4:	bl	5650 <_ZdlPv@plt>
    6bb8:	mov	x0, x20
    6bbc:	bl	58d0 <_Unwind_Resume@plt>
    6bc0:	sub	sp, sp, #0x30
    6bc4:	stp	x29, x30, [sp, #16]
    6bc8:	stp	x20, x19, [sp, #32]
    6bcc:	add	x29, sp, #0x10
    6bd0:	mov	x19, x0
    6bd4:	str	xzr, [sp]
    6bd8:	mov	w1, #0x2                   	// #2
    6bdc:	bl	d0a8 <gcc_cp_fe_context@@Base+0x3dac>
    6be0:	cbz	w0, 6c44 <gcc_c_fe_context@@Base+0x928>
    6be4:	add	x1, sp, #0x8
    6be8:	mov	x0, x19
    6bec:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    6bf0:	cbz	w0, 6c44 <gcc_c_fe_context@@Base+0x928>
    6bf4:	ldr	w20, [sp, #8]
    6bf8:	mov	x1, sp
    6bfc:	mov	x0, x19
    6c00:	bl	d1dc <gcc_cp_fe_context@@Base+0x3ee0>
    6c04:	cbz	w0, 6c44 <gcc_c_fe_context@@Base+0x928>
    6c08:	ldr	x1, [x19, #24]
    6c0c:	ldr	x3, [sp]
    6c10:	ldr	x0, [x1, #40]
    6c14:	ldr	x8, [x1, #24]
    6c18:	mov	w2, w20
    6c1c:	blr	x8
    6c20:	mov	w1, #0x52                  	// #82
    6c24:	mov	x0, x19
    6c28:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    6c2c:	cbz	w0, 6c44 <gcc_c_fe_context@@Base+0x928>
    6c30:	mov	w1, #0x1                   	// #1
    6c34:	mov	x0, x19
    6c38:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    6c3c:	mov	w19, w0
    6c40:	b	6c48 <gcc_c_fe_context@@Base+0x92c>
    6c44:	mov	w19, wzr
    6c48:	ldr	x0, [sp]
    6c4c:	cbz	x0, 6c54 <gcc_c_fe_context@@Base+0x938>
    6c50:	bl	5730 <_ZdaPv@plt>
    6c54:	mov	w0, w19
    6c58:	ldp	x20, x19, [sp, #32]
    6c5c:	ldp	x29, x30, [sp, #16]
    6c60:	add	sp, sp, #0x30
    6c64:	ret
    6c68:	ldr	x8, [sp]
    6c6c:	mov	x19, x0
    6c70:	cbz	x8, 6c7c <gcc_c_fe_context@@Base+0x960>
    6c74:	mov	x0, x8
    6c78:	bl	5730 <_ZdaPv@plt>
    6c7c:	mov	x0, x19
    6c80:	bl	58d0 <_Unwind_Resume@plt>
    6c84:	sub	sp, sp, #0x30
    6c88:	stp	x29, x30, [sp, #16]
    6c8c:	stp	x20, x19, [sp, #32]
    6c90:	add	x29, sp, #0x10
    6c94:	mov	x19, x0
    6c98:	str	xzr, [sp, #8]
    6c9c:	mov	w1, #0x1                   	// #1
    6ca0:	bl	d0a8 <gcc_cp_fe_context@@Base+0x3dac>
    6ca4:	cbz	w0, 6cf0 <gcc_c_fe_context@@Base+0x9d4>
    6ca8:	add	x1, sp, #0x8
    6cac:	mov	x0, x19
    6cb0:	bl	d1dc <gcc_cp_fe_context@@Base+0x3ee0>
    6cb4:	cbz	w0, 6cf0 <gcc_c_fe_context@@Base+0x9d4>
    6cb8:	ldr	x1, [x19, #24]
    6cbc:	ldr	x2, [sp, #8]
    6cc0:	ldp	x8, x0, [x1, #32]
    6cc4:	blr	x8
    6cc8:	mov	x20, x0
    6ccc:	mov	w1, #0x52                  	// #82
    6cd0:	mov	x0, x19
    6cd4:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    6cd8:	cbz	w0, 6cf0 <gcc_c_fe_context@@Base+0x9d4>
    6cdc:	mov	x0, x19
    6ce0:	mov	x1, x20
    6ce4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    6ce8:	mov	w19, w0
    6cec:	b	6cf4 <gcc_c_fe_context@@Base+0x9d8>
    6cf0:	mov	w19, wzr
    6cf4:	ldr	x0, [sp, #8]
    6cf8:	cbz	x0, 6d00 <gcc_c_fe_context@@Base+0x9e4>
    6cfc:	bl	5730 <_ZdaPv@plt>
    6d00:	mov	w0, w19
    6d04:	ldp	x20, x19, [sp, #32]
    6d08:	ldp	x29, x30, [sp, #16]
    6d0c:	add	sp, sp, #0x30
    6d10:	ret
    6d14:	ldr	x8, [sp, #8]
    6d18:	mov	x19, x0
    6d1c:	cbz	x8, 6d28 <gcc_c_fe_context@@Base+0xa0c>
    6d20:	mov	x0, x8
    6d24:	bl	5730 <_ZdaPv@plt>
    6d28:	mov	x0, x19
    6d2c:	bl	58d0 <_Unwind_Resume@plt>
    6d30:	stp	x1, x2, [x0, #24]
    6d34:	str	x3, [x0, #40]
    6d38:	ret

0000000000006d3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base>:
    6d3c:	stp	x29, x30, [sp, #-48]!
    6d40:	str	x21, [sp, #16]
    6d44:	stp	x20, x19, [sp, #32]
    6d48:	mov	x29, sp
    6d4c:	ldp	x19, x21, [x0]
    6d50:	cmp	x19, x21
    6d54:	b.eq	6d7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x40>  // b.none
    6d58:	mov	x20, x0
    6d5c:	ldr	x0, [x19], #16
    6d60:	cmp	x0, x19
    6d64:	b.eq	6d6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x30>  // b.none
    6d68:	bl	5650 <_ZdlPv@plt>
    6d6c:	add	x19, x19, #0x10
    6d70:	cmp	x19, x21
    6d74:	b.ne	6d5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x20>  // b.any
    6d78:	ldr	x19, [x20]
    6d7c:	cbz	x19, 6d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x58>
    6d80:	mov	x0, x19
    6d84:	ldp	x20, x19, [sp, #32]
    6d88:	ldr	x21, [sp, #16]
    6d8c:	ldp	x29, x30, [sp], #48
    6d90:	b	5650 <_ZdlPv@plt>
    6d94:	ldp	x20, x19, [sp, #32]
    6d98:	ldr	x21, [sp, #16]
    6d9c:	ldp	x29, x30, [sp], #48
    6da0:	ret
    6da4:	ret
    6da8:	b	5650 <_ZdlPv@plt>
    6dac:	mov	x8, x0
    6db0:	ldr	x0, [x0, #16]
    6db4:	adrp	x9, 28000 <xexit@@Base+0x14018>
    6db8:	add	x10, x8, #0x20
    6dbc:	add	x9, x9, #0x580
    6dc0:	cmp	x0, x10
    6dc4:	str	x9, [x8]
    6dc8:	b.eq	6dd0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x94>  // b.none
    6dcc:	b	5650 <_ZdlPv@plt>
    6dd0:	ret
    6dd4:	stp	x29, x30, [sp, #-32]!
    6dd8:	str	x19, [sp, #16]
    6ddc:	mov	x29, sp
    6de0:	mov	x19, x0
    6de4:	ldr	x0, [x0, #16]
    6de8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6dec:	add	x9, x19, #0x20
    6df0:	add	x8, x8, #0x580
    6df4:	cmp	x0, x9
    6df8:	str	x8, [x19]
    6dfc:	b.eq	6e04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0xc8>  // b.none
    6e00:	bl	5650 <_ZdlPv@plt>
    6e04:	mov	x0, x19
    6e08:	ldr	x19, [sp, #16]
    6e0c:	ldp	x29, x30, [sp], #32
    6e10:	b	5650 <_ZdlPv@plt>
    6e14:	mov	x8, x0
    6e18:	ldr	x0, [x0, #16]
    6e1c:	adrp	x9, 28000 <xexit@@Base+0x14018>
    6e20:	add	x10, x8, #0x20
    6e24:	add	x9, x9, #0x5c0
    6e28:	cmp	x0, x10
    6e2c:	str	x9, [x8]
    6e30:	b.eq	6e38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0xfc>  // b.none
    6e34:	b	5650 <_ZdlPv@plt>
    6e38:	ret
    6e3c:	stp	x29, x30, [sp, #-32]!
    6e40:	str	x19, [sp, #16]
    6e44:	mov	x29, sp
    6e48:	mov	x19, x0
    6e4c:	ldr	x0, [x0, #16]
    6e50:	adrp	x8, 28000 <xexit@@Base+0x14018>
    6e54:	add	x9, x19, #0x20
    6e58:	add	x8, x8, #0x5c0
    6e5c:	cmp	x0, x9
    6e60:	str	x8, [x19]
    6e64:	b.eq	6e6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x130>  // b.none
    6e68:	bl	5650 <_ZdlPv@plt>
    6e6c:	mov	x0, x19
    6e70:	ldr	x19, [sp, #16]
    6e74:	ldp	x29, x30, [sp], #32
    6e78:	b	5650 <_ZdlPv@plt>
    6e7c:	str	x30, [sp, #-16]!
    6e80:	bl	54d0 <__cxa_begin_catch@plt>
    6e84:	bl	5410 <_ZSt9terminatev@plt>

0000000000006e88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base>:
    6e88:	stp	x29, x30, [sp, #-32]!
    6e8c:	str	x19, [sp, #16]
    6e90:	mov	x29, sp
    6e94:	ldp	x8, x9, [x0, #8]
    6e98:	mov	x19, x0
    6e9c:	mov	x2, x1
    6ea0:	cmp	x8, x9
    6ea4:	b.eq	6ed8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x50>  // b.none
    6ea8:	add	x9, x8, #0x10
    6eac:	str	x9, [x8]
    6eb0:	ldp	x1, x9, [x2]
    6eb4:	mov	x0, x8
    6eb8:	add	x2, x1, x9
    6ebc:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6ec0:	ldr	x8, [x19, #8]
    6ec4:	add	x8, x8, #0x20
    6ec8:	str	x8, [x19, #8]
    6ecc:	ldr	x19, [sp, #16]
    6ed0:	ldp	x29, x30, [sp], #32
    6ed4:	ret
    6ed8:	mov	x0, x19
    6edc:	ldr	x19, [sp, #16]
    6ee0:	mov	x1, x8
    6ee4:	ldp	x29, x30, [sp], #32
    6ee8:	b	56e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>

0000000000006eec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base>:
    6eec:	ldp	x8, x9, [x0, #8]
    6ef0:	mov	x2, x1
    6ef4:	cmp	x8, x9
    6ef8:	b.eq	6f24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x38>  // b.none
    6efc:	add	x10, x8, #0x10
    6f00:	str	x10, [x8]
    6f04:	mov	x9, x2
    6f08:	ldr	x11, [x9], #16
    6f0c:	cmp	x11, x9
    6f10:	b.eq	6f2c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x40>  // b.none
    6f14:	str	x11, [x8]
    6f18:	ldr	x10, [x2, #16]
    6f1c:	str	x10, [x8, #16]
    6f20:	b	6f34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x48>
    6f24:	mov	x1, x8
    6f28:	b	57f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6f2c:	ldr	q0, [x11]
    6f30:	str	q0, [x10]
    6f34:	ldr	x10, [x2, #8]
    6f38:	str	x10, [x8, #8]
    6f3c:	stp	x9, xzr, [x2]
    6f40:	strb	wzr, [x2, #16]
    6f44:	ldr	x8, [x0, #8]
    6f48:	add	x8, x8, #0x20
    6f4c:	str	x8, [x0, #8]
    6f50:	ret

0000000000006f54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    6f54:	stp	x29, x30, [sp, #-96]!
    6f58:	str	x27, [sp, #16]
    6f5c:	stp	x26, x25, [sp, #32]
    6f60:	stp	x24, x23, [sp, #48]
    6f64:	stp	x22, x21, [sp, #64]
    6f68:	stp	x20, x19, [sp, #80]
    6f6c:	mov	x29, sp
    6f70:	mov	x24, x2
    6f74:	adrp	x2, 14000 <xexit@@Base+0x18>
    6f78:	mov	x23, x1
    6f7c:	add	x2, x2, #0x1b8
    6f80:	mov	w1, #0x1                   	// #1
    6f84:	mov	x19, x0
    6f88:	bl	5610 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@plt>
    6f8c:	ldp	x21, x25, [x19]
    6f90:	mov	x20, x0
    6f94:	mov	x0, x19
    6f98:	mov	x1, x20
    6f9c:	sub	x27, x23, x21
    6fa0:	asr	x26, x27, #5
    6fa4:	bl	56d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@plt>
    6fa8:	add	x10, x0, x27
    6fac:	add	x9, x10, #0x10
    6fb0:	str	x9, [x10]
    6fb4:	mov	x8, x24
    6fb8:	ldr	x11, [x8], #16
    6fbc:	mov	x22, x0
    6fc0:	cmp	x11, x8
    6fc4:	b.eq	6fdc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x88>  // b.none
    6fc8:	str	x11, [x10]
    6fcc:	ldr	x9, [x24, #16]
    6fd0:	add	x10, x22, x26, lsl #5
    6fd4:	str	x9, [x10, #16]
    6fd8:	b	6fe4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x90>
    6fdc:	ldr	q0, [x11]
    6fe0:	str	q0, [x9]
    6fe4:	ldr	x9, [x24, #8]
    6fe8:	add	x10, x22, x26, lsl #5
    6fec:	cmp	x21, x23
    6ff0:	str	x9, [x10, #8]
    6ff4:	stp	x8, xzr, [x24]
    6ff8:	mov	x8, x22
    6ffc:	strb	wzr, [x24, #16]
    7000:	b.eq	7058 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x104>  // b.none
    7004:	add	x8, x22, #0x10
    7008:	add	x9, x21, #0x10
    700c:	stur	x8, [x8, #-16]
    7010:	ldur	x10, [x9, #-16]
    7014:	cmp	x10, x9
    7018:	b.eq	702c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd8>  // b.none
    701c:	stur	x10, [x8, #-16]
    7020:	ldr	x10, [x9]
    7024:	str	x10, [x8]
    7028:	b	7034 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe0>
    702c:	ldr	q0, [x10]
    7030:	str	q0, [x8]
    7034:	ldur	x10, [x9, #-8]
    7038:	add	x11, x9, #0x10
    703c:	cmp	x11, x23
    7040:	stur	x10, [x8, #-8]
    7044:	stp	x9, xzr, [x9, #-16]
    7048:	strb	wzr, [x9], #32
    704c:	add	x8, x8, #0x20
    7050:	b.ne	700c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb8>  // b.any
    7054:	sub	x8, x8, #0x10
    7058:	cmp	x25, x23
    705c:	b.eq	70c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x170>  // b.none
    7060:	mov	x9, xzr
    7064:	add	x11, x8, x9
    7068:	add	x10, x11, #0x30
    706c:	add	x12, x23, x9
    7070:	str	x10, [x11, #32]
    7074:	mov	x10, x12
    7078:	ldr	x13, [x10], #16
    707c:	cmp	x13, x10
    7080:	b.eq	7094 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x140>  // b.none
    7084:	str	x13, [x11, #32]
    7088:	ldr	x12, [x12, #16]
    708c:	str	x12, [x11, #48]
    7090:	b	709c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x148>
    7094:	ldr	q0, [x13]
    7098:	str	q0, [x11, #48]
    709c:	ldur	x11, [x10, #-8]
    70a0:	add	x13, x10, #0x10
    70a4:	add	x12, x8, x9
    70a8:	cmp	x13, x25
    70ac:	add	x9, x9, #0x20
    70b0:	str	x11, [x12, #40]
    70b4:	stp	x10, xzr, [x10, #-16]
    70b8:	strb	wzr, [x10]
    70bc:	b.ne	7064 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x110>  // b.any
    70c0:	add	x8, x8, x9
    70c4:	add	x23, x8, #0x20
    70c8:	cbz	x21, 70d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x180>
    70cc:	mov	x0, x21
    70d0:	bl	5650 <_ZdlPv@plt>
    70d4:	add	x8, x22, x20, lsl #5
    70d8:	stp	x22, x23, [x19]
    70dc:	str	x8, [x19, #16]
    70e0:	ldp	x20, x19, [sp, #80]
    70e4:	ldp	x22, x21, [sp, #64]
    70e8:	ldp	x24, x23, [sp, #48]
    70ec:	ldp	x26, x25, [sp, #32]
    70f0:	ldr	x27, [sp, #16]
    70f4:	ldp	x29, x30, [sp], #96
    70f8:	ret

00000000000070fc <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@@Base>:
    70fc:	stp	x29, x30, [sp, #-16]!
    7100:	mov	x29, sp
    7104:	ldp	x9, x8, [x0]
    7108:	sub	x9, x8, x9
    710c:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
    7110:	sub	x10, x8, x9, asr #5
    7114:	cmp	x10, x1
    7118:	b.cc	7150 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@@Base+0x54>  // b.lo, b.ul, b.last
    711c:	asr	x9, x9, #5
    7120:	cmp	x9, x1
    7124:	csel	x10, x1, x9, cc  // cc = lo, ul, last
    7128:	adds	x9, x10, x9
    712c:	lsr	x11, x9, #58
    7130:	cset	w10, cs  // cs = hs, nlast
    7134:	cmp	x11, #0x0
    7138:	cset	w11, ne  // ne = any
    713c:	orr	w10, w10, w11
    7140:	cmp	w10, #0x0
    7144:	csel	x0, x8, x9, ne  // ne = any
    7148:	ldp	x29, x30, [sp], #16
    714c:	ret
    7150:	mov	x0, x2
    7154:	bl	5500 <_ZSt20__throw_length_errorPKc@plt>

0000000000007158 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@@Base>:
    7158:	cbz	x1, 716c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@@Base+0x14>
    715c:	lsr	x8, x1, #58
    7160:	cbnz	x8, 7174 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@@Base+0x1c>
    7164:	lsl	x0, x1, #5
    7168:	b	5660 <_Znwm@plt>
    716c:	mov	x0, xzr
    7170:	ret
    7174:	stp	x29, x30, [sp, #-16]!
    7178:	mov	x29, sp
    717c:	bl	5480 <_ZSt17__throw_bad_allocv@plt>

0000000000007180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base>:
    7180:	stp	x29, x30, [sp, #-48]!
    7184:	str	x21, [sp, #16]
    7188:	stp	x20, x19, [sp, #32]
    718c:	mov	x29, sp
    7190:	mov	x20, x1
    7194:	mov	x19, x0
    7198:	cbnz	x1, 71a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x24>
    719c:	cmp	x20, x2
    71a0:	b.ne	7220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0xa0>  // b.any
    71a4:	sub	x21, x2, x20
    71a8:	cmp	x21, #0xf
    71ac:	str	x21, [x29, #24]
    71b0:	b.ls	71d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x58>  // b.plast
    71b4:	add	x1, x29, #0x18
    71b8:	mov	x0, x19
    71bc:	mov	x2, xzr
    71c0:	bl	58e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    71c4:	str	x0, [x19]
    71c8:	ldr	x8, [x29, #24]
    71cc:	str	x8, [x19, #16]
    71d0:	cbnz	x21, 71e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x60>
    71d4:	b	7200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x80>
    71d8:	ldr	x0, [x19]
    71dc:	cbz	x21, 7200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x80>
    71e0:	cmp	x21, #0x1
    71e4:	b.ne	71f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x74>  // b.any
    71e8:	ldrb	w8, [x20]
    71ec:	strb	w8, [x0]
    71f0:	b	7200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x80>
    71f4:	mov	x1, x20
    71f8:	mov	x2, x21
    71fc:	bl	5390 <memcpy@plt>
    7200:	ldr	x8, [x29, #24]
    7204:	ldr	x9, [x19]
    7208:	ldr	x21, [sp, #16]
    720c:	str	x8, [x19, #8]
    7210:	strb	wzr, [x9, x8]
    7214:	ldp	x20, x19, [sp, #32]
    7218:	ldp	x29, x30, [sp], #48
    721c:	ret
    7220:	adrp	x0, 14000 <xexit@@Base+0x18>
    7224:	add	x0, x0, #0x2d
    7228:	bl	55c0 <_ZSt19__throw_logic_errorPKc@plt>

000000000000722c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    722c:	stp	x29, x30, [sp, #-96]!
    7230:	str	x27, [sp, #16]
    7234:	stp	x26, x25, [sp, #32]
    7238:	stp	x24, x23, [sp, #48]
    723c:	stp	x22, x21, [sp, #64]
    7240:	stp	x20, x19, [sp, #80]
    7244:	mov	x29, sp
    7248:	mov	x25, x2
    724c:	adrp	x2, 14000 <xexit@@Base+0x18>
    7250:	mov	x23, x1
    7254:	add	x2, x2, #0x1b8
    7258:	mov	w1, #0x1                   	// #1
    725c:	mov	x19, x0
    7260:	bl	5610 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@plt>
    7264:	ldp	x22, x26, [x19]
    7268:	mov	x21, x0
    726c:	mov	x0, x19
    7270:	mov	x1, x21
    7274:	sub	x24, x23, x22
    7278:	bl	56d0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@plt>
    727c:	add	x24, x0, x24
    7280:	add	x27, x24, #0x10
    7284:	str	x27, [x24]
    7288:	ldp	x1, x8, [x25]
    728c:	mov	x20, x0
    7290:	add	x2, x1, x8
    7294:	mov	x0, x24
    7298:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    729c:	cmp	x22, x23
    72a0:	mov	x8, x20
    72a4:	b.eq	72fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd0>  // b.none
    72a8:	add	x8, x20, #0x10
    72ac:	add	x9, x22, #0x10
    72b0:	stur	x8, [x8, #-16]
    72b4:	ldur	x10, [x9, #-16]
    72b8:	cmp	x10, x9
    72bc:	b.eq	72d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa4>  // b.none
    72c0:	stur	x10, [x8, #-16]
    72c4:	ldr	x10, [x9]
    72c8:	str	x10, [x8]
    72cc:	b	72d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac>
    72d0:	ldr	q0, [x10]
    72d4:	str	q0, [x8]
    72d8:	ldur	x10, [x9, #-8]
    72dc:	add	x11, x9, #0x10
    72e0:	cmp	x11, x23
    72e4:	stur	x10, [x8, #-8]
    72e8:	stp	x9, xzr, [x9, #-16]
    72ec:	strb	wzr, [x9], #32
    72f0:	add	x8, x8, #0x20
    72f4:	b.ne	72b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x84>  // b.any
    72f8:	sub	x8, x8, #0x10
    72fc:	cmp	x26, x23
    7300:	b.eq	7368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13c>  // b.none
    7304:	mov	x9, xzr
    7308:	add	x11, x8, x9
    730c:	add	x10, x11, #0x30
    7310:	add	x12, x23, x9
    7314:	str	x10, [x11, #32]
    7318:	mov	x10, x12
    731c:	ldr	x13, [x10], #16
    7320:	cmp	x13, x10
    7324:	b.eq	7338 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10c>  // b.none
    7328:	str	x13, [x11, #32]
    732c:	ldr	x12, [x12, #16]
    7330:	str	x12, [x11, #48]
    7334:	b	7340 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x114>
    7338:	ldr	q0, [x13]
    733c:	str	q0, [x11, #48]
    7340:	ldur	x11, [x10, #-8]
    7344:	add	x13, x10, #0x10
    7348:	add	x12, x8, x9
    734c:	cmp	x13, x26
    7350:	add	x9, x9, #0x20
    7354:	str	x11, [x12, #40]
    7358:	stp	x10, xzr, [x10, #-16]
    735c:	strb	wzr, [x10]
    7360:	b.ne	7308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdc>  // b.any
    7364:	add	x8, x8, x9
    7368:	add	x23, x8, #0x20
    736c:	cbz	x22, 7378 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c>
    7370:	mov	x0, x22
    7374:	bl	5650 <_ZdlPv@plt>
    7378:	add	x8, x20, x21, lsl #5
    737c:	stp	x20, x23, [x19]
    7380:	str	x8, [x19, #16]
    7384:	ldp	x20, x19, [sp, #80]
    7388:	ldp	x22, x21, [sp, #64]
    738c:	ldp	x24, x23, [sp, #48]
    7390:	ldp	x26, x25, [sp, #32]
    7394:	ldr	x27, [sp, #16]
    7398:	ldp	x29, x30, [sp], #96
    739c:	ret
    73a0:	bl	54d0 <__cxa_begin_catch@plt>
    73a4:	cbnz	x20, 73b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18c>
    73a8:	ldr	x0, [x24]
    73ac:	cmp	x0, x27
    73b0:	b.ne	73bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x190>  // b.any
    73b4:	b	73c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x194>
    73b8:	mov	x0, x20
    73bc:	bl	5650 <_ZdlPv@plt>
    73c0:	bl	57b0 <__cxa_rethrow@plt>
    73c4:	mov	x19, x0
    73c8:	bl	5840 <__cxa_end_catch@plt>
    73cc:	mov	x0, x19
    73d0:	bl	58d0 <_Unwind_Resume@plt>
    73d4:	bl	6e7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x140>
    73d8:	stp	x29, x30, [sp, #-32]!
    73dc:	str	x19, [sp, #16]
    73e0:	mov	x29, sp
    73e4:	mov	x19, x0
    73e8:	bl	cd98 <gcc_cp_fe_context@@Base+0x3a9c>
    73ec:	mov	x0, x19
    73f0:	ldr	x19, [sp, #16]
    73f4:	ldp	x29, x30, [sp], #32
    73f8:	b	5650 <_ZdlPv@plt>
    73fc:	ldr	x8, [x0, #24]
    7400:	ldp	x2, x0, [x8, #48]
    7404:	br	x2
    7408:	sub	sp, sp, #0x30
    740c:	stp	x29, x30, [sp, #32]
    7410:	add	x29, sp, #0x20
    7414:	adrp	x10, 28000 <xexit@@Base+0x14018>
    7418:	ldr	x0, [x0, #16]
    741c:	ldr	x10, [x10, #3312]
    7420:	mov	x8, x5
    7424:	mov	x9, x4
    7428:	mov	x5, x3
    742c:	ldr	x10, [x10]
    7430:	mov	w4, w2
    7434:	mov	x3, x1
    7438:	str	w7, [sp, #8]
    743c:	sub	x2, x29, #0x8
    7440:	str	x6, [sp]
    7444:	mov	x1, x10
    7448:	mov	x6, x9
    744c:	mov	x7, x8
    7450:	bl	7b4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x920>
    7454:	ldur	x8, [x29, #-8]
    7458:	ldp	x29, x30, [sp, #32]
    745c:	cmp	w0, #0x0
    7460:	csel	x0, xzr, x8, eq  // eq = none
    7464:	add	sp, sp, #0x30
    7468:	ret
    746c:	sub	sp, sp, #0x20
    7470:	stp	x29, x30, [sp, #16]
    7474:	add	x29, sp, #0x10
    7478:	adrp	x8, 28000 <xexit@@Base+0x14018>
    747c:	ldr	x0, [x0, #16]
    7480:	ldr	x8, [x8, #4048]
    7484:	mov	w4, w2
    7488:	mov	x3, x1
    748c:	sub	x2, x29, #0x4
    7490:	ldr	x8, [x8]
    7494:	mov	x1, x8
    7498:	bl	7c70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa44>
    749c:	ldur	w8, [x29, #-4]
    74a0:	ldp	x29, x30, [sp, #16]
    74a4:	cmp	w0, #0x0
    74a8:	csel	w0, wzr, w8, eq  // eq = none
    74ac:	add	sp, sp, #0x20
    74b0:	ret
    74b4:	sub	sp, sp, #0x20
    74b8:	stp	x29, x30, [sp, #16]
    74bc:	add	x29, sp, #0x10
    74c0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    74c4:	ldr	x0, [x0, #16]
    74c8:	ldr	x8, [x8, #3632]
    74cc:	mov	w6, w4
    74d0:	mov	x5, x3
    74d4:	mov	x4, x2
    74d8:	ldr	x8, [x8]
    74dc:	mov	x3, x1
    74e0:	sub	x2, x29, #0x4
    74e4:	mov	x1, x8
    74e8:	bl	7d24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xaf8>
    74ec:	ldur	w8, [x29, #-4]
    74f0:	ldp	x29, x30, [sp, #16]
    74f4:	cmp	w0, #0x0
    74f8:	csel	w0, wzr, w8, eq  // eq = none
    74fc:	add	sp, sp, #0x20
    7500:	ret
    7504:	sub	sp, sp, #0x20
    7508:	stp	x29, x30, [sp, #16]
    750c:	add	x29, sp, #0x10
    7510:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7514:	ldr	x0, [x0, #16]
    7518:	ldr	x8, [x8, #3536]
    751c:	mov	x3, x1
    7520:	add	x2, sp, #0x8
    7524:	ldr	x8, [x8]
    7528:	mov	x1, x8
    752c:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    7530:	ldr	x8, [sp, #8]
    7534:	ldp	x29, x30, [sp, #16]
    7538:	cmp	w0, #0x0
    753c:	csel	x0, xzr, x8, eq  // eq = none
    7540:	add	sp, sp, #0x20
    7544:	ret
    7548:	sub	sp, sp, #0x20
    754c:	stp	x29, x30, [sp, #16]
    7550:	add	x29, sp, #0x10
    7554:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7558:	ldr	x0, [x0, #16]
    755c:	ldr	x8, [x8, #3928]
    7560:	add	x2, sp, #0x8
    7564:	ldr	x1, [x8]
    7568:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    756c:	ldr	x8, [sp, #8]
    7570:	ldp	x29, x30, [sp, #16]
    7574:	cmp	w0, #0x0
    7578:	csel	x0, xzr, x8, eq  // eq = none
    757c:	add	sp, sp, #0x20
    7580:	ret
    7584:	sub	sp, sp, #0x20
    7588:	stp	x29, x30, [sp, #16]
    758c:	add	x29, sp, #0x10
    7590:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7594:	ldr	x0, [x0, #16]
    7598:	ldr	x8, [x8, #3232]
    759c:	add	x2, sp, #0x8
    75a0:	ldr	x1, [x8]
    75a4:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    75a8:	ldr	x8, [sp, #8]
    75ac:	ldp	x29, x30, [sp, #16]
    75b0:	cmp	w0, #0x0
    75b4:	csel	x0, xzr, x8, eq  // eq = none
    75b8:	add	sp, sp, #0x20
    75bc:	ret
    75c0:	sub	sp, sp, #0x20
    75c4:	stp	x29, x30, [sp, #16]
    75c8:	add	x29, sp, #0x10
    75cc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    75d0:	ldr	x0, [x0, #16]
    75d4:	ldr	x8, [x8, #3392]
    75d8:	mov	x7, x5
    75dc:	mov	x6, x4
    75e0:	mov	x5, x3
    75e4:	ldr	x8, [x8]
    75e8:	mov	x4, x2
    75ec:	mov	x3, x1
    75f0:	sub	x2, x29, #0x4
    75f4:	mov	x1, x8
    75f8:	bl	7f2c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd00>
    75fc:	ldur	w8, [x29, #-4]
    7600:	ldp	x29, x30, [sp, #16]
    7604:	cmp	w0, #0x0
    7608:	csel	w0, wzr, w8, eq  // eq = none
    760c:	add	sp, sp, #0x20
    7610:	ret
    7614:	sub	sp, sp, #0x20
    7618:	stp	x29, x30, [sp, #16]
    761c:	add	x29, sp, #0x10
    7620:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7624:	ldr	x0, [x0, #16]
    7628:	ldr	x8, [x8, #4056]
    762c:	mov	x4, x2
    7630:	mov	x3, x1
    7634:	sub	x2, x29, #0x4
    7638:	ldr	x8, [x8]
    763c:	mov	x1, x8
    7640:	bl	802c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe00>
    7644:	ldur	w8, [x29, #-4]
    7648:	ldp	x29, x30, [sp, #16]
    764c:	cmp	w0, #0x0
    7650:	csel	w0, wzr, w8, eq  // eq = none
    7654:	add	sp, sp, #0x20
    7658:	ret
    765c:	sub	sp, sp, #0x20
    7660:	stp	x29, x30, [sp, #16]
    7664:	add	x29, sp, #0x10
    7668:	adrp	x8, 28000 <xexit@@Base+0x14018>
    766c:	ldr	x0, [x0, #16]
    7670:	ldr	x8, [x8, #3944]
    7674:	mov	x3, x1
    7678:	add	x2, sp, #0x8
    767c:	ldr	x8, [x8]
    7680:	mov	x1, x8
    7684:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    7688:	ldr	x8, [sp, #8]
    768c:	ldp	x29, x30, [sp, #16]
    7690:	cmp	w0, #0x0
    7694:	csel	x0, xzr, x8, eq  // eq = none
    7698:	add	sp, sp, #0x20
    769c:	ret
    76a0:	sub	sp, sp, #0x20
    76a4:	stp	x29, x30, [sp, #16]
    76a8:	add	x29, sp, #0x10
    76ac:	adrp	x8, 28000 <xexit@@Base+0x14018>
    76b0:	ldr	x0, [x0, #16]
    76b4:	ldr	x8, [x8, #3448]
    76b8:	mov	x5, x3
    76bc:	mov	x4, x2
    76c0:	mov	x3, x1
    76c4:	ldr	x8, [x8]
    76c8:	sub	x2, x29, #0x4
    76cc:	mov	x1, x8
    76d0:	bl	80e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xeb4>
    76d4:	ldur	w8, [x29, #-4]
    76d8:	ldp	x29, x30, [sp, #16]
    76dc:	cmp	w0, #0x0
    76e0:	csel	w0, wzr, w8, eq  // eq = none
    76e4:	add	sp, sp, #0x20
    76e8:	ret
    76ec:	sub	sp, sp, #0x20
    76f0:	stp	x29, x30, [sp, #16]
    76f4:	add	x29, sp, #0x10
    76f8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    76fc:	ldr	x0, [x0, #16]
    7700:	ldr	x8, [x8, #3656]
    7704:	mov	x3, x1
    7708:	sub	x2, x29, #0x4
    770c:	ldr	x8, [x8]
    7710:	mov	x1, x8
    7714:	bl	81b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf84>
    7718:	ldur	w8, [x29, #-4]
    771c:	ldp	x29, x30, [sp, #16]
    7720:	cmp	w0, #0x0
    7724:	csel	w0, wzr, w8, eq  // eq = none
    7728:	add	sp, sp, #0x20
    772c:	ret
    7730:	sub	sp, sp, #0x20
    7734:	stp	x29, x30, [sp, #16]
    7738:	add	x29, sp, #0x10
    773c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7740:	ldr	x0, [x0, #16]
    7744:	ldr	x8, [x8, #3952]
    7748:	mov	w5, w3
    774c:	mov	x4, x2
    7750:	mov	x3, x1
    7754:	ldr	x8, [x8]
    7758:	add	x2, sp, #0x8
    775c:	mov	x1, x8
    7760:	bl	8250 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1024>
    7764:	ldr	x8, [sp, #8]
    7768:	ldp	x29, x30, [sp, #16]
    776c:	cmp	w0, #0x0
    7770:	csel	x0, xzr, x8, eq  // eq = none
    7774:	add	sp, sp, #0x20
    7778:	ret
    777c:	sub	sp, sp, #0x20
    7780:	stp	x29, x30, [sp, #16]
    7784:	add	x29, sp, #0x10
    7788:	adrp	x8, 28000 <xexit@@Base+0x14018>
    778c:	ldr	x0, [x0, #16]
    7790:	ldr	x8, [x8, #3472]
    7794:	mov	x4, x2
    7798:	mov	w3, w1
    779c:	add	x2, sp, #0x8
    77a0:	ldr	x8, [x8]
    77a4:	mov	x1, x8
    77a8:	bl	8320 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10f4>
    77ac:	ldr	x8, [sp, #8]
    77b0:	ldp	x29, x30, [sp, #16]
    77b4:	cmp	w0, #0x0
    77b8:	csel	x0, xzr, x8, eq  // eq = none
    77bc:	add	sp, sp, #0x20
    77c0:	ret
    77c4:	sub	sp, sp, #0x20
    77c8:	stp	x29, x30, [sp, #16]
    77cc:	add	x29, sp, #0x10
    77d0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    77d4:	ldr	x0, [x0, #16]
    77d8:	ldr	x8, [x8, #3528]
    77dc:	mov	x3, x1
    77e0:	add	x2, sp, #0x8
    77e4:	ldr	x8, [x8]
    77e8:	mov	x1, x8
    77ec:	bl	83d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11a8>
    77f0:	ldr	x8, [sp, #8]
    77f4:	ldp	x29, x30, [sp, #16]
    77f8:	cmp	w0, #0x0
    77fc:	csel	x0, xzr, x8, eq  // eq = none
    7800:	add	sp, sp, #0x20
    7804:	ret
    7808:	sub	sp, sp, #0x20
    780c:	stp	x29, x30, [sp, #16]
    7810:	add	x29, sp, #0x10
    7814:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7818:	ldr	x0, [x0, #16]
    781c:	ldr	x8, [x8, #3328]
    7820:	add	x2, sp, #0x8
    7824:	ldr	x1, [x8]
    7828:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    782c:	ldr	x8, [sp, #8]
    7830:	ldp	x29, x30, [sp, #16]
    7834:	cmp	w0, #0x0
    7838:	csel	x0, xzr, x8, eq  // eq = none
    783c:	add	sp, sp, #0x20
    7840:	ret
    7844:	sub	sp, sp, #0x20
    7848:	stp	x29, x30, [sp, #16]
    784c:	add	x29, sp, #0x10
    7850:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7854:	ldr	x0, [x0, #16]
    7858:	ldr	x8, [x8, #3864]
    785c:	add	x2, sp, #0x8
    7860:	ldr	x1, [x8]
    7864:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    7868:	ldr	x8, [sp, #8]
    786c:	ldp	x29, x30, [sp, #16]
    7870:	cmp	w0, #0x0
    7874:	csel	x0, xzr, x8, eq  // eq = none
    7878:	add	sp, sp, #0x20
    787c:	ret
    7880:	sub	sp, sp, #0x20
    7884:	stp	x29, x30, [sp, #16]
    7888:	add	x29, sp, #0x10
    788c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7890:	ldr	x0, [x0, #16]
    7894:	ldr	x8, [x8, #3608]
    7898:	mov	w4, w2
    789c:	mov	x3, x1
    78a0:	add	x2, sp, #0x8
    78a4:	ldr	x8, [x8]
    78a8:	mov	x1, x8
    78ac:	bl	8474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1248>
    78b0:	ldr	x8, [sp, #8]
    78b4:	ldp	x29, x30, [sp, #16]
    78b8:	cmp	w0, #0x0
    78bc:	csel	x0, xzr, x8, eq  // eq = none
    78c0:	add	sp, sp, #0x20
    78c4:	ret
    78c8:	sub	sp, sp, #0x20
    78cc:	stp	x29, x30, [sp, #16]
    78d0:	add	x29, sp, #0x10
    78d4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    78d8:	ldr	x0, [x0, #16]
    78dc:	ldr	x8, [x8, #3216]
    78e0:	mov	x4, x2
    78e4:	mov	x3, x1
    78e8:	add	x2, sp, #0x8
    78ec:	ldr	x8, [x8]
    78f0:	mov	x1, x8
    78f4:	bl	8528 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12fc>
    78f8:	ldr	x8, [sp, #8]
    78fc:	ldp	x29, x30, [sp, #16]
    7900:	cmp	w0, #0x0
    7904:	csel	x0, xzr, x8, eq  // eq = none
    7908:	add	sp, sp, #0x20
    790c:	ret
    7910:	sub	sp, sp, #0x20
    7914:	stp	x29, x30, [sp, #16]
    7918:	add	x29, sp, #0x10
    791c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7920:	ldr	x0, [x0, #16]
    7924:	ldr	x8, [x8, #3680]
    7928:	mov	w4, w2
    792c:	mov	x3, x1
    7930:	add	x2, sp, #0x8
    7934:	ldr	x8, [x8]
    7938:	mov	x1, x8
    793c:	bl	85dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x13b0>
    7940:	ldr	x8, [sp, #8]
    7944:	ldp	x29, x30, [sp, #16]
    7948:	cmp	w0, #0x0
    794c:	csel	x0, xzr, x8, eq  // eq = none
    7950:	add	sp, sp, #0x20
    7954:	ret
    7958:	sub	sp, sp, #0x20
    795c:	stp	x29, x30, [sp, #16]
    7960:	add	x29, sp, #0x10
    7964:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7968:	ldr	x0, [x0, #16]
    796c:	ldr	x8, [x8, #3760]
    7970:	mov	x3, x1
    7974:	add	x2, sp, #0x8
    7978:	ldr	x8, [x8]
    797c:	mov	x1, x8
    7980:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    7984:	ldr	x8, [sp, #8]
    7988:	ldp	x29, x30, [sp, #16]
    798c:	cmp	w0, #0x0
    7990:	csel	x0, xzr, x8, eq  // eq = none
    7994:	add	sp, sp, #0x20
    7998:	ret
    799c:	sub	sp, sp, #0x20
    79a0:	stp	x29, x30, [sp, #16]
    79a4:	add	x29, sp, #0x10
    79a8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    79ac:	ldr	x0, [x0, #16]
    79b0:	ldr	x8, [x8, #3824]
    79b4:	mov	w4, w2
    79b8:	mov	x3, x1
    79bc:	add	x2, sp, #0x8
    79c0:	ldr	x8, [x8]
    79c4:	mov	x1, x8
    79c8:	bl	8474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1248>
    79cc:	ldr	x8, [sp, #8]
    79d0:	ldp	x29, x30, [sp, #16]
    79d4:	cmp	w0, #0x0
    79d8:	csel	x0, xzr, x8, eq  // eq = none
    79dc:	add	sp, sp, #0x20
    79e0:	ret
    79e4:	sub	sp, sp, #0x20
    79e8:	stp	x29, x30, [sp, #16]
    79ec:	add	x29, sp, #0x10
    79f0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    79f4:	ldr	x0, [x0, #16]
    79f8:	ldr	x8, [x8, #3408]
    79fc:	mov	w7, w5
    7a00:	mov	x6, x4
    7a04:	mov	x5, x3
    7a08:	ldr	x8, [x8]
    7a0c:	mov	x4, x2
    7a10:	mov	x3, x1
    7a14:	sub	x2, x29, #0x4
    7a18:	mov	x1, x8
    7a1c:	bl	8690 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1464>
    7a20:	ldur	w8, [x29, #-4]
    7a24:	ldp	x29, x30, [sp, #16]
    7a28:	cmp	w0, #0x0
    7a2c:	csel	w0, wzr, w8, eq  // eq = none
    7a30:	add	sp, sp, #0x20
    7a34:	ret
    7a38:	sub	sp, sp, #0x20
    7a3c:	stp	x29, x30, [sp, #16]
    7a40:	add	x29, sp, #0x10
    7a44:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7a48:	ldr	x0, [x0, #16]
    7a4c:	ldr	x8, [x8, #3224]
    7a50:	mov	x3, x1
    7a54:	add	x2, sp, #0x8
    7a58:	ldr	x8, [x8]
    7a5c:	mov	x1, x8
    7a60:	bl	8790 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1564>
    7a64:	ldr	x8, [sp, #8]
    7a68:	ldp	x29, x30, [sp, #16]
    7a6c:	cmp	w0, #0x0
    7a70:	csel	x0, xzr, x8, eq  // eq = none
    7a74:	add	sp, sp, #0x20
    7a78:	ret
    7a7c:	sub	sp, sp, #0x20
    7a80:	stp	x29, x30, [sp, #16]
    7a84:	add	x29, sp, #0x10
    7a88:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7a8c:	ldr	x0, [x0, #16]
    7a90:	ldr	x8, [x8, #3840]
    7a94:	mov	x5, x3
    7a98:	mov	x4, x2
    7a9c:	mov	w3, w1
    7aa0:	ldr	x8, [x8]
    7aa4:	add	x2, sp, #0x8
    7aa8:	mov	x1, x8
    7aac:	bl	8830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1604>
    7ab0:	ldr	x8, [sp, #8]
    7ab4:	ldp	x29, x30, [sp, #16]
    7ab8:	cmp	w0, #0x0
    7abc:	csel	x0, xzr, x8, eq  // eq = none
    7ac0:	add	sp, sp, #0x20
    7ac4:	ret
    7ac8:	sub	sp, sp, #0x20
    7acc:	stp	x29, x30, [sp, #16]
    7ad0:	add	x29, sp, #0x10
    7ad4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7ad8:	ldr	x0, [x0, #16]
    7adc:	ldr	x8, [x8, #3584]
    7ae0:	add	x2, sp, #0x8
    7ae4:	ldr	x1, [x8]
    7ae8:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    7aec:	ldr	x8, [sp, #8]
    7af0:	ldp	x29, x30, [sp, #16]
    7af4:	cmp	w0, #0x0
    7af8:	csel	x0, xzr, x8, eq  // eq = none
    7afc:	add	sp, sp, #0x20
    7b00:	ret
    7b04:	sub	sp, sp, #0x20
    7b08:	stp	x29, x30, [sp, #16]
    7b0c:	add	x29, sp, #0x10
    7b10:	adrp	x8, 28000 <xexit@@Base+0x14018>
    7b14:	ldr	x0, [x0, #16]
    7b18:	ldr	x8, [x8, #3248]
    7b1c:	mov	x4, x2
    7b20:	mov	x3, x1
    7b24:	add	x2, sp, #0x8
    7b28:	ldr	x8, [x8]
    7b2c:	mov	x1, x8
    7b30:	bl	8900 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16d4>
    7b34:	ldr	x8, [sp, #8]
    7b38:	ldp	x29, x30, [sp, #16]
    7b3c:	cmp	w0, #0x0
    7b40:	csel	x0, xzr, x8, eq  // eq = none
    7b44:	add	sp, sp, #0x20
    7b48:	ret
    7b4c:	sub	sp, sp, #0x60
    7b50:	stp	x29, x30, [sp, #16]
    7b54:	stp	x26, x25, [sp, #32]
    7b58:	stp	x24, x23, [sp, #48]
    7b5c:	stp	x22, x21, [sp, #64]
    7b60:	stp	x20, x19, [sp, #80]
    7b64:	add	x29, sp, #0x10
    7b68:	mov	x26, x1
    7b6c:	mov	w1, #0x51                  	// #81
    7b70:	mov	x21, x7
    7b74:	mov	x22, x6
    7b78:	mov	x23, x5
    7b7c:	mov	w24, w4
    7b80:	mov	x25, x3
    7b84:	mov	x19, x2
    7b88:	mov	x20, x0
    7b8c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    7b90:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7b94:	mov	x0, x20
    7b98:	mov	x1, x26
    7b9c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7ba0:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7ba4:	mov	w1, #0x7                   	// #7
    7ba8:	mov	x0, x20
    7bac:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7bb0:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7bb4:	mov	x0, x20
    7bb8:	mov	x1, x25
    7bbc:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7bc0:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7bc4:	mov	w1, w24
    7bc8:	mov	x0, x20
    7bcc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7bd0:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7bd4:	mov	x0, x20
    7bd8:	mov	x1, x23
    7bdc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7be0:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7be4:	mov	x0, x20
    7be8:	mov	x1, x22
    7bec:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7bf0:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7bf4:	mov	x0, x20
    7bf8:	mov	x1, x21
    7bfc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7c00:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7c04:	ldr	x1, [x29, #80]
    7c08:	mov	x0, x20
    7c0c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7c10:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7c14:	ldr	w8, [x29, #88]
    7c18:	mov	x0, x20
    7c1c:	mov	w1, w8
    7c20:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7c24:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7c28:	mov	w1, #0x1                   	// #1
    7c2c:	mov	x0, x20
    7c30:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    7c34:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7c38:	add	x1, sp, #0x8
    7c3c:	mov	x0, x20
    7c40:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    7c44:	cbz	w0, 7c54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa28>
    7c48:	ldr	x8, [sp, #8]
    7c4c:	mov	w0, #0x1                   	// #1
    7c50:	str	x8, [x19]
    7c54:	ldp	x20, x19, [sp, #80]
    7c58:	ldp	x22, x21, [sp, #64]
    7c5c:	ldp	x24, x23, [sp, #48]
    7c60:	ldp	x26, x25, [sp, #32]
    7c64:	ldp	x29, x30, [sp, #16]
    7c68:	add	sp, sp, #0x60
    7c6c:	ret
    7c70:	stp	x29, x30, [sp, #-64]!
    7c74:	str	x23, [sp, #16]
    7c78:	stp	x22, x21, [sp, #32]
    7c7c:	stp	x20, x19, [sp, #48]
    7c80:	mov	x29, sp
    7c84:	mov	x23, x1
    7c88:	mov	w1, #0x51                  	// #81
    7c8c:	mov	w21, w4
    7c90:	mov	x22, x3
    7c94:	mov	x19, x2
    7c98:	mov	x20, x0
    7c9c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    7ca0:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7ca4:	mov	x0, x20
    7ca8:	mov	x1, x23
    7cac:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7cb0:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7cb4:	mov	w1, #0x2                   	// #2
    7cb8:	mov	x0, x20
    7cbc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7cc0:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7cc4:	mov	x0, x20
    7cc8:	mov	x1, x22
    7ccc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7cd0:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7cd4:	sxtw	x1, w21
    7cd8:	mov	x0, x20
    7cdc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7ce0:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7ce4:	mov	w1, #0x1                   	// #1
    7ce8:	mov	x0, x20
    7cec:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    7cf0:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7cf4:	add	x1, x29, #0x18
    7cf8:	mov	x0, x20
    7cfc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    7d00:	cbz	w0, 7d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xae4>
    7d04:	ldr	x8, [x29, #24]
    7d08:	mov	w0, #0x1                   	// #1
    7d0c:	str	w8, [x19]
    7d10:	ldp	x20, x19, [sp, #48]
    7d14:	ldp	x22, x21, [sp, #32]
    7d18:	ldr	x23, [sp, #16]
    7d1c:	ldp	x29, x30, [sp], #64
    7d20:	ret
    7d24:	stp	x29, x30, [sp, #-80]!
    7d28:	str	x25, [sp, #16]
    7d2c:	stp	x24, x23, [sp, #32]
    7d30:	stp	x22, x21, [sp, #48]
    7d34:	stp	x20, x19, [sp, #64]
    7d38:	mov	x29, sp
    7d3c:	mov	x25, x1
    7d40:	mov	w1, #0x51                  	// #81
    7d44:	mov	w21, w6
    7d48:	mov	x22, x5
    7d4c:	mov	x23, x4
    7d50:	mov	x24, x3
    7d54:	mov	x19, x2
    7d58:	mov	x20, x0
    7d5c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    7d60:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7d64:	mov	x0, x20
    7d68:	mov	x1, x25
    7d6c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7d70:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7d74:	mov	w1, #0x4                   	// #4
    7d78:	mov	x0, x20
    7d7c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7d80:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7d84:	mov	x0, x20
    7d88:	mov	x1, x24
    7d8c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7d90:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7d94:	mov	x0, x20
    7d98:	mov	x1, x23
    7d9c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7da0:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7da4:	mov	x0, x20
    7da8:	mov	x1, x22
    7dac:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7db0:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7db4:	mov	w1, w21
    7db8:	mov	x0, x20
    7dbc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7dc0:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7dc4:	mov	w1, #0x1                   	// #1
    7dc8:	mov	x0, x20
    7dcc:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    7dd0:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7dd4:	add	x1, x29, #0x18
    7dd8:	mov	x0, x20
    7ddc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    7de0:	cbz	w0, 7df0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc4>
    7de4:	ldr	x8, [x29, #24]
    7de8:	mov	w0, #0x1                   	// #1
    7dec:	str	w8, [x19]
    7df0:	ldp	x20, x19, [sp, #64]
    7df4:	ldp	x22, x21, [sp, #48]
    7df8:	ldp	x24, x23, [sp, #32]
    7dfc:	ldr	x25, [sp, #16]
    7e00:	ldp	x29, x30, [sp], #80
    7e04:	ret
    7e08:	sub	sp, sp, #0x40
    7e0c:	stp	x29, x30, [sp, #16]
    7e10:	stp	x22, x21, [sp, #32]
    7e14:	stp	x20, x19, [sp, #48]
    7e18:	add	x29, sp, #0x10
    7e1c:	mov	x22, x1
    7e20:	mov	w1, #0x51                  	// #81
    7e24:	mov	x21, x3
    7e28:	mov	x19, x2
    7e2c:	mov	x20, x0
    7e30:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    7e34:	cbz	w0, 7e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc68>
    7e38:	mov	x0, x20
    7e3c:	mov	x1, x22
    7e40:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7e44:	cbz	w0, 7e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc68>
    7e48:	mov	w1, #0x1                   	// #1
    7e4c:	mov	x0, x20
    7e50:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7e54:	cbz	w0, 7e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc68>
    7e58:	mov	x0, x20
    7e5c:	mov	x1, x21
    7e60:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7e64:	cbz	w0, 7e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc68>
    7e68:	mov	w1, #0x1                   	// #1
    7e6c:	mov	x0, x20
    7e70:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    7e74:	cbz	w0, 7e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc68>
    7e78:	add	x1, sp, #0x8
    7e7c:	mov	x0, x20
    7e80:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    7e84:	cbz	w0, 7e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc68>
    7e88:	ldr	x8, [sp, #8]
    7e8c:	mov	w0, #0x1                   	// #1
    7e90:	str	x8, [x19]
    7e94:	ldp	x20, x19, [sp, #48]
    7e98:	ldp	x22, x21, [sp, #32]
    7e9c:	ldp	x29, x30, [sp, #16]
    7ea0:	add	sp, sp, #0x40
    7ea4:	ret
    7ea8:	stp	x29, x30, [sp, #-48]!
    7eac:	str	x21, [sp, #16]
    7eb0:	stp	x20, x19, [sp, #32]
    7eb4:	mov	x29, sp
    7eb8:	mov	x21, x1
    7ebc:	mov	w1, #0x51                  	// #81
    7ec0:	mov	x19, x2
    7ec4:	mov	x20, x0
    7ec8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    7ecc:	cbz	w0, 7f1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcf0>
    7ed0:	mov	x0, x20
    7ed4:	mov	x1, x21
    7ed8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7edc:	cbz	w0, 7f1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcf0>
    7ee0:	mov	x0, x20
    7ee4:	mov	x1, xzr
    7ee8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7eec:	cbz	w0, 7f1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcf0>
    7ef0:	mov	w1, #0x1                   	// #1
    7ef4:	mov	x0, x20
    7ef8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    7efc:	cbz	w0, 7f1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcf0>
    7f00:	add	x1, x29, #0x18
    7f04:	mov	x0, x20
    7f08:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    7f0c:	cbz	w0, 7f1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcf0>
    7f10:	ldr	x8, [x29, #24]
    7f14:	mov	w0, #0x1                   	// #1
    7f18:	str	x8, [x19]
    7f1c:	ldp	x20, x19, [sp, #32]
    7f20:	ldr	x21, [sp, #16]
    7f24:	ldp	x29, x30, [sp], #48
    7f28:	ret
    7f2c:	sub	sp, sp, #0x60
    7f30:	stp	x29, x30, [sp, #16]
    7f34:	stp	x26, x25, [sp, #32]
    7f38:	stp	x24, x23, [sp, #48]
    7f3c:	stp	x22, x21, [sp, #64]
    7f40:	stp	x20, x19, [sp, #80]
    7f44:	add	x29, sp, #0x10
    7f48:	mov	x26, x1
    7f4c:	mov	w1, #0x51                  	// #81
    7f50:	mov	x21, x7
    7f54:	mov	x22, x6
    7f58:	mov	x23, x5
    7f5c:	mov	x24, x4
    7f60:	mov	x25, x3
    7f64:	mov	x19, x2
    7f68:	mov	x20, x0
    7f6c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    7f70:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7f74:	mov	x0, x20
    7f78:	mov	x1, x26
    7f7c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7f80:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7f84:	mov	w1, #0x5                   	// #5
    7f88:	mov	x0, x20
    7f8c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7f90:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7f94:	mov	x0, x20
    7f98:	mov	x1, x25
    7f9c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7fa0:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7fa4:	mov	x0, x20
    7fa8:	mov	x1, x24
    7fac:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    7fb0:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7fb4:	mov	x0, x20
    7fb8:	mov	x1, x23
    7fbc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7fc0:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7fc4:	mov	x0, x20
    7fc8:	mov	x1, x22
    7fcc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7fd0:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7fd4:	mov	x0, x20
    7fd8:	mov	x1, x21
    7fdc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    7fe0:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7fe4:	mov	w1, #0x1                   	// #1
    7fe8:	mov	x0, x20
    7fec:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    7ff0:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    7ff4:	add	x1, sp, #0x8
    7ff8:	mov	x0, x20
    7ffc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8000:	cbz	w0, 8010 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xde4>
    8004:	ldr	x8, [sp, #8]
    8008:	mov	w0, #0x1                   	// #1
    800c:	str	w8, [x19]
    8010:	ldp	x20, x19, [sp, #80]
    8014:	ldp	x22, x21, [sp, #64]
    8018:	ldp	x24, x23, [sp, #48]
    801c:	ldp	x26, x25, [sp, #32]
    8020:	ldp	x29, x30, [sp, #16]
    8024:	add	sp, sp, #0x60
    8028:	ret
    802c:	stp	x29, x30, [sp, #-64]!
    8030:	str	x23, [sp, #16]
    8034:	stp	x22, x21, [sp, #32]
    8038:	stp	x20, x19, [sp, #48]
    803c:	mov	x29, sp
    8040:	mov	x23, x1
    8044:	mov	w1, #0x51                  	// #81
    8048:	mov	x21, x4
    804c:	mov	x22, x3
    8050:	mov	x19, x2
    8054:	mov	x20, x0
    8058:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    805c:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    8060:	mov	x0, x20
    8064:	mov	x1, x23
    8068:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    806c:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    8070:	mov	w1, #0x2                   	// #2
    8074:	mov	x0, x20
    8078:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    807c:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    8080:	mov	x0, x20
    8084:	mov	x1, x22
    8088:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    808c:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    8090:	mov	x0, x20
    8094:	mov	x1, x21
    8098:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    809c:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    80a0:	mov	w1, #0x1                   	// #1
    80a4:	mov	x0, x20
    80a8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    80ac:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    80b0:	add	x1, x29, #0x18
    80b4:	mov	x0, x20
    80b8:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    80bc:	cbz	w0, 80cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea0>
    80c0:	ldr	x8, [x29, #24]
    80c4:	mov	w0, #0x1                   	// #1
    80c8:	str	w8, [x19]
    80cc:	ldp	x20, x19, [sp, #48]
    80d0:	ldp	x22, x21, [sp, #32]
    80d4:	ldr	x23, [sp, #16]
    80d8:	ldp	x29, x30, [sp], #64
    80dc:	ret
    80e0:	sub	sp, sp, #0x50
    80e4:	stp	x29, x30, [sp, #16]
    80e8:	stp	x24, x23, [sp, #32]
    80ec:	stp	x22, x21, [sp, #48]
    80f0:	stp	x20, x19, [sp, #64]
    80f4:	add	x29, sp, #0x10
    80f8:	mov	x24, x1
    80fc:	mov	w1, #0x51                  	// #81
    8100:	mov	x21, x5
    8104:	mov	x22, x4
    8108:	mov	x23, x3
    810c:	mov	x19, x2
    8110:	mov	x20, x0
    8114:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8118:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    811c:	mov	x0, x20
    8120:	mov	x1, x24
    8124:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8128:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    812c:	mov	w1, #0x3                   	// #3
    8130:	mov	x0, x20
    8134:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8138:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    813c:	mov	x0, x20
    8140:	mov	x1, x23
    8144:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8148:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    814c:	mov	x0, x20
    8150:	mov	x1, x22
    8154:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8158:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    815c:	mov	x0, x20
    8160:	mov	x1, x21
    8164:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8168:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    816c:	mov	w1, #0x1                   	// #1
    8170:	mov	x0, x20
    8174:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    8178:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    817c:	add	x1, sp, #0x8
    8180:	mov	x0, x20
    8184:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8188:	cbz	w0, 8198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf6c>
    818c:	ldr	x8, [sp, #8]
    8190:	mov	w0, #0x1                   	// #1
    8194:	str	w8, [x19]
    8198:	ldp	x20, x19, [sp, #64]
    819c:	ldp	x22, x21, [sp, #48]
    81a0:	ldp	x24, x23, [sp, #32]
    81a4:	ldp	x29, x30, [sp, #16]
    81a8:	add	sp, sp, #0x50
    81ac:	ret
    81b0:	sub	sp, sp, #0x40
    81b4:	stp	x29, x30, [sp, #16]
    81b8:	stp	x22, x21, [sp, #32]
    81bc:	stp	x20, x19, [sp, #48]
    81c0:	add	x29, sp, #0x10
    81c4:	mov	x22, x1
    81c8:	mov	w1, #0x51                  	// #81
    81cc:	mov	x21, x3
    81d0:	mov	x19, x2
    81d4:	mov	x20, x0
    81d8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    81dc:	cbz	w0, 823c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1010>
    81e0:	mov	x0, x20
    81e4:	mov	x1, x22
    81e8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    81ec:	cbz	w0, 823c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1010>
    81f0:	mov	w1, #0x1                   	// #1
    81f4:	mov	x0, x20
    81f8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    81fc:	cbz	w0, 823c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1010>
    8200:	mov	x0, x20
    8204:	mov	x1, x21
    8208:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    820c:	cbz	w0, 823c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1010>
    8210:	mov	w1, #0x1                   	// #1
    8214:	mov	x0, x20
    8218:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    821c:	cbz	w0, 823c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1010>
    8220:	add	x1, sp, #0x8
    8224:	mov	x0, x20
    8228:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    822c:	cbz	w0, 823c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1010>
    8230:	ldr	x8, [sp, #8]
    8234:	mov	w0, #0x1                   	// #1
    8238:	str	w8, [x19]
    823c:	ldp	x20, x19, [sp, #48]
    8240:	ldp	x22, x21, [sp, #32]
    8244:	ldp	x29, x30, [sp, #16]
    8248:	add	sp, sp, #0x40
    824c:	ret
    8250:	sub	sp, sp, #0x50
    8254:	stp	x29, x30, [sp, #16]
    8258:	stp	x24, x23, [sp, #32]
    825c:	stp	x22, x21, [sp, #48]
    8260:	stp	x20, x19, [sp, #64]
    8264:	add	x29, sp, #0x10
    8268:	mov	x24, x1
    826c:	mov	w1, #0x51                  	// #81
    8270:	mov	w21, w5
    8274:	mov	x22, x4
    8278:	mov	x23, x3
    827c:	mov	x19, x2
    8280:	mov	x20, x0
    8284:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8288:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    828c:	mov	x0, x20
    8290:	mov	x1, x24
    8294:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8298:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    829c:	mov	w1, #0x3                   	// #3
    82a0:	mov	x0, x20
    82a4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    82a8:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    82ac:	mov	x0, x20
    82b0:	mov	x1, x23
    82b4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    82b8:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    82bc:	mov	x0, x20
    82c0:	mov	x1, x22
    82c4:	bl	d348 <gcc_cp_fe_context@@Base+0x404c>
    82c8:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    82cc:	sxtw	x1, w21
    82d0:	mov	x0, x20
    82d4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    82d8:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    82dc:	mov	w1, #0x1                   	// #1
    82e0:	mov	x0, x20
    82e4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    82e8:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    82ec:	add	x1, sp, #0x8
    82f0:	mov	x0, x20
    82f4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    82f8:	cbz	w0, 8308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x10dc>
    82fc:	ldr	x8, [sp, #8]
    8300:	mov	w0, #0x1                   	// #1
    8304:	str	x8, [x19]
    8308:	ldp	x20, x19, [sp, #64]
    830c:	ldp	x22, x21, [sp, #48]
    8310:	ldp	x24, x23, [sp, #32]
    8314:	ldp	x29, x30, [sp, #16]
    8318:	add	sp, sp, #0x50
    831c:	ret
    8320:	stp	x29, x30, [sp, #-64]!
    8324:	str	x23, [sp, #16]
    8328:	stp	x22, x21, [sp, #32]
    832c:	stp	x20, x19, [sp, #48]
    8330:	mov	x29, sp
    8334:	mov	x23, x1
    8338:	mov	w1, #0x51                  	// #81
    833c:	mov	x21, x4
    8340:	mov	w22, w3
    8344:	mov	x19, x2
    8348:	mov	x20, x0
    834c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8350:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    8354:	mov	x0, x20
    8358:	mov	x1, x23
    835c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8360:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    8364:	mov	w1, #0x2                   	// #2
    8368:	mov	x0, x20
    836c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8370:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    8374:	sxtw	x1, w22
    8378:	mov	x0, x20
    837c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8380:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    8384:	mov	x0, x20
    8388:	mov	x1, x21
    838c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8390:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    8394:	mov	w1, #0x1                   	// #1
    8398:	mov	x0, x20
    839c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    83a0:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    83a4:	add	x1, x29, #0x18
    83a8:	mov	x0, x20
    83ac:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    83b0:	cbz	w0, 83c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1194>
    83b4:	ldr	x8, [x29, #24]
    83b8:	mov	w0, #0x1                   	// #1
    83bc:	str	x8, [x19]
    83c0:	ldp	x20, x19, [sp, #48]
    83c4:	ldp	x22, x21, [sp, #32]
    83c8:	ldr	x23, [sp, #16]
    83cc:	ldp	x29, x30, [sp], #64
    83d0:	ret
    83d4:	sub	sp, sp, #0x40
    83d8:	stp	x29, x30, [sp, #16]
    83dc:	stp	x22, x21, [sp, #32]
    83e0:	stp	x20, x19, [sp, #48]
    83e4:	add	x29, sp, #0x10
    83e8:	mov	x22, x1
    83ec:	mov	w1, #0x51                  	// #81
    83f0:	mov	x21, x3
    83f4:	mov	x19, x2
    83f8:	mov	x20, x0
    83fc:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8400:	cbz	w0, 8460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1234>
    8404:	mov	x0, x20
    8408:	mov	x1, x22
    840c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8410:	cbz	w0, 8460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1234>
    8414:	mov	w1, #0x1                   	// #1
    8418:	mov	x0, x20
    841c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8420:	cbz	w0, 8460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1234>
    8424:	mov	x0, x20
    8428:	mov	x1, x21
    842c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8430:	cbz	w0, 8460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1234>
    8434:	mov	w1, #0x1                   	// #1
    8438:	mov	x0, x20
    843c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    8440:	cbz	w0, 8460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1234>
    8444:	add	x1, sp, #0x8
    8448:	mov	x0, x20
    844c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8450:	cbz	w0, 8460 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1234>
    8454:	ldr	x8, [sp, #8]
    8458:	mov	w0, #0x1                   	// #1
    845c:	str	x8, [x19]
    8460:	ldp	x20, x19, [sp, #48]
    8464:	ldp	x22, x21, [sp, #32]
    8468:	ldp	x29, x30, [sp, #16]
    846c:	add	sp, sp, #0x40
    8470:	ret
    8474:	stp	x29, x30, [sp, #-64]!
    8478:	str	x23, [sp, #16]
    847c:	stp	x22, x21, [sp, #32]
    8480:	stp	x20, x19, [sp, #48]
    8484:	mov	x29, sp
    8488:	mov	x23, x1
    848c:	mov	w1, #0x51                  	// #81
    8490:	mov	w21, w4
    8494:	mov	x22, x3
    8498:	mov	x19, x2
    849c:	mov	x20, x0
    84a0:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    84a4:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    84a8:	mov	x0, x20
    84ac:	mov	x1, x23
    84b0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    84b4:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    84b8:	mov	w1, #0x2                   	// #2
    84bc:	mov	x0, x20
    84c0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    84c4:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    84c8:	mov	x0, x20
    84cc:	mov	x1, x22
    84d0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    84d4:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    84d8:	sxtw	x1, w21
    84dc:	mov	x0, x20
    84e0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    84e4:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    84e8:	mov	w1, #0x1                   	// #1
    84ec:	mov	x0, x20
    84f0:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    84f4:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    84f8:	add	x1, x29, #0x18
    84fc:	mov	x0, x20
    8500:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8504:	cbz	w0, 8514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12e8>
    8508:	ldr	x8, [x29, #24]
    850c:	mov	w0, #0x1                   	// #1
    8510:	str	x8, [x19]
    8514:	ldp	x20, x19, [sp, #48]
    8518:	ldp	x22, x21, [sp, #32]
    851c:	ldr	x23, [sp, #16]
    8520:	ldp	x29, x30, [sp], #64
    8524:	ret
    8528:	stp	x29, x30, [sp, #-64]!
    852c:	str	x23, [sp, #16]
    8530:	stp	x22, x21, [sp, #32]
    8534:	stp	x20, x19, [sp, #48]
    8538:	mov	x29, sp
    853c:	mov	x23, x1
    8540:	mov	w1, #0x51                  	// #81
    8544:	mov	x21, x4
    8548:	mov	x22, x3
    854c:	mov	x19, x2
    8550:	mov	x20, x0
    8554:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8558:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    855c:	mov	x0, x20
    8560:	mov	x1, x23
    8564:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8568:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    856c:	mov	w1, #0x2                   	// #2
    8570:	mov	x0, x20
    8574:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8578:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    857c:	mov	x0, x20
    8580:	mov	x1, x22
    8584:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8588:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    858c:	mov	x0, x20
    8590:	mov	x1, x21
    8594:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8598:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    859c:	mov	w1, #0x1                   	// #1
    85a0:	mov	x0, x20
    85a4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    85a8:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    85ac:	add	x1, x29, #0x18
    85b0:	mov	x0, x20
    85b4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    85b8:	cbz	w0, 85c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x139c>
    85bc:	ldr	x8, [x29, #24]
    85c0:	mov	w0, #0x1                   	// #1
    85c4:	str	x8, [x19]
    85c8:	ldp	x20, x19, [sp, #48]
    85cc:	ldp	x22, x21, [sp, #32]
    85d0:	ldr	x23, [sp, #16]
    85d4:	ldp	x29, x30, [sp], #64
    85d8:	ret
    85dc:	stp	x29, x30, [sp, #-64]!
    85e0:	str	x23, [sp, #16]
    85e4:	stp	x22, x21, [sp, #32]
    85e8:	stp	x20, x19, [sp, #48]
    85ec:	mov	x29, sp
    85f0:	mov	x23, x1
    85f4:	mov	w1, #0x51                  	// #81
    85f8:	mov	w21, w4
    85fc:	mov	x22, x3
    8600:	mov	x19, x2
    8604:	mov	x20, x0
    8608:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    860c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8610:	mov	x0, x20
    8614:	mov	x1, x23
    8618:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    861c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8620:	mov	w1, #0x2                   	// #2
    8624:	mov	x0, x20
    8628:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    862c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8630:	mov	x0, x20
    8634:	mov	x1, x22
    8638:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    863c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8640:	mov	w1, w21
    8644:	mov	x0, x20
    8648:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    864c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8650:	mov	w1, #0x1                   	// #1
    8654:	mov	x0, x20
    8658:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    865c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8660:	add	x1, x29, #0x18
    8664:	mov	x0, x20
    8668:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    866c:	cbz	w0, 867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1450>
    8670:	ldr	x8, [x29, #24]
    8674:	mov	w0, #0x1                   	// #1
    8678:	str	x8, [x19]
    867c:	ldp	x20, x19, [sp, #48]
    8680:	ldp	x22, x21, [sp, #32]
    8684:	ldr	x23, [sp, #16]
    8688:	ldp	x29, x30, [sp], #64
    868c:	ret
    8690:	sub	sp, sp, #0x60
    8694:	stp	x29, x30, [sp, #16]
    8698:	stp	x26, x25, [sp, #32]
    869c:	stp	x24, x23, [sp, #48]
    86a0:	stp	x22, x21, [sp, #64]
    86a4:	stp	x20, x19, [sp, #80]
    86a8:	add	x29, sp, #0x10
    86ac:	mov	x26, x1
    86b0:	mov	w1, #0x51                  	// #81
    86b4:	mov	w21, w7
    86b8:	mov	x22, x6
    86bc:	mov	x23, x5
    86c0:	mov	x24, x4
    86c4:	mov	x25, x3
    86c8:	mov	x19, x2
    86cc:	mov	x20, x0
    86d0:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    86d4:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    86d8:	mov	x0, x20
    86dc:	mov	x1, x26
    86e0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    86e4:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    86e8:	mov	w1, #0x5                   	// #5
    86ec:	mov	x0, x20
    86f0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    86f4:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    86f8:	mov	x0, x20
    86fc:	mov	x1, x25
    8700:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8704:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8708:	mov	x0, x20
    870c:	mov	x1, x24
    8710:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8714:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8718:	mov	x0, x20
    871c:	mov	x1, x23
    8720:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8724:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8728:	mov	x0, x20
    872c:	mov	x1, x22
    8730:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8734:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8738:	mov	w1, w21
    873c:	mov	x0, x20
    8740:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8744:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8748:	mov	w1, #0x1                   	// #1
    874c:	mov	x0, x20
    8750:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    8754:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8758:	add	x1, sp, #0x8
    875c:	mov	x0, x20
    8760:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8764:	cbz	w0, 8774 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1548>
    8768:	ldr	x8, [sp, #8]
    876c:	mov	w0, #0x1                   	// #1
    8770:	str	w8, [x19]
    8774:	ldp	x20, x19, [sp, #80]
    8778:	ldp	x22, x21, [sp, #64]
    877c:	ldp	x24, x23, [sp, #48]
    8780:	ldp	x26, x25, [sp, #32]
    8784:	ldp	x29, x30, [sp, #16]
    8788:	add	sp, sp, #0x60
    878c:	ret
    8790:	sub	sp, sp, #0x40
    8794:	stp	x29, x30, [sp, #16]
    8798:	stp	x22, x21, [sp, #32]
    879c:	stp	x20, x19, [sp, #48]
    87a0:	add	x29, sp, #0x10
    87a4:	mov	x22, x1
    87a8:	mov	w1, #0x51                  	// #81
    87ac:	mov	x21, x3
    87b0:	mov	x19, x2
    87b4:	mov	x20, x0
    87b8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    87bc:	cbz	w0, 881c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15f0>
    87c0:	mov	x0, x20
    87c4:	mov	x1, x22
    87c8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    87cc:	cbz	w0, 881c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15f0>
    87d0:	mov	w1, #0x1                   	// #1
    87d4:	mov	x0, x20
    87d8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    87dc:	cbz	w0, 881c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15f0>
    87e0:	mov	x0, x20
    87e4:	mov	x1, x21
    87e8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    87ec:	cbz	w0, 881c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15f0>
    87f0:	mov	w1, #0x1                   	// #1
    87f4:	mov	x0, x20
    87f8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    87fc:	cbz	w0, 881c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15f0>
    8800:	add	x1, sp, #0x8
    8804:	mov	x0, x20
    8808:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    880c:	cbz	w0, 881c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x15f0>
    8810:	ldr	x8, [sp, #8]
    8814:	mov	w0, #0x1                   	// #1
    8818:	str	x8, [x19]
    881c:	ldp	x20, x19, [sp, #48]
    8820:	ldp	x22, x21, [sp, #32]
    8824:	ldp	x29, x30, [sp, #16]
    8828:	add	sp, sp, #0x40
    882c:	ret
    8830:	sub	sp, sp, #0x50
    8834:	stp	x29, x30, [sp, #16]
    8838:	stp	x24, x23, [sp, #32]
    883c:	stp	x22, x21, [sp, #48]
    8840:	stp	x20, x19, [sp, #64]
    8844:	add	x29, sp, #0x10
    8848:	mov	x24, x1
    884c:	mov	w1, #0x51                  	// #81
    8850:	mov	x21, x5
    8854:	mov	x22, x4
    8858:	mov	w23, w3
    885c:	mov	x19, x2
    8860:	mov	x20, x0
    8864:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8868:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    886c:	mov	x0, x20
    8870:	mov	x1, x24
    8874:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8878:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    887c:	mov	w1, #0x3                   	// #3
    8880:	mov	x0, x20
    8884:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8888:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    888c:	sxtw	x1, w23
    8890:	mov	x0, x20
    8894:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8898:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    889c:	mov	x0, x20
    88a0:	mov	x1, x22
    88a4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    88a8:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    88ac:	mov	x0, x20
    88b0:	mov	x1, x21
    88b4:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    88b8:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    88bc:	mov	w1, #0x1                   	// #1
    88c0:	mov	x0, x20
    88c4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    88c8:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    88cc:	add	x1, sp, #0x8
    88d0:	mov	x0, x20
    88d4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    88d8:	cbz	w0, 88e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16bc>
    88dc:	ldr	x8, [sp, #8]
    88e0:	mov	w0, #0x1                   	// #1
    88e4:	str	x8, [x19]
    88e8:	ldp	x20, x19, [sp, #64]
    88ec:	ldp	x22, x21, [sp, #48]
    88f0:	ldp	x24, x23, [sp, #32]
    88f4:	ldp	x29, x30, [sp, #16]
    88f8:	add	sp, sp, #0x50
    88fc:	ret
    8900:	stp	x29, x30, [sp, #-64]!
    8904:	str	x23, [sp, #16]
    8908:	stp	x22, x21, [sp, #32]
    890c:	stp	x20, x19, [sp, #48]
    8910:	mov	x29, sp
    8914:	mov	x23, x1
    8918:	mov	w1, #0x51                  	// #81
    891c:	mov	x21, x4
    8920:	mov	x22, x3
    8924:	mov	x19, x2
    8928:	mov	x20, x0
    892c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    8930:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8934:	mov	x0, x20
    8938:	mov	x1, x23
    893c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8940:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8944:	mov	w1, #0x2                   	// #2
    8948:	mov	x0, x20
    894c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8950:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8954:	mov	x0, x20
    8958:	mov	x1, x22
    895c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    8960:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8964:	mov	x0, x20
    8968:	mov	x1, x21
    896c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    8970:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8974:	mov	w1, #0x1                   	// #1
    8978:	mov	x0, x20
    897c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    8980:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8984:	add	x1, x29, #0x18
    8988:	mov	x0, x20
    898c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8990:	cbz	w0, 89a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1774>
    8994:	ldr	x8, [x29, #24]
    8998:	mov	w0, #0x1                   	// #1
    899c:	str	x8, [x19]
    89a0:	ldp	x20, x19, [sp, #48]
    89a4:	ldp	x22, x21, [sp, #32]
    89a8:	ldr	x23, [sp, #16]
    89ac:	ldp	x29, x30, [sp], #64
    89b0:	ret
    89b4:	stp	x29, x30, [sp, #-32]!
    89b8:	str	x19, [sp, #16]
    89bc:	mov	x29, sp
    89c0:	mov	x19, x1
    89c4:	add	x1, x29, #0x18
    89c8:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    89cc:	cbz	w0, 89dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17b0>
    89d0:	ldr	x8, [x29, #24]
    89d4:	mov	w0, #0x1                   	// #1
    89d8:	str	w8, [x19]
    89dc:	ldr	x19, [sp, #16]
    89e0:	ldp	x29, x30, [sp], #32
    89e4:	ret
    89e8:	stp	x29, x30, [sp, #-32]!
    89ec:	str	x19, [sp, #16]
    89f0:	mov	x29, sp
    89f4:	mov	x19, x1
    89f8:	add	x1, x29, #0x18
    89fc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8a00:	cbz	w0, 8a10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17e4>
    8a04:	ldr	x8, [x29, #24]
    8a08:	mov	w0, #0x1                   	// #1
    8a0c:	str	w8, [x19]
    8a10:	ldr	x19, [sp, #16]
    8a14:	ldp	x29, x30, [sp], #32
    8a18:	ret
    8a1c:	stp	x29, x30, [sp, #-32]!
    8a20:	str	x19, [sp, #16]
    8a24:	mov	x29, sp
    8a28:	mov	x19, x1
    8a2c:	add	x1, x29, #0x18
    8a30:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8a34:	cbz	w0, 8a44 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1818>
    8a38:	ldr	x8, [x29, #24]
    8a3c:	mov	w0, #0x1                   	// #1
    8a40:	str	w8, [x19]
    8a44:	ldr	x19, [sp, #16]
    8a48:	ldp	x29, x30, [sp], #32
    8a4c:	ret
    8a50:	stp	x29, x30, [sp, #-32]!
    8a54:	str	x19, [sp, #16]
    8a58:	mov	x29, sp
    8a5c:	mov	x19, x1
    8a60:	add	x1, x29, #0x18
    8a64:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    8a68:	cbz	w0, 8a78 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x184c>
    8a6c:	ldr	x8, [x29, #24]
    8a70:	mov	w0, #0x1                   	// #1
    8a74:	str	w8, [x19]
    8a78:	ldr	x19, [sp, #16]
    8a7c:	ldp	x29, x30, [sp], #32
    8a80:	ret
    8a84:	stp	x29, x30, [sp, #-48]!
    8a88:	str	x21, [sp, #16]
    8a8c:	stp	x20, x19, [sp, #32]
    8a90:	mov	x29, sp
    8a94:	mov	x20, x1
    8a98:	mov	x19, x0
    8a9c:	cbz	x1, 8aa8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x187c>
    8aa0:	ldrsw	x21, [x20]
    8aa4:	b	8aac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1880>
    8aa8:	mov	x21, #0xffffffffffffffff    	// #-1
    8aac:	mov	w1, #0x76                  	// #118
    8ab0:	mov	x0, x19
    8ab4:	mov	x2, x21
    8ab8:	bl	d28c <gcc_cp_fe_context@@Base+0x3f90>
    8abc:	cmp	w0, #0x0
    8ac0:	mov	w8, w0
    8ac4:	cset	w0, ne  // ne = any
    8ac8:	cbz	w8, 8b00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8acc:	cbz	x20, 8b00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8ad0:	ldr	x2, [x20, #8]
    8ad4:	lsl	x1, x21, #3
    8ad8:	mov	x0, x19
    8adc:	bl	d2d8 <gcc_cp_fe_context@@Base+0x3fdc>
    8ae0:	cbz	w0, 8b00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18d4>
    8ae4:	ldr	x2, [x20, #16]
    8ae8:	lsl	x1, x21, #2
    8aec:	mov	x0, x19
    8af0:	ldp	x20, x19, [sp, #32]
    8af4:	ldr	x21, [sp, #16]
    8af8:	ldp	x29, x30, [sp], #48
    8afc:	b	d2d8 <gcc_cp_fe_context@@Base+0x3fdc>
    8b00:	ldp	x20, x19, [sp, #32]
    8b04:	ldr	x21, [sp, #16]
    8b08:	ldp	x29, x30, [sp], #48
    8b0c:	ret
    8b10:	stp	x29, x30, [sp, #-64]!
    8b14:	str	x23, [sp, #16]
    8b18:	stp	x22, x21, [sp, #32]
    8b1c:	stp	x20, x19, [sp, #48]
    8b20:	mov	x29, sp
    8b24:	mov	x20, x1
    8b28:	add	x2, x29, #0x18
    8b2c:	mov	w1, #0x76                  	// #118
    8b30:	mov	x21, x0
    8b34:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3fec>
    8b38:	cbz	w0, 8bf0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19c4>
    8b3c:	ldr	x22, [x29, #24]
    8b40:	cmn	x22, #0x1
    8b44:	b.eq	8bb8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>  // b.none
    8b48:	mov	w0, #0x18                  	// #24
    8b4c:	bl	5660 <_Znwm@plt>
    8b50:	cmp	xzr, x22, lsr #61
    8b54:	lsl	x23, x22, #3
    8b58:	mov	x19, x0
    8b5c:	str	w22, [x0]
    8b60:	csinv	x0, x23, xzr, eq  // eq = none
    8b64:	bl	5380 <_Znam@plt>
    8b68:	mov	x22, x0
    8b6c:	str	x0, [x19, #8]
    8b70:	mov	x0, x21
    8b74:	mov	x1, x23
    8b78:	mov	x2, x22
    8b7c:	bl	d338 <gcc_cp_fe_context@@Base+0x403c>
    8b80:	cbz	w0, 8bc4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1998>
    8b84:	ldr	x8, [x29, #24]
    8b88:	cmp	xzr, x8, lsr #62
    8b8c:	lsl	x22, x8, #2
    8b90:	csinv	x0, x22, xzr, eq  // eq = none
    8b94:	bl	5380 <_Znam@plt>
    8b98:	mov	x2, x0
    8b9c:	str	x0, [x19, #16]
    8ba0:	mov	x0, x21
    8ba4:	mov	x1, x22
    8ba8:	bl	d338 <gcc_cp_fe_context@@Base+0x403c>
    8bac:	cbz	w0, 8bcc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19a0>
    8bb0:	str	x19, [x20]
    8bb4:	b	8bbc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1990>
    8bb8:	str	xzr, [x20]
    8bbc:	mov	w0, #0x1                   	// #1
    8bc0:	b	8bf0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19c4>
    8bc4:	mov	x0, x22
    8bc8:	b	8be0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19b4>
    8bcc:	ldr	x0, [x19, #16]
    8bd0:	cbz	x0, 8bd8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19ac>
    8bd4:	bl	5730 <_ZdaPv@plt>
    8bd8:	ldr	x0, [x19, #8]
    8bdc:	cbz	x0, 8be4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19b8>
    8be0:	bl	5730 <_ZdaPv@plt>
    8be4:	mov	x0, x19
    8be8:	bl	5650 <_ZdlPv@plt>
    8bec:	mov	w0, wzr
    8bf0:	ldp	x20, x19, [sp, #48]
    8bf4:	ldp	x22, x21, [sp, #32]
    8bf8:	ldr	x23, [sp, #16]
    8bfc:	ldp	x29, x30, [sp], #64
    8c00:	ret
    8c04:	stp	x29, x30, [sp, #-48]!
    8c08:	str	x21, [sp, #16]
    8c0c:	stp	x20, x19, [sp, #32]
    8c10:	mov	x29, sp
    8c14:	mov	x20, x1
    8c18:	mov	x19, x0
    8c1c:	cbz	x1, 8c28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19fc>
    8c20:	ldrsw	x21, [x20]
    8c24:	b	8c2c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a00>
    8c28:	mov	x21, #0xffffffffffffffff    	// #-1
    8c2c:	mov	w1, #0x74                  	// #116
    8c30:	mov	x0, x19
    8c34:	mov	x2, x21
    8c38:	bl	d28c <gcc_cp_fe_context@@Base+0x3f90>
    8c3c:	cmp	w0, #0x0
    8c40:	mov	w8, w0
    8c44:	cset	w0, ne  // ne = any
    8c48:	cbz	w8, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a54>
    8c4c:	cbz	x20, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a54>
    8c50:	ldr	x2, [x20, #8]
    8c54:	mov	x0, x19
    8c58:	mov	x1, x21
    8c5c:	bl	d2d8 <gcc_cp_fe_context@@Base+0x3fdc>
    8c60:	cbz	w0, 8c80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a54>
    8c64:	ldr	x2, [x20, #16]
    8c68:	lsl	x1, x21, #3
    8c6c:	mov	x0, x19
    8c70:	ldp	x20, x19, [sp, #32]
    8c74:	ldr	x21, [sp, #16]
    8c78:	ldp	x29, x30, [sp], #48
    8c7c:	b	d2d8 <gcc_cp_fe_context@@Base+0x3fdc>
    8c80:	ldp	x20, x19, [sp, #32]
    8c84:	ldr	x21, [sp, #16]
    8c88:	ldp	x29, x30, [sp], #48
    8c8c:	ret
    8c90:	stp	x29, x30, [sp, #-64]!
    8c94:	str	x23, [sp, #16]
    8c98:	stp	x22, x21, [sp, #32]
    8c9c:	stp	x20, x19, [sp, #48]
    8ca0:	mov	x29, sp
    8ca4:	mov	x20, x1
    8ca8:	add	x2, x29, #0x18
    8cac:	mov	w1, #0x74                  	// #116
    8cb0:	mov	x21, x0
    8cb4:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3fec>
    8cb8:	cbz	w0, 8d68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b3c>
    8cbc:	ldr	x22, [x29, #24]
    8cc0:	cmn	x22, #0x1
    8cc4:	b.eq	8d30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b04>  // b.none
    8cc8:	mov	w0, #0x18                  	// #24
    8ccc:	bl	5660 <_Znwm@plt>
    8cd0:	mov	x19, x0
    8cd4:	str	w22, [x0]
    8cd8:	mov	x0, x22
    8cdc:	bl	5380 <_Znam@plt>
    8ce0:	mov	x23, x0
    8ce4:	str	x0, [x19, #8]
    8ce8:	mov	x0, x21
    8cec:	mov	x1, x22
    8cf0:	mov	x2, x23
    8cf4:	bl	d338 <gcc_cp_fe_context@@Base+0x403c>
    8cf8:	cbz	w0, 8d3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b10>
    8cfc:	ldr	x8, [x29, #24]
    8d00:	cmp	xzr, x8, lsr #61
    8d04:	lsl	x22, x8, #3
    8d08:	csinv	x0, x22, xzr, eq  // eq = none
    8d0c:	bl	5380 <_Znam@plt>
    8d10:	mov	x2, x0
    8d14:	str	x0, [x19, #16]
    8d18:	mov	x0, x21
    8d1c:	mov	x1, x22
    8d20:	bl	d338 <gcc_cp_fe_context@@Base+0x403c>
    8d24:	cbz	w0, 8d44 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b18>
    8d28:	str	x19, [x20]
    8d2c:	b	8d34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b08>
    8d30:	str	xzr, [x20]
    8d34:	mov	w0, #0x1                   	// #1
    8d38:	b	8d68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b3c>
    8d3c:	mov	x0, x23
    8d40:	b	8d58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b2c>
    8d44:	ldr	x0, [x19, #16]
    8d48:	cbz	x0, 8d50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b24>
    8d4c:	bl	5730 <_ZdaPv@plt>
    8d50:	ldr	x0, [x19, #8]
    8d54:	cbz	x0, 8d5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b30>
    8d58:	bl	5730 <_ZdaPv@plt>
    8d5c:	mov	x0, x19
    8d60:	bl	5650 <_ZdlPv@plt>
    8d64:	mov	w0, wzr
    8d68:	ldp	x20, x19, [sp, #48]
    8d6c:	ldp	x22, x21, [sp, #32]
    8d70:	ldr	x23, [sp, #16]
    8d74:	ldp	x29, x30, [sp], #64
    8d78:	ret
    8d7c:	stp	x29, x30, [sp, #-48]!
    8d80:	str	x21, [sp, #16]
    8d84:	stp	x20, x19, [sp, #32]
    8d88:	mov	x29, sp
    8d8c:	mov	x20, x1
    8d90:	mov	x19, x0
    8d94:	cbz	x1, 8da0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b74>
    8d98:	ldrsw	x21, [x20]
    8d9c:	b	8da4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b78>
    8da0:	mov	x21, #0xffffffffffffffff    	// #-1
    8da4:	mov	w1, #0x64                  	// #100
    8da8:	mov	x0, x19
    8dac:	mov	x2, x21
    8db0:	bl	d28c <gcc_cp_fe_context@@Base+0x3f90>
    8db4:	cmp	w0, #0x0
    8db8:	mov	w8, w0
    8dbc:	cset	w0, ne  // ne = any
    8dc0:	cbz	w8, 8de4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bb8>
    8dc4:	cbz	x20, 8de4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bb8>
    8dc8:	ldr	x2, [x20, #8]
    8dcc:	lsl	x1, x21, #3
    8dd0:	mov	x0, x19
    8dd4:	ldp	x20, x19, [sp, #32]
    8dd8:	ldr	x21, [sp, #16]
    8ddc:	ldp	x29, x30, [sp], #48
    8de0:	b	d2d8 <gcc_cp_fe_context@@Base+0x3fdc>
    8de4:	ldp	x20, x19, [sp, #32]
    8de8:	ldr	x21, [sp, #16]
    8dec:	ldp	x29, x30, [sp], #48
    8df0:	ret
    8df4:	stp	x29, x30, [sp, #-64]!
    8df8:	str	x23, [sp, #16]
    8dfc:	stp	x22, x21, [sp, #32]
    8e00:	stp	x20, x19, [sp, #48]
    8e04:	mov	x29, sp
    8e08:	mov	x19, x1
    8e0c:	add	x2, x29, #0x18
    8e10:	mov	w1, #0x64                  	// #100
    8e14:	mov	x20, x0
    8e18:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3fec>
    8e1c:	cbz	w0, 8e90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c64>
    8e20:	ldr	x22, [x29, #24]
    8e24:	cmn	x22, #0x1
    8e28:	b.eq	8e70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c44>  // b.none
    8e2c:	mov	w0, #0x10                  	// #16
    8e30:	bl	5660 <_Znwm@plt>
    8e34:	cmp	xzr, x22, lsr #61
    8e38:	lsl	x23, x22, #3
    8e3c:	mov	x21, x0
    8e40:	str	w22, [x0]
    8e44:	csinv	x0, x23, xzr, eq  // eq = none
    8e48:	bl	5380 <_Znam@plt>
    8e4c:	mov	x22, x0
    8e50:	str	x0, [x21, #8]
    8e54:	mov	x0, x20
    8e58:	mov	x1, x23
    8e5c:	mov	x2, x22
    8e60:	bl	d338 <gcc_cp_fe_context@@Base+0x403c>
    8e64:	cbz	w0, 8e7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c50>
    8e68:	str	x21, [x19]
    8e6c:	b	8e74 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c48>
    8e70:	str	xzr, [x19]
    8e74:	mov	w0, #0x1                   	// #1
    8e78:	b	8e90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c64>
    8e7c:	mov	x0, x22
    8e80:	bl	5730 <_ZdaPv@plt>
    8e84:	mov	x0, x21
    8e88:	bl	5650 <_ZdlPv@plt>
    8e8c:	mov	w0, wzr
    8e90:	ldp	x20, x19, [sp, #48]
    8e94:	ldp	x22, x21, [sp, #32]
    8e98:	ldr	x23, [sp, #16]
    8e9c:	ldp	x29, x30, [sp], #64
    8ea0:	ret
    8ea4:	stp	x29, x30, [sp, #-48]!
    8ea8:	str	x21, [sp, #16]
    8eac:	stp	x20, x19, [sp, #32]
    8eb0:	mov	x29, sp
    8eb4:	mov	x8, x0
    8eb8:	mov	x20, x2
    8ebc:	mov	x21, x1
    8ec0:	mov	x19, x0
    8ec4:	movi	v0.2d, #0x0
    8ec8:	strb	wzr, [x8, #120]!
    8ecc:	stp	xzr, xzr, [x8, #-104]
    8ed0:	stur	xzr, [x8, #-88]
    8ed4:	stp	q0, q0, [x8, #-64]
    8ed8:	stur	q0, [x8, #-32]
    8edc:	stp	x8, xzr, [x8, #-16]
    8ee0:	strb	wzr, [x8, #16]
    8ee4:	mov	w0, #0x10                  	// #16
    8ee8:	bl	5660 <_Znwm@plt>
    8eec:	adrp	x8, 28000 <xexit@@Base+0x14018>
    8ef0:	add	x8, x8, #0x8c0
    8ef4:	stp	x8, x19, [x0]
    8ef8:	str	x0, [x19, #144]
    8efc:	stp	x21, x20, [x19]
    8f00:	ldp	x20, x19, [sp, #32]
    8f04:	ldr	x21, [sp, #16]
    8f08:	ldp	x29, x30, [sp], #48
    8f0c:	ret
    8f10:	mov	x20, x0
    8f14:	add	x0, x19, #0x50
    8f18:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    8f1c:	mov	x0, x20
    8f20:	bl	58d0 <_Unwind_Resume@plt>
    8f24:	stp	x29, x30, [sp, #-32]!
    8f28:	str	x19, [sp, #16]
    8f2c:	mov	x29, sp
    8f30:	mov	x19, x0
    8f34:	ldr	x0, [x0, #16]
    8f38:	cbz	x0, 8f48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d1c>
    8f3c:	ldr	x8, [x0]
    8f40:	ldr	x8, [x8, #8]
    8f44:	blr	x8
    8f48:	ldr	x0, [x19, #144]
    8f4c:	cbz	x0, 8f5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d30>
    8f50:	ldr	x8, [x0]
    8f54:	ldr	x8, [x8, #16]
    8f58:	blr	x8
    8f5c:	ldr	x0, [x19, #104]
    8f60:	add	x8, x19, #0x78
    8f64:	cmp	x0, x8
    8f68:	b.eq	8f70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d44>  // b.none
    8f6c:	bl	5650 <_ZdlPv@plt>
    8f70:	add	x0, x19, #0x50
    8f74:	ldr	x19, [sp, #16]
    8f78:	ldp	x29, x30, [sp], #32
    8f7c:	b	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    8f80:	adrp	x0, 14000 <xexit@@Base+0x18>
    8f84:	add	x0, x0, #0x59
    8f88:	b	54e0 <xstrdup@plt>
    8f8c:	stp	x29, x30, [sp, #-96]!
    8f90:	stp	x28, x27, [sp, #16]
    8f94:	stp	x26, x25, [sp, #32]
    8f98:	stp	x24, x23, [sp, #48]
    8f9c:	stp	x22, x21, [sp, #64]
    8fa0:	stp	x20, x19, [sp, #80]
    8fa4:	mov	x29, sp
    8fa8:	sub	sp, sp, #0x1b0
    8fac:	mov	x19, sp
    8fb0:	ldr	x23, [x0, #16]
    8fb4:	mov	x21, x0
    8fb8:	add	x0, x19, #0x20
    8fbc:	mov	x20, x1
    8fc0:	add	x22, x19, #0x20
    8fc4:	bl	55b0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    8fc8:	add	x22, x22, #0x10
    8fcc:	adrp	x1, 14000 <xexit@@Base+0x18>
    8fd0:	add	x1, x1, #0xaf3
    8fd4:	mov	w2, #0x1                   	// #1
    8fd8:	mov	x0, x22
    8fdc:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    8fe0:	cbz	x23, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd4>
    8fe4:	mov	x0, x23
    8fe8:	bl	5430 <strlen@plt>
    8fec:	mov	x2, x0
    8ff0:	mov	x0, x22
    8ff4:	mov	x1, x23
    8ff8:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    8ffc:	b	9018 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dec>
    9000:	ldr	x8, [x19, #48]
    9004:	ldur	x8, [x8, #-24]
    9008:	add	x0, x22, x8
    900c:	ldr	w8, [x0, #32]
    9010:	orr	w1, w8, #0x1
    9014:	bl	5890 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    9018:	adrp	x1, 14000 <xexit@@Base+0x18>
    901c:	add	x1, x1, #0x123
    9020:	mov	w2, #0x1                   	// #1
    9024:	mov	x0, x22
    9028:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    902c:	adrp	x23, 14000 <xexit@@Base+0x18>
    9030:	mov	x25, #0xb                   	// #11
    9034:	mov	x27, #0x4f1000000000        	// #86930138071040
    9038:	add	x23, x23, #0x240
    903c:	mov	w24, #0x1                   	// #1
    9040:	movk	x25, #0x3, lsl #32
    9044:	mov	w26, #0x5c                  	// #92
    9048:	movk	x27, #0x8000, lsl #48
    904c:	ldrb	w8, [x23]
    9050:	cmp	w8, #0x3f
    9054:	b.hi	9068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e3c>  // b.pmore
    9058:	lsl	x9, x24, x8
    905c:	tst	x9, x27
    9060:	b.ne	9080 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e54>  // b.any
    9064:	cbz	x8, 90b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e88>
    9068:	sub	w9, w8, #0x5b
    906c:	cmp	w9, #0x21
    9070:	b.hi	9098 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e6c>  // b.pmore
    9074:	lsl	x9, x24, x9
    9078:	tst	x9, x25
    907c:	b.eq	9098 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e6c>  // b.none
    9080:	sturb	w26, [x29, #-4]
    9084:	sub	x1, x29, #0x4
    9088:	mov	w2, #0x1                   	// #1
    908c:	mov	x0, x22
    9090:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9094:	ldrb	w8, [x23]
    9098:	sturb	w8, [x29, #-4]
    909c:	sub	x1, x29, #0x4
    90a0:	mov	w2, #0x1                   	// #1
    90a4:	mov	x0, x22
    90a8:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    90ac:	add	x23, x23, #0x1
    90b0:	b	904c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e20>
    90b4:	adrp	x1, 14000 <xexit@@Base+0x18>
    90b8:	add	x1, x1, #0x125
    90bc:	mov	w2, #0x1                   	// #1
    90c0:	mov	x0, x22
    90c4:	bl	56b0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    90c8:	add	x22, x19, #0x20
    90cc:	add	x0, x22, #0x18
    90d0:	add	x8, x19, #0x0
    90d4:	bl	5810 <_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@plt>
    90d8:	adrp	x1, 28000 <xexit@@Base+0x14018>
    90dc:	ldr	x1, [x1, #3320]
    90e0:	add	x0, x19, #0x20
    90e4:	bl	55e0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev@plt>
    90e8:	add	x0, x22, #0x80
    90ec:	bl	5460 <_ZNSt8ios_baseD2Ev@plt>
    90f0:	ldr	x8, [x21, #8]
    90f4:	ldrb	w8, [x8, #136]
    90f8:	cbnz	w8, 9210 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fe4>
    90fc:	ldr	x1, [x19]
    9100:	add	x0, x19, #0x20
    9104:	mov	w2, #0x9                   	// #9
    9108:	bl	53b0 <xregcomp@plt>
    910c:	mov	w22, w0
    9110:	cbz	w0, 9180 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f54>
    9114:	add	x1, x19, #0x20
    9118:	mov	w0, w22
    911c:	mov	x2, xzr
    9120:	mov	x3, xzr
    9124:	bl	58a0 <xregerror@plt>
    9128:	add	x9, x0, #0xf
    912c:	mov	x8, sp
    9130:	and	x9, x9, #0xfffffffffffffff0
    9134:	mov	x21, sp
    9138:	sub	x20, x8, x9
    913c:	mov	x3, x0
    9140:	mov	sp, x20
    9144:	add	x1, x19, #0x20
    9148:	mov	w0, w22
    914c:	mov	x2, x20
    9150:	bl	58a0 <xregerror@plt>
    9154:	ldr	x1, [x19]
    9158:	adrp	x0, 14000 <xexit@@Base+0x18>
    915c:	adrp	x2, 14000 <xexit@@Base+0x18>
    9160:	add	x0, x0, #0xa7
    9164:	add	x2, x2, #0xc2
    9168:	mov	x3, x20
    916c:	mov	x4, xzr
    9170:	bl	5620 <concat@plt>
    9174:	mov	x20, x0
    9178:	mov	sp, x21
    917c:	b	91d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fa8>
    9180:	add	x0, x19, #0x20
    9184:	mov	x1, x20
    9188:	bl	5a24 <bcmp@plt+0xe4>
    918c:	tbz	w0, #0, 91ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f80>
    9190:	add	x0, x19, #0x20
    9194:	bl	5450 <xregfree@plt>
    9198:	ldr	x8, [x21, #8]
    919c:	ldrb	w8, [x8, #136]
    91a0:	cbnz	w8, 9230 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2004>
    91a4:	mov	x20, xzr
    91a8:	b	91d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fa8>
    91ac:	add	x0, x19, #0x20
    91b0:	bl	5450 <xregfree@plt>
    91b4:	ldr	x1, [x19]
    91b8:	adrp	x0, 14000 <xexit@@Base+0x18>
    91bc:	adrp	x2, 14000 <xexit@@Base+0x18>
    91c0:	add	x0, x0, #0xc6
    91c4:	add	x2, x2, #0xe9
    91c8:	mov	x3, xzr
    91cc:	bl	5620 <concat@plt>
    91d0:	mov	x20, x0
    91d4:	ldr	x0, [x19]
    91d8:	add	x8, x19, #0x0
    91dc:	add	x8, x8, #0x10
    91e0:	cmp	x0, x8
    91e4:	b.eq	91ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fc0>  // b.none
    91e8:	bl	5650 <_ZdlPv@plt>
    91ec:	mov	x0, x20
    91f0:	mov	sp, x29
    91f4:	ldp	x20, x19, [sp, #80]
    91f8:	ldp	x22, x21, [sp, #64]
    91fc:	ldp	x24, x23, [sp, #48]
    9200:	ldp	x26, x25, [sp, #32]
    9204:	ldp	x28, x27, [sp, #16]
    9208:	ldp	x29, x30, [sp], #96
    920c:	ret
    9210:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9214:	ldr	x8, [x8, #3976]
    9218:	ldr	x2, [x19]
    921c:	adrp	x1, 14000 <xexit@@Base+0x18>
    9220:	add	x1, x1, #0x7d
    9224:	ldr	x0, [x8]
    9228:	bl	5440 <fprintf@plt>
    922c:	b	90fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ed0>
    9230:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9234:	ldr	x8, [x8, #3976]
    9238:	ldr	x2, [x20]
    923c:	adrp	x1, 14000 <xexit@@Base+0x18>
    9240:	add	x1, x1, #0xeb
    9244:	ldr	x0, [x8]
    9248:	bl	5440 <fprintf@plt>
    924c:	b	91a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f78>
    9250:	b	9254 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2028>
    9254:	mov	x20, x0
    9258:	ldr	x0, [x19]
    925c:	add	x8, x19, #0x0
    9260:	add	x8, x8, #0x10
    9264:	cmp	x0, x8
    9268:	b.eq	9298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x206c>  // b.none
    926c:	bl	5650 <_ZdlPv@plt>
    9270:	b	9298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x206c>
    9274:	b	9278 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x204c>
    9278:	adrp	x1, 28000 <xexit@@Base+0x14018>
    927c:	ldr	x1, [x1, #3320]
    9280:	mov	x20, x0
    9284:	add	x0, x19, #0x20
    9288:	add	x21, x19, #0x20
    928c:	bl	55e0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev@plt>
    9290:	add	x0, x21, #0x80
    9294:	bl	5460 <_ZNSt8ios_baseD2Ev@plt>
    9298:	mov	x0, x20
    929c:	bl	58d0 <_Unwind_Resume@plt>
    92a0:	stp	x29, x30, [sp, #-32]!
    92a4:	stp	x20, x19, [sp, #16]
    92a8:	mov	x29, sp
    92ac:	ldr	x8, [x0, #8]
    92b0:	mov	x19, x0
    92b4:	mov	x20, x1
    92b8:	ldrb	w8, [x8, #136]
    92bc:	cbnz	w8, 92dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x20b0>
    92c0:	add	x1, x19, #0x10
    92c4:	mov	x0, x20
    92c8:	bl	5510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    92cc:	ldp	x20, x19, [sp, #16]
    92d0:	mov	x0, xzr
    92d4:	ldp	x29, x30, [sp], #32
    92d8:	ret
    92dc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    92e0:	ldr	x8, [x8, #3976]
    92e4:	ldr	x2, [x19, #16]
    92e8:	adrp	x1, 14000 <xexit@@Base+0x18>
    92ec:	add	x1, x1, #0xfe
    92f0:	ldr	x0, [x8]
    92f4:	bl	5440 <fprintf@plt>
    92f8:	b	92c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2094>

00000000000092fc <gcc_cp_fe_context@@Base>:
    92fc:	stp	x29, x30, [sp, #-32]!
    9300:	stp	x20, x19, [sp, #16]
    9304:	mov	x29, sp
    9308:	cmp	w0, #0x1
    930c:	mov	x19, xzr
    9310:	b.hi	9338 <gcc_cp_fe_context@@Base+0x3c>  // b.pmore
    9314:	cbnz	w1, 9338 <gcc_cp_fe_context@@Base+0x3c>
    9318:	mov	w0, #0x98                  	// #152
    931c:	bl	5660 <_Znwm@plt>
    9320:	mov	x19, x0
    9324:	adrp	x1, 28000 <xexit@@Base+0x14018>
    9328:	adrp	x2, 28000 <xexit@@Base+0x14018>
    932c:	add	x1, x1, #0x630
    9330:	add	x2, x2, #0x688
    9334:	bl	8ea4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c78>
    9338:	mov	x0, x19
    933c:	ldp	x20, x19, [sp, #16]
    9340:	ldp	x29, x30, [sp], #32
    9344:	ret
    9348:	mov	x20, x0
    934c:	mov	x0, x19
    9350:	bl	5650 <_ZdlPv@plt>
    9354:	mov	x0, x20
    9358:	bl	58d0 <_Unwind_Resume@plt>
    935c:	stp	x29, x30, [sp, #-48]!
    9360:	str	x21, [sp, #16]
    9364:	stp	x20, x19, [sp, #32]
    9368:	mov	x29, sp
    936c:	mov	x19, x3
    9370:	mov	w20, w2
    9374:	mov	x21, x0
    9378:	bl	9a1c <gcc_cp_fe_context@@Base+0x720>
    937c:	mov	x0, x21
    9380:	mov	w1, w20
    9384:	mov	x2, x19
    9388:	ldp	x20, x19, [sp, #32]
    938c:	ldr	x21, [sp, #16]
    9390:	ldp	x29, x30, [sp], #48
    9394:	b	9904 <gcc_cp_fe_context@@Base+0x608>
    9398:	stp	x29, x30, [sp, #-48]!
    939c:	str	x21, [sp, #16]
    93a0:	stp	x20, x19, [sp, #32]
    93a4:	mov	x29, sp
    93a8:	ldr	x20, [x0, #112]
    93ac:	add	x21, x0, #0x68
    93b0:	mov	x0, x1
    93b4:	mov	x19, x1
    93b8:	bl	5430 <strlen@plt>
    93bc:	mov	x4, x0
    93c0:	mov	x0, x21
    93c4:	mov	x2, x20
    93c8:	mov	x3, x19
    93cc:	ldp	x20, x19, [sp, #32]
    93d0:	ldr	x21, [sp, #16]
    93d4:	mov	x1, xzr
    93d8:	ldp	x29, x30, [sp], #48
    93dc:	b	57d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    93e0:	stp	x1, x2, [x0, #64]
    93e4:	ret
    93e8:	cmp	w2, #0x0
    93ec:	cset	w8, ne  // ne = any
    93f0:	strb	w8, [x0, #136]
    93f4:	b	9434 <gcc_cp_fe_context@@Base+0x138>
    93f8:	cbz	x0, 9420 <gcc_cp_fe_context@@Base+0x124>
    93fc:	stp	x29, x30, [sp, #-32]!
    9400:	str	x19, [sp, #16]
    9404:	mov	x29, sp
    9408:	mov	x19, x0
    940c:	bl	8f24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1cf8>
    9410:	mov	x0, x19
    9414:	ldr	x19, [sp, #16]
    9418:	ldp	x29, x30, [sp], #32
    941c:	b	5650 <_ZdlPv@plt>
    9420:	ret
    9424:	cmp	w1, #0x0
    9428:	cset	w8, ne  // ne = any
    942c:	strb	w8, [x0, #136]
    9430:	ret
    9434:	sub	sp, sp, #0xe0
    9438:	stp	x29, x30, [sp, #160]
    943c:	str	x23, [sp, #176]
    9440:	stp	x22, x21, [sp, #192]
    9444:	stp	x20, x19, [sp, #208]
    9448:	add	x29, sp, #0xa0
    944c:	mov	x21, x1
    9450:	mov	x19, x0
    9454:	add	x3, x29, #0x18
    9458:	mov	w0, #0x1                   	// #1
    945c:	mov	w1, #0x1                   	// #1
    9460:	mov	w2, wzr
    9464:	bl	53d0 <socketpair@plt>
    9468:	cbz	w0, 9480 <gcc_cp_fe_context@@Base+0x184>
    946c:	ldp	x8, x0, [x19, #64]
    9470:	adrp	x1, 14000 <xexit@@Base+0x18>
    9474:	add	x1, x1, #0x127
    9478:	blr	x8
    947c:	b	94ac <gcc_cp_fe_context@@Base+0x1b0>
    9480:	sub	x0, x29, #0x8
    9484:	bl	53f0 <pipe@plt>
    9488:	cbz	w0, 94c8 <gcc_cp_fe_context@@Base+0x1cc>
    948c:	ldp	x8, x0, [x19, #64]
    9490:	adrp	x1, 14000 <xexit@@Base+0x18>
    9494:	add	x1, x1, #0x144
    9498:	blr	x8
    949c:	ldr	w0, [x29, #24]
    94a0:	bl	5790 <close@plt>
    94a4:	ldr	w0, [x29, #28]
    94a8:	bl	5790 <close@plt>
    94ac:	mov	w0, wzr
    94b0:	ldp	x20, x19, [sp, #208]
    94b4:	ldp	x22, x21, [sp, #192]
    94b8:	ldr	x23, [sp, #176]
    94bc:	ldp	x29, x30, [sp, #160]
    94c0:	add	sp, sp, #0xe0
    94c4:	ret
    94c8:	add	x8, sp, #0x30
    94cc:	add	x22, x8, #0x10
    94d0:	str	x22, [sp, #48]
    94d4:	adrp	x1, 14000 <xexit@@Base+0x18>
    94d8:	add	x1, x1, #0x244
    94dc:	add	x2, x1, #0x15
    94e0:	add	x0, sp, #0x30
    94e4:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    94e8:	add	x20, x19, #0x50
    94ec:	add	x1, sp, #0x30
    94f0:	mov	x0, x20
    94f4:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    94f8:	ldr	x0, [sp, #48]
    94fc:	cmp	x0, x22
    9500:	b.eq	9508 <gcc_cp_fe_context@@Base+0x20c>  // b.none
    9504:	bl	5650 <_ZdlPv@plt>
    9508:	ldr	w3, [x29, #28]
    950c:	adrp	x2, 14000 <xexit@@Base+0x18>
    9510:	add	x2, x2, #0x25a
    9514:	add	x0, sp, #0x30
    9518:	mov	w1, #0x64                  	// #100
    951c:	add	x23, sp, #0x30
    9520:	bl	56c0 <snprintf@plt>
    9524:	cmp	w0, #0x64
    9528:	b.ge	9848 <gcc_cp_fe_context@@Base+0x54c>  // b.tcont
    952c:	add	x8, sp, #0x10
    9530:	add	x22, x8, #0x10
    9534:	add	x0, sp, #0x30
    9538:	str	x22, [sp, #16]
    953c:	bl	5430 <strlen@plt>
    9540:	add	x2, x23, x0
    9544:	add	x0, sp, #0x10
    9548:	add	x1, sp, #0x30
    954c:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    9550:	add	x1, sp, #0x10
    9554:	mov	x0, x20
    9558:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    955c:	ldr	x0, [sp, #16]
    9560:	cmp	x0, x22
    9564:	b.eq	956c <gcc_cp_fe_context@@Base+0x270>  // b.none
    9568:	bl	5650 <_ZdlPv@plt>
    956c:	add	x1, x19, #0x68
    9570:	mov	x0, x20
    9574:	bl	54f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    9578:	add	x8, sp, #0x10
    957c:	add	x22, x8, #0x10
    9580:	str	x22, [sp, #16]
    9584:	adrp	x1, 14000 <xexit@@Base+0x18>
    9588:	add	x1, x1, #0x191
    958c:	add	x2, x1, #0x2
    9590:	add	x0, sp, #0x10
    9594:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    9598:	add	x1, sp, #0x10
    959c:	mov	x0, x20
    95a0:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    95a4:	ldr	x0, [sp, #16]
    95a8:	cmp	x0, x22
    95ac:	b.eq	95b4 <gcc_cp_fe_context@@Base+0x2b8>  // b.none
    95b0:	bl	5650 <_ZdlPv@plt>
    95b4:	add	x8, sp, #0x10
    95b8:	add	x22, x8, #0x10
    95bc:	str	x22, [sp, #16]
    95c0:	adrp	x1, 14000 <xexit@@Base+0x18>
    95c4:	add	x1, x1, #0x194
    95c8:	add	x2, x1, #0x2
    95cc:	add	x0, sp, #0x10
    95d0:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    95d4:	add	x1, sp, #0x10
    95d8:	mov	x0, x20
    95dc:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    95e0:	ldr	x0, [sp, #16]
    95e4:	cmp	x0, x22
    95e8:	b.eq	95f0 <gcc_cp_fe_context@@Base+0x2f4>  // b.none
    95ec:	bl	5650 <_ZdlPv@plt>
    95f0:	add	x0, sp, #0x10
    95f4:	add	x2, sp, #0x8
    95f8:	mov	x1, x21
    95fc:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    9600:	add	x1, sp, #0x10
    9604:	mov	x0, x20
    9608:	add	x21, sp, #0x10
    960c:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    9610:	ldr	x0, [sp, #16]
    9614:	add	x8, x21, #0x10
    9618:	cmp	x0, x8
    961c:	b.eq	9624 <gcc_cp_fe_context@@Base+0x328>  // b.none
    9620:	bl	5650 <_ZdlPv@plt>
    9624:	ldrb	w8, [x19, #136]
    9628:	cbz	w8, 9668 <gcc_cp_fe_context@@Base+0x36c>
    962c:	add	x8, sp, #0x10
    9630:	add	x21, x8, #0x10
    9634:	str	x21, [sp, #16]
    9638:	adrp	x1, 14000 <xexit@@Base+0x18>
    963c:	add	x1, x1, #0x197
    9640:	add	x2, x1, #0x2
    9644:	add	x0, sp, #0x10
    9648:	bl	5490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    964c:	add	x1, sp, #0x10
    9650:	mov	x0, x20
    9654:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    9658:	ldr	x0, [sp, #16]
    965c:	cmp	x0, x21
    9660:	b.eq	9668 <gcc_cp_fe_context@@Base+0x36c>  // b.none
    9664:	bl	5650 <_ZdlPv@plt>
    9668:	mov	w0, #0x20                  	// #32
    966c:	bl	5660 <_Znwm@plt>
    9670:	adrp	x10, 28000 <xexit@@Base+0x14018>
    9674:	ldr	w8, [x29, #24]
    9678:	ldur	w9, [x29, #-8]
    967c:	ldr	x10, [x10, #3368]
    9680:	mov	x20, x0
    9684:	add	x21, x0, #0x10
    9688:	stp	w8, w9, [x0, #8]
    968c:	add	x10, x10, #0x10
    9690:	str	x10, [x0]
    9694:	mov	x0, x21
    9698:	bl	cc88 <gcc_cp_fe_context@@Base+0x398c>
    969c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    96a0:	adrp	x1, 14000 <xexit@@Base+0x18>
    96a4:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd4>
    96a8:	add	x8, x8, #0x978
    96ac:	add	x1, x1, #0x19a
    96b0:	add	x2, x2, #0xbd4
    96b4:	mov	x0, x21
    96b8:	str	x19, [x20, #24]
    96bc:	str	x8, [x20]
    96c0:	str	x20, [x19, #16]
    96c4:	bl	cd1c <gcc_cp_fe_context@@Base+0x3a20>
    96c8:	ldr	x8, [x19, #16]
    96cc:	adrp	x1, 14000 <xexit@@Base+0x18>
    96d0:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd4>
    96d4:	add	x1, x1, #0x1a9
    96d8:	add	x0, x8, #0x10
    96dc:	add	x2, x2, #0xc98
    96e0:	bl	cd1c <gcc_cp_fe_context@@Base+0x3a20>
    96e4:	ldr	x8, [x19, #16]
    96e8:	adrp	x1, 14000 <xexit@@Base+0x18>
    96ec:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd4>
    96f0:	add	x1, x1, #0x27a
    96f4:	add	x0, x8, #0x10
    96f8:	add	x2, x2, #0xd48
    96fc:	bl	cd1c <gcc_cp_fe_context@@Base+0x3a20>
    9700:	ldr	x8, [x19, #16]
    9704:	adrp	x1, 14000 <xexit@@Base+0x18>
    9708:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1dd4>
    970c:	add	x1, x1, #0x286
    9710:	add	x0, x8, #0x10
    9714:	add	x2, x2, #0xda8
    9718:	bl	cd1c <gcc_cp_fe_context@@Base+0x3a20>
    971c:	ldp	x22, x8, [x19, #80]
    9720:	adrp	x1, 28000 <xexit@@Base+0x14018>
    9724:	ldr	x1, [x1, #3280]
    9728:	sub	x23, x8, x22
    972c:	asr	x21, x23, #5
    9730:	add	x8, x21, #0x1
    9734:	lsl	x9, x8, #3
    9738:	cmp	xzr, x8, lsr #61
    973c:	csinv	x0, x9, xzr, eq  // eq = none
    9740:	bl	5850 <_ZnamRKSt9nothrow_t@plt>
    9744:	cbz	x0, 94b0 <gcc_cp_fe_context@@Base+0x1b4>
    9748:	mov	x20, x0
    974c:	cbz	x23, 9778 <gcc_cp_fe_context@@Base+0x47c>
    9750:	mov	x8, xzr
    9754:	mov	w9, #0x1                   	// #1
    9758:	lsl	x10, x8, #5
    975c:	ldr	x10, [x22, x10]
    9760:	cmp	x21, w9, uxtw
    9764:	str	x10, [x20, x8, lsl #3]
    9768:	add	w10, w9, #0x1
    976c:	mov	w8, w9
    9770:	mov	w9, w10
    9774:	b.hi	9758 <gcc_cp_fe_context@@Base+0x45c>  // b.pmore
    9778:	str	xzr, [x20, x21, lsl #3]
    977c:	bl	5780 <fork@plt>
    9780:	cmn	w0, #0x1
    9784:	b.eq	97d4 <gcc_cp_fe_context@@Base+0x4d8>  // b.none
    9788:	mov	w21, w0
    978c:	cbz	w0, 984c <gcc_cp_fe_context@@Base+0x550>
    9790:	ldr	w0, [x29, #28]
    9794:	bl	5790 <close@plt>
    9798:	ldur	w0, [x29, #-4]
    979c:	bl	5790 <close@plt>
    97a0:	ldr	x0, [x19, #16]
    97a4:	mov	w1, #0x48                  	// #72
    97a8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    97ac:	cbz	w0, 97f4 <gcc_cp_fe_context@@Base+0x4f8>
    97b0:	ldr	x0, [x19, #16]
    97b4:	mov	x1, xzr
    97b8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    97bc:	cbz	w0, 97f4 <gcc_cp_fe_context@@Base+0x4f8>
    97c0:	ldr	x0, [x19, #16]
    97c4:	mov	w1, wzr
    97c8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    97cc:	mov	w19, w0
    97d0:	b	97f8 <gcc_cp_fe_context@@Base+0x4fc>
    97d4:	ldr	w0, [x29, #24]
    97d8:	bl	5790 <close@plt>
    97dc:	ldr	w0, [x29, #28]
    97e0:	bl	5790 <close@plt>
    97e4:	ldur	w0, [x29, #-8]
    97e8:	bl	5790 <close@plt>
    97ec:	ldur	w0, [x29, #-4]
    97f0:	b	94a8 <gcc_cp_fe_context@@Base+0x1ac>
    97f4:	mov	w19, wzr
    97f8:	ldr	w0, [x29, #24]
    97fc:	bl	5790 <close@plt>
    9800:	ldur	w0, [x29, #-8]
    9804:	bl	5790 <close@plt>
    9808:	add	x1, sp, #0x10
    980c:	mov	w0, w21
    9810:	mov	w2, wzr
    9814:	bl	5470 <waitpid@plt>
    9818:	cmn	w0, #0x1
    981c:	b.ne	9830 <gcc_cp_fe_context@@Base+0x534>  // b.any
    9820:	bl	5740 <__errno_location@plt>
    9824:	ldr	w8, [x0]
    9828:	cmp	w8, #0x4
    982c:	b.ne	94ac <gcc_cp_fe_context@@Base+0x1b0>  // b.any
    9830:	ldrh	w8, [sp, #16]
    9834:	tst	w8, #0xffffff7f
    9838:	b.ne	94ac <gcc_cp_fe_context@@Base+0x1b0>  // b.any
    983c:	cmp	w19, #0x0
    9840:	cset	w0, ne  // ne = any
    9844:	b	94b0 <gcc_cp_fe_context@@Base+0x1b4>
    9848:	bl	5820 <abort@plt>
    984c:	ldur	w0, [x29, #-4]
    9850:	mov	w1, #0x1                   	// #1
    9854:	bl	5400 <dup2@plt>
    9858:	ldur	w0, [x29, #-4]
    985c:	mov	w1, #0x2                   	// #2
    9860:	bl	5400 <dup2@plt>
    9864:	ldur	w0, [x29, #-8]
    9868:	bl	5790 <close@plt>
    986c:	ldur	w0, [x29, #-4]
    9870:	bl	5790 <close@plt>
    9874:	ldr	w0, [x29, #24]
    9878:	bl	5790 <close@plt>
    987c:	ldr	x0, [x20]
    9880:	mov	x1, x20
    9884:	bl	53c0 <execvp@plt>
    9888:	mov	w0, #0x7f                  	// #127
    988c:	bl	5570 <_exit@plt>
    9890:	ldr	x8, [sp, #16]
    9894:	cmp	x8, x21
    9898:	b	98e4 <gcc_cp_fe_context@@Base+0x5e8>
    989c:	b	98f8 <gcc_cp_fe_context@@Base+0x5fc>
    98a0:	mov	x19, x0
    98a4:	mov	x0, x20
    98a8:	b	98f0 <gcc_cp_fe_context@@Base+0x5f4>
    98ac:	ldr	x8, [sp, #16]
    98b0:	add	x9, x21, #0x10
    98b4:	cmp	x8, x9
    98b8:	b	98e4 <gcc_cp_fe_context@@Base+0x5e8>
    98bc:	b	98f8 <gcc_cp_fe_context@@Base+0x5fc>
    98c0:	b	98d0 <gcc_cp_fe_context@@Base+0x5d4>
    98c4:	b	98f8 <gcc_cp_fe_context@@Base+0x5fc>
    98c8:	b	98d0 <gcc_cp_fe_context@@Base+0x5d4>
    98cc:	b	98f8 <gcc_cp_fe_context@@Base+0x5fc>
    98d0:	ldr	x8, [sp, #16]
    98d4:	b	98e0 <gcc_cp_fe_context@@Base+0x5e4>
    98d8:	b	98f8 <gcc_cp_fe_context@@Base+0x5fc>
    98dc:	ldr	x8, [sp, #48]
    98e0:	cmp	x8, x22
    98e4:	mov	x19, x0
    98e8:	b.eq	98fc <gcc_cp_fe_context@@Base+0x600>  // b.none
    98ec:	mov	x0, x8
    98f0:	bl	5650 <_ZdlPv@plt>
    98f4:	b	98fc <gcc_cp_fe_context@@Base+0x600>
    98f8:	mov	x19, x0
    98fc:	mov	x0, x19
    9900:	bl	58d0 <_Unwind_Resume@plt>
    9904:	sub	sp, sp, #0x80
    9908:	stp	x29, x30, [sp, #64]
    990c:	str	x23, [sp, #80]
    9910:	stp	x22, x21, [sp, #96]
    9914:	stp	x20, x19, [sp, #112]
    9918:	add	x29, sp, #0x40
    991c:	add	x8, sp, #0x20
    9920:	add	x23, x8, #0x10
    9924:	stp	x23, xzr, [sp, #32]
    9928:	strb	wzr, [sp, #48]
    992c:	mov	x20, x0
    9930:	ldr	x0, [x0, #144]
    9934:	mov	x19, x2
    9938:	mov	w21, w1
    993c:	ldr	x8, [x0]
    9940:	ldr	x8, [x8]
    9944:	add	x1, sp, #0x20
    9948:	blr	x8
    994c:	mov	x22, x0
    9950:	cbnz	x0, 99b4 <gcc_cp_fe_context@@Base+0x6b8>
    9954:	add	x20, x20, #0x50
    9958:	add	x1, sp, #0x20
    995c:	mov	x0, x20
    9960:	bl	54f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    9964:	cmp	w21, #0x1
    9968:	b.lt	99b0 <gcc_cp_fe_context@@Base+0x6b4>  // b.tstop
    996c:	mov	x8, sp
    9970:	add	x22, x8, #0x10
    9974:	mov	w21, w21
    9978:	ldr	x1, [x19]
    997c:	mov	x0, sp
    9980:	add	x2, x29, #0x18
    9984:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    9988:	mov	x1, sp
    998c:	mov	x0, x20
    9990:	bl	5910 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    9994:	ldr	x0, [sp]
    9998:	cmp	x0, x22
    999c:	b.eq	99a4 <gcc_cp_fe_context@@Base+0x6a8>  // b.none
    99a0:	bl	5650 <_ZdlPv@plt>
    99a4:	subs	x21, x21, #0x1
    99a8:	add	x19, x19, #0x8
    99ac:	b.ne	9978 <gcc_cp_fe_context@@Base+0x67c>  // b.any
    99b0:	mov	x22, xzr
    99b4:	ldr	x0, [sp, #32]
    99b8:	cmp	x0, x23
    99bc:	b.eq	99c4 <gcc_cp_fe_context@@Base+0x6c8>  // b.none
    99c0:	bl	5650 <_ZdlPv@plt>
    99c4:	mov	x0, x22
    99c8:	ldp	x20, x19, [sp, #112]
    99cc:	ldp	x22, x21, [sp, #96]
    99d0:	ldr	x23, [sp, #80]
    99d4:	ldp	x29, x30, [sp, #64]
    99d8:	add	sp, sp, #0x80
    99dc:	ret
    99e0:	b	9a00 <gcc_cp_fe_context@@Base+0x704>
    99e4:	ldr	x8, [sp]
    99e8:	mov	x19, x0
    99ec:	cmp	x8, x22
    99f0:	b.eq	9a04 <gcc_cp_fe_context@@Base+0x708>  // b.none
    99f4:	mov	x0, x8
    99f8:	bl	5650 <_ZdlPv@plt>
    99fc:	b	9a04 <gcc_cp_fe_context@@Base+0x708>
    9a00:	mov	x19, x0
    9a04:	ldr	x0, [sp, #32]
    9a08:	cmp	x0, x23
    9a0c:	b.eq	9a14 <gcc_cp_fe_context@@Base+0x718>  // b.none
    9a10:	bl	5650 <_ZdlPv@plt>
    9a14:	mov	x0, x19
    9a18:	bl	58d0 <_Unwind_Resume@plt>
    9a1c:	sub	sp, sp, #0x50
    9a20:	stp	x29, x30, [sp, #32]
    9a24:	str	x21, [sp, #48]
    9a28:	stp	x20, x19, [sp, #64]
    9a2c:	add	x29, sp, #0x20
    9a30:	mov	x20, x0
    9a34:	ldr	x0, [x0, #144]
    9a38:	mov	x21, x1
    9a3c:	cbz	x0, 9a4c <gcc_cp_fe_context@@Base+0x750>
    9a40:	ldr	x8, [x0]
    9a44:	ldr	x8, [x8, #16]
    9a48:	blr	x8
    9a4c:	mov	w0, #0x30                  	// #48
    9a50:	bl	5660 <_Znwm@plt>
    9a54:	mov	x19, x0
    9a58:	mov	x0, sp
    9a5c:	add	x2, x29, #0x18
    9a60:	mov	x1, x21
    9a64:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    9a68:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9a6c:	ldp	x1, x9, [sp]
    9a70:	add	x8, x8, #0x8f8
    9a74:	stp	x8, x20, [x19]
    9a78:	add	x8, x19, #0x20
    9a7c:	mov	x0, x19
    9a80:	str	x8, [x0, #16]!
    9a84:	add	x2, x1, x9
    9a88:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    9a8c:	str	x19, [x20, #144]
    9a90:	ldr	x0, [sp]
    9a94:	mov	x8, sp
    9a98:	add	x8, x8, #0x10
    9a9c:	cmp	x0, x8
    9aa0:	b.eq	9aa8 <gcc_cp_fe_context@@Base+0x7ac>  // b.none
    9aa4:	bl	5650 <_ZdlPv@plt>
    9aa8:	ldp	x20, x19, [sp, #64]
    9aac:	ldr	x21, [sp, #48]
    9ab0:	ldp	x29, x30, [sp, #32]
    9ab4:	mov	x0, xzr
    9ab8:	add	sp, sp, #0x50
    9abc:	ret
    9ac0:	ldr	x8, [sp]
    9ac4:	mov	x9, sp
    9ac8:	add	x9, x9, #0x10
    9acc:	mov	x20, x0
    9ad0:	cmp	x8, x9
    9ad4:	b.eq	9ae8 <gcc_cp_fe_context@@Base+0x7ec>  // b.none
    9ad8:	mov	x0, x8
    9adc:	bl	5650 <_ZdlPv@plt>
    9ae0:	b	9ae8 <gcc_cp_fe_context@@Base+0x7ec>
    9ae4:	mov	x20, x0
    9ae8:	mov	x0, x19
    9aec:	bl	5650 <_ZdlPv@plt>
    9af0:	mov	x0, x20
    9af4:	bl	58d0 <_Unwind_Resume@plt>
    9af8:	sub	sp, sp, #0x50
    9afc:	stp	x29, x30, [sp, #32]
    9b00:	str	x21, [sp, #48]
    9b04:	stp	x20, x19, [sp, #64]
    9b08:	add	x29, sp, #0x20
    9b0c:	mov	x20, x0
    9b10:	ldr	x0, [x0, #144]
    9b14:	mov	x21, x1
    9b18:	cbz	x0, 9b28 <gcc_cp_fe_context@@Base+0x82c>
    9b1c:	ldr	x8, [x0]
    9b20:	ldr	x8, [x8, #16]
    9b24:	blr	x8
    9b28:	mov	w0, #0x30                  	// #48
    9b2c:	bl	5660 <_Znwm@plt>
    9b30:	mov	x19, x0
    9b34:	mov	x0, sp
    9b38:	add	x2, x29, #0x18
    9b3c:	mov	x1, x21
    9b40:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    9b44:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9b48:	ldp	x1, x9, [sp]
    9b4c:	add	x8, x8, #0x938
    9b50:	stp	x8, x20, [x19]
    9b54:	add	x8, x19, #0x20
    9b58:	mov	x0, x19
    9b5c:	str	x8, [x0, #16]!
    9b60:	add	x2, x1, x9
    9b64:	bl	54c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    9b68:	str	x19, [x20, #144]
    9b6c:	ldr	x0, [sp]
    9b70:	mov	x8, sp
    9b74:	add	x8, x8, #0x10
    9b78:	cmp	x0, x8
    9b7c:	b.eq	9b84 <gcc_cp_fe_context@@Base+0x888>  // b.none
    9b80:	bl	5650 <_ZdlPv@plt>
    9b84:	ldp	x20, x19, [sp, #64]
    9b88:	ldr	x21, [sp, #48]
    9b8c:	ldp	x29, x30, [sp, #32]
    9b90:	mov	x0, xzr
    9b94:	add	sp, sp, #0x50
    9b98:	ret
    9b9c:	ldr	x8, [sp]
    9ba0:	mov	x9, sp
    9ba4:	add	x9, x9, #0x10
    9ba8:	mov	x20, x0
    9bac:	cmp	x8, x9
    9bb0:	b.eq	9bc4 <gcc_cp_fe_context@@Base+0x8c8>  // b.none
    9bb4:	mov	x0, x8
    9bb8:	bl	5650 <_ZdlPv@plt>
    9bbc:	b	9bc4 <gcc_cp_fe_context@@Base+0x8c8>
    9bc0:	mov	x20, x0
    9bc4:	mov	x0, x19
    9bc8:	bl	5650 <_ZdlPv@plt>
    9bcc:	mov	x0, x20
    9bd0:	bl	58d0 <_Unwind_Resume@plt>
    9bd4:	sub	sp, sp, #0x30
    9bd8:	stp	x29, x30, [sp, #16]
    9bdc:	stp	x20, x19, [sp, #32]
    9be0:	add	x29, sp, #0x10
    9be4:	mov	x19, x0
    9be8:	str	xzr, [sp]
    9bec:	mov	w1, #0x2                   	// #2
    9bf0:	bl	d0a8 <gcc_cp_fe_context@@Base+0x3dac>
    9bf4:	cbz	w0, 9c58 <gcc_cp_fe_context@@Base+0x95c>
    9bf8:	add	x1, sp, #0x8
    9bfc:	mov	x0, x19
    9c00:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    9c04:	cbz	w0, 9c58 <gcc_cp_fe_context@@Base+0x95c>
    9c08:	ldr	w20, [sp, #8]
    9c0c:	mov	x1, sp
    9c10:	mov	x0, x19
    9c14:	bl	d1dc <gcc_cp_fe_context@@Base+0x3ee0>
    9c18:	cbz	w0, 9c58 <gcc_cp_fe_context@@Base+0x95c>
    9c1c:	ldr	x1, [x19, #24]
    9c20:	ldr	x3, [sp]
    9c24:	ldr	x0, [x1, #56]
    9c28:	ldr	x8, [x1, #24]
    9c2c:	mov	w2, w20
    9c30:	blr	x8
    9c34:	mov	w1, #0x52                  	// #82
    9c38:	mov	x0, x19
    9c3c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    9c40:	cbz	w0, 9c58 <gcc_cp_fe_context@@Base+0x95c>
    9c44:	mov	w1, #0x1                   	// #1
    9c48:	mov	x0, x19
    9c4c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    9c50:	mov	w19, w0
    9c54:	b	9c5c <gcc_cp_fe_context@@Base+0x960>
    9c58:	mov	w19, wzr
    9c5c:	ldr	x0, [sp]
    9c60:	cbz	x0, 9c68 <gcc_cp_fe_context@@Base+0x96c>
    9c64:	bl	5730 <_ZdaPv@plt>
    9c68:	mov	w0, w19
    9c6c:	ldp	x20, x19, [sp, #32]
    9c70:	ldp	x29, x30, [sp, #16]
    9c74:	add	sp, sp, #0x30
    9c78:	ret
    9c7c:	ldr	x8, [sp]
    9c80:	mov	x19, x0
    9c84:	cbz	x8, 9c90 <gcc_cp_fe_context@@Base+0x994>
    9c88:	mov	x0, x8
    9c8c:	bl	5730 <_ZdaPv@plt>
    9c90:	mov	x0, x19
    9c94:	bl	58d0 <_Unwind_Resume@plt>
    9c98:	sub	sp, sp, #0x30
    9c9c:	stp	x29, x30, [sp, #16]
    9ca0:	stp	x20, x19, [sp, #32]
    9ca4:	add	x29, sp, #0x10
    9ca8:	mov	x19, x0
    9cac:	str	xzr, [sp, #8]
    9cb0:	mov	w1, #0x1                   	// #1
    9cb4:	bl	d0a8 <gcc_cp_fe_context@@Base+0x3dac>
    9cb8:	cbz	w0, 9d08 <gcc_cp_fe_context@@Base+0xa0c>
    9cbc:	add	x1, sp, #0x8
    9cc0:	mov	x0, x19
    9cc4:	bl	d1dc <gcc_cp_fe_context@@Base+0x3ee0>
    9cc8:	cbz	w0, 9d08 <gcc_cp_fe_context@@Base+0xa0c>
    9ccc:	ldr	x1, [x19, #24]
    9cd0:	ldr	x2, [sp, #8]
    9cd4:	ldr	x0, [x1, #56]
    9cd8:	ldr	x8, [x1, #32]
    9cdc:	blr	x8
    9ce0:	mov	x20, x0
    9ce4:	mov	w1, #0x52                  	// #82
    9ce8:	mov	x0, x19
    9cec:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    9cf0:	cbz	w0, 9d08 <gcc_cp_fe_context@@Base+0xa0c>
    9cf4:	mov	x0, x19
    9cf8:	mov	x1, x20
    9cfc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    9d00:	mov	w19, w0
    9d04:	b	9d0c <gcc_cp_fe_context@@Base+0xa10>
    9d08:	mov	w19, wzr
    9d0c:	ldr	x0, [sp, #8]
    9d10:	cbz	x0, 9d18 <gcc_cp_fe_context@@Base+0xa1c>
    9d14:	bl	5730 <_ZdaPv@plt>
    9d18:	mov	w0, w19
    9d1c:	ldp	x20, x19, [sp, #32]
    9d20:	ldp	x29, x30, [sp, #16]
    9d24:	add	sp, sp, #0x30
    9d28:	ret
    9d2c:	ldr	x8, [sp, #8]
    9d30:	mov	x19, x0
    9d34:	cbz	x8, 9d40 <gcc_cp_fe_context@@Base+0xa44>
    9d38:	mov	x0, x8
    9d3c:	bl	5730 <_ZdaPv@plt>
    9d40:	mov	x0, x19
    9d44:	bl	58d0 <_Unwind_Resume@plt>
    9d48:	stp	x29, x30, [sp, #-32]!
    9d4c:	str	x19, [sp, #16]
    9d50:	mov	x29, sp
    9d54:	mov	x1, xzr
    9d58:	mov	x19, x0
    9d5c:	bl	d0a8 <gcc_cp_fe_context@@Base+0x3dac>
    9d60:	cbz	w0, 9d98 <gcc_cp_fe_context@@Base+0xa9c>
    9d64:	ldr	x1, [x19, #24]
    9d68:	ldr	x8, [x1, #40]
    9d6c:	ldr	x0, [x1, #56]
    9d70:	blr	x8
    9d74:	mov	w1, #0x52                  	// #82
    9d78:	mov	x0, x19
    9d7c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    9d80:	cbz	w0, 9d98 <gcc_cp_fe_context@@Base+0xa9c>
    9d84:	mov	x0, x19
    9d88:	ldr	x19, [sp, #16]
    9d8c:	mov	w1, #0x1                   	// #1
    9d90:	ldp	x29, x30, [sp], #32
    9d94:	b	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    9d98:	ldr	x19, [sp, #16]
    9d9c:	mov	w0, wzr
    9da0:	ldp	x29, x30, [sp], #32
    9da4:	ret
    9da8:	stp	x29, x30, [sp, #-32]!
    9dac:	str	x19, [sp, #16]
    9db0:	mov	x29, sp
    9db4:	mov	x1, xzr
    9db8:	mov	x19, x0
    9dbc:	bl	d0a8 <gcc_cp_fe_context@@Base+0x3dac>
    9dc0:	cbz	w0, 9df4 <gcc_cp_fe_context@@Base+0xaf8>
    9dc4:	ldr	x1, [x19, #24]
    9dc8:	ldp	x8, x0, [x1, #48]
    9dcc:	blr	x8
    9dd0:	mov	w1, #0x52                  	// #82
    9dd4:	mov	x0, x19
    9dd8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    9ddc:	cbz	w0, 9df4 <gcc_cp_fe_context@@Base+0xaf8>
    9de0:	mov	x0, x19
    9de4:	ldr	x19, [sp, #16]
    9de8:	mov	w1, #0x1                   	// #1
    9dec:	ldp	x29, x30, [sp], #32
    9df0:	b	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    9df4:	ldr	x19, [sp, #16]
    9df8:	mov	w0, wzr
    9dfc:	ldp	x29, x30, [sp], #32
    9e00:	ret
    9e04:	stp	x1, x2, [x0, #24]
    9e08:	stp	x3, x4, [x0, #40]
    9e0c:	str	x5, [x0, #56]
    9e10:	ret
    9e14:	ret
    9e18:	b	5650 <_ZdlPv@plt>
    9e1c:	mov	x8, x0
    9e20:	ldr	x0, [x0, #16]
    9e24:	adrp	x9, 28000 <xexit@@Base+0x14018>
    9e28:	add	x10, x8, #0x20
    9e2c:	add	x9, x9, #0x8f8
    9e30:	cmp	x0, x10
    9e34:	str	x9, [x8]
    9e38:	b.eq	9e40 <gcc_cp_fe_context@@Base+0xb44>  // b.none
    9e3c:	b	5650 <_ZdlPv@plt>
    9e40:	ret
    9e44:	stp	x29, x30, [sp, #-32]!
    9e48:	str	x19, [sp, #16]
    9e4c:	mov	x29, sp
    9e50:	mov	x19, x0
    9e54:	ldr	x0, [x0, #16]
    9e58:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9e5c:	add	x9, x19, #0x20
    9e60:	add	x8, x8, #0x8f8
    9e64:	cmp	x0, x9
    9e68:	str	x8, [x19]
    9e6c:	b.eq	9e74 <gcc_cp_fe_context@@Base+0xb78>  // b.none
    9e70:	bl	5650 <_ZdlPv@plt>
    9e74:	mov	x0, x19
    9e78:	ldr	x19, [sp, #16]
    9e7c:	ldp	x29, x30, [sp], #32
    9e80:	b	5650 <_ZdlPv@plt>
    9e84:	mov	x8, x0
    9e88:	ldr	x0, [x0, #16]
    9e8c:	adrp	x9, 28000 <xexit@@Base+0x14018>
    9e90:	add	x10, x8, #0x20
    9e94:	add	x9, x9, #0x938
    9e98:	cmp	x0, x10
    9e9c:	str	x9, [x8]
    9ea0:	b.eq	9ea8 <gcc_cp_fe_context@@Base+0xbac>  // b.none
    9ea4:	b	5650 <_ZdlPv@plt>
    9ea8:	ret
    9eac:	stp	x29, x30, [sp, #-32]!
    9eb0:	str	x19, [sp, #16]
    9eb4:	mov	x29, sp
    9eb8:	mov	x19, x0
    9ebc:	ldr	x0, [x0, #16]
    9ec0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9ec4:	add	x9, x19, #0x20
    9ec8:	add	x8, x8, #0x938
    9ecc:	cmp	x0, x9
    9ed0:	str	x8, [x19]
    9ed4:	b.eq	9edc <gcc_cp_fe_context@@Base+0xbe0>  // b.none
    9ed8:	bl	5650 <_ZdlPv@plt>
    9edc:	mov	x0, x19
    9ee0:	ldr	x19, [sp, #16]
    9ee4:	ldp	x29, x30, [sp], #32
    9ee8:	b	5650 <_ZdlPv@plt>
    9eec:	stp	x29, x30, [sp, #-32]!
    9ef0:	str	x19, [sp, #16]
    9ef4:	mov	x29, sp
    9ef8:	mov	x19, x0
    9efc:	bl	cd98 <gcc_cp_fe_context@@Base+0x3a9c>
    9f00:	mov	x0, x19
    9f04:	ldr	x19, [sp, #16]
    9f08:	ldp	x29, x30, [sp], #32
    9f0c:	b	5650 <_ZdlPv@plt>
    9f10:	ldr	x8, [x0, #24]
    9f14:	ldp	x2, x0, [x8, #64]
    9f18:	br	x2
    9f1c:	sub	sp, sp, #0x20
    9f20:	stp	x29, x30, [sp, #16]
    9f24:	add	x29, sp, #0x10
    9f28:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9f2c:	ldr	x0, [x0, #16]
    9f30:	ldr	x8, [x8, #3464]
    9f34:	mov	x3, x1
    9f38:	sub	x2, x29, #0x4
    9f3c:	ldr	x8, [x8]
    9f40:	mov	x1, x8
    9f44:	bl	b230 <gcc_cp_fe_context@@Base+0x1f34>
    9f48:	ldur	w8, [x29, #-4]
    9f4c:	ldp	x29, x30, [sp, #16]
    9f50:	cmp	w0, #0x0
    9f54:	csel	w0, wzr, w8, eq  // eq = none
    9f58:	add	sp, sp, #0x20
    9f5c:	ret
    9f60:	sub	sp, sp, #0x20
    9f64:	stp	x29, x30, [sp, #16]
    9f68:	add	x29, sp, #0x10
    9f6c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9f70:	ldr	x0, [x0, #16]
    9f74:	ldr	x8, [x8, #3592]
    9f78:	mov	x3, x1
    9f7c:	sub	x2, x29, #0x4
    9f80:	ldr	x8, [x8]
    9f84:	mov	x1, x8
    9f88:	bl	81b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf84>
    9f8c:	ldur	w8, [x29, #-4]
    9f90:	ldp	x29, x30, [sp, #16]
    9f94:	cmp	w0, #0x0
    9f98:	csel	w0, wzr, w8, eq  // eq = none
    9f9c:	add	sp, sp, #0x20
    9fa0:	ret
    9fa4:	sub	sp, sp, #0x20
    9fa8:	stp	x29, x30, [sp, #16]
    9fac:	add	x29, sp, #0x10
    9fb0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9fb4:	ldr	x0, [x0, #16]
    9fb8:	ldr	x8, [x8, #3504]
    9fbc:	mov	x3, x1
    9fc0:	sub	x2, x29, #0x4
    9fc4:	ldr	x8, [x8]
    9fc8:	mov	x1, x8
    9fcc:	bl	81b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf84>
    9fd0:	ldur	w8, [x29, #-4]
    9fd4:	ldp	x29, x30, [sp, #16]
    9fd8:	cmp	w0, #0x0
    9fdc:	csel	w0, wzr, w8, eq  // eq = none
    9fe0:	add	sp, sp, #0x20
    9fe4:	ret
    9fe8:	sub	sp, sp, #0x20
    9fec:	stp	x29, x30, [sp, #16]
    9ff0:	add	x29, sp, #0x10
    9ff4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    9ff8:	ldr	x0, [x0, #16]
    9ffc:	ldr	x8, [x8, #3496]
    a000:	mov	x4, x2
    a004:	mov	x3, x1
    a008:	sub	x2, x29, #0x4
    a00c:	ldr	x8, [x8]
    a010:	mov	x1, x8
    a014:	bl	b2d0 <gcc_cp_fe_context@@Base+0x1fd4>
    a018:	ldur	w8, [x29, #-4]
    a01c:	ldp	x29, x30, [sp, #16]
    a020:	cmp	w0, #0x0
    a024:	csel	w0, wzr, w8, eq  // eq = none
    a028:	add	sp, sp, #0x20
    a02c:	ret
    a030:	sub	sp, sp, #0x20
    a034:	stp	x29, x30, [sp, #16]
    a038:	add	x29, sp, #0x10
    a03c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a040:	ldr	x0, [x0, #16]
    a044:	ldr	x8, [x8, #3616]
    a048:	sub	x2, x29, #0x4
    a04c:	ldr	x1, [x8]
    a050:	bl	b384 <gcc_cp_fe_context@@Base+0x2088>
    a054:	ldur	w8, [x29, #-4]
    a058:	ldp	x29, x30, [sp, #16]
    a05c:	cmp	w0, #0x0
    a060:	csel	w0, wzr, w8, eq  // eq = none
    a064:	add	sp, sp, #0x20
    a068:	ret
    a06c:	sub	sp, sp, #0x20
    a070:	stp	x29, x30, [sp, #16]
    a074:	add	x29, sp, #0x10
    a078:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a07c:	ldr	x0, [x0, #16]
    a080:	ldr	x8, [x8, #4032]
    a084:	add	x2, sp, #0x8
    a088:	ldr	x1, [x8]
    a08c:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    a090:	ldr	x8, [sp, #8]
    a094:	ldp	x29, x30, [sp, #16]
    a098:	cmp	w0, #0x0
    a09c:	csel	x0, xzr, x8, eq  // eq = none
    a0a0:	add	sp, sp, #0x20
    a0a4:	ret
    a0a8:	sub	sp, sp, #0x20
    a0ac:	stp	x29, x30, [sp, #16]
    a0b0:	add	x29, sp, #0x10
    a0b4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a0b8:	ldr	x0, [x0, #16]
    a0bc:	ldr	x8, [x8, #3816]
    a0c0:	sub	x2, x29, #0x4
    a0c4:	ldr	x1, [x8]
    a0c8:	bl	b384 <gcc_cp_fe_context@@Base+0x2088>
    a0cc:	ldur	w8, [x29, #-4]
    a0d0:	ldp	x29, x30, [sp, #16]
    a0d4:	cmp	w0, #0x0
    a0d8:	csel	w0, wzr, w8, eq  // eq = none
    a0dc:	add	sp, sp, #0x20
    a0e0:	ret
    a0e4:	sub	sp, sp, #0x20
    a0e8:	stp	x29, x30, [sp, #16]
    a0ec:	add	x29, sp, #0x10
    a0f0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a0f4:	ldr	x0, [x0, #16]
    a0f8:	ldr	x8, [x8, #3888]
    a0fc:	mov	x3, x1
    a100:	sub	x2, x29, #0x4
    a104:	ldr	x8, [x8]
    a108:	mov	x1, x8
    a10c:	bl	81b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf84>
    a110:	ldur	w8, [x29, #-4]
    a114:	ldp	x29, x30, [sp, #16]
    a118:	cmp	w0, #0x0
    a11c:	csel	w0, wzr, w8, eq  // eq = none
    a120:	add	sp, sp, #0x20
    a124:	ret
    a128:	sub	sp, sp, #0x20
    a12c:	stp	x29, x30, [sp, #16]
    a130:	add	x29, sp, #0x10
    a134:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a138:	ldr	x0, [x0, #16]
    a13c:	ldr	x8, [x8, #3736]
    a140:	mov	x4, x2
    a144:	mov	x3, x1
    a148:	sub	x2, x29, #0x4
    a14c:	ldr	x8, [x8]
    a150:	mov	x1, x8
    a154:	bl	b408 <gcc_cp_fe_context@@Base+0x210c>
    a158:	ldur	w8, [x29, #-4]
    a15c:	ldp	x29, x30, [sp, #16]
    a160:	cmp	w0, #0x0
    a164:	csel	w0, wzr, w8, eq  // eq = none
    a168:	add	sp, sp, #0x20
    a16c:	ret
    a170:	sub	sp, sp, #0x20
    a174:	stp	x29, x30, [sp, #16]
    a178:	add	x29, sp, #0x10
    a17c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a180:	ldr	x0, [x0, #16]
    a184:	ldr	x8, [x8, #3360]
    a188:	mov	x4, x2
    a18c:	mov	w3, w1
    a190:	sub	x2, x29, #0x4
    a194:	ldr	x8, [x8]
    a198:	mov	x1, x8
    a19c:	bl	b4bc <gcc_cp_fe_context@@Base+0x21c0>
    a1a0:	ldur	w8, [x29, #-4]
    a1a4:	ldp	x29, x30, [sp, #16]
    a1a8:	cmp	w0, #0x0
    a1ac:	csel	w0, wzr, w8, eq  // eq = none
    a1b0:	add	sp, sp, #0x20
    a1b4:	ret
    a1b8:	sub	sp, sp, #0x30
    a1bc:	stp	x29, x30, [sp, #32]
    a1c0:	add	x29, sp, #0x20
    a1c4:	adrp	x10, 28000 <xexit@@Base+0x14018>
    a1c8:	ldr	x0, [x0, #16]
    a1cc:	ldr	x10, [x10, #3456]
    a1d0:	mov	x8, x5
    a1d4:	mov	x9, x4
    a1d8:	mov	x5, x3
    a1dc:	ldr	x10, [x10]
    a1e0:	mov	w4, w2
    a1e4:	mov	x3, x1
    a1e8:	str	w7, [sp, #8]
    a1ec:	sub	x2, x29, #0x8
    a1f0:	str	x6, [sp]
    a1f4:	mov	x1, x10
    a1f8:	mov	x6, x9
    a1fc:	mov	x7, x8
    a200:	bl	b570 <gcc_cp_fe_context@@Base+0x2274>
    a204:	ldur	x8, [x29, #-8]
    a208:	ldp	x29, x30, [sp, #32]
    a20c:	cmp	w0, #0x0
    a210:	csel	x0, xzr, x8, eq  // eq = none
    a214:	add	sp, sp, #0x30
    a218:	ret
    a21c:	sub	sp, sp, #0x20
    a220:	stp	x29, x30, [sp, #16]
    a224:	add	x29, sp, #0x10
    a228:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a22c:	ldr	x0, [x0, #16]
    a230:	ldr	x8, [x8, #3744]
    a234:	mov	x5, x3
    a238:	mov	x4, x2
    a23c:	mov	x3, x1
    a240:	ldr	x8, [x8]
    a244:	add	x2, sp, #0x8
    a248:	mov	x1, x8
    a24c:	bl	b694 <gcc_cp_fe_context@@Base+0x2398>
    a250:	ldr	x8, [sp, #8]
    a254:	ldp	x29, x30, [sp, #16]
    a258:	cmp	w0, #0x0
    a25c:	csel	x0, xzr, x8, eq  // eq = none
    a260:	add	sp, sp, #0x20
    a264:	ret
    a268:	sub	sp, sp, #0x20
    a26c:	stp	x29, x30, [sp, #16]
    a270:	add	x29, sp, #0x10
    a274:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a278:	ldr	x0, [x0, #16]
    a27c:	ldr	x8, [x8, #3208]
    a280:	mov	x3, x1
    a284:	add	x2, sp, #0x8
    a288:	ldr	x8, [x8]
    a28c:	mov	x1, x8
    a290:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    a294:	ldr	x8, [sp, #8]
    a298:	ldp	x29, x30, [sp, #16]
    a29c:	cmp	w0, #0x0
    a2a0:	csel	x0, xzr, x8, eq  // eq = none
    a2a4:	add	sp, sp, #0x20
    a2a8:	ret
    a2ac:	sub	sp, sp, #0x20
    a2b0:	stp	x29, x30, [sp, #16]
    a2b4:	add	x29, sp, #0x10
    a2b8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a2bc:	ldr	x0, [x0, #16]
    a2c0:	ldr	x8, [x8, #3696]
    a2c4:	mov	x3, x1
    a2c8:	add	x2, sp, #0x8
    a2cc:	ldr	x8, [x8]
    a2d0:	mov	x1, x8
    a2d4:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    a2d8:	ldr	x8, [sp, #8]
    a2dc:	ldp	x29, x30, [sp, #16]
    a2e0:	cmp	w0, #0x0
    a2e4:	csel	x0, xzr, x8, eq  // eq = none
    a2e8:	add	sp, sp, #0x20
    a2ec:	ret
    a2f0:	sub	sp, sp, #0x20
    a2f4:	stp	x29, x30, [sp, #16]
    a2f8:	add	x29, sp, #0x10
    a2fc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a300:	ldr	x0, [x0, #16]
    a304:	ldr	x8, [x8, #3872]
    a308:	mov	x4, x2
    a30c:	mov	x3, x1
    a310:	sub	x2, x29, #0x4
    a314:	ldr	x8, [x8]
    a318:	mov	x1, x8
    a31c:	bl	b2d0 <gcc_cp_fe_context@@Base+0x1fd4>
    a320:	ldur	w8, [x29, #-4]
    a324:	ldp	x29, x30, [sp, #16]
    a328:	cmp	w0, #0x0
    a32c:	csel	w0, wzr, w8, eq  // eq = none
    a330:	add	sp, sp, #0x20
    a334:	ret
    a338:	sub	sp, sp, #0x20
    a33c:	stp	x29, x30, [sp, #16]
    a340:	add	x29, sp, #0x10
    a344:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a348:	ldr	x0, [x0, #16]
    a34c:	ldr	x8, [x8, #3920]
    a350:	mov	x3, x1
    a354:	add	x2, sp, #0x8
    a358:	ldr	x8, [x8]
    a35c:	mov	x1, x8
    a360:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    a364:	ldr	x8, [sp, #8]
    a368:	ldp	x29, x30, [sp, #16]
    a36c:	cmp	w0, #0x0
    a370:	csel	x0, xzr, x8, eq  // eq = none
    a374:	add	sp, sp, #0x20
    a378:	ret
    a37c:	sub	sp, sp, #0x20
    a380:	stp	x29, x30, [sp, #16]
    a384:	add	x29, sp, #0x10
    a388:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a38c:	ldr	x0, [x0, #16]
    a390:	ldr	x8, [x8, #3336]
    a394:	mov	w4, w2
    a398:	mov	x3, x1
    a39c:	add	x2, sp, #0x8
    a3a0:	ldr	x8, [x8]
    a3a4:	mov	x1, x8
    a3a8:	bl	b764 <gcc_cp_fe_context@@Base+0x2468>
    a3ac:	ldr	x8, [sp, #8]
    a3b0:	ldp	x29, x30, [sp, #16]
    a3b4:	cmp	w0, #0x0
    a3b8:	csel	x0, xzr, x8, eq  // eq = none
    a3bc:	add	sp, sp, #0x20
    a3c0:	ret
    a3c4:	sub	sp, sp, #0x20
    a3c8:	stp	x29, x30, [sp, #16]
    a3cc:	add	x29, sp, #0x10
    a3d0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a3d4:	ldr	x0, [x0, #16]
    a3d8:	ldr	x8, [x8, #4024]
    a3dc:	mov	x4, x2
    a3e0:	mov	x3, x1
    a3e4:	add	x2, sp, #0x8
    a3e8:	ldr	x8, [x8]
    a3ec:	mov	x1, x8
    a3f0:	bl	b818 <gcc_cp_fe_context@@Base+0x251c>
    a3f4:	ldr	x8, [sp, #8]
    a3f8:	ldp	x29, x30, [sp, #16]
    a3fc:	cmp	w0, #0x0
    a400:	csel	x0, xzr, x8, eq  // eq = none
    a404:	add	sp, sp, #0x20
    a408:	ret
    a40c:	sub	sp, sp, #0x20
    a410:	stp	x29, x30, [sp, #16]
    a414:	add	x29, sp, #0x10
    a418:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a41c:	ldr	x0, [x0, #16]
    a420:	ldr	x8, [x8, #3856]
    a424:	sub	x2, x29, #0x4
    a428:	ldr	x1, [x8]
    a42c:	bl	b384 <gcc_cp_fe_context@@Base+0x2088>
    a430:	ldur	w8, [x29, #-4]
    a434:	ldp	x29, x30, [sp, #16]
    a438:	cmp	w0, #0x0
    a43c:	csel	w0, wzr, w8, eq  // eq = none
    a440:	add	sp, sp, #0x20
    a444:	ret
    a448:	sub	sp, sp, #0x20
    a44c:	stp	x29, x30, [sp, #16]
    a450:	add	x29, sp, #0x10
    a454:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a458:	ldr	x0, [x0, #16]
    a45c:	ldr	x8, [x8, #3624]
    a460:	mov	w7, w5
    a464:	mov	x6, x4
    a468:	mov	x5, x3
    a46c:	ldr	x8, [x8]
    a470:	mov	w4, w2
    a474:	mov	x3, x1
    a478:	add	x2, sp, #0x8
    a47c:	mov	x1, x8
    a480:	bl	b8cc <gcc_cp_fe_context@@Base+0x25d0>
    a484:	ldr	x8, [sp, #8]
    a488:	ldp	x29, x30, [sp, #16]
    a48c:	cmp	w0, #0x0
    a490:	csel	x0, xzr, x8, eq  // eq = none
    a494:	add	sp, sp, #0x20
    a498:	ret
    a49c:	sub	sp, sp, #0x20
    a4a0:	stp	x29, x30, [sp, #16]
    a4a4:	add	x29, sp, #0x10
    a4a8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a4ac:	ldr	x0, [x0, #16]
    a4b0:	ldr	x8, [x8, #3480]
    a4b4:	mov	w7, w5
    a4b8:	mov	x6, x4
    a4bc:	mov	x5, x3
    a4c0:	ldr	x8, [x8]
    a4c4:	mov	w4, w2
    a4c8:	mov	x3, x1
    a4cc:	add	x2, sp, #0x8
    a4d0:	mov	x1, x8
    a4d4:	bl	b8cc <gcc_cp_fe_context@@Base+0x25d0>
    a4d8:	ldr	x8, [sp, #8]
    a4dc:	ldp	x29, x30, [sp, #16]
    a4e0:	cmp	w0, #0x0
    a4e4:	csel	x0, xzr, x8, eq  // eq = none
    a4e8:	add	sp, sp, #0x20
    a4ec:	ret
    a4f0:	sub	sp, sp, #0x20
    a4f4:	stp	x29, x30, [sp, #16]
    a4f8:	add	x29, sp, #0x10
    a4fc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a500:	ldr	x0, [x0, #16]
    a504:	ldr	x8, [x8, #3256]
    a508:	mov	w7, w5
    a50c:	mov	x6, x4
    a510:	mov	x5, x3
    a514:	ldr	x8, [x8]
    a518:	mov	x4, x2
    a51c:	mov	x3, x1
    a520:	add	x2, sp, #0x8
    a524:	mov	x1, x8
    a528:	bl	b9cc <gcc_cp_fe_context@@Base+0x26d0>
    a52c:	ldr	x8, [sp, #8]
    a530:	ldp	x29, x30, [sp, #16]
    a534:	cmp	w0, #0x0
    a538:	csel	x0, xzr, x8, eq  // eq = none
    a53c:	add	sp, sp, #0x20
    a540:	ret
    a544:	sub	sp, sp, #0x20
    a548:	stp	x29, x30, [sp, #16]
    a54c:	add	x29, sp, #0x10
    a550:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a554:	ldr	x0, [x0, #16]
    a558:	ldr	x8, [x8, #3384]
    a55c:	mov	x5, x3
    a560:	mov	x4, x2
    a564:	mov	x3, x1
    a568:	ldr	x8, [x8]
    a56c:	add	x2, sp, #0x8
    a570:	mov	x1, x8
    a574:	bl	bacc <gcc_cp_fe_context@@Base+0x27d0>
    a578:	ldr	x8, [sp, #8]
    a57c:	ldp	x29, x30, [sp, #16]
    a580:	cmp	w0, #0x0
    a584:	csel	x0, xzr, x8, eq  // eq = none
    a588:	add	sp, sp, #0x20
    a58c:	ret
    a590:	sub	sp, sp, #0x20
    a594:	stp	x29, x30, [sp, #16]
    a598:	add	x29, sp, #0x10
    a59c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a5a0:	ldr	x0, [x0, #16]
    a5a4:	ldr	x8, [x8, #3664]
    a5a8:	mov	x4, x2
    a5ac:	mov	x3, x1
    a5b0:	add	x2, sp, #0x8
    a5b4:	ldr	x8, [x8]
    a5b8:	mov	x1, x8
    a5bc:	bl	8528 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12fc>
    a5c0:	ldr	x8, [sp, #8]
    a5c4:	ldp	x29, x30, [sp, #16]
    a5c8:	cmp	w0, #0x0
    a5cc:	csel	x0, xzr, x8, eq  // eq = none
    a5d0:	add	sp, sp, #0x20
    a5d4:	ret
    a5d8:	sub	sp, sp, #0x20
    a5dc:	stp	x29, x30, [sp, #16]
    a5e0:	add	x29, sp, #0x10
    a5e4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a5e8:	ldr	x0, [x0, #16]
    a5ec:	ldr	x8, [x8, #3512]
    a5f0:	mov	x4, x2
    a5f4:	mov	x3, x1
    a5f8:	add	x2, sp, #0x8
    a5fc:	ldr	x8, [x8]
    a600:	mov	x1, x8
    a604:	bl	bb9c <gcc_cp_fe_context@@Base+0x28a0>
    a608:	ldr	x8, [sp, #8]
    a60c:	ldp	x29, x30, [sp, #16]
    a610:	cmp	w0, #0x0
    a614:	csel	x0, xzr, x8, eq  // eq = none
    a618:	add	sp, sp, #0x20
    a61c:	ret
    a620:	sub	sp, sp, #0x20
    a624:	stp	x29, x30, [sp, #16]
    a628:	add	x29, sp, #0x10
    a62c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a630:	ldr	x0, [x0, #16]
    a634:	ldr	x8, [x8, #3792]
    a638:	mov	x7, x5
    a63c:	mov	x6, x4
    a640:	mov	x5, x3
    a644:	ldr	x8, [x8]
    a648:	mov	w4, w2
    a64c:	mov	x3, x1
    a650:	add	x2, sp, #0x8
    a654:	mov	x1, x8
    a658:	bl	bc50 <gcc_cp_fe_context@@Base+0x2954>
    a65c:	ldr	x8, [sp, #8]
    a660:	ldp	x29, x30, [sp, #16]
    a664:	cmp	w0, #0x0
    a668:	csel	x0, xzr, x8, eq  // eq = none
    a66c:	add	sp, sp, #0x20
    a670:	ret
    a674:	sub	sp, sp, #0x20
    a678:	stp	x29, x30, [sp, #16]
    a67c:	add	x29, sp, #0x10
    a680:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a684:	ldr	x0, [x0, #16]
    a688:	ldr	x8, [x8, #3832]
    a68c:	mov	x4, x2
    a690:	mov	x3, x1
    a694:	add	x2, sp, #0x8
    a698:	ldr	x8, [x8]
    a69c:	mov	x1, x8
    a6a0:	bl	bd50 <gcc_cp_fe_context@@Base+0x2a54>
    a6a4:	ldr	x8, [sp, #8]
    a6a8:	ldp	x29, x30, [sp, #16]
    a6ac:	cmp	w0, #0x0
    a6b0:	csel	x0, xzr, x8, eq  // eq = none
    a6b4:	add	sp, sp, #0x20
    a6b8:	ret
    a6bc:	sub	sp, sp, #0x20
    a6c0:	stp	x29, x30, [sp, #16]
    a6c4:	add	x29, sp, #0x10
    a6c8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a6cc:	ldr	x0, [x0, #16]
    a6d0:	ldr	x8, [x8, #3440]
    a6d4:	mov	w4, w2
    a6d8:	mov	x3, x1
    a6dc:	add	x2, sp, #0x8
    a6e0:	ldr	x8, [x8]
    a6e4:	mov	x1, x8
    a6e8:	bl	8474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1248>
    a6ec:	ldr	x8, [sp, #8]
    a6f0:	ldp	x29, x30, [sp, #16]
    a6f4:	cmp	w0, #0x0
    a6f8:	csel	x0, xzr, x8, eq  // eq = none
    a6fc:	add	sp, sp, #0x20
    a700:	ret
    a704:	sub	sp, sp, #0x20
    a708:	stp	x29, x30, [sp, #16]
    a70c:	add	x29, sp, #0x10
    a710:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a714:	ldr	x0, [x0, #16]
    a718:	ldr	x8, [x8, #3784]
    a71c:	mov	x4, x2
    a720:	mov	x3, x1
    a724:	add	x2, sp, #0x8
    a728:	ldr	x8, [x8]
    a72c:	mov	x1, x8
    a730:	bl	be04 <gcc_cp_fe_context@@Base+0x2b08>
    a734:	ldr	x8, [sp, #8]
    a738:	ldp	x29, x30, [sp, #16]
    a73c:	cmp	w0, #0x0
    a740:	csel	x0, xzr, x8, eq  // eq = none
    a744:	add	sp, sp, #0x20
    a748:	ret
    a74c:	sub	sp, sp, #0x20
    a750:	stp	x29, x30, [sp, #16]
    a754:	add	x29, sp, #0x10
    a758:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a75c:	ldr	x0, [x0, #16]
    a760:	ldr	x8, [x8, #3424]
    a764:	mov	x5, x3
    a768:	mov	x4, x2
    a76c:	mov	x3, x1
    a770:	ldr	x8, [x8]
    a774:	add	x2, sp, #0x8
    a778:	mov	x1, x8
    a77c:	bl	b694 <gcc_cp_fe_context@@Base+0x2398>
    a780:	ldr	x8, [sp, #8]
    a784:	ldp	x29, x30, [sp, #16]
    a788:	cmp	w0, #0x0
    a78c:	csel	x0, xzr, x8, eq  // eq = none
    a790:	add	sp, sp, #0x20
    a794:	ret
    a798:	sub	sp, sp, #0x20
    a79c:	stp	x29, x30, [sp, #16]
    a7a0:	add	x29, sp, #0x10
    a7a4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a7a8:	ldr	x0, [x0, #16]
    a7ac:	ldr	x8, [x8, #3776]
    a7b0:	mov	x6, x4
    a7b4:	mov	x5, x3
    a7b8:	mov	x4, x2
    a7bc:	ldr	x8, [x8]
    a7c0:	mov	x3, x1
    a7c4:	add	x2, sp, #0x8
    a7c8:	mov	x1, x8
    a7cc:	bl	beb8 <gcc_cp_fe_context@@Base+0x2bbc>
    a7d0:	ldr	x8, [sp, #8]
    a7d4:	ldp	x29, x30, [sp, #16]
    a7d8:	cmp	w0, #0x0
    a7dc:	csel	x0, xzr, x8, eq  // eq = none
    a7e0:	add	sp, sp, #0x20
    a7e4:	ret
    a7e8:	sub	sp, sp, #0x20
    a7ec:	stp	x29, x30, [sp, #16]
    a7f0:	add	x29, sp, #0x10
    a7f4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a7f8:	ldr	x0, [x0, #16]
    a7fc:	ldr	x8, [x8, #3488]
    a800:	mov	x4, x2
    a804:	mov	x3, x1
    a808:	add	x2, sp, #0x8
    a80c:	ldr	x8, [x8]
    a810:	mov	x1, x8
    a814:	bl	be04 <gcc_cp_fe_context@@Base+0x2b08>
    a818:	ldr	x8, [sp, #8]
    a81c:	ldp	x29, x30, [sp, #16]
    a820:	cmp	w0, #0x0
    a824:	csel	x0, xzr, x8, eq  // eq = none
    a828:	add	sp, sp, #0x20
    a82c:	ret
    a830:	sub	sp, sp, #0x20
    a834:	stp	x29, x30, [sp, #16]
    a838:	add	x29, sp, #0x10
    a83c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a840:	ldr	x0, [x0, #16]
    a844:	ldr	x8, [x8, #3344]
    a848:	mov	x5, x3
    a84c:	mov	x4, x2
    a850:	mov	x3, x1
    a854:	ldr	x8, [x8]
    a858:	add	x2, sp, #0x8
    a85c:	mov	x1, x8
    a860:	bl	b694 <gcc_cp_fe_context@@Base+0x2398>
    a864:	ldr	x8, [sp, #8]
    a868:	ldp	x29, x30, [sp, #16]
    a86c:	cmp	w0, #0x0
    a870:	csel	x0, xzr, x8, eq  // eq = none
    a874:	add	sp, sp, #0x20
    a878:	ret
    a87c:	sub	sp, sp, #0x20
    a880:	stp	x29, x30, [sp, #16]
    a884:	add	x29, sp, #0x10
    a888:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a88c:	ldr	x0, [x0, #16]
    a890:	ldr	x8, [x8, #3752]
    a894:	mov	x5, x3
    a898:	mov	x4, x2
    a89c:	mov	x3, x1
    a8a0:	ldr	x8, [x8]
    a8a4:	add	x2, sp, #0x8
    a8a8:	mov	x1, x8
    a8ac:	bl	bf9c <gcc_cp_fe_context@@Base+0x2ca0>
    a8b0:	ldr	x8, [sp, #8]
    a8b4:	ldp	x29, x30, [sp, #16]
    a8b8:	cmp	w0, #0x0
    a8bc:	csel	x0, xzr, x8, eq  // eq = none
    a8c0:	add	sp, sp, #0x20
    a8c4:	ret
    a8c8:	sub	sp, sp, #0x20
    a8cc:	stp	x29, x30, [sp, #16]
    a8d0:	add	x29, sp, #0x10
    a8d4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a8d8:	ldr	x0, [x0, #16]
    a8dc:	ldr	x8, [x8, #3688]
    a8e0:	mov	x6, x4
    a8e4:	mov	x5, x3
    a8e8:	mov	x4, x2
    a8ec:	ldr	x8, [x8]
    a8f0:	mov	x3, x1
    a8f4:	add	x2, sp, #0x8
    a8f8:	mov	x1, x8
    a8fc:	bl	c06c <gcc_cp_fe_context@@Base+0x2d70>
    a900:	ldr	x8, [sp, #8]
    a904:	ldp	x29, x30, [sp, #16]
    a908:	cmp	w0, #0x0
    a90c:	csel	x0, xzr, x8, eq  // eq = none
    a910:	add	sp, sp, #0x20
    a914:	ret
    a918:	sub	sp, sp, #0x20
    a91c:	stp	x29, x30, [sp, #16]
    a920:	add	x29, sp, #0x10
    a924:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a928:	ldr	x0, [x0, #16]
    a92c:	ldr	x8, [x8, #3560]
    a930:	mov	x5, x3
    a934:	mov	w4, w2
    a938:	mov	x3, x1
    a93c:	ldr	x8, [x8]
    a940:	add	x2, sp, #0x8
    a944:	mov	x1, x8
    a948:	bl	c150 <gcc_cp_fe_context@@Base+0x2e54>
    a94c:	ldr	x8, [sp, #8]
    a950:	ldp	x29, x30, [sp, #16]
    a954:	cmp	w0, #0x0
    a958:	csel	x0, xzr, x8, eq  // eq = none
    a95c:	add	sp, sp, #0x20
    a960:	ret
    a964:	sub	sp, sp, #0x20
    a968:	stp	x29, x30, [sp, #16]
    a96c:	add	x29, sp, #0x10
    a970:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a974:	ldr	x0, [x0, #16]
    a978:	ldr	x8, [x8, #3712]
    a97c:	mov	x3, x1
    a980:	add	x2, sp, #0x8
    a984:	ldr	x8, [x8]
    a988:	mov	x1, x8
    a98c:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    a990:	ldr	x8, [sp, #8]
    a994:	ldp	x29, x30, [sp, #16]
    a998:	cmp	w0, #0x0
    a99c:	csel	x0, xzr, x8, eq  // eq = none
    a9a0:	add	sp, sp, #0x20
    a9a4:	ret
    a9a8:	sub	sp, sp, #0x20
    a9ac:	stp	x29, x30, [sp, #16]
    a9b0:	add	x29, sp, #0x10
    a9b4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    a9b8:	ldr	x0, [x0, #16]
    a9bc:	ldr	x8, [x8, #3600]
    a9c0:	mov	w7, w5
    a9c4:	mov	x6, x4
    a9c8:	mov	x5, x3
    a9cc:	ldr	x8, [x8]
    a9d0:	mov	x4, x2
    a9d4:	mov	x3, x1
    a9d8:	add	x2, sp, #0x8
    a9dc:	mov	x1, x8
    a9e0:	bl	c220 <gcc_cp_fe_context@@Base+0x2f24>
    a9e4:	ldr	x8, [sp, #8]
    a9e8:	ldp	x29, x30, [sp, #16]
    a9ec:	cmp	w0, #0x0
    a9f0:	csel	x0, xzr, x8, eq  // eq = none
    a9f4:	add	sp, sp, #0x20
    a9f8:	ret
    a9fc:	sub	sp, sp, #0x20
    aa00:	stp	x29, x30, [sp, #16]
    aa04:	add	x29, sp, #0x10
    aa08:	adrp	x8, 28000 <xexit@@Base+0x14018>
    aa0c:	ldr	x0, [x0, #16]
    aa10:	ldr	x8, [x8, #3728]
    aa14:	mov	w6, w4
    aa18:	mov	x5, x3
    aa1c:	mov	x4, x2
    aa20:	ldr	x8, [x8]
    aa24:	mov	x3, x1
    aa28:	add	x2, sp, #0x8
    aa2c:	mov	x1, x8
    aa30:	bl	c320 <gcc_cp_fe_context@@Base+0x3024>
    aa34:	ldr	x8, [sp, #8]
    aa38:	ldp	x29, x30, [sp, #16]
    aa3c:	cmp	w0, #0x0
    aa40:	csel	x0, xzr, x8, eq  // eq = none
    aa44:	add	sp, sp, #0x20
    aa48:	ret
    aa4c:	sub	sp, sp, #0x20
    aa50:	stp	x29, x30, [sp, #16]
    aa54:	add	x29, sp, #0x10
    aa58:	adrp	x8, 28000 <xexit@@Base+0x14018>
    aa5c:	ldr	x0, [x0, #16]
    aa60:	ldr	x8, [x8, #3768]
    aa64:	mov	w6, w4
    aa68:	mov	x5, x3
    aa6c:	mov	x4, x2
    aa70:	ldr	x8, [x8]
    aa74:	mov	x3, x1
    aa78:	add	x2, sp, #0x8
    aa7c:	mov	x1, x8
    aa80:	bl	c404 <gcc_cp_fe_context@@Base+0x3108>
    aa84:	ldr	x8, [sp, #8]
    aa88:	ldp	x29, x30, [sp, #16]
    aa8c:	cmp	w0, #0x0
    aa90:	csel	x0, xzr, x8, eq  // eq = none
    aa94:	add	sp, sp, #0x20
    aa98:	ret
    aa9c:	sub	sp, sp, #0x20
    aaa0:	stp	x29, x30, [sp, #16]
    aaa4:	add	x29, sp, #0x10
    aaa8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    aaac:	ldr	x0, [x0, #16]
    aab0:	ldr	x8, [x8, #3376]
    aab4:	mov	w7, w5
    aab8:	mov	x6, x4
    aabc:	mov	w5, w3
    aac0:	ldr	x8, [x8]
    aac4:	mov	x4, x2
    aac8:	mov	w3, w1
    aacc:	add	x2, sp, #0x8
    aad0:	mov	x1, x8
    aad4:	bl	c4e8 <gcc_cp_fe_context@@Base+0x31ec>
    aad8:	ldr	x8, [sp, #8]
    aadc:	ldp	x29, x30, [sp, #16]
    aae0:	cmp	w0, #0x0
    aae4:	csel	x0, xzr, x8, eq  // eq = none
    aae8:	add	sp, sp, #0x20
    aaec:	ret
    aaf0:	sub	sp, sp, #0x20
    aaf4:	stp	x29, x30, [sp, #16]
    aaf8:	add	x29, sp, #0x10
    aafc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ab00:	ldr	x0, [x0, #16]
    ab04:	ldr	x8, [x8, #3544]
    ab08:	mov	x7, x5
    ab0c:	mov	x6, x4
    ab10:	mov	w5, w3
    ab14:	ldr	x8, [x8]
    ab18:	mov	x4, x2
    ab1c:	mov	x3, x1
    ab20:	add	x2, sp, #0x8
    ab24:	mov	x1, x8
    ab28:	bl	c5e8 <gcc_cp_fe_context@@Base+0x32ec>
    ab2c:	ldr	x8, [sp, #8]
    ab30:	ldp	x29, x30, [sp, #16]
    ab34:	cmp	w0, #0x0
    ab38:	csel	x0, xzr, x8, eq  // eq = none
    ab3c:	add	sp, sp, #0x20
    ab40:	ret
    ab44:	sub	sp, sp, #0x20
    ab48:	stp	x29, x30, [sp, #16]
    ab4c:	add	x29, sp, #0x10
    ab50:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ab54:	ldr	x0, [x0, #16]
    ab58:	ldr	x8, [x8, #3896]
    ab5c:	mov	x3, x1
    ab60:	sub	x2, x29, #0x4
    ab64:	ldr	x8, [x8]
    ab68:	mov	x1, x8
    ab6c:	bl	c6e8 <gcc_cp_fe_context@@Base+0x33ec>
    ab70:	ldur	w8, [x29, #-4]
    ab74:	ldp	x29, x30, [sp, #16]
    ab78:	cmp	w0, #0x0
    ab7c:	csel	w0, wzr, w8, eq  // eq = none
    ab80:	add	sp, sp, #0x20
    ab84:	ret
    ab88:	sub	sp, sp, #0x20
    ab8c:	stp	x29, x30, [sp, #16]
    ab90:	add	x29, sp, #0x10
    ab94:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ab98:	ldr	x0, [x0, #16]
    ab9c:	ldr	x8, [x8, #3240]
    aba0:	mov	w7, w5
    aba4:	mov	x6, x4
    aba8:	mov	w5, w3
    abac:	ldr	x8, [x8]
    abb0:	mov	x4, x2
    abb4:	mov	x3, x1
    abb8:	add	x2, sp, #0x8
    abbc:	mov	x1, x8
    abc0:	bl	c788 <gcc_cp_fe_context@@Base+0x348c>
    abc4:	ldr	x8, [sp, #8]
    abc8:	ldp	x29, x30, [sp, #16]
    abcc:	cmp	w0, #0x0
    abd0:	csel	x0, xzr, x8, eq  // eq = none
    abd4:	add	sp, sp, #0x20
    abd8:	ret
    abdc:	sub	sp, sp, #0x20
    abe0:	stp	x29, x30, [sp, #16]
    abe4:	add	x29, sp, #0x10
    abe8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    abec:	ldr	x0, [x0, #16]
    abf0:	ldr	x8, [x8, #3416]
    abf4:	mov	x5, x3
    abf8:	mov	x4, x2
    abfc:	mov	x3, x1
    ac00:	ldr	x8, [x8]
    ac04:	add	x2, sp, #0x8
    ac08:	mov	x1, x8
    ac0c:	bl	c888 <gcc_cp_fe_context@@Base+0x358c>
    ac10:	ldr	x8, [sp, #8]
    ac14:	ldp	x29, x30, [sp, #16]
    ac18:	cmp	w0, #0x0
    ac1c:	csel	x0, xzr, x8, eq  // eq = none
    ac20:	add	sp, sp, #0x20
    ac24:	ret
    ac28:	sub	sp, sp, #0x20
    ac2c:	stp	x29, x30, [sp, #16]
    ac30:	add	x29, sp, #0x10
    ac34:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ac38:	ldr	x0, [x0, #16]
    ac3c:	ldr	x8, [x8, #3704]
    ac40:	mov	x3, x1
    ac44:	sub	x2, x29, #0x4
    ac48:	ldr	x8, [x8]
    ac4c:	mov	x1, x8
    ac50:	bl	81b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf84>
    ac54:	ldur	w8, [x29, #-4]
    ac58:	ldp	x29, x30, [sp, #16]
    ac5c:	cmp	w0, #0x0
    ac60:	csel	w0, wzr, w8, eq  // eq = none
    ac64:	add	sp, sp, #0x20
    ac68:	ret
    ac6c:	sub	sp, sp, #0x20
    ac70:	stp	x29, x30, [sp, #16]
    ac74:	add	x29, sp, #0x10
    ac78:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ac7c:	ldr	x0, [x0, #16]
    ac80:	ldr	x8, [x8, #3936]
    ac84:	mov	w5, w3
    ac88:	mov	x4, x2
    ac8c:	mov	x3, x1
    ac90:	ldr	x8, [x8]
    ac94:	add	x2, sp, #0x8
    ac98:	mov	x1, x8
    ac9c:	bl	8250 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1024>
    aca0:	ldr	x8, [sp, #8]
    aca4:	ldp	x29, x30, [sp, #16]
    aca8:	cmp	w0, #0x0
    acac:	csel	x0, xzr, x8, eq  // eq = none
    acb0:	add	sp, sp, #0x20
    acb4:	ret
    acb8:	sub	sp, sp, #0x20
    acbc:	stp	x29, x30, [sp, #16]
    acc0:	add	x29, sp, #0x10
    acc4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    acc8:	ldr	x0, [x0, #16]
    accc:	ldr	x8, [x8, #3296]
    acd0:	mov	x4, x2
    acd4:	mov	x3, x1
    acd8:	add	x2, sp, #0x8
    acdc:	ldr	x8, [x8]
    ace0:	mov	x1, x8
    ace4:	bl	c958 <gcc_cp_fe_context@@Base+0x365c>
    ace8:	ldr	x8, [sp, #8]
    acec:	ldp	x29, x30, [sp, #16]
    acf0:	cmp	w0, #0x0
    acf4:	csel	x0, xzr, x8, eq  // eq = none
    acf8:	add	sp, sp, #0x20
    acfc:	ret
    ad00:	sub	sp, sp, #0x20
    ad04:	stp	x29, x30, [sp, #16]
    ad08:	add	x29, sp, #0x10
    ad0c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ad10:	ldr	x0, [x0, #16]
    ad14:	ldr	x8, [x8, #3640]
    ad18:	mov	w6, w4
    ad1c:	mov	w5, w3
    ad20:	mov	x4, x2
    ad24:	ldr	x8, [x8]
    ad28:	mov	x3, x1
    ad2c:	add	x2, sp, #0x8
    ad30:	mov	x1, x8
    ad34:	bl	ca0c <gcc_cp_fe_context@@Base+0x3710>
    ad38:	ldr	x8, [sp, #8]
    ad3c:	ldp	x29, x30, [sp, #16]
    ad40:	cmp	w0, #0x0
    ad44:	csel	x0, xzr, x8, eq  // eq = none
    ad48:	add	sp, sp, #0x20
    ad4c:	ret
    ad50:	sub	sp, sp, #0x20
    ad54:	stp	x29, x30, [sp, #16]
    ad58:	add	x29, sp, #0x10
    ad5c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ad60:	ldr	x0, [x0, #16]
    ad64:	ldr	x8, [x8, #3800]
    ad68:	mov	w4, w2
    ad6c:	mov	x3, x1
    ad70:	add	x2, sp, #0x8
    ad74:	ldr	x8, [x8]
    ad78:	mov	x1, x8
    ad7c:	bl	8474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1248>
    ad80:	ldr	x8, [sp, #8]
    ad84:	ldp	x29, x30, [sp, #16]
    ad88:	cmp	w0, #0x0
    ad8c:	csel	x0, xzr, x8, eq  // eq = none
    ad90:	add	sp, sp, #0x20
    ad94:	ret
    ad98:	sub	sp, sp, #0x20
    ad9c:	stp	x29, x30, [sp, #16]
    ada0:	add	x29, sp, #0x10
    ada4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ada8:	ldr	x0, [x0, #16]
    adac:	ldr	x8, [x8, #3568]
    adb0:	mov	x3, x1
    adb4:	add	x2, sp, #0x8
    adb8:	ldr	x8, [x8]
    adbc:	mov	x1, x8
    adc0:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    adc4:	ldr	x8, [sp, #8]
    adc8:	ldp	x29, x30, [sp, #16]
    adcc:	cmp	w0, #0x0
    add0:	csel	x0, xzr, x8, eq  // eq = none
    add4:	add	sp, sp, #0x20
    add8:	ret
    addc:	sub	sp, sp, #0x20
    ade0:	stp	x29, x30, [sp, #16]
    ade4:	add	x29, sp, #0x10
    ade8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    adec:	ldr	x0, [x0, #16]
    adf0:	ldr	x8, [x8, #3288]
    adf4:	mov	x5, x3
    adf8:	mov	x4, x2
    adfc:	mov	w3, w1
    ae00:	ldr	x8, [x8]
    ae04:	add	x2, sp, #0x8
    ae08:	mov	x1, x8
    ae0c:	bl	8830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1604>
    ae10:	ldr	x8, [sp, #8]
    ae14:	ldp	x29, x30, [sp, #16]
    ae18:	cmp	w0, #0x0
    ae1c:	csel	x0, xzr, x8, eq  // eq = none
    ae20:	add	sp, sp, #0x20
    ae24:	ret
    ae28:	sub	sp, sp, #0x20
    ae2c:	stp	x29, x30, [sp, #16]
    ae30:	add	x29, sp, #0x10
    ae34:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ae38:	ldr	x0, [x0, #16]
    ae3c:	ldr	x8, [x8, #4064]
    ae40:	add	x2, sp, #0x8
    ae44:	ldr	x1, [x8]
    ae48:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    ae4c:	ldr	x8, [sp, #8]
    ae50:	ldp	x29, x30, [sp, #16]
    ae54:	cmp	w0, #0x0
    ae58:	csel	x0, xzr, x8, eq  // eq = none
    ae5c:	add	sp, sp, #0x20
    ae60:	ret
    ae64:	sub	sp, sp, #0x20
    ae68:	stp	x29, x30, [sp, #16]
    ae6c:	add	x29, sp, #0x10
    ae70:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ae74:	ldr	x0, [x0, #16]
    ae78:	ldr	x8, [x8, #3304]
    ae7c:	mov	x4, x2
    ae80:	mov	x3, x1
    ae84:	add	x2, sp, #0x8
    ae88:	ldr	x8, [x8]
    ae8c:	mov	x1, x8
    ae90:	bl	8900 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x16d4>
    ae94:	ldr	x8, [sp, #8]
    ae98:	ldp	x29, x30, [sp, #16]
    ae9c:	cmp	w0, #0x0
    aea0:	csel	x0, xzr, x8, eq  // eq = none
    aea4:	add	sp, sp, #0x20
    aea8:	ret
    aeac:	sub	sp, sp, #0x20
    aeb0:	stp	x29, x30, [sp, #16]
    aeb4:	add	x29, sp, #0x10
    aeb8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    aebc:	ldr	x0, [x0, #16]
    aec0:	ldr	x8, [x8, #3272]
    aec4:	add	x2, sp, #0x8
    aec8:	ldr	x1, [x8]
    aecc:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    aed0:	ldr	x8, [sp, #8]
    aed4:	ldp	x29, x30, [sp, #16]
    aed8:	cmp	w0, #0x0
    aedc:	csel	x0, xzr, x8, eq  // eq = none
    aee0:	add	sp, sp, #0x20
    aee4:	ret
    aee8:	sub	sp, sp, #0x20
    aeec:	stp	x29, x30, [sp, #16]
    aef0:	add	x29, sp, #0x10
    aef4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    aef8:	ldr	x0, [x0, #16]
    aefc:	ldr	x8, [x8, #3984]
    af00:	add	x2, sp, #0x8
    af04:	ldr	x1, [x8]
    af08:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    af0c:	ldr	x8, [sp, #8]
    af10:	ldp	x29, x30, [sp, #16]
    af14:	cmp	w0, #0x0
    af18:	csel	x0, xzr, x8, eq  // eq = none
    af1c:	add	sp, sp, #0x20
    af20:	ret
    af24:	sub	sp, sp, #0x20
    af28:	stp	x29, x30, [sp, #16]
    af2c:	add	x29, sp, #0x10
    af30:	adrp	x8, 28000 <xexit@@Base+0x14018>
    af34:	ldr	x0, [x0, #16]
    af38:	ldr	x8, [x8, #3352]
    af3c:	add	x2, sp, #0x8
    af40:	ldr	x1, [x8]
    af44:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    af48:	ldr	x8, [sp, #8]
    af4c:	ldp	x29, x30, [sp, #16]
    af50:	cmp	w0, #0x0
    af54:	csel	x0, xzr, x8, eq  // eq = none
    af58:	add	sp, sp, #0x20
    af5c:	ret
    af60:	sub	sp, sp, #0x20
    af64:	stp	x29, x30, [sp, #16]
    af68:	add	x29, sp, #0x10
    af6c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    af70:	ldr	x0, [x0, #16]
    af74:	ldr	x8, [x8, #3552]
    af78:	add	x2, sp, #0x8
    af7c:	ldr	x1, [x8]
    af80:	bl	7ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc7c>
    af84:	ldr	x8, [sp, #8]
    af88:	ldp	x29, x30, [sp, #16]
    af8c:	cmp	w0, #0x0
    af90:	csel	x0, xzr, x8, eq  // eq = none
    af94:	add	sp, sp, #0x20
    af98:	ret
    af9c:	sub	sp, sp, #0x20
    afa0:	stp	x29, x30, [sp, #16]
    afa4:	add	x29, sp, #0x10
    afa8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    afac:	ldr	x0, [x0, #16]
    afb0:	ldr	x8, [x8, #3520]
    afb4:	mov	w4, w2
    afb8:	mov	x3, x1
    afbc:	add	x2, sp, #0x8
    afc0:	ldr	x8, [x8]
    afc4:	mov	x1, x8
    afc8:	bl	8474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1248>
    afcc:	ldr	x8, [sp, #8]
    afd0:	ldp	x29, x30, [sp, #16]
    afd4:	cmp	w0, #0x0
    afd8:	csel	x0, xzr, x8, eq  // eq = none
    afdc:	add	sp, sp, #0x20
    afe0:	ret
    afe4:	sub	sp, sp, #0x20
    afe8:	stp	x29, x30, [sp, #16]
    afec:	add	x29, sp, #0x10
    aff0:	adrp	x8, 28000 <xexit@@Base+0x14018>
    aff4:	ldr	x0, [x0, #16]
    aff8:	ldr	x8, [x8, #3576]
    affc:	mov	x4, x2
    b000:	mov	x3, x1
    b004:	add	x2, sp, #0x8
    b008:	ldr	x8, [x8]
    b00c:	mov	x1, x8
    b010:	bl	b818 <gcc_cp_fe_context@@Base+0x251c>
    b014:	ldr	x8, [sp, #8]
    b018:	ldp	x29, x30, [sp, #16]
    b01c:	cmp	w0, #0x0
    b020:	csel	x0, xzr, x8, eq  // eq = none
    b024:	add	sp, sp, #0x20
    b028:	ret
    b02c:	sub	sp, sp, #0x20
    b030:	stp	x29, x30, [sp, #16]
    b034:	add	x29, sp, #0x10
    b038:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b03c:	ldr	x0, [x0, #16]
    b040:	ldr	x8, [x8, #3904]
    b044:	mov	x4, x2
    b048:	mov	x3, x1
    b04c:	add	x2, sp, #0x8
    b050:	ldr	x8, [x8]
    b054:	mov	x1, x8
    b058:	bl	8528 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12fc>
    b05c:	ldr	x8, [sp, #8]
    b060:	ldp	x29, x30, [sp, #16]
    b064:	cmp	w0, #0x0
    b068:	csel	x0, xzr, x8, eq  // eq = none
    b06c:	add	sp, sp, #0x20
    b070:	ret
    b074:	sub	sp, sp, #0x20
    b078:	stp	x29, x30, [sp, #16]
    b07c:	add	x29, sp, #0x10
    b080:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b084:	ldr	x0, [x0, #16]
    b088:	ldr	x8, [x8, #4016]
    b08c:	mov	w4, w2
    b090:	mov	x3, x1
    b094:	add	x2, sp, #0x8
    b098:	ldr	x8, [x8]
    b09c:	mov	x1, x8
    b0a0:	bl	caf0 <gcc_cp_fe_context@@Base+0x37f4>
    b0a4:	ldr	x8, [sp, #8]
    b0a8:	ldp	x29, x30, [sp, #16]
    b0ac:	cmp	w0, #0x0
    b0b0:	csel	x0, xzr, x8, eq  // eq = none
    b0b4:	add	sp, sp, #0x20
    b0b8:	ret
    b0bc:	sub	sp, sp, #0x20
    b0c0:	stp	x29, x30, [sp, #16]
    b0c4:	add	x29, sp, #0x10
    b0c8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b0cc:	ldr	x0, [x0, #16]
    b0d0:	ldr	x8, [x8, #3992]
    b0d4:	mov	x3, x1
    b0d8:	add	x2, sp, #0x8
    b0dc:	ldr	x8, [x8]
    b0e0:	mov	x1, x8
    b0e4:	bl	7e08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbdc>
    b0e8:	ldr	x8, [sp, #8]
    b0ec:	ldp	x29, x30, [sp, #16]
    b0f0:	cmp	w0, #0x0
    b0f4:	csel	x0, xzr, x8, eq  // eq = none
    b0f8:	add	sp, sp, #0x20
    b0fc:	ret
    b100:	sub	sp, sp, #0x20
    b104:	stp	x29, x30, [sp, #16]
    b108:	add	x29, sp, #0x10
    b10c:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b110:	ldr	x0, [x0, #16]
    b114:	ldr	x8, [x8, #3720]
    b118:	mov	w4, w2
    b11c:	mov	x3, x1
    b120:	add	x2, sp, #0x8
    b124:	ldr	x8, [x8]
    b128:	mov	x1, x8
    b12c:	bl	8474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1248>
    b130:	ldr	x8, [sp, #8]
    b134:	ldp	x29, x30, [sp, #16]
    b138:	cmp	w0, #0x0
    b13c:	csel	x0, xzr, x8, eq  // eq = none
    b140:	add	sp, sp, #0x20
    b144:	ret
    b148:	sub	sp, sp, #0x20
    b14c:	stp	x29, x30, [sp, #16]
    b150:	add	x29, sp, #0x10
    b154:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b158:	ldr	x0, [x0, #16]
    b15c:	ldr	x8, [x8, #4040]
    b160:	mov	w7, w5
    b164:	mov	x6, x4
    b168:	mov	x5, x3
    b16c:	ldr	x8, [x8]
    b170:	mov	x4, x2
    b174:	mov	x3, x1
    b178:	sub	x2, x29, #0x4
    b17c:	mov	x1, x8
    b180:	bl	8690 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1464>
    b184:	ldur	w8, [x29, #-4]
    b188:	ldp	x29, x30, [sp, #16]
    b18c:	cmp	w0, #0x0
    b190:	csel	w0, wzr, w8, eq  // eq = none
    b194:	add	sp, sp, #0x20
    b198:	ret
    b19c:	sub	sp, sp, #0x20
    b1a0:	stp	x29, x30, [sp, #16]
    b1a4:	add	x29, sp, #0x10
    b1a8:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b1ac:	ldr	x0, [x0, #16]
    b1b0:	ldr	x8, [x8, #3648]
    b1b4:	mov	x3, x1
    b1b8:	add	x2, sp, #0x8
    b1bc:	ldr	x8, [x8]
    b1c0:	mov	x1, x8
    b1c4:	bl	8790 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1564>
    b1c8:	ldr	x8, [sp, #8]
    b1cc:	ldp	x29, x30, [sp, #16]
    b1d0:	cmp	w0, #0x0
    b1d4:	csel	x0, xzr, x8, eq  // eq = none
    b1d8:	add	sp, sp, #0x20
    b1dc:	ret
    b1e0:	sub	sp, sp, #0x20
    b1e4:	stp	x29, x30, [sp, #16]
    b1e8:	add	x29, sp, #0x10
    b1ec:	adrp	x8, 28000 <xexit@@Base+0x14018>
    b1f0:	ldr	x0, [x0, #16]
    b1f4:	ldr	x8, [x8, #3672]
    b1f8:	mov	w6, w4
    b1fc:	mov	x5, x3
    b200:	mov	x4, x2
    b204:	ldr	x8, [x8]
    b208:	mov	x3, x1
    b20c:	sub	x2, x29, #0x4
    b210:	mov	x1, x8
    b214:	bl	cba4 <gcc_cp_fe_context@@Base+0x38a8>
    b218:	ldur	w8, [x29, #-4]
    b21c:	ldp	x29, x30, [sp, #16]
    b220:	cmp	w0, #0x0
    b224:	csel	w0, wzr, w8, eq  // eq = none
    b228:	add	sp, sp, #0x20
    b22c:	ret
    b230:	sub	sp, sp, #0x40
    b234:	stp	x29, x30, [sp, #16]
    b238:	stp	x22, x21, [sp, #32]
    b23c:	stp	x20, x19, [sp, #48]
    b240:	add	x29, sp, #0x10
    b244:	mov	x22, x1
    b248:	mov	w1, #0x51                  	// #81
    b24c:	mov	x21, x3
    b250:	mov	x19, x2
    b254:	mov	x20, x0
    b258:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b25c:	cbz	w0, b2bc <gcc_cp_fe_context@@Base+0x1fc0>
    b260:	mov	x0, x20
    b264:	mov	x1, x22
    b268:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b26c:	cbz	w0, b2bc <gcc_cp_fe_context@@Base+0x1fc0>
    b270:	mov	w1, #0x1                   	// #1
    b274:	mov	x0, x20
    b278:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b27c:	cbz	w0, b2bc <gcc_cp_fe_context@@Base+0x1fc0>
    b280:	mov	x0, x20
    b284:	mov	x1, x21
    b288:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b28c:	cbz	w0, b2bc <gcc_cp_fe_context@@Base+0x1fc0>
    b290:	mov	w1, #0x1                   	// #1
    b294:	mov	x0, x20
    b298:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b29c:	cbz	w0, b2bc <gcc_cp_fe_context@@Base+0x1fc0>
    b2a0:	add	x1, sp, #0x8
    b2a4:	mov	x0, x20
    b2a8:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b2ac:	cbz	w0, b2bc <gcc_cp_fe_context@@Base+0x1fc0>
    b2b0:	ldr	x8, [sp, #8]
    b2b4:	mov	w0, #0x1                   	// #1
    b2b8:	str	w8, [x19]
    b2bc:	ldp	x20, x19, [sp, #48]
    b2c0:	ldp	x22, x21, [sp, #32]
    b2c4:	ldp	x29, x30, [sp, #16]
    b2c8:	add	sp, sp, #0x40
    b2cc:	ret
    b2d0:	stp	x29, x30, [sp, #-64]!
    b2d4:	str	x23, [sp, #16]
    b2d8:	stp	x22, x21, [sp, #32]
    b2dc:	stp	x20, x19, [sp, #48]
    b2e0:	mov	x29, sp
    b2e4:	mov	x23, x1
    b2e8:	mov	w1, #0x51                  	// #81
    b2ec:	mov	x21, x4
    b2f0:	mov	x22, x3
    b2f4:	mov	x19, x2
    b2f8:	mov	x20, x0
    b2fc:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b300:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b304:	mov	x0, x20
    b308:	mov	x1, x23
    b30c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b310:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b314:	mov	w1, #0x2                   	// #2
    b318:	mov	x0, x20
    b31c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b320:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b324:	mov	x0, x20
    b328:	mov	x1, x22
    b32c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b330:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b334:	mov	x0, x20
    b338:	mov	x1, x21
    b33c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b340:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b344:	mov	w1, #0x1                   	// #1
    b348:	mov	x0, x20
    b34c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b350:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b354:	add	x1, x29, #0x18
    b358:	mov	x0, x20
    b35c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b360:	cbz	w0, b370 <gcc_cp_fe_context@@Base+0x2074>
    b364:	ldr	x8, [x29, #24]
    b368:	mov	w0, #0x1                   	// #1
    b36c:	str	w8, [x19]
    b370:	ldp	x20, x19, [sp, #48]
    b374:	ldp	x22, x21, [sp, #32]
    b378:	ldr	x23, [sp, #16]
    b37c:	ldp	x29, x30, [sp], #64
    b380:	ret
    b384:	stp	x29, x30, [sp, #-48]!
    b388:	str	x21, [sp, #16]
    b38c:	stp	x20, x19, [sp, #32]
    b390:	mov	x29, sp
    b394:	mov	x21, x1
    b398:	mov	w1, #0x51                  	// #81
    b39c:	mov	x19, x2
    b3a0:	mov	x20, x0
    b3a4:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b3a8:	cbz	w0, b3f8 <gcc_cp_fe_context@@Base+0x20fc>
    b3ac:	mov	x0, x20
    b3b0:	mov	x1, x21
    b3b4:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b3b8:	cbz	w0, b3f8 <gcc_cp_fe_context@@Base+0x20fc>
    b3bc:	mov	x0, x20
    b3c0:	mov	x1, xzr
    b3c4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b3c8:	cbz	w0, b3f8 <gcc_cp_fe_context@@Base+0x20fc>
    b3cc:	mov	w1, #0x1                   	// #1
    b3d0:	mov	x0, x20
    b3d4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b3d8:	cbz	w0, b3f8 <gcc_cp_fe_context@@Base+0x20fc>
    b3dc:	add	x1, x29, #0x18
    b3e0:	mov	x0, x20
    b3e4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b3e8:	cbz	w0, b3f8 <gcc_cp_fe_context@@Base+0x20fc>
    b3ec:	ldr	x8, [x29, #24]
    b3f0:	mov	w0, #0x1                   	// #1
    b3f4:	str	w8, [x19]
    b3f8:	ldp	x20, x19, [sp, #32]
    b3fc:	ldr	x21, [sp, #16]
    b400:	ldp	x29, x30, [sp], #48
    b404:	ret
    b408:	stp	x29, x30, [sp, #-64]!
    b40c:	str	x23, [sp, #16]
    b410:	stp	x22, x21, [sp, #32]
    b414:	stp	x20, x19, [sp, #48]
    b418:	mov	x29, sp
    b41c:	mov	x23, x1
    b420:	mov	w1, #0x51                  	// #81
    b424:	mov	x21, x4
    b428:	mov	x22, x3
    b42c:	mov	x19, x2
    b430:	mov	x20, x0
    b434:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b438:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b43c:	mov	x0, x20
    b440:	mov	x1, x23
    b444:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b448:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b44c:	mov	w1, #0x2                   	// #2
    b450:	mov	x0, x20
    b454:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b458:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b45c:	mov	x0, x20
    b460:	mov	x1, x22
    b464:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b468:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b46c:	mov	x0, x20
    b470:	mov	x1, x21
    b474:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b478:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b47c:	mov	w1, #0x1                   	// #1
    b480:	mov	x0, x20
    b484:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b488:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b48c:	add	x1, x29, #0x18
    b490:	mov	x0, x20
    b494:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b498:	cbz	w0, b4a8 <gcc_cp_fe_context@@Base+0x21ac>
    b49c:	ldr	x8, [x29, #24]
    b4a0:	mov	w0, #0x1                   	// #1
    b4a4:	str	w8, [x19]
    b4a8:	ldp	x20, x19, [sp, #48]
    b4ac:	ldp	x22, x21, [sp, #32]
    b4b0:	ldr	x23, [sp, #16]
    b4b4:	ldp	x29, x30, [sp], #64
    b4b8:	ret
    b4bc:	stp	x29, x30, [sp, #-64]!
    b4c0:	str	x23, [sp, #16]
    b4c4:	stp	x22, x21, [sp, #32]
    b4c8:	stp	x20, x19, [sp, #48]
    b4cc:	mov	x29, sp
    b4d0:	mov	x23, x1
    b4d4:	mov	w1, #0x51                  	// #81
    b4d8:	mov	x21, x4
    b4dc:	mov	w22, w3
    b4e0:	mov	x19, x2
    b4e4:	mov	x20, x0
    b4e8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b4ec:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b4f0:	mov	x0, x20
    b4f4:	mov	x1, x23
    b4f8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b4fc:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b500:	mov	w1, #0x2                   	// #2
    b504:	mov	x0, x20
    b508:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b50c:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b510:	mov	w1, w22
    b514:	mov	x0, x20
    b518:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b51c:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b520:	mov	x0, x20
    b524:	mov	x1, x21
    b528:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b52c:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b530:	mov	w1, #0x1                   	// #1
    b534:	mov	x0, x20
    b538:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b53c:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b540:	add	x1, x29, #0x18
    b544:	mov	x0, x20
    b548:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b54c:	cbz	w0, b55c <gcc_cp_fe_context@@Base+0x2260>
    b550:	ldr	x8, [x29, #24]
    b554:	mov	w0, #0x1                   	// #1
    b558:	str	w8, [x19]
    b55c:	ldp	x20, x19, [sp, #48]
    b560:	ldp	x22, x21, [sp, #32]
    b564:	ldr	x23, [sp, #16]
    b568:	ldp	x29, x30, [sp], #64
    b56c:	ret
    b570:	sub	sp, sp, #0x60
    b574:	stp	x29, x30, [sp, #16]
    b578:	stp	x26, x25, [sp, #32]
    b57c:	stp	x24, x23, [sp, #48]
    b580:	stp	x22, x21, [sp, #64]
    b584:	stp	x20, x19, [sp, #80]
    b588:	add	x29, sp, #0x10
    b58c:	mov	x26, x1
    b590:	mov	w1, #0x51                  	// #81
    b594:	mov	x21, x7
    b598:	mov	x22, x6
    b59c:	mov	x23, x5
    b5a0:	mov	w24, w4
    b5a4:	mov	x25, x3
    b5a8:	mov	x19, x2
    b5ac:	mov	x20, x0
    b5b0:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b5b4:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b5b8:	mov	x0, x20
    b5bc:	mov	x1, x26
    b5c0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b5c4:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b5c8:	mov	w1, #0x7                   	// #7
    b5cc:	mov	x0, x20
    b5d0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b5d4:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b5d8:	mov	x0, x20
    b5dc:	mov	x1, x25
    b5e0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b5e4:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b5e8:	mov	w1, w24
    b5ec:	mov	x0, x20
    b5f0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b5f4:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b5f8:	mov	x0, x20
    b5fc:	mov	x1, x23
    b600:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b604:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b608:	mov	x0, x20
    b60c:	mov	x1, x22
    b610:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b614:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b618:	mov	x0, x20
    b61c:	mov	x1, x21
    b620:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b624:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b628:	ldr	x1, [x29, #80]
    b62c:	mov	x0, x20
    b630:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b634:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b638:	ldr	w8, [x29, #88]
    b63c:	mov	x0, x20
    b640:	mov	w1, w8
    b644:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b648:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b64c:	mov	w1, #0x1                   	// #1
    b650:	mov	x0, x20
    b654:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b658:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b65c:	add	x1, sp, #0x8
    b660:	mov	x0, x20
    b664:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b668:	cbz	w0, b678 <gcc_cp_fe_context@@Base+0x237c>
    b66c:	ldr	x8, [sp, #8]
    b670:	mov	w0, #0x1                   	// #1
    b674:	str	x8, [x19]
    b678:	ldp	x20, x19, [sp, #80]
    b67c:	ldp	x22, x21, [sp, #64]
    b680:	ldp	x24, x23, [sp, #48]
    b684:	ldp	x26, x25, [sp, #32]
    b688:	ldp	x29, x30, [sp, #16]
    b68c:	add	sp, sp, #0x60
    b690:	ret
    b694:	sub	sp, sp, #0x50
    b698:	stp	x29, x30, [sp, #16]
    b69c:	stp	x24, x23, [sp, #32]
    b6a0:	stp	x22, x21, [sp, #48]
    b6a4:	stp	x20, x19, [sp, #64]
    b6a8:	add	x29, sp, #0x10
    b6ac:	mov	x24, x1
    b6b0:	mov	w1, #0x51                  	// #81
    b6b4:	mov	x21, x5
    b6b8:	mov	x22, x4
    b6bc:	mov	x23, x3
    b6c0:	mov	x19, x2
    b6c4:	mov	x20, x0
    b6c8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b6cc:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b6d0:	mov	x0, x20
    b6d4:	mov	x1, x24
    b6d8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b6dc:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b6e0:	mov	w1, #0x3                   	// #3
    b6e4:	mov	x0, x20
    b6e8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b6ec:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b6f0:	mov	x0, x20
    b6f4:	mov	x1, x23
    b6f8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b6fc:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b700:	mov	x0, x20
    b704:	mov	x1, x22
    b708:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b70c:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b710:	mov	x0, x20
    b714:	mov	x1, x21
    b718:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b71c:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b720:	mov	w1, #0x1                   	// #1
    b724:	mov	x0, x20
    b728:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b72c:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b730:	add	x1, sp, #0x8
    b734:	mov	x0, x20
    b738:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b73c:	cbz	w0, b74c <gcc_cp_fe_context@@Base+0x2450>
    b740:	ldr	x8, [sp, #8]
    b744:	mov	w0, #0x1                   	// #1
    b748:	str	x8, [x19]
    b74c:	ldp	x20, x19, [sp, #64]
    b750:	ldp	x22, x21, [sp, #48]
    b754:	ldp	x24, x23, [sp, #32]
    b758:	ldp	x29, x30, [sp, #16]
    b75c:	add	sp, sp, #0x50
    b760:	ret
    b764:	stp	x29, x30, [sp, #-64]!
    b768:	str	x23, [sp, #16]
    b76c:	stp	x22, x21, [sp, #32]
    b770:	stp	x20, x19, [sp, #48]
    b774:	mov	x29, sp
    b778:	mov	x23, x1
    b77c:	mov	w1, #0x51                  	// #81
    b780:	mov	w21, w4
    b784:	mov	x22, x3
    b788:	mov	x19, x2
    b78c:	mov	x20, x0
    b790:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b794:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b798:	mov	x0, x20
    b79c:	mov	x1, x23
    b7a0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b7a4:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b7a8:	mov	w1, #0x2                   	// #2
    b7ac:	mov	x0, x20
    b7b0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b7b4:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b7b8:	mov	x0, x20
    b7bc:	mov	x1, x22
    b7c0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b7c4:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b7c8:	mov	w1, w21
    b7cc:	mov	x0, x20
    b7d0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b7d4:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b7d8:	mov	w1, #0x1                   	// #1
    b7dc:	mov	x0, x20
    b7e0:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b7e4:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b7e8:	add	x1, x29, #0x18
    b7ec:	mov	x0, x20
    b7f0:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b7f4:	cbz	w0, b804 <gcc_cp_fe_context@@Base+0x2508>
    b7f8:	ldr	x8, [x29, #24]
    b7fc:	mov	w0, #0x1                   	// #1
    b800:	str	x8, [x19]
    b804:	ldp	x20, x19, [sp, #48]
    b808:	ldp	x22, x21, [sp, #32]
    b80c:	ldr	x23, [sp, #16]
    b810:	ldp	x29, x30, [sp], #64
    b814:	ret
    b818:	stp	x29, x30, [sp, #-64]!
    b81c:	str	x23, [sp, #16]
    b820:	stp	x22, x21, [sp, #32]
    b824:	stp	x20, x19, [sp, #48]
    b828:	mov	x29, sp
    b82c:	mov	x23, x1
    b830:	mov	w1, #0x51                  	// #81
    b834:	mov	x21, x4
    b838:	mov	x22, x3
    b83c:	mov	x19, x2
    b840:	mov	x20, x0
    b844:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b848:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b84c:	mov	x0, x20
    b850:	mov	x1, x23
    b854:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b858:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b85c:	mov	w1, #0x2                   	// #2
    b860:	mov	x0, x20
    b864:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b868:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b86c:	mov	x0, x20
    b870:	mov	x1, x22
    b874:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b878:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b87c:	mov	x0, x20
    b880:	mov	x1, x21
    b884:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b888:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b88c:	mov	w1, #0x1                   	// #1
    b890:	mov	x0, x20
    b894:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b898:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b89c:	add	x1, x29, #0x18
    b8a0:	mov	x0, x20
    b8a4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b8a8:	cbz	w0, b8b8 <gcc_cp_fe_context@@Base+0x25bc>
    b8ac:	ldr	x8, [x29, #24]
    b8b0:	mov	w0, #0x1                   	// #1
    b8b4:	str	x8, [x19]
    b8b8:	ldp	x20, x19, [sp, #48]
    b8bc:	ldp	x22, x21, [sp, #32]
    b8c0:	ldr	x23, [sp, #16]
    b8c4:	ldp	x29, x30, [sp], #64
    b8c8:	ret
    b8cc:	sub	sp, sp, #0x60
    b8d0:	stp	x29, x30, [sp, #16]
    b8d4:	stp	x26, x25, [sp, #32]
    b8d8:	stp	x24, x23, [sp, #48]
    b8dc:	stp	x22, x21, [sp, #64]
    b8e0:	stp	x20, x19, [sp, #80]
    b8e4:	add	x29, sp, #0x10
    b8e8:	mov	x26, x1
    b8ec:	mov	w1, #0x51                  	// #81
    b8f0:	mov	w21, w7
    b8f4:	mov	x22, x6
    b8f8:	mov	x23, x5
    b8fc:	mov	w24, w4
    b900:	mov	x25, x3
    b904:	mov	x19, x2
    b908:	mov	x20, x0
    b90c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    b910:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b914:	mov	x0, x20
    b918:	mov	x1, x26
    b91c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b920:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b924:	mov	w1, #0x5                   	// #5
    b928:	mov	x0, x20
    b92c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b930:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b934:	mov	x0, x20
    b938:	mov	x1, x25
    b93c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b940:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b944:	sxtw	x1, w24
    b948:	mov	x0, x20
    b94c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b950:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b954:	mov	x0, x20
    b958:	mov	x1, x23
    b95c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b960:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b964:	mov	x0, x20
    b968:	mov	x1, x22
    b96c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    b970:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b974:	mov	w1, w21
    b978:	mov	x0, x20
    b97c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    b980:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b984:	mov	w1, #0x1                   	// #1
    b988:	mov	x0, x20
    b98c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    b990:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b994:	add	x1, sp, #0x8
    b998:	mov	x0, x20
    b99c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    b9a0:	cbz	w0, b9b0 <gcc_cp_fe_context@@Base+0x26b4>
    b9a4:	ldr	x8, [sp, #8]
    b9a8:	mov	w0, #0x1                   	// #1
    b9ac:	str	x8, [x19]
    b9b0:	ldp	x20, x19, [sp, #80]
    b9b4:	ldp	x22, x21, [sp, #64]
    b9b8:	ldp	x24, x23, [sp, #48]
    b9bc:	ldp	x26, x25, [sp, #32]
    b9c0:	ldp	x29, x30, [sp, #16]
    b9c4:	add	sp, sp, #0x60
    b9c8:	ret
    b9cc:	sub	sp, sp, #0x60
    b9d0:	stp	x29, x30, [sp, #16]
    b9d4:	stp	x26, x25, [sp, #32]
    b9d8:	stp	x24, x23, [sp, #48]
    b9dc:	stp	x22, x21, [sp, #64]
    b9e0:	stp	x20, x19, [sp, #80]
    b9e4:	add	x29, sp, #0x10
    b9e8:	mov	x26, x1
    b9ec:	mov	w1, #0x51                  	// #81
    b9f0:	mov	w21, w7
    b9f4:	mov	x22, x6
    b9f8:	mov	x23, x5
    b9fc:	mov	x24, x4
    ba00:	mov	x25, x3
    ba04:	mov	x19, x2
    ba08:	mov	x20, x0
    ba0c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    ba10:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba14:	mov	x0, x20
    ba18:	mov	x1, x26
    ba1c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    ba20:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba24:	mov	w1, #0x5                   	// #5
    ba28:	mov	x0, x20
    ba2c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ba30:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba34:	mov	x0, x20
    ba38:	mov	x1, x25
    ba3c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ba40:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba44:	mov	x0, x20
    ba48:	mov	x1, x24
    ba4c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    ba50:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba54:	mov	x0, x20
    ba58:	mov	x1, x23
    ba5c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ba60:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba64:	mov	x0, x20
    ba68:	mov	x1, x22
    ba6c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    ba70:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba74:	mov	w1, w21
    ba78:	mov	x0, x20
    ba7c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ba80:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba84:	mov	w1, #0x1                   	// #1
    ba88:	mov	x0, x20
    ba8c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    ba90:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    ba94:	add	x1, sp, #0x8
    ba98:	mov	x0, x20
    ba9c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    baa0:	cbz	w0, bab0 <gcc_cp_fe_context@@Base+0x27b4>
    baa4:	ldr	x8, [sp, #8]
    baa8:	mov	w0, #0x1                   	// #1
    baac:	str	x8, [x19]
    bab0:	ldp	x20, x19, [sp, #80]
    bab4:	ldp	x22, x21, [sp, #64]
    bab8:	ldp	x24, x23, [sp, #48]
    babc:	ldp	x26, x25, [sp, #32]
    bac0:	ldp	x29, x30, [sp, #16]
    bac4:	add	sp, sp, #0x60
    bac8:	ret
    bacc:	sub	sp, sp, #0x50
    bad0:	stp	x29, x30, [sp, #16]
    bad4:	stp	x24, x23, [sp, #32]
    bad8:	stp	x22, x21, [sp, #48]
    badc:	stp	x20, x19, [sp, #64]
    bae0:	add	x29, sp, #0x10
    bae4:	mov	x24, x1
    bae8:	mov	w1, #0x51                  	// #81
    baec:	mov	x21, x5
    baf0:	mov	x22, x4
    baf4:	mov	x23, x3
    baf8:	mov	x19, x2
    bafc:	mov	x20, x0
    bb00:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    bb04:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb08:	mov	x0, x20
    bb0c:	mov	x1, x24
    bb10:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bb14:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb18:	mov	w1, #0x3                   	// #3
    bb1c:	mov	x0, x20
    bb20:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bb24:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb28:	mov	x0, x20
    bb2c:	mov	x1, x23
    bb30:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bb34:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb38:	mov	x0, x20
    bb3c:	mov	x1, x22
    bb40:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bb44:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb48:	mov	x0, x20
    bb4c:	mov	x1, x21
    bb50:	bl	8c04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19d8>
    bb54:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb58:	mov	w1, #0x1                   	// #1
    bb5c:	mov	x0, x20
    bb60:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    bb64:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb68:	add	x1, sp, #0x8
    bb6c:	mov	x0, x20
    bb70:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    bb74:	cbz	w0, bb84 <gcc_cp_fe_context@@Base+0x2888>
    bb78:	ldr	x8, [sp, #8]
    bb7c:	mov	w0, #0x1                   	// #1
    bb80:	str	x8, [x19]
    bb84:	ldp	x20, x19, [sp, #64]
    bb88:	ldp	x22, x21, [sp, #48]
    bb8c:	ldp	x24, x23, [sp, #32]
    bb90:	ldp	x29, x30, [sp, #16]
    bb94:	add	sp, sp, #0x50
    bb98:	ret
    bb9c:	stp	x29, x30, [sp, #-64]!
    bba0:	str	x23, [sp, #16]
    bba4:	stp	x22, x21, [sp, #32]
    bba8:	stp	x20, x19, [sp, #48]
    bbac:	mov	x29, sp
    bbb0:	mov	x23, x1
    bbb4:	mov	w1, #0x51                  	// #81
    bbb8:	mov	x21, x4
    bbbc:	mov	x22, x3
    bbc0:	mov	x19, x2
    bbc4:	mov	x20, x0
    bbc8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    bbcc:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bbd0:	mov	x0, x20
    bbd4:	mov	x1, x23
    bbd8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bbdc:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bbe0:	mov	w1, #0x2                   	// #2
    bbe4:	mov	x0, x20
    bbe8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bbec:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bbf0:	mov	x0, x20
    bbf4:	mov	x1, x22
    bbf8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bbfc:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bc00:	mov	x0, x20
    bc04:	mov	x1, x21
    bc08:	bl	8c04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19d8>
    bc0c:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bc10:	mov	w1, #0x1                   	// #1
    bc14:	mov	x0, x20
    bc18:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    bc1c:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bc20:	add	x1, x29, #0x18
    bc24:	mov	x0, x20
    bc28:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    bc2c:	cbz	w0, bc3c <gcc_cp_fe_context@@Base+0x2940>
    bc30:	ldr	x8, [x29, #24]
    bc34:	mov	w0, #0x1                   	// #1
    bc38:	str	x8, [x19]
    bc3c:	ldp	x20, x19, [sp, #48]
    bc40:	ldp	x22, x21, [sp, #32]
    bc44:	ldr	x23, [sp, #16]
    bc48:	ldp	x29, x30, [sp], #64
    bc4c:	ret
    bc50:	sub	sp, sp, #0x60
    bc54:	stp	x29, x30, [sp, #16]
    bc58:	stp	x26, x25, [sp, #32]
    bc5c:	stp	x24, x23, [sp, #48]
    bc60:	stp	x22, x21, [sp, #64]
    bc64:	stp	x20, x19, [sp, #80]
    bc68:	add	x29, sp, #0x10
    bc6c:	mov	x26, x1
    bc70:	mov	w1, #0x51                  	// #81
    bc74:	mov	x21, x7
    bc78:	mov	x22, x6
    bc7c:	mov	x23, x5
    bc80:	mov	w24, w4
    bc84:	mov	x25, x3
    bc88:	mov	x19, x2
    bc8c:	mov	x20, x0
    bc90:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    bc94:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bc98:	mov	x0, x20
    bc9c:	mov	x1, x26
    bca0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bca4:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bca8:	mov	w1, #0x5                   	// #5
    bcac:	mov	x0, x20
    bcb0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bcb4:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bcb8:	mov	x0, x20
    bcbc:	mov	x1, x25
    bcc0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bcc4:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bcc8:	mov	w1, w24
    bccc:	mov	x0, x20
    bcd0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bcd4:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bcd8:	mov	x0, x20
    bcdc:	mov	x1, x23
    bce0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bce4:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bce8:	mov	x0, x20
    bcec:	mov	x1, x22
    bcf0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bcf4:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bcf8:	mov	x0, x20
    bcfc:	mov	x1, x21
    bd00:	bl	8c04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19d8>
    bd04:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bd08:	mov	w1, #0x1                   	// #1
    bd0c:	mov	x0, x20
    bd10:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    bd14:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bd18:	add	x1, sp, #0x8
    bd1c:	mov	x0, x20
    bd20:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    bd24:	cbz	w0, bd34 <gcc_cp_fe_context@@Base+0x2a38>
    bd28:	ldr	x8, [sp, #8]
    bd2c:	mov	w0, #0x1                   	// #1
    bd30:	str	x8, [x19]
    bd34:	ldp	x20, x19, [sp, #80]
    bd38:	ldp	x22, x21, [sp, #64]
    bd3c:	ldp	x24, x23, [sp, #48]
    bd40:	ldp	x26, x25, [sp, #32]
    bd44:	ldp	x29, x30, [sp, #16]
    bd48:	add	sp, sp, #0x60
    bd4c:	ret
    bd50:	stp	x29, x30, [sp, #-64]!
    bd54:	str	x23, [sp, #16]
    bd58:	stp	x22, x21, [sp, #32]
    bd5c:	stp	x20, x19, [sp, #48]
    bd60:	mov	x29, sp
    bd64:	mov	x23, x1
    bd68:	mov	w1, #0x51                  	// #81
    bd6c:	mov	x21, x4
    bd70:	mov	x22, x3
    bd74:	mov	x19, x2
    bd78:	mov	x20, x0
    bd7c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    bd80:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bd84:	mov	x0, x20
    bd88:	mov	x1, x23
    bd8c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bd90:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bd94:	mov	w1, #0x2                   	// #2
    bd98:	mov	x0, x20
    bd9c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bda0:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bda4:	mov	x0, x20
    bda8:	mov	x1, x22
    bdac:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bdb0:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bdb4:	mov	x0, x20
    bdb8:	mov	x1, x21
    bdbc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bdc0:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bdc4:	mov	w1, #0x1                   	// #1
    bdc8:	mov	x0, x20
    bdcc:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    bdd0:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bdd4:	add	x1, x29, #0x18
    bdd8:	mov	x0, x20
    bddc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    bde0:	cbz	w0, bdf0 <gcc_cp_fe_context@@Base+0x2af4>
    bde4:	ldr	x8, [x29, #24]
    bde8:	mov	w0, #0x1                   	// #1
    bdec:	str	x8, [x19]
    bdf0:	ldp	x20, x19, [sp, #48]
    bdf4:	ldp	x22, x21, [sp, #32]
    bdf8:	ldr	x23, [sp, #16]
    bdfc:	ldp	x29, x30, [sp], #64
    be00:	ret
    be04:	stp	x29, x30, [sp, #-64]!
    be08:	str	x23, [sp, #16]
    be0c:	stp	x22, x21, [sp, #32]
    be10:	stp	x20, x19, [sp, #48]
    be14:	mov	x29, sp
    be18:	mov	x23, x1
    be1c:	mov	w1, #0x51                  	// #81
    be20:	mov	x21, x4
    be24:	mov	x22, x3
    be28:	mov	x19, x2
    be2c:	mov	x20, x0
    be30:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    be34:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be38:	mov	x0, x20
    be3c:	mov	x1, x23
    be40:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    be44:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be48:	mov	w1, #0x2                   	// #2
    be4c:	mov	x0, x20
    be50:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    be54:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be58:	mov	x0, x20
    be5c:	mov	x1, x22
    be60:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    be64:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be68:	mov	x0, x20
    be6c:	mov	x1, x21
    be70:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    be74:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be78:	mov	w1, #0x1                   	// #1
    be7c:	mov	x0, x20
    be80:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    be84:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be88:	add	x1, x29, #0x18
    be8c:	mov	x0, x20
    be90:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    be94:	cbz	w0, bea4 <gcc_cp_fe_context@@Base+0x2ba8>
    be98:	ldr	x8, [x29, #24]
    be9c:	mov	w0, #0x1                   	// #1
    bea0:	str	x8, [x19]
    bea4:	ldp	x20, x19, [sp, #48]
    bea8:	ldp	x22, x21, [sp, #32]
    beac:	ldr	x23, [sp, #16]
    beb0:	ldp	x29, x30, [sp], #64
    beb4:	ret
    beb8:	stp	x29, x30, [sp, #-80]!
    bebc:	str	x25, [sp, #16]
    bec0:	stp	x24, x23, [sp, #32]
    bec4:	stp	x22, x21, [sp, #48]
    bec8:	stp	x20, x19, [sp, #64]
    becc:	mov	x29, sp
    bed0:	mov	x25, x1
    bed4:	mov	w1, #0x51                  	// #81
    bed8:	mov	x21, x6
    bedc:	mov	x22, x5
    bee0:	mov	x23, x4
    bee4:	mov	x24, x3
    bee8:	mov	x19, x2
    beec:	mov	x20, x0
    bef0:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    bef4:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bef8:	mov	x0, x20
    befc:	mov	x1, x25
    bf00:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bf04:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf08:	mov	w1, #0x4                   	// #4
    bf0c:	mov	x0, x20
    bf10:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bf14:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf18:	mov	x0, x20
    bf1c:	mov	x1, x24
    bf20:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bf24:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf28:	mov	x0, x20
    bf2c:	mov	x1, x23
    bf30:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bf34:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf38:	mov	x0, x20
    bf3c:	mov	x1, x22
    bf40:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bf44:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf48:	mov	x0, x20
    bf4c:	mov	x1, x21
    bf50:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bf54:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf58:	mov	w1, #0x1                   	// #1
    bf5c:	mov	x0, x20
    bf60:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    bf64:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf68:	add	x1, x29, #0x18
    bf6c:	mov	x0, x20
    bf70:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    bf74:	cbz	w0, bf84 <gcc_cp_fe_context@@Base+0x2c88>
    bf78:	ldr	x8, [x29, #24]
    bf7c:	mov	w0, #0x1                   	// #1
    bf80:	str	x8, [x19]
    bf84:	ldp	x20, x19, [sp, #64]
    bf88:	ldp	x22, x21, [sp, #48]
    bf8c:	ldp	x24, x23, [sp, #32]
    bf90:	ldr	x25, [sp, #16]
    bf94:	ldp	x29, x30, [sp], #80
    bf98:	ret
    bf9c:	sub	sp, sp, #0x50
    bfa0:	stp	x29, x30, [sp, #16]
    bfa4:	stp	x24, x23, [sp, #32]
    bfa8:	stp	x22, x21, [sp, #48]
    bfac:	stp	x20, x19, [sp, #64]
    bfb0:	add	x29, sp, #0x10
    bfb4:	mov	x24, x1
    bfb8:	mov	w1, #0x51                  	// #81
    bfbc:	mov	x21, x5
    bfc0:	mov	x22, x4
    bfc4:	mov	x23, x3
    bfc8:	mov	x19, x2
    bfcc:	mov	x20, x0
    bfd0:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    bfd4:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    bfd8:	mov	x0, x20
    bfdc:	mov	x1, x24
    bfe0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    bfe4:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    bfe8:	mov	w1, #0x3                   	// #3
    bfec:	mov	x0, x20
    bff0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    bff4:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    bff8:	mov	x0, x20
    bffc:	mov	x1, x23
    c000:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c004:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    c008:	mov	x0, x20
    c00c:	mov	x1, x22
    c010:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c014:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    c018:	mov	x0, x20
    c01c:	mov	x1, x21
    c020:	bl	8d7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b50>
    c024:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    c028:	mov	w1, #0x1                   	// #1
    c02c:	mov	x0, x20
    c030:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c034:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    c038:	add	x1, sp, #0x8
    c03c:	mov	x0, x20
    c040:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c044:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x2d58>
    c048:	ldr	x8, [sp, #8]
    c04c:	mov	w0, #0x1                   	// #1
    c050:	str	x8, [x19]
    c054:	ldp	x20, x19, [sp, #64]
    c058:	ldp	x22, x21, [sp, #48]
    c05c:	ldp	x24, x23, [sp, #32]
    c060:	ldp	x29, x30, [sp, #16]
    c064:	add	sp, sp, #0x50
    c068:	ret
    c06c:	stp	x29, x30, [sp, #-80]!
    c070:	str	x25, [sp, #16]
    c074:	stp	x24, x23, [sp, #32]
    c078:	stp	x22, x21, [sp, #48]
    c07c:	stp	x20, x19, [sp, #64]
    c080:	mov	x29, sp
    c084:	mov	x25, x1
    c088:	mov	w1, #0x51                  	// #81
    c08c:	mov	x21, x6
    c090:	mov	x22, x5
    c094:	mov	x23, x4
    c098:	mov	x24, x3
    c09c:	mov	x19, x2
    c0a0:	mov	x20, x0
    c0a4:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c0a8:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c0ac:	mov	x0, x20
    c0b0:	mov	x1, x25
    c0b4:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c0b8:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c0bc:	mov	w1, #0x4                   	// #4
    c0c0:	mov	x0, x20
    c0c4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c0c8:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c0cc:	mov	x0, x20
    c0d0:	mov	x1, x24
    c0d4:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c0d8:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c0dc:	mov	x0, x20
    c0e0:	mov	x1, x23
    c0e4:	bl	8d7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b50>
    c0e8:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c0ec:	mov	x0, x20
    c0f0:	mov	x1, x22
    c0f4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c0f8:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c0fc:	mov	x0, x20
    c100:	mov	x1, x21
    c104:	bl	8d7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b50>
    c108:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c10c:	mov	w1, #0x1                   	// #1
    c110:	mov	x0, x20
    c114:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c118:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c11c:	add	x1, x29, #0x18
    c120:	mov	x0, x20
    c124:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c128:	cbz	w0, c138 <gcc_cp_fe_context@@Base+0x2e3c>
    c12c:	ldr	x8, [x29, #24]
    c130:	mov	w0, #0x1                   	// #1
    c134:	str	x8, [x19]
    c138:	ldp	x20, x19, [sp, #64]
    c13c:	ldp	x22, x21, [sp, #48]
    c140:	ldp	x24, x23, [sp, #32]
    c144:	ldr	x25, [sp, #16]
    c148:	ldp	x29, x30, [sp], #80
    c14c:	ret
    c150:	sub	sp, sp, #0x50
    c154:	stp	x29, x30, [sp, #16]
    c158:	stp	x24, x23, [sp, #32]
    c15c:	stp	x22, x21, [sp, #48]
    c160:	stp	x20, x19, [sp, #64]
    c164:	add	x29, sp, #0x10
    c168:	mov	x24, x1
    c16c:	mov	w1, #0x51                  	// #81
    c170:	mov	x21, x5
    c174:	mov	w22, w4
    c178:	mov	x23, x3
    c17c:	mov	x19, x2
    c180:	mov	x20, x0
    c184:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c188:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c18c:	mov	x0, x20
    c190:	mov	x1, x24
    c194:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c198:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c19c:	mov	w1, #0x3                   	// #3
    c1a0:	mov	x0, x20
    c1a4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c1a8:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c1ac:	mov	x0, x20
    c1b0:	mov	x1, x23
    c1b4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c1b8:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c1bc:	sxtw	x1, w22
    c1c0:	mov	x0, x20
    c1c4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c1c8:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c1cc:	mov	x0, x20
    c1d0:	mov	x1, x21
    c1d4:	bl	8d7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b50>
    c1d8:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c1dc:	mov	w1, #0x1                   	// #1
    c1e0:	mov	x0, x20
    c1e4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c1e8:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c1ec:	add	x1, sp, #0x8
    c1f0:	mov	x0, x20
    c1f4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c1f8:	cbz	w0, c208 <gcc_cp_fe_context@@Base+0x2f0c>
    c1fc:	ldr	x8, [sp, #8]
    c200:	mov	w0, #0x1                   	// #1
    c204:	str	x8, [x19]
    c208:	ldp	x20, x19, [sp, #64]
    c20c:	ldp	x22, x21, [sp, #48]
    c210:	ldp	x24, x23, [sp, #32]
    c214:	ldp	x29, x30, [sp, #16]
    c218:	add	sp, sp, #0x50
    c21c:	ret
    c220:	sub	sp, sp, #0x60
    c224:	stp	x29, x30, [sp, #16]
    c228:	stp	x26, x25, [sp, #32]
    c22c:	stp	x24, x23, [sp, #48]
    c230:	stp	x22, x21, [sp, #64]
    c234:	stp	x20, x19, [sp, #80]
    c238:	add	x29, sp, #0x10
    c23c:	mov	x26, x1
    c240:	mov	w1, #0x51                  	// #81
    c244:	mov	w21, w7
    c248:	mov	x22, x6
    c24c:	mov	x23, x5
    c250:	mov	x24, x4
    c254:	mov	x25, x3
    c258:	mov	x19, x2
    c25c:	mov	x20, x0
    c260:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c264:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c268:	mov	x0, x20
    c26c:	mov	x1, x26
    c270:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c274:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c278:	mov	w1, #0x5                   	// #5
    c27c:	mov	x0, x20
    c280:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c284:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c288:	mov	x0, x20
    c28c:	mov	x1, x25
    c290:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c294:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c298:	mov	x0, x20
    c29c:	mov	x1, x24
    c2a0:	bl	8c04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19d8>
    c2a4:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c2a8:	mov	x0, x20
    c2ac:	mov	x1, x23
    c2b0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c2b4:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c2b8:	mov	x0, x20
    c2bc:	mov	x1, x22
    c2c0:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c2c4:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c2c8:	mov	w1, w21
    c2cc:	mov	x0, x20
    c2d0:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c2d4:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c2d8:	mov	w1, #0x1                   	// #1
    c2dc:	mov	x0, x20
    c2e0:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c2e4:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c2e8:	add	x1, sp, #0x8
    c2ec:	mov	x0, x20
    c2f0:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c2f4:	cbz	w0, c304 <gcc_cp_fe_context@@Base+0x3008>
    c2f8:	ldr	x8, [sp, #8]
    c2fc:	mov	w0, #0x1                   	// #1
    c300:	str	x8, [x19]
    c304:	ldp	x20, x19, [sp, #80]
    c308:	ldp	x22, x21, [sp, #64]
    c30c:	ldp	x24, x23, [sp, #48]
    c310:	ldp	x26, x25, [sp, #32]
    c314:	ldp	x29, x30, [sp, #16]
    c318:	add	sp, sp, #0x60
    c31c:	ret
    c320:	stp	x29, x30, [sp, #-80]!
    c324:	str	x25, [sp, #16]
    c328:	stp	x24, x23, [sp, #32]
    c32c:	stp	x22, x21, [sp, #48]
    c330:	stp	x20, x19, [sp, #64]
    c334:	mov	x29, sp
    c338:	mov	x25, x1
    c33c:	mov	w1, #0x51                  	// #81
    c340:	mov	w21, w6
    c344:	mov	x22, x5
    c348:	mov	x23, x4
    c34c:	mov	x24, x3
    c350:	mov	x19, x2
    c354:	mov	x20, x0
    c358:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c35c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c360:	mov	x0, x20
    c364:	mov	x1, x25
    c368:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c36c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c370:	mov	w1, #0x4                   	// #4
    c374:	mov	x0, x20
    c378:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c37c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c380:	mov	x0, x20
    c384:	mov	x1, x24
    c388:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c38c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c390:	mov	x0, x20
    c394:	mov	x1, x23
    c398:	bl	8c04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19d8>
    c39c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c3a0:	mov	x0, x20
    c3a4:	mov	x1, x22
    c3a8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c3ac:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c3b0:	mov	w1, w21
    c3b4:	mov	x0, x20
    c3b8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c3bc:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c3c0:	mov	w1, #0x1                   	// #1
    c3c4:	mov	x0, x20
    c3c8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c3cc:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c3d0:	add	x1, x29, #0x18
    c3d4:	mov	x0, x20
    c3d8:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c3dc:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x30f0>
    c3e0:	ldr	x8, [x29, #24]
    c3e4:	mov	w0, #0x1                   	// #1
    c3e8:	str	x8, [x19]
    c3ec:	ldp	x20, x19, [sp, #64]
    c3f0:	ldp	x22, x21, [sp, #48]
    c3f4:	ldp	x24, x23, [sp, #32]
    c3f8:	ldr	x25, [sp, #16]
    c3fc:	ldp	x29, x30, [sp], #80
    c400:	ret
    c404:	stp	x29, x30, [sp, #-80]!
    c408:	str	x25, [sp, #16]
    c40c:	stp	x24, x23, [sp, #32]
    c410:	stp	x22, x21, [sp, #48]
    c414:	stp	x20, x19, [sp, #64]
    c418:	mov	x29, sp
    c41c:	mov	x25, x1
    c420:	mov	w1, #0x51                  	// #81
    c424:	mov	w21, w6
    c428:	mov	x22, x5
    c42c:	mov	x23, x4
    c430:	mov	x24, x3
    c434:	mov	x19, x2
    c438:	mov	x20, x0
    c43c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c440:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c444:	mov	x0, x20
    c448:	mov	x1, x25
    c44c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c450:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c454:	mov	w1, #0x4                   	// #4
    c458:	mov	x0, x20
    c45c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c460:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c464:	mov	x0, x20
    c468:	mov	x1, x24
    c46c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c470:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c474:	mov	x0, x20
    c478:	mov	x1, x23
    c47c:	bl	8a84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1858>
    c480:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c484:	mov	x0, x20
    c488:	mov	x1, x22
    c48c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c490:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c494:	mov	w1, w21
    c498:	mov	x0, x20
    c49c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c4a0:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c4a4:	mov	w1, #0x1                   	// #1
    c4a8:	mov	x0, x20
    c4ac:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c4b0:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c4b4:	add	x1, x29, #0x18
    c4b8:	mov	x0, x20
    c4bc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c4c0:	cbz	w0, c4d0 <gcc_cp_fe_context@@Base+0x31d4>
    c4c4:	ldr	x8, [x29, #24]
    c4c8:	mov	w0, #0x1                   	// #1
    c4cc:	str	x8, [x19]
    c4d0:	ldp	x20, x19, [sp, #64]
    c4d4:	ldp	x22, x21, [sp, #48]
    c4d8:	ldp	x24, x23, [sp, #32]
    c4dc:	ldr	x25, [sp, #16]
    c4e0:	ldp	x29, x30, [sp], #80
    c4e4:	ret
    c4e8:	sub	sp, sp, #0x60
    c4ec:	stp	x29, x30, [sp, #16]
    c4f0:	stp	x26, x25, [sp, #32]
    c4f4:	stp	x24, x23, [sp, #48]
    c4f8:	stp	x22, x21, [sp, #64]
    c4fc:	stp	x20, x19, [sp, #80]
    c500:	add	x29, sp, #0x10
    c504:	mov	x26, x1
    c508:	mov	w1, #0x51                  	// #81
    c50c:	mov	w21, w7
    c510:	mov	x22, x6
    c514:	mov	w23, w5
    c518:	mov	x24, x4
    c51c:	mov	w25, w3
    c520:	mov	x19, x2
    c524:	mov	x20, x0
    c528:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c52c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c530:	mov	x0, x20
    c534:	mov	x1, x26
    c538:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c53c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c540:	mov	w1, #0x5                   	// #5
    c544:	mov	x0, x20
    c548:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c54c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c550:	sxtw	x1, w25
    c554:	mov	x0, x20
    c558:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c55c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c560:	mov	x0, x20
    c564:	mov	x1, x24
    c568:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c56c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c570:	mov	w1, w23
    c574:	mov	x0, x20
    c578:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c57c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c580:	mov	x0, x20
    c584:	mov	x1, x22
    c588:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c58c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c590:	mov	w1, w21
    c594:	mov	x0, x20
    c598:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c59c:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c5a0:	mov	w1, #0x1                   	// #1
    c5a4:	mov	x0, x20
    c5a8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c5ac:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c5b0:	add	x1, sp, #0x8
    c5b4:	mov	x0, x20
    c5b8:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c5bc:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x32d0>
    c5c0:	ldr	x8, [sp, #8]
    c5c4:	mov	w0, #0x1                   	// #1
    c5c8:	str	x8, [x19]
    c5cc:	ldp	x20, x19, [sp, #80]
    c5d0:	ldp	x22, x21, [sp, #64]
    c5d4:	ldp	x24, x23, [sp, #48]
    c5d8:	ldp	x26, x25, [sp, #32]
    c5dc:	ldp	x29, x30, [sp, #16]
    c5e0:	add	sp, sp, #0x60
    c5e4:	ret
    c5e8:	sub	sp, sp, #0x60
    c5ec:	stp	x29, x30, [sp, #16]
    c5f0:	stp	x26, x25, [sp, #32]
    c5f4:	stp	x24, x23, [sp, #48]
    c5f8:	stp	x22, x21, [sp, #64]
    c5fc:	stp	x20, x19, [sp, #80]
    c600:	add	x29, sp, #0x10
    c604:	mov	x26, x1
    c608:	mov	w1, #0x51                  	// #81
    c60c:	mov	x21, x7
    c610:	mov	x22, x6
    c614:	mov	w23, w5
    c618:	mov	x24, x4
    c61c:	mov	x25, x3
    c620:	mov	x19, x2
    c624:	mov	x20, x0
    c628:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c62c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c630:	mov	x0, x20
    c634:	mov	x1, x26
    c638:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c63c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c640:	mov	w1, #0x5                   	// #5
    c644:	mov	x0, x20
    c648:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c64c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c650:	mov	x0, x20
    c654:	mov	x1, x25
    c658:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c65c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c660:	mov	x0, x20
    c664:	mov	x1, x24
    c668:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c66c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c670:	mov	w1, w23
    c674:	mov	x0, x20
    c678:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c67c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c680:	mov	x0, x20
    c684:	mov	x1, x22
    c688:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c68c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c690:	mov	x0, x20
    c694:	mov	x1, x21
    c698:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c69c:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c6a0:	mov	w1, #0x1                   	// #1
    c6a4:	mov	x0, x20
    c6a8:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c6ac:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c6b0:	add	x1, sp, #0x8
    c6b4:	mov	x0, x20
    c6b8:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c6bc:	cbz	w0, c6cc <gcc_cp_fe_context@@Base+0x33d0>
    c6c0:	ldr	x8, [sp, #8]
    c6c4:	mov	w0, #0x1                   	// #1
    c6c8:	str	x8, [x19]
    c6cc:	ldp	x20, x19, [sp, #80]
    c6d0:	ldp	x22, x21, [sp, #64]
    c6d4:	ldp	x24, x23, [sp, #48]
    c6d8:	ldp	x26, x25, [sp, #32]
    c6dc:	ldp	x29, x30, [sp, #16]
    c6e0:	add	sp, sp, #0x60
    c6e4:	ret
    c6e8:	sub	sp, sp, #0x40
    c6ec:	stp	x29, x30, [sp, #16]
    c6f0:	stp	x22, x21, [sp, #32]
    c6f4:	stp	x20, x19, [sp, #48]
    c6f8:	add	x29, sp, #0x10
    c6fc:	mov	x22, x1
    c700:	mov	w1, #0x51                  	// #81
    c704:	mov	x21, x3
    c708:	mov	x19, x2
    c70c:	mov	x20, x0
    c710:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c714:	cbz	w0, c774 <gcc_cp_fe_context@@Base+0x3478>
    c718:	mov	x0, x20
    c71c:	mov	x1, x22
    c720:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c724:	cbz	w0, c774 <gcc_cp_fe_context@@Base+0x3478>
    c728:	mov	w1, #0x1                   	// #1
    c72c:	mov	x0, x20
    c730:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c734:	cbz	w0, c774 <gcc_cp_fe_context@@Base+0x3478>
    c738:	mov	x0, x20
    c73c:	mov	x1, x21
    c740:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c744:	cbz	w0, c774 <gcc_cp_fe_context@@Base+0x3478>
    c748:	mov	w1, #0x1                   	// #1
    c74c:	mov	x0, x20
    c750:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c754:	cbz	w0, c774 <gcc_cp_fe_context@@Base+0x3478>
    c758:	add	x1, sp, #0x8
    c75c:	mov	x0, x20
    c760:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c764:	cbz	w0, c774 <gcc_cp_fe_context@@Base+0x3478>
    c768:	ldr	x8, [sp, #8]
    c76c:	mov	w0, #0x1                   	// #1
    c770:	str	w8, [x19]
    c774:	ldp	x20, x19, [sp, #48]
    c778:	ldp	x22, x21, [sp, #32]
    c77c:	ldp	x29, x30, [sp, #16]
    c780:	add	sp, sp, #0x40
    c784:	ret
    c788:	sub	sp, sp, #0x60
    c78c:	stp	x29, x30, [sp, #16]
    c790:	stp	x26, x25, [sp, #32]
    c794:	stp	x24, x23, [sp, #48]
    c798:	stp	x22, x21, [sp, #64]
    c79c:	stp	x20, x19, [sp, #80]
    c7a0:	add	x29, sp, #0x10
    c7a4:	mov	x26, x1
    c7a8:	mov	w1, #0x51                  	// #81
    c7ac:	mov	w21, w7
    c7b0:	mov	x22, x6
    c7b4:	mov	w23, w5
    c7b8:	mov	x24, x4
    c7bc:	mov	x25, x3
    c7c0:	mov	x19, x2
    c7c4:	mov	x20, x0
    c7c8:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c7cc:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c7d0:	mov	x0, x20
    c7d4:	mov	x1, x26
    c7d8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c7dc:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c7e0:	mov	w1, #0x5                   	// #5
    c7e4:	mov	x0, x20
    c7e8:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c7ec:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c7f0:	mov	x0, x20
    c7f4:	mov	x1, x25
    c7f8:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c7fc:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c800:	mov	x0, x20
    c804:	mov	x1, x24
    c808:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c80c:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c810:	mov	w1, w23
    c814:	mov	x0, x20
    c818:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c81c:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c820:	mov	x0, x20
    c824:	mov	x1, x22
    c828:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c82c:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c830:	mov	w1, w21
    c834:	mov	x0, x20
    c838:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c83c:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c840:	mov	w1, #0x1                   	// #1
    c844:	mov	x0, x20
    c848:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c84c:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c850:	add	x1, sp, #0x8
    c854:	mov	x0, x20
    c858:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c85c:	cbz	w0, c86c <gcc_cp_fe_context@@Base+0x3570>
    c860:	ldr	x8, [sp, #8]
    c864:	mov	w0, #0x1                   	// #1
    c868:	str	x8, [x19]
    c86c:	ldp	x20, x19, [sp, #80]
    c870:	ldp	x22, x21, [sp, #64]
    c874:	ldp	x24, x23, [sp, #48]
    c878:	ldp	x26, x25, [sp, #32]
    c87c:	ldp	x29, x30, [sp, #16]
    c880:	add	sp, sp, #0x60
    c884:	ret
    c888:	sub	sp, sp, #0x50
    c88c:	stp	x29, x30, [sp, #16]
    c890:	stp	x24, x23, [sp, #32]
    c894:	stp	x22, x21, [sp, #48]
    c898:	stp	x20, x19, [sp, #64]
    c89c:	add	x29, sp, #0x10
    c8a0:	mov	x24, x1
    c8a4:	mov	w1, #0x51                  	// #81
    c8a8:	mov	x21, x5
    c8ac:	mov	x22, x4
    c8b0:	mov	x23, x3
    c8b4:	mov	x19, x2
    c8b8:	mov	x20, x0
    c8bc:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c8c0:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c8c4:	mov	x0, x20
    c8c8:	mov	x1, x24
    c8cc:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c8d0:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c8d4:	mov	w1, #0x3                   	// #3
    c8d8:	mov	x0, x20
    c8dc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c8e0:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c8e4:	mov	x0, x20
    c8e8:	mov	x1, x23
    c8ec:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c8f0:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c8f4:	mov	x0, x20
    c8f8:	mov	x1, x22
    c8fc:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c900:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c904:	mov	x0, x20
    c908:	mov	x1, x21
    c90c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c910:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c914:	mov	w1, #0x1                   	// #1
    c918:	mov	x0, x20
    c91c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c920:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c924:	add	x1, sp, #0x8
    c928:	mov	x0, x20
    c92c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c930:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x3644>
    c934:	ldr	x8, [sp, #8]
    c938:	mov	w0, #0x1                   	// #1
    c93c:	str	x8, [x19]
    c940:	ldp	x20, x19, [sp, #64]
    c944:	ldp	x22, x21, [sp, #48]
    c948:	ldp	x24, x23, [sp, #32]
    c94c:	ldp	x29, x30, [sp, #16]
    c950:	add	sp, sp, #0x50
    c954:	ret
    c958:	stp	x29, x30, [sp, #-64]!
    c95c:	str	x23, [sp, #16]
    c960:	stp	x22, x21, [sp, #32]
    c964:	stp	x20, x19, [sp, #48]
    c968:	mov	x29, sp
    c96c:	mov	x23, x1
    c970:	mov	w1, #0x51                  	// #81
    c974:	mov	x21, x4
    c978:	mov	x22, x3
    c97c:	mov	x19, x2
    c980:	mov	x20, x0
    c984:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    c988:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c98c:	mov	x0, x20
    c990:	mov	x1, x23
    c994:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    c998:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c99c:	mov	w1, #0x2                   	// #2
    c9a0:	mov	x0, x20
    c9a4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c9a8:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c9ac:	mov	x0, x20
    c9b0:	mov	x1, x22
    c9b4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    c9b8:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c9bc:	mov	x0, x20
    c9c0:	mov	x1, x21
    c9c4:	bl	d348 <gcc_cp_fe_context@@Base+0x404c>
    c9c8:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c9cc:	mov	w1, #0x1                   	// #1
    c9d0:	mov	x0, x20
    c9d4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    c9d8:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c9dc:	add	x1, x29, #0x18
    c9e0:	mov	x0, x20
    c9e4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    c9e8:	cbz	w0, c9f8 <gcc_cp_fe_context@@Base+0x36fc>
    c9ec:	ldr	x8, [x29, #24]
    c9f0:	mov	w0, #0x1                   	// #1
    c9f4:	str	x8, [x19]
    c9f8:	ldp	x20, x19, [sp, #48]
    c9fc:	ldp	x22, x21, [sp, #32]
    ca00:	ldr	x23, [sp, #16]
    ca04:	ldp	x29, x30, [sp], #64
    ca08:	ret
    ca0c:	stp	x29, x30, [sp, #-80]!
    ca10:	str	x25, [sp, #16]
    ca14:	stp	x24, x23, [sp, #32]
    ca18:	stp	x22, x21, [sp, #48]
    ca1c:	stp	x20, x19, [sp, #64]
    ca20:	mov	x29, sp
    ca24:	mov	x25, x1
    ca28:	mov	w1, #0x51                  	// #81
    ca2c:	mov	w21, w6
    ca30:	mov	w22, w5
    ca34:	mov	x23, x4
    ca38:	mov	x24, x3
    ca3c:	mov	x19, x2
    ca40:	mov	x20, x0
    ca44:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    ca48:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    ca4c:	mov	x0, x20
    ca50:	mov	x1, x25
    ca54:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    ca58:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    ca5c:	mov	w1, #0x4                   	// #4
    ca60:	mov	x0, x20
    ca64:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ca68:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    ca6c:	mov	x0, x20
    ca70:	mov	x1, x24
    ca74:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ca78:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    ca7c:	mov	x0, x20
    ca80:	mov	x1, x23
    ca84:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ca88:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    ca8c:	mov	w1, w22
    ca90:	mov	x0, x20
    ca94:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    ca98:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    ca9c:	mov	w1, w21
    caa0:	mov	x0, x20
    caa4:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    caa8:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    caac:	mov	w1, #0x1                   	// #1
    cab0:	mov	x0, x20
    cab4:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    cab8:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    cabc:	add	x1, x29, #0x18
    cac0:	mov	x0, x20
    cac4:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    cac8:	cbz	w0, cad8 <gcc_cp_fe_context@@Base+0x37dc>
    cacc:	ldr	x8, [x29, #24]
    cad0:	mov	w0, #0x1                   	// #1
    cad4:	str	x8, [x19]
    cad8:	ldp	x20, x19, [sp, #64]
    cadc:	ldp	x22, x21, [sp, #48]
    cae0:	ldp	x24, x23, [sp, #32]
    cae4:	ldr	x25, [sp, #16]
    cae8:	ldp	x29, x30, [sp], #80
    caec:	ret
    caf0:	stp	x29, x30, [sp, #-64]!
    caf4:	str	x23, [sp, #16]
    caf8:	stp	x22, x21, [sp, #32]
    cafc:	stp	x20, x19, [sp, #48]
    cb00:	mov	x29, sp
    cb04:	mov	x23, x1
    cb08:	mov	w1, #0x51                  	// #81
    cb0c:	mov	w21, w4
    cb10:	mov	x22, x3
    cb14:	mov	x19, x2
    cb18:	mov	x20, x0
    cb1c:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    cb20:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb24:	mov	x0, x20
    cb28:	mov	x1, x23
    cb2c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    cb30:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb34:	mov	w1, #0x2                   	// #2
    cb38:	mov	x0, x20
    cb3c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    cb40:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb44:	mov	x0, x20
    cb48:	mov	x1, x22
    cb4c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    cb50:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb54:	mov	w1, w21
    cb58:	mov	x0, x20
    cb5c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    cb60:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb64:	mov	w1, #0x1                   	// #1
    cb68:	mov	x0, x20
    cb6c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    cb70:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb74:	add	x1, x29, #0x18
    cb78:	mov	x0, x20
    cb7c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    cb80:	cbz	w0, cb90 <gcc_cp_fe_context@@Base+0x3894>
    cb84:	ldr	x8, [x29, #24]
    cb88:	mov	w0, #0x1                   	// #1
    cb8c:	str	x8, [x19]
    cb90:	ldp	x20, x19, [sp, #48]
    cb94:	ldp	x22, x21, [sp, #32]
    cb98:	ldr	x23, [sp, #16]
    cb9c:	ldp	x29, x30, [sp], #64
    cba0:	ret
    cba4:	stp	x29, x30, [sp, #-80]!
    cba8:	str	x25, [sp, #16]
    cbac:	stp	x24, x23, [sp, #32]
    cbb0:	stp	x22, x21, [sp, #48]
    cbb4:	stp	x20, x19, [sp, #64]
    cbb8:	mov	x29, sp
    cbbc:	mov	x25, x1
    cbc0:	mov	w1, #0x51                  	// #81
    cbc4:	mov	w21, w6
    cbc8:	mov	x22, x5
    cbcc:	mov	x23, x4
    cbd0:	mov	x24, x3
    cbd4:	mov	x19, x2
    cbd8:	mov	x20, x0
    cbdc:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    cbe0:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cbe4:	mov	x0, x20
    cbe8:	mov	x1, x25
    cbec:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    cbf0:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cbf4:	mov	w1, #0x4                   	// #4
    cbf8:	mov	x0, x20
    cbfc:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    cc00:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc04:	mov	x0, x20
    cc08:	mov	x1, x24
    cc0c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    cc10:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc14:	mov	x0, x20
    cc18:	mov	x1, x23
    cc1c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    cc20:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc24:	mov	x0, x20
    cc28:	mov	x1, x22
    cc2c:	bl	d15c <gcc_cp_fe_context@@Base+0x3e60>
    cc30:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc34:	mov	w1, w21
    cc38:	mov	x0, x20
    cc3c:	bl	d0dc <gcc_cp_fe_context@@Base+0x3de0>
    cc40:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc44:	mov	w1, #0x1                   	// #1
    cc48:	mov	x0, x20
    cc4c:	bl	ceb4 <gcc_cp_fe_context@@Base+0x3bb8>
    cc50:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc54:	add	x1, x29, #0x18
    cc58:	mov	x0, x20
    cc5c:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    cc60:	cbz	w0, cc70 <gcc_cp_fe_context@@Base+0x3974>
    cc64:	ldr	x8, [x29, #24]
    cc68:	mov	w0, #0x1                   	// #1
    cc6c:	str	w8, [x19]
    cc70:	ldp	x20, x19, [sp, #64]
    cc74:	ldp	x22, x21, [sp, #48]
    cc78:	ldp	x24, x23, [sp, #32]
    cc7c:	ldr	x25, [sp, #16]
    cc80:	ldp	x29, x30, [sp], #80
    cc84:	ret
    cc88:	stp	x29, x30, [sp, #-32]!
    cc8c:	str	x19, [sp, #16]
    cc90:	mov	x29, sp
    cc94:	adrp	x4, 28000 <xexit@@Base+0x14018>
    cc98:	adrp	x3, 28000 <xexit@@Base+0x14018>
    cc9c:	ldr	x4, [x4, #3880]
    cca0:	ldr	x3, [x3, #3400]
    cca4:	adrp	x1, c000 <gcc_cp_fe_context@@Base+0x2d04>
    cca8:	adrp	x2, c000 <gcc_cp_fe_context@@Base+0x2d04>
    ccac:	mov	x19, x0
    ccb0:	add	x1, x1, #0xcd4
    ccb4:	add	x2, x2, #0xcdc
    ccb8:	mov	w0, #0xa                   	// #10
    ccbc:	mov	x5, x3
    ccc0:	bl	54b0 <htab_create_alloc@plt>
    ccc4:	str	x0, [x19]
    ccc8:	ldr	x19, [sp, #16]
    cccc:	ldp	x29, x30, [sp], #32
    ccd0:	ret
    ccd4:	ldr	x0, [x0]
    ccd8:	b	5640 <htab_hash_string@plt>
    ccdc:	stp	x29, x30, [sp, #-16]!
    cce0:	ldr	x0, [x0]
    cce4:	ldr	x1, [x1]
    cce8:	mov	x29, sp
    ccec:	bl	57a0 <strcmp@plt>
    ccf0:	cmp	w0, #0x0
    ccf4:	cset	w0, eq  // eq = none
    ccf8:	ldp	x29, x30, [sp], #16
    ccfc:	ret
    cd00:	stp	x29, x30, [sp, #-16]!
    cd04:	mov	x29, sp
    cd08:	ldr	x0, [x0]
    cd0c:	bl	58c0 <htab_delete@plt>
    cd10:	ldp	x29, x30, [sp], #16
    cd14:	ret
    cd18:	bl	6e7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x140>
    cd1c:	sub	sp, sp, #0x30
    cd20:	stp	x29, x30, [sp, #16]
    cd24:	str	x19, [sp, #32]
    cd28:	add	x29, sp, #0x10
    cd2c:	stp	x1, x2, [sp]
    cd30:	ldr	x0, [x0]
    cd34:	mov	x1, sp
    cd38:	mov	w2, #0x1                   	// #1
    cd3c:	bl	5720 <htab_find_slot@plt>
    cd40:	mov	x19, x0
    cd44:	mov	w0, #0x10                  	// #16
    cd48:	bl	5770 <xmalloc@plt>
    cd4c:	str	x0, [x19]
    cd50:	ldr	q0, [sp]
    cd54:	ldr	x19, [sp, #32]
    cd58:	ldp	x29, x30, [sp, #16]
    cd5c:	str	q0, [x0]
    cd60:	add	sp, sp, #0x30
    cd64:	ret
    cd68:	sub	sp, sp, #0x20
    cd6c:	stp	x29, x30, [sp, #16]
    cd70:	add	x29, sp, #0x10
    cd74:	str	x1, [sp]
    cd78:	ldr	x0, [x0]
    cd7c:	mov	x1, sp
    cd80:	bl	55f0 <htab_find@plt>
    cd84:	cbz	x0, cd8c <gcc_cp_fe_context@@Base+0x3a90>
    cd88:	ldr	x0, [x0, #8]
    cd8c:	ldp	x29, x30, [sp, #16]
    cd90:	add	sp, sp, #0x20
    cd94:	ret
    cd98:	adrp	x8, 28000 <xexit@@Base+0x14018>
    cd9c:	add	x8, x8, #0x9b8
    cda0:	str	x8, [x0], #16
    cda4:	b	cd00 <gcc_cp_fe_context@@Base+0x3a04>
    cda8:	stp	x29, x30, [sp, #-32]!
    cdac:	adrp	x8, 28000 <xexit@@Base+0x14018>
    cdb0:	add	x8, x8, #0x9b8
    cdb4:	str	x19, [sp, #16]
    cdb8:	mov	x19, x0
    cdbc:	str	x8, [x0], #16
    cdc0:	mov	x29, sp
    cdc4:	bl	cd00 <gcc_cp_fe_context@@Base+0x3a04>
    cdc8:	mov	x0, x19
    cdcc:	ldr	x19, [sp, #16]
    cdd0:	ldp	x29, x30, [sp], #32
    cdd4:	b	5650 <_ZdlPv@plt>
    cdd8:	ret
    cddc:	sub	sp, sp, #0x20
    cde0:	stp	x29, x30, [sp, #16]
    cde4:	add	x29, sp, #0x10
    cde8:	sturb	w1, [x29, #-4]
    cdec:	ldr	w0, [x0, #8]
    cdf0:	sub	x1, x29, #0x4
    cdf4:	mov	w2, #0x1                   	// #1
    cdf8:	bl	57c0 <write@plt>
    cdfc:	ldp	x29, x30, [sp, #16]
    ce00:	cmp	x0, #0x1
    ce04:	cset	w0, eq  // eq = none
    ce08:	add	sp, sp, #0x20
    ce0c:	ret
    ce10:	stp	x29, x30, [sp, #-32]!
    ce14:	str	x19, [sp, #16]
    ce18:	mov	x29, sp
    ce1c:	ldr	w0, [x0, #8]
    ce20:	mov	w19, w2
    ce24:	sxtw	x2, w19
    ce28:	bl	57c0 <write@plt>
    ce2c:	cmp	x0, w19, sxtw
    ce30:	ldr	x19, [sp, #16]
    ce34:	cset	w0, eq  // eq = none
    ce38:	ldp	x29, x30, [sp], #32
    ce3c:	ret
    ce40:	stp	x29, x30, [sp, #-32]!
    ce44:	str	x19, [sp, #16]
    ce48:	mov	x29, sp
    ce4c:	ldr	w0, [x0, #8]
    ce50:	mov	w19, w1
    ce54:	add	x1, x29, #0x1c
    ce58:	mov	w2, #0x1                   	// #1
    ce5c:	bl	55a0 <read@plt>
    ce60:	ldrb	w8, [x29, #28]
    ce64:	cmp	x0, #0x1
    ce68:	cset	w9, eq  // eq = none
    ce6c:	cmp	w8, w19, uxtb
    ce70:	ldr	x19, [sp, #16]
    ce74:	cset	w8, eq  // eq = none
    ce78:	and	w0, w9, w8
    ce7c:	ldp	x29, x30, [sp], #32
    ce80:	ret
    ce84:	stp	x29, x30, [sp, #-32]!
    ce88:	str	x19, [sp, #16]
    ce8c:	mov	x29, sp
    ce90:	ldr	w0, [x0, #8]
    ce94:	mov	w19, w2
    ce98:	sxtw	x2, w19
    ce9c:	bl	55a0 <read@plt>
    cea0:	cmp	x0, w19, sxtw
    cea4:	ldr	x19, [sp, #16]
    cea8:	cset	w0, eq  // eq = none
    ceac:	ldp	x29, x30, [sp], #32
    ceb0:	ret
    ceb4:	stp	x29, x30, [sp, #-80]!
    ceb8:	str	x28, [sp, #16]
    cebc:	stp	x24, x23, [sp, #32]
    cec0:	stp	x22, x21, [sp, #48]
    cec4:	stp	x20, x19, [sp, #64]
    cec8:	mov	x29, sp
    cecc:	sub	sp, sp, #0x480
    ced0:	mov	w19, w1
    ced4:	mov	x20, x0
    ced8:	add	x21, x0, #0x10
    cedc:	mov	w22, #0x1                   	// #1
    cee0:	sub	x23, x29, #0x80
    cee4:	mov	x24, sp
    cee8:	movi	v0.2d, #0x0
    ceec:	stp	q0, q0, [x29, #-32]
    cef0:	stp	q0, q0, [x29, #-64]
    cef4:	stp	q0, q0, [x29, #-96]
    cef8:	stp	q0, q0, [x29, #-128]
    cefc:	ldr	w8, [x20, #8]
    cf00:	add	w9, w8, #0x3f
    cf04:	cmp	w8, #0x0
    cf08:	csel	w9, w9, w8, lt  // lt = tstop
    cf0c:	asr	w10, w9, #6
    cf10:	ldr	x11, [x23, w10, sxtw #3]
    cf14:	and	w9, w9, #0xffffffc0
    cf18:	sub	w8, w8, w9
    cf1c:	lsl	x8, x22, x8
    cf20:	orr	x8, x8, x11
    cf24:	str	x8, [x23, w10, sxtw #3]
    cf28:	ldr	w8, [x20, #12]
    cf2c:	cmn	w8, #0x1
    cf30:	b.eq	cf5c <gcc_cp_fe_context@@Base+0x3c60>  // b.none
    cf34:	add	w9, w8, #0x3f
    cf38:	cmp	w8, #0x0
    cf3c:	csel	w9, w9, w8, lt  // lt = tstop
    cf40:	asr	w10, w9, #6
    cf44:	ldr	x11, [x23, w10, sxtw #3]
    cf48:	and	w9, w9, #0xffffffc0
    cf4c:	sub	w8, w8, w9
    cf50:	lsl	x8, x22, x8
    cf54:	orr	x8, x11, x8
    cf58:	str	x8, [x23, w10, sxtw #3]
    cf5c:	sub	x1, x29, #0x80
    cf60:	mov	w0, #0x400                 	// #1024
    cf64:	mov	x2, xzr
    cf68:	mov	x3, xzr
    cf6c:	mov	x4, xzr
    cf70:	bl	53a0 <select@plt>
    cf74:	cmn	w0, #0x1
    cf78:	b.eq	d054 <gcc_cp_fe_context@@Base+0x3d58>  // b.none
    cf7c:	ldr	w0, [x20, #12]
    cf80:	cmn	w0, #0x1
    cf84:	b.eq	cfd8 <gcc_cp_fe_context@@Base+0x3cdc>  // b.none
    cf88:	add	w8, w0, #0x3f
    cf8c:	cmp	w0, #0x0
    cf90:	csel	w8, w8, w0, lt  // lt = tstop
    cf94:	asr	w9, w8, #6
    cf98:	ldr	x9, [x23, w9, sxtw #3]
    cf9c:	and	w8, w8, #0xffffffc0
    cfa0:	sub	w8, w0, w8
    cfa4:	lsr	x8, x9, x8
    cfa8:	tbz	w8, #0, cfd8 <gcc_cp_fe_context@@Base+0x3cdc>
    cfac:	mov	x1, sp
    cfb0:	mov	w2, #0x3ff                 	// #1023
    cfb4:	bl	55a0 <read@plt>
    cfb8:	tbnz	w0, #31, d07c <gcc_cp_fe_context@@Base+0x3d80>
    cfbc:	cbz	w0, cfd8 <gcc_cp_fe_context@@Base+0x3cdc>
    cfc0:	strb	wzr, [x24, w0, sxtw]
    cfc4:	ldr	x8, [x20]
    cfc8:	mov	x1, sp
    cfcc:	mov	x0, x20
    cfd0:	ldr	x8, [x8, #16]
    cfd4:	blr	x8
    cfd8:	ldr	w0, [x20, #8]
    cfdc:	add	w8, w0, #0x3f
    cfe0:	cmp	w0, #0x0
    cfe4:	csel	w8, w8, w0, lt  // lt = tstop
    cfe8:	asr	w9, w8, #6
    cfec:	ldr	x9, [x23, w9, sxtw #3]
    cff0:	and	w8, w8, #0xffffffc0
    cff4:	sub	w8, w0, w8
    cff8:	lsr	x8, x9, x8
    cffc:	tbz	w8, #0, cee8 <gcc_cp_fe_context@@Base+0x3bec>
    d000:	add	x1, x29, #0x1c
    d004:	mov	w2, #0x1                   	// #1
    d008:	bl	55a0 <read@plt>
    d00c:	cmp	w0, #0x1
    d010:	b.ne	d068 <gcc_cp_fe_context@@Base+0x3d6c>  // b.any
    d014:	ldrb	w8, [x29, #28]
    d018:	cmp	w8, #0x51
    d01c:	b.ne	d074 <gcc_cp_fe_context@@Base+0x3d78>  // b.any
    d020:	mov	x1, sp
    d024:	mov	x0, x20
    d028:	bl	d1dc <gcc_cp_fe_context@@Base+0x3ee0>
    d02c:	cbz	w0, d07c <gcc_cp_fe_context@@Base+0x3d80>
    d030:	ldr	x1, [sp]
    d034:	mov	x0, x21
    d038:	bl	cd68 <gcc_cp_fe_context@@Base+0x3a6c>
    d03c:	mov	x8, x0
    d040:	cbz	x0, d07c <gcc_cp_fe_context@@Base+0x3d80>
    d044:	mov	x0, x20
    d048:	blr	x8
    d04c:	cbnz	w0, cee8 <gcc_cp_fe_context@@Base+0x3bec>
    d050:	b	d07c <gcc_cp_fe_context@@Base+0x3d80>
    d054:	bl	5740 <__errno_location@plt>
    d058:	ldr	w8, [x0]
    d05c:	cmp	w8, #0x4
    d060:	b.eq	cee8 <gcc_cp_fe_context@@Base+0x3bec>  // b.none
    d064:	b	d07c <gcc_cp_fe_context@@Base+0x3d80>
    d068:	cbnz	w0, d07c <gcc_cp_fe_context@@Base+0x3d80>
    d06c:	eor	w19, w19, #0x1
    d070:	b	d080 <gcc_cp_fe_context@@Base+0x3d84>
    d074:	cmp	w8, #0x52
    d078:	b.eq	d080 <gcc_cp_fe_context@@Base+0x3d84>  // b.none
    d07c:	mov	w19, wzr
    d080:	and	w0, w19, #0x1
    d084:	add	sp, sp, #0x480
    d088:	ldp	x20, x19, [sp, #64]
    d08c:	ldp	x22, x21, [sp, #48]
    d090:	ldp	x24, x23, [sp, #32]
    d094:	ldr	x28, [sp, #16]
    d098:	ldp	x29, x30, [sp], #80
    d09c:	ret
    d0a0:	bl	58d0 <_Unwind_Resume@plt>
    d0a4:	bl	58d0 <_Unwind_Resume@plt>
    d0a8:	stp	x29, x30, [sp, #-32]!
    d0ac:	str	x19, [sp, #16]
    d0b0:	mov	x29, sp
    d0b4:	mov	x19, x1
    d0b8:	add	x1, x29, #0x18
    d0bc:	bl	d118 <gcc_cp_fe_context@@Base+0x3e1c>
    d0c0:	cbz	w0, d0d0 <gcc_cp_fe_context@@Base+0x3dd4>
    d0c4:	ldr	x8, [x29, #24]
    d0c8:	cmp	x8, x19
    d0cc:	cset	w0, eq  // eq = none
    d0d0:	ldr	x19, [sp, #16]
    d0d4:	ldp	x29, x30, [sp], #32
    d0d8:	ret
    d0dc:	stp	x29, x30, [sp, #-32]!
    d0e0:	str	x19, [sp, #16]
    d0e4:	mov	x29, sp
    d0e8:	str	x1, [x29, #24]
    d0ec:	mov	w1, #0x69                  	// #105
    d0f0:	mov	x19, x0
    d0f4:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    d0f8:	cbz	w0, d10c <gcc_cp_fe_context@@Base+0x3e10>
    d0fc:	add	x1, x29, #0x18
    d100:	mov	w2, #0x8                   	// #8
    d104:	mov	x0, x19
    d108:	bl	ce10 <gcc_cp_fe_context@@Base+0x3b14>
    d10c:	ldr	x19, [sp, #16]
    d110:	ldp	x29, x30, [sp], #32
    d114:	ret
    d118:	stp	x29, x30, [sp, #-32]!
    d11c:	stp	x20, x19, [sp, #16]
    d120:	mov	x29, sp
    d124:	mov	x19, x1
    d128:	mov	w1, #0x69                  	// #105
    d12c:	mov	x20, x0
    d130:	bl	ce40 <gcc_cp_fe_context@@Base+0x3b44>
    d134:	cbz	w0, d150 <gcc_cp_fe_context@@Base+0x3e54>
    d138:	mov	x0, x20
    d13c:	mov	x1, x19
    d140:	ldp	x20, x19, [sp, #16]
    d144:	mov	w2, #0x8                   	// #8
    d148:	ldp	x29, x30, [sp], #32
    d14c:	b	ce84 <gcc_cp_fe_context@@Base+0x3b88>
    d150:	ldp	x20, x19, [sp, #16]
    d154:	ldp	x29, x30, [sp], #32
    d158:	ret
    d15c:	sub	sp, sp, #0x30
    d160:	stp	x29, x30, [sp, #16]
    d164:	stp	x20, x19, [sp, #32]
    d168:	add	x29, sp, #0x10
    d16c:	mov	x19, x1
    d170:	mov	w1, #0x73                  	// #115
    d174:	mov	x20, x0
    d178:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    d17c:	cbz	w0, d1cc <gcc_cp_fe_context@@Base+0x3ed0>
    d180:	cbz	x19, d190 <gcc_cp_fe_context@@Base+0x3e94>
    d184:	mov	x0, x19
    d188:	bl	5430 <strlen@plt>
    d18c:	b	d194 <gcc_cp_fe_context@@Base+0x3e98>
    d190:	mov	x0, #0xffffffffffffffff    	// #-1
    d194:	str	x0, [sp, #8]
    d198:	add	x1, sp, #0x8
    d19c:	mov	w2, #0x8                   	// #8
    d1a0:	mov	x0, x20
    d1a4:	bl	ce10 <gcc_cp_fe_context@@Base+0x3b14>
    d1a8:	cmp	w0, #0x0
    d1ac:	mov	w8, w0
    d1b0:	cset	w0, ne  // ne = any
    d1b4:	cbz	x19, d1cc <gcc_cp_fe_context@@Base+0x3ed0>
    d1b8:	cbz	w8, d1cc <gcc_cp_fe_context@@Base+0x3ed0>
    d1bc:	ldr	w2, [sp, #8]
    d1c0:	mov	x0, x20
    d1c4:	mov	x1, x19
    d1c8:	bl	ce10 <gcc_cp_fe_context@@Base+0x3b14>
    d1cc:	ldp	x20, x19, [sp, #32]
    d1d0:	ldp	x29, x30, [sp, #16]
    d1d4:	add	sp, sp, #0x30
    d1d8:	ret
    d1dc:	sub	sp, sp, #0x40
    d1e0:	stp	x29, x30, [sp, #16]
    d1e4:	stp	x22, x21, [sp, #32]
    d1e8:	stp	x20, x19, [sp, #48]
    d1ec:	add	x29, sp, #0x10
    d1f0:	mov	x19, x1
    d1f4:	mov	w1, #0x73                  	// #115
    d1f8:	mov	x20, x0
    d1fc:	bl	ce40 <gcc_cp_fe_context@@Base+0x3b44>
    d200:	cbz	w0, d278 <gcc_cp_fe_context@@Base+0x3f7c>
    d204:	add	x1, sp, #0x8
    d208:	mov	w2, #0x8                   	// #8
    d20c:	mov	x0, x20
    d210:	bl	ce84 <gcc_cp_fe_context@@Base+0x3b88>
    d214:	cbz	w0, d278 <gcc_cp_fe_context@@Base+0x3f7c>
    d218:	ldr	x22, [sp, #8]
    d21c:	cmn	x22, #0x1
    d220:	b.eq	d260 <gcc_cp_fe_context@@Base+0x3f64>  // b.none
    d224:	adrp	x1, 28000 <xexit@@Base+0x14018>
    d228:	ldr	x1, [x1, #3280]
    d22c:	add	x0, x22, #0x1
    d230:	bl	5850 <_ZnamRKSt9nothrow_t@plt>
    d234:	cbz	x0, d278 <gcc_cp_fe_context@@Base+0x3f7c>
    d238:	mov	x21, x0
    d23c:	mov	x0, x20
    d240:	mov	x1, x21
    d244:	mov	w2, w22
    d248:	bl	ce84 <gcc_cp_fe_context@@Base+0x3b88>
    d24c:	cbz	w0, d26c <gcc_cp_fe_context@@Base+0x3f70>
    d250:	ldr	x8, [sp, #8]
    d254:	strb	wzr, [x21, x8]
    d258:	str	x21, [x19]
    d25c:	b	d264 <gcc_cp_fe_context@@Base+0x3f68>
    d260:	str	xzr, [x19]
    d264:	mov	w0, #0x1                   	// #1
    d268:	b	d278 <gcc_cp_fe_context@@Base+0x3f7c>
    d26c:	mov	x0, x21
    d270:	bl	5730 <_ZdaPv@plt>
    d274:	mov	w0, wzr
    d278:	ldp	x20, x19, [sp, #48]
    d27c:	ldp	x22, x21, [sp, #32]
    d280:	ldp	x29, x30, [sp, #16]
    d284:	add	sp, sp, #0x40
    d288:	ret
    d28c:	sub	sp, sp, #0x30
    d290:	stp	x29, x30, [sp, #16]
    d294:	stp	x20, x19, [sp, #32]
    d298:	add	x29, sp, #0x10
    d29c:	mov	x20, x2
    d2a0:	mov	x19, x0
    d2a4:	bl	cddc <gcc_cp_fe_context@@Base+0x3ae0>
    d2a8:	cbz	w0, d2c8 <gcc_cp_fe_context@@Base+0x3fcc>
    d2ac:	add	x1, sp, #0x8
    d2b0:	mov	w2, #0x8                   	// #8
    d2b4:	mov	x0, x19
    d2b8:	str	x20, [sp, #8]
    d2bc:	bl	ce10 <gcc_cp_fe_context@@Base+0x3b14>
    d2c0:	cmp	w0, #0x0
    d2c4:	cset	w0, ne  // ne = any
    d2c8:	ldp	x20, x19, [sp, #32]
    d2cc:	ldp	x29, x30, [sp, #16]
    d2d0:	add	sp, sp, #0x30
    d2d4:	ret
    d2d8:	mov	x8, x1
    d2dc:	mov	x1, x2
    d2e0:	mov	w2, w8
    d2e4:	b	ce10 <gcc_cp_fe_context@@Base+0x3b14>
    d2e8:	sub	sp, sp, #0x30
    d2ec:	stp	x29, x30, [sp, #16]
    d2f0:	stp	x20, x19, [sp, #32]
    d2f4:	add	x29, sp, #0x10
    d2f8:	mov	x19, x2
    d2fc:	mov	x20, x0
    d300:	bl	ce40 <gcc_cp_fe_context@@Base+0x3b44>
    d304:	cbz	w0, d328 <gcc_cp_fe_context@@Base+0x402c>
    d308:	add	x1, sp, #0x8
    d30c:	mov	w2, #0x8                   	// #8
    d310:	mov	x0, x20
    d314:	bl	ce84 <gcc_cp_fe_context@@Base+0x3b88>
    d318:	cbz	w0, d328 <gcc_cp_fe_context@@Base+0x402c>
    d31c:	ldr	x8, [sp, #8]
    d320:	mov	w0, #0x1                   	// #1
    d324:	str	x8, [x19]
    d328:	ldp	x20, x19, [sp, #32]
    d32c:	ldp	x29, x30, [sp, #16]
    d330:	add	sp, sp, #0x30
    d334:	ret
    d338:	mov	x8, x1
    d33c:	mov	x1, x2
    d340:	mov	w2, w8
    d344:	b	ce84 <gcc_cp_fe_context@@Base+0x3b88>
    d348:	stp	x29, x30, [sp, #-48]!
    d34c:	str	x21, [sp, #16]
    d350:	stp	x20, x19, [sp, #32]
    d354:	mov	x29, sp
    d358:	mov	x20, x1
    d35c:	mov	x19, x0
    d360:	cbz	x1, d36c <gcc_cp_fe_context@@Base+0x4070>
    d364:	ldrsw	x21, [x20]
    d368:	b	d370 <gcc_cp_fe_context@@Base+0x4074>
    d36c:	mov	x21, #0xffffffffffffffff    	// #-1
    d370:	mov	w1, #0x61                  	// #97
    d374:	mov	x0, x19
    d378:	mov	x2, x21
    d37c:	bl	d28c <gcc_cp_fe_context@@Base+0x3f90>
    d380:	cmp	w0, #0x0
    d384:	mov	w8, w0
    d388:	cset	w0, ne  // ne = any
    d38c:	cbz	w8, d3b0 <gcc_cp_fe_context@@Base+0x40b4>
    d390:	cbz	x20, d3b0 <gcc_cp_fe_context@@Base+0x40b4>
    d394:	ldr	x1, [x20, #8]
    d398:	lsl	w2, w21, #3
    d39c:	mov	x0, x19
    d3a0:	ldp	x20, x19, [sp, #32]
    d3a4:	ldr	x21, [sp, #16]
    d3a8:	ldp	x29, x30, [sp], #48
    d3ac:	b	ce10 <gcc_cp_fe_context@@Base+0x3b14>
    d3b0:	ldp	x20, x19, [sp, #32]
    d3b4:	ldr	x21, [sp, #16]
    d3b8:	ldp	x29, x30, [sp], #48
    d3bc:	ret
    d3c0:	stp	x29, x30, [sp, #-64]!
    d3c4:	str	x23, [sp, #16]
    d3c8:	stp	x22, x21, [sp, #32]
    d3cc:	stp	x20, x19, [sp, #48]
    d3d0:	mov	x29, sp
    d3d4:	mov	x19, x1
    d3d8:	add	x2, x29, #0x18
    d3dc:	mov	w1, #0x61                  	// #97
    d3e0:	mov	x20, x0
    d3e4:	bl	d2e8 <gcc_cp_fe_context@@Base+0x3fec>
    d3e8:	cbz	w0, d444 <gcc_cp_fe_context@@Base+0x4148>
    d3ec:	ldr	x23, [x29, #24]
    d3f0:	cmn	x23, #0x1
    d3f4:	b.eq	d43c <gcc_cp_fe_context@@Base+0x4140>  // b.none
    d3f8:	mov	w0, #0x10                  	// #16
    d3fc:	bl	5660 <_Znwm@plt>
    d400:	lsl	x8, x23, #3
    d404:	cmp	xzr, x23, lsr #61
    d408:	mov	x21, x0
    d40c:	str	w23, [x0]
    d410:	csinv	x0, x8, xzr, eq  // eq = none
    d414:	bl	5380 <_Znam@plt>
    d418:	mov	x22, x0
    d41c:	str	x0, [x21, #8]
    d420:	lsl	w2, w23, #3
    d424:	mov	x0, x20
    d428:	mov	x1, x22
    d42c:	bl	ce84 <gcc_cp_fe_context@@Base+0x3b88>
    d430:	cbz	w0, d458 <gcc_cp_fe_context@@Base+0x415c>
    d434:	str	x21, [x19]
    d438:	b	d440 <gcc_cp_fe_context@@Base+0x4144>
    d43c:	str	xzr, [x19]
    d440:	mov	w0, #0x1                   	// #1
    d444:	ldp	x20, x19, [sp, #48]
    d448:	ldp	x22, x21, [sp, #32]
    d44c:	ldr	x23, [sp, #16]
    d450:	ldp	x29, x30, [sp], #64
    d454:	ret
    d458:	mov	x0, x22
    d45c:	bl	5730 <_ZdaPv@plt>
    d460:	ldr	x0, [x19]
    d464:	cbz	x0, d444 <gcc_cp_fe_context@@Base+0x4148>
    d468:	bl	5650 <_ZdlPv@plt>
    d46c:	mov	w0, wzr
    d470:	b	d444 <gcc_cp_fe_context@@Base+0x4148>

000000000000d474 <xre_set_syntax@@Base>:
    d474:	adrp	x9, 28000 <xexit@@Base+0x14018>
    d478:	ldr	x9, [x9, #3808]
    d47c:	ldr	x8, [x9]
    d480:	str	x0, [x9]
    d484:	mov	x0, x8
    d488:	ret

000000000000d48c <xre_compile_fastmap@@Base>:
    d48c:	b	d490 <xre_compile_fastmap@@Base+0x4>
    d490:	stp	x29, x30, [sp, #-96]!
    d494:	stp	x28, x27, [sp, #16]
    d498:	stp	x26, x25, [sp, #32]
    d49c:	stp	x24, x23, [sp, #48]
    d4a0:	stp	x22, x21, [sp, #64]
    d4a4:	stp	x20, x19, [sp, #80]
    d4a8:	mov	x29, sp
    d4ac:	sub	sp, sp, #0x40
    d4b0:	ldr	x20, [x0, #32]
    d4b4:	ldr	x23, [x0]
    d4b8:	ldr	x8, [x0, #16]
    d4bc:	mov	x19, x0
    d4c0:	mov	w2, #0x100                 	// #256
    d4c4:	mov	x0, x20
    d4c8:	mov	w1, wzr
    d4cc:	add	x25, x23, x8
    d4d0:	sub	x21, x29, #0x30
    d4d4:	bl	5530 <memset@plt>
    d4d8:	ldrb	w9, [x19, #56]
    d4dc:	adrp	x15, 14000 <xexit@@Base+0x18>
    d4e0:	adrp	x16, 29000 <xexit@@Base+0x15018>
    d4e4:	mov	w8, wzr
    d4e8:	and	w9, w9, #0xfffffffe
    d4ec:	sub	x13, x20, #0x1
    d4f0:	mov	w14, #0x1                   	// #1
    d4f4:	mov	w17, #0x5                   	// #5
    d4f8:	add	x15, x15, #0x8e0
    d4fc:	add	x16, x16, #0x648
    d500:	orr	w9, w9, #0x8
    d504:	strb	w9, [x19, #56]
    d508:	mov	w27, #0x1                   	// #1
    d50c:	cmp	x23, x25
    d510:	mov	w24, w8
    d514:	b.eq	d87c <xre_compile_fastmap@@Base+0x3f0>  // b.none
    d518:	ldrb	w8, [x23]
    d51c:	mov	x22, x23
    d520:	cmp	w8, #0x1
    d524:	b.eq	d87c <xre_compile_fastmap@@Base+0x3f0>  // b.none
    d528:	cmp	w8, #0x1d
    d52c:	b.hi	d8e4 <xre_compile_fastmap@@Base+0x458>  // b.pmore
    d530:	adr	x9, d50c <xre_compile_fastmap@@Base+0x80>
    d534:	ldrb	w10, [x15, x8]
    d538:	add	x9, x9, x10, lsl #2
    d53c:	mov	w26, wzr
    d540:	add	x23, x22, #0x1
    d544:	mov	w8, w24
    d548:	br	x9
    d54c:	ldrb	w8, [x22, #1]
    d550:	ldrsb	x9, [x22, #2]
    d554:	bfi	x8, x9, #8, #56
    d558:	add	x9, x22, x8
    d55c:	cmp	w8, #0x0
    d560:	add	x23, x9, #0x3
    d564:	mov	w8, w24
    d568:	b.gt	d50c <xre_compile_fastmap@@Base+0x80>
    d56c:	ldrb	w8, [x23]
    d570:	cmp	w8, #0x15
    d574:	b.eq	d584 <xre_compile_fastmap@@Base+0xf8>  // b.none
    d578:	cmp	w8, #0xf
    d57c:	mov	w8, w24
    d580:	b.ne	d50c <xre_compile_fastmap@@Base+0x80>  // b.any
    d584:	ldrb	w9, [x23, #1]!
    d588:	mov	w8, wzr
    d58c:	ldrsb	x10, [x23, #1]
    d590:	bfi	x9, x10, #8, #56
    d594:	add	x9, x23, x9
    d598:	add	x23, x9, #0x2
    d59c:	cbz	w24, d50c <xre_compile_fastmap@@Base+0x80>
    d5a0:	sub	w8, w24, #0x1
    d5a4:	ldr	x9, [x21, w8, uxtw #3]
    d5a8:	cmp	x9, x23
    d5ac:	csel	w8, w8, w24, eq  // eq = none
    d5b0:	b	d50c <xre_compile_fastmap@@Base+0x80>
    d5b4:	add	x23, x22, #0x3
    d5b8:	mov	w8, w24
    d5bc:	b	d50c <xre_compile_fastmap@@Base+0x80>
    d5c0:	ldrb	w9, [x22, #3]
    d5c4:	ldrsb	w8, [x22, #4]
    d5c8:	add	x23, x22, #0x5
    d5cc:	bfi	w9, w8, #8, #24
    d5d0:	mov	w8, w24
    d5d4:	cbnz	w9, d50c <xre_compile_fastmap@@Base+0x80>
    d5d8:	mov	w26, #0x1                   	// #1
    d5dc:	ldrb	w8, [x22, #1]
    d5e0:	ldrsb	x9, [x22, #2]
    d5e4:	add	x23, x22, #0x3
    d5e8:	bfi	x8, x9, #8, #56
    d5ec:	add	x28, x23, x8
    d5f0:	cmp	x28, x25
    d5f4:	b.cs	d674 <xre_compile_fastmap@@Base+0x1e8>  // b.hs, b.nlast
    d5f8:	cmp	w24, w17
    d5fc:	b.ne	d664 <xre_compile_fastmap@@Base+0x1d8>  // b.any
    d600:	adrp	x8, 28000 <xexit@@Base+0x14018>
    d604:	ldr	x8, [x8, #3960]
    d608:	mov	w9, #0x13                  	// #19
    d60c:	ldr	w8, [x8]
    d610:	mul	w8, w8, w9
    d614:	cmp	w17, w8
    d618:	b.hi	d8dc <xre_compile_fastmap@@Base+0x450>  // b.pmore
    d61c:	lsl	w8, w17, #1
    d620:	sub	x0, sp, w8, uxtw #3
    d624:	stur	w8, [x29, #-52]
    d628:	stur	x0, [x29, #-64]
    d62c:	mov	sp, x0
    d630:	mov	w8, w17
    d634:	lsl	x2, x8, #3
    d638:	mov	x1, x21
    d63c:	mov	x21, x13
    d640:	bl	5390 <memcpy@plt>
    d644:	mov	x13, x21
    d648:	ldur	x21, [x29, #-64]
    d64c:	ldur	w17, [x29, #-52]
    d650:	adrp	x16, 29000 <xexit@@Base+0x15018>
    d654:	adrp	x15, 14000 <xexit@@Base+0x18>
    d658:	add	x16, x16, #0x648
    d65c:	add	x15, x15, #0x8e0
    d660:	mov	w14, #0x1                   	// #1
    d664:	add	w8, w24, #0x1
    d668:	str	x28, [x21, w24, uxtw #3]
    d66c:	mov	w24, w8
    d670:	b	d680 <xre_compile_fastmap@@Base+0x1f4>
    d674:	ldrb	w8, [x19, #56]
    d678:	orr	w8, w8, #0x1
    d67c:	strb	w8, [x19, #56]
    d680:	add	x8, x22, #0x5
    d684:	cmp	w26, #0x0
    d688:	csel	x23, x23, x8, eq  // eq = none
    d68c:	mov	w8, w24
    d690:	b	d50c <xre_compile_fastmap@@Base+0x80>
    d694:	mov	x8, xzr
    d698:	ldrb	w9, [x16, x8]
    d69c:	cmp	w9, #0x1
    d6a0:	b.ne	d6a8 <xre_compile_fastmap@@Base+0x21c>  // b.any
    d6a4:	strb	w14, [x20, x8]
    d6a8:	add	x8, x8, #0x1
    d6ac:	cmp	x8, #0x100
    d6b0:	b.ne	d698 <xre_compile_fastmap@@Base+0x20c>  // b.any
    d6b4:	b	d83c <xre_compile_fastmap@@Base+0x3b0>
    d6b8:	ldrb	w8, [x22, #2]
    d6bc:	mov	w27, wzr
    d6c0:	strb	w14, [x20, x8]
    d6c4:	b	d840 <xre_compile_fastmap@@Base+0x3b4>
    d6c8:	ldrb	w22, [x20, #10]
    d6cc:	mov	w1, #0x1                   	// #1
    d6d0:	mov	w2, #0x100                 	// #256
    d6d4:	mov	x0, x20
    d6d8:	stur	w17, [x29, #-52]
    d6dc:	mov	x28, x15
    d6e0:	mov	x26, x13
    d6e4:	bl	5530 <memset@plt>
    d6e8:	ldrb	w8, [x19, #24]
    d6ec:	tbnz	w8, #6, d84c <xre_compile_fastmap@@Base+0x3c0>
    d6f0:	ldur	w17, [x29, #-52]
    d6f4:	adrp	x16, 29000 <xexit@@Base+0x15018>
    d6f8:	mov	w27, wzr
    d6fc:	strb	w22, [x20, #10]
    d700:	mov	w8, w24
    d704:	mov	x23, x25
    d708:	mov	x13, x26
    d70c:	mov	w14, #0x1                   	// #1
    d710:	mov	x15, x28
    d714:	add	x16, x16, #0x648
    d718:	b	d50c <xre_compile_fastmap@@Base+0x80>
    d71c:	ldrb	w9, [x22, #1]
    d720:	mov	w27, wzr
    d724:	mov	w8, w24
    d728:	mov	x23, x25
    d72c:	cbz	x9, d50c <xre_compile_fastmap@@Base+0x80>
    d730:	add	x8, x22, #0x2
    d734:	lsl	x10, x9, #3
    d738:	sub	x9, x10, #0x1
    d73c:	add	w11, w9, #0x7
    d740:	cmp	w9, #0x0
    d744:	csel	w11, w11, w9, lt  // lt = tstop
    d748:	asr	w11, w11, #3
    d74c:	ldrb	w11, [x8, w11, sxtw]
    d750:	and	w12, w9, #0x7
    d754:	lsr	w11, w11, w12
    d758:	tbz	w11, #0, d760 <xre_compile_fastmap@@Base+0x2d4>
    d75c:	strb	w14, [x13, x10]
    d760:	add	x10, x9, #0x1
    d764:	cmp	x10, #0x1
    d768:	mov	x10, x9
    d76c:	b.gt	d738 <xre_compile_fastmap@@Base+0x2ac>
    d770:	b	d83c <xre_compile_fastmap@@Base+0x3b0>
    d774:	ldrb	w9, [x23]
    d778:	cmp	x9, #0x1f
    d77c:	b.hi	d7cc <xre_compile_fastmap@@Base+0x340>  // b.pmore
    d780:	mov	w8, #0x100                 	// #256
    d784:	add	x0, x20, x9, lsl #3
    d788:	sub	x2, x8, x9, lsl #3
    d78c:	mov	w1, #0x1                   	// #1
    d790:	mov	x26, x13
    d794:	mov	x27, x15
    d798:	mov	x28, x16
    d79c:	stur	w17, [x29, #-52]
    d7a0:	bl	5530 <memset@plt>
    d7a4:	ldur	w17, [x29, #-52]
    d7a8:	ldrb	w9, [x23]
    d7ac:	mov	x16, x28
    d7b0:	mov	x15, x27
    d7b4:	mov	w14, #0x1                   	// #1
    d7b8:	mov	x13, x26
    d7bc:	mov	w27, wzr
    d7c0:	mov	w8, w24
    d7c4:	mov	x23, x25
    d7c8:	cbz	w9, d50c <xre_compile_fastmap@@Base+0x80>
    d7cc:	add	x8, x22, #0x2
    d7d0:	lsl	x10, x9, #3
    d7d4:	sub	x9, x10, #0x1
    d7d8:	add	w11, w9, #0x7
    d7dc:	cmp	w9, #0x0
    d7e0:	csel	w11, w11, w9, lt  // lt = tstop
    d7e4:	asr	w11, w11, #3
    d7e8:	ldrb	w11, [x8, w11, sxtw]
    d7ec:	and	w12, w9, #0x7
    d7f0:	lsr	w11, w11, w12
    d7f4:	tbnz	w11, #0, d7fc <xre_compile_fastmap@@Base+0x370>
    d7f8:	strb	w14, [x13, x10]
    d7fc:	add	x10, x9, #0x1
    d800:	cmp	x10, #0x1
    d804:	mov	x10, x9
    d808:	b.gt	d7d4 <xre_compile_fastmap@@Base+0x348>
    d80c:	b	d83c <xre_compile_fastmap@@Base+0x3b0>
    d810:	add	x23, x22, #0x5
    d814:	mov	w8, w24
    d818:	b	d50c <xre_compile_fastmap@@Base+0x80>
    d81c:	mov	x8, xzr
    d820:	ldrb	w9, [x16, x8]
    d824:	cmp	w9, #0x1
    d828:	b.eq	d830 <xre_compile_fastmap@@Base+0x3a4>  // b.none
    d82c:	strb	w14, [x20, x8]
    d830:	add	x8, x8, #0x1
    d834:	cmp	x8, #0x100
    d838:	b.ne	d820 <xre_compile_fastmap@@Base+0x394>  // b.any
    d83c:	mov	w27, wzr
    d840:	mov	w8, w24
    d844:	mov	x23, x25
    d848:	b	d50c <xre_compile_fastmap@@Base+0x80>
    d84c:	ldrb	w9, [x19, #56]
    d850:	ldur	w17, [x29, #-52]
    d854:	adrp	x16, 29000 <xexit@@Base+0x15018>
    d858:	mov	w27, wzr
    d85c:	mov	w8, w24
    d860:	mov	x23, x25
    d864:	mov	x13, x26
    d868:	mov	w14, #0x1                   	// #1
    d86c:	mov	x15, x28
    d870:	add	x16, x16, #0x648
    d874:	tbz	w9, #0, d50c <xre_compile_fastmap@@Base+0x80>
    d878:	b	d8a4 <xre_compile_fastmap@@Base+0x418>
    d87c:	ldrb	w8, [x19, #56]
    d880:	and	w9, w8, #0x1
    d884:	orr	w9, w9, w27
    d888:	and	w8, w8, #0xfe
    d88c:	orr	w8, w9, w8
    d890:	strb	w8, [x19, #56]
    d894:	cbz	w24, d8a4 <xre_compile_fastmap@@Base+0x418>
    d898:	sub	w8, w24, #0x1
    d89c:	ldr	x23, [x21, w8, uxtw #3]
    d8a0:	b	d508 <xre_compile_fastmap@@Base+0x7c>
    d8a4:	mov	w0, wzr
    d8a8:	b	d8bc <xre_compile_fastmap@@Base+0x430>
    d8ac:	ldrb	w8, [x19, #56]
    d8b0:	mov	w0, wzr
    d8b4:	orr	w8, w8, #0x1
    d8b8:	strb	w8, [x19, #56]
    d8bc:	mov	sp, x29
    d8c0:	ldp	x20, x19, [sp, #80]
    d8c4:	ldp	x22, x21, [sp, #64]
    d8c8:	ldp	x24, x23, [sp, #48]
    d8cc:	ldp	x26, x25, [sp, #32]
    d8d0:	ldp	x28, x27, [sp, #16]
    d8d4:	ldp	x29, x30, [sp], #96
    d8d8:	ret
    d8dc:	mov	w0, #0xfffffffe            	// #-2
    d8e0:	b	d8bc <xre_compile_fastmap@@Base+0x430>
    d8e4:	bl	5820 <abort@plt>

000000000000d8e8 <xre_set_registers@@Base>:
    d8e8:	ldrb	w8, [x0, #56]
    d8ec:	cmp	w2, #0x0
    d8f0:	csel	x9, xzr, x4, eq  // eq = none
    d8f4:	csel	x10, xzr, x3, eq  // eq = none
    d8f8:	and	w8, w8, #0xfffffff9
    d8fc:	orr	w11, w8, #0x2
    d900:	csel	w8, w8, w11, eq  // eq = none
    d904:	strb	w8, [x0, #56]
    d908:	str	w2, [x1]
    d90c:	stp	x10, x9, [x1, #8]
    d910:	ret

000000000000d914 <xre_search@@Base>:
    d914:	sub	sp, sp, #0x20
    d918:	mov	x7, x5
    d91c:	mov	w6, w4
    d920:	mov	w5, w3
    d924:	mov	w4, w2
    d928:	mov	x3, x1
    d92c:	str	w2, [sp]
    d930:	mov	x1, xzr
    d934:	mov	w2, wzr
    d938:	stp	x29, x30, [sp, #16]
    d93c:	add	x29, sp, #0x10
    d940:	bl	58f0 <xre_search_2@plt>
    d944:	ldp	x29, x30, [sp, #16]
    d948:	add	sp, sp, #0x20
    d94c:	ret

000000000000d950 <xre_search_2@@Base>:
    d950:	sub	sp, sp, #0x80
    d954:	stp	x29, x30, [sp, #32]
    d958:	stp	x24, x23, [sp, #80]
    d95c:	add	x29, sp, #0x20
    d960:	mov	x24, x0
    d964:	mov	w0, #0xffffffff            	// #-1
    d968:	stp	x28, x27, [sp, #48]
    d96c:	stp	x26, x25, [sp, #64]
    d970:	stp	x22, x21, [sp, #96]
    d974:	stp	x20, x19, [sp, #112]
    d978:	stur	x7, [x29, #-8]
    d97c:	tbnz	w5, #31, db74 <xre_search_2@@Base+0x224>
    d980:	add	w27, w4, w2
    d984:	mov	w25, w5
    d988:	mov	w20, w4
    d98c:	mov	w22, w2
    d990:	subs	w8, w27, w5
    d994:	b.lt	db74 <xre_search_2@@Base+0x224>  // b.tstop
    d998:	ldp	x28, x9, [x24, #32]
    d99c:	mov	x21, x3
    d9a0:	mov	x23, x1
    d9a4:	str	x9, [sp, #16]
    d9a8:	add	w9, w6, w25
    d9ac:	cmp	w9, w27
    d9b0:	csel	w8, w8, w6, gt
    d9b4:	cmp	w9, #0x0
    d9b8:	csneg	w19, w8, w25, ge  // ge = tcont
    d9bc:	cmp	w19, #0x1
    d9c0:	b.lt	da00 <xre_search_2@@Base+0xb0>  // b.tstop
    d9c4:	ldr	x8, [x24, #16]
    d9c8:	cbz	x8, da00 <xre_search_2@@Base+0xb0>
    d9cc:	ldr	x8, [x24]
    d9d0:	ldrb	w8, [x8]
    d9d4:	cmp	w8, #0xb
    d9d8:	b.eq	d9ec <xre_search_2@@Base+0x9c>  // b.none
    d9dc:	cmp	w8, #0x9
    d9e0:	b.ne	da00 <xre_search_2@@Base+0xb0>  // b.any
    d9e4:	ldrsb	w8, [x24, #56]
    d9e8:	tbnz	w8, #31, da00 <xre_search_2@@Base+0xb0>
    d9ec:	cmp	w25, #0x0
    d9f0:	b.le	d9fc <xre_search_2@@Base+0xac>
    d9f4:	mov	w0, #0xffffffff            	// #-1
    d9f8:	b	db74 <xre_search_2@@Base+0x224>
    d9fc:	mov	w19, #0x1                   	// #1
    da00:	cbz	x28, da1c <xre_search_2@@Base+0xcc>
    da04:	ldrb	w8, [x24, #56]
    da08:	tbnz	w8, #3, da1c <xre_search_2@@Base+0xcc>
    da0c:	mov	x0, x24
    da10:	bl	d490 <xre_compile_fastmap@@Base+0x4>
    da14:	cmn	w0, #0x2
    da18:	b.eq	db74 <xre_search_2@@Base+0x224>  // b.none
    da1c:	ldr	w26, [x29, #96]
    da20:	sub	x8, x21, w22, sxtw
    da24:	str	x8, [sp, #8]
    da28:	cbz	x28, db00 <xre_search_2@@Base+0x1b0>
    da2c:	cmp	w25, w27
    da30:	b.ge	db00 <xre_search_2@@Base+0x1b0>  // b.tcont
    da34:	ldrb	w8, [x24, #56]
    da38:	tbnz	w8, #0, db00 <xre_search_2@@Base+0x1b0>
    da3c:	cmp	w19, #0x1
    da40:	b.lt	da9c <xre_search_2@@Base+0x14c>  // b.tstop
    da44:	add	w8, w25, w19
    da48:	ldp	x10, x12, [sp, #8]
    da4c:	sub	w9, w19, w22
    da50:	cmp	w8, w22
    da54:	add	w9, w9, w25
    da58:	ccmp	w25, w22, #0x0, ge  // ge = tcont
    da5c:	csel	w9, wzr, w9, ge  // ge = tcont
    da60:	cmp	w25, w22
    da64:	csel	x10, x23, x10, lt  // lt = tstop
    da68:	add	x10, x10, w25, sxtw
    da6c:	cbz	x12, dad4 <xre_search_2@@Base+0x184>
    da70:	cmp	w19, w9
    da74:	b.le	dafc <xre_search_2@@Base+0x1ac>
    da78:	ldrb	w11, [x10]
    da7c:	ldrb	w11, [x12, x11]
    da80:	ldrb	w11, [x28, x11]
    da84:	cbnz	w11, dafc <xre_search_2@@Base+0x1ac>
    da88:	sub	w19, w19, #0x1
    da8c:	cmp	w19, w9
    da90:	add	x10, x10, #0x1
    da94:	b.gt	da78 <xre_search_2@@Base+0x128>
    da98:	b	daf8 <xre_search_2@@Base+0x1a8>
    da9c:	sxtw	x8, w25
    daa0:	cmp	w25, w22
    daa4:	sub	x8, x8, w22, sxtw
    daa8:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
    daac:	add	x8, x21, x8
    dab0:	add	x9, x23, w25, sxtw
    dab4:	csel	x8, x9, x8, ne  // ne = any
    dab8:	ldrb	w8, [x8]
    dabc:	ldr	x9, [sp, #16]
    dac0:	cbz	x9, dac8 <xre_search_2@@Base+0x178>
    dac4:	ldrb	w8, [x9, x8]
    dac8:	ldrb	w8, [x28, w8, uxtw]
    dacc:	cbnz	w8, db00 <xre_search_2@@Base+0x1b0>
    dad0:	b	db48 <xre_search_2@@Base+0x1f8>
    dad4:	cmp	w19, w9
    dad8:	b.le	dafc <xre_search_2@@Base+0x1ac>
    dadc:	ldrb	w11, [x10]
    dae0:	ldrb	w11, [x28, x11]
    dae4:	cbnz	w11, dafc <xre_search_2@@Base+0x1ac>
    dae8:	sub	w19, w19, #0x1
    daec:	cmp	w19, w9
    daf0:	add	x10, x10, #0x1
    daf4:	b.gt	dadc <xre_search_2@@Base+0x18c>
    daf8:	mov	w19, w9
    dafc:	sub	w25, w8, w19
    db00:	tbnz	w19, #31, db18 <xre_search_2@@Base+0x1c8>
    db04:	cbz	x28, db18 <xre_search_2@@Base+0x1c8>
    db08:	cmp	w25, w27
    db0c:	b.ne	db18 <xre_search_2@@Base+0x1c8>  // b.any
    db10:	ldrb	w8, [x24, #56]
    db14:	tbz	w8, #0, d9f4 <xre_search_2@@Base+0xa4>
    db18:	ldur	x6, [x29, #-8]
    db1c:	mov	x0, x24
    db20:	mov	x1, x23
    db24:	mov	w2, w22
    db28:	mov	x3, x21
    db2c:	mov	w4, w20
    db30:	mov	w5, w25
    db34:	mov	w7, w26
    db38:	bl	dbb4 <xre_match@@Base+0x20>
    db3c:	tbz	w0, #31, db70 <xre_search_2@@Base+0x220>
    db40:	cmn	w0, #0x2
    db44:	b.eq	db74 <xre_search_2@@Base+0x224>  // b.none
    db48:	cbz	w19, d9f4 <xre_search_2@@Base+0xa4>
    db4c:	cmp	w19, #0x0
    db50:	mov	w8, #0xffffffff            	// #-1
    db54:	mov	w9, #0x1                   	// #1
    db58:	cneg	w8, w8, le
    db5c:	cneg	w9, w9, le
    db60:	add	w19, w8, w19
    db64:	add	w25, w9, w25
    db68:	cbnz	x28, da2c <xre_search_2@@Base+0xdc>
    db6c:	b	db00 <xre_search_2@@Base+0x1b0>
    db70:	mov	w0, w25
    db74:	ldp	x20, x19, [sp, #112]
    db78:	ldp	x22, x21, [sp, #96]
    db7c:	ldp	x24, x23, [sp, #80]
    db80:	ldp	x26, x25, [sp, #64]
    db84:	ldp	x28, x27, [sp, #48]
    db88:	ldp	x29, x30, [sp, #32]
    db8c:	add	sp, sp, #0x80
    db90:	ret

000000000000db94 <xre_match@@Base>:
    db94:	mov	x6, x4
    db98:	mov	w4, w2
    db9c:	mov	w5, w3
    dba0:	mov	x3, x1
    dba4:	mov	x1, xzr
    dba8:	mov	w2, wzr
    dbac:	mov	w7, w4
    dbb0:	b	dbb4 <xre_match@@Base+0x20>
    dbb4:	stp	x29, x30, [sp, #-96]!
    dbb8:	stp	x28, x27, [sp, #16]
    dbbc:	stp	x26, x25, [sp, #32]
    dbc0:	stp	x24, x23, [sp, #48]
    dbc4:	stp	x22, x21, [sp, #64]
    dbc8:	stp	x20, x19, [sp, #80]
    dbcc:	mov	x29, sp
    dbd0:	sub	sp, sp, #0x180
    dbd4:	ldp	x28, x16, [x0, #40]
    dbd8:	ldr	x21, [x0]
    dbdc:	ldr	x8, [x0, #16]
    dbe0:	mov	x12, x0
    dbe4:	add	x11, x16, #0x1
    dbe8:	cbz	x16, dc6c <xre_match@@Base+0xd8>
    dbec:	lsl	x9, x11, #3
    dbf0:	add	x9, x9, #0xf
    dbf4:	mov	x10, sp
    dbf8:	and	x9, x9, #0xfffffffffffffff0
    dbfc:	sub	x27, x10, x9
    dc00:	mov	sp, x27
    dc04:	mov	x10, sp
    dc08:	sub	x19, x10, x9
    dc0c:	mov	sp, x19
    dc10:	mov	x10, sp
    dc14:	sub	x20, x10, x9
    dc18:	mov	sp, x20
    dc1c:	mov	x10, sp
    dc20:	sub	x23, x10, x9
    dc24:	mov	sp, x23
    dc28:	mov	x10, sp
    dc2c:	sub	x18, x10, x9
    dc30:	mov	sp, x18
    dc34:	mov	x10, sp
    dc38:	sub	x25, x10, x9
    dc3c:	mov	sp, x25
    dc40:	mov	x10, sp
    dc44:	sub	x22, x10, x9
    dc48:	mov	sp, x22
    dc4c:	mov	x10, sp
    dc50:	sub	x17, x10, x9
    dc54:	mov	sp, x17
    dc58:	mov	x10, sp
    dc5c:	sub	x9, x10, x9
    dc60:	stur	x9, [x29, #-176]
    dc64:	mov	sp, x9
    dc68:	b	dc90 <xre_match@@Base+0xfc>
    dc6c:	mov	x27, xzr
    dc70:	mov	x19, xzr
    dc74:	mov	x20, xzr
    dc78:	mov	x23, xzr
    dc7c:	mov	x22, xzr
    dc80:	mov	x18, xzr
    dc84:	mov	x25, xzr
    dc88:	mov	x17, xzr
    dc8c:	stur	xzr, [x29, #-176]
    dc90:	mov	w0, #0xffffffff            	// #-1
    dc94:	tbnz	w5, #31, f79c <xre_match@@Base+0x1c08>
    dc98:	add	w9, w4, w2
    dc9c:	cmp	w9, w5
    dca0:	b.lt	f79c <xre_match@@Base+0x1c08>  // b.tstop
    dca4:	cmp	x11, #0x2
    dca8:	add	x30, x21, x8
    dcac:	stur	x6, [x29, #-248]
    dcb0:	stur	x12, [x29, #-152]
    dcb4:	stur	x11, [x29, #-168]
    dcb8:	b.cc	dd04 <xre_match@@Base+0x170>  // b.lo, b.ul, b.last
    dcbc:	adrp	x13, 29000 <xexit@@Base+0x15018>
    dcc0:	add	x8, x22, #0x8
    dcc4:	add	x9, x27, #0x8
    dcc8:	add	x10, x19, #0x8
    dccc:	add	x11, x20, #0x8
    dcd0:	add	x12, x23, #0x8
    dcd4:	add	x13, x13, #0x748
    dcd8:	mov	x14, x16
    dcdc:	str	x13, [x12], #8
    dce0:	str	x13, [x11], #8
    dce4:	str	x13, [x10], #8
    dce8:	str	x13, [x9], #8
    dcec:	ldrb	w15, [x8]
    dcf0:	subs	x14, x14, #0x1
    dcf4:	and	w15, w15, #0xe0
    dcf8:	orr	w15, w15, #0x3
    dcfc:	strb	w15, [x8], #8
    dd00:	b.ne	dcdc <xre_match@@Base+0x148>  // b.any
    dd04:	sub	x8, x29, #0x50
    dd08:	stur	x23, [x8, #-256]
    dd0c:	sub	x8, x29, #0x48
    dd10:	stur	x20, [x8, #-256]
    dd14:	sxtw	x8, w5
    dd18:	sub	x9, x29, #0x10
    dd1c:	stur	x8, [x9, #-256]
    dd20:	sub	x8, x29, #0x60
    dd24:	stur	x25, [x8, #-256]
    dd28:	add	x8, x25, #0x8
    dd2c:	sub	x9, x29, #0x28
    dd30:	stur	x8, [x9, #-256]
    dd34:	add	x8, x19, #0x8
    dd38:	sub	x9, x29, #0x30
    dd3c:	stur	x8, [x9, #-256]
    dd40:	sub	x8, x29, #0x58
    dd44:	stur	x18, [x8, #-256]
    dd48:	add	x8, x18, #0x8
    dd4c:	sub	x9, x29, #0x38
    dd50:	cmp	w4, #0x0
    dd54:	stur	x8, [x9, #-256]
    dd58:	add	x8, x27, #0x8
    dd5c:	sub	x9, x29, #0x40
    dd60:	stur	x8, [x9, #-256]
    dd64:	cset	w8, eq  // eq = none
    dd68:	cmp	x1, #0x0
    dd6c:	cset	w9, ne  // ne = any
    dd70:	tst	w9, w8
    dd74:	mov	x15, xzr
    dd78:	csel	w8, w2, w4, ne  // ne = any
    dd7c:	csel	x3, x1, x3, ne  // ne = any
    dd80:	csel	w13, wzr, w2, ne  // ne = any
    dd84:	csel	x1, x15, x1, ne  // ne = any
    dd88:	stur	w8, [x29, #-188]
    dd8c:	add	x8, x3, w8, sxtw
    dd90:	add	x9, x3, w7, sxtw
    dd94:	sub	x10, x15, w13, sxtw
    dd98:	sub	x11, x29, #0x18
    dd9c:	add	x14, x1, w13, sxtw
    dda0:	stur	x8, [x29, #-184]
    dda4:	add	x8, x1, w7, sxtw
    dda8:	stur	x10, [x11, #-256]
    ddac:	cmp	w13, w7
    ddb0:	add	x11, x3, w5, sxtw
    ddb4:	sub	x12, x3, #0x1
    ddb8:	sub	x25, x29, #0x8
    ddbc:	sub	x9, x9, w13, sxtw
    ddc0:	stur	x12, [x25, #-256]
    ddc4:	csel	x12, x14, x8, lt  // lt = tstop
    ddc8:	sub	x8, x11, w13, sxtw
    ddcc:	stur	x14, [x29, #-88]
    ddd0:	sub	x11, x14, #0x1
    ddd4:	csel	x14, x9, x3, lt  // lt = tstop
    ddd8:	cmp	w13, #0x1
    dddc:	cset	w9, lt  // lt = tstop
    dde0:	cmp	w13, w5
    dde4:	stur	x11, [x29, #-200]
    dde8:	cset	w11, lt  // lt = tstop
    ddec:	orr	w9, w9, w11
    ddf0:	add	x10, x1, w5, sxtw
    ddf4:	cmp	w9, #0x0
    ddf8:	csel	x4, x14, x12, ne  // ne = any
    ddfc:	csel	x25, x8, x10, ne  // ne = any
    de00:	cmp	w13, #0x0
    de04:	csel	x8, x3, x1, eq  // eq = none
    de08:	stur	x8, [x29, #-240]
    de0c:	sub	x8, x29, #0x20
    de10:	stur	x16, [x29, #-208]
    de14:	mov	w23, wzr
    de18:	sub	x24, x29, #0x40
    de1c:	mov	w16, #0x5                   	// #5
    de20:	mov	w20, #0x101                 	// #257
    de24:	mov	w18, #0x100                 	// #256
    de28:	stur	x15, [x29, #-128]
    de2c:	stur	x15, [x8, #-256]
    de30:	mov	x15, x14
    de34:	stur	wzr, [x29, #-116]
    de38:	stur	x5, [x29, #-144]
    de3c:	stur	x12, [x29, #-104]
    de40:	stur	w13, [x29, #-156]
    de44:	stp	x3, x30, [x29, #-80]
    de48:	stur	x28, [x29, #-136]
    de4c:	stur	x14, [x29, #-112]
    de50:	stur	x1, [x29, #-256]
    de54:	stur	x17, [x29, #-232]
    de58:	cmp	x21, x30
    de5c:	b.eq	f0c0 <xre_match@@Base+0x152c>  // b.none
    de60:	mov	x14, x21
    de64:	stur	x18, [x29, #-96]
    de68:	stur	wzr, [x29, #-120]
    de6c:	ldrb	w8, [x14], #1
    de70:	cmp	w8, #0x1d
    de74:	b.hi	f7dc <xre_match@@Base+0x1c48>  // b.pmore
    de78:	adrp	x11, 14000 <xexit@@Base+0x18>
    de7c:	add	x11, x11, #0x8fe
    de80:	adr	x9, de94 <xre_match@@Base+0x300>
    de84:	ldrh	w10, [x11, x8, lsl #1]
    de88:	add	x9, x9, x10, lsl #2
    de8c:	mov	x26, x4
    de90:	br	x9
    de94:	ldur	x13, [x29, #-96]
    de98:	cmp	w8, #0x5
    de9c:	cset	w9, eq  // eq = none
    dea0:	cmp	x25, x4
    dea4:	b.ne	debc <xre_match@@Base+0x328>  // b.any
    dea8:	cmp	x4, x15
    deac:	mov	x4, x15
    deb0:	mov	x25, x3
    deb4:	b.ne	dea0 <xre_match@@Base+0x30c>  // b.any
    deb8:	b	f118 <xre_match@@Base+0x1584>
    debc:	mov	x10, x25
    dec0:	cbz	x28, decc <xre_match@@Base+0x338>
    dec4:	ldrb	w10, [x25]
    dec8:	add	x10, x28, x10
    decc:	ldrb	w11, [x10]
    ded0:	ldrb	w10, [x14]
    ded4:	cmp	w11, w10, lsl #3
    ded8:	b.cs	def8 <xre_match@@Base+0x364>  // b.hs, b.nlast
    dedc:	add	x12, x14, x11, lsr #3
    dee0:	ldrb	w12, [x12, #1]
    dee4:	and	w11, w11, #0x7
    dee8:	lsr	w11, w12, w11
    deec:	tbz	w11, #0, def8 <xre_match@@Base+0x364>
    def0:	cmp	w8, #0x5
    def4:	cset	w9, ne  // ne = any
    def8:	cbz	w9, f1c0 <xre_match@@Base+0x162c>
    defc:	add	x8, x10, x14
    df00:	add	x14, x8, #0x1
    df04:	ldur	w8, [x29, #-120]
    df08:	cbnz	w8, eb88 <xre_match@@Base+0xff4>
    df0c:	cmp	x13, x20
    df10:	b.cc	eb80 <xre_match@@Base+0xfec>  // b.lo, b.ul, b.last
    df14:	add	x8, x22, x20, lsl #3
    df18:	mov	x9, x20
    df1c:	ldrb	w10, [x8]
    df20:	add	x9, x9, #0x1
    df24:	cmp	x9, x13
    df28:	orr	w10, w10, #0x18
    df2c:	strb	w10, [x8], #8
    df30:	b.ls	df1c <xre_match@@Base+0x388>  // b.plast
    df34:	b	eb80 <xre_match@@Base+0xfec>
    df38:	ldrb	w8, [x14]
    df3c:	adrp	x11, 29000 <xexit@@Base+0x15018>
    df40:	add	x11, x11, #0x748
    df44:	ldr	x9, [x19, x8, lsl #3]
    df48:	lsl	x10, x8, #3
    df4c:	ldrb	w10, [x22, x10]
    df50:	cmp	x9, x11
    df54:	csel	x11, x25, x9, eq  // eq = none
    df58:	tst	w10, #0x3
    df5c:	sub	x10, x29, #0x50
    df60:	ldur	x10, [x10, #-256]
    df64:	csel	x9, x9, x11, eq  // eq = none
    df68:	str	x9, [x10, x8, lsl #3]
    df6c:	ldrb	w8, [x14]
    df70:	str	x25, [x19, x8, lsl #3]
    df74:	ldrb	w8, [x14]
    df78:	lsl	x8, x8, #3
    df7c:	ldrb	w9, [x22, x8]
    df80:	and	w9, w9, #0xfffffffb
    df84:	strb	w9, [x22, x8]
    df88:	ldur	x9, [x29, #-96]
    df8c:	ldrb	w8, [x14]
    df90:	cmp	x9, x20
    df94:	b.ne	eb90 <xre_match@@Base+0xffc>  // b.any
    df98:	mov	w9, #0x100                 	// #256
    df9c:	mov	w20, #0x101                 	// #257
    dfa0:	stur	x9, [x29, #-96]
    dfa4:	b	ebb4 <xre_match@@Base+0x1020>
    dfa8:	ldur	x26, [x29, #-184]
    dfac:	cmp	x25, x26
    dfb0:	b.eq	f0a0 <xre_match@@Base+0x150c>  // b.none
    dfb4:	b	f1c0 <xre_match@@Base+0x162c>
    dfb8:	ldur	x11, [x29, #-96]
    dfbc:	cmp	x25, x4
    dfc0:	b.ne	ea34 <xre_match@@Base+0xea0>  // b.any
    dfc4:	cmp	x4, x15
    dfc8:	mov	x4, x15
    dfcc:	mov	x25, x3
    dfd0:	b.ne	dfbc <xre_match@@Base+0x428>  // b.any
    dfd4:	b	f118 <xre_match@@Base+0x1584>
    dfd8:	ldur	x11, [x29, #-96]
    dfdc:	cmp	x25, x4
    dfe0:	b.ne	eaa0 <xre_match@@Base+0xf0c>  // b.any
    dfe4:	cmp	x4, x15
    dfe8:	mov	x4, x15
    dfec:	mov	x25, x3
    dff0:	b.ne	dfdc <xre_match@@Base+0x448>  // b.any
    dff4:	b	f118 <xre_match@@Base+0x1584>
    dff8:	ldrb	w8, [x21, #1]
    dffc:	ldur	x13, [x29, #-96]
    e000:	add	x9, x21, #0x2
    e004:	mov	w10, w8
    e008:	mov	w11, w8
    e00c:	cbz	x28, ecf0 <xre_match@@Base+0x115c>
    e010:	cmp	x25, x4
    e014:	b.ne	e02c <xre_match@@Base+0x498>  // b.any
    e018:	cmp	x4, x15
    e01c:	mov	x4, x15
    e020:	mov	x25, x3
    e024:	b.ne	e010 <xre_match@@Base+0x47c>  // b.any
    e028:	b	f118 <xre_match@@Base+0x1584>
    e02c:	ldrb	w11, [x25], #1
    e030:	ldrb	w12, [x9]
    e034:	ldrb	w11, [x28, x11]
    e038:	cmp	w11, w12
    e03c:	b.ne	f1c0 <xre_match@@Base+0x162c>  // b.any
    e040:	subs	w10, w10, #0x1
    e044:	add	x9, x9, #0x1
    e048:	b.ne	e010 <xre_match@@Base+0x47c>  // b.any
    e04c:	sub	w8, w8, #0x1
    e050:	add	x8, x21, x8
    e054:	add	x14, x8, #0x3
    e058:	ldur	w8, [x29, #-120]
    e05c:	cbnz	w8, f09c <xre_match@@Base+0x1508>
    e060:	cmp	x13, x20
    e064:	b.cc	e088 <xre_match@@Base+0x4f4>  // b.lo, b.ul, b.last
    e068:	add	x8, x22, x20, lsl #3
    e06c:	mov	x9, x20
    e070:	ldrb	w10, [x8]
    e074:	add	x9, x9, #0x1
    e078:	cmp	x9, x13
    e07c:	orr	w10, w10, #0x18
    e080:	strb	w10, [x8], #8
    e084:	b.ls	e070 <xre_match@@Base+0x4dc>  // b.plast
    e088:	mov	w8, #0x1                   	// #1
    e08c:	stur	w8, [x29, #-120]
    e090:	b	f09c <xre_match@@Base+0x1508>
    e094:	stur	x14, [x29, #-16]
    e098:	ldrb	w8, [x14]
    e09c:	lsl	x9, x8, #3
    e0a0:	ldrb	w9, [x22, x9]
    e0a4:	and	w9, w9, #0x3
    e0a8:	cmp	w9, #0x3
    e0ac:	b.ne	e110 <xre_match@@Base+0x57c>  // b.any
    e0b0:	sub	x0, x29, #0x10
    e0b4:	mov	x1, x30
    e0b8:	mov	x2, x22
    e0bc:	stur	w16, [x29, #-120]
    e0c0:	mov	x28, x14
    e0c4:	bl	12534 <xregfree@@Base+0x50>
    e0c8:	ldrb	w8, [x28]
    e0cc:	ldp	x3, x30, [x29, #-80]
    e0d0:	ldur	x10, [x29, #-136]
    e0d4:	ldur	w16, [x29, #-120]
    e0d8:	lsl	x8, x8, #3
    e0dc:	ldrb	w9, [x22, x8]
    e0e0:	ldur	x15, [x29, #-112]
    e0e4:	ldur	x1, [x29, #-256]
    e0e8:	ldur	x17, [x29, #-232]
    e0ec:	and	w9, w9, #0xfc
    e0f0:	bfxil	w9, w0, #0, #2
    e0f4:	strb	w9, [x22, x8]
    e0f8:	ldrb	w8, [x28]
    e0fc:	mov	x4, x26
    e100:	mov	x28, x10
    e104:	lsl	x9, x8, #3
    e108:	ldrb	w9, [x22, x9]
    e10c:	and	w9, w9, #0x3
    e110:	ldr	x10, [x27, x8, lsl #3]
    e114:	adrp	x11, 29000 <xexit@@Base+0x15018>
    e118:	add	x11, x11, #0x748
    e11c:	stur	wzr, [x29, #-120]
    e120:	cmp	x10, x11
    e124:	csel	x11, x25, x10, eq  // eq = none
    e128:	cmp	w9, #0x0
    e12c:	csel	x9, x10, x11, eq  // eq = none
    e130:	sub	x10, x29, #0x48
    e134:	ldur	x10, [x10, #-256]
    e138:	cmp	x20, #0x101
    e13c:	str	x9, [x10, x8, lsl #3]
    e140:	ldrb	w8, [x21, #1]
    e144:	str	x25, [x27, x8, lsl #3]
    e148:	ldrb	w8, [x21, #1]
    e14c:	lsl	x8, x8, #3
    e150:	ldrb	w9, [x22, x8]
    e154:	orr	w9, w9, #0x4
    e158:	strb	w9, [x22, x8]
    e15c:	ldrb	w8, [x21, #1]
    e160:	lsl	x8, x8, #3
    e164:	ldrb	w9, [x22, x8]
    e168:	and	w9, w9, #0xfffffff7
    e16c:	strb	w9, [x22, x8]
    e170:	ldrb	w9, [x21, #1]
    e174:	add	x8, x21, #0x3
    e178:	mov	x14, x8
    e17c:	stur	x9, [x29, #-96]
    e180:	csel	x20, x9, x20, eq  // eq = none
    e184:	sub	x9, x29, #0x20
    e188:	stur	x8, [x9, #-256]
    e18c:	b	f09c <xre_match@@Base+0x1508>
    e190:	ldrb	w9, [x21, #1]
    e194:	adrp	x10, 29000 <xexit@@Base+0x15018>
    e198:	add	x10, x10, #0x748
    e19c:	ldr	x8, [x27, x9, lsl #3]
    e1a0:	cmp	x8, x10
    e1a4:	b.eq	f1c0 <xre_match@@Base+0x162c>  // b.none
    e1a8:	ldr	x28, [x19, x9, lsl #3]
    e1ac:	cmp	x28, x10
    e1b0:	b.eq	f1b8 <xre_match@@Base+0x1624>  // b.none
    e1b4:	ldur	w12, [x29, #-156]
    e1b8:	ldur	x13, [x29, #-88]
    e1bc:	add	x14, x21, #0x2
    e1c0:	cmp	w12, #0x0
    e1c4:	cset	w9, ne  // ne = any
    e1c8:	cmp	x1, x8
    e1cc:	cset	w10, ls  // ls = plast
    e1d0:	cmp	x8, x13
    e1d4:	cset	w11, ls  // ls = plast
    e1d8:	and	w9, w9, w10
    e1dc:	and	w9, w11, w9
    e1e0:	cbz	w12, ed0c <xre_match@@Base+0x1178>
    e1e4:	cmp	x1, x28
    e1e8:	cset	w10, ls  // ls = plast
    e1ec:	cmp	x28, x13
    e1f0:	cset	w11, ls  // ls = plast
    e1f4:	and	w10, w11, w10
    e1f8:	cmp	w9, w10
    e1fc:	ldur	x21, [x29, #-104]
    e200:	ldur	w10, [x29, #-120]
    e204:	b.ne	e20c <xre_match@@Base+0x678>  // b.any
    e208:	mov	x21, x28
    e20c:	add	x13, x22, x20, lsl #3
    e210:	mov	w17, w10
    e214:	mov	x9, x21
    e218:	mov	x21, x9
    e21c:	cmp	x9, x28
    e220:	mov	x26, x8
    e224:	b.eq	e240 <xre_match@@Base+0x6ac>  // b.none
    e228:	cmp	x21, x15
    e22c:	b.eq	e240 <xre_match@@Base+0x6ac>  // b.none
    e230:	cmp	x26, x21
    e234:	mov	x8, x3
    e238:	mov	x9, x28
    e23c:	b.eq	e218 <xre_match@@Base+0x684>  // b.none
    e240:	cmp	x26, x21
    e244:	b.eq	ef58 <xre_match@@Base+0x13c4>  // b.none
    e248:	cmp	x25, x4
    e24c:	b.ne	e264 <xre_match@@Base+0x6d0>  // b.any
    e250:	cmp	x4, x15
    e254:	mov	x4, x15
    e258:	mov	x25, x3
    e25c:	b.ne	e248 <xre_match@@Base+0x6b4>  // b.any
    e260:	b	f1b0 <xre_match@@Base+0x161c>
    e264:	sub	x8, x4, x25
    e268:	sub	x9, x21, x26
    e26c:	cmp	x9, w8, sxtw
    e270:	csel	x12, x9, x8, lt  // lt = tstop
    e274:	ldur	x8, [x29, #-136]
    e278:	cbz	x8, e2b0 <xre_match@@Base+0x71c>
    e27c:	cbz	w12, e310 <xre_match@@Base+0x77c>
    e280:	mov	x8, xzr
    e284:	ldrb	w9, [x25, x8]
    e288:	ldrb	w10, [x26, x8]
    e28c:	ldur	x11, [x29, #-136]
    e290:	ldrb	w9, [x11, x9]
    e294:	ldrb	w10, [x11, x10]
    e298:	cmp	w9, w10
    e29c:	b.ne	f1b8 <xre_match@@Base+0x1624>  // b.any
    e2a0:	add	x8, x8, #0x1
    e2a4:	cmp	w12, w8
    e2a8:	b.ne	e284 <xre_match@@Base+0x6f0>  // b.any
    e2ac:	b	e310 <xre_match@@Base+0x77c>
    e2b0:	sub	x8, x29, #0x68
    e2b4:	stur	x13, [x8, #-256]
    e2b8:	sub	x8, x29, #0x70
    e2bc:	sxtw	x2, w12
    e2c0:	mov	x0, x25
    e2c4:	mov	x1, x26
    e2c8:	stur	w17, [x8, #-256]
    e2cc:	sub	x8, x29, #0x78
    e2d0:	stp	x14, x4, [x29, #-224]
    e2d4:	stur	w16, [x29, #-120]
    e2d8:	stur	x12, [x8, #-256]
    e2dc:	bl	5940 <bcmp@plt>
    e2e0:	sub	x8, x29, #0x78
    e2e4:	ldur	x12, [x8, #-256]
    e2e8:	sub	x8, x29, #0x70
    e2ec:	ldur	w17, [x8, #-256]
    e2f0:	sub	x8, x29, #0x68
    e2f4:	ldur	x13, [x8, #-256]
    e2f8:	ldp	x14, x4, [x29, #-224]
    e2fc:	ldur	w16, [x29, #-120]
    e300:	ldur	x15, [x29, #-112]
    e304:	ldp	x3, x30, [x29, #-80]
    e308:	ldur	x1, [x29, #-256]
    e30c:	cbnz	w0, f1b8 <xre_match@@Base+0x1624>
    e310:	add	x25, x25, w12, sxtw
    e314:	add	x8, x26, w12, sxtw
    e318:	ldur	x12, [x29, #-96]
    e31c:	cmp	w17, #0x0
    e320:	csinc	w10, w17, wzr, ne  // ne = any
    e324:	cbnz	w17, e210 <xre_match@@Base+0x67c>
    e328:	cmp	x12, x20
    e32c:	b.cc	e210 <xre_match@@Base+0x67c>  // b.lo, b.ul, b.last
    e330:	mov	x9, x13
    e334:	mov	x10, x20
    e338:	ldrb	w11, [x9]
    e33c:	add	x10, x10, #0x1
    e340:	cmp	x10, x12
    e344:	orr	w11, w11, #0x18
    e348:	strb	w11, [x9], #8
    e34c:	b.ls	e338 <xre_match@@Base+0x7a4>  // b.plast
    e350:	mov	w10, #0x1                   	// #1
    e354:	b	e210 <xre_match@@Base+0x67c>
    e358:	ldur	x26, [x29, #-184]
    e35c:	cmp	x25, x26
    e360:	b.eq	ec74 <xre_match@@Base+0x10e0>  // b.none
    e364:	ldur	x8, [x29, #-88]
    e368:	cmp	x25, x8
    e36c:	csel	x8, x3, x25, eq  // eq = none
    e370:	ldrb	w8, [x8]
    e374:	b	e56c <xre_match@@Base+0x9d8>
    e378:	ldrb	w9, [x21, #1]
    e37c:	ldrsb	x10, [x21, #2]
    e380:	add	x8, x21, #0x3
    e384:	mov	x12, x8
    e388:	bfi	x9, x10, #8, #56
    e38c:	add	x11, x12, #0x2
    e390:	mov	x10, x12
    e394:	cmp	x11, x30
    e398:	b.cs	e3b4 <xre_match@@Base+0x820>  // b.hs, b.nlast
    e39c:	ldrb	w12, [x10]
    e3a0:	and	w12, w12, #0xfe
    e3a4:	cmp	w12, #0x6
    e3a8:	b.ne	e3b4 <xre_match@@Base+0x820>  // b.any
    e3ac:	add	x12, x10, #0x3
    e3b0:	b	e38c <xre_match@@Base+0x7f8>
    e3b4:	add	x12, x10, #0x6
    e3b8:	cmp	x12, x30
    e3bc:	b.cs	e3cc <xre_match@@Base+0x838>  // b.hs, b.nlast
    e3c0:	ldrb	w13, [x10]
    e3c4:	cmp	w13, #0x13
    e3c8:	b.eq	e38c <xre_match@@Base+0x7f8>  // b.none
    e3cc:	add	x8, x8, x9
    e3d0:	cmp	x10, x30
    e3d4:	stur	x8, [x29, #-16]
    e3d8:	b.eq	eee0 <xre_match@@Base+0x134c>  // b.none
    e3dc:	ldrb	w12, [x10]
    e3e0:	cmp	w12, #0x2
    e3e4:	b.ne	ed1c <xre_match@@Base+0x1188>  // b.any
    e3e8:	ldrb	w9, [x11]
    e3ec:	b	ed34 <xre_match@@Base+0x11a0>
    e3f0:	ldur	x9, [x29, #-96]
    e3f4:	sub	w8, w16, w23
    e3f8:	sub	x9, x9, x20
    e3fc:	add	x9, x9, x9, lsl #1
    e400:	add	x9, x9, #0x7
    e404:	cmp	x9, x8
    e408:	stur	x9, [x29, #-216]
    e40c:	b.ls	e484 <xre_match@@Base+0x8f0>  // b.plast
    e410:	adrp	x8, 28000 <xexit@@Base+0x14018>
    e414:	ldr	x8, [x8, #3960]
    e418:	mov	w9, #0x13                  	// #19
    e41c:	mov	x1, x24
    e420:	ldr	w8, [x8]
    e424:	mul	w8, w8, w9
    e428:	stur	w8, [x29, #-224]
    e42c:	mov	w8, w16
    e430:	ldur	w9, [x29, #-224]
    e434:	cmp	w8, w9
    e438:	b.hi	f51c <xre_match@@Base+0x1988>  // b.pmore
    e43c:	lsl	w28, w8, #1
    e440:	sub	x24, sp, w28, uxtw #3
    e444:	mov	sp, x24
    e448:	mov	w8, w8
    e44c:	lsl	x2, x8, #3
    e450:	mov	x0, x24
    e454:	mov	x21, x14
    e458:	bl	5390 <memcpy@plt>
    e45c:	ldur	x9, [x29, #-216]
    e460:	ldp	x3, x30, [x29, #-80]
    e464:	sub	w8, w28, w23
    e468:	mov	x14, x21
    e46c:	mov	w16, w28
    e470:	mov	x4, x26
    e474:	cmp	x9, x8
    e478:	mov	w8, w28
    e47c:	mov	x1, x24
    e480:	b.hi	e430 <xre_match@@Base+0x89c>  // b.pmore
    e484:	ldur	x12, [x29, #-96]
    e488:	mov	x8, x20
    e48c:	cmp	x12, x20
    e490:	b.cc	e4c4 <xre_match@@Base+0x930>  // b.lo, b.ul, b.last
    e494:	ldr	x9, [x27, x8, lsl #3]
    e498:	add	w10, w23, #0x1
    e49c:	add	w11, w23, #0x2
    e4a0:	str	x9, [x24, w23, uxtw #3]
    e4a4:	ldr	x9, [x19, x8, lsl #3]
    e4a8:	add	w23, w23, #0x3
    e4ac:	str	x9, [x24, w10, uxtw #3]
    e4b0:	ldr	x9, [x22, x8, lsl #3]
    e4b4:	add	x8, x8, #0x1
    e4b8:	cmp	x8, x12
    e4bc:	str	x9, [x24, w11, uxtw #3]
    e4c0:	b.ls	e494 <xre_match@@Base+0x900>  // b.plast
    e4c4:	add	w8, w23, #0x1
    e4c8:	mov	w9, w23
    e4cc:	add	w10, w23, #0x2
    e4d0:	add	w11, w23, #0x3
    e4d4:	add	w23, w23, #0x4
    e4d8:	lsl	x9, x9, #3
    e4dc:	lsl	x8, x8, #3
    e4e0:	str	w20, [x24, x9]
    e4e4:	str	w12, [x24, x8]
    e4e8:	str	xzr, [x24, w10, uxtw #3]
    e4ec:	str	xzr, [x24, w11, uxtw #3]
    e4f0:	b	ee88 <xre_match@@Base+0x12f4>
    e4f4:	ldrb	w8, [x21, #3]
    e4f8:	ldrsb	w9, [x21, #4]
    e4fc:	bfi	w8, w9, #8, #24
    e500:	subs	w9, w8, #0x1
    e504:	b.lt	ec84 <xre_match@@Base+0x10f0>  // b.tstop
    e508:	sturh	w9, [x21, #3]
    e50c:	b	e54c <xre_match@@Base+0x9b8>
    e510:	ldur	x11, [x29, #-96]
    e514:	cmp	x25, x4
    e518:	b.ne	eb0c <xre_match@@Base+0xf78>  // b.any
    e51c:	cmp	x4, x15
    e520:	mov	x4, x15
    e524:	mov	x25, x3
    e528:	b.ne	e514 <xre_match@@Base+0x980>  // b.any
    e52c:	b	f118 <xre_match@@Base+0x1584>
    e530:	ldrb	w8, [x21, #3]
    e534:	ldrsb	w9, [x21, #4]
    e538:	bfi	w8, w9, #8, #24
    e53c:	cbz	w8, e54c <xre_match@@Base+0x9b8>
    e540:	sub	w8, w8, #0x1
    e544:	sturh	w8, [x21, #3]
    e548:	b	f088 <xre_match@@Base+0x14f4>
    e54c:	add	x14, x21, #0x5
    e550:	b	f09c <xre_match@@Base+0x1508>
    e554:	ldur	w8, [x29, #-188]
    e558:	cbz	w8, ec60 <xre_match@@Base+0x10cc>
    e55c:	ldur	x8, [x29, #-240]
    e560:	cmp	x25, x8
    e564:	b.eq	ec60 <xre_match@@Base+0x10cc>  // b.none
    e568:	ldurb	w8, [x25, #-1]
    e56c:	cmp	w8, #0xa
    e570:	b.ne	f1c0 <xre_match@@Base+0x162c>  // b.any
    e574:	ldur	x8, [x29, #-152]
    e578:	mov	x26, x25
    e57c:	ldrsb	w8, [x8, #56]
    e580:	tbnz	w8, #31, f0a0 <xre_match@@Base+0x150c>
    e584:	b	f1c0 <xre_match@@Base+0x162c>
    e588:	ldur	w8, [x29, #-188]
    e58c:	cbz	w8, f09c <xre_match@@Base+0x1508>
    e590:	ldur	x8, [x29, #-240]
    e594:	mov	x26, x25
    e598:	cmp	x25, x8
    e59c:	b.eq	f0a0 <xre_match@@Base+0x150c>  // b.none
    e5a0:	b	f1c0 <xre_match@@Base+0x162c>
    e5a4:	ldrb	w8, [x21, #1]
    e5a8:	sub	x9, x29, #0x68
    e5ac:	stur	x8, [x9, #-256]
    e5b0:	ldrsb	x8, [x21, #2]
    e5b4:	sub	x9, x29, #0x70
    e5b8:	stur	x8, [x9, #-256]
    e5bc:	ldur	x9, [x29, #-96]
    e5c0:	sub	w8, w16, w23
    e5c4:	sub	x9, x9, x20
    e5c8:	add	x9, x9, x9, lsl #1
    e5cc:	add	x9, x9, #0x7
    e5d0:	cmp	x9, x8
    e5d4:	stur	x9, [x29, #-216]
    e5d8:	b.ls	e648 <xre_match@@Base+0xab4>  // b.plast
    e5dc:	adrp	x8, 28000 <xexit@@Base+0x14018>
    e5e0:	ldr	x8, [x8, #3960]
    e5e4:	mov	w9, #0x13                  	// #19
    e5e8:	mov	x1, x24
    e5ec:	ldr	w8, [x8]
    e5f0:	mul	w8, w8, w9
    e5f4:	stur	w8, [x29, #-224]
    e5f8:	mov	w8, w16
    e5fc:	ldur	w9, [x29, #-224]
    e600:	cmp	w8, w9
    e604:	b.hi	f51c <xre_match@@Base+0x1988>  // b.pmore
    e608:	lsl	w28, w8, #1
    e60c:	sub	x24, sp, w28, uxtw #3
    e610:	mov	sp, x24
    e614:	mov	w8, w8
    e618:	lsl	x2, x8, #3
    e61c:	mov	x0, x24
    e620:	bl	5390 <memcpy@plt>
    e624:	ldur	x9, [x29, #-216]
    e628:	ldp	x3, x30, [x29, #-80]
    e62c:	sub	w8, w28, w23
    e630:	mov	w16, w28
    e634:	mov	x4, x26
    e638:	cmp	x9, x8
    e63c:	mov	w8, w28
    e640:	mov	x1, x24
    e644:	b.hi	e5fc <xre_match@@Base+0xa68>  // b.pmore
    e648:	sub	x8, x29, #0x68
    e64c:	ldur	x12, [x8, #-256]
    e650:	sub	x8, x29, #0x70
    e654:	ldur	x8, [x8, #-256]
    e658:	ldur	x13, [x29, #-96]
    e65c:	add	x14, x21, #0x3
    e660:	bfi	x12, x8, #8, #56
    e664:	cmp	x13, x20
    e668:	mov	x8, x20
    e66c:	b.cc	e6a0 <xre_match@@Base+0xb0c>  // b.lo, b.ul, b.last
    e670:	ldr	x9, [x27, x8, lsl #3]
    e674:	add	w10, w23, #0x1
    e678:	add	w11, w23, #0x2
    e67c:	str	x9, [x24, w23, uxtw #3]
    e680:	ldr	x9, [x19, x8, lsl #3]
    e684:	add	w23, w23, #0x3
    e688:	str	x9, [x24, w10, uxtw #3]
    e68c:	ldr	x9, [x22, x8, lsl #3]
    e690:	add	x8, x8, #0x1
    e694:	cmp	x8, x13
    e698:	str	x9, [x24, w11, uxtw #3]
    e69c:	b.ls	e670 <xre_match@@Base+0xadc>  // b.plast
    e6a0:	add	w8, w23, #0x1
    e6a4:	mov	w9, w23
    e6a8:	add	w10, w23, #0x2
    e6ac:	add	x11, x14, x12
    e6b0:	add	w12, w23, #0x3
    e6b4:	lsl	x9, x9, #3
    e6b8:	lsl	x8, x8, #3
    e6bc:	add	w23, w23, #0x4
    e6c0:	str	w20, [x24, x9]
    e6c4:	str	w13, [x24, x8]
    e6c8:	str	x11, [x24, w10, uxtw #3]
    e6cc:	str	xzr, [x24, w12, uxtw #3]
    e6d0:	b	ee88 <xre_match@@Base+0x12f4>
    e6d4:	ldur	x9, [x29, #-96]
    e6d8:	sub	w8, w16, w23
    e6dc:	sub	x9, x9, x20
    e6e0:	add	x9, x9, x9, lsl #1
    e6e4:	add	x9, x9, #0x7
    e6e8:	cmp	x9, x8
    e6ec:	stur	x9, [x29, #-216]
    e6f0:	b.ls	e764 <xre_match@@Base+0xbd0>  // b.plast
    e6f4:	adrp	x8, 28000 <xexit@@Base+0x14018>
    e6f8:	ldr	x8, [x8, #3960]
    e6fc:	mov	w9, #0x13                  	// #19
    e700:	mov	x1, x24
    e704:	ldr	w8, [x8]
    e708:	mul	w8, w8, w9
    e70c:	stur	w8, [x29, #-224]
    e710:	mov	w8, w16
    e714:	ldur	w9, [x29, #-224]
    e718:	cmp	w8, w9
    e71c:	b.hi	f51c <xre_match@@Base+0x1988>  // b.pmore
    e720:	lsl	w28, w8, #1
    e724:	sub	x24, sp, w28, uxtw #3
    e728:	mov	sp, x24
    e72c:	mov	w8, w8
    e730:	lsl	x2, x8, #3
    e734:	mov	x0, x24
    e738:	bl	5390 <memcpy@plt>
    e73c:	ldur	x9, [x29, #-216]
    e740:	ldur	x15, [x29, #-112]
    e744:	ldur	x30, [x29, #-72]
    e748:	sub	w8, w28, w23
    e74c:	mov	w16, w28
    e750:	mov	x4, x26
    e754:	cmp	x9, x8
    e758:	mov	w8, w28
    e75c:	mov	x1, x24
    e760:	b.hi	e714 <xre_match@@Base+0xb80>  // b.pmore
    e764:	ldur	x12, [x29, #-96]
    e768:	ldur	x1, [x29, #-256]
    e76c:	mov	x8, x20
    e770:	cmp	x12, x20
    e774:	b.cc	e7a8 <xre_match@@Base+0xc14>  // b.lo, b.ul, b.last
    e778:	ldr	x9, [x27, x8, lsl #3]
    e77c:	add	w10, w23, #0x1
    e780:	add	w11, w23, #0x2
    e784:	str	x9, [x24, w23, uxtw #3]
    e788:	ldr	x9, [x19, x8, lsl #3]
    e78c:	add	w23, w23, #0x3
    e790:	str	x9, [x24, w10, uxtw #3]
    e794:	ldr	x9, [x22, x8, lsl #3]
    e798:	add	x8, x8, #0x1
    e79c:	cmp	x8, x12
    e7a0:	str	x9, [x24, w11, uxtw #3]
    e7a4:	b.ls	e778 <xre_match@@Base+0xbe4>  // b.plast
    e7a8:	ldur	x3, [x29, #-80]
    e7ac:	ldur	x28, [x29, #-136]
    e7b0:	ldur	x17, [x29, #-232]
    e7b4:	add	w8, w23, #0x1
    e7b8:	mov	w9, w23
    e7bc:	add	w10, w23, #0x2
    e7c0:	add	w11, w23, #0x3
    e7c4:	lsl	x9, x9, #3
    e7c8:	lsl	x8, x8, #3
    e7cc:	add	w23, w23, #0x4
    e7d0:	str	w20, [x24, x9]
    e7d4:	str	w12, [x24, x8]
    e7d8:	str	xzr, [x24, w10, uxtw #3]
    e7dc:	str	xzr, [x24, w11, uxtw #3]
    e7e0:	b	f088 <xre_match@@Base+0x14f4>
    e7e4:	ldrb	w8, [x21, #1]
    e7e8:	ldrsb	x9, [x21, #2]
    e7ec:	add	x14, x21, #0x5
    e7f0:	bfi	x8, x9, #8, #56
    e7f4:	add	x9, x21, #0x3
    e7f8:	add	x10, x9, x8
    e7fc:	stur	x10, [x29, #-16]
    e800:	ldrb	w10, [x21, #3]
    e804:	ldrb	w11, [x21, #4]
    e808:	strb	w10, [x9, x8]
    e80c:	ldur	x8, [x29, #-16]
    e810:	strb	w11, [x8, #1]
    e814:	b	f09c <xre_match@@Base+0x1508>
    e818:	ldur	x8, [x29, #-184]
    e81c:	cmp	x25, x8
    e820:	b.eq	f09c <xre_match@@Base+0x1508>  // b.none
    e824:	ldur	w8, [x29, #-188]
    e828:	cbz	w8, f09c <xre_match@@Base+0x1508>
    e82c:	ldur	x8, [x29, #-240]
    e830:	cmp	x25, x8
    e834:	b.eq	f09c <xre_match@@Base+0x1508>  // b.none
    e838:	ldur	x12, [x29, #-200]
    e83c:	ldur	x11, [x29, #-88]
    e840:	sub	x8, x25, #0x1
    e844:	cmp	x25, x3
    e848:	csel	x9, x12, x8, eq  // eq = none
    e84c:	cmp	x8, x11
    e850:	csel	x8, x3, x9, eq  // eq = none
    e854:	ldrb	w8, [x8]
    e858:	adrp	x9, 29000 <xexit@@Base+0x15018>
    e85c:	add	x9, x9, #0x648
    e860:	sub	x10, x29, #0x8
    e864:	ldrb	w8, [x9, x8]
    e868:	ldur	x10, [x10, #-256]
    e86c:	mov	x26, x25
    e870:	cmp	w8, #0x1
    e874:	cset	w8, eq  // eq = none
    e878:	cmp	x25, x10
    e87c:	csel	x10, x12, x25, eq  // eq = none
    e880:	cmp	x25, x11
    e884:	csel	x10, x3, x10, eq  // eq = none
    e888:	ldrb	w10, [x10]
    e88c:	ldrb	w9, [x9, x10]
    e890:	cmp	w9, #0x1
    e894:	cset	w9, eq  // eq = none
    e898:	eor	w8, w8, w9
    e89c:	tbnz	w8, #0, f0a0 <xre_match@@Base+0x150c>
    e8a0:	b	f1c0 <xre_match@@Base+0x162c>
    e8a4:	ldur	x8, [x29, #-184]
    e8a8:	cmp	x25, x8
    e8ac:	b.eq	f1c0 <xre_match@@Base+0x162c>  // b.none
    e8b0:	ldur	w8, [x29, #-188]
    e8b4:	cbz	w8, f1c0 <xre_match@@Base+0x162c>
    e8b8:	ldur	x8, [x29, #-240]
    e8bc:	cmp	x25, x8
    e8c0:	b.eq	f1c0 <xre_match@@Base+0x162c>  // b.none
    e8c4:	ldur	x12, [x29, #-200]
    e8c8:	ldur	x11, [x29, #-88]
    e8cc:	sub	x8, x25, #0x1
    e8d0:	cmp	x25, x3
    e8d4:	csel	x9, x12, x8, eq  // eq = none
    e8d8:	cmp	x8, x11
    e8dc:	csel	x8, x3, x9, eq  // eq = none
    e8e0:	ldrb	w8, [x8]
    e8e4:	adrp	x9, 29000 <xexit@@Base+0x15018>
    e8e8:	add	x9, x9, #0x648
    e8ec:	sub	x10, x29, #0x8
    e8f0:	ldrb	w8, [x9, x8]
    e8f4:	ldur	x10, [x10, #-256]
    e8f8:	mov	x26, x25
    e8fc:	cmp	w8, #0x1
    e900:	cset	w8, eq  // eq = none
    e904:	cmp	x25, x10
    e908:	csel	x10, x12, x25, eq  // eq = none
    e90c:	cmp	x25, x11
    e910:	csel	x10, x3, x10, eq  // eq = none
    e914:	ldrb	w10, [x10]
    e918:	ldrb	w9, [x9, x10]
    e91c:	cmp	w9, #0x1
    e920:	cset	w9, eq  // eq = none
    e924:	eor	w8, w8, w9
    e928:	tbz	w8, #0, f0a0 <xre_match@@Base+0x150c>
    e92c:	b	f1c0 <xre_match@@Base+0x162c>
    e930:	ldur	x8, [x29, #-184]
    e934:	cmp	x25, x8
    e938:	b.eq	f2c8 <xre_match@@Base+0x1734>  // b.none
    e93c:	sub	x8, x29, #0x8
    e940:	ldur	x8, [x8, #-256]
    e944:	ldur	x9, [x29, #-88]
    e948:	cmp	x25, x8
    e94c:	ldur	x8, [x29, #-200]
    e950:	csel	x8, x8, x25, eq  // eq = none
    e954:	cmp	x25, x9
    e958:	csel	x8, x3, x8, eq  // eq = none
    e95c:	ldrb	w9, [x8]
    e960:	adrp	x8, 29000 <xexit@@Base+0x15018>
    e964:	add	x8, x8, #0x648
    e968:	ldrb	w9, [x8, x9]
    e96c:	cmp	w9, #0x1
    e970:	b.ne	f1c0 <xre_match@@Base+0x162c>  // b.any
    e974:	ldur	w9, [x29, #-188]
    e978:	cbz	w9, f09c <xre_match@@Base+0x1508>
    e97c:	ldur	x9, [x29, #-240]
    e980:	cmp	x25, x9
    e984:	b.eq	f09c <xre_match@@Base+0x1508>  // b.none
    e988:	ldur	x10, [x29, #-200]
    e98c:	ldur	x11, [x29, #-88]
    e990:	sub	x9, x25, #0x1
    e994:	cmp	x25, x3
    e998:	csel	x10, x10, x9, eq  // eq = none
    e99c:	cmp	x9, x11
    e9a0:	csel	x9, x3, x10, eq  // eq = none
    e9a4:	b	ea1c <xre_match@@Base+0xe88>
    e9a8:	ldur	w8, [x29, #-188]
    e9ac:	cbz	w8, f1c0 <xre_match@@Base+0x162c>
    e9b0:	ldur	x8, [x29, #-240]
    e9b4:	cmp	x25, x8
    e9b8:	b.eq	f1c0 <xre_match@@Base+0x162c>  // b.none
    e9bc:	ldur	x9, [x29, #-200]
    e9c0:	ldur	x10, [x29, #-88]
    e9c4:	sub	x8, x25, #0x1
    e9c8:	cmp	x25, x3
    e9cc:	csel	x9, x9, x8, eq  // eq = none
    e9d0:	cmp	x8, x10
    e9d4:	csel	x8, x3, x9, eq  // eq = none
    e9d8:	ldrb	w9, [x8]
    e9dc:	adrp	x8, 29000 <xexit@@Base+0x15018>
    e9e0:	add	x8, x8, #0x648
    e9e4:	ldrb	w9, [x8, x9]
    e9e8:	cmp	w9, #0x1
    e9ec:	b.ne	f1c0 <xre_match@@Base+0x162c>  // b.any
    e9f0:	ldur	x26, [x29, #-184]
    e9f4:	cmp	x25, x26
    e9f8:	b.eq	f0a0 <xre_match@@Base+0x150c>  // b.none
    e9fc:	sub	x9, x29, #0x8
    ea00:	ldur	x9, [x9, #-256]
    ea04:	ldur	x10, [x29, #-88]
    ea08:	cmp	x25, x9
    ea0c:	ldur	x9, [x29, #-200]
    ea10:	csel	x9, x9, x25, eq  // eq = none
    ea14:	cmp	x25, x10
    ea18:	csel	x9, x3, x9, eq  // eq = none
    ea1c:	ldrb	w9, [x9]
    ea20:	mov	x26, x25
    ea24:	ldrb	w8, [x8, x9]
    ea28:	cmp	w8, #0x1
    ea2c:	b.ne	f0a0 <xre_match@@Base+0x150c>  // b.any
    ea30:	b	f1c0 <xre_match@@Base+0x162c>
    ea34:	sub	x8, x29, #0x8
    ea38:	ldur	x8, [x8, #-256]
    ea3c:	ldur	x9, [x29, #-88]
    ea40:	cmp	x25, x8
    ea44:	ldur	x8, [x29, #-200]
    ea48:	csel	x8, x8, x25, eq  // eq = none
    ea4c:	cmp	x25, x9
    ea50:	csel	x8, x3, x8, eq  // eq = none
    ea54:	ldrb	w8, [x8]
    ea58:	adrp	x9, 29000 <xexit@@Base+0x15018>
    ea5c:	add	x9, x9, #0x648
    ea60:	ldrb	w8, [x9, x8]
    ea64:	cmp	w8, #0x1
    ea68:	b.ne	f1c0 <xre_match@@Base+0x162c>  // b.any
    ea6c:	ldur	w8, [x29, #-120]
    ea70:	cbnz	w8, eb88 <xre_match@@Base+0xff4>
    ea74:	cmp	x11, x20
    ea78:	b.cc	eb80 <xre_match@@Base+0xfec>  // b.lo, b.ul, b.last
    ea7c:	add	x8, x22, x20, lsl #3
    ea80:	mov	x9, x20
    ea84:	ldrb	w10, [x8]
    ea88:	add	x9, x9, #0x1
    ea8c:	cmp	x9, x11
    ea90:	orr	w10, w10, #0x18
    ea94:	strb	w10, [x8], #8
    ea98:	b.ls	ea84 <xre_match@@Base+0xef0>  // b.plast
    ea9c:	b	eb80 <xre_match@@Base+0xfec>
    eaa0:	sub	x8, x29, #0x8
    eaa4:	ldur	x8, [x8, #-256]
    eaa8:	ldur	x9, [x29, #-88]
    eaac:	cmp	x25, x8
    eab0:	ldur	x8, [x29, #-200]
    eab4:	csel	x8, x8, x25, eq  // eq = none
    eab8:	cmp	x25, x9
    eabc:	csel	x8, x3, x8, eq  // eq = none
    eac0:	ldrb	w8, [x8]
    eac4:	adrp	x9, 29000 <xexit@@Base+0x15018>
    eac8:	add	x9, x9, #0x648
    eacc:	ldrb	w8, [x9, x8]
    ead0:	cmp	w8, #0x1
    ead4:	b.eq	f1c0 <xre_match@@Base+0x162c>  // b.none
    ead8:	ldur	w8, [x29, #-120]
    eadc:	cbnz	w8, eb88 <xre_match@@Base+0xff4>
    eae0:	cmp	x11, x20
    eae4:	b.cc	eb80 <xre_match@@Base+0xfec>  // b.lo, b.ul, b.last
    eae8:	add	x8, x22, x20, lsl #3
    eaec:	mov	x9, x20
    eaf0:	ldrb	w10, [x8]
    eaf4:	add	x9, x9, #0x1
    eaf8:	cmp	x9, x11
    eafc:	orr	w10, w10, #0x18
    eb00:	strb	w10, [x8], #8
    eb04:	b.ls	eaf0 <xre_match@@Base+0xf5c>  // b.plast
    eb08:	b	eb80 <xre_match@@Base+0xfec>
    eb0c:	ldur	x8, [x29, #-152]
    eb10:	ldr	x8, [x8, #24]
    eb14:	tbnz	w8, #6, eb34 <xre_match@@Base+0xfa0>
    eb18:	mov	x9, x25
    eb1c:	cbz	x28, eb28 <xre_match@@Base+0xf94>
    eb20:	ldrb	w9, [x25]
    eb24:	add	x9, x28, x9
    eb28:	ldrb	w9, [x9]
    eb2c:	cmp	w9, #0xa
    eb30:	b.eq	f1c0 <xre_match@@Base+0x162c>  // b.none
    eb34:	tbz	w8, #7, eb50 <xre_match@@Base+0xfbc>
    eb38:	mov	x8, x25
    eb3c:	cbz	x28, eb48 <xre_match@@Base+0xfb4>
    eb40:	ldrb	w8, [x25]
    eb44:	add	x8, x28, x8
    eb48:	ldrb	w8, [x8]
    eb4c:	cbz	w8, f1c0 <xre_match@@Base+0x162c>
    eb50:	ldur	w8, [x29, #-120]
    eb54:	cbnz	w8, eb88 <xre_match@@Base+0xff4>
    eb58:	cmp	x11, x20
    eb5c:	b.cc	eb80 <xre_match@@Base+0xfec>  // b.lo, b.ul, b.last
    eb60:	add	x8, x22, x20, lsl #3
    eb64:	mov	x9, x20
    eb68:	ldrb	w10, [x8]
    eb6c:	add	x9, x9, #0x1
    eb70:	cmp	x9, x11
    eb74:	orr	w10, w10, #0x18
    eb78:	strb	w10, [x8], #8
    eb7c:	b.ls	eb68 <xre_match@@Base+0xfd4>  // b.plast
    eb80:	mov	w8, #0x1                   	// #1
    eb84:	stur	w8, [x29, #-120]
    eb88:	add	x26, x25, #0x1
    eb8c:	b	f0a0 <xre_match@@Base+0x150c>
    eb90:	mov	w9, w8
    eb94:	sub	w9, w9, #0x1
    eb98:	tst	w9, #0xff
    eb9c:	b.eq	df98 <xre_match@@Base+0x404>  // b.none
    eba0:	and	x11, x9, #0xff
    eba4:	lsl	x10, x11, #3
    eba8:	ldrb	w10, [x22, x10]
    ebac:	tbz	w10, #2, eb94 <xre_match@@Base+0x1000>
    ebb0:	stur	x11, [x29, #-96]
    ebb4:	sub	x9, x29, #0x20
    ebb8:	ldur	x9, [x9, #-256]
    ebbc:	cmp	x9, x21
    ebc0:	b.eq	ebd0 <xre_match@@Base+0x103c>  // b.none
    ebc4:	lsl	x8, x8, #3
    ebc8:	ldrb	w8, [x22, x8]
    ebcc:	tbnz	w8, #3, ec54 <xre_match@@Base+0x10c0>
    ebd0:	add	x8, x21, #0x3
    ebd4:	cmp	x8, x30
    ebd8:	b.cs	ec54 <xre_match@@Base+0x10c0>  // b.hs, b.nlast
    ebdc:	add	x8, x21, #0x4
    ebe0:	stur	x8, [x29, #-16]
    ebe4:	ldrb	w8, [x21, #3]
    ebe8:	sub	w8, w8, #0xd
    ebec:	cmp	w8, #0x9
    ebf0:	b.hi	ec54 <xre_match@@Base+0x10c0>  // b.pmore
    ebf4:	mov	w9, #0x271                 	// #625
    ebf8:	lsr	w9, w9, w8
    ebfc:	tbz	w9, #0, ec54 <xre_match@@Base+0x10c0>
    ec00:	adrp	x9, 14000 <xexit@@Base+0x18>
    ec04:	sxtb	x8, w8
    ec08:	add	x9, x9, #0x9a8
    ec0c:	ldrb	w10, [x21, #4]
    ec10:	ldrsb	x11, [x21, #5]
    ec14:	ldr	x8, [x9, x8, lsl #3]
    ec18:	bfi	x10, x11, #8, #56
    ec1c:	add	x8, x21, x8
    ec20:	add	x8, x8, x10
    ec24:	stur	x8, [x29, #-16]
    ec28:	tbz	w10, #31, ec54 <xre_match@@Base+0x10c0>
    ec2c:	ldrb	w9, [x8]
    ec30:	cmp	w9, #0xf
    ec34:	b.ne	ec54 <xre_match@@Base+0x10c0>  // b.any
    ec38:	ldrb	w9, [x8, #3]
    ec3c:	cmp	w9, #0x6
    ec40:	b.ne	ec54 <xre_match@@Base+0x10c0>  // b.any
    ec44:	ldrb	w9, [x8, #4]
    ec48:	ldrb	w10, [x14]
    ec4c:	cmp	w9, w10
    ec50:	b.eq	f2d8 <xre_match@@Base+0x1744>  // b.none
    ec54:	stur	wzr, [x29, #-120]
    ec58:	add	x14, x21, #0x3
    ec5c:	b	f09c <xre_match@@Base+0x1508>
    ec60:	ldur	x8, [x29, #-152]
    ec64:	mov	x26, x25
    ec68:	ldrb	w8, [x8, #56]
    ec6c:	tbz	w8, #5, f0a0 <xre_match@@Base+0x150c>
    ec70:	b	f1c0 <xre_match@@Base+0x162c>
    ec74:	ldur	x8, [x29, #-152]
    ec78:	ldrb	w8, [x8, #56]
    ec7c:	tbz	w8, #6, f0a0 <xre_match@@Base+0x150c>
    ec80:	b	f2d0 <xre_match@@Base+0x173c>
    ec84:	cbnz	w8, f09c <xre_match@@Base+0x1508>
    ec88:	sturh	wzr, [x21, #3]
    ec8c:	ldrb	w8, [x21, #1]
    ec90:	sub	x9, x29, #0x68
    ec94:	add	x14, x21, #0x3
    ec98:	cmp	x14, x30
    ec9c:	stur	x8, [x9, #-256]
    eca0:	ldrsb	x8, [x21, #2]
    eca4:	sub	x9, x29, #0x70
    eca8:	stur	x14, [x29, #-16]
    ecac:	stur	x8, [x9, #-256]
    ecb0:	b.cs	ed70 <xre_match@@Base+0x11dc>  // b.hs, b.nlast
    ecb4:	mov	x8, x14
    ecb8:	ldrb	w9, [x8]
    ecbc:	cbnz	w9, ed50 <xre_match@@Base+0x11bc>
    ecc0:	add	x8, x8, #0x1
    ecc4:	cmp	x30, x8
    ecc8:	stur	x8, [x29, #-16]
    eccc:	b.ne	ecb8 <xre_match@@Base+0x1124>  // b.any
    ecd0:	b	ed70 <xre_match@@Base+0x11dc>
    ecd4:	ldrb	w10, [x25], #1
    ecd8:	ldrb	w12, [x9]
    ecdc:	cmp	w10, w12
    ece0:	b.ne	f1c0 <xre_match@@Base+0x162c>  // b.any
    ece4:	subs	w11, w11, #0x1
    ece8:	add	x9, x9, #0x1
    ecec:	b.eq	e04c <xre_match@@Base+0x4b8>  // b.none
    ecf0:	cmp	x25, x4
    ecf4:	b.ne	ecd4 <xre_match@@Base+0x1140>  // b.any
    ecf8:	cmp	x4, x15
    ecfc:	mov	x4, x15
    ed00:	mov	x25, x3
    ed04:	b.ne	ecf0 <xre_match@@Base+0x115c>  // b.any
    ed08:	b	f118 <xre_match@@Base+0x1584>
    ed0c:	ldur	x21, [x29, #-104]
    ed10:	ldur	w10, [x29, #-120]
    ed14:	tbz	w9, #0, e208 <xre_match@@Base+0x674>
    ed18:	b	e20c <xre_match@@Base+0x678>
    ed1c:	cmp	w12, #0xa
    ed20:	b.ne	eeec <xre_match@@Base+0x1358>  // b.any
    ed24:	ldur	x11, [x29, #-152]
    ed28:	ldrsb	w11, [x11, #56]
    ed2c:	tbz	w11, #31, eeec <xre_match@@Base+0x1358>
    ed30:	mov	w9, #0xa                   	// #10
    ed34:	ldrb	w10, [x8, #3]
    ed38:	cmp	w10, #0x2
    ed3c:	b.ne	ee9c <xre_match@@Base+0x1308>  // b.any
    ed40:	ldrb	w8, [x8, #5]
    ed44:	cmp	w8, w9
    ed48:	b.ne	eee0 <xre_match@@Base+0x134c>  // b.any
    ed4c:	b	f010 <xre_match@@Base+0x147c>
    ed50:	cmp	w9, #0x6
    ed54:	b.ne	ed70 <xre_match@@Base+0x11dc>  // b.any
    ed58:	ldrb	w9, [x8, #1]
    ed5c:	ldrb	w8, [x8, #2]
    ed60:	cmp	x20, #0x101
    ed64:	csel	x20, x9, x20, eq  // eq = none
    ed68:	add	x8, x8, x9
    ed6c:	stur	x8, [x29, #-96]
    ed70:	ldur	x9, [x29, #-96]
    ed74:	sub	w8, w16, w23
    ed78:	sub	x9, x9, x20
    ed7c:	add	x9, x9, x9, lsl #1
    ed80:	add	x9, x9, #0x7
    ed84:	cmp	x9, x8
    ed88:	stur	x9, [x29, #-216]
    ed8c:	b.ls	ee04 <xre_match@@Base+0x1270>  // b.plast
    ed90:	adrp	x8, 28000 <xexit@@Base+0x14018>
    ed94:	ldr	x8, [x8, #3960]
    ed98:	mov	w9, #0x13                  	// #19
    ed9c:	mov	x1, x24
    eda0:	ldr	w8, [x8]
    eda4:	mul	w8, w8, w9
    eda8:	stur	w8, [x29, #-224]
    edac:	mov	w8, w16
    edb0:	ldur	w9, [x29, #-224]
    edb4:	cmp	w8, w9
    edb8:	b.hi	f51c <xre_match@@Base+0x1988>  // b.pmore
    edbc:	lsl	w28, w8, #1
    edc0:	sub	x24, sp, w28, uxtw #3
    edc4:	mov	sp, x24
    edc8:	mov	w8, w8
    edcc:	lsl	x2, x8, #3
    edd0:	mov	x0, x24
    edd4:	mov	x21, x14
    edd8:	bl	5390 <memcpy@plt>
    eddc:	ldur	x9, [x29, #-216]
    ede0:	ldp	x3, x30, [x29, #-80]
    ede4:	sub	w8, w28, w23
    ede8:	mov	x14, x21
    edec:	mov	w16, w28
    edf0:	mov	x4, x26
    edf4:	cmp	x9, x8
    edf8:	mov	w8, w28
    edfc:	mov	x1, x24
    ee00:	b.hi	edb0 <xre_match@@Base+0x121c>  // b.pmore
    ee04:	sub	x8, x29, #0x68
    ee08:	ldur	x12, [x8, #-256]
    ee0c:	sub	x8, x29, #0x70
    ee10:	ldur	x13, [x29, #-96]
    ee14:	ldur	x8, [x8, #-256]
    ee18:	cmp	x13, x20
    ee1c:	bfi	x12, x8, #8, #56
    ee20:	mov	x8, x20
    ee24:	b.cc	ee58 <xre_match@@Base+0x12c4>  // b.lo, b.ul, b.last
    ee28:	ldr	x9, [x27, x8, lsl #3]
    ee2c:	add	w10, w23, #0x1
    ee30:	add	w11, w23, #0x2
    ee34:	str	x9, [x24, w23, uxtw #3]
    ee38:	ldr	x9, [x19, x8, lsl #3]
    ee3c:	add	w23, w23, #0x3
    ee40:	str	x9, [x24, w10, uxtw #3]
    ee44:	ldr	x9, [x22, x8, lsl #3]
    ee48:	add	x8, x8, #0x1
    ee4c:	cmp	x8, x13
    ee50:	str	x9, [x24, w11, uxtw #3]
    ee54:	b.ls	ee28 <xre_match@@Base+0x1294>  // b.plast
    ee58:	add	w8, w23, #0x1
    ee5c:	mov	w9, w23
    ee60:	add	w10, w23, #0x2
    ee64:	add	x11, x14, x12
    ee68:	add	w12, w23, #0x3
    ee6c:	lsl	x9, x9, #3
    ee70:	lsl	x8, x8, #3
    ee74:	add	w23, w23, #0x4
    ee78:	str	w20, [x24, x9]
    ee7c:	str	w13, [x24, x8]
    ee80:	str	x11, [x24, w10, uxtw #3]
    ee84:	str	x25, [x24, w12, uxtw #3]
    ee88:	ldur	x1, [x29, #-256]
    ee8c:	ldur	x28, [x29, #-136]
    ee90:	ldur	x17, [x29, #-232]
    ee94:	ldur	x15, [x29, #-112]
    ee98:	b	f09c <xre_match@@Base+0x1508>
    ee9c:	and	w11, w10, #0xfe
    eea0:	cmp	w11, #0x4
    eea4:	b.ne	f010 <xre_match@@Base+0x147c>  // b.any
    eea8:	ldrb	w12, [x8, #4]
    eeac:	cmp	w10, #0x5
    eeb0:	cset	w11, eq  // eq = none
    eeb4:	cmp	w9, w12, lsl #3
    eeb8:	b.cs	eedc <xre_match@@Base+0x1348>  // b.hs, b.nlast
    eebc:	lsr	w12, w9, #3
    eec0:	add	x8, x12, x8
    eec4:	ldrb	w8, [x8, #5]
    eec8:	and	w9, w9, #0x7
    eecc:	lsr	w8, w8, w9
    eed0:	tbz	w8, #0, eedc <xre_match@@Base+0x1348>
    eed4:	cmp	w10, #0x5
    eed8:	cset	w11, ne  // ne = any
    eedc:	cbnz	w11, f010 <xre_match@@Base+0x147c>
    eee0:	mov	w8, #0x11                  	// #17
    eee4:	strb	w8, [x21]
    eee8:	b	f01c <xre_match@@Base+0x1488>
    eeec:	cmp	w12, #0x4
    eef0:	b.ne	f010 <xre_match@@Base+0x147c>  // b.any
    eef4:	ldrb	w11, [x8, #3]
    eef8:	cmp	w11, #0x2
    eefc:	b.eq	ef68 <xre_match@@Base+0x13d4>  // b.none
    ef00:	cmp	w11, #0x5
    ef04:	b.eq	ef90 <xre_match@@Base+0x13fc>  // b.none
    ef08:	cmp	w11, #0x4
    ef0c:	b.ne	f010 <xre_match@@Base+0x147c>  // b.any
    ef10:	ldrb	w11, [x10, #1]
    ef14:	cbz	w11, efdc <xre_match@@Base+0x1448>
    ef18:	ldrb	w12, [x8, #4]
    ef1c:	add	x9, x21, x9
    ef20:	mov	x13, xzr
    ef24:	add	x10, x10, #0x2
    ef28:	add	x9, x9, #0x8
    ef2c:	cmp	x12, x13
    ef30:	b.eq	effc <xre_match@@Base+0x1468>  // b.none
    ef34:	ldrb	w14, [x10, x13]
    ef38:	ldrb	w15, [x9, x13]
    ef3c:	tst	w15, w14
    ef40:	b.ne	eff4 <xre_match@@Base+0x1460>  // b.any
    ef44:	ldur	x15, [x29, #-112]
    ef48:	add	x13, x13, #0x1
    ef4c:	cmp	x13, x11
    ef50:	b.cc	ef2c <xre_match@@Base+0x1398>  // b.lo, b.ul, b.last
    ef54:	b	eff8 <xre_match@@Base+0x1464>
    ef58:	stur	w17, [x29, #-120]
    ef5c:	ldur	x28, [x29, #-136]
    ef60:	ldur	x17, [x29, #-232]
    ef64:	b	f09c <xre_match@@Base+0x1508>
    ef68:	ldrb	w9, [x10, #1]
    ef6c:	ldrb	w8, [x8, #5]
    ef70:	cmp	w8, w9, lsl #3
    ef74:	b.cs	eee0 <xre_match@@Base+0x134c>  // b.hs, b.nlast
    ef78:	add	x9, x10, x8, lsr #3
    ef7c:	ldrb	w9, [x9, #2]
    ef80:	and	w8, w8, #0x7
    ef84:	lsr	w8, w9, w8
    ef88:	tbnz	w8, #0, f010 <xre_match@@Base+0x147c>
    ef8c:	b	eee0 <xre_match@@Base+0x134c>
    ef90:	ldrb	w11, [x10, #1]
    ef94:	cbz	w11, efe4 <xre_match@@Base+0x1450>
    ef98:	add	x9, x21, x9
    ef9c:	mov	x12, xzr
    efa0:	add	x10, x10, #0x2
    efa4:	add	x9, x9, #0x8
    efa8:	ldrb	w13, [x10, x12]
    efac:	cbz	w13, efcc <xre_match@@Base+0x1438>
    efb0:	ldrb	w14, [x8, #4]
    efb4:	cmp	x12, x14
    efb8:	b.cs	efe8 <xre_match@@Base+0x1454>  // b.hs, b.nlast
    efbc:	ldrb	w14, [x9, x12]
    efc0:	eor	w14, w14, #0xff
    efc4:	tst	w13, w14
    efc8:	b.ne	efe8 <xre_match@@Base+0x1454>  // b.any
    efcc:	add	x12, x12, #0x1
    efd0:	cmp	x12, x11
    efd4:	b.cc	efa8 <xre_match@@Base+0x1414>  // b.lo, b.ul, b.last
    efd8:	b	efe8 <xre_match@@Base+0x1454>
    efdc:	mov	w12, wzr
    efe0:	b	effc <xre_match@@Base+0x1468>
    efe4:	mov	w12, wzr
    efe8:	cmp	w12, w11
    efec:	b.eq	eee0 <xre_match@@Base+0x134c>  // b.none
    eff0:	b	f010 <xre_match@@Base+0x147c>
    eff4:	ldur	x15, [x29, #-112]
    eff8:	mov	w12, w13
    effc:	cmp	w12, w11
    f000:	b.eq	eee0 <xre_match@@Base+0x134c>  // b.none
    f004:	ldrb	w8, [x8, #4]
    f008:	cmp	w12, w8
    f00c:	b.eq	eee0 <xre_match@@Base+0x134c>  // b.none
    f010:	ldrb	w8, [x21]
    f014:	cmp	w8, #0x11
    f018:	b.ne	f0b4 <xre_match@@Base+0x1520>  // b.any
    f01c:	sub	w8, w23, #0x3
    f020:	sub	w10, w23, #0x4
    f024:	lsl	x8, x8, #3
    f028:	lsl	x9, x10, #3
    f02c:	ldrsw	x8, [x24, x8]
    f030:	ldrsw	x9, [x24, x9]
    f034:	cmp	w8, w9
    f038:	b.cs	f048 <xre_match@@Base+0x14b4>  // b.hs, b.nlast
    f03c:	stur	wzr, [x29, #-120]
    f040:	mov	w23, w10
    f044:	b	f088 <xre_match@@Base+0x14f4>
    f048:	ldur	x13, [x29, #-176]
    f04c:	sub	w10, w23, #0x7
    f050:	add	w11, w10, #0x2
    f054:	ldr	x11, [x24, w11, uxtw #3]
    f058:	add	w12, w10, #0x1
    f05c:	str	x11, [x13, x8, lsl #3]
    f060:	ldr	x11, [x24, w12, uxtw #3]
    f064:	str	x11, [x17, x8, lsl #3]
    f068:	ldr	x11, [x24, w10, uxtw #3]
    f06c:	sub	w10, w10, #0x3
    f070:	str	x11, [x17, x8, lsl #3]
    f074:	sub	x8, x8, #0x1
    f078:	cmp	x8, x9
    f07c:	b.cs	f050 <xre_match@@Base+0x14bc>  // b.hs, b.nlast
    f080:	add	w23, w10, #0x3
    f084:	stur	wzr, [x29, #-120]
    f088:	ldrb	w8, [x21, #1]
    f08c:	ldrsb	x9, [x21, #2]
    f090:	bfi	x8, x9, #8, #56
    f094:	add	x8, x21, x8
    f098:	add	x14, x8, #0x3
    f09c:	mov	x26, x25
    f0a0:	cmp	x14, x30
    f0a4:	mov	x25, x26
    f0a8:	mov	x21, x14
    f0ac:	b.ne	de6c <xre_match@@Base+0x2d8>  // b.any
    f0b0:	b	f0c4 <xre_match@@Base+0x1530>
    f0b4:	mov	w8, #0xd                   	// #13
    f0b8:	strb	w8, [x21]
    f0bc:	b	f088 <xre_match@@Base+0x14f4>
    f0c0:	mov	x26, x25
    f0c4:	cmp	x26, x15
    f0c8:	b.eq	f7bc <xre_match@@Base+0x1c28>  // b.none
    f0cc:	ldur	w8, [x29, #-156]
    f0d0:	ldur	x11, [x29, #-128]
    f0d4:	ldur	x10, [x29, #-88]
    f0d8:	ldur	x25, [x29, #-144]
    f0dc:	cmp	w8, #0x0
    f0e0:	cset	w8, ne  // ne = any
    f0e4:	cmp	x1, x11
    f0e8:	cset	w9, ls  // ls = plast
    f0ec:	and	w8, w8, w9
    f0f0:	ldur	x9, [x29, #-104]
    f0f4:	cmp	x11, x10
    f0f8:	cset	w10, ls  // ls = plast
    f0fc:	and	w8, w10, w8
    f100:	cmp	x4, x9
    f104:	cset	w9, eq  // eq = none
    f108:	eor	w8, w8, w9
    f10c:	tbz	w8, #0, f124 <xre_match@@Base+0x1590>
    f110:	cset	w8, ne  // ne = any
    f114:	b	f12c <xre_match@@Base+0x1598>
    f118:	mov	x4, x15
    f11c:	mov	x25, x15
    f120:	b	f1c0 <xre_match@@Base+0x162c>
    f124:	cmp	x26, x11
    f128:	cset	w8, hi  // hi = pmore
    f12c:	ldur	w9, [x29, #-116]
    f130:	cmp	w9, #0x0
    f134:	cset	w9, eq  // eq = none
    f138:	orr	w8, w9, w8
    f13c:	cbz	w23, f7c4 <xre_match@@Base+0x1c30>
    f140:	cbz	w8, f1c8 <xre_match@@Base+0x1634>
    f144:	ldur	x8, [x29, #-168]
    f148:	cmp	x8, #0x2
    f14c:	b.cc	f1a0 <xre_match@@Base+0x160c>  // b.lo, b.ul, b.last
    f150:	sub	x8, x29, #0x40
    f154:	sub	x9, x29, #0x38
    f158:	sub	x10, x29, #0x30
    f15c:	sub	x11, x29, #0x28
    f160:	ldur	x8, [x8, #-256]
    f164:	ldur	x9, [x9, #-256]
    f168:	ldur	x10, [x10, #-256]
    f16c:	ldur	x11, [x11, #-256]
    f170:	ldur	x12, [x29, #-208]
    f174:	ldr	x13, [x8], #8
    f178:	subs	x12, x12, #0x1
    f17c:	str	x13, [x9], #8
    f180:	ldr	x13, [x10], #8
    f184:	str	x13, [x11], #8
    f188:	b.ne	f174 <xre_match@@Base+0x15e0>  // b.any
    f18c:	mov	w8, #0x1                   	// #1
    f190:	stur	w8, [x29, #-116]
    f194:	stur	x26, [x29, #-128]
    f198:	mov	x25, x26
    f19c:	b	f1c0 <xre_match@@Base+0x162c>
    f1a0:	mov	w8, #0x1                   	// #1
    f1a4:	stur	w8, [x29, #-116]
    f1a8:	stur	x26, [x29, #-128]
    f1ac:	b	f1c8 <xre_match@@Base+0x1634>
    f1b0:	mov	x4, x15
    f1b4:	mov	x25, x15
    f1b8:	ldur	x28, [x29, #-136]
    f1bc:	ldur	x17, [x29, #-232]
    f1c0:	mov	x26, x25
    f1c4:	cbz	w23, f498 <xre_match@@Base+0x1904>
    f1c8:	mov	x25, x26
    f1cc:	mov	w13, #0x231                 	// #561
    f1d0:	mov	w14, #0x3ce                 	// #974
    f1d4:	sub	w9, w23, #0x1
    f1d8:	sub	w11, w23, #0x3
    f1dc:	sub	w8, w23, #0x4
    f1e0:	ldr	x9, [x24, w9, uxtw #3]
    f1e4:	lsl	x11, x11, #3
    f1e8:	lsl	x12, x8, #3
    f1ec:	sub	w10, w23, #0x2
    f1f0:	ldrsw	x18, [x24, x11]
    f1f4:	ldrsw	x20, [x24, x12]
    f1f8:	ldr	x21, [x24, w10, uxtw #3]
    f1fc:	cmp	x9, #0x0
    f200:	csel	x25, x25, x9, eq  // eq = none
    f204:	cmp	w18, w20
    f208:	b.cc	f248 <xre_match@@Base+0x16b4>  // b.lo, b.ul, b.last
    f20c:	sub	w8, w23, #0x7
    f210:	mov	x9, x18
    f214:	add	w10, w8, #0x2
    f218:	ldr	x10, [x24, w10, uxtw #3]
    f21c:	add	w11, w8, #0x1
    f220:	str	x10, [x22, x9, lsl #3]
    f224:	ldr	x10, [x24, w11, uxtw #3]
    f228:	str	x10, [x19, x9, lsl #3]
    f22c:	ldr	x10, [x24, w8, uxtw #3]
    f230:	sub	w8, w8, #0x3
    f234:	str	x10, [x27, x9, lsl #3]
    f238:	sub	x9, x9, #0x1
    f23c:	cmp	x9, x20
    f240:	b.cs	f214 <xre_match@@Base+0x1680>  // b.hs, b.nlast
    f244:	add	w8, w8, #0x3
    f248:	mov	w23, w8
    f24c:	cbz	x21, f2a8 <xre_match@@Base+0x1714>
    f250:	cmp	x21, x30
    f254:	b.cs	f2b0 <xre_match@@Base+0x171c>  // b.hs, b.nlast
    f258:	ldrb	w8, [x21]
    f25c:	sub	w8, w8, #0xd
    f260:	cmp	w8, #0x9
    f264:	b.hi	f2b0 <xre_match@@Base+0x171c>  // b.pmore
    f268:	lsr	w9, w13, w8
    f26c:	tbz	w9, #0, f2b0 <xre_match@@Base+0x171c>
    f270:	ldrb	w9, [x21, #1]
    f274:	ldrsb	x10, [x21, #2]
    f278:	lsr	w8, w14, w8
    f27c:	bfi	x9, x10, #8, #56
    f280:	add	x9, x21, x9
    f284:	add	x10, x9, #0x3
    f288:	stur	x10, [x29, #-16]
    f28c:	ldrb	w9, [x9, #3]
    f290:	tbnz	w8, #0, f2a0 <xre_match@@Base+0x170c>
    f294:	cmp	w9, #0xf
    f298:	b.eq	f2a8 <xre_match@@Base+0x1714>  // b.none
    f29c:	b	f2b0 <xre_match@@Base+0x171c>
    f2a0:	cmp	w9, #0x15
    f2a4:	b.ne	f2b0 <xre_match@@Base+0x171c>  // b.any
    f2a8:	cbnz	w23, f1d4 <xre_match@@Base+0x1640>
    f2ac:	b	f498 <xre_match@@Base+0x1904>
    f2b0:	ldur	x8, [x29, #-88]
    f2b4:	cmp	x25, x8
    f2b8:	ldur	x8, [x29, #-104]
    f2bc:	ccmp	x25, x1, #0x0, ls  // ls = plast
    f2c0:	csel	x4, x4, x8, cc  // cc = lo, ul, last
    f2c4:	b	de58 <xre_match@@Base+0x2c4>
    f2c8:	mov	x25, x8
    f2cc:	b	f1c0 <xre_match@@Base+0x162c>
    f2d0:	ldur	x25, [x29, #-184]
    f2d4:	b	f1c0 <xre_match@@Base+0x162c>
    f2d8:	add	x9, x22, x9, lsl #3
    f2dc:	ldrb	w10, [x9]
    f2e0:	add	x11, x8, #0x3
    f2e4:	stur	x11, [x29, #-224]
    f2e8:	tbz	w10, #4, f340 <xre_match@@Base+0x17ac>
    f2ec:	and	w10, w10, #0xffffffef
    f2f0:	strb	w10, [x9]
    f2f4:	ldrb	w9, [x21, #2]
    f2f8:	cbz	w9, f340 <xre_match@@Base+0x17ac>
    f2fc:	ldrb	w9, [x14]
    f300:	sub	x10, x29, #0x48
    f304:	ldur	x10, [x10, #-256]
    f308:	ldr	x11, [x10, x9, lsl #3]
    f30c:	sub	x10, x29, #0x50
    f310:	ldur	x10, [x10, #-256]
    f314:	str	x11, [x27, x9, lsl #3]
    f318:	ldr	x10, [x10, x9, lsl #3]
    f31c:	cmp	x10, x11
    f320:	b.cc	f328 <xre_match@@Base+0x1794>  // b.lo, b.ul, b.last
    f324:	str	x10, [x19, x9, lsl #3]
    f328:	ldrb	w10, [x21, #1]
    f32c:	ldrb	w11, [x21, #2]
    f330:	add	x9, x9, #0x1
    f334:	add	x10, x11, x10
    f338:	cmp	x9, x10
    f33c:	b.cc	f300 <xre_match@@Base+0x176c>  // b.lo, b.ul, b.last
    f340:	add	x9, x8, #0x1
    f344:	stur	x9, [x29, #-16]
    f348:	ldur	x11, [x29, #-96]
    f34c:	ldrb	w9, [x8, #1]
    f350:	ldrsb	x8, [x8, #2]
    f354:	sub	w10, w16, w23
    f358:	sub	x11, x11, x20
    f35c:	stur	x9, [x29, #-216]
    f360:	sub	x9, x29, #0x68
    f364:	stur	x8, [x9, #-256]
    f368:	add	x8, x11, x11, lsl #1
    f36c:	add	x21, x8, #0x7
    f370:	ldur	x8, [x29, #-224]
    f374:	cmp	x21, x10
    f378:	stur	x8, [x29, #-16]
    f37c:	b.ls	f3e0 <xre_match@@Base+0x184c>  // b.plast
    f380:	adrp	x8, 28000 <xexit@@Base+0x14018>
    f384:	ldr	x8, [x8, #3960]
    f388:	mov	w9, #0x13                  	// #19
    f38c:	mov	x1, x24
    f390:	ldr	w8, [x8]
    f394:	mul	w8, w8, w9
    f398:	stur	w8, [x29, #-120]
    f39c:	mov	w8, w16
    f3a0:	ldur	w9, [x29, #-120]
    f3a4:	cmp	w8, w9
    f3a8:	b.hi	f51c <xre_match@@Base+0x1988>  // b.pmore
    f3ac:	lsl	w28, w8, #1
    f3b0:	sub	x24, sp, w28, uxtw #3
    f3b4:	mov	sp, x24
    f3b8:	mov	w8, w8
    f3bc:	lsl	x2, x8, #3
    f3c0:	mov	x0, x24
    f3c4:	bl	5390 <memcpy@plt>
    f3c8:	sub	w8, w28, w23
    f3cc:	cmp	x21, x8
    f3d0:	mov	w8, w28
    f3d4:	mov	x1, x24
    f3d8:	b.hi	f3a0 <xre_match@@Base+0x180c>  // b.pmore
    f3dc:	b	f3e4 <xre_match@@Base+0x1850>
    f3e0:	mov	w28, w16
    f3e4:	sub	x10, x29, #0x68
    f3e8:	ldur	x8, [x29, #-96]
    f3ec:	ldur	x9, [x29, #-216]
    f3f0:	ldur	x10, [x10, #-256]
    f3f4:	mov	w16, w28
    f3f8:	subs	x8, x8, x20
    f3fc:	bfi	x9, x10, #8, #56
    f400:	stur	x9, [x29, #-216]
    f404:	b.cc	f444 <xre_match@@Base+0x18b0>  // b.lo, b.ul, b.last
    f408:	add	x8, x8, #0x1
    f40c:	add	x9, x19, x20, lsl #3
    f410:	add	x10, x27, x20, lsl #3
    f414:	add	x11, x22, x20, lsl #3
    f418:	ldr	x12, [x10], #8
    f41c:	add	w13, w23, #0x1
    f420:	subs	x8, x8, #0x1
    f424:	str	x12, [x24, w23, uxtw #3]
    f428:	ldr	x12, [x9], #8
    f42c:	str	x12, [x24, w13, uxtw #3]
    f430:	ldr	x12, [x11], #8
    f434:	add	w13, w23, #0x2
    f438:	add	w23, w23, #0x3
    f43c:	str	x12, [x24, w13, uxtw #3]
    f440:	b.ne	f418 <xre_match@@Base+0x1884>  // b.any
    f444:	mov	w9, w23
    f448:	ldp	x11, x12, [x29, #-224]
    f44c:	lsl	x9, x9, #3
    f450:	str	w20, [x24, x9]
    f454:	ldur	x9, [x29, #-96]
    f458:	ldur	x1, [x29, #-256]
    f45c:	ldp	x3, x30, [x29, #-80]
    f460:	ldur	x28, [x29, #-136]
    f464:	ldur	x17, [x29, #-232]
    f468:	ldur	x15, [x29, #-112]
    f46c:	add	w8, w23, #0x1
    f470:	add	w10, w23, #0x2
    f474:	add	x11, x11, x12
    f478:	add	w12, w23, #0x3
    f47c:	add	w23, w23, #0x4
    f480:	lsl	x8, x8, #3
    f484:	mov	x4, x26
    f488:	str	w9, [x24, x8]
    f48c:	str	x11, [x24, w10, uxtw #3]
    f490:	str	x25, [x24, w12, uxtw #3]
    f494:	b	f1c0 <xre_match@@Base+0x162c>
    f498:	ldur	x20, [x29, #-208]
    f49c:	ldur	x21, [x29, #-168]
    f4a0:	ldp	x24, x25, [x29, #-152]
    f4a4:	ldur	w8, [x29, #-116]
    f4a8:	ldur	x28, [x29, #-248]
    f4ac:	cbz	w8, f514 <xre_match@@Base+0x1980>
    f4b0:	ldur	x8, [x29, #-88]
    f4b4:	ldur	x26, [x29, #-128]
    f4b8:	cmp	x26, x8
    f4bc:	ldur	x8, [x29, #-104]
    f4c0:	ccmp	x26, x1, #0x0, ls  // ls = plast
    f4c4:	csel	x4, x15, x8, cc  // cc = lo, ul, last
    f4c8:	cmp	x21, #0x2
    f4cc:	b.cc	f538 <xre_match@@Base+0x19a4>  // b.lo, b.ul, b.last
    f4d0:	sub	x9, x29, #0x60
    f4d4:	sub	x11, x29, #0x58
    f4d8:	ldur	x9, [x9, #-256]
    f4dc:	ldur	x11, [x11, #-256]
    f4e0:	add	x8, x19, #0x8
    f4e4:	add	x10, x27, #0x8
    f4e8:	add	x9, x9, #0x8
    f4ec:	add	x11, x11, #0x8
    f4f0:	mov	x12, x20
    f4f4:	ldr	x13, [x11], #8
    f4f8:	subs	x12, x12, #0x1
    f4fc:	str	x13, [x10], #8
    f500:	ldr	x13, [x9], #8
    f504:	str	x13, [x8], #8
    f508:	b.ne	f4f4 <xre_match@@Base+0x1960>  // b.any
    f50c:	ldur	x26, [x29, #-128]
    f510:	b	f538 <xre_match@@Base+0x19a4>
    f514:	mov	w0, #0xffffffff            	// #-1
    f518:	b	f79c <xre_match@@Base+0x1c08>
    f51c:	mov	w0, #0xfffffffe            	// #-2
    f520:	b	f79c <xre_match@@Base+0x1c08>
    f524:	mov	x26, x25
    f528:	ldur	x20, [x29, #-208]
    f52c:	ldur	x21, [x29, #-168]
    f530:	ldp	x24, x25, [x29, #-152]
    f534:	ldur	x28, [x29, #-248]
    f538:	cbz	x28, f774 <xre_match@@Base+0x1be0>
    f53c:	ldrb	w8, [x24, #56]
    f540:	tbnz	w8, #4, f774 <xre_match@@Base+0x1be0>
    f544:	ubfx	w8, w8, #1, #2
    f548:	cmp	w8, #0x1
    f54c:	b.eq	f5bc <xre_match@@Base+0x1a28>  // b.none
    f550:	cbnz	w8, f620 <xre_match@@Base+0x1a8c>
    f554:	add	x8, x20, #0x2
    f558:	mov	w9, #0x1e                  	// #30
    f55c:	cmp	x8, #0x1e
    f560:	csel	x8, x8, x9, hi  // hi = pmore
    f564:	ubfiz	x23, x8, #2, #32
    f568:	mov	x0, x23
    f56c:	stur	x4, [x29, #-216]
    f570:	str	w8, [x28]
    f574:	bl	57e0 <malloc@plt>
    f578:	mov	x22, x0
    f57c:	str	x0, [x28, #8]
    f580:	mov	x0, x23
    f584:	bl	57e0 <malloc@plt>
    f588:	mov	x8, x0
    f58c:	str	x0, [x28, #16]
    f590:	mov	w0, #0xfffffffe            	// #-2
    f594:	cbz	x8, f79c <xre_match@@Base+0x1c08>
    f598:	ldur	x1, [x29, #-256]
    f59c:	ldur	x3, [x29, #-80]
    f5a0:	ldur	x4, [x29, #-216]
    f5a4:	cbz	x22, f79c <xre_match@@Base+0x1c08>
    f5a8:	ldrb	w8, [x24, #56]
    f5ac:	and	w8, w8, #0xfffffffb
    f5b0:	orr	w8, w8, #0x2
    f5b4:	strb	w8, [x24, #56]
    f5b8:	b	f620 <xre_match@@Base+0x1a8c>
    f5bc:	ldr	w9, [x28]
    f5c0:	add	x8, x20, #0x2
    f5c4:	cmp	x8, x9
    f5c8:	b.ls	f620 <xre_match@@Base+0x1a8c>  // b.plast
    f5cc:	ldr	x0, [x28, #8]
    f5d0:	mov	x22, x1
    f5d4:	ubfiz	x1, x8, #2, #32
    f5d8:	mov	x23, x4
    f5dc:	str	w8, [x28]
    f5e0:	bl	5550 <realloc@plt>
    f5e4:	ldr	w9, [x28]
    f5e8:	ldr	x8, [x28, #16]
    f5ec:	str	x0, [x28, #8]
    f5f0:	lsl	x1, x9, #2
    f5f4:	mov	x0, x8
    f5f8:	bl	5550 <realloc@plt>
    f5fc:	mov	x8, x0
    f600:	str	x0, [x28, #16]
    f604:	mov	w0, #0xfffffffe            	// #-2
    f608:	cbz	x8, f79c <xre_match@@Base+0x1c08>
    f60c:	ldr	x8, [x28, #8]
    f610:	ldur	x3, [x29, #-80]
    f614:	mov	x1, x22
    f618:	mov	x4, x23
    f61c:	cbz	x8, f79c <xre_match@@Base+0x1c08>
    f620:	ldr	w8, [x28]
    f624:	cbz	w8, f65c <xre_match@@Base+0x1ac8>
    f628:	ldr	x8, [x28, #8]
    f62c:	ldur	w0, [x29, #-156]
    f630:	ldur	x11, [x29, #-104]
    f634:	sub	w9, w26, w1
    f638:	str	w25, [x8]
    f63c:	ldr	x10, [x28, #16]
    f640:	sub	w8, w26, w3
    f644:	add	w8, w0, w8
    f648:	cmp	x4, x11
    f64c:	csel	w8, w9, w8, eq  // eq = none
    f650:	str	w8, [x10]
    f654:	ldr	w13, [x28]
    f658:	b	f664 <xre_match@@Base+0x1ad0>
    f65c:	ldur	w0, [x29, #-156]
    f660:	mov	w13, wzr
    f664:	ldur	x2, [x29, #-88]
    f668:	mov	w8, w13
    f66c:	cmp	x21, w13, uxtw
    f670:	csel	x8, x21, x8, cc  // cc = lo, ul, last
    f674:	cmp	x8, #0x2
    f678:	b.cc	f740 <xre_match@@Base+0x1bac>  // b.lo, b.ul, b.last
    f67c:	cmp	w0, #0x0
    f680:	adrp	x12, 29000 <xexit@@Base+0x15018>
    f684:	add	x8, x28, #0x8
    f688:	add	x9, x28, #0x10
    f68c:	mov	w10, #0x1                   	// #1
    f690:	cset	w11, eq  // eq = none
    f694:	add	x12, x12, #0x748
    f698:	ldr	x14, [x27, x10, lsl #3]
    f69c:	cmp	x14, x12
    f6a0:	b.eq	f700 <xre_match@@Base+0x1b6c>  // b.none
    f6a4:	ldr	x13, [x19, x10, lsl #3]
    f6a8:	cmp	x13, x12
    f6ac:	b.eq	f700 <xre_match@@Base+0x1b6c>  // b.none
    f6b0:	cmp	x1, x14
    f6b4:	cset	w18, hi  // hi = pmore
    f6b8:	cmp	x14, x2
    f6bc:	sub	w15, w14, w1
    f6c0:	sub	w16, w14, w3
    f6c4:	ldr	x17, [x8]
    f6c8:	orr	w14, w18, w11
    f6cc:	cset	w18, hi  // hi = pmore
    f6d0:	orr	w14, w18, w14
    f6d4:	add	w16, w0, w16
    f6d8:	cmp	w14, #0x0
    f6dc:	csel	w14, w16, w15, ne  // ne = any
    f6e0:	str	w14, [x17, x10, lsl #2]
    f6e4:	cbz	w0, f714 <xre_match@@Base+0x1b80>
    f6e8:	cmp	x1, x13
    f6ec:	b.hi	f714 <xre_match@@Base+0x1b80>  // b.pmore
    f6f0:	cmp	x13, x2
    f6f4:	b.hi	f714 <xre_match@@Base+0x1b80>  // b.pmore
    f6f8:	sub	w13, w13, w1
    f6fc:	b	f71c <xre_match@@Base+0x1b88>
    f700:	ldr	x14, [x9]
    f704:	mov	w13, #0xffffffff            	// #-1
    f708:	str	w13, [x14, x10, lsl #2]
    f70c:	mov	x14, x8
    f710:	b	f720 <xre_match@@Base+0x1b8c>
    f714:	sub	w13, w13, w3
    f718:	add	w13, w0, w13
    f71c:	mov	x14, x9
    f720:	ldr	x14, [x14]
    f724:	str	w13, [x14, x10, lsl #2]
    f728:	ldr	w13, [x28]
    f72c:	add	x10, x10, #0x1
    f730:	cmp	x21, x13
    f734:	csel	x14, x21, x13, cc  // cc = lo, ul, last
    f738:	cmp	x14, x10
    f73c:	b.hi	f698 <xre_match@@Base+0x1b04>  // b.pmore
    f740:	cmp	w13, w21
    f744:	b.ls	f774 <xre_match@@Base+0x1be0>  // b.plast
    f748:	ldp	x10, x9, [x28, #8]
    f74c:	add	w8, w20, #0x1
    f750:	mov	w11, #0xffffffff            	// #-1
    f754:	add	x9, x9, w8, sxtw #2
    f758:	add	x10, x10, w8, sxtw #2
    f75c:	str	w11, [x9], #4
    f760:	str	w11, [x10], #4
    f764:	ldr	w12, [x28]
    f768:	add	w8, w8, #0x1
    f76c:	cmp	w12, w8
    f770:	b.hi	f75c <xre_match@@Base+0x1bc8>  // b.pmore
    f774:	sub	x9, x29, #0x18
    f778:	sub	x8, x29, #0x10
    f77c:	ldur	x9, [x9, #-256]
    f780:	ldur	x10, [x29, #-104]
    f784:	ldur	x8, [x8, #-256]
    f788:	add	w9, w3, w9
    f78c:	cmp	x4, x10
    f790:	sub	w8, w26, w8
    f794:	csel	w9, w1, w9, eq  // eq = none
    f798:	sub	w0, w8, w9
    f79c:	mov	sp, x29
    f7a0:	ldp	x20, x19, [sp, #80]
    f7a4:	ldp	x22, x21, [sp, #64]
    f7a8:	ldp	x24, x23, [sp, #48]
    f7ac:	ldp	x26, x25, [sp, #32]
    f7b0:	ldp	x28, x27, [sp, #16]
    f7b4:	ldp	x29, x30, [sp], #96
    f7b8:	ret
    f7bc:	mov	x26, x15
    f7c0:	b	f528 <xre_match@@Base+0x1994>
    f7c4:	ldur	x20, [x29, #-208]
    f7c8:	ldur	x21, [x29, #-168]
    f7cc:	ldur	x24, [x29, #-152]
    f7d0:	ldur	x28, [x29, #-248]
    f7d4:	tbz	w8, #0, f4b0 <xre_match@@Base+0x191c>
    f7d8:	b	f538 <xre_match@@Base+0x19a4>
    f7dc:	bl	5820 <abort@plt>

000000000000f7e0 <xre_match_2@@Base>:
    f7e0:	b	dbb4 <xre_match@@Base+0x20>

000000000000f7e4 <xre_compile_pattern@@Base>:
    f7e4:	stp	x29, x30, [sp, #-16]!
    f7e8:	ldrb	w8, [x2, #56]
    f7ec:	mov	w9, #0x69                  	// #105
    f7f0:	mov	x3, x2
    f7f4:	mov	x29, sp
    f7f8:	and	w8, w8, w9
    f7fc:	orr	w8, w8, #0x80
    f800:	strb	w8, [x2, #56]
    f804:	adrp	x8, 28000 <xexit@@Base+0x14018>
    f808:	ldr	x8, [x8, #3808]
    f80c:	ldr	x2, [x8]
    f810:	bl	f834 <xre_compile_pattern@@Base+0x50>
    f814:	cbz	w0, f828 <xre_compile_pattern@@Base+0x44>
    f818:	adrp	x8, 28000 <xexit@@Base+0x14018>
    f81c:	add	x8, x8, #0x9e0
    f820:	ldr	x0, [x8, w0, sxtw #3]
    f824:	b	f82c <xre_compile_pattern@@Base+0x48>
    f828:	mov	x0, xzr
    f82c:	ldp	x29, x30, [sp], #16
    f830:	ret
    f834:	sub	sp, sp, #0x1c0
    f838:	stp	x29, x30, [sp, #352]
    f83c:	add	x29, sp, #0x160
    f840:	stp	x28, x27, [sp, #368]
    f844:	stp	x26, x25, [sp, #384]
    f848:	stp	x24, x23, [sp, #400]
    f84c:	stp	x22, x21, [sp, #416]
    f850:	stp	x20, x19, [sp, #432]
    f854:	stur	x0, [x29, #-16]
    f858:	ldr	x8, [x3, #40]
    f85c:	mov	x26, x0
    f860:	mov	w0, #0x500                 	// #1280
    f864:	mov	x20, x3
    f868:	mov	x28, x2
    f86c:	stur	x8, [x29, #-152]
    f870:	mov	x24, x1
    f874:	bl	57e0 <malloc@plt>
    f878:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    f87c:	ldrb	w8, [x20, #56]
    f880:	mov	w9, #0x97                  	// #151
    f884:	stp	xzr, x28, [x20, #16]
    f888:	str	xzr, [x20, #48]
    f88c:	and	w8, w8, w9
    f890:	strb	w8, [x20, #56]
    f894:	adrp	x19, 29000 <xexit@@Base+0x15018>
    f898:	ldrb	w8, [x19, #1868]
    f89c:	mov	x22, x0
    f8a0:	tbnz	w8, #0, f8f4 <xre_compile_pattern@@Base+0x110>
    f8a4:	adrp	x25, 29000 <xexit@@Base+0x15018>
    f8a8:	add	x25, x25, #0x648
    f8ac:	mov	w2, #0x100                 	// #256
    f8b0:	mov	x0, x25
    f8b4:	mov	w1, wzr
    f8b8:	bl	5530 <memset@plt>
    f8bc:	bl	56a0 <__ctype_b_loc@plt>
    f8c0:	mov	x8, xzr
    f8c4:	mov	w9, #0x1                   	// #1
    f8c8:	ldr	x10, [x0]
    f8cc:	ldrh	w10, [x10, x8, lsl #1]
    f8d0:	tbz	w10, #3, f8d8 <xre_compile_pattern@@Base+0xf4>
    f8d4:	strb	w9, [x25, x8]
    f8d8:	add	x8, x8, #0x1
    f8dc:	cmp	x8, #0x100
    f8e0:	b.ne	f8c8 <xre_compile_pattern@@Base+0xe4>  // b.any
    f8e4:	adrp	x8, 29000 <xexit@@Base+0x15018>
    f8e8:	mov	w9, #0x1                   	// #1
    f8ec:	strb	w9, [x8, #1703]
    f8f0:	strb	w9, [x19, #1868]
    f8f4:	mov	x27, x20
    f8f8:	ldr	x8, [x27, #8]!
    f8fc:	ldr	x25, [x20]
    f900:	cbz	x8, f90c <xre_compile_pattern@@Base+0x128>
    f904:	cbnz	x24, f940 <xre_compile_pattern@@Base+0x15c>
    f908:	b	11f0c <xre_compile_pattern@@Base+0x2728>
    f90c:	cbz	x25, f920 <xre_compile_pattern@@Base+0x13c>
    f910:	mov	w1, #0x20                  	// #32
    f914:	mov	x0, x25
    f918:	bl	5550 <realloc@plt>
    f91c:	b	f928 <xre_compile_pattern@@Base+0x144>
    f920:	mov	w0, #0x20                  	// #32
    f924:	bl	57e0 <malloc@plt>
    f928:	mov	x25, x0
    f92c:	str	x0, [x20]
    f930:	cbz	x0, 11ebc <xre_compile_pattern@@Base+0x26d8>
    f934:	mov	w8, #0x20                  	// #32
    f938:	str	x8, [x27]
    f93c:	cbz	x24, 11f0c <xre_compile_pattern@@Base+0x2728>
    f940:	mov	w8, #0x8400                	// #33792
    f944:	mov	w12, #0x1200                	// #4608
    f948:	mov	w9, #0x200020              	// #2097184
    f94c:	lsr	x13, x28, #15
    f950:	and	x8, x28, x8
    f954:	add	x11, x26, x24
    f958:	str	x13, [sp, #104]
    f95c:	lsr	x13, x28, #13
    f960:	str	x8, [sp, #96]
    f964:	and	x8, x28, x9
    f968:	and	x9, x28, x12
    f96c:	mov	w10, #0x402                 	// #1026
    f970:	stp	x13, x9, [sp, #120]
    f974:	sub	x9, x11, #0x1
    f978:	str	x8, [sp, #88]
    f97c:	and	x8, x28, x10
    f980:	str	x9, [sp, #112]
    f984:	sub	x9, x11, #0x2
    f988:	str	x22, [sp, #168]
    f98c:	mov	x21, xzr
    f990:	mov	x23, xzr
    f994:	mov	x19, xzr
    f998:	str	x8, [sp, #144]
    f99c:	mov	x8, x26
    f9a0:	str	x9, [sp, #80]
    f9a4:	mov	w9, #0x20                  	// #32
    f9a8:	mov	x22, x25
    f9ac:	str	wzr, [sp, #140]
    f9b0:	stur	x11, [x29, #-160]
    f9b4:	str	x9, [sp, #152]
    f9b8:	str	x26, [sp, #176]
    f9bc:	stur	x27, [x29, #-168]
    f9c0:	add	x27, x8, #0x1
    f9c4:	stur	x27, [x29, #-16]
    f9c8:	ldrb	w24, [x8]
    f9cc:	ldur	x9, [x29, #-152]
    f9d0:	cbz	x9, f9d8 <xre_compile_pattern@@Base+0x1f4>
    f9d4:	ldrb	w24, [x9, x24]
    f9d8:	cmp	w24, #0x3e
    f9dc:	b.gt	fa48 <xre_compile_pattern@@Base+0x264>
    f9e0:	sub	w9, w24, #0x24
    f9e4:	cmp	w9, #0xa
    f9e8:	b.hi	fbf0 <xre_compile_pattern@@Base+0x40c>  // b.pmore
    f9ec:	adrp	x12, 14000 <xexit@@Base+0x18>
    f9f0:	add	x12, x12, #0x93a
    f9f4:	adr	x10, fa04 <xre_compile_pattern@@Base+0x220>
    f9f8:	ldrh	w11, [x12, x9, lsl #1]
    f9fc:	add	x10, x10, x11, lsl #2
    fa00:	br	x10
    fa04:	ldur	x12, [x29, #-160]
    fa08:	tbnz	w28, #3, 10bdc <xre_compile_pattern@@Base+0x13f8>
    fa0c:	cmp	x27, x12
    fa10:	b.eq	10bdc <xre_compile_pattern@@Base+0x13f8>  // b.none
    fa14:	ldrb	w9, [x8, #1]
    fa18:	add	x10, x8, #0x2
    fa1c:	cmp	x10, x12
    fa20:	csel	x8, x10, xzr, cc  // cc = lo, ul, last
    fa24:	tbnz	w28, #13, 10bb0 <xre_compile_pattern@@Base+0x13cc>
    fa28:	cmp	x10, x12
    fa2c:	b.cs	10bb8 <xre_compile_pattern@@Base+0x13d4>  // b.hs, b.nlast
    fa30:	cmp	w9, #0x5c
    fa34:	b.ne	10bb8 <xre_compile_pattern@@Base+0x13d4>  // b.any
    fa38:	ldrb	w11, [x8]
    fa3c:	cmp	w11, #0x29
    fa40:	b.ne	10bb8 <xre_compile_pattern@@Base+0x13d4>  // b.any
    fa44:	b	10bdc <xre_compile_pattern@@Base+0x13f8>
    fa48:	cmp	w24, #0x5d
    fa4c:	b.gt	faf4 <xre_compile_pattern@@Base+0x310>
    fa50:	cmp	w24, #0x3f
    fa54:	b.eq	fb18 <xre_compile_pattern@@Base+0x334>  // b.none
    fa58:	cmp	w24, #0x5b
    fa5c:	b.eq	fdfc <xre_compile_pattern@@Base+0x618>  // b.none
    fa60:	cmp	w24, #0x5c
    fa64:	b.ne	11944 <xre_compile_pattern@@Base+0x2160>  // b.any
    fa68:	ldur	x9, [x29, #-160]
    fa6c:	cmp	x27, x9
    fa70:	b.eq	11ecc <xre_compile_pattern@@Base+0x26e8>  // b.none
    fa74:	add	x27, x8, #0x2
    fa78:	stur	x27, [x29, #-16]
    fa7c:	ldrb	w24, [x8, #1]
    fa80:	cmp	w24, #0x56
    fa84:	b.gt	10af0 <xre_compile_pattern@@Base+0x130c>
    fa88:	sub	w8, w24, #0x27
    fa8c:	cmp	w8, #0x1b
    fa90:	b.hi	11938 <xre_compile_pattern@@Base+0x2154>  // b.pmore
    fa94:	adrp	x11, 14000 <xexit@@Base+0x18>
    fa98:	add	x11, x11, #0x950
    fa9c:	adr	x9, faac <xre_compile_pattern@@Base+0x2c8>
    faa0:	ldrh	w10, [x11, x8, lsl #1]
    faa4:	add	x9, x9, x10, lsl #2
    faa8:	br	x9
    faac:	tbnz	w28, #14, 11944 <xre_compile_pattern@@Base+0x2160>
    fab0:	ldr	w8, [sp, #140]
    fab4:	sub	w27, w24, #0x30
    fab8:	cmp	w8, w27, uxtb
    fabc:	b.cc	12010 <xre_compile_pattern@@Base+0x282c>  // b.lo, b.ul, b.last
    fac0:	ldr	x9, [sp, #152]
    fac4:	and	w8, w27, #0xff
    fac8:	mov	w11, #0x28                  	// #40
    facc:	lsr	x9, x9, #32
    fad0:	sub	w9, w9, #0x1
    fad4:	tbnz	w9, #31, 11084 <xre_compile_pattern@@Base+0x18a0>
    fad8:	ldr	x10, [sp, #168]
    fadc:	umaddl	x10, w9, w11, x10
    fae0:	ldr	w10, [x10, #32]
    fae4:	sub	w9, w9, #0x1
    fae8:	cmp	w10, w8
    faec:	b.ne	fad4 <xre_compile_pattern@@Base+0x2f0>  // b.any
    faf0:	b	11944 <xre_compile_pattern@@Base+0x2160>
    faf4:	cmp	w24, #0x5e
    faf8:	b.eq	10968 <xre_compile_pattern@@Base+0x1184>  // b.none
    fafc:	cmp	w24, #0x7b
    fb00:	b.eq	10994 <xre_compile_pattern@@Base+0x11b0>  // b.none
    fb04:	cmp	w24, #0x7c
    fb08:	b.ne	11944 <xre_compile_pattern@@Base+0x2160>  // b.any
    fb0c:	mov	w24, #0x7c                  	// #124
    fb10:	tbnz	w28, #15, fc00 <xre_compile_pattern@@Base+0x41c>
    fb14:	b	11944 <xre_compile_pattern@@Base+0x2160>
    fb18:	ldr	x8, [sp, #144]
    fb1c:	cbnz	x8, 11944 <xre_compile_pattern@@Base+0x2160>
    fb20:	cbnz	x23, fb34 <xre_compile_pattern@@Base+0x350>
    fb24:	tbnz	w28, #5, 11fe4 <xre_compile_pattern@@Base+0x2800>
    fb28:	tbnz	w28, #4, fb34 <xre_compile_pattern@@Base+0x350>
    fb2c:	mov	x23, xzr
    fb30:	b	11944 <xre_compile_pattern@@Base+0x2160>
    fb34:	ldur	x9, [x29, #-160]
    fb38:	cmp	w24, #0x2b
    fb3c:	str	x28, [sp, #160]
    fb40:	cset	w28, ne  // ne = any
    fb44:	cmp	w24, #0x3f
    fb48:	cset	w8, ne  // ne = any
    fb4c:	cmp	x27, x9
    fb50:	b.eq	10a10 <xre_compile_pattern@@Base+0x122c>  // b.none
    fb54:	ldur	x24, [x29, #-152]
    fb58:	add	x9, x27, #0x1
    fb5c:	stur	x9, [x29, #-16]
    fb60:	ldrb	w10, [x27]
    fb64:	cbz	x24, fb6c <xre_compile_pattern@@Base+0x388>
    fb68:	ldrb	w10, [x24, x10]
    fb6c:	cmp	w10, #0x2a
    fb70:	b.ne	fb7c <xre_compile_pattern@@Base+0x398>  // b.any
    fb74:	mov	w10, #0x2a                  	// #42
    fb78:	b	fbbc <xre_compile_pattern@@Base+0x3d8>
    fb7c:	ldr	x11, [sp, #160]
    fb80:	tbz	w11, #1, fbac <xre_compile_pattern@@Base+0x3c8>
    fb84:	cmp	w10, #0x5c
    fb88:	b.ne	10ad4 <xre_compile_pattern@@Base+0x12f0>  // b.any
    fb8c:	ldur	x10, [x29, #-160]
    fb90:	cmp	x9, x10
    fb94:	b.eq	11ecc <xre_compile_pattern@@Base+0x26e8>  // b.none
    fb98:	add	x9, x27, #0x2
    fb9c:	stur	x9, [x29, #-16]
    fba0:	ldrb	w10, [x27, #1]
    fba4:	cbz	x24, fbac <xre_compile_pattern@@Base+0x3c8>
    fba8:	ldrb	w10, [x24, x10]
    fbac:	cmp	w10, #0x2b
    fbb0:	b.eq	fbbc <xre_compile_pattern@@Base+0x3d8>  // b.none
    fbb4:	cmp	w10, #0x3f
    fbb8:	b.ne	10ad4 <xre_compile_pattern@@Base+0x12f0>  // b.any
    fbbc:	cmp	w10, #0x2b
    fbc0:	cset	w11, ne  // ne = any
    fbc4:	orr	w28, w28, w11
    fbc8:	ldur	x11, [x29, #-160]
    fbcc:	cmp	w10, #0x3f
    fbd0:	cset	w10, ne  // ne = any
    fbd4:	orr	w8, w8, w10
    fbd8:	cmp	x9, x11
    fbdc:	mov	x27, x9
    fbe0:	b.ne	fb58 <xre_compile_pattern@@Base+0x374>  // b.any
    fbe4:	ldur	x27, [x29, #-160]
    fbe8:	cbnz	x23, 10a1c <xre_compile_pattern@@Base+0x1238>
    fbec:	b	10adc <xre_compile_pattern@@Base+0x12f8>
    fbf0:	cmp	w24, #0xa
    fbf4:	b.ne	11944 <xre_compile_pattern@@Base+0x2160>  // b.any
    fbf8:	mov	w24, #0xa                   	// #10
    fbfc:	tbz	w28, #11, 11944 <xre_compile_pattern@@Base+0x2160>
    fc00:	tbnz	w28, #10, 11944 <xre_compile_pattern@@Base+0x2160>
    fc04:	ldp	x26, x8, [x20]
    fc08:	sub	x9, x25, x26
    fc0c:	add	x9, x9, #0x3
    fc10:	cmp	x9, x8
    fc14:	b.ls	10d54 <xre_compile_pattern@@Base+0x1570>  // b.plast
    fc18:	ldur	x27, [x29, #-168]
    fc1c:	cmp	x8, #0x10, lsl #12
    fc20:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
    fc24:	lsl	x8, x8, #1
    fc28:	cmp	x8, #0x10, lsl #12
    fc2c:	mov	w9, #0x10000               	// #65536
    fc30:	csel	x1, x8, x9, cc  // cc = lo, ul, last
    fc34:	mov	x0, x26
    fc38:	str	x1, [x20, #8]
    fc3c:	bl	5550 <realloc@plt>
    fc40:	str	x0, [x20]
    fc44:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    fc48:	sub	x9, x0, x26
    fc4c:	cmp	x19, #0x0
    fc50:	add	x10, x25, x9
    fc54:	add	x11, x22, x9
    fc58:	add	x9, x19, x9
    fc5c:	ldr	x8, [x27]
    fc60:	csel	x9, xzr, x9, eq  // eq = none
    fc64:	cmp	x26, x0
    fc68:	csel	x25, x25, x10, eq  // eq = none
    fc6c:	csel	x19, x19, x9, eq  // eq = none
    fc70:	sub	x9, x25, x0
    fc74:	add	x9, x9, #0x3
    fc78:	csel	x22, x22, x11, eq  // eq = none
    fc7c:	cmp	x9, x8
    fc80:	mov	x26, x0
    fc84:	b.hi	fc1c <xre_compile_pattern@@Base+0x438>  // b.pmore
    fc88:	b	10d58 <xre_compile_pattern@@Base+0x1574>
    fc8c:	tbnz	w28, #13, 113e8 <xre_compile_pattern@@Base+0x1c04>
    fc90:	mov	w24, #0x28                  	// #40
    fc94:	b	11944 <xre_compile_pattern@@Base+0x2160>
    fc98:	tbz	w28, #13, 11018 <xre_compile_pattern@@Base+0x1834>
    fc9c:	cbz	x19, 10e48 <xre_compile_pattern@@Base+0x1664>
    fca0:	ldp	x26, x8, [x20]
    fca4:	ldur	x27, [x29, #-168]
    fca8:	sub	x9, x25, x26
    fcac:	add	x9, x9, #0x1
    fcb0:	cmp	x9, x8
    fcb4:	b.ls	fd34 <xre_compile_pattern@@Base+0x550>  // b.plast
    fcb8:	cmp	x8, #0x10, lsl #12
    fcbc:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
    fcc0:	lsl	x8, x8, #1
    fcc4:	cmp	x8, #0x10, lsl #12
    fcc8:	mov	w9, #0x10000               	// #65536
    fccc:	csel	x1, x8, x9, cc  // cc = lo, ul, last
    fcd0:	mov	x0, x26
    fcd4:	str	x1, [x20, #8]
    fcd8:	bl	5550 <realloc@plt>
    fcdc:	str	x0, [x20]
    fce0:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    fce4:	cmp	x26, x0
    fce8:	b.eq	fd1c <xre_compile_pattern@@Base+0x538>  // b.none
    fcec:	sub	x8, x0, x26
    fcf0:	cmp	x19, #0x0
    fcf4:	add	x9, x19, x8
    fcf8:	add	x10, x23, x8
    fcfc:	csel	x19, xzr, x9, eq  // eq = none
    fd00:	cmp	x23, #0x0
    fd04:	add	x25, x25, x8
    fd08:	add	x22, x22, x8
    fd0c:	add	x8, x21, x8
    fd10:	csel	x23, xzr, x10, eq  // eq = none
    fd14:	cmp	x21, #0x0
    fd18:	csel	x21, xzr, x8, eq  // eq = none
    fd1c:	ldr	x8, [x27]
    fd20:	sub	x9, x25, x0
    fd24:	add	x9, x9, #0x1
    fd28:	mov	x26, x0
    fd2c:	cmp	x9, x8
    fd30:	b.hi	fcb8 <xre_compile_pattern@@Base+0x4d4>  // b.pmore
    fd34:	ldr	x26, [sp, #176]
    fd38:	sub	w8, w25, w19
    fd3c:	mov	w9, #0x14                  	// #20
    fd40:	sub	w8, w8, #0x3
    fd44:	strb	w9, [x25], #1
    fd48:	mov	w9, #0xe                   	// #14
    fd4c:	strb	w8, [x19, #1]
    fd50:	lsr	w8, w8, #8
    fd54:	strb	w9, [x19]
    fd58:	strb	w8, [x19, #2]
    fd5c:	b	10e4c <xre_compile_pattern@@Base+0x1668>
    fd60:	ldp	x26, x8, [x20]
    fd64:	mov	x23, x25
    fd68:	sub	x9, x25, x26
    fd6c:	add	x9, x9, #0x1
    fd70:	cmp	x9, x8
    fd74:	b.ls	10ac0 <xre_compile_pattern@@Base+0x12dc>  // b.plast
    fd78:	ldur	x27, [x29, #-168]
    fd7c:	cmp	x8, #0x10, lsl #12
    fd80:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
    fd84:	lsl	x8, x8, #1
    fd88:	cmp	x8, #0x10, lsl #12
    fd8c:	mov	w9, #0x10000               	// #65536
    fd90:	csel	x1, x8, x9, cc  // cc = lo, ul, last
    fd94:	mov	x0, x26
    fd98:	str	x1, [x20, #8]
    fd9c:	bl	5550 <realloc@plt>
    fda0:	str	x0, [x20]
    fda4:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    fda8:	cmp	x26, x0
    fdac:	b.eq	fde0 <xre_compile_pattern@@Base+0x5fc>  // b.none
    fdb0:	sub	x8, x0, x26
    fdb4:	cmp	x19, #0x0
    fdb8:	add	x9, x19, x8
    fdbc:	add	x10, x23, x8
    fdc0:	csel	x19, xzr, x9, eq  // eq = none
    fdc4:	cmp	x23, #0x0
    fdc8:	add	x25, x25, x8
    fdcc:	add	x22, x22, x8
    fdd0:	add	x8, x21, x8
    fdd4:	csel	x23, xzr, x10, eq  // eq = none
    fdd8:	cmp	x21, #0x0
    fddc:	csel	x21, xzr, x8, eq  // eq = none
    fde0:	ldr	x8, [x27]
    fde4:	sub	x9, x25, x0
    fde8:	add	x9, x9, #0x1
    fdec:	mov	x26, x0
    fdf0:	cmp	x9, x8
    fdf4:	b.hi	fd7c <xre_compile_pattern@@Base+0x598>  // b.pmore
    fdf8:	b	10ac4 <xre_compile_pattern@@Base+0x12e0>
    fdfc:	ldur	x8, [x29, #-160]
    fe00:	cmp	x27, x8
    fe04:	b.eq	11fc4 <xre_compile_pattern@@Base+0x27e0>  // b.none
    fe08:	ldp	x26, x8, [x20]
    fe0c:	sub	x9, x25, x26
    fe10:	add	x9, x9, #0x22
    fe14:	cmp	x9, x8
    fe18:	b.ls	fe94 <xre_compile_pattern@@Base+0x6b0>  // b.plast
    fe1c:	cmp	x8, #0x10, lsl #12
    fe20:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
    fe24:	lsl	x8, x8, #1
    fe28:	cmp	x8, #0x10, lsl #12
    fe2c:	mov	w9, #0x10000               	// #65536
    fe30:	csel	x1, x8, x9, cc  // cc = lo, ul, last
    fe34:	mov	x0, x26
    fe38:	str	x1, [x20, #8]
    fe3c:	bl	5550 <realloc@plt>
    fe40:	str	x0, [x20]
    fe44:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    fe48:	cmp	x26, x0
    fe4c:	b.eq	fe74 <xre_compile_pattern@@Base+0x690>  // b.none
    fe50:	sub	x8, x0, x26
    fe54:	cmp	x19, #0x0
    fe58:	add	x9, x19, x8
    fe5c:	add	x25, x25, x8
    fe60:	add	x22, x22, x8
    fe64:	add	x8, x21, x8
    fe68:	csel	x19, xzr, x9, eq  // eq = none
    fe6c:	cmp	x21, #0x0
    fe70:	csel	x21, xzr, x8, eq  // eq = none
    fe74:	ldur	x8, [x29, #-168]
    fe78:	sub	x9, x25, x0
    fe7c:	add	x9, x9, #0x22
    fe80:	mov	x26, x0
    fe84:	ldr	x8, [x8]
    fe88:	cmp	x9, x8
    fe8c:	b.hi	fe1c <xre_compile_pattern@@Base+0x638>  // b.pmore
    fe90:	mov	x26, x0
    fe94:	sub	x9, x25, x26
    fe98:	add	x9, x9, #0x1
    fe9c:	cmp	x9, x8
    fea0:	mov	x23, x25
    fea4:	b.ls	ff28 <xre_compile_pattern@@Base+0x744>  // b.plast
    fea8:	cmp	x8, #0x10, lsl #12
    feac:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
    feb0:	lsl	x8, x8, #1
    feb4:	cmp	x8, #0x10, lsl #12
    feb8:	mov	w9, #0x10000               	// #65536
    febc:	csel	x1, x8, x9, cc  // cc = lo, ul, last
    fec0:	mov	x0, x26
    fec4:	str	x1, [x20, #8]
    fec8:	bl	5550 <realloc@plt>
    fecc:	str	x0, [x20]
    fed0:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    fed4:	cmp	x26, x0
    fed8:	b.eq	ff0c <xre_compile_pattern@@Base+0x728>  // b.none
    fedc:	sub	x8, x0, x26
    fee0:	cmp	x19, #0x0
    fee4:	add	x9, x19, x8
    fee8:	add	x10, x23, x8
    feec:	csel	x19, xzr, x9, eq  // eq = none
    fef0:	cmp	x23, #0x0
    fef4:	add	x25, x25, x8
    fef8:	add	x22, x22, x8
    fefc:	add	x8, x21, x8
    ff00:	csel	x23, xzr, x10, eq  // eq = none
    ff04:	cmp	x21, #0x0
    ff08:	csel	x21, xzr, x8, eq  // eq = none
    ff0c:	ldur	x8, [x29, #-168]
    ff10:	sub	x9, x25, x0
    ff14:	add	x9, x9, #0x1
    ff18:	mov	x26, x0
    ff1c:	ldr	x8, [x8]
    ff20:	cmp	x9, x8
    ff24:	b.hi	fea8 <xre_compile_pattern@@Base+0x6c4>  // b.pmore
    ff28:	ldrb	w8, [x27]
    ff2c:	cmp	w8, #0x5e
    ff30:	mov	w8, #0x4                   	// #4
    ff34:	cinc	w8, w8, eq  // eq = none
    ff38:	strb	w8, [x25], #1
    ff3c:	ldur	x27, [x29, #-16]
    ff40:	ldrb	w8, [x27]
    ff44:	cmp	w8, #0x5e
    ff48:	b.ne	ff54 <xre_compile_pattern@@Base+0x770>  // b.any
    ff4c:	add	x27, x27, #0x1
    ff50:	stur	x27, [x29, #-16]
    ff54:	ldp	x26, x8, [x20]
    ff58:	ldur	x24, [x29, #-168]
    ff5c:	sub	x9, x25, x26
    ff60:	add	x9, x9, #0x1
    ff64:	cmp	x9, x8
    ff68:	b.ls	ffe8 <xre_compile_pattern@@Base+0x804>  // b.plast
    ff6c:	cmp	x8, #0x10, lsl #12
    ff70:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
    ff74:	lsl	x8, x8, #1
    ff78:	cmp	x8, #0x10, lsl #12
    ff7c:	mov	w9, #0x10000               	// #65536
    ff80:	csel	x1, x8, x9, cc  // cc = lo, ul, last
    ff84:	mov	x0, x26
    ff88:	str	x1, [x20, #8]
    ff8c:	bl	5550 <realloc@plt>
    ff90:	str	x0, [x20]
    ff94:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
    ff98:	cmp	x26, x0
    ff9c:	b.eq	ffd0 <xre_compile_pattern@@Base+0x7ec>  // b.none
    ffa0:	sub	x8, x0, x26
    ffa4:	cmp	x19, #0x0
    ffa8:	add	x9, x19, x8
    ffac:	add	x10, x23, x8
    ffb0:	csel	x19, xzr, x9, eq  // eq = none
    ffb4:	cmp	x23, #0x0
    ffb8:	add	x25, x25, x8
    ffbc:	add	x22, x22, x8
    ffc0:	add	x8, x21, x8
    ffc4:	csel	x23, xzr, x10, eq  // eq = none
    ffc8:	cmp	x21, #0x0
    ffcc:	csel	x21, xzr, x8, eq  // eq = none
    ffd0:	ldr	x8, [x24]
    ffd4:	sub	x9, x25, x0
    ffd8:	add	x9, x9, #0x1
    ffdc:	mov	x26, x0
    ffe0:	cmp	x9, x8
    ffe4:	b.hi	ff6c <xre_compile_pattern@@Base+0x788>  // b.pmore
    ffe8:	mov	x26, x25
    ffec:	movi	v0.2d, #0x0
    fff0:	str	q0, [x26, #1]!
    fff4:	mov	w8, #0x20                  	// #32
    fff8:	str	x27, [sp, #72]
    fffc:	strb	w8, [x25]
   10000:	stur	q0, [x25, #17]
   10004:	tbz	w28, #8, 1001c <xre_compile_pattern@@Base+0x838>
   10008:	ldurb	w8, [x25, #-1]
   1000c:	cmp	w8, #0x5
   10010:	b.ne	1001c <xre_compile_pattern@@Base+0x838>  // b.any
   10014:	mov	w8, #0x4                   	// #4
   10018:	strb	w8, [x25, #2]
   1001c:	ldur	x8, [x29, #-16]
   10020:	ldur	x9, [x29, #-160]
   10024:	cmp	x8, x9
   10028:	b.eq	11fc4 <xre_compile_pattern@@Base+0x27e0>  // b.none
   1002c:	mov	w13, wzr
   10030:	add	x24, x25, #0x8
   10034:	mov	w0, #0xffffffff            	// #-1
   10038:	mov	w27, w0
   1003c:	add	x9, x8, #0x1
   10040:	stur	x9, [x29, #-16]
   10044:	ldrb	w0, [x8]
   10048:	ldur	x10, [x29, #-152]
   1004c:	cbz	x10, 10054 <xre_compile_pattern@@Base+0x870>
   10050:	ldrb	w0, [x10, x0]
   10054:	tbz	w28, #0, 100b4 <xre_compile_pattern@@Base+0x8d0>
   10058:	cmp	w0, #0x5c
   1005c:	b.ne	100b4 <xre_compile_pattern@@Base+0x8d0>  // b.any
   10060:	ldur	x10, [x29, #-160]
   10064:	cmp	x9, x10
   10068:	b.eq	11ecc <xre_compile_pattern@@Base+0x26e8>  // b.none
   1006c:	add	x9, x8, #0x2
   10070:	stur	x9, [x29, #-16]
   10074:	ldrb	w27, [x8, #1]
   10078:	ldur	x8, [x29, #-152]
   1007c:	cbz	x8, 10084 <xre_compile_pattern@@Base+0x8a0>
   10080:	ldrb	w27, [x8, x27]
   10084:	lsr	x8, x27, #3
   10088:	ldrb	w9, [x26, x8]
   1008c:	and	w10, w27, #0x7
   10090:	mov	w11, #0x1                   	// #1
   10094:	lsl	w10, w11, w10
   10098:	orr	w9, w9, w10
   1009c:	strb	w9, [x26, x8]
   100a0:	ldur	x8, [x29, #-16]
   100a4:	ldur	x9, [x29, #-160]
   100a8:	cmp	x8, x9
   100ac:	b.ne	1003c <xre_compile_pattern@@Base+0x858>  // b.any
   100b0:	b	11fc4 <xre_compile_pattern@@Base+0x27e0>
   100b4:	cmp	w0, #0x5d
   100b8:	b.ne	100cc <xre_compile_pattern@@Base+0x8e8>  // b.any
   100bc:	ldr	x10, [sp, #72]
   100c0:	cmp	x8, x10
   100c4:	b.eq	10134 <xre_compile_pattern@@Base+0x950>  // b.none
   100c8:	b	11e8c <xre_compile_pattern@@Base+0x26a8>
   100cc:	tst	w13, #0xff
   100d0:	b.eq	100e8 <xre_compile_pattern@@Base+0x904>  // b.none
   100d4:	cmp	w0, #0x2d
   100d8:	b.ne	100e8 <xre_compile_pattern@@Base+0x904>  // b.any
   100dc:	ldrb	w10, [x9]
   100e0:	cmp	w10, #0x5d
   100e4:	b.ne	12058 <xre_compile_pattern@@Base+0x2874>  // b.any
   100e8:	cmp	w0, #0x2d
   100ec:	b.ne	10134 <xre_compile_pattern@@Base+0x950>  // b.any
   100f0:	ldr	x11, [sp, #176]
   100f4:	sub	x10, x8, #0x1
   100f8:	cmp	x10, x11
   100fc:	b.cc	1010c <xre_compile_pattern@@Base+0x928>  // b.lo, b.ul, b.last
   10100:	ldrb	w11, [x10]
   10104:	cmp	w11, #0x5b
   10108:	b.eq	10134 <xre_compile_pattern@@Base+0x950>  // b.none
   1010c:	ldr	x12, [sp, #176]
   10110:	sub	x11, x8, #0x2
   10114:	cmp	x11, x12
   10118:	b.cc	10218 <xre_compile_pattern@@Base+0xa34>  // b.lo, b.ul, b.last
   1011c:	ldrb	w11, [x11]
   10120:	cmp	w11, #0x5b
   10124:	b.ne	10218 <xre_compile_pattern@@Base+0xa34>  // b.any
   10128:	ldrb	w10, [x10]
   1012c:	cmp	w10, #0x5e
   10130:	b.ne	10218 <xre_compile_pattern@@Base+0xa34>  // b.any
   10134:	ldrb	w10, [x9]
   10138:	cmp	w10, #0x2d
   1013c:	b.ne	10150 <xre_compile_pattern@@Base+0x96c>  // b.any
   10140:	mov	x11, x8
   10144:	ldrb	w12, [x11, #2]!
   10148:	cmp	w12, #0x5d
   1014c:	b.ne	101fc <xre_compile_pattern@@Base+0xa18>  // b.any
   10150:	tbz	w28, #2, 10224 <xre_compile_pattern@@Base+0xa40>
   10154:	cmp	w0, #0x5b
   10158:	b.ne	10224 <xre_compile_pattern@@Base+0xa40>  // b.any
   1015c:	cmp	w10, #0x2e
   10160:	b.eq	10278 <xre_compile_pattern@@Base+0xa94>  // b.none
   10164:	cmp	w10, #0x3d
   10168:	b.eq	102f4 <xre_compile_pattern@@Base+0xb10>  // b.none
   1016c:	cmp	w10, #0x3a
   10170:	b.ne	10224 <xre_compile_pattern@@Base+0xa40>  // b.any
   10174:	ldur	x10, [x29, #-160]
   10178:	cmp	x9, x10
   1017c:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   10180:	ldur	x5, [x29, #-152]
   10184:	add	x8, x8, #0x2
   10188:	cmp	x8, x10
   1018c:	stur	x8, [x29, #-16]
   10190:	b.eq	11fc4 <xre_compile_pattern@@Base+0x27e0>  // b.none
   10194:	mov	x10, xzr
   10198:	add	x11, x8, #0x1
   1019c:	stur	x11, [x29, #-16]
   101a0:	ldrb	w9, [x8]
   101a4:	cbz	x5, 101ac <xre_compile_pattern@@Base+0x9c8>
   101a8:	ldrb	w9, [x5, x9]
   101ac:	cmp	w9, #0x3a
   101b0:	b.ne	101c0 <xre_compile_pattern@@Base+0x9dc>  // b.any
   101b4:	ldrb	w12, [x11]
   101b8:	cmp	w12, #0x5d
   101bc:	b.eq	103c8 <xre_compile_pattern@@Base+0xbe4>  // b.none
   101c0:	ldr	x12, [sp, #112]
   101c4:	cmp	x12, x8
   101c8:	b.eq	10374 <xre_compile_pattern@@Base+0xb90>  // b.none
   101cc:	and	w12, w10, #0xff
   101d0:	cmp	w12, #0x5
   101d4:	b.ls	101e4 <xre_compile_pattern@@Base+0xa00>  // b.plast
   101d8:	sturb	wzr, [x29, #-144]
   101dc:	mov	x8, x11
   101e0:	b	10198 <xre_compile_pattern@@Base+0x9b4>
   101e4:	and	x11, x10, #0xff
   101e8:	sub	x12, x29, #0x90
   101ec:	add	x10, x10, #0x1
   101f0:	strb	w9, [x12, x11]
   101f4:	add	x8, x8, #0x1
   101f8:	b	10198 <xre_compile_pattern@@Base+0x9b4>
   101fc:	ldur	x2, [x29, #-160]
   10200:	str	w13, [sp, #160]
   10204:	cmp	x9, x2
   10208:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   1020c:	stur	x11, [x29, #-16]
   10210:	sub	x1, x29, #0x10
   10214:	b	10258 <xre_compile_pattern@@Base+0xa74>
   10218:	ldrb	w8, [x9]
   1021c:	cmp	w8, #0x5d
   10220:	b.ne	10248 <xre_compile_pattern@@Base+0xa64>  // b.any
   10224:	lsr	x8, x0, #3
   10228:	ldrb	w9, [x26, x8]
   1022c:	and	w10, w0, #0x7
   10230:	mov	w11, #0x1                   	// #1
   10234:	lsl	w10, w11, w10
   10238:	mov	w13, wzr
   1023c:	orr	w9, w9, w10
   10240:	strb	w9, [x26, x8]
   10244:	b	10954 <xre_compile_pattern@@Base+0x1170>
   10248:	ldur	x2, [x29, #-160]
   1024c:	sub	x1, x29, #0x10
   10250:	mov	w0, w27
   10254:	str	w13, [sp, #160]
   10258:	ldur	x3, [x29, #-152]
   1025c:	mov	x4, x28
   10260:	mov	x5, x26
   10264:	bl	12854 <xregfree@@Base+0x370>
   10268:	cbnz	w0, 12048 <xre_compile_pattern@@Base+0x2864>
   1026c:	ldr	w13, [sp, #160]
   10270:	mov	w0, #0xffffffff            	// #-1
   10274:	b	10954 <xre_compile_pattern@@Base+0x1170>
   10278:	ldur	x10, [x29, #-160]
   1027c:	cmp	x9, x10
   10280:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   10284:	ldur	x13, [x29, #-152]
   10288:	add	x8, x8, #0x2
   1028c:	cmp	x8, x10
   10290:	stur	x8, [x29, #-16]
   10294:	b.eq	11fc4 <xre_compile_pattern@@Base+0x27e0>  // b.none
   10298:	mov	x9, xzr
   1029c:	sxtb	w10, w9
   102a0:	add	x8, x8, #0x1
   102a4:	stur	x8, [x29, #-16]
   102a8:	ldurb	w11, [x8, #-1]
   102ac:	cbz	x13, 102b4 <xre_compile_pattern@@Base+0xad0>
   102b0:	ldrb	w11, [x13, x11]
   102b4:	cmp	w11, #0x2e
   102b8:	b.ne	102c8 <xre_compile_pattern@@Base+0xae4>  // b.any
   102bc:	ldrb	w12, [x8]
   102c0:	cmp	w12, #0x5d
   102c4:	b.eq	10824 <xre_compile_pattern@@Base+0x1040>  // b.none
   102c8:	ldur	x12, [x29, #-160]
   102cc:	cmp	x12, x8
   102d0:	b.eq	10390 <xre_compile_pattern@@Base+0xbac>  // b.none
   102d4:	tbz	w10, #31, 102e0 <xre_compile_pattern@@Base+0xafc>
   102d8:	sturb	wzr, [x29, #-144]
   102dc:	b	102a0 <xre_compile_pattern@@Base+0xabc>
   102e0:	and	x10, x10, #0xff
   102e4:	add	x9, x9, #0x1
   102e8:	sub	x12, x29, #0x90
   102ec:	strb	w11, [x12, x10]
   102f0:	b	1029c <xre_compile_pattern@@Base+0xab8>
   102f4:	ldur	x10, [x29, #-160]
   102f8:	cmp	x9, x10
   102fc:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   10300:	ldur	x12, [x29, #-152]
   10304:	add	x8, x8, #0x2
   10308:	cmp	x8, x10
   1030c:	stur	x8, [x29, #-16]
   10310:	b.eq	11fc4 <xre_compile_pattern@@Base+0x27e0>  // b.none
   10314:	mov	x9, xzr
   10318:	add	x8, x8, #0x1
   1031c:	stur	x8, [x29, #-16]
   10320:	ldurb	w10, [x8, #-1]
   10324:	cbz	x12, 1032c <xre_compile_pattern@@Base+0xb48>
   10328:	ldrb	w10, [x12, x10]
   1032c:	cmp	w10, #0x3d
   10330:	b.ne	10340 <xre_compile_pattern@@Base+0xb5c>  // b.any
   10334:	ldrb	w11, [x8]
   10338:	cmp	w11, #0x5d
   1033c:	b.eq	108c0 <xre_compile_pattern@@Base+0x10dc>  // b.none
   10340:	ldur	x11, [x29, #-160]
   10344:	cmp	x11, x8
   10348:	b.eq	103ac <xre_compile_pattern@@Base+0xbc8>  // b.none
   1034c:	and	w11, w9, #0xff
   10350:	cmp	w11, #0xf
   10354:	b.ls	10360 <xre_compile_pattern@@Base+0xb7c>  // b.plast
   10358:	sturb	wzr, [x29, #-144]
   1035c:	b	10318 <xre_compile_pattern@@Base+0xb34>
   10360:	and	x11, x9, #0xff
   10364:	add	x9, x9, #0x1
   10368:	sub	x13, x29, #0x90
   1036c:	strb	w10, [x13, x11]
   10370:	b	10318 <xre_compile_pattern@@Base+0xb34>
   10374:	and	x11, x10, #0xff
   10378:	cmp	w9, #0x3a
   1037c:	sub	x9, x29, #0x90
   10380:	strb	wzr, [x9, x11]
   10384:	ldur	x9, [x29, #-160]
   10388:	b.eq	103d8 <xre_compile_pattern@@Base+0xbf4>  // b.none
   1038c:	b	107f8 <xre_compile_pattern@@Base+0x1014>
   10390:	and	x12, x10, #0xff
   10394:	cmp	w11, #0x2e
   10398:	sub	x11, x29, #0x90
   1039c:	strb	wzr, [x11, x12]
   103a0:	ldur	x11, [x29, #-160]
   103a4:	b.eq	10834 <xre_compile_pattern@@Base+0x1050>  // b.none
   103a8:	b	10888 <xre_compile_pattern@@Base+0x10a4>
   103ac:	and	x11, x9, #0xff
   103b0:	cmp	w10, #0x3d
   103b4:	sub	x10, x29, #0x90
   103b8:	strb	wzr, [x10, x11]
   103bc:	ldur	x10, [x29, #-160]
   103c0:	b.eq	108d0 <xre_compile_pattern@@Base+0x10ec>  // b.none
   103c4:	b	10920 <xre_compile_pattern@@Base+0x113c>
   103c8:	and	x9, x10, #0xff
   103cc:	sub	x11, x29, #0x90
   103d0:	strb	wzr, [x11, x9]
   103d4:	add	x9, x8, #0x1
   103d8:	ldrb	w11, [x9]
   103dc:	cmp	w11, #0x5d
   103e0:	b.ne	107f8 <xre_compile_pattern@@Base+0x1014>  // b.any
   103e4:	ldur	w10, [x29, #-144]
   103e8:	ldurh	w11, [x29, #-140]
   103ec:	mov	w13, #0x6c61                	// #27745
   103f0:	movk	w13, #0x756e, lsl #16
   103f4:	mov	w14, #0x6d                  	// #109
   103f8:	eor	w13, w10, w13
   103fc:	eor	w14, w11, w14
   10400:	mov	w0, #0x6e63                	// #28259
   10404:	mov	w4, #0x7267                	// #29287
   10408:	movk	w0, #0x7274, lsl #16
   1040c:	mov	w1, #0x6c                  	// #108
   10410:	movk	w4, #0x7061, lsl #16
   10414:	orr	w13, w13, w14
   10418:	mov	w14, #0x68                  	// #104
   1041c:	eor	w0, w10, w0
   10420:	eor	w1, w11, w1
   10424:	eor	w4, w10, w4
   10428:	eor	w14, w11, w14
   1042c:	mov	w2, #0x6964                	// #26980
   10430:	orr	w0, w0, w1
   10434:	mov	w1, #0x7270                	// #29296
   10438:	orr	w14, w4, w14
   1043c:	mov	w4, #0x7570                	// #30064
   10440:	mov	w17, #0x6c62                	// #27746
   10444:	movk	w2, #0x6967, lsl #16
   10448:	mov	w3, #0x74                  	// #116
   1044c:	movk	w1, #0x6e69, lsl #16
   10450:	movk	w4, #0x636e, lsl #16
   10454:	movk	w17, #0x6e61, lsl #16
   10458:	mov	w18, #0x6b                  	// #107
   1045c:	eor	w2, w10, w2
   10460:	eor	w3, w11, w3
   10464:	eor	w1, w10, w1
   10468:	eor	w4, w10, w4
   1046c:	mov	w15, #0x6c61                	// #27745
   10470:	eor	w17, w10, w17
   10474:	eor	w18, w11, w18
   10478:	orr	w2, w2, w3
   1047c:	orr	w1, w1, w3
   10480:	orr	w3, w4, w3
   10484:	mov	w4, #0x7073                	// #28787
   10488:	movk	w15, #0x6870, lsl #16
   1048c:	mov	w16, #0x61                  	// #97
   10490:	orr	w17, w17, w18
   10494:	mov	w18, #0x72                  	// #114
   10498:	movk	w4, #0x6361, lsl #16
   1049c:	mov	w6, #0x65                  	// #101
   104a0:	eor	w15, w10, w15
   104a4:	eor	w16, w11, w16
   104a8:	eor	w18, w11, w18
   104ac:	eor	w4, w10, w4
   104b0:	eor	w11, w11, w6
   104b4:	orr	w15, w15, w16
   104b8:	mov	w16, #0x6f6c                	// #28524
   104bc:	orr	w11, w4, w11
   104c0:	mov	w4, #0x7075                	// #28789
   104c4:	movk	w16, #0x6577, lsl #16
   104c8:	movk	w4, #0x6570, lsl #16
   104cc:	eor	w16, w10, w16
   104d0:	eor	w4, w10, w4
   104d4:	ldur	w12, [x29, #-141]
   104d8:	orr	w16, w16, w18
   104dc:	orr	w18, w4, w18
   104e0:	mov	w4, #0x6478                	// #25720
   104e4:	movk	w4, #0x6769, lsl #16
   104e8:	eor	w10, w10, w4
   104ec:	mov	w4, #0x6967                	// #26983
   104f0:	movk	w4, #0x74, lsl #16
   104f4:	eor	w12, w12, w4
   104f8:	cmp	w13, #0x0
   104fc:	orr	w10, w10, w12
   10500:	cset	w12, ne  // ne = any
   10504:	cmp	w15, #0x0
   10508:	str	w12, [sp, #64]
   1050c:	cset	w12, ne  // ne = any
   10510:	cmp	w17, #0x0
   10514:	str	w12, [sp, #44]
   10518:	cset	w12, ne  // ne = any
   1051c:	cmp	w0, #0x0
   10520:	str	w12, [sp, #32]
   10524:	cset	w12, ne  // ne = any
   10528:	cmp	w2, #0x0
   1052c:	str	w12, [sp, #24]
   10530:	cset	w12, ne  // ne = any
   10534:	cmp	w14, #0x0
   10538:	str	w12, [sp, #60]
   1053c:	cset	w12, ne  // ne = any
   10540:	cmp	w16, #0x0
   10544:	str	w12, [sp, #52]
   10548:	cset	w12, ne  // ne = any
   1054c:	cmp	w1, #0x0
   10550:	str	w12, [sp, #40]
   10554:	cset	w12, ne  // ne = any
   10558:	cmp	w3, #0x0
   1055c:	str	w12, [sp, #28]
   10560:	cset	w12, ne  // ne = any
   10564:	cmp	w11, #0x0
   10568:	cset	w11, ne  // ne = any
   1056c:	cmp	w18, #0x0
   10570:	str	w11, [sp, #48]
   10574:	cset	w11, ne  // ne = any
   10578:	cmp	w10, #0x0
   1057c:	cset	w10, ne  // ne = any
   10580:	str	w12, [sp, #68]
   10584:	str	w11, [sp, #36]
   10588:	str	w10, [sp, #20]
   1058c:	cbz	w17, 105e8 <xre_compile_pattern@@Base+0xe04>
   10590:	ldr	w10, [sp, #24]
   10594:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   10598:	ldr	w10, [sp, #52]
   1059c:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105a0:	ldr	w10, [sp, #68]
   105a4:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105a8:	ldr	w10, [sp, #28]
   105ac:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105b0:	ldr	w10, [sp, #48]
   105b4:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105b8:	ldr	w10, [sp, #20]
   105bc:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105c0:	ldr	w10, [sp, #64]
   105c4:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105c8:	ldr	w10, [sp, #60]
   105cc:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105d0:	ldr	w10, [sp, #40]
   105d4:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105d8:	ldr	w10, [sp, #44]
   105dc:	cbz	w10, 105e8 <xre_compile_pattern@@Base+0xe04>
   105e0:	ldr	w10, [sp, #36]
   105e4:	cbnz	w10, 12078 <xre_compile_pattern@@Base+0x2894>
   105e8:	ldur	x10, [x29, #-160]
   105ec:	cmp	x9, x10
   105f0:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   105f4:	ldr	x10, [sp, #80]
   105f8:	add	x9, x8, #0x2
   105fc:	str	x24, [sp, #8]
   10600:	str	x28, [sp, #160]
   10604:	cmp	x10, x8
   10608:	stur	x9, [x29, #-16]
   1060c:	b.eq	11fc4 <xre_compile_pattern@@Base+0x27e0>  // b.none
   10610:	ldp	w8, w9, [sp, #36]
   10614:	mov	x28, xzr
   10618:	cmp	w8, #0x0
   1061c:	cset	w8, eq  // eq = none
   10620:	cmp	w9, #0x0
   10624:	cset	w9, eq  // eq = none
   10628:	cmp	x5, #0x0
   1062c:	cset	w10, ne  // ne = any
   10630:	orr	w8, w9, w8
   10634:	and	w8, w10, w8
   10638:	str	w8, [sp, #56]
   1063c:	ldr	w8, [sp, #64]
   10640:	ubfx	x24, x28, #3, #29
   10644:	cbnz	w8, 10658 <xre_compile_pattern@@Base+0xe74>
   10648:	bl	56a0 <__ctype_b_loc@plt>
   1064c:	ldr	x8, [x0]
   10650:	ldrh	w8, [x8, x28, lsl #1]
   10654:	tbnz	w8, #3, 106a0 <xre_compile_pattern@@Base+0xebc>
   10658:	ldr	w8, [sp, #44]
   1065c:	cbnz	w8, 10670 <xre_compile_pattern@@Base+0xe8c>
   10660:	bl	56a0 <__ctype_b_loc@plt>
   10664:	ldr	x8, [x0]
   10668:	ldrh	w8, [x8, x28, lsl #1]
   1066c:	tbnz	w8, #10, 106a0 <xre_compile_pattern@@Base+0xebc>
   10670:	ldr	w8, [sp, #32]
   10674:	cbnz	w8, 10688 <xre_compile_pattern@@Base+0xea4>
   10678:	bl	56a0 <__ctype_b_loc@plt>
   1067c:	ldr	x8, [x0]
   10680:	ldrh	w8, [x8, x28, lsl #1]
   10684:	tbnz	w8, #0, 106a0 <xre_compile_pattern@@Base+0xebc>
   10688:	ldr	w8, [sp, #24]
   1068c:	cbnz	w8, 106b8 <xre_compile_pattern@@Base+0xed4>
   10690:	bl	56a0 <__ctype_b_loc@plt>
   10694:	ldr	x8, [x0]
   10698:	ldrh	w8, [x8, x28, lsl #1]
   1069c:	tbz	w8, #1, 106b8 <xre_compile_pattern@@Base+0xed4>
   106a0:	ldrb	w8, [x26, x24]
   106a4:	and	w9, w28, #0x7
   106a8:	mov	w10, #0x1                   	// #1
   106ac:	lsl	w9, w10, w9
   106b0:	orr	w8, w8, w9
   106b4:	strb	w8, [x26, x24]
   106b8:	ldr	w8, [sp, #60]
   106bc:	cbnz	w8, 106d0 <xre_compile_pattern@@Base+0xeec>
   106c0:	bl	56a0 <__ctype_b_loc@plt>
   106c4:	ldr	x8, [x0]
   106c8:	ldrh	w8, [x8, x28, lsl #1]
   106cc:	tbnz	w8, #11, 10718 <xre_compile_pattern@@Base+0xf34>
   106d0:	ldr	w8, [sp, #52]
   106d4:	cbnz	w8, 106e8 <xre_compile_pattern@@Base+0xf04>
   106d8:	bl	56a0 <__ctype_b_loc@plt>
   106dc:	ldr	x8, [x0]
   106e0:	ldrsh	w8, [x8, x28, lsl #1]
   106e4:	tbnz	w8, #31, 10718 <xre_compile_pattern@@Base+0xf34>
   106e8:	ldr	w8, [sp, #40]
   106ec:	cbnz	w8, 10700 <xre_compile_pattern@@Base+0xf1c>
   106f0:	bl	56a0 <__ctype_b_loc@plt>
   106f4:	ldr	x8, [x0]
   106f8:	ldrh	w8, [x8, x28, lsl #1]
   106fc:	tbnz	w8, #9, 10718 <xre_compile_pattern@@Base+0xf34>
   10700:	ldr	w8, [sp, #28]
   10704:	cbnz	w8, 10730 <xre_compile_pattern@@Base+0xf4c>
   10708:	bl	56a0 <__ctype_b_loc@plt>
   1070c:	ldr	x8, [x0]
   10710:	ldrh	w8, [x8, x28, lsl #1]
   10714:	tbz	w8, #14, 10730 <xre_compile_pattern@@Base+0xf4c>
   10718:	ldrb	w8, [x26, x24]
   1071c:	and	w9, w28, #0x7
   10720:	mov	w10, #0x1                   	// #1
   10724:	lsl	w9, w10, w9
   10728:	orr	w8, w8, w9
   1072c:	strb	w8, [x26, x24]
   10730:	ldr	w8, [sp, #68]
   10734:	cbnz	w8, 10748 <xre_compile_pattern@@Base+0xf64>
   10738:	bl	56a0 <__ctype_b_loc@plt>
   1073c:	ldr	x8, [x0]
   10740:	ldrh	w8, [x8, x28, lsl #1]
   10744:	tbnz	w8, #2, 10790 <xre_compile_pattern@@Base+0xfac>
   10748:	ldr	w8, [sp, #48]
   1074c:	cbnz	w8, 10760 <xre_compile_pattern@@Base+0xf7c>
   10750:	bl	56a0 <__ctype_b_loc@plt>
   10754:	ldr	x8, [x0]
   10758:	ldrh	w8, [x8, x28, lsl #1]
   1075c:	tbnz	w8, #13, 10790 <xre_compile_pattern@@Base+0xfac>
   10760:	ldr	w8, [sp, #36]
   10764:	cbnz	w8, 10778 <xre_compile_pattern@@Base+0xf94>
   10768:	bl	56a0 <__ctype_b_loc@plt>
   1076c:	ldr	x8, [x0]
   10770:	ldrh	w8, [x8, x28, lsl #1]
   10774:	tbnz	w8, #8, 10790 <xre_compile_pattern@@Base+0xfac>
   10778:	ldr	w8, [sp, #20]
   1077c:	cbnz	w8, 107a8 <xre_compile_pattern@@Base+0xfc4>
   10780:	bl	56a0 <__ctype_b_loc@plt>
   10784:	ldr	x8, [x0]
   10788:	ldrh	w8, [x8, x28, lsl #1]
   1078c:	tbz	w8, #12, 107a8 <xre_compile_pattern@@Base+0xfc4>
   10790:	ldrb	w8, [x26, x24]
   10794:	and	w9, w28, #0x7
   10798:	mov	w10, #0x1                   	// #1
   1079c:	lsl	w9, w10, w9
   107a0:	orr	w8, w8, w9
   107a4:	strb	w8, [x26, x24]
   107a8:	ldr	w8, [sp, #56]
   107ac:	cbz	w8, 107dc <xre_compile_pattern@@Base+0xff8>
   107b0:	bl	56a0 <__ctype_b_loc@plt>
   107b4:	ldr	x8, [x0]
   107b8:	ldrh	w8, [x8, x28, lsl #1]
   107bc:	tst	w8, #0x300
   107c0:	b.eq	107dc <xre_compile_pattern@@Base+0xff8>  // b.none
   107c4:	ldrb	w8, [x26, x24]
   107c8:	and	w9, w28, #0x7
   107cc:	mov	w10, #0x1                   	// #1
   107d0:	lsl	w9, w10, w9
   107d4:	orr	w8, w8, w9
   107d8:	strb	w8, [x26, x24]
   107dc:	add	x28, x28, #0x1
   107e0:	cmp	x28, #0x100
   107e4:	b.ne	1063c <xre_compile_pattern@@Base+0xe58>  // b.any
   107e8:	ldr	x28, [sp, #160]
   107ec:	ldr	x24, [sp, #8]
   107f0:	mov	w13, #0x1                   	// #1
   107f4:	b	10950 <xre_compile_pattern@@Base+0x116c>
   107f8:	sub	x8, x8, x10
   107fc:	stur	x8, [x29, #-16]
   10800:	ldrb	w8, [x25, #12]
   10804:	ldrb	w9, [x25, #8]
   10808:	mov	w13, wzr
   1080c:	mov	w27, #0x3a                  	// #58
   10810:	orr	w8, w8, #0x8
   10814:	orr	w9, w9, #0x4
   10818:	strb	w8, [x25, #12]
   1081c:	strb	w9, [x25, #8]
   10820:	b	10950 <xre_compile_pattern@@Base+0x116c>
   10824:	and	x11, x10, #0xff
   10828:	sub	x12, x29, #0x90
   1082c:	strb	wzr, [x12, x11]
   10830:	mov	x11, x8
   10834:	ldrb	w12, [x11]
   10838:	cmp	w12, #0x5d
   1083c:	b.ne	10888 <xre_compile_pattern@@Base+0x10a4>  // b.any
   10840:	ldurb	w12, [x29, #-144]
   10844:	cbz	w12, 10888 <xre_compile_pattern@@Base+0x10a4>
   10848:	cmp	w10, #0x1
   1084c:	b.ne	12068 <xre_compile_pattern@@Base+0x2884>  // b.any
   10850:	ldur	x9, [x29, #-160]
   10854:	cmp	x11, x9
   10858:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   1085c:	add	x8, x8, #0x1
   10860:	stur	x8, [x29, #-16]
   10864:	lsr	x8, x12, #3
   10868:	ldrb	w9, [x26, x8]
   1086c:	and	w10, w12, #0x7
   10870:	mov	w11, #0x1                   	// #1
   10874:	lsl	w10, w11, w10
   10878:	orr	w9, w9, w10
   1087c:	strb	w9, [x26, x8]
   10880:	ldurb	w0, [x29, #-144]
   10884:	b	108b8 <xre_compile_pattern@@Base+0x10d4>
   10888:	cmn	w10, #0x1
   1088c:	b.eq	1089c <xre_compile_pattern@@Base+0x10b8>  // b.none
   10890:	mvn	x9, x9
   10894:	add	x8, x9, x8
   10898:	stur	x8, [x29, #-16]
   1089c:	ldrb	w8, [x25, #12]
   108a0:	ldrb	w9, [x25, #6]
   108a4:	mov	w0, #0x2e                  	// #46
   108a8:	orr	w8, w8, #0x8
   108ac:	orr	w9, w9, #0x40
   108b0:	strb	w8, [x25, #12]
   108b4:	strb	w9, [x25, #6]
   108b8:	mov	w13, wzr
   108bc:	b	10954 <xre_compile_pattern@@Base+0x1170>
   108c0:	and	x10, x9, #0xff
   108c4:	sub	x11, x29, #0x90
   108c8:	strb	wzr, [x11, x10]
   108cc:	mov	x10, x8
   108d0:	ldrb	w11, [x10]
   108d4:	cmp	w11, #0x5d
   108d8:	b.ne	10920 <xre_compile_pattern@@Base+0x113c>  // b.any
   108dc:	ldurb	w11, [x29, #-144]
   108e0:	cbz	w11, 10920 <xre_compile_pattern@@Base+0x113c>
   108e4:	and	w9, w9, #0xff
   108e8:	cmp	w9, #0x1
   108ec:	b.ne	12068 <xre_compile_pattern@@Base+0x2884>  // b.any
   108f0:	ldur	x9, [x29, #-160]
   108f4:	cmp	x10, x9
   108f8:	b.eq	12030 <xre_compile_pattern@@Base+0x284c>  // b.none
   108fc:	add	x8, x8, #0x1
   10900:	stur	x8, [x29, #-16]
   10904:	add	x9, x26, x11, lsr #3
   10908:	ldrb	w8, [x9]
   1090c:	and	w10, w11, #0x7
   10910:	mov	w13, #0x1                   	// #1
   10914:	lsl	w10, w13, w10
   10918:	orr	w8, w8, w10
   1091c:	b	1094c <xre_compile_pattern@@Base+0x1168>
   10920:	mvn	x9, x9
   10924:	add	x8, x9, x8
   10928:	stur	x8, [x29, #-16]
   1092c:	ldrb	w8, [x25, #12]
   10930:	ldrb	w9, [x25, #8]
   10934:	mov	w13, wzr
   10938:	mov	w27, #0x3d                  	// #61
   1093c:	orr	w10, w8, #0x8
   10940:	orr	w8, w9, #0x20
   10944:	mov	x9, x24
   10948:	strb	w10, [x25, #12]
   1094c:	strb	w8, [x9]
   10950:	mov	w0, w27
   10954:	ldur	x8, [x29, #-16]
   10958:	ldur	x9, [x29, #-160]
   1095c:	cmp	x8, x9
   10960:	b.ne	10038 <xre_compile_pattern@@Base+0x854>  // b.any
   10964:	b	11fc4 <xre_compile_pattern@@Base+0x27e0>
   10968:	ldur	x27, [x29, #-168]
   1096c:	tbnz	w28, #3, 10cb0 <xre_compile_pattern@@Base+0x14cc>
   10970:	cmp	x8, x26
   10974:	b.eq	10cb0 <xre_compile_pattern@@Base+0x14cc>  // b.none
   10978:	sub	x9, x8, #0x1
   1097c:	cmp	x9, x26
   10980:	b.ls	10c84 <xre_compile_pattern@@Base+0x14a0>  // b.plast
   10984:	ldurb	w8, [x8, #-2]
   10988:	cmp	w8, #0x5c
   1098c:	cset	w8, eq  // eq = none
   10990:	b	10c88 <xre_compile_pattern@@Base+0x14a4>
   10994:	ldr	x9, [sp, #128]
   10998:	mov	w8, #0x1200                	// #4608
   1099c:	cmp	x9, x8
   109a0:	b.ne	10acc <xre_compile_pattern@@Base+0x12e8>  // b.any
   109a4:	ldur	x26, [x29, #-160]
   109a8:	str	x28, [sp, #160]
   109ac:	cmp	x27, x26
   109b0:	b.eq	11920 <xre_compile_pattern@@Base+0x213c>  // b.none
   109b4:	ldur	x26, [x29, #-160]
   109b8:	mov	w24, #0xffffffff            	// #-1
   109bc:	mov	x10, x27
   109c0:	mov	w12, #0xa                   	// #10
   109c4:	add	x9, x10, #0x1
   109c8:	stur	x9, [x29, #-16]
   109cc:	ldrb	w8, [x10]
   109d0:	ldur	x11, [x29, #-152]
   109d4:	cbz	x11, 109dc <xre_compile_pattern@@Base+0x11f8>
   109d8:	ldrb	w8, [x11, x8]
   109dc:	sub	w11, w8, #0x30
   109e0:	cmp	w11, #0x9
   109e4:	b.hi	10f60 <xre_compile_pattern@@Base+0x177c>  // b.pmore
   109e8:	cmp	w24, #0x8, lsl #12
   109ec:	b.ge	109fc <xre_compile_pattern@@Base+0x1218>  // b.tcont
   109f0:	bic	w10, w24, w24, asr #31
   109f4:	madd	w10, w10, w12, w8
   109f8:	sub	w24, w10, #0x30
   109fc:	cmp	x26, x9
   10a00:	mov	x10, x9
   10a04:	b.ne	109c4 <xre_compile_pattern@@Base+0x11e0>  // b.any
   10a08:	mov	x9, x26
   10a0c:	b	10fd0 <xre_compile_pattern@@Base+0x17ec>
   10a10:	ldur	x24, [x29, #-152]
   10a14:	mov	x27, x9
   10a18:	cbz	x23, 10adc <xre_compile_pattern@@Base+0x12f8>
   10a1c:	cbz	w8, 10ae8 <xre_compile_pattern@@Base+0x1304>
   10a20:	ldp	x26, x8, [x20]
   10a24:	sub	x9, x25, x26
   10a28:	add	x9, x9, #0x3
   10a2c:	cmp	x9, x8
   10a30:	b.ls	10aa8 <xre_compile_pattern@@Base+0x12c4>  // b.plast
   10a34:	cmp	x8, #0x10, lsl #12
   10a38:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   10a3c:	lsl	x8, x8, #1
   10a40:	cmp	x8, #0x10, lsl #12
   10a44:	mov	w9, #0x10000               	// #65536
   10a48:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   10a4c:	mov	x0, x26
   10a50:	str	x1, [x20, #8]
   10a54:	bl	5550 <realloc@plt>
   10a58:	str	x0, [x20]
   10a5c:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   10a60:	cmp	x26, x0
   10a64:	b.eq	10a8c <xre_compile_pattern@@Base+0x12a8>  // b.none
   10a68:	sub	x8, x0, x26
   10a6c:	cmp	x19, #0x0
   10a70:	add	x9, x19, x8
   10a74:	add	x25, x25, x8
   10a78:	add	x22, x22, x8
   10a7c:	add	x8, x23, x8
   10a80:	csel	x19, xzr, x9, eq  // eq = none
   10a84:	cmp	x23, #0x0
   10a88:	csel	x23, xzr, x8, eq  // eq = none
   10a8c:	ldur	x8, [x29, #-168]
   10a90:	sub	x9, x25, x0
   10a94:	add	x9, x9, #0x3
   10a98:	mov	x26, x0
   10a9c:	ldr	x8, [x8]
   10aa0:	cmp	x9, x8
   10aa4:	b.hi	10a34 <xre_compile_pattern@@Base+0x1250>  // b.pmore
   10aa8:	ldurb	w8, [x27, #-2]
   10aac:	ldur	x10, [x29, #-160]
   10ab0:	cbz	x24, 11048 <xre_compile_pattern@@Base+0x1864>
   10ab4:	ldrb	w8, [x24, x8]
   10ab8:	ldrb	w9, [x24, #46]
   10abc:	b	1104c <xre_compile_pattern@@Base+0x1868>
   10ac0:	ldur	x27, [x29, #-168]
   10ac4:	mov	w8, #0x3                   	// #3
   10ac8:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   10acc:	mov	w24, #0x7b                  	// #123
   10ad0:	b	11944 <xre_compile_pattern@@Base+0x2160>
   10ad4:	stur	x27, [x29, #-16]
   10ad8:	cbnz	x23, 10a1c <xre_compile_pattern@@Base+0x1238>
   10adc:	ldr	x28, [sp, #160]
   10ae0:	ldur	x27, [x29, #-168]
   10ae4:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   10ae8:	mov	w21, wzr
   10aec:	b	111a4 <xre_compile_pattern@@Base+0x19c0>
   10af0:	cmp	w24, #0x76
   10af4:	b.gt	11020 <xre_compile_pattern@@Base+0x183c>
   10af8:	ldur	x27, [x29, #-168]
   10afc:	cmp	w24, #0x57
   10b00:	b.eq	1171c <xre_compile_pattern@@Base+0x1f38>  // b.none
   10b04:	cmp	w24, #0x60
   10b08:	b.eq	117bc <xre_compile_pattern@@Base+0x1fd8>  // b.none
   10b0c:	cmp	w24, #0x62
   10b10:	b.ne	11938 <xre_compile_pattern@@Base+0x2154>  // b.any
   10b14:	tbnz	w28, #19, 11b54 <xre_compile_pattern@@Base+0x2370>
   10b18:	ldp	x26, x8, [x20]
   10b1c:	sub	x9, x25, x26
   10b20:	add	x9, x9, #0x1
   10b24:	cmp	x9, x8
   10b28:	b.ls	11e10 <xre_compile_pattern@@Base+0x262c>  // b.plast
   10b2c:	ldur	x27, [x29, #-168]
   10b30:	cmp	x8, #0x10, lsl #12
   10b34:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   10b38:	lsl	x8, x8, #1
   10b3c:	cmp	x8, #0x10, lsl #12
   10b40:	mov	w9, #0x10000               	// #65536
   10b44:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   10b48:	mov	x0, x26
   10b4c:	str	x1, [x20, #8]
   10b50:	bl	5550 <realloc@plt>
   10b54:	str	x0, [x20]
   10b58:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   10b5c:	cmp	x26, x0
   10b60:	b.eq	10b94 <xre_compile_pattern@@Base+0x13b0>  // b.none
   10b64:	sub	x8, x0, x26
   10b68:	cmp	x19, #0x0
   10b6c:	add	x9, x19, x8
   10b70:	add	x10, x23, x8
   10b74:	csel	x19, xzr, x9, eq  // eq = none
   10b78:	cmp	x23, #0x0
   10b7c:	add	x25, x25, x8
   10b80:	add	x22, x22, x8
   10b84:	add	x8, x21, x8
   10b88:	csel	x23, xzr, x10, eq  // eq = none
   10b8c:	cmp	x21, #0x0
   10b90:	csel	x21, xzr, x8, eq  // eq = none
   10b94:	ldr	x8, [x27]
   10b98:	sub	x9, x25, x0
   10b9c:	add	x9, x9, #0x1
   10ba0:	mov	x26, x0
   10ba4:	cmp	x9, x8
   10ba8:	b.hi	10b30 <xre_compile_pattern@@Base+0x134c>  // b.pmore
   10bac:	b	11e14 <xre_compile_pattern@@Base+0x2630>
   10bb0:	cmp	w9, #0x29
   10bb4:	b.eq	10bdc <xre_compile_pattern@@Base+0x13f8>  // b.none
   10bb8:	tbnz	w28, #15, 10bd4 <xre_compile_pattern@@Base+0x13f0>
   10bbc:	cmp	x10, x12
   10bc0:	mov	w24, #0x24                  	// #36
   10bc4:	b.cs	11944 <xre_compile_pattern@@Base+0x2160>  // b.hs, b.nlast
   10bc8:	cmp	w9, #0x5c
   10bcc:	b.ne	11944 <xre_compile_pattern@@Base+0x2160>  // b.any
   10bd0:	ldrb	w9, [x8]
   10bd4:	cmp	w9, #0x7c
   10bd8:	b.ne	1107c <xre_compile_pattern@@Base+0x1898>  // b.any
   10bdc:	ldp	x26, x8, [x20]
   10be0:	sub	x9, x25, x26
   10be4:	add	x9, x9, #0x1
   10be8:	cmp	x9, x8
   10bec:	b.ls	10c74 <xre_compile_pattern@@Base+0x1490>  // b.plast
   10bf0:	ldur	x27, [x29, #-168]
   10bf4:	cmp	x8, #0x10, lsl #12
   10bf8:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   10bfc:	lsl	x8, x8, #1
   10c00:	cmp	x8, #0x10, lsl #12
   10c04:	mov	w9, #0x10000               	// #65536
   10c08:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   10c0c:	mov	x0, x26
   10c10:	str	x1, [x20, #8]
   10c14:	bl	5550 <realloc@plt>
   10c18:	str	x0, [x20]
   10c1c:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   10c20:	cmp	x26, x0
   10c24:	b.eq	10c58 <xre_compile_pattern@@Base+0x1474>  // b.none
   10c28:	sub	x8, x0, x26
   10c2c:	cmp	x19, #0x0
   10c30:	add	x9, x19, x8
   10c34:	add	x10, x23, x8
   10c38:	csel	x19, xzr, x9, eq  // eq = none
   10c3c:	cmp	x23, #0x0
   10c40:	add	x25, x25, x8
   10c44:	add	x22, x22, x8
   10c48:	add	x8, x21, x8
   10c4c:	csel	x23, xzr, x10, eq  // eq = none
   10c50:	cmp	x21, #0x0
   10c54:	csel	x21, xzr, x8, eq  // eq = none
   10c58:	ldr	x8, [x27]
   10c5c:	sub	x9, x25, x0
   10c60:	add	x9, x9, #0x1
   10c64:	mov	x26, x0
   10c68:	cmp	x9, x8
   10c6c:	b.hi	10bf4 <xre_compile_pattern@@Base+0x1410>  // b.pmore
   10c70:	b	10c78 <xre_compile_pattern@@Base+0x1494>
   10c74:	ldur	x27, [x29, #-168]
   10c78:	mov	w8, #0xa                   	// #10
   10c7c:	strb	w8, [x25], #1
   10c80:	b	11ab4 <xre_compile_pattern@@Base+0x22d0>
   10c84:	mov	w8, wzr
   10c88:	ldrb	w10, [x9]
   10c8c:	ldr	x9, [sp, #120]
   10c90:	cmp	w10, #0x28
   10c94:	b.eq	10ca4 <xre_compile_pattern@@Base+0x14c0>  // b.none
   10c98:	cmp	w10, #0x7c
   10c9c:	b.ne	10d4c <xre_compile_pattern@@Base+0x1568>  // b.any
   10ca0:	ldr	x9, [sp, #104]
   10ca4:	and	w9, w9, #0x1
   10ca8:	orr	w8, w9, w8
   10cac:	cbz	w8, 10d4c <xre_compile_pattern@@Base+0x1568>
   10cb0:	ldp	x26, x8, [x20]
   10cb4:	sub	x9, x25, x26
   10cb8:	add	x9, x9, #0x1
   10cbc:	cmp	x9, x8
   10cc0:	b.ls	10d40 <xre_compile_pattern@@Base+0x155c>  // b.plast
   10cc4:	cmp	x8, #0x10, lsl #12
   10cc8:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   10ccc:	lsl	x8, x8, #1
   10cd0:	cmp	x8, #0x10, lsl #12
   10cd4:	mov	w9, #0x10000               	// #65536
   10cd8:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   10cdc:	mov	x0, x26
   10ce0:	str	x1, [x20, #8]
   10ce4:	bl	5550 <realloc@plt>
   10ce8:	str	x0, [x20]
   10cec:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   10cf0:	cmp	x26, x0
   10cf4:	b.eq	10d28 <xre_compile_pattern@@Base+0x1544>  // b.none
   10cf8:	sub	x8, x0, x26
   10cfc:	cmp	x19, #0x0
   10d00:	add	x9, x19, x8
   10d04:	add	x10, x23, x8
   10d08:	csel	x19, xzr, x9, eq  // eq = none
   10d0c:	cmp	x23, #0x0
   10d10:	add	x25, x25, x8
   10d14:	add	x22, x22, x8
   10d18:	add	x8, x21, x8
   10d1c:	csel	x23, xzr, x10, eq  // eq = none
   10d20:	cmp	x21, #0x0
   10d24:	csel	x21, xzr, x8, eq  // eq = none
   10d28:	ldr	x8, [x27]
   10d2c:	sub	x9, x25, x0
   10d30:	add	x9, x9, #0x1
   10d34:	mov	x26, x0
   10d38:	cmp	x9, x8
   10d3c:	b.hi	10cc4 <xre_compile_pattern@@Base+0x14e0>  // b.pmore
   10d40:	mov	w8, #0x9                   	// #9
   10d44:	strb	w8, [x25], #1
   10d48:	b	11ab4 <xre_compile_pattern@@Base+0x22d0>
   10d4c:	mov	w24, #0x5e                  	// #94
   10d50:	b	11944 <xre_compile_pattern@@Base+0x2160>
   10d54:	ldur	x27, [x29, #-168]
   10d58:	sub	w8, w25, w22
   10d5c:	cmp	x25, x22
   10d60:	add	w8, w8, #0x3
   10d64:	b.eq	10d7c <xre_compile_pattern@@Base+0x1598>  // b.none
   10d68:	mov	x9, x25
   10d6c:	ldrb	w10, [x9, #-1]!
   10d70:	cmp	x22, x9
   10d74:	strb	w10, [x9, #3]
   10d78:	b.ne	10d6c <xre_compile_pattern@@Base+0x1588>  // b.any
   10d7c:	ldr	x26, [sp, #176]
   10d80:	mov	w9, #0xf                   	// #15
   10d84:	strb	w8, [x22, #1]
   10d88:	lsr	w8, w8, #8
   10d8c:	strb	w9, [x22]
   10d90:	strb	w8, [x22, #2]
   10d94:	add	x22, x25, #0x3
   10d98:	cbz	x19, 10db8 <xre_compile_pattern@@Base+0x15d4>
   10d9c:	sub	w8, w22, w19
   10da0:	sub	w8, w8, #0x3
   10da4:	mov	w9, #0xe                   	// #14
   10da8:	strb	w8, [x19, #1]
   10dac:	lsr	w8, w8, #8
   10db0:	strb	w9, [x19]
   10db4:	strb	w8, [x19, #2]
   10db8:	ldp	x25, x8, [x20]
   10dbc:	mov	x19, x22
   10dc0:	sub	x9, x22, x25
   10dc4:	add	x9, x9, #0x3
   10dc8:	cmp	x9, x8
   10dcc:	b.ls	10e34 <xre_compile_pattern@@Base+0x1650>  // b.plast
   10dd0:	cmp	x8, #0x10, lsl #12
   10dd4:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   10dd8:	lsl	x8, x8, #1
   10ddc:	cmp	x8, #0x10, lsl #12
   10de0:	mov	w9, #0x10000               	// #65536
   10de4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   10de8:	mov	x0, x25
   10dec:	str	x1, [x20, #8]
   10df0:	bl	5550 <realloc@plt>
   10df4:	str	x0, [x20]
   10df8:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   10dfc:	sub	x9, x0, x25
   10e00:	cmp	x19, #0x0
   10e04:	add	x10, x22, x9
   10e08:	add	x9, x19, x9
   10e0c:	ldr	x8, [x27]
   10e10:	csel	x9, xzr, x9, eq  // eq = none
   10e14:	cmp	x25, x0
   10e18:	csel	x22, x22, x10, eq  // eq = none
   10e1c:	csel	x19, x19, x9, eq  // eq = none
   10e20:	sub	x9, x22, x0
   10e24:	add	x9, x9, #0x3
   10e28:	cmp	x9, x8
   10e2c:	mov	x25, x0
   10e30:	b.hi	10dd0 <xre_compile_pattern@@Base+0x15ec>  // b.pmore
   10e34:	add	x22, x22, #0x3
   10e38:	mov	x23, xzr
   10e3c:	mov	x21, xzr
   10e40:	mov	x25, x22
   10e44:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   10e48:	ldur	x27, [x29, #-168]
   10e4c:	ldr	x10, [sp, #152]
   10e50:	lsr	x8, x10, #32
   10e54:	cbz	x8, 11014 <xre_compile_pattern@@Base+0x1830>
   10e58:	ldr	x14, [sp, #168]
   10e5c:	mov	w9, #0xffffffff            	// #-1
   10e60:	add	x9, x8, x9
   10e64:	bfi	x10, x9, #32, #32
   10e68:	and	x9, x9, #0xffffffff
   10e6c:	mov	w15, #0x28                  	// #40
   10e70:	str	x10, [sp, #152]
   10e74:	madd	x10, x9, x15, x14
   10e78:	ldr	x8, [x20]
   10e7c:	ldp	x11, x12, [x10]
   10e80:	ldr	x13, [x10, #24]
   10e84:	ldr	w24, [x10, #32]
   10e88:	add	x10, x8, x12
   10e8c:	cmp	x12, #0x0
   10e90:	sub	x10, x10, #0x1
   10e94:	add	x22, x8, x11
   10e98:	csel	x19, xzr, x10, eq  // eq = none
   10e9c:	cmp	w24, #0xff
   10ea0:	add	x23, x8, x13
   10ea4:	b.hi	11074 <xre_compile_pattern@@Base+0x1890>  // b.pmore
   10ea8:	madd	x9, x9, x15, x14
   10eac:	ldr	w10, [sp, #140]
   10eb0:	ldr	x9, [x9, #16]
   10eb4:	sub	w27, w10, w24
   10eb8:	strb	w27, [x8, x9]
   10ebc:	ldp	x26, x8, [x20]
   10ec0:	sub	x9, x25, x26
   10ec4:	add	x9, x9, #0x3
   10ec8:	cmp	x9, x8
   10ecc:	b.ls	10f44 <xre_compile_pattern@@Base+0x1760>  // b.plast
   10ed0:	cmp	x8, #0x10, lsl #12
   10ed4:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   10ed8:	lsl	x8, x8, #1
   10edc:	cmp	x8, #0x10, lsl #12
   10ee0:	mov	w9, #0x10000               	// #65536
   10ee4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   10ee8:	mov	x0, x26
   10eec:	str	x1, [x20, #8]
   10ef0:	bl	5550 <realloc@plt>
   10ef4:	str	x0, [x20]
   10ef8:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   10efc:	cmp	x26, x0
   10f00:	b.eq	10f28 <xre_compile_pattern@@Base+0x1744>  // b.none
   10f04:	sub	x8, x0, x26
   10f08:	cmp	x19, #0x0
   10f0c:	add	x9, x19, x8
   10f10:	add	x25, x25, x8
   10f14:	add	x22, x22, x8
   10f18:	add	x8, x23, x8
   10f1c:	csel	x19, xzr, x9, eq  // eq = none
   10f20:	cmp	x23, #0x0
   10f24:	csel	x23, xzr, x8, eq  // eq = none
   10f28:	ldur	x8, [x29, #-168]
   10f2c:	sub	x9, x25, x0
   10f30:	add	x9, x9, #0x3
   10f34:	mov	x26, x0
   10f38:	ldr	x8, [x8]
   10f3c:	cmp	x9, x8
   10f40:	b.hi	10ed0 <xre_compile_pattern@@Base+0x16ec>  // b.pmore
   10f44:	mov	w8, #0x7                   	// #7
   10f48:	mov	x21, xzr
   10f4c:	strb	w8, [x25]
   10f50:	strb	w24, [x25, #1]
   10f54:	add	x8, x25, #0x3
   10f58:	strb	w27, [x25, #2]
   10f5c:	b	1112c <xre_compile_pattern@@Base+0x1948>
   10f60:	cmp	w8, #0x2c
   10f64:	add	x9, x10, #0x1
   10f68:	b.ne	10fd0 <xre_compile_pattern@@Base+0x17ec>  // b.any
   10f6c:	ldr	x8, [sp, #112]
   10f70:	cmp	x8, x10
   10f74:	b.eq	1190c <xre_compile_pattern@@Base+0x2128>  // b.none
   10f78:	mov	w28, #0xffffffff            	// #-1
   10f7c:	mov	x10, x9
   10f80:	add	x9, x9, #0x1
   10f84:	stur	x9, [x29, #-16]
   10f88:	ldrb	w8, [x10]
   10f8c:	ldur	x11, [x29, #-152]
   10f90:	cbz	x11, 10f98 <xre_compile_pattern@@Base+0x17b4>
   10f94:	ldrb	w8, [x11, x8]
   10f98:	sub	w11, w8, #0x30
   10f9c:	cmp	w11, #0x9
   10fa0:	b.hi	10fc4 <xre_compile_pattern@@Base+0x17e0>  // b.pmore
   10fa4:	cmp	w28, #0x8, lsl #12
   10fa8:	b.ge	10fbc <xre_compile_pattern@@Base+0x17d8>  // b.tcont
   10fac:	bic	w11, w28, w28, asr #31
   10fb0:	mov	w12, #0xa                   	// #10
   10fb4:	madd	w11, w11, w12, w8
   10fb8:	sub	w28, w11, #0x30
   10fbc:	cmp	x26, x9
   10fc0:	b.ne	10f7c <xre_compile_pattern@@Base+0x1798>  // b.any
   10fc4:	add	x9, x10, #0x1
   10fc8:	tbz	w28, #31, 10fd4 <xre_compile_pattern@@Base+0x17f0>
   10fcc:	b	11914 <xre_compile_pattern@@Base+0x2130>
   10fd0:	mov	w28, w24
   10fd4:	tbnz	w24, #31, 1191c <xre_compile_pattern@@Base+0x2138>
   10fd8:	cmp	w24, w28
   10fdc:	b.gt	1191c <xre_compile_pattern@@Base+0x2138>
   10fe0:	ldr	x10, [sp, #160]
   10fe4:	tbnz	w10, #12, 11138 <xre_compile_pattern@@Base+0x1954>
   10fe8:	cmp	w8, #0x5c
   10fec:	b.ne	1191c <xre_compile_pattern@@Base+0x2138>  // b.any
   10ff0:	cmp	x9, x26
   10ff4:	b.eq	11920 <xre_compile_pattern@@Base+0x213c>  // b.none
   10ff8:	add	x26, x9, #0x1
   10ffc:	stur	x26, [x29, #-16]
   11000:	ldrb	w8, [x9]
   11004:	ldur	x9, [x29, #-152]
   11008:	cbz	x9, 1113c <xre_compile_pattern@@Base+0x1958>
   1100c:	ldrb	w8, [x9, x8]
   11010:	b	1113c <xre_compile_pattern@@Base+0x1958>
   11014:	tbz	w28, #17, 12020 <xre_compile_pattern@@Base+0x283c>
   11018:	mov	w24, #0x29                  	// #41
   1101c:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11020:	cmp	w24, #0x77
   11024:	b.eq	11858 <xre_compile_pattern@@Base+0x2074>  // b.none
   11028:	cmp	w24, #0x7b
   1102c:	b.eq	118f8 <xre_compile_pattern@@Base+0x2114>  // b.none
   11030:	cmp	w24, #0x7c
   11034:	b.ne	11938 <xre_compile_pattern@@Base+0x2154>  // b.any
   11038:	ldr	x8, [sp, #96]
   1103c:	mov	w24, #0x7c                  	// #124
   11040:	cbnz	x8, 11938 <xre_compile_pattern@@Base+0x2154>
   11044:	b	fc00 <xre_compile_pattern@@Base+0x41c>
   11048:	mov	w9, #0x2e                  	// #46
   1104c:	cmp	x27, x10
   11050:	b.cs	1117c <xre_compile_pattern@@Base+0x1998>  // b.hs, b.nlast
   11054:	cbz	w28, 1117c <xre_compile_pattern@@Base+0x1998>
   11058:	cmp	w9, w8
   1105c:	b.ne	1117c <xre_compile_pattern@@Base+0x1998>  // b.any
   11060:	ldrb	w8, [x27]
   11064:	cbz	x24, 11158 <xre_compile_pattern@@Base+0x1974>
   11068:	ldrb	w8, [x24, x8]
   1106c:	ldrb	w9, [x24, #10]
   11070:	b	1115c <xre_compile_pattern@@Base+0x1978>
   11074:	mov	x21, xzr
   11078:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   1107c:	mov	w24, #0x24                  	// #36
   11080:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11084:	ldp	x26, x8, [x20]
   11088:	mov	x23, x25
   1108c:	sub	x9, x25, x26
   11090:	add	x9, x9, #0x2
   11094:	cmp	x9, x8
   11098:	b.ls	1111c <xre_compile_pattern@@Base+0x1938>  // b.plast
   1109c:	cmp	x8, #0x10, lsl #12
   110a0:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   110a4:	lsl	x8, x8, #1
   110a8:	cmp	x8, #0x10, lsl #12
   110ac:	mov	w9, #0x10000               	// #65536
   110b0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   110b4:	mov	x0, x26
   110b8:	str	x1, [x20, #8]
   110bc:	bl	5550 <realloc@plt>
   110c0:	str	x0, [x20]
   110c4:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   110c8:	cmp	x26, x0
   110cc:	b.eq	11100 <xre_compile_pattern@@Base+0x191c>  // b.none
   110d0:	sub	x8, x0, x26
   110d4:	cmp	x19, #0x0
   110d8:	add	x9, x19, x8
   110dc:	add	x10, x23, x8
   110e0:	csel	x19, xzr, x9, eq  // eq = none
   110e4:	cmp	x23, #0x0
   110e8:	add	x25, x25, x8
   110ec:	add	x22, x22, x8
   110f0:	add	x8, x21, x8
   110f4:	csel	x23, xzr, x10, eq  // eq = none
   110f8:	cmp	x21, #0x0
   110fc:	csel	x21, xzr, x8, eq  // eq = none
   11100:	ldur	x8, [x29, #-168]
   11104:	sub	x9, x25, x0
   11108:	add	x9, x9, #0x2
   1110c:	mov	x26, x0
   11110:	ldr	x8, [x8]
   11114:	cmp	x9, x8
   11118:	b.hi	1109c <xre_compile_pattern@@Base+0x18b8>  // b.pmore
   1111c:	mov	w8, #0x8                   	// #8
   11120:	strb	w8, [x25]
   11124:	add	x8, x25, #0x2
   11128:	strb	w27, [x25, #1]
   1112c:	mov	x25, x8
   11130:	ldur	x27, [x29, #-168]
   11134:	b	11ab4 <xre_compile_pattern@@Base+0x22d0>
   11138:	mov	x26, x9
   1113c:	cmp	w8, #0x7d
   11140:	b.ne	11920 <xre_compile_pattern@@Base+0x213c>  // b.any
   11144:	cbz	x23, 11b74 <xre_compile_pattern@@Base+0x2390>
   11148:	mov	x0, x23
   1114c:	b	11b8c <xre_compile_pattern@@Base+0x23a8>
   11150:	tbnz	w28, #1, fb20 <xre_compile_pattern@@Base+0x33c>
   11154:	b	11938 <xre_compile_pattern@@Base+0x2154>
   11158:	mov	w9, #0xa                   	// #10
   1115c:	ldr	x10, [sp, #160]
   11160:	tbnz	w10, #6, 1117c <xre_compile_pattern@@Base+0x1998>
   11164:	cmp	w9, w8
   11168:	b.ne	1117c <xre_compile_pattern@@Base+0x1998>  // b.any
   1116c:	mov	w21, #0x1                   	// #1
   11170:	mov	w8, #0xd                   	// #13
   11174:	mov	x9, x23
   11178:	b	11188 <xre_compile_pattern@@Base+0x19a4>
   1117c:	mov	w21, wzr
   11180:	sub	x9, x23, #0x3
   11184:	mov	w8, #0x12                  	// #18
   11188:	sub	w9, w9, w25
   1118c:	strb	w8, [x25]
   11190:	sub	w8, w9, #0x3
   11194:	strb	w8, [x25, #1]
   11198:	lsr	w8, w8, #8
   1119c:	strb	w8, [x25, #2]
   111a0:	add	x25, x25, #0x3
   111a4:	ldp	x26, x8, [x20]
   111a8:	ldur	x27, [x29, #-168]
   111ac:	sub	x9, x25, x26
   111b0:	add	x9, x9, #0x3
   111b4:	cmp	x9, x8
   111b8:	b.ls	1122c <xre_compile_pattern@@Base+0x1a48>  // b.plast
   111bc:	cmp	x8, #0x10, lsl #12
   111c0:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   111c4:	lsl	x8, x8, #1
   111c8:	cmp	x8, #0x10, lsl #12
   111cc:	mov	w9, #0x10000               	// #65536
   111d0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   111d4:	mov	x0, x26
   111d8:	str	x1, [x20, #8]
   111dc:	bl	5550 <realloc@plt>
   111e0:	str	x0, [x20]
   111e4:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   111e8:	cmp	x26, x0
   111ec:	b.eq	11214 <xre_compile_pattern@@Base+0x1a30>  // b.none
   111f0:	sub	x8, x0, x26
   111f4:	cmp	x19, #0x0
   111f8:	add	x9, x19, x8
   111fc:	add	x25, x25, x8
   11200:	add	x22, x22, x8
   11204:	add	x8, x23, x8
   11208:	csel	x19, xzr, x9, eq  // eq = none
   1120c:	cmp	x23, #0x0
   11210:	csel	x23, xzr, x8, eq  // eq = none
   11214:	ldr	x8, [x27]
   11218:	sub	x9, x25, x0
   1121c:	add	x9, x9, #0x3
   11220:	mov	x26, x0
   11224:	cmp	x9, x8
   11228:	b.hi	111bc <xre_compile_pattern@@Base+0x19d8>  // b.pmore
   1122c:	add	x24, x25, #0x3
   11230:	cmp	w21, #0x0
   11234:	mov	w8, #0xf                   	// #15
   11238:	sub	w9, w24, w23
   1123c:	cinc	w8, w8, ne  // ne = any
   11240:	cmp	x25, x23
   11244:	sub	w9, w9, #0x3
   11248:	b.eq	1125c <xre_compile_pattern@@Base+0x1a78>  // b.none
   1124c:	ldrb	w10, [x25, #-1]!
   11250:	cmp	x23, x25
   11254:	strb	w10, [x25, #3]
   11258:	b.ne	1124c <xre_compile_pattern@@Base+0x1a68>  // b.any
   1125c:	ldr	x26, [sp, #176]
   11260:	strb	w8, [x23]
   11264:	lsr	w8, w9, #8
   11268:	strb	w9, [x23, #1]
   1126c:	strb	w8, [x23, #2]
   11270:	cbz	w28, 11284 <xre_compile_pattern@@Base+0x1aa0>
   11274:	ldr	x28, [sp, #160]
   11278:	mov	x21, xzr
   1127c:	mov	x25, x24
   11280:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   11284:	ldp	x25, x8, [x20]
   11288:	sub	x9, x24, x25
   1128c:	add	x9, x9, #0x3
   11290:	cmp	x9, x8
   11294:	b.ls	11310 <xre_compile_pattern@@Base+0x1b2c>  // b.plast
   11298:	ldr	x28, [sp, #160]
   1129c:	cmp	x8, #0x10, lsl #12
   112a0:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   112a4:	lsl	x8, x8, #1
   112a8:	cmp	x8, #0x10, lsl #12
   112ac:	mov	w9, #0x10000               	// #65536
   112b0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   112b4:	mov	x0, x25
   112b8:	str	x1, [x20, #8]
   112bc:	bl	5550 <realloc@plt>
   112c0:	str	x0, [x20]
   112c4:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   112c8:	cmp	x25, x0
   112cc:	b.eq	112f4 <xre_compile_pattern@@Base+0x1b10>  // b.none
   112d0:	sub	x8, x0, x25
   112d4:	cmp	x19, #0x0
   112d8:	add	x9, x19, x8
   112dc:	add	x24, x24, x8
   112e0:	add	x22, x22, x8
   112e4:	add	x8, x23, x8
   112e8:	csel	x19, xzr, x9, eq  // eq = none
   112ec:	cmp	x23, #0x0
   112f0:	csel	x23, xzr, x8, eq  // eq = none
   112f4:	ldr	x8, [x27]
   112f8:	sub	x9, x24, x0
   112fc:	add	x9, x9, #0x3
   11300:	mov	x25, x0
   11304:	cmp	x9, x8
   11308:	b.hi	1129c <xre_compile_pattern@@Base+0x1ab8>  // b.pmore
   1130c:	b	11314 <xre_compile_pattern@@Base+0x1b30>
   11310:	ldr	x28, [sp, #160]
   11314:	cmp	x24, x23
   11318:	b.eq	11330 <xre_compile_pattern@@Base+0x1b4c>  // b.none
   1131c:	mov	x8, x24
   11320:	ldrb	w9, [x8, #-1]!
   11324:	cmp	x23, x8
   11328:	strb	w9, [x8, #3]
   1132c:	b.ne	11320 <xre_compile_pattern@@Base+0x1b3c>  // b.any
   11330:	mov	w8, #0x313                 	// #787
   11334:	mov	x21, xzr
   11338:	strh	w8, [x23]
   1133c:	strb	wzr, [x23, #2]
   11340:	add	x25, x24, #0x3
   11344:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   11348:	tbnz	w28, #19, 11b2c <xre_compile_pattern@@Base+0x2348>
   1134c:	ldp	x26, x8, [x20]
   11350:	sub	x9, x25, x26
   11354:	add	x9, x9, #0x1
   11358:	cmp	x9, x8
   1135c:	b.ls	11de0 <xre_compile_pattern@@Base+0x25fc>  // b.plast
   11360:	ldur	x27, [x29, #-168]
   11364:	cmp	x8, #0x10, lsl #12
   11368:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   1136c:	lsl	x8, x8, #1
   11370:	cmp	x8, #0x10, lsl #12
   11374:	mov	w9, #0x10000               	// #65536
   11378:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1137c:	mov	x0, x26
   11380:	str	x1, [x20, #8]
   11384:	bl	5550 <realloc@plt>
   11388:	str	x0, [x20]
   1138c:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11390:	cmp	x26, x0
   11394:	b.eq	113c8 <xre_compile_pattern@@Base+0x1be4>  // b.none
   11398:	sub	x8, x0, x26
   1139c:	cmp	x19, #0x0
   113a0:	add	x9, x19, x8
   113a4:	add	x10, x23, x8
   113a8:	csel	x19, xzr, x9, eq  // eq = none
   113ac:	cmp	x23, #0x0
   113b0:	add	x25, x25, x8
   113b4:	add	x22, x22, x8
   113b8:	add	x8, x21, x8
   113bc:	csel	x23, xzr, x10, eq  // eq = none
   113c0:	cmp	x21, #0x0
   113c4:	csel	x21, xzr, x8, eq  // eq = none
   113c8:	ldr	x8, [x27]
   113cc:	sub	x9, x25, x0
   113d0:	add	x9, x9, #0x1
   113d4:	mov	x26, x0
   113d8:	cmp	x9, x8
   113dc:	b.hi	11364 <xre_compile_pattern@@Base+0x1b80>  // b.pmore
   113e0:	b	11de4 <xre_compile_pattern@@Base+0x2600>
   113e4:	tbnz	w28, #13, 11b34 <xre_compile_pattern@@Base+0x2350>
   113e8:	ldr	x24, [sp, #152]
   113ec:	ldr	x8, [x20, #48]
   113f0:	lsr	x21, x24, #32
   113f4:	add	x8, x8, #0x1
   113f8:	cmp	w21, w24
   113fc:	str	x8, [x20, #48]
   11400:	b.ne	11434 <xre_compile_pattern@@Base+0x1c50>  // b.any
   11404:	ldr	x0, [sp, #168]
   11408:	lsl	w23, w24, #1
   1140c:	add	x8, x23, w23, uxtw #2
   11410:	lsl	x1, x8, #3
   11414:	bl	5550 <realloc@plt>
   11418:	ldur	x27, [x29, #-168]
   1141c:	str	x0, [sp, #168]
   11420:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11424:	and	x8, x24, #0xffffffff00000000
   11428:	orr	x8, x23, x8
   1142c:	str	x8, [sp, #152]
   11430:	b	11438 <xre_compile_pattern@@Base+0x1c54>
   11434:	ldur	x27, [x29, #-168]
   11438:	ldr	x26, [x20]
   1143c:	ldr	w13, [sp, #140]
   11440:	ldr	x12, [sp, #168]
   11444:	mov	w14, #0x28                  	// #40
   11448:	cmp	x19, #0x0
   1144c:	add	w13, w13, #0x1
   11450:	sub	x11, x19, x26
   11454:	madd	x8, x21, x14, x12
   11458:	sub	x10, x22, x26
   1145c:	sub	x9, x25, x26
   11460:	csinc	x11, xzr, x11, eq  // eq = none
   11464:	cmp	w13, #0xff
   11468:	str	x9, [x8, #24]
   1146c:	stp	x10, x11, [x8]
   11470:	str	w13, [sp, #140]
   11474:	str	w13, [x8, #32]
   11478:	b.hi	11508 <xre_compile_pattern@@Base+0x1d24>  // b.pmore
   1147c:	add	x8, x9, #0x2
   11480:	madd	x10, x21, x14, x12
   11484:	str	x8, [x10, #16]
   11488:	ldr	x8, [x27]
   1148c:	add	x9, x9, #0x3
   11490:	cmp	x9, x8
   11494:	b.ls	114ec <xre_compile_pattern@@Base+0x1d08>  // b.plast
   11498:	cmp	x8, #0x10, lsl #12
   1149c:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   114a0:	lsl	x8, x8, #1
   114a4:	cmp	x8, #0x10, lsl #12
   114a8:	mov	w9, #0x10000               	// #65536
   114ac:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   114b0:	mov	x0, x26
   114b4:	str	x1, [x20, #8]
   114b8:	bl	5550 <realloc@plt>
   114bc:	str	x0, [x20]
   114c0:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   114c4:	sub	x8, x0, x26
   114c8:	cmp	x26, x0
   114cc:	add	x9, x25, x8
   114d0:	ldr	x8, [x27]
   114d4:	csel	x25, x25, x9, eq  // eq = none
   114d8:	sub	x9, x25, x0
   114dc:	add	x9, x9, #0x3
   114e0:	cmp	x9, x8
   114e4:	mov	x26, x0
   114e8:	b.hi	11498 <xre_compile_pattern@@Base+0x1cb4>  // b.pmore
   114ec:	mov	w8, #0x6                   	// #6
   114f0:	strb	w8, [x25]
   114f4:	ldr	w8, [sp, #140]
   114f8:	strb	wzr, [x25, #2]
   114fc:	strb	w8, [x25, #1]
   11500:	add	x8, x25, #0x3
   11504:	mov	x25, x8
   11508:	ldr	x9, [sp, #152]
   1150c:	mov	x8, #0x100000000           	// #4294967296
   11510:	mov	x19, xzr
   11514:	mov	x23, xzr
   11518:	add	x9, x9, x8
   1151c:	mov	x21, xzr
   11520:	str	x9, [sp, #152]
   11524:	mov	x22, x25
   11528:	b	11ab4 <xre_compile_pattern@@Base+0x22d0>
   1152c:	tbnz	w28, #13, 11540 <xre_compile_pattern@@Base+0x1d5c>
   11530:	ldr	x8, [sp, #152]
   11534:	lsr	x8, x8, #32
   11538:	cbnz	x8, fc9c <xre_compile_pattern@@Base+0x4b8>
   1153c:	tbz	w28, #17, 12020 <xre_compile_pattern@@Base+0x283c>
   11540:	mov	w24, #0x29                  	// #41
   11544:	b	11938 <xre_compile_pattern@@Base+0x2154>
   11548:	tbnz	w28, #19, 11b3c <xre_compile_pattern@@Base+0x2358>
   1154c:	ldp	x26, x8, [x20]
   11550:	sub	x9, x25, x26
   11554:	add	x9, x9, #0x1
   11558:	cmp	x9, x8
   1155c:	b.ls	11dec <xre_compile_pattern@@Base+0x2608>  // b.plast
   11560:	ldur	x27, [x29, #-168]
   11564:	cmp	x8, #0x10, lsl #12
   11568:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   1156c:	lsl	x8, x8, #1
   11570:	cmp	x8, #0x10, lsl #12
   11574:	mov	w9, #0x10000               	// #65536
   11578:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1157c:	mov	x0, x26
   11580:	str	x1, [x20, #8]
   11584:	bl	5550 <realloc@plt>
   11588:	str	x0, [x20]
   1158c:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11590:	cmp	x26, x0
   11594:	b.eq	115c8 <xre_compile_pattern@@Base+0x1de4>  // b.none
   11598:	sub	x8, x0, x26
   1159c:	cmp	x19, #0x0
   115a0:	add	x9, x19, x8
   115a4:	add	x10, x23, x8
   115a8:	csel	x19, xzr, x9, eq  // eq = none
   115ac:	cmp	x23, #0x0
   115b0:	add	x25, x25, x8
   115b4:	add	x22, x22, x8
   115b8:	add	x8, x21, x8
   115bc:	csel	x23, xzr, x10, eq  // eq = none
   115c0:	cmp	x21, #0x0
   115c4:	csel	x21, xzr, x8, eq  // eq = none
   115c8:	ldr	x8, [x27]
   115cc:	sub	x9, x25, x0
   115d0:	add	x9, x9, #0x1
   115d4:	mov	x26, x0
   115d8:	cmp	x9, x8
   115dc:	b.hi	11564 <xre_compile_pattern@@Base+0x1d80>  // b.pmore
   115e0:	b	11df0 <xre_compile_pattern@@Base+0x260c>
   115e4:	tbnz	w28, #19, 11b44 <xre_compile_pattern@@Base+0x2360>
   115e8:	ldp	x26, x8, [x20]
   115ec:	sub	x9, x25, x26
   115f0:	add	x9, x9, #0x1
   115f4:	cmp	x9, x8
   115f8:	b.ls	11df8 <xre_compile_pattern@@Base+0x2614>  // b.plast
   115fc:	ldur	x27, [x29, #-168]
   11600:	cmp	x8, #0x10, lsl #12
   11604:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11608:	lsl	x8, x8, #1
   1160c:	cmp	x8, #0x10, lsl #12
   11610:	mov	w9, #0x10000               	// #65536
   11614:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11618:	mov	x0, x26
   1161c:	str	x1, [x20, #8]
   11620:	bl	5550 <realloc@plt>
   11624:	str	x0, [x20]
   11628:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   1162c:	cmp	x26, x0
   11630:	b.eq	11664 <xre_compile_pattern@@Base+0x1e80>  // b.none
   11634:	sub	x8, x0, x26
   11638:	cmp	x19, #0x0
   1163c:	add	x9, x19, x8
   11640:	add	x10, x23, x8
   11644:	csel	x19, xzr, x9, eq  // eq = none
   11648:	cmp	x23, #0x0
   1164c:	add	x25, x25, x8
   11650:	add	x22, x22, x8
   11654:	add	x8, x21, x8
   11658:	csel	x23, xzr, x10, eq  // eq = none
   1165c:	cmp	x21, #0x0
   11660:	csel	x21, xzr, x8, eq  // eq = none
   11664:	ldr	x8, [x27]
   11668:	sub	x9, x25, x0
   1166c:	add	x9, x9, #0x1
   11670:	mov	x26, x0
   11674:	cmp	x9, x8
   11678:	b.hi	11600 <xre_compile_pattern@@Base+0x1e1c>  // b.pmore
   1167c:	b	11dfc <xre_compile_pattern@@Base+0x2618>
   11680:	tbnz	w28, #19, 11b4c <xre_compile_pattern@@Base+0x2368>
   11684:	ldp	x26, x8, [x20]
   11688:	sub	x9, x25, x26
   1168c:	add	x9, x9, #0x1
   11690:	cmp	x9, x8
   11694:	b.ls	11e04 <xre_compile_pattern@@Base+0x2620>  // b.plast
   11698:	ldur	x27, [x29, #-168]
   1169c:	cmp	x8, #0x10, lsl #12
   116a0:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   116a4:	lsl	x8, x8, #1
   116a8:	cmp	x8, #0x10, lsl #12
   116ac:	mov	w9, #0x10000               	// #65536
   116b0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   116b4:	mov	x0, x26
   116b8:	str	x1, [x20, #8]
   116bc:	bl	5550 <realloc@plt>
   116c0:	str	x0, [x20]
   116c4:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   116c8:	cmp	x26, x0
   116cc:	b.eq	11700 <xre_compile_pattern@@Base+0x1f1c>  // b.none
   116d0:	sub	x8, x0, x26
   116d4:	cmp	x19, #0x0
   116d8:	add	x9, x19, x8
   116dc:	add	x10, x23, x8
   116e0:	csel	x19, xzr, x9, eq  // eq = none
   116e4:	cmp	x23, #0x0
   116e8:	add	x25, x25, x8
   116ec:	add	x22, x22, x8
   116f0:	add	x8, x21, x8
   116f4:	csel	x23, xzr, x10, eq  // eq = none
   116f8:	cmp	x21, #0x0
   116fc:	csel	x21, xzr, x8, eq  // eq = none
   11700:	ldr	x8, [x27]
   11704:	sub	x9, x25, x0
   11708:	add	x9, x9, #0x1
   1170c:	mov	x26, x0
   11710:	cmp	x9, x8
   11714:	b.hi	1169c <xre_compile_pattern@@Base+0x1eb8>  // b.pmore
   11718:	b	11e08 <xre_compile_pattern@@Base+0x2624>
   1171c:	tbnz	w28, #19, 11b5c <xre_compile_pattern@@Base+0x2378>
   11720:	ldp	x26, x8, [x20]
   11724:	mov	x23, x25
   11728:	sub	x9, x25, x26
   1172c:	add	x9, x9, #0x1
   11730:	cmp	x9, x8
   11734:	b.ls	117b4 <xre_compile_pattern@@Base+0x1fd0>  // b.plast
   11738:	cmp	x8, #0x10, lsl #12
   1173c:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11740:	lsl	x8, x8, #1
   11744:	cmp	x8, #0x10, lsl #12
   11748:	mov	w9, #0x10000               	// #65536
   1174c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11750:	mov	x0, x26
   11754:	str	x1, [x20, #8]
   11758:	bl	5550 <realloc@plt>
   1175c:	str	x0, [x20]
   11760:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11764:	cmp	x26, x0
   11768:	b.eq	1179c <xre_compile_pattern@@Base+0x1fb8>  // b.none
   1176c:	sub	x8, x0, x26
   11770:	cmp	x19, #0x0
   11774:	add	x9, x19, x8
   11778:	add	x10, x23, x8
   1177c:	csel	x19, xzr, x9, eq  // eq = none
   11780:	cmp	x23, #0x0
   11784:	add	x25, x25, x8
   11788:	add	x22, x22, x8
   1178c:	add	x8, x21, x8
   11790:	csel	x23, xzr, x10, eq  // eq = none
   11794:	cmp	x21, #0x0
   11798:	csel	x21, xzr, x8, eq  // eq = none
   1179c:	ldr	x8, [x27]
   117a0:	sub	x9, x25, x0
   117a4:	add	x9, x9, #0x1
   117a8:	mov	x26, x0
   117ac:	cmp	x9, x8
   117b0:	b.hi	11738 <xre_compile_pattern@@Base+0x1f54>  // b.pmore
   117b4:	mov	w8, #0x19                  	// #25
   117b8:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   117bc:	tbnz	w28, #19, 11b64 <xre_compile_pattern@@Base+0x2380>
   117c0:	ldp	x26, x8, [x20]
   117c4:	sub	x9, x25, x26
   117c8:	add	x9, x9, #0x1
   117cc:	cmp	x9, x8
   117d0:	b.ls	11e1c <xre_compile_pattern@@Base+0x2638>  // b.plast
   117d4:	ldur	x27, [x29, #-168]
   117d8:	cmp	x8, #0x10, lsl #12
   117dc:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   117e0:	lsl	x8, x8, #1
   117e4:	cmp	x8, #0x10, lsl #12
   117e8:	mov	w9, #0x10000               	// #65536
   117ec:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   117f0:	mov	x0, x26
   117f4:	str	x1, [x20, #8]
   117f8:	bl	5550 <realloc@plt>
   117fc:	str	x0, [x20]
   11800:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11804:	cmp	x26, x0
   11808:	b.eq	1183c <xre_compile_pattern@@Base+0x2058>  // b.none
   1180c:	sub	x8, x0, x26
   11810:	cmp	x19, #0x0
   11814:	add	x9, x19, x8
   11818:	add	x10, x23, x8
   1181c:	csel	x19, xzr, x9, eq  // eq = none
   11820:	cmp	x23, #0x0
   11824:	add	x25, x25, x8
   11828:	add	x22, x22, x8
   1182c:	add	x8, x21, x8
   11830:	csel	x23, xzr, x10, eq  // eq = none
   11834:	cmp	x21, #0x0
   11838:	csel	x21, xzr, x8, eq  // eq = none
   1183c:	ldr	x8, [x27]
   11840:	sub	x9, x25, x0
   11844:	add	x9, x9, #0x1
   11848:	mov	x26, x0
   1184c:	cmp	x9, x8
   11850:	b.hi	117d8 <xre_compile_pattern@@Base+0x1ff4>  // b.pmore
   11854:	b	11e20 <xre_compile_pattern@@Base+0x263c>
   11858:	tbnz	w28, #19, 11b6c <xre_compile_pattern@@Base+0x2388>
   1185c:	ldp	x26, x8, [x20]
   11860:	mov	x23, x25
   11864:	sub	x9, x25, x26
   11868:	add	x9, x9, #0x1
   1186c:	cmp	x9, x8
   11870:	b.ls	11e28 <xre_compile_pattern@@Base+0x2644>  // b.plast
   11874:	ldur	x27, [x29, #-168]
   11878:	cmp	x8, #0x10, lsl #12
   1187c:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11880:	lsl	x8, x8, #1
   11884:	cmp	x8, #0x10, lsl #12
   11888:	mov	w9, #0x10000               	// #65536
   1188c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11890:	mov	x0, x26
   11894:	str	x1, [x20, #8]
   11898:	bl	5550 <realloc@plt>
   1189c:	str	x0, [x20]
   118a0:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   118a4:	cmp	x26, x0
   118a8:	b.eq	118dc <xre_compile_pattern@@Base+0x20f8>  // b.none
   118ac:	sub	x8, x0, x26
   118b0:	cmp	x19, #0x0
   118b4:	add	x9, x19, x8
   118b8:	add	x10, x23, x8
   118bc:	csel	x19, xzr, x9, eq  // eq = none
   118c0:	cmp	x23, #0x0
   118c4:	add	x25, x25, x8
   118c8:	add	x22, x22, x8
   118cc:	add	x8, x21, x8
   118d0:	csel	x23, xzr, x10, eq  // eq = none
   118d4:	cmp	x21, #0x0
   118d8:	csel	x21, xzr, x8, eq  // eq = none
   118dc:	ldr	x8, [x27]
   118e0:	sub	x9, x25, x0
   118e4:	add	x9, x9, #0x1
   118e8:	mov	x26, x0
   118ec:	cmp	x9, x8
   118f0:	b.hi	11878 <xre_compile_pattern@@Base+0x2094>  // b.pmore
   118f4:	b	11e2c <xre_compile_pattern@@Base+0x2648>
   118f8:	ldr	x8, [sp, #128]
   118fc:	cmp	x8, #0x200
   11900:	b.eq	109a4 <xre_compile_pattern@@Base+0x11c0>  // b.none
   11904:	mov	w24, #0x7b                  	// #123
   11908:	b	11938 <xre_compile_pattern@@Base+0x2154>
   1190c:	mov	w8, #0x2c                  	// #44
   11910:	mov	x9, x26
   11914:	mov	w28, #0x7fff                	// #32767
   11918:	tbz	w24, #31, 10fd8 <xre_compile_pattern@@Base+0x17f4>
   1191c:	mov	x26, x9
   11920:	ldr	x8, [sp, #160]
   11924:	tbz	w8, #21, 11ff4 <xre_compile_pattern@@Base+0x2810>
   11928:	mov	w24, #0x7b                  	// #123
   1192c:	mov	x28, x8
   11930:	stur	x27, [x29, #-16]
   11934:	tbnz	w28, #12, 11944 <xre_compile_pattern@@Base+0x2160>
   11938:	ldur	x8, [x29, #-152]
   1193c:	cbz	x8, 11944 <xre_compile_pattern@@Base+0x2160>
   11940:	ldrb	w24, [x8, w24, uxtw]
   11944:	ldur	x27, [x29, #-168]
   11948:	cbz	x21, 11980 <xre_compile_pattern@@Base+0x219c>
   1194c:	ldrb	w8, [x21]
   11950:	cmp	x8, #0xff
   11954:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11958:	add	x8, x21, x8
   1195c:	add	x8, x8, #0x1
   11960:	cmp	x8, x25
   11964:	b.ne	11980 <xre_compile_pattern@@Base+0x219c>  // b.any
   11968:	ldur	x8, [x29, #-16]
   1196c:	ldrb	w9, [x8]
   11970:	cmp	w9, #0x2a
   11974:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11978:	cmp	w9, #0x5e
   1197c:	b.ne	11acc <xre_compile_pattern@@Base+0x22e8>  // b.any
   11980:	ldp	x26, x8, [x20]
   11984:	mov	x23, x25
   11988:	sub	x9, x25, x26
   1198c:	add	x9, x9, #0x2
   11990:	cmp	x9, x8
   11994:	b.ls	11a08 <xre_compile_pattern@@Base+0x2224>  // b.plast
   11998:	cmp	x8, #0x10, lsl #12
   1199c:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   119a0:	lsl	x8, x8, #1
   119a4:	cmp	x8, #0x10, lsl #12
   119a8:	mov	w9, #0x10000               	// #65536
   119ac:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   119b0:	mov	x0, x26
   119b4:	str	x1, [x20, #8]
   119b8:	bl	5550 <realloc@plt>
   119bc:	str	x0, [x20]
   119c0:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   119c4:	cmp	x26, x0
   119c8:	b.eq	119f0 <xre_compile_pattern@@Base+0x220c>  // b.none
   119cc:	sub	x8, x0, x26
   119d0:	cmp	x19, #0x0
   119d4:	add	x9, x19, x8
   119d8:	add	x25, x25, x8
   119dc:	add	x22, x22, x8
   119e0:	add	x8, x23, x8
   119e4:	csel	x19, xzr, x9, eq  // eq = none
   119e8:	cmp	x23, #0x0
   119ec:	csel	x23, xzr, x8, eq  // eq = none
   119f0:	ldr	x8, [x27]
   119f4:	sub	x9, x25, x0
   119f8:	add	x9, x9, #0x2
   119fc:	mov	x26, x0
   11a00:	cmp	x9, x8
   11a04:	b.hi	11998 <xre_compile_pattern@@Base+0x21b4>  // b.pmore
   11a08:	mov	w8, #0x2                   	// #2
   11a0c:	add	x21, x25, #0x1
   11a10:	strh	w8, [x25], #2
   11a14:	ldp	x26, x8, [x20]
   11a18:	sub	x9, x25, x26
   11a1c:	add	x9, x9, #0x1
   11a20:	cmp	x9, x8
   11a24:	b.ls	11aa4 <xre_compile_pattern@@Base+0x22c0>  // b.plast
   11a28:	cmp	x8, #0x10, lsl #12
   11a2c:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11a30:	lsl	x8, x8, #1
   11a34:	cmp	x8, #0x10, lsl #12
   11a38:	mov	w9, #0x10000               	// #65536
   11a3c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11a40:	mov	x0, x26
   11a44:	str	x1, [x20, #8]
   11a48:	bl	5550 <realloc@plt>
   11a4c:	str	x0, [x20]
   11a50:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11a54:	cmp	x26, x0
   11a58:	b.eq	11a8c <xre_compile_pattern@@Base+0x22a8>  // b.none
   11a5c:	sub	x8, x0, x26
   11a60:	cmp	x19, #0x0
   11a64:	add	x9, x19, x8
   11a68:	add	x10, x23, x8
   11a6c:	csel	x19, xzr, x9, eq  // eq = none
   11a70:	cmp	x23, #0x0
   11a74:	add	x25, x25, x8
   11a78:	add	x22, x22, x8
   11a7c:	add	x8, x21, x8
   11a80:	csel	x23, xzr, x10, eq  // eq = none
   11a84:	cmp	x21, #0x0
   11a88:	csel	x21, xzr, x8, eq  // eq = none
   11a8c:	ldr	x8, [x27]
   11a90:	sub	x9, x25, x0
   11a94:	add	x9, x9, #0x1
   11a98:	mov	x26, x0
   11a9c:	cmp	x9, x8
   11aa0:	b.hi	11a28 <xre_compile_pattern@@Base+0x2244>  // b.pmore
   11aa4:	strb	w24, [x25], #1
   11aa8:	ldrb	w8, [x21]
   11aac:	add	w8, w8, #0x1
   11ab0:	strb	w8, [x21]
   11ab4:	ldr	x26, [sp, #176]
   11ab8:	ldur	x8, [x29, #-16]
   11abc:	ldur	x9, [x29, #-160]
   11ac0:	cmp	x8, x9
   11ac4:	b.ne	f9c0 <xre_compile_pattern@@Base+0x1dc>  // b.any
   11ac8:	b	11edc <xre_compile_pattern@@Base+0x26f8>
   11acc:	tbnz	w28, #1, 11ae4 <xre_compile_pattern@@Base+0x2300>
   11ad0:	cmp	w9, #0x2b
   11ad4:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11ad8:	cmp	w9, #0x3f
   11adc:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11ae0:	b	11b00 <xre_compile_pattern@@Base+0x231c>
   11ae4:	cmp	w9, #0x5c
   11ae8:	b.ne	11b00 <xre_compile_pattern@@Base+0x231c>  // b.any
   11aec:	ldrb	w10, [x8, #1]
   11af0:	cmp	w10, #0x2b
   11af4:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11af8:	cmp	w10, #0x3f
   11afc:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11b00:	tbz	w28, #9, 11a14 <xre_compile_pattern@@Base+0x2230>
   11b04:	tbnz	w28, #12, 11b20 <xre_compile_pattern@@Base+0x233c>
   11b08:	cmp	w9, #0x5c
   11b0c:	b.ne	11a14 <xre_compile_pattern@@Base+0x2230>  // b.any
   11b10:	ldrb	w8, [x8, #1]
   11b14:	cmp	w8, #0x7b
   11b18:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11b1c:	b	11a14 <xre_compile_pattern@@Base+0x2230>
   11b20:	cmp	w9, #0x7b
   11b24:	b.eq	11980 <xre_compile_pattern@@Base+0x219c>  // b.none
   11b28:	b	11a14 <xre_compile_pattern@@Base+0x2230>
   11b2c:	mov	w24, #0x27                  	// #39
   11b30:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b34:	mov	w24, #0x28                  	// #40
   11b38:	b	11938 <xre_compile_pattern@@Base+0x2154>
   11b3c:	mov	w24, #0x3c                  	// #60
   11b40:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b44:	mov	w24, #0x3e                  	// #62
   11b48:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b4c:	mov	w24, #0x42                  	// #66
   11b50:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b54:	mov	w24, #0x62                  	// #98
   11b58:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b5c:	mov	w24, #0x57                  	// #87
   11b60:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b64:	mov	w24, #0x60                  	// #96
   11b68:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b6c:	mov	w24, #0x77                  	// #119
   11b70:	b	11944 <xre_compile_pattern@@Base+0x2160>
   11b74:	ldr	x8, [sp, #88]
   11b78:	cmp	x8, #0x20
   11b7c:	b.eq	11fe4 <xre_compile_pattern@@Base+0x2800>  // b.none
   11b80:	ldr	x8, [sp, #160]
   11b84:	mov	x0, x25
   11b88:	tbz	w8, #4, 11928 <xre_compile_pattern@@Base+0x2144>
   11b8c:	cmp	w28, #0x8, lsl #12
   11b90:	b.ge	12038 <xre_compile_pattern@@Base+0x2854>  // b.tcont
   11b94:	ldur	x27, [x29, #-168]
   11b98:	cbz	w28, 11d50 <xre_compile_pattern@@Base+0x256c>
   11b9c:	ldp	x26, x8, [x20]
   11ba0:	cmp	w28, #0x1
   11ba4:	mov	w9, #0xa                   	// #10
   11ba8:	mov	w10, #0x14                  	// #20
   11bac:	csel	x21, x10, x9, gt
   11bb0:	add	x9, x21, x25
   11bb4:	sub	x9, x9, x26
   11bb8:	mov	x23, x0
   11bbc:	cmp	x9, x8
   11bc0:	b.ls	11c34 <xre_compile_pattern@@Base+0x2450>  // b.plast
   11bc4:	cmp	x8, #0x10, lsl #12
   11bc8:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11bcc:	lsl	x8, x8, #1
   11bd0:	cmp	x8, #0x10, lsl #12
   11bd4:	mov	w9, #0x10000               	// #65536
   11bd8:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11bdc:	mov	x0, x26
   11be0:	str	x1, [x20, #8]
   11be4:	bl	5550 <realloc@plt>
   11be8:	str	x0, [x20]
   11bec:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11bf0:	cmp	x26, x0
   11bf4:	b.eq	11c1c <xre_compile_pattern@@Base+0x2438>  // b.none
   11bf8:	sub	x8, x0, x26
   11bfc:	cmp	x19, #0x0
   11c00:	add	x9, x19, x8
   11c04:	add	x25, x25, x8
   11c08:	add	x22, x22, x8
   11c0c:	add	x8, x23, x8
   11c10:	csel	x19, xzr, x9, eq  // eq = none
   11c14:	cmp	x23, #0x0
   11c18:	csel	x23, xzr, x8, eq  // eq = none
   11c1c:	ldr	x8, [x27]
   11c20:	add	x9, x21, x25
   11c24:	sub	x9, x9, x0
   11c28:	mov	x26, x0
   11c2c:	cmp	x9, x8
   11c30:	b.hi	11bc4 <xre_compile_pattern@@Base+0x23e0>  // b.pmore
   11c34:	subs	w8, w28, #0x1
   11c38:	mov	w10, #0x5                   	// #5
   11c3c:	add	x9, x25, #0x5
   11c40:	csel	w10, w10, wzr, gt
   11c44:	add	w10, w9, w10
   11c48:	sub	w10, w10, w23
   11c4c:	cmp	x25, x23
   11c50:	sub	w10, w10, #0x3
   11c54:	b.eq	11c6c <xre_compile_pattern@@Base+0x2488>  // b.none
   11c58:	mov	x11, x25
   11c5c:	ldrb	w12, [x11, #-1]!
   11c60:	cmp	x23, x11
   11c64:	strb	w12, [x11, #5]
   11c68:	b.ne	11c5c <xre_compile_pattern@@Base+0x2478>  // b.any
   11c6c:	ldr	x26, [sp, #176]
   11c70:	mov	w11, #0x15                  	// #21
   11c74:	strb	w11, [x23]
   11c78:	strb	w10, [x23, #1]
   11c7c:	lsr	w11, w10, #8
   11c80:	lsr	w10, w24, #8
   11c84:	cmp	x9, x23
   11c88:	strb	w24, [x23, #3]
   11c8c:	strb	w11, [x23, #2]
   11c90:	strb	w10, [x23, #4]
   11c94:	b.eq	11cb4 <xre_compile_pattern@@Base+0x24d0>  // b.none
   11c98:	sub	x9, x23, #0x5
   11c9c:	mov	x11, x25
   11ca0:	ldrb	w12, [x11, #4]
   11ca4:	strb	w12, [x11, #9]
   11ca8:	sub	x11, x11, #0x1
   11cac:	cmp	x9, x11
   11cb0:	b.ne	11ca0 <xre_compile_pattern@@Base+0x24bc>  // b.any
   11cb4:	mov	w9, #0x517                 	// #1303
   11cb8:	strh	w9, [x23]
   11cbc:	cmp	w28, #0x2
   11cc0:	add	x9, x25, #0xa
   11cc4:	strb	wzr, [x23, #2]
   11cc8:	strb	w24, [x23, #3]
   11ccc:	strb	w10, [x23, #4]
   11cd0:	b.lt	11e34 <xre_compile_pattern@@Base+0x2650>  // b.tstop
   11cd4:	ldr	x28, [sp, #160]
   11cd8:	sub	w10, w23, w9
   11cdc:	mov	w9, #0x16                  	// #22
   11ce0:	add	x11, x25, #0xf
   11ce4:	add	w12, w10, #0x2
   11ce8:	strb	w9, [x25, #10]
   11cec:	lsr	w9, w8, #8
   11cf0:	subs	x10, x11, x23
   11cf4:	lsr	w11, w12, #8
   11cf8:	strb	w8, [x25, #13]
   11cfc:	strb	w12, [x25, #11]
   11d00:	strb	w11, [x25, #12]
   11d04:	strb	w9, [x25, #14]
   11d08:	b.eq	11d28 <xre_compile_pattern@@Base+0x2544>  // b.none
   11d0c:	sub	x11, x23, #0xf
   11d10:	mov	x12, x25
   11d14:	ldrb	w13, [x12, #14]
   11d18:	strb	w13, [x12, #19]
   11d1c:	sub	x12, x12, #0x1
   11d20:	cmp	x11, x12
   11d24:	b.ne	11d14 <xre_compile_pattern@@Base+0x2530>  // b.any
   11d28:	mov	w11, #0x17                  	// #23
   11d2c:	strb	w10, [x23, #1]
   11d30:	lsr	w10, w10, #8
   11d34:	mov	x21, xzr
   11d38:	strb	w11, [x23]
   11d3c:	strb	w8, [x23, #3]
   11d40:	strb	w9, [x23, #4]
   11d44:	strb	w10, [x23, #2]
   11d48:	add	x25, x25, #0x14
   11d4c:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   11d50:	ldp	x26, x8, [x20]
   11d54:	mov	x23, x0
   11d58:	sub	x9, x25, x26
   11d5c:	add	x9, x9, #0x3
   11d60:	cmp	x9, x8
   11d64:	b.ls	11e44 <xre_compile_pattern@@Base+0x2660>  // b.plast
   11d68:	ldr	x28, [sp, #160]
   11d6c:	cmp	x8, #0x10, lsl #12
   11d70:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11d74:	lsl	x8, x8, #1
   11d78:	cmp	x8, #0x10, lsl #12
   11d7c:	mov	w9, #0x10000               	// #65536
   11d80:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11d84:	mov	x0, x26
   11d88:	str	x1, [x20, #8]
   11d8c:	bl	5550 <realloc@plt>
   11d90:	str	x0, [x20]
   11d94:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11d98:	cmp	x26, x0
   11d9c:	b.eq	11dc4 <xre_compile_pattern@@Base+0x25e0>  // b.none
   11da0:	sub	x8, x0, x26
   11da4:	cmp	x19, #0x0
   11da8:	add	x9, x19, x8
   11dac:	add	x25, x25, x8
   11db0:	add	x22, x22, x8
   11db4:	add	x8, x23, x8
   11db8:	csel	x19, xzr, x9, eq  // eq = none
   11dbc:	cmp	x23, #0x0
   11dc0:	csel	x23, xzr, x8, eq  // eq = none
   11dc4:	ldr	x8, [x27]
   11dc8:	sub	x9, x25, x0
   11dcc:	add	x9, x9, #0x3
   11dd0:	mov	x26, x0
   11dd4:	cmp	x9, x8
   11dd8:	b.hi	11d6c <xre_compile_pattern@@Base+0x2588>  // b.pmore
   11ddc:	b	11e48 <xre_compile_pattern@@Base+0x2664>
   11de0:	ldur	x27, [x29, #-168]
   11de4:	mov	w8, #0xc                   	// #12
   11de8:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11dec:	ldur	x27, [x29, #-168]
   11df0:	mov	w8, #0x1a                  	// #26
   11df4:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11df8:	ldur	x27, [x29, #-168]
   11dfc:	mov	w8, #0x1b                  	// #27
   11e00:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11e04:	ldur	x27, [x29, #-168]
   11e08:	mov	w8, #0x1d                  	// #29
   11e0c:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11e10:	ldur	x27, [x29, #-168]
   11e14:	mov	w8, #0x1c                  	// #28
   11e18:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11e1c:	ldur	x27, [x29, #-168]
   11e20:	mov	w8, #0xb                   	// #11
   11e24:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11e28:	ldur	x27, [x29, #-168]
   11e2c:	mov	w8, #0x18                  	// #24
   11e30:	b	10d44 <xre_compile_pattern@@Base+0x1560>
   11e34:	ldr	x28, [sp, #160]
   11e38:	mov	x21, xzr
   11e3c:	mov	x25, x9
   11e40:	b	11ab8 <xre_compile_pattern@@Base+0x22d4>
   11e44:	ldr	x28, [sp, #160]
   11e48:	add	x8, x25, #0x3
   11e4c:	sub	w9, w8, w23
   11e50:	cmp	x25, x23
   11e54:	sub	w9, w9, #0x3
   11e58:	b.eq	11e6c <xre_compile_pattern@@Base+0x2688>  // b.none
   11e5c:	ldrb	w10, [x25, #-1]!
   11e60:	cmp	x23, x25
   11e64:	strb	w10, [x25, #3]
   11e68:	b.ne	11e5c <xre_compile_pattern@@Base+0x2678>  // b.any
   11e6c:	mov	w10, #0xd                   	// #13
   11e70:	strb	w9, [x23, #1]
   11e74:	lsr	w9, w9, #8
   11e78:	mov	x21, xzr
   11e7c:	strb	w10, [x23]
   11e80:	strb	w9, [x23, #2]
   11e84:	mov	x25, x8
   11e88:	b	11ab4 <xre_compile_pattern@@Base+0x22d0>
   11e8c:	ldrb	w8, [x25]
   11e90:	cbz	w8, 11eb4 <xre_compile_pattern@@Base+0x26d0>
   11e94:	and	x9, x8, #0xff
   11e98:	ldrb	w9, [x25, x9]
   11e9c:	cbnz	w9, 11eb4 <xre_compile_pattern@@Base+0x26d0>
   11ea0:	sub	w8, w8, #0x1
   11ea4:	tst	w8, #0xff
   11ea8:	strb	w8, [x25]
   11eac:	b.ne	11e94 <xre_compile_pattern@@Base+0x26b0>  // b.any
   11eb0:	mov	w8, wzr
   11eb4:	add	x25, x26, w8, uxtb
   11eb8:	b	11130 <xre_compile_pattern@@Base+0x194c>
   11ebc:	mov	x0, x22
   11ec0:	bl	5520 <free@plt>
   11ec4:	mov	w27, #0xc                   	// #12
   11ec8:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   11ecc:	ldr	x0, [sp, #168]
   11ed0:	bl	5520 <free@plt>
   11ed4:	mov	w27, #0x5                   	// #5
   11ed8:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   11edc:	cbz	x19, 11efc <xre_compile_pattern@@Base+0x2718>
   11ee0:	sub	w8, w25, w19
   11ee4:	sub	w8, w8, #0x3
   11ee8:	mov	w9, #0xe                   	// #14
   11eec:	strb	w8, [x19, #1]
   11ef0:	lsr	w8, w8, #8
   11ef4:	strb	w9, [x19]
   11ef8:	strb	w8, [x19, #2]
   11efc:	ldr	x8, [sp, #152]
   11f00:	ldr	x22, [sp, #168]
   11f04:	lsr	x8, x8, #32
   11f08:	cbnz	x8, 11fd4 <xre_compile_pattern@@Base+0x27f0>
   11f0c:	tbz	w28, #18, 11f80 <xre_compile_pattern@@Base+0x279c>
   11f10:	ldp	x21, x8, [x20]
   11f14:	sub	x9, x25, x21
   11f18:	add	x9, x9, #0x1
   11f1c:	cmp	x9, x8
   11f20:	b.ls	11f78 <xre_compile_pattern@@Base+0x2794>  // b.plast
   11f24:	mov	w19, #0x10000               	// #65536
   11f28:	cmp	x8, #0x10, lsl #12
   11f2c:	b.eq	11f9c <xre_compile_pattern@@Base+0x27b8>  // b.none
   11f30:	lsl	x8, x8, #1
   11f34:	cmp	x8, #0x10, lsl #12
   11f38:	csel	x1, x8, x19, cc  // cc = lo, ul, last
   11f3c:	mov	x0, x21
   11f40:	str	x1, [x20, #8]
   11f44:	bl	5550 <realloc@plt>
   11f48:	str	x0, [x20]
   11f4c:	cbz	x0, 11ec4 <xre_compile_pattern@@Base+0x26e0>
   11f50:	sub	x8, x0, x21
   11f54:	cmp	x21, x0
   11f58:	add	x9, x25, x8
   11f5c:	ldr	x8, [x27]
   11f60:	csel	x25, x25, x9, eq  // eq = none
   11f64:	sub	x9, x25, x0
   11f68:	add	x9, x9, #0x1
   11f6c:	cmp	x9, x8
   11f70:	mov	x21, x0
   11f74:	b.hi	11f28 <xre_compile_pattern@@Base+0x2744>  // b.pmore
   11f78:	mov	w8, #0x1                   	// #1
   11f7c:	strb	w8, [x25], #1
   11f80:	mov	x0, x22
   11f84:	bl	5520 <free@plt>
   11f88:	ldr	x8, [x20]
   11f8c:	mov	w27, wzr
   11f90:	sub	x8, x25, x8
   11f94:	str	x8, [x20, #16]
   11f98:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   11f9c:	mov	w27, #0xf                   	// #15
   11fa0:	mov	w0, w27
   11fa4:	ldp	x20, x19, [sp, #432]
   11fa8:	ldp	x22, x21, [sp, #416]
   11fac:	ldp	x24, x23, [sp, #400]
   11fb0:	ldp	x26, x25, [sp, #384]
   11fb4:	ldp	x28, x27, [sp, #368]
   11fb8:	ldp	x29, x30, [sp, #352]
   11fbc:	add	sp, sp, #0x1c0
   11fc0:	ret
   11fc4:	ldr	x0, [sp, #168]
   11fc8:	bl	5520 <free@plt>
   11fcc:	mov	w27, #0x7                   	// #7
   11fd0:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   11fd4:	mov	x0, x22
   11fd8:	bl	5520 <free@plt>
   11fdc:	mov	w27, #0x8                   	// #8
   11fe0:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   11fe4:	ldr	x0, [sp, #168]
   11fe8:	bl	5520 <free@plt>
   11fec:	mov	w27, #0xd                   	// #13
   11ff0:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   11ff4:	ldr	x0, [sp, #168]
   11ff8:	bl	5520 <free@plt>
   11ffc:	ldur	x8, [x29, #-160]
   12000:	cmp	x26, x8
   12004:	mov	w8, #0x9                   	// #9
   12008:	cinc	w27, w8, ne  // ne = any
   1200c:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12010:	ldr	x0, [sp, #168]
   12014:	bl	5520 <free@plt>
   12018:	mov	w27, #0x6                   	// #6
   1201c:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12020:	ldr	x0, [sp, #168]
   12024:	bl	5520 <free@plt>
   12028:	mov	w27, #0x10                  	// #16
   1202c:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12030:	mov	w27, #0xe                   	// #14
   12034:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12038:	ldr	x0, [sp, #168]
   1203c:	bl	5520 <free@plt>
   12040:	mov	w27, #0xa                   	// #10
   12044:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12048:	mov	w27, w0
   1204c:	ldr	x0, [sp, #168]
   12050:	bl	5520 <free@plt>
   12054:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12058:	ldr	x0, [sp, #168]
   1205c:	bl	5520 <free@plt>
   12060:	mov	w27, #0xb                   	// #11
   12064:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12068:	ldr	x0, [sp, #168]
   1206c:	bl	5520 <free@plt>
   12070:	mov	w27, #0x3                   	// #3
   12074:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>
   12078:	ldr	x0, [sp, #168]
   1207c:	bl	5520 <free@plt>
   12080:	mov	w27, #0x4                   	// #4
   12084:	b	11fa0 <xre_compile_pattern@@Base+0x27bc>

0000000000012088 <xre_comp@@Base>:
   12088:	stp	x29, x30, [sp, #-32]!
   1208c:	stp	x20, x19, [sp, #16]
   12090:	adrp	x20, 29000 <xexit@@Base+0x15018>
   12094:	ldr	x8, [x20, #1544]
   12098:	mov	x29, sp
   1209c:	cbz	x0, 120f4 <xre_comp@@Base+0x6c>
   120a0:	mov	x19, x0
   120a4:	cbz	x8, 12108 <xre_comp@@Base+0x80>
   120a8:	adrp	x20, 29000 <xexit@@Base+0x15018>
   120ac:	add	x20, x20, #0x608
   120b0:	ldrb	w8, [x20, #56]
   120b4:	mov	x0, x19
   120b8:	orr	w8, w8, #0x80
   120bc:	strb	w8, [x20, #56]
   120c0:	bl	5430 <strlen@plt>
   120c4:	adrp	x8, 28000 <xexit@@Base+0x14018>
   120c8:	ldr	x8, [x8, #3808]
   120cc:	mov	x1, x0
   120d0:	mov	x0, x19
   120d4:	mov	x3, x20
   120d8:	ldr	x2, [x8]
   120dc:	bl	f834 <xre_compile_pattern@@Base+0x50>
   120e0:	cbz	w0, 12144 <xre_comp@@Base+0xbc>
   120e4:	adrp	x8, 28000 <xexit@@Base+0x14018>
   120e8:	add	x8, x8, #0x9e0
   120ec:	ldr	x0, [x8, w0, sxtw #3]
   120f0:	b	12148 <xre_comp@@Base+0xc0>
   120f4:	adrp	x9, 14000 <xexit@@Base+0x18>
   120f8:	add	x9, x9, #0x9f8
   120fc:	cmp	x8, #0x0
   12100:	csel	x0, xzr, x9, ne  // ne = any
   12104:	b	12148 <xre_comp@@Base+0xc0>
   12108:	mov	w0, #0xc8                  	// #200
   1210c:	bl	57e0 <malloc@plt>
   12110:	str	x0, [x20, #1544]
   12114:	cbz	x0, 12138 <xre_comp@@Base+0xb0>
   12118:	adrp	x20, 29000 <xexit@@Base+0x15018>
   1211c:	add	x20, x20, #0x610
   12120:	mov	w8, #0xc8                  	// #200
   12124:	mov	w0, #0x100                 	// #256
   12128:	str	x8, [x20]
   1212c:	bl	57e0 <malloc@plt>
   12130:	str	x0, [x20, #24]
   12134:	cbnz	x0, 120a8 <xre_comp@@Base+0x20>
   12138:	adrp	x0, 14000 <xexit@@Base+0x18>
   1213c:	add	x0, x0, #0xb3e
   12140:	b	12148 <xre_comp@@Base+0xc0>
   12144:	mov	x0, xzr
   12148:	ldp	x20, x19, [sp, #16]
   1214c:	ldp	x29, x30, [sp], #32
   12150:	ret

0000000000012154 <xre_exec@@Base>:
   12154:	sub	sp, sp, #0x30
   12158:	stp	x29, x30, [sp, #16]
   1215c:	str	x19, [sp, #32]
   12160:	add	x29, sp, #0x10
   12164:	mov	x19, x0
   12168:	bl	5430 <strlen@plt>
   1216c:	mov	x4, x0
   12170:	adrp	x0, 29000 <xexit@@Base+0x15018>
   12174:	add	x0, x0, #0x608
   12178:	mov	x1, xzr
   1217c:	mov	w2, wzr
   12180:	mov	x3, x19
   12184:	mov	w5, wzr
   12188:	mov	w6, w4
   1218c:	mov	x7, xzr
   12190:	str	w4, [sp]
   12194:	bl	58f0 <xre_search_2@plt>
   12198:	ldr	x19, [sp, #32]
   1219c:	ldp	x29, x30, [sp, #16]
   121a0:	mvn	w8, w0
   121a4:	lsr	w0, w8, #31
   121a8:	add	sp, sp, #0x30
   121ac:	ret

00000000000121b0 <xregcomp@@Base>:
   121b0:	stp	x29, x30, [sp, #-80]!
   121b4:	stp	x24, x23, [sp, #32]
   121b8:	mov	w24, #0xb2be                	// #45758
   121bc:	movk	w24, #0x3, lsl #16
   121c0:	mov	w8, #0x2c6                 	// #710
   121c4:	str	x25, [sp, #16]
   121c8:	stp	x22, x21, [sp, #48]
   121cc:	stp	x20, x19, [sp, #64]
   121d0:	mov	x19, x0
   121d4:	tst	w2, #0x1
   121d8:	movk	w8, #0x1, lsl #16
   121dc:	stp	xzr, xzr, [x0]
   121e0:	add	x9, x24, #0x3e
   121e4:	str	xzr, [x0, #16]
   121e8:	mov	w0, #0x100                 	// #256
   121ec:	mov	x29, sp
   121f0:	mov	w22, w2
   121f4:	mov	x20, x1
   121f8:	csel	x21, x8, x9, eq  // eq = none
   121fc:	bl	57e0 <malloc@plt>
   12200:	str	x0, [x19, #32]
   12204:	tbnz	w22, #1, 12210 <xregcomp@@Base+0x60>
   12208:	str	xzr, [x19, #40]
   1220c:	b	12260 <xregcomp@@Base+0xb0>
   12210:	mov	w0, #0x100                 	// #256
   12214:	bl	57e0 <malloc@plt>
   12218:	str	x0, [x19, #40]
   1221c:	cbz	x0, 122f8 <xregcomp@@Base+0x148>
   12220:	bl	56a0 <__ctype_b_loc@plt>
   12224:	mov	x23, x0
   12228:	mov	x25, xzr
   1222c:	ldr	x8, [x23]
   12230:	ldrh	w8, [x8, x25, lsl #1]
   12234:	tbnz	w8, #8, 12240 <xregcomp@@Base+0x90>
   12238:	mov	w8, w25
   1223c:	b	1224c <xregcomp@@Base+0x9c>
   12240:	bl	5760 <__ctype_tolower_loc@plt>
   12244:	ldr	x8, [x0]
   12248:	ldr	w8, [x8, x25, lsl #2]
   1224c:	ldr	x9, [x19, #40]
   12250:	strb	w8, [x9, x25]
   12254:	add	x25, x25, #0x1
   12258:	cmp	x25, #0x100
   1225c:	b.ne	1222c <xregcomp@@Base+0x7c>  // b.any
   12260:	tbnz	w22, #2, 12270 <xregcomp@@Base+0xc0>
   12264:	ldrb	w8, [x19, #56]
   12268:	and	w8, w8, #0x7f
   1226c:	b	12280 <xregcomp@@Base+0xd0>
   12270:	ldrb	w8, [x19, #56]
   12274:	and	x9, x21, x24
   12278:	orr	x21, x9, #0x100
   1227c:	orr	w8, w8, #0xffffff80
   12280:	lsl	w9, w22, #1
   12284:	strb	w8, [x19, #56]
   12288:	and	w9, w9, #0x10
   1228c:	and	w8, w8, #0xffffffef
   12290:	orr	w8, w8, w9
   12294:	mov	x0, x20
   12298:	strb	w8, [x19, #56]
   1229c:	bl	5430 <strlen@plt>
   122a0:	mov	x1, x0
   122a4:	mov	x0, x20
   122a8:	mov	x2, x21
   122ac:	mov	x3, x19
   122b0:	bl	f834 <xre_compile_pattern@@Base+0x50>
   122b4:	cmp	w0, #0x10
   122b8:	mov	w8, #0x8                   	// #8
   122bc:	csel	w0, w8, w0, eq  // eq = none
   122c0:	cbnz	w0, 122fc <xregcomp@@Base+0x14c>
   122c4:	ldr	x8, [x19, #32]
   122c8:	cbz	x8, 122f0 <xregcomp@@Base+0x140>
   122cc:	mov	x0, x19
   122d0:	bl	d490 <xre_compile_fastmap@@Base+0x4>
   122d4:	cmn	w0, #0x2
   122d8:	b.ne	122f0 <xregcomp@@Base+0x140>  // b.any
   122dc:	ldr	x0, [x19, #32]
   122e0:	bl	5520 <free@plt>
   122e4:	mov	w0, wzr
   122e8:	str	xzr, [x19, #32]
   122ec:	b	122fc <xregcomp@@Base+0x14c>
   122f0:	mov	w0, wzr
   122f4:	b	122fc <xregcomp@@Base+0x14c>
   122f8:	mov	w0, #0xc                   	// #12
   122fc:	ldp	x20, x19, [sp, #64]
   12300:	ldp	x22, x21, [sp, #48]
   12304:	ldp	x24, x23, [sp, #32]
   12308:	ldr	x25, [sp, #16]
   1230c:	ldp	x29, x30, [sp], #80
   12310:	ret

0000000000012314 <xregexec@@Base>:
   12314:	sub	sp, sp, #0xb0
   12318:	stp	x24, x23, [sp, #128]
   1231c:	mov	x24, x0
   12320:	mov	x0, x1
   12324:	stp	x29, x30, [sp, #112]
   12328:	stp	x22, x21, [sp, #144]
   1232c:	stp	x20, x19, [sp, #160]
   12330:	add	x29, sp, #0x70
   12334:	mov	w23, w4
   12338:	mov	x19, x3
   1233c:	mov	x20, x2
   12340:	mov	x21, x1
   12344:	bl	5430 <strlen@plt>
   12348:	ldp	q0, q1, [x24, #32]
   1234c:	ldrb	w8, [x24, #56]
   12350:	ldp	q3, q2, [x24]
   12354:	ubfiz	w10, w23, #5, #2
   12358:	stp	q0, q1, [sp, #48]
   1235c:	ldrb	w9, [sp, #72]
   12360:	mov	x22, x0
   12364:	stp	q3, q2, [sp, #16]
   12368:	and	w9, w9, #0x99999999
   1236c:	orr	w9, w10, w9
   12370:	orr	w9, w9, #0x4
   12374:	strb	w9, [sp, #72]
   12378:	cbz	x20, 12400 <xregexec@@Base+0xec>
   1237c:	tbnz	w8, #4, 12400 <xregexec@@Base+0xec>
   12380:	lsl	x0, x20, #3
   12384:	stur	w20, [x29, #-24]
   12388:	bl	57e0 <malloc@plt>
   1238c:	stur	x0, [x29, #-16]
   12390:	cbz	x0, 12430 <xregexec@@Base+0x11c>
   12394:	add	x8, x0, x20, lsl #2
   12398:	add	x0, sp, #0x10
   1239c:	sub	x7, x29, #0x18
   123a0:	mov	x1, xzr
   123a4:	mov	w2, wzr
   123a8:	mov	x3, x21
   123ac:	mov	w4, w22
   123b0:	mov	w5, wzr
   123b4:	mov	w6, w22
   123b8:	stur	x8, [x29, #-8]
   123bc:	str	w22, [sp]
   123c0:	bl	58f0 <xre_search_2@plt>
   123c4:	mov	w21, w0
   123c8:	tbnz	w0, #31, 12438 <xregexec@@Base+0x124>
   123cc:	ldp	x0, x9, [x29, #-16]
   123d0:	mov	x8, xzr
   123d4:	mov	w10, #0x1                   	// #1
   123d8:	ldr	w11, [x0, x8, lsl #2]
   123dc:	add	x12, x19, x8, lsl #3
   123e0:	str	w11, [x12]
   123e4:	ldr	w11, [x9, x8, lsl #2]
   123e8:	mov	w8, w10
   123ec:	cmp	x8, x20
   123f0:	add	w10, w10, #0x1
   123f4:	str	w11, [x12, #4]
   123f8:	b.cc	123d8 <xregexec@@Base+0xc4>  // b.lo, b.ul, b.last
   123fc:	b	1243c <xregexec@@Base+0x128>
   12400:	add	x0, sp, #0x10
   12404:	mov	x1, xzr
   12408:	mov	w2, wzr
   1240c:	mov	x3, x21
   12410:	mov	w4, w22
   12414:	mov	w5, wzr
   12418:	mov	w6, w22
   1241c:	mov	x7, xzr
   12420:	str	w22, [sp]
   12424:	bl	58f0 <xre_search_2@plt>
   12428:	mov	w21, w0
   1242c:	b	12440 <xregexec@@Base+0x12c>
   12430:	mov	w0, #0x1                   	// #1
   12434:	b	12444 <xregexec@@Base+0x130>
   12438:	ldur	x0, [x29, #-16]
   1243c:	bl	5520 <free@plt>
   12440:	lsr	w0, w21, #31
   12444:	ldp	x20, x19, [sp, #160]
   12448:	ldp	x22, x21, [sp, #144]
   1244c:	ldp	x24, x23, [sp, #128]
   12450:	ldp	x29, x30, [sp, #112]
   12454:	add	sp, sp, #0xb0
   12458:	ret

000000000001245c <xregerror@@Base>:
   1245c:	stp	x29, x30, [sp, #-48]!
   12460:	cmp	w0, #0x11
   12464:	stp	x22, x21, [sp, #16]
   12468:	stp	x20, x19, [sp, #32]
   1246c:	mov	x29, sp
   12470:	b.cs	124e0 <xregerror@@Base+0x84>  // b.hs, b.nlast
   12474:	adrp	x8, 28000 <xexit@@Base+0x14018>
   12478:	add	x8, x8, #0x9e0
   1247c:	ldr	x22, [x8, w0, uxtw #3]
   12480:	mov	x21, x3
   12484:	mov	x19, x2
   12488:	mov	x0, x22
   1248c:	bl	5430 <strlen@plt>
   12490:	add	x20, x0, #0x1
   12494:	cbz	x21, 124cc <xregerror@@Base+0x70>
   12498:	cmp	x20, x21
   1249c:	b.ls	124bc <xregerror@@Base+0x60>  // b.plast
   124a0:	sub	x21, x21, #0x1
   124a4:	mov	x0, x19
   124a8:	mov	x1, x22
   124ac:	mov	x2, x21
   124b0:	bl	5390 <memcpy@plt>
   124b4:	strb	wzr, [x19, x21]
   124b8:	b	124cc <xregerror@@Base+0x70>
   124bc:	mov	x0, x19
   124c0:	mov	x1, x22
   124c4:	mov	x2, x20
   124c8:	bl	5390 <memcpy@plt>
   124cc:	mov	x0, x20
   124d0:	ldp	x20, x19, [sp, #32]
   124d4:	ldp	x22, x21, [sp, #16]
   124d8:	ldp	x29, x30, [sp], #48
   124dc:	ret
   124e0:	bl	5820 <abort@plt>

00000000000124e4 <xregfree@@Base>:
   124e4:	stp	x29, x30, [sp, #-32]!
   124e8:	str	x19, [sp, #16]
   124ec:	mov	x19, x0
   124f0:	ldr	x0, [x0]
   124f4:	mov	x29, sp
   124f8:	bl	5520 <free@plt>
   124fc:	ldr	x0, [x19, #32]
   12500:	stp	xzr, xzr, [x19]
   12504:	str	xzr, [x19, #16]
   12508:	bl	5520 <free@plt>
   1250c:	ldrb	w8, [x19, #56]
   12510:	ldr	x0, [x19, #40]
   12514:	str	xzr, [x19, #32]
   12518:	and	w8, w8, #0xfffffff7
   1251c:	strb	w8, [x19, #56]
   12520:	bl	5520 <free@plt>
   12524:	str	xzr, [x19, #40]
   12528:	ldr	x19, [sp, #16]
   1252c:	ldp	x29, x30, [sp], #32
   12530:	ret
   12534:	stp	x29, x30, [sp, #-64]!
   12538:	stp	x22, x21, [sp, #32]
   1253c:	stp	x20, x19, [sp, #48]
   12540:	ldr	x8, [x0]
   12544:	mov	x29, sp
   12548:	str	x23, [sp, #16]
   1254c:	add	x22, x8, #0x2
   12550:	cmp	x22, x1
   12554:	str	x22, [x29, #24]
   12558:	b.cs	12664 <xregfree@@Base+0x180>  // b.hs, b.nlast
   1255c:	mov	x20, x2
   12560:	mov	x21, x1
   12564:	mov	x19, x0
   12568:	ldrb	w8, [x22]
   1256c:	cmp	w8, #0xf
   12570:	b.eq	1259c <xregfree@@Base+0xb8>  // b.none
   12574:	cmp	w8, #0x7
   12578:	b.eq	12678 <xregfree@@Base+0x194>  // b.none
   1257c:	add	x0, x29, #0x18
   12580:	mov	x1, x21
   12584:	mov	x2, x20
   12588:	bl	1272c <xregfree@@Base+0x248>
   1258c:	tst	w0, #0xff
   12590:	b.eq	12664 <xregfree@@Base+0x180>  // b.none
   12594:	ldr	x22, [x29, #24]
   12598:	b	1265c <xregfree@@Base+0x178>
   1259c:	add	x8, x22, #0x1
   125a0:	str	x8, [x29, #24]
   125a4:	ldrb	w8, [x22, #1]
   125a8:	ldrsb	w9, [x22, #2]
   125ac:	add	x22, x22, #0x3
   125b0:	str	x22, [x29, #24]
   125b4:	bfi	w8, w9, #8, #24
   125b8:	tbnz	w8, #31, 1265c <xregfree@@Base+0x178>
   125bc:	add	x9, x22, w8, sxtw
   125c0:	ldurb	w9, [x9, #-3]
   125c4:	cmp	w9, #0xe
   125c8:	b.ne	12628 <xregfree@@Base+0x144>  // b.any
   125cc:	sxtw	x8, w8
   125d0:	add	x23, x22, x8
   125d4:	sub	x1, x23, #0x3
   125d8:	mov	x0, x22
   125dc:	mov	x2, x20
   125e0:	bl	12698 <xregfree@@Base+0x1b4>
   125e4:	tst	w0, #0xff
   125e8:	b.eq	1266c <xregfree@@Base+0x188>  // b.none
   125ec:	ldrb	w8, [x23]
   125f0:	cmp	w8, #0xf
   125f4:	b.ne	12624 <xregfree@@Base+0x140>  // b.any
   125f8:	ldrb	w8, [x23, #1]
   125fc:	ldrsb	x9, [x23, #2]
   12600:	add	x22, x23, #0x3
   12604:	bfi	x8, x9, #8, #56
   12608:	add	x9, x8, x22
   1260c:	ldurb	w9, [x9, #-3]
   12610:	cmp	w9, #0xe
   12614:	b.eq	125bc <xregfree@@Base+0xd8>  // b.none
   12618:	str	x22, [x29, #24]
   1261c:	sub	x22, x22, #0x3
   12620:	b	12628 <xregfree@@Base+0x144>
   12624:	mov	x22, x23
   12628:	str	x22, [x29, #24]
   1262c:	ldurb	w8, [x22, #-2]
   12630:	ldursb	x9, [x22, #-1]
   12634:	mov	x0, x22
   12638:	mov	x2, x20
   1263c:	bfi	x8, x9, #8, #56
   12640:	add	x23, x22, x8
   12644:	mov	x1, x23
   12648:	bl	12698 <xregfree@@Base+0x1b4>
   1264c:	tst	w0, #0xff
   12650:	b.eq	12664 <xregfree@@Base+0x180>  // b.none
   12654:	str	x23, [x29, #24]
   12658:	mov	x22, x23
   1265c:	cmp	x22, x21
   12660:	b.cc	12568 <xregfree@@Base+0x84>  // b.lo, b.ul, b.last
   12664:	mov	w0, wzr
   12668:	b	12684 <xregfree@@Base+0x1a0>
   1266c:	mov	w0, wzr
   12670:	str	x22, [x29, #24]
   12674:	b	12684 <xregfree@@Base+0x1a0>
   12678:	add	x8, x22, #0x2
   1267c:	str	x8, [x19]
   12680:	mov	w0, #0x1                   	// #1
   12684:	ldp	x20, x19, [sp, #48]
   12688:	ldp	x22, x21, [sp, #32]
   1268c:	ldr	x23, [sp, #16]
   12690:	ldp	x29, x30, [sp], #64
   12694:	ret
   12698:	sub	sp, sp, #0x30
   1269c:	cmp	x0, x1
   126a0:	stp	x29, x30, [sp, #16]
   126a4:	stp	x20, x19, [sp, #32]
   126a8:	add	x29, sp, #0x10
   126ac:	str	x0, [sp, #8]
   126b0:	b.cs	12710 <xregfree@@Base+0x22c>  // b.hs, b.nlast
   126b4:	mov	x19, x2
   126b8:	mov	x20, x1
   126bc:	ldrb	w8, [x0]
   126c0:	cmp	w8, #0xf
   126c4:	b.ne	126ec <xregfree@@Base+0x208>  // b.any
   126c8:	add	x8, x0, #0x1
   126cc:	str	x8, [sp, #8]
   126d0:	ldrb	w8, [x0, #1]
   126d4:	ldrsb	x9, [x0, #2]
   126d8:	bfi	x8, x9, #8, #56
   126dc:	add	x8, x0, x8
   126e0:	add	x0, x8, #0x3
   126e4:	str	x0, [sp, #8]
   126e8:	b	12708 <xregfree@@Base+0x224>
   126ec:	add	x0, sp, #0x8
   126f0:	mov	x1, x20
   126f4:	mov	x2, x19
   126f8:	bl	1272c <xregfree@@Base+0x248>
   126fc:	tst	w0, #0xff
   12700:	b.eq	12724 <xregfree@@Base+0x240>  // b.none
   12704:	ldr	x0, [sp, #8]
   12708:	cmp	x0, x20
   1270c:	b.cc	126bc <xregfree@@Base+0x1d8>  // b.lo, b.ul, b.last
   12710:	mov	w0, #0x1                   	// #1
   12714:	ldp	x20, x19, [sp, #32]
   12718:	ldp	x29, x30, [sp, #16]
   1271c:	add	sp, sp, #0x30
   12720:	ret
   12724:	mov	w0, wzr
   12728:	b	12714 <xregfree@@Base+0x230>
   1272c:	stp	x29, x30, [sp, #-48]!
   12730:	stp	x20, x19, [sp, #32]
   12734:	ldr	x9, [x0]
   12738:	mov	x29, sp
   1273c:	mov	x19, x0
   12740:	mov	w0, wzr
   12744:	add	x8, x9, #0x1
   12748:	str	x8, [x29, #24]
   1274c:	ldrb	w10, [x9]
   12750:	str	x21, [sp, #16]
   12754:	cmp	w10, #0x1d
   12758:	b.hi	12780 <xregfree@@Base+0x29c>  // b.pmore
   1275c:	adrp	x11, 14000 <xexit@@Base+0x18>
   12760:	add	x11, x11, #0x988
   12764:	adr	x12, 12778 <xregfree@@Base+0x294>
   12768:	ldrb	w13, [x11, x10]
   1276c:	add	x12, x12, x13, lsl #2
   12770:	mov	x20, x2
   12774:	br	x12
   12778:	mov	w0, #0x1                   	// #1
   1277c:	str	x8, [x19]
   12780:	ldp	x20, x19, [sp, #32]
   12784:	ldr	x21, [sp, #16]
   12788:	ldp	x29, x30, [sp], #48
   1278c:	ret
   12790:	ldrb	w21, [x8]
   12794:	add	x0, x29, #0x18
   12798:	mov	x2, x20
   1279c:	bl	12534 <xregfree@@Base+0x50>
   127a0:	add	x8, x20, x21, lsl #3
   127a4:	ldrb	w9, [x8]
   127a8:	mvn	w10, w9
   127ac:	tst	w10, #0x3
   127b0:	b.ne	127bc <xregfree@@Base+0x2d8>  // b.any
   127b4:	bfxil	w9, w0, #0, #2
   127b8:	strb	w9, [x8]
   127bc:	tst	w0, #0xff
   127c0:	b.eq	12824 <xregfree@@Base+0x340>  // b.none
   127c4:	ldr	x8, [x29, #24]
   127c8:	b	12778 <xregfree@@Base+0x294>
   127cc:	ldrb	w9, [x8]
   127d0:	lsl	x9, x9, #3
   127d4:	ldrb	w9, [x20, x9]
   127d8:	tst	w9, #0x3
   127dc:	b.ne	12778 <xregfree@@Base+0x294>  // b.any
   127e0:	b	12824 <xregfree@@Base+0x340>
   127e4:	ldrsb	w8, [x9, #2]
   127e8:	ldrb	w10, [x9, #1]
   127ec:	add	x9, x9, #0x3
   127f0:	str	x9, [x29, #24]
   127f4:	lsl	w8, w8, #8
   127f8:	orr	x8, x8, x10
   127fc:	tbnz	w8, #31, 12824 <xregfree@@Base+0x340>
   12800:	add	x8, x9, x8
   12804:	b	1284c <xregfree@@Base+0x368>
   12808:	mov	x8, x9
   1280c:	ldrb	w10, [x8, #3]!
   12810:	ldrsb	w11, [x8, #1]
   12814:	bfi	w10, w11, #8, #24
   12818:	add	x11, x8, #0x2
   1281c:	str	x11, [x29, #24]
   12820:	cbz	w10, 1283c <xregfree@@Base+0x358>
   12824:	mov	w0, wzr
   12828:	b	12780 <xregfree@@Base+0x29c>
   1282c:	add	x8, x9, #0x5
   12830:	mov	w0, wzr
   12834:	str	x8, [x29, #24]
   12838:	b	12780 <xregfree@@Base+0x29c>
   1283c:	ldrb	w10, [x9, #1]
   12840:	ldrsb	x9, [x9, #2]
   12844:	bfi	x10, x9, #8, #56
   12848:	add	x8, x8, x10
   1284c:	str	x8, [x29, #24]
   12850:	b	12778 <xregfree@@Base+0x294>
   12854:	ldr	x9, [x1]
   12858:	mov	w8, w0
   1285c:	mov	w0, #0xb                   	// #11
   12860:	cmp	x9, x2
   12864:	b.eq	128dc <xregfree@@Base+0x3f8>  // b.none
   12868:	tst	x4, #0x10000
   1286c:	add	x10, x9, #0x1
   12870:	csel	w0, wzr, w0, eq  // eq = none
   12874:	and	x8, x8, #0xff
   12878:	str	x10, [x1]
   1287c:	cbz	x3, 1288c <xregfree@@Base+0x3a8>
   12880:	ldrb	w9, [x9]
   12884:	ldrb	w8, [x3, x8]
   12888:	add	x9, x3, x9
   1288c:	ldrb	w9, [x9]
   12890:	cmp	w8, w9
   12894:	b.hi	128dc <xregfree@@Base+0x3f8>  // b.pmore
   12898:	add	w9, w9, #0x1
   1289c:	mov	w10, #0x1                   	// #1
   128a0:	and	x11, x8, #0xff
   128a4:	cbz	x3, 128b4 <xregfree@@Base+0x3d0>
   128a8:	ldrb	w11, [x3, x11]
   128ac:	and	w12, w11, #0x7
   128b0:	b	128b8 <xregfree@@Base+0x3d4>
   128b4:	and	w12, w8, #0x7
   128b8:	lsr	x11, x11, #3
   128bc:	ldrb	w13, [x5, x11]
   128c0:	lsl	w12, w10, w12
   128c4:	add	w8, w8, #0x1
   128c8:	cmp	w9, w8
   128cc:	orr	w12, w13, w12
   128d0:	strb	w12, [x5, x11]
   128d4:	b.ne	128a0 <xregfree@@Base+0x3bc>  // b.any
   128d8:	mov	w0, wzr
   128dc:	ret

00000000000128e0 <concat_length@@Base>:
   128e0:	sub	sp, sp, #0x120
   128e4:	stp	x29, x30, [sp, #224]
   128e8:	add	x29, sp, #0xe0
   128ec:	mov	x8, #0xffffffffffffffc8    	// #-56
   128f0:	mov	x9, sp
   128f4:	sub	x10, x29, #0x58
   128f8:	stp	x20, x19, [sp, #272]
   128fc:	movk	x8, #0xff80, lsl #32
   12900:	add	x11, x29, #0x40
   12904:	add	x9, x9, #0x80
   12908:	add	x20, x10, #0x38
   1290c:	str	x28, [sp, #240]
   12910:	stp	x22, x21, [sp, #256]
   12914:	stp	x1, x2, [x29, #-88]
   12918:	stp	x3, x4, [x29, #-72]
   1291c:	stp	x5, x6, [x29, #-56]
   12920:	stur	x7, [x29, #-40]
   12924:	stp	q0, q1, [sp]
   12928:	stp	q2, q3, [sp, #32]
   1292c:	stp	q4, q5, [sp, #64]
   12930:	stp	q6, q7, [sp, #96]
   12934:	stp	x9, x8, [x29, #-16]
   12938:	stp	x11, x20, [x29, #-32]
   1293c:	cbz	x0, 12994 <concat_length@@Base+0xb4>
   12940:	ldur	w22, [x29, #-8]
   12944:	ldur	x21, [x29, #-32]
   12948:	mov	x19, xzr
   1294c:	bl	5430 <strlen@plt>
   12950:	add	x19, x0, x19
   12954:	tbnz	w22, #31, 12960 <concat_length@@Base+0x80>
   12958:	mov	w8, w22
   1295c:	b	1297c <concat_length@@Base+0x9c>
   12960:	cmn	w22, #0x8
   12964:	add	w8, w22, #0x8
   12968:	b.gt	1297c <concat_length@@Base+0x9c>
   1296c:	add	x10, x20, w22, sxtw
   12970:	mov	x9, x21
   12974:	mov	x21, x10
   12978:	b	12980 <concat_length@@Base+0xa0>
   1297c:	add	x9, x21, #0x8
   12980:	ldr	x0, [x21]
   12984:	mov	x21, x9
   12988:	mov	w22, w8
   1298c:	cbnz	x0, 1294c <concat_length@@Base+0x6c>
   12990:	b	12998 <concat_length@@Base+0xb8>
   12994:	mov	x19, xzr
   12998:	mov	x0, x19
   1299c:	ldp	x20, x19, [sp, #272]
   129a0:	ldp	x22, x21, [sp, #256]
   129a4:	ldr	x28, [sp, #240]
   129a8:	ldp	x29, x30, [sp, #224]
   129ac:	add	sp, sp, #0x120
   129b0:	ret

00000000000129b4 <concat_copy@@Base>:
   129b4:	sub	sp, sp, #0x120
   129b8:	stp	x29, x30, [sp, #208]
   129bc:	add	x29, sp, #0xd0
   129c0:	mov	x8, #0xffffffffffffffd0    	// #-48
   129c4:	mov	x9, sp
   129c8:	sub	x10, x29, #0x50
   129cc:	stp	x24, x23, [sp, #240]
   129d0:	stp	x20, x19, [sp, #272]
   129d4:	mov	x19, x0
   129d8:	movk	x8, #0xff80, lsl #32
   129dc:	add	x11, x29, #0x50
   129e0:	add	x9, x9, #0x80
   129e4:	add	x23, x10, #0x30
   129e8:	mov	x20, x0
   129ec:	stp	x28, x25, [sp, #224]
   129f0:	stp	x22, x21, [sp, #256]
   129f4:	stp	x2, x3, [x29, #-80]
   129f8:	stp	x4, x5, [x29, #-64]
   129fc:	stp	x6, x7, [x29, #-48]
   12a00:	stp	q1, q2, [sp, #16]
   12a04:	stp	q3, q4, [sp, #48]
   12a08:	str	q0, [sp]
   12a0c:	stp	q5, q6, [sp, #80]
   12a10:	str	q7, [sp, #112]
   12a14:	stp	x9, x8, [x29, #-16]
   12a18:	stp	x11, x23, [x29, #-32]
   12a1c:	cbz	x1, 12a8c <concat_copy@@Base+0xd8>
   12a20:	ldur	w25, [x29, #-8]
   12a24:	ldur	x24, [x29, #-32]
   12a28:	mov	x21, x1
   12a2c:	mov	x20, x19
   12a30:	mov	x0, x21
   12a34:	bl	5430 <strlen@plt>
   12a38:	mov	x22, x0
   12a3c:	mov	x0, x20
   12a40:	mov	x1, x21
   12a44:	mov	x2, x22
   12a48:	bl	5390 <memcpy@plt>
   12a4c:	add	x20, x20, x22
   12a50:	tbnz	w25, #31, 12a5c <concat_copy@@Base+0xa8>
   12a54:	mov	w8, w25
   12a58:	b	12a78 <concat_copy@@Base+0xc4>
   12a5c:	cmn	w25, #0x8
   12a60:	add	w8, w25, #0x8
   12a64:	b.gt	12a78 <concat_copy@@Base+0xc4>
   12a68:	add	x10, x23, w25, sxtw
   12a6c:	mov	x9, x24
   12a70:	mov	x24, x10
   12a74:	b	12a7c <concat_copy@@Base+0xc8>
   12a78:	add	x9, x24, #0x8
   12a7c:	ldr	x21, [x24]
   12a80:	mov	w25, w8
   12a84:	mov	x24, x9
   12a88:	cbnz	x21, 12a30 <concat_copy@@Base+0x7c>
   12a8c:	strb	wzr, [x20]
   12a90:	mov	x0, x19
   12a94:	ldp	x20, x19, [sp, #272]
   12a98:	ldp	x22, x21, [sp, #256]
   12a9c:	ldp	x24, x23, [sp, #240]
   12aa0:	ldp	x28, x25, [sp, #224]
   12aa4:	ldp	x29, x30, [sp, #208]
   12aa8:	add	sp, sp, #0x120
   12aac:	ret

0000000000012ab0 <concat_copy2@@Base>:
   12ab0:	sub	sp, sp, #0x130
   12ab4:	stp	x29, x30, [sp, #224]
   12ab8:	add	x29, sp, #0xe0
   12abc:	stp	x28, x25, [sp, #240]
   12ac0:	stp	x24, x23, [sp, #256]
   12ac4:	stp	x22, x21, [sp, #272]
   12ac8:	stp	x20, x19, [sp, #288]
   12acc:	stp	x1, x2, [x29, #-88]
   12ad0:	stp	x3, x4, [x29, #-72]
   12ad4:	stp	x5, x6, [x29, #-56]
   12ad8:	stur	x7, [x29, #-40]
   12adc:	stp	q0, q1, [sp]
   12ae0:	stp	q2, q3, [sp, #32]
   12ae4:	stp	q4, q5, [sp, #64]
   12ae8:	stp	q6, q7, [sp, #96]
   12aec:	adrp	x22, 28000 <xexit@@Base+0x14018>
   12af0:	ldr	x22, [x22, #3848]
   12af4:	mov	x8, #0xffffffffffffffc8    	// #-56
   12af8:	mov	x9, sp
   12afc:	movk	x8, #0xff80, lsl #32
   12b00:	ldr	x19, [x22]
   12b04:	sub	x10, x29, #0x58
   12b08:	add	x9, x9, #0x80
   12b0c:	add	x23, x10, #0x38
   12b10:	stp	x9, x8, [x29, #-16]
   12b14:	add	x8, x29, #0x50
   12b18:	stp	x8, x23, [x29, #-32]
   12b1c:	cbz	x0, 12b88 <concat_copy2@@Base+0xd8>
   12b20:	ldur	w25, [x29, #-8]
   12b24:	ldur	x24, [x29, #-32]
   12b28:	mov	x20, x0
   12b2c:	mov	x0, x20
   12b30:	bl	5430 <strlen@plt>
   12b34:	mov	x21, x0
   12b38:	mov	x0, x19
   12b3c:	mov	x1, x20
   12b40:	mov	x2, x21
   12b44:	bl	5390 <memcpy@plt>
   12b48:	add	x19, x19, x21
   12b4c:	tbnz	w25, #31, 12b58 <concat_copy2@@Base+0xa8>
   12b50:	mov	w8, w25
   12b54:	b	12b74 <concat_copy2@@Base+0xc4>
   12b58:	cmn	w25, #0x8
   12b5c:	add	w8, w25, #0x8
   12b60:	b.gt	12b74 <concat_copy2@@Base+0xc4>
   12b64:	add	x10, x23, w25, sxtw
   12b68:	mov	x9, x24
   12b6c:	mov	x24, x10
   12b70:	b	12b78 <concat_copy2@@Base+0xc8>
   12b74:	add	x9, x24, #0x8
   12b78:	ldr	x20, [x24]
   12b7c:	mov	w25, w8
   12b80:	mov	x24, x9
   12b84:	cbnz	x20, 12b2c <concat_copy2@@Base+0x7c>
   12b88:	strb	wzr, [x19]
   12b8c:	ldr	x0, [x22]
   12b90:	ldp	x20, x19, [sp, #288]
   12b94:	ldp	x22, x21, [sp, #272]
   12b98:	ldp	x24, x23, [sp, #256]
   12b9c:	ldp	x28, x25, [sp, #240]
   12ba0:	ldp	x29, x30, [sp, #224]
   12ba4:	add	sp, sp, #0x130
   12ba8:	ret

0000000000012bac <concat@@Base>:
   12bac:	sub	sp, sp, #0x140
   12bb0:	stp	x29, x30, [sp, #224]
   12bb4:	add	x29, sp, #0xe0
   12bb8:	stp	x22, x21, [sp, #288]
   12bbc:	mov	x21, #0xffffffffffffffc8    	// #-56
   12bc0:	mov	x8, sp
   12bc4:	sub	x9, x29, #0x58
   12bc8:	stp	x24, x23, [sp, #272]
   12bcc:	stp	x20, x19, [sp, #304]
   12bd0:	mov	x19, x0
   12bd4:	movk	x21, #0xff80, lsl #32
   12bd8:	add	x24, x29, #0x60
   12bdc:	add	x22, x8, #0x80
   12be0:	add	x23, x9, #0x38
   12be4:	str	x28, [sp, #240]
   12be8:	stp	x26, x25, [sp, #256]
   12bec:	stp	x1, x2, [x29, #-88]
   12bf0:	stp	x3, x4, [x29, #-72]
   12bf4:	stp	x5, x6, [x29, #-56]
   12bf8:	stur	x7, [x29, #-40]
   12bfc:	stp	q0, q1, [sp]
   12c00:	stp	q2, q3, [sp, #32]
   12c04:	stp	q4, q5, [sp, #64]
   12c08:	stp	q6, q7, [sp, #96]
   12c0c:	stp	x22, x21, [x29, #-16]
   12c10:	stp	x24, x23, [x29, #-32]
   12c14:	cbz	x0, 12c74 <concat@@Base+0xc8>
   12c18:	ldur	w26, [x29, #-8]
   12c1c:	ldur	x25, [x29, #-32]
   12c20:	mov	x20, xzr
   12c24:	mov	x0, x19
   12c28:	bl	5430 <strlen@plt>
   12c2c:	add	x20, x0, x20
   12c30:	tbnz	w26, #31, 12c3c <concat@@Base+0x90>
   12c34:	mov	w8, w26
   12c38:	b	12c58 <concat@@Base+0xac>
   12c3c:	cmn	w26, #0x8
   12c40:	add	w8, w26, #0x8
   12c44:	b.gt	12c58 <concat@@Base+0xac>
   12c48:	add	x10, x23, w26, sxtw
   12c4c:	mov	x9, x25
   12c50:	mov	x25, x10
   12c54:	b	12c5c <concat@@Base+0xb0>
   12c58:	add	x9, x25, #0x8
   12c5c:	ldr	x0, [x25]
   12c60:	mov	x25, x9
   12c64:	mov	w26, w8
   12c68:	cbnz	x0, 12c28 <concat@@Base+0x7c>
   12c6c:	add	x0, x20, #0x1
   12c70:	b	12c78 <concat@@Base+0xcc>
   12c74:	mov	w0, #0x1                   	// #1
   12c78:	bl	5770 <xmalloc@plt>
   12c7c:	mov	x20, x0
   12c80:	stp	x22, x21, [x29, #-16]
   12c84:	mov	x21, x0
   12c88:	stp	x24, x23, [x29, #-32]
   12c8c:	cbz	x19, 12cf8 <concat@@Base+0x14c>
   12c90:	ldur	w25, [x29, #-8]
   12c94:	ldur	x24, [x29, #-32]
   12c98:	mov	x21, x20
   12c9c:	mov	x0, x19
   12ca0:	bl	5430 <strlen@plt>
   12ca4:	mov	x22, x0
   12ca8:	mov	x0, x21
   12cac:	mov	x1, x19
   12cb0:	mov	x2, x22
   12cb4:	bl	5390 <memcpy@plt>
   12cb8:	add	x21, x21, x22
   12cbc:	tbnz	w25, #31, 12cc8 <concat@@Base+0x11c>
   12cc0:	mov	w8, w25
   12cc4:	b	12ce4 <concat@@Base+0x138>
   12cc8:	cmn	w25, #0x8
   12ccc:	add	w8, w25, #0x8
   12cd0:	b.gt	12ce4 <concat@@Base+0x138>
   12cd4:	add	x10, x23, w25, sxtw
   12cd8:	mov	x9, x24
   12cdc:	mov	x24, x10
   12ce0:	b	12ce8 <concat@@Base+0x13c>
   12ce4:	add	x9, x24, #0x8
   12ce8:	ldr	x19, [x24]
   12cec:	mov	w25, w8
   12cf0:	mov	x24, x9
   12cf4:	cbnz	x19, 12c9c <concat@@Base+0xf0>
   12cf8:	strb	wzr, [x21]
   12cfc:	mov	x0, x20
   12d00:	ldp	x20, x19, [sp, #304]
   12d04:	ldp	x22, x21, [sp, #288]
   12d08:	ldp	x24, x23, [sp, #272]
   12d0c:	ldp	x26, x25, [sp, #256]
   12d10:	ldr	x28, [sp, #240]
   12d14:	ldp	x29, x30, [sp, #224]
   12d18:	add	sp, sp, #0x140
   12d1c:	ret

0000000000012d20 <reconcat@@Base>:
   12d20:	sub	sp, sp, #0x130
   12d24:	stp	x29, x30, [sp, #208]
   12d28:	add	x29, sp, #0xd0
   12d2c:	stp	x22, x21, [sp, #272]
   12d30:	mov	x22, #0xffffffffffffffd0    	// #-48
   12d34:	mov	x8, sp
   12d38:	sub	x9, x29, #0x50
   12d3c:	stp	x26, x25, [sp, #240]
   12d40:	stp	x24, x23, [sp, #256]
   12d44:	stp	x20, x19, [sp, #288]
   12d48:	mov	x20, x1
   12d4c:	mov	x19, x0
   12d50:	movk	x22, #0xff80, lsl #32
   12d54:	add	x25, x29, #0x60
   12d58:	add	x23, x8, #0x80
   12d5c:	add	x24, x9, #0x30
   12d60:	stp	x28, x27, [sp, #224]
   12d64:	stp	x2, x3, [x29, #-80]
   12d68:	stp	x4, x5, [x29, #-64]
   12d6c:	stp	x6, x7, [x29, #-48]
   12d70:	stp	q1, q2, [sp, #16]
   12d74:	stp	q3, q4, [sp, #48]
   12d78:	str	q0, [sp]
   12d7c:	stp	q5, q6, [sp, #80]
   12d80:	str	q7, [sp, #112]
   12d84:	stp	x23, x22, [x29, #-16]
   12d88:	stp	x25, x24, [x29, #-32]
   12d8c:	cbz	x1, 12dec <reconcat@@Base+0xcc>
   12d90:	ldur	w27, [x29, #-8]
   12d94:	ldur	x26, [x29, #-32]
   12d98:	mov	x21, xzr
   12d9c:	mov	x0, x20
   12da0:	bl	5430 <strlen@plt>
   12da4:	add	x21, x0, x21
   12da8:	tbnz	w27, #31, 12db4 <reconcat@@Base+0x94>
   12dac:	mov	w8, w27
   12db0:	b	12dd0 <reconcat@@Base+0xb0>
   12db4:	cmn	w27, #0x8
   12db8:	add	w8, w27, #0x8
   12dbc:	b.gt	12dd0 <reconcat@@Base+0xb0>
   12dc0:	add	x10, x24, w27, sxtw
   12dc4:	mov	x9, x26
   12dc8:	mov	x26, x10
   12dcc:	b	12dd4 <reconcat@@Base+0xb4>
   12dd0:	add	x9, x26, #0x8
   12dd4:	ldr	x0, [x26]
   12dd8:	mov	x26, x9
   12ddc:	mov	w27, w8
   12de0:	cbnz	x0, 12da0 <reconcat@@Base+0x80>
   12de4:	add	x0, x21, #0x1
   12de8:	b	12df0 <reconcat@@Base+0xd0>
   12dec:	mov	w0, #0x1                   	// #1
   12df0:	bl	5770 <xmalloc@plt>
   12df4:	mov	x21, x0
   12df8:	stp	x23, x22, [x29, #-16]
   12dfc:	mov	x22, x0
   12e00:	stp	x25, x24, [x29, #-32]
   12e04:	cbz	x20, 12e70 <reconcat@@Base+0x150>
   12e08:	ldur	w26, [x29, #-8]
   12e0c:	ldur	x25, [x29, #-32]
   12e10:	mov	x22, x21
   12e14:	mov	x0, x20
   12e18:	bl	5430 <strlen@plt>
   12e1c:	mov	x23, x0
   12e20:	mov	x0, x22
   12e24:	mov	x1, x20
   12e28:	mov	x2, x23
   12e2c:	bl	5390 <memcpy@plt>
   12e30:	add	x22, x22, x23
   12e34:	tbnz	w26, #31, 12e40 <reconcat@@Base+0x120>
   12e38:	mov	w8, w26
   12e3c:	b	12e5c <reconcat@@Base+0x13c>
   12e40:	cmn	w26, #0x8
   12e44:	add	w8, w26, #0x8
   12e48:	b.gt	12e5c <reconcat@@Base+0x13c>
   12e4c:	add	x10, x24, w26, sxtw
   12e50:	mov	x9, x25
   12e54:	mov	x25, x10
   12e58:	b	12e60 <reconcat@@Base+0x140>
   12e5c:	add	x9, x25, #0x8
   12e60:	ldr	x20, [x25]
   12e64:	mov	w26, w8
   12e68:	mov	x25, x9
   12e6c:	cbnz	x20, 12e14 <reconcat@@Base+0xf4>
   12e70:	strb	wzr, [x22]
   12e74:	cbz	x19, 12e80 <reconcat@@Base+0x160>
   12e78:	mov	x0, x19
   12e7c:	bl	5520 <free@plt>
   12e80:	mov	x0, x21
   12e84:	ldp	x20, x19, [sp, #288]
   12e88:	ldp	x22, x21, [sp, #272]
   12e8c:	ldp	x24, x23, [sp, #256]
   12e90:	ldp	x26, x25, [sp, #240]
   12e94:	ldp	x28, x27, [sp, #224]
   12e98:	ldp	x29, x30, [sp, #208]
   12e9c:	add	sp, sp, #0x130
   12ea0:	ret
   12ea4:	lsr	x8, x0, #32
   12ea8:	mov	w9, #0xadcc                	// #44492
   12eac:	movk	w9, #0xbdec, lsl #16
   12eb0:	mov	w10, #0x109a                	// #4250
   12eb4:	sub	w8, w8, w0
   12eb8:	movk	w10, #0x2, lsl #16
   12ebc:	add	w8, w8, w9
   12ec0:	mov	w9, #0x2785                	// #10117
   12ec4:	eor	w8, w8, w10
   12ec8:	movk	w9, #0x5c24, lsl #16
   12ecc:	sub	w11, w0, w8
   12ed0:	add	w9, w11, w9
   12ed4:	mov	w10, #0x5234                	// #21044
   12ed8:	eor	w9, w9, w8, lsl #8
   12edc:	movk	w10, #0x4213, lsl #16
   12ee0:	add	w11, w8, w9
   12ee4:	sub	w10, w10, w11
   12ee8:	sub	w8, w8, w9
   12eec:	eor	w10, w10, w9, lsr #13
   12ef0:	sub	w8, w8, w10
   12ef4:	sub	w9, w9, w10
   12ef8:	eor	w8, w8, w10, lsr #12
   12efc:	sub	w9, w9, w8
   12f00:	sub	w10, w10, w8
   12f04:	eor	w9, w9, w8, lsl #16
   12f08:	sub	w10, w10, w9
   12f0c:	sub	w8, w8, w9
   12f10:	eor	w10, w10, w9, lsr #5
   12f14:	sub	w8, w8, w10
   12f18:	sub	w9, w9, w10
   12f1c:	eor	w8, w8, w10, lsr #3
   12f20:	sub	w9, w9, w8
   12f24:	eor	w9, w9, w8, lsl #10
   12f28:	sub	w8, w10, w8
   12f2c:	sub	w8, w8, w9
   12f30:	eor	w0, w8, w9, lsr #15
   12f34:	ret
   12f38:	cmp	x0, x1
   12f3c:	cset	w0, eq  // eq = none
   12f40:	ret

0000000000012f44 <htab_size@@Base>:
   12f44:	ldr	x0, [x0, #32]
   12f48:	ret

0000000000012f4c <htab_elements@@Base>:
   12f4c:	ldp	x8, x9, [x0, #40]
   12f50:	sub	x0, x8, x9
   12f54:	ret

0000000000012f58 <htab_create_alloc@@Base>:
   12f58:	mov	x6, x5
   12f5c:	mov	x5, x4
   12f60:	b	5590 <htab_create_typed_alloc@plt>

0000000000012f64 <htab_create_typed_alloc@@Base>:
   12f64:	stp	x29, x30, [sp, #-80]!
   12f68:	stp	x26, x25, [sp, #16]
   12f6c:	stp	x24, x23, [sp, #32]
   12f70:	stp	x22, x21, [sp, #48]
   12f74:	stp	x20, x19, [sp, #64]
   12f78:	mov	x29, sp
   12f7c:	mov	x19, x6
   12f80:	mov	x20, x5
   12f84:	mov	x23, x4
   12f88:	mov	x21, x3
   12f8c:	mov	x22, x2
   12f90:	mov	x24, x1
   12f94:	bl	130ec <htab_create_alloc_ex@@Base+0xd0>
   12f98:	mov	w25, w0
   12f9c:	mov	w0, #0x1                   	// #1
   12fa0:	mov	w1, #0x70                  	// #112
   12fa4:	blr	x23
   12fa8:	mov	x23, x0
   12fac:	cbz	x0, 13000 <htab_create_typed_alloc@@Base+0x9c>
   12fb0:	mov	w8, w25
   12fb4:	adrp	x9, 14000 <xexit@@Base+0x18>
   12fb8:	lsl	x8, x8, #4
   12fbc:	add	x9, x9, #0xbd4
   12fc0:	ldr	w26, [x9, x8]
   12fc4:	mov	w1, #0x8                   	// #8
   12fc8:	mov	x0, x26
   12fcc:	blr	x20
   12fd0:	str	x0, [x23, #24]
   12fd4:	cbz	x0, 12ff0 <htab_create_typed_alloc@@Base+0x8c>
   12fd8:	str	x26, [x23, #32]
   12fdc:	str	w25, [x23, #104]
   12fe0:	stp	x24, x22, [x23]
   12fe4:	str	x21, [x23, #16]
   12fe8:	stp	x20, x19, [x23, #64]
   12fec:	b	13000 <htab_create_typed_alloc@@Base+0x9c>
   12ff0:	cbz	x19, 12ffc <htab_create_typed_alloc@@Base+0x98>
   12ff4:	mov	x0, x23
   12ff8:	blr	x19
   12ffc:	mov	x23, xzr
   13000:	mov	x0, x23
   13004:	ldp	x20, x19, [sp, #64]
   13008:	ldp	x22, x21, [sp, #48]
   1300c:	ldp	x24, x23, [sp, #32]
   13010:	ldp	x26, x25, [sp, #16]
   13014:	ldp	x29, x30, [sp], #80
   13018:	ret

000000000001301c <htab_create_alloc_ex@@Base>:
   1301c:	stp	x29, x30, [sp, #-96]!
   13020:	str	x27, [sp, #16]
   13024:	stp	x26, x25, [sp, #32]
   13028:	stp	x24, x23, [sp, #48]
   1302c:	stp	x22, x21, [sp, #64]
   13030:	stp	x20, x19, [sp, #80]
   13034:	mov	x29, sp
   13038:	mov	x19, x6
   1303c:	mov	x21, x5
   13040:	mov	x20, x4
   13044:	mov	x22, x3
   13048:	mov	x24, x2
   1304c:	mov	x25, x1
   13050:	bl	130ec <htab_create_alloc_ex@@Base+0xd0>
   13054:	mov	w26, w0
   13058:	mov	w1, #0x1                   	// #1
   1305c:	mov	w2, #0x70                  	// #112
   13060:	mov	x0, x20
   13064:	blr	x21
   13068:	mov	x23, x0
   1306c:	cbz	x0, 130cc <htab_create_alloc_ex@@Base+0xb0>
   13070:	mov	w8, w26
   13074:	adrp	x9, 14000 <xexit@@Base+0x18>
   13078:	lsl	x8, x8, #4
   1307c:	add	x9, x9, #0xbd4
   13080:	ldr	w27, [x9, x8]
   13084:	mov	w2, #0x8                   	// #8
   13088:	mov	x0, x20
   1308c:	mov	x1, x27
   13090:	blr	x21
   13094:	str	x0, [x23, #24]
   13098:	cbz	x0, 130b8 <htab_create_alloc_ex@@Base+0x9c>
   1309c:	str	x27, [x23, #32]
   130a0:	str	w26, [x23, #104]
   130a4:	stp	x25, x24, [x23]
   130a8:	str	x22, [x23, #16]
   130ac:	stp	x20, x21, [x23, #80]
   130b0:	str	x19, [x23, #96]
   130b4:	b	130cc <htab_create_alloc_ex@@Base+0xb0>
   130b8:	cbz	x19, 130c8 <htab_create_alloc_ex@@Base+0xac>
   130bc:	mov	x0, x20
   130c0:	mov	x1, x23
   130c4:	blr	x19
   130c8:	mov	x23, xzr
   130cc:	mov	x0, x23
   130d0:	ldp	x20, x19, [sp, #80]
   130d4:	ldp	x22, x21, [sp, #64]
   130d8:	ldp	x24, x23, [sp, #48]
   130dc:	ldp	x26, x25, [sp, #32]
   130e0:	ldr	x27, [sp, #16]
   130e4:	ldp	x29, x30, [sp], #96
   130e8:	ret
   130ec:	stp	x29, x30, [sp, #-16]!
   130f0:	adrp	x9, 14000 <xexit@@Base+0x18>
   130f4:	mov	x2, x0
   130f8:	mov	w8, wzr
   130fc:	mov	w0, #0x1e                  	// #30
   13100:	add	x9, x9, #0xbd4
   13104:	mov	x29, sp
   13108:	sub	w10, w0, w8
   1310c:	add	w10, w8, w10, lsr #1
   13110:	lsl	x11, x10, #4
   13114:	ldr	w11, [x9, x11]
   13118:	cmp	x11, x2
   1311c:	csel	w0, w0, w10, cc  // cc = lo, ul, last
   13120:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   13124:	cmp	w0, w8
   13128:	b.ne	13108 <htab_create_alloc_ex@@Base+0xec>  // b.any
   1312c:	mov	w8, w0
   13130:	lsl	x8, x8, #4
   13134:	ldr	w8, [x9, x8]
   13138:	cmp	x8, x2
   1313c:	b.cc	13148 <htab_create_alloc_ex@@Base+0x12c>  // b.lo, b.ul, b.last
   13140:	ldp	x29, x30, [sp], #16
   13144:	ret
   13148:	adrp	x8, 28000 <xexit@@Base+0x14018>
   1314c:	ldr	x8, [x8, #3976]
   13150:	adrp	x1, 14000 <xexit@@Base+0x18>
   13154:	add	x1, x1, #0xdb4
   13158:	ldr	x0, [x8]
   1315c:	bl	5440 <fprintf@plt>
   13160:	bl	5820 <abort@plt>

0000000000013164 <htab_set_functions_ex@@Base>:
   13164:	stp	x1, x2, [x0]
   13168:	str	x3, [x0, #16]
   1316c:	stp	x4, x5, [x0, #80]
   13170:	str	x6, [x0, #96]
   13174:	ret

0000000000013178 <htab_create@@Base>:
   13178:	stp	x29, x30, [sp, #-64]!
   1317c:	stp	x24, x23, [sp, #16]
   13180:	stp	x22, x21, [sp, #32]
   13184:	stp	x20, x19, [sp, #48]
   13188:	mov	x29, sp
   1318c:	mov	x19, x3
   13190:	mov	x20, x2
   13194:	mov	x21, x1
   13198:	bl	130ec <htab_create_alloc_ex@@Base+0xd0>
   1319c:	mov	w23, w0
   131a0:	mov	w0, #0x1                   	// #1
   131a4:	mov	w1, #0x70                  	// #112
   131a8:	bl	5860 <xcalloc@plt>
   131ac:	mov	x22, x0
   131b0:	cbz	x0, 13210 <htab_create@@Base+0x98>
   131b4:	mov	w8, w23
   131b8:	adrp	x9, 14000 <xexit@@Base+0x18>
   131bc:	lsl	x8, x8, #4
   131c0:	add	x9, x9, #0xbd4
   131c4:	ldr	w24, [x9, x8]
   131c8:	mov	w1, #0x8                   	// #8
   131cc:	mov	x0, x24
   131d0:	bl	5860 <xcalloc@plt>
   131d4:	str	x0, [x22, #24]
   131d8:	cbz	x0, 13204 <htab_create@@Base+0x8c>
   131dc:	str	x24, [x22, #32]
   131e0:	str	w23, [x22, #104]
   131e4:	stp	x21, x20, [x22]
   131e8:	str	x19, [x22, #16]
   131ec:	adrp	x8, 28000 <xexit@@Base+0x14018>
   131f0:	adrp	x9, 28000 <xexit@@Base+0x14018>
   131f4:	ldr	x8, [x8, #3880]
   131f8:	ldr	x9, [x9, #3400]
   131fc:	stp	x8, x9, [x22, #64]
   13200:	b	13210 <htab_create@@Base+0x98>
   13204:	mov	x0, x22
   13208:	bl	5520 <free@plt>
   1320c:	mov	x22, xzr
   13210:	mov	x0, x22
   13214:	ldp	x20, x19, [sp, #48]
   13218:	ldp	x22, x21, [sp, #32]
   1321c:	ldp	x24, x23, [sp, #16]
   13220:	ldp	x29, x30, [sp], #64
   13224:	ret

0000000000013228 <htab_try_create@@Base>:
   13228:	stp	x29, x30, [sp, #-64]!
   1322c:	stp	x24, x23, [sp, #16]
   13230:	stp	x22, x21, [sp, #32]
   13234:	stp	x20, x19, [sp, #48]
   13238:	mov	x29, sp
   1323c:	mov	x19, x3
   13240:	mov	x20, x2
   13244:	mov	x21, x1
   13248:	bl	130ec <htab_create_alloc_ex@@Base+0xd0>
   1324c:	mov	w23, w0
   13250:	mov	w0, #0x1                   	// #1
   13254:	mov	w1, #0x70                  	// #112
   13258:	bl	53e0 <calloc@plt>
   1325c:	mov	x22, x0
   13260:	cbz	x0, 132c0 <htab_try_create@@Base+0x98>
   13264:	mov	w8, w23
   13268:	adrp	x9, 14000 <xexit@@Base+0x18>
   1326c:	lsl	x8, x8, #4
   13270:	add	x9, x9, #0xbd4
   13274:	ldr	w24, [x9, x8]
   13278:	mov	w1, #0x8                   	// #8
   1327c:	mov	x0, x24
   13280:	bl	53e0 <calloc@plt>
   13284:	str	x0, [x22, #24]
   13288:	cbz	x0, 132b4 <htab_try_create@@Base+0x8c>
   1328c:	str	x24, [x22, #32]
   13290:	str	w23, [x22, #104]
   13294:	stp	x21, x20, [x22]
   13298:	str	x19, [x22, #16]
   1329c:	adrp	x8, 28000 <xexit@@Base+0x14018>
   132a0:	adrp	x9, 28000 <xexit@@Base+0x14018>
   132a4:	ldr	x8, [x8, #3264]
   132a8:	ldr	x9, [x9, #3400]
   132ac:	stp	x8, x9, [x22, #64]
   132b0:	b	132c0 <htab_try_create@@Base+0x98>
   132b4:	mov	x0, x22
   132b8:	bl	5520 <free@plt>
   132bc:	mov	x22, xzr
   132c0:	mov	x0, x22
   132c4:	ldp	x20, x19, [sp, #48]
   132c8:	ldp	x22, x21, [sp, #32]
   132cc:	ldp	x24, x23, [sp, #16]
   132d0:	ldp	x29, x30, [sp], #64
   132d4:	ret

00000000000132d8 <htab_delete@@Base>:
   132d8:	stp	x29, x30, [sp, #-48]!
   132dc:	str	x21, [sp, #16]
   132e0:	stp	x20, x19, [sp, #32]
   132e4:	ldp	x8, x20, [x0, #16]
   132e8:	mov	x19, x0
   132ec:	mov	x29, sp
   132f0:	cbz	x8, 1331c <htab_delete@@Base+0x44>
   132f4:	ldr	w8, [x19, #32]
   132f8:	subs	w21, w8, #0x1
   132fc:	b.mi	1331c <htab_delete@@Base+0x44>  // b.first
   13300:	ldr	x0, [x20, w21, uxtw #3]
   13304:	cmp	x0, #0x2
   13308:	b.cc	13314 <htab_delete@@Base+0x3c>  // b.lo, b.ul, b.last
   1330c:	ldr	x8, [x19, #16]
   13310:	blr	x8
   13314:	subs	w21, w21, #0x1
   13318:	b.pl	13300 <htab_delete@@Base+0x28>  // b.nfrst
   1331c:	ldr	x8, [x19, #72]
   13320:	cbz	x8, 13344 <htab_delete@@Base+0x6c>
   13324:	mov	x0, x20
   13328:	blr	x8
   1332c:	ldr	x1, [x19, #72]
   13330:	mov	x0, x19
   13334:	ldp	x20, x19, [sp, #32]
   13338:	ldr	x21, [sp, #16]
   1333c:	ldp	x29, x30, [sp], #48
   13340:	br	x1
   13344:	ldr	x8, [x19, #96]
   13348:	cbz	x8, 13374 <htab_delete@@Base+0x9c>
   1334c:	ldr	x0, [x19, #80]
   13350:	mov	x1, x20
   13354:	blr	x8
   13358:	ldr	x2, [x19, #96]
   1335c:	ldr	x0, [x19, #80]
   13360:	mov	x1, x19
   13364:	ldp	x20, x19, [sp, #32]
   13368:	ldr	x21, [sp, #16]
   1336c:	ldp	x29, x30, [sp], #48
   13370:	br	x2
   13374:	ldp	x20, x19, [sp, #32]
   13378:	ldr	x21, [sp, #16]
   1337c:	ldp	x29, x30, [sp], #48
   13380:	ret

0000000000013384 <htab_empty@@Base>:
   13384:	stp	x29, x30, [sp, #-48]!
   13388:	stp	x22, x21, [sp, #16]
   1338c:	stp	x20, x19, [sp, #32]
   13390:	ldp	x8, x20, [x0, #16]
   13394:	ldr	x21, [x0, #32]
   13398:	mov	x19, x0
   1339c:	mov	x29, sp
   133a0:	cbz	x8, 133c8 <htab_empty@@Base+0x44>
   133a4:	subs	w22, w21, #0x1
   133a8:	b.mi	133c8 <htab_empty@@Base+0x44>  // b.first
   133ac:	ldr	x0, [x20, w22, uxtw #3]
   133b0:	cmp	x0, #0x2
   133b4:	b.cc	133c0 <htab_empty@@Base+0x3c>  // b.lo, b.ul, b.last
   133b8:	ldr	x8, [x19, #16]
   133bc:	blr	x8
   133c0:	subs	w22, w22, #0x1
   133c4:	b.pl	133ac <htab_empty@@Base+0x28>  // b.nfrst
   133c8:	cmp	x21, #0x20, lsl #12
   133cc:	b.ls	13400 <htab_empty@@Base+0x7c>  // b.plast
   133d0:	mov	w0, #0x80                  	// #128
   133d4:	bl	130ec <htab_create_alloc_ex@@Base+0xd0>
   133d8:	mov	w20, w0
   133dc:	adrp	x10, 14000 <xexit@@Base+0x18>
   133e0:	sbfiz	x9, x20, #4, #32
   133e4:	add	x10, x10, #0xbd4
   133e8:	ldr	x8, [x19, #72]
   133ec:	ldrsw	x21, [x10, x9]
   133f0:	cbz	x8, 13414 <htab_empty@@Base+0x90>
   133f4:	ldr	x0, [x19, #24]
   133f8:	blr	x8
   133fc:	b	13428 <htab_empty@@Base+0xa4>
   13400:	lsl	x2, x21, #3
   13404:	mov	x0, x20
   13408:	mov	w1, wzr
   1340c:	bl	5530 <memset@plt>
   13410:	b	1345c <htab_empty@@Base+0xd8>
   13414:	ldr	x8, [x19, #96]
   13418:	cbz	x8, 13428 <htab_empty@@Base+0xa4>
   1341c:	ldr	x0, [x19, #80]
   13420:	ldr	x1, [x19, #24]
   13424:	blr	x8
   13428:	ldr	x8, [x19, #88]
   1342c:	cbz	x8, 13444 <htab_empty@@Base+0xc0>
   13430:	ldr	x0, [x19, #80]
   13434:	mov	w2, #0x8                   	// #8
   13438:	mov	x1, x21
   1343c:	blr	x8
   13440:	b	13454 <htab_empty@@Base+0xd0>
   13444:	ldr	x8, [x19, #64]
   13448:	mov	w1, #0x8                   	// #8
   1344c:	mov	x0, x21
   13450:	blr	x8
   13454:	stp	x0, x21, [x19, #24]
   13458:	str	w20, [x19, #104]
   1345c:	stp	xzr, xzr, [x19, #40]
   13460:	ldp	x20, x19, [sp, #32]
   13464:	ldp	x22, x21, [sp, #16]
   13468:	ldp	x29, x30, [sp], #48
   1346c:	ret

0000000000013470 <htab_find_with_hash@@Base>:
   13470:	stp	x29, x30, [sp, #-80]!
   13474:	stp	x26, x25, [sp, #16]
   13478:	stp	x24, x23, [sp, #32]
   1347c:	stp	x22, x21, [sp, #48]
   13480:	stp	x20, x19, [sp, #64]
   13484:	ldr	w8, [x0, #104]
   13488:	adrp	x25, 14000 <xexit@@Base+0x18>
   1348c:	add	x25, x25, #0xbd4
   13490:	ldr	w9, [x0, #56]
   13494:	add	x11, x25, x8, lsl #4
   13498:	ldp	w10, w12, [x11]
   1349c:	mov	w26, w2
   134a0:	add	w9, w9, #0x1
   134a4:	str	w9, [x0, #56]
   134a8:	ldr	w9, [x11, #12]
   134ac:	mul	x11, x12, x26
   134b0:	lsr	x11, x11, #32
   134b4:	sub	w12, w2, w11
   134b8:	ldr	x13, [x0, #24]
   134bc:	add	w11, w11, w12, lsr #1
   134c0:	lsr	w11, w11, w9
   134c4:	msub	w24, w11, w10, w2
   134c8:	ldr	x22, [x13, w24, uxtw #3]
   134cc:	mov	x29, sp
   134d0:	cbz	x22, 1357c <htab_find_with_hash@@Base+0x10c>
   134d4:	ldr	x23, [x0, #32]
   134d8:	mov	w21, w2
   134dc:	mov	x19, x0
   134e0:	mov	x20, x1
   134e4:	cmp	x22, #0x1
   134e8:	b.eq	13510 <htab_find_with_hash@@Base+0xa0>  // b.none
   134ec:	ldr	x8, [x19, #8]
   134f0:	mov	x0, x22
   134f4:	mov	x1, x20
   134f8:	blr	x8
   134fc:	cbnz	w0, 1357c <htab_find_with_hash@@Base+0x10c>
   13500:	ldr	w8, [x19, #104]
   13504:	add	x9, x25, x8, lsl #4
   13508:	ldr	w10, [x9]
   1350c:	ldr	w9, [x9, #12]
   13510:	add	x8, x25, x8, lsl #4
   13514:	ldr	w8, [x8, #8]
   13518:	sub	w10, w10, #0x2
   1351c:	mul	x8, x8, x26
   13520:	lsr	x8, x8, #32
   13524:	sub	w11, w21, w8
   13528:	add	w8, w8, w11, lsr #1
   1352c:	lsr	w8, w8, w9
   13530:	msub	w8, w8, w10, w21
   13534:	add	w21, w8, #0x1
   13538:	ldr	w8, [x19, #60]
   1353c:	add	w9, w21, w24
   13540:	ldr	x10, [x19, #24]
   13544:	cmp	x23, x9
   13548:	csel	w11, wzr, w23, hi  // hi = pmore
   1354c:	add	w8, w8, #0x1
   13550:	str	w8, [x19, #60]
   13554:	sub	w24, w9, w11
   13558:	ldr	x22, [x10, w24, uxtw #3]
   1355c:	cmp	x22, #0x1
   13560:	b.eq	13538 <htab_find_with_hash@@Base+0xc8>  // b.none
   13564:	cbz	x22, 1357c <htab_find_with_hash@@Base+0x10c>
   13568:	ldr	x8, [x19, #8]
   1356c:	mov	x0, x22
   13570:	mov	x1, x20
   13574:	blr	x8
   13578:	cbz	w0, 13538 <htab_find_with_hash@@Base+0xc8>
   1357c:	mov	x0, x22
   13580:	ldp	x20, x19, [sp, #64]
   13584:	ldp	x22, x21, [sp, #48]
   13588:	ldp	x24, x23, [sp, #32]
   1358c:	ldp	x26, x25, [sp, #16]
   13590:	ldp	x29, x30, [sp], #80
   13594:	ret

0000000000013598 <htab_find@@Base>:
   13598:	stp	x29, x30, [sp, #-32]!
   1359c:	stp	x20, x19, [sp, #16]
   135a0:	ldr	x8, [x0]
   135a4:	mov	x19, x0
   135a8:	mov	x0, x1
   135ac:	mov	x29, sp
   135b0:	mov	x20, x1
   135b4:	blr	x8
   135b8:	mov	w2, w0
   135bc:	mov	x0, x19
   135c0:	mov	x1, x20
   135c4:	ldp	x20, x19, [sp, #16]
   135c8:	ldp	x29, x30, [sp], #32
   135cc:	b	5880 <htab_find_with_hash@plt>

00000000000135d0 <htab_find_slot_with_hash@@Base>:
   135d0:	stp	x29, x30, [sp, #-96]!
   135d4:	stp	x26, x25, [sp, #32]
   135d8:	stp	x24, x23, [sp, #48]
   135dc:	stp	x22, x21, [sp, #64]
   135e0:	stp	x20, x19, [sp, #80]
   135e4:	ldr	x24, [x0, #32]
   135e8:	mov	w20, w3
   135ec:	mov	w23, w2
   135f0:	mov	x19, x0
   135f4:	cmp	w3, #0x1
   135f8:	mov	x21, x1
   135fc:	str	x27, [sp, #16]
   13600:	mov	x29, sp
   13604:	b.ne	13628 <htab_find_slot_with_hash@@Base+0x58>  // b.any
   13608:	ldr	x8, [x19, #40]
   1360c:	add	x9, x24, x24, lsl #1
   13610:	cmp	x9, x8, lsl #2
   13614:	b.hi	13628 <htab_find_slot_with_hash@@Base+0x58>  // b.pmore
   13618:	mov	x0, x19
   1361c:	bl	13790 <htab_find_slot_with_hash@@Base+0x1c0>
   13620:	cbz	w0, 136bc <htab_find_slot_with_hash@@Base+0xec>
   13624:	ldr	x24, [x19, #32]
   13628:	ldr	w8, [x19, #104]
   1362c:	adrp	x26, 14000 <xexit@@Base+0x18>
   13630:	add	x26, x26, #0xbd4
   13634:	ldr	w9, [x19, #56]
   13638:	add	x12, x26, x8, lsl #4
   1363c:	ldp	w11, w13, [x12]
   13640:	mov	w27, w23
   13644:	add	w14, w9, #0x1
   13648:	ldr	w9, [x12, #12]
   1364c:	mul	x12, x13, x27
   13650:	lsr	x12, x12, #32
   13654:	ldr	x10, [x19, #24]
   13658:	sub	w13, w23, w12
   1365c:	add	w12, w12, w13, lsr #1
   13660:	lsr	w12, w12, w9
   13664:	msub	w25, w12, w11, w23
   13668:	str	w14, [x19, #56]
   1366c:	add	x22, x10, w25, uxtw #3
   13670:	ldr	x0, [x22]
   13674:	cbz	x0, 1369c <htab_find_slot_with_hash@@Base+0xcc>
   13678:	cmp	x0, #0x1
   1367c:	b.eq	136d8 <htab_find_slot_with_hash@@Base+0x108>  // b.none
   13680:	ldr	x8, [x19, #8]
   13684:	mov	x1, x21
   13688:	blr	x8
   1368c:	cbz	w0, 136c4 <htab_find_slot_with_hash@@Base+0xf4>
   13690:	ldr	x8, [x19, #24]
   13694:	add	x22, x8, x25, lsl #3
   13698:	b	13770 <htab_find_slot_with_hash@@Base+0x1a0>
   1369c:	mov	x22, xzr
   136a0:	cbz	w20, 136bc <htab_find_slot_with_hash@@Base+0xec>
   136a4:	cbz	x22, 13760 <htab_find_slot_with_hash@@Base+0x190>
   136a8:	ldr	x8, [x19, #48]
   136ac:	sub	x8, x8, #0x1
   136b0:	str	x8, [x19, #48]
   136b4:	str	xzr, [x22]
   136b8:	b	13770 <htab_find_slot_with_hash@@Base+0x1a0>
   136bc:	mov	x22, xzr
   136c0:	b	13770 <htab_find_slot_with_hash@@Base+0x1a0>
   136c4:	ldr	w8, [x19, #104]
   136c8:	mov	x22, xzr
   136cc:	add	x9, x26, x8, lsl #4
   136d0:	ldr	w11, [x9]
   136d4:	ldr	w9, [x9, #12]
   136d8:	add	x8, x26, x8, lsl #4
   136dc:	ldr	w8, [x8, #8]
   136e0:	sub	w10, w11, #0x2
   136e4:	mul	x8, x8, x27
   136e8:	lsr	x8, x8, #32
   136ec:	sub	w11, w23, w8
   136f0:	add	w8, w8, w11, lsr #1
   136f4:	lsr	w8, w8, w9
   136f8:	msub	w8, w8, w10, w23
   136fc:	add	w23, w8, #0x1
   13700:	ldr	w8, [x19, #60]
   13704:	add	w9, w23, w25
   13708:	ldr	x10, [x19, #24]
   1370c:	cmp	x24, x9
   13710:	csel	w11, wzr, w24, hi  // hi = pmore
   13714:	add	w8, w8, #0x1
   13718:	str	w8, [x19, #60]
   1371c:	sub	w25, w9, w11
   13720:	ldr	x0, [x10, w25, uxtw #3]
   13724:	cbz	x0, 136a0 <htab_find_slot_with_hash@@Base+0xd0>
   13728:	cmp	x0, #0x1
   1372c:	b.eq	13744 <htab_find_slot_with_hash@@Base+0x174>  // b.none
   13730:	ldr	x8, [x19, #8]
   13734:	mov	x1, x21
   13738:	blr	x8
   1373c:	cbz	w0, 13700 <htab_find_slot_with_hash@@Base+0x130>
   13740:	b	13754 <htab_find_slot_with_hash@@Base+0x184>
   13744:	add	x8, x10, w25, uxtw #3
   13748:	cmp	x22, #0x0
   1374c:	csel	x22, x8, x22, eq  // eq = none
   13750:	b	13700 <htab_find_slot_with_hash@@Base+0x130>
   13754:	ldr	x8, [x19, #24]
   13758:	add	x22, x8, w25, uxtw #3
   1375c:	b	13770 <htab_find_slot_with_hash@@Base+0x1a0>
   13760:	ldr	x8, [x19, #40]
   13764:	add	x22, x10, w25, uxtw #3
   13768:	add	x8, x8, #0x1
   1376c:	str	x8, [x19, #40]
   13770:	mov	x0, x22
   13774:	ldp	x20, x19, [sp, #80]
   13778:	ldp	x22, x21, [sp, #64]
   1377c:	ldp	x24, x23, [sp, #48]
   13780:	ldp	x26, x25, [sp, #32]
   13784:	ldr	x27, [sp, #16]
   13788:	ldp	x29, x30, [sp], #96
   1378c:	ret
   13790:	stp	x29, x30, [sp, #-64]!
   13794:	stp	x24, x23, [sp, #16]
   13798:	stp	x22, x21, [sp, #32]
   1379c:	stp	x20, x19, [sp, #48]
   137a0:	ldp	x8, x9, [x0, #40]
   137a4:	ldp	x19, x24, [x0, #24]
   137a8:	mov	x20, x0
   137ac:	adrp	x23, 14000 <xexit@@Base+0x18>
   137b0:	sub	x8, x8, x9
   137b4:	lsl	x0, x8, #1
   137b8:	cmp	x0, x24
   137bc:	add	x23, x23, #0xbd4
   137c0:	mov	x29, sp
   137c4:	b.hi	137e4 <htab_find_slot_with_hash@@Base+0x214>  // b.pmore
   137c8:	ldr	w21, [x20, #104]
   137cc:	cmp	x24, #0x21
   137d0:	b.cc	13948 <htab_find_slot_with_hash@@Base+0x378>  // b.lo, b.ul, b.last
   137d4:	lsl	x8, x8, #3
   137d8:	cmp	x8, x24
   137dc:	mov	x22, x24
   137e0:	b.cs	137f8 <htab_find_slot_with_hash@@Base+0x228>  // b.hs, b.nlast
   137e4:	bl	130ec <htab_create_alloc_ex@@Base+0xd0>
   137e8:	mov	w8, w0
   137ec:	lsl	x8, x8, #4
   137f0:	ldr	w22, [x23, x8]
   137f4:	mov	w21, w0
   137f8:	ldr	x8, [x20, #88]
   137fc:	cbz	x8, 13818 <htab_find_slot_with_hash@@Base+0x248>
   13800:	ldr	x0, [x20, #80]
   13804:	mov	w2, #0x8                   	// #8
   13808:	mov	x1, x22
   1380c:	blr	x8
   13810:	cbnz	x0, 1382c <htab_find_slot_with_hash@@Base+0x25c>
   13814:	b	13934 <htab_find_slot_with_hash@@Base+0x364>
   13818:	ldr	x8, [x20, #64]
   1381c:	mov	w1, #0x8                   	// #8
   13820:	mov	x0, x22
   13824:	blr	x8
   13828:	cbz	x0, 13934 <htab_find_slot_with_hash@@Base+0x364>
   1382c:	ldp	x9, x8, [x20, #40]
   13830:	add	x24, x19, x24, lsl #3
   13834:	stp	x0, x22, [x20, #24]
   13838:	mov	x22, x19
   1383c:	sub	x8, x9, x8
   13840:	str	w21, [x20, #104]
   13844:	stp	x8, xzr, [x20, #40]
   13848:	ldr	x21, [x22]
   1384c:	cmp	x21, #0x2
   13850:	b.cc	138fc <htab_find_slot_with_hash@@Base+0x32c>  // b.lo, b.ul, b.last
   13854:	ldr	x8, [x20]
   13858:	mov	x0, x21
   1385c:	blr	x8
   13860:	ldr	w10, [x20, #104]
   13864:	mov	w11, w0
   13868:	add	x8, x23, x10, lsl #4
   1386c:	ldp	w13, w9, [x8]
   13870:	ldr	w12, [x8, #12]
   13874:	mul	x8, x9, x11
   13878:	lsr	x9, x8, #32
   1387c:	sub	w14, w0, w9
   13880:	ldr	x8, [x20, #24]
   13884:	add	w9, w9, w14, lsr #1
   13888:	lsr	w9, w9, w12
   1388c:	msub	w9, w9, w13, w0
   13890:	add	x14, x8, w9, uxtw #3
   13894:	ldr	x15, [x14]
   13898:	cbz	x15, 138f8 <htab_find_slot_with_hash@@Base+0x328>
   1389c:	cmp	x15, #0x1
   138a0:	b.eq	13950 <htab_find_slot_with_hash@@Base+0x380>  // b.none
   138a4:	add	x10, x23, x10, lsl #4
   138a8:	ldr	w14, [x10, #8]
   138ac:	ldr	x10, [x20, #32]
   138b0:	sub	w13, w13, #0x2
   138b4:	mul	x14, x14, x11
   138b8:	lsr	x14, x14, #32
   138bc:	sub	w15, w11, w14
   138c0:	add	w14, w14, w15, lsr #1
   138c4:	lsr	w12, w14, w12
   138c8:	msub	w11, w12, w13, w11
   138cc:	add	w11, w11, #0x1
   138d0:	add	w9, w11, w9
   138d4:	cmp	x10, x9
   138d8:	csel	w12, wzr, w10, hi  // hi = pmore
   138dc:	sub	w9, w9, w12
   138e0:	add	x14, x8, w9, uxtw #3
   138e4:	ldr	x12, [x14]
   138e8:	cbz	x12, 138f8 <htab_find_slot_with_hash@@Base+0x328>
   138ec:	cmp	x12, #0x1
   138f0:	b.ne	138d0 <htab_find_slot_with_hash@@Base+0x300>  // b.any
   138f4:	b	13950 <htab_find_slot_with_hash@@Base+0x380>
   138f8:	str	x21, [x14]
   138fc:	add	x22, x22, #0x8
   13900:	cmp	x22, x24
   13904:	b.cc	13848 <htab_find_slot_with_hash@@Base+0x278>  // b.lo, b.ul, b.last
   13908:	ldr	x8, [x20, #72]
   1390c:	cbz	x8, 1391c <htab_find_slot_with_hash@@Base+0x34c>
   13910:	mov	x0, x19
   13914:	blr	x8
   13918:	b	13930 <htab_find_slot_with_hash@@Base+0x360>
   1391c:	ldr	x8, [x20, #96]
   13920:	cbz	x8, 13930 <htab_find_slot_with_hash@@Base+0x360>
   13924:	ldr	x0, [x20, #80]
   13928:	mov	x1, x19
   1392c:	blr	x8
   13930:	mov	w0, #0x1                   	// #1
   13934:	ldp	x20, x19, [sp, #48]
   13938:	ldp	x22, x21, [sp, #32]
   1393c:	ldp	x24, x23, [sp, #16]
   13940:	ldp	x29, x30, [sp], #64
   13944:	ret
   13948:	mov	x22, x24
   1394c:	b	137f8 <htab_find_slot_with_hash@@Base+0x228>
   13950:	bl	5820 <abort@plt>

0000000000013954 <htab_find_slot@@Base>:
   13954:	stp	x29, x30, [sp, #-48]!
   13958:	stp	x20, x19, [sp, #32]
   1395c:	ldr	x8, [x0]
   13960:	mov	x20, x0
   13964:	mov	x0, x1
   13968:	str	x21, [sp, #16]
   1396c:	mov	x29, sp
   13970:	mov	w19, w2
   13974:	mov	x21, x1
   13978:	blr	x8
   1397c:	mov	w2, w0
   13980:	mov	x0, x20
   13984:	mov	x1, x21
   13988:	mov	w3, w19
   1398c:	ldp	x20, x19, [sp, #32]
   13990:	ldr	x21, [sp, #16]
   13994:	ldp	x29, x30, [sp], #48
   13998:	b	5580 <htab_find_slot_with_hash@plt>

000000000001399c <htab_remove_elt@@Base>:
   1399c:	stp	x29, x30, [sp, #-32]!
   139a0:	stp	x20, x19, [sp, #16]
   139a4:	ldr	x8, [x0]
   139a8:	mov	x19, x0
   139ac:	mov	x0, x1
   139b0:	mov	x29, sp
   139b4:	mov	x20, x1
   139b8:	blr	x8
   139bc:	mov	w2, w0
   139c0:	mov	x0, x19
   139c4:	mov	x1, x20
   139c8:	ldp	x20, x19, [sp, #16]
   139cc:	ldp	x29, x30, [sp], #32
   139d0:	b	5710 <htab_remove_elt_with_hash@plt>

00000000000139d4 <htab_remove_elt_with_hash@@Base>:
   139d4:	stp	x29, x30, [sp, #-32]!
   139d8:	mov	w3, wzr
   139dc:	stp	x20, x19, [sp, #16]
   139e0:	mov	x29, sp
   139e4:	mov	x19, x0
   139e8:	bl	5580 <htab_find_slot_with_hash@plt>
   139ec:	cbz	x0, 13a18 <htab_remove_elt_with_hash@@Base+0x44>
   139f0:	ldr	x8, [x19, #16]
   139f4:	mov	x20, x0
   139f8:	cbz	x8, 13a04 <htab_remove_elt_with_hash@@Base+0x30>
   139fc:	ldr	x0, [x20]
   13a00:	blr	x8
   13a04:	mov	w8, #0x1                   	// #1
   13a08:	str	x8, [x20]
   13a0c:	ldr	x8, [x19, #48]
   13a10:	add	x8, x8, #0x1
   13a14:	str	x8, [x19, #48]
   13a18:	ldp	x20, x19, [sp, #16]
   13a1c:	ldp	x29, x30, [sp], #32
   13a20:	ret

0000000000013a24 <htab_clear_slot@@Base>:
   13a24:	stp	x29, x30, [sp, #-32]!
   13a28:	stp	x20, x19, [sp, #16]
   13a2c:	ldr	x8, [x0, #24]
   13a30:	mov	x29, sp
   13a34:	cmp	x8, x1
   13a38:	b.hi	13a8c <htab_clear_slot@@Base+0x68>  // b.pmore
   13a3c:	ldr	x9, [x0, #32]
   13a40:	mov	x19, x0
   13a44:	mov	x20, x1
   13a48:	add	x8, x8, x9, lsl #3
   13a4c:	cmp	x8, x1
   13a50:	b.ls	13a8c <htab_clear_slot@@Base+0x68>  // b.plast
   13a54:	ldr	x0, [x20]
   13a58:	cmp	x0, #0x1
   13a5c:	b.ls	13a8c <htab_clear_slot@@Base+0x68>  // b.plast
   13a60:	ldr	x8, [x19, #16]
   13a64:	cbz	x8, 13a6c <htab_clear_slot@@Base+0x48>
   13a68:	blr	x8
   13a6c:	mov	w8, #0x1                   	// #1
   13a70:	str	x8, [x20]
   13a74:	ldr	x8, [x19, #48]
   13a78:	add	x8, x8, #0x1
   13a7c:	str	x8, [x19, #48]
   13a80:	ldp	x20, x19, [sp, #16]
   13a84:	ldp	x29, x30, [sp], #32
   13a88:	ret
   13a8c:	bl	5820 <abort@plt>

0000000000013a90 <htab_traverse_noresize@@Base>:
   13a90:	stp	x29, x30, [sp, #-48]!
   13a94:	stp	x22, x21, [sp, #16]
   13a98:	stp	x20, x19, [sp, #32]
   13a9c:	ldp	x21, x8, [x0, #24]
   13aa0:	mov	x19, x2
   13aa4:	mov	x20, x1
   13aa8:	mov	x29, sp
   13aac:	add	x22, x21, x8, lsl #3
   13ab0:	ldr	x8, [x21]
   13ab4:	cmp	x8, #0x2
   13ab8:	b.cc	13acc <htab_traverse_noresize@@Base+0x3c>  // b.lo, b.ul, b.last
   13abc:	mov	x0, x21
   13ac0:	mov	x1, x19
   13ac4:	blr	x20
   13ac8:	cbz	w0, 13ad8 <htab_traverse_noresize@@Base+0x48>
   13acc:	add	x21, x21, #0x8
   13ad0:	cmp	x21, x22
   13ad4:	b.cc	13ab0 <htab_traverse_noresize@@Base+0x20>  // b.lo, b.ul, b.last
   13ad8:	ldp	x20, x19, [sp, #32]
   13adc:	ldp	x22, x21, [sp, #16]
   13ae0:	ldp	x29, x30, [sp], #48
   13ae4:	ret

0000000000013ae8 <htab_traverse@@Base>:
   13ae8:	stp	x29, x30, [sp, #-48]!
   13aec:	stp	x22, x21, [sp, #16]
   13af0:	stp	x20, x19, [sp, #32]
   13af4:	ldr	x8, [x0, #32]
   13af8:	mov	x19, x2
   13afc:	mov	x21, x0
   13b00:	mov	x20, x1
   13b04:	cmp	x8, #0x21
   13b08:	mov	x29, sp
   13b0c:	b.cc	13b30 <htab_traverse@@Base+0x48>  // b.lo, b.ul, b.last
   13b10:	ldp	x9, x10, [x21, #40]
   13b14:	sub	x9, x9, x10
   13b18:	lsl	x9, x9, #3
   13b1c:	cmp	x9, x8
   13b20:	b.cs	13b30 <htab_traverse@@Base+0x48>  // b.hs, b.nlast
   13b24:	mov	x0, x21
   13b28:	bl	13790 <htab_find_slot_with_hash@@Base+0x1c0>
   13b2c:	ldr	x8, [x21, #32]
   13b30:	ldr	x21, [x21, #24]
   13b34:	add	x22, x21, x8, lsl #3
   13b38:	ldr	x8, [x21]
   13b3c:	cmp	x8, #0x2
   13b40:	b.cc	13b54 <htab_traverse@@Base+0x6c>  // b.lo, b.ul, b.last
   13b44:	mov	x0, x21
   13b48:	mov	x1, x19
   13b4c:	blr	x20
   13b50:	cbz	w0, 13b60 <htab_traverse@@Base+0x78>
   13b54:	add	x21, x21, #0x8
   13b58:	cmp	x21, x22
   13b5c:	b.cc	13b38 <htab_traverse@@Base+0x50>  // b.lo, b.ul, b.last
   13b60:	ldp	x20, x19, [sp, #32]
   13b64:	ldp	x22, x21, [sp, #16]
   13b68:	ldp	x29, x30, [sp], #48
   13b6c:	ret

0000000000013b70 <htab_collisions@@Base>:
   13b70:	ldr	w8, [x0, #56]
   13b74:	cbz	w8, 13b8c <htab_collisions@@Base+0x1c>
   13b78:	ldr	s0, [x0, #60]
   13b7c:	ucvtf	d1, w8
   13b80:	ucvtf	d0, d0
   13b84:	fdiv	d0, d0, d1
   13b88:	ret
   13b8c:	fmov	d0, xzr
   13b90:	ret

0000000000013b94 <htab_hash_string@@Base>:
   13b94:	ldrb	w9, [x0]
   13b98:	cbz	w9, 13bc4 <htab_hash_string@@Base+0x30>
   13b9c:	mov	x8, x0
   13ba0:	mov	w0, wzr
   13ba4:	add	x8, x8, #0x1
   13ba8:	mov	w10, #0x43                  	// #67
   13bac:	mul	w11, w0, w10
   13bb0:	add	w11, w11, w9, uxtb
   13bb4:	ldrb	w9, [x8], #1
   13bb8:	sub	w0, w11, #0x71
   13bbc:	cbnz	w9, 13bac <htab_hash_string@@Base+0x18>
   13bc0:	ret
   13bc4:	mov	w0, wzr
   13bc8:	ret

0000000000013bcc <iterative_hash@@Base>:
   13bcc:	tst	x0, #0x3
   13bd0:	b.eq	13c84 <iterative_hash@@Base+0xb8>  // b.none
   13bd4:	mov	w8, #0x79b9                	// #31161
   13bd8:	cmp	w1, #0xc
   13bdc:	movk	w8, #0x9e37, lsl #16
   13be0:	b.cc	13d34 <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   13be4:	mov	w9, #0x79b9                	// #31161
   13be8:	mov	w10, w1
   13bec:	movk	w9, #0x9e37, lsl #16
   13bf0:	ldp	w11, w12, [x0]
   13bf4:	sub	w10, w10, #0xc
   13bf8:	cmp	w10, #0xb
   13bfc:	add	w9, w11, w9
   13c00:	ldr	w11, [x0, #8]
   13c04:	add	w8, w12, w8
   13c08:	sub	w9, w9, w8
   13c0c:	add	x0, x0, #0xc
   13c10:	add	w11, w11, w2
   13c14:	sub	w9, w9, w11
   13c18:	sub	w8, w8, w11
   13c1c:	eor	w9, w9, w11, lsr #13
   13c20:	sub	w8, w8, w9
   13c24:	sub	w11, w11, w9
   13c28:	eor	w8, w8, w9, lsl #8
   13c2c:	sub	w11, w11, w8
   13c30:	sub	w9, w9, w8
   13c34:	eor	w11, w11, w8, lsr #13
   13c38:	sub	w9, w9, w11
   13c3c:	sub	w8, w8, w11
   13c40:	eor	w9, w9, w11, lsr #12
   13c44:	sub	w8, w8, w9
   13c48:	sub	w11, w11, w9
   13c4c:	eor	w8, w8, w9, lsl #16
   13c50:	sub	w11, w11, w8
   13c54:	sub	w9, w9, w8
   13c58:	eor	w11, w11, w8, lsr #5
   13c5c:	sub	w9, w9, w11
   13c60:	sub	w8, w8, w11
   13c64:	eor	w9, w9, w11, lsr #3
   13c68:	sub	w8, w8, w9
   13c6c:	sub	w11, w11, w9
   13c70:	eor	w8, w8, w9, lsl #10
   13c74:	sub	w11, w11, w8
   13c78:	eor	w2, w11, w8, lsr #15
   13c7c:	b.hi	13bf0 <iterative_hash@@Base+0x24>  // b.pmore
   13c80:	b	13d40 <iterative_hash@@Base+0x174>
   13c84:	mov	w8, #0x79b9                	// #31161
   13c88:	cmp	w1, #0xc
   13c8c:	movk	w8, #0x9e37, lsl #16
   13c90:	b.cc	13d34 <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   13c94:	mov	w9, #0x79b9                	// #31161
   13c98:	mov	w10, w1
   13c9c:	movk	w9, #0x9e37, lsl #16
   13ca0:	ldp	w11, w12, [x0]
   13ca4:	sub	w10, w10, #0xc
   13ca8:	cmp	w10, #0xb
   13cac:	add	w9, w11, w9
   13cb0:	ldr	w11, [x0, #8]
   13cb4:	add	w8, w12, w8
   13cb8:	sub	w9, w9, w8
   13cbc:	add	x0, x0, #0xc
   13cc0:	add	w11, w11, w2
   13cc4:	sub	w9, w9, w11
   13cc8:	sub	w8, w8, w11
   13ccc:	eor	w9, w9, w11, lsr #13
   13cd0:	sub	w8, w8, w9
   13cd4:	sub	w11, w11, w9
   13cd8:	eor	w8, w8, w9, lsl #8
   13cdc:	sub	w11, w11, w8
   13ce0:	sub	w9, w9, w8
   13ce4:	eor	w11, w11, w8, lsr #13
   13ce8:	sub	w9, w9, w11
   13cec:	sub	w8, w8, w11
   13cf0:	eor	w9, w9, w11, lsr #12
   13cf4:	sub	w8, w8, w9
   13cf8:	sub	w11, w11, w9
   13cfc:	eor	w8, w8, w9, lsl #16
   13d00:	sub	w11, w11, w8
   13d04:	sub	w9, w9, w8
   13d08:	eor	w11, w11, w8, lsr #5
   13d0c:	sub	w9, w9, w11
   13d10:	sub	w8, w8, w11
   13d14:	eor	w9, w9, w11, lsr #3
   13d18:	sub	w8, w8, w9
   13d1c:	sub	w11, w11, w9
   13d20:	eor	w8, w8, w9, lsl #10
   13d24:	sub	w11, w11, w8
   13d28:	eor	w2, w11, w8, lsr #15
   13d2c:	b.hi	13ca0 <iterative_hash@@Base+0xd4>  // b.pmore
   13d30:	b	13d40 <iterative_hash@@Base+0x174>
   13d34:	mov	w9, #0x79b9                	// #31161
   13d38:	movk	w9, #0x9e37, lsl #16
   13d3c:	mov	w10, w1
   13d40:	sub	w11, w10, #0x1
   13d44:	cmp	w11, #0xa
   13d48:	add	w10, w2, w1
   13d4c:	b.hi	13dc0 <iterative_hash@@Base+0x1f4>  // b.pmore
   13d50:	adrp	x12, 14000 <xexit@@Base+0x18>
   13d54:	add	x12, x12, #0xbc8
   13d58:	adr	x13, 13d68 <iterative_hash@@Base+0x19c>
   13d5c:	ldrb	w14, [x12, x11]
   13d60:	add	x13, x13, x14, lsl #2
   13d64:	br	x13
   13d68:	ldrb	w11, [x0, #10]
   13d6c:	add	w10, w10, w11, lsl #24
   13d70:	ldrb	w11, [x0, #9]
   13d74:	add	w10, w10, w11, lsl #16
   13d78:	ldrb	w11, [x0, #8]
   13d7c:	add	w10, w10, w11, lsl #8
   13d80:	ldrb	w11, [x0, #7]
   13d84:	add	w8, w8, w11, lsl #24
   13d88:	ldrb	w11, [x0, #6]
   13d8c:	add	w8, w8, w11, lsl #16
   13d90:	ldrb	w11, [x0, #5]
   13d94:	add	w8, w8, w11, lsl #8
   13d98:	ldrb	w11, [x0, #4]
   13d9c:	add	w8, w8, w11
   13da0:	ldrb	w11, [x0, #3]
   13da4:	add	w9, w9, w11, lsl #24
   13da8:	ldrb	w11, [x0, #2]
   13dac:	add	w9, w9, w11, lsl #16
   13db0:	ldrb	w11, [x0, #1]
   13db4:	add	w9, w9, w11, lsl #8
   13db8:	ldrb	w11, [x0]
   13dbc:	add	w9, w9, w11
   13dc0:	sub	w9, w9, w8
   13dc4:	sub	w9, w9, w10
   13dc8:	sub	w8, w8, w10
   13dcc:	eor	w9, w9, w10, lsr #13
   13dd0:	sub	w8, w8, w9
   13dd4:	sub	w10, w10, w9
   13dd8:	eor	w8, w8, w9, lsl #8
   13ddc:	sub	w10, w10, w8
   13de0:	sub	w9, w9, w8
   13de4:	eor	w10, w10, w8, lsr #13
   13de8:	sub	w9, w9, w10
   13dec:	sub	w8, w8, w10
   13df0:	eor	w9, w9, w10, lsr #12
   13df4:	sub	w8, w8, w9
   13df8:	sub	w10, w10, w9
   13dfc:	eor	w8, w8, w9, lsl #16
   13e00:	sub	w10, w10, w8
   13e04:	sub	w9, w9, w8
   13e08:	eor	w10, w10, w8, lsr #5
   13e0c:	sub	w9, w9, w10
   13e10:	sub	w8, w8, w10
   13e14:	eor	w9, w9, w10, lsr #3
   13e18:	sub	w8, w8, w9
   13e1c:	eor	w8, w8, w9, lsl #10
   13e20:	sub	w9, w10, w9
   13e24:	sub	w9, w9, w8
   13e28:	eor	w0, w9, w8, lsr #15
   13e2c:	ret

0000000000013e30 <xmalloc_set_program_name@@Base>:
   13e30:	stp	x29, x30, [sp, #-32]!
   13e34:	str	x19, [sp, #16]
   13e38:	adrp	x19, 29000 <xexit@@Base+0x15018>
   13e3c:	ldr	x8, [x19, #1872]
   13e40:	adrp	x9, 29000 <xexit@@Base+0x15018>
   13e44:	mov	x29, sp
   13e48:	str	x0, [x9, #1528]
   13e4c:	cbnz	x8, 13e5c <xmalloc_set_program_name@@Base+0x2c>
   13e50:	mov	x0, xzr
   13e54:	bl	56f0 <sbrk@plt>
   13e58:	str	x0, [x19, #1872]
   13e5c:	ldr	x19, [sp, #16]
   13e60:	ldp	x29, x30, [sp], #32
   13e64:	ret

0000000000013e68 <xmalloc_failed@@Base>:
   13e68:	stp	x29, x30, [sp, #-48]!
   13e6c:	stp	x20, x19, [sp, #32]
   13e70:	adrp	x20, 29000 <xexit@@Base+0x15018>
   13e74:	str	x21, [sp, #16]
   13e78:	ldr	x21, [x20, #1872]
   13e7c:	mov	x19, x0
   13e80:	mov	x0, xzr
   13e84:	mov	x29, sp
   13e88:	bl	56f0 <sbrk@plt>
   13e8c:	adrp	x9, 28000 <xexit@@Base+0x14018>
   13e90:	ldr	x8, [x20, #1872]
   13e94:	ldr	x9, [x9, #4008]
   13e98:	adrp	x10, 29000 <xexit@@Base+0x15018>
   13e9c:	ldr	x2, [x10, #1528]
   13ea0:	adrp	x10, 28000 <xexit@@Base+0x14018>
   13ea4:	cmp	x21, #0x0
   13ea8:	ldr	x10, [x10, #3976]
   13eac:	csel	x8, x9, x8, eq  // eq = none
   13eb0:	sub	x5, x0, x8
   13eb4:	ldrb	w8, [x2]
   13eb8:	ldr	x0, [x10]
   13ebc:	adrp	x9, 14000 <xexit@@Base+0x18>
   13ec0:	adrp	x10, 14000 <xexit@@Base+0x18>
   13ec4:	add	x9, x9, #0xc3
   13ec8:	add	x10, x10, #0x15a
   13ecc:	cmp	w8, #0x0
   13ed0:	adrp	x1, 14000 <xexit@@Base+0x18>
   13ed4:	csel	x3, x10, x9, eq  // eq = none
   13ed8:	add	x1, x1, #0xdd7
   13edc:	mov	x4, x19
   13ee0:	bl	5440 <fprintf@plt>
   13ee4:	mov	w0, #0x1                   	// #1
   13ee8:	bl	5800 <xexit@plt>

0000000000013eec <xmalloc@@Base>:
   13eec:	stp	x29, x30, [sp, #-32]!
   13ef0:	cmp	x0, #0x0
   13ef4:	str	x19, [sp, #16]
   13ef8:	csinc	x19, x0, xzr, ne  // ne = any
   13efc:	mov	x0, x19
   13f00:	mov	x29, sp
   13f04:	bl	57e0 <malloc@plt>
   13f08:	cbz	x0, 13f18 <xmalloc@@Base+0x2c>
   13f0c:	ldr	x19, [sp, #16]
   13f10:	ldp	x29, x30, [sp], #32
   13f14:	ret
   13f18:	mov	x0, x19
   13f1c:	bl	5630 <xmalloc_failed@plt>

0000000000013f20 <xcalloc@@Base>:
   13f20:	stp	x29, x30, [sp, #-32]!
   13f24:	cmp	x0, #0x0
   13f28:	cset	w8, eq  // eq = none
   13f2c:	cmp	x1, #0x0
   13f30:	cset	w9, eq  // eq = none
   13f34:	orr	w8, w8, w9
   13f38:	cmp	w8, #0x0
   13f3c:	stp	x20, x19, [sp, #16]
   13f40:	csinc	x19, x1, xzr, eq  // eq = none
   13f44:	csinc	x20, x0, xzr, eq  // eq = none
   13f48:	mov	x0, x20
   13f4c:	mov	x1, x19
   13f50:	mov	x29, sp
   13f54:	bl	53e0 <calloc@plt>
   13f58:	cbz	x0, 13f68 <xcalloc@@Base+0x48>
   13f5c:	ldp	x20, x19, [sp, #16]
   13f60:	ldp	x29, x30, [sp], #32
   13f64:	ret
   13f68:	mul	x0, x20, x19
   13f6c:	bl	5630 <xmalloc_failed@plt>

0000000000013f70 <xrealloc@@Base>:
   13f70:	stp	x29, x30, [sp, #-32]!
   13f74:	cmp	x1, #0x0
   13f78:	str	x19, [sp, #16]
   13f7c:	csinc	x19, x1, xzr, ne  // ne = any
   13f80:	mov	x29, sp
   13f84:	cbz	x0, 13fa0 <xrealloc@@Base+0x30>
   13f88:	mov	x1, x19
   13f8c:	bl	5550 <realloc@plt>
   13f90:	cbz	x0, 13fac <xrealloc@@Base+0x3c>
   13f94:	ldr	x19, [sp, #16]
   13f98:	ldp	x29, x30, [sp], #32
   13f9c:	ret
   13fa0:	mov	x0, x19
   13fa4:	bl	57e0 <malloc@plt>
   13fa8:	cbnz	x0, 13f94 <xrealloc@@Base+0x24>
   13fac:	mov	x0, x19
   13fb0:	bl	5630 <xmalloc_failed@plt>

0000000000013fb4 <xstrdup@@Base>:
   13fb4:	stp	x29, x30, [sp, #-32]!
   13fb8:	stp	x20, x19, [sp, #16]
   13fbc:	mov	x29, sp
   13fc0:	mov	x19, x0
   13fc4:	bl	5430 <strlen@plt>
   13fc8:	add	x20, x0, #0x1
   13fcc:	mov	x0, x20
   13fd0:	bl	5770 <xmalloc@plt>
   13fd4:	mov	x1, x19
   13fd8:	mov	x2, x20
   13fdc:	ldp	x20, x19, [sp, #16]
   13fe0:	ldp	x29, x30, [sp], #32
   13fe4:	b	5390 <memcpy@plt>

0000000000013fe8 <xexit@@Base>:
   13fe8:	stp	x29, x30, [sp, #-32]!
   13fec:	str	x19, [sp, #16]
   13ff0:	adrp	x8, 28000 <xexit@@Base+0x14018>
   13ff4:	ldr	x8, [x8, #3200]
   13ff8:	mov	w19, w0
   13ffc:	mov	x29, sp
   14000:	ldr	x8, [x8]
   14004:	cbz	x8, 1400c <xexit@@Base+0x24>
   14008:	blr	x8
   1400c:	mov	w0, w19
   14010:	bl	58b0 <exit@plt>

Disassembly of section .fini:

0000000000014014 <.fini>:
   14014:	stp	x29, x30, [sp, #-16]!
   14018:	mov	x29, sp
   1401c:	ldp	x29, x30, [sp], #16
   14020:	ret
