
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ufs2.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_ufs_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <grub_ufs_read_inode>:
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	mov	x4, x2
  28:	ldr	w3, [x0, #184]
  2c:	udiv	w5, w1, w3
  30:	msub	w3, w5, w3, w1
  34:	ldr	w2, [x0, #188]
  38:	mul	w5, w5, w2
  3c:	cbz	x4, 88 <grub_ufs_read_inode+0x6c>
  40:	cmp	w3, #0x0
  44:	and	w2, w3, #0x1
  48:	cneg	w2, w2, lt  // lt = tstop
  4c:	ldr	w1, [x0, #16]
  50:	add	w5, w5, w1
  54:	ldr	w1, [x0, #100]
  58:	lsl	w5, w5, w1
  5c:	add	w1, w3, w3, lsr #31
  60:	mov	x3, #0x100                 	// #256
  64:	sbfiz	x2, x2, #8, #32
  68:	add	w1, w5, w1, asr #1
  6c:	ldr	x0, [x0, #1376]
  70:	bl	0 <grub_disk_read>
  74:	adrp	x0, 0 <grub_ufs_close>
  78:	ldr	x0, [x0]
  7c:	ldr	w0, [x0]
  80:	ldp	x29, x30, [sp], #16
  84:	ret
  88:	add	x4, x0, #0x568
  8c:	str	w1, [x0, #1640]
  90:	b	40 <grub_ufs_read_inode+0x24>
  94:	nop
	...

00000000000000a0 <grub_ufs_mount>:
  a0:	stp	x29, x30, [sp, #-64]!
  a4:	mov	x29, sp
  a8:	stp	x19, x20, [sp, #16]
  ac:	stp	x21, x22, [sp, #32]
  b0:	mov	x21, x0
  b4:	mov	x0, #0x678                 	// #1656
  b8:	bl	0 <grub_malloc>
  bc:	mov	x19, x0
  c0:	cbz	x0, 1d0 <grub_ufs_mount+0x130>
  c4:	adrp	x0, 0 <grub_ufs_close>
  c8:	ldr	x0, [x0]
  cc:	ldr	w1, [x0]
  d0:	cmn	w1, #0x1
  d4:	b.eq	1ac <grub_ufs_mount+0x10c>  // b.none
  d8:	stp	x23, x24, [sp, #48]
  dc:	adrp	x0, 0 <grub_ufs_close>
  e0:	ldr	x20, [x0]
  e4:	mov	x23, #0x560                 	// #1376
  e8:	adrp	x22, 0 <grub_ufs_close>
  ec:	mov	w24, #0x119                 	// #281
  f0:	movk	w24, #0x1954, lsl #16
  f4:	b	104 <grub_ufs_mount+0x64>
  f8:	ldr	w1, [x20, #4]!
  fc:	cmn	w1, #0x1
 100:	b.eq	190 <grub_ufs_mount+0xf0>  // b.none
 104:	mov	x4, x19
 108:	mov	x3, x23
 10c:	mov	x2, #0x0                   	// #0
 110:	sxtw	x1, w1
 114:	mov	x0, x21
 118:	bl	0 <grub_disk_read>
 11c:	ldr	x1, [x22]
 120:	ldr	w1, [x1]
 124:	cbnz	w1, 1a8 <grub_ufs_mount+0x108>
 128:	ldr	w1, [x19, #1372]
 12c:	cmp	w1, w24
 130:	b.ne	f8 <grub_ufs_mount+0x58>  // b.any
 134:	ldr	w0, [x19, #48]
 138:	cbz	w0, f8 <grub_ufs_mount+0x58>
 13c:	sub	w1, w0, #0x1
 140:	tst	w1, w0
 144:	b.ne	f8 <grub_ufs_mount+0x58>  // b.any
 148:	ldr	w1, [x19, #184]
 14c:	cbz	w1, f8 <grub_ufs_mount+0x58>
 150:	str	wzr, [x19, #1648]
 154:	mov	w4, w0
 158:	cmp	w0, #0x1
 15c:	b.ls	180 <grub_ufs_mount+0xe0>  // b.plast
 160:	mov	w0, #0x1                   	// #1
 164:	mov	w3, w0
 168:	mov	w1, w0
 16c:	add	w0, w0, #0x1
 170:	lsl	w2, w3, w1
 174:	cmp	w2, w4
 178:	b.cc	168 <grub_ufs_mount+0xc8>  // b.lo, b.ul, b.last
 17c:	str	w1, [x19, #1648]
 180:	str	x21, [x19, #1376]
 184:	str	wzr, [x19, #1644]
 188:	ldp	x23, x24, [sp, #48]
 18c:	b	1d0 <grub_ufs_mount+0x130>
 190:	ldp	x23, x24, [sp, #48]
 194:	adrp	x0, 0 <grub_ufs_close>
 198:	ldr	x1, [x0]
 19c:	mov	w0, #0x9                   	// #9
 1a0:	bl	0 <grub_error>
 1a4:	b	1c4 <grub_ufs_mount+0x124>
 1a8:	ldp	x23, x24, [sp, #48]
 1ac:	adrp	x0, 0 <grub_ufs_close>
 1b0:	ldr	x0, [x0]
 1b4:	ldr	w0, [x0]
 1b8:	cmp	w0, #0x0
 1bc:	ccmp	w0, #0xb, #0x4, ne  // ne = any
 1c0:	b.eq	194 <grub_ufs_mount+0xf4>  // b.none
 1c4:	mov	x0, x19
 1c8:	bl	0 <grub_free>
 1cc:	mov	x19, #0x0                   	// #0
 1d0:	mov	x0, x19
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	ldp	x29, x30, [sp], #64
 1e0:	ret
 1e4:	nop
	...

0000000000000200 <grub_ufs_mtime>:
 200:	stp	x29, x30, [sp, #-32]!
 204:	mov	x29, sp
 208:	stp	x19, x20, [sp, #16]
 20c:	mov	x19, x0
 210:	mov	x20, x1
 214:	adrp	x0, 0 <grub_ufs_close>
 218:	ldr	x0, [x0]
 21c:	ldr	x0, [x0]
 220:	bl	0 <grub_dl_ref>
 224:	ldr	x0, [x19]
 228:	bl	a0 <grub_ufs_mount>
 22c:	mov	x19, x0
 230:	cbz	x0, 27c <grub_ufs_mtime+0x7c>
 234:	ldr	w0, [x0, #32]
 238:	str	w0, [x20]
 23c:	ldr	x1, [x19, #1072]
 240:	cmp	x1, w0, sxtw
 244:	csel	w0, w0, w1, le
 248:	str	w0, [x20]
 24c:	adrp	x0, 0 <grub_ufs_close>
 250:	ldr	x0, [x0]
 254:	ldr	x0, [x0]
 258:	bl	0 <grub_dl_unref>
 25c:	mov	x0, x19
 260:	bl	0 <grub_free>
 264:	adrp	x0, 0 <grub_ufs_close>
 268:	ldr	x0, [x0]
 26c:	ldr	w0, [x0]
 270:	ldp	x19, x20, [sp, #16]
 274:	ldp	x29, x30, [sp], #32
 278:	ret
 27c:	str	wzr, [x20]
 280:	b	24c <grub_ufs_mtime+0x4c>
 284:	nop
	...

0000000000000298 <grub_ufs_uuid>:
 298:	stp	x29, x30, [sp, #-32]!
 29c:	mov	x29, sp
 2a0:	stp	x19, x20, [sp, #16]
 2a4:	mov	x20, x1
 2a8:	ldr	x19, [x0]
 2ac:	adrp	x0, 0 <grub_ufs_close>
 2b0:	ldr	x0, [x0]
 2b4:	ldr	x0, [x0]
 2b8:	bl	0 <grub_dl_ref>
 2bc:	mov	x0, x19
 2c0:	bl	a0 <grub_ufs_mount>
 2c4:	mov	x19, x0
 2c8:	cbz	x0, 2d4 <grub_ufs_uuid+0x3c>
 2cc:	ldr	x0, [x0, #144]
 2d0:	cbnz	x0, 308 <grub_ufs_uuid+0x70>
 2d4:	str	xzr, [x20]
 2d8:	adrp	x0, 0 <grub_ufs_close>
 2dc:	ldr	x0, [x0]
 2e0:	ldr	x0, [x0]
 2e4:	bl	0 <grub_dl_unref>
 2e8:	mov	x0, x19
 2ec:	bl	0 <grub_free>
 2f0:	adrp	x0, 0 <grub_ufs_close>
 2f4:	ldr	x0, [x0]
 2f8:	ldr	w0, [x0]
 2fc:	ldp	x19, x20, [sp, #16]
 300:	ldp	x29, x30, [sp], #32
 304:	ret
 308:	ldr	w2, [x19, #148]
 30c:	ldr	w1, [x19, #144]
 310:	adrp	x0, 0 <grub_ufs_close>
 314:	ldr	x0, [x0]
 318:	bl	0 <grub_xasprintf>
 31c:	str	x0, [x20]
 320:	b	2d8 <grub_ufs_uuid+0x40>
 324:	nop
	...

0000000000000340 <grub_ufs_label>:
 340:	stp	x29, x30, [sp, #-32]!
 344:	mov	x29, sp
 348:	stp	x19, x20, [sp, #16]
 34c:	mov	x19, x0
 350:	mov	x20, x1
 354:	adrp	x0, 0 <grub_ufs_close>
 358:	ldr	x0, [x0]
 35c:	ldr	x0, [x0]
 360:	bl	0 <grub_dl_ref>
 364:	str	xzr, [x20]
 368:	ldr	x0, [x19]
 36c:	bl	a0 <grub_ufs_mount>
 370:	mov	x19, x0
 374:	cbz	x0, 384 <grub_ufs_label+0x44>
 378:	add	x0, x0, #0x2a8
 37c:	bl	0 <grub_strdup>
 380:	str	x0, [x20]
 384:	adrp	x0, 0 <grub_ufs_close>
 388:	ldr	x0, [x0]
 38c:	ldr	x0, [x0]
 390:	bl	0 <grub_dl_unref>
 394:	mov	x0, x19
 398:	bl	0 <grub_free>
 39c:	adrp	x0, 0 <grub_ufs_close>
 3a0:	ldr	x0, [x0]
 3a4:	ldr	w0, [x0]
 3a8:	ldp	x19, x20, [sp, #16]
 3ac:	ldp	x29, x30, [sp], #32
 3b0:	ret
 3b4:	nop
	...

00000000000003c8 <grub_ufs_read_file>:
 3c8:	stp	x29, x30, [sp, #-160]!
 3cc:	mov	x29, sp
 3d0:	stp	x19, x20, [sp, #16]
 3d4:	stp	x27, x28, [sp, #80]
 3d8:	mov	x19, x0
 3dc:	str	x1, [sp, #112]
 3e0:	str	x2, [sp, #120]
 3e4:	ldr	x1, [x0, #1400]
 3e8:	add	x0, x4, x3
 3ec:	sub	x2, x1, x3
 3f0:	cmp	x0, x1
 3f4:	csel	x0, x2, x4, hi  // hi = pmore
 3f8:	str	x0, [sp, #136]
 3fc:	add	x0, x0, x3
 400:	str	x0, [sp, #128]
 404:	ldr	w20, [x19, #1648]
 408:	ldr	w27, [x19, #48]
 40c:	sub	x27, x27, #0x1
 410:	add	x27, x27, x0
 414:	lsr	x27, x27, x20
 418:	lsr	x20, x3, x20
 41c:	cmp	x27, x20
 420:	b.ls	69c <grub_ufs_read_file+0x2d4>  // b.plast
 424:	stp	x21, x22, [sp, #32]
 428:	stp	x23, x24, [sp, #48]
 42c:	stp	x25, x26, [sp, #64]
 430:	mov	x26, x3
 434:	mov	x25, x5
 438:	sub	x0, x27, #0x1
 43c:	str	x0, [sp, #104]
 440:	b	628 <grub_ufs_read_file+0x260>
 444:	add	x0, x19, #0x5d8
 448:	ldr	x1, [x0, x20, lsl #3]
 44c:	adrp	x0, 0 <grub_ufs_close>
 450:	ldr	x0, [x0]
 454:	ldr	w0, [x0]
 458:	cbnz	w0, 6b0 <grub_ufs_read_file+0x2e8>
 45c:	ldr	x0, [sp, #104]
 460:	mov	w2, w23
 464:	cmp	x0, x20
 468:	b.eq	5d4 <grub_ufs_read_file+0x20c>  // b.none
 46c:	ldr	w0, [x19, #1648]
 470:	lsr	x0, x26, x0
 474:	mov	w21, #0x0                   	// #0
 478:	cmp	x0, x20
 47c:	b.eq	5f0 <grub_ufs_read_file+0x228>  // b.none
 480:	cbz	x1, 604 <grub_ufs_read_file+0x23c>
 484:	ldr	x0, [x19, #1376]
 488:	ldr	x3, [sp, #112]
 48c:	str	x3, [x0, #48]
 490:	ldr	x0, [x19, #1376]
 494:	ldr	x3, [sp, #120]
 498:	str	x3, [x0, #56]
 49c:	ldr	w0, [x19, #100]
 4a0:	mov	x4, x25
 4a4:	mov	x3, x2
 4a8:	sxtw	x2, w21
 4ac:	lsl	x1, x1, x0
 4b0:	ldr	x0, [x19, #1376]
 4b4:	bl	0 <grub_disk_read>
 4b8:	ldr	x0, [x19, #1376]
 4bc:	str	xzr, [x0, #48]
 4c0:	adrp	x0, 0 <grub_ufs_close>
 4c4:	ldr	x0, [x0]
 4c8:	ldr	w0, [x0]
 4cc:	cbz	w0, 610 <grub_ufs_read_file+0x248>
 4d0:	mov	x0, #0xffffffffffffffff    	// #-1
 4d4:	ldp	x21, x22, [sp, #32]
 4d8:	ldp	x23, x24, [sp, #48]
 4dc:	ldp	x25, x26, [sp, #64]
 4e0:	b	6a0 <grub_ufs_read_file+0x2d8>
 4e4:	lsl	x2, x20, #3
 4e8:	ldr	x1, [x19, #1592]
 4ec:	add	x4, sp, #0x98
 4f0:	mov	x3, #0x8                   	// #8
 4f4:	sub	x2, x2, #0x60
 4f8:	lsl	x1, x1, x28
 4fc:	ldr	x0, [x19, #1376]
 500:	bl	0 <grub_disk_read>
 504:	ldr	x1, [sp, #152]
 508:	b	44c <grub_ufs_read_file+0x84>
 50c:	lsr	x2, x21, x22
 510:	ldr	x1, [x19, #1600]
 514:	add	x4, sp, #0x98
 518:	mov	x3, #0x8                   	// #8
 51c:	lsl	x2, x2, #3
 520:	lsl	x1, x1, x28
 524:	ldr	x0, [x19, #1376]
 528:	bl	0 <grub_disk_read>
 52c:	sub	w2, w24, #0x1
 530:	sxtw	x2, w2
 534:	and	x2, x2, x21
 538:	add	x4, sp, #0x98
 53c:	mov	x3, #0x8                   	// #8
 540:	lsl	x2, x2, #3
 544:	ldr	x1, [sp, #152]
 548:	lsl	x1, x1, x28
 54c:	ldr	x0, [x19, #1376]
 550:	bl	0 <grub_disk_read>
 554:	ldr	x1, [sp, #152]
 558:	b	44c <grub_ufs_read_file+0x84>
 55c:	lsl	w2, w22, #1
 560:	lsr	x2, x21, x2
 564:	ldr	x1, [x19, #1608]
 568:	add	x4, sp, #0x98
 56c:	mov	x3, #0x8                   	// #8
 570:	lsl	x2, x2, #3
 574:	lsl	x1, x1, x28
 578:	ldr	x0, [x19, #1376]
 57c:	bl	0 <grub_disk_read>
 580:	sub	w24, w24, #0x1
 584:	sxtw	x24, w24
 588:	lsr	x2, x21, x22
 58c:	and	x2, x2, x24
 590:	add	x4, sp, #0x98
 594:	mov	x3, #0x8                   	// #8
 598:	lsl	x2, x2, #3
 59c:	ldr	x1, [sp, #152]
 5a0:	lsl	x1, x1, x28
 5a4:	ldr	x0, [x19, #1376]
 5a8:	bl	0 <grub_disk_read>
 5ac:	and	x21, x21, x24
 5b0:	add	x4, sp, #0x98
 5b4:	mov	x3, #0x8                   	// #8
 5b8:	lsl	x2, x21, #3
 5bc:	ldr	x1, [sp, #152]
 5c0:	lsl	x1, x1, x28
 5c4:	ldr	x0, [x19, #1376]
 5c8:	bl	0 <grub_disk_read>
 5cc:	ldr	x1, [sp, #152]
 5d0:	b	44c <grub_ufs_read_file+0x84>
 5d4:	ldr	w0, [x19, #48]
 5d8:	sub	w2, w0, #0x1
 5dc:	mov	w0, w0
 5e0:	ldr	x3, [sp, #128]
 5e4:	ands	x2, x2, x3
 5e8:	csel	x2, x0, x2, eq  // eq = none
 5ec:	b	46c <grub_ufs_read_file+0xa4>
 5f0:	sub	w23, w23, #0x1
 5f4:	and	x23, x23, x26
 5f8:	mov	w21, w23
 5fc:	sub	x2, x2, w23, sxtw
 600:	b	480 <grub_ufs_read_file+0xb8>
 604:	mov	w1, #0x0                   	// #0
 608:	mov	x0, x25
 60c:	bl	0 <grub_memset>
 610:	ldr	w0, [x19, #48]
 614:	sub	w21, w0, w21
 618:	add	x25, x25, x21
 61c:	add	x20, x20, #0x1
 620:	cmp	x27, x20
 624:	b.eq	690 <grub_ufs_read_file+0x2c8>  // b.none
 628:	ldr	w23, [x19, #48]
 62c:	cmp	x20, #0xb
 630:	b.ls	444 <grub_ufs_read_file+0x7c>  // b.plast
 634:	ldr	w28, [x19, #100]
 638:	sub	x21, x20, #0xc
 63c:	ldr	w22, [x19, #1648]
 640:	sub	w22, w22, #0x3
 644:	mov	w0, #0x1                   	// #1
 648:	lsl	w24, w0, w22
 64c:	sxtw	x0, w24
 650:	cmp	x21, w24, sxtw
 654:	b.cc	4e4 <grub_ufs_read_file+0x11c>  // b.lo, b.ul, b.last
 658:	sub	x21, x21, x0
 65c:	mul	x0, x0, x0
 660:	cmp	x21, x0
 664:	b.cc	50c <grub_ufs_read_file+0x144>  // b.lo, b.ul, b.last
 668:	sub	x21, x21, x0
 66c:	add	w0, w22, w22, lsl #1
 670:	lsr	x0, x21, x0
 674:	cbz	x0, 55c <grub_ufs_read_file+0x194>
 678:	adrp	x0, 0 <grub_ufs_close>
 67c:	ldr	x1, [x0]
 680:	mov	w0, #0x9                   	// #9
 684:	bl	0 <grub_error>
 688:	mov	x1, #0x0                   	// #0
 68c:	b	44c <grub_ufs_read_file+0x84>
 690:	ldp	x21, x22, [sp, #32]
 694:	ldp	x23, x24, [sp, #48]
 698:	ldp	x25, x26, [sp, #64]
 69c:	ldr	x0, [sp, #136]
 6a0:	ldp	x19, x20, [sp, #16]
 6a4:	ldp	x27, x28, [sp, #80]
 6a8:	ldp	x29, x30, [sp], #160
 6ac:	ret
 6b0:	mov	x0, #0xffffffffffffffff    	// #-1
 6b4:	ldp	x21, x22, [sp, #32]
 6b8:	ldp	x23, x24, [sp, #48]
 6bc:	ldp	x25, x26, [sp, #64]
 6c0:	b	6a0 <grub_ufs_read_file+0x2d8>
 6c4:	nop
	...

00000000000006d8 <grub_ufs_read>:
 6d8:	stp	x29, x30, [sp, #-16]!
 6dc:	mov	x29, sp
 6e0:	mov	x5, x1
 6e4:	mov	x4, x2
 6e8:	ldr	x3, [x0, #24]
 6ec:	ldr	x2, [x0, #96]
 6f0:	ldr	x1, [x0, #88]
 6f4:	ldr	x0, [x0, #80]
 6f8:	bl	3c8 <grub_ufs_read_file>
 6fc:	ldp	x29, x30, [sp], #16
 700:	ret

0000000000000704 <grub_ufs_find_file>:
 704:	stp	x29, x30, [sp, #-128]!
 708:	mov	x29, sp
 70c:	stp	x21, x22, [sp, #32]
 710:	stp	x25, x26, [sp, #64]
 714:	mov	x22, x0
 718:	mov	x25, x1
 71c:	str	x1, [sp, #104]
 720:	mov	x0, x1
 724:	bl	0 <grub_strlen>
 728:	add	x0, x0, #0x2
 72c:	bl	0 <grub_malloc>
 730:	cbz	x0, 7b4 <grub_ufs_find_file+0xb0>
 734:	stp	x19, x20, [sp, #16]
 738:	stp	x23, x24, [sp, #48]
 73c:	stp	x27, x28, [sp, #80]
 740:	mov	x26, x0
 744:	mov	x20, #0x0                   	// #0
 748:	mov	x28, #0x8                   	// #8
 74c:	ldrb	w0, [x25]
 750:	cmp	w0, #0x2f
 754:	b.ne	764 <grub_ufs_find_file+0x60>  // b.any
 758:	ldrb	w0, [x25, #1]!
 75c:	cmp	w0, #0x2f
 760:	b.eq	758 <grub_ufs_find_file+0x54>  // b.none
 764:	cbz	w0, 7c4 <grub_ufs_find_file+0xc0>
 768:	ldrh	w0, [x22, #1384]
 76c:	and	w0, w0, #0xe000
 770:	cmp	w0, #0x4, lsl #12
 774:	b.ne	7e0 <grub_ufs_find_file+0xdc>  // b.any
 778:	ldrb	w0, [x25]
 77c:	cmp	w0, #0x2f
 780:	mov	x27, x25
 784:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 788:	b.eq	79c <grub_ufs_find_file+0x98>  // b.none
 78c:	ldrb	w0, [x27, #1]!
 790:	cmp	w0, #0x2f
 794:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 798:	b.ne	78c <grub_ufs_find_file+0x88>  // b.any
 79c:	ldr	x0, [x22, #1400]
 7a0:	cbz	x0, 7f4 <grub_ufs_find_file+0xf0>
 7a4:	mov	w19, #0x0                   	// #0
 7a8:	mov	x24, x20
 7ac:	sub	x21, x27, x25
 7b0:	b	934 <grub_ufs_find_file+0x230>
 7b4:	adrp	x0, 0 <grub_ufs_close>
 7b8:	ldr	x0, [x0]
 7bc:	ldr	w0, [x0]
 7c0:	b	828 <grub_ufs_find_file+0x124>
 7c4:	mov	x0, x26
 7c8:	bl	0 <grub_free>
 7cc:	mov	w0, #0x0                   	// #0
 7d0:	ldp	x19, x20, [sp, #16]
 7d4:	ldp	x23, x24, [sp, #48]
 7d8:	ldp	x27, x28, [sp, #80]
 7dc:	b	828 <grub_ufs_find_file+0x124>
 7e0:	adrp	x0, 0 <grub_ufs_close>
 7e4:	ldr	x1, [x0]
 7e8:	mov	w0, #0x4                   	// #4
 7ec:	bl	0 <grub_error>
 7f0:	b	808 <grub_ufs_find_file+0x104>
 7f4:	ldr	x2, [sp, #104]
 7f8:	adrp	x0, 0 <grub_ufs_close>
 7fc:	ldr	x1, [x0]
 800:	mov	w0, #0x5                   	// #5
 804:	bl	0 <grub_error>
 808:	mov	x0, x26
 80c:	bl	0 <grub_free>
 810:	adrp	x0, 0 <grub_ufs_close>
 814:	ldr	x0, [x0]
 818:	ldr	w0, [x0]
 81c:	ldp	x19, x20, [sp, #16]
 820:	ldp	x23, x24, [sp, #48]
 824:	ldp	x27, x28, [sp, #80]
 828:	ldp	x21, x22, [sp, #32]
 82c:	ldp	x25, x26, [sp, #64]
 830:	ldp	x29, x30, [sp], #128
 834:	ret
 838:	ldr	x23, [x22, #1400]
 83c:	ldr	w0, [x22, #1644]
 840:	add	w0, w0, #0x1
 844:	str	w0, [x22, #1644]
 848:	cmp	w0, #0x8
 84c:	b.gt	8d0 <grub_ufs_find_file+0x1cc>
 850:	add	x0, x23, #0x1
 854:	bl	0 <grub_malloc>
 858:	mov	x19, x0
 85c:	cbz	x0, 8e0 <grub_ufs_find_file+0x1dc>
 860:	ldr	x0, [x22, #1408]
 864:	cbnz	x0, 874 <grub_ufs_find_file+0x170>
 868:	ldr	x0, [x22, #1400]
 86c:	cmp	x0, #0x78
 870:	b.ls	8f4 <grub_ufs_find_file+0x1f0>  // b.plast
 874:	mov	x5, x19
 878:	mov	x4, x23
 87c:	mov	x3, x20
 880:	mov	x2, x20
 884:	mov	x1, x20
 888:	mov	x0, x22
 88c:	bl	3c8 <grub_ufs_read_file>
 890:	tbnz	x0, #63, 904 <grub_ufs_find_file+0x200>
 894:	strb	wzr, [x19, x23]
 898:	ldrb	w0, [x19]
 89c:	cmp	w0, #0x2f
 8a0:	mov	x2, x20
 8a4:	mov	w0, #0x2                   	// #2
 8a8:	csel	w1, w21, w0, ne  // ne = any
 8ac:	mov	x0, x22
 8b0:	bl	1c <grub_ufs_read_inode>
 8b4:	cbnz	w0, 910 <grub_ufs_find_file+0x20c>
 8b8:	mov	x1, x19
 8bc:	mov	x0, x22
 8c0:	bl	704 <grub_ufs_find_file>
 8c4:	mov	x0, x19
 8c8:	bl	0 <grub_free>
 8cc:	b	8e0 <grub_ufs_find_file+0x1dc>
 8d0:	adrp	x0, 0 <grub_ufs_close>
 8d4:	ldr	x1, [x0]
 8d8:	mov	w0, #0x19                  	// #25
 8dc:	bl	0 <grub_error>
 8e0:	adrp	x0, 0 <grub_ufs_close>
 8e4:	ldr	x0, [x0]
 8e8:	ldr	w0, [x0]
 8ec:	cbz	w0, 9c8 <grub_ufs_find_file+0x2c4>
 8f0:	b	808 <grub_ufs_find_file+0x104>
 8f4:	add	x1, x22, #0x5d8
 8f8:	mov	x0, x19
 8fc:	bl	0 <grub_strcpy>
 900:	b	894 <grub_ufs_find_file+0x190>
 904:	mov	x0, x19
 908:	bl	0 <grub_free>
 90c:	b	8e0 <grub_ufs_find_file+0x1dc>
 910:	mov	x0, x19
 914:	bl	0 <grub_free>
 918:	b	8e0 <grub_ufs_find_file+0x1dc>
 91c:	ldrh	w0, [sp, #124]
 920:	add	w19, w19, w0
 924:	mov	w24, w19
 928:	ldr	x0, [x22, #1400]
 92c:	cmp	x0, w19, uxtw
 930:	b.ls	7f4 <grub_ufs_find_file+0xf0>  // b.plast
 934:	add	x5, sp, #0x78
 938:	mov	x4, x28
 93c:	mov	x3, x24
 940:	mov	x2, x20
 944:	mov	x1, x20
 948:	mov	x0, x22
 94c:	bl	3c8 <grub_ufs_read_file>
 950:	tbnz	x0, #63, 808 <grub_ufs_find_file+0x104>
 954:	ldrb	w23, [sp, #127]
 958:	cmp	x23, x21
 95c:	b.lt	91c <grub_ufs_find_file+0x218>  // b.tstop
 960:	mov	x5, x26
 964:	cinc	x4, x21, ne  // ne = any
 968:	add	x3, x24, #0x8
 96c:	mov	x2, x20
 970:	mov	x1, x20
 974:	mov	x0, x22
 978:	bl	3c8 <grub_ufs_read_file>
 97c:	tbnz	x0, #63, 808 <grub_ufs_find_file+0x104>
 980:	mov	x2, x21
 984:	mov	x1, x26
 988:	mov	x0, x25
 98c:	bl	0 <grub_strncmp>
 990:	cbnz	w0, 91c <grub_ufs_find_file+0x218>
 994:	cmp	x23, x21
 998:	b.eq	9a4 <grub_ufs_find_file+0x2a0>  // b.none
 99c:	ldrb	w0, [x26, x21]
 9a0:	cbnz	w0, 91c <grub_ufs_find_file+0x218>
 9a4:	ldr	w21, [x22, #1640]
 9a8:	mov	x2, x20
 9ac:	ldr	w1, [sp, #120]
 9b0:	mov	x0, x22
 9b4:	bl	1c <grub_ufs_read_inode>
 9b8:	ldrh	w0, [x22, #1384]
 9bc:	and	w0, w0, #0xe000
 9c0:	cmp	w0, #0xa, lsl #12
 9c4:	b.eq	838 <grub_ufs_find_file+0x134>  // b.none
 9c8:	mov	x25, x27
 9cc:	b	74c <grub_ufs_find_file+0x48>
	...

00000000000009f0 <grub_ufs_open>:
 9f0:	stp	x29, x30, [sp, #-48]!
 9f4:	mov	x29, sp
 9f8:	stp	x19, x20, [sp, #16]
 9fc:	str	x21, [sp, #32]
 a00:	mov	x21, x0
 a04:	mov	x20, x1
 a08:	ldr	x0, [x0, #8]
 a0c:	ldr	x0, [x0]
 a10:	bl	a0 <grub_ufs_mount>
 a14:	cbz	x0, a78 <grub_ufs_open+0x88>
 a18:	mov	x19, x0
 a1c:	mov	x2, #0x0                   	// #0
 a20:	mov	w1, #0x2                   	// #2
 a24:	bl	1c <grub_ufs_read_inode>
 a28:	adrp	x0, 0 <grub_ufs_close>
 a2c:	ldr	x0, [x0]
 a30:	ldr	w0, [x0]
 a34:	cbnz	w0, a88 <grub_ufs_open+0x98>
 a38:	cbz	x20, a48 <grub_ufs_open+0x58>
 a3c:	ldrb	w0, [x20]
 a40:	cmp	w0, #0x2f
 a44:	b.eq	aa0 <grub_ufs_open+0xb0>  // b.none
 a48:	mov	x2, x20
 a4c:	adrp	x0, 0 <grub_ufs_close>
 a50:	ldr	x1, [x0]
 a54:	mov	w0, #0x7                   	// #7
 a58:	bl	0 <grub_error>
 a5c:	adrp	x0, 0 <grub_ufs_close>
 a60:	ldr	x0, [x0]
 a64:	ldr	w0, [x0]
 a68:	ldp	x19, x20, [sp, #16]
 a6c:	ldr	x21, [sp, #32]
 a70:	ldp	x29, x30, [sp], #48
 a74:	ret
 a78:	adrp	x0, 0 <grub_ufs_close>
 a7c:	ldr	x0, [x0]
 a80:	ldr	w0, [x0]
 a84:	b	a68 <grub_ufs_open+0x78>
 a88:	mov	x0, x19
 a8c:	bl	0 <grub_free>
 a90:	adrp	x0, 0 <grub_ufs_close>
 a94:	ldr	x0, [x0]
 a98:	ldr	w0, [x0]
 a9c:	b	a68 <grub_ufs_open+0x78>
 aa0:	mov	x1, x20
 aa4:	mov	x0, x19
 aa8:	bl	704 <grub_ufs_find_file>
 aac:	adrp	x0, 0 <grub_ufs_close>
 ab0:	ldr	x0, [x0]
 ab4:	ldr	w0, [x0]
 ab8:	cbnz	w0, acc <grub_ufs_open+0xdc>
 abc:	str	x19, [x21, #80]
 ac0:	ldr	x1, [x19, #1400]
 ac4:	str	x1, [x21, #64]
 ac8:	b	a68 <grub_ufs_open+0x78>
 acc:	mov	x0, x19
 ad0:	bl	0 <grub_free>
 ad4:	adrp	x0, 0 <grub_ufs_close>
 ad8:	ldr	x0, [x0]
 adc:	ldr	w0, [x0]
 ae0:	b	a68 <grub_ufs_open+0x78>
 ae4:	nop
	...

0000000000000af8 <grub_ufs_dir>:
 af8:	stp	x29, x30, [sp, #-384]!
 afc:	mov	x29, sp
 b00:	stp	x19, x20, [sp, #16]
 b04:	stp	x21, x22, [sp, #32]
 b08:	mov	x20, x1
 b0c:	mov	x21, x2
 b10:	mov	x22, x3
 b14:	ldr	x0, [x0]
 b18:	bl	a0 <grub_ufs_mount>
 b1c:	cbz	x0, b80 <grub_ufs_dir+0x88>
 b20:	mov	x19, x0
 b24:	mov	x2, #0x0                   	// #0
 b28:	mov	w1, #0x2                   	// #2
 b2c:	bl	1c <grub_ufs_read_inode>
 b30:	adrp	x0, 0 <grub_ufs_close>
 b34:	ldr	x0, [x0]
 b38:	ldr	w0, [x0]
 b3c:	cbnz	w0, b70 <grub_ufs_dir+0x78>
 b40:	cbz	x20, b50 <grub_ufs_dir+0x58>
 b44:	ldrb	w0, [x20]
 b48:	cmp	w0, #0x2f
 b4c:	b.eq	b90 <grub_ufs_dir+0x98>  // b.none
 b50:	mov	x2, x20
 b54:	adrp	x0, 0 <grub_ufs_close>
 b58:	ldr	x1, [x0]
 b5c:	mov	w0, #0x7                   	// #7
 b60:	bl	0 <grub_error>
 b64:	adrp	x0, 0 <grub_ufs_close>
 b68:	ldr	x0, [x0]
 b6c:	ldr	w0, [x0]
 b70:	ldp	x19, x20, [sp, #16]
 b74:	ldp	x21, x22, [sp, #32]
 b78:	ldp	x29, x30, [sp], #384
 b7c:	ret
 b80:	adrp	x0, 0 <grub_ufs_close>
 b84:	ldr	x0, [x0]
 b88:	ldr	w0, [x0]
 b8c:	b	b70 <grub_ufs_dir+0x78>
 b90:	stp	x23, x24, [sp, #48]
 b94:	mov	x1, x20
 b98:	mov	x0, x19
 b9c:	bl	704 <grub_ufs_find_file>
 ba0:	adrp	x0, 0 <grub_ufs_close>
 ba4:	ldr	x0, [x0]
 ba8:	ldr	w24, [x0]
 bac:	cbnz	w24, cdc <grub_ufs_dir+0x1e4>
 bb0:	ldrh	w0, [x19, #1384]
 bb4:	and	w0, w0, #0xe000
 bb8:	cmp	w0, #0x4, lsl #12
 bbc:	b.ne	ccc <grub_ufs_dir+0x1d4>  // b.any
 bc0:	str	x27, [sp, #80]
 bc4:	ldr	x0, [x19, #1400]
 bc8:	mov	x27, #0x0                   	// #0
 bcc:	cbz	x0, d44 <grub_ufs_dir+0x24c>
 bd0:	stp	x25, x26, [sp, #64]
 bd4:	mov	x25, #0x8                   	// #8
 bd8:	mov	x26, #0x10                  	// #16
 bdc:	add	x5, sp, #0x68
 be0:	mov	x4, x25
 be4:	mov	x3, x27
 be8:	mov	x2, #0x0                   	// #0
 bec:	mov	x1, #0x0                   	// #0
 bf0:	mov	x0, x19
 bf4:	bl	3c8 <grub_ufs_read_file>
 bf8:	tbnz	x0, #63, d20 <grub_ufs_dir+0x228>
 bfc:	ldrh	w0, [sp, #108]
 c00:	cbz	w0, d2c <grub_ufs_dir+0x234>
 c04:	ldrb	w23, [sp, #111]
 c08:	add	w0, w23, #0x1
 c0c:	sxtw	x0, w0
 c10:	bl	0 <grub_malloc>
 c14:	mov	x20, x0
 c18:	cbz	x0, d38 <grub_ufs_dir+0x240>
 c1c:	mov	x2, x26
 c20:	mov	w1, #0x0                   	// #0
 c24:	add	x0, sp, #0x70
 c28:	bl	0 <grub_memset>
 c2c:	and	x23, x23, #0xff
 c30:	mov	x5, x20
 c34:	mov	x4, x23
 c38:	add	x3, x27, #0x8
 c3c:	mov	x2, #0x0                   	// #0
 c40:	mov	x1, #0x0                   	// #0
 c44:	mov	x0, x19
 c48:	bl	3c8 <grub_ufs_read_file>
 c4c:	tbnz	x0, #63, cf8 <grub_ufs_dir+0x200>
 c50:	strb	wzr, [x20, x23]
 c54:	add	x2, sp, #0x80
 c58:	ldr	w1, [sp, #104]
 c5c:	mov	x0, x19
 c60:	bl	1c <grub_ufs_read_inode>
 c64:	ldrh	w0, [sp, #128]
 c68:	and	w0, w0, #0xe000
 c6c:	cmp	w0, #0x4, lsl #12
 c70:	cset	w1, eq  // eq = none
 c74:	ldrb	w0, [sp, #112]
 c78:	bfxil	w0, w1, #0, #1
 c7c:	ldr	x1, [sp, #168]
 c80:	str	w1, [sp, #116]
 c84:	orr	w0, w0, #0x2
 c88:	strb	w0, [sp, #112]
 c8c:	mov	x2, x22
 c90:	add	x1, sp, #0x70
 c94:	mov	x0, x20
 c98:	blr	x21
 c9c:	cbnz	w0, d0c <grub_ufs_dir+0x214>
 ca0:	mov	x0, x20
 ca4:	bl	0 <grub_free>
 ca8:	ldrh	w0, [sp, #108]
 cac:	add	w24, w24, w0
 cb0:	mov	w27, w24
 cb4:	ldr	x0, [x19, #1400]
 cb8:	cmp	x0, w24, uxtw
 cbc:	b.hi	bdc <grub_ufs_dir+0xe4>  // b.pmore
 cc0:	ldp	x25, x26, [sp, #64]
 cc4:	ldr	x27, [sp, #80]
 cc8:	b	cdc <grub_ufs_dir+0x1e4>
 ccc:	adrp	x0, 0 <grub_ufs_close>
 cd0:	ldr	x1, [x0]
 cd4:	mov	w0, #0x4                   	// #4
 cd8:	bl	0 <grub_error>
 cdc:	mov	x0, x19
 ce0:	bl	0 <grub_free>
 ce4:	adrp	x0, 0 <grub_ufs_close>
 ce8:	ldr	x0, [x0]
 cec:	ldr	w0, [x0]
 cf0:	ldp	x23, x24, [sp, #48]
 cf4:	b	b70 <grub_ufs_dir+0x78>
 cf8:	mov	x0, x20
 cfc:	bl	0 <grub_free>
 d00:	ldp	x25, x26, [sp, #64]
 d04:	ldr	x27, [sp, #80]
 d08:	b	cdc <grub_ufs_dir+0x1e4>
 d0c:	mov	x0, x20
 d10:	bl	0 <grub_free>
 d14:	ldp	x25, x26, [sp, #64]
 d18:	ldr	x27, [sp, #80]
 d1c:	b	cdc <grub_ufs_dir+0x1e4>
 d20:	ldp	x25, x26, [sp, #64]
 d24:	ldr	x27, [sp, #80]
 d28:	b	cdc <grub_ufs_dir+0x1e4>
 d2c:	ldp	x25, x26, [sp, #64]
 d30:	ldr	x27, [sp, #80]
 d34:	b	cdc <grub_ufs_dir+0x1e4>
 d38:	ldp	x25, x26, [sp, #64]
 d3c:	ldr	x27, [sp, #80]
 d40:	b	cdc <grub_ufs_dir+0x1e4>
 d44:	ldr	x27, [sp, #80]
 d48:	b	cdc <grub_ufs_dir+0x1e4>
 d4c:	nop
	...

0000000000000d68 <grub_mod_init>:
 d68:	stp	x29, x30, [sp, #-32]!
 d6c:	mov	x29, sp
 d70:	str	x19, [sp, #16]
 d74:	mov	x19, x0
 d78:	adrp	x0, 0 <grub_ufs_close>
 d7c:	ldr	x1, [x0]
 d80:	add	x1, x1, #0x18
 d84:	adrp	x0, 0 <grub_ufs_close>
 d88:	ldr	x0, [x0]
 d8c:	bl	0 <grub_list_push>
 d90:	adrp	x0, 0 <grub_ufs_close>
 d94:	ldr	x0, [x0]
 d98:	str	x19, [x0]
 d9c:	ldr	x19, [sp, #16]
 da0:	ldp	x29, x30, [sp], #32
 da4:	ret
	...

0000000000000dc0 <grub_mod_fini>:
 dc0:	stp	x29, x30, [sp, #-16]!
 dc4:	mov	x29, sp
 dc8:	adrp	x0, 0 <grub_ufs_close>
 dcc:	ldr	x0, [x0]
 dd0:	add	x0, x0, #0x18
 dd4:	bl	0 <grub_list_remove>
 dd8:	ldp	x29, x30, [sp], #16
 ddc:	ret
	...
