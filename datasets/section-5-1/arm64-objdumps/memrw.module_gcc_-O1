
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//memrw.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_cmd_write>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	sub	w0, w1, #0x2
  14:	cmp	w0, #0x1
  18:	b.hi	90 <grub_cmd_write+0x90>  // b.pmore
  1c:	stp	x19, x20, [sp, #16]
  20:	str	x23, [sp, #48]
  24:	mov	w19, w1
  28:	mov	x20, x2
  2c:	mov	w2, #0x0                   	// #0
  30:	mov	x1, #0x0                   	// #0
  34:	ldr	x0, [x20]
  38:	bl	0 <grub_strtoul>
  3c:	mov	x22, x0
  40:	mov	w2, #0x0                   	// #0
  44:	mov	x1, #0x0                   	// #0
  48:	ldr	x0, [x20, #8]
  4c:	bl	0 <grub_strtoul>
  50:	mov	x23, x0
  54:	mov	w2, w0
  58:	cmp	w19, #0x3
  5c:	b.eq	ac <grub_cmd_write+0xac>  // b.none
  60:	ldr	x0, [x21, #16]
  64:	ldrb	w0, [x0, #6]
  68:	cmp	w0, #0x64
  6c:	b.eq	18c <grub_cmd_write+0x18c>  // b.none
  70:	cmp	w0, #0x77
  74:	b.eq	1a0 <grub_cmd_write+0x1a0>  // b.none
  78:	cmp	w0, #0x62
  7c:	b.eq	1b8 <grub_cmd_write+0x1b8>  // b.none
  80:	mov	w0, #0x0                   	// #0
  84:	ldp	x19, x20, [sp, #16]
  88:	ldr	x23, [sp, #48]
  8c:	b	a0 <grub_cmd_write+0xa0>
  90:	adrp	x0, 0 <grub_cmd_write>
  94:	ldr	x1, [x0]
  98:	mov	w0, #0x12                  	// #18
  9c:	bl	0 <grub_error>
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x29, x30, [sp], #64
  a8:	ret
  ac:	mov	w2, #0x0                   	// #0
  b0:	mov	x1, #0x0                   	// #0
  b4:	ldr	x0, [x20, #16]
  b8:	bl	0 <grub_strtoul>
  bc:	mov	x1, x0
  c0:	and	w2, w0, w23
  c4:	ldr	x0, [x21, #16]
  c8:	ldrb	w0, [x0, #6]
  cc:	cmp	w0, #0x62
  d0:	b.ne	108 <grub_cmd_write+0x108>  // b.any
  d4:	and	w0, w1, #0xff
  d8:	cmp	w0, #0xff
  dc:	b.eq	1b8 <grub_cmd_write+0x1b8>  // b.none
  e0:	ldrb	w0, [x22]
  e4:	and	w0, w0, #0xff
  e8:	bic	w1, w0, w1
  ec:	orr	w1, w1, w2
  f0:	and	w1, w1, #0xff
  f4:	strb	w1, [x22]
  f8:	mov	w0, #0x0                   	// #0
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldr	x23, [sp, #48]
 104:	b	a0 <grub_cmd_write+0xa0>
 108:	cmp	w0, #0x61
 10c:	b.ls	1d0 <grub_cmd_write+0x1d0>  // b.plast
 110:	cmp	w0, #0x64
 114:	b.eq	164 <grub_cmd_write+0x164>  // b.none
 118:	cmp	w0, #0x77
 11c:	b.ne	154 <grub_cmd_write+0x154>  // b.any
 120:	mov	w0, #0xffff                	// #65535
 124:	cmp	w0, w1, uxth
 128:	b.eq	1a0 <grub_cmd_write+0x1a0>  // b.none
 12c:	ldrh	w0, [x22]
 130:	and	w0, w0, #0xffff
 134:	bic	w1, w0, w1
 138:	orr	w1, w1, w2
 13c:	and	w1, w1, #0xffff
 140:	strh	w1, [x22]
 144:	mov	w0, #0x0                   	// #0
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldr	x23, [sp, #48]
 150:	b	a0 <grub_cmd_write+0xa0>
 154:	mov	w0, #0x0                   	// #0
 158:	ldp	x19, x20, [sp, #16]
 15c:	ldr	x23, [sp, #48]
 160:	b	a0 <grub_cmd_write+0xa0>
 164:	cmn	w1, #0x1
 168:	b.eq	18c <grub_cmd_write+0x18c>  // b.none
 16c:	ldr	w0, [x22]
 170:	bic	w1, w0, w1
 174:	orr	w1, w1, w2
 178:	str	w1, [x22]
 17c:	mov	w0, #0x0                   	// #0
 180:	ldp	x19, x20, [sp, #16]
 184:	ldr	x23, [sp, #48]
 188:	b	a0 <grub_cmd_write+0xa0>
 18c:	str	w2, [x22]
 190:	mov	w0, #0x0                   	// #0
 194:	ldp	x19, x20, [sp, #16]
 198:	ldr	x23, [sp, #48]
 19c:	b	a0 <grub_cmd_write+0xa0>
 1a0:	and	w1, w2, #0xffff
 1a4:	strh	w1, [x22]
 1a8:	mov	w0, #0x0                   	// #0
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldr	x23, [sp, #48]
 1b4:	b	a0 <grub_cmd_write+0xa0>
 1b8:	and	w1, w2, #0xff
 1bc:	strb	w1, [x22]
 1c0:	mov	w0, #0x0                   	// #0
 1c4:	ldp	x19, x20, [sp, #16]
 1c8:	ldr	x23, [sp, #48]
 1cc:	b	a0 <grub_cmd_write+0xa0>
 1d0:	mov	w0, #0x0                   	// #0
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldr	x23, [sp, #48]
 1dc:	b	a0 <grub_cmd_write+0xa0>
	...

00000000000001e8 <grub_cmd_read>:
 1e8:	stp	x29, x30, [sp, #-48]!
 1ec:	mov	x29, sp
 1f0:	cmp	w1, #0x1
 1f4:	b.eq	210 <grub_cmd_read+0x28>  // b.none
 1f8:	adrp	x0, 0 <grub_cmd_write>
 1fc:	ldr	x1, [x0]
 200:	mov	w0, #0x12                  	// #18
 204:	bl	0 <grub_error>
 208:	ldp	x29, x30, [sp], #48
 20c:	ret
 210:	str	x19, [sp, #16]
 214:	mov	x19, x0
 218:	mov	x0, x2
 21c:	mov	w2, #0x0                   	// #0
 220:	mov	x1, #0x0                   	// #0
 224:	ldr	x0, [x0]
 228:	bl	0 <grub_strtoul>
 22c:	ldr	x1, [x19]
 230:	ldr	x1, [x1]
 234:	ldr	x1, [x1, #16]
 238:	ldrb	w1, [x1, #5]
 23c:	cmp	w1, #0x64
 240:	b.eq	298 <grub_cmd_read+0xb0>  // b.none
 244:	cmp	w1, #0x77
 248:	b.eq	2a0 <grub_cmd_read+0xb8>  // b.none
 24c:	cmp	w1, #0x62
 250:	b.eq	2ac <grub_cmd_read+0xc4>  // b.none
 254:	mov	w1, #0x0                   	// #0
 258:	ldr	x0, [x19, #8]
 25c:	ldr	w0, [x0]
 260:	cbz	w0, 2b8 <grub_cmd_read+0xd0>
 264:	mov	w3, w1
 268:	adrp	x0, 0 <grub_cmd_write>
 26c:	ldr	x2, [x0]
 270:	mov	x1, #0x9                   	// #9
 274:	add	x0, sp, #0x20
 278:	bl	0 <grub_snprintf>
 27c:	ldr	x0, [x19, #8]
 280:	add	x1, sp, #0x20
 284:	ldr	x0, [x0, #8]
 288:	bl	0 <grub_env_set>
 28c:	mov	w0, #0x0                   	// #0
 290:	ldr	x19, [sp, #16]
 294:	b	208 <grub_cmd_read+0x20>
 298:	ldr	w1, [x0]
 29c:	b	258 <grub_cmd_read+0x70>
 2a0:	ldrh	w1, [x0]
 2a4:	and	w1, w1, #0xffff
 2a8:	b	258 <grub_cmd_read+0x70>
 2ac:	ldrb	w1, [x0]
 2b0:	and	w1, w1, #0xff
 2b4:	b	258 <grub_cmd_read+0x70>
 2b8:	adrp	x0, 0 <grub_cmd_write>
 2bc:	ldr	x0, [x0]
 2c0:	bl	0 <grub_printf>
 2c4:	mov	w0, #0x0                   	// #0
 2c8:	ldr	x19, [sp, #16]
 2cc:	b	208 <grub_cmd_read+0x20>
	...

00000000000002e8 <grub_mod_init>:
 2e8:	stp	x29, x30, [sp, #-48]!
 2ec:	mov	x29, sp
 2f0:	stp	x19, x20, [sp, #16]
 2f4:	stp	x21, x22, [sp, #32]
 2f8:	adrp	x0, 0 <grub_cmd_write>
 2fc:	ldr	x22, [x0]
 300:	adrp	x0, 0 <grub_cmd_write>
 304:	ldr	x21, [x0]
 308:	adrp	x0, 0 <grub_cmd_write>
 30c:	ldr	x20, [x0]
 310:	mov	x5, x22
 314:	adrp	x0, 0 <grub_cmd_write>
 318:	ldr	x4, [x0]
 31c:	mov	x3, x21
 320:	mov	w2, #0x0                   	// #0
 324:	mov	x1, x20
 328:	adrp	x0, 0 <grub_cmd_write>
 32c:	ldr	x0, [x0]
 330:	bl	0 <grub_register_extcmd>
 334:	adrp	x1, 0 <grub_cmd_write>
 338:	ldr	x19, [x1]
 33c:	str	x0, [x19]
 340:	mov	x5, x22
 344:	adrp	x0, 0 <grub_cmd_write>
 348:	ldr	x4, [x0]
 34c:	mov	x3, x21
 350:	mov	w2, #0x0                   	// #0
 354:	mov	x1, x20
 358:	adrp	x0, 0 <grub_cmd_write>
 35c:	ldr	x0, [x0]
 360:	bl	0 <grub_register_extcmd>
 364:	str	x0, [x19, #8]
 368:	mov	x5, x22
 36c:	adrp	x0, 0 <grub_cmd_write>
 370:	ldr	x4, [x0]
 374:	mov	x3, x21
 378:	mov	w2, #0x0                   	// #0
 37c:	mov	x1, x20
 380:	adrp	x0, 0 <grub_cmd_write>
 384:	ldr	x0, [x0]
 388:	bl	0 <grub_register_extcmd>
 38c:	str	x0, [x19, #16]
 390:	adrp	x0, 0 <grub_cmd_write>
 394:	ldr	x21, [x0]
 398:	adrp	x0, 0 <grub_cmd_write>
 39c:	ldr	x20, [x0]
 3a0:	mov	w4, #0x0                   	// #0
 3a4:	adrp	x0, 0 <grub_cmd_write>
 3a8:	ldr	x3, [x0]
 3ac:	mov	x2, x21
 3b0:	mov	x1, x20
 3b4:	adrp	x0, 0 <grub_cmd_write>
 3b8:	ldr	x0, [x0]
 3bc:	bl	0 <grub_register_command_prio>
 3c0:	str	x0, [x19, #24]
 3c4:	mov	w4, #0x0                   	// #0
 3c8:	adrp	x0, 0 <grub_cmd_write>
 3cc:	ldr	x3, [x0]
 3d0:	mov	x2, x21
 3d4:	mov	x1, x20
 3d8:	adrp	x0, 0 <grub_cmd_write>
 3dc:	ldr	x0, [x0]
 3e0:	bl	0 <grub_register_command_prio>
 3e4:	str	x0, [x19, #32]
 3e8:	mov	w4, #0x0                   	// #0
 3ec:	adrp	x0, 0 <grub_cmd_write>
 3f0:	ldr	x3, [x0]
 3f4:	mov	x2, x21
 3f8:	mov	x1, x20
 3fc:	adrp	x0, 0 <grub_cmd_write>
 400:	ldr	x0, [x0]
 404:	bl	0 <grub_register_command_prio>
 408:	str	x0, [x19, #40]
 40c:	ldp	x19, x20, [sp, #16]
 410:	ldp	x21, x22, [sp, #32]
 414:	ldp	x29, x30, [sp], #48
 418:	ret
 41c:	nop
	...

00000000000004b0 <grub_mod_fini>:
 4b0:	stp	x29, x30, [sp, #-32]!
 4b4:	mov	x29, sp
 4b8:	str	x19, [sp, #16]
 4bc:	adrp	x0, 0 <grub_cmd_write>
 4c0:	ldr	x19, [x0]
 4c4:	ldr	x0, [x19]
 4c8:	bl	0 <grub_unregister_extcmd>
 4cc:	ldr	x0, [x19, #8]
 4d0:	bl	0 <grub_unregister_extcmd>
 4d4:	ldr	x0, [x19, #16]
 4d8:	bl	0 <grub_unregister_extcmd>
 4dc:	ldr	x0, [x19, #24]
 4e0:	bl	0 <grub_unregister_command>
 4e4:	ldr	x0, [x19, #32]
 4e8:	bl	0 <grub_unregister_command>
 4ec:	ldr	x0, [x19, #40]
 4f0:	bl	0 <grub_unregister_command>
 4f4:	ldr	x19, [sp, #16]
 4f8:	ldp	x29, x30, [sp], #32
 4fc:	ret
	...
