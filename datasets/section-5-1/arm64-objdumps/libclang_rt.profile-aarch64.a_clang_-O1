In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_clang_-O1:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_gcda_start_file>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	w19, w2
  18:	mov	x20, x1
  1c:	bl	184 <mangle_filename>
  20:	adrp	x21, 0 <llvm_gcda_start_file>
  24:	adrp	x22, 0 <llvm_gcda_start_file>
  28:	mov	w1, #0x2                   	// #2
  2c:	str	x0, [x21]
  30:	strb	wzr, [x22]
  34:	bl	0 <open>
  38:	adrp	x23, 0 <llvm_gcda_start_file>
  3c:	cmn	w0, #0x1
  40:	str	w0, [x23]
  44:	b.eq	54 <llvm_gcda_start_file+0x54>  // b.none
  48:	adrp	x21, 0 <llvm_gcda_start_file>
  4c:	add	x21, x21, #0x0
  50:	b	a4 <llvm_gcda_start_file+0xa4>
  54:	ldr	x0, [x21]
  58:	mov	w8, #0x1                   	// #1
  5c:	mov	w1, #0x42                  	// #66
  60:	mov	w2, #0x1a4                 	// #420
  64:	strb	w8, [x22]
  68:	bl	0 <open>
  6c:	cmn	w0, #0x1
  70:	str	w0, [x23]
  74:	b.ne	9c <llvm_gcda_start_file+0x9c>  // b.any
  78:	ldr	x0, [x21]
  7c:	bl	0 <__llvm_profile_recursive_mkdir>
  80:	ldr	x0, [x21]
  84:	mov	w1, #0x42                  	// #66
  88:	mov	w2, #0x1a4                 	// #420
  8c:	bl	0 <open>
  90:	cmn	w0, #0x1
  94:	str	w0, [x23]
  98:	b.eq	14c <llvm_gcda_start_file+0x14c>  // b.none
  9c:	adrp	x21, 0 <llvm_gcda_start_file>
  a0:	add	x21, x21, #0x0
  a4:	ldr	w0, [x23]
  a8:	bl	0 <lprofLockFd>
  ac:	ldr	w0, [x23]
  b0:	mov	x1, x21
  b4:	bl	0 <fdopen>
  b8:	ldrb	w9, [x22]
  bc:	adrp	x8, 0 <llvm_gcda_start_file>
  c0:	adrp	x21, 0 <llvm_gcda_start_file>
  c4:	str	x0, [x8]
  c8:	adrp	x23, 0 <llvm_gcda_start_file>
  cc:	adrp	x8, 0 <llvm_gcda_start_file>
  d0:	str	xzr, [x21]
  d4:	str	xzr, [x23]
  d8:	str	xzr, [x8]
  dc:	tbnz	w9, #0, fc <llvm_gcda_start_file+0xfc>
  e0:	bl	9f8 <map_file>
  e4:	cmn	w0, #0x1
  e8:	b.ne	114 <llvm_gcda_start_file+0x114>  // b.any
  ec:	mov	w8, #0x1                   	// #1
  f0:	str	xzr, [x21]
  f4:	strb	w8, [x22]
  f8:	str	xzr, [x23]
  fc:	mov	w0, #0x20000               	// #131072
 100:	bl	208 <resize_write_buffer>
 104:	ldr	x0, [x21]
 108:	mov	w2, #0x20000               	// #131072
 10c:	mov	w1, wzr
 110:	bl	0 <memset>
 114:	adrp	x0, 0 <llvm_gcda_start_file>
 118:	add	x0, x0, #0x0
 11c:	mov	w1, #0x4                   	// #4
 120:	bl	278 <write_bytes>
 124:	mov	w1, #0x4                   	// #4
 128:	mov	x0, x20
 12c:	bl	278 <write_bytes>
 130:	mov	w0, w19
 134:	bl	2d0 <write_32bit_value>
 138:	ldp	x20, x19, [sp, #48]
 13c:	ldp	x22, x21, [sp, #32]
 140:	ldr	x23, [sp, #16]
 144:	ldp	x29, x30, [sp], #64
 148:	ret
 14c:	bl	0 <__errno_location>
 150:	adrp	x8, 0 <stderr>
 154:	ldr	w0, [x0]
 158:	ldr	x8, [x8]
 15c:	ldr	x20, [x21]
 160:	ldr	x19, [x8]
 164:	bl	0 <strerror>
 168:	adrp	x1, 0 <llvm_gcda_start_file>
 16c:	mov	x3, x0
 170:	add	x1, x1, #0x0
 174:	mov	x0, x19
 178:	mov	x2, x20
 17c:	bl	0 <fprintf>
 180:	b	138 <llvm_gcda_start_file+0x138>

0000000000000184 <mangle_filename>:
 184:	sub	sp, sp, #0x40
 188:	stp	x29, x30, [sp, #16]
 18c:	stp	x22, x21, [sp, #32]
 190:	stp	x20, x19, [sp, #48]
 194:	add	x29, sp, #0x10
 198:	mov	x19, x0
 19c:	add	x0, sp, #0x4
 1a0:	add	x1, sp, #0x8
 1a4:	bl	0 <lprofGetPathPrefix>
 1a8:	cbz	x0, 1e4 <mangle_filename+0x60>
 1ac:	ldr	x22, [sp, #8]
 1b0:	mov	x20, x0
 1b4:	mov	x0, x19
 1b8:	bl	0 <strlen>
 1bc:	add	x8, x22, x0
 1c0:	add	x0, x8, #0x2
 1c4:	bl	0 <malloc>
 1c8:	ldr	w4, [sp, #4]
 1cc:	mov	x1, x19
 1d0:	mov	x2, x20
 1d4:	mov	x3, x22
 1d8:	mov	x21, x0
 1dc:	bl	0 <lprofApplyPathPrefix>
 1e0:	b	1f0 <mangle_filename+0x6c>
 1e4:	mov	x0, x19
 1e8:	bl	0 <strdup>
 1ec:	mov	x21, x0
 1f0:	mov	x0, x21
 1f4:	ldp	x20, x19, [sp, #48]
 1f8:	ldp	x22, x21, [sp, #32]
 1fc:	ldp	x29, x30, [sp, #16]
 200:	add	sp, sp, #0x40
 204:	ret

0000000000000208 <resize_write_buffer>:
 208:	stp	x29, x30, [sp, #-48]!
 20c:	str	x21, [sp, #16]
 210:	stp	x20, x19, [sp, #32]
 214:	mov	x29, sp
 218:	adrp	x8, 0 <llvm_gcda_start_file>
 21c:	ldrb	w8, [x8]
 220:	cmp	w8, #0x1
 224:	b.ne	268 <resize_write_buffer+0x60>  // b.any
 228:	adrp	x8, 0 <llvm_gcda_start_file>
 22c:	ldr	x8, [x8]
 230:	adrp	x20, 0 <llvm_gcda_start_file>
 234:	ldr	x9, [x20]
 238:	add	x8, x8, x0
 23c:	cmp	x8, x9
 240:	b.ls	268 <resize_write_buffer+0x60>  // b.plast
 244:	adrp	x21, 0 <llvm_gcda_start_file>
 248:	ldr	x0, [x21]
 24c:	mov	w9, #0x1ffff               	// #131071
 250:	add	x8, x8, x9
 254:	and	x19, x8, #0xfffffffffffe0000
 258:	mov	x1, x19
 25c:	bl	0 <realloc>
 260:	str	x0, [x21]
 264:	str	x19, [x20]
 268:	ldp	x20, x19, [sp, #32]
 26c:	ldr	x21, [sp, #16]
 270:	ldp	x29, x30, [sp], #48
 274:	ret

0000000000000278 <write_bytes>:
 278:	stp	x29, x30, [sp, #-48]!
 27c:	stp	x22, x21, [sp, #16]
 280:	stp	x20, x19, [sp, #32]
 284:	mov	x29, sp
 288:	mov	x20, x0
 28c:	mov	x0, x1
 290:	mov	x19, x1
 294:	bl	208 <resize_write_buffer>
 298:	adrp	x8, 0 <llvm_gcda_start_file>
 29c:	adrp	x21, 0 <llvm_gcda_start_file>
 2a0:	ldr	x8, [x8]
 2a4:	ldr	x22, [x21]
 2a8:	mov	x1, x20
 2ac:	mov	x2, x19
 2b0:	add	x0, x8, x22
 2b4:	bl	0 <memcpy>
 2b8:	add	x8, x22, x19
 2bc:	str	x8, [x21]
 2c0:	ldp	x20, x19, [sp, #32]
 2c4:	ldp	x22, x21, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #48
 2cc:	ret

00000000000002d0 <write_32bit_value>:
 2d0:	sub	sp, sp, #0x20
 2d4:	stp	x29, x30, [sp, #16]
 2d8:	add	x29, sp, #0x10
 2dc:	stur	w0, [x29, #-4]
 2e0:	sub	x0, x29, #0x4
 2e4:	mov	w1, #0x4                   	// #4
 2e8:	bl	278 <write_bytes>
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x20
 2f4:	ret

00000000000002f8 <llvm_gcda_increment_indirect_counter>:
 2f8:	ldr	w8, [x0]
 2fc:	cmn	w8, #0x1
 300:	b.eq	318 <llvm_gcda_increment_indirect_counter+0x20>  // b.none
 304:	ldr	x8, [x1, x8, lsl #3]
 308:	cbz	x8, 318 <llvm_gcda_increment_indirect_counter+0x20>
 30c:	ldr	x9, [x8]
 310:	add	x9, x9, #0x1
 314:	str	x9, [x8]
 318:	ret

000000000000031c <llvm_gcda_emit_function>:
 31c:	stp	x29, x30, [sp, #-64]!
 320:	stp	x24, x23, [sp, #16]
 324:	stp	x22, x21, [sp, #32]
 328:	stp	x20, x19, [sp, #48]
 32c:	mov	x29, sp
 330:	adrp	x8, 0 <llvm_gcda_start_file>
 334:	ldr	x8, [x8]
 338:	tst	w3, #0xff
 33c:	mov	w9, #0x2                   	// #2
 340:	cinc	w24, w9, ne  // ne = any
 344:	cbz	x8, 3b4 <llvm_gcda_emit_function+0x98>
 348:	mov	w22, w0
 34c:	adrp	x0, 0 <llvm_gcda_start_file>
 350:	mov	x19, x1
 354:	add	x0, x0, #0x0
 358:	mov	w1, #0x4                   	// #4
 35c:	mov	w20, w4
 360:	mov	w23, w3
 364:	mov	w21, w2
 368:	bl	278 <write_bytes>
 36c:	cbz	x19, 380 <llvm_gcda_emit_function+0x64>
 370:	mov	x0, x19
 374:	bl	3c8 <length_of_string>
 378:	add	w8, w24, w0
 37c:	add	w24, w8, #0x1
 380:	mov	w0, w24
 384:	and	w23, w23, #0xff
 388:	bl	2d0 <write_32bit_value>
 38c:	mov	w0, w22
 390:	bl	2d0 <write_32bit_value>
 394:	mov	w0, w21
 398:	bl	2d0 <write_32bit_value>
 39c:	cbz	w23, 3a8 <llvm_gcda_emit_function+0x8c>
 3a0:	mov	w0, w20
 3a4:	bl	2d0 <write_32bit_value>
 3a8:	cbz	x19, 3b4 <llvm_gcda_emit_function+0x98>
 3ac:	mov	x0, x19
 3b0:	bl	3e4 <write_string>
 3b4:	ldp	x20, x19, [sp, #48]
 3b8:	ldp	x22, x21, [sp, #32]
 3bc:	ldp	x24, x23, [sp, #16]
 3c0:	ldp	x29, x30, [sp], #64
 3c4:	ret

00000000000003c8 <length_of_string>:
 3c8:	stp	x29, x30, [sp, #-16]!
 3cc:	mov	x29, sp
 3d0:	bl	0 <strlen>
 3d4:	lsr	x8, x0, #2
 3d8:	add	w0, w8, #0x1
 3dc:	ldp	x29, x30, [sp], #16
 3e0:	ret

00000000000003e4 <write_string>:
 3e4:	stp	x29, x30, [sp, #-32]!
 3e8:	str	x19, [sp, #16]
 3ec:	mov	x29, sp
 3f0:	mov	x19, x0
 3f4:	bl	3c8 <length_of_string>
 3f8:	bl	2d0 <write_32bit_value>
 3fc:	mov	x0, x19
 400:	bl	0 <strlen>
 404:	mov	x1, x0
 408:	mov	x0, x19
 40c:	bl	278 <write_bytes>
 410:	mov	x0, x19
 414:	bl	0 <strlen>
 418:	and	x8, x0, #0x3
 41c:	mov	w9, #0x4                   	// #4
 420:	adrp	x0, 0 <llvm_gcda_start_file>
 424:	sub	x1, x9, x8
 428:	add	x0, x0, #0x0
 42c:	bl	278 <write_bytes>
 430:	ldr	x19, [sp, #16]
 434:	ldp	x29, x30, [sp], #32
 438:	ret

000000000000043c <llvm_gcda_emit_arcs>:
 43c:	stp	x29, x30, [sp, #-80]!
 440:	str	x25, [sp, #16]
 444:	stp	x24, x23, [sp, #32]
 448:	stp	x22, x21, [sp, #48]
 44c:	stp	x20, x19, [sp, #64]
 450:	mov	x29, sp
 454:	adrp	x8, 0 <llvm_gcda_start_file>
 458:	ldr	x8, [x8]
 45c:	cbz	x8, 538 <llvm_gcda_emit_arcs+0xfc>
 460:	adrp	x22, 0 <llvm_gcda_start_file>
 464:	ldr	x23, [x22]
 468:	mov	x19, x1
 46c:	mov	w21, w0
 470:	bl	aac <read_le_32bit_value>
 474:	cmn	w0, #0x1
 478:	b.eq	4d4 <llvm_gcda_emit_arcs+0x98>  // b.none
 47c:	mov	w8, #0x1a10000             	// #27328512
 480:	mov	w3, w0
 484:	cmp	w0, w8
 488:	b.ne	550 <llvm_gcda_emit_arcs+0x114>  // b.any
 48c:	bl	b00 <read_32bit_value>
 490:	mov	w3, w0
 494:	cmn	w0, #0x1
 498:	b.eq	574 <llvm_gcda_emit_arcs+0x138>  // b.none
 49c:	lsr	w8, w3, #1
 4a0:	cmp	w8, w21
 4a4:	b.ne	574 <llvm_gcda_emit_arcs+0x138>  // b.any
 4a8:	mov	w24, w21
 4ac:	lsl	x0, x24, #3
 4b0:	bl	0 <malloc>
 4b4:	mov	x20, x0
 4b8:	cbz	w21, 4d8 <llvm_gcda_emit_arcs+0x9c>
 4bc:	mov	x25, x20
 4c0:	bl	b34 <read_64bit_value>
 4c4:	subs	x24, x24, #0x1
 4c8:	str	x0, [x25], #8
 4cc:	b.ne	4c0 <llvm_gcda_emit_arcs+0x84>  // b.any
 4d0:	b	4d8 <llvm_gcda_emit_arcs+0x9c>
 4d4:	mov	x20, xzr
 4d8:	adrp	x0, 0 <llvm_gcda_start_file>
 4dc:	add	x0, x0, #0x0
 4e0:	mov	w1, #0x4                   	// #4
 4e4:	str	x23, [x22]
 4e8:	bl	278 <write_bytes>
 4ec:	lsl	w0, w21, #1
 4f0:	bl	2d0 <write_32bit_value>
 4f4:	cbz	w21, 530 <llvm_gcda_emit_arcs+0xf4>
 4f8:	mov	w21, w21
 4fc:	mov	x22, x20
 500:	b	524 <llvm_gcda_emit_arcs+0xe8>
 504:	ldr	x8, [x22]
 508:	ldr	x9, [x19]
 50c:	add	x0, x9, x8
 510:	str	x0, [x19], #8
 514:	bl	598 <write_64bit_value>
 518:	subs	x21, x21, #0x1
 51c:	add	x22, x22, #0x8
 520:	b.eq	530 <llvm_gcda_emit_arcs+0xf4>  // b.none
 524:	cbnz	x20, 504 <llvm_gcda_emit_arcs+0xc8>
 528:	mov	x8, xzr
 52c:	b	508 <llvm_gcda_emit_arcs+0xcc>
 530:	mov	x0, x20
 534:	bl	0 <free>
 538:	ldp	x20, x19, [sp, #64]
 53c:	ldp	x22, x21, [sp, #48]
 540:	ldp	x24, x23, [sp, #32]
 544:	ldr	x25, [sp, #16]
 548:	ldp	x29, x30, [sp], #80
 54c:	ret
 550:	adrp	x8, 0 <stderr>
 554:	ldr	x8, [x8]
 558:	adrp	x9, 0 <llvm_gcda_start_file>
 55c:	ldr	x2, [x9]
 560:	adrp	x1, 0 <llvm_gcda_start_file>
 564:	ldr	x0, [x8]
 568:	add	x1, x1, #0x0
 56c:	bl	0 <fprintf>
 570:	b	538 <llvm_gcda_emit_arcs+0xfc>
 574:	adrp	x8, 0 <stderr>
 578:	ldr	x8, [x8]
 57c:	adrp	x9, 0 <llvm_gcda_start_file>
 580:	ldr	x2, [x9]
 584:	adrp	x1, 0 <llvm_gcda_start_file>
 588:	ldr	x0, [x8]
 58c:	add	x1, x1, #0x0
 590:	bl	0 <fprintf>
 594:	b	538 <llvm_gcda_emit_arcs+0xfc>

0000000000000598 <write_64bit_value>:
 598:	stp	x29, x30, [sp, #-32]!
 59c:	str	x19, [sp, #16]
 5a0:	mov	x29, sp
 5a4:	lsr	x19, x0, #32
 5a8:	bl	2d0 <write_32bit_value>
 5ac:	mov	w0, w19
 5b0:	bl	2d0 <write_32bit_value>
 5b4:	ldr	x19, [sp, #16]
 5b8:	ldp	x29, x30, [sp], #32
 5bc:	ret

00000000000005c0 <llvm_gcda_summary_info>:
 5c0:	stp	x29, x30, [sp, #-48]!
 5c4:	stp	x22, x21, [sp, #16]
 5c8:	stp	x20, x19, [sp, #32]
 5cc:	mov	x29, sp
 5d0:	adrp	x8, 0 <llvm_gcda_start_file>
 5d4:	ldr	x8, [x8]
 5d8:	cbz	x8, 69c <llvm_gcda_summary_info+0xdc>
 5dc:	adrp	x21, 0 <llvm_gcda_start_file>
 5e0:	ldr	x22, [x21]
 5e4:	bl	aac <read_le_32bit_value>
 5e8:	mov	w8, #0xa1000000            	// #-1593835520
 5ec:	cmp	w0, w8
 5f0:	adrp	x20, 0 <llvm_gcda_start_file>
 5f4:	b.eq	60c <llvm_gcda_summary_info+0x4c>  // b.none
 5f8:	mov	w3, w0
 5fc:	cmn	w0, #0x1
 600:	b.ne	6ac <llvm_gcda_summary_info+0xec>  // b.any
 604:	mov	w19, #0x1                   	// #1
 608:	b	634 <llvm_gcda_summary_info+0x74>
 60c:	bl	b00 <read_32bit_value>
 610:	cmp	w0, #0x9
 614:	b.ne	6d0 <llvm_gcda_summary_info+0x110>  // b.any
 618:	bl	b00 <read_32bit_value>
 61c:	bl	b00 <read_32bit_value>
 620:	bl	b00 <read_32bit_value>
 624:	ldrb	w8, [x20]
 628:	mvn	w8, w8
 62c:	and	w8, w8, #0x1
 630:	add	w19, w0, w8
 634:	adrp	x0, 0 <llvm_gcda_start_file>
 638:	add	x0, x0, #0x0
 63c:	mov	w1, #0x4                   	// #4
 640:	str	x22, [x21]
 644:	bl	278 <write_bytes>
 648:	mov	w0, #0x9                   	// #9
 64c:	bl	2d0 <write_32bit_value>
 650:	mov	w0, wzr
 654:	bl	2d0 <write_32bit_value>
 658:	mov	w0, wzr
 65c:	bl	2d0 <write_32bit_value>
 660:	mov	w0, w19
 664:	bl	2d0 <write_32bit_value>
 668:	mov	w19, #0x6                   	// #6
 66c:	mov	w0, wzr
 670:	bl	2d0 <write_32bit_value>
 674:	subs	w19, w19, #0x1
 678:	b.ne	66c <llvm_gcda_summary_info+0xac>  // b.any
 67c:	adrp	x0, 0 <llvm_gcda_start_file>
 680:	add	x0, x0, #0x0
 684:	mov	w1, #0x4                   	// #4
 688:	bl	278 <write_bytes>
 68c:	mov	w0, wzr
 690:	bl	2d0 <write_32bit_value>
 694:	mov	w8, #0x1                   	// #1
 698:	strb	w8, [x20]
 69c:	ldp	x20, x19, [sp, #32]
 6a0:	ldp	x22, x21, [sp, #16]
 6a4:	ldp	x29, x30, [sp], #48
 6a8:	ret
 6ac:	adrp	x8, 0 <stderr>
 6b0:	ldr	x8, [x8]
 6b4:	adrp	x9, 0 <llvm_gcda_start_file>
 6b8:	ldr	x2, [x9]
 6bc:	adrp	x1, 0 <llvm_gcda_start_file>
 6c0:	ldr	x0, [x8]
 6c4:	add	x1, x1, #0x0
 6c8:	bl	0 <fprintf>
 6cc:	b	69c <llvm_gcda_summary_info+0xdc>
 6d0:	adrp	x8, 0 <stderr>
 6d4:	ldr	x8, [x8]
 6d8:	adrp	x9, 0 <llvm_gcda_start_file>
 6dc:	mov	w3, w0
 6e0:	ldr	x2, [x9]
 6e4:	ldr	x0, [x8]
 6e8:	adrp	x1, 0 <llvm_gcda_start_file>
 6ec:	add	x1, x1, #0x0
 6f0:	bl	0 <fprintf>
 6f4:	b	69c <llvm_gcda_summary_info+0xdc>

00000000000006f8 <llvm_gcda_end_file>:
 6f8:	stp	x29, x30, [sp, #-32]!
 6fc:	stp	x20, x19, [sp, #16]
 700:	mov	x29, sp
 704:	adrp	x19, 0 <llvm_gcda_start_file>
 708:	ldr	x8, [x19]
 70c:	cbz	x8, 780 <llvm_gcda_end_file+0x88>
 710:	adrp	x0, 0 <llvm_gcda_start_file>
 714:	add	x0, x0, #0x0
 718:	mov	w1, #0x8                   	// #8
 71c:	bl	278 <write_bytes>
 720:	adrp	x8, 0 <llvm_gcda_start_file>
 724:	ldrb	w8, [x8]
 728:	adrp	x20, 0 <llvm_gcda_start_file>
 72c:	cmp	w8, #0x1
 730:	b.ne	758 <llvm_gcda_end_file+0x60>  // b.any
 734:	adrp	x8, 0 <llvm_gcda_start_file>
 738:	ldr	x0, [x20]
 73c:	ldr	x1, [x8]
 740:	ldr	x3, [x19]
 744:	mov	w2, #0x1                   	// #1
 748:	bl	0 <fwrite>
 74c:	ldr	x0, [x20]
 750:	bl	0 <free>
 754:	b	75c <llvm_gcda_end_file+0x64>
 758:	bl	b64 <unmap_file>
 75c:	ldr	x0, [x19]
 760:	bl	0 <fflush>
 764:	adrp	x8, 0 <llvm_gcda_start_file>
 768:	ldr	w0, [x8]
 76c:	bl	0 <lprofUnlockFd>
 770:	ldr	x0, [x19]
 774:	bl	0 <fclose>
 778:	str	xzr, [x19]
 77c:	str	xzr, [x20]
 780:	adrp	x8, 0 <llvm_gcda_start_file>
 784:	ldr	x0, [x8]
 788:	bl	0 <free>
 78c:	ldp	x20, x19, [sp, #16]
 790:	ldp	x29, x30, [sp], #32
 794:	ret

0000000000000798 <llvm_register_writeout_function>:
 798:	stp	x29, x30, [sp, #-16]!
 79c:	mov	x29, sp
 7a0:	mov	x1, x0
 7a4:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 7a8:	ldr	x0, [x0]
 7ac:	bl	7b8 <fn_list_insert>
 7b0:	ldp	x29, x30, [sp], #16
 7b4:	ret

00000000000007b8 <fn_list_insert>:
 7b8:	stp	x29, x30, [sp, #-32]!
 7bc:	stp	x20, x19, [sp, #16]
 7c0:	mov	x29, sp
 7c4:	mov	x19, x0
 7c8:	mov	w0, #0x18                  	// #24
 7cc:	mov	x20, x1
 7d0:	bl	0 <malloc>
 7d4:	adrp	x8, 0 <llvm_gcda_start_file>
 7d8:	add	x8, x8, #0x0
 7dc:	stp	x20, xzr, [x0, #8]
 7e0:	str	x8, [x0]
 7e4:	mov	x8, x19
 7e8:	ldr	x9, [x8], #8
 7ec:	cbz	x9, 800 <fn_list_insert+0x48>
 7f0:	ldr	x9, [x8]
 7f4:	mov	x19, x8
 7f8:	str	x0, [x9, #16]
 7fc:	b	804 <fn_list_insert+0x4c>
 800:	str	x0, [x19, #8]
 804:	str	x0, [x19]
 808:	ldp	x20, x19, [sp, #16]
 80c:	ldp	x29, x30, [sp], #32
 810:	ret

0000000000000814 <llvm_writeout_files>:
 814:	stp	x29, x30, [sp, #-32]!
 818:	stp	x20, x19, [sp, #16]
 81c:	mov	x29, sp
 820:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
 824:	ldr	x8, [x8]
 828:	ldr	x19, [x8]
 82c:	cbz	x19, 85c <llvm_writeout_files+0x48>
 830:	adrp	x20, 0 <llvm_gcda_start_file>
 834:	add	x20, x20, #0x0
 838:	b	844 <llvm_writeout_files+0x30>
 83c:	ldr	x19, [x19, #16]
 840:	cbz	x19, 85c <llvm_writeout_files+0x48>
 844:	ldr	x8, [x19]
 848:	cmp	x8, x20
 84c:	b.ne	83c <llvm_writeout_files+0x28>  // b.any
 850:	ldr	x8, [x19, #8]
 854:	blr	x8
 858:	b	83c <llvm_writeout_files+0x28>
 85c:	ldp	x20, x19, [sp, #16]
 860:	ldp	x29, x30, [sp], #32
 864:	ret

0000000000000868 <llvm_delete_writeout_function_list>:
 868:	stp	x29, x30, [sp, #-16]!
 86c:	mov	x29, sp
 870:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 874:	ldr	x0, [x0]
 878:	bl	884 <fn_list_remove>
 87c:	ldp	x29, x30, [sp], #16
 880:	ret

0000000000000884 <fn_list_remove>:
 884:	stp	x29, x30, [sp, #-48]!
 888:	stp	x22, x21, [sp, #16]
 88c:	stp	x20, x19, [sp, #32]
 890:	mov	x29, sp
 894:	mov	x19, x0
 898:	ldr	x0, [x0]
 89c:	cbz	x0, 90c <fn_list_remove+0x88>
 8a0:	adrp	x21, 0 <llvm_gcda_start_file>
 8a4:	mov	x20, xzr
 8a8:	add	x21, x21, #0x0
 8ac:	b	8bc <fn_list_remove+0x38>
 8b0:	mov	x20, x0
 8b4:	mov	x0, x22
 8b8:	cbz	x22, 90c <fn_list_remove+0x88>
 8bc:	ldr	x8, [x0]
 8c0:	ldr	x22, [x0, #16]
 8c4:	cmp	x8, x21
 8c8:	b.ne	8b0 <fn_list_remove+0x2c>  // b.any
 8cc:	ldr	x8, [x19]
 8d0:	cmp	x0, x8
 8d4:	b.ne	8dc <fn_list_remove+0x58>  // b.any
 8d8:	str	x22, [x19]
 8dc:	ldr	x8, [x19, #8]
 8e0:	cmp	x0, x8
 8e4:	b.eq	900 <fn_list_remove+0x7c>  // b.none
 8e8:	cbz	x20, 8f0 <fn_list_remove+0x6c>
 8ec:	str	x22, [x20, #16]
 8f0:	bl	0 <free>
 8f4:	mov	x0, x22
 8f8:	cbnz	x22, 8bc <fn_list_remove+0x38>
 8fc:	b	90c <fn_list_remove+0x88>
 900:	str	x20, [x19, #8]
 904:	cbnz	x20, 8ec <fn_list_remove+0x68>
 908:	b	8f0 <fn_list_remove+0x6c>
 90c:	ldp	x20, x19, [sp, #32]
 910:	ldp	x22, x21, [sp, #16]
 914:	ldp	x29, x30, [sp], #48
 918:	ret

000000000000091c <llvm_register_flush_function>:
 91c:	stp	x29, x30, [sp, #-16]!
 920:	mov	x29, sp
 924:	mov	x1, x0
 928:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 92c:	ldr	x0, [x0]
 930:	bl	7b8 <fn_list_insert>
 934:	ldp	x29, x30, [sp], #16
 938:	ret

000000000000093c <__gcov_flush>:
 93c:	stp	x29, x30, [sp, #-32]!
 940:	str	x19, [sp, #16]
 944:	mov	x29, sp
 948:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
 94c:	ldr	x8, [x8]
 950:	ldr	x19, [x8]
 954:	cbz	x19, 968 <__gcov_flush+0x2c>
 958:	ldr	x8, [x19, #8]
 95c:	blr	x8
 960:	ldr	x19, [x19, #16]
 964:	cbnz	x19, 958 <__gcov_flush+0x1c>
 968:	ldr	x19, [sp, #16]
 96c:	ldp	x29, x30, [sp], #32
 970:	ret

0000000000000974 <llvm_delete_flush_function_list>:
 974:	stp	x29, x30, [sp, #-16]!
 978:	mov	x29, sp
 97c:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 980:	ldr	x0, [x0]
 984:	bl	884 <fn_list_remove>
 988:	ldp	x29, x30, [sp], #16
 98c:	ret

0000000000000990 <llvm_gcov_init>:
 990:	stp	x29, x30, [sp, #-32]!
 994:	str	x19, [sp, #16]
 998:	mov	x29, sp
 99c:	mov	x19, x1
 9a0:	cbz	x0, 9a8 <llvm_gcov_init+0x18>
 9a4:	bl	798 <llvm_register_writeout_function>
 9a8:	cbz	x19, 9b4 <llvm_gcov_init+0x24>
 9ac:	mov	x0, x19
 9b0:	bl	91c <llvm_register_flush_function>
 9b4:	adrp	x8, 0 <llvm_gcda_start_file>
 9b8:	ldrb	w9, [x8]
 9bc:	tbnz	w9, #0, 9ec <llvm_gcov_init+0x5c>
 9c0:	adrp	x0, 974 <llvm_delete_flush_function_list>
 9c4:	mov	w9, #0x1                   	// #1
 9c8:	add	x0, x0, #0x0
 9cc:	strb	w9, [x8]
 9d0:	bl	0 <atexit>
 9d4:	adrp	x0, 868 <llvm_delete_writeout_function_list>
 9d8:	add	x0, x0, #0x0
 9dc:	bl	0 <atexit>
 9e0:	adrp	x0, 814 <llvm_writeout_files>
 9e4:	add	x0, x0, #0x0
 9e8:	bl	0 <atexit>
 9ec:	ldr	x19, [sp, #16]
 9f0:	ldp	x29, x30, [sp], #32
 9f4:	ret

00000000000009f8 <map_file>:
 9f8:	stp	x29, x30, [sp, #-32]!
 9fc:	stp	x20, x19, [sp, #16]
 a00:	mov	x29, sp
 a04:	adrp	x19, 0 <llvm_gcda_start_file>
 a08:	ldr	x0, [x19]
 a0c:	mov	w2, #0x2                   	// #2
 a10:	mov	x1, xzr
 a14:	bl	0 <fseek>
 a18:	ldr	x0, [x19]
 a1c:	bl	0 <ftell>
 a20:	adrp	x8, 0 <llvm_gcda_start_file>
 a24:	str	x0, [x8]
 a28:	cbz	x0, a9c <map_file+0xa4>
 a2c:	adrp	x8, 0 <llvm_gcda_start_file>
 a30:	ldr	w4, [x8]
 a34:	mov	x1, x0
 a38:	mov	w2, #0x3                   	// #3
 a3c:	mov	w3, #0x1                   	// #1
 a40:	mov	x0, xzr
 a44:	mov	x5, xzr
 a48:	bl	0 <mmap>
 a4c:	adrp	x8, 0 <llvm_gcda_start_file>
 a50:	cmn	x0, #0x1
 a54:	str	x0, [x8]
 a58:	b.eq	a64 <map_file+0x6c>  // b.none
 a5c:	mov	w0, wzr
 a60:	b	aa0 <map_file+0xa8>
 a64:	bl	0 <__errno_location>
 a68:	adrp	x8, 0 <stderr>
 a6c:	ldr	w0, [x0]
 a70:	ldr	x8, [x8]
 a74:	adrp	x9, 0 <llvm_gcda_start_file>
 a78:	ldr	x20, [x9]
 a7c:	ldr	x19, [x8]
 a80:	bl	0 <strerror>
 a84:	adrp	x1, 0 <llvm_gcda_start_file>
 a88:	mov	x3, x0
 a8c:	add	x1, x1, #0x0
 a90:	mov	x0, x19
 a94:	mov	x2, x20
 a98:	bl	0 <fprintf>
 a9c:	mov	w0, #0xffffffff            	// #-1
 aa0:	ldp	x20, x19, [sp, #16]
 aa4:	ldp	x29, x30, [sp], #32
 aa8:	ret

0000000000000aac <read_le_32bit_value>:
 aac:	adrp	x8, 0 <llvm_gcda_start_file>
 ab0:	ldrb	w8, [x8]
 ab4:	tbz	w8, #0, ac0 <read_le_32bit_value+0x14>
 ab8:	mov	w0, #0xffffffff            	// #-1
 abc:	ret
 ac0:	adrp	x10, 0 <llvm_gcda_start_file>
 ac4:	adrp	x9, 0 <llvm_gcda_start_file>
 ac8:	ldr	x11, [x10]
 acc:	ldr	x10, [x9]
 ad0:	mov	w8, wzr
 ad4:	mov	w0, wzr
 ad8:	add	x11, x11, x10
 adc:	ldrb	w12, [x11], #1
 ae0:	lsl	w12, w12, w8
 ae4:	add	w8, w8, #0x8
 ae8:	cmp	w8, #0x20
 aec:	orr	w0, w12, w0
 af0:	b.ne	adc <read_le_32bit_value+0x30>  // b.any
 af4:	add	x8, x10, #0x4
 af8:	str	x8, [x9]
 afc:	ret

0000000000000b00 <read_32bit_value>:
 b00:	adrp	x8, 0 <llvm_gcda_start_file>
 b04:	ldrb	w8, [x8]
 b08:	tbz	w8, #0, b14 <read_32bit_value+0x14>
 b0c:	mov	w0, #0xffffffff            	// #-1
 b10:	ret
 b14:	adrp	x8, 0 <llvm_gcda_start_file>
 b18:	adrp	x9, 0 <llvm_gcda_start_file>
 b1c:	ldr	x8, [x8]
 b20:	ldr	x10, [x9]
 b24:	ldr	w0, [x8, x10]
 b28:	add	x8, x10, #0x4
 b2c:	str	x8, [x9]
 b30:	ret

0000000000000b34 <read_64bit_value>:
 b34:	stp	x29, x30, [sp, #-32]!
 b38:	str	x19, [sp, #16]
 b3c:	mov	x29, sp
 b40:	bl	b00 <read_32bit_value>
 b44:	mov	w19, w0
 b48:	bl	b00 <read_32bit_value>
 b4c:	mov	w8, w19
 b50:	ldr	x19, [sp, #16]
 b54:	bfi	x8, x0, #32, #32
 b58:	mov	x0, x8
 b5c:	ldp	x29, x30, [sp], #32
 b60:	ret

0000000000000b64 <unmap_file>:
 b64:	stp	x29, x30, [sp, #-48]!
 b68:	stp	x22, x21, [sp, #16]
 b6c:	stp	x20, x19, [sp, #32]
 b70:	mov	x29, sp
 b74:	adrp	x21, 0 <llvm_gcda_start_file>
 b78:	adrp	x22, 0 <llvm_gcda_start_file>
 b7c:	ldr	x0, [x21]
 b80:	ldr	x1, [x22]
 b84:	mov	w2, #0x4                   	// #4
 b88:	bl	0 <msync>
 b8c:	cmn	w0, #0x1
 b90:	b.eq	bb8 <unmap_file+0x54>  // b.none
 b94:	ldr	x0, [x21]
 b98:	ldr	x1, [x22]
 b9c:	bl	0 <munmap>
 ba0:	str	xzr, [x21]
 ba4:	str	xzr, [x22]
 ba8:	ldp	x20, x19, [sp, #32]
 bac:	ldp	x22, x21, [sp, #16]
 bb0:	ldp	x29, x30, [sp], #48
 bb4:	ret
 bb8:	bl	0 <__errno_location>
 bbc:	adrp	x8, 0 <stderr>
 bc0:	ldr	w0, [x0]
 bc4:	ldr	x8, [x8]
 bc8:	adrp	x9, 0 <llvm_gcda_start_file>
 bcc:	ldr	x20, [x9]
 bd0:	ldr	x19, [x8]
 bd4:	bl	0 <strerror>
 bd8:	adrp	x1, 0 <llvm_gcda_start_file>
 bdc:	mov	x3, x0
 be0:	add	x1, x1, #0x0
 be4:	mov	x0, x19
 be8:	mov	x2, x20
 bec:	bl	0 <fprintf>
 bf0:	b	b94 <unmap_file+0x30>

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x8, 0 <__llvm_profile_get_magic>
  18:	ldrb	w0, [x8]
  1c:	ret

0000000000000020 <lprofSetProfileDumped>:
  20:	adrp	x8, 0 <__llvm_profile_get_magic>
  24:	mov	w9, #0x1                   	// #1
  28:	strb	w9, [x8]
  2c:	ret

0000000000000030 <__llvm_profile_set_dumped>:
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	20 <lprofSetProfileDumped>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

0000000000000044 <__llvm_profile_get_num_padding_bytes>:
  44:	neg	w8, w0
  48:	and	w0, w8, #0x7
  4c:	ret

0000000000000050 <__llvm_profile_get_version>:
  50:	adrp	x8, 0 <__llvm_profile_get_magic>
  54:	ldr	x8, [x8]
  58:	ldr	x0, [x8]
  5c:	ret

0000000000000060 <__llvm_profile_reset_counters>:
  60:	stp	x29, x30, [sp, #-32]!
  64:	str	x19, [sp, #16]
  68:	mov	x29, sp
  6c:	bl	0 <__llvm_profile_begin_counters>
  70:	mov	x19, x0
  74:	bl	0 <__llvm_profile_end_counters>
  78:	sub	x2, x0, x19
  7c:	mov	x0, x19
  80:	mov	w1, wzr
  84:	bl	0 <memset>
  88:	bl	0 <__llvm_profile_begin_data>
  8c:	mov	x19, x0
  90:	bl	0 <__llvm_profile_end_data>
  94:	b	9c <__llvm_profile_reset_counters+0x3c>
  98:	add	x19, x19, #0x30
  9c:	cmp	x19, x0
  a0:	b.cs	f8 <__llvm_profile_reset_counters+0x98>  // b.hs, b.nlast
  a4:	ldr	x8, [x19, #32]
  a8:	cbz	x8, 98 <__llvm_profile_reset_counters+0x38>
  ac:	mov	x9, xzr
  b0:	mov	w10, #0x2c                  	// #44
  b4:	ldrh	w11, [x19, x10]
  b8:	add	x10, x10, #0x2
  bc:	cmp	x10, #0x30
  c0:	add	x9, x9, x11
  c4:	b.ne	b4 <__llvm_profile_reset_counters+0x54>  // b.any
  c8:	cbz	x9, 98 <__llvm_profile_reset_counters+0x38>
  cc:	mov	x10, xzr
  d0:	b	e0 <__llvm_profile_reset_counters+0x80>
  d4:	add	w10, w10, #0x1
  d8:	cmp	x9, x10
  dc:	b.ls	98 <__llvm_profile_reset_counters+0x38>  // b.plast
  e0:	ldr	x11, [x8, x10, lsl #3]
  e4:	cbz	x11, d4 <__llvm_profile_reset_counters+0x74>
  e8:	str	xzr, [x11, #8]
  ec:	ldr	x11, [x11, #16]
  f0:	cbnz	x11, e8 <__llvm_profile_reset_counters+0x88>
  f4:	b	d4 <__llvm_profile_reset_counters+0x74>
  f8:	ldr	x19, [sp, #16]
  fc:	adrp	x8, 0 <__llvm_profile_get_magic>
 100:	strb	wzr, [x8]
 104:	ldp	x29, x30, [sp], #32
 108:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
   0:	add	w8, w0, #0xf
   4:	and	w0, w8, #0xfffffff8
   8:	ret

000000000000000c <getValueProfRecordSize>:
   c:	stp	x29, x30, [sp, #-32]!
  10:	str	x19, [sp, #16]
  14:	mov	x29, sp
  18:	mov	w19, w1
  1c:	bl	0 <getValueProfRecordHeaderSize>
  20:	add	w0, w0, w19, lsl #4
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

0000000000000030 <getValueProfRecordValueData>:
  30:	stp	x29, x30, [sp, #-32]!
  34:	str	x19, [sp, #16]
  38:	mov	x29, sp
  3c:	mov	x19, x0
  40:	ldr	w0, [x0, #4]
  44:	bl	0 <getValueProfRecordHeaderSize>
  48:	add	x0, x19, w0, uxtw
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

0000000000000058 <getValueProfRecordNumValueData>:
  58:	ldr	w9, [x0, #4]
  5c:	cbz	w9, 8c <getValueProfRecordNumValueData+0x34>
  60:	mov	x8, x0
  64:	ldr	w10, [x8, #4]
  68:	mov	x9, xzr
  6c:	mov	w0, wzr
  70:	add	x8, x8, #0x8
  74:	ldrb	w11, [x8, x9]
  78:	add	x9, x9, #0x1
  7c:	cmp	x9, x10
  80:	add	w0, w0, w11
  84:	b.cc	74 <getValueProfRecordNumValueData+0x1c>  // b.lo, b.ul, b.last
  88:	ret
  8c:	mov	w0, wzr
  90:	ret

0000000000000094 <getValueProfRecordNext>:
  94:	stp	x29, x30, [sp, #-32]!
  98:	str	x19, [sp, #16]
  9c:	mov	x29, sp
  a0:	mov	x19, x0
  a4:	bl	58 <getValueProfRecordNumValueData>
  a8:	ldr	w8, [x19, #4]
  ac:	mov	w1, w0
  b0:	mov	w0, w8
  b4:	bl	c <getValueProfRecordSize>
  b8:	add	x0, x19, w0, uxtw
  bc:	ldr	x19, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

00000000000000c8 <getFirstValueProfRecord>:
  c8:	add	x0, x0, #0x8
  cc:	ret

00000000000000d0 <getValueProfDataSize>:
  d0:	stp	x29, x30, [sp, #-64]!
  d4:	str	x23, [sp, #16]
  d8:	stp	x22, x21, [sp, #32]
  dc:	stp	x20, x19, [sp, #48]
  e0:	mov	x29, sp
  e4:	ldr	x22, [x0]
  e8:	mov	x19, x0
  ec:	mov	w20, wzr
  f0:	mov	w21, #0x8                   	// #8
  f4:	b	104 <getValueProfDataSize+0x34>
  f8:	add	w20, w20, #0x1
  fc:	cmp	w20, #0x2
 100:	b.eq	140 <getValueProfDataSize+0x70>  // b.none
 104:	ldr	x8, [x19, #16]
 108:	mov	x0, x22
 10c:	mov	w1, w20
 110:	blr	x8
 114:	cbz	w0, f8 <getValueProfDataSize+0x28>
 118:	ldr	x8, [x19, #24]
 11c:	mov	w23, w0
 120:	mov	x0, x22
 124:	mov	w1, w20
 128:	blr	x8
 12c:	mov	w1, w0
 130:	mov	w0, w23
 134:	bl	c <getValueProfRecordSize>
 138:	add	w21, w0, w21
 13c:	b	f8 <getValueProfDataSize+0x28>
 140:	mov	w0, w21
 144:	ldp	x20, x19, [sp, #48]
 148:	ldp	x22, x21, [sp, #32]
 14c:	ldr	x23, [sp, #16]
 150:	ldp	x29, x30, [sp], #64
 154:	ret

0000000000000158 <serializeValueProfRecordFrom>:
 158:	stp	x29, x30, [sp, #-80]!
 15c:	stp	x26, x25, [sp, #16]
 160:	stp	x24, x23, [sp, #32]
 164:	stp	x22, x21, [sp, #48]
 168:	stp	x20, x19, [sp, #64]
 16c:	mov	x29, sp
 170:	ldr	x21, [x1]
 174:	stp	w2, w3, [x0]
 178:	cbz	w3, 1e4 <serializeValueProfRecordFrom+0x8c>
 17c:	mov	w24, w3
 180:	mov	w19, w2
 184:	mov	x20, x1
 188:	mov	x25, x0
 18c:	bl	30 <getValueProfRecordValueData>
 190:	mov	x22, x0
 194:	mov	x23, xzr
 198:	mov	w26, w24
 19c:	add	x25, x25, #0x8
 1a0:	ldr	x8, [x20, #32]
 1a4:	mov	x0, x21
 1a8:	mov	w1, w19
 1ac:	mov	w2, w23
 1b0:	blr	x8
 1b4:	strb	w0, [x25, x23]
 1b8:	ldr	x8, [x20, #48]
 1bc:	mov	w24, w0
 1c0:	mov	x0, x21
 1c4:	mov	x1, x22
 1c8:	mov	w2, w19
 1cc:	mov	w3, w23
 1d0:	blr	x8
 1d4:	add	x23, x23, #0x1
 1d8:	cmp	x26, x23
 1dc:	add	x22, x22, w24, uxtw #4
 1e0:	b.ne	1a0 <serializeValueProfRecordFrom+0x48>  // b.any
 1e4:	ldp	x20, x19, [sp, #64]
 1e8:	ldp	x22, x21, [sp, #48]
 1ec:	ldp	x24, x23, [sp, #32]
 1f0:	ldp	x26, x25, [sp, #16]
 1f4:	ldp	x29, x30, [sp], #80
 1f8:	ret

00000000000001fc <serializeValueProfDataFrom>:
 1fc:	stp	x29, x30, [sp, #-48]!
 200:	stp	x22, x21, [sp, #16]
 204:	stp	x20, x19, [sp, #32]
 208:	mov	x29, sp
 20c:	mov	x20, x1
 210:	mov	x19, x0
 214:	cbz	x1, 2ac <serializeValueProfDataFrom+0xb0>
 218:	ldr	w21, [x20]
 21c:	cbnz	x20, 230 <serializeValueProfDataFrom+0x34>
 220:	ldr	x8, [x19, #56]
 224:	mov	w0, w21
 228:	blr	x8
 22c:	mov	x20, x0
 230:	str	w21, [x20]
 234:	ldp	x0, x8, [x19]
 238:	blr	x8
 23c:	str	w0, [x20, #4]
 240:	mov	x0, x20
 244:	bl	c8 <getFirstValueProfRecord>
 248:	mov	x21, x0
 24c:	mov	w22, wzr
 250:	b	260 <serializeValueProfDataFrom+0x64>
 254:	add	w22, w22, #0x1
 258:	cmp	w22, #0x2
 25c:	b.eq	298 <serializeValueProfDataFrom+0x9c>  // b.none
 260:	ldr	x8, [x19, #16]
 264:	ldr	x0, [x19]
 268:	mov	w1, w22
 26c:	blr	x8
 270:	cbz	w0, 254 <serializeValueProfDataFrom+0x58>
 274:	mov	w3, w0
 278:	mov	x0, x21
 27c:	mov	x1, x19
 280:	mov	w2, w22
 284:	bl	158 <serializeValueProfRecordFrom>
 288:	mov	x0, x21
 28c:	bl	94 <getValueProfRecordNext>
 290:	mov	x21, x0
 294:	b	254 <serializeValueProfDataFrom+0x58>
 298:	mov	x0, x20
 29c:	ldp	x20, x19, [sp, #32]
 2a0:	ldp	x22, x21, [sp, #16]
 2a4:	ldp	x29, x30, [sp], #48
 2a8:	ret
 2ac:	mov	x0, x19
 2b0:	bl	d0 <getValueProfDataSize>
 2b4:	mov	w21, w0
 2b8:	cbnz	x20, 230 <serializeValueProfDataFrom+0x34>
 2bc:	b	220 <serializeValueProfDataFrom+0x24>

00000000000002c0 <lprofSetupValueProfiler>:
 2c0:	stp	x29, x30, [sp, #-32]!
 2c4:	str	x19, [sp, #16]
 2c8:	mov	x29, sp
 2cc:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 2d0:	add	x0, x0, #0x0
 2d4:	bl	0 <getenv>
 2d8:	adrp	x19, 0 <getValueProfRecordHeaderSize>
 2dc:	cbz	x0, 2fc <lprofSetupValueProfiler+0x3c>
 2e0:	ldrb	w8, [x0]
 2e4:	cbz	w8, 2fc <lprofSetupValueProfiler+0x3c>
 2e8:	bl	0 <atoi>
 2ec:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 2f0:	mov	w9, #0x1                   	// #1
 2f4:	str	w0, [x19]
 2f8:	strb	w9, [x8]
 2fc:	ldr	w8, [x19]
 300:	cmp	w8, #0x100
 304:	b.cc	310 <lprofSetupValueProfiler+0x50>  // b.lo, b.ul, b.last
 308:	mov	w8, #0xff                  	// #255
 30c:	str	w8, [x19]
 310:	ldr	x19, [sp, #16]
 314:	ldp	x29, x30, [sp], #32
 318:	ret

000000000000031c <lprofSetMaxValsPerSite>:
 31c:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 320:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 324:	mov	w10, #0x1                   	// #1
 328:	str	w0, [x8]
 32c:	strb	w10, [x9]
 330:	ret

0000000000000334 <__llvm_profile_set_num_value_sites>:
 334:	add	x8, x0, w1, uxtw #1
 338:	strh	w2, [x8, #44]
 33c:	ret

0000000000000340 <__llvm_profile_iterate_data>:
 340:	add	x0, x0, #0x30
 344:	ret

0000000000000348 <__llvm_get_function_addr>:
 348:	ldr	x0, [x0, #24]
 34c:	ret

0000000000000350 <__llvm_profile_instrument_target>:
 350:	stp	x29, x30, [sp, #-48]!
 354:	str	x21, [sp, #16]
 358:	stp	x20, x19, [sp, #32]
 35c:	mov	x29, sp
 360:	cbz	x1, 490 <__llvm_profile_instrument_target+0x140>
 364:	ldr	x8, [x1, #32]
 368:	mov	w20, w2
 36c:	mov	x21, x1
 370:	mov	x19, x0
 374:	cbnz	x8, 384 <__llvm_profile_instrument_target+0x34>
 378:	mov	x0, x21
 37c:	bl	63c <allocateValueProfileCounters>
 380:	cbz	w0, 490 <__llvm_profile_instrument_target+0x140>
 384:	ldr	x8, [x21, #32]
 388:	add	x20, x8, w20, uxtw #3
 38c:	ldr	x11, [x20]
 390:	cbz	x11, 3d4 <__llvm_profile_instrument_target+0x84>
 394:	mov	w9, wzr
 398:	mov	x8, xzr
 39c:	mov	x10, #0xffffffffffffffff    	// #-1
 3a0:	mov	x21, x11
 3a4:	ldr	x11, [x11]
 3a8:	ldr	x12, [x21, #8]
 3ac:	cmp	x11, x19
 3b0:	b.eq	46c <__llvm_profile_instrument_target+0x11c>  // b.none
 3b4:	ldr	x11, [x21, #16]
 3b8:	cmp	x12, x10
 3bc:	csel	x8, x21, x8, cc  // cc = lo, ul, last
 3c0:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 3c4:	add	w9, w9, #0x1
 3c8:	cbnz	x11, 3a0 <__llvm_profile_instrument_target+0x50>
 3cc:	and	w9, w9, #0xff
 3d0:	b	3e0 <__llvm_profile_instrument_target+0x90>
 3d4:	mov	x21, xzr
 3d8:	mov	x8, xzr
 3dc:	mov	w9, wzr
 3e0:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 3e4:	ldr	w10, [x10]
 3e8:	cmp	w10, w9
 3ec:	b.ls	450 <__llvm_profile_instrument_target+0x100>  // b.plast
 3f0:	bl	6d0 <allocateOneNode>
 3f4:	cbz	x0, 490 <__llvm_profile_instrument_target+0x140>
 3f8:	ldr	x8, [x0, #8]
 3fc:	add	x8, x8, #0x1
 400:	stp	x19, x8, [x0]
 404:	ldr	x8, [x20]
 408:	cbz	x8, 424 <__llvm_profile_instrument_target+0xd4>
 40c:	cbz	x21, 444 <__llvm_profile_instrument_target+0xf4>
 410:	ldr	x8, [x21, #16]!
 414:	cbnz	x8, 444 <__llvm_profile_instrument_target+0xf4>
 418:	b	438 <__llvm_profile_instrument_target+0xe8>
 41c:	stlxr	w8, x0, [x20]
 420:	cbz	w8, 478 <__llvm_profile_instrument_target+0x128>
 424:	ldaxr	x8, [x20]
 428:	cbz	x8, 41c <__llvm_profile_instrument_target+0xcc>
 42c:	b	440 <__llvm_profile_instrument_target+0xf0>
 430:	stlxr	w8, x0, [x21]
 434:	cbz	w8, 478 <__llvm_profile_instrument_target+0x128>
 438:	ldaxr	x8, [x21]
 43c:	cbz	x8, 430 <__llvm_profile_instrument_target+0xe0>
 440:	clrex
 444:	mov	w8, wzr
 448:	tbz	w8, #0, 480 <__llvm_profile_instrument_target+0x130>
 44c:	b	490 <__llvm_profile_instrument_target+0x140>
 450:	ldr	x9, [x8, #8]
 454:	subs	x9, x9, #0x1
 458:	b.hi	464 <__llvm_profile_instrument_target+0x114>  // b.pmore
 45c:	mov	w9, #0x1                   	// #1
 460:	str	x19, [x8]
 464:	str	x9, [x8, #8]
 468:	b	490 <__llvm_profile_instrument_target+0x140>
 46c:	add	x8, x12, #0x1
 470:	str	x8, [x21, #8]
 474:	b	490 <__llvm_profile_instrument_target+0x140>
 478:	mov	w8, #0x1                   	// #1
 47c:	tbnz	w8, #0, 490 <__llvm_profile_instrument_target+0x140>
 480:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 484:	ldrb	w8, [x8]
 488:	cbz	w8, 490 <__llvm_profile_instrument_target+0x140>
 48c:	bl	0 <free>
 490:	ldp	x20, x19, [sp, #32]
 494:	ldr	x21, [sp, #16]
 498:	ldp	x29, x30, [sp], #48
 49c:	ret

00000000000004a0 <__llvm_profile_instrument_target_value>:
 4a0:	stp	x29, x30, [sp, #-48]!
 4a4:	stp	x22, x21, [sp, #16]
 4a8:	stp	x20, x19, [sp, #32]
 4ac:	mov	x29, sp
 4b0:	cbz	x1, 5e8 <__llvm_profile_instrument_target_value+0x148>
 4b4:	mov	x19, x3
 4b8:	cbz	x3, 5e8 <__llvm_profile_instrument_target_value+0x148>
 4bc:	ldr	x8, [x1, #32]
 4c0:	mov	w21, w2
 4c4:	mov	x22, x1
 4c8:	mov	x20, x0
 4cc:	cbnz	x8, 4dc <__llvm_profile_instrument_target_value+0x3c>
 4d0:	mov	x0, x22
 4d4:	bl	63c <allocateValueProfileCounters>
 4d8:	cbz	w0, 5e8 <__llvm_profile_instrument_target_value+0x148>
 4dc:	ldr	x8, [x22, #32]
 4e0:	add	x21, x8, w21, uxtw #3
 4e4:	ldr	x11, [x21]
 4e8:	cbz	x11, 52c <__llvm_profile_instrument_target_value+0x8c>
 4ec:	mov	w9, wzr
 4f0:	mov	x8, xzr
 4f4:	mov	x10, #0xffffffffffffffff    	// #-1
 4f8:	mov	x22, x11
 4fc:	ldr	x11, [x11]
 500:	ldr	x12, [x22, #8]
 504:	cmp	x11, x20
 508:	b.eq	5bc <__llvm_profile_instrument_target_value+0x11c>  // b.none
 50c:	ldr	x11, [x22, #16]
 510:	cmp	x12, x10
 514:	csel	x8, x22, x8, cc  // cc = lo, ul, last
 518:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 51c:	add	w9, w9, #0x1
 520:	cbnz	x11, 4f8 <__llvm_profile_instrument_target_value+0x58>
 524:	and	w9, w9, #0xff
 528:	b	538 <__llvm_profile_instrument_target_value+0x98>
 52c:	mov	x22, xzr
 530:	mov	x8, xzr
 534:	mov	w9, wzr
 538:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 53c:	ldr	w10, [x10]
 540:	cmp	w10, w9
 544:	b.ls	5a8 <__llvm_profile_instrument_target_value+0x108>  // b.plast
 548:	bl	6d0 <allocateOneNode>
 54c:	cbz	x0, 5e8 <__llvm_profile_instrument_target_value+0x148>
 550:	ldr	x8, [x0, #8]
 554:	add	x8, x8, x19
 558:	stp	x20, x8, [x0]
 55c:	ldr	x8, [x21]
 560:	cbz	x8, 57c <__llvm_profile_instrument_target_value+0xdc>
 564:	cbz	x22, 59c <__llvm_profile_instrument_target_value+0xfc>
 568:	ldr	x8, [x22, #16]!
 56c:	cbnz	x8, 59c <__llvm_profile_instrument_target_value+0xfc>
 570:	b	590 <__llvm_profile_instrument_target_value+0xf0>
 574:	stlxr	w8, x0, [x21]
 578:	cbz	w8, 5d0 <__llvm_profile_instrument_target_value+0x130>
 57c:	ldaxr	x8, [x21]
 580:	cbz	x8, 574 <__llvm_profile_instrument_target_value+0xd4>
 584:	b	598 <__llvm_profile_instrument_target_value+0xf8>
 588:	stlxr	w8, x0, [x22]
 58c:	cbz	w8, 5d0 <__llvm_profile_instrument_target_value+0x130>
 590:	ldaxr	x8, [x22]
 594:	cbz	x8, 588 <__llvm_profile_instrument_target_value+0xe8>
 598:	clrex
 59c:	mov	w8, wzr
 5a0:	tbz	w8, #0, 5d8 <__llvm_profile_instrument_target_value+0x138>
 5a4:	b	5e8 <__llvm_profile_instrument_target_value+0x148>
 5a8:	ldr	x9, [x8, #8]
 5ac:	subs	x9, x9, x19
 5b0:	b.ls	5c8 <__llvm_profile_instrument_target_value+0x128>  // b.plast
 5b4:	str	x9, [x8, #8]
 5b8:	b	5e8 <__llvm_profile_instrument_target_value+0x148>
 5bc:	add	x8, x12, x19
 5c0:	str	x8, [x22, #8]
 5c4:	b	5e8 <__llvm_profile_instrument_target_value+0x148>
 5c8:	stp	x20, x19, [x8]
 5cc:	b	5e8 <__llvm_profile_instrument_target_value+0x148>
 5d0:	mov	w8, #0x1                   	// #1
 5d4:	tbnz	w8, #0, 5e8 <__llvm_profile_instrument_target_value+0x148>
 5d8:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 5dc:	ldrb	w8, [x8]
 5e0:	cbz	w8, 5e8 <__llvm_profile_instrument_target_value+0x148>
 5e4:	bl	0 <free>
 5e8:	ldp	x20, x19, [sp, #32]
 5ec:	ldp	x22, x21, [sp, #16]
 5f0:	ldp	x29, x30, [sp], #48
 5f4:	ret

00000000000005f8 <__llvm_profile_instrument_range>:
 5f8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
 5fc:	cmp	x5, x8
 600:	b.eq	60c <__llvm_profile_instrument_range+0x14>  // b.none
 604:	cmp	x0, x5
 608:	b.ge	618 <__llvm_profile_instrument_range+0x20>  // b.tcont
 60c:	cmp	x0, x4
 610:	ccmp	x0, x3, #0x8, le
 614:	csinc	x5, x0, x4, ge  // ge = tcont
 618:	stp	x29, x30, [sp, #-16]!
 61c:	mov	x29, sp
 620:	mov	x0, x5
 624:	bl	350 <__llvm_profile_instrument_target>
 628:	ldp	x29, x30, [sp], #16
 62c:	ret

0000000000000630 <lprofGetVPDataReader>:
 630:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 634:	add	x0, x0, #0x0
 638:	ret

000000000000063c <allocateValueProfileCounters>:
 63c:	stp	x29, x30, [sp, #-32]!
 640:	str	x19, [sp, #16]
 644:	mov	x29, sp
 648:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 64c:	ldrb	w8, [x8]
 650:	mov	x19, x0
 654:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 658:	mov	w10, #0x1                   	// #1
 65c:	strb	w10, [x9]
 660:	tbnz	w8, #0, 670 <allocateValueProfileCounters+0x34>
 664:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 668:	mov	w9, #0xff                  	// #255
 66c:	str	w9, [x8]
 670:	mov	x8, xzr
 674:	mov	x0, xzr
 678:	add	x9, x19, #0x2c
 67c:	ldrh	w10, [x9, x8]
 680:	add	x8, x8, #0x2
 684:	cmp	x8, #0x4
 688:	add	x0, x0, x10
 68c:	b.ne	67c <allocateValueProfileCounters+0x40>  // b.any
 690:	mov	w1, #0x8                   	// #8
 694:	bl	0 <calloc>
 698:	cbz	x0, 6c4 <allocateValueProfileCounters+0x88>
 69c:	add	x8, x19, #0x20
 6a0:	ldaxr	x9, [x8]
 6a4:	cbnz	x9, 6b8 <allocateValueProfileCounters+0x7c>
 6a8:	stlxr	w9, x0, [x8]
 6ac:	cbnz	w9, 6a0 <allocateValueProfileCounters+0x64>
 6b0:	mov	w0, #0x1                   	// #1
 6b4:	b	6c4 <allocateValueProfileCounters+0x88>
 6b8:	clrex
 6bc:	bl	0 <free>
 6c0:	mov	w0, wzr
 6c4:	ldr	x19, [sp, #16]
 6c8:	ldp	x29, x30, [sp], #32
 6cc:	ret

00000000000006d0 <allocateOneNode>:
 6d0:	stp	x29, x30, [sp, #-16]!
 6d4:	mov	x29, sp
 6d8:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 6dc:	ldrb	w8, [x8]
 6e0:	cmp	w8, #0x1
 6e4:	b.ne	6fc <allocateOneNode+0x2c>  // b.any
 6e8:	mov	w0, #0x1                   	// #1
 6ec:	mov	w1, #0x18                  	// #24
 6f0:	bl	0 <calloc>
 6f4:	ldp	x29, x30, [sp], #16
 6f8:	ret
 6fc:	adrp	x8, 0 <CurrentVNode>
 700:	ldr	x9, [x8]
 704:	adrp	x8, 0 <EndVNode>
 708:	ldr	x10, [x8]
 70c:	add	x9, x9, #0x18
 710:	cmp	x9, x10
 714:	b.ls	73c <allocateOneNode+0x6c>  // b.plast
 718:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 71c:	ldr	w9, [x8]
 720:	add	w10, w9, #0x1
 724:	cmp	w9, #0x9
 728:	str	w10, [x8]
 72c:	b.le	768 <allocateOneNode+0x98>
 730:	mov	x0, xzr
 734:	ldp	x29, x30, [sp], #16
 738:	ret
 73c:	adrp	x10, 0 <CurrentVNode>
 740:	add	x10, x10, #0x0
 744:	ldaxr	x9, [x10]
 748:	add	x11, x9, #0x18
 74c:	stlxr	w12, x11, [x10]
 750:	cbnz	w12, 744 <allocateOneNode+0x74>
 754:	ldr	x8, [x8]
 758:	cmp	x11, x8
 75c:	csel	x0, xzr, x9, hi  // hi = pmore
 760:	ldp	x29, x30, [sp], #16
 764:	ret
 768:	adrp	x8, 0 <stderr>
 76c:	ldr	x8, [x8]
 770:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 774:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 778:	add	x1, x1, #0x0
 77c:	ldr	x0, [x8]
 780:	add	x2, x2, #0x0
 784:	bl	0 <fprintf>
 788:	b	730 <allocateOneNode+0x60>

000000000000078c <initializeValueProfRuntimeRecord>:
 78c:	mov	x8, x0
 790:	ldr	x11, [x8, #32]
 794:	adrp	x12, 0 <getValueProfRecordHeaderSize>
 798:	mov	x9, xzr
 79c:	mov	w0, wzr
 7a0:	mov	w10, wzr
 7a4:	add	x12, x12, #0x0
 7a8:	mov	w13, #0xff                  	// #255
 7ac:	adrp	x14, 0 <getValueProfRecordHeaderSize>
 7b0:	str	x8, [x12]
 7b4:	str	x1, [x12, #24]
 7b8:	b	7d0 <initializeValueProfRuntimeRecord+0x44>
 7bc:	add	w0, w0, #0x1
 7c0:	add	w10, w10, w15
 7c4:	add	x9, x9, #0x1
 7c8:	cmp	x9, #0x2
 7cc:	b.eq	84c <initializeValueProfRuntimeRecord+0xc0>  // b.none
 7d0:	add	x15, x8, x9, lsl #1
 7d4:	ldrh	w15, [x15, #44]
 7d8:	cbz	w15, 7c4 <initializeValueProfRuntimeRecord+0x38>
 7dc:	add	x17, x11, w10, uxtw #3
 7e0:	cmp	x11, #0x0
 7e4:	csel	x18, x17, xzr, ne  // ne = any
 7e8:	add	x17, x12, x9, lsl #3
 7ec:	mov	x16, xzr
 7f0:	str	x18, [x17, #8]!
 7f4:	b	818 <initializeValueProfRuntimeRecord+0x8c>
 7f8:	ldr	x18, [x14]
 7fc:	cmp	w1, #0xff
 800:	csel	w1, w1, w13, cc  // cc = lo, ul, last
 804:	ldr	x18, [x18, x9, lsl #3]
 808:	strb	w1, [x18, x16]
 80c:	add	x16, x16, #0x1
 810:	cmp	x16, x15
 814:	b.eq	7bc <initializeValueProfRuntimeRecord+0x30>  // b.none
 818:	cbz	x11, 830 <initializeValueProfRuntimeRecord+0xa4>
 81c:	ldr	x18, [x17]
 820:	ldr	x18, [x18, x16, lsl #3]
 824:	mov	w1, wzr
 828:	cbnz	x18, 83c <initializeValueProfRuntimeRecord+0xb0>
 82c:	b	7f8 <initializeValueProfRuntimeRecord+0x6c>
 830:	mov	x18, xzr
 834:	mov	w1, wzr
 838:	cbz	x18, 7f8 <initializeValueProfRuntimeRecord+0x6c>
 83c:	ldr	x18, [x18, #16]
 840:	add	w1, w1, #0x1
 844:	cbnz	x18, 83c <initializeValueProfRuntimeRecord+0xb0>
 848:	b	7f8 <initializeValueProfRuntimeRecord+0x6c>
 84c:	ret

0000000000000850 <getNumValueDataForSiteWrapper>:
 850:	stp	x29, x30, [sp, #-16]!
 854:	mov	x29, sp
 858:	mov	w2, w1
 85c:	mov	w1, w0
 860:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 864:	add	x0, x0, #0x0
 868:	bl	8e0 <getNumValueDataForSiteRT>
 86c:	ldp	x29, x30, [sp], #16
 870:	ret

0000000000000874 <getValueProfDataSizeWrapper>:
 874:	stp	x29, x30, [sp, #-16]!
 878:	mov	x29, sp
 87c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 880:	add	x0, x0, #0x0
 884:	bl	d0 <getValueProfDataSize>
 888:	ldp	x29, x30, [sp], #16
 88c:	ret

0000000000000890 <getNextNValueData>:
 890:	cbz	x3, 89c <getNextNValueData+0xc>
 894:	cbnz	w4, 8b4 <getNextNValueData+0x24>
 898:	b	8d8 <getNextNValueData+0x48>
 89c:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 8a0:	add	x8, x8, #0x0
 8a4:	add	x8, x8, w0, uxtw #3
 8a8:	ldr	x8, [x8, #8]
 8ac:	ldr	x3, [x8, w1, uxtw #3]
 8b0:	cbz	w4, 8d8 <getNextNValueData+0x48>
 8b4:	mov	w8, w4
 8b8:	add	x9, x2, #0x8
 8bc:	ldr	x10, [x3]
 8c0:	subs	x8, x8, #0x1
 8c4:	stur	x10, [x9, #-8]
 8c8:	ldr	x10, [x3, #8]
 8cc:	str	x10, [x9], #16
 8d0:	ldr	x3, [x3, #16]
 8d4:	b.ne	8bc <getNextNValueData+0x2c>  // b.any
 8d8:	mov	x0, x3
 8dc:	ret

00000000000008e0 <getNumValueDataForSiteRT>:
 8e0:	ldr	x8, [x0, #24]
 8e4:	ldr	x8, [x8, w1, uxtw #3]
 8e8:	ldrb	w0, [x8, w2, uxtw]
 8ec:	ret

00000000000008f0 <getNumValueSitesRT>:
 8f0:	ldr	x8, [x0]
 8f4:	add	x8, x8, w1, uxtw #1
 8f8:	ldrh	w0, [x8, #44]
 8fc:	ret

0000000000000900 <getNumValueDataRT>:
 900:	ldr	x8, [x0, #24]
 904:	ldr	x8, [x8, w1, uxtw #3]
 908:	cbz	x8, 94c <getNumValueDataRT+0x4c>
 90c:	ldr	x9, [x0]
 910:	mov	w10, w1
 914:	add	x9, x9, x10, lsl #1
 918:	ldrh	w9, [x9, #44]
 91c:	cbz	w9, 94c <getNumValueDataRT+0x4c>
 920:	ldr	x11, [x0]
 924:	mov	x9, xzr
 928:	mov	w0, wzr
 92c:	add	x10, x11, x10, lsl #1
 930:	ldrh	w10, [x10, #44]
 934:	ldrb	w11, [x8, x9]
 938:	add	x9, x9, #0x1
 93c:	cmp	x9, x10
 940:	add	w0, w0, w11
 944:	b.cc	934 <getNumValueDataRT+0x34>  // b.lo, b.ul, b.last
 948:	ret
 94c:	mov	w0, wzr
 950:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldrb	w0, [x8]
   8:	ret

000000000000000c <__llvm_profile_enable_continuous_mode>:
   c:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
  10:	mov	w9, #0x1                   	// #1
  14:	strb	w9, [x8]
  18:	ret

000000000000001c <__llvm_profile_get_size_for_buffer>:
  1c:	stp	x29, x30, [sp, #-64]!
  20:	str	x23, [sp, #16]
  24:	stp	x22, x21, [sp, #32]
  28:	stp	x20, x19, [sp, #48]
  2c:	mov	x29, sp
  30:	bl	0 <__llvm_profile_begin_data>
  34:	mov	x19, x0
  38:	bl	0 <__llvm_profile_end_data>
  3c:	mov	x20, x0
  40:	bl	0 <__llvm_profile_begin_counters>
  44:	mov	x21, x0
  48:	bl	0 <__llvm_profile_end_counters>
  4c:	mov	x22, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x23, x0
  58:	bl	0 <__llvm_profile_end_names>
  5c:	mov	x5, x0
  60:	mov	x0, x19
  64:	mov	x1, x20
  68:	mov	x2, x21
  6c:	mov	x3, x22
  70:	mov	x4, x23
  74:	bl	8c <__llvm_profile_get_size_for_buffer_internal>
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldr	x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	ret

000000000000008c <__llvm_profile_get_size_for_buffer_internal>:
  8c:	sub	sp, sp, #0x50
  90:	stp	x29, x30, [sp, #32]
  94:	stp	x22, x21, [sp, #48]
  98:	stp	x20, x19, [sp, #64]
  9c:	add	x29, sp, #0x20
  a0:	mov	x19, x3
  a4:	mov	x20, x2
  a8:	sub	x21, x5, x4
  ac:	bl	108 <__llvm_profile_get_data_size>
  b0:	sub	x19, x19, x20
  b4:	asr	x1, x19, #3
  b8:	sub	x3, x29, #0x8
  bc:	add	x4, sp, #0x10
  c0:	add	x5, sp, #0x8
  c4:	mov	x2, x21
  c8:	mov	x22, x0
  cc:	bl	124 <__llvm_profile_get_padding_sizes_for_counters>
  d0:	ldur	x9, [x29, #-8]
  d4:	ldp	x11, x10, [sp, #8]
  d8:	mov	w8, #0x30                  	// #48
  dc:	add	x12, x19, x21
  e0:	madd	x8, x22, x8, x12
  e4:	add	x8, x8, x9
  e8:	ldp	x20, x19, [sp, #64]
  ec:	ldp	x22, x21, [sp, #48]
  f0:	ldp	x29, x30, [sp, #32]
  f4:	add	x8, x8, x10
  f8:	add	x8, x8, x11
  fc:	add	x0, x8, #0x50
 100:	add	sp, sp, #0x50
 104:	ret

0000000000000108 <__llvm_profile_get_data_size>:
 108:	sub	x8, x1, x0
 10c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 110:	add	x8, x8, #0x2f
 114:	movk	x9, #0xaaab
 118:	umulh	x8, x8, x9
 11c:	lsr	x0, x8, #5
 120:	ret

0000000000000124 <__llvm_profile_get_padding_sizes_for_counters>:
 124:	stp	x29, x30, [sp, #-80]!
 128:	str	x25, [sp, #16]
 12c:	stp	x24, x23, [sp, #32]
 130:	stp	x22, x21, [sp, #48]
 134:	stp	x20, x19, [sp, #64]
 138:	mov	x29, sp
 13c:	mov	x19, x5
 140:	mov	x21, x4
 144:	mov	x22, x3
 148:	mov	x20, x2
 14c:	mov	x23, x1
 150:	mov	x24, x0
 154:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 158:	cbz	w0, 1a0 <__llvm_profile_get_padding_sizes_for_counters+0x7c>
 15c:	bl	0 <getpagesize>
 160:	mov	w8, #0x30                  	// #48
 164:	mov	w25, w0
 168:	mul	x8, x24, x8
 16c:	add	x0, x8, #0x50
 170:	mov	w1, w25
 174:	lsl	x23, x23, #3
 178:	bl	1d0 <calculateBytesNeededToPageAlign>
 17c:	str	x0, [x22]
 180:	mov	x0, x23
 184:	mov	w1, w25
 188:	bl	1d0 <calculateBytesNeededToPageAlign>
 18c:	str	x0, [x21]
 190:	mov	x0, x20
 194:	mov	w1, w25
 198:	bl	1d0 <calculateBytesNeededToPageAlign>
 19c:	b	1b4 <__llvm_profile_get_padding_sizes_for_counters+0x90>
 1a0:	mov	x0, x20
 1a4:	str	xzr, [x22]
 1a8:	str	xzr, [x21]
 1ac:	bl	0 <__llvm_profile_get_num_padding_bytes>
 1b0:	and	x0, x0, #0xff
 1b4:	str	x0, [x19]
 1b8:	ldp	x20, x19, [sp, #64]
 1bc:	ldp	x22, x21, [sp, #48]
 1c0:	ldp	x24, x23, [sp, #32]
 1c4:	ldr	x25, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #80
 1cc:	ret

00000000000001d0 <calculateBytesNeededToPageAlign>:
 1d0:	mov	w8, w1
 1d4:	udiv	x9, x0, x8
 1d8:	msub	x9, x9, x8, x0
 1dc:	sub	x8, x8, x9
 1e0:	cmp	x9, #0x0
 1e4:	csel	x0, xzr, x8, eq  // eq = none
 1e8:	ret

00000000000001ec <initBufferWriter>:
 1ec:	adrp	x8, 0 <lprofBufferWriter>
 1f0:	ldr	x8, [x8]
 1f4:	stp	x8, x1, [x0]
 1f8:	ret

00000000000001fc <__llvm_profile_write_buffer>:
 1fc:	sub	sp, sp, #0x20
 200:	stp	x29, x30, [sp, #16]
 204:	add	x29, sp, #0x10
 208:	mov	x1, x0
 20c:	mov	x0, sp
 210:	bl	1ec <initBufferWriter>
 214:	mov	x0, sp
 218:	mov	x1, xzr
 21c:	mov	w2, wzr
 220:	bl	0 <lprofWriteData>
 224:	ldp	x29, x30, [sp, #16]
 228:	add	sp, sp, #0x20
 22c:	ret

0000000000000230 <__llvm_profile_write_buffer_internal>:
 230:	sub	sp, sp, #0x60
 234:	stp	x29, x30, [sp, #32]
 238:	stp	x24, x23, [sp, #48]
 23c:	stp	x22, x21, [sp, #64]
 240:	stp	x20, x19, [sp, #80]
 244:	add	x29, sp, #0x20
 248:	mov	x24, x1
 24c:	mov	x1, x0
 250:	add	x0, sp, #0x10
 254:	mov	x19, x6
 258:	mov	x20, x5
 25c:	mov	x21, x4
 260:	mov	x22, x3
 264:	mov	x23, x2
 268:	bl	1ec <initBufferWriter>
 26c:	add	x0, sp, #0x10
 270:	mov	x1, x24
 274:	mov	x2, x23
 278:	mov	x3, x22
 27c:	mov	x4, x21
 280:	mov	x5, xzr
 284:	mov	x6, x20
 288:	mov	x7, x19
 28c:	str	wzr, [sp]
 290:	bl	0 <lprofWriteDataImpl>
 294:	ldp	x20, x19, [sp, #80]
 298:	ldp	x22, x21, [sp, #64]
 29c:	ldp	x24, x23, [sp, #48]
 2a0:	ldp	x29, x30, [sp, #32]
 2a4:	add	sp, sp, #0x60
 2a8:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_set_file_object>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	w19, w1
      10:	mov	x20, x0
      14:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
      18:	cbnz	w0, 38 <__llvm_profile_set_file_object+0x38>
      1c:	mov	x0, x20
      20:	bl	64 <setProfileFile>
      24:	mov	w0, w19
      28:	bl	70 <setProfileMergeRequested>
      2c:	ldp	x20, x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ret
      38:	adrp	x8, 0 <stderr>
      3c:	ldr	x8, [x8]
      40:	mov	x0, x20
      44:	ldr	x19, [x8]
      48:	bl	0 <fileno>
      4c:	adrp	x1, 0 <__llvm_profile_set_file_object>
      50:	mov	w2, w0
      54:	add	x1, x1, #0x0
      58:	mov	x0, x19
      5c:	bl	0 <fprintf>
      60:	b	2c <__llvm_profile_set_file_object+0x2c>

0000000000000064 <setProfileFile>:
      64:	adrp	x8, 0 <__llvm_profile_set_file_object>
      68:	str	x0, [x8]
      6c:	ret

0000000000000070 <setProfileMergeRequested>:
      70:	adrp	x8, 0 <__llvm_profile_set_file_object>
      74:	str	w0, [x8]
      78:	ret

000000000000007c <lprofCreateBufferIOInternal>:
      7c:	stp	x29, x30, [sp, #-48]!
      80:	str	x21, [sp, #16]
      84:	stp	x20, x19, [sp, #32]
      88:	mov	x29, sp
      8c:	adrp	x9, 0 <free>
      90:	ldr	x9, [x9]
      94:	mov	w19, w1
      98:	mov	x20, x0
      9c:	adrp	x8, 0 <FreeHook>
      a0:	mov	w0, w1
      a4:	mov	w1, #0x1                   	// #1
      a8:	str	x9, [x8]
      ac:	mov	w21, #0x1                   	// #1
      b0:	bl	0 <calloc>
      b4:	adrp	x8, 0 <DynamicBufferIOBuffer>
      b8:	adrp	x9, 0 <VPBufferSize>
      bc:	str	x0, [x8]
      c0:	mov	w0, #0x10                  	// #16
      c4:	mov	w1, #0x1                   	// #1
      c8:	str	w19, [x9]
      cc:	bl	0 <calloc>
      d0:	mov	x1, x20
      d4:	mov	x19, x0
      d8:	bl	f8 <initFileWriter>
      dc:	mov	x0, x19
      e0:	bl	0 <lprofCreateBufferIO>
      e4:	str	w21, [x0, #8]
      e8:	ldp	x20, x19, [sp, #32]
      ec:	ldr	x21, [sp, #16]
      f0:	ldp	x29, x30, [sp], #48
      f4:	ret

00000000000000f8 <initFileWriter>:
      f8:	adrp	x8, 0 <__llvm_profile_set_file_object>
      fc:	add	x8, x8, #0x0
     100:	stp	x8, x1, [x0]
     104:	ret

0000000000000108 <__llvm_profile_get_path_prefix>:
     108:	stp	x29, x30, [sp, #-48]!
     10c:	stp	x22, x21, [sp, #16]
     110:	stp	x20, x19, [sp, #32]
     114:	mov	x29, sp
     118:	adrp	x22, 0 <__llvm_profile_set_file_object>
     11c:	ldr	x19, [x22]
     120:	cbnz	x19, 1c8 <__llvm_profile_get_path_prefix+0xc0>
     124:	bl	bf8 <getCurFilenameLength>
     128:	add	w8, w0, #0x1
     12c:	sxtw	x8, w8
     130:	add	x8, x8, #0xf
     134:	and	x8, x8, #0xfffffffffffffff0
     138:	mov	x9, sp
     13c:	sub	x0, x9, x8
     140:	mov	sp, x0
     144:	mov	w1, wzr
     148:	bl	1e0 <getCurFilename>
     14c:	cbz	x0, 1c0 <__llvm_profile_get_path_prefix+0xb8>
     150:	mov	x20, x0
     154:	bl	0 <lprofFindLastDirSeparator>
     158:	cbz	x0, 1c0 <__llvm_profile_get_path_prefix+0xb8>
     15c:	sub	w8, w0, w20
     160:	lsl	x21, x8, #32
     164:	mov	x8, #0x200000000           	// #8589934592
     168:	add	x8, x21, x8
     16c:	asr	x0, x8, #32
     170:	bl	0 <malloc>
     174:	cbz	x0, 1a0 <__llvm_profile_get_path_prefix+0x98>
     178:	mov	x8, #0x100000000           	// #4294967296
     17c:	add	x8, x21, x8
     180:	asr	x21, x8, #32
     184:	mov	x1, x20
     188:	mov	x2, x21
     18c:	mov	x19, x0
     190:	bl	0 <memcpy>
     194:	strb	wzr, [x19, x21]
     198:	str	x19, [x22]
     19c:	b	1c8 <__llvm_profile_get_path_prefix+0xc0>
     1a0:	adrp	x8, 0 <stderr>
     1a4:	ldr	x8, [x8]
     1a8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     1ac:	adrp	x2, 0 <__llvm_profile_set_file_object>
     1b0:	add	x1, x1, #0x0
     1b4:	ldr	x0, [x8]
     1b8:	add	x2, x2, #0x0
     1bc:	bl	0 <fprintf>
     1c0:	adrp	x19, 0 <__llvm_profile_set_file_object>
     1c4:	add	x19, x19, #0x0
     1c8:	mov	x0, x19
     1cc:	mov	sp, x29
     1d0:	ldp	x20, x19, [sp, #32]
     1d4:	ldp	x22, x21, [sp, #16]
     1d8:	ldp	x29, x30, [sp], #48
     1dc:	ret

00000000000001e0 <getCurFilename>:
     1e0:	sub	sp, sp, #0x80
     1e4:	stp	x29, x30, [sp, #32]
     1e8:	stp	x28, x27, [sp, #48]
     1ec:	stp	x26, x25, [sp, #64]
     1f0:	stp	x24, x23, [sp, #80]
     1f4:	stp	x22, x21, [sp, #96]
     1f8:	stp	x20, x19, [sp, #112]
     1fc:	add	x29, sp, #0x20
     200:	adrp	x22, 0 <__llvm_profile_set_file_object>
     204:	ldr	x20, [x22]
     208:	cbz	x20, 364 <getCurFilename+0x184>
     20c:	ldrb	w8, [x20]
     210:	cbz	w8, 364 <getCurFilename+0x184>
     214:	adrp	x8, 0 <__llvm_profile_set_file_object>
     218:	add	x8, x8, #0x0
     21c:	ldp	w9, w10, [x8]
     220:	ldr	w8, [x8, #8]
     224:	mov	x19, x0
     228:	orr	w9, w10, w9
     22c:	orr	w8, w9, w8
     230:	cbnz	w8, 240 <getCurFilename+0x60>
     234:	mov	w21, w1
     238:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     23c:	cbz	w0, 394 <getCurFilename+0x1b4>
     240:	adrp	x21, 0 <__llvm_profile_set_file_object>
     244:	add	x21, x21, #0x0
     248:	mov	x0, x21
     24c:	bl	0 <strlen>
     250:	mov	x22, x0
     254:	add	x0, x21, #0x10
     258:	bl	0 <strlen>
     25c:	adrp	x26, 0 <__llvm_profile_set_file_object>
     260:	mov	x23, x0
     264:	mov	w8, wzr
     268:	mov	w27, wzr
     26c:	sxtw	x24, w0
     270:	sxtw	x25, w22
     274:	add	x26, x26, #0x0
     278:	b	298 <getCurFilename+0xb8>
     27c:	add	x0, x19, w27, sxtw
     280:	mov	x1, x26
     284:	mov	x2, x24
     288:	bl	0 <memcpy>
     28c:	add	w27, w27, w23
     290:	ldur	w8, [x29, #-4]
     294:	add	w8, w8, #0x1
     298:	stur	w8, [x29, #-4]
     29c:	sxtw	x9, w8
     2a0:	ldrb	w8, [x20, x9]
     2a4:	cmp	w8, #0x25
     2a8:	b.eq	2c0 <getCurFilename+0xe0>  // b.none
     2ac:	cbz	w8, 36c <getCurFilename+0x18c>
     2b0:	add	w9, w27, #0x1
     2b4:	strb	w8, [x19, w27, sxtw]
     2b8:	mov	w27, w9
     2bc:	b	290 <getCurFilename+0xb0>
     2c0:	add	x8, x9, #0x1
     2c4:	stur	w8, [x29, #-4]
     2c8:	ldrb	w8, [x20, x8]
     2cc:	cmp	w8, #0x68
     2d0:	b.eq	27c <getCurFilename+0x9c>  // b.none
     2d4:	cmp	w8, #0x70
     2d8:	b.ne	2f4 <getCurFilename+0x114>  // b.any
     2dc:	add	x0, x19, w27, sxtw
     2e0:	mov	x1, x21
     2e4:	mov	x2, x25
     2e8:	bl	0 <memcpy>
     2ec:	add	w27, w27, w22
     2f0:	b	290 <getCurFilename+0xb0>
     2f4:	sub	x1, x29, #0x4
     2f8:	mov	x0, x20
     2fc:	bl	c98 <getMergePoolSize>
     300:	cbz	w0, 290 <getCurFilename+0xb0>
     304:	bl	0 <getpid>
     308:	adrp	x8, 0 <__llvm_profile_set_file_object>
     30c:	ldr	w8, [x8]
     310:	udiv	w9, w0, w8
     314:	msub	w28, w9, w8, w0
     318:	bl	0 <lprofGetLoadModuleSignature>
     31c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     320:	mov	x3, x0
     324:	mov	x0, sp
     328:	mov	w1, #0x19                  	// #25
     32c:	add	x2, x2, #0x0
     330:	mov	w4, w28
     334:	bl	0 <snprintf>
     338:	cmp	w0, #0x18
     33c:	mov	w8, #0xffffffff            	// #-1
     340:	ccmp	w0, w8, #0x4, le
     344:	mov	w8, #0x18                  	// #24
     348:	csel	w28, w8, w0, eq  // eq = none
     34c:	add	x0, x19, w27, sxtw
     350:	sxtw	x2, w28
     354:	mov	x1, sp
     358:	bl	0 <memcpy>
     35c:	add	w27, w28, w27
     360:	b	290 <getCurFilename+0xb0>
     364:	mov	x19, xzr
     368:	b	370 <getCurFilename+0x190>
     36c:	strb	wzr, [x19, w27, sxtw]
     370:	mov	x0, x19
     374:	ldp	x20, x19, [sp, #112]
     378:	ldp	x22, x21, [sp, #96]
     37c:	ldp	x24, x23, [sp, #80]
     380:	ldp	x26, x25, [sp, #64]
     384:	ldp	x28, x27, [sp, #48]
     388:	ldp	x29, x30, [sp, #32]
     38c:	add	sp, sp, #0x80
     390:	ret
     394:	ldr	x20, [x22]
     398:	cbz	w21, 3c0 <getCurFilename+0x1e0>
     39c:	mov	x0, x20
     3a0:	bl	0 <strlen>
     3a4:	sxtw	x21, w0
     3a8:	mov	x0, x19
     3ac:	mov	x1, x20
     3b0:	mov	x2, x21
     3b4:	bl	0 <memcpy>
     3b8:	strb	wzr, [x19, x21]
     3bc:	b	370 <getCurFilename+0x190>
     3c0:	mov	x19, x20
     3c4:	b	370 <getCurFilename+0x190>

00000000000003c8 <__llvm_profile_get_filename>:
     3c8:	stp	x29, x30, [sp, #-32]!
     3cc:	str	x19, [sp, #16]
     3d0:	mov	x29, sp
     3d4:	bl	bf8 <getCurFilenameLength>
     3d8:	add	w8, w0, #0x1
     3dc:	sxtw	x0, w8
     3e0:	bl	0 <malloc>
     3e4:	cbz	x0, 410 <__llvm_profile_get_filename+0x48>
     3e8:	mov	w1, #0x1                   	// #1
     3ec:	mov	x19, x0
     3f0:	bl	1e0 <getCurFilename>
     3f4:	adrp	x8, 0 <__llvm_profile_set_file_object>
     3f8:	add	x8, x8, #0x0
     3fc:	cmp	x0, #0x0
     400:	csel	x0, x8, x19, eq  // eq = none
     404:	ldr	x19, [sp, #16]
     408:	ldp	x29, x30, [sp], #32
     40c:	ret
     410:	adrp	x8, 0 <stderr>
     414:	ldr	x8, [x8]
     418:	adrp	x1, 0 <__llvm_profile_set_file_object>
     41c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     420:	add	x1, x1, #0x0
     424:	ldr	x0, [x8]
     428:	add	x2, x2, #0x0
     42c:	bl	0 <fprintf>
     430:	adrp	x0, 0 <__llvm_profile_set_file_object>
     434:	add	x0, x0, #0x0
     438:	b	404 <__llvm_profile_get_filename+0x3c>

000000000000043c <__llvm_profile_initialize_file>:
     43c:	stp	x29, x30, [sp, #-16]!
     440:	mov	x29, sp
     444:	bl	484 <getFilenamePatFromEnv>
     448:	cbz	x0, 458 <__llvm_profile_initialize_file+0x1c>
     44c:	mov	w1, #0x3                   	// #3
     450:	mov	w2, #0x1                   	// #1
     454:	b	478 <__llvm_profile_initialize_file+0x3c>
     458:	adrp	x8, 0 <__llvm_profile_filename>
     45c:	ldr	x8, [x8]
     460:	mov	w10, #0x1                   	// #1
     464:	mov	w2, wzr
     468:	ldrb	w9, [x8]
     46c:	cmp	w9, #0x0
     470:	cinc	w1, w10, ne  // ne = any
     474:	csel	x0, xzr, x8, eq  // eq = none
     478:	bl	4b0 <parseAndSetFilename>
     47c:	ldp	x29, x30, [sp], #16
     480:	ret

0000000000000484 <getFilenamePatFromEnv>:
     484:	stp	x29, x30, [sp, #-16]!
     488:	mov	x29, sp
     48c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     490:	add	x0, x0, #0x0
     494:	bl	0 <getenv>
     498:	cbz	x0, 4a8 <getFilenamePatFromEnv+0x24>
     49c:	ldrb	w8, [x0]
     4a0:	cmp	w8, #0x0
     4a4:	csel	x0, xzr, x0, eq  // eq = none
     4a8:	ldp	x29, x30, [sp], #16
     4ac:	ret

00000000000004b0 <parseAndSetFilename>:
     4b0:	stp	x29, x30, [sp, #-64]!
     4b4:	str	x23, [sp, #16]
     4b8:	stp	x22, x21, [sp, #32]
     4bc:	stp	x20, x19, [sp, #48]
     4c0:	mov	x29, sp
     4c4:	adrp	x8, 0 <__llvm_profile_set_file_object>
     4c8:	add	x8, x8, #0x0
     4cc:	ldr	w21, [x8, #180]
     4d0:	cmp	w21, w1
     4d4:	b.hi	59c <parseAndSetFilename+0xec>  // b.pmore
     4d8:	ldr	x20, [x8]
     4dc:	adrp	x8, 0 <__llvm_profile_set_file_object>
     4e0:	add	x8, x8, #0x0
     4e4:	cmp	x0, #0x0
     4e8:	mov	w22, w2
     4ec:	mov	w19, w1
     4f0:	csel	x23, x8, x0, eq  // eq = none
     4f4:	cbz	x20, 508 <parseAndSetFilename+0x58>
     4f8:	mov	x0, x20
     4fc:	mov	x1, x23
     500:	bl	0 <strcmp>
     504:	cbz	w0, 594 <parseAndSetFilename+0xe4>
     508:	mov	x0, x23
     50c:	mov	w1, w22
     510:	bl	d14 <parseFilenamePattern>
     514:	cbz	w0, 51c <parseAndSetFilename+0x6c>
     518:	bl	f64 <resetFilenameToDefault>
     51c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     520:	adrp	x8, 0 <__llvm_profile_set_file_object>
     524:	add	x0, x0, #0x0
     528:	str	w19, [x8]
     52c:	bl	0 <getenv>
     530:	cbz	x20, 584 <parseAndSetFilename+0xd4>
     534:	cbz	x0, 588 <parseAndSetFilename+0xd8>
     538:	adrp	x8, 0 <stderr>
     53c:	ldr	x8, [x8]
     540:	mov	w0, w21
     544:	ldr	x22, [x8]
     548:	bl	fcc <getPNSStr>
     54c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     550:	ldr	x21, [x8]
     554:	mov	x23, x0
     558:	mov	w0, w19
     55c:	bl	fcc <getPNSStr>
     560:	adrp	x1, 0 <__llvm_profile_set_file_object>
     564:	mov	x5, x0
     568:	add	x1, x1, #0x0
     56c:	mov	x0, x22
     570:	mov	x2, x20
     574:	mov	x3, x23
     578:	mov	x4, x21
     57c:	bl	0 <fprintf>
     580:	b	588 <parseAndSetFilename+0xd8>
     584:	cbnz	x0, 5b0 <parseAndSetFilename+0x100>
     588:	bl	ff4 <truncateCurrentFile>
     58c:	bl	1090 <initializeProfileForContinuousMode>
     590:	b	59c <parseAndSetFilename+0xec>
     594:	adrp	x8, 0 <__llvm_profile_set_file_object>
     598:	str	w19, [x8]
     59c:	ldp	x20, x19, [sp, #48]
     5a0:	ldp	x22, x21, [sp, #32]
     5a4:	ldr	x23, [sp, #16]
     5a8:	ldp	x29, x30, [sp], #64
     5ac:	ret
     5b0:	adrp	x8, 0 <stderr>
     5b4:	ldr	x8, [x8]
     5b8:	adrp	x9, 0 <__llvm_profile_set_file_object>
     5bc:	ldr	x21, [x9]
     5c0:	mov	w0, w19
     5c4:	ldr	x20, [x8]
     5c8:	bl	fcc <getPNSStr>
     5cc:	adrp	x1, 0 <__llvm_profile_set_file_object>
     5d0:	mov	x3, x0
     5d4:	add	x1, x1, #0x0
     5d8:	mov	x0, x20
     5dc:	mov	x2, x21
     5e0:	bl	0 <fprintf>
     5e4:	b	588 <parseAndSetFilename+0xd8>

00000000000005e8 <__llvm_profile_set_filename>:
     5e8:	stp	x29, x30, [sp, #-32]!
     5ec:	str	x19, [sp, #16]
     5f0:	mov	x29, sp
     5f4:	mov	x19, x0
     5f8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     5fc:	cbnz	w0, 610 <__llvm_profile_set_filename+0x28>
     600:	mov	w1, #0x4                   	// #4
     604:	mov	w2, #0x1                   	// #1
     608:	mov	x0, x19
     60c:	bl	4b0 <parseAndSetFilename>
     610:	ldr	x19, [sp, #16]
     614:	ldp	x29, x30, [sp], #32
     618:	ret

000000000000061c <__llvm_profile_write_file>:
     61c:	stp	x29, x30, [sp, #-48]!
     620:	stp	x22, x21, [sp, #16]
     624:	stp	x20, x19, [sp, #32]
     628:	mov	x29, sp
     62c:	bl	0 <lprofProfileDumped>
     630:	cbnz	w0, 6a4 <__llvm_profile_write_file+0x88>
     634:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     638:	cbnz	w0, 6a4 <__llvm_profile_write_file+0x88>
     63c:	bl	bf8 <getCurFilenameLength>
     640:	add	w8, w0, #0x1
     644:	sxtw	x8, w8
     648:	add	x8, x8, #0xf
     64c:	and	x8, x8, #0xfffffffffffffff0
     650:	mov	x9, sp
     654:	sub	x0, x9, x8
     658:	mov	sp, x0
     65c:	mov	w1, wzr
     660:	bl	1e0 <getCurFilename>
     664:	cbz	x0, 6cc <__llvm_profile_write_file+0xb0>
     668:	mov	x20, x0
     66c:	bl	0 <__llvm_profile_get_version>
     670:	and	x8, x0, #0xffffffffffffff
     674:	cmp	x8, #0x5
     678:	b.ne	6f4 <__llvm_profile_write_file+0xd8>  // b.any
     67c:	bl	0 <lprofSuspendSigKill>
     680:	mov	w21, w0
     684:	mov	x0, x20
     688:	bl	774 <writeFile>
     68c:	mov	w19, w0
     690:	cbnz	w0, 724 <__llvm_profile_write_file+0x108>
     694:	cmp	w21, #0x1
     698:	b.ne	75c <__llvm_profile_write_file+0x140>  // b.any
     69c:	bl	0 <lprofRestoreSigKill>
     6a0:	b	75c <__llvm_profile_write_file+0x140>
     6a4:	adrp	x8, 0 <stderr>
     6a8:	ldr	x8, [x8]
     6ac:	adrp	x1, 0 <__llvm_profile_set_file_object>
     6b0:	adrp	x2, 0 <__llvm_profile_set_file_object>
     6b4:	add	x1, x1, #0x0
     6b8:	ldr	x0, [x8]
     6bc:	add	x2, x2, #0x0
     6c0:	bl	0 <fprintf>
     6c4:	mov	w19, wzr
     6c8:	b	75c <__llvm_profile_write_file+0x140>
     6cc:	adrp	x8, 0 <stderr>
     6d0:	ldr	x8, [x8]
     6d4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     6d8:	adrp	x2, 0 <__llvm_profile_set_file_object>
     6dc:	add	x1, x1, #0x0
     6e0:	ldr	x0, [x8]
     6e4:	add	x2, x2, #0x0
     6e8:	bl	0 <fprintf>
     6ec:	mov	w19, #0xffffffff            	// #-1
     6f0:	b	75c <__llvm_profile_write_file+0x140>
     6f4:	adrp	x8, 0 <stderr>
     6f8:	ldr	x8, [x8]
     6fc:	ldr	x19, [x8]
     700:	bl	0 <__llvm_profile_get_version>
     704:	adrp	x1, 0 <__llvm_profile_set_file_object>
     708:	mov	x3, x0
     70c:	add	x1, x1, #0x0
     710:	mov	w2, #0x5                   	// #5
     714:	mov	x0, x19
     718:	bl	0 <fprintf>
     71c:	mov	w19, #0xffffffff            	// #-1
     720:	b	75c <__llvm_profile_write_file+0x140>
     724:	adrp	x8, 0 <stderr>
     728:	ldr	x8, [x8]
     72c:	ldr	x22, [x8]
     730:	bl	0 <__errno_location>
     734:	ldr	w0, [x0]
     738:	bl	0 <strerror>
     73c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     740:	mov	x3, x0
     744:	add	x1, x1, #0x0
     748:	mov	x0, x22
     74c:	mov	x2, x20
     750:	bl	0 <fprintf>
     754:	cmp	w21, #0x1
     758:	b.eq	69c <__llvm_profile_write_file+0x80>  // b.none
     75c:	mov	w0, w19
     760:	mov	sp, x29
     764:	ldp	x20, x19, [sp, #32]
     768:	ldp	x22, x21, [sp, #16]
     76c:	ldp	x29, x30, [sp], #48
     770:	ret

0000000000000774 <writeFile>:
     774:	sub	sp, sp, #0x40
     778:	stp	x29, x30, [sp, #32]
     77c:	stp	x20, x19, [sp, #48]
     780:	add	x29, sp, #0x20
     784:	stur	wzr, [x29, #-4]
     788:	adrp	x8, 0 <VPMergeHook>
     78c:	adrp	x9, 0 <lprofMergeValueProfData>
     790:	ldr	x8, [x8]
     794:	ldr	x9, [x9]
     798:	mov	x19, x0
     79c:	str	x9, [x8]
     7a0:	bl	18a4 <doMerging>
     7a4:	cbz	w0, 80c <writeFile+0x98>
     7a8:	sub	x1, x29, #0x4
     7ac:	mov	x0, x19
     7b0:	bl	1690 <openFileForMerging>
     7b4:	mov	x19, x0
     7b8:	cbz	x0, 81c <writeFile+0xa8>
     7bc:	adrp	x9, 0 <free>
     7c0:	ldr	x9, [x9]
     7c4:	adrp	x8, 0 <FreeHook>
     7c8:	str	x9, [x8]
     7cc:	bl	1850 <setupIOBuffer>
     7d0:	add	x0, sp, #0x8
     7d4:	mov	x1, x19
     7d8:	bl	f8 <initFileWriter>
     7dc:	bl	0 <lprofGetVPDataReader>
     7e0:	ldur	w2, [x29, #-4]
     7e4:	mov	x1, x0
     7e8:	add	x0, sp, #0x8
     7ec:	bl	0 <lprofWriteData>
     7f0:	mov	w20, w0
     7f4:	bl	1898 <getProfileFile>
     7f8:	cmp	x19, x0
     7fc:	b.eq	824 <writeFile+0xb0>  // b.none
     800:	mov	x0, x19
     804:	bl	0 <fclose>
     808:	b	83c <writeFile+0xc8>
     80c:	mov	x0, x19
     810:	bl	1770 <getFileObject>
     814:	mov	x19, x0
     818:	cbnz	x0, 7bc <writeFile+0x48>
     81c:	mov	w20, #0xffffffff            	// #-1
     820:	b	83c <writeFile+0xc8>
     824:	mov	x0, x19
     828:	bl	0 <fflush>
     82c:	bl	18a4 <doMerging>
     830:	cbz	w0, 83c <writeFile+0xc8>
     834:	mov	x0, x19
     838:	bl	0 <lprofUnlockFileHandle>
     83c:	mov	w0, w20
     840:	ldp	x20, x19, [sp, #48]
     844:	ldp	x29, x30, [sp, #32]
     848:	add	sp, sp, #0x40
     84c:	ret

0000000000000850 <__llvm_profile_dump>:
     850:	stp	x29, x30, [sp, #-32]!
     854:	str	x19, [sp, #16]
     858:	mov	x29, sp
     85c:	bl	18a4 <doMerging>
     860:	cbz	w0, 880 <__llvm_profile_dump+0x30>
     864:	bl	61c <__llvm_profile_write_file>
     868:	mov	w19, w0
     86c:	bl	0 <lprofSetProfileDumped>
     870:	mov	w0, w19
     874:	ldr	x19, [sp, #16]
     878:	ldp	x29, x30, [sp], #32
     87c:	ret
     880:	adrp	x8, 0 <stderr>
     884:	ldr	x8, [x8]
     888:	adrp	x1, 0 <__llvm_profile_set_file_object>
     88c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     890:	add	x1, x1, #0x0
     894:	ldr	x0, [x8]
     898:	add	x2, x2, #0x0
     89c:	bl	0 <fprintf>
     8a0:	b	864 <__llvm_profile_dump+0x14>

00000000000008a4 <__llvm_orderfile_write_file>:
     8a4:	stp	x29, x30, [sp, #-48]!
     8a8:	stp	x22, x21, [sp, #16]
     8ac:	stp	x20, x19, [sp, #32]
     8b0:	mov	x29, sp
     8b4:	bl	bf8 <getCurFilenameLength>
     8b8:	add	w8, w0, #0x7
     8bc:	sxtw	x8, w8
     8c0:	add	x8, x8, #0xf
     8c4:	and	x8, x8, #0xfffffffffffffff0
     8c8:	mov	x9, sp
     8cc:	sub	x20, x9, x8
     8d0:	mov	sp, x20
     8d4:	mov	w1, #0x1                   	// #1
     8d8:	mov	x0, x20
     8dc:	bl	1e0 <getCurFilename>
     8e0:	cbz	x0, 960 <__llvm_orderfile_write_file+0xbc>
     8e4:	mov	x19, x0
     8e8:	bl	0 <strlen>
     8ec:	mov	w9, #0x6f2e                	// #28462
     8f0:	add	x8, x20, w0, sxtw
     8f4:	movk	w9, #0x6472, lsl #16
     8f8:	mov	w10, #0x7265                	// #29285
     8fc:	mov	x11, #0x600000000           	// #25769803776
     900:	str	w9, [x8]
     904:	strh	w10, [x8, #4]
     908:	add	x8, x11, x0, lsl #32
     90c:	asr	x8, x8, #32
     910:	strb	wzr, [x20, x8]
     914:	bl	0 <__llvm_profile_get_version>
     918:	and	x8, x0, #0xffffffffffffff
     91c:	cmp	x8, #0x5
     920:	b.ne	988 <__llvm_orderfile_write_file+0xe4>  // b.any
     924:	bl	0 <lprofSuspendSigKill>
     928:	mov	w21, w0
     92c:	mov	x0, x19
     930:	bl	9f4 <writeOrderFile>
     934:	mov	w20, w0
     938:	cbnz	w0, 9b8 <__llvm_orderfile_write_file+0x114>
     93c:	cmp	w21, #0x1
     940:	b.ne	948 <__llvm_orderfile_write_file+0xa4>  // b.any
     944:	bl	0 <lprofRestoreSigKill>
     948:	mov	w0, w20
     94c:	mov	sp, x29
     950:	ldp	x20, x19, [sp, #32]
     954:	ldp	x22, x21, [sp, #16]
     958:	ldp	x29, x30, [sp], #48
     95c:	ret
     960:	adrp	x8, 0 <stderr>
     964:	ldr	x8, [x8]
     968:	adrp	x1, 0 <__llvm_profile_set_file_object>
     96c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     970:	add	x1, x1, #0x0
     974:	ldr	x0, [x8]
     978:	add	x2, x2, #0x0
     97c:	bl	0 <fprintf>
     980:	mov	w20, #0xffffffff            	// #-1
     984:	b	948 <__llvm_orderfile_write_file+0xa4>
     988:	adrp	x8, 0 <stderr>
     98c:	ldr	x8, [x8]
     990:	ldr	x19, [x8]
     994:	bl	0 <__llvm_profile_get_version>
     998:	adrp	x1, 0 <__llvm_profile_set_file_object>
     99c:	mov	x3, x0
     9a0:	add	x1, x1, #0x0
     9a4:	mov	w2, #0x5                   	// #5
     9a8:	mov	x0, x19
     9ac:	bl	0 <fprintf>
     9b0:	mov	w20, #0xffffffff            	// #-1
     9b4:	b	948 <__llvm_orderfile_write_file+0xa4>
     9b8:	adrp	x8, 0 <stderr>
     9bc:	ldr	x8, [x8]
     9c0:	ldr	x22, [x8]
     9c4:	bl	0 <__errno_location>
     9c8:	ldr	w0, [x0]
     9cc:	bl	0 <strerror>
     9d0:	adrp	x1, 0 <__llvm_profile_set_file_object>
     9d4:	mov	x3, x0
     9d8:	add	x1, x1, #0x0
     9dc:	mov	x0, x22
     9e0:	mov	x2, x19
     9e4:	bl	0 <fprintf>
     9e8:	cmp	w21, #0x1
     9ec:	b.eq	944 <__llvm_orderfile_write_file+0xa0>  // b.none
     9f0:	b	948 <__llvm_orderfile_write_file+0xa4>

00000000000009f4 <writeOrderFile>:
     9f4:	stp	x29, x30, [sp, #-32]!
     9f8:	stp	x20, x19, [sp, #16]
     9fc:	mov	x29, sp
     a00:	adrp	x1, 0 <__llvm_profile_set_file_object>
     a04:	add	x1, x1, #0x0
     a08:	mov	x20, x0
     a0c:	bl	0 <fopen>
     a10:	cbz	x0, a58 <writeOrderFile+0x64>
     a14:	adrp	x9, 0 <free>
     a18:	ldr	x9, [x9]
     a1c:	adrp	x8, 0 <FreeHook>
     a20:	mov	x19, x0
     a24:	str	x9, [x8]
     a28:	bl	1850 <setupIOBuffer>
     a2c:	bl	0 <__llvm_profile_begin_orderfile>
     a30:	mov	x1, x0
     a34:	mov	x0, x19
     a38:	bl	18e4 <orderFileWriter>
     a3c:	mov	w20, w0
     a40:	mov	x0, x19
     a44:	bl	0 <fclose>
     a48:	mov	w0, w20
     a4c:	ldp	x20, x19, [sp, #16]
     a50:	ldp	x29, x30, [sp], #32
     a54:	ret
     a58:	adrp	x8, 0 <stderr>
     a5c:	ldr	x8, [x8]
     a60:	adrp	x1, 0 <__llvm_profile_set_file_object>
     a64:	add	x1, x1, #0x0
     a68:	mov	x2, x20
     a6c:	ldr	x0, [x8]
     a70:	bl	0 <fprintf>
     a74:	mov	w20, #0xffffffff            	// #-1
     a78:	b	a48 <writeOrderFile+0x54>

0000000000000a7c <__llvm_orderfile_dump>:
     a7c:	stp	x29, x30, [sp, #-16]!
     a80:	mov	x29, sp
     a84:	bl	8a4 <__llvm_orderfile_write_file>
     a88:	ldp	x29, x30, [sp], #16
     a8c:	ret

0000000000000a90 <__llvm_profile_register_write_file_atexit>:
     a90:	stp	x29, x30, [sp, #-32]!
     a94:	str	x19, [sp, #16]
     a98:	mov	x29, sp
     a9c:	adrp	x19, 0 <__llvm_profile_set_file_object>
     aa0:	ldrb	w8, [x19]
     aa4:	tbz	w8, #0, ab0 <__llvm_profile_register_write_file_atexit+0x20>
     aa8:	mov	w0, wzr
     aac:	b	ac8 <__llvm_profile_register_write_file_atexit+0x38>
     ab0:	bl	0 <lprofSetupValueProfiler>
     ab4:	adrp	x0, 0 <__llvm_profile_set_file_object>
     ab8:	mov	w8, #0x1                   	// #1
     abc:	add	x0, x0, #0x0
     ac0:	strb	w8, [x19]
     ac4:	bl	0 <atexit>
     ac8:	ldr	x19, [sp, #16]
     acc:	ldp	x29, x30, [sp], #32
     ad0:	ret

0000000000000ad4 <writeFileWithoutReturn>:
     ad4:	stp	x29, x30, [sp, #-16]!
     ad8:	mov	x29, sp
     adc:	bl	61c <__llvm_profile_write_file>
     ae0:	ldp	x29, x30, [sp], #16
     ae4:	ret

0000000000000ae8 <fileWriter>:
     ae8:	stp	x29, x30, [sp, #-80]!
     aec:	str	x25, [sp, #16]
     af0:	stp	x24, x23, [sp, #32]
     af4:	stp	x22, x21, [sp, #48]
     af8:	stp	x20, x19, [sp, #64]
     afc:	mov	x29, sp
     b00:	ldr	x20, [x0, #8]
     b04:	str	xzr, [x29, #24]
     b08:	cbz	w2, bd8 <fileWriter+0xf0>
     b0c:	mov	x19, x1
     b10:	mov	x23, xzr
     b14:	mov	w24, w2
     b18:	mov	w25, #0x8                   	// #8
     b1c:	b	b48 <fileWriter+0x60>
     b20:	add	x21, x19, x23, lsl #5
     b24:	ldp	x1, x2, [x21, #8]
     b28:	mov	x3, x20
     b2c:	bl	0 <fwrite>
     b30:	ldr	x8, [x21, #16]
     b34:	cmp	x0, x8
     b38:	b.ne	bd0 <fileWriter+0xe8>  // b.any
     b3c:	add	x23, x23, #0x1
     b40:	cmp	x23, x24
     b44:	b.eq	bd8 <fileWriter+0xf0>  // b.none
     b48:	lsl	x8, x23, #5
     b4c:	ldr	x0, [x19, x8]
     b50:	cbnz	x0, b20 <fileWriter+0x38>
     b54:	add	x8, x19, x23, lsl #5
     b58:	ldr	w9, [x8, #24]
     b5c:	ldp	x10, x8, [x8, #8]
     b60:	mul	x21, x8, x10
     b64:	cbz	w9, ba8 <fileWriter+0xc0>
     b68:	cbz	x21, bc8 <fileWriter+0xe0>
     b6c:	cmp	x21, #0x8
     b70:	csel	x22, x21, x25, cc  // cc = lo, ul, last
     b74:	add	x0, x29, #0x18
     b78:	mov	w1, #0x1                   	// #1
     b7c:	mov	x2, x22
     b80:	mov	x3, x20
     b84:	bl	0 <fwrite>
     b88:	cmp	x0, x22
     b8c:	csel	x8, x22, xzr, eq  // eq = none
     b90:	cmp	x0, x22
     b94:	sub	x21, x21, x8
     b98:	b.eq	b68 <fileWriter+0x80>  // b.none
     b9c:	cset	w8, ne  // ne = any
     ba0:	cbz	w8, b3c <fileWriter+0x54>
     ba4:	b	bd0 <fileWriter+0xe8>
     ba8:	mov	w2, #0x1                   	// #1
     bac:	mov	x0, x20
     bb0:	mov	x1, x21
     bb4:	mov	w22, #0x1                   	// #1
     bb8:	bl	0 <fseek>
     bbc:	cmn	w0, #0x1
     bc0:	b.ne	b3c <fileWriter+0x54>  // b.any
     bc4:	b	bdc <fileWriter+0xf4>
     bc8:	mov	w8, wzr
     bcc:	cbz	w8, b3c <fileWriter+0x54>
     bd0:	mov	w22, #0x1                   	// #1
     bd4:	b	bdc <fileWriter+0xf4>
     bd8:	mov	w22, wzr
     bdc:	mov	w0, w22
     be0:	ldp	x20, x19, [sp, #64]
     be4:	ldp	x22, x21, [sp, #48]
     be8:	ldp	x24, x23, [sp, #32]
     bec:	ldr	x25, [sp, #16]
     bf0:	ldp	x29, x30, [sp], #80
     bf4:	ret

0000000000000bf8 <getCurFilenameLength>:
     bf8:	stp	x29, x30, [sp, #-64]!
     bfc:	str	x23, [sp, #16]
     c00:	stp	x22, x21, [sp, #32]
     c04:	stp	x20, x19, [sp, #48]
     c08:	mov	x29, sp
     c0c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     c10:	ldr	x0, [x8]
     c14:	cbz	x0, c7c <getCurFilenameLength+0x84>
     c18:	ldrb	w8, [x0]
     c1c:	cbz	w8, c7c <getCurFilenameLength+0x84>
     c20:	adrp	x8, 0 <__llvm_profile_set_file_object>
     c24:	add	x8, x8, #0x0
     c28:	ldp	w23, w21, [x8]
     c2c:	ldr	w22, [x8, #8]
     c30:	orr	w8, w21, w23
     c34:	orr	w20, w8, w22
     c38:	bl	0 <strlen>
     c3c:	mov	x19, x0
     c40:	cbz	w20, c80 <getCurFilenameLength+0x88>
     c44:	adrp	x20, 0 <__llvm_profile_set_file_object>
     c48:	add	x20, x20, #0x0
     c4c:	mov	x0, x20
     c50:	bl	0 <strlen>
     c54:	sub	w8, w0, #0x2
     c58:	add	x0, x20, #0x10
     c5c:	madd	w19, w8, w23, w19
     c60:	bl	0 <strlen>
     c64:	sub	w8, w0, #0x2
     c68:	madd	w8, w8, w21, w19
     c6c:	add	w9, w8, #0x18
     c70:	cmp	w22, #0x0
     c74:	csel	w19, w8, w9, eq  // eq = none
     c78:	b	c80 <getCurFilenameLength+0x88>
     c7c:	mov	w19, wzr
     c80:	mov	w0, w19
     c84:	ldp	x20, x19, [sp, #48]
     c88:	ldp	x22, x21, [sp, #32]
     c8c:	ldr	x23, [sp, #16]
     c90:	ldp	x29, x30, [sp], #64
     c94:	ret

0000000000000c98 <getMergePoolSize>:
     c98:	mov	w9, wzr
     c9c:	mov	w10, wzr
     ca0:	mov	w11, #0xa                   	// #10
     ca4:	ldr	w12, [x1]
     ca8:	add	w12, w9, w12
     cac:	ldrb	w13, [x0, w12, uxtw]
     cb0:	cmp	w13, #0x6d
     cb4:	b.ne	cd0 <getMergePoolSize+0x38>  // b.any
     cb8:	cmp	w10, #0x0
     cbc:	str	w12, [x1]
     cc0:	csinc	w8, w10, wzr, ne  // ne = any
     cc4:	mov	w12, #0x1                   	// #1
     cc8:	cbz	w12, cf8 <getMergePoolSize+0x60>
     ccc:	b	d00 <getMergePoolSize+0x68>
     cd0:	sub	w12, w13, #0x30
     cd4:	cmp	w12, #0x9
     cd8:	b.ls	ce8 <getMergePoolSize+0x50>  // b.plast
     cdc:	mov	w12, #0x2                   	// #2
     ce0:	cbz	w12, cf8 <getMergePoolSize+0x60>
     ce4:	b	d00 <getMergePoolSize+0x68>
     ce8:	madd	w10, w10, w11, w13
     cec:	mov	w12, wzr
     cf0:	sub	w10, w10, #0x30
     cf4:	cbnz	w12, d00 <getMergePoolSize+0x68>
     cf8:	add	w9, w9, #0x1
     cfc:	b	ca4 <getMergePoolSize+0xc>
     d00:	cmp	w12, #0x2
     d04:	b.ne	d0c <getMergePoolSize+0x74>  // b.any
     d08:	mov	w8, wzr
     d0c:	mov	w0, w8
     d10:	ret

0000000000000d14 <parseFilenamePattern>:
     d14:	sub	sp, sp, #0x70
     d18:	stp	x29, x30, [sp, #16]
     d1c:	stp	x28, x27, [sp, #32]
     d20:	stp	x26, x25, [sp, #48]
     d24:	stp	x24, x23, [sp, #64]
     d28:	stp	x22, x21, [sp, #80]
     d2c:	stp	x20, x19, [sp, #96]
     d30:	add	x29, sp, #0x10
     d34:	adrp	x8, 0 <__llvm_profile_set_file_object>
     d38:	ldr	x8, [x8]
     d3c:	mov	w20, w1
     d40:	mov	x19, x0
     d44:	cbz	x8, d50 <parseFilenamePattern+0x3c>
     d48:	mov	x0, x8
     d4c:	bl	0 <free>
     d50:	adrp	x21, 0 <__llvm_profile_set_file_object>
     d54:	add	x21, x21, #0x0
     d58:	ldr	x0, [x21]
     d5c:	cbz	x0, d6c <parseFilenamePattern+0x58>
     d60:	ldr	w8, [x21, #8]
     d64:	cbz	w8, d6c <parseFilenamePattern+0x58>
     d68:	bl	0 <free>
     d6c:	movi	v0.2d, #0x0
     d70:	str	xzr, [x21, #176]
     d74:	stp	q0, q0, [x21, #144]
     d78:	stp	q0, q0, [x21, #112]
     d7c:	stp	q0, q0, [x21, #80]
     d80:	stp	q0, q0, [x21, #48]
     d84:	stp	q0, q0, [x21, #16]
     d88:	str	q0, [x21]
     d8c:	cbz	w20, da8 <parseFilenamePattern+0x94>
     d90:	mov	x0, x19
     d94:	bl	0 <strdup>
     d98:	mov	w8, #0x1                   	// #1
     d9c:	str	x0, [x21]
     da0:	str	w8, [x21, #8]
     da4:	b	db0 <parseFilenamePattern+0x9c>
     da8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     dac:	str	x19, [x8]
     db0:	adrp	x26, 0 <stderr>
     db4:	ldr	x26, [x26]
     db8:	adrp	x20, 0 <__llvm_profile_set_file_object>
     dbc:	adrp	x21, 0 <__llvm_profile_set_file_object>
     dc0:	adrp	x22, 0 <__llvm_profile_set_file_object>
     dc4:	mov	w8, wzr
     dc8:	mov	w25, wzr
     dcc:	mov	w28, wzr
     dd0:	mov	w24, wzr
     dd4:	add	x20, x20, #0x0
     dd8:	add	x21, x21, #0x0
     ddc:	add	x22, x22, #0x0
     de0:	adrp	x27, 0 <__llvm_profile_set_file_object>
     de4:	b	df4 <parseFilenamePattern+0xe0>
     de8:	cbz	w8, ef8 <parseFilenamePattern+0x1e4>
     dec:	ldur	w8, [x29, #-4]
     df0:	add	w8, w8, #0x1
     df4:	stur	w8, [x29, #-4]
     df8:	sxtw	x23, w8
     dfc:	ldrb	w8, [x19, x23]
     e00:	cmp	w8, #0x25
     e04:	b.ne	de8 <parseFilenamePattern+0xd4>  // b.any
     e08:	add	x8, x23, #0x1
     e0c:	stur	w8, [x29, #-4]
     e10:	ldrb	w8, [x19, x8]
     e14:	cmp	w8, #0x63
     e18:	b.eq	e3c <parseFilenamePattern+0x128>  // b.none
     e1c:	cmp	w8, #0x68
     e20:	b.eq	e54 <parseFilenamePattern+0x140>  // b.none
     e24:	cmp	w8, #0x70
     e28:	b.ne	e64 <parseFilenamePattern+0x150>  // b.any
     e2c:	add	w23, w28, #0x1
     e30:	cbz	w28, e88 <parseFilenamePattern+0x174>
     e34:	mov	w28, w23
     e38:	b	dec <parseFilenamePattern+0xd8>
     e3c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     e40:	cbnz	w0, f0c <parseFilenamePattern+0x1f8>
     e44:	bl	0 <__llvm_profile_enable_continuous_mode>
     e48:	add	w8, w23, #0x2
     e4c:	stur	w8, [x29, #-4]
     e50:	b	dec <parseFilenamePattern+0xd8>
     e54:	add	w23, w25, #0x1
     e58:	cbz	w25, eb0 <parseFilenamePattern+0x19c>
     e5c:	mov	w25, w23
     e60:	b	dec <parseFilenamePattern+0xd8>
     e64:	sub	x1, x29, #0x4
     e68:	mov	x0, x19
     e6c:	bl	c98 <getMergePoolSize>
     e70:	cbz	w0, ec8 <parseFilenamePattern+0x1b4>
     e74:	cbnz	w24, edc <parseFilenamePattern+0x1c8>
     e78:	mov	w8, wzr
     e7c:	mov	w24, #0x1                   	// #1
     e80:	str	w0, [x27]
     e84:	b	ecc <parseFilenamePattern+0x1b8>
     e88:	bl	0 <getpid>
     e8c:	sxtw	x3, w0
     e90:	mov	w1, #0x10                  	// #16
     e94:	mov	x0, x21
     e98:	mov	x2, x22
     e9c:	bl	0 <snprintf>
     ea0:	cmp	w0, #0x0
     ea4:	mov	w28, w23
     ea8:	b.gt	dec <parseFilenamePattern+0xd8>
     eac:	b	f1c <parseFilenamePattern+0x208>
     eb0:	mov	w1, #0x80                  	// #128
     eb4:	mov	x0, x20
     eb8:	bl	0 <lprofGetHostName>
     ebc:	mov	w25, w23
     ec0:	cbz	w0, dec <parseFilenamePattern+0xd8>
     ec4:	b	f2c <parseFilenamePattern+0x218>
     ec8:	mov	w8, #0x4                   	// #4
     ecc:	orr	w8, w8, #0x4
     ed0:	cmp	w8, #0x4
     ed4:	b.eq	dec <parseFilenamePattern+0xd8>  // b.none
     ed8:	b	f40 <parseFilenamePattern+0x22c>
     edc:	ldr	x0, [x26]
     ee0:	adrp	x1, 0 <__llvm_profile_set_file_object>
     ee4:	add	x1, x1, #0x0
     ee8:	mov	x2, x19
     eec:	bl	0 <fprintf>
     ef0:	mov	w8, #0x1                   	// #1
     ef4:	b	ecc <parseFilenamePattern+0x1b8>
     ef8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     efc:	add	x8, x8, #0x0
     f00:	mov	w0, wzr
     f04:	stp	w28, w25, [x8]
     f08:	b	f44 <parseFilenamePattern+0x230>
     f0c:	ldr	x0, [x26]
     f10:	adrp	x1, 0 <__llvm_profile_set_file_object>
     f14:	add	x1, x1, #0x0
     f18:	b	f38 <parseFilenamePattern+0x224>
     f1c:	ldr	x0, [x26]
     f20:	adrp	x1, 0 <__llvm_profile_set_file_object>
     f24:	add	x1, x1, #0x0
     f28:	b	f38 <parseFilenamePattern+0x224>
     f2c:	ldr	x0, [x26]
     f30:	adrp	x1, 0 <__llvm_profile_set_file_object>
     f34:	add	x1, x1, #0x0
     f38:	mov	x2, x19
     f3c:	bl	0 <fprintf>
     f40:	mov	w0, #0xffffffff            	// #-1
     f44:	ldp	x20, x19, [sp, #96]
     f48:	ldp	x22, x21, [sp, #80]
     f4c:	ldp	x24, x23, [sp, #64]
     f50:	ldp	x26, x25, [sp, #48]
     f54:	ldp	x28, x27, [sp, #32]
     f58:	ldp	x29, x30, [sp, #16]
     f5c:	add	sp, sp, #0x70
     f60:	ret

0000000000000f64 <resetFilenameToDefault>:
     f64:	stp	x29, x30, [sp, #-32]!
     f68:	str	x19, [sp, #16]
     f6c:	mov	x29, sp
     f70:	adrp	x19, 0 <__llvm_profile_set_file_object>
     f74:	add	x19, x19, #0x0
     f78:	ldr	x0, [x19]
     f7c:	cbz	x0, f8c <resetFilenameToDefault+0x28>
     f80:	ldr	w8, [x19, #8]
     f84:	cbz	w8, f8c <resetFilenameToDefault+0x28>
     f88:	bl	0 <free>
     f8c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     f90:	movi	v0.2d, #0x0
     f94:	add	x8, x8, #0x0
     f98:	stp	q0, q0, [x19]
     f9c:	str	x8, [x19]
     fa0:	mov	w8, #0x1                   	// #1
     fa4:	str	xzr, [x19, #176]
     fa8:	stp	q0, q0, [x19, #144]
     fac:	stp	q0, q0, [x19, #112]
     fb0:	stp	q0, q0, [x19, #80]
     fb4:	stp	q0, q0, [x19, #48]
     fb8:	str	q0, [x19, #32]
     fbc:	str	w8, [x19, #180]
     fc0:	ldr	x19, [sp, #16]
     fc4:	ldp	x29, x30, [sp], #32
     fc8:	ret

0000000000000fcc <getPNSStr>:
     fcc:	sub	w8, w0, #0x1
     fd0:	cmp	w8, #0x3
     fd4:	b.hi	fe8 <getPNSStr+0x1c>  // b.pmore
     fd8:	adrp	x9, 0 <__llvm_profile_set_file_object>
     fdc:	add	x9, x9, #0x0
     fe0:	ldr	x0, [x9, w8, sxtw #3]
     fe4:	ret
     fe8:	adrp	x0, 0 <__llvm_profile_set_file_object>
     fec:	add	x0, x0, #0x0
     ff0:	ret

0000000000000ff4 <truncateCurrentFile>:
     ff4:	stp	x29, x30, [sp, #-32]!
     ff8:	str	x19, [sp, #16]
     ffc:	mov	x29, sp
    1000:	bl	bf8 <getCurFilenameLength>
    1004:	add	w8, w0, #0x1
    1008:	sxtw	x8, w8
    100c:	add	x8, x8, #0xf
    1010:	and	x8, x8, #0xfffffffffffffff0
    1014:	mov	x9, sp
    1018:	sub	x0, x9, x8
    101c:	mov	sp, x0
    1020:	mov	w1, wzr
    1024:	bl	1e0 <getCurFilename>
    1028:	cbz	x0, 1080 <truncateCurrentFile+0x8c>
    102c:	mov	x19, x0
    1030:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1034:	add	x0, x0, #0x0
    1038:	bl	0 <getenv>
    103c:	cbnz	x0, 1080 <truncateCurrentFile+0x8c>
    1040:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1044:	add	x0, x0, #0x0
    1048:	mov	w2, #0x1                   	// #1
    104c:	mov	x1, x0
    1050:	bl	0 <setenv>
    1054:	mov	x0, x19
    1058:	bl	1388 <createProfileDir>
    105c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1060:	ldr	w8, [x8]
    1064:	cbnz	w8, 1080 <truncateCurrentFile+0x8c>
    1068:	adrp	x1, 0 <__llvm_profile_set_file_object>
    106c:	add	x1, x1, #0x0
    1070:	mov	x0, x19
    1074:	bl	0 <fopen>
    1078:	cbz	x0, 1080 <truncateCurrentFile+0x8c>
    107c:	bl	0 <fclose>
    1080:	mov	sp, x29
    1084:	ldr	x19, [sp, #16]
    1088:	ldp	x29, x30, [sp], #32
    108c:	ret

0000000000001090 <initializeProfileForContinuousMode>:
    1090:	stp	x29, x30, [sp, #-96]!
    1094:	str	x27, [sp, #16]
    1098:	stp	x26, x25, [sp, #32]
    109c:	stp	x24, x23, [sp, #48]
    10a0:	stp	x22, x21, [sp, #64]
    10a4:	stp	x20, x19, [sp, #80]
    10a8:	mov	x29, sp
    10ac:	sub	sp, sp, #0x20
    10b0:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    10b4:	cbz	w0, 12f8 <initializeProfileForContinuousMode+0x268>
    10b8:	bl	0 <__llvm_profile_begin_data>
    10bc:	mov	x22, x0
    10c0:	bl	0 <__llvm_profile_end_data>
    10c4:	mov	x20, x0
    10c8:	bl	0 <__llvm_profile_begin_counters>
    10cc:	mov	x19, x0
    10d0:	bl	0 <__llvm_profile_end_counters>
    10d4:	mov	x21, x0
    10d8:	bl	0 <__llvm_profile_begin_names>
    10dc:	mov	x23, x0
    10e0:	bl	0 <__llvm_profile_end_names>
    10e4:	mov	x24, x0
    10e8:	mov	x0, x22
    10ec:	mov	x1, x20
    10f0:	bl	0 <__llvm_profile_get_data_size>
    10f4:	mov	x20, x0
    10f8:	bl	0 <getpagesize>
    10fc:	mov	w25, w0
    1100:	sdiv	x8, x19, x25
    1104:	msub	x8, x8, x25, x19
    1108:	cbnz	x8, 11f8 <initializeProfileForContinuousMode+0x168>
    110c:	sdiv	x8, x22, x25
    1110:	msub	x8, x8, x25, x22
    1114:	cbnz	x8, 1210 <initializeProfileForContinuousMode+0x180>
    1118:	bl	bf8 <getCurFilenameLength>
    111c:	add	w8, w0, #0x1
    1120:	sxtw	x8, w8
    1124:	add	x8, x8, #0xf
    1128:	and	x8, x8, #0xfffffffffffffff0
    112c:	mov	x9, sp
    1130:	sub	x0, x9, x8
    1134:	mov	sp, x0
    1138:	mov	w1, wzr
    113c:	bl	1e0 <getCurFilename>
    1140:	cbz	x0, 12f8 <initializeProfileForContinuousMode+0x268>
    1144:	mov	x26, x0
    1148:	str	wzr, [x29, #28]
    114c:	bl	18a4 <doMerging>
    1150:	cbz	w0, 11b8 <initializeProfileForContinuousMode+0x128>
    1154:	mov	x0, x26
    1158:	bl	0 <lprofOpenFileEx>
    115c:	cbz	x0, 12f0 <initializeProfileForContinuousMode+0x260>
    1160:	mov	w8, #0x1                   	// #1
    1164:	sub	x1, x29, #0x8
    1168:	mov	x22, x0
    116c:	str	w8, [x29, #28]
    1170:	bl	1494 <getProfileFileSizeForMerging>
    1174:	cmn	w0, #0x1
    1178:	b.eq	125c <initializeProfileForContinuousMode+0x1cc>  // b.none
    117c:	ldur	x25, [x29, #-8]
    1180:	cbz	x25, 124c <initializeProfileForContinuousMode+0x1bc>
    1184:	sub	x2, x29, #0x10
    1188:	mov	x0, x22
    118c:	mov	x1, x25
    1190:	bl	15d8 <mmapProfileForMerging>
    1194:	cmn	w0, #0x1
    1198:	b.eq	1234 <initializeProfileForContinuousMode+0x1a4>  // b.none
    119c:	ldur	x0, [x29, #-16]
    11a0:	mov	x1, x25
    11a4:	bl	0 <munmap>
    11a8:	cmn	w0, #0x1
    11ac:	b.eq	1234 <initializeProfileForContinuousMode+0x1a4>  // b.none
    11b0:	mov	w8, wzr
    11b4:	b	1244 <initializeProfileForContinuousMode+0x1b4>
    11b8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    11bc:	add	x1, x1, #0x0
    11c0:	mov	x0, x26
    11c4:	bl	0 <fopen>
    11c8:	cbz	x0, 12f0 <initializeProfileForContinuousMode+0x260>
    11cc:	mov	x22, x0
    11d0:	bl	0 <ftello>
    11d4:	sdiv	x8, x0, x25
    11d8:	mov	x27, x0
    11dc:	msub	x8, x8, x25, x0
    11e0:	cbnz	x8, 1324 <initializeProfileForContinuousMode+0x294>
    11e4:	mov	x0, x26
    11e8:	mov	x1, x22
    11ec:	bl	1418 <writeProfileWithFileObject>
    11f0:	cbnz	w0, 12f0 <initializeProfileForContinuousMode+0x260>
    11f4:	b	1274 <initializeProfileForContinuousMode+0x1e4>
    11f8:	adrp	x8, 0 <stderr>
    11fc:	ldr	x8, [x8]
    1200:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1204:	add	x1, x1, #0x0
    1208:	mov	x2, x19
    120c:	b	1224 <initializeProfileForContinuousMode+0x194>
    1210:	adrp	x8, 0 <stderr>
    1214:	ldr	x8, [x8]
    1218:	adrp	x1, 0 <__llvm_profile_set_file_object>
    121c:	add	x1, x1, #0x0
    1220:	mov	x2, x22
    1224:	ldr	x0, [x8]
    1228:	mov	w3, w25
    122c:	bl	0 <fprintf>
    1230:	b	12f8 <initializeProfileForContinuousMode+0x268>
    1234:	add	x0, x29, #0x1c
    1238:	mov	x1, x22
    123c:	bl	1580 <unlockProfile>
    1240:	mov	w8, #0x1                   	// #1
    1244:	cbnz	w8, 126c <initializeProfileForContinuousMode+0x1dc>
    1248:	b	1318 <initializeProfileForContinuousMode+0x288>
    124c:	mov	x0, x26
    1250:	mov	x1, x22
    1254:	bl	1418 <writeProfileWithFileObject>
    1258:	cbz	w0, 1318 <initializeProfileForContinuousMode+0x288>
    125c:	add	x0, x29, #0x1c
    1260:	mov	x1, x22
    1264:	bl	1580 <unlockProfile>
    1268:	mov	w8, #0x1                   	// #1
    126c:	cbnz	w8, 12f0 <initializeProfileForContinuousMode+0x260>
    1270:	mov	x27, xzr
    1274:	sub	x25, x21, x19
    1278:	mov	x0, x22
    127c:	sub	x23, x24, x23
    1280:	asr	x24, x25, #3
    1284:	bl	0 <fileno>
    1288:	mov	w21, w0
    128c:	sub	x3, x29, #0x8
    1290:	sub	x4, x29, #0x10
    1294:	sub	x5, x29, #0x18
    1298:	mov	x0, x20
    129c:	mov	x1, x24
    12a0:	mov	x2, x23
    12a4:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
    12a8:	ldp	x8, x9, [x29, #-16]
    12ac:	mov	w10, #0x30                  	// #48
    12b0:	madd	x10, x20, x10, x27
    12b4:	mov	w2, #0x3                   	// #3
    12b8:	add	x23, x8, x25
    12bc:	add	x8, x10, x9
    12c0:	add	x20, x8, #0x50
    12c4:	mov	w3, #0x11                  	// #17
    12c8:	mov	x0, x19
    12cc:	mov	x1, x23
    12d0:	mov	w4, w21
    12d4:	mov	x5, x20
    12d8:	bl	0 <mmap>
    12dc:	cmp	x19, x0
    12e0:	b.ne	1348 <initializeProfileForContinuousMode+0x2b8>  // b.any
    12e4:	add	x0, x29, #0x1c
    12e8:	mov	x1, x22
    12ec:	bl	1580 <unlockProfile>
    12f0:	add	x0, x29, #0x1c
    12f4:	bl	13e0 <assertIsZero>
    12f8:	mov	sp, x29
    12fc:	ldp	x20, x19, [sp, #80]
    1300:	ldp	x22, x21, [sp, #64]
    1304:	ldp	x24, x23, [sp, #48]
    1308:	ldp	x26, x25, [sp, #32]
    130c:	ldr	x27, [sp, #16]
    1310:	ldp	x29, x30, [sp], #96
    1314:	ret
    1318:	mov	w8, wzr
    131c:	cbnz	w8, 12f0 <initializeProfileForContinuousMode+0x260>
    1320:	b	1270 <initializeProfileForContinuousMode+0x1e0>
    1324:	adrp	x8, 0 <stderr>
    1328:	ldr	x8, [x8]
    132c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1330:	add	x1, x1, #0x0
    1334:	mov	x2, x27
    1338:	ldr	x0, [x8]
    133c:	mov	w3, w25
    1340:	bl	0 <fprintf>
    1344:	b	12f0 <initializeProfileForContinuousMode+0x260>
    1348:	adrp	x8, 0 <stderr>
    134c:	ldr	x8, [x8]
    1350:	ldr	x24, [x8]
    1354:	bl	0 <__errno_location>
    1358:	ldr	w0, [x0]
    135c:	bl	0 <strerror>
    1360:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1364:	mov	x2, x0
    1368:	add	x1, x1, #0x0
    136c:	mov	x0, x24
    1370:	mov	x3, x19
    1374:	mov	x4, x23
    1378:	mov	w5, w21
    137c:	mov	x6, x20
    1380:	bl	0 <fprintf>
    1384:	b	12e4 <initializeProfileForContinuousMode+0x254>

0000000000001388 <createProfileDir>:
    1388:	stp	x29, x30, [sp, #-32]!
    138c:	stp	x20, x19, [sp, #16]
    1390:	mov	x29, sp
    1394:	mov	x19, x0
    1398:	bl	0 <strlen>
    139c:	mov	x20, x0
    13a0:	mov	x0, x19
    13a4:	bl	0 <lprofFindFirstDirSeparator>
    13a8:	cbz	x0, 13d0 <createProfileDir+0x48>
    13ac:	add	x9, x20, #0x10
    13b0:	mov	x8, sp
    13b4:	and	x9, x9, #0xfffffffffffffff0
    13b8:	sub	x0, x8, x9
    13bc:	add	x2, x20, #0x1
    13c0:	mov	sp, x0
    13c4:	mov	x1, x19
    13c8:	bl	0 <strncpy>
    13cc:	bl	0 <__llvm_profile_recursive_mkdir>
    13d0:	mov	sp, x29
    13d4:	ldp	x20, x19, [sp, #16]
    13d8:	ldp	x29, x30, [sp], #32
    13dc:	ret

00000000000013e0 <assertIsZero>:
    13e0:	stp	x29, x30, [sp, #-16]!
    13e4:	mov	x29, sp
    13e8:	ldr	w2, [x0]
    13ec:	cbnz	w2, 13f8 <assertIsZero+0x18>
    13f0:	ldp	x29, x30, [sp], #16
    13f4:	ret
    13f8:	adrp	x8, 0 <stderr>
    13fc:	ldr	x8, [x8]
    1400:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1404:	add	x1, x1, #0x0
    1408:	ldr	x0, [x8]
    140c:	bl	0 <fprintf>
    1410:	ldp	x29, x30, [sp], #16
    1414:	ret

0000000000001418 <writeProfileWithFileObject>:
    1418:	stp	x29, x30, [sp, #-48]!
    141c:	str	x21, [sp, #16]
    1420:	stp	x20, x19, [sp, #32]
    1424:	mov	x29, sp
    1428:	mov	x20, x0
    142c:	mov	x0, x1
    1430:	bl	64 <setProfileFile>
    1434:	mov	x0, x20
    1438:	bl	774 <writeFile>
    143c:	mov	w19, w0
    1440:	cbnz	w0, 1460 <writeProfileWithFileObject+0x48>
    1444:	mov	x0, xzr
    1448:	bl	64 <setProfileFile>
    144c:	mov	w0, w19
    1450:	ldp	x20, x19, [sp, #32]
    1454:	ldr	x21, [sp, #16]
    1458:	ldp	x29, x30, [sp], #48
    145c:	ret
    1460:	adrp	x8, 0 <stderr>
    1464:	ldr	x8, [x8]
    1468:	ldr	x21, [x8]
    146c:	bl	0 <__errno_location>
    1470:	ldr	w0, [x0]
    1474:	bl	0 <strerror>
    1478:	adrp	x1, 0 <__llvm_profile_set_file_object>
    147c:	mov	x3, x0
    1480:	add	x1, x1, #0x0
    1484:	mov	x0, x21
    1488:	mov	x2, x20
    148c:	bl	0 <fprintf>
    1490:	b	1444 <writeProfileWithFileObject+0x2c>

0000000000001494 <getProfileFileSizeForMerging>:
    1494:	stp	x29, x30, [sp, #-32]!
    1498:	stp	x20, x19, [sp, #16]
    149c:	mov	x29, sp
    14a0:	mov	x19, x1
    14a4:	mov	w2, #0x2                   	// #2
    14a8:	mov	x1, xzr
    14ac:	mov	x20, x0
    14b0:	bl	0 <fseek>
    14b4:	cmn	w0, #0x1
    14b8:	b.eq	1500 <getProfileFileSizeForMerging+0x6c>  // b.none
    14bc:	mov	x0, x20
    14c0:	bl	0 <ftell>
    14c4:	str	x0, [x19]
    14c8:	mov	x0, x20
    14cc:	mov	x1, xzr
    14d0:	mov	w2, wzr
    14d4:	bl	0 <fseek>
    14d8:	cmn	w0, #0x1
    14dc:	b.eq	152c <getProfileFileSizeForMerging+0x98>  // b.none
    14e0:	ldr	x8, [x19]
    14e4:	sub	x8, x8, #0x1
    14e8:	cmp	x8, #0x4e
    14ec:	b.ls	1558 <getProfileFileSizeForMerging+0xc4>  // b.plast
    14f0:	mov	w0, wzr
    14f4:	ldp	x20, x19, [sp, #16]
    14f8:	ldp	x29, x30, [sp], #32
    14fc:	ret
    1500:	adrp	x8, 0 <stderr>
    1504:	ldr	x8, [x8]
    1508:	ldr	x19, [x8]
    150c:	bl	0 <__errno_location>
    1510:	ldr	w0, [x0]
    1514:	bl	0 <strerror>
    1518:	adrp	x1, 0 <__llvm_profile_set_file_object>
    151c:	mov	x2, x0
    1520:	add	x1, x1, #0x0
    1524:	mov	x0, x19
    1528:	b	1574 <getProfileFileSizeForMerging+0xe0>
    152c:	adrp	x8, 0 <stderr>
    1530:	ldr	x8, [x8]
    1534:	ldr	x19, [x8]
    1538:	bl	0 <__errno_location>
    153c:	ldr	w0, [x0]
    1540:	bl	0 <strerror>
    1544:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1548:	mov	x2, x0
    154c:	add	x1, x1, #0x0
    1550:	mov	x0, x19
    1554:	b	1574 <getProfileFileSizeForMerging+0xe0>
    1558:	adrp	x8, 0 <stderr>
    155c:	ldr	x8, [x8]
    1560:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1564:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1568:	add	x1, x1, #0x0
    156c:	ldr	x0, [x8]
    1570:	add	x2, x2, #0x0
    1574:	bl	0 <fprintf>
    1578:	mov	w0, #0xffffffff            	// #-1
    157c:	b	14f4 <getProfileFileSizeForMerging+0x60>

0000000000001580 <unlockProfile>:
    1580:	stp	x29, x30, [sp, #-32]!
    1584:	stp	x20, x19, [sp, #16]
    1588:	mov	x29, sp
    158c:	ldr	w8, [x0]
    1590:	mov	x19, x0
    1594:	mov	x20, x1
    1598:	cbz	w8, 15b4 <unlockProfile+0x34>
    159c:	mov	x0, x20
    15a0:	bl	0 <lprofUnlockFileHandle>
    15a4:	str	wzr, [x19]
    15a8:	ldp	x20, x19, [sp, #16]
    15ac:	ldp	x29, x30, [sp], #32
    15b0:	ret
    15b4:	adrp	x8, 0 <stderr>
    15b8:	ldr	x8, [x8]
    15bc:	adrp	x1, 0 <__llvm_profile_set_file_object>
    15c0:	adrp	x2, 0 <__llvm_profile_set_file_object>
    15c4:	add	x1, x1, #0x0
    15c8:	ldr	x0, [x8]
    15cc:	add	x2, x2, #0x0
    15d0:	bl	0 <fprintf>
    15d4:	b	159c <unlockProfile+0x1c>

00000000000015d8 <mmapProfileForMerging>:
    15d8:	stp	x29, x30, [sp, #-32]!
    15dc:	stp	x20, x19, [sp, #16]
    15e0:	mov	x29, sp
    15e4:	mov	x20, x2
    15e8:	mov	x19, x1
    15ec:	bl	0 <fileno>
    15f0:	mov	w4, w0
    15f4:	mov	w2, #0x1                   	// #1
    15f8:	mov	w3, #0x1                   	// #1
    15fc:	mov	x0, xzr
    1600:	mov	x1, x19
    1604:	mov	x5, xzr
    1608:	bl	0 <mmap>
    160c:	cmn	x0, #0x1
    1610:	str	x0, [x20]
    1614:	b.eq	1630 <mmapProfileForMerging+0x58>  // b.none
    1618:	mov	x1, x19
    161c:	bl	0 <__llvm_profile_check_compatibility>
    1620:	cbnz	w0, 165c <mmapProfileForMerging+0x84>
    1624:	ldp	x20, x19, [sp, #16]
    1628:	ldp	x29, x30, [sp], #32
    162c:	ret
    1630:	adrp	x8, 0 <stderr>
    1634:	ldr	x8, [x8]
    1638:	ldr	x19, [x8]
    163c:	bl	0 <__errno_location>
    1640:	ldr	w0, [x0]
    1644:	bl	0 <strerror>
    1648:	adrp	x1, 0 <__llvm_profile_set_file_object>
    164c:	mov	x2, x0
    1650:	add	x1, x1, #0x0
    1654:	mov	x0, x19
    1658:	b	1684 <mmapProfileForMerging+0xac>
    165c:	ldr	x0, [x20]
    1660:	mov	x1, x19
    1664:	bl	0 <munmap>
    1668:	adrp	x8, 0 <stderr>
    166c:	ldr	x8, [x8]
    1670:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1674:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1678:	add	x1, x1, #0x0
    167c:	ldr	x0, [x8]
    1680:	add	x2, x2, #0x0
    1684:	bl	0 <fprintf>
    1688:	mov	w0, #0xffffffff            	// #-1
    168c:	b	1624 <mmapProfileForMerging+0x4c>

0000000000001690 <openFileForMerging>:
    1690:	stp	x29, x30, [sp, #-48]!
    1694:	str	x21, [sp, #16]
    1698:	stp	x20, x19, [sp, #32]
    169c:	mov	x29, sp
    16a0:	mov	x21, x1
    16a4:	mov	x19, x0
    16a8:	bl	1898 <getProfileFile>
    16ac:	cbz	x0, 16c0 <openFileForMerging+0x30>
    16b0:	mov	x20, x0
    16b4:	bl	0 <lprofLockFileHandle>
    16b8:	cbnz	x20, 16d8 <openFileForMerging+0x48>
    16bc:	b	171c <openFileForMerging+0x8c>
    16c0:	mov	x0, x19
    16c4:	bl	1388 <createProfileDir>
    16c8:	mov	x0, x19
    16cc:	bl	0 <lprofOpenFileEx>
    16d0:	mov	x20, x0
    16d4:	cbz	x20, 171c <openFileForMerging+0x8c>
    16d8:	mov	x0, x20
    16dc:	mov	x1, x21
    16e0:	bl	17a4 <doProfileMerging>
    16e4:	cbnz	w0, 1730 <openFileForMerging+0xa0>
    16e8:	ldr	w8, [x21]
    16ec:	cbnz	w8, 1704 <openFileForMerging+0x74>
    16f0:	mov	x0, x20
    16f4:	bl	0 <fileno>
    16f8:	mov	x1, xzr
    16fc:	bl	0 <ftruncate>
    1700:	cbnz	w0, 1730 <openFileForMerging+0xa0>
    1704:	mov	x0, x20
    1708:	mov	x1, xzr
    170c:	mov	w2, wzr
    1710:	bl	0 <fseek>
    1714:	cmn	w0, #0x1
    1718:	b.eq	1730 <openFileForMerging+0xa0>  // b.none
    171c:	mov	x0, x20
    1720:	ldp	x20, x19, [sp, #32]
    1724:	ldr	x21, [sp, #16]
    1728:	ldp	x29, x30, [sp], #48
    172c:	ret
    1730:	adrp	x8, 0 <stderr>
    1734:	ldr	x8, [x8]
    1738:	ldr	x21, [x8]
    173c:	bl	0 <__errno_location>
    1740:	ldr	w0, [x0]
    1744:	bl	0 <strerror>
    1748:	adrp	x1, 0 <__llvm_profile_set_file_object>
    174c:	mov	x3, x0
    1750:	add	x1, x1, #0x0
    1754:	mov	x0, x21
    1758:	mov	x2, x19
    175c:	bl	0 <fprintf>
    1760:	mov	x0, x20
    1764:	bl	0 <fclose>
    1768:	mov	x20, xzr
    176c:	b	171c <openFileForMerging+0x8c>

0000000000001770 <getFileObject>:
    1770:	stp	x29, x30, [sp, #-32]!
    1774:	str	x19, [sp, #16]
    1778:	mov	x29, sp
    177c:	mov	x19, x0
    1780:	bl	1898 <getProfileFile>
    1784:	cbnz	x0, 1798 <getFileObject+0x28>
    1788:	adrp	x1, 0 <__llvm_profile_set_file_object>
    178c:	add	x1, x1, #0x0
    1790:	mov	x0, x19
    1794:	bl	0 <fopen>
    1798:	ldr	x19, [sp, #16]
    179c:	ldp	x29, x30, [sp], #32
    17a0:	ret

00000000000017a4 <doProfileMerging>:
    17a4:	sub	sp, sp, #0x40
    17a8:	stp	x29, x30, [sp, #16]
    17ac:	stp	x22, x21, [sp, #32]
    17b0:	stp	x20, x19, [sp, #48]
    17b4:	add	x29, sp, #0x10
    17b8:	mov	x19, x1
    17bc:	add	x1, sp, #0x8
    17c0:	mov	x21, x0
    17c4:	bl	1494 <getProfileFileSizeForMerging>
    17c8:	cmn	w0, #0x1
    17cc:	b.eq	183c <doProfileMerging+0x98>  // b.none
    17d0:	ldr	x20, [sp, #8]
    17d4:	cbz	x20, 1838 <doProfileMerging+0x94>
    17d8:	mov	x2, sp
    17dc:	mov	x0, x21
    17e0:	mov	x1, x20
    17e4:	bl	15d8 <mmapProfileForMerging>
    17e8:	cmn	w0, #0x1
    17ec:	b.eq	183c <doProfileMerging+0x98>  // b.none
    17f0:	ldr	x22, [sp]
    17f4:	mov	x1, x20
    17f8:	mov	x0, x22
    17fc:	bl	0 <__llvm_profile_merge_from_buffer>
    1800:	mov	x0, x21
    1804:	bl	0 <fileno>
    1808:	mov	w21, w0
    180c:	bl	0 <__llvm_profile_get_size_for_buffer>
    1810:	mov	x1, x0
    1814:	mov	w0, w21
    1818:	bl	0 <ftruncate>
    181c:	mov	x0, x22
    1820:	mov	x1, x20
    1824:	bl	0 <munmap>
    1828:	mov	w0, wzr
    182c:	mov	w8, #0x1                   	// #1
    1830:	str	w8, [x19]
    1834:	b	183c <doProfileMerging+0x98>
    1838:	mov	w0, wzr
    183c:	ldp	x20, x19, [sp, #48]
    1840:	ldp	x22, x21, [sp, #32]
    1844:	ldp	x29, x30, [sp, #16]
    1848:	add	sp, sp, #0x40
    184c:	ret

0000000000001850 <setupIOBuffer>:
    1850:	stp	x29, x30, [sp, #-16]!
    1854:	mov	x29, sp
    1858:	adrp	x0, 0 <__llvm_profile_set_file_object>
    185c:	add	x0, x0, #0x0
    1860:	bl	0 <getenv>
    1864:	cbz	x0, 1890 <setupIOBuffer+0x40>
    1868:	ldrb	w8, [x0]
    186c:	cbz	w8, 1890 <setupIOBuffer+0x40>
    1870:	bl	0 <atoi>
    1874:	adrp	x8, 0 <VPBufferSize>
    1878:	str	w0, [x8]
    187c:	mov	w0, w0
    1880:	mov	w1, #0x1                   	// #1
    1884:	bl	0 <calloc>
    1888:	adrp	x8, 0 <DynamicBufferIOBuffer>
    188c:	str	x0, [x8]
    1890:	ldp	x29, x30, [sp], #16
    1894:	ret

0000000000001898 <getProfileFile>:
    1898:	adrp	x8, 0 <__llvm_profile_set_file_object>
    189c:	ldr	x0, [x8]
    18a0:	ret

00000000000018a4 <doMerging>:
    18a4:	stp	x29, x30, [sp, #-16]!
    18a8:	mov	x29, sp
    18ac:	adrp	x8, 0 <__llvm_profile_set_file_object>
    18b0:	ldr	w8, [x8]
    18b4:	cbz	w8, 18c4 <doMerging+0x20>
    18b8:	mov	w0, #0x1                   	// #1
    18bc:	ldp	x29, x30, [sp], #16
    18c0:	ret
    18c4:	bl	18d8 <isProfileMergeRequested>
    18c8:	cmp	w0, #0x0
    18cc:	cset	w0, ne  // ne = any
    18d0:	ldp	x29, x30, [sp], #16
    18d4:	ret

00000000000018d8 <isProfileMergeRequested>:
    18d8:	adrp	x8, 0 <__llvm_profile_set_file_object>
    18dc:	ldr	w0, [x8]
    18e0:	ret

00000000000018e4 <orderFileWriter>:
    18e4:	stp	x29, x30, [sp, #-16]!
    18e8:	mov	x29, sp
    18ec:	mov	x8, x1
    18f0:	mov	x3, x0
    18f4:	mov	w1, #0x4                   	// #4
    18f8:	mov	w2, #0x20000               	// #131072
    18fc:	mov	x0, x8
    1900:	bl	0 <fwrite>
    1904:	cmp	x0, #0x20, lsl #12
    1908:	cset	w0, ne  // ne = any
    190c:	ldp	x29, x30, [sp], #16
    1910:	ret

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	bl	0 <__llvm_profile_end_counters>
  14:	mov	x19, x0
  18:	bl	0 <__llvm_profile_begin_counters>
  1c:	sub	x21, x19, x0
  20:	bl	0 <__llvm_profile_begin_data>
  24:	mov	x19, x0
  28:	bl	0 <__llvm_profile_end_data>
  2c:	mov	x1, x0
  30:	mov	x0, x19
  34:	bl	0 <__llvm_profile_get_data_size>
  38:	mov	x19, x0
  3c:	bl	0 <__llvm_profile_end_names>
  40:	mov	x20, x0
  44:	bl	0 <__llvm_profile_begin_names>
  48:	sub	w22, w20, w0
  4c:	bl	0 <__llvm_profile_end_vnodes>
  50:	mov	x20, x0
  54:	bl	0 <__llvm_profile_begin_vnodes>
  58:	sub	x8, x20, x0
  5c:	lsr	x20, x8, #3
  60:	bl	0 <__llvm_profile_begin_data>
  64:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  68:	movk	x11, #0xac00
  6c:	lsl	x8, x22, #40
  70:	lsl	x9, x21, #27
  74:	lsl	x10, x19, #20
  78:	mul	x11, x20, x11
  7c:	cbz	x19, 88 <lprofGetLoadModuleSignature+0x88>
  80:	ldr	x12, [x0]
  84:	b	8c <lprofGetLoadModuleSignature+0x8c>
  88:	mov	x12, xzr
  8c:	add	x9, x10, x9
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	add	x8, x9, x8
  9c:	add	x8, x8, x11
  a0:	add	x0, x8, x12
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <__llvm_profile_check_compatibility>:
  ac:	stp	x29, x30, [sp, #-64]!
  b0:	str	x23, [sp, #16]
  b4:	stp	x22, x21, [sp, #32]
  b8:	stp	x20, x19, [sp, #48]
  bc:	mov	x29, sp
  c0:	cmp	x1, #0x50
  c4:	b.cc	180 <__llvm_profile_check_compatibility+0xd4>  // b.lo, b.ul, b.last
  c8:	ldr	x22, [x0, #16]
  cc:	ldr	x21, [x0]
  d0:	mov	x20, x1
  d4:	mov	x19, x0
  d8:	bl	0 <__llvm_profile_get_magic>
  dc:	cmp	x21, x0
  e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  e4:	ldr	x21, [x19, #8]
  e8:	bl	0 <__llvm_profile_get_version>
  ec:	cmp	x21, x0
  f0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  f4:	ldr	x23, [x19, #16]
  f8:	bl	0 <__llvm_profile_begin_data>
  fc:	mov	x21, x0
 100:	bl	0 <__llvm_profile_end_data>
 104:	mov	x1, x0
 108:	mov	x0, x21
 10c:	bl	0 <__llvm_profile_get_data_size>
 110:	cmp	x23, x0
 114:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 118:	ldr	x23, [x19, #32]
 11c:	bl	0 <__llvm_profile_end_counters>
 120:	mov	x21, x0
 124:	bl	0 <__llvm_profile_begin_counters>
 128:	sub	x8, x21, x0
 12c:	cmp	x23, x8, asr #3
 130:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 134:	ldr	x23, [x19, #48]
 138:	bl	0 <__llvm_profile_end_names>
 13c:	mov	x21, x0
 140:	bl	0 <__llvm_profile_begin_names>
 144:	sub	x8, x21, x0
 148:	cmp	x23, x8
 14c:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 150:	ldr	x8, [x19, #72]
 154:	cmp	x8, #0x1
 158:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 15c:	ldr	x8, [x19, #16]
 160:	ldr	x9, [x19, #48]
 164:	ldr	x10, [x19, #32]
 168:	mov	w11, #0x30                  	// #48
 16c:	madd	x8, x8, x11, x9
 170:	add	x8, x8, x10
 174:	add	x8, x8, #0x50
 178:	cmp	x8, x20
 17c:	b.ls	198 <__llvm_profile_check_compatibility+0xec>  // b.plast
 180:	mov	w0, #0x1                   	// #1
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	add	x19, x19, #0x50
 19c:	mov	w8, #0x30                  	// #48
 1a0:	madd	x20, x22, x8, x19
 1a4:	bl	0 <__llvm_profile_begin_data>
 1a8:	cmp	x20, x19
 1ac:	b.ls	1fc <__llvm_profile_check_compatibility+0x150>  // b.plast
 1b0:	mov	x8, x0
 1b4:	ldr	x9, [x19]
 1b8:	ldr	x10, [x8]
 1bc:	cmp	x9, x10
 1c0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1c4:	ldr	x9, [x19, #8]
 1c8:	ldr	x10, [x8, #8]
 1cc:	cmp	x9, x10
 1d0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1d4:	ldr	w9, [x19, #40]
 1d8:	ldr	w10, [x8, #40]
 1dc:	cmp	w9, w10
 1e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1e4:	add	x19, x19, #0x30
 1e8:	mov	w0, wzr
 1ec:	cmp	x19, x20
 1f0:	add	x8, x8, #0x30
 1f4:	b.cc	1b4 <__llvm_profile_check_compatibility+0x108>  // b.lo, b.ul, b.last
 1f8:	b	184 <__llvm_profile_check_compatibility+0xd8>
 1fc:	mov	w0, wzr
 200:	b	184 <__llvm_profile_check_compatibility+0xd8>

0000000000000204 <__llvm_profile_merge_from_buffer>:
 204:	stp	x29, x30, [sp, #-80]!
 208:	stp	x26, x25, [sp, #16]
 20c:	stp	x24, x23, [sp, #32]
 210:	stp	x22, x21, [sp, #48]
 214:	stp	x20, x19, [sp, #64]
 218:	mov	x29, sp
 21c:	ldr	x21, [x0, #48]
 220:	ldr	x26, [x0, #16]
 224:	ldr	x25, [x0, #32]
 228:	mov	x19, x0
 22c:	add	x23, x0, #0x50
 230:	mov	w8, #0x30                  	// #48
 234:	mov	x0, x21
 238:	madd	x24, x26, x8, x23
 23c:	bl	0 <__llvm_profile_get_num_padding_bytes>
 240:	mov	w22, w0
 244:	bl	0 <__llvm_profile_begin_data>
 248:	cmp	x24, x23
 24c:	b.ls	308 <__llvm_profile_merge_from_buffer+0x104>  // b.plast
 250:	add	x8, x24, x25, lsl #3
 254:	mov	w9, #0x30                  	// #48
 258:	add	x8, x8, x21
 25c:	madd	x9, x26, x9, x19
 260:	mov	x20, x0
 264:	add	x25, x19, #0x7c
 268:	add	x21, x8, w22, uxtb
 26c:	add	x22, x9, #0x50
 270:	adrp	x26, 8 <lprofGetLoadModuleSignature+0x8>
 274:	b	28c <__llvm_profile_merge_from_buffer+0x88>
 278:	add	x23, x23, #0x30
 27c:	add	x20, x20, #0x30
 280:	cmp	x23, x24
 284:	add	x25, x25, #0x30
 288:	b.cs	308 <__llvm_profile_merge_from_buffer+0x104>  // b.hs, b.nlast
 28c:	ldr	w8, [x23, #40]
 290:	cbz	w8, 2c4 <__llvm_profile_merge_from_buffer+0xc0>
 294:	ldr	x10, [x23, #16]
 298:	ldr	x11, [x19, #56]
 29c:	ldr	x9, [x20, #16]
 2a0:	sub	x10, x10, x11
 2a4:	lsr	x10, x10, #3
 2a8:	add	x10, x22, x10, lsl #3
 2ac:	ldr	x11, [x10], #8
 2b0:	ldr	x12, [x9]
 2b4:	subs	x8, x8, #0x1
 2b8:	add	x11, x12, x11
 2bc:	str	x11, [x9], #8
 2c0:	b.ne	2ac <__llvm_profile_merge_from_buffer+0xa8>  // b.any
 2c4:	ldr	x8, [x26]
 2c8:	cbz	x8, 278 <__llvm_profile_merge_from_buffer+0x74>
 2cc:	mov	x10, xzr
 2d0:	mov	w9, wzr
 2d4:	ldrh	w11, [x25, x10]
 2d8:	add	x10, x10, #0x2
 2dc:	cmp	w11, #0x0
 2e0:	cinc	w9, w9, ne  // ne = any
 2e4:	cmp	x10, #0x4
 2e8:	b.ne	2d4 <__llvm_profile_merge_from_buffer+0xd0>  // b.any
 2ec:	cbz	w9, 278 <__llvm_profile_merge_from_buffer+0x74>
 2f0:	mov	x0, x21
 2f4:	mov	x1, x20
 2f8:	blr	x8
 2fc:	ldr	w8, [x21]
 300:	add	x21, x21, x8
 304:	b	278 <__llvm_profile_merge_from_buffer+0x74>
 308:	ldp	x20, x19, [sp, #64]
 30c:	ldp	x22, x21, [sp, #48]
 310:	ldp	x24, x23, [sp, #32]
 314:	ldp	x26, x25, [sp, #16]
 318:	ldp	x29, x30, [sp], #80
 31c:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	bl	0 <getFirstValueProfRecord>
  28:	ldr	w8, [x20, #4]
  2c:	cbz	w8, c0 <lprofMergeValueProfData+0xc0>
  30:	mov	x21, x0
  34:	mov	w24, wzr
  38:	mov	w22, wzr
  3c:	b	5c <lprofMergeValueProfData+0x5c>
  40:	mov	x0, x21
  44:	bl	0 <getValueProfRecordNext>
  48:	ldr	w8, [x20, #4]
  4c:	add	w24, w24, #0x1
  50:	mov	x21, x0
  54:	cmp	w24, w8
  58:	b.cs	c0 <lprofMergeValueProfData+0xc0>  // b.hs, b.nlast
  5c:	mov	x0, x21
  60:	bl	0 <getValueProfRecordValueData>
  64:	ldr	w8, [x21, #4]
  68:	cbz	w8, 40 <lprofMergeValueProfData+0x40>
  6c:	mov	x23, x0
  70:	mov	x25, xzr
  74:	mov	w26, wzr
  78:	b	90 <lprofMergeValueProfData+0x90>
  7c:	ldr	w8, [x21, #4]
  80:	add	x25, x25, #0x1
  84:	add	w22, w22, #0x1
  88:	cmp	x25, x8
  8c:	b.cs	40 <lprofMergeValueProfData+0x40>  // b.hs, b.nlast
  90:	add	x8, x21, x25
  94:	ldrb	w27, [x8, #8]
  98:	cbz	w27, 7c <lprofMergeValueProfData+0x7c>
  9c:	add	x8, x23, w26, uxtw #4
  a0:	ldp	x0, x3, [x8]
  a4:	mov	x1, x19
  a8:	mov	w2, w22
  ac:	bl	0 <__llvm_profile_instrument_target_value>
  b0:	subs	w27, w27, #0x1
  b4:	add	w26, w26, #0x1
  b8:	b.ne	9c <lprofMergeValueProfData+0x9c>  // b.any
  bc:	b	7c <lprofMergeValueProfData+0x7c>
  c0:	ldp	x20, x19, [sp, #80]
  c4:	ldp	x22, x21, [sp, #64]
  c8:	ldp	x24, x23, [sp, #48]
  cc:	ldp	x26, x25, [sp, #32]
  d0:	ldr	x27, [sp, #16]
  d4:	ldp	x29, x30, [sp], #96
  d8:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	w2, 5c <lprofBufferWriter+0x5c>
  14:	mov	x19, x0
  18:	mov	w21, w2
  1c:	add	x22, x1, #0x8
  20:	b	3c <lprofBufferWriter+0x3c>
  24:	ldr	x8, [x19, #8]
  28:	subs	x21, x21, #0x1
  2c:	add	x22, x22, #0x20
  30:	add	x8, x8, x20
  34:	str	x8, [x19, #8]
  38:	b.eq	5c <lprofBufferWriter+0x5c>  // b.none
  3c:	ldp	x8, x9, [x22]
  40:	ldur	x1, [x22, #-8]
  44:	mul	x20, x9, x8
  48:	cbz	x1, 24 <lprofBufferWriter+0x24>
  4c:	ldr	x0, [x19, #8]
  50:	mov	x2, x20
  54:	bl	0 <memcpy>
  58:	b	24 <lprofBufferWriter+0x24>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	mov	w0, wzr
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

0000000000000070 <lprofCreateBufferIO>:
  70:	stp	x29, x30, [sp, #-16]!
  74:	mov	x29, sp
  78:	adrp	x8, 8 <lprofBufferWriter+0x8>
  7c:	adrp	x9, 10 <lprofBufferWriter+0x10>
  80:	ldr	x8, [x8]
  84:	ldr	w9, [x9]
  88:	adrp	x10, 0 <lprofBufferWriter>
  8c:	add	x10, x10, #0x0
  90:	mov	w11, #0x2000                	// #8192
  94:	cmp	x8, #0x0
  98:	csel	x1, x10, x8, eq  // eq = none
  9c:	csel	w2, w11, w9, eq  // eq = none
  a0:	bl	b4 <llvmInitBufferIO>
  a4:	adrp	x0, 0 <lprofBufferWriter>
  a8:	add	x0, x0, #0x0
  ac:	ldp	x29, x30, [sp], #16
  b0:	ret

00000000000000b4 <llvmInitBufferIO>:
  b4:	adrp	x8, 0 <lprofBufferWriter>
  b8:	add	x8, x8, #0x0
  bc:	str	x0, [x8]
  c0:	str	wzr, [x8, #8]
  c4:	str	x1, [x8, #16]
  c8:	stp	w2, wzr, [x8, #24]
  cc:	ret

00000000000000d0 <lprofDeleteBufferIO>:
  d0:	stp	x29, x30, [sp, #-32]!
  d4:	stp	x20, x19, [sp, #16]
  d8:	mov	x29, sp
  dc:	ldr	w8, [x0, #8]
  e0:	adrp	x19, 0 <lprofBufferWriter>
  e4:	cbz	w8, f4 <lprofDeleteBufferIO+0x24>
  e8:	ldr	x8, [x19]
  ec:	ldr	x0, [x0]
  f0:	blr	x8
  f4:	adrp	x20, 8 <lprofBufferWriter+0x8>
  f8:	ldr	x0, [x20]
  fc:	cbz	x0, 114 <lprofDeleteBufferIO+0x44>
 100:	ldr	x8, [x19]
 104:	blr	x8
 108:	adrp	x8, 10 <lprofBufferWriter+0x10>
 10c:	str	xzr, [x20]
 110:	str	wzr, [x8]
 114:	ldp	x20, x19, [sp, #16]
 118:	ldp	x29, x30, [sp], #32
 11c:	ret

0000000000000120 <lprofBufferIOWrite>:
 120:	sub	sp, sp, #0x60
 124:	stp	x29, x30, [sp, #48]
 128:	str	x21, [sp, #64]
 12c:	stp	x20, x19, [sp, #80]
 130:	add	x29, sp, #0x30
 134:	ldp	w9, w8, [x0, #24]
 138:	mov	x19, x0
 13c:	mov	w20, w2
 140:	mov	x21, x1
 144:	add	w8, w8, w2
 148:	cmp	w8, w9
 14c:	b.ls	15c <lprofBufferIOWrite+0x3c>  // b.plast
 150:	mov	x0, x19
 154:	bl	1e8 <lprofBufferIOFlush>
 158:	cbnz	w0, 194 <lprofBufferIOWrite+0x74>
 15c:	mov	w8, #0x1                   	// #1
 160:	mov	w9, w20
 164:	stp	x21, x8, [sp, #16]
 168:	str	x9, [sp, #32]
 16c:	str	wzr, [sp, #40]
 170:	ldr	w8, [x19, #24]
 174:	cmp	w8, w20
 178:	b.cs	19c <lprofBufferIOWrite+0x7c>  // b.hs, b.nlast
 17c:	ldr	x0, [x19]
 180:	add	x1, sp, #0x10
 184:	mov	w2, #0x1                   	// #1
 188:	ldr	x8, [x0]
 18c:	blr	x8
 190:	cbz	w0, 1d0 <lprofBufferIOWrite+0xb0>
 194:	mov	w0, #0xffffffff            	// #-1
 198:	b	1d4 <lprofBufferIOWrite+0xb4>
 19c:	ldr	x8, [x19, #16]
 1a0:	ldr	w9, [x19, #28]
 1a4:	mov	x0, sp
 1a8:	add	x1, x8, x9
 1ac:	bl	0 <initBufferWriter>
 1b0:	mov	x0, sp
 1b4:	add	x1, sp, #0x10
 1b8:	mov	w2, #0x1                   	// #1
 1bc:	bl	0 <lprofBufferWriter>
 1c0:	ldr	w8, [sp, #8]
 1c4:	ldr	w9, [x19, #16]
 1c8:	sub	w8, w8, w9
 1cc:	str	w8, [x19, #28]
 1d0:	mov	w0, wzr
 1d4:	ldp	x20, x19, [sp, #80]
 1d8:	ldr	x21, [sp, #64]
 1dc:	ldp	x29, x30, [sp, #48]
 1e0:	add	sp, sp, #0x60
 1e4:	ret

00000000000001e8 <lprofBufferIOFlush>:
 1e8:	sub	sp, sp, #0x40
 1ec:	stp	x29, x30, [sp, #32]
 1f0:	str	x19, [sp, #48]
 1f4:	add	x29, sp, #0x20
 1f8:	ldr	w8, [x0, #28]
 1fc:	cbz	w8, 238 <lprofBufferIOFlush+0x50>
 200:	ldr	x9, [x0, #16]
 204:	mov	w10, #0x1                   	// #1
 208:	stp	x10, x8, [sp, #8]
 20c:	str	wzr, [sp, #24]
 210:	str	x9, [sp]
 214:	mov	x19, x0
 218:	ldr	x0, [x0]
 21c:	mov	x1, sp
 220:	mov	w2, #0x1                   	// #1
 224:	ldr	x8, [x0]
 228:	blr	x8
 22c:	cbz	w0, 240 <lprofBufferIOFlush+0x58>
 230:	mov	w0, #0xffffffff            	// #-1
 234:	b	244 <lprofBufferIOFlush+0x5c>
 238:	mov	w0, wzr
 23c:	b	244 <lprofBufferIOFlush+0x5c>
 240:	str	wzr, [x19, #28]
 244:	ldr	x19, [sp, #48]
 248:	ldp	x29, x30, [sp, #32]
 24c:	add	sp, sp, #0x40
 250:	ret

0000000000000254 <lprofWriteData>:
 254:	sub	sp, sp, #0x60
 258:	stp	x29, x30, [sp, #16]
 25c:	stp	x26, x25, [sp, #32]
 260:	stp	x24, x23, [sp, #48]
 264:	stp	x22, x21, [sp, #64]
 268:	stp	x20, x19, [sp, #80]
 26c:	add	x29, sp, #0x10
 270:	mov	w19, w2
 274:	mov	x20, x1
 278:	mov	x21, x0
 27c:	bl	0 <__llvm_profile_begin_data>
 280:	mov	x22, x0
 284:	bl	0 <__llvm_profile_end_data>
 288:	mov	x23, x0
 28c:	bl	0 <__llvm_profile_begin_counters>
 290:	mov	x24, x0
 294:	bl	0 <__llvm_profile_end_counters>
 298:	mov	x25, x0
 29c:	bl	0 <__llvm_profile_begin_names>
 2a0:	mov	x26, x0
 2a4:	bl	0 <__llvm_profile_end_names>
 2a8:	mov	x7, x0
 2ac:	mov	x0, x21
 2b0:	mov	x1, x22
 2b4:	mov	x2, x23
 2b8:	mov	x3, x24
 2bc:	mov	x4, x25
 2c0:	mov	x5, x20
 2c4:	mov	x6, x26
 2c8:	str	w19, [sp]
 2cc:	bl	2ec <lprofWriteDataImpl>
 2d0:	ldp	x20, x19, [sp, #80]
 2d4:	ldp	x22, x21, [sp, #64]
 2d8:	ldp	x24, x23, [sp, #48]
 2dc:	ldp	x26, x25, [sp, #32]
 2e0:	ldp	x29, x30, [sp, #16]
 2e4:	add	sp, sp, #0x60
 2e8:	ret

00000000000002ec <lprofWriteDataImpl>:
 2ec:	sub	sp, sp, #0x1b0
 2f0:	stp	x29, x30, [sp, #336]
 2f4:	stp	x28, x27, [sp, #352]
 2f8:	stp	x26, x25, [sp, #368]
 2fc:	stp	x24, x23, [sp, #384]
 300:	stp	x22, x21, [sp, #400]
 304:	stp	x20, x19, [sp, #416]
 308:	add	x29, sp, #0x150
 30c:	mov	x21, x1
 310:	mov	x22, x0
 314:	mov	x0, x1
 318:	mov	x1, x2
 31c:	mov	x26, x7
 320:	mov	x23, x6
 324:	mov	x19, x5
 328:	mov	x25, x4
 32c:	mov	x24, x3
 330:	mov	x20, x2
 334:	bl	0 <__llvm_profile_get_data_size>
 338:	cbz	x0, 444 <lprofWriteDataImpl+0x158>
 33c:	ldr	w28, [x29, #96]
 340:	sub	x8, x25, x24
 344:	asr	x25, x8, #3
 348:	sub	x26, x26, x23
 34c:	sub	x3, x29, #0x60
 350:	sub	x4, x29, #0x68
 354:	sub	x5, x29, #0x70
 358:	mov	x1, x25
 35c:	mov	x2, x26
 360:	mov	x27, x0
 364:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 368:	bl	0 <__llvm_profile_get_magic>
 36c:	stur	x0, [x29, #-88]
 370:	bl	0 <__llvm_profile_get_version>
 374:	sub	x11, x29, #0x58
 378:	mov	w12, #0x50                  	// #80
 37c:	ldp	x9, x8, [x29, #-104]
 380:	stp	x11, x12, [sp]
 384:	ldur	x11, [x29, #-112]
 388:	cmp	w28, #0x0
 38c:	mov	w10, #0x1                   	// #1
 390:	mov	w13, #0x30                  	// #48
 394:	mov	w14, #0x8                   	// #8
 398:	csel	x12, x23, xzr, eq  // eq = none
 39c:	stp	x0, x27, [x29, #-80]
 3a0:	stp	x24, x23, [x29, #-32]
 3a4:	str	wzr, [sp, #24]
 3a8:	str	wzr, [sp, #56]
 3ac:	stp	x14, x25, [sp, #104]
 3b0:	str	wzr, [sp, #120]
 3b4:	stp	x10, x26, [sp, #168]
 3b8:	str	wzr, [sp, #184]
 3bc:	stur	x10, [x29, #-16]
 3c0:	str	x10, [sp, #16]
 3c4:	str	x21, [sp, #32]
 3c8:	stp	x13, x27, [sp, #40]
 3cc:	stp	xzr, x10, [sp, #64]
 3d0:	str	w10, [sp, #88]
 3d4:	str	x24, [sp, #96]
 3d8:	stp	xzr, x10, [sp, #128]
 3dc:	str	w10, [sp, #152]
 3e0:	stp	xzr, x10, [sp, #192]
 3e4:	str	x12, [sp, #160]
 3e8:	stp	x8, x25, [x29, #-64]
 3ec:	stp	x9, x26, [x29, #-48]
 3f0:	str	x8, [sp, #80]
 3f4:	str	x9, [sp, #144]
 3f8:	str	x11, [sp, #208]
 3fc:	str	w10, [sp, #216]
 400:	ldr	x8, [x22]
 404:	mov	x1, sp
 408:	mov	w2, #0x7                   	// #7
 40c:	mov	x0, x22
 410:	blr	x8
 414:	cbz	w0, 420 <lprofWriteDataImpl+0x134>
 418:	mov	w0, #0xffffffff            	// #-1
 41c:	b	444 <lprofWriteDataImpl+0x158>
 420:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 424:	cbz	w0, 430 <lprofWriteDataImpl+0x144>
 428:	mov	w0, wzr
 42c:	b	444 <lprofWriteDataImpl+0x158>
 430:	mov	x0, x22
 434:	mov	x1, x19
 438:	mov	x2, x21
 43c:	mov	x3, x20
 440:	bl	464 <writeValueProfData>
 444:	ldp	x20, x19, [sp, #416]
 448:	ldp	x22, x21, [sp, #400]
 44c:	ldp	x24, x23, [sp, #384]
 450:	ldp	x26, x25, [sp, #368]
 454:	ldp	x28, x27, [sp, #352]
 458:	ldp	x29, x30, [sp, #336]
 45c:	add	sp, sp, #0x1b0
 460:	ret

0000000000000464 <writeValueProfData>:
 464:	stp	x29, x30, [sp, #-48]!
 468:	str	x21, [sp, #16]
 46c:	stp	x20, x19, [sp, #32]
 470:	mov	x29, sp
 474:	cbz	x1, 4d0 <writeValueProfData+0x6c>
 478:	mov	x19, x3
 47c:	mov	x20, x2
 480:	mov	x21, x1
 484:	bl	70 <lprofCreateBufferIO>
 488:	cmp	x20, x19
 48c:	b.cs	4ac <writeValueProfData+0x48>  // b.hs, b.nlast
 490:	mov	x0, x21
 494:	mov	x1, x20
 498:	bl	4e4 <writeOneValueProfData>
 49c:	cbnz	w0, 4bc <writeValueProfData+0x58>
 4a0:	add	x20, x20, #0x30
 4a4:	cmp	x20, x19
 4a8:	b.cc	490 <writeValueProfData+0x2c>  // b.lo, b.ul, b.last
 4ac:	adrp	x0, 0 <lprofBufferWriter>
 4b0:	add	x0, x0, #0x0
 4b4:	bl	1e8 <lprofBufferIOFlush>
 4b8:	cbz	w0, 4c4 <writeValueProfData+0x60>
 4bc:	mov	w0, #0xffffffff            	// #-1
 4c0:	b	4d4 <writeValueProfData+0x70>
 4c4:	adrp	x0, 0 <lprofBufferWriter>
 4c8:	add	x0, x0, #0x0
 4cc:	bl	d0 <lprofDeleteBufferIO>
 4d0:	mov	w0, wzr
 4d4:	ldp	x20, x19, [sp, #32]
 4d8:	ldr	x21, [sp, #16]
 4dc:	ldp	x29, x30, [sp], #48
 4e0:	ret

00000000000004e4 <writeOneValueProfData>:
 4e4:	stp	x29, x30, [sp, #-96]!
 4e8:	stp	x28, x27, [sp, #16]
 4ec:	stp	x26, x25, [sp, #32]
 4f0:	stp	x24, x23, [sp, #48]
 4f4:	stp	x22, x21, [sp, #64]
 4f8:	stp	x20, x19, [sp, #80]
 4fc:	mov	x29, sp
 500:	sub	sp, sp, #0x30
 504:	mov	x19, x1
 508:	mov	x20, x0
 50c:	mov	x21, xzr
 510:	sub	x22, x29, #0x18
 514:	b	550 <writeOneValueProfData+0x6c>
 518:	ldr	x8, [x20, #8]
 51c:	blr	x8
 520:	sub	w2, w0, #0x8
 524:	add	x8, x2, #0xf
 528:	and	x8, x8, #0x1fffffff0
 52c:	mov	x9, sp
 530:	sub	x0, x9, x8
 534:	mov	sp, x0
 538:	mov	w1, wzr
 53c:	str	x0, [x22, x21, lsl #3]
 540:	bl	0 <memset>
 544:	add	x21, x21, #0x1
 548:	cmp	x21, #0x2
 54c:	b.eq	564 <writeOneValueProfData+0x80>  // b.none
 550:	add	x8, x19, x21, lsl #1
 554:	ldrh	w0, [x8, #44]
 558:	cbnz	w0, 518 <writeOneValueProfData+0x34>
 55c:	str	xzr, [x22, x21, lsl #3]
 560:	b	544 <writeOneValueProfData+0x60>
 564:	ldr	x8, [x20]
 568:	sub	x1, x29, #0x18
 56c:	mov	x0, x19
 570:	blr	x8
 574:	cbz	w0, 5c0 <writeOneValueProfData+0xdc>
 578:	ldr	x8, [x20, #32]
 57c:	mov	w21, w0
 580:	blr	x8
 584:	stp	w0, w21, [x29, #-8]
 588:	adrp	x0, 0 <lprofBufferWriter>
 58c:	add	x0, x0, #0x0
 590:	sub	x1, x29, #0x8
 594:	mov	w2, #0x8                   	// #8
 598:	sub	x21, x29, #0x8
 59c:	bl	120 <lprofBufferIOWrite>
 5a0:	cbnz	w0, 5bc <writeOneValueProfData+0xd8>
 5a4:	ldr	x8, [x20, #16]
 5a8:	sub	x0, x29, #0x8
 5ac:	blr	x8
 5b0:	add	x8, x21, #0x8
 5b4:	cmp	x0, x8
 5b8:	b.eq	5e0 <writeOneValueProfData+0xfc>  // b.none
 5bc:	mov	w0, #0xffffffff            	// #-1
 5c0:	mov	sp, x29
 5c4:	ldp	x20, x19, [sp, #80]
 5c8:	ldp	x22, x21, [sp, #64]
 5cc:	ldp	x24, x23, [sp, #48]
 5d0:	ldp	x26, x25, [sp, #32]
 5d4:	ldp	x28, x27, [sp, #16]
 5d8:	ldp	x29, x30, [sp], #96
 5dc:	ret
 5e0:	adrp	x22, 0 <lprofBufferWriter>
 5e4:	adrp	x23, 0 <lprofBufferWriter>
 5e8:	mov	x21, xzr
 5ec:	add	x22, x22, #0x0
 5f0:	add	x23, x23, #0x0
 5f4:	b	604 <writeOneValueProfData+0x120>
 5f8:	add	x21, x21, #0x1
 5fc:	cmp	x21, #0x2
 600:	b.eq	720 <writeOneValueProfData+0x23c>  // b.none
 604:	add	x28, x19, x21, lsl #1
 608:	ldrh	w8, [x28, #44]!
 60c:	cbz	w8, 654 <writeOneValueProfData+0x170>
 610:	sub	x1, x29, #0x28
 614:	mov	w2, #0x8                   	// #8
 618:	mov	x0, x22
 61c:	stp	w21, w8, [x29, #-40]
 620:	bl	120 <lprofBufferIOWrite>
 624:	cbnz	w0, 64c <writeOneValueProfData+0x168>
 628:	ldr	x8, [x20, #8]
 62c:	ldrh	w0, [x28]
 630:	blr	x8
 634:	sub	x8, x29, #0x18
 638:	ldr	x1, [x8, x21, lsl #3]
 63c:	sub	w2, w0, #0x8
 640:	mov	x0, x22
 644:	bl	120 <lprofBufferIOWrite>
 648:	cbz	w0, 668 <writeOneValueProfData+0x184>
 64c:	mov	w8, #0x1                   	// #1
 650:	b	658 <writeOneValueProfData+0x174>
 654:	mov	w8, #0x7                   	// #7
 658:	cmp	w8, #0x7
 65c:	b.eq	5f8 <writeOneValueProfData+0x114>  // b.none
 660:	cbz	w8, 5f8 <writeOneValueProfData+0x114>
 664:	b	5bc <writeOneValueProfData+0xd8>
 668:	ldrh	w8, [x28]
 66c:	cbz	w8, 658 <writeOneValueProfData+0x174>
 670:	mov	w24, wzr
 674:	b	69c <writeOneValueProfData+0x1b8>
 678:	mov	w8, #0x1                   	// #1
 67c:	cmp	w8, #0xa
 680:	b.eq	688 <writeOneValueProfData+0x1a4>  // b.none
 684:	cbnz	w8, 658 <writeOneValueProfData+0x174>
 688:	ldrh	w8, [x28]
 68c:	add	w24, w24, #0x1
 690:	cmp	w24, w8
 694:	mov	w8, wzr
 698:	b.cs	658 <writeOneValueProfData+0x174>  // b.hs, b.nlast
 69c:	ldr	x8, [x20, #24]
 6a0:	mov	w0, w21
 6a4:	mov	w1, w24
 6a8:	blr	x8
 6ac:	cbz	w0, 710 <writeOneValueProfData+0x22c>
 6b0:	mov	w25, w0
 6b4:	mov	x26, xzr
 6b8:	ldr	x8, [x20, #40]
 6bc:	cmp	w25, #0x10
 6c0:	mov	w9, #0x10                  	// #16
 6c4:	csel	w27, w25, w9, cc  // cc = lo, ul, last
 6c8:	mov	w0, w21
 6cc:	mov	w1, w24
 6d0:	mov	x2, x23
 6d4:	mov	x3, x26
 6d8:	mov	w4, w27
 6dc:	blr	x8
 6e0:	mov	x26, x0
 6e4:	lsl	w2, w27, #4
 6e8:	mov	x0, x22
 6ec:	mov	x1, x23
 6f0:	bl	120 <lprofBufferIOWrite>
 6f4:	cbnz	w0, 678 <writeOneValueProfData+0x194>
 6f8:	subs	w25, w25, w27
 6fc:	b.ne	6b8 <writeOneValueProfData+0x1d4>  // b.any
 700:	mov	w8, wzr
 704:	cmp	w8, #0xa
 708:	b.ne	684 <writeOneValueProfData+0x1a0>  // b.any
 70c:	b	688 <writeOneValueProfData+0x1a4>
 710:	mov	w8, #0xa                   	// #10
 714:	cmp	w8, #0xa
 718:	b.ne	684 <writeOneValueProfData+0x1a0>  // b.any
 71c:	b	688 <writeOneValueProfData+0x1a4>
 720:	mov	w0, wzr
 724:	b	5c0 <writeOneValueProfData+0xdc>

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12_GLOBAL__N_115RegisterRuntimeC2Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbz	w0, 1c <_ZN12_GLOBAL__N_115RegisterRuntimeC2Ev+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	bl	0 <__llvm_profile_register_write_file_atexit>
  20:	ldp	x29, x30, [sp], #16
  24:	ret

Disassembly of section .text.startup:

0000000000000000 <__cxx_global_var_init>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__cxx_global_var_init>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

0000000000000014 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <__cxx_global_var_init>
  20:	ldp	x29, x30, [sp], #16
  24:	ret

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	mov	w20, #0x1                   	// #1
  18:	b	38 <__llvm_profile_recursive_mkdir+0x38>
  1c:	strb	wzr, [x19, x20]
  20:	bl	58 <__llvm_profile_get_dir_mode>
  24:	mov	w1, w0
  28:	mov	x0, x19
  2c:	bl	0 <mkdir>
  30:	strb	w21, [x19, x20]
  34:	add	x20, x20, #0x1
  38:	ldrb	w21, [x19, x20]
  3c:	cmp	w21, #0x2f
  40:	b.eq	1c <__llvm_profile_recursive_mkdir+0x1c>  // b.none
  44:	cbnz	w21, 34 <__llvm_profile_recursive_mkdir+0x34>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

0000000000000058 <__llvm_profile_get_dir_mode>:
  58:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  5c:	ldr	x8, [x8]
  60:	ldr	w0, [x8]
  64:	ret

0000000000000068 <__llvm_profile_set_dir_mode>:
  68:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  6c:	ldr	x8, [x8]
  70:	str	w0, [x8]
  74:	ret

0000000000000078 <lprofGetHostName>:
  78:	sub	sp, sp, #0x1c0
  7c:	stp	x29, x30, [sp, #400]
  80:	stp	x28, x21, [sp, #416]
  84:	stp	x20, x19, [sp, #432]
  88:	add	x29, sp, #0x190
  8c:	mov	x19, x0
  90:	add	x0, sp, #0x8
  94:	mov	w20, w1
  98:	add	x21, sp, #0x8
  9c:	bl	0 <uname>
  a0:	tbnz	w0, #31, b8 <lprofGetHostName+0x40>
  a4:	add	x1, x21, #0x41
  a8:	sxtw	x2, w20
  ac:	mov	x0, x19
  b0:	bl	0 <strncpy>
  b4:	mov	w0, wzr
  b8:	ldp	x20, x19, [sp, #432]
  bc:	ldp	x28, x21, [sp, #416]
  c0:	ldp	x29, x30, [sp, #400]
  c4:	add	sp, sp, #0x1c0
  c8:	ret

00000000000000cc <lprofLockFd>:
  cc:	sub	sp, sp, #0x40
  d0:	stp	x29, x30, [sp, #32]
  d4:	str	x19, [sp, #48]
  d8:	add	x29, sp, #0x20
  dc:	mov	w19, w0
  e0:	strh	wzr, [sp, #2]
  e4:	stp	xzr, xzr, [sp, #8]
  e8:	bl	0 <getpid>
  ec:	mov	w8, #0x1                   	// #1
  f0:	str	w0, [sp, #24]
  f4:	strh	w8, [sp]
  f8:	mov	x2, sp
  fc:	mov	w1, #0x7                   	// #7
 100:	mov	w0, w19
 104:	bl	0 <fcntl>
 108:	cmn	w0, #0x1
 10c:	b.ne	130 <lprofLockFd+0x64>  // b.any
 110:	bl	0 <__errno_location>
 114:	ldr	w8, [x0]
 118:	cmp	w8, #0x4
 11c:	b.eq	f8 <lprofLockFd+0x2c>  // b.none
 120:	cmp	w8, #0x25
 124:	b.ne	130 <lprofLockFd+0x64>  // b.any
 128:	mov	w0, #0xffffffff            	// #-1
 12c:	b	134 <lprofLockFd+0x68>
 130:	mov	w0, wzr
 134:	ldr	x19, [sp, #48]
 138:	ldp	x29, x30, [sp, #32]
 13c:	add	sp, sp, #0x40
 140:	ret

0000000000000144 <lprofUnlockFd>:
 144:	sub	sp, sp, #0x40
 148:	stp	x29, x30, [sp, #32]
 14c:	str	x19, [sp, #48]
 150:	add	x29, sp, #0x20
 154:	mov	w19, w0
 158:	strh	wzr, [sp, #2]
 15c:	stp	xzr, xzr, [sp, #8]
 160:	bl	0 <getpid>
 164:	mov	w8, #0x2                   	// #2
 168:	str	w0, [sp, #24]
 16c:	strh	w8, [sp]
 170:	mov	x2, sp
 174:	mov	w1, #0x7                   	// #7
 178:	mov	w0, w19
 17c:	bl	0 <fcntl>
 180:	cmn	w0, #0x1
 184:	b.ne	1a8 <lprofUnlockFd+0x64>  // b.any
 188:	bl	0 <__errno_location>
 18c:	ldr	w8, [x0]
 190:	cmp	w8, #0x4
 194:	b.eq	170 <lprofUnlockFd+0x2c>  // b.none
 198:	cmp	w8, #0x25
 19c:	b.ne	1a8 <lprofUnlockFd+0x64>  // b.any
 1a0:	mov	w0, #0xffffffff            	// #-1
 1a4:	b	1ac <lprofUnlockFd+0x68>
 1a8:	mov	w0, wzr
 1ac:	ldr	x19, [sp, #48]
 1b0:	ldp	x29, x30, [sp, #32]
 1b4:	add	sp, sp, #0x40
 1b8:	ret

00000000000001bc <lprofLockFileHandle>:
 1bc:	stp	x29, x30, [sp, #-16]!
 1c0:	mov	x29, sp
 1c4:	bl	0 <fileno>
 1c8:	bl	cc <lprofLockFd>
 1cc:	ldp	x29, x30, [sp], #16
 1d0:	ret

00000000000001d4 <lprofUnlockFileHandle>:
 1d4:	stp	x29, x30, [sp, #-16]!
 1d8:	mov	x29, sp
 1dc:	bl	0 <fileno>
 1e0:	bl	144 <lprofUnlockFd>
 1e4:	ldp	x29, x30, [sp], #16
 1e8:	ret

00000000000001ec <lprofOpenFileEx>:
 1ec:	stp	x29, x30, [sp, #-32]!
 1f0:	str	x19, [sp, #16]
 1f4:	mov	x29, sp
 1f8:	mov	w1, #0x42                  	// #66
 1fc:	mov	w2, #0x1b6                 	// #438
 200:	bl	0 <open>
 204:	tbnz	w0, #31, 228 <lprofOpenFileEx+0x3c>
 208:	mov	w19, w0
 20c:	bl	cc <lprofLockFd>
 210:	cbnz	w0, 238 <lprofOpenFileEx+0x4c>
 214:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 218:	add	x1, x1, #0x0
 21c:	mov	w0, w19
 220:	bl	0 <fdopen>
 224:	b	22c <lprofOpenFileEx+0x40>
 228:	mov	x0, xzr
 22c:	ldr	x19, [sp, #16]
 230:	ldp	x29, x30, [sp], #32
 234:	ret
 238:	adrp	x8, 0 <stderr>
 23c:	ldr	x8, [x8]
 240:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 244:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 248:	add	x1, x1, #0x0
 24c:	ldr	x0, [x8]
 250:	add	x2, x2, #0x0
 254:	bl	0 <fprintf>
 258:	b	214 <lprofOpenFileEx+0x28>

000000000000025c <lprofGetPathPrefix>:
 25c:	stp	x29, x30, [sp, #-48]!
 260:	str	x21, [sp, #16]
 264:	stp	x20, x19, [sp, #32]
 268:	mov	x29, sp
 26c:	mov	x21, x0
 270:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 274:	add	x0, x0, #0x0
 278:	mov	x20, x1
 27c:	bl	0 <getenv>
 280:	mov	x19, x0
 284:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 288:	add	x0, x0, #0x0
 28c:	bl	0 <getenv>
 290:	str	xzr, [x20]
 294:	str	wzr, [x21]
 298:	cbz	x19, 2d0 <lprofGetPathPrefix+0x74>
 29c:	ldrb	w8, [x19]
 2a0:	cbz	w8, 2b4 <lprofGetPathPrefix+0x58>
 2a4:	cbz	x0, 2bc <lprofGetPathPrefix+0x60>
 2a8:	bl	0 <atoi>
 2ac:	bic	w8, w0, w0, asr #31
 2b0:	b	2c0 <lprofGetPathPrefix+0x64>
 2b4:	mov	x19, xzr
 2b8:	b	2d0 <lprofGetPathPrefix+0x74>
 2bc:	mov	w8, wzr
 2c0:	mov	x0, x19
 2c4:	str	w8, [x21]
 2c8:	bl	0 <strlen>
 2cc:	str	x0, [x20]
 2d0:	mov	x0, x19
 2d4:	ldp	x20, x19, [sp, #32]
 2d8:	ldr	x21, [sp, #16]
 2dc:	ldp	x29, x30, [sp], #48
 2e0:	ret

00000000000002e4 <lprofApplyPathPrefix>:
 2e4:	stp	x29, x30, [sp, #-48]!
 2e8:	stp	x22, x21, [sp, #16]
 2ec:	stp	x20, x19, [sp, #32]
 2f0:	mov	x29, sp
 2f4:	mov	x20, x3
 2f8:	mov	x22, x2
 2fc:	mov	x19, x1
 300:	cmp	w4, #0x1
 304:	mov	x21, x0
 308:	b.lt	33c <lprofApplyPathPrefix+0x58>  // b.tstop
 30c:	mov	w8, wzr
 310:	add	x9, x19, #0x1
 314:	b	32c <lprofApplyPathPrefix+0x48>
 318:	add	w8, w8, #0x1
 31c:	mov	x19, x9
 320:	cmp	w8, w4
 324:	add	x9, x9, #0x1
 328:	b.ge	33c <lprofApplyPathPrefix+0x58>  // b.tcont
 32c:	ldrb	w10, [x9]
 330:	cmp	w10, #0x2f
 334:	b.eq	318 <lprofApplyPathPrefix+0x34>  // b.none
 338:	cbnz	w10, 320 <lprofApplyPathPrefix+0x3c>
 33c:	mov	x0, x21
 340:	mov	x1, x22
 344:	mov	x2, x20
 348:	bl	0 <memcpy>
 34c:	add	x8, x20, x22
 350:	ldurb	w8, [x8, #-1]
 354:	cmp	w8, #0x2f
 358:	b.eq	36c <lprofApplyPathPrefix+0x88>  // b.none
 35c:	add	x8, x20, #0x1
 360:	mov	w9, #0x2f                  	// #47
 364:	strb	w9, [x21, x20]
 368:	mov	x20, x8
 36c:	mov	x0, x19
 370:	add	x20, x21, x20
 374:	bl	0 <strlen>
 378:	add	x2, x0, #0x1
 37c:	mov	x0, x20
 380:	mov	x1, x19
 384:	bl	0 <memcpy>
 388:	ldp	x20, x19, [sp, #32]
 38c:	ldp	x22, x21, [sp, #16]
 390:	ldp	x29, x30, [sp], #48
 394:	ret

0000000000000398 <lprofFindFirstDirSeparator>:
 398:	stp	x29, x30, [sp, #-16]!
 39c:	mov	x29, sp
 3a0:	mov	w1, #0x2f                  	// #47
 3a4:	bl	0 <strchr>
 3a8:	ldp	x29, x30, [sp], #16
 3ac:	ret

00000000000003b0 <lprofFindLastDirSeparator>:
 3b0:	stp	x29, x30, [sp, #-16]!
 3b4:	mov	x29, sp
 3b8:	mov	w1, #0x2f                  	// #47
 3bc:	bl	0 <strrchr>
 3c0:	ldp	x29, x30, [sp], #16
 3c4:	ret

00000000000003c8 <lprofSuspendSigKill>:
 3c8:	sub	sp, sp, #0x20
 3cc:	stp	x29, x30, [sp, #16]
 3d0:	add	x29, sp, #0x10
 3d4:	sub	x1, x29, #0x4
 3d8:	mov	w0, #0x2                   	// #2
 3dc:	stur	wzr, [x29, #-4]
 3e0:	bl	0 <prctl>
 3e4:	cbnz	w0, 400 <lprofSuspendSigKill+0x38>
 3e8:	ldur	w8, [x29, #-4]
 3ec:	cmp	w8, #0x9
 3f0:	b.ne	400 <lprofSuspendSigKill+0x38>  // b.any
 3f4:	mov	w0, #0x1                   	// #1
 3f8:	mov	w1, wzr
 3fc:	bl	0 <prctl>
 400:	ldur	w8, [x29, #-4]
 404:	ldp	x29, x30, [sp, #16]
 408:	cmp	w8, #0x9
 40c:	cset	w0, eq  // eq = none
 410:	add	sp, sp, #0x20
 414:	ret

0000000000000418 <lprofRestoreSigKill>:
 418:	stp	x29, x30, [sp, #-16]!
 41c:	mov	x29, sp
 420:	mov	w0, #0x1                   	// #1
 424:	mov	w1, #0x9                   	// #9
 428:	bl	0 <prctl>
 42c:	ldp	x29, x30, [sp], #16
 430:	ret
