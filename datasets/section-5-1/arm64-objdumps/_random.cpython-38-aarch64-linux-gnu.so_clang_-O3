
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001138 <.init>:
    1138:	stp	x29, x30, [sp, #-16]!
    113c:	mov	x29, sp
    1140:	bl	1380 <_PyTime_GetMonotonicClock@plt+0x10>
    1144:	ldp	x29, x30, [sp], #16
    1148:	ret

Disassembly of section .plt:

0000000000001150 <memcpy@plt-0x20>:
    1150:	stp	x16, x30, [sp, #-16]!
    1154:	adrp	x16, 12000 <PyInit__random@@Base+0x10bac>
    1158:	ldr	x17, [x16, #4088]
    115c:	add	x16, x16, #0xff8
    1160:	br	x17
    1164:	nop
    1168:	nop
    116c:	nop

0000000000001170 <memcpy@plt>:
    1170:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1174:	ldr	x17, [x16]
    1178:	add	x16, x16, #0x0
    117c:	br	x17

0000000000001180 <PyMem_Free@plt>:
    1180:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1184:	ldr	x17, [x16, #8]
    1188:	add	x16, x16, #0x8
    118c:	br	x17

0000000000001190 <__cxa_finalize@plt>:
    1190:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16, #16]
    1198:	add	x16, x16, #0x10
    119c:	br	x17

00000000000011a0 <_PyTime_GetSystemClock@plt>:
    11a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #24]
    11a8:	add	x16, x16, #0x18
    11ac:	br	x17

00000000000011b0 <_Py_Dealloc@plt>:
    11b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #32]
    11b8:	add	x16, x16, #0x20
    11bc:	br	x17

00000000000011c0 <PyErr_NoMemory@plt>:
    11c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11c4:	ldr	x17, [x16, #40]
    11c8:	add	x16, x16, #0x28
    11cc:	br	x17

00000000000011d0 <PyLong_FromSize_t@plt>:
    11d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11d4:	ldr	x17, [x16, #48]
    11d8:	add	x16, x16, #0x30
    11dc:	br	x17

00000000000011e0 <_PyLong_NumBits@plt>:
    11e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11e4:	ldr	x17, [x16, #56]
    11e8:	add	x16, x16, #0x38
    11ec:	br	x17

00000000000011f0 <getpid@plt>:
    11f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11f4:	ldr	x17, [x16, #64]
    11f8:	add	x16, x16, #0x40
    11fc:	br	x17

0000000000001200 <PyErr_SetString@plt>:
    1200:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1204:	ldr	x17, [x16, #72]
    1208:	add	x16, x16, #0x48
    120c:	br	x17

0000000000001210 <_PyLong_FromByteArray@plt>:
    1210:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1214:	ldr	x17, [x16, #80]
    1218:	add	x16, x16, #0x50
    121c:	br	x17

0000000000001220 <PyFloat_FromDouble@plt>:
    1220:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1224:	ldr	x17, [x16, #88]
    1228:	add	x16, x16, #0x58
    122c:	br	x17

0000000000001230 <PyType_Ready@plt>:
    1230:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1234:	ldr	x17, [x16, #96]
    1238:	add	x16, x16, #0x60
    123c:	br	x17

0000000000001240 <PyLong_FromLong@plt>:
    1240:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1244:	ldr	x17, [x16, #104]
    1248:	add	x16, x16, #0x68
    124c:	br	x17

0000000000001250 <PyErr_Clear@plt>:
    1250:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1254:	ldr	x17, [x16, #112]
    1258:	add	x16, x16, #0x70
    125c:	br	x17

0000000000001260 <__gmon_start__@plt>:
    1260:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1264:	ldr	x17, [x16, #120]
    1268:	add	x16, x16, #0x78
    126c:	br	x17

0000000000001270 <PyTuple_New@plt>:
    1270:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1274:	ldr	x17, [x16, #128]
    1278:	add	x16, x16, #0x80
    127c:	br	x17

0000000000001280 <_PyArg_CheckPositional@plt>:
    1280:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1284:	ldr	x17, [x16, #136]
    1288:	add	x16, x16, #0x88
    128c:	br	x17

0000000000001290 <PyErr_Occurred@plt>:
    1290:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1294:	ldr	x17, [x16, #144]
    1298:	add	x16, x16, #0x90
    129c:	br	x17

00000000000012a0 <PyModule_Create2@plt>:
    12a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12a4:	ldr	x17, [x16, #152]
    12a8:	add	x16, x16, #0x98
    12ac:	br	x17

00000000000012b0 <PyLong_AsLong@plt>:
    12b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12b4:	ldr	x17, [x16, #160]
    12b8:	add	x16, x16, #0xa0
    12bc:	br	x17

00000000000012c0 <PyObject_Hash@plt>:
    12c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #168]
    12c8:	add	x16, x16, #0xa8
    12cc:	br	x17

00000000000012d0 <PyLong_AsUnsignedLong@plt>:
    12d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #176]
    12d8:	add	x16, x16, #0xb0
    12dc:	br	x17

00000000000012e0 <PyLong_FromUnsignedLong@plt>:
    12e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #184]
    12e8:	add	x16, x16, #0xb8
    12ec:	br	x17

00000000000012f0 <PyModule_AddObject@plt>:
    12f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #192]
    12f8:	add	x16, x16, #0xc0
    12fc:	br	x17

0000000000001300 <PyType_IsSubtype@plt>:
    1300:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1304:	ldr	x17, [x16, #200]
    1308:	add	x16, x16, #0xc8
    130c:	br	x17

0000000000001310 <_PyLong_AsByteArray@plt>:
    1310:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1314:	ldr	x17, [x16, #208]
    1318:	add	x16, x16, #0xd0
    131c:	br	x17

0000000000001320 <PyTuple_Size@plt>:
    1320:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1324:	ldr	x17, [x16, #216]
    1328:	add	x16, x16, #0xd8
    132c:	br	x17

0000000000001330 <_PyOS_URandomNonblock@plt>:
    1330:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1334:	ldr	x17, [x16, #224]
    1338:	add	x16, x16, #0xe0
    133c:	br	x17

0000000000001340 <_PyArg_NoKeywords@plt>:
    1340:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1344:	ldr	x17, [x16, #232]
    1348:	add	x16, x16, #0xe8
    134c:	br	x17

0000000000001350 <_PyLong_AsInt@plt>:
    1350:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1354:	ldr	x17, [x16, #240]
    1358:	add	x16, x16, #0xf0
    135c:	br	x17

0000000000001360 <PyMem_Malloc@plt>:
    1360:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1364:	ldr	x17, [x16, #248]
    1368:	add	x16, x16, #0xf8
    136c:	br	x17

0000000000001370 <_PyTime_GetMonotonicClock@plt>:
    1370:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1374:	ldr	x17, [x16, #256]
    1378:	add	x16, x16, #0x100
    137c:	br	x17

Disassembly of section .text:

0000000000001380 <PyInit__random@@Base-0xd4>:
    1380:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1384:	ldr	x0, [x0, #4040]
    1388:	cbz	x0, 1390 <_PyTime_GetMonotonicClock@plt+0x20>
    138c:	b	1260 <__gmon_start__@plt>
    1390:	ret
    1394:	nop
    1398:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    139c:	add	x0, x0, #0x3d8
    13a0:	adrp	x1, 13000 <PyInit__random@@Base+0x11bac>
    13a4:	add	x1, x1, #0x3d8
    13a8:	cmp	x1, x0
    13ac:	b.eq	13c4 <_PyTime_GetMonotonicClock@plt+0x54>  // b.none
    13b0:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    13b4:	ldr	x1, [x1, #4000]
    13b8:	cbz	x1, 13c4 <_PyTime_GetMonotonicClock@plt+0x54>
    13bc:	mov	x16, x1
    13c0:	br	x16
    13c4:	ret
    13c8:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    13cc:	add	x0, x0, #0x3d8
    13d0:	adrp	x1, 13000 <PyInit__random@@Base+0x11bac>
    13d4:	add	x1, x1, #0x3d8
    13d8:	sub	x1, x1, x0
    13dc:	lsr	x2, x1, #63
    13e0:	add	x1, x2, x1, asr #3
    13e4:	cmp	xzr, x1, asr #1
    13e8:	asr	x1, x1, #1
    13ec:	b.eq	1404 <_PyTime_GetMonotonicClock@plt+0x94>  // b.none
    13f0:	adrp	x2, 12000 <PyInit__random@@Base+0x10bac>
    13f4:	ldr	x2, [x2, #4064]
    13f8:	cbz	x2, 1404 <_PyTime_GetMonotonicClock@plt+0x94>
    13fc:	mov	x16, x2
    1400:	br	x16
    1404:	ret
    1408:	stp	x29, x30, [sp, #-32]!
    140c:	mov	x29, sp
    1410:	str	x19, [sp, #16]
    1414:	adrp	x19, 13000 <PyInit__random@@Base+0x11bac>
    1418:	ldrb	w0, [x19, #984]
    141c:	cbnz	w0, 1444 <_PyTime_GetMonotonicClock@plt+0xd4>
    1420:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1424:	ldr	x0, [x0, #4016]
    1428:	cbz	x0, 1438 <_PyTime_GetMonotonicClock@plt+0xc8>
    142c:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1430:	ldr	x0, [x0, #264]
    1434:	bl	1190 <__cxa_finalize@plt>
    1438:	bl	1398 <_PyTime_GetMonotonicClock@plt+0x28>
    143c:	mov	w0, #0x1                   	// #1
    1440:	strb	w0, [x19, #984]
    1444:	ldr	x19, [sp, #16]
    1448:	ldp	x29, x30, [sp], #32
    144c:	ret
    1450:	b	13c8 <_PyTime_GetMonotonicClock@plt+0x58>

0000000000001454 <PyInit__random@@Base>:
    1454:	stp	x29, x30, [sp, #-32]!
    1458:	stp	x20, x19, [sp, #16]
    145c:	mov	x29, sp
    1460:	adrp	x19, 13000 <PyInit__random@@Base+0x11bac>
    1464:	add	x19, x19, #0x238
    1468:	mov	x0, x19
    146c:	bl	1230 <PyType_Ready@plt>
    1470:	tbnz	w0, #31, 14bc <PyInit__random@@Base+0x68>
    1474:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1478:	add	x0, x0, #0x1d0
    147c:	mov	w1, #0x3f5                 	// #1013
    1480:	bl	12a0 <PyModule_Create2@plt>
    1484:	mov	x20, x0
    1488:	cbz	x0, 14ac <PyInit__random@@Base+0x58>
    148c:	ldr	x8, [x19]
    1490:	adrp	x1, 1000 <memcpy@plt-0x170>
    1494:	add	x1, x1, #0xfc4
    1498:	mov	x0, x20
    149c:	add	x8, x8, #0x1
    14a0:	mov	x2, x19
    14a4:	str	x8, [x19]
    14a8:	bl	12f0 <PyModule_AddObject@plt>
    14ac:	mov	x0, x20
    14b0:	ldp	x20, x19, [sp, #16]
    14b4:	ldp	x29, x30, [sp], #32
    14b8:	ret
    14bc:	mov	x20, xzr
    14c0:	mov	x0, x20
    14c4:	ldp	x20, x19, [sp, #16]
    14c8:	ldp	x29, x30, [sp], #32
    14cc:	ret
    14d0:	stp	x29, x30, [sp, #-32]!
    14d4:	stp	x20, x19, [sp, #16]
    14d8:	mov	x29, sp
    14dc:	adrp	x8, 13000 <PyInit__random@@Base+0x11bac>
    14e0:	add	x8, x8, #0x238
    14e4:	mov	x19, x0
    14e8:	cmp	x0, x8
    14ec:	mov	x20, x1
    14f0:	b.ne	150c <PyInit__random@@Base+0xb8>  // b.any
    14f4:	cbz	x2, 150c <PyInit__random@@Base+0xb8>
    14f8:	adrp	x0, 1000 <memcpy@plt-0x170>
    14fc:	add	x0, x0, #0xfc4
    1500:	mov	x1, x2
    1504:	bl	1340 <_PyArg_NoKeywords@plt>
    1508:	cbz	w0, 156c <PyInit__random@@Base+0x118>
    150c:	ldr	x8, [x19, #304]
    1510:	mov	x0, x19
    1514:	mov	x1, xzr
    1518:	blr	x8
    151c:	mov	x19, x0
    1520:	cbz	x0, 1544 <PyInit__random@@Base+0xf0>
    1524:	mov	x0, x19
    1528:	mov	x1, x20
    152c:	bl	1ab0 <PyInit__random@@Base+0x65c>
    1530:	cbz	x0, 1554 <PyInit__random@@Base+0x100>
    1534:	ldr	x8, [x0]
    1538:	subs	x8, x8, #0x1
    153c:	str	x8, [x0]
    1540:	b.eq	1580 <PyInit__random@@Base+0x12c>  // b.none
    1544:	mov	x0, x19
    1548:	ldp	x20, x19, [sp, #16]
    154c:	ldp	x29, x30, [sp], #32
    1550:	ret
    1554:	ldr	x8, [x19]
    1558:	subs	x8, x8, #0x1
    155c:	str	x8, [x19]
    1560:	b.ne	156c <PyInit__random@@Base+0x118>  // b.any
    1564:	mov	x0, x19
    1568:	bl	11b0 <_Py_Dealloc@plt>
    156c:	mov	x19, xzr
    1570:	mov	x0, x19
    1574:	ldp	x20, x19, [sp, #16]
    1578:	ldp	x29, x30, [sp], #32
    157c:	ret
    1580:	bl	11b0 <_Py_Dealloc@plt>
    1584:	mov	x0, x19
    1588:	ldp	x20, x19, [sp, #16]
    158c:	ldp	x29, x30, [sp], #32
    1590:	ret
    1594:	stp	x29, x30, [sp, #-32]!
    1598:	stp	x20, x19, [sp, #16]
    159c:	mov	x29, sp
    15a0:	mov	x19, x0
    15a4:	bl	19b0 <PyInit__random@@Base+0x55c>
    15a8:	lsr	w20, w0, #5
    15ac:	mov	x0, x19
    15b0:	bl	19b0 <PyInit__random@@Base+0x55c>
    15b4:	mov	x9, #0x4190000000000000    	// #4724276009111650304
    15b8:	lsr	w8, w0, #6
    15bc:	ucvtf	d0, w20
    15c0:	fmov	d1, x9
    15c4:	ldp	x20, x19, [sp, #16]
    15c8:	fmul	d0, d0, d1
    15cc:	ucvtf	d1, w8
    15d0:	mov	x8, #0x3ca0000000000000    	// #4368491638549381120
    15d4:	fadd	d0, d0, d1
    15d8:	fmov	d1, x8
    15dc:	fmul	d0, d0, d1
    15e0:	ldp	x29, x30, [sp], #32
    15e4:	b	1220 <PyFloat_FromDouble@plt>
    15e8:	stp	x29, x30, [sp, #-48]!
    15ec:	str	x21, [sp, #16]
    15f0:	stp	x20, x19, [sp, #32]
    15f4:	mov	x29, sp
    15f8:	mov	x21, x2
    15fc:	mov	x20, x1
    1600:	cmp	x2, #0x2
    1604:	mov	x19, x0
    1608:	b.cc	1628 <PyInit__random@@Base+0x1d4>  // b.lo, b.ul, b.last
    160c:	adrp	x0, 1000 <memcpy@plt-0x170>
    1610:	add	x0, x0, #0xfcb
    1614:	mov	w3, #0x1                   	// #1
    1618:	mov	x1, x21
    161c:	mov	x2, xzr
    1620:	bl	1280 <_PyArg_CheckPositional@plt>
    1624:	cbz	w0, 1654 <PyInit__random@@Base+0x200>
    1628:	cmp	x21, #0x1
    162c:	b.lt	1638 <PyInit__random@@Base+0x1e4>  // b.tstop
    1630:	ldr	x1, [x20]
    1634:	b	1640 <PyInit__random@@Base+0x1ec>
    1638:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    163c:	ldr	x1, [x1, #4048]
    1640:	mov	x0, x19
    1644:	ldp	x20, x19, [sp, #32]
    1648:	ldr	x21, [sp, #16]
    164c:	ldp	x29, x30, [sp], #48
    1650:	b	1ab0 <PyInit__random@@Base+0x65c>
    1654:	ldp	x20, x19, [sp, #32]
    1658:	ldr	x21, [sp, #16]
    165c:	mov	x0, xzr
    1660:	ldp	x29, x30, [sp], #48
    1664:	ret
    1668:	stp	x29, x30, [sp, #-48]!
    166c:	stp	x22, x21, [sp, #16]
    1670:	stp	x20, x19, [sp, #32]
    1674:	mov	x29, sp
    1678:	mov	x20, x0
    167c:	mov	w0, #0x271                 	// #625
    1680:	bl	1270 <PyTuple_New@plt>
    1684:	mov	x19, x0
    1688:	cbz	x0, 16e4 <PyInit__random@@Base+0x290>
    168c:	mov	x21, xzr
    1690:	add	x22, x20, #0x14
    1694:	ldr	w0, [x22, x21, lsl #2]
    1698:	bl	12e0 <PyLong_FromUnsignedLong@plt>
    169c:	cbz	x0, 16c8 <PyInit__random@@Base+0x274>
    16a0:	add	x8, x19, x21, lsl #3
    16a4:	add	x21, x21, #0x1
    16a8:	cmp	x21, #0x270
    16ac:	str	x0, [x8, #24]
    16b0:	b.ne	1694 <PyInit__random@@Base+0x240>  // b.any
    16b4:	ldrsw	x0, [x20, #16]
    16b8:	bl	1240 <PyLong_FromLong@plt>
    16bc:	cbz	x0, 16c8 <PyInit__random@@Base+0x274>
    16c0:	str	x0, [x19, #5016]
    16c4:	b	16e4 <PyInit__random@@Base+0x290>
    16c8:	ldr	x8, [x19]
    16cc:	subs	x8, x8, #0x1
    16d0:	str	x8, [x19]
    16d4:	b.ne	16e0 <PyInit__random@@Base+0x28c>  // b.any
    16d8:	mov	x0, x19
    16dc:	bl	11b0 <_Py_Dealloc@plt>
    16e0:	mov	x19, xzr
    16e4:	mov	x0, x19
    16e8:	ldp	x20, x19, [sp, #32]
    16ec:	ldp	x22, x21, [sp, #16]
    16f0:	ldp	x29, x30, [sp], #48
    16f4:	ret
    16f8:	stp	x29, x30, [sp, #-64]!
    16fc:	stp	x28, x23, [sp, #16]
    1700:	stp	x22, x21, [sp, #32]
    1704:	stp	x20, x19, [sp, #48]
    1708:	mov	x29, sp
    170c:	sub	sp, sp, #0x9c0
    1710:	ldr	x8, [x1, #8]
    1714:	ldrb	w8, [x8, #171]
    1718:	tbnz	w8, #2, 1730 <PyInit__random@@Base+0x2dc>
    171c:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1720:	ldr	x8, [x8, #4032]
    1724:	adrp	x1, 1000 <memcpy@plt-0x170>
    1728:	add	x1, x1, #0xfee
    172c:	b	17f8 <PyInit__random@@Base+0x3a4>
    1730:	mov	x19, x0
    1734:	mov	x0, x1
    1738:	mov	x20, x1
    173c:	bl	1320 <PyTuple_Size@plt>
    1740:	cmp	x0, #0x271
    1744:	b.ne	178c <PyInit__random@@Base+0x338>  // b.any
    1748:	ldr	x0, [x20, #24]
    174c:	mov	x22, xzr
    1750:	add	x21, x20, #0x20
    1754:	mov	x23, sp
    1758:	b	1770 <PyInit__random@@Base+0x31c>
    175c:	str	w20, [x23, x22, lsl #2]
    1760:	ldr	x0, [x21, x22, lsl #3]
    1764:	add	x22, x22, #0x1
    1768:	cmp	x22, #0x270
    176c:	b.eq	17a0 <PyInit__random@@Base+0x34c>  // b.none
    1770:	bl	12d0 <PyLong_AsUnsignedLong@plt>
    1774:	mov	x20, x0
    1778:	cmn	x0, #0x1
    177c:	b.ne	175c <PyInit__random@@Base+0x308>  // b.any
    1780:	bl	1290 <PyErr_Occurred@plt>
    1784:	cbz	x0, 175c <PyInit__random@@Base+0x308>
    1788:	b	1800 <PyInit__random@@Base+0x3ac>
    178c:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1790:	ldr	x8, [x8, #4024]
    1794:	adrp	x1, 2000 <PyInit__random@@Base+0xbac>
    1798:	add	x1, x1, #0xb
    179c:	b	17f8 <PyInit__random@@Base+0x3a4>
    17a0:	bl	12b0 <PyLong_AsLong@plt>
    17a4:	cmn	x0, #0x1
    17a8:	b.eq	17e0 <PyInit__random@@Base+0x38c>  // b.none
    17ac:	cmp	x0, #0x271
    17b0:	b.cs	17e8 <PyInit__random@@Base+0x394>  // b.hs, b.nlast
    17b4:	str	w0, [x19, #16]
    17b8:	add	x0, x19, #0x14
    17bc:	mov	x1, sp
    17c0:	mov	w2, #0x9c0                 	// #2496
    17c4:	bl	1170 <memcpy@plt>
    17c8:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    17cc:	ldr	x0, [x0, #4048]
    17d0:	ldr	x8, [x0]
    17d4:	add	x8, x8, #0x1
    17d8:	str	x8, [x0]
    17dc:	b	1804 <PyInit__random@@Base+0x3b0>
    17e0:	bl	1290 <PyErr_Occurred@plt>
    17e4:	cbnz	x0, 1800 <PyInit__random@@Base+0x3ac>
    17e8:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    17ec:	ldr	x8, [x8, #4024]
    17f0:	adrp	x1, 2000 <PyInit__random@@Base+0xbac>
    17f4:	add	x1, x1, #0x2a
    17f8:	ldr	x0, [x8]
    17fc:	bl	1200 <PyErr_SetString@plt>
    1800:	mov	x0, xzr
    1804:	add	sp, sp, #0x9c0
    1808:	ldp	x20, x19, [sp, #48]
    180c:	ldp	x22, x21, [sp, #32]
    1810:	ldp	x28, x23, [sp, #16]
    1814:	ldp	x29, x30, [sp], #64
    1818:	ret
    181c:	stp	x29, x30, [sp, #-96]!
    1820:	str	x27, [sp, #16]
    1824:	stp	x26, x25, [sp, #32]
    1828:	stp	x24, x23, [sp, #48]
    182c:	stp	x22, x21, [sp, #64]
    1830:	stp	x20, x19, [sp, #80]
    1834:	mov	x29, sp
    1838:	adrp	x9, 12000 <PyInit__random@@Base+0x10bac>
    183c:	ldr	x8, [x1, #8]
    1840:	ldr	x9, [x9, #4008]
    1844:	cmp	x8, x9
    1848:	b.eq	1868 <PyInit__random@@Base+0x414>  // b.none
    184c:	mov	x20, x1
    1850:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    1854:	ldr	x1, [x1, #4008]
    1858:	mov	x19, x0
    185c:	mov	x0, x8
    1860:	bl	1300 <PyType_IsSubtype@plt>
    1864:	cbz	w0, 18a0 <PyInit__random@@Base+0x44c>
    1868:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    186c:	ldr	x8, [x8, #4032]
    1870:	adrp	x1, 2000 <PyInit__random@@Base+0xbac>
    1874:	add	x1, x1, #0x38
    1878:	ldr	x0, [x8]
    187c:	bl	1200 <PyErr_SetString@plt>
    1880:	mov	x0, xzr
    1884:	ldp	x20, x19, [sp, #80]
    1888:	ldp	x22, x21, [sp, #64]
    188c:	ldp	x24, x23, [sp, #48]
    1890:	ldp	x26, x25, [sp, #32]
    1894:	ldr	x27, [sp, #16]
    1898:	ldp	x29, x30, [sp], #96
    189c:	ret
    18a0:	mov	x0, x20
    18a4:	bl	1350 <_PyLong_AsInt@plt>
    18a8:	cmn	w0, #0x1
    18ac:	b.eq	18f0 <PyInit__random@@Base+0x49c>  // b.none
    18b0:	mov	w20, w0
    18b4:	cmp	w0, #0x0
    18b8:	b.le	18f8 <PyInit__random@@Base+0x4a4>
    18bc:	cmp	w20, #0x20
    18c0:	b.gt	190c <PyInit__random@@Base+0x4b8>
    18c4:	mov	x0, x19
    18c8:	bl	19b0 <PyInit__random@@Base+0x55c>
    18cc:	neg	w8, w20
    18d0:	ldp	x20, x19, [sp, #80]
    18d4:	ldp	x22, x21, [sp, #64]
    18d8:	ldp	x24, x23, [sp, #48]
    18dc:	ldp	x26, x25, [sp, #32]
    18e0:	ldr	x27, [sp, #16]
    18e4:	lsr	w0, w0, w8
    18e8:	ldp	x29, x30, [sp], #96
    18ec:	b	12e0 <PyLong_FromUnsignedLong@plt>
    18f0:	bl	1290 <PyErr_Occurred@plt>
    18f4:	cbnz	x0, 1880 <PyInit__random@@Base+0x42c>
    18f8:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    18fc:	ldr	x8, [x8, #4024]
    1900:	adrp	x1, 2000 <PyInit__random@@Base+0xbac>
    1904:	add	x1, x1, #0x5d
    1908:	b	1878 <PyInit__random@@Base+0x424>
    190c:	sub	w8, w20, #0x1
    1910:	add	w9, w20, #0x1e
    1914:	cmp	w8, #0x0
    1918:	csel	w8, w9, w8, lt  // lt = tstop
    191c:	asr	w24, w8, #5
    1920:	lsl	w8, w24, #2
    1924:	add	w8, w8, #0x4
    1928:	sxtw	x22, w8
    192c:	mov	x0, x22
    1930:	bl	1360 <PyMem_Malloc@plt>
    1934:	cbz	x0, 19a8 <PyInit__random@@Base+0x554>
    1938:	lsl	x8, x24, #2
    193c:	mov	x21, x0
    1940:	mov	x23, xzr
    1944:	neg	w24, w20
    1948:	add	x25, x8, #0x4
    194c:	mov	w26, #0x20                  	// #32
    1950:	subs	w27, w20, #0x20
    1954:	csel	w8, w20, w26, gt
    1958:	mov	x0, x19
    195c:	add	w20, w8, w24
    1960:	bl	19b0 <PyInit__random@@Base+0x55c>
    1964:	lsr	w8, w0, w20
    1968:	str	w8, [x21, x23]
    196c:	add	x23, x23, #0x4
    1970:	cmp	x25, x23
    1974:	add	w24, w24, #0x20
    1978:	mov	w20, w27
    197c:	b.ne	1950 <PyInit__random@@Base+0x4fc>  // b.any
    1980:	mov	w2, #0x1                   	// #1
    1984:	mov	x0, x21
    1988:	mov	x1, x22
    198c:	mov	w3, wzr
    1990:	bl	1210 <_PyLong_FromByteArray@plt>
    1994:	mov	x19, x0
    1998:	mov	x0, x21
    199c:	bl	1180 <PyMem_Free@plt>
    19a0:	mov	x0, x19
    19a4:	b	1884 <PyInit__random@@Base+0x430>
    19a8:	bl	11c0 <PyErr_NoMemory@plt>
    19ac:	b	1880 <PyInit__random@@Base+0x42c>
    19b0:	ldr	w9, [x0, #16]
    19b4:	cmp	w9, #0x270
    19b8:	b.lt	1a78 <PyInit__random@@Base+0x624>  // b.tstop
    19bc:	ldr	w10, [x0, #20]
    19c0:	adrp	x8, 2000 <PyInit__random@@Base+0xbac>
    19c4:	mov	x9, xzr
    19c8:	add	x8, x8, #0x2e0
    19cc:	add	x11, x0, x9
    19d0:	and	w12, w10, #0x80000000
    19d4:	ldr	w10, [x11, #24]
    19d8:	ldr	w13, [x11, #1608]
    19dc:	add	x9, x9, #0x4
    19e0:	cmp	x9, #0x38c
    19e4:	and	x14, x10, #0x1
    19e8:	ldr	w14, [x8, x14, lsl #2]
    19ec:	and	w15, w10, #0x7ffffffe
    19f0:	orr	w12, w15, w12
    19f4:	eor	w13, w14, w13
    19f8:	eor	w12, w13, w12, lsr #1
    19fc:	str	w12, [x11, #20]
    1a00:	b.ne	19cc <PyInit__random@@Base+0x578>  // b.any
    1a04:	ldr	w9, [x0, #928]
    1a08:	mov	x10, xzr
    1a0c:	add	x11, x0, x10
    1a10:	and	w12, w9, #0x80000000
    1a14:	ldr	w9, [x11, #932]
    1a18:	ldr	w13, [x11, #20]
    1a1c:	add	x10, x10, #0x4
    1a20:	cmp	x10, #0x630
    1a24:	and	x14, x9, #0x1
    1a28:	ldr	w14, [x8, x14, lsl #2]
    1a2c:	and	w15, w9, #0x7ffffffe
    1a30:	orr	w12, w15, w12
    1a34:	eor	w13, w14, w13
    1a38:	eor	w12, w13, w12, lsr #1
    1a3c:	str	w12, [x11, #928]
    1a40:	b.ne	1a0c <PyInit__random@@Base+0x5b8>  // b.any
    1a44:	ldr	w10, [x0, #20]
    1a48:	ldr	w11, [x0, #2512]
    1a4c:	ldr	w12, [x0, #1604]
    1a50:	mov	w9, wzr
    1a54:	and	x13, x10, #0x1
    1a58:	ldr	w8, [x8, x13, lsl #2]
    1a5c:	and	w11, w11, #0x80000000
    1a60:	and	w10, w10, #0x7ffffffe
    1a64:	orr	w10, w10, w11
    1a68:	eor	w8, w8, w12
    1a6c:	eor	w8, w8, w10, lsr #1
    1a70:	str	w8, [x0, #2512]
    1a74:	str	wzr, [x0, #16]
    1a78:	add	w8, w9, #0x1
    1a7c:	add	x9, x0, w9, sxtw #2
    1a80:	str	w8, [x0, #16]
    1a84:	ldr	w8, [x9, #20]
    1a88:	mov	w9, #0x5680                	// #22144
    1a8c:	movk	w9, #0x9d2c, lsl #16
    1a90:	eor	w8, w8, w8, lsr #11
    1a94:	and	w9, w9, w8, lsl #7
    1a98:	eor	w8, w9, w8
    1a9c:	mov	w9, #0xefc60000            	// #-272236544
    1aa0:	and	w9, w9, w8, lsl #15
    1aa4:	eor	w8, w9, w8
    1aa8:	eor	w0, w8, w8, lsr #18
    1aac:	ret
    1ab0:	stp	x29, x30, [sp, #-80]!
    1ab4:	str	x28, [sp, #16]
    1ab8:	stp	x24, x23, [sp, #32]
    1abc:	stp	x22, x21, [sp, #48]
    1ac0:	stp	x20, x19, [sp, #64]
    1ac4:	mov	x29, sp
    1ac8:	sub	sp, sp, #0x9c0
    1acc:	adrp	x19, 12000 <PyInit__random@@Base+0x10bac>
    1ad0:	ldr	x19, [x19, #4048]
    1ad4:	mov	x20, x0
    1ad8:	cbz	x1, 1b18 <PyInit__random@@Base+0x6c4>
    1adc:	cmp	x1, x19
    1ae0:	b.eq	1b18 <PyInit__random@@Base+0x6c4>  // b.none
    1ae4:	ldr	x8, [x1, #8]
    1ae8:	ldrb	w8, [x8, #171]
    1aec:	tbnz	w8, #0, 1c34 <PyInit__random@@Base+0x7e0>
    1af0:	mov	x0, x1
    1af4:	bl	12c0 <PyObject_Hash@plt>
    1af8:	cmn	x0, #0x1
    1afc:	b.eq	1b0c <PyInit__random@@Base+0x6b8>  // b.none
    1b00:	bl	11d0 <PyLong_FromSize_t@plt>
    1b04:	mov	x21, x0
    1b08:	cbnz	x0, 1c54 <PyInit__random@@Base+0x800>
    1b0c:	mov	x19, xzr
    1b10:	mov	x22, xzr
    1b14:	b	1f84 <PyInit__random@@Base+0xb30>
    1b18:	mov	x0, sp
    1b1c:	mov	w1, #0x9c0                 	// #2496
    1b20:	bl	1330 <_PyOS_URandomNonblock@plt>
    1b24:	tbnz	w0, #31, 1c90 <PyInit__random@@Base+0x83c>
    1b28:	mov	w8, #0x8965                	// #35173
    1b2c:	mov	w9, #0xd6aa                	// #54954
    1b30:	movk	w8, #0x6c07, lsl #16
    1b34:	movk	w9, #0x12b, lsl #16
    1b38:	mov	w10, #0x1                   	// #1
    1b3c:	mov	w11, #0x6                   	// #6
    1b40:	str	w9, [x20, #20]
    1b44:	eor	w9, w9, w9, lsr #30
    1b48:	mul	w12, w9, w8
    1b4c:	add	w9, w12, w10
    1b50:	add	w12, w11, w12
    1b54:	sub	w12, w12, #0x5
    1b58:	str	w12, [x20, x11, lsl #2]
    1b5c:	add	x11, x11, #0x1
    1b60:	cmp	x11, #0x275
    1b64:	add	x10, x10, #0x1
    1b68:	b.ne	1b44 <PyInit__random@@Base+0x6f0>  // b.any
    1b6c:	mov	w9, #0x660d                	// #26125
    1b70:	mov	w11, #0x270                 	// #624
    1b74:	mov	x12, xzr
    1b78:	movk	w9, #0x19, lsl #16
    1b7c:	mov	x10, #0xfffffffffffffd90    	// #-624
    1b80:	mov	w8, #0x1                   	// #1
    1b84:	str	w11, [x20, #16]
    1b88:	mov	x11, sp
    1b8c:	b	1ba0 <PyInit__random@@Base+0x74c>
    1b90:	cmp	x12, #0x270
    1b94:	csel	x12, x12, xzr, cc  // cc = lo, ul, last
    1b98:	adds	x10, x10, #0x1
    1b9c:	b.cs	1be4 <PyInit__random@@Base+0x790>  // b.hs, b.nlast
    1ba0:	add	x13, x20, x8, lsl #2
    1ba4:	ldp	w16, w15, [x13, #16]
    1ba8:	ldr	w14, [x11, x12, lsl #2]
    1bac:	add	x8, x8, #0x1
    1bb0:	cmp	x8, #0x270
    1bb4:	eor	w16, w16, w16, lsr #30
    1bb8:	mul	w16, w16, w9
    1bbc:	add	w14, w14, w12
    1bc0:	eor	w15, w16, w15
    1bc4:	add	w14, w14, w15
    1bc8:	add	x12, x12, #0x1
    1bcc:	str	w14, [x13, #20]
    1bd0:	b.cc	1b90 <PyInit__random@@Base+0x73c>  // b.lo, b.ul, b.last
    1bd4:	ldr	w8, [x20, #2512]
    1bd8:	str	w8, [x20, #20]
    1bdc:	mov	w8, #0x1                   	// #1
    1be0:	b	1b90 <PyInit__random@@Base+0x73c>
    1be4:	mov	w10, #0x8b65                	// #35685
    1be8:	mov	x9, #0xfffffffffffffd91    	// #-623
    1bec:	movk	w10, #0x5d58, lsl #16
    1bf0:	b	1bfc <PyInit__random@@Base+0x7a8>
    1bf4:	adds	x9, x9, #0x1
    1bf8:	b.cs	1dd0 <PyInit__random@@Base+0x97c>  // b.hs, b.nlast
    1bfc:	add	x11, x20, x8, lsl #2
    1c00:	ldp	w12, w13, [x11, #16]
    1c04:	eor	w12, w12, w12, lsr #30
    1c08:	mul	w12, w12, w10
    1c0c:	eor	w12, w12, w13
    1c10:	sub	w12, w12, w8
    1c14:	add	x8, x8, #0x1
    1c18:	cmp	x8, #0x270
    1c1c:	str	w12, [x11, #20]
    1c20:	b.cc	1bf4 <PyInit__random@@Base+0x7a0>  // b.lo, b.ul, b.last
    1c24:	ldr	w8, [x20, #2512]
    1c28:	str	w8, [x20, #20]
    1c2c:	mov	w8, #0x1                   	// #1
    1c30:	b	1bf4 <PyInit__random@@Base+0x7a0>
    1c34:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1c38:	ldr	x8, [x8, #4056]
    1c3c:	mov	x0, x1
    1c40:	ldr	x8, [x8, #96]
    1c44:	ldr	x8, [x8, #64]
    1c48:	blr	x8
    1c4c:	mov	x21, x0
    1c50:	cbz	x0, 1b0c <PyInit__random@@Base+0x6b8>
    1c54:	mov	x0, x21
    1c58:	bl	11e0 <_PyLong_NumBits@plt>
    1c5c:	cbz	x0, 1df8 <PyInit__random@@Base+0x9a4>
    1c60:	mov	x22, x0
    1c64:	cmn	x0, #0x1
    1c68:	b.ne	1de8 <PyInit__random@@Base+0x994>  // b.any
    1c6c:	bl	1290 <PyErr_Occurred@plt>
    1c70:	cbz	x0, 1de8 <PyInit__random@@Base+0x994>
    1c74:	mov	x19, xzr
    1c78:	mov	x22, xzr
    1c7c:	ldr	x8, [x21]
    1c80:	subs	x8, x8, #0x1
    1c84:	str	x8, [x21]
    1c88:	b.ne	1f84 <PyInit__random@@Base+0xb30>  // b.any
    1c8c:	b	1f7c <PyInit__random@@Base+0xb28>
    1c90:	mov	w22, #0x8965                	// #35173
    1c94:	mov	w23, #0xd6aa                	// #54954
    1c98:	movk	w22, #0x6c07, lsl #16
    1c9c:	movk	w23, #0x12b, lsl #16
    1ca0:	bl	1250 <PyErr_Clear@plt>
    1ca4:	bl	11a0 <_PyTime_GetSystemClock@plt>
    1ca8:	mov	x21, x0
    1cac:	lsr	x8, x0, #32
    1cb0:	stp	w21, w8, [sp]
    1cb4:	bl	11f0 <getpid@plt>
    1cb8:	str	w0, [sp, #8]
    1cbc:	bl	1370 <_PyTime_GetMonotonicClock@plt>
    1cc0:	lsr	x9, x0, #32
    1cc4:	mov	w8, #0x1                   	// #1
    1cc8:	stp	w0, w9, [sp, #12]
    1ccc:	mov	w9, #0x6                   	// #6
    1cd0:	str	w23, [x20, #20]
    1cd4:	eor	w10, w23, w23, lsr #30
    1cd8:	mul	w10, w10, w22
    1cdc:	add	w23, w10, w8
    1ce0:	add	w10, w9, w10
    1ce4:	sub	w10, w10, #0x5
    1ce8:	str	w10, [x20, x9, lsl #2]
    1cec:	add	x9, x9, #0x1
    1cf0:	cmp	x9, #0x275
    1cf4:	add	x8, x8, #0x1
    1cf8:	b.ne	1cd4 <PyInit__random@@Base+0x880>  // b.any
    1cfc:	mov	w9, #0x660d                	// #26125
    1d00:	mov	w11, #0x270                 	// #624
    1d04:	mov	x12, xzr
    1d08:	movk	w9, #0x19, lsl #16
    1d0c:	mov	x10, #0xfffffffffffffd91    	// #-623
    1d10:	mov	w8, #0x1                   	// #1
    1d14:	str	w11, [x20, #16]
    1d18:	mov	x11, sp
    1d1c:	add	x13, x20, x8, lsl #2
    1d20:	ldp	w15, w14, [x13, #16]
    1d24:	add	w16, w21, w12
    1d28:	add	x8, x8, #0x1
    1d2c:	cmp	x8, #0x270
    1d30:	eor	w15, w15, w15, lsr #30
    1d34:	mul	w15, w15, w9
    1d38:	eor	w14, w15, w14
    1d3c:	add	w14, w16, w14
    1d40:	add	x12, x12, #0x1
    1d44:	str	w14, [x13, #20]
    1d48:	b.cs	1d5c <PyInit__random@@Base+0x908>  // b.hs, b.nlast
    1d4c:	cmp	x12, #0x5
    1d50:	csel	x12, x12, xzr, cc  // cc = lo, ul, last
    1d54:	cbnz	x10, 1d74 <PyInit__random@@Base+0x920>
    1d58:	b	1d80 <PyInit__random@@Base+0x92c>
    1d5c:	ldr	w8, [x20, #2512]
    1d60:	str	w8, [x20, #20]
    1d64:	mov	w8, #0x1                   	// #1
    1d68:	cmp	x12, #0x5
    1d6c:	csel	x12, x12, xzr, cc  // cc = lo, ul, last
    1d70:	cbz	x10, 1d80 <PyInit__random@@Base+0x92c>
    1d74:	ldr	w21, [x11, x12, lsl #2]
    1d78:	add	x10, x10, #0x1
    1d7c:	b	1d1c <PyInit__random@@Base+0x8c8>
    1d80:	mov	w10, #0x8b65                	// #35685
    1d84:	mov	x9, #0xfffffffffffffd91    	// #-623
    1d88:	movk	w10, #0x5d58, lsl #16
    1d8c:	b	1d98 <PyInit__random@@Base+0x944>
    1d90:	adds	x9, x9, #0x1
    1d94:	b.cs	1dd0 <PyInit__random@@Base+0x97c>  // b.hs, b.nlast
    1d98:	add	x11, x20, x8, lsl #2
    1d9c:	ldp	w12, w13, [x11, #16]
    1da0:	eor	w12, w12, w12, lsr #30
    1da4:	mul	w12, w12, w10
    1da8:	eor	w12, w12, w13
    1dac:	sub	w12, w12, w8
    1db0:	add	x8, x8, #0x1
    1db4:	cmp	x8, #0x270
    1db8:	str	w12, [x11, #20]
    1dbc:	b.cc	1d90 <PyInit__random@@Base+0x93c>  // b.lo, b.ul, b.last
    1dc0:	ldr	w8, [x20, #2512]
    1dc4:	str	w8, [x20, #20]
    1dc8:	mov	w8, #0x1                   	// #1
    1dcc:	b	1d90 <PyInit__random@@Base+0x93c>
    1dd0:	mov	w8, #0x80000000            	// #-2147483648
    1dd4:	str	w8, [x20, #20]
    1dd8:	ldr	x8, [x19]
    1ddc:	add	x8, x8, #0x1
    1de0:	str	x8, [x19]
    1de4:	b	1f8c <PyInit__random@@Base+0xb38>
    1de8:	sub	x8, x22, #0x1
    1dec:	lsr	x8, x8, #5
    1df0:	add	x24, x8, #0x1
    1df4:	b	1dfc <PyInit__random@@Base+0x9a8>
    1df8:	mov	w24, #0x1                   	// #1
    1dfc:	lsl	x23, x24, #2
    1e00:	mov	x0, x23
    1e04:	bl	1360 <PyMem_Malloc@plt>
    1e08:	mov	x22, x0
    1e0c:	cbz	x0, 1f64 <PyInit__random@@Base+0xb10>
    1e10:	mov	w3, #0x1                   	// #1
    1e14:	mov	x0, x21
    1e18:	mov	x1, x22
    1e1c:	mov	x2, x23
    1e20:	mov	w4, wzr
    1e24:	bl	1310 <_PyLong_AsByteArray@plt>
    1e28:	cmn	w0, #0x1
    1e2c:	b.eq	1f68 <PyInit__random@@Base+0xb14>  // b.none
    1e30:	mov	w8, #0x8965                	// #35173
    1e34:	mov	w9, #0xd6aa                	// #54954
    1e38:	movk	w8, #0x6c07, lsl #16
    1e3c:	movk	w9, #0x12b, lsl #16
    1e40:	mov	w10, #0x1                   	// #1
    1e44:	mov	w11, #0x6                   	// #6
    1e48:	str	w9, [x20, #20]
    1e4c:	eor	w9, w9, w9, lsr #30
    1e50:	mul	w12, w9, w8
    1e54:	add	w9, w12, w10
    1e58:	add	w12, w11, w12
    1e5c:	sub	w12, w12, #0x5
    1e60:	str	w12, [x20, x11, lsl #2]
    1e64:	add	x11, x11, #0x1
    1e68:	cmp	x11, #0x275
    1e6c:	add	x10, x10, #0x1
    1e70:	b.ne	1e4c <PyInit__random@@Base+0x9f8>  // b.any
    1e74:	mov	w9, #0x660d                	// #26125
    1e78:	mov	w8, #0x270                 	// #624
    1e7c:	cmp	x24, #0x270
    1e80:	mov	x11, xzr
    1e84:	movk	w9, #0x19, lsl #16
    1e88:	str	w8, [x20, #16]
    1e8c:	csel	x10, x24, x8, hi  // hi = pmore
    1e90:	mov	w8, #0x1                   	// #1
    1e94:	b	1ea8 <PyInit__random@@Base+0xa54>
    1e98:	cmp	x11, x24
    1e9c:	csel	x11, x11, xzr, cc  // cc = lo, ul, last
    1ea0:	subs	x10, x10, #0x1
    1ea4:	b.eq	1eec <PyInit__random@@Base+0xa98>  // b.none
    1ea8:	add	x12, x20, x8, lsl #2
    1eac:	ldp	w15, w14, [x12, #16]
    1eb0:	ldr	w13, [x22, x11, lsl #2]
    1eb4:	add	x8, x8, #0x1
    1eb8:	cmp	x8, #0x270
    1ebc:	eor	w15, w15, w15, lsr #30
    1ec0:	mul	w15, w15, w9
    1ec4:	add	w13, w13, w11
    1ec8:	eor	w14, w15, w14
    1ecc:	add	w13, w13, w14
    1ed0:	add	x11, x11, #0x1
    1ed4:	str	w13, [x12, #20]
    1ed8:	b.cc	1e98 <PyInit__random@@Base+0xa44>  // b.lo, b.ul, b.last
    1edc:	ldr	w8, [x20, #2512]
    1ee0:	str	w8, [x20, #20]
    1ee4:	mov	w8, #0x1                   	// #1
    1ee8:	b	1e98 <PyInit__random@@Base+0xa44>
    1eec:	mov	w10, #0x8b65                	// #35685
    1ef0:	mov	x9, #0xfffffffffffffd91    	// #-623
    1ef4:	movk	w10, #0x5d58, lsl #16
    1ef8:	b	1f04 <PyInit__random@@Base+0xab0>
    1efc:	adds	x9, x9, #0x1
    1f00:	b.cs	1f3c <PyInit__random@@Base+0xae8>  // b.hs, b.nlast
    1f04:	add	x11, x20, x8, lsl #2
    1f08:	ldp	w12, w13, [x11, #16]
    1f0c:	eor	w12, w12, w12, lsr #30
    1f10:	mul	w12, w12, w10
    1f14:	eor	w12, w12, w13
    1f18:	sub	w12, w12, w8
    1f1c:	add	x8, x8, #0x1
    1f20:	cmp	x8, #0x270
    1f24:	str	w12, [x11, #20]
    1f28:	b.cc	1efc <PyInit__random@@Base+0xaa8>  // b.lo, b.ul, b.last
    1f2c:	ldr	w8, [x20, #2512]
    1f30:	str	w8, [x20, #20]
    1f34:	mov	w8, #0x1                   	// #1
    1f38:	b	1efc <PyInit__random@@Base+0xaa8>
    1f3c:	mov	w8, #0x80000000            	// #-2147483648
    1f40:	str	w8, [x20, #20]
    1f44:	ldr	x8, [x19]
    1f48:	add	x8, x8, #0x1
    1f4c:	str	x8, [x19]
    1f50:	ldr	x8, [x21]
    1f54:	subs	x8, x8, #0x1
    1f58:	str	x8, [x21]
    1f5c:	b.ne	1f84 <PyInit__random@@Base+0xb30>  // b.any
    1f60:	b	1f7c <PyInit__random@@Base+0xb28>
    1f64:	bl	11c0 <PyErr_NoMemory@plt>
    1f68:	mov	x19, xzr
    1f6c:	ldr	x8, [x21]
    1f70:	subs	x8, x8, #0x1
    1f74:	str	x8, [x21]
    1f78:	b.ne	1f84 <PyInit__random@@Base+0xb30>  // b.any
    1f7c:	mov	x0, x21
    1f80:	bl	11b0 <_Py_Dealloc@plt>
    1f84:	mov	x0, x22
    1f88:	bl	1180 <PyMem_Free@plt>
    1f8c:	mov	x0, x19
    1f90:	add	sp, sp, #0x9c0
    1f94:	ldp	x20, x19, [sp, #64]
    1f98:	ldp	x22, x21, [sp, #48]
    1f9c:	ldp	x24, x23, [sp, #32]
    1fa0:	ldr	x28, [sp, #16]
    1fa4:	ldp	x29, x30, [sp], #80
    1fa8:	ret

Disassembly of section .fini:

0000000000001fac <.fini>:
    1fac:	stp	x29, x30, [sp, #-16]!
    1fb0:	mov	x29, sp
    1fb4:	ldp	x29, x30, [sp], #16
    1fb8:	ret
