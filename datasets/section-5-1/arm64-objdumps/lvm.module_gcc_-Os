
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lvm.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_strstr>:
   0:	ldrb	w3, [x1]
   4:	cbnz	w3, 10 <grub_strstr+0x10>
   8:	ret
   c:	mov	x0, x6
  10:	ldrb	w2, [x0]
  14:	cbz	w2, 48 <grub_strstr+0x48>
  18:	add	x6, x0, #0x1
  1c:	cmp	w3, w2
  20:	b.ne	c <grub_strstr+0xc>  // b.any
  24:	mov	x2, #0x1                   	// #1
  28:	ldrb	w5, [x1, x2]
  2c:	cbz	w5, 8 <grub_strstr+0x8>
  30:	ldrb	w4, [x0, x2]
  34:	cbz	w4, 48 <grub_strstr+0x48>
  38:	add	x2, x2, #0x1
  3c:	cmp	w5, w4
  40:	b.eq	28 <grub_strstr+0x28>  // b.none
  44:	b	c <grub_strstr+0xc>
  48:	mov	x0, #0x0                   	// #0
  4c:	b	8 <grub_strstr+0x8>

0000000000000050 <grub_memcpy>:
  50:	b	0 <grub_memmove>

0000000000000054 <grub_lvm_getvalue>:
  54:	stp	x29, x30, [sp, #-32]!
  58:	mov	x29, sp
  5c:	str	x19, [sp, #16]
  60:	mov	x19, x0
  64:	ldr	x0, [x0]
  68:	bl	0 <grub_strstr>
  6c:	str	x0, [x19]
  70:	cbz	x0, 9c <grub_lvm_getvalue+0x48>
  74:	mov	x0, x1
  78:	bl	0 <grub_strlen>
  7c:	ldr	x1, [x19]
  80:	mov	w2, #0xa                   	// #10
  84:	add	x0, x1, x0
  88:	str	x0, [x19]
  8c:	mov	x1, x19
  90:	ldr	x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	b	0 <grub_strtoull>
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

00000000000000a8 <grub_lvm_check_flag.constprop.0>:
  a8:	stp	x29, x30, [sp, #-64]!
  ac:	mov	x29, sp
  b0:	stp	x21, x22, [sp, #32]
  b4:	adrp	x22, 0 <grub_strstr>
  b8:	mov	x21, x1
  bc:	stp	x19, x20, [sp, #16]
  c0:	mov	x19, x0
  c4:	ldr	x0, [x22]
  c8:	stp	x23, x24, [sp, #48]
  cc:	adrp	x24, 0 <grub_strstr>
  d0:	bl	0 <grub_strlen>
  d4:	mov	x23, x0
  d8:	mov	x0, x21
  dc:	bl	0 <grub_strlen>
  e0:	mov	x20, x0
  e4:	ldr	x1, [x22]
  e8:	mov	x0, x19
  ec:	bl	0 <grub_strstr>
  f0:	cbz	x0, 180 <grub_lvm_check_flag.constprop.0+0xd8>
  f4:	ldr	x1, [x24]
  f8:	add	x19, x0, x23
  fc:	mov	x0, x19
 100:	mov	x2, #0x4                   	// #4
 104:	bl	0 <grub_memcmp>
 108:	cbnz	w0, e4 <grub_lvm_check_flag.constprop.0+0x3c>
 10c:	add	x19, x19, #0x4
 110:	ldrb	w0, [x19]
 114:	bl	0 <grub_isspace>
 118:	cbnz	w0, 154 <grub_lvm_check_flag.constprop.0+0xac>
 11c:	ldrb	w0, [x19]
 120:	cmp	w0, #0x22
 124:	b.ne	180 <grub_lvm_check_flag.constprop.0+0xd8>  // b.any
 128:	add	x19, x19, #0x1
 12c:	mov	x2, x20
 130:	mov	x1, x21
 134:	mov	x0, x19
 138:	bl	0 <grub_memcmp>
 13c:	cbnz	w0, 160 <grub_lvm_check_flag.constprop.0+0xb8>
 140:	ldrb	w0, [x19, x20]
 144:	cmp	w0, #0x22
 148:	b.ne	160 <grub_lvm_check_flag.constprop.0+0xb8>  // b.any
 14c:	mov	w0, #0x1                   	// #1
 150:	b	184 <grub_lvm_check_flag.constprop.0+0xdc>
 154:	add	x19, x19, #0x1
 158:	b	110 <grub_lvm_check_flag.constprop.0+0x68>
 15c:	add	x19, x19, #0x1
 160:	ldrb	w0, [x19]
 164:	cmp	w0, #0x22
 168:	b.ne	15c <grub_lvm_check_flag.constprop.0+0xb4>  // b.any
 16c:	ldrb	w0, [x19, #1]
 170:	cmp	w0, #0x5d
 174:	b.eq	180 <grub_lvm_check_flag.constprop.0+0xd8>  // b.none
 178:	add	x19, x19, #0x2
 17c:	b	110 <grub_lvm_check_flag.constprop.0+0x68>
 180:	mov	w0, #0x0                   	// #0
 184:	ldp	x19, x20, [sp, #16]
 188:	ldp	x21, x22, [sp, #32]
 18c:	ldp	x23, x24, [sp, #48]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
	...

00000000000001a8 <grub_lvm_detect>:
 1a8:	sub	sp, sp, #0x300
 1ac:	stp	x29, x30, [sp]
 1b0:	mov	x29, sp
 1b4:	stp	x19, x20, [sp, #16]
 1b8:	mov	x20, x0
 1bc:	stp	x21, x22, [sp, #32]
 1c0:	add	x22, sp, #0x118
 1c4:	mov	x21, #0x0                   	// #0
 1c8:	stp	x23, x24, [sp, #48]
 1cc:	adrp	x23, 0 <grub_strstr>
 1d0:	stp	x25, x26, [sp, #64]
 1d4:	stp	x27, x28, [sp, #80]
 1d8:	str	x1, [sp, #96]
 1dc:	str	x2, [sp, #136]
 1e0:	add	x4, sp, #0x100
 1e4:	mov	x1, x21
 1e8:	mov	x0, x20
 1ec:	mov	x3, #0x200                 	// #512
 1f0:	mov	x2, #0x0                   	// #0
 1f4:	bl	0 <grub_disk_read>
 1f8:	mov	w19, w0
 1fc:	cbz	w0, 208 <grub_lvm_detect+0x60>
 200:	mov	x20, #0x0                   	// #0
 204:	b	d4c <grub_lvm_detect+0xba4>
 208:	ldr	x1, [x23]
 20c:	add	x0, sp, #0x100
 210:	mov	x2, #0x8                   	// #8
 214:	bl	0 <grub_strncmp>
 218:	cbz	w0, 22c <grub_lvm_detect+0x84>
 21c:	add	x21, x21, #0x1
 220:	cmp	x21, #0x4
 224:	b.ne	1e0 <grub_lvm_detect+0x38>  // b.any
 228:	b	200 <grub_lvm_detect+0x58>
 22c:	adrp	x0, 0 <grub_strstr>
 230:	mov	x2, #0x8                   	// #8
 234:	ldr	x1, [x0]
 238:	mov	x0, x22
 23c:	bl	0 <grub_strncmp>
 240:	cbnz	w0, 21c <grub_lvm_detect+0x74>
 244:	ldr	w1, [sp, #276]
 248:	add	x0, sp, #0x100
 24c:	add	x26, sp, #0xd8
 250:	mov	x2, #0x0                   	// #0
 254:	add	x1, x0, x1
 258:	mov	w3, #0x2d                  	// #45
 25c:	b	264 <grub_lvm_detect+0xbc>
 260:	mov	w19, w0
 264:	ldrb	w4, [x1, x2]
 268:	cmp	w2, #0x1
 26c:	strb	w4, [x26, w19, uxtw]
 270:	add	w0, w19, #0x1
 274:	ccmp	w2, #0x1d, #0x4, ne  // ne = any
 278:	b.eq	290 <grub_lvm_detect+0xe8>  // b.none
 27c:	and	w4, w2, #0x3
 280:	cmp	w4, #0x1
 284:	b.ne	290 <grub_lvm_detect+0xe8>  // b.any
 288:	strb	w3, [x26, w0, uxtw]
 28c:	add	w0, w19, #0x2
 290:	add	x2, x2, #0x1
 294:	cmp	x2, #0x20
 298:	b.ne	260 <grub_lvm_detect+0xb8>  // b.any
 29c:	strb	wzr, [x26, w0, uxtw]
 2a0:	ldr	x0, [x1, #56]
 2a4:	cbz	x0, 2bc <grub_lvm_detect+0x114>
 2a8:	adrp	x0, 0 <grub_strstr>
 2ac:	ldr	x1, [x0]
 2b0:	mov	w0, #0x18                  	// #24
 2b4:	bl	0 <grub_error>
 2b8:	b	200 <grub_lvm_detect+0x58>
 2bc:	ldp	x21, x19, [x1, #72]
 2c0:	lsl	x0, x19, #1
 2c4:	bl	0 <grub_malloc>
 2c8:	mov	x22, x0
 2cc:	cbz	x0, 200 <grub_lvm_detect+0x58>
 2d0:	mov	x4, x0
 2d4:	mov	x3, x19
 2d8:	mov	x2, x21
 2dc:	mov	x0, x20
 2e0:	mov	x1, #0x0                   	// #0
 2e4:	bl	0 <grub_disk_read>
 2e8:	cbnz	w0, 320 <grub_lvm_detect+0x178>
 2ec:	adrp	x0, 0 <grub_strstr>
 2f0:	mov	x2, #0x10                  	// #16
 2f4:	ldr	x1, [x0]
 2f8:	add	x0, x22, #0x4
 2fc:	bl	0 <grub_strncmp>
 300:	cbnz	w0, 310 <grub_lvm_detect+0x168>
 304:	ldr	w0, [x22, #20]
 308:	cmp	w0, #0x1
 30c:	b.eq	32c <grub_lvm_detect+0x184>  // b.none
 310:	adrp	x0, 0 <grub_strstr>
 314:	ldr	x1, [x0]
 318:	mov	w0, #0x18                  	// #24
 31c:	bl	0 <grub_error>
 320:	mov	x0, x22
 324:	bl	0 <grub_free>
 328:	b	200 <grub_lvm_detect+0x58>
 32c:	ldp	x0, x2, [x22, #40]
 330:	add	x21, x22, x19
 334:	add	x0, x0, x2
 338:	ldr	x2, [x22, #32]
 33c:	cmp	x0, x2
 340:	b.ls	354 <grub_lvm_detect+0x1ac>  // b.plast
 344:	sub	x2, x0, x2
 348:	add	x1, x22, #0x200
 34c:	mov	x0, x21
 350:	bl	50 <grub_memcpy>
 354:	ldr	x19, [x22, #40]
 358:	add	x19, x22, x19
 35c:	str	x19, [sp, #168]
 360:	mov	x20, x19
 364:	ldrb	w0, [x20]
 368:	cmp	w0, #0x20
 36c:	b.eq	378 <grub_lvm_detect+0x1d0>  // b.none
 370:	cmp	x20, x21
 374:	b.cc	3d4 <grub_lvm_detect+0x22c>  // b.lo, b.ul, b.last
 378:	cmp	x20, x21
 37c:	b.eq	320 <grub_lvm_detect+0x178>  // b.none
 380:	sub	x19, x20, x19
 384:	add	x0, x19, #0x1
 388:	bl	0 <grub_malloc>
 38c:	mov	x23, x0
 390:	cbz	x0, 320 <grub_lvm_detect+0x178>
 394:	ldr	x1, [sp, #168]
 398:	mov	x2, x19
 39c:	bl	50 <grub_memcpy>
 3a0:	strb	wzr, [x23, x19]
 3a4:	adrp	x7, 0 <grub_strstr>
 3a8:	add	x0, x23, x19
 3ac:	str	x0, [sp, #112]
 3b0:	mov	x0, x20
 3b4:	ldr	x1, [x7]
 3b8:	bl	0 <grub_strstr>
 3bc:	str	x7, [sp, #104]
 3c0:	cbnz	x0, 3dc <grub_lvm_detect+0x234>
 3c4:	str	xzr, [sp, #168]
 3c8:	mov	x0, x23
 3cc:	bl	0 <grub_free>
 3d0:	b	320 <grub_lvm_detect+0x178>
 3d4:	add	x20, x20, #0x1
 3d8:	b	364 <grub_lvm_detect+0x1bc>
 3dc:	mov	x2, #0x26                  	// #38
 3e0:	add	x1, x0, #0x6
 3e4:	add	x0, sp, #0xb0
 3e8:	str	x1, [sp, #168]
 3ec:	bl	50 <grub_memcpy>
 3f0:	strb	wzr, [sp, #214]
 3f4:	add	x1, sp, #0xb0
 3f8:	mov	x0, #0x26                  	// #38
 3fc:	bl	0 <grub_diskfilter_get_vg_by_uuid>
 400:	mov	x20, x0
 404:	cbnz	x0, e4c <grub_lvm_detect+0xca4>
 408:	mov	x0, #0x38                  	// #56
 40c:	bl	0 <grub_malloc>
 410:	mov	x20, x0
 414:	cbz	x0, 3c8 <grub_lvm_detect+0x220>
 418:	str	x23, [x20, #16]
 41c:	mov	x0, #0x26                  	// #38
 420:	bl	0 <grub_malloc>
 424:	str	x0, [x20]
 428:	cbz	x0, 3c8 <grub_lvm_detect+0x220>
 42c:	add	x1, sp, #0xb0
 430:	mov	x2, #0x26                  	// #38
 434:	bl	50 <grub_memcpy>
 438:	mov	x24, #0x26                  	// #38
 43c:	adrp	x0, 0 <grub_strstr>
 440:	str	x24, [x20, #8]
 444:	ldr	x1, [x0]
 448:	add	x0, sp, #0xa8
 44c:	bl	54 <grub_lvm_getvalue>
 450:	str	x0, [x20, #24]
 454:	ldr	x0, [sp, #168]
 458:	cbz	x0, 858 <grub_lvm_detect+0x6b0>
 45c:	adrp	x1, 0 <grub_strstr>
 460:	stp	xzr, xzr, [x20, #32]
 464:	ldr	x1, [x1]
 468:	bl	0 <grub_strstr>
 46c:	cbz	x0, 584 <grub_lvm_detect+0x3dc>
 470:	add	x0, x0, #0x12
 474:	adrp	x25, 0 <grub_strstr>
 478:	str	x0, [sp, #168]
 47c:	ldr	x0, [sp, #168]
 480:	ldrb	w0, [x0]
 484:	bl	0 <grub_isspace>
 488:	ldr	x1, [sp, #168]
 48c:	cbnz	w0, 554 <grub_lvm_detect+0x3ac>
 490:	ldrb	w0, [x1]
 494:	cmp	w0, #0x7d
 498:	b.eq	588 <grub_lvm_detect+0x3e0>  // b.none
 49c:	mov	x0, #0x48                  	// #72
 4a0:	bl	0 <grub_zalloc>
 4a4:	ldr	x27, [sp, #168]
 4a8:	mov	x21, x0
 4ac:	mov	x2, x27
 4b0:	ldrb	w0, [x2]
 4b4:	cmp	w0, #0x20
 4b8:	b.ne	560 <grub_lvm_detect+0x3b8>  // b.any
 4bc:	sub	x27, x2, x27
 4c0:	add	x0, x27, #0x1
 4c4:	bl	0 <grub_malloc>
 4c8:	ldr	x1, [sp, #168]
 4cc:	str	x0, [x21, #16]
 4d0:	mov	x2, x27
 4d4:	bl	50 <grub_memcpy>
 4d8:	ldr	x0, [x21, #16]
 4dc:	strb	wzr, [x0, x27]
 4e0:	ldr	x0, [sp, #104]
 4e4:	ldr	x1, [x0]
 4e8:	ldr	x0, [sp, #168]
 4ec:	bl	0 <grub_strstr>
 4f0:	cbz	x0, 540 <grub_lvm_detect+0x398>
 4f4:	add	x0, x0, #0x6
 4f8:	str	x0, [sp, #168]
 4fc:	mov	x0, #0x26                  	// #38
 500:	bl	0 <grub_malloc>
 504:	str	x0, [x21]
 508:	cbz	x0, 544 <grub_lvm_detect+0x39c>
 50c:	ldr	x1, [sp, #168]
 510:	mov	x2, #0x26                  	// #38
 514:	bl	50 <grub_memcpy>
 518:	str	x24, [x21, #8]
 51c:	ldr	x1, [x25]
 520:	add	x0, sp, #0xa8
 524:	bl	54 <grub_lvm_getvalue>
 528:	str	x0, [x21, #48]
 52c:	ldr	x0, [sp, #168]
 530:	cbz	x0, 544 <grub_lvm_detect+0x39c>
 534:	mov	w1, #0x7d                  	// #125
 538:	bl	0 <grub_strchr>
 53c:	cbnz	x0, 568 <grub_lvm_detect+0x3c0>
 540:	str	xzr, [sp, #168]
 544:	ldr	x0, [x21, #16]
 548:	bl	0 <grub_free>
 54c:	mov	x0, x21
 550:	b	a1c <grub_lvm_detect+0x874>
 554:	add	x1, x1, #0x1
 558:	str	x1, [sp, #168]
 55c:	b	47c <grub_lvm_detect+0x2d4>
 560:	add	x2, x2, #0x1
 564:	b	4b0 <grub_lvm_detect+0x308>
 568:	add	x0, x0, #0x1
 56c:	str	x0, [sp, #168]
 570:	ldr	x0, [x20, #32]
 574:	str	xzr, [x21, #24]
 578:	str	x0, [x21, #56]
 57c:	str	x21, [x20, #32]
 580:	b	47c <grub_lvm_detect+0x2d4>
 584:	str	xzr, [sp, #168]
 588:	adrp	x0, 0 <grub_strstr>
 58c:	ldr	x1, [x0]
 590:	ldr	x0, [sp, #168]
 594:	bl	0 <grub_strstr>
 598:	cbz	x0, cf4 <grub_lvm_detect+0xb4c>
 59c:	add	x19, x19, #0x3
 5a0:	add	x0, x0, #0x11
 5a4:	str	x0, [sp, #168]
 5a8:	lsl	x0, x19, #1
 5ac:	str	x0, [sp, #120]
 5b0:	ldr	x0, [sp, #168]
 5b4:	ldrb	w0, [x0]
 5b8:	bl	0 <grub_isspace>
 5bc:	mov	w25, w0
 5c0:	ldr	x0, [sp, #168]
 5c4:	cbnz	w25, 78c <grub_lvm_detect+0x5e4>
 5c8:	ldrb	w0, [x0]
 5cc:	cmp	w0, #0x7d
 5d0:	b.eq	cf8 <grub_lvm_detect+0xb50>  // b.none
 5d4:	mov	x0, #0x60                  	// #96
 5d8:	bl	0 <grub_zalloc>
 5dc:	mov	x21, x0
 5e0:	ldr	x0, [sp, #168]
 5e4:	mov	x19, x0
 5e8:	ldrb	w1, [x19]
 5ec:	cmp	w1, #0x20
 5f0:	b.ne	798 <grub_lvm_detect+0x5f0>  // b.any
 5f4:	sub	x24, x19, x0
 5f8:	mov	x1, x24
 5fc:	bl	0 <grub_strndup>
 600:	str	x0, [x21, #16]
 604:	cbz	x0, 544 <grub_lvm_detect+0x39c>
 608:	ldr	x0, [sp, #120]
 60c:	add	x0, x0, x24, lsl #1
 610:	bl	0 <grub_malloc>
 614:	str	x0, [x21]
 618:	cbz	x0, 544 <grub_lvm_detect+0x39c>
 61c:	adrp	x1, 0 <grub_strstr>
 620:	mov	x2, #0x4                   	// #4
 624:	ldr	x1, [x1]
 628:	bl	50 <grub_memcpy>
 62c:	ldr	x1, [x21]
 630:	mov	x2, x23
 634:	add	x1, x1, #0x4
 638:	ldr	x3, [sp, #112]
 63c:	add	x0, x1, #0x1
 640:	cmp	x3, x2
 644:	b.hi	7a0 <grub_lvm_detect+0x5f8>  // b.pmore
 648:	mov	w2, #0x2d                  	// #45
 64c:	strb	w2, [x1]
 650:	ldr	x1, [sp, #168]
 654:	ldr	x2, [sp, #168]
 658:	add	x2, x2, x24
 65c:	cmp	x1, x2
 660:	b.cc	7c8 <grub_lvm_detect+0x620>  // b.lo, b.ul, b.last
 664:	strb	wzr, [x0]
 668:	mov	x0, #0x54                  	// #84
 66c:	bl	0 <grub_malloc>
 670:	str	x0, [x21, #8]
 674:	cbz	x0, 544 <grub_lvm_detect+0x39c>
 678:	adrp	x1, 0 <grub_strstr>
 67c:	mov	x2, #0x6                   	// #6
 680:	ldr	x1, [x1]
 684:	bl	50 <grub_memcpy>
 688:	ldr	x0, [x21, #8]
 68c:	add	x1, sp, #0xb0
 690:	mov	x2, #0x26                  	// #38
 694:	add	x0, x0, #0x6
 698:	bl	50 <grub_memcpy>
 69c:	ldr	x0, [x21, #8]
 6a0:	mov	w1, #0x2f                  	// #47
 6a4:	strb	w1, [x0, #44]
 6a8:	ldr	x0, [sp, #104]
 6ac:	ldr	x1, [x0]
 6b0:	mov	x0, x19
 6b4:	bl	0 <grub_strstr>
 6b8:	cbz	x0, 540 <grub_lvm_detect+0x398>
 6bc:	add	x1, x0, #0x6
 6c0:	mov	x2, #0x26                  	// #38
 6c4:	ldr	x0, [x21, #8]
 6c8:	str	x1, [sp, #168]
 6cc:	add	x0, x0, #0x2d
 6d0:	bl	50 <grub_memcpy>
 6d4:	ldr	x0, [x21, #8]
 6d8:	strb	wzr, [x0, #83]
 6dc:	adrp	x0, 0 <grub_strstr>
 6e0:	str	xzr, [x21, #40]
 6e4:	ldr	x1, [x0]
 6e8:	ldr	x0, [sp, #168]
 6ec:	bl	a8 <grub_lvm_check_flag.constprop.0>
 6f0:	str	w0, [x21, #56]
 6f4:	adrp	x0, 0 <grub_strstr>
 6f8:	ldr	x1, [x0]
 6fc:	ldr	x0, [sp, #168]
 700:	bl	a8 <grub_lvm_check_flag.constprop.0>
 704:	str	w0, [sp, #132]
 708:	adrp	x0, 0 <grub_strstr>
 70c:	ldr	x1, [x0]
 710:	add	x0, sp, #0xa8
 714:	bl	54 <grub_lvm_getvalue>
 718:	str	w0, [x21, #28]
 71c:	ldr	x1, [sp, #168]
 720:	cbz	x1, 544 <grub_lvm_detect+0x39c>
 724:	and	x0, x0, #0xffffffff
 728:	mov	x1, #0x38                  	// #56
 72c:	mov	w27, #0x0                   	// #0
 730:	mul	x0, x0, x1
 734:	bl	0 <grub_zalloc>
 738:	mov	x19, x0
 73c:	str	x0, [x21, #64]
 740:	ldr	w1, [x21, #28]
 744:	ldr	x0, [sp, #168]
 748:	cmp	w1, w27
 74c:	b.hi	7f4 <grub_lvm_detect+0x64c>  // b.pmore
 750:	ldr	x0, [sp, #168]
 754:	cbz	x0, 764 <grub_lvm_detect+0x5bc>
 758:	mov	w1, #0x7d                  	// #125
 75c:	bl	0 <grub_strchr>
 760:	str	x0, [sp, #168]
 764:	ldr	x0, [sp, #168]
 768:	cbz	x0, 544 <grub_lvm_detect+0x39c>
 76c:	add	x0, x0, #0x3
 770:	str	x0, [sp, #168]
 774:	cbz	w25, ce4 <grub_lvm_detect+0xb3c>
 778:	ldr	x0, [x21, #16]
 77c:	bl	0 <grub_free>
 780:	mov	x0, x21
 784:	bl	0 <grub_free>
 788:	b	5b0 <grub_lvm_detect+0x408>
 78c:	add	x0, x0, #0x1
 790:	str	x0, [sp, #168]
 794:	b	5b0 <grub_lvm_detect+0x408>
 798:	add	x19, x19, #0x1
 79c:	b	5e8 <grub_lvm_detect+0x440>
 7a0:	ldrb	w3, [x2]
 7a4:	strb	w3, [x1]
 7a8:	ldrb	w3, [x2]
 7ac:	cmp	w3, #0x2d
 7b0:	b.ne	7bc <grub_lvm_detect+0x614>  // b.any
 7b4:	add	x0, x1, #0x2
 7b8:	strb	w3, [x1, #1]
 7bc:	add	x2, x2, #0x1
 7c0:	mov	x1, x0
 7c4:	b	638 <grub_lvm_detect+0x490>
 7c8:	ldrb	w2, [x1]
 7cc:	strb	w2, [x0]
 7d0:	ldrb	w2, [x1]
 7d4:	cmp	w2, #0x2d
 7d8:	b.eq	7e8 <grub_lvm_detect+0x640>  // b.none
 7dc:	add	x0, x0, #0x1
 7e0:	add	x1, x1, #0x1
 7e4:	b	654 <grub_lvm_detect+0x4ac>
 7e8:	add	x0, x0, #0x2
 7ec:	sturb	w2, [x0, #-1]
 7f0:	b	7e0 <grub_lvm_detect+0x638>
 7f4:	adrp	x1, 0 <grub_strstr>
 7f8:	ldr	x1, [x1]
 7fc:	bl	0 <grub_strstr>
 800:	str	x0, [sp, #168]
 804:	cbz	x0, 858 <grub_lvm_detect+0x6b0>
 808:	adrp	x0, 0 <grub_strstr>
 80c:	ldr	x1, [x0]
 810:	add	x0, sp, #0xa8
 814:	bl	54 <grub_lvm_getvalue>
 818:	str	x0, [x19]
 81c:	ldr	x0, [sp, #168]
 820:	cbz	x0, 858 <grub_lvm_detect+0x6b0>
 824:	adrp	x0, 0 <grub_strstr>
 828:	ldr	x1, [x0]
 82c:	add	x0, sp, #0xa8
 830:	bl	54 <grub_lvm_getvalue>
 834:	mov	x7, x0
 838:	ldr	x0, [sp, #168]
 83c:	str	x7, [x19, #8]
 840:	cbz	x0, 858 <grub_lvm_detect+0x6b0>
 844:	adrp	x1, 0 <grub_strstr>
 848:	ldr	x1, [x1]
 84c:	bl	0 <grub_strstr>
 850:	cbnz	x0, 864 <grub_lvm_detect+0x6bc>
 854:	str	xzr, [sp, #168]
 858:	mov	x0, x20
 85c:	bl	0 <grub_free>
 860:	b	3c8 <grub_lvm_detect+0x220>
 864:	ldr	x2, [x20, #24]
 868:	add	x0, x0, #0x8
 86c:	ldr	x1, [x21, #40]
 870:	str	x0, [sp, #168]
 874:	madd	x7, x7, x2, x1
 878:	adrp	x1, 0 <grub_strstr>
 87c:	str	x7, [x21, #40]
 880:	mov	x2, #0x8                   	// #8
 884:	ldr	x1, [x1]
 888:	bl	0 <grub_memcmp>
 88c:	cbnz	w0, 9b8 <grub_lvm_detect+0x810>
 890:	adrp	x0, 0 <grub_strstr>
 894:	str	wzr, [x19, #16]
 898:	ldr	x1, [x0]
 89c:	add	x0, sp, #0xa8
 8a0:	bl	54 <grub_lvm_getvalue>
 8a4:	ldr	x1, [sp, #168]
 8a8:	str	w0, [x19, #32]
 8ac:	cbz	x1, 858 <grub_lvm_detect+0x6b0>
 8b0:	cmp	w0, #0x1
 8b4:	b.eq	8cc <grub_lvm_detect+0x724>  // b.none
 8b8:	adrp	x0, 0 <grub_strstr>
 8bc:	ldr	x1, [x0]
 8c0:	add	x0, sp, #0xa8
 8c4:	bl	54 <grub_lvm_getvalue>
 8c8:	str	w0, [x19, #48]
 8cc:	ldr	w0, [x19, #32]
 8d0:	lsl	x0, x0, #5
 8d4:	bl	0 <grub_zalloc>
 8d8:	mov	x24, x0
 8dc:	adrp	x0, 0 <grub_strstr>
 8e0:	ldr	x1, [x0]
 8e4:	ldr	x0, [sp, #168]
 8e8:	str	x24, [x19, #40]
 8ec:	bl	0 <grub_strstr>
 8f0:	cbz	x0, a14 <grub_lvm_detect+0x86c>
 8f4:	add	x0, x0, #0xb
 8f8:	mov	w28, #0x0                   	// #0
 8fc:	str	x0, [sp, #168]
 900:	ldr	w0, [x19, #32]
 904:	cmp	w0, w28
 908:	b.hi	918 <grub_lvm_detect+0x770>  // b.pmore
 90c:	add	x19, x19, #0x38
 910:	add	w27, w27, #0x1
 914:	b	740 <grub_lvm_detect+0x598>
 918:	ldr	x0, [sp, #168]
 91c:	mov	w1, #0x22                  	// #34
 920:	bl	0 <grub_strchr>
 924:	cbnz	x0, 934 <grub_lvm_detect+0x78c>
 928:	str	xzr, [sp, #168]
 92c:	add	w28, w28, #0x1
 930:	b	900 <grub_lvm_detect+0x758>
 934:	add	x2, x0, #0x1
 938:	str	x2, [sp, #168]
 93c:	mov	x3, x2
 940:	ldrb	w0, [x3]
 944:	cmp	w0, #0x22
 948:	b.ne	9b0 <grub_lvm_detect+0x808>  // b.any
 94c:	sub	x2, x3, x2
 950:	stp	x2, x3, [sp, #144]
 954:	add	x0, x2, #0x1
 958:	bl	0 <grub_malloc>
 95c:	str	x0, [x24, #8]
 960:	cbz	x0, a18 <grub_lvm_detect+0x870>
 964:	ldr	x2, [sp, #144]
 968:	ldr	x1, [sp, #168]
 96c:	bl	50 <grub_memcpy>
 970:	ldr	x0, [x24, #8]
 974:	ldp	x2, x3, [sp, #144]
 978:	strb	wzr, [x0, x2]
 97c:	adrp	x0, 0 <grub_strstr>
 980:	ldr	x1, [x0]
 984:	add	x0, sp, #0xa8
 988:	add	x3, x3, #0x1
 98c:	str	x3, [sp, #168]
 990:	bl	54 <grub_lvm_getvalue>
 994:	ldr	x1, [x20, #24]
 998:	mul	x1, x1, x0
 99c:	ldr	x0, [sp, #168]
 9a0:	str	x1, [x24]
 9a4:	cbz	x0, 92c <grub_lvm_detect+0x784>
 9a8:	add	x24, x24, #0x20
 9ac:	b	92c <grub_lvm_detect+0x784>
 9b0:	add	x3, x3, #0x1
 9b4:	b	940 <grub_lvm_detect+0x798>
 9b8:	adrp	x0, 0 <grub_strstr>
 9bc:	mov	x2, #0x7                   	// #7
 9c0:	ldr	x1, [x0]
 9c4:	ldr	x0, [sp, #168]
 9c8:	bl	0 <grub_memcmp>
 9cc:	cbnz	w0, ad4 <grub_lvm_detect+0x92c>
 9d0:	mov	w0, #0x1                   	// #1
 9d4:	str	w0, [x19, #16]
 9d8:	adrp	x0, 0 <grub_strstr>
 9dc:	ldr	x1, [x0]
 9e0:	add	x0, sp, #0xa8
 9e4:	bl	54 <grub_lvm_getvalue>
 9e8:	ldr	x1, [sp, #168]
 9ec:	str	w0, [x19, #32]
 9f0:	cbz	x1, 858 <grub_lvm_detect+0x6b0>
 9f4:	ubfiz	x0, x0, #5, #32
 9f8:	bl	0 <grub_zalloc>
 9fc:	str	x0, [x19, #40]
 a00:	adrp	x0, 0 <grub_strstr>
 a04:	ldr	x1, [x0]
 a08:	ldr	x0, [sp, #168]
 a0c:	bl	0 <grub_strstr>
 a10:	cbnz	x0, a24 <grub_lvm_detect+0x87c>
 a14:	str	xzr, [sp, #168]
 a18:	ldr	x0, [x19, #40]
 a1c:	bl	0 <grub_free>
 a20:	b	858 <grub_lvm_detect+0x6b0>
 a24:	add	x0, x0, #0xb
 a28:	mov	w24, #0x0                   	// #0
 a2c:	str	x0, [sp, #168]
 a30:	ldr	w0, [x19, #32]
 a34:	cmp	w0, w24
 a38:	b.hi	a50 <grub_lvm_detect+0x8a8>  // b.pmore
 a3c:	ldr	w0, [sp, #132]
 a40:	cbz	w0, 90c <grub_lvm_detect+0x764>
 a44:	mov	w0, #0x1                   	// #1
 a48:	str	w0, [x19, #32]
 a4c:	b	90c <grub_lvm_detect+0x764>
 a50:	ldr	x0, [sp, #168]
 a54:	mov	w1, #0x22                  	// #34
 a58:	bl	0 <grub_strchr>
 a5c:	cbnz	x0, a6c <grub_lvm_detect+0x8c4>
 a60:	str	xzr, [sp, #168]
 a64:	add	w24, w24, #0x1
 a68:	b	a30 <grub_lvm_detect+0x888>
 a6c:	add	x28, x0, #0x1
 a70:	str	x28, [sp, #168]
 a74:	mov	x3, x28
 a78:	ldrb	w0, [x3]
 a7c:	cmp	w0, #0x22
 a80:	b.ne	acc <grub_lvm_detect+0x924>  // b.any
 a84:	sub	x28, x3, x28
 a88:	str	x3, [sp, #152]
 a8c:	add	x0, x28, #0x1
 a90:	bl	0 <grub_malloc>
 a94:	str	x0, [sp, #144]
 a98:	cbz	x0, a18 <grub_lvm_detect+0x870>
 a9c:	ldr	x1, [sp, #168]
 aa0:	mov	x2, x28
 aa4:	bl	50 <grub_memcpy>
 aa8:	ldp	x4, x3, [sp, #144]
 aac:	strb	wzr, [x4, x28]
 ab0:	ubfiz	x0, x24, #5, #32
 ab4:	ldr	x1, [x19, #40]
 ab8:	add	x0, x1, x0
 abc:	add	x3, x3, #0x1
 ac0:	str	x3, [sp, #168]
 ac4:	str	x4, [x0, #8]
 ac8:	b	a64 <grub_lvm_detect+0x8bc>
 acc:	add	x3, x3, #0x1
 ad0:	b	a78 <grub_lvm_detect+0x8d0>
 ad4:	adrp	x0, 0 <grub_strstr>
 ad8:	mov	x2, #0x4                   	// #4
 adc:	ldr	x1, [x0]
 ae0:	ldr	x0, [sp, #168]
 ae4:	bl	0 <grub_memcmp>
 ae8:	cbnz	w0, cdc <grub_lvm_detect+0xb34>
 aec:	ldr	x2, [sp, #168]
 af0:	ldrb	w0, [x2, #4]
 af4:	sub	w1, w0, #0x34
 af8:	cmp	w0, #0x31
 afc:	and	w1, w1, #0xff
 b00:	ccmp	w1, #0x2, #0x0, ne  // ne = any
 b04:	b.hi	cdc <grub_lvm_detect+0xb34>  // b.pmore
 b08:	ldrb	w1, [x2, #5]
 b0c:	cmp	w1, #0x22
 b10:	b.ne	cdc <grub_lvm_detect+0xb34>  // b.any
 b14:	sub	w0, w0, #0x31
 b18:	cmp	w0, #0x5
 b1c:	b.hi	b40 <grub_lvm_detect+0x998>  // b.pmore
 b20:	adrp	x1, 0 <grub_strstr>
 b24:	ldr	x1, [x1]
 b28:	ldrb	w0, [x1, w0, uxtw]
 b2c:	adr	x1, b38 <grub_lvm_detect+0x990>
 b30:	add	x0, x1, w0, sxtb #2
 b34:	br	x0
 b38:	mov	w0, #0x1                   	// #1
 b3c:	str	w0, [x19, #16]
 b40:	adrp	x0, 0 <grub_strstr>
 b44:	ldr	x1, [x0]
 b48:	add	x0, sp, #0xa8
 b4c:	bl	54 <grub_lvm_getvalue>
 b50:	str	w0, [x19, #32]
 b54:	ldr	x0, [sp, #168]
 b58:	cbz	x0, 858 <grub_lvm_detect+0x6b0>
 b5c:	ldr	w0, [x19, #16]
 b60:	cmp	w0, #0x1
 b64:	b.ne	c10 <grub_lvm_detect+0xa68>  // b.any
 b68:	ldr	w0, [x19, #32]
 b6c:	lsl	x0, x0, #5
 b70:	bl	0 <grub_zalloc>
 b74:	str	x0, [x19, #40]
 b78:	adrp	x0, 0 <grub_strstr>
 b7c:	ldr	x1, [x0]
 b80:	ldr	x0, [sp, #168]
 b84:	bl	0 <grub_strstr>
 b88:	cbz	x0, a14 <grub_lvm_detect+0x86c>
 b8c:	add	x0, x0, #0x9
 b90:	mov	w24, #0x0                   	// #0
 b94:	str	x0, [sp, #168]
 b98:	ldr	w2, [x19, #32]
 b9c:	cmp	w2, w24
 ba0:	b.hi	c30 <grub_lvm_detect+0xa88>  // b.pmore
 ba4:	ldr	w0, [x19, #16]
 ba8:	cmp	w0, #0x4
 bac:	b.ne	90c <grub_lvm_detect+0x764>  // b.any
 bb0:	ldr	x0, [x19, #40]
 bb4:	sub	w2, w2, #0x1
 bb8:	add	x1, x0, #0x20
 bbc:	lsl	x2, x2, #5
 bc0:	ldr	x24, [x0, #8]
 bc4:	bl	0 <grub_memmove>
 bc8:	ldr	w0, [x19, #32]
 bcc:	ldr	x1, [x19, #40]
 bd0:	sub	w0, w0, #0x1
 bd4:	add	x0, x1, x0, lsl #5
 bd8:	str	x24, [x0, #8]
 bdc:	b	90c <grub_lvm_detect+0x764>
 be0:	mov	w0, #0x4                   	// #4
 be4:	stp	w0, wzr, [x19, #16]
 be8:	b	b40 <grub_lvm_detect+0x998>
 bec:	mov	w0, #0x5                   	// #5
 bf0:	str	w0, [x19, #16]
 bf4:	mov	w0, #0x2                   	// #2
 bf8:	str	w0, [x19, #20]
 bfc:	b	b40 <grub_lvm_detect+0x998>
 c00:	mov	w0, #0x6                   	// #6
 c04:	str	w0, [x19, #16]
 c08:	mov	w0, #0x5                   	// #5
 c0c:	b	bf8 <grub_lvm_detect+0xa50>
 c10:	adrp	x0, 0 <grub_strstr>
 c14:	ldr	x1, [x0]
 c18:	add	x0, sp, #0xa8
 c1c:	bl	54 <grub_lvm_getvalue>
 c20:	str	w0, [x19, #48]
 c24:	ldr	x0, [sp, #168]
 c28:	cbnz	x0, b68 <grub_lvm_detect+0x9c0>
 c2c:	b	858 <grub_lvm_detect+0x6b0>
 c30:	ldr	x0, [sp, #168]
 c34:	mov	w1, #0x22                  	// #34
 c38:	bl	0 <grub_strchr>
 c3c:	str	x0, [sp, #168]
 c40:	cbz	x0, c6c <grub_lvm_detect+0xac4>
 c44:	add	x0, x0, #0x1
 c48:	mov	w1, #0x22                  	// #34
 c4c:	bl	0 <grub_strchr>
 c50:	str	x0, [sp, #168]
 c54:	cbz	x0, c6c <grub_lvm_detect+0xac4>
 c58:	add	x0, x0, #0x1
 c5c:	mov	w1, #0x22                  	// #34
 c60:	bl	0 <grub_strchr>
 c64:	cbnz	x0, c74 <grub_lvm_detect+0xacc>
 c68:	str	xzr, [sp, #168]
 c6c:	add	w24, w24, #0x1
 c70:	b	b98 <grub_lvm_detect+0x9f0>
 c74:	add	x28, x0, #0x1
 c78:	str	x28, [sp, #168]
 c7c:	mov	x3, x28
 c80:	ldrb	w0, [x3]
 c84:	cmp	w0, #0x22
 c88:	b.ne	cd4 <grub_lvm_detect+0xb2c>  // b.any
 c8c:	sub	x28, x3, x28
 c90:	str	x3, [sp, #152]
 c94:	add	x0, x28, #0x1
 c98:	bl	0 <grub_malloc>
 c9c:	str	x0, [sp, #144]
 ca0:	cbz	x0, a18 <grub_lvm_detect+0x870>
 ca4:	ldr	x1, [sp, #168]
 ca8:	mov	x2, x28
 cac:	bl	50 <grub_memcpy>
 cb0:	ldp	x4, x3, [sp, #144]
 cb4:	strb	wzr, [x4, x28]
 cb8:	ubfiz	x0, x24, #5, #32
 cbc:	ldr	x1, [x19, #40]
 cc0:	add	x0, x1, x0
 cc4:	add	x3, x3, #0x1
 cc8:	str	x3, [sp, #168]
 ccc:	str	x4, [x0, #8]
 cd0:	b	c6c <grub_lvm_detect+0xac4>
 cd4:	add	x3, x3, #0x1
 cd8:	b	c80 <grub_lvm_detect+0xad8>
 cdc:	mov	w25, #0x1                   	// #1
 ce0:	b	750 <grub_lvm_detect+0x5a8>
 ce4:	ldr	x0, [x20, #40]
 ce8:	stp	x20, x0, [x21, #72]
 cec:	str	x21, [x20, #40]
 cf0:	b	5b0 <grub_lvm_detect+0x408>
 cf4:	str	xzr, [sp, #168]
 cf8:	ldr	x19, [x20, #40]
 cfc:	cbnz	x19, e3c <grub_lvm_detect+0xc94>
 d00:	mov	x0, x20
 d04:	bl	0 <grub_diskfilter_vg_register>
 d08:	cbnz	w0, 858 <grub_lvm_detect+0x6b0>
 d0c:	mov	x0, #0x26                  	// #38
 d10:	bl	0 <grub_malloc>
 d14:	ldr	x2, [sp, #96]
 d18:	str	x0, [x2]
 d1c:	cbz	x0, 858 <grub_lvm_detect+0x6b0>
 d20:	mov	x1, x26
 d24:	mov	x2, #0x26                  	// #38
 d28:	bl	50 <grub_memcpy>
 d2c:	ldr	x1, [sp, #96]
 d30:	mov	x0, #0x26                  	// #38
 d34:	str	x0, [x1, #8]
 d38:	mov	x0, x22
 d3c:	bl	0 <grub_free>
 d40:	ldr	x1, [sp, #136]
 d44:	mov	x0, #0xffffffffffffffff    	// #-1
 d48:	str	x0, [x1]
 d4c:	mov	x0, x20
 d50:	ldp	x29, x30, [sp]
 d54:	ldp	x19, x20, [sp, #16]
 d58:	ldp	x21, x22, [sp, #32]
 d5c:	ldp	x23, x24, [sp, #48]
 d60:	ldp	x25, x26, [sp, #64]
 d64:	ldp	x27, x28, [sp, #80]
 d68:	add	sp, sp, #0x300
 d6c:	ret
 d70:	ldr	x24, [x20, #32]
 d74:	ubfiz	x27, x28, #5, #32
 d78:	ldr	x0, [x19, #64]
 d7c:	add	x0, x0, x21
 d80:	ldr	x0, [x0, #40]
 d84:	add	x0, x0, x27
 d88:	cbnz	x24, dd8 <grub_lvm_detect+0xc30>
 d8c:	ldr	x0, [x0, #16]
 d90:	cbnz	x0, dfc <grub_lvm_detect+0xc54>
 d94:	ldr	x24, [x20, #40]
 d98:	ldr	x0, [x19, #64]
 d9c:	add	x0, x0, x21
 da0:	cbz	x24, dfc <grub_lvm_detect+0xc54>
 da4:	ldr	x0, [x0, #40]
 da8:	add	x0, x0, x27
 dac:	ldr	x1, [x0, #8]
 db0:	ldr	x0, [x24, #16]
 db4:	bl	0 <grub_strcmp>
 db8:	cbnz	w0, dd0 <grub_lvm_detect+0xc28>
 dbc:	ldr	x0, [x19, #64]
 dc0:	add	x0, x0, x21
 dc4:	ldr	x0, [x0, #40]
 dc8:	add	x0, x0, x27
 dcc:	str	x24, [x0, #24]
 dd0:	ldr	x24, [x24, #80]
 dd4:	b	d98 <grub_lvm_detect+0xbf0>
 dd8:	ldr	x1, [x0, #8]
 ddc:	ldr	x0, [x24, #16]
 de0:	bl	0 <grub_strcmp>
 de4:	cbnz	w0, e34 <grub_lvm_detect+0xc8c>
 de8:	ldr	x0, [x19, #64]
 dec:	add	x0, x0, x21
 df0:	ldr	x0, [x0, #40]
 df4:	add	x27, x0, x27
 df8:	str	x24, [x27, #16]
 dfc:	add	w28, w28, #0x1
 e00:	ldr	x0, [x19, #64]
 e04:	add	x0, x0, x21
 e08:	ldr	w0, [x0, #32]
 e0c:	cmp	w0, w28
 e10:	b.hi	d70 <grub_lvm_detect+0xbc8>  // b.pmore
 e14:	add	w25, w25, #0x1
 e18:	ldr	w0, [x19, #28]
 e1c:	cmp	w0, w25
 e20:	b.ls	e44 <grub_lvm_detect+0xc9c>  // b.plast
 e24:	mov	w0, #0x38                  	// #56
 e28:	mov	w28, #0x0                   	// #0
 e2c:	umull	x21, w25, w0
 e30:	b	e00 <grub_lvm_detect+0xc58>
 e34:	ldr	x24, [x24, #56]
 e38:	b	d78 <grub_lvm_detect+0xbd0>
 e3c:	mov	w25, #0x0                   	// #0
 e40:	b	e18 <grub_lvm_detect+0xc70>
 e44:	ldr	x19, [x19, #80]
 e48:	b	cfc <grub_lvm_detect+0xb54>
 e4c:	mov	x0, x23
 e50:	bl	0 <grub_free>
 e54:	b	d0c <grub_lvm_detect+0xb64>
	...

0000000000000f50 <grub_mod_init>:
 f50:	adrp	x0, 0 <grub_strstr>
 f54:	ldr	x0, [x0]
 f58:	ldr	x1, [x0]
 f5c:	cbnz	x1, f74 <grub_mod_init+0x24>
 f60:	adrp	x1, 0 <grub_strstr>
 f64:	ldr	x1, [x1]
 f68:	stp	xzr, x0, [x1]
 f6c:	str	x1, [x0]
 f70:	ret
 f74:	mov	x0, x1
 f78:	ldr	x1, [x1]
 f7c:	b	f5c <grub_mod_init+0xc>
	...

0000000000000f90 <grub_mod_fini>:
 f90:	adrp	x0, 0 <grub_strstr>
 f94:	ldr	x0, [x0]
 f98:	b	0 <grub_list_remove>
 f9c:	nop
	...
