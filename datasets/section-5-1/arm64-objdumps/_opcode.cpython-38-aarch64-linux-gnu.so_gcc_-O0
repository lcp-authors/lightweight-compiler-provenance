
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_opcode.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000009b0 <.init>:
 9b0:	stp	x29, x30, [sp, #-16]!
 9b4:	mov	x29, sp
 9b8:	bl	aa0 <_PyLong_AsInt@plt+0x10>
 9bc:	ldp	x29, x30, [sp], #16
 9c0:	ret

Disassembly of section .plt:

00000000000009d0 <__cxa_finalize@plt-0x20>:
 9d0:	stp	x16, x30, [sp, #-16]!
 9d4:	adrp	x16, 11000 <PyInit__opcode@@Base+0x10024>
 9d8:	ldr	x17, [x16, #4088]
 9dc:	add	x16, x16, #0xff8
 9e0:	br	x17
 9e4:	nop
 9e8:	nop
 9ec:	nop

00000000000009f0 <__cxa_finalize@plt>:
 9f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 9f4:	ldr	x17, [x16]
 9f8:	add	x16, x16, #0x0
 9fc:	br	x17

0000000000000a00 <_PyArg_UnpackKeywords@plt>:
 a00:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a04:	ldr	x17, [x16, #8]
 a08:	add	x16, x16, #0x8
 a0c:	br	x17

0000000000000a10 <PyErr_SetString@plt>:
 a10:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a14:	ldr	x17, [x16, #16]
 a18:	add	x16, x16, #0x10
 a1c:	br	x17

0000000000000a20 <PyLong_FromLong@plt>:
 a20:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a24:	ldr	x17, [x16, #24]
 a28:	add	x16, x16, #0x18
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a34:	ldr	x17, [x16, #32]
 a38:	add	x16, x16, #0x20
 a3c:	br	x17

0000000000000a40 <PyErr_Occurred@plt>:
 a40:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a44:	ldr	x17, [x16, #40]
 a48:	add	x16, x16, #0x28
 a4c:	br	x17

0000000000000a50 <PyModule_Create2@plt>:
 a50:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a54:	ldr	x17, [x16, #48]
 a58:	add	x16, x16, #0x30
 a5c:	br	x17

0000000000000a60 <PyLong_AsLong@plt>:
 a60:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a64:	ldr	x17, [x16, #56]
 a68:	add	x16, x16, #0x38
 a6c:	br	x17

0000000000000a70 <PyCompile_OpcodeStackEffectWithJump@plt>:
 a70:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a74:	ldr	x17, [x16, #64]
 a78:	add	x16, x16, #0x40
 a7c:	br	x17

0000000000000a80 <PyType_IsSubtype@plt>:
 a80:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a84:	ldr	x17, [x16, #72]
 a88:	add	x16, x16, #0x48
 a8c:	br	x17

0000000000000a90 <_PyLong_AsInt@plt>:
 a90:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a94:	ldr	x17, [x16, #80]
 a98:	add	x16, x16, #0x50
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <PyInit__opcode@@Base-0x53c>:
 aa0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 aa4:	ldr	x0, [x0, #4040]
 aa8:	cbz	x0, ab0 <_PyLong_AsInt@plt+0x20>
 aac:	b	a30 <__gmon_start__@plt>
 ab0:	ret
 ab4:	stp	x29, x30, [sp, #-32]!
 ab8:	mov	x29, sp
 abc:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 ac0:	add	x0, x0, #0x148
 ac4:	str	x0, [sp, #24]
 ac8:	ldr	x0, [sp, #24]
 acc:	str	x0, [sp, #24]
 ad0:	ldr	x1, [sp, #24]
 ad4:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 ad8:	add	x0, x0, #0x148
 adc:	cmp	x1, x0
 ae0:	b.eq	b18 <_PyLong_AsInt@plt+0x88>  // b.none
 ae4:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 ae8:	ldr	x0, [x0, #3992]
 aec:	str	x0, [sp, #16]
 af0:	ldr	x0, [sp, #16]
 af4:	str	x0, [sp, #16]
 af8:	ldr	x0, [sp, #16]
 afc:	cmp	x0, #0x0
 b00:	b.eq	b1c <_PyLong_AsInt@plt+0x8c>  // b.none
 b04:	ldr	x1, [sp, #16]
 b08:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 b0c:	add	x0, x0, #0x148
 b10:	blr	x1
 b14:	b	b1c <_PyLong_AsInt@plt+0x8c>
 b18:	nop
 b1c:	ldp	x29, x30, [sp], #32
 b20:	ret
 b24:	stp	x29, x30, [sp, #-48]!
 b28:	mov	x29, sp
 b2c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 b30:	add	x0, x0, #0x148
 b34:	str	x0, [sp, #40]
 b38:	ldr	x0, [sp, #40]
 b3c:	str	x0, [sp, #40]
 b40:	ldr	x1, [sp, #40]
 b44:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 b48:	add	x0, x0, #0x148
 b4c:	sub	x0, x1, x0
 b50:	asr	x0, x0, #3
 b54:	lsr	x1, x0, #63
 b58:	add	x0, x1, x0
 b5c:	asr	x0, x0, #1
 b60:	str	x0, [sp, #32]
 b64:	ldr	x0, [sp, #32]
 b68:	cmp	x0, #0x0
 b6c:	b.eq	ba8 <_PyLong_AsInt@plt+0x118>  // b.none
 b70:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 b74:	ldr	x0, [x0, #4064]
 b78:	str	x0, [sp, #24]
 b7c:	ldr	x0, [sp, #24]
 b80:	str	x0, [sp, #24]
 b84:	ldr	x0, [sp, #24]
 b88:	cmp	x0, #0x0
 b8c:	b.eq	bac <_PyLong_AsInt@plt+0x11c>  // b.none
 b90:	ldr	x2, [sp, #24]
 b94:	ldr	x1, [sp, #32]
 b98:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 b9c:	add	x0, x0, #0x148
 ba0:	blr	x2
 ba4:	b	bac <_PyLong_AsInt@plt+0x11c>
 ba8:	nop
 bac:	ldp	x29, x30, [sp], #48
 bb0:	ret
 bb4:	stp	x29, x30, [sp, #-16]!
 bb8:	mov	x29, sp
 bbc:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 bc0:	add	x0, x0, #0x148
 bc4:	ldrb	w0, [x0]
 bc8:	and	x0, x0, #0xff
 bcc:	cmp	x0, #0x0
 bd0:	b.ne	c0c <_PyLong_AsInt@plt+0x17c>  // b.any
 bd4:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 bd8:	ldr	x0, [x0, #4008]
 bdc:	cmp	x0, #0x0
 be0:	b.eq	bf4 <_PyLong_AsInt@plt+0x164>  // b.none
 be4:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 be8:	add	x0, x0, #0x58
 bec:	ldr	x0, [x0]
 bf0:	bl	9f0 <__cxa_finalize@plt>
 bf4:	bl	ab4 <_PyLong_AsInt@plt+0x24>
 bf8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 bfc:	add	x0, x0, #0x148
 c00:	mov	w1, #0x1                   	// #1
 c04:	strb	w1, [x0]
 c08:	b	c10 <_PyLong_AsInt@plt+0x180>
 c0c:	nop
 c10:	ldp	x29, x30, [sp], #16
 c14:	ret
 c18:	stp	x29, x30, [sp, #-16]!
 c1c:	mov	x29, sp
 c20:	bl	b24 <_PyLong_AsInt@plt+0x94>
 c24:	nop
 c28:	ldp	x29, x30, [sp], #16
 c2c:	ret
 c30:	sub	sp, sp, #0x80
 c34:	stp	x29, x30, [sp, #16]
 c38:	add	x29, sp, #0x10
 c3c:	str	x0, [sp, #56]
 c40:	str	x1, [sp, #48]
 c44:	str	x2, [sp, #40]
 c48:	str	x3, [sp, #32]
 c4c:	str	xzr, [sp, #120]
 c50:	ldr	x0, [sp, #32]
 c54:	cmp	x0, #0x0
 c58:	b.eq	c68 <_PyLong_AsInt@plt+0x1d8>  // b.none
 c5c:	ldr	x0, [sp, #32]
 c60:	ldr	x0, [x0, #16]
 c64:	b	c6c <_PyLong_AsInt@plt+0x1dc>
 c68:	mov	x0, #0x0                   	// #0
 c6c:	ldr	x1, [sp, #40]
 c70:	add	x0, x0, x1
 c74:	sub	x0, x0, #0x1
 c78:	str	x0, [sp, #112]
 c7c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 c80:	ldr	x0, [x0, #4048]
 c84:	str	x0, [sp, #104]
 c88:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 c8c:	ldr	x0, [x0, #4048]
 c90:	str	x0, [sp, #96]
 c94:	ldr	x0, [sp, #32]
 c98:	cmp	x0, #0x0
 c9c:	b.ne	cc4 <_PyLong_AsInt@plt+0x234>  // b.any
 ca0:	ldr	x0, [sp, #40]
 ca4:	cmp	x0, #0x0
 ca8:	b.le	cc4 <_PyLong_AsInt@plt+0x234>
 cac:	ldr	x0, [sp, #40]
 cb0:	cmp	x0, #0x2
 cb4:	b.gt	cc4 <_PyLong_AsInt@plt+0x234>
 cb8:	ldr	x0, [sp, #48]
 cbc:	cmp	x0, #0x0
 cc0:	b.ne	cf8 <_PyLong_AsInt@plt+0x268>  // b.any
 cc4:	add	x0, sp, #0x40
 cc8:	str	x0, [sp]
 ccc:	mov	w7, #0x0                   	// #0
 cd0:	mov	w6, #0x2                   	// #2
 cd4:	mov	w5, #0x1                   	// #1
 cd8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 cdc:	add	x4, x0, #0x108
 ce0:	ldr	x3, [sp, #32]
 ce4:	mov	x2, #0x0                   	// #0
 ce8:	ldr	x1, [sp, #40]
 cec:	ldr	x0, [sp, #48]
 cf0:	bl	a00 <_PyArg_UnpackKeywords@plt>
 cf4:	b	cfc <_PyLong_AsInt@plt+0x26c>
 cf8:	ldr	x0, [sp, #48]
 cfc:	str	x0, [sp, #48]
 d00:	ldr	x0, [sp, #48]
 d04:	cmp	x0, #0x0
 d08:	b.eq	e20 <_PyLong_AsInt@plt+0x390>  // b.none
 d0c:	ldr	x0, [sp, #48]
 d10:	ldr	x0, [x0]
 d14:	ldr	x1, [x0, #8]
 d18:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 d1c:	ldr	x0, [x0, #4000]
 d20:	cmp	x1, x0
 d24:	b.eq	d4c <_PyLong_AsInt@plt+0x2bc>  // b.none
 d28:	ldr	x0, [sp, #48]
 d2c:	ldr	x0, [x0]
 d30:	ldr	x2, [x0, #8]
 d34:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 d38:	ldr	x1, [x0, #4000]
 d3c:	mov	x0, x2
 d40:	bl	a80 <PyType_IsSubtype@plt>
 d44:	cmp	w0, #0x0
 d48:	b.eq	d6c <_PyLong_AsInt@plt+0x2dc>  // b.none
 d4c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 d50:	ldr	x0, [x0, #4024]
 d54:	ldr	x2, [x0]
 d58:	adrp	x0, 1000 <PyInit__opcode@@Base+0x24>
 d5c:	add	x1, x0, #0x78
 d60:	mov	x0, x2
 d64:	bl	a10 <PyErr_SetString@plt>
 d68:	b	e34 <_PyLong_AsInt@plt+0x3a4>
 d6c:	ldr	x0, [sp, #48]
 d70:	ldr	x0, [x0]
 d74:	bl	a90 <_PyLong_AsInt@plt>
 d78:	str	w0, [sp, #92]
 d7c:	ldr	w0, [sp, #92]
 d80:	cmn	w0, #0x1
 d84:	b.ne	d94 <_PyLong_AsInt@plt+0x304>  // b.any
 d88:	bl	a40 <PyErr_Occurred@plt>
 d8c:	cmp	x0, #0x0
 d90:	b.ne	e28 <_PyLong_AsInt@plt+0x398>  // b.any
 d94:	ldr	x0, [sp, #40]
 d98:	cmp	x0, #0x1
 d9c:	b.le	dbc <_PyLong_AsInt@plt+0x32c>
 da0:	ldr	x0, [sp, #112]
 da4:	sub	x0, x0, #0x1
 da8:	str	x0, [sp, #112]
 dac:	ldr	x0, [sp, #48]
 db0:	ldr	x0, [x0, #8]
 db4:	str	x0, [sp, #104]
 db8:	b	dc0 <_PyLong_AsInt@plt+0x330>
 dbc:	nop
 dc0:	ldr	x0, [sp, #112]
 dc4:	cmp	x0, #0x0
 dc8:	b.eq	ddc <_PyLong_AsInt@plt+0x34c>  // b.none
 dcc:	ldr	x0, [sp, #48]
 dd0:	ldr	x0, [x0, #16]
 dd4:	str	x0, [sp, #96]
 dd8:	b	de0 <_PyLong_AsInt@plt+0x350>
 ddc:	nop
 de0:	ldr	x3, [sp, #96]
 de4:	ldr	x2, [sp, #104]
 de8:	ldr	w1, [sp, #92]
 dec:	ldr	x0, [sp, #56]
 df0:	bl	e44 <_PyLong_AsInt@plt+0x3b4>
 df4:	str	w0, [sp, #88]
 df8:	ldr	w0, [sp, #88]
 dfc:	cmn	w0, #0x1
 e00:	b.ne	e10 <_PyLong_AsInt@plt+0x380>  // b.any
 e04:	bl	a40 <PyErr_Occurred@plt>
 e08:	cmp	x0, #0x0
 e0c:	b.ne	e30 <_PyLong_AsInt@plt+0x3a0>  // b.any
 e10:	ldrsw	x0, [sp, #88]
 e14:	bl	a20 <PyLong_FromLong@plt>
 e18:	str	x0, [sp, #120]
 e1c:	b	e34 <_PyLong_AsInt@plt+0x3a4>
 e20:	nop
 e24:	b	e34 <_PyLong_AsInt@plt+0x3a4>
 e28:	nop
 e2c:	b	e34 <_PyLong_AsInt@plt+0x3a4>
 e30:	nop
 e34:	ldr	x0, [sp, #120]
 e38:	ldp	x29, x30, [sp, #16]
 e3c:	add	sp, sp, #0x80
 e40:	ret
 e44:	stp	x29, x30, [sp, #-64]!
 e48:	mov	x29, sp
 e4c:	str	x0, [sp, #40]
 e50:	str	w1, [sp, #36]
 e54:	str	x2, [sp, #24]
 e58:	str	x3, [sp, #16]
 e5c:	str	wzr, [sp, #60]
 e60:	ldr	w0, [sp, #36]
 e64:	cmp	w0, #0x59
 e68:	b.le	ed0 <_PyLong_AsInt@plt+0x440>
 e6c:	ldr	x1, [sp, #24]
 e70:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 e74:	ldr	x0, [x0, #4048]
 e78:	cmp	x1, x0
 e7c:	b.ne	ea4 <_PyLong_AsInt@plt+0x414>  // b.any
 e80:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 e84:	ldr	x0, [x0, #4016]
 e88:	ldr	x2, [x0]
 e8c:	adrp	x0, 1000 <PyInit__opcode@@Base+0x24>
 e90:	add	x1, x0, #0xa0
 e94:	mov	x0, x2
 e98:	bl	a10 <PyErr_SetString@plt>
 e9c:	mov	w0, #0xffffffff            	// #-1
 ea0:	b	fd4 <_PyLong_AsInt@plt+0x544>
 ea4:	ldr	x0, [sp, #24]
 ea8:	bl	a60 <PyLong_AsLong@plt>
 eac:	str	w0, [sp, #60]
 eb0:	ldr	w0, [sp, #60]
 eb4:	cmn	w0, #0x1
 eb8:	b.ne	f08 <_PyLong_AsInt@plt+0x478>  // b.any
 ebc:	bl	a40 <PyErr_Occurred@plt>
 ec0:	cmp	x0, #0x0
 ec4:	b.eq	f08 <_PyLong_AsInt@plt+0x478>  // b.none
 ec8:	mov	w0, #0xffffffff            	// #-1
 ecc:	b	fd4 <_PyLong_AsInt@plt+0x544>
 ed0:	ldr	x1, [sp, #24]
 ed4:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 ed8:	ldr	x0, [x0, #4048]
 edc:	cmp	x1, x0
 ee0:	b.eq	f08 <_PyLong_AsInt@plt+0x478>  // b.none
 ee4:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 ee8:	ldr	x0, [x0, #4016]
 eec:	ldr	x2, [x0]
 ef0:	adrp	x0, 1000 <PyInit__opcode@@Base+0x24>
 ef4:	add	x1, x0, #0xe0
 ef8:	mov	x0, x2
 efc:	bl	a10 <PyErr_SetString@plt>
 f00:	mov	w0, #0xffffffff            	// #-1
 f04:	b	fd4 <_PyLong_AsInt@plt+0x544>
 f08:	ldr	x1, [sp, #16]
 f0c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 f10:	ldr	x0, [x0, #4048]
 f14:	cmp	x1, x0
 f18:	b.ne	f28 <_PyLong_AsInt@plt+0x498>  // b.any
 f1c:	mov	w0, #0xffffffff            	// #-1
 f20:	str	w0, [sp, #56]
 f24:	b	f88 <_PyLong_AsInt@plt+0x4f8>
 f28:	ldr	x1, [sp, #16]
 f2c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 f30:	ldr	x0, [x0, #4056]
 f34:	cmp	x1, x0
 f38:	b.ne	f48 <_PyLong_AsInt@plt+0x4b8>  // b.any
 f3c:	mov	w0, #0x1                   	// #1
 f40:	str	w0, [sp, #56]
 f44:	b	f88 <_PyLong_AsInt@plt+0x4f8>
 f48:	ldr	x1, [sp, #16]
 f4c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 f50:	ldr	x0, [x0, #4032]
 f54:	cmp	x1, x0
 f58:	b.ne	f64 <_PyLong_AsInt@plt+0x4d4>  // b.any
 f5c:	str	wzr, [sp, #56]
 f60:	b	f88 <_PyLong_AsInt@plt+0x4f8>
 f64:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 f68:	ldr	x0, [x0, #4016]
 f6c:	ldr	x2, [x0]
 f70:	adrp	x0, 1000 <PyInit__opcode@@Base+0x24>
 f74:	add	x1, x0, #0x128
 f78:	mov	x0, x2
 f7c:	bl	a10 <PyErr_SetString@plt>
 f80:	mov	w0, #0xffffffff            	// #-1
 f84:	b	fd4 <_PyLong_AsInt@plt+0x544>
 f88:	ldr	w2, [sp, #56]
 f8c:	ldr	w1, [sp, #60]
 f90:	ldr	w0, [sp, #36]
 f94:	bl	a70 <PyCompile_OpcodeStackEffectWithJump@plt>
 f98:	str	w0, [sp, #52]
 f9c:	ldr	w1, [sp, #52]
 fa0:	mov	w0, #0x7fffffff            	// #2147483647
 fa4:	cmp	w1, w0
 fa8:	b.ne	fd0 <_PyLong_AsInt@plt+0x540>  // b.any
 fac:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10024>
 fb0:	ldr	x0, [x0, #4016]
 fb4:	ldr	x2, [x0]
 fb8:	adrp	x0, 1000 <PyInit__opcode@@Base+0x24>
 fbc:	add	x1, x0, #0x158
 fc0:	mov	x0, x2
 fc4:	bl	a10 <PyErr_SetString@plt>
 fc8:	mov	w0, #0xffffffff            	// #-1
 fcc:	b	fd4 <_PyLong_AsInt@plt+0x544>
 fd0:	ldr	w0, [sp, #52]
 fd4:	ldp	x29, x30, [sp], #64
 fd8:	ret

0000000000000fdc <PyInit__opcode@@Base>:
 fdc:	stp	x29, x30, [sp, #-16]!
 fe0:	mov	x29, sp
 fe4:	mov	w1, #0x3f5                 	// #1013
 fe8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11024>
 fec:	add	x0, x0, #0xa0
 ff0:	bl	a50 <PyModule_Create2@plt>
 ff4:	ldp	x29, x30, [sp], #16
 ff8:	ret

Disassembly of section .fini:

0000000000000ffc <.fini>:
     ffc:	stp	x29, x30, [sp, #-16]!
    1000:	mov	x29, sp
    1004:	ldp	x29, x30, [sp], #16
    1008:	ret
