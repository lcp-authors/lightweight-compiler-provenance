
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//GBBIG5.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000670 <.init>:
 670:	stp	x29, x30, [sp, #-16]!
 674:	mov	x29, sp
 678:	bl	710 <__assert_fail@plt+0x10>
 67c:	ldp	x29, x30, [sp], #16
 680:	ret

Disassembly of section .plt:

0000000000000690 <__cxa_finalize@plt-0x20>:
 690:	stp	x16, x30, [sp, #-16]!
 694:	adrp	x16, 1c000 <gconv@@Base+0x1b798>
 698:	ldr	x17, [x16, #4088]
 69c:	add	x16, x16, #0xff8
 6a0:	br	x17
 6a4:	nop
 6a8:	nop
 6ac:	nop

00000000000006b0 <__cxa_finalize@plt>:
 6b0:	adrp	x16, 1d000 <__cxa_finalize@GLIBC_2.17>
 6b4:	ldr	x17, [x16]
 6b8:	add	x16, x16, #0x0
 6bc:	br	x17

00000000000006c0 <__stack_chk_fail@plt>:
 6c0:	adrp	x16, 1d000 <__cxa_finalize@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #8]
 6c8:	add	x16, x16, #0x8
 6cc:	br	x17

00000000000006d0 <__gmon_start__@plt>:
 6d0:	adrp	x16, 1d000 <__cxa_finalize@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #16]
 6d8:	add	x16, x16, #0x10
 6dc:	br	x17

00000000000006e0 <strcmp@plt>:
 6e0:	adrp	x16, 1d000 <__cxa_finalize@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #24]
 6e8:	add	x16, x16, #0x18
 6ec:	br	x17

00000000000006f0 <_dl_mcount_wrapper_check@plt>:
 6f0:	adrp	x16, 1d000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16, #32]
 6f8:	add	x16, x16, #0x20
 6fc:	br	x17

0000000000000700 <__assert_fail@plt>:
 700:	adrp	x16, 1d000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #40]
 708:	add	x16, x16, #0x28
 70c:	br	x17

Disassembly of section .text:

0000000000000710 <gconv_init@@Base-0xd8>:
     710:	adrp	x0, 1c000 <gconv@@Base+0x1b798>
     714:	ldr	x0, [x0, #4048]
     718:	cbz	x0, 720 <__assert_fail@plt+0x20>
     71c:	b	6d0 <__gmon_start__@plt>
     720:	ret
     724:	nop
     728:	adrp	x0, 1d000 <gconv@@Base+0x1c798>
     72c:	add	x0, x0, #0x38
     730:	adrp	x1, 1d000 <gconv@@Base+0x1c798>
     734:	add	x1, x1, #0x38
     738:	cmp	x1, x0
     73c:	b.eq	754 <__assert_fail@plt+0x54>  // b.none
     740:	adrp	x1, 1c000 <gconv@@Base+0x1b798>
     744:	ldr	x1, [x1, #4016]
     748:	cbz	x1, 754 <__assert_fail@plt+0x54>
     74c:	mov	x16, x1
     750:	br	x16
     754:	ret
     758:	adrp	x0, 1d000 <gconv@@Base+0x1c798>
     75c:	add	x0, x0, #0x38
     760:	adrp	x1, 1d000 <gconv@@Base+0x1c798>
     764:	add	x1, x1, #0x38
     768:	sub	x1, x1, x0
     76c:	lsr	x2, x1, #63
     770:	add	x1, x2, x1, asr #3
     774:	cmp	xzr, x1, asr #1
     778:	asr	x1, x1, #1
     77c:	b.eq	794 <__assert_fail@plt+0x94>  // b.none
     780:	adrp	x2, 1c000 <gconv@@Base+0x1b798>
     784:	ldr	x2, [x2, #4064]
     788:	cbz	x2, 794 <__assert_fail@plt+0x94>
     78c:	mov	x16, x2
     790:	br	x16
     794:	ret
     798:	stp	x29, x30, [sp, #-32]!
     79c:	mov	x29, sp
     7a0:	str	x19, [sp, #16]
     7a4:	adrp	x19, 1d000 <gconv@@Base+0x1c798>
     7a8:	ldrb	w0, [x19, #56]
     7ac:	cbnz	w0, 7d4 <__assert_fail@plt+0xd4>
     7b0:	adrp	x0, 1c000 <gconv@@Base+0x1b798>
     7b4:	ldr	x0, [x0, #4024]
     7b8:	cbz	x0, 7c8 <__assert_fail@plt+0xc8>
     7bc:	adrp	x0, 1d000 <gconv@@Base+0x1c798>
     7c0:	ldr	x0, [x0, #48]
     7c4:	bl	6b0 <__cxa_finalize@plt>
     7c8:	bl	728 <__assert_fail@plt+0x28>
     7cc:	mov	w0, #0x1                   	// #1
     7d0:	strb	w0, [x19, #56]
     7d4:	ldr	x19, [sp, #16]
     7d8:	ldp	x29, x30, [sp], #32
     7dc:	ret
     7e0:	b	758 <__assert_fail@plt+0x58>
     7e4:	nop

00000000000007e8 <gconv_init@@Base>:
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	stp	x19, x20, [sp, #16]
     7f4:	mov	x19, x0
     7f8:	adrp	x20, 1000 <gconv@@Base+0x798>
     7fc:	ldr	x0, [x0, #24]
     800:	add	x20, x20, #0x720
     804:	mov	x1, x20
     808:	bl	6e0 <strcmp@plt>
     80c:	cbnz	w0, 834 <gconv_init@@Base+0x4c>
     810:	mov	x0, #0x1                   	// #1
     814:	str	xzr, [x19, #96]
     818:	movk	x0, #0x2, lsl #32
     81c:	stp	x0, x0, [x19, #72]
     820:	mov	w0, #0x0                   	// #0
     824:	str	wzr, [x19, #88]
     828:	ldp	x19, x20, [sp, #16]
     82c:	ldp	x29, x30, [sp], #32
     830:	ret
     834:	ldr	x0, [x19, #32]
     838:	mov	x1, x20
     83c:	bl	6e0 <strcmp@plt>
     840:	cbnz	w0, 85c <gconv_init@@Base+0x74>
     844:	mov	x0, #0x1                   	// #1
     848:	mov	x1, #0xffffffffffffffff    	// #-1
     84c:	movk	x0, #0x2, lsl #32
     850:	stp	x0, x0, [x19, #72]
     854:	str	x1, [x19, #96]
     858:	b	820 <gconv_init@@Base+0x38>
     85c:	mov	w0, #0x1                   	// #1
     860:	b	828 <gconv_init@@Base+0x40>
     864:	nop

0000000000000868 <gconv@@Base>:
     868:	stp	x29, x30, [sp, #-192]!
     86c:	mov	x18, x0
     870:	mov	x14, x2
     874:	mov	x29, sp
     878:	stp	x19, x20, [sp, #16]
     87c:	mov	x20, x1
     880:	adrp	x1, 1c000 <gconv@@Base+0x1b798>
     884:	stp	x21, x22, [sp, #32]
     888:	mov	x15, x4
     88c:	mov	x22, x5
     890:	ldr	x8, [x1, #4056]
     894:	stp	x23, x24, [sp, #48]
     898:	ldr	w1, [x20, #16]
     89c:	ldr	x0, [x8]
     8a0:	str	x0, [sp, #184]
     8a4:	mov	x0, #0x0                   	// #0
     8a8:	stp	x25, x26, [sp, #64]
     8ac:	mov	x8, x3
     8b0:	stp	x27, x28, [sp, #80]
     8b4:	mov	w23, w7
     8b8:	add	x25, x18, #0x68
     8bc:	add	x27, x20, #0x30
     8c0:	mov	x21, #0x0                   	// #0
     8c4:	tbnz	w1, #0, 8e4 <gconv@@Base+0x7c>
     8c8:	ldr	x0, [x18, #104]
     8cc:	ldr	x21, [x25, #40]
     8d0:	cbz	x0, 8e4 <gconv@@Base+0x7c>
     8d4:	adrp	x0, 1c000 <gconv@@Base+0x1b798>
     8d8:	ldr	x0, [x0, #4040]
     8dc:	ldr	x0, [x0]
     8e0:	eor	x21, x21, x0
     8e4:	cbnz	w6, ff4 <gconv@@Base+0x78c>
     8e8:	cmp	x15, #0x0
     8ec:	add	x12, sp, #0xa0
     8f0:	csel	x0, x20, x15, eq  // eq = none
     8f4:	cmp	x22, #0x0
     8f8:	csel	x12, x12, xzr, ne  // ne = any
     8fc:	ldr	x11, [x14]
     900:	ldr	x26, [x0]
     904:	str	xzr, [sp, #160]
     908:	ldr	x24, [x20, #8]
     90c:	cbnz	w23, cb8 <gconv@@Base+0x450>
     910:	adrp	x0, 1c000 <gconv@@Base+0x1b798>
     914:	cmp	x8, x11
     918:	ldr	x0, [x0, #4032]
     91c:	str	x0, [sp, #152]
     920:	ldr	x0, [x18, #96]
     924:	cbz	x0, a1c <gconv@@Base+0x1b4>
     928:	b.eq	10d4 <gconv@@Base+0x86c>  // b.none
     92c:	cmp	x24, x26
     930:	b.ls	e04 <gconv@@Base+0x59c>  // b.plast
     934:	and	w2, w1, #0x2
     938:	mov	x19, x26
     93c:	mov	x1, x11
     940:	mov	w28, #0x4                   	// #4
     944:	mov	w5, #0x9d                  	// #157
     948:	mov	w4, #0xffff9d43            	// #-25277
     94c:	mov	w6, #0xfffff5a1            	// #-2655
     950:	ldrb	w0, [x1]
     954:	cmp	w0, #0x7f
     958:	b.hi	aec <gconv@@Base+0x284>  // b.pmore
     95c:	add	x1, x1, #0x1
     960:	strb	w0, [x19], #1
     964:	cmp	x8, x1
     968:	b.eq	978 <gconv@@Base+0x110>  // b.none
     96c:	cmp	x24, x19
     970:	b.hi	950 <gconv@@Base+0xe8>  // b.pmore
     974:	mov	w28, #0x5                   	// #5
     978:	str	x1, [x14]
     97c:	cbnz	x15, b94 <gconv@@Base+0x32c>
     980:	ldp	w1, w0, [x20, #16]
     984:	add	w0, w0, #0x1
     988:	str	w0, [x20, #20]
     98c:	tbnz	w1, #0, e10 <gconv@@Base+0x5a8>
     990:	stp	x12, x18, [sp, #104]
     994:	cmp	x26, x19
     998:	str	x15, [sp, #120]
     99c:	str	x11, [sp, #144]
     9a0:	b.cs	bd8 <gconv@@Base+0x370>  // b.hs, b.nlast
     9a4:	ldr	x1, [x20]
     9a8:	mov	x0, x21
     9ac:	stp	x14, x8, [sp, #128]
     9b0:	str	x1, [sp, #168]
     9b4:	bl	6f0 <_dl_mcount_wrapper_check@plt>
     9b8:	mov	w7, w23
     9bc:	mov	x5, x22
     9c0:	mov	x3, x19
     9c4:	add	x2, sp, #0xa8
     9c8:	mov	x1, x27
     9cc:	mov	x0, x25
     9d0:	mov	w6, #0x0                   	// #0
     9d4:	mov	x4, #0x0                   	// #0
     9d8:	blr	x21
     9dc:	cmp	w0, #0x4
     9e0:	ldp	x12, x18, [sp, #104]
     9e4:	ldp	x15, x14, [sp, #120]
     9e8:	ldr	x8, [sp, #136]
     9ec:	b.eq	bd0 <gconv@@Base+0x368>  // b.none
     9f0:	ldr	x1, [sp, #168]
     9f4:	ldr	x11, [sp, #144]
     9f8:	cmp	x1, x19
     9fc:	b.ne	d78 <gconv@@Base+0x510>  // b.any
     a00:	cbnz	w0, 16e0 <gconv@@Base+0xe78>
     a04:	ldr	x0, [x18, #96]
     a08:	ldr	x11, [x14]
     a0c:	ldr	w1, [x20, #16]
     a10:	cmp	x8, x11
     a14:	ldr	x26, [x20]
     a18:	cbnz	x0, 928 <gconv@@Base+0xc0>
     a1c:	b.eq	10d4 <gconv@@Base+0x86c>  // b.none
     a20:	cmp	x24, x26
     a24:	b.ls	e04 <gconv@@Base+0x59c>  // b.plast
     a28:	and	w2, w1, #0x2
     a2c:	mov	x1, x11
     a30:	adrp	x4, 8000 <gconv@@Base+0x7798>
     a34:	mov	x19, x26
     a38:	add	x4, x4, #0x610
     a3c:	mov	w28, #0x4                   	// #4
     a40:	ldrb	w0, [x1]
     a44:	mov	w5, #0x5e                  	// #94
     a48:	mov	w6, #0xffffc441            	// #-15295
     a4c:	mov	w7, #0xffffbca1            	// #-17247
     a50:	cmp	w0, #0x7f
     a54:	b.hi	a7c <gconv@@Base+0x214>  // b.pmore
     a58:	add	x1, x1, #0x1
     a5c:	strb	w0, [x19], #1
     a60:	cmp	x8, x1
     a64:	b.eq	978 <gconv@@Base+0x110>  // b.none
     a68:	cmp	x24, x19
     a6c:	b.ls	974 <gconv@@Base+0x10c>  // b.plast
     a70:	ldrb	w0, [x1]
     a74:	cmp	w0, #0x7f
     a78:	b.ls	a58 <gconv@@Base+0x1f0>  // b.plast
     a7c:	sub	w3, w0, #0xa1
     a80:	cmp	w3, #0x56
     a84:	b.hi	b80 <gconv@@Base+0x318>  // b.pmore
     a88:	add	x16, x1, #0x1
     a8c:	cmp	x8, x16
     a90:	b.ls	e28 <gconv@@Base+0x5c0>  // b.plast
     a94:	ldrb	w3, [x1, #1]
     a98:	mul	w0, w0, w5
     a9c:	cmp	w3, #0xa0
     aa0:	b.ls	10b4 <gconv@@Base+0x84c>  // b.plast
     aa4:	add	w3, w3, w6
     aa8:	add	w0, w3, w0
     aac:	lsl	x0, x0, #1
     ab0:	add	x3, x0, x4
     ab4:	ldrb	w0, [x0, x4]
     ab8:	cbz	w0, 10e4 <gconv@@Base+0x87c>
     abc:	ldrb	w17, [x3, #1]
     ac0:	add	x16, x19, #0x1
     ac4:	cbz	w17, ad0 <gconv@@Base+0x268>
     ac8:	cmp	x24, x16
     acc:	b.ls	974 <gconv@@Base+0x10c>  // b.plast
     ad0:	strb	w0, [x19]
     ad4:	ldrb	w0, [x3, #1]
     ad8:	cbz	w0, d6c <gconv@@Base+0x504>
     adc:	add	x19, x19, #0x2
     ae0:	add	x1, x1, #0x2
     ae4:	sturb	w0, [x19, #-1]
     ae8:	b	a60 <gconv@@Base+0x1f8>
     aec:	sub	w3, w0, #0xa1
     af0:	cmp	w3, #0x58
     af4:	b.hi	b60 <gconv@@Base+0x2f8>  // b.pmore
     af8:	add	x16, x1, #0x1
     afc:	cmp	x8, x16
     b00:	b.ls	e28 <gconv@@Base+0x5c0>  // b.plast
     b04:	ldrb	w3, [x1, #1]
     b08:	madd	w0, w0, w5, w4
     b0c:	sub	w7, w3, #0x40
     b10:	cmp	w7, #0x3e
     b14:	b.hi	c38 <gconv@@Base+0x3d0>  // b.pmore
     b18:	add	w0, w0, w7
     b1c:	ldr	x7, [sp, #152]
     b20:	sbfiz	x0, x0, #1, #32
     b24:	add	x3, x0, x7
     b28:	ldrb	w0, [x0, x7]
     b2c:	cbz	w0, c64 <gconv@@Base+0x3fc>
     b30:	ldrb	w16, [x3, #1]
     b34:	add	x7, x19, #0x1
     b38:	cbz	w16, b44 <gconv@@Base+0x2dc>
     b3c:	cmp	x24, x7
     b40:	b.ls	974 <gconv@@Base+0x10c>  // b.plast
     b44:	strb	w0, [x19]
     b48:	ldrb	w0, [x3, #1]
     b4c:	cbz	w0, c94 <gconv@@Base+0x42c>
     b50:	add	x19, x19, #0x2
     b54:	add	x1, x1, #0x2
     b58:	sturb	w0, [x19, #-1]
     b5c:	b	964 <gconv@@Base+0xfc>
     b60:	cbz	x12, b88 <gconv@@Base+0x320>
     b64:	cbz	w2, b88 <gconv@@Base+0x320>
     b68:	ldr	x0, [x12]
     b6c:	add	x1, x1, #0x1
     b70:	mov	w28, #0x6                   	// #6
     b74:	add	x0, x0, #0x1
     b78:	str	x0, [x12]
     b7c:	b	964 <gconv@@Base+0xfc>
     b80:	cbz	x12, b88 <gconv@@Base+0x320>
     b84:	cbnz	w2, ca0 <gconv@@Base+0x438>
     b88:	str	x1, [x14]
     b8c:	mov	w28, #0x6                   	// #6
     b90:	cbz	x15, 980 <gconv@@Base+0x118>
     b94:	str	x19, [x15]
     b98:	adrp	x0, 1c000 <gconv@@Base+0x1b798>
     b9c:	ldr	x24, [x0, #4056]
     ba0:	ldr	x1, [sp, #184]
     ba4:	ldr	x0, [x24]
     ba8:	eor	x0, x1, x0
     bac:	cbnz	x0, 1708 <gconv@@Base+0xea0>
     bb0:	mov	w0, w28
     bb4:	ldp	x19, x20, [sp, #16]
     bb8:	ldp	x21, x22, [sp, #32]
     bbc:	ldp	x23, x24, [sp, #48]
     bc0:	ldp	x25, x26, [sp, #64]
     bc4:	ldp	x27, x28, [sp, #80]
     bc8:	ldp	x29, x30, [sp], #192
     bcc:	ret
     bd0:	cmp	w28, #0x5
     bd4:	b.eq	a04 <gconv@@Base+0x19c>  // b.none
     bd8:	cmp	w23, #0x0
     bdc:	ccmp	w28, #0x7, #0x0, ne  // ne = any
     be0:	b.ne	b98 <gconv@@Base+0x330>  // b.any
     be4:	ldr	x0, [x14]
     be8:	sub	x3, x8, x0
     bec:	cmp	x3, #0x3
     bf0:	b.gt	1680 <gconv@@Base+0xe18>
     bf4:	ldr	x4, [x20, #32]
     bf8:	cmp	x0, x8
     bfc:	add	x0, x0, #0x1
     c00:	add	x1, x4, #0x4
     c04:	b.cs	14cc <gconv@@Base+0xc64>  // b.hs, b.nlast
     c08:	str	x0, [x14]
     c0c:	cmp	x8, x0
     c10:	add	x0, x0, #0x1
     c14:	ldurb	w2, [x0, #-2]
     c18:	strb	w2, [x1], #1
     c1c:	b.ne	c08 <gconv@@Base+0x3a0>  // b.any
     c20:	mov	w1, w3
     c24:	ldr	w0, [x4]
     c28:	and	w0, w0, #0xfffffff8
     c2c:	orr	w0, w0, w1
     c30:	str	w0, [x4]
     c34:	b	b98 <gconv@@Base+0x330>
     c38:	add	w7, w3, #0x5f
     c3c:	and	w7, w7, #0xff
     c40:	cmp	w7, #0x5d
     c44:	b.hi	f84 <gconv@@Base+0x71c>  // b.pmore
     c48:	sub	w3, w3, #0x62
     c4c:	add	w0, w3, w0
     c50:	ldr	x7, [sp, #152]
     c54:	sbfiz	x0, x0, #1, #32
     c58:	add	x3, x0, x7
     c5c:	ldrb	w0, [x0, x7]
     c60:	cbnz	w0, b30 <gconv@@Base+0x2c8>
     c64:	cbz	x12, b88 <gconv@@Base+0x320>
     c68:	cbz	w2, b88 <gconv@@Base+0x320>
     c6c:	add	x0, x19, #0x1
     c70:	cmp	x24, x0
     c74:	b.ls	974 <gconv@@Base+0x10c>  // b.plast
     c78:	ldr	x0, [x12]
     c7c:	add	x1, x1, #0x2
     c80:	mov	w28, #0x6                   	// #6
     c84:	strh	w6, [x19], #2
     c88:	add	x0, x0, #0x1
     c8c:	str	x0, [x12]
     c90:	b	964 <gconv@@Base+0xfc>
     c94:	mov	x19, x7
     c98:	add	x1, x1, #0x2
     c9c:	b	964 <gconv@@Base+0xfc>
     ca0:	ldr	x0, [x12]
     ca4:	add	x1, x1, #0x1
     ca8:	mov	w28, #0x6                   	// #6
     cac:	add	x0, x0, #0x1
     cb0:	str	x0, [x12]
     cb4:	b	a60 <gconv@@Base+0x1f8>
     cb8:	ldr	x4, [x20, #32]
     cbc:	ldr	w0, [x4]
     cc0:	ands	w2, w0, #0x7
     cc4:	b.eq	910 <gconv@@Base+0xa8>  // b.none
     cc8:	cbnz	x15, 16e8 <gconv@@Base+0xe80>
     ccc:	ldr	x3, [x18, #96]
     cd0:	mov	w5, w2
     cd4:	cmp	w2, #0x4
     cd8:	cbz	x3, e30 <gconv@@Base+0x5c8>
     cdc:	b.hi	16d0 <gconv@@Base+0xe68>  // b.pmore
     ce0:	cbz	w2, 11a0 <gconv@@Base+0x938>
     ce4:	ldrb	w3, [x4, #4]
     ce8:	tst	w0, #0x6
     cec:	strb	w3, [sp, #176]
     cf0:	mov	x6, #0x1                   	// #1
     cf4:	b.eq	d04 <gconv@@Base+0x49c>  // b.none
     cf8:	ldrb	w3, [x4, #5]
     cfc:	mov	x6, #0x2                   	// #2
     d00:	strb	w3, [sp, #177]
     d04:	cmp	x26, x24
     d08:	b.cs	11d4 <gconv@@Base+0x96c>  // b.hs, b.nlast
     d0c:	add	x3, sp, #0xb0
     d10:	ldrb	w7, [x11]
     d14:	add	x13, x6, #0x1
     d18:	strb	w7, [x3, x6]
     d1c:	ldrb	w6, [sp, #176]
     d20:	cmp	w6, #0x7f
     d24:	b.hi	1114 <gconv@@Base+0x8ac>  // b.pmore
     d28:	mov	x10, x26
     d2c:	mov	x1, #0x1                   	// #1
     d30:	strb	w6, [x10], #1
     d34:	ldr	w0, [x4]
     d38:	mov	x26, x10
     d3c:	and	w5, w0, #0x7
     d40:	mov	w2, w5
     d44:	cmp	x2, x1
     d48:	b.ge	1610 <gconv@@Base+0xda8>  // b.tcont
     d4c:	ldr	x11, [x14]
     d50:	sub	x2, x1, x2
     d54:	ldr	w1, [x20, #16]
     d58:	and	w0, w0, #0xfffffff8
     d5c:	add	x11, x11, x2
     d60:	str	x11, [x14]
     d64:	str	w0, [x4]
     d68:	b	910 <gconv@@Base+0xa8>
     d6c:	mov	x19, x16
     d70:	add	x1, x1, #0x2
     d74:	b	a60 <gconv@@Base+0x1f8>
     d78:	ldr	w4, [x20, #16]
     d7c:	cmp	x8, x11
     d80:	str	x11, [x14]
     d84:	ldr	x2, [x18, #96]
     d88:	cbz	x2, ec0 <gconv@@Base+0x658>
     d8c:	b.eq	14a0 <gconv@@Base+0xc38>  // b.none
     d90:	cmp	x1, x26
     d94:	mov	x2, x26
     d98:	mov	x5, #0x4                   	// #4
     d9c:	b.ls	1324 <gconv@@Base+0xabc>  // b.plast
     da0:	adrp	x3, 1c000 <gconv@@Base+0x1b798>
     da4:	and	w4, w4, #0x2
     da8:	mov	w13, #0x9d                  	// #157
     dac:	mov	w7, #0xffff9d43            	// #-25277
     db0:	ldr	x6, [x3, #4032]
     db4:	mov	w16, #0xfffff5a1            	// #-2655
     db8:	ldrb	w3, [x11]
     dbc:	cmp	w3, #0x7f
     dc0:	b.hi	f14 <gconv@@Base+0x6ac>  // b.pmore
     dc4:	add	x11, x11, #0x1
     dc8:	strb	w3, [x2], #1
     dcc:	cmp	x8, x11
     dd0:	b.eq	13d4 <gconv@@Base+0xb6c>  // b.none
     dd4:	cmp	x2, x1
     dd8:	b.cc	db8 <gconv@@Base+0x550>  // b.lo, b.ul, b.last
     ddc:	ldr	x1, [sp, #168]
     de0:	str	x11, [x14]
     de4:	cmp	x2, x1
     de8:	b.ne	1328 <gconv@@Base+0xac0>  // b.any
     dec:	cmp	x26, x2
     df0:	b.ne	a00 <gconv@@Base+0x198>  // b.any
     df4:	ldr	w1, [x20, #20]
     df8:	sub	w1, w1, #0x1
     dfc:	str	w1, [x20, #20]
     e00:	b	a00 <gconv@@Base+0x198>
     e04:	mov	x1, x11
     e08:	mov	x19, x26
     e0c:	b	974 <gconv@@Base+0x10c>
     e10:	ldr	x0, [x22]
     e14:	str	x19, [x20]
     e18:	ldr	x1, [sp, #160]
     e1c:	add	x0, x0, x1
     e20:	str	x0, [x22]
     e24:	b	bd8 <gconv@@Base+0x370>
     e28:	mov	w28, #0x7                   	// #7
     e2c:	b	978 <gconv@@Base+0x110>
     e30:	b.hi	1660 <gconv@@Base+0xdf8>  // b.pmore
     e34:	cbz	w2, 1244 <gconv@@Base+0x9dc>
     e38:	ldrb	w3, [x4, #4]
     e3c:	tst	w0, #0x6
     e40:	strb	w3, [sp, #176]
     e44:	mov	x7, #0x1                   	// #1
     e48:	b.eq	e58 <gconv@@Base+0x5f0>  // b.none
     e4c:	ldrb	w3, [x4, #5]
     e50:	mov	x7, #0x2                   	// #2
     e54:	strb	w3, [sp, #177]
     e58:	cmp	x26, x24
     e5c:	b.cs	11d4 <gconv@@Base+0x96c>  // b.hs, b.nlast
     e60:	add	x3, sp, #0xb0
     e64:	ldrb	w13, [x11]
     e68:	add	x6, x7, #0x1
     e6c:	strb	w13, [x3, x7]
     e70:	ldrb	w7, [sp, #176]
     e74:	cmp	w7, #0x7f
     e78:	b.hi	1298 <gconv@@Base+0xa30>  // b.pmore
     e7c:	mov	x10, x26
     e80:	mov	x1, #0x1                   	// #1
     e84:	strb	w7, [x10], #1
     e88:	ldr	w0, [x4]
     e8c:	mov	x26, x10
     e90:	and	w5, w0, #0x7
     e94:	mov	w2, w5
     e98:	cmp	x2, x1
     e9c:	b.ge	16c0 <gconv@@Base+0xe58>  // b.tcont
     ea0:	ldr	x11, [x14]
     ea4:	sub	x2, x1, x2
     ea8:	ldr	w1, [x20, #16]
     eac:	and	w0, w0, #0xfffffff8
     eb0:	add	x11, x11, x2
     eb4:	str	x11, [x14]
     eb8:	str	w0, [x4]
     ebc:	b	910 <gconv@@Base+0xa8>
     ec0:	b.eq	14a0 <gconv@@Base+0xc38>  // b.none
     ec4:	cmp	x1, x26
     ec8:	mov	x2, x26
     ecc:	mov	x5, #0x4                   	// #4
     ed0:	b.ls	1324 <gconv@@Base+0xabc>  // b.plast
     ed4:	adrp	x7, 8000 <gconv@@Base+0x7798>
     ed8:	and	w4, w4, #0x2
     edc:	add	x7, x7, #0x610
     ee0:	mov	w13, #0x5e                  	// #94
     ee4:	mov	w16, #0xffffc441            	// #-15295
     ee8:	mov	w17, #0xffffbca1            	// #-17247
     eec:	ldrb	w3, [x11]
     ef0:	cmp	w3, #0x7f
     ef4:	b.hi	1044 <gconv@@Base+0x7dc>  // b.pmore
     ef8:	add	x11, x11, #0x1
     efc:	strb	w3, [x2], #1
     f00:	cmp	x8, x11
     f04:	b.eq	14ac <gconv@@Base+0xc44>  // b.none
     f08:	cmp	x1, x2
     f0c:	b.hi	eec <gconv@@Base+0x684>  // b.pmore
     f10:	b	ddc <gconv@@Base+0x574>
     f14:	sub	w17, w3, #0xa1
     f18:	cmp	w17, #0x58
     f1c:	b.hi	fa4 <gconv@@Base+0x73c>  // b.pmore
     f20:	add	x19, x11, #0x1
     f24:	cmp	x8, x19
     f28:	b.ls	fc4 <gconv@@Base+0x75c>  // b.plast
     f2c:	ldrb	w17, [x11, #1]
     f30:	madd	w3, w3, w13, w7
     f34:	sub	w30, w17, #0x40
     f38:	cmp	w30, #0x3e
     f3c:	b.hi	11dc <gconv@@Base+0x974>  // b.pmore
     f40:	add	w3, w3, w30
     f44:	sbfiz	x3, x3, #1, #32
     f48:	add	x17, x3, x6
     f4c:	ldrb	w3, [x3, x6]
     f50:	cbz	w3, 1390 <gconv@@Base+0xb28>
     f54:	ldrb	w30, [x17, #1]
     f58:	add	x19, x2, #0x1
     f5c:	cbz	w30, f68 <gconv@@Base+0x700>
     f60:	cmp	x1, x19
     f64:	b.ls	ddc <gconv@@Base+0x574>  // b.plast
     f68:	strb	w3, [x2]
     f6c:	ldrb	w3, [x17, #1]
     f70:	cbz	w3, 1218 <gconv@@Base+0x9b0>
     f74:	add	x2, x2, #0x2
     f78:	add	x11, x11, #0x2
     f7c:	sturb	w3, [x2, #-1]
     f80:	b	dcc <gconv@@Base+0x564>
     f84:	cbz	x12, b88 <gconv@@Base+0x320>
     f88:	cbz	w2, b88 <gconv@@Base+0x320>
     f8c:	ldr	x0, [x12]
     f90:	mov	x1, x16
     f94:	mov	w28, #0x6                   	// #6
     f98:	add	x0, x0, #0x1
     f9c:	str	x0, [x12]
     fa0:	b	96c <gconv@@Base+0x104>
     fa4:	cbz	x12, fc4 <gconv@@Base+0x75c>
     fa8:	cbz	w4, fc4 <gconv@@Base+0x75c>
     fac:	ldr	x3, [x12]
     fb0:	add	x11, x11, #0x1
     fb4:	mov	x5, #0x6                   	// #6
     fb8:	add	x3, x3, #0x1
     fbc:	str	x3, [x12]
     fc0:	b	dcc <gconv@@Base+0x564>
     fc4:	ldr	x0, [sp, #168]
     fc8:	str	x11, [x14]
     fcc:	cmp	x2, x0
     fd0:	b.ne	1328 <gconv@@Base+0xac0>  // b.any
     fd4:	adrp	x3, 1000 <gconv@@Base+0x798>
     fd8:	adrp	x1, 1000 <gconv@@Base+0x798>
     fdc:	adrp	x0, 1000 <gconv@@Base+0x798>
     fe0:	add	x3, x3, #0x8d8
     fe4:	add	x1, x1, #0x730
     fe8:	add	x0, x0, #0x860
     fec:	mov	w2, #0x2eb                 	// #747
     ff0:	bl	700 <__assert_fail@plt>
     ff4:	cbnz	x15, 16a0 <gconv@@Base+0xe38>
     ff8:	ldr	x0, [x20, #32]
     ffc:	mov	w28, #0x0                   	// #0
    1000:	str	xzr, [x0]
    1004:	ldr	w0, [x20, #16]
    1008:	tbnz	w0, #0, b98 <gconv@@Base+0x330>
    100c:	mov	x0, x21
    1010:	str	w6, [sp, #104]
    1014:	bl	6f0 <_dl_mcount_wrapper_check@plt>
    1018:	ldr	w6, [sp, #104]
    101c:	mov	w7, w23
    1020:	mov	x5, x22
    1024:	mov	x1, x27
    1028:	mov	x0, x25
    102c:	mov	x4, #0x0                   	// #0
    1030:	mov	x3, #0x0                   	// #0
    1034:	mov	x2, #0x0                   	// #0
    1038:	blr	x21
    103c:	mov	w28, w0
    1040:	b	b98 <gconv@@Base+0x330>
    1044:	sub	w6, w3, #0xa1
    1048:	cmp	w6, #0x56
    104c:	b.hi	11f8 <gconv@@Base+0x990>  // b.pmore
    1050:	add	x19, x11, #0x1
    1054:	cmp	x8, x19
    1058:	b.ls	fc4 <gconv@@Base+0x75c>  // b.plast
    105c:	ldrb	w6, [x11, #1]
    1060:	mul	w3, w3, w13
    1064:	cmp	w6, #0xa0
    1068:	b.ls	1434 <gconv@@Base+0xbcc>  // b.plast
    106c:	add	w6, w6, w16
    1070:	add	w3, w6, w3
    1074:	lsl	x3, x3, #1
    1078:	add	x6, x3, x7
    107c:	ldrb	w3, [x3, x7]
    1080:	cbz	w3, 1404 <gconv@@Base+0xb9c>
    1084:	ldrb	w30, [x6, #1]
    1088:	add	x19, x2, #0x1
    108c:	cbz	w30, 1098 <gconv@@Base+0x830>
    1090:	cmp	x1, x19
    1094:	b.ls	ddc <gconv@@Base+0x574>  // b.plast
    1098:	strb	w3, [x2]
    109c:	ldrb	w3, [x6, #1]
    10a0:	cbz	w3, 1348 <gconv@@Base+0xae0>
    10a4:	add	x2, x2, #0x2
    10a8:	add	x11, x11, #0x2
    10ac:	sturb	w3, [x2, #-1]
    10b0:	b	f00 <gconv@@Base+0x698>
    10b4:	cbz	x12, b88 <gconv@@Base+0x320>
    10b8:	cbz	w2, b88 <gconv@@Base+0x320>
    10bc:	ldr	x0, [x12]
    10c0:	mov	x1, x16
    10c4:	mov	w28, #0x6                   	// #6
    10c8:	add	x0, x0, #0x1
    10cc:	str	x0, [x12]
    10d0:	b	a68 <gconv@@Base+0x200>
    10d4:	mov	x1, x8
    10d8:	mov	x19, x26
    10dc:	mov	w28, #0x4                   	// #4
    10e0:	b	978 <gconv@@Base+0x110>
    10e4:	cbz	x12, b88 <gconv@@Base+0x320>
    10e8:	cbz	w2, b88 <gconv@@Base+0x320>
    10ec:	add	x0, x19, #0x1
    10f0:	cmp	x24, x0
    10f4:	b.ls	974 <gconv@@Base+0x10c>  // b.plast
    10f8:	ldr	x0, [x12]
    10fc:	add	x1, x1, #0x2
    1100:	mov	w28, #0x6                   	// #6
    1104:	strh	w7, [x19], #2
    1108:	add	x0, x0, #0x1
    110c:	str	x0, [x12]
    1110:	b	a60 <gconv@@Base+0x1f8>
    1114:	sub	w7, w6, #0xa1
    1118:	cmp	w7, #0x58
    111c:	b.hi	1224 <gconv@@Base+0x9bc>  // b.pmore
    1120:	add	x7, x3, x13
    1124:	add	x16, x3, #0x1
    1128:	cmp	x7, x16
    112c:	b.ls	1454 <gconv@@Base+0xbec>  // b.plast
    1130:	ldrb	w3, [sp, #177]
    1134:	mov	w2, #0x9d                  	// #157
    1138:	mov	w11, #0xffff9d43            	// #-25277
    113c:	sub	w7, w3, #0x40
    1140:	madd	w6, w6, w2, w11
    1144:	cmp	w7, #0x3e
    1148:	b.hi	1354 <gconv@@Base+0xaec>  // b.pmore
    114c:	add	w0, w6, w7
    1150:	adrp	x2, 1c000 <gconv@@Base+0x1b798>
    1154:	sbfiz	x0, x0, #1, #32
    1158:	ldr	x2, [x2, #4032]
    115c:	add	x3, x0, x2
    1160:	ldrb	w0, [x0, x2]
    1164:	cbz	w0, 14d4 <gconv@@Base+0xc6c>
    1168:	ldrb	w2, [x3, #1]
    116c:	add	x1, x26, #0x1
    1170:	cbz	w2, 117c <gconv@@Base+0x914>
    1174:	cmp	x24, x1
    1178:	b.ls	11d4 <gconv@@Base+0x96c>  // b.plast
    117c:	strb	w0, [x26]
    1180:	ldrb	w0, [x3, #1]
    1184:	cbz	w0, 13c0 <gconv@@Base+0xb58>
    1188:	strb	w0, [x26, #1]
    118c:	mov	x1, #0x2                   	// #2
    1190:	add	x26, x26, x1
    1194:	ldr	w0, [x4]
    1198:	and	w5, w0, #0x7
    119c:	b	d40 <gconv@@Base+0x4d8>
    11a0:	cmp	x26, x24
    11a4:	b.cs	11d4 <gconv@@Base+0x96c>  // b.hs, b.nlast
    11a8:	mov	x7, x11
    11ac:	add	x3, sp, #0xb0
    11b0:	mov	x6, #0x0                   	// #0
    11b4:	ldrb	w16, [x7], #1
    11b8:	add	x13, x6, #0x1
    11bc:	strb	w16, [x3, x6]
    11c0:	cmp	x13, #0x1
    11c4:	ccmp	x8, x7, #0x0, ls  // ls = plast
    11c8:	mov	x6, #0x1                   	// #1
    11cc:	b.hi	11b4 <gconv@@Base+0x94c>  // b.pmore
    11d0:	b	d1c <gconv@@Base+0x4b4>
    11d4:	mov	w28, #0x5                   	// #5
    11d8:	b	b98 <gconv@@Base+0x330>
    11dc:	add	w30, w17, #0x5f
    11e0:	and	w30, w30, #0xff
    11e4:	cmp	w30, #0x5d
    11e8:	b.hi	1278 <gconv@@Base+0xa10>  // b.pmore
    11ec:	sub	w17, w17, #0x62
    11f0:	add	w3, w17, w3
    11f4:	b	f44 <gconv@@Base+0x6dc>
    11f8:	cbz	x12, fc4 <gconv@@Base+0x75c>
    11fc:	cbz	w4, fc4 <gconv@@Base+0x75c>
    1200:	ldr	x3, [x12]
    1204:	add	x11, x11, #0x1
    1208:	mov	x5, #0x6                   	// #6
    120c:	add	x3, x3, #0x1
    1210:	str	x3, [x12]
    1214:	b	f00 <gconv@@Base+0x698>
    1218:	mov	x2, x19
    121c:	add	x11, x11, #0x2
    1220:	b	dcc <gconv@@Base+0x564>
    1224:	mov	w28, #0x6                   	// #6
    1228:	cbz	x12, b98 <gconv@@Base+0x330>
    122c:	tbz	w1, #1, b98 <gconv@@Base+0x330>
    1230:	ldr	x2, [x12]
    1234:	mov	x1, #0x1                   	// #1
    1238:	add	x2, x2, x1
    123c:	str	x2, [x12]
    1240:	b	d40 <gconv@@Base+0x4d8>
    1244:	cmp	x26, x24
    1248:	b.cs	11d4 <gconv@@Base+0x96c>  // b.hs, b.nlast
    124c:	mov	x13, x11
    1250:	add	x3, sp, #0xb0
    1254:	mov	x7, #0x0                   	// #0
    1258:	ldrb	w16, [x13], #1
    125c:	add	x6, x7, #0x1
    1260:	strb	w16, [x3, x7]
    1264:	cmp	x6, #0x1
    1268:	ccmp	x8, x13, #0x0, ls  // ls = plast
    126c:	mov	x7, #0x1                   	// #1
    1270:	b.hi	1258 <gconv@@Base+0x9f0>  // b.pmore
    1274:	b	e70 <gconv@@Base+0x608>
    1278:	cbz	x12, fc4 <gconv@@Base+0x75c>
    127c:	cbz	w4, fc4 <gconv@@Base+0x75c>
    1280:	ldr	x3, [x12]
    1284:	mov	x11, x19
    1288:	mov	x5, #0x6                   	// #6
    128c:	add	x3, x3, #0x1
    1290:	str	x3, [x12]
    1294:	b	dd4 <gconv@@Base+0x56c>
    1298:	sub	w13, w7, #0xa1
    129c:	cmp	w13, #0x56
    12a0:	b.hi	1370 <gconv@@Base+0xb08>  // b.pmore
    12a4:	add	x13, x3, x6
    12a8:	add	x16, x3, #0x1
    12ac:	cmp	x13, x16
    12b0:	b.ls	1524 <gconv@@Base+0xcbc>  // b.plast
    12b4:	ldrb	w2, [sp, #177]
    12b8:	mov	w3, #0x5e                  	// #94
    12bc:	cmp	w2, #0xa0
    12c0:	mul	w7, w7, w3
    12c4:	b.ls	1514 <gconv@@Base+0xcac>  // b.plast
    12c8:	mov	w0, #0xffffc441            	// #-15295
    12cc:	add	w0, w2, w0
    12d0:	add	w0, w0, w7
    12d4:	adrp	x2, 8000 <gconv@@Base+0x7798>
    12d8:	add	x2, x2, #0x610
    12dc:	lsl	x0, x0, #1
    12e0:	add	x3, x0, x2
    12e4:	ldrb	w0, [x0, x2]
    12e8:	cbz	w0, 1570 <gconv@@Base+0xd08>
    12ec:	ldrb	w2, [x3, #1]
    12f0:	add	x1, x26, #0x1
    12f4:	cbz	w2, 1300 <gconv@@Base+0xa98>
    12f8:	cmp	x24, x1
    12fc:	b.ls	11d4 <gconv@@Base+0x96c>  // b.plast
    1300:	strb	w0, [x26]
    1304:	ldrb	w0, [x3, #1]
    1308:	cbz	w0, 13f0 <gconv@@Base+0xb88>
    130c:	strb	w0, [x26, #1]
    1310:	mov	x1, #0x2                   	// #2
    1314:	add	x26, x26, x1
    1318:	ldr	w0, [x4]
    131c:	and	w5, w0, #0x7
    1320:	b	e94 <gconv@@Base+0x62c>
    1324:	b.eq	df4 <gconv@@Base+0x58c>  // b.none
    1328:	adrp	x3, 1000 <gconv@@Base+0x798>
    132c:	adrp	x1, 1000 <gconv@@Base+0x798>
    1330:	adrp	x0, 1000 <gconv@@Base+0x798>
    1334:	add	x3, x3, #0x8d8
    1338:	add	x1, x1, #0x730
    133c:	add	x0, x0, #0x848
    1340:	mov	w2, #0x2ea                 	// #746
    1344:	bl	700 <__assert_fail@plt>
    1348:	mov	x2, x19
    134c:	add	x11, x11, #0x2
    1350:	b	f00 <gconv@@Base+0x698>
    1354:	add	w2, w3, #0x5f
    1358:	and	w2, w2, #0xff
    135c:	cmp	w2, #0x5d
    1360:	b.hi	1224 <gconv@@Base+0x9bc>  // b.pmore
    1364:	sub	w0, w3, #0x62
    1368:	add	w0, w0, w6
    136c:	b	1150 <gconv@@Base+0x8e8>
    1370:	mov	w28, #0x6                   	// #6
    1374:	cbz	x12, b98 <gconv@@Base+0x330>
    1378:	tbz	w1, #1, b98 <gconv@@Base+0x330>
    137c:	ldr	x2, [x12]
    1380:	mov	x1, #0x1                   	// #1
    1384:	add	x2, x2, x1
    1388:	str	x2, [x12]
    138c:	b	e94 <gconv@@Base+0x62c>
    1390:	cbz	x12, 14b8 <gconv@@Base+0xc50>
    1394:	cbz	w4, 14b8 <gconv@@Base+0xc50>
    1398:	add	x3, x2, #0x1
    139c:	cmp	x1, x3
    13a0:	b.ls	ddc <gconv@@Base+0x574>  // b.plast
    13a4:	ldr	x3, [x12]
    13a8:	add	x11, x11, #0x2
    13ac:	mov	x5, #0x6                   	// #6
    13b0:	strh	w16, [x2], #2
    13b4:	add	x3, x3, #0x1
    13b8:	str	x3, [x12]
    13bc:	b	dcc <gconv@@Base+0x564>
    13c0:	ldr	w0, [x4]
    13c4:	mov	x26, x1
    13c8:	mov	x1, #0x2                   	// #2
    13cc:	and	w5, w0, #0x7
    13d0:	b	d40 <gconv@@Base+0x4d8>
    13d4:	ldr	x1, [sp, #168]
    13d8:	str	x8, [x14]
    13dc:	cmp	x1, x2
    13e0:	b.ne	1328 <gconv@@Base+0xac0>  // b.any
    13e4:	cmp	x5, #0x5
    13e8:	b.eq	dec <gconv@@Base+0x584>  // b.none
    13ec:	b	fd4 <gconv@@Base+0x76c>
    13f0:	ldr	w0, [x4]
    13f4:	mov	x26, x1
    13f8:	mov	x1, #0x2                   	// #2
    13fc:	and	w5, w0, #0x7
    1400:	b	e94 <gconv@@Base+0x62c>
    1404:	cbz	x12, fc4 <gconv@@Base+0x75c>
    1408:	cbz	w4, fc4 <gconv@@Base+0x75c>
    140c:	add	x3, x2, #0x1
    1410:	cmp	x1, x3
    1414:	b.ls	ddc <gconv@@Base+0x574>  // b.plast
    1418:	ldr	x3, [x12]
    141c:	add	x11, x11, #0x2
    1420:	mov	x5, #0x6                   	// #6
    1424:	strh	w17, [x2], #2
    1428:	add	x3, x3, #0x1
    142c:	str	x3, [x12]
    1430:	b	f00 <gconv@@Base+0x698>
    1434:	cbz	x12, 14b8 <gconv@@Base+0xc50>
    1438:	cbz	w4, 14b8 <gconv@@Base+0xc50>
    143c:	ldr	x3, [x12]
    1440:	mov	x11, x19
    1444:	mov	x5, #0x6                   	// #6
    1448:	add	x3, x3, #0x1
    144c:	str	x3, [x12]
    1450:	b	f08 <gconv@@Base+0x6a0>
    1454:	add	x1, x3, #0x2
    1458:	cmp	x7, x1
    145c:	b.eq	1650 <gconv@@Base+0xde8>  // b.none
    1460:	mov	w1, w2
    1464:	and	w0, w0, #0xfffffff8
    1468:	sub	x1, x13, x1
    146c:	add	x11, x11, x1
    1470:	str	x11, [x14]
    1474:	cmp	x13, w0, sxtw
    1478:	b.le	1640 <gconv@@Base+0xdd8>
    147c:	cmp	x13, #0x4
    1480:	b.hi	1630 <gconv@@Base+0xdc8>  // b.pmore
    1484:	orr	w0, w0, w13
    1488:	str	w0, [x4]
    148c:	cmp	x7, x3
    1490:	mov	w28, #0x7                   	// #7
    1494:	b.ls	b98 <gconv@@Base+0x330>  // b.plast
    1498:	strb	w6, [x4, #4]
    149c:	b	b98 <gconv@@Base+0x330>
    14a0:	cmp	x1, x26
    14a4:	b.eq	fd4 <gconv@@Base+0x76c>  // b.none
    14a8:	b	1328 <gconv@@Base+0xac0>
    14ac:	str	x8, [x14]
    14b0:	ldr	x1, [sp, #168]
    14b4:	b	13dc <gconv@@Base+0xb74>
    14b8:	ldr	x0, [sp, #168]
    14bc:	str	x11, [x14]
    14c0:	cmp	x0, x2
    14c4:	b.eq	fd4 <gconv@@Base+0x76c>  // b.none
    14c8:	b	1328 <gconv@@Base+0xac0>
    14cc:	mov	w1, #0x0                   	// #0
    14d0:	b	c24 <gconv@@Base+0x3bc>
    14d4:	cbz	x12, 151c <gconv@@Base+0xcb4>
    14d8:	tbz	w1, #1, 151c <gconv@@Base+0xcb4>
    14dc:	add	x0, x26, #0x1
    14e0:	cmp	x24, x0
    14e4:	b.ls	11d4 <gconv@@Base+0x96c>  // b.plast
    14e8:	mov	x10, x26
    14ec:	mov	w2, #0xfffff5a1            	// #-2655
    14f0:	ldr	x0, [x12]
    14f4:	mov	x1, #0x2                   	// #2
    14f8:	strh	w2, [x10], #2
    14fc:	add	x0, x0, #0x1
    1500:	str	x0, [x12]
    1504:	ldr	w0, [x4]
    1508:	mov	x26, x10
    150c:	and	w5, w0, #0x7
    1510:	b	d40 <gconv@@Base+0x4d8>
    1514:	cbz	x12, 151c <gconv@@Base+0xcb4>
    1518:	tbnz	w1, #1, 137c <gconv@@Base+0xb14>
    151c:	mov	w28, #0x6                   	// #6
    1520:	b	b98 <gconv@@Base+0x330>
    1524:	add	x1, x3, #0x2
    1528:	cmp	x13, x1
    152c:	b.eq	15f0 <gconv@@Base+0xd88>  // b.none
    1530:	mov	w1, w2
    1534:	and	w0, w0, #0xfffffff8
    1538:	sub	x1, x6, x1
    153c:	add	x11, x11, x1
    1540:	str	x11, [x14]
    1544:	cmp	x6, w0, sxtw
    1548:	b.le	15d0 <gconv@@Base+0xd68>
    154c:	cmp	x6, #0x4
    1550:	b.hi	15b0 <gconv@@Base+0xd48>  // b.pmore
    1554:	orr	w0, w0, w6
    1558:	str	w0, [x4]
    155c:	cmp	x13, x3
    1560:	mov	w28, #0x7                   	// #7
    1564:	b.ls	b98 <gconv@@Base+0x330>  // b.plast
    1568:	strb	w7, [x4, #4]
    156c:	b	b98 <gconv@@Base+0x330>
    1570:	cbz	x12, 151c <gconv@@Base+0xcb4>
    1574:	tbz	w1, #1, 151c <gconv@@Base+0xcb4>
    1578:	add	x0, x26, #0x1
    157c:	cmp	x24, x0
    1580:	b.ls	11d4 <gconv@@Base+0x96c>  // b.plast
    1584:	mov	x10, x26
    1588:	mov	w2, #0xffffbca1            	// #-17247
    158c:	ldr	x0, [x12]
    1590:	mov	x1, #0x2                   	// #2
    1594:	strh	w2, [x10], #2
    1598:	add	x0, x0, #0x1
    159c:	str	x0, [x12]
    15a0:	ldr	w0, [x4]
    15a4:	mov	x26, x10
    15a8:	and	w5, w0, #0x7
    15ac:	b	e94 <gconv@@Base+0x62c>
    15b0:	adrp	x3, 1000 <gconv@@Base+0x798>
    15b4:	add	x3, x3, #0x8b8
    15b8:	adrp	x1, 1000 <gconv@@Base+0x798>
    15bc:	adrp	x0, 1000 <gconv@@Base+0x798>
    15c0:	add	x1, x1, #0x760
    15c4:	add	x0, x0, #0x818
    15c8:	mov	w2, #0x1e6                 	// #486
    15cc:	bl	700 <__assert_fail@plt>
    15d0:	adrp	x3, 1000 <gconv@@Base+0x798>
    15d4:	add	x3, x3, #0x8b8
    15d8:	adrp	x1, 1000 <gconv@@Base+0x798>
    15dc:	adrp	x0, 1000 <gconv@@Base+0x798>
    15e0:	add	x1, x1, #0x760
    15e4:	add	x0, x0, #0x7f0
    15e8:	mov	w2, #0x1e5                 	// #485
    15ec:	bl	700 <__assert_fail@plt>
    15f0:	adrp	x3, 1000 <gconv@@Base+0x798>
    15f4:	add	x3, x3, #0x8b8
    15f8:	adrp	x1, 1000 <gconv@@Base+0x798>
    15fc:	adrp	x0, 1000 <gconv@@Base+0x798>
    1600:	add	x1, x1, #0x760
    1604:	add	x0, x0, #0x7c8
    1608:	mov	w2, #0x1db                 	// #475
    160c:	bl	700 <__assert_fail@plt>
    1610:	adrp	x3, 1000 <gconv@@Base+0x798>
    1614:	add	x3, x3, #0x898
    1618:	adrp	x1, 1000 <gconv@@Base+0x798>
    161c:	adrp	x0, 1000 <gconv@@Base+0x798>
    1620:	add	x1, x1, #0x760
    1624:	add	x0, x0, #0x7a0
    1628:	mov	w2, #0x1c9                 	// #457
    162c:	bl	700 <__assert_fail@plt>
    1630:	adrp	x3, 1000 <gconv@@Base+0x798>
    1634:	adrp	x1, 1000 <gconv@@Base+0x798>
    1638:	add	x3, x3, #0x898
    163c:	b	15bc <gconv@@Base+0xd54>
    1640:	adrp	x3, 1000 <gconv@@Base+0x798>
    1644:	adrp	x1, 1000 <gconv@@Base+0x798>
    1648:	add	x3, x3, #0x898
    164c:	b	15dc <gconv@@Base+0xd74>
    1650:	adrp	x3, 1000 <gconv@@Base+0x798>
    1654:	adrp	x1, 1000 <gconv@@Base+0x798>
    1658:	add	x3, x3, #0x898
    165c:	b	15fc <gconv@@Base+0xd94>
    1660:	adrp	x3, 1000 <gconv@@Base+0x798>
    1664:	add	x3, x3, #0x8b8
    1668:	adrp	x1, 1000 <gconv@@Base+0x798>
    166c:	adrp	x0, 1000 <gconv@@Base+0x798>
    1670:	add	x1, x1, #0x760
    1674:	add	x0, x0, #0x770
    1678:	mov	w2, #0x18b                 	// #395
    167c:	bl	700 <__assert_fail@plt>
    1680:	adrp	x3, 1000 <gconv@@Base+0x798>
    1684:	adrp	x1, 1000 <gconv@@Base+0x798>
    1688:	adrp	x0, 1000 <gconv@@Base+0x798>
    168c:	add	x3, x3, #0x8d8
    1690:	add	x1, x1, #0x730
    1694:	add	x0, x0, #0x880
    1698:	mov	w2, #0x31e                 	// #798
    169c:	bl	700 <__assert_fail@plt>
    16a0:	adrp	x3, 1000 <gconv@@Base+0x798>
    16a4:	adrp	x1, 1000 <gconv@@Base+0x798>
    16a8:	adrp	x0, 1000 <gconv@@Base+0x798>
    16ac:	add	x3, x3, #0x8d8
    16b0:	add	x1, x1, #0x730
    16b4:	add	x0, x0, #0x748
    16b8:	mov	w2, #0x1a4                 	// #420
    16bc:	bl	700 <__assert_fail@plt>
    16c0:	adrp	x3, 1000 <gconv@@Base+0x798>
    16c4:	adrp	x1, 1000 <gconv@@Base+0x798>
    16c8:	add	x3, x3, #0x8b8
    16cc:	b	161c <gconv@@Base+0xdb4>
    16d0:	adrp	x3, 1000 <gconv@@Base+0x798>
    16d4:	adrp	x1, 1000 <gconv@@Base+0x798>
    16d8:	add	x3, x3, #0x898
    16dc:	b	166c <gconv@@Base+0xe04>
    16e0:	mov	w28, w0
    16e4:	b	bd8 <gconv@@Base+0x370>
    16e8:	adrp	x3, 1000 <gconv@@Base+0x798>
    16ec:	adrp	x1, 1000 <gconv@@Base+0x798>
    16f0:	adrp	x0, 1000 <gconv@@Base+0x798>
    16f4:	add	x3, x3, #0x8d8
    16f8:	add	x1, x1, #0x730
    16fc:	add	x0, x0, #0x748
    1700:	mov	w2, #0x234                 	// #564
    1704:	bl	700 <__assert_fail@plt>
    1708:	bl	6c0 <__stack_chk_fail@plt>

Disassembly of section .fini:

000000000000170c <.fini>:
    170c:	stp	x29, x30, [sp, #-16]!
    1710:	mov	x29, sp
    1714:	ldp	x29, x30, [sp], #16
    1718:	ret
