
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//video_colors.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_isdigit>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	cmp	w0, #0x2f
  10:	b.le	28 <grub_isdigit+0x28>
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x39
  1c:	b.gt	28 <grub_isdigit+0x28>
  20:	mov	w0, #0x1                   	// #1
  24:	b	2c <grub_isdigit+0x2c>
  28:	mov	w0, #0x0                   	// #0
  2c:	add	sp, sp, #0x10
  30:	ret

0000000000000034 <grub_isxdigit>:
  34:	sub	sp, sp, #0x10
  38:	str	w0, [sp, #12]
  3c:	ldr	w0, [sp, #12]
  40:	cmp	w0, #0x2f
  44:	b.le	54 <grub_isxdigit+0x20>
  48:	ldr	w0, [sp, #12]
  4c:	cmp	w0, #0x39
  50:	b.le	84 <grub_isxdigit+0x50>
  54:	ldr	w0, [sp, #12]
  58:	cmp	w0, #0x60
  5c:	b.le	6c <grub_isxdigit+0x38>
  60:	ldr	w0, [sp, #12]
  64:	cmp	w0, #0x66
  68:	b.le	84 <grub_isxdigit+0x50>
  6c:	ldr	w0, [sp, #12]
  70:	cmp	w0, #0x40
  74:	b.le	8c <grub_isxdigit+0x58>
  78:	ldr	w0, [sp, #12]
  7c:	cmp	w0, #0x46
  80:	b.gt	8c <grub_isxdigit+0x58>
  84:	mov	w0, #0x1                   	// #1
  88:	b	90 <grub_isxdigit+0x5c>
  8c:	mov	w0, #0x0                   	// #0
  90:	add	sp, sp, #0x10
  94:	ret

0000000000000098 <grub_video_get_named_color>:
  98:	stp	x29, x30, [sp, #-48]!
  9c:	mov	x29, sp
  a0:	str	x0, [sp, #24]
  a4:	str	x1, [sp, #16]
  a8:	str	wzr, [sp, #44]
  ac:	b	114 <grub_video_get_named_color+0x7c>
  b0:	adrp	x0, 0 <grub_isdigit>
  b4:	add	x0, x0, #0x0
  b8:	ldr	x1, [x0]
  bc:	ldrsw	x0, [sp, #44]
  c0:	lsl	x0, x0, #4
  c4:	add	x0, x1, x0
  c8:	ldr	x0, [x0]
  cc:	ldr	x1, [sp, #24]
  d0:	bl	0 <grub_strcmp>
  d4:	cmp	w0, #0x0
  d8:	b.ne	108 <grub_video_get_named_color+0x70>  // b.any
  dc:	ldr	x0, [sp, #16]
  e0:	adrp	x1, 0 <grub_isdigit>
  e4:	add	x1, x1, #0x0
  e8:	ldr	x2, [x1]
  ec:	ldrsw	x1, [sp, #44]
  f0:	lsl	x1, x1, #4
  f4:	add	x1, x2, x1
  f8:	ldr	w1, [x1, #8]
  fc:	str	w1, [x0]
 100:	mov	w0, #0x1                   	// #1
 104:	b	13c <grub_video_get_named_color+0xa4>
 108:	ldr	w0, [sp, #44]
 10c:	add	w0, w0, #0x1
 110:	str	w0, [sp, #44]
 114:	adrp	x0, 0 <grub_isdigit>
 118:	add	x0, x0, #0x0
 11c:	ldr	x1, [x0]
 120:	ldrsw	x0, [sp, #44]
 124:	lsl	x0, x0, #4
 128:	add	x0, x1, x0
 12c:	ldr	x0, [x0]
 130:	cmp	x0, #0x0
 134:	b.ne	b0 <grub_video_get_named_color+0x18>  // b.any
 138:	mov	w0, #0x0                   	// #0
 13c:	ldp	x29, x30, [sp], #48
 140:	ret
 144:	nop
	...

0000000000000150 <parse_hex_color_component>:
 150:	stp	x29, x30, [sp, #-48]!
 154:	mov	x29, sp
 158:	str	x0, [sp, #24]
 15c:	str	w1, [sp, #20]
 160:	str	w2, [sp, #16]
 164:	ldr	w1, [sp, #16]
 168:	ldr	w0, [sp, #20]
 16c:	sub	w0, w1, w0
 170:	str	w0, [sp, #44]
 174:	ldr	w0, [sp, #44]
 178:	cmp	w0, #0x0
 17c:	b.eq	18c <parse_hex_color_component+0x3c>  // b.none
 180:	ldr	w0, [sp, #44]
 184:	cmp	w0, #0x2
 188:	b.ls	194 <parse_hex_color_component+0x44>  // b.plast
 18c:	mov	w0, #0x0                   	// #0
 190:	b	210 <parse_hex_color_component+0xc0>
 194:	ldr	w0, [sp, #44]
 198:	cmp	w0, #0x1
 19c:	b.ne	1c0 <parse_hex_color_component+0x70>  // b.any
 1a0:	ldr	w0, [sp, #20]
 1a4:	ldr	x1, [sp, #24]
 1a8:	add	x0, x1, x0
 1ac:	ldrb	w0, [x0]
 1b0:	strb	w0, [sp, #40]
 1b4:	ldrb	w0, [sp, #40]
 1b8:	strb	w0, [sp, #41]
 1bc:	b	1fc <parse_hex_color_component+0xac>
 1c0:	ldr	w0, [sp, #44]
 1c4:	cmp	w0, #0x2
 1c8:	b.ne	1fc <parse_hex_color_component+0xac>  // b.any
 1cc:	ldr	w0, [sp, #20]
 1d0:	ldr	x1, [sp, #24]
 1d4:	add	x0, x1, x0
 1d8:	ldrb	w0, [x0]
 1dc:	strb	w0, [sp, #40]
 1e0:	ldr	w0, [sp, #20]
 1e4:	add	w0, w0, #0x1
 1e8:	mov	w0, w0
 1ec:	ldr	x1, [sp, #24]
 1f0:	add	x0, x1, x0
 1f4:	ldrb	w0, [x0]
 1f8:	strb	w0, [sp, #41]
 1fc:	strb	wzr, [sp, #42]
 200:	add	x0, sp, #0x28
 204:	mov	w2, #0x10                  	// #16
 208:	mov	x1, #0x0                   	// #0
 20c:	bl	0 <grub_strtoul>
 210:	ldp	x29, x30, [sp], #48
 214:	ret

0000000000000218 <grub_video_parse_color>:
 218:	stp	x29, x30, [sp, #-64]!
 21c:	mov	x29, sp
 220:	str	x0, [sp, #24]
 224:	str	x1, [sp, #16]
 228:	b	238 <grub_video_parse_color+0x20>
 22c:	ldr	x0, [sp, #24]
 230:	add	x0, x0, #0x1
 234:	str	x0, [sp, #24]
 238:	ldr	x0, [sp, #24]
 23c:	ldrb	w0, [x0]
 240:	cmp	w0, #0x0
 244:	b.eq	25c <grub_video_parse_color+0x44>  // b.none
 248:	ldr	x0, [sp, #24]
 24c:	ldrb	w0, [x0]
 250:	bl	0 <grub_isspace>
 254:	cmp	w0, #0x0
 258:	b.ne	22c <grub_video_parse_color+0x14>  // b.any
 25c:	ldr	x0, [sp, #24]
 260:	str	x0, [sp, #40]
 264:	ldr	x0, [sp, #24]
 268:	ldrb	w0, [x0]
 26c:	cmp	w0, #0x23
 270:	b.ne	400 <grub_video_parse_color+0x1e8>  // b.any
 274:	ldr	x0, [sp, #24]
 278:	add	x0, x0, #0x1
 27c:	str	x0, [sp, #24]
 280:	str	wzr, [sp, #60]
 284:	ldr	x0, [sp, #24]
 288:	str	x0, [sp, #48]
 28c:	b	2a8 <grub_video_parse_color+0x90>
 290:	ldr	x0, [sp, #48]
 294:	add	x0, x0, #0x1
 298:	str	x0, [sp, #48]
 29c:	ldr	w0, [sp, #60]
 2a0:	add	w0, w0, #0x1
 2a4:	str	w0, [sp, #60]
 2a8:	ldr	x0, [sp, #48]
 2ac:	ldrb	w0, [x0]
 2b0:	bl	34 <grub_isxdigit>
 2b4:	cmp	w0, #0x0
 2b8:	b.ne	290 <grub_video_parse_color+0x78>  // b.any
 2bc:	ldr	w0, [sp, #60]
 2c0:	cmp	w0, #0x3
 2c4:	b.eq	2d4 <grub_video_parse_color+0xbc>  // b.none
 2c8:	ldr	w0, [sp, #60]
 2cc:	cmp	w0, #0x4
 2d0:	b.ne	350 <grub_video_parse_color+0x138>  // b.any
 2d4:	mov	w2, #0x1                   	// #1
 2d8:	mov	w1, #0x0                   	// #0
 2dc:	ldr	x0, [sp, #24]
 2e0:	bl	150 <parse_hex_color_component>
 2e4:	and	w0, w0, #0xff
 2e8:	strb	w0, [sp, #32]
 2ec:	mov	w2, #0x2                   	// #2
 2f0:	mov	w1, #0x1                   	// #1
 2f4:	ldr	x0, [sp, #24]
 2f8:	bl	150 <parse_hex_color_component>
 2fc:	and	w0, w0, #0xff
 300:	strb	w0, [sp, #33]
 304:	mov	w2, #0x3                   	// #3
 308:	mov	w1, #0x2                   	// #2
 30c:	ldr	x0, [sp, #24]
 310:	bl	150 <parse_hex_color_component>
 314:	and	w0, w0, #0xff
 318:	strb	w0, [sp, #34]
 31c:	ldr	w0, [sp, #60]
 320:	cmp	w0, #0x4
 324:	b.ne	344 <grub_video_parse_color+0x12c>  // b.any
 328:	mov	w2, #0x4                   	// #4
 32c:	mov	w1, #0x3                   	// #3
 330:	ldr	x0, [sp, #24]
 334:	bl	150 <parse_hex_color_component>
 338:	and	w0, w0, #0xff
 33c:	strb	w0, [sp, #35]
 340:	b	568 <grub_video_parse_color+0x350>
 344:	mov	w0, #0xffffffff            	// #-1
 348:	strb	w0, [sp, #35]
 34c:	b	568 <grub_video_parse_color+0x350>
 350:	ldr	w0, [sp, #60]
 354:	cmp	w0, #0x6
 358:	b.eq	368 <grub_video_parse_color+0x150>  // b.none
 35c:	ldr	w0, [sp, #60]
 360:	cmp	w0, #0x8
 364:	b.ne	3e4 <grub_video_parse_color+0x1cc>  // b.any
 368:	mov	w2, #0x2                   	// #2
 36c:	mov	w1, #0x0                   	// #0
 370:	ldr	x0, [sp, #24]
 374:	bl	150 <parse_hex_color_component>
 378:	and	w0, w0, #0xff
 37c:	strb	w0, [sp, #32]
 380:	mov	w2, #0x4                   	// #4
 384:	mov	w1, #0x2                   	// #2
 388:	ldr	x0, [sp, #24]
 38c:	bl	150 <parse_hex_color_component>
 390:	and	w0, w0, #0xff
 394:	strb	w0, [sp, #33]
 398:	mov	w2, #0x6                   	// #6
 39c:	mov	w1, #0x4                   	// #4
 3a0:	ldr	x0, [sp, #24]
 3a4:	bl	150 <parse_hex_color_component>
 3a8:	and	w0, w0, #0xff
 3ac:	strb	w0, [sp, #34]
 3b0:	ldr	w0, [sp, #60]
 3b4:	cmp	w0, #0x8
 3b8:	b.ne	3d8 <grub_video_parse_color+0x1c0>  // b.any
 3bc:	mov	w2, #0x8                   	// #8
 3c0:	mov	w1, #0x6                   	// #6
 3c4:	ldr	x0, [sp, #24]
 3c8:	bl	150 <parse_hex_color_component>
 3cc:	and	w0, w0, #0xff
 3d0:	strb	w0, [sp, #35]
 3d4:	b	568 <grub_video_parse_color+0x350>
 3d8:	mov	w0, #0xffffffff            	// #-1
 3dc:	strb	w0, [sp, #35]
 3e0:	b	568 <grub_video_parse_color+0x350>
 3e4:	ldr	x2, [sp, #40]
 3e8:	adrp	x0, 0 <grub_isdigit>
 3ec:	add	x0, x0, #0x0
 3f0:	ldr	x1, [x0]
 3f4:	mov	w0, #0x12                  	// #18
 3f8:	bl	0 <grub_error>
 3fc:	b	59c <grub_video_parse_color+0x384>
 400:	ldr	x0, [sp, #24]
 404:	ldrb	w0, [x0]
 408:	bl	0 <grub_isdigit>
 40c:	cmp	w0, #0x0
 410:	b.eq	534 <grub_video_parse_color+0x31c>  // b.none
 414:	mov	w2, #0x0                   	// #0
 418:	mov	x1, #0x0                   	// #0
 41c:	ldr	x0, [sp, #24]
 420:	bl	0 <grub_strtoul>
 424:	and	w0, w0, #0xff
 428:	strb	w0, [sp, #32]
 42c:	mov	w1, #0x2c                  	// #44
 430:	ldr	x0, [sp, #24]
 434:	bl	0 <grub_strchr>
 438:	str	x0, [sp, #24]
 43c:	ldr	x0, [sp, #24]
 440:	cmp	x0, #0x0
 444:	b.ne	464 <grub_video_parse_color+0x24c>  // b.any
 448:	ldr	x2, [sp, #40]
 44c:	adrp	x0, 0 <grub_isdigit>
 450:	add	x0, x0, #0x0
 454:	ldr	x1, [x0]
 458:	mov	w0, #0x12                  	// #18
 45c:	bl	0 <grub_error>
 460:	b	59c <grub_video_parse_color+0x384>
 464:	ldr	x0, [sp, #24]
 468:	add	x0, x0, #0x1
 46c:	str	x0, [sp, #24]
 470:	mov	w2, #0x0                   	// #0
 474:	mov	x1, #0x0                   	// #0
 478:	ldr	x0, [sp, #24]
 47c:	bl	0 <grub_strtoul>
 480:	and	w0, w0, #0xff
 484:	strb	w0, [sp, #33]
 488:	mov	w1, #0x2c                  	// #44
 48c:	ldr	x0, [sp, #24]
 490:	bl	0 <grub_strchr>
 494:	str	x0, [sp, #24]
 498:	ldr	x0, [sp, #24]
 49c:	cmp	x0, #0x0
 4a0:	b.ne	4c0 <grub_video_parse_color+0x2a8>  // b.any
 4a4:	ldr	x2, [sp, #40]
 4a8:	adrp	x0, 0 <grub_isdigit>
 4ac:	add	x0, x0, #0x0
 4b0:	ldr	x1, [x0]
 4b4:	mov	w0, #0x12                  	// #18
 4b8:	bl	0 <grub_error>
 4bc:	b	59c <grub_video_parse_color+0x384>
 4c0:	ldr	x0, [sp, #24]
 4c4:	add	x0, x0, #0x1
 4c8:	str	x0, [sp, #24]
 4cc:	mov	w2, #0x0                   	// #0
 4d0:	mov	x1, #0x0                   	// #0
 4d4:	ldr	x0, [sp, #24]
 4d8:	bl	0 <grub_strtoul>
 4dc:	and	w0, w0, #0xff
 4e0:	strb	w0, [sp, #34]
 4e4:	mov	w1, #0x2c                  	// #44
 4e8:	ldr	x0, [sp, #24]
 4ec:	bl	0 <grub_strchr>
 4f0:	str	x0, [sp, #24]
 4f4:	ldr	x0, [sp, #24]
 4f8:	cmp	x0, #0x0
 4fc:	b.ne	50c <grub_video_parse_color+0x2f4>  // b.any
 500:	mov	w0, #0xffffffff            	// #-1
 504:	strb	w0, [sp, #35]
 508:	b	568 <grub_video_parse_color+0x350>
 50c:	ldr	x0, [sp, #24]
 510:	add	x0, x0, #0x1
 514:	str	x0, [sp, #24]
 518:	mov	w2, #0x0                   	// #0
 51c:	mov	x1, #0x0                   	// #0
 520:	ldr	x0, [sp, #24]
 524:	bl	0 <grub_strtoul>
 528:	and	w0, w0, #0xff
 52c:	strb	w0, [sp, #35]
 530:	b	568 <grub_video_parse_color+0x350>
 534:	add	x0, sp, #0x20
 538:	mov	x1, x0
 53c:	ldr	x0, [sp, #24]
 540:	bl	98 <grub_video_get_named_color>
 544:	cmp	w0, #0x0
 548:	b.ne	568 <grub_video_parse_color+0x350>  // b.any
 54c:	ldr	x2, [sp, #40]
 550:	adrp	x0, 0 <grub_isdigit>
 554:	add	x0, x0, #0x0
 558:	ldr	x1, [x0]
 55c:	mov	w0, #0x12                  	// #18
 560:	bl	0 <grub_error>
 564:	b	59c <grub_video_parse_color+0x384>
 568:	adrp	x0, 0 <grub_isdigit>
 56c:	add	x0, x0, #0x0
 570:	ldr	x0, [x0]
 574:	ldr	w0, [x0]
 578:	cmp	w0, #0x0
 57c:	b.ne	58c <grub_video_parse_color+0x374>  // b.any
 580:	ldr	x0, [sp, #16]
 584:	ldr	w1, [sp, #32]
 588:	str	w1, [x0]
 58c:	adrp	x0, 0 <grub_isdigit>
 590:	add	x0, x0, #0x0
 594:	ldr	x0, [x0]
 598:	ldr	w0, [x0]
 59c:	ldp	x29, x30, [sp], #64
 5a0:	ret
 5a4:	nop
	...
