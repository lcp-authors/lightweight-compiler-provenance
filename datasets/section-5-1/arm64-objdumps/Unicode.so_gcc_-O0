
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Unicode.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000f50 <_init>:
 f50:	stp	x29, x30, [sp, #-16]!
 f54:	mov	x29, sp
 f58:	bl	11c0 <call_weak_fn>
 f5c:	ldp	x29, x30, [sp], #16
 f60:	ret

Disassembly of section .plt:

0000000000000f70 <.plt>:
     f70:	stp	x16, x30, [sp, #-16]!
     f74:	adrp	x16, 14000 <__FRAME_END__+0xf918>
     f78:	ldr	x17, [x16, #4088]
     f7c:	add	x16, x16, #0xff8
     f80:	br	x17
     f84:	nop
     f88:	nop
     f8c:	nop

0000000000000f90 <memcpy@plt>:
     f90:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16]
     f98:	add	x16, x16, #0x0
     f9c:	br	x17

0000000000000fa0 <memmove@plt>:
     fa0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #8]
     fa8:	add	x16, x16, #0x8
     fac:	br	x17

0000000000000fb0 <Perl_sv_2iv_flags@plt>:
     fb0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #16]
     fb8:	add	x16, x16, #0x10
     fbc:	br	x17

0000000000000fc0 <Perl_sv_2bool_flags@plt>:
     fc0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #24]
     fc8:	add	x16, x16, #0x18
     fcc:	br	x17

0000000000000fd0 <Perl__utf8n_to_uvchr_msgs_helper@plt>:
     fd0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #32]
     fd8:	add	x16, x16, #0x20
     fdc:	br	x17

0000000000000fe0 <Perl_utf8_to_bytes@plt>:
     fe0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #40]
     fe8:	add	x16, x16, #0x28
     fec:	br	x17

0000000000000ff0 <Perl_sv_pvn_force_flags@plt>:
     ff0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #48]
     ff8:	add	x16, x16, #0x30
     ffc:	br	x17

0000000000001000 <Perl_sv_2uv_flags@plt>:
    1000:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #56]
    1008:	add	x16, x16, #0x38
    100c:	br	x17

0000000000001010 <__cxa_finalize@plt>:
    1010:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #64]
    1018:	add	x16, x16, #0x40
    101c:	br	x17

0000000000001020 <Perl_av_len@plt>:
    1020:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #72]
    1028:	add	x16, x16, #0x48
    102c:	br	x17

0000000000001030 <Perl_sv_2pv_flags@plt>:
    1030:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #80]
    1038:	add	x16, x16, #0x50
    103c:	br	x17

0000000000001040 <Perl_xs_boot_epilog@plt>:
    1040:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #88]
    1048:	add	x16, x16, #0x58
    104c:	br	x17

0000000000001050 <Perl_safesysmalloc@plt>:
    1050:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1054:	ldr	x17, [x16, #96]
    1058:	add	x16, x16, #0x60
    105c:	br	x17

0000000000001060 <__stack_chk_fail@plt>:
    1060:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1064:	ldr	x17, [x16, #104]
    1068:	add	x16, x16, #0x68
    106c:	br	x17

0000000000001070 <__gmon_start__@plt>:
    1070:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1074:	ldr	x17, [x16, #112]
    1078:	add	x16, x16, #0x70
    107c:	br	x17

0000000000001080 <Perl_croak_xs_usage@plt>:
    1080:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1084:	ldr	x17, [x16, #120]
    1088:	add	x16, x16, #0x78
    108c:	br	x17

0000000000001090 <Perl_sv_grow@plt>:
    1090:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1094:	ldr	x17, [x16, #128]
    1098:	add	x16, x16, #0x80
    109c:	br	x17

00000000000010a0 <Perl_sv_utf8_upgrade_flags_grow@plt>:
    10a0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    10a4:	ldr	x17, [x16, #136]
    10a8:	add	x16, x16, #0x88
    10ac:	br	x17

00000000000010b0 <Perl_warner_nocontext@plt>:
    10b0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    10b4:	ldr	x17, [x16, #144]
    10b8:	add	x16, x16, #0x90
    10bc:	br	x17

00000000000010c0 <Perl_croak@plt>:
    10c0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    10c4:	ldr	x17, [x16, #152]
    10c8:	add	x16, x16, #0x98
    10cc:	br	x17

00000000000010d0 <Perl_newSVpv@plt>:
    10d0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    10d4:	ldr	x17, [x16, #160]
    10d8:	add	x16, x16, #0xa0
    10dc:	br	x17

00000000000010e0 <Perl_croak_nocontext@plt>:
    10e0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    10e4:	ldr	x17, [x16, #168]
    10e8:	add	x16, x16, #0xa8
    10ec:	br	x17

00000000000010f0 <Perl_newXS_deffile@plt>:
    10f0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    10f4:	ldr	x17, [x16, #176]
    10f8:	add	x16, x16, #0xb0
    10fc:	br	x17

0000000000001100 <Perl_mg_set@plt>:
    1100:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1104:	ldr	x17, [x16, #184]
    1108:	add	x16, x16, #0xb8
    110c:	br	x17

0000000000001110 <Perl_sv_2mortal@plt>:
    1110:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1114:	ldr	x17, [x16, #192]
    1118:	add	x16, x16, #0xc0
    111c:	br	x17

0000000000001120 <Perl_mg_get@plt>:
    1120:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1124:	ldr	x17, [x16, #200]
    1128:	add	x16, x16, #0xc8
    112c:	br	x17

0000000000001130 <Perl_safesysfree@plt>:
    1130:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1134:	ldr	x17, [x16, #208]
    1138:	add	x16, x16, #0xd0
    113c:	br	x17

0000000000001140 <Perl_uvoffuni_to_utf8_flags_msgs@plt>:
    1140:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1144:	ldr	x17, [x16, #216]
    1148:	add	x16, x16, #0xd8
    114c:	br	x17

0000000000001150 <Perl_xs_handshake@plt>:
    1150:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1154:	ldr	x17, [x16, #224]
    1158:	add	x16, x16, #0xe0
    115c:	br	x17

0000000000001160 <Perl_av_fetch@plt>:
    1160:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1164:	ldr	x17, [x16, #232]
    1168:	add	x16, x16, #0xe8
    116c:	br	x17

0000000000001170 <Perl_hv_common_key_len@plt>:
    1170:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1174:	ldr	x17, [x16, #240]
    1178:	add	x16, x16, #0xf0
    117c:	br	x17

0000000000001180 <Perl_sv_magic@plt>:
    1180:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1184:	ldr	x17, [x16, #248]
    1188:	add	x16, x16, #0xf8
    118c:	br	x17

0000000000001190 <Perl_ckwarn@plt>:
    1190:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16, #256]
    1198:	add	x16, x16, #0x100
    119c:	br	x17

00000000000011a0 <Perl_newSVpvn@plt>:
    11a0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #264]
    11a8:	add	x16, x16, #0x108
    11ac:	br	x17

00000000000011b0 <Perl_sv_tainted@plt>:
    11b0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #272]
    11b8:	add	x16, x16, #0x110
    11bc:	br	x17

Disassembly of section .text:

00000000000011c0 <call_weak_fn>:
    11c0:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    11c4:	ldr	x0, [x0, #4032]
    11c8:	cbz	x0, 11d0 <call_weak_fn+0x10>
    11cc:	b	1070 <__gmon_start__@plt>
    11d0:	ret

00000000000011d4 <deregister_tm_clones>:
    11d4:	stp	x29, x30, [sp, #-32]!
    11d8:	mov	x29, sp
    11dc:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    11e0:	add	x0, x0, #0x120
    11e4:	str	x0, [sp, #24]
    11e8:	ldr	x0, [sp, #24]
    11ec:	str	x0, [sp, #24]
    11f0:	ldr	x1, [sp, #24]
    11f4:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    11f8:	add	x0, x0, #0x120
    11fc:	cmp	x1, x0
    1200:	b.eq	1238 <deregister_tm_clones+0x64>  // b.none
    1204:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    1208:	ldr	x0, [x0, #4008]
    120c:	str	x0, [sp, #16]
    1210:	ldr	x0, [sp, #16]
    1214:	str	x0, [sp, #16]
    1218:	ldr	x0, [sp, #16]
    121c:	cmp	x0, #0x0
    1220:	b.eq	123c <deregister_tm_clones+0x68>  // b.none
    1224:	ldr	x1, [sp, #16]
    1228:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    122c:	add	x0, x0, #0x120
    1230:	blr	x1
    1234:	b	123c <deregister_tm_clones+0x68>
    1238:	nop
    123c:	ldp	x29, x30, [sp], #32
    1240:	ret

0000000000001244 <register_tm_clones>:
    1244:	stp	x29, x30, [sp, #-48]!
    1248:	mov	x29, sp
    124c:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    1250:	add	x0, x0, #0x120
    1254:	str	x0, [sp, #40]
    1258:	ldr	x0, [sp, #40]
    125c:	str	x0, [sp, #40]
    1260:	ldr	x1, [sp, #40]
    1264:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    1268:	add	x0, x0, #0x120
    126c:	sub	x0, x1, x0
    1270:	asr	x0, x0, #3
    1274:	lsr	x1, x0, #63
    1278:	add	x0, x1, x0
    127c:	asr	x0, x0, #1
    1280:	str	x0, [sp, #32]
    1284:	ldr	x0, [sp, #32]
    1288:	cmp	x0, #0x0
    128c:	b.eq	12c8 <register_tm_clones+0x84>  // b.none
    1290:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    1294:	ldr	x0, [x0, #4056]
    1298:	str	x0, [sp, #24]
    129c:	ldr	x0, [sp, #24]
    12a0:	str	x0, [sp, #24]
    12a4:	ldr	x0, [sp, #24]
    12a8:	cmp	x0, #0x0
    12ac:	b.eq	12cc <register_tm_clones+0x88>  // b.none
    12b0:	ldr	x2, [sp, #24]
    12b4:	ldr	x1, [sp, #32]
    12b8:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    12bc:	add	x0, x0, #0x120
    12c0:	blr	x2
    12c4:	b	12cc <register_tm_clones+0x88>
    12c8:	nop
    12cc:	ldp	x29, x30, [sp], #48
    12d0:	ret

00000000000012d4 <__do_global_dtors_aux>:
    12d4:	stp	x29, x30, [sp, #-16]!
    12d8:	mov	x29, sp
    12dc:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    12e0:	add	x0, x0, #0x120
    12e4:	ldrb	w0, [x0]
    12e8:	and	x0, x0, #0xff
    12ec:	cmp	x0, #0x0
    12f0:	b.ne	132c <__do_global_dtors_aux+0x58>  // b.any
    12f4:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    12f8:	ldr	x0, [x0, #4016]
    12fc:	cmp	x0, #0x0
    1300:	b.eq	1314 <__do_global_dtors_aux+0x40>  // b.none
    1304:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    1308:	add	x0, x0, #0x118
    130c:	ldr	x0, [x0]
    1310:	bl	1010 <__cxa_finalize@plt>
    1314:	bl	11d4 <deregister_tm_clones>
    1318:	adrp	x0, 15000 <memcpy@GLIBC_2.17>
    131c:	add	x0, x0, #0x120
    1320:	mov	w1, #0x1                   	// #1
    1324:	strb	w1, [x0]
    1328:	b	1330 <__do_global_dtors_aux+0x5c>
    132c:	nop
    1330:	ldp	x29, x30, [sp], #16
    1334:	ret

0000000000001338 <frame_dummy>:
    1338:	stp	x29, x30, [sp, #-16]!
    133c:	mov	x29, sp
    1340:	bl	1244 <register_tm_clones>
    1344:	nop
    1348:	ldp	x29, x30, [sp], #16
    134c:	ret

0000000000001350 <S_POPMARK>:
    1350:	sub	sp, sp, #0x10
    1354:	str	x0, [sp, #8]
    1358:	ldr	x0, [sp, #8]
    135c:	ldr	x0, [x0, #120]
    1360:	sub	x2, x0, #0x4
    1364:	ldr	x1, [sp, #8]
    1368:	str	x2, [x1, #120]
    136c:	ldr	w0, [x0]
    1370:	add	sp, sp, #0x10
    1374:	ret

0000000000001378 <S_croak_memory_wrap>:
    1378:	stp	x29, x30, [sp, #-16]!
    137c:	mov	x29, sp
    1380:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    1384:	ldr	x1, [x0, #4048]
    1388:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    138c:	add	x0, x0, #0x230
    1390:	bl	10e0 <Perl_croak_nocontext@plt>

0000000000001394 <S_utf8n_to_uvchr_msgs>:
    1394:	stp	x29, x30, [sp, #-112]!
    1398:	mov	x29, sp
    139c:	str	x0, [sp, #56]
    13a0:	str	x1, [sp, #48]
    13a4:	str	x2, [sp, #40]
    13a8:	str	w3, [sp, #36]
    13ac:	str	x4, [sp, #24]
    13b0:	str	x5, [sp, #16]
    13b4:	ldr	x0, [sp, #56]
    13b8:	str	x0, [sp, #88]
    13bc:	ldr	x1, [sp, #88]
    13c0:	ldr	x0, [sp, #48]
    13c4:	add	x0, x1, x0
    13c8:	str	x0, [sp, #96]
    13cc:	str	xzr, [sp, #72]
    13d0:	str	xzr, [sp, #80]
    13d4:	b	14e4 <S_utf8n_to_uvchr_msgs+0x150>
    13d8:	ldr	x0, [sp, #56]
    13dc:	ldrb	w0, [x0]
    13e0:	mov	w2, w0
    13e4:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    13e8:	ldr	x1, [x0, #4024]
    13ec:	sxtw	x0, w2
    13f0:	ldrb	w0, [x1, x0]
    13f4:	and	x0, x0, #0xff
    13f8:	str	x0, [sp, #104]
    13fc:	ldr	x0, [sp, #80]
    1400:	cmp	x0, #0x0
    1404:	b.ne	142c <S_utf8n_to_uvchr_msgs+0x98>  // b.any
    1408:	ldr	x0, [sp, #104]
    140c:	mov	w1, w0
    1410:	mov	w0, #0xff                  	// #255
    1414:	asr	w0, w0, w1
    1418:	ldr	x1, [sp, #56]
    141c:	ldrb	w1, [x1]
    1420:	and	w0, w0, w1
    1424:	sxtw	x0, w0
    1428:	b	1448 <S_utf8n_to_uvchr_msgs+0xb4>
    142c:	ldr	x0, [sp, #72]
    1430:	lsl	x1, x0, #6
    1434:	ldr	x0, [sp, #56]
    1438:	ldrb	w0, [x0]
    143c:	and	x0, x0, #0xff
    1440:	and	x0, x0, #0x3f
    1444:	orr	x0, x1, x0
    1448:	str	x0, [sp, #72]
    144c:	ldr	x1, [sp, #80]
    1450:	ldr	x0, [sp, #104]
    1454:	add	x0, x1, x0
    1458:	add	x0, x0, #0x100
    145c:	adrp	x1, 14000 <__FRAME_END__+0xf918>
    1460:	ldr	x1, [x1, #4024]
    1464:	ldrb	w0, [x1, x0]
    1468:	and	x0, x0, #0xff
    146c:	str	x0, [sp, #80]
    1470:	ldr	x0, [sp, #80]
    1474:	cmp	x0, #0x0
    1478:	b.eq	148c <S_utf8n_to_uvchr_msgs+0xf8>  // b.none
    147c:	ldr	x0, [sp, #56]
    1480:	add	x0, x0, #0x1
    1484:	str	x0, [sp, #56]
    1488:	b	14e4 <S_utf8n_to_uvchr_msgs+0x150>
    148c:	ldr	x0, [sp, #40]
    1490:	cmp	x0, #0x0
    1494:	b.eq	14b4 <S_utf8n_to_uvchr_msgs+0x120>  // b.none
    1498:	ldr	x1, [sp, #56]
    149c:	ldr	x0, [sp, #88]
    14a0:	sub	x0, x1, x0
    14a4:	add	x0, x0, #0x1
    14a8:	mov	x1, x0
    14ac:	ldr	x0, [sp, #40]
    14b0:	str	x1, [x0]
    14b4:	ldr	x0, [sp, #24]
    14b8:	cmp	x0, #0x0
    14bc:	b.eq	14c8 <S_utf8n_to_uvchr_msgs+0x134>  // b.none
    14c0:	ldr	x0, [sp, #24]
    14c4:	str	wzr, [x0]
    14c8:	ldr	x0, [sp, #16]
    14cc:	cmp	x0, #0x0
    14d0:	b.eq	14dc <S_utf8n_to_uvchr_msgs+0x148>  // b.none
    14d4:	ldr	x0, [sp, #16]
    14d8:	str	xzr, [x0]
    14dc:	ldr	x0, [sp, #72]
    14e0:	b	152c <S_utf8n_to_uvchr_msgs+0x198>
    14e4:	ldr	x1, [sp, #56]
    14e8:	ldr	x0, [sp, #96]
    14ec:	cmp	x1, x0
    14f0:	b.cs	1510 <S_utf8n_to_uvchr_msgs+0x17c>  // b.hs, b.nlast
    14f4:	ldr	x0, [sp, #80]
    14f8:	cmp	x0, #0x1
    14fc:	cset	w0, ne  // ne = any
    1500:	and	w0, w0, #0xff
    1504:	and	x0, x0, #0xff
    1508:	cmp	x0, #0x0
    150c:	b.ne	13d8 <S_utf8n_to_uvchr_msgs+0x44>  // b.any
    1510:	ldr	x5, [sp, #16]
    1514:	ldr	x4, [sp, #24]
    1518:	ldr	w3, [sp, #36]
    151c:	ldr	x2, [sp, #40]
    1520:	ldr	x1, [sp, #48]
    1524:	ldr	x0, [sp, #88]
    1528:	bl	fd0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    152c:	ldp	x29, x30, [sp], #112
    1530:	ret

0000000000001534 <enc_unpack>:
    1534:	stp	x29, x30, [sp, #-80]!
    1538:	mov	x29, sp
    153c:	str	x0, [sp, #56]
    1540:	str	x1, [sp, #48]
    1544:	str	x2, [sp, #40]
    1548:	str	x3, [sp, #32]
    154c:	strb	w4, [sp, #31]
    1550:	ldr	x0, [sp, #48]
    1554:	ldr	x0, [x0]
    1558:	str	x0, [sp, #64]
    155c:	str	xzr, [sp, #72]
    1560:	ldr	x1, [sp, #64]
    1564:	ldr	x0, [sp, #32]
    1568:	add	x0, x1, x0
    156c:	ldr	x1, [sp, #40]
    1570:	cmp	x1, x0
    1574:	b.cs	158c <enc_unpack+0x58>  // b.hs, b.nlast
    1578:	ldrb	w0, [sp, #31]
    157c:	mov	w1, w0
    1580:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1584:	add	x0, x0, #0x2d8
    1588:	bl	10e0 <Perl_croak_nocontext@plt>
    158c:	ldrb	w0, [sp, #31]
    1590:	cmp	w0, #0x76
    1594:	b.eq	164c <enc_unpack+0x118>  // b.none
    1598:	cmp	w0, #0x76
    159c:	b.gt	16e8 <enc_unpack+0x1b4>
    15a0:	cmp	w0, #0x6e
    15a4:	b.eq	1600 <enc_unpack+0xcc>  // b.none
    15a8:	cmp	w0, #0x6e
    15ac:	b.gt	16e8 <enc_unpack+0x1b4>
    15b0:	cmp	w0, #0x4e
    15b4:	b.eq	15c4 <enc_unpack+0x90>  // b.none
    15b8:	cmp	w0, #0x56
    15bc:	b.eq	164c <enc_unpack+0x118>  // b.none
    15c0:	b	16e8 <enc_unpack+0x1b4>
    15c4:	ldr	x0, [sp, #64]
    15c8:	add	x1, x0, #0x1
    15cc:	str	x1, [sp, #64]
    15d0:	ldrb	w0, [x0]
    15d4:	and	x0, x0, #0xff
    15d8:	str	x0, [sp, #72]
    15dc:	ldr	x0, [sp, #72]
    15e0:	lsl	x1, x0, #8
    15e4:	ldr	x0, [sp, #64]
    15e8:	add	x2, x0, #0x1
    15ec:	str	x2, [sp, #64]
    15f0:	ldrb	w0, [x0]
    15f4:	and	x0, x0, #0xff
    15f8:	orr	x0, x1, x0
    15fc:	str	x0, [sp, #72]
    1600:	ldr	x0, [sp, #72]
    1604:	lsl	x1, x0, #8
    1608:	ldr	x0, [sp, #64]
    160c:	add	x2, x0, #0x1
    1610:	str	x2, [sp, #64]
    1614:	ldrb	w0, [x0]
    1618:	and	x0, x0, #0xff
    161c:	orr	x0, x1, x0
    1620:	str	x0, [sp, #72]
    1624:	ldr	x0, [sp, #72]
    1628:	lsl	x1, x0, #8
    162c:	ldr	x0, [sp, #64]
    1630:	add	x2, x0, #0x1
    1634:	str	x2, [sp, #64]
    1638:	ldrb	w0, [x0]
    163c:	and	x0, x0, #0xff
    1640:	orr	x0, x1, x0
    1644:	str	x0, [sp, #72]
    1648:	b	1700 <enc_unpack+0x1cc>
    164c:	ldr	x0, [sp, #64]
    1650:	add	x1, x0, #0x1
    1654:	str	x1, [sp, #64]
    1658:	ldrb	w0, [x0]
    165c:	and	x0, x0, #0xff
    1660:	ldr	x1, [sp, #72]
    1664:	orr	x0, x1, x0
    1668:	str	x0, [sp, #72]
    166c:	ldr	x0, [sp, #64]
    1670:	add	x1, x0, #0x1
    1674:	str	x1, [sp, #64]
    1678:	ldrb	w0, [x0]
    167c:	lsl	w0, w0, #8
    1680:	sxtw	x0, w0
    1684:	ldr	x1, [sp, #72]
    1688:	orr	x0, x1, x0
    168c:	str	x0, [sp, #72]
    1690:	ldrb	w0, [sp, #31]
    1694:	cmp	w0, #0x76
    1698:	b.eq	16fc <enc_unpack+0x1c8>  // b.none
    169c:	ldr	x0, [sp, #64]
    16a0:	add	x1, x0, #0x1
    16a4:	str	x1, [sp, #64]
    16a8:	ldrb	w0, [x0]
    16ac:	lsl	w0, w0, #16
    16b0:	sxtw	x0, w0
    16b4:	ldr	x1, [sp, #72]
    16b8:	orr	x0, x1, x0
    16bc:	str	x0, [sp, #72]
    16c0:	ldr	x0, [sp, #64]
    16c4:	add	x1, x0, #0x1
    16c8:	str	x1, [sp, #64]
    16cc:	ldrb	w0, [x0]
    16d0:	and	x0, x0, #0xff
    16d4:	lsl	x0, x0, #24
    16d8:	ldr	x1, [sp, #72]
    16dc:	orr	x0, x1, x0
    16e0:	str	x0, [sp, #72]
    16e4:	b	1700 <enc_unpack+0x1cc>
    16e8:	ldrb	w0, [sp, #31]
    16ec:	mov	w1, w0
    16f0:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    16f4:	add	x0, x0, #0x2f0
    16f8:	bl	10e0 <Perl_croak_nocontext@plt>
    16fc:	nop
    1700:	ldr	x0, [sp, #48]
    1704:	ldr	x1, [sp, #64]
    1708:	str	x1, [x0]
    170c:	ldr	x0, [sp, #72]
    1710:	ldp	x29, x30, [sp], #80
    1714:	ret

0000000000001718 <enc_pack>:
    1718:	stp	x29, x30, [sp, #-80]!
    171c:	mov	x29, sp
    1720:	str	x0, [sp, #56]
    1724:	str	x1, [sp, #48]
    1728:	str	x2, [sp, #40]
    172c:	strb	w3, [sp, #39]
    1730:	str	x4, [sp, #24]
    1734:	ldr	x0, [sp, #48]
    1738:	ldr	w1, [x0, #12]
    173c:	mov	w0, #0x400                 	// #1024
    1740:	movk	w0, #0x20, lsl #16
    1744:	and	w0, w1, w0
    1748:	cmp	w0, #0x400
    174c:	b.ne	175c <enc_pack+0x44>  // b.any
    1750:	ldr	x0, [sp, #48]
    1754:	ldr	x0, [x0, #16]
    1758:	b	1770 <enc_pack+0x58>
    175c:	mov	w3, #0x2                   	// #2
    1760:	mov	x2, #0x0                   	// #0
    1764:	ldr	x1, [sp, #48]
    1768:	ldr	x0, [sp, #56]
    176c:	bl	1030 <Perl_sv_2pv_flags@plt>
    1770:	str	x0, [sp, #72]
    1774:	ldrb	w0, [sp, #39]
    1778:	cmp	w0, #0x76
    177c:	b.eq	17a8 <enc_pack+0x90>  // b.none
    1780:	cmp	w0, #0x76
    1784:	b.gt	189c <enc_pack+0x184>
    1788:	cmp	w0, #0x6e
    178c:	b.eq	1820 <enc_pack+0x108>  // b.none
    1790:	cmp	w0, #0x6e
    1794:	b.gt	189c <enc_pack+0x184>
    1798:	cmp	w0, #0x4e
    179c:	b.eq	1820 <enc_pack+0x108>  // b.none
    17a0:	cmp	w0, #0x56
    17a4:	b.ne	189c <enc_pack+0x184>  // b.any
    17a8:	ldr	x0, [sp, #48]
    17ac:	ldr	x0, [x0]
    17b0:	ldr	x0, [x0, #16]
    17b4:	ldr	x1, [sp, #72]
    17b8:	add	x0, x1, x0
    17bc:	str	x0, [sp, #72]
    17c0:	ldr	x0, [sp, #48]
    17c4:	ldr	x0, [x0]
    17c8:	ldr	x2, [x0, #16]
    17cc:	ldr	x0, [sp, #48]
    17d0:	ldr	x0, [x0]
    17d4:	ldr	x1, [sp, #40]
    17d8:	add	x1, x2, x1
    17dc:	str	x1, [x0, #16]
    17e0:	b	1808 <enc_pack+0xf0>
    17e4:	ldr	x0, [sp, #72]
    17e8:	add	x1, x0, #0x1
    17ec:	str	x1, [sp, #72]
    17f0:	ldr	x1, [sp, #24]
    17f4:	and	w1, w1, #0xff
    17f8:	strb	w1, [x0]
    17fc:	ldr	x0, [sp, #24]
    1800:	lsr	x0, x0, #8
    1804:	str	x0, [sp, #24]
    1808:	ldr	x0, [sp, #40]
    180c:	sub	x1, x0, #0x1
    1810:	str	x1, [sp, #40]
    1814:	cmp	x0, #0x0
    1818:	b.ne	17e4 <enc_pack+0xcc>  // b.any
    181c:	b	18b0 <enc_pack+0x198>
    1820:	ldr	x0, [sp, #48]
    1824:	ldr	x0, [x0]
    1828:	ldr	x2, [x0, #16]
    182c:	ldr	x0, [sp, #48]
    1830:	ldr	x0, [x0]
    1834:	ldr	x1, [sp, #40]
    1838:	add	x1, x2, x1
    183c:	str	x1, [x0, #16]
    1840:	ldr	x0, [sp, #48]
    1844:	ldr	x0, [x0]
    1848:	ldr	x0, [x0, #16]
    184c:	ldr	x1, [sp, #72]
    1850:	add	x0, x1, x0
    1854:	str	x0, [sp, #72]
    1858:	b	1884 <enc_pack+0x16c>
    185c:	ldr	x0, [sp, #72]
    1860:	sub	x0, x0, #0x1
    1864:	str	x0, [sp, #72]
    1868:	ldr	x0, [sp, #24]
    186c:	and	w1, w0, #0xff
    1870:	ldr	x0, [sp, #72]
    1874:	strb	w1, [x0]
    1878:	ldr	x0, [sp, #24]
    187c:	lsr	x0, x0, #8
    1880:	str	x0, [sp, #24]
    1884:	ldr	x0, [sp, #40]
    1888:	sub	x1, x0, #0x1
    188c:	str	x1, [sp, #40]
    1890:	cmp	x0, #0x0
    1894:	b.ne	185c <enc_pack+0x144>  // b.any
    1898:	b	18b0 <enc_pack+0x198>
    189c:	ldrb	w0, [sp, #39]
    18a0:	mov	w1, w0
    18a4:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    18a8:	add	x0, x0, #0x2f0
    18ac:	bl	10e0 <Perl_croak_nocontext@plt>
    18b0:	nop
    18b4:	ldp	x29, x30, [sp], #80
    18b8:	ret

00000000000018bc <XS_Encode__Unicode_decode>:
    18bc:	stp	x29, x30, [sp, #-352]!
    18c0:	mov	x29, sp
    18c4:	str	x19, [sp, #16]
    18c8:	str	x0, [sp, #40]
    18cc:	str	x1, [sp, #32]
    18d0:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    18d4:	ldr	x0, [x0, #4040]
    18d8:	ldr	x1, [x0]
    18dc:	str	x1, [sp, #344]
    18e0:	mov	x1, #0x0                   	// #0
    18e4:	ldr	x0, [sp, #40]
    18e8:	ldr	x0, [x0]
    18ec:	str	x0, [sp, #144]
    18f0:	ldr	x0, [sp, #40]
    18f4:	bl	1350 <S_POPMARK>
    18f8:	str	w0, [sp, #56]
    18fc:	ldr	x0, [sp, #40]
    1900:	ldr	x1, [x0, #24]
    1904:	ldr	w0, [sp, #56]
    1908:	add	w2, w0, #0x1
    190c:	str	w2, [sp, #56]
    1910:	sxtw	x0, w0
    1914:	lsl	x0, x0, #3
    1918:	add	x0, x1, x0
    191c:	str	x0, [sp, #152]
    1920:	ldr	x1, [sp, #144]
    1924:	ldr	x0, [sp, #152]
    1928:	sub	x0, x1, x0
    192c:	asr	x0, x0, #3
    1930:	str	w0, [sp, #60]
    1934:	ldr	w0, [sp, #60]
    1938:	cmp	w0, #0x1
    193c:	b.le	194c <XS_Encode__Unicode_decode+0x90>
    1940:	ldr	w0, [sp, #60]
    1944:	cmp	w0, #0x3
    1948:	b.le	195c <XS_Encode__Unicode_decode+0xa0>
    194c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1950:	add	x1, x0, #0x308
    1954:	ldr	x0, [sp, #32]
    1958:	bl	1080 <Perl_croak_xs_usage@plt>
    195c:	ldr	x0, [sp, #40]
    1960:	ldr	x1, [x0, #24]
    1964:	ldrsw	x0, [sp, #56]
    1968:	lsl	x0, x0, #3
    196c:	add	x0, x1, x0
    1970:	ldr	x0, [x0]
    1974:	str	x0, [sp, #160]
    1978:	ldr	x0, [sp, #40]
    197c:	ldr	x1, [x0, #24]
    1980:	ldrsw	x0, [sp, #56]
    1984:	add	x0, x0, #0x1
    1988:	lsl	x0, x0, #3
    198c:	add	x0, x1, x0
    1990:	ldr	x0, [x0]
    1994:	str	x0, [sp, #96]
    1998:	ldr	w0, [sp, #60]
    199c:	cmp	w0, #0x2
    19a0:	b.gt	19ac <XS_Encode__Unicode_decode+0xf0>
    19a4:	str	xzr, [sp, #104]
    19a8:	b	1a38 <XS_Encode__Unicode_decode+0x17c>
    19ac:	ldr	x0, [sp, #40]
    19b0:	ldr	x1, [x0, #24]
    19b4:	ldrsw	x0, [sp, #56]
    19b8:	add	x0, x0, #0x2
    19bc:	lsl	x0, x0, #3
    19c0:	add	x0, x1, x0
    19c4:	ldr	x0, [x0]
    19c8:	ldr	w1, [x0, #12]
    19cc:	mov	w0, #0x100                 	// #256
    19d0:	movk	w0, #0x20, lsl #16
    19d4:	and	w0, w1, w0
    19d8:	cmp	w0, #0x100
    19dc:	b.ne	1a08 <XS_Encode__Unicode_decode+0x14c>  // b.any
    19e0:	ldr	x0, [sp, #40]
    19e4:	ldr	x1, [x0, #24]
    19e8:	ldrsw	x0, [sp, #56]
    19ec:	add	x0, x0, #0x2
    19f0:	lsl	x0, x0, #3
    19f4:	add	x0, x1, x0
    19f8:	ldr	x0, [x0]
    19fc:	ldr	x0, [x0]
    1a00:	ldr	x0, [x0, #32]
    1a04:	b	1a34 <XS_Encode__Unicode_decode+0x178>
    1a08:	ldr	x0, [sp, #40]
    1a0c:	ldr	x1, [x0, #24]
    1a10:	ldrsw	x0, [sp, #56]
    1a14:	add	x0, x0, #0x2
    1a18:	lsl	x0, x0, #3
    1a1c:	add	x0, x1, x0
    1a20:	ldr	x0, [x0]
    1a24:	mov	w2, #0x2                   	// #2
    1a28:	mov	x1, x0
    1a2c:	ldr	x0, [sp, #40]
    1a30:	bl	fb0 <Perl_sv_2iv_flags@plt>
    1a34:	str	x0, [sp, #104]
    1a38:	ldr	x0, [sp, #160]
    1a3c:	ldr	x1, [x0, #16]
    1a40:	mov	w6, #0x0                   	// #0
    1a44:	mov	x5, #0x0                   	// #0
    1a48:	mov	w4, #0x8                   	// #8
    1a4c:	mov	w3, #0x4                   	// #4
    1a50:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1a54:	add	x2, x0, #0x320
    1a58:	ldr	x0, [sp, #40]
    1a5c:	bl	1170 <Perl_hv_common_key_len@plt>
    1a60:	cmp	x0, #0x0
    1a64:	b.eq	1a98 <XS_Encode__Unicode_decode+0x1dc>  // b.none
    1a68:	ldr	x0, [sp, #160]
    1a6c:	ldr	x1, [x0, #16]
    1a70:	mov	w6, #0x0                   	// #0
    1a74:	mov	x5, #0x0                   	// #0
    1a78:	mov	w4, #0x20                  	// #32
    1a7c:	mov	w3, #0x4                   	// #4
    1a80:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1a84:	add	x2, x0, #0x320
    1a88:	ldr	x0, [sp, #40]
    1a8c:	bl	1170 <Perl_hv_common_key_len@plt>
    1a90:	ldr	x0, [x0]
    1a94:	b	1aa0 <XS_Encode__Unicode_decode+0x1e4>
    1a98:	ldr	x0, [sp, #40]
    1a9c:	add	x0, x0, #0x150
    1aa0:	str	x0, [sp, #168]
    1aa4:	ldr	x0, [sp, #160]
    1aa8:	ldr	x1, [x0, #16]
    1aac:	mov	w6, #0x0                   	// #0
    1ab0:	mov	x5, #0x0                   	// #0
    1ab4:	mov	w4, #0x8                   	// #8
    1ab8:	mov	w3, #0x6                   	// #6
    1abc:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1ac0:	add	x2, x0, #0x328
    1ac4:	ldr	x0, [sp, #40]
    1ac8:	bl	1170 <Perl_hv_common_key_len@plt>
    1acc:	cmp	x0, #0x0
    1ad0:	b.eq	1b04 <XS_Encode__Unicode_decode+0x248>  // b.none
    1ad4:	ldr	x0, [sp, #160]
    1ad8:	ldr	x1, [x0, #16]
    1adc:	mov	w6, #0x0                   	// #0
    1ae0:	mov	x5, #0x0                   	// #0
    1ae4:	mov	w4, #0x20                  	// #32
    1ae8:	mov	w3, #0x6                   	// #6
    1aec:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1af0:	add	x2, x0, #0x328
    1af4:	ldr	x0, [sp, #40]
    1af8:	bl	1170 <Perl_hv_common_key_len@plt>
    1afc:	ldr	x0, [x0]
    1b00:	b	1b0c <XS_Encode__Unicode_decode+0x250>
    1b04:	ldr	x0, [sp, #40]
    1b08:	add	x0, x0, #0x150
    1b0c:	str	x0, [sp, #176]
    1b10:	ldr	x0, [sp, #176]
    1b14:	ldr	w1, [x0, #12]
    1b18:	mov	w0, #0x400                 	// #1024
    1b1c:	movk	w0, #0x20, lsl #16
    1b20:	and	w0, w1, w0
    1b24:	cmp	w0, #0x400
    1b28:	b.ne	1b38 <XS_Encode__Unicode_decode+0x27c>  // b.any
    1b2c:	ldr	x0, [sp, #176]
    1b30:	ldr	x0, [x0, #16]
    1b34:	b	1b4c <XS_Encode__Unicode_decode+0x290>
    1b38:	mov	w3, #0x2                   	// #2
    1b3c:	mov	x2, #0x0                   	// #0
    1b40:	ldr	x1, [sp, #176]
    1b44:	ldr	x0, [sp, #40]
    1b48:	bl	1030 <Perl_sv_2pv_flags@plt>
    1b4c:	ldrb	w0, [x0]
    1b50:	strb	w0, [sp, #49]
    1b54:	ldr	x0, [sp, #160]
    1b58:	ldr	x1, [x0, #16]
    1b5c:	mov	w6, #0x0                   	// #0
    1b60:	mov	x5, #0x0                   	// #0
    1b64:	mov	w4, #0x8                   	// #8
    1b68:	mov	w3, #0x4                   	// #4
    1b6c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1b70:	add	x2, x0, #0x330
    1b74:	ldr	x0, [sp, #40]
    1b78:	bl	1170 <Perl_hv_common_key_len@plt>
    1b7c:	cmp	x0, #0x0
    1b80:	b.eq	1bb4 <XS_Encode__Unicode_decode+0x2f8>  // b.none
    1b84:	ldr	x0, [sp, #160]
    1b88:	ldr	x1, [x0, #16]
    1b8c:	mov	w6, #0x0                   	// #0
    1b90:	mov	x5, #0x0                   	// #0
    1b94:	mov	w4, #0x20                  	// #32
    1b98:	mov	w3, #0x4                   	// #4
    1b9c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1ba0:	add	x2, x0, #0x330
    1ba4:	ldr	x0, [sp, #40]
    1ba8:	bl	1170 <Perl_hv_common_key_len@plt>
    1bac:	ldr	x0, [x0]
    1bb0:	b	1bbc <XS_Encode__Unicode_decode+0x300>
    1bb4:	ldr	x0, [sp, #40]
    1bb8:	add	x0, x0, #0x150
    1bbc:	str	x0, [sp, #184]
    1bc0:	ldr	x0, [sp, #184]
    1bc4:	ldr	w1, [x0, #12]
    1bc8:	mov	w0, #0x100                 	// #256
    1bcc:	movk	w0, #0x20, lsl #16
    1bd0:	and	w0, w1, w0
    1bd4:	cmp	w0, #0x100
    1bd8:	b.ne	1bec <XS_Encode__Unicode_decode+0x330>  // b.any
    1bdc:	ldr	x0, [sp, #184]
    1be0:	ldr	x0, [x0]
    1be4:	ldr	x0, [x0, #32]
    1be8:	b	1bfc <XS_Encode__Unicode_decode+0x340>
    1bec:	mov	w2, #0x2                   	// #2
    1bf0:	ldr	x1, [sp, #184]
    1bf4:	ldr	x0, [sp, #40]
    1bf8:	bl	fb0 <Perl_sv_2iv_flags@plt>
    1bfc:	str	w0, [sp, #64]
    1c00:	mov	w0, #0xffffffff            	// #-1
    1c04:	str	w0, [sp, #52]
    1c08:	mov	x2, #0x0                   	// #0
    1c0c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1c10:	add	x1, x0, #0x338
    1c14:	ldr	x0, [sp, #40]
    1c18:	bl	11a0 <Perl_newSVpvn@plt>
    1c1c:	str	x0, [sp, #192]
    1c20:	ldr	w2, [sp, #64]
    1c24:	ldr	w1, [sp, #64]
    1c28:	mov	w0, #0x1                   	// #1
    1c2c:	cmp	w2, #0x0
    1c30:	csel	w0, w1, w0, gt
    1c34:	sxtw	x0, w0
    1c38:	str	x0, [sp, #200]
    1c3c:	ldr	x0, [sp, #104]
    1c40:	cmp	x0, #0x0
    1c44:	b.eq	1c60 <XS_Encode__Unicode_decode+0x3a4>  // b.none
    1c48:	ldr	x0, [sp, #104]
    1c4c:	and	x0, x0, #0x8
    1c50:	cmp	x0, #0x0
    1c54:	b.ne	1c60 <XS_Encode__Unicode_decode+0x3a4>  // b.any
    1c58:	mov	w0, #0x1                   	// #1
    1c5c:	b	1c64 <XS_Encode__Unicode_decode+0x3a8>
    1c60:	mov	w0, #0x0                   	// #0
    1c64:	strb	w0, [sp, #50]
    1c68:	ldrb	w0, [sp, #50]
    1c6c:	and	w0, w0, #0x1
    1c70:	strb	w0, [sp, #50]
    1c74:	ldr	x0, [sp, #96]
    1c78:	ldr	w0, [x0, #12]
    1c7c:	lsr	w0, w0, #21
    1c80:	mov	w0, w0
    1c84:	and	x0, x0, #0x1
    1c88:	cmp	x0, #0x0
    1c8c:	b.eq	1ca4 <XS_Encode__Unicode_decode+0x3e8>  // b.none
    1c90:	ldr	x1, [sp, #96]
    1c94:	ldr	x0, [sp, #40]
    1c98:	bl	1120 <Perl_mg_get@plt>
    1c9c:	cmp	w0, #0x0
    1ca0:	nop
    1ca4:	ldr	x0, [sp, #96]
    1ca8:	ldr	w0, [x0, #12]
    1cac:	and	w0, w0, #0xff00
    1cb0:	cmp	w0, #0x0
    1cb4:	b.ne	1d0c <XS_Encode__Unicode_decode+0x450>  // b.any
    1cb8:	ldr	x0, [sp, #40]
    1cbc:	ldr	x1, [x0, #24]
    1cc0:	ldrsw	x0, [sp, #56]
    1cc4:	lsl	x0, x0, #3
    1cc8:	add	x0, x1, x0
    1ccc:	ldr	x1, [sp, #40]
    1cd0:	add	x1, x1, #0x150
    1cd4:	str	x1, [x0]
    1cd8:	mov	x0, #0x1                   	// #1
    1cdc:	str	x0, [sp, #336]
    1ce0:	ldr	x0, [sp, #40]
    1ce4:	ldr	x1, [x0, #24]
    1ce8:	ldrsw	x2, [sp, #56]
    1cec:	ldr	x0, [sp, #336]
    1cf0:	add	x0, x2, x0
    1cf4:	lsl	x0, x0, #3
    1cf8:	sub	x0, x0, #0x8
    1cfc:	add	x1, x1, x0
    1d00:	ldr	x0, [sp, #40]
    1d04:	str	x1, [x0]
    1d08:	b	2eac <XS_Encode__Unicode_decode+0x15f0>
    1d0c:	ldrb	w0, [sp, #50]
    1d10:	cmp	w0, #0x0
    1d14:	b.eq	1d6c <XS_Encode__Unicode_decode+0x4b0>  // b.none
    1d18:	ldr	x0, [sp, #96]
    1d1c:	ldr	w1, [x0, #12]
    1d20:	mov	w0, #0x8f00                	// #36608
    1d24:	movk	w0, #0x19a1, lsl #16
    1d28:	and	w0, w1, w0
    1d2c:	cmp	w0, #0x400
    1d30:	b.ne	1d50 <XS_Encode__Unicode_decode+0x494>  // b.any
    1d34:	ldr	x0, [sp, #96]
    1d38:	ldr	x0, [x0]
    1d3c:	ldr	x0, [x0, #16]
    1d40:	str	x0, [sp, #72]
    1d44:	ldr	x0, [sp, #96]
    1d48:	ldr	x0, [x0, #16]
    1d4c:	b	1dbc <XS_Encode__Unicode_decode+0x500>
    1d50:	add	x0, sp, #0x48
    1d54:	mov	w3, #0x0                   	// #0
    1d58:	mov	x2, x0
    1d5c:	ldr	x1, [sp, #96]
    1d60:	ldr	x0, [sp, #40]
    1d64:	bl	ff0 <Perl_sv_pvn_force_flags@plt>
    1d68:	b	1dbc <XS_Encode__Unicode_decode+0x500>
    1d6c:	ldr	x0, [sp, #96]
    1d70:	ldr	w1, [x0, #12]
    1d74:	mov	w0, #0x400                 	// #1024
    1d78:	movk	w0, #0x20, lsl #16
    1d7c:	and	w0, w1, w0
    1d80:	cmp	w0, #0x400
    1d84:	b.ne	1da4 <XS_Encode__Unicode_decode+0x4e8>  // b.any
    1d88:	ldr	x0, [sp, #96]
    1d8c:	ldr	x0, [x0]
    1d90:	ldr	x0, [x0, #16]
    1d94:	str	x0, [sp, #72]
    1d98:	ldr	x0, [sp, #96]
    1d9c:	ldr	x0, [x0, #16]
    1da0:	b	1dbc <XS_Encode__Unicode_decode+0x500>
    1da4:	add	x0, sp, #0x48
    1da8:	mov	w3, #0x0                   	// #0
    1dac:	mov	x2, x0
    1db0:	ldr	x1, [sp, #96]
    1db4:	ldr	x0, [sp, #40]
    1db8:	bl	1030 <Perl_sv_2pv_flags@plt>
    1dbc:	str	x0, [sp, #80]
    1dc0:	ldr	x0, [sp, #96]
    1dc4:	ldr	w0, [x0, #12]
    1dc8:	and	w0, w0, #0x20000000
    1dcc:	cmp	w0, #0x0
    1dd0:	b.eq	1ef0 <XS_Encode__Unicode_decode+0x634>  // b.none
    1dd4:	ldrb	w0, [sp, #50]
    1dd8:	eor	w0, w0, #0x1
    1ddc:	and	w0, w0, #0xff
    1de0:	cmp	w0, #0x0
    1de4:	b.eq	1e94 <XS_Encode__Unicode_decode+0x5d8>  // b.none
    1de8:	ldr	x0, [sp, #80]
    1dec:	ldr	x1, [sp, #72]
    1df0:	mov	x2, x1
    1df4:	mov	x1, x0
    1df8:	ldr	x0, [sp, #40]
    1dfc:	bl	11a0 <Perl_newSVpvn@plt>
    1e00:	mov	x1, x0
    1e04:	ldr	x0, [sp, #40]
    1e08:	bl	1110 <Perl_sv_2mortal@plt>
    1e0c:	str	x0, [sp, #208]
    1e10:	ldr	x0, [sp, #208]
    1e14:	ldr	w0, [x0, #12]
    1e18:	orr	w1, w0, #0x20000000
    1e1c:	ldr	x0, [sp, #208]
    1e20:	str	w1, [x0, #12]
    1e24:	ldr	x0, [sp, #96]
    1e28:	ldr	w0, [x0, #12]
    1e2c:	and	w0, w0, #0xe00000
    1e30:	cmp	w0, #0x0
    1e34:	b.eq	1e80 <XS_Encode__Unicode_decode+0x5c4>  // b.none
    1e38:	ldr	x1, [sp, #96]
    1e3c:	ldr	x0, [sp, #40]
    1e40:	bl	11b0 <Perl_sv_tainted@plt>
    1e44:	and	w0, w0, #0xff
    1e48:	cmp	w0, #0x0
    1e4c:	b.eq	1e80 <XS_Encode__Unicode_decode+0x5c4>  // b.none
    1e50:	ldr	x0, [sp, #40]
    1e54:	ldrb	w0, [x0, #184]
    1e58:	and	x0, x0, #0xff
    1e5c:	cmp	x0, #0x0
    1e60:	b.eq	1e80 <XS_Encode__Unicode_decode+0x5c4>  // b.none
    1e64:	mov	w5, #0x0                   	// #0
    1e68:	mov	x4, #0x0                   	// #0
    1e6c:	mov	w3, #0x74                  	// #116
    1e70:	mov	x2, #0x0                   	// #0
    1e74:	ldr	x1, [sp, #208]
    1e78:	ldr	x0, [sp, #40]
    1e7c:	bl	1180 <Perl_sv_magic@plt>
    1e80:	ldr	x0, [sp, #208]
    1e84:	str	x0, [sp, #96]
    1e88:	ldr	x0, [sp, #96]
    1e8c:	ldr	x0, [x0, #16]
    1e90:	str	x0, [sp, #80]
    1e94:	ldr	x0, [sp, #72]
    1e98:	cmp	x0, #0x0
    1e9c:	b.eq	1edc <XS_Encode__Unicode_decode+0x620>  // b.none
    1ea0:	ldr	x0, [sp, #80]
    1ea4:	add	x1, sp, #0x48
    1ea8:	mov	x2, x1
    1eac:	mov	x1, x0
    1eb0:	ldr	x0, [sp, #40]
    1eb4:	bl	fe0 <Perl_utf8_to_bytes@plt>
    1eb8:	cmp	x0, #0x0
    1ebc:	b.ne	1ecc <XS_Encode__Unicode_decode+0x610>  // b.any
    1ec0:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    1ec4:	add	x0, x0, #0x340
    1ec8:	bl	10e0 <Perl_croak_nocontext@plt>
    1ecc:	ldr	x0, [sp, #96]
    1ed0:	ldr	x0, [x0]
    1ed4:	ldr	x1, [sp, #72]
    1ed8:	str	x1, [x0, #16]
    1edc:	ldr	x0, [sp, #96]
    1ee0:	ldr	w0, [x0, #12]
    1ee4:	and	w1, w0, #0xdfffffff
    1ee8:	ldr	x0, [sp, #96]
    1eec:	str	w1, [x0, #12]
    1ef0:	ldr	x1, [sp, #80]
    1ef4:	ldr	x0, [sp, #72]
    1ef8:	add	x0, x1, x0
    1efc:	str	x0, [sp, #216]
    1f00:	ldr	x0, [sp, #72]
    1f04:	cmp	x0, #0x400
    1f08:	cset	w0, eq  // eq = none
    1f0c:	strb	w0, [sp, #51]
    1f10:	ldr	x0, [sp, #40]
    1f14:	ldr	x1, [x0, #24]
    1f18:	ldrsw	x0, [sp, #56]
    1f1c:	lsl	x0, x0, #3
    1f20:	add	x19, x1, x0
    1f24:	ldr	x1, [sp, #192]
    1f28:	ldr	x0, [sp, #40]
    1f2c:	bl	1110 <Perl_sv_2mortal@plt>
    1f30:	str	x0, [x19]
    1f34:	ldr	x0, [sp, #192]
    1f38:	ldr	w0, [x0, #12]
    1f3c:	orr	w1, w0, #0x20000000
    1f40:	ldr	x0, [sp, #192]
    1f44:	str	w1, [x0, #12]
    1f48:	ldrb	w0, [sp, #49]
    1f4c:	cmp	w0, #0x0
    1f50:	b.ne	2294 <XS_Encode__Unicode_decode+0x9d8>  // b.any
    1f54:	ldr	x1, [sp, #80]
    1f58:	ldrsw	x0, [sp, #64]
    1f5c:	add	x0, x1, x0
    1f60:	ldr	x1, [sp, #216]
    1f64:	cmp	x1, x0
    1f68:	b.cc	2294 <XS_Encode__Unicode_decode+0x9d8>  // b.lo, b.ul, b.last
    1f6c:	ldr	w0, [sp, #64]
    1f70:	cmp	w0, #0x4
    1f74:	b.ne	1f80 <XS_Encode__Unicode_decode+0x6c4>  // b.any
    1f78:	mov	w0, #0x4e                  	// #78
    1f7c:	b	1f84 <XS_Encode__Unicode_decode+0x6c8>
    1f80:	mov	w0, #0x6e                  	// #110
    1f84:	strb	w0, [sp, #49]
    1f88:	ldrsw	x1, [sp, #64]
    1f8c:	ldrb	w2, [sp, #49]
    1f90:	add	x0, sp, #0x50
    1f94:	mov	w4, w2
    1f98:	mov	x3, x1
    1f9c:	ldr	x2, [sp, #216]
    1fa0:	mov	x1, x0
    1fa4:	ldr	x0, [sp, #40]
    1fa8:	bl	1534 <enc_unpack>
    1fac:	str	x0, [sp, #224]
    1fb0:	ldr	x1, [sp, #224]
    1fb4:	mov	x0, #0xfeff                	// #65279
    1fb8:	cmp	x1, x0
    1fbc:	b.eq	200c <XS_Encode__Unicode_decode+0x750>  // b.none
    1fc0:	ldr	x1, [sp, #224]
    1fc4:	mov	x0, #0xfffe                	// #65534
    1fc8:	cmp	x1, x0
    1fcc:	b.ne	1fdc <XS_Encode__Unicode_decode+0x720>  // b.any
    1fd0:	mov	w0, #0x76                  	// #118
    1fd4:	strb	w0, [sp, #49]
    1fd8:	b	200c <XS_Encode__Unicode_decode+0x750>
    1fdc:	ldr	x1, [sp, #224]
    1fe0:	mov	x0, #0xfffe0000            	// #4294836224
    1fe4:	cmp	x1, x0
    1fe8:	b.ne	1ff8 <XS_Encode__Unicode_decode+0x73c>  // b.any
    1fec:	mov	w0, #0x56                  	// #86
    1ff0:	strb	w0, [sp, #49]
    1ff4:	b	200c <XS_Encode__Unicode_decode+0x750>
    1ff8:	ldr	x1, [sp, #80]
    1ffc:	ldrsw	x0, [sp, #64]
    2000:	neg	x0, x0
    2004:	add	x0, x1, x0
    2008:	str	x0, [sp, #80]
    200c:	ldr	x0, [sp, #160]
    2010:	ldr	x1, [x0, #16]
    2014:	mov	w6, #0x0                   	// #0
    2018:	mov	x5, #0x0                   	// #0
    201c:	mov	w4, #0x8                   	// #8
    2020:	mov	w3, #0x7                   	// #7
    2024:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2028:	add	x2, x0, #0x350
    202c:	ldr	x0, [sp, #40]
    2030:	bl	1170 <Perl_hv_common_key_len@plt>
    2034:	cmp	x0, #0x0
    2038:	b.eq	206c <XS_Encode__Unicode_decode+0x7b0>  // b.none
    203c:	ldr	x0, [sp, #160]
    2040:	ldr	x1, [x0, #16]
    2044:	mov	w6, #0x0                   	// #0
    2048:	mov	x5, #0x0                   	// #0
    204c:	mov	w4, #0x20                  	// #32
    2050:	mov	w3, #0x7                   	// #7
    2054:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2058:	add	x2, x0, #0x350
    205c:	ldr	x0, [sp, #40]
    2060:	bl	1170 <Perl_hv_common_key_len@plt>
    2064:	ldr	x0, [x0]
    2068:	b	2074 <XS_Encode__Unicode_decode+0x7b8>
    206c:	ldr	x0, [sp, #40]
    2070:	add	x0, x0, #0x150
    2074:	str	x0, [sp, #232]
    2078:	ldr	x0, [sp, #232]
    207c:	cmp	x0, #0x0
    2080:	cset	w0, ne  // ne = any
    2084:	and	w0, w0, #0xff
    2088:	and	x0, x0, #0xff
    208c:	cmp	x0, #0x0
    2090:	b.eq	2294 <XS_Encode__Unicode_decode+0x9d8>  // b.none
    2094:	ldr	x0, [sp, #232]
    2098:	ldr	w0, [x0, #12]
    209c:	lsr	w0, w0, #21
    20a0:	mov	w0, w0
    20a4:	and	x0, x0, #0x1
    20a8:	cmp	x0, #0x0
    20ac:	b.eq	20c4 <XS_Encode__Unicode_decode+0x808>  // b.none
    20b0:	ldr	x1, [sp, #232]
    20b4:	ldr	x0, [sp, #40]
    20b8:	bl	1120 <Perl_mg_get@plt>
    20bc:	cmp	w0, #0x0
    20c0:	nop
    20c4:	ldr	x0, [sp, #40]
    20c8:	add	x0, x0, #0x138
    20cc:	ldr	x1, [sp, #232]
    20d0:	sub	x0, x1, x0
    20d4:	asr	x1, x0, #3
    20d8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    20dc:	movk	x0, #0xaaab
    20e0:	mul	x0, x1, x0
    20e4:	cmp	x0, #0x3
    20e8:	b.hi	2108 <XS_Encode__Unicode_decode+0x84c>  // b.pmore
    20ec:	ldr	x0, [sp, #40]
    20f0:	add	x0, x0, #0x138
    20f4:	ldr	x1, [sp, #232]
    20f8:	cmp	x1, x0
    20fc:	cset	w0, eq  // eq = none
    2100:	and	w0, w0, #0xff
    2104:	b	224c <XS_Encode__Unicode_decode+0x990>
    2108:	ldr	x0, [sp, #232]
    210c:	ldr	w0, [x0, #12]
    2110:	and	w0, w0, #0xff00
    2114:	cmp	w0, #0x0
    2118:	b.eq	2248 <XS_Encode__Unicode_decode+0x98c>  // b.none
    211c:	ldr	x0, [sp, #232]
    2120:	ldr	w0, [x0, #12]
    2124:	and	w0, w0, #0x400
    2128:	cmp	w0, #0x0
    212c:	b.eq	2198 <XS_Encode__Unicode_decode+0x8dc>  // b.none
    2130:	ldr	x0, [sp, #232]
    2134:	ldr	x0, [x0]
    2138:	cmp	x0, #0x0
    213c:	b.eq	2184 <XS_Encode__Unicode_decode+0x8c8>  // b.none
    2140:	ldr	x0, [sp, #232]
    2144:	ldr	x0, [x0]
    2148:	ldr	x0, [x0, #16]
    214c:	cmp	x0, #0x1
    2150:	b.hi	217c <XS_Encode__Unicode_decode+0x8c0>  // b.pmore
    2154:	ldr	x0, [sp, #232]
    2158:	ldr	x0, [x0]
    215c:	ldr	x0, [x0, #16]
    2160:	cmp	x0, #0x0
    2164:	b.eq	2184 <XS_Encode__Unicode_decode+0x8c8>  // b.none
    2168:	ldr	x0, [sp, #232]
    216c:	ldr	x0, [x0, #16]
    2170:	ldrb	w0, [x0]
    2174:	cmp	w0, #0x30
    2178:	b.eq	2184 <XS_Encode__Unicode_decode+0x8c8>  // b.none
    217c:	mov	w0, #0x1                   	// #1
    2180:	b	2188 <XS_Encode__Unicode_decode+0x8cc>
    2184:	mov	w0, #0x0                   	// #0
    2188:	cmp	w0, #0x0
    218c:	cset	w0, ne  // ne = any
    2190:	and	w0, w0, #0xff
    2194:	b	224c <XS_Encode__Unicode_decode+0x990>
    2198:	ldr	x0, [sp, #232]
    219c:	ldr	w0, [x0, #12]
    21a0:	and	w0, w0, #0x100
    21a4:	cmp	w0, #0x0
    21a8:	b.eq	21c8 <XS_Encode__Unicode_decode+0x90c>  // b.none
    21ac:	ldr	x0, [sp, #232]
    21b0:	ldr	x0, [x0]
    21b4:	ldr	x0, [x0, #32]
    21b8:	cmp	x0, #0x0
    21bc:	cset	w0, ne  // ne = any
    21c0:	and	w0, w0, #0xff
    21c4:	b	224c <XS_Encode__Unicode_decode+0x990>
    21c8:	ldr	x0, [sp, #232]
    21cc:	ldr	w0, [x0, #12]
    21d0:	and	w0, w0, #0x800
    21d4:	cmp	w0, #0x0
    21d8:	b.eq	2214 <XS_Encode__Unicode_decode+0x958>  // b.none
    21dc:	ldr	x0, [sp, #232]
    21e0:	ldr	x0, [x0, #16]
    21e4:	ldr	w0, [x0, #12]
    21e8:	and	w0, w0, #0x100000
    21ec:	cmp	w0, #0x0
    21f0:	b.eq	2230 <XS_Encode__Unicode_decode+0x974>  // b.none
    21f4:	ldr	x0, [sp, #232]
    21f8:	ldr	x0, [x0, #16]
    21fc:	ldr	x0, [x0]
    2200:	ldr	x0, [x0]
    2204:	ldr	w0, [x0, #12]
    2208:	and	w0, w0, #0x10000000
    220c:	cmp	w0, #0x0
    2210:	b.eq	2230 <XS_Encode__Unicode_decode+0x974>  // b.none
    2214:	mov	w2, #0x0                   	// #0
    2218:	ldr	x1, [sp, #232]
    221c:	ldr	x0, [sp, #40]
    2220:	bl	fc0 <Perl_sv_2bool_flags@plt>
    2224:	and	w0, w0, #0xff
    2228:	cmp	w0, #0x0
    222c:	b.eq	2238 <XS_Encode__Unicode_decode+0x97c>  // b.none
    2230:	mov	w0, #0x1                   	// #1
    2234:	b	223c <XS_Encode__Unicode_decode+0x980>
    2238:	mov	w0, #0x0                   	// #0
    223c:	and	w0, w0, #0x1
    2240:	and	w0, w0, #0xff
    2244:	b	224c <XS_Encode__Unicode_decode+0x990>
    2248:	mov	w0, #0x0                   	// #0
    224c:	cmp	w0, #0x0
    2250:	b.eq	2294 <XS_Encode__Unicode_decode+0x9d8>  // b.none
    2254:	ldr	x0, [sp, #160]
    2258:	ldr	x19, [x0, #16]
    225c:	add	x0, sp, #0x31
    2260:	mov	x2, #0x1                   	// #1
    2264:	mov	x1, x0
    2268:	ldr	x0, [sp, #40]
    226c:	bl	10d0 <Perl_newSVpv@plt>
    2270:	mov	w6, #0x0                   	// #0
    2274:	mov	x5, x0
    2278:	mov	w4, #0x24                  	// #36
    227c:	mov	w3, #0x6                   	// #6
    2280:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2284:	add	x2, x0, #0x328
    2288:	mov	x1, x19
    228c:	ldr	x0, [sp, #40]
    2290:	bl	1170 <Perl_hv_common_key_len@plt>
    2294:	ldrb	w0, [sp, #51]
    2298:	cmp	w0, #0x0
    229c:	b.eq	22cc <XS_Encode__Unicode_decode+0xa10>  // b.none
    22a0:	ldr	x1, [sp, #72]
    22a4:	ldr	x0, [sp, #200]
    22a8:	udiv	x1, x1, x0
    22ac:	mov	x0, x1
    22b0:	lsl	x0, x0, #1
    22b4:	add	x0, x0, x1
    22b8:	lsl	x0, x0, #2
    22bc:	add	x0, x0, x1
    22c0:	add	x0, x0, #0x1
    22c4:	str	x0, [sp, #112]
    22c8:	b	22e0 <XS_Encode__Unicode_decode+0xa24>
    22cc:	ldr	x1, [sp, #72]
    22d0:	ldr	x0, [sp, #200]
    22d4:	udiv	x0, x1, x0
    22d8:	add	x0, x0, #0xe
    22dc:	str	x0, [sp, #112]
    22e0:	ldr	x0, [sp, #192]
    22e4:	ldr	w0, [x0, #12]
    22e8:	and	w0, w0, #0x10000000
    22ec:	cmp	w0, #0x0
    22f0:	b.ne	230c <XS_Encode__Unicode_decode+0xa50>  // b.any
    22f4:	ldr	x0, [sp, #192]
    22f8:	ldr	x0, [x0]
    22fc:	ldr	x0, [x0, #24]
    2300:	ldr	x1, [sp, #112]
    2304:	cmp	x1, x0
    2308:	b.ls	2320 <XS_Encode__Unicode_decode+0xa64>  // b.plast
    230c:	ldr	x2, [sp, #112]
    2310:	ldr	x1, [sp, #192]
    2314:	ldr	x0, [sp, #40]
    2318:	bl	1090 <Perl_sv_grow@plt>
    231c:	b	2328 <XS_Encode__Unicode_decode+0xa6c>
    2320:	ldr	x0, [sp, #192]
    2324:	ldr	x0, [x0, #16]
    2328:	str	x0, [sp, #120]
    232c:	b	2c20 <XS_Encode__Unicode_decode+0x1364>
    2330:	ldrsw	x1, [sp, #64]
    2334:	ldrb	w2, [sp, #49]
    2338:	add	x0, sp, #0x50
    233c:	mov	w4, w2
    2340:	mov	x3, x1
    2344:	ldr	x2, [sp, #216]
    2348:	mov	x1, x0
    234c:	ldr	x0, [sp, #40]
    2350:	bl	1534 <enc_unpack>
    2354:	str	x0, [sp, #128]
    2358:	str	xzr, [sp, #88]
    235c:	ldr	x1, [sp, #128]
    2360:	mov	x0, #0xd7ff                	// #55295
    2364:	cmp	x1, x0
    2368:	b.ls	28d8 <XS_Encode__Unicode_decode+0x101c>  // b.plast
    236c:	ldr	x1, [sp, #128]
    2370:	mov	x0, #0xdfff                	// #57343
    2374:	cmp	x1, x0
    2378:	b.hi	28d8 <XS_Encode__Unicode_decode+0x101c>  // b.pmore
    237c:	ldr	w0, [sp, #52]
    2380:	cmn	w0, #0x1
    2384:	b.ne	25e0 <XS_Encode__Unicode_decode+0xd24>  // b.any
    2388:	ldr	x0, [sp, #160]
    238c:	ldr	x1, [x0, #16]
    2390:	mov	w6, #0x0                   	// #0
    2394:	mov	x5, #0x0                   	// #0
    2398:	mov	w4, #0x8                   	// #8
    239c:	mov	w3, #0x4                   	// #4
    23a0:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    23a4:	add	x2, x0, #0x358
    23a8:	ldr	x0, [sp, #40]
    23ac:	bl	1170 <Perl_hv_common_key_len@plt>
    23b0:	cmp	x0, #0x0
    23b4:	b.eq	23e8 <XS_Encode__Unicode_decode+0xb2c>  // b.none
    23b8:	ldr	x0, [sp, #160]
    23bc:	ldr	x1, [x0, #16]
    23c0:	mov	w6, #0x0                   	// #0
    23c4:	mov	x5, #0x0                   	// #0
    23c8:	mov	w4, #0x20                  	// #32
    23cc:	mov	w3, #0x4                   	// #4
    23d0:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    23d4:	add	x2, x0, #0x358
    23d8:	ldr	x0, [sp, #40]
    23dc:	bl	1170 <Perl_hv_common_key_len@plt>
    23e0:	ldr	x0, [x0]
    23e4:	b	23f0 <XS_Encode__Unicode_decode+0xb34>
    23e8:	ldr	x0, [sp, #40]
    23ec:	add	x0, x0, #0x150
    23f0:	str	x0, [sp, #240]
    23f4:	ldr	x0, [sp, #240]
    23f8:	cmp	x0, #0x0
    23fc:	cset	w0, ne  // ne = any
    2400:	and	w0, w0, #0xff
    2404:	and	x0, x0, #0xff
    2408:	cmp	x0, #0x0
    240c:	b.eq	25d8 <XS_Encode__Unicode_decode+0xd1c>  // b.none
    2410:	ldr	x0, [sp, #240]
    2414:	ldr	w0, [x0, #12]
    2418:	lsr	w0, w0, #21
    241c:	mov	w0, w0
    2420:	and	x0, x0, #0x1
    2424:	cmp	x0, #0x0
    2428:	b.eq	2440 <XS_Encode__Unicode_decode+0xb84>  // b.none
    242c:	ldr	x1, [sp, #240]
    2430:	ldr	x0, [sp, #40]
    2434:	bl	1120 <Perl_mg_get@plt>
    2438:	cmp	w0, #0x0
    243c:	nop
    2440:	ldr	x0, [sp, #40]
    2444:	add	x0, x0, #0x138
    2448:	ldr	x1, [sp, #240]
    244c:	sub	x0, x1, x0
    2450:	asr	x1, x0, #3
    2454:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2458:	movk	x0, #0xaaab
    245c:	mul	x0, x1, x0
    2460:	cmp	x0, #0x3
    2464:	b.hi	2484 <XS_Encode__Unicode_decode+0xbc8>  // b.pmore
    2468:	ldr	x0, [sp, #40]
    246c:	add	x0, x0, #0x138
    2470:	ldr	x1, [sp, #240]
    2474:	cmp	x1, x0
    2478:	cset	w0, eq  // eq = none
    247c:	and	w0, w0, #0xff
    2480:	b	25c8 <XS_Encode__Unicode_decode+0xd0c>
    2484:	ldr	x0, [sp, #240]
    2488:	ldr	w0, [x0, #12]
    248c:	and	w0, w0, #0xff00
    2490:	cmp	w0, #0x0
    2494:	b.eq	25c4 <XS_Encode__Unicode_decode+0xd08>  // b.none
    2498:	ldr	x0, [sp, #240]
    249c:	ldr	w0, [x0, #12]
    24a0:	and	w0, w0, #0x400
    24a4:	cmp	w0, #0x0
    24a8:	b.eq	2514 <XS_Encode__Unicode_decode+0xc58>  // b.none
    24ac:	ldr	x0, [sp, #240]
    24b0:	ldr	x0, [x0]
    24b4:	cmp	x0, #0x0
    24b8:	b.eq	2500 <XS_Encode__Unicode_decode+0xc44>  // b.none
    24bc:	ldr	x0, [sp, #240]
    24c0:	ldr	x0, [x0]
    24c4:	ldr	x0, [x0, #16]
    24c8:	cmp	x0, #0x1
    24cc:	b.hi	24f8 <XS_Encode__Unicode_decode+0xc3c>  // b.pmore
    24d0:	ldr	x0, [sp, #240]
    24d4:	ldr	x0, [x0]
    24d8:	ldr	x0, [x0, #16]
    24dc:	cmp	x0, #0x0
    24e0:	b.eq	2500 <XS_Encode__Unicode_decode+0xc44>  // b.none
    24e4:	ldr	x0, [sp, #240]
    24e8:	ldr	x0, [x0, #16]
    24ec:	ldrb	w0, [x0]
    24f0:	cmp	w0, #0x30
    24f4:	b.eq	2500 <XS_Encode__Unicode_decode+0xc44>  // b.none
    24f8:	mov	w0, #0x1                   	// #1
    24fc:	b	2504 <XS_Encode__Unicode_decode+0xc48>
    2500:	mov	w0, #0x0                   	// #0
    2504:	cmp	w0, #0x0
    2508:	cset	w0, ne  // ne = any
    250c:	and	w0, w0, #0xff
    2510:	b	25c8 <XS_Encode__Unicode_decode+0xd0c>
    2514:	ldr	x0, [sp, #240]
    2518:	ldr	w0, [x0, #12]
    251c:	and	w0, w0, #0x100
    2520:	cmp	w0, #0x0
    2524:	b.eq	2544 <XS_Encode__Unicode_decode+0xc88>  // b.none
    2528:	ldr	x0, [sp, #240]
    252c:	ldr	x0, [x0]
    2530:	ldr	x0, [x0, #32]
    2534:	cmp	x0, #0x0
    2538:	cset	w0, ne  // ne = any
    253c:	and	w0, w0, #0xff
    2540:	b	25c8 <XS_Encode__Unicode_decode+0xd0c>
    2544:	ldr	x0, [sp, #240]
    2548:	ldr	w0, [x0, #12]
    254c:	and	w0, w0, #0x800
    2550:	cmp	w0, #0x0
    2554:	b.eq	2590 <XS_Encode__Unicode_decode+0xcd4>  // b.none
    2558:	ldr	x0, [sp, #240]
    255c:	ldr	x0, [x0, #16]
    2560:	ldr	w0, [x0, #12]
    2564:	and	w0, w0, #0x100000
    2568:	cmp	w0, #0x0
    256c:	b.eq	25ac <XS_Encode__Unicode_decode+0xcf0>  // b.none
    2570:	ldr	x0, [sp, #240]
    2574:	ldr	x0, [x0, #16]
    2578:	ldr	x0, [x0]
    257c:	ldr	x0, [x0]
    2580:	ldr	w0, [x0, #12]
    2584:	and	w0, w0, #0x10000000
    2588:	cmp	w0, #0x0
    258c:	b.eq	25ac <XS_Encode__Unicode_decode+0xcf0>  // b.none
    2590:	mov	w2, #0x0                   	// #0
    2594:	ldr	x1, [sp, #240]
    2598:	ldr	x0, [sp, #40]
    259c:	bl	fc0 <Perl_sv_2bool_flags@plt>
    25a0:	and	w0, w0, #0xff
    25a4:	cmp	w0, #0x0
    25a8:	b.eq	25b4 <XS_Encode__Unicode_decode+0xcf8>  // b.none
    25ac:	mov	w0, #0x1                   	// #1
    25b0:	b	25b8 <XS_Encode__Unicode_decode+0xcfc>
    25b4:	mov	w0, #0x0                   	// #0
    25b8:	and	w0, w0, #0x1
    25bc:	and	w0, w0, #0xff
    25c0:	b	25c8 <XS_Encode__Unicode_decode+0xd0c>
    25c4:	mov	w0, #0x0                   	// #0
    25c8:	cmp	w0, #0x0
    25cc:	b.eq	25d8 <XS_Encode__Unicode_decode+0xd1c>  // b.none
    25d0:	mov	w0, #0x1                   	// #1
    25d4:	b	25dc <XS_Encode__Unicode_decode+0xd20>
    25d8:	mov	w0, #0x0                   	// #0
    25dc:	str	w0, [sp, #52]
    25e0:	ldr	w0, [sp, #52]
    25e4:	cmp	w0, #0x0
    25e8:	b.ne	25f8 <XS_Encode__Unicode_decode+0xd3c>  // b.any
    25ec:	ldr	w0, [sp, #64]
    25f0:	cmp	w0, #0x4
    25f4:	b.ne	2678 <XS_Encode__Unicode_decode+0xdbc>  // b.any
    25f8:	ldr	x0, [sp, #104]
    25fc:	and	x0, x0, #0x1
    2600:	cmp	x0, #0x0
    2604:	b.eq	261c <XS_Encode__Unicode_decode+0xd60>  // b.none
    2608:	ldr	x2, [sp, #128]
    260c:	ldr	x1, [sp, #168]
    2610:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2614:	add	x0, x0, #0x360
    2618:	bl	10e0 <Perl_croak_nocontext@plt>
    261c:	ldr	x0, [sp, #104]
    2620:	and	x0, x0, #0x2
    2624:	cmp	x0, #0x0
    2628:	b.eq	266c <XS_Encode__Unicode_decode+0xdb0>  // b.none
    262c:	ldr	x0, [sp, #104]
    2630:	and	x0, x0, #0x10
    2634:	cmp	x0, #0x0
    2638:	b.eq	2654 <XS_Encode__Unicode_decode+0xd98>  // b.none
    263c:	mov	w1, #0x32                  	// #50
    2640:	ldr	x0, [sp, #40]
    2644:	bl	1190 <Perl_ckwarn@plt>
    2648:	and	w0, w0, #0xff
    264c:	cmp	w0, #0x0
    2650:	b.eq	266c <XS_Encode__Unicode_decode+0xdb0>  // b.none
    2654:	ldr	x3, [sp, #128]
    2658:	ldr	x2, [sp, #168]
    265c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2660:	add	x1, x0, #0x360
    2664:	mov	w0, #0x32                  	// #50
    2668:	bl	10b0 <Perl_warner_nocontext@plt>
    266c:	mov	x0, #0xfffd                	// #65533
    2670:	str	x0, [sp, #128]
    2674:	b	28d8 <XS_Encode__Unicode_decode+0x101c>
    2678:	ldr	x1, [sp, #128]
    267c:	mov	x0, #0xd7ff                	// #55295
    2680:	cmp	x1, x0
    2684:	b.ls	2698 <XS_Encode__Unicode_decode+0xddc>  // b.plast
    2688:	ldr	x1, [sp, #128]
    268c:	mov	x0, #0xdbff                	// #56319
    2690:	cmp	x1, x0
    2694:	b.ls	2718 <XS_Encode__Unicode_decode+0xe5c>  // b.plast
    2698:	ldr	x0, [sp, #104]
    269c:	and	x0, x0, #0x1
    26a0:	cmp	x0, #0x0
    26a4:	b.eq	26bc <XS_Encode__Unicode_decode+0xe00>  // b.none
    26a8:	ldr	x2, [sp, #128]
    26ac:	ldr	x1, [sp, #168]
    26b0:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    26b4:	add	x0, x0, #0x380
    26b8:	bl	10e0 <Perl_croak_nocontext@plt>
    26bc:	ldr	x0, [sp, #104]
    26c0:	and	x0, x0, #0x2
    26c4:	cmp	x0, #0x0
    26c8:	b.eq	270c <XS_Encode__Unicode_decode+0xe50>  // b.none
    26cc:	ldr	x0, [sp, #104]
    26d0:	and	x0, x0, #0x10
    26d4:	cmp	x0, #0x0
    26d8:	b.eq	26f4 <XS_Encode__Unicode_decode+0xe38>  // b.none
    26dc:	mov	w1, #0x32                  	// #50
    26e0:	ldr	x0, [sp, #40]
    26e4:	bl	1190 <Perl_ckwarn@plt>
    26e8:	and	w0, w0, #0xff
    26ec:	cmp	w0, #0x0
    26f0:	b.eq	270c <XS_Encode__Unicode_decode+0xe50>  // b.none
    26f4:	ldr	x3, [sp, #128]
    26f8:	ldr	x2, [sp, #168]
    26fc:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2700:	add	x1, x0, #0x380
    2704:	mov	w0, #0x32                  	// #50
    2708:	bl	10b0 <Perl_warner_nocontext@plt>
    270c:	mov	x0, #0xfffd                	// #65533
    2710:	str	x0, [sp, #128]
    2714:	b	28d8 <XS_Encode__Unicode_decode+0x101c>
    2718:	ldr	x1, [sp, #80]
    271c:	ldrsw	x0, [sp, #64]
    2720:	add	x0, x1, x0
    2724:	ldr	x1, [sp, #216]
    2728:	cmp	x1, x0
    272c:	b.cs	27d8 <XS_Encode__Unicode_decode+0xf1c>  // b.hs, b.nlast
    2730:	ldr	x0, [sp, #104]
    2734:	and	x0, x0, #0x800
    2738:	cmp	x0, #0x0
    273c:	b.eq	2758 <XS_Encode__Unicode_decode+0xe9c>  // b.none
    2740:	ldr	x1, [sp, #80]
    2744:	ldrsw	x0, [sp, #64]
    2748:	neg	x0, x0
    274c:	add	x0, x1, x0
    2750:	str	x0, [sp, #80]
    2754:	b	2c48 <XS_Encode__Unicode_decode+0x138c>
    2758:	ldr	x0, [sp, #104]
    275c:	and	x0, x0, #0x1
    2760:	cmp	x0, #0x0
    2764:	b.eq	277c <XS_Encode__Unicode_decode+0xec0>  // b.none
    2768:	ldr	x2, [sp, #128]
    276c:	ldr	x1, [sp, #168]
    2770:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2774:	add	x0, x0, #0x380
    2778:	bl	10e0 <Perl_croak_nocontext@plt>
    277c:	ldr	x0, [sp, #104]
    2780:	and	x0, x0, #0x2
    2784:	cmp	x0, #0x0
    2788:	b.eq	27cc <XS_Encode__Unicode_decode+0xf10>  // b.none
    278c:	ldr	x0, [sp, #104]
    2790:	and	x0, x0, #0x10
    2794:	cmp	x0, #0x0
    2798:	b.eq	27b4 <XS_Encode__Unicode_decode+0xef8>  // b.none
    279c:	mov	w1, #0x32                  	// #50
    27a0:	ldr	x0, [sp, #40]
    27a4:	bl	1190 <Perl_ckwarn@plt>
    27a8:	and	w0, w0, #0xff
    27ac:	cmp	w0, #0x0
    27b0:	b.eq	27cc <XS_Encode__Unicode_decode+0xf10>  // b.none
    27b4:	ldr	x3, [sp, #128]
    27b8:	ldr	x2, [sp, #168]
    27bc:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    27c0:	add	x1, x0, #0x380
    27c4:	mov	w0, #0x32                  	// #50
    27c8:	bl	10b0 <Perl_warner_nocontext@plt>
    27cc:	mov	x0, #0xfffd                	// #65533
    27d0:	str	x0, [sp, #128]
    27d4:	b	28d8 <XS_Encode__Unicode_decode+0x101c>
    27d8:	ldrsw	x1, [sp, #64]
    27dc:	ldrb	w2, [sp, #49]
    27e0:	add	x0, sp, #0x50
    27e4:	mov	w4, w2
    27e8:	mov	x3, x1
    27ec:	ldr	x2, [sp, #216]
    27f0:	mov	x1, x0
    27f4:	ldr	x0, [sp, #40]
    27f8:	bl	1534 <enc_unpack>
    27fc:	str	x0, [sp, #248]
    2800:	ldr	x1, [sp, #248]
    2804:	mov	x0, #0xdbff                	// #56319
    2808:	cmp	x1, x0
    280c:	b.ls	2820 <XS_Encode__Unicode_decode+0xf64>  // b.plast
    2810:	ldr	x1, [sp, #248]
    2814:	mov	x0, #0xdfff                	// #57343
    2818:	cmp	x1, x0
    281c:	b.ls	28b4 <XS_Encode__Unicode_decode+0xff8>  // b.plast
    2820:	ldr	x0, [sp, #104]
    2824:	and	x0, x0, #0x1
    2828:	cmp	x0, #0x0
    282c:	b.eq	2844 <XS_Encode__Unicode_decode+0xf88>  // b.none
    2830:	ldr	x2, [sp, #128]
    2834:	ldr	x1, [sp, #168]
    2838:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    283c:	add	x0, x0, #0x3a0
    2840:	bl	10e0 <Perl_croak_nocontext@plt>
    2844:	ldr	x0, [sp, #104]
    2848:	and	x0, x0, #0x2
    284c:	cmp	x0, #0x0
    2850:	b.eq	2894 <XS_Encode__Unicode_decode+0xfd8>  // b.none
    2854:	ldr	x0, [sp, #104]
    2858:	and	x0, x0, #0x10
    285c:	cmp	x0, #0x0
    2860:	b.eq	287c <XS_Encode__Unicode_decode+0xfc0>  // b.none
    2864:	mov	w1, #0x32                  	// #50
    2868:	ldr	x0, [sp, #40]
    286c:	bl	1190 <Perl_ckwarn@plt>
    2870:	and	w0, w0, #0xff
    2874:	cmp	w0, #0x0
    2878:	b.eq	2894 <XS_Encode__Unicode_decode+0xfd8>  // b.none
    287c:	ldr	x3, [sp, #128]
    2880:	ldr	x2, [sp, #168]
    2884:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2888:	add	x1, x0, #0x3a0
    288c:	mov	w0, #0x32                  	// #50
    2890:	bl	10b0 <Perl_warner_nocontext@plt>
    2894:	ldr	x1, [sp, #80]
    2898:	ldrsw	x0, [sp, #64]
    289c:	neg	x0, x0
    28a0:	add	x0, x1, x0
    28a4:	str	x0, [sp, #80]
    28a8:	mov	x0, #0xfffd                	// #65533
    28ac:	str	x0, [sp, #128]
    28b0:	b	28d8 <XS_Encode__Unicode_decode+0x101c>
    28b4:	ldr	x1, [sp, #128]
    28b8:	mov	x0, #0xffffffffffff2800    	// #-55296
    28bc:	add	x0, x1, x0
    28c0:	lsl	x1, x0, #10
    28c4:	ldr	x0, [sp, #248]
    28c8:	add	x1, x1, x0
    28cc:	mov	x0, #0x2400                	// #9216
    28d0:	add	x0, x1, x0
    28d4:	str	x0, [sp, #128]
    28d8:	ldr	x0, [sp, #128]
    28dc:	and	x1, x0, #0xfffe
    28e0:	mov	x0, #0xfffe                	// #65534
    28e4:	cmp	x1, x0
    28e8:	b.eq	290c <XS_Encode__Unicode_decode+0x1050>  // b.none
    28ec:	ldr	x1, [sp, #128]
    28f0:	mov	x0, #0xfdcf                	// #64975
    28f4:	cmp	x1, x0
    28f8:	b.ls	2988 <XS_Encode__Unicode_decode+0x10cc>  // b.plast
    28fc:	ldr	x1, [sp, #128]
    2900:	mov	x0, #0xfdef                	// #65007
    2904:	cmp	x1, x0
    2908:	b.hi	2988 <XS_Encode__Unicode_decode+0x10cc>  // b.pmore
    290c:	ldr	x0, [sp, #104]
    2910:	and	x0, x0, #0x1
    2914:	cmp	x0, #0x0
    2918:	b.eq	2930 <XS_Encode__Unicode_decode+0x1074>  // b.none
    291c:	ldr	x2, [sp, #128]
    2920:	ldr	x1, [sp, #168]
    2924:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2928:	add	x0, x0, #0x3c0
    292c:	bl	10e0 <Perl_croak_nocontext@plt>
    2930:	ldr	x0, [sp, #104]
    2934:	and	x0, x0, #0x2
    2938:	cmp	x0, #0x0
    293c:	b.eq	2980 <XS_Encode__Unicode_decode+0x10c4>  // b.none
    2940:	ldr	x0, [sp, #104]
    2944:	and	x0, x0, #0x10
    2948:	cmp	x0, #0x0
    294c:	b.eq	2968 <XS_Encode__Unicode_decode+0x10ac>  // b.none
    2950:	mov	w1, #0x31                  	// #49
    2954:	ldr	x0, [sp, #40]
    2958:	bl	1190 <Perl_ckwarn@plt>
    295c:	and	w0, w0, #0xff
    2960:	cmp	w0, #0x0
    2964:	b.eq	2980 <XS_Encode__Unicode_decode+0x10c4>  // b.none
    2968:	ldr	x3, [sp, #128]
    296c:	ldr	x2, [sp, #168]
    2970:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2974:	add	x1, x0, #0x3c0
    2978:	mov	w0, #0x31                  	// #49
    297c:	bl	10b0 <Perl_warner_nocontext@plt>
    2980:	mov	x0, #0xfffd                	// #65533
    2984:	str	x0, [sp, #128]
    2988:	ldr	x0, [sp, #192]
    298c:	ldr	x0, [x0]
    2990:	ldr	x0, [x0, #16]
    2994:	add	x0, x0, #0xe
    2998:	ldr	x1, [sp, #112]
    299c:	cmp	x1, x0
    29a0:	b.cs	2a70 <XS_Encode__Unicode_decode+0x11b4>  // b.hs, b.nlast
    29a4:	ldr	x0, [sp, #80]
    29a8:	ldr	x1, [sp, #216]
    29ac:	sub	x0, x1, x0
    29b0:	mov	x1, x0
    29b4:	ldr	x0, [sp, #200]
    29b8:	udiv	x0, x1, x0
    29bc:	add	x0, x0, #0x1
    29c0:	str	x0, [sp, #256]
    29c4:	ldr	x0, [sp, #256]
    29c8:	add	x0, x0, #0x800, lsl #12
    29cc:	str	x0, [sp, #264]
    29d0:	ldr	x1, [sp, #256]
    29d4:	mov	x0, x1
    29d8:	lsl	x0, x0, #1
    29dc:	add	x0, x0, x1
    29e0:	lsl	x0, x0, #2
    29e4:	add	x0, x0, x1
    29e8:	str	x0, [sp, #272]
    29ec:	ldr	x0, [sp, #192]
    29f0:	ldr	x0, [x0]
    29f4:	ldr	x1, [x0, #24]
    29f8:	ldr	x0, [sp, #264]
    29fc:	ldr	x3, [sp, #272]
    2a00:	ldr	x2, [sp, #272]
    2a04:	cmp	x3, x0
    2a08:	csel	x0, x2, x0, ls  // ls = plast
    2a0c:	add	x0, x1, x0
    2a10:	str	x0, [sp, #280]
    2a14:	ldr	x0, [sp, #192]
    2a18:	ldr	w0, [x0, #12]
    2a1c:	and	w0, w0, #0x10000000
    2a20:	cmp	w0, #0x0
    2a24:	b.ne	2a40 <XS_Encode__Unicode_decode+0x1184>  // b.any
    2a28:	ldr	x0, [sp, #192]
    2a2c:	ldr	x0, [x0]
    2a30:	ldr	x0, [x0, #24]
    2a34:	ldr	x1, [sp, #280]
    2a38:	cmp	x1, x0
    2a3c:	b.ls	2a54 <XS_Encode__Unicode_decode+0x1198>  // b.plast
    2a40:	ldr	x2, [sp, #280]
    2a44:	ldr	x1, [sp, #192]
    2a48:	ldr	x0, [sp, #40]
    2a4c:	bl	1090 <Perl_sv_grow@plt>
    2a50:	b	2a5c <XS_Encode__Unicode_decode+0x11a0>
    2a54:	ldr	x0, [sp, #192]
    2a58:	ldr	x0, [x0, #16]
    2a5c:	str	x0, [sp, #120]
    2a60:	ldr	x0, [sp, #192]
    2a64:	ldr	x0, [x0]
    2a68:	ldr	x0, [x0, #24]
    2a6c:	str	x0, [sp, #112]
    2a70:	ldr	x0, [sp, #192]
    2a74:	ldr	x0, [x0]
    2a78:	ldr	x0, [x0, #16]
    2a7c:	ldr	x1, [sp, #120]
    2a80:	add	x0, x1, x0
    2a84:	add	x1, sp, #0x58
    2a88:	mov	x4, x1
    2a8c:	mov	x3, #0x77                  	// #119
    2a90:	ldr	x2, [sp, #128]
    2a94:	mov	x1, x0
    2a98:	ldr	x0, [sp, #40]
    2a9c:	bl	1140 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
    2aa0:	str	x0, [sp, #136]
    2aa4:	ldr	x0, [sp, #88]
    2aa8:	cmp	x0, #0x0
    2aac:	b.eq	2c04 <XS_Encode__Unicode_decode+0x1348>  // b.none
    2ab0:	ldr	x1, [sp, #88]
    2ab4:	mov	w6, #0x0                   	// #0
    2ab8:	mov	x5, #0x0                   	// #0
    2abc:	mov	w4, #0x20                  	// #32
    2ac0:	mov	w3, #0x4                   	// #4
    2ac4:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2ac8:	add	x2, x0, #0x3e8
    2acc:	ldr	x0, [sp, #40]
    2ad0:	bl	1170 <Perl_hv_common_key_len@plt>
    2ad4:	ldr	x0, [x0]
    2ad8:	str	x0, [sp, #288]
    2adc:	ldr	x1, [sp, #88]
    2ae0:	mov	w6, #0x0                   	// #0
    2ae4:	mov	x5, #0x0                   	// #0
    2ae8:	mov	w4, #0x20                  	// #32
    2aec:	mov	w3, #0xf                   	// #15
    2af0:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2af4:	add	x2, x0, #0x3f0
    2af8:	ldr	x0, [sp, #40]
    2afc:	bl	1170 <Perl_hv_common_key_len@plt>
    2b00:	ldr	x0, [x0]
    2b04:	str	x0, [sp, #296]
    2b08:	ldr	x0, [sp, #296]
    2b0c:	str	x0, [sp, #304]
    2b10:	ldr	x0, [sp, #304]
    2b14:	ldr	w1, [x0, #12]
    2b18:	mov	w0, #0x100                 	// #256
    2b1c:	movk	w0, #0x8020, lsl #16
    2b20:	and	w1, w1, w0
    2b24:	mov	w0, #0x100                 	// #256
    2b28:	movk	w0, #0x8000, lsl #16
    2b2c:	cmp	w1, w0
    2b30:	b.ne	2b44 <XS_Encode__Unicode_decode+0x1288>  // b.any
    2b34:	ldr	x0, [sp, #304]
    2b38:	ldr	x0, [x0]
    2b3c:	ldr	x0, [x0, #32]
    2b40:	b	2b54 <XS_Encode__Unicode_decode+0x1298>
    2b44:	mov	w2, #0x2                   	// #2
    2b48:	ldr	x1, [sp, #304]
    2b4c:	ldr	x0, [sp, #40]
    2b50:	bl	1000 <Perl_sv_2uv_flags@plt>
    2b54:	str	w0, [sp, #68]
    2b58:	ldr	x0, [sp, #88]
    2b5c:	mov	x1, x0
    2b60:	ldr	x0, [sp, #40]
    2b64:	bl	1110 <Perl_sv_2mortal@plt>
    2b68:	ldr	x0, [sp, #104]
    2b6c:	and	x0, x0, #0x1
    2b70:	cmp	x0, #0x0
    2b74:	b.eq	2b88 <XS_Encode__Unicode_decode+0x12cc>  // b.none
    2b78:	ldr	x1, [sp, #288]
    2b7c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2b80:	add	x0, x0, #0x400
    2b84:	bl	10e0 <Perl_croak_nocontext@plt>
    2b88:	ldr	x0, [sp, #104]
    2b8c:	and	x0, x0, #0x2
    2b90:	cmp	x0, #0x0
    2b94:	b.eq	2bd4 <XS_Encode__Unicode_decode+0x1318>  // b.none
    2b98:	ldr	x0, [sp, #104]
    2b9c:	and	x0, x0, #0x10
    2ba0:	cmp	x0, #0x0
    2ba4:	b.eq	2bc0 <XS_Encode__Unicode_decode+0x1304>  // b.none
    2ba8:	ldr	w1, [sp, #68]
    2bac:	ldr	x0, [sp, #40]
    2bb0:	bl	1190 <Perl_ckwarn@plt>
    2bb4:	and	w0, w0, #0xff
    2bb8:	cmp	w0, #0x0
    2bbc:	b.eq	2bd4 <XS_Encode__Unicode_decode+0x1318>  // b.none
    2bc0:	ldr	x2, [sp, #288]
    2bc4:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2bc8:	add	x1, x0, #0x400
    2bcc:	ldr	w0, [sp, #68]
    2bd0:	bl	10b0 <Perl_warner_nocontext@plt>
    2bd4:	ldr	x0, [sp, #192]
    2bd8:	ldr	x0, [x0]
    2bdc:	ldr	x0, [x0, #16]
    2be0:	ldr	x1, [sp, #120]
    2be4:	add	x0, x1, x0
    2be8:	mov	x4, #0x0                   	// #0
    2bec:	mov	x3, #0x0                   	// #0
    2bf0:	mov	x2, #0xfffd                	// #65533
    2bf4:	mov	x1, x0
    2bf8:	ldr	x0, [sp, #40]
    2bfc:	bl	1140 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
    2c00:	str	x0, [sp, #136]
    2c04:	ldr	x0, [sp, #192]
    2c08:	ldr	x0, [x0, #16]
    2c0c:	ldr	x1, [sp, #136]
    2c10:	sub	x1, x1, x0
    2c14:	ldr	x0, [sp, #192]
    2c18:	ldr	x0, [x0]
    2c1c:	str	x1, [x0, #16]
    2c20:	ldr	x0, [sp, #80]
    2c24:	ldr	x1, [sp, #216]
    2c28:	cmp	x1, x0
    2c2c:	b.ls	2c48 <XS_Encode__Unicode_decode+0x138c>  // b.plast
    2c30:	ldr	x1, [sp, #80]
    2c34:	ldrsw	x0, [sp, #64]
    2c38:	add	x0, x1, x0
    2c3c:	ldr	x1, [sp, #216]
    2c40:	cmp	x1, x0
    2c44:	b.cs	2330 <XS_Encode__Unicode_decode+0xa74>  // b.hs, b.nlast
    2c48:	ldr	x0, [sp, #80]
    2c4c:	ldr	x1, [sp, #216]
    2c50:	cmp	x1, x0
    2c54:	b.ls	2cc4 <XS_Encode__Unicode_decode+0x1408>  // b.plast
    2c58:	ldr	x0, [sp, #104]
    2c5c:	and	x0, x0, #0x1
    2c60:	cmp	x0, #0x0
    2c64:	b.eq	2c78 <XS_Encode__Unicode_decode+0x13bc>  // b.none
    2c68:	ldr	x1, [sp, #168]
    2c6c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2c70:	add	x0, x0, #0x408
    2c74:	bl	10e0 <Perl_croak_nocontext@plt>
    2c78:	ldr	x0, [sp, #104]
    2c7c:	and	x0, x0, #0x2
    2c80:	cmp	x0, #0x0
    2c84:	b.eq	2cc4 <XS_Encode__Unicode_decode+0x1408>  // b.none
    2c88:	ldr	x0, [sp, #104]
    2c8c:	and	x0, x0, #0x10
    2c90:	cmp	x0, #0x0
    2c94:	b.eq	2cb0 <XS_Encode__Unicode_decode+0x13f4>  // b.none
    2c98:	mov	w1, #0x2c                  	// #44
    2c9c:	ldr	x0, [sp, #40]
    2ca0:	bl	1190 <Perl_ckwarn@plt>
    2ca4:	and	w0, w0, #0xff
    2ca8:	cmp	w0, #0x0
    2cac:	b.eq	2cc4 <XS_Encode__Unicode_decode+0x1408>  // b.none
    2cb0:	ldr	x2, [sp, #168]
    2cb4:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2cb8:	add	x1, x0, #0x408
    2cbc:	mov	w0, #0x2c                  	// #44
    2cc0:	bl	10b0 <Perl_warner_nocontext@plt>
    2cc4:	ldr	x0, [sp, #104]
    2cc8:	cmp	x0, #0x0
    2ccc:	b.eq	2d84 <XS_Encode__Unicode_decode+0x14c8>  // b.none
    2cd0:	ldr	x0, [sp, #104]
    2cd4:	and	x0, x0, #0x8
    2cd8:	cmp	x0, #0x0
    2cdc:	b.ne	2d84 <XS_Encode__Unicode_decode+0x14c8>  // b.any
    2ce0:	ldr	x0, [sp, #80]
    2ce4:	ldr	x1, [sp, #216]
    2ce8:	cmp	x1, x0
    2cec:	b.ls	2d34 <XS_Encode__Unicode_decode+0x1478>  // b.plast
    2cf0:	ldr	x0, [sp, #96]
    2cf4:	ldr	x3, [x0, #16]
    2cf8:	ldr	x4, [sp, #80]
    2cfc:	ldr	x0, [sp, #80]
    2d00:	ldr	x1, [sp, #216]
    2d04:	sub	x0, x1, x0
    2d08:	mov	x2, x0
    2d0c:	mov	x1, x4
    2d10:	mov	x0, x3
    2d14:	bl	fa0 <memmove@plt>
    2d18:	ldr	x0, [sp, #80]
    2d1c:	ldr	x1, [sp, #216]
    2d20:	sub	x1, x1, x0
    2d24:	ldr	x0, [sp, #96]
    2d28:	ldr	x0, [x0]
    2d2c:	str	x1, [x0, #16]
    2d30:	b	2d40 <XS_Encode__Unicode_decode+0x1484>
    2d34:	ldr	x0, [sp, #96]
    2d38:	ldr	x0, [x0]
    2d3c:	str	xzr, [x0, #16]
    2d40:	ldr	x0, [sp, #96]
    2d44:	ldr	x1, [x0, #16]
    2d48:	ldr	x0, [sp, #96]
    2d4c:	ldr	x0, [x0]
    2d50:	ldr	x0, [x0, #16]
    2d54:	add	x0, x1, x0
    2d58:	strb	wzr, [x0]
    2d5c:	ldr	x0, [sp, #96]
    2d60:	ldr	w0, [x0, #12]
    2d64:	lsr	w0, w0, #22
    2d68:	mov	w0, w0
    2d6c:	and	x0, x0, #0x1
    2d70:	cmp	x0, #0x0
    2d74:	b.eq	2d84 <XS_Encode__Unicode_decode+0x14c8>  // b.none
    2d78:	ldr	x1, [sp, #96]
    2d7c:	ldr	x0, [sp, #40]
    2d80:	bl	1100 <Perl_mg_set@plt>
    2d84:	ldrb	w0, [sp, #51]
    2d88:	eor	w0, w0, #0x1
    2d8c:	and	w0, w0, #0xff
    2d90:	cmp	w0, #0x0
    2d94:	b.eq	2e1c <XS_Encode__Unicode_decode+0x1560>  // b.none
    2d98:	ldr	x0, [sp, #192]
    2d9c:	ldr	x0, [x0]
    2da0:	ldr	x1, [x0, #24]
    2da4:	ldr	x0, [sp, #192]
    2da8:	ldr	x0, [x0]
    2dac:	ldr	x0, [x0, #16]
    2db0:	add	x0, x0, #0x2a
    2db4:	cmp	x1, x0
    2db8:	b.ls	2e1c <XS_Encode__Unicode_decode+0x1560>  // b.plast
    2dbc:	ldr	x0, [sp, #192]
    2dc0:	ldr	x0, [x0]
    2dc4:	ldr	x0, [x0, #16]
    2dc8:	add	x0, x0, #0x1
    2dcc:	str	x0, [sp, #312]
    2dd0:	ldr	x0, [sp, #312]
    2dd4:	bl	1050 <Perl_safesysmalloc@plt>
    2dd8:	str	x0, [sp, #320]
    2ddc:	ldr	x0, [sp, #192]
    2de0:	ldr	x0, [x0, #16]
    2de4:	ldr	x2, [sp, #312]
    2de8:	mov	x1, x0
    2dec:	ldr	x0, [sp, #320]
    2df0:	bl	f90 <memcpy@plt>
    2df4:	ldr	x0, [sp, #192]
    2df8:	ldr	x0, [x0, #16]
    2dfc:	bl	1130 <Perl_safesysfree@plt>
    2e00:	ldr	x0, [sp, #192]
    2e04:	ldr	x1, [sp, #320]
    2e08:	str	x1, [x0, #16]
    2e0c:	ldr	x0, [sp, #192]
    2e10:	ldr	x0, [x0]
    2e14:	ldr	x1, [sp, #312]
    2e18:	str	x1, [x0, #24]
    2e1c:	ldr	x0, [sp, #96]
    2e20:	ldr	w0, [x0, #12]
    2e24:	and	w0, w0, #0xe00000
    2e28:	cmp	w0, #0x0
    2e2c:	b.eq	2e78 <XS_Encode__Unicode_decode+0x15bc>  // b.none
    2e30:	ldr	x1, [sp, #96]
    2e34:	ldr	x0, [sp, #40]
    2e38:	bl	11b0 <Perl_sv_tainted@plt>
    2e3c:	and	w0, w0, #0xff
    2e40:	cmp	w0, #0x0
    2e44:	b.eq	2e78 <XS_Encode__Unicode_decode+0x15bc>  // b.none
    2e48:	ldr	x0, [sp, #40]
    2e4c:	ldrb	w0, [x0, #184]
    2e50:	and	x0, x0, #0xff
    2e54:	cmp	x0, #0x0
    2e58:	b.eq	2e78 <XS_Encode__Unicode_decode+0x15bc>  // b.none
    2e5c:	mov	w5, #0x0                   	// #0
    2e60:	mov	x4, #0x0                   	// #0
    2e64:	mov	w3, #0x74                  	// #116
    2e68:	mov	x2, #0x0                   	// #0
    2e6c:	ldr	x1, [sp, #192]
    2e70:	ldr	x0, [sp, #40]
    2e74:	bl	1180 <Perl_sv_magic@plt>
    2e78:	mov	x0, #0x1                   	// #1
    2e7c:	str	x0, [sp, #328]
    2e80:	ldr	x0, [sp, #40]
    2e84:	ldr	x1, [x0, #24]
    2e88:	ldrsw	x2, [sp, #56]
    2e8c:	ldr	x0, [sp, #328]
    2e90:	add	x0, x2, x0
    2e94:	lsl	x0, x0, #3
    2e98:	sub	x0, x0, #0x8
    2e9c:	add	x1, x1, x0
    2ea0:	ldr	x0, [sp, #40]
    2ea4:	str	x1, [x0]
    2ea8:	nop
    2eac:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    2eb0:	ldr	x0, [x0, #4040]
    2eb4:	ldr	x1, [sp, #344]
    2eb8:	ldr	x0, [x0]
    2ebc:	eor	x0, x1, x0
    2ec0:	cmp	x0, #0x0
    2ec4:	b.eq	2ecc <XS_Encode__Unicode_decode+0x1610>  // b.none
    2ec8:	bl	1060 <__stack_chk_fail@plt>
    2ecc:	ldr	x19, [sp, #16]
    2ed0:	ldp	x29, x30, [sp], #352
    2ed4:	ret

0000000000002ed8 <XS_Encode__Unicode_encode>:
    2ed8:	stp	x29, x30, [sp, #-336]!
    2edc:	mov	x29, sp
    2ee0:	str	x19, [sp, #16]
    2ee4:	str	x0, [sp, #40]
    2ee8:	str	x1, [sp, #32]
    2eec:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    2ef0:	ldr	x0, [x0, #4040]
    2ef4:	ldr	x1, [x0]
    2ef8:	str	x1, [sp, #328]
    2efc:	mov	x1, #0x0                   	// #0
    2f00:	ldr	x0, [sp, #40]
    2f04:	ldr	x0, [x0]
    2f08:	str	x0, [sp, #128]
    2f0c:	ldr	x0, [sp, #40]
    2f10:	bl	1350 <S_POPMARK>
    2f14:	str	w0, [sp, #56]
    2f18:	ldr	x0, [sp, #40]
    2f1c:	ldr	x1, [x0, #24]
    2f20:	ldr	w0, [sp, #56]
    2f24:	add	w2, w0, #0x1
    2f28:	str	w2, [sp, #56]
    2f2c:	sxtw	x0, w0
    2f30:	lsl	x0, x0, #3
    2f34:	add	x0, x1, x0
    2f38:	str	x0, [sp, #136]
    2f3c:	ldr	x1, [sp, #128]
    2f40:	ldr	x0, [sp, #136]
    2f44:	sub	x0, x1, x0
    2f48:	asr	x0, x0, #3
    2f4c:	str	w0, [sp, #60]
    2f50:	ldr	w0, [sp, #60]
    2f54:	cmp	w0, #0x1
    2f58:	b.le	2f68 <XS_Encode__Unicode_encode+0x90>
    2f5c:	ldr	w0, [sp, #60]
    2f60:	cmp	w0, #0x3
    2f64:	b.le	2f78 <XS_Encode__Unicode_encode+0xa0>
    2f68:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    2f6c:	add	x1, x0, #0x420
    2f70:	ldr	x0, [sp, #32]
    2f74:	bl	1080 <Perl_croak_xs_usage@plt>
    2f78:	ldr	x0, [sp, #40]
    2f7c:	ldr	x1, [x0, #24]
    2f80:	ldrsw	x0, [sp, #56]
    2f84:	lsl	x0, x0, #3
    2f88:	add	x0, x1, x0
    2f8c:	ldr	x0, [x0]
    2f90:	str	x0, [sp, #144]
    2f94:	ldr	x0, [sp, #40]
    2f98:	ldr	x1, [x0, #24]
    2f9c:	ldrsw	x0, [sp, #56]
    2fa0:	add	x0, x0, #0x1
    2fa4:	lsl	x0, x0, #3
    2fa8:	add	x0, x1, x0
    2fac:	ldr	x0, [x0]
    2fb0:	str	x0, [sp, #96]
    2fb4:	ldr	w0, [sp, #60]
    2fb8:	cmp	w0, #0x2
    2fbc:	b.gt	2fc8 <XS_Encode__Unicode_encode+0xf0>
    2fc0:	str	xzr, [sp, #104]
    2fc4:	b	3054 <XS_Encode__Unicode_encode+0x17c>
    2fc8:	ldr	x0, [sp, #40]
    2fcc:	ldr	x1, [x0, #24]
    2fd0:	ldrsw	x0, [sp, #56]
    2fd4:	add	x0, x0, #0x2
    2fd8:	lsl	x0, x0, #3
    2fdc:	add	x0, x1, x0
    2fe0:	ldr	x0, [x0]
    2fe4:	ldr	w1, [x0, #12]
    2fe8:	mov	w0, #0x100                 	// #256
    2fec:	movk	w0, #0x20, lsl #16
    2ff0:	and	w0, w1, w0
    2ff4:	cmp	w0, #0x100
    2ff8:	b.ne	3024 <XS_Encode__Unicode_encode+0x14c>  // b.any
    2ffc:	ldr	x0, [sp, #40]
    3000:	ldr	x1, [x0, #24]
    3004:	ldrsw	x0, [sp, #56]
    3008:	add	x0, x0, #0x2
    300c:	lsl	x0, x0, #3
    3010:	add	x0, x1, x0
    3014:	ldr	x0, [x0]
    3018:	ldr	x0, [x0]
    301c:	ldr	x0, [x0, #32]
    3020:	b	3050 <XS_Encode__Unicode_encode+0x178>
    3024:	ldr	x0, [sp, #40]
    3028:	ldr	x1, [x0, #24]
    302c:	ldrsw	x0, [sp, #56]
    3030:	add	x0, x0, #0x2
    3034:	lsl	x0, x0, #3
    3038:	add	x0, x1, x0
    303c:	ldr	x0, [x0]
    3040:	mov	w2, #0x2                   	// #2
    3044:	mov	x1, x0
    3048:	ldr	x0, [sp, #40]
    304c:	bl	fb0 <Perl_sv_2iv_flags@plt>
    3050:	str	x0, [sp, #104]
    3054:	ldr	x0, [sp, #144]
    3058:	ldr	x1, [x0, #16]
    305c:	mov	w6, #0x0                   	// #0
    3060:	mov	x5, #0x0                   	// #0
    3064:	mov	w4, #0x8                   	// #8
    3068:	mov	w3, #0x4                   	// #4
    306c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3070:	add	x2, x0, #0x320
    3074:	ldr	x0, [sp, #40]
    3078:	bl	1170 <Perl_hv_common_key_len@plt>
    307c:	cmp	x0, #0x0
    3080:	b.eq	30b4 <XS_Encode__Unicode_encode+0x1dc>  // b.none
    3084:	ldr	x0, [sp, #144]
    3088:	ldr	x1, [x0, #16]
    308c:	mov	w6, #0x0                   	// #0
    3090:	mov	x5, #0x0                   	// #0
    3094:	mov	w4, #0x20                  	// #32
    3098:	mov	w3, #0x4                   	// #4
    309c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    30a0:	add	x2, x0, #0x320
    30a4:	ldr	x0, [sp, #40]
    30a8:	bl	1170 <Perl_hv_common_key_len@plt>
    30ac:	ldr	x0, [x0]
    30b0:	b	30bc <XS_Encode__Unicode_encode+0x1e4>
    30b4:	ldr	x0, [sp, #40]
    30b8:	add	x0, x0, #0x150
    30bc:	str	x0, [sp, #152]
    30c0:	ldr	x0, [sp, #144]
    30c4:	ldr	x1, [x0, #16]
    30c8:	mov	w6, #0x0                   	// #0
    30cc:	mov	x5, #0x0                   	// #0
    30d0:	mov	w4, #0x8                   	// #8
    30d4:	mov	w3, #0x6                   	// #6
    30d8:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    30dc:	add	x2, x0, #0x328
    30e0:	ldr	x0, [sp, #40]
    30e4:	bl	1170 <Perl_hv_common_key_len@plt>
    30e8:	cmp	x0, #0x0
    30ec:	b.eq	3120 <XS_Encode__Unicode_encode+0x248>  // b.none
    30f0:	ldr	x0, [sp, #144]
    30f4:	ldr	x1, [x0, #16]
    30f8:	mov	w6, #0x0                   	// #0
    30fc:	mov	x5, #0x0                   	// #0
    3100:	mov	w4, #0x20                  	// #32
    3104:	mov	w3, #0x6                   	// #6
    3108:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    310c:	add	x2, x0, #0x328
    3110:	ldr	x0, [sp, #40]
    3114:	bl	1170 <Perl_hv_common_key_len@plt>
    3118:	ldr	x0, [x0]
    311c:	b	3128 <XS_Encode__Unicode_encode+0x250>
    3120:	ldr	x0, [sp, #40]
    3124:	add	x0, x0, #0x150
    3128:	str	x0, [sp, #160]
    312c:	ldr	x0, [sp, #160]
    3130:	ldr	w1, [x0, #12]
    3134:	mov	w0, #0x400                 	// #1024
    3138:	movk	w0, #0x20, lsl #16
    313c:	and	w0, w1, w0
    3140:	cmp	w0, #0x400
    3144:	b.ne	3154 <XS_Encode__Unicode_encode+0x27c>  // b.any
    3148:	ldr	x0, [sp, #160]
    314c:	ldr	x0, [x0, #16]
    3150:	b	3168 <XS_Encode__Unicode_encode+0x290>
    3154:	mov	w3, #0x2                   	// #2
    3158:	mov	x2, #0x0                   	// #0
    315c:	ldr	x1, [sp, #160]
    3160:	ldr	x0, [sp, #40]
    3164:	bl	1030 <Perl_sv_2pv_flags@plt>
    3168:	ldrb	w0, [x0]
    316c:	strb	w0, [sp, #49]
    3170:	ldr	x0, [sp, #144]
    3174:	ldr	x1, [x0, #16]
    3178:	mov	w6, #0x0                   	// #0
    317c:	mov	x5, #0x0                   	// #0
    3180:	mov	w4, #0x8                   	// #8
    3184:	mov	w3, #0x4                   	// #4
    3188:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    318c:	add	x2, x0, #0x330
    3190:	ldr	x0, [sp, #40]
    3194:	bl	1170 <Perl_hv_common_key_len@plt>
    3198:	cmp	x0, #0x0
    319c:	b.eq	31d0 <XS_Encode__Unicode_encode+0x2f8>  // b.none
    31a0:	ldr	x0, [sp, #144]
    31a4:	ldr	x1, [x0, #16]
    31a8:	mov	w6, #0x0                   	// #0
    31ac:	mov	x5, #0x0                   	// #0
    31b0:	mov	w4, #0x20                  	// #32
    31b4:	mov	w3, #0x4                   	// #4
    31b8:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    31bc:	add	x2, x0, #0x330
    31c0:	ldr	x0, [sp, #40]
    31c4:	bl	1170 <Perl_hv_common_key_len@plt>
    31c8:	ldr	x0, [x0]
    31cc:	b	31d8 <XS_Encode__Unicode_encode+0x300>
    31d0:	ldr	x0, [sp, #40]
    31d4:	add	x0, x0, #0x150
    31d8:	str	x0, [sp, #168]
    31dc:	ldr	x0, [sp, #168]
    31e0:	ldr	w1, [x0, #12]
    31e4:	mov	w0, #0x100                 	// #256
    31e8:	movk	w0, #0x20, lsl #16
    31ec:	and	w0, w1, w0
    31f0:	cmp	w0, #0x100
    31f4:	b.ne	3208 <XS_Encode__Unicode_encode+0x330>  // b.any
    31f8:	ldr	x0, [sp, #168]
    31fc:	ldr	x0, [x0]
    3200:	ldr	x0, [x0, #32]
    3204:	b	3218 <XS_Encode__Unicode_encode+0x340>
    3208:	mov	w2, #0x2                   	// #2
    320c:	ldr	x1, [sp, #168]
    3210:	ldr	x0, [sp, #40]
    3214:	bl	fb0 <Perl_sv_2iv_flags@plt>
    3218:	str	w0, [sp, #64]
    321c:	mov	w0, #0xffffffff            	// #-1
    3220:	str	w0, [sp, #52]
    3224:	ldr	w2, [sp, #64]
    3228:	ldr	w1, [sp, #64]
    322c:	mov	w0, #0x1                   	// #1
    3230:	cmp	w2, #0x0
    3234:	csel	w0, w1, w0, gt
    3238:	sxtw	x0, w0
    323c:	str	x0, [sp, #176]
    3240:	mov	x2, #0x0                   	// #0
    3244:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3248:	add	x1, x0, #0x338
    324c:	ldr	x0, [sp, #40]
    3250:	bl	11a0 <Perl_newSVpvn@plt>
    3254:	str	x0, [sp, #184]
    3258:	ldr	x0, [sp, #104]
    325c:	cmp	x0, #0x0
    3260:	b.eq	327c <XS_Encode__Unicode_encode+0x3a4>  // b.none
    3264:	ldr	x0, [sp, #104]
    3268:	and	x0, x0, #0x8
    326c:	cmp	x0, #0x0
    3270:	b.ne	327c <XS_Encode__Unicode_encode+0x3a4>  // b.any
    3274:	mov	w0, #0x1                   	// #1
    3278:	b	3280 <XS_Encode__Unicode_encode+0x3a8>
    327c:	mov	w0, #0x0                   	// #0
    3280:	strb	w0, [sp, #50]
    3284:	ldrb	w0, [sp, #50]
    3288:	and	w0, w0, #0x1
    328c:	strb	w0, [sp, #50]
    3290:	ldr	x0, [sp, #96]
    3294:	ldr	w0, [x0, #12]
    3298:	lsr	w0, w0, #21
    329c:	mov	w0, w0
    32a0:	and	x0, x0, #0x1
    32a4:	cmp	x0, #0x0
    32a8:	b.eq	32c0 <XS_Encode__Unicode_encode+0x3e8>  // b.none
    32ac:	ldr	x1, [sp, #96]
    32b0:	ldr	x0, [sp, #40]
    32b4:	bl	1120 <Perl_mg_get@plt>
    32b8:	cmp	w0, #0x0
    32bc:	nop
    32c0:	ldr	x0, [sp, #96]
    32c4:	ldr	w0, [x0, #12]
    32c8:	and	w0, w0, #0xff00
    32cc:	cmp	w0, #0x0
    32d0:	b.ne	3328 <XS_Encode__Unicode_encode+0x450>  // b.any
    32d4:	ldr	x0, [sp, #40]
    32d8:	ldr	x1, [x0, #24]
    32dc:	ldrsw	x0, [sp, #56]
    32e0:	lsl	x0, x0, #3
    32e4:	add	x0, x1, x0
    32e8:	ldr	x1, [sp, #40]
    32ec:	add	x1, x1, #0x150
    32f0:	str	x1, [x0]
    32f4:	mov	x0, #0x1                   	// #1
    32f8:	str	x0, [sp, #320]
    32fc:	ldr	x0, [sp, #40]
    3300:	ldr	x1, [x0, #24]
    3304:	ldrsw	x2, [sp, #56]
    3308:	ldr	x0, [sp, #320]
    330c:	add	x0, x2, x0
    3310:	lsl	x0, x0, #3
    3314:	sub	x0, x0, #0x8
    3318:	add	x1, x1, x0
    331c:	ldr	x0, [sp, #40]
    3320:	str	x1, [x0]
    3324:	b	4128 <XS_Encode__Unicode_encode+0x1250>
    3328:	ldrb	w0, [sp, #50]
    332c:	cmp	w0, #0x0
    3330:	b.eq	3388 <XS_Encode__Unicode_encode+0x4b0>  // b.none
    3334:	ldr	x0, [sp, #96]
    3338:	ldr	w1, [x0, #12]
    333c:	mov	w0, #0x8f00                	// #36608
    3340:	movk	w0, #0x19a1, lsl #16
    3344:	and	w0, w1, w0
    3348:	cmp	w0, #0x400
    334c:	b.ne	336c <XS_Encode__Unicode_encode+0x494>  // b.any
    3350:	ldr	x0, [sp, #96]
    3354:	ldr	x0, [x0]
    3358:	ldr	x0, [x0, #16]
    335c:	str	x0, [sp, #72]
    3360:	ldr	x0, [sp, #96]
    3364:	ldr	x0, [x0, #16]
    3368:	b	33d8 <XS_Encode__Unicode_encode+0x500>
    336c:	add	x0, sp, #0x48
    3370:	mov	w3, #0x0                   	// #0
    3374:	mov	x2, x0
    3378:	ldr	x1, [sp, #96]
    337c:	ldr	x0, [sp, #40]
    3380:	bl	ff0 <Perl_sv_pvn_force_flags@plt>
    3384:	b	33d8 <XS_Encode__Unicode_encode+0x500>
    3388:	ldr	x0, [sp, #96]
    338c:	ldr	w1, [x0, #12]
    3390:	mov	w0, #0x400                 	// #1024
    3394:	movk	w0, #0x20, lsl #16
    3398:	and	w0, w1, w0
    339c:	cmp	w0, #0x400
    33a0:	b.ne	33c0 <XS_Encode__Unicode_encode+0x4e8>  // b.any
    33a4:	ldr	x0, [sp, #96]
    33a8:	ldr	x0, [x0]
    33ac:	ldr	x0, [x0, #16]
    33b0:	str	x0, [sp, #72]
    33b4:	ldr	x0, [sp, #96]
    33b8:	ldr	x0, [x0, #16]
    33bc:	b	33d8 <XS_Encode__Unicode_encode+0x500>
    33c0:	add	x0, sp, #0x48
    33c4:	mov	w3, #0x0                   	// #0
    33c8:	mov	x2, x0
    33cc:	ldr	x1, [sp, #96]
    33d0:	ldr	x0, [sp, #40]
    33d4:	bl	1030 <Perl_sv_2pv_flags@plt>
    33d8:	str	x0, [sp, #112]
    33dc:	ldr	x0, [sp, #96]
    33e0:	ldr	w0, [x0, #12]
    33e4:	and	w0, w0, #0x20000000
    33e8:	cmp	w0, #0x0
    33ec:	b.ne	34f4 <XS_Encode__Unicode_encode+0x61c>  // b.any
    33f0:	ldrb	w0, [sp, #50]
    33f4:	eor	w0, w0, #0x1
    33f8:	and	w0, w0, #0xff
    33fc:	cmp	w0, #0x0
    3400:	b.eq	348c <XS_Encode__Unicode_encode+0x5b4>  // b.none
    3404:	ldr	x0, [sp, #72]
    3408:	mov	x2, x0
    340c:	ldr	x1, [sp, #112]
    3410:	ldr	x0, [sp, #40]
    3414:	bl	11a0 <Perl_newSVpvn@plt>
    3418:	mov	x1, x0
    341c:	ldr	x0, [sp, #40]
    3420:	bl	1110 <Perl_sv_2mortal@plt>
    3424:	str	x0, [sp, #192]
    3428:	ldr	x0, [sp, #96]
    342c:	ldr	w0, [x0, #12]
    3430:	and	w0, w0, #0xe00000
    3434:	cmp	w0, #0x0
    3438:	b.eq	3484 <XS_Encode__Unicode_encode+0x5ac>  // b.none
    343c:	ldr	x1, [sp, #96]
    3440:	ldr	x0, [sp, #40]
    3444:	bl	11b0 <Perl_sv_tainted@plt>
    3448:	and	w0, w0, #0xff
    344c:	cmp	w0, #0x0
    3450:	b.eq	3484 <XS_Encode__Unicode_encode+0x5ac>  // b.none
    3454:	ldr	x0, [sp, #40]
    3458:	ldrb	w0, [x0, #184]
    345c:	and	x0, x0, #0xff
    3460:	cmp	x0, #0x0
    3464:	b.eq	3484 <XS_Encode__Unicode_encode+0x5ac>  // b.none
    3468:	mov	w5, #0x0                   	// #0
    346c:	mov	x4, #0x0                   	// #0
    3470:	mov	w3, #0x74                  	// #116
    3474:	mov	x2, #0x0                   	// #0
    3478:	ldr	x1, [sp, #192]
    347c:	ldr	x0, [sp, #40]
    3480:	bl	1180 <Perl_sv_magic@plt>
    3484:	ldr	x0, [sp, #192]
    3488:	str	x0, [sp, #96]
    348c:	mov	x3, #0x0                   	// #0
    3490:	mov	w2, #0x0                   	// #0
    3494:	ldr	x1, [sp, #96]
    3498:	ldr	x0, [sp, #40]
    349c:	bl	10a0 <Perl_sv_utf8_upgrade_flags_grow@plt>
    34a0:	ldr	x0, [sp, #96]
    34a4:	ldr	w1, [x0, #12]
    34a8:	mov	w0, #0x400                 	// #1024
    34ac:	movk	w0, #0x20, lsl #16
    34b0:	and	w0, w1, w0
    34b4:	cmp	w0, #0x400
    34b8:	b.ne	34d8 <XS_Encode__Unicode_encode+0x600>  // b.any
    34bc:	ldr	x0, [sp, #96]
    34c0:	ldr	x0, [x0]
    34c4:	ldr	x0, [x0, #16]
    34c8:	str	x0, [sp, #72]
    34cc:	ldr	x0, [sp, #96]
    34d0:	ldr	x0, [x0, #16]
    34d4:	b	34f0 <XS_Encode__Unicode_encode+0x618>
    34d8:	add	x0, sp, #0x48
    34dc:	mov	w3, #0x0                   	// #0
    34e0:	mov	x2, x0
    34e4:	ldr	x1, [sp, #96]
    34e8:	ldr	x0, [sp, #40]
    34ec:	bl	1030 <Perl_sv_2pv_flags@plt>
    34f0:	str	x0, [sp, #112]
    34f4:	ldr	x0, [sp, #72]
    34f8:	ldr	x1, [sp, #112]
    34fc:	add	x0, x1, x0
    3500:	str	x0, [sp, #200]
    3504:	ldr	x0, [sp, #72]
    3508:	cmp	x0, #0x400
    350c:	cset	w0, eq  // eq = none
    3510:	strb	w0, [sp, #51]
    3514:	ldr	x0, [sp, #40]
    3518:	ldr	x1, [x0, #24]
    351c:	ldrsw	x0, [sp, #56]
    3520:	lsl	x0, x0, #3
    3524:	add	x19, x1, x0
    3528:	ldr	x1, [sp, #184]
    352c:	ldr	x0, [sp, #40]
    3530:	bl	1110 <Perl_sv_2mortal@plt>
    3534:	str	x0, [x19]
    3538:	ldr	x0, [sp, #184]
    353c:	ldr	w0, [x0, #12]
    3540:	and	w0, w0, #0x10000000
    3544:	cmp	w0, #0x0
    3548:	b.ne	3570 <XS_Encode__Unicode_encode+0x698>  // b.any
    354c:	ldr	x0, [sp, #184]
    3550:	ldr	x0, [x0]
    3554:	ldr	x1, [x0, #24]
    3558:	ldr	x0, [sp, #72]
    355c:	add	x2, x0, #0x1
    3560:	ldr	x0, [sp, #176]
    3564:	mul	x0, x2, x0
    3568:	cmp	x1, x0
    356c:	b.cs	3594 <XS_Encode__Unicode_encode+0x6bc>  // b.hs, b.nlast
    3570:	ldr	x0, [sp, #72]
    3574:	add	x1, x0, #0x1
    3578:	ldr	x0, [sp, #176]
    357c:	mul	x0, x1, x0
    3580:	mov	x2, x0
    3584:	ldr	x1, [sp, #184]
    3588:	ldr	x0, [sp, #40]
    358c:	bl	1090 <Perl_sv_grow@plt>
    3590:	nop
    3594:	ldrb	w0, [sp, #49]
    3598:	cmp	w0, #0x0
    359c:	b.ne	3ec4 <XS_Encode__Unicode_encode+0xfec>  // b.any
    35a0:	ldr	w0, [sp, #64]
    35a4:	cmp	w0, #0x4
    35a8:	b.ne	35b4 <XS_Encode__Unicode_encode+0x6dc>  // b.any
    35ac:	mov	w0, #0x4e                  	// #78
    35b0:	b	35b8 <XS_Encode__Unicode_encode+0x6e0>
    35b4:	mov	w0, #0x6e                  	// #110
    35b8:	strb	w0, [sp, #49]
    35bc:	ldrsw	x0, [sp, #64]
    35c0:	ldrb	w1, [sp, #49]
    35c4:	mov	x4, #0xfeff                	// #65279
    35c8:	mov	w3, w1
    35cc:	mov	x2, x0
    35d0:	ldr	x1, [sp, #184]
    35d4:	ldr	x0, [sp, #40]
    35d8:	bl	1718 <enc_pack>
    35dc:	ldr	x0, [sp, #144]
    35e0:	ldr	x1, [x0, #16]
    35e4:	mov	w6, #0x0                   	// #0
    35e8:	mov	x5, #0x0                   	// #0
    35ec:	mov	w4, #0x8                   	// #8
    35f0:	mov	w3, #0x7                   	// #7
    35f4:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    35f8:	add	x2, x0, #0x350
    35fc:	ldr	x0, [sp, #40]
    3600:	bl	1170 <Perl_hv_common_key_len@plt>
    3604:	cmp	x0, #0x0
    3608:	b.eq	363c <XS_Encode__Unicode_encode+0x764>  // b.none
    360c:	ldr	x0, [sp, #144]
    3610:	ldr	x1, [x0, #16]
    3614:	mov	w6, #0x0                   	// #0
    3618:	mov	x5, #0x0                   	// #0
    361c:	mov	w4, #0x20                  	// #32
    3620:	mov	w3, #0x7                   	// #7
    3624:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3628:	add	x2, x0, #0x350
    362c:	ldr	x0, [sp, #40]
    3630:	bl	1170 <Perl_hv_common_key_len@plt>
    3634:	ldr	x0, [x0]
    3638:	b	3644 <XS_Encode__Unicode_encode+0x76c>
    363c:	ldr	x0, [sp, #40]
    3640:	add	x0, x0, #0x150
    3644:	str	x0, [sp, #208]
    3648:	ldr	x0, [sp, #208]
    364c:	cmp	x0, #0x0
    3650:	cset	w0, ne  // ne = any
    3654:	and	w0, w0, #0xff
    3658:	and	x0, x0, #0xff
    365c:	cmp	x0, #0x0
    3660:	b.eq	3ec4 <XS_Encode__Unicode_encode+0xfec>  // b.none
    3664:	ldr	x0, [sp, #208]
    3668:	ldr	w0, [x0, #12]
    366c:	lsr	w0, w0, #21
    3670:	mov	w0, w0
    3674:	and	x0, x0, #0x1
    3678:	cmp	x0, #0x0
    367c:	b.eq	3694 <XS_Encode__Unicode_encode+0x7bc>  // b.none
    3680:	ldr	x1, [sp, #208]
    3684:	ldr	x0, [sp, #40]
    3688:	bl	1120 <Perl_mg_get@plt>
    368c:	cmp	w0, #0x0
    3690:	nop
    3694:	ldr	x0, [sp, #40]
    3698:	add	x0, x0, #0x138
    369c:	ldr	x1, [sp, #208]
    36a0:	sub	x0, x1, x0
    36a4:	asr	x1, x0, #3
    36a8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    36ac:	movk	x0, #0xaaab
    36b0:	mul	x0, x1, x0
    36b4:	cmp	x0, #0x3
    36b8:	b.hi	36d8 <XS_Encode__Unicode_encode+0x800>  // b.pmore
    36bc:	ldr	x0, [sp, #40]
    36c0:	add	x0, x0, #0x138
    36c4:	ldr	x1, [sp, #208]
    36c8:	cmp	x1, x0
    36cc:	cset	w0, eq  // eq = none
    36d0:	and	w0, w0, #0xff
    36d4:	b	381c <XS_Encode__Unicode_encode+0x944>
    36d8:	ldr	x0, [sp, #208]
    36dc:	ldr	w0, [x0, #12]
    36e0:	and	w0, w0, #0xff00
    36e4:	cmp	w0, #0x0
    36e8:	b.eq	3818 <XS_Encode__Unicode_encode+0x940>  // b.none
    36ec:	ldr	x0, [sp, #208]
    36f0:	ldr	w0, [x0, #12]
    36f4:	and	w0, w0, #0x400
    36f8:	cmp	w0, #0x0
    36fc:	b.eq	3768 <XS_Encode__Unicode_encode+0x890>  // b.none
    3700:	ldr	x0, [sp, #208]
    3704:	ldr	x0, [x0]
    3708:	cmp	x0, #0x0
    370c:	b.eq	3754 <XS_Encode__Unicode_encode+0x87c>  // b.none
    3710:	ldr	x0, [sp, #208]
    3714:	ldr	x0, [x0]
    3718:	ldr	x0, [x0, #16]
    371c:	cmp	x0, #0x1
    3720:	b.hi	374c <XS_Encode__Unicode_encode+0x874>  // b.pmore
    3724:	ldr	x0, [sp, #208]
    3728:	ldr	x0, [x0]
    372c:	ldr	x0, [x0, #16]
    3730:	cmp	x0, #0x0
    3734:	b.eq	3754 <XS_Encode__Unicode_encode+0x87c>  // b.none
    3738:	ldr	x0, [sp, #208]
    373c:	ldr	x0, [x0, #16]
    3740:	ldrb	w0, [x0]
    3744:	cmp	w0, #0x30
    3748:	b.eq	3754 <XS_Encode__Unicode_encode+0x87c>  // b.none
    374c:	mov	w0, #0x1                   	// #1
    3750:	b	3758 <XS_Encode__Unicode_encode+0x880>
    3754:	mov	w0, #0x0                   	// #0
    3758:	cmp	w0, #0x0
    375c:	cset	w0, ne  // ne = any
    3760:	and	w0, w0, #0xff
    3764:	b	381c <XS_Encode__Unicode_encode+0x944>
    3768:	ldr	x0, [sp, #208]
    376c:	ldr	w0, [x0, #12]
    3770:	and	w0, w0, #0x100
    3774:	cmp	w0, #0x0
    3778:	b.eq	3798 <XS_Encode__Unicode_encode+0x8c0>  // b.none
    377c:	ldr	x0, [sp, #208]
    3780:	ldr	x0, [x0]
    3784:	ldr	x0, [x0, #32]
    3788:	cmp	x0, #0x0
    378c:	cset	w0, ne  // ne = any
    3790:	and	w0, w0, #0xff
    3794:	b	381c <XS_Encode__Unicode_encode+0x944>
    3798:	ldr	x0, [sp, #208]
    379c:	ldr	w0, [x0, #12]
    37a0:	and	w0, w0, #0x800
    37a4:	cmp	w0, #0x0
    37a8:	b.eq	37e4 <XS_Encode__Unicode_encode+0x90c>  // b.none
    37ac:	ldr	x0, [sp, #208]
    37b0:	ldr	x0, [x0, #16]
    37b4:	ldr	w0, [x0, #12]
    37b8:	and	w0, w0, #0x100000
    37bc:	cmp	w0, #0x0
    37c0:	b.eq	3800 <XS_Encode__Unicode_encode+0x928>  // b.none
    37c4:	ldr	x0, [sp, #208]
    37c8:	ldr	x0, [x0, #16]
    37cc:	ldr	x0, [x0]
    37d0:	ldr	x0, [x0]
    37d4:	ldr	w0, [x0, #12]
    37d8:	and	w0, w0, #0x10000000
    37dc:	cmp	w0, #0x0
    37e0:	b.eq	3800 <XS_Encode__Unicode_encode+0x928>  // b.none
    37e4:	mov	w2, #0x0                   	// #0
    37e8:	ldr	x1, [sp, #208]
    37ec:	ldr	x0, [sp, #40]
    37f0:	bl	fc0 <Perl_sv_2bool_flags@plt>
    37f4:	and	w0, w0, #0xff
    37f8:	cmp	w0, #0x0
    37fc:	b.eq	3808 <XS_Encode__Unicode_encode+0x930>  // b.none
    3800:	mov	w0, #0x1                   	// #1
    3804:	b	380c <XS_Encode__Unicode_encode+0x934>
    3808:	mov	w0, #0x0                   	// #0
    380c:	and	w0, w0, #0x1
    3810:	and	w0, w0, #0xff
    3814:	b	381c <XS_Encode__Unicode_encode+0x944>
    3818:	mov	w0, #0x0                   	// #0
    381c:	cmp	w0, #0x0
    3820:	b.eq	3ec4 <XS_Encode__Unicode_encode+0xfec>  // b.none
    3824:	ldr	x0, [sp, #144]
    3828:	ldr	x19, [x0, #16]
    382c:	add	x0, sp, #0x31
    3830:	mov	x2, #0x1                   	// #1
    3834:	mov	x1, x0
    3838:	ldr	x0, [sp, #40]
    383c:	bl	10d0 <Perl_newSVpv@plt>
    3840:	mov	w6, #0x0                   	// #0
    3844:	mov	x5, x0
    3848:	mov	w4, #0x24                  	// #36
    384c:	mov	w3, #0x6                   	// #6
    3850:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3854:	add	x2, x0, #0x328
    3858:	mov	x1, x19
    385c:	ldr	x0, [sp, #40]
    3860:	bl	1170 <Perl_hv_common_key_len@plt>
    3864:	b	3ec4 <XS_Encode__Unicode_encode+0xfec>
    3868:	str	xzr, [sp, #88]
    386c:	ldr	x1, [sp, #200]
    3870:	ldr	x0, [sp, #112]
    3874:	sub	x0, x1, x0
    3878:	mov	x6, x0
    387c:	add	x1, sp, #0x58
    3880:	add	x0, sp, #0x50
    3884:	mov	x5, x1
    3888:	mov	x4, #0x0                   	// #0
    388c:	mov	w3, #0x3f00                	// #16128
    3890:	mov	x2, x0
    3894:	mov	x1, x6
    3898:	ldr	x0, [sp, #112]
    389c:	bl	1394 <S_utf8n_to_uvchr_msgs>
    38a0:	str	x0, [sp, #216]
    38a4:	ldr	x0, [sp, #88]
    38a8:	cmp	x0, #0x0
    38ac:	b.eq	3a3c <XS_Encode__Unicode_encode+0xb64>  // b.none
    38b0:	ldr	x0, [sp, #88]
    38b4:	mov	x1, x0
    38b8:	ldr	x0, [sp, #40]
    38bc:	bl	1020 <Perl_av_len@plt>
    38c0:	add	x0, x0, #0x1
    38c4:	str	x0, [sp, #224]
    38c8:	ldr	x0, [sp, #88]
    38cc:	mov	x1, x0
    38d0:	ldr	x0, [sp, #40]
    38d4:	bl	1110 <Perl_sv_2mortal@plt>
    38d8:	str	xzr, [sp, #120]
    38dc:	b	3a2c <XS_Encode__Unicode_encode+0xb54>
    38e0:	ldr	x0, [sp, #88]
    38e4:	mov	w3, #0x0                   	// #0
    38e8:	ldr	x2, [sp, #120]
    38ec:	mov	x1, x0
    38f0:	ldr	x0, [sp, #40]
    38f4:	bl	1160 <Perl_av_fetch@plt>
    38f8:	ldr	x0, [x0]
    38fc:	str	x0, [sp, #232]
    3900:	ldr	x0, [sp, #232]
    3904:	ldr	x0, [x0, #16]
    3908:	str	x0, [sp, #240]
    390c:	mov	w6, #0x0                   	// #0
    3910:	mov	x5, #0x0                   	// #0
    3914:	mov	w4, #0x20                  	// #32
    3918:	mov	w3, #0x4                   	// #4
    391c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3920:	add	x2, x0, #0x3e8
    3924:	ldr	x1, [sp, #240]
    3928:	ldr	x0, [sp, #40]
    392c:	bl	1170 <Perl_hv_common_key_len@plt>
    3930:	ldr	x0, [x0]
    3934:	str	x0, [sp, #248]
    3938:	mov	w6, #0x0                   	// #0
    393c:	mov	x5, #0x0                   	// #0
    3940:	mov	w4, #0x20                  	// #32
    3944:	mov	w3, #0xf                   	// #15
    3948:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    394c:	add	x2, x0, #0x3f0
    3950:	ldr	x1, [sp, #240]
    3954:	ldr	x0, [sp, #40]
    3958:	bl	1170 <Perl_hv_common_key_len@plt>
    395c:	ldr	x0, [x0]
    3960:	str	x0, [sp, #256]
    3964:	ldr	x0, [sp, #256]
    3968:	str	x0, [sp, #264]
    396c:	ldr	x0, [sp, #264]
    3970:	ldr	w1, [x0, #12]
    3974:	mov	w0, #0x100                 	// #256
    3978:	movk	w0, #0x8020, lsl #16
    397c:	and	w1, w1, w0
    3980:	mov	w0, #0x100                 	// #256
    3984:	movk	w0, #0x8000, lsl #16
    3988:	cmp	w1, w0
    398c:	b.ne	39a0 <XS_Encode__Unicode_encode+0xac8>  // b.any
    3990:	ldr	x0, [sp, #264]
    3994:	ldr	x0, [x0]
    3998:	ldr	x0, [x0, #32]
    399c:	b	39b0 <XS_Encode__Unicode_encode+0xad8>
    39a0:	mov	w2, #0x2                   	// #2
    39a4:	ldr	x1, [sp, #264]
    39a8:	ldr	x0, [sp, #40]
    39ac:	bl	1000 <Perl_sv_2uv_flags@plt>
    39b0:	str	w0, [sp, #68]
    39b4:	ldr	x0, [sp, #104]
    39b8:	and	x0, x0, #0x1
    39bc:	cmp	x0, #0x0
    39c0:	b.eq	39d4 <XS_Encode__Unicode_encode+0xafc>  // b.none
    39c4:	ldr	x1, [sp, #248]
    39c8:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    39cc:	add	x0, x0, #0x400
    39d0:	bl	10e0 <Perl_croak_nocontext@plt>
    39d4:	ldr	x0, [sp, #104]
    39d8:	and	x0, x0, #0x2
    39dc:	cmp	x0, #0x0
    39e0:	b.eq	3a20 <XS_Encode__Unicode_encode+0xb48>  // b.none
    39e4:	ldr	x0, [sp, #104]
    39e8:	and	x0, x0, #0x10
    39ec:	cmp	x0, #0x0
    39f0:	b.eq	3a0c <XS_Encode__Unicode_encode+0xb34>  // b.none
    39f4:	ldr	w1, [sp, #68]
    39f8:	ldr	x0, [sp, #40]
    39fc:	bl	1190 <Perl_ckwarn@plt>
    3a00:	and	w0, w0, #0xff
    3a04:	cmp	w0, #0x0
    3a08:	b.eq	3a20 <XS_Encode__Unicode_encode+0xb48>  // b.none
    3a0c:	ldr	x2, [sp, #248]
    3a10:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3a14:	add	x1, x0, #0x400
    3a18:	ldr	w0, [sp, #68]
    3a1c:	bl	10b0 <Perl_warner_nocontext@plt>
    3a20:	ldr	x0, [sp, #120]
    3a24:	add	x0, x0, #0x1
    3a28:	str	x0, [sp, #120]
    3a2c:	ldr	x1, [sp, #120]
    3a30:	ldr	x0, [sp, #224]
    3a34:	cmp	x1, x0
    3a38:	b.lt	38e0 <XS_Encode__Unicode_encode+0xa08>  // b.tstop
    3a3c:	ldr	w0, [sp, #64]
    3a40:	cmp	w0, #0x4
    3a44:	b.eq	3a78 <XS_Encode__Unicode_encode+0xba0>  // b.none
    3a48:	ldr	x1, [sp, #216]
    3a4c:	mov	x0, #0xd7ff                	// #55295
    3a50:	cmp	x1, x0
    3a54:	b.ls	3a68 <XS_Encode__Unicode_encode+0xb90>  // b.plast
    3a58:	ldr	x1, [sp, #216]
    3a5c:	mov	x0, #0xdfff                	// #57343
    3a60:	cmp	x1, x0
    3a64:	b.ls	3a94 <XS_Encode__Unicode_encode+0xbbc>  // b.plast
    3a68:	ldr	x1, [sp, #216]
    3a6c:	mov	x0, #0xffff                	// #65535
    3a70:	cmp	x1, x0
    3a74:	b.hi	3a94 <XS_Encode__Unicode_encode+0xbbc>  // b.pmore
    3a78:	ldr	x0, [sp, #216]
    3a7c:	cmp	x0, #0x0
    3a80:	b.ne	3e94 <XS_Encode__Unicode_encode+0xfbc>  // b.any
    3a84:	ldr	x0, [sp, #112]
    3a88:	ldrb	w0, [x0]
    3a8c:	cmp	w0, #0x0
    3a90:	b.eq	3e94 <XS_Encode__Unicode_encode+0xfbc>  // b.none
    3a94:	ldr	x1, [sp, #216]
    3a98:	mov	x0, #0xd7ff                	// #55295
    3a9c:	cmp	x1, x0
    3aa0:	b.ls	3ab4 <XS_Encode__Unicode_encode+0xbdc>  // b.plast
    3aa4:	ldr	x1, [sp, #216]
    3aa8:	mov	x0, #0xdfff                	// #57343
    3aac:	cmp	x1, x0
    3ab0:	b.ls	3e6c <XS_Encode__Unicode_encode+0xf94>  // b.plast
    3ab4:	ldr	w0, [sp, #52]
    3ab8:	cmn	w0, #0x1
    3abc:	b.ne	3d18 <XS_Encode__Unicode_encode+0xe40>  // b.any
    3ac0:	ldr	x0, [sp, #144]
    3ac4:	ldr	x1, [x0, #16]
    3ac8:	mov	w6, #0x0                   	// #0
    3acc:	mov	x5, #0x0                   	// #0
    3ad0:	mov	w4, #0x8                   	// #8
    3ad4:	mov	w3, #0x4                   	// #4
    3ad8:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3adc:	add	x2, x0, #0x358
    3ae0:	ldr	x0, [sp, #40]
    3ae4:	bl	1170 <Perl_hv_common_key_len@plt>
    3ae8:	cmp	x0, #0x0
    3aec:	b.eq	3b20 <XS_Encode__Unicode_encode+0xc48>  // b.none
    3af0:	ldr	x0, [sp, #144]
    3af4:	ldr	x1, [x0, #16]
    3af8:	mov	w6, #0x0                   	// #0
    3afc:	mov	x5, #0x0                   	// #0
    3b00:	mov	w4, #0x20                  	// #32
    3b04:	mov	w3, #0x4                   	// #4
    3b08:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3b0c:	add	x2, x0, #0x358
    3b10:	ldr	x0, [sp, #40]
    3b14:	bl	1170 <Perl_hv_common_key_len@plt>
    3b18:	ldr	x0, [x0]
    3b1c:	b	3b28 <XS_Encode__Unicode_encode+0xc50>
    3b20:	ldr	x0, [sp, #40]
    3b24:	add	x0, x0, #0x150
    3b28:	str	x0, [sp, #272]
    3b2c:	ldr	x0, [sp, #272]
    3b30:	cmp	x0, #0x0
    3b34:	cset	w0, ne  // ne = any
    3b38:	and	w0, w0, #0xff
    3b3c:	and	x0, x0, #0xff
    3b40:	cmp	x0, #0x0
    3b44:	b.eq	3d10 <XS_Encode__Unicode_encode+0xe38>  // b.none
    3b48:	ldr	x0, [sp, #272]
    3b4c:	ldr	w0, [x0, #12]
    3b50:	lsr	w0, w0, #21
    3b54:	mov	w0, w0
    3b58:	and	x0, x0, #0x1
    3b5c:	cmp	x0, #0x0
    3b60:	b.eq	3b78 <XS_Encode__Unicode_encode+0xca0>  // b.none
    3b64:	ldr	x1, [sp, #272]
    3b68:	ldr	x0, [sp, #40]
    3b6c:	bl	1120 <Perl_mg_get@plt>
    3b70:	cmp	w0, #0x0
    3b74:	nop
    3b78:	ldr	x0, [sp, #40]
    3b7c:	add	x0, x0, #0x138
    3b80:	ldr	x1, [sp, #272]
    3b84:	sub	x0, x1, x0
    3b88:	asr	x1, x0, #3
    3b8c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3b90:	movk	x0, #0xaaab
    3b94:	mul	x0, x1, x0
    3b98:	cmp	x0, #0x3
    3b9c:	b.hi	3bbc <XS_Encode__Unicode_encode+0xce4>  // b.pmore
    3ba0:	ldr	x0, [sp, #40]
    3ba4:	add	x0, x0, #0x138
    3ba8:	ldr	x1, [sp, #272]
    3bac:	cmp	x1, x0
    3bb0:	cset	w0, eq  // eq = none
    3bb4:	and	w0, w0, #0xff
    3bb8:	b	3d00 <XS_Encode__Unicode_encode+0xe28>
    3bbc:	ldr	x0, [sp, #272]
    3bc0:	ldr	w0, [x0, #12]
    3bc4:	and	w0, w0, #0xff00
    3bc8:	cmp	w0, #0x0
    3bcc:	b.eq	3cfc <XS_Encode__Unicode_encode+0xe24>  // b.none
    3bd0:	ldr	x0, [sp, #272]
    3bd4:	ldr	w0, [x0, #12]
    3bd8:	and	w0, w0, #0x400
    3bdc:	cmp	w0, #0x0
    3be0:	b.eq	3c4c <XS_Encode__Unicode_encode+0xd74>  // b.none
    3be4:	ldr	x0, [sp, #272]
    3be8:	ldr	x0, [x0]
    3bec:	cmp	x0, #0x0
    3bf0:	b.eq	3c38 <XS_Encode__Unicode_encode+0xd60>  // b.none
    3bf4:	ldr	x0, [sp, #272]
    3bf8:	ldr	x0, [x0]
    3bfc:	ldr	x0, [x0, #16]
    3c00:	cmp	x0, #0x1
    3c04:	b.hi	3c30 <XS_Encode__Unicode_encode+0xd58>  // b.pmore
    3c08:	ldr	x0, [sp, #272]
    3c0c:	ldr	x0, [x0]
    3c10:	ldr	x0, [x0, #16]
    3c14:	cmp	x0, #0x0
    3c18:	b.eq	3c38 <XS_Encode__Unicode_encode+0xd60>  // b.none
    3c1c:	ldr	x0, [sp, #272]
    3c20:	ldr	x0, [x0, #16]
    3c24:	ldrb	w0, [x0]
    3c28:	cmp	w0, #0x30
    3c2c:	b.eq	3c38 <XS_Encode__Unicode_encode+0xd60>  // b.none
    3c30:	mov	w0, #0x1                   	// #1
    3c34:	b	3c3c <XS_Encode__Unicode_encode+0xd64>
    3c38:	mov	w0, #0x0                   	// #0
    3c3c:	cmp	w0, #0x0
    3c40:	cset	w0, ne  // ne = any
    3c44:	and	w0, w0, #0xff
    3c48:	b	3d00 <XS_Encode__Unicode_encode+0xe28>
    3c4c:	ldr	x0, [sp, #272]
    3c50:	ldr	w0, [x0, #12]
    3c54:	and	w0, w0, #0x100
    3c58:	cmp	w0, #0x0
    3c5c:	b.eq	3c7c <XS_Encode__Unicode_encode+0xda4>  // b.none
    3c60:	ldr	x0, [sp, #272]
    3c64:	ldr	x0, [x0]
    3c68:	ldr	x0, [x0, #32]
    3c6c:	cmp	x0, #0x0
    3c70:	cset	w0, ne  // ne = any
    3c74:	and	w0, w0, #0xff
    3c78:	b	3d00 <XS_Encode__Unicode_encode+0xe28>
    3c7c:	ldr	x0, [sp, #272]
    3c80:	ldr	w0, [x0, #12]
    3c84:	and	w0, w0, #0x800
    3c88:	cmp	w0, #0x0
    3c8c:	b.eq	3cc8 <XS_Encode__Unicode_encode+0xdf0>  // b.none
    3c90:	ldr	x0, [sp, #272]
    3c94:	ldr	x0, [x0, #16]
    3c98:	ldr	w0, [x0, #12]
    3c9c:	and	w0, w0, #0x100000
    3ca0:	cmp	w0, #0x0
    3ca4:	b.eq	3ce4 <XS_Encode__Unicode_encode+0xe0c>  // b.none
    3ca8:	ldr	x0, [sp, #272]
    3cac:	ldr	x0, [x0, #16]
    3cb0:	ldr	x0, [x0]
    3cb4:	ldr	x0, [x0]
    3cb8:	ldr	w0, [x0, #12]
    3cbc:	and	w0, w0, #0x10000000
    3cc0:	cmp	w0, #0x0
    3cc4:	b.eq	3ce4 <XS_Encode__Unicode_encode+0xe0c>  // b.none
    3cc8:	mov	w2, #0x0                   	// #0
    3ccc:	ldr	x1, [sp, #272]
    3cd0:	ldr	x0, [sp, #40]
    3cd4:	bl	fc0 <Perl_sv_2bool_flags@plt>
    3cd8:	and	w0, w0, #0xff
    3cdc:	cmp	w0, #0x0
    3ce0:	b.eq	3cec <XS_Encode__Unicode_encode+0xe14>  // b.none
    3ce4:	mov	w0, #0x1                   	// #1
    3ce8:	b	3cf0 <XS_Encode__Unicode_encode+0xe18>
    3cec:	mov	w0, #0x0                   	// #0
    3cf0:	and	w0, w0, #0x1
    3cf4:	and	w0, w0, #0xff
    3cf8:	b	3d00 <XS_Encode__Unicode_encode+0xe28>
    3cfc:	mov	w0, #0x0                   	// #0
    3d00:	cmp	w0, #0x0
    3d04:	b.eq	3d10 <XS_Encode__Unicode_encode+0xe38>  // b.none
    3d08:	mov	w0, #0x1                   	// #1
    3d0c:	b	3d14 <XS_Encode__Unicode_encode+0xe3c>
    3d10:	mov	w0, #0x0                   	// #0
    3d14:	str	w0, [sp, #52]
    3d18:	ldr	w0, [sp, #52]
    3d1c:	cmp	w0, #0x0
    3d20:	b.ne	3d34 <XS_Encode__Unicode_encode+0xe5c>  // b.any
    3d24:	ldr	x1, [sp, #216]
    3d28:	mov	w0, #0x10ffff              	// #1114111
    3d2c:	cmp	x1, x0
    3d30:	b.ls	3dcc <XS_Encode__Unicode_encode+0xef4>  // b.plast
    3d34:	ldr	x0, [sp, #104]
    3d38:	and	x0, x0, #0x1
    3d3c:	cmp	x0, #0x0
    3d40:	b.eq	3d58 <XS_Encode__Unicode_encode+0xe80>  // b.none
    3d44:	ldr	x2, [sp, #216]
    3d48:	ldr	x1, [sp, #152]
    3d4c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3d50:	add	x0, x0, #0x438
    3d54:	bl	10e0 <Perl_croak_nocontext@plt>
    3d58:	ldr	x0, [sp, #104]
    3d5c:	and	x0, x0, #0x2
    3d60:	cmp	x0, #0x0
    3d64:	b.eq	3da8 <XS_Encode__Unicode_encode+0xed0>  // b.none
    3d68:	ldr	x0, [sp, #104]
    3d6c:	and	x0, x0, #0x10
    3d70:	cmp	x0, #0x0
    3d74:	b.eq	3d90 <XS_Encode__Unicode_encode+0xeb8>  // b.none
    3d78:	mov	w1, #0x30                  	// #48
    3d7c:	ldr	x0, [sp, #40]
    3d80:	bl	1190 <Perl_ckwarn@plt>
    3d84:	and	w0, w0, #0xff
    3d88:	cmp	w0, #0x0
    3d8c:	b.eq	3da8 <XS_Encode__Unicode_encode+0xed0>  // b.none
    3d90:	ldr	x3, [sp, #216]
    3d94:	ldr	x2, [sp, #152]
    3d98:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3d9c:	add	x1, x0, #0x438
    3da0:	mov	w0, #0x30                  	// #48
    3da4:	bl	10b0 <Perl_warner_nocontext@plt>
    3da8:	ldrsw	x0, [sp, #64]
    3dac:	ldrb	w1, [sp, #49]
    3db0:	mov	x4, #0xfffd                	// #65533
    3db4:	mov	w3, w1
    3db8:	mov	x2, x0
    3dbc:	ldr	x1, [sp, #184]
    3dc0:	ldr	x0, [sp, #40]
    3dc4:	bl	1718 <enc_pack>
    3dc8:	b	3e90 <XS_Encode__Unicode_encode+0xfb8>
    3dcc:	ldr	x0, [sp, #216]
    3dd0:	cmp	x0, #0x0
    3dd4:	b.ne	3dfc <XS_Encode__Unicode_encode+0xf24>  // b.any
    3dd8:	ldrsw	x0, [sp, #64]
    3ddc:	ldrb	w1, [sp, #49]
    3de0:	mov	x4, #0xfffd                	// #65533
    3de4:	mov	w3, w1
    3de8:	mov	x2, x0
    3dec:	ldr	x1, [sp, #184]
    3df0:	ldr	x0, [sp, #40]
    3df4:	bl	1718 <enc_pack>
    3df8:	b	3e90 <XS_Encode__Unicode_encode+0xfb8>
    3dfc:	ldr	x0, [sp, #216]
    3e00:	sub	x0, x0, #0x10, lsl #12
    3e04:	lsr	x1, x0, #10
    3e08:	mov	x0, #0xd800                	// #55296
    3e0c:	add	x0, x1, x0
    3e10:	str	x0, [sp, #280]
    3e14:	ldr	x0, [sp, #216]
    3e18:	and	x1, x0, #0x3ff
    3e1c:	mov	x0, #0xdc00                	// #56320
    3e20:	add	x0, x1, x0
    3e24:	str	x0, [sp, #288]
    3e28:	ldrsw	x0, [sp, #64]
    3e2c:	ldrb	w1, [sp, #49]
    3e30:	ldr	x4, [sp, #280]
    3e34:	mov	w3, w1
    3e38:	mov	x2, x0
    3e3c:	ldr	x1, [sp, #184]
    3e40:	ldr	x0, [sp, #40]
    3e44:	bl	1718 <enc_pack>
    3e48:	ldrsw	x0, [sp, #64]
    3e4c:	ldrb	w1, [sp, #49]
    3e50:	ldr	x4, [sp, #288]
    3e54:	mov	w3, w1
    3e58:	mov	x2, x0
    3e5c:	ldr	x1, [sp, #184]
    3e60:	ldr	x0, [sp, #40]
    3e64:	bl	1718 <enc_pack>
    3e68:	b	3e90 <XS_Encode__Unicode_encode+0xfb8>
    3e6c:	ldrsw	x0, [sp, #64]
    3e70:	ldrb	w1, [sp, #49]
    3e74:	mov	x4, #0xfffd                	// #65533
    3e78:	mov	w3, w1
    3e7c:	mov	x2, x0
    3e80:	ldr	x1, [sp, #184]
    3e84:	ldr	x0, [sp, #40]
    3e88:	bl	1718 <enc_pack>
    3e8c:	b	3eb4 <XS_Encode__Unicode_encode+0xfdc>
    3e90:	b	3eb4 <XS_Encode__Unicode_encode+0xfdc>
    3e94:	ldrsw	x0, [sp, #64]
    3e98:	ldrb	w1, [sp, #49]
    3e9c:	ldr	x4, [sp, #216]
    3ea0:	mov	w3, w1
    3ea4:	mov	x2, x0
    3ea8:	ldr	x1, [sp, #184]
    3eac:	ldr	x0, [sp, #40]
    3eb0:	bl	1718 <enc_pack>
    3eb4:	ldr	x0, [sp, #80]
    3eb8:	ldr	x1, [sp, #112]
    3ebc:	add	x0, x1, x0
    3ec0:	str	x0, [sp, #112]
    3ec4:	ldr	x1, [sp, #112]
    3ec8:	ldr	x0, [sp, #200]
    3ecc:	cmp	x1, x0
    3ed0:	b.cs	3f08 <XS_Encode__Unicode_encode+0x1030>  // b.hs, b.nlast
    3ed4:	ldr	x0, [sp, #112]
    3ed8:	ldrb	w0, [x0]
    3edc:	mov	w2, w0
    3ee0:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    3ee4:	ldr	x1, [x0, #4064]
    3ee8:	sxtw	x0, w2
    3eec:	ldrb	w0, [x1, x0]
    3ef0:	and	x0, x0, #0xff
    3ef4:	ldr	x1, [sp, #112]
    3ef8:	add	x0, x1, x0
    3efc:	ldr	x1, [sp, #200]
    3f00:	cmp	x1, x0
    3f04:	b.cs	3868 <XS_Encode__Unicode_encode+0x990>  // b.hs, b.nlast
    3f08:	ldr	x1, [sp, #112]
    3f0c:	ldr	x0, [sp, #200]
    3f10:	cmp	x1, x0
    3f14:	b.cs	3f44 <XS_Encode__Unicode_encode+0x106c>  // b.hs, b.nlast
    3f18:	ldr	x1, [sp, #104]
    3f1c:	mov	x0, #0x9                   	// #9
    3f20:	and	x0, x1, x0
    3f24:	cmp	x0, #0x0
    3f28:	b.eq	3f44 <XS_Encode__Unicode_encode+0x106c>  // b.none
    3f2c:	ldr	x3, [sp, #104]
    3f30:	ldr	x2, [sp, #152]
    3f34:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    3f38:	add	x1, x0, #0x460
    3f3c:	ldr	x0, [sp, #40]
    3f40:	bl	10c0 <Perl_croak@plt>
    3f44:	ldr	x0, [sp, #104]
    3f48:	cmp	x0, #0x0
    3f4c:	b.eq	4000 <XS_Encode__Unicode_encode+0x1128>  // b.none
    3f50:	ldr	x0, [sp, #104]
    3f54:	and	x0, x0, #0x8
    3f58:	cmp	x0, #0x0
    3f5c:	b.ne	4000 <XS_Encode__Unicode_encode+0x1128>  // b.any
    3f60:	ldr	x1, [sp, #112]
    3f64:	ldr	x0, [sp, #200]
    3f68:	cmp	x1, x0
    3f6c:	b.cs	3fb0 <XS_Encode__Unicode_encode+0x10d8>  // b.hs, b.nlast
    3f70:	ldr	x0, [sp, #96]
    3f74:	ldr	x3, [x0, #16]
    3f78:	ldr	x1, [sp, #200]
    3f7c:	ldr	x0, [sp, #112]
    3f80:	sub	x0, x1, x0
    3f84:	mov	x2, x0
    3f88:	ldr	x1, [sp, #112]
    3f8c:	mov	x0, x3
    3f90:	bl	fa0 <memmove@plt>
    3f94:	ldr	x1, [sp, #200]
    3f98:	ldr	x0, [sp, #112]
    3f9c:	sub	x1, x1, x0
    3fa0:	ldr	x0, [sp, #96]
    3fa4:	ldr	x0, [x0]
    3fa8:	str	x1, [x0, #16]
    3fac:	b	3fbc <XS_Encode__Unicode_encode+0x10e4>
    3fb0:	ldr	x0, [sp, #96]
    3fb4:	ldr	x0, [x0]
    3fb8:	str	xzr, [x0, #16]
    3fbc:	ldr	x0, [sp, #96]
    3fc0:	ldr	x1, [x0, #16]
    3fc4:	ldr	x0, [sp, #96]
    3fc8:	ldr	x0, [x0]
    3fcc:	ldr	x0, [x0, #16]
    3fd0:	add	x0, x1, x0
    3fd4:	strb	wzr, [x0]
    3fd8:	ldr	x0, [sp, #96]
    3fdc:	ldr	w0, [x0, #12]
    3fe0:	lsr	w0, w0, #22
    3fe4:	mov	w0, w0
    3fe8:	and	x0, x0, #0x1
    3fec:	cmp	x0, #0x0
    3ff0:	b.eq	4000 <XS_Encode__Unicode_encode+0x1128>  // b.none
    3ff4:	ldr	x1, [sp, #96]
    3ff8:	ldr	x0, [sp, #40]
    3ffc:	bl	1100 <Perl_mg_set@plt>
    4000:	ldrb	w0, [sp, #51]
    4004:	eor	w0, w0, #0x1
    4008:	and	w0, w0, #0xff
    400c:	cmp	w0, #0x0
    4010:	b.eq	4098 <XS_Encode__Unicode_encode+0x11c0>  // b.none
    4014:	ldr	x0, [sp, #184]
    4018:	ldr	x0, [x0]
    401c:	ldr	x1, [x0, #24]
    4020:	ldr	x0, [sp, #184]
    4024:	ldr	x0, [x0]
    4028:	ldr	x0, [x0, #16]
    402c:	add	x0, x0, #0x2a
    4030:	cmp	x1, x0
    4034:	b.ls	4098 <XS_Encode__Unicode_encode+0x11c0>  // b.plast
    4038:	ldr	x0, [sp, #184]
    403c:	ldr	x0, [x0]
    4040:	ldr	x0, [x0, #16]
    4044:	add	x0, x0, #0x1
    4048:	str	x0, [sp, #296]
    404c:	ldr	x0, [sp, #296]
    4050:	bl	1050 <Perl_safesysmalloc@plt>
    4054:	str	x0, [sp, #304]
    4058:	ldr	x0, [sp, #184]
    405c:	ldr	x0, [x0, #16]
    4060:	ldr	x2, [sp, #296]
    4064:	mov	x1, x0
    4068:	ldr	x0, [sp, #304]
    406c:	bl	f90 <memcpy@plt>
    4070:	ldr	x0, [sp, #184]
    4074:	ldr	x0, [x0, #16]
    4078:	bl	1130 <Perl_safesysfree@plt>
    407c:	ldr	x0, [sp, #184]
    4080:	ldr	x1, [sp, #304]
    4084:	str	x1, [x0, #16]
    4088:	ldr	x0, [sp, #184]
    408c:	ldr	x0, [x0]
    4090:	ldr	x1, [sp, #296]
    4094:	str	x1, [x0, #24]
    4098:	ldr	x0, [sp, #96]
    409c:	ldr	w0, [x0, #12]
    40a0:	and	w0, w0, #0xe00000
    40a4:	cmp	w0, #0x0
    40a8:	b.eq	40f4 <XS_Encode__Unicode_encode+0x121c>  // b.none
    40ac:	ldr	x1, [sp, #96]
    40b0:	ldr	x0, [sp, #40]
    40b4:	bl	11b0 <Perl_sv_tainted@plt>
    40b8:	and	w0, w0, #0xff
    40bc:	cmp	w0, #0x0
    40c0:	b.eq	40f4 <XS_Encode__Unicode_encode+0x121c>  // b.none
    40c4:	ldr	x0, [sp, #40]
    40c8:	ldrb	w0, [x0, #184]
    40cc:	and	x0, x0, #0xff
    40d0:	cmp	x0, #0x0
    40d4:	b.eq	40f4 <XS_Encode__Unicode_encode+0x121c>  // b.none
    40d8:	mov	w5, #0x0                   	// #0
    40dc:	mov	x4, #0x0                   	// #0
    40e0:	mov	w3, #0x74                  	// #116
    40e4:	mov	x2, #0x0                   	// #0
    40e8:	ldr	x1, [sp, #184]
    40ec:	ldr	x0, [sp, #40]
    40f0:	bl	1180 <Perl_sv_magic@plt>
    40f4:	mov	x0, #0x1                   	// #1
    40f8:	str	x0, [sp, #312]
    40fc:	ldr	x0, [sp, #40]
    4100:	ldr	x1, [x0, #24]
    4104:	ldrsw	x2, [sp, #56]
    4108:	ldr	x0, [sp, #312]
    410c:	add	x0, x2, x0
    4110:	lsl	x0, x0, #3
    4114:	sub	x0, x0, #0x8
    4118:	add	x1, x1, x0
    411c:	ldr	x0, [sp, #40]
    4120:	str	x1, [x0]
    4124:	nop
    4128:	adrp	x0, 14000 <__FRAME_END__+0xf918>
    412c:	ldr	x0, [x0, #4040]
    4130:	ldr	x1, [sp, #328]
    4134:	ldr	x0, [x0]
    4138:	eor	x0, x1, x0
    413c:	cmp	x0, #0x0
    4140:	b.eq	4148 <XS_Encode__Unicode_encode+0x1270>  // b.none
    4144:	bl	1060 <__stack_chk_fail@plt>
    4148:	ldr	x19, [sp, #16]
    414c:	ldp	x29, x30, [sp], #336
    4150:	ret

0000000000004154 <boot_Encode__Unicode>:
    4154:	stp	x29, x30, [sp, #-64]!
    4158:	mov	x29, sp
    415c:	str	x0, [sp, #24]
    4160:	str	x1, [sp, #16]
    4164:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    4168:	add	x4, x0, #0x498
    416c:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    4170:	add	x3, x0, #0x4a0
    4174:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    4178:	add	x2, x0, #0x4a8
    417c:	ldr	x1, [sp, #24]
    4180:	mov	w0, #0x4e7                 	// #1255
    4184:	movk	w0, #0xd30, lsl #16
    4188:	bl	1150 <Perl_xs_handshake@plt>
    418c:	str	w0, [sp, #32]
    4190:	ldr	x0, [sp, #24]
    4194:	ldr	x1, [x0, #24]
    4198:	ldrsw	x0, [sp, #32]
    419c:	lsl	x0, x0, #3
    41a0:	add	x0, x1, x0
    41a4:	str	x0, [sp, #40]
    41a8:	ldr	x0, [sp, #24]
    41ac:	ldr	x0, [x0]
    41b0:	str	x0, [sp, #48]
    41b4:	ldr	x1, [sp, #48]
    41b8:	ldr	x0, [sp, #40]
    41bc:	sub	x0, x1, x0
    41c0:	asr	x0, x0, #3
    41c4:	str	w0, [sp, #36]
    41c8:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    41cc:	add	x0, x0, #0x4a8
    41d0:	str	x0, [sp, #56]
    41d4:	adrp	x0, 1000 <Perl_sv_2uv_flags@plt>
    41d8:	add	x2, x0, #0x8bc
    41dc:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    41e0:	add	x1, x0, #0x4b8
    41e4:	ldr	x0, [sp, #24]
    41e8:	bl	10f0 <Perl_newXS_deffile@plt>
    41ec:	adrp	x0, 2000 <XS_Encode__Unicode_decode+0x744>
    41f0:	add	x2, x0, #0xed8
    41f4:	adrp	x0, 4000 <XS_Encode__Unicode_encode+0x1128>
    41f8:	add	x1, x0, #0x4d0
    41fc:	ldr	x0, [sp, #24]
    4200:	bl	10f0 <Perl_newXS_deffile@plt>
    4204:	ldr	w1, [sp, #32]
    4208:	ldr	x0, [sp, #24]
    420c:	bl	1040 <Perl_xs_boot_epilog@plt>
    4210:	nop
    4214:	ldp	x29, x30, [sp], #64
    4218:	ret

Disassembly of section .fini:

000000000000421c <_fini>:
    421c:	stp	x29, x30, [sp, #-16]!
    4220:	mov	x29, sp
    4224:	ldp	x29, x30, [sp], #16
    4228:	ret
