
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000010f8 <.init>:
    10f8:	stp	x29, x30, [sp, #-16]!
    10fc:	mov	x29, sp
    1100:	bl	1330 <_PyTime_GetMonotonicClock@plt+0x10>
    1104:	ldp	x29, x30, [sp], #16
    1108:	ret

Disassembly of section .plt:

0000000000001110 <PyMem_Free@plt-0x20>:
    1110:	stp	x16, x30, [sp, #-16]!
    1114:	adrp	x16, 12000 <PyInit__random@@Base+0x101e8>
    1118:	ldr	x17, [x16, #4088]
    111c:	add	x16, x16, #0xff8
    1120:	br	x17
    1124:	nop
    1128:	nop
    112c:	nop

0000000000001130 <PyMem_Free@plt>:
    1130:	adrp	x16, 13000 <PyMem_Free>
    1134:	ldr	x17, [x16]
    1138:	add	x16, x16, #0x0
    113c:	br	x17

0000000000001140 <__cxa_finalize@plt>:
    1140:	adrp	x16, 13000 <PyMem_Free>
    1144:	ldr	x17, [x16, #8]
    1148:	add	x16, x16, #0x8
    114c:	br	x17

0000000000001150 <_PyTime_GetSystemClock@plt>:
    1150:	adrp	x16, 13000 <PyMem_Free>
    1154:	ldr	x17, [x16, #16]
    1158:	add	x16, x16, #0x10
    115c:	br	x17

0000000000001160 <_Py_Dealloc@plt>:
    1160:	adrp	x16, 13000 <PyMem_Free>
    1164:	ldr	x17, [x16, #24]
    1168:	add	x16, x16, #0x18
    116c:	br	x17

0000000000001170 <PyErr_NoMemory@plt>:
    1170:	adrp	x16, 13000 <PyMem_Free>
    1174:	ldr	x17, [x16, #32]
    1178:	add	x16, x16, #0x20
    117c:	br	x17

0000000000001180 <PyLong_FromSize_t@plt>:
    1180:	adrp	x16, 13000 <PyMem_Free>
    1184:	ldr	x17, [x16, #40]
    1188:	add	x16, x16, #0x28
    118c:	br	x17

0000000000001190 <_PyLong_NumBits@plt>:
    1190:	adrp	x16, 13000 <PyMem_Free>
    1194:	ldr	x17, [x16, #48]
    1198:	add	x16, x16, #0x30
    119c:	br	x17

00000000000011a0 <getpid@plt>:
    11a0:	adrp	x16, 13000 <PyMem_Free>
    11a4:	ldr	x17, [x16, #56]
    11a8:	add	x16, x16, #0x38
    11ac:	br	x17

00000000000011b0 <PyErr_SetString@plt>:
    11b0:	adrp	x16, 13000 <PyMem_Free>
    11b4:	ldr	x17, [x16, #64]
    11b8:	add	x16, x16, #0x40
    11bc:	br	x17

00000000000011c0 <_PyLong_FromByteArray@plt>:
    11c0:	adrp	x16, 13000 <PyMem_Free>
    11c4:	ldr	x17, [x16, #72]
    11c8:	add	x16, x16, #0x48
    11cc:	br	x17

00000000000011d0 <PyFloat_FromDouble@plt>:
    11d0:	adrp	x16, 13000 <PyMem_Free>
    11d4:	ldr	x17, [x16, #80]
    11d8:	add	x16, x16, #0x50
    11dc:	br	x17

00000000000011e0 <PyType_Ready@plt>:
    11e0:	adrp	x16, 13000 <PyMem_Free>
    11e4:	ldr	x17, [x16, #88]
    11e8:	add	x16, x16, #0x58
    11ec:	br	x17

00000000000011f0 <PyLong_FromLong@plt>:
    11f0:	adrp	x16, 13000 <PyMem_Free>
    11f4:	ldr	x17, [x16, #96]
    11f8:	add	x16, x16, #0x60
    11fc:	br	x17

0000000000001200 <PyErr_Clear@plt>:
    1200:	adrp	x16, 13000 <PyMem_Free>
    1204:	ldr	x17, [x16, #104]
    1208:	add	x16, x16, #0x68
    120c:	br	x17

0000000000001210 <__gmon_start__@plt>:
    1210:	adrp	x16, 13000 <PyMem_Free>
    1214:	ldr	x17, [x16, #112]
    1218:	add	x16, x16, #0x70
    121c:	br	x17

0000000000001220 <PyTuple_New@plt>:
    1220:	adrp	x16, 13000 <PyMem_Free>
    1224:	ldr	x17, [x16, #120]
    1228:	add	x16, x16, #0x78
    122c:	br	x17

0000000000001230 <_PyArg_CheckPositional@plt>:
    1230:	adrp	x16, 13000 <PyMem_Free>
    1234:	ldr	x17, [x16, #128]
    1238:	add	x16, x16, #0x80
    123c:	br	x17

0000000000001240 <PyErr_Occurred@plt>:
    1240:	adrp	x16, 13000 <PyMem_Free>
    1244:	ldr	x17, [x16, #136]
    1248:	add	x16, x16, #0x88
    124c:	br	x17

0000000000001250 <PyModule_Create2@plt>:
    1250:	adrp	x16, 13000 <PyMem_Free>
    1254:	ldr	x17, [x16, #144]
    1258:	add	x16, x16, #0x90
    125c:	br	x17

0000000000001260 <PyLong_AsLong@plt>:
    1260:	adrp	x16, 13000 <PyMem_Free>
    1264:	ldr	x17, [x16, #152]
    1268:	add	x16, x16, #0x98
    126c:	br	x17

0000000000001270 <PyObject_Hash@plt>:
    1270:	adrp	x16, 13000 <PyMem_Free>
    1274:	ldr	x17, [x16, #160]
    1278:	add	x16, x16, #0xa0
    127c:	br	x17

0000000000001280 <PyLong_AsUnsignedLong@plt>:
    1280:	adrp	x16, 13000 <PyMem_Free>
    1284:	ldr	x17, [x16, #168]
    1288:	add	x16, x16, #0xa8
    128c:	br	x17

0000000000001290 <PyLong_FromUnsignedLong@plt>:
    1290:	adrp	x16, 13000 <PyMem_Free>
    1294:	ldr	x17, [x16, #176]
    1298:	add	x16, x16, #0xb0
    129c:	br	x17

00000000000012a0 <PyModule_AddObject@plt>:
    12a0:	adrp	x16, 13000 <PyMem_Free>
    12a4:	ldr	x17, [x16, #184]
    12a8:	add	x16, x16, #0xb8
    12ac:	br	x17

00000000000012b0 <PyType_IsSubtype@plt>:
    12b0:	adrp	x16, 13000 <PyMem_Free>
    12b4:	ldr	x17, [x16, #192]
    12b8:	add	x16, x16, #0xc0
    12bc:	br	x17

00000000000012c0 <_PyLong_AsByteArray@plt>:
    12c0:	adrp	x16, 13000 <PyMem_Free>
    12c4:	ldr	x17, [x16, #200]
    12c8:	add	x16, x16, #0xc8
    12cc:	br	x17

00000000000012d0 <PyTuple_Size@plt>:
    12d0:	adrp	x16, 13000 <PyMem_Free>
    12d4:	ldr	x17, [x16, #208]
    12d8:	add	x16, x16, #0xd0
    12dc:	br	x17

00000000000012e0 <_PyOS_URandomNonblock@plt>:
    12e0:	adrp	x16, 13000 <PyMem_Free>
    12e4:	ldr	x17, [x16, #216]
    12e8:	add	x16, x16, #0xd8
    12ec:	br	x17

00000000000012f0 <_PyArg_NoKeywords@plt>:
    12f0:	adrp	x16, 13000 <PyMem_Free>
    12f4:	ldr	x17, [x16, #224]
    12f8:	add	x16, x16, #0xe0
    12fc:	br	x17

0000000000001300 <_PyLong_AsInt@plt>:
    1300:	adrp	x16, 13000 <PyMem_Free>
    1304:	ldr	x17, [x16, #232]
    1308:	add	x16, x16, #0xe8
    130c:	br	x17

0000000000001310 <PyMem_Malloc@plt>:
    1310:	adrp	x16, 13000 <PyMem_Free>
    1314:	ldr	x17, [x16, #240]
    1318:	add	x16, x16, #0xf0
    131c:	br	x17

0000000000001320 <_PyTime_GetMonotonicClock@plt>:
    1320:	adrp	x16, 13000 <PyMem_Free>
    1324:	ldr	x17, [x16, #248]
    1328:	add	x16, x16, #0xf8
    132c:	br	x17

Disassembly of section .text:

0000000000001330 <PyInit__random@@Base-0xae8>:
    1330:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    1334:	ldr	x0, [x0, #4040]
    1338:	cbz	x0, 1340 <_PyTime_GetMonotonicClock@plt+0x20>
    133c:	b	1210 <__gmon_start__@plt>
    1340:	ret
    1344:	nop
    1348:	adrp	x0, 13000 <PyInit__random@@Base+0x111e8>
    134c:	add	x0, x0, #0x3d0
    1350:	adrp	x1, 13000 <PyInit__random@@Base+0x111e8>
    1354:	add	x1, x1, #0x3d0
    1358:	cmp	x1, x0
    135c:	b.eq	1374 <_PyTime_GetMonotonicClock@plt+0x54>  // b.none
    1360:	adrp	x1, 12000 <PyInit__random@@Base+0x101e8>
    1364:	ldr	x1, [x1, #4000]
    1368:	cbz	x1, 1374 <_PyTime_GetMonotonicClock@plt+0x54>
    136c:	mov	x16, x1
    1370:	br	x16
    1374:	ret
    1378:	adrp	x0, 13000 <PyInit__random@@Base+0x111e8>
    137c:	add	x0, x0, #0x3d0
    1380:	adrp	x1, 13000 <PyInit__random@@Base+0x111e8>
    1384:	add	x1, x1, #0x3d0
    1388:	sub	x1, x1, x0
    138c:	lsr	x2, x1, #63
    1390:	add	x1, x2, x1, asr #3
    1394:	cmp	xzr, x1, asr #1
    1398:	asr	x1, x1, #1
    139c:	b.eq	13b4 <_PyTime_GetMonotonicClock@plt+0x94>  // b.none
    13a0:	adrp	x2, 12000 <PyInit__random@@Base+0x101e8>
    13a4:	ldr	x2, [x2, #4064]
    13a8:	cbz	x2, 13b4 <_PyTime_GetMonotonicClock@plt+0x94>
    13ac:	mov	x16, x2
    13b0:	br	x16
    13b4:	ret
    13b8:	stp	x29, x30, [sp, #-32]!
    13bc:	mov	x29, sp
    13c0:	str	x19, [sp, #16]
    13c4:	adrp	x19, 13000 <PyInit__random@@Base+0x111e8>
    13c8:	ldrb	w0, [x19, #976]
    13cc:	cbnz	w0, 13f4 <_PyTime_GetMonotonicClock@plt+0xd4>
    13d0:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    13d4:	ldr	x0, [x0, #4016]
    13d8:	cbz	x0, 13e8 <_PyTime_GetMonotonicClock@plt+0xc8>
    13dc:	adrp	x0, 13000 <PyInit__random@@Base+0x111e8>
    13e0:	ldr	x0, [x0, #256]
    13e4:	bl	1140 <__cxa_finalize@plt>
    13e8:	bl	1348 <_PyTime_GetMonotonicClock@plt+0x28>
    13ec:	mov	w0, #0x1                   	// #1
    13f0:	strb	w0, [x19, #976]
    13f4:	ldr	x19, [sp, #16]
    13f8:	ldp	x29, x30, [sp], #32
    13fc:	ret
    1400:	b	1378 <_PyTime_GetMonotonicClock@plt+0x58>
    1404:	nop
    1408:	ldr	w1, [x0, #16]
    140c:	add	x9, x0, #0x14
    1410:	cmp	w1, #0x26f
    1414:	b.gt	1450 <_PyTime_GetMonotonicClock@plt+0x130>
    1418:	add	x9, x9, w1, sxtw #2
    141c:	add	w1, w1, #0x1
    1420:	str	w1, [x0, #16]
    1424:	mov	w1, #0x5680                	// #22144
    1428:	movk	w1, #0x9d2c, lsl #16
    142c:	mov	w0, #0xefc60000            	// #-272236544
    1430:	ldr	w2, [x9]
    1434:	eor	w2, w2, w2, lsr #11
    1438:	and	w1, w1, w2, lsl #7
    143c:	eor	w1, w1, w2
    1440:	and	w0, w0, w1, lsl #15
    1444:	eor	w0, w0, w1
    1448:	eor	w0, w0, w0, lsr #18
    144c:	ret
    1450:	adrp	x6, 1000 <PyMem_Free@plt-0x130>
    1454:	mov	x2, x9
    1458:	add	x8, x6, #0xf98
    145c:	add	x7, x0, #0x3a0
    1460:	mov	x3, x9
    1464:	nop
    1468:	ldp	w1, w4, [x3]
    146c:	ldr	w5, [x3, #1588]
    1470:	bfxil	w1, w4, #0, #31
    1474:	and	x4, x1, #0x1
    1478:	eor	w1, w5, w1, lsr #1
    147c:	ldr	w4, [x8, x4, lsl #2]
    1480:	eor	w1, w1, w4
    1484:	str	w1, [x3], #4
    1488:	cmp	x7, x3
    148c:	b.ne	1468 <_PyTime_GetMonotonicClock@plt+0x148>  // b.any
    1490:	add	x5, x6, #0xf98
    1494:	add	x6, x0, #0x644
    1498:	ldr	w1, [x2, #908]
    149c:	add	x2, x2, #0x4
    14a0:	ldr	w3, [x2, #908]
    14a4:	ldur	w4, [x2, #-4]
    14a8:	bfxil	w1, w3, #0, #31
    14ac:	and	x3, x1, #0x1
    14b0:	eor	w1, w4, w1, lsr #1
    14b4:	ldr	w3, [x5, x3, lsl #2]
    14b8:	eor	w1, w1, w3
    14bc:	str	w1, [x2, #904]
    14c0:	cmp	x6, x2
    14c4:	b.ne	1498 <_PyTime_GetMonotonicClock@plt+0x178>  // b.any
    14c8:	ldr	w3, [x0, #20]
    14cc:	mov	w1, #0x1                   	// #1
    14d0:	ldr	w2, [x0, #2512]
    14d4:	ldr	w4, [x0, #1604]
    14d8:	bfxil	w2, w3, #0, #31
    14dc:	and	x3, x2, #0x1
    14e0:	eor	w2, w4, w2, lsr #1
    14e4:	ldr	w3, [x5, x3, lsl #2]
    14e8:	eor	w2, w2, w3
    14ec:	str	w2, [x0, #2512]
    14f0:	b	1420 <_PyTime_GetMonotonicClock@plt+0x100>
    14f4:	nop
    14f8:	mov	w7, #0xd6aa                	// #54954
    14fc:	mov	w5, #0x8965                	// #35173
    1500:	movk	w7, #0x12b, lsl #16
    1504:	add	x6, x0, #0x14
    1508:	mov	w3, w7
    150c:	mov	x4, #0x1                   	// #1
    1510:	movk	w5, #0x6c07, lsl #16
    1514:	str	w7, [x0, #20]
    1518:	b	1520 <_PyTime_GetMonotonicClock@plt+0x200>
    151c:	add	x4, x4, #0x1
    1520:	eor	w3, w3, w3, lsr #30
    1524:	cmp	x4, #0x26f
    1528:	madd	w3, w3, w5, w4
    152c:	str	w3, [x6, x4, lsl #2]
    1530:	b.ne	151c <_PyTime_GetMonotonicClock@plt+0x1fc>  // b.any
    1534:	cmp	x2, #0x270
    1538:	mov	w12, #0x660d                	// #26125
    153c:	mov	x9, #0x270                 	// #624
    1540:	mov	w8, #0x270                 	// #624
    1544:	ldr	w3, [x0, #20]
    1548:	csel	x9, x2, x9, cs  // cs = hs, nlast
    154c:	mov	x7, #0x0                   	// #0
    1550:	mov	x5, #0x1                   	// #1
    1554:	movk	w12, #0x19, lsl #16
    1558:	str	w8, [x0, #16]
    155c:	b	1574 <_PyTime_GetMonotonicClock@plt+0x254>
    1560:	cmp	x2, x7
    1564:	ldr	w3, [x6, x11]
    1568:	csel	x7, x7, xzr, hi  // hi = pmore
    156c:	subs	x9, x9, #0x1
    1570:	b.eq	15c4 <_PyTime_GetMonotonicClock@plt+0x2a4>  // b.none
    1574:	eor	w3, w3, w3, lsr #30
    1578:	ldr	w10, [x6, x5, lsl #2]
    157c:	ldr	w8, [x1, x7, lsl #2]
    1580:	lsl	x11, x5, #2
    1584:	mul	w3, w3, w12
    1588:	add	w8, w8, w7
    158c:	add	x7, x7, #0x1
    1590:	eor	w3, w3, w10
    1594:	add	w3, w3, w8
    1598:	str	w3, [x6, x5, lsl #2]
    159c:	add	x5, x5, #0x1
    15a0:	cmp	x5, #0x26f
    15a4:	b.ls	1560 <_PyTime_GetMonotonicClock@plt+0x240>  // b.plast
    15a8:	ldr	w3, [x0, #2512]
    15ac:	cmp	x2, x7
    15b0:	str	w3, [x0, #20]
    15b4:	csel	x7, x7, xzr, hi  // hi = pmore
    15b8:	mov	x5, #0x1                   	// #1
    15bc:	subs	x9, x9, #0x1
    15c0:	b.ne	1574 <_PyTime_GetMonotonicClock@plt+0x254>  // b.any
    15c4:	mov	w7, #0x8b65                	// #35685
    15c8:	lsl	x1, x5, #2
    15cc:	movk	w7, #0x5d58, lsl #16
    15d0:	b	15d8 <_PyTime_GetMonotonicClock@plt+0x2b8>
    15d4:	ldur	w3, [x2, #-4]
    15d8:	eor	w3, w3, w3, lsr #30
    15dc:	ldr	w2, [x6, x1]
    15e0:	mul	w3, w3, w7
    15e4:	eor	w3, w3, w2
    15e8:	sub	w3, w3, w5
    15ec:	str	w3, [x6, x1]
    15f0:	add	x5, x5, #0x1
    15f4:	cmp	x5, #0x270
    15f8:	b.ne	1608 <_PyTime_GetMonotonicClock@plt+0x2e8>  // b.any
    15fc:	ldr	w1, [x0, #2512]
    1600:	mov	x5, #0x1                   	// #1
    1604:	str	w1, [x0, #20]
    1608:	lsl	x1, x5, #2
    160c:	subs	x4, x4, #0x1
    1610:	add	x2, x6, x1
    1614:	b.ne	15d4 <_PyTime_GetMonotonicClock@plt+0x2b4>  // b.any
    1618:	mov	w1, #0x80000000            	// #-2147483648
    161c:	str	w1, [x0, #20]
    1620:	ret
    1624:	nop
    1628:	sub	sp, sp, #0x9e0
    162c:	mov	x1, #0x9c0                 	// #2496
    1630:	stp	x29, x30, [sp]
    1634:	mov	x29, sp
    1638:	stp	x19, x20, [sp, #16]
    163c:	add	x20, sp, #0x20
    1640:	mov	x19, x0
    1644:	mov	x0, x20
    1648:	bl	12e0 <_PyOS_URandomNonblock@plt>
    164c:	tbnz	w0, #31, 1674 <_PyTime_GetMonotonicClock@plt+0x354>
    1650:	mov	x0, x19
    1654:	mov	x1, x20
    1658:	mov	x2, #0x270                 	// #624
    165c:	bl	14f8 <_PyTime_GetMonotonicClock@plt+0x1d8>
    1660:	mov	w0, #0x0                   	// #0
    1664:	ldp	x29, x30, [sp]
    1668:	ldp	x19, x20, [sp, #16]
    166c:	add	sp, sp, #0x9e0
    1670:	ret
    1674:	mov	w0, #0xffffffff            	// #-1
    1678:	b	1664 <_PyTime_GetMonotonicClock@plt+0x344>
    167c:	nop
    1680:	stp	x29, x30, [sp, #-96]!
    1684:	cmp	x1, #0x0
    1688:	mov	x29, sp
    168c:	stp	x19, x20, [sp, #16]
    1690:	adrp	x20, 12000 <PyInit__random@@Base+0x101e8>
    1694:	ldr	x2, [x20, #4048]
    1698:	stp	x21, x22, [sp, #32]
    169c:	mov	x22, x0
    16a0:	stp	x23, x24, [sp, #48]
    16a4:	ccmp	x1, x2, #0x4, ne  // ne = any
    16a8:	b.eq	17ac <_PyTime_GetMonotonicClock@plt+0x48c>  // b.none
    16ac:	ldr	x0, [x1, #8]
    16b0:	ldr	x0, [x0, #168]
    16b4:	tbz	w0, #24, 1780 <_PyTime_GetMonotonicClock@plt+0x460>
    16b8:	adrp	x2, 12000 <PyInit__random@@Base+0x101e8>
    16bc:	mov	x0, x1
    16c0:	ldr	x1, [x2, #4056]
    16c4:	ldr	x1, [x1, #96]
    16c8:	ldr	x1, [x1, #64]
    16cc:	blr	x1
    16d0:	mov	x19, x0
    16d4:	cbz	x19, 17a0 <_PyTime_GetMonotonicClock@plt+0x480>
    16d8:	mov	x0, x19
    16dc:	bl	1190 <_PyLong_NumBits@plt>
    16e0:	mov	x21, x0
    16e4:	cmn	x0, #0x1
    16e8:	b.eq	17e0 <_PyTime_GetMonotonicClock@plt+0x4c0>  // b.none
    16ec:	cbnz	x0, 17f0 <_PyTime_GetMonotonicClock@plt+0x4d0>
    16f0:	mov	x24, #0x4                   	// #4
    16f4:	mov	x21, #0x1                   	// #1
    16f8:	mov	x0, x24
    16fc:	bl	1310 <PyMem_Malloc@plt>
    1700:	mov	x23, x0
    1704:	cbz	x0, 1844 <_PyTime_GetMonotonicClock@plt+0x524>
    1708:	mov	x2, x24
    170c:	mov	x1, x0
    1710:	mov	w4, #0x0                   	// #0
    1714:	mov	x0, x19
    1718:	mov	w3, #0x1                   	// #1
    171c:	mov	x24, #0x0                   	// #0
    1720:	bl	12c0 <_PyLong_AsByteArray@plt>
    1724:	cmn	w0, #0x1
    1728:	b.eq	1750 <_PyTime_GetMonotonicClock@plt+0x430>  // b.none
    172c:	mov	x0, x22
    1730:	mov	x2, x21
    1734:	mov	x1, x23
    1738:	bl	14f8 <_PyTime_GetMonotonicClock@plt+0x1d8>
    173c:	ldr	x20, [x20, #4048]
    1740:	mov	x24, x20
    1744:	ldr	x0, [x20]
    1748:	add	x0, x0, #0x1
    174c:	str	x0, [x20]
    1750:	ldr	x0, [x19]
    1754:	sub	x0, x0, #0x1
    1758:	str	x0, [x19]
    175c:	cbz	x0, 1838 <_PyTime_GetMonotonicClock@plt+0x518>
    1760:	mov	x0, x23
    1764:	bl	1130 <PyMem_Free@plt>
    1768:	mov	x0, x24
    176c:	ldp	x19, x20, [sp, #16]
    1770:	ldp	x21, x22, [sp, #32]
    1774:	ldp	x23, x24, [sp, #48]
    1778:	ldp	x29, x30, [sp], #96
    177c:	ret
    1780:	mov	x0, x1
    1784:	bl	1270 <PyObject_Hash@plt>
    1788:	cmn	x0, #0x1
    178c:	b.eq	17a0 <_PyTime_GetMonotonicClock@plt+0x480>  // b.none
    1790:	bl	1180 <PyLong_FromSize_t@plt>
    1794:	mov	x19, x0
    1798:	cbnz	x19, 16d8 <_PyTime_GetMonotonicClock@plt+0x3b8>
    179c:	nop
    17a0:	mov	x23, #0x0                   	// #0
    17a4:	mov	x24, #0x0                   	// #0
    17a8:	b	1760 <_PyTime_GetMonotonicClock@plt+0x440>
    17ac:	bl	1628 <_PyTime_GetMonotonicClock@plt+0x308>
    17b0:	tbnz	w0, #31, 1804 <_PyTime_GetMonotonicClock@plt+0x4e4>
    17b4:	ldr	x20, [x20, #4048]
    17b8:	ldp	x21, x22, [sp, #32]
    17bc:	mov	x24, x20
    17c0:	ldr	x0, [x20]
    17c4:	add	x0, x0, #0x1
    17c8:	str	x0, [x20]
    17cc:	mov	x0, x24
    17d0:	ldp	x19, x20, [sp, #16]
    17d4:	ldp	x23, x24, [sp, #48]
    17d8:	ldp	x29, x30, [sp], #96
    17dc:	ret
    17e0:	mov	x23, #0x0                   	// #0
    17e4:	mov	x24, #0x0                   	// #0
    17e8:	bl	1240 <PyErr_Occurred@plt>
    17ec:	cbnz	x0, 1750 <_PyTime_GetMonotonicClock@plt+0x430>
    17f0:	sub	x21, x21, #0x1
    17f4:	lsr	x21, x21, #5
    17f8:	add	x21, x21, #0x1
    17fc:	lsl	x24, x21, #2
    1800:	b	16f8 <_PyTime_GetMonotonicClock@plt+0x3d8>
    1804:	bl	1200 <PyErr_Clear@plt>
    1808:	bl	1150 <_PyTime_GetSystemClock@plt>
    180c:	str	x0, [sp, #72]
    1810:	bl	11a0 <getpid@plt>
    1814:	str	w0, [sp, #80]
    1818:	bl	1320 <_PyTime_GetMonotonicClock@plt>
    181c:	mov	x3, x0
    1820:	add	x1, sp, #0x48
    1824:	mov	x0, x22
    1828:	mov	x2, #0x5                   	// #5
    182c:	stur	x3, [sp, #84]
    1830:	bl	14f8 <_PyTime_GetMonotonicClock@plt+0x1d8>
    1834:	b	17b4 <_PyTime_GetMonotonicClock@plt+0x494>
    1838:	mov	x0, x19
    183c:	bl	1160 <_Py_Dealloc@plt>
    1840:	b	1760 <_PyTime_GetMonotonicClock@plt+0x440>
    1844:	mov	x24, #0x0                   	// #0
    1848:	bl	1170 <PyErr_NoMemory@plt>
    184c:	b	1750 <_PyTime_GetMonotonicClock@plt+0x430>
    1850:	stp	x29, x30, [sp, #-32]!
    1854:	cmp	x2, #0x0
    1858:	mov	x29, sp
    185c:	stp	x19, x20, [sp, #16]
    1860:	mov	x19, x0
    1864:	adrp	x0, 13000 <PyInit__random@@Base+0x111e8>
    1868:	add	x0, x0, #0x108
    186c:	mov	x20, x1
    1870:	ccmp	x19, x0, #0x0, ne  // ne = any
    1874:	b.eq	18f4 <_PyTime_GetMonotonicClock@plt+0x5d4>  // b.none
    1878:	ldr	x2, [x19, #304]
    187c:	mov	x0, x19
    1880:	mov	x1, #0x0                   	// #0
    1884:	blr	x2
    1888:	mov	x19, x0
    188c:	cbz	x0, 18e0 <_PyTime_GetMonotonicClock@plt+0x5c0>
    1890:	mov	x1, x20
    1894:	bl	1680 <_PyTime_GetMonotonicClock@plt+0x360>
    1898:	cbz	x0, 18d0 <_PyTime_GetMonotonicClock@plt+0x5b0>
    189c:	ldr	x2, [x0]
    18a0:	sub	x2, x2, #0x1
    18a4:	str	x2, [x0]
    18a8:	cbz	x2, 18bc <_PyTime_GetMonotonicClock@plt+0x59c>
    18ac:	mov	x0, x19
    18b0:	ldp	x19, x20, [sp, #16]
    18b4:	ldp	x29, x30, [sp], #32
    18b8:	ret
    18bc:	bl	1160 <_Py_Dealloc@plt>
    18c0:	mov	x0, x19
    18c4:	ldp	x19, x20, [sp, #16]
    18c8:	ldp	x29, x30, [sp], #32
    18cc:	ret
    18d0:	ldr	x0, [x19]
    18d4:	sub	x0, x0, #0x1
    18d8:	str	x0, [x19]
    18dc:	cbz	x0, 1910 <_PyTime_GetMonotonicClock@plt+0x5f0>
    18e0:	mov	x19, #0x0                   	// #0
    18e4:	mov	x0, x19
    18e8:	ldp	x19, x20, [sp, #16]
    18ec:	ldp	x29, x30, [sp], #32
    18f0:	ret
    18f4:	adrp	x0, 1000 <PyMem_Free@plt-0x130>
    18f8:	mov	x1, x2
    18fc:	add	x0, x0, #0xf90
    1900:	bl	12f0 <_PyArg_NoKeywords@plt>
    1904:	cbnz	w0, 1878 <_PyTime_GetMonotonicClock@plt+0x558>
    1908:	mov	x19, #0x0                   	// #0
    190c:	b	18e4 <_PyTime_GetMonotonicClock@plt+0x5c4>
    1910:	mov	x0, x19
    1914:	mov	x19, #0x0                   	// #0
    1918:	bl	1160 <_Py_Dealloc@plt>
    191c:	b	18ac <_PyTime_GetMonotonicClock@plt+0x58c>
    1920:	stp	x29, x30, [sp, #-64]!
    1924:	mov	x29, sp
    1928:	stp	x19, x20, [sp, #16]
    192c:	stp	x21, x22, [sp, #32]
    1930:	mov	x21, x0
    1934:	mov	x0, #0x271                 	// #625
    1938:	bl	1220 <PyTuple_New@plt>
    193c:	cbz	x0, 1988 <_PyTime_GetMonotonicClock@plt+0x668>
    1940:	mov	x19, x0
    1944:	add	x22, x0, #0x18
    1948:	mov	x20, #0x0                   	// #0
    194c:	str	x23, [sp, #48]
    1950:	add	x23, x21, #0x14
    1954:	b	1968 <_PyTime_GetMonotonicClock@plt+0x648>
    1958:	str	x0, [x22, x20, lsl #3]
    195c:	add	x20, x20, #0x1
    1960:	cmp	x20, #0x270
    1964:	b.eq	19c4 <_PyTime_GetMonotonicClock@plt+0x6a4>  // b.none
    1968:	ldr	w0, [x23, x20, lsl #2]
    196c:	bl	1290 <PyLong_FromUnsignedLong@plt>
    1970:	cbnz	x0, 1958 <_PyTime_GetMonotonicClock@plt+0x638>
    1974:	ldr	x0, [x19]
    1978:	sub	x0, x0, #0x1
    197c:	str	x0, [x19]
    1980:	cbz	x0, 19a0 <_PyTime_GetMonotonicClock@plt+0x680>
    1984:	ldr	x23, [sp, #48]
    1988:	mov	x19, #0x0                   	// #0
    198c:	mov	x0, x19
    1990:	ldp	x19, x20, [sp, #16]
    1994:	ldp	x21, x22, [sp, #32]
    1998:	ldp	x29, x30, [sp], #64
    199c:	ret
    19a0:	mov	x0, x19
    19a4:	mov	x19, #0x0                   	// #0
    19a8:	bl	1160 <_Py_Dealloc@plt>
    19ac:	mov	x0, x19
    19b0:	ldp	x19, x20, [sp, #16]
    19b4:	ldp	x21, x22, [sp, #32]
    19b8:	ldr	x23, [sp, #48]
    19bc:	ldp	x29, x30, [sp], #64
    19c0:	ret
    19c4:	ldrsw	x0, [x21, #16]
    19c8:	bl	11f0 <PyLong_FromLong@plt>
    19cc:	cbz	x0, 1974 <_PyTime_GetMonotonicClock@plt+0x654>
    19d0:	ldr	x23, [sp, #48]
    19d4:	str	x0, [x19, #5016]
    19d8:	mov	x0, x19
    19dc:	ldp	x19, x20, [sp, #16]
    19e0:	ldp	x21, x22, [sp, #32]
    19e4:	ldp	x29, x30, [sp], #64
    19e8:	ret
    19ec:	nop
    19f0:	stp	x29, x30, [sp, #-48]!
    19f4:	cmp	x2, #0x1
    19f8:	mov	x29, sp
    19fc:	stp	x19, x20, [sp, #16]
    1a00:	mov	x19, x2
    1a04:	mov	x20, x0
    1a08:	str	x21, [sp, #32]
    1a0c:	mov	x21, x1
    1a10:	b.hi	1a34 <_PyTime_GetMonotonicClock@plt+0x714>  // b.pmore
    1a14:	cmp	x19, #0x0
    1a18:	b.le	1a64 <_PyTime_GetMonotonicClock@plt+0x744>
    1a1c:	mov	x0, x20
    1a20:	ldr	x1, [x21]
    1a24:	ldp	x19, x20, [sp, #16]
    1a28:	ldr	x21, [sp, #32]
    1a2c:	ldp	x29, x30, [sp], #48
    1a30:	b	1680 <_PyTime_GetMonotonicClock@plt+0x360>
    1a34:	adrp	x0, 1000 <PyMem_Free@plt-0x130>
    1a38:	mov	x1, x19
    1a3c:	add	x0, x0, #0xe98
    1a40:	mov	x3, #0x1                   	// #1
    1a44:	mov	x2, #0x0                   	// #0
    1a48:	bl	1230 <_PyArg_CheckPositional@plt>
    1a4c:	cbnz	w0, 1a14 <_PyTime_GetMonotonicClock@plt+0x6f4>
    1a50:	mov	x0, #0x0                   	// #0
    1a54:	ldp	x19, x20, [sp, #16]
    1a58:	ldr	x21, [sp, #32]
    1a5c:	ldp	x29, x30, [sp], #48
    1a60:	ret
    1a64:	mov	x0, x20
    1a68:	adrp	x1, 12000 <PyInit__random@@Base+0x101e8>
    1a6c:	ldp	x19, x20, [sp, #16]
    1a70:	ldr	x21, [sp, #32]
    1a74:	ldp	x29, x30, [sp], #48
    1a78:	ldr	x1, [x1, #4048]
    1a7c:	b	1680 <_PyTime_GetMonotonicClock@plt+0x360>
    1a80:	mov	x11, x0
    1a84:	stp	x29, x30, [sp, #-16]!
    1a88:	mov	x29, sp
    1a8c:	bl	1408 <_PyTime_GetMonotonicClock@plt+0xe8>
    1a90:	mov	w10, w0
    1a94:	mov	x0, x11
    1a98:	bl	1408 <_PyTime_GetMonotonicClock@plt+0xe8>
    1a9c:	lsr	w10, w10, #5
    1aa0:	lsr	w0, w0, #6
    1aa4:	mov	x1, #0x4190000000000000    	// #4724276009111650304
    1aa8:	scvtf	d1, w10
    1aac:	fmov	d0, x1
    1ab0:	scvtf	d2, w0
    1ab4:	mov	x1, #0x3ca0000000000000    	// #4368491638549381120
    1ab8:	ldp	x29, x30, [sp], #16
    1abc:	fmov	d3, x1
    1ac0:	fmul	d1, d1, d0
    1ac4:	fadd	d0, d1, d2
    1ac8:	fmul	d0, d0, d3
    1acc:	b	11d0 <PyFloat_FromDouble@plt>
    1ad0:	stp	x29, x30, [sp, #-64]!
    1ad4:	adrp	x2, 12000 <PyInit__random@@Base+0x101e8>
    1ad8:	mov	x29, sp
    1adc:	stp	x19, x20, [sp, #16]
    1ae0:	mov	x19, x1
    1ae4:	mov	x20, x0
    1ae8:	ldr	x1, [x2, #4008]
    1aec:	ldr	x0, [x19, #8]
    1af0:	cmp	x0, x1
    1af4:	b.eq	1c0c <_PyTime_GetMonotonicClock@plt+0x8ec>  // b.none
    1af8:	bl	12b0 <PyType_IsSubtype@plt>
    1afc:	cbnz	w0, 1c0c <_PyTime_GetMonotonicClock@plt+0x8ec>
    1b00:	mov	x0, x19
    1b04:	bl	1300 <_PyLong_AsInt@plt>
    1b08:	mov	w19, w0
    1b0c:	cmn	w0, #0x1
    1b10:	b.eq	1bd4 <_PyTime_GetMonotonicClock@plt+0x8b4>  // b.none
    1b14:	cmp	w0, #0x0
    1b18:	b.le	1be0 <_PyTime_GetMonotonicClock@plt+0x8c0>
    1b1c:	cmp	w0, #0x20
    1b20:	b.le	1c38 <_PyTime_GetMonotonicClock@plt+0x918>
    1b24:	sub	w12, w0, #0x1
    1b28:	str	x23, [sp, #48]
    1b2c:	stp	x21, x22, [sp, #32]
    1b30:	asr	w23, w12, #5
    1b34:	add	w21, w23, #0x1
    1b38:	lsl	w21, w21, #2
    1b3c:	sxtw	x21, w21
    1b40:	mov	x0, x21
    1b44:	bl	1310 <PyMem_Malloc@plt>
    1b48:	mov	x22, x0
    1b4c:	cbz	x0, 1c58 <_PyTime_GetMonotonicClock@plt+0x938>
    1b50:	sub	w19, w19, #0x20
    1b54:	mov	x0, x20
    1b58:	bl	1408 <_PyTime_GetMonotonicClock@plt+0xe8>
    1b5c:	sub	w23, w19, w23, lsl #5
    1b60:	mov	w1, w0
    1b64:	mov	x11, x22
    1b68:	mov	w13, #0x20                  	// #32
    1b6c:	b	1b88 <_PyTime_GetMonotonicClock@plt+0x868>
    1b70:	bl	1408 <_PyTime_GetMonotonicClock@plt+0xe8>
    1b74:	sub	w2, w13, w19
    1b78:	cmp	w19, #0x20
    1b7c:	sub	w19, w19, #0x20
    1b80:	lsr	w2, w0, w2
    1b84:	csel	w1, w2, w0, lt  // lt = tstop
    1b88:	str	w1, [x11]
    1b8c:	mov	x0, x20
    1b90:	cmp	w23, w19
    1b94:	add	x11, x11, #0x4
    1b98:	b.ne	1b70 <_PyTime_GetMonotonicClock@plt+0x850>  // b.any
    1b9c:	mov	x1, x21
    1ba0:	mov	w3, #0x0                   	// #0
    1ba4:	mov	w2, #0x1                   	// #1
    1ba8:	mov	x0, x22
    1bac:	bl	11c0 <_PyLong_FromByteArray@plt>
    1bb0:	mov	x19, x0
    1bb4:	mov	x0, x22
    1bb8:	bl	1130 <PyMem_Free@plt>
    1bbc:	ldp	x21, x22, [sp, #32]
    1bc0:	ldr	x23, [sp, #48]
    1bc4:	mov	x0, x19
    1bc8:	ldp	x19, x20, [sp, #16]
    1bcc:	ldp	x29, x30, [sp], #64
    1bd0:	ret
    1bd4:	mov	x19, #0x0                   	// #0
    1bd8:	bl	1240 <PyErr_Occurred@plt>
    1bdc:	cbnz	x0, 1bc4 <_PyTime_GetMonotonicClock@plt+0x8a4>
    1be0:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    1be4:	mov	x19, #0x0                   	// #0
    1be8:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1bec:	add	x1, x1, #0xec8
    1bf0:	ldr	x0, [x0, #4024]
    1bf4:	ldr	x0, [x0]
    1bf8:	bl	11b0 <PyErr_SetString@plt>
    1bfc:	mov	x0, x19
    1c00:	ldp	x19, x20, [sp, #16]
    1c04:	ldp	x29, x30, [sp], #64
    1c08:	ret
    1c0c:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    1c10:	mov	x19, #0x0                   	// #0
    1c14:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1c18:	add	x1, x1, #0xea0
    1c1c:	ldr	x0, [x0, #4032]
    1c20:	ldr	x0, [x0]
    1c24:	bl	11b0 <PyErr_SetString@plt>
    1c28:	mov	x0, x19
    1c2c:	ldp	x19, x20, [sp, #16]
    1c30:	ldp	x29, x30, [sp], #64
    1c34:	ret
    1c38:	mov	x0, x20
    1c3c:	bl	1408 <_PyTime_GetMonotonicClock@plt+0xe8>
    1c40:	neg	w10, w19
    1c44:	ldp	x19, x20, [sp, #16]
    1c48:	lsr	w0, w0, w10
    1c4c:	ldp	x29, x30, [sp], #64
    1c50:	mov	w0, w0
    1c54:	b	1290 <PyLong_FromUnsignedLong@plt>
    1c58:	bl	1170 <PyErr_NoMemory@plt>
    1c5c:	mov	x19, #0x0                   	// #0
    1c60:	ldp	x21, x22, [sp, #32]
    1c64:	ldr	x23, [sp, #48]
    1c68:	b	1bc4 <_PyTime_GetMonotonicClock@plt+0x8a4>
    1c6c:	nop
    1c70:	sub	sp, sp, #0xa00
    1c74:	stp	x29, x30, [sp]
    1c78:	mov	x29, sp
    1c7c:	stp	x19, x20, [sp, #16]
    1c80:	mov	x20, #0x1                   	// #1
    1c84:	stp	x21, x22, [sp, #32]
    1c88:	add	x22, x1, #0x10
    1c8c:	add	x21, sp, #0x40
    1c90:	stp	x23, x24, [sp, #48]
    1c94:	mov	x24, x1
    1c98:	mov	x23, x0
    1c9c:	b	1cb4 <_PyTime_GetMonotonicClock@plt+0x994>
    1ca0:	add	x2, x21, x20, lsl #2
    1ca4:	add	x20, x20, #0x1
    1ca8:	cmp	x20, #0x271
    1cac:	stur	w19, [x2, #-4]
    1cb0:	b.eq	1cec <_PyTime_GetMonotonicClock@plt+0x9cc>  // b.none
    1cb4:	ldr	x0, [x22, x20, lsl #3]
    1cb8:	bl	1280 <PyLong_AsUnsignedLong@plt>
    1cbc:	mov	x19, x0
    1cc0:	cmn	x0, #0x1
    1cc4:	b.ne	1ca0 <_PyTime_GetMonotonicClock@plt+0x980>  // b.any
    1cc8:	bl	1240 <PyErr_Occurred@plt>
    1ccc:	cbz	x0, 1ca0 <_PyTime_GetMonotonicClock@plt+0x980>
    1cd0:	mov	x0, #0x0                   	// #0
    1cd4:	ldp	x29, x30, [sp]
    1cd8:	ldp	x19, x20, [sp, #16]
    1cdc:	ldp	x21, x22, [sp, #32]
    1ce0:	ldp	x23, x24, [sp, #48]
    1ce4:	add	sp, sp, #0xa00
    1ce8:	ret
    1cec:	ldr	x0, [x24, #5016]
    1cf0:	bl	1260 <PyLong_AsLong@plt>
    1cf4:	cmn	x0, #0x1
    1cf8:	b.eq	1d58 <_PyTime_GetMonotonicClock@plt+0xa38>  // b.none
    1cfc:	cmp	x0, #0x270
    1d00:	b.hi	1d60 <_PyTime_GetMonotonicClock@plt+0xa40>  // b.pmore
    1d04:	mov	x2, x23
    1d08:	mov	x1, #0x1                   	// #1
    1d0c:	str	w0, [x2, #16]!
    1d10:	add	x0, x21, x1, lsl #2
    1d14:	ldur	w0, [x0, #-4]
    1d18:	str	w0, [x2, x1, lsl #2]
    1d1c:	add	x1, x1, #0x1
    1d20:	cmp	x1, #0x271
    1d24:	b.ne	1d10 <_PyTime_GetMonotonicClock@plt+0x9f0>  // b.any
    1d28:	adrp	x1, 12000 <PyInit__random@@Base+0x101e8>
    1d2c:	ldp	x29, x30, [sp]
    1d30:	ldr	x1, [x1, #4048]
    1d34:	ldp	x19, x20, [sp, #16]
    1d38:	mov	x0, x1
    1d3c:	ldr	x2, [x1]
    1d40:	ldp	x21, x22, [sp, #32]
    1d44:	add	x2, x2, #0x1
    1d48:	str	x2, [x1]
    1d4c:	ldp	x23, x24, [sp, #48]
    1d50:	add	sp, sp, #0xa00
    1d54:	ret
    1d58:	bl	1240 <PyErr_Occurred@plt>
    1d5c:	cbnz	x0, 1cd0 <_PyTime_GetMonotonicClock@plt+0x9b0>
    1d60:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    1d64:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1d68:	add	x1, x1, #0xef8
    1d6c:	ldr	x0, [x0, #4024]
    1d70:	ldr	x0, [x0]
    1d74:	bl	11b0 <PyErr_SetString@plt>
    1d78:	b	1cd0 <_PyTime_GetMonotonicClock@plt+0x9b0>
    1d7c:	nop
    1d80:	stp	x29, x30, [sp, #-32]!
    1d84:	mov	x29, sp
    1d88:	stp	x19, x20, [sp, #16]
    1d8c:	mov	x20, x0
    1d90:	ldr	x0, [x1, #8]
    1d94:	ldr	x0, [x0, #168]
    1d98:	tbz	w0, #26, 1dc4 <_PyTime_GetMonotonicClock@plt+0xaa4>
    1d9c:	mov	x19, x1
    1da0:	mov	x0, x1
    1da4:	bl	12d0 <PyTuple_Size@plt>
    1da8:	cmp	x0, #0x271
    1dac:	b.ne	1dec <_PyTime_GetMonotonicClock@plt+0xacc>  // b.any
    1db0:	mov	x1, x19
    1db4:	mov	x0, x20
    1db8:	ldp	x19, x20, [sp, #16]
    1dbc:	ldp	x29, x30, [sp], #32
    1dc0:	b	1c70 <_PyTime_GetMonotonicClock@plt+0x950>
    1dc4:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    1dc8:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1dcc:	add	x1, x1, #0xf08
    1dd0:	ldr	x0, [x0, #4032]
    1dd4:	ldr	x0, [x0]
    1dd8:	bl	11b0 <PyErr_SetString@plt>
    1ddc:	mov	x0, #0x0                   	// #0
    1de0:	ldp	x19, x20, [sp, #16]
    1de4:	ldp	x29, x30, [sp], #32
    1de8:	ret
    1dec:	adrp	x0, 12000 <PyInit__random@@Base+0x101e8>
    1df0:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1df4:	add	x1, x1, #0xf28
    1df8:	ldr	x0, [x0, #4024]
    1dfc:	ldr	x0, [x0]
    1e00:	bl	11b0 <PyErr_SetString@plt>
    1e04:	mov	x0, #0x0                   	// #0
    1e08:	ldp	x19, x20, [sp, #16]
    1e0c:	ldp	x29, x30, [sp], #32
    1e10:	ret
    1e14:	nop

0000000000001e18 <PyInit__random@@Base>:
    1e18:	stp	x29, x30, [sp, #-48]!
    1e1c:	mov	x29, sp
    1e20:	stp	x19, x20, [sp, #16]
    1e24:	adrp	x20, 13000 <PyInit__random@@Base+0x111e8>
    1e28:	mov	x19, #0x0                   	// #0
    1e2c:	str	x21, [sp, #32]
    1e30:	add	x21, x20, #0x108
    1e34:	mov	x0, x21
    1e38:	bl	11e0 <PyType_Ready@plt>
    1e3c:	tbnz	w0, #31, 1e74 <PyInit__random@@Base+0x5c>
    1e40:	adrp	x0, 13000 <PyInit__random@@Base+0x111e8>
    1e44:	mov	w1, #0x3f5                 	// #1013
    1e48:	add	x0, x0, #0x2a8
    1e4c:	bl	1250 <PyModule_Create2@plt>
    1e50:	mov	x19, x0
    1e54:	cbz	x0, 1e74 <PyInit__random@@Base+0x5c>
    1e58:	ldr	x3, [x20, #264]
    1e5c:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1e60:	mov	x2, x21
    1e64:	add	x1, x1, #0xf90
    1e68:	add	x3, x3, #0x1
    1e6c:	str	x3, [x20, #264]
    1e70:	bl	12a0 <PyModule_AddObject@plt>
    1e74:	mov	x0, x19
    1e78:	ldp	x19, x20, [sp, #16]
    1e7c:	ldr	x21, [sp, #32]
    1e80:	ldp	x29, x30, [sp], #48
    1e84:	ret

Disassembly of section .fini:

0000000000001e88 <.fini>:
    1e88:	stp	x29, x30, [sp, #-16]!
    1e8c:	mov	x29, sp
    1e90:	ldp	x29, x30, [sp], #16
    1e94:	ret
