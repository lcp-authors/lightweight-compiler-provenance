
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//crc64.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <crc64_init>:
   0:	adrp	x1, 0 <crc64_init>
   4:	ldr	x6, [x1]
   8:	ldr	x1, [x6, #8]
   c:	cbz	x1, 18 <crc64_init+0x18>
  10:	str	xzr, [x0]
  14:	ret
  18:	mov	x8, #0x3693                	// #13971
  1c:	mov	x2, #0x0                   	// #0
  20:	movk	x8, #0xa9ea, lsl #16
  24:	mov	x7, #0x1                   	// #1
  28:	movk	x8, #0xe1eb, lsl #32
  2c:	movk	x8, #0x42f0, lsl #48
  30:	mov	x4, x2
  34:	mov	x1, #0x0                   	// #0
  38:	mov	w3, #0x7                   	// #7
  3c:	tst	x4, #0x1
  40:	lsl	x5, x7, x3
  44:	sub	w3, w3, #0x1
  48:	orr	x5, x1, x5
  4c:	csel	x1, x5, x1, ne  // ne = any
  50:	lsr	x4, x4, #1
  54:	cmn	w3, #0x1
  58:	b.ne	3c <crc64_init+0x3c>  // b.any
  5c:	lsl	x1, x1, #56
  60:	mov	w3, #0x8                   	// #8
  64:	lsl	x4, x1, #1
  68:	cmp	x1, #0x0
  6c:	eor	x1, x4, x8
  70:	csel	x1, x1, x4, lt  // lt = tstop
  74:	subs	w3, w3, #0x1
  78:	b.ne	64 <crc64_init+0x64>  // b.any
  7c:	mov	x3, #0x0                   	// #0
  80:	mov	w4, #0x3f                  	// #63
  84:	tst	x1, #0x1
  88:	lsl	x5, x7, x4
  8c:	sub	w4, w4, #0x1
  90:	orr	x5, x3, x5
  94:	csel	x3, x5, x3, ne  // ne = any
  98:	lsr	x1, x1, #1
  9c:	cmn	w4, #0x1
  a0:	b.ne	84 <crc64_init+0x84>  // b.any
  a4:	str	x3, [x6, x2, lsl #3]
  a8:	add	x2, x2, #0x1
  ac:	cmp	x2, #0x100
  b0:	b.ne	30 <crc64_init+0x30>  // b.any
  b4:	str	xzr, [x0]
  b8:	ret
  bc:	nop
	...

00000000000000c8 <crc64_write>:
  c8:	ldr	x3, [x0]
  cc:	mvn	x4, x3
  d0:	cbz	x2, 104 <crc64_write+0x3c>
  d4:	adrp	x3, 0 <crc64_init>
  d8:	mov	w5, #0x0                   	// #0
  dc:	ldr	x7, [x3]
  e0:	and	x3, x4, #0xff
  e4:	ldrb	w6, [x1], #1
  e8:	add	w5, w5, #0x1
  ec:	eor	x3, x3, x6
  f0:	cmp	x2, w5, uxtw
  f4:	ldr	x3, [x7, x3, lsl #3]
  f8:	eor	x4, x3, x4, lsr #8
  fc:	b.hi	e0 <crc64_write+0x18>  // b.pmore
 100:	mvn	x3, x4
 104:	str	x3, [x0]
 108:	ret
 10c:	nop
	...

0000000000000118 <crc64_read>:
 118:	ret
 11c:	nop

0000000000000120 <crc64_final>:
 120:	ret
 124:	nop

0000000000000128 <grub_mod_init>:
 128:	adrp	x0, 0 <crc64_init>
 12c:	ldr	x0, [x0]
 130:	b	0 <grub_md_register>
 134:	nop
	...

0000000000000140 <grub_mod_fini>:
 140:	adrp	x0, 0 <crc64_init>
 144:	ldr	x0, [x0]
 148:	b	0 <grub_md_unregister>
 14c:	nop
	...
