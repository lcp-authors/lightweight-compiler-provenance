
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-done_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400878 <_init>:
  400878:	stp	x29, x30, [sp, #-16]!
  40087c:	mov	x29, sp
  400880:	bl	4009e0 <call_weak_fn>
  400884:	ldp	x29, x30, [sp], #16
  400888:	ret

Disassembly of section .plt:

0000000000400890 <__libc_start_main@plt-0x20>:
  400890:	stp	x16, x30, [sp, #-16]!
  400894:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400898:	ldr	x17, [x16, #3976]
  40089c:	add	x16, x16, #0xf88
  4008a0:	br	x17
  4008a4:	nop
  4008a8:	nop
  4008ac:	nop

00000000004008b0 <__libc_start_main@plt>:
  4008b0:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  4008b4:	ldr	x17, [x16, #3984]
  4008b8:	add	x16, x16, #0xf90
  4008bc:	br	x17

00000000004008c0 <abort@plt>:
  4008c0:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  4008c4:	ldr	x17, [x16, #3992]
  4008c8:	add	x16, x16, #0xf98
  4008cc:	br	x17

00000000004008d0 <__gmon_start__@plt>:
  4008d0:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  4008d4:	ldr	x17, [x16, #4000]
  4008d8:	add	x16, x16, #0xfa0
  4008dc:	br	x17

00000000004008e0 <log_setup_service@plt>:
  4008e0:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  4008e4:	ldr	x17, [x16, #4008]
  4008e8:	add	x16, x16, #0xfa8
  4008ec:	br	x17

00000000004008f0 <__xstat64@plt>:
  4008f0:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  4008f4:	ldr	x17, [x16, #4016]
  4008f8:	add	x16, x16, #0xfb0
  4008fc:	br	x17

0000000000400900 <mac_selinux_init@plt>:
  400900:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400904:	ldr	x17, [x16, #4024]
  400908:	add	x16, x16, #0xfb8
  40090c:	br	x17

0000000000400910 <log_get_max_level_realm@plt>:
  400910:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400914:	ldr	x17, [x16, #4032]
  400918:	add	x16, x16, #0xfc0
  40091c:	br	x17

0000000000400920 <__errno_location@plt>:
  400920:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400924:	ldr	x17, [x16, #4040]
  400928:	add	x16, x16, #0xfc8
  40092c:	br	x17

0000000000400930 <log_internal_realm@plt>:
  400930:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400934:	ldr	x17, [x16, #4048]
  400938:	add	x16, x16, #0xfd0
  40093c:	br	x17

0000000000400940 <timespec_load_nsec@plt>:
  400940:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400944:	ldr	x17, [x16, #4056]
  400948:	add	x16, x16, #0xfd8
  40094c:	br	x17

0000000000400950 <asprintf@plt>:
  400950:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400954:	ldr	x17, [x16, #4064]
  400958:	add	x16, x16, #0xfe0
  40095c:	br	x17

0000000000400960 <write_string_file_atomic_label_ts@plt>:
  400960:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400964:	ldr	x17, [x16, #4072]
  400968:	add	x16, x16, #0xfe8
  40096c:	br	x17

0000000000400970 <log_oom_internal@plt>:
  400970:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400974:	ldr	x17, [x16, #4080]
  400978:	add	x16, x16, #0xff0
  40097c:	br	x17

0000000000400980 <free@plt>:
  400980:	adrp	x16, 41f000 <__FRAME_END__+0x1e028>
  400984:	ldr	x17, [x16, #4088]
  400988:	add	x16, x16, #0xff8
  40098c:	br	x17

Disassembly of section .text:

0000000000400990 <_start>:
  400990:	mov	x29, #0x0                   	// #0
  400994:	mov	x30, #0x0                   	// #0
  400998:	mov	x5, x0
  40099c:	ldr	x1, [sp]
  4009a0:	add	x2, sp, #0x8
  4009a4:	mov	x6, sp
  4009a8:	movz	x0, #0x0, lsl #48
  4009ac:	movk	x0, #0x0, lsl #32
  4009b0:	movk	x0, #0x40, lsl #16
  4009b4:	movk	x0, #0xa9c
  4009b8:	movz	x3, #0x0, lsl #48
  4009bc:	movk	x3, #0x0, lsl #32
  4009c0:	movk	x3, #0x40, lsl #16
  4009c4:	movk	x3, #0xcc8
  4009c8:	movz	x4, #0x0, lsl #48
  4009cc:	movk	x4, #0x0, lsl #32
  4009d0:	movk	x4, #0x40, lsl #16
  4009d4:	movk	x4, #0xd48
  4009d8:	bl	4008b0 <__libc_start_main@plt>
  4009dc:	bl	4008c0 <abort@plt>

00000000004009e0 <call_weak_fn>:
  4009e0:	adrp	x0, 41f000 <__FRAME_END__+0x1e028>
  4009e4:	ldr	x0, [x0, #3952]
  4009e8:	cbz	x0, 4009f0 <call_weak_fn+0x10>
  4009ec:	b	4008d0 <__gmon_start__@plt>
  4009f0:	ret
  4009f4:	udf	#0

00000000004009f8 <deregister_tm_clones>:
  4009f8:	adrp	x0, 420000 <completed.8445>
  4009fc:	add	x0, x0, #0x0
  400a00:	adrp	x1, 420000 <completed.8445>
  400a04:	add	x1, x1, #0x0
  400a08:	cmp	x1, x0
  400a0c:	b.eq	400a24 <deregister_tm_clones+0x2c>  // b.none
  400a10:	adrp	x1, 400000 <_init-0x878>
  400a14:	ldr	x1, [x1, #3424]
  400a18:	cbz	x1, 400a24 <deregister_tm_clones+0x2c>
  400a1c:	mov	x16, x1
  400a20:	br	x16
  400a24:	ret

0000000000400a28 <register_tm_clones>:
  400a28:	adrp	x0, 420000 <completed.8445>
  400a2c:	add	x0, x0, #0x0
  400a30:	adrp	x1, 420000 <completed.8445>
  400a34:	add	x1, x1, #0x0
  400a38:	sub	x1, x1, x0
  400a3c:	lsr	x2, x1, #63
  400a40:	add	x1, x2, x1, asr #3
  400a44:	cmp	xzr, x1, asr #1
  400a48:	asr	x1, x1, #1
  400a4c:	b.eq	400a64 <register_tm_clones+0x3c>  // b.none
  400a50:	adrp	x2, 400000 <_init-0x878>
  400a54:	ldr	x2, [x2, #3432]
  400a58:	cbz	x2, 400a64 <register_tm_clones+0x3c>
  400a5c:	mov	x16, x2
  400a60:	br	x16
  400a64:	ret

0000000000400a68 <__do_global_dtors_aux>:
  400a68:	stp	x29, x30, [sp, #-32]!
  400a6c:	mov	x29, sp
  400a70:	str	x19, [sp, #16]
  400a74:	adrp	x19, 420000 <completed.8445>
  400a78:	ldrb	w0, [x19]
  400a7c:	cbnz	w0, 400a8c <__do_global_dtors_aux+0x24>
  400a80:	bl	4009f8 <deregister_tm_clones>
  400a84:	mov	w0, #0x1                   	// #1
  400a88:	strb	w0, [x19]
  400a8c:	ldr	x19, [sp, #16]
  400a90:	ldp	x29, x30, [sp], #32
  400a94:	ret

0000000000400a98 <frame_dummy>:
  400a98:	b	400a28 <register_tm_clones>

0000000000400a9c <main>:
  400a9c:	sub	sp, sp, #0xa0
  400aa0:	stp	x29, x30, [sp, #128]
  400aa4:	stp	x20, x19, [sp, #144]
  400aa8:	add	x29, sp, #0x80
  400aac:	bl	4008e0 <log_setup_service@plt>
  400ab0:	adrp	x1, 400000 <_init-0x878>
  400ab4:	add	x1, x1, #0xd70
  400ab8:	mov	x2, sp
  400abc:	mov	w0, wzr
  400ac0:	bl	4008f0 <__xstat64@plt>
  400ac4:	tbnz	w0, #31, 400b08 <main+0x6c>
  400ac8:	bl	400900 <mac_selinux_init@plt>
  400acc:	tbnz	w0, #31, 400b44 <main+0xa8>
  400ad0:	mov	x8, sp
  400ad4:	add	x19, x8, #0x58
  400ad8:	adrp	x0, 400000 <_init-0x878>
  400adc:	add	x0, x0, #0xdcc
  400ae0:	mov	x1, x19
  400ae4:	bl	400b94 <apply_timestamp>
  400ae8:	mov	w20, w0
  400aec:	adrp	x0, 400000 <_init-0x878>
  400af0:	add	x0, x0, #0xdda
  400af4:	mov	x1, x19
  400af8:	bl	400b94 <apply_timestamp>
  400afc:	orr	w8, w0, w20
  400b00:	lsr	w0, w8, #31
  400b04:	b	400b84 <main+0xe8>
  400b08:	mov	w0, wzr
  400b0c:	bl	400910 <log_get_max_level_realm@plt>
  400b10:	cmp	w0, #0x3
  400b14:	b.lt	400b80 <main+0xe4>  // b.tstop
  400b18:	bl	400920 <__errno_location@plt>
  400b1c:	ldr	w1, [x0]
  400b20:	adrp	x2, 400000 <_init-0x878>
  400b24:	adrp	x4, 400000 <_init-0x878>
  400b28:	adrp	x5, 400000 <_init-0x878>
  400b2c:	add	x2, x2, #0xd78
  400b30:	add	x4, x4, #0xd96
  400b34:	add	x5, x5, #0xd9b
  400b38:	mov	w0, #0x3                   	// #3
  400b3c:	mov	w3, #0x2f                  	// #47
  400b40:	b	400b7c <main+0xe0>
  400b44:	mov	w19, w0
  400b48:	mov	w0, wzr
  400b4c:	bl	400910 <log_get_max_level_realm@plt>
  400b50:	cmp	w0, #0x3
  400b54:	b.lt	400b80 <main+0xe4>  // b.tstop
  400b58:	adrp	x2, 400000 <_init-0x878>
  400b5c:	adrp	x4, 400000 <_init-0x878>
  400b60:	adrp	x5, 400000 <_init-0x878>
  400b64:	add	x2, x2, #0xd78
  400b68:	add	x4, x4, #0xd96
  400b6c:	add	x5, x5, #0xdb3
  400b70:	mov	w0, #0x3                   	// #3
  400b74:	mov	w3, #0x35                  	// #53
  400b78:	mov	w1, w19
  400b7c:	bl	400930 <log_internal_realm@plt>
  400b80:	mov	w0, #0x1                   	// #1
  400b84:	ldp	x20, x19, [sp, #144]
  400b88:	ldp	x29, x30, [sp, #128]
  400b8c:	add	sp, sp, #0xa0
  400b90:	ret

0000000000400b94 <apply_timestamp>:
  400b94:	sub	sp, sp, #0x30
  400b98:	stp	x20, x19, [sp, #32]
  400b9c:	mov	x19, x0
  400ba0:	mov	x0, x1
  400ba4:	stp	x29, x30, [sp, #16]
  400ba8:	add	x29, sp, #0x10
  400bac:	mov	x20, x1
  400bb0:	str	xzr, [sp, #8]
  400bb4:	bl	400940 <timespec_load_nsec@plt>
  400bb8:	adrp	x1, 400000 <_init-0x878>
  400bbc:	mov	x2, x0
  400bc0:	add	x1, x1, #0xde8
  400bc4:	add	x0, sp, #0x8
  400bc8:	bl	400950 <asprintf@plt>
  400bcc:	tbnz	w0, #31, 400c24 <apply_timestamp+0x90>
  400bd0:	ldr	x1, [sp, #8]
  400bd4:	mov	x0, x19
  400bd8:	mov	x2, x20
  400bdc:	bl	400960 <write_string_file_atomic_label_ts@plt>
  400be0:	cmn	w0, #0x1e
  400be4:	b.ne	400c48 <apply_timestamp+0xb4>  // b.any
  400be8:	mov	w0, wzr
  400bec:	bl	400910 <log_get_max_level_realm@plt>
  400bf0:	cmp	w0, #0x7
  400bf4:	mov	w20, wzr
  400bf8:	b.lt	400ca8 <apply_timestamp+0x114>  // b.tstop
  400bfc:	adrp	x2, 400000 <_init-0x878>
  400c00:	adrp	x4, 400000 <_init-0x878>
  400c04:	adrp	x5, 400000 <_init-0x878>
  400c08:	add	x2, x2, #0xd78
  400c0c:	add	x4, x4, #0xea9
  400c10:	add	x5, x5, #0xeb9
  400c14:	mov	w0, #0x7                   	// #7
  400c18:	mov	w3, #0x22                  	// #34
  400c1c:	mov	w1, wzr
  400c20:	b	400c8c <apply_timestamp+0xf8>
  400c24:	adrp	x1, 400000 <_init-0x878>
  400c28:	adrp	x3, 400000 <_init-0x878>
  400c2c:	add	x1, x1, #0xd78
  400c30:	add	x3, x3, #0xea9
  400c34:	mov	w2, #0x1e                  	// #30
  400c38:	mov	w0, wzr
  400c3c:	bl	400970 <log_oom_internal@plt>
  400c40:	mov	w20, w0
  400c44:	b	400ca8 <apply_timestamp+0x114>
  400c48:	mov	w20, w0
  400c4c:	tbnz	w0, #31, 400c58 <apply_timestamp+0xc4>
  400c50:	mov	w20, wzr
  400c54:	b	400ca8 <apply_timestamp+0x114>
  400c58:	mov	w0, wzr
  400c5c:	bl	400910 <log_get_max_level_realm@plt>
  400c60:	cmp	w0, #0x3
  400c64:	b.lt	400c9c <apply_timestamp+0x108>  // b.tstop
  400c68:	adrp	x2, 400000 <_init-0x878>
  400c6c:	adrp	x4, 400000 <_init-0x878>
  400c70:	adrp	x5, 400000 <_init-0x878>
  400c74:	add	x2, x2, #0xd78
  400c78:	add	x4, x4, #0xea9
  400c7c:	add	x5, x5, #0xee7
  400c80:	mov	w0, #0x3                   	// #3
  400c84:	mov	w3, #0x24                  	// #36
  400c88:	mov	w1, w20
  400c8c:	mov	x6, x19
  400c90:	bl	400930 <log_internal_realm@plt>
  400c94:	mov	w20, w0
  400c98:	b	400ca8 <apply_timestamp+0x114>
  400c9c:	mov	w8, wzr
  400ca0:	neg	w9, w20
  400ca4:	sub	w20, w8, w9, uxtb
  400ca8:	ldr	x0, [sp, #8]
  400cac:	bl	400980 <free@plt>
  400cb0:	mov	w0, w20
  400cb4:	ldp	x20, x19, [sp, #32]
  400cb8:	ldp	x29, x30, [sp, #16]
  400cbc:	add	sp, sp, #0x30
  400cc0:	ret
  400cc4:	udf	#0

0000000000400cc8 <__libc_csu_init>:
  400cc8:	stp	x29, x30, [sp, #-64]!
  400ccc:	mov	x29, sp
  400cd0:	stp	x19, x20, [sp, #16]
  400cd4:	adrp	x20, 41f000 <__FRAME_END__+0x1e028>
  400cd8:	add	x20, x20, #0xd48
  400cdc:	stp	x21, x22, [sp, #32]
  400ce0:	adrp	x21, 41f000 <__FRAME_END__+0x1e028>
  400ce4:	add	x21, x21, #0xd40
  400ce8:	sub	x20, x20, x21
  400cec:	mov	w22, w0
  400cf0:	stp	x23, x24, [sp, #48]
  400cf4:	mov	x23, x1
  400cf8:	mov	x24, x2
  400cfc:	bl	400878 <_init>
  400d00:	cmp	xzr, x20, asr #3
  400d04:	b.eq	400d30 <__libc_csu_init+0x68>  // b.none
  400d08:	asr	x20, x20, #3
  400d0c:	mov	x19, #0x0                   	// #0
  400d10:	ldr	x3, [x21, x19, lsl #3]
  400d14:	mov	x2, x24
  400d18:	add	x19, x19, #0x1
  400d1c:	mov	x1, x23
  400d20:	mov	w0, w22
  400d24:	blr	x3
  400d28:	cmp	x20, x19
  400d2c:	b.ne	400d10 <__libc_csu_init+0x48>  // b.any
  400d30:	ldp	x19, x20, [sp, #16]
  400d34:	ldp	x21, x22, [sp, #32]
  400d38:	ldp	x23, x24, [sp, #48]
  400d3c:	ldp	x29, x30, [sp], #64
  400d40:	ret
  400d44:	nop

0000000000400d48 <__libc_csu_fini>:
  400d48:	ret

Disassembly of section .fini:

0000000000400d4c <_fini>:
  400d4c:	stp	x29, x30, [sp, #-16]!
  400d50:	mov	x29, sp
  400d54:	ldp	x29, x30, [sp], #16
  400d58:	ret
