
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM935.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 23000 <gconv@@Base+0x22740>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 24000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xd8>:
     760:	adrp	x0, 23000 <gconv@@Base+0x22740>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 24000 <gconv@@Base+0x23740>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 24000 <gconv@@Base+0x23740>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 23000 <gconv@@Base+0x22740>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 24000 <gconv@@Base+0x23740>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 24000 <gconv@@Base+0x23740>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 23000 <gconv@@Base+0x22740>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 24000 <gconv@@Base+0x23740>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 23000 <gconv@@Base+0x22740>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 24000 <gconv@@Base+0x23740>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop

0000000000000838 <gconv_init@@Base>:
     838:	stp	x29, x30, [sp, #-32]!
     83c:	mov	x29, sp
     840:	stp	x19, x20, [sp, #16]
     844:	mov	x19, x0
     848:	adrp	x20, 2000 <gconv@@Base+0x1740>
     84c:	ldr	x0, [x0, #24]
     850:	add	x20, x20, #0x68
     854:	mov	x1, x20
     858:	bl	730 <strcmp@plt>
     85c:	cbnz	w0, 88c <gconv_init@@Base+0x54>
     860:	mov	x1, #0x1                   	// #1
     864:	mov	x0, #0x400000004           	// #17179869188
     868:	movk	x1, #0x2, lsl #32
     86c:	stp	x1, x0, [x19, #72]
     870:	str	xzr, [x19, #96]
     874:	mov	w1, #0x1                   	// #1
     878:	mov	w0, #0x0                   	// #0
     87c:	str	w1, [x19, #88]
     880:	ldp	x19, x20, [sp, #16]
     884:	ldp	x29, x30, [sp], #32
     888:	ret
     88c:	ldr	x0, [x19, #32]
     890:	mov	x1, x20
     894:	bl	730 <strcmp@plt>
     898:	cbnz	w0, 8b8 <gconv_init@@Base+0x80>
     89c:	mov	x1, #0x1                   	// #1
     8a0:	mov	x0, #0xffffffffffffffff    	// #-1
     8a4:	mov	x2, #0x400000004           	// #17179869188
     8a8:	movk	x1, #0x3, lsl #32
     8ac:	stp	x2, x1, [x19, #72]
     8b0:	str	x0, [x19, #96]
     8b4:	b	874 <gconv_init@@Base+0x3c>
     8b8:	mov	w0, #0x1                   	// #1
     8bc:	b	880 <gconv_init@@Base+0x48>

00000000000008c0 <gconv@@Base>:
     8c0:	stp	x29, x30, [sp, #-256]!
     8c4:	mov	x13, x0
     8c8:	mov	x9, x2
     8cc:	mov	x29, sp
     8d0:	stp	x21, x22, [sp, #32]
     8d4:	mov	x21, x1
     8d8:	adrp	x1, 23000 <gconv@@Base+0x22740>
     8dc:	stp	x19, x20, [sp, #16]
     8e0:	mov	x14, x4
     8e4:	ldr	w19, [x21, #16]
     8e8:	ldr	x1, [x1, #4056]
     8ec:	stp	x25, x26, [sp, #64]
     8f0:	mov	x20, x3
     8f4:	ldr	x0, [x1]
     8f8:	str	x0, [sp, #248]
     8fc:	mov	x0, #0x0                   	// #0
     900:	stp	x27, x28, [sp, #80]
     904:	add	x0, x21, #0x30
     908:	str	x0, [sp, #152]
     90c:	mov	w27, w7
     910:	mov	x26, x5
     914:	add	x28, x13, #0x68
     918:	mov	w7, w19
     91c:	and	w1, w19, #0x1
     920:	mov	x25, #0x0                   	// #0
     924:	tbnz	w19, #0, 944 <gconv@@Base+0x84>
     928:	ldr	x0, [x13, #104]
     92c:	ldr	x25, [x28, #40]
     930:	cbz	x0, 944 <gconv@@Base+0x84>
     934:	adrp	x0, 23000 <gconv@@Base+0x22740>
     938:	ldr	x0, [x0, #4040]
     93c:	ldr	x0, [x0]
     940:	eor	x25, x25, x0
     944:	cbnz	w6, 1498 <gconv@@Base+0xbd8>
     948:	cmp	x14, #0x0
     94c:	add	x0, sp, #0xd0
     950:	ldr	x10, [x21, #32]
     954:	csel	x1, x21, x14, eq  // eq = none
     958:	cmp	x26, #0x0
     95c:	stp	x23, x24, [sp, #48]
     960:	csel	x0, x0, xzr, ne  // ne = any
     964:	ldr	w11, [x10]
     968:	ldr	x24, [x1]
     96c:	str	x0, [sp, #176]
     970:	str	xzr, [sp, #208]
     974:	ldr	x23, [x9]
     978:	ldr	x22, [x21, #8]
     97c:	cbnz	w27, dfc <gconv@@Base+0x53c>
     980:	str	w27, [sp, #144]
     984:	mov	x27, x13
     988:	adrp	x15, 2000 <gconv@@Base+0x1740>
     98c:	add	x0, x15, #0x238
     990:	add	x18, x0, #0x498
     994:	str	x0, [sp, #184]
     998:	add	x0, sp, #0xe8
     99c:	str	x0, [sp, #192]
     9a0:	ldr	x0, [x27, #96]
     9a4:	str	x14, [sp, #128]
     9a8:	stp	x26, x28, [sp, #160]
     9ac:	mov	w26, w11
     9b0:	mov	x28, x24
     9b4:	and	w12, w26, #0xfffffff8
     9b8:	mov	x24, x10
     9bc:	cbz	x0, b3c <gconv@@Base+0x27c>
     9c0:	stp	x23, x28, [sp, #224]
     9c4:	mov	x19, x28
     9c8:	cmp	x20, x23
     9cc:	b.eq	156c <gconv@@Base+0xcac>  // b.none
     9d0:	mov	w5, w12
     9d4:	mov	x0, x23
     9d8:	add	x3, sp, #0xe0
     9dc:	mov	w8, #0x4                   	// #4
     9e0:	add	x1, x0, #0x4
     9e4:	cmp	x20, x1
     9e8:	b.cc	ce4 <gconv@@Base+0x424>  // b.lo, b.ul, b.last
     9ec:	cmp	x22, x19
     9f0:	b.ls	cc8 <gconv@@Base+0x408>  // b.plast
     9f4:	ldr	w10, [x0]
     9f8:	mov	w0, #0xfffe                	// #65534
     9fc:	cmp	w10, w0
     a00:	b.hi	cf0 <gconv@@Base+0x430>  // b.pmore
     a04:	mov	w1, w10
     a08:	cmp	w10, #0xa3
     a0c:	mov	x2, x18
     a10:	mov	w6, #0xa6                  	// #166
     a14:	b.hi	a24 <gconv@@Base+0x164>  // b.pmore
     a18:	b	a44 <gconv@@Base+0x184>
     a1c:	ldrh	w6, [x0, #10]
     a20:	mov	x2, x0
     a24:	cmp	w10, w6
     a28:	add	x0, x2, #0x8
     a2c:	b.hi	a1c <gconv@@Base+0x15c>  // b.pmore
     a30:	ldrh	w0, [x0]
     a34:	cmp	w10, w0
     a38:	b.cc	d20 <gconv@@Base+0x460>  // b.lo, b.ul, b.last
     a3c:	ldr	w1, [x2, #12]
     a40:	add	w1, w10, w1
     a44:	add	x0, x15, #0x238
     a48:	cmp	w10, #0x0
     a4c:	add	x0, x0, #0x718
     a50:	ldrb	w1, [x0, w1, uxtw]
     a54:	ccmp	w1, #0x0, #0x0, ne  // ne = any
     a58:	b.eq	139c <gconv@@Base+0xadc>  // b.none
     a5c:	cmp	w5, #0x40
     a60:	add	x0, x19, #0x1
     a64:	b.eq	c9c <gconv@@Base+0x3dc>  // b.none
     a68:	cmp	x22, x0
     a6c:	b.cc	cc8 <gconv@@Base+0x408>  // b.lo, b.ul, b.last
     a70:	str	x0, [sp, #232]
     a74:	strb	w1, [x19]
     a78:	ldp	x0, x19, [sp, #224]
     a7c:	add	x0, x0, #0x4
     a80:	str	x0, [sp, #224]
     a84:	cmp	x20, x0
     a88:	b.ne	9e0 <gconv@@Base+0x120>  // b.any
     a8c:	nop
     a90:	str	x0, [x9]
     a94:	ldr	x0, [sp, #128]
     a98:	str	w5, [x24]
     a9c:	cbnz	x0, c60 <gconv@@Base+0x3a0>
     aa0:	ldp	w1, w0, [x21, #16]
     aa4:	add	w0, w0, #0x1
     aa8:	str	w0, [x21, #20]
     aac:	tbnz	w1, #0, 10bc <gconv@@Base+0x7fc>
     ab0:	str	w12, [sp, #136]
     ab4:	cmp	x28, x19
     ab8:	b.cs	10ec <gconv@@Base+0x82c>  // b.hs, b.nlast
     abc:	ldr	x1, [x21]
     ac0:	mov	x0, x25
     ac4:	stp	x9, x18, [sp, #104]
     ac8:	str	w8, [sp, #120]
     acc:	str	x1, [sp, #216]
     ad0:	bl	740 <_dl_mcount_wrapper_check@plt>
     ad4:	ldp	x1, x5, [sp, #152]
     ad8:	mov	x3, x19
     adc:	ldr	w7, [sp, #144]
     ae0:	add	x2, sp, #0xd8
     ae4:	ldr	x0, [sp, #168]
     ae8:	mov	w6, #0x0                   	// #0
     aec:	mov	x4, #0x0                   	// #0
     af0:	blr	x25
     af4:	mov	w7, w0
     af8:	ldr	w8, [sp, #120]
     afc:	cmp	w0, #0x4
     b00:	adrp	x15, 2000 <gconv@@Base+0x1740>
     b04:	ldp	x9, x18, [sp, #104]
     b08:	b.eq	cd4 <gconv@@Base+0x414>  // b.none
     b0c:	ldr	x8, [sp, #216]
     b10:	ldr	w12, [sp, #136]
     b14:	cmp	x8, x19
     b18:	b.ne	f84 <gconv@@Base+0x6c4>  // b.any
     b1c:	cbnz	w7, 1560 <gconv@@Base+0xca0>
     b20:	ldr	x0, [x27, #96]
     b24:	ldr	w26, [x24]
     b28:	ldr	w7, [x21, #16]
     b2c:	and	w12, w26, #0xfffffff8
     b30:	ldr	x23, [x9]
     b34:	ldr	x28, [x21]
     b38:	cbnz	x0, 9c0 <gconv@@Base+0x100>
     b3c:	cmp	x20, x23
     b40:	b.eq	187c <gconv@@Base+0xfbc>  // b.none
     b44:	add	x4, x28, #0x4
     b48:	cmp	x22, x4
     b4c:	b.cc	13e0 <gconv@@Base+0xb20>  // b.lo, b.ul, b.last
     b50:	ldr	x0, [sp, #184]
     b54:	and	w30, w7, #0x2
     b58:	mov	w5, w12
     b5c:	adrp	x7, e000 <gconv@@Base+0xd740>
     b60:	mov	x2, x23
     b64:	add	x7, x7, #0x508
     b68:	mov	x19, x28
     b6c:	add	x6, x0, #0x518
     b70:	mov	w8, #0x4                   	// #4
     b74:	mov	w16, #0x4040                	// #16448
     b78:	mov	w17, #0xffff                	// #65535
     b7c:	b	bb4 <gconv@@Base+0x2f4>
     b80:	mov	w1, w0
     b84:	ldrh	w1, [x6, x1, lsl #1]
     b88:	cmp	w1, #0x0
     b8c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     b90:	b.ne	1378 <gconv@@Base+0xab8>  // b.any
     b94:	add	x2, x2, #0x1
     b98:	str	w1, [x19]
     b9c:	mov	x19, x4
     ba0:	cmp	x20, x2
     ba4:	b.eq	c4c <gconv@@Base+0x38c>  // b.none
     ba8:	add	x4, x19, #0x4
     bac:	cmp	x22, x4
     bb0:	b.cc	de0 <gconv@@Base+0x520>  // b.lo, b.ul, b.last
     bb4:	ldrb	w0, [x2]
     bb8:	cmp	w0, #0xe
     bbc:	b.eq	dd4 <gconv@@Base+0x514>  // b.none
     bc0:	cmp	w0, #0xf
     bc4:	b.eq	df0 <gconv@@Base+0x530>  // b.none
     bc8:	cbz	w5, b80 <gconv@@Base+0x2c0>
     bcc:	cmp	w5, #0x40
     bd0:	b.ne	1e74 <gconv@@Base+0x15b4>  // b.any
     bd4:	add	x1, x2, #0x1
     bd8:	cmp	x20, x1
     bdc:	b.ls	13c8 <gconv@@Base+0xb08>  // b.plast
     be0:	ldrb	w1, [x2, #1]
     be4:	add	w1, w1, w0, lsl #8
     be8:	add	x0, x15, #0x238
     bec:	cmp	w1, w16
     bf0:	b.ls	13d8 <gconv@@Base+0xb18>  // b.plast
     bf4:	mov	w3, #0x4158                	// #16728
     bf8:	b	c00 <gconv@@Base+0x340>
     bfc:	ldrh	w3, [x0, #10]
     c00:	add	x0, x0, #0x8
     c04:	cmp	w1, w3
     c08:	b.hi	bfc <gconv@@Base+0x33c>  // b.pmore
     c0c:	ldrh	w3, [x0]
     c10:	cmp	w3, w17
     c14:	b.eq	10f4 <gconv@@Base+0x834>  // b.none
     c18:	cmp	w1, w3
     c1c:	b.cc	10f4 <gconv@@Base+0x834>  // b.lo, b.ul, b.last
     c20:	ldr	w0, [x0, #4]
     c24:	add	w0, w1, w0
     c28:	ldrh	w0, [x7, x0, lsl #1]
     c2c:	cmp	w0, #0x0
     c30:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     c34:	b.ne	10f4 <gconv@@Base+0x834>  // b.any
     c38:	str	w0, [x19]
     c3c:	add	x2, x2, #0x2
     c40:	mov	x19, x4
     c44:	cmp	x20, x2
     c48:	b.ne	ba8 <gconv@@Base+0x2e8>  // b.any
     c4c:	str	x2, [x9]
     c50:	str	w5, [x24]
     c54:	nop
     c58:	ldr	x0, [sp, #128]
     c5c:	cbz	x0, aa0 <gconv@@Base+0x1e0>
     c60:	ldp	x23, x24, [sp, #48]
     c64:	str	x19, [x0]
     c68:	adrp	x0, 23000 <gconv@@Base+0x22740>
     c6c:	ldr	x0, [x0, #4056]
     c70:	ldr	x1, [sp, #248]
     c74:	ldr	x0, [x0]
     c78:	eor	x0, x1, x0
     c7c:	cbnz	x0, 1eb4 <gconv@@Base+0x15f4>
     c80:	mov	w0, w8
     c84:	ldp	x19, x20, [sp, #16]
     c88:	ldp	x21, x22, [sp, #32]
     c8c:	ldp	x25, x26, [sp, #64]
     c90:	ldp	x27, x28, [sp, #80]
     c94:	ldp	x29, x30, [sp], #256
     c98:	ret
     c9c:	cmp	x22, x0
     ca0:	b.cc	cc8 <gconv@@Base+0x408>  // b.lo, b.ul, b.last
     ca4:	str	x0, [sp, #232]
     ca8:	mov	w0, #0xf                   	// #15
     cac:	strb	w0, [x19]
     cb0:	mov	w5, #0x0                   	// #0
     cb4:	ldr	x19, [sp, #232]
     cb8:	add	x0, x19, #0x1
     cbc:	cmp	x22, x0
     cc0:	b.cs	a70 <gconv@@Base+0x1b0>  // b.hs, b.nlast
     cc4:	nop
     cc8:	mov	w8, #0x5                   	// #5
     ccc:	ldr	x0, [sp, #224]
     cd0:	b	a90 <gconv@@Base+0x1d0>
     cd4:	mov	w7, w8
     cd8:	cmp	w8, #0x5
     cdc:	b.ne	b1c <gconv@@Base+0x25c>  // b.any
     ce0:	b	b20 <gconv@@Base+0x260>
     ce4:	mov	w8, #0x7                   	// #7
     ce8:	ldr	x0, [sp, #224]
     cec:	b	a90 <gconv@@Base+0x1d0>
     cf0:	mov	w0, #0x1c00                	// #7168
     cf4:	cmp	w0, w10, lsr #7
     cf8:	b.eq	13bc <gconv@@Base+0xafc>  // b.none
     cfc:	ldr	x0, [sp, #176]
     d00:	cbz	x0, 1adc <gconv@@Base+0x121c>
     d04:	str	w5, [x24]
     d08:	ldr	w0, [x21, #16]
     d0c:	tbnz	w0, #3, 1110 <gconv@@Base+0x850>
     d10:	ldr	x0, [sp, #224]
     d14:	tbnz	w7, #1, 118c <gconv@@Base+0x8cc>
     d18:	mov	w8, #0x6                   	// #6
     d1c:	b	a90 <gconv@@Base+0x1d0>
     d20:	adrp	x1, 7000 <gconv@@Base+0x6740>
     d24:	cmp	w10, #0xa4
     d28:	add	x1, x1, #0x360
     d2c:	mov	w2, #0xa8                  	// #168
     d30:	b.ne	d40 <gconv@@Base+0x480>  // b.any
     d34:	b	1558 <gconv@@Base+0xc98>
     d38:	ldrh	w2, [x0, #10]
     d3c:	mov	x1, x0
     d40:	cmp	w10, w2
     d44:	add	x0, x1, #0x8
     d48:	b.hi	d38 <gconv@@Base+0x478>  // b.pmore
     d4c:	ldrh	w1, [x1, #8]
     d50:	cmp	w10, w1
     d54:	b.cc	13fc <gconv@@Base+0xb3c>  // b.lo, b.ul, b.last
     d58:	ldr	w0, [x0, #4]
     d5c:	adrp	x1, 2000 <gconv@@Base+0x1740>
     d60:	add	x1, x1, #0xa40
     d64:	cmp	w10, #0x0
     d68:	add	w0, w10, w0
     d6c:	lsl	x0, x0, #1
     d70:	add	x2, x0, x1
     d74:	ldrb	w0, [x0, x1]
     d78:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     d7c:	b.eq	13fc <gconv@@Base+0xb3c>  // b.none
     d80:	cbnz	w5, da4 <gconv@@Base+0x4e4>
     d84:	add	x1, x19, #0x1
     d88:	cmp	x22, x1
     d8c:	b.cc	cc8 <gconv@@Base+0x408>  // b.lo, b.ul, b.last
     d90:	str	x1, [sp, #232]
     d94:	mov	w1, #0xe                   	// #14
     d98:	strb	w1, [x19]
     d9c:	mov	w5, #0x40                  	// #64
     da0:	ldr	x19, [sp, #232]
     da4:	add	x1, x19, #0x2
     da8:	cmp	x22, x1
     dac:	b.cc	cc8 <gconv@@Base+0x408>  // b.lo, b.ul, b.last
     db0:	add	x1, x19, #0x1
     db4:	str	x1, [sp, #232]
     db8:	strb	w0, [x19]
     dbc:	ldr	x0, [sp, #232]
     dc0:	ldrb	w1, [x2, #1]
     dc4:	add	x2, x0, #0x1
     dc8:	str	x2, [sp, #232]
     dcc:	strb	w1, [x0]
     dd0:	b	a78 <gconv@@Base+0x1b8>
     dd4:	add	x2, x2, #0x1
     dd8:	mov	w5, #0x40                  	// #64
     ddc:	b	ba0 <gconv@@Base+0x2e0>
     de0:	str	x2, [x9]
     de4:	mov	w8, #0x5                   	// #5
     de8:	str	w5, [x24]
     dec:	b	c58 <gconv@@Base+0x398>
     df0:	add	x2, x2, #0x1
     df4:	mov	w5, #0x0                   	// #0
     df8:	b	ba0 <gconv@@Base+0x2e0>
     dfc:	ands	w0, w11, #0x7
     e00:	b.eq	980 <gconv@@Base+0xc0>  // b.none
     e04:	cbnz	x14, 1e94 <gconv@@Base+0x15d4>
     e08:	ldr	x1, [x13, #96]
     e0c:	and	w5, w11, #0xfffffff8
     e10:	mov	w3, w0
     e14:	cbz	x1, 11ac <gconv@@Base+0x8ec>
     e18:	stp	x23, x24, [sp, #224]
     e1c:	cmp	w0, #0x4
     e20:	b.hi	1e54 <gconv@@Base+0x1594>  // b.pmore
     e24:	mov	w12, w0
     e28:	cbz	w0, 179c <gconv@@Base+0xedc>
     e2c:	add	x7, sp, #0xf0
     e30:	add	x6, x10, #0x3
     e34:	mov	x0, #0x1                   	// #1
     e38:	add	x1, x7, x0
     e3c:	ldrb	w4, [x6, x0]
     e40:	cmp	x0, x12
     e44:	add	x0, x0, #0x1
     e48:	sturb	w4, [x1, #-1]
     e4c:	b.ne	e38 <gconv@@Base+0x578>  // b.any
     e50:	mov	x0, #0x4                   	// #4
     e54:	sub	x0, x0, x12
     e58:	add	x0, x23, x0
     e5c:	cmp	x20, x0
     e60:	b.cc	192c <gconv@@Base+0x106c>  // b.lo, b.ul, b.last
     e64:	add	x0, x23, #0x1
     e68:	add	x7, sp, #0xf0
     e6c:	cmp	x24, x22
     e70:	b.cs	1700 <gconv@@Base+0xe40>  // b.hs, b.nlast
     e74:	add	x12, x12, #0x1
     e78:	str	x0, [sp, #224]
     e7c:	add	x4, x7, x12
     e80:	cmp	x12, #0x3
     e84:	ldurb	w1, [x0, #-1]
     e88:	ccmp	x20, x0, #0x0, ls  // ls = plast
     e8c:	add	x0, x0, #0x1
     e90:	sturb	w1, [x4, #-1]
     e94:	b.hi	e74 <gconv@@Base+0x5b4>  // b.pmore
     e98:	ldr	w6, [sp, #240]
     e9c:	mov	w0, #0xfffe                	// #65534
     ea0:	str	x7, [sp, #224]
     ea4:	cmp	w6, w0
     ea8:	b.hi	1a78 <gconv@@Base+0x11b8>  // b.pmore
     eac:	mov	w2, w6
     eb0:	cmp	w6, #0xa3
     eb4:	adrp	x1, 2000 <gconv@@Base+0x1740>
     eb8:	b.ls	ef8 <gconv@@Base+0x638>  // b.plast
     ebc:	adrp	x1, 2000 <gconv@@Base+0x1740>
     ec0:	add	x2, x1, #0x238
     ec4:	add	x2, x2, #0x498
     ec8:	mov	w3, #0xa6                  	// #166
     ecc:	b	ed8 <gconv@@Base+0x618>
     ed0:	ldrh	w3, [x0, #10]
     ed4:	mov	x2, x0
     ed8:	cmp	w6, w3
     edc:	add	x0, x2, #0x8
     ee0:	b.hi	ed0 <gconv@@Base+0x610>  // b.pmore
     ee4:	ldrh	w0, [x0]
     ee8:	cmp	w6, w0
     eec:	b.cc	197c <gconv@@Base+0x10bc>  // b.lo, b.ul, b.last
     ef0:	ldr	w2, [x2, #12]
     ef4:	add	w2, w6, w2
     ef8:	add	x0, x1, #0x238
     efc:	add	x0, x0, #0x718
     f00:	ldrb	w2, [x0, w2, uxtw]
     f04:	cmp	w2, #0x0
     f08:	ccmp	w6, #0x0, #0x4, eq  // eq = none
     f0c:	b.ne	1be8 <gconv@@Base+0x1328>  // b.any
     f10:	cmp	w5, #0x40
     f14:	add	x0, x24, #0x1
     f18:	b.eq	16d0 <gconv@@Base+0xe10>  // b.none
     f1c:	cmp	x22, x0
     f20:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
     f24:	mov	x1, x24
     f28:	str	x0, [sp, #232]
     f2c:	strb	w2, [x1]
     f30:	ldr	x0, [sp, #224]
     f34:	add	x0, x0, #0x4
     f38:	str	x0, [sp, #224]
     f3c:	cmp	x0, x7
     f40:	b.eq	196c <gconv@@Base+0x10ac>  // b.none
     f44:	ldr	w11, [x10]
     f48:	sub	x7, x0, x7
     f4c:	and	w3, w11, #0x7
     f50:	mov	w0, w3
     f54:	cmp	x0, x7
     f58:	b.ge	2010 <gconv@@Base+0x1750>  // b.tcont
     f5c:	ldr	x23, [x9]
     f60:	sub	x0, x7, x0
     f64:	and	w1, w11, #0xfffffff8
     f68:	ldr	w7, [x21, #16]
     f6c:	add	x23, x23, x0
     f70:	str	x23, [x9]
     f74:	mov	w11, w1
     f78:	ldr	x24, [sp, #232]
     f7c:	str	w1, [x10]
     f80:	b	980 <gconv@@Base+0xc0>
     f84:	str	x23, [x9]
     f88:	ldr	x0, [x27, #96]
     f8c:	str	w26, [x24]
     f90:	cbz	x0, 1270 <gconv@@Base+0x9b0>
     f94:	stp	x23, x28, [sp, #224]
     f98:	cmp	x20, x23
     f9c:	ldr	w19, [x21, #16]
     fa0:	b.eq	1bd4 <gconv@@Base+0x1314>  // b.none
     fa4:	add	x26, sp, #0xe0
     fa8:	mov	x30, x28
     fac:	mov	x3, x26
     fb0:	str	x25, [sp, #104]
     fb4:	ldr	x26, [sp, #176]
     fb8:	mov	x25, x21
     fbc:	mov	x21, x8
     fc0:	str	x28, [sp, #120]
     fc4:	mov	x28, x9
     fc8:	str	x22, [sp, #136]
     fcc:	mov	x22, x27
     fd0:	mov	x27, x18
     fd4:	mov	w5, #0x4                   	// #4
     fd8:	str	w7, [sp, #112]
     fdc:	add	x0, x23, #0x4
     fe0:	cmp	x20, x0
     fe4:	b.cc	170c <gconv@@Base+0xe4c>  // b.lo, b.ul, b.last
     fe8:	cmp	x21, x30
     fec:	b.ls	1508 <gconv@@Base+0xc48>  // b.plast
     ff0:	ldr	w10, [x23]
     ff4:	mov	w2, #0xfffe                	// #65534
     ff8:	cmp	w10, w2
     ffc:	b.hi	1744 <gconv@@Base+0xe84>  // b.pmore
    1000:	mov	w0, w10
    1004:	cmp	w10, #0xa3
    1008:	mov	x2, x27
    100c:	mov	w7, #0xa6                  	// #166
    1010:	b.hi	1020 <gconv@@Base+0x760>  // b.pmore
    1014:	b	1040 <gconv@@Base+0x780>
    1018:	ldrh	w7, [x0, #10]
    101c:	mov	x2, x0
    1020:	cmp	w10, w7
    1024:	add	x0, x2, #0x8
    1028:	b.hi	1018 <gconv@@Base+0x758>  // b.pmore
    102c:	ldrh	w0, [x0]
    1030:	cmp	w10, w0
    1034:	b.cc	17a8 <gconv@@Base+0xee8>  // b.lo, b.ul, b.last
    1038:	ldr	w0, [x2, #12]
    103c:	add	w0, w10, w0
    1040:	add	x2, x15, #0x238
    1044:	add	x2, x2, #0x718
    1048:	ldrb	w2, [x2, w0, uxtw]
    104c:	cmp	w2, #0x0
    1050:	ccmp	w10, #0x0, #0x4, eq  // eq = none
    1054:	b.ne	1cbc <gconv@@Base+0x13fc>  // b.any
    1058:	cmp	w12, #0x40
    105c:	add	x0, x30, #0x1
    1060:	b.eq	1474 <gconv@@Base+0xbb4>  // b.none
    1064:	cmp	x21, x0
    1068:	b.cc	1508 <gconv@@Base+0xc48>  // b.lo, b.ul, b.last
    106c:	str	x0, [sp, #232]
    1070:	strb	w2, [x30]
    1074:	ldp	x23, x30, [sp, #224]
    1078:	add	x23, x23, #0x4
    107c:	str	x23, [sp, #224]
    1080:	cmp	x20, x23
    1084:	b.ne	fdc <gconv@@Base+0x71c>  // b.any
    1088:	mov	x9, x28
    108c:	mov	x21, x25
    1090:	mov	x18, x27
    1094:	ldr	w7, [sp, #112]
    1098:	mov	x27, x22
    109c:	sxtw	x1, w5
    10a0:	str	x20, [x9]
    10a4:	ldr	x25, [sp, #104]
    10a8:	ldr	x28, [sp, #120]
    10ac:	ldr	x22, [sp, #136]
    10b0:	ldr	x8, [sp, #216]
    10b4:	str	w12, [x24]
    10b8:	b	1588 <gconv@@Base+0xcc8>
    10bc:	ldr	x26, [sp, #160]
    10c0:	ldr	x1, [sp, #208]
    10c4:	ldr	x0, [x26]
    10c8:	str	x19, [x21]
    10cc:	ldr	w27, [sp, #144]
    10d0:	add	x0, x0, x1
    10d4:	str	x0, [x26]
    10d8:	cmp	w27, #0x0
    10dc:	ccmp	w8, #0x7, #0x0, ne  // ne = any
    10e0:	b.eq	1628 <gconv@@Base+0xd68>  // b.none
    10e4:	ldp	x23, x24, [sp, #48]
    10e8:	b	c68 <gconv@@Base+0x3a8>
    10ec:	mov	w7, w8
    10f0:	b	b1c <gconv@@Base+0x25c>
    10f4:	ldr	x1, [sp, #176]
    10f8:	cbz	x1, 1100 <gconv@@Base+0x840>
    10fc:	cbnz	w30, 1174 <gconv@@Base+0x8b4>
    1100:	str	x2, [x9]
    1104:	mov	w8, #0x6                   	// #6
    1108:	str	w5, [x24]
    110c:	b	c58 <gconv@@Base+0x398>
    1110:	ldr	x2, [x9]
    1114:	mov	x4, x20
    1118:	ldr	x6, [sp, #176]
    111c:	mov	x1, x21
    1120:	ldr	x5, [sp, #192]
    1124:	mov	x0, x27
    1128:	stp	x3, x9, [sp, #104]
    112c:	str	w7, [sp, #120]
    1130:	str	w12, [sp, #136]
    1134:	str	x18, [sp, #200]
    1138:	bl	700 <__gconv_transliterate@plt>
    113c:	ldr	w5, [x24]
    1140:	mov	w8, w0
    1144:	ldr	w7, [sp, #120]
    1148:	cmp	w0, #0x6
    114c:	ldr	w12, [sp, #136]
    1150:	and	w5, w5, #0xfffffff8
    1154:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1158:	ldp	x3, x9, [sp, #104]
    115c:	ldr	x18, [sp, #200]
    1160:	b.eq	1500 <gconv@@Base+0xc40>  // b.none
    1164:	cmp	w0, #0x5
    1168:	ldp	x0, x19, [sp, #224]
    116c:	b.ne	a84 <gconv@@Base+0x1c4>  // b.any
    1170:	b	a90 <gconv@@Base+0x1d0>
    1174:	ldr	x0, [x1]
    1178:	add	x2, x2, #0x2
    117c:	mov	w8, #0x6                   	// #6
    1180:	add	x0, x0, #0x1
    1184:	str	x0, [x1]
    1188:	b	ba0 <gconv@@Base+0x2e0>
    118c:	ldr	x2, [sp, #176]
    1190:	add	x0, x0, #0x4
    1194:	mov	w8, #0x6                   	// #6
    1198:	str	x0, [sp, #224]
    119c:	ldr	x1, [x2]
    11a0:	add	x1, x1, #0x1
    11a4:	str	x1, [x2]
    11a8:	b	a84 <gconv@@Base+0x1c4>
    11ac:	cmp	w0, #0x4
    11b0:	b.hi	2000 <gconv@@Base+0x1740>  // b.pmore
    11b4:	add	x4, x24, #0x4
    11b8:	cbz	w0, 15dc <gconv@@Base+0xd1c>
    11bc:	ldrb	w1, [x10, #4]
    11c0:	tst	w11, #0x6
    11c4:	strb	w1, [sp, #240]
    11c8:	mov	x1, #0x1                   	// #1
    11cc:	b.eq	11dc <gconv@@Base+0x91c>  // b.none
    11d0:	ldrb	w2, [x10, #5]
    11d4:	mov	x1, #0x2                   	// #2
    11d8:	strb	w2, [sp, #241]
    11dc:	cmp	x22, x4
    11e0:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
    11e4:	add	x7, sp, #0xf0
    11e8:	ldrb	w2, [x23]
    11ec:	add	x8, x1, #0x1
    11f0:	strb	w2, [x7, x1]
    11f4:	ldrb	w6, [sp, #240]
    11f8:	sub	w1, w6, #0xe
    11fc:	and	w1, w1, #0xff
    1200:	cmp	w1, #0x1
    1204:	b.ls	1e34 <gconv@@Base+0x1574>  // b.plast
    1208:	cbnz	w5, 1890 <gconv@@Base+0xfd0>
    120c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1210:	add	x0, x1, #0x238
    1214:	add	x0, x0, #0x518
    1218:	mov	w1, w6
    121c:	cmp	w6, #0x0
    1220:	ldrh	w0, [x0, x1, lsl #1]
    1224:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1228:	b.eq	1fb4 <gconv@@Base+0x16f4>  // b.none
    122c:	str	w0, [x24]
    1230:	mov	x24, x4
    1234:	mov	x1, #0x1                   	// #1
    1238:	ldr	w11, [x10]
    123c:	and	w3, w11, #0x7
    1240:	mov	w2, w3
    1244:	cmp	x2, x1
    1248:	b.ge	1e34 <gconv@@Base+0x1574>  // b.tcont
    124c:	ldr	w19, [x21, #16]
    1250:	and	w5, w11, #0xfffffff8
    1254:	sub	x1, x1, x2
    1258:	mov	w11, w5
    125c:	add	x23, x23, x1
    1260:	str	x23, [x9]
    1264:	mov	w7, w19
    1268:	str	w5, [x10]
    126c:	b	980 <gconv@@Base+0xc0>
    1270:	ldr	w5, [x21, #16]
    1274:	cmp	x20, x23
    1278:	b.eq	1bd4 <gconv@@Base+0x1314>  // b.none
    127c:	add	x4, x28, #0x4
    1280:	mov	x30, x28
    1284:	cmp	x8, x4
    1288:	mov	x1, #0x4                   	// #4
    128c:	b.cc	1b3c <gconv@@Base+0x127c>  // b.lo, b.ul, b.last
    1290:	ldp	x10, x0, [sp, #176]
    1294:	adrp	x11, e000 <gconv@@Base+0xd740>
    1298:	and	w5, w5, #0x2
    129c:	add	x11, x11, #0x508
    12a0:	mov	w16, #0x4040                	// #16448
    12a4:	mov	w17, #0xffff                	// #65535
    12a8:	add	x6, x0, #0x518
    12ac:	b	12e4 <gconv@@Base+0xa24>
    12b0:	mov	w2, w0
    12b4:	cmp	w0, #0x0
    12b8:	ldrh	w0, [x6, x2, lsl #1]
    12bc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    12c0:	b.eq	1abc <gconv@@Base+0x11fc>  // b.none
    12c4:	add	x23, x23, #0x1
    12c8:	str	w0, [x30]
    12cc:	mov	x30, x4
    12d0:	cmp	x20, x23
    12d4:	b.eq	1580 <gconv@@Base+0xcc0>  // b.none
    12d8:	add	x4, x30, #0x4
    12dc:	cmp	x8, x4
    12e0:	b.cc	1868 <gconv@@Base+0xfa8>  // b.lo, b.ul, b.last
    12e4:	ldrb	w0, [x23]
    12e8:	cmp	w0, #0xe
    12ec:	b.eq	185c <gconv@@Base+0xf9c>  // b.none
    12f0:	cmp	w0, #0xf
    12f4:	b.eq	1870 <gconv@@Base+0xfb0>  // b.none
    12f8:	cbz	w12, 12b0 <gconv@@Base+0x9f0>
    12fc:	cmp	w12, #0x40
    1300:	b.ne	1e74 <gconv@@Base+0x15b4>  // b.any
    1304:	add	x2, x23, #0x1
    1308:	cmp	x20, x2
    130c:	b.ls	1b50 <gconv@@Base+0x1290>  // b.plast
    1310:	ldrb	w2, [x23, #1]
    1314:	add	w2, w2, w0, lsl #8
    1318:	add	x0, x15, #0x238
    131c:	cmp	w2, w16
    1320:	b.ls	1b58 <gconv@@Base+0x1298>  // b.plast
    1324:	mov	w3, #0x4158                	// #16728
    1328:	b	1330 <gconv@@Base+0xa70>
    132c:	ldrh	w3, [x0, #10]
    1330:	add	x0, x0, #0x8
    1334:	cmp	w2, w3
    1338:	b.hi	132c <gconv@@Base+0xa6c>  // b.pmore
    133c:	ldrh	w3, [x0]
    1340:	cmp	w3, w17
    1344:	b.eq	167c <gconv@@Base+0xdbc>  // b.none
    1348:	cmp	w2, w3
    134c:	b.cc	167c <gconv@@Base+0xdbc>  // b.lo, b.ul, b.last
    1350:	ldr	w0, [x0, #4]
    1354:	add	w0, w2, w0
    1358:	ldrh	w0, [x11, x0, lsl #1]
    135c:	cmp	w0, #0x0
    1360:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    1364:	b.ne	167c <gconv@@Base+0xdbc>  // b.any
    1368:	add	x23, x23, #0x2
    136c:	str	w0, [x30]
    1370:	mov	x30, x4
    1374:	b	12d0 <gconv@@Base+0xa10>
    1378:	ldr	x1, [sp, #176]
    137c:	cbz	x1, 1100 <gconv@@Base+0x840>
    1380:	cbz	w30, 1100 <gconv@@Base+0x840>
    1384:	ldr	x0, [x1]
    1388:	add	x2, x2, #0x1
    138c:	mov	w8, #0x6                   	// #6
    1390:	add	x0, x0, #0x1
    1394:	str	x0, [x1]
    1398:	b	ba0 <gconv@@Base+0x2e0>
    139c:	adrp	x1, 7000 <gconv@@Base+0x6740>
    13a0:	cmp	w10, #0xa4
    13a4:	add	x1, x1, #0x360
    13a8:	mov	w2, #0xa8                  	// #168
    13ac:	b.hi	d40 <gconv@@Base+0x480>  // b.pmore
    13b0:	mov	x0, x1
    13b4:	mov	w1, #0xa4                  	// #164
    13b8:	b	d50 <gconv@@Base+0x490>
    13bc:	mov	x0, x1
    13c0:	str	x1, [sp, #224]
    13c4:	b	a84 <gconv@@Base+0x1c4>
    13c8:	str	x2, [x9]
    13cc:	mov	w8, #0x7                   	// #7
    13d0:	str	w5, [x24]
    13d4:	b	c58 <gconv@@Base+0x398>
    13d8:	mov	w3, #0x4040                	// #16448
    13dc:	b	c18 <gconv@@Base+0x358>
    13e0:	mov	x2, x23
    13e4:	str	x2, [x9]
    13e8:	mov	w5, w12
    13ec:	mov	x19, x28
    13f0:	mov	w8, #0x5                   	// #5
    13f4:	str	w5, [x24]
    13f8:	b	c58 <gconv@@Base+0x398>
    13fc:	ldr	x0, [sp, #176]
    1400:	cbz	x0, 1adc <gconv@@Base+0x121c>
    1404:	str	w5, [x24]
    1408:	ldr	w0, [x21, #16]
    140c:	tbz	w0, #3, d10 <gconv@@Base+0x450>
    1410:	ldr	x2, [x9]
    1414:	mov	x4, x20
    1418:	ldr	x6, [sp, #176]
    141c:	mov	x1, x21
    1420:	ldr	x5, [sp, #192]
    1424:	mov	x0, x27
    1428:	stp	x3, x9, [sp, #104]
    142c:	str	w7, [sp, #120]
    1430:	str	w12, [sp, #136]
    1434:	str	x18, [sp, #200]
    1438:	bl	700 <__gconv_transliterate@plt>
    143c:	ldr	w5, [x24]
    1440:	mov	w8, w0
    1444:	ldr	w7, [sp, #120]
    1448:	cmp	w0, #0x6
    144c:	ldr	w12, [sp, #136]
    1450:	and	w5, w5, #0xfffffff8
    1454:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1458:	ldp	x3, x9, [sp, #104]
    145c:	ldr	x18, [sp, #200]
    1460:	b.eq	1500 <gconv@@Base+0xc40>  // b.none
    1464:	cmp	w0, #0x5
    1468:	ldp	x0, x19, [sp, #224]
    146c:	b.ne	a84 <gconv@@Base+0x1c4>  // b.any
    1470:	b	a90 <gconv@@Base+0x1d0>
    1474:	cmp	x21, x0
    1478:	b.cc	1508 <gconv@@Base+0xc48>  // b.lo, b.ul, b.last
    147c:	str	x0, [sp, #232]
    1480:	mov	w0, #0xf                   	// #15
    1484:	strb	w0, [x30]
    1488:	mov	w12, #0x0                   	// #0
    148c:	ldr	x30, [sp, #232]
    1490:	add	x0, x30, #0x1
    1494:	b	1064 <gconv@@Base+0x7a4>
    1498:	cbnz	x14, 1e10 <gconv@@Base+0x1550>
    149c:	cmp	w6, #0x1
    14a0:	ldr	x22, [x21, #32]
    14a4:	b.ne	169c <gconv@@Base+0xddc>  // b.any
    14a8:	ldr	w19, [x22]
    14ac:	ldr	x2, [x21]
    14b0:	tst	w19, #0xfffffff8
    14b4:	b.eq	15a4 <gconv@@Base+0xce4>  // b.none
    14b8:	ldr	x0, [x13, #96]
    14bc:	cbz	x0, 159c <gconv@@Base+0xcdc>
    14c0:	ldr	x0, [x21, #8]
    14c4:	cmp	x2, x0
    14c8:	b.cs	1e08 <gconv@@Base+0x1548>  // b.hs, b.nlast
    14cc:	mov	x20, x2
    14d0:	mov	w0, #0xf                   	// #15
    14d4:	strb	w0, [x20], #1
    14d8:	ldr	x1, [x21, #32]
    14dc:	ldr	w3, [x21, #16]
    14e0:	ldr	w0, [x1]
    14e4:	and	w0, w0, #0x7
    14e8:	str	w0, [x1]
    14ec:	tbz	w3, #0, 1b60 <gconv@@Base+0x12a0>
    14f0:	mov	x2, x20
    14f4:	mov	w8, #0x0                   	// #0
    14f8:	str	x2, [x21]
    14fc:	b	c68 <gconv@@Base+0x3a8>
    1500:	ldr	x19, [sp, #232]
    1504:	b	d10 <gconv@@Base+0x450>
    1508:	mov	x9, x28
    150c:	mov	x21, x25
    1510:	ldr	x0, [sp, #224]
    1514:	mov	x18, x27
    1518:	str	x0, [x9]
    151c:	mov	x27, x22
    1520:	ldr	x0, [sp, #216]
    1524:	str	w12, [x24]
    1528:	ldr	w7, [sp, #112]
    152c:	cmp	x0, x30
    1530:	ldr	x25, [sp, #104]
    1534:	ldr	x28, [sp, #120]
    1538:	ldr	x22, [sp, #136]
    153c:	b.ne	177c <gconv@@Base+0xebc>  // b.any
    1540:	cmp	x28, x30
    1544:	b.ne	b1c <gconv@@Base+0x25c>  // b.any
    1548:	ldr	w0, [x21, #20]
    154c:	sub	w0, w0, #0x1
    1550:	str	w0, [x21, #20]
    1554:	b	b1c <gconv@@Base+0x25c>
    1558:	mov	x0, x1
    155c:	b	d58 <gconv@@Base+0x498>
    1560:	ldr	w27, [sp, #144]
    1564:	mov	w8, w7
    1568:	b	10d8 <gconv@@Base+0x818>
    156c:	mov	x0, x20
    1570:	mov	w5, w12
    1574:	mov	w8, #0x4                   	// #4
    1578:	b	a90 <gconv@@Base+0x1d0>
    157c:	mov	x1, #0x6                   	// #6
    1580:	str	x23, [x9]
    1584:	str	w12, [x24]
    1588:	cmp	x30, x8
    158c:	b.ne	177c <gconv@@Base+0xebc>  // b.any
    1590:	cmp	x1, #0x5
    1594:	b.eq	1540 <gconv@@Base+0xc80>  // b.none
    1598:	b	1724 <gconv@@Base+0xe64>
    159c:	and	w19, w19, #0x7
    15a0:	str	w19, [x22]
    15a4:	cbnz	w1, 14f4 <gconv@@Base+0xc34>
    15a8:	mov	x0, x25
    15ac:	bl	740 <_dl_mcount_wrapper_check@plt>
    15b0:	ldr	x1, [sp, #152]
    15b4:	mov	w7, w27
    15b8:	mov	x5, x26
    15bc:	mov	x0, x28
    15c0:	mov	w6, #0x1                   	// #1
    15c4:	mov	x4, #0x0                   	// #0
    15c8:	mov	x3, #0x0                   	// #0
    15cc:	mov	x2, #0x0                   	// #0
    15d0:	blr	x25
    15d4:	mov	w8, w0
    15d8:	b	c68 <gconv@@Base+0x3a8>
    15dc:	cmp	x22, x4
    15e0:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
    15e4:	mov	x2, x23
    15e8:	add	x7, sp, #0xf0
    15ec:	mov	x1, #0x0                   	// #0
    15f0:	ldrb	w6, [x2], #1
    15f4:	add	x8, x1, #0x1
    15f8:	strb	w6, [x7, x1]
    15fc:	cmp	x8, #0x1
    1600:	ccmp	x20, x2, #0x0, ls  // ls = plast
    1604:	mov	x1, #0x1                   	// #1
    1608:	b.hi	15f0 <gconv@@Base+0xd30>  // b.pmore
    160c:	ldrb	w6, [sp, #240]
    1610:	mov	x2, #0x0                   	// #0
    1614:	sub	w12, w6, #0xe
    1618:	and	w12, w12, #0xff
    161c:	cmp	w12, #0x1
    1620:	b.ls	1254 <gconv@@Base+0x994>  // b.plast
    1624:	b	1208 <gconv@@Base+0x948>
    1628:	ldr	x0, [x9]
    162c:	sub	x1, x20, x0
    1630:	cmp	x1, #0x3
    1634:	b.gt	1fe0 <gconv@@Base+0x1720>
    1638:	ldr	x2, [x21, #32]
    163c:	cmp	x0, x20
    1640:	add	x0, x0, #0x1
    1644:	add	x3, x2, #0x4
    1648:	b.cs	1fd8 <gconv@@Base+0x1718>  // b.hs, b.nlast
    164c:	str	x0, [x9]
    1650:	cmp	x20, x0
    1654:	add	x0, x0, #0x1
    1658:	ldurb	w4, [x0, #-2]
    165c:	strb	w4, [x3], #1
    1660:	b.ne	164c <gconv@@Base+0xd8c>  // b.any
    1664:	ldr	w0, [x2]
    1668:	ldp	x23, x24, [sp, #48]
    166c:	and	w0, w0, #0xfffffff8
    1670:	orr	w0, w0, w1
    1674:	str	w0, [x2]
    1678:	b	c68 <gconv@@Base+0x3a8>
    167c:	cbz	x10, 157c <gconv@@Base+0xcbc>
    1680:	cbz	w5, 157c <gconv@@Base+0xcbc>
    1684:	ldr	x0, [x10]
    1688:	add	x23, x23, #0x2
    168c:	mov	x1, #0x6                   	// #6
    1690:	add	x0, x0, #0x1
    1694:	str	x0, [x10]
    1698:	b	12d0 <gconv@@Base+0xa10>
    169c:	str	xzr, [x22]
    16a0:	mov	w8, #0x0                   	// #0
    16a4:	ldr	w0, [x21, #16]
    16a8:	tbnz	w0, #0, c68 <gconv@@Base+0x3a8>
    16ac:	mov	x0, x25
    16b0:	str	w6, [sp, #104]
    16b4:	bl	740 <_dl_mcount_wrapper_check@plt>
    16b8:	ldr	w6, [sp, #104]
    16bc:	mov	w7, w27
    16c0:	mov	x5, x26
    16c4:	mov	x0, x28
    16c8:	ldr	x1, [sp, #152]
    16cc:	b	15c4 <gconv@@Base+0xd04>
    16d0:	cmp	x22, x0
    16d4:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
    16d8:	str	x0, [sp, #232]
    16dc:	mov	w0, #0xf                   	// #15
    16e0:	strb	w0, [x24]
    16e4:	ldr	x1, [sp, #232]
    16e8:	add	x0, x1, #0x1
    16ec:	cmp	x22, x0
    16f0:	b.cs	f28 <gconv@@Base+0x668>  // b.hs, b.nlast
    16f4:	ldr	x0, [sp, #224]
    16f8:	cmp	x0, x7
    16fc:	b.ne	f44 <gconv@@Base+0x684>  // b.any
    1700:	mov	w8, #0x5                   	// #5
    1704:	ldp	x23, x24, [sp, #48]
    1708:	b	c68 <gconv@@Base+0x3a8>
    170c:	ldr	x0, [sp, #224]
    1710:	str	x0, [x28]
    1714:	ldr	x0, [sp, #216]
    1718:	str	w12, [x24]
    171c:	cmp	x0, x30
    1720:	b.ne	177c <gconv@@Base+0xebc>  // b.any
    1724:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1728:	adrp	x1, 2000 <gconv@@Base+0x1740>
    172c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1730:	add	x3, x3, #0x230
    1734:	add	x1, x1, #0x78
    1738:	add	x0, x0, #0x1b8
    173c:	mov	w2, #0x2eb                 	// #747
    1740:	bl	750 <__assert_fail@plt>
    1744:	mov	w2, #0x1c00                	// #7168
    1748:	cmp	w2, w10, lsr #7
    174c:	b.eq	1ae8 <gconv@@Base+0x1228>  // b.none
    1750:	cbz	x26, 170c <gconv@@Base+0xe4c>
    1754:	str	w12, [x24]
    1758:	ldr	w0, [x25, #16]
    175c:	tbnz	w0, #3, 1a2c <gconv@@Base+0x116c>
    1760:	ldr	x23, [sp, #224]
    1764:	tbnz	w19, #1, 1c08 <gconv@@Base+0x1348>
    1768:	str	x23, [x28]
    176c:	ldr	x0, [sp, #216]
    1770:	str	w12, [x24]
    1774:	cmp	x0, x30
    1778:	b.eq	1724 <gconv@@Base+0xe64>  // b.none
    177c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1780:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1784:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1788:	add	x3, x3, #0x230
    178c:	add	x1, x1, #0x78
    1790:	add	x0, x0, #0x1a0
    1794:	mov	w2, #0x2ea                 	// #746
    1798:	bl	750 <__assert_fail@plt>
    179c:	mov	x0, #0x4                   	// #4
    17a0:	mov	x12, #0x0                   	// #0
    17a4:	b	e58 <gconv@@Base+0x598>
    17a8:	adrp	x0, 7000 <gconv@@Base+0x6740>
    17ac:	cmp	w10, #0xa4
    17b0:	add	x0, x0, #0x360
    17b4:	mov	w4, #0xa8                  	// #168
    17b8:	b.ne	17c8 <gconv@@Base+0xf08>  // b.any
    17bc:	b	1cb4 <gconv@@Base+0x13f4>
    17c0:	ldrh	w4, [x2, #10]
    17c4:	mov	x0, x2
    17c8:	cmp	w10, w4
    17cc:	add	x2, x0, #0x8
    17d0:	b.hi	17c0 <gconv@@Base+0xf00>  // b.pmore
    17d4:	ldrh	w0, [x0, #8]
    17d8:	cmp	w10, w0
    17dc:	b.cc	1c24 <gconv@@Base+0x1364>  // b.lo, b.ul, b.last
    17e0:	ldr	w0, [x2, #4]
    17e4:	adrp	x2, 2000 <gconv@@Base+0x1740>
    17e8:	add	x2, x2, #0xa40
    17ec:	cmp	w10, #0x0
    17f0:	add	w0, w10, w0
    17f4:	lsl	x0, x0, #1
    17f8:	add	x4, x0, x2
    17fc:	ldrb	w0, [x0, x2]
    1800:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1804:	b.eq	1c24 <gconv@@Base+0x1364>  // b.none
    1808:	cbnz	w12, 182c <gconv@@Base+0xf6c>
    180c:	add	x2, x30, #0x1
    1810:	cmp	x21, x2
    1814:	b.cc	1dc0 <gconv@@Base+0x1500>  // b.lo, b.ul, b.last
    1818:	str	x2, [sp, #232]
    181c:	mov	w2, #0xe                   	// #14
    1820:	strb	w2, [x30]
    1824:	mov	w12, #0x40                  	// #64
    1828:	ldr	x30, [sp, #232]
    182c:	add	x2, x30, #0x2
    1830:	cmp	x21, x2
    1834:	b.cc	1508 <gconv@@Base+0xc48>  // b.lo, b.ul, b.last
    1838:	add	x2, x30, #0x1
    183c:	str	x2, [sp, #232]
    1840:	strb	w0, [x30]
    1844:	ldr	x0, [sp, #232]
    1848:	ldrb	w2, [x4, #1]
    184c:	add	x4, x0, #0x1
    1850:	str	x4, [sp, #232]
    1854:	strb	w2, [x0]
    1858:	b	1074 <gconv@@Base+0x7b4>
    185c:	add	x23, x23, #0x1
    1860:	mov	w12, #0x40                  	// #64
    1864:	b	12d0 <gconv@@Base+0xa10>
    1868:	mov	x1, #0x5                   	// #5
    186c:	b	1580 <gconv@@Base+0xcc0>
    1870:	add	x23, x23, #0x1
    1874:	mov	w12, #0x0                   	// #0
    1878:	b	12d0 <gconv@@Base+0xa10>
    187c:	mov	x2, x20
    1880:	mov	x19, x28
    1884:	mov	w5, w12
    1888:	mov	w8, #0x4                   	// #4
    188c:	b	c4c <gconv@@Base+0x38c>
    1890:	cmp	w5, #0x40
    1894:	b.ne	1f94 <gconv@@Base+0x16d4>  // b.any
    1898:	add	x1, x7, x8
    189c:	add	x2, x7, #0x1
    18a0:	cmp	x1, x2
    18a4:	b.ls	1d34 <gconv@@Base+0x1474>  // b.plast
    18a8:	ldrb	w0, [sp, #241]
    18ac:	mov	w2, #0x4040                	// #16448
    18b0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    18b4:	add	x1, x1, #0x238
    18b8:	add	w0, w0, w6, lsl #8
    18bc:	cmp	w0, w2
    18c0:	b.ls	18ec <gconv@@Base+0x102c>  // b.plast
    18c4:	mov	w2, #0x4158                	// #16728
    18c8:	b	18d0 <gconv@@Base+0x1010>
    18cc:	ldrh	w2, [x1, #10]
    18d0:	add	x1, x1, #0x8
    18d4:	cmp	w0, w2
    18d8:	b.hi	18cc <gconv@@Base+0x100c>  // b.pmore
    18dc:	ldrh	w2, [x1]
    18e0:	mov	w5, #0xffff                	// #65535
    18e4:	cmp	w2, w5
    18e8:	b.eq	1bb0 <gconv@@Base+0x12f0>  // b.none
    18ec:	cmp	w0, w2
    18f0:	b.cc	1bb0 <gconv@@Base+0x12f0>  // b.lo, b.ul, b.last
    18f4:	ldr	w2, [x1, #4]
    18f8:	cmp	w0, #0x0
    18fc:	adrp	x1, e000 <gconv@@Base+0xd740>
    1900:	add	x1, x1, #0x508
    1904:	add	w0, w0, w2
    1908:	ldrh	w0, [x1, x0, lsl #1]
    190c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1910:	b.eq	1bb0 <gconv@@Base+0x12f0>  // b.none
    1914:	str	w0, [x24]
    1918:	mov	x1, #0x2                   	// #2
    191c:	mov	x24, x4
    1920:	ldr	w11, [x10]
    1924:	and	w3, w11, #0x7
    1928:	b	1240 <gconv@@Base+0x980>
    192c:	str	x20, [x9]
    1930:	cmp	x23, x20
    1934:	b.cs	195c <gconv@@Base+0x109c>  // b.hs, b.nlast
    1938:	add	x23, x23, #0x1
    193c:	add	x10, x10, x12
    1940:	str	x23, [sp, #224]
    1944:	cmp	x20, x23
    1948:	add	x10, x10, #0x1
    194c:	add	x23, x23, #0x1
    1950:	ldurb	w0, [x23, #-2]
    1954:	strb	w0, [x10, #3]
    1958:	b.ne	1940 <gconv@@Base+0x1080>  // b.any
    195c:	mov	w8, #0x7                   	// #7
    1960:	ldp	x23, x24, [sp, #48]
    1964:	b	c68 <gconv@@Base+0x3a8>
    1968:	cbnz	w8, 10e4 <gconv@@Base+0x824>
    196c:	ldr	w11, [x10]
    1970:	ldr	w7, [x21, #16]
    1974:	ldr	x23, [x9]
    1978:	b	980 <gconv@@Base+0xc0>
    197c:	adrp	x0, 7000 <gconv@@Base+0x6740>
    1980:	cmp	w6, #0xa4
    1984:	add	x0, x0, #0x360
    1988:	mov	w2, #0xa8                  	// #168
    198c:	b.ne	199c <gconv@@Base+0x10dc>  // b.any
    1990:	b	1d78 <gconv@@Base+0x14b8>
    1994:	ldrh	w2, [x1, #10]
    1998:	mov	x0, x1
    199c:	cmp	w6, w2
    19a0:	add	x1, x0, #0x8
    19a4:	b.hi	1994 <gconv@@Base+0x10d4>  // b.pmore
    19a8:	ldrh	w0, [x0, #8]
    19ac:	cmp	w6, w0
    19b0:	b.cc	1af4 <gconv@@Base+0x1234>  // b.lo, b.ul, b.last
    19b4:	ldr	w0, [x1, #4]
    19b8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    19bc:	add	x1, x1, #0xa40
    19c0:	add	w0, w6, w0
    19c4:	lsl	x0, x0, #1
    19c8:	add	x2, x0, x1
    19cc:	ldrb	w1, [x0, x1]
    19d0:	cmp	w1, #0x0
    19d4:	ccmp	w6, #0x0, #0x4, eq  // eq = none
    19d8:	b.ne	1af4 <gconv@@Base+0x1234>  // b.any
    19dc:	cbnz	w5, 1cdc <gconv@@Base+0x141c>
    19e0:	add	x0, x24, #0x1
    19e4:	cmp	x22, x0
    19e8:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
    19ec:	str	x0, [sp, #232]
    19f0:	mov	w0, #0xe                   	// #14
    19f4:	strb	w0, [x24]
    19f8:	ldr	x0, [sp, #232]
    19fc:	add	x3, x0, #0x2
    1a00:	cmp	x22, x3
    1a04:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
    1a08:	add	x3, x0, #0x1
    1a0c:	str	x3, [sp, #232]
    1a10:	strb	w1, [x0]
    1a14:	ldr	x0, [sp, #232]
    1a18:	ldrb	w1, [x2, #1]
    1a1c:	add	x2, x0, #0x1
    1a20:	str	x2, [sp, #232]
    1a24:	strb	w1, [x0]
    1a28:	b	f30 <gconv@@Base+0x670>
    1a2c:	ldr	x2, [x28]
    1a30:	mov	x6, x26
    1a34:	ldr	x5, [sp, #192]
    1a38:	mov	x4, x20
    1a3c:	mov	x1, x25
    1a40:	mov	x0, x22
    1a44:	str	x3, [sp, #200]
    1a48:	bl	700 <__gconv_transliterate@plt>
    1a4c:	mov	w5, w0
    1a50:	ldr	w12, [x24]
    1a54:	cmp	w0, #0x6
    1a58:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1a5c:	and	w12, w12, #0xfffffff8
    1a60:	ldr	x3, [sp, #200]
    1a64:	b.eq	1cf0 <gconv@@Base+0x1430>  // b.none
    1a68:	cmp	w0, #0x5
    1a6c:	b.eq	1cf8 <gconv@@Base+0x1438>  // b.none
    1a70:	ldp	x23, x30, [sp, #224]
    1a74:	b	1080 <gconv@@Base+0x7c0>
    1a78:	mov	w0, #0x1c00                	// #7168
    1a7c:	cmp	w0, w6, lsr #7
    1a80:	b.eq	2020 <gconv@@Base+0x1760>  // b.none
    1a84:	ldr	x0, [sp, #176]
    1a88:	cbz	x0, 1b30 <gconv@@Base+0x1270>
    1a8c:	str	w5, [x10]
    1a90:	ldr	w0, [x21, #16]
    1a94:	tbnz	w0, #3, 1ebc <gconv@@Base+0x15fc>
    1a98:	tbz	w19, #1, 1b30 <gconv@@Base+0x1270>
    1a9c:	ldr	x3, [sp, #176]
    1aa0:	add	x2, x7, #0x4
    1aa4:	mov	x0, x2
    1aa8:	str	x2, [sp, #224]
    1aac:	ldr	x1, [x3]
    1ab0:	add	x1, x1, #0x1
    1ab4:	str	x1, [x3]
    1ab8:	b	f44 <gconv@@Base+0x684>
    1abc:	cbz	x10, 157c <gconv@@Base+0xcbc>
    1ac0:	cbz	w5, 157c <gconv@@Base+0xcbc>
    1ac4:	ldr	x0, [x10]
    1ac8:	add	x23, x23, #0x1
    1acc:	mov	x1, #0x6                   	// #6
    1ad0:	add	x0, x0, #0x1
    1ad4:	str	x0, [x10]
    1ad8:	b	12d0 <gconv@@Base+0xa10>
    1adc:	mov	w8, #0x6                   	// #6
    1ae0:	ldr	x0, [sp, #224]
    1ae4:	b	a90 <gconv@@Base+0x1d0>
    1ae8:	mov	x23, x0
    1aec:	str	x0, [sp, #224]
    1af0:	b	1080 <gconv@@Base+0x7c0>
    1af4:	ldr	x0, [sp, #176]
    1af8:	cbz	x0, 1b30 <gconv@@Base+0x1270>
    1afc:	str	w5, [x10]
    1b00:	ldr	w0, [x21, #16]
    1b04:	tbnz	w0, #3, 1ebc <gconv@@Base+0x15fc>
    1b08:	tbz	w19, #1, 1b30 <gconv@@Base+0x1270>
    1b0c:	ldr	x0, [sp, #224]
    1b10:	add	x0, x0, #0x4
    1b14:	ldr	x2, [sp, #176]
    1b18:	str	x0, [sp, #224]
    1b1c:	cmp	x0, x7
    1b20:	ldr	x1, [x2]
    1b24:	add	x1, x1, #0x1
    1b28:	str	x1, [x2]
    1b2c:	b.ne	f44 <gconv@@Base+0x684>  // b.any
    1b30:	mov	w8, #0x6                   	// #6
    1b34:	ldp	x23, x24, [sp, #48]
    1b38:	b	c68 <gconv@@Base+0x3a8>
    1b3c:	str	x23, [x9]
    1b40:	cmp	x8, x28
    1b44:	str	w12, [x24]
    1b48:	b.eq	1548 <gconv@@Base+0xc88>  // b.none
    1b4c:	b	177c <gconv@@Base+0xebc>
    1b50:	mov	x1, #0x7                   	// #7
    1b54:	b	1580 <gconv@@Base+0xcc0>
    1b58:	mov	w3, #0x4040                	// #16448
    1b5c:	b	1348 <gconv@@Base+0xa88>
    1b60:	mov	x0, x25
    1b64:	str	x2, [sp, #232]
    1b68:	bl	740 <_dl_mcount_wrapper_check@plt>
    1b6c:	ldr	x1, [sp, #152]
    1b70:	mov	w7, w27
    1b74:	mov	x5, x26
    1b78:	mov	x3, x20
    1b7c:	add	x2, sp, #0xe8
    1b80:	mov	x0, x28
    1b84:	mov	w6, #0x0                   	// #0
    1b88:	mov	x4, #0x0                   	// #0
    1b8c:	blr	x25
    1b90:	mov	w8, w0
    1b94:	cmp	w0, #0x4
    1b98:	b.eq	15a8 <gconv@@Base+0xce8>  // b.none
    1b9c:	ldr	x0, [sp, #232]
    1ba0:	cmp	x0, x20
    1ba4:	b.ne	1dfc <gconv@@Base+0x153c>  // b.any
    1ba8:	cbnz	w8, c68 <gconv@@Base+0x3a8>
    1bac:	b	15a8 <gconv@@Base+0xce8>
    1bb0:	ldr	x0, [sp, #176]
    1bb4:	cbz	x0, 1b30 <gconv@@Base+0x1270>
    1bb8:	tbz	w19, #1, 1b30 <gconv@@Base+0x1270>
    1bbc:	mov	x2, x0
    1bc0:	mov	x1, #0x2                   	// #2
    1bc4:	ldr	x0, [x0]
    1bc8:	add	x0, x0, #0x1
    1bcc:	str	x0, [x2]
    1bd0:	b	1240 <gconv@@Base+0x980>
    1bd4:	str	x20, [x9]
    1bd8:	cmp	x8, x28
    1bdc:	str	w12, [x24]
    1be0:	b.eq	1724 <gconv@@Base+0xe64>  // b.none
    1be4:	b	177c <gconv@@Base+0xebc>
    1be8:	adrp	x0, 7000 <gconv@@Base+0x6740>
    1bec:	cmp	w6, #0xa4
    1bf0:	add	x0, x0, #0x360
    1bf4:	mov	w2, #0xa8                  	// #168
    1bf8:	b.hi	199c <gconv@@Base+0x10dc>  // b.pmore
    1bfc:	mov	x1, x0
    1c00:	mov	w0, #0xa4                  	// #164
    1c04:	b	19ac <gconv@@Base+0x10ec>
    1c08:	ldr	x0, [x26]
    1c0c:	add	x23, x23, #0x4
    1c10:	mov	w5, #0x6                   	// #6
    1c14:	str	x23, [sp, #224]
    1c18:	add	x0, x0, #0x1
    1c1c:	str	x0, [x26]
    1c20:	b	1080 <gconv@@Base+0x7c0>
    1c24:	cbz	x26, 170c <gconv@@Base+0xe4c>
    1c28:	str	w12, [x24]
    1c2c:	ldr	w0, [x25, #16]
    1c30:	tbz	w0, #3, 1760 <gconv@@Base+0xea0>
    1c34:	ldr	x2, [x28]
    1c38:	mov	x6, x26
    1c3c:	ldr	x5, [sp, #192]
    1c40:	mov	x4, x20
    1c44:	mov	x1, x25
    1c48:	mov	x0, x22
    1c4c:	str	x3, [sp, #200]
    1c50:	bl	700 <__gconv_transliterate@plt>
    1c54:	mov	w5, w0
    1c58:	ldr	w12, [x24]
    1c5c:	cmp	w0, #0x6
    1c60:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1c64:	and	w12, w12, #0xfffffff8
    1c68:	ldr	x3, [sp, #200]
    1c6c:	b.eq	1cf0 <gconv@@Base+0x1430>  // b.none
    1c70:	cmp	w0, #0x5
    1c74:	ldp	x23, x30, [sp, #224]
    1c78:	b.ne	1080 <gconv@@Base+0x7c0>  // b.any
    1c7c:	mov	x9, x28
    1c80:	mov	x21, x25
    1c84:	ldr	x0, [sp, #216]
    1c88:	mov	x18, x27
    1c8c:	str	x23, [x9]
    1c90:	mov	x27, x22
    1c94:	str	w12, [x24]
    1c98:	cmp	x0, x30
    1c9c:	ldr	w7, [sp, #112]
    1ca0:	ldr	x25, [sp, #104]
    1ca4:	ldr	x28, [sp, #120]
    1ca8:	ldr	x22, [sp, #136]
    1cac:	b.eq	1540 <gconv@@Base+0xc80>  // b.none
    1cb0:	b	177c <gconv@@Base+0xebc>
    1cb4:	mov	x2, x0
    1cb8:	b	17e0 <gconv@@Base+0xf20>
    1cbc:	adrp	x0, 7000 <gconv@@Base+0x6740>
    1cc0:	cmp	w10, #0xa4
    1cc4:	add	x0, x0, #0x360
    1cc8:	mov	w4, #0xa8                  	// #168
    1ccc:	b.hi	17c8 <gconv@@Base+0xf08>  // b.pmore
    1cd0:	mov	x2, x0
    1cd4:	mov	w0, #0xa4                  	// #164
    1cd8:	b	17d8 <gconv@@Base+0xf18>
    1cdc:	add	x0, x24, #0x2
    1ce0:	cmp	x22, x0
    1ce4:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
    1ce8:	mov	x0, x24
    1cec:	b	1a08 <gconv@@Base+0x1148>
    1cf0:	ldr	x30, [sp, #232]
    1cf4:	b	1760 <gconv@@Base+0xea0>
    1cf8:	mov	x9, x28
    1cfc:	mov	x21, x25
    1d00:	ldp	x0, x30, [sp, #224]
    1d04:	mov	x18, x27
    1d08:	str	x0, [x9]
    1d0c:	mov	x27, x22
    1d10:	ldr	x0, [sp, #216]
    1d14:	str	w12, [x24]
    1d18:	ldr	w7, [sp, #112]
    1d1c:	cmp	x0, x30
    1d20:	ldr	x25, [sp, #104]
    1d24:	ldr	x28, [sp, #120]
    1d28:	ldr	x22, [sp, #136]
    1d2c:	b.eq	1540 <gconv@@Base+0xc80>  // b.none
    1d30:	b	177c <gconv@@Base+0xebc>
    1d34:	add	x7, x7, #0x2
    1d38:	cmp	x1, x7
    1d3c:	b.eq	1da0 <gconv@@Base+0x14e0>  // b.none
    1d40:	mov	w0, w0
    1d44:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d48:	sub	x0, x8, x0
    1d4c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d50:	add	x23, x23, x0
    1d54:	str	x23, [x9]
    1d58:	add	x3, x3, #0x218
    1d5c:	add	x1, x1, #0xa8
    1d60:	cmp	x8, #0x40
    1d64:	b.le	1d90 <gconv@@Base+0x14d0>
    1d68:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d6c:	mov	w2, #0x1e6                 	// #486
    1d70:	add	x0, x0, #0x170
    1d74:	bl	750 <__assert_fail@plt>
    1d78:	mov	x1, x0
    1d7c:	b	19b4 <gconv@@Base+0x10f4>
    1d80:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d84:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d88:	add	x3, x3, #0x200
    1d8c:	add	x1, x1, #0xa8
    1d90:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d94:	mov	w2, #0x1e5                 	// #485
    1d98:	add	x0, x0, #0x148
    1d9c:	bl	750 <__assert_fail@plt>
    1da0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1da4:	add	x3, x3, #0x218
    1da8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1dac:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1db0:	add	x1, x1, #0xa8
    1db4:	add	x0, x0, #0x120
    1db8:	mov	w2, #0x1db                 	// #475
    1dbc:	bl	750 <__assert_fail@plt>
    1dc0:	mov	x9, x28
    1dc4:	mov	x21, x25
    1dc8:	ldr	x0, [sp, #224]
    1dcc:	mov	x18, x27
    1dd0:	str	x0, [x9]
    1dd4:	mov	x27, x22
    1dd8:	ldr	x0, [sp, #216]
    1ddc:	str	wzr, [x24]
    1de0:	ldr	w7, [sp, #112]
    1de4:	cmp	x0, x30
    1de8:	ldr	x25, [sp, #104]
    1dec:	ldr	x28, [sp, #120]
    1df0:	ldr	x22, [sp, #136]
    1df4:	b.eq	1540 <gconv@@Base+0xc80>  // b.none
    1df8:	b	177c <gconv@@Base+0xebc>
    1dfc:	str	w19, [x22]
    1e00:	cbnz	w8, c68 <gconv@@Base+0x3a8>
    1e04:	b	15a8 <gconv@@Base+0xce8>
    1e08:	mov	w8, #0x5                   	// #5
    1e0c:	b	c68 <gconv@@Base+0x3a8>
    1e10:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e14:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e18:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1e1c:	add	x3, x3, #0x230
    1e20:	add	x1, x1, #0x78
    1e24:	add	x0, x0, #0x90
    1e28:	mov	w2, #0x1a4                 	// #420
    1e2c:	stp	x23, x24, [sp, #48]
    1e30:	bl	750 <__assert_fail@plt>
    1e34:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e38:	add	x3, x3, #0x218
    1e3c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e40:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1e44:	add	x1, x1, #0xa8
    1e48:	add	x0, x0, #0xf8
    1e4c:	mov	w2, #0x1c9                 	// #457
    1e50:	bl	750 <__assert_fail@plt>
    1e54:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e58:	add	x3, x3, #0x200
    1e5c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e60:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1e64:	add	x1, x1, #0xa8
    1e68:	add	x0, x0, #0xb8
    1e6c:	mov	w2, #0x18b                 	// #395
    1e70:	bl	750 <__assert_fail@plt>
    1e74:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e78:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e7c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1e80:	add	x3, x3, #0x1f0
    1e84:	add	x1, x1, #0xa8
    1e88:	add	x0, x0, #0xe8
    1e8c:	mov	w2, #0x150                 	// #336
    1e90:	bl	750 <__assert_fail@plt>
    1e94:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e98:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e9c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1ea0:	add	x3, x3, #0x230
    1ea4:	add	x1, x1, #0x78
    1ea8:	add	x0, x0, #0x90
    1eac:	mov	w2, #0x234                 	// #564
    1eb0:	bl	750 <__assert_fail@plt>
    1eb4:	stp	x23, x24, [sp, #48]
    1eb8:	bl	710 <__stack_chk_fail@plt>
    1ebc:	ldr	x6, [sp, #176]
    1ec0:	mov	x0, x13
    1ec4:	mov	x2, x23
    1ec8:	add	x5, sp, #0xe8
    1ecc:	add	x3, sp, #0xe0
    1ed0:	mov	x1, x21
    1ed4:	stp	x13, x4, [sp, #104]
    1ed8:	stp	x10, x12, [sp, #120]
    1edc:	stp	x9, x14, [sp, #136]
    1ee0:	str	x7, [sp, #160]
    1ee4:	bl	700 <__gconv_transliterate@plt>
    1ee8:	mov	w8, w0
    1eec:	cmp	w0, #0x6
    1ef0:	ldp	x13, x4, [sp, #104]
    1ef4:	ldp	x10, x12, [sp, #120]
    1ef8:	ldp	x9, x14, [sp, #136]
    1efc:	ldr	x7, [sp, #160]
    1f00:	ldr	x0, [sp, #224]
    1f04:	b.eq	1f84 <gconv@@Base+0x16c4>  // b.none
    1f08:	cmp	x0, x7
    1f0c:	b.ne	f44 <gconv@@Base+0x684>  // b.any
    1f10:	cmp	w8, #0x7
    1f14:	b.ne	1968 <gconv@@Base+0x10a8>  // b.any
    1f18:	add	x0, x7, #0x4
    1f1c:	cmp	x4, x0
    1f20:	b.eq	2044 <gconv@@Base+0x1784>  // b.none
    1f24:	ldr	w0, [x10]
    1f28:	ldr	x1, [x9]
    1f2c:	and	x2, x0, #0x7
    1f30:	sub	x2, x12, x2
    1f34:	and	w0, w0, #0xfffffff8
    1f38:	add	x1, x1, x2
    1f3c:	str	x1, [x9]
    1f40:	cmp	x12, w0, sxtw
    1f44:	b.le	1d80 <gconv@@Base+0x14c0>
    1f48:	cmp	x12, #0x4
    1f4c:	b.hi	2030 <gconv@@Base+0x1770>  // b.pmore
    1f50:	orr	w0, w0, w12
    1f54:	str	w0, [x10]
    1f58:	cmp	x4, x7
    1f5c:	b.ls	195c <gconv@@Base+0x109c>  // b.plast
    1f60:	add	x7, x7, #0x1
    1f64:	add	x10, x10, #0x4
    1f68:	str	x7, [sp, #224]
    1f6c:	cmp	x4, x7
    1f70:	add	x7, x7, #0x1
    1f74:	ldurb	w0, [x7, #-2]
    1f78:	strb	w0, [x10], #1
    1f7c:	b.ne	1f68 <gconv@@Base+0x16a8>  // b.any
    1f80:	b	195c <gconv@@Base+0x109c>
    1f84:	tbnz	w19, #1, 1b10 <gconv@@Base+0x1250>
    1f88:	cmp	x0, x7
    1f8c:	b.ne	f44 <gconv@@Base+0x684>  // b.any
    1f90:	b	1b30 <gconv@@Base+0x1270>
    1f94:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f98:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f9c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1fa0:	add	x3, x3, #0x218
    1fa4:	add	x1, x1, #0xa8
    1fa8:	add	x0, x0, #0xe8
    1fac:	mov	w2, #0x1be                 	// #446
    1fb0:	bl	750 <__assert_fail@plt>
    1fb4:	ldr	x0, [sp, #176]
    1fb8:	cbz	x0, 1b30 <gconv@@Base+0x1270>
    1fbc:	tbz	w19, #1, 1b30 <gconv@@Base+0x1270>
    1fc0:	mov	x2, x0
    1fc4:	mov	x1, #0x1                   	// #1
    1fc8:	ldr	x0, [x0]
    1fcc:	add	x0, x0, x1
    1fd0:	str	x0, [x2]
    1fd4:	b	1240 <gconv@@Base+0x980>
    1fd8:	mov	w1, #0x0                   	// #0
    1fdc:	b	1664 <gconv@@Base+0xda4>
    1fe0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1fe4:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1fe8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1fec:	add	x3, x3, #0x230
    1ff0:	add	x1, x1, #0x78
    1ff4:	add	x0, x0, #0x1d8
    1ff8:	mov	w2, #0x31e                 	// #798
    1ffc:	bl	750 <__assert_fail@plt>
    2000:	adrp	x3, 2000 <gconv@@Base+0x1740>
    2004:	adrp	x1, 2000 <gconv@@Base+0x1740>
    2008:	add	x3, x3, #0x218
    200c:	b	1e60 <gconv@@Base+0x15a0>
    2010:	adrp	x3, 2000 <gconv@@Base+0x1740>
    2014:	adrp	x1, 2000 <gconv@@Base+0x1740>
    2018:	add	x3, x3, #0x200
    201c:	b	1e40 <gconv@@Base+0x1580>
    2020:	add	x0, x7, #0x4
    2024:	mov	x7, #0x4                   	// #4
    2028:	str	x0, [sp, #224]
    202c:	b	f50 <gconv@@Base+0x690>
    2030:	adrp	x3, 2000 <gconv@@Base+0x1740>
    2034:	adrp	x1, 2000 <gconv@@Base+0x1740>
    2038:	add	x3, x3, #0x200
    203c:	add	x1, x1, #0xa8
    2040:	b	1d68 <gconv@@Base+0x14a8>
    2044:	adrp	x3, 2000 <gconv@@Base+0x1740>
    2048:	adrp	x1, 2000 <gconv@@Base+0x1740>
    204c:	add	x3, x3, #0x200
    2050:	b	1dac <gconv@@Base+0x14ec>

Disassembly of section .fini:

0000000000002054 <.fini>:
    2054:	stp	x29, x30, [sp, #-16]!
    2058:	mov	x29, sp
    205c:	ldp	x29, x30, [sp], #16
    2060:	ret
