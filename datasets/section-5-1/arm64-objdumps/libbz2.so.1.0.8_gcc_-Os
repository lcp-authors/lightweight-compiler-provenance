
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libbz2.so.1.0.8_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001470 <.init>:
    1470:	stp	x29, x30, [sp, #-16]!
    1474:	mov	x29, sp
    1478:	bl	1750 <ferror@plt+0x10>
    147c:	ldp	x29, x30, [sp], #16
    1480:	ret

Disassembly of section .plt:

0000000000001490 <BZ2_hbMakeCodeLengths@plt-0x20>:
    1490:	stp	x16, x30, [sp, #-16]!
    1494:	adrp	x16, 1b000 <BZ2_bzerror@@Base+0x11140>
    1498:	ldr	x17, [x16, #4088]
    149c:	add	x16, x16, #0xff8
    14a0:	br	x17
    14a4:	nop
    14a8:	nop
    14ac:	nop

00000000000014b0 <BZ2_hbMakeCodeLengths@plt>:
    14b0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    14b4:	ldr	x17, [x16]
    14b8:	add	x16, x16, #0x0
    14bc:	br	x17

00000000000014c0 <fputs@plt>:
    14c0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    14c4:	ldr	x17, [x16, #8]
    14c8:	add	x16, x16, #0x8
    14cc:	br	x17

00000000000014d0 <exit@plt>:
    14d0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    14d4:	ldr	x17, [x16, #16]
    14d8:	add	x16, x16, #0x10
    14dc:	br	x17

00000000000014e0 <__cxa_finalize@plt>:
    14e0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    14e4:	ldr	x17, [x16, #24]
    14e8:	add	x16, x16, #0x18
    14ec:	br	x17

00000000000014f0 <BZ2_bzlibVersion@plt>:
    14f0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    14f4:	ldr	x17, [x16, #32]
    14f8:	add	x16, x16, #0x20
    14fc:	br	x17

0000000000001500 <fputc@plt>:
    1500:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1504:	ldr	x17, [x16, #40]
    1508:	add	x16, x16, #0x28
    150c:	br	x17

0000000000001510 <fclose@plt>:
    1510:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1514:	ldr	x17, [x16, #48]
    1518:	add	x16, x16, #0x30
    151c:	br	x17

0000000000001520 <malloc@plt>:
    1520:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1524:	ldr	x17, [x16, #56]
    1528:	add	x16, x16, #0x38
    152c:	br	x17

0000000000001530 <BZ2_bzDecompressInit@plt>:
    1530:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1534:	ldr	x17, [x16, #64]
    1538:	add	x16, x16, #0x40
    153c:	br	x17

0000000000001540 <BZ2_bzDecompressEnd@plt>:
    1540:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1544:	ldr	x17, [x16, #72]
    1548:	add	x16, x16, #0x48
    154c:	br	x17

0000000000001550 <BZ2_bzReadClose@plt>:
    1550:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1554:	ldr	x17, [x16, #80]
    1558:	add	x16, x16, #0x50
    155c:	br	x17

0000000000001560 <strcat@plt>:
    1560:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1564:	ldr	x17, [x16, #88]
    1568:	add	x16, x16, #0x58
    156c:	br	x17

0000000000001570 <fgetc@plt>:
    1570:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1574:	ldr	x17, [x16, #96]
    1578:	add	x16, x16, #0x60
    157c:	br	x17

0000000000001580 <fdopen@plt>:
    1580:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1584:	ldr	x17, [x16, #104]
    1588:	add	x16, x16, #0x68
    158c:	br	x17

0000000000001590 <BZ2_bzWriteOpen@plt>:
    1590:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1594:	ldr	x17, [x16, #112]
    1598:	add	x16, x16, #0x70
    159c:	br	x17

00000000000015a0 <BZ2_bzCompressInit@plt>:
    15a0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    15a4:	ldr	x17, [x16, #120]
    15a8:	add	x16, x16, #0x78
    15ac:	br	x17

00000000000015b0 <BZ2_bzCompressEnd@plt>:
    15b0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    15b4:	ldr	x17, [x16, #128]
    15b8:	add	x16, x16, #0x80
    15bc:	br	x17

00000000000015c0 <BZ2_hbCreateDecodeTables@plt>:
    15c0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    15c4:	ldr	x17, [x16, #136]
    15c8:	add	x16, x16, #0x88
    15cc:	br	x17

00000000000015d0 <__gmon_start__@plt>:
    15d0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    15d4:	ldr	x17, [x16, #144]
    15d8:	add	x16, x16, #0x90
    15dc:	br	x17

00000000000015e0 <BZ2_decompress@plt>:
    15e0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    15e4:	ldr	x17, [x16, #152]
    15e8:	add	x16, x16, #0x98
    15ec:	br	x17

00000000000015f0 <BZ2_bzWriteClose@plt>:
    15f0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    15f4:	ldr	x17, [x16, #160]
    15f8:	add	x16, x16, #0xa0
    15fc:	br	x17

0000000000001600 <BZ2_bzCompress@plt>:
    1600:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1604:	ldr	x17, [x16, #168]
    1608:	add	x16, x16, #0xa8
    160c:	br	x17

0000000000001610 <BZ2_bzWrite@plt>:
    1610:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1614:	ldr	x17, [x16, #176]
    1618:	add	x16, x16, #0xb0
    161c:	br	x17

0000000000001620 <__ctype_b_loc@plt>:
    1620:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1624:	ldr	x17, [x16, #184]
    1628:	add	x16, x16, #0xb8
    162c:	br	x17

0000000000001630 <BZ2_compressBlock@plt>:
    1630:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1634:	ldr	x17, [x16, #192]
    1638:	add	x16, x16, #0xc0
    163c:	br	x17

0000000000001640 <fread@plt>:
    1640:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1644:	ldr	x17, [x16, #200]
    1648:	add	x16, x16, #0xc8
    164c:	br	x17

0000000000001650 <BZ2_bsInitWrite@plt>:
    1650:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1654:	ldr	x17, [x16, #208]
    1658:	add	x16, x16, #0xd0
    165c:	br	x17

0000000000001660 <free@plt>:
    1660:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1664:	ldr	x17, [x16, #216]
    1668:	add	x16, x16, #0xd8
    166c:	br	x17

0000000000001670 <ungetc@plt>:
    1670:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1674:	ldr	x17, [x16, #224]
    1678:	add	x16, x16, #0xe0
    167c:	br	x17

0000000000001680 <BZ2_bzDecompress@plt>:
    1680:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1684:	ldr	x17, [x16, #232]
    1688:	add	x16, x16, #0xe8
    168c:	br	x17

0000000000001690 <BZ2_blockSort@plt>:
    1690:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1694:	ldr	x17, [x16, #240]
    1698:	add	x16, x16, #0xf0
    169c:	br	x17

00000000000016a0 <BZ2_bzWriteClose64@plt>:
    16a0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    16a4:	ldr	x17, [x16, #248]
    16a8:	add	x16, x16, #0xf8
    16ac:	br	x17

00000000000016b0 <BZ2_indexIntoF@plt>:
    16b0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    16b4:	ldr	x17, [x16, #256]
    16b8:	add	x16, x16, #0x100
    16bc:	br	x17

00000000000016c0 <BZ2_hbAssignCodes@plt>:
    16c0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    16c4:	ldr	x17, [x16, #264]
    16c8:	add	x16, x16, #0x108
    16cc:	br	x17

00000000000016d0 <fwrite@plt>:
    16d0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    16d4:	ldr	x17, [x16, #272]
    16d8:	add	x16, x16, #0x110
    16dc:	br	x17

00000000000016e0 <fflush@plt>:
    16e0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    16e4:	ldr	x17, [x16, #280]
    16e8:	add	x16, x16, #0x118
    16ec:	br	x17

00000000000016f0 <fopen64@plt>:
    16f0:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    16f4:	ldr	x17, [x16, #288]
    16f8:	add	x16, x16, #0x120
    16fc:	br	x17

0000000000001700 <BZ2_bzReadOpen@plt>:
    1700:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1704:	ldr	x17, [x16, #296]
    1708:	add	x16, x16, #0x128
    170c:	br	x17

0000000000001710 <BZ2_bzRead@plt>:
    1710:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1714:	ldr	x17, [x16, #304]
    1718:	add	x16, x16, #0x130
    171c:	br	x17

0000000000001720 <BZ2_bz__AssertH__fail@plt>:
    1720:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1724:	ldr	x17, [x16, #312]
    1728:	add	x16, x16, #0x138
    172c:	br	x17

0000000000001730 <fprintf@plt>:
    1730:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1734:	ldr	x17, [x16, #320]
    1738:	add	x16, x16, #0x140
    173c:	br	x17

0000000000001740 <ferror@plt>:
    1740:	adrp	x16, 1c000 <BZ2_hbMakeCodeLengths@@Base+0x19094>
    1744:	ldr	x17, [x16, #328]
    1748:	add	x16, x16, #0x148
    174c:	br	x17

Disassembly of section .text:

0000000000001750 <BZ2_blockSort@@Base-0x16c4>:
    1750:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    1754:	ldr	x0, [x0, #4056]
    1758:	cbz	x0, 1760 <ferror@plt+0x20>
    175c:	b	15d0 <__gmon_start__@plt>
    1760:	ret
    1764:	nop
    1768:	adrp	x0, 1c000 <BZ2_bzerror@@Base+0x12140>
    176c:	add	x0, x0, #0xd58
    1770:	adrp	x1, 1c000 <BZ2_bzerror@@Base+0x12140>
    1774:	add	x1, x1, #0xd58
    1778:	cmp	x1, x0
    177c:	b.eq	1794 <ferror@plt+0x54>  // b.none
    1780:	adrp	x1, 1b000 <BZ2_bzerror@@Base+0x11140>
    1784:	ldr	x1, [x1, #4000]
    1788:	cbz	x1, 1794 <ferror@plt+0x54>
    178c:	mov	x16, x1
    1790:	br	x16
    1794:	ret
    1798:	adrp	x0, 1c000 <BZ2_bzerror@@Base+0x12140>
    179c:	add	x0, x0, #0xd58
    17a0:	adrp	x1, 1c000 <BZ2_bzerror@@Base+0x12140>
    17a4:	add	x1, x1, #0xd58
    17a8:	sub	x1, x1, x0
    17ac:	lsr	x2, x1, #63
    17b0:	add	x1, x2, x1, asr #3
    17b4:	cmp	xzr, x1, asr #1
    17b8:	asr	x1, x1, #1
    17bc:	b.eq	17d4 <ferror@plt+0x94>  // b.none
    17c0:	adrp	x2, 1b000 <BZ2_bzerror@@Base+0x11140>
    17c4:	ldr	x2, [x2, #4064]
    17c8:	cbz	x2, 17d4 <ferror@plt+0x94>
    17cc:	mov	x16, x2
    17d0:	br	x16
    17d4:	ret
    17d8:	stp	x29, x30, [sp, #-32]!
    17dc:	mov	x29, sp
    17e0:	str	x19, [sp, #16]
    17e4:	adrp	x19, 1c000 <BZ2_bzerror@@Base+0x12140>
    17e8:	ldrb	w0, [x19, #3416]
    17ec:	cbnz	w0, 1814 <ferror@plt+0xd4>
    17f0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    17f4:	ldr	x0, [x0, #4008]
    17f8:	cbz	x0, 1808 <ferror@plt+0xc8>
    17fc:	adrp	x0, 1c000 <BZ2_bzerror@@Base+0x12140>
    1800:	ldr	x0, [x0, #336]
    1804:	bl	14e0 <__cxa_finalize@plt>
    1808:	bl	1768 <ferror@plt+0x28>
    180c:	mov	w0, #0x1                   	// #1
    1810:	strb	w0, [x19, #3416]
    1814:	ldr	x19, [sp, #16]
    1818:	ldp	x29, x30, [sp], #32
    181c:	ret
    1820:	b	1798 <ferror@plt+0x58>
    1824:	sub	sp, sp, #0xbb0
    1828:	stp	x29, x30, [sp]
    182c:	mov	x29, sp
    1830:	stp	x19, x20, [sp, #16]
    1834:	mov	x19, x0
    1838:	mov	w0, w4
    183c:	stp	x21, x22, [sp, #32]
    1840:	mov	x20, x2
    1844:	mov	x21, x1
    1848:	stp	x23, x24, [sp, #48]
    184c:	cmp	w0, #0x3
    1850:	stp	x25, x26, [sp, #64]
    1854:	mov	w26, w3
    1858:	stp	x27, x28, [sp, #80]
    185c:	str	w4, [sp, #112]
    1860:	b.le	187c <ferror@plt+0x13c>
    1864:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    1868:	ldr	x0, [x0, #4016]
    186c:	ldr	x1, [x0]
    1870:	adrp	x0, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    1874:	add	x0, x0, #0xef8
    1878:	bl	14c0 <fputs@plt>
    187c:	add	x0, sp, #0x7a8
    1880:	mov	x1, #0x0                   	// #0
    1884:	str	wzr, [x0, x1, lsl #2]
    1888:	add	x1, x1, #0x1
    188c:	cmp	x1, #0x101
    1890:	b.ne	1884 <ferror@plt+0x144>  // b.any
    1894:	mov	x1, #0x0                   	// #0
    1898:	cmp	w26, w1
    189c:	b.gt	1b20 <ferror@plt+0x3e0>
    18a0:	add	x2, sp, #0x3a8
    18a4:	mov	x1, #0x0                   	// #0
    18a8:	str	x2, [sp, #104]
    18ac:	ldr	x3, [sp, #104]
    18b0:	ldr	w2, [x0, x1]
    18b4:	str	w2, [x1, x3]
    18b8:	add	x1, x1, #0x4
    18bc:	cmp	x1, #0x400
    18c0:	b.ne	18ac <ferror@plt+0x16c>  // b.any
    18c4:	mov	x1, x0
    18c8:	mov	w2, #0x1                   	// #1
    18cc:	ldp	w4, w3, [x1]
    18d0:	add	w2, w2, #0x1
    18d4:	cmp	w2, #0x101
    18d8:	add	w3, w3, w4
    18dc:	str	w3, [x1, #4]!
    18e0:	b.ne	18cc <ferror@plt+0x18c>  // b.any
    18e4:	mov	x1, #0x0                   	// #0
    18e8:	cmp	w26, w1
    18ec:	b.gt	1b3c <ferror@plt+0x3fc>
    18f0:	mov	w1, #0x20                  	// #32
    18f4:	mov	x2, #0x0                   	// #0
    18f8:	sdiv	w1, w26, w1
    18fc:	add	w1, w1, #0x2
    1900:	cmp	w1, w2
    1904:	b.gt	1b5c <ferror@plt+0x41c>
    1908:	mov	x1, #0x0                   	// #0
    190c:	mov	w5, #0x1                   	// #1
    1910:	ldr	w3, [x0, x1, lsl #2]
    1914:	add	x1, x1, #0x1
    1918:	cmp	x1, #0x100
    191c:	asr	w2, w3, #5
    1920:	lsl	w3, w5, w3
    1924:	sbfiz	x2, x2, #2, #32
    1928:	ldr	w4, [x20, x2]
    192c:	orr	w3, w4, w3
    1930:	str	w3, [x20, x2]
    1934:	b.ne	1910 <ferror@plt+0x1d0>  // b.any
    1938:	mov	w0, w26
    193c:	add	w4, w26, #0x40
    1940:	mov	w3, #0x1                   	// #1
    1944:	asr	w1, w0, #5
    1948:	lsl	w5, w3, w0
    194c:	sbfiz	x1, x1, #2, #32
    1950:	ldr	w2, [x20, x1]
    1954:	orr	w2, w2, w5
    1958:	str	w2, [x20, x1]
    195c:	add	w1, w0, #0x1
    1960:	add	w0, w0, #0x2
    1964:	cmp	w4, w0
    1968:	asr	w2, w1, #5
    196c:	lsl	w1, w3, w1
    1970:	sbfiz	x2, x2, #2, #32
    1974:	ldr	w5, [x20, x2]
    1978:	bic	w1, w5, w1
    197c:	str	w1, [x20, x2]
    1980:	b.ne	1944 <ferror@plt+0x204>  // b.any
    1984:	mov	w25, #0x1                   	// #1
    1988:	add	x23, sp, #0x88
    198c:	mov	w22, w25
    1990:	add	x24, sp, #0x218
    1994:	ldr	w0, [sp, #112]
    1998:	cmp	w0, #0x3
    199c:	b.le	19bc <ferror@plt+0x27c>
    19a0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    19a4:	adrp	x1, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    19a8:	mov	w2, w25
    19ac:	add	x1, x1, #0xf14
    19b0:	ldr	x0, [x0, #4016]
    19b4:	ldr	x0, [x0]
    19b8:	bl	1730 <fprintf@plt>
    19bc:	mov	x0, #0x0                   	// #0
    19c0:	mov	w2, #0x0                   	// #0
    19c4:	cmp	w26, w0
    19c8:	b.gt	1b68 <ferror@plt+0x428>
    19cc:	mov	w2, #0x0                   	// #0
    19d0:	mov	w14, #0xffffffff            	// #-1
    19d4:	add	w1, w14, #0x1
    19d8:	asr	w0, w1, #5
    19dc:	and	w3, w1, #0x1f
    19e0:	lsl	w4, w22, w3
    19e4:	ldr	w0, [x20, w0, sxtw #2]
    19e8:	tst	w4, w0
    19ec:	b.eq	1a18 <ferror@plt+0x2d8>  // b.none
    19f0:	cbnz	w3, 1b98 <ferror@plt+0x458>
    19f4:	asr	w0, w1, #5
    19f8:	ldr	w0, [x20, w0, sxtw #2]
    19fc:	cmn	w0, #0x1
    1a00:	b.eq	1ba0 <ferror@plt+0x460>  // b.none
    1a04:	asr	w3, w1, #5
    1a08:	lsl	w0, w22, w1
    1a0c:	ldr	w3, [x20, w3, sxtw #2]
    1a10:	tst	w0, w3
    1a14:	b.ne	1ba8 <ferror@plt+0x468>  // b.any
    1a18:	sub	w27, w1, #0x1
    1a1c:	cmp	w26, w27
    1a20:	b.le	1e58 <ferror@plt+0x718>
    1a24:	mov	w0, w1
    1a28:	asr	w3, w0, #5
    1a2c:	and	w4, w0, #0x1f
    1a30:	lsl	w5, w22, w4
    1a34:	ldr	w3, [x20, w3, sxtw #2]
    1a38:	tst	w5, w3
    1a3c:	b.ne	1a64 <ferror@plt+0x324>  // b.any
    1a40:	cbnz	w4, 1bb0 <ferror@plt+0x470>
    1a44:	asr	w3, w0, #5
    1a48:	ldr	w3, [x20, w3, sxtw #2]
    1a4c:	cbz	w3, 1bb8 <ferror@plt+0x478>
    1a50:	asr	w4, w0, #5
    1a54:	lsl	w3, w22, w0
    1a58:	ldr	w4, [x20, w4, sxtw #2]
    1a5c:	tst	w3, w4
    1a60:	b.eq	1bc0 <ferror@plt+0x480>  // b.none
    1a64:	sub	w14, w0, #0x1
    1a68:	cmp	w26, w14
    1a6c:	b.le	1e58 <ferror@plt+0x718>
    1a70:	cmp	w1, w0
    1a74:	b.ge	19d4 <ferror@plt+0x294>  // b.tcont
    1a78:	sub	w0, w0, w1
    1a7c:	mov	w28, #0x0                   	// #0
    1a80:	add	w0, w0, #0x1
    1a84:	mov	x6, #0x1                   	// #1
    1a88:	add	w2, w2, w0
    1a8c:	str	w27, [sp, #136]
    1a90:	str	w14, [sp, #536]
    1a94:	sub	w8, w6, #0x1
    1a98:	sbfiz	x0, x8, #2, #32
    1a9c:	sxtw	x18, w8
    1aa0:	ldr	w3, [x23, x0]
    1aa4:	ldr	w1, [x24, x0]
    1aa8:	sub	w0, w1, w3
    1aac:	cmp	w0, #0x9
    1ab0:	b.gt	1c58 <ferror@plt+0x518>
    1ab4:	cmp	w3, w1
    1ab8:	b.eq	1ad4 <ferror@plt+0x394>  // b.none
    1abc:	cmp	w0, #0x3
    1ac0:	b.gt	1bc8 <ferror@plt+0x488>
    1ac4:	sub	w0, w1, #0x1
    1ac8:	sxtw	x0, w0
    1acc:	cmp	w3, w0
    1ad0:	b.le	1c18 <ferror@plt+0x4d8>
    1ad4:	cbnz	w8, 1dd0 <ferror@plt+0x690>
    1ad8:	sxtw	x27, w27
    1adc:	mov	w1, #0xffffffff            	// #-1
    1ae0:	mov	w0, w27
    1ae4:	cmp	w14, w27
    1ae8:	b.lt	19d4 <ferror@plt+0x294>  // b.tstop
    1aec:	ldr	w3, [x19, x27, lsl #2]
    1af0:	ldr	w4, [x21, x3, lsl #2]
    1af4:	cmp	w1, w4
    1af8:	b.eq	1b14 <ferror@plt+0x3d4>  // b.none
    1afc:	asr	w1, w0, #5
    1b00:	lsl	w0, w22, w0
    1b04:	sbfiz	x1, x1, #2, #32
    1b08:	ldr	w3, [x20, x1]
    1b0c:	orr	w0, w3, w0
    1b10:	str	w0, [x20, x1]
    1b14:	add	x27, x27, #0x1
    1b18:	mov	w1, w4
    1b1c:	b	1ae0 <ferror@plt+0x3a0>
    1b20:	ldrb	w2, [x21, x1]
    1b24:	add	x1, x1, #0x1
    1b28:	lsl	x2, x2, #2
    1b2c:	ldr	w3, [x0, x2]
    1b30:	add	w3, w3, #0x1
    1b34:	str	w3, [x0, x2]
    1b38:	b	1898 <ferror@plt+0x158>
    1b3c:	ldrb	w3, [x21, x1]
    1b40:	lsl	x3, x3, #2
    1b44:	ldr	w2, [x0, x3]
    1b48:	sub	w2, w2, #0x1
    1b4c:	str	w2, [x0, x3]
    1b50:	str	w1, [x19, w2, sxtw #2]
    1b54:	add	x1, x1, #0x1
    1b58:	b	18e8 <ferror@plt+0x1a8>
    1b5c:	str	wzr, [x20, x2, lsl #2]
    1b60:	add	x2, x2, #0x1
    1b64:	b	1900 <ferror@plt+0x1c0>
    1b68:	asr	w3, w0, #5
    1b6c:	lsl	w1, w22, w0
    1b70:	ldr	w3, [x20, w3, sxtw #2]
    1b74:	tst	w1, w3
    1b78:	ldr	w1, [x19, x0, lsl #2]
    1b7c:	csel	w2, w2, w0, eq  // eq = none
    1b80:	subs	w1, w1, w25
    1b84:	b.pl	1b8c <ferror@plt+0x44c>  // b.nfrst
    1b88:	add	w1, w1, w26
    1b8c:	add	x0, x0, #0x1
    1b90:	str	w2, [x21, w1, sxtw #2]
    1b94:	b	19c4 <ferror@plt+0x284>
    1b98:	add	w1, w1, #0x1
    1b9c:	b	19d8 <ferror@plt+0x298>
    1ba0:	add	w1, w1, #0x20
    1ba4:	b	19f4 <ferror@plt+0x2b4>
    1ba8:	add	w1, w1, #0x1
    1bac:	b	1a04 <ferror@plt+0x2c4>
    1bb0:	add	w0, w0, #0x1
    1bb4:	b	1a28 <ferror@plt+0x2e8>
    1bb8:	add	w0, w0, #0x20
    1bbc:	b	1a44 <ferror@plt+0x304>
    1bc0:	add	w0, w0, #0x1
    1bc4:	b	1a50 <ferror@plt+0x310>
    1bc8:	sub	w0, w1, #0x4
    1bcc:	sxtw	x0, w0
    1bd0:	cmp	w3, w0
    1bd4:	b.gt	1ac4 <ferror@plt+0x384>
    1bd8:	ldr	w6, [x19, x0, lsl #2]
    1bdc:	add	w5, w0, #0x4
    1be0:	add	x4, x19, x0, lsl #2
    1be4:	ldr	w11, [x21, w6, sxtw #2]
    1be8:	cmp	w1, w5
    1bec:	b.lt	1c00 <ferror@plt+0x4c0>  // b.tstop
    1bf0:	ldr	w7, [x4, #16]
    1bf4:	ldr	w10, [x21, w7, uxtw #2]
    1bf8:	cmp	w11, w10
    1bfc:	b.hi	1c0c <ferror@plt+0x4cc>  // b.pmore
    1c00:	sub	x0, x0, #0x1
    1c04:	str	w6, [x4]
    1c08:	b	1bd0 <ferror@plt+0x490>
    1c0c:	add	w5, w5, #0x4
    1c10:	str	w7, [x4], #16
    1c14:	b	1be8 <ferror@plt+0x4a8>
    1c18:	ldr	w6, [x19, x0, lsl #2]
    1c1c:	add	w5, w0, #0x1
    1c20:	add	x4, x19, x0, lsl #2
    1c24:	ldr	w11, [x21, w6, sxtw #2]
    1c28:	cmp	w1, w5
    1c2c:	b.lt	1c40 <ferror@plt+0x500>  // b.tstop
    1c30:	ldr	w7, [x4, #4]
    1c34:	ldr	w10, [x21, w7, uxtw #2]
    1c38:	cmp	w11, w10
    1c3c:	b.hi	1c4c <ferror@plt+0x50c>  // b.pmore
    1c40:	sub	x0, x0, #0x1
    1c44:	str	w6, [x4]
    1c48:	b	1acc <ferror@plt+0x38c>
    1c4c:	add	w5, w5, #0x1
    1c50:	str	w7, [x4], #4
    1c54:	b	1c28 <ferror@plt+0x4e8>
    1c58:	mov	w0, #0x1dc5                	// #7621
    1c5c:	sxtw	x7, w3
    1c60:	mul	w28, w28, w0
    1c64:	mov	w0, #0x3                   	// #3
    1c68:	add	w28, w28, #0x1
    1c6c:	and	w28, w28, #0x7fff
    1c70:	udiv	w0, w28, w0
    1c74:	add	w0, w0, w0, lsl #1
    1c78:	subs	w0, w28, w0
    1c7c:	b.ne	1cd8 <ferror@plt+0x598>  // b.any
    1c80:	ldr	w0, [x19, x7, lsl #2]
    1c84:	ldr	w15, [x21, x0, lsl #2]
    1c88:	add	x13, x19, x7, lsl #2
    1c8c:	mov	w0, w3
    1c90:	mov	w4, w1
    1c94:	mov	w10, w3
    1c98:	mov	w5, w1
    1c9c:	cmp	w0, w5
    1ca0:	b.gt	1d38 <ferror@plt+0x5f8>
    1ca4:	ldr	w16, [x13]
    1ca8:	ldr	w11, [x21, w16, uxtw #2]
    1cac:	sub	w11, w11, w15
    1cb0:	cmp	w11, #0x0
    1cb4:	cbnz	w11, 1cf8 <ferror@plt+0x5b8>
    1cb8:	sbfiz	x11, x10, #2, #32
    1cbc:	add	w10, w10, #0x1
    1cc0:	ldr	w17, [x19, x11]
    1cc4:	str	w17, [x13]
    1cc8:	str	w16, [x19, x11]
    1ccc:	add	w0, w0, #0x1
    1cd0:	add	x13, x13, #0x4
    1cd4:	b	1c9c <ferror@plt+0x55c>
    1cd8:	cmp	w0, #0x1
    1cdc:	b.ne	1cf0 <ferror@plt+0x5b0>  // b.any
    1ce0:	add	w0, w3, w1
    1ce4:	asr	w0, w0, #1
    1ce8:	ldr	w0, [x19, w0, sxtw #2]
    1cec:	b	1c84 <ferror@plt+0x544>
    1cf0:	ldr	w0, [x19, w1, sxtw #2]
    1cf4:	b	1c84 <ferror@plt+0x544>
    1cf8:	b.le	1ccc <ferror@plt+0x58c>
    1cfc:	sxtw	x11, w5
    1d00:	ldr	w17, [x19, x11, lsl #2]
    1d04:	add	x30, x19, x11, lsl #2
    1d08:	sub	w5, w11, #0x1
    1d0c:	ldr	w16, [x21, w17, uxtw #2]
    1d10:	subs	w16, w16, w15
    1d14:	cbnz	w16, 1df8 <ferror@plt+0x6b8>
    1d18:	sbfiz	x16, x4, #2, #32
    1d1c:	sub	w4, w4, #0x1
    1d20:	ldr	w30, [x19, x16]
    1d24:	str	w30, [x19, x11, lsl #2]
    1d28:	str	w17, [x19, x16]
    1d2c:	sub	x11, x11, #0x1
    1d30:	cmp	w0, w11
    1d34:	b.le	1d00 <ferror@plt+0x5c0>
    1d38:	cmp	w10, w4
    1d3c:	b.gt	1ad4 <ferror@plt+0x394>
    1d40:	sub	w11, w10, w3
    1d44:	sub	w8, w0, w10
    1d48:	cmp	w8, w11
    1d4c:	csel	w8, w8, w11, le
    1d50:	sub	w11, w0, w8
    1d54:	add	w8, w8, w3
    1d58:	sxtw	x11, w11
    1d5c:	sub	w13, w8, w7
    1d60:	cmp	w13, #0x0
    1d64:	b.gt	1e0c <ferror@plt+0x6cc>
    1d68:	sub	w5, w4, w5
    1d6c:	sub	w4, w1, w4
    1d70:	cmp	w4, w5
    1d74:	sxtw	x8, w0
    1d78:	csel	w4, w4, w5, le
    1d7c:	sub	w7, w1, w4
    1d80:	add	w4, w4, w0
    1d84:	add	w7, w7, #0x1
    1d88:	sxtw	x7, w7
    1d8c:	sub	w11, w4, w8
    1d90:	cmp	w11, #0x0
    1d94:	b.gt	1e28 <ferror@plt+0x6e8>
    1d98:	add	w0, w3, w0
    1d9c:	sub	w5, w1, w5
    1da0:	sub	w10, w0, w10
    1da4:	add	w5, w5, #0x1
    1da8:	sub	w10, w10, #0x1
    1dac:	sub	w0, w1, w5
    1db0:	sub	w4, w10, w3
    1db4:	add	w8, w6, #0x1
    1db8:	cmp	w4, w0
    1dbc:	b.le	1e44 <ferror@plt+0x704>
    1dc0:	lsl	x6, x6, #2
    1dc4:	str	w10, [x24, x18, lsl #2]
    1dc8:	str	w5, [x23, x6]
    1dcc:	str	w1, [x24, x6]
    1dd0:	cmp	w8, #0x62
    1dd4:	b.le	1df0 <ferror@plt+0x6b0>
    1dd8:	mov	w0, #0x3ec                 	// #1004
    1ddc:	stp	w8, w14, [sp, #116]
    1de0:	str	w2, [sp, #124]
    1de4:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    1de8:	ldp	w8, w14, [sp, #116]
    1dec:	ldr	w2, [sp, #124]
    1df0:	sxtw	x6, w8
    1df4:	b	1a94 <ferror@plt+0x354>
    1df8:	b.pl	1d2c <ferror@plt+0x5ec>  // b.nfrst
    1dfc:	ldr	w11, [x13]
    1e00:	str	w17, [x13]
    1e04:	str	w11, [x30]
    1e08:	b	1ccc <ferror@plt+0x58c>
    1e0c:	ldr	w15, [x19, x11, lsl #2]
    1e10:	ldr	w13, [x19, x7, lsl #2]
    1e14:	str	w15, [x19, x7, lsl #2]
    1e18:	add	x7, x7, #0x1
    1e1c:	str	w13, [x19, x11, lsl #2]
    1e20:	add	x11, x11, #0x1
    1e24:	b	1d5c <ferror@plt+0x61c>
    1e28:	ldr	w13, [x19, x7, lsl #2]
    1e2c:	ldr	w11, [x19, x8, lsl #2]
    1e30:	str	w13, [x19, x8, lsl #2]
    1e34:	add	x8, x8, #0x1
    1e38:	str	w11, [x19, x7, lsl #2]
    1e3c:	add	x7, x7, #0x1
    1e40:	b	1d8c <ferror@plt+0x64c>
    1e44:	lsl	x6, x6, #2
    1e48:	str	w5, [x23, x18, lsl #2]
    1e4c:	str	w3, [x23, x6]
    1e50:	str	w10, [x24, x6]
    1e54:	b	1dd0 <ferror@plt+0x690>
    1e58:	ldr	w0, [sp, #112]
    1e5c:	cmp	w0, #0x3
    1e60:	b.le	1e84 <ferror@plt+0x744>
    1e64:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    1e68:	adrp	x1, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    1e6c:	add	x1, x1, #0xf2b
    1e70:	str	w2, [sp, #116]
    1e74:	ldr	x0, [x0, #4016]
    1e78:	ldr	x0, [x0]
    1e7c:	bl	1730 <fprintf@plt>
    1e80:	ldr	w2, [sp, #116]
    1e84:	lsl	w25, w25, #1
    1e88:	cmp	w2, #0x0
    1e8c:	ccmp	w26, w25, #0x1, ne  // ne = any
    1e90:	b.ge	1994 <ferror@plt+0x254>  // b.tcont
    1e94:	ldr	w0, [sp, #112]
    1e98:	cmp	w0, #0x3
    1e9c:	b.le	1eb8 <ferror@plt+0x778>
    1ea0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    1ea4:	ldr	x0, [x0, #4016]
    1ea8:	ldr	x1, [x0]
    1eac:	adrp	x0, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    1eb0:	add	x0, x0, #0xf43
    1eb4:	bl	14c0 <fputs@plt>
    1eb8:	mov	x2, #0x0                   	// #0
    1ebc:	mov	w1, #0x0                   	// #0
    1ec0:	cmp	w26, w2
    1ec4:	b.le	1f00 <ferror@plt+0x7c0>
    1ec8:	sxtw	x0, w1
    1ecc:	ldr	x3, [sp, #104]
    1ed0:	mov	w1, w0
    1ed4:	add	x0, x0, #0x1
    1ed8:	add	x3, x3, x0, lsl #2
    1edc:	ldur	w3, [x3, #-4]
    1ee0:	cbz	w3, 1ecc <ferror@plt+0x78c>
    1ee4:	ldr	x0, [sp, #104]
    1ee8:	sub	w3, w3, #0x1
    1eec:	str	w3, [x0, w1, sxtw #2]
    1ef0:	ldr	w0, [x19, x2, lsl #2]
    1ef4:	add	x2, x2, #0x1
    1ef8:	strb	w1, [x21, x0]
    1efc:	b	1ec0 <ferror@plt+0x780>
    1f00:	cmp	w1, #0xff
    1f04:	b.le	1f2c <ferror@plt+0x7ec>
    1f08:	ldp	x29, x30, [sp]
    1f0c:	mov	w0, #0x3ed                 	// #1005
    1f10:	ldp	x19, x20, [sp, #16]
    1f14:	ldp	x21, x22, [sp, #32]
    1f18:	ldp	x23, x24, [sp, #48]
    1f1c:	ldp	x25, x26, [sp, #64]
    1f20:	ldp	x27, x28, [sp, #80]
    1f24:	add	sp, sp, #0xbb0
    1f28:	b	1720 <BZ2_bz__AssertH__fail@plt>
    1f2c:	ldp	x29, x30, [sp]
    1f30:	ldp	x19, x20, [sp, #16]
    1f34:	ldp	x21, x22, [sp, #32]
    1f38:	ldp	x23, x24, [sp, #48]
    1f3c:	ldp	x25, x26, [sp, #64]
    1f40:	ldp	x27, x28, [sp, #80]
    1f44:	add	sp, sp, #0xbb0
    1f48:	ret
    1f4c:	ldrb	w7, [x2, w0, uxtw]
    1f50:	ldrb	w6, [x2, w1, uxtw]
    1f54:	cmp	w7, w6
    1f58:	b.eq	1f64 <ferror@plt+0x824>  // b.none
    1f5c:	cset	w0, hi  // hi = pmore
    1f60:	ret
    1f64:	add	w6, w0, #0x1
    1f68:	ldrb	w7, [x2, x6]
    1f6c:	add	w6, w1, #0x1
    1f70:	ldrb	w6, [x2, x6]
    1f74:	cmp	w7, w6
    1f78:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    1f7c:	add	w6, w0, #0x2
    1f80:	ldrb	w7, [x2, x6]
    1f84:	add	w6, w1, #0x2
    1f88:	ldrb	w6, [x2, x6]
    1f8c:	cmp	w7, w6
    1f90:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    1f94:	add	w6, w0, #0x3
    1f98:	ldrb	w7, [x2, x6]
    1f9c:	add	w6, w1, #0x3
    1fa0:	ldrb	w6, [x2, x6]
    1fa4:	cmp	w7, w6
    1fa8:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    1fac:	add	w6, w0, #0x4
    1fb0:	ldrb	w7, [x2, x6]
    1fb4:	add	w6, w1, #0x4
    1fb8:	ldrb	w6, [x2, x6]
    1fbc:	cmp	w7, w6
    1fc0:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    1fc4:	add	w6, w0, #0x5
    1fc8:	ldrb	w7, [x2, x6]
    1fcc:	add	w6, w1, #0x5
    1fd0:	ldrb	w6, [x2, x6]
    1fd4:	cmp	w7, w6
    1fd8:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    1fdc:	add	w6, w0, #0x6
    1fe0:	ldrb	w7, [x2, x6]
    1fe4:	add	w6, w1, #0x6
    1fe8:	ldrb	w6, [x2, x6]
    1fec:	cmp	w7, w6
    1ff0:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    1ff4:	add	w6, w0, #0x7
    1ff8:	ldrb	w7, [x2, x6]
    1ffc:	add	w6, w1, #0x7
    2000:	ldrb	w6, [x2, x6]
    2004:	cmp	w7, w6
    2008:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    200c:	add	w6, w0, #0x8
    2010:	ldrb	w7, [x2, x6]
    2014:	add	w6, w1, #0x8
    2018:	ldrb	w6, [x2, x6]
    201c:	cmp	w7, w6
    2020:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2024:	add	w6, w0, #0x9
    2028:	ldrb	w7, [x2, x6]
    202c:	add	w6, w1, #0x9
    2030:	ldrb	w6, [x2, x6]
    2034:	cmp	w7, w6
    2038:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    203c:	add	w6, w0, #0xa
    2040:	ldrb	w7, [x2, x6]
    2044:	add	w6, w1, #0xa
    2048:	ldrb	w6, [x2, x6]
    204c:	cmp	w7, w6
    2050:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2054:	add	w6, w0, #0xb
    2058:	ldrb	w7, [x2, x6]
    205c:	add	w6, w1, #0xb
    2060:	ldrb	w6, [x2, x6]
    2064:	cmp	w7, w6
    2068:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    206c:	add	w0, w0, #0xc
    2070:	add	w1, w1, #0xc
    2074:	add	w6, w4, #0x8
    2078:	ldrb	w10, [x2, w0, uxtw]
    207c:	mov	w8, w0
    2080:	ldrb	w9, [x2, w1, uxtw]
    2084:	mov	w7, w1
    2088:	cmp	w10, w9
    208c:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2090:	ldrh	w8, [x3, x8, lsl #1]
    2094:	ldrh	w7, [x3, x7, lsl #1]
    2098:	cmp	w8, w7
    209c:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    20a0:	add	w8, w0, #0x1
    20a4:	add	w7, w1, #0x1
    20a8:	ldrb	w10, [x2, x8]
    20ac:	ldrb	w9, [x2, x7]
    20b0:	cmp	w10, w9
    20b4:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    20b8:	ldrh	w8, [x3, x8, lsl #1]
    20bc:	ldrh	w7, [x3, x7, lsl #1]
    20c0:	cmp	w8, w7
    20c4:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    20c8:	add	w8, w0, #0x2
    20cc:	add	w7, w1, #0x2
    20d0:	ldrb	w10, [x2, x8]
    20d4:	ldrb	w9, [x2, x7]
    20d8:	cmp	w10, w9
    20dc:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    20e0:	ldrh	w8, [x3, x8, lsl #1]
    20e4:	ldrh	w7, [x3, x7, lsl #1]
    20e8:	cmp	w8, w7
    20ec:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    20f0:	add	w8, w0, #0x3
    20f4:	add	w7, w1, #0x3
    20f8:	ldrb	w10, [x2, x8]
    20fc:	ldrb	w9, [x2, x7]
    2100:	cmp	w10, w9
    2104:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2108:	ldrh	w8, [x3, x8, lsl #1]
    210c:	ldrh	w7, [x3, x7, lsl #1]
    2110:	cmp	w8, w7
    2114:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2118:	add	w8, w0, #0x4
    211c:	add	w7, w1, #0x4
    2120:	ldrb	w10, [x2, x8]
    2124:	ldrb	w9, [x2, x7]
    2128:	cmp	w10, w9
    212c:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2130:	ldrh	w8, [x3, x8, lsl #1]
    2134:	ldrh	w7, [x3, x7, lsl #1]
    2138:	cmp	w8, w7
    213c:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2140:	add	w8, w0, #0x5
    2144:	add	w7, w1, #0x5
    2148:	ldrb	w10, [x2, x8]
    214c:	ldrb	w9, [x2, x7]
    2150:	cmp	w10, w9
    2154:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2158:	ldrh	w8, [x3, x8, lsl #1]
    215c:	ldrh	w7, [x3, x7, lsl #1]
    2160:	cmp	w8, w7
    2164:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2168:	add	w8, w0, #0x6
    216c:	add	w7, w1, #0x6
    2170:	ldrb	w10, [x2, x8]
    2174:	ldrb	w9, [x2, x7]
    2178:	cmp	w10, w9
    217c:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2180:	ldrh	w8, [x3, x8, lsl #1]
    2184:	ldrh	w7, [x3, x7, lsl #1]
    2188:	cmp	w8, w7
    218c:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    2190:	add	w8, w0, #0x7
    2194:	add	w7, w1, #0x7
    2198:	ldrb	w10, [x2, x8]
    219c:	ldrb	w9, [x2, x7]
    21a0:	cmp	w10, w9
    21a4:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    21a8:	ldrh	w8, [x3, x8, lsl #1]
    21ac:	ldrh	w7, [x3, x7, lsl #1]
    21b0:	cmp	w8, w7
    21b4:	b.ne	1f5c <ferror@plt+0x81c>  // b.any
    21b8:	add	w0, w0, #0x8
    21bc:	add	w1, w1, #0x8
    21c0:	cmp	w4, w0
    21c4:	b.hi	21cc <ferror@plt+0xa8c>  // b.pmore
    21c8:	sub	w0, w0, w4
    21cc:	cmp	w4, w1
    21d0:	b.hi	21d8 <ferror@plt+0xa98>  // b.pmore
    21d4:	sub	w1, w1, w4
    21d8:	ldr	w7, [x5]
    21dc:	subs	w6, w6, #0x8
    21e0:	sub	w7, w7, #0x1
    21e4:	str	w7, [x5]
    21e8:	b.pl	2078 <ferror@plt+0x938>  // b.nfrst
    21ec:	mov	w0, #0x0                   	// #0
    21f0:	b	1f60 <ferror@plt+0x820>
    21f4:	mov	x12, #0x1290                	// #4752
    21f8:	sub	sp, sp, x12
    21fc:	stp	x29, x30, [sp]
    2200:	mov	x29, sp
    2204:	stp	x19, x20, [sp, #16]
    2208:	mov	x19, x0
    220c:	mov	w0, w5
    2210:	stp	x21, x22, [sp, #32]
    2214:	mov	x20, x3
    2218:	mov	x21, x1
    221c:	stp	x23, x24, [sp, #48]
    2220:	mov	x22, x2
    2224:	mov	w23, w4
    2228:	stp	x25, x26, [sp, #64]
    222c:	mov	x24, x6
    2230:	cmp	w0, #0x3
    2234:	stp	x27, x28, [sp, #80]
    2238:	str	w5, [sp, #132]
    223c:	b.le	2258 <ferror@plt+0xb18>
    2240:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    2244:	ldr	x0, [x0, #4016]
    2248:	ldr	x1, [x0]
    224c:	adrp	x0, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    2250:	add	x0, x0, #0xf65
    2254:	bl	14c0 <fputs@plt>
    2258:	mov	x0, #0x10000               	// #65536
    225c:	str	wzr, [x20, x0, lsl #2]
    2260:	sub	x0, x0, #0x1
    2264:	cmn	x0, #0x1
    2268:	b.ne	225c <ferror@plt+0xb1c>  // b.any
    226c:	mov	x3, x21
    2270:	sub	w1, w23, #0x1
    2274:	sub	x4, x22, #0x2
    2278:	sub	x5, x22, #0x4
    227c:	sxtw	x25, w1
    2280:	sub	x6, x21, #0x2
    2284:	ldrb	w0, [x3], #-1
    2288:	sub	x7, x22, #0x6
    228c:	sub	x8, x21, #0x3
    2290:	str	w1, [sp, #160]
    2294:	mov	x1, x25
    2298:	lsl	w0, w0, #8
    229c:	cmp	w1, #0x2
    22a0:	b.gt	24f0 <ferror@plt+0xdb0>
    22a4:	sxtw	x1, w1
    22a8:	tbz	w1, #31, 2578 <ferror@plt+0xe38>
    22ac:	add	x1, x22, w23, sxtw #1
    22b0:	add	x2, x21, w23, sxtw
    22b4:	mov	x0, #0x0                   	// #0
    22b8:	ldrb	w3, [x21, x0]
    22bc:	strb	w3, [x2, x0]
    22c0:	strh	wzr, [x1, x0, lsl #1]
    22c4:	add	x0, x0, #0x1
    22c8:	cmp	x0, #0x22
    22cc:	b.ne	22b8 <ferror@plt+0xb78>  // b.any
    22d0:	ldr	w0, [sp, #132]
    22d4:	cmp	w0, #0x3
    22d8:	b.le	22f4 <ferror@plt+0xbb4>
    22dc:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    22e0:	ldr	x0, [x0, #4016]
    22e4:	ldr	x1, [x0]
    22e8:	adrp	x0, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    22ec:	add	x0, x0, #0xef8
    22f0:	bl	14c0 <fputs@plt>
    22f4:	add	x2, x20, #0x40, lsl #12
    22f8:	add	x0, x20, #0x4
    22fc:	add	x2, x2, #0x4
    2300:	ldp	w3, w1, [x0, #-4]
    2304:	add	w1, w1, w3
    2308:	str	w1, [x0], #4
    230c:	cmp	x2, x0
    2310:	b.ne	2300 <ferror@plt+0xbc0>  // b.any
    2314:	ldrb	w1, [x21]
    2318:	add	x25, x21, x25
    231c:	ldr	w0, [sp, #160]
    2320:	ubfiz	w1, w1, #8, #8
    2324:	cmp	w0, #0x2
    2328:	b.gt	25a0 <ferror@plt+0xe60>
    232c:	sxtw	x0, w0
    2330:	tbz	w0, #31, 2638 <ferror@plt+0xef8>
    2334:	add	x1, sp, #0xe0
    2338:	add	x2, sp, #0x690
    233c:	mov	x0, #0x0                   	// #0
    2340:	strb	wzr, [x0, x1]
    2344:	str	w0, [x2, x0, lsl #2]
    2348:	add	x0, x0, #0x1
    234c:	cmp	x0, #0x100
    2350:	b.ne	2340 <ferror@plt+0xc00>  // b.any
    2354:	mov	w1, #0x5                   	// #5
    2358:	mov	w0, #0x1                   	// #1
    235c:	add	w0, w0, w0, lsl #1
    2360:	subs	w1, w1, #0x1
    2364:	add	w0, w0, #0x1
    2368:	b.ne	235c <ferror@plt+0xc1c>  // b.any
    236c:	mov	w12, #0x3                   	// #3
    2370:	sdiv	w0, w0, w12
    2374:	neg	w4, w0
    2378:	sxtw	x10, w0
    237c:	mov	x1, x10
    2380:	sxtw	x4, w4
    2384:	cmp	w1, #0xff
    2388:	b.le	2660 <ferror@plt+0xf20>
    238c:	cmp	w0, #0x1
    2390:	b.ne	2370 <ferror@plt+0xc30>  // b.any
    2394:	add	x0, sp, #0x690
    2398:	str	xzr, [sp, #104]
    239c:	str	wzr, [sp, #128]
    23a0:	str	x0, [sp, #176]
    23a4:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    23a8:	add	x0, x0, #0x40
    23ac:	str	x0, [sp, #168]
    23b0:	ldr	x1, [sp, #104]
    23b4:	mov	w28, #0x0                   	// #0
    23b8:	ldr	x0, [sp, #176]
    23bc:	ldr	w25, [x0, x1, lsl #2]
    23c0:	lsl	w0, w25, #8
    23c4:	str	w0, [sp, #164]
    23c8:	add	x0, sp, #0x1e0
    23cc:	str	x0, [sp, #144]
    23d0:	cmp	w25, w28
    23d4:	b.eq	2ba8 <ferror@plt+0x1468>  // b.none
    23d8:	ldr	w0, [sp, #164]
    23dc:	add	w0, w28, w0
    23e0:	sbfiz	x1, x0, #2, #32
    23e4:	str	x1, [sp, #152]
    23e8:	add	x0, x20, w0, sxtw #2
    23ec:	ldr	w27, [x20, x1]
    23f0:	tbnz	w27, #21, 2b94 <ferror@plt+0x1454>
    23f4:	ldr	w26, [x0, #4]
    23f8:	and	w27, w27, #0xffdfffff
    23fc:	and	w26, w26, #0xffdfffff
    2400:	sub	w26, w26, #0x1
    2404:	cmp	w27, w26
    2408:	b.ge	2b94 <ferror@plt+0x1454>  // b.tcont
    240c:	sub	w0, w26, w27
    2410:	add	w0, w0, #0x1
    2414:	str	w0, [sp, #200]
    2418:	ldr	w0, [sp, #132]
    241c:	cmp	w0, #0x3
    2420:	b.le	244c <ferror@plt+0xd0c>
    2424:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    2428:	ldr	w4, [sp, #128]
    242c:	ldr	w5, [sp, #200]
    2430:	adrp	x1, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    2434:	ldr	x0, [x0, #4016]
    2438:	mov	w3, w28
    243c:	mov	w2, w25
    2440:	add	x1, x1, #0xf87
    2444:	ldr	x0, [x0]
    2448:	bl	1730 <fprintf@plt>
    244c:	mov	w0, #0x2                   	// #2
    2450:	str	w27, [sp, #480]
    2454:	str	w26, [sp, #880]
    2458:	mov	w26, #0x1                   	// #1
    245c:	str	w0, [sp, #1280]
    2460:	add	x0, sp, #0x370
    2464:	str	x0, [sp, #136]
    2468:	sub	w6, w26, #0x1
    246c:	ldr	x1, [sp, #144]
    2470:	sbfiz	x0, x6, #2, #32
    2474:	sxtw	x5, w6
    2478:	ldr	w13, [x1, x0]
    247c:	ldr	x1, [sp, #136]
    2480:	ldr	w11, [x1, x0]
    2484:	add	x1, sp, #0x500
    2488:	ldr	w12, [x1, x0]
    248c:	sub	w0, w11, w13
    2490:	cmp	w0, #0x13
    2494:	b.le	24a0 <ferror@plt+0xd60>
    2498:	cmp	w12, #0xe
    249c:	b.le	28cc <ferror@plt+0x118c>
    24a0:	add	w0, w0, #0x1
    24a4:	cmp	w0, #0x1
    24a8:	b.gt	26d4 <ferror@plt+0xf94>
    24ac:	ldr	w0, [x24]
    24b0:	tbz	w0, #31, 2b8c <ferror@plt+0x144c>
    24b4:	ldr	w0, [sp, #128]
    24b8:	ldr	w1, [sp, #200]
    24bc:	add	w0, w0, w1
    24c0:	str	w0, [sp, #128]
    24c4:	ldr	w0, [x24]
    24c8:	tbz	w0, #31, 2b94 <ferror@plt+0x1454>
    24cc:	mov	x12, #0x1290                	// #4752
    24d0:	ldp	x29, x30, [sp]
    24d4:	ldp	x19, x20, [sp, #16]
    24d8:	ldp	x21, x22, [sp, #32]
    24dc:	ldp	x23, x24, [sp, #48]
    24e0:	ldp	x25, x26, [sp, #64]
    24e4:	ldp	x27, x28, [sp, #80]
    24e8:	add	sp, sp, x12
    24ec:	ret
    24f0:	strh	wzr, [x22, x1, lsl #1]
    24f4:	ldrb	w2, [x21, x1]
    24f8:	lsl	w2, w2, #8
    24fc:	orr	w0, w2, w0, asr #8
    2500:	sbfiz	x9, x0, #2, #32
    2504:	ldr	w2, [x20, x9]
    2508:	add	w2, w2, #0x1
    250c:	str	w2, [x20, x9]
    2510:	strh	wzr, [x4, x1, lsl #1]
    2514:	ldrb	w2, [x3, x1]
    2518:	lsl	w2, w2, #8
    251c:	orr	w0, w2, w0, asr #8
    2520:	sbfiz	x9, x0, #2, #32
    2524:	ldr	w2, [x20, x9]
    2528:	add	w2, w2, #0x1
    252c:	str	w2, [x20, x9]
    2530:	strh	wzr, [x5, x1, lsl #1]
    2534:	ldrb	w2, [x6, x1]
    2538:	lsl	w2, w2, #8
    253c:	orr	w0, w2, w0, asr #8
    2540:	sbfiz	x9, x0, #2, #32
    2544:	ldr	w2, [x20, x9]
    2548:	add	w2, w2, #0x1
    254c:	str	w2, [x20, x9]
    2550:	strh	wzr, [x7, x1, lsl #1]
    2554:	ldrb	w2, [x8, x1]
    2558:	sub	x1, x1, #0x4
    255c:	lsl	w2, w2, #8
    2560:	orr	w0, w2, w0, asr #8
    2564:	sbfiz	x9, x0, #2, #32
    2568:	ldr	w2, [x20, x9]
    256c:	add	w2, w2, #0x1
    2570:	str	w2, [x20, x9]
    2574:	b	229c <ferror@plt+0xb5c>
    2578:	strh	wzr, [x22, x1, lsl #1]
    257c:	ldrb	w2, [x21, x1]
    2580:	sub	x1, x1, #0x1
    2584:	lsl	w2, w2, #8
    2588:	orr	w0, w2, w0, asr #8
    258c:	sbfiz	x3, x0, #2, #32
    2590:	ldr	w2, [x20, x3]
    2594:	add	w2, w2, #0x1
    2598:	str	w2, [x20, x3]
    259c:	b	22a8 <ferror@plt+0xb68>
    25a0:	ldrb	w2, [x25]
    25a4:	lsr	w1, w1, #8
    25a8:	sub	x25, x25, #0x4
    25ac:	orr	w1, w1, w2, lsl #8
    25b0:	ubfiz	x3, x1, #2, #16
    25b4:	lsr	w1, w1, #8
    25b8:	ldr	w2, [x20, x3]
    25bc:	sub	w2, w2, #0x1
    25c0:	str	w2, [x20, x3]
    25c4:	str	w0, [x19, w2, sxtw #2]
    25c8:	ldrb	w2, [x25, #3]
    25cc:	orr	w1, w1, w2, lsl #8
    25d0:	ubfiz	x3, x1, #2, #16
    25d4:	lsr	w1, w1, #8
    25d8:	ldr	w2, [x20, x3]
    25dc:	sub	w2, w2, #0x1
    25e0:	str	w2, [x20, x3]
    25e4:	sub	w3, w0, #0x1
    25e8:	str	w3, [x19, w2, sxtw #2]
    25ec:	ldrb	w2, [x25, #2]
    25f0:	orr	w2, w1, w2, lsl #8
    25f4:	ubfiz	x3, x2, #2, #16
    25f8:	lsr	w2, w2, #8
    25fc:	ldr	w1, [x20, x3]
    2600:	sub	w1, w1, #0x1
    2604:	str	w1, [x20, x3]
    2608:	sub	w3, w0, #0x2
    260c:	str	w3, [x19, w1, sxtw #2]
    2610:	ldrb	w1, [x25, #1]
    2614:	orr	w1, w2, w1, lsl #8
    2618:	ubfiz	x3, x1, #2, #16
    261c:	ldr	w2, [x20, x3]
    2620:	sub	w2, w2, #0x1
    2624:	str	w2, [x20, x3]
    2628:	sub	w3, w0, #0x3
    262c:	sub	w0, w0, #0x4
    2630:	str	w3, [x19, w2, sxtw #2]
    2634:	b	2324 <ferror@plt+0xbe4>
    2638:	ldrb	w2, [x21, x0]
    263c:	lsr	w1, w1, #8
    2640:	orr	w1, w1, w2, lsl #8
    2644:	ubfiz	x3, x1, #2, #32
    2648:	ldr	w2, [x20, x3]
    264c:	sub	w2, w2, #0x1
    2650:	str	w2, [x20, x3]
    2654:	str	w0, [x19, w2, sxtw #2]
    2658:	sub	x0, x0, #0x1
    265c:	b	2330 <ferror@plt+0xbf0>
    2660:	ldr	w6, [x2, x1, lsl #2]
    2664:	add	w3, w6, #0x1
    2668:	lsl	w5, w6, #8
    266c:	lsl	w3, w3, #8
    2670:	ldr	w7, [x20, w3, sxtw #2]
    2674:	ldr	w3, [x20, w5, sxtw #2]
    2678:	sub	x5, x1, x10
    267c:	sub	w7, w7, w3
    2680:	mov	x3, x1
    2684:	ldr	w9, [x2, x5, lsl #2]
    2688:	mov	w11, w5
    268c:	add	w8, w9, #0x1
    2690:	lsl	w13, w9, #8
    2694:	lsl	w8, w8, #8
    2698:	ldr	w13, [x20, w13, sxtw #2]
    269c:	ldr	w8, [x20, w8, sxtw #2]
    26a0:	sub	w8, w8, w13
    26a4:	cmp	w8, w7
    26a8:	b.hi	26b4 <ferror@plt+0xf74>  // b.pmore
    26ac:	mov	w11, w3
    26b0:	b	26c8 <ferror@plt+0xf88>
    26b4:	str	w9, [x2, x3, lsl #2]
    26b8:	add	x3, x3, x4
    26bc:	add	x5, x5, x4
    26c0:	cmp	w0, w3
    26c4:	b.le	2684 <ferror@plt+0xf44>
    26c8:	add	x1, x1, #0x1
    26cc:	str	w6, [x2, w11, sxtw #2]
    26d0:	b	2384 <ferror@plt+0xc44>
    26d4:	mov	x1, #0x0                   	// #0
    26d8:	ldr	x2, [sp, #168]
    26dc:	mov	w26, w1
    26e0:	add	x1, x1, #0x1
    26e4:	ldr	w2, [x2, x1, lsl #2]
    26e8:	cmp	w0, w2
    26ec:	b.gt	26d8 <ferror@plt+0xf98>
    26f0:	sxtw	x0, w26
    26f4:	str	x0, [sp, #120]
    26f8:	add	x0, x19, #0x4
    26fc:	str	x0, [sp, #192]
    2700:	ldr	w0, [sp, #120]
    2704:	cmn	w0, #0x1
    2708:	b.eq	24ac <ferror@plt+0xd6c>  // b.none
    270c:	ldr	x1, [sp, #120]
    2710:	ldr	x0, [sp, #168]
    2714:	ldr	w26, [x0, x1, lsl #2]
    2718:	add	w0, w13, w26
    271c:	neg	w27, w26
    2720:	sxtw	x15, w26
    2724:	str	w0, [sp, #112]
    2728:	sxtw	x14, w0
    272c:	mov	x0, #0xfffffffffffffffc    	// #-4
    2730:	sxtw	x27, w27
    2734:	madd	x15, x15, x0, x19
    2738:	add	x0, x19, #0x8
    273c:	str	x0, [sp, #184]
    2740:	cmp	w11, w14
    2744:	b.lt	28bc <ferror@plt+0x117c>  // b.tstop
    2748:	ldr	w9, [x19, x14, lsl #2]
    274c:	mov	x18, x14
    2750:	add	w1, w9, w12
    2754:	sub	w8, w18, w26
    2758:	ldr	w0, [x15, x18, lsl #2]
    275c:	mov	x5, x24
    2760:	mov	w4, w23
    2764:	mov	x3, x22
    2768:	mov	x2, x21
    276c:	add	w0, w12, w0
    2770:	stp	w1, w8, [sp, #204]
    2774:	stp	w6, w9, [sp, #212]
    2778:	bl	1f4c <ferror@plt+0x80c>
    277c:	ldp	w1, w8, [sp, #204]
    2780:	tst	w0, #0xff
    2784:	ldp	w6, w9, [sp, #212]
    2788:	b.ne	2794 <ferror@plt+0x1054>  // b.any
    278c:	mov	w8, w18
    2790:	b	27ac <ferror@plt+0x106c>
    2794:	ldr	w0, [x15, x18, lsl #2]
    2798:	str	w0, [x19, x18, lsl #2]
    279c:	add	x18, x18, x27
    27a0:	ldr	w0, [sp, #112]
    27a4:	cmp	w0, w18
    27a8:	b.le	2754 <ferror@plt+0x1014>
    27ac:	str	w9, [x19, w8, sxtw #2]
    27b0:	add	w0, w14, #0x1
    27b4:	mov	w8, w14
    27b8:	cmp	w11, w0
    27bc:	b.lt	28bc <ferror@plt+0x117c>  // b.tstop
    27c0:	ldr	x0, [sp, #192]
    27c4:	add	x18, x14, #0x1
    27c8:	ldr	w10, [x0, x14, lsl #2]
    27cc:	add	w1, w12, w10
    27d0:	sub	w9, w18, w26
    27d4:	ldr	w0, [x15, x18, lsl #2]
    27d8:	mov	x5, x24
    27dc:	mov	w4, w23
    27e0:	mov	x3, x22
    27e4:	mov	x2, x21
    27e8:	add	w0, w12, w0
    27ec:	stp	w1, w9, [sp, #204]
    27f0:	stp	w6, w10, [sp, #212]
    27f4:	str	w8, [sp, #220]
    27f8:	bl	1f4c <ferror@plt+0x80c>
    27fc:	ldp	w1, w9, [sp, #204]
    2800:	tst	w0, #0xff
    2804:	ldp	w6, w10, [sp, #212]
    2808:	ldr	w8, [sp, #220]
    280c:	b.ne	2818 <ferror@plt+0x10d8>  // b.any
    2810:	mov	w9, w18
    2814:	b	2830 <ferror@plt+0x10f0>
    2818:	ldr	w0, [x15, x18, lsl #2]
    281c:	str	w0, [x19, x18, lsl #2]
    2820:	add	x18, x18, x27
    2824:	ldr	w0, [sp, #112]
    2828:	cmp	w0, w18
    282c:	b.le	27d0 <ferror@plt+0x1090>
    2830:	str	w10, [x19, w9, sxtw #2]
    2834:	add	w8, w8, #0x2
    2838:	cmp	w11, w8
    283c:	b.lt	28bc <ferror@plt+0x117c>  // b.tstop
    2840:	ldr	x0, [sp, #184]
    2844:	add	x18, x14, #0x2
    2848:	ldr	w9, [x0, x14, lsl #2]
    284c:	add	w1, w12, w9
    2850:	sub	w8, w18, w26
    2854:	ldr	w0, [x15, x18, lsl #2]
    2858:	mov	x5, x24
    285c:	mov	w4, w23
    2860:	mov	x3, x22
    2864:	mov	x2, x21
    2868:	add	w0, w12, w0
    286c:	stp	w1, w8, [sp, #204]
    2870:	stp	w6, w9, [sp, #212]
    2874:	bl	1f4c <ferror@plt+0x80c>
    2878:	ldp	w1, w8, [sp, #204]
    287c:	tst	w0, #0xff
    2880:	ldp	w6, w9, [sp, #212]
    2884:	b.ne	2890 <ferror@plt+0x1150>  // b.any
    2888:	mov	w8, w18
    288c:	b	28a8 <ferror@plt+0x1168>
    2890:	ldr	w0, [x15, x18, lsl #2]
    2894:	str	w0, [x19, x18, lsl #2]
    2898:	add	x18, x18, x27
    289c:	ldr	w0, [sp, #112]
    28a0:	cmp	w0, w18
    28a4:	b.le	2850 <ferror@plt+0x1110>
    28a8:	str	w9, [x19, w8, sxtw #2]
    28ac:	add	x14, x14, #0x3
    28b0:	ldr	w0, [x24]
    28b4:	tbz	w0, #31, 2740 <ferror@plt+0x1000>
    28b8:	b	24b4 <ferror@plt+0xd74>
    28bc:	ldr	x0, [sp, #120]
    28c0:	sub	x0, x0, #0x1
    28c4:	str	x0, [sp, #120]
    28c8:	b	2700 <ferror@plt+0xfc0>
    28cc:	ldr	w1, [x19, w11, sxtw #2]
    28d0:	sxtw	x8, w13
    28d4:	ldr	w0, [x19, w13, sxtw #2]
    28d8:	add	x3, x19, w13, sxtw #2
    28dc:	add	w1, w12, w1
    28e0:	add	w0, w12, w0
    28e4:	ldrb	w7, [x21, x1]
    28e8:	add	w1, w13, w11
    28ec:	ldrb	w0, [x21, x0]
    28f0:	asr	w1, w1, #1
    28f4:	cmp	w0, w7
    28f8:	ldr	w1, [x19, w1, sxtw #2]
    28fc:	add	w1, w12, w1
    2900:	ldrb	w1, [x21, x1]
    2904:	b.ls	2914 <ferror@plt+0x11d4>  // b.plast
    2908:	mov	w2, w0
    290c:	mov	w0, w7
    2910:	mov	w7, w2
    2914:	cmp	w1, w7
    2918:	b.cs	2928 <ferror@plt+0x11e8>  // b.hs, b.nlast
    291c:	cmp	w0, w1
    2920:	csel	w7, w0, w1, hi  // hi = pmore
    2924:	and	w7, w7, #0xff
    2928:	mov	w0, w13
    292c:	mov	w2, w11
    2930:	mov	w4, w13
    2934:	mov	w1, w11
    2938:	cmp	w0, w1
    293c:	b.gt	29bc <ferror@plt+0x127c>
    2940:	ldr	w10, [x3]
    2944:	add	w9, w12, w10
    2948:	ldrb	w9, [x21, x9]
    294c:	sub	w9, w9, w7
    2950:	cmp	w9, #0x0
    2954:	cbnz	w9, 2978 <ferror@plt+0x1238>
    2958:	sbfiz	x9, x4, #2, #32
    295c:	add	w4, w4, #0x1
    2960:	ldr	w14, [x19, x9]
    2964:	str	w14, [x3]
    2968:	str	w10, [x19, x9]
    296c:	add	w0, w0, #0x1
    2970:	add	x3, x3, #0x4
    2974:	b	2938 <ferror@plt+0x11f8>
    2978:	b.le	296c <ferror@plt+0x122c>
    297c:	sxtw	x9, w1
    2980:	ldr	w14, [x19, x9, lsl #2]
    2984:	add	x15, x19, x9, lsl #2
    2988:	add	w1, w12, w14
    298c:	ldrb	w10, [x21, x1]
    2990:	sub	w1, w9, #0x1
    2994:	subs	w10, w10, w7
    2998:	cbnz	w10, 29dc <ferror@plt+0x129c>
    299c:	sbfiz	x10, x2, #2, #32
    29a0:	sub	w2, w2, #0x1
    29a4:	ldr	w15, [x19, x10]
    29a8:	str	w15, [x19, x9, lsl #2]
    29ac:	str	w14, [x19, x10]
    29b0:	sub	x9, x9, #0x1
    29b4:	cmp	w0, w9
    29b8:	b.le	2980 <ferror@plt+0x1240>
    29bc:	add	w7, w12, #0x1
    29c0:	cmp	w4, w2
    29c4:	b.le	29f0 <ferror@plt+0x12b0>
    29c8:	add	x0, sp, #0x500
    29cc:	str	w7, [x0, w6, sxtw #2]
    29d0:	mov	w6, w26
    29d4:	mov	w26, w6
    29d8:	b	2b38 <ferror@plt+0x13f8>
    29dc:	b.pl	29b0 <ferror@plt+0x1270>  // b.nfrst
    29e0:	ldr	w9, [x3]
    29e4:	str	w14, [x3]
    29e8:	str	w9, [x15]
    29ec:	b	296c <ferror@plt+0x122c>
    29f0:	sub	w6, w4, w13
    29f4:	sub	w3, w0, w4
    29f8:	cmp	w3, w6
    29fc:	csel	w3, w3, w6, le
    2a00:	sub	w6, w0, w3
    2a04:	add	w3, w3, w13
    2a08:	sxtw	x6, w6
    2a0c:	sub	w9, w3, w8
    2a10:	cmp	w9, #0x0
    2a14:	b.gt	2b4c <ferror@plt+0x140c>
    2a18:	sub	w1, w2, w1
    2a1c:	sub	w2, w11, w2
    2a20:	cmp	w2, w1
    2a24:	sxtw	x6, w0
    2a28:	csel	w2, w2, w1, le
    2a2c:	sub	w3, w11, w2
    2a30:	add	w2, w2, w0
    2a34:	add	w3, w3, #0x1
    2a38:	sxtw	x3, w3
    2a3c:	sub	w8, w2, w6
    2a40:	cmp	w8, #0x0
    2a44:	b.gt	2b68 <ferror@plt+0x1428>
    2a48:	add	w0, w13, w0
    2a4c:	sub	w1, w11, w1
    2a50:	sub	w4, w0, w4
    2a54:	add	w2, w1, #0x1
    2a58:	sub	w0, w4, #0x1
    2a5c:	sub	w3, w11, w2
    2a60:	sub	w6, w0, w13
    2a64:	cmp	w6, w3
    2a68:	b.ge	2a84 <ferror@plt+0x1344>  // b.tcont
    2a6c:	mov	w3, w0
    2a70:	mov	w0, w11
    2a74:	mov	w11, w3
    2a78:	mov	w3, w13
    2a7c:	mov	w13, w2
    2a80:	mov	w2, w3
    2a84:	sub	w3, w11, w2
    2a88:	sub	w6, w1, w4
    2a8c:	cmp	w3, w6
    2a90:	b.ge	2b84 <ferror@plt+0x1444>  // b.tcont
    2a94:	mov	w3, w11
    2a98:	mov	w11, w1
    2a9c:	mov	w1, w3
    2aa0:	mov	w3, w2
    2aa4:	mov	w6, w7
    2aa8:	mov	w2, w4
    2aac:	mov	w7, w12
    2ab0:	mov	w4, w3
    2ab4:	sub	w3, w0, w13
    2ab8:	sub	w8, w11, w2
    2abc:	cmp	w3, w8
    2ac0:	b.ge	2ae8 <ferror@plt+0x13a8>  // b.tcont
    2ac4:	mov	w3, w12
    2ac8:	mov	w12, w6
    2acc:	mov	w6, w3
    2ad0:	mov	w3, w0
    2ad4:	mov	w0, w11
    2ad8:	mov	w11, w3
    2adc:	mov	w3, w13
    2ae0:	mov	w13, w2
    2ae4:	mov	w2, w3
    2ae8:	ldr	x3, [sp, #144]
    2aec:	lsl	x5, x5, #2
    2af0:	str	w13, [x3, x5]
    2af4:	ldr	x3, [sp, #136]
    2af8:	str	w0, [x3, x5]
    2afc:	add	x3, sp, #0x500
    2b00:	sbfiz	x0, x26, #2, #32
    2b04:	str	w12, [x3, x5]
    2b08:	ldr	x5, [sp, #144]
    2b0c:	str	w6, [x3, x0]
    2b10:	str	w2, [x5, x0]
    2b14:	ldr	x2, [sp, #136]
    2b18:	str	w11, [x2, x0]
    2b1c:	add	w0, w26, #0x1
    2b20:	ldr	x2, [sp, #136]
    2b24:	sbfiz	x0, x0, #2, #32
    2b28:	add	w26, w26, #0x2
    2b2c:	str	w4, [x5, x0]
    2b30:	str	w7, [x3, x0]
    2b34:	str	w1, [x2, x0]
    2b38:	cmp	w26, #0x61
    2b3c:	b.le	2468 <ferror@plt+0xd28>
    2b40:	mov	w0, #0x3e9                 	// #1001
    2b44:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    2b48:	b	2468 <ferror@plt+0xd28>
    2b4c:	ldr	w10, [x19, x6, lsl #2]
    2b50:	ldr	w9, [x19, x8, lsl #2]
    2b54:	str	w10, [x19, x8, lsl #2]
    2b58:	add	x8, x8, #0x1
    2b5c:	str	w9, [x19, x6, lsl #2]
    2b60:	add	x6, x6, #0x1
    2b64:	b	2a0c <ferror@plt+0x12cc>
    2b68:	ldr	w9, [x19, x3, lsl #2]
    2b6c:	ldr	w8, [x19, x6, lsl #2]
    2b70:	str	w9, [x19, x6, lsl #2]
    2b74:	add	x6, x6, #0x1
    2b78:	str	w8, [x19, x3, lsl #2]
    2b7c:	add	x3, x3, #0x1
    2b80:	b	2a3c <ferror@plt+0x12fc>
    2b84:	mov	w6, w12
    2b88:	b	2ab4 <ferror@plt+0x1374>
    2b8c:	cbnz	w6, 29d4 <ferror@plt+0x1294>
    2b90:	b	24b4 <ferror@plt+0xd74>
    2b94:	ldr	x0, [sp, #152]
    2b98:	ldr	x1, [sp, #152]
    2b9c:	ldr	w0, [x20, x0]
    2ba0:	orr	w0, w0, #0x200000
    2ba4:	str	w0, [x20, x1]
    2ba8:	add	w28, w28, #0x1
    2bac:	cmp	w28, #0x100
    2bb0:	b.ne	23d0 <ferror@plt+0xc90>  // b.any
    2bb4:	add	x28, sp, #0xe0
    2bb8:	sxtw	x27, w25
    2bbc:	ldrb	w0, [x28, w25, sxtw]
    2bc0:	cbz	w0, 2bcc <ferror@plt+0x148c>
    2bc4:	mov	w0, #0x3ee                 	// #1006
    2bc8:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    2bcc:	add	x26, x20, x27, lsl #2
    2bd0:	add	x5, sp, #0xa90
    2bd4:	mov	x2, x26
    2bd8:	add	x4, sp, #0xe90
    2bdc:	mov	x0, #0x0                   	// #0
    2be0:	ldr	w1, [x2]
    2be4:	and	w1, w1, #0xffdfffff
    2be8:	str	w1, [x0, x5]
    2bec:	ldr	w1, [x2, #4]
    2bf0:	add	x2, x2, #0x400
    2bf4:	and	w1, w1, #0xffdfffff
    2bf8:	sub	w1, w1, #0x1
    2bfc:	str	w1, [x0, x4]
    2c00:	add	x0, x0, #0x4
    2c04:	cmp	x0, #0x400
    2c08:	b.ne	2be0 <ferror@plt+0x14a0>  // b.any
    2c0c:	ldr	w0, [sp, #164]
    2c10:	lsl	x7, x27, #2
    2c14:	sbfiz	x2, x0, #2, #32
    2c18:	ldr	w0, [x20, x2]
    2c1c:	and	w0, w0, #0xffdfffff
    2c20:	sxtw	x0, w0
    2c24:	ldr	w6, [x5, x7]
    2c28:	cmp	w6, w0
    2c2c:	b.gt	2d74 <ferror@plt+0x1634>
    2c30:	add	w3, w25, #0x1
    2c34:	lsl	x8, x27, #2
    2c38:	lsl	w3, w3, #8
    2c3c:	sbfiz	x25, x3, #2, #32
    2c40:	ldr	w0, [x20, x25]
    2c44:	and	w0, w0, #0xffdfffff
    2c48:	sub	w0, w0, #0x1
    2c4c:	sxtw	x0, w0
    2c50:	ldr	w1, [x4, x8]
    2c54:	cmp	w1, w0
    2c58:	b.lt	2dac <ferror@plt+0x166c>  // b.tstop
    2c5c:	sub	w0, w6, #0x1
    2c60:	cmp	w1, w0
    2c64:	b.eq	2c88 <ferror@plt+0x1548>  // b.none
    2c68:	cbnz	w6, 2c78 <ferror@plt+0x1538>
    2c6c:	ldr	w0, [sp, #160]
    2c70:	cmp	w1, w0
    2c74:	b.eq	2c88 <ferror@plt+0x1548>  // b.none
    2c78:	mov	w0, #0x3ef                 	// #1007
    2c7c:	str	x2, [sp, #112]
    2c80:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    2c84:	ldr	x2, [sp, #112]
    2c88:	mov	w0, #0x0                   	// #0
    2c8c:	ldr	w1, [x26]
    2c90:	add	w0, w0, #0x1
    2c94:	cmp	w0, #0x100
    2c98:	orr	w1, w1, #0x200000
    2c9c:	str	w1, [x26]
    2ca0:	add	x26, x26, #0x400
    2ca4:	b.ne	2c8c <ferror@plt+0x154c>  // b.any
    2ca8:	mov	w0, #0x1                   	// #1
    2cac:	strb	w0, [x28, x27]
    2cb0:	ldr	x0, [sp, #104]
    2cb4:	cmp	x0, #0xff
    2cb8:	b.eq	2d0c <ferror@plt+0x15cc>  // b.none
    2cbc:	ldr	w1, [x20, x2]
    2cc0:	mov	w3, #0xfffe                	// #65534
    2cc4:	ldr	w0, [x20, x25]
    2cc8:	mov	w2, #0x0                   	// #0
    2ccc:	and	w1, w1, #0xffdfffff
    2cd0:	and	w0, w0, #0xffdfffff
    2cd4:	sub	w0, w0, w1
    2cd8:	asr	w4, w0, w2
    2cdc:	cmp	w4, w3
    2ce0:	b.gt	2de4 <ferror@plt+0x16a4>
    2ce4:	sub	w0, w0, #0x1
    2ce8:	add	x1, x19, w1, sxtw #2
    2cec:	sxtw	x3, w0
    2cf0:	tbz	w3, #31, 2dec <ferror@plt+0x16ac>
    2cf4:	asr	w0, w0, w2
    2cf8:	mov	w1, #0xffff                	// #65535
    2cfc:	cmp	w0, w1
    2d00:	b.le	2d0c <ferror@plt+0x15cc>
    2d04:	mov	w0, #0x3ea                 	// #1002
    2d08:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    2d0c:	ldr	x0, [sp, #104]
    2d10:	add	x0, x0, #0x1
    2d14:	str	x0, [sp, #104]
    2d18:	cmp	x0, #0x100
    2d1c:	b.ne	23b0 <ferror@plt+0xc70>  // b.any
    2d20:	ldr	w0, [sp, #132]
    2d24:	cmp	w0, #0x3
    2d28:	b.le	24cc <ferror@plt+0xd8c>
    2d2c:	ldr	w0, [sp, #128]
    2d30:	mov	w2, w23
    2d34:	ldp	x29, x30, [sp]
    2d38:	sub	w4, w23, w0
    2d3c:	mov	x3, x0
    2d40:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    2d44:	ldp	x19, x20, [sp, #16]
    2d48:	mov	x12, #0x1290                	// #4752
    2d4c:	ldr	x0, [x0, #4016]
    2d50:	adrp	x1, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    2d54:	ldp	x21, x22, [sp, #32]
    2d58:	add	x1, x1, #0xfb7
    2d5c:	ldp	x23, x24, [sp, #48]
    2d60:	ldp	x25, x26, [sp, #64]
    2d64:	ldp	x27, x28, [sp, #80]
    2d68:	ldr	x0, [x0]
    2d6c:	add	sp, sp, x12
    2d70:	b	1730 <fprintf@plt>
    2d74:	ldr	w1, [x19, x0, lsl #2]
    2d78:	subs	w1, w1, #0x1
    2d7c:	b.pl	2d84 <ferror@plt+0x1644>  // b.nfrst
    2d80:	add	w1, w1, w23
    2d84:	ldrb	w3, [x21, w1, sxtw]
    2d88:	ldrb	w6, [x28, x3]
    2d8c:	cbnz	w6, 2da4 <ferror@plt+0x1664>
    2d90:	lsl	x3, x3, #2
    2d94:	ldr	w6, [x5, x3]
    2d98:	add	w8, w6, #0x1
    2d9c:	str	w8, [x5, x3]
    2da0:	str	w1, [x19, w6, sxtw #2]
    2da4:	add	x0, x0, #0x1
    2da8:	b	2c24 <ferror@plt+0x14e4>
    2dac:	ldr	w1, [x19, x0, lsl #2]
    2db0:	subs	w1, w1, #0x1
    2db4:	b.pl	2dbc <ferror@plt+0x167c>  // b.nfrst
    2db8:	add	w1, w1, w23
    2dbc:	ldrb	w5, [x21, w1, sxtw]
    2dc0:	ldrb	w7, [x28, x5]
    2dc4:	cbnz	w7, 2ddc <ferror@plt+0x169c>
    2dc8:	lsl	x5, x5, #2
    2dcc:	ldr	w7, [x4, x5]
    2dd0:	sub	w9, w7, #0x1
    2dd4:	str	w9, [x4, x5]
    2dd8:	str	w1, [x19, w7, sxtw #2]
    2ddc:	sub	x0, x0, #0x1
    2de0:	b	2c50 <ferror@plt+0x1510>
    2de4:	add	w2, w2, #0x1
    2de8:	b	2cd8 <ferror@plt+0x1598>
    2dec:	ldr	w4, [x1, x3, lsl #2]
    2df0:	asr	w5, w3, w2
    2df4:	and	w5, w5, #0xffff
    2df8:	cmp	w4, #0x21
    2dfc:	strh	w5, [x22, w4, sxtw #1]
    2e00:	b.gt	2e0c <ferror@plt+0x16cc>
    2e04:	add	w4, w23, w4
    2e08:	strh	w5, [x22, w4, sxtw #1]
    2e0c:	sub	x3, x3, #0x1
    2e10:	b	2cf0 <ferror@plt+0x15b0>

0000000000002e14 <BZ2_blockSort@@Base>:
    2e14:	stp	x29, x30, [sp, #-80]!
    2e18:	mov	x29, sp
    2e1c:	stp	x19, x20, [sp, #16]
    2e20:	mov	x20, x0
    2e24:	stp	x21, x22, [sp, #32]
    2e28:	ldr	w21, [x0, #108]
    2e2c:	stp	x23, x24, [sp, #48]
    2e30:	ldr	w23, [x0, #656]
    2e34:	ldr	x24, [x0, #40]
    2e38:	ldr	x22, [x0, #56]
    2e3c:	mov	w0, #0x270f                	// #9999
    2e40:	cmp	w21, w0
    2e44:	b.gt	2e88 <BZ2_blockSort@@Base+0x74>
    2e48:	ldp	x0, x1, [x20, #24]
    2e4c:	mov	w4, w23
    2e50:	mov	w3, w21
    2e54:	mov	x2, x24
    2e58:	bl	1824 <ferror@plt+0xe4>
    2e5c:	ldr	w1, [x20, #108]
    2e60:	mov	w0, #0xffffffff            	// #-1
    2e64:	sub	x22, x22, #0x4
    2e68:	str	w0, [x20, #48]
    2e6c:	mov	x0, #0x0                   	// #0
    2e70:	mov	w2, w0
    2e74:	cmp	w1, w0
    2e78:	b.gt	2f48 <BZ2_blockSort@@Base+0x134>
    2e7c:	mov	w0, #0x3eb                 	// #1003
    2e80:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    2e84:	b	2f58 <BZ2_blockSort@@Base+0x144>
    2e88:	add	w2, w21, #0x22
    2e8c:	tbz	w21, #0, 2e94 <BZ2_blockSort@@Base+0x80>
    2e90:	add	w2, w21, #0x23
    2e94:	ldr	w19, [x20, #88]
    2e98:	mov	w0, #0x64                  	// #100
    2e9c:	ldr	x1, [x20, #64]
    2ea0:	cmp	w19, #0x64
    2ea4:	csel	w19, w19, w0, le
    2ea8:	mov	w0, #0x3                   	// #3
    2eac:	cmp	w19, #0x0
    2eb0:	add	x6, sp, #0x4c
    2eb4:	csinc	w19, w19, wzr, gt
    2eb8:	mov	w5, w23
    2ebc:	sub	w19, w19, #0x1
    2ec0:	mov	w4, w21
    2ec4:	mov	x3, x24
    2ec8:	add	x2, x1, w2, sxtw
    2ecc:	udiv	w19, w19, w0
    2ed0:	mov	x0, x22
    2ed4:	mul	w19, w19, w21
    2ed8:	str	w19, [sp, #76]
    2edc:	bl	21f4 <ferror@plt+0xab4>
    2ee0:	cmp	w23, #0x2
    2ee4:	b.le	2f1c <BZ2_blockSort@@Base+0x108>
    2ee8:	ldr	w2, [sp, #76]
    2eec:	scvtf	s1, w21
    2ef0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    2ef4:	adrp	x1, 9000 <BZ2_bzDecompress@@Base+0xbe8>
    2ef8:	sub	w2, w19, w2
    2efc:	mov	w3, w21
    2f00:	ldr	x0, [x0, #4016]
    2f04:	scvtf	s0, w2
    2f08:	add	x1, x1, #0xfe3
    2f0c:	ldr	x0, [x0]
    2f10:	fdiv	s0, s0, s1
    2f14:	fcvt	d0, s0
    2f18:	bl	1730 <fprintf@plt>
    2f1c:	ldr	w0, [sp, #76]
    2f20:	tbz	w0, #31, 2e5c <BZ2_blockSort@@Base+0x48>
    2f24:	cmp	w23, #0x1
    2f28:	b.le	2e48 <BZ2_blockSort@@Base+0x34>
    2f2c:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    2f30:	ldr	x0, [x0, #4016]
    2f34:	ldr	x1, [x0]
    2f38:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    2f3c:	add	x0, x0, #0x9
    2f40:	bl	14c0 <fputs@plt>
    2f44:	b	2e48 <BZ2_blockSort@@Base+0x34>
    2f48:	add	x0, x0, #0x1
    2f4c:	ldr	w3, [x22, x0, lsl #2]
    2f50:	cbnz	w3, 2e70 <BZ2_blockSort@@Base+0x5c>
    2f54:	str	w2, [x20, #48]
    2f58:	ldp	x19, x20, [sp, #16]
    2f5c:	ldp	x21, x22, [sp, #32]
    2f60:	ldp	x23, x24, [sp, #48]
    2f64:	ldp	x29, x30, [sp], #80
    2f68:	ret

0000000000002f6c <BZ2_hbMakeCodeLengths@@Base>:
    2f6c:	mov	x12, #0x1480                	// #5248
    2f70:	sub	sp, sp, x12
    2f74:	add	x6, sp, #0x460
    2f78:	mov	w5, #0x100                 	// #256
    2f7c:	stp	x29, x30, [sp]
    2f80:	mov	x29, sp
    2f84:	stp	x25, x26, [sp, #64]
    2f88:	mov	w25, w3
    2f8c:	stp	x19, x20, [sp, #16]
    2f90:	stp	x21, x22, [sp, #32]
    2f94:	mov	w21, w2
    2f98:	mov	x2, #0x0                   	// #0
    2f9c:	stp	x23, x24, [sp, #48]
    2fa0:	cmp	w21, w2
    2fa4:	b.gt	307c <BZ2_hbMakeCodeLengths@@Base+0x110>
    2fa8:	cmp	w21, #0x0
    2fac:	add	x19, sp, #0x50
    2fb0:	csel	w24, w21, wzr, ge  // ge = tcont
    2fb4:	add	x22, sp, #0xc70
    2fb8:	add	x20, sp, #0x460
    2fbc:	sub	x23, x0, #0x1
    2fc0:	add	x26, x19, w24, sxtw #2
    2fc4:	mov	w0, #0xfffffffe            	// #-2
    2fc8:	mov	w5, #0xffffffff            	// #-1
    2fcc:	str	wzr, [sp, #80]
    2fd0:	str	wzr, [sp, #1120]
    2fd4:	str	w0, [sp, #3184]
    2fd8:	mov	x0, #0x1                   	// #1
    2fdc:	mov	w4, w0
    2fe0:	cmp	w21, w0
    2fe4:	b.ge	309c <BZ2_hbMakeCodeLengths@@Base+0x130>  // b.tcont
    2fe8:	add	w0, w21, #0x1
    2fec:	sub	w6, w24, #0x2
    2ff0:	mov	x4, x26
    2ff4:	mov	w3, w24
    2ff8:	sxtw	x0, w0
    2ffc:	mov	w7, #0xffffffff            	// #-1
    3000:	cmp	w3, #0x1
    3004:	b.gt	30d8 <BZ2_hbMakeCodeLengths@@Base+0x16c>
    3008:	cmp	w21, #0x0
    300c:	sub	w0, w24, #0x1
    3010:	csel	w0, w0, wzr, gt
    3014:	add	w0, w0, w21
    3018:	cmp	w0, #0x203
    301c:	b.le	3028 <BZ2_hbMakeCodeLengths@@Base+0xbc>
    3020:	mov	w0, #0x7d2                 	// #2002
    3024:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    3028:	mov	x0, #0x1                   	// #1
    302c:	mov	w4, w0
    3030:	mov	w2, #0x0                   	// #0
    3034:	mov	w3, w0
    3038:	cmp	w21, w0
    303c:	b.ge	3248 <BZ2_hbMakeCodeLengths@@Base+0x2dc>  // b.tcont
    3040:	cbz	w2, 3250 <BZ2_hbMakeCodeLengths@@Base+0x2e4>
    3044:	add	x1, sp, #0x460
    3048:	mov	w2, #0x1                   	// #1
    304c:	mov	w3, #0x2                   	// #2
    3050:	add	x1, x1, #0x4
    3054:	cmp	w2, w21
    3058:	b.gt	2fc4 <BZ2_hbMakeCodeLengths@@Base+0x58>
    305c:	ldr	w0, [x1]
    3060:	add	w2, w2, #0x1
    3064:	asr	w0, w0, #8
    3068:	sdiv	w0, w0, w3
    306c:	add	w0, w0, #0x1
    3070:	lsl	w0, w0, #8
    3074:	str	w0, [x1]
    3078:	b	3050 <BZ2_hbMakeCodeLengths@@Base+0xe4>
    307c:	ldr	w4, [x1, x2, lsl #2]
    3080:	cmp	w4, #0x0
    3084:	lsl	w3, w4, #8
    3088:	add	x4, x6, x2, lsl #2
    308c:	csel	w3, w3, w5, ne  // ne = any
    3090:	add	x2, x2, #0x1
    3094:	str	w3, [x4, #4]
    3098:	b	2fa0 <BZ2_hbMakeCodeLengths@@Base+0x34>
    309c:	ldr	w7, [x20, x0, lsl #2]
    30a0:	sxtw	x1, w0
    30a4:	str	w5, [x22, x0, lsl #2]
    30a8:	str	w0, [x19, x0, lsl #2]
    30ac:	asr	w3, w1, #1
    30b0:	ldr	w2, [x19, w3, sxtw #2]
    30b4:	ldr	w6, [x20, w2, sxtw #2]
    30b8:	cmp	w7, w6
    30bc:	b.lt	30cc <BZ2_hbMakeCodeLengths@@Base+0x160>  // b.tstop
    30c0:	add	x0, x0, #0x1
    30c4:	str	w4, [x19, x1, lsl #2]
    30c8:	b	2fdc <BZ2_hbMakeCodeLengths@@Base+0x70>
    30cc:	str	w2, [x19, x1, lsl #2]
    30d0:	sxtw	x1, w3
    30d4:	b	30ac <BZ2_hbMakeCodeLengths@@Base+0x140>
    30d8:	ldr	w5, [x4]
    30dc:	sub	w3, w3, #0x1
    30e0:	ldr	w8, [sp, #84]
    30e4:	mov	x2, #0x1                   	// #1
    30e8:	str	w5, [sp, #84]
    30ec:	sbfiz	x10, x5, #2, #32
    30f0:	lsl	w1, w2, #1
    30f4:	cmp	w3, w1
    30f8:	b.lt	313c <BZ2_hbMakeCodeLengths@@Base+0x1d0>  // b.tstop
    30fc:	b.le	311c <BZ2_hbMakeCodeLengths@@Base+0x1b0>
    3100:	add	w9, w1, #0x1
    3104:	ldrsw	x11, [x19, w1, sxtw #2]
    3108:	ldrsw	x12, [x19, w9, sxtw #2]
    310c:	ldr	w11, [x20, x11, lsl #2]
    3110:	ldr	w12, [x20, x12, lsl #2]
    3114:	cmp	w12, w11
    3118:	csel	w1, w1, w9, ge  // ge = tcont
    311c:	ldr	w9, [x19, w1, sxtw #2]
    3120:	ldr	w12, [x20, x10]
    3124:	ldr	w11, [x20, w9, sxtw #2]
    3128:	cmp	w12, w11
    312c:	b.lt	313c <BZ2_hbMakeCodeLengths@@Base+0x1d0>  // b.tstop
    3130:	str	w9, [x19, x2, lsl #2]
    3134:	sxtw	x2, w1
    3138:	b	30f0 <BZ2_hbMakeCodeLengths@@Base+0x184>
    313c:	str	w5, [x19, x2, lsl #2]
    3140:	mov	x2, #0x1                   	// #1
    3144:	ldur	w9, [x4, #-4]
    3148:	ldr	w5, [sp, #84]
    314c:	str	w9, [sp, #84]
    3150:	sbfiz	x11, x9, #2, #32
    3154:	lsl	w1, w2, #1
    3158:	cmp	w1, w6
    315c:	b.gt	31a0 <BZ2_hbMakeCodeLengths@@Base+0x234>
    3160:	b.ge	3180 <BZ2_hbMakeCodeLengths@@Base+0x214>  // b.tcont
    3164:	add	w10, w1, #0x1
    3168:	ldrsw	x12, [x19, w1, sxtw #2]
    316c:	ldrsw	x13, [x19, w10, sxtw #2]
    3170:	ldr	w12, [x20, x12, lsl #2]
    3174:	ldr	w13, [x20, x13, lsl #2]
    3178:	cmp	w13, w12
    317c:	csel	w1, w1, w10, ge  // ge = tcont
    3180:	ldr	w10, [x19, w1, sxtw #2]
    3184:	ldr	w13, [x20, x11]
    3188:	ldr	w12, [x20, w10, sxtw #2]
    318c:	cmp	w13, w12
    3190:	b.lt	31a0 <BZ2_hbMakeCodeLengths@@Base+0x234>  // b.tstop
    3194:	str	w10, [x19, x2, lsl #2]
    3198:	sxtw	x2, w1
    319c:	b	3154 <BZ2_hbMakeCodeLengths@@Base+0x1e8>
    31a0:	sbfiz	x1, x5, #2, #32
    31a4:	str	w9, [x19, x2, lsl #2]
    31a8:	sbfiz	x2, x8, #2, #32
    31ac:	mov	w9, w0
    31b0:	stur	w0, [x4, #-4]
    31b4:	str	w0, [x22, x1]
    31b8:	ldr	w5, [x20, x1]
    31bc:	str	w0, [x22, x2]
    31c0:	ldr	w2, [x20, x2]
    31c4:	and	w1, w5, #0xff
    31c8:	str	w7, [x22, x0, lsl #2]
    31cc:	and	w8, w2, #0xff
    31d0:	and	w2, w2, #0xffffff00
    31d4:	cmp	w8, w5, uxtb
    31d8:	and	w5, w5, #0xffffff00
    31dc:	csel	w1, w1, w8, le
    31e0:	add	w2, w2, w5
    31e4:	add	w1, w1, #0x1
    31e8:	orr	w1, w1, w2
    31ec:	sxtw	x2, w3
    31f0:	str	w1, [x20, x0, lsl #2]
    31f4:	asr	w8, w2, #1
    31f8:	ldr	w5, [x19, w8, sxtw #2]
    31fc:	ldr	w10, [x20, w5, sxtw #2]
    3200:	cmp	w1, w10
    3204:	b.lt	321c <BZ2_hbMakeCodeLengths@@Base+0x2b0>  // b.tstop
    3208:	add	x0, x0, #0x1
    320c:	sub	x4, x4, #0x4
    3210:	sub	w6, w6, #0x1
    3214:	str	w9, [x19, x2, lsl #2]
    3218:	b	3000 <BZ2_hbMakeCodeLengths@@Base+0x94>
    321c:	str	w5, [x19, x2, lsl #2]
    3220:	sxtw	x2, w8
    3224:	b	31f4 <BZ2_hbMakeCodeLengths@@Base+0x288>
    3228:	add	w1, w1, #0x1
    322c:	ldr	w3, [x22, w3, sxtw #2]
    3230:	tbz	w3, #31, 3228 <BZ2_hbMakeCodeLengths@@Base+0x2bc>
    3234:	cmp	w1, w25
    3238:	strb	w1, [x23, x0]
    323c:	csel	w2, w2, w4, le
    3240:	add	x0, x0, #0x1
    3244:	b	3034 <BZ2_hbMakeCodeLengths@@Base+0xc8>
    3248:	mov	w1, #0x0                   	// #0
    324c:	b	322c <BZ2_hbMakeCodeLengths@@Base+0x2c0>
    3250:	mov	x12, #0x1480                	// #5248
    3254:	ldp	x29, x30, [sp]
    3258:	ldp	x19, x20, [sp, #16]
    325c:	ldp	x21, x22, [sp, #32]
    3260:	ldp	x23, x24, [sp, #48]
    3264:	ldp	x25, x26, [sp, #64]
    3268:	add	sp, sp, x12
    326c:	ret

0000000000003270 <BZ2_hbAssignCodes@@Base>:
    3270:	mov	w5, #0x0                   	// #0
    3274:	cmp	w2, w3
    3278:	b.le	32ac <BZ2_hbAssignCodes@@Base+0x3c>
    327c:	ret
    3280:	ldrb	w7, [x1, x6]
    3284:	cmp	w7, w2
    3288:	b.ne	3294 <BZ2_hbAssignCodes@@Base+0x24>  // b.any
    328c:	str	w5, [x0, x6, lsl #2]
    3290:	add	w5, w5, #0x1
    3294:	add	x6, x6, #0x1
    3298:	cmp	w4, w6
    329c:	b.gt	3280 <BZ2_hbAssignCodes@@Base+0x10>
    32a0:	lsl	w5, w5, #1
    32a4:	add	w2, w2, #0x1
    32a8:	b	3274 <BZ2_hbAssignCodes@@Base+0x4>
    32ac:	mov	x6, #0x0                   	// #0
    32b0:	b	3298 <BZ2_hbAssignCodes@@Base+0x28>

00000000000032b4 <BZ2_hbCreateDecodeTables@@Base>:
    32b4:	mov	w8, w4
    32b8:	mov	w9, #0x0                   	// #0
    32bc:	cmp	w8, w5
    32c0:	b.le	3368 <BZ2_hbCreateDecodeTables@@Base+0xb4>
    32c4:	mov	x2, #0x0                   	// #0
    32c8:	str	wzr, [x1, x2, lsl #2]
    32cc:	add	x2, x2, #0x1
    32d0:	cmp	x2, #0x17
    32d4:	b.ne	32c8 <BZ2_hbCreateDecodeTables@@Base+0x14>  // b.any
    32d8:	mov	x7, #0x0                   	// #0
    32dc:	cmp	w6, w7
    32e0:	b.gt	3370 <BZ2_hbCreateDecodeTables@@Base+0xbc>
    32e4:	add	x7, x1, #0x4
    32e8:	add	x6, x1, #0x5c
    32ec:	mov	x2, x7
    32f0:	ldp	w8, w3, [x2, #-4]
    32f4:	add	w3, w3, w8
    32f8:	str	w3, [x2], #4
    32fc:	cmp	x2, x6
    3300:	b.ne	32f0 <BZ2_hbCreateDecodeTables@@Base+0x3c>  // b.any
    3304:	mov	x2, #0x0                   	// #0
    3308:	str	wzr, [x0, x2, lsl #2]
    330c:	add	x2, x2, #0x1
    3310:	cmp	x2, #0x17
    3314:	b.ne	3308 <BZ2_hbCreateDecodeTables@@Base+0x54>  // b.any
    3318:	sxtw	x2, w4
    331c:	mov	w3, #0x0                   	// #0
    3320:	cmp	w5, w2
    3324:	b.ge	3390 <BZ2_hbCreateDecodeTables@@Base+0xdc>  // b.tcont
    3328:	add	w4, w4, #0x1
    332c:	sub	x0, x0, #0x4
    3330:	sxtw	x4, w4
    3334:	cmp	w5, w4
    3338:	b.ge	33b4 <BZ2_hbCreateDecodeTables@@Base+0x100>  // b.tcont
    333c:	ret
    3340:	ldrb	w10, [x3, x7]
    3344:	cmp	w10, w8
    3348:	b.ne	3354 <BZ2_hbCreateDecodeTables@@Base+0xa0>  // b.any
    334c:	str	w7, [x2, w9, sxtw #2]
    3350:	add	w9, w9, #0x1
    3354:	add	x7, x7, #0x1
    3358:	cmp	w6, w7
    335c:	b.gt	3340 <BZ2_hbCreateDecodeTables@@Base+0x8c>
    3360:	add	w8, w8, #0x1
    3364:	b	32bc <BZ2_hbCreateDecodeTables@@Base+0x8>
    3368:	mov	x7, #0x0                   	// #0
    336c:	b	3358 <BZ2_hbCreateDecodeTables@@Base+0xa4>
    3370:	ldrb	w2, [x3, x7]
    3374:	add	x7, x7, #0x1
    3378:	add	x2, x2, #0x1
    337c:	lsl	x2, x2, #2
    3380:	ldr	w8, [x1, x2]
    3384:	add	w8, w8, #0x1
    3388:	str	w8, [x1, x2]
    338c:	b	32dc <BZ2_hbCreateDecodeTables@@Base+0x28>
    3390:	ldr	w6, [x7, x2, lsl #2]
    3394:	ldr	w8, [x1, x2, lsl #2]
    3398:	sub	w6, w6, w8
    339c:	add	w3, w6, w3
    33a0:	sub	w6, w3, #0x1
    33a4:	str	w6, [x0, x2, lsl #2]
    33a8:	lsl	w3, w3, #1
    33ac:	add	x2, x2, #0x1
    33b0:	b	3320 <BZ2_hbCreateDecodeTables@@Base+0x6c>
    33b4:	ldr	w2, [x0, x4, lsl #2]
    33b8:	ldr	w3, [x1, x4, lsl #2]
    33bc:	add	w2, w2, #0x1
    33c0:	lsl	w2, w2, #1
    33c4:	sub	w2, w2, w3
    33c8:	str	w2, [x1, x4, lsl #2]
    33cc:	add	x4, x4, #0x1
    33d0:	b	3334 <BZ2_hbCreateDecodeTables@@Base+0x80>
    33d4:	ldr	w3, [x0, #644]
    33d8:	ldr	w5, [x0, #640]
    33dc:	cmp	w3, #0x7
    33e0:	b.gt	3408 <BZ2_hbCreateDecodeTables@@Base+0x154>
    33e4:	mov	w4, #0x20                  	// #32
    33e8:	sub	w4, w4, w3
    33ec:	sub	w4, w4, w1
    33f0:	add	w3, w3, w1
    33f4:	str	w3, [x0, #644]
    33f8:	lsl	w2, w2, w4
    33fc:	orr	w2, w2, w5
    3400:	str	w2, [x0, #640]
    3404:	ret
    3408:	ldrsw	x3, [x0, #116]
    340c:	lsr	w5, w5, #24
    3410:	ldr	x4, [x0, #80]
    3414:	strb	w5, [x4, x3]
    3418:	ldr	w3, [x0, #116]
    341c:	add	w3, w3, #0x1
    3420:	str	w3, [x0, #116]
    3424:	ldr	w3, [x0, #640]
    3428:	lsl	w3, w3, #8
    342c:	str	w3, [x0, #640]
    3430:	ldr	w3, [x0, #644]
    3434:	sub	w3, w3, #0x8
    3438:	str	w3, [x0, #644]
    343c:	b	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    3440:	mov	w6, w1
    3444:	stp	x29, x30, [sp, #-16]!
    3448:	lsr	w2, w1, #24
    344c:	mov	x29, sp
    3450:	mov	w1, #0x8                   	// #8
    3454:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    3458:	mov	w1, #0x8                   	// #8
    345c:	ubfx	x2, x6, #16, #8
    3460:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    3464:	ubfx	x2, x6, #8, #8
    3468:	mov	w1, #0x8                   	// #8
    346c:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    3470:	ldp	x29, x30, [sp], #16
    3474:	and	w2, w6, #0xff
    3478:	mov	w1, #0x8                   	// #8
    347c:	b	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    3480:	and	w2, w1, #0xff
    3484:	mov	w1, #0x8                   	// #8
    3488:	b	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>

000000000000348c <BZ2_bsInitWrite@@Base>:
    348c:	str	xzr, [x0, #640]
    3490:	ret

0000000000003494 <BZ2_compressBlock@@Base>:
    3494:	sub	sp, sp, #0x470
    3498:	stp	x29, x30, [sp]
    349c:	mov	x29, sp
    34a0:	stp	x19, x20, [sp, #16]
    34a4:	mov	x19, x0
    34a8:	and	w0, w1, #0xff
    34ac:	stp	x21, x22, [sp, #32]
    34b0:	ldr	w5, [x19, #108]
    34b4:	stp	x23, x24, [sp, #48]
    34b8:	cmp	w5, #0x0
    34bc:	stp	x25, x26, [sp, #64]
    34c0:	stp	x27, x28, [sp, #80]
    34c4:	str	w0, [sp, #836]
    34c8:	str	d8, [sp, #96]
    34cc:	b.le	3524 <BZ2_compressBlock@@Base+0x90>
    34d0:	ldr	w3, [x19, #648]
    34d4:	ldr	w4, [x19, #652]
    34d8:	mvn	w3, w3
    34dc:	ldr	w2, [x19, #660]
    34e0:	str	w3, [x19, #648]
    34e4:	eor	w4, w3, w4, ror #31
    34e8:	str	w4, [x19, #652]
    34ec:	cmp	w2, #0x1
    34f0:	b.le	34f8 <BZ2_compressBlock@@Base+0x64>
    34f4:	str	wzr, [x19, #116]
    34f8:	ldr	w0, [x19, #656]
    34fc:	cmp	w0, #0x1
    3500:	b.le	351c <BZ2_compressBlock@@Base+0x88>
    3504:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    3508:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    350c:	add	x1, x1, #0x78
    3510:	ldr	x0, [x0, #4016]
    3514:	ldr	x0, [x0]
    3518:	bl	1730 <fprintf@plt>
    351c:	mov	x0, x19
    3520:	bl	1690 <BZ2_blockSort@plt>
    3524:	ldr	x0, [x19, #32]
    3528:	ldrsw	x1, [x19, #108]
    352c:	add	x0, x0, x1
    3530:	str	x0, [x19, #80]
    3534:	ldr	w0, [x19, #660]
    3538:	cmp	w0, #0x1
    353c:	b.ne	3570 <BZ2_compressBlock@@Base+0xdc>  // b.any
    3540:	mov	x0, x19
    3544:	bl	1650 <BZ2_bsInitWrite@plt>
    3548:	mov	x0, x19
    354c:	mov	w1, #0x42                  	// #66
    3550:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    3554:	mov	w1, #0x5a                  	// #90
    3558:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    355c:	mov	w1, #0x68                  	// #104
    3560:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    3564:	ldr	w1, [x19, #664]
    3568:	add	w1, w1, #0x30
    356c:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    3570:	ldr	w0, [x19, #108]
    3574:	cmp	w0, #0x0
    3578:	b.le	55bc <BZ2_compressBlock@@Base+0x2128>
    357c:	mov	x0, x19
    3580:	mov	w1, #0x31                  	// #49
    3584:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    3588:	mov	w1, #0x41                  	// #65
    358c:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    3590:	mov	w1, #0x59                  	// #89
    3594:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    3598:	mov	w1, #0x26                  	// #38
    359c:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    35a0:	mov	w1, #0x53                  	// #83
    35a4:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    35a8:	mov	w1, #0x59                  	// #89
    35ac:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    35b0:	ldr	w1, [x19, #648]
    35b4:	bl	3440 <BZ2_hbCreateDecodeTables@@Base+0x18c>
    35b8:	mov	w2, #0x0                   	// #0
    35bc:	mov	w1, #0x1                   	// #1
    35c0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    35c4:	ldr	w2, [x19, #48]
    35c8:	mov	w1, #0x18                  	// #24
    35cc:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    35d0:	str	wzr, [x19, #124]
    35d4:	ldp	x9, x10, [x19, #56]
    35d8:	add	x2, x19, #0x180
    35dc:	ldr	x20, [x19, #72]
    35e0:	add	x0, x19, #0x80
    35e4:	str	x0, [sp, #152]
    35e8:	ldrb	w1, [x0]
    35ec:	cbz	w1, 3600 <BZ2_compressBlock@@Base+0x16c>
    35f0:	ldr	w1, [x19, #124]
    35f4:	strb	w1, [x0, #256]
    35f8:	add	w1, w1, #0x1
    35fc:	str	w1, [x19, #124]
    3600:	add	x0, x0, #0x1
    3604:	cmp	x0, x2
    3608:	b.ne	35e8 <BZ2_compressBlock@@Base+0x154>  // b.any
    360c:	ldr	w4, [x19, #124]
    3610:	add	x1, x19, #0x2a0
    3614:	mov	x0, #0x0                   	// #0
    3618:	add	w7, w4, #0x1
    361c:	cmp	w7, w0
    3620:	b.ge	3694 <BZ2_compressBlock@@Base+0x200>  // b.tcont
    3624:	add	x1, sp, #0x370
    3628:	mov	x0, #0x0                   	// #0
    362c:	cmp	w4, w0
    3630:	b.gt	36a0 <BZ2_compressBlock@@Base+0x20c>
    3634:	ldr	w2, [x19, #108]
    3638:	add	x11, sp, #0x370
    363c:	mov	x5, #0x0                   	// #0
    3640:	mov	w3, #0x0                   	// #0
    3644:	mov	w0, #0x0                   	// #0
    3648:	mov	w12, #0x1                   	// #1
    364c:	cmp	w2, w5
    3650:	b.gt	36ac <BZ2_compressBlock@@Base+0x218>
    3654:	cbz	w0, 3798 <BZ2_compressBlock@@Base+0x304>
    3658:	sub	w0, w0, #0x1
    365c:	sxtw	x1, w3
    3660:	mov	w6, #0x1                   	// #1
    3664:	add	w3, w1, #0x1
    3668:	tbz	w0, #0, 3784 <BZ2_compressBlock@@Base+0x2f0>
    366c:	ldr	w5, [x19, #676]
    3670:	strh	w6, [x20, x1, lsl #1]
    3674:	add	w5, w5, #0x1
    3678:	str	w5, [x19, #676]
    367c:	add	x1, x1, #0x1
    3680:	cmp	w0, #0x1
    3684:	b.le	3798 <BZ2_compressBlock@@Base+0x304>
    3688:	sub	w0, w0, #0x2
    368c:	asr	w0, w0, #1
    3690:	b	3664 <BZ2_compressBlock@@Base+0x1d0>
    3694:	str	wzr, [x1, x0, lsl #2]
    3698:	add	x0, x0, #0x1
    369c:	b	361c <BZ2_compressBlock@@Base+0x188>
    36a0:	strb	w0, [x0, x1]
    36a4:	add	x0, x0, #0x1
    36a8:	b	362c <BZ2_compressBlock@@Base+0x198>
    36ac:	ldr	w1, [x9, x5, lsl #2]
    36b0:	subs	w1, w1, #0x1
    36b4:	b.pl	36bc <BZ2_compressBlock@@Base+0x228>  // b.nfrst
    36b8:	add	w1, w1, w2
    36bc:	ldrb	w1, [x10, w1, sxtw]
    36c0:	add	x1, x19, x1
    36c4:	ldrb	w6, [x1, #384]
    36c8:	ldrb	w1, [sp, #880]
    36cc:	cmp	w1, w6
    36d0:	b.ne	36e0 <BZ2_compressBlock@@Base+0x24c>  // b.any
    36d4:	add	w0, w0, #0x1
    36d8:	add	x5, x5, #0x1
    36dc:	b	364c <BZ2_compressBlock@@Base+0x1b8>
    36e0:	cbz	w0, 3730 <BZ2_compressBlock@@Base+0x29c>
    36e4:	sub	w0, w0, #0x1
    36e8:	sxtw	x1, w3
    36ec:	add	w3, w1, #0x1
    36f0:	tbz	w0, #0, 371c <BZ2_compressBlock@@Base+0x288>
    36f4:	ldr	w8, [x19, #676]
    36f8:	strh	w12, [x20, x1, lsl #1]
    36fc:	add	w8, w8, #0x1
    3700:	str	w8, [x19, #676]
    3704:	add	x1, x1, #0x1
    3708:	cmp	w0, #0x1
    370c:	b.le	3730 <BZ2_compressBlock@@Base+0x29c>
    3710:	sub	w0, w0, #0x2
    3714:	asr	w0, w0, #1
    3718:	b	36ec <BZ2_compressBlock@@Base+0x258>
    371c:	ldr	w8, [x19, #672]
    3720:	strh	wzr, [x20, x1, lsl #1]
    3724:	add	w8, w8, #0x1
    3728:	str	w8, [x19, #672]
    372c:	b	3704 <BZ2_compressBlock@@Base+0x270>
    3730:	ldrb	w0, [sp, #880]
    3734:	ldrb	w1, [sp, #881]
    3738:	strb	w0, [sp, #881]
    373c:	add	x0, x11, #0x1
    3740:	cmp	w6, w1
    3744:	b.ne	3774 <BZ2_compressBlock@@Base+0x2e0>  // b.any
    3748:	sub	x0, x0, x11
    374c:	strb	w6, [sp, #880]
    3750:	add	w1, w0, #0x1
    3754:	strh	w1, [x20, w3, sxtw #1]
    3758:	add	x0, x19, w0, sxtw #2
    375c:	add	w3, w3, #0x1
    3760:	ldr	w1, [x0, #676]
    3764:	add	w1, w1, #0x1
    3768:	str	w1, [x0, #676]
    376c:	mov	w0, #0x0                   	// #0
    3770:	b	36d8 <BZ2_compressBlock@@Base+0x244>
    3774:	ldrb	w8, [x0, #1]!
    3778:	strb	w1, [x0]
    377c:	mov	w1, w8
    3780:	b	3740 <BZ2_compressBlock@@Base+0x2ac>
    3784:	ldr	w5, [x19, #672]
    3788:	strh	wzr, [x20, x1, lsl #1]
    378c:	add	w5, w5, #0x1
    3790:	str	w5, [x19, #672]
    3794:	b	367c <BZ2_compressBlock@@Base+0x1e8>
    3798:	add	x1, x19, w4, sxtw #2
    379c:	strh	w7, [x20, w3, sxtw #1]
    37a0:	add	w3, w3, #0x1
    37a4:	ldr	w0, [x1, #676]
    37a8:	add	w0, w0, #0x1
    37ac:	str	w0, [x1, #676]
    37b0:	str	w3, [x19, #668]
    37b4:	ldr	w0, [x19, #656]
    37b8:	cmp	w0, #0x2
    37bc:	b.le	37d8 <BZ2_compressBlock@@Base+0x344>
    37c0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    37c4:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    37c8:	add	x1, x1, #0xb6
    37cc:	ldr	x0, [x0, #4016]
    37d0:	ldr	x0, [x0]
    37d4:	bl	1730 <fprintf@plt>
    37d8:	ldr	w22, [x19, #124]
    37dc:	mov	x12, #0x934c                	// #37708
    37e0:	mov	x11, #0x9958                	// #39256
    37e4:	add	x2, x19, x11
    37e8:	add	w0, w22, #0x2
    37ec:	str	w0, [sp, #136]
    37f0:	add	x0, x19, x12
    37f4:	mov	w3, #0xf                   	// #15
    37f8:	mov	x1, x0
    37fc:	str	x0, [sp, #120]
    3800:	mov	x0, #0x0                   	// #0
    3804:	b	3810 <BZ2_compressBlock@@Base+0x37c>
    3808:	strb	w3, [x1, x0]
    380c:	add	x0, x0, #0x1
    3810:	ldr	w4, [sp, #136]
    3814:	cmp	w4, w0
    3818:	b.gt	3808 <BZ2_compressBlock@@Base+0x374>
    381c:	add	x1, x1, #0x102
    3820:	cmp	x2, x1
    3824:	b.ne	3800 <BZ2_compressBlock@@Base+0x36c>  // b.any
    3828:	ldr	w0, [x19, #668]
    382c:	cmp	w0, #0x0
    3830:	b.gt	383c <BZ2_compressBlock@@Base+0x3a8>
    3834:	mov	w0, #0xbb9                 	// #3001
    3838:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    383c:	ldr	w26, [x19, #668]
    3840:	cmp	w26, #0xc7
    3844:	b.le	39a0 <BZ2_compressBlock@@Base+0x50c>
    3848:	cmp	w26, #0x257
    384c:	b.le	39a8 <BZ2_compressBlock@@Base+0x514>
    3850:	cmp	w26, #0x4af
    3854:	b.le	39b0 <BZ2_compressBlock@@Base+0x51c>
    3858:	cmp	w26, #0x95f
    385c:	cset	w0, gt
    3860:	add	w27, w0, #0x5
    3864:	mov	w23, #0x102                 	// #258
    3868:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    386c:	mov	x10, #0x924a                	// #37450
    3870:	mov	w21, w27
    3874:	smaddl	x23, w27, w23, x19
    3878:	add	w6, w22, #0x1
    387c:	add	x28, x19, #0x2a4
    3880:	ldr	d8, [x0, #456]
    3884:	add	x23, x23, x10
    3888:	mov	w25, #0x0                   	// #0
    388c:	sub	w0, w25, #0x1
    3890:	mov	w22, #0x0                   	// #0
    3894:	sdiv	w1, w26, w21
    3898:	sxtw	x0, w0
    389c:	mov	w24, w0
    38a0:	cmp	w1, w22
    38a4:	b.le	38b0 <BZ2_compressBlock@@Base+0x41c>
    38a8:	cmp	w6, w0
    38ac:	b.gt	39b8 <BZ2_compressBlock@@Base+0x524>
    38b0:	cmp	w24, w25
    38b4:	ccmp	w27, w21, #0x4, gt
    38b8:	b.eq	38dc <BZ2_compressBlock@@Base+0x448>  // b.none
    38bc:	cmp	w21, #0x1
    38c0:	b.eq	38dc <BZ2_compressBlock@@Base+0x448>  // b.none
    38c4:	sub	w0, w27, w21
    38c8:	tbz	w0, #0, 38dc <BZ2_compressBlock@@Base+0x448>
    38cc:	add	x0, x19, w24, sxtw #2
    38d0:	sub	w24, w24, #0x1
    38d4:	ldr	w0, [x0, #672]
    38d8:	sub	w22, w22, w0
    38dc:	ldr	w0, [x19, #656]
    38e0:	cmp	w0, #0x2
    38e4:	b.le	3934 <BZ2_compressBlock@@Base+0x4a0>
    38e8:	scvtf	s1, w22
    38ec:	ldr	s0, [x19, #668]
    38f0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    38f4:	mov	w5, w22
    38f8:	mov	w4, w24
    38fc:	mov	w3, w25
    3900:	scvtf	s0, s0
    3904:	mov	w2, w21
    3908:	fcvt	d1, s1
    390c:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    3910:	ldr	x0, [x0, #4016]
    3914:	add	x1, x1, #0xf6
    3918:	fcvt	d0, s0
    391c:	str	w6, [sp, #128]
    3920:	fmul	d1, d1, d8
    3924:	ldr	x0, [x0]
    3928:	fdiv	d0, d1, d0
    392c:	bl	1730 <fprintf@plt>
    3930:	ldr	w6, [sp, #128]
    3934:	mov	x1, x23
    3938:	mov	w0, #0x0                   	// #0
    393c:	mov	w2, #0xf                   	// #15
    3940:	ldr	w3, [sp, #136]
    3944:	cmp	w3, w0
    3948:	b.gt	39c8 <BZ2_compressBlock@@Base+0x534>
    394c:	add	w25, w24, #0x1
    3950:	sub	w26, w26, w22
    3954:	sub	x23, x23, #0x102
    3958:	subs	w21, w21, #0x1
    395c:	b.ne	388c <BZ2_compressBlock@@Base+0x3f8>  // b.any
    3960:	add	x0, sp, #0x350
    3964:	str	wzr, [sp, #144]
    3968:	str	x0, [sp, #168]
    396c:	add	x1, sp, #0x370
    3970:	mov	x0, #0x0                   	// #0
    3974:	str	wzr, [x1, x0, lsl #2]
    3978:	add	x0, x0, #0x1
    397c:	cmp	w27, w0
    3980:	b.gt	3974 <BZ2_compressBlock@@Base+0x4e0>
    3984:	mov	x9, #0xb188                	// #45448
    3988:	add	x0, x19, x9
    398c:	mov	x1, x0
    3990:	str	wzr, [sp, #140]
    3994:	str	x0, [sp, #160]
    3998:	mov	x0, #0x0                   	// #0
    399c:	b	39f4 <BZ2_compressBlock@@Base+0x560>
    39a0:	mov	w27, #0x2                   	// #2
    39a4:	b	3864 <BZ2_compressBlock@@Base+0x3d0>
    39a8:	mov	w27, #0x3                   	// #3
    39ac:	b	3864 <BZ2_compressBlock@@Base+0x3d0>
    39b0:	mov	w27, #0x4                   	// #4
    39b4:	b	3864 <BZ2_compressBlock@@Base+0x3d0>
    39b8:	ldr	w2, [x28, x0, lsl #2]
    39bc:	add	x0, x0, #0x1
    39c0:	add	w22, w22, w2
    39c4:	b	389c <BZ2_compressBlock@@Base+0x408>
    39c8:	cmp	w0, w25
    39cc:	ccmp	w24, w0, #0x1, ge  // ge = tcont
    39d0:	b.lt	39e4 <BZ2_compressBlock@@Base+0x550>  // b.tstop
    39d4:	strb	wzr, [x1]
    39d8:	add	w0, w0, #0x1
    39dc:	add	x1, x1, #0x1
    39e0:	b	3940 <BZ2_compressBlock@@Base+0x4ac>
    39e4:	strb	w2, [x1]
    39e8:	b	39d8 <BZ2_compressBlock@@Base+0x544>
    39ec:	str	wzr, [x1, x0, lsl #2]
    39f0:	add	x0, x0, #0x1
    39f4:	ldr	w2, [sp, #136]
    39f8:	cmp	w2, w0
    39fc:	b.gt	39ec <BZ2_compressBlock@@Base+0x558>
    3a00:	ldr	w0, [sp, #140]
    3a04:	add	x1, x1, #0x408
    3a08:	add	w22, w0, #0x1
    3a0c:	cmp	w27, w22
    3a10:	b.eq	3a1c <BZ2_compressBlock@@Base+0x588>  // b.none
    3a14:	str	w22, [sp, #140]
    3a18:	b	3998 <BZ2_compressBlock@@Base+0x504>
    3a1c:	cmp	w27, #0x6
    3a20:	b.ne	3a40 <BZ2_compressBlock@@Base+0x5ac>  // b.any
    3a24:	ldr	x0, [sp, #120]
    3a28:	mov	x8, #0xc9b8                	// #51640
    3a2c:	add	x1, x19, x8
    3a30:	mov	w2, #0x0                   	// #0
    3a34:	ldr	w3, [sp, #136]
    3a38:	cmp	w3, w2
    3a3c:	b.gt	4c74 <BZ2_compressBlock@@Base+0x17e0>
    3a40:	ldr	w0, [x19, #668]
    3a44:	mov	w5, #0x0                   	// #0
    3a48:	str	w0, [sp, #148]
    3a4c:	mov	w0, w0
    3a50:	str	xzr, [sp, #128]
    3a54:	sub	w0, w0, #0x1
    3a58:	str	w0, [sp, #828]
    3a5c:	add	x0, sp, #0x370
    3a60:	str	x0, [sp, #816]
    3a64:	add	x0, x19, #0x6a8
    3a68:	str	wzr, [sp, #824]
    3a6c:	str	x0, [sp, #840]
    3a70:	ldr	w0, [sp, #128]
    3a74:	str	w0, [sp, #176]
    3a78:	ldr	w0, [sp, #148]
    3a7c:	cmp	w0, w5
    3a80:	b.le	4d30 <BZ2_compressBlock@@Base+0x189c>
    3a84:	add	w6, w5, #0x31
    3a88:	cmp	w0, w6
    3a8c:	ldr	w0, [sp, #828]
    3a90:	csel	w6, w6, w0, gt
    3a94:	mov	x0, #0x0                   	// #0
    3a98:	ldr	x1, [sp, #168]
    3a9c:	strh	wzr, [x1, x0, lsl #1]
    3aa0:	add	x0, x0, #0x1
    3aa4:	cmp	w22, w0
    3aa8:	b.gt	3a98 <BZ2_compressBlock@@Base+0x604>
    3aac:	cmp	w22, #0x6
    3ab0:	sxtw	x28, w5
    3ab4:	b.ne	4cf4 <BZ2_compressBlock@@Base+0x1860>  // b.any
    3ab8:	sub	w0, w6, w5
    3abc:	cmp	w0, #0x31
    3ac0:	b.ne	4cf4 <BZ2_compressBlock@@Base+0x1860>  // b.any
    3ac4:	add	x1, x20, x28, lsl #1
    3ac8:	ldrh	w0, [x1, #2]
    3acc:	str	x0, [sp, #176]
    3ad0:	add	x0, x19, x0, lsl #4
    3ad4:	add	x0, x0, #0xc, lsl #12
    3ad8:	str	x0, [sp, #184]
    3adc:	ldrh	w0, [x1, #4]
    3ae0:	str	x0, [sp, #192]
    3ae4:	add	x0, x19, x0, lsl #4
    3ae8:	add	x0, x0, #0xc, lsl #12
    3aec:	str	x0, [sp, #200]
    3af0:	ldr	x0, [sp, #184]
    3af4:	ldr	w2, [x0, #2492]
    3af8:	ldr	x0, [sp, #200]
    3afc:	ldr	w0, [x0, #2492]
    3b00:	add	w0, w2, w0
    3b04:	ldrh	w2, [x1, #6]
    3b08:	str	x2, [sp, #208]
    3b0c:	add	x2, x19, x2, lsl #4
    3b10:	add	x2, x2, #0xc, lsl #12
    3b14:	str	x2, [sp, #216]
    3b18:	ldrh	w2, [x1, #8]
    3b1c:	str	x2, [sp, #224]
    3b20:	add	x2, x19, x2, lsl #4
    3b24:	add	x2, x2, #0xc, lsl #12
    3b28:	str	x2, [sp, #232]
    3b2c:	ldr	x2, [sp, #216]
    3b30:	ldr	x3, [sp, #232]
    3b34:	ldr	w2, [x2, #2492]
    3b38:	ldr	w3, [x3, #2492]
    3b3c:	add	w2, w2, w3
    3b40:	add	w0, w0, w2
    3b44:	ldrh	w2, [x1, #10]
    3b48:	str	x2, [sp, #240]
    3b4c:	add	x2, x19, x2, lsl #4
    3b50:	add	x2, x2, #0xc, lsl #12
    3b54:	str	x2, [sp, #248]
    3b58:	ldrh	w2, [x1, #12]
    3b5c:	str	x2, [sp, #256]
    3b60:	add	x2, x19, x2, lsl #4
    3b64:	add	x2, x2, #0xc, lsl #12
    3b68:	str	x2, [sp, #264]
    3b6c:	ldr	x2, [sp, #248]
    3b70:	ldr	x3, [sp, #264]
    3b74:	ldr	w2, [x2, #2492]
    3b78:	ldr	w3, [x3, #2492]
    3b7c:	add	w2, w2, w3
    3b80:	add	w0, w0, w2
    3b84:	ldrh	w2, [x1, #14]
    3b88:	str	x2, [sp, #272]
    3b8c:	add	x2, x19, x2, lsl #4
    3b90:	add	x2, x2, #0xc, lsl #12
    3b94:	str	x2, [sp, #280]
    3b98:	ldrh	w2, [x1, #16]
    3b9c:	str	x2, [sp, #288]
    3ba0:	add	x2, x19, x2, lsl #4
    3ba4:	add	x2, x2, #0xc, lsl #12
    3ba8:	str	x2, [sp, #296]
    3bac:	ldr	x2, [sp, #280]
    3bb0:	ldr	x3, [sp, #296]
    3bb4:	ldr	w2, [x2, #2492]
    3bb8:	ldr	w3, [x3, #2492]
    3bbc:	add	w2, w2, w3
    3bc0:	add	w0, w0, w2
    3bc4:	ldrh	w2, [x1, #18]
    3bc8:	str	x2, [sp, #304]
    3bcc:	add	x2, x19, x2, lsl #4
    3bd0:	add	x2, x2, #0xc, lsl #12
    3bd4:	str	x2, [sp, #312]
    3bd8:	ldrh	w2, [x1, #20]
    3bdc:	str	x2, [sp, #320]
    3be0:	add	x2, x19, x2, lsl #4
    3be4:	add	x2, x2, #0xc, lsl #12
    3be8:	str	x2, [sp, #328]
    3bec:	ldr	x2, [sp, #312]
    3bf0:	ldr	x3, [sp, #328]
    3bf4:	ldr	w2, [x2, #2492]
    3bf8:	ldr	w3, [x3, #2492]
    3bfc:	add	w2, w2, w3
    3c00:	add	w0, w0, w2
    3c04:	ldrh	w2, [x1, #22]
    3c08:	str	x2, [sp, #336]
    3c0c:	add	x2, x19, x2, lsl #4
    3c10:	add	x2, x2, #0xc, lsl #12
    3c14:	str	x2, [sp, #344]
    3c18:	ldrh	w2, [x1, #24]
    3c1c:	str	x2, [sp, #352]
    3c20:	add	x2, x19, x2, lsl #4
    3c24:	add	x2, x2, #0xc, lsl #12
    3c28:	str	x2, [sp, #360]
    3c2c:	ldr	x2, [sp, #344]
    3c30:	ldr	x3, [sp, #360]
    3c34:	ldr	w2, [x2, #2492]
    3c38:	ldr	w3, [x3, #2492]
    3c3c:	add	w2, w2, w3
    3c40:	add	w0, w0, w2
    3c44:	ldrh	w2, [x1, #26]
    3c48:	str	x2, [sp, #368]
    3c4c:	add	x2, x19, x2, lsl #4
    3c50:	add	x2, x2, #0xc, lsl #12
    3c54:	str	x2, [sp, #376]
    3c58:	ldrh	w2, [x1, #28]
    3c5c:	str	x2, [sp, #384]
    3c60:	add	x2, x19, x2, lsl #4
    3c64:	add	x2, x2, #0xc, lsl #12
    3c68:	str	x2, [sp, #392]
    3c6c:	ldr	x2, [sp, #376]
    3c70:	ldr	x3, [sp, #392]
    3c74:	ldr	w2, [x2, #2492]
    3c78:	ldr	w3, [x3, #2492]
    3c7c:	add	w2, w2, w3
    3c80:	add	w0, w0, w2
    3c84:	ldrh	w2, [x1, #30]
    3c88:	str	x2, [sp, #400]
    3c8c:	add	x2, x19, x2, lsl #4
    3c90:	add	x2, x2, #0xc, lsl #12
    3c94:	str	x2, [sp, #408]
    3c98:	ldrh	w2, [x1, #32]
    3c9c:	str	x2, [sp, #416]
    3ca0:	add	x2, x19, x2, lsl #4
    3ca4:	add	x2, x2, #0xc, lsl #12
    3ca8:	str	x2, [sp, #424]
    3cac:	ldr	x2, [sp, #408]
    3cb0:	ldr	x3, [sp, #424]
    3cb4:	ldr	w2, [x2, #2492]
    3cb8:	ldr	w3, [x3, #2492]
    3cbc:	add	w2, w2, w3
    3cc0:	add	w0, w0, w2
    3cc4:	ldrh	w2, [x1, #34]
    3cc8:	str	x2, [sp, #432]
    3ccc:	add	x2, x19, x2, lsl #4
    3cd0:	add	x2, x2, #0xc, lsl #12
    3cd4:	str	x2, [sp, #440]
    3cd8:	ldrh	w2, [x1, #36]
    3cdc:	str	x2, [sp, #448]
    3ce0:	add	x2, x19, x2, lsl #4
    3ce4:	add	x2, x2, #0xc, lsl #12
    3ce8:	str	x2, [sp, #456]
    3cec:	ldr	x2, [sp, #440]
    3cf0:	ldr	x3, [sp, #456]
    3cf4:	ldr	w2, [x2, #2492]
    3cf8:	ldr	w3, [x3, #2492]
    3cfc:	add	w2, w2, w3
    3d00:	add	w0, w0, w2
    3d04:	ldrh	w2, [x1, #38]
    3d08:	str	x2, [sp, #464]
    3d0c:	add	x2, x19, x2, lsl #4
    3d10:	add	x2, x2, #0xc, lsl #12
    3d14:	str	x2, [sp, #472]
    3d18:	ldrh	w2, [x1, #40]
    3d1c:	str	x2, [sp, #480]
    3d20:	add	x2, x19, x2, lsl #4
    3d24:	add	x2, x2, #0xc, lsl #12
    3d28:	str	x2, [sp, #488]
    3d2c:	ldr	x2, [sp, #472]
    3d30:	ldr	w2, [x2, #2492]
    3d34:	ldr	x3, [sp, #488]
    3d38:	ldr	w3, [x3, #2492]
    3d3c:	add	w2, w2, w3
    3d40:	add	w0, w0, w2
    3d44:	ldrh	w2, [x1, #42]
    3d48:	str	x2, [sp, #496]
    3d4c:	add	x2, x19, x2, lsl #4
    3d50:	add	x2, x2, #0xc, lsl #12
    3d54:	str	x2, [sp, #504]
    3d58:	ldrh	w2, [x1, #44]
    3d5c:	str	x2, [sp, #512]
    3d60:	add	x2, x19, x2, lsl #4
    3d64:	add	x2, x2, #0xc, lsl #12
    3d68:	str	x2, [sp, #520]
    3d6c:	ldr	x2, [sp, #504]
    3d70:	ldr	x3, [sp, #520]
    3d74:	ldr	w2, [x2, #2492]
    3d78:	ldr	w3, [x3, #2492]
    3d7c:	add	w2, w2, w3
    3d80:	add	w0, w0, w2
    3d84:	ldrh	w2, [x1, #46]
    3d88:	str	x2, [sp, #528]
    3d8c:	add	x2, x19, x2, lsl #4
    3d90:	add	x2, x2, #0xc, lsl #12
    3d94:	str	x2, [sp, #536]
    3d98:	ldrh	w2, [x1, #48]
    3d9c:	str	x2, [sp, #544]
    3da0:	add	x2, x19, x2, lsl #4
    3da4:	add	x2, x2, #0xc, lsl #12
    3da8:	str	x2, [sp, #552]
    3dac:	ldr	x2, [sp, #536]
    3db0:	ldr	x3, [sp, #552]
    3db4:	ldr	w2, [x2, #2492]
    3db8:	ldr	w3, [x3, #2492]
    3dbc:	add	w2, w2, w3
    3dc0:	add	w0, w0, w2
    3dc4:	ldrh	w2, [x1, #50]
    3dc8:	str	x2, [sp, #560]
    3dcc:	add	x2, x19, x2, lsl #4
    3dd0:	add	x2, x2, #0xc, lsl #12
    3dd4:	str	x2, [sp, #568]
    3dd8:	ldrh	w2, [x1, #52]
    3ddc:	str	x2, [sp, #576]
    3de0:	add	x2, x19, x2, lsl #4
    3de4:	add	x2, x2, #0xc, lsl #12
    3de8:	str	x2, [sp, #584]
    3dec:	ldr	x2, [sp, #568]
    3df0:	ldr	x3, [sp, #584]
    3df4:	ldr	w2, [x2, #2492]
    3df8:	ldr	w3, [x3, #2492]
    3dfc:	add	w2, w2, w3
    3e00:	add	w0, w0, w2
    3e04:	ldrh	w2, [x1, #54]
    3e08:	str	x2, [sp, #592]
    3e0c:	add	x2, x19, x2, lsl #4
    3e10:	add	x2, x2, #0xc, lsl #12
    3e14:	str	x2, [sp, #600]
    3e18:	ldrh	w2, [x1, #56]
    3e1c:	str	x2, [sp, #608]
    3e20:	add	x2, x19, x2, lsl #4
    3e24:	add	x2, x2, #0xc, lsl #12
    3e28:	str	x2, [sp, #616]
    3e2c:	ldr	x2, [sp, #600]
    3e30:	ldr	x3, [sp, #616]
    3e34:	ldr	w2, [x2, #2492]
    3e38:	ldr	w3, [x3, #2492]
    3e3c:	add	w2, w2, w3
    3e40:	add	w0, w0, w2
    3e44:	ldrh	w2, [x1, #58]
    3e48:	str	x2, [sp, #624]
    3e4c:	add	x26, x19, x2, lsl #4
    3e50:	ldrh	w2, [x1, #60]
    3e54:	add	x26, x26, #0xc, lsl #12
    3e58:	str	x2, [sp, #632]
    3e5c:	add	x25, x19, x2, lsl #4
    3e60:	add	x25, x25, #0xc, lsl #12
    3e64:	ldr	w2, [x26, #2492]
    3e68:	ldr	w3, [x25, #2492]
    3e6c:	add	w2, w2, w3
    3e70:	add	w0, w0, w2
    3e74:	ldrh	w2, [x1, #62]
    3e78:	str	x2, [sp, #640]
    3e7c:	add	x24, x19, x2, lsl #4
    3e80:	ldrh	w2, [x1, #64]
    3e84:	add	x24, x24, #0xc, lsl #12
    3e88:	str	x2, [sp, #648]
    3e8c:	add	x23, x19, x2, lsl #4
    3e90:	add	x23, x23, #0xc, lsl #12
    3e94:	ldr	w2, [x24, #2492]
    3e98:	ldr	w3, [x23, #2492]
    3e9c:	add	w2, w2, w3
    3ea0:	add	w0, w0, w2
    3ea4:	ldrh	w2, [x1, #66]
    3ea8:	str	x2, [sp, #656]
    3eac:	add	x30, x19, x2, lsl #4
    3eb0:	ldrh	w2, [x1, #68]
    3eb4:	add	x30, x30, #0xc, lsl #12
    3eb8:	str	x2, [sp, #664]
    3ebc:	add	x18, x19, x2, lsl #4
    3ec0:	add	x18, x18, #0xc, lsl #12
    3ec4:	ldr	w2, [x30, #2492]
    3ec8:	ldr	w3, [x18, #2492]
    3ecc:	add	w2, w2, w3
    3ed0:	add	w0, w0, w2
    3ed4:	ldrh	w2, [x1, #70]
    3ed8:	str	x2, [sp, #672]
    3edc:	add	x17, x19, x2, lsl #4
    3ee0:	ldrh	w2, [x1, #72]
    3ee4:	add	x17, x17, #0xc, lsl #12
    3ee8:	str	x2, [sp, #680]
    3eec:	add	x16, x19, x2, lsl #4
    3ef0:	add	x16, x16, #0xc, lsl #12
    3ef4:	ldr	w2, [x17, #2492]
    3ef8:	ldr	w3, [x16, #2492]
    3efc:	add	w2, w2, w3
    3f00:	add	w0, w0, w2
    3f04:	ldrh	w2, [x1, #74]
    3f08:	str	x2, [sp, #688]
    3f0c:	add	x15, x19, x2, lsl #4
    3f10:	ldrh	w2, [x1, #76]
    3f14:	add	x15, x15, #0xc, lsl #12
    3f18:	str	x2, [sp, #696]
    3f1c:	add	x14, x19, x2, lsl #4
    3f20:	add	x14, x14, #0xc, lsl #12
    3f24:	ldr	w2, [x15, #2492]
    3f28:	ldr	w3, [x14, #2492]
    3f2c:	add	w2, w2, w3
    3f30:	add	w0, w0, w2
    3f34:	ldrh	w2, [x1, #78]
    3f38:	str	x2, [sp, #704]
    3f3c:	add	x13, x19, x2, lsl #4
    3f40:	ldrh	w2, [x1, #80]
    3f44:	add	x13, x13, #0xc, lsl #12
    3f48:	str	x2, [sp, #712]
    3f4c:	add	x12, x19, x2, lsl #4
    3f50:	add	x12, x12, #0xc, lsl #12
    3f54:	ldr	w2, [x13, #2492]
    3f58:	ldr	w3, [x12, #2492]
    3f5c:	add	w2, w2, w3
    3f60:	add	w0, w0, w2
    3f64:	ldrh	w2, [x1, #82]
    3f68:	str	x2, [sp, #720]
    3f6c:	add	x11, x19, x2, lsl #4
    3f70:	ldrh	w2, [x1, #84]
    3f74:	add	x11, x11, #0xc, lsl #12
    3f78:	str	x2, [sp, #728]
    3f7c:	add	x10, x19, x2, lsl #4
    3f80:	add	x10, x10, #0xc, lsl #12
    3f84:	ldr	w2, [x11, #2492]
    3f88:	ldr	w3, [x10, #2492]
    3f8c:	add	w2, w2, w3
    3f90:	add	w0, w0, w2
    3f94:	ldrh	w2, [x1, #86]
    3f98:	str	x2, [sp, #736]
    3f9c:	add	x9, x19, x2, lsl #4
    3fa0:	ldrh	w2, [x1, #88]
    3fa4:	add	x9, x9, #0xc, lsl #12
    3fa8:	str	x2, [sp, #744]
    3fac:	add	x8, x19, x2, lsl #4
    3fb0:	add	x8, x8, #0xc, lsl #12
    3fb4:	ldr	w2, [x9, #2492]
    3fb8:	ldr	w3, [x8, #2492]
    3fbc:	add	w2, w2, w3
    3fc0:	add	w0, w0, w2
    3fc4:	ldrh	w2, [x1, #90]
    3fc8:	str	x2, [sp, #752]
    3fcc:	add	x7, x19, x2, lsl #4
    3fd0:	ldrh	w2, [x1, #92]
    3fd4:	add	x7, x7, #0xc, lsl #12
    3fd8:	str	x2, [sp, #760]
    3fdc:	add	x2, x19, x2, lsl #4
    3fe0:	add	x2, x2, #0xc, lsl #12
    3fe4:	str	x2, [sp, #768]
    3fe8:	ldr	w2, [x7, #2492]
    3fec:	ldr	x3, [sp, #768]
    3ff0:	ldr	w3, [x3, #2492]
    3ff4:	add	w2, w2, w3
    3ff8:	add	w0, w0, w2
    3ffc:	ldrh	w2, [x1, #94]
    4000:	str	x2, [sp, #776]
    4004:	add	x2, x19, x2, lsl #4
    4008:	add	x2, x2, #0xc, lsl #12
    400c:	str	x2, [sp, #784]
    4010:	ldrh	w2, [x1, #96]
    4014:	str	x2, [sp, #792]
    4018:	ldrh	w1, [x1, #98]
    401c:	add	x4, x19, x2, lsl #4
    4020:	str	x1, [sp, #808]
    4024:	ldr	x2, [sp, #784]
    4028:	add	x4, x4, #0xc, lsl #12
    402c:	ldr	w2, [x2, #2492]
    4030:	ldr	w3, [x4, #2492]
    4034:	add	w2, w2, w3
    4038:	add	w0, w0, w2
    403c:	ldrh	w2, [x20, x28, lsl #1]
    4040:	str	x2, [sp, #800]
    4044:	add	x3, x19, x2, lsl #4
    4048:	add	x2, x19, x1, lsl #4
    404c:	add	x3, x3, #0xc, lsl #12
    4050:	add	x2, x2, #0xc, lsl #12
    4054:	ldr	w1, [x3, #2492]
    4058:	ldr	w28, [x2, #2492]
    405c:	add	w1, w1, w28
    4060:	add	w0, w0, w1
    4064:	str	w0, [sp, #832]
    4068:	ldr	x0, [sp, #184]
    406c:	ldr	x1, [sp, #232]
    4070:	ldr	w28, [x0, #2496]
    4074:	ldr	x0, [sp, #200]
    4078:	ldr	w1, [x1, #2496]
    407c:	ldr	w0, [x0, #2496]
    4080:	add	w28, w28, w0
    4084:	ldr	x0, [sp, #216]
    4088:	ldr	w0, [x0, #2496]
    408c:	add	w1, w0, w1
    4090:	add	w1, w28, w1
    4094:	ldr	x0, [sp, #248]
    4098:	ldr	x28, [sp, #264]
    409c:	ldr	w0, [x0, #2496]
    40a0:	ldr	w28, [x28, #2496]
    40a4:	add	w28, w0, w28
    40a8:	add	w28, w1, w28
    40ac:	ldr	x0, [sp, #280]
    40b0:	ldr	x1, [sp, #296]
    40b4:	ldr	w0, [x0, #2496]
    40b8:	ldr	w1, [x1, #2496]
    40bc:	add	w1, w0, w1
    40c0:	add	w1, w28, w1
    40c4:	ldr	x0, [sp, #312]
    40c8:	ldr	x28, [sp, #328]
    40cc:	ldr	w0, [x0, #2496]
    40d0:	ldr	w28, [x28, #2496]
    40d4:	add	w28, w0, w28
    40d8:	add	w28, w1, w28
    40dc:	ldr	x0, [sp, #344]
    40e0:	ldr	x1, [sp, #360]
    40e4:	ldr	w0, [x0, #2496]
    40e8:	ldr	w1, [x1, #2496]
    40ec:	add	w1, w0, w1
    40f0:	add	w1, w28, w1
    40f4:	ldr	x0, [sp, #376]
    40f8:	ldr	x28, [sp, #392]
    40fc:	ldr	w0, [x0, #2496]
    4100:	ldr	w28, [x28, #2496]
    4104:	add	w28, w0, w28
    4108:	add	w28, w1, w28
    410c:	ldr	x0, [sp, #408]
    4110:	ldr	x1, [sp, #424]
    4114:	ldr	w0, [x0, #2496]
    4118:	ldr	w1, [x1, #2496]
    411c:	add	w1, w0, w1
    4120:	add	w1, w28, w1
    4124:	ldr	x0, [sp, #440]
    4128:	ldr	x28, [sp, #456]
    412c:	ldr	w0, [x0, #2496]
    4130:	ldr	w28, [x28, #2496]
    4134:	add	w28, w0, w28
    4138:	add	w28, w1, w28
    413c:	ldr	x0, [sp, #472]
    4140:	ldr	x1, [sp, #488]
    4144:	ldr	w0, [x0, #2496]
    4148:	ldr	w1, [x1, #2496]
    414c:	add	w1, w0, w1
    4150:	add	w1, w28, w1
    4154:	ldr	x0, [sp, #504]
    4158:	ldr	x28, [sp, #520]
    415c:	ldr	w0, [x0, #2496]
    4160:	ldr	w28, [x28, #2496]
    4164:	add	w28, w0, w28
    4168:	add	w28, w1, w28
    416c:	ldr	x0, [sp, #536]
    4170:	ldr	x1, [sp, #552]
    4174:	ldr	w0, [x0, #2496]
    4178:	ldr	w1, [x1, #2496]
    417c:	add	w1, w0, w1
    4180:	add	w1, w28, w1
    4184:	ldr	x0, [sp, #568]
    4188:	ldr	x28, [sp, #584]
    418c:	ldr	w0, [x0, #2496]
    4190:	ldr	w28, [x28, #2496]
    4194:	add	w0, w0, w28
    4198:	add	w0, w1, w0
    419c:	ldr	x1, [sp, #600]
    41a0:	ldr	x28, [sp, #616]
    41a4:	ldr	w1, [x1, #2496]
    41a8:	ldr	w28, [x28, #2496]
    41ac:	add	w1, w1, w28
    41b0:	ldr	w28, [x25, #2496]
    41b4:	add	w1, w0, w1
    41b8:	ldr	w0, [x26, #2496]
    41bc:	add	w0, w0, w28
    41c0:	ldr	w28, [x23, #2496]
    41c4:	add	w0, w1, w0
    41c8:	ldr	w1, [x24, #2496]
    41cc:	add	w1, w1, w28
    41d0:	ldr	w28, [x18, #2496]
    41d4:	add	w1, w0, w1
    41d8:	ldr	w0, [x30, #2496]
    41dc:	add	w0, w0, w28
    41e0:	ldr	w28, [x16, #2496]
    41e4:	add	w0, w1, w0
    41e8:	ldr	w1, [x17, #2496]
    41ec:	add	w1, w1, w28
    41f0:	ldr	w28, [x14, #2496]
    41f4:	add	w1, w0, w1
    41f8:	ldr	w0, [x15, #2496]
    41fc:	add	w0, w0, w28
    4200:	ldr	w28, [x12, #2496]
    4204:	add	w0, w1, w0
    4208:	ldr	w1, [x13, #2496]
    420c:	add	w1, w1, w28
    4210:	ldr	w28, [x10, #2496]
    4214:	add	w1, w0, w1
    4218:	ldr	w0, [x11, #2496]
    421c:	add	w0, w0, w28
    4220:	ldr	w28, [x8, #2496]
    4224:	add	w0, w1, w0
    4228:	ldr	w1, [x9, #2496]
    422c:	add	w1, w1, w28
    4230:	add	w1, w0, w1
    4234:	ldr	w0, [x7, #2496]
    4238:	ldr	x7, [sp, #768]
    423c:	ldr	w28, [x7, #2496]
    4240:	add	w0, w0, w28
    4244:	ldr	w28, [x4, #2496]
    4248:	add	w0, w1, w0
    424c:	ldr	x1, [sp, #784]
    4250:	ldr	w1, [x1, #2496]
    4254:	add	w1, w1, w28
    4258:	add	w1, w0, w1
    425c:	ldr	w0, [x3, #2496]
    4260:	ldr	w28, [x2, #2496]
    4264:	add	w0, w0, w28
    4268:	add	w0, w1, w0
    426c:	ldr	x1, [sp, #176]
    4270:	add	x2, x1, #0xc9b
    4274:	ldr	x1, [sp, #192]
    4278:	add	x2, x19, x2, lsl #4
    427c:	add	x1, x1, #0xc9b
    4280:	ldr	w2, [x2, #8]
    4284:	add	x1, x19, x1, lsl #4
    4288:	ldr	w1, [x1, #8]
    428c:	add	w2, w2, w1
    4290:	ldr	x1, [sp, #208]
    4294:	add	x3, x1, #0xc9b
    4298:	ldr	x1, [sp, #224]
    429c:	add	x3, x19, x3, lsl #4
    42a0:	add	x1, x1, #0xc9b
    42a4:	ldr	w3, [x3, #8]
    42a8:	add	x1, x19, x1, lsl #4
    42ac:	ldr	w1, [x1, #8]
    42b0:	add	w3, w3, w1
    42b4:	ldr	x1, [sp, #240]
    42b8:	add	w2, w2, w3
    42bc:	add	x3, x1, #0xc9b
    42c0:	ldr	x1, [sp, #256]
    42c4:	add	x3, x19, x3, lsl #4
    42c8:	add	x1, x1, #0xc9b
    42cc:	ldr	w3, [x3, #8]
    42d0:	add	x1, x19, x1, lsl #4
    42d4:	ldr	w1, [x1, #8]
    42d8:	add	w3, w3, w1
    42dc:	ldr	x1, [sp, #272]
    42e0:	add	w2, w2, w3
    42e4:	add	x3, x1, #0xc9b
    42e8:	ldr	x1, [sp, #288]
    42ec:	add	x3, x19, x3, lsl #4
    42f0:	add	x1, x1, #0xc9b
    42f4:	ldr	w3, [x3, #8]
    42f8:	add	x1, x19, x1, lsl #4
    42fc:	ldr	w1, [x1, #8]
    4300:	add	w3, w3, w1
    4304:	ldr	x1, [sp, #304]
    4308:	add	w2, w2, w3
    430c:	add	x3, x1, #0xc9b
    4310:	ldr	x1, [sp, #320]
    4314:	add	x3, x19, x3, lsl #4
    4318:	add	x1, x1, #0xc9b
    431c:	ldr	w3, [x3, #8]
    4320:	add	x1, x19, x1, lsl #4
    4324:	ldr	w1, [x1, #8]
    4328:	add	w3, w3, w1
    432c:	ldr	x1, [sp, #336]
    4330:	add	w2, w2, w3
    4334:	add	x3, x1, #0xc9b
    4338:	ldr	x1, [sp, #352]
    433c:	add	x3, x19, x3, lsl #4
    4340:	add	x1, x1, #0xc9b
    4344:	ldr	w3, [x3, #8]
    4348:	add	x1, x19, x1, lsl #4
    434c:	ldr	w1, [x1, #8]
    4350:	add	w3, w3, w1
    4354:	ldr	x1, [sp, #368]
    4358:	add	w2, w2, w3
    435c:	add	x3, x1, #0xc9b
    4360:	ldr	x1, [sp, #384]
    4364:	add	x3, x19, x3, lsl #4
    4368:	add	x1, x1, #0xc9b
    436c:	ldr	w3, [x3, #8]
    4370:	add	x1, x19, x1, lsl #4
    4374:	ldr	w1, [x1, #8]
    4378:	add	w3, w3, w1
    437c:	ldr	x1, [sp, #400]
    4380:	add	w2, w2, w3
    4384:	add	x3, x1, #0xc9b
    4388:	ldr	x1, [sp, #416]
    438c:	add	x3, x19, x3, lsl #4
    4390:	add	x1, x1, #0xc9b
    4394:	ldr	w3, [x3, #8]
    4398:	add	x1, x19, x1, lsl #4
    439c:	ldr	w1, [x1, #8]
    43a0:	add	w3, w3, w1
    43a4:	ldr	x1, [sp, #432]
    43a8:	add	w2, w2, w3
    43ac:	add	x3, x1, #0xc9b
    43b0:	ldr	x1, [sp, #448]
    43b4:	add	x3, x19, x3, lsl #4
    43b8:	add	x1, x1, #0xc9b
    43bc:	ldr	w3, [x3, #8]
    43c0:	add	x1, x19, x1, lsl #4
    43c4:	ldr	w1, [x1, #8]
    43c8:	add	w3, w3, w1
    43cc:	ldr	x1, [sp, #464]
    43d0:	add	w2, w2, w3
    43d4:	add	x3, x1, #0xc9b
    43d8:	ldr	x1, [sp, #480]
    43dc:	add	x3, x19, x3, lsl #4
    43e0:	add	x1, x1, #0xc9b
    43e4:	ldr	w3, [x3, #8]
    43e8:	add	x1, x19, x1, lsl #4
    43ec:	ldr	w1, [x1, #8]
    43f0:	add	w3, w3, w1
    43f4:	ldr	x1, [sp, #496]
    43f8:	add	w2, w2, w3
    43fc:	add	x3, x1, #0xc9b
    4400:	ldr	x1, [sp, #512]
    4404:	add	x3, x19, x3, lsl #4
    4408:	add	x1, x1, #0xc9b
    440c:	ldr	w3, [x3, #8]
    4410:	add	x1, x19, x1, lsl #4
    4414:	ldr	w1, [x1, #8]
    4418:	add	w3, w3, w1
    441c:	ldr	x1, [sp, #528]
    4420:	add	w2, w2, w3
    4424:	add	x3, x1, #0xc9b
    4428:	ldr	x1, [sp, #544]
    442c:	add	x3, x19, x3, lsl #4
    4430:	add	x1, x1, #0xc9b
    4434:	ldr	w3, [x3, #8]
    4438:	add	x1, x19, x1, lsl #4
    443c:	ldr	w1, [x1, #8]
    4440:	add	w3, w3, w1
    4444:	ldr	x1, [sp, #560]
    4448:	add	w2, w2, w3
    444c:	add	x3, x1, #0xc9b
    4450:	ldr	x1, [sp, #576]
    4454:	add	x3, x19, x3, lsl #4
    4458:	add	x1, x1, #0xc9b
    445c:	ldr	w3, [x3, #8]
    4460:	add	x1, x19, x1, lsl #4
    4464:	ldr	w1, [x1, #8]
    4468:	add	w3, w3, w1
    446c:	ldr	x1, [sp, #592]
    4470:	add	w2, w2, w3
    4474:	add	x3, x1, #0xc9b
    4478:	ldr	x1, [sp, #608]
    447c:	add	x3, x19, x3, lsl #4
    4480:	add	x1, x1, #0xc9b
    4484:	ldr	w3, [x3, #8]
    4488:	add	x1, x19, x1, lsl #4
    448c:	ldr	w1, [x1, #8]
    4490:	add	w3, w3, w1
    4494:	ldr	x1, [sp, #624]
    4498:	add	w2, w2, w3
    449c:	add	x3, x1, #0xc9b
    44a0:	ldr	x1, [sp, #632]
    44a4:	add	x3, x19, x3, lsl #4
    44a8:	add	x1, x1, #0xc9b
    44ac:	ldr	w3, [x3, #8]
    44b0:	add	x1, x19, x1, lsl #4
    44b4:	ldr	w1, [x1, #8]
    44b8:	add	w3, w3, w1
    44bc:	ldr	x1, [sp, #640]
    44c0:	add	w2, w2, w3
    44c4:	add	x3, x1, #0xc9b
    44c8:	ldr	x1, [sp, #648]
    44cc:	add	x3, x19, x3, lsl #4
    44d0:	add	x1, x1, #0xc9b
    44d4:	ldr	w3, [x3, #8]
    44d8:	add	x1, x19, x1, lsl #4
    44dc:	ldr	w1, [x1, #8]
    44e0:	add	w3, w3, w1
    44e4:	ldr	x1, [sp, #656]
    44e8:	add	w2, w2, w3
    44ec:	add	x4, x1, #0xc9b
    44f0:	ldr	x1, [sp, #664]
    44f4:	add	x4, x19, x4, lsl #4
    44f8:	add	x3, x1, #0xc9b
    44fc:	ldr	w1, [x4, #8]
    4500:	add	x3, x19, x3, lsl #4
    4504:	ldr	w3, [x3, #8]
    4508:	add	w1, w1, w3
    450c:	add	w1, w2, w1
    4510:	ldr	x2, [sp, #672]
    4514:	ldr	x3, [sp, #680]
    4518:	add	x2, x2, #0xc9b
    451c:	add	x4, x3, #0xc9b
    4520:	add	x2, x19, x2, lsl #4
    4524:	add	x4, x19, x4, lsl #4
    4528:	ldr	w2, [x2, #8]
    452c:	ldr	w3, [x4, #8]
    4530:	add	w2, w2, w3
    4534:	add	w2, w1, w2
    4538:	ldr	x1, [sp, #688]
    453c:	ldr	x3, [sp, #696]
    4540:	add	x1, x1, #0xc9b
    4544:	add	x4, x3, #0xc9b
    4548:	add	x1, x19, x1, lsl #4
    454c:	add	x4, x19, x4, lsl #4
    4550:	ldr	w1, [x1, #8]
    4554:	ldr	w3, [x4, #8]
    4558:	add	w1, w1, w3
    455c:	add	w1, w2, w1
    4560:	ldr	x2, [sp, #704]
    4564:	ldr	x3, [sp, #712]
    4568:	add	x2, x2, #0xc9b
    456c:	add	x4, x3, #0xc9b
    4570:	add	x2, x19, x2, lsl #4
    4574:	add	x4, x19, x4, lsl #4
    4578:	ldr	w2, [x2, #8]
    457c:	ldr	w3, [x4, #8]
    4580:	add	w2, w2, w3
    4584:	add	w2, w1, w2
    4588:	ldr	x1, [sp, #720]
    458c:	ldr	x3, [sp, #728]
    4590:	add	x1, x1, #0xc9b
    4594:	add	x4, x3, #0xc9b
    4598:	add	x1, x19, x1, lsl #4
    459c:	add	x4, x19, x4, lsl #4
    45a0:	ldr	w1, [x1, #8]
    45a4:	ldr	w3, [x4, #8]
    45a8:	add	w1, w1, w3
    45ac:	add	w1, w2, w1
    45b0:	ldr	x2, [sp, #736]
    45b4:	ldr	x3, [sp, #744]
    45b8:	add	x2, x2, #0xc9b
    45bc:	add	x4, x3, #0xc9b
    45c0:	add	x2, x19, x2, lsl #4
    45c4:	add	x4, x19, x4, lsl #4
    45c8:	ldr	w2, [x2, #8]
    45cc:	ldr	w3, [x4, #8]
    45d0:	add	w2, w2, w3
    45d4:	add	w2, w1, w2
    45d8:	ldr	x1, [sp, #752]
    45dc:	ldr	x3, [sp, #760]
    45e0:	add	x1, x1, #0xc9b
    45e4:	add	x4, x3, #0xc9b
    45e8:	add	x1, x19, x1, lsl #4
    45ec:	add	x4, x19, x4, lsl #4
    45f0:	ldr	w1, [x1, #8]
    45f4:	ldr	w3, [x4, #8]
    45f8:	add	w1, w1, w3
    45fc:	add	w2, w2, w1
    4600:	ldr	x1, [sp, #776]
    4604:	ldr	x3, [sp, #792]
    4608:	add	x1, x1, #0xc9b
    460c:	add	x4, x3, #0xc9b
    4610:	add	x1, x19, x1, lsl #4
    4614:	add	x4, x19, x4, lsl #4
    4618:	ldr	w1, [x1, #8]
    461c:	ldr	w3, [x4, #8]
    4620:	str	w0, [sp, #856]
    4624:	add	w1, w1, w3
    4628:	add	w2, w2, w1
    462c:	ldr	x1, [sp, #800]
    4630:	add	x3, x1, #0xc9b
    4634:	ldr	x1, [sp, #808]
    4638:	add	x3, x19, x3, lsl #4
    463c:	add	x1, x1, #0xc9b
    4640:	ldr	w3, [x3, #8]
    4644:	add	x1, x19, x1, lsl #4
    4648:	ldr	w1, [x1, #8]
    464c:	add	w1, w3, w1
    4650:	add	w2, w2, w1
    4654:	ldr	w1, [sp, #832]
    4658:	str	w2, [sp, #848]
    465c:	str	w1, [sp, #852]
    4660:	mov	w2, #0xc9ff                	// #51711
    4664:	mov	x0, #0x0                   	// #0
    4668:	mov	w1, #0xffffffff            	// #-1
    466c:	movk	w2, #0x3b9a, lsl #16
    4670:	ldr	x3, [sp, #168]
    4674:	ldrh	w3, [x3, x0, lsl #1]
    4678:	cmp	w3, w2
    467c:	b.ge	4688 <BZ2_compressBlock@@Base+0x11f4>  // b.tcont
    4680:	mov	w2, w3
    4684:	mov	w1, w0
    4688:	add	x0, x0, #0x1
    468c:	cmp	w22, w0
    4690:	b.gt	4670 <BZ2_compressBlock@@Base+0x11dc>
    4694:	ldr	w0, [sp, #824]
    4698:	cmp	w22, #0x6
    469c:	ldr	x3, [sp, #816]
    46a0:	add	w0, w0, w2
    46a4:	str	w0, [sp, #824]
    46a8:	sbfiz	x2, x1, #2, #32
    46ac:	ldr	x0, [sp, #816]
    46b0:	ldr	w0, [x0, x2]
    46b4:	add	w0, w0, #0x1
    46b8:	str	w0, [x3, x2]
    46bc:	ldr	x2, [sp, #128]
    46c0:	ldr	x0, [sp, #840]
    46c4:	strb	w1, [x0, x2]
    46c8:	sxtw	x0, w5
    46cc:	b.ne	4d24 <BZ2_compressBlock@@Base+0x1890>  // b.any
    46d0:	sub	w2, w6, w5
    46d4:	cmp	w2, #0x31
    46d8:	b.ne	4d24 <BZ2_compressBlock@@Base+0x1890>  // b.any
    46dc:	mov	w2, #0x102                 	// #258
    46e0:	smull	x1, w1, w2
    46e4:	ldrh	w2, [x20, x0, lsl #1]
    46e8:	add	x0, x20, x0, lsl #1
    46ec:	add	x2, x2, x1
    46f0:	add	x2, x19, x2, lsl #2
    46f4:	add	x2, x2, #0x8, lsl #12
    46f8:	ldr	w3, [x2, #12680]
    46fc:	add	w3, w3, #0x1
    4700:	str	w3, [x2, #12680]
    4704:	ldrh	w2, [x0, #2]
    4708:	add	x2, x2, x1
    470c:	add	x2, x19, x2, lsl #2
    4710:	add	x2, x2, #0x8, lsl #12
    4714:	ldr	w3, [x2, #12680]
    4718:	add	w3, w3, #0x1
    471c:	str	w3, [x2, #12680]
    4720:	ldrh	w2, [x0, #4]
    4724:	add	x2, x2, x1
    4728:	add	x2, x19, x2, lsl #2
    472c:	add	x2, x2, #0x8, lsl #12
    4730:	ldr	w3, [x2, #12680]
    4734:	add	w3, w3, #0x1
    4738:	str	w3, [x2, #12680]
    473c:	ldrh	w2, [x0, #6]
    4740:	add	x2, x2, x1
    4744:	add	x2, x19, x2, lsl #2
    4748:	add	x2, x2, #0x8, lsl #12
    474c:	ldr	w3, [x2, #12680]
    4750:	add	w3, w3, #0x1
    4754:	str	w3, [x2, #12680]
    4758:	ldrh	w2, [x0, #8]
    475c:	add	x2, x2, x1
    4760:	add	x2, x19, x2, lsl #2
    4764:	add	x2, x2, #0x8, lsl #12
    4768:	ldr	w3, [x2, #12680]
    476c:	add	w3, w3, #0x1
    4770:	str	w3, [x2, #12680]
    4774:	ldrh	w2, [x0, #10]
    4778:	add	x2, x2, x1
    477c:	add	x2, x19, x2, lsl #2
    4780:	add	x2, x2, #0x8, lsl #12
    4784:	ldr	w3, [x2, #12680]
    4788:	add	w3, w3, #0x1
    478c:	str	w3, [x2, #12680]
    4790:	ldrh	w2, [x0, #12]
    4794:	add	x2, x2, x1
    4798:	add	x2, x19, x2, lsl #2
    479c:	add	x2, x2, #0x8, lsl #12
    47a0:	ldr	w3, [x2, #12680]
    47a4:	add	w3, w3, #0x1
    47a8:	str	w3, [x2, #12680]
    47ac:	ldrh	w2, [x0, #14]
    47b0:	add	x2, x2, x1
    47b4:	add	x2, x19, x2, lsl #2
    47b8:	add	x2, x2, #0x8, lsl #12
    47bc:	ldr	w3, [x2, #12680]
    47c0:	add	w3, w3, #0x1
    47c4:	str	w3, [x2, #12680]
    47c8:	ldrh	w2, [x0, #16]
    47cc:	add	x2, x2, x1
    47d0:	add	x2, x19, x2, lsl #2
    47d4:	add	x2, x2, #0x8, lsl #12
    47d8:	ldr	w3, [x2, #12680]
    47dc:	add	w3, w3, #0x1
    47e0:	str	w3, [x2, #12680]
    47e4:	ldrh	w2, [x0, #18]
    47e8:	add	x2, x2, x1
    47ec:	add	x2, x19, x2, lsl #2
    47f0:	add	x2, x2, #0x8, lsl #12
    47f4:	ldr	w3, [x2, #12680]
    47f8:	add	w3, w3, #0x1
    47fc:	str	w3, [x2, #12680]
    4800:	ldrh	w2, [x0, #20]
    4804:	add	x2, x2, x1
    4808:	add	x2, x19, x2, lsl #2
    480c:	add	x2, x2, #0x8, lsl #12
    4810:	ldr	w3, [x2, #12680]
    4814:	add	w3, w3, #0x1
    4818:	str	w3, [x2, #12680]
    481c:	ldrh	w2, [x0, #22]
    4820:	add	x2, x2, x1
    4824:	add	x2, x19, x2, lsl #2
    4828:	add	x2, x2, #0x8, lsl #12
    482c:	ldr	w3, [x2, #12680]
    4830:	add	w3, w3, #0x1
    4834:	str	w3, [x2, #12680]
    4838:	ldrh	w2, [x0, #24]
    483c:	add	x2, x2, x1
    4840:	add	x2, x19, x2, lsl #2
    4844:	add	x2, x2, #0x8, lsl #12
    4848:	ldr	w3, [x2, #12680]
    484c:	add	w3, w3, #0x1
    4850:	str	w3, [x2, #12680]
    4854:	ldrh	w2, [x0, #26]
    4858:	add	x2, x2, x1
    485c:	add	x2, x19, x2, lsl #2
    4860:	add	x2, x2, #0x8, lsl #12
    4864:	ldr	w3, [x2, #12680]
    4868:	add	w3, w3, #0x1
    486c:	str	w3, [x2, #12680]
    4870:	ldrh	w2, [x0, #28]
    4874:	add	x2, x2, x1
    4878:	add	x2, x19, x2, lsl #2
    487c:	add	x2, x2, #0x8, lsl #12
    4880:	ldr	w3, [x2, #12680]
    4884:	add	w3, w3, #0x1
    4888:	str	w3, [x2, #12680]
    488c:	ldrh	w2, [x0, #30]
    4890:	add	x2, x2, x1
    4894:	add	x2, x19, x2, lsl #2
    4898:	add	x2, x2, #0x8, lsl #12
    489c:	ldr	w3, [x2, #12680]
    48a0:	add	w3, w3, #0x1
    48a4:	str	w3, [x2, #12680]
    48a8:	ldrh	w2, [x0, #32]
    48ac:	add	x2, x2, x1
    48b0:	add	x2, x19, x2, lsl #2
    48b4:	add	x2, x2, #0x8, lsl #12
    48b8:	ldr	w3, [x2, #12680]
    48bc:	add	w3, w3, #0x1
    48c0:	str	w3, [x2, #12680]
    48c4:	ldrh	w2, [x0, #34]
    48c8:	add	x2, x2, x1
    48cc:	add	x2, x19, x2, lsl #2
    48d0:	add	x2, x2, #0x8, lsl #12
    48d4:	ldr	w3, [x2, #12680]
    48d8:	add	w3, w3, #0x1
    48dc:	str	w3, [x2, #12680]
    48e0:	ldrh	w2, [x0, #36]
    48e4:	add	x2, x2, x1
    48e8:	add	x2, x19, x2, lsl #2
    48ec:	add	x2, x2, #0x8, lsl #12
    48f0:	ldr	w3, [x2, #12680]
    48f4:	add	w3, w3, #0x1
    48f8:	str	w3, [x2, #12680]
    48fc:	ldrh	w2, [x0, #38]
    4900:	add	x2, x2, x1
    4904:	add	x2, x19, x2, lsl #2
    4908:	add	x2, x2, #0x8, lsl #12
    490c:	ldr	w3, [x2, #12680]
    4910:	add	w3, w3, #0x1
    4914:	str	w3, [x2, #12680]
    4918:	ldrh	w2, [x0, #40]
    491c:	add	x2, x2, x1
    4920:	add	x2, x19, x2, lsl #2
    4924:	add	x2, x2, #0x8, lsl #12
    4928:	ldr	w3, [x2, #12680]
    492c:	add	w3, w3, #0x1
    4930:	str	w3, [x2, #12680]
    4934:	ldrh	w2, [x0, #42]
    4938:	add	x2, x2, x1
    493c:	add	x2, x19, x2, lsl #2
    4940:	add	x2, x2, #0x8, lsl #12
    4944:	ldr	w3, [x2, #12680]
    4948:	add	w3, w3, #0x1
    494c:	str	w3, [x2, #12680]
    4950:	ldrh	w2, [x0, #44]
    4954:	add	x2, x2, x1
    4958:	add	x2, x19, x2, lsl #2
    495c:	add	x2, x2, #0x8, lsl #12
    4960:	ldr	w3, [x2, #12680]
    4964:	add	w3, w3, #0x1
    4968:	str	w3, [x2, #12680]
    496c:	ldrh	w2, [x0, #46]
    4970:	add	x2, x2, x1
    4974:	add	x2, x19, x2, lsl #2
    4978:	add	x2, x2, #0x8, lsl #12
    497c:	ldr	w3, [x2, #12680]
    4980:	add	w3, w3, #0x1
    4984:	str	w3, [x2, #12680]
    4988:	ldrh	w2, [x0, #48]
    498c:	add	x2, x2, x1
    4990:	add	x2, x19, x2, lsl #2
    4994:	add	x2, x2, #0x8, lsl #12
    4998:	ldr	w3, [x2, #12680]
    499c:	add	w3, w3, #0x1
    49a0:	str	w3, [x2, #12680]
    49a4:	ldrh	w2, [x0, #50]
    49a8:	add	x2, x2, x1
    49ac:	add	x2, x19, x2, lsl #2
    49b0:	add	x2, x2, #0x8, lsl #12
    49b4:	ldr	w3, [x2, #12680]
    49b8:	add	w3, w3, #0x1
    49bc:	str	w3, [x2, #12680]
    49c0:	ldrh	w2, [x0, #52]
    49c4:	add	x2, x2, x1
    49c8:	add	x2, x19, x2, lsl #2
    49cc:	add	x2, x2, #0x8, lsl #12
    49d0:	ldr	w3, [x2, #12680]
    49d4:	add	w3, w3, #0x1
    49d8:	str	w3, [x2, #12680]
    49dc:	ldrh	w2, [x0, #54]
    49e0:	add	x2, x2, x1
    49e4:	add	x2, x19, x2, lsl #2
    49e8:	add	x2, x2, #0x8, lsl #12
    49ec:	ldr	w3, [x2, #12680]
    49f0:	add	w3, w3, #0x1
    49f4:	str	w3, [x2, #12680]
    49f8:	ldrh	w2, [x0, #56]
    49fc:	add	x2, x2, x1
    4a00:	add	x2, x19, x2, lsl #2
    4a04:	add	x2, x2, #0x8, lsl #12
    4a08:	ldr	w3, [x2, #12680]
    4a0c:	add	w3, w3, #0x1
    4a10:	str	w3, [x2, #12680]
    4a14:	ldrh	w2, [x0, #58]
    4a18:	add	x2, x2, x1
    4a1c:	add	x2, x19, x2, lsl #2
    4a20:	add	x2, x2, #0x8, lsl #12
    4a24:	ldr	w3, [x2, #12680]
    4a28:	add	w3, w3, #0x1
    4a2c:	str	w3, [x2, #12680]
    4a30:	ldrh	w2, [x0, #60]
    4a34:	add	x2, x2, x1
    4a38:	add	x2, x19, x2, lsl #2
    4a3c:	add	x2, x2, #0x8, lsl #12
    4a40:	ldr	w3, [x2, #12680]
    4a44:	add	w3, w3, #0x1
    4a48:	str	w3, [x2, #12680]
    4a4c:	ldrh	w2, [x0, #62]
    4a50:	add	x2, x2, x1
    4a54:	add	x2, x19, x2, lsl #2
    4a58:	add	x2, x2, #0x8, lsl #12
    4a5c:	ldr	w3, [x2, #12680]
    4a60:	add	w3, w3, #0x1
    4a64:	str	w3, [x2, #12680]
    4a68:	ldrh	w2, [x0, #64]
    4a6c:	add	x2, x2, x1
    4a70:	add	x2, x19, x2, lsl #2
    4a74:	add	x2, x2, #0x8, lsl #12
    4a78:	ldr	w3, [x2, #12680]
    4a7c:	add	w3, w3, #0x1
    4a80:	str	w3, [x2, #12680]
    4a84:	ldrh	w2, [x0, #66]
    4a88:	add	x2, x2, x1
    4a8c:	add	x2, x19, x2, lsl #2
    4a90:	add	x2, x2, #0x8, lsl #12
    4a94:	ldr	w3, [x2, #12680]
    4a98:	add	w3, w3, #0x1
    4a9c:	str	w3, [x2, #12680]
    4aa0:	ldrh	w2, [x0, #68]
    4aa4:	add	x2, x2, x1
    4aa8:	add	x2, x19, x2, lsl #2
    4aac:	add	x2, x2, #0x8, lsl #12
    4ab0:	ldr	w3, [x2, #12680]
    4ab4:	add	w3, w3, #0x1
    4ab8:	str	w3, [x2, #12680]
    4abc:	ldrh	w2, [x0, #70]
    4ac0:	add	x2, x2, x1
    4ac4:	add	x2, x19, x2, lsl #2
    4ac8:	add	x2, x2, #0x8, lsl #12
    4acc:	ldr	w3, [x2, #12680]
    4ad0:	add	w3, w3, #0x1
    4ad4:	str	w3, [x2, #12680]
    4ad8:	ldrh	w2, [x0, #72]
    4adc:	add	x2, x2, x1
    4ae0:	add	x2, x19, x2, lsl #2
    4ae4:	add	x2, x2, #0x8, lsl #12
    4ae8:	ldr	w3, [x2, #12680]
    4aec:	add	w3, w3, #0x1
    4af0:	str	w3, [x2, #12680]
    4af4:	ldrh	w2, [x0, #74]
    4af8:	add	x2, x2, x1
    4afc:	add	x2, x19, x2, lsl #2
    4b00:	add	x2, x2, #0x8, lsl #12
    4b04:	ldr	w3, [x2, #12680]
    4b08:	add	w3, w3, #0x1
    4b0c:	str	w3, [x2, #12680]
    4b10:	ldrh	w2, [x0, #76]
    4b14:	add	x2, x2, x1
    4b18:	add	x2, x19, x2, lsl #2
    4b1c:	add	x2, x2, #0x8, lsl #12
    4b20:	ldr	w3, [x2, #12680]
    4b24:	add	w3, w3, #0x1
    4b28:	str	w3, [x2, #12680]
    4b2c:	ldrh	w2, [x0, #78]
    4b30:	add	x2, x2, x1
    4b34:	add	x2, x19, x2, lsl #2
    4b38:	add	x2, x2, #0x8, lsl #12
    4b3c:	ldr	w3, [x2, #12680]
    4b40:	add	w3, w3, #0x1
    4b44:	str	w3, [x2, #12680]
    4b48:	ldrh	w2, [x0, #80]
    4b4c:	add	x2, x2, x1
    4b50:	add	x2, x19, x2, lsl #2
    4b54:	add	x2, x2, #0x8, lsl #12
    4b58:	ldr	w3, [x2, #12680]
    4b5c:	add	w3, w3, #0x1
    4b60:	str	w3, [x2, #12680]
    4b64:	ldrh	w2, [x0, #82]
    4b68:	add	x2, x2, x1
    4b6c:	add	x2, x19, x2, lsl #2
    4b70:	add	x2, x2, #0x8, lsl #12
    4b74:	ldr	w3, [x2, #12680]
    4b78:	add	w3, w3, #0x1
    4b7c:	str	w3, [x2, #12680]
    4b80:	ldrh	w2, [x0, #84]
    4b84:	add	x2, x2, x1
    4b88:	add	x2, x19, x2, lsl #2
    4b8c:	add	x2, x2, #0x8, lsl #12
    4b90:	ldr	w3, [x2, #12680]
    4b94:	add	w3, w3, #0x1
    4b98:	str	w3, [x2, #12680]
    4b9c:	ldrh	w2, [x0, #86]
    4ba0:	add	x2, x2, x1
    4ba4:	add	x2, x19, x2, lsl #2
    4ba8:	add	x2, x2, #0x8, lsl #12
    4bac:	ldr	w3, [x2, #12680]
    4bb0:	add	w3, w3, #0x1
    4bb4:	str	w3, [x2, #12680]
    4bb8:	ldrh	w2, [x0, #88]
    4bbc:	add	x2, x2, x1
    4bc0:	add	x2, x19, x2, lsl #2
    4bc4:	add	x2, x2, #0x8, lsl #12
    4bc8:	ldr	w3, [x2, #12680]
    4bcc:	add	w3, w3, #0x1
    4bd0:	str	w3, [x2, #12680]
    4bd4:	ldrh	w2, [x0, #90]
    4bd8:	add	x2, x2, x1
    4bdc:	add	x2, x19, x2, lsl #2
    4be0:	add	x2, x2, #0x8, lsl #12
    4be4:	ldr	w3, [x2, #12680]
    4be8:	add	w3, w3, #0x1
    4bec:	str	w3, [x2, #12680]
    4bf0:	ldrh	w2, [x0, #92]
    4bf4:	add	x2, x2, x1
    4bf8:	add	x2, x19, x2, lsl #2
    4bfc:	add	x2, x2, #0x8, lsl #12
    4c00:	ldr	w3, [x2, #12680]
    4c04:	add	w3, w3, #0x1
    4c08:	str	w3, [x2, #12680]
    4c0c:	ldrh	w2, [x0, #94]
    4c10:	add	x2, x2, x1
    4c14:	add	x2, x19, x2, lsl #2
    4c18:	add	x2, x2, #0x8, lsl #12
    4c1c:	ldr	w3, [x2, #12680]
    4c20:	add	w3, w3, #0x1
    4c24:	str	w3, [x2, #12680]
    4c28:	ldrh	w2, [x0, #96]
    4c2c:	ldrh	w0, [x0, #98]
    4c30:	add	x2, x2, x1
    4c34:	add	x1, x0, x1
    4c38:	add	x2, x19, x2, lsl #2
    4c3c:	add	x2, x2, #0x8, lsl #12
    4c40:	add	x1, x19, x1, lsl #2
    4c44:	add	x1, x1, #0x8, lsl #12
    4c48:	ldr	w3, [x2, #12680]
    4c4c:	add	w3, w3, #0x1
    4c50:	str	w3, [x2, #12680]
    4c54:	ldr	w0, [x1, #12680]
    4c58:	add	w0, w0, #0x1
    4c5c:	str	w0, [x1, #12680]
    4c60:	ldr	x0, [sp, #128]
    4c64:	add	w5, w6, #0x1
    4c68:	add	x0, x0, #0x1
    4c6c:	str	x0, [sp, #128]
    4c70:	b	3a70 <BZ2_compressBlock@@Base+0x5dc>
    4c74:	ldrb	w4, [x0]
    4c78:	add	w2, w2, #0x1
    4c7c:	ldrb	w3, [x0, #258]
    4c80:	add	x1, x1, #0x10
    4c84:	add	x0, x0, #0x1
    4c88:	orr	w3, w4, w3, lsl #16
    4c8c:	stur	w3, [x1, #-16]
    4c90:	ldrb	w4, [x0, #515]
    4c94:	ldrb	w3, [x0, #773]
    4c98:	orr	w3, w4, w3, lsl #16
    4c9c:	stur	w3, [x1, #-12]
    4ca0:	ldrb	w3, [x0, #1289]
    4ca4:	ldrb	w4, [x0, #1031]
    4ca8:	orr	w3, w4, w3, lsl #16
    4cac:	stur	w3, [x1, #-8]
    4cb0:	b	3a34 <BZ2_compressBlock@@Base+0x5a0>
    4cb4:	ldrh	w0, [x20, x28, lsl #1]
    4cb8:	mov	x7, #0x934c                	// #37708
    4cbc:	ldr	x3, [sp, #168]
    4cc0:	add	x0, x0, x7
    4cc4:	add	x0, x19, x0
    4cc8:	mov	x2, #0x0                   	// #0
    4ccc:	mov	x1, #0x102                 	// #258
    4cd0:	ldrh	w4, [x3]
    4cd4:	mul	x1, x2, x1
    4cd8:	add	x2, x2, #0x1
    4cdc:	cmp	w22, w2
    4ce0:	ldrb	w1, [x0, x1]
    4ce4:	add	w1, w1, w4
    4ce8:	strh	w1, [x3], #2
    4cec:	b.gt	4ccc <BZ2_compressBlock@@Base+0x1838>
    4cf0:	add	x28, x28, #0x1
    4cf4:	cmp	w6, w28
    4cf8:	b.ge	4cb4 <BZ2_compressBlock@@Base+0x1820>  // b.tcont
    4cfc:	b	4660 <BZ2_compressBlock@@Base+0x11cc>
    4d00:	ldrh	w2, [x20, x0, lsl #1]
    4d04:	mov	w3, #0x102                 	// #258
    4d08:	add	x0, x0, #0x1
    4d0c:	smaddl	x2, w1, w3, x2
    4d10:	add	x2, x19, x2, lsl #2
    4d14:	add	x2, x2, #0x8, lsl #12
    4d18:	ldr	w3, [x2, #12680]
    4d1c:	add	w3, w3, #0x1
    4d20:	str	w3, [x2, #12680]
    4d24:	cmp	w6, w0
    4d28:	b.ge	4d00 <BZ2_compressBlock@@Base+0x186c>  // b.tcont
    4d2c:	b	4c60 <BZ2_compressBlock@@Base+0x17cc>
    4d30:	ldr	w0, [sp, #144]
    4d34:	add	w0, w0, #0x1
    4d38:	str	w0, [sp, #144]
    4d3c:	ldr	w0, [x19, #656]
    4d40:	cmp	w0, #0x2
    4d44:	b.le	4da8 <BZ2_compressBlock@@Base+0x1914>
    4d48:	adrp	x23, 1b000 <BZ2_bzerror@@Base+0x11140>
    4d4c:	ldr	w0, [sp, #824]
    4d50:	ldr	w2, [sp, #144]
    4d54:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    4d58:	ldr	x23, [x23, #4016]
    4d5c:	asr	w3, w0, #3
    4d60:	adrp	x26, a000 <BZ2_bzerror@@Base+0x140>
    4d64:	add	x1, x1, #0x131
    4d68:	add	x28, sp, #0x370
    4d6c:	add	x26, x26, #0x15a
    4d70:	ldr	x0, [x23]
    4d74:	mov	x24, x23
    4d78:	mov	x25, #0x0                   	// #0
    4d7c:	bl	1730 <fprintf@plt>
    4d80:	ldr	w2, [x28, x25, lsl #2]
    4d84:	mov	x1, x26
    4d88:	ldr	x0, [x24]
    4d8c:	add	x25, x25, #0x1
    4d90:	bl	1730 <fprintf@plt>
    4d94:	cmp	w22, w25
    4d98:	b.gt	4d80 <BZ2_compressBlock@@Base+0x18ec>
    4d9c:	ldr	x1, [x23]
    4da0:	mov	w0, #0xa                   	// #10
    4da4:	bl	1500 <fputc@plt>
    4da8:	ldr	x25, [sp, #120]
    4dac:	mov	w23, #0x0                   	// #0
    4db0:	ldr	w2, [sp, #136]
    4db4:	mov	x0, x25
    4db8:	ldr	x1, [sp, #160]
    4dbc:	mov	w3, #0x11                  	// #17
    4dc0:	add	x25, x25, #0x102
    4dc4:	bl	14b0 <BZ2_hbMakeCodeLengths@plt>
    4dc8:	ldr	x0, [sp, #160]
    4dcc:	mov	w1, w23
    4dd0:	add	w23, w23, #0x1
    4dd4:	add	x0, x0, #0x408
    4dd8:	str	x0, [sp, #160]
    4ddc:	ldr	w0, [sp, #140]
    4de0:	cmp	w0, w1
    4de4:	b.ne	4db0 <BZ2_compressBlock@@Base+0x191c>  // b.any
    4de8:	ldr	w0, [sp, #144]
    4dec:	cmp	w0, #0x4
    4df0:	b.ne	396c <BZ2_compressBlock@@Base+0x4d8>  // b.any
    4df4:	add	x23, sp, #0x360
    4df8:	mov	x0, #0x0                   	// #0
    4dfc:	strb	w0, [x0, x23]
    4e00:	add	x0, x0, #0x1
    4e04:	cmp	w22, w0
    4e08:	b.gt	4dfc <BZ2_compressBlock@@Base+0x1968>
    4e0c:	ldrb	w2, [sp, #864]
    4e10:	mov	x5, #0x4cfa                	// #19706
    4e14:	add	x4, x19, #0x6a8
    4e18:	add	x5, x19, x5
    4e1c:	mov	x0, #0x0                   	// #0
    4e20:	ldr	w1, [sp, #176]
    4e24:	cmp	w1, w0
    4e28:	b.gt	4e4c <BZ2_compressBlock@@Base+0x19b8>
    4e2c:	ldr	x27, [sp, #120]
    4e30:	mov	x3, #0x9958                	// #39256
    4e34:	add	x25, x19, x3
    4e38:	mov	w26, #0x0                   	// #0
    4e3c:	mov	w24, #0x0                   	// #0
    4e40:	mov	x0, #0x0                   	// #0
    4e44:	mov	w28, #0x20                  	// #32
    4e48:	b	4e9c <BZ2_compressBlock@@Base+0x1a08>
    4e4c:	ldrb	w6, [x4, x0]
    4e50:	mov	x1, x23
    4e54:	mov	w3, #0x0                   	// #0
    4e58:	add	x1, x1, #0x1
    4e5c:	cmp	w6, w2
    4e60:	b.ne	4e70 <BZ2_compressBlock@@Base+0x19dc>  // b.any
    4e64:	strb	w3, [x5, x0]
    4e68:	add	x0, x0, #0x1
    4e6c:	b	4e20 <BZ2_compressBlock@@Base+0x198c>
    4e70:	ldrb	w7, [x1]
    4e74:	add	w3, w3, #0x1
    4e78:	strb	w2, [x1]
    4e7c:	mov	w2, w7
    4e80:	b	4e58 <BZ2_compressBlock@@Base+0x19c4>
    4e84:	ldrb	w1, [x27, x0]
    4e88:	add	x0, x0, #0x1
    4e8c:	cmp	w24, w1
    4e90:	csel	w24, w24, w1, ge  // ge = tcont
    4e94:	cmp	w28, w1
    4e98:	csel	w28, w28, w1, le
    4e9c:	ldr	w1, [sp, #136]
    4ea0:	cmp	w1, w0
    4ea4:	b.gt	4e84 <BZ2_compressBlock@@Base+0x19f0>
    4ea8:	cmp	w24, #0x11
    4eac:	b.le	4eb8 <BZ2_compressBlock@@Base+0x1a24>
    4eb0:	mov	w0, #0xbbc                 	// #3004
    4eb4:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    4eb8:	cbnz	w28, 4ec4 <BZ2_compressBlock@@Base+0x1a30>
    4ebc:	mov	w0, #0xbbd                 	// #3005
    4ec0:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    4ec4:	ldr	w4, [sp, #136]
    4ec8:	mov	x1, x27
    4ecc:	mov	x0, x25
    4ed0:	mov	w3, w24
    4ed4:	mov	w2, w28
    4ed8:	add	x25, x25, #0x408
    4edc:	add	x27, x27, #0x102
    4ee0:	bl	16c0 <BZ2_hbAssignCodes@plt>
    4ee4:	ldr	w1, [sp, #140]
    4ee8:	add	w0, w26, #0x1
    4eec:	cmp	w1, w26
    4ef0:	b.eq	4efc <BZ2_compressBlock@@Base+0x1a68>  // b.none
    4ef4:	mov	w26, w0
    4ef8:	b	4e3c <BZ2_compressBlock@@Base+0x19a8>
    4efc:	mov	x1, x23
    4f00:	add	x3, x19, #0x80
    4f04:	mov	x0, #0x0                   	// #0
    4f08:	mov	w4, #0x1                   	// #1
    4f0c:	add	x5, x3, x0
    4f10:	mov	x2, #0x0                   	// #0
    4f14:	strb	wzr, [x1]
    4f18:	ldrb	w6, [x5, x2]
    4f1c:	cbz	w6, 4f24 <BZ2_compressBlock@@Base+0x1a90>
    4f20:	strb	w4, [x1]
    4f24:	add	x2, x2, #0x1
    4f28:	cmp	x2, #0x10
    4f2c:	b.ne	4f18 <BZ2_compressBlock@@Base+0x1a84>  // b.any
    4f30:	add	x0, x0, #0x10
    4f34:	add	x1, x1, #0x1
    4f38:	cmp	x0, #0x100
    4f3c:	b.ne	4f0c <BZ2_compressBlock@@Base+0x1a78>  // b.any
    4f40:	ldr	w8, [x19, #116]
    4f44:	mov	x6, #0x0                   	// #0
    4f48:	ldrb	w0, [x23, x6]
    4f4c:	cbz	w0, 5450 <BZ2_compressBlock@@Base+0x1fbc>
    4f50:	mov	w2, #0x1                   	// #1
    4f54:	mov	x0, x19
    4f58:	mov	w1, #0x1                   	// #1
    4f5c:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    4f60:	add	x6, x6, #0x1
    4f64:	cmp	x6, #0x10
    4f68:	b.ne	4f48 <BZ2_compressBlock@@Base+0x1ab4>  // b.any
    4f6c:	mov	x6, #0x0                   	// #0
    4f70:	ldrb	w0, [x23, x6]
    4f74:	cbnz	w0, 5458 <BZ2_compressBlock@@Base+0x1fc4>
    4f78:	ldr	x0, [sp, #152]
    4f7c:	add	x6, x6, #0x1
    4f80:	cmp	x6, #0x10
    4f84:	add	x0, x0, #0x10
    4f88:	str	x0, [sp, #152]
    4f8c:	b.ne	4f70 <BZ2_compressBlock@@Base+0x1adc>  // b.any
    4f90:	ldr	w0, [x19, #656]
    4f94:	cmp	w0, #0x2
    4f98:	b.le	4fbc <BZ2_compressBlock@@Base+0x1b28>
    4f9c:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    4fa0:	ldr	w2, [x19, #116]
    4fa4:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    4fa8:	add	x1, x1, #0x15e
    4fac:	ldr	x0, [x0, #4016]
    4fb0:	sub	w2, w2, w8
    4fb4:	ldr	x0, [x0]
    4fb8:	bl	1730 <fprintf@plt>
    4fbc:	ldr	w8, [x19, #116]
    4fc0:	mov	w2, w22
    4fc4:	mov	x0, x19
    4fc8:	mov	w1, #0x3                   	// #3
    4fcc:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    4fd0:	ldr	w2, [sp, #128]
    4fd4:	mov	w1, #0xf                   	// #15
    4fd8:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    4fdc:	mov	x2, #0x4cfa                	// #19706
    4fe0:	add	x9, x19, x2
    4fe4:	mov	x6, #0x0                   	// #0
    4fe8:	ldr	w0, [sp, #176]
    4fec:	cmp	w0, w6
    4ff0:	b.gt	54c8 <BZ2_compressBlock@@Base+0x2034>
    4ff4:	ldr	w0, [x19, #656]
    4ff8:	cmp	w0, #0x2
    4ffc:	b.le	5020 <BZ2_compressBlock@@Base+0x1b8c>
    5000:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    5004:	ldr	w2, [x19, #116]
    5008:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    500c:	add	x1, x1, #0x178
    5010:	ldr	x0, [x0, #4016]
    5014:	sub	w2, w2, w8
    5018:	ldr	x0, [x0]
    501c:	bl	1730 <fprintf@plt>
    5020:	ldr	w10, [x19, #116]
    5024:	mov	w8, #0x0                   	// #0
    5028:	ldr	x0, [sp, #120]
    502c:	mov	w1, #0x5                   	// #5
    5030:	ldrb	w6, [x0]
    5034:	mov	x0, x19
    5038:	mov	w2, w6
    503c:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5040:	ldr	x7, [sp, #120]
    5044:	mov	w9, #0x0                   	// #0
    5048:	ldr	w0, [sp, #136]
    504c:	cmp	w0, w9
    5050:	b.gt	54ec <BZ2_compressBlock@@Base+0x2058>
    5054:	ldr	x1, [sp, #120]
    5058:	add	w0, w8, #0x1
    505c:	add	x1, x1, #0x102
    5060:	str	x1, [sp, #120]
    5064:	ldr	w1, [sp, #140]
    5068:	cmp	w1, w8
    506c:	b.ne	54d0 <BZ2_compressBlock@@Base+0x203c>  // b.any
    5070:	ldr	w0, [x19, #656]
    5074:	cmp	w0, #0x2
    5078:	b.le	509c <BZ2_compressBlock@@Base+0x1c08>
    507c:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    5080:	ldr	w2, [x19, #116]
    5084:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    5088:	add	x1, x1, #0x187
    508c:	ldr	x0, [x0, #4016]
    5090:	sub	w2, w2, w10
    5094:	ldr	x0, [x0]
    5098:	bl	1730 <fprintf@plt>
    509c:	ldr	w24, [x19, #116]
    50a0:	mov	x26, x19
    50a4:	mov	x23, #0x102                 	// #258
    50a8:	mov	x25, #0x2654                	// #9812
    50ac:	ldr	w0, [x19, #668]
    50b0:	sub	w1, w26, w19
    50b4:	cmp	w0, w21
    50b8:	b.le	557c <BZ2_compressBlock@@Base+0x20e8>
    50bc:	add	w27, w21, #0x31
    50c0:	cmp	w0, w27
    50c4:	b.gt	50cc <BZ2_compressBlock@@Base+0x1c38>
    50c8:	sub	w27, w0, #0x1
    50cc:	ldrb	w0, [x26, #1704]
    50d0:	cmp	w22, w0
    50d4:	b.gt	50e0 <BZ2_compressBlock@@Base+0x1c4c>
    50d8:	mov	w0, #0xbbe                 	// #3006
    50dc:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    50e0:	cmp	w22, #0x6
    50e4:	sxtw	x6, w21
    50e8:	b.ne	5570 <BZ2_compressBlock@@Base+0x20dc>  // b.any
    50ec:	sub	w21, w27, w21
    50f0:	cmp	w21, #0x31
    50f4:	b.ne	5570 <BZ2_compressBlock@@Base+0x20dc>  // b.any
    50f8:	ldrb	w7, [x26, #1704]
    50fc:	mov	x0, #0x934c                	// #37708
    5100:	mov	x1, #0x9958                	// #39256
    5104:	lsl	x9, x6, #1
    5108:	madd	x8, x7, x23, x19
    510c:	add	x8, x8, x0
    5110:	mov	x0, #0x408                 	// #1032
    5114:	madd	x7, x7, x0, x19
    5118:	mov	x0, x19
    511c:	add	x7, x7, x1
    5120:	ldrh	w1, [x20, x6, lsl #1]
    5124:	ldr	w2, [x7, x1, lsl #2]
    5128:	ldrb	w1, [x8, x1]
    512c:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5130:	add	x9, x20, x9
    5134:	ldrh	w1, [x9, #2]
    5138:	ldr	w2, [x7, x1, lsl #2]
    513c:	ldrb	w1, [x8, x1]
    5140:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5144:	ldrh	w1, [x9, #4]
    5148:	ldr	w2, [x7, x1, lsl #2]
    514c:	ldrb	w1, [x8, x1]
    5150:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5154:	ldrh	w1, [x9, #6]
    5158:	ldr	w2, [x7, x1, lsl #2]
    515c:	ldrb	w1, [x8, x1]
    5160:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5164:	ldrh	w1, [x9, #8]
    5168:	ldr	w2, [x7, x1, lsl #2]
    516c:	ldrb	w1, [x8, x1]
    5170:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5174:	ldrh	w1, [x9, #10]
    5178:	ldr	w2, [x7, x1, lsl #2]
    517c:	ldrb	w1, [x8, x1]
    5180:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5184:	ldrh	w1, [x9, #12]
    5188:	ldr	w2, [x7, x1, lsl #2]
    518c:	ldrb	w1, [x8, x1]
    5190:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5194:	ldrh	w1, [x9, #14]
    5198:	ldr	w2, [x7, x1, lsl #2]
    519c:	ldrb	w1, [x8, x1]
    51a0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    51a4:	ldrh	w1, [x9, #16]
    51a8:	ldr	w2, [x7, x1, lsl #2]
    51ac:	ldrb	w1, [x8, x1]
    51b0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    51b4:	ldrh	w1, [x9, #18]
    51b8:	ldr	w2, [x7, x1, lsl #2]
    51bc:	ldrb	w1, [x8, x1]
    51c0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    51c4:	ldrh	w1, [x9, #20]
    51c8:	ldr	w2, [x7, x1, lsl #2]
    51cc:	ldrb	w1, [x8, x1]
    51d0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    51d4:	ldrh	w1, [x9, #22]
    51d8:	ldr	w2, [x7, x1, lsl #2]
    51dc:	ldrb	w1, [x8, x1]
    51e0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    51e4:	ldrh	w1, [x9, #24]
    51e8:	ldr	w2, [x7, x1, lsl #2]
    51ec:	ldrb	w1, [x8, x1]
    51f0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    51f4:	ldrh	w1, [x9, #26]
    51f8:	ldr	w2, [x7, x1, lsl #2]
    51fc:	ldrb	w1, [x8, x1]
    5200:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5204:	ldrh	w1, [x9, #28]
    5208:	ldr	w2, [x7, x1, lsl #2]
    520c:	ldrb	w1, [x8, x1]
    5210:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5214:	ldrh	w1, [x9, #30]
    5218:	ldr	w2, [x7, x1, lsl #2]
    521c:	ldrb	w1, [x8, x1]
    5220:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5224:	ldrh	w1, [x9, #32]
    5228:	ldr	w2, [x7, x1, lsl #2]
    522c:	ldrb	w1, [x8, x1]
    5230:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5234:	ldrh	w1, [x9, #34]
    5238:	ldr	w2, [x7, x1, lsl #2]
    523c:	ldrb	w1, [x8, x1]
    5240:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5244:	ldrh	w1, [x9, #36]
    5248:	ldr	w2, [x7, x1, lsl #2]
    524c:	ldrb	w1, [x8, x1]
    5250:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5254:	ldrh	w1, [x9, #38]
    5258:	ldr	w2, [x7, x1, lsl #2]
    525c:	ldrb	w1, [x8, x1]
    5260:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5264:	ldrh	w1, [x9, #40]
    5268:	ldr	w2, [x7, x1, lsl #2]
    526c:	ldrb	w1, [x8, x1]
    5270:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5274:	ldrh	w1, [x9, #42]
    5278:	ldr	w2, [x7, x1, lsl #2]
    527c:	ldrb	w1, [x8, x1]
    5280:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5284:	ldrh	w1, [x9, #44]
    5288:	ldr	w2, [x7, x1, lsl #2]
    528c:	ldrb	w1, [x8, x1]
    5290:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5294:	ldrh	w1, [x9, #46]
    5298:	ldr	w2, [x7, x1, lsl #2]
    529c:	ldrb	w1, [x8, x1]
    52a0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    52a4:	ldrh	w1, [x9, #48]
    52a8:	ldr	w2, [x7, x1, lsl #2]
    52ac:	ldrb	w1, [x8, x1]
    52b0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    52b4:	ldrh	w1, [x9, #50]
    52b8:	ldr	w2, [x7, x1, lsl #2]
    52bc:	ldrb	w1, [x8, x1]
    52c0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    52c4:	ldrh	w1, [x9, #52]
    52c8:	ldr	w2, [x7, x1, lsl #2]
    52cc:	ldrb	w1, [x8, x1]
    52d0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    52d4:	ldrh	w1, [x9, #54]
    52d8:	ldr	w2, [x7, x1, lsl #2]
    52dc:	ldrb	w1, [x8, x1]
    52e0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    52e4:	ldrh	w1, [x9, #56]
    52e8:	ldr	w2, [x7, x1, lsl #2]
    52ec:	ldrb	w1, [x8, x1]
    52f0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    52f4:	ldrh	w1, [x9, #58]
    52f8:	ldr	w2, [x7, x1, lsl #2]
    52fc:	ldrb	w1, [x8, x1]
    5300:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5304:	ldrh	w1, [x9, #60]
    5308:	ldr	w2, [x7, x1, lsl #2]
    530c:	ldrb	w1, [x8, x1]
    5310:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5314:	ldrh	w1, [x9, #62]
    5318:	ldr	w2, [x7, x1, lsl #2]
    531c:	ldrb	w1, [x8, x1]
    5320:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5324:	ldrh	w1, [x9, #64]
    5328:	ldr	w2, [x7, x1, lsl #2]
    532c:	ldrb	w1, [x8, x1]
    5330:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5334:	ldrh	w1, [x9, #66]
    5338:	ldr	w2, [x7, x1, lsl #2]
    533c:	ldrb	w1, [x8, x1]
    5340:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5344:	ldrh	w1, [x9, #68]
    5348:	ldr	w2, [x7, x1, lsl #2]
    534c:	ldrb	w1, [x8, x1]
    5350:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5354:	ldrh	w1, [x9, #70]
    5358:	ldr	w2, [x7, x1, lsl #2]
    535c:	ldrb	w1, [x8, x1]
    5360:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5364:	ldrh	w1, [x9, #72]
    5368:	ldr	w2, [x7, x1, lsl #2]
    536c:	ldrb	w1, [x8, x1]
    5370:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5374:	ldrh	w1, [x9, #74]
    5378:	ldr	w2, [x7, x1, lsl #2]
    537c:	ldrb	w1, [x8, x1]
    5380:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5384:	ldrh	w1, [x9, #76]
    5388:	ldr	w2, [x7, x1, lsl #2]
    538c:	ldrb	w1, [x8, x1]
    5390:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5394:	ldrh	w1, [x9, #78]
    5398:	ldr	w2, [x7, x1, lsl #2]
    539c:	ldrb	w1, [x8, x1]
    53a0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    53a4:	ldrh	w1, [x9, #80]
    53a8:	ldr	w2, [x7, x1, lsl #2]
    53ac:	ldrb	w1, [x8, x1]
    53b0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    53b4:	ldrh	w1, [x9, #82]
    53b8:	ldr	w2, [x7, x1, lsl #2]
    53bc:	ldrb	w1, [x8, x1]
    53c0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    53c4:	ldrh	w1, [x9, #84]
    53c8:	ldr	w2, [x7, x1, lsl #2]
    53cc:	ldrb	w1, [x8, x1]
    53d0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    53d4:	ldrh	w1, [x9, #86]
    53d8:	ldr	w2, [x7, x1, lsl #2]
    53dc:	ldrb	w1, [x8, x1]
    53e0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    53e4:	ldrh	w1, [x9, #88]
    53e8:	ldr	w2, [x7, x1, lsl #2]
    53ec:	ldrb	w1, [x8, x1]
    53f0:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    53f4:	ldrh	w1, [x9, #90]
    53f8:	ldr	w2, [x7, x1, lsl #2]
    53fc:	ldrb	w1, [x8, x1]
    5400:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5404:	ldrh	w1, [x9, #92]
    5408:	ldr	w2, [x7, x1, lsl #2]
    540c:	ldrb	w1, [x8, x1]
    5410:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5414:	ldrh	w1, [x9, #94]
    5418:	ldr	w2, [x7, x1, lsl #2]
    541c:	ldrb	w1, [x8, x1]
    5420:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5424:	ldrh	w1, [x9, #96]
    5428:	ldr	w2, [x7, x1, lsl #2]
    542c:	ldrb	w1, [x8, x1]
    5430:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5434:	ldrh	w1, [x9, #98]
    5438:	ldr	w2, [x7, x1, lsl #2]
    543c:	ldrb	w1, [x8, x1]
    5440:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5444:	add	w21, w27, #0x1
    5448:	add	x26, x26, #0x1
    544c:	b	50ac <BZ2_compressBlock@@Base+0x1c18>
    5450:	mov	w2, #0x0                   	// #0
    5454:	b	4f54 <BZ2_compressBlock@@Base+0x1ac0>
    5458:	mov	x7, #0x0                   	// #0
    545c:	ldr	x0, [sp, #152]
    5460:	ldrb	w0, [x0, x7]
    5464:	cbz	w0, 5488 <BZ2_compressBlock@@Base+0x1ff4>
    5468:	mov	w2, #0x1                   	// #1
    546c:	mov	x0, x19
    5470:	mov	w1, #0x1                   	// #1
    5474:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5478:	add	x7, x7, #0x1
    547c:	cmp	x7, #0x10
    5480:	b.ne	545c <BZ2_compressBlock@@Base+0x1fc8>  // b.any
    5484:	b	4f78 <BZ2_compressBlock@@Base+0x1ae4>
    5488:	mov	w2, #0x0                   	// #0
    548c:	b	546c <BZ2_compressBlock@@Base+0x1fd8>
    5490:	mov	w2, #0x1                   	// #1
    5494:	mov	x0, x19
    5498:	mov	w1, w2
    549c:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    54a0:	add	w7, w7, #0x1
    54a4:	ldrb	w0, [x9, x6]
    54a8:	cmp	w7, w0
    54ac:	b.lt	5490 <BZ2_compressBlock@@Base+0x1ffc>  // b.tstop
    54b0:	mov	x0, x19
    54b4:	mov	w2, #0x0                   	// #0
    54b8:	mov	w1, #0x1                   	// #1
    54bc:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    54c0:	add	x6, x6, #0x1
    54c4:	b	4fe8 <BZ2_compressBlock@@Base+0x1b54>
    54c8:	mov	w7, #0x0                   	// #0
    54cc:	b	54a4 <BZ2_compressBlock@@Base+0x2010>
    54d0:	mov	w8, w0
    54d4:	b	5028 <BZ2_compressBlock@@Base+0x1b94>
    54d8:	mov	w2, #0x2                   	// #2
    54dc:	mov	x0, x19
    54e0:	mov	w1, w2
    54e4:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    54e8:	add	w6, w6, #0x1
    54ec:	ldrb	w0, [x7]
    54f0:	cmp	w6, w0
    54f4:	b.lt	54d8 <BZ2_compressBlock@@Base+0x2044>  // b.tstop
    54f8:	ldrb	w0, [x7]
    54fc:	cmp	w6, w0
    5500:	b.gt	5520 <BZ2_compressBlock@@Base+0x208c>
    5504:	mov	x0, x19
    5508:	mov	w2, #0x0                   	// #0
    550c:	mov	w1, #0x1                   	// #1
    5510:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5514:	add	w9, w9, #0x1
    5518:	add	x7, x7, #0x1
    551c:	b	5048 <BZ2_compressBlock@@Base+0x1bb4>
    5520:	mov	x0, x19
    5524:	mov	w2, #0x3                   	// #3
    5528:	mov	w1, #0x2                   	// #2
    552c:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    5530:	sub	w6, w6, #0x1
    5534:	b	54f8 <BZ2_compressBlock@@Base+0x2064>
    5538:	ldrb	w0, [x26, #1704]
    553c:	ldrh	w2, [x20, x6, lsl #1]
    5540:	mul	x0, x0, x23
    5544:	add	x1, x0, x2
    5548:	add	x0, x19, x0
    554c:	add	x1, x1, x25
    5550:	add	x0, x0, x2
    5554:	add	x0, x0, #0x9, lsl #12
    5558:	add	x1, x19, x1, lsl #2
    555c:	ldr	w2, [x1, #8]
    5560:	ldrb	w1, [x0, #844]
    5564:	mov	x0, x19
    5568:	bl	33d4 <BZ2_hbCreateDecodeTables@@Base+0x120>
    556c:	add	x6, x6, #0x1
    5570:	cmp	w27, w6
    5574:	b.ge	5538 <BZ2_compressBlock@@Base+0x20a4>  // b.tcont
    5578:	b	5444 <BZ2_compressBlock@@Base+0x1fb0>
    557c:	ldr	w0, [sp, #128]
    5580:	cmp	w1, w0
    5584:	b.eq	5590 <BZ2_compressBlock@@Base+0x20fc>  // b.none
    5588:	mov	w0, #0xbbf                 	// #3007
    558c:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    5590:	ldr	w0, [x19, #656]
    5594:	cmp	w0, #0x2
    5598:	b.le	55bc <BZ2_compressBlock@@Base+0x2128>
    559c:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    55a0:	ldr	w2, [x19, #116]
    55a4:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    55a8:	add	x1, x1, #0x199
    55ac:	ldr	x0, [x0, #4016]
    55b0:	sub	w2, w2, w24
    55b4:	ldr	x0, [x0]
    55b8:	bl	1730 <fprintf@plt>
    55bc:	ldr	w0, [sp, #836]
    55c0:	cbz	w0, 5634 <BZ2_compressBlock@@Base+0x21a0>
    55c4:	mov	x0, x19
    55c8:	mov	w1, #0x17                  	// #23
    55cc:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    55d0:	mov	w1, #0x72                  	// #114
    55d4:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    55d8:	mov	w1, #0x45                  	// #69
    55dc:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    55e0:	mov	w1, #0x38                  	// #56
    55e4:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    55e8:	mov	w1, #0x50                  	// #80
    55ec:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    55f0:	mov	w1, #0xffffff90            	// #-112
    55f4:	bl	3480 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    55f8:	ldr	w1, [x19, #652]
    55fc:	bl	3440 <BZ2_hbCreateDecodeTables@@Base+0x18c>
    5600:	ldr	w0, [x19, #656]
    5604:	cmp	w0, #0x1
    5608:	b.le	5628 <BZ2_compressBlock@@Base+0x2194>
    560c:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    5610:	ldr	w2, [x19, #652]
    5614:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    5618:	add	x1, x1, #0x1a3
    561c:	ldr	x0, [x0, #4016]
    5620:	ldr	x0, [x0]
    5624:	bl	1730 <fprintf@plt>
    5628:	ldr	w0, [x19, #644]
    562c:	cmp	w0, #0x0
    5630:	b.gt	5658 <BZ2_compressBlock@@Base+0x21c4>
    5634:	ldp	x29, x30, [sp]
    5638:	ldp	x19, x20, [sp, #16]
    563c:	ldp	x21, x22, [sp, #32]
    5640:	ldp	x23, x24, [sp, #48]
    5644:	ldp	x25, x26, [sp, #64]
    5648:	ldp	x27, x28, [sp, #80]
    564c:	ldr	d8, [sp, #96]
    5650:	add	sp, sp, #0x470
    5654:	ret
    5658:	ldrsw	x0, [x19, #116]
    565c:	ldr	x1, [x19, #80]
    5660:	ldrb	w2, [x19, #643]
    5664:	strb	w2, [x1, x0]
    5668:	ldr	w0, [x19, #116]
    566c:	add	w0, w0, #0x1
    5670:	str	w0, [x19, #116]
    5674:	ldr	w0, [x19, #640]
    5678:	lsl	w0, w0, #8
    567c:	str	w0, [x19, #640]
    5680:	ldr	w0, [x19, #644]
    5684:	sub	w0, w0, #0x8
    5688:	str	w0, [x19, #644]
    568c:	b	5628 <BZ2_compressBlock@@Base+0x2194>

0000000000005690 <BZ2_decompress@@Base>:
    5690:	stp	x29, x30, [sp, #-208]!
    5694:	add	x1, x0, #0x8, lsl #12
    5698:	mov	x29, sp
    569c:	ldr	w2, [x0, #8]
    56a0:	stp	x19, x20, [sp, #16]
    56a4:	cmp	w2, #0xa
    56a8:	stp	x21, x22, [sp, #32]
    56ac:	stp	x23, x24, [sp, #48]
    56b0:	stp	x25, x26, [sp, #64]
    56b4:	stp	x27, x28, [sp, #80]
    56b8:	mov	x27, x0
    56bc:	ldr	x3, [x0]
    56c0:	add	x0, x0, #0xc, lsl #12
    56c4:	b.ne	5700 <BZ2_decompress@@Base+0x70>  // b.any
    56c8:	str	wzr, [x0, #14884]
    56cc:	str	xzr, [x1, #31272]
    56d0:	str	xzr, [x1, #31280]
    56d4:	str	xzr, [x1, #31288]
    56d8:	str	xzr, [x1, #31296]
    56dc:	str	xzr, [x1, #31304]
    56e0:	str	xzr, [x1, #31312]
    56e4:	str	xzr, [x1, #31320]
    56e8:	str	xzr, [x1, #31328]
    56ec:	str	xzr, [x1, #31336]
    56f0:	str	xzr, [x1, #31344]
    56f4:	str	xzr, [x1, #31352]
    56f8:	str	xzr, [x1, #31360]
    56fc:	str	xzr, [x1, #31368]
    5700:	ldr	w5, [x0, #14892]
    5704:	str	w5, [sp, #104]
    5708:	ldr	w5, [x0, #14896]
    570c:	str	w5, [sp, #152]
    5710:	ldr	w5, [x0, #14900]
    5714:	str	w5, [sp, #100]
    5718:	ldr	w5, [x0, #14908]
    571c:	str	w5, [sp, #160]
    5720:	ldr	w5, [x0, #14920]
    5724:	str	w5, [sp, #96]
    5728:	ldr	w5, [x0, #14924]
    572c:	str	w5, [sp, #144]
    5730:	ldr	w5, [x0, #14936]
    5734:	str	w5, [sp, #112]
    5738:	ldr	w5, [x0, #14940]
    573c:	str	w5, [sp, #116]
    5740:	ldr	w5, [x0, #14944]
    5744:	str	w5, [sp, #164]
    5748:	ldr	w5, [x0, #14956]
    574c:	str	w5, [sp, #136]
    5750:	ldr	w5, [x0, #14960]
    5754:	ldr	w4, [x0, #14884]
    5758:	ldr	w22, [x0, #14888]
    575c:	ldr	w19, [x0, #14904]
    5760:	ldr	w26, [x0, #14912]
    5764:	ldr	w25, [x0, #14916]
    5768:	ldr	w28, [x0, #14928]
    576c:	ldr	w20, [x0, #14932]
    5770:	ldr	w24, [x0, #14948]
    5774:	ldr	w23, [x0, #14952]
    5778:	ldr	w0, [x0, #14964]
    577c:	str	w5, [sp, #156]
    5780:	str	w0, [sp, #140]
    5784:	ldr	x0, [x1, #31360]
    5788:	str	x0, [sp, #120]
    578c:	ldr	x0, [x1, #31368]
    5790:	str	x0, [sp, #128]
    5794:	sub	w0, w2, #0xa
    5798:	cmp	w0, #0x28
    579c:	ldr	x21, [x1, #31352]
    57a0:	b.hi	79ec <BZ2_decompress@@Base+0x235c>  // b.pmore
    57a4:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    57a8:	add	x1, x1, #0x1ec
    57ac:	ldrh	w0, [x1, w0, uxtw #1]
    57b0:	adr	x1, 57bc <BZ2_decompress@@Base+0x12c>
    57b4:	add	x0, x1, w0, sxth #2
    57b8:	br	x0
    57bc:	mov	w0, #0xa                   	// #10
    57c0:	str	w0, [x27, #8]
    57c4:	ldr	w0, [x27, #36]
    57c8:	cmp	w0, #0x7
    57cc:	b.le	588c <BZ2_decompress@@Base+0x1fc>
    57d0:	ldr	w1, [x27, #32]
    57d4:	sub	w0, w0, #0x8
    57d8:	str	w0, [x27, #36]
    57dc:	lsr	w1, w1, w0
    57e0:	and	w0, w1, #0xff
    57e4:	cmp	w0, #0x42
    57e8:	b.ne	5884 <BZ2_decompress@@Base+0x1f4>  // b.any
    57ec:	mov	w0, #0xb                   	// #11
    57f0:	str	w0, [x27, #8]
    57f4:	ldr	w0, [x27, #36]
    57f8:	cmp	w0, #0x7
    57fc:	b.le	58d4 <BZ2_decompress@@Base+0x244>
    5800:	ldr	w1, [x27, #32]
    5804:	sub	w0, w0, #0x8
    5808:	str	w0, [x27, #36]
    580c:	lsr	w1, w1, w0
    5810:	and	w0, w1, #0xff
    5814:	cmp	w0, #0x5a
    5818:	b.ne	5884 <BZ2_decompress@@Base+0x1f4>  // b.any
    581c:	mov	w0, #0xc                   	// #12
    5820:	str	w0, [x27, #8]
    5824:	ldr	w0, [x27, #36]
    5828:	cmp	w0, #0x7
    582c:	b.le	591c <BZ2_decompress@@Base+0x28c>
    5830:	ldr	w1, [x27, #32]
    5834:	sub	w0, w0, #0x8
    5838:	str	w0, [x27, #36]
    583c:	lsr	w1, w1, w0
    5840:	and	w0, w1, #0xff
    5844:	cmp	w0, #0x68
    5848:	b.ne	5884 <BZ2_decompress@@Base+0x1f4>  // b.any
    584c:	mov	w0, #0xd                   	// #13
    5850:	str	w0, [x27, #8]
    5854:	ldr	w0, [x27, #36]
    5858:	cmp	w0, #0x7
    585c:	b.le	5964 <BZ2_decompress@@Base+0x2d4>
    5860:	ldr	w1, [x27, #32]
    5864:	sub	w0, w0, #0x8
    5868:	str	w0, [x27, #36]
    586c:	lsr	w1, w1, w0
    5870:	and	w1, w1, #0xff
    5874:	sub	w0, w1, #0x31
    5878:	cmp	w0, #0x8
    587c:	b.ls	59ac <BZ2_decompress@@Base+0x31c>  // b.plast
    5880:	str	w1, [x27, #40]
    5884:	mov	w0, #0xfffffffb            	// #-5
    5888:	b	5c24 <BZ2_decompress@@Base+0x594>
    588c:	ldr	w1, [x3, #8]
    5890:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    5894:	ldr	x2, [x3]
    5898:	add	w0, w0, #0x8
    589c:	ldr	w6, [x27, #32]
    58a0:	sub	w1, w1, #0x1
    58a4:	ldrb	w11, [x2], #1
    58a8:	orr	w6, w11, w6, lsl #8
    58ac:	stp	w6, w0, [x27, #32]
    58b0:	ldr	w0, [x3, #12]
    58b4:	str	x2, [x3]
    58b8:	add	w0, w0, #0x1
    58bc:	stp	w1, w0, [x3, #8]
    58c0:	cbnz	w0, 57c4 <BZ2_decompress@@Base+0x134>
    58c4:	ldr	w0, [x3, #16]
    58c8:	add	w0, w0, #0x1
    58cc:	str	w0, [x3, #16]
    58d0:	b	57c4 <BZ2_decompress@@Base+0x134>
    58d4:	ldr	w1, [x3, #8]
    58d8:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    58dc:	ldr	x2, [x3]
    58e0:	add	w0, w0, #0x8
    58e4:	ldr	w6, [x27, #32]
    58e8:	sub	w1, w1, #0x1
    58ec:	ldrb	w11, [x2], #1
    58f0:	orr	w6, w11, w6, lsl #8
    58f4:	stp	w6, w0, [x27, #32]
    58f8:	ldr	w0, [x3, #12]
    58fc:	str	x2, [x3]
    5900:	add	w0, w0, #0x1
    5904:	stp	w1, w0, [x3, #8]
    5908:	cbnz	w0, 57f4 <BZ2_decompress@@Base+0x164>
    590c:	ldr	w0, [x3, #16]
    5910:	add	w0, w0, #0x1
    5914:	str	w0, [x3, #16]
    5918:	b	57f4 <BZ2_decompress@@Base+0x164>
    591c:	ldr	w1, [x3, #8]
    5920:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    5924:	ldr	x2, [x3]
    5928:	add	w0, w0, #0x8
    592c:	ldr	w6, [x27, #32]
    5930:	sub	w1, w1, #0x1
    5934:	ldrb	w11, [x2], #1
    5938:	orr	w6, w11, w6, lsl #8
    593c:	stp	w6, w0, [x27, #32]
    5940:	ldr	w0, [x3, #12]
    5944:	str	x2, [x3]
    5948:	add	w0, w0, #0x1
    594c:	stp	w1, w0, [x3, #8]
    5950:	cbnz	w0, 5824 <BZ2_decompress@@Base+0x194>
    5954:	ldr	w0, [x3, #16]
    5958:	add	w0, w0, #0x1
    595c:	str	w0, [x3, #16]
    5960:	b	5824 <BZ2_decompress@@Base+0x194>
    5964:	ldr	w1, [x3, #8]
    5968:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    596c:	ldr	x2, [x3]
    5970:	add	w0, w0, #0x8
    5974:	ldr	w6, [x27, #32]
    5978:	sub	w1, w1, #0x1
    597c:	ldrb	w11, [x2], #1
    5980:	orr	w6, w11, w6, lsl #8
    5984:	stp	w6, w0, [x27, #32]
    5988:	ldr	w0, [x3, #12]
    598c:	str	x2, [x3]
    5990:	add	w0, w0, #0x1
    5994:	stp	w1, w0, [x3, #8]
    5998:	cbnz	w0, 5854 <BZ2_decompress@@Base+0x1c4>
    599c:	ldr	w0, [x3, #16]
    59a0:	add	w0, w0, #0x1
    59a4:	str	w0, [x3, #16]
    59a8:	b	5854 <BZ2_decompress@@Base+0x1c4>
    59ac:	ldrb	w2, [x27, #44]
    59b0:	sub	w1, w1, #0x30
    59b4:	mov	w11, #0x86a0                	// #34464
    59b8:	str	w4, [sp, #168]
    59bc:	movk	w11, #0x1, lsl #16
    59c0:	str	x3, [sp, #176]
    59c4:	ldr	x6, [x3, #56]
    59c8:	ldr	x0, [x3, #72]
    59cc:	str	w1, [x27, #40]
    59d0:	mul	w1, w1, w11
    59d4:	cbz	w2, 5cc8 <BZ2_decompress@@Base+0x638>
    59d8:	lsl	w1, w1, #1
    59dc:	mov	w2, #0x1                   	// #1
    59e0:	blr	x6
    59e4:	ldr	x3, [sp, #176]
    59e8:	mov	w11, #0x86a0                	// #34464
    59ec:	ldr	w1, [x27, #40]
    59f0:	movk	w11, #0x1, lsl #16
    59f4:	mov	w2, #0x1                   	// #1
    59f8:	ldr	x6, [x3, #56]
    59fc:	str	x0, [x27, #3160]
    5a00:	ldr	x0, [x3, #72]
    5a04:	mul	w1, w1, w11
    5a08:	asr	w1, w1, #1
    5a0c:	blr	x6
    5a10:	ldr	x1, [x27, #3160]
    5a14:	str	x0, [x27, #3168]
    5a18:	ldr	w4, [sp, #168]
    5a1c:	cbz	x1, 7a04 <BZ2_decompress@@Base+0x2374>
    5a20:	cbz	x0, 7a04 <BZ2_decompress@@Base+0x2374>
    5a24:	mov	w0, #0xe                   	// #14
    5a28:	str	w0, [x27, #8]
    5a2c:	ldr	w1, [x27, #36]
    5a30:	cmp	w1, #0x7
    5a34:	b.le	5ce0 <BZ2_decompress@@Base+0x650>
    5a38:	ldr	w0, [x27, #32]
    5a3c:	sub	w1, w1, #0x8
    5a40:	str	w1, [x27, #36]
    5a44:	lsr	w0, w0, w1
    5a48:	and	w0, w0, #0xff
    5a4c:	cmp	w0, #0x17
    5a50:	b.ne	5d2c <BZ2_decompress@@Base+0x69c>  // b.any
    5a54:	mov	w0, #0x2a                  	// #42
    5a58:	str	w0, [x27, #8]
    5a5c:	ldr	w1, [x27, #36]
    5a60:	cmp	w1, #0x7
    5a64:	b.le	7740 <BZ2_decompress@@Base+0x20b0>
    5a68:	ldr	w0, [x27, #32]
    5a6c:	sub	w1, w1, #0x8
    5a70:	str	w1, [x27, #36]
    5a74:	lsr	w0, w0, w1
    5a78:	and	w0, w0, #0xff
    5a7c:	cmp	w0, #0x72
    5a80:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5a84:	mov	w0, #0x2b                  	// #43
    5a88:	str	w0, [x27, #8]
    5a8c:	ldr	w1, [x27, #36]
    5a90:	cmp	w1, #0x7
    5a94:	b.le	778c <BZ2_decompress@@Base+0x20fc>
    5a98:	ldr	w0, [x27, #32]
    5a9c:	sub	w1, w1, #0x8
    5aa0:	str	w1, [x27, #36]
    5aa4:	lsr	w0, w0, w1
    5aa8:	and	w0, w0, #0xff
    5aac:	cmp	w0, #0x45
    5ab0:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5ab4:	mov	w0, #0x2c                  	// #44
    5ab8:	str	w0, [x27, #8]
    5abc:	ldr	w1, [x27, #36]
    5ac0:	cmp	w1, #0x7
    5ac4:	b.le	77d8 <BZ2_decompress@@Base+0x2148>
    5ac8:	ldr	w0, [x27, #32]
    5acc:	sub	w1, w1, #0x8
    5ad0:	str	w1, [x27, #36]
    5ad4:	lsr	w0, w0, w1
    5ad8:	and	w0, w0, #0xff
    5adc:	cmp	w0, #0x38
    5ae0:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5ae4:	mov	w0, #0x2d                  	// #45
    5ae8:	str	w0, [x27, #8]
    5aec:	ldr	w1, [x27, #36]
    5af0:	cmp	w1, #0x7
    5af4:	b.le	7824 <BZ2_decompress@@Base+0x2194>
    5af8:	ldr	w0, [x27, #32]
    5afc:	sub	w1, w1, #0x8
    5b00:	str	w1, [x27, #36]
    5b04:	lsr	w0, w0, w1
    5b08:	and	w0, w0, #0xff
    5b0c:	cmp	w0, #0x50
    5b10:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5b14:	mov	w0, #0x2e                  	// #46
    5b18:	str	w0, [x27, #8]
    5b1c:	ldr	w1, [x27, #36]
    5b20:	cmp	w1, #0x7
    5b24:	b.le	7870 <BZ2_decompress@@Base+0x21e0>
    5b28:	ldr	w0, [x27, #32]
    5b2c:	sub	w1, w1, #0x8
    5b30:	str	w1, [x27, #36]
    5b34:	lsr	w0, w0, w1
    5b38:	and	w0, w0, #0xff
    5b3c:	cmp	w0, #0x90
    5b40:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5b44:	str	wzr, [x27, #3180]
    5b48:	mov	w0, #0x2f                  	// #47
    5b4c:	str	w0, [x27, #8]
    5b50:	ldr	w1, [x27, #36]
    5b54:	cmp	w1, #0x7
    5b58:	b.le	78bc <BZ2_decompress@@Base+0x222c>
    5b5c:	ldr	w0, [x27, #32]
    5b60:	sub	w1, w1, #0x8
    5b64:	str	w1, [x27, #36]
    5b68:	lsr	w0, w0, w1
    5b6c:	ldr	w1, [x27, #3180]
    5b70:	and	w0, w0, #0xff
    5b74:	orr	w0, w0, w1, lsl #8
    5b78:	str	w0, [x27, #3180]
    5b7c:	mov	w0, #0x30                  	// #48
    5b80:	str	w0, [x27, #8]
    5b84:	ldr	w1, [x27, #36]
    5b88:	cmp	w1, #0x7
    5b8c:	b.le	7908 <BZ2_decompress@@Base+0x2278>
    5b90:	ldr	w0, [x27, #32]
    5b94:	sub	w1, w1, #0x8
    5b98:	str	w1, [x27, #36]
    5b9c:	lsr	w0, w0, w1
    5ba0:	ldr	w1, [x27, #3180]
    5ba4:	and	w0, w0, #0xff
    5ba8:	orr	w0, w0, w1, lsl #8
    5bac:	str	w0, [x27, #3180]
    5bb0:	mov	w0, #0x31                  	// #49
    5bb4:	str	w0, [x27, #8]
    5bb8:	ldr	w1, [x27, #36]
    5bbc:	cmp	w1, #0x7
    5bc0:	b.le	7954 <BZ2_decompress@@Base+0x22c4>
    5bc4:	ldr	w0, [x27, #32]
    5bc8:	sub	w1, w1, #0x8
    5bcc:	str	w1, [x27, #36]
    5bd0:	lsr	w0, w0, w1
    5bd4:	ldr	w1, [x27, #3180]
    5bd8:	and	w0, w0, #0xff
    5bdc:	orr	w0, w0, w1, lsl #8
    5be0:	str	w0, [x27, #3180]
    5be4:	mov	w0, #0x32                  	// #50
    5be8:	str	w0, [x27, #8]
    5bec:	ldr	w1, [x27, #36]
    5bf0:	cmp	w1, #0x7
    5bf4:	b.le	79a0 <BZ2_decompress@@Base+0x2310>
    5bf8:	ldr	w0, [x27, #32]
    5bfc:	sub	w1, w1, #0x8
    5c00:	str	w1, [x27, #36]
    5c04:	lsr	w0, w0, w1
    5c08:	ldr	w1, [x27, #3180]
    5c0c:	and	w0, w0, #0xff
    5c10:	orr	w0, w0, w1, lsl #8
    5c14:	str	w0, [x27, #3180]
    5c18:	mov	w0, #0x1                   	// #1
    5c1c:	str	w0, [x27, #8]
    5c20:	mov	w0, #0x4                   	// #4
    5c24:	add	x1, x27, #0xc, lsl #12
    5c28:	ldr	w2, [sp, #104]
    5c2c:	add	x7, x27, #0x8, lsl #12
    5c30:	str	w2, [x1, #14892]
    5c34:	ldr	w2, [sp, #152]
    5c38:	str	w2, [x1, #14896]
    5c3c:	ldr	w2, [sp, #100]
    5c40:	str	w2, [x1, #14900]
    5c44:	ldr	w2, [sp, #160]
    5c48:	str	w2, [x1, #14908]
    5c4c:	ldr	w2, [sp, #96]
    5c50:	str	w2, [x1, #14920]
    5c54:	ldr	w2, [sp, #144]
    5c58:	str	w2, [x1, #14924]
    5c5c:	ldr	w2, [sp, #112]
    5c60:	str	w2, [x1, #14936]
    5c64:	ldr	w2, [sp, #116]
    5c68:	str	w2, [x1, #14940]
    5c6c:	ldr	w2, [sp, #164]
    5c70:	str	w2, [x1, #14944]
    5c74:	ldr	w2, [sp, #136]
    5c78:	str	w2, [x1, #14956]
    5c7c:	ldr	w2, [sp, #156]
    5c80:	str	w4, [x1, #14884]
    5c84:	str	w22, [x1, #14888]
    5c88:	str	w19, [x1, #14904]
    5c8c:	str	w26, [x1, #14912]
    5c90:	str	w25, [x1, #14916]
    5c94:	str	w28, [x1, #14928]
    5c98:	str	w20, [x1, #14932]
    5c9c:	str	w24, [x1, #14948]
    5ca0:	str	w23, [x1, #14952]
    5ca4:	str	w2, [x1, #14960]
    5ca8:	ldr	w2, [sp, #140]
    5cac:	str	w2, [x1, #14964]
    5cb0:	ldr	x1, [sp, #120]
    5cb4:	str	x1, [x7, #31360]
    5cb8:	ldr	x1, [sp, #128]
    5cbc:	str	x21, [x7, #31352]
    5cc0:	str	x1, [x7, #31368]
    5cc4:	b	7544 <BZ2_decompress@@Base+0x1eb4>
    5cc8:	lsl	w1, w1, #2
    5ccc:	mov	w2, #0x1                   	// #1
    5cd0:	blr	x6
    5cd4:	str	x0, [x27, #3152]
    5cd8:	ldr	w4, [sp, #168]
    5cdc:	b	5a20 <BZ2_decompress@@Base+0x390>
    5ce0:	ldr	x0, [x27]
    5ce4:	ldr	w2, [x0, #8]
    5ce8:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    5cec:	ldr	x3, [x0]
    5cf0:	add	w1, w1, #0x8
    5cf4:	ldr	w6, [x27, #32]
    5cf8:	sub	w2, w2, #0x1
    5cfc:	ldrb	w11, [x3], #1
    5d00:	orr	w6, w11, w6, lsl #8
    5d04:	stp	w6, w1, [x27, #32]
    5d08:	ldr	w1, [x0, #12]
    5d0c:	str	x3, [x0]
    5d10:	add	w1, w1, #0x1
    5d14:	stp	w2, w1, [x0, #8]
    5d18:	cbnz	w1, 5a2c <BZ2_decompress@@Base+0x39c>
    5d1c:	ldr	w1, [x0, #16]
    5d20:	add	w1, w1, #0x1
    5d24:	str	w1, [x0, #16]
    5d28:	b	5a2c <BZ2_decompress@@Base+0x39c>
    5d2c:	cmp	w0, #0x31
    5d30:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5d34:	mov	w0, #0xf                   	// #15
    5d38:	str	w0, [x27, #8]
    5d3c:	ldr	w1, [x27, #36]
    5d40:	cmp	w1, #0x7
    5d44:	b.le	6004 <BZ2_decompress@@Base+0x974>
    5d48:	ldr	w0, [x27, #32]
    5d4c:	sub	w1, w1, #0x8
    5d50:	str	w1, [x27, #36]
    5d54:	lsr	w0, w0, w1
    5d58:	and	w0, w0, #0xff
    5d5c:	cmp	w0, #0x41
    5d60:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5d64:	mov	w0, #0x10                  	// #16
    5d68:	str	w0, [x27, #8]
    5d6c:	ldr	w1, [x27, #36]
    5d70:	cmp	w1, #0x7
    5d74:	b.le	6050 <BZ2_decompress@@Base+0x9c0>
    5d78:	ldr	w0, [x27, #32]
    5d7c:	sub	w1, w1, #0x8
    5d80:	str	w1, [x27, #36]
    5d84:	lsr	w0, w0, w1
    5d88:	and	w0, w0, #0xff
    5d8c:	cmp	w0, #0x59
    5d90:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5d94:	mov	w0, #0x11                  	// #17
    5d98:	str	w0, [x27, #8]
    5d9c:	ldr	w1, [x27, #36]
    5da0:	cmp	w1, #0x7
    5da4:	b.le	609c <BZ2_decompress@@Base+0xa0c>
    5da8:	ldr	w0, [x27, #32]
    5dac:	sub	w1, w1, #0x8
    5db0:	str	w1, [x27, #36]
    5db4:	lsr	w0, w0, w1
    5db8:	and	w0, w0, #0xff
    5dbc:	cmp	w0, #0x26
    5dc0:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5dc4:	mov	w0, #0x12                  	// #18
    5dc8:	str	w0, [x27, #8]
    5dcc:	ldr	w1, [x27, #36]
    5dd0:	cmp	w1, #0x7
    5dd4:	b.le	60e8 <BZ2_decompress@@Base+0xa58>
    5dd8:	ldr	w0, [x27, #32]
    5ddc:	sub	w1, w1, #0x8
    5de0:	str	w1, [x27, #36]
    5de4:	lsr	w0, w0, w1
    5de8:	and	w0, w0, #0xff
    5dec:	cmp	w0, #0x53
    5df0:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5df4:	mov	w0, #0x13                  	// #19
    5df8:	str	w0, [x27, #8]
    5dfc:	ldr	w1, [x27, #36]
    5e00:	cmp	w1, #0x7
    5e04:	b.le	6134 <BZ2_decompress@@Base+0xaa4>
    5e08:	ldr	w0, [x27, #32]
    5e0c:	sub	w1, w1, #0x8
    5e10:	str	w1, [x27, #36]
    5e14:	lsr	w0, w0, w1
    5e18:	and	w0, w0, #0xff
    5e1c:	cmp	w0, #0x59
    5e20:	b.ne	5ffc <BZ2_decompress@@Base+0x96c>  // b.any
    5e24:	ldp	w2, w0, [x27, #48]
    5e28:	add	w2, w2, #0x1
    5e2c:	str	w2, [x27, #48]
    5e30:	cmp	w0, #0x1
    5e34:	b.le	5e58 <BZ2_decompress@@Base+0x7c8>
    5e38:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    5e3c:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    5e40:	add	x1, x1, #0x1d0
    5e44:	str	w4, [sp, #168]
    5e48:	ldr	x0, [x0, #4016]
    5e4c:	ldr	x0, [x0]
    5e50:	bl	1730 <fprintf@plt>
    5e54:	ldr	w4, [sp, #168]
    5e58:	str	wzr, [x27, #3176]
    5e5c:	mov	w0, #0x14                  	// #20
    5e60:	str	w0, [x27, #8]
    5e64:	ldr	w1, [x27, #36]
    5e68:	cmp	w1, #0x7
    5e6c:	b.le	6180 <BZ2_decompress@@Base+0xaf0>
    5e70:	ldr	w0, [x27, #32]
    5e74:	sub	w1, w1, #0x8
    5e78:	str	w1, [x27, #36]
    5e7c:	lsr	w0, w0, w1
    5e80:	ldr	w1, [x27, #3176]
    5e84:	and	w0, w0, #0xff
    5e88:	orr	w0, w0, w1, lsl #8
    5e8c:	str	w0, [x27, #3176]
    5e90:	mov	w0, #0x15                  	// #21
    5e94:	str	w0, [x27, #8]
    5e98:	ldr	w1, [x27, #36]
    5e9c:	cmp	w1, #0x7
    5ea0:	b.le	61cc <BZ2_decompress@@Base+0xb3c>
    5ea4:	ldr	w0, [x27, #32]
    5ea8:	sub	w1, w1, #0x8
    5eac:	str	w1, [x27, #36]
    5eb0:	lsr	w0, w0, w1
    5eb4:	ldr	w1, [x27, #3176]
    5eb8:	and	w0, w0, #0xff
    5ebc:	orr	w0, w0, w1, lsl #8
    5ec0:	str	w0, [x27, #3176]
    5ec4:	mov	w0, #0x16                  	// #22
    5ec8:	str	w0, [x27, #8]
    5ecc:	ldr	w1, [x27, #36]
    5ed0:	cmp	w1, #0x7
    5ed4:	b.le	6218 <BZ2_decompress@@Base+0xb88>
    5ed8:	ldr	w0, [x27, #32]
    5edc:	sub	w1, w1, #0x8
    5ee0:	str	w1, [x27, #36]
    5ee4:	lsr	w0, w0, w1
    5ee8:	ldr	w1, [x27, #3176]
    5eec:	and	w0, w0, #0xff
    5ef0:	orr	w0, w0, w1, lsl #8
    5ef4:	str	w0, [x27, #3176]
    5ef8:	mov	w0, #0x17                  	// #23
    5efc:	str	w0, [x27, #8]
    5f00:	ldr	w1, [x27, #36]
    5f04:	cmp	w1, #0x7
    5f08:	b.le	6264 <BZ2_decompress@@Base+0xbd4>
    5f0c:	ldr	w0, [x27, #32]
    5f10:	sub	w1, w1, #0x8
    5f14:	str	w1, [x27, #36]
    5f18:	lsr	w0, w0, w1
    5f1c:	ldr	w1, [x27, #3176]
    5f20:	and	w0, w0, #0xff
    5f24:	orr	w0, w0, w1, lsl #8
    5f28:	str	w0, [x27, #3176]
    5f2c:	mov	w0, #0x18                  	// #24
    5f30:	str	w0, [x27, #8]
    5f34:	ldr	w1, [x27, #36]
    5f38:	cmp	w1, #0x0
    5f3c:	b.le	62b0 <BZ2_decompress@@Base+0xc20>
    5f40:	ldr	w0, [x27, #32]
    5f44:	sub	w1, w1, #0x1
    5f48:	str	w1, [x27, #36]
    5f4c:	str	wzr, [x27, #56]
    5f50:	lsr	w0, w0, w1
    5f54:	and	w0, w0, #0x1
    5f58:	strb	w0, [x27, #20]
    5f5c:	mov	w0, #0x19                  	// #25
    5f60:	str	w0, [x27, #8]
    5f64:	ldr	w1, [x27, #36]
    5f68:	cmp	w1, #0x7
    5f6c:	b.le	62fc <BZ2_decompress@@Base+0xc6c>
    5f70:	ldr	w0, [x27, #32]
    5f74:	sub	w1, w1, #0x8
    5f78:	str	w1, [x27, #36]
    5f7c:	lsr	w0, w0, w1
    5f80:	ldr	w1, [x27, #56]
    5f84:	and	w0, w0, #0xff
    5f88:	orr	w0, w0, w1, lsl #8
    5f8c:	str	w0, [x27, #56]
    5f90:	mov	w0, #0x1a                  	// #26
    5f94:	str	w0, [x27, #8]
    5f98:	ldr	w1, [x27, #36]
    5f9c:	cmp	w1, #0x7
    5fa0:	b.le	6348 <BZ2_decompress@@Base+0xcb8>
    5fa4:	ldr	w0, [x27, #32]
    5fa8:	sub	w1, w1, #0x8
    5fac:	str	w1, [x27, #36]
    5fb0:	lsr	w0, w0, w1
    5fb4:	ldr	w1, [x27, #56]
    5fb8:	and	w0, w0, #0xff
    5fbc:	orr	w0, w0, w1, lsl #8
    5fc0:	str	w0, [x27, #56]
    5fc4:	mov	w0, #0x1b                  	// #27
    5fc8:	str	w0, [x27, #8]
    5fcc:	ldr	w1, [x27, #36]
    5fd0:	cmp	w1, #0x7
    5fd4:	b.le	6394 <BZ2_decompress@@Base+0xd04>
    5fd8:	ldr	w0, [x27, #32]
    5fdc:	sub	w1, w1, #0x8
    5fe0:	str	w1, [x27, #36]
    5fe4:	lsr	w0, w0, w1
    5fe8:	ldr	w1, [x27, #56]
    5fec:	and	w0, w0, #0xff
    5ff0:	orr	w1, w0, w1, lsl #8
    5ff4:	str	w1, [x27, #56]
    5ff8:	tbz	w1, #31, 63e0 <BZ2_decompress@@Base+0xd50>
    5ffc:	mov	w0, #0xfffffffc            	// #-4
    6000:	b	5c24 <BZ2_decompress@@Base+0x594>
    6004:	ldr	x0, [x27]
    6008:	ldr	w2, [x0, #8]
    600c:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6010:	ldr	x3, [x0]
    6014:	add	w1, w1, #0x8
    6018:	ldr	w6, [x27, #32]
    601c:	sub	w2, w2, #0x1
    6020:	ldrb	w11, [x3], #1
    6024:	orr	w6, w11, w6, lsl #8
    6028:	stp	w6, w1, [x27, #32]
    602c:	ldr	w1, [x0, #12]
    6030:	str	x3, [x0]
    6034:	add	w1, w1, #0x1
    6038:	stp	w2, w1, [x0, #8]
    603c:	cbnz	w1, 5d3c <BZ2_decompress@@Base+0x6ac>
    6040:	ldr	w1, [x0, #16]
    6044:	add	w1, w1, #0x1
    6048:	str	w1, [x0, #16]
    604c:	b	5d3c <BZ2_decompress@@Base+0x6ac>
    6050:	ldr	x0, [x27]
    6054:	ldr	w2, [x0, #8]
    6058:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    605c:	ldr	x3, [x0]
    6060:	add	w1, w1, #0x8
    6064:	ldr	w6, [x27, #32]
    6068:	sub	w2, w2, #0x1
    606c:	ldrb	w11, [x3], #1
    6070:	orr	w6, w11, w6, lsl #8
    6074:	stp	w6, w1, [x27, #32]
    6078:	ldr	w1, [x0, #12]
    607c:	str	x3, [x0]
    6080:	add	w1, w1, #0x1
    6084:	stp	w2, w1, [x0, #8]
    6088:	cbnz	w1, 5d6c <BZ2_decompress@@Base+0x6dc>
    608c:	ldr	w1, [x0, #16]
    6090:	add	w1, w1, #0x1
    6094:	str	w1, [x0, #16]
    6098:	b	5d6c <BZ2_decompress@@Base+0x6dc>
    609c:	ldr	x0, [x27]
    60a0:	ldr	w2, [x0, #8]
    60a4:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    60a8:	ldr	x3, [x0]
    60ac:	add	w1, w1, #0x8
    60b0:	ldr	w6, [x27, #32]
    60b4:	sub	w2, w2, #0x1
    60b8:	ldrb	w11, [x3], #1
    60bc:	orr	w6, w11, w6, lsl #8
    60c0:	stp	w6, w1, [x27, #32]
    60c4:	ldr	w1, [x0, #12]
    60c8:	str	x3, [x0]
    60cc:	add	w1, w1, #0x1
    60d0:	stp	w2, w1, [x0, #8]
    60d4:	cbnz	w1, 5d9c <BZ2_decompress@@Base+0x70c>
    60d8:	ldr	w1, [x0, #16]
    60dc:	add	w1, w1, #0x1
    60e0:	str	w1, [x0, #16]
    60e4:	b	5d9c <BZ2_decompress@@Base+0x70c>
    60e8:	ldr	x0, [x27]
    60ec:	ldr	w2, [x0, #8]
    60f0:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    60f4:	ldr	x3, [x0]
    60f8:	add	w1, w1, #0x8
    60fc:	ldr	w6, [x27, #32]
    6100:	sub	w2, w2, #0x1
    6104:	ldrb	w11, [x3], #1
    6108:	orr	w6, w11, w6, lsl #8
    610c:	stp	w6, w1, [x27, #32]
    6110:	ldr	w1, [x0, #12]
    6114:	str	x3, [x0]
    6118:	add	w1, w1, #0x1
    611c:	stp	w2, w1, [x0, #8]
    6120:	cbnz	w1, 5dcc <BZ2_decompress@@Base+0x73c>
    6124:	ldr	w1, [x0, #16]
    6128:	add	w1, w1, #0x1
    612c:	str	w1, [x0, #16]
    6130:	b	5dcc <BZ2_decompress@@Base+0x73c>
    6134:	ldr	x0, [x27]
    6138:	ldr	w2, [x0, #8]
    613c:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6140:	ldr	x3, [x0]
    6144:	add	w1, w1, #0x8
    6148:	ldr	w6, [x27, #32]
    614c:	sub	w2, w2, #0x1
    6150:	ldrb	w11, [x3], #1
    6154:	orr	w6, w11, w6, lsl #8
    6158:	stp	w6, w1, [x27, #32]
    615c:	ldr	w1, [x0, #12]
    6160:	str	x3, [x0]
    6164:	add	w1, w1, #0x1
    6168:	stp	w2, w1, [x0, #8]
    616c:	cbnz	w1, 5dfc <BZ2_decompress@@Base+0x76c>
    6170:	ldr	w1, [x0, #16]
    6174:	add	w1, w1, #0x1
    6178:	str	w1, [x0, #16]
    617c:	b	5dfc <BZ2_decompress@@Base+0x76c>
    6180:	ldr	x0, [x27]
    6184:	ldr	w2, [x0, #8]
    6188:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    618c:	ldr	x3, [x0]
    6190:	add	w1, w1, #0x8
    6194:	ldr	w6, [x27, #32]
    6198:	sub	w2, w2, #0x1
    619c:	ldrb	w11, [x3], #1
    61a0:	orr	w6, w11, w6, lsl #8
    61a4:	stp	w6, w1, [x27, #32]
    61a8:	ldr	w1, [x0, #12]
    61ac:	str	x3, [x0]
    61b0:	add	w1, w1, #0x1
    61b4:	stp	w2, w1, [x0, #8]
    61b8:	cbnz	w1, 5e64 <BZ2_decompress@@Base+0x7d4>
    61bc:	ldr	w1, [x0, #16]
    61c0:	add	w1, w1, #0x1
    61c4:	str	w1, [x0, #16]
    61c8:	b	5e64 <BZ2_decompress@@Base+0x7d4>
    61cc:	ldr	x0, [x27]
    61d0:	ldr	w2, [x0, #8]
    61d4:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    61d8:	ldr	x3, [x0]
    61dc:	add	w1, w1, #0x8
    61e0:	ldr	w6, [x27, #32]
    61e4:	sub	w2, w2, #0x1
    61e8:	ldrb	w11, [x3], #1
    61ec:	orr	w6, w11, w6, lsl #8
    61f0:	stp	w6, w1, [x27, #32]
    61f4:	ldr	w1, [x0, #12]
    61f8:	str	x3, [x0]
    61fc:	add	w1, w1, #0x1
    6200:	stp	w2, w1, [x0, #8]
    6204:	cbnz	w1, 5e98 <BZ2_decompress@@Base+0x808>
    6208:	ldr	w1, [x0, #16]
    620c:	add	w1, w1, #0x1
    6210:	str	w1, [x0, #16]
    6214:	b	5e98 <BZ2_decompress@@Base+0x808>
    6218:	ldr	x0, [x27]
    621c:	ldr	w2, [x0, #8]
    6220:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6224:	ldr	x3, [x0]
    6228:	add	w1, w1, #0x8
    622c:	ldr	w6, [x27, #32]
    6230:	sub	w2, w2, #0x1
    6234:	ldrb	w11, [x3], #1
    6238:	orr	w6, w11, w6, lsl #8
    623c:	stp	w6, w1, [x27, #32]
    6240:	ldr	w1, [x0, #12]
    6244:	str	x3, [x0]
    6248:	add	w1, w1, #0x1
    624c:	stp	w2, w1, [x0, #8]
    6250:	cbnz	w1, 5ecc <BZ2_decompress@@Base+0x83c>
    6254:	ldr	w1, [x0, #16]
    6258:	add	w1, w1, #0x1
    625c:	str	w1, [x0, #16]
    6260:	b	5ecc <BZ2_decompress@@Base+0x83c>
    6264:	ldr	x0, [x27]
    6268:	ldr	w2, [x0, #8]
    626c:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6270:	ldr	x3, [x0]
    6274:	add	w1, w1, #0x8
    6278:	ldr	w6, [x27, #32]
    627c:	sub	w2, w2, #0x1
    6280:	ldrb	w11, [x3], #1
    6284:	orr	w6, w11, w6, lsl #8
    6288:	stp	w6, w1, [x27, #32]
    628c:	ldr	w1, [x0, #12]
    6290:	str	x3, [x0]
    6294:	add	w1, w1, #0x1
    6298:	stp	w2, w1, [x0, #8]
    629c:	cbnz	w1, 5f00 <BZ2_decompress@@Base+0x870>
    62a0:	ldr	w1, [x0, #16]
    62a4:	add	w1, w1, #0x1
    62a8:	str	w1, [x0, #16]
    62ac:	b	5f00 <BZ2_decompress@@Base+0x870>
    62b0:	ldr	x0, [x27]
    62b4:	ldr	w2, [x0, #8]
    62b8:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    62bc:	ldr	x3, [x0]
    62c0:	add	w1, w1, #0x8
    62c4:	ldr	w6, [x27, #32]
    62c8:	sub	w2, w2, #0x1
    62cc:	ldrb	w11, [x3], #1
    62d0:	orr	w6, w11, w6, lsl #8
    62d4:	stp	w6, w1, [x27, #32]
    62d8:	ldr	w1, [x0, #12]
    62dc:	str	x3, [x0]
    62e0:	add	w1, w1, #0x1
    62e4:	stp	w2, w1, [x0, #8]
    62e8:	cbnz	w1, 5f34 <BZ2_decompress@@Base+0x8a4>
    62ec:	ldr	w1, [x0, #16]
    62f0:	add	w1, w1, #0x1
    62f4:	str	w1, [x0, #16]
    62f8:	b	5f34 <BZ2_decompress@@Base+0x8a4>
    62fc:	ldr	x0, [x27]
    6300:	ldr	w2, [x0, #8]
    6304:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6308:	ldr	x3, [x0]
    630c:	add	w1, w1, #0x8
    6310:	ldr	w6, [x27, #32]
    6314:	sub	w2, w2, #0x1
    6318:	ldrb	w11, [x3], #1
    631c:	orr	w6, w11, w6, lsl #8
    6320:	stp	w6, w1, [x27, #32]
    6324:	ldr	w1, [x0, #12]
    6328:	str	x3, [x0]
    632c:	add	w1, w1, #0x1
    6330:	stp	w2, w1, [x0, #8]
    6334:	cbnz	w1, 5f64 <BZ2_decompress@@Base+0x8d4>
    6338:	ldr	w1, [x0, #16]
    633c:	add	w1, w1, #0x1
    6340:	str	w1, [x0, #16]
    6344:	b	5f64 <BZ2_decompress@@Base+0x8d4>
    6348:	ldr	x0, [x27]
    634c:	ldr	w2, [x0, #8]
    6350:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6354:	ldr	x3, [x0]
    6358:	add	w1, w1, #0x8
    635c:	ldr	w6, [x27, #32]
    6360:	sub	w2, w2, #0x1
    6364:	ldrb	w11, [x3], #1
    6368:	orr	w6, w11, w6, lsl #8
    636c:	stp	w6, w1, [x27, #32]
    6370:	ldr	w1, [x0, #12]
    6374:	str	x3, [x0]
    6378:	add	w1, w1, #0x1
    637c:	stp	w2, w1, [x0, #8]
    6380:	cbnz	w1, 5f98 <BZ2_decompress@@Base+0x908>
    6384:	ldr	w1, [x0, #16]
    6388:	add	w1, w1, #0x1
    638c:	str	w1, [x0, #16]
    6390:	b	5f98 <BZ2_decompress@@Base+0x908>
    6394:	ldr	x0, [x27]
    6398:	ldr	w2, [x0, #8]
    639c:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    63a0:	ldr	x3, [x0]
    63a4:	add	w1, w1, #0x8
    63a8:	ldr	w6, [x27, #32]
    63ac:	sub	w2, w2, #0x1
    63b0:	ldrb	w11, [x3], #1
    63b4:	orr	w6, w11, w6, lsl #8
    63b8:	stp	w6, w1, [x27, #32]
    63bc:	ldr	w1, [x0, #12]
    63c0:	str	x3, [x0]
    63c4:	add	w1, w1, #0x1
    63c8:	stp	w2, w1, [x0, #8]
    63cc:	cbnz	w1, 5fcc <BZ2_decompress@@Base+0x93c>
    63d0:	ldr	w1, [x0, #16]
    63d4:	add	w1, w1, #0x1
    63d8:	str	w1, [x0, #16]
    63dc:	b	5fcc <BZ2_decompress@@Base+0x93c>
    63e0:	ldr	w0, [x27, #40]
    63e4:	mov	w2, #0x86a0                	// #34464
    63e8:	movk	w2, #0x1, lsl #16
    63ec:	mul	w0, w0, w2
    63f0:	add	w0, w0, #0xa
    63f4:	cmp	w1, w0
    63f8:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    63fc:	mov	w4, #0x0                   	// #0
    6400:	sxtw	x3, w4
    6404:	add	x6, x27, #0xd7c
    6408:	mov	w11, #0x1c                  	// #28
    640c:	mov	w4, w3
    6410:	str	w11, [x27, #8]
    6414:	ldr	w0, [x27, #36]
    6418:	cmp	w0, #0x0
    641c:	b.le	67d0 <BZ2_decompress@@Base+0x1140>
    6420:	ldr	w1, [x27, #32]
    6424:	sub	w0, w0, #0x1
    6428:	str	w0, [x27, #36]
    642c:	lsr	w1, w1, w0
    6430:	and	w1, w1, #0x1
    6434:	strb	w1, [x6, x3]
    6438:	add	x3, x3, #0x1
    643c:	cmp	w3, #0xf
    6440:	b.le	640c <BZ2_decompress@@Base+0xd7c>
    6444:	add	x0, x27, #0xc7c
    6448:	strb	wzr, [x0], #1
    644c:	cmp	x6, x0
    6450:	b.ne	6448 <BZ2_decompress@@Base+0xdb8>  // b.any
    6454:	mov	w4, #0x0                   	// #0
    6458:	add	x0, x27, w4, sxtw
    645c:	ldrb	w0, [x0, #3452]
    6460:	cbz	w0, 64b0 <BZ2_decompress@@Base+0xe20>
    6464:	mov	w22, #0x0                   	// #0
    6468:	lsl	w3, w4, #4
    646c:	mov	w6, #0x1d                  	// #29
    6470:	mov	w11, #0x1                   	// #1
    6474:	str	w6, [x27, #8]
    6478:	ldr	w0, [x27, #36]
    647c:	cmp	w0, #0x0
    6480:	b.le	681c <BZ2_decompress@@Base+0x118c>
    6484:	ldr	w1, [x27, #32]
    6488:	sub	w0, w0, #0x1
    648c:	str	w0, [x27, #36]
    6490:	lsr	w1, w1, w0
    6494:	tbz	w1, #0, 64a4 <BZ2_decompress@@Base+0xe14>
    6498:	add	w0, w22, w3
    649c:	add	x0, x27, w0, sxtw
    64a0:	strb	w11, [x0, #3196]
    64a4:	add	w22, w22, #0x1
    64a8:	cmp	w22, #0xf
    64ac:	b.le	6474 <BZ2_decompress@@Base+0xde4>
    64b0:	add	w4, w4, #0x1
    64b4:	cmp	w4, #0xf
    64b8:	b.le	6458 <BZ2_decompress@@Base+0xdc8>
    64bc:	add	x2, x27, #0xc7c
    64c0:	mov	x0, #0x0                   	// #0
    64c4:	str	wzr, [x27, #3192]
    64c8:	ldrb	w1, [x2, x0]
    64cc:	cbz	w1, 64e4 <BZ2_decompress@@Base+0xe54>
    64d0:	ldr	w1, [x27, #3192]
    64d4:	add	x3, x27, w1, sxtw
    64d8:	add	w1, w1, #0x1
    64dc:	strb	w0, [x3, #3468]
    64e0:	str	w1, [x27, #3192]
    64e4:	add	x0, x0, #0x1
    64e8:	cmp	x0, #0x100
    64ec:	b.ne	64c8 <BZ2_decompress@@Base+0xe38>  // b.any
    64f0:	ldr	w0, [x27, #3192]
    64f4:	cbz	w0, 5ffc <BZ2_decompress@@Base+0x96c>
    64f8:	add	w0, w0, #0x2
    64fc:	str	w0, [sp, #152]
    6500:	mov	w0, #0x1e                  	// #30
    6504:	str	w0, [x27, #8]
    6508:	ldr	w1, [x27, #36]
    650c:	cmp	w1, #0x2
    6510:	b.le	6868 <BZ2_decompress@@Base+0x11d8>
    6514:	ldr	w0, [x27, #32]
    6518:	sub	w1, w1, #0x3
    651c:	str	w1, [x27, #36]
    6520:	lsr	w0, w0, w1
    6524:	and	w0, w0, #0x7
    6528:	str	w0, [sp, #100]
    652c:	sub	w0, w0, #0x2
    6530:	cmp	w0, #0x4
    6534:	b.hi	5ffc <BZ2_decompress@@Base+0x96c>  // b.pmore
    6538:	mov	w0, #0x1f                  	// #31
    653c:	str	w0, [x27, #8]
    6540:	ldr	w1, [x27, #36]
    6544:	cmp	w1, #0xe
    6548:	b.le	68b4 <BZ2_decompress@@Base+0x1224>
    654c:	ldr	w19, [x27, #32]
    6550:	sub	w1, w1, #0xf
    6554:	str	w1, [x27, #36]
    6558:	lsr	w19, w19, w1
    655c:	ands	w19, w19, #0x7fff
    6560:	b.eq	7a0c <BZ2_decompress@@Base+0x237c>  // b.none
    6564:	mov	w22, #0x0                   	// #0
    6568:	mov	w4, #0x0                   	// #0
    656c:	mov	x9, #0x651e                	// #25886
    6570:	sxtw	x3, w4
    6574:	mov	w0, w22
    6578:	add	x12, x27, x9
    657c:	mov	w6, #0x20                  	// #32
    6580:	mov	w11, #0x4651                	// #18001
    6584:	mov	w4, w3
    6588:	mov	w22, w0
    658c:	str	w6, [x27, #8]
    6590:	ldr	w0, [x27, #36]
    6594:	cmp	w0, #0x0
    6598:	b.le	6900 <BZ2_decompress@@Base+0x1270>
    659c:	ldr	w1, [x27, #32]
    65a0:	sub	w0, w0, #0x1
    65a4:	str	w0, [x27, #36]
    65a8:	lsr	w1, w1, w0
    65ac:	tbnz	w1, #0, 694c <BZ2_decompress@@Base+0x12bc>
    65b0:	cmp	w3, w11
    65b4:	b.gt	65bc <BZ2_decompress@@Base+0xf2c>
    65b8:	strb	w22, [x12, x3]
    65bc:	add	x3, x3, #0x1
    65c0:	mov	w0, #0x0                   	// #0
    65c4:	cmp	w19, w3
    65c8:	b.gt	6584 <BZ2_decompress@@Base+0xef4>
    65cc:	mov	w0, #0x4652                	// #18002
    65d0:	add	x1, sp, #0xc8
    65d4:	cmp	w19, w0
    65d8:	csel	w19, w19, w0, le
    65dc:	mov	w0, #0x0                   	// #0
    65e0:	ldr	w2, [sp, #100]
    65e4:	cmp	w0, w2
    65e8:	b.lt	6960 <BZ2_decompress@@Base+0x12d0>  // b.tstop
    65ec:	mov	x7, #0x651e                	// #25886
    65f0:	mov	x8, #0x1ecc                	// #7884
    65f4:	add	x3, x27, x7
    65f8:	add	x4, sp, #0xc8
    65fc:	add	x11, x27, x8
    6600:	mov	x0, #0x0                   	// #0
    6604:	cmp	w19, w0
    6608:	b.gt	6970 <BZ2_decompress@@Base+0x12e0>
    660c:	cmp	w19, #0x0
    6610:	str	wzr, [sp, #104]
    6614:	csel	w4, w19, wzr, ge  // ge = tcont
    6618:	ldp	w1, w0, [sp, #100]
    661c:	cmp	w0, w1
    6620:	b.lt	69ac <BZ2_decompress@@Base+0x131c>  // b.tstop
    6624:	mov	x4, #0xb17c                	// #45436
    6628:	mov	x5, #0xab70                	// #43888
    662c:	mov	x6, #0xfa0c                	// #64012
    6630:	add	x25, x27, x4
    6634:	add	x3, x27, x5
    6638:	add	x13, x27, x6
    663c:	mov	x28, #0x0                   	// #0
    6640:	mov	x11, #0x3060                	// #12384
    6644:	mov	x12, #0x1830                	// #6192
    6648:	ldr	w0, [sp, #100]
    664c:	cmp	w0, w28
    6650:	b.gt	6be0 <BZ2_decompress@@Base+0x1550>
    6654:	cmp	w0, #0x0
    6658:	ldr	w1, [x27, #40]
    665c:	csel	w0, w0, wzr, ge  // ge = tcont
    6660:	str	w0, [sp, #104]
    6664:	ldr	w0, [x27, #3192]
    6668:	add	w0, w0, #0x1
    666c:	str	w0, [sp, #160]
    6670:	mov	w0, #0x86a0                	// #34464
    6674:	movk	w0, #0x1, lsl #16
    6678:	mul	w0, w1, w0
    667c:	add	x1, x27, #0x444
    6680:	str	w0, [sp, #144]
    6684:	add	x0, x27, #0x44
    6688:	str	wzr, [x0], #4
    668c:	cmp	x1, x0
    6690:	b.ne	6688 <BZ2_decompress@@Base+0xff8>  // b.any
    6694:	mov	x3, #0x1ec8                	// #7880
    6698:	add	x4, x27, x3
    669c:	add	x3, x27, #0xfff
    66a0:	mov	w0, #0xff0                 	// #4080
    66a4:	and	w5, w0, #0xff
    66a8:	mov	x2, x3
    66ac:	mov	w1, #0xf                   	// #15
    66b0:	add	w6, w5, w1
    66b4:	strb	w6, [x2, #3724]
    66b8:	sub	w1, w1, #0x1
    66bc:	sub	x2, x2, #0x1
    66c0:	cmn	w1, #0x1
    66c4:	b.ne	66b0 <BZ2_decompress@@Base+0x1020>  // b.any
    66c8:	str	w0, [x4], #-4
    66cc:	sub	w0, w0, #0x10
    66d0:	sub	x3, x3, #0x10
    66d4:	cmp	w0, #0xef0
    66d8:	b.ne	66a4 <BZ2_decompress@@Base+0x1014>  // b.any
    66dc:	cmp	w19, #0x0
    66e0:	b.le	7a14 <BZ2_decompress@@Base+0x2384>
    66e4:	add	x1, x27, #0x1, lsl #12
    66e8:	mov	x17, #0x3e80                	// #16000
    66ec:	mov	x18, #0xb17c                	// #45436
    66f0:	mov	x30, #0xe1dc                	// #57820
    66f4:	mov	x2, #0xc9ac                	// #51628
    66f8:	mov	w28, #0x0                   	// #0
    66fc:	ldrb	w0, [x1, #3788]
    6700:	mov	w25, #0x31                  	// #49
    6704:	str	w0, [sp, #156]
    6708:	mov	w26, #0x0                   	// #0
    670c:	ldrb	w0, [x1, #3788]
    6710:	mov	w4, #0x100                 	// #256
    6714:	add	x0, x0, x17
    6718:	add	x0, x27, x0, lsl #2
    671c:	ldr	w24, [x0, #12]
    6720:	ldrb	w0, [x1, #3788]
    6724:	mov	x1, #0x408                 	// #1032
    6728:	str	w24, [sp, #140]
    672c:	mul	x0, x0, x1
    6730:	add	x21, x0, x18
    6734:	add	x1, x0, x30
    6738:	add	x21, x27, x21
    673c:	add	x0, x0, x2
    6740:	add	x1, x27, x1
    6744:	add	x0, x27, x0
    6748:	stp	x0, x1, [sp, #120]
    674c:	mov	w0, #0x24                  	// #36
    6750:	str	w0, [x27, #8]
    6754:	ldr	w1, [x27, #36]
    6758:	cmp	w1, w24
    675c:	b.lt	6bf0 <BZ2_decompress@@Base+0x1560>  // b.tstop
    6760:	ldr	w9, [x27, #32]
    6764:	sub	w1, w1, w24
    6768:	mov	w0, #0x1                   	// #1
    676c:	str	w1, [x27, #36]
    6770:	lsl	w0, w0, w24
    6774:	sub	w0, w0, #0x1
    6778:	lsr	w9, w9, w1
    677c:	and	w23, w9, w0
    6780:	cmp	w24, #0x14
    6784:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    6788:	sbfiz	x0, x24, #2, #32
    678c:	ldr	w1, [x21, x0]
    6790:	cmp	w1, w23
    6794:	b.ge	72b4 <BZ2_decompress@@Base+0x1c24>  // b.tcont
    6798:	add	w24, w24, #0x1
    679c:	mov	w0, #0x25                  	// #37
    67a0:	str	w0, [x27, #8]
    67a4:	ldr	w1, [x27, #36]
    67a8:	cmp	w1, #0x0
    67ac:	b.le	6c3c <BZ2_decompress@@Base+0x15ac>
    67b0:	ldr	w0, [x27, #32]
    67b4:	sub	w1, w1, #0x1
    67b8:	str	w1, [x27, #36]
    67bc:	lsr	w0, w0, w1
    67c0:	and	w0, w0, #0x1
    67c4:	orr	w23, w0, w23, lsl #1
    67c8:	str	w0, [sp, #136]
    67cc:	b	6780 <BZ2_decompress@@Base+0x10f0>
    67d0:	ldr	x2, [x27]
    67d4:	ldr	w1, [x2, #8]
    67d8:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    67dc:	ldr	x12, [x2]
    67e0:	add	w0, w0, #0x8
    67e4:	ldr	w13, [x27, #32]
    67e8:	sub	w1, w1, #0x1
    67ec:	ldrb	w14, [x12], #1
    67f0:	orr	w13, w14, w13, lsl #8
    67f4:	stp	w13, w0, [x27, #32]
    67f8:	ldr	w0, [x2, #12]
    67fc:	str	x12, [x2]
    6800:	add	w0, w0, #0x1
    6804:	stp	w1, w0, [x2, #8]
    6808:	cbnz	w0, 6414 <BZ2_decompress@@Base+0xd84>
    680c:	ldr	w0, [x2, #16]
    6810:	add	w0, w0, #0x1
    6814:	str	w0, [x2, #16]
    6818:	b	6414 <BZ2_decompress@@Base+0xd84>
    681c:	ldr	x2, [x27]
    6820:	ldr	w1, [x2, #8]
    6824:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    6828:	ldr	x12, [x2]
    682c:	add	w0, w0, #0x8
    6830:	ldr	w13, [x27, #32]
    6834:	sub	w1, w1, #0x1
    6838:	ldrb	w14, [x12], #1
    683c:	orr	w13, w14, w13, lsl #8
    6840:	stp	w13, w0, [x27, #32]
    6844:	ldr	w0, [x2, #12]
    6848:	str	x12, [x2]
    684c:	add	w0, w0, #0x1
    6850:	stp	w1, w0, [x2, #8]
    6854:	cbnz	w0, 6478 <BZ2_decompress@@Base+0xde8>
    6858:	ldr	w0, [x2, #16]
    685c:	add	w0, w0, #0x1
    6860:	str	w0, [x2, #16]
    6864:	b	6478 <BZ2_decompress@@Base+0xde8>
    6868:	ldr	x0, [x27]
    686c:	ldr	w2, [x0, #8]
    6870:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6874:	ldr	x3, [x0]
    6878:	add	w1, w1, #0x8
    687c:	ldr	w6, [x27, #32]
    6880:	sub	w2, w2, #0x1
    6884:	ldrb	w11, [x3], #1
    6888:	orr	w6, w11, w6, lsl #8
    688c:	stp	w6, w1, [x27, #32]
    6890:	ldr	w1, [x0, #12]
    6894:	str	x3, [x0]
    6898:	add	w1, w1, #0x1
    689c:	stp	w2, w1, [x0, #8]
    68a0:	cbnz	w1, 6508 <BZ2_decompress@@Base+0xe78>
    68a4:	ldr	w1, [x0, #16]
    68a8:	add	w1, w1, #0x1
    68ac:	str	w1, [x0, #16]
    68b0:	b	6508 <BZ2_decompress@@Base+0xe78>
    68b4:	ldr	x0, [x27]
    68b8:	ldr	w2, [x0, #8]
    68bc:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    68c0:	ldr	x3, [x0]
    68c4:	add	w1, w1, #0x8
    68c8:	ldr	w6, [x27, #32]
    68cc:	sub	w2, w2, #0x1
    68d0:	ldrb	w11, [x3], #1
    68d4:	orr	w6, w11, w6, lsl #8
    68d8:	stp	w6, w1, [x27, #32]
    68dc:	ldr	w1, [x0, #12]
    68e0:	str	x3, [x0]
    68e4:	add	w1, w1, #0x1
    68e8:	stp	w2, w1, [x0, #8]
    68ec:	cbnz	w1, 6540 <BZ2_decompress@@Base+0xeb0>
    68f0:	ldr	w1, [x0, #16]
    68f4:	add	w1, w1, #0x1
    68f8:	str	w1, [x0, #16]
    68fc:	b	6540 <BZ2_decompress@@Base+0xeb0>
    6900:	ldr	x2, [x27]
    6904:	ldr	w1, [x2, #8]
    6908:	cbz	w1, 75f8 <BZ2_decompress@@Base+0x1f68>
    690c:	ldr	x13, [x2]
    6910:	add	w0, w0, #0x8
    6914:	ldr	w14, [x27, #32]
    6918:	sub	w1, w1, #0x1
    691c:	ldrb	w15, [x13], #1
    6920:	orr	w14, w15, w14, lsl #8
    6924:	stp	w14, w0, [x27, #32]
    6928:	ldr	w0, [x2, #12]
    692c:	str	x13, [x2]
    6930:	add	w0, w0, #0x1
    6934:	stp	w1, w0, [x2, #8]
    6938:	cbnz	w0, 6590 <BZ2_decompress@@Base+0xf00>
    693c:	ldr	w0, [x2, #16]
    6940:	add	w0, w0, #0x1
    6944:	str	w0, [x2, #16]
    6948:	b	6590 <BZ2_decompress@@Base+0xf00>
    694c:	ldr	w0, [sp, #100]
    6950:	add	w22, w22, #0x1
    6954:	cmp	w22, w0
    6958:	b.lt	658c <BZ2_decompress@@Base+0xefc>  // b.tstop
    695c:	b	5ffc <BZ2_decompress@@Base+0x96c>
    6960:	strb	w0, [x1, w0, sxtw]
    6964:	add	w0, w0, #0x1
    6968:	and	w0, w0, #0xff
    696c:	b	65e0 <BZ2_decompress@@Base+0xf50>
    6970:	ldrb	w1, [x3, x0]
    6974:	ldrb	w2, [x3, x0]
    6978:	ldrb	w6, [x4, x1]
    697c:	add	x1, x4, x1
    6980:	sub	x1, x1, #0x1
    6984:	cbnz	w2, 6998 <BZ2_decompress@@Base+0x1308>
    6988:	strb	w6, [x11, x0]
    698c:	add	x0, x0, #0x1
    6990:	strb	w6, [sp, #200]
    6994:	b	6604 <BZ2_decompress@@Base+0xf74>
    6998:	ldrb	w12, [x1]
    699c:	sub	w2, w2, #0x1
    69a0:	and	w2, w2, #0xff
    69a4:	strb	w12, [x1, #1]
    69a8:	b	6980 <BZ2_decompress@@Base+0x12f0>
    69ac:	mov	w0, #0x21                  	// #33
    69b0:	str	w0, [x27, #8]
    69b4:	ldr	w1, [x27, #36]
    69b8:	cmp	w1, #0x4
    69bc:	b.le	69f8 <BZ2_decompress@@Base+0x1368>
    69c0:	ldr	w0, [x27, #32]
    69c4:	sub	w1, w1, #0x5
    69c8:	mov	w4, #0x0                   	// #0
    69cc:	str	w1, [x27, #36]
    69d0:	lsr	w0, w0, w1
    69d4:	and	w0, w0, #0x1f
    69d8:	str	w0, [sp, #116]
    69dc:	ldr	w0, [sp, #152]
    69e0:	cmp	w4, w0
    69e4:	b.lt	6a44 <BZ2_decompress@@Base+0x13b4>  // b.tstop
    69e8:	ldr	w0, [sp, #104]
    69ec:	add	w0, w0, #0x1
    69f0:	str	w0, [sp, #104]
    69f4:	b	6618 <BZ2_decompress@@Base+0xf88>
    69f8:	ldr	x0, [x27]
    69fc:	ldr	w2, [x0, #8]
    6a00:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6a04:	ldr	x3, [x0]
    6a08:	add	w1, w1, #0x8
    6a0c:	ldr	w6, [x27, #32]
    6a10:	sub	w2, w2, #0x1
    6a14:	ldrb	w11, [x3], #1
    6a18:	orr	w6, w11, w6, lsl #8
    6a1c:	stp	w6, w1, [x27, #32]
    6a20:	ldr	w1, [x0, #12]
    6a24:	str	x3, [x0]
    6a28:	add	w1, w1, #0x1
    6a2c:	stp	w2, w1, [x0, #8]
    6a30:	cbnz	w1, 69b4 <BZ2_decompress@@Base+0x1324>
    6a34:	ldr	w1, [x0, #16]
    6a38:	add	w1, w1, #0x1
    6a3c:	str	w1, [x0, #16]
    6a40:	b	69b4 <BZ2_decompress@@Base+0x1324>
    6a44:	ldr	w0, [sp, #116]
    6a48:	sub	w0, w0, #0x1
    6a4c:	cmp	w0, #0x13
    6a50:	b.hi	5ffc <BZ2_decompress@@Base+0x96c>  // b.pmore
    6a54:	mov	w0, #0x22                  	// #34
    6a58:	str	w0, [x27, #8]
    6a5c:	ldr	w1, [x27, #36]
    6a60:	cmp	w1, #0x0
    6a64:	b.le	6abc <BZ2_decompress@@Base+0x142c>
    6a68:	ldr	w0, [x27, #32]
    6a6c:	sub	w1, w1, #0x1
    6a70:	str	w1, [x27, #36]
    6a74:	lsr	w0, w0, w1
    6a78:	tbz	w0, #0, 6b54 <BZ2_decompress@@Base+0x14c4>
    6a7c:	mov	w0, #0x23                  	// #35
    6a80:	str	w0, [x27, #8]
    6a84:	ldr	w1, [x27, #36]
    6a88:	cmp	w1, #0x0
    6a8c:	b.le	6b08 <BZ2_decompress@@Base+0x1478>
    6a90:	ldr	w0, [x27, #32]
    6a94:	sub	w1, w1, #0x1
    6a98:	str	w1, [x27, #36]
    6a9c:	lsr	w0, w0, w1
    6aa0:	ldr	w1, [sp, #116]
    6aa4:	tst	x0, #0x1
    6aa8:	ldr	w0, [sp, #116]
    6aac:	sub	w1, w1, #0x1
    6ab0:	csinc	w0, w1, w0, ne  // ne = any
    6ab4:	str	w0, [sp, #116]
    6ab8:	b	6a44 <BZ2_decompress@@Base+0x13b4>
    6abc:	ldr	x0, [x27]
    6ac0:	ldr	w2, [x0, #8]
    6ac4:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6ac8:	ldr	x3, [x0]
    6acc:	add	w1, w1, #0x8
    6ad0:	ldr	w6, [x27, #32]
    6ad4:	sub	w2, w2, #0x1
    6ad8:	ldrb	w11, [x3], #1
    6adc:	orr	w6, w11, w6, lsl #8
    6ae0:	stp	w6, w1, [x27, #32]
    6ae4:	ldr	w1, [x0, #12]
    6ae8:	str	x3, [x0]
    6aec:	add	w1, w1, #0x1
    6af0:	stp	w2, w1, [x0, #8]
    6af4:	cbnz	w1, 6a5c <BZ2_decompress@@Base+0x13cc>
    6af8:	ldr	w1, [x0, #16]
    6afc:	add	w1, w1, #0x1
    6b00:	str	w1, [x0, #16]
    6b04:	b	6a5c <BZ2_decompress@@Base+0x13cc>
    6b08:	ldr	x0, [x27]
    6b0c:	ldr	w2, [x0, #8]
    6b10:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6b14:	ldr	x3, [x0]
    6b18:	add	w1, w1, #0x8
    6b1c:	ldr	w6, [x27, #32]
    6b20:	sub	w2, w2, #0x1
    6b24:	ldrb	w11, [x3], #1
    6b28:	orr	w6, w11, w6, lsl #8
    6b2c:	stp	w6, w1, [x27, #32]
    6b30:	ldr	w1, [x0, #12]
    6b34:	str	x3, [x0]
    6b38:	add	w1, w1, #0x1
    6b3c:	stp	w2, w1, [x0, #8]
    6b40:	cbnz	w1, 6a84 <BZ2_decompress@@Base+0x13f4>
    6b44:	ldr	w1, [x0, #16]
    6b48:	add	w1, w1, #0x1
    6b4c:	str	w1, [x0, #16]
    6b50:	b	6a84 <BZ2_decompress@@Base+0x13f4>
    6b54:	ldrsw	x0, [sp, #104]
    6b58:	mov	x1, #0x102                 	// #258
    6b5c:	madd	x0, x0, x1, x27
    6b60:	ldrb	w1, [sp, #116]
    6b64:	add	x0, x0, w4, sxtw
    6b68:	add	w4, w4, #0x1
    6b6c:	add	x0, x0, #0xa, lsl #12
    6b70:	strb	w1, [x0, #2928]
    6b74:	b	69dc <BZ2_decompress@@Base+0x134c>
    6b78:	ldrb	w1, [x3, x0]
    6b7c:	add	x0, x0, #0x1
    6b80:	cmp	w5, w1
    6b84:	csel	w5, w5, w1, ge  // ge = tcont
    6b88:	cmp	w26, w1
    6b8c:	csel	w26, w26, w1, le
    6b90:	ldr	w1, [sp, #152]
    6b94:	cmp	w1, w0
    6b98:	b.gt	6b78 <BZ2_decompress@@Base+0x14e8>
    6b9c:	add	x2, x25, x11
    6ba0:	mov	x6, x1
    6ba4:	mov	x0, x25
    6ba8:	add	x1, x25, x12
    6bac:	mov	w4, w26
    6bb0:	str	x3, [sp, #104]
    6bb4:	str	x13, [sp, #144]
    6bb8:	bl	15c0 <BZ2_hbCreateDecodeTables@plt>
    6bbc:	ldr	x13, [sp, #144]
    6bc0:	add	x25, x25, #0x408
    6bc4:	ldr	x3, [sp, #104]
    6bc8:	mov	x11, #0x3060                	// #12384
    6bcc:	mov	x12, #0x1830                	// #6192
    6bd0:	str	w26, [x13, x28, lsl #2]
    6bd4:	add	x3, x3, #0x102
    6bd8:	add	x28, x28, #0x1
    6bdc:	b	6648 <BZ2_decompress@@Base+0xfb8>
    6be0:	mov	x0, #0x0                   	// #0
    6be4:	mov	w5, #0x0                   	// #0
    6be8:	mov	w26, #0x20                  	// #32
    6bec:	b	6b90 <BZ2_decompress@@Base+0x1500>
    6bf0:	ldr	x0, [x27]
    6bf4:	ldr	w2, [x0, #8]
    6bf8:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6bfc:	ldr	x3, [x0]
    6c00:	add	w1, w1, #0x8
    6c04:	ldr	w6, [x27, #32]
    6c08:	sub	w2, w2, #0x1
    6c0c:	ldrb	w11, [x3], #1
    6c10:	orr	w6, w11, w6, lsl #8
    6c14:	stp	w6, w1, [x27, #32]
    6c18:	ldr	w1, [x0, #12]
    6c1c:	str	x3, [x0]
    6c20:	add	w1, w1, #0x1
    6c24:	stp	w2, w1, [x0, #8]
    6c28:	cbnz	w1, 6754 <BZ2_decompress@@Base+0x10c4>
    6c2c:	ldr	w1, [x0, #16]
    6c30:	add	w1, w1, #0x1
    6c34:	str	w1, [x0, #16]
    6c38:	b	6754 <BZ2_decompress@@Base+0x10c4>
    6c3c:	ldr	x0, [x27]
    6c40:	ldr	w2, [x0, #8]
    6c44:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6c48:	ldr	x3, [x0]
    6c4c:	add	w1, w1, #0x8
    6c50:	ldr	w6, [x27, #32]
    6c54:	sub	w2, w2, #0x1
    6c58:	ldrb	w11, [x3], #1
    6c5c:	orr	w6, w11, w6, lsl #8
    6c60:	stp	w6, w1, [x27, #32]
    6c64:	ldr	w1, [x0, #12]
    6c68:	str	x3, [x0]
    6c6c:	add	w1, w1, #0x1
    6c70:	stp	w2, w1, [x0, #8]
    6c74:	cbnz	w1, 67a4 <BZ2_decompress@@Base+0x1114>
    6c78:	ldr	w1, [x0, #16]
    6c7c:	add	w1, w1, #0x1
    6c80:	str	w1, [x0, #16]
    6c84:	b	67a4 <BZ2_decompress@@Base+0x1114>
    6c88:	ldr	w2, [sp, #112]
    6c8c:	mov	w1, #0x1fffff              	// #2097151
    6c90:	mov	w0, #0xfffffffc            	// #-4
    6c94:	cmp	w2, w1
    6c98:	b.gt	5c24 <BZ2_decompress@@Base+0x594>
    6c9c:	ldr	w0, [sp, #112]
    6ca0:	ldr	w1, [sp, #112]
    6ca4:	lsl	w2, w0, #1
    6ca8:	add	w0, w20, w0
    6cac:	add	w20, w20, w1, lsl #1
    6cb0:	ldr	w1, [sp, #96]
    6cb4:	cmp	w1, #0x0
    6cb8:	csel	w20, w20, w0, ne  // ne = any
    6cbc:	cbnz	w25, 6d2c <BZ2_decompress@@Base+0x169c>
    6cc0:	add	w26, w26, #0x1
    6cc4:	cmp	w26, w19
    6cc8:	b.ge	7a28 <BZ2_decompress@@Base+0x2398>  // b.tcont
    6ccc:	add	x0, x27, w26, sxtw
    6cd0:	mov	x13, #0x3e80                	// #16000
    6cd4:	add	x0, x0, #0x1, lsl #12
    6cd8:	mov	x14, #0xb17c                	// #45436
    6cdc:	mov	x15, #0xe1dc                	// #57820
    6ce0:	mov	x16, #0xc9ac                	// #51628
    6ce4:	mov	w25, #0x32                  	// #50
    6ce8:	ldrb	w1, [x0, #3788]
    6cec:	str	w1, [sp, #156]
    6cf0:	ldrb	w1, [x0, #3788]
    6cf4:	ldrb	w0, [x0, #3788]
    6cf8:	add	x1, x1, x13
    6cfc:	add	x1, x27, x1, lsl #2
    6d00:	ldr	w1, [x1, #12]
    6d04:	str	w1, [sp, #140]
    6d08:	mov	x1, #0x408                 	// #1032
    6d0c:	mul	x0, x0, x1
    6d10:	add	x21, x0, x14
    6d14:	add	x1, x0, x15
    6d18:	add	x21, x27, x21
    6d1c:	add	x0, x0, x16
    6d20:	add	x1, x27, x1
    6d24:	add	x0, x27, x0
    6d28:	stp	x0, x1, [sp, #120]
    6d2c:	ldr	w24, [sp, #140]
    6d30:	sub	w25, w25, #0x1
    6d34:	str	w2, [sp, #112]
    6d38:	mov	w0, #0x26                  	// #38
    6d3c:	str	w0, [x27, #8]
    6d40:	ldr	w1, [x27, #36]
    6d44:	cmp	w1, w24
    6d48:	b.lt	6dbc <BZ2_decompress@@Base+0x172c>  // b.tstop
    6d4c:	ldr	w9, [x27, #32]
    6d50:	sub	w1, w1, w24
    6d54:	mov	w0, #0x1                   	// #1
    6d58:	str	w1, [x27, #36]
    6d5c:	lsl	w0, w0, w24
    6d60:	sub	w0, w0, #0x1
    6d64:	lsr	w9, w9, w1
    6d68:	and	w23, w9, w0
    6d6c:	cmp	w24, #0x14
    6d70:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    6d74:	sbfiz	x0, x24, #2, #32
    6d78:	ldr	w1, [x21, x0]
    6d7c:	cmp	w1, w23
    6d80:	b.ge	6e54 <BZ2_decompress@@Base+0x17c4>  // b.tcont
    6d84:	add	w24, w24, #0x1
    6d88:	mov	w0, #0x27                  	// #39
    6d8c:	str	w0, [x27, #8]
    6d90:	ldr	w1, [x27, #36]
    6d94:	cmp	w1, #0x0
    6d98:	b.le	6e08 <BZ2_decompress@@Base+0x1778>
    6d9c:	ldr	w0, [x27, #32]
    6da0:	sub	w1, w1, #0x1
    6da4:	str	w1, [x27, #36]
    6da8:	lsr	w0, w0, w1
    6dac:	and	w0, w0, #0x1
    6db0:	orr	w23, w0, w23, lsl #1
    6db4:	str	w0, [sp, #136]
    6db8:	b	6d6c <BZ2_decompress@@Base+0x16dc>
    6dbc:	ldr	x0, [x27]
    6dc0:	ldr	w2, [x0, #8]
    6dc4:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6dc8:	ldr	x3, [x0]
    6dcc:	add	w1, w1, #0x8
    6dd0:	ldr	w6, [x27, #32]
    6dd4:	sub	w2, w2, #0x1
    6dd8:	ldrb	w11, [x3], #1
    6ddc:	orr	w6, w11, w6, lsl #8
    6de0:	stp	w6, w1, [x27, #32]
    6de4:	ldr	w1, [x0, #12]
    6de8:	str	x3, [x0]
    6dec:	add	w1, w1, #0x1
    6df0:	stp	w2, w1, [x0, #8]
    6df4:	cbnz	w1, 6d40 <BZ2_decompress@@Base+0x16b0>
    6df8:	ldr	w1, [x0, #16]
    6dfc:	add	w1, w1, #0x1
    6e00:	str	w1, [x0, #16]
    6e04:	b	6d40 <BZ2_decompress@@Base+0x16b0>
    6e08:	ldr	x0, [x27]
    6e0c:	ldr	w2, [x0, #8]
    6e10:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    6e14:	ldr	x3, [x0]
    6e18:	add	w1, w1, #0x8
    6e1c:	ldr	w6, [x27, #32]
    6e20:	sub	w2, w2, #0x1
    6e24:	ldrb	w11, [x3], #1
    6e28:	orr	w6, w11, w6, lsl #8
    6e2c:	stp	w6, w1, [x27, #32]
    6e30:	ldr	w1, [x0, #12]
    6e34:	str	x3, [x0]
    6e38:	add	w1, w1, #0x1
    6e3c:	stp	w2, w1, [x0, #8]
    6e40:	cbnz	w1, 6d90 <BZ2_decompress@@Base+0x1700>
    6e44:	ldr	w1, [x0, #16]
    6e48:	add	w1, w1, #0x1
    6e4c:	str	w1, [x0, #16]
    6e50:	b	6d90 <BZ2_decompress@@Base+0x1700>
    6e54:	ldr	x1, [sp, #120]
    6e58:	ldr	w0, [x1, x0]
    6e5c:	sub	w0, w23, w0
    6e60:	cmp	w0, #0x101
    6e64:	b.hi	5ffc <BZ2_decompress@@Base+0x96c>  // b.pmore
    6e68:	ldr	x1, [sp, #128]
    6e6c:	ldr	w0, [x1, w0, sxtw #2]
    6e70:	str	w0, [sp, #96]
    6e74:	mov	w0, w0
    6e78:	cmp	w0, #0x1
    6e7c:	b.ls	6c88 <BZ2_decompress@@Base+0x15f8>  // b.plast
    6e80:	ldrsw	x0, [x27, #7820]
    6e84:	add	w20, w20, #0x1
    6e88:	add	x0, x27, x0
    6e8c:	ldrb	w0, [x0, #3724]
    6e90:	add	x0, x27, x0
    6e94:	ldrb	w2, [x0, #3468]
    6e98:	ldrb	w0, [x0, #3468]
    6e9c:	add	x0, x27, x0, lsl #2
    6ea0:	ldr	w1, [x0, #68]
    6ea4:	add	w1, w1, w20
    6ea8:	str	w1, [x0, #68]
    6eac:	sxtw	x0, w28
    6eb0:	ldrb	w1, [x27, #44]
    6eb4:	cbnz	w1, 6ee8 <BZ2_decompress@@Base+0x1858>
    6eb8:	lsl	x0, x0, #2
    6ebc:	cmp	w20, #0x0
    6ec0:	b.le	72d4 <BZ2_decompress@@Base+0x1c44>
    6ec4:	ldr	w1, [sp, #144]
    6ec8:	cmp	w1, w28
    6ecc:	b.le	5ffc <BZ2_decompress@@Base+0x96c>
    6ed0:	ldr	x1, [x27, #3152]
    6ed4:	add	w28, w28, #0x1
    6ed8:	sub	w20, w20, #0x1
    6edc:	str	w2, [x1, x0]
    6ee0:	add	x0, x0, #0x4
    6ee4:	b	6ebc <BZ2_decompress@@Base+0x182c>
    6ee8:	lsl	x0, x0, #1
    6eec:	cmp	w20, #0x0
    6ef0:	b.le	72d4 <BZ2_decompress@@Base+0x1c44>
    6ef4:	ldr	w1, [sp, #144]
    6ef8:	cmp	w1, w28
    6efc:	b.le	5ffc <BZ2_decompress@@Base+0x96c>
    6f00:	ldr	x1, [x27, #3160]
    6f04:	add	w28, w28, #0x1
    6f08:	sub	w20, w20, #0x1
    6f0c:	strh	w2, [x1, x0]
    6f10:	add	x0, x0, #0x2
    6f14:	b	6eec <BZ2_decompress@@Base+0x185c>
    6f18:	ldr	w0, [sp, #144]
    6f1c:	cmp	w0, w28
    6f20:	b.le	5ffc <BZ2_decompress@@Base+0x96c>
    6f24:	ldr	w0, [sp, #96]
    6f28:	sub	w0, w0, #0x1
    6f2c:	cmp	w0, #0xf
    6f30:	b.hi	711c <BZ2_decompress@@Base+0x1a8c>  // b.pmore
    6f34:	ldr	w2, [x27, #7820]
    6f38:	add	w12, w2, w0
    6f3c:	add	w0, w2, w0
    6f40:	add	x0, x27, x0
    6f44:	ldrb	w3, [x0, #3724]
    6f48:	ldr	w0, [sp, #96]
    6f4c:	add	w1, w0, w2
    6f50:	sub	w6, w1, #0x1
    6f54:	sub	w0, w1, #0x4
    6f58:	sub	w11, w6, w2
    6f5c:	cmp	w11, #0x3
    6f60:	b.hi	70b8 <BZ2_decompress@@Base+0x1a28>  // b.pmore
    6f64:	ldr	w0, [sp, #96]
    6f68:	mov	w1, #0xfffffffc            	// #-4
    6f6c:	sub	w0, w0, #0x1
    6f70:	lsr	w0, w0, #2
    6f74:	madd	w0, w0, w1, w12
    6f78:	cmp	w2, w0
    6f7c:	b.ne	7100 <BZ2_decompress@@Base+0x1a70>  // b.any
    6f80:	add	x2, x27, w2, sxtw
    6f84:	strb	w3, [x2, #3724]
    6f88:	add	x3, x27, w3, sxtw
    6f8c:	ldrb	w0, [x3, #3468]
    6f90:	ldrb	w2, [x3, #3468]
    6f94:	add	x0, x27, x0, lsl #2
    6f98:	ldr	w1, [x0, #68]
    6f9c:	add	w1, w1, #0x1
    6fa0:	str	w1, [x0, #68]
    6fa4:	sxtw	x0, w28
    6fa8:	ldrb	w1, [x27, #44]
    6fac:	cbz	w1, 7210 <BZ2_decompress@@Base+0x1b80>
    6fb0:	ldr	x1, [x27, #3160]
    6fb4:	strh	w2, [x1, x0, lsl #1]
    6fb8:	add	w28, w28, #0x1
    6fbc:	cbnz	w25, 702c <BZ2_decompress@@Base+0x199c>
    6fc0:	add	w26, w26, #0x1
    6fc4:	cmp	w19, w26
    6fc8:	b.le	5ffc <BZ2_decompress@@Base+0x96c>
    6fcc:	add	x0, x27, w26, sxtw
    6fd0:	mov	x5, #0x3e80                	// #16000
    6fd4:	add	x0, x0, #0x1, lsl #12
    6fd8:	mov	x6, #0xb17c                	// #45436
    6fdc:	mov	x7, #0xe1dc                	// #57820
    6fe0:	mov	x8, #0xc9ac                	// #51628
    6fe4:	mov	w25, #0x32                  	// #50
    6fe8:	ldrb	w1, [x0, #3788]
    6fec:	str	w1, [sp, #156]
    6ff0:	ldrb	w1, [x0, #3788]
    6ff4:	ldrb	w0, [x0, #3788]
    6ff8:	add	x1, x1, x5
    6ffc:	add	x1, x27, x1, lsl #2
    7000:	ldr	w1, [x1, #12]
    7004:	str	w1, [sp, #140]
    7008:	mov	x1, #0x408                 	// #1032
    700c:	mul	x0, x0, x1
    7010:	add	x21, x0, x6
    7014:	add	x1, x0, x7
    7018:	add	x21, x27, x21
    701c:	add	x0, x0, x8
    7020:	add	x1, x27, x1
    7024:	add	x0, x27, x0
    7028:	stp	x0, x1, [sp, #120]
    702c:	ldr	w24, [sp, #140]
    7030:	sub	w25, w25, #0x1
    7034:	mov	w0, #0x28                  	// #40
    7038:	str	w0, [x27, #8]
    703c:	ldr	w1, [x27, #36]
    7040:	cmp	w1, w24
    7044:	b.lt	721c <BZ2_decompress@@Base+0x1b8c>  // b.tstop
    7048:	ldr	w9, [x27, #32]
    704c:	sub	w1, w1, w24
    7050:	mov	w0, #0x1                   	// #1
    7054:	str	w1, [x27, #36]
    7058:	lsl	w0, w0, w24
    705c:	sub	w0, w0, #0x1
    7060:	lsr	w9, w9, w1
    7064:	and	w23, w9, w0
    7068:	cmp	w24, #0x14
    706c:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    7070:	sbfiz	x0, x24, #2, #32
    7074:	ldr	w1, [x21, x0]
    7078:	cmp	w1, w23
    707c:	b.ge	72b4 <BZ2_decompress@@Base+0x1c24>  // b.tcont
    7080:	add	w24, w24, #0x1
    7084:	mov	w0, #0x29                  	// #41
    7088:	str	w0, [x27, #8]
    708c:	ldr	w1, [x27, #36]
    7090:	cmp	w1, #0x0
    7094:	b.le	7268 <BZ2_decompress@@Base+0x1bd8>
    7098:	ldr	w0, [x27, #32]
    709c:	sub	w1, w1, #0x1
    70a0:	str	w1, [x27, #36]
    70a4:	lsr	w0, w0, w1
    70a8:	and	w0, w0, #0x1
    70ac:	orr	w23, w0, w23, lsl #1
    70b0:	str	w0, [sp, #136]
    70b4:	b	7068 <BZ2_decompress@@Base+0x19d8>
    70b8:	sub	w11, w1, #0x2
    70bc:	add	x6, x27, w6, sxtw
    70c0:	add	x11, x27, w11, sxtw
    70c4:	ldrb	w13, [x11, #3724]
    70c8:	strb	w13, [x6, #3724]
    70cc:	sub	w6, w1, #0x3
    70d0:	sub	w1, w1, #0x5
    70d4:	add	x6, x27, w6, sxtw
    70d8:	add	x1, x27, w1, sxtw
    70dc:	ldrb	w13, [x6, #3724]
    70e0:	strb	w13, [x11, #3724]
    70e4:	add	x11, x27, w0, sxtw
    70e8:	ldrb	w13, [x11, #3724]
    70ec:	strb	w13, [x6, #3724]
    70f0:	ldrb	w1, [x1, #3724]
    70f4:	strb	w1, [x11, #3724]
    70f8:	mov	w1, w0
    70fc:	b	6f50 <BZ2_decompress@@Base+0x18c0>
    7100:	sub	w1, w0, #0x1
    7104:	add	x0, x27, w0, uxtw
    7108:	add	x6, x27, w1, uxtw
    710c:	ldrb	w6, [x6, #3724]
    7110:	strb	w6, [x0, #3724]
    7114:	mov	w0, w1
    7118:	b	6f78 <BZ2_decompress@@Base+0x18e8>
    711c:	lsr	w2, w0, #4
    7120:	and	w0, w0, #0xf
    7124:	add	x11, x27, #0xe8b
    7128:	add	x12, x27, #0xe8c
    712c:	add	x6, x27, x2, lsl #2
    7130:	ldr	w1, [x6, #7820]
    7134:	add	w0, w0, w1
    7138:	add	x3, x27, w0, sxtw
    713c:	sxtw	x0, w0
    7140:	ldrb	w3, [x3, #3724]
    7144:	cmp	w1, w0
    7148:	b.lt	7200 <BZ2_decompress@@Base+0x1b70>  // b.tstop
    714c:	add	w1, w1, #0x1
    7150:	mov	x11, #0x1e88                	// #7816
    7154:	mov	x12, #0x1e8c                	// #7820
    7158:	add	x11, x27, x11
    715c:	str	w1, [x6, #7820]
    7160:	add	x6, x27, x12
    7164:	ldr	w0, [x6, x2, lsl #2]
    7168:	sub	w0, w0, #0x1
    716c:	str	w0, [x6, x2, lsl #2]
    7170:	ldr	w1, [x11, x2, lsl #2]
    7174:	add	x0, x27, w0, sxtw
    7178:	sub	x2, x2, #0x1
    717c:	add	w1, w1, #0xf
    7180:	add	x1, x27, w1, sxtw
    7184:	ldrb	w1, [x1, #3724]
    7188:	strb	w1, [x0, #3724]
    718c:	cbnz	w2, 7164 <BZ2_decompress@@Base+0x1ad4>
    7190:	ldr	w0, [x27, #7820]
    7194:	sub	w0, w0, #0x1
    7198:	str	w0, [x27, #7820]
    719c:	add	x1, x27, w0, sxtw
    71a0:	strb	w3, [x1, #3724]
    71a4:	cbnz	w0, 6f88 <BZ2_decompress@@Base+0x18f8>
    71a8:	mov	x9, #0x1ec8                	// #7880
    71ac:	mov	x10, #0x1e7d                	// #7805
    71b0:	add	x6, x27, x9
    71b4:	add	x11, x27, x10
    71b8:	mov	w2, #0xfff                 	// #4095
    71bc:	ldrsw	x0, [x6]
    71c0:	mov	x1, #0xe                   	// #14
    71c4:	add	x0, x0, #0xe8d
    71c8:	add	x0, x27, x0
    71cc:	ldrb	w12, [x0, x1]
    71d0:	strb	w12, [x11, x1]
    71d4:	sub	x1, x1, #0x1
    71d8:	cmn	x1, #0x2
    71dc:	b.ne	71cc <BZ2_decompress@@Base+0x1b3c>  // b.any
    71e0:	sub	w1, w2, #0xf
    71e4:	str	w1, [x6], #-4
    71e8:	sub	w0, w2, #0x10
    71ec:	sub	x11, x11, #0x10
    71f0:	cmp	w2, #0xf0f
    71f4:	b.eq	6f88 <BZ2_decompress@@Base+0x18f8>  // b.none
    71f8:	mov	w2, w0
    71fc:	b	71bc <BZ2_decompress@@Base+0x1b2c>
    7200:	ldrb	w13, [x11, x0]
    7204:	strb	w13, [x12, x0]
    7208:	sub	x0, x0, #0x1
    720c:	b	7144 <BZ2_decompress@@Base+0x1ab4>
    7210:	ldr	x1, [x27, #3152]
    7214:	str	w2, [x1, x0, lsl #2]
    7218:	b	6fb8 <BZ2_decompress@@Base+0x1928>
    721c:	ldr	x0, [x27]
    7220:	ldr	w2, [x0, #8]
    7224:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    7228:	ldr	x3, [x0]
    722c:	add	w1, w1, #0x8
    7230:	ldr	w6, [x27, #32]
    7234:	sub	w2, w2, #0x1
    7238:	ldrb	w11, [x3], #1
    723c:	orr	w6, w11, w6, lsl #8
    7240:	stp	w6, w1, [x27, #32]
    7244:	ldr	w1, [x0, #12]
    7248:	str	x3, [x0]
    724c:	add	w1, w1, #0x1
    7250:	stp	w2, w1, [x0, #8]
    7254:	cbnz	w1, 703c <BZ2_decompress@@Base+0x19ac>
    7258:	ldr	w1, [x0, #16]
    725c:	add	w1, w1, #0x1
    7260:	str	w1, [x0, #16]
    7264:	b	703c <BZ2_decompress@@Base+0x19ac>
    7268:	ldr	x0, [x27]
    726c:	ldr	w2, [x0, #8]
    7270:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    7274:	ldr	x3, [x0]
    7278:	add	w1, w1, #0x8
    727c:	ldr	w6, [x27, #32]
    7280:	sub	w2, w2, #0x1
    7284:	ldrb	w11, [x3], #1
    7288:	orr	w6, w11, w6, lsl #8
    728c:	stp	w6, w1, [x27, #32]
    7290:	ldr	w1, [x0, #12]
    7294:	str	x3, [x0]
    7298:	add	w1, w1, #0x1
    729c:	stp	w2, w1, [x0, #8]
    72a0:	cbnz	w1, 708c <BZ2_decompress@@Base+0x19fc>
    72a4:	ldr	w1, [x0, #16]
    72a8:	add	w1, w1, #0x1
    72ac:	str	w1, [x0, #16]
    72b0:	b	708c <BZ2_decompress@@Base+0x19fc>
    72b4:	ldr	x1, [sp, #120]
    72b8:	ldr	w0, [x1, x0]
    72bc:	sub	w0, w23, w0
    72c0:	cmp	w0, #0x101
    72c4:	b.hi	5ffc <BZ2_decompress@@Base+0x96c>  // b.pmore
    72c8:	ldr	x1, [sp, #128]
    72cc:	ldr	w0, [x1, w0, sxtw #2]
    72d0:	str	w0, [sp, #96]
    72d4:	ldr	w1, [sp, #96]
    72d8:	ldr	w0, [sp, #160]
    72dc:	cmp	w0, w1
    72e0:	b.eq	72fc <BZ2_decompress@@Base+0x1c6c>  // b.none
    72e4:	cmp	w1, #0x1
    72e8:	b.hi	6f18 <BZ2_decompress@@Base+0x1888>  // b.pmore
    72ec:	mov	w0, #0x1                   	// #1
    72f0:	mov	w20, #0xffffffff            	// #-1
    72f4:	str	w0, [sp, #112]
    72f8:	b	6c9c <BZ2_decompress@@Base+0x160c>
    72fc:	ldr	w0, [x27, #56]
    7300:	tbnz	w0, #31, 5ffc <BZ2_decompress@@Base+0x96c>
    7304:	cmp	w0, w28
    7308:	b.ge	5ffc <BZ2_decompress@@Base+0x96c>  // b.tcont
    730c:	add	x0, x27, #0x44
    7310:	mov	x1, #0x0                   	// #0
    7314:	ldr	w2, [x0, x1, lsl #2]
    7318:	mov	w4, w1
    731c:	tbnz	w2, #31, 5ffc <BZ2_decompress@@Base+0x96c>
    7320:	cmp	w2, w28
    7324:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    7328:	add	x1, x1, #0x1
    732c:	cmp	x1, #0x100
    7330:	b.ne	7314 <BZ2_decompress@@Base+0x1c84>  // b.any
    7334:	add	x1, x27, #0x444
    7338:	str	wzr, [x27, #1096]
    733c:	ldr	w2, [x0]
    7340:	add	x0, x0, #0x4
    7344:	str	w2, [x0, #1028]
    7348:	cmp	x1, x0
    734c:	b.ne	733c <BZ2_decompress@@Base+0x1cac>  // b.any
    7350:	add	x0, x27, #0x44c
    7354:	add	x3, x27, #0x84c
    7358:	ldp	w2, w1, [x0, #-4]
    735c:	add	w1, w1, w2
    7360:	str	w1, [x0], #4
    7364:	cmp	x3, x0
    7368:	b.ne	7358 <BZ2_decompress@@Base+0x1cc8>  // b.any
    736c:	add	x2, x27, #0x448
    7370:	mov	x0, #0x0                   	// #0
    7374:	ldr	w1, [x2, x0, lsl #2]
    7378:	mov	w4, w0
    737c:	tbnz	w1, #31, 5ffc <BZ2_decompress@@Base+0x96c>
    7380:	cmp	w1, w28
    7384:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    7388:	add	x0, x0, #0x1
    738c:	cmp	x0, #0x101
    7390:	b.ne	7374 <BZ2_decompress@@Base+0x1ce4>  // b.any
    7394:	mov	x6, x2
    7398:	mov	x0, x2
    739c:	mov	w4, #0x1                   	// #1
    73a0:	ldp	w11, w1, [x0]
    73a4:	cmp	w11, w1
    73a8:	b.gt	5ffc <BZ2_decompress@@Base+0x96c>
    73ac:	add	w4, w4, #0x1
    73b0:	add	x0, x0, #0x4
    73b4:	cmp	w4, #0x101
    73b8:	b.ne	73a0 <BZ2_decompress@@Base+0x1d10>  // b.any
    73bc:	mov	w0, #0xffffffff            	// #-1
    73c0:	str	w0, [x27, #3184]
    73c4:	mov	w0, #0x2                   	// #2
    73c8:	str	w0, [x27, #8]
    73cc:	ldr	w0, [x27, #52]
    73d0:	strb	wzr, [x27, #12]
    73d4:	str	wzr, [x27, #16]
    73d8:	cmp	w0, #0x1
    73dc:	b.le	7408 <BZ2_decompress@@Base+0x1d78>
    73e0:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    73e4:	stp	x3, x2, [sp, #168]
    73e8:	ldr	x0, [x0, #4016]
    73ec:	str	x6, [sp, #184]
    73f0:	ldr	x1, [x0]
    73f4:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    73f8:	add	x0, x0, #0x1e4
    73fc:	bl	14c0 <fputs@plt>
    7400:	ldp	x3, x2, [sp, #168]
    7404:	ldr	x6, [sp, #184]
    7408:	ldrb	w0, [x27, #44]
    740c:	cbz	w0, 765c <BZ2_decompress@@Base+0x1fcc>
    7410:	ldr	w0, [x6]
    7414:	add	x6, x6, #0x4
    7418:	str	w0, [x6, #1024]
    741c:	cmp	x3, x6
    7420:	b.ne	7410 <BZ2_decompress@@Base+0x1d80>  // b.any
    7424:	mov	x1, #0x0                   	// #0
    7428:	ldr	x6, [x27, #3160]
    742c:	lsl	x3, x1, #1
    7430:	ldr	x8, [x27, #3168]
    7434:	ldrb	w4, [x6, x3]
    7438:	add	x4, x27, x4, lsl #2
    743c:	ldr	w0, [x4, #2124]
    7440:	strh	w0, [x6, x3]
    7444:	asr	w3, w1, #1
    7448:	sxtw	x3, w3
    744c:	asr	w0, w0, #16
    7450:	ldrb	w6, [x8, x3]
    7454:	tbnz	w1, #0, 7560 <BZ2_decompress@@Base+0x1ed0>
    7458:	and	w6, w6, #0xfffffff0
    745c:	orr	w0, w6, w0
    7460:	strb	w0, [x8, x3]
    7464:	add	x1, x1, #0x1
    7468:	cmp	w28, w1
    746c:	ldr	w0, [x4, #2124]
    7470:	add	w0, w0, #0x1
    7474:	str	w0, [x4, #2124]
    7478:	b.gt	7428 <BZ2_decompress@@Base+0x1d98>
    747c:	ldr	w0, [x27, #56]
    7480:	ldr	x1, [x27, #3168]
    7484:	asr	w3, w0, #1
    7488:	ldrb	w8, [x1, w3, sxtw]
    748c:	ubfiz	w1, w0, #2, #1
    7490:	lsr	w8, w8, w1
    7494:	ldr	x1, [x27, #3160]
    7498:	ubfiz	w8, w8, #16, #4
    749c:	ldrh	w1, [x1, w0, sxtw #1]
    74a0:	orr	w22, w8, w1
    74a4:	ldr	x6, [x27, #3168]
    74a8:	asr	w3, w22, #1
    74ac:	ldr	x1, [x27, #3160]
    74b0:	mov	w4, w22
    74b4:	ldrb	w8, [x6, w3, sxtw]
    74b8:	sbfiz	x12, x22, #1, #32
    74bc:	sxtw	x11, w3
    74c0:	ubfiz	w3, w22, #2, #1
    74c4:	tst	x4, #0x1
    74c8:	lsr	w8, w8, w3
    74cc:	ldrh	w3, [x1, w4, sxtw #1]
    74d0:	strh	w0, [x1, x12]
    74d4:	ubfiz	w8, w8, #16, #4
    74d8:	orr	w22, w8, w3
    74dc:	asr	w1, w0, #16
    74e0:	ldrb	w12, [x6, x11]
    74e4:	and	w3, w12, #0xfffffff0
    74e8:	orr	w0, w3, w0, asr #16
    74ec:	and	w3, w0, #0xff
    74f0:	and	w0, w12, #0xf
    74f4:	orr	w0, w0, w1, lsl #4
    74f8:	and	w0, w0, #0xff
    74fc:	csel	w0, w0, w3, ne  // ne = any
    7500:	strb	w0, [x6, x11]
    7504:	mov	w0, w4
    7508:	ldr	w1, [x27, #56]
    750c:	cmp	w1, w4
    7510:	b.ne	74a4 <BZ2_decompress@@Base+0x1e14>  // b.any
    7514:	ldr	w1, [x27, #40]
    7518:	mov	w3, #0x86a0                	// #34464
    751c:	movk	w3, #0x1, lsl #16
    7520:	str	w4, [x27, #60]
    7524:	str	wzr, [x27, #1092]
    7528:	mul	w1, w1, w3
    752c:	ldrb	w3, [x27, #20]
    7530:	cbz	w3, 7600 <BZ2_decompress@@Base+0x1f70>
    7534:	str	xzr, [x27, #24]
    7538:	cmp	w4, w1
    753c:	b.cc	756c <BZ2_decompress@@Base+0x1edc>  // b.lo, b.ul, b.last
    7540:	mov	w0, #0x1                   	// #1
    7544:	ldp	x19, x20, [sp, #16]
    7548:	ldp	x21, x22, [sp, #32]
    754c:	ldp	x23, x24, [sp, #48]
    7550:	ldp	x25, x26, [sp, #64]
    7554:	ldp	x27, x28, [sp, #80]
    7558:	ldp	x29, x30, [sp], #208
    755c:	ret
    7560:	and	w6, w6, #0xf
    7564:	orr	w0, w6, w0, lsl #4
    7568:	b	7460 <BZ2_decompress@@Base+0x1dd0>
    756c:	mov	x1, x2
    7570:	str	w4, [sp, #168]
    7574:	bl	16b0 <BZ2_indexIntoF@plt>
    7578:	str	w0, [x27, #64]
    757c:	ldr	w2, [x27, #60]
    7580:	ldr	x3, [x27, #3168]
    7584:	lsr	w1, w2, #1
    7588:	ldr	w4, [sp, #168]
    758c:	ldrb	w1, [x3, x1]
    7590:	ubfiz	w3, w2, #2, #1
    7594:	lsr	w1, w1, w3
    7598:	ldr	x3, [x27, #3160]
    759c:	ubfiz	w1, w1, #16, #4
    75a0:	ldrh	w2, [x3, w2, uxtw #1]
    75a4:	orr	w1, w1, w2
    75a8:	str	w1, [x27, #60]
    75ac:	ldr	w1, [x27, #1092]
    75b0:	add	w1, w1, #0x1
    75b4:	str	w1, [x27, #1092]
    75b8:	ldr	w1, [x27, #24]
    75bc:	cbnz	w1, 75dc <BZ2_decompress@@Base+0x1f4c>
    75c0:	adrp	x2, 1b000 <BZ2_bzerror@@Base+0x11140>
    75c4:	ldr	w1, [x27, #28]
    75c8:	ldr	x2, [x2, #4048]
    75cc:	cmp	w1, #0x1ff
    75d0:	ldr	w2, [x2, w1, sxtw #2]
    75d4:	csinc	w1, wzr, w1, eq  // eq = none
    75d8:	stp	w2, w1, [x27, #24]
    75dc:	ldr	w1, [x27, #24]
    75e0:	sub	w1, w1, #0x1
    75e4:	str	w1, [x27, #24]
    75e8:	cmp	w1, #0x1
    75ec:	cset	w1, eq  // eq = none
    75f0:	eor	w0, w1, w0
    75f4:	str	w0, [x27, #64]
    75f8:	mov	w0, #0x0                   	// #0
    75fc:	b	5c24 <BZ2_decompress@@Base+0x594>
    7600:	cmp	w4, w1
    7604:	b.cs	7540 <BZ2_decompress@@Base+0x1eb0>  // b.hs, b.nlast
    7608:	mov	x1, x2
    760c:	str	w4, [sp, #168]
    7610:	bl	16b0 <BZ2_indexIntoF@plt>
    7614:	str	w0, [x27, #64]
    7618:	ldr	w1, [x27, #60]
    761c:	ldr	x2, [x27, #3168]
    7620:	lsr	w0, w1, #1
    7624:	ldrb	w0, [x2, x0]
    7628:	ubfiz	w2, w1, #2, #1
    762c:	lsr	w0, w0, w2
    7630:	ldr	x2, [x27, #3160]
    7634:	ubfiz	w0, w0, #16, #4
    7638:	ldrh	w1, [x2, w1, uxtw #1]
    763c:	orr	w0, w0, w1
    7640:	str	w0, [x27, #60]
    7644:	ldr	w0, [x27, #1092]
    7648:	add	w0, w0, #0x1
    764c:	str	w0, [x27, #1092]
    7650:	ldr	w4, [sp, #168]
    7654:	mov	w0, #0x0                   	// #0
    7658:	b	5c24 <BZ2_decompress@@Base+0x594>
    765c:	ldr	x1, [x27, #3152]
    7660:	mov	x0, #0x0                   	// #0
    7664:	ldr	w2, [x1, x0, lsl #2]
    7668:	add	x2, x27, w2, uxtb #2
    766c:	ldrsw	x3, [x2, #1096]
    7670:	lsl	x3, x3, #2
    7674:	ldr	w4, [x1, x3]
    7678:	orr	w4, w4, w0, lsl #8
    767c:	str	w4, [x1, x3]
    7680:	add	x0, x0, #0x1
    7684:	ldr	w3, [x2, #1096]
    7688:	cmp	w28, w0
    768c:	add	w3, w3, #0x1
    7690:	str	w3, [x2, #1096]
    7694:	b.gt	7664 <BZ2_decompress@@Base+0x1fd4>
    7698:	ldrsw	x0, [x27, #56]
    769c:	mov	w3, #0x86a0                	// #34464
    76a0:	ldr	w2, [x27, #40]
    76a4:	movk	w3, #0x1, lsl #16
    76a8:	ldr	w0, [x1, x0, lsl #2]
    76ac:	mul	w2, w2, w3
    76b0:	ldrb	w3, [x27, #20]
    76b4:	str	wzr, [x27, #1092]
    76b8:	lsr	w0, w0, #8
    76bc:	str	w0, [x27, #60]
    76c0:	cbz	w3, 7718 <BZ2_decompress@@Base+0x2088>
    76c4:	str	xzr, [x27, #24]
    76c8:	cmp	w0, w2
    76cc:	b.cs	7540 <BZ2_decompress@@Base+0x1eb0>  // b.hs, b.nlast
    76d0:	ubfiz	x0, x0, #2, #24
    76d4:	mov	w2, #0x1                   	// #1
    76d8:	ldr	w0, [x1, x0]
    76dc:	str	w2, [x27, #1092]
    76e0:	lsr	w1, w0, #8
    76e4:	str	w1, [x27, #60]
    76e8:	adrp	x1, 1b000 <BZ2_bzerror@@Base+0x11140>
    76ec:	and	w0, w0, #0xff
    76f0:	ldr	x1, [x1, #4048]
    76f4:	ldr	w1, [x1]
    76f8:	sub	w1, w1, #0x1
    76fc:	stp	w1, w2, [x27, #24]
    7700:	cmp	w1, w2
    7704:	cset	w1, eq  // eq = none
    7708:	eor	w0, w0, w1
    770c:	str	w0, [x27, #64]
    7710:	mov	w4, w28
    7714:	b	75f8 <BZ2_decompress@@Base+0x1f68>
    7718:	cmp	w0, w2
    771c:	b.cs	7540 <BZ2_decompress@@Base+0x1eb0>  // b.hs, b.nlast
    7720:	ubfiz	x0, x0, #2, #24
    7724:	ldr	w0, [x1, x0]
    7728:	and	w1, w0, #0xff
    772c:	lsr	w0, w0, #8
    7730:	stp	w0, w1, [x27, #60]
    7734:	mov	w0, #0x1                   	// #1
    7738:	str	w0, [x27, #1092]
    773c:	b	7710 <BZ2_decompress@@Base+0x2080>
    7740:	ldr	x0, [x27]
    7744:	ldr	w2, [x0, #8]
    7748:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    774c:	ldr	x3, [x0]
    7750:	add	w1, w1, #0x8
    7754:	ldr	w6, [x27, #32]
    7758:	sub	w2, w2, #0x1
    775c:	ldrb	w11, [x3], #1
    7760:	orr	w6, w11, w6, lsl #8
    7764:	stp	w6, w1, [x27, #32]
    7768:	ldr	w1, [x0, #12]
    776c:	str	x3, [x0]
    7770:	add	w1, w1, #0x1
    7774:	stp	w2, w1, [x0, #8]
    7778:	cbnz	w1, 5a5c <BZ2_decompress@@Base+0x3cc>
    777c:	ldr	w1, [x0, #16]
    7780:	add	w1, w1, #0x1
    7784:	str	w1, [x0, #16]
    7788:	b	5a5c <BZ2_decompress@@Base+0x3cc>
    778c:	ldr	x0, [x27]
    7790:	ldr	w2, [x0, #8]
    7794:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    7798:	ldr	x3, [x0]
    779c:	add	w1, w1, #0x8
    77a0:	ldr	w6, [x27, #32]
    77a4:	sub	w2, w2, #0x1
    77a8:	ldrb	w11, [x3], #1
    77ac:	orr	w6, w11, w6, lsl #8
    77b0:	stp	w6, w1, [x27, #32]
    77b4:	ldr	w1, [x0, #12]
    77b8:	str	x3, [x0]
    77bc:	add	w1, w1, #0x1
    77c0:	stp	w2, w1, [x0, #8]
    77c4:	cbnz	w1, 5a8c <BZ2_decompress@@Base+0x3fc>
    77c8:	ldr	w1, [x0, #16]
    77cc:	add	w1, w1, #0x1
    77d0:	str	w1, [x0, #16]
    77d4:	b	5a8c <BZ2_decompress@@Base+0x3fc>
    77d8:	ldr	x0, [x27]
    77dc:	ldr	w2, [x0, #8]
    77e0:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    77e4:	ldr	x3, [x0]
    77e8:	add	w1, w1, #0x8
    77ec:	ldr	w6, [x27, #32]
    77f0:	sub	w2, w2, #0x1
    77f4:	ldrb	w11, [x3], #1
    77f8:	orr	w6, w11, w6, lsl #8
    77fc:	stp	w6, w1, [x27, #32]
    7800:	ldr	w1, [x0, #12]
    7804:	str	x3, [x0]
    7808:	add	w1, w1, #0x1
    780c:	stp	w2, w1, [x0, #8]
    7810:	cbnz	w1, 5abc <BZ2_decompress@@Base+0x42c>
    7814:	ldr	w1, [x0, #16]
    7818:	add	w1, w1, #0x1
    781c:	str	w1, [x0, #16]
    7820:	b	5abc <BZ2_decompress@@Base+0x42c>
    7824:	ldr	x0, [x27]
    7828:	ldr	w2, [x0, #8]
    782c:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    7830:	ldr	x3, [x0]
    7834:	add	w1, w1, #0x8
    7838:	ldr	w6, [x27, #32]
    783c:	sub	w2, w2, #0x1
    7840:	ldrb	w11, [x3], #1
    7844:	orr	w6, w11, w6, lsl #8
    7848:	stp	w6, w1, [x27, #32]
    784c:	ldr	w1, [x0, #12]
    7850:	str	x3, [x0]
    7854:	add	w1, w1, #0x1
    7858:	stp	w2, w1, [x0, #8]
    785c:	cbnz	w1, 5aec <BZ2_decompress@@Base+0x45c>
    7860:	ldr	w1, [x0, #16]
    7864:	add	w1, w1, #0x1
    7868:	str	w1, [x0, #16]
    786c:	b	5aec <BZ2_decompress@@Base+0x45c>
    7870:	ldr	x0, [x27]
    7874:	ldr	w2, [x0, #8]
    7878:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    787c:	ldr	x3, [x0]
    7880:	add	w1, w1, #0x8
    7884:	ldr	w6, [x27, #32]
    7888:	sub	w2, w2, #0x1
    788c:	ldrb	w11, [x3], #1
    7890:	orr	w6, w11, w6, lsl #8
    7894:	stp	w6, w1, [x27, #32]
    7898:	ldr	w1, [x0, #12]
    789c:	str	x3, [x0]
    78a0:	add	w1, w1, #0x1
    78a4:	stp	w2, w1, [x0, #8]
    78a8:	cbnz	w1, 5b1c <BZ2_decompress@@Base+0x48c>
    78ac:	ldr	w1, [x0, #16]
    78b0:	add	w1, w1, #0x1
    78b4:	str	w1, [x0, #16]
    78b8:	b	5b1c <BZ2_decompress@@Base+0x48c>
    78bc:	ldr	x0, [x27]
    78c0:	ldr	w2, [x0, #8]
    78c4:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    78c8:	ldr	x3, [x0]
    78cc:	add	w1, w1, #0x8
    78d0:	ldr	w6, [x27, #32]
    78d4:	sub	w2, w2, #0x1
    78d8:	ldrb	w11, [x3], #1
    78dc:	orr	w6, w11, w6, lsl #8
    78e0:	stp	w6, w1, [x27, #32]
    78e4:	ldr	w1, [x0, #12]
    78e8:	str	x3, [x0]
    78ec:	add	w1, w1, #0x1
    78f0:	stp	w2, w1, [x0, #8]
    78f4:	cbnz	w1, 5b50 <BZ2_decompress@@Base+0x4c0>
    78f8:	ldr	w1, [x0, #16]
    78fc:	add	w1, w1, #0x1
    7900:	str	w1, [x0, #16]
    7904:	b	5b50 <BZ2_decompress@@Base+0x4c0>
    7908:	ldr	x0, [x27]
    790c:	ldr	w2, [x0, #8]
    7910:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    7914:	ldr	x3, [x0]
    7918:	add	w1, w1, #0x8
    791c:	ldr	w6, [x27, #32]
    7920:	sub	w2, w2, #0x1
    7924:	ldrb	w11, [x3], #1
    7928:	orr	w6, w11, w6, lsl #8
    792c:	stp	w6, w1, [x27, #32]
    7930:	ldr	w1, [x0, #12]
    7934:	str	x3, [x0]
    7938:	add	w1, w1, #0x1
    793c:	stp	w2, w1, [x0, #8]
    7940:	cbnz	w1, 5b84 <BZ2_decompress@@Base+0x4f4>
    7944:	ldr	w1, [x0, #16]
    7948:	add	w1, w1, #0x1
    794c:	str	w1, [x0, #16]
    7950:	b	5b84 <BZ2_decompress@@Base+0x4f4>
    7954:	ldr	x0, [x27]
    7958:	ldr	w2, [x0, #8]
    795c:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    7960:	ldr	x3, [x0]
    7964:	add	w1, w1, #0x8
    7968:	ldr	w6, [x27, #32]
    796c:	sub	w2, w2, #0x1
    7970:	ldrb	w11, [x3], #1
    7974:	orr	w6, w11, w6, lsl #8
    7978:	stp	w6, w1, [x27, #32]
    797c:	ldr	w1, [x0, #12]
    7980:	str	x3, [x0]
    7984:	add	w1, w1, #0x1
    7988:	stp	w2, w1, [x0, #8]
    798c:	cbnz	w1, 5bb8 <BZ2_decompress@@Base+0x528>
    7990:	ldr	w1, [x0, #16]
    7994:	add	w1, w1, #0x1
    7998:	str	w1, [x0, #16]
    799c:	b	5bb8 <BZ2_decompress@@Base+0x528>
    79a0:	ldr	x0, [x27]
    79a4:	ldr	w2, [x0, #8]
    79a8:	cbz	w2, 75f8 <BZ2_decompress@@Base+0x1f68>
    79ac:	ldr	x3, [x0]
    79b0:	add	w1, w1, #0x8
    79b4:	ldr	w6, [x27, #32]
    79b8:	sub	w2, w2, #0x1
    79bc:	ldrb	w11, [x3], #1
    79c0:	orr	w6, w11, w6, lsl #8
    79c4:	stp	w6, w1, [x27, #32]
    79c8:	ldr	w1, [x0, #12]
    79cc:	str	x3, [x0]
    79d0:	add	w1, w1, #0x1
    79d4:	stp	w2, w1, [x0, #8]
    79d8:	cbnz	w1, 5bec <BZ2_decompress@@Base+0x55c>
    79dc:	ldr	w1, [x0, #16]
    79e0:	add	w1, w1, #0x1
    79e4:	str	w1, [x0, #16]
    79e8:	b	5bec <BZ2_decompress@@Base+0x55c>
    79ec:	mov	w0, #0xfa1                 	// #4001
    79f0:	str	w4, [sp, #168]
    79f4:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    79f8:	mov	w0, #0xfa2                 	// #4002
    79fc:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    7a00:	b	7650 <BZ2_decompress@@Base+0x1fc0>
    7a04:	mov	w0, #0xfffffffd            	// #-3
    7a08:	b	5c24 <BZ2_decompress@@Base+0x594>
    7a0c:	mov	w19, #0x0                   	// #0
    7a10:	b	5ffc <BZ2_decompress@@Base+0x96c>
    7a14:	mov	w28, #0x0                   	// #0
    7a18:	mov	w25, #0x0                   	// #0
    7a1c:	mov	w26, #0x0                   	// #0
    7a20:	mov	w4, #0x100                 	// #256
    7a24:	b	5ffc <BZ2_decompress@@Base+0x96c>
    7a28:	str	w2, [sp, #112]
    7a2c:	b	5ffc <BZ2_decompress@@Base+0x96c>
    7a30:	ldp	w3, w2, [x0, #92]
    7a34:	adrp	x6, 1b000 <BZ2_bzerror@@Base+0x11140>
    7a38:	mov	w5, #0x0                   	// #0
    7a3c:	ldr	x6, [x6, #4024]
    7a40:	and	w1, w3, #0xff
    7a44:	and	w8, w3, #0xff
    7a48:	cmp	w2, w5
    7a4c:	b.gt	7a90 <BZ2_decompress@@Base+0x2400>
    7a50:	add	x3, x0, w3, uxtw
    7a54:	mov	w5, #0x1                   	// #1
    7a58:	cmp	w2, #0x2
    7a5c:	strb	w5, [x3, #128]
    7a60:	ldrsw	x3, [x0, #108]
    7a64:	ldr	x4, [x0, #64]
    7a68:	b.eq	7aac <BZ2_decompress@@Base+0x241c>  // b.none
    7a6c:	cmp	w2, #0x3
    7a70:	b.eq	7ac8 <BZ2_decompress@@Base+0x2438>  // b.none
    7a74:	cmp	w2, #0x1
    7a78:	b.ne	7ae4 <BZ2_decompress@@Base+0x2454>  // b.any
    7a7c:	strb	w1, [x4, x3]
    7a80:	ldr	w1, [x0, #108]
    7a84:	add	w1, w1, #0x1
    7a88:	str	w1, [x0, #108]
    7a8c:	ret
    7a90:	ldr	w4, [x0, #648]
    7a94:	add	w5, w5, #0x1
    7a98:	eor	w7, w8, w4, lsr #24
    7a9c:	ldr	w7, [x6, x7, lsl #2]
    7aa0:	eor	w4, w7, w4, lsl #8
    7aa4:	str	w4, [x0, #648]
    7aa8:	b	7a48 <BZ2_decompress@@Base+0x23b8>
    7aac:	strb	w1, [x4, x3]
    7ab0:	ldr	w2, [x0, #108]
    7ab4:	ldr	x3, [x0, #64]
    7ab8:	add	w2, w2, #0x1
    7abc:	str	w2, [x0, #108]
    7ac0:	strb	w1, [x3, w2, sxtw]
    7ac4:	b	7a80 <BZ2_decompress@@Base+0x23f0>
    7ac8:	strb	w1, [x4, x3]
    7acc:	ldr	w2, [x0, #108]
    7ad0:	ldr	x3, [x0, #64]
    7ad4:	add	w2, w2, #0x1
    7ad8:	str	w2, [x0, #108]
    7adc:	strb	w1, [x3, w2, sxtw]
    7ae0:	b	7ab0 <BZ2_decompress@@Base+0x2420>
    7ae4:	sub	w2, w2, #0x4
    7ae8:	add	x2, x0, w2, sxtw
    7aec:	strb	w5, [x2, #128]
    7af0:	strb	w1, [x4, x3]
    7af4:	ldr	w2, [x0, #108]
    7af8:	ldr	x3, [x0, #64]
    7afc:	add	w2, w2, #0x1
    7b00:	str	w2, [x0, #108]
    7b04:	strb	w1, [x3, w2, sxtw]
    7b08:	ldr	w2, [x0, #108]
    7b0c:	ldr	x3, [x0, #64]
    7b10:	add	w2, w2, #0x1
    7b14:	str	w2, [x0, #108]
    7b18:	strb	w1, [x3, w2, sxtw]
    7b1c:	ldr	w2, [x0, #108]
    7b20:	ldr	x3, [x0, #64]
    7b24:	add	w2, w2, #0x1
    7b28:	str	w2, [x0, #108]
    7b2c:	strb	w1, [x3, w2, sxtw]
    7b30:	ldr	w1, [x0, #108]
    7b34:	ldr	x3, [x0, #64]
    7b38:	add	w1, w1, #0x1
    7b3c:	ldr	w2, [x0, #96]
    7b40:	str	w1, [x0, #108]
    7b44:	sub	w2, w2, #0x4
    7b48:	strb	w2, [x3, w1, sxtw]
    7b4c:	b	7a80 <BZ2_decompress@@Base+0x23f0>
    7b50:	mov	x0, x1
    7b54:	cbz	x1, 7b5c <BZ2_decompress@@Base+0x24cc>
    7b58:	b	1660 <free@plt>
    7b5c:	ret
    7b60:	mul	w0, w1, w2
    7b64:	sxtw	x0, w0
    7b68:	b	1520 <malloc@plt>
    7b6c:	stp	x29, x30, [sp, #-64]!
    7b70:	mov	x29, sp
    7b74:	stp	x21, x22, [sp, #32]
    7b78:	adrp	x22, 1b000 <BZ2_bzerror@@Base+0x11140>
    7b7c:	mov	w21, #0x0                   	// #0
    7b80:	str	x23, [sp, #48]
    7b84:	ldr	x23, [x22, #4024]
    7b88:	stp	x19, x20, [sp, #16]
    7b8c:	mov	x19, x0
    7b90:	mov	w20, #0x0                   	// #0
    7b94:	ldr	w0, [x19, #12]
    7b98:	cmp	w0, #0x1
    7b9c:	b.ne	7cb0 <BZ2_decompress@@Base+0x2620>  // b.any
    7ba0:	mov	w2, #0x0                   	// #0
    7ba4:	ldr	x3, [x19]
    7ba8:	ldp	w1, w0, [x19, #116]
    7bac:	ldr	w4, [x3, #32]
    7bb0:	cbz	w4, 7c18 <BZ2_decompress@@Base+0x2588>
    7bb4:	cmp	w0, w1
    7bb8:	b.ge	7c18 <BZ2_decompress@@Base+0x2588>  // b.tcont
    7bbc:	ldr	x2, [x19, #80]
    7bc0:	ldr	x1, [x3, #24]
    7bc4:	ldrb	w0, [x2, w0, sxtw]
    7bc8:	mov	w2, #0x1                   	// #1
    7bcc:	strb	w0, [x1]
    7bd0:	ldr	w0, [x19, #120]
    7bd4:	add	w0, w0, #0x1
    7bd8:	str	w0, [x19, #120]
    7bdc:	ldr	x0, [x19]
    7be0:	ldr	w1, [x0, #32]
    7be4:	sub	w1, w1, #0x1
    7be8:	str	w1, [x0, #32]
    7bec:	ldr	x1, [x0, #24]
    7bf0:	add	x1, x1, #0x1
    7bf4:	str	x1, [x0, #24]
    7bf8:	ldr	w1, [x0, #36]
    7bfc:	add	w1, w1, #0x1
    7c00:	str	w1, [x0, #36]
    7c04:	cbnz	w1, 7ba4 <BZ2_decompress@@Base+0x2514>
    7c08:	ldr	w1, [x0, #40]
    7c0c:	add	w1, w1, w2
    7c10:	str	w1, [x0, #40]
    7c14:	b	7ba4 <BZ2_decompress@@Base+0x2514>
    7c18:	orr	w21, w21, w2
    7c1c:	cmp	w0, w1
    7c20:	b.lt	7f20 <BZ2_decompress@@Base+0x2890>  // b.tstop
    7c24:	ldr	w1, [x19, #8]
    7c28:	cmp	w1, #0x4
    7c2c:	b.ne	7c50 <BZ2_decompress@@Base+0x25c0>  // b.any
    7c30:	ldr	w0, [x19, #16]
    7c34:	cbnz	w0, 7c50 <BZ2_decompress@@Base+0x25c0>
    7c38:	ldr	w0, [x19, #92]
    7c3c:	cmp	w0, #0xff
    7c40:	b.hi	7f20 <BZ2_decompress@@Base+0x2890>  // b.pmore
    7c44:	ldr	w0, [x19, #96]
    7c48:	cmp	w0, #0x0
    7c4c:	b.le	7f20 <BZ2_decompress@@Base+0x2890>
    7c50:	mov	w0, #0xffffffff            	// #-1
    7c54:	add	x2, x19, #0x180
    7c58:	str	w0, [x19, #648]
    7c5c:	add	x0, x19, #0x80
    7c60:	str	wzr, [x19, #108]
    7c64:	stur	xzr, [x19, #116]
    7c68:	strb	wzr, [x0], #1
    7c6c:	cmp	x2, x0
    7c70:	b.ne	7c68 <BZ2_decompress@@Base+0x25d8>  // b.any
    7c74:	ldr	w0, [x19, #660]
    7c78:	cmp	w1, #0x3
    7c7c:	add	w0, w0, #0x1
    7c80:	str	w0, [x19, #660]
    7c84:	mov	w0, #0x2                   	// #2
    7c88:	str	w0, [x19, #12]
    7c8c:	b.ne	7cb0 <BZ2_decompress@@Base+0x2620>  // b.any
    7c90:	ldr	w0, [x19, #16]
    7c94:	cbnz	w0, 7cb0 <BZ2_decompress@@Base+0x2620>
    7c98:	ldr	w0, [x19, #92]
    7c9c:	cmp	w0, #0xff
    7ca0:	b.hi	7f20 <BZ2_decompress@@Base+0x2890>  // b.pmore
    7ca4:	ldr	w0, [x19, #96]
    7ca8:	cmp	w0, #0x0
    7cac:	b.le	7f20 <BZ2_decompress@@Base+0x2890>
    7cb0:	ldr	w0, [x19, #12]
    7cb4:	cmp	w0, #0x2
    7cb8:	b.ne	7b94 <BZ2_decompress@@Base+0x2504>  // b.any
    7cbc:	ldr	w0, [x19, #8]
    7cc0:	mov	w1, #0x0                   	// #0
    7cc4:	cmp	w0, #0x2
    7cc8:	b.ne	7db0 <BZ2_decompress@@Base+0x2720>  // b.any
    7ccc:	mov	w10, #0x1                   	// #1
    7cd0:	ldp	w4, w0, [x19, #108]
    7cd4:	cmp	w4, w0
    7cd8:	b.ge	7eac <BZ2_decompress@@Base+0x281c>  // b.tcont
    7cdc:	ldr	x0, [x19]
    7ce0:	ldr	w2, [x0, #8]
    7ce4:	cbz	w2, 7eac <BZ2_decompress@@Base+0x281c>
    7ce8:	ldr	x0, [x0]
    7cec:	ldr	w1, [x19, #92]
    7cf0:	ldrb	w9, [x0]
    7cf4:	ldr	w0, [x19, #96]
    7cf8:	cmp	w9, w1
    7cfc:	b.eq	7d80 <BZ2_decompress@@Base+0x26f0>  // b.none
    7d00:	cmp	w0, #0x1
    7d04:	b.ne	7d94 <BZ2_decompress@@Base+0x2704>  // b.any
    7d08:	ldr	w3, [x19, #648]
    7d0c:	and	w2, w1, #0xff
    7d10:	eor	w2, w2, w3, lsr #24
    7d14:	ldr	w2, [x23, x2, lsl #2]
    7d18:	eor	w3, w2, w3, lsl #8
    7d1c:	add	x2, x19, w1, uxtw
    7d20:	str	w3, [x19, #648]
    7d24:	strb	w0, [x2, #128]
    7d28:	ldr	x0, [x19, #64]
    7d2c:	strb	w1, [x0, w4, sxtw]
    7d30:	str	w9, [x19, #92]
    7d34:	ldr	w0, [x19, #108]
    7d38:	add	w0, w0, #0x1
    7d3c:	str	w0, [x19, #108]
    7d40:	ldr	x0, [x19]
    7d44:	ldr	x1, [x0]
    7d48:	ldr	w2, [x0, #12]
    7d4c:	add	x1, x1, #0x1
    7d50:	str	x1, [x0]
    7d54:	ldr	w1, [x0, #8]
    7d58:	add	w2, w2, #0x1
    7d5c:	str	w2, [x0, #12]
    7d60:	sub	w1, w1, #0x1
    7d64:	str	w1, [x0, #8]
    7d68:	mov	w1, #0x1                   	// #1
    7d6c:	cbnz	w2, 7cd0 <BZ2_decompress@@Base+0x2640>
    7d70:	ldr	w2, [x0, #16]
    7d74:	add	w2, w2, w1
    7d78:	str	w2, [x0, #16]
    7d7c:	b	7cd0 <BZ2_decompress@@Base+0x2640>
    7d80:	cmp	w0, #0xff
    7d84:	b.ne	7da4 <BZ2_decompress@@Base+0x2714>  // b.any
    7d88:	mov	x0, x19
    7d8c:	bl	7a30 <BZ2_decompress@@Base+0x23a0>
    7d90:	b	7d9c <BZ2_decompress@@Base+0x270c>
    7d94:	cmp	w1, #0xff
    7d98:	b.ls	7d88 <BZ2_decompress@@Base+0x26f8>  // b.plast
    7d9c:	stp	w9, w10, [x19, #92]
    7da0:	b	7d40 <BZ2_decompress@@Base+0x26b0>
    7da4:	add	w0, w0, #0x1
    7da8:	str	w0, [x19, #96]
    7dac:	b	7d40 <BZ2_decompress@@Base+0x26b0>
    7db0:	ldr	x10, [x22, #4024]
    7db4:	mov	w9, #0x1                   	// #1
    7db8:	ldp	w4, w0, [x19, #108]
    7dbc:	cmp	w4, w0
    7dc0:	b.ge	7eac <BZ2_decompress@@Base+0x281c>  // b.tcont
    7dc4:	ldr	x0, [x19]
    7dc8:	ldr	w2, [x0, #8]
    7dcc:	cbz	w2, 7eac <BZ2_decompress@@Base+0x281c>
    7dd0:	ldr	w2, [x19, #16]
    7dd4:	cbz	w2, 7eac <BZ2_decompress@@Base+0x281c>
    7dd8:	ldr	x0, [x0]
    7ddc:	ldr	w1, [x19, #92]
    7de0:	ldrb	w11, [x0]
    7de4:	ldr	w0, [x19, #96]
    7de8:	cmp	w11, w1
    7dec:	b.eq	7e7c <BZ2_decompress@@Base+0x27ec>  // b.none
    7df0:	cmp	w0, #0x1
    7df4:	b.ne	7e90 <BZ2_decompress@@Base+0x2800>  // b.any
    7df8:	ldr	w3, [x19, #648]
    7dfc:	and	w2, w1, #0xff
    7e00:	eor	w2, w2, w3, lsr #24
    7e04:	ldr	w2, [x10, x2, lsl #2]
    7e08:	eor	w3, w2, w3, lsl #8
    7e0c:	add	x2, x19, w1, uxtw
    7e10:	str	w3, [x19, #648]
    7e14:	strb	w0, [x2, #128]
    7e18:	ldr	x0, [x19, #64]
    7e1c:	strb	w1, [x0, w4, sxtw]
    7e20:	str	w11, [x19, #92]
    7e24:	ldr	w0, [x19, #108]
    7e28:	add	w0, w0, #0x1
    7e2c:	str	w0, [x19, #108]
    7e30:	ldr	x0, [x19]
    7e34:	ldr	x1, [x0]
    7e38:	add	x1, x1, #0x1
    7e3c:	str	x1, [x0]
    7e40:	ldr	w1, [x0, #8]
    7e44:	sub	w1, w1, #0x1
    7e48:	str	w1, [x0, #8]
    7e4c:	ldr	w1, [x0, #12]
    7e50:	add	w1, w1, #0x1
    7e54:	str	w1, [x0, #12]
    7e58:	cbnz	w1, 7e68 <BZ2_decompress@@Base+0x27d8>
    7e5c:	ldr	w1, [x0, #16]
    7e60:	add	w1, w1, #0x1
    7e64:	str	w1, [x0, #16]
    7e68:	ldr	w0, [x19, #16]
    7e6c:	mov	w1, #0x1                   	// #1
    7e70:	sub	w0, w0, #0x1
    7e74:	str	w0, [x19, #16]
    7e78:	b	7db8 <BZ2_decompress@@Base+0x2728>
    7e7c:	cmp	w0, #0xff
    7e80:	b.ne	7ea0 <BZ2_decompress@@Base+0x2810>  // b.any
    7e84:	mov	x0, x19
    7e88:	bl	7a30 <BZ2_decompress@@Base+0x23a0>
    7e8c:	b	7e98 <BZ2_decompress@@Base+0x2808>
    7e90:	cmp	w1, #0xff
    7e94:	b.ls	7e84 <BZ2_decompress@@Base+0x27f4>  // b.plast
    7e98:	stp	w11, w9, [x19, #92]
    7e9c:	b	7e30 <BZ2_decompress@@Base+0x27a0>
    7ea0:	add	w0, w0, #0x1
    7ea4:	str	w0, [x19, #96]
    7ea8:	b	7e30 <BZ2_decompress@@Base+0x27a0>
    7eac:	ldr	w0, [x19, #8]
    7eb0:	orr	w20, w20, w1
    7eb4:	cmp	w0, #0x2
    7eb8:	b.eq	7f00 <BZ2_decompress@@Base+0x2870>  // b.none
    7ebc:	ldr	w0, [x19, #16]
    7ec0:	cbnz	w0, 7f00 <BZ2_decompress@@Base+0x2870>
    7ec4:	ldr	w0, [x19, #92]
    7ec8:	cmp	w0, #0xff
    7ecc:	b.hi	7ed8 <BZ2_decompress@@Base+0x2848>  // b.pmore
    7ed0:	mov	x0, x19
    7ed4:	bl	7a30 <BZ2_decompress@@Base+0x23a0>
    7ed8:	mov	x0, #0x100                 	// #256
    7edc:	stur	x0, [x19, #92]
    7ee0:	ldr	w0, [x19, #8]
    7ee4:	cmp	w0, #0x4
    7ee8:	cset	w1, eq  // eq = none
    7eec:	mov	x0, x19
    7ef0:	bl	1630 <BZ2_compressBlock@plt>
    7ef4:	mov	w0, #0x1                   	// #1
    7ef8:	str	w0, [x19, #12]
    7efc:	b	7b94 <BZ2_decompress@@Base+0x2504>
    7f00:	ldp	w1, w0, [x19, #108]
    7f04:	cmp	w1, w0
    7f08:	b.lt	7f14 <BZ2_decompress@@Base+0x2884>  // b.tstop
    7f0c:	mov	w1, #0x0                   	// #0
    7f10:	b	7eec <BZ2_decompress@@Base+0x285c>
    7f14:	ldr	x0, [x19]
    7f18:	ldr	w0, [x0, #8]
    7f1c:	cbnz	w0, 7b94 <BZ2_decompress@@Base+0x2504>
    7f20:	orr	w20, w20, w21
    7f24:	cmp	w20, #0x0
    7f28:	cset	w0, ne  // ne = any
    7f2c:	ldp	x19, x20, [sp, #16]
    7f30:	ldp	x21, x22, [sp, #32]
    7f34:	ldr	x23, [sp, #48]
    7f38:	ldp	x29, x30, [sp], #64
    7f3c:	ret

0000000000007f40 <BZ2_bzCompressInit@@Base>:
    7f40:	stp	x29, x30, [sp, #-64]!
    7f44:	mov	x29, sp
    7f48:	stp	x19, x20, [sp, #16]
    7f4c:	mov	x20, x0
    7f50:	cmp	x20, #0x0
    7f54:	stp	x21, x22, [sp, #32]
    7f58:	sub	w0, w1, #0x1
    7f5c:	ccmp	w0, #0x8, #0x2, ne  // ne = any
    7f60:	stp	x23, x24, [sp, #48]
    7f64:	b.hi	80fc <BZ2_bzCompressInit@@Base+0x1bc>  // b.pmore
    7f68:	cmp	w3, #0xfa
    7f6c:	b.hi	80fc <BZ2_bzCompressInit@@Base+0x1bc>  // b.pmore
    7f70:	mov	w0, #0x1e                  	// #30
    7f74:	cmp	w3, #0x0
    7f78:	csel	w21, w3, w0, ne  // ne = any
    7f7c:	mov	w23, w1
    7f80:	ldr	x0, [x20, #56]
    7f84:	mov	w24, w2
    7f88:	cbnz	x0, 7f98 <BZ2_bzCompressInit@@Base+0x58>
    7f8c:	adrp	x0, 7000 <BZ2_decompress@@Base+0x1970>
    7f90:	add	x0, x0, #0xb60
    7f94:	str	x0, [x20, #56]
    7f98:	ldr	x0, [x20, #64]
    7f9c:	cbnz	x0, 7fac <BZ2_bzCompressInit@@Base+0x6c>
    7fa0:	adrp	x0, 7000 <BZ2_decompress@@Base+0x1970>
    7fa4:	add	x0, x0, #0xb50
    7fa8:	str	x0, [x20, #64]
    7fac:	ldr	x3, [x20, #56]
    7fb0:	mov	w2, #0x1                   	// #1
    7fb4:	ldr	x0, [x20, #72]
    7fb8:	mov	w1, #0xd9d8                	// #55768
    7fbc:	blr	x3
    7fc0:	mov	x19, x0
    7fc4:	cbz	x0, 8074 <BZ2_bzCompressInit@@Base+0x134>
    7fc8:	mov	w22, #0x86a0                	// #34464
    7fcc:	mov	w2, #0x1                   	// #1
    7fd0:	movk	w22, #0x1, lsl #16
    7fd4:	ldr	x3, [x20, #56]
    7fd8:	mul	w22, w23, w22
    7fdc:	ldr	x0, [x20, #72]
    7fe0:	str	x20, [x19]
    7fe4:	stp	xzr, xzr, [x19, #24]
    7fe8:	lsl	w1, w22, #2
    7fec:	str	xzr, [x19, #40]
    7ff0:	blr	x3
    7ff4:	ldr	x3, [x20, #56]
    7ff8:	str	x0, [x19, #24]
    7ffc:	ldr	x0, [x20, #72]
    8000:	add	w1, w22, #0x22
    8004:	mov	w2, #0x1                   	// #1
    8008:	lsl	w1, w1, #2
    800c:	blr	x3
    8010:	ldr	x3, [x20, #56]
    8014:	str	x0, [x19, #32]
    8018:	ldr	x0, [x20, #72]
    801c:	mov	w1, #0x40004               	// #262148
    8020:	mov	w2, #0x1                   	// #1
    8024:	blr	x3
    8028:	str	x0, [x19, #40]
    802c:	ldr	x1, [x19, #24]
    8030:	cbz	x1, 8048 <BZ2_bzCompressInit@@Base+0x108>
    8034:	ldr	x2, [x19, #32]
    8038:	cbz	x2, 8040 <BZ2_bzCompressInit@@Base+0x100>
    803c:	cbnz	x0, 807c <BZ2_bzCompressInit@@Base+0x13c>
    8040:	ldp	x2, x0, [x20, #64]
    8044:	blr	x2
    8048:	ldr	x1, [x19, #32]
    804c:	cbz	x1, 8058 <BZ2_bzCompressInit@@Base+0x118>
    8050:	ldp	x2, x0, [x20, #64]
    8054:	blr	x2
    8058:	ldr	x1, [x19, #40]
    805c:	cbz	x1, 8068 <BZ2_bzCompressInit@@Base+0x128>
    8060:	ldp	x2, x0, [x20, #64]
    8064:	blr	x2
    8068:	ldp	x2, x0, [x20, #64]
    806c:	mov	x1, x19
    8070:	blr	x2
    8074:	mov	w0, #0xfffffffd            	// #-3
    8078:	b	80e8 <BZ2_bzCompressInit@@Base+0x1a8>
    807c:	mov	x0, #0x200000002           	// #8589934594
    8080:	sub	w22, w22, #0x13
    8084:	str	x0, [x19, #8]
    8088:	mov	x0, #0x100                 	// #256
    808c:	stp	x1, x2, [x19, #56]
    8090:	stp	x1, xzr, [x19, #72]
    8094:	add	x1, x19, #0x180
    8098:	str	w21, [x19, #88]
    809c:	str	w22, [x19, #112]
    80a0:	str	wzr, [x19, #652]
    80a4:	str	w24, [x19, #656]
    80a8:	str	w23, [x19, #664]
    80ac:	stur	xzr, [x20, #12]
    80b0:	stur	xzr, [x20, #36]
    80b4:	str	x19, [x20, #48]
    80b8:	stur	x0, [x19, #92]
    80bc:	mov	w0, #0xffffffff            	// #-1
    80c0:	str	w0, [x19, #648]
    80c4:	add	x0, x19, #0x80
    80c8:	str	wzr, [x19, #108]
    80cc:	stur	xzr, [x19, #116]
    80d0:	strb	wzr, [x0], #1
    80d4:	cmp	x0, x1
    80d8:	b.ne	80d0 <BZ2_bzCompressInit@@Base+0x190>  // b.any
    80dc:	mov	w0, #0x1                   	// #1
    80e0:	str	w0, [x19, #660]
    80e4:	mov	w0, #0x0                   	// #0
    80e8:	ldp	x19, x20, [sp, #16]
    80ec:	ldp	x21, x22, [sp, #32]
    80f0:	ldp	x23, x24, [sp, #48]
    80f4:	ldp	x29, x30, [sp], #64
    80f8:	ret
    80fc:	mov	w0, #0xfffffffe            	// #-2
    8100:	b	80e8 <BZ2_bzCompressInit@@Base+0x1a8>

0000000000008104 <BZ2_bzCompress@@Base>:
    8104:	stp	x29, x30, [sp, #-32]!
    8108:	mov	x29, sp
    810c:	stp	x19, x20, [sp, #16]
    8110:	cbz	x0, 8180 <BZ2_bzCompress@@Base+0x7c>
    8114:	ldr	x19, [x0, #48]
    8118:	cbz	x19, 8180 <BZ2_bzCompress@@Base+0x7c>
    811c:	ldr	x2, [x19]
    8120:	cmp	x2, x0
    8124:	b.ne	8180 <BZ2_bzCompress@@Base+0x7c>  // b.any
    8128:	adrp	x2, a000 <BZ2_bzerror@@Base+0x140>
    812c:	add	x2, x2, #0x240
    8130:	mov	w4, #0x4                   	// #4
    8134:	mov	w5, #0x3                   	// #3
    8138:	ldr	w20, [x19, #8]
    813c:	sub	w3, w20, #0x1
    8140:	cmp	w3, #0x3
    8144:	b.hi	8158 <BZ2_bzCompress@@Base+0x54>  // b.pmore
    8148:	ldrb	w3, [x2, w3, uxtw]
    814c:	adr	x6, 8158 <BZ2_bzCompress@@Base+0x54>
    8150:	add	x3, x6, w3, sxtb #2
    8154:	br	x3
    8158:	mov	w20, #0x0                   	// #0
    815c:	mov	w0, w20
    8160:	ldp	x19, x20, [sp, #16]
    8164:	ldp	x29, x30, [sp], #32
    8168:	ret
    816c:	cbnz	w1, 8188 <BZ2_bzCompress@@Base+0x84>
    8170:	mov	x0, x19
    8174:	bl	7b6c <BZ2_decompress@@Base+0x24dc>
    8178:	tst	w0, #0xff
    817c:	b.ne	8214 <BZ2_bzCompress@@Base+0x110>  // b.any
    8180:	mov	w20, #0xfffffffe            	// #-2
    8184:	b	815c <BZ2_bzCompress@@Base+0x58>
    8188:	cmp	w1, #0x1
    818c:	b.ne	81a0 <BZ2_bzCompress@@Base+0x9c>  // b.any
    8190:	ldr	w3, [x0, #8]
    8194:	str	w5, [x19, #8]
    8198:	str	w3, [x19, #16]
    819c:	b	8138 <BZ2_bzCompress@@Base+0x34>
    81a0:	cmp	w1, #0x2
    81a4:	b.ne	8180 <BZ2_bzCompress@@Base+0x7c>  // b.any
    81a8:	ldr	w3, [x0, #8]
    81ac:	str	w4, [x19, #8]
    81b0:	str	w3, [x19, #16]
    81b4:	b	8138 <BZ2_bzCompress@@Base+0x34>
    81b8:	cmp	w1, #0x1
    81bc:	b.eq	81c8 <BZ2_bzCompress@@Base+0xc4>  // b.none
    81c0:	mov	w20, #0xffffffff            	// #-1
    81c4:	b	815c <BZ2_bzCompress@@Base+0x58>
    81c8:	ldr	w0, [x0, #8]
    81cc:	ldr	w1, [x19, #16]
    81d0:	cmp	w1, w0
    81d4:	b.ne	81c0 <BZ2_bzCompress@@Base+0xbc>  // b.any
    81d8:	mov	x0, x19
    81dc:	bl	7b6c <BZ2_decompress@@Base+0x24dc>
    81e0:	ldr	w0, [x19, #16]
    81e4:	cbnz	w0, 827c <BZ2_bzCompress@@Base+0x178>
    81e8:	ldr	w0, [x19, #92]
    81ec:	cmp	w0, #0xff
    81f0:	b.hi	8200 <BZ2_bzCompress@@Base+0xfc>  // b.pmore
    81f4:	ldr	w0, [x19, #96]
    81f8:	cmp	w0, #0x0
    81fc:	b.gt	827c <BZ2_bzCompress@@Base+0x178>
    8200:	ldp	w0, w1, [x19, #116]
    8204:	mov	w20, #0x2                   	// #2
    8208:	cmp	w1, w0
    820c:	b.lt	815c <BZ2_bzCompress@@Base+0x58>  // b.tstop
    8210:	str	w20, [x19, #8]
    8214:	mov	w20, #0x1                   	// #1
    8218:	b	815c <BZ2_bzCompress@@Base+0x58>
    821c:	cmp	w1, #0x2
    8220:	b.ne	81c0 <BZ2_bzCompress@@Base+0xbc>  // b.any
    8224:	ldr	w0, [x0, #8]
    8228:	ldr	w1, [x19, #16]
    822c:	cmp	w1, w0
    8230:	b.ne	81c0 <BZ2_bzCompress@@Base+0xbc>  // b.any
    8234:	mov	x0, x19
    8238:	bl	7b6c <BZ2_decompress@@Base+0x24dc>
    823c:	tst	w0, #0xff
    8240:	b.eq	81c0 <BZ2_bzCompress@@Base+0xbc>  // b.none
    8244:	ldr	w0, [x19, #16]
    8248:	cbnz	w0, 8284 <BZ2_bzCompress@@Base+0x180>
    824c:	ldr	w0, [x19, #92]
    8250:	cmp	w0, #0xff
    8254:	b.hi	8264 <BZ2_bzCompress@@Base+0x160>  // b.pmore
    8258:	ldr	w0, [x19, #96]
    825c:	cmp	w0, #0x0
    8260:	b.gt	8284 <BZ2_bzCompress@@Base+0x180>
    8264:	ldp	w0, w1, [x19, #116]
    8268:	cmp	w1, w0
    826c:	b.lt	8284 <BZ2_bzCompress@@Base+0x180>  // b.tstop
    8270:	mov	w0, #0x1                   	// #1
    8274:	str	w0, [x19, #8]
    8278:	b	815c <BZ2_bzCompress@@Base+0x58>
    827c:	mov	w20, #0x2                   	// #2
    8280:	b	815c <BZ2_bzCompress@@Base+0x58>
    8284:	mov	w20, #0x3                   	// #3
    8288:	b	815c <BZ2_bzCompress@@Base+0x58>

000000000000828c <BZ2_bzCompressEnd@@Base>:
    828c:	cbz	x0, 8304 <BZ2_bzCompressEnd@@Base+0x78>
    8290:	stp	x29, x30, [sp, #-32]!
    8294:	mov	x29, sp
    8298:	stp	x19, x20, [sp, #16]
    829c:	mov	x19, x0
    82a0:	ldr	x20, [x0, #48]
    82a4:	cbz	x20, 830c <BZ2_bzCompressEnd@@Base+0x80>
    82a8:	ldr	x0, [x20]
    82ac:	cmp	x0, x19
    82b0:	b.ne	830c <BZ2_bzCompressEnd@@Base+0x80>  // b.any
    82b4:	ldr	x1, [x20, #24]
    82b8:	cbz	x1, 82c4 <BZ2_bzCompressEnd@@Base+0x38>
    82bc:	ldp	x2, x0, [x19, #64]
    82c0:	blr	x2
    82c4:	ldr	x1, [x20, #32]
    82c8:	cbz	x1, 82d4 <BZ2_bzCompressEnd@@Base+0x48>
    82cc:	ldp	x2, x0, [x19, #64]
    82d0:	blr	x2
    82d4:	ldr	x1, [x20, #40]
    82d8:	cbz	x1, 82e4 <BZ2_bzCompressEnd@@Base+0x58>
    82dc:	ldp	x2, x0, [x19, #64]
    82e0:	blr	x2
    82e4:	ldp	x2, x0, [x19, #64]
    82e8:	ldr	x1, [x19, #48]
    82ec:	blr	x2
    82f0:	str	xzr, [x19, #48]
    82f4:	mov	w0, #0x0                   	// #0
    82f8:	ldp	x19, x20, [sp, #16]
    82fc:	ldp	x29, x30, [sp], #32
    8300:	ret
    8304:	mov	w0, #0xfffffffe            	// #-2
    8308:	ret
    830c:	mov	w0, #0xfffffffe            	// #-2
    8310:	b	82f8 <BZ2_bzCompressEnd@@Base+0x6c>

0000000000008314 <BZ2_bzDecompressInit@@Base>:
    8314:	cbz	x0, 83cc <BZ2_bzDecompressInit@@Base+0xb8>
    8318:	stp	x29, x30, [sp, #-48]!
    831c:	cmp	w2, #0x1
    8320:	mov	x29, sp
    8324:	stp	x19, x20, [sp, #16]
    8328:	str	x21, [sp, #32]
    832c:	mov	w21, w2
    8330:	b.hi	83d4 <BZ2_bzDecompressInit@@Base+0xc0>  // b.pmore
    8334:	mov	w20, w1
    8338:	cmp	w1, #0x4
    833c:	b.hi	83d4 <BZ2_bzDecompressInit@@Base+0xc0>  // b.pmore
    8340:	mov	x19, x0
    8344:	ldr	x0, [x0, #56]
    8348:	cbnz	x0, 8358 <BZ2_bzDecompressInit@@Base+0x44>
    834c:	adrp	x0, 7000 <BZ2_decompress@@Base+0x1970>
    8350:	add	x0, x0, #0xb60
    8354:	str	x0, [x19, #56]
    8358:	ldr	x0, [x19, #64]
    835c:	cbnz	x0, 836c <BZ2_bzDecompressInit@@Base+0x58>
    8360:	adrp	x0, 7000 <BZ2_decompress@@Base+0x1970>
    8364:	add	x0, x0, #0xb50
    8368:	str	x0, [x19, #64]
    836c:	ldr	x3, [x19, #56]
    8370:	mov	w2, #0x1                   	// #1
    8374:	ldr	x0, [x19, #72]
    8378:	mov	w1, #0xfa90                	// #64144
    837c:	blr	x3
    8380:	cbz	x0, 83dc <BZ2_bzDecompressInit@@Base+0xc8>
    8384:	str	x19, [x0]
    8388:	mov	w1, #0xa                   	// #10
    838c:	str	x0, [x19, #48]
    8390:	str	w1, [x0, #8]
    8394:	str	xzr, [x0, #32]
    8398:	str	wzr, [x0, #3188]
    839c:	stur	xzr, [x19, #12]
    83a0:	stur	xzr, [x19, #36]
    83a4:	strb	w21, [x0, #44]
    83a8:	stp	wzr, w20, [x0, #48]
    83ac:	str	xzr, [x0, #3152]
    83b0:	str	xzr, [x0, #3160]
    83b4:	str	xzr, [x0, #3168]
    83b8:	mov	w0, #0x0                   	// #0
    83bc:	ldp	x19, x20, [sp, #16]
    83c0:	ldr	x21, [sp, #32]
    83c4:	ldp	x29, x30, [sp], #48
    83c8:	ret
    83cc:	mov	w0, #0xfffffffe            	// #-2
    83d0:	ret
    83d4:	mov	w0, #0xfffffffe            	// #-2
    83d8:	b	83bc <BZ2_bzDecompressInit@@Base+0xa8>
    83dc:	mov	w0, #0xfffffffd            	// #-3
    83e0:	b	83bc <BZ2_bzDecompressInit@@Base+0xa8>

00000000000083e4 <BZ2_indexIntoF@@Base>:
    83e4:	mov	w4, w0
    83e8:	mov	w3, #0x100                 	// #256
    83ec:	mov	w0, #0x0                   	// #0
    83f0:	add	w2, w0, w3
    83f4:	asr	w2, w2, #1
    83f8:	ldr	w5, [x1, w2, sxtw #2]
    83fc:	cmp	w5, w4
    8400:	csel	w3, w3, w2, le
    8404:	csel	w0, w2, w0, le
    8408:	sub	w2, w3, w0
    840c:	cmp	w2, #0x1
    8410:	b.ne	83f0 <BZ2_indexIntoF@@Base+0xc>  // b.any
    8414:	ret

0000000000008418 <BZ2_bzDecompress@@Base>:
    8418:	stp	x29, x30, [sp, #-80]!
    841c:	mov	x29, sp
    8420:	stp	x19, x20, [sp, #16]
    8424:	stp	x21, x22, [sp, #32]
    8428:	stp	x23, x24, [sp, #48]
    842c:	str	x25, [sp, #64]
    8430:	cbz	x0, 8f28 <BZ2_bzDecompress@@Base+0xb10>
    8434:	ldr	x19, [x0, #48]
    8438:	cbz	x19, 8f28 <BZ2_bzDecompress@@Base+0xb10>
    843c:	ldr	x1, [x19]
    8440:	cmp	x1, x0
    8444:	b.ne	8f28 <BZ2_bzDecompress@@Base+0xb10>  // b.any
    8448:	adrp	x20, 1b000 <BZ2_bzerror@@Base+0x11140>
    844c:	mov	w21, #0x86a0                	// #34464
    8450:	movk	w21, #0x1, lsl #16
    8454:	ldr	x22, [x20, #4024]
    8458:	ldr	w0, [x19, #8]
    845c:	cmp	w0, #0x1
    8460:	b.eq	8f30 <BZ2_bzDecompress@@Base+0xb18>  // b.none
    8464:	cmp	w0, #0x2
    8468:	b.ne	8f0c <BZ2_bzDecompress@@Base+0xaf4>  // b.any
    846c:	ldrb	w2, [x19, #44]
    8470:	ldrb	w1, [x19, #20]
    8474:	cbz	w2, 8a34 <BZ2_bzDecompress@@Base+0x61c>
    8478:	cbz	w1, 8504 <BZ2_bzDecompress@@Base+0xec>
    847c:	adrp	x8, 1b000 <BZ2_bzerror@@Base+0x11140>
    8480:	ldr	x10, [x20, #4024]
    8484:	ldr	x9, [x8, #4048]
    8488:	ldr	x0, [x19]
    848c:	ldr	w1, [x0, #32]
    8490:	cbz	w1, 8ee4 <BZ2_bzDecompress@@Base+0xacc>
    8494:	ldr	w1, [x19, #16]
    8498:	cbz	w1, 858c <BZ2_bzDecompress@@Base+0x174>
    849c:	ldr	x1, [x0, #24]
    84a0:	ldrb	w0, [x19, #12]
    84a4:	strb	w0, [x1]
    84a8:	ldr	w1, [x19, #3184]
    84ac:	eor	w0, w0, w1, lsr #24
    84b0:	ldr	w0, [x10, x0, lsl #2]
    84b4:	eor	w1, w0, w1, lsl #8
    84b8:	ldr	w0, [x19, #16]
    84bc:	str	w1, [x19, #3184]
    84c0:	sub	w0, w0, #0x1
    84c4:	str	w0, [x19, #16]
    84c8:	ldr	x0, [x19]
    84cc:	ldr	x1, [x0, #24]
    84d0:	add	x1, x1, #0x1
    84d4:	str	x1, [x0, #24]
    84d8:	ldr	w1, [x0, #32]
    84dc:	sub	w1, w1, #0x1
    84e0:	str	w1, [x0, #32]
    84e4:	ldr	w1, [x0, #36]
    84e8:	add	w1, w1, #0x1
    84ec:	str	w1, [x0, #36]
    84f0:	cbnz	w1, 8488 <BZ2_bzDecompress@@Base+0x70>
    84f4:	ldr	w1, [x0, #40]
    84f8:	add	w1, w1, #0x1
    84fc:	str	w1, [x0, #40]
    8500:	b	8488 <BZ2_bzDecompress@@Base+0x70>
    8504:	ldr	x13, [x20, #4024]
    8508:	add	x11, x19, #0xc, lsl #12
    850c:	mov	w12, #0x1                   	// #1
    8510:	ldr	x0, [x19]
    8514:	ldr	w1, [x0, #32]
    8518:	cbz	w1, 8ee4 <BZ2_bzDecompress@@Base+0xacc>
    851c:	ldr	w1, [x19, #16]
    8520:	cbz	w1, 886c <BZ2_bzDecompress@@Base+0x454>
    8524:	ldr	x1, [x0, #24]
    8528:	ldrb	w0, [x19, #12]
    852c:	strb	w0, [x1]
    8530:	ldr	w1, [x19, #3184]
    8534:	eor	w0, w0, w1, lsr #24
    8538:	ldr	w0, [x13, x0, lsl #2]
    853c:	eor	w1, w0, w1, lsl #8
    8540:	ldr	w0, [x19, #16]
    8544:	str	w1, [x19, #3184]
    8548:	sub	w0, w0, #0x1
    854c:	str	w0, [x19, #16]
    8550:	ldr	x0, [x19]
    8554:	ldr	x1, [x0, #24]
    8558:	add	x1, x1, #0x1
    855c:	str	x1, [x0, #24]
    8560:	ldr	w1, [x0, #32]
    8564:	sub	w1, w1, #0x1
    8568:	str	w1, [x0, #32]
    856c:	ldr	w1, [x0, #36]
    8570:	add	w1, w1, #0x1
    8574:	str	w1, [x0, #36]
    8578:	cbnz	w1, 8510 <BZ2_bzDecompress@@Base+0xf8>
    857c:	ldr	w1, [x0, #40]
    8580:	add	w1, w1, #0x1
    8584:	str	w1, [x0, #40]
    8588:	b	8510 <BZ2_bzDecompress@@Base+0xf8>
    858c:	add	x0, x19, #0xc, lsl #12
    8590:	ldr	w6, [x19, #1092]
    8594:	ldr	w25, [x0, #14928]
    8598:	add	w13, w25, #0x1
    859c:	cmp	w6, w13
    85a0:	b.eq	8f40 <BZ2_bzDecompress@@Base+0xb28>  // b.none
    85a4:	b.gt	9008 <BZ2_bzDecompress@@Base+0xbf0>
    85a8:	ldr	w7, [x19, #40]
    85ac:	mov	w0, #0x1                   	// #1
    85b0:	ldp	w15, w24, [x19, #60]
    85b4:	strb	w24, [x19, #12]
    85b8:	str	w0, [x19, #16]
    85bc:	mul	w7, w7, w21
    85c0:	cmp	w15, w7
    85c4:	b.cs	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.hs, b.nlast
    85c8:	add	x1, x19, #0x448
    85cc:	mov	w0, w15
    85d0:	bl	83e4 <BZ2_indexIntoF@@Base>
    85d4:	lsr	w2, w15, #1
    85d8:	ldr	x12, [x19, #3168]
    85dc:	ubfiz	w14, w15, #2, #1
    85e0:	ldr	x11, [x19, #3160]
    85e4:	ldrb	w2, [x12, x2]
    85e8:	lsr	w2, w2, w14
    85ec:	ldrh	w14, [x11, w15, uxtw #1]
    85f0:	ubfiz	w2, w2, #16, #4
    85f4:	orr	w14, w2, w14
    85f8:	ldr	w2, [x19, #24]
    85fc:	str	w14, [x19, #60]
    8600:	cbnz	w2, 861c <BZ2_bzDecompress@@Base+0x204>
    8604:	ldr	w2, [x19, #28]
    8608:	ldr	x3, [x8, #4048]
    860c:	cmp	w2, #0x1ff
    8610:	ldr	w3, [x3, w2, sxtw #2]
    8614:	csinc	w2, wzr, w2, eq  // eq = none
    8618:	stp	w3, w2, [x19, #24]
    861c:	ldr	w23, [x19, #24]
    8620:	sub	w23, w23, #0x1
    8624:	str	w23, [x19, #24]
    8628:	cmp	w23, #0x1
    862c:	cset	w18, eq  // eq = none
    8630:	cmp	w6, w25
    8634:	eor	w18, w18, w0
    8638:	add	w0, w6, #0x1
    863c:	str	w0, [x19, #1092]
    8640:	and	w18, w18, #0xff
    8644:	b.eq	8488 <BZ2_bzDecompress@@Base+0x70>  // b.none
    8648:	cmp	w24, w18
    864c:	b.eq	8658 <BZ2_bzDecompress@@Base+0x240>  // b.none
    8650:	str	w18, [x19, #64]
    8654:	b	8488 <BZ2_bzDecompress@@Base+0x70>
    8658:	mov	w0, #0x2                   	// #2
    865c:	str	w0, [x19, #16]
    8660:	cmp	w7, w14
    8664:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8668:	mov	w0, w14
    866c:	bl	83e4 <BZ2_indexIntoF@@Base>
    8670:	ubfx	x2, x14, #1, #19
    8674:	ubfiz	w15, w14, #2, #1
    8678:	ldrb	w3, [x12, x2]
    867c:	ubfiz	x2, x14, #1, #20
    8680:	lsr	w3, w3, w15
    8684:	ldrh	w15, [x11, x2]
    8688:	ubfiz	w3, w3, #16, #4
    868c:	orr	w15, w3, w15
    8690:	str	w15, [x19, #60]
    8694:	cbnz	w23, 86b0 <BZ2_bzDecompress@@Base+0x298>
    8698:	ldr	w2, [x19, #28]
    869c:	ldr	x3, [x8, #4048]
    86a0:	cmp	w2, #0x1ff
    86a4:	ldr	w3, [x3, w2, sxtw #2]
    86a8:	csinc	w2, wzr, w2, eq  // eq = none
    86ac:	stp	w3, w2, [x19, #24]
    86b0:	ldr	w23, [x19, #24]
    86b4:	sub	w23, w23, #0x1
    86b8:	str	w23, [x19, #24]
    86bc:	cmp	w23, #0x1
    86c0:	cset	w2, eq  // eq = none
    86c4:	eor	w0, w2, w0
    86c8:	add	w2, w6, #0x2
    86cc:	str	w2, [x19, #1092]
    86d0:	and	w0, w0, #0xff
    86d4:	cmp	w13, w2
    86d8:	b.eq	8488 <BZ2_bzDecompress@@Base+0x70>  // b.none
    86dc:	cmp	w18, w0
    86e0:	b.eq	86ec <BZ2_bzDecompress@@Base+0x2d4>  // b.none
    86e4:	str	w0, [x19, #64]
    86e8:	b	8488 <BZ2_bzDecompress@@Base+0x70>
    86ec:	mov	w0, #0x3                   	// #3
    86f0:	str	w0, [x19, #16]
    86f4:	cmp	w7, w15
    86f8:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    86fc:	mov	w0, w15
    8700:	bl	83e4 <BZ2_indexIntoF@@Base>
    8704:	ubfx	x2, x15, #1, #19
    8708:	ubfiz	x3, x15, #1, #20
    870c:	ubfiz	w14, w15, #2, #1
    8710:	ldrb	w2, [x12, x2]
    8714:	lsr	w2, w2, w14
    8718:	ldrh	w14, [x11, x3]
    871c:	ubfiz	w2, w2, #16, #4
    8720:	orr	w14, w2, w14
    8724:	str	w14, [x19, #60]
    8728:	cbnz	w23, 8744 <BZ2_bzDecompress@@Base+0x32c>
    872c:	ldr	w2, [x19, #28]
    8730:	ldr	x3, [x8, #4048]
    8734:	cmp	w2, #0x1ff
    8738:	ldr	w3, [x3, w2, sxtw #2]
    873c:	csinc	w2, wzr, w2, eq  // eq = none
    8740:	stp	w3, w2, [x19, #24]
    8744:	ldr	w15, [x19, #24]
    8748:	add	w2, w6, #0x3
    874c:	str	w2, [x19, #1092]
    8750:	sub	w15, w15, #0x1
    8754:	str	w15, [x19, #24]
    8758:	cmp	w15, #0x1
    875c:	cset	w3, eq  // eq = none
    8760:	cmp	w13, w2
    8764:	eor	w0, w3, w0
    8768:	and	w0, w0, #0xff
    876c:	b.eq	8488 <BZ2_bzDecompress@@Base+0x70>  // b.none
    8770:	cmp	w18, w0
    8774:	b.ne	86e4 <BZ2_bzDecompress@@Base+0x2cc>  // b.any
    8778:	cmp	w7, w14
    877c:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8780:	mov	w0, w14
    8784:	bl	83e4 <BZ2_indexIntoF@@Base>
    8788:	ubfx	x2, x14, #1, #19
    878c:	ldrb	w13, [x12, x2]
    8790:	ubfiz	w2, w14, #2, #1
    8794:	lsr	w13, w13, w2
    8798:	ubfiz	x2, x14, #1, #20
    879c:	ubfiz	w13, w13, #16, #4
    87a0:	ldrh	w2, [x11, x2]
    87a4:	orr	w13, w13, w2
    87a8:	str	w13, [x19, #60]
    87ac:	cbnz	w15, 87c8 <BZ2_bzDecompress@@Base+0x3b0>
    87b0:	ldr	w2, [x19, #28]
    87b4:	ldr	x3, [x8, #4048]
    87b8:	cmp	w2, #0x1ff
    87bc:	ldr	w3, [x3, w2, sxtw #2]
    87c0:	csinc	w2, wzr, w2, eq  // eq = none
    87c4:	stp	w3, w2, [x19, #24]
    87c8:	ldr	w14, [x19, #24]
    87cc:	add	w2, w6, #0x4
    87d0:	str	w2, [x19, #1092]
    87d4:	sub	w14, w14, #0x1
    87d8:	str	w14, [x19, #24]
    87dc:	cmp	w14, #0x1
    87e0:	cset	w2, eq  // eq = none
    87e4:	cmp	w7, w13
    87e8:	eor	w0, w2, w0
    87ec:	and	w0, w0, #0xff
    87f0:	add	w0, w0, #0x4
    87f4:	str	w0, [x19, #16]
    87f8:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    87fc:	mov	w0, w13
    8800:	bl	83e4 <BZ2_indexIntoF@@Base>
    8804:	ubfx	x1, x13, #1, #19
    8808:	str	w0, [x19, #64]
    880c:	ubfiz	w2, w13, #2, #1
    8810:	ldrb	w1, [x12, x1]
    8814:	lsr	w1, w1, w2
    8818:	ubfiz	w2, w1, #16, #4
    881c:	ubfiz	x1, x13, #1, #20
    8820:	ldrh	w1, [x11, x1]
    8824:	orr	w1, w2, w1
    8828:	str	w1, [x19, #60]
    882c:	cbnz	w14, 8844 <BZ2_bzDecompress@@Base+0x42c>
    8830:	ldr	w1, [x19, #28]
    8834:	cmp	w1, #0x1ff
    8838:	ldr	w2, [x9, w1, sxtw #2]
    883c:	csinc	w1, wzr, w1, eq  // eq = none
    8840:	stp	w2, w1, [x19, #24]
    8844:	ldr	w1, [x19, #24]
    8848:	sub	w1, w1, #0x1
    884c:	str	w1, [x19, #24]
    8850:	cmp	w1, #0x1
    8854:	cset	w1, eq  // eq = none
    8858:	eor	w0, w1, w0
    885c:	str	w0, [x19, #64]
    8860:	add	w0, w6, #0x5
    8864:	str	w0, [x19, #1092]
    8868:	b	8488 <BZ2_bzDecompress@@Base+0x70>
    886c:	ldr	w23, [x11, #14928]
    8870:	ldr	w8, [x19, #1092]
    8874:	add	w18, w23, #0x1
    8878:	cmp	w8, w18
    887c:	b.eq	8f40 <BZ2_bzDecompress@@Base+0xb28>  // b.none
    8880:	b.gt	9008 <BZ2_bzDecompress@@Base+0xbf0>
    8884:	ldr	w9, [x19, #40]
    8888:	ldp	w6, w15, [x19, #60]
    888c:	strb	w15, [x19, #12]
    8890:	str	w12, [x19, #16]
    8894:	mul	w9, w9, w21
    8898:	cmp	w6, w9
    889c:	b.cs	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.hs, b.nlast
    88a0:	add	x1, x19, #0x448
    88a4:	mov	w0, w6
    88a8:	bl	83e4 <BZ2_indexIntoF@@Base>
    88ac:	lsr	w2, w6, #1
    88b0:	ldr	x14, [x19, #3168]
    88b4:	cmp	w8, w23
    88b8:	ldr	x10, [x19, #3160]
    88bc:	ldrb	w7, [x14, x2]
    88c0:	ubfiz	w2, w6, #2, #1
    88c4:	lsr	w7, w7, w2
    88c8:	ldrh	w2, [x10, w6, uxtw #1]
    88cc:	ubfiz	w7, w7, #16, #4
    88d0:	orr	w7, w7, w2
    88d4:	add	w2, w8, #0x1
    88d8:	str	w7, [x19, #60]
    88dc:	str	w2, [x19, #1092]
    88e0:	b.eq	8510 <BZ2_bzDecompress@@Base+0xf8>  // b.none
    88e4:	and	w2, w0, #0xff
    88e8:	cmp	w15, w0, uxtb
    88ec:	b.eq	88f8 <BZ2_bzDecompress@@Base+0x4e0>  // b.none
    88f0:	str	w2, [x19, #64]
    88f4:	b	8510 <BZ2_bzDecompress@@Base+0xf8>
    88f8:	mov	w0, #0x2                   	// #2
    88fc:	str	w0, [x19, #16]
    8900:	cmp	w9, w7
    8904:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8908:	mov	w0, w7
    890c:	bl	83e4 <BZ2_indexIntoF@@Base>
    8910:	ubfx	x2, x7, #1, #19
    8914:	ldrb	w6, [x14, x2]
    8918:	ubfiz	w2, w7, #2, #1
    891c:	ubfiz	x7, x7, #1, #20
    8920:	lsr	w6, w6, w2
    8924:	ldrh	w2, [x10, x7]
    8928:	ubfiz	w6, w6, #16, #4
    892c:	orr	w6, w6, w2
    8930:	add	w2, w8, #0x2
    8934:	str	w6, [x19, #60]
    8938:	cmp	w18, w2
    893c:	str	w2, [x19, #1092]
    8940:	b.eq	8510 <BZ2_bzDecompress@@Base+0xf8>  // b.none
    8944:	and	w2, w0, #0xff
    8948:	cmp	w15, w0, uxtb
    894c:	b.ne	88f0 <BZ2_bzDecompress@@Base+0x4d8>  // b.any
    8950:	mov	w0, #0x3                   	// #3
    8954:	str	w0, [x19, #16]
    8958:	cmp	w9, w6
    895c:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8960:	mov	w0, w6
    8964:	bl	83e4 <BZ2_indexIntoF@@Base>
    8968:	ubfx	x2, x6, #1, #19
    896c:	ldrb	w7, [x14, x2]
    8970:	ubfiz	w2, w6, #2, #1
    8974:	ubfiz	x6, x6, #1, #20
    8978:	lsr	w7, w7, w2
    897c:	ldrh	w2, [x10, x6]
    8980:	ubfiz	w7, w7, #16, #4
    8984:	orr	w7, w7, w2
    8988:	add	w2, w8, #0x3
    898c:	str	w7, [x19, #60]
    8990:	cmp	w18, w2
    8994:	str	w2, [x19, #1092]
    8998:	b.eq	8510 <BZ2_bzDecompress@@Base+0xf8>  // b.none
    899c:	and	w2, w0, #0xff
    89a0:	cmp	w15, w0, uxtb
    89a4:	b.ne	88f0 <BZ2_bzDecompress@@Base+0x4d8>  // b.any
    89a8:	cmp	w9, w7
    89ac:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    89b0:	mov	w0, w7
    89b4:	bl	83e4 <BZ2_indexIntoF@@Base>
    89b8:	ubfx	x2, x7, #1, #19
    89bc:	and	w0, w0, #0xff
    89c0:	add	w0, w0, #0x4
    89c4:	ldrb	w6, [x14, x2]
    89c8:	ubfiz	w2, w7, #2, #1
    89cc:	ubfiz	x7, x7, #1, #20
    89d0:	lsr	w6, w6, w2
    89d4:	ldrh	w2, [x10, x7]
    89d8:	ubfiz	w6, w6, #16, #4
    89dc:	str	w0, [x19, #16]
    89e0:	orr	w6, w6, w2
    89e4:	add	w2, w8, #0x4
    89e8:	str	w6, [x19, #60]
    89ec:	cmp	w9, w6
    89f0:	str	w2, [x19, #1092]
    89f4:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    89f8:	mov	w0, w6
    89fc:	bl	83e4 <BZ2_indexIntoF@@Base>
    8a00:	str	w0, [x19, #64]
    8a04:	ubfx	x0, x6, #1, #19
    8a08:	ubfiz	w1, w6, #2, #1
    8a0c:	ubfiz	x6, x6, #1, #20
    8a10:	add	w8, w8, #0x5
    8a14:	ldrb	w0, [x14, x0]
    8a18:	lsr	w0, w0, w1
    8a1c:	ldrh	w1, [x10, x6]
    8a20:	ubfiz	w0, w0, #16, #4
    8a24:	str	w8, [x19, #1092]
    8a28:	orr	w0, w0, w1
    8a2c:	str	w0, [x19, #60]
    8a30:	b	8510 <BZ2_bzDecompress@@Base+0xf8>
    8a34:	cbz	w1, 8d10 <BZ2_bzDecompress@@Base+0x8f8>
    8a38:	adrp	x2, 1b000 <BZ2_bzerror@@Base+0x11140>
    8a3c:	add	x6, x19, #0xc, lsl #12
    8a40:	ldr	x13, [x20, #4024]
    8a44:	mov	w4, w0
    8a48:	ldr	x2, [x2, #4048]
    8a4c:	mov	w7, #0x1                   	// #1
    8a50:	mov	w8, #0x3                   	// #3
    8a54:	mov	x9, x2
    8a58:	mov	x10, x2
    8a5c:	mov	x11, x2
    8a60:	mov	x12, x2
    8a64:	ldr	x0, [x19]
    8a68:	ldr	w1, [x0, #32]
    8a6c:	cbz	w1, 8ee4 <BZ2_bzDecompress@@Base+0xacc>
    8a70:	ldr	w1, [x19, #16]
    8a74:	cbz	w1, 8ae4 <BZ2_bzDecompress@@Base+0x6cc>
    8a78:	ldr	x0, [x0, #24]
    8a7c:	ldrb	w1, [x19, #12]
    8a80:	strb	w1, [x0]
    8a84:	ldr	w1, [x19, #3184]
    8a88:	ldrb	w0, [x19, #12]
    8a8c:	eor	w0, w0, w1, lsr #24
    8a90:	ldr	w0, [x13, x0, lsl #2]
    8a94:	eor	w1, w0, w1, lsl #8
    8a98:	ldr	w0, [x19, #16]
    8a9c:	str	w1, [x19, #3184]
    8aa0:	sub	w0, w0, #0x1
    8aa4:	str	w0, [x19, #16]
    8aa8:	ldr	x0, [x19]
    8aac:	ldr	x1, [x0, #24]
    8ab0:	add	x1, x1, #0x1
    8ab4:	str	x1, [x0, #24]
    8ab8:	ldr	w1, [x0, #32]
    8abc:	sub	w1, w1, #0x1
    8ac0:	str	w1, [x0, #32]
    8ac4:	ldr	w1, [x0, #36]
    8ac8:	add	w1, w1, #0x1
    8acc:	str	w1, [x0, #36]
    8ad0:	cbnz	w1, 8a64 <BZ2_bzDecompress@@Base+0x64c>
    8ad4:	ldr	w1, [x0, #40]
    8ad8:	add	w1, w1, #0x1
    8adc:	str	w1, [x0, #40]
    8ae0:	b	8a64 <BZ2_bzDecompress@@Base+0x64c>
    8ae4:	ldr	w18, [x6, #14928]
    8ae8:	ldr	w0, [x19, #1092]
    8aec:	add	w17, w18, #0x1
    8af0:	cmp	w0, w17
    8af4:	b.eq	8f40 <BZ2_bzDecompress@@Base+0xb28>  // b.none
    8af8:	b.gt	9008 <BZ2_bzDecompress@@Base+0xbf0>
    8afc:	ldr	w3, [x19, #40]
    8b00:	ldp	w1, w16, [x19, #60]
    8b04:	strb	w16, [x19, #12]
    8b08:	str	w7, [x19, #16]
    8b0c:	mul	w3, w3, w21
    8b10:	cmp	w1, w3
    8b14:	b.cs	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.hs, b.nlast
    8b18:	ldr	x14, [x19, #3152]
    8b1c:	ldr	w23, [x14, w1, uxtw #2]
    8b20:	ldr	w1, [x19, #24]
    8b24:	lsr	w5, w23, #8
    8b28:	str	w5, [x19, #60]
    8b2c:	cbnz	w1, 8b44 <BZ2_bzDecompress@@Base+0x72c>
    8b30:	ldr	w15, [x19, #28]
    8b34:	cmp	w15, #0x1ff
    8b38:	ldr	w1, [x12, w15, sxtw #2]
    8b3c:	csinc	w15, wzr, w15, eq  // eq = none
    8b40:	stp	w1, w15, [x19, #24]
    8b44:	ldr	w15, [x19, #24]
    8b48:	sub	w15, w15, #0x1
    8b4c:	str	w15, [x19, #24]
    8b50:	cmp	w15, #0x1
    8b54:	cset	w1, eq  // eq = none
    8b58:	cmp	w0, w18
    8b5c:	eor	w1, w1, w23
    8b60:	add	w23, w0, #0x1
    8b64:	str	w23, [x19, #1092]
    8b68:	and	w1, w1, #0xff
    8b6c:	b.eq	8a64 <BZ2_bzDecompress@@Base+0x64c>  // b.none
    8b70:	cmp	w16, w1
    8b74:	b.eq	8b80 <BZ2_bzDecompress@@Base+0x768>  // b.none
    8b78:	str	w1, [x19, #64]
    8b7c:	b	8a64 <BZ2_bzDecompress@@Base+0x64c>
    8b80:	str	w4, [x19, #16]
    8b84:	cmp	w3, w5
    8b88:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8b8c:	ubfiz	x5, x5, #2, #24
    8b90:	ldr	w18, [x14, x5]
    8b94:	lsr	w16, w18, #8
    8b98:	str	w16, [x19, #60]
    8b9c:	cbnz	w15, 8bb4 <BZ2_bzDecompress@@Base+0x79c>
    8ba0:	ldr	w15, [x19, #28]
    8ba4:	cmp	w15, #0x1ff
    8ba8:	ldr	w5, [x11, w15, sxtw #2]
    8bac:	csinc	w15, wzr, w15, eq  // eq = none
    8bb0:	stp	w5, w15, [x19, #24]
    8bb4:	ldr	w15, [x19, #24]
    8bb8:	sub	w15, w15, #0x1
    8bbc:	str	w15, [x19, #24]
    8bc0:	cmp	w15, #0x1
    8bc4:	cset	w5, eq  // eq = none
    8bc8:	eor	w5, w5, w18
    8bcc:	add	w18, w0, #0x2
    8bd0:	str	w18, [x19, #1092]
    8bd4:	and	w5, w5, #0xff
    8bd8:	cmp	w17, w18
    8bdc:	b.eq	8a64 <BZ2_bzDecompress@@Base+0x64c>  // b.none
    8be0:	cmp	w1, w5
    8be4:	b.eq	8bf0 <BZ2_bzDecompress@@Base+0x7d8>  // b.none
    8be8:	str	w5, [x19, #64]
    8bec:	b	8a64 <BZ2_bzDecompress@@Base+0x64c>
    8bf0:	str	w8, [x19, #16]
    8bf4:	cmp	w3, w16
    8bf8:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8bfc:	ubfiz	x5, x16, #2, #24
    8c00:	ldr	w23, [x14, x5]
    8c04:	lsr	w18, w23, #8
    8c08:	str	w18, [x19, #60]
    8c0c:	cbnz	w15, 8c24 <BZ2_bzDecompress@@Base+0x80c>
    8c10:	ldr	w15, [x19, #28]
    8c14:	cmp	w15, #0x1ff
    8c18:	ldr	w5, [x10, w15, sxtw #2]
    8c1c:	csinc	w15, wzr, w15, eq  // eq = none
    8c20:	stp	w5, w15, [x19, #24]
    8c24:	ldr	w16, [x19, #24]
    8c28:	add	w15, w0, #0x3
    8c2c:	str	w15, [x19, #1092]
    8c30:	sub	w16, w16, #0x1
    8c34:	str	w16, [x19, #24]
    8c38:	cmp	w16, #0x1
    8c3c:	cset	w5, eq  // eq = none
    8c40:	cmp	w17, w15
    8c44:	eor	w5, w5, w23
    8c48:	and	w5, w5, #0xff
    8c4c:	b.eq	8a64 <BZ2_bzDecompress@@Base+0x64c>  // b.none
    8c50:	cmp	w1, w5
    8c54:	b.ne	8be8 <BZ2_bzDecompress@@Base+0x7d0>  // b.any
    8c58:	cmp	w3, w18
    8c5c:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8c60:	ubfiz	x1, x18, #2, #24
    8c64:	ldr	w17, [x14, x1]
    8c68:	lsr	w15, w17, #8
    8c6c:	str	w15, [x19, #60]
    8c70:	cbnz	w16, 8c88 <BZ2_bzDecompress@@Base+0x870>
    8c74:	ldr	w5, [x19, #28]
    8c78:	cmp	w5, #0x1ff
    8c7c:	ldr	w1, [x9, w5, sxtw #2]
    8c80:	csinc	w5, wzr, w5, eq  // eq = none
    8c84:	stp	w1, w5, [x19, #24]
    8c88:	ldr	w5, [x19, #24]
    8c8c:	add	w1, w0, #0x4
    8c90:	str	w1, [x19, #1092]
    8c94:	sub	w5, w5, #0x1
    8c98:	str	w5, [x19, #24]
    8c9c:	cmp	w5, #0x1
    8ca0:	cset	w1, eq  // eq = none
    8ca4:	cmp	w3, w15
    8ca8:	eor	w1, w1, w17
    8cac:	and	w1, w1, #0xff
    8cb0:	add	w1, w1, #0x4
    8cb4:	str	w1, [x19, #16]
    8cb8:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8cbc:	ubfiz	x15, x15, #2, #24
    8cc0:	ldr	w1, [x14, x15]
    8cc4:	and	w3, w1, #0xff
    8cc8:	lsr	w1, w1, #8
    8ccc:	stp	w1, w3, [x19, #60]
    8cd0:	cbnz	w5, 8ce8 <BZ2_bzDecompress@@Base+0x8d0>
    8cd4:	ldr	w1, [x19, #28]
    8cd8:	cmp	w1, #0x1ff
    8cdc:	ldr	w5, [x2, w1, sxtw #2]
    8ce0:	csinc	w1, wzr, w1, eq  // eq = none
    8ce4:	stp	w5, w1, [x19, #24]
    8ce8:	ldr	w1, [x19, #24]
    8cec:	add	w0, w0, #0x5
    8cf0:	str	w0, [x19, #1092]
    8cf4:	sub	w1, w1, #0x1
    8cf8:	str	w1, [x19, #24]
    8cfc:	cmp	w1, #0x1
    8d00:	cset	w1, eq  // eq = none
    8d04:	eor	w1, w1, w3
    8d08:	str	w1, [x19, #64]
    8d0c:	b	8a64 <BZ2_bzDecompress@@Base+0x64c>
    8d10:	ldr	x2, [x19]
    8d14:	ldr	w5, [x19, #40]
    8d18:	ldrb	w11, [x19, #12]
    8d1c:	ldr	w4, [x2, #32]
    8d20:	ldr	x12, [x2, #24]
    8d24:	add	x2, x19, #0xc, lsl #12
    8d28:	ldr	x15, [x20, #4024]
    8d2c:	mul	w5, w5, w21
    8d30:	ldr	w14, [x2, #14928]
    8d34:	mov	w9, w4
    8d38:	ldr	w1, [x19, #16]
    8d3c:	ldp	w0, w6, [x19, #60]
    8d40:	add	w13, w14, #0x1
    8d44:	ldr	w7, [x19, #1092]
    8d48:	ldr	w8, [x19, #3184]
    8d4c:	ldr	x10, [x19, #3152]
    8d50:	cmp	w1, #0x0
    8d54:	b.le	8dcc <BZ2_bzDecompress@@Base+0x9b4>
    8d58:	cbz	w9, 8e9c <BZ2_bzDecompress@@Base+0xa84>
    8d5c:	lsl	w17, w8, #8
    8d60:	eor	w2, w11, w8, lsr #24
    8d64:	add	x3, x12, #0x1
    8d68:	sub	w16, w9, #0x1
    8d6c:	cmp	w1, #0x1
    8d70:	b.eq	8db8 <BZ2_bzDecompress@@Base+0x9a0>  // b.none
    8d74:	strb	w11, [x12]
    8d78:	sub	w1, w1, #0x1
    8d7c:	mov	w9, w16
    8d80:	mov	x12, x3
    8d84:	ldr	w8, [x22, x2, lsl #2]
    8d88:	eor	w8, w17, w8
    8d8c:	b	8d58 <BZ2_bzDecompress@@Base+0x940>
    8d90:	mov	w2, w6
    8d94:	mov	w1, #0x2                   	// #2
    8d98:	mov	w6, w2
    8d9c:	mov	w7, w3
    8da0:	b	8d50 <BZ2_bzDecompress@@Base+0x938>
    8da4:	mov	w2, w6
    8da8:	mov	w1, #0x3                   	// #3
    8dac:	b	8d98 <BZ2_bzDecompress@@Base+0x980>
    8db0:	add	w7, w7, #0x1
    8db4:	cbz	w9, 8e98 <BZ2_bzDecompress@@Base+0xa80>
    8db8:	eor	w1, w11, w8, lsr #24
    8dbc:	strb	w11, [x12], #1
    8dc0:	sub	w9, w9, #0x1
    8dc4:	ldr	w1, [x15, x1, lsl #2]
    8dc8:	eor	w8, w1, w8, lsl #8
    8dcc:	mov	w2, w6
    8dd0:	cmp	w13, w7
    8dd4:	b.lt	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.tstop
    8dd8:	b.eq	8f04 <BZ2_bzDecompress@@Base+0xaec>  // b.none
    8ddc:	and	w11, w6, #0xff
    8de0:	cmp	w5, w0
    8de4:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8de8:	ldr	w1, [x10, w0, uxtw #2]
    8dec:	and	w6, w1, #0xff
    8df0:	lsr	w0, w1, #8
    8df4:	cmp	w2, w1, uxtb
    8df8:	b.ne	8db0 <BZ2_bzDecompress@@Base+0x998>  // b.any
    8dfc:	cmp	w14, w7
    8e00:	b.eq	8db0 <BZ2_bzDecompress@@Base+0x998>  // b.none
    8e04:	cmp	w5, w0
    8e08:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8e0c:	ubfiz	x0, x0, #2, #24
    8e10:	add	w3, w7, #0x2
    8e14:	cmp	w13, w3
    8e18:	ldr	w1, [x10, x0]
    8e1c:	lsr	w0, w1, #8
    8e20:	b.eq	8d94 <BZ2_bzDecompress@@Base+0x97c>  // b.none
    8e24:	and	w6, w1, #0xff
    8e28:	cmp	w2, w1, uxtb
    8e2c:	b.ne	8d90 <BZ2_bzDecompress@@Base+0x978>  // b.any
    8e30:	cmp	w5, w0
    8e34:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8e38:	ubfiz	x0, x0, #2, #24
    8e3c:	add	w3, w7, #0x3
    8e40:	cmp	w13, w3
    8e44:	ldr	w1, [x10, x0]
    8e48:	lsr	w0, w1, #8
    8e4c:	b.eq	8da8 <BZ2_bzDecompress@@Base+0x990>  // b.none
    8e50:	and	w6, w1, #0xff
    8e54:	cmp	w2, w1, uxtb
    8e58:	b.ne	8da4 <BZ2_bzDecompress@@Base+0x98c>  // b.any
    8e5c:	cmp	w5, w0
    8e60:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8e64:	ubfiz	x0, x0, #2, #24
    8e68:	ldr	w2, [x10, x0]
    8e6c:	and	w1, w2, #0xff
    8e70:	lsr	w0, w2, #8
    8e74:	add	w1, w1, #0x4
    8e78:	cmp	w5, w2, lsr #8
    8e7c:	b.ls	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.plast
    8e80:	ubfiz	x0, x0, #2, #24
    8e84:	add	w3, w7, #0x5
    8e88:	ldr	w0, [x10, x0]
    8e8c:	and	w2, w0, #0xff
    8e90:	lsr	w0, w0, #8
    8e94:	b	8d98 <BZ2_bzDecompress@@Base+0x980>
    8e98:	mov	w1, #0x1                   	// #1
    8e9c:	ldr	x3, [x19]
    8ea0:	ldr	w5, [x3, #36]
    8ea4:	add	w2, w5, w4
    8ea8:	sub	w2, w2, w9
    8eac:	str	w2, [x3, #36]
    8eb0:	cmp	w5, w2
    8eb4:	b.ls	8ec4 <BZ2_bzDecompress@@Base+0xaac>  // b.plast
    8eb8:	ldr	w2, [x3, #40]
    8ebc:	add	w2, w2, #0x1
    8ec0:	str	w2, [x3, #40]
    8ec4:	strb	w11, [x19, #12]
    8ec8:	str	w1, [x19, #16]
    8ecc:	stp	w0, w6, [x19, #60]
    8ed0:	str	w7, [x19, #1092]
    8ed4:	str	x10, [x19, #3152]
    8ed8:	str	w8, [x19, #3184]
    8edc:	str	x12, [x3, #24]
    8ee0:	str	w9, [x3, #32]
    8ee4:	add	x0, x19, #0xc, lsl #12
    8ee8:	ldr	w1, [x19, #1092]
    8eec:	ldr	w0, [x0, #14928]
    8ef0:	add	w0, w0, #0x1
    8ef4:	cmp	w1, w0
    8ef8:	b.eq	8f38 <BZ2_bzDecompress@@Base+0xb20>  // b.none
    8efc:	mov	w23, #0x0                   	// #0
    8f00:	b	900c <BZ2_bzDecompress@@Base+0xbf4>
    8f04:	mov	w1, #0x0                   	// #0
    8f08:	b	8e9c <BZ2_bzDecompress@@Base+0xa84>
    8f0c:	cmp	w0, #0x9
    8f10:	b.le	845c <BZ2_bzDecompress@@Base+0x44>
    8f14:	b	8fb8 <BZ2_bzDecompress@@Base+0xba0>
    8f18:	ldr	w0, [x19, #8]
    8f1c:	cmp	w0, #0x2
    8f20:	b.eq	8458 <BZ2_bzDecompress@@Base+0x40>  // b.none
    8f24:	b	900c <BZ2_bzDecompress@@Base+0xbf4>
    8f28:	mov	w23, #0xfffffffe            	// #-2
    8f2c:	b	900c <BZ2_bzDecompress@@Base+0xbf4>
    8f30:	mov	w23, #0xffffffff            	// #-1
    8f34:	b	900c <BZ2_bzDecompress@@Base+0xbf4>
    8f38:	ldr	w0, [x19, #16]
    8f3c:	cbnz	w0, 8efc <BZ2_bzDecompress@@Base+0xae4>
    8f40:	ldr	w3, [x19, #3184]
    8f44:	ldr	w0, [x19, #52]
    8f48:	mvn	w3, w3
    8f4c:	str	w3, [x19, #3184]
    8f50:	cmp	w0, #0x2
    8f54:	b.le	8f74 <BZ2_bzDecompress@@Base+0xb5c>
    8f58:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    8f5c:	ldr	w2, [x19, #3176]
    8f60:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    8f64:	add	x1, x1, #0x24e
    8f68:	ldr	x0, [x0, #4016]
    8f6c:	ldr	x0, [x0]
    8f70:	bl	1730 <fprintf@plt>
    8f74:	ldr	w0, [x19, #52]
    8f78:	cmp	w0, #0x1
    8f7c:	b.le	8f94 <BZ2_bzDecompress@@Base+0xb7c>
    8f80:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    8f84:	ldr	x0, [x0, #4016]
    8f88:	ldr	x1, [x0]
    8f8c:	mov	w0, #0x5d                  	// #93
    8f90:	bl	1500 <fputc@plt>
    8f94:	ldr	w0, [x19, #3176]
    8f98:	ldr	w1, [x19, #3184]
    8f9c:	cmp	w1, w0
    8fa0:	b.ne	9008 <BZ2_bzDecompress@@Base+0xbf0>  // b.any
    8fa4:	ldr	w0, [x19, #3188]
    8fa8:	eor	w0, w1, w0, ror #31
    8fac:	str	w0, [x19, #3188]
    8fb0:	mov	w0, #0xe                   	// #14
    8fb4:	str	w0, [x19, #8]
    8fb8:	mov	x0, x19
    8fbc:	bl	15e0 <BZ2_decompress@plt>
    8fc0:	mov	w23, w0
    8fc4:	cmp	w0, #0x4
    8fc8:	b.ne	8f18 <BZ2_bzDecompress@@Base+0xb00>  // b.any
    8fcc:	ldr	w0, [x19, #52]
    8fd0:	cmp	w0, #0x2
    8fd4:	b.le	8ff8 <BZ2_bzDecompress@@Base+0xbe0>
    8fd8:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    8fdc:	ldr	w2, [x19, #3180]
    8fe0:	ldr	w3, [x19, #3188]
    8fe4:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    8fe8:	ldr	x0, [x0, #4016]
    8fec:	add	x1, x1, #0x260
    8ff0:	ldr	x0, [x0]
    8ff4:	bl	1730 <fprintf@plt>
    8ff8:	ldr	w0, [x19, #3180]
    8ffc:	ldr	w1, [x19, #3188]
    9000:	cmp	w1, w0
    9004:	b.eq	900c <BZ2_bzDecompress@@Base+0xbf4>  // b.none
    9008:	mov	w23, #0xfffffffc            	// #-4
    900c:	mov	w0, w23
    9010:	ldp	x19, x20, [sp, #16]
    9014:	ldp	x21, x22, [sp, #32]
    9018:	ldp	x23, x24, [sp, #48]
    901c:	ldr	x25, [sp, #64]
    9020:	ldp	x29, x30, [sp], #80
    9024:	ret

0000000000009028 <BZ2_bzDecompressEnd@@Base>:
    9028:	cbz	x0, 90a0 <BZ2_bzDecompressEnd@@Base+0x78>
    902c:	stp	x29, x30, [sp, #-32]!
    9030:	mov	x29, sp
    9034:	stp	x19, x20, [sp, #16]
    9038:	mov	x19, x0
    903c:	ldr	x20, [x0, #48]
    9040:	cbz	x20, 90a8 <BZ2_bzDecompressEnd@@Base+0x80>
    9044:	ldr	x0, [x20]
    9048:	cmp	x0, x19
    904c:	b.ne	90a8 <BZ2_bzDecompressEnd@@Base+0x80>  // b.any
    9050:	ldr	x1, [x20, #3152]
    9054:	cbz	x1, 9060 <BZ2_bzDecompressEnd@@Base+0x38>
    9058:	ldp	x2, x0, [x19, #64]
    905c:	blr	x2
    9060:	ldr	x1, [x20, #3160]
    9064:	cbz	x1, 9070 <BZ2_bzDecompressEnd@@Base+0x48>
    9068:	ldp	x2, x0, [x19, #64]
    906c:	blr	x2
    9070:	ldr	x1, [x20, #3168]
    9074:	cbz	x1, 9080 <BZ2_bzDecompressEnd@@Base+0x58>
    9078:	ldp	x2, x0, [x19, #64]
    907c:	blr	x2
    9080:	ldp	x2, x0, [x19, #64]
    9084:	ldr	x1, [x19, #48]
    9088:	blr	x2
    908c:	str	xzr, [x19, #48]
    9090:	mov	w0, #0x0                   	// #0
    9094:	ldp	x19, x20, [sp, #16]
    9098:	ldp	x29, x30, [sp], #32
    909c:	ret
    90a0:	mov	w0, #0xfffffffe            	// #-2
    90a4:	ret
    90a8:	mov	w0, #0xfffffffe            	// #-2
    90ac:	b	9094 <BZ2_bzDecompressEnd@@Base+0x6c>

00000000000090b0 <BZ2_bzWriteOpen@@Base>:
    90b0:	stp	x29, x30, [sp, #-80]!
    90b4:	mov	x29, sp
    90b8:	stp	x19, x20, [sp, #16]
    90bc:	mov	x20, x0
    90c0:	stp	x21, x22, [sp, #32]
    90c4:	mov	x21, x1
    90c8:	mov	w22, w4
    90cc:	stp	x23, x24, [sp, #48]
    90d0:	mov	w23, w2
    90d4:	mov	w24, w3
    90d8:	str	x25, [sp, #64]
    90dc:	cbz	x0, 91b8 <BZ2_bzWriteOpen@@Base+0x108>
    90e0:	str	wzr, [x0]
    90e4:	cbnz	x1, 91bc <BZ2_bzWriteOpen@@Base+0x10c>
    90e8:	mov	w0, #0xfffffffe            	// #-2
    90ec:	str	w0, [x20]
    90f0:	b	91d8 <BZ2_bzWriteOpen@@Base+0x128>
    90f4:	mov	x0, x21
    90f8:	bl	1740 <ferror@plt>
    90fc:	cbz	w0, 910c <BZ2_bzWriteOpen@@Base+0x5c>
    9100:	cbz	x20, 91d8 <BZ2_bzWriteOpen@@Base+0x128>
    9104:	mov	w0, #0xfffffffa            	// #-6
    9108:	b	90ec <BZ2_bzWriteOpen@@Base+0x3c>
    910c:	mov	x0, #0x13f0                	// #5104
    9110:	bl	1520 <malloc@plt>
    9114:	mov	x19, x0
    9118:	cbnz	x0, 9144 <BZ2_bzWriteOpen@@Base+0x94>
    911c:	cbz	x20, 91d8 <BZ2_bzWriteOpen@@Base+0x128>
    9120:	mov	w0, #0xfffffffd            	// #-3
    9124:	str	w0, [x20]
    9128:	mov	x0, x19
    912c:	ldp	x19, x20, [sp, #16]
    9130:	ldp	x21, x22, [sp, #32]
    9134:	ldp	x23, x24, [sp, #48]
    9138:	ldr	x25, [sp, #64]
    913c:	ldp	x29, x30, [sp], #80
    9140:	ret
    9144:	cbz	x20, 914c <BZ2_bzWriteOpen@@Base+0x9c>
    9148:	str	wzr, [x20]
    914c:	add	x25, x19, #0x1, lsl #12
    9150:	str	wzr, [x19, #5096]
    9154:	cmp	w22, #0x0
    9158:	mov	w3, #0x1e                  	// #30
    915c:	mov	x0, #0x1398                	// #5016
    9160:	csel	w3, w22, w3, ne  // ne = any
    9164:	strb	wzr, [x25, #1004]
    9168:	mov	w2, w24
    916c:	str	x21, [x19]
    9170:	mov	w21, #0x1                   	// #1
    9174:	str	wzr, [x19, #5008]
    9178:	mov	w1, w23
    917c:	strb	w21, [x25, #916]
    9180:	add	x0, x19, x0
    9184:	str	xzr, [x19, #5072]
    9188:	str	xzr, [x19, #5080]
    918c:	str	xzr, [x19, #5088]
    9190:	bl	15a0 <BZ2_bzCompressInit@plt>
    9194:	cbz	w0, 91ac <BZ2_bzWriteOpen@@Base+0xfc>
    9198:	cbz	x20, 91a0 <BZ2_bzWriteOpen@@Base+0xf0>
    919c:	str	w0, [x20]
    91a0:	mov	x0, x19
    91a4:	bl	1660 <free@plt>
    91a8:	b	91d8 <BZ2_bzWriteOpen@@Base+0x128>
    91ac:	str	wzr, [x19, #5024]
    91b0:	strb	w21, [x25, #1004]
    91b4:	b	9128 <BZ2_bzWriteOpen@@Base+0x78>
    91b8:	cbz	x1, 91d8 <BZ2_bzWriteOpen@@Base+0x128>
    91bc:	sub	w0, w23, #0x1
    91c0:	cmp	w0, #0x8
    91c4:	b.hi	91d4 <BZ2_bzWriteOpen@@Base+0x124>  // b.pmore
    91c8:	cmp	w22, #0xfa
    91cc:	ccmp	w24, #0x4, #0x2, ls  // ls = plast
    91d0:	b.ls	90f4 <BZ2_bzWriteOpen@@Base+0x44>  // b.plast
    91d4:	cbnz	x20, 90e8 <BZ2_bzWriteOpen@@Base+0x38>
    91d8:	mov	x19, #0x0                   	// #0
    91dc:	b	9128 <BZ2_bzWriteOpen@@Base+0x78>

00000000000091e0 <BZ2_bzWrite@@Base>:
    91e0:	stp	x29, x30, [sp, #-80]!
    91e4:	mov	x29, sp
    91e8:	stp	x19, x20, [sp, #16]
    91ec:	mov	x20, x0
    91f0:	mov	x19, x1
    91f4:	stp	x21, x22, [sp, #32]
    91f8:	mov	x22, x2
    91fc:	mov	w21, w3
    9200:	stp	x23, x24, [sp, #48]
    9204:	str	x25, [sp, #64]
    9208:	cbz	x0, 931c <BZ2_bzWrite@@Base+0x13c>
    920c:	str	wzr, [x0]
    9210:	cbz	x1, 9224 <BZ2_bzWrite@@Base+0x44>
    9214:	str	wzr, [x19, #5096]
    9218:	cbz	x22, 9220 <BZ2_bzWrite@@Base+0x40>
    921c:	tbz	w21, #31, 923c <BZ2_bzWrite@@Base+0x5c>
    9220:	cbz	x20, 9230 <BZ2_bzWrite@@Base+0x50>
    9224:	mov	w0, #0xfffffffe            	// #-2
    9228:	str	w0, [x20]
    922c:	cbz	x19, 9288 <BZ2_bzWrite@@Base+0xa8>
    9230:	mov	w0, #0xfffffffe            	// #-2
    9234:	str	w0, [x19, #5096]
    9238:	b	9288 <BZ2_bzWrite@@Base+0xa8>
    923c:	add	x0, x19, #0x1, lsl #12
    9240:	ldrb	w0, [x0, #916]
    9244:	cbnz	w0, 9258 <BZ2_bzWrite@@Base+0x78>
    9248:	mov	w0, #0xffffffff            	// #-1
    924c:	cbz	x20, 9234 <BZ2_bzWrite@@Base+0x54>
    9250:	str	w0, [x20]
    9254:	b	9234 <BZ2_bzWrite@@Base+0x54>
    9258:	ldr	x0, [x19]
    925c:	bl	1740 <ferror@plt>
    9260:	cbz	w0, 9278 <BZ2_bzWrite@@Base+0x98>
    9264:	cbz	x20, 9270 <BZ2_bzWrite@@Base+0x90>
    9268:	mov	w0, #0xfffffffa            	// #-6
    926c:	str	w0, [x20]
    9270:	mov	w0, #0xfffffffa            	// #-6
    9274:	b	9234 <BZ2_bzWrite@@Base+0x54>
    9278:	cbnz	w21, 92a0 <BZ2_bzWrite@@Base+0xc0>
    927c:	cbz	x20, 9284 <BZ2_bzWrite@@Base+0xa4>
    9280:	str	wzr, [x20]
    9284:	str	wzr, [x19, #5096]
    9288:	ldp	x19, x20, [sp, #16]
    928c:	ldp	x21, x22, [sp, #32]
    9290:	ldp	x23, x24, [sp, #48]
    9294:	ldr	x25, [sp, #64]
    9298:	ldp	x29, x30, [sp], #80
    929c:	ret
    92a0:	mov	x0, #0x1398                	// #5016
    92a4:	add	x23, x19, x0
    92a8:	str	x22, [x19, #5016]
    92ac:	add	x22, x19, #0x8
    92b0:	mov	w24, #0x1387                	// #4999
    92b4:	str	w21, [x19, #5024]
    92b8:	mov	w21, #0x1388                	// #5000
    92bc:	str	x22, [x19, #5040]
    92c0:	mov	x0, x23
    92c4:	str	w21, [x19, #5048]
    92c8:	mov	w1, #0x0                   	// #0
    92cc:	bl	1600 <BZ2_bzCompress@plt>
    92d0:	cmp	w0, #0x1
    92d4:	b.ne	924c <BZ2_bzWrite@@Base+0x6c>  // b.any
    92d8:	ldr	w2, [x19, #5048]
    92dc:	cmp	w2, w24
    92e0:	b.hi	9310 <BZ2_bzWrite@@Base+0x130>  // b.pmore
    92e4:	ldr	x3, [x19]
    92e8:	sub	w25, w21, w2
    92ec:	mov	x0, x22
    92f0:	sub	w2, w21, w2
    92f4:	mov	x1, #0x1                   	// #1
    92f8:	bl	16d0 <fwrite@plt>
    92fc:	cmp	w25, w0
    9300:	b.ne	9264 <BZ2_bzWrite@@Base+0x84>  // b.any
    9304:	ldr	x0, [x19]
    9308:	bl	1740 <ferror@plt>
    930c:	cbnz	w0, 9264 <BZ2_bzWrite@@Base+0x84>
    9310:	ldr	w0, [x19, #5024]
    9314:	cbnz	w0, 92bc <BZ2_bzWrite@@Base+0xdc>
    9318:	b	927c <BZ2_bzWrite@@Base+0x9c>
    931c:	cbnz	x1, 9214 <BZ2_bzWrite@@Base+0x34>
    9320:	b	9288 <BZ2_bzWrite@@Base+0xa8>

0000000000009324 <BZ2_bzWriteClose64@@Base>:
    9324:	stp	x29, x30, [sp, #-112]!
    9328:	mov	x29, sp
    932c:	stp	x19, x20, [sp, #16]
    9330:	mov	x20, x0
    9334:	stp	x21, x22, [sp, #32]
    9338:	stp	x23, x24, [sp, #48]
    933c:	stp	x25, x26, [sp, #64]
    9340:	stp	x27, x28, [sp, #80]
    9344:	cbnz	x1, 936c <BZ2_bzWriteClose64@@Base+0x48>
    9348:	cbz	x0, 9350 <BZ2_bzWriteClose64@@Base+0x2c>
    934c:	str	wzr, [x0]
    9350:	ldp	x19, x20, [sp, #16]
    9354:	ldp	x21, x22, [sp, #32]
    9358:	ldp	x23, x24, [sp, #48]
    935c:	ldp	x25, x26, [sp, #64]
    9360:	ldp	x27, x28, [sp, #80]
    9364:	ldp	x29, x30, [sp], #112
    9368:	ret
    936c:	add	x0, x1, #0x1, lsl #12
    9370:	mov	x19, x1
    9374:	ldrb	w0, [x0, #916]
    9378:	cbnz	w0, 9390 <BZ2_bzWriteClose64@@Base+0x6c>
    937c:	mov	w0, #0xffffffff            	// #-1
    9380:	cbz	x20, 9388 <BZ2_bzWriteClose64@@Base+0x64>
    9384:	str	w0, [x20]
    9388:	str	w0, [x19, #5096]
    938c:	b	9350 <BZ2_bzWriteClose64@@Base+0x2c>
    9390:	ldr	x0, [x1]
    9394:	mov	w25, w2
    9398:	mov	x21, x3
    939c:	mov	x22, x4
    93a0:	mov	x23, x5
    93a4:	mov	x24, x6
    93a8:	bl	1740 <ferror@plt>
    93ac:	cbz	w0, 93c4 <BZ2_bzWriteClose64@@Base+0xa0>
    93b0:	cbz	x20, 93bc <BZ2_bzWriteClose64@@Base+0x98>
    93b4:	mov	w0, #0xfffffffa            	// #-6
    93b8:	str	w0, [x20]
    93bc:	mov	w0, #0xfffffffa            	// #-6
    93c0:	b	9388 <BZ2_bzWriteClose64@@Base+0x64>
    93c4:	cbz	x21, 93cc <BZ2_bzWriteClose64@@Base+0xa8>
    93c8:	str	wzr, [x21]
    93cc:	cbz	x22, 93d4 <BZ2_bzWriteClose64@@Base+0xb0>
    93d0:	str	wzr, [x22]
    93d4:	cbz	x23, 93dc <BZ2_bzWriteClose64@@Base+0xb8>
    93d8:	str	wzr, [x23]
    93dc:	cbz	x24, 93e4 <BZ2_bzWriteClose64@@Base+0xc0>
    93e0:	str	wzr, [x24]
    93e4:	cbnz	w25, 94a0 <BZ2_bzWriteClose64@@Base+0x17c>
    93e8:	ldr	w0, [x19, #5096]
    93ec:	cbnz	w0, 9480 <BZ2_bzWriteClose64@@Base+0x15c>
    93f0:	mov	x1, #0x1398                	// #5016
    93f4:	add	x26, x19, #0x8
    93f8:	add	x27, x19, x1
    93fc:	mov	w25, #0x1388                	// #5000
    9400:	str	x26, [x19, #5040]
    9404:	mov	x0, x27
    9408:	str	w25, [x19, #5048]
    940c:	mov	w1, #0x2                   	// #2
    9410:	bl	1600 <BZ2_bzCompress@plt>
    9414:	mov	w28, w0
    9418:	sub	w0, w0, #0x3
    941c:	cmp	w0, #0x1
    9420:	b.ls	9434 <BZ2_bzWriteClose64@@Base+0x110>  // b.plast
    9424:	cbz	x20, 942c <BZ2_bzWriteClose64@@Base+0x108>
    9428:	str	w28, [x20]
    942c:	str	w28, [x19, #5096]
    9430:	b	9350 <BZ2_bzWriteClose64@@Base+0x2c>
    9434:	ldr	w2, [x19, #5048]
    9438:	mov	w0, #0x1387                	// #4999
    943c:	cmp	w2, w0
    9440:	b.hi	9478 <BZ2_bzWriteClose64@@Base+0x154>  // b.pmore
    9444:	ldr	x3, [x19]
    9448:	sub	w5, w25, w2
    944c:	mov	x0, x26
    9450:	sub	w2, w25, w2
    9454:	mov	x1, #0x1                   	// #1
    9458:	str	w5, [sp, #108]
    945c:	bl	16d0 <fwrite@plt>
    9460:	ldr	w5, [sp, #108]
    9464:	cmp	w5, w0
    9468:	b.ne	93b0 <BZ2_bzWriteClose64@@Base+0x8c>  // b.any
    946c:	ldr	x0, [x19]
    9470:	bl	1740 <ferror@plt>
    9474:	cbnz	w0, 93b0 <BZ2_bzWriteClose64@@Base+0x8c>
    9478:	cmp	w28, #0x4
    947c:	b.ne	9400 <BZ2_bzWriteClose64@@Base+0xdc>  // b.any
    9480:	ldr	x0, [x19]
    9484:	bl	1740 <ferror@plt>
    9488:	cbnz	w0, 94a0 <BZ2_bzWriteClose64@@Base+0x17c>
    948c:	ldr	x0, [x19]
    9490:	bl	16e0 <fflush@plt>
    9494:	ldr	x0, [x19]
    9498:	bl	1740 <ferror@plt>
    949c:	cbnz	w0, 93b0 <BZ2_bzWriteClose64@@Base+0x8c>
    94a0:	cbz	x21, 94ac <BZ2_bzWriteClose64@@Base+0x188>
    94a4:	ldr	w0, [x19, #5028]
    94a8:	str	w0, [x21]
    94ac:	cbz	x22, 94b8 <BZ2_bzWriteClose64@@Base+0x194>
    94b0:	ldr	w0, [x19, #5032]
    94b4:	str	w0, [x22]
    94b8:	cbz	x23, 94c4 <BZ2_bzWriteClose64@@Base+0x1a0>
    94bc:	ldr	w0, [x19, #5052]
    94c0:	str	w0, [x23]
    94c4:	cbz	x24, 94d0 <BZ2_bzWriteClose64@@Base+0x1ac>
    94c8:	ldr	w0, [x19, #5056]
    94cc:	str	w0, [x24]
    94d0:	cbz	x20, 94d8 <BZ2_bzWriteClose64@@Base+0x1b4>
    94d4:	str	wzr, [x20]
    94d8:	str	wzr, [x19, #5096]
    94dc:	mov	x0, #0x1398                	// #5016
    94e0:	add	x0, x19, x0
    94e4:	bl	15b0 <BZ2_bzCompressEnd@plt>
    94e8:	mov	x0, x19
    94ec:	ldp	x19, x20, [sp, #16]
    94f0:	ldp	x21, x22, [sp, #32]
    94f4:	ldp	x23, x24, [sp, #48]
    94f8:	ldp	x25, x26, [sp, #64]
    94fc:	ldp	x27, x28, [sp, #80]
    9500:	ldp	x29, x30, [sp], #112
    9504:	b	1660 <free@plt>

0000000000009508 <BZ2_bzWriteClose@@Base>:
    9508:	mov	x5, x4
    950c:	mov	x6, #0x0                   	// #0
    9510:	mov	x4, #0x0                   	// #0
    9514:	b	16a0 <BZ2_bzWriteClose64@plt>

0000000000009518 <BZ2_bzReadOpen@@Base>:
    9518:	stp	x29, x30, [sp, #-80]!
    951c:	mov	x29, sp
    9520:	stp	x19, x20, [sp, #16]
    9524:	mov	x20, x0
    9528:	stp	x21, x22, [sp, #32]
    952c:	mov	x22, x4
    9530:	mov	w21, w5
    9534:	stp	x23, x24, [sp, #48]
    9538:	mov	x23, x1
    953c:	mov	w24, w2
    9540:	stp	x25, x26, [sp, #64]
    9544:	mov	w25, w3
    9548:	cbz	x0, 9550 <BZ2_bzReadOpen@@Base+0x38>
    954c:	str	wzr, [x0]
    9550:	cmp	x23, #0x0
    9554:	ccmp	w25, #0x1, #0x2, ne  // ne = any
    9558:	b.hi	9580 <BZ2_bzReadOpen@@Base+0x68>  // b.pmore
    955c:	cmp	w24, #0x4
    9560:	b.hi	9580 <BZ2_bzReadOpen@@Base+0x68>  // b.pmore
    9564:	cmp	x22, #0x0
    9568:	ccmp	w21, #0x0, #0x4, eq  // eq = none
    956c:	b.ne	9580 <BZ2_bzReadOpen@@Base+0x68>  // b.any
    9570:	cmp	x22, #0x0
    9574:	mov	w0, #0x1388                	// #5000
    9578:	ccmp	w21, w0, #0x0, ne  // ne = any
    957c:	b.ls	95b0 <BZ2_bzReadOpen@@Base+0x98>  // b.plast
    9580:	cbnz	x20, 95a4 <BZ2_bzReadOpen@@Base+0x8c>
    9584:	mov	x19, #0x0                   	// #0
    9588:	mov	x0, x19
    958c:	ldp	x19, x20, [sp, #16]
    9590:	ldp	x21, x22, [sp, #32]
    9594:	ldp	x23, x24, [sp, #48]
    9598:	ldp	x25, x26, [sp, #64]
    959c:	ldp	x29, x30, [sp], #80
    95a0:	ret
    95a4:	mov	w0, #0xfffffffe            	// #-2
    95a8:	str	w0, [x20]
    95ac:	b	9584 <BZ2_bzReadOpen@@Base+0x6c>
    95b0:	mov	x0, x23
    95b4:	bl	1740 <ferror@plt>
    95b8:	cbz	w0, 95c8 <BZ2_bzReadOpen@@Base+0xb0>
    95bc:	cbz	x20, 9584 <BZ2_bzReadOpen@@Base+0x6c>
    95c0:	mov	w0, #0xfffffffa            	// #-6
    95c4:	b	95a8 <BZ2_bzReadOpen@@Base+0x90>
    95c8:	mov	x0, #0x13f0                	// #5104
    95cc:	bl	1520 <malloc@plt>
    95d0:	mov	x19, x0
    95d4:	cbnz	x0, 95e8 <BZ2_bzReadOpen@@Base+0xd0>
    95d8:	cbz	x20, 9584 <BZ2_bzReadOpen@@Base+0x6c>
    95dc:	mov	w0, #0xfffffffd            	// #-3
    95e0:	str	w0, [x20]
    95e4:	b	9588 <BZ2_bzReadOpen@@Base+0x70>
    95e8:	cbz	x20, 95f0 <BZ2_bzReadOpen@@Base+0xd8>
    95ec:	str	wzr, [x20]
    95f0:	add	x26, x19, #0x1, lsl #12
    95f4:	str	wzr, [x19, #5096]
    95f8:	mov	x0, #0x0                   	// #0
    95fc:	strb	wzr, [x26, #1004]
    9600:	str	x23, [x19]
    9604:	str	wzr, [x19, #5008]
    9608:	strb	wzr, [x26, #916]
    960c:	str	xzr, [x19, #5072]
    9610:	str	xzr, [x19, #5080]
    9614:	str	xzr, [x19, #5088]
    9618:	sub	w1, w21, w0
    961c:	cmp	w1, #0x0
    9620:	b.gt	9650 <BZ2_bzReadOpen@@Base+0x138>
    9624:	mov	x0, #0x1398                	// #5016
    9628:	mov	w2, w25
    962c:	mov	w1, w24
    9630:	add	x0, x19, x0
    9634:	bl	1530 <BZ2_bzDecompressInit@plt>
    9638:	cbz	w0, 9670 <BZ2_bzReadOpen@@Base+0x158>
    963c:	cbz	x20, 9644 <BZ2_bzReadOpen@@Base+0x12c>
    9640:	str	w0, [x20]
    9644:	mov	x0, x19
    9648:	bl	1660 <free@plt>
    964c:	b	9584 <BZ2_bzReadOpen@@Base+0x6c>
    9650:	ldr	w1, [x19, #5008]
    9654:	ldrb	w3, [x22, x0]
    9658:	add	x0, x0, #0x1
    965c:	add	x2, x19, w1, sxtw
    9660:	add	w1, w1, #0x1
    9664:	strb	w3, [x2, #8]
    9668:	str	w1, [x19, #5008]
    966c:	b	9618 <BZ2_bzReadOpen@@Base+0x100>
    9670:	ldr	w0, [x19, #5008]
    9674:	str	w0, [x19, #5024]
    9678:	add	x0, x19, #0x8
    967c:	str	x0, [x19, #5016]
    9680:	mov	w0, #0x1                   	// #1
    9684:	strb	w0, [x26, #1004]
    9688:	b	9588 <BZ2_bzReadOpen@@Base+0x70>
    968c:	mov	x12, #0x13f0                	// #5104
    9690:	sub	sp, sp, x12
    9694:	stp	x29, x30, [sp]
    9698:	mov	x29, sp
    969c:	stp	x23, x24, [sp, #48]
    96a0:	mov	x23, x0
    96a4:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    96a8:	stp	x19, x20, [sp, #16]
    96ac:	ldrb	w0, [x0, #580]
    96b0:	stp	x21, x22, [sp, #32]
    96b4:	stp	x25, x26, [sp, #64]
    96b8:	strb	w0, [sp, #88]
    96bc:	stur	xzr, [sp, #89]
    96c0:	strb	wzr, [sp, #97]
    96c4:	cbnz	x2, 9800 <BZ2_bzReadOpen@@Base+0x2e8>
    96c8:	mov	x20, #0x0                   	// #0
    96cc:	mov	x0, x20
    96d0:	mov	x12, #0x13f0                	// #5104
    96d4:	ldp	x29, x30, [sp]
    96d8:	ldp	x19, x20, [sp, #16]
    96dc:	ldp	x21, x22, [sp, #32]
    96e0:	ldp	x23, x24, [sp, #48]
    96e4:	ldp	x25, x26, [sp, #64]
    96e8:	add	sp, sp, x12
    96ec:	ret
    96f0:	cmp	w19, #0x73
    96f4:	b.eq	97e8 <BZ2_bzReadOpen@@Base+0x2d0>  // b.none
    96f8:	cmp	w19, #0x77
    96fc:	b.eq	97f0 <BZ2_bzReadOpen@@Base+0x2d8>  // b.none
    9700:	cmp	w19, #0x72
    9704:	b.eq	97f8 <BZ2_bzReadOpen@@Base+0x2e0>  // b.none
    9708:	bl	1620 <__ctype_b_loc@plt>
    970c:	ldr	x0, [x0]
    9710:	ubfiz	x1, x19, #1, #8
    9714:	ldrh	w0, [x0, x1]
    9718:	tbz	w0, #11, 9720 <BZ2_bzReadOpen@@Base+0x208>
    971c:	sub	w20, w19, #0x30
    9720:	add	x21, x21, #0x1
    9724:	ldrb	w19, [x21]
    9728:	cbnz	w19, 96f0 <BZ2_bzReadOpen@@Base+0x1d8>
    972c:	add	x2, sp, #0x58
    9730:	cmp	w22, #0x0
    9734:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    9738:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    973c:	add	x0, x0, #0x299
    9740:	add	x1, x1, #0x297
    9744:	csel	x1, x1, x0, ne  // ne = any
    9748:	mov	x0, x2
    974c:	bl	1560 <strcat@plt>
    9750:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    9754:	add	x1, x1, #0x29b
    9758:	bl	1560 <strcat@plt>
    975c:	mov	x2, x0
    9760:	cbnz	w26, 9868 <BZ2_bzReadOpen@@Base+0x350>
    9764:	cbz	x23, 9770 <BZ2_bzReadOpen@@Base+0x258>
    9768:	ldrb	w0, [x23]
    976c:	cbnz	w0, 984c <BZ2_bzReadOpen@@Base+0x334>
    9770:	cbz	w22, 981c <BZ2_bzReadOpen@@Base+0x304>
    9774:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    9778:	ldr	x0, [x0, #4032]
    977c:	ldr	x19, [x0]
    9780:	cbz	x19, 96c8 <BZ2_bzReadOpen@@Base+0x1b0>
    9784:	cmp	w20, #0x9
    9788:	mov	w2, #0x9                   	// #9
    978c:	csel	w2, w20, w2, le
    9790:	mov	x1, x19
    9794:	cmp	w2, #0x0
    9798:	add	x0, sp, #0x54
    979c:	csinc	w2, w2, wzr, gt
    97a0:	mov	w4, #0x1e                  	// #30
    97a4:	mov	w3, #0x0                   	// #0
    97a8:	bl	1590 <BZ2_bzWriteOpen@plt>
    97ac:	mov	x20, x0
    97b0:	cbnz	x0, 96cc <BZ2_bzReadOpen@@Base+0x1b4>
    97b4:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    97b8:	ldr	x0, [x0, #4040]
    97bc:	ldr	x0, [x0]
    97c0:	cmp	x0, x19
    97c4:	b.eq	96c8 <BZ2_bzReadOpen@@Base+0x1b0>  // b.none
    97c8:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    97cc:	ldr	x0, [x0, #4032]
    97d0:	ldr	x0, [x0]
    97d4:	cmp	x0, x19
    97d8:	b.eq	96c8 <BZ2_bzReadOpen@@Base+0x1b0>  // b.none
    97dc:	mov	x0, x19
    97e0:	bl	1510 <fclose@plt>
    97e4:	b	96cc <BZ2_bzReadOpen@@Base+0x1b4>
    97e8:	mov	w24, #0x1                   	// #1
    97ec:	b	9720 <BZ2_bzReadOpen@@Base+0x208>
    97f0:	mov	w22, #0x1                   	// #1
    97f4:	b	9720 <BZ2_bzReadOpen@@Base+0x208>
    97f8:	mov	w22, #0x0                   	// #0
    97fc:	b	9720 <BZ2_bzReadOpen@@Base+0x208>
    9800:	mov	w25, w1
    9804:	mov	x21, x2
    9808:	mov	w26, w3
    980c:	mov	w24, #0x0                   	// #0
    9810:	mov	w22, #0x0                   	// #0
    9814:	mov	w20, #0x9                   	// #9
    9818:	b	9724 <BZ2_bzReadOpen@@Base+0x20c>
    981c:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    9820:	ldr	x0, [x0, #4040]
    9824:	ldr	x19, [x0]
    9828:	cbz	x19, 96c8 <BZ2_bzReadOpen@@Base+0x1b0>
    982c:	add	x4, sp, #0x68
    9830:	mov	w3, w24
    9834:	mov	x1, x19
    9838:	add	x0, sp, #0x54
    983c:	mov	w5, #0x0                   	// #0
    9840:	mov	w2, #0x0                   	// #0
    9844:	bl	1700 <BZ2_bzReadOpen@plt>
    9848:	b	97ac <BZ2_bzReadOpen@@Base+0x294>
    984c:	mov	x1, x2
    9850:	mov	x0, x23
    9854:	bl	16f0 <fopen64@plt>
    9858:	mov	x19, x0
    985c:	cbz	x0, 96c8 <BZ2_bzReadOpen@@Base+0x1b0>
    9860:	cbz	w22, 982c <BZ2_bzReadOpen@@Base+0x314>
    9864:	b	9784 <BZ2_bzReadOpen@@Base+0x26c>
    9868:	mov	x1, x0
    986c:	mov	w0, w25
    9870:	bl	1580 <fdopen@plt>
    9874:	b	9858 <BZ2_bzReadOpen@@Base+0x340>

0000000000009878 <BZ2_bzReadClose@@Base>:
    9878:	stp	x29, x30, [sp, #-32]!
    987c:	mov	x29, sp
    9880:	str	x19, [sp, #16]
    9884:	mov	x19, x1
    9888:	cbz	x0, 9890 <BZ2_bzReadClose@@Base+0x18>
    988c:	str	wzr, [x0]
    9890:	cbz	x19, 98b4 <BZ2_bzReadClose@@Base+0x3c>
    9894:	add	x1, x19, #0x1, lsl #12
    9898:	str	wzr, [x19, #5096]
    989c:	ldrb	w2, [x1, #916]
    98a0:	cbz	w2, 98c0 <BZ2_bzReadClose@@Base+0x48>
    98a4:	mov	w1, #0xffffffff            	// #-1
    98a8:	cbz	x0, 98b0 <BZ2_bzReadClose@@Base+0x38>
    98ac:	str	w1, [x0]
    98b0:	str	w1, [x19, #5096]
    98b4:	ldr	x19, [sp, #16]
    98b8:	ldp	x29, x30, [sp], #32
    98bc:	ret
    98c0:	ldrb	w0, [x1, #1004]
    98c4:	cbz	w0, 98d4 <BZ2_bzReadClose@@Base+0x5c>
    98c8:	mov	x0, #0x1398                	// #5016
    98cc:	add	x0, x19, x0
    98d0:	bl	1540 <BZ2_bzDecompressEnd@plt>
    98d4:	mov	x0, x19
    98d8:	ldr	x19, [sp, #16]
    98dc:	ldp	x29, x30, [sp], #32
    98e0:	b	1660 <free@plt>

00000000000098e4 <BZ2_bzRead@@Base>:
    98e4:	stp	x29, x30, [sp, #-64]!
    98e8:	mov	x29, sp
    98ec:	stp	x19, x20, [sp, #16]
    98f0:	mov	x20, x0
    98f4:	mov	x19, x1
    98f8:	stp	x21, x22, [sp, #32]
    98fc:	mov	w21, w3
    9900:	stp	x23, x24, [sp, #48]
    9904:	cbz	x0, 9a84 <BZ2_bzRead@@Base+0x1a0>
    9908:	str	wzr, [x0]
    990c:	cbz	x1, 992c <BZ2_bzRead@@Base+0x48>
    9910:	str	wzr, [x19, #5096]
    9914:	cbz	x2, 991c <BZ2_bzRead@@Base+0x38>
    9918:	tbz	w21, #31, 9954 <BZ2_bzRead@@Base+0x70>
    991c:	cbnz	x20, 992c <BZ2_bzRead@@Base+0x48>
    9920:	mov	w0, #0xfffffffe            	// #-2
    9924:	str	w0, [x19, #5096]
    9928:	b	9938 <BZ2_bzRead@@Base+0x54>
    992c:	mov	w0, #0xfffffffe            	// #-2
    9930:	str	w0, [x20]
    9934:	cbnz	x19, 9920 <BZ2_bzRead@@Base+0x3c>
    9938:	mov	w21, #0x0                   	// #0
    993c:	mov	w0, w21
    9940:	ldp	x19, x20, [sp, #16]
    9944:	ldp	x21, x22, [sp, #32]
    9948:	ldp	x23, x24, [sp, #48]
    994c:	ldp	x29, x30, [sp], #64
    9950:	ret
    9954:	add	x0, x19, #0x1, lsl #12
    9958:	ldrb	w0, [x0, #916]
    995c:	cbz	w0, 9970 <BZ2_bzRead@@Base+0x8c>
    9960:	mov	w0, #0xffffffff            	// #-1
    9964:	cbz	x20, 9924 <BZ2_bzRead@@Base+0x40>
    9968:	str	w0, [x20]
    996c:	b	9924 <BZ2_bzRead@@Base+0x40>
    9970:	cbnz	w21, 9984 <BZ2_bzRead@@Base+0xa0>
    9974:	cbz	x20, 997c <BZ2_bzRead@@Base+0x98>
    9978:	str	wzr, [x20]
    997c:	str	wzr, [x19, #5096]
    9980:	b	993c <BZ2_bzRead@@Base+0x58>
    9984:	mov	x0, #0x1398                	// #5016
    9988:	add	x23, x19, #0x8
    998c:	add	x24, x19, x0
    9990:	str	x2, [x19, #5040]
    9994:	str	w21, [x19, #5048]
    9998:	ldr	x0, [x19]
    999c:	bl	1740 <ferror@plt>
    99a0:	cbz	w0, 99b8 <BZ2_bzRead@@Base+0xd4>
    99a4:	cbz	x20, 99b0 <BZ2_bzRead@@Base+0xcc>
    99a8:	mov	w0, #0xfffffffa            	// #-6
    99ac:	str	w0, [x20]
    99b0:	mov	w0, #0xfffffffa            	// #-6
    99b4:	b	9924 <BZ2_bzRead@@Base+0x40>
    99b8:	ldr	w0, [x19, #5024]
    99bc:	cbnz	w0, 9a0c <BZ2_bzRead@@Base+0x128>
    99c0:	ldr	x22, [x19]
    99c4:	mov	x0, x22
    99c8:	bl	1570 <fgetc@plt>
    99cc:	cmn	w0, #0x1
    99d0:	b.eq	9a0c <BZ2_bzRead@@Base+0x128>  // b.none
    99d4:	mov	x1, x22
    99d8:	bl	1670 <ungetc@plt>
    99dc:	ldr	x3, [x19]
    99e0:	mov	x0, x23
    99e4:	mov	x2, #0x1388                	// #5000
    99e8:	mov	x1, #0x1                   	// #1
    99ec:	bl	1640 <fread@plt>
    99f0:	mov	x22, x0
    99f4:	ldr	x0, [x19]
    99f8:	bl	1740 <ferror@plt>
    99fc:	cbnz	w0, 99a4 <BZ2_bzRead@@Base+0xc0>
    9a00:	str	w22, [x19, #5008]
    9a04:	str	x23, [x19, #5016]
    9a08:	str	w22, [x19, #5024]
    9a0c:	mov	x0, x24
    9a10:	bl	1680 <BZ2_bzDecompress@plt>
    9a14:	tst	w0, #0xfffffffb
    9a18:	b.ne	9964 <BZ2_bzRead@@Base+0x80>  // b.any
    9a1c:	cbnz	w0, 9a60 <BZ2_bzRead@@Base+0x17c>
    9a20:	ldr	x22, [x19]
    9a24:	mov	x0, x22
    9a28:	bl	1570 <fgetc@plt>
    9a2c:	cmn	w0, #0x1
    9a30:	b.eq	9a48 <BZ2_bzRead@@Base+0x164>  // b.none
    9a34:	mov	x1, x22
    9a38:	bl	1670 <ungetc@plt>
    9a3c:	ldr	w0, [x19, #5048]
    9a40:	cbnz	w0, 9998 <BZ2_bzRead@@Base+0xb4>
    9a44:	b	9974 <BZ2_bzRead@@Base+0x90>
    9a48:	ldr	w0, [x19, #5024]
    9a4c:	cbnz	w0, 9a3c <BZ2_bzRead@@Base+0x158>
    9a50:	ldr	w0, [x19, #5048]
    9a54:	cbz	w0, 9974 <BZ2_bzRead@@Base+0x90>
    9a58:	mov	w0, #0xfffffff9            	// #-7
    9a5c:	b	9964 <BZ2_bzRead@@Base+0x80>
    9a60:	cmp	w0, #0x4
    9a64:	b.ne	9a3c <BZ2_bzRead@@Base+0x158>  // b.any
    9a68:	cbz	x20, 9a70 <BZ2_bzRead@@Base+0x18c>
    9a6c:	str	w0, [x20]
    9a70:	mov	w0, #0x4                   	// #4
    9a74:	str	w0, [x19, #5096]
    9a78:	ldr	w0, [x19, #5048]
    9a7c:	sub	w21, w21, w0
    9a80:	b	993c <BZ2_bzRead@@Base+0x58>
    9a84:	cbnz	x1, 9910 <BZ2_bzRead@@Base+0x2c>
    9a88:	b	9938 <BZ2_bzRead@@Base+0x54>

0000000000009a8c <BZ2_bzReadGetUnused@@Base>:
    9a8c:	cbnz	x1, 9aa0 <BZ2_bzReadGetUnused@@Base+0x14>
    9a90:	cbz	x0, 9a9c <BZ2_bzReadGetUnused@@Base+0x10>
    9a94:	mov	w1, #0xfffffffe            	// #-2
    9a98:	str	w1, [x0]
    9a9c:	ret
    9aa0:	ldr	w4, [x1, #5096]
    9aa4:	cmp	w4, #0x4
    9aa8:	b.eq	9ac0 <BZ2_bzReadGetUnused@@Base+0x34>  // b.none
    9aac:	mov	w2, #0xffffffff            	// #-1
    9ab0:	cbz	x0, 9ab8 <BZ2_bzReadGetUnused@@Base+0x2c>
    9ab4:	str	w2, [x0]
    9ab8:	str	w2, [x1, #5096]
    9abc:	b	9a9c <BZ2_bzReadGetUnused@@Base+0x10>
    9ac0:	cmp	x2, #0x0
    9ac4:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    9ac8:	b.ne	9ad4 <BZ2_bzReadGetUnused@@Base+0x48>  // b.any
    9acc:	mov	w2, #0xfffffffe            	// #-2
    9ad0:	b	9ab0 <BZ2_bzReadGetUnused@@Base+0x24>
    9ad4:	cbz	x0, 9adc <BZ2_bzReadGetUnused@@Base+0x50>
    9ad8:	str	wzr, [x0]
    9adc:	ldr	w0, [x1, #5024]
    9ae0:	str	wzr, [x1, #5096]
    9ae4:	str	w0, [x3]
    9ae8:	ldr	x0, [x1, #5016]
    9aec:	str	x0, [x2]
    9af0:	b	9a9c <BZ2_bzReadGetUnused@@Base+0x10>

0000000000009af4 <BZ2_bzBuffToBuffCompress@@Base>:
    9af4:	stp	x29, x30, [sp, #-144]!
    9af8:	cmp	x0, #0x0
    9afc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    9b00:	mov	x29, sp
    9b04:	stp	x19, x20, [sp, #16]
    9b08:	mov	x20, x1
    9b0c:	stp	x21, x22, [sp, #32]
    9b10:	stp	x23, x24, [sp, #48]
    9b14:	b.eq	9bf8 <BZ2_bzBuffToBuffCompress@@Base+0x104>  // b.none
    9b18:	mov	x22, x0
    9b1c:	cmp	x2, #0x0
    9b20:	sub	w0, w4, #0x1
    9b24:	mov	x23, x2
    9b28:	mov	w1, w4
    9b2c:	ccmp	w0, #0x8, #0x2, ne  // ne = any
    9b30:	b.hi	9bf8 <BZ2_bzBuffToBuffCompress@@Base+0x104>  // b.pmore
    9b34:	mov	w2, w5
    9b38:	cmp	w5, #0x4
    9b3c:	b.hi	9bf8 <BZ2_bzBuffToBuffCompress@@Base+0x104>  // b.pmore
    9b40:	cmp	w6, #0xfa
    9b44:	b.hi	9bf8 <BZ2_bzBuffToBuffCompress@@Base+0x104>  // b.pmore
    9b48:	cmp	w6, #0x0
    9b4c:	add	x21, sp, #0x40
    9b50:	mov	w24, w3
    9b54:	mov	x0, x21
    9b58:	mov	w3, #0x1e                  	// #30
    9b5c:	csel	w3, w6, w3, ne  // ne = any
    9b60:	stp	xzr, xzr, [sp, #120]
    9b64:	str	xzr, [sp, #136]
    9b68:	bl	15a0 <BZ2_bzCompressInit@plt>
    9b6c:	mov	w19, w0
    9b70:	cbnz	w0, 9bac <BZ2_bzBuffToBuffCompress@@Base+0xb8>
    9b74:	ldr	w0, [x20]
    9b78:	mov	w1, #0x2                   	// #2
    9b7c:	str	x23, [sp, #64]
    9b80:	str	w24, [sp, #72]
    9b84:	str	x22, [sp, #88]
    9b88:	str	w0, [sp, #96]
    9b8c:	mov	x0, x21
    9b90:	bl	1600 <BZ2_bzCompress@plt>
    9b94:	mov	w22, w0
    9b98:	cmp	w0, #0x3
    9b9c:	b.ne	9bc4 <BZ2_bzBuffToBuffCompress@@Base+0xd0>  // b.any
    9ba0:	mov	w19, #0xfffffff8            	// #-8
    9ba4:	mov	x0, x21
    9ba8:	bl	15b0 <BZ2_bzCompressEnd@plt>
    9bac:	mov	w0, w19
    9bb0:	ldp	x19, x20, [sp, #16]
    9bb4:	ldp	x21, x22, [sp, #32]
    9bb8:	ldp	x23, x24, [sp, #48]
    9bbc:	ldp	x29, x30, [sp], #144
    9bc0:	ret
    9bc4:	cmp	w0, #0x4
    9bc8:	b.eq	9bdc <BZ2_bzBuffToBuffCompress@@Base+0xe8>  // b.none
    9bcc:	mov	x0, x21
    9bd0:	mov	w19, w22
    9bd4:	bl	15b0 <BZ2_bzCompressEnd@plt>
    9bd8:	b	9bac <BZ2_bzBuffToBuffCompress@@Base+0xb8>
    9bdc:	ldr	w0, [x20]
    9be0:	ldr	w1, [sp, #96]
    9be4:	sub	w0, w0, w1
    9be8:	str	w0, [x20]
    9bec:	mov	x0, x21
    9bf0:	bl	15b0 <BZ2_bzCompressEnd@plt>
    9bf4:	b	9bac <BZ2_bzBuffToBuffCompress@@Base+0xb8>
    9bf8:	mov	w19, #0xfffffffe            	// #-2
    9bfc:	b	9bac <BZ2_bzBuffToBuffCompress@@Base+0xb8>

0000000000009c00 <BZ2_bzBuffToBuffDecompress@@Base>:
    9c00:	stp	x29, x30, [sp, #-144]!
    9c04:	cmp	x0, #0x0
    9c08:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    9c0c:	mov	x29, sp
    9c10:	stp	x19, x20, [sp, #16]
    9c14:	stp	x21, x22, [sp, #32]
    9c18:	mov	x21, x1
    9c1c:	stp	x23, x24, [sp, #48]
    9c20:	b.eq	9cfc <BZ2_bzBuffToBuffDecompress@@Base+0xfc>  // b.none
    9c24:	mov	x23, x2
    9c28:	mov	w2, w4
    9c2c:	cmp	x23, #0x0
    9c30:	ccmp	w4, #0x1, #0x2, ne  // ne = any
    9c34:	b.hi	9cfc <BZ2_bzBuffToBuffDecompress@@Base+0xfc>  // b.pmore
    9c38:	mov	w1, w5
    9c3c:	cmp	w5, #0x4
    9c40:	b.hi	9cfc <BZ2_bzBuffToBuffDecompress@@Base+0xfc>  // b.pmore
    9c44:	add	x20, sp, #0x40
    9c48:	mov	x22, x0
    9c4c:	mov	w24, w3
    9c50:	mov	x0, x20
    9c54:	stp	xzr, xzr, [sp, #120]
    9c58:	str	xzr, [sp, #136]
    9c5c:	bl	1530 <BZ2_bzDecompressInit@plt>
    9c60:	mov	w19, w0
    9c64:	cbnz	w0, 9cb8 <BZ2_bzBuffToBuffDecompress@@Base+0xb8>
    9c68:	ldr	w0, [x21]
    9c6c:	str	x23, [sp, #64]
    9c70:	str	w24, [sp, #72]
    9c74:	str	x22, [sp, #88]
    9c78:	str	w0, [sp, #96]
    9c7c:	mov	x0, x20
    9c80:	bl	1680 <BZ2_bzDecompress@plt>
    9c84:	mov	w22, w0
    9c88:	cbnz	w0, 9ca4 <BZ2_bzBuffToBuffDecompress@@Base+0xa4>
    9c8c:	ldr	w0, [sp, #96]
    9c90:	cbnz	w0, 9cec <BZ2_bzBuffToBuffDecompress@@Base+0xec>
    9c94:	mov	x0, x20
    9c98:	mov	w19, #0xfffffff8            	// #-8
    9c9c:	bl	1540 <BZ2_bzDecompressEnd@plt>
    9ca0:	b	9cb8 <BZ2_bzBuffToBuffDecompress@@Base+0xb8>
    9ca4:	cmp	w0, #0x4
    9ca8:	b.eq	9cd0 <BZ2_bzBuffToBuffDecompress@@Base+0xd0>  // b.none
    9cac:	mov	w19, w22
    9cb0:	mov	x0, x20
    9cb4:	bl	1540 <BZ2_bzDecompressEnd@plt>
    9cb8:	mov	w0, w19
    9cbc:	ldp	x19, x20, [sp, #16]
    9cc0:	ldp	x21, x22, [sp, #32]
    9cc4:	ldp	x23, x24, [sp, #48]
    9cc8:	ldp	x29, x30, [sp], #144
    9ccc:	ret
    9cd0:	ldr	w0, [x21]
    9cd4:	ldr	w1, [sp, #96]
    9cd8:	sub	w0, w0, w1
    9cdc:	str	w0, [x21]
    9ce0:	mov	x0, x20
    9ce4:	bl	1540 <BZ2_bzDecompressEnd@plt>
    9ce8:	b	9cb8 <BZ2_bzBuffToBuffDecompress@@Base+0xb8>
    9cec:	mov	x0, x20
    9cf0:	mov	w19, #0xfffffff9            	// #-7
    9cf4:	bl	1540 <BZ2_bzDecompressEnd@plt>
    9cf8:	b	9cb8 <BZ2_bzBuffToBuffDecompress@@Base+0xb8>
    9cfc:	mov	w19, #0xfffffffe            	// #-2
    9d00:	b	9cb8 <BZ2_bzBuffToBuffDecompress@@Base+0xb8>

0000000000009d04 <BZ2_bzlibVersion@@Base>:
    9d04:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    9d08:	add	x0, x0, #0x29d
    9d0c:	ret

0000000000009d10 <BZ2_bz__AssertH__fail@@Base>:
    9d10:	stp	x29, x30, [sp, #-48]!
    9d14:	mov	x29, sp
    9d18:	stp	x19, x20, [sp, #16]
    9d1c:	adrp	x19, 1b000 <BZ2_bzerror@@Base+0x11140>
    9d20:	mov	w20, w0
    9d24:	ldr	x19, [x19, #4016]
    9d28:	str	x21, [sp, #32]
    9d2c:	ldr	x21, [x19]
    9d30:	bl	14f0 <BZ2_bzlibVersion@plt>
    9d34:	mov	w2, w20
    9d38:	mov	x3, x0
    9d3c:	adrp	x1, a000 <BZ2_bzerror@@Base+0x140>
    9d40:	mov	x0, x21
    9d44:	add	x1, x1, #0x2b0
    9d48:	bl	1730 <fprintf@plt>
    9d4c:	cmp	w20, #0x3ef
    9d50:	b.ne	9d64 <BZ2_bz__AssertH__fail@@Base+0x54>  // b.any
    9d54:	ldr	x1, [x19]
    9d58:	adrp	x0, a000 <BZ2_bzerror@@Base+0x140>
    9d5c:	add	x0, x0, #0x44d
    9d60:	bl	14c0 <fputs@plt>
    9d64:	mov	w0, #0x3                   	// #3
    9d68:	bl	14d0 <exit@plt>

0000000000009d6c <BZ2_bzopen@@Base>:
    9d6c:	mov	x2, x1
    9d70:	mov	w3, #0x0                   	// #0
    9d74:	mov	w1, #0xffffffff            	// #-1
    9d78:	b	968c <BZ2_bzReadOpen@@Base+0x174>

0000000000009d7c <BZ2_bzdopen@@Base>:
    9d7c:	mov	x2, x1
    9d80:	mov	w3, #0x1                   	// #1
    9d84:	mov	w1, w0
    9d88:	mov	x0, #0x0                   	// #0
    9d8c:	b	968c <BZ2_bzReadOpen@@Base+0x174>

0000000000009d90 <BZ2_bzread@@Base>:
    9d90:	mov	w3, w2
    9d94:	ldr	w2, [x0, #5096]
    9d98:	cmp	w2, #0x4
    9d9c:	b.eq	9dcc <BZ2_bzread@@Base+0x3c>  // b.none
    9da0:	stp	x29, x30, [sp, #-32]!
    9da4:	mov	x2, x1
    9da8:	mov	x1, x0
    9dac:	mov	x29, sp
    9db0:	add	x0, sp, #0x1c
    9db4:	bl	1710 <BZ2_bzRead@plt>
    9db8:	ldr	w1, [sp, #28]
    9dbc:	ldp	x29, x30, [sp], #32
    9dc0:	tst	w1, #0xfffffffb
    9dc4:	csinv	w0, w0, wzr, eq  // eq = none
    9dc8:	ret
    9dcc:	mov	w0, #0x0                   	// #0
    9dd0:	ret

0000000000009dd4 <BZ2_bzwrite@@Base>:
    9dd4:	stp	x29, x30, [sp, #-48]!
    9dd8:	mov	w3, w2
    9ddc:	mov	x29, sp
    9de0:	str	x19, [sp, #16]
    9de4:	mov	w19, w2
    9de8:	mov	x2, x1
    9dec:	mov	x1, x0
    9df0:	add	x0, sp, #0x2c
    9df4:	bl	1610 <BZ2_bzWrite@plt>
    9df8:	ldr	w0, [sp, #44]
    9dfc:	cmp	w0, #0x0
    9e00:	csinv	w0, w19, wzr, eq  // eq = none
    9e04:	ldr	x19, [sp, #16]
    9e08:	ldp	x29, x30, [sp], #48
    9e0c:	ret

0000000000009e10 <BZ2_bzflush@@Base>:
    9e10:	mov	w0, #0x0                   	// #0
    9e14:	ret

0000000000009e18 <BZ2_bzclose@@Base>:
    9e18:	cbz	x0, 9ebc <BZ2_bzclose@@Base+0xa4>
    9e1c:	stp	x29, x30, [sp, #-48]!
    9e20:	mov	x29, sp
    9e24:	stp	x19, x20, [sp, #16]
    9e28:	mov	x19, x0
    9e2c:	add	x0, x0, #0x1, lsl #12
    9e30:	ldr	x20, [x19]
    9e34:	ldrb	w1, [x0, #916]
    9e38:	add	x0, sp, #0x2c
    9e3c:	cbz	w1, 9eb0 <BZ2_bzclose@@Base+0x98>
    9e40:	mov	x1, x19
    9e44:	mov	x4, #0x0                   	// #0
    9e48:	mov	x3, #0x0                   	// #0
    9e4c:	mov	w2, #0x0                   	// #0
    9e50:	bl	15f0 <BZ2_bzWriteClose@plt>
    9e54:	ldr	w0, [sp, #44]
    9e58:	cbz	w0, 9e74 <BZ2_bzclose@@Base+0x5c>
    9e5c:	mov	x1, x19
    9e60:	mov	x4, #0x0                   	// #0
    9e64:	mov	x3, #0x0                   	// #0
    9e68:	mov	w2, #0x1                   	// #1
    9e6c:	mov	x0, #0x0                   	// #0
    9e70:	bl	15f0 <BZ2_bzWriteClose@plt>
    9e74:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    9e78:	ldr	x0, [x0, #4040]
    9e7c:	ldr	x0, [x0]
    9e80:	cmp	x0, x20
    9e84:	b.eq	9ea4 <BZ2_bzclose@@Base+0x8c>  // b.none
    9e88:	adrp	x0, 1b000 <BZ2_bzerror@@Base+0x11140>
    9e8c:	ldr	x0, [x0, #4032]
    9e90:	ldr	x0, [x0]
    9e94:	cmp	x0, x20
    9e98:	b.eq	9ea4 <BZ2_bzclose@@Base+0x8c>  // b.none
    9e9c:	mov	x0, x20
    9ea0:	bl	1510 <fclose@plt>
    9ea4:	ldp	x19, x20, [sp, #16]
    9ea8:	ldp	x29, x30, [sp], #48
    9eac:	ret
    9eb0:	mov	x1, x19
    9eb4:	bl	1550 <BZ2_bzReadClose@plt>
    9eb8:	b	9e74 <BZ2_bzclose@@Base+0x5c>
    9ebc:	ret

0000000000009ec0 <BZ2_bzerror@@Base>:
    9ec0:	ldr	w0, [x0, #5096]
    9ec4:	cmp	w0, #0x0
    9ec8:	csel	w0, w0, wzr, le
    9ecc:	str	w0, [x1]
    9ed0:	neg	w0, w0
    9ed4:	adrp	x1, 1b000 <BZ2_bzerror@@Base+0x11140>
    9ed8:	add	x1, x1, #0xd38
    9edc:	ldr	x0, [x1, w0, sxtw #3]
    9ee0:	ret

Disassembly of section .fini:

0000000000009ee4 <.fini>:
    9ee4:	stp	x29, x30, [sp, #-16]!
    9ee8:	mov	x29, sp
    9eec:	ldp	x29, x30, [sp], #16
    9ef0:	ret
