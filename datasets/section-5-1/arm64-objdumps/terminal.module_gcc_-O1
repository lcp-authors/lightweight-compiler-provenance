
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//terminal.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <handle_command>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	stp	x25, x26, [sp, #64]
  10:	str	w0, [sp, #112]
  14:	str	x2, [sp, #104]
  18:	mov	x26, x3
  1c:	mov	x22, x4
  20:	cbz	w0, 84 <handle_command+0x84>
  24:	stp	x27, x28, [sp, #80]
  28:	mov	x27, x1
  2c:	adrp	x0, 0 <handle_command>
  30:	ldr	x1, [x0]
  34:	ldr	x0, [x27]
  38:	bl	0 <grub_strcmp>
  3c:	mov	w1, #0x1                   	// #1
  40:	str	w1, [sp, #116]
  44:	cbnz	w0, 1ec <handle_command+0x1ec>
  48:	ldr	w0, [sp, #116]
  4c:	ldr	w1, [sp, #112]
  50:	cmp	w0, w1
  54:	b.eq	20c <handle_command+0x20c>  // b.none
  58:	stp	x23, x24, [sp, #48]
  5c:	add	x2, x27, w0, sxtw #3
  60:	str	x2, [sp, #120]
  64:	adrp	x21, 0 <handle_command>
  68:	adrp	x23, 0 <handle_command>
  6c:	b.ge	284 <handle_command+0x284>  // b.tcont
  70:	stp	x19, x20, [sp, #16]
  74:	ldr	x20, [sp, #120]
  78:	mov	w24, #0x0                   	// #0
  7c:	adrp	x28, 0 <handle_command>
  80:	b	36c <handle_command+0x36c>
  84:	stp	x19, x20, [sp, #16]
  88:	mov	x20, x6
  8c:	mov	x0, x5
  90:	bl	0 <grub_puts_>
  94:	ldr	x0, [sp, #104]
  98:	ldr	x19, [x0]
  9c:	cbz	x19, b8 <handle_command+0xb8>
  a0:	adrp	x21, 0 <handle_command>
  a4:	ldr	x1, [x19, #16]
  a8:	ldr	x0, [x21]
  ac:	bl	0 <grub_printf>
  b0:	ldr	x19, [x19]
  b4:	cbnz	x19, a4 <handle_command+0xa4>
  b8:	adrp	x0, 0 <handle_command>
  bc:	ldr	x0, [x0]
  c0:	bl	0 <grub_printf>
  c4:	mov	x0, x20
  c8:	bl	0 <grub_puts_>
  cc:	ldr	x19, [x26]
  d0:	cbz	x19, ec <handle_command+0xec>
  d4:	adrp	x20, 0 <handle_command>
  d8:	ldr	x1, [x19, #16]
  dc:	ldr	x0, [x20]
  e0:	bl	0 <grub_printf>
  e4:	ldr	x19, [x19]
  e8:	cbnz	x19, d8 <handle_command+0xd8>
  ec:	cbz	x22, 1c8 <handle_command+0x1c8>
  f0:	stp	x23, x24, [sp, #48]
  f4:	adrp	x21, 0 <handle_command>
  f8:	b	820 <handle_command+0x820>
  fc:	ldr	x19, [x19]
 100:	cbz	x19, 828 <handle_command+0x828>
 104:	ldr	x1, [x22, #8]
 108:	ldr	x0, [x19, #16]
 10c:	bl	0 <grub_strcmp>
 110:	cbz	w0, 818 <handle_command+0x818>
 114:	ldr	x20, [x22, #8]
 118:	ldrb	w0, [x20]
 11c:	cbz	w0, fc <handle_command+0xfc>
 120:	mov	x0, x20
 124:	bl	0 <grub_strlen>
 128:	add	x20, x20, x0
 12c:	ldurb	w0, [x20, #-1]
 130:	cmp	w0, #0x2a
 134:	b.ne	fc <handle_command+0xfc>  // b.any
 138:	ldr	x23, [x19, #16]
 13c:	ldr	x20, [x22, #8]
 140:	mov	x0, x20
 144:	bl	0 <grub_strlen>
 148:	sub	x2, x0, #0x1
 14c:	mov	x1, x20
 150:	mov	x0, x23
 154:	bl	0 <grub_memcmp>
 158:	cbnz	w0, fc <handle_command+0xfc>
 15c:	b	818 <handle_command+0x818>
 160:	ldr	x19, [x19]
 164:	cbz	x19, 80c <handle_command+0x80c>
 168:	ldr	x1, [x22, #8]
 16c:	ldr	x0, [x19, #16]
 170:	bl	0 <grub_strcmp>
 174:	cbz	w0, 818 <handle_command+0x818>
 178:	ldr	x20, [x22, #8]
 17c:	ldrb	w0, [x20]
 180:	cbz	w0, 160 <handle_command+0x160>
 184:	mov	x0, x20
 188:	bl	0 <grub_strlen>
 18c:	add	x20, x20, x0
 190:	ldurb	w0, [x20, #-1]
 194:	cmp	w0, #0x2a
 198:	b.ne	160 <handle_command+0x160>  // b.any
 19c:	ldr	x23, [x19, #16]
 1a0:	ldr	x20, [x22, #8]
 1a4:	mov	x0, x20
 1a8:	bl	0 <grub_strlen>
 1ac:	sub	x2, x0, #0x1
 1b0:	mov	x1, x20
 1b4:	mov	x0, x23
 1b8:	bl	0 <grub_memcmp>
 1bc:	cbnz	w0, 160 <handle_command+0x160>
 1c0:	b	818 <handle_command+0x818>
 1c4:	ldp	x23, x24, [sp, #48]
 1c8:	adrp	x0, 0 <handle_command>
 1cc:	ldr	x0, [x0]
 1d0:	bl	0 <grub_printf>
 1d4:	mov	w0, #0x0                   	// #0
 1d8:	ldp	x19, x20, [sp, #16]
 1dc:	ldp	x21, x22, [sp, #32]
 1e0:	ldp	x25, x26, [sp, #64]
 1e4:	ldp	x29, x30, [sp], #128
 1e8:	ret
 1ec:	adrp	x0, 0 <handle_command>
 1f0:	ldr	x1, [x0]
 1f4:	ldr	x0, [x27]
 1f8:	bl	0 <grub_strcmp>
 1fc:	cmp	w0, #0x0
 200:	cset	w0, eq  // eq = none
 204:	str	w0, [sp, #116]
 208:	b	48 <handle_command+0x48>
 20c:	adrp	x0, 0 <handle_command>
 210:	ldr	x1, [x0]
 214:	mov	w0, #0x12                  	// #18
 218:	bl	0 <grub_error>
 21c:	ldp	x27, x28, [sp, #80]
 220:	b	1dc <handle_command+0x1dc>
 224:	ldr	x19, [x19]
 228:	cbz	x19, 374 <handle_command+0x374>
 22c:	ldr	x1, [x19, #16]
 230:	ldr	x0, [x20]
 234:	bl	0 <grub_strcmp>
 238:	cbz	w0, 25c <handle_command+0x25c>
 23c:	ldr	x1, [x21]
 240:	ldr	x0, [x20]
 244:	bl	0 <grub_strcmp>
 248:	cbnz	w0, 224 <handle_command+0x224>
 24c:	ldr	x1, [x19, #16]
 250:	ldr	x0, [x23]
 254:	bl	0 <grub_strcmp>
 258:	cbnz	w0, 224 <handle_command+0x224>
 25c:	ldr	w0, [sp, #116]
 260:	add	w0, w0, #0x1
 264:	str	w0, [sp, #116]
 268:	ldr	x1, [sp, #120]
 26c:	add	x1, x1, #0x8
 270:	str	x1, [sp, #120]
 274:	ldr	w1, [sp, #112]
 278:	cmp	w1, w0
 27c:	b.ne	74 <handle_command+0x74>  // b.any
 280:	ldp	x19, x20, [sp, #16]
 284:	adrp	x0, 0 <handle_command>
 288:	ldr	x1, [x0]
 28c:	ldr	x0, [x27]
 290:	bl	0 <grub_strcmp>
 294:	cbnz	w0, 500 <handle_command+0x500>
 298:	ldr	w0, [sp, #112]
 29c:	cmp	w0, #0x1
 2a0:	b.le	7dc <handle_command+0x7dc>
 2a4:	stp	x19, x20, [sp, #16]
 2a8:	add	x20, x27, #0x8
 2ac:	sub	w23, w0, #0x2
 2b0:	add	x27, x27, #0x10
 2b4:	add	x23, x27, x23, lsl #3
 2b8:	adrp	x21, 0 <handle_command>
 2bc:	adrp	x22, 0 <handle_command>
 2c0:	b	4c4 <handle_command+0x4c4>
 2c4:	ldr	x19, [x19]
 2c8:	cbz	x19, 380 <handle_command+0x380>
 2cc:	ldr	x1, [x19, #16]
 2d0:	ldr	x0, [x20]
 2d4:	bl	0 <grub_strcmp>
 2d8:	cbz	w0, 25c <handle_command+0x25c>
 2dc:	ldr	x1, [x21]
 2e0:	ldr	x0, [x20]
 2e4:	bl	0 <grub_strcmp>
 2e8:	cbnz	w0, 2c4 <handle_command+0x2c4>
 2ec:	ldr	x1, [x19, #16]
 2f0:	ldr	x0, [x23]
 2f4:	bl	0 <grub_strcmp>
 2f8:	cbnz	w0, 2c4 <handle_command+0x2c4>
 2fc:	b	25c <handle_command+0x25c>
 300:	ldr	w0, [sp, #116]
 304:	ldr	x2, [x27, w0, sxtw #3]
 308:	adrp	x0, 0 <handle_command>
 30c:	ldr	x1, [x0]
 310:	mov	w0, #0x12                  	// #18
 314:	bl	0 <grub_error>
 318:	ldp	x19, x20, [sp, #16]
 31c:	ldp	x23, x24, [sp, #48]
 320:	ldp	x27, x28, [sp, #80]
 324:	b	1dc <handle_command+0x1dc>
 328:	ldr	x1, [x19, #8]
 32c:	ldr	x0, [x23]
 330:	bl	0 <grub_strcmp>
 334:	cbnz	w0, 3e8 <handle_command+0x3e8>
 338:	ldr	x0, [x19, #16]
 33c:	bl	0 <grub_dl_load>
 340:	cbz	x0, 348 <handle_command+0x348>
 344:	bl	0 <grub_dl_ref>
 348:	ldr	x0, [x28]
 34c:	str	wzr, [x0]
 350:	mov	x2, #0xa                   	// #10
 354:	adrp	x0, 0 <handle_command>
 358:	ldr	x1, [x0]
 35c:	ldr	x0, [x20]
 360:	bl	0 <grub_memcmp>
 364:	cbz	w0, 838 <handle_command+0x838>
 368:	mov	w24, #0x1                   	// #1
 36c:	ldr	x19, [x26]
 370:	cbnz	x19, 22c <handle_command+0x22c>
 374:	ldr	x0, [sp, #104]
 378:	ldr	x19, [x0]
 37c:	cbnz	x19, 2cc <handle_command+0x2cc>
 380:	cbnz	w24, 300 <handle_command+0x300>
 384:	mov	x19, x22
 388:	cbnz	x22, 3c8 <handle_command+0x3c8>
 38c:	mov	x2, #0xa                   	// #10
 390:	adrp	x0, 0 <handle_command>
 394:	ldr	x1, [x0]
 398:	ldr	x0, [x20]
 39c:	bl	0 <grub_memcmp>
 3a0:	cbnz	w0, 434 <handle_command+0x434>
 3a4:	adrp	x0, 0 <handle_command>
 3a8:	ldr	x0, [x0]
 3ac:	ldr	x1, [x0]
 3b0:	cbz	x1, 434 <handle_command+0x434>
 3b4:	mov	w0, #0x1                   	// #1
 3b8:	blr	x1
 3bc:	b	368 <handle_command+0x368>
 3c0:	ldr	x19, [x19]
 3c4:	cbz	x19, 38c <handle_command+0x38c>
 3c8:	ldr	x1, [x19, #8]
 3cc:	ldr	x0, [x20]
 3d0:	bl	0 <grub_strcmp>
 3d4:	cbz	w0, 338 <handle_command+0x338>
 3d8:	ldr	x1, [x21]
 3dc:	ldr	x0, [x20]
 3e0:	bl	0 <grub_strcmp>
 3e4:	cbz	w0, 328 <handle_command+0x328>
 3e8:	ldr	x24, [x19, #8]
 3ec:	ldrb	w0, [x24]
 3f0:	cbz	w0, 3c0 <handle_command+0x3c0>
 3f4:	mov	x0, x24
 3f8:	bl	0 <grub_strlen>
 3fc:	add	x24, x24, x0
 400:	ldurb	w0, [x24, #-1]
 404:	cmp	w0, #0x2a
 408:	b.ne	3c0 <handle_command+0x3c0>  // b.any
 40c:	ldr	x25, [x20]
 410:	ldr	x24, [x19, #8]
 414:	mov	x0, x24
 418:	bl	0 <grub_strlen>
 41c:	sub	x2, x0, #0x1
 420:	mov	x1, x24
 424:	mov	x0, x25
 428:	bl	0 <grub_memcmp>
 42c:	cbnz	w0, 3c0 <handle_command+0x3c0>
 430:	b	338 <handle_command+0x338>
 434:	ldr	x2, [x20]
 438:	adrp	x0, 0 <handle_command>
 43c:	ldr	x1, [x0]
 440:	mov	w0, #0x12                  	// #18
 444:	bl	0 <grub_error>
 448:	ldp	x19, x20, [sp, #16]
 44c:	ldp	x23, x24, [sp, #48]
 450:	ldp	x27, x28, [sp, #80]
 454:	b	1dc <handle_command+0x1dc>
 458:	ldr	x19, [x19]
 45c:	cbz	x19, 4b8 <handle_command+0x4b8>
 460:	ldr	x1, [x19, #16]
 464:	ldr	x0, [x20]
 468:	bl	0 <grub_strcmp>
 46c:	cbz	w0, 490 <handle_command+0x490>
 470:	ldr	x1, [x21]
 474:	ldr	x0, [x20]
 478:	bl	0 <grub_strcmp>
 47c:	cbnz	w0, 458 <handle_command+0x458>
 480:	ldr	x1, [x19, #16]
 484:	ldr	x0, [x22]
 488:	bl	0 <grub_strcmp>
 48c:	cbnz	w0, 458 <handle_command+0x458>
 490:	ldr	x1, [x19, #24]
 494:	cbz	x1, 4a4 <handle_command+0x4a4>
 498:	mov	x0, x19
 49c:	blr	x1
 4a0:	cbnz	w0, 4d0 <handle_command+0x4d0>
 4a4:	mov	x0, x19
 4a8:	bl	0 <grub_list_remove>
 4ac:	mov	x1, x19
 4b0:	ldr	x0, [sp, #104]
 4b4:	bl	0 <grub_list_push>
 4b8:	add	x20, x20, #0x8
 4bc:	cmp	x20, x23
 4c0:	b.eq	4ec <handle_command+0x4ec>  // b.none
 4c4:	ldr	x19, [x26]
 4c8:	cbnz	x19, 460 <handle_command+0x460>
 4cc:	b	4b8 <handle_command+0x4b8>
 4d0:	adrp	x0, 0 <handle_command>
 4d4:	ldr	x0, [x0]
 4d8:	ldr	w0, [x0]
 4dc:	ldp	x19, x20, [sp, #16]
 4e0:	ldp	x23, x24, [sp, #48]
 4e4:	ldp	x27, x28, [sp, #80]
 4e8:	b	1dc <handle_command+0x1dc>
 4ec:	mov	w0, #0x0                   	// #0
 4f0:	ldp	x19, x20, [sp, #16]
 4f4:	ldp	x23, x24, [sp, #48]
 4f8:	ldp	x27, x28, [sp, #80]
 4fc:	b	1dc <handle_command+0x1dc>
 500:	adrp	x0, 0 <handle_command>
 504:	ldr	x1, [x0]
 508:	ldr	x0, [x27]
 50c:	bl	0 <grub_strcmp>
 510:	cbz	w0, 544 <handle_command+0x544>
 514:	ldr	w0, [sp, #112]
 518:	cmp	w0, #0x0
 51c:	b.le	6cc <handle_command+0x6cc>
 520:	stp	x19, x20, [sp, #16]
 524:	mov	x20, x27
 528:	ldr	w0, [sp, #112]
 52c:	sub	w22, w0, #0x1
 530:	add	x0, x27, #0x8
 534:	add	x22, x0, x22, lsl #3
 538:	adrp	x21, 0 <handle_command>
 53c:	adrp	x23, 0 <handle_command>
 540:	b	6a0 <handle_command+0x6a0>
 544:	ldr	w0, [sp, #112]
 548:	cmp	w0, #0x1
 54c:	b.le	7ec <handle_command+0x7ec>
 550:	stp	x19, x20, [sp, #16]
 554:	add	x20, x27, #0x8
 558:	sub	w22, w0, #0x2
 55c:	add	x27, x27, #0x10
 560:	add	x22, x27, x22, lsl #3
 564:	adrp	x21, 0 <handle_command>
 568:	adrp	x23, 0 <handle_command>
 56c:	b	5e0 <handle_command+0x5e0>
 570:	ldr	x19, [x19]
 574:	cbz	x19, 5d4 <handle_command+0x5d4>
 578:	ldr	x1, [x19, #16]
 57c:	ldr	x0, [x20]
 580:	bl	0 <grub_strcmp>
 584:	cbz	w0, 5a8 <handle_command+0x5a8>
 588:	ldr	x1, [x21]
 58c:	ldr	x0, [x20]
 590:	bl	0 <grub_strcmp>
 594:	cbnz	w0, 570 <handle_command+0x570>
 598:	ldr	x1, [x19, #16]
 59c:	ldr	x0, [x23]
 5a0:	bl	0 <grub_strcmp>
 5a4:	cbnz	w0, 570 <handle_command+0x570>
 5a8:	ldr	x0, [x19]
 5ac:	cbz	x0, 5f0 <handle_command+0x5f0>
 5b0:	mov	x0, x19
 5b4:	bl	0 <grub_list_remove>
 5b8:	ldr	x1, [x19, #32]
 5bc:	cbz	x1, 5c8 <handle_command+0x5c8>
 5c0:	mov	x0, x19
 5c4:	blr	x1
 5c8:	mov	x1, x19
 5cc:	mov	x0, x26
 5d0:	bl	0 <grub_list_push>
 5d4:	add	x20, x20, #0x8
 5d8:	cmp	x22, x20
 5dc:	b.eq	620 <handle_command+0x620>  // b.none
 5e0:	ldr	x0, [sp, #104]
 5e4:	ldr	x19, [x0]
 5e8:	cbnz	x19, 578 <handle_command+0x578>
 5ec:	b	5d4 <handle_command+0x5d4>
 5f0:	ldr	x0, [sp, #104]
 5f4:	ldr	x0, [x0]
 5f8:	cmp	x0, x19
 5fc:	b.ne	5b0 <handle_command+0x5b0>  // b.any
 600:	adrp	x0, 0 <handle_command>
 604:	ldr	x1, [x0]
 608:	mov	w0, #0x12                  	// #18
 60c:	bl	0 <grub_error>
 610:	ldp	x19, x20, [sp, #16]
 614:	ldp	x23, x24, [sp, #48]
 618:	ldp	x27, x28, [sp, #80]
 61c:	b	1dc <handle_command+0x1dc>
 620:	mov	w0, #0x0                   	// #0
 624:	ldp	x19, x20, [sp, #16]
 628:	ldp	x23, x24, [sp, #48]
 62c:	ldp	x27, x28, [sp, #80]
 630:	b	1dc <handle_command+0x1dc>
 634:	ldr	x19, [x19]
 638:	cbz	x19, 694 <handle_command+0x694>
 63c:	ldr	x1, [x19, #16]
 640:	ldr	x0, [x20]
 644:	bl	0 <grub_strcmp>
 648:	cbz	w0, 66c <handle_command+0x66c>
 64c:	ldr	x1, [x21]
 650:	ldr	x0, [x20]
 654:	bl	0 <grub_strcmp>
 658:	cbnz	w0, 634 <handle_command+0x634>
 65c:	ldr	x1, [x19, #16]
 660:	ldr	x0, [x23]
 664:	bl	0 <grub_strcmp>
 668:	cbnz	w0, 634 <handle_command+0x634>
 66c:	ldr	x1, [x19, #24]
 670:	cbz	x1, 680 <handle_command+0x680>
 674:	mov	x0, x19
 678:	blr	x1
 67c:	cbnz	w0, 6ac <handle_command+0x6ac>
 680:	mov	x0, x19
 684:	bl	0 <grub_list_remove>
 688:	mov	x1, x19
 68c:	ldr	x0, [sp, #104]
 690:	bl	0 <grub_list_push>
 694:	add	x20, x20, #0x8
 698:	cmp	x20, x22
 69c:	b.eq	6c8 <handle_command+0x6c8>  // b.none
 6a0:	ldr	x19, [x26]
 6a4:	cbnz	x19, 63c <handle_command+0x63c>
 6a8:	b	694 <handle_command+0x694>
 6ac:	adrp	x0, 0 <handle_command>
 6b0:	ldr	x0, [x0]
 6b4:	ldr	w0, [x0]
 6b8:	ldp	x19, x20, [sp, #16]
 6bc:	ldp	x23, x24, [sp, #48]
 6c0:	ldp	x27, x28, [sp, #80]
 6c4:	b	1dc <handle_command+0x1dc>
 6c8:	ldp	x19, x20, [sp, #16]
 6cc:	ldr	x0, [sp, #104]
 6d0:	ldr	x23, [x0]
 6d4:	cbz	x23, 7fc <handle_command+0x7fc>
 6d8:	stp	x19, x20, [sp, #16]
 6dc:	ldr	w0, [sp, #112]
 6e0:	sub	w24, w0, #0x1
 6e4:	adrp	x25, 0 <handle_command>
 6e8:	b	748 <handle_command+0x748>
 6ec:	add	w21, w22, #0x1
 6f0:	add	x0, x19, #0x1
 6f4:	cmp	x24, x19
 6f8:	b.eq	738 <handle_command+0x738>  // b.none
 6fc:	mov	x19, x0
 700:	mov	w22, w19
 704:	mov	w21, w19
 708:	ldr	x1, [x20, #16]
 70c:	ldr	x0, [x27, x19, lsl #3]
 710:	bl	0 <grub_strcmp>
 714:	cbz	w0, 738 <handle_command+0x738>
 718:	ldr	x1, [x25]
 71c:	ldr	x0, [x27, x19, lsl #3]
 720:	bl	0 <grub_strcmp>
 724:	cbnz	w0, 6ec <handle_command+0x6ec>
 728:	ldr	x1, [x20, #16]
 72c:	ldr	x0, [x28]
 730:	bl	0 <grub_strcmp>
 734:	cbnz	w0, 6ec <handle_command+0x6ec>
 738:	ldr	w0, [sp, #112]
 73c:	cmp	w0, w21
 740:	b.eq	768 <handle_command+0x768>  // b.none
 744:	cbz	x23, 7c8 <handle_command+0x7c8>
 748:	mov	x20, x23
 74c:	ldr	x23, [x23]
 750:	ldr	w0, [sp, #112]
 754:	cmp	w0, #0x0
 758:	b.le	744 <handle_command+0x744>
 75c:	mov	x19, #0x0                   	// #0
 760:	adrp	x28, 0 <handle_command>
 764:	b	700 <handle_command+0x700>
 768:	ldr	x0, [x20]
 76c:	cbz	x0, 798 <handle_command+0x798>
 770:	mov	x0, x20
 774:	bl	0 <grub_list_remove>
 778:	ldr	x1, [x20, #32]
 77c:	cbz	x1, 788 <handle_command+0x788>
 780:	mov	x0, x20
 784:	blr	x1
 788:	mov	x1, x20
 78c:	mov	x0, x26
 790:	bl	0 <grub_list_push>
 794:	b	744 <handle_command+0x744>
 798:	ldr	x0, [sp, #104]
 79c:	ldr	x0, [x0]
 7a0:	cmp	x0, x20
 7a4:	b.ne	770 <handle_command+0x770>  // b.any
 7a8:	adrp	x0, 0 <handle_command>
 7ac:	ldr	x1, [x0]
 7b0:	mov	w0, #0x12                  	// #18
 7b4:	bl	0 <grub_error>
 7b8:	ldp	x19, x20, [sp, #16]
 7bc:	ldp	x23, x24, [sp, #48]
 7c0:	ldp	x27, x28, [sp, #80]
 7c4:	b	1dc <handle_command+0x1dc>
 7c8:	mov	w0, #0x0                   	// #0
 7cc:	ldp	x19, x20, [sp, #16]
 7d0:	ldp	x23, x24, [sp, #48]
 7d4:	ldp	x27, x28, [sp, #80]
 7d8:	b	1dc <handle_command+0x1dc>
 7dc:	mov	w0, #0x0                   	// #0
 7e0:	ldp	x23, x24, [sp, #48]
 7e4:	ldp	x27, x28, [sp, #80]
 7e8:	b	1dc <handle_command+0x1dc>
 7ec:	mov	w0, #0x0                   	// #0
 7f0:	ldp	x23, x24, [sp, #48]
 7f4:	ldp	x27, x28, [sp, #80]
 7f8:	b	1dc <handle_command+0x1dc>
 7fc:	mov	w0, #0x0                   	// #0
 800:	ldp	x23, x24, [sp, #48]
 804:	ldp	x27, x28, [sp, #80]
 808:	b	1dc <handle_command+0x1dc>
 80c:	ldr	x1, [x22, #8]
 810:	ldr	x0, [x21]
 814:	bl	0 <grub_printf>
 818:	ldr	x22, [x22]
 81c:	cbz	x22, 1c4 <handle_command+0x1c4>
 820:	ldr	x19, [x26]
 824:	cbnz	x19, 104 <handle_command+0x104>
 828:	ldr	x0, [sp, #104]
 82c:	ldr	x19, [x0]
 830:	cbnz	x19, 168 <handle_command+0x168>
 834:	b	80c <handle_command+0x80c>
 838:	adrp	x0, 0 <handle_command>
 83c:	ldr	x0, [x0]
 840:	ldr	x1, [x0]
 844:	cbz	x1, 368 <handle_command+0x368>
 848:	b	3b4 <handle_command+0x3b4>
 84c:	nop
	...

00000000000008b0 <grub_cmd_terminal_output>:
 8b0:	stp	x29, x30, [sp, #-16]!
 8b4:	mov	x29, sp
 8b8:	mov	w0, w1
 8bc:	mov	x1, x2
 8c0:	adrp	x2, 0 <handle_command>
 8c4:	ldr	x2, [x2]
 8c8:	adrp	x3, 0 <handle_command>
 8cc:	ldr	x6, [x3]
 8d0:	adrp	x3, 0 <handle_command>
 8d4:	ldr	x5, [x3]
 8d8:	ldr	x4, [x2]
 8dc:	adrp	x2, 0 <handle_command>
 8e0:	ldr	x3, [x2]
 8e4:	adrp	x2, 0 <handle_command>
 8e8:	ldr	x2, [x2]
 8ec:	bl	0 <handle_command>
 8f0:	ldp	x29, x30, [sp], #16
 8f4:	ret
	...

0000000000000920 <grub_cmd_terminal_input>:
 920:	stp	x29, x30, [sp, #-16]!
 924:	mov	x29, sp
 928:	mov	w0, w1
 92c:	mov	x1, x2
 930:	adrp	x2, 0 <handle_command>
 934:	ldr	x2, [x2]
 938:	adrp	x3, 0 <handle_command>
 93c:	ldr	x6, [x3]
 940:	adrp	x3, 0 <handle_command>
 944:	ldr	x5, [x3]
 948:	ldr	x4, [x2, #8]
 94c:	adrp	x2, 0 <handle_command>
 950:	ldr	x3, [x2]
 954:	adrp	x2, 0 <handle_command>
 958:	ldr	x2, [x2]
 95c:	bl	0 <handle_command>
 960:	ldp	x29, x30, [sp], #16
 964:	ret
	...

0000000000000990 <grub_mod_init>:
 990:	stp	x29, x30, [sp, #-32]!
 994:	mov	x29, sp
 998:	stp	x19, x20, [sp, #16]
 99c:	adrp	x0, 0 <handle_command>
 9a0:	ldr	x20, [x0]
 9a4:	mov	w4, #0x0                   	// #0
 9a8:	adrp	x0, 0 <handle_command>
 9ac:	ldr	x3, [x0]
 9b0:	mov	x2, x20
 9b4:	adrp	x0, 0 <handle_command>
 9b8:	ldr	x1, [x0]
 9bc:	adrp	x0, 0 <handle_command>
 9c0:	ldr	x0, [x0]
 9c4:	bl	0 <grub_register_command_prio>
 9c8:	adrp	x1, 0 <handle_command>
 9cc:	ldr	x19, [x1]
 9d0:	str	x0, [x19, #16]
 9d4:	mov	w4, #0x0                   	// #0
 9d8:	adrp	x0, 0 <handle_command>
 9dc:	ldr	x3, [x0]
 9e0:	mov	x2, x20
 9e4:	adrp	x0, 0 <handle_command>
 9e8:	ldr	x1, [x0]
 9ec:	adrp	x0, 0 <handle_command>
 9f0:	ldr	x0, [x0]
 9f4:	bl	0 <grub_register_command_prio>
 9f8:	str	x0, [x19, #24]
 9fc:	ldp	x19, x20, [sp, #16]
 a00:	ldp	x29, x30, [sp], #32
 a04:	ret
	...

0000000000000a48 <grub_mod_fini>:
 a48:	stp	x29, x30, [sp, #-32]!
 a4c:	mov	x29, sp
 a50:	str	x19, [sp, #16]
 a54:	adrp	x0, 0 <handle_command>
 a58:	ldr	x19, [x0]
 a5c:	ldr	x0, [x19, #16]
 a60:	bl	0 <grub_unregister_command>
 a64:	ldr	x0, [x19, #24]
 a68:	bl	0 <grub_unregister_command>
 a6c:	ldr	x19, [sp, #16]
 a70:	ldp	x29, x30, [sp], #32
 a74:	ret
	...
