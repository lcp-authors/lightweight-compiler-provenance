
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fat.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xfa8>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x0, [x0, #32]
      14:	bl	0 <grub_free>
      18:	ldr	x0, [x19, #40]
      1c:	ldr	x19, [sp, #16]
      20:	ldp	x29, x30, [sp], #32
      24:	b	0 <grub_free>
      28:	stp	x29, x30, [sp, #-32]!
      2c:	mov	x29, sp
      30:	str	x19, [sp, #16]
      34:	ldr	x19, [x0, #80]
      38:	ldr	x0, [x19, #8]
      3c:	bl	0 <grub_free>
      40:	mov	x0, x19
      44:	bl	0 <grub_free>
      48:	adrp	x0, 0 <grub_mod_init-0xfa8>
      4c:	ldr	x0, [x0]
      50:	ldr	x0, [x0]
      54:	bl	0 <grub_dl_unref>
      58:	adrp	x0, 0 <grub_mod_init-0xfa8>
      5c:	ldr	x19, [sp, #16]
      60:	ldr	x0, [x0]
      64:	ldp	x29, x30, [sp], #32
      68:	ldr	w0, [x0]
      6c:	ret
	...
      80:	stp	x29, x30, [sp, #-32]!
      84:	mov	x29, sp
      88:	str	x19, [sp, #16]
      8c:	mov	x19, x0
      90:	mov	x0, #0xffffffffffffffe0    	// #-32
      94:	str	x0, [x19, #48]
      98:	mov	x0, #0xd01                 	// #3329
      9c:	bl	0 <grub_malloc>
      a0:	str	x0, [x19, #32]
      a4:	mov	x0, #0x680                 	// #1664
      a8:	bl	0 <grub_malloc>
      ac:	mov	x1, x0
      b0:	str	x0, [x19, #40]
      b4:	ldr	x0, [x19, #32]
      b8:	cbz	x0, c0 <grub_mod_init-0xee8>
      bc:	cbnz	x1, e4 <grub_mod_init-0xec4>
      c0:	bl	0 <grub_free>
      c4:	ldr	x0, [x19, #40]
      c8:	bl	0 <grub_free>
      cc:	adrp	x0, 0 <grub_mod_init-0xfa8>
      d0:	ldr	x0, [x0]
      d4:	ldr	w0, [x0]
      d8:	ldr	x19, [sp, #16]
      dc:	ldp	x29, x30, [sp], #32
      e0:	ret
      e4:	mov	w0, #0x0                   	// #0
      e8:	b	d8 <grub_mod_init-0xed0>
      ec:	nop
	...
      f8:	stp	x29, x30, [sp, #-128]!
      fc:	mov	x29, sp
     100:	stp	x19, x20, [sp, #16]
     104:	stp	x21, x22, [sp, #32]
     108:	stp	x23, x24, [sp, #48]
     10c:	mov	x24, x6
     110:	stp	x25, x26, [sp, #64]
     114:	stp	x27, x28, [sp, #80]
     118:	mov	x27, x1
     11c:	mov	x28, x5
     120:	stp	x2, x3, [sp, #96]
     124:	mov	x2, x4
     128:	ldr	w3, [x1, #24]
     12c:	ldr	x1, [x1, #8]
     130:	cmn	w3, #0x1
     134:	b.ne	184 <grub_mod_init-0xe24>  // b.any
     138:	ldr	w19, [x1, #28]
     13c:	mov	x4, x6
     140:	ldr	w1, [x1, #24]
     144:	lsl	w19, w19, #9
     148:	sub	x19, x19, x2
     14c:	cmp	x5, x19
     150:	csel	x19, x5, x19, ls  // ls = plast
     154:	mov	x3, x19
     158:	bl	0 <grub_disk_read>
     15c:	cbz	w0, 164 <grub_mod_init-0xe44>
     160:	mov	x19, #0xffffffffffffffff    	// #-1
     164:	mov	x0, x19
     168:	ldp	x19, x20, [sp, #16]
     16c:	ldp	x21, x22, [sp, #32]
     170:	ldp	x23, x24, [sp, #48]
     174:	ldp	x25, x26, [sp, #64]
     178:	ldp	x27, x28, [sp, #80]
     17c:	ldp	x29, x30, [sp], #128
     180:	ret
     184:	mov	x23, x0
     188:	ldr	w0, [x1, #32]
     18c:	ldr	w2, [x27, #28]
     190:	mov	x8, #0xffffffffffffffff    	// #-1
     194:	add	w0, w0, #0x9
     198:	lsr	x1, x4, x0
     19c:	mov	w21, w1
     1a0:	lsl	x8, x8, x0
     1a4:	cmp	w2, w1
     1a8:	bic	x22, x4, x8
     1ac:	b.ls	1b4 <grub_mod_init-0xdf4>  // b.plast
     1b0:	stp	wzr, w3, [x27, #28]
     1b4:	mov	w20, #0x1                   	// #1
     1b8:	mov	x19, #0x0                   	// #0
     1bc:	lsl	w20, w20, w0
     1c0:	adrp	x25, 0 <grub_mod_init-0xfa8>
     1c4:	sxtw	x20, w20
     1c8:	cbz	x28, 164 <grub_mod_init-0xe44>
     1cc:	adrp	x26, 0 <grub_mod_init-0xfa8>
     1d0:	b	2c0 <grub_mod_init-0xce8>
     1d4:	ldr	w3, [x0, #16]
     1d8:	cmp	w3, #0x10
     1dc:	b.eq	290 <grub_mod_init-0xd18>  // b.none
     1e0:	lsl	w2, w7, #2
     1e4:	cmp	w3, #0x20
     1e8:	add	w7, w7, w7, lsr #1
     1ec:	csel	w7, w7, w2, ne  // ne = any
     1f0:	ldr	w1, [x0, #8]
     1f4:	add	w3, w3, #0x7
     1f8:	add	x4, sp, #0x7c
     1fc:	mov	w2, w7
     200:	asr	w3, w3, #3
     204:	mov	x0, x23
     208:	sxtw	x3, w3
     20c:	bl	0 <grub_disk_read>
     210:	cbnz	w0, 160 <grub_mod_init-0xe48>
     214:	ldr	x1, [x27, #8]
     218:	ldr	w0, [sp, #124]
     21c:	ldr	w4, [x1, #16]
     220:	cmp	w4, #0xc
     224:	b.eq	298 <grub_mod_init-0xd10>  // b.none
     228:	cmp	w4, #0x10
     22c:	b.ne	238 <grub_mod_init-0xd70>  // b.any
     230:	and	w0, w0, #0xffff
     234:	str	w0, [sp, #124]
     238:	adrp	x0, 0 <grub_mod_init-0xfa8>
     23c:	ldr	w5, [sp, #124]
     240:	ldr	x2, [x25]
     244:	mov	w1, #0x228                 	// #552
     248:	ldr	x3, [x0]
     24c:	ldr	x0, [x26]
     250:	bl	0 <grub_real_dprintf>
     254:	ldr	x0, [x27, #8]
     258:	ldr	w2, [sp, #124]
     25c:	ldr	w1, [x0, #36]
     260:	cmp	w1, w2
     264:	b.ls	164 <grub_mod_init-0xe44>  // b.plast
     268:	cmp	w2, #0x1
     26c:	b.ls	27c <grub_mod_init-0xd2c>  // b.plast
     270:	ldr	w0, [x0, #44]
     274:	cmp	w2, w0
     278:	b.cc	2b4 <grub_mod_init-0xcf4>  // b.lo, b.ul, b.last
     27c:	adrp	x0, 0 <grub_mod_init-0xfa8>
     280:	ldr	x1, [x0]
     284:	mov	w0, #0x9                   	// #9
     288:	bl	0 <grub_error>
     28c:	b	160 <grub_mod_init-0xe48>
     290:	lsl	w7, w7, #1
     294:	b	1f0 <grub_mod_init-0xdb8>
     298:	ldr	w1, [x27, #32]
     29c:	tbz	w1, #0, 2a8 <grub_mod_init-0xd00>
     2a0:	lsr	w0, w0, #4
     2a4:	str	w0, [sp, #124]
     2a8:	ldr	w0, [sp, #124]
     2ac:	and	w0, w0, #0xfff
     2b0:	b	234 <grub_mod_init-0xd74>
     2b4:	ldr	w0, [x27, #28]
     2b8:	add	w0, w0, #0x1
     2bc:	stp	w0, w2, [x27, #28]
     2c0:	ldp	w1, w7, [x27, #28]
     2c4:	ldr	x0, [x27, #8]
     2c8:	cmp	w1, w21
     2cc:	b.cc	1d4 <grub_mod_init-0xdd4>  // b.lo, b.ul, b.last
     2d0:	ldr	w1, [x0, #32]
     2d4:	sub	w7, w7, #0x2
     2d8:	sub	x26, x20, x22
     2dc:	mov	x4, x24
     2e0:	cmp	x28, x26
     2e4:	mov	x2, x22
     2e8:	lsl	w7, w7, w1
     2ec:	ldr	w1, [x0, #40]
     2f0:	ldr	x0, [sp, #96]
     2f4:	str	x0, [x23, #48]
     2f8:	ldr	x0, [sp, #104]
     2fc:	str	x0, [x23, #56]
     300:	csel	x26, x28, x26, ls  // ls = plast
     304:	add	w1, w7, w1
     308:	mov	x3, x26
     30c:	mov	x0, x23
     310:	bl	0 <grub_disk_read>
     314:	str	xzr, [x23, #48]
     318:	adrp	x0, 0 <grub_mod_init-0xfa8>
     31c:	ldr	x0, [x0]
     320:	ldr	w0, [x0]
     324:	cbnz	w0, 160 <grub_mod_init-0xe48>
     328:	sub	x28, x28, x26
     32c:	add	x24, x24, x26
     330:	add	x19, x19, x26
     334:	add	w21, w21, #0x1
     338:	mov	x22, #0x0                   	// #0
     33c:	b	1c8 <grub_mod_init-0xde0>
	...
     368:	ldr	x7, [x0, #8]
     36c:	mov	x6, x1
     370:	mov	x5, x2
     374:	ldp	x1, x2, [x0, #80]
     378:	ldr	x4, [x0, #24]
     37c:	ldr	x3, [x0, #96]
     380:	ldr	x0, [x7]
     384:	b	f8 <grub_mod_init-0xeb0>
     388:	stp	x29, x30, [sp, #-96]!
     38c:	mov	x29, sp
     390:	stp	x19, x20, [sp, #16]
     394:	mov	w20, #0xffffffff            	// #-1
     398:	mov	x19, x1
     39c:	stp	x21, x22, [sp, #32]
     3a0:	mov	w22, w20
     3a4:	mov	w21, w20
     3a8:	stp	x23, x24, [sp, #48]
     3ac:	mov	x23, x0
     3b0:	mov	w24, #0xd                   	// #13
     3b4:	stp	x25, x26, [sp, #64]
     3b8:	add	x25, x1, #0x1
     3bc:	add	x26, x1, #0xe
     3c0:	str	x27, [sp, #80]
     3c4:	ldr	x4, [x19, #48]
     3c8:	mov	x6, x19
     3cc:	ldr	x0, [x23]
     3d0:	add	x4, x4, #0x20
     3d4:	str	x4, [x19, #48]
     3d8:	mov	x1, x23
     3dc:	mov	x5, #0x20                  	// #32
     3e0:	mov	x3, #0x0                   	// #0
     3e4:	mov	x2, #0x0                   	// #0
     3e8:	bl	f8 <grub_mod_init-0xeb0>
     3ec:	cmp	x0, #0x20
     3f0:	b.ne	76c <grub_mod_init-0x83c>  // b.any
     3f4:	ldrb	w1, [x19]
     3f8:	cbz	w1, 76c <grub_mod_init-0x83c>
     3fc:	ldrb	w2, [x19, #11]
     400:	cmp	w2, #0xf
     404:	b.ne	498 <grub_mod_init-0xb10>  // b.any
     408:	tbz	w1, #6, 480 <grub_mod_init-0xb28>
     40c:	ldrb	w21, [x19, #13]
     410:	ands	w22, w1, #0x3f
     414:	b.eq	474 <grub_mod_init-0xb34>  // b.none
     418:	mov	w20, w22
     41c:	sub	w22, w22, #0x1
     420:	mov	x1, x25
     424:	ldr	x3, [x19, #40]
     428:	mov	x2, #0xa                   	// #10
     42c:	mul	w0, w22, w24
     430:	sxtw	x27, w0
     434:	add	x0, x3, w0, sxtw #1
     438:	bl	0 <grub_memmove>
     43c:	ldr	x0, [x19, #40]
     440:	add	x3, x27, #0x5
     444:	mov	x1, x26
     448:	mov	x2, #0xc                   	// #12
     44c:	lsl	x27, x3, #1
     450:	add	x0, x0, x3, lsl #1
     454:	bl	0 <grub_memmove>
     458:	ldr	x0, [x19, #40]
     45c:	add	x27, x27, #0xc
     460:	add	x1, x19, #0x1c
     464:	mov	x2, #0x4                   	// #4
     468:	add	x0, x0, x27
     46c:	bl	0 <grub_memmove>
     470:	b	3c4 <grub_mod_init-0xbe4>
     474:	mov	w20, #0x0                   	// #0
     478:	mov	w21, #0xffffffff            	// #-1
     47c:	b	3c4 <grub_mod_init-0xbe4>
     480:	cmp	w1, w22
     484:	b.ne	478 <grub_mod_init-0xb30>  // b.any
     488:	ldrb	w0, [x19, #13]
     48c:	cmp	w0, w21
     490:	b.ne	478 <grub_mod_init-0xb30>  // b.any
     494:	b	41c <grub_mod_init-0xb8c>
     498:	cmp	w1, #0xe5
     49c:	b.eq	3c4 <grub_mod_init-0xbe4>  // b.none
     4a0:	tst	w2, #0xc0
     4a4:	b.ne	3c4 <grub_mod_init-0xbe4>  // b.any
     4a8:	cmp	w1, #0x5
     4ac:	b.ne	4b8 <grub_mod_init-0xaf0>  // b.any
     4b0:	mov	w0, #0xffffffe5            	// #-27
     4b4:	strb	w0, [x19]
     4b8:	cmp	w22, #0x0
     4bc:	ccmn	w21, #0x1, #0x4, eq  // eq = none
     4c0:	b.eq	648 <grub_mod_init-0x960>  // b.none
     4c4:	mov	x1, #0x0                   	// #0
     4c8:	mov	w0, #0x0                   	// #0
     4cc:	lsl	w3, w0, #7
     4d0:	orr	w0, w3, w0, lsr #1
     4d4:	ldrb	w3, [x19, x1]
     4d8:	add	x1, x1, #0x1
     4dc:	cmp	x1, #0xb
     4e0:	add	w0, w3, w0, uxtb
     4e4:	and	w0, w0, #0xff
     4e8:	b.ne	4cc <grub_mod_init-0xadc>  // b.any
     4ec:	cmp	w0, w21
     4f0:	b.ne	648 <grub_mod_init-0x960>  // b.any
     4f4:	mov	w1, #0xd                   	// #13
     4f8:	mov	w2, #0x0                   	// #0
     4fc:	ldp	x0, x4, [x19, #32]
     500:	mul	w20, w20, w1
     504:	mov	w6, #0xffff2800            	// #-55296
     508:	mov	w7, #0xffff2400            	// #-56320
     50c:	mov	w8, #0x3f                  	// #63
     510:	mov	w9, #0x2400                	// #9216
     514:	sxtw	x20, w20
     518:	sub	x20, x20, #0x1
     51c:	cmn	x20, #0x1
     520:	b.ne	548 <grub_mod_init-0xa60>  // b.any
     524:	strb	wzr, [x0]
     528:	mov	w0, #0x0                   	// #0
     52c:	ldp	x19, x20, [sp, #16]
     530:	ldp	x21, x22, [sp, #32]
     534:	ldp	x23, x24, [sp, #48]
     538:	ldp	x25, x26, [sp, #64]
     53c:	ldr	x27, [sp, #80]
     540:	ldp	x29, x30, [sp], #96
     544:	ret
     548:	mov	x3, x4
     54c:	ldrh	w1, [x3], #2
     550:	cbz	w2, 5b8 <grub_mod_init-0x9f0>
     554:	add	w5, w1, w7
     558:	cmp	w5, #0x3ff
     55c:	b.hi	5ac <grub_mod_init-0x9fc>  // b.pmore
     560:	add	w2, w2, w6
     564:	add	x0, x0, #0x4
     568:	add	w1, w1, w2, lsl #10
     56c:	add	w1, w1, w9
     570:	lsr	w2, w1, #18
     574:	orr	w2, w2, #0xfffffff0
     578:	sturb	w2, [x0, #-4]
     57c:	ubfx	x2, x1, #12, #6
     580:	orr	w2, w2, #0xffffff80
     584:	sturb	w2, [x0, #-3]
     588:	ubfx	x2, x1, #6, #6
     58c:	and	w1, w1, #0x3f
     590:	orr	w2, w2, #0xffffff80
     594:	orr	w1, w1, #0xffffff80
     598:	sturb	w2, [x0, #-2]
     59c:	sturb	w1, [x0, #-1]
     5a0:	mov	w2, #0x0                   	// #0
     5a4:	mov	x4, x3
     5a8:	b	518 <grub_mod_init-0xa90>
     5ac:	mov	x3, x4
     5b0:	strb	w8, [x0], #1
     5b4:	b	5a0 <grub_mod_init-0xa08>
     5b8:	cmp	w1, #0x7f
     5bc:	b.hi	5c8 <grub_mod_init-0x9e0>  // b.pmore
     5c0:	strb	w1, [x0], #1
     5c4:	b	5a4 <grub_mod_init-0xa04>
     5c8:	cmp	w1, #0x7ff
     5cc:	b.hi	5f4 <grub_mod_init-0x9b4>  // b.pmore
     5d0:	mov	x4, x0
     5d4:	lsr	w5, w1, #6
     5d8:	orr	w5, w5, #0xffffffc0
     5dc:	and	w1, w1, #0x3f
     5e0:	orr	w1, w1, #0xffffff80
     5e4:	strb	w5, [x4], #2
     5e8:	strb	w1, [x0, #1]
     5ec:	mov	x0, x4
     5f0:	b	5a4 <grub_mod_init-0xa04>
     5f4:	add	w4, w1, w6
     5f8:	cmp	w4, #0x3ff
     5fc:	b.ls	640 <grub_mod_init-0x968>  // b.plast
     600:	add	w4, w1, w7
     604:	cmp	w4, #0x3ff
     608:	b.hi	614 <grub_mod_init-0x994>  // b.pmore
     60c:	strb	w8, [x0], #1
     610:	b	5a4 <grub_mod_init-0xa04>
     614:	lsr	w4, w1, #12
     618:	add	x0, x0, #0x3
     61c:	orr	w4, w4, #0xffffffe0
     620:	sturb	w4, [x0, #-3]
     624:	ubfx	x4, x1, #6, #6
     628:	and	w1, w1, #0x3f
     62c:	orr	w4, w4, #0xffffff80
     630:	orr	w1, w1, #0xffffff80
     634:	sturb	w4, [x0, #-2]
     638:	sturb	w1, [x0, #-1]
     63c:	b	5a4 <grub_mod_init-0xa04>
     640:	mov	w2, w1
     644:	b	5a4 <grub_mod_init-0xa04>
     648:	ldr	x0, [x19, #32]
     64c:	tbnz	w2, #3, 6fc <grub_mod_init-0x8ac>
     650:	mov	x3, #0x0                   	// #0
     654:	ldrb	w1, [x19, x3]
     658:	mov	w2, w3
     65c:	cbz	w1, 684 <grub_mod_init-0x924>
     660:	sub	w2, w1, #0x41
     664:	cmp	w2, #0x19
     668:	b.hi	670 <grub_mod_init-0x938>  // b.pmore
     66c:	add	w1, w1, #0x20
     670:	strb	w1, [x0], #1
     674:	add	x3, x3, #0x1
     678:	cmp	x3, #0x8
     67c:	b.ne	654 <grub_mod_init-0x954>  // b.any
     680:	mov	w2, w3
     684:	cbz	w2, 748 <grub_mod_init-0x860>
     688:	sub	w1, w2, #0x1
     68c:	ldrb	w3, [x19, w1, uxtw]
     690:	cmp	w3, #0x20
     694:	b.eq	73c <grub_mod_init-0x86c>  // b.none
     698:	cmp	w2, #0x2
     69c:	b.ls	748 <grub_mod_init-0x860>  // b.plast
     6a0:	mov	w1, #0x2e                  	// #46
     6a4:	strb	w1, [x0], #1
     6a8:	mov	x2, #0x8                   	// #8
     6ac:	ldrb	w1, [x19, x2]
     6b0:	mov	w3, w2
     6b4:	cbz	w1, 6dc <grub_mod_init-0x8cc>
     6b8:	sub	w3, w1, #0x41
     6bc:	cmp	w3, #0x19
     6c0:	b.hi	6c8 <grub_mod_init-0x8e0>  // b.pmore
     6c4:	add	w1, w1, #0x20
     6c8:	strb	w1, [x0], #1
     6cc:	add	x2, x2, #0x1
     6d0:	cmp	x2, #0xb
     6d4:	b.ne	6ac <grub_mod_init-0x8fc>  // b.any
     6d8:	mov	w3, w2
     6dc:	cmp	w3, #0x8
     6e0:	b.eq	788 <grub_mod_init-0x820>  // b.none
     6e4:	sub	w3, w3, #0x1
     6e8:	ldrb	w1, [x19, w3, uxtw]
     6ec:	cmp	w1, #0x20
     6f0:	b.ne	524 <grub_mod_init-0xa84>  // b.any
     6f4:	sub	x0, x0, #0x1
     6f8:	b	6dc <grub_mod_init-0x8cc>
     6fc:	mov	x1, #0x0                   	// #0
     700:	ldrb	w3, [x19, x1]
     704:	mov	w2, w1
     708:	cbz	w3, 720 <grub_mod_init-0x888>
     70c:	strb	w3, [x0], #1
     710:	add	x1, x1, #0x1
     714:	cmp	x1, #0xb
     718:	b.ne	700 <grub_mod_init-0x8a8>  // b.any
     71c:	mov	w2, w1
     720:	cbz	w2, 524 <grub_mod_init-0xa84>
     724:	sub	w2, w2, #0x1
     728:	ldrb	w1, [x19, w2, uxtw]
     72c:	cmp	w1, #0x20
     730:	b.ne	524 <grub_mod_init-0xa84>  // b.any
     734:	sub	x0, x0, #0x1
     738:	b	720 <grub_mod_init-0x888>
     73c:	sub	x0, x0, #0x1
     740:	mov	w2, w1
     744:	b	684 <grub_mod_init-0x924>
     748:	ldrb	w1, [x0]
     74c:	cmp	w1, #0x2e
     750:	b.ne	6a0 <grub_mod_init-0x908>  // b.any
     754:	cmp	w2, #0x2
     758:	b.ne	6a8 <grub_mod_init-0x900>  // b.any
     75c:	ldrb	w1, [x0, #1]
     760:	cmp	w1, #0x2e
     764:	b.ne	6a0 <grub_mod_init-0x908>  // b.any
     768:	b	6a8 <grub_mod_init-0x900>
     76c:	adrp	x0, 0 <grub_mod_init-0xfa8>
     770:	mov	w1, #0x2c                  	// #44
     774:	ldr	x0, [x0]
     778:	ldr	w0, [x0]
     77c:	cmp	w0, #0x0
     780:	csel	w0, w0, w1, ne  // ne = any
     784:	b	52c <grub_mod_init-0xa7c>
     788:	sub	x0, x0, #0x1
     78c:	b	524 <grub_mod_init-0xa84>
	...
     798:	stp	x29, x30, [sp, #-128]!
     79c:	mov	x29, sp
     7a0:	stp	x19, x20, [sp, #16]
     7a4:	mov	x20, x3
     7a8:	stp	x21, x22, [sp, #32]
     7ac:	mov	x21, x0
     7b0:	mov	x22, x2
     7b4:	add	x0, sp, #0x48
     7b8:	str	x23, [sp, #48]
     7bc:	mov	x23, x1
     7c0:	bl	80 <grub_mod_init-0xf28>
     7c4:	cbz	w0, 8d4 <grub_mod_init-0x6d4>
     7c8:	mov	w19, w0
     7cc:	mov	w0, w19
     7d0:	ldp	x19, x20, [sp, #16]
     7d4:	ldp	x21, x22, [sp, #32]
     7d8:	ldr	x23, [sp, #48]
     7dc:	ldp	x29, x30, [sp], #128
     7e0:	ret
     7e4:	ldrb	w0, [sp, #83]
     7e8:	tbnz	w0, #3, 8d4 <grub_mod_init-0x6d4>
     7ec:	ldr	x7, [sp, #104]
     7f0:	mov	x0, #0x0                   	// #0
     7f4:	ldrb	w4, [x23, x0]
     7f8:	ldrb	w5, [x7, x0]
     7fc:	sub	w2, w4, #0x41
     800:	sub	w1, w5, #0x41
     804:	cbz	w4, 838 <grub_mod_init-0x770>
     808:	mov	w3, w4
     80c:	cbz	w5, 838 <grub_mod_init-0x770>
     810:	cmp	w2, #0x19
     814:	b.hi	81c <grub_mod_init-0x78c>  // b.pmore
     818:	add	w3, w4, #0x20
     81c:	mov	w6, w5
     820:	cmp	w1, #0x19
     824:	b.hi	82c <grub_mod_init-0x77c>  // b.pmore
     828:	add	w6, w5, #0x20
     82c:	add	x0, x0, #0x1
     830:	cmp	w6, w3
     834:	b.eq	7f4 <grub_mod_init-0x7b4>  // b.none
     838:	cmp	w2, #0x19
     83c:	b.hi	844 <grub_mod_init-0x764>  // b.pmore
     840:	add	w4, w4, #0x20
     844:	cmp	w1, #0x19
     848:	b.hi	850 <grub_mod_init-0x758>  // b.pmore
     84c:	add	w5, w5, #0x20
     850:	cmp	w5, w4
     854:	b.ne	8d4 <grub_mod_init-0x6d4>  // b.any
     858:	mov	x0, #0x28                  	// #40
     85c:	bl	0 <grub_malloc>
     860:	str	x0, [x22]
     864:	cbnz	x0, 878 <grub_mod_init-0x730>
     868:	adrp	x0, 0 <grub_mod_init-0xfa8>
     86c:	ldr	x0, [x0]
     870:	ldr	w19, [x0]
     874:	b	7cc <grub_mod_init-0x7dc>
     878:	ldrb	w1, [sp, #83]
     87c:	strb	w1, [x0, #16]
     880:	ldr	w2, [sp, #100]
     884:	ldrh	w3, [sp, #98]
     888:	str	w2, [x0, #20]
     88c:	ldrh	w2, [sp, #92]
     890:	orr	w2, w3, w2, lsl #16
     894:	ldr	x3, [x21, #8]
     898:	str	w2, [x0, #24]
     89c:	cbnz	w2, 8a8 <grub_mod_init-0x700>
     8a0:	ldr	w2, [x3, #20]
     8a4:	str	w2, [x0, #24]
     8a8:	mov	w2, #0xffffffff            	// #-1
     8ac:	ubfx	x1, x1, #4, #1
     8b0:	str	w2, [x0, #28]
     8b4:	add	w1, w1, #0x1
     8b8:	ldr	x2, [x21]
     8bc:	str	x2, [x0]
     8c0:	str	x3, [x0, #8]
     8c4:	add	x0, sp, #0x48
     8c8:	str	w1, [x20]
     8cc:	bl	0 <grub_mod_init-0xfa8>
     8d0:	b	7cc <grub_mod_init-0x7dc>
     8d4:	add	x1, sp, #0x48
     8d8:	mov	x0, x21
     8dc:	bl	388 <grub_mod_init-0xc20>
     8e0:	mov	w19, w0
     8e4:	cbz	w0, 7e4 <grub_mod_init-0x7c4>
     8e8:	add	x0, sp, #0x48
     8ec:	bl	0 <grub_mod_init-0xfa8>
     8f0:	cmp	w19, #0x2c
     8f4:	csel	w19, w19, wzr, ne  // ne = any
     8f8:	b	7cc <grub_mod_init-0x7dc>
     8fc:	nop
	...
     908:	stp	x29, x30, [sp, #-144]!
     90c:	mov	x29, sp
     910:	stp	x19, x20, [sp, #16]
     914:	cbnz	x0, 93c <grub_mod_init-0x66c>
     918:	mov	x19, #0x0                   	// #0
     91c:	mov	x0, x19
     920:	bl	0 <grub_free>
     924:	adrp	x0, 0 <grub_mod_init-0xfa8>
     928:	mov	x19, #0x0                   	// #0
     92c:	ldr	x1, [x0]
     930:	mov	w0, #0x9                   	// #9
     934:	bl	0 <grub_error>
     938:	b	b3c <grub_mod_init-0x46c>
     93c:	mov	x20, x0
     940:	mov	x0, #0x34                  	// #52
     944:	bl	0 <grub_malloc>
     948:	mov	x19, x0
     94c:	cbz	x0, 918 <grub_mod_init-0x690>
     950:	add	x4, sp, #0x30
     954:	mov	x0, x20
     958:	mov	x3, #0x5a                  	// #90
     95c:	mov	x2, #0x0                   	// #0
     960:	mov	x1, #0x0                   	// #0
     964:	bl	0 <grub_disk_read>
     968:	cbnz	w0, 91c <grub_mod_init-0x68c>
     96c:	ldurh	w1, [sp, #59]
     970:	mov	w0, w1
     974:	cbz	w1, 9a8 <grub_mod_init-0x600>
     978:	mov	w6, #0x0                   	// #0
     97c:	tbz	w0, #0, 99c <grub_mod_init-0x60c>
     980:	cmp	w0, #0x1
     984:	csinv	w6, w6, wzr, eq  // eq = none
     988:	sub	w7, w6, #0x9
     98c:	cmp	w7, #0x6
     990:	b.ls	9b0 <grub_mod_init-0x5f8>  // b.plast
     994:	str	w6, [x19]
     998:	b	91c <grub_mod_init-0x68c>
     99c:	lsr	w0, w0, #1
     9a0:	add	w6, w6, #0x1
     9a4:	b	97c <grub_mod_init-0x62c>
     9a8:	mov	w6, #0xffffffff            	// #-1
     9ac:	b	988 <grub_mod_init-0x620>
     9b0:	str	w7, [x19]
     9b4:	ldrb	w0, [sp, #61]
     9b8:	cbz	w0, 9cc <grub_mod_init-0x5dc>
     9bc:	mov	w2, #0x0                   	// #0
     9c0:	tbz	w0, #0, 9d8 <grub_mod_init-0x5d0>
     9c4:	cmp	w0, #0x1
     9c8:	b.eq	9e4 <grub_mod_init-0x5c4>  // b.none
     9cc:	mov	w2, #0xffffffff            	// #-1
     9d0:	str	w2, [x19, #32]
     9d4:	b	91c <grub_mod_init-0x68c>
     9d8:	lsr	w0, w0, #1
     9dc:	add	w2, w2, #0x1
     9e0:	b	9c0 <grub_mod_init-0x5e8>
     9e4:	cmp	w2, #0x19
     9e8:	b.hi	9d0 <grub_mod_init-0x5d8>  // b.pmore
     9ec:	ldrh	w3, [sp, #62]
     9f0:	add	w4, w7, w2
     9f4:	str	w4, [x19, #32]
     9f8:	lsl	w0, w3, w7
     9fc:	str	w0, [x19, #8]
     a00:	cbz	w0, 91c <grub_mod_init-0x68c>
     a04:	ldrh	w9, [sp, #70]
     a08:	ldr	w3, [sp, #84]
     a0c:	cmp	w9, #0x0
     a10:	csel	w3, w9, w3, ne  // ne = any
     a14:	lsl	w3, w3, w7
     a18:	str	w3, [x19, #12]
     a1c:	cbz	w3, 91c <grub_mod_init-0x68c>
     a20:	ldurh	w5, [sp, #67]
     a24:	ldr	w2, [sp, #80]
     a28:	cmp	w5, #0x0
     a2c:	csel	w5, w5, w2, ne  // ne = any
     a30:	lsl	w5, w5, w7
     a34:	str	w5, [x19, #4]
     a38:	cbz	w5, 91c <grub_mod_init-0x68c>
     a3c:	ldrb	w8, [sp, #64]
     a40:	cbz	w8, 91c <grub_mod_init-0x68c>
     a44:	ldurh	w10, [sp, #65]
     a48:	and	x1, x1, #0xffff
     a4c:	sub	x1, x1, #0x1
     a50:	mov	w11, #0x20                  	// #32
     a54:	madd	w2, w3, w8, w0
     a58:	umaddl	x1, w11, w10, x1
     a5c:	lsr	x1, x1, x6
     a60:	lsl	x1, x1, x7
     a64:	stp	w2, w1, [x19, #24]
     a68:	add	w1, w2, w1
     a6c:	str	w1, [x19, #40]
     a70:	sub	w1, w5, w1
     a74:	lsr	w1, w1, w4
     a78:	add	w1, w1, #0x2
     a7c:	str	w1, [x19, #44]
     a80:	cmp	w1, #0x2
     a84:	b.ls	91c <grub_mod_init-0x68c>  // b.plast
     a88:	cbnz	w9, b4c <grub_mod_init-0x45c>
     a8c:	ldr	w2, [sp, #92]
     a90:	ldrh	w1, [sp, #88]
     a94:	stp	w11, w2, [x19, #16]
     a98:	mov	w2, #0xffffff8             	// #268435448
     a9c:	str	w2, [x19, #36]
     aa0:	tbz	w1, #7, ab8 <grub_mod_init-0x4f0>
     aa4:	and	w1, w1, #0xf
     aa8:	cmp	w8, w1
     aac:	b.cc	91c <grub_mod_init-0x68c>  // b.lo, b.ul, b.last
     ab0:	madd	w3, w3, w1, w0
     ab4:	str	w3, [x19, #8]
     ab8:	ldrh	w0, [sp, #90]
     abc:	orr	w0, w0, w10
     ac0:	cbnz	w0, 91c <grub_mod_init-0x68c>
     ac4:	ldr	w1, [x19, #8]
     ac8:	cmp	w5, w1
     acc:	b.ls	91c <grub_mod_init-0x68c>  // b.plast
     ad0:	add	x4, sp, #0x2c
     ad4:	mov	w1, w1
     ad8:	mov	x0, x20
     adc:	mov	x3, #0x4                   	// #4
     ae0:	mov	x2, #0x0                   	// #0
     ae4:	bl	0 <grub_disk_read>
     ae8:	cbnz	w0, 91c <grub_mod_init-0x68c>
     aec:	ldr	w1, [x19, #16]
     af0:	ldr	w0, [sp, #44]
     af4:	cmp	w1, #0x20
     af8:	b.ne	b80 <grub_mod_init-0x428>  // b.any
     afc:	and	w0, w0, #0xfffffff
     b00:	mov	w2, #0xfffff00             	// #268435200
     b04:	str	w0, [sp, #44]
     b08:	ldrh	w0, [sp, #70]
     b0c:	ldur	w1, [sp, #115]
     b10:	cmp	w0, #0x0
     b14:	ldur	w0, [sp, #87]
     b18:	csel	w0, w0, w1, ne  // ne = any
     b1c:	str	w0, [x19, #48]
     b20:	ldrb	w0, [sp, #69]
     b24:	ldr	w1, [sp, #44]
     b28:	orr	w0, w0, w2
     b2c:	orr	w1, w1, #0x8
     b30:	orr	w0, w0, #0x8
     b34:	cmp	w1, w0
     b38:	b.ne	91c <grub_mod_init-0x68c>  // b.any
     b3c:	mov	x0, x19
     b40:	ldp	x19, x20, [sp, #16]
     b44:	ldp	x29, x30, [sp], #144
     b48:	ret
     b4c:	mov	w0, #0xffffffff            	// #-1
     b50:	str	w0, [x19, #20]
     b54:	cmp	w1, #0xff7
     b58:	b.hi	b70 <grub_mod_init-0x438>  // b.pmore
     b5c:	mov	w0, #0xc                   	// #12
     b60:	str	w0, [x19, #16]
     b64:	mov	w0, #0xff8                 	// #4088
     b68:	str	w0, [x19, #36]
     b6c:	b	ac4 <grub_mod_init-0x4e4>
     b70:	mov	w0, #0x10                  	// #16
     b74:	str	w0, [x19, #16]
     b78:	mov	w0, #0xfff8                	// #65528
     b7c:	b	b68 <grub_mod_init-0x440>
     b80:	cmp	w1, #0x10
     b84:	b.ne	b98 <grub_mod_init-0x410>  // b.any
     b88:	and	w0, w0, #0xffff
     b8c:	mov	w2, #0xff00                	// #65280
     b90:	str	w0, [sp, #44]
     b94:	b	b08 <grub_mod_init-0x4a0>
     b98:	and	w0, w0, #0xfff
     b9c:	mov	w2, #0xf00                 	// #3840
     ba0:	str	w0, [sp, #44]
     ba4:	b	b08 <grub_mod_init-0x4a0>
	...
     bb0:	stp	x29, x30, [sp, #-48]!
     bb4:	mov	x29, sp
     bb8:	stp	x19, x20, [sp, #16]
     bbc:	mov	x20, x1
     bc0:	ldr	x19, [x0]
     bc4:	adrp	x0, 0 <grub_mod_init-0xfa8>
     bc8:	str	x21, [sp, #32]
     bcc:	ldr	x21, [x0]
     bd0:	ldr	x0, [x21]
     bd4:	bl	0 <grub_dl_ref>
     bd8:	mov	x0, x19
     bdc:	bl	908 <grub_mod_init-0x6a0>
     be0:	mov	x19, x0
     be4:	cbz	x0, c54 <grub_mod_init-0x354>
     be8:	adrp	x0, 0 <grub_mod_init-0xfa8>
     bec:	ldr	w1, [x19, #48]
     bf0:	ldr	x0, [x0]
     bf4:	and	w2, w1, #0xffff
     bf8:	lsr	w1, w1, #16
     bfc:	bl	0 <grub_xasprintf>
     c00:	str	x0, [x20]
     c04:	cbz	x0, c10 <grub_mod_init-0x398>
     c08:	ldrb	w1, [x0]
     c0c:	cbnz	w1, c3c <grub_mod_init-0x36c>
     c10:	ldr	x0, [x21]
     c14:	bl	0 <grub_dl_unref>
     c18:	mov	x0, x19
     c1c:	bl	0 <grub_free>
     c20:	adrp	x0, 0 <grub_mod_init-0xfa8>
     c24:	ldp	x19, x20, [sp, #16]
     c28:	ldr	x0, [x0]
     c2c:	ldr	x21, [sp, #32]
     c30:	ldr	w0, [x0]
     c34:	ldp	x29, x30, [sp], #48
     c38:	ret
     c3c:	sub	w2, w1, #0x61
     c40:	cmp	w2, #0x19
     c44:	b.hi	c4c <grub_mod_init-0x35c>  // b.pmore
     c48:	sub	w1, w1, #0x20
     c4c:	strb	w1, [x0], #1
     c50:	b	c04 <grub_mod_init-0x3a4>
     c54:	str	xzr, [x20]
     c58:	b	c10 <grub_mod_init-0x398>
     c5c:	nop
	...
     c78:	stp	x29, x30, [sp, #-144]!
     c7c:	mov	x29, sp
     c80:	str	x21, [sp, #32]
     c84:	stp	xzr, xzr, [sp, #56]
     c88:	ldr	x21, [x0]
     c8c:	mov	w0, #0x10                  	// #16
     c90:	strb	w0, [sp, #64]
     c94:	mov	w0, #0xffffffff            	// #-1
     c98:	stp	xzr, xzr, [sp, #72]
     c9c:	str	w0, [sp, #76]
     ca0:	adrp	x0, 0 <grub_mod_init-0xfa8>
     ca4:	stp	x19, x20, [sp, #16]
     ca8:	mov	x19, x1
     cac:	ldr	x20, [x0]
     cb0:	str	xzr, [x1]
     cb4:	str	x21, [sp, #48]
     cb8:	ldr	x0, [x20]
     cbc:	bl	0 <grub_dl_ref>
     cc0:	mov	x0, x21
     cc4:	bl	908 <grub_mod_init-0x6a0>
     cc8:	str	x0, [sp, #56]
     ccc:	cbz	x0, d18 <grub_mod_init-0x290>
     cd0:	ldr	w0, [x0, #20]
     cd4:	str	w0, [sp, #72]
     cd8:	add	x0, sp, #0x58
     cdc:	bl	80 <grub_mod_init-0xf28>
     ce0:	cbnz	w0, d18 <grub_mod_init-0x290>
     ce4:	add	x1, sp, #0x58
     ce8:	add	x0, sp, #0x30
     cec:	bl	388 <grub_mod_init-0xc20>
     cf0:	cbnz	w0, d10 <grub_mod_init-0x298>
     cf4:	ldrb	w0, [sp, #99]
     cf8:	and	w0, w0, #0xffffffdf
     cfc:	cmp	w0, #0x8
     d00:	b.ne	ce4 <grub_mod_init-0x2c4>  // b.any
     d04:	ldr	x0, [sp, #120]
     d08:	bl	0 <grub_strdup>
     d0c:	str	x0, [x19]
     d10:	add	x0, sp, #0x58
     d14:	bl	0 <grub_mod_init-0xfa8>
     d18:	ldr	x0, [x20]
     d1c:	bl	0 <grub_dl_unref>
     d20:	ldr	x0, [sp, #56]
     d24:	bl	0 <grub_free>
     d28:	adrp	x0, 0 <grub_mod_init-0xfa8>
     d2c:	ldp	x19, x20, [sp, #16]
     d30:	ldr	x0, [x0]
     d34:	ldr	x21, [sp, #32]
     d38:	ldr	w0, [x0]
     d3c:	ldp	x29, x30, [sp], #144
     d40:	ret
     d44:	nop
	...
     d58:	stp	x29, x30, [sp, #-112]!
     d5c:	mov	x29, sp
     d60:	stp	x19, x20, [sp, #16]
     d64:	mov	x20, x0
     d68:	ldr	x0, [x0, #8]
     d6c:	stp	x23, x24, [sp, #48]
     d70:	add	x23, sp, #0x48
     d74:	stp	x21, x22, [sp, #32]
     d78:	mov	x21, x1
     d7c:	ldr	x24, [x0]
     d80:	adrp	x0, 0 <grub_mod_init-0xfa8>
     d84:	str	xzr, [sp, #64]
     d88:	ldr	x22, [x0]
     d8c:	ldr	x0, [x22]
     d90:	bl	0 <grub_dl_ref>
     d94:	mov	x0, x24
     d98:	bl	908 <grub_mod_init-0x6a0>
     d9c:	mov	x19, x0
     da0:	cbz	x0, e08 <grub_mod_init-0x1a0>
     da4:	mov	w0, #0x10                  	// #16
     da8:	strb	w0, [sp, #88]
     dac:	ldr	w0, [x19, #20]
     db0:	add	x2, sp, #0x40
     db4:	stp	wzr, w0, [sp, #92]
     db8:	mov	x1, x23
     dbc:	mov	x0, #0xffffffff            	// #4294967295
     dc0:	stur	x0, [sp, #100]
     dc4:	adrp	x0, 0 <grub_mod_init-0xfa8>
     dc8:	mov	w5, #0x1                   	// #1
     dcc:	mov	x4, #0x0                   	// #0
     dd0:	stp	x24, x19, [sp, #72]
     dd4:	ldr	x3, [x0]
     dd8:	mov	x0, x21
     ddc:	bl	0 <grub_fshelp_find_file_lookup>
     de0:	cbnz	w0, e08 <grub_mod_init-0x1a0>
     de4:	ldr	x1, [sp, #64]
     de8:	str	x1, [x20, #80]
     dec:	ldr	w1, [x1, #20]
     df0:	str	x1, [x20, #64]
     df4:	ldp	x19, x20, [sp, #16]
     df8:	ldp	x21, x22, [sp, #32]
     dfc:	ldp	x23, x24, [sp, #48]
     e00:	ldp	x29, x30, [sp], #112
     e04:	ret
     e08:	ldr	x0, [sp, #64]
     e0c:	cmp	x0, x23
     e10:	b.eq	e18 <grub_mod_init-0x190>  // b.none
     e14:	bl	0 <grub_free>
     e18:	mov	x0, x19
     e1c:	bl	0 <grub_free>
     e20:	ldr	x0, [x22]
     e24:	bl	0 <grub_dl_unref>
     e28:	adrp	x0, 0 <grub_mod_init-0xfa8>
     e2c:	ldr	x0, [x0]
     e30:	ldr	w0, [x0]
     e34:	b	df4 <grub_mod_init-0x1b4>
	...
     e50:	stp	x29, x30, [sp, #-208]!
     e54:	mov	x29, sp
     e58:	str	x25, [sp, #64]
     e5c:	ldr	x25, [x0]
     e60:	adrp	x0, 0 <grub_mod_init-0xfa8>
     e64:	stp	x21, x22, [sp, #32]
     e68:	mov	x21, x3
     e6c:	ldr	x22, [x0]
     e70:	stp	x19, x20, [sp, #16]
     e74:	mov	x20, x2
     e78:	stp	x23, x24, [sp, #48]
     e7c:	mov	x24, x1
     e80:	add	x23, sp, #0x70
     e84:	ldr	x0, [x22]
     e88:	str	xzr, [sp, #88]
     e8c:	bl	0 <grub_dl_ref>
     e90:	mov	x0, x25
     e94:	bl	908 <grub_mod_init-0x6a0>
     e98:	mov	x19, x0
     e9c:	cbz	x0, f4c <grub_mod_init-0x5c>
     ea0:	mov	w0, #0x10                  	// #16
     ea4:	strb	w0, [sp, #128]
     ea8:	ldr	w0, [x19, #20]
     eac:	add	x2, sp, #0x58
     eb0:	stp	wzr, w0, [sp, #132]
     eb4:	mov	x1, x23
     eb8:	mov	x0, #0xffffffff            	// #4294967295
     ebc:	stur	x0, [sp, #140]
     ec0:	adrp	x0, 0 <grub_mod_init-0xfa8>
     ec4:	mov	w5, #0x2                   	// #2
     ec8:	mov	x4, #0x0                   	// #0
     ecc:	stp	x25, x19, [sp, #112]
     ed0:	ldr	x3, [x0]
     ed4:	mov	x0, x24
     ed8:	bl	0 <grub_fshelp_find_file_lookup>
     edc:	cbnz	w0, f4c <grub_mod_init-0x5c>
     ee0:	add	x0, sp, #0x98
     ee4:	bl	80 <grub_mod_init-0xf28>
     ee8:	cbnz	w0, f4c <grub_mod_init-0x5c>
     eec:	mov	w24, #0xfffffffa            	// #-6
     ef0:	ldr	x0, [sp, #88]
     ef4:	add	x1, sp, #0x98
     ef8:	bl	388 <grub_mod_init-0xc20>
     efc:	cbnz	w0, f44 <grub_mod_init-0x64>
     f00:	mov	x2, #0x10                  	// #16
     f04:	mov	w1, #0x0                   	// #0
     f08:	add	x0, sp, #0x60
     f0c:	bl	0 <grub_memset>
     f10:	ldrb	w2, [sp, #163]
     f14:	ldrb	w1, [sp, #96]
     f18:	ubfx	x0, x2, #4, #1
     f1c:	and	w1, w1, w24
     f20:	orr	w0, w0, #0x4
     f24:	orr	w0, w0, w1
     f28:	strb	w0, [sp, #96]
     f2c:	tbnz	w2, #3, ef0 <grub_mod_init-0xb8>
     f30:	ldr	x0, [sp, #184]
     f34:	mov	x2, x21
     f38:	add	x1, sp, #0x60
     f3c:	blr	x20
     f40:	cbz	w0, ef0 <grub_mod_init-0xb8>
     f44:	add	x0, sp, #0x98
     f48:	bl	0 <grub_mod_init-0xfa8>
     f4c:	ldr	x0, [sp, #88]
     f50:	cmp	x0, x23
     f54:	b.eq	f5c <grub_mod_init-0x4c>  // b.none
     f58:	bl	0 <grub_free>
     f5c:	mov	x0, x19
     f60:	bl	0 <grub_free>
     f64:	ldr	x0, [x22]
     f68:	bl	0 <grub_dl_unref>
     f6c:	adrp	x0, 0 <grub_mod_init-0xfa8>
     f70:	ldp	x19, x20, [sp, #16]
     f74:	ldr	x0, [x0]
     f78:	ldp	x21, x22, [sp, #32]
     f7c:	ldr	w0, [x0]
     f80:	ldp	x23, x24, [sp, #48]
     f84:	ldr	x25, [sp, #64]
     f88:	ldp	x29, x30, [sp], #208
     f8c:	ret
	...

0000000000000fa8 <grub_mod_init>:
     fa8:	stp	x29, x30, [sp, #-32]!
     fac:	mov	x29, sp
     fb0:	str	x19, [sp, #16]
     fb4:	mov	x19, x0
     fb8:	adrp	x0, 0 <grub_mod_init-0xfa8>
     fbc:	ldr	x1, [x0]
     fc0:	adrp	x0, 0 <grub_mod_init-0xfa8>
     fc4:	ldr	x0, [x0]
     fc8:	bl	0 <grub_list_push>
     fcc:	adrp	x0, 0 <grub_mod_init-0xfa8>
     fd0:	ldr	x0, [x0]
     fd4:	str	x19, [x0]
     fd8:	ldr	x19, [sp, #16]
     fdc:	ldp	x29, x30, [sp], #32
     fe0:	ret
     fe4:	nop
	...

0000000000001000 <grub_mod_fini>:
    1000:	adrp	x0, 0 <grub_mod_init-0xfa8>
    1004:	ldr	x0, [x0]
    1008:	b	0 <grub_list_remove>
    100c:	nop
	...
