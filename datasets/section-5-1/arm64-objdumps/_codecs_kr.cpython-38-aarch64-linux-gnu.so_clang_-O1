
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_kr.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002700 <.init>:
    2700:	stp	x29, x30, [sp, #-16]!
    2704:	mov	x29, sp
    2708:	bl	2820 <PyCapsule_New@plt+0x10>
    270c:	ldp	x29, x30, [sp], #16
    2710:	ret

Disassembly of section .plt:

0000000000002720 <PyObject_GetAttrString@plt-0x20>:
    2720:	stp	x16, x30, [sp, #-16]!
    2724:	adrp	x16, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2728:	ldr	x17, [x16, #4088]
    272c:	add	x16, x16, #0xff8
    2730:	br	x17
    2734:	nop
    2738:	nop
    273c:	nop

0000000000002740 <PyObject_GetAttrString@plt>:
    2740:	adrp	x16, 30000 <PyObject_GetAttrString>
    2744:	ldr	x17, [x16]
    2748:	add	x16, x16, #0x0
    274c:	br	x17

0000000000002750 <__cxa_finalize@plt>:
    2750:	adrp	x16, 30000 <PyObject_GetAttrString>
    2754:	ldr	x17, [x16, #8]
    2758:	add	x16, x16, #0x8
    275c:	br	x17

0000000000002760 <_Py_Dealloc@plt>:
    2760:	adrp	x16, 30000 <PyObject_GetAttrString>
    2764:	ldr	x17, [x16, #16]
    2768:	add	x16, x16, #0x10
    276c:	br	x17

0000000000002770 <PyErr_SetString@plt>:
    2770:	adrp	x16, 30000 <PyObject_GetAttrString>
    2774:	ldr	x17, [x16, #24]
    2778:	add	x16, x16, #0x18
    277c:	br	x17

0000000000002780 <__gmon_start__@plt>:
    2780:	adrp	x16, 30000 <PyObject_GetAttrString>
    2784:	ldr	x17, [x16, #32]
    2788:	add	x16, x16, #0x20
    278c:	br	x17

0000000000002790 <PyModule_Create2@plt>:
    2790:	adrp	x16, 30000 <PyObject_GetAttrString>
    2794:	ldr	x17, [x16, #40]
    2798:	add	x16, x16, #0x28
    279c:	br	x17

00000000000027a0 <PyImport_ImportModuleNoBlock@plt>:
    27a0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27a4:	ldr	x17, [x16, #48]
    27a8:	add	x16, x16, #0x30
    27ac:	br	x17

00000000000027b0 <PyObject_CallFunctionObjArgs@plt>:
    27b0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27b4:	ldr	x17, [x16, #56]
    27b8:	add	x16, x16, #0x38
    27bc:	br	x17

00000000000027c0 <strcmp@plt>:
    27c0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27c4:	ldr	x17, [x16, #64]
    27c8:	add	x16, x16, #0x40
    27cc:	br	x17

00000000000027d0 <_PyUnicodeWriter_WriteChar@plt>:
    27d0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27d4:	ldr	x17, [x16, #72]
    27d8:	add	x16, x16, #0x48
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27e4:	ldr	x17, [x16, #80]
    27e8:	add	x16, x16, #0x50
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27f4:	ldr	x17, [x16, #88]
    27f8:	add	x16, x16, #0x58
    27fc:	br	x17

0000000000002800 <PyModule_AddObject@plt>:
    2800:	adrp	x16, 30000 <PyObject_GetAttrString>
    2804:	ldr	x17, [x16, #96]
    2808:	add	x16, x16, #0x60
    280c:	br	x17

0000000000002810 <PyCapsule_New@plt>:
    2810:	adrp	x16, 30000 <PyObject_GetAttrString>
    2814:	ldr	x17, [x16, #104]
    2818:	add	x16, x16, #0x68
    281c:	br	x17

Disassembly of section .text:

0000000000002820 <PyInit__codecs_kr@@Base-0xd4>:
    2820:	adrp	x0, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2824:	ldr	x0, [x0, #4048]
    2828:	cbz	x0, 2830 <PyCapsule_New@plt+0x20>
    282c:	b	2780 <__gmon_start__@plt>
    2830:	ret
    2834:	nop
    2838:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    283c:	add	x0, x0, #0x120
    2840:	adrp	x1, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    2844:	add	x1, x1, #0x120
    2848:	cmp	x1, x0
    284c:	b.eq	2864 <PyCapsule_New@plt+0x54>  // b.none
    2850:	adrp	x1, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2854:	ldr	x1, [x1, #4024]
    2858:	cbz	x1, 2864 <PyCapsule_New@plt+0x54>
    285c:	mov	x16, x1
    2860:	br	x16
    2864:	ret
    2868:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    286c:	add	x0, x0, #0x120
    2870:	adrp	x1, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    2874:	add	x1, x1, #0x120
    2878:	sub	x1, x1, x0
    287c:	lsr	x2, x1, #63
    2880:	add	x1, x2, x1, asr #3
    2884:	cmp	xzr, x1, asr #1
    2888:	asr	x1, x1, #1
    288c:	b.eq	28a4 <PyCapsule_New@plt+0x94>  // b.none
    2890:	adrp	x2, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2894:	ldr	x2, [x2, #4056]
    2898:	cbz	x2, 28a4 <PyCapsule_New@plt+0x94>
    289c:	mov	x16, x2
    28a0:	br	x16
    28a4:	ret
    28a8:	stp	x29, x30, [sp, #-32]!
    28ac:	mov	x29, sp
    28b0:	str	x19, [sp, #16]
    28b4:	adrp	x19, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    28b8:	ldrb	w0, [x19, #288]
    28bc:	cbnz	w0, 28e4 <PyCapsule_New@plt+0xd4>
    28c0:	adrp	x0, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    28c4:	ldr	x0, [x0, #4032]
    28c8:	cbz	x0, 28d8 <PyCapsule_New@plt+0xc8>
    28cc:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    28d0:	ldr	x0, [x0, #112]
    28d4:	bl	2750 <__cxa_finalize@plt>
    28d8:	bl	2838 <PyCapsule_New@plt+0x28>
    28dc:	mov	w0, #0x1                   	// #1
    28e0:	strb	w0, [x19, #288]
    28e4:	ldr	x19, [sp, #16]
    28e8:	ldp	x29, x30, [sp], #32
    28ec:	ret
    28f0:	b	2868 <PyCapsule_New@plt+0x58>

00000000000028f4 <PyInit__codecs_kr@@Base>:
    28f4:	stp	x29, x30, [sp, #-32]!
    28f8:	str	x19, [sp, #16]
    28fc:	mov	x29, sp
    2900:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    2904:	add	x0, x0, #0x78
    2908:	mov	w1, #0x3f5                 	// #1013
    290c:	bl	2790 <PyModule_Create2@plt>
    2910:	mov	x19, x0
    2914:	cbz	x0, 2920 <PyInit__codecs_kr@@Base+0x2c>
    2918:	mov	x0, x19
    291c:	bl	2930 <PyInit__codecs_kr@@Base+0x3c>
    2920:	mov	x0, x19
    2924:	ldr	x19, [sp, #16]
    2928:	ldp	x29, x30, [sp], #32
    292c:	ret
    2930:	sub	sp, sp, #0x150
    2934:	stp	x29, x30, [sp, #256]
    2938:	str	x28, [sp, #272]
    293c:	stp	x24, x23, [sp, #288]
    2940:	stp	x22, x21, [sp, #304]
    2944:	stp	x20, x19, [sp, #320]
    2948:	add	x29, sp, #0x100
    294c:	mov	x8, sp
    2950:	adrp	x20, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2954:	mov	w23, #0x5f5f                	// #24415
    2958:	adrp	x22, 3000 <PyInit__codecs_kr@@Base+0x70c>
    295c:	mov	x19, x0
    2960:	add	x20, x20, #0xd70
    2964:	movk	w23, #0x616d, lsl #16
    2968:	mov	w24, #0x5f70                	// #24432
    296c:	add	x21, x8, #0x6
    2970:	add	x22, x22, #0x948
    2974:	ldr	x1, [x20]
    2978:	movi	v0.2d, #0x0
    297c:	mov	x0, x21
    2980:	stp	q0, q0, [sp, #224]
    2984:	stp	q0, q0, [sp, #192]
    2988:	stp	q0, q0, [sp, #160]
    298c:	stp	q0, q0, [sp, #128]
    2990:	stp	q0, q0, [sp, #96]
    2994:	stp	q0, q0, [sp, #64]
    2998:	stp	q0, q0, [sp, #32]
    299c:	stp	q0, q0, [sp]
    29a0:	str	w23, [sp]
    29a4:	strh	w24, [sp, #4]
    29a8:	bl	27f0 <strcpy@plt>
    29ac:	mov	x0, x20
    29b0:	mov	x1, x22
    29b4:	mov	x2, xzr
    29b8:	bl	2810 <PyCapsule_New@plt>
    29bc:	mov	x2, x0
    29c0:	mov	x1, sp
    29c4:	mov	x0, x19
    29c8:	bl	2800 <PyModule_AddObject@plt>
    29cc:	cmn	w0, #0x1
    29d0:	b.eq	29e0 <PyInit__codecs_kr@@Base+0xec>  // b.none
    29d4:	ldr	x8, [x20, #24]!
    29d8:	ldrb	w8, [x8]
    29dc:	cbnz	w8, 2974 <PyInit__codecs_kr@@Base+0x80>
    29e0:	ldp	x20, x19, [sp, #320]
    29e4:	ldp	x22, x21, [sp, #304]
    29e8:	ldp	x24, x23, [sp, #288]
    29ec:	ldr	x28, [sp, #272]
    29f0:	ldp	x29, x30, [sp, #256]
    29f4:	add	sp, sp, #0x150
    29f8:	ret
    29fc:	stp	x29, x30, [sp, #-48]!
    2a00:	stp	x22, x21, [sp, #16]
    2a04:	stp	x20, x19, [sp, #32]
    2a08:	mov	x29, sp
    2a0c:	ldr	x8, [x1, #8]
    2a10:	ldrb	w8, [x8, #171]
    2a14:	tbnz	w8, #4, 2a2c <PyInit__codecs_kr@@Base+0x138>
    2a18:	adrp	x8, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2a1c:	ldr	x8, [x8, #4040]
    2a20:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2a24:	add	x1, x1, #0x90c
    2a28:	b	2a98 <PyInit__codecs_kr@@Base+0x1a4>
    2a2c:	mov	x0, x1
    2a30:	bl	27e0 <PyUnicode_AsUTF8@plt>
    2a34:	cbz	x0, 2aa0 <PyInit__codecs_kr@@Base+0x1ac>
    2a38:	mov	x21, x0
    2a3c:	bl	2b04 <PyInit__codecs_kr@@Base+0x210>
    2a40:	mov	x19, x0
    2a44:	cbz	x0, 2aa4 <PyInit__codecs_kr@@Base+0x1b0>
    2a48:	adrp	x0, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2a4c:	add	x0, x0, #0x97e
    2a50:	mov	x1, x21
    2a54:	bl	27c0 <strcmp@plt>
    2a58:	cbz	w0, 2ab8 <PyInit__codecs_kr@@Base+0x1c4>
    2a5c:	adrp	x20, 2c000 <PyInit__codecs_kr@@Base+0x2970c>
    2a60:	add	x20, x20, #0xc50
    2a64:	ldr	x0, [x20, #72]!
    2a68:	ldrb	w8, [x0]
    2a6c:	cmp	w8, #0x0
    2a70:	cset	w22, eq  // eq = none
    2a74:	cbz	w8, 2a88 <PyInit__codecs_kr@@Base+0x194>
    2a78:	mov	x1, x21
    2a7c:	bl	27c0 <strcmp@plt>
    2a80:	cbnz	w0, 2a64 <PyInit__codecs_kr@@Base+0x170>
    2a84:	cbz	w22, 2ac8 <PyInit__codecs_kr@@Base+0x1d4>
    2a88:	adrp	x8, 2f000 <PyInit__codecs_kr@@Base+0x2c70c>
    2a8c:	ldr	x8, [x8, #4064]
    2a90:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2a94:	add	x1, x1, #0x92c
    2a98:	ldr	x0, [x8]
    2a9c:	bl	2770 <PyErr_SetString@plt>
    2aa0:	mov	x19, xzr
    2aa4:	mov	x0, x19
    2aa8:	ldp	x20, x19, [sp, #32]
    2aac:	ldp	x22, x21, [sp, #16]
    2ab0:	ldp	x29, x30, [sp], #48
    2ab4:	ret
    2ab8:	adrp	x20, 2c000 <PyInit__codecs_kr@@Base+0x2970c>
    2abc:	mov	w22, wzr
    2ac0:	add	x20, x20, #0xc50
    2ac4:	cbnz	w22, 2a88 <PyInit__codecs_kr@@Base+0x194>
    2ac8:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2acc:	add	x1, x1, #0x948
    2ad0:	mov	x0, x20
    2ad4:	mov	x2, xzr
    2ad8:	bl	2810 <PyCapsule_New@plt>
    2adc:	cbz	x0, 2aa0 <PyInit__codecs_kr@@Base+0x1ac>
    2ae0:	mov	x20, x0
    2ae4:	mov	x0, x19
    2ae8:	mov	x1, x20
    2aec:	mov	x2, xzr
    2af0:	bl	27b0 <PyObject_CallFunctionObjArgs@plt>
    2af4:	mov	x19, x0
    2af8:	mov	x0, x20
    2afc:	bl	2b58 <PyInit__codecs_kr@@Base+0x264>
    2b00:	b	2aa4 <PyInit__codecs_kr@@Base+0x1b0>
    2b04:	stp	x29, x30, [sp, #-32]!
    2b08:	stp	x20, x19, [sp, #16]
    2b0c:	mov	x29, sp
    2b10:	adrp	x20, 30000 <PyInit__codecs_kr@@Base+0x2d70c>
    2b14:	ldr	x8, [x20, #296]
    2b18:	cbnz	x8, 2b48 <PyInit__codecs_kr@@Base+0x254>
    2b1c:	adrp	x0, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2b20:	add	x0, x0, #0x95f
    2b24:	bl	27a0 <PyImport_ImportModuleNoBlock@plt>
    2b28:	cbz	x0, 2b4c <PyInit__codecs_kr@@Base+0x258>
    2b2c:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2b30:	add	x1, x1, #0x96f
    2b34:	mov	x19, x0
    2b38:	bl	2740 <PyObject_GetAttrString@plt>
    2b3c:	str	x0, [x20, #296]
    2b40:	mov	x0, x19
    2b44:	bl	2b58 <PyInit__codecs_kr@@Base+0x264>
    2b48:	ldr	x0, [x20, #296]
    2b4c:	ldp	x20, x19, [sp, #16]
    2b50:	ldp	x29, x30, [sp], #32
    2b54:	ret
    2b58:	stp	x29, x30, [sp, #-16]!
    2b5c:	mov	x29, sp
    2b60:	ldr	x8, [x0]
    2b64:	subs	x8, x8, #0x1
    2b68:	str	x8, [x0]
    2b6c:	b.eq	2b78 <PyInit__codecs_kr@@Base+0x284>  // b.none
    2b70:	ldp	x29, x30, [sp], #16
    2b74:	ret
    2b78:	bl	2760 <_Py_Dealloc@plt>
    2b7c:	ldp	x29, x30, [sp], #16
    2b80:	ret
    2b84:	stp	x24, x23, [sp, #-48]!
    2b88:	stp	x22, x21, [sp, #16]
    2b8c:	stp	x20, x19, [sp, #32]
    2b90:	adrp	x8, 2c000 <PyInit__codecs_kr@@Base+0x2970c>
    2b94:	mov	w12, #0x5c4d                	// #23629
    2b98:	adrp	x13, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2b9c:	mov	w14, #0x4925                	// #18725
    2ba0:	mov	w15, #0x6187                	// #24967
    2ba4:	adrp	x17, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2ba8:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x70c>
    2bac:	add	x8, x8, #0xd70
    2bb0:	mov	w9, #0xa4                  	// #164
    2bb4:	mov	w10, #0xd4                  	// #212
    2bb8:	mov	w11, #0xffff5400            	// #-44032
    2bbc:	movk	w12, #0xdee9, lsl #16
    2bc0:	add	x13, x13, #0x9a2
    2bc4:	movk	w14, #0x2492, lsl #16
    2bc8:	movk	w15, #0x8618, lsl #16
    2bcc:	mov	w16, #0x15                  	// #21
    2bd0:	add	x17, x17, #0x9b5
    2bd4:	mov	w18, #0x1c                  	// #28
    2bd8:	add	x1, x1, #0x9ca
    2bdc:	b	2bec <PyInit__codecs_kr@@Base+0x2f8>
    2be0:	mov	w0, #0x1                   	// #1
    2be4:	mov	w19, #0x1                   	// #1
    2be8:	cbnz	w19, 2da8 <PyInit__codecs_kr@@Base+0x4b4>
    2bec:	ldr	x19, [x4]
    2bf0:	cmp	x19, x5
    2bf4:	b.ge	2da4 <PyInit__codecs_kr@@Base+0x4b0>  // b.tcont
    2bf8:	cmp	w2, #0x2
    2bfc:	b.eq	2c18 <PyInit__codecs_kr@@Base+0x324>  // b.none
    2c00:	cmp	w2, #0x1
    2c04:	b.ne	2cac <PyInit__codecs_kr@@Base+0x3b8>  // b.any
    2c08:	ldrb	w20, [x3, x19]
    2c0c:	cmp	w20, #0x7f
    2c10:	b.hi	2c24 <PyInit__codecs_kr@@Base+0x330>  // b.pmore
    2c14:	b	2cb8 <PyInit__codecs_kr@@Base+0x3c4>
    2c18:	ldrh	w20, [x3, x19, lsl #1]
    2c1c:	cmp	w20, #0x7f
    2c20:	b.ls	2cb8 <PyInit__codecs_kr@@Base+0x3c4>  // b.plast
    2c24:	lsr	w19, w20, #16
    2c28:	cbnz	w19, 2be0 <PyInit__codecs_kr@@Base+0x2ec>
    2c2c:	subs	x21, x7, #0x2
    2c30:	b.lt	2cf4 <PyInit__codecs_kr@@Base+0x400>  // b.tstop
    2c34:	lsr	w22, w20, #8
    2c38:	lsl	x19, x22, #4
    2c3c:	ldr	x19, [x8, x19]
    2c40:	cbz	x19, 2be0 <PyInit__codecs_kr@@Base+0x2ec>
    2c44:	add	x23, x8, x22, lsl #4
    2c48:	ldrb	w22, [x23, #8]
    2c4c:	and	w24, w20, #0xff
    2c50:	subs	w22, w24, w22
    2c54:	b.cc	2be0 <PyInit__codecs_kr@@Base+0x2ec>  // b.lo, b.ul, b.last
    2c58:	ldrb	w23, [x23, #9]
    2c5c:	cmp	w24, w23
    2c60:	b.hi	2be0 <PyInit__codecs_kr@@Base+0x2ec>  // b.pmore
    2c64:	ldrsh	w22, [x19, w22, uxtw #1]
    2c68:	cmn	w22, #0x1
    2c6c:	b.eq	2be0 <PyInit__codecs_kr@@Base+0x2ec>  // b.none
    2c70:	tbnz	w22, #31, 2cec <PyInit__codecs_kr@@Base+0x3f8>
    2c74:	ldr	x7, [x6]
    2c78:	lsr	w20, w22, #8
    2c7c:	orr	w20, w20, #0x80
    2c80:	mov	w19, wzr
    2c84:	strb	w20, [x7]
    2c88:	ldr	x7, [x6]
    2c8c:	orr	w20, w22, #0x80
    2c90:	strb	w20, [x7, #1]
    2c94:	ldr	x7, [x4]
    2c98:	add	x7, x7, #0x1
    2c9c:	str	x7, [x4]
    2ca0:	ldr	x7, [x6]
    2ca4:	add	x7, x7, #0x2
    2ca8:	b	2ce0 <PyInit__codecs_kr@@Base+0x3ec>
    2cac:	ldr	w20, [x3, x19, lsl #2]
    2cb0:	cmp	w20, #0x7f
    2cb4:	b.hi	2c24 <PyInit__codecs_kr@@Base+0x330>  // b.pmore
    2cb8:	subs	x21, x7, #0x1
    2cbc:	b.lt	2cf4 <PyInit__codecs_kr@@Base+0x400>  // b.tstop
    2cc0:	ldr	x7, [x6]
    2cc4:	mov	w19, wzr
    2cc8:	strb	w20, [x7]
    2ccc:	ldr	x7, [x4]
    2cd0:	add	x7, x7, #0x1
    2cd4:	str	x7, [x4]
    2cd8:	ldr	x7, [x6]
    2cdc:	add	x7, x7, #0x1
    2ce0:	str	x7, [x6]
    2ce4:	mov	x7, x21
    2ce8:	b	2be8 <PyInit__codecs_kr@@Base+0x2f4>
    2cec:	subs	x21, x7, #0x8
    2cf0:	b.ge	2d00 <PyInit__codecs_kr@@Base+0x40c>  // b.tcont
    2cf4:	mov	w19, #0x1                   	// #1
    2cf8:	mov	x0, #0xffffffffffffffff    	// #-1
    2cfc:	b	2be8 <PyInit__codecs_kr@@Base+0x2f4>
    2d00:	ldr	x7, [x6]
    2d04:	add	w20, w20, w11
    2d08:	umull	x22, w20, w12
    2d0c:	lsr	x22, x22, #41
    2d10:	strb	w9, [x7]
    2d14:	ldr	x7, [x6]
    2d18:	ldrb	w22, [x13, x22]
    2d1c:	lsr	w23, w20, #2
    2d20:	umull	x23, w23, w14
    2d24:	strb	w10, [x7, #1]
    2d28:	ldr	x7, [x6]
    2d2c:	lsr	x23, x23, #32
    2d30:	mul	x24, x23, x15
    2d34:	msub	w20, w23, w18, w20
    2d38:	strb	w9, [x7, #2]
    2d3c:	ldr	x7, [x6]
    2d40:	mov	w19, wzr
    2d44:	strb	w22, [x7, #3]
    2d48:	ldr	x7, [x6]
    2d4c:	lsr	x22, x24, #32
    2d50:	sub	w24, w23, w22
    2d54:	add	w22, w22, w24, lsr #1
    2d58:	add	x24, x7, #0x4
    2d5c:	lsr	w22, w22, #4
    2d60:	str	x24, [x6]
    2d64:	msub	w22, w22, w16, w23
    2d68:	strb	w9, [x7, #4]
    2d6c:	ldrb	w22, [x17, w22, uxtw]
    2d70:	ldr	x7, [x6]
    2d74:	strb	w22, [x7, #1]
    2d78:	ldr	x7, [x6]
    2d7c:	strb	w9, [x7, #2]
    2d80:	ldrb	w7, [x1, w20, uxtw]
    2d84:	ldr	x20, [x6]
    2d88:	strb	w7, [x20, #3]
    2d8c:	ldr	x7, [x4]
    2d90:	add	x7, x7, #0x1
    2d94:	str	x7, [x4]
    2d98:	ldr	x7, [x6]
    2d9c:	add	x7, x7, #0x4
    2da0:	b	2ce0 <PyInit__codecs_kr@@Base+0x3ec>
    2da4:	mov	x0, xzr
    2da8:	ldp	x20, x19, [sp, #32]
    2dac:	ldp	x22, x21, [sp, #16]
    2db0:	ldp	x24, x23, [sp], #48
    2db4:	ret
    2db8:	stp	x29, x30, [sp, #-96]!
    2dbc:	stp	x28, x27, [sp, #16]
    2dc0:	stp	x26, x25, [sp, #32]
    2dc4:	stp	x24, x23, [sp, #48]
    2dc8:	stp	x22, x21, [sp, #64]
    2dcc:	stp	x20, x19, [sp, #80]
    2dd0:	mov	x29, sp
    2dd4:	adrp	x26, 13000 <PyInit__codecs_kr@@Base+0x1070c>
    2dd8:	adrp	x27, 2d000 <PyInit__codecs_kr@@Base+0x2a70c>
    2ddc:	mov	x19, x4
    2de0:	mov	x21, x3
    2de4:	mov	x20, x2
    2de8:	mov	w24, #0xff41                	// #65345
    2dec:	mov	w25, #0x7f                  	// #127
    2df0:	add	x26, x26, #0xcde
    2df4:	add	x27, x27, #0xd70
    2df8:	mov	w23, #0xfffe                	// #65534
    2dfc:	b	2e1c <PyInit__codecs_kr@@Base+0x528>
    2e00:	ldr	x8, [x20]
    2e04:	mov	x21, x28
    2e08:	add	x8, x8, #0x1
    2e0c:	str	x8, [x20]
    2e10:	mov	w8, #0x2                   	// #2
    2e14:	cmp	w8, #0x1
    2e18:	b.eq	3030 <PyInit__codecs_kr@@Base+0x73c>  // b.none
    2e1c:	subs	x28, x21, #0x1
    2e20:	b.lt	302c <PyInit__codecs_kr@@Base+0x738>  // b.tstop
    2e24:	ldr	x8, [x20]
    2e28:	ldrsb	w9, [x8]
    2e2c:	and	w1, w9, #0xff
    2e30:	tbnz	w9, #31, 2e48 <PyInit__codecs_kr@@Base+0x554>
    2e34:	mov	x0, x19
    2e38:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    2e3c:	tbz	w0, #31, 2e00 <PyInit__codecs_kr@@Base+0x50c>
    2e40:	mov	x22, #0xfffffffffffffffc    	// #-4
    2e44:	b	2e54 <PyInit__codecs_kr@@Base+0x560>
    2e48:	subs	x28, x21, #0x2
    2e4c:	b.ge	2e5c <PyInit__codecs_kr@@Base+0x568>  // b.tcont
    2e50:	mov	x22, #0xfffffffffffffffe    	// #-2
    2e54:	mov	w8, #0x1                   	// #1
    2e58:	b	2e14 <PyInit__codecs_kr@@Base+0x520>
    2e5c:	cmp	w1, #0xa4
    2e60:	b.ne	2e88 <PyInit__codecs_kr@@Base+0x594>  // b.any
    2e64:	ldrb	w10, [x8, #1]
    2e68:	cmp	w10, #0xd4
    2e6c:	b.ne	2e88 <PyInit__codecs_kr@@Base+0x594>  // b.any
    2e70:	subs	x28, x21, #0x8
    2e74:	b.ge	2edc <PyInit__codecs_kr@@Base+0x5e8>  // b.tcont
    2e78:	mov	x22, #0xfffffffffffffffe    	// #-2
    2e7c:	mov	w8, #0x1                   	// #1
    2e80:	cbnz	w8, 2e14 <PyInit__codecs_kr@@Base+0x520>
    2e84:	b	2f98 <PyInit__codecs_kr@@Base+0x6a4>
    2e88:	and	x9, x9, #0xff
    2e8c:	eor	x10, x9, #0x80
    2e90:	lsl	x9, x10, #4
    2e94:	ldr	x9, [x27, x9]
    2e98:	cbz	x9, 2ed0 <PyInit__codecs_kr@@Base+0x5dc>
    2e9c:	ldrb	w12, [x8, #1]
    2ea0:	add	x11, x27, x10, lsl #4
    2ea4:	ldrb	w8, [x11, #8]
    2ea8:	eor	x10, x12, #0x80
    2eac:	cmp	w10, w8
    2eb0:	b.cc	2ed0 <PyInit__codecs_kr@@Base+0x5dc>  // b.lo, b.ul, b.last
    2eb4:	ldrb	w11, [x11, #9]
    2eb8:	cmp	w10, w11
    2ebc:	b.hi	2ed0 <PyInit__codecs_kr@@Base+0x5dc>  // b.pmore
    2ec0:	sub	x8, x10, x8
    2ec4:	ldrh	w1, [x9, x8, lsl #1]
    2ec8:	cmp	w1, w23
    2ecc:	b.ne	2f28 <PyInit__codecs_kr@@Base+0x634>  // b.any
    2ed0:	mov	w8, #0x1                   	// #1
    2ed4:	mov	w22, #0x1                   	// #1
    2ed8:	b	2e14 <PyInit__codecs_kr@@Base+0x520>
    2edc:	ldrb	w9, [x8, #2]
    2ee0:	cmp	w9, #0xa4
    2ee4:	b.ne	2f8c <PyInit__codecs_kr@@Base+0x698>  // b.any
    2ee8:	ldrb	w9, [x8, #4]
    2eec:	cmp	w9, #0xa4
    2ef0:	b.ne	2f8c <PyInit__codecs_kr@@Base+0x698>  // b.any
    2ef4:	ldrb	w9, [x8, #6]
    2ef8:	cmp	w9, #0xa4
    2efc:	b.ne	2f8c <PyInit__codecs_kr@@Base+0x698>  // b.any
    2f00:	ldrb	w9, [x8, #3]
    2f04:	add	w10, w9, #0x5f
    2f08:	and	w10, w10, #0xff
    2f0c:	cmp	w10, #0x1d
    2f10:	b.hi	2f48 <PyInit__codecs_kr@@Base+0x654>  // b.pmore
    2f14:	adrp	x10, 13000 <PyInit__codecs_kr@@Base+0x1070c>
    2f18:	add	x10, x10, #0xcc0
    2f1c:	add	x9, x9, x10
    2f20:	ldurb	w9, [x9, #-161]
    2f24:	b	2f4c <PyInit__codecs_kr@@Base+0x658>
    2f28:	mov	x0, x19
    2f2c:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    2f30:	tbnz	w0, #31, 2e40 <PyInit__codecs_kr@@Base+0x54c>
    2f34:	ldr	x8, [x20]
    2f38:	mov	x21, x28
    2f3c:	add	x8, x8, #0x2
    2f40:	str	x8, [x20]
    2f44:	b	2f98 <PyInit__codecs_kr@@Base+0x6a4>
    2f48:	mov	w9, #0x7f                  	// #127
    2f4c:	ldrb	w10, [x8, #7]
    2f50:	ldrb	w8, [x8, #5]
    2f54:	cmp	x10, #0xd4
    2f58:	b.ne	2f64 <PyInit__codecs_kr@@Base+0x670>  // b.any
    2f5c:	mov	w10, wzr
    2f60:	b	2f84 <PyInit__codecs_kr@@Base+0x690>
    2f64:	add	w11, w10, #0x5f
    2f68:	and	w11, w11, #0xff
    2f6c:	cmp	w11, #0x1d
    2f70:	b.hi	2f80 <PyInit__codecs_kr@@Base+0x68c>  // b.pmore
    2f74:	add	x10, x10, x26
    2f78:	ldurb	w10, [x10, #-161]
    2f7c:	b	2f84 <PyInit__codecs_kr@@Base+0x690>
    2f80:	mov	w10, #0x7f                  	// #127
    2f84:	cmp	w9, #0x7f
    2f88:	b.ne	2fa0 <PyInit__codecs_kr@@Base+0x6ac>  // b.any
    2f8c:	mov	w8, #0x1                   	// #1
    2f90:	mov	w22, #0x1                   	// #1
    2f94:	cbnz	w8, 2e14 <PyInit__codecs_kr@@Base+0x520>
    2f98:	mov	w8, wzr
    2f9c:	b	2e14 <PyInit__codecs_kr@@Base+0x520>
    2fa0:	add	w11, w8, #0x41
    2fa4:	add	w8, w8, w24
    2fa8:	and	w11, w11, #0xff
    2fac:	and	w8, w8, #0xffff
    2fb0:	cmp	w11, #0x15
    2fb4:	csel	w11, w8, w25, cc  // cc = lo, ul, last
    2fb8:	cmp	w11, #0x7f
    2fbc:	mov	w8, #0x1                   	// #1
    2fc0:	b.eq	3010 <PyInit__codecs_kr@@Base+0x71c>  // b.none
    2fc4:	cmp	w10, #0x7f
    2fc8:	b.eq	3010 <PyInit__codecs_kr@@Base+0x71c>  // b.none
    2fcc:	mov	w8, #0x1c                  	// #28
    2fd0:	mul	w8, w11, w8
    2fd4:	mov	w11, #0x24c                 	// #588
    2fd8:	madd	w8, w9, w11, w8
    2fdc:	add	w8, w8, w10
    2fe0:	mov	w9, #0xac00                	// #44032
    2fe4:	add	w1, w8, w9
    2fe8:	mov	x0, x19
    2fec:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    2ff0:	tbnz	w0, #31, 301c <PyInit__codecs_kr@@Base+0x728>
    2ff4:	ldr	x9, [x20]
    2ff8:	mov	w8, wzr
    2ffc:	mov	x21, x28
    3000:	add	x9, x9, #0x8
    3004:	str	x9, [x20]
    3008:	cbnz	wzr, 2e14 <PyInit__codecs_kr@@Base+0x520>
    300c:	b	2f98 <PyInit__codecs_kr@@Base+0x6a4>
    3010:	mov	w22, #0x1                   	// #1
    3014:	cbnz	w8, 2e14 <PyInit__codecs_kr@@Base+0x520>
    3018:	b	2f98 <PyInit__codecs_kr@@Base+0x6a4>
    301c:	mov	x22, #0xfffffffffffffffc    	// #-4
    3020:	mov	w8, #0x1                   	// #1
    3024:	cbnz	w8, 2e14 <PyInit__codecs_kr@@Base+0x520>
    3028:	b	2f98 <PyInit__codecs_kr@@Base+0x6a4>
    302c:	mov	x22, xzr
    3030:	mov	x0, x22
    3034:	ldp	x20, x19, [sp, #80]
    3038:	ldp	x22, x21, [sp, #64]
    303c:	ldp	x24, x23, [sp, #48]
    3040:	ldp	x26, x25, [sp, #32]
    3044:	ldp	x28, x27, [sp, #16]
    3048:	ldp	x29, x30, [sp], #96
    304c:	ret
    3050:	adrp	x8, 2c000 <PyInit__codecs_kr@@Base+0x2970c>
    3054:	add	x8, x8, #0xd70
    3058:	b	3068 <PyInit__codecs_kr@@Base+0x774>
    305c:	mov	w0, #0x1                   	// #1
    3060:	mov	w9, #0x1                   	// #1
    3064:	cbnz	w9, 317c <PyInit__codecs_kr@@Base+0x888>
    3068:	ldr	x9, [x4]
    306c:	cmp	x9, x5
    3070:	b.ge	3178 <PyInit__codecs_kr@@Base+0x884>  // b.tcont
    3074:	cmp	w2, #0x2
    3078:	b.eq	30c4 <PyInit__codecs_kr@@Base+0x7d0>  // b.none
    307c:	cmp	w2, #0x1
    3080:	b.ne	30d4 <PyInit__codecs_kr@@Base+0x7e0>  // b.any
    3084:	ldrb	w11, [x3, x9]
    3088:	cmp	w11, #0x7f
    308c:	b.hi	30e0 <PyInit__codecs_kr@@Base+0x7ec>  // b.pmore
    3090:	subs	x10, x7, #0x1
    3094:	b.lt	30f0 <PyInit__codecs_kr@@Base+0x7fc>  // b.tstop
    3098:	ldr	x12, [x6]
    309c:	mov	w9, wzr
    30a0:	strb	w11, [x12]
    30a4:	ldr	x11, [x4]
    30a8:	add	x11, x11, #0x1
    30ac:	str	x11, [x4]
    30b0:	ldr	x11, [x6]
    30b4:	add	x11, x11, #0x1
    30b8:	mov	x7, x10
    30bc:	str	x11, [x6]
    30c0:	b	3064 <PyInit__codecs_kr@@Base+0x770>
    30c4:	ldrh	w11, [x3, x9, lsl #1]
    30c8:	cmp	w11, #0x7f
    30cc:	b.ls	3090 <PyInit__codecs_kr@@Base+0x79c>  // b.plast
    30d0:	b	30e0 <PyInit__codecs_kr@@Base+0x7ec>
    30d4:	ldr	w11, [x3, x9, lsl #2]
    30d8:	cmp	w11, #0x7f
    30dc:	b.ls	3090 <PyInit__codecs_kr@@Base+0x79c>  // b.plast
    30e0:	lsr	w9, w11, #16
    30e4:	cbnz	w9, 305c <PyInit__codecs_kr@@Base+0x768>
    30e8:	subs	x10, x7, #0x2
    30ec:	b.ge	30fc <PyInit__codecs_kr@@Base+0x808>  // b.tcont
    30f0:	mov	w9, #0x1                   	// #1
    30f4:	mov	x0, #0xffffffffffffffff    	// #-1
    30f8:	b	3064 <PyInit__codecs_kr@@Base+0x770>
    30fc:	lsr	w12, w11, #8
    3100:	lsl	x9, x12, #4
    3104:	ldr	x9, [x8, x9]
    3108:	cbz	x9, 305c <PyInit__codecs_kr@@Base+0x768>
    310c:	add	x12, x8, x12, lsl #4
    3110:	ldrb	w14, [x12, #8]
    3114:	and	w13, w11, #0xff
    3118:	subs	w11, w13, w14
    311c:	b.cc	305c <PyInit__codecs_kr@@Base+0x768>  // b.lo, b.ul, b.last
    3120:	ldrb	w12, [x12, #9]
    3124:	cmp	w13, w12
    3128:	b.hi	305c <PyInit__codecs_kr@@Base+0x768>  // b.pmore
    312c:	ldrsh	w11, [x9, w11, uxtw #1]
    3130:	cmn	w11, #0x1
    3134:	b.eq	305c <PyInit__codecs_kr@@Base+0x768>  // b.none
    3138:	ldr	x12, [x6]
    313c:	lsr	w13, w11, #8
    3140:	orr	w13, w13, #0x80
    3144:	cmp	w11, #0x0
    3148:	strb	w13, [x12]
    314c:	ldr	x12, [x6]
    3150:	orr	w13, w11, #0x80
    3154:	csel	w11, w13, w11, ge  // ge = tcont
    3158:	mov	w9, wzr
    315c:	strb	w11, [x12, #1]
    3160:	ldr	x11, [x4]
    3164:	add	x11, x11, #0x1
    3168:	str	x11, [x4]
    316c:	ldr	x11, [x6]
    3170:	add	x11, x11, #0x2
    3174:	b	30b8 <PyInit__codecs_kr@@Base+0x7c4>
    3178:	mov	x0, xzr
    317c:	ret
    3180:	stp	x29, x30, [sp, #-80]!
    3184:	stp	x26, x25, [sp, #16]
    3188:	stp	x24, x23, [sp, #32]
    318c:	stp	x22, x21, [sp, #48]
    3190:	stp	x20, x19, [sp, #64]
    3194:	mov	x29, sp
    3198:	adrp	x23, 2d000 <PyInit__codecs_kr@@Base+0x2a70c>
    319c:	adrp	x24, 2e000 <PyInit__codecs_kr@@Base+0x2b70c>
    31a0:	mov	x19, x4
    31a4:	mov	x21, x3
    31a8:	mov	x20, x2
    31ac:	add	x23, x23, #0xd70
    31b0:	add	x24, x24, #0xd70
    31b4:	mov	w25, #0xfffe                	// #65534
    31b8:	b	31c8 <PyInit__codecs_kr@@Base+0x8d4>
    31bc:	mov	w8, #0x1                   	// #1
    31c0:	mov	x22, #0xfffffffffffffffc    	// #-4
    31c4:	cbnz	w8, 32dc <PyInit__codecs_kr@@Base+0x9e8>
    31c8:	subs	x26, x21, #0x1
    31cc:	b.lt	32d8 <PyInit__codecs_kr@@Base+0x9e4>  // b.tstop
    31d0:	ldr	x9, [x20]
    31d4:	ldrsb	w8, [x9]
    31d8:	and	w1, w8, #0xff
    31dc:	tbnz	w8, #31, 3204 <PyInit__codecs_kr@@Base+0x910>
    31e0:	mov	x0, x19
    31e4:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    31e8:	tbnz	w0, #31, 31bc <PyInit__codecs_kr@@Base+0x8c8>
    31ec:	ldr	x9, [x20]
    31f0:	mov	w8, wzr
    31f4:	add	x9, x9, #0x1
    31f8:	mov	x21, x26
    31fc:	str	x9, [x20]
    3200:	b	31c4 <PyInit__codecs_kr@@Base+0x8d0>
    3204:	subs	x26, x21, #0x2
    3208:	b.ge	3218 <PyInit__codecs_kr@@Base+0x924>  // b.tcont
    320c:	mov	w8, #0x1                   	// #1
    3210:	mov	x22, #0xfffffffffffffffe    	// #-2
    3214:	b	31c4 <PyInit__codecs_kr@@Base+0x8d0>
    3218:	and	x8, x8, #0xff
    321c:	eor	x10, x8, #0x80
    3220:	lsl	x8, x10, #4
    3224:	ldr	x8, [x23, x8]
    3228:	cbz	x8, 3260 <PyInit__codecs_kr@@Base+0x96c>
    322c:	ldrb	w11, [x9, #1]
    3230:	add	x12, x23, x10, lsl #4
    3234:	ldrb	w10, [x12, #8]
    3238:	eor	x11, x11, #0x80
    323c:	cmp	w11, w10
    3240:	b.cc	3260 <PyInit__codecs_kr@@Base+0x96c>  // b.lo, b.ul, b.last
    3244:	ldrb	w12, [x12, #9]
    3248:	cmp	w11, w12
    324c:	b.hi	3260 <PyInit__codecs_kr@@Base+0x96c>  // b.pmore
    3250:	sub	x10, x11, x10
    3254:	ldrh	w8, [x8, x10, lsl #1]
    3258:	cmp	w8, w25
    325c:	b.ne	32a8 <PyInit__codecs_kr@@Base+0x9b4>  // b.any
    3260:	lsl	x8, x1, #4
    3264:	ldr	x8, [x24, x8]
    3268:	cbz	x8, 329c <PyInit__codecs_kr@@Base+0x9a8>
    326c:	add	x11, x24, x1, lsl #4
    3270:	ldrb	w9, [x9, #1]
    3274:	ldrb	w10, [x11, #8]
    3278:	cmp	w9, w10
    327c:	b.cc	329c <PyInit__codecs_kr@@Base+0x9a8>  // b.lo, b.ul, b.last
    3280:	ldrb	w11, [x11, #9]
    3284:	cmp	w9, w11
    3288:	b.hi	329c <PyInit__codecs_kr@@Base+0x9a8>  // b.pmore
    328c:	sub	x9, x9, x10
    3290:	ldrh	w1, [x8, x9, lsl #1]
    3294:	cmp	w1, w25
    3298:	b.ne	32bc <PyInit__codecs_kr@@Base+0x9c8>  // b.any
    329c:	mov	w22, #0x1                   	// #1
    32a0:	mov	w8, #0x1                   	// #1
    32a4:	b	31c4 <PyInit__codecs_kr@@Base+0x8d0>
    32a8:	mov	x0, x19
    32ac:	mov	w1, w8
    32b0:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    32b4:	tbz	w0, #31, 32c8 <PyInit__codecs_kr@@Base+0x9d4>
    32b8:	b	31bc <PyInit__codecs_kr@@Base+0x8c8>
    32bc:	mov	x0, x19
    32c0:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    32c4:	tbnz	w0, #31, 31bc <PyInit__codecs_kr@@Base+0x8c8>
    32c8:	ldr	x9, [x20]
    32cc:	mov	w8, wzr
    32d0:	add	x9, x9, #0x2
    32d4:	b	31f8 <PyInit__codecs_kr@@Base+0x904>
    32d8:	mov	x22, xzr
    32dc:	mov	x0, x22
    32e0:	ldp	x20, x19, [sp, #64]
    32e4:	ldp	x22, x21, [sp, #48]
    32e8:	ldp	x24, x23, [sp, #32]
    32ec:	ldp	x26, x25, [sp, #16]
    32f0:	ldp	x29, x30, [sp], #80
    32f4:	ret
    32f8:	stp	x29, x30, [sp, #-96]!
    32fc:	stp	x28, x27, [sp, #16]
    3300:	stp	x26, x25, [sp, #32]
    3304:	stp	x24, x23, [sp, #48]
    3308:	stp	x22, x21, [sp, #64]
    330c:	stp	x20, x19, [sp, #80]
    3310:	mov	w9, #0x5c4d                	// #23629
    3314:	adrp	x10, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    3318:	mov	w11, #0x4925                	// #18725
    331c:	mov	w12, #0x6187                	// #24967
    3320:	adrp	x14, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    3324:	adrp	x16, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    3328:	adrp	x18, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    332c:	adrp	x1, 2c000 <PyInit__codecs_kr@@Base+0x2970c>
    3330:	mov	w8, #0xffff5400            	// #-44032
    3334:	movk	w9, #0xdee9, lsl #16
    3338:	add	x10, x10, #0x976
    333c:	movk	w11, #0x2492, lsl #16
    3340:	movk	w12, #0x8618, lsl #16
    3344:	mov	w13, #0x15                  	// #21
    3348:	add	x14, x14, #0x996
    334c:	mov	w15, #0x1c                  	// #28
    3350:	add	x16, x16, #0x956
    3354:	mov	w17, #0xffffcecf            	// #-12593
    3358:	add	x18, x18, #0x8f0
    335c:	add	x1, x1, #0xd70
    3360:	mov	w19, #0xffff                	// #65535
    3364:	mov	w20, #0xffffdf00            	// #-8448
    3368:	mov	w21, #0xffffb600            	// #-18944
    336c:	mov	w24, #0x5e                  	// #94
    3370:	mov	w25, #0x43                  	// #67
    3374:	mov	w26, #0x31                  	// #49
    3378:	b	3388 <PyInit__codecs_kr@@Base+0xa94>
    337c:	mov	x0, #0xffffffffffffffff    	// #-1
    3380:	mov	w27, #0x1                   	// #1
    3384:	cbnz	w27, 3584 <PyInit__codecs_kr@@Base+0xc90>
    3388:	ldr	x27, [x4]
    338c:	cmp	x27, x5
    3390:	b.ge	3580 <PyInit__codecs_kr@@Base+0xc8c>  // b.tcont
    3394:	cmp	w2, #0x2
    3398:	b.eq	33b4 <PyInit__codecs_kr@@Base+0xac0>  // b.none
    339c:	cmp	w2, #0x1
    33a0:	b.ne	33d4 <PyInit__codecs_kr@@Base+0xae0>  // b.any
    33a4:	ldrb	w29, [x3, x27]
    33a8:	cmp	w29, #0x7f
    33ac:	b.hi	33c0 <PyInit__codecs_kr@@Base+0xacc>  // b.pmore
    33b0:	b	33e0 <PyInit__codecs_kr@@Base+0xaec>
    33b4:	ldrh	w29, [x3, x27, lsl #1]
    33b8:	cmp	w29, #0x7f
    33bc:	b.ls	33e0 <PyInit__codecs_kr@@Base+0xaec>  // b.plast
    33c0:	lsr	w22, w29, #16
    33c4:	cbz	w22, 340c <PyInit__codecs_kr@@Base+0xb18>
    33c8:	mov	w27, #0x1                   	// #1
    33cc:	mov	w0, #0x1                   	// #1
    33d0:	b	3384 <PyInit__codecs_kr@@Base+0xa90>
    33d4:	ldr	w29, [x3, x27, lsl #2]
    33d8:	cmp	w29, #0x7f
    33dc:	b.hi	33c0 <PyInit__codecs_kr@@Base+0xacc>  // b.pmore
    33e0:	subs	x28, x7, #0x1
    33e4:	b.lt	337c <PyInit__codecs_kr@@Base+0xa88>  // b.tstop
    33e8:	ldr	x7, [x6]
    33ec:	mov	w27, wzr
    33f0:	strb	w29, [x7]
    33f4:	ldr	x7, [x4]
    33f8:	add	x7, x7, #0x1
    33fc:	str	x7, [x4]
    3400:	ldr	x7, [x6]
    3404:	add	x7, x7, #0x1
    3408:	b	34b0 <PyInit__codecs_kr@@Base+0xbbc>
    340c:	subs	x28, x7, #0x2
    3410:	b.lt	337c <PyInit__codecs_kr@@Base+0xa88>  // b.tstop
    3414:	add	w27, w29, w8
    3418:	lsr	w30, w27, #2
    341c:	cmp	w30, #0xae8
    3420:	b.hi	3474 <PyInit__codecs_kr@@Base+0xb80>  // b.pmore
    3424:	umull	x22, w30, w11
    3428:	lsr	x22, x22, #32
    342c:	mul	x29, x22, x12
    3430:	lsr	x29, x29, #32
    3434:	sub	w30, w22, w29
    3438:	add	w29, w29, w30, lsr #1
    343c:	lsr	w29, w29, #4
    3440:	umull	x7, w27, w9
    3444:	msub	w29, w29, w13, w22
    3448:	lsr	x7, x7, #41
    344c:	ldrb	w29, [x14, w29, uxtw]
    3450:	ldrb	w7, [x10, x7]
    3454:	msub	w22, w22, w15, w27
    3458:	ldrb	w22, [x16, w22, uxtw]
    345c:	lsl	w27, w29, #5
    3460:	orr	w29, w27, w7, lsl #10
    3464:	orr	w7, w22, w27
    3468:	lsr	w22, w29, #8
    346c:	orr	w29, w22, #0xffffff80
    3470:	b	3488 <PyInit__codecs_kr@@Base+0xb94>
    3474:	add	w27, w29, w17
    3478:	cmp	w27, #0x32
    347c:	b.hi	34bc <PyInit__codecs_kr@@Base+0xbc8>  // b.pmore
    3480:	ldrh	w7, [x18, w27, uxtw #1]
    3484:	lsr	w29, w7, #8
    3488:	ldr	x22, [x6]
    348c:	mov	w27, wzr
    3490:	strb	w29, [x22]
    3494:	ldr	x22, [x6]
    3498:	strb	w7, [x22, #1]
    349c:	ldr	x7, [x4]
    34a0:	add	x7, x7, #0x1
    34a4:	str	x7, [x4]
    34a8:	ldr	x7, [x6]
    34ac:	add	x7, x7, #0x2
    34b0:	str	x7, [x6]
    34b4:	mov	x7, x28
    34b8:	b	3384 <PyInit__codecs_kr@@Base+0xa90>
    34bc:	lsr	w30, w29, #8
    34c0:	lsl	x22, x30, #4
    34c4:	ldr	x27, [x1, x22]
    34c8:	cbz	x27, 33c8 <PyInit__codecs_kr@@Base+0xad4>
    34cc:	add	x30, x1, x30, lsl #4
    34d0:	ldrb	w23, [x30, #8]
    34d4:	and	w22, w29, #0xff
    34d8:	subs	w29, w22, w23
    34dc:	b.cc	33c8 <PyInit__codecs_kr@@Base+0xad4>  // b.lo, b.ul, b.last
    34e0:	ldrb	w23, [x30, #9]
    34e4:	cmp	w22, w23
    34e8:	b.hi	33c8 <PyInit__codecs_kr@@Base+0xad4>  // b.pmore
    34ec:	ldrh	w29, [x27, w29, uxtw #1]
    34f0:	cmp	w29, w19
    34f4:	b.eq	33c8 <PyInit__codecs_kr@@Base+0xad4>  // b.none
    34f8:	add	w22, w29, w20
    34fc:	cmp	w22, #0xc00
    3500:	b.cc	3514 <PyInit__codecs_kr@@Base+0xc20>  // b.lo, b.ul, b.last
    3504:	add	w22, w29, w21
    3508:	ubfx	w22, w22, #10, #6
    350c:	cmp	w22, #0xc
    3510:	b.hi	33c8 <PyInit__codecs_kr@@Base+0xad4>  // b.pmore
    3514:	and	w22, w29, #0xff
    3518:	sub	w22, w22, #0x21
    351c:	and	w22, w22, #0xffff
    3520:	cmp	w22, #0x5d
    3524:	b.hi	33c8 <PyInit__codecs_kr@@Base+0xad4>  // b.pmore
    3528:	lsr	w22, w29, #9
    352c:	mov	w30, #0x191                 	// #401
    3530:	cmp	w22, #0x25
    3534:	mov	w22, #0x176                 	// #374
    3538:	lsr	w7, w29, #8
    353c:	csel	w22, w30, w22, cc  // cc = lo, ul, last
    3540:	ldr	x23, [x6]
    3544:	add	w7, w22, w7
    3548:	lsr	w22, w7, #1
    354c:	sbfx	w7, w7, #0, #1
    3550:	and	w7, w7, w24
    3554:	add	w7, w29, w7
    3558:	strb	w22, [x23]
    355c:	add	w7, w7, #0xdf
    3560:	and	w22, w7, #0xfe
    3564:	ldr	x23, [x6]
    3568:	cmp	w22, #0x4e
    356c:	csel	w22, w26, w25, cc  // cc = lo, ul, last
    3570:	mov	w27, wzr
    3574:	add	w7, w22, w7
    3578:	strb	w7, [x23, #1]
    357c:	b	349c <PyInit__codecs_kr@@Base+0xba8>
    3580:	mov	x0, xzr
    3584:	ldp	x20, x19, [sp, #80]
    3588:	ldp	x22, x21, [sp, #64]
    358c:	ldp	x24, x23, [sp, #48]
    3590:	ldp	x26, x25, [sp, #32]
    3594:	ldp	x28, x27, [sp, #16]
    3598:	ldp	x29, x30, [sp], #96
    359c:	ret
    35a0:	stp	x29, x30, [sp, #-96]!
    35a4:	stp	x28, x27, [sp, #16]
    35a8:	stp	x26, x25, [sp, #32]
    35ac:	stp	x24, x23, [sp, #48]
    35b0:	stp	x22, x21, [sp, #64]
    35b4:	stp	x20, x19, [sp, #80]
    35b8:	mov	x29, sp
    35bc:	mov	w26, #0x303                 	// #771
    35c0:	mov	w27, #0x1                   	// #1
    35c4:	adrp	x23, 2d000 <PyInit__codecs_kr@@Base+0x2a70c>
    35c8:	mov	x19, x4
    35cc:	mov	x21, x3
    35d0:	mov	x20, x2
    35d4:	movk	w26, #0xc303, lsl #16
    35d8:	movk	w27, #0xc004, lsl #16
    35dc:	mov	w28, #0x3100                	// #12544
    35e0:	mov	w25, #0xac00                	// #44032
    35e4:	add	x23, x23, #0xd70
    35e8:	b	3608 <PyInit__codecs_kr@@Base+0xd14>
    35ec:	ldr	x8, [x20]
    35f0:	mov	x21, x24
    35f4:	add	x8, x8, #0x1
    35f8:	str	x8, [x20]
    35fc:	mov	w8, #0x2                   	// #2
    3600:	cmp	w8, #0x1
    3604:	b.eq	38c8 <PyInit__codecs_kr@@Base+0xfd4>  // b.none
    3608:	subs	x24, x21, #0x1
    360c:	b.lt	38c4 <PyInit__codecs_kr@@Base+0xfd0>  // b.tstop
    3610:	ldr	x9, [x20]
    3614:	ldrsb	w8, [x9]
    3618:	and	w1, w8, #0xff
    361c:	tbnz	w8, #31, 3638 <PyInit__codecs_kr@@Base+0xd44>
    3620:	mov	x0, x19
    3624:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    3628:	tbz	w0, #31, 35ec <PyInit__codecs_kr@@Base+0xcf8>
    362c:	mov	x22, #0xfffffffffffffffc    	// #-4
    3630:	mov	w8, #0x1                   	// #1
    3634:	b	3600 <PyInit__codecs_kr@@Base+0xd0c>
    3638:	subs	x24, x21, #0x2
    363c:	b.ge	364c <PyInit__codecs_kr@@Base+0xd58>  // b.tcont
    3640:	mov	x22, #0xfffffffffffffffe    	// #-2
    3644:	mov	w8, #0x1                   	// #1
    3648:	b	3600 <PyInit__codecs_kr@@Base+0xd0c>
    364c:	ldrb	w9, [x9, #1]
    3650:	cmp	w1, #0xd7
    3654:	and	x10, x8, #0xff
    3658:	b.hi	36a8 <PyInit__codecs_kr@@Base+0xdb4>  // b.pmore
    365c:	ubfx	x8, x10, #2, #5
    3660:	sub	x11, x8, #0x1
    3664:	cmp	x11, #0x13
    3668:	b.hi	37f4 <PyInit__codecs_kr@@Base+0xf00>  // b.pmore
    366c:	ubfx	x11, x9, #5, #27
    3670:	bfi	w11, w10, #3, #2
    3674:	lsr	x10, x26, x11
    3678:	tbnz	w10, #0, 37f4 <PyInit__codecs_kr@@Base+0xf00>
    367c:	and	x9, x9, #0x1f
    3680:	lsr	x10, x27, x9
    3684:	tbnz	w10, #0, 37f4 <PyInit__codecs_kr@@Base+0xf00>
    3688:	cmp	w8, #0x1
    368c:	b.ne	37bc <PyInit__codecs_kr@@Base+0xec8>  // b.any
    3690:	cmp	w11, #0x2
    3694:	b.ne	37dc <PyInit__codecs_kr@@Base+0xee8>  // b.any
    3698:	cmp	w9, #0x1
    369c:	b.ne	384c <PyInit__codecs_kr@@Base+0xf58>  // b.any
    36a0:	mov	w1, #0x3000                	// #12288
    36a4:	b	385c <PyInit__codecs_kr@@Base+0xf68>
    36a8:	cmp	w9, #0x31
    36ac:	b.cs	36bc <PyInit__codecs_kr@@Base+0xdc8>  // b.hs, b.nlast
    36b0:	mov	w8, #0x1                   	// #1
    36b4:	mov	w22, #0x1                   	// #1
    36b8:	b	3600 <PyInit__codecs_kr@@Base+0xd0c>
    36bc:	sub	w8, w10, #0xfa
    36c0:	cmp	w8, #0x6
    36c4:	mov	w8, #0x1                   	// #1
    36c8:	b.cs	36d4 <PyInit__codecs_kr@@Base+0xde0>  // b.hs, b.nlast
    36cc:	mov	w22, #0x1                   	// #1
    36d0:	b	3600 <PyInit__codecs_kr@@Base+0xd0c>
    36d4:	cmp	w10, #0xdf
    36d8:	b.eq	36cc <PyInit__codecs_kr@@Base+0xdd8>  // b.none
    36dc:	sxtb	w8, w9
    36e0:	cmp	w8, #0x0
    36e4:	cset	w8, lt  // lt = tstop
    36e8:	cmp	w9, #0x91
    36ec:	cset	w11, cc  // cc = lo, ul, last
    36f0:	and	w11, w8, w11
    36f4:	mov	w8, #0x1                   	// #1
    36f8:	tbnz	w11, #0, 36cc <PyInit__codecs_kr@@Base+0xdd8>
    36fc:	and	w11, w9, #0x7f
    3700:	cmp	w11, #0x7f
    3704:	b.eq	36cc <PyInit__codecs_kr@@Base+0xdd8>  // b.none
    3708:	cmp	w10, #0xda
    370c:	b.ne	3720 <PyInit__codecs_kr@@Base+0xe2c>  // b.any
    3710:	add	w8, w9, #0x5f
    3714:	and	w8, w8, #0xff
    3718:	cmp	w8, #0x33
    371c:	b.cc	36b0 <PyInit__codecs_kr@@Base+0xdbc>  // b.lo, b.ul, b.last
    3720:	cmp	w1, #0xe0
    3724:	mov	w8, #0x69                  	// #105
    3728:	mov	w10, #0x4e                  	// #78
    372c:	csel	w8, w10, w8, cc  // cc = lo, ul, last
    3730:	cmp	w9, #0x91
    3734:	mov	w10, #0xffffffbd            	// #-67
    3738:	mov	w11, #0xffffffcf            	// #-49
    373c:	csel	w10, w11, w10, cc  // cc = lo, ul, last
    3740:	add	w9, w10, w9
    3744:	and	w10, w9, #0xff
    3748:	cmp	w10, #0x5d
    374c:	add	w8, w8, w1, lsl #1
    3750:	cinc	w8, w8, hi  // hi = pmore
    3754:	add	w8, w8, #0x21
    3758:	and	x11, x8, #0xff
    375c:	lsl	x8, x11, #4
    3760:	ldr	x8, [x23, x8]
    3764:	cbz	x8, 37ac <PyInit__codecs_kr@@Base+0xeb8>
    3768:	add	x12, x23, x11, lsl #4
    376c:	ldrb	w11, [x12, #8]
    3770:	sub	w13, w9, #0x5e
    3774:	cmp	w10, #0x5e
    3778:	csel	w9, w9, w13, cc  // cc = lo, ul, last
    377c:	add	w9, w9, #0x21
    3780:	cmp	w11, w9, uxtb
    3784:	b.hi	37ac <PyInit__codecs_kr@@Base+0xeb8>  // b.pmore
    3788:	ldrb	w10, [x12, #9]
    378c:	and	x9, x9, #0xff
    3790:	cmp	w9, w10
    3794:	b.hi	37ac <PyInit__codecs_kr@@Base+0xeb8>  // b.pmore
    3798:	sub	x9, x9, x11
    379c:	ldrh	w1, [x8, x9, lsl #1]
    37a0:	mov	w8, #0xfffe                	// #65534
    37a4:	cmp	w1, w8
    37a8:	b.ne	3894 <PyInit__codecs_kr@@Base+0xfa0>  // b.any
    37ac:	mov	w8, #0x1                   	// #1
    37b0:	mov	w22, #0x1                   	// #1
    37b4:	cbnz	w8, 3600 <PyInit__codecs_kr@@Base+0xd0c>
    37b8:	b	3800 <PyInit__codecs_kr@@Base+0xf0c>
    37bc:	cmp	w11, #0x2
    37c0:	b.ne	3808 <PyInit__codecs_kr@@Base+0xf14>  // b.any
    37c4:	cmp	w9, #0x1
    37c8:	b.ne	37f4 <PyInit__codecs_kr@@Base+0xf00>  // b.any
    37cc:	adrp	x9, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    37d0:	add	x9, x9, #0xa56
    37d4:	ldrb	w8, [x9, x8]
    37d8:	b	3858 <PyInit__codecs_kr@@Base+0xf64>
    37dc:	cmp	w9, #0x1
    37e0:	b.ne	37f4 <PyInit__codecs_kr@@Base+0xf00>  // b.any
    37e4:	adrp	x8, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    37e8:	add	x8, x8, #0xa36
    37ec:	ldrb	w8, [x8, x11]
    37f0:	b	3858 <PyInit__codecs_kr@@Base+0xf64>
    37f4:	mov	w8, #0x1                   	// #1
    37f8:	mov	w22, #0x1                   	// #1
    37fc:	cbnz	w8, 3600 <PyInit__codecs_kr@@Base+0xd0c>
    3800:	mov	w8, wzr
    3804:	b	3600 <PyInit__codecs_kr@@Base+0xd0c>
    3808:	adrp	x10, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    380c:	adrp	x12, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    3810:	add	x10, x10, #0x9f6
    3814:	add	x12, x12, #0x9b6
    3818:	ldrb	w10, [x10, x9]
    381c:	ldrb	w8, [x12, x8]
    3820:	adrp	x12, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    3824:	add	x12, x12, #0x9d6
    3828:	ldrb	w11, [x12, x11]
    382c:	cmp	w9, #0x1
    3830:	csel	w9, wzr, w10, eq  // eq = none
    3834:	mov	w10, #0x24c                 	// #588
    3838:	madd	w8, w8, w10, w9
    383c:	mov	w9, #0x1c                  	// #28
    3840:	madd	w8, w11, w9, w8
    3844:	add	w1, w8, w25
    3848:	b	385c <PyInit__codecs_kr@@Base+0xf68>
    384c:	adrp	x8, 1c000 <PyInit__codecs_kr@@Base+0x1970c>
    3850:	add	x8, x8, #0xa16
    3854:	ldrb	w8, [x8, x9]
    3858:	orr	w1, w8, w28
    385c:	mov	x0, x19
    3860:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    3864:	tbnz	w0, #31, 3884 <PyInit__codecs_kr@@Base+0xf90>
    3868:	ldr	x9, [x20]
    386c:	mov	w8, wzr
    3870:	mov	x21, x24
    3874:	add	x9, x9, #0x2
    3878:	str	x9, [x20]
    387c:	cbnz	wzr, 3600 <PyInit__codecs_kr@@Base+0xd0c>
    3880:	b	3800 <PyInit__codecs_kr@@Base+0xf0c>
    3884:	mov	x22, #0xfffffffffffffffc    	// #-4
    3888:	mov	w8, #0x1                   	// #1
    388c:	cbnz	w8, 3600 <PyInit__codecs_kr@@Base+0xd0c>
    3890:	b	3800 <PyInit__codecs_kr@@Base+0xf0c>
    3894:	mov	x0, x19
    3898:	bl	27d0 <_PyUnicodeWriter_WriteChar@plt>
    389c:	tbnz	w0, #31, 38b8 <PyInit__codecs_kr@@Base+0xfc4>
    38a0:	ldr	x9, [x20]
    38a4:	mov	w8, wzr
    38a8:	mov	x21, x24
    38ac:	add	x9, x9, #0x2
    38b0:	str	x9, [x20]
    38b4:	b	37b4 <PyInit__codecs_kr@@Base+0xec0>
    38b8:	mov	x22, #0xfffffffffffffffc    	// #-4
    38bc:	mov	w8, #0x1                   	// #1
    38c0:	b	37b4 <PyInit__codecs_kr@@Base+0xec0>
    38c4:	mov	x22, xzr
    38c8:	mov	x0, x22
    38cc:	ldp	x20, x19, [sp, #80]
    38d0:	ldp	x22, x21, [sp, #64]
    38d4:	ldp	x24, x23, [sp, #48]
    38d8:	ldp	x26, x25, [sp, #32]
    38dc:	ldp	x28, x27, [sp, #16]
    38e0:	ldp	x29, x30, [sp], #96
    38e4:	ret

Disassembly of section .fini:

00000000000038e8 <.fini>:
    38e8:	stp	x29, x30, [sp, #-16]!
    38ec:	mov	x29, sp
    38f0:	ldp	x29, x30, [sp], #16
    38f4:	ret
