
../repos/prog2/3.2:     file format elf32-littlearm


Disassembly of section .init:

00010358 <.init>:
   10358:	push	{r3, lr}
   1035c:	bl	103fc <abort@plt+0x3c>
   10360:	pop	{r3, pc}

Disassembly of section .plt:

00010364 <printf@plt-0x14>:
   10364:	push	{lr}		; (str lr, [sp, #-4]!)
   10368:	ldr	lr, [pc, #4]	; 10374 <printf@plt-0x4>
   1036c:	add	lr, pc, lr
   10370:	ldr	pc, [lr, #8]!
   10374:	andeq	r1, r1, ip, lsl #25

00010378 <printf@plt>:
   10378:	add	ip, pc, #0, 12
   1037c:	add	ip, ip, #69632	; 0x11000
   10380:	ldr	pc, [ip, #3212]!	; 0xc8c

00010384 <memcpy@plt>:
   10384:	add	ip, pc, #0, 12
   10388:	add	ip, ip, #69632	; 0x11000
   1038c:	ldr	pc, [ip, #3204]!	; 0xc84

00010390 <puts@plt>:
   10390:	add	ip, pc, #0, 12
   10394:	add	ip, ip, #69632	; 0x11000
   10398:	ldr	pc, [ip, #3196]!	; 0xc7c

0001039c <__libc_start_main@plt>:
   1039c:	add	ip, pc, #0, 12
   103a0:	add	ip, ip, #69632	; 0x11000
   103a4:	ldr	pc, [ip, #3188]!	; 0xc74

000103a8 <__gmon_start__@plt>:
   103a8:	add	ip, pc, #0, 12
   103ac:	add	ip, ip, #69632	; 0x11000
   103b0:	ldr	pc, [ip, #3180]!	; 0xc6c

000103b4 <strlen@plt>:
   103b4:	add	ip, pc, #0, 12
   103b8:	add	ip, ip, #69632	; 0x11000
   103bc:	ldr	pc, [ip, #3172]!	; 0xc64

000103c0 <abort@plt>:
   103c0:	add	ip, pc, #0, 12
   103c4:	add	ip, ip, #69632	; 0x11000
   103c8:	ldr	pc, [ip, #3164]!	; 0xc5c

Disassembly of section .text:

000103cc <.text>:
   103cc:	bleq	4c510 <abort@plt+0x3c150>
   103d0:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   103d4:	strbtmi	fp, [sl], -r2, lsl #24
   103d8:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   103dc:			; <UNDEFINED> instruction: 0xc010f8df
   103e0:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   103e4:	blmi	1223f8 <abort@plt+0x112038>
   103e8:	svc	0x00d8f7ff
   103ec:	svc	0x00e8f7ff
   103f0:	andeq	r0, r1, r9, lsl #25
   103f4:	andeq	r0, r1, ip, lsr #18
   103f8:	andeq	r0, r1, r9, asr #24
   103fc:	ldr	r3, [pc, #20]	; 10418 <abort@plt+0x58>
   10400:	ldr	r2, [pc, #20]	; 1041c <abort@plt+0x5c>
   10404:	add	r3, pc, r3
   10408:	ldr	r2, [r3, r2]
   1040c:	cmp	r2, #0
   10410:	bxeq	lr
   10414:	b	103a8 <__gmon_start__@plt>
   10418:	strdeq	r1, [r1], -r4
   1041c:	andeq	r0, r0, r8, lsr #32
   10420:	eorseq	pc, r4, r2, asr #4
   10424:	andeq	pc, r2, r0, asr #5
   10428:	teqeq	r4, #536870916	; 0x20000004	; <UNPREDICTABLE>
   1042c:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10430:	andle	r4, r5, r3, lsl #5
   10434:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10438:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1043c:	ldrmi	fp, [r8, -r3, lsl #2]
   10440:	svclt	0x00004770
   10444:	eorseq	pc, r4, r2, asr #4
   10448:	andeq	pc, r2, r0, asr #5
   1044c:	teqeq	r4, r2, asr #4	; <UNPREDICTABLE>
   10450:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   10454:	svceq	0x00d91a0b
   10458:			; <UNDEFINED> instruction: 0x01a3eb01
   1045c:	andle	r1, r5, r9, asr #32
   10460:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10464:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10468:	ldrmi	fp, [r8, -r3, lsl #2]
   1046c:	svclt	0x00004770
   10470:	vqrshl.s8	d27, d0, d2
   10474:	vmvn.i32	d16, #262144	; 0x00040000
   10478:	stmdavc	r3!, {r1, sl}
   1047c:			; <UNDEFINED> instruction: 0xf7ffb91b
   10480:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10484:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10488:	svclt	0x0000e7dc
   1048c:	mov	ip, sp
   10490:	sub	sp, sp, #8
   10494:	str	ip, [sp]
   10498:	str	lr, [sp, #4]
   1049c:	ldr	r2, [r0]
   104a0:	ldr	r3, [r1]
   104a4:	cmp	r3, r2
   104a8:	ble	104b4 <abort@plt+0xf4>
   104ac:	mvn	r0, #0
   104b0:	b	104c8 <abort@plt+0x108>
   104b4:	cmp	r2, r3
   104b8:	ble	104c4 <abort@plt+0x104>
   104bc:	mov	r0, #1
   104c0:	b	104c8 <abort@plt+0x108>
   104c4:	mov	r0, #0
   104c8:	ldr	lr, [sp, #4]
   104cc:	add	sp, sp, #8
   104d0:	bx	lr
   104d4:	mov	ip, sp
   104d8:	sub	sp, sp, #8
   104dc:	str	ip, [sp]
   104e0:	str	lr, [sp, #4]
   104e4:	mla	r0, r1, r2, r0
   104e8:	ldr	lr, [sp, #4]
   104ec:	add	sp, sp, #8
   104f0:	bx	lr
   104f4:	mov	ip, sp
   104f8:	sub	sp, sp, #16
   104fc:	str	ip, [sp]
   10500:	str	lr, [sp, #4]
   10504:	str	r4, [sp, #8]
   10508:	mov	ip, #0
   1050c:	cmp	ip, r2
   10510:	bge	10538 <abort@plt+0x178>
   10514:	ldrb	r3, [r0, ip]
   10518:	and	r4, r3, #255	; 0xff
   1051c:	ldrb	r3, [r1, ip]
   10520:	and	r3, r3, #255	; 0xff
   10524:	strb	r3, [r0, ip]
   10528:	and	r3, r4, #255	; 0xff
   1052c:	strb	r3, [r1, ip]
   10530:	add	ip, ip, #1
   10534:	b	1050c <abort@plt+0x14c>
   10538:	ldr	r4, [sp, #8]
   1053c:	ldr	lr, [sp, #4]
   10540:	add	sp, sp, #16
   10544:	bx	lr
   10548:	mov	ip, sp
   1054c:	sub	sp, sp, #48	; 0x30
   10550:	str	ip, [sp]
   10554:	str	lr, [sp, #4]
   10558:	str	r4, [sp, #12]
   1055c:	str	r5, [sp, #16]
   10560:	str	r6, [sp, #20]
   10564:	str	r7, [sp, #24]
   10568:	str	r8, [sp, #28]
   1056c:	str	r9, [sp, #32]
   10570:	str	sl, [sp, #36]	; 0x24
   10574:	str	fp, [sp, #40]	; 0x28
   10578:	mov	r7, r3
   1057c:	mov	r6, r2
   10580:	mov	r5, r1
   10584:	str	r0, [sp, #8]
   10588:	mov	sl, #0
   1058c:	cmp	sl, r5
   10590:	bge	10604 <abort@plt+0x244>
   10594:	mov	r2, r6
   10598:	mov	r1, sl
   1059c:	ldr	r0, [sp, #8]
   105a0:	bl	104d4 <abort@plt+0x114>
   105a4:	mov	fp, r0
   105a8:	mov	r4, fp
   105ac:	add	r8, sl, #1
   105b0:	cmp	r8, r5
   105b4:	bge	105ec <abort@plt+0x22c>
   105b8:	mov	r2, r6
   105bc:	mov	r1, r8
   105c0:	ldr	r0, [sp, #8]
   105c4:	bl	104d4 <abort@plt+0x114>
   105c8:	mov	r9, r0
   105cc:	mov	r1, r4
   105d0:	mov	r0, r9
   105d4:	blx	r7
   105d8:	cmp	r0, #0
   105dc:	bge	105e4 <abort@plt+0x224>
   105e0:	mov	r4, r9
   105e4:	add	r8, r8, #1
   105e8:	b	105b0 <abort@plt+0x1f0>
   105ec:	mov	r2, r6
   105f0:	mov	r1, fp
   105f4:	mov	r0, r4
   105f8:	bl	104f4 <abort@plt+0x134>
   105fc:	add	sl, sl, #1
   10600:	b	1058c <abort@plt+0x1cc>
   10604:	ldr	r4, [sp, #12]
   10608:	ldr	r5, [sp, #16]
   1060c:	ldr	r6, [sp, #20]
   10610:	ldr	r7, [sp, #24]
   10614:	ldr	r8, [sp, #28]
   10618:	ldr	r9, [sp, #32]
   1061c:	ldr	sl, [sp, #36]	; 0x24
   10620:	ldr	fp, [sp, #40]	; 0x28
   10624:	ldr	lr, [sp, #4]
   10628:	add	sp, sp, #48	; 0x30
   1062c:	bx	lr
   10630:	mov	ip, sp
   10634:	sub	sp, sp, #32
   10638:	str	ip, [sp]
   1063c:	str	lr, [sp, #4]
   10640:	str	r4, [sp, #8]
   10644:	str	r5, [sp, #12]
   10648:	str	r6, [sp, #16]
   1064c:	str	r7, [sp, #20]
   10650:	str	r8, [sp, #24]
   10654:	str	r9, [sp, #28]
   10658:	ldr	r9, [ip]
   1065c:	mov	r5, r3
   10660:	mov	r8, r2
   10664:	mov	r7, r1
   10668:	mov	r4, r0
   1066c:	mov	r6, #0
   10670:	cmp	r6, r8
   10674:	bge	106b4 <abort@plt+0x2f4>
   10678:	mov	r2, r8
   1067c:	mov	r1, r6
   10680:	mov	r0, r7
   10684:	bl	104d4 <abort@plt+0x114>
   10688:	mov	r1, r4
   1068c:	blx	r9
   10690:	cmp	r0, #0
   10694:	bne	106ac <abort@plt+0x2ec>
   10698:	mov	r2, r5
   1069c:	mov	r1, r6
   106a0:	mov	r0, r7
   106a4:	bl	104d4 <abort@plt+0x114>
   106a8:	b	106b8 <abort@plt+0x2f8>
   106ac:	add	r6, r6, #1
   106b0:	b	10670 <abort@plt+0x2b0>
   106b4:	mov	r0, #0
   106b8:	ldr	r4, [sp, #8]
   106bc:	ldr	r5, [sp, #12]
   106c0:	ldr	r6, [sp, #16]
   106c4:	ldr	r7, [sp, #20]
   106c8:	ldr	r8, [sp, #24]
   106cc:	ldr	r9, [sp, #28]
   106d0:	ldr	lr, [sp, #4]
   106d4:	add	sp, sp, #32
   106d8:	bx	lr
   106dc:	mov	ip, sp
   106e0:	sub	sp, sp, #40	; 0x28
   106e4:	str	ip, [sp]
   106e8:	str	lr, [sp, #4]
   106ec:	str	r4, [sp, #8]
   106f0:	str	r5, [sp, #12]
   106f4:	str	r6, [sp, #16]
   106f8:	str	r7, [sp, #20]
   106fc:	str	r8, [sp, #24]
   10700:	str	r9, [sp, #28]
   10704:	str	sl, [sp, #32]
   10708:	ldr	r8, [ip]
   1070c:	mov	r4, r3
   10710:	mov	r6, r1
   10714:	mov	r7, r0
   10718:	mov	r9, #0
   1071c:	sub	sl, r2, #1
   10720:	cmp	r9, sl
   10724:	bgt	107a4 <abort@plt+0x3e4>
   10728:	add	r3, r9, sl
   1072c:	asr	lr, r3, #31
   10730:	add	lr, r3, lr, lsr #31
   10734:	asr	r5, lr, #1
   10738:	mov	r2, r4
   1073c:	mov	r1, r5
   10740:	mov	r0, r6
   10744:	bl	104d4 <abort@plt+0x114>
   10748:	mov	r1, r0
   1074c:	mov	r0, r7
   10750:	blx	r8
   10754:	cmp	r0, #0
   10758:	bne	10790 <abort@plt+0x3d0>
   1075c:	mov	r2, r4
   10760:	mov	r1, r5
   10764:	mov	r0, r6
   10768:	bl	104d4 <abort@plt+0x114>
   1076c:	mov	r1, r0
   10770:	mov	r0, r7
   10774:	blx	r8
   10778:	cmn	r0, #1
   1077c:	beq	10788 <abort@plt+0x3c8>
   10780:	add	r9, r5, #1
   10784:	b	10720 <abort@plt+0x360>
   10788:	sub	sl, r5, #1
   1078c:	b	10720 <abort@plt+0x360>
   10790:	mov	r2, r4
   10794:	mov	r1, r5
   10798:	mov	r0, r6
   1079c:	bl	104d4 <abort@plt+0x114>
   107a0:	b	107a8 <abort@plt+0x3e8>
   107a4:	mov	r0, #0
   107a8:	ldr	r4, [sp, #8]
   107ac:	ldr	r5, [sp, #12]
   107b0:	ldr	r6, [sp, #16]
   107b4:	ldr	r7, [sp, #20]
   107b8:	ldr	r8, [sp, #24]
   107bc:	ldr	r9, [sp, #28]
   107c0:	ldr	sl, [sp, #32]
   107c4:	ldr	lr, [sp, #4]
   107c8:	add	sp, sp, #40	; 0x28
   107cc:	bx	lr
   107d0:	mov	ip, sp
   107d4:	sub	sp, sp, #40	; 0x28
   107d8:	str	ip, [sp]
   107dc:	str	lr, [sp, #4]
   107e0:	str	r4, [sp, #8]
   107e4:	str	r5, [sp, #12]
   107e8:	str	r6, [sp, #16]
   107ec:	str	r7, [sp, #20]
   107f0:	str	r8, [sp, #24]
   107f4:	str	r9, [sp, #28]
   107f8:	str	sl, [sp, #32]
   107fc:	mov	r9, r3
   10800:	mov	r5, r2
   10804:	mov	sl, r1
   10808:	mov	r7, r0
   1080c:	mov	r8, #1
   10810:	cmp	r8, sl
   10814:	bge	108b4 <abort@plt+0x4f4>
   10818:	mov	r6, r8
   1081c:	cmp	r6, #0
   10820:	ble	10864 <abort@plt+0x4a4>
   10824:	mov	r2, r5
   10828:	mov	r1, r6
   1082c:	mov	r0, r7
   10830:	bl	104d4 <abort@plt+0x114>
   10834:	mov	r4, r0
   10838:	sub	r1, r6, #1
   1083c:	mov	r2, r5
   10840:	mov	r0, r7
   10844:	bl	104d4 <abort@plt+0x114>
   10848:	mov	r1, r0
   1084c:	mov	r0, r4
   10850:	blx	r9
   10854:	cmn	r0, #1
   10858:	moveq	r1, #1
   1085c:	movne	r1, #0
   10860:	b	10868 <abort@plt+0x4a8>
   10864:	mov	r1, #0
   10868:	cmp	r1, #0
   1086c:	beq	108ac <abort@plt+0x4ec>
   10870:	mov	r2, r5
   10874:	mov	r1, r6
   10878:	mov	r0, r7
   1087c:	bl	104d4 <abort@plt+0x114>
   10880:	mov	r4, r0
   10884:	sub	r1, r6, #1
   10888:	mov	r2, r5
   1088c:	mov	r0, r7
   10890:	bl	104d4 <abort@plt+0x114>
   10894:	mov	r2, r5
   10898:	mov	r1, r0
   1089c:	mov	r0, r4
   108a0:	bl	104f4 <abort@plt+0x134>
   108a4:	sub	r6, r6, #1
   108a8:	b	1081c <abort@plt+0x45c>
   108ac:	add	r8, r8, #1
   108b0:	b	10810 <abort@plt+0x450>
   108b4:	ldr	r4, [sp, #8]
   108b8:	ldr	r5, [sp, #12]
   108bc:	ldr	r6, [sp, #16]
   108c0:	ldr	r7, [sp, #20]
   108c4:	ldr	r8, [sp, #24]
   108c8:	ldr	r9, [sp, #28]
   108cc:	ldr	sl, [sp, #32]
   108d0:	ldr	lr, [sp, #4]
   108d4:	add	sp, sp, #40	; 0x28
   108d8:	bx	lr
   108dc:	mov	ip, sp
   108e0:	sub	sp, sp, #8
   108e4:	str	ip, [sp]
   108e8:	str	lr, [sp, #4]
   108ec:	ldrb	r2, [r0]
   108f0:	and	r3, r2, #255	; 0xff
   108f4:	ldrb	r2, [r1]
   108f8:	and	ip, r2, #255	; 0xff
   108fc:	cmp	r3, ip
   10900:	bge	1090c <abort@plt+0x54c>
   10904:	mov	r0, #1
   10908:	b	10920 <abort@plt+0x560>
   1090c:	cmp	r3, ip
   10910:	ble	1091c <abort@plt+0x55c>
   10914:	mvn	r0, #0
   10918:	b	10920 <abort@plt+0x560>
   1091c:	mov	r0, #0
   10920:	ldr	lr, [sp, #4]
   10924:	add	sp, sp, #8
   10928:	bx	lr
   1092c:	mov	ip, sp
   10930:	sub	sp, sp, #88	; 0x58
   10934:	str	ip, [sp, #4]
   10938:	str	lr, [sp, #8]
   1093c:	str	r4, [sp, #16]
   10940:	mov	r0, #3
   10944:	str	r0, [sp, #40]	; 0x28
   10948:	mvn	r0, #1
   1094c:	str	r0, [sp, #44]	; 0x2c
   10950:	mov	r0, #4
   10954:	str	r0, [sp, #48]	; 0x30
   10958:	mov	r0, #5
   1095c:	str	r0, [sp, #52]	; 0x34
   10960:	mov	r0, #9
   10964:	str	r0, [sp, #56]	; 0x38
   10968:	mov	r0, #1
   1096c:	str	r0, [sp, #60]	; 0x3c
   10970:	add	r0, sp, #64	; 0x40
   10974:	add	r1, sp, #40	; 0x28
   10978:	mov	r2, #24
   1097c:	bl	10384 <memcpy@plt>
   10980:	ldr	r0, [pc, #688]	; 10c38 <abort@plt+0x878>
   10984:	bl	10390 <puts@plt>
   10988:	ldr	r0, [pc, #668]	; 10c2c <abort@plt+0x86c>
   1098c:	bl	10378 <printf@plt>
   10990:	mov	r4, #0
   10994:	cmp	r4, #6
   10998:	bge	109b4 <abort@plt+0x5f4>
   1099c:	ldr	r0, [pc, #656]	; 10c34 <abort@plt+0x874>
   109a0:	add	r3, sp, #64	; 0x40
   109a4:	ldr	r1, [r3, r4, lsl #2]
   109a8:	bl	10378 <printf@plt>
   109ac:	add	r4, r4, #1
   109b0:	b	10994 <abort@plt+0x5d4>
   109b4:	ldr	r0, [pc, #644]	; 10c40 <abort@plt+0x880>
   109b8:	bl	10390 <puts@plt>
   109bc:	add	r0, sp, #64	; 0x40
   109c0:	mov	r1, #6
   109c4:	mov	r2, #4
   109c8:	ldr	r3, [pc, #584]	; 10c18 <abort@plt+0x858>
   109cc:	bl	10548 <abort@plt+0x188>
   109d0:	ldr	r0, [pc, #572]	; 10c14 <abort@plt+0x854>
   109d4:	bl	10378 <printf@plt>
   109d8:	mov	r4, #0
   109dc:	cmp	r4, #6
   109e0:	bge	109fc <abort@plt+0x63c>
   109e4:	ldr	r0, [pc, #584]	; 10c34 <abort@plt+0x874>
   109e8:	add	r3, sp, #64	; 0x40
   109ec:	ldr	r1, [r3, r4, lsl #2]
   109f0:	bl	10378 <printf@plt>
   109f4:	add	r4, r4, #1
   109f8:	b	109dc <abort@plt+0x61c>
   109fc:	ldr	r0, [pc, #572]	; 10c40 <abort@plt+0x880>
   10a00:	bl	10390 <puts@plt>
   10a04:	add	r0, sp, #64	; 0x40
   10a08:	add	r1, sp, #40	; 0x28
   10a0c:	mov	r2, #24
   10a10:	bl	10384 <memcpy@plt>
   10a14:	ldr	r0, [pc, #544]	; 10c3c <abort@plt+0x87c>
   10a18:	bl	10390 <puts@plt>
   10a1c:	mov	r0, #4
   10a20:	str	r0, [sp, #24]
   10a24:	add	r0, sp, #24
   10a28:	add	r1, sp, #64	; 0x40
   10a2c:	mov	r2, #6
   10a30:	mov	r3, #4
   10a34:	ldr	ip, [pc, #476]	; 10c18 <abort@plt+0x858>
   10a38:	str	ip, [sp]
   10a3c:	bl	10630 <abort@plt+0x270>
   10a40:	mov	r2, r0
   10a44:	cmp	r2, #0
   10a48:	beq	10a70 <abort@plt+0x6b0>
   10a4c:	ldr	r0, [pc, #476]	; 10c30 <abort@plt+0x870>
   10a50:	ldr	r1, [sp, #24]
   10a54:	add	r3, sp, #64	; 0x40
   10a58:	sub	r2, r2, r3
   10a5c:	asr	lr, r2, #31
   10a60:	add	lr, r2, lr, lsr #30
   10a64:	asr	r2, lr, #2
   10a68:	bl	10378 <printf@plt>
   10a6c:	b	10a7c <abort@plt+0x6bc>
   10a70:	ldr	r0, [pc, #432]	; 10c28 <abort@plt+0x868>
   10a74:	ldr	r1, [sp, #24]
   10a78:	bl	10378 <printf@plt>
   10a7c:	add	r0, sp, #64	; 0x40
   10a80:	add	r1, sp, #40	; 0x28
   10a84:	mov	r2, #24
   10a88:	bl	10384 <memcpy@plt>
   10a8c:	add	r0, sp, #64	; 0x40
   10a90:	mov	r1, #6
   10a94:	mov	r2, #4
   10a98:	ldr	r3, [pc, #376]	; 10c18 <abort@plt+0x858>
   10a9c:	bl	10548 <abort@plt+0x188>
   10aa0:	ldr	r0, [pc, #380]	; 10c24 <abort@plt+0x864>
   10aa4:	bl	10390 <puts@plt>
   10aa8:	add	r0, sp, #24
   10aac:	add	r1, sp, #64	; 0x40
   10ab0:	mov	r2, #6
   10ab4:	mov	r3, #4
   10ab8:	ldr	ip, [pc, #344]	; 10c18 <abort@plt+0x858>
   10abc:	str	ip, [sp]
   10ac0:	bl	106dc <abort@plt+0x31c>
   10ac4:	mov	r2, r0
   10ac8:	cmp	r2, #0
   10acc:	beq	10af4 <abort@plt+0x734>
   10ad0:	ldr	r0, [pc, #344]	; 10c30 <abort@plt+0x870>
   10ad4:	ldr	r1, [sp, #24]
   10ad8:	add	ip, sp, #64	; 0x40
   10adc:	sub	r2, r2, ip
   10ae0:	asr	lr, r2, #31
   10ae4:	add	lr, r2, lr, lsr #30
   10ae8:	asr	r2, lr, #2
   10aec:	bl	10378 <printf@plt>
   10af0:	b	10b00 <abort@plt+0x740>
   10af4:	ldr	r0, [pc, #300]	; 10c28 <abort@plt+0x868>
   10af8:	ldr	r1, [sp, #24]
   10afc:	bl	10378 <printf@plt>
   10b00:	add	r0, sp, #64	; 0x40
   10b04:	add	r1, sp, #40	; 0x28
   10b08:	mov	r2, #24
   10b0c:	bl	10384 <memcpy@plt>
   10b10:	ldr	r0, [pc, #300]	; 10c44 <abort@plt+0x884>
   10b14:	bl	10390 <puts@plt>
   10b18:	ldr	r0, [pc, #268]	; 10c2c <abort@plt+0x86c>
   10b1c:	bl	10378 <printf@plt>
   10b20:	mov	r4, #0
   10b24:	cmp	r4, #6
   10b28:	bge	10b44 <abort@plt+0x784>
   10b2c:	ldr	r0, [pc, #256]	; 10c34 <abort@plt+0x874>
   10b30:	add	r1, sp, #64	; 0x40
   10b34:	ldr	r1, [r1, r4, lsl #2]
   10b38:	bl	10378 <printf@plt>
   10b3c:	add	r4, r4, #1
   10b40:	b	10b24 <abort@plt+0x764>
   10b44:	ldr	r0, [pc, #244]	; 10c40 <abort@plt+0x880>
   10b48:	bl	10390 <puts@plt>
   10b4c:	add	r0, sp, #64	; 0x40
   10b50:	mov	r1, #6
   10b54:	mov	r2, #4
   10b58:	ldr	r3, [pc, #184]	; 10c18 <abort@plt+0x858>
   10b5c:	bl	107d0 <abort@plt+0x410>
   10b60:	ldr	r0, [pc, #172]	; 10c14 <abort@plt+0x854>
   10b64:	bl	10378 <printf@plt>
   10b68:	mov	r4, #0
   10b6c:	cmp	r4, #6
   10b70:	bge	10b8c <abort@plt+0x7cc>
   10b74:	ldr	r0, [pc, #184]	; 10c34 <abort@plt+0x874>
   10b78:	add	r2, sp, #64	; 0x40
   10b7c:	ldr	r1, [r2, r4, lsl #2]
   10b80:	bl	10378 <printf@plt>
   10b84:	add	r4, r4, #1
   10b88:	b	10b6c <abort@plt+0x7ac>
   10b8c:	ldr	r0, [pc, #172]	; 10c40 <abort@plt+0x880>
   10b90:	bl	10390 <puts@plt>
   10b94:	ldr	r0, [pc, #128]	; 10c1c <abort@plt+0x85c>
   10b98:	bl	10390 <puts@plt>
   10b9c:	mov	r0, #65	; 0x41
   10ba0:	strb	r0, [sp, #28]
   10ba4:	mov	r0, #98	; 0x62
   10ba8:	strb	r0, [sp, #29]
   10bac:	mov	r0, #90	; 0x5a
   10bb0:	strb	r0, [sp, #30]
   10bb4:	mov	r0, #97	; 0x61
   10bb8:	strb	r0, [sp, #31]
   10bbc:	mov	r0, #0
   10bc0:	strb	r0, [sp, #32]
   10bc4:	ldr	r0, [pc, #96]	; 10c2c <abort@plt+0x86c>
   10bc8:	bl	10378 <printf@plt>
   10bcc:	add	r0, sp, #28
   10bd0:	bl	10390 <puts@plt>
   10bd4:	add	r0, sp, #28
   10bd8:	bl	103b4 <strlen@plt>
   10bdc:	mov	r1, r0
   10be0:	add	r0, sp, #28
   10be4:	mov	r2, #1
   10be8:	ldr	r3, [pc, #48]	; 10c20 <abort@plt+0x860>
   10bec:	bl	10548 <abort@plt+0x188>
   10bf0:	ldr	r0, [pc, #28]	; 10c14 <abort@plt+0x854>
   10bf4:	bl	10378 <printf@plt>
   10bf8:	add	r0, sp, #28
   10bfc:	bl	10390 <puts@plt>
   10c00:	mov	r0, #0
   10c04:	ldr	r4, [sp, #16]
   10c08:	ldr	lr, [sp, #8]
   10c0c:	add	sp, sp, #88	; 0x58
   10c10:	bx	lr
   10c14:	andeq	r0, r1, r2, lsr sp
   10c18:	andeq	r0, r1, ip, lsl #9
   10c1c:	andeq	r0, r1, sl, lsr sp
   10c20:	ldrdeq	r0, [r1], -ip
   10c24:			; <UNDEFINED> instruction: 0x00010db6
   10c28:	andeq	r0, r1, r1, ror sp
   10c2c:	muleq	r1, r3, sp
   10c30:	andeq	r0, r1, r4, asr #26
   10c34:	muleq	r1, sl, sp
   10c38:	andeq	r0, r1, r8, lsr #27
   10c3c:	andeq	r0, r1, r8, lsr #26
   10c40:	andeq	r0, r1, r0, asr #27
   10c44:	muleq	r1, lr, sp
   10c48:	mvnsmi	lr, #737280	; 0xb4000
   10c4c:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   10c50:	strmi	r4, [r8], ip, lsl #26
   10c54:			; <UNDEFINED> instruction: 0x4691447e
   10c58:			; <UNDEFINED> instruction: 0xf7ff447d
   10c5c:	blne	1dcba5c <abort@plt+0x1dbb69c>
   10c60:	strhle	r1, [sl], -r6
   10c64:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10c68:	svccc	0x0004f855
   10c6c:	strbmi	r4, [r1], -sl, asr #12
   10c70:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10c74:	adcmi	r4, r6, #152, 14	; 0x2600000
   10c78:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10c7c:	svclt	0x000083f8
   10c80:			; <UNDEFINED> instruction: 0x000112bc
   10c84:			; <UNDEFINED> instruction: 0x000112b4
   10c88:	svclt	0x00004770

Disassembly of section .fini:

00010c8c <.fini>:
   10c8c:	push	{r3, lr}
   10c90:	pop	{r3, pc}
