
../compcert-repos/prog2/CMakeFiles/9.dir/Aula09_Filas_de_Prioridade_e_Heaps/priorityqueue.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fp_insere>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #32
   c:	str	r0, [fp, #-8]
  10:	str	r1, [fp, #-12]
  14:	str	r2, [sp, #16]
  18:	ldr	r0, [fp, #-8]
  1c:	movw	r1, #0
  20:	cmp	r0, r1
  24:	bne	34 <fp_insere+0x34>
  28:	mvn	r0, #0
  2c:	str	r0, [fp, #-4]
  30:	b	13c <fp_insere+0x13c>
  34:	ldr	r0, [fp, #-8]
  38:	ldr	r0, [r0]
  3c:	ldr	r1, [fp, #-8]
  40:	ldr	r1, [r1, #4]
  44:	cmp	r0, r1
  48:	bne	58 <fp_insere+0x58>
  4c:	movw	r0, #0
  50:	str	r0, [fp, #-4]
  54:	b	13c <fp_insere+0x13c>
  58:	ldr	r0, [sp, #16]
  5c:	ldr	r1, [fp, #-12]
  60:	bl	0 <elemento_cria>
  64:	str	r0, [sp, #12]
  68:	movw	r0, #0
  6c:	str	r0, [sp, #8]
  70:	ldr	r0, [sp, #8]
  74:	ldr	r1, [fp, #-8]
  78:	ldr	r1, [r1]
  7c:	cmp	r0, r1
  80:	bge	c0 <fp_insere+0xc0>
  84:	ldr	r0, [fp, #-8]
  88:	ldr	r0, [r0, #8]
  8c:	ldr	r1, [sp, #8]
  90:	add	r0, r0, r1, lsl #2
  94:	ldr	r0, [r0]
  98:	ldr	r1, [sp, #12]
  9c:	bl	0 <maior_que>
  a0:	cmp	r0, #0
  a4:	bne	ac <fp_insere+0xac>
  a8:	b	c0 <fp_insere+0xc0>
  ac:	b	b0 <fp_insere+0xb0>
  b0:	ldr	r0, [sp, #8]
  b4:	add	r0, r0, #1
  b8:	str	r0, [sp, #8]
  bc:	b	70 <fp_insere+0x70>
  c0:	ldr	r0, [fp, #-8]
  c4:	ldr	r0, [r0]
  c8:	str	r0, [sp, #4]
  cc:	ldr	r0, [sp, #4]
  d0:	ldr	r1, [sp, #8]
  d4:	cmp	r0, r1
  d8:	blt	10c <fp_insere+0x10c>
  dc:	ldr	r0, [fp, #-8]
  e0:	ldr	r0, [r0, #8]
  e4:	ldr	r1, [sp, #4]
  e8:	ldr	r2, [r0, r1, lsl #2]
  ec:	add	r1, r1, #1
  f0:	add	r0, r0, r1, lsl #2
  f4:	str	r2, [r0]
  f8:	ldr	r0, [sp, #4]
  fc:	mvn	r1, #0
 100:	add	r0, r0, r1
 104:	str	r0, [sp, #4]
 108:	b	cc <fp_insere+0xcc>
 10c:	ldr	r0, [sp, #12]
 110:	ldr	r1, [fp, #-8]
 114:	ldr	r1, [r1, #8]
 118:	ldr	r2, [sp, #8]
 11c:	add	r1, r1, r2, lsl #2
 120:	str	r0, [r1]
 124:	ldr	r0, [fp, #-8]
 128:	ldr	r1, [r0]
 12c:	add	r1, r1, #1
 130:	str	r1, [r0]
 134:	movw	r0, #1
 138:	str	r0, [fp, #-4]
 13c:	ldr	r0, [fp, #-4]
 140:	mov	sp, fp
 144:	pop	{fp, pc}

00000148 <fp_remove>:
 148:	sub	sp, sp, #16
 14c:	str	r0, [sp, #8]
 150:	ldr	r0, [sp, #8]
 154:	movw	r1, #0
 158:	cmp	r0, r1
 15c:	beq	170 <fp_remove+0x28>
 160:	ldr	r0, [sp, #8]
 164:	ldr	r0, [r0]
 168:	cmp	r0, #0
 16c:	bne	17c <fp_remove+0x34>
 170:	movw	r0, #0
 174:	str	r0, [sp, #12]
 178:	b	1f0 <fp_remove+0xa8>
 17c:	ldr	r0, [sp, #8]
 180:	ldr	r0, [r0, #8]
 184:	ldr	r0, [r0]
 188:	str	r0, [sp, #4]
 18c:	movw	r0, #0
 190:	str	r0, [sp]
 194:	ldr	r0, [sp]
 198:	ldr	r1, [sp, #8]
 19c:	ldr	r1, [r1]
 1a0:	cmp	r0, r1
 1a4:	bge	1d0 <fp_remove+0x88>
 1a8:	ldr	r0, [sp, #8]
 1ac:	ldr	r0, [r0, #8]
 1b0:	ldr	r1, [sp]
 1b4:	add	r0, r0, r1, lsl #2
 1b8:	ldr	r1, [r0, #4]
 1bc:	str	r1, [r0]
 1c0:	ldr	r0, [sp]
 1c4:	add	r0, r0, #1
 1c8:	str	r0, [sp]
 1cc:	b	194 <fp_remove+0x4c>
 1d0:	ldr	r0, [sp, #8]
 1d4:	ldr	r1, [r0]
 1d8:	mvn	r2, #0
 1dc:	add	r1, r1, r2
 1e0:	str	r1, [r0]
 1e4:	ldr	r0, [sp, #4]
 1e8:	ldr	r0, [r0, #4]
 1ec:	str	r0, [sp, #12]
 1f0:	ldr	r0, [sp, #12]
 1f4:	add	sp, sp, #16
 1f8:	bx	lr

000001fc <fp_carrega>:
 1fc:	push	{r4, r5, fp, lr}
 200:	add	fp, sp, #8
 204:	sub	sp, sp, #288	; 0x120
 208:	str	r0, [fp, #-12]
 20c:	str	r1, [fp, #-16]
 210:	ldr	r0, [fp, #-16]
 214:	movw	r1, #0
 218:	movt	r1, #0
 21c:	bl	0 <fopen>
 220:	str	r0, [sp, #16]
 224:	ldr	r0, [sp, #16]
 228:	movw	r1, #0
 22c:	cmp	r0, r1
 230:	bne	244 <fp_carrega+0x48>
 234:	movw	r0, #0
 238:	movt	r0, #0
 23c:	bl	0 <printf>
 240:	b	2d8 <fp_carrega+0xdc>
 244:	b	248 <fp_carrega+0x4c>
 248:	ldr	r0, [sp, #16]
 24c:	bl	0 <feof>
 250:	cmp	r0, #0
 254:	movw	r0, #0
 258:	movne	r0, #1
 25c:	mvn	r1, #0
 260:	eor	r0, r0, r1
 264:	tst	r0, #1
 268:	beq	2d0 <fp_carrega+0xd4>
 26c:	ldr	r0, [sp, #16]
 270:	movw	r1, #0
 274:	movt	r1, #0
 278:	add	r2, sp, #20
 27c:	bl	0 <__isoc99_fscanf>
 280:	add	r1, sp, #24
 284:	ldr	r2, [sp, #16]
 288:	str	r0, [sp, #12]
 28c:	mov	r0, r1
 290:	movw	r1, #256	; 0x100
 294:	bl	0 <fgets>
 298:	add	r1, sp, #24
 29c:	str	r0, [sp, #8]
 2a0:	mov	r0, r1
 2a4:	str	r1, [sp, #4]
 2a8:	bl	0 <strlen>
 2ac:	sub	r0, r0, #1
 2b0:	ldr	r1, [sp, #4]
 2b4:	add	r0, r1, r0
 2b8:	movw	r2, #0
 2bc:	strb	r2, [r0]
 2c0:	ldr	r0, [fp, #-12]
 2c4:	ldr	r2, [sp, #20]
 2c8:	bl	0 <fp_insere>
 2cc:	b	248 <fp_carrega+0x4c>
 2d0:	ldr	r0, [sp, #16]
 2d4:	bl	0 <fclose>
 2d8:	sub	sp, fp, #8
 2dc:	pop	{r4, r5, fp, pc}

000002e0 <heap_insere>:
 2e0:	push	{fp, lr}
 2e4:	mov	fp, sp
 2e8:	sub	sp, sp, #40	; 0x28
 2ec:	str	r0, [fp, #-8]
 2f0:	str	r1, [fp, #-12]
 2f4:	str	r2, [fp, #-16]
 2f8:	str	r3, [sp, #20]
 2fc:	ldr	r0, [fp, #-8]
 300:	ldr	r0, [r0]
 304:	ldr	r1, [fp, #-8]
 308:	ldr	r1, [r1, #4]
 30c:	cmp	r0, r1
 310:	bne	320 <heap_insere+0x40>
 314:	movw	r0, #0
 318:	str	r0, [fp, #-4]
 31c:	b	428 <heap_insere+0x148>
 320:	ldr	r0, [sp, #20]
 324:	ldr	r1, [fp, #-16]
 328:	bl	0 <elemento_cria>
 32c:	str	r0, [sp, #8]
 330:	movw	r0, #0
 334:	str	r0, [sp, #16]
 338:	ldr	r0, [sp, #16]
 33c:	ldr	r1, [fp, #-8]
 340:	ldr	r1, [r1]
 344:	cmp	r0, r1
 348:	movw	r0, #0
 34c:	str	r0, [sp, #4]
 350:	bge	394 <heap_insere+0xb4>
 354:	ldr	r0, [fp, #-12]
 358:	ldr	r1, [fp, #-8]
 35c:	ldr	r1, [r1, #8]
 360:	ldr	r2, [sp, #16]
 364:	add	r1, r1, r2, lsl #2
 368:	ldr	r1, [r1]
 36c:	ldr	r2, [sp, #8]
 370:	str	r0, [sp]
 374:	mov	r0, r1
 378:	mov	r1, r2
 37c:	ldr	r2, [sp]
 380:	blx	r2
 384:	cmp	r0, #1
 388:	movw	r0, #0
 38c:	movne	r0, #1
 390:	str	r0, [sp, #4]
 394:	ldr	r0, [sp, #4]
 398:	tst	r0, #1
 39c:	beq	3b4 <heap_insere+0xd4>
 3a0:	b	3a4 <heap_insere+0xc4>
 3a4:	ldr	r0, [sp, #16]
 3a8:	add	r0, r0, #1
 3ac:	str	r0, [sp, #16]
 3b0:	b	338 <heap_insere+0x58>
 3b4:	ldr	r0, [sp, #16]
 3b8:	str	r0, [sp, #12]
 3bc:	ldr	r0, [sp, #12]
 3c0:	cmp	r0, #0
 3c4:	ble	3f8 <heap_insere+0x118>
 3c8:	ldr	r0, [fp, #-8]
 3cc:	ldr	r0, [r0, #8]
 3d0:	ldr	r1, [sp, #12]
 3d4:	ldr	r2, [r0, r1, lsl #2]
 3d8:	add	r1, r1, #1
 3dc:	add	r0, r0, r1, lsl #2
 3e0:	str	r2, [r0]
 3e4:	ldr	r0, [sp, #12]
 3e8:	mvn	r1, #0
 3ec:	add	r0, r0, r1
 3f0:	str	r0, [sp, #12]
 3f4:	b	3bc <heap_insere+0xdc>
 3f8:	ldr	r0, [sp, #8]
 3fc:	ldr	r1, [fp, #-8]
 400:	ldr	r1, [r1, #8]
 404:	ldr	r2, [sp, #16]
 408:	add	r1, r1, r2, lsl #2
 40c:	str	r0, [r1]
 410:	ldr	r0, [fp, #-8]
 414:	ldr	r1, [r0]
 418:	add	r1, r1, #1
 41c:	str	r1, [r0]
 420:	ldr	r0, [sp, #16]
 424:	str	r0, [fp, #-4]
 428:	ldr	r0, [fp, #-4]
 42c:	mov	sp, fp
 430:	pop	{fp, pc}

00000434 <heap_remove>:
 434:	sub	sp, sp, #8
 438:	str	r0, [sp, #4]
 43c:	str	r1, [sp]
 440:	movw	r0, #0
 444:	add	sp, sp, #8
 448:	bx	lr

0000044c <heap_carrega>:
 44c:	push	{r4, r5, fp, lr}
 450:	add	fp, sp, #8
 454:	sub	sp, sp, #288	; 0x120
 458:	str	r0, [fp, #-12]
 45c:	str	r1, [fp, #-16]
 460:	str	r2, [fp, #-20]	; 0xffffffec
 464:	ldr	r0, [fp, #-20]	; 0xffffffec
 468:	movw	r1, #0
 46c:	movt	r1, #0
 470:	bl	0 <fopen>
 474:	str	r0, [sp, #12]
 478:	ldr	r0, [sp, #12]
 47c:	movw	r1, #0
 480:	cmp	r0, r1
 484:	bne	498 <heap_carrega+0x4c>
 488:	movw	r0, #0
 48c:	movt	r0, #0
 490:	bl	0 <printf>
 494:	b	534 <heap_carrega+0xe8>
 498:	b	49c <heap_carrega+0x50>
 49c:	ldr	r0, [sp, #12]
 4a0:	bl	0 <feof>
 4a4:	cmp	r0, #0
 4a8:	movw	r0, #0
 4ac:	movne	r0, #1
 4b0:	mvn	r1, #0
 4b4:	eor	r0, r0, r1
 4b8:	tst	r0, #1
 4bc:	beq	52c <heap_carrega+0xe0>
 4c0:	ldr	r0, [sp, #12]
 4c4:	movw	r1, #0
 4c8:	movt	r1, #0
 4cc:	add	r2, sp, #16
 4d0:	bl	0 <__isoc99_fscanf>
 4d4:	add	r1, sp, #20
 4d8:	ldr	r2, [sp, #12]
 4dc:	str	r0, [sp, #8]
 4e0:	mov	r0, r1
 4e4:	movw	r1, #256	; 0x100
 4e8:	bl	0 <fgets>
 4ec:	add	r1, sp, #20
 4f0:	str	r0, [sp, #4]
 4f4:	mov	r0, r1
 4f8:	str	r1, [sp]
 4fc:	bl	0 <strlen>
 500:	sub	r0, r0, #1
 504:	ldr	r1, [sp]
 508:	add	r0, r1, r0
 50c:	movw	r2, #0
 510:	strb	r2, [r0]
 514:	ldr	r0, [fp, #-12]
 518:	ldr	r1, [fp, #-16]
 51c:	ldr	r3, [sp, #16]
 520:	ldr	r2, [sp]
 524:	bl	2e0 <heap_insere>
 528:	b	49c <heap_carrega+0x50>
 52c:	ldr	r0, [sp, #12]
 530:	bl	0 <fclose>
 534:	sub	sp, fp, #8
 538:	pop	{r4, r5, fp, pc}

0000053c <main>:
 53c:	push	{fp, lr}
 540:	mov	fp, sp
 544:	sub	sp, sp, #312	; 0x138
 548:	movw	r2, #0
 54c:	str	r2, [fp, #-4]
 550:	str	r0, [fp, #-8]
 554:	str	r1, [fp, #-12]
 558:	movw	r0, #42	; 0x2a
 55c:	bl	0 <vetor_cria>
 560:	str	r0, [fp, #-16]
 564:	movw	r0, #0
 568:	movt	r0, #0
 56c:	bl	0 <printf>
 570:	ldr	r1, [fp, #-16]
 574:	str	r0, [sp, #108]	; 0x6c
 578:	mov	r0, r1
 57c:	movw	r1, #0
 580:	movt	r1, #0
 584:	bl	1fc <fp_carrega>
 588:	movw	r0, #0
 58c:	movt	r0, #0
 590:	ldr	r1, [r0]
 594:	movw	r0, #0
 598:	movt	r0, #0
 59c:	bl	0 <printf>
 5a0:	ldr	r1, [fp, #-16]
 5a4:	str	r0, [sp, #104]	; 0x68
 5a8:	mov	r0, r1
 5ac:	bl	0 <vetor_imprime>
 5b0:	ldr	r0, [fp, #-16]
 5b4:	ldr	r0, [r0]
 5b8:	cmp	r0, #42	; 0x2a
 5bc:	beq	5d8 <main+0x9c>
 5c0:	movw	r0, #0
 5c4:	movt	r0, #0
 5c8:	bl	0 <printf>
 5cc:	movw	r1, #1
 5d0:	str	r1, [fp, #-4]
 5d4:	b	a38 <main+0x4fc>
 5d8:	ldr	r0, [fp, #-16]
 5dc:	bl	148 <fp_remove>
 5e0:	movw	r1, #0
 5e4:	movt	r1, #0
 5e8:	str	r0, [sp, #100]	; 0x64
 5ec:	mov	r0, r1
 5f0:	ldr	r1, [sp, #100]	; 0x64
 5f4:	bl	0 <strcmp>
 5f8:	cmp	r0, #0
 5fc:	beq	618 <main+0xdc>
 600:	movw	r0, #0
 604:	movt	r0, #0
 608:	bl	0 <printf>
 60c:	movw	r1, #1
 610:	str	r1, [fp, #-4]
 614:	b	a38 <main+0x4fc>
 618:	movw	r0, #0
 61c:	movt	r0, #0
 620:	movw	r1, #0
 624:	str	r1, [r0]
 628:	ldr	r0, [fp, #-16]
 62c:	bl	148 <fp_remove>
 630:	movw	r1, #0
 634:	movt	r1, #0
 638:	ldr	r1, [r1]
 63c:	movw	r2, #0
 640:	movt	r2, #0
 644:	str	r0, [sp, #96]	; 0x60
 648:	mov	r0, r2
 64c:	bl	0 <printf>
 650:	movw	r1, #0
 654:	movt	r1, #0
 658:	movw	r2, #0
 65c:	str	r2, [r1]
 660:	ldr	r1, [fp, #-16]
 664:	str	r0, [sp, #92]	; 0x5c
 668:	mov	r0, r1
 66c:	movw	r1, #0
 670:	movt	r1, #0
 674:	movw	r2, #99	; 0x63
 678:	bl	0 <fp_insere>
 67c:	movw	r1, #0
 680:	movt	r1, #0
 684:	ldr	r1, [r1]
 688:	movw	r2, #0
 68c:	movt	r2, #0
 690:	str	r0, [sp, #88]	; 0x58
 694:	mov	r0, r2
 698:	bl	0 <printf>
 69c:	ldr	r1, [fp, #-16]
 6a0:	str	r0, [sp, #84]	; 0x54
 6a4:	mov	r0, r1
 6a8:	bl	148 <fp_remove>
 6ac:	movw	r1, #0
 6b0:	movt	r1, #0
 6b4:	movw	r2, #0
 6b8:	str	r2, [r1]
 6bc:	ldr	r1, [fp, #-16]
 6c0:	str	r0, [sp, #80]	; 0x50
 6c4:	mov	r0, r1
 6c8:	movw	r1, #0
 6cc:	movt	r1, #0
 6d0:	bl	0 <fp_insere>
 6d4:	movw	r1, #0
 6d8:	movt	r1, #0
 6dc:	ldr	r1, [r1]
 6e0:	movw	r2, #0
 6e4:	movt	r2, #0
 6e8:	str	r0, [sp, #76]	; 0x4c
 6ec:	mov	r0, r2
 6f0:	bl	0 <printf>
 6f4:	ldr	r1, [fp, #-16]
 6f8:	str	r0, [sp, #72]	; 0x48
 6fc:	mov	r0, r1
 700:	bl	148 <fp_remove>
 704:	movw	r1, #0
 708:	movt	r1, #0
 70c:	movw	r2, #0
 710:	str	r2, [r1]
 714:	ldr	r1, [fp, #-16]
 718:	str	r0, [sp, #68]	; 0x44
 71c:	mov	r0, r1
 720:	movw	r1, #0
 724:	movt	r1, #0
 728:	movw	r2, #42	; 0x2a
 72c:	bl	0 <fp_insere>
 730:	movw	r1, #0
 734:	movt	r1, #0
 738:	ldr	r1, [r1]
 73c:	movw	r2, #0
 740:	movt	r2, #0
 744:	str	r0, [sp, #64]	; 0x40
 748:	mov	r0, r2
 74c:	bl	0 <printf>
 750:	movw	r1, #0
 754:	movt	r1, #0
 758:	str	r0, [sp, #60]	; 0x3c
 75c:	mov	r0, r1
 760:	bl	0 <printf>
 764:	movw	r1, #42	; 0x2a
 768:	str	r0, [sp, #56]	; 0x38
 76c:	mov	r0, r1
 770:	bl	0 <vetor_criaHeap>
 774:	str	r0, [fp, #-24]	; 0xffffffe8
 778:	movw	r0, #0
 77c:	movt	r0, #0
 780:	str	r0, [fp, #-28]	; 0xffffffe4
 784:	ldr	r0, [fp, #-24]	; 0xffffffe8
 788:	ldr	r1, [fp, #-28]	; 0xffffffe4
 78c:	movw	r2, #0
 790:	movt	r2, #0
 794:	bl	44c <heap_carrega>
 798:	movw	r0, #0
 79c:	movt	r0, #0
 7a0:	ldr	r1, [r0]
 7a4:	movw	r0, #0
 7a8:	movt	r0, #0
 7ac:	bl	0 <printf>
 7b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 7b4:	str	r0, [sp, #52]	; 0x34
 7b8:	mov	r0, r1
 7bc:	bl	0 <vetor_imprimeHeap>
 7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7c4:	ldr	r0, [r0]
 7c8:	cmp	r0, #42	; 0x2a
 7cc:	beq	7e8 <main+0x2ac>
 7d0:	movw	r0, #0
 7d4:	movt	r0, #0
 7d8:	bl	0 <printf>
 7dc:	movw	r1, #1
 7e0:	str	r1, [fp, #-4]
 7e4:	b	a38 <main+0x4fc>
 7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
 7f0:	bl	434 <heap_remove>
 7f4:	movw	r1, #0
 7f8:	movt	r1, #0
 7fc:	str	r0, [sp, #48]	; 0x30
 800:	mov	r0, r1
 804:	ldr	r1, [sp, #48]	; 0x30
 808:	bl	0 <strcmp>
 80c:	cmp	r0, #0
 810:	beq	82c <main+0x2f0>
 814:	movw	r0, #0
 818:	movt	r0, #0
 81c:	bl	0 <printf>
 820:	movw	r1, #1
 824:	str	r1, [fp, #-4]
 828:	b	a38 <main+0x4fc>
 82c:	movw	r0, #0
 830:	movt	r0, #0
 834:	movw	r1, #0
 838:	str	r1, [r0]
 83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 840:	ldr	r1, [fp, #-28]	; 0xffffffe4
 844:	bl	434 <heap_remove>
 848:	movw	r1, #0
 84c:	movt	r1, #0
 850:	ldr	r1, [r1]
 854:	movw	r2, #0
 858:	movt	r2, #0
 85c:	str	r0, [sp, #44]	; 0x2c
 860:	mov	r0, r2
 864:	bl	0 <printf>
 868:	movw	r1, #0
 86c:	movt	r1, #0
 870:	movw	r2, #0
 874:	str	r2, [r1]
 878:	ldr	r1, [fp, #-24]	; 0xffffffe8
 87c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 880:	str	r0, [sp, #40]	; 0x28
 884:	mov	r0, r1
 888:	mov	r1, r2
 88c:	movw	r2, #0
 890:	movt	r2, #0
 894:	movw	r3, #99	; 0x63
 898:	bl	2e0 <heap_insere>
 89c:	movw	r1, #0
 8a0:	movt	r1, #0
 8a4:	ldr	r1, [r1]
 8a8:	movw	r2, #0
 8ac:	movt	r2, #0
 8b0:	str	r0, [sp, #36]	; 0x24
 8b4:	mov	r0, r2
 8b8:	bl	0 <printf>
 8bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
 8c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
 8c4:	str	r0, [sp, #32]
 8c8:	mov	r0, r1
 8cc:	mov	r1, r2
 8d0:	bl	434 <heap_remove>
 8d4:	movw	r1, #0
 8d8:	movt	r1, #0
 8dc:	movw	r2, #0
 8e0:	str	r2, [r1]
 8e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
 8e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8ec:	str	r0, [sp, #28]
 8f0:	mov	r0, r1
 8f4:	mov	r1, r3
 8f8:	movw	r3, #0
 8fc:	movt	r3, #0
 900:	str	r2, [sp, #24]
 904:	mov	r2, r3
 908:	ldr	r3, [sp, #24]
 90c:	bl	2e0 <heap_insere>
 910:	movw	r1, #0
 914:	movt	r1, #0
 918:	ldr	r1, [r1]
 91c:	movw	r2, #0
 920:	movt	r2, #0
 924:	str	r0, [sp, #20]
 928:	mov	r0, r2
 92c:	bl	0 <printf>
 930:	ldr	r1, [fp, #-24]	; 0xffffffe8
 934:	ldr	r2, [fp, #-28]	; 0xffffffe4
 938:	str	r0, [sp, #16]
 93c:	mov	r0, r1
 940:	mov	r1, r2
 944:	bl	434 <heap_remove>
 948:	movw	r1, #0
 94c:	movt	r1, #0
 950:	movw	r2, #0
 954:	str	r2, [r1]
 958:	ldr	r1, [fp, #-24]	; 0xffffffe8
 95c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 960:	str	r0, [sp, #12]
 964:	mov	r0, r1
 968:	mov	r1, r2
 96c:	movw	r2, #0
 970:	movt	r2, #0
 974:	movw	r3, #42	; 0x2a
 978:	bl	2e0 <heap_insere>
 97c:	movw	r1, #0
 980:	movt	r1, #0
 984:	ldr	r1, [r1]
 988:	movw	r2, #0
 98c:	movt	r2, #0
 990:	str	r0, [sp, #8]
 994:	mov	r0, r2
 998:	bl	0 <printf>
 99c:	movw	r1, #42	; 0x2a
 9a0:	str	r0, [sp, #4]
 9a4:	mov	r0, r1
 9a8:	bl	0 <vetor_criaHeap>
 9ac:	str	r0, [fp, #-24]	; 0xffffffe8
 9b0:	movw	r0, #0
 9b4:	movt	r0, #0
 9b8:	str	r0, [fp, #-32]	; 0xffffffe0
 9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 9c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
 9c4:	movw	r2, #0
 9c8:	movt	r2, #0
 9cc:	bl	44c <heap_carrega>
 9d0:	movw	r0, #0
 9d4:	movt	r0, #0
 9d8:	ldr	r1, [r0]
 9dc:	movw	r0, #0
 9e0:	movt	r0, #0
 9e4:	bl	0 <printf>
 9e8:	movw	r1, #0
 9ec:	str	r1, [fp, #-20]	; 0xffffffec
 9f0:	ldr	r0, [fp, #-20]	; 0xffffffec
 9f4:	cmp	r0, #42	; 0x2a
 9f8:	bge	a30 <main+0x4f4>
 9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 a00:	ldr	r1, [fp, #-32]	; 0xffffffe0
 a04:	bl	434 <heap_remove>
 a08:	movw	r1, #0
 a0c:	movt	r1, #0
 a10:	str	r0, [sp]
 a14:	mov	r0, r1
 a18:	ldr	r1, [sp]
 a1c:	bl	0 <printf>
 a20:	ldr	r0, [fp, #-20]	; 0xffffffec
 a24:	add	r0, r0, #1
 a28:	str	r0, [fp, #-20]	; 0xffffffec
 a2c:	b	9f0 <main+0x4b4>
 a30:	movw	r0, #0
 a34:	str	r0, [fp, #-4]
 a38:	ldr	r0, [fp, #-4]
 a3c:	mov	sp, fp
 a40:	pop	{fp, pc}
