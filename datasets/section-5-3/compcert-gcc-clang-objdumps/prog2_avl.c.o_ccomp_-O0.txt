
../repos/prog2/CMakeFiles/MT2E2-1.dir/Extras/Miniteste2-Exemplo2/prob1/avl.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avl_nova>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	mov	r0, #4
  14:	bl	0 <malloc>
  18:	cmp	r0, #0
  1c:	bne	28 <avl_nova+0x28>
  20:	mov	r0, #0
  24:	b	30 <avl_nova+0x30>
  28:	mov	r1, #0
  2c:	str	r1, [r0]
  30:	ldr	lr, [sp, #4]
  34:	add	sp, sp, #8
  38:	bx	lr

0000003c <avl_apaga>:
  3c:	mov	ip, sp
  40:	sub	sp, sp, #16
  44:	str	ip, [sp]
  48:	str	lr, [sp, #4]
  4c:	str	r4, [sp, #8]
  50:	mov	r4, r0
  54:	cmp	r4, #0
  58:	beq	88 <avl_apaga+0x4c>
  5c:	ldr	r2, [r4]
  60:	cmp	r2, #0
  64:	beq	80 <avl_apaga+0x44>
  68:	ldr	r0, [r4]
  6c:	ldr	r1, [r4]
  70:	ldr	r1, [r1]
  74:	bl	6f0 <avl_remove_impl>
  78:	str	r0, [r4]
  7c:	b	5c <avl_apaga+0x20>
  80:	mov	r0, r4
  84:	bl	0 <free>
  88:	ldr	r4, [sp, #8]
  8c:	ldr	lr, [sp, #4]
  90:	add	sp, sp, #16
  94:	bx	lr

00000098 <avl_pesquisa>:
  98:	mov	ip, sp
  9c:	sub	sp, sp, #8
  a0:	str	ip, [sp]
  a4:	str	lr, [sp, #4]
  a8:	cmp	r0, #0
  ac:	beq	c0 <avl_pesquisa+0x28>
  b0:	cmp	r1, #0
  b4:	moveq	r2, #1
  b8:	movne	r2, #0
  bc:	b	c4 <avl_pesquisa+0x2c>
  c0:	mov	r2, #1
  c4:	cmp	r2, #0
  c8:	beq	d4 <avl_pesquisa+0x3c>
  cc:	mov	r0, #0
  d0:	b	dc <avl_pesquisa+0x44>
  d4:	ldr	r0, [r0]
  d8:	bl	4ac <avl_pesquisa_impl>
  dc:	ldr	lr, [sp, #4]
  e0:	add	sp, sp, #8
  e4:	bx	lr

000000e8 <avl_insere>:
  e8:	mov	ip, sp
  ec:	sub	sp, sp, #16
  f0:	str	ip, [sp]
  f4:	str	lr, [sp, #4]
  f8:	str	r4, [sp, #8]
  fc:	mov	r4, r0
 100:	cmp	r4, #0
 104:	beq	118 <avl_insere+0x30>
 108:	cmp	r1, #0
 10c:	moveq	r2, #1
 110:	movne	r2, #0
 114:	b	11c <avl_insere+0x34>
 118:	mov	r2, #1
 11c:	cmp	r2, #0
 120:	beq	12c <avl_insere+0x44>
 124:	mvn	r0, #0
 128:	b	13c <avl_insere+0x54>
 12c:	ldr	r0, [r4]
 130:	bl	540 <avl_insere_impl>
 134:	str	r0, [r4]
 138:	mov	r0, #0
 13c:	ldr	r4, [sp, #8]
 140:	ldr	lr, [sp, #4]
 144:	add	sp, sp, #16
 148:	bx	lr

0000014c <avl_remove>:
 14c:	mov	ip, sp
 150:	sub	sp, sp, #16
 154:	str	ip, [sp]
 158:	str	lr, [sp, #4]
 15c:	str	r4, [sp, #8]
 160:	mov	r4, r0
 164:	cmp	r4, #0
 168:	beq	17c <avl_remove+0x30>
 16c:	cmp	r1, #0
 170:	moveq	r2, #1
 174:	movne	r2, #0
 178:	b	180 <avl_remove+0x34>
 17c:	mov	r2, #1
 180:	cmp	r2, #0
 184:	beq	190 <avl_remove+0x44>
 188:	mvn	r0, #0
 18c:	b	1a0 <avl_remove+0x54>
 190:	ldr	r0, [r4]
 194:	bl	6f0 <avl_remove_impl>
 198:	str	r0, [r4]
 19c:	mov	r0, #0
 1a0:	ldr	r4, [sp, #8]
 1a4:	ldr	lr, [sp, #4]
 1a8:	add	sp, sp, #16
 1ac:	bx	lr

000001b0 <avl_min>:
 1b0:	mov	ip, sp
 1b4:	sub	sp, sp, #8
 1b8:	str	ip, [sp]
 1bc:	str	lr, [sp, #4]
 1c0:	cmp	r0, #0
 1c4:	bne	1d0 <avl_min+0x20>
 1c8:	mov	r0, #0
 1cc:	b	1d8 <avl_min+0x28>
 1d0:	bl	690 <avl_no_valormin>
 1d4:	ldr	r0, [r0]
 1d8:	ldr	lr, [sp, #4]
 1dc:	add	sp, sp, #8
 1e0:	bx	lr

000001e4 <avl_max>:
 1e4:	mov	ip, sp
 1e8:	sub	sp, sp, #8
 1ec:	str	ip, [sp]
 1f0:	str	lr, [sp, #4]
 1f4:	cmp	r0, #0
 1f8:	bne	204 <avl_max+0x20>
 1fc:	mov	r0, #0
 200:	b	20c <avl_max+0x28>
 204:	bl	6c0 <avl_no_valormax>
 208:	ldr	r0, [r0]
 20c:	ldr	lr, [sp, #4]
 210:	add	sp, sp, #8
 214:	bx	lr

00000218 <avl_imprime>:
 218:	mov	ip, sp
 21c:	sub	sp, sp, #8
 220:	str	ip, [sp]
 224:	str	lr, [sp, #4]
 228:	cmp	r0, #0
 22c:	beq	23c <avl_imprime+0x24>
 230:	bl	930 <avl_preordem_impl>
 234:	ldr	r0, [pc, #12]	; 248 <avl_imprime+0x30>
 238:	bl	0 <printf>
 23c:	ldr	lr, [sp, #4]
 240:	add	sp, sp, #8
 244:	bx	lr
 248:	.word	0x00000000

0000024c <avl_altura>:
 24c:	mov	ip, sp
 250:	sub	sp, sp, #8
 254:	str	ip, [sp]
 258:	str	lr, [sp, #4]
 25c:	cmp	r0, #0
 260:	bne	26c <avl_altura+0x20>
 264:	mvn	r0, #0
 268:	b	270 <avl_altura+0x24>
 26c:	ldr	r0, [r0, #12]
 270:	ldr	lr, [sp, #4]
 274:	add	sp, sp, #8
 278:	bx	lr

0000027c <max>:
 27c:	mov	ip, sp
 280:	sub	sp, sp, #8
 284:	str	ip, [sp]
 288:	str	lr, [sp, #4]
 28c:	cmp	r0, r1
 290:	bgt	298 <max+0x1c>
 294:	mov	r0, r1
 298:	ldr	lr, [sp, #4]
 29c:	add	sp, sp, #8
 2a0:	bx	lr

000002a4 <avl_novo_no>:
 2a4:	mov	ip, sp
 2a8:	sub	sp, sp, #16
 2ac:	str	ip, [sp]
 2b0:	str	lr, [sp, #4]
 2b4:	str	r4, [sp, #8]
 2b8:	str	r5, [sp, #12]
 2bc:	mov	r5, r0
 2c0:	mov	r0, #16
 2c4:	bl	0 <malloc>
 2c8:	mov	r4, r0
 2cc:	mov	r0, r5
 2d0:	bl	0 <strlen>
 2d4:	add	r0, r0, #1
 2d8:	bl	0 <malloc>
 2dc:	str	r0, [r4]
 2e0:	ldr	r0, [r4]
 2e4:	mov	r1, r5
 2e8:	bl	0 <strcpy>
 2ec:	mov	r3, #0
 2f0:	str	r3, [r4, #4]
 2f4:	mov	r1, #0
 2f8:	str	r1, [r4, #8]
 2fc:	mov	r2, #0
 300:	str	r2, [r4, #12]
 304:	mov	r0, r4
 308:	ldr	r4, [sp, #8]
 30c:	ldr	r5, [sp, #12]
 310:	ldr	lr, [sp, #4]
 314:	add	sp, sp, #16
 318:	bx	lr

0000031c <roda_direita>:
 31c:	mov	ip, sp
 320:	sub	sp, sp, #24
 324:	str	ip, [sp]
 328:	str	lr, [sp, #4]
 32c:	str	r4, [sp, #8]
 330:	str	r5, [sp, #12]
 334:	str	r6, [sp, #16]
 338:	mov	r6, r0
 33c:	ldr	r5, [r6, #4]
 340:	ldr	r1, [r5, #8]
 344:	str	r6, [r5, #8]
 348:	str	r1, [r6, #4]
 34c:	ldr	r0, [r6, #4]
 350:	bl	24c <avl_altura>
 354:	mov	r4, r0
 358:	ldr	r0, [r6, #8]
 35c:	bl	24c <avl_altura>
 360:	mov	r1, r0
 364:	mov	r0, r4
 368:	bl	27c <max>
 36c:	add	r3, r0, #1
 370:	str	r3, [r6, #12]
 374:	ldr	r0, [r5, #4]
 378:	bl	24c <avl_altura>
 37c:	mov	r4, r0
 380:	ldr	r0, [r5, #8]
 384:	bl	24c <avl_altura>
 388:	mov	r1, r0
 38c:	mov	r0, r4
 390:	bl	27c <max>
 394:	add	r2, r0, #1
 398:	str	r2, [r5, #12]
 39c:	mov	r0, r5
 3a0:	ldr	r4, [sp, #8]
 3a4:	ldr	r5, [sp, #12]
 3a8:	ldr	r6, [sp, #16]
 3ac:	ldr	lr, [sp, #4]
 3b0:	add	sp, sp, #24
 3b4:	bx	lr

000003b8 <roda_esquerda>:
 3b8:	mov	ip, sp
 3bc:	sub	sp, sp, #24
 3c0:	str	ip, [sp]
 3c4:	str	lr, [sp, #4]
 3c8:	str	r4, [sp, #8]
 3cc:	str	r5, [sp, #12]
 3d0:	str	r6, [sp, #16]
 3d4:	mov	r6, r0
 3d8:	ldr	r5, [r6, #8]
 3dc:	ldr	r1, [r5, #4]
 3e0:	str	r6, [r5, #4]
 3e4:	str	r1, [r6, #8]
 3e8:	ldr	r0, [r6, #4]
 3ec:	bl	24c <avl_altura>
 3f0:	mov	r4, r0
 3f4:	ldr	r0, [r6, #8]
 3f8:	bl	24c <avl_altura>
 3fc:	mov	r1, r0
 400:	mov	r0, r4
 404:	bl	27c <max>
 408:	add	r3, r0, #1
 40c:	str	r3, [r6, #12]
 410:	ldr	r0, [r5, #4]
 414:	bl	24c <avl_altura>
 418:	mov	r4, r0
 41c:	ldr	r0, [r5, #8]
 420:	bl	24c <avl_altura>
 424:	mov	r1, r0
 428:	mov	r0, r4
 42c:	bl	27c <max>
 430:	add	r2, r0, #1
 434:	str	r2, [r5, #12]
 438:	mov	r0, r5
 43c:	ldr	r4, [sp, #8]
 440:	ldr	r5, [sp, #12]
 444:	ldr	r6, [sp, #16]
 448:	ldr	lr, [sp, #4]
 44c:	add	sp, sp, #24
 450:	bx	lr

00000454 <calc_balanceamento>:
 454:	mov	ip, sp
 458:	sub	sp, sp, #16
 45c:	str	ip, [sp]
 460:	str	lr, [sp, #4]
 464:	str	r4, [sp, #8]
 468:	str	r5, [sp, #12]
 46c:	mov	r4, r0
 470:	cmp	r4, #0
 474:	bne	480 <calc_balanceamento+0x2c>
 478:	mov	r0, #0
 47c:	b	498 <calc_balanceamento+0x44>
 480:	ldr	r0, [r4, #8]
 484:	bl	24c <avl_altura>
 488:	mov	r5, r0
 48c:	ldr	r0, [r4, #4]
 490:	bl	24c <avl_altura>
 494:	sub	r0, r5, r0
 498:	ldr	r4, [sp, #8]
 49c:	ldr	r5, [sp, #12]
 4a0:	ldr	lr, [sp, #4]
 4a4:	add	sp, sp, #16
 4a8:	bx	lr

000004ac <avl_pesquisa_impl>:
 4ac:	mov	ip, sp
 4b0:	sub	sp, sp, #16
 4b4:	str	ip, [sp]
 4b8:	str	lr, [sp, #4]
 4bc:	str	r4, [sp, #8]
 4c0:	str	r5, [sp, #12]
 4c4:	mov	r5, r1
 4c8:	mov	r4, r0
 4cc:	cmp	r4, #0
 4d0:	bne	4dc <avl_pesquisa_impl+0x30>
 4d4:	mov	r4, #0
 4d8:	b	528 <avl_pesquisa_impl+0x7c>
 4dc:	ldr	r1, [r4]
 4e0:	mov	r0, r5
 4e4:	bl	0 <strcmp>
 4e8:	cmp	r0, #0
 4ec:	blt	518 <avl_pesquisa_impl+0x6c>
 4f0:	ldr	r1, [r4]
 4f4:	mov	r0, r5
 4f8:	bl	0 <strcmp>
 4fc:	cmp	r0, #0
 500:	ble	528 <avl_pesquisa_impl+0x7c>
 504:	ldr	r0, [r4, #8]
 508:	mov	r1, r5
 50c:	bl	4ac <avl_pesquisa_impl>
 510:	mov	r4, r0
 514:	b	528 <avl_pesquisa_impl+0x7c>
 518:	ldr	r0, [r4, #4]
 51c:	mov	r1, r5
 520:	bl	4ac <avl_pesquisa_impl>
 524:	mov	r4, r0
 528:	mov	r0, r4
 52c:	ldr	r4, [sp, #8]
 530:	ldr	r5, [sp, #12]
 534:	ldr	lr, [sp, #4]
 538:	add	sp, sp, #16
 53c:	bx	lr

00000540 <avl_insere_impl>:
 540:	mov	ip, sp
 544:	sub	sp, sp, #16
 548:	str	ip, [sp]
 54c:	str	lr, [sp, #4]
 550:	str	r4, [sp, #8]
 554:	str	r5, [sp, #12]
 558:	mov	r4, r1
 55c:	mov	r5, r0
 560:	cmp	r5, #0
 564:	bne	578 <avl_insere_impl+0x38>
 568:	mov	r0, r4
 56c:	bl	2a4 <avl_novo_no>
 570:	mov	r5, r0
 574:	b	678 <avl_insere_impl+0x138>
 578:	ldr	r1, [r5]
 57c:	mov	r0, r4
 580:	bl	0 <strcmp>
 584:	cmp	r0, #0
 588:	blt	5b4 <avl_insere_impl+0x74>
 58c:	ldr	r1, [r5]
 590:	mov	r0, r4
 594:	bl	0 <strcmp>
 598:	cmp	r0, #0
 59c:	ble	678 <avl_insere_impl+0x138>
 5a0:	ldr	r0, [r5, #8]
 5a4:	mov	r1, r4
 5a8:	bl	540 <avl_insere_impl>
 5ac:	str	r0, [r5, #8]
 5b0:	b	5c4 <avl_insere_impl+0x84>
 5b4:	ldr	r0, [r5, #4]
 5b8:	mov	r1, r4
 5bc:	bl	540 <avl_insere_impl>
 5c0:	str	r0, [r5, #4]
 5c4:	ldr	r0, [r5, #4]
 5c8:	bl	24c <avl_altura>
 5cc:	mov	r4, r0
 5d0:	ldr	r0, [r5, #8]
 5d4:	bl	24c <avl_altura>
 5d8:	mov	r1, r0
 5dc:	mov	r0, r4
 5e0:	bl	27c <max>
 5e4:	add	r0, r0, #1
 5e8:	str	r0, [r5, #12]
 5ec:	mov	r0, r5
 5f0:	bl	454 <calc_balanceamento>
 5f4:	cmp	r0, #1
 5f8:	bgt	640 <avl_insere_impl+0x100>
 5fc:	cmn	r0, #1
 600:	bge	678 <avl_insere_impl+0x138>
 604:	ldr	r0, [r5, #4]
 608:	bl	454 <calc_balanceamento>
 60c:	cmp	r0, #0
 610:	ble	630 <avl_insere_impl+0xf0>
 614:	ldr	r0, [r5, #4]
 618:	bl	3b8 <roda_esquerda>
 61c:	str	r0, [r5, #4]
 620:	mov	r0, r5
 624:	bl	31c <roda_direita>
 628:	mov	r5, r0
 62c:	b	678 <avl_insere_impl+0x138>
 630:	mov	r0, r5
 634:	bl	31c <roda_direita>
 638:	mov	r5, r0
 63c:	b	678 <avl_insere_impl+0x138>
 640:	ldr	r0, [r5, #8]
 644:	bl	454 <calc_balanceamento>
 648:	cmp	r0, #0
 64c:	bge	66c <avl_insere_impl+0x12c>
 650:	ldr	r0, [r5, #8]
 654:	bl	31c <roda_direita>
 658:	str	r0, [r5, #8]
 65c:	mov	r0, r5
 660:	bl	3b8 <roda_esquerda>
 664:	mov	r5, r0
 668:	b	678 <avl_insere_impl+0x138>
 66c:	mov	r0, r5
 670:	bl	3b8 <roda_esquerda>
 674:	mov	r5, r0
 678:	mov	r0, r5
 67c:	ldr	r4, [sp, #8]
 680:	ldr	r5, [sp, #12]
 684:	ldr	lr, [sp, #4]
 688:	add	sp, sp, #16
 68c:	bx	lr

00000690 <avl_no_valormin>:
 690:	mov	ip, sp
 694:	sub	sp, sp, #8
 698:	str	ip, [sp]
 69c:	str	lr, [sp, #4]
 6a0:	ldr	r1, [r0, #4]
 6a4:	cmp	r1, #0
 6a8:	beq	6b4 <avl_no_valormin+0x24>
 6ac:	ldr	r0, [r0, #4]
 6b0:	b	6a0 <avl_no_valormin+0x10>
 6b4:	ldr	lr, [sp, #4]
 6b8:	add	sp, sp, #8
 6bc:	bx	lr

000006c0 <avl_no_valormax>:
 6c0:	mov	ip, sp
 6c4:	sub	sp, sp, #8
 6c8:	str	ip, [sp]
 6cc:	str	lr, [sp, #4]
 6d0:	ldr	r1, [r0, #8]
 6d4:	cmp	r1, #0
 6d8:	beq	6e4 <avl_no_valormax+0x24>
 6dc:	ldr	r0, [r0, #8]
 6e0:	b	6d0 <avl_no_valormax+0x10>
 6e4:	ldr	lr, [sp, #4]
 6e8:	add	sp, sp, #8
 6ec:	bx	lr

000006f0 <avl_remove_impl>:
 6f0:	mov	ip, sp
 6f4:	sub	sp, sp, #16
 6f8:	str	ip, [sp]
 6fc:	str	lr, [sp, #4]
 700:	str	r4, [sp, #8]
 704:	str	r5, [sp, #12]
 708:	mov	r4, r1
 70c:	mov	r5, r0
 710:	cmp	r5, #0
 714:	bne	720 <avl_remove_impl+0x30>
 718:	mov	r0, r5
 71c:	b	91c <avl_remove_impl+0x22c>
 720:	ldr	r1, [r5]
 724:	mov	r0, r4
 728:	bl	0 <strcmp>
 72c:	cmp	r0, #0
 730:	blt	850 <avl_remove_impl+0x160>
 734:	ldr	r1, [r5]
 738:	mov	r0, r4
 73c:	bl	0 <strcmp>
 740:	cmp	r0, #0
 744:	bgt	83c <avl_remove_impl+0x14c>
 748:	ldr	r3, [r5, #4]
 74c:	cmp	r3, #0
 750:	beq	768 <avl_remove_impl+0x78>
 754:	ldr	ip, [r5, #8]
 758:	cmp	ip, #0
 75c:	moveq	r1, #1
 760:	movne	r1, #0
 764:	b	76c <avl_remove_impl+0x7c>
 768:	mov	r1, #1
 76c:	cmp	r1, #0
 770:	beq	7f4 <avl_remove_impl+0x104>
 774:	ldr	r2, [r5, #4]
 778:	cmp	r2, #0
 77c:	bne	788 <avl_remove_impl+0x98>
 780:	ldr	r4, [r5, #8]
 784:	b	78c <avl_remove_impl+0x9c>
 788:	ldr	r4, [r5, #4]
 78c:	cmp	r4, #0
 790:	beq	7d8 <avl_remove_impl+0xe8>
 794:	ldr	r0, [r4]
 798:	bl	0 <strlen>
 79c:	mov	r1, r0
 7a0:	ldr	r0, [r5]
 7a4:	add	r1, r1, #1
 7a8:	bl	0 <realloc>
 7ac:	str	r0, [r5]
 7b0:	ldr	r0, [r5]
 7b4:	ldr	r1, [r4]
 7b8:	bl	0 <strcpy>
 7bc:	ldr	r0, [r4, #4]
 7c0:	str	r0, [r5, #4]
 7c4:	ldr	r2, [r4, #8]
 7c8:	str	r2, [r5, #8]
 7cc:	ldr	r1, [r4, #12]
 7d0:	str	r1, [r5, #12]
 7d4:	b	7e0 <avl_remove_impl+0xf0>
 7d8:	mov	r4, r5
 7dc:	mov	r5, #0
 7e0:	ldr	r0, [r4]
 7e4:	bl	0 <free>
 7e8:	mov	r0, r4
 7ec:	bl	0 <free>
 7f0:	b	860 <avl_remove_impl+0x170>
 7f4:	ldr	r0, [r5, #8]
 7f8:	bl	690 <avl_no_valormin>
 7fc:	mov	r4, r0
 800:	ldr	r0, [r4]
 804:	bl	0 <strlen>
 808:	ldr	r2, [r5]
 80c:	add	r1, r0, #1
 810:	mov	r0, r2
 814:	bl	0 <realloc>
 818:	str	r0, [r5]
 81c:	ldr	r0, [r5]
 820:	ldr	r1, [r4]
 824:	bl	0 <strcpy>
 828:	ldr	r0, [r5, #8]
 82c:	ldr	r1, [r4]
 830:	bl	6f0 <avl_remove_impl>
 834:	str	r0, [r5, #8]
 838:	b	860 <avl_remove_impl+0x170>
 83c:	ldr	r0, [r5, #8]
 840:	mov	r1, r4
 844:	bl	6f0 <avl_remove_impl>
 848:	str	r0, [r5, #8]
 84c:	b	860 <avl_remove_impl+0x170>
 850:	ldr	r0, [r5, #4]
 854:	mov	r1, r4
 858:	bl	6f0 <avl_remove_impl>
 85c:	str	r0, [r5, #4]
 860:	cmp	r5, #0
 864:	bne	870 <avl_remove_impl+0x180>
 868:	mov	r0, r5
 86c:	b	91c <avl_remove_impl+0x22c>
 870:	ldr	r0, [r5, #4]
 874:	bl	24c <avl_altura>
 878:	mov	r4, r0
 87c:	ldr	r0, [r5, #8]
 880:	bl	24c <avl_altura>
 884:	mov	r1, r0
 888:	mov	r0, r4
 88c:	bl	27c <max>
 890:	add	r0, r0, #1
 894:	str	r0, [r5, #12]
 898:	mov	r0, r5
 89c:	bl	454 <calc_balanceamento>
 8a0:	cmp	r0, #1
 8a4:	bgt	8ec <avl_remove_impl+0x1fc>
 8a8:	cmn	r0, #1
 8ac:	bge	8e4 <avl_remove_impl+0x1f4>
 8b0:	ldr	r0, [r5, #4]
 8b4:	bl	454 <calc_balanceamento>
 8b8:	cmp	r0, #0
 8bc:	ble	8d8 <avl_remove_impl+0x1e8>
 8c0:	ldr	r0, [r5, #4]
 8c4:	bl	3b8 <roda_esquerda>
 8c8:	str	r0, [r5, #4]
 8cc:	mov	r0, r5
 8d0:	bl	31c <roda_direita>
 8d4:	b	91c <avl_remove_impl+0x22c>
 8d8:	mov	r0, r5
 8dc:	bl	31c <roda_direita>
 8e0:	b	91c <avl_remove_impl+0x22c>
 8e4:	mov	r0, r5
 8e8:	b	91c <avl_remove_impl+0x22c>
 8ec:	ldr	r0, [r5, #8]
 8f0:	bl	454 <calc_balanceamento>
 8f4:	cmp	r0, #0
 8f8:	bge	914 <avl_remove_impl+0x224>
 8fc:	ldr	r0, [r5, #8]
 900:	bl	31c <roda_direita>
 904:	str	r0, [r5, #8]
 908:	mov	r0, r5
 90c:	bl	3b8 <roda_esquerda>
 910:	b	91c <avl_remove_impl+0x22c>
 914:	mov	r0, r5
 918:	bl	3b8 <roda_esquerda>
 91c:	ldr	r4, [sp, #8]
 920:	ldr	r5, [sp, #12]
 924:	ldr	lr, [sp, #4]
 928:	add	sp, sp, #16
 92c:	bx	lr

00000930 <avl_preordem_impl>:
 930:	mov	ip, sp
 934:	sub	sp, sp, #16
 938:	str	ip, [sp]
 93c:	str	lr, [sp, #4]
 940:	str	r4, [sp, #8]
 944:	mov	r4, r0
 948:	cmp	r4, #0
 94c:	beq	96c <avl_preordem_impl+0x3c>
 950:	ldr	r0, [pc, #36]	; 97c <avl_preordem_impl+0x4c>
 954:	ldr	r1, [r4]
 958:	bl	0 <printf>
 95c:	ldr	r0, [r4, #4]
 960:	bl	930 <avl_preordem_impl>
 964:	ldr	r0, [r4, #8]
 968:	bl	930 <avl_preordem_impl>
 96c:	ldr	r4, [sp, #8]
 970:	ldr	lr, [sp, #4]
 974:	add	sp, sp, #16
 978:	bx	lr
 97c:	.word	0x00000002
