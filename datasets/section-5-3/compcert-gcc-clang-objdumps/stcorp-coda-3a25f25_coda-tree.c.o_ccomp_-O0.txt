
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-tree.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_tree_node_new>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp, #4]
   c:	str	lr, [sp, #8]
  10:	str	r4, [sp, #16]
  14:	mov	r4, r0
  18:	mov	r0, #28
  1c:	bl	0 <malloc>
  20:	cmp	r0, #0
  24:	bne	4c <coda_tree_node_new+0x4c>
  28:	mvn	r0, #0
  2c:	ldr	r1, [pc, #92]	; 90 <coda_tree_node_new+0x90>
  30:	mov	r2, #28
  34:	ldr	r3, [pc, #88]	; 94 <coda_tree_node_new+0x94>
  38:	mov	ip, #53	; 0x35
  3c:	str	ip, [sp]
  40:	bl	0 <coda_set_error>
  44:	mov	r0, #0
  48:	b	80 <coda_tree_node_new+0x80>
  4c:	str	r4, [r0]
  50:	mov	r1, #0
  54:	str	r1, [r0, #4]
  58:	mov	ip, #0
  5c:	str	ip, [r0, #8]
  60:	mov	r1, #0
  64:	str	r1, [r0, #12]
  68:	mov	r2, #0
  6c:	str	r2, [r0, #16]
  70:	mov	r1, #0
  74:	str	r1, [r0, #20]
  78:	mov	r1, #0
  7c:	str	r1, [r0, #24]
  80:	ldr	r4, [sp, #16]
  84:	ldr	lr, [sp, #8]
  88:	add	sp, sp, #24
  8c:	bx	lr
  90:	.word	0x0000015e
  94:	.word	0x00000105

00000098 <coda_tree_node_delete>:
  98:	mov	ip, sp
  9c:	sub	sp, sp, #24
  a0:	str	ip, [sp]
  a4:	str	lr, [sp, #4]
  a8:	str	r4, [sp, #8]
  ac:	str	r5, [sp, #12]
  b0:	str	r6, [sp, #16]
  b4:	mov	r4, r1
  b8:	mov	r5, r0
  bc:	ldr	r0, [r5, #12]
  c0:	cmp	r0, #0
  c4:	beq	d4 <coda_tree_node_delete+0x3c>
  c8:	ldr	r0, [r5, #12]
  cc:	mov	r1, r4
  d0:	bl	98 <coda_tree_node_delete>
  d4:	ldr	r0, [r5, #20]
  d8:	cmp	r0, #0
  dc:	beq	e8 <coda_tree_node_delete+0x50>
  e0:	ldr	r0, [r5, #20]
  e4:	bl	0 <free>
  e8:	ldr	r1, [r5, #24]
  ec:	cmp	r1, #0
  f0:	beq	134 <coda_tree_node_delete+0x9c>
  f4:	mov	r6, #0
  f8:	ldr	r1, [r5, #16]
  fc:	cmp	r6, r1
 100:	bge	12c <coda_tree_node_delete+0x94>
 104:	ldr	r3, [r5, #24]
 108:	ldr	ip, [r3, r6, lsl #2]
 10c:	cmp	ip, #0
 110:	beq	124 <coda_tree_node_delete+0x8c>
 114:	ldr	r0, [r5, #24]
 118:	ldr	r0, [r0, r6, lsl #2]
 11c:	mov	r1, r4
 120:	bl	98 <coda_tree_node_delete>
 124:	add	r6, r6, #1
 128:	b	f8 <coda_tree_node_delete+0x60>
 12c:	ldr	r0, [r5, #24]
 130:	bl	0 <free>
 134:	ldr	r3, [r5, #8]
 138:	cmp	r3, #0
 13c:	beq	184 <coda_tree_node_delete+0xec>
 140:	cmp	r4, #0
 144:	beq	17c <coda_tree_node_delete+0xe4>
 148:	mov	r6, #0
 14c:	ldr	ip, [r5, #4]
 150:	cmp	r6, ip
 154:	bge	17c <coda_tree_node_delete+0xe4>
 158:	ldr	r1, [r5, #8]
 15c:	ldr	r2, [r1, r6, lsl #2]
 160:	cmp	r2, #0
 164:	beq	174 <coda_tree_node_delete+0xdc>
 168:	ldr	r2, [r5, #8]
 16c:	ldr	r0, [r2, r6, lsl #2]
 170:	blx	r4
 174:	add	r6, r6, #1
 178:	b	14c <coda_tree_node_delete+0xb4>
 17c:	ldr	r0, [r5, #8]
 180:	bl	0 <free>
 184:	mov	r0, r5
 188:	bl	0 <free>
 18c:	ldr	r4, [sp, #8]
 190:	ldr	r5, [sp, #12]
 194:	ldr	r6, [sp, #16]
 198:	ldr	lr, [sp, #4]
 19c:	add	sp, sp, #24
 1a0:	bx	lr

000001a4 <tree_node_add_item>:
 1a4:	mov	ip, sp
 1a8:	sub	sp, sp, #24
 1ac:	str	ip, [sp, #4]
 1b0:	str	lr, [sp, #8]
 1b4:	str	r4, [sp, #16]
 1b8:	str	r5, [sp, #20]
 1bc:	mov	r4, r1
 1c0:	mov	r5, r0
 1c4:	ldr	r0, [r5, #8]
 1c8:	ldr	r2, [r5, #4]
 1cc:	lsl	r1, r2, #2
 1d0:	add	r1, r1, #4
 1d4:	bl	0 <realloc>
 1d8:	cmp	r0, #0
 1dc:	bne	20c <tree_node_add_item+0x68>
 1e0:	mvn	r0, #0
 1e4:	ldr	r1, [pc, #84]	; 240 <tree_node_add_item+0x9c>
 1e8:	ldr	ip, [r5, #4]
 1ec:	lsl	r3, ip, #2
 1f0:	add	r2, r3, #4
 1f4:	ldr	r3, [pc, #72]	; 244 <tree_node_add_item+0xa0>
 1f8:	mov	ip, #119	; 0x77
 1fc:	str	ip, [sp]
 200:	bl	0 <coda_set_error>
 204:	mvn	r0, #0
 208:	b	22c <tree_node_add_item+0x88>
 20c:	str	r0, [r5, #8]
 210:	ldr	r2, [r5, #8]
 214:	ldr	r3, [r5, #4]
 218:	str	r4, [r2, r3, lsl #2]
 21c:	ldr	r1, [r5, #4]
 220:	add	r1, r1, #1
 224:	str	r1, [r5, #4]
 228:	mov	r0, #0
 22c:	ldr	r4, [sp, #16]
 230:	ldr	r5, [sp, #20]
 234:	ldr	lr, [sp, #8]
 238:	add	sp, sp, #24
 23c:	bx	lr
 240:	.word	0x0000015e
 244:	.word	0x00000105

00000248 <tree_node_get_node_for_all>:
 248:	mov	ip, sp
 24c:	sub	sp, sp, #32
 250:	str	ip, [sp]
 254:	str	lr, [sp, #4]
 258:	str	r4, [sp, #8]
 25c:	str	r5, [sp, #12]
 260:	str	r6, [sp, #16]
 264:	mov	r5, r1
 268:	mov	r6, r0
 26c:	ldr	r0, [r6, #12]
 270:	cmp	r0, #0
 274:	beq	280 <tree_node_get_node_for_all+0x38>
 278:	mov	r0, #0
 27c:	b	28c <tree_node_get_node_for_all+0x44>
 280:	cmp	r2, #0
 284:	movne	r0, #1
 288:	moveq	r0, #0
 28c:	cmp	r0, #0
 290:	beq	338 <tree_node_get_node_for_all+0xf0>
 294:	ldr	r4, [r6]
 298:	add	r1, sp, #24
 29c:	mov	r0, r4
 2a0:	bl	0 <coda_type_get_class>
 2a4:	ldr	ip, [sp, #24]
 2a8:	cmp	ip, #6
 2ac:	bne	2dc <tree_node_get_node_for_all+0x94>
 2b0:	add	r1, sp, #28
 2b4:	mov	r0, r4
 2b8:	bl	0 <coda_type_get_special_base_type>
 2bc:	cmp	r0, #0
 2c0:	beq	2cc <tree_node_get_node_for_all+0x84>
 2c4:	mvn	r0, #0
 2c8:	b	344 <tree_node_get_node_for_all+0xfc>
 2cc:	ldr	r4, [sp, #28]
 2d0:	add	r1, sp, #24
 2d4:	mov	r0, r4
 2d8:	bl	0 <coda_type_get_class>
 2dc:	ldr	r2, [sp, #24]
 2e0:	cmp	r2, #1
 2e4:	beq	2fc <tree_node_get_node_for_all+0xb4>
 2e8:	ldr	r0, [pc, #108]	; 35c <tree_node_get_node_for_all+0x114>
 2ec:	ldr	r1, [pc, #112]	; 364 <tree_node_get_node_for_all+0x11c>
 2f0:	mov	r2, #149	; 0x95
 2f4:	ldr	r3, [pc, #100]	; 360 <tree_node_get_node_for_all+0x118>
 2f8:	bl	0 <__assert_fail>
 2fc:	add	r1, sp, #28
 300:	mov	r0, r4
 304:	bl	0 <coda_type_get_array_base_type>
 308:	cmp	r0, #0
 30c:	beq	318 <tree_node_get_node_for_all+0xd0>
 310:	mvn	r0, #0
 314:	b	344 <tree_node_get_node_for_all+0xfc>
 318:	ldr	r0, [sp, #28]
 31c:	bl	0 <coda_tree_node_new>
 320:	str	r0, [r6, #12]
 324:	ldr	r2, [r6, #12]
 328:	cmp	r2, #0
 32c:	bne	338 <tree_node_get_node_for_all+0xf0>
 330:	mvn	r0, #0
 334:	b	344 <tree_node_get_node_for_all+0xfc>
 338:	ldr	r0, [r6, #12]
 33c:	str	r0, [r5]
 340:	mov	r0, #0
 344:	ldr	r4, [sp, #8]
 348:	ldr	r5, [sp, #12]
 34c:	ldr	r6, [sp, #16]
 350:	ldr	lr, [sp, #4]
 354:	add	sp, sp, #32
 358:	bx	lr
 35c:	.word	0x000000ac
 360:	.word	0x00000193
 364:	.word	0x00000105

00000368 <tree_node_get_node_for_index>:
 368:	mov	ip, sp
 36c:	sub	sp, sp, #40	; 0x28
 370:	str	ip, [sp, #4]
 374:	str	lr, [sp, #8]
 378:	str	r4, [sp, #16]
 37c:	str	r5, [sp, #20]
 380:	str	r6, [sp, #24]
 384:	str	r7, [sp, #28]
 388:	mov	r6, r2
 38c:	mov	r4, r1
 390:	mov	r5, r0
 394:	mov	r7, #0
 398:	ldr	r2, [r5, #16]
 39c:	sub	r2, r2, #1
 3a0:	ldr	ip, [r5, #16]
 3a4:	cmp	ip, #0
 3a8:	ble	3f0 <tree_node_get_node_for_index+0x88>
 3ac:	cmp	r2, r7
 3b0:	beq	3f0 <tree_node_get_node_for_index+0x88>
 3b4:	add	ip, r7, r2
 3b8:	asr	lr, ip, #31
 3bc:	add	lr, ip, lr, lsr #31
 3c0:	asr	r1, lr, #1
 3c4:	ldr	ip, [r5, #20]
 3c8:	ldr	ip, [ip, r1, lsl #2]
 3cc:	cmp	r4, ip
 3d0:	bgt	3d8 <tree_node_get_node_for_index+0x70>
 3d4:	mov	r2, r1
 3d8:	ldr	ip, [r5, #20]
 3dc:	ldr	r0, [ip, r1, lsl #2]
 3e0:	cmp	r4, r0
 3e4:	ble	3ac <tree_node_get_node_for_index+0x44>
 3e8:	add	r7, r1, #1
 3ec:	b	3ac <tree_node_get_node_for_index+0x44>
 3f0:	ldr	r1, [r5, #16]
 3f4:	cmp	r1, #0
 3f8:	ble	414 <tree_node_get_node_for_index+0xac>
 3fc:	ldr	r0, [r5, #20]
 400:	ldr	ip, [r0, r2, lsl #2]
 404:	cmp	r4, ip
 408:	moveq	r0, #1
 40c:	movne	r0, #0
 410:	b	418 <tree_node_get_node_for_index+0xb0>
 414:	mov	r0, #0
 418:	cmp	r0, #0
 41c:	bne	614 <tree_node_get_node_for_index+0x2ac>
 420:	cmp	r3, #0
 424:	beq	608 <tree_node_get_node_for_index+0x2a0>
 428:	ldr	r7, [r5]
 42c:	ldr	r0, [r5, #20]
 430:	ldr	r1, [r5, #16]
 434:	lsl	r1, r1, #2
 438:	add	r1, r1, #4
 43c:	bl	0 <realloc>
 440:	cmp	r0, #0
 444:	bne	474 <tree_node_get_node_for_index+0x10c>
 448:	mvn	r0, #0
 44c:	ldr	r1, [pc, #492]	; 640 <tree_node_get_node_for_index+0x2d8>
 450:	ldr	ip, [r5, #16]
 454:	lsl	r2, ip, #2
 458:	add	r2, r2, #4
 45c:	ldr	r3, [pc, #480]	; 644 <tree_node_get_node_for_index+0x2dc>
 460:	mov	r4, #204	; 0xcc
 464:	str	r4, [sp]
 468:	bl	0 <coda_set_error>
 46c:	mvn	r0, #0
 470:	b	624 <tree_node_get_node_for_index+0x2bc>
 474:	str	r0, [r5, #20]
 478:	ldr	r0, [r5, #24]
 47c:	ldr	r2, [r5, #16]
 480:	lsl	r2, r2, #2
 484:	add	r1, r2, #4
 488:	bl	0 <realloc>
 48c:	cmp	r0, #0
 490:	bne	4c0 <tree_node_get_node_for_index+0x158>
 494:	mvn	r0, #0
 498:	ldr	r1, [pc, #416]	; 640 <tree_node_get_node_for_index+0x2d8>
 49c:	ldr	r2, [r5, #16]
 4a0:	lsl	ip, r2, #2
 4a4:	add	r2, ip, #4
 4a8:	ldr	r3, [pc, #404]	; 644 <tree_node_get_node_for_index+0x2dc>
 4ac:	mov	r4, #212	; 0xd4
 4b0:	str	r4, [sp]
 4b4:	bl	0 <coda_set_error>
 4b8:	mvn	r0, #0
 4bc:	b	624 <tree_node_get_node_for_index+0x2bc>
 4c0:	str	r0, [r5, #24]
 4c4:	cmn	r4, #1
 4c8:	beq	558 <tree_node_get_node_for_index+0x1f0>
 4cc:	add	r1, sp, #36	; 0x24
 4d0:	mov	r0, r7
 4d4:	bl	0 <coda_type_get_class>
 4d8:	ldr	r2, [sp, #36]	; 0x24
 4dc:	cmp	r2, #6
 4e0:	bne	510 <tree_node_get_node_for_index+0x1a8>
 4e4:	add	r1, sp, #32
 4e8:	mov	r0, r7
 4ec:	bl	0 <coda_type_get_special_base_type>
 4f0:	cmp	r0, #0
 4f4:	beq	500 <tree_node_get_node_for_index+0x198>
 4f8:	mvn	r0, #0
 4fc:	b	624 <tree_node_get_node_for_index+0x2bc>
 500:	ldr	r7, [sp, #32]
 504:	add	r1, sp, #36	; 0x24
 508:	mov	r0, r7
 50c:	bl	0 <coda_type_get_class>
 510:	ldr	r2, [sp, #36]	; 0x24
 514:	cmp	r2, #1
 518:	beq	53c <tree_node_get_node_for_index+0x1d4>
 51c:	add	r2, sp, #32
 520:	mov	r1, r4
 524:	mov	r0, r7
 528:	bl	0 <coda_type_get_record_field_type>
 52c:	cmp	r0, #0
 530:	beq	574 <tree_node_get_node_for_index+0x20c>
 534:	mvn	r0, #0
 538:	b	624 <tree_node_get_node_for_index+0x2bc>
 53c:	add	r1, sp, #32
 540:	mov	r0, r7
 544:	bl	0 <coda_type_get_array_base_type>
 548:	cmp	r0, #0
 54c:	beq	574 <tree_node_get_node_for_index+0x20c>
 550:	mvn	r0, #0
 554:	b	624 <tree_node_get_node_for_index+0x2bc>
 558:	add	r1, sp, #32
 55c:	mov	r0, r7
 560:	bl	0 <coda_type_get_attributes>
 564:	cmp	r0, #0
 568:	beq	574 <tree_node_get_node_for_index+0x20c>
 56c:	mvn	r0, #0
 570:	b	624 <tree_node_get_node_for_index+0x2bc>
 574:	ldr	r0, [sp, #32]
 578:	bl	0 <coda_tree_node_new>
 57c:	cmp	r0, #0
 580:	bne	58c <tree_node_get_node_for_index+0x224>
 584:	mvn	r0, #0
 588:	b	624 <tree_node_get_node_for_index+0x2bc>
 58c:	str	r0, [r6]
 590:	mov	r2, #0
 594:	ldr	ip, [r5, #16]
 598:	cmp	r2, ip
 59c:	bge	5e0 <tree_node_get_node_for_index+0x278>
 5a0:	ldr	r1, [r5, #20]
 5a4:	ldr	r3, [r1, r2, lsl #2]
 5a8:	cmp	r4, r3
 5ac:	bge	5d8 <tree_node_get_node_for_index+0x270>
 5b0:	ldr	r1, [r5, #20]
 5b4:	ldr	r1, [r1, r2, lsl #2]
 5b8:	ldr	r3, [r5, #24]
 5bc:	ldr	r3, [r3, r2, lsl #2]
 5c0:	ldr	ip, [r5, #20]
 5c4:	str	r4, [ip, r2, lsl #2]
 5c8:	ldr	ip, [r5, #24]
 5cc:	str	r0, [ip, r2, lsl #2]
 5d0:	mov	r4, r1
 5d4:	mov	r0, r3
 5d8:	add	r2, r2, #1
 5dc:	b	594 <tree_node_get_node_for_index+0x22c>
 5e0:	ldr	r2, [r5, #20]
 5e4:	ldr	r1, [r5, #16]
 5e8:	str	r4, [r2, r1, lsl #2]
 5ec:	ldr	ip, [r5, #24]
 5f0:	ldr	r3, [r5, #16]
 5f4:	str	r0, [ip, r3, lsl #2]
 5f8:	ldr	r3, [r5, #16]
 5fc:	add	ip, r3, #1
 600:	str	ip, [r5, #16]
 604:	b	620 <tree_node_get_node_for_index+0x2b8>
 608:	mov	r0, #0
 60c:	str	r0, [r6]
 610:	b	620 <tree_node_get_node_for_index+0x2b8>
 614:	ldr	r0, [r5, #24]
 618:	ldr	r2, [r0, r2, lsl #2]
 61c:	str	r2, [r6]
 620:	mov	r0, #0
 624:	ldr	r4, [sp, #16]
 628:	ldr	r5, [sp, #20]
 62c:	ldr	r6, [sp, #24]
 630:	ldr	r7, [sp, #28]
 634:	ldr	lr, [sp, #8]
 638:	add	sp, sp, #40	; 0x28
 63c:	bx	lr
 640:	.word	0x0000015e
 644:	.word	0x00000105

00000648 <coda_tree_node_add_item_for_path>:
 648:	mov	ip, sp
 64c:	sub	sp, sp, #64	; 0x40
 650:	str	ip, [sp, #4]
 654:	str	lr, [sp, #8]
 658:	str	r4, [sp, #16]
 65c:	str	r5, [sp, #20]
 660:	str	r6, [sp, #24]
 664:	str	r7, [sp, #28]
 668:	str	r8, [sp, #32]
 66c:	mov	r5, r3
 670:	mov	r4, r2
 674:	mov	r6, r1
 678:	str	r0, [sp, #44]	; 0x2c
 67c:	mov	r7, #0
 680:	ldrb	r1, [r6, r7]
 684:	cmp	r1, #47	; 0x2f
 688:	bne	70c <coda_tree_node_add_item_for_path+0xc4>
 68c:	add	ip, r6, r7
 690:	ldrb	r2, [ip, #1]
 694:	cmp	r2, #0
 698:	beq	6b4 <coda_tree_node_add_item_for_path+0x6c>
 69c:	add	r0, r6, r7
 6a0:	ldrb	r0, [r0, #1]
 6a4:	cmp	r0, #47	; 0x2f
 6a8:	moveq	r0, #1
 6ac:	movne	r0, #0
 6b0:	b	6b8 <coda_tree_node_add_item_for_path+0x70>
 6b4:	mov	r0, #1
 6b8:	cmp	r0, #0
 6bc:	bne	6d8 <coda_tree_node_add_item_for_path+0x90>
 6c0:	add	r2, r6, r7
 6c4:	ldrb	r3, [r2, #1]
 6c8:	cmp	r3, #91	; 0x5b
 6cc:	moveq	r3, #1
 6d0:	movne	r3, #0
 6d4:	b	6dc <coda_tree_node_add_item_for_path+0x94>
 6d8:	mov	r3, #1
 6dc:	cmp	r3, #0
 6e0:	bne	6fc <coda_tree_node_add_item_for_path+0xb4>
 6e4:	add	r1, r6, r7
 6e8:	ldrb	r2, [r1, #1]
 6ec:	cmp	r2, #64	; 0x40
 6f0:	moveq	r3, #1
 6f4:	movne	r3, #0
 6f8:	b	700 <coda_tree_node_add_item_for_path+0xb8>
 6fc:	mov	r3, #1
 700:	cmp	r3, #0
 704:	beq	70c <coda_tree_node_add_item_for_path+0xc4>
 708:	add	r7, r7, #1
 70c:	ldrb	r0, [r6, r7]
 710:	cmp	r0, #0
 714:	beq	a00 <coda_tree_node_add_item_for_path+0x3b8>
 718:	ldrb	r2, [r6, r7]
 71c:	cmp	r2, #64	; 0x40
 720:	beq	9d4 <coda_tree_node_add_item_for_path+0x38c>
 724:	ldr	r0, [sp, #44]	; 0x2c
 728:	ldr	r0, [r0]
 72c:	add	r1, sp, #48	; 0x30
 730:	bl	0 <coda_type_get_class>
 734:	ldr	ip, [sp, #48]	; 0x30
 738:	cmp	ip, #6
 73c:	bne	76c <coda_tree_node_add_item_for_path+0x124>
 740:	ldr	ip, [sp, #44]	; 0x2c
 744:	ldr	r0, [ip]
 748:	add	r1, sp, #56	; 0x38
 74c:	bl	0 <coda_type_get_special_base_type>
 750:	cmp	r0, #0
 754:	beq	760 <coda_tree_node_add_item_for_path+0x118>
 758:	mvn	r0, #0
 75c:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 760:	ldr	r0, [sp, #56]	; 0x38
 764:	add	r1, sp, #48	; 0x30
 768:	bl	0 <coda_type_get_class>
 76c:	ldrb	r3, [r6, r7]
 770:	cmp	r3, #91	; 0x5b
 774:	beq	894 <coda_tree_node_add_item_for_path+0x24c>
 778:	ldrb	r1, [r6, r7]
 77c:	cmp	r1, #47	; 0x2f
 780:	beq	79c <coda_tree_node_add_item_for_path+0x154>
 784:	mvn	r0, #99	; 0x63
 788:	ldr	r1, [pc, #792]	; aa8 <coda_tree_node_add_item_for_path+0x460>
 78c:	mov	r2, r6
 790:	bl	0 <coda_set_error>
 794:	mvn	r0, #0
 798:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 79c:	ldr	r1, [sp, #48]	; 0x30
 7a0:	cmp	r1, #0
 7a4:	beq	7cc <coda_tree_node_add_item_for_path+0x184>
 7a8:	ldr	r0, [sp, #48]	; 0x30
 7ac:	bl	0 <coda_type_get_class_name>
 7b0:	mov	r2, r0
 7b4:	mvn	r0, #99	; 0x63
 7b8:	ldr	r1, [pc, #748]	; aac <coda_tree_node_add_item_for_path+0x464>
 7bc:	str	r2, [sp]
 7c0:	mov	r3, r6
 7c4:	mov	r2, r7
 7c8:	bl	0 <coda_set_error>
 7cc:	add	r3, r7, #1
 7d0:	mov	r7, r3
 7d4:	ldrb	r2, [r6, r7]
 7d8:	cmp	r2, #0
 7dc:	beq	7f4 <coda_tree_node_add_item_for_path+0x1ac>
 7e0:	ldrb	r2, [r6, r7]
 7e4:	cmp	r2, #47	; 0x2f
 7e8:	movne	ip, #1
 7ec:	moveq	ip, #0
 7f0:	b	7f8 <coda_tree_node_add_item_for_path+0x1b0>
 7f4:	mov	ip, #0
 7f8:	cmp	ip, #0
 7fc:	beq	814 <coda_tree_node_add_item_for_path+0x1cc>
 800:	ldrb	r1, [r6, r7]
 804:	cmp	r1, #91	; 0x5b
 808:	movne	ip, #1
 80c:	moveq	ip, #0
 810:	b	818 <coda_tree_node_add_item_for_path+0x1d0>
 814:	mov	ip, #0
 818:	cmp	ip, #0
 81c:	beq	834 <coda_tree_node_add_item_for_path+0x1ec>
 820:	ldrb	r1, [r6, r7]
 824:	cmp	r1, #64	; 0x40
 828:	movne	r1, #1
 82c:	moveq	r1, #0
 830:	b	838 <coda_tree_node_add_item_for_path+0x1f0>
 834:	mov	r1, #0
 838:	cmp	r1, #0
 83c:	beq	848 <coda_tree_node_add_item_for_path+0x200>
 840:	add	r7, r7, #1
 844:	b	7d4 <coda_tree_node_add_item_for_path+0x18c>
 848:	ldr	ip, [sp, #44]	; 0x2c
 84c:	ldr	r0, [ip]
 850:	add	r1, r6, r3
 854:	sub	r2, r7, r3
 858:	add	r3, sp, #52	; 0x34
 85c:	bl	0 <coda_type_get_record_field_index_from_name_n>
 860:	cmp	r0, #0
 864:	beq	870 <coda_tree_node_add_item_for_path+0x228>
 868:	mvn	r0, #0
 86c:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 870:	ldr	r0, [sp, #44]	; 0x2c
 874:	ldr	r1, [sp, #52]	; 0x34
 878:	add	r2, sp, #44	; 0x2c
 87c:	mov	r3, #1
 880:	bl	368 <tree_node_get_node_for_index>
 884:	cmp	r0, #0
 888:	beq	70c <coda_tree_node_add_item_for_path+0xc4>
 88c:	mvn	r0, #0
 890:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 894:	ldr	r1, [sp, #48]	; 0x30
 898:	cmp	r1, #1
 89c:	beq	8c4 <coda_tree_node_add_item_for_path+0x27c>
 8a0:	ldr	r0, [sp, #48]	; 0x30
 8a4:	bl	0 <coda_type_get_class_name>
 8a8:	mov	r2, r0
 8ac:	mvn	r0, #99	; 0x63
 8b0:	ldr	r1, [pc, #508]	; ab4 <coda_tree_node_add_item_for_path+0x46c>
 8b4:	str	r2, [sp]
 8b8:	mov	r3, r6
 8bc:	mov	r2, r7
 8c0:	bl	0 <coda_set_error>
 8c4:	add	r8, r7, #1
 8c8:	mov	r7, r8
 8cc:	ldrb	ip, [r6, r7]
 8d0:	cmp	ip, #0
 8d4:	beq	8ec <coda_tree_node_add_item_for_path+0x2a4>
 8d8:	ldrb	ip, [r6, r7]
 8dc:	cmp	ip, #93	; 0x5d
 8e0:	movne	r3, #1
 8e4:	moveq	r3, #0
 8e8:	b	8f0 <coda_tree_node_add_item_for_path+0x2a8>
 8ec:	mov	r3, #0
 8f0:	cmp	r3, #0
 8f4:	beq	900 <coda_tree_node_add_item_for_path+0x2b8>
 8f8:	add	r7, r7, #1
 8fc:	b	8cc <coda_tree_node_add_item_for_path+0x284>
 900:	ldrb	ip, [r6, r7]
 904:	cmp	ip, #0
 908:	bne	924 <coda_tree_node_add_item_for_path+0x2dc>
 90c:	mvn	r0, #99	; 0x63
 910:	ldr	r1, [pc, #396]	; aa4 <coda_tree_node_add_item_for_path+0x45c>
 914:	mov	r2, r6
 918:	bl	0 <coda_set_error>
 91c:	mvn	r0, #0
 920:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 924:	cmp	r8, r7
 928:	beq	9ac <coda_tree_node_add_item_for_path+0x364>
 92c:	add	r0, r6, r8
 930:	ldr	r1, [pc, #356]	; a9c <coda_tree_node_add_item_for_path+0x454>
 934:	add	r2, sp, #52	; 0x34
 938:	add	r3, sp, #40	; 0x28
 93c:	bl	0 <sscanf>
 940:	cmp	r0, #1
 944:	bne	960 <coda_tree_node_add_item_for_path+0x318>
 948:	ldr	r1, [sp, #40]	; 0x28
 94c:	sub	ip, r7, r8
 950:	cmp	r1, ip
 954:	movne	ip, #1
 958:	moveq	ip, #0
 95c:	b	964 <coda_tree_node_add_item_for_path+0x31c>
 960:	mov	ip, #1
 964:	cmp	ip, #0
 968:	beq	988 <coda_tree_node_add_item_for_path+0x340>
 96c:	mvn	r0, #99	; 0x63
 970:	ldr	r1, [pc, #312]	; ab0 <coda_tree_node_add_item_for_path+0x468>
 974:	sub	r2, r7, r8
 978:	add	r3, r6, r8
 97c:	bl	0 <coda_set_error>
 980:	mvn	r0, #0
 984:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 988:	ldr	r0, [sp, #44]	; 0x2c
 98c:	ldr	r1, [sp, #52]	; 0x34
 990:	add	r2, sp, #44	; 0x2c
 994:	mov	r3, #1
 998:	bl	368 <tree_node_get_node_for_index>
 99c:	cmp	r0, #0
 9a0:	beq	9cc <coda_tree_node_add_item_for_path+0x384>
 9a4:	mvn	r0, #0
 9a8:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 9ac:	ldr	r0, [sp, #44]	; 0x2c
 9b0:	add	r1, sp, #44	; 0x2c
 9b4:	mov	r2, #1
 9b8:	bl	248 <tree_node_get_node_for_all>
 9bc:	cmp	r0, #0
 9c0:	beq	9cc <coda_tree_node_add_item_for_path+0x384>
 9c4:	mvn	r0, #0
 9c8:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 9cc:	add	r7, r7, #1
 9d0:	b	70c <coda_tree_node_add_item_for_path+0xc4>
 9d4:	ldr	r0, [sp, #44]	; 0x2c
 9d8:	mvn	r1, #0
 9dc:	add	r2, sp, #44	; 0x2c
 9e0:	mov	r3, #1
 9e4:	bl	368 <tree_node_get_node_for_index>
 9e8:	cmp	r0, #0
 9ec:	beq	9f8 <coda_tree_node_add_item_for_path+0x3b0>
 9f0:	mvn	r0, #0
 9f4:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 9f8:	add	r7, r7, #1
 9fc:	b	70c <coda_tree_node_add_item_for_path+0xc4>
 a00:	ldr	r0, [sp, #44]	; 0x2c
 a04:	ldr	r0, [r0]
 a08:	add	r1, sp, #48	; 0x30
 a0c:	bl	0 <coda_type_get_class>
 a10:	cmp	r5, #0
 a14:	beq	a4c <coda_tree_node_add_item_for_path+0x404>
 a18:	ldr	r0, [sp, #48]	; 0x30
 a1c:	cmp	r0, #1
 a20:	beq	a44 <coda_tree_node_add_item_for_path+0x3fc>
 a24:	ldr	r3, [sp, #48]	; 0x30
 a28:	cmp	r3, #0
 a2c:	moveq	r0, #1
 a30:	movne	r0, #0
 a34:	cmp	r0, #0
 a38:	movne	r2, #1
 a3c:	moveq	r2, #0
 a40:	b	a50 <coda_tree_node_add_item_for_path+0x408>
 a44:	mov	r2, #1
 a48:	b	a50 <coda_tree_node_add_item_for_path+0x408>
 a4c:	mov	r2, #0
 a50:	cmp	r2, #0
 a54:	beq	a70 <coda_tree_node_add_item_for_path+0x428>
 a58:	mvn	r0, #99	; 0x63
 a5c:	ldr	r1, [pc, #60]	; aa0 <coda_tree_node_add_item_for_path+0x458>
 a60:	mov	r2, r6
 a64:	bl	0 <coda_set_error>
 a68:	mvn	r0, #0
 a6c:	b	a7c <coda_tree_node_add_item_for_path+0x434>
 a70:	ldr	r0, [sp, #44]	; 0x2c
 a74:	mov	r1, r4
 a78:	bl	1a4 <tree_node_add_item>
 a7c:	ldr	r4, [sp, #16]
 a80:	ldr	r5, [sp, #20]
 a84:	ldr	r6, [sp, #24]
 a88:	ldr	r7, [sp, #28]
 a8c:	ldr	r8, [sp, #32]
 a90:	ldr	lr, [sp, #8]
 a94:	add	sp, sp, #64	; 0x40
 a98:	bx	lr
 a9c:	.word	0x000000a6
 aa0:	.word	0x000000cb
 aa4:	.word	0x00000065
 aa8:	.word	0x00000023
 aac:	.word	0x00000085
 ab0:	.word	0x00000000
 ab4:	.word	0x00000044

00000ab8 <get_item_for_cursor>:
 ab8:	mov	ip, sp
 abc:	sub	sp, sp, #32
 ac0:	str	ip, [sp]
 ac4:	str	lr, [sp, #4]
 ac8:	str	r4, [sp, #8]
 acc:	str	r5, [sp, #12]
 ad0:	str	r6, [sp, #16]
 ad4:	str	r7, [sp, #20]
 ad8:	str	r8, [sp, #24]
 adc:	str	r9, [sp, #28]
 ae0:	mov	r4, r3
 ae4:	mov	r5, r2
 ae8:	mov	r6, r1
 aec:	mov	r7, r0
 af0:	cmp	r7, #0
 af4:	bne	b08 <get_item_for_cursor+0x50>
 af8:	mov	r0, #0
 afc:	str	r0, [r4]
 b00:	mov	r0, #0
 b04:	b	c44 <get_item_for_cursor+0x18c>
 b08:	ldr	r1, [r5, #4]
 b0c:	sub	r2, r1, #1
 b10:	cmp	r6, r2
 b14:	bge	c08 <get_item_for_cursor+0x150>
 b18:	ldr	r2, [r7, #16]
 b1c:	cmp	r2, #0
 b20:	ble	bc8 <get_item_for_cursor+0x110>
 b24:	mov	r8, #0
 b28:	ldr	r3, [r7, #16]
 b2c:	sub	r1, r3, #1
 b30:	lsl	r2, r6, #4
 b34:	add	r3, r5, r2
 b38:	ldr	r9, [r3, #28]
 b3c:	cmp	r1, r8
 b40:	beq	b80 <get_item_for_cursor+0xc8>
 b44:	add	ip, r8, r1
 b48:	asr	lr, ip, #31
 b4c:	add	lr, ip, lr, lsr #31
 b50:	asr	r0, lr, #1
 b54:	ldr	r2, [r7, #20]
 b58:	ldr	ip, [r2, r0, lsl #2]
 b5c:	cmp	r9, ip
 b60:	bgt	b68 <get_item_for_cursor+0xb0>
 b64:	mov	r1, r0
 b68:	ldr	r2, [r7, #20]
 b6c:	ldr	r2, [r2, r0, lsl #2]
 b70:	cmp	r9, r2
 b74:	ble	b3c <get_item_for_cursor+0x84>
 b78:	add	r8, r0, #1
 b7c:	b	b3c <get_item_for_cursor+0x84>
 b80:	ldr	r0, [r7, #20]
 b84:	ldr	r3, [r0, r1, lsl #2]
 b88:	cmp	r9, r3
 b8c:	bne	bc8 <get_item_for_cursor+0x110>
 b90:	ldr	r2, [r7, #24]
 b94:	ldr	r0, [r2, r1, lsl #2]
 b98:	add	r1, r6, #1
 b9c:	mov	r3, r4
 ba0:	mov	r2, r5
 ba4:	bl	ab8 <get_item_for_cursor>
 ba8:	cmp	r0, #0
 bac:	beq	bb8 <get_item_for_cursor+0x100>
 bb0:	mvn	r0, #0
 bb4:	b	c44 <get_item_for_cursor+0x18c>
 bb8:	cmp	r4, #0
 bbc:	beq	bc8 <get_item_for_cursor+0x110>
 bc0:	mov	r0, #0
 bc4:	b	c44 <get_item_for_cursor+0x18c>
 bc8:	ldr	r0, [r7, #12]
 bcc:	cmp	r0, #0
 bd0:	beq	c38 <get_item_for_cursor+0x180>
 bd4:	ldr	r0, [r7, #12]
 bd8:	add	r1, r6, #1
 bdc:	mov	r3, r4
 be0:	mov	r2, r5
 be4:	bl	ab8 <get_item_for_cursor>
 be8:	cmp	r0, #0
 bec:	beq	bf8 <get_item_for_cursor+0x140>
 bf0:	mvn	r0, #0
 bf4:	b	c44 <get_item_for_cursor+0x18c>
 bf8:	cmp	r4, #0
 bfc:	beq	c38 <get_item_for_cursor+0x180>
 c00:	mov	r0, #0
 c04:	b	c44 <get_item_for_cursor+0x18c>
 c08:	ldr	r2, [r7, #4]
 c0c:	cmp	r2, #0
 c10:	ble	c38 <get_item_for_cursor+0x180>
 c14:	ldr	r2, [r7, #8]
 c18:	ldr	ip, [r7, #4]
 c1c:	lsl	ip, ip, #2
 c20:	add	r1, r2, ip
 c24:	sub	lr, r1, #4096	; 0x1000
 c28:	ldr	r3, [lr, #4092]	; 0xffc
 c2c:	str	r3, [r4]
 c30:	mov	r0, #0
 c34:	b	c44 <get_item_for_cursor+0x18c>
 c38:	mov	r3, #0
 c3c:	str	r3, [r4]
 c40:	mov	r0, #0
 c44:	ldr	r4, [sp, #8]
 c48:	ldr	r5, [sp, #12]
 c4c:	ldr	r6, [sp, #16]
 c50:	ldr	r7, [sp, #20]
 c54:	ldr	r8, [sp, #24]
 c58:	ldr	r9, [sp, #28]
 c5c:	ldr	lr, [sp, #4]
 c60:	add	sp, sp, #32
 c64:	bx	lr

00000c68 <coda_tree_node_get_item_for_cursor>:
 c68:	mov	ip, sp
 c6c:	sub	sp, sp, #8
 c70:	str	ip, [sp]
 c74:	str	lr, [sp, #4]
 c78:	mov	r3, r2
 c7c:	mov	r2, r1
 c80:	mov	r1, #0
 c84:	bl	ab8 <get_item_for_cursor>
 c88:	ldr	lr, [sp, #4]
 c8c:	add	sp, sp, #8
 c90:	bx	lr
