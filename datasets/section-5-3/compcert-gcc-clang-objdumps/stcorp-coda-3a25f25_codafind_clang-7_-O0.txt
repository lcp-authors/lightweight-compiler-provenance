
../compcert-repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

000108f4 <.init>:
   108f4:	push	{r3, lr}
   108f8:	bl	10a1c <_start@@Base+0x3c>
   108fc:	pop	{r3, pc}

Disassembly of section .plt:

00010900 <coda_match_filefilter@plt-0x14>:
   10900:	push	{lr}		; (str lr, [sp, #-4]!)
   10904:	ldr	lr, [pc, #4]	; 10910 <coda_match_filefilter@plt-0x4>
   10908:	add	lr, pc, lr
   1090c:	ldr	pc, [lr, #8]!
   10910:	strdeq	r1, [r1], -r0

00010914 <coda_match_filefilter@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010920 <strcmp@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1768]!	; 0x6e8

0001092c <printf@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1760]!	; 0x6e0

00010938 <coda_set_definition_path_conditional@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1752]!	; 0x6d8

00010944 <coda_set_definition_path@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010950 <coda_done@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1736]!	; 0x6c8

0001095c <__libc_start_main@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1728]!	; 0x6c0

00010968 <__gmon_start__@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1720]!	; 0x6b8

00010974 <exit@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1712]!	; 0x6b0

00010980 <fprintf@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1704]!	; 0x6a8

0001098c <coda_init@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1696]!	; 0x6a0

00010998 <coda_set_option_perform_conversions@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1688]!	; 0x698

000109a4 <coda_errno_to_string@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1680]!	; 0x690

000109b0 <coda_get_libcoda_version@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1672]!	; 0x688

000109bc <coda_get_errno@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1664]!	; 0x680

000109c8 <abort@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1656]!	; 0x678

000109d4 <__assert_fail@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1648]!	; 0x670

Disassembly of section .text:

000109e0 <_start@@Base>:
   109e0:	mov	fp, #0
   109e4:	mov	lr, #0
   109e8:	pop	{r1}		; (ldr r1, [sp], #4)
   109ec:	mov	r2, sp
   109f0:	push	{r2}		; (str r2, [sp, #-4]!)
   109f4:	push	{r0}		; (str r0, [sp, #-4]!)
   109f8:	ldr	ip, [pc, #16]	; 10a10 <_start@@Base+0x30>
   109fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10a00:	ldr	r0, [pc, #12]	; 10a14 <_start@@Base+0x34>
   10a04:	ldr	r3, [pc, #12]	; 10a18 <_start@@Base+0x38>
   10a08:	bl	1095c <__libc_start_main@plt>
   10a0c:	bl	109c8 <abort@plt>
   10a10:	andeq	r1, r1, r4, lsr #8
   10a14:	andeq	r0, r1, ip, ror ip
   10a18:	andeq	r1, r1, r4, asr #7
   10a1c:	ldr	r3, [pc, #20]	; 10a38 <_start@@Base+0x58>
   10a20:	ldr	r2, [pc, #20]	; 10a3c <_start@@Base+0x5c>
   10a24:	add	r3, pc, r3
   10a28:	ldr	r2, [r3, r2]
   10a2c:	cmp	r2, #0
   10a30:	bxeq	lr
   10a34:	b	10968 <__gmon_start__@plt>
   10a38:	ldrdeq	r1, [r1], -r4
   10a3c:	andeq	r0, r0, r0, asr r0
   10a40:	ldr	r0, [pc, #24]	; 10a60 <_start@@Base+0x80>
   10a44:	ldr	r3, [pc, #24]	; 10a64 <_start@@Base+0x84>
   10a48:	cmp	r3, r0
   10a4c:	bxeq	lr
   10a50:	ldr	r3, [pc, #16]	; 10a68 <_start@@Base+0x88>
   10a54:	cmp	r3, #0
   10a58:	bxeq	lr
   10a5c:	bx	r3
   10a60:	andeq	r2, r2, ip, asr r0
   10a64:	andeq	r2, r2, ip, asr r0
   10a68:	andeq	r0, r0, r0
   10a6c:	ldr	r0, [pc, #36]	; 10a98 <_start@@Base+0xb8>
   10a70:	ldr	r1, [pc, #36]	; 10a9c <_start@@Base+0xbc>
   10a74:	sub	r1, r1, r0
   10a78:	asr	r1, r1, #2
   10a7c:	add	r1, r1, r1, lsr #31
   10a80:	asrs	r1, r1, #1
   10a84:	bxeq	lr
   10a88:	ldr	r3, [pc, #16]	; 10aa0 <_start@@Base+0xc0>
   10a8c:	cmp	r3, #0
   10a90:	bxeq	lr
   10a94:	bx	r3
   10a98:	andeq	r2, r2, ip, asr r0
   10a9c:	andeq	r2, r2, ip, asr r0
   10aa0:	andeq	r0, r0, r0
   10aa4:	push	{r4, lr}
   10aa8:	ldr	r4, [pc, #24]	; 10ac8 <_start@@Base+0xe8>
   10aac:	ldrb	r3, [r4]
   10ab0:	cmp	r3, #0
   10ab4:	popne	{r4, pc}
   10ab8:	bl	10a40 <_start@@Base+0x60>
   10abc:	mov	r3, #1
   10ac0:	strb	r3, [r4]
   10ac4:	pop	{r4, pc}
   10ac8:	andeq	r2, r2, r4, rrx
   10acc:	b	10a6c <_start@@Base+0x8c>

00010ad0 <callback@@Base>:
   10ad0:	push	{fp, lr}
   10ad4:	mov	fp, sp
   10ad8:	sub	sp, sp, #56	; 0x38
   10adc:	str	r0, [fp, #-4]
   10ae0:	str	r1, [fp, #-8]
   10ae4:	str	r2, [fp, #-12]
   10ae8:	str	r3, [fp, #-16]
   10aec:	ldr	r0, [fp, #-8]
   10af0:	cmp	r0, #0
   10af4:	bne	10b20 <callback@@Base+0x50>
   10af8:	movw	r0, #8288	; 0x2060
   10afc:	movt	r0, #2
   10b00:	ldr	r0, [r0]
   10b04:	ldr	r2, [fp, #-4]
   10b08:	ldr	r3, [fp, #-12]
   10b0c:	movw	r1, #5172	; 0x1434
   10b10:	movt	r1, #1
   10b14:	bl	10980 <fprintf@plt>
   10b18:	str	r0, [fp, #-20]	; 0xffffffec
   10b1c:	b	10c70 <callback@@Base+0x1a0>
   10b20:	ldr	r0, [fp, #-8]
   10b24:	cmp	r0, #2
   10b28:	bne	10b50 <callback@@Base+0x80>
   10b2c:	movw	r0, #8288	; 0x2060
   10b30:	movt	r0, #2
   10b34:	ldr	r0, [r0]
   10b38:	ldr	r2, [fp, #-4]
   10b3c:	movw	r1, #5180	; 0x143c
   10b40:	movt	r1, #1
   10b44:	bl	10980 <fprintf@plt>
   10b48:	str	r0, [fp, #-24]	; 0xffffffe8
   10b4c:	b	10c6c <callback@@Base+0x19c>
   10b50:	ldr	r0, [fp, #-8]
   10b54:	cmp	r0, #1
   10b58:	bne	10b84 <callback@@Base+0xb4>
   10b5c:	movw	r0, #8288	; 0x2060
   10b60:	movt	r0, #2
   10b64:	ldr	r0, [r0]
   10b68:	ldr	r2, [fp, #-4]
   10b6c:	ldr	r3, [fp, #-12]
   10b70:	movw	r1, #5212	; 0x145c
   10b74:	movt	r1, #1
   10b78:	bl	10980 <fprintf@plt>
   10b7c:	str	r0, [sp, #28]
   10b80:	b	10c68 <callback@@Base+0x198>
   10b84:	movw	r0, #8296	; 0x2068
   10b88:	movt	r0, #2
   10b8c:	ldr	r0, [r0]
   10b90:	cmp	r0, #0
   10b94:	beq	10c40 <callback@@Base+0x170>
   10b98:	ldr	r1, [fp, #-4]
   10b9c:	movw	r0, #5242	; 0x147a
   10ba0:	movt	r0, #1
   10ba4:	bl	1092c <printf@plt>
   10ba8:	ldr	r1, [fp, #-8]
   10bac:	cmp	r1, #5
   10bb0:	str	r0, [sp, #24]
   10bb4:	str	r1, [sp, #20]
   10bb8:	bhi	10c3c <callback@@Base+0x16c>
   10bbc:	add	r0, pc, #8
   10bc0:	ldr	r1, [sp, #20]
   10bc4:	ldr	r0, [r0, r1, lsl #2]
   10bc8:	mov	pc, r0
   10bcc:	andeq	r0, r1, r4, ror #23
   10bd0:	andeq	r0, r1, r4, ror #23
   10bd4:	andeq	r0, r1, r4, ror #23
   10bd8:	andeq	r0, r1, r4, lsl #24
   10bdc:	andeq	r0, r1, ip, lsr #24
   10be0:	andeq	r0, r1, r8, lsl ip
   10be4:	movw	r0, #5249	; 0x1481
   10be8:	movt	r0, #1
   10bec:	movw	r1, #5251	; 0x1483
   10bf0:	movt	r1, #1
   10bf4:	movw	r2, #110	; 0x6e
   10bf8:	movw	r3, #5329	; 0x14d1
   10bfc:	movt	r3, #1
   10c00:	bl	109d4 <__assert_fail@plt>
   10c04:	movw	r0, #5402	; 0x151a
   10c08:	movt	r0, #1
   10c0c:	bl	1092c <printf@plt>
   10c10:	str	r0, [sp, #16]
   10c14:	b	10c3c <callback@@Base+0x16c>
   10c18:	movw	r0, #5423	; 0x152f
   10c1c:	movt	r0, #1
   10c20:	bl	1092c <printf@plt>
   10c24:	str	r0, [sp, #12]
   10c28:	b	10c3c <callback@@Base+0x16c>
   10c2c:	movw	r0, #5426	; 0x1532
   10c30:	movt	r0, #1
   10c34:	bl	1092c <printf@plt>
   10c38:	str	r0, [sp, #8]
   10c3c:	b	10c64 <callback@@Base+0x194>
   10c40:	ldr	r0, [fp, #-8]
   10c44:	cmp	r0, #4
   10c48:	bne	10c60 <callback@@Base+0x190>
   10c4c:	ldr	r1, [fp, #-4]
   10c50:	movw	r0, #5492	; 0x1574
   10c54:	movt	r0, #1
   10c58:	bl	1092c <printf@plt>
   10c5c:	str	r0, [sp, #4]
   10c60:	b	10c64 <callback@@Base+0x194>
   10c64:	b	10c68 <callback@@Base+0x198>
   10c68:	b	10c6c <callback@@Base+0x19c>
   10c6c:	b	10c70 <callback@@Base+0x1a0>
   10c70:	movw	r0, #0
   10c74:	mov	sp, fp
   10c78:	pop	{fp, pc}

00010c7c <main@@Base>:
   10c7c:	push	{fp, lr}
   10c80:	mov	fp, sp
   10c84:	sub	sp, sp, #88	; 0x58
   10c88:	movw	r2, #0
   10c8c:	str	r2, [fp, #-4]
   10c90:	str	r0, [fp, #-8]
   10c94:	str	r1, [fp, #-12]
   10c98:	str	r2, [fp, #-16]
   10c9c:	movw	r0, #8296	; 0x2068
   10ca0:	movt	r0, #2
   10ca4:	str	r2, [r0]
   10ca8:	movw	r0, #1
   10cac:	str	r0, [fp, #-20]	; 0xffffffec
   10cb0:	ldr	r0, [fp, #-8]
   10cb4:	cmp	r0, #1
   10cb8:	beq	10cf4 <main@@Base+0x78>
   10cbc:	ldr	r0, [fp, #-12]
   10cc0:	ldr	r0, [r0, #4]
   10cc4:	movw	r1, #5433	; 0x1539
   10cc8:	movt	r1, #1
   10ccc:	bl	10920 <strcmp@plt>
   10cd0:	cmp	r0, #0
   10cd4:	beq	10cf4 <main@@Base+0x78>
   10cd8:	ldr	r0, [fp, #-12]
   10cdc:	ldr	r0, [r0, #4]
   10ce0:	movw	r1, #5436	; 0x153c
   10ce4:	movt	r1, #1
   10ce8:	bl	10920 <strcmp@plt>
   10cec:	cmp	r0, #0
   10cf0:	bne	10d00 <main@@Base+0x84>
   10cf4:	bl	11114 <main@@Base+0x498>
   10cf8:	movw	r0, #0
   10cfc:	bl	10974 <exit@plt>
   10d00:	ldr	r0, [fp, #-12]
   10d04:	ldr	r0, [r0, #4]
   10d08:	movw	r1, #5443	; 0x1543
   10d0c:	movt	r1, #1
   10d10:	bl	10920 <strcmp@plt>
   10d14:	cmp	r0, #0
   10d18:	beq	10d38 <main@@Base+0xbc>
   10d1c:	ldr	r0, [fp, #-12]
   10d20:	ldr	r0, [r0, #4]
   10d24:	movw	r1, #5446	; 0x1546
   10d28:	movt	r1, #1
   10d2c:	bl	10920 <strcmp@plt>
   10d30:	cmp	r0, #0
   10d34:	bne	10d44 <main@@Base+0xc8>
   10d38:	bl	11368 <main@@Base+0x6ec>
   10d3c:	movw	r0, #0
   10d40:	bl	10974 <exit@plt>
   10d44:	movw	r0, #1
   10d48:	str	r0, [fp, #-24]	; 0xffffffe8
   10d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d50:	add	r0, r0, #1
   10d54:	ldr	r1, [fp, #-8]
   10d58:	cmp	r0, r1
   10d5c:	bge	10db0 <main@@Base+0x134>
   10d60:	ldr	r0, [fp, #-12]
   10d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d68:	add	r0, r0, r1, lsl #2
   10d6c:	ldr	r0, [r0]
   10d70:	movw	r1, #5456	; 0x1550
   10d74:	movt	r1, #1
   10d78:	bl	10920 <strcmp@plt>
   10d7c:	cmp	r0, #0
   10d80:	bne	10db0 <main@@Base+0x134>
   10d84:	ldr	r0, [fp, #-12]
   10d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d8c:	add	r1, r1, #1
   10d90:	add	r0, r0, r1, lsl #2
   10d94:	ldr	r0, [r0]
   10d98:	bl	10944 <coda_set_definition_path@plt>
   10d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10da0:	add	r1, r1, #2
   10da4:	str	r1, [fp, #-24]	; 0xffffffe8
   10da8:	str	r0, [fp, #-32]	; 0xffffffe0
   10dac:	b	10e24 <main@@Base+0x1a8>
   10db0:	movw	r0, #5459	; 0x1553
   10db4:	movt	r0, #1
   10db8:	str	r0, [fp, #-28]	; 0xffffffe4
   10dbc:	ldr	r0, [fp, #-12]
   10dc0:	ldr	r0, [r0]
   10dc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10dc8:	movw	r1, #0
   10dcc:	bl	10938 <coda_set_definition_path_conditional@plt>
   10dd0:	cmp	r0, #0
   10dd4:	beq	10e20 <main@@Base+0x1a4>
   10dd8:	movw	r0, #8288	; 0x2060
   10ddc:	movt	r0, #2
   10de0:	ldr	r0, [r0]
   10de4:	str	r0, [fp, #-36]	; 0xffffffdc
   10de8:	bl	109bc <coda_get_errno@plt>
   10dec:	ldr	r0, [r0]
   10df0:	bl	109a4 <coda_errno_to_string@plt>
   10df4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   10df8:	str	r0, [fp, #-40]	; 0xffffffd8
   10dfc:	mov	r0, lr
   10e00:	movw	r1, #5485	; 0x156d
   10e04:	movt	r1, #1
   10e08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e0c:	bl	10980 <fprintf@plt>
   10e10:	movw	r1, #1
   10e14:	str	r0, [sp, #44]	; 0x2c
   10e18:	mov	r0, r1
   10e1c:	bl	10974 <exit@plt>
   10e20:	b	10e24 <main@@Base+0x1a8>
   10e24:	b	10e28 <main@@Base+0x1ac>
   10e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e2c:	ldr	r1, [fp, #-8]
   10e30:	cmp	r0, r1
   10e34:	bge	10fec <main@@Base+0x370>
   10e38:	ldr	r0, [fp, #-12]
   10e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e40:	add	r0, r0, r1, lsl #2
   10e44:	ldr	r0, [r0]
   10e48:	movw	r1, #5496	; 0x1578
   10e4c:	movt	r1, #1
   10e50:	bl	10920 <strcmp@plt>
   10e54:	cmp	r0, #0
   10e58:	beq	10e80 <main@@Base+0x204>
   10e5c:	ldr	r0, [fp, #-12]
   10e60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e64:	add	r0, r0, r1, lsl #2
   10e68:	ldr	r0, [r0]
   10e6c:	movw	r1, #5499	; 0x157b
   10e70:	movt	r1, #1
   10e74:	bl	10920 <strcmp@plt>
   10e78:	cmp	r0, #0
   10e7c:	bne	10e8c <main@@Base+0x210>
   10e80:	movw	r0, #0
   10e84:	str	r0, [fp, #-20]	; 0xffffffec
   10e88:	b	10fdc <main@@Base+0x360>
   10e8c:	ldr	r0, [fp, #-12]
   10e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e94:	add	r0, r0, r1, lsl #2
   10e98:	ldr	r0, [r0]
   10e9c:	movw	r1, #5521	; 0x1591
   10ea0:	movt	r1, #1
   10ea4:	bl	10920 <strcmp@plt>
   10ea8:	cmp	r0, #0
   10eac:	beq	10ed4 <main@@Base+0x258>
   10eb0:	ldr	r0, [fp, #-12]
   10eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10eb8:	add	r0, r0, r1, lsl #2
   10ebc:	ldr	r0, [r0]
   10ec0:	movw	r1, #5524	; 0x1594
   10ec4:	movt	r1, #1
   10ec8:	bl	10920 <strcmp@plt>
   10ecc:	cmp	r0, #0
   10ed0:	bne	10f30 <main@@Base+0x2b4>
   10ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ed8:	add	r0, r0, #1
   10edc:	ldr	r1, [fp, #-8]
   10ee0:	cmp	r0, r1
   10ee4:	bge	10f30 <main@@Base+0x2b4>
   10ee8:	ldr	r0, [fp, #-12]
   10eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10ef0:	add	r1, r1, #1
   10ef4:	add	r0, r0, r1, lsl #2
   10ef8:	ldr	r0, [r0]
   10efc:	ldrb	r0, [r0]
   10f00:	cmp	r0, #45	; 0x2d
   10f04:	beq	10f30 <main@@Base+0x2b4>
   10f08:	ldr	r0, [fp, #-12]
   10f0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f10:	add	r1, r1, #1
   10f14:	add	r0, r0, r1, lsl #2
   10f18:	ldr	r0, [r0]
   10f1c:	str	r0, [fp, #-16]
   10f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f24:	add	r0, r0, #1
   10f28:	str	r0, [fp, #-24]	; 0xffffffe8
   10f2c:	b	10fd8 <main@@Base+0x35c>
   10f30:	ldr	r0, [fp, #-12]
   10f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f38:	add	r0, r0, r1, lsl #2
   10f3c:	ldr	r0, [r0]
   10f40:	movw	r1, #5533	; 0x159d
   10f44:	movt	r1, #1
   10f48:	bl	10920 <strcmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	beq	10f78 <main@@Base+0x2fc>
   10f54:	ldr	r0, [fp, #-12]
   10f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f5c:	add	r0, r0, r1, lsl #2
   10f60:	ldr	r0, [r0]
   10f64:	movw	r1, #5536	; 0x15a0
   10f68:	movt	r1, #1
   10f6c:	bl	10920 <strcmp@plt>
   10f70:	cmp	r0, #0
   10f74:	bne	10f8c <main@@Base+0x310>
   10f78:	movw	r0, #8296	; 0x2068
   10f7c:	movt	r0, #2
   10f80:	movw	r1, #1
   10f84:	str	r1, [r0]
   10f88:	b	10fd4 <main@@Base+0x358>
   10f8c:	ldr	r0, [fp, #-12]
   10f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f94:	add	r0, r0, r1, lsl #2
   10f98:	ldr	r0, [r0]
   10f9c:	ldrb	r0, [r0]
   10fa0:	cmp	r0, #45	; 0x2d
   10fa4:	beq	10fac <main@@Base+0x330>
   10fa8:	b	10fec <main@@Base+0x370>
   10fac:	movw	r0, #8288	; 0x2060
   10fb0:	movt	r0, #2
   10fb4:	ldr	r0, [r0]
   10fb8:	movw	r1, #5548	; 0x15ac
   10fbc:	movt	r1, #1
   10fc0:	bl	10980 <fprintf@plt>
   10fc4:	str	r0, [sp, #40]	; 0x28
   10fc8:	bl	11114 <main@@Base+0x498>
   10fcc:	movw	r0, #1
   10fd0:	bl	10974 <exit@plt>
   10fd4:	b	10fd8 <main@@Base+0x35c>
   10fd8:	b	10fdc <main@@Base+0x360>
   10fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10fe0:	add	r0, r0, #1
   10fe4:	str	r0, [fp, #-24]	; 0xffffffe8
   10fe8:	b	10e28 <main@@Base+0x1ac>
   10fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ff0:	ldr	r1, [fp, #-8]
   10ff4:	cmp	r0, r1
   10ff8:	bne	11024 <main@@Base+0x3a8>
   10ffc:	movw	r0, #8288	; 0x2060
   11000:	movt	r0, #2
   11004:	ldr	r0, [r0]
   11008:	movw	r1, #5548	; 0x15ac
   1100c:	movt	r1, #1
   11010:	bl	10980 <fprintf@plt>
   11014:	str	r0, [sp, #36]	; 0x24
   11018:	bl	11114 <main@@Base+0x498>
   1101c:	movw	r0, #1
   11020:	bl	10974 <exit@plt>
   11024:	bl	1098c <coda_init@plt>
   11028:	cmp	r0, #0
   1102c:	beq	11078 <main@@Base+0x3fc>
   11030:	movw	r0, #8288	; 0x2060
   11034:	movt	r0, #2
   11038:	ldr	r0, [r0]
   1103c:	str	r0, [sp, #32]
   11040:	bl	109bc <coda_get_errno@plt>
   11044:	ldr	r0, [r0]
   11048:	bl	109a4 <coda_errno_to_string@plt>
   1104c:	ldr	lr, [sp, #32]
   11050:	str	r0, [sp, #28]
   11054:	mov	r0, lr
   11058:	movw	r1, #5485	; 0x156d
   1105c:	movt	r1, #1
   11060:	ldr	r2, [sp, #28]
   11064:	bl	10980 <fprintf@plt>
   11068:	movw	r1, #1
   1106c:	str	r0, [sp, #24]
   11070:	mov	r0, r1
   11074:	bl	10974 <exit@plt>
   11078:	ldr	r0, [fp, #-20]	; 0xffffffec
   1107c:	bl	10998 <coda_set_option_perform_conversions@plt>
   11080:	ldr	lr, [fp, #-16]
   11084:	ldr	r1, [fp, #-8]
   11088:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1108c:	sub	r1, r1, r2
   11090:	ldr	r3, [fp, #-12]
   11094:	add	r2, r3, r2, lsl #2
   11098:	str	r0, [sp, #20]
   1109c:	mov	r0, lr
   110a0:	movw	r3, #2768	; 0xad0
   110a4:	movt	r3, #1
   110a8:	movw	lr, #0
   110ac:	str	lr, [sp]
   110b0:	bl	10914 <coda_match_filefilter@plt>
   110b4:	cmp	r0, #0
   110b8:	beq	11104 <main@@Base+0x488>
   110bc:	movw	r0, #8288	; 0x2060
   110c0:	movt	r0, #2
   110c4:	ldr	r0, [r0]
   110c8:	str	r0, [sp, #16]
   110cc:	bl	109bc <coda_get_errno@plt>
   110d0:	ldr	r0, [r0]
   110d4:	bl	109a4 <coda_errno_to_string@plt>
   110d8:	ldr	lr, [sp, #16]
   110dc:	str	r0, [sp, #12]
   110e0:	mov	r0, lr
   110e4:	movw	r1, #5485	; 0x156d
   110e8:	movt	r1, #1
   110ec:	ldr	r2, [sp, #12]
   110f0:	bl	10980 <fprintf@plt>
   110f4:	movw	r1, #1
   110f8:	str	r0, [sp, #8]
   110fc:	mov	r0, r1
   11100:	bl	10974 <exit@plt>
   11104:	bl	10950 <coda_done@plt>
   11108:	movw	r0, #0
   1110c:	mov	sp, fp
   11110:	pop	{fp, pc}
   11114:	push	{fp, lr}
   11118:	mov	fp, sp
   1111c:	sub	sp, sp, #120	; 0x78
   11120:	movw	r0, #5574	; 0x15c6
   11124:	movt	r0, #1
   11128:	bl	1092c <printf@plt>
   1112c:	movw	lr, #5582	; 0x15ce
   11130:	movt	lr, #1
   11134:	str	r0, [fp, #-4]
   11138:	mov	r0, lr
   1113c:	bl	1092c <printf@plt>
   11140:	movw	lr, #5648	; 0x1610
   11144:	movt	lr, #1
   11148:	str	r0, [fp, #-8]
   1114c:	mov	r0, lr
   11150:	bl	1092c <printf@plt>
   11154:	movw	lr, #5728	; 0x1660
   11158:	movt	lr, #1
   1115c:	str	r0, [fp, #-12]
   11160:	mov	r0, lr
   11164:	bl	1092c <printf@plt>
   11168:	movw	lr, #6410	; 0x190a
   1116c:	movt	lr, #1
   11170:	str	r0, [fp, #-16]
   11174:	mov	r0, lr
   11178:	bl	1092c <printf@plt>
   1117c:	movw	lr, #5752	; 0x1678
   11180:	movt	lr, #1
   11184:	str	r0, [fp, #-20]	; 0xffffffec
   11188:	mov	r0, lr
   1118c:	bl	1092c <printf@plt>
   11190:	movw	lr, #5770	; 0x168a
   11194:	movt	lr, #1
   11198:	str	r0, [fp, #-24]	; 0xffffffe8
   1119c:	mov	r0, lr
   111a0:	bl	1092c <printf@plt>
   111a4:	movw	lr, #5809	; 0x16b1
   111a8:	movt	lr, #1
   111ac:	str	r0, [fp, #-28]	; 0xffffffe4
   111b0:	mov	r0, lr
   111b4:	bl	1092c <printf@plt>
   111b8:	movw	lr, #5868	; 0x16ec
   111bc:	movt	lr, #1
   111c0:	str	r0, [fp, #-32]	; 0xffffffe0
   111c4:	mov	r0, lr
   111c8:	bl	1092c <printf@plt>
   111cc:	movw	lr, #5916	; 0x171c
   111d0:	movt	lr, #1
   111d4:	str	r0, [fp, #-36]	; 0xffffffdc
   111d8:	mov	r0, lr
   111dc:	bl	1092c <printf@plt>
   111e0:	movw	lr, #5989	; 0x1765
   111e4:	movt	lr, #1
   111e8:	str	r0, [fp, #-40]	; 0xffffffd8
   111ec:	mov	r0, lr
   111f0:	bl	1092c <printf@plt>
   111f4:	movw	lr, #6069	; 0x17b5
   111f8:	movt	lr, #1
   111fc:	str	r0, [fp, #-44]	; 0xffffffd4
   11200:	mov	r0, lr
   11204:	bl	1092c <printf@plt>
   11208:	movw	lr, #6114	; 0x17e2
   1120c:	movt	lr, #1
   11210:	str	r0, [fp, #-48]	; 0xffffffd0
   11214:	mov	r0, lr
   11218:	bl	1092c <printf@plt>
   1121c:	movw	lr, #6141	; 0x17fd
   11220:	movt	lr, #1
   11224:	str	r0, [fp, #-52]	; 0xffffffcc
   11228:	mov	r0, lr
   1122c:	bl	1092c <printf@plt>
   11230:	movw	lr, #6410	; 0x190a
   11234:	movt	lr, #1
   11238:	str	r0, [fp, #-56]	; 0xffffffc8
   1123c:	mov	r0, lr
   11240:	bl	1092c <printf@plt>
   11244:	movw	lr, #6198	; 0x1836
   11248:	movt	lr, #1
   1124c:	str	r0, [sp, #60]	; 0x3c
   11250:	mov	r0, lr
   11254:	bl	1092c <printf@plt>
   11258:	movw	lr, #6223	; 0x184f
   1125c:	movt	lr, #1
   11260:	str	r0, [sp, #56]	; 0x38
   11264:	mov	r0, lr
   11268:	bl	1092c <printf@plt>
   1126c:	movw	lr, #6410	; 0x190a
   11270:	movt	lr, #1
   11274:	str	r0, [sp, #52]	; 0x34
   11278:	mov	r0, lr
   1127c:	bl	1092c <printf@plt>
   11280:	movw	lr, #6254	; 0x186e
   11284:	movt	lr, #1
   11288:	str	r0, [sp, #48]	; 0x30
   1128c:	mov	r0, lr
   11290:	bl	1092c <printf@plt>
   11294:	movw	lr, #6282	; 0x188a
   11298:	movt	lr, #1
   1129c:	str	r0, [sp, #44]	; 0x2c
   112a0:	mov	r0, lr
   112a4:	bl	1092c <printf@plt>
   112a8:	movw	lr, #6410	; 0x190a
   112ac:	movt	lr, #1
   112b0:	str	r0, [sp, #40]	; 0x28
   112b4:	mov	r0, lr
   112b8:	bl	1092c <printf@plt>
   112bc:	movw	lr, #6333	; 0x18bd
   112c0:	movt	lr, #1
   112c4:	str	r0, [sp, #36]	; 0x24
   112c8:	mov	r0, lr
   112cc:	bl	1092c <printf@plt>
   112d0:	movw	lr, #6412	; 0x190c
   112d4:	movt	lr, #1
   112d8:	str	r0, [sp, #32]
   112dc:	mov	r0, lr
   112e0:	bl	1092c <printf@plt>
   112e4:	movw	lr, #6486	; 0x1956
   112e8:	movt	lr, #1
   112ec:	str	r0, [sp, #28]
   112f0:	mov	r0, lr
   112f4:	bl	1092c <printf@plt>
   112f8:	movw	lr, #6530	; 0x1982
   112fc:	movt	lr, #1
   11300:	str	r0, [sp, #24]
   11304:	mov	r0, lr
   11308:	bl	1092c <printf@plt>
   1130c:	movw	lr, #6607	; 0x19cf
   11310:	movt	lr, #1
   11314:	str	r0, [sp, #20]
   11318:	mov	r0, lr
   1131c:	bl	1092c <printf@plt>
   11320:	movw	lr, #6678	; 0x1a16
   11324:	movt	lr, #1
   11328:	str	r0, [sp, #16]
   1132c:	mov	r0, lr
   11330:	bl	1092c <printf@plt>
   11334:	movw	lr, #6742	; 0x1a56
   11338:	movt	lr, #1
   1133c:	str	r0, [sp, #12]
   11340:	mov	r0, lr
   11344:	bl	1092c <printf@plt>
   11348:	movw	lr, #6410	; 0x190a
   1134c:	movt	lr, #1
   11350:	str	r0, [sp, #8]
   11354:	mov	r0, lr
   11358:	bl	1092c <printf@plt>
   1135c:	str	r0, [sp, #4]
   11360:	mov	sp, fp
   11364:	pop	{fp, pc}
   11368:	push	{fp, lr}
   1136c:	mov	fp, sp
   11370:	sub	sp, sp, #16
   11374:	bl	109b0 <coda_get_libcoda_version@plt>
   11378:	movw	lr, #6807	; 0x1a97
   1137c:	movt	lr, #1
   11380:	str	r0, [fp, #-4]
   11384:	mov	r0, lr
   11388:	ldr	r1, [fp, #-4]
   1138c:	bl	1092c <printf@plt>
   11390:	movw	r1, #6820	; 0x1aa4
   11394:	movt	r1, #1
   11398:	str	r0, [sp, #8]
   1139c:	mov	r0, r1
   113a0:	bl	1092c <printf@plt>
   113a4:	movw	r1, #6410	; 0x190a
   113a8:	movt	r1, #1
   113ac:	str	r0, [sp, #4]
   113b0:	mov	r0, r1
   113b4:	bl	1092c <printf@plt>
   113b8:	str	r0, [sp]
   113bc:	mov	sp, fp
   113c0:	pop	{fp, pc}

000113c4 <__libc_csu_init@@Base>:
   113c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113c8:	mov	r7, r0
   113cc:	ldr	r6, [pc, #72]	; 1141c <__libc_csu_init@@Base+0x58>
   113d0:	ldr	r5, [pc, #72]	; 11420 <__libc_csu_init@@Base+0x5c>
   113d4:	add	r6, pc, r6
   113d8:	add	r5, pc, r5
   113dc:	sub	r6, r6, r5
   113e0:	mov	r8, r1
   113e4:	mov	r9, r2
   113e8:	bl	108f4 <coda_match_filefilter@plt-0x20>
   113ec:	asrs	r6, r6, #2
   113f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113f4:	mov	r4, #0
   113f8:	add	r4, r4, #1
   113fc:	ldr	r3, [r5], #4
   11400:	mov	r2, r9
   11404:	mov	r1, r8
   11408:	mov	r0, r7
   1140c:	blx	r3
   11410:	cmp	r6, r4
   11414:	bne	113f8 <__libc_csu_init@@Base+0x34>
   11418:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1141c:	andeq	r0, r1, r8, lsl fp
   11420:	andeq	r0, r1, r0, lsl fp

00011424 <__libc_csu_fini@@Base>:
   11424:	bx	lr

Disassembly of section .fini:

00011428 <.fini>:
   11428:	push	{r3, lr}
   1142c:	pop	{r3, pc}
