
../compcert-repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010978 <.init>:
   10978:	push	{r3, lr}
   1097c:	bl	10aac <_start@@Base+0x3c>
   10980:	pop	{r3, pc}

Disassembly of section .plt:

00010984 <calloc@plt-0x14>:
   10984:	push	{lr}		; (str lr, [sp, #-4]!)
   10988:	ldr	lr, [pc, #4]	; 10994 <calloc@plt-0x4>
   1098c:	add	lr, pc, lr
   10990:	ldr	pc, [lr, #8]!
   10994:	andeq	r1, r1, ip, ror #12

00010998 <calloc@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1644]!	; 0x66c

000109a4 <strcmp@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1636]!	; 0x664

000109b0 <printf@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1628]!	; 0x65c

000109bc <free@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1620]!	; 0x654

000109c8 <fgets@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1612]!	; 0x64c

000109d4 <time@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1604]!	; 0x644

000109e0 <realloc@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1596]!	; 0x63c

000109ec <strcat@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1588]!	; 0x634

000109f8 <strcpy@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1580]!	; 0x62c

00010a04 <puts@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1572]!	; 0x624

00010a10 <malloc@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1564]!	; 0x61c

00010a1c <__libc_start_main@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1556]!	; 0x614

00010a28 <__gmon_start__@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1548]!	; 0x60c

00010a34 <strlen@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1540]!	; 0x604

00010a40 <srand@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a4c <rand@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a58 <__isoc99_scanf@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a64 <abort@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1508]!	; 0x5e4

Disassembly of section .text:

00010a70 <_start@@Base>:
   10a70:	mov	fp, #0
   10a74:	mov	lr, #0
   10a78:	pop	{r1}		; (ldr r1, [sp], #4)
   10a7c:	mov	r2, sp
   10a80:	push	{r2}		; (str r2, [sp, #-4]!)
   10a84:	push	{r0}		; (str r0, [sp, #-4]!)
   10a88:	ldr	ip, [pc, #16]	; 10aa0 <_start@@Base+0x30>
   10a8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a90:	ldr	r0, [pc, #12]	; 10aa4 <_start@@Base+0x34>
   10a94:	ldr	r3, [pc, #12]	; 10aa8 <_start@@Base+0x38>
   10a98:	bl	10a1c <__libc_start_main@plt>
   10a9c:	bl	10a64 <abort@plt>
   10aa0:	andeq	r1, r1, r4, asr #16
   10aa4:	andeq	r0, r1, r0, ror #23
   10aa8:	andeq	r1, r1, r4, ror #15
   10aac:	ldr	r3, [pc, #20]	; 10ac8 <_start@@Base+0x58>
   10ab0:	ldr	r2, [pc, #20]	; 10acc <_start@@Base+0x5c>
   10ab4:	add	r3, pc, r3
   10ab8:	ldr	r2, [r3, r2]
   10abc:	cmp	r2, #0
   10ac0:	bxeq	lr
   10ac4:	b	10a28 <__gmon_start__@plt>
   10ac8:	andeq	r1, r1, r4, asr #10
   10acc:	andeq	r0, r0, r4, asr r0
   10ad0:	ldr	r0, [pc, #24]	; 10af0 <_start@@Base+0x80>
   10ad4:	ldr	r3, [pc, #24]	; 10af4 <_start@@Base+0x84>
   10ad8:	cmp	r3, r0
   10adc:	bxeq	lr
   10ae0:	ldr	r3, [pc, #16]	; 10af8 <_start@@Base+0x88>
   10ae4:	cmp	r3, #0
   10ae8:	bxeq	lr
   10aec:	bx	r3
   10af0:	andeq	r2, r2, r0, rrx
   10af4:	andeq	r2, r2, r0, rrx
   10af8:	andeq	r0, r0, r0
   10afc:	ldr	r0, [pc, #36]	; 10b28 <_start@@Base+0xb8>
   10b00:	ldr	r1, [pc, #36]	; 10b2c <_start@@Base+0xbc>
   10b04:	sub	r1, r1, r0
   10b08:	asr	r1, r1, #2
   10b0c:	add	r1, r1, r1, lsr #31
   10b10:	asrs	r1, r1, #1
   10b14:	bxeq	lr
   10b18:	ldr	r3, [pc, #16]	; 10b30 <_start@@Base+0xc0>
   10b1c:	cmp	r3, #0
   10b20:	bxeq	lr
   10b24:	bx	r3
   10b28:	andeq	r2, r2, r0, rrx
   10b2c:	andeq	r2, r2, r0, rrx
   10b30:	andeq	r0, r0, r0
   10b34:	push	{r4, lr}
   10b38:	ldr	r4, [pc, #24]	; 10b58 <_start@@Base+0xe8>
   10b3c:	ldrb	r3, [r4]
   10b40:	cmp	r3, #0
   10b44:	popne	{r4, pc}
   10b48:	bl	10ad0 <_start@@Base+0x60>
   10b4c:	mov	r3, #1
   10b50:	strb	r3, [r4]
   10b54:	pop	{r4, pc}
   10b58:	andeq	r2, r2, r4, rrx
   10b5c:	b	10afc <_start@@Base+0x8c>

00010b60 <imprime@@Base>:
   10b60:	str	r4, [sp, #-12]!
   10b64:	str	fp, [sp, #4]
   10b68:	str	lr, [sp, #8]
   10b6c:	add	fp, sp, #8
   10b70:	sub	sp, sp, #20
   10b74:	str	r0, [fp, #-24]	; 0xffffffe8
   10b78:	mov	r3, #0
   10b7c:	str	r3, [fp, #-16]
   10b80:	b	10bbc <imprime@@Base+0x5c>
   10b84:	ldr	r3, [fp, #-16]
   10b88:	add	r4, r3, #1
   10b8c:	ldr	r1, [fp, #-16]
   10b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b94:	bl	10fc8 <vetor_elemento@@Base>
   10b98:	mov	r3, r0
   10b9c:	mov	r2, r3
   10ba0:	mov	r1, r4
   10ba4:	movw	r0, #6228	; 0x1854
   10ba8:	movt	r0, #1
   10bac:	bl	109b0 <printf@plt>
   10bb0:	ldr	r3, [fp, #-16]
   10bb4:	add	r3, r3, #1
   10bb8:	str	r3, [fp, #-16]
   10bbc:	ldr	r3, [fp, #-16]
   10bc0:	cmp	r3, #4
   10bc4:	ble	10b84 <imprime@@Base+0x24>
   10bc8:	nop	{0}
   10bcc:	sub	sp, fp, #8
   10bd0:	ldr	r4, [sp]
   10bd4:	ldr	fp, [sp, #4]
   10bd8:	add	sp, sp, #8
   10bdc:	pop	{pc}		; (ldr pc, [sp], #4)

00010be0 <main@@Base>:
   10be0:	str	fp, [sp, #-8]!
   10be4:	str	lr, [sp, #4]
   10be8:	add	fp, sp, #4
   10bec:	sub	sp, sp, #112	; 0x70
   10bf0:	bl	10d48 <vetor_novo@@Base>
   10bf4:	str	r0, [fp, #-12]
   10bf8:	mov	r3, #0
   10bfc:	str	r3, [fp, #-8]
   10c00:	b	10c7c <main@@Base+0x9c>
   10c04:	ldr	r3, [fp, #-8]
   10c08:	add	r3, r3, #1
   10c0c:	mov	r1, r3
   10c10:	movw	r0, #6260	; 0x1874
   10c14:	movt	r0, #1
   10c18:	bl	109b0 <printf@plt>
   10c1c:	movw	r3, #8288	; 0x2060
   10c20:	movt	r3, #2
   10c24:	ldr	r2, [r3]
   10c28:	sub	r3, fp, #112	; 0x70
   10c2c:	mov	r1, #100	; 0x64
   10c30:	mov	r0, r3
   10c34:	bl	109c8 <fgets@plt>
   10c38:	sub	r3, fp, #112	; 0x70
   10c3c:	mov	r0, r3
   10c40:	bl	10a34 <strlen@plt>
   10c44:	mov	r3, r0
   10c48:	sub	r3, r3, #1
   10c4c:	sub	r2, fp, #4
   10c50:	add	r3, r2, r3
   10c54:	mov	r2, #0
   10c58:	strb	r2, [r3, #-108]	; 0xffffff94
   10c5c:	sub	r3, fp, #112	; 0x70
   10c60:	ldr	r2, [fp, #-8]
   10c64:	mov	r1, r3
   10c68:	ldr	r0, [fp, #-12]
   10c6c:	bl	11038 <vetor_insere@@Base>
   10c70:	ldr	r3, [fp, #-8]
   10c74:	add	r3, r3, #1
   10c78:	str	r3, [fp, #-8]
   10c7c:	ldr	r3, [fp, #-8]
   10c80:	cmp	r3, #4
   10c84:	ble	10c04 <main@@Base+0x24>
   10c88:	ldr	r0, [fp, #-12]
   10c8c:	bl	10b60 <imprime@@Base>
   10c90:	movw	r0, #6280	; 0x1888
   10c94:	movt	r0, #1
   10c98:	bl	109b0 <printf@plt>
   10c9c:	sub	r3, fp, #112	; 0x70
   10ca0:	mov	r1, r3
   10ca4:	movw	r0, #6312	; 0x18a8
   10ca8:	movt	r0, #1
   10cac:	bl	10a58 <__isoc99_scanf@plt>
   10cb0:	sub	r3, fp, #112	; 0x70
   10cb4:	mov	r1, r3
   10cb8:	ldr	r0, [fp, #-12]
   10cbc:	bl	1132c <vetor_pesquisa@@Base>
   10cc0:	mov	r3, r0
   10cc4:	mov	r1, r3
   10cc8:	ldr	r0, [fp, #-12]
   10ccc:	bl	11230 <vetor_remove@@Base>
   10cd0:	mov	r3, r0
   10cd4:	cmp	r3, #0
   10cd8:	beq	10cec <main@@Base+0x10c>
   10cdc:	movw	r0, #6316	; 0x18ac
   10ce0:	movt	r0, #1
   10ce4:	bl	10a04 <puts@plt>
   10ce8:	b	10cf4 <main@@Base+0x114>
   10cec:	ldr	r0, [fp, #-12]
   10cf0:	bl	10b60 <imprime@@Base>
   10cf4:	ldr	r0, [fp, #-12]
   10cf8:	bl	113d4 <vetor_ordena@@Base>
   10cfc:	mov	r3, r0
   10d00:	cmp	r3, #0
   10d04:	beq	10d14 <main@@Base+0x134>
   10d08:	movw	r0, #6340	; 0x18c4
   10d0c:	movt	r0, #1
   10d10:	bl	109b0 <printf@plt>
   10d14:	movw	r0, #6376	; 0x18e8
   10d18:	movt	r0, #1
   10d1c:	bl	10a04 <puts@plt>
   10d20:	ldr	r0, [fp, #-12]
   10d24:	bl	10b60 <imprime@@Base>
   10d28:	ldr	r0, [fp, #-12]
   10d2c:	bl	10db8 <vetor_apaga@@Base>
   10d30:	mov	r3, #0
   10d34:	mov	r0, r3
   10d38:	sub	sp, fp, #4
   10d3c:	ldr	fp, [sp]
   10d40:	add	sp, sp, #4
   10d44:	pop	{pc}		; (ldr pc, [sp], #4)

00010d48 <vetor_novo@@Base>:
   10d48:	str	fp, [sp, #-8]!
   10d4c:	str	lr, [sp, #4]
   10d50:	add	fp, sp, #4
   10d54:	sub	sp, sp, #8
   10d58:	mov	r0, #12
   10d5c:	bl	10a10 <malloc@plt>
   10d60:	mov	r3, r0
   10d64:	str	r3, [fp, #-8]
   10d68:	ldr	r3, [fp, #-8]
   10d6c:	cmp	r3, #0
   10d70:	bne	10d7c <vetor_novo@@Base+0x34>
   10d74:	mov	r3, #0
   10d78:	b	10da4 <vetor_novo@@Base+0x5c>
   10d7c:	ldr	r3, [fp, #-8]
   10d80:	mov	r2, #0
   10d84:	str	r2, [r3]
   10d88:	ldr	r3, [fp, #-8]
   10d8c:	mov	r2, #0
   10d90:	str	r2, [r3, #4]
   10d94:	ldr	r3, [fp, #-8]
   10d98:	mov	r2, #0
   10d9c:	str	r2, [r3, #8]
   10da0:	ldr	r3, [fp, #-8]
   10da4:	mov	r0, r3
   10da8:	sub	sp, fp, #4
   10dac:	ldr	fp, [sp]
   10db0:	add	sp, sp, #4
   10db4:	pop	{pc}		; (ldr pc, [sp], #4)

00010db8 <vetor_apaga@@Base>:
   10db8:	str	fp, [sp, #-8]!
   10dbc:	str	lr, [sp, #4]
   10dc0:	add	fp, sp, #4
   10dc4:	sub	sp, sp, #16
   10dc8:	str	r0, [fp, #-16]
   10dcc:	ldr	r3, [fp, #-16]
   10dd0:	cmp	r3, #0
   10dd4:	beq	10e40 <vetor_apaga@@Base+0x88>
   10dd8:	mov	r3, #0
   10ddc:	str	r3, [fp, #-8]
   10de0:	b	10e10 <vetor_apaga@@Base+0x58>
   10de4:	ldr	r3, [fp, #-16]
   10de8:	ldr	r2, [r3, #8]
   10dec:	ldr	r3, [fp, #-8]
   10df0:	lsl	r3, r3, #2
   10df4:	add	r3, r2, r3
   10df8:	ldr	r3, [r3]
   10dfc:	mov	r0, r3
   10e00:	bl	109bc <free@plt>
   10e04:	ldr	r3, [fp, #-8]
   10e08:	add	r3, r3, #1
   10e0c:	str	r3, [fp, #-8]
   10e10:	ldr	r3, [fp, #-16]
   10e14:	ldr	r3, [r3]
   10e18:	ldr	r2, [fp, #-8]
   10e1c:	cmp	r2, r3
   10e20:	blt	10de4 <vetor_apaga@@Base+0x2c>
   10e24:	ldr	r3, [fp, #-16]
   10e28:	ldr	r3, [r3, #8]
   10e2c:	mov	r0, r3
   10e30:	bl	109bc <free@plt>
   10e34:	ldr	r0, [fp, #-16]
   10e38:	bl	109bc <free@plt>
   10e3c:	b	10e44 <vetor_apaga@@Base+0x8c>
   10e40:	nop	{0}
   10e44:	sub	sp, fp, #4
   10e48:	ldr	fp, [sp]
   10e4c:	add	sp, sp, #4
   10e50:	pop	{pc}		; (ldr pc, [sp], #4)

00010e54 <vetor_atribui@@Base>:
   10e54:	str	r4, [sp, #-12]!
   10e58:	str	fp, [sp, #4]
   10e5c:	str	lr, [sp, #8]
   10e60:	add	fp, sp, #8
   10e64:	sub	sp, sp, #28
   10e68:	str	r0, [fp, #-24]	; 0xffffffe8
   10e6c:	str	r1, [fp, #-28]	; 0xffffffe4
   10e70:	str	r2, [fp, #-32]	; 0xffffffe0
   10e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e78:	cmp	r3, #0
   10e7c:	beq	10ea0 <vetor_atribui@@Base+0x4c>
   10e80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e84:	cmp	r3, #0
   10e88:	blt	10ea0 <vetor_atribui@@Base+0x4c>
   10e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e90:	ldr	r3, [r3]
   10e94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10e98:	cmp	r2, r3
   10e9c:	blt	10ea8 <vetor_atribui@@Base+0x54>
   10ea0:	mvn	r3, #0
   10ea4:	b	10f74 <vetor_atribui@@Base+0x120>
   10ea8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10eac:	bl	10a34 <strlen@plt>
   10eb0:	str	r0, [fp, #-16]
   10eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10eb8:	ldr	r2, [r3, #8]
   10ebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ec0:	lsl	r3, r3, #2
   10ec4:	add	r3, r2, r3
   10ec8:	ldr	r3, [r3]
   10ecc:	mov	r0, r3
   10ed0:	bl	10a34 <strlen@plt>
   10ed4:	mov	r2, r0
   10ed8:	ldr	r3, [fp, #-16]
   10edc:	cmp	r3, r2
   10ee0:	bls	10f4c <vetor_atribui@@Base+0xf8>
   10ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ee8:	ldr	r2, [r3, #8]
   10eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ef0:	lsl	r3, r3, #2
   10ef4:	add	r3, r2, r3
   10ef8:	ldr	r0, [r3]
   10efc:	ldr	r3, [fp, #-16]
   10f00:	add	r1, r3, #1
   10f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f08:	ldr	r2, [r3, #8]
   10f0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f10:	lsl	r3, r3, #2
   10f14:	add	r4, r2, r3
   10f18:	bl	109e0 <realloc@plt>
   10f1c:	mov	r3, r0
   10f20:	str	r3, [r4]
   10f24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f28:	ldr	r2, [r3, #8]
   10f2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f30:	lsl	r3, r3, #2
   10f34:	add	r3, r2, r3
   10f38:	ldr	r3, [r3]
   10f3c:	cmp	r3, #0
   10f40:	bne	10f4c <vetor_atribui@@Base+0xf8>
   10f44:	mvn	r3, #0
   10f48:	b	10f74 <vetor_atribui@@Base+0x120>
   10f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f50:	ldr	r2, [r3, #8]
   10f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f58:	lsl	r3, r3, #2
   10f5c:	add	r3, r2, r3
   10f60:	ldr	r3, [r3]
   10f64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10f68:	mov	r0, r3
   10f6c:	bl	109f8 <strcpy@plt>
   10f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f74:	mov	r0, r3
   10f78:	sub	sp, fp, #8
   10f7c:	ldr	r4, [sp]
   10f80:	ldr	fp, [sp, #4]
   10f84:	add	sp, sp, #8
   10f88:	pop	{pc}		; (ldr pc, [sp], #4)

00010f8c <vetor_tamanho@@Base>:
   10f8c:	push	{fp}		; (str fp, [sp, #-4]!)
   10f90:	add	fp, sp, #0
   10f94:	sub	sp, sp, #12
   10f98:	str	r0, [fp, #-8]
   10f9c:	ldr	r3, [fp, #-8]
   10fa0:	cmp	r3, #0
   10fa4:	bne	10fb0 <vetor_tamanho@@Base+0x24>
   10fa8:	mvn	r3, #0
   10fac:	b	10fb8 <vetor_tamanho@@Base+0x2c>
   10fb0:	ldr	r3, [fp, #-8]
   10fb4:	ldr	r3, [r3]
   10fb8:	mov	r0, r3
   10fbc:	add	sp, fp, #0
   10fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   10fc4:	bx	lr

00010fc8 <vetor_elemento@@Base>:
   10fc8:	push	{fp}		; (str fp, [sp, #-4]!)
   10fcc:	add	fp, sp, #0
   10fd0:	sub	sp, sp, #12
   10fd4:	str	r0, [fp, #-8]
   10fd8:	str	r1, [fp, #-12]
   10fdc:	ldr	r3, [fp, #-8]
   10fe0:	cmp	r3, #0
   10fe4:	beq	11008 <vetor_elemento@@Base+0x40>
   10fe8:	ldr	r3, [fp, #-12]
   10fec:	cmp	r3, #0
   10ff0:	blt	11008 <vetor_elemento@@Base+0x40>
   10ff4:	ldr	r3, [fp, #-8]
   10ff8:	ldr	r3, [r3]
   10ffc:	ldr	r2, [fp, #-12]
   11000:	cmp	r2, r3
   11004:	blt	11010 <vetor_elemento@@Base+0x48>
   11008:	mov	r3, #0
   1100c:	b	11028 <vetor_elemento@@Base+0x60>
   11010:	ldr	r3, [fp, #-8]
   11014:	ldr	r2, [r3, #8]
   11018:	ldr	r3, [fp, #-12]
   1101c:	lsl	r3, r3, #2
   11020:	add	r3, r2, r3
   11024:	ldr	r3, [r3]
   11028:	mov	r0, r3
   1102c:	add	sp, fp, #0
   11030:	pop	{fp}		; (ldr fp, [sp], #4)
   11034:	bx	lr

00011038 <vetor_insere@@Base>:
   11038:	str	r4, [sp, #-12]!
   1103c:	str	fp, [sp, #4]
   11040:	str	lr, [sp, #8]
   11044:	add	fp, sp, #8
   11048:	sub	sp, sp, #28
   1104c:	str	r0, [fp, #-24]	; 0xffffffe8
   11050:	str	r1, [fp, #-28]	; 0xffffffe4
   11054:	str	r2, [fp, #-32]	; 0xffffffe0
   11058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1105c:	cmp	r3, #0
   11060:	beq	11084 <vetor_insere@@Base+0x4c>
   11064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11068:	cmp	r3, #0
   1106c:	blt	11084 <vetor_insere@@Base+0x4c>
   11070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11074:	ldr	r3, [r3]
   11078:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1107c:	cmp	r2, r3
   11080:	ble	1108c <vetor_insere@@Base+0x54>
   11084:	mvn	r3, #0
   11088:	b	11218 <vetor_insere@@Base+0x1e0>
   1108c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11090:	ldr	r2, [r3]
   11094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11098:	ldr	r3, [r3, #4]
   1109c:	cmp	r2, r3
   110a0:	bne	1111c <vetor_insere@@Base+0xe4>
   110a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110a8:	ldr	r3, [r3, #4]
   110ac:	cmp	r3, #0
   110b0:	bne	110c4 <vetor_insere@@Base+0x8c>
   110b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110b8:	mov	r2, #1
   110bc:	str	r2, [r3, #4]
   110c0:	b	110d8 <vetor_insere@@Base+0xa0>
   110c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110c8:	ldr	r3, [r3, #4]
   110cc:	lsl	r2, r3, #1
   110d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110d4:	str	r2, [r3, #4]
   110d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110dc:	ldr	r2, [r3, #8]
   110e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110e4:	ldr	r3, [r3, #4]
   110e8:	lsl	r3, r3, #2
   110ec:	mov	r1, r3
   110f0:	mov	r0, r2
   110f4:	bl	109e0 <realloc@plt>
   110f8:	mov	r2, r0
   110fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11100:	str	r2, [r3, #8]
   11104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11108:	ldr	r3, [r3, #8]
   1110c:	cmp	r3, #0
   11110:	bne	1111c <vetor_insere@@Base+0xe4>
   11114:	mvn	r3, #0
   11118:	b	11218 <vetor_insere@@Base+0x1e0>
   1111c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11120:	ldr	r3, [r3]
   11124:	sub	r3, r3, #1
   11128:	str	r3, [fp, #-16]
   1112c:	b	11170 <vetor_insere@@Base+0x138>
   11130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11134:	ldr	r2, [r3, #8]
   11138:	ldr	r3, [fp, #-16]
   1113c:	lsl	r3, r3, #2
   11140:	add	r2, r2, r3
   11144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11148:	ldr	r1, [r3, #8]
   1114c:	ldr	r3, [fp, #-16]
   11150:	add	r3, r3, #1
   11154:	lsl	r3, r3, #2
   11158:	add	r3, r1, r3
   1115c:	ldr	r2, [r2]
   11160:	str	r2, [r3]
   11164:	ldr	r3, [fp, #-16]
   11168:	sub	r3, r3, #1
   1116c:	str	r3, [fp, #-16]
   11170:	ldr	r2, [fp, #-16]
   11174:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11178:	cmp	r2, r3
   1117c:	bge	11130 <vetor_insere@@Base+0xf8>
   11180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11184:	bl	10a34 <strlen@plt>
   11188:	mov	r3, r0
   1118c:	add	r0, r3, #1
   11190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11194:	ldr	r2, [r3, #8]
   11198:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1119c:	lsl	r3, r3, #2
   111a0:	add	r4, r2, r3
   111a4:	mov	r1, #1
   111a8:	bl	10998 <calloc@plt>
   111ac:	mov	r3, r0
   111b0:	str	r3, [r4]
   111b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111b8:	ldr	r2, [r3, #8]
   111bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111c0:	lsl	r3, r3, #2
   111c4:	add	r3, r2, r3
   111c8:	ldr	r3, [r3]
   111cc:	cmp	r3, #0
   111d0:	bne	111dc <vetor_insere@@Base+0x1a4>
   111d4:	mvn	r3, #0
   111d8:	b	11218 <vetor_insere@@Base+0x1e0>
   111dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111e0:	ldr	r2, [r3, #8]
   111e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111e8:	lsl	r3, r3, #2
   111ec:	add	r3, r2, r3
   111f0:	ldr	r3, [r3]
   111f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   111f8:	mov	r0, r3
   111fc:	bl	109f8 <strcpy@plt>
   11200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11204:	ldr	r3, [r3]
   11208:	add	r2, r3, #1
   1120c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11210:	str	r2, [r3]
   11214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11218:	mov	r0, r3
   1121c:	sub	sp, fp, #8
   11220:	ldr	r4, [sp]
   11224:	ldr	fp, [sp, #4]
   11228:	add	sp, sp, #8
   1122c:	pop	{pc}		; (ldr pc, [sp], #4)

00011230 <vetor_remove@@Base>:
   11230:	str	fp, [sp, #-8]!
   11234:	str	lr, [sp, #4]
   11238:	add	fp, sp, #4
   1123c:	sub	sp, sp, #16
   11240:	str	r0, [fp, #-16]
   11244:	str	r1, [fp, #-20]	; 0xffffffec
   11248:	ldr	r3, [fp, #-16]
   1124c:	cmp	r3, #0
   11250:	beq	11274 <vetor_remove@@Base+0x44>
   11254:	ldr	r3, [fp, #-20]	; 0xffffffec
   11258:	cmp	r3, #0
   1125c:	blt	11274 <vetor_remove@@Base+0x44>
   11260:	ldr	r3, [fp, #-16]
   11264:	ldr	r3, [r3]
   11268:	ldr	r2, [fp, #-20]	; 0xffffffec
   1126c:	cmp	r2, r3
   11270:	blt	1127c <vetor_remove@@Base+0x4c>
   11274:	mvn	r3, #0
   11278:	b	11318 <vetor_remove@@Base+0xe8>
   1127c:	ldr	r3, [fp, #-16]
   11280:	ldr	r2, [r3, #8]
   11284:	ldr	r3, [fp, #-20]	; 0xffffffec
   11288:	lsl	r3, r3, #2
   1128c:	add	r3, r2, r3
   11290:	ldr	r3, [r3]
   11294:	mov	r0, r3
   11298:	bl	109bc <free@plt>
   1129c:	ldr	r3, [fp, #-20]	; 0xffffffec
   112a0:	add	r3, r3, #1
   112a4:	str	r3, [fp, #-8]
   112a8:	b	112ec <vetor_remove@@Base+0xbc>
   112ac:	ldr	r3, [fp, #-16]
   112b0:	ldr	r2, [r3, #8]
   112b4:	ldr	r3, [fp, #-8]
   112b8:	lsl	r3, r3, #2
   112bc:	add	r2, r2, r3
   112c0:	ldr	r3, [fp, #-16]
   112c4:	ldr	r1, [r3, #8]
   112c8:	ldr	r3, [fp, #-8]
   112cc:	sub	r3, r3, #-1073741823	; 0xc0000001
   112d0:	lsl	r3, r3, #2
   112d4:	add	r3, r1, r3
   112d8:	ldr	r2, [r2]
   112dc:	str	r2, [r3]
   112e0:	ldr	r3, [fp, #-8]
   112e4:	add	r3, r3, #1
   112e8:	str	r3, [fp, #-8]
   112ec:	ldr	r3, [fp, #-16]
   112f0:	ldr	r3, [r3]
   112f4:	ldr	r2, [fp, #-8]
   112f8:	cmp	r2, r3
   112fc:	blt	112ac <vetor_remove@@Base+0x7c>
   11300:	ldr	r3, [fp, #-16]
   11304:	ldr	r3, [r3]
   11308:	sub	r2, r3, #1
   1130c:	ldr	r3, [fp, #-16]
   11310:	str	r2, [r3]
   11314:	mov	r3, #0
   11318:	mov	r0, r3
   1131c:	sub	sp, fp, #4
   11320:	ldr	fp, [sp]
   11324:	add	sp, sp, #4
   11328:	pop	{pc}		; (ldr pc, [sp], #4)

0001132c <vetor_pesquisa@@Base>:
   1132c:	str	fp, [sp, #-8]!
   11330:	str	lr, [sp, #4]
   11334:	add	fp, sp, #4
   11338:	sub	sp, sp, #16
   1133c:	str	r0, [fp, #-16]
   11340:	str	r1, [fp, #-20]	; 0xffffffec
   11344:	ldr	r3, [fp, #-16]
   11348:	cmp	r3, #0
   1134c:	bne	11358 <vetor_pesquisa@@Base+0x2c>
   11350:	mvn	r3, #0
   11354:	b	113c0 <vetor_pesquisa@@Base+0x94>
   11358:	mov	r3, #0
   1135c:	str	r3, [fp, #-8]
   11360:	b	113a8 <vetor_pesquisa@@Base+0x7c>
   11364:	ldr	r3, [fp, #-16]
   11368:	ldr	r2, [r3, #8]
   1136c:	ldr	r3, [fp, #-8]
   11370:	lsl	r3, r3, #2
   11374:	add	r3, r2, r3
   11378:	ldr	r3, [r3]
   1137c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11380:	mov	r0, r3
   11384:	bl	109a4 <strcmp@plt>
   11388:	mov	r3, r0
   1138c:	cmp	r3, #0
   11390:	bne	1139c <vetor_pesquisa@@Base+0x70>
   11394:	ldr	r3, [fp, #-8]
   11398:	b	113c0 <vetor_pesquisa@@Base+0x94>
   1139c:	ldr	r3, [fp, #-8]
   113a0:	add	r3, r3, #1
   113a4:	str	r3, [fp, #-8]
   113a8:	ldr	r3, [fp, #-16]
   113ac:	ldr	r3, [r3]
   113b0:	ldr	r2, [fp, #-8]
   113b4:	cmp	r2, r3
   113b8:	blt	11364 <vetor_pesquisa@@Base+0x38>
   113bc:	mvn	r3, #0
   113c0:	mov	r0, r3
   113c4:	sub	sp, fp, #4
   113c8:	ldr	fp, [sp]
   113cc:	add	sp, sp, #4
   113d0:	pop	{pc}		; (ldr pc, [sp], #4)

000113d4 <vetor_ordena@@Base>:
   113d4:	str	fp, [sp, #-8]!
   113d8:	str	lr, [sp, #4]
   113dc:	add	fp, sp, #4
   113e0:	sub	sp, sp, #24
   113e4:	str	r0, [fp, #-24]	; 0xffffffe8
   113e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113ec:	cmp	r3, #0
   113f0:	bne	113fc <vetor_ordena@@Base+0x28>
   113f4:	mvn	r3, #0
   113f8:	b	114f0 <vetor_ordena@@Base+0x11c>
   113fc:	mov	r3, #1
   11400:	str	r3, [fp, #-8]
   11404:	b	114d8 <vetor_ordena@@Base+0x104>
   11408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1140c:	ldr	r2, [r3, #8]
   11410:	ldr	r3, [fp, #-8]
   11414:	lsl	r3, r3, #2
   11418:	add	r3, r2, r3
   1141c:	ldr	r3, [r3]
   11420:	str	r3, [fp, #-16]
   11424:	ldr	r3, [fp, #-8]
   11428:	str	r3, [fp, #-12]
   1142c:	b	11470 <vetor_ordena@@Base+0x9c>
   11430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11434:	ldr	r2, [r3, #8]
   11438:	ldr	r3, [fp, #-12]
   1143c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11440:	lsl	r3, r3, #2
   11444:	add	r2, r2, r3
   11448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1144c:	ldr	r1, [r3, #8]
   11450:	ldr	r3, [fp, #-12]
   11454:	lsl	r3, r3, #2
   11458:	add	r3, r1, r3
   1145c:	ldr	r2, [r2]
   11460:	str	r2, [r3]
   11464:	ldr	r3, [fp, #-12]
   11468:	sub	r3, r3, #1
   1146c:	str	r3, [fp, #-12]
   11470:	ldr	r3, [fp, #-12]
   11474:	cmp	r3, #0
   11478:	ble	114b0 <vetor_ordena@@Base+0xdc>
   1147c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11480:	ldr	r2, [r3, #8]
   11484:	ldr	r3, [fp, #-12]
   11488:	sub	r3, r3, #-1073741823	; 0xc0000001
   1148c:	lsl	r3, r3, #2
   11490:	add	r3, r2, r3
   11494:	ldr	r3, [r3]
   11498:	mov	r1, r3
   1149c:	ldr	r0, [fp, #-16]
   114a0:	bl	109a4 <strcmp@plt>
   114a4:	mov	r3, r0
   114a8:	cmp	r3, #0
   114ac:	blt	11430 <vetor_ordena@@Base+0x5c>
   114b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b4:	ldr	r2, [r3, #8]
   114b8:	ldr	r3, [fp, #-12]
   114bc:	lsl	r3, r3, #2
   114c0:	add	r3, r2, r3
   114c4:	ldr	r2, [fp, #-16]
   114c8:	str	r2, [r3]
   114cc:	ldr	r3, [fp, #-8]
   114d0:	add	r3, r3, #1
   114d4:	str	r3, [fp, #-8]
   114d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114dc:	ldr	r3, [r3]
   114e0:	ldr	r2, [fp, #-8]
   114e4:	cmp	r2, r3
   114e8:	blt	11408 <vetor_ordena@@Base+0x34>
   114ec:	mov	r3, #0
   114f0:	mov	r0, r3
   114f4:	sub	sp, fp, #4
   114f8:	ldr	fp, [sp]
   114fc:	add	sp, sp, #4
   11500:	pop	{pc}		; (ldr pc, [sp], #4)

00011504 <vetor_concatena@@Base>:
   11504:	str	fp, [sp, #-8]!
   11508:	str	lr, [sp, #4]
   1150c:	add	fp, sp, #4
   11510:	sub	sp, sp, #16
   11514:	str	r0, [fp, #-16]
   11518:	str	r1, [fp, #-20]	; 0xffffffec
   1151c:	ldr	r3, [fp, #-16]
   11520:	cmp	r3, #0
   11524:	beq	11534 <vetor_concatena@@Base+0x30>
   11528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1152c:	cmp	r3, #0
   11530:	bne	1153c <vetor_concatena@@Base+0x38>
   11534:	mov	r3, #0
   11538:	b	115d0 <vetor_concatena@@Base+0xcc>
   1153c:	bl	10d48 <vetor_novo@@Base>
   11540:	str	r0, [fp, #-8]
   11544:	ldr	r3, [fp, #-20]	; 0xffffffec
   11548:	ldr	r3, [r3]
   1154c:	lsl	r3, r3, #2
   11550:	ldr	r2, [fp, #-16]
   11554:	ldr	r2, [r2]
   11558:	add	r3, r3, r2
   1155c:	mov	r2, r3
   11560:	ldr	r3, [fp, #-8]
   11564:	str	r2, [r3, #8]
   11568:	ldr	r3, [fp, #-16]
   1156c:	ldr	r2, [r3, #4]
   11570:	ldr	r3, [fp, #-20]	; 0xffffffec
   11574:	ldr	r3, [r3, #4]
   11578:	add	r2, r2, r3
   1157c:	ldr	r3, [fp, #-8]
   11580:	str	r2, [r3, #4]
   11584:	ldr	r3, [fp, #-8]
   11588:	ldr	r3, [r3, #8]
   1158c:	ldr	r2, [r3]
   11590:	ldr	r3, [fp, #-16]
   11594:	ldr	r3, [r3, #8]
   11598:	ldr	r3, [r3]
   1159c:	mov	r1, r3
   115a0:	mov	r0, r2
   115a4:	bl	109f8 <strcpy@plt>
   115a8:	ldr	r3, [fp, #-8]
   115ac:	ldr	r3, [r3, #8]
   115b0:	ldr	r2, [r3]
   115b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   115b8:	ldr	r3, [r3, #8]
   115bc:	ldr	r3, [r3]
   115c0:	mov	r1, r3
   115c4:	mov	r0, r2
   115c8:	bl	109ec <strcat@plt>
   115cc:	ldr	r3, [fp, #-8]
   115d0:	mov	r0, r3
   115d4:	sub	sp, fp, #4
   115d8:	ldr	fp, [sp]
   115dc:	add	sp, sp, #4
   115e0:	pop	{pc}		; (ldr pc, [sp], #4)

000115e4 <vetor_inverte@@Base>:
   115e4:	str	fp, [sp, #-8]!
   115e8:	str	lr, [sp, #4]
   115ec:	add	fp, sp, #4
   115f0:	sub	sp, sp, #24
   115f4:	str	r0, [fp, #-24]	; 0xffffffe8
   115f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115fc:	bl	10f8c <vetor_tamanho@@Base>
   11600:	str	r0, [fp, #-16]
   11604:	ldr	r3, [fp, #-16]
   11608:	str	r3, [fp, #-12]
   1160c:	ldr	r3, [fp, #-16]
   11610:	cmp	r3, #0
   11614:	ble	116c4 <vetor_inverte@@Base+0xe0>
   11618:	mov	r3, #0
   1161c:	str	r3, [fp, #-8]
   11620:	b	116a4 <vetor_inverte@@Base+0xc0>
   11624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11628:	ldr	r2, [r3, #8]
   1162c:	ldr	r3, [fp, #-8]
   11630:	lsl	r3, r3, #2
   11634:	add	r3, r2, r3
   11638:	ldr	r3, [r3]
   1163c:	str	r3, [fp, #-20]	; 0xffffffec
   11640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11644:	ldr	r2, [r3, #8]
   11648:	ldr	r3, [fp, #-12]
   1164c:	lsl	r3, r3, #2
   11650:	add	r2, r2, r3
   11654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11658:	ldr	r1, [r3, #8]
   1165c:	ldr	r3, [fp, #-8]
   11660:	lsl	r3, r3, #2
   11664:	add	r3, r1, r3
   11668:	ldr	r2, [r2]
   1166c:	str	r2, [r3]
   11670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11674:	ldr	r2, [r3, #8]
   11678:	ldr	r3, [fp, #-12]
   1167c:	lsl	r3, r3, #2
   11680:	add	r3, r2, r3
   11684:	ldr	r2, [fp, #-20]	; 0xffffffec
   11688:	str	r2, [r3]
   1168c:	ldr	r3, [fp, #-12]
   11690:	sub	r3, r3, #1
   11694:	str	r3, [fp, #-12]
   11698:	ldr	r3, [fp, #-8]
   1169c:	add	r3, r3, #1
   116a0:	str	r3, [fp, #-8]
   116a4:	ldr	r2, [fp, #-8]
   116a8:	ldr	r3, [fp, #-16]
   116ac:	cmp	r2, r3
   116b0:	bge	116c4 <vetor_inverte@@Base+0xe0>
   116b4:	ldr	r2, [fp, #-8]
   116b8:	ldr	r3, [fp, #-12]
   116bc:	cmp	r2, r3
   116c0:	blt	11624 <vetor_inverte@@Base+0x40>
   116c4:	mov	r3, #0
   116c8:	mov	r0, r3
   116cc:	sub	sp, fp, #4
   116d0:	ldr	fp, [sp]
   116d4:	add	sp, sp, #4
   116d8:	pop	{pc}		; (ldr pc, [sp], #4)

000116dc <vetor_baralha@@Base>:
   116dc:	str	fp, [sp, #-8]!
   116e0:	str	lr, [sp, #4]
   116e4:	add	fp, sp, #4
   116e8:	sub	sp, sp, #32
   116ec:	str	r0, [fp, #-32]	; 0xffffffe0
   116f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   116f4:	ldr	r3, [r3]
   116f8:	str	r3, [fp, #-12]
   116fc:	bl	10d48 <vetor_novo@@Base>
   11700:	str	r0, [fp, #-16]
   11704:	sub	r3, fp, #24
   11708:	mov	r0, r3
   1170c:	bl	109d4 <time@plt>
   11710:	mov	r3, r0
   11714:	mov	r0, r3
   11718:	bl	10a40 <srand@plt>
   1171c:	mov	r3, #0
   11720:	str	r3, [fp, #-8]
   11724:	b	117bc <vetor_baralha@@Base+0xe0>
   11728:	bl	10a4c <rand@plt>
   1172c:	mov	r2, r0
   11730:	ldr	r3, [fp, #-12]
   11734:	add	r3, r3, #1
   11738:	sdiv	r1, r2, r3
   1173c:	mul	r3, r3, r1
   11740:	sub	r3, r2, r3
   11744:	str	r3, [fp, #-20]	; 0xffffffec
   11748:	ldr	r3, [fp, #-16]
   1174c:	ldr	r2, [r3, #8]
   11750:	ldr	r3, [fp, #-8]
   11754:	lsl	r3, r3, #2
   11758:	add	r3, r2, r3
   1175c:	ldr	r3, [r3]
   11760:	str	r3, [fp, #-28]	; 0xffffffe4
   11764:	ldr	r3, [fp, #-16]
   11768:	ldr	r2, [r3, #8]
   1176c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11770:	lsl	r3, r3, #2
   11774:	add	r2, r2, r3
   11778:	ldr	r3, [fp, #-16]
   1177c:	ldr	r1, [r3, #8]
   11780:	ldr	r3, [fp, #-8]
   11784:	lsl	r3, r3, #2
   11788:	add	r3, r1, r3
   1178c:	ldr	r2, [r2]
   11790:	str	r2, [r3]
   11794:	ldr	r3, [fp, #-16]
   11798:	ldr	r2, [r3, #8]
   1179c:	ldr	r3, [fp, #-20]	; 0xffffffec
   117a0:	lsl	r3, r3, #2
   117a4:	add	r3, r2, r3
   117a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   117ac:	str	r2, [r3]
   117b0:	ldr	r3, [fp, #-8]
   117b4:	add	r3, r3, #1
   117b8:	str	r3, [fp, #-8]
   117bc:	ldr	r2, [fp, #-8]
   117c0:	ldr	r3, [fp, #-12]
   117c4:	cmp	r2, r3
   117c8:	blt	11728 <vetor_baralha@@Base+0x4c>
   117cc:	ldr	r3, [fp, #-16]
   117d0:	mov	r0, r3
   117d4:	sub	sp, fp, #4
   117d8:	ldr	fp, [sp]
   117dc:	add	sp, sp, #4
   117e0:	pop	{pc}		; (ldr pc, [sp], #4)

000117e4 <__libc_csu_init@@Base>:
   117e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117e8:	mov	r7, r0
   117ec:	ldr	r6, [pc, #72]	; 1183c <__libc_csu_init@@Base+0x58>
   117f0:	ldr	r5, [pc, #72]	; 11840 <__libc_csu_init@@Base+0x5c>
   117f4:	add	r6, pc, r6
   117f8:	add	r5, pc, r5
   117fc:	sub	r6, r6, r5
   11800:	mov	r8, r1
   11804:	mov	r9, r2
   11808:	bl	10978 <calloc@plt-0x20>
   1180c:	asrs	r6, r6, #2
   11810:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11814:	mov	r4, #0
   11818:	add	r4, r4, #1
   1181c:	ldr	r3, [r5], #4
   11820:	mov	r2, r9
   11824:	mov	r1, r8
   11828:	mov	r0, r7
   1182c:	blx	r3
   11830:	cmp	r6, r4
   11834:	bne	11818 <__libc_csu_init@@Base+0x34>
   11838:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1183c:	andeq	r0, r1, r8, lsl r7
   11840:	andeq	r0, r1, r0, lsl r7

00011844 <__libc_csu_fini@@Base>:
   11844:	bx	lr

Disassembly of section .fini:

00011848 <.fini>:
   11848:	push	{r3, lr}
   1184c:	pop	{r3, pc}
