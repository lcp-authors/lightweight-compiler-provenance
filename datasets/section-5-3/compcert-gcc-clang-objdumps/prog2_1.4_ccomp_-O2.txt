
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

000103e4 <.init>:
   103e4:	push	{r3, lr}
   103e8:	bl	104b8 <getc@plt+0x3c>
   103ec:	pop	{r3, pc}

Disassembly of section .plt:

000103f0 <printf@plt-0x14>:
   103f0:	push	{lr}		; (str lr, [sp, #-4]!)
   103f4:	ldr	lr, [pc, #4]	; 10400 <printf@plt-0x4>
   103f8:	add	lr, pc, lr
   103fc:	ldr	pc, [lr, #8]!
   10400:	andeq	r0, r1, r0, lsl #24

00010404 <printf@plt>:
   10404:	add	ip, pc, #0, 12
   10408:	add	ip, ip, #16, 20	; 0x10000
   1040c:	ldr	pc, [ip, #3072]!	; 0xc00

00010410 <fopen@plt>:
   10410:	add	ip, pc, #0, 12
   10414:	add	ip, ip, #16, 20	; 0x10000
   10418:	ldr	pc, [ip, #3064]!	; 0xbf8

0001041c <free@plt>:
   1041c:	add	ip, pc, #0, 12
   10420:	add	ip, ip, #16, 20	; 0x10000
   10424:	ldr	pc, [ip, #3056]!	; 0xbf0

00010428 <malloc@plt>:
   10428:	add	ip, pc, #0, 12
   1042c:	add	ip, ip, #16, 20	; 0x10000
   10430:	ldr	pc, [ip, #3048]!	; 0xbe8

00010434 <__libc_start_main@plt>:
   10434:	add	ip, pc, #0, 12
   10438:	add	ip, ip, #16, 20	; 0x10000
   1043c:	ldr	pc, [ip, #3040]!	; 0xbe0

00010440 <__gmon_start__@plt>:
   10440:	add	ip, pc, #0, 12
   10444:	add	ip, ip, #16, 20	; 0x10000
   10448:	ldr	pc, [ip, #3032]!	; 0xbd8

0001044c <exit@plt>:
   1044c:	add	ip, pc, #0, 12
   10450:	add	ip, ip, #16, 20	; 0x10000
   10454:	ldr	pc, [ip, #3024]!	; 0xbd0

00010458 <fclose@plt>:
   10458:	add	ip, pc, #0, 12
   1045c:	add	ip, ip, #16, 20	; 0x10000
   10460:	ldr	pc, [ip, #3016]!	; 0xbc8

00010464 <fseek@plt>:
   10464:	add	ip, pc, #0, 12
   10468:	add	ip, ip, #16, 20	; 0x10000
   1046c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010470 <abort@plt>:
   10470:	add	ip, pc, #0, 12
   10474:	add	ip, ip, #16, 20	; 0x10000
   10478:	ldr	pc, [ip, #3000]!	; 0xbb8

0001047c <getc@plt>:
   1047c:	add	ip, pc, #0, 12
   10480:	add	ip, ip, #16, 20	; 0x10000
   10484:	ldr	pc, [ip, #2992]!	; 0xbb0

Disassembly of section .text:

00010488 <.text>:
   10488:	bleq	4c5cc <getc@plt+0x3c150>
   1048c:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10490:	strbtmi	fp, [sl], -r2, lsl #24
   10494:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10498:			; <UNDEFINED> instruction: 0xc010f8df
   1049c:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   104a0:	blmi	1224b4 <getc@plt+0x112038>
   104a4:	svc	0x00c6f7ff
   104a8:	svc	0x00e2f7ff
   104ac:	andeq	r0, r1, r1, lsr #18
   104b0:	muleq	r1, ip, r5
   104b4:	andeq	r0, r1, r1, ror #17
   104b8:	ldr	r3, [pc, #20]	; 104d4 <getc@plt+0x58>
   104bc:	ldr	r2, [pc, #20]	; 104d8 <getc@plt+0x5c>
   104c0:	add	r3, pc, r3
   104c4:	ldr	r2, [r3, r2]
   104c8:	cmp	r2, #0
   104cc:	bxeq	lr
   104d0:	b	10440 <__gmon_start__@plt>
   104d4:	andeq	r0, r1, r8, lsr fp
   104d8:	andeq	r0, r0, r8, lsr r0
   104dc:	subeq	pc, r4, r1, asr #4
   104e0:	andeq	pc, r2, r0, asr #5
   104e4:	movteq	pc, #16961	; 0x4241	; <UNPREDICTABLE>
   104e8:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   104ec:	andle	r4, r5, r3, lsl #5
   104f0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   104f4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   104f8:	ldrmi	fp, [r8, -r3, lsl #2]
   104fc:	svclt	0x00004770
   10500:	subeq	pc, r4, r1, asr #4
   10504:	andeq	pc, r2, r0, asr #5
   10508:	cmpeq	r4, r1, asr #4	; <UNPREDICTABLE>
   1050c:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   10510:	svceq	0x00d91a0b
   10514:			; <UNDEFINED> instruction: 0x01a3eb01
   10518:	andle	r1, r5, r9, asr #32
   1051c:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10520:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10524:	ldrmi	fp, [r8, -r3, lsl #2]
   10528:	svclt	0x00004770
   1052c:	vqrshl.s8	d27, d0, d1
   10530:	vmls.i<illegal width 8>	d16, d0, d0[1]
   10534:	stmdavc	r3!, {r1, sl}
   10538:			; <UNDEFINED> instruction: 0xf7ffb91b
   1053c:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10540:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10544:	svclt	0x0000e7dc
   10548:	mov	ip, sp
   1054c:	sub	sp, sp, #24
   10550:	str	ip, [sp, #8]
   10554:	str	lr, [sp, #12]
   10558:	str	r4, [sp, #16]
   1055c:	ldr	r4, [pc, #52]	; 10598 <getc@plt+0x11c>
   10560:	ldr	ip, [r0, r1, lsl #2]
   10564:	add	r0, r2, r2, lsl #1
   10568:	ldrb	r3, [ip, r0]
   1056c:	add	r0, ip, r0
   10570:	ldrb	ip, [r0, #1]
   10574:	ldrb	r0, [r0, #2]
   10578:	str	r0, [sp, #4]
   1057c:	str	ip, [sp]
   10580:	mov	r0, r4
   10584:	bl	10404 <printf@plt>
   10588:	ldr	r4, [sp, #16]
   1058c:	ldr	lr, [sp, #12]
   10590:	add	sp, sp, #24
   10594:	bx	lr
   10598:	andeq	r0, r1, r5, ror #19
   1059c:	mov	ip, sp
   105a0:	sub	sp, sp, #32
   105a4:	str	ip, [sp]
   105a8:	str	lr, [sp, #4]
   105ac:	str	r4, [sp, #8]
   105b0:	str	r5, [sp, #12]
   105b4:	str	r6, [sp, #16]
   105b8:	str	r7, [sp, #20]
   105bc:	str	r8, [sp, #24]
   105c0:	str	r9, [sp, #28]
   105c4:	ldr	r0, [pc, #764]	; 108c8 <getc@plt+0x44c>
   105c8:	ldr	r1, [pc, #756]	; 108c4 <getc@plt+0x448>
   105cc:	bl	10410 <fopen@plt>
   105d0:	mov	r4, r0
   105d4:	mov	r0, r4
   105d8:	bl	1047c <getc@plt>
   105dc:	cmp	r0, #66	; 0x42
   105e0:	bne	105f4 <getc@plt+0x178>
   105e4:	mov	r0, r4
   105e8:	bl	1047c <getc@plt>
   105ec:	cmp	r0, #77	; 0x4d
   105f0:	beq	10604 <getc@plt+0x188>
   105f4:	ldr	r0, [pc, #732]	; 108d8 <getc@plt+0x45c>
   105f8:	bl	10404 <printf@plt>
   105fc:	mov	r0, #1
   10600:	bl	1044c <exit@plt>
   10604:	mov	r0, r4
   10608:	bl	1047c <getc@plt>
   1060c:	mov	r6, r0
   10610:	mov	r0, r4
   10614:	bl	1047c <getc@plt>
   10618:	mov	r7, r0
   1061c:	mov	r0, r4
   10620:	bl	1047c <getc@plt>
   10624:	mov	r5, r0
   10628:	mov	r0, r4
   1062c:	bl	1047c <getc@plt>
   10630:	orr	r1, r6, r7, lsl #8
   10634:	orr	r3, r1, r5, lsl #16
   10638:	orr	r1, r3, r0, lsl #24
   1063c:	ldr	r0, [pc, #632]	; 108bc <getc@plt+0x440>
   10640:	bl	10404 <printf@plt>
   10644:	mov	r1, #4
   10648:	mov	r2, #1
   1064c:	mov	r0, r4
   10650:	bl	10464 <fseek@plt>
   10654:	mov	r0, r4
   10658:	bl	1047c <getc@plt>
   1065c:	mov	r6, r0
   10660:	mov	r0, r4
   10664:	bl	1047c <getc@plt>
   10668:	mov	r7, r0
   1066c:	mov	r0, r4
   10670:	bl	1047c <getc@plt>
   10674:	mov	r5, r0
   10678:	mov	r0, r4
   1067c:	bl	1047c <getc@plt>
   10680:	orr	r1, r6, r7, lsl #8
   10684:	orr	r3, r1, r5, lsl #16
   10688:	orr	r7, r3, r0, lsl #24
   1068c:	mov	r1, #4
   10690:	mov	r2, #1
   10694:	mov	r0, r4
   10698:	bl	10464 <fseek@plt>
   1069c:	mov	r0, r4
   106a0:	bl	1047c <getc@plt>
   106a4:	mov	r5, r0
   106a8:	mov	r0, r4
   106ac:	bl	1047c <getc@plt>
   106b0:	mov	r8, r0
   106b4:	mov	r0, r4
   106b8:	bl	1047c <getc@plt>
   106bc:	mov	r6, r0
   106c0:	mov	r0, r4
   106c4:	bl	1047c <getc@plt>
   106c8:	orr	r1, r5, r8, lsl #8
   106cc:	orr	r2, r1, r6, lsl #16
   106d0:	orr	r6, r2, r0, lsl #24
   106d4:	ldr	r0, [pc, #512]	; 108dc <getc@plt+0x460>
   106d8:	mov	r1, r6
   106dc:	bl	10404 <printf@plt>
   106e0:	mov	r0, r4
   106e4:	bl	1047c <getc@plt>
   106e8:	mov	r9, r0
   106ec:	mov	r0, r4
   106f0:	bl	1047c <getc@plt>
   106f4:	mov	r5, r0
   106f8:	mov	r0, r4
   106fc:	bl	1047c <getc@plt>
   10700:	mov	r8, r0
   10704:	mov	r0, r4
   10708:	bl	1047c <getc@plt>
   1070c:	orr	r2, r9, r5, lsl #8
   10710:	orr	r2, r2, r8, lsl #16
   10714:	orr	r8, r2, r0, lsl #24
   10718:	ldr	r0, [pc, #436]	; 108d4 <getc@plt+0x458>
   1071c:	mov	r1, r8
   10720:	bl	10404 <printf@plt>
   10724:	mov	r0, r4
   10728:	bl	1047c <getc@plt>
   1072c:	mov	r5, r0
   10730:	mov	r0, r4
   10734:	bl	1047c <getc@plt>
   10738:	orr	ip, r5, r0, lsl #8
   1073c:	cmp	ip, #1
   10740:	beq	10754 <getc@plt+0x2d8>
   10744:	ldr	r0, [pc, #372]	; 108c0 <getc@plt+0x444>
   10748:	bl	10404 <printf@plt>
   1074c:	mov	r0, #2
   10750:	bl	1044c <exit@plt>
   10754:	mov	r0, r4
   10758:	bl	1047c <getc@plt>
   1075c:	mov	r5, r0
   10760:	mov	r0, r4
   10764:	bl	1047c <getc@plt>
   10768:	orr	r5, r5, r0, lsl #8
   1076c:	ldr	r0, [pc, #344]	; 108cc <getc@plt+0x450>
   10770:	mov	r1, r5
   10774:	bl	10404 <printf@plt>
   10778:	cmp	r5, #24
   1077c:	beq	10790 <getc@plt+0x314>
   10780:	ldr	r0, [pc, #328]	; 108d0 <getc@plt+0x454>
   10784:	bl	10404 <printf@plt>
   10788:	mov	r0, #3
   1078c:	bl	1044c <exit@plt>
   10790:	mov	r2, #0
   10794:	mov	r1, r7
   10798:	mov	r0, r4
   1079c:	bl	10464 <fseek@plt>
   107a0:	lsl	r0, r8, #2
   107a4:	bl	10428 <malloc@plt>
   107a8:	mov	r7, r0
   107ac:	mov	r5, #0
   107b0:	cmp	r5, r8
   107b4:	bge	107cc <getc@plt+0x350>
   107b8:	add	r0, r6, r6, lsl #1
   107bc:	bl	10428 <malloc@plt>
   107c0:	str	r0, [r7, r5, lsl #2]
   107c4:	add	r5, r5, #1
   107c8:	b	107b0 <getc@plt+0x334>
   107cc:	sub	r9, r8, #1
   107d0:	cmp	r9, #0
   107d4:	blt	10838 <getc@plt+0x3bc>
   107d8:	mov	r5, #0
   107dc:	cmp	r5, r6
   107e0:	bge	10830 <getc@plt+0x3b4>
   107e4:	mov	r0, r4
   107e8:	bl	1047c <getc@plt>
   107ec:	ldr	r3, [r7, r9, lsl #2]
   107f0:	add	r2, r5, r5, lsl #1
   107f4:	add	ip, r3, r2
   107f8:	strb	r0, [ip, #2]
   107fc:	mov	r0, r4
   10800:	bl	1047c <getc@plt>
   10804:	ldr	ip, [r7, r9, lsl #2]
   10808:	add	r1, r5, r5, lsl #1
   1080c:	add	r1, ip, r1
   10810:	strb	r0, [r1, #1]
   10814:	mov	r0, r4
   10818:	bl	1047c <getc@plt>
   1081c:	ldr	r3, [r7, r9, lsl #2]
   10820:	add	r1, r5, r5, lsl #1
   10824:	strb	r0, [r3, r1]
   10828:	add	r5, r5, #1
   1082c:	b	107dc <getc@plt+0x360>
   10830:	sub	r9, r9, #1
   10834:	b	107d0 <getc@plt+0x354>
   10838:	mov	r0, r4
   1083c:	bl	10458 <fclose@plt>
   10840:	mov	r1, #0
   10844:	mov	r2, #0
   10848:	mov	r0, r7
   1084c:	bl	10548 <getc@plt+0xcc>
   10850:	mov	r1, #532	; 0x214
   10854:	mov	r2, #0
   10858:	mov	r0, r7
   1085c:	bl	10548 <getc@plt+0xcc>
   10860:	mov	r1, #408	; 0x198
   10864:	movw	r2, #443	; 0x1bb
   10868:	mov	r0, r7
   1086c:	bl	10548 <getc@plt+0xcc>
   10870:	mov	r4, #0
   10874:	cmp	r4, r8
   10878:	bge	1088c <getc@plt+0x410>
   1087c:	ldr	r0, [r7, r4, lsl #2]
   10880:	bl	1041c <free@plt>
   10884:	add	r4, r4, #1
   10888:	b	10874 <getc@plt+0x3f8>
   1088c:	mov	r0, r7
   10890:	bl	1041c <free@plt>
   10894:	mov	r0, #0
   10898:	ldr	r4, [sp, #8]
   1089c:	ldr	r5, [sp, #12]
   108a0:	ldr	r6, [sp, #16]
   108a4:	ldr	r7, [sp, #20]
   108a8:	ldr	r8, [sp, #24]
   108ac:	ldr	r9, [sp, #28]
   108b0:	ldr	lr, [sp, #4]
   108b4:	add	sp, sp, #32
   108b8:	bx	lr
   108bc:	andeq	r0, r1, r0, asr #19
   108c0:	andeq	r0, r1, r6, lsr sl
   108c4:	andeq	r0, r1, r3, ror #19
   108c8:	muleq	r1, r6, sl
   108cc:	andeq	r0, r1, fp, lsl #20
   108d0:	andeq	r0, r1, fp, lsr #21
   108d4:	andeq	r0, r1, r1, asr #22
   108d8:	andeq	r0, r1, r7, lsl #22
   108dc:	andeq	r0, r1, pc, lsl sl
   108e0:	mvnsmi	lr, #737280	; 0xb4000
   108e4:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   108e8:	strmi	r4, [r8], ip, lsl #26
   108ec:			; <UNDEFINED> instruction: 0x4691447e
   108f0:			; <UNDEFINED> instruction: 0xf7ff447d
   108f4:	blne	1dcbedc <getc@plt+0x1dbba60>
   108f8:	strhle	r1, [sl], -r6
   108fc:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10900:	svccc	0x0004f855
   10904:	strbmi	r4, [r1], -sl, asr #12
   10908:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   1090c:	adcmi	r4, r6, #152, 14	; 0x2600000
   10910:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10914:	svclt	0x000083f8
   10918:	andeq	r0, r1, r4, lsr #12
   1091c:	andeq	r0, r1, ip, lsl r6
   10920:	svclt	0x00004770

Disassembly of section .fini:

00010924 <.fini>:
   10924:	push	{r3, lr}
   10928:	pop	{r3, pc}
