
../compcert-repos/prog2/CMakeFiles/MT1E1-2.1.dir/Extras/Miniteste1-Exemplo2/1/prob1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <tira_carta>:
   0:	ldr	r3, [r1]
   4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   8:	mov	r5, #0
   c:	ldr	r4, [r3, #4]
  10:	strd	r6, [sp, #8]
  14:	mov	r7, r0
  18:	str	r8, [sp, #16]
  1c:	ldr	r8, [r0]
  20:	str	lr, [sp, #20]
  24:	ldr	r0, [r3]
  28:	ldr	r6, [r8]
  2c:	b	38 <tira_carta+0x38>
  30:	ldm	r4, {r0, r4}
  34:	add	r5, r5, #1
  38:	mov	r1, r6
  3c:	bl	0 <strcmp>
  40:	cmp	r0, #0
  44:	bne	30 <tira_carta+0x30>
  48:	mov	r1, r8
  4c:	mov	r0, r7
  50:	bl	0 <lista_remove>
  54:	mov	r0, r5
  58:	ldrd	r4, [sp]
  5c:	ldrd	r6, [sp, #8]
  60:	ldr	r8, [sp, #16]
  64:	add	sp, sp, #20
  68:	pop	{pc}		; (ldr pc, [sp], #4)

0000006c <faz_jogada>:
  6c:	strd	r4, [sp, #-32]!	; 0xffffffe0
  70:	mov	r5, r0
  74:	ldr	r4, [r0]
  78:	strd	r6, [sp, #8]
  7c:	strd	r8, [sp, #16]
  80:	mov	r9, r1
  84:	str	sl, [sp, #24]
  88:	mov	sl, r2
  8c:	str	lr, [sp, #28]
  90:	lsl	r0, r4, #2
  94:	bl	0 <malloc>
  98:	cmp	r4, #0
  9c:	mov	r6, r0
  a0:	subgt	r7, r0, #4
  a4:	movgt	r4, #0
  a8:	movgt	r8, r7
  ac:	ble	12c <faz_jogada+0xc0>
  b0:	mov	r1, sl
  b4:	mov	r0, r9
  b8:	bl	0 <tira_carta>
  bc:	ldr	r1, [r5]
  c0:	add	r4, r4, #1
  c4:	str	r0, [r8, #4]!
  c8:	cmp	r1, r4
  cc:	bgt	b0 <faz_jogada+0x44>
  d0:	cmp	r1, #0
  d4:	ble	12c <faz_jogada+0xc0>
  d8:	mvn	ip, #0
  dc:	mov	r3, #0
  e0:	mov	r2, ip
  e4:	ldr	r0, [r7, #4]!
  e8:	cmp	r0, r2
  ec:	movgt	ip, r3
  f0:	add	r3, r3, #1
  f4:	movgt	r2, r0
  f8:	cmp	r1, r3
  fc:	bne	e4 <faz_jogada+0x78>
 100:	lsl	r4, ip, #2
 104:	mov	r0, r6
 108:	bl	0 <free>
 10c:	ldr	r3, [r5, #8]
 110:	ldrd	r6, [sp, #8]
 114:	ldrd	r8, [sp, #16]
 118:	ldr	r0, [r3, r4]
 11c:	ldrd	r4, [sp]
 120:	ldr	sl, [sp, #24]
 124:	add	sp, sp, #28
 128:	pop	{pc}		; (ldr pc, [sp], #4)
 12c:	mvn	r4, #3
 130:	b	104 <faz_jogada+0x98>

00000134 <numero_vitorias>:
 134:	strd	r4, [sp, #-24]!	; 0xffffffe8
 138:	ldr	r5, [r0]
 13c:	strd	r6, [sp, #8]
 140:	str	r8, [sp, #16]
 144:	str	lr, [sp, #20]
 148:	cmp	r5, #0
 14c:	ble	194 <numero_vitorias+0x60>
 150:	ldr	r4, [r0, #8]
 154:	mov	r6, r1
 158:	mov	r7, #0
 15c:	add	r5, r4, r5, lsl #2
 160:	ldr	r1, [r4], #4
 164:	mov	r0, r6
 168:	bl	0 <strcmp>
 16c:	cmp	r0, #0
 170:	addeq	r7, r7, #1
 174:	cmp	r4, r5
 178:	bne	160 <numero_vitorias+0x2c>
 17c:	mov	r0, r7
 180:	ldrd	r4, [sp]
 184:	ldrd	r6, [sp, #8]
 188:	ldr	r8, [sp, #16]
 18c:	add	sp, sp, #20
 190:	pop	{pc}		; (ldr pc, [sp], #4)
 194:	mov	r7, #0
 198:	b	17c <numero_vitorias+0x48>

0000019c <insere_carta>:
 19c:	cmp	r1, #7
 1a0:	strd	r4, [sp, #-12]!
 1a4:	mov	r4, r0
 1a8:	str	lr, [sp, #8]
 1ac:	sub	sp, sp, #12
 1b0:	ble	22c <insere_carta+0x90>
 1b4:	cmp	r1, #8
 1b8:	beq	248 <insere_carta+0xac>
 1bc:	cmp	r1, #9
 1c0:	moveq	r3, #74	; 0x4a
 1c4:	addeq	r5, sp, #4
 1c8:	strheq	r3, [sp, #4]
 1cc:	beq	20c <insere_carta+0x70>
 1d0:	cmp	r1, #10
 1d4:	moveq	r3, #81	; 0x51
 1d8:	addeq	r5, sp, #4
 1dc:	strheq	r3, [sp, #4]
 1e0:	beq	20c <insere_carta+0x70>
 1e4:	cmp	r1, #11
 1e8:	moveq	r3, #75	; 0x4b
 1ec:	addeq	r5, sp, #4
 1f0:	strheq	r3, [sp, #4]
 1f4:	beq	20c <insere_carta+0x70>
 1f8:	cmp	r1, #12
 1fc:	moveq	r3, #65	; 0x41
 200:	addne	r5, sp, #4
 204:	addeq	r5, sp, #4
 208:	strheq	r3, [sp, #4]
 20c:	ldr	r2, [r4]
 210:	mov	r1, r5
 214:	mov	r0, r4
 218:	bl	0 <lista_insere>
 21c:	add	sp, sp, #12
 220:	ldrd	r4, [sp]
 224:	add	sp, sp, #8
 228:	pop	{pc}		; (ldr pc, [sp], #4)
 22c:	add	r5, sp, #4
 230:	add	r2, r1, #50	; 0x32
 234:	mov	r0, r5
 238:	movw	r1, #0
 23c:	movt	r1, #0
 240:	bl	0 <sprintf>
 244:	b	20c <insere_carta+0x70>
 248:	movw	r3, #0
 24c:	movt	r3, #0
 250:	ldrh	r2, [r3]
 254:	add	r5, sp, #4
 258:	ldrb	r3, [r3, #2]
 25c:	strh	r2, [sp, #4]
 260:	strb	r3, [r5, #2]
 264:	b	20c <insere_carta+0x70>

Disassembly of section .text.startup:

00000000 <main>:
   0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4:	mov	r4, #0
   8:	strd	r6, [sp, #8]
   c:	strd	r8, [sp, #16]
  10:	movw	r9, #0
  14:	movt	r9, #0
  18:	strd	sl, [sp, #24]
  1c:	mov	r7, r9
  20:	mov	r6, r9
  24:	str	lr, [sp, #32]
  28:	sub	sp, sp, #12
  2c:	bl	0 <vetor_novo>
  30:	mov	r5, r0
  34:	mov	r2, r4
  38:	mov	r0, r5
  3c:	ldr	r1, [r6], #4
  40:	add	r4, r4, #1
  44:	bl	0 <vetor_insere>
  48:	cmp	r4, #4
  4c:	bne	34 <main+0x34>
  50:	ldr	r6, [pc, #628]	; 2cc <main+0x2cc>
  54:	bl	0 <lista_nova>
  58:	mov	r4, r0
  5c:	add	r8, r6, #208	; 0xd0
  60:	ldr	r1, [r6, #4]!
  64:	mov	r0, r4
  68:	bl	19c <main+0x19c>
  6c:	cmp	r6, r8
  70:	bne	60 <main+0x60>
  74:	ldr	r8, [pc, #596]	; 2d0 <main+0x2d0>
  78:	bl	0 <lista_nova>
  7c:	mov	r6, r0
  80:	add	sl, r8, #52	; 0x34
  84:	ldr	r1, [r8], #4
  88:	mov	r2, #0
  8c:	mov	r0, r6
  90:	bl	0 <lista_insere>
  94:	cmp	sl, r8
  98:	bne	84 <main+0x84>
  9c:	movw	r8, #0
  a0:	movt	r8, #0
  a4:	ldr	sl, [r8]
  a8:	mov	r1, r6
  ac:	mov	r0, r4
  b0:	bl	0 <main>
  b4:	mov	r2, r0
  b8:	movw	r1, #0
  bc:	movt	r1, #0
  c0:	movw	fp, #0
  c4:	movt	fp, #0
  c8:	mov	r0, sl
  cc:	mov	sl, #0
  d0:	bl	0 <fprintf>
  d4:	ldr	r3, [r8]
  d8:	mov	r1, r6
  dc:	mov	r0, r4
  e0:	str	r3, [sp, #4]
  e4:	bl	0 <main>
  e8:	ldr	r3, [sp, #4]
  ec:	mov	r2, r0
  f0:	movw	r1, #0
  f4:	movt	r1, #0
  f8:	mov	r0, r3
  fc:	bl	0 <fprintf>
 100:	ldr	r3, [r8]
 104:	mov	r1, r6
 108:	mov	r0, r4
 10c:	str	r3, [sp, #4]
 110:	bl	0 <main>
 114:	ldr	r3, [sp, #4]
 118:	mov	r2, r0
 11c:	movw	r1, #0
 120:	movt	r1, #0
 124:	mov	r0, r3
 128:	bl	0 <fprintf>
 12c:	mov	r0, r4
 130:	ldr	r1, [r7, #212]	; 0xd4
 134:	bl	19c <main+0x19c>
 138:	mov	r0, r4
 13c:	ldr	r1, [r7, #216]	; 0xd8
 140:	bl	19c <main+0x19c>
 144:	mov	r0, r4
 148:	ldr	r1, [r7, #220]	; 0xdc
 14c:	bl	19c <main+0x19c>
 150:	bl	0 <vetor_novo>
 154:	mov	r7, r0
 158:	mov	r2, r6
 15c:	mov	r1, r4
 160:	mov	r0, r5
 164:	bl	6c <main+0x6c>
 168:	subs	r1, r0, #0
 16c:	mov	r2, sl
 170:	mov	r0, r7
 174:	add	sl, sl, #1
 178:	beq	180 <main+0x180>
 17c:	bl	0 <vetor_insere>
 180:	mov	r0, r5
 184:	bl	0 <vetor_tamanho>
 188:	cmp	r0, #4
 18c:	mov	r2, #44	; 0x2c
 190:	mov	r1, #1
 194:	mov	r0, fp
 198:	beq	1a4 <main+0x1a4>
 19c:	ldr	r3, [r8]
 1a0:	bl	0 <fwrite>
 1a4:	cmp	sl, #13
 1a8:	bne	158 <main+0x158>
 1ac:	movw	r0, #0
 1b0:	movt	r0, #0
 1b4:	bl	0 <puts>
 1b8:	ldr	r3, [r7]
 1bc:	cmp	r3, #0
 1c0:	ble	20c <main+0x20c>
 1c4:	movw	r3, #0
 1c8:	movt	r3, #0
 1cc:	mov	r1, #0
 1d0:	str	r3, [sp, #4]
 1d4:	ldr	fp, [r8]
 1d8:	mov	r0, r7
 1dc:	add	sl, r1, #1
 1e0:	bl	0 <vetor_elemento>
 1e4:	mov	r3, r0
 1e8:	mov	r2, sl
 1ec:	ldr	r1, [sp, #4]
 1f0:	mov	r0, fp
 1f4:	bl	0 <fprintf>
 1f8:	ldr	r3, [r7]
 1fc:	mov	r1, sl
 200:	cmp	sl, #2
 204:	cmple	sl, r3
 208:	blt	1d4 <main+0x1d4>
 20c:	ldr	sl, [pc, #192]	; 2d4 <main+0x2d4>
 210:	mov	r0, r7
 214:	mov	fp, #0
 218:	bl	0 <vetor_apaga>
 21c:	bl	0 <vetor_novo>
 220:	mov	r7, r0
 224:	mov	r2, fp
 228:	mov	r0, r7
 22c:	ldr	r1, [sl], #4
 230:	add	fp, fp, #1
 234:	bl	0 <vetor_insere>
 238:	cmp	fp, #13
 23c:	bne	224 <main+0x224>
 240:	movw	r0, #0
 244:	movt	r0, #0
 248:	movw	fp, #0
 24c:	movt	fp, #0
 250:	bl	0 <puts>
 254:	ldr	r2, [r9], #4
 258:	mov	r0, r7
 25c:	ldr	sl, [r8]
 260:	mov	r1, r2
 264:	str	r2, [sp, #4]
 268:	bl	134 <main+0x134>
 26c:	mov	r3, r0
 270:	mov	r1, fp
 274:	ldr	r2, [sp, #4]
 278:	mov	r0, sl
 27c:	bl	0 <fprintf>
 280:	ldr	r3, [pc, #80]	; 2d8 <main+0x2d8>
 284:	cmp	r9, r3
 288:	bne	254 <main+0x254>
 28c:	mov	r0, r5
 290:	bl	0 <vetor_apaga>
 294:	mov	r0, r4
 298:	bl	0 <lista_apaga>
 29c:	mov	r0, r6
 2a0:	bl	0 <lista_apaga>
 2a4:	mov	r0, r7
 2a8:	bl	0 <vetor_apaga>
 2ac:	mov	r0, #0
 2b0:	add	sp, sp, #12
 2b4:	ldrd	r4, [sp]
 2b8:	ldrd	r6, [sp, #8]
 2bc:	ldrd	r8, [sp, #16]
 2c0:	ldrd	sl, [sp, #24]
 2c4:	add	sp, sp, #32
 2c8:	pop	{pc}		; (ldr pc, [sp], #4)
 2cc:	.word	0x0000000c
 2d0:	.word	0x000000e0
 2d4:	.word	0x00000114
 2d8:	.word	0x00000010
