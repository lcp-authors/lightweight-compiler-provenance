
../compcert-repos/prog2/CMakeFiles/0.10.dir/Aula00_Conceitos_base/10.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <nova_tarefa>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-8]
  14:	ldr	r1, [fp, #-8]
  18:	ldr	r3, [fp, #-8]
  1c:	add	r2, r3, #30
  20:	ldr	r3, [fp, #-8]
  24:	add	r0, r3, #60	; 0x3c
  28:	ldr	r3, [fp, #-8]
  2c:	add	r3, r3, #64	; 0x40
  30:	str	r3, [sp]
  34:	mov	r3, r0
  38:	movw	r0, #0
  3c:	movt	r0, #0
  40:	bl	0 <__isoc99_scanf>
  44:	mov	r3, r0
  48:	cmp	r3, #4
  4c:	bne	58 <nova_tarefa+0x58>
  50:	mov	r3, #1
  54:	b	5c <nova_tarefa+0x5c>
  58:	mov	r3, #0
  5c:	mov	r0, r3
  60:	sub	sp, fp, #4
  64:	ldr	fp, [sp]
  68:	add	sp, sp, #4
  6c:	pop	{pc}		; (ldr pc, [sp], #4)

00000070 <ler_tarefas>:
  70:	str	fp, [sp, #-8]!
  74:	str	lr, [sp, #4]
  78:	add	fp, sp, #4
  7c:	sub	sp, sp, #16
  80:	str	r0, [fp, #-16]
  84:	mov	r3, #0
  88:	str	r3, [fp, #-8]
  8c:	b	9c <ler_tarefas+0x2c>
  90:	ldr	r3, [fp, #-8]
  94:	add	r3, r3, #1
  98:	str	r3, [fp, #-8]
  9c:	ldr	r2, [fp, #-8]
  a0:	mov	r3, r2
  a4:	lsl	r3, r3, #4
  a8:	add	r3, r3, r2
  ac:	lsl	r3, r3, #2
  b0:	mov	r2, r3
  b4:	ldr	r3, [fp, #-16]
  b8:	add	r3, r3, r2
  bc:	mov	r0, r3
  c0:	bl	0 <nova_tarefa>
  c4:	mov	r3, r0
  c8:	cmp	r3, #0
  cc:	beq	dc <ler_tarefas+0x6c>
  d0:	ldr	r3, [fp, #-8]
  d4:	cmp	r3, #99	; 0x63
  d8:	ble	90 <ler_tarefas+0x20>
  dc:	ldr	r3, [fp, #-8]
  e0:	mov	r0, r3
  e4:	sub	sp, fp, #4
  e8:	ldr	fp, [sp]
  ec:	add	sp, sp, #4
  f0:	pop	{pc}		; (ldr pc, [sp], #4)

000000f4 <lista_tarefas>:
  f4:	str	fp, [sp, #-8]!
  f8:	str	lr, [sp, #4]
  fc:	add	fp, sp, #4
 100:	sub	sp, sp, #24
 104:	str	r0, [fp, #-16]
 108:	str	r1, [fp, #-20]	; 0xffffffec
 10c:	mov	r3, #0
 110:	str	r3, [fp, #-8]
 114:	b	1d0 <lista_tarefas+0xdc>
 118:	ldr	r2, [fp, #-8]
 11c:	mov	r3, r2
 120:	lsl	r3, r3, #4
 124:	add	r3, r3, r2
 128:	lsl	r3, r3, #2
 12c:	mov	r2, r3
 130:	ldr	r3, [fp, #-16]
 134:	add	r3, r3, r2
 138:	mov	ip, r3
 13c:	ldr	r2, [fp, #-8]
 140:	mov	r3, r2
 144:	lsl	r3, r3, #4
 148:	add	r3, r3, r2
 14c:	lsl	r3, r3, #2
 150:	mov	r2, r3
 154:	ldr	r3, [fp, #-16]
 158:	add	r3, r3, r2
 15c:	add	r1, r3, #30
 160:	ldr	r2, [fp, #-8]
 164:	mov	r3, r2
 168:	lsl	r3, r3, #4
 16c:	add	r3, r3, r2
 170:	lsl	r3, r3, #2
 174:	mov	r2, r3
 178:	ldr	r3, [fp, #-16]
 17c:	add	r3, r3, r2
 180:	ldr	r0, [r3, #60]	; 0x3c
 184:	ldr	r2, [fp, #-8]
 188:	mov	r3, r2
 18c:	lsl	r3, r3, #4
 190:	add	r3, r3, r2
 194:	lsl	r3, r3, #2
 198:	mov	r2, r3
 19c:	ldr	r3, [fp, #-16]
 1a0:	add	r3, r3, r2
 1a4:	ldr	r3, [r3, #64]	; 0x40
 1a8:	str	r3, [sp]
 1ac:	mov	r3, r0
 1b0:	mov	r2, r1
 1b4:	mov	r1, ip
 1b8:	movw	r0, #0
 1bc:	movt	r0, #0
 1c0:	bl	0 <printf>
 1c4:	ldr	r3, [fp, #-8]
 1c8:	add	r3, r3, #1
 1cc:	str	r3, [fp, #-8]
 1d0:	ldr	r2, [fp, #-8]
 1d4:	ldr	r3, [fp, #-20]	; 0xffffffec
 1d8:	cmp	r2, r3
 1dc:	blt	118 <lista_tarefas+0x24>
 1e0:	nop	{0}
 1e4:	sub	sp, fp, #4
 1e8:	ldr	fp, [sp]
 1ec:	add	sp, sp, #4
 1f0:	pop	{pc}		; (ldr pc, [sp], #4)

000001f4 <analisa_tarefas>:
 1f4:	str	fp, [sp, #-8]!
 1f8:	str	lr, [sp, #4]
 1fc:	add	fp, sp, #4
 200:	sub	sp, sp, #32
 204:	str	r0, [fp, #-24]	; 0xffffffe8
 208:	str	r1, [fp, #-28]	; 0xffffffe4
 20c:	str	r2, [fp, #-32]	; 0xffffffe0
 210:	mov	r3, #0
 214:	str	r3, [fp, #-12]
 218:	mov	r3, #0
 21c:	str	r3, [fp, #-16]
 220:	mov	r3, #0
 224:	str	r3, [fp, #-8]
 228:	b	2f8 <analisa_tarefas+0x104>
 22c:	ldr	r2, [fp, #-8]
 230:	mov	r3, r2
 234:	lsl	r3, r3, #4
 238:	add	r3, r3, r2
 23c:	lsl	r3, r3, #2
 240:	mov	r2, r3
 244:	ldr	r3, [fp, #-24]	; 0xffffffe8
 248:	add	r3, r3, r2
 24c:	ldr	r3, [r3, #60]	; 0x3c
 250:	ldr	r2, [fp, #-12]
 254:	add	r3, r2, r3
 258:	str	r3, [fp, #-12]
 25c:	ldr	r2, [fp, #-8]
 260:	mov	r3, r2
 264:	lsl	r3, r3, #4
 268:	add	r3, r3, r2
 26c:	lsl	r3, r3, #2
 270:	mov	r2, r3
 274:	ldr	r3, [fp, #-24]	; 0xffffffe8
 278:	add	r3, r3, r2
 27c:	ldr	r3, [r3, #60]	; 0x3c
 280:	ldr	r2, [fp, #-16]
 284:	cmp	r2, r3
 288:	bge	2ec <analisa_tarefas+0xf8>
 28c:	ldr	r2, [fp, #-8]
 290:	mov	r3, r2
 294:	lsl	r3, r3, #4
 298:	add	r3, r3, r2
 29c:	lsl	r3, r3, #2
 2a0:	mov	r2, r3
 2a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2a8:	add	r3, r3, r2
 2ac:	ldr	r3, [r3, #60]	; 0x3c
 2b0:	str	r3, [fp, #-16]
 2b4:	ldr	r2, [fp, #-8]
 2b8:	mov	r3, r2
 2bc:	lsl	r3, r3, #4
 2c0:	add	r3, r3, r2
 2c4:	lsl	r3, r3, #2
 2c8:	mov	r2, r3
 2cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2d0:	add	r3, r3, r2
 2d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
 2d8:	mov	r0, r2
 2dc:	mov	r1, r3
 2e0:	mov	r3, #68	; 0x44
 2e4:	mov	r2, r3
 2e8:	bl	0 <memcpy>
 2ec:	ldr	r3, [fp, #-8]
 2f0:	add	r3, r3, #1
 2f4:	str	r3, [fp, #-8]
 2f8:	ldr	r2, [fp, #-8]
 2fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 300:	cmp	r2, r3
 304:	blt	22c <analisa_tarefas+0x38>
 308:	ldr	r3, [fp, #-12]
 30c:	vmov	s15, r3
 310:	vcvt.f32.s32	s14, s15
 314:	ldr	r3, [fp, #-8]
 318:	vmov	s15, r3
 31c:	vcvt.f32.s32	s15, s15
 320:	vdiv.f32	s13, s14, s15
 324:	vmov.f32	s15, s13
 328:	vmov.f32	s0, s15
 32c:	sub	sp, fp, #4
 330:	ldr	fp, [sp]
 334:	add	sp, sp, #4
 338:	pop	{pc}		; (ldr pc, [sp], #4)

0000033c <main>:
 33c:	str	fp, [sp, #-8]!
 340:	str	lr, [sp, #4]
 344:	add	fp, sp, #4
 348:	sub	sp, sp, #6848	; 0x1ac0
 34c:	sub	sp, sp, #24
 350:	sub	r3, fp, #6784	; 0x1a80
 354:	sub	r3, r3, #4
 358:	sub	r3, r3, #20
 35c:	mov	r0, r3
 360:	bl	70 <ler_tarefas>
 364:	str	r0, [fp, #-8]
 368:	sub	r3, fp, #6784	; 0x1a80
 36c:	sub	r3, r3, #4
 370:	sub	r3, r3, #20
 374:	ldr	r1, [fp, #-8]
 378:	mov	r0, r3
 37c:	bl	f4 <lista_tarefas>
 380:	ldr	r1, [fp, #-8]
 384:	movw	r0, #0
 388:	movt	r0, #0
 38c:	bl	0 <printf>
 390:	sub	r2, fp, #6848	; 0x1ac0
 394:	sub	r2, r2, #4
 398:	sub	r2, r2, #24
 39c:	sub	r3, fp, #6784	; 0x1a80
 3a0:	sub	r3, r3, #4
 3a4:	sub	r3, r3, #20
 3a8:	ldr	r1, [fp, #-8]
 3ac:	mov	r0, r3
 3b0:	bl	1f4 <analisa_tarefas>
 3b4:	vmov.f32	s15, s0
 3b8:	vcvt.f64.f32	d7, s15
 3bc:	vmov	r2, r3, d7
 3c0:	movw	r0, #0
 3c4:	movt	r0, #0
 3c8:	bl	0 <printf>
 3cc:	sub	r3, fp, #6848	; 0x1ac0
 3d0:	sub	r3, r3, #4
 3d4:	sub	r3, r3, #24
 3d8:	mov	r1, r3
 3dc:	movw	r0, #0
 3e0:	movt	r0, #0
 3e4:	bl	0 <printf>
 3e8:	mov	r3, #0
 3ec:	mov	r0, r3
 3f0:	sub	sp, fp, #4
 3f4:	ldr	fp, [sp]
 3f8:	add	sp, sp, #4
 3fc:	pop	{pc}		; (ldr pc, [sp], #4)
