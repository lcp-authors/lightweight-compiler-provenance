
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <handle_coda_error>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	movw	r5, #0
       c:	movt	r5, #0
      10:	ldr	r4, [r5]
      14:	bl	0 <coda_get_errno>
      18:	ldr	r0, [r0]
      1c:	bl	0 <coda_errno_to_string>
      20:	movw	r1, #0
      24:	mov	r2, r0
      28:	mov	r0, r4
      2c:	movt	r1, #0
      30:	bl	0 <fprintf>
      34:	ldr	r0, [r5]
      38:	bl	0 <fflush>
      3c:	mov	r0, #1
      40:	bl	0 <exit>

00000044 <main>:
      44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
      48:	add	fp, sp, #28
      4c:	sub	sp, sp, #20
      50:	cmp	r0, #1
      54:	beq	11e0 <main+0x119c>
      58:	ldr	r6, [r1, #4]
      5c:	mov	r9, r1
      60:	movw	r1, #0
      64:	mov	sl, r0
      68:	movt	r1, #0
      6c:	mov	r0, r6
      70:	bl	0 <strcmp>
      74:	cmp	r0, #0
      78:	beq	11e0 <main+0x119c>
      7c:	movw	r1, #0
      80:	mov	r0, r6
      84:	movt	r1, #0
      88:	bl	0 <strcmp>
      8c:	cmp	r0, #0
      90:	beq	11e0 <main+0x119c>
      94:	movw	r1, #0
      98:	mov	r0, r6
      9c:	movt	r1, #0
      a0:	bl	0 <strcmp>
      a4:	cmp	r0, #0
      a8:	beq	11ec <main+0x11a8>
      ac:	movw	r1, #0
      b0:	mov	r0, r6
      b4:	movt	r1, #0
      b8:	bl	0 <strcmp>
      bc:	cmp	r0, #0
      c0:	beq	11ec <main+0x11a8>
      c4:	cmp	sl, #3
      c8:	blt	e4 <main+0xa0>
      cc:	movw	r1, #0
      d0:	mov	r0, r6
      d4:	movt	r1, #0
      d8:	bl	0 <strcmp>
      dc:	cmp	r0, #0
      e0:	beq	bb4 <main+0xb70>
      e4:	ldr	r0, [r9]
      e8:	movw	r2, #0
      ec:	mov	r1, #0
      f0:	movt	r2, #0
      f4:	bl	0 <coda_set_definition_path_conditional>
      f8:	mov	r7, #1
      fc:	cmp	r0, #0
     100:	bne	11f8 <main+0x11b4>
     104:	ldr	r6, [r9, r7, lsl #2]
     108:	movw	r1, #0
     10c:	movt	r1, #0
     110:	mov	r0, r6
     114:	bl	0 <strcmp>
     118:	cmp	r0, #0
     11c:	beq	434 <main+0x3f0>
     120:	movw	r1, #0
     124:	mov	r0, r6
     128:	movt	r1, #0
     12c:	bl	0 <strcmp>
     130:	cmp	r0, #0
     134:	beq	778 <main+0x734>
     138:	movw	r1, #0
     13c:	mov	r0, r6
     140:	movt	r1, #0
     144:	bl	0 <strcmp>
     148:	cmp	r0, #0
     14c:	beq	c54 <main+0xc10>
     150:	movw	r1, #0
     154:	mov	r0, r6
     158:	movt	r1, #0
     15c:	bl	0 <strcmp>
     160:	cmp	r0, #0
     164:	beq	ef4 <main+0xeb0>
     168:	movw	r1, #0
     16c:	mov	r0, r6
     170:	movt	r1, #0
     174:	bl	0 <strcmp>
     178:	cmp	r0, #0
     17c:	bne	1130 <main+0x10ec>
     180:	movw	r0, #0
     184:	mov	r6, #0
     188:	mov	r1, #5
     18c:	movt	r0, #0
     190:	str	r6, [r0]
     194:	movw	r0, #0
     198:	movt	r0, #0
     19c:	str	r1, [r0]
     1a0:	movw	r0, #0
     1a4:	movw	r1, #0
     1a8:	movt	r0, #0
     1ac:	movt	r1, #0
     1b0:	str	r6, [r0]
     1b4:	movw	r0, #0
     1b8:	movt	r0, #0
     1bc:	str	r6, [r0]
     1c0:	movw	r0, #0
     1c4:	movt	r0, #0
     1c8:	ldr	r0, [r0]
     1cc:	str	r0, [r1]
     1d0:	add	r0, r7, #1
     1d4:	sub	r4, sl, r0
     1d8:	cmp	r4, #1
     1dc:	blt	1130 <main+0x10ec>
     1e0:	add	r7, r9, r0, lsl #2
     1e4:	sub	r0, r4, #1
     1e8:	movw	r9, #0
     1ec:	movw	r8, #0
     1f0:	str	r0, [sp, #12]
     1f4:	mov	r0, #1
     1f8:	movt	r9, #0
     1fc:	movt	r8, #0
     200:	str	r0, [sp, #16]
     204:	mov	r0, #0
     208:	str	r0, [sp, #8]
     20c:	mov	r0, #0
     210:	str	r0, [sp, #4]
     214:	mov	r0, #0
     218:	str	r0, [sp]
     21c:	b	238 <main+0x1f4>
     220:	mov	r0, #0
     224:	mov	r5, r6
     228:	str	r0, [sp, #16]
     22c:	add	r6, r5, #1
     230:	cmp	r6, r4
     234:	bge	bc4 <main+0xb80>
     238:	ldr	sl, [r7, r6, lsl #2]
     23c:	mov	r1, r9
     240:	mov	r0, sl
     244:	bl	0 <strcmp>
     248:	cmp	r0, #0
     24c:	beq	220 <main+0x1dc>
     250:	mov	r0, sl
     254:	mov	r1, r8
     258:	bl	0 <strcmp>
     25c:	cmp	r0, #0
     260:	beq	220 <main+0x1dc>
     264:	movw	r1, #0
     268:	mov	r0, sl
     26c:	movt	r1, #0
     270:	bl	0 <strcmp>
     274:	cmp	r0, #0
     278:	beq	294 <main+0x250>
     27c:	movw	r1, #0
     280:	mov	r0, sl
     284:	movt	r1, #0
     288:	bl	0 <strcmp>
     28c:	cmp	r0, #0
     290:	bne	2b0 <main+0x26c>
     294:	add	r5, r6, #1
     298:	cmp	r5, r4
     29c:	bge	2b0 <main+0x26c>
     2a0:	ldr	r0, [r7, r5, lsl #2]
     2a4:	ldrb	r1, [r0]
     2a8:	cmp	r1, #45	; 0x2d
     2ac:	bne	3d4 <main+0x390>
     2b0:	movw	r1, #0
     2b4:	mov	r0, sl
     2b8:	movt	r1, #0
     2bc:	bl	0 <strcmp>
     2c0:	cmp	r0, #0
     2c4:	beq	2e0 <main+0x29c>
     2c8:	movw	r1, #0
     2cc:	mov	r0, sl
     2d0:	movt	r1, #0
     2d4:	bl	0 <strcmp>
     2d8:	cmp	r0, #0
     2dc:	bne	2fc <main+0x2b8>
     2e0:	add	r5, r6, #1
     2e4:	cmp	r5, r4
     2e8:	bge	2fc <main+0x2b8>
     2ec:	ldr	r0, [r7, r5, lsl #2]
     2f0:	ldrb	r1, [r0]
     2f4:	cmp	r1, #45	; 0x2d
     2f8:	bne	3e4 <main+0x3a0>
     2fc:	movw	r1, #0
     300:	mov	r0, sl
     304:	movt	r1, #0
     308:	bl	0 <strcmp>
     30c:	cmp	r0, #0
     310:	bne	330 <main+0x2ec>
     314:	add	r5, r6, #1
     318:	cmp	r5, r4
     31c:	bge	330 <main+0x2ec>
     320:	ldr	r0, [r7, r5, lsl #2]
     324:	ldrb	r1, [r0]
     328:	cmp	r1, #45	; 0x2d
     32c:	bne	3f4 <main+0x3b0>
     330:	movw	r1, #0
     334:	mov	r9, r7
     338:	ldr	r7, [sp, #12]
     33c:	mov	r0, sl
     340:	mov	r8, r4
     344:	movt	r1, #0
     348:	bl	0 <strcmp>
     34c:	cmp	r0, #0
     350:	bne	394 <main+0x350>
     354:	add	r5, r6, #3
     358:	cmp	r5, r8
     35c:	bge	394 <main+0x350>
     360:	add	r0, r9, r6, lsl #2
     364:	ldr	r4, [r0, #4]
     368:	ldrb	r1, [r4]
     36c:	cmp	r1, #45	; 0x2d
     370:	beq	394 <main+0x350>
     374:	ldr	r2, [r0, #8]
     378:	ldrb	r0, [r2]
     37c:	cmp	r0, #45	; 0x2d
     380:	beq	394 <main+0x350>
     384:	ldr	r0, [r9, r5, lsl #2]
     388:	ldrb	r1, [r0]
     38c:	cmp	r1, #45	; 0x2d
     390:	bne	410 <main+0x3cc>
     394:	cmp	r6, r7
     398:	bne	1130 <main+0x10ec>
     39c:	ldrb	r0, [sl]
     3a0:	cmp	r0, #45	; 0x2d
     3a4:	beq	1130 <main+0x10ec>
     3a8:	movw	r0, #0
     3ac:	mov	r5, r7
     3b0:	movt	r0, #0
     3b4:	str	sl, [r0]
     3b8:	mov	r7, r9
     3bc:	movw	r9, #0
     3c0:	mov	r4, r8
     3c4:	movw	r8, #0
     3c8:	movt	r9, #0
     3cc:	movt	r8, #0
     3d0:	b	22c <main+0x1e8>
     3d4:	movw	r1, #0
     3d8:	movt	r1, #0
     3dc:	str	r0, [r1]
     3e0:	b	22c <main+0x1e8>
     3e4:	movw	r1, #0
     3e8:	movt	r1, #0
     3ec:	str	r0, [r1]
     3f0:	b	22c <main+0x1e8>
     3f4:	mov	r1, #0
     3f8:	mov	r2, #10
     3fc:	bl	0 <strtol>
     400:	movw	r1, #0
     404:	movt	r1, #0
     408:	str	r0, [r1]
     40c:	b	22c <main+0x1e8>
     410:	mov	r6, r2
     414:	mov	r1, #0
     418:	mov	r2, #10
     41c:	bl	0 <strtol>
     420:	str	r0, [sp, #8]
     424:	str	r4, [sp]
     428:	mov	r0, r6
     42c:	str	r6, [sp, #4]
     430:	b	3b8 <main+0x374>
     434:	movw	r0, #0
     438:	mov	r8, #0
     43c:	mov	r5, #1
     440:	movw	r6, #0
     444:	movt	r0, #0
     448:	movt	r6, #0
     44c:	str	r8, [r0, #664]	; 0x298
     450:	str	r8, [r0]
     454:	movw	r0, #0
     458:	str	r8, [r6]
     45c:	movt	r0, #0
     460:	str	r8, [r0]
     464:	movw	r0, #0
     468:	movt	r0, #0
     46c:	str	r5, [r0]
     470:	movw	r0, #0
     474:	movt	r0, #0
     478:	str	r8, [r0]
     47c:	movw	r0, #0
     480:	movt	r0, #0
     484:	str	r8, [r0]
     488:	movw	r0, #0
     48c:	movt	r0, #0
     490:	str	r8, [r0]
     494:	movw	r0, #0
     498:	movt	r0, #0
     49c:	str	r8, [r0]
     4a0:	add	r0, r7, #1
     4a4:	sub	r7, sl, r0
     4a8:	cmp	r7, #1
     4ac:	blt	1130 <main+0x10ec>
     4b0:	movw	r4, #0
     4b4:	add	r9, r9, r0, lsl #2
     4b8:	sub	r0, r7, #1
     4bc:	str	r0, [sp, #8]
     4c0:	movt	r4, #0
     4c4:	mov	r0, #1
     4c8:	str	r0, [sp, #16]
     4cc:	mov	r0, #1
     4d0:	str	r0, [sp, #12]
     4d4:	b	4e8 <main+0x4a4>
     4d8:	str	r5, [r6]
     4dc:	add	r8, r8, #1
     4e0:	cmp	r8, r7
     4e4:	bge	720 <main+0x6dc>
     4e8:	ldr	sl, [r9, r8, lsl #2]
     4ec:	mov	r1, r4
     4f0:	mov	r0, sl
     4f4:	bl	0 <strcmp>
     4f8:	cmp	r0, #0
     4fc:	beq	4d8 <main+0x494>
     500:	movw	r1, #0
     504:	mov	r0, sl
     508:	movt	r1, #0
     50c:	bl	0 <strcmp>
     510:	cmp	r0, #0
     514:	beq	4d8 <main+0x494>
     518:	movw	r1, #0
     51c:	mov	r0, sl
     520:	movt	r1, #0
     524:	bl	0 <strcmp>
     528:	cmp	r0, #0
     52c:	beq	67c <main+0x638>
     530:	movw	r1, #0
     534:	mov	r0, sl
     538:	movt	r1, #0
     53c:	bl	0 <strcmp>
     540:	cmp	r0, #0
     544:	beq	67c <main+0x638>
     548:	movw	r1, #0
     54c:	mov	r0, sl
     550:	mov	r4, r6
     554:	movt	r1, #0
     558:	bl	0 <strcmp>
     55c:	cmp	r0, #0
     560:	beq	57c <main+0x538>
     564:	movw	r1, #0
     568:	mov	r0, sl
     56c:	movt	r1, #0
     570:	bl	0 <strcmp>
     574:	cmp	r0, #0
     578:	bne	598 <main+0x554>
     57c:	add	r6, r8, #1
     580:	cmp	r6, r7
     584:	bge	598 <main+0x554>
     588:	ldr	r0, [r9, r6, lsl #2]
     58c:	ldrb	r1, [r0]
     590:	cmp	r1, #45	; 0x2d
     594:	bne	6c0 <main+0x67c>
     598:	movw	r1, #0
     59c:	mov	r0, sl
     5a0:	movt	r1, #0
     5a4:	bl	0 <strcmp>
     5a8:	cmp	r0, #0
     5ac:	beq	688 <main+0x644>
     5b0:	movw	r1, #0
     5b4:	mov	r0, sl
     5b8:	movt	r1, #0
     5bc:	bl	0 <strcmp>
     5c0:	cmp	r0, #0
     5c4:	beq	688 <main+0x644>
     5c8:	movw	r1, #0
     5cc:	mov	r0, sl
     5d0:	movt	r1, #0
     5d4:	bl	0 <strcmp>
     5d8:	cmp	r0, #0
     5dc:	mov	r6, r4
     5e0:	beq	6a4 <main+0x660>
     5e4:	movw	r1, #0
     5e8:	mov	r0, sl
     5ec:	movt	r1, #0
     5f0:	bl	0 <strcmp>
     5f4:	cmp	r0, #0
     5f8:	beq	6a4 <main+0x660>
     5fc:	movw	r1, #0
     600:	mov	r0, sl
     604:	movt	r1, #0
     608:	bl	0 <strcmp>
     60c:	movw	r4, #0
     610:	cmp	r0, #0
     614:	mov	r5, #1
     618:	movt	r4, #0
     61c:	beq	6f0 <main+0x6ac>
     620:	movw	r1, #0
     624:	mov	r0, sl
     628:	movt	r1, #0
     62c:	bl	0 <strcmp>
     630:	cmp	r0, #0
     634:	beq	700 <main+0x6bc>
     638:	movw	r1, #0
     63c:	mov	r0, sl
     640:	movt	r1, #0
     644:	bl	0 <strcmp>
     648:	cmp	r0, #0
     64c:	beq	714 <main+0x6d0>
     650:	ldr	r0, [sp, #8]
     654:	cmp	r8, r0
     658:	bne	1130 <main+0x10ec>
     65c:	ldrb	r0, [sl]
     660:	cmp	r0, #45	; 0x2d
     664:	beq	1130 <main+0x10ec>
     668:	ldr	r8, [sp, #8]
     66c:	movw	r0, #0
     670:	movt	r0, #0
     674:	str	sl, [r0]
     678:	b	4dc <main+0x498>
     67c:	mov	r0, #0
     680:	str	r0, [sp, #16]
     684:	b	4dc <main+0x498>
     688:	movw	r1, #0
     68c:	mov	r0, #1
     690:	mov	r6, r4
     694:	mov	r5, #1
     698:	movt	r1, #0
     69c:	str	r0, [r1]
     6a0:	b	6b4 <main+0x670>
     6a4:	movw	r0, #0
     6a8:	mov	r5, #1
     6ac:	movt	r0, #0
     6b0:	str	r5, [r0]
     6b4:	movw	r4, #0
     6b8:	movt	r4, #0
     6bc:	b	4dc <main+0x498>
     6c0:	bl	0 <codadump_filter_create>
     6c4:	movw	r1, #0
     6c8:	mov	r8, r6
     6cc:	mov	r6, r4
     6d0:	movw	r4, #0
     6d4:	cmp	r0, #0
     6d8:	mov	r5, #1
     6dc:	movt	r1, #0
     6e0:	movt	r4, #0
     6e4:	str	r0, [r1, #664]	; 0x298
     6e8:	bne	4dc <main+0x498>
     6ec:	b	122c <main+0x11e8>
     6f0:	movw	r0, #0
     6f4:	movt	r0, #0
     6f8:	str	r5, [r0]
     6fc:	b	4dc <main+0x498>
     700:	movw	r0, #0
     704:	str	r5, [r6]
     708:	movt	r0, #0
     70c:	str	r5, [r0]
     710:	b	4dc <main+0x498>
     714:	mov	r0, #0
     718:	str	r0, [sp, #12]
     71c:	b	4dc <main+0x498>
     720:	movw	r0, #0
     724:	movt	r0, #0
     728:	ldr	r0, [r0]
     72c:	cmp	r0, #0
     730:	ldrbne	r0, [r0]
     734:	cmpne	r0, #0
     738:	beq	1130 <main+0x10ec>
     73c:	bl	0 <coda_init>
     740:	cmp	r0, #0
     744:	bne	11f8 <main+0x11b4>
     748:	ldr	r0, [sp, #12]
     74c:	clz	r0, r0
     750:	lsr	r0, r0, #5
     754:	bl	0 <coda_set_option_bypass_special_types>
     758:	mov	r0, #0
     75c:	bl	0 <coda_set_option_perform_boundary_checks>
     760:	ldr	r0, [sp, #16]
     764:	bl	0 <coda_set_option_perform_conversions>
     768:	bl	0 <traverse_info_init>
     76c:	bl	0 <dim_info_init>
     770:	bl	0 <traverse_product>
     774:	b	ba8 <main+0xb64>
     778:	movw	r0, #0
     77c:	mov	r6, #0
     780:	mov	r1, #1
     784:	movw	r2, #0
     788:	movt	r0, #0
     78c:	movt	r2, #0
     790:	str	r6, [r0, #664]	; 0x298
     794:	str	r6, [r0]
     798:	movw	r0, #0
     79c:	movt	r0, #0
     7a0:	str	r1, [r0]
     7a4:	movw	r0, #0
     7a8:	movt	r0, #0
     7ac:	str	r6, [r0]
     7b0:	movw	r0, #0
     7b4:	movt	r0, #0
     7b8:	str	r0, [r2]
     7bc:	movw	r0, #0
     7c0:	movt	r0, #0
     7c4:	str	r1, [r0]
     7c8:	movw	r0, #0
     7cc:	movt	r0, #0
     7d0:	str	r1, [r0]
     7d4:	movw	r0, #0
     7d8:	movw	r1, #0
     7dc:	movt	r0, #0
     7e0:	movt	r1, #0
     7e4:	str	r6, [r0]
     7e8:	movw	r0, #0
     7ec:	movt	r0, #0
     7f0:	str	r6, [r0]
     7f4:	movw	r0, #0
     7f8:	movt	r0, #0
     7fc:	str	r6, [r0]
     800:	movw	r0, #0
     804:	movt	r0, #0
     808:	str	r6, [r0]
     80c:	movw	r0, #0
     810:	movt	r0, #0
     814:	ldr	r0, [r0]
     818:	str	r0, [r1]
     81c:	add	r0, r7, #1
     820:	sub	r8, sl, r0
     824:	cmp	r8, #1
     828:	blt	1130 <main+0x10ec>
     82c:	movw	r5, #0
     830:	add	sl, r9, r0, lsl #2
     834:	sub	r0, r8, #1
     838:	mov	r4, #1
     83c:	movt	r5, #0
     840:	str	r0, [sp, #12]
     844:	mov	r0, #1
     848:	str	r0, [sp, #16]
     84c:	ldr	r9, [sl, r6, lsl #2]
     850:	mov	r1, r5
     854:	mov	r0, r9
     858:	bl	0 <strcmp>
     85c:	cmp	r0, #0
     860:	beq	a64 <main+0xa20>
     864:	movw	r1, #0
     868:	mov	r0, r9
     86c:	movt	r1, #0
     870:	bl	0 <strcmp>
     874:	cmp	r0, #0
     878:	beq	a64 <main+0xa20>
     87c:	movw	r1, #0
     880:	mov	r0, r9
     884:	movt	r1, #0
     888:	bl	0 <strcmp>
     88c:	cmp	r0, #0
     890:	beq	8ac <main+0x868>
     894:	movw	r1, #0
     898:	mov	r0, r9
     89c:	movt	r1, #0
     8a0:	bl	0 <strcmp>
     8a4:	cmp	r0, #0
     8a8:	bne	8c8 <main+0x884>
     8ac:	add	r7, r6, #1
     8b0:	cmp	r7, r8
     8b4:	bge	8c8 <main+0x884>
     8b8:	ldr	r0, [sl, r7, lsl #2]
     8bc:	ldrb	r1, [r0]
     8c0:	cmp	r1, #45	; 0x2d
     8c4:	bne	a8c <main+0xa48>
     8c8:	movw	r1, #0
     8cc:	mov	r0, r9
     8d0:	movt	r1, #0
     8d4:	bl	0 <strcmp>
     8d8:	cmp	r0, #0
     8dc:	beq	a6c <main+0xa28>
     8e0:	movw	r1, #0
     8e4:	mov	r0, r9
     8e8:	movt	r1, #0
     8ec:	bl	0 <strcmp>
     8f0:	cmp	r0, #0
     8f4:	beq	a6c <main+0xa28>
     8f8:	movw	r1, #0
     8fc:	mov	r0, r9
     900:	movt	r1, #0
     904:	bl	0 <strcmp>
     908:	cmp	r0, #0
     90c:	beq	a7c <main+0xa38>
     910:	movw	r1, #0
     914:	mov	r0, r9
     918:	movt	r1, #0
     91c:	bl	0 <strcmp>
     920:	cmp	r0, #0
     924:	beq	a7c <main+0xa38>
     928:	movw	r1, #0
     92c:	mov	r0, r9
     930:	movt	r1, #0
     934:	bl	0 <strcmp>
     938:	cmp	r0, #0
     93c:	beq	958 <main+0x914>
     940:	movw	r1, #0
     944:	mov	r0, r9
     948:	movt	r1, #0
     94c:	bl	0 <strcmp>
     950:	cmp	r0, #0
     954:	bne	974 <main+0x930>
     958:	add	r7, r6, #1
     95c:	cmp	r7, r8
     960:	bge	974 <main+0x930>
     964:	ldr	r0, [sl, r7, lsl #2]
     968:	ldrb	r1, [r0]
     96c:	cmp	r1, #45	; 0x2d
     970:	bne	adc <main+0xa98>
     974:	movw	r1, #0
     978:	mov	r0, r9
     97c:	movt	r1, #0
     980:	bl	0 <strcmp>
     984:	cmp	r0, #0
     988:	beq	aa8 <main+0xa64>
     98c:	movw	r1, #0
     990:	mov	r0, r9
     994:	movt	r1, #0
     998:	bl	0 <strcmp>
     99c:	cmp	r0, #0
     9a0:	beq	aa8 <main+0xa64>
     9a4:	movw	r1, #0
     9a8:	mov	r0, r9
     9ac:	movt	r1, #0
     9b0:	bl	0 <strcmp>
     9b4:	cmp	r0, #0
     9b8:	beq	9d4 <main+0x990>
     9bc:	movw	r1, #0
     9c0:	mov	r0, r9
     9c4:	movt	r1, #0
     9c8:	bl	0 <strcmp>
     9cc:	cmp	r0, #0
     9d0:	bne	9f0 <main+0x9ac>
     9d4:	add	r7, r6, #1
     9d8:	cmp	r7, r8
     9dc:	bge	9f0 <main+0x9ac>
     9e0:	ldr	r0, [sl, r7, lsl #2]
     9e4:	ldrb	r1, [r0]
     9e8:	cmp	r1, #45	; 0x2d
     9ec:	bne	aec <main+0xaa8>
     9f0:	movw	r1, #0
     9f4:	mov	r0, r9
     9f8:	movt	r1, #0
     9fc:	bl	0 <strcmp>
     a00:	cmp	r0, #0
     a04:	beq	ab8 <main+0xa74>
     a08:	movw	r1, #0
     a0c:	mov	r0, r9
     a10:	movt	r1, #0
     a14:	bl	0 <strcmp>
     a18:	cmp	r0, #0
     a1c:	beq	ab8 <main+0xa74>
     a20:	movw	r1, #0
     a24:	mov	r0, r9
     a28:	movt	r1, #0
     a2c:	bl	0 <strcmp>
     a30:	cmp	r0, #0
     a34:	beq	afc <main+0xab8>
     a38:	ldr	r0, [sp, #12]
     a3c:	cmp	r6, r0
     a40:	bne	1130 <main+0x10ec>
     a44:	ldrb	r0, [r9]
     a48:	cmp	r0, #45	; 0x2d
     a4c:	beq	1130 <main+0x10ec>
     a50:	ldr	r7, [sp, #12]
     a54:	movw	r0, #0
     a58:	movt	r0, #0
     a5c:	str	r9, [r0]
     a60:	b	acc <main+0xa88>
     a64:	mov	r4, #0
     a68:	b	ac8 <main+0xa84>
     a6c:	movw	r1, #0
     a70:	mov	r0, #1
     a74:	movt	r1, #0
     a78:	b	ac4 <main+0xa80>
     a7c:	movw	r1, #0
     a80:	mov	r0, #1
     a84:	movt	r1, #0
     a88:	b	ac4 <main+0xa80>
     a8c:	bl	0 <codadump_filter_create>
     a90:	movw	r1, #0
     a94:	cmp	r0, #0
     a98:	movt	r1, #0
     a9c:	str	r0, [r1, #664]	; 0x298
     aa0:	bne	acc <main+0xa88>
     aa4:	b	122c <main+0x11e8>
     aa8:	movw	r1, #0
     aac:	mov	r0, #1
     ab0:	movt	r1, #0
     ab4:	b	ac4 <main+0xa80>
     ab8:	movw	r1, #0
     abc:	mov	r0, #1
     ac0:	movt	r1, #0
     ac4:	str	r0, [r1]
     ac8:	mov	r7, r6
     acc:	add	r6, r7, #1
     ad0:	cmp	r6, r8
     ad4:	blt	84c <main+0x808>
     ad8:	b	b0c <main+0xac8>
     adc:	movw	r1, #0
     ae0:	movt	r1, #0
     ae4:	str	r0, [r1]
     ae8:	b	acc <main+0xa88>
     aec:	movw	r1, #0
     af0:	movt	r1, #0
     af4:	str	r0, [r1]
     af8:	b	acc <main+0xa88>
     afc:	mov	r0, #0
     b00:	mov	r7, r6
     b04:	str	r0, [sp, #16]
     b08:	b	acc <main+0xa88>
     b0c:	movw	r0, #0
     b10:	movt	r0, #0
     b14:	ldr	r0, [r0]
     b18:	cmp	r0, #0
     b1c:	ldrbne	r0, [r0]
     b20:	cmpne	r0, #0
     b24:	beq	1130 <main+0x10ec>
     b28:	bl	0 <coda_init>
     b2c:	cmp	r0, #0
     b30:	bne	11f8 <main+0x11b4>
     b34:	ldr	r0, [sp, #16]
     b38:	clz	r0, r0
     b3c:	lsr	r0, r0, #5
     b40:	bl	0 <coda_set_option_bypass_special_types>
     b44:	mov	r0, #0
     b48:	bl	0 <coda_set_option_perform_boundary_checks>
     b4c:	mov	r0, r4
     b50:	bl	0 <coda_set_option_perform_conversions>
     b54:	bl	0 <traverse_info_init>
     b58:	bl	0 <dim_info_init>
     b5c:	movw	r4, #0
     b60:	movw	r5, #0
     b64:	movt	r4, #0
     b68:	movt	r5, #0
     b6c:	ldr	r0, [r4]
     b70:	cmp	r0, #0
     b74:	beq	b90 <main+0xb4c>
     b78:	movw	r1, #0
     b7c:	movt	r1, #0
     b80:	bl	0 <fopen>
     b84:	cmp	r0, #0
     b88:	str	r0, [r5]
     b8c:	beq	1248 <main+0x1204>
     b90:	bl	0 <traverse_product>
     b94:	ldr	r0, [r4]
     b98:	cmp	r0, #0
     b9c:	beq	ba8 <main+0xb64>
     ba0:	ldr	r0, [r5]
     ba4:	bl	0 <fclose>
     ba8:	bl	0 <dim_info_done>
     bac:	bl	0 <traverse_info_done>
     bb0:	b	11d0 <main+0x118c>
     bb4:	ldr	r0, [r9, #8]
     bb8:	bl	0 <coda_set_definition_path>
     bbc:	mov	r7, #3
     bc0:	b	104 <main+0xc0>
     bc4:	movw	r0, #0
     bc8:	movt	r0, #0
     bcc:	ldr	r0, [r0]
     bd0:	cmp	r0, #0
     bd4:	ldrbne	r0, [r0]
     bd8:	cmpne	r0, #0
     bdc:	beq	1130 <main+0x10ec>
     be0:	bl	0 <coda_init>
     be4:	cmp	r0, #0
     be8:	bne	11f8 <main+0x11b4>
     bec:	mov	r0, #0
     bf0:	bl	0 <coda_set_option_perform_conversions>
     bf4:	ldr	r0, [sp, #16]
     bf8:	bl	0 <coda_set_option_use_fast_size_expressions>
     bfc:	movw	r0, #0
     c00:	movw	r4, #0
     c04:	movt	r0, #0
     c08:	movt	r4, #0
     c0c:	ldr	r0, [r0]
     c10:	cmp	r0, #0
     c14:	beq	c30 <main+0xbec>
     c18:	movw	r1, #0
     c1c:	movt	r1, #0
     c20:	bl	0 <fopen>
     c24:	cmp	r0, #0
     c28:	str	r0, [r4]
     c2c:	beq	1258 <main+0x1214>
     c30:	ldm	sp, {r0, r1, r2}
     c34:	bl	0 <print_debug_data>
     c38:	movw	r0, #0
     c3c:	movt	r0, #0
     c40:	ldr	r0, [r0]
     c44:	cmp	r0, #0
     c48:	beq	11d0 <main+0x118c>
     c4c:	ldr	r0, [r4]
     c50:	b	11cc <main+0x1188>
     c54:	movw	r0, #0
     c58:	mov	r2, #0
     c5c:	mov	r1, #3
     c60:	movt	r0, #0
     c64:	str	r2, [r0]
     c68:	movw	r0, #0
     c6c:	movt	r0, #0
     c70:	str	r1, [r0]
     c74:	movw	r0, #0
     c78:	movw	r1, #0
     c7c:	movt	r0, #0
     c80:	movt	r1, #0
     c84:	str	r2, [r0]
     c88:	movw	r0, #0
     c8c:	movt	r0, #0
     c90:	str	r2, [r0]
     c94:	movw	r0, #0
     c98:	movt	r0, #0
     c9c:	ldr	r0, [r0]
     ca0:	str	r0, [r1]
     ca4:	add	r0, r7, #1
     ca8:	sub	r8, sl, r0
     cac:	cmp	r8, #1
     cb0:	blt	1130 <main+0x10ec>
     cb4:	movw	r6, #0
     cb8:	movw	r7, #0
     cbc:	add	r9, r9, r0, lsl #2
     cc0:	sub	r0, r8, #1
     cc4:	mov	r1, #0
     cc8:	mov	r5, #0
     ccc:	mov	r4, #0
     cd0:	str	r0, [sp, #12]
     cd4:	mov	r0, #1
     cd8:	movt	r6, #0
     cdc:	movt	r7, #0
     ce0:	str	r1, [sp, #8]
     ce4:	str	r0, [sp, #16]
     ce8:	mov	r0, #1
     cec:	str	r0, [sp, #4]
     cf0:	b	d08 <main+0xcc4>
     cf4:	mov	r4, #1
     cf8:	mov	r0, r5
     cfc:	add	r5, r0, #1
     d00:	cmp	r5, r8
     d04:	bge	e7c <main+0xe38>
     d08:	ldr	sl, [r9, r5, lsl #2]
     d0c:	mov	r1, r6
     d10:	mov	r0, sl
     d14:	bl	0 <strcmp>
     d18:	cmp	r0, #0
     d1c:	beq	cf4 <main+0xcb0>
     d20:	mov	r0, sl
     d24:	mov	r1, r7
     d28:	bl	0 <strcmp>
     d2c:	cmp	r0, #0
     d30:	beq	cf4 <main+0xcb0>
     d34:	movw	r1, #0
     d38:	mov	r0, sl
     d3c:	movt	r1, #0
     d40:	bl	0 <strcmp>
     d44:	cmp	r0, #0
     d48:	beq	e44 <main+0xe00>
     d4c:	movw	r1, #0
     d50:	mov	r0, sl
     d54:	movt	r1, #0
     d58:	bl	0 <strcmp>
     d5c:	cmp	r0, #0
     d60:	beq	e44 <main+0xe00>
     d64:	movw	r1, #0
     d68:	mov	r0, sl
     d6c:	movt	r1, #0
     d70:	bl	0 <strcmp>
     d74:	cmp	r0, #0
     d78:	beq	d94 <main+0xd50>
     d7c:	movw	r1, #0
     d80:	mov	r0, sl
     d84:	movt	r1, #0
     d88:	bl	0 <strcmp>
     d8c:	cmp	r0, #0
     d90:	bne	db0 <main+0xd6c>
     d94:	add	r0, r5, #1
     d98:	cmp	r0, r8
     d9c:	bge	db0 <main+0xd6c>
     da0:	ldr	r1, [r9, r0, lsl #2]
     da4:	ldrb	r2, [r1]
     da8:	cmp	r2, #45	; 0x2d
     dac:	bne	e5c <main+0xe18>
     db0:	movw	r1, #0
     db4:	mov	r0, sl
     db8:	movt	r1, #0
     dbc:	bl	0 <strcmp>
     dc0:	cmp	r0, #0
     dc4:	beq	de0 <main+0xd9c>
     dc8:	movw	r1, #0
     dcc:	mov	r0, sl
     dd0:	movt	r1, #0
     dd4:	bl	0 <strcmp>
     dd8:	cmp	r0, #0
     ddc:	bne	dfc <main+0xdb8>
     de0:	add	r0, r5, #1
     de4:	cmp	r0, r8
     de8:	bge	dfc <main+0xdb8>
     dec:	ldr	r1, [r9, r0, lsl #2]
     df0:	ldrb	r2, [r1]
     df4:	cmp	r2, #45	; 0x2d
     df8:	bne	e6c <main+0xe28>
     dfc:	movw	r1, #0
     e00:	mov	r0, sl
     e04:	movt	r1, #0
     e08:	bl	0 <strcmp>
     e0c:	cmp	r0, #0
     e10:	beq	e50 <main+0xe0c>
     e14:	ldr	r0, [sp, #12]
     e18:	cmp	r5, r0
     e1c:	bne	1130 <main+0x10ec>
     e20:	ldrb	r0, [sl]
     e24:	cmp	r0, #45	; 0x2d
     e28:	beq	1130 <main+0x10ec>
     e2c:	movw	r0, #0
     e30:	str	sl, [sp, #8]
     e34:	movt	r0, #0
     e38:	str	sl, [r0]
     e3c:	ldr	r0, [sp, #12]
     e40:	b	cfc <main+0xcb8>
     e44:	mov	r0, #0
     e48:	str	r0, [sp, #16]
     e4c:	b	cf8 <main+0xcb4>
     e50:	mov	r0, #0
     e54:	str	r0, [sp, #4]
     e58:	b	cf8 <main+0xcb4>
     e5c:	movw	r2, #0
     e60:	movt	r2, #0
     e64:	str	r1, [r2]
     e68:	b	cfc <main+0xcb8>
     e6c:	movw	r2, #0
     e70:	movt	r2, #0
     e74:	str	r1, [r2]
     e78:	b	cfc <main+0xcb8>
     e7c:	ldr	r0, [sp, #8]
     e80:	cmp	r0, #0
     e84:	ldrbne	r0, [r0]
     e88:	cmpne	r0, #0
     e8c:	beq	1130 <main+0x10ec>
     e90:	bl	0 <coda_init>
     e94:	cmp	r0, #0
     e98:	bne	11f8 <main+0x11b4>
     e9c:	ldr	r0, [sp, #4]
     ea0:	clz	r0, r0
     ea4:	lsr	r0, r0, #5
     ea8:	bl	0 <coda_set_option_bypass_special_types>
     eac:	ldr	r0, [sp, #16]
     eb0:	bl	0 <coda_set_option_perform_conversions>
     eb4:	movw	r5, #0
     eb8:	movw	r6, #0
     ebc:	movt	r5, #0
     ec0:	movt	r6, #0
     ec4:	ldr	r0, [r5]
     ec8:	cmp	r0, #0
     ecc:	beq	ee8 <main+0xea4>
     ed0:	movw	r1, #0
     ed4:	movt	r1, #0
     ed8:	bl	0 <fopen>
     edc:	cmp	r0, #0
     ee0:	str	r0, [r6]
     ee4:	beq	1250 <main+0x120c>
     ee8:	mov	r0, r4
     eec:	bl	0 <print_json_data>
     ef0:	b	11bc <main+0x1178>
     ef4:	movw	r0, #0
     ef8:	mov	r2, #0
     efc:	mov	r1, #4
     f00:	movt	r0, #0
     f04:	str	r2, [r0]
     f08:	movw	r0, #0
     f0c:	movt	r0, #0
     f10:	str	r1, [r0]
     f14:	movw	r0, #0
     f18:	movw	r1, #0
     f1c:	movt	r0, #0
     f20:	movt	r1, #0
     f24:	str	r2, [r0]
     f28:	movw	r0, #0
     f2c:	movt	r0, #0
     f30:	str	r2, [r0]
     f34:	movw	r0, #0
     f38:	movt	r0, #0
     f3c:	ldr	r0, [r0]
     f40:	str	r0, [r1]
     f44:	add	r0, r7, #1
     f48:	sub	r8, sl, r0
     f4c:	cmp	r8, #1
     f50:	blt	1130 <main+0x10ec>
     f54:	movw	r6, #0
     f58:	movw	r7, #0
     f5c:	add	r9, r9, r0, lsl #2
     f60:	sub	r0, r8, #1
     f64:	mov	r1, #0
     f68:	mov	r5, #0
     f6c:	mov	r4, #0
     f70:	str	r0, [sp, #12]
     f74:	mov	r0, #1
     f78:	movt	r6, #0
     f7c:	movt	r7, #0
     f80:	str	r1, [sp, #8]
     f84:	str	r0, [sp, #16]
     f88:	mov	r0, #1
     f8c:	str	r0, [sp, #4]
     f90:	b	fa8 <main+0xf64>
     f94:	mov	r4, #1
     f98:	mov	r0, r5
     f9c:	add	r5, r0, #1
     fa0:	cmp	r5, r8
     fa4:	bge	111c <main+0x10d8>
     fa8:	ldr	sl, [r9, r5, lsl #2]
     fac:	mov	r1, r6
     fb0:	mov	r0, sl
     fb4:	bl	0 <strcmp>
     fb8:	cmp	r0, #0
     fbc:	beq	f94 <main+0xf50>
     fc0:	mov	r0, sl
     fc4:	mov	r1, r7
     fc8:	bl	0 <strcmp>
     fcc:	cmp	r0, #0
     fd0:	beq	f94 <main+0xf50>
     fd4:	movw	r1, #0
     fd8:	mov	r0, sl
     fdc:	movt	r1, #0
     fe0:	bl	0 <strcmp>
     fe4:	cmp	r0, #0
     fe8:	beq	10e4 <main+0x10a0>
     fec:	movw	r1, #0
     ff0:	mov	r0, sl
     ff4:	movt	r1, #0
     ff8:	bl	0 <strcmp>
     ffc:	cmp	r0, #0
    1000:	beq	10e4 <main+0x10a0>
    1004:	movw	r1, #0
    1008:	mov	r0, sl
    100c:	movt	r1, #0
    1010:	bl	0 <strcmp>
    1014:	cmp	r0, #0
    1018:	beq	1034 <main+0xff0>
    101c:	movw	r1, #0
    1020:	mov	r0, sl
    1024:	movt	r1, #0
    1028:	bl	0 <strcmp>
    102c:	cmp	r0, #0
    1030:	bne	1050 <main+0x100c>
    1034:	add	r0, r5, #1
    1038:	cmp	r0, r8
    103c:	bge	1050 <main+0x100c>
    1040:	ldr	r1, [r9, r0, lsl #2]
    1044:	ldrb	r2, [r1]
    1048:	cmp	r2, #45	; 0x2d
    104c:	bne	10fc <main+0x10b8>
    1050:	movw	r1, #0
    1054:	mov	r0, sl
    1058:	movt	r1, #0
    105c:	bl	0 <strcmp>
    1060:	cmp	r0, #0
    1064:	beq	1080 <main+0x103c>
    1068:	movw	r1, #0
    106c:	mov	r0, sl
    1070:	movt	r1, #0
    1074:	bl	0 <strcmp>
    1078:	cmp	r0, #0
    107c:	bne	109c <main+0x1058>
    1080:	add	r0, r5, #1
    1084:	cmp	r0, r8
    1088:	bge	109c <main+0x1058>
    108c:	ldr	r1, [r9, r0, lsl #2]
    1090:	ldrb	r2, [r1]
    1094:	cmp	r2, #45	; 0x2d
    1098:	bne	110c <main+0x10c8>
    109c:	movw	r1, #0
    10a0:	mov	r0, sl
    10a4:	movt	r1, #0
    10a8:	bl	0 <strcmp>
    10ac:	cmp	r0, #0
    10b0:	beq	10f0 <main+0x10ac>
    10b4:	ldr	r0, [sp, #12]
    10b8:	cmp	r5, r0
    10bc:	bne	1130 <main+0x10ec>
    10c0:	ldrb	r0, [sl]
    10c4:	cmp	r0, #45	; 0x2d
    10c8:	beq	1130 <main+0x10ec>
    10cc:	movw	r0, #0
    10d0:	str	sl, [sp, #8]
    10d4:	movt	r0, #0
    10d8:	str	sl, [r0]
    10dc:	ldr	r0, [sp, #12]
    10e0:	b	f9c <main+0xf58>
    10e4:	mov	r0, #0
    10e8:	str	r0, [sp, #16]
    10ec:	b	f98 <main+0xf54>
    10f0:	mov	r0, #0
    10f4:	str	r0, [sp, #4]
    10f8:	b	f98 <main+0xf54>
    10fc:	movw	r2, #0
    1100:	movt	r2, #0
    1104:	str	r1, [r2]
    1108:	b	f9c <main+0xf58>
    110c:	movw	r2, #0
    1110:	movt	r2, #0
    1114:	str	r1, [r2]
    1118:	b	f9c <main+0xf58>
    111c:	ldr	r0, [sp, #8]
    1120:	cmp	r0, #0
    1124:	ldrbne	r0, [r0]
    1128:	cmpne	r0, #0
    112c:	bne	115c <main+0x1118>
    1130:	movw	r0, #0
    1134:	mov	r1, #25
    1138:	movt	r0, #0
    113c:	ldr	r3, [r0]
    1140:	movw	r0, #0
    1144:	movt	r0, #0
    1148:	mov	r2, #1
    114c:	bl	0 <fwrite>
    1150:	bl	127c <print_help>
    1154:	mov	r0, #1
    1158:	bl	0 <exit>
    115c:	bl	0 <coda_init>
    1160:	cmp	r0, #0
    1164:	bne	11f8 <main+0x11b4>
    1168:	ldr	r0, [sp, #4]
    116c:	clz	r0, r0
    1170:	lsr	r0, r0, #5
    1174:	bl	0 <coda_set_option_bypass_special_types>
    1178:	ldr	r0, [sp, #16]
    117c:	bl	0 <coda_set_option_perform_conversions>
    1180:	movw	r5, #0
    1184:	movw	r6, #0
    1188:	movt	r5, #0
    118c:	movt	r6, #0
    1190:	ldr	r0, [r5]
    1194:	cmp	r0, #0
    1198:	beq	11b4 <main+0x1170>
    119c:	movw	r1, #0
    11a0:	movt	r1, #0
    11a4:	bl	0 <fopen>
    11a8:	cmp	r0, #0
    11ac:	str	r0, [r6]
    11b0:	beq	1250 <main+0x120c>
    11b4:	mov	r0, r4
    11b8:	bl	0 <print_yaml_data>
    11bc:	ldr	r0, [r5]
    11c0:	cmp	r0, #0
    11c4:	beq	11d0 <main+0x118c>
    11c8:	ldr	r0, [r6]
    11cc:	bl	0 <fclose>
    11d0:	bl	0 <coda_done>
    11d4:	mov	r0, #0
    11d8:	sub	sp, fp, #28
    11dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11e0:	bl	127c <print_help>
    11e4:	mov	r0, #0
    11e8:	bl	0 <exit>
    11ec:	bl	17e0 <print_version>
    11f0:	mov	r0, #0
    11f4:	bl	0 <exit>
    11f8:	movw	r0, #0
    11fc:	movt	r0, #0
    1200:	ldr	r4, [r0]
    1204:	bl	0 <coda_get_errno>
    1208:	ldr	r0, [r0]
    120c:	bl	0 <coda_errno_to_string>
    1210:	movw	r1, #0
    1214:	mov	r2, r0
    1218:	mov	r0, r4
    121c:	movt	r1, #0
    1220:	bl	0 <fprintf>
    1224:	mov	r0, #1
    1228:	bl	0 <exit>
    122c:	movw	r0, #0
    1230:	mov	r1, #40	; 0x28
    1234:	movt	r0, #0
    1238:	ldr	r3, [r0]
    123c:	movw	r0, #0
    1240:	movt	r0, #0
    1244:	b	1148 <main+0x1104>
    1248:	ldr	r2, [r4]
    124c:	b	1264 <main+0x1220>
    1250:	ldr	r2, [r5]
    1254:	b	1264 <main+0x1220>
    1258:	movw	r0, #0
    125c:	movt	r0, #0
    1260:	ldr	r2, [r0]
    1264:	movw	r0, #0
    1268:	movw	r1, #0
    126c:	movt	r0, #0
    1270:	movt	r1, #0
    1274:	ldr	r0, [r0]
    1278:	b	1220 <main+0x11dc>

0000127c <print_help>:
    127c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1280:	add	fp, sp, #28
    1284:	sub	sp, sp, #4
    1288:	movw	r0, #0
    128c:	movt	r0, #0
    1290:	bl	0 <puts>
    1294:	movw	r0, #0
    1298:	movt	r0, #0
    129c:	bl	0 <puts>
    12a0:	movw	r0, #0
    12a4:	movt	r0, #0
    12a8:	bl	0 <puts>
    12ac:	movw	r8, #0
    12b0:	movt	r8, #0
    12b4:	mov	r0, r8
    12b8:	bl	0 <puts>
    12bc:	movw	r0, #0
    12c0:	movt	r0, #0
    12c4:	bl	0 <puts>
    12c8:	movw	r0, #0
    12cc:	movt	r0, #0
    12d0:	bl	0 <puts>
    12d4:	movw	r5, #0
    12d8:	movt	r5, #0
    12dc:	mov	r0, r5
    12e0:	bl	0 <puts>
    12e4:	movw	r6, #0
    12e8:	movt	r6, #0
    12ec:	mov	r0, r6
    12f0:	bl	0 <puts>
    12f4:	movw	r7, #0
    12f8:	movt	r7, #0
    12fc:	mov	r0, r7
    1300:	bl	0 <puts>
    1304:	movw	r4, #0
    1308:	movt	r4, #0
    130c:	mov	r0, r4
    1310:	bl	0 <puts>
    1314:	movw	r0, #0
    1318:	movt	r0, #0
    131c:	bl	0 <puts>
    1320:	movw	r0, #0
    1324:	movt	r0, #0
    1328:	bl	0 <puts>
    132c:	movw	r0, #0
    1330:	movt	r0, #0
    1334:	bl	0 <puts>
    1338:	movw	r0, #0
    133c:	movt	r0, #0
    1340:	bl	0 <puts>
    1344:	movw	r0, #0
    1348:	movt	r0, #0
    134c:	bl	0 <puts>
    1350:	movw	r0, #0
    1354:	movt	r0, #0
    1358:	bl	0 <puts>
    135c:	movw	r0, #0
    1360:	movt	r0, #0
    1364:	bl	0 <puts>
    1368:	movw	r0, #0
    136c:	movt	r0, #0
    1370:	bl	0 <puts>
    1374:	movw	r0, #0
    1378:	movt	r0, #0
    137c:	bl	0 <puts>
    1380:	movw	sl, #0
    1384:	movt	sl, #0
    1388:	mov	r0, sl
    138c:	bl	0 <puts>
    1390:	movw	r0, #0
    1394:	movt	r0, #0
    1398:	bl	0 <puts>
    139c:	movw	r0, #0
    13a0:	movt	r0, #0
    13a4:	bl	0 <puts>
    13a8:	movw	r0, #0
    13ac:	movt	r0, #0
    13b0:	bl	0 <puts>
    13b4:	mov	r0, #10
    13b8:	bl	0 <putchar>
    13bc:	movw	r0, #0
    13c0:	movt	r0, #0
    13c4:	bl	0 <puts>
    13c8:	movw	r0, #0
    13cc:	movt	r0, #0
    13d0:	bl	0 <puts>
    13d4:	mov	r0, r8
    13d8:	bl	0 <puts>
    13dc:	mov	r0, r5
    13e0:	bl	0 <puts>
    13e4:	mov	r0, r6
    13e8:	bl	0 <puts>
    13ec:	mov	r0, r7
    13f0:	bl	0 <puts>
    13f4:	mov	r0, r4
    13f8:	bl	0 <puts>
    13fc:	movw	r0, #0
    1400:	movt	r0, #0
    1404:	bl	0 <puts>
    1408:	movw	r0, #0
    140c:	movt	r0, #0
    1410:	bl	0 <puts>
    1414:	movw	r0, #0
    1418:	movt	r0, #0
    141c:	bl	0 <puts>
    1420:	movw	r0, #0
    1424:	movt	r0, #0
    1428:	bl	0 <puts>
    142c:	movw	r6, #0
    1430:	movt	r6, #0
    1434:	mov	r0, r6
    1438:	bl	0 <puts>
    143c:	movw	r0, #0
    1440:	movt	r0, #0
    1444:	bl	0 <puts>
    1448:	movw	r0, #0
    144c:	movt	r0, #0
    1450:	bl	0 <puts>
    1454:	movw	r0, #0
    1458:	movt	r0, #0
    145c:	bl	0 <puts>
    1460:	movw	r0, #0
    1464:	movt	r0, #0
    1468:	bl	0 <puts>
    146c:	movw	r0, #0
    1470:	movt	r0, #0
    1474:	bl	0 <puts>
    1478:	movw	r0, #0
    147c:	movt	r0, #0
    1480:	bl	0 <puts>
    1484:	movw	r0, #0
    1488:	movt	r0, #0
    148c:	bl	0 <puts>
    1490:	mov	r0, sl
    1494:	bl	0 <puts>
    1498:	movw	r0, #0
    149c:	movt	r0, #0
    14a0:	mov	r9, r0
    14a4:	bl	0 <puts>
    14a8:	movw	r0, #0
    14ac:	movt	r0, #0
    14b0:	mov	r8, r0
    14b4:	bl	0 <puts>
    14b8:	movw	r0, #0
    14bc:	movt	r0, #0
    14c0:	mov	r7, r0
    14c4:	bl	0 <puts>
    14c8:	mov	r0, #10
    14cc:	bl	0 <putchar>
    14d0:	movw	r0, #0
    14d4:	movt	r0, #0
    14d8:	bl	0 <puts>
    14dc:	movw	r0, #0
    14e0:	movt	r0, #0
    14e4:	bl	0 <puts>
    14e8:	movw	r0, #0
    14ec:	movt	r0, #0
    14f0:	bl	0 <puts>
    14f4:	movw	r4, #0
    14f8:	movt	r4, #0
    14fc:	mov	r0, r4
    1500:	bl	0 <puts>
    1504:	movw	r5, #0
    1508:	movt	r5, #0
    150c:	mov	r0, r5
    1510:	bl	0 <puts>
    1514:	movw	r0, #0
    1518:	movt	r0, #0
    151c:	bl	0 <puts>
    1520:	movw	r0, #0
    1524:	movt	r0, #0
    1528:	bl	0 <puts>
    152c:	movw	r0, #0
    1530:	movt	r0, #0
    1534:	bl	0 <puts>
    1538:	mov	r0, r6
    153c:	bl	0 <puts>
    1540:	movw	r0, #0
    1544:	movt	r0, #0
    1548:	bl	0 <puts>
    154c:	movw	r0, #0
    1550:	movt	r0, #0
    1554:	bl	0 <puts>
    1558:	movw	r0, #0
    155c:	movt	r0, #0
    1560:	bl	0 <puts>
    1564:	movw	r6, #0
    1568:	movt	r6, #0
    156c:	mov	r0, r6
    1570:	bl	0 <puts>
    1574:	mov	r0, sl
    1578:	bl	0 <puts>
    157c:	mov	r0, r9
    1580:	bl	0 <puts>
    1584:	mov	r0, r8
    1588:	bl	0 <puts>
    158c:	mov	r0, r7
    1590:	bl	0 <puts>
    1594:	mov	r0, #10
    1598:	bl	0 <putchar>
    159c:	movw	r0, #0
    15a0:	movt	r0, #0
    15a4:	bl	0 <puts>
    15a8:	movw	r0, #0
    15ac:	movt	r0, #0
    15b0:	bl	0 <puts>
    15b4:	movw	r0, #0
    15b8:	movt	r0, #0
    15bc:	bl	0 <puts>
    15c0:	mov	r0, r4
    15c4:	bl	0 <puts>
    15c8:	mov	r0, r5
    15cc:	bl	0 <puts>
    15d0:	movw	r0, #0
    15d4:	movt	r0, #0
    15d8:	bl	0 <puts>
    15dc:	movw	r0, #0
    15e0:	movt	r0, #0
    15e4:	bl	0 <puts>
    15e8:	movw	r0, #0
    15ec:	movt	r0, #0
    15f0:	bl	0 <puts>
    15f4:	movw	r0, #0
    15f8:	movt	r0, #0
    15fc:	bl	0 <puts>
    1600:	movw	r0, #0
    1604:	movt	r0, #0
    1608:	bl	0 <puts>
    160c:	movw	r0, #0
    1610:	movt	r0, #0
    1614:	bl	0 <puts>
    1618:	movw	r0, #0
    161c:	movt	r0, #0
    1620:	bl	0 <puts>
    1624:	movw	r0, #0
    1628:	movt	r0, #0
    162c:	bl	0 <puts>
    1630:	mov	r0, r6
    1634:	bl	0 <puts>
    1638:	mov	r0, sl
    163c:	bl	0 <puts>
    1640:	mov	r0, r9
    1644:	bl	0 <puts>
    1648:	mov	r0, r8
    164c:	bl	0 <puts>
    1650:	mov	r0, r7
    1654:	bl	0 <puts>
    1658:	mov	r0, #10
    165c:	bl	0 <putchar>
    1660:	movw	r0, #0
    1664:	movt	r0, #0
    1668:	bl	0 <puts>
    166c:	movw	r0, #0
    1670:	movt	r0, #0
    1674:	bl	0 <puts>
    1678:	movw	r0, #0
    167c:	movt	r0, #0
    1680:	bl	0 <puts>
    1684:	movw	r0, #0
    1688:	movt	r0, #0
    168c:	bl	0 <puts>
    1690:	movw	r0, #0
    1694:	movt	r0, #0
    1698:	bl	0 <puts>
    169c:	movw	r0, #0
    16a0:	movt	r0, #0
    16a4:	bl	0 <puts>
    16a8:	movw	r0, #0
    16ac:	movt	r0, #0
    16b0:	bl	0 <puts>
    16b4:	movw	r0, #0
    16b8:	movt	r0, #0
    16bc:	bl	0 <puts>
    16c0:	movw	r0, #0
    16c4:	movt	r0, #0
    16c8:	bl	0 <puts>
    16cc:	movw	r0, #0
    16d0:	movt	r0, #0
    16d4:	bl	0 <puts>
    16d8:	movw	r0, #0
    16dc:	movt	r0, #0
    16e0:	bl	0 <puts>
    16e4:	mov	r0, r6
    16e8:	bl	0 <puts>
    16ec:	movw	r0, #0
    16f0:	movt	r0, #0
    16f4:	bl	0 <puts>
    16f8:	movw	r0, #0
    16fc:	movt	r0, #0
    1700:	bl	0 <puts>
    1704:	movw	r0, #0
    1708:	movt	r0, #0
    170c:	bl	0 <puts>
    1710:	movw	r0, #0
    1714:	movt	r0, #0
    1718:	bl	0 <puts>
    171c:	movw	r0, #0
    1720:	movt	r0, #0
    1724:	bl	0 <puts>
    1728:	movw	r0, #0
    172c:	movt	r0, #0
    1730:	bl	0 <puts>
    1734:	mov	r0, #10
    1738:	bl	0 <putchar>
    173c:	movw	r0, #0
    1740:	movt	r0, #0
    1744:	bl	0 <puts>
    1748:	movw	r0, #0
    174c:	movt	r0, #0
    1750:	bl	0 <puts>
    1754:	mov	r0, #10
    1758:	bl	0 <putchar>
    175c:	movw	r0, #0
    1760:	movt	r0, #0
    1764:	bl	0 <puts>
    1768:	movw	r0, #0
    176c:	movt	r0, #0
    1770:	bl	0 <puts>
    1774:	mov	r0, #10
    1778:	bl	0 <putchar>
    177c:	movw	r0, #0
    1780:	movt	r0, #0
    1784:	bl	0 <puts>
    1788:	movw	r0, #0
    178c:	movt	r0, #0
    1790:	bl	0 <puts>
    1794:	movw	r0, #0
    1798:	movt	r0, #0
    179c:	bl	0 <puts>
    17a0:	movw	r0, #0
    17a4:	movt	r0, #0
    17a8:	bl	0 <puts>
    17ac:	movw	r0, #0
    17b0:	movt	r0, #0
    17b4:	bl	0 <puts>
    17b8:	movw	r0, #0
    17bc:	movt	r0, #0
    17c0:	bl	0 <puts>
    17c4:	movw	r0, #0
    17c8:	movt	r0, #0
    17cc:	bl	0 <puts>
    17d0:	mov	r0, #10
    17d4:	sub	sp, fp, #28
    17d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17dc:	b	0 <putchar>

000017e0 <print_version>:
    17e0:	push	{fp, lr}
    17e4:	mov	fp, sp
    17e8:	bl	0 <coda_get_libcoda_version>
    17ec:	mov	r1, r0
    17f0:	movw	r0, #0
    17f4:	movt	r0, #0
    17f8:	bl	0 <printf>
    17fc:	movw	r0, #0
    1800:	movt	r0, #0
    1804:	bl	0 <puts>
    1808:	mov	r0, #10
    180c:	pop	{fp, lr}
    1810:	b	0 <putchar>
