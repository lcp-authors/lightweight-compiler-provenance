
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/zlib/crc32.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_crc_table>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	ldr	r0, [pc, #8]	; 20 <coda_get_crc_table+0x20>
  14:	ldr	lr, [sp, #4]
  18:	add	sp, sp, #8
  1c:	bx	lr
  20:	.word	0x00000000

00000024 <coda_crc32>:
  24:	mov	ip, sp
  28:	sub	sp, sp, #24
  2c:	str	ip, [sp]
  30:	str	lr, [sp, #4]
  34:	str	r4, [sp, #8]
  38:	cmp	r1, #0
  3c:	bne	48 <coda_crc32+0x24>
  40:	mov	r0, #0
  44:	b	1a4 <coda_crc32+0x180>
  48:	mov	r3, #1
  4c:	cmp	r3, #0
  50:	beq	78 <coda_crc32+0x54>
  54:	mov	r3, #1
  58:	str	r3, [sp, #16]
  5c:	ldrb	ip, [sp, #16]
  60:	cmp	ip, #0
  64:	bne	70 <coda_crc32+0x4c>
  68:	bl	574 <crc32_big>
  6c:	b	1a4 <coda_crc32+0x180>
  70:	bl	1b8 <crc32_little>
  74:	b	1a4 <coda_crc32+0x180>
  78:	mvn	r4, r0
  7c:	cmp	r2, #8
  80:	bcc	16c <coda_crc32+0x148>
  84:	add	r3, r1, #1
  88:	ldr	r0, [pc, #292]	; 1b4 <coda_crc32+0x190>
  8c:	ldrb	ip, [r1]
  90:	eor	ip, r4, ip
  94:	and	ip, ip, #255	; 0xff
  98:	ldr	r0, [r0, ip, lsl #2]
  9c:	eor	r1, r0, r4, lsr #8
  a0:	add	r0, r3, #1
  a4:	ldr	ip, [pc, #264]	; 1b4 <coda_crc32+0x190>
  a8:	ldrb	r3, [r3]
  ac:	eor	r3, r1, r3
  b0:	and	r3, r3, #255	; 0xff
  b4:	ldr	r3, [ip, r3, lsl #2]
  b8:	eor	r3, r3, r1, lsr #8
  bc:	add	r1, r0, #1
  c0:	ldr	r4, [pc, #236]	; 1b4 <coda_crc32+0x190>
  c4:	ldrb	ip, [r0]
  c8:	eor	ip, r3, ip
  cc:	and	ip, ip, #255	; 0xff
  d0:	ldr	ip, [r4, ip, lsl #2]
  d4:	eor	r0, ip, r3, lsr #8
  d8:	add	r3, r1, #1
  dc:	ldr	r4, [pc, #208]	; 1b4 <coda_crc32+0x190>
  e0:	ldrb	ip, [r1]
  e4:	eor	ip, r0, ip
  e8:	and	r1, ip, #255	; 0xff
  ec:	ldr	ip, [r4, r1, lsl #2]
  f0:	eor	r0, ip, r0, lsr #8
  f4:	add	ip, r3, #1
  f8:	ldr	r1, [pc, #180]	; 1b4 <coda_crc32+0x190>
  fc:	ldrb	r3, [r3]
 100:	eor	r3, r0, r3
 104:	and	r3, r3, #255	; 0xff
 108:	ldr	r3, [r1, r3, lsl #2]
 10c:	eor	r4, r3, r0, lsr #8
 110:	add	r1, ip, #1
 114:	ldr	r0, [pc, #152]	; 1b4 <coda_crc32+0x190>
 118:	ldrb	r3, [ip]
 11c:	eor	r3, r4, r3
 120:	and	ip, r3, #255	; 0xff
 124:	ldr	r3, [r0, ip, lsl #2]
 128:	eor	r4, r3, r4, lsr #8
 12c:	add	r0, r1, #1
 130:	ldr	ip, [pc, #124]	; 1b4 <coda_crc32+0x190>
 134:	ldrb	r1, [r1]
 138:	eor	r1, r4, r1
 13c:	and	r3, r1, #255	; 0xff
 140:	ldr	ip, [ip, r3, lsl #2]
 144:	eor	r4, ip, r4, lsr #8
 148:	add	r1, r0, #1
 14c:	ldr	r3, [pc, #96]	; 1b4 <coda_crc32+0x190>
 150:	ldrb	r0, [r0]
 154:	eor	ip, r4, r0
 158:	and	r0, ip, #255	; 0xff
 15c:	ldr	r3, [r3, r0, lsl #2]
 160:	eor	r4, r3, r4, lsr #8
 164:	sub	r2, r2, #8
 168:	b	7c <coda_crc32+0x58>
 16c:	cmp	r2, #0
 170:	beq	1a0 <coda_crc32+0x17c>
 174:	mov	r3, r1
 178:	add	r1, r3, #1
 17c:	ldr	ip, [pc, #48]	; 1b4 <coda_crc32+0x190>
 180:	ldrb	r0, [r3]
 184:	eor	r3, r4, r0
 188:	and	r3, r3, #255	; 0xff
 18c:	ldr	r3, [ip, r3, lsl #2]
 190:	eor	r4, r3, r4, lsr #8
 194:	sub	r2, r2, #1
 198:	cmp	r2, #0
 19c:	bne	174 <coda_crc32+0x150>
 1a0:	mvn	r0, r4
 1a4:	ldr	r4, [sp, #8]
 1a8:	ldr	lr, [sp, #4]
 1ac:	add	sp, sp, #24
 1b0:	bx	lr
 1b4:	.word	0x00000000

000001b8 <crc32_little>:
 1b8:	mov	ip, sp
 1bc:	sub	sp, sp, #16
 1c0:	str	ip, [sp]
 1c4:	str	lr, [sp, #4]
 1c8:	str	r4, [sp, #8]
 1cc:	str	r5, [sp, #12]
 1d0:	mvn	r4, r0
 1d4:	cmp	r2, #0
 1d8:	beq	1f0 <crc32_little+0x38>
 1dc:	and	ip, r1, #3
 1e0:	cmp	ip, #0
 1e4:	movne	r3, #1
 1e8:	moveq	r3, #0
 1ec:	b	1f4 <crc32_little+0x3c>
 1f0:	mov	r3, #0
 1f4:	cmp	r3, #0
 1f8:	beq	224 <crc32_little+0x6c>
 1fc:	mov	r0, r1
 200:	add	r1, r0, #1
 204:	ldr	ip, [pc, #860]	; 568 <crc32_little+0x3b0>
 208:	ldrb	r3, [r0]
 20c:	eor	r0, r4, r3
 210:	and	r3, r0, #255	; 0xff
 214:	ldr	ip, [ip, r3, lsl #2]
 218:	eor	r4, ip, r4, lsr #8
 21c:	sub	r2, r2, #1
 220:	b	1d4 <crc32_little+0x1c>
 224:	cmp	r2, #32
 228:	bcc	4b4 <crc32_little+0x2fc>
 22c:	add	r3, r1, #4
 230:	ldr	r1, [r1]
 234:	eor	r4, r4, r1
 238:	ldr	ip, [pc, #812]	; 56c <crc32_little+0x3b4>
 23c:	and	r1, r4, #255	; 0xff
 240:	ldr	r1, [ip, r1, lsl #2]
 244:	ldr	ip, [pc, #804]	; 570 <crc32_little+0x3b8>
 248:	lsr	r0, r4, #8
 24c:	and	r0, r0, #255	; 0xff
 250:	ldr	ip, [ip, r0, lsl #2]
 254:	eor	ip, r1, ip
 258:	ldr	r0, [pc, #772]	; 564 <crc32_little+0x3ac>
 25c:	lsr	r1, r4, #16
 260:	and	r1, r1, #255	; 0xff
 264:	ldr	r0, [r0, r1, lsl #2]
 268:	eor	ip, ip, r0
 26c:	ldr	r0, [pc, #756]	; 568 <crc32_little+0x3b0>
 270:	lsr	r1, r4, #24
 274:	ldr	r1, [r0, r1, lsl #2]
 278:	eor	r0, ip, r1
 27c:	add	ip, r3, #4
 280:	ldr	r1, [r3]
 284:	eor	r4, r0, r1
 288:	ldr	r1, [pc, #732]	; 56c <crc32_little+0x3b4>
 28c:	and	r3, r4, #255	; 0xff
 290:	ldr	r5, [r1, r3, lsl #2]
 294:	ldr	r0, [pc, #724]	; 570 <crc32_little+0x3b8>
 298:	lsr	r1, r4, #8
 29c:	and	r3, r1, #255	; 0xff
 2a0:	ldr	r3, [r0, r3, lsl #2]
 2a4:	eor	r1, r5, r3
 2a8:	ldr	r3, [pc, #692]	; 564 <crc32_little+0x3ac>
 2ac:	lsr	r0, r4, #16
 2b0:	and	r0, r0, #255	; 0xff
 2b4:	ldr	r0, [r3, r0, lsl #2]
 2b8:	eor	r0, r1, r0
 2bc:	ldr	r1, [pc, #676]	; 568 <crc32_little+0x3b0>
 2c0:	lsr	r3, r4, #24
 2c4:	ldr	r3, [r1, r3, lsl #2]
 2c8:	eor	r0, r0, r3
 2cc:	add	r1, ip, #4
 2d0:	ldr	r3, [ip]
 2d4:	eor	r5, r0, r3
 2d8:	ldr	r3, [pc, #652]	; 56c <crc32_little+0x3b4>
 2dc:	and	ip, r5, #255	; 0xff
 2e0:	ldr	r4, [r3, ip, lsl #2]
 2e4:	ldr	ip, [pc, #644]	; 570 <crc32_little+0x3b8>
 2e8:	lsr	r0, r5, #8
 2ec:	and	r3, r0, #255	; 0xff
 2f0:	ldr	ip, [ip, r3, lsl #2]
 2f4:	eor	ip, r4, ip
 2f8:	ldr	r0, [pc, #612]	; 564 <crc32_little+0x3ac>
 2fc:	lsr	r3, r5, #16
 300:	and	r3, r3, #255	; 0xff
 304:	ldr	r3, [r0, r3, lsl #2]
 308:	eor	r4, ip, r3
 30c:	ldr	ip, [pc, #596]	; 568 <crc32_little+0x3b0>
 310:	lsr	r0, r5, #24
 314:	ldr	r3, [ip, r0, lsl #2]
 318:	eor	r0, r4, r3
 31c:	add	ip, r1, #4
 320:	ldr	r3, [r1]
 324:	eor	r4, r0, r3
 328:	ldr	r0, [pc, #572]	; 56c <crc32_little+0x3b4>
 32c:	and	r3, r4, #255	; 0xff
 330:	ldr	r3, [r0, r3, lsl #2]
 334:	ldr	r5, [pc, #564]	; 570 <crc32_little+0x3b8>
 338:	lsr	r1, r4, #8
 33c:	and	r0, r1, #255	; 0xff
 340:	ldr	r0, [r5, r0, lsl #2]
 344:	eor	r0, r3, r0
 348:	ldr	r3, [pc, #532]	; 564 <crc32_little+0x3ac>
 34c:	lsr	r1, r4, #16
 350:	and	r1, r1, #255	; 0xff
 354:	ldr	r1, [r3, r1, lsl #2]
 358:	eor	r3, r0, r1
 35c:	ldr	r0, [pc, #516]	; 568 <crc32_little+0x3b0>
 360:	lsr	r1, r4, #24
 364:	ldr	r1, [r0, r1, lsl #2]
 368:	eor	r0, r3, r1
 36c:	add	r3, ip, #4
 370:	ldr	r1, [ip]
 374:	eor	r4, r0, r1
 378:	ldr	r0, [pc, #492]	; 56c <crc32_little+0x3b4>
 37c:	and	ip, r4, #255	; 0xff
 380:	ldr	ip, [r0, ip, lsl #2]
 384:	ldr	r1, [pc, #484]	; 570 <crc32_little+0x3b8>
 388:	lsr	r0, r4, #8
 38c:	and	r0, r0, #255	; 0xff
 390:	ldr	r0, [r1, r0, lsl #2]
 394:	eor	r0, ip, r0
 398:	ldr	r1, [pc, #452]	; 564 <crc32_little+0x3ac>
 39c:	lsr	ip, r4, #16
 3a0:	and	ip, ip, #255	; 0xff
 3a4:	ldr	ip, [r1, ip, lsl #2]
 3a8:	eor	ip, r0, ip
 3ac:	ldr	r0, [pc, #436]	; 568 <crc32_little+0x3b0>
 3b0:	lsr	r1, r4, #24
 3b4:	ldr	r1, [r0, r1, lsl #2]
 3b8:	eor	r1, ip, r1
 3bc:	add	r0, r3, #4
 3c0:	ldr	r3, [r3]
 3c4:	eor	r4, r1, r3
 3c8:	ldr	r1, [pc, #412]	; 56c <crc32_little+0x3b4>
 3cc:	and	r3, r4, #255	; 0xff
 3d0:	ldr	ip, [r1, r3, lsl #2]
 3d4:	ldr	r3, [pc, #404]	; 570 <crc32_little+0x3b8>
 3d8:	lsr	r1, r4, #8
 3dc:	and	r1, r1, #255	; 0xff
 3e0:	ldr	r3, [r3, r1, lsl #2]
 3e4:	eor	r1, ip, r3
 3e8:	ldr	r3, [pc, #372]	; 564 <crc32_little+0x3ac>
 3ec:	lsr	ip, r4, #16
 3f0:	and	ip, ip, #255	; 0xff
 3f4:	ldr	r3, [r3, ip, lsl #2]
 3f8:	eor	ip, r1, r3
 3fc:	ldr	r3, [pc, #356]	; 568 <crc32_little+0x3b0>
 400:	lsr	r1, r4, #24
 404:	ldr	r1, [r3, r1, lsl #2]
 408:	eor	r1, ip, r1
 40c:	add	ip, r0, #4
 410:	ldr	r0, [r0]
 414:	eor	r4, r1, r0
 418:	ldr	r0, [pc, #332]	; 56c <crc32_little+0x3b4>
 41c:	and	r1, r4, #255	; 0xff
 420:	ldr	r5, [r0, r1, lsl #2]
 424:	ldr	r3, [pc, #324]	; 570 <crc32_little+0x3b8>
 428:	lsr	r0, r4, #8
 42c:	and	r1, r0, #255	; 0xff
 430:	ldr	r3, [r3, r1, lsl #2]
 434:	eor	r1, r5, r3
 438:	ldr	r3, [pc, #292]	; 564 <crc32_little+0x3ac>
 43c:	lsr	r0, r4, #16
 440:	and	r0, r0, #255	; 0xff
 444:	ldr	r0, [r3, r0, lsl #2]
 448:	eor	r1, r1, r0
 44c:	ldr	r0, [pc, #276]	; 568 <crc32_little+0x3b0>
 450:	lsr	r3, r4, #24
 454:	ldr	r3, [r0, r3, lsl #2]
 458:	eor	r3, r1, r3
 45c:	add	r1, ip, #4
 460:	ldr	ip, [ip]
 464:	eor	r4, r3, ip
 468:	ldr	r0, [pc, #252]	; 56c <crc32_little+0x3b4>
 46c:	and	ip, r4, #255	; 0xff
 470:	ldr	r3, [r0, ip, lsl #2]
 474:	ldr	r0, [pc, #244]	; 570 <crc32_little+0x3b8>
 478:	lsr	ip, r4, #8
 47c:	and	ip, ip, #255	; 0xff
 480:	ldr	ip, [r0, ip, lsl #2]
 484:	eor	ip, r3, ip
 488:	ldr	r0, [pc, #212]	; 564 <crc32_little+0x3ac>
 48c:	lsr	r3, r4, #16
 490:	and	r3, r3, #255	; 0xff
 494:	ldr	r3, [r0, r3, lsl #2]
 498:	eor	r0, ip, r3
 49c:	ldr	r3, [pc, #196]	; 568 <crc32_little+0x3b0>
 4a0:	lsr	ip, r4, #24
 4a4:	ldr	ip, [r3, ip, lsl #2]
 4a8:	eor	r4, r0, ip
 4ac:	sub	r2, r2, #32
 4b0:	b	224 <crc32_little+0x6c>
 4b4:	cmp	r2, #4
 4b8:	bcc	518 <crc32_little+0x360>
 4bc:	mov	r3, r1
 4c0:	add	r1, r3, #4
 4c4:	ldr	r3, [r3]
 4c8:	eor	r4, r4, r3
 4cc:	ldr	r3, [pc, #152]	; 56c <crc32_little+0x3b4>
 4d0:	and	ip, r4, #255	; 0xff
 4d4:	ldr	r0, [r3, ip, lsl #2]
 4d8:	ldr	r3, [pc, #144]	; 570 <crc32_little+0x3b8>
 4dc:	lsr	ip, r4, #8
 4e0:	and	ip, ip, #255	; 0xff
 4e4:	ldr	r3, [r3, ip, lsl #2]
 4e8:	eor	r5, r0, r3
 4ec:	ldr	r3, [pc, #112]	; 564 <crc32_little+0x3ac>
 4f0:	lsr	ip, r4, #16
 4f4:	and	r0, ip, #255	; 0xff
 4f8:	ldr	r0, [r3, r0, lsl #2]
 4fc:	eor	r3, r5, r0
 500:	ldr	ip, [pc, #96]	; 568 <crc32_little+0x3b0>
 504:	lsr	r0, r4, #24
 508:	ldr	ip, [ip, r0, lsl #2]
 50c:	eor	r4, r3, ip
 510:	sub	r2, r2, #4
 514:	b	4b4 <crc32_little+0x2fc>
 518:	cmp	r2, #0
 51c:	beq	54c <crc32_little+0x394>
 520:	mov	r3, r1
 524:	add	r1, r3, #1
 528:	ldr	r0, [pc, #56]	; 568 <crc32_little+0x3b0>
 52c:	ldrb	ip, [r3]
 530:	eor	ip, r4, ip
 534:	and	r3, ip, #255	; 0xff
 538:	ldr	ip, [r0, r3, lsl #2]
 53c:	eor	r4, ip, r4, lsr #8
 540:	sub	r2, r2, #1
 544:	cmp	r2, #0
 548:	bne	520 <crc32_little+0x368>
 54c:	mvn	r0, r4
 550:	ldr	r4, [sp, #8]
 554:	ldr	r5, [sp, #12]
 558:	ldr	lr, [sp, #4]
 55c:	add	sp, sp, #16
 560:	bx	lr
 564:	.word	0x00000400
 568:	.word	0x00000000
 56c:	.word	0x00000c00
 570:	.word	0x00000800

00000574 <crc32_big>:
 574:	mov	ip, sp
 578:	sub	sp, sp, #16
 57c:	str	ip, [sp]
 580:	str	lr, [sp, #4]
 584:	str	r4, [sp, #8]
 588:	str	r5, [sp, #12]
 58c:	lsr	r3, r0, #24
 590:	and	ip, r3, #255	; 0xff
 594:	lsr	r3, r0, #8
 598:	and	r3, r3, #65280	; 0xff00
 59c:	add	ip, ip, r3
 5a0:	and	r3, r0, #65280	; 0xff00
 5a4:	add	r3, ip, r3, lsl #8
 5a8:	and	ip, r0, #255	; 0xff
 5ac:	add	r0, r3, ip, lsl #24
 5b0:	mvn	r0, r0
 5b4:	cmp	r2, #0
 5b8:	beq	5d0 <crc32_big+0x5c>
 5bc:	and	r3, r1, #3
 5c0:	cmp	r3, #0
 5c4:	movne	r3, #1
 5c8:	moveq	r3, #0
 5cc:	b	5d4 <crc32_big+0x60>
 5d0:	mov	r3, #0
 5d4:	cmp	r3, #0
 5d8:	beq	600 <crc32_big+0x8c>
 5dc:	mov	r3, r1
 5e0:	add	r1, r3, #1
 5e4:	ldr	ip, [pc, #900]	; 970 <crc32_big+0x3fc>
 5e8:	ldrb	r3, [r3]
 5ec:	eor	r3, r3, r0, lsr #24
 5f0:	ldr	r3, [ip, r3, lsl #2]
 5f4:	eor	r0, r3, r0, lsl #8
 5f8:	sub	r2, r2, #1
 5fc:	b	5b4 <crc32_big+0x40>
 600:	sub	r3, r1, #4
 604:	cmp	r2, #32
 608:	bcc	894 <crc32_big+0x320>
 60c:	add	ip, r3, #4
 610:	ldr	r3, [ip]
 614:	eor	r4, r0, r3
 618:	ldr	r0, [pc, #848]	; 970 <crc32_big+0x3fc>
 61c:	and	r3, r4, #255	; 0xff
 620:	ldr	r0, [r0, r3, lsl #2]
 624:	ldr	r1, [pc, #824]	; 964 <crc32_big+0x3f0>
 628:	lsr	r3, r4, #8
 62c:	and	r3, r3, #255	; 0xff
 630:	ldr	r1, [r1, r3, lsl #2]
 634:	eor	r3, r0, r1
 638:	ldr	r1, [pc, #812]	; 96c <crc32_big+0x3f8>
 63c:	lsr	r0, r4, #16
 640:	and	r0, r0, #255	; 0xff
 644:	ldr	r1, [r1, r0, lsl #2]
 648:	eor	r1, r3, r1
 64c:	ldr	r3, [pc, #788]	; 968 <crc32_big+0x3f4>
 650:	lsr	r0, r4, #24
 654:	ldr	r3, [r3, r0, lsl #2]
 658:	eor	r1, r1, r3
 65c:	add	r3, ip, #4
 660:	ldr	r0, [r3]
 664:	eor	r4, r1, r0
 668:	ldr	r1, [pc, #768]	; 970 <crc32_big+0x3fc>
 66c:	and	ip, r4, #255	; 0xff
 670:	ldr	r1, [r1, ip, lsl #2]
 674:	ldr	r0, [pc, #744]	; 964 <crc32_big+0x3f0>
 678:	lsr	ip, r4, #8
 67c:	and	ip, ip, #255	; 0xff
 680:	ldr	ip, [r0, ip, lsl #2]
 684:	eor	r1, r1, ip
 688:	ldr	ip, [pc, #732]	; 96c <crc32_big+0x3f8>
 68c:	lsr	r0, r4, #16
 690:	and	r0, r0, #255	; 0xff
 694:	ldr	ip, [ip, r0, lsl #2]
 698:	eor	ip, r1, ip
 69c:	ldr	r1, [pc, #708]	; 968 <crc32_big+0x3f4>
 6a0:	lsr	r0, r4, #24
 6a4:	ldr	r0, [r1, r0, lsl #2]
 6a8:	eor	ip, ip, r0
 6ac:	add	r0, r3, #4
 6b0:	ldr	r1, [r0]
 6b4:	eor	r5, ip, r1
 6b8:	ldr	r1, [pc, #688]	; 970 <crc32_big+0x3fc>
 6bc:	and	ip, r5, #255	; 0xff
 6c0:	ldr	ip, [r1, ip, lsl #2]
 6c4:	ldr	r1, [pc, #664]	; 964 <crc32_big+0x3f0>
 6c8:	lsr	r3, r5, #8
 6cc:	and	r3, r3, #255	; 0xff
 6d0:	ldr	r3, [r1, r3, lsl #2]
 6d4:	eor	r4, ip, r3
 6d8:	ldr	ip, [pc, #652]	; 96c <crc32_big+0x3f8>
 6dc:	lsr	r3, r5, #16
 6e0:	and	r1, r3, #255	; 0xff
 6e4:	ldr	ip, [ip, r1, lsl #2]
 6e8:	eor	r1, r4, ip
 6ec:	ldr	ip, [pc, #628]	; 968 <crc32_big+0x3f4>
 6f0:	lsr	r3, r5, #24
 6f4:	ldr	r3, [ip, r3, lsl #2]
 6f8:	eor	r1, r1, r3
 6fc:	add	r0, r0, #4
 700:	ldr	r3, [r0]
 704:	eor	r4, r1, r3
 708:	ldr	ip, [pc, #608]	; 970 <crc32_big+0x3fc>
 70c:	and	r3, r4, #255	; 0xff
 710:	ldr	ip, [ip, r3, lsl #2]
 714:	ldr	r1, [pc, #584]	; 964 <crc32_big+0x3f0>
 718:	lsr	r3, r4, #8
 71c:	and	r3, r3, #255	; 0xff
 720:	ldr	r1, [r1, r3, lsl #2]
 724:	eor	ip, ip, r1
 728:	ldr	r5, [pc, #572]	; 96c <crc32_big+0x3f8>
 72c:	lsr	r3, r4, #16
 730:	and	r1, r3, #255	; 0xff
 734:	ldr	r1, [r5, r1, lsl #2]
 738:	eor	r3, ip, r1
 73c:	ldr	r1, [pc, #548]	; 968 <crc32_big+0x3f4>
 740:	lsr	ip, r4, #24
 744:	ldr	ip, [r1, ip, lsl #2]
 748:	eor	r1, r3, ip
 74c:	add	r3, r0, #4
 750:	ldr	ip, [r3]
 754:	eor	r5, r1, ip
 758:	ldr	r1, [pc, #528]	; 970 <crc32_big+0x3fc>
 75c:	and	ip, r5, #255	; 0xff
 760:	ldr	r1, [r1, ip, lsl #2]
 764:	ldr	r0, [pc, #504]	; 964 <crc32_big+0x3f0>
 768:	lsr	ip, r5, #8
 76c:	and	ip, ip, #255	; 0xff
 770:	ldr	ip, [r0, ip, lsl #2]
 774:	eor	r0, r1, ip
 778:	ldr	r4, [pc, #492]	; 96c <crc32_big+0x3f8>
 77c:	lsr	ip, r5, #16
 780:	and	r1, ip, #255	; 0xff
 784:	ldr	r1, [r4, r1, lsl #2]
 788:	eor	r1, r0, r1
 78c:	ldr	r0, [pc, #468]	; 968 <crc32_big+0x3f4>
 790:	lsr	ip, r5, #24
 794:	ldr	ip, [r0, ip, lsl #2]
 798:	eor	r0, r1, ip
 79c:	add	r1, r3, #4
 7a0:	ldr	ip, [r1]
 7a4:	eor	r4, r0, ip
 7a8:	ldr	r0, [pc, #448]	; 970 <crc32_big+0x3fc>
 7ac:	and	r3, r4, #255	; 0xff
 7b0:	ldr	r0, [r0, r3, lsl #2]
 7b4:	ldr	ip, [pc, #424]	; 964 <crc32_big+0x3f0>
 7b8:	lsr	r3, r4, #8
 7bc:	and	r3, r3, #255	; 0xff
 7c0:	ldr	ip, [ip, r3, lsl #2]
 7c4:	eor	ip, r0, ip
 7c8:	ldr	r3, [pc, #412]	; 96c <crc32_big+0x3f8>
 7cc:	lsr	r0, r4, #16
 7d0:	and	r0, r0, #255	; 0xff
 7d4:	ldr	r3, [r3, r0, lsl #2]
 7d8:	eor	r3, ip, r3
 7dc:	ldr	ip, [pc, #388]	; 968 <crc32_big+0x3f4>
 7e0:	lsr	r0, r4, #24
 7e4:	ldr	ip, [ip, r0, lsl #2]
 7e8:	eor	r3, r3, ip
 7ec:	add	ip, r1, #4
 7f0:	ldr	r0, [ip]
 7f4:	eor	r4, r3, r0
 7f8:	ldr	r1, [pc, #368]	; 970 <crc32_big+0x3fc>
 7fc:	and	r3, r4, #255	; 0xff
 800:	ldr	r3, [r1, r3, lsl #2]
 804:	ldr	r1, [pc, #344]	; 964 <crc32_big+0x3f0>
 808:	lsr	r0, r4, #8
 80c:	and	r0, r0, #255	; 0xff
 810:	ldr	r0, [r1, r0, lsl #2]
 814:	eor	r1, r3, r0
 818:	ldr	r5, [pc, #332]	; 96c <crc32_big+0x3f8>
 81c:	lsr	r3, r4, #16
 820:	and	r0, r3, #255	; 0xff
 824:	ldr	r3, [r5, r0, lsl #2]
 828:	eor	r1, r1, r3
 82c:	ldr	r0, [pc, #308]	; 968 <crc32_big+0x3f4>
 830:	lsr	r3, r4, #24
 834:	ldr	r0, [r0, r3, lsl #2]
 838:	eor	r0, r1, r0
 83c:	add	r3, ip, #4
 840:	ldr	ip, [r3]
 844:	eor	r4, r0, ip
 848:	ldr	ip, [pc, #288]	; 970 <crc32_big+0x3fc>
 84c:	and	r0, r4, #255	; 0xff
 850:	ldr	ip, [ip, r0, lsl #2]
 854:	ldr	r1, [pc, #264]	; 964 <crc32_big+0x3f0>
 858:	lsr	r0, r4, #8
 85c:	and	r0, r0, #255	; 0xff
 860:	ldr	r0, [r1, r0, lsl #2]
 864:	eor	r1, ip, r0
 868:	ldr	r5, [pc, #252]	; 96c <crc32_big+0x3f8>
 86c:	lsr	ip, r4, #16
 870:	and	r0, ip, #255	; 0xff
 874:	ldr	ip, [r5, r0, lsl #2]
 878:	eor	r0, r1, ip
 87c:	ldr	r1, [pc, #228]	; 968 <crc32_big+0x3f4>
 880:	lsr	ip, r4, #24
 884:	ldr	ip, [r1, ip, lsl #2]
 888:	eor	r0, r0, ip
 88c:	sub	r2, r2, #32
 890:	b	604 <crc32_big+0x90>
 894:	cmp	r2, #4
 898:	bcc	8f4 <crc32_big+0x380>
 89c:	add	r3, r3, #4
 8a0:	ldr	r1, [r3]
 8a4:	eor	r5, r0, r1
 8a8:	ldr	ip, [pc, #192]	; 970 <crc32_big+0x3fc>
 8ac:	and	r0, r5, #255	; 0xff
 8b0:	ldr	r0, [ip, r0, lsl #2]
 8b4:	ldr	r4, [pc, #168]	; 964 <crc32_big+0x3f0>
 8b8:	lsr	ip, r5, #8
 8bc:	and	r1, ip, #255	; 0xff
 8c0:	ldr	r1, [r4, r1, lsl #2]
 8c4:	eor	ip, r0, r1
 8c8:	ldr	r4, [pc, #156]	; 96c <crc32_big+0x3f8>
 8cc:	lsr	r0, r5, #16
 8d0:	and	r1, r0, #255	; 0xff
 8d4:	ldr	r0, [r4, r1, lsl #2]
 8d8:	eor	r0, ip, r0
 8dc:	ldr	r1, [pc, #132]	; 968 <crc32_big+0x3f4>
 8e0:	lsr	ip, r5, #24
 8e4:	ldr	ip, [r1, ip, lsl #2]
 8e8:	eor	r0, r0, ip
 8ec:	sub	r2, r2, #4
 8f0:	b	894 <crc32_big+0x320>
 8f4:	add	r3, r3, #4
 8f8:	cmp	r2, #0
 8fc:	beq	928 <crc32_big+0x3b4>
 900:	mov	ip, r3
 904:	add	r3, ip, #1
 908:	ldr	r1, [pc, #96]	; 970 <crc32_big+0x3fc>
 90c:	ldrb	ip, [ip]
 910:	eor	ip, ip, r0, lsr #24
 914:	ldr	ip, [r1, ip, lsl #2]
 918:	eor	r0, ip, r0, lsl #8
 91c:	sub	r2, r2, #1
 920:	cmp	r2, #0
 924:	bne	900 <crc32_big+0x38c>
 928:	mvn	r2, r0
 92c:	lsr	r0, r2, #24
 930:	and	r1, r0, #255	; 0xff
 934:	lsr	r3, r2, #8
 938:	and	r3, r3, #65280	; 0xff00
 93c:	add	r1, r1, r3
 940:	and	r0, r2, #65280	; 0xff00
 944:	add	r3, r1, r0, lsl #8
 948:	and	r2, r2, #255	; 0xff
 94c:	add	r0, r3, r2, lsl #24
 950:	ldr	r4, [sp, #8]
 954:	ldr	r5, [sp, #12]
 958:	ldr	lr, [sp, #4]
 95c:	add	sp, sp, #16
 960:	bx	lr
 964:	.word	0x00001400
 968:	.word	0x00001c00
 96c:	.word	0x00001800
 970:	.word	0x00001000

00000974 <gf2_matrix_times>:
 974:	mov	ip, sp
 978:	sub	sp, sp, #8
 97c:	str	ip, [sp]
 980:	str	lr, [sp, #4]
 984:	mov	r2, #0
 988:	cmp	r1, #0
 98c:	beq	9b0 <gf2_matrix_times+0x3c>
 990:	and	r3, r1, #1
 994:	cmp	r3, #0
 998:	beq	9a4 <gf2_matrix_times+0x30>
 99c:	ldr	r3, [r0]
 9a0:	eor	r2, r2, r3
 9a4:	lsr	r1, r1, #1
 9a8:	add	r0, r0, #4
 9ac:	b	988 <gf2_matrix_times+0x14>
 9b0:	mov	r0, r2
 9b4:	ldr	lr, [sp, #4]
 9b8:	add	sp, sp, #8
 9bc:	bx	lr

000009c0 <gf2_matrix_square>:
 9c0:	mov	ip, sp
 9c4:	sub	sp, sp, #24
 9c8:	str	ip, [sp]
 9cc:	str	lr, [sp, #4]
 9d0:	str	r4, [sp, #8]
 9d4:	str	r5, [sp, #12]
 9d8:	str	r6, [sp, #16]
 9dc:	mov	r4, r1
 9e0:	mov	r5, r0
 9e4:	mov	r6, #0
 9e8:	cmp	r6, #32
 9ec:	bge	a08 <gf2_matrix_square+0x48>
 9f0:	ldr	r1, [r4, r6, lsl #2]
 9f4:	mov	r0, r4
 9f8:	bl	974 <gf2_matrix_times>
 9fc:	str	r0, [r5, r6, lsl #2]
 a00:	add	r6, r6, #1
 a04:	b	9e8 <gf2_matrix_square+0x28>
 a08:	ldr	r4, [sp, #8]
 a0c:	ldr	r5, [sp, #12]
 a10:	ldr	r6, [sp, #16]
 a14:	ldr	lr, [sp, #4]
 a18:	add	sp, sp, #24
 a1c:	bx	lr

00000a20 <crc32_combine_>:
 a20:	mov	ip, sp
 a24:	sub	sp, sp, #280	; 0x118
 a28:	str	ip, [sp]
 a2c:	str	lr, [sp, #4]
 a30:	str	r4, [sp, #8]
 a34:	str	r5, [sp, #12]
 a38:	str	r6, [sp, #16]
 a3c:	mov	r6, r2
 a40:	mov	r5, r1
 a44:	mov	r4, r0
 a48:	cmp	r6, #0
 a4c:	ble	b04 <crc32_combine_+0xe4>
 a50:	movw	r1, #33568	; 0x8320
 a54:	movt	r1, #60856	; 0xedb8
 a58:	str	r1, [sp, #152]	; 0x98
 a5c:	mov	r0, #1
 a60:	mov	ip, #1
 a64:	cmp	ip, #32
 a68:	bge	a80 <crc32_combine_+0x60>
 a6c:	add	r1, sp, #152	; 0x98
 a70:	str	r0, [r1, ip, lsl #2]
 a74:	lsl	r0, r0, #1
 a78:	add	ip, ip, #1
 a7c:	b	a64 <crc32_combine_+0x44>
 a80:	add	r0, sp, #24
 a84:	add	r1, sp, #152	; 0x98
 a88:	bl	9c0 <gf2_matrix_square>
 a8c:	add	r0, sp, #152	; 0x98
 a90:	add	r1, sp, #24
 a94:	bl	9c0 <gf2_matrix_square>
 a98:	add	r0, sp, #24
 a9c:	add	r1, sp, #152	; 0x98
 aa0:	bl	9c0 <gf2_matrix_square>
 aa4:	and	r3, r6, #1
 aa8:	cmp	r3, #0
 aac:	beq	ac0 <crc32_combine_+0xa0>
 ab0:	add	r0, sp, #24
 ab4:	mov	r1, r4
 ab8:	bl	974 <gf2_matrix_times>
 abc:	mov	r4, r0
 ac0:	asr	r6, r6, #1
 ac4:	cmp	r6, #0
 ac8:	beq	b00 <crc32_combine_+0xe0>
 acc:	add	r0, sp, #152	; 0x98
 ad0:	add	r1, sp, #24
 ad4:	bl	9c0 <gf2_matrix_square>
 ad8:	and	r0, r6, #1
 adc:	cmp	r0, #0
 ae0:	beq	af4 <crc32_combine_+0xd4>
 ae4:	add	r0, sp, #152	; 0x98
 ae8:	mov	r1, r4
 aec:	bl	974 <gf2_matrix_times>
 af0:	mov	r4, r0
 af4:	asr	r6, r6, #1
 af8:	cmp	r6, #0
 afc:	bne	a98 <crc32_combine_+0x78>
 b00:	eor	r4, r4, r5
 b04:	mov	r0, r4
 b08:	ldr	r4, [sp, #8]
 b0c:	ldr	r5, [sp, #12]
 b10:	ldr	r6, [sp, #16]
 b14:	ldr	lr, [sp, #4]
 b18:	add	sp, sp, #280	; 0x118
 b1c:	bx	lr

00000b20 <coda_crc32_combine>:
 b20:	mov	ip, sp
 b24:	sub	sp, sp, #8
 b28:	str	ip, [sp]
 b2c:	str	lr, [sp, #4]
 b30:	bl	a20 <crc32_combine_>
 b34:	ldr	lr, [sp, #4]
 b38:	add	sp, sp, #8
 b3c:	bx	lr

00000b40 <coda_crc32_combine64>:
 b40:	mov	ip, sp
 b44:	sub	sp, sp, #8
 b48:	str	ip, [sp]
 b4c:	str	lr, [sp, #4]
 b50:	bl	a20 <crc32_combine_>
 b54:	ldr	lr, [sp, #4]
 b58:	add	sp, sp, #8
 b5c:	bx	lr
