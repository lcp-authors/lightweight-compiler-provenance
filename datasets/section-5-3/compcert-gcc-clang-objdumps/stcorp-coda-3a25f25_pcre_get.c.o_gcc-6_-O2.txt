
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_get.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_get_stringnumber>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	sub	sp, sp, #16
   8:	mov	r6, r1
   c:	add	r3, sp, #8
  10:	mov	r2, #8
  14:	mov	r1, #0
  18:	mov	r4, r0
  1c:	bl	0 <coda_pcre_fullinfo>
  20:	subs	r5, r0, #0
  24:	bne	50 <coda_pcre_get_stringnumber+0x50>
  28:	ldr	r3, [sp, #8]
  2c:	cmp	r3, #0
  30:	ble	c0 <coda_pcre_get_stringnumber+0xc0>
  34:	mov	r1, r5
  38:	add	r3, sp, #4
  3c:	mov	r2, #7
  40:	mov	r0, r4
  44:	bl	0 <coda_pcre_fullinfo>
  48:	subs	r5, r0, #0
  4c:	beq	5c <coda_pcre_get_stringnumber+0x5c>
  50:	mov	r0, r5
  54:	add	sp, sp, #16
  58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  5c:	mov	r1, r5
  60:	mov	r0, r4
  64:	add	r3, sp, #12
  68:	mov	r2, #9
  6c:	bl	0 <coda_pcre_fullinfo>
  70:	subs	r5, r0, #0
  74:	bne	50 <coda_pcre_get_stringnumber+0x50>
  78:	ldr	r9, [sp, #8]
  7c:	ldr	r8, [sp, #12]
  80:	ldr	r7, [sp, #4]
  84:	b	a8 <coda_pcre_get_stringnumber+0xa8>
  88:	mla	sl, r7, r4, r8
  8c:	add	r1, sl, #2
  90:	bl	0 <strcmp>
  94:	cmp	r0, #0
  98:	beq	c8 <coda_pcre_get_stringnumber+0xc8>
  9c:	addgt	r5, r4, #1
  a0:	movle	r9, r4
  a4:	strle	r4, [sp, #8]
  a8:	add	r4, r5, r9
  ac:	cmp	r5, r9
  b0:	add	r4, r4, r4, lsr #31
  b4:	mov	r0, r6
  b8:	asr	r4, r4, #1
  bc:	blt	88 <coda_pcre_get_stringnumber+0x88>
  c0:	mvn	r5, #6
  c4:	b	50 <coda_pcre_get_stringnumber+0x50>
  c8:	ldrb	r3, [sl]
  cc:	ldrb	r5, [sl, #1]
  d0:	orr	r5, r5, r3, lsl #8
  d4:	b	50 <coda_pcre_get_stringnumber+0x50>

000000d8 <coda_pcre_get_stringtable_entries>:
  d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  dc:	sub	sp, sp, #28
  e0:	mov	r5, r1
  e4:	str	r3, [sp]
  e8:	mov	sl, r2
  ec:	add	r3, sp, #16
  f0:	mov	r2, #8
  f4:	mov	r1, #0
  f8:	mov	r4, r0
  fc:	bl	0 <coda_pcre_fullinfo>
 100:	subs	fp, r0, #0
 104:	bne	130 <coda_pcre_get_stringtable_entries+0x58>
 108:	ldr	r3, [sp, #16]
 10c:	cmp	r3, #0
 110:	ble	1a8 <coda_pcre_get_stringtable_entries+0xd0>
 114:	mov	r1, fp
 118:	add	r3, sp, #12
 11c:	mov	r2, #7
 120:	mov	r0, r4
 124:	bl	0 <coda_pcre_fullinfo>
 128:	subs	fp, r0, #0
 12c:	beq	13c <coda_pcre_get_stringtable_entries+0x64>
 130:	mov	r0, fp
 134:	add	sp, sp, #28
 138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 13c:	mov	r1, fp
 140:	mov	r0, r4
 144:	add	r3, sp, #20
 148:	mov	r2, #9
 14c:	bl	0 <coda_pcre_fullinfo>
 150:	subs	fp, r0, #0
 154:	bne	130 <coda_pcre_get_stringtable_entries+0x58>
 158:	ldr	r3, [sp, #16]
 15c:	ldr	r7, [sp, #20]
 160:	str	r3, [sp, #4]
 164:	mov	r9, r3
 168:	ldr	r6, [sp, #12]
 16c:	b	190 <coda_pcre_get_stringtable_entries+0xb8>
 170:	mla	r8, r4, r6, r7
 174:	add	r1, r8, #2
 178:	bl	0 <strcmp>
 17c:	cmp	r0, #0
 180:	beq	1b0 <coda_pcre_get_stringtable_entries+0xd8>
 184:	addgt	fp, r4, #1
 188:	movle	r9, r4
 18c:	strle	r4, [sp, #16]
 190:	add	r4, fp, r9
 194:	cmp	fp, r9
 198:	add	r4, r4, r4, lsr #31
 19c:	mov	r0, r5
 1a0:	asr	r4, r4, #1
 1a4:	blt	170 <coda_pcre_get_stringtable_entries+0x98>
 1a8:	mvn	fp, #6
 1ac:	b	130 <coda_pcre_get_stringtable_entries+0x58>
 1b0:	cmp	r7, r8
 1b4:	bcs	234 <coda_pcre_get_stringtable_entries+0x15c>
 1b8:	rsb	r4, r6, #2
 1bc:	mov	fp, r8
 1c0:	b	1d0 <coda_pcre_get_stringtable_entries+0xf8>
 1c4:	sub	fp, fp, r6
 1c8:	cmp	r7, fp
 1cc:	bcs	1e4 <coda_pcre_get_stringtable_entries+0x10c>
 1d0:	add	r1, fp, r4
 1d4:	mov	r0, r5
 1d8:	bl	0 <strcmp>
 1dc:	cmp	r0, #0
 1e0:	beq	1c4 <coda_pcre_get_stringtable_entries+0xec>
 1e4:	ldr	r3, [sp, #4]
 1e8:	sub	r3, r3, #1
 1ec:	mla	r7, r6, r3, r7
 1f0:	cmp	r7, r8
 1f4:	addhi	r4, r6, #2
 1f8:	bhi	20c <coda_pcre_get_stringtable_entries+0x134>
 1fc:	b	220 <coda_pcre_get_stringtable_entries+0x148>
 200:	add	r8, r8, r6
 204:	cmp	r7, r8
 208:	bls	220 <coda_pcre_get_stringtable_entries+0x148>
 20c:	add	r1, r8, r4
 210:	mov	r0, r5
 214:	bl	0 <strcmp>
 218:	cmp	r0, #0
 21c:	beq	200 <coda_pcre_get_stringtable_entries+0x128>
 220:	ldr	r3, [sp]
 224:	str	fp, [sl]
 228:	mov	fp, r6
 22c:	str	r8, [r3]
 230:	b	130 <coda_pcre_get_stringtable_entries+0x58>
 234:	mov	fp, r8
 238:	b	1e4 <coda_pcre_get_stringtable_entries+0x10c>

0000023c <get_first_set>:
 23c:	push	{r4, lr}
 240:	mov	r4, r2
 244:	ldr	r2, [r0, #8]
 248:	sub	sp, sp, #8
 24c:	tst	r2, #524288	; 0x80000
 250:	mov	r3, r0
 254:	mov	ip, r1
 258:	bne	268 <get_first_set+0x2c>
 25c:	ldr	r2, [r0, #12]
 260:	tst	r2, #1024	; 0x400
 264:	beq	2ec <get_first_set+0xb0>
 268:	mov	r0, r3
 26c:	mov	r1, ip
 270:	add	r3, sp, #4
 274:	mov	r2, sp
 278:	bl	d8 <coda_pcre_get_stringtable_entries>
 27c:	cmp	r0, #0
 280:	ble	2e4 <get_first_set+0xa8>
 284:	ldr	r3, [sp]
 288:	ldr	r1, [sp, #4]
 28c:	cmp	r3, r1
 290:	bhi	2d8 <get_first_set+0x9c>
 294:	ldrb	ip, [r3]
 298:	ldrb	r2, [r3, #1]
 29c:	orr	r2, r2, ip, lsl #8
 2a0:	ldr	ip, [r4, r2, lsl #3]
 2a4:	cmp	ip, #0
 2a8:	bge	2f8 <get_first_set+0xbc>
 2ac:	mov	ip, r0
 2b0:	b	2cc <get_first_set+0x90>
 2b4:	ldrb	r2, [r3]
 2b8:	ldrb	r0, [r3, #1]
 2bc:	orr	r0, r0, r2, lsl #8
 2c0:	ldr	r2, [r4, r0, lsl #3]
 2c4:	cmp	r2, #0
 2c8:	bge	2e4 <get_first_set+0xa8>
 2cc:	add	r3, r3, ip
 2d0:	cmp	r3, r1
 2d4:	bls	2b4 <get_first_set+0x78>
 2d8:	ldrb	r2, [r3]
 2dc:	ldrb	r0, [r3, #1]
 2e0:	orr	r0, r0, r2, lsl #8
 2e4:	add	sp, sp, #8
 2e8:	pop	{r4, pc}
 2ec:	bl	0 <coda_pcre_get_stringnumber>
 2f0:	add	sp, sp, #8
 2f4:	pop	{r4, pc}
 2f8:	mov	r0, r2
 2fc:	b	2e4 <get_first_set+0xa8>

00000300 <coda_pcre_copy_substring>:
 300:	cmp	r3, r2
 304:	movlt	r2, #0
 308:	movge	r2, #1
 30c:	push	{r4, r5, r6, lr}
 310:	orrs	r5, r2, r3, lsr #31
 314:	bne	360 <coda_pcre_copy_substring+0x60>
 318:	lsl	r3, r3, #1
 31c:	add	r2, r3, #1
 320:	ldr	r3, [r1, r3, lsl #2]
 324:	ldr	r4, [r1, r2, lsl #2]
 328:	ldr	r2, [sp, #20]
 32c:	sub	r4, r4, r3
 330:	cmp	r4, r2
 334:	bge	358 <coda_pcre_copy_substring+0x58>
 338:	add	r1, r0, r3
 33c:	mov	r2, r4
 340:	ldr	r0, [sp, #16]
 344:	bl	0 <memcpy>
 348:	ldr	r3, [sp, #16]
 34c:	strb	r5, [r3, r4]
 350:	mov	r0, r4
 354:	pop	{r4, r5, r6, pc}
 358:	mvn	r4, #5
 35c:	b	350 <coda_pcre_copy_substring+0x50>
 360:	mvn	r4, #6
 364:	b	350 <coda_pcre_copy_substring+0x50>

00000368 <coda_pcre_copy_named_substring>:
 368:	push	{r4, r5, r6, r7, r8, lr}
 36c:	mov	r4, r1
 370:	ldr	r1, [sp, #24]
 374:	mov	r6, r3
 378:	mov	r5, r2
 37c:	ldr	r7, [sp, #28]
 380:	ldr	r8, [sp, #32]
 384:	bl	23c <get_first_set>
 388:	subs	r3, r0, #0
 38c:	pople	{r4, r5, r6, r7, r8, pc}
 390:	str	r8, [sp, #28]
 394:	str	r7, [sp, #24]
 398:	mov	r2, r6
 39c:	mov	r1, r5
 3a0:	mov	r0, r4
 3a4:	pop	{r4, r5, r6, r7, r8, lr}
 3a8:	b	300 <coda_pcre_copy_substring>

000003ac <coda_pcre_get_substring_list>:
 3ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3b0:	lsl	r8, r2, #1
 3b4:	cmp	r8, #0
 3b8:	sub	sp, sp, #12
 3bc:	mov	r4, r3
 3c0:	ble	48c <coda_pcre_get_substring_list+0xe0>
 3c4:	mov	sl, r0
 3c8:	mov	r9, r1
 3cc:	mov	r7, r1
 3d0:	mov	ip, r1
 3d4:	mov	r5, r2
 3d8:	mov	r0, #4
 3dc:	mov	r1, #0
 3e0:	ldr	r3, [ip, #4]
 3e4:	ldr	r2, [r9, r1, lsl #2]
 3e8:	add	r1, r1, #2
 3ec:	add	r0, r0, #5
 3f0:	sub	r3, r3, r2
 3f4:	cmp	r8, r1
 3f8:	add	ip, ip, #8
 3fc:	add	r0, r3, r0
 400:	bgt	3e0 <coda_pcre_get_substring_list+0x34>
 404:	ldr	r3, [pc, #164]	; 4b0 <coda_pcre_get_substring_list+0x104>
 408:	ldr	r3, [r3]
 40c:	blx	r3
 410:	subs	r3, r0, #0
 414:	str	r3, [sp, #4]
 418:	beq	4a8 <coda_pcre_get_substring_list+0xfc>
 41c:	ldr	r3, [sp, #4]
 420:	add	r5, r5, #1
 424:	mov	r6, #0
 428:	add	r5, r3, r5, lsl #2
 42c:	mov	fp, r3
 430:	str	r3, [r4]
 434:	ldr	r3, [r9, r6, lsl #2]
 438:	ldr	r4, [r7, #4]
 43c:	add	r1, sl, r3
 440:	sub	r4, r4, r3
 444:	mov	r2, r4
 448:	mov	r0, r5
 44c:	add	r4, r5, r4
 450:	add	r6, r6, #2
 454:	bl	0 <memcpy>
 458:	mov	r3, #0
 45c:	cmp	r8, r6
 460:	str	r5, [fp], #4
 464:	add	r7, r7, #8
 468:	strb	r3, [r4]
 46c:	add	r5, r4, #1
 470:	bgt	434 <coda_pcre_get_substring_list+0x88>
 474:	ldr	r3, [sp, #4]
 478:	add	r8, r3, r8, lsl #1
 47c:	mov	r0, #0
 480:	str	r0, [r8]
 484:	add	sp, sp, #12
 488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 48c:	ldr	r3, [pc, #28]	; 4b0 <coda_pcre_get_substring_list+0x104>
 490:	mov	r0, #4
 494:	ldr	r3, [r3]
 498:	blx	r3
 49c:	subs	r8, r0, #0
 4a0:	strne	r8, [r4]
 4a4:	bne	47c <coda_pcre_get_substring_list+0xd0>
 4a8:	mvn	r0, #5
 4ac:	b	484 <coda_pcre_get_substring_list+0xd8>
 4b0:	.word	0x00000000

000004b4 <coda_pcre_free_substring_list>:
 4b4:	ldr	r3, [pc, #4]	; 4c0 <coda_pcre_free_substring_list+0xc>
 4b8:	ldr	r3, [r3]
 4bc:	bx	r3
 4c0:	.word	0x00000000

000004c4 <coda_pcre_get_substring>:
 4c4:	cmp	r3, r2
 4c8:	movlt	r2, #0
 4cc:	movge	r2, #1
 4d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 4d4:	orrs	r7, r2, r3, lsr #31
 4d8:	bne	534 <coda_pcre_get_substring+0x70>
 4dc:	mov	r4, r3
 4e0:	add	r3, r1, r3, lsl #3
 4e4:	ldr	r2, [r1, r4, lsl #3]
 4e8:	ldr	r5, [r3, #4]
 4ec:	ldr	r3, [pc, #80]	; 544 <coda_pcre_get_substring+0x80>
 4f0:	sub	r5, r5, r2
 4f4:	mov	r9, r0
 4f8:	ldr	r3, [r3]
 4fc:	add	r0, r5, #1
 500:	mov	r6, r1
 504:	blx	r3
 508:	subs	r8, r0, #0
 50c:	beq	53c <coda_pcre_get_substring+0x78>
 510:	ldr	r1, [r6, r4, lsl #3]
 514:	mov	r2, r5
 518:	add	r1, r9, r1
 51c:	bl	0 <memcpy>
 520:	ldr	r3, [sp, #32]
 524:	strb	r7, [r8, r5]
 528:	str	r8, [r3]
 52c:	mov	r0, r5
 530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 534:	mvn	r5, #6
 538:	b	52c <coda_pcre_get_substring+0x68>
 53c:	mvn	r5, #5
 540:	b	52c <coda_pcre_get_substring+0x68>
 544:	.word	0x00000000

00000548 <coda_pcre_get_named_substring>:
 548:	push	{r4, r5, r6, r7, r8, lr}
 54c:	mov	r4, r1
 550:	ldr	r1, [sp, #24]
 554:	mov	r6, r3
 558:	mov	r5, r2
 55c:	ldr	r7, [sp, #28]
 560:	bl	23c <get_first_set>
 564:	subs	r3, r0, #0
 568:	pople	{r4, r5, r6, r7, r8, pc}
 56c:	str	r7, [sp, #24]
 570:	mov	r2, r6
 574:	mov	r1, r5
 578:	mov	r0, r4
 57c:	pop	{r4, r5, r6, r7, r8, lr}
 580:	b	4c4 <coda_pcre_get_substring>

00000584 <coda_pcre_free_substring>:
 584:	ldr	r3, [pc, #4]	; 590 <coda_pcre_free_substring+0xc>
 588:	ldr	r3, [r3]
 58c:	bx	r3
 590:	.word	0x00000000
