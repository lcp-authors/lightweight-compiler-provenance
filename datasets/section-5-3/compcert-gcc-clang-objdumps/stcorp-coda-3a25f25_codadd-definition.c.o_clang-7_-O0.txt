
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_definition>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #64	; 0x40
       c:	str	r0, [fp, #-4]
      10:	str	r1, [fp, #-8]
      14:	ldr	r0, [fp, #-8]
      18:	sub	r1, fp, #12
      1c:	bl	0 <coda_open>
      20:	str	r0, [fp, #-16]
      24:	ldr	r0, [fp, #-16]
      28:	cmp	r0, #0
      2c:	beq	7c <generate_definition+0x7c>
      30:	ldr	r0, [pc, #396]	; 1c4 <generate_definition+0x1c4>
      34:	ldr	r0, [pc, r0]
      38:	str	r0, [fp, #-20]	; 0xffffffec
      3c:	bl	0 <__aeabi_read_tp>
      40:	ldr	ip, [fp, #-20]	; 0xffffffec
      44:	ldr	r0, [r0, ip]
      48:	cmn	r0, #21
      4c:	bne	7c <generate_definition+0x7c>
      50:	movw	r0, #0
      54:	bl	0 <coda_set_option_use_mmap>
      58:	ldr	lr, [fp, #-8]
      5c:	str	r0, [fp, #-24]	; 0xffffffe8
      60:	mov	r0, lr
      64:	sub	r1, fp, #12
      68:	bl	0 <coda_open>
      6c:	str	r0, [fp, #-16]
      70:	movw	r0, #1
      74:	bl	0 <coda_set_option_use_mmap>
      78:	str	r0, [fp, #-28]	; 0xffffffe4
      7c:	ldr	r0, [fp, #-16]
      80:	cmp	r0, #0
      84:	beq	f8 <generate_definition+0xf8>
      88:	movw	r0, #0
      8c:	movt	r0, #0
      90:	ldr	r0, [r0]
      94:	ldr	r1, [pc, #300]	; 1c8 <generate_definition+0x1c8>
      98:	ldr	r1, [pc, r1]
      9c:	str	r0, [sp, #32]
      a0:	str	r1, [sp, #28]
      a4:	bl	0 <__aeabi_read_tp>
      a8:	ldr	r1, [sp, #28]
      ac:	ldr	r0, [r0, r1]
      b0:	bl	0 <coda_errno_to_string>
      b4:	ldr	r1, [sp, #32]
      b8:	str	r0, [sp, #24]
      bc:	mov	r0, r1
      c0:	movw	r1, #0
      c4:	movt	r1, #0
      c8:	ldr	r2, [sp, #24]
      cc:	bl	0 <fprintf>
      d0:	movw	r1, #0
      d4:	movt	r1, #0
      d8:	ldr	r1, [r1]
      dc:	str	r0, [sp, #20]
      e0:	mov	r0, r1
      e4:	bl	0 <fflush>
      e8:	movw	r1, #1
      ec:	str	r0, [sp, #16]
      f0:	mov	r0, r1
      f4:	bl	0 <exit>
      f8:	movw	r0, #0
      fc:	movt	r0, #0
     100:	ldr	r0, [r0]
     104:	movw	r1, #0
     108:	movt	r1, #0
     10c:	str	r0, [r1]
     110:	ldr	r0, [fp, #-4]
     114:	movw	r1, #0
     118:	cmp	r0, r1
     11c:	beq	194 <generate_definition+0x194>
     120:	ldr	r0, [fp, #-4]
     124:	movw	r1, #0
     128:	movt	r1, #0
     12c:	bl	0 <fopen>
     130:	movw	r1, #0
     134:	movt	r1, #0
     138:	str	r0, [r1]
     13c:	ldr	r0, [r1]
     140:	movw	r1, #0
     144:	cmp	r0, r1
     148:	bne	190 <generate_definition+0x190>
     14c:	movw	r0, #0
     150:	movt	r0, #0
     154:	ldr	r0, [r0]
     158:	ldr	r2, [fp, #-4]
     15c:	movw	r1, #0
     160:	movt	r1, #0
     164:	bl	0 <fprintf>
     168:	movw	r1, #0
     16c:	movt	r1, #0
     170:	ldr	r1, [r1]
     174:	str	r0, [sp, #12]
     178:	mov	r0, r1
     17c:	bl	0 <fflush>
     180:	movw	r1, #1
     184:	str	r0, [sp, #8]
     188:	mov	r0, r1
     18c:	bl	0 <exit>
     190:	b	194 <generate_definition+0x194>
     194:	movw	r0, #0
     198:	movt	r0, #0
     19c:	bl	1cc <ff_printf>
     1a0:	ldr	lr, [fp, #-12]
     1a4:	str	r0, [sp, #4]
     1a8:	mov	r0, lr
     1ac:	bl	230 <generate_product_definition>
     1b0:	ldr	r0, [fp, #-12]
     1b4:	bl	0 <coda_close>
     1b8:	str	r0, [sp]
     1bc:	mov	sp, fp
     1c0:	pop	{fp, pc}
     1c4:	.word	0x00000188
     1c8:	.word	0x00000128

000001cc <ff_printf>:
     1cc:	sub	sp, sp, #12
     1d0:	push	{fp, lr}
     1d4:	mov	fp, sp
     1d8:	sub	sp, sp, #20
     1dc:	str	r3, [fp, #16]
     1e0:	str	r2, [fp, #12]
     1e4:	str	r1, [fp, #8]
     1e8:	str	r0, [fp, #-4]
     1ec:	add	r0, fp, #8
     1f0:	str	r0, [sp, #8]
     1f4:	movw	r0, #0
     1f8:	movt	r0, #0
     1fc:	ldr	r0, [r0]
     200:	ldr	r1, [fp, #-4]
     204:	ldr	r2, [sp, #8]
     208:	bl	0 <vfprintf>
     20c:	str	r0, [fp, #-8]
     210:	add	r0, sp, #8
     214:	ldr	r1, [fp, #-8]
     218:	str	r0, [sp, #4]
     21c:	mov	r0, r1
     220:	mov	sp, fp
     224:	pop	{fp, lr}
     228:	add	sp, sp, #12
     22c:	bx	lr

00000230 <generate_product_definition>:
     230:	push	{fp, lr}
     234:	mov	fp, sp
     238:	sub	sp, sp, #80	; 0x50
     23c:	str	r0, [fp, #-4]
     240:	ldr	r0, [fp, #-4]
     244:	ldr	r0, [r0, #24]
     248:	str	r0, [fp, #-8]
     24c:	ldr	r0, [fp, #-4]
     250:	ldr	r0, [r0, #20]
     254:	ldr	r0, [r0]
     258:	cmp	r0, #100	; 0x64
     25c:	bcs	270 <generate_product_definition+0x40>
     260:	ldr	r0, [fp, #-4]
     264:	ldr	r0, [r0, #20]
     268:	str	r0, [sp, #28]
     26c:	b	280 <generate_product_definition+0x50>
     270:	ldr	r0, [fp, #-4]
     274:	ldr	r0, [r0, #20]
     278:	ldr	r0, [r0, #4]
     27c:	str	r0, [sp, #28]
     280:	ldr	r0, [sp, #28]
     284:	str	r0, [fp, #-12]
     288:	ldr	r0, [fp, #-4]
     28c:	ldr	r0, [r0, #16]
     290:	str	r0, [fp, #-16]
     294:	movw	r0, #0
     298:	movt	r0, #0
     29c:	str	r0, [fp, #-20]	; 0xffffffec
     2a0:	sub	r0, fp, #35	; 0x23
     2a4:	movw	r1, #0
     2a8:	and	r1, r1, #255	; 0xff
     2ac:	movw	r2, #15
     2b0:	bl	0 <memset>
     2b4:	ldr	r0, [fp, #-8]
     2b8:	movw	r1, #0
     2bc:	cmp	r0, r1
     2c0:	beq	2e8 <generate_product_definition+0xb8>
     2c4:	ldr	r0, [fp, #-8]
     2c8:	ldr	r0, [r0, #8]
     2cc:	str	r0, [fp, #-20]	; 0xffffffec
     2d0:	ldr	r0, [fp, #-8]
     2d4:	ldr	r0, [r0]
     2d8:	str	r0, [fp, #-16]
     2dc:	ldr	r0, [fp, #-8]
     2e0:	ldr	r0, [r0, #28]
     2e4:	str	r0, [fp, #-12]
     2e8:	ldr	r0, [fp, #-12]
     2ec:	movw	r1, #0
     2f0:	cmp	r0, r1
     2f4:	bne	314 <generate_product_definition+0xe4>
     2f8:	ldr	r0, [fp, #-4]
     2fc:	ldr	r0, [r0, #16]
     300:	str	r0, [fp, #-16]
     304:	ldr	r0, [fp, #-4]
     308:	ldr	r0, [r0, #20]
     30c:	ldr	r0, [r0, #4]
     310:	str	r0, [fp, #-12]
     314:	movw	r0, #0
     318:	bl	0 <time>
     31c:	str	r0, [sp, #36]	; 0x24
     320:	add	r0, sp, #36	; 0x24
     324:	bl	0 <localtime>
     328:	str	r0, [sp, #40]	; 0x28
     32c:	ldr	r0, [sp, #40]	; 0x28
     330:	movw	lr, #0
     334:	cmp	r0, lr
     338:	beq	384 <generate_product_definition+0x154>
     33c:	sub	r0, fp, #35	; 0x23
     340:	ldr	r1, [sp, #40]	; 0x28
     344:	ldr	r1, [r1, #20]
     348:	movw	r2, #1900	; 0x76c
     34c:	add	r2, r1, r2
     350:	ldr	r1, [sp, #40]	; 0x28
     354:	ldr	r1, [r1, #16]
     358:	add	r3, r1, #1
     35c:	ldr	r1, [sp, #40]	; 0x28
     360:	ldr	r1, [r1, #12]
     364:	movw	ip, #0
     368:	movt	ip, #0
     36c:	str	r1, [sp, #24]
     370:	mov	r1, ip
     374:	ldr	ip, [sp, #24]
     378:	str	ip, [sp]
     37c:	bl	0 <sprintf>
     380:	str	r0, [sp, #20]
     384:	ldr	r1, [fp, #-20]	; 0xffffffec
     388:	ldr	r0, [fp, #-4]
     38c:	ldr	r0, [r0, #16]
     390:	str	r1, [sp, #16]
     394:	bl	0 <coda_type_get_format_name>
     398:	sub	r3, fp, #35	; 0x23
     39c:	movw	r1, #0
     3a0:	movt	r1, #0
     3a4:	str	r0, [sp, #12]
     3a8:	mov	r0, r1
     3ac:	ldr	r1, [sp, #16]
     3b0:	ldr	r2, [sp, #12]
     3b4:	bl	46c <fi_printf>
     3b8:	movw	r1, #0
     3bc:	movt	r1, #0
     3c0:	ldr	r2, [r1]
     3c4:	add	r2, r2, #1
     3c8:	str	r2, [r1]
     3cc:	ldr	r1, [fp, #-12]
     3d0:	ldr	r2, [fp, #-16]
     3d4:	str	r0, [sp, #8]
     3d8:	mov	r0, r1
     3dc:	mov	r1, r2
     3e0:	bl	4d4 <generate_type>
     3e4:	ldr	r0, [fp, #-8]
     3e8:	movw	r1, #0
     3ec:	cmp	r0, r1
     3f0:	beq	43c <generate_product_definition+0x20c>
     3f4:	movw	r0, #0
     3f8:	str	r0, [sp, #32]
     3fc:	ldr	r0, [sp, #32]
     400:	ldr	r1, [fp, #-8]
     404:	ldr	r1, [r1, #32]
     408:	cmp	r0, r1
     40c:	bge	438 <generate_product_definition+0x208>
     410:	ldr	r0, [fp, #-8]
     414:	ldr	r0, [r0, #36]	; 0x24
     418:	ldr	r1, [sp, #32]
     41c:	add	r0, r0, r1, lsl #2
     420:	ldr	r0, [r0]
     424:	bl	1640 <generate_product_variable>
     428:	ldr	r0, [sp, #32]
     42c:	add	r0, r0, #1
     430:	str	r0, [sp, #32]
     434:	b	3fc <generate_product_definition+0x1cc>
     438:	b	43c <generate_product_definition+0x20c>
     43c:	movw	r0, #0
     440:	movt	r0, #0
     444:	ldr	r1, [r0]
     448:	mvn	r2, #0
     44c:	add	r1, r1, r2
     450:	str	r1, [r0]
     454:	movw	r0, #0
     458:	movt	r0, #0
     45c:	bl	46c <fi_printf>
     460:	str	r0, [sp, #4]
     464:	mov	sp, fp
     468:	pop	{fp, pc}

0000046c <fi_printf>:
     46c:	sub	sp, sp, #12
     470:	push	{fp, lr}
     474:	mov	fp, sp
     478:	sub	sp, sp, #20
     47c:	str	r3, [fp, #16]
     480:	str	r2, [fp, #12]
     484:	str	r1, [fp, #8]
     488:	str	r0, [fp, #-4]
     48c:	bl	1744 <indent>
     490:	add	r0, fp, #8
     494:	str	r0, [sp, #8]
     498:	movw	r0, #0
     49c:	movt	r0, #0
     4a0:	ldr	r0, [r0]
     4a4:	ldr	r1, [fp, #-4]
     4a8:	ldr	r2, [sp, #8]
     4ac:	bl	0 <vfprintf>
     4b0:	str	r0, [fp, #-8]
     4b4:	add	r0, sp, #8
     4b8:	ldr	r1, [fp, #-8]
     4bc:	str	r0, [sp, #4]
     4c0:	mov	r0, r1
     4c4:	mov	sp, fp
     4c8:	pop	{fp, lr}
     4cc:	add	sp, sp, #12
     4d0:	bx	lr

000004d4 <generate_type>:
     4d4:	push	{r4, r5, fp, lr}
     4d8:	add	fp, sp, #8
     4dc:	sub	sp, sp, #584	; 0x248
     4e0:	str	r0, [fp, #-12]
     4e4:	str	r1, [fp, #-16]
     4e8:	mov	r0, #0
     4ec:	str	r0, [fp, #-24]	; 0xffffffe8
     4f0:	movw	r1, #0
     4f4:	movt	r1, #0
     4f8:	str	r1, [fp, #-32]	; 0xffffffe0
     4fc:	str	r0, [fp, #-44]	; 0xffffffd4
     500:	str	r0, [fp, #-48]	; 0xffffffd0
     504:	ldr	r0, [fp, #-12]
     508:	sub	r1, fp, #20
     50c:	bl	0 <coda_type_get_class>
     510:	ldr	r1, [fp, #-12]
     514:	sub	lr, fp, #28
     518:	str	r0, [fp, #-208]	; 0xffffff30
     51c:	mov	r0, r1
     520:	mov	r1, lr
     524:	bl	0 <coda_type_get_format>
     528:	ldr	r1, [fp, #-12]
     52c:	sub	lr, fp, #36	; 0x24
     530:	str	r0, [fp, #-212]	; 0xffffff2c
     534:	mov	r0, r1
     538:	mov	r1, lr
     53c:	bl	0 <coda_type_get_description>
     540:	ldr	r1, [fp, #-12]
     544:	sub	lr, fp, #40	; 0x28
     548:	str	r0, [fp, #-216]	; 0xffffff28
     54c:	mov	r0, r1
     550:	mov	r1, lr
     554:	bl	0 <coda_type_get_attributes>
     558:	ldr	r1, [fp, #-20]	; 0xffffffec
     55c:	cmp	r1, #6
     560:	str	r0, [fp, #-220]	; 0xffffff24
     564:	str	r1, [fp, #-224]	; 0xffffff20
     568:	bhi	744 <generate_type+0x270>
     56c:	add	r0, pc, #8
     570:	ldr	r1, [fp, #-224]	; 0xffffff20
     574:	ldr	r0, [r0, r1, lsl #2]
     578:	mov	pc, r0
     57c:	.word	0x00000598
     580:	.word	0x000005d8
     584:	.word	0x000005e8
     588:	.word	0x000005f8
     58c:	.word	0x00000608
     590:	.word	0x000006a0
     594:	.word	0x000006b0
     598:	ldr	r0, [fp, #-12]
     59c:	sub	r1, fp, #48	; 0x30
     5a0:	bl	0 <coda_type_get_record_union_status>
     5a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     5a8:	cmp	r1, #0
     5ac:	movw	r1, #0
     5b0:	movne	r1, #1
     5b4:	tst	r1, #1
     5b8:	movw	r1, #0
     5bc:	movt	r1, #0
     5c0:	movw	lr, #0
     5c4:	movt	lr, #0
     5c8:	movne	r1, lr
     5cc:	str	r1, [fp, #-32]	; 0xffffffe0
     5d0:	str	r0, [fp, #-228]	; 0xffffff1c
     5d4:	b	744 <generate_type+0x270>
     5d8:	movw	r0, #0
     5dc:	movt	r0, #0
     5e0:	str	r0, [fp, #-32]	; 0xffffffe0
     5e4:	b	744 <generate_type+0x270>
     5e8:	movw	r0, #0
     5ec:	movt	r0, #0
     5f0:	str	r0, [fp, #-32]	; 0xffffffe0
     5f4:	b	744 <generate_type+0x270>
     5f8:	movw	r0, #0
     5fc:	movt	r0, #0
     600:	str	r0, [fp, #-32]	; 0xffffffe0
     604:	b	744 <generate_type+0x270>
     608:	ldr	r0, [fp, #-12]
     60c:	ldr	r0, [r0, #44]	; 0x2c
     610:	cmp	r0, #4
     614:	str	r0, [fp, #-232]	; 0xffffff18
     618:	bhi	69c <generate_type+0x1c8>
     61c:	add	r0, pc, #8
     620:	ldr	r1, [fp, #-232]	; 0xffffff18
     624:	ldr	r0, [r0, r1, lsl #2]
     628:	mov	pc, r0
     62c:	.word	0x00000640
     630:	.word	0x00000650
     634:	.word	0x00000660
     638:	.word	0x00000680
     63c:	.word	0x00000690
     640:	movw	r0, #0
     644:	movt	r0, #0
     648:	str	r0, [fp, #-32]	; 0xffffffe0
     64c:	b	69c <generate_type+0x1c8>
     650:	movw	r0, #0
     654:	movt	r0, #0
     658:	str	r0, [fp, #-32]	; 0xffffffe0
     65c:	b	69c <generate_type+0x1c8>
     660:	movw	r0, #0
     664:	movt	r0, #0
     668:	movw	r1, #0
     66c:	movt	r1, #0
     670:	movw	r2, #273	; 0x111
     674:	movw	r3, #0
     678:	movt	r3, #0
     67c:	bl	0 <__assert_fail>
     680:	movw	r0, #0
     684:	movt	r0, #0
     688:	str	r0, [fp, #-32]	; 0xffffffe0
     68c:	b	69c <generate_type+0x1c8>
     690:	movw	r0, #0
     694:	movt	r0, #0
     698:	str	r0, [fp, #-32]	; 0xffffffe0
     69c:	b	744 <generate_type+0x270>
     6a0:	movw	r0, #0
     6a4:	movt	r0, #0
     6a8:	str	r0, [fp, #-32]	; 0xffffffe0
     6ac:	b	744 <generate_type+0x270>
     6b0:	ldr	r0, [fp, #-12]
     6b4:	sub	r1, fp, #24
     6b8:	bl	0 <coda_type_get_special_type>
     6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     6c0:	cmp	r1, #3
     6c4:	str	r0, [fp, #-236]	; 0xffffff14
     6c8:	str	r1, [fp, #-240]	; 0xffffff10
     6cc:	bhi	740 <generate_type+0x26c>
     6d0:	add	r0, pc, #8
     6d4:	ldr	r1, [fp, #-240]	; 0xffffff10
     6d8:	ldr	r0, [r0, r1, lsl #2]
     6dc:	mov	pc, r0
     6e0:	.word	0x00000720
     6e4:	.word	0x000006f0
     6e8:	.word	0x00000700
     6ec:	.word	0x00000710
     6f0:	movw	r0, #0
     6f4:	movt	r0, #0
     6f8:	str	r0, [fp, #-32]	; 0xffffffe0
     6fc:	b	740 <generate_type+0x26c>
     700:	movw	r0, #0
     704:	movt	r0, #0
     708:	str	r0, [fp, #-32]	; 0xffffffe0
     70c:	b	740 <generate_type+0x26c>
     710:	movw	r0, #0
     714:	movt	r0, #0
     718:	str	r0, [fp, #-32]	; 0xffffffe0
     71c:	b	740 <generate_type+0x26c>
     720:	movw	r0, #0
     724:	movt	r0, #0
     728:	movw	r1, #0
     72c:	movt	r1, #0
     730:	movw	r2, #301	; 0x12d
     734:	movw	r3, #0
     738:	movt	r3, #0
     73c:	bl	0 <__assert_fail>
     740:	b	744 <generate_type+0x270>
     744:	ldr	r1, [fp, #-32]	; 0xffffffe0
     748:	movw	r0, #0
     74c:	movt	r0, #0
     750:	bl	46c <fi_printf>
     754:	ldr	r1, [fp, #-28]	; 0xffffffe4
     758:	ldr	lr, [fp, #-16]
     75c:	cmp	r1, lr
     760:	str	r0, [fp, #-244]	; 0xffffff0c
     764:	beq	78c <generate_type+0x2b8>
     768:	ldr	r0, [fp, #-28]	; 0xffffffe4
     76c:	bl	0 <coda_type_get_format_name>
     770:	movw	lr, #0
     774:	movt	lr, #0
     778:	str	r0, [fp, #-248]	; 0xffffff08
     77c:	mov	r0, lr
     780:	ldr	r1, [fp, #-248]	; 0xffffff08
     784:	bl	1cc <ff_printf>
     788:	str	r0, [fp, #-252]	; 0xffffff04
     78c:	ldr	r0, [fp, #-20]	; 0xffffffec
     790:	cmp	r0, #6
     794:	bne	7e4 <generate_type+0x310>
     798:	ldr	r0, [fp, #-24]	; 0xffffffe8
     79c:	cmp	r0, #2
     7a0:	bne	7e4 <generate_type+0x310>
     7a4:	movw	r0, #0
     7a8:	movt	r0, #0
     7ac:	bl	1cc <ff_printf>
     7b0:	ldr	lr, [fp, #-12]
     7b4:	ldr	lr, [lr, #52]	; 0x34
     7b8:	str	r0, [fp, #-256]	; 0xffffff00
     7bc:	mov	r0, lr
     7c0:	movw	r1, #0
     7c4:	movt	r1, #0
     7c8:	bl	0 <coda_expression_print_xml>
     7cc:	movw	r1, #0
     7d0:	movt	r1, #0
     7d4:	str	r0, [fp, #-260]	; 0xfffffefc
     7d8:	mov	r0, r1
     7dc:	bl	1cc <ff_printf>
     7e0:	str	r0, [fp, #-264]	; 0xfffffef8
     7e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7e8:	movw	r1, #0
     7ec:	cmp	r0, r1
     7f0:	beq	828 <generate_type+0x354>
     7f4:	sub	r0, fp, #44	; 0x2c
     7f8:	movw	r1, #0
     7fc:	movt	r1, #0
     800:	bl	17dc <fic_printf>
     804:	ldr	r1, [fp, #-36]	; 0xffffffdc
     808:	str	r0, [fp, #-268]	; 0xfffffef4
     80c:	mov	r0, r1
     810:	mvn	r1, #0
     814:	bl	1884 <generate_xml_string>
     818:	movw	r0, #0
     81c:	movt	r0, #0
     820:	bl	1cc <ff_printf>
     824:	str	r0, [fp, #-272]	; 0xfffffef0
     828:	ldr	r0, [fp, #-28]	; 0xffffffe4
     82c:	cmp	r0, #0
     830:	beq	840 <generate_type+0x36c>
     834:	ldr	r0, [fp, #-28]	; 0xffffffe4
     838:	cmp	r0, #1
     83c:	bne	a24 <generate_type+0x550>
     840:	ldr	r0, [fp, #-20]	; 0xffffffec
     844:	cmp	r0, #2
     848:	beq	870 <generate_type+0x39c>
     84c:	ldr	r0, [fp, #-20]	; 0xffffffec
     850:	cmp	r0, #3
     854:	beq	870 <generate_type+0x39c>
     858:	ldr	r0, [fp, #-20]	; 0xffffffec
     85c:	cmp	r0, #4
     860:	beq	870 <generate_type+0x39c>
     864:	ldr	r0, [fp, #-20]	; 0xffffffec
     868:	cmp	r0, #5
     86c:	bne	a24 <generate_type+0x550>
     870:	ldr	r0, [fp, #-12]
     874:	ldr	r0, [r0, #28]
     878:	cmp	r0, #0
     87c:	blt	948 <generate_type+0x474>
     880:	b	884 <generate_type+0x3b0>
     884:	ldr	r0, [fp, #-12]
     888:	ldr	r1, [r0, #24]
     88c:	ldr	r0, [r0, #28]
     890:	asr	r2, r0, #31
     894:	adds	r2, r1, r2, lsr #29
     898:	adc	r3, r0, #0
     89c:	bic	r2, r2, #7
     8a0:	subs	r1, r1, r2
     8a4:	sbc	r0, r0, r3
     8a8:	orr	r0, r1, r0
     8ac:	cmp	r0, #0
     8b0:	bne	90c <generate_type+0x438>
     8b4:	b	8b8 <generate_type+0x3e4>
     8b8:	sub	r2, fp, #73	; 0x49
     8bc:	ldr	r0, [fp, #-12]
     8c0:	ldr	r1, [r0, #24]
     8c4:	ldr	r0, [r0, #28]
     8c8:	asr	r3, r0, #31
     8cc:	adds	r1, r1, r3, lsr #29
     8d0:	adc	r0, r0, #0
     8d4:	lsr	r1, r1, #3
     8d8:	orr	r1, r1, r0, lsl #29
     8dc:	asr	r0, r0, #3
     8e0:	str	r0, [fp, #-276]	; 0xfffffeec
     8e4:	mov	r0, r1
     8e8:	ldr	r1, [fp, #-276]	; 0xfffffeec
     8ec:	bl	0 <coda_str64>
     8f0:	sub	r2, fp, #73	; 0x49
     8f4:	sub	r0, fp, #44	; 0x2c
     8f8:	movw	r1, #0
     8fc:	movt	r1, #0
     900:	bl	17dc <fic_printf>
     904:	str	r0, [fp, #-280]	; 0xfffffee8
     908:	b	944 <generate_type+0x470>
     90c:	sub	r2, fp, #73	; 0x49
     910:	ldr	r0, [fp, #-12]
     914:	ldr	r1, [r0, #24]
     918:	ldr	r0, [r0, #28]
     91c:	str	r0, [fp, #-284]	; 0xfffffee4
     920:	mov	r0, r1
     924:	ldr	r1, [fp, #-284]	; 0xfffffee4
     928:	bl	0 <coda_str64>
     92c:	sub	r2, fp, #73	; 0x49
     930:	sub	r0, fp, #44	; 0x2c
     934:	movw	r1, #0
     938:	movt	r1, #0
     93c:	bl	17dc <fic_printf>
     940:	str	r0, [fp, #-288]	; 0xfffffee0
     944:	b	a20 <generate_type+0x54c>
     948:	ldr	r0, [fp, #-12]
     94c:	ldr	r0, [r0, #32]
     950:	movw	r1, #0
     954:	cmp	r0, r1
     958:	beq	a1c <generate_type+0x548>
     95c:	ldr	r0, [fp, #-12]
     960:	ldr	r1, [r0, #24]
     964:	ldr	r0, [r0, #28]
     968:	mvn	r2, #7
     96c:	eor	r1, r1, r2
     970:	mvn	r0, r0
     974:	orr	r0, r1, r0
     978:	movw	r1, #0
     97c:	movt	r1, #0
     980:	movw	r3, #0
     984:	movt	r3, #0
     988:	cmp	r0, #0
     98c:	moveq	r3, r1
     990:	movw	r1, #0
     994:	movt	r1, #0
     998:	sub	r0, fp, #44	; 0x2c
     99c:	str	r2, [fp, #-292]	; 0xfffffedc
     9a0:	mov	r2, r3
     9a4:	bl	17dc <fic_printf>
     9a8:	ldr	r1, [fp, #-12]
     9ac:	ldr	r1, [r1, #32]
     9b0:	movw	r2, #0
     9b4:	movt	r2, #0
     9b8:	str	r0, [sp, #296]	; 0x128
     9bc:	mov	r0, r1
     9c0:	mov	r1, r2
     9c4:	bl	0 <coda_expression_print_xml>
     9c8:	ldr	r1, [fp, #-12]
     9cc:	ldr	r2, [r1, #24]
     9d0:	ldr	r1, [r1, #28]
     9d4:	ldr	r3, [fp, #-292]	; 0xfffffedc
     9d8:	eor	r2, r2, r3
     9dc:	mvn	r1, r1
     9e0:	orr	r1, r2, r1
     9e4:	clz	r1, r1
     9e8:	lsr	r1, r1, #5
     9ec:	tst	r1, #1
     9f0:	movw	r1, #0
     9f4:	movt	r1, #0
     9f8:	movw	r2, #0
     9fc:	movt	r2, #0
     a00:	movne	r1, r2
     a04:	movw	r2, #0
     a08:	movt	r2, #0
     a0c:	str	r0, [sp, #292]	; 0x124
     a10:	mov	r0, r2
     a14:	bl	1cc <ff_printf>
     a18:	str	r0, [sp, #288]	; 0x120
     a1c:	b	a20 <generate_type+0x54c>
     a20:	b	a24 <generate_type+0x550>
     a24:	ldr	r0, [fp, #-20]	; 0xffffffec
     a28:	cmp	r0, #0
     a2c:	bne	ad4 <generate_type+0x600>
     a30:	ldr	r0, [fp, #-12]
     a34:	ldr	r0, [r0, #32]
     a38:	movw	r1, #0
     a3c:	cmp	r0, r1
     a40:	beq	ad4 <generate_type+0x600>
     a44:	ldr	r0, [fp, #-12]
     a48:	ldr	r1, [r0, #24]
     a4c:	ldr	r0, [r0, #28]
     a50:	mvn	r2, #7
     a54:	eor	r1, r1, r2
     a58:	mvn	r0, r0
     a5c:	orr	r0, r1, r0
     a60:	cmp	r0, #0
     a64:	beq	a70 <generate_type+0x59c>
     a68:	b	a6c <generate_type+0x598>
     a6c:	b	a90 <generate_type+0x5bc>
     a70:	movw	r0, #0
     a74:	movt	r0, #0
     a78:	movw	r1, #0
     a7c:	movt	r1, #0
     a80:	movw	r2, #352	; 0x160
     a84:	movw	r3, #0
     a88:	movt	r3, #0
     a8c:	bl	0 <__assert_fail>
     a90:	sub	r0, fp, #44	; 0x2c
     a94:	movw	r1, #0
     a98:	movt	r1, #0
     a9c:	bl	17dc <fic_printf>
     aa0:	ldr	r1, [fp, #-12]
     aa4:	ldr	r1, [r1, #32]
     aa8:	str	r0, [sp, #284]	; 0x11c
     aac:	mov	r0, r1
     ab0:	movw	r1, #0
     ab4:	movt	r1, #0
     ab8:	bl	0 <coda_expression_print_xml>
     abc:	movw	r1, #0
     ac0:	movt	r1, #0
     ac4:	str	r0, [sp, #280]	; 0x118
     ac8:	mov	r0, r1
     acc:	bl	1cc <ff_printf>
     ad0:	str	r0, [sp, #276]	; 0x114
     ad4:	ldr	r0, [fp, #-12]
     ad8:	ldr	r0, [r0, #36]	; 0x24
     adc:	movw	r1, #0
     ae0:	cmp	r0, r1
     ae4:	beq	cb8 <generate_type+0x7e4>
     ae8:	movw	r0, #0
     aec:	str	r0, [fp, #-52]	; 0xffffffcc
     af0:	ldr	r0, [fp, #-52]	; 0xffffffcc
     af4:	ldr	r1, [fp, #-12]
     af8:	ldr	r1, [r1, #36]	; 0x24
     afc:	ldr	r1, [r1, #48]	; 0x30
     b00:	cmp	r0, r1
     b04:	bge	cb4 <generate_type+0x7e0>
     b08:	ldr	r0, [fp, #-12]
     b0c:	ldr	r0, [r0, #36]	; 0x24
     b10:	ldr	r0, [r0, #52]	; 0x34
     b14:	ldr	r1, [fp, #-52]	; 0xffffffcc
     b18:	add	r0, r0, r1, lsl #2
     b1c:	ldr	r0, [r0]
     b20:	str	r0, [fp, #-80]	; 0xffffffb0
     b24:	ldr	r0, [fp, #-80]	; 0xffffffb0
     b28:	ldr	r2, [r0]
     b2c:	sub	r0, fp, #44	; 0x2c
     b30:	movw	r1, #0
     b34:	movt	r1, #0
     b38:	bl	17dc <fic_printf>
     b3c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     b40:	ldr	r1, [r1, #4]
     b44:	movw	r2, #0
     b48:	cmp	r1, r2
     b4c:	str	r0, [sp, #272]	; 0x110
     b50:	beq	ba4 <generate_type+0x6d0>
     b54:	ldr	r0, [fp, #-80]	; 0xffffffb0
     b58:	ldr	r0, [r0, #4]
     b5c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     b60:	ldr	r1, [r1]
     b64:	bl	0 <strcmp>
     b68:	cmp	r0, #0
     b6c:	beq	ba4 <generate_type+0x6d0>
     b70:	movw	r0, #0
     b74:	movt	r0, #0
     b78:	bl	1cc <ff_printf>
     b7c:	ldr	lr, [fp, #-80]	; 0xffffffb0
     b80:	ldr	lr, [lr, #4]
     b84:	str	r0, [sp, #268]	; 0x10c
     b88:	mov	r0, lr
     b8c:	mvn	r1, #0
     b90:	bl	1884 <generate_xml_string>
     b94:	movw	r0, #0
     b98:	movt	r0, #0
     b9c:	bl	1cc <ff_printf>
     ba0:	str	r0, [sp, #264]	; 0x108
     ba4:	movw	r0, #0
     ba8:	movt	r0, #0
     bac:	bl	1cc <ff_printf>
     bb0:	movw	lr, #0
     bb4:	movt	lr, #0
     bb8:	ldr	r1, [lr]
     bbc:	add	r1, r1, #1
     bc0:	str	r1, [lr]
     bc4:	ldr	r1, [fp, #-80]	; 0xffffffb0
     bc8:	ldr	r1, [r1, #8]
     bcc:	ldr	lr, [fp, #-28]	; 0xffffffe4
     bd0:	str	r0, [sp, #260]	; 0x104
     bd4:	mov	r0, r1
     bd8:	mov	r1, lr
     bdc:	bl	4d4 <generate_type>
     be0:	ldr	r0, [fp, #-80]	; 0xffffffb0
     be4:	ldr	r0, [r0, #12]
     be8:	cmp	r0, #0
     bec:	beq	c00 <generate_type+0x72c>
     bf0:	movw	r0, #0
     bf4:	movt	r0, #0
     bf8:	bl	46c <fi_printf>
     bfc:	str	r0, [sp, #256]	; 0x100
     c00:	ldr	r0, [fp, #-80]	; 0xffffffb0
     c04:	ldrsb	r0, [r0, #16]
     c08:	cmp	r0, #0
     c0c:	beq	c7c <generate_type+0x7a8>
     c10:	ldr	r0, [fp, #-80]	; 0xffffffb0
     c14:	ldr	r0, [r0, #20]
     c18:	movw	r1, #0
     c1c:	cmp	r0, r1
     c20:	beq	c68 <generate_type+0x794>
     c24:	movw	r0, #0
     c28:	movt	r0, #0
     c2c:	bl	46c <fi_printf>
     c30:	ldr	lr, [fp, #-80]	; 0xffffffb0
     c34:	ldr	lr, [lr, #20]
     c38:	str	r0, [sp, #252]	; 0xfc
     c3c:	mov	r0, lr
     c40:	movw	r1, #0
     c44:	movt	r1, #0
     c48:	bl	0 <coda_expression_print_xml>
     c4c:	movw	r1, #0
     c50:	movt	r1, #0
     c54:	str	r0, [sp, #248]	; 0xf8
     c58:	mov	r0, r1
     c5c:	bl	1cc <ff_printf>
     c60:	str	r0, [sp, #244]	; 0xf4
     c64:	b	c78 <generate_type+0x7a4>
     c68:	movw	r0, #0
     c6c:	movt	r0, #0
     c70:	bl	46c <fi_printf>
     c74:	str	r0, [sp, #240]	; 0xf0
     c78:	b	c7c <generate_type+0x7a8>
     c7c:	movw	r0, #0
     c80:	movt	r0, #0
     c84:	ldr	r1, [r0]
     c88:	mvn	r2, #0
     c8c:	add	r1, r1, r2
     c90:	str	r1, [r0]
     c94:	movw	r0, #0
     c98:	movt	r0, #0
     c9c:	bl	46c <fi_printf>
     ca0:	str	r0, [sp, #236]	; 0xec
     ca4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     ca8:	add	r0, r0, #1
     cac:	str	r0, [fp, #-52]	; 0xffffffcc
     cb0:	b	af0 <generate_type+0x61c>
     cb4:	b	cb8 <generate_type+0x7e4>
     cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
     cbc:	cmp	r0, #6
     cc0:	str	r0, [sp, #232]	; 0xe8
     cc4:	bhi	15ec <generate_type+0x1118>
     cc8:	add	r0, pc, #8
     ccc:	ldr	r1, [sp, #232]	; 0xe8
     cd0:	ldr	r0, [r0, r1, lsl #2]
     cd4:	mov	pc, r0
     cd8:	.word	0x00000cf4
     cdc:	.word	0x00000fd0
     ce0:	.word	0x00001134
     ce4:	.word	0x00001134
     ce8:	.word	0x0000145c
     cec:	.word	0x000014f0
     cf0:	.word	0x00001550
     cf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     cf8:	cmp	r0, #0
     cfc:	beq	d58 <generate_type+0x884>
     d00:	ldr	r0, [fp, #-12]
     d04:	ldr	r0, [r0, #68]	; 0x44
     d08:	movw	r1, #0
     d0c:	cmp	r0, r1
     d10:	beq	d58 <generate_type+0x884>
     d14:	sub	r0, fp, #44	; 0x2c
     d18:	movw	r1, #0
     d1c:	movt	r1, #0
     d20:	bl	17dc <fic_printf>
     d24:	ldr	r1, [fp, #-12]
     d28:	ldr	r1, [r1, #68]	; 0x44
     d2c:	str	r0, [sp, #228]	; 0xe4
     d30:	mov	r0, r1
     d34:	movw	r1, #0
     d38:	movt	r1, #0
     d3c:	bl	0 <coda_expression_print_xml>
     d40:	movw	r1, #0
     d44:	movt	r1, #0
     d48:	str	r0, [sp, #224]	; 0xe0
     d4c:	mov	r0, r1
     d50:	bl	1cc <ff_printf>
     d54:	str	r0, [sp, #220]	; 0xdc
     d58:	ldr	r0, [fp, #-12]
     d5c:	sub	r1, fp, #84	; 0x54
     d60:	bl	0 <coda_type_get_num_record_fields>
     d64:	movw	r1, #0
     d68:	str	r1, [fp, #-52]	; 0xffffffcc
     d6c:	str	r0, [sp, #216]	; 0xd8
     d70:	ldr	r0, [fp, #-52]	; 0xffffffcc
     d74:	ldr	r1, [fp, #-84]	; 0xffffffac
     d78:	cmp	r0, r1
     d7c:	bge	fcc <generate_type+0xaf8>
     d80:	ldr	r0, [fp, #-12]
     d84:	ldr	r0, [r0, #52]	; 0x34
     d88:	ldr	r1, [fp, #-52]	; 0xffffffcc
     d8c:	add	r0, r0, r1, lsl #2
     d90:	ldr	r0, [r0]
     d94:	str	r0, [fp, #-88]	; 0xffffffa8
     d98:	ldr	r0, [fp, #-88]	; 0xffffffa8
     d9c:	ldr	r2, [r0]
     da0:	sub	r0, fp, #44	; 0x2c
     da4:	movw	r1, #0
     da8:	movt	r1, #0
     dac:	bl	17dc <fic_printf>
     db0:	ldr	r1, [fp, #-88]	; 0xffffffa8
     db4:	ldr	r1, [r1, #4]
     db8:	movw	r2, #0
     dbc:	cmp	r1, r2
     dc0:	str	r0, [sp, #212]	; 0xd4
     dc4:	beq	e18 <generate_type+0x944>
     dc8:	ldr	r0, [fp, #-88]	; 0xffffffa8
     dcc:	ldr	r0, [r0, #4]
     dd0:	ldr	r1, [fp, #-88]	; 0xffffffa8
     dd4:	ldr	r1, [r1]
     dd8:	bl	0 <strcmp>
     ddc:	cmp	r0, #0
     de0:	beq	e18 <generate_type+0x944>
     de4:	movw	r0, #0
     de8:	movt	r0, #0
     dec:	bl	1cc <ff_printf>
     df0:	ldr	lr, [fp, #-88]	; 0xffffffa8
     df4:	ldr	lr, [lr, #4]
     df8:	str	r0, [sp, #208]	; 0xd0
     dfc:	mov	r0, lr
     e00:	mvn	r1, #0
     e04:	bl	1884 <generate_xml_string>
     e08:	movw	r0, #0
     e0c:	movt	r0, #0
     e10:	bl	1cc <ff_printf>
     e14:	str	r0, [sp, #204]	; 0xcc
     e18:	movw	r0, #0
     e1c:	movt	r0, #0
     e20:	bl	1cc <ff_printf>
     e24:	movw	lr, #0
     e28:	movt	lr, #0
     e2c:	ldr	r1, [lr]
     e30:	add	r1, r1, #1
     e34:	str	r1, [lr]
     e38:	ldr	r1, [fp, #-88]	; 0xffffffa8
     e3c:	ldr	r1, [r1, #8]
     e40:	ldr	lr, [fp, #-28]	; 0xffffffe4
     e44:	str	r0, [sp, #200]	; 0xc8
     e48:	mov	r0, r1
     e4c:	mov	r1, lr
     e50:	bl	4d4 <generate_type>
     e54:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e58:	ldr	r0, [r0, #12]
     e5c:	cmp	r0, #0
     e60:	beq	e74 <generate_type+0x9a0>
     e64:	movw	r0, #0
     e68:	movt	r0, #0
     e6c:	bl	46c <fi_printf>
     e70:	str	r0, [sp, #196]	; 0xc4
     e74:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e78:	ldrsb	r0, [r0, #16]
     e7c:	cmp	r0, #0
     e80:	beq	ef0 <generate_type+0xa1c>
     e84:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e88:	ldr	r0, [r0, #20]
     e8c:	movw	r1, #0
     e90:	cmp	r0, r1
     e94:	beq	edc <generate_type+0xa08>
     e98:	movw	r0, #0
     e9c:	movt	r0, #0
     ea0:	bl	46c <fi_printf>
     ea4:	ldr	lr, [fp, #-88]	; 0xffffffa8
     ea8:	ldr	lr, [lr, #20]
     eac:	str	r0, [sp, #192]	; 0xc0
     eb0:	mov	r0, lr
     eb4:	movw	r1, #0
     eb8:	movt	r1, #0
     ebc:	bl	0 <coda_expression_print_xml>
     ec0:	movw	r1, #0
     ec4:	movt	r1, #0
     ec8:	str	r0, [sp, #188]	; 0xbc
     ecc:	mov	r0, r1
     ed0:	bl	1cc <ff_printf>
     ed4:	str	r0, [sp, #184]	; 0xb8
     ed8:	b	eec <generate_type+0xa18>
     edc:	movw	r0, #0
     ee0:	movt	r0, #0
     ee4:	bl	46c <fi_printf>
     ee8:	str	r0, [sp, #180]	; 0xb4
     eec:	b	ef0 <generate_type+0xa1c>
     ef0:	ldr	r0, [fp, #-88]	; 0xffffffa8
     ef4:	ldr	r0, [r0, #28]
     ef8:	cmp	r0, #0
     efc:	blt	f3c <generate_type+0xa68>
     f00:	b	f04 <generate_type+0xa30>
     f04:	sub	r2, fp, #109	; 0x6d
     f08:	ldr	r0, [fp, #-88]	; 0xffffffa8
     f0c:	ldr	r1, [r0, #24]
     f10:	ldr	r0, [r0, #28]
     f14:	str	r0, [sp, #176]	; 0xb0
     f18:	mov	r0, r1
     f1c:	ldr	r1, [sp, #176]	; 0xb0
     f20:	bl	0 <coda_str64>
     f24:	sub	r1, fp, #109	; 0x6d
     f28:	movw	r0, #0
     f2c:	movt	r0, #0
     f30:	bl	46c <fi_printf>
     f34:	str	r0, [sp, #172]	; 0xac
     f38:	b	f94 <generate_type+0xac0>
     f3c:	ldr	r0, [fp, #-88]	; 0xffffffa8
     f40:	ldr	r0, [r0, #32]
     f44:	movw	r1, #0
     f48:	cmp	r0, r1
     f4c:	beq	f90 <generate_type+0xabc>
     f50:	movw	r0, #0
     f54:	movt	r0, #0
     f58:	bl	46c <fi_printf>
     f5c:	ldr	lr, [fp, #-88]	; 0xffffffa8
     f60:	ldr	lr, [lr, #32]
     f64:	str	r0, [sp, #168]	; 0xa8
     f68:	mov	r0, lr
     f6c:	movw	r1, #0
     f70:	movt	r1, #0
     f74:	bl	0 <coda_expression_print_xml>
     f78:	movw	r1, #0
     f7c:	movt	r1, #0
     f80:	str	r0, [sp, #164]	; 0xa4
     f84:	mov	r0, r1
     f88:	bl	1cc <ff_printf>
     f8c:	str	r0, [sp, #160]	; 0xa0
     f90:	b	f94 <generate_type+0xac0>
     f94:	movw	r0, #0
     f98:	movt	r0, #0
     f9c:	ldr	r1, [r0]
     fa0:	mvn	r2, #0
     fa4:	add	r1, r1, r2
     fa8:	str	r1, [r0]
     fac:	movw	r0, #0
     fb0:	movt	r0, #0
     fb4:	bl	46c <fi_printf>
     fb8:	str	r0, [sp, #156]	; 0x9c
     fbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
     fc0:	add	r0, r0, #1
     fc4:	str	r0, [fp, #-52]	; 0xffffffcc
     fc8:	b	d70 <generate_type+0x89c>
     fcc:	b	15ec <generate_type+0x1118>
     fd0:	ldr	r0, [fp, #-12]
     fd4:	str	r0, [fp, #-116]	; 0xffffff8c
     fd8:	movw	r0, #0
     fdc:	str	r0, [fp, #-52]	; 0xffffffcc
     fe0:	ldr	r0, [fp, #-52]	; 0xffffffcc
     fe4:	ldr	r1, [fp, #-116]	; 0xffffff8c
     fe8:	ldr	r1, [r1, #48]	; 0x30
     fec:	cmp	r0, r1
     ff0:	bge	10e8 <generate_type+0xc14>
     ff4:	ldr	r0, [fp, #-116]	; 0xffffff8c
     ff8:	add	r0, r0, #52	; 0x34
     ffc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1000:	add	r0, r0, r1, lsl #2
    1004:	ldr	r0, [r0]
    1008:	cmp	r0, #0
    100c:	blt	1048 <generate_type+0xb74>
    1010:	sub	r2, fp, #137	; 0x89
    1014:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1018:	ldr	r1, [fp, #-52]	; 0xffffffcc
    101c:	add	r0, r0, r1, lsl #2
    1020:	ldr	r0, [r0, #52]	; 0x34
    1024:	asr	r1, r0, #31
    1028:	bl	0 <coda_str64>
    102c:	sub	r2, fp, #137	; 0x89
    1030:	sub	r0, fp, #44	; 0x2c
    1034:	movw	r1, #0
    1038:	movt	r1, #0
    103c:	bl	17dc <fic_printf>
    1040:	str	r0, [sp, #152]	; 0x98
    1044:	b	10d4 <generate_type+0xc00>
    1048:	ldr	r0, [fp, #-116]	; 0xffffff8c
    104c:	add	r0, r0, #84	; 0x54
    1050:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1054:	add	r0, r0, r1, lsl #2
    1058:	ldr	r0, [r0]
    105c:	movw	r1, #0
    1060:	cmp	r0, r1
    1064:	beq	10bc <generate_type+0xbe8>
    1068:	movw	r1, #0
    106c:	movt	r1, #0
    1070:	sub	r0, fp, #44	; 0x2c
    1074:	bl	17dc <fic_printf>
    1078:	ldr	r1, [fp, #-116]	; 0xffffff8c
    107c:	add	r1, r1, #84	; 0x54
    1080:	ldr	lr, [fp, #-52]	; 0xffffffcc
    1084:	add	r1, r1, lr, lsl #2
    1088:	ldr	r1, [r1]
    108c:	str	r0, [sp, #148]	; 0x94
    1090:	mov	r0, r1
    1094:	movw	r1, #0
    1098:	movt	r1, #0
    109c:	bl	0 <coda_expression_print_xml>
    10a0:	movw	r1, #0
    10a4:	movt	r1, #0
    10a8:	str	r0, [sp, #144]	; 0x90
    10ac:	mov	r0, r1
    10b0:	bl	1cc <ff_printf>
    10b4:	str	r0, [sp, #140]	; 0x8c
    10b8:	b	10d0 <generate_type+0xbfc>
    10bc:	sub	r0, fp, #44	; 0x2c
    10c0:	movw	r1, #0
    10c4:	movt	r1, #0
    10c8:	bl	17dc <fic_printf>
    10cc:	str	r0, [sp, #136]	; 0x88
    10d0:	b	10d4 <generate_type+0xc00>
    10d4:	b	10d8 <generate_type+0xc04>
    10d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    10dc:	add	r0, r0, #1
    10e0:	str	r0, [fp, #-52]	; 0xffffffcc
    10e4:	b	fe0 <generate_type+0xb0c>
    10e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    10ec:	cmp	r0, #0
    10f0:	bne	1120 <generate_type+0xc4c>
    10f4:	movw	r0, #0
    10f8:	movt	r0, #0
    10fc:	bl	1cc <ff_printf>
    1100:	movw	lr, #1
    1104:	str	lr, [fp, #-44]	; 0xffffffd4
    1108:	movw	lr, #0
    110c:	movt	lr, #0
    1110:	ldr	r1, [lr]
    1114:	add	r1, r1, #1
    1118:	str	r1, [lr]
    111c:	str	r0, [sp, #132]	; 0x84
    1120:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1124:	ldr	r0, [r0, #40]	; 0x28
    1128:	ldr	r1, [fp, #-28]	; 0xffffffe4
    112c:	bl	4d4 <generate_type>
    1130:	b	15ec <generate_type+0x1118>
    1134:	ldr	r0, [fp, #-12]
    1138:	str	r0, [fp, #-144]	; 0xffffff70
    113c:	ldr	r0, [fp, #-12]
    1140:	ldr	r0, [r0, #12]
    1144:	bl	0 <coda_type_get_native_type_name>
    1148:	sub	lr, fp, #44	; 0x2c
    114c:	str	r0, [sp, #128]	; 0x80
    1150:	mov	r0, lr
    1154:	movw	r1, #0
    1158:	movt	r1, #0
    115c:	ldr	r2, [sp, #128]	; 0x80
    1160:	bl	17dc <fic_printf>
    1164:	ldr	r1, [fp, #-144]	; 0xffffff70
    1168:	ldr	r1, [r1, #40]	; 0x28
    116c:	movw	r2, #0
    1170:	cmp	r1, r2
    1174:	str	r0, [sp, #124]	; 0x7c
    1178:	beq	11b0 <generate_type+0xcdc>
    117c:	movw	r0, #0
    1180:	movt	r0, #0
    1184:	bl	46c <fi_printf>
    1188:	ldr	lr, [fp, #-144]	; 0xffffff70
    118c:	ldr	lr, [lr, #40]	; 0x28
    1190:	str	r0, [sp, #120]	; 0x78
    1194:	mov	r0, lr
    1198:	mvn	r1, #0
    119c:	bl	1884 <generate_xml_string>
    11a0:	movw	r0, #0
    11a4:	movt	r0, #0
    11a8:	bl	1cc <ff_printf>
    11ac:	str	r0, [sp, #116]	; 0x74
    11b0:	ldr	r0, [fp, #-144]	; 0xffffff70
    11b4:	ldr	r0, [r0, #44]	; 0x2c
    11b8:	cmp	r0, #1
    11bc:	bne	11d0 <generate_type+0xcfc>
    11c0:	movw	r0, #0
    11c4:	movt	r0, #0
    11c8:	bl	46c <fi_printf>
    11cc:	str	r0, [sp, #112]	; 0x70
    11d0:	ldr	r0, [fp, #-144]	; 0xffffff70
    11d4:	ldr	r0, [r0, #48]	; 0x30
    11d8:	movw	r1, #0
    11dc:	cmp	r0, r1
    11e0:	beq	1340 <generate_type+0xe6c>
    11e4:	ldr	r0, [fp, #-144]	; 0xffffff70
    11e8:	ldr	r0, [r0, #48]	; 0x30
    11ec:	vldr	d16, [r0]
    11f0:	ldr	r0, [fp, #-144]	; 0xffffff70
    11f4:	ldr	r0, [r0, #48]	; 0x30
    11f8:	vldr	d17, [r0, #8]
    11fc:	movw	r0, #0
    1200:	movt	r0, #0
    1204:	vmov	r2, r3, d16
    1208:	vstr	d17, [sp]
    120c:	bl	46c <fi_printf>
    1210:	ldr	r2, [fp, #-144]	; 0xffffff70
    1214:	ldr	r2, [r2, #48]	; 0x30
    1218:	vldr	d16, [r2, #16]
    121c:	vcmp.f64	d16, #0.0
    1220:	vmrs	APSR_nzcv, fpscr
    1224:	str	r0, [sp, #108]	; 0x6c
    1228:	beq	124c <generate_type+0xd78>
    122c:	ldr	r0, [fp, #-144]	; 0xffffff70
    1230:	ldr	r0, [r0, #48]	; 0x30
    1234:	vldr	d16, [r0, #16]
    1238:	movw	r0, #0
    123c:	movt	r0, #0
    1240:	vmov	r2, r3, d16
    1244:	bl	1cc <ff_printf>
    1248:	str	r0, [sp, #104]	; 0x68
    124c:	ldr	r0, [fp, #-144]	; 0xffffff70
    1250:	ldr	r0, [r0, #48]	; 0x30
    1254:	vldr	d0, [r0, #24]
    1258:	bl	0 <coda_isNaN>
    125c:	cmp	r0, #0
    1260:	bne	1284 <generate_type+0xdb0>
    1264:	ldr	r0, [fp, #-144]	; 0xffffff70
    1268:	ldr	r0, [r0, #48]	; 0x30
    126c:	vldr	d16, [r0, #24]
    1270:	movw	r0, #0
    1274:	movt	r0, #0
    1278:	vmov	r2, r3, d16
    127c:	bl	1cc <ff_printf>
    1280:	str	r0, [sp, #100]	; 0x64
    1284:	ldr	r0, [fp, #-144]	; 0xffffff70
    1288:	ldr	r0, [r0, #48]	; 0x30
    128c:	ldr	r0, [r0, #32]
    1290:	movw	r1, #0
    1294:	cmp	r0, r1
    1298:	beq	132c <generate_type+0xe58>
    129c:	movw	r0, #0
    12a0:	movt	r0, #0
    12a4:	bl	1cc <ff_printf>
    12a8:	movw	lr, #0
    12ac:	movt	lr, #0
    12b0:	ldr	r1, [lr]
    12b4:	add	r1, r1, #1
    12b8:	str	r1, [lr]
    12bc:	movw	r1, #0
    12c0:	movt	r1, #0
    12c4:	str	r0, [sp, #96]	; 0x60
    12c8:	mov	r0, r1
    12cc:	bl	46c <fi_printf>
    12d0:	ldr	r1, [fp, #-144]	; 0xffffff70
    12d4:	ldr	r1, [r1, #48]	; 0x30
    12d8:	ldr	r1, [r1, #32]
    12dc:	str	r0, [sp, #92]	; 0x5c
    12e0:	mov	r0, r1
    12e4:	mvn	r1, #0
    12e8:	bl	1884 <generate_xml_string>
    12ec:	movw	r0, #0
    12f0:	movt	r0, #0
    12f4:	bl	1cc <ff_printf>
    12f8:	movw	r1, #0
    12fc:	movt	r1, #0
    1300:	ldr	lr, [r1]
    1304:	mvn	r2, #0
    1308:	add	r2, lr, r2
    130c:	str	r2, [r1]
    1310:	movw	r1, #0
    1314:	movt	r1, #0
    1318:	str	r0, [sp, #88]	; 0x58
    131c:	mov	r0, r1
    1320:	bl	46c <fi_printf>
    1324:	str	r0, [sp, #84]	; 0x54
    1328:	b	133c <generate_type+0xe68>
    132c:	movw	r0, #0
    1330:	movt	r0, #0
    1334:	bl	1cc <ff_printf>
    1338:	str	r0, [sp, #80]	; 0x50
    133c:	b	1340 <generate_type+0xe6c>
    1340:	ldr	r0, [fp, #-144]	; 0xffffff70
    1344:	ldr	r0, [r0, #52]	; 0x34
    1348:	movw	r1, #0
    134c:	cmp	r0, r1
    1350:	beq	1458 <generate_type+0xf84>
    1354:	movw	r0, #0
    1358:	str	r0, [fp, #-52]	; 0xffffffcc
    135c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1360:	ldr	r1, [fp, #-144]	; 0xffffff70
    1364:	ldr	r1, [r1, #52]	; 0x34
    1368:	ldr	r1, [r1, #8]
    136c:	cmp	r0, r1
    1370:	bge	1454 <generate_type+0xf80>
    1374:	ldr	r0, [fp, #-144]	; 0xffffff70
    1378:	ldr	r0, [r0, #52]	; 0x34
    137c:	ldr	r0, [r0, #12]
    1380:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1384:	add	r0, r0, r1, lsl #2
    1388:	ldr	r0, [r0]
    138c:	str	r0, [fp, #-148]	; 0xffffff6c
    1390:	movw	r0, #0
    1394:	movt	r0, #0
    1398:	bl	46c <fi_printf>
    139c:	ldr	r1, [fp, #-148]	; 0xffffff6c
    13a0:	ldr	r1, [r1, #4]
    13a4:	ldr	lr, [fp, #-148]	; 0xffffff6c
    13a8:	ldr	lr, [lr]
    13ac:	str	r0, [sp, #76]	; 0x4c
    13b0:	mov	r0, r1
    13b4:	mov	r1, lr
    13b8:	bl	1998 <generate_escaped_string>
    13bc:	movw	r0, #0
    13c0:	movt	r0, #0
    13c4:	bl	1cc <ff_printf>
    13c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    13cc:	cmp	r1, #2
    13d0:	str	r0, [sp, #72]	; 0x48
    13d4:	bne	1410 <generate_type+0xf3c>
    13d8:	sub	r2, fp, #169	; 0xa9
    13dc:	ldr	r0, [fp, #-148]	; 0xffffff6c
    13e0:	ldr	r1, [r0, #8]
    13e4:	ldr	r0, [r0, #12]
    13e8:	str	r0, [sp, #68]	; 0x44
    13ec:	mov	r0, r1
    13f0:	ldr	r1, [sp, #68]	; 0x44
    13f4:	bl	0 <coda_str64>
    13f8:	sub	r1, fp, #169	; 0xa9
    13fc:	movw	r0, #0
    1400:	movt	r0, #0
    1404:	bl	1cc <ff_printf>
    1408:	str	r0, [sp, #64]	; 0x40
    140c:	b	1434 <generate_type+0xf60>
    1410:	sub	r0, fp, #193	; 0xc1
    1414:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1418:	vldr	d0, [r1, #8]
    141c:	bl	0 <coda_strfl>
    1420:	sub	r1, fp, #193	; 0xc1
    1424:	movw	r0, #0
    1428:	movt	r0, #0
    142c:	bl	1cc <ff_printf>
    1430:	str	r0, [sp, #60]	; 0x3c
    1434:	movw	r0, #0
    1438:	movt	r0, #0
    143c:	bl	1cc <ff_printf>
    1440:	str	r0, [sp, #56]	; 0x38
    1444:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1448:	add	r0, r0, #1
    144c:	str	r0, [fp, #-52]	; 0xffffffcc
    1450:	b	135c <generate_type+0xe88>
    1454:	b	1458 <generate_type+0xf84>
    1458:	b	15ec <generate_type+0x1118>
    145c:	ldr	r0, [fp, #-12]
    1460:	str	r0, [fp, #-200]	; 0xffffff38
    1464:	ldr	r0, [fp, #-12]
    1468:	ldr	r0, [r0, #12]
    146c:	cmp	r0, #11
    1470:	beq	14a0 <generate_type+0xfcc>
    1474:	ldr	r0, [fp, #-12]
    1478:	ldr	r0, [r0, #12]
    147c:	bl	0 <coda_type_get_native_type_name>
    1480:	sub	lr, fp, #44	; 0x2c
    1484:	str	r0, [sp, #52]	; 0x34
    1488:	mov	r0, lr
    148c:	movw	r1, #0
    1490:	movt	r1, #0
    1494:	ldr	r2, [sp, #52]	; 0x34
    1498:	bl	17dc <fic_printf>
    149c:	str	r0, [sp, #48]	; 0x30
    14a0:	ldr	r0, [fp, #-200]	; 0xffffff38
    14a4:	ldr	r0, [r0, #40]	; 0x28
    14a8:	movw	r1, #0
    14ac:	cmp	r0, r1
    14b0:	beq	14ec <generate_type+0x1018>
    14b4:	sub	r0, fp, #44	; 0x2c
    14b8:	movw	r1, #0
    14bc:	movt	r1, #0
    14c0:	bl	17dc <fic_printf>
    14c4:	ldr	r1, [fp, #-200]	; 0xffffff38
    14c8:	ldr	r1, [r1, #40]	; 0x28
    14cc:	str	r0, [sp, #44]	; 0x2c
    14d0:	mov	r0, r1
    14d4:	mvn	r1, #0
    14d8:	bl	1998 <generate_escaped_string>
    14dc:	movw	r0, #0
    14e0:	movt	r0, #0
    14e4:	bl	1cc <ff_printf>
    14e8:	str	r0, [sp, #40]	; 0x28
    14ec:	b	15ec <generate_type+0x1118>
    14f0:	ldr	r0, [fp, #-12]
    14f4:	str	r0, [fp, #-204]	; 0xffffff34
    14f8:	ldr	r0, [fp, #-204]	; 0xffffff34
    14fc:	ldr	r0, [r0, #44]	; 0x2c
    1500:	movw	r1, #0
    1504:	cmp	r0, r1
    1508:	beq	154c <generate_type+0x1078>
    150c:	sub	r0, fp, #44	; 0x2c
    1510:	movw	r1, #0
    1514:	movt	r1, #0
    1518:	bl	17dc <fic_printf>
    151c:	ldr	r1, [fp, #-204]	; 0xffffff34
    1520:	ldr	r1, [r1, #44]	; 0x2c
    1524:	ldr	lr, [fp, #-204]	; 0xffffff34
    1528:	ldr	lr, [lr, #40]	; 0x28
    152c:	str	r0, [sp, #36]	; 0x24
    1530:	mov	r0, r1
    1534:	mov	r1, lr
    1538:	bl	1998 <generate_escaped_string>
    153c:	movw	r0, #0
    1540:	movt	r0, #0
    1544:	bl	1cc <ff_printf>
    1548:	str	r0, [sp, #32]
    154c:	b	15ec <generate_type+0x1118>
    1550:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1554:	cmp	r0, #1
    1558:	bne	15a4 <generate_type+0x10d0>
    155c:	ldr	r0, [fp, #-12]
    1560:	ldr	r0, [r0, #48]	; 0x30
    1564:	movw	r1, #0
    1568:	cmp	r0, r1
    156c:	beq	15a4 <generate_type+0x10d0>
    1570:	movw	r0, #0
    1574:	movt	r0, #0
    1578:	bl	46c <fi_printf>
    157c:	ldr	lr, [fp, #-12]
    1580:	ldr	lr, [lr, #48]	; 0x30
    1584:	str	r0, [sp, #28]
    1588:	mov	r0, lr
    158c:	mvn	r1, #0
    1590:	bl	1884 <generate_xml_string>
    1594:	movw	r0, #0
    1598:	movt	r0, #0
    159c:	bl	1cc <ff_printf>
    15a0:	str	r0, [sp, #24]
    15a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15a8:	cmp	r0, #0
    15ac:	bne	15dc <generate_type+0x1108>
    15b0:	movw	r0, #0
    15b4:	movt	r0, #0
    15b8:	bl	1cc <ff_printf>
    15bc:	movw	lr, #1
    15c0:	str	lr, [fp, #-44]	; 0xffffffd4
    15c4:	movw	lr, #0
    15c8:	movt	lr, #0
    15cc:	ldr	r1, [lr]
    15d0:	add	r1, r1, #1
    15d4:	str	r1, [lr]
    15d8:	str	r0, [sp, #20]
    15dc:	ldr	r0, [fp, #-12]
    15e0:	ldr	r0, [r0, #44]	; 0x2c
    15e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    15e8:	bl	4d4 <generate_type>
    15ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15f0:	cmp	r0, #0
    15f4:	beq	1628 <generate_type+0x1154>
    15f8:	movw	r0, #0
    15fc:	movt	r0, #0
    1600:	ldr	r1, [r0]
    1604:	mvn	r2, #0
    1608:	add	r1, r1, r2
    160c:	str	r1, [r0]
    1610:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1614:	movw	r0, #0
    1618:	movt	r0, #0
    161c:	bl	46c <fi_printf>
    1620:	str	r0, [sp, #16]
    1624:	b	1638 <generate_type+0x1164>
    1628:	movw	r0, #0
    162c:	movt	r0, #0
    1630:	bl	1cc <ff_printf>
    1634:	str	r0, [sp, #12]
    1638:	sub	sp, fp, #8
    163c:	pop	{r4, r5, fp, pc}

00001640 <generate_product_variable>:
    1640:	push	{fp, lr}
    1644:	mov	fp, sp
    1648:	sub	sp, sp, #40	; 0x28
    164c:	str	r0, [fp, #-4]
    1650:	ldr	r0, [fp, #-4]
    1654:	ldr	r1, [r0]
    1658:	movw	r0, #0
    165c:	movt	r0, #0
    1660:	bl	46c <fi_printf>
    1664:	movw	r1, #0
    1668:	movt	r1, #0
    166c:	ldr	lr, [r1]
    1670:	add	lr, lr, #1
    1674:	str	lr, [r1]
    1678:	ldr	r1, [fp, #-4]
    167c:	ldr	r1, [r1, #4]
    1680:	movw	lr, #0
    1684:	cmp	r1, lr
    1688:	str	r0, [fp, #-8]
    168c:	beq	16d0 <generate_product_variable+0x90>
    1690:	movw	r0, #0
    1694:	movt	r0, #0
    1698:	bl	46c <fi_printf>
    169c:	ldr	lr, [fp, #-4]
    16a0:	ldr	lr, [lr, #4]
    16a4:	str	r0, [fp, #-12]
    16a8:	mov	r0, lr
    16ac:	movw	r1, #0
    16b0:	movt	r1, #0
    16b4:	bl	0 <coda_expression_print_xml>
    16b8:	movw	r1, #0
    16bc:	movt	r1, #0
    16c0:	str	r0, [fp, #-16]
    16c4:	mov	r0, r1
    16c8:	bl	1cc <ff_printf>
    16cc:	str	r0, [sp, #20]
    16d0:	movw	r0, #0
    16d4:	movt	r0, #0
    16d8:	bl	46c <fi_printf>
    16dc:	ldr	lr, [fp, #-4]
    16e0:	ldr	lr, [lr, #8]
    16e4:	str	r0, [sp, #16]
    16e8:	mov	r0, lr
    16ec:	movw	r1, #0
    16f0:	movt	r1, #0
    16f4:	bl	0 <coda_expression_print_xml>
    16f8:	movw	r1, #0
    16fc:	movt	r1, #0
    1700:	str	r0, [sp, #12]
    1704:	mov	r0, r1
    1708:	bl	1cc <ff_printf>
    170c:	movw	r1, #0
    1710:	movt	r1, #0
    1714:	ldr	lr, [r1]
    1718:	mvn	r2, #0
    171c:	add	r2, lr, r2
    1720:	str	r2, [r1]
    1724:	movw	r1, #0
    1728:	movt	r1, #0
    172c:	str	r0, [sp, #8]
    1730:	mov	r0, r1
    1734:	bl	46c <fi_printf>
    1738:	str	r0, [sp, #4]
    173c:	mov	sp, fp
    1740:	pop	{fp, pc}

00001744 <indent>:
    1744:	push	{fp, lr}
    1748:	mov	fp, sp
    174c:	sub	sp, sp, #8
    1750:	movw	r0, #0
    1754:	movt	r0, #0
    1758:	ldr	r0, [r0]
    175c:	cmp	r0, #0
    1760:	blt	1768 <indent+0x24>
    1764:	b	1788 <indent+0x44>
    1768:	movw	r0, #0
    176c:	movt	r0, #0
    1770:	movw	r1, #0
    1774:	movt	r1, #0
    1778:	movw	r2, #68	; 0x44
    177c:	movw	r3, #0
    1780:	movt	r3, #0
    1784:	bl	0 <__assert_fail>
    1788:	movw	r0, #0
    178c:	movt	r0, #0
    1790:	ldr	r0, [r0]
    1794:	str	r0, [sp, #4]
    1798:	ldr	r0, [sp, #4]
    179c:	cmp	r0, #0
    17a0:	beq	17d4 <indent+0x90>
    17a4:	movw	r0, #0
    17a8:	movt	r0, #0
    17ac:	ldr	r0, [r0]
    17b0:	movw	r1, #0
    17b4:	movt	r1, #0
    17b8:	bl	0 <fprintf>
    17bc:	str	r0, [sp]
    17c0:	ldr	r0, [sp, #4]
    17c4:	mvn	r1, #0
    17c8:	add	r0, r0, r1
    17cc:	str	r0, [sp, #4]
    17d0:	b	1798 <indent+0x54>
    17d4:	mov	sp, fp
    17d8:	pop	{fp, pc}

000017dc <fic_printf>:
    17dc:	sub	sp, sp, #8
    17e0:	push	{fp, lr}
    17e4:	mov	fp, sp
    17e8:	sub	sp, sp, #24
    17ec:	str	r3, [fp, #12]
    17f0:	str	r2, [fp, #8]
    17f4:	str	r0, [fp, #-4]
    17f8:	str	r1, [fp, #-8]
    17fc:	ldr	r0, [fp, #-4]
    1800:	ldr	r0, [r0]
    1804:	cmp	r0, #0
    1808:	bne	183c <fic_printf+0x60>
    180c:	movw	r0, #0
    1810:	movt	r0, #0
    1814:	bl	1cc <ff_printf>
    1818:	ldr	lr, [fp, #-4]
    181c:	movw	r1, #1
    1820:	str	r1, [lr]
    1824:	movw	r1, #0
    1828:	movt	r1, #0
    182c:	ldr	lr, [r1]
    1830:	add	lr, lr, #1
    1834:	str	lr, [r1]
    1838:	str	r0, [sp, #4]
    183c:	bl	1744 <indent>
    1840:	add	lr, fp, #8
    1844:	str	lr, [sp, #8]
    1848:	movw	lr, #0
    184c:	movt	lr, #0
    1850:	ldr	r0, [lr]
    1854:	ldr	r1, [fp, #-8]
    1858:	ldr	r2, [sp, #8]
    185c:	bl	0 <vfprintf>
    1860:	str	r0, [sp, #12]
    1864:	add	r0, sp, #8
    1868:	ldr	r1, [sp, #12]
    186c:	str	r0, [sp]
    1870:	mov	r0, r1
    1874:	mov	sp, fp
    1878:	pop	{fp, lr}
    187c:	add	sp, sp, #8
    1880:	bx	lr

00001884 <generate_xml_string>:
    1884:	push	{fp, lr}
    1888:	mov	fp, sp
    188c:	sub	sp, sp, #32
    1890:	str	r0, [fp, #-4]
    1894:	str	r1, [fp, #-8]
    1898:	ldr	r0, [fp, #-8]
    189c:	cmp	r0, #0
    18a0:	beq	18b4 <generate_xml_string+0x30>
    18a4:	ldr	r0, [fp, #-4]
    18a8:	movw	r1, #0
    18ac:	cmp	r0, r1
    18b0:	bne	18b8 <generate_xml_string+0x34>
    18b4:	b	1990 <generate_xml_string+0x10c>
    18b8:	ldr	r0, [fp, #-8]
    18bc:	cmp	r0, #0
    18c0:	bge	18d0 <generate_xml_string+0x4c>
    18c4:	ldr	r0, [fp, #-4]
    18c8:	bl	0 <strlen>
    18cc:	str	r0, [fp, #-8]
    18d0:	b	18d4 <generate_xml_string+0x50>
    18d4:	ldr	r0, [fp, #-8]
    18d8:	cmp	r0, #0
    18dc:	ble	1990 <generate_xml_string+0x10c>
    18e0:	ldr	r0, [fp, #-4]
    18e4:	ldrb	r0, [r0]
    18e8:	mov	r1, r0
    18ec:	cmp	r0, #38	; 0x26
    18f0:	str	r1, [fp, #-12]
    18f4:	beq	191c <generate_xml_string+0x98>
    18f8:	b	18fc <generate_xml_string+0x78>
    18fc:	ldr	r0, [fp, #-12]
    1900:	cmp	r0, #60	; 0x3c
    1904:	beq	1930 <generate_xml_string+0xac>
    1908:	b	190c <generate_xml_string+0x88>
    190c:	ldr	r0, [fp, #-12]
    1910:	cmp	r0, #62	; 0x3e
    1914:	beq	1944 <generate_xml_string+0xc0>
    1918:	b	1958 <generate_xml_string+0xd4>
    191c:	movw	r0, #0
    1920:	movt	r0, #0
    1924:	bl	1cc <ff_printf>
    1928:	str	r0, [sp, #16]
    192c:	b	1970 <generate_xml_string+0xec>
    1930:	movw	r0, #0
    1934:	movt	r0, #0
    1938:	bl	1cc <ff_printf>
    193c:	str	r0, [sp, #12]
    1940:	b	1970 <generate_xml_string+0xec>
    1944:	movw	r0, #0
    1948:	movt	r0, #0
    194c:	bl	1cc <ff_printf>
    1950:	str	r0, [sp, #8]
    1954:	b	1970 <generate_xml_string+0xec>
    1958:	ldr	r0, [fp, #-4]
    195c:	ldrb	r1, [r0]
    1960:	movw	r0, #0
    1964:	movt	r0, #0
    1968:	bl	1cc <ff_printf>
    196c:	str	r0, [sp, #4]
    1970:	ldr	r0, [fp, #-4]
    1974:	add	r0, r0, #1
    1978:	str	r0, [fp, #-4]
    197c:	ldr	r0, [fp, #-8]
    1980:	mvn	r1, #0
    1984:	add	r0, r0, r1
    1988:	str	r0, [fp, #-8]
    198c:	b	18d4 <generate_xml_string+0x50>
    1990:	mov	sp, fp
    1994:	pop	{fp, pc}

00001998 <generate_escaped_string>:
    1998:	push	{fp, lr}
    199c:	mov	fp, sp
    19a0:	sub	sp, sp, #80	; 0x50
    19a4:	str	r0, [fp, #-4]
    19a8:	str	r1, [fp, #-8]
    19ac:	ldr	r0, [fp, #-8]
    19b0:	cmp	r0, #0
    19b4:	beq	19c8 <generate_escaped_string+0x30>
    19b8:	ldr	r0, [fp, #-4]
    19bc:	movw	r1, #0
    19c0:	cmp	r0, r1
    19c4:	bne	19cc <generate_escaped_string+0x34>
    19c8:	b	1d10 <generate_escaped_string+0x378>
    19cc:	ldr	r0, [fp, #-8]
    19d0:	cmp	r0, #0
    19d4:	bge	19e4 <generate_escaped_string+0x4c>
    19d8:	ldr	r0, [fp, #-4]
    19dc:	bl	0 <strlen>
    19e0:	str	r0, [fp, #-8]
    19e4:	b	19e8 <generate_escaped_string+0x50>
    19e8:	ldr	r0, [fp, #-8]
    19ec:	cmp	r0, #0
    19f0:	ble	1d10 <generate_escaped_string+0x378>
    19f4:	ldr	r0, [fp, #-4]
    19f8:	ldrb	r0, [r0]
    19fc:	sub	r0, r0, #7
    1a00:	cmp	r0, #85	; 0x55
    1a04:	str	r0, [fp, #-12]
    1a08:	bhi	1c8c <generate_escaped_string+0x2f4>
    1a0c:	add	r0, pc, #8
    1a10:	ldr	r1, [fp, #-12]
    1a14:	ldr	r0, [r0, r1, lsl #2]
    1a18:	mov	pc, r0
    1a1c:	.word	0x00001b88
    1a20:	.word	0x00001b9c
    1a24:	.word	0x00001bec
    1a28:	.word	0x00001bc4
    1a2c:	.word	0x00001c00
    1a30:	.word	0x00001bb0
    1a34:	.word	0x00001bd8
    1a38:	.word	0x00001c8c
    1a3c:	.word	0x00001c8c
    1a40:	.word	0x00001c8c
    1a44:	.word	0x00001c8c
    1a48:	.word	0x00001c8c
    1a4c:	.word	0x00001c8c
    1a50:	.word	0x00001c8c
    1a54:	.word	0x00001c8c
    1a58:	.word	0x00001c8c
    1a5c:	.word	0x00001c8c
    1a60:	.word	0x00001c8c
    1a64:	.word	0x00001c8c
    1a68:	.word	0x00001c8c
    1a6c:	.word	0x00001b74
    1a70:	.word	0x00001c8c
    1a74:	.word	0x00001c8c
    1a78:	.word	0x00001c8c
    1a7c:	.word	0x00001c8c
    1a80:	.word	0x00001c78
    1a84:	.word	0x00001c8c
    1a88:	.word	0x00001c28
    1a8c:	.word	0x00001c8c
    1a90:	.word	0x00001c8c
    1a94:	.word	0x00001c8c
    1a98:	.word	0x00001c64
    1a9c:	.word	0x00001c8c
    1aa0:	.word	0x00001c8c
    1aa4:	.word	0x00001c8c
    1aa8:	.word	0x00001c8c
    1aac:	.word	0x00001c8c
    1ab0:	.word	0x00001c8c
    1ab4:	.word	0x00001c8c
    1ab8:	.word	0x00001c8c
    1abc:	.word	0x00001c8c
    1ac0:	.word	0x00001c8c
    1ac4:	.word	0x00001c8c
    1ac8:	.word	0x00001c8c
    1acc:	.word	0x00001c8c
    1ad0:	.word	0x00001c8c
    1ad4:	.word	0x00001c8c
    1ad8:	.word	0x00001c8c
    1adc:	.word	0x00001c8c
    1ae0:	.word	0x00001c8c
    1ae4:	.word	0x00001c8c
    1ae8:	.word	0x00001c8c
    1aec:	.word	0x00001c8c
    1af0:	.word	0x00001c3c
    1af4:	.word	0x00001c8c
    1af8:	.word	0x00001c50
    1afc:	.word	0x00001c8c
    1b00:	.word	0x00001c8c
    1b04:	.word	0x00001c8c
    1b08:	.word	0x00001c8c
    1b0c:	.word	0x00001c8c
    1b10:	.word	0x00001c8c
    1b14:	.word	0x00001c8c
    1b18:	.word	0x00001c8c
    1b1c:	.word	0x00001c8c
    1b20:	.word	0x00001c8c
    1b24:	.word	0x00001c8c
    1b28:	.word	0x00001c8c
    1b2c:	.word	0x00001c8c
    1b30:	.word	0x00001c8c
    1b34:	.word	0x00001c8c
    1b38:	.word	0x00001c8c
    1b3c:	.word	0x00001c8c
    1b40:	.word	0x00001c8c
    1b44:	.word	0x00001c8c
    1b48:	.word	0x00001c8c
    1b4c:	.word	0x00001c8c
    1b50:	.word	0x00001c8c
    1b54:	.word	0x00001c8c
    1b58:	.word	0x00001c8c
    1b5c:	.word	0x00001c8c
    1b60:	.word	0x00001c8c
    1b64:	.word	0x00001c8c
    1b68:	.word	0x00001c8c
    1b6c:	.word	0x00001c8c
    1b70:	.word	0x00001c14
    1b74:	movw	r0, #0
    1b78:	movt	r0, #0
    1b7c:	bl	1cc <ff_printf>
    1b80:	str	r0, [fp, #-16]
    1b84:	b	1cf0 <generate_escaped_string+0x358>
    1b88:	movw	r0, #0
    1b8c:	movt	r0, #0
    1b90:	bl	1cc <ff_printf>
    1b94:	str	r0, [fp, #-20]	; 0xffffffec
    1b98:	b	1cf0 <generate_escaped_string+0x358>
    1b9c:	movw	r0, #0
    1ba0:	movt	r0, #0
    1ba4:	bl	1cc <ff_printf>
    1ba8:	str	r0, [fp, #-24]	; 0xffffffe8
    1bac:	b	1cf0 <generate_escaped_string+0x358>
    1bb0:	movw	r0, #0
    1bb4:	movt	r0, #0
    1bb8:	bl	1cc <ff_printf>
    1bbc:	str	r0, [fp, #-28]	; 0xffffffe4
    1bc0:	b	1cf0 <generate_escaped_string+0x358>
    1bc4:	movw	r0, #0
    1bc8:	movt	r0, #0
    1bcc:	bl	1cc <ff_printf>
    1bd0:	str	r0, [fp, #-32]	; 0xffffffe0
    1bd4:	b	1cf0 <generate_escaped_string+0x358>
    1bd8:	movw	r0, #0
    1bdc:	movt	r0, #0
    1be0:	bl	1cc <ff_printf>
    1be4:	str	r0, [fp, #-36]	; 0xffffffdc
    1be8:	b	1cf0 <generate_escaped_string+0x358>
    1bec:	movw	r0, #0
    1bf0:	movt	r0, #0
    1bf4:	bl	1cc <ff_printf>
    1bf8:	str	r0, [sp, #40]	; 0x28
    1bfc:	b	1cf0 <generate_escaped_string+0x358>
    1c00:	movw	r0, #0
    1c04:	movt	r0, #0
    1c08:	bl	1cc <ff_printf>
    1c0c:	str	r0, [sp, #36]	; 0x24
    1c10:	b	1cf0 <generate_escaped_string+0x358>
    1c14:	movw	r0, #0
    1c18:	movt	r0, #0
    1c1c:	bl	1cc <ff_printf>
    1c20:	str	r0, [sp, #32]
    1c24:	b	1cf0 <generate_escaped_string+0x358>
    1c28:	movw	r0, #0
    1c2c:	movt	r0, #0
    1c30:	bl	1cc <ff_printf>
    1c34:	str	r0, [sp, #28]
    1c38:	b	1cf0 <generate_escaped_string+0x358>
    1c3c:	movw	r0, #0
    1c40:	movt	r0, #0
    1c44:	bl	1cc <ff_printf>
    1c48:	str	r0, [sp, #24]
    1c4c:	b	1cf0 <generate_escaped_string+0x358>
    1c50:	movw	r0, #0
    1c54:	movt	r0, #0
    1c58:	bl	1cc <ff_printf>
    1c5c:	str	r0, [sp, #20]
    1c60:	b	1cf0 <generate_escaped_string+0x358>
    1c64:	movw	r0, #0
    1c68:	movt	r0, #0
    1c6c:	bl	1cc <ff_printf>
    1c70:	str	r0, [sp, #16]
    1c74:	b	1cf0 <generate_escaped_string+0x358>
    1c78:	movw	r0, #0
    1c7c:	movt	r0, #0
    1c80:	bl	1cc <ff_printf>
    1c84:	str	r0, [sp, #12]
    1c88:	b	1cf0 <generate_escaped_string+0x358>
    1c8c:	bl	0 <__ctype_b_loc>
    1c90:	ldr	r0, [r0]
    1c94:	ldr	lr, [fp, #-4]
    1c98:	ldrb	lr, [lr]
    1c9c:	mov	r1, lr
    1ca0:	add	r0, r0, lr, lsl #1
    1ca4:	ldrh	r0, [r0]
    1ca8:	and	r0, r0, #16384	; 0x4000
    1cac:	cmp	r0, #0
    1cb0:	str	r1, [sp, #8]
    1cb4:	bne	1cd4 <generate_escaped_string+0x33c>
    1cb8:	ldr	r0, [fp, #-4]
    1cbc:	ldrb	r1, [r0]
    1cc0:	movw	r0, #0
    1cc4:	movt	r0, #0
    1cc8:	bl	1cc <ff_printf>
    1ccc:	str	r0, [sp, #4]
    1cd0:	b	1cec <generate_escaped_string+0x354>
    1cd4:	ldr	r0, [fp, #-4]
    1cd8:	ldrb	r1, [r0]
    1cdc:	movw	r0, #0
    1ce0:	movt	r0, #0
    1ce4:	bl	1cc <ff_printf>
    1ce8:	str	r0, [sp]
    1cec:	b	1cf0 <generate_escaped_string+0x358>
    1cf0:	ldr	r0, [fp, #-4]
    1cf4:	add	r0, r0, #1
    1cf8:	str	r0, [fp, #-4]
    1cfc:	ldr	r0, [fp, #-8]
    1d00:	mvn	r1, #0
    1d04:	add	r0, r0, r1
    1d08:	str	r0, [fp, #-8]
    1d0c:	b	19e8 <generate_escaped_string+0x50>
    1d10:	mov	sp, fp
    1d14:	pop	{fp, pc}
