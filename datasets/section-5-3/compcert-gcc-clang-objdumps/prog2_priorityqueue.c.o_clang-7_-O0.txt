
../compcert-repos/prog2/CMakeFiles/9.dir/Aula09_Filas_de_Prioridade_e_Heaps/priorityqueue.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fp_insere>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #32
   c:	str	r0, [fp, #-8]
  10:	str	r1, [fp, #-12]
  14:	str	r2, [sp, #16]
  18:	ldr	r0, [fp, #-8]
  1c:	movw	r1, #0
  20:	cmp	r0, r1
  24:	bne	34 <fp_insere+0x34>
  28:	mvn	r0, #0
  2c:	str	r0, [fp, #-4]
  30:	b	13c <fp_insere+0x13c>
  34:	ldr	r0, [fp, #-8]
  38:	ldr	r0, [r0]
  3c:	ldr	r1, [fp, #-8]
  40:	ldr	r1, [r1, #4]
  44:	cmp	r0, r1
  48:	bne	58 <fp_insere+0x58>
  4c:	movw	r0, #0
  50:	str	r0, [fp, #-4]
  54:	b	13c <fp_insere+0x13c>
  58:	ldr	r0, [sp, #16]
  5c:	ldr	r1, [fp, #-12]
  60:	bl	0 <elemento_cria>
  64:	str	r0, [sp, #12]
  68:	movw	r0, #0
  6c:	str	r0, [sp, #8]
  70:	ldr	r0, [sp, #8]
  74:	ldr	r1, [fp, #-8]
  78:	ldr	r1, [r1]
  7c:	cmp	r0, r1
  80:	bge	c0 <fp_insere+0xc0>
  84:	ldr	r0, [fp, #-8]
  88:	ldr	r0, [r0, #8]
  8c:	ldr	r1, [sp, #8]
  90:	add	r0, r0, r1, lsl #2
  94:	ldr	r0, [r0]
  98:	ldr	r1, [sp, #12]
  9c:	bl	0 <maior_que>
  a0:	cmp	r0, #0
  a4:	bne	ac <fp_insere+0xac>
  a8:	b	c0 <fp_insere+0xc0>
  ac:	b	b0 <fp_insere+0xb0>
  b0:	ldr	r0, [sp, #8]
  b4:	add	r0, r0, #1
  b8:	str	r0, [sp, #8]
  bc:	b	70 <fp_insere+0x70>
  c0:	ldr	r0, [fp, #-8]
  c4:	ldr	r0, [r0]
  c8:	str	r0, [sp, #4]
  cc:	ldr	r0, [sp, #4]
  d0:	ldr	r1, [sp, #8]
  d4:	cmp	r0, r1
  d8:	blt	10c <fp_insere+0x10c>
  dc:	ldr	r0, [fp, #-8]
  e0:	ldr	r0, [r0, #8]
  e4:	ldr	r1, [sp, #4]
  e8:	ldr	r2, [r0, r1, lsl #2]
  ec:	add	r1, r1, #1
  f0:	add	r0, r0, r1, lsl #2
  f4:	str	r2, [r0]
  f8:	ldr	r0, [sp, #4]
  fc:	mvn	r1, #0
 100:	add	r0, r0, r1
 104:	str	r0, [sp, #4]
 108:	b	cc <fp_insere+0xcc>
 10c:	ldr	r0, [sp, #12]
 110:	ldr	r1, [fp, #-8]
 114:	ldr	r1, [r1, #8]
 118:	ldr	r2, [sp, #8]
 11c:	add	r1, r1, r2, lsl #2
 120:	str	r0, [r1]
 124:	ldr	r0, [fp, #-8]
 128:	ldr	r1, [r0]
 12c:	add	r1, r1, #1
 130:	str	r1, [r0]
 134:	movw	r0, #1
 138:	str	r0, [fp, #-4]
 13c:	ldr	r0, [fp, #-4]
 140:	mov	sp, fp
 144:	pop	{fp, pc}

00000148 <fp_remove>:
 148:	sub	sp, sp, #16
 14c:	str	r0, [sp, #8]
 150:	ldr	r0, [sp, #8]
 154:	movw	r1, #0
 158:	cmp	r0, r1
 15c:	beq	170 <fp_remove+0x28>
 160:	ldr	r0, [sp, #8]
 164:	ldr	r0, [r0]
 168:	cmp	r0, #0
 16c:	bne	17c <fp_remove+0x34>
 170:	movw	r0, #0
 174:	str	r0, [sp, #12]
 178:	b	1f0 <fp_remove+0xa8>
 17c:	ldr	r0, [sp, #8]
 180:	ldr	r0, [r0, #8]
 184:	ldr	r0, [r0]
 188:	str	r0, [sp, #4]
 18c:	movw	r0, #0
 190:	str	r0, [sp]
 194:	ldr	r0, [sp]
 198:	ldr	r1, [sp, #8]
 19c:	ldr	r1, [r1]
 1a0:	cmp	r0, r1
 1a4:	bge	1d0 <fp_remove+0x88>
 1a8:	ldr	r0, [sp, #8]
 1ac:	ldr	r0, [r0, #8]
 1b0:	ldr	r1, [sp]
 1b4:	add	r0, r0, r1, lsl #2
 1b8:	ldr	r1, [r0, #4]
 1bc:	str	r1, [r0]
 1c0:	ldr	r0, [sp]
 1c4:	add	r0, r0, #1
 1c8:	str	r0, [sp]
 1cc:	b	194 <fp_remove+0x4c>
 1d0:	ldr	r0, [sp, #8]
 1d4:	ldr	r1, [r0]
 1d8:	mvn	r2, #0
 1dc:	add	r1, r1, r2
 1e0:	str	r1, [r0]
 1e4:	ldr	r0, [sp, #4]
 1e8:	ldr	r0, [r0, #4]
 1ec:	str	r0, [sp, #12]
 1f0:	ldr	r0, [sp, #12]
 1f4:	add	sp, sp, #16
 1f8:	bx	lr

000001fc <fp_carrega>:
 1fc:	push	{r4, r5, fp, lr}
 200:	add	fp, sp, #8
 204:	sub	sp, sp, #296	; 0x128
 208:	str	r0, [fp, #-12]
 20c:	str	r1, [fp, #-16]
 210:	ldr	r0, [fp, #-16]
 214:	movw	r1, #0
 218:	movt	r1, #0
 21c:	bl	0 <fopen>
 220:	str	r0, [sp, #24]
 224:	ldr	r0, [sp, #24]
 228:	movw	r1, #0
 22c:	cmp	r0, r1
 230:	bne	248 <fp_carrega+0x4c>
 234:	movw	r0, #0
 238:	movt	r0, #0
 23c:	bl	0 <printf>
 240:	str	r0, [sp, #20]
 244:	b	2e4 <fp_carrega+0xe8>
 248:	b	24c <fp_carrega+0x50>
 24c:	ldr	r0, [sp, #24]
 250:	bl	0 <feof>
 254:	cmp	r0, #0
 258:	movw	r0, #0
 25c:	movne	r0, #1
 260:	mvn	lr, #0
 264:	eor	r0, r0, lr
 268:	tst	r0, #1
 26c:	beq	2d8 <fp_carrega+0xdc>
 270:	ldr	r0, [sp, #24]
 274:	movw	r1, #0
 278:	movt	r1, #0
 27c:	add	r2, sp, #28
 280:	bl	0 <__isoc99_fscanf>
 284:	add	r1, sp, #32
 288:	ldr	r2, [sp, #24]
 28c:	str	r0, [sp, #16]
 290:	mov	r0, r1
 294:	movw	r1, #256	; 0x100
 298:	bl	0 <fgets>
 29c:	add	r1, sp, #32
 2a0:	str	r0, [sp, #12]
 2a4:	mov	r0, r1
 2a8:	str	r1, [sp, #8]
 2ac:	bl	0 <strlen>
 2b0:	sub	r0, r0, #1
 2b4:	ldr	r1, [sp, #8]
 2b8:	add	r0, r1, r0
 2bc:	movw	r2, #0
 2c0:	strb	r2, [r0]
 2c4:	ldr	r0, [fp, #-12]
 2c8:	ldr	r2, [sp, #28]
 2cc:	bl	0 <fp_insere>
 2d0:	str	r0, [sp, #4]
 2d4:	b	24c <fp_carrega+0x50>
 2d8:	ldr	r0, [sp, #24]
 2dc:	bl	0 <fclose>
 2e0:	str	r0, [sp]
 2e4:	sub	sp, fp, #8
 2e8:	pop	{r4, r5, fp, pc}

000002ec <heap_insere>:
 2ec:	push	{fp, lr}
 2f0:	mov	fp, sp
 2f4:	sub	sp, sp, #40	; 0x28
 2f8:	str	r0, [fp, #-8]
 2fc:	str	r1, [fp, #-12]
 300:	str	r2, [fp, #-16]
 304:	str	r3, [sp, #20]
 308:	ldr	r0, [fp, #-8]
 30c:	ldr	r0, [r0]
 310:	ldr	r1, [fp, #-8]
 314:	ldr	r1, [r1, #4]
 318:	cmp	r0, r1
 31c:	bne	32c <heap_insere+0x40>
 320:	movw	r0, #0
 324:	str	r0, [fp, #-4]
 328:	b	434 <heap_insere+0x148>
 32c:	ldr	r0, [sp, #20]
 330:	ldr	r1, [fp, #-16]
 334:	bl	0 <elemento_cria>
 338:	str	r0, [sp, #8]
 33c:	movw	r0, #0
 340:	str	r0, [sp, #16]
 344:	ldr	r0, [sp, #16]
 348:	ldr	r1, [fp, #-8]
 34c:	ldr	r1, [r1]
 350:	cmp	r0, r1
 354:	movw	r0, #0
 358:	str	r0, [sp, #4]
 35c:	bge	3a0 <heap_insere+0xb4>
 360:	ldr	r0, [fp, #-12]
 364:	ldr	r1, [fp, #-8]
 368:	ldr	r1, [r1, #8]
 36c:	ldr	r2, [sp, #16]
 370:	add	r1, r1, r2, lsl #2
 374:	ldr	r1, [r1]
 378:	ldr	r2, [sp, #8]
 37c:	str	r0, [sp]
 380:	mov	r0, r1
 384:	mov	r1, r2
 388:	ldr	r2, [sp]
 38c:	blx	r2
 390:	cmp	r0, #1
 394:	movw	r0, #0
 398:	movne	r0, #1
 39c:	str	r0, [sp, #4]
 3a0:	ldr	r0, [sp, #4]
 3a4:	tst	r0, #1
 3a8:	beq	3c0 <heap_insere+0xd4>
 3ac:	b	3b0 <heap_insere+0xc4>
 3b0:	ldr	r0, [sp, #16]
 3b4:	add	r0, r0, #1
 3b8:	str	r0, [sp, #16]
 3bc:	b	344 <heap_insere+0x58>
 3c0:	ldr	r0, [sp, #16]
 3c4:	str	r0, [sp, #12]
 3c8:	ldr	r0, [sp, #12]
 3cc:	cmp	r0, #0
 3d0:	ble	404 <heap_insere+0x118>
 3d4:	ldr	r0, [fp, #-8]
 3d8:	ldr	r0, [r0, #8]
 3dc:	ldr	r1, [sp, #12]
 3e0:	ldr	r2, [r0, r1, lsl #2]
 3e4:	add	r1, r1, #1
 3e8:	add	r0, r0, r1, lsl #2
 3ec:	str	r2, [r0]
 3f0:	ldr	r0, [sp, #12]
 3f4:	mvn	r1, #0
 3f8:	add	r0, r0, r1
 3fc:	str	r0, [sp, #12]
 400:	b	3c8 <heap_insere+0xdc>
 404:	ldr	r0, [sp, #8]
 408:	ldr	r1, [fp, #-8]
 40c:	ldr	r1, [r1, #8]
 410:	ldr	r2, [sp, #16]
 414:	add	r1, r1, r2, lsl #2
 418:	str	r0, [r1]
 41c:	ldr	r0, [fp, #-8]
 420:	ldr	r1, [r0]
 424:	add	r1, r1, #1
 428:	str	r1, [r0]
 42c:	ldr	r0, [sp, #16]
 430:	str	r0, [fp, #-4]
 434:	ldr	r0, [fp, #-4]
 438:	mov	sp, fp
 43c:	pop	{fp, pc}

00000440 <heap_remove>:
 440:	sub	sp, sp, #8
 444:	str	r0, [sp, #4]
 448:	str	r1, [sp]
 44c:	movw	r0, #0
 450:	add	sp, sp, #8
 454:	bx	lr

00000458 <heap_carrega>:
 458:	push	{r4, r5, fp, lr}
 45c:	add	fp, sp, #8
 460:	sub	sp, sp, #304	; 0x130
 464:	str	r0, [fp, #-12]
 468:	str	r1, [fp, #-16]
 46c:	str	r2, [fp, #-20]	; 0xffffffec
 470:	ldr	r0, [fp, #-20]	; 0xffffffec
 474:	movw	r1, #0
 478:	movt	r1, #0
 47c:	bl	0 <fopen>
 480:	str	r0, [sp, #28]
 484:	ldr	r0, [sp, #28]
 488:	movw	r1, #0
 48c:	cmp	r0, r1
 490:	bne	4a8 <heap_carrega+0x50>
 494:	movw	r0, #0
 498:	movt	r0, #0
 49c:	bl	0 <printf>
 4a0:	str	r0, [sp, #24]
 4a4:	b	54c <heap_carrega+0xf4>
 4a8:	b	4ac <heap_carrega+0x54>
 4ac:	ldr	r0, [sp, #28]
 4b0:	bl	0 <feof>
 4b4:	cmp	r0, #0
 4b8:	movw	r0, #0
 4bc:	movne	r0, #1
 4c0:	mvn	lr, #0
 4c4:	eor	r0, r0, lr
 4c8:	tst	r0, #1
 4cc:	beq	540 <heap_carrega+0xe8>
 4d0:	ldr	r0, [sp, #28]
 4d4:	movw	r1, #0
 4d8:	movt	r1, #0
 4dc:	add	r2, sp, #32
 4e0:	bl	0 <__isoc99_fscanf>
 4e4:	add	r1, sp, #36	; 0x24
 4e8:	ldr	r2, [sp, #28]
 4ec:	str	r0, [sp, #20]
 4f0:	mov	r0, r1
 4f4:	movw	r1, #256	; 0x100
 4f8:	bl	0 <fgets>
 4fc:	add	r1, sp, #36	; 0x24
 500:	str	r0, [sp, #16]
 504:	mov	r0, r1
 508:	str	r1, [sp, #12]
 50c:	bl	0 <strlen>
 510:	sub	r0, r0, #1
 514:	ldr	r1, [sp, #12]
 518:	add	r0, r1, r0
 51c:	movw	r2, #0
 520:	strb	r2, [r0]
 524:	ldr	r0, [fp, #-12]
 528:	ldr	r1, [fp, #-16]
 52c:	ldr	r3, [sp, #32]
 530:	ldr	r2, [sp, #12]
 534:	bl	2ec <heap_insere>
 538:	str	r0, [sp, #8]
 53c:	b	4ac <heap_carrega+0x54>
 540:	ldr	r0, [sp, #28]
 544:	bl	0 <fclose>
 548:	str	r0, [sp, #4]
 54c:	sub	sp, fp, #8
 550:	pop	{r4, r5, fp, pc}

00000554 <main>:
 554:	push	{fp, lr}
 558:	mov	fp, sp
 55c:	sub	sp, sp, #336	; 0x150
 560:	movw	r2, #0
 564:	str	r2, [fp, #-4]
 568:	str	r0, [fp, #-8]
 56c:	str	r1, [fp, #-12]
 570:	movw	r0, #42	; 0x2a
 574:	bl	0 <vetor_cria>
 578:	str	r0, [fp, #-16]
 57c:	movw	r0, #0
 580:	movt	r0, #0
 584:	bl	0 <printf>
 588:	ldr	r1, [fp, #-16]
 58c:	str	r0, [sp, #132]	; 0x84
 590:	mov	r0, r1
 594:	movw	r1, #0
 598:	movt	r1, #0
 59c:	bl	1fc <fp_carrega>
 5a0:	movw	r0, #0
 5a4:	movt	r0, #0
 5a8:	ldr	r1, [r0]
 5ac:	movw	r0, #0
 5b0:	movt	r0, #0
 5b4:	bl	0 <printf>
 5b8:	ldr	r1, [fp, #-16]
 5bc:	str	r0, [sp, #128]	; 0x80
 5c0:	mov	r0, r1
 5c4:	bl	0 <vetor_imprime>
 5c8:	ldr	r0, [fp, #-16]
 5cc:	ldr	r0, [r0]
 5d0:	cmp	r0, #42	; 0x2a
 5d4:	beq	5f4 <main+0xa0>
 5d8:	movw	r0, #0
 5dc:	movt	r0, #0
 5e0:	bl	0 <printf>
 5e4:	movw	lr, #1
 5e8:	str	lr, [fp, #-4]
 5ec:	str	r0, [sp, #124]	; 0x7c
 5f0:	b	a68 <main+0x514>
 5f4:	ldr	r0, [fp, #-16]
 5f8:	bl	148 <fp_remove>
 5fc:	movw	lr, #0
 600:	movt	lr, #0
 604:	str	r0, [sp, #120]	; 0x78
 608:	mov	r0, lr
 60c:	ldr	r1, [sp, #120]	; 0x78
 610:	bl	0 <strcmp>
 614:	cmp	r0, #0
 618:	beq	638 <main+0xe4>
 61c:	movw	r0, #0
 620:	movt	r0, #0
 624:	bl	0 <printf>
 628:	movw	lr, #1
 62c:	str	lr, [fp, #-4]
 630:	str	r0, [sp, #116]	; 0x74
 634:	b	a68 <main+0x514>
 638:	movw	r0, #0
 63c:	movt	r0, #0
 640:	movw	r1, #0
 644:	str	r1, [r0]
 648:	ldr	r0, [fp, #-16]
 64c:	bl	148 <fp_remove>
 650:	movw	r1, #0
 654:	movt	r1, #0
 658:	ldr	r1, [r1]
 65c:	movw	lr, #0
 660:	movt	lr, #0
 664:	str	r0, [sp, #112]	; 0x70
 668:	mov	r0, lr
 66c:	bl	0 <printf>
 670:	movw	r1, #0
 674:	movt	r1, #0
 678:	movw	lr, #0
 67c:	str	lr, [r1]
 680:	ldr	r1, [fp, #-16]
 684:	str	r0, [sp, #108]	; 0x6c
 688:	mov	r0, r1
 68c:	movw	r1, #0
 690:	movt	r1, #0
 694:	movw	r2, #99	; 0x63
 698:	bl	0 <fp_insere>
 69c:	movw	r1, #0
 6a0:	movt	r1, #0
 6a4:	ldr	r1, [r1]
 6a8:	movw	r2, #0
 6ac:	movt	r2, #0
 6b0:	str	r0, [sp, #104]	; 0x68
 6b4:	mov	r0, r2
 6b8:	bl	0 <printf>
 6bc:	ldr	r1, [fp, #-16]
 6c0:	str	r0, [sp, #100]	; 0x64
 6c4:	mov	r0, r1
 6c8:	bl	148 <fp_remove>
 6cc:	movw	r1, #0
 6d0:	movt	r1, #0
 6d4:	movw	r2, #0
 6d8:	str	r2, [r1]
 6dc:	ldr	r1, [fp, #-16]
 6e0:	str	r0, [sp, #96]	; 0x60
 6e4:	mov	r0, r1
 6e8:	movw	r1, #0
 6ec:	movt	r1, #0
 6f0:	bl	0 <fp_insere>
 6f4:	movw	r1, #0
 6f8:	movt	r1, #0
 6fc:	ldr	r1, [r1]
 700:	movw	r2, #0
 704:	movt	r2, #0
 708:	str	r0, [sp, #92]	; 0x5c
 70c:	mov	r0, r2
 710:	bl	0 <printf>
 714:	ldr	r1, [fp, #-16]
 718:	str	r0, [sp, #88]	; 0x58
 71c:	mov	r0, r1
 720:	bl	148 <fp_remove>
 724:	movw	r1, #0
 728:	movt	r1, #0
 72c:	movw	r2, #0
 730:	str	r2, [r1]
 734:	ldr	r1, [fp, #-16]
 738:	str	r0, [sp, #84]	; 0x54
 73c:	mov	r0, r1
 740:	movw	r1, #0
 744:	movt	r1, #0
 748:	movw	r2, #42	; 0x2a
 74c:	bl	0 <fp_insere>
 750:	movw	r1, #0
 754:	movt	r1, #0
 758:	ldr	r1, [r1]
 75c:	movw	r2, #0
 760:	movt	r2, #0
 764:	str	r0, [sp, #80]	; 0x50
 768:	mov	r0, r2
 76c:	bl	0 <printf>
 770:	movw	r1, #0
 774:	movt	r1, #0
 778:	str	r0, [sp, #76]	; 0x4c
 77c:	mov	r0, r1
 780:	bl	0 <printf>
 784:	movw	r1, #42	; 0x2a
 788:	str	r0, [sp, #72]	; 0x48
 78c:	mov	r0, r1
 790:	bl	0 <vetor_criaHeap>
 794:	str	r0, [fp, #-24]	; 0xffffffe8
 798:	movw	r0, #0
 79c:	movt	r0, #0
 7a0:	str	r0, [fp, #-28]	; 0xffffffe4
 7a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
 7ac:	movw	r2, #0
 7b0:	movt	r2, #0
 7b4:	bl	458 <heap_carrega>
 7b8:	movw	r0, #0
 7bc:	movt	r0, #0
 7c0:	ldr	r1, [r0]
 7c4:	movw	r0, #0
 7c8:	movt	r0, #0
 7cc:	bl	0 <printf>
 7d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 7d4:	str	r0, [sp, #68]	; 0x44
 7d8:	mov	r0, r1
 7dc:	bl	0 <vetor_imprimeHeap>
 7e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7e4:	ldr	r0, [r0]
 7e8:	cmp	r0, #42	; 0x2a
 7ec:	beq	80c <main+0x2b8>
 7f0:	movw	r0, #0
 7f4:	movt	r0, #0
 7f8:	bl	0 <printf>
 7fc:	movw	lr, #1
 800:	str	lr, [fp, #-4]
 804:	str	r0, [sp, #64]	; 0x40
 808:	b	a68 <main+0x514>
 80c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 810:	ldr	r1, [fp, #-28]	; 0xffffffe4
 814:	bl	440 <heap_remove>
 818:	movw	r1, #0
 81c:	movt	r1, #0
 820:	str	r0, [sp, #60]	; 0x3c
 824:	mov	r0, r1
 828:	ldr	r1, [sp, #60]	; 0x3c
 82c:	bl	0 <strcmp>
 830:	cmp	r0, #0
 834:	beq	854 <main+0x300>
 838:	movw	r0, #0
 83c:	movt	r0, #0
 840:	bl	0 <printf>
 844:	movw	lr, #1
 848:	str	lr, [fp, #-4]
 84c:	str	r0, [sp, #56]	; 0x38
 850:	b	a68 <main+0x514>
 854:	movw	r0, #0
 858:	movt	r0, #0
 85c:	movw	r1, #0
 860:	str	r1, [r0]
 864:	ldr	r0, [fp, #-24]	; 0xffffffe8
 868:	ldr	r1, [fp, #-28]	; 0xffffffe4
 86c:	bl	440 <heap_remove>
 870:	movw	r1, #0
 874:	movt	r1, #0
 878:	ldr	r1, [r1]
 87c:	movw	lr, #0
 880:	movt	lr, #0
 884:	str	r0, [sp, #52]	; 0x34
 888:	mov	r0, lr
 88c:	bl	0 <printf>
 890:	movw	r1, #0
 894:	movt	r1, #0
 898:	movw	lr, #0
 89c:	str	lr, [r1]
 8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 8a4:	ldr	lr, [fp, #-28]	; 0xffffffe4
 8a8:	str	r0, [sp, #48]	; 0x30
 8ac:	mov	r0, r1
 8b0:	mov	r1, lr
 8b4:	movw	r2, #0
 8b8:	movt	r2, #0
 8bc:	movw	r3, #99	; 0x63
 8c0:	bl	2ec <heap_insere>
 8c4:	movw	r1, #0
 8c8:	movt	r1, #0
 8cc:	ldr	r1, [r1]
 8d0:	movw	r2, #0
 8d4:	movt	r2, #0
 8d8:	str	r0, [sp, #44]	; 0x2c
 8dc:	mov	r0, r2
 8e0:	bl	0 <printf>
 8e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
 8e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
 8ec:	str	r0, [sp, #40]	; 0x28
 8f0:	mov	r0, r1
 8f4:	mov	r1, r2
 8f8:	bl	440 <heap_remove>
 8fc:	movw	r1, #0
 900:	movt	r1, #0
 904:	movw	r2, #0
 908:	str	r2, [r1]
 90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 910:	ldr	r3, [fp, #-28]	; 0xffffffe4
 914:	str	r0, [sp, #36]	; 0x24
 918:	mov	r0, r1
 91c:	mov	r1, r3
 920:	movw	r3, #0
 924:	movt	r3, #0
 928:	str	r2, [sp, #32]
 92c:	mov	r2, r3
 930:	ldr	r3, [sp, #32]
 934:	bl	2ec <heap_insere>
 938:	movw	r1, #0
 93c:	movt	r1, #0
 940:	ldr	r1, [r1]
 944:	movw	r2, #0
 948:	movt	r2, #0
 94c:	str	r0, [sp, #28]
 950:	mov	r0, r2
 954:	bl	0 <printf>
 958:	ldr	r1, [fp, #-24]	; 0xffffffe8
 95c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 960:	str	r0, [sp, #24]
 964:	mov	r0, r1
 968:	mov	r1, r2
 96c:	bl	440 <heap_remove>
 970:	movw	r1, #0
 974:	movt	r1, #0
 978:	movw	r2, #0
 97c:	str	r2, [r1]
 980:	ldr	r1, [fp, #-24]	; 0xffffffe8
 984:	ldr	r2, [fp, #-28]	; 0xffffffe4
 988:	str	r0, [sp, #20]
 98c:	mov	r0, r1
 990:	mov	r1, r2
 994:	movw	r2, #0
 998:	movt	r2, #0
 99c:	movw	r3, #42	; 0x2a
 9a0:	bl	2ec <heap_insere>
 9a4:	movw	r1, #0
 9a8:	movt	r1, #0
 9ac:	ldr	r1, [r1]
 9b0:	movw	r2, #0
 9b4:	movt	r2, #0
 9b8:	str	r0, [sp, #16]
 9bc:	mov	r0, r2
 9c0:	bl	0 <printf>
 9c4:	movw	r1, #42	; 0x2a
 9c8:	str	r0, [sp, #12]
 9cc:	mov	r0, r1
 9d0:	bl	0 <vetor_criaHeap>
 9d4:	str	r0, [fp, #-24]	; 0xffffffe8
 9d8:	movw	r0, #0
 9dc:	movt	r0, #0
 9e0:	str	r0, [fp, #-32]	; 0xffffffe0
 9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 9e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
 9ec:	movw	r2, #0
 9f0:	movt	r2, #0
 9f4:	bl	458 <heap_carrega>
 9f8:	movw	r0, #0
 9fc:	movt	r0, #0
 a00:	ldr	r1, [r0]
 a04:	movw	r0, #0
 a08:	movt	r0, #0
 a0c:	bl	0 <printf>
 a10:	movw	r1, #0
 a14:	str	r1, [fp, #-20]	; 0xffffffec
 a18:	str	r0, [sp, #8]
 a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a20:	cmp	r0, #42	; 0x2a
 a24:	bge	a60 <main+0x50c>
 a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
 a2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
 a30:	bl	440 <heap_remove>
 a34:	movw	r1, #0
 a38:	movt	r1, #0
 a3c:	str	r0, [sp, #4]
 a40:	mov	r0, r1
 a44:	ldr	r1, [sp, #4]
 a48:	bl	0 <printf>
 a4c:	str	r0, [sp]
 a50:	ldr	r0, [fp, #-20]	; 0xffffffec
 a54:	add	r0, r0, #1
 a58:	str	r0, [fp, #-20]	; 0xffffffec
 a5c:	b	a1c <main+0x4c8>
 a60:	movw	r0, #0
 a64:	str	r0, [fp, #-4]
 a68:	ldr	r0, [fp, #-4]
 a6c:	mov	sp, fp
 a70:	pop	{fp, pc}
