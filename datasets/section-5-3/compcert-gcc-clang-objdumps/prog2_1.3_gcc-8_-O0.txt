
../compcert-repos/prog2/1.3:     file format elf32-littlearm


Disassembly of section .init:

000105e8 <.init>:
   105e8:	push	{r3, lr}
   105ec:	bl	106b0 <_start@@Base+0x3c>
   105f0:	pop	{r3, pc}

Disassembly of section .plt:

000105f4 <printf@plt-0x14>:
   105f4:	push	{lr}		; (str lr, [sp, #-4]!)
   105f8:	ldr	lr, [pc, #4]	; 10604 <printf@plt-0x4>
   105fc:	add	lr, pc, lr
   10600:	ldr	pc, [lr, #8]!
   10604:	strdeq	r0, [r1], -ip

00010608 <printf@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2556]!	; 0x9fc

00010614 <fopen@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2548]!	; 0x9f4

00010620 <strcpy@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2540]!	; 0x9ec

0001062c <__libc_start_main@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2532]!	; 0x9e4

00010638 <__gmon_start__@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2524]!	; 0x9dc

00010644 <fclose@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010650 <fseek@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2508]!	; 0x9cc

0001065c <abort@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2500]!	; 0x9c4

00010668 <getc@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2492]!	; 0x9bc

Disassembly of section .text:

00010674 <_start@@Base>:
   10674:	mov	fp, #0
   10678:	mov	lr, #0
   1067c:	pop	{r1}		; (ldr r1, [sp], #4)
   10680:	mov	r2, sp
   10684:	push	{r2}		; (str r2, [sp, #-4]!)
   10688:	push	{r0}		; (str r0, [sp, #-4]!)
   1068c:	ldr	ip, [pc, #16]	; 106a4 <_start@@Base+0x30>
   10690:	push	{ip}		; (str ip, [sp, #-4]!)
   10694:	ldr	r0, [pc, #12]	; 106a8 <_start@@Base+0x34>
   10698:	ldr	r3, [pc, #12]	; 106ac <_start@@Base+0x38>
   1069c:	bl	1062c <__libc_start_main@plt>
   106a0:	bl	1065c <abort@plt>
   106a4:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   106a8:	andeq	r0, r1, ip, asr #15
   106ac:	muleq	r1, r0, sl
   106b0:	ldr	r3, [pc, #20]	; 106cc <_start@@Base+0x58>
   106b4:	ldr	r2, [pc, #20]	; 106d0 <_start@@Base+0x5c>
   106b8:	add	r3, pc, r3
   106bc:	ldr	r2, [r3, r2]
   106c0:	cmp	r2, #0
   106c4:	bxeq	lr
   106c8:	b	10638 <__gmon_start__@plt>
   106cc:	andeq	r0, r1, r0, asr #18
   106d0:	andeq	r0, r0, r0, lsr r0
   106d4:	ldr	r0, [pc, #24]	; 106f4 <_start@@Base+0x80>
   106d8:	ldr	r3, [pc, #24]	; 106f8 <_start@@Base+0x84>
   106dc:	cmp	r3, r0
   106e0:	bxeq	lr
   106e4:	ldr	r3, [pc, #16]	; 106fc <_start@@Base+0x88>
   106e8:	cmp	r3, #0
   106ec:	bxeq	lr
   106f0:	bx	r3
   106f4:	andeq	r1, r2, ip, lsr r0
   106f8:	andeq	r1, r2, ip, lsr r0
   106fc:	andeq	r0, r0, r0
   10700:	ldr	r0, [pc, #36]	; 1072c <_start@@Base+0xb8>
   10704:	ldr	r1, [pc, #36]	; 10730 <_start@@Base+0xbc>
   10708:	sub	r1, r1, r0
   1070c:	asr	r1, r1, #2
   10710:	add	r1, r1, r1, lsr #31
   10714:	asrs	r1, r1, #1
   10718:	bxeq	lr
   1071c:	ldr	r3, [pc, #16]	; 10734 <_start@@Base+0xc0>
   10720:	cmp	r3, #0
   10724:	bxeq	lr
   10728:	bx	r3
   1072c:	andeq	r1, r2, ip, lsr r0
   10730:	andeq	r1, r2, ip, lsr r0
   10734:	andeq	r0, r0, r0
   10738:	push	{r4, lr}
   1073c:	ldr	r4, [pc, #24]	; 1075c <_start@@Base+0xe8>
   10740:	ldrb	r3, [r4]
   10744:	cmp	r3, #0
   10748:	popne	{r4, pc}
   1074c:	bl	106d4 <_start@@Base+0x60>
   10750:	mov	r3, #1
   10754:	strb	r3, [r4]
   10758:	pop	{r4, pc}
   1075c:	andeq	r1, r2, ip, lsr r0
   10760:	b	10700 <_start@@Base+0x8c>

00010764 <esvaziastring@@Base>:
   10764:	push	{fp}		; (str fp, [sp, #-4]!)
   10768:	add	fp, sp, #0
   1076c:	sub	sp, sp, #20
   10770:	str	r0, [fp, #-16]
   10774:	str	r1, [fp, #-20]	; 0xffffffec
   10778:	mov	r3, #0
   1077c:	str	r3, [fp, #-8]
   10780:	mov	r3, #0
   10784:	str	r3, [fp, #-8]
   10788:	b	107ac <esvaziastring@@Base+0x48>
   1078c:	ldr	r3, [fp, #-8]
   10790:	ldr	r2, [fp, #-16]
   10794:	add	r3, r2, r3
   10798:	mov	r2, #0
   1079c:	strb	r2, [r3]
   107a0:	ldr	r3, [fp, #-8]
   107a4:	add	r3, r3, #1
   107a8:	str	r3, [fp, #-8]
   107ac:	ldr	r2, [fp, #-8]
   107b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   107b4:	cmp	r2, r3
   107b8:	blt	1078c <esvaziastring@@Base+0x28>
   107bc:	nop	{0}
   107c0:	add	sp, fp, #0
   107c4:	pop	{fp}		; (ldr fp, [sp], #4)
   107c8:	bx	lr

000107cc <main@@Base>:
   107cc:	str	fp, [sp, #-8]!
   107d0:	str	lr, [sp, #4]
   107d4:	add	fp, sp, #4
   107d8:	sub	sp, sp, #2272	; 0x8e0
   107dc:	movw	r1, #2816	; 0xb00
   107e0:	movt	r1, #1
   107e4:	movw	r0, #2820	; 0xb04
   107e8:	movt	r0, #1
   107ec:	bl	10614 <fopen@plt>
   107f0:	str	r0, [fp, #-16]
   107f4:	mov	r3, #0
   107f8:	str	r3, [fp, #-8]
   107fc:	mov	r3, #0
   10800:	str	r3, [fp, #-12]
   10804:	mov	r3, #0
   10808:	str	r3, [fp, #-12]
   1080c:	ldr	r0, [fp, #-16]
   10810:	bl	10668 <getc@plt>
   10814:	str	r0, [fp, #-20]	; 0xffffffec
   10818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1081c:	cmn	r3, #1
   10820:	bne	10830 <main@@Base+0x64>
   10824:	ldr	r0, [fp, #-16]
   10828:	bl	10644 <fclose@plt>
   1082c:	b	10a78 <main@@Base+0x2ac>
   10830:	ldr	r3, [fp, #-20]	; 0xffffffec
   10834:	cmp	r3, #60	; 0x3c
   10838:	bne	1080c <main@@Base+0x40>
   1083c:	ldr	r0, [fp, #-16]
   10840:	bl	10668 <getc@plt>
   10844:	mov	r3, r0
   10848:	cmp	r3, #97	; 0x61
   1084c:	bne	10a70 <main@@Base+0x2a4>
   10850:	sub	r3, fp, #220	; 0xdc
   10854:	mov	r1, #200	; 0xc8
   10858:	mov	r0, r3
   1085c:	bl	10764 <esvaziastring@@Base>
   10860:	mov	r2, #1
   10864:	mov	r1, #7
   10868:	ldr	r0, [fp, #-16]
   1086c:	bl	10650 <fseek@plt>
   10870:	mov	r3, #0
   10874:	str	r3, [fp, #-8]
   10878:	ldr	r0, [fp, #-16]
   1087c:	bl	10668 <getc@plt>
   10880:	str	r0, [fp, #-20]	; 0xffffffec
   10884:	ldr	r3, [fp, #-20]	; 0xffffffec
   10888:	cmp	r3, #34	; 0x22
   1088c:	beq	108bc <main@@Base+0xf0>
   10890:	ldr	r3, [fp, #-20]	; 0xffffffec
   10894:	uxtb	r1, r3
   10898:	sub	r2, fp, #220	; 0xdc
   1089c:	ldr	r3, [fp, #-8]
   108a0:	add	r3, r2, r3
   108a4:	mov	r2, r1
   108a8:	strb	r2, [r3]
   108ac:	ldr	r3, [fp, #-8]
   108b0:	add	r3, r3, #1
   108b4:	str	r3, [fp, #-8]
   108b8:	b	10878 <main@@Base+0xac>
   108bc:	nop	{0}
   108c0:	sub	r2, fp, #220	; 0xdc
   108c4:	ldr	r3, [fp, #-8]
   108c8:	add	r3, r2, r3
   108cc:	mov	r2, #0
   108d0:	strb	r2, [r3]
   108d4:	sub	r3, fp, #2256	; 0x8d0
   108d8:	sub	r3, r3, #4
   108dc:	sub	r3, r3, #12
   108e0:	ldr	r2, [fp, #-12]
   108e4:	movw	r1, #410	; 0x19a
   108e8:	mul	r2, r1, r2
   108ec:	add	r3, r3, r2
   108f0:	sub	r2, fp, #220	; 0xdc
   108f4:	mov	r1, r2
   108f8:	mov	r0, r3
   108fc:	bl	10620 <strcpy@plt>
   10900:	sub	r3, fp, #220	; 0xdc
   10904:	mov	r1, #200	; 0xc8
   10908:	mov	r0, r3
   1090c:	bl	10764 <esvaziastring@@Base>
   10910:	mov	r2, #1
   10914:	mov	r1, #1
   10918:	ldr	r0, [fp, #-16]
   1091c:	bl	10650 <fseek@plt>
   10920:	mov	r3, #0
   10924:	str	r3, [fp, #-8]
   10928:	ldr	r0, [fp, #-16]
   1092c:	bl	10668 <getc@plt>
   10930:	str	r0, [fp, #-20]	; 0xffffffec
   10934:	ldr	r3, [fp, #-20]	; 0xffffffec
   10938:	cmp	r3, #60	; 0x3c
   1093c:	beq	109b0 <main@@Base+0x1e4>
   10940:	ldr	r3, [fp, #-20]	; 0xffffffec
   10944:	cmp	r3, #225	; 0xe1
   10948:	bne	10984 <main@@Base+0x1b8>
   1094c:	sub	r2, fp, #220	; 0xdc
   10950:	ldr	r3, [fp, #-8]
   10954:	add	r3, r2, r3
   10958:	mvn	r2, #60	; 0x3c
   1095c:	strb	r2, [r3]
   10960:	ldr	r3, [fp, #-8]
   10964:	add	r3, r3, #1
   10968:	str	r3, [fp, #-8]
   1096c:	sub	r2, fp, #220	; 0xdc
   10970:	ldr	r3, [fp, #-8]
   10974:	add	r3, r2, r3
   10978:	mvn	r2, #94	; 0x5e
   1097c:	strb	r2, [r3]
   10980:	b	109a0 <main@@Base+0x1d4>
   10984:	ldr	r3, [fp, #-20]	; 0xffffffec
   10988:	uxtb	r1, r3
   1098c:	sub	r2, fp, #220	; 0xdc
   10990:	ldr	r3, [fp, #-8]
   10994:	add	r3, r2, r3
   10998:	mov	r2, r1
   1099c:	strb	r2, [r3]
   109a0:	ldr	r3, [fp, #-8]
   109a4:	add	r3, r3, #1
   109a8:	str	r3, [fp, #-8]
   109ac:	b	10928 <main@@Base+0x15c>
   109b0:	nop	{0}
   109b4:	sub	r2, fp, #220	; 0xdc
   109b8:	ldr	r3, [fp, #-8]
   109bc:	add	r3, r2, r3
   109c0:	mov	r2, #0
   109c4:	strb	r2, [r3]
   109c8:	sub	r3, fp, #2256	; 0x8d0
   109cc:	sub	r3, r3, #4
   109d0:	sub	r3, r3, #12
   109d4:	ldr	r2, [fp, #-12]
   109d8:	movw	r1, #410	; 0x19a
   109dc:	mul	r2, r1, r2
   109e0:	add	r2, r2, #200	; 0xc8
   109e4:	add	r3, r3, r2
   109e8:	add	r3, r3, #5
   109ec:	sub	r2, fp, #220	; 0xdc
   109f0:	mov	r1, r2
   109f4:	mov	r0, r3
   109f8:	bl	10620 <strcpy@plt>
   109fc:	sub	r3, fp, #220	; 0xdc
   10a00:	mov	r1, #80	; 0x50
   10a04:	mov	r0, r3
   10a08:	bl	10764 <esvaziastring@@Base>
   10a0c:	sub	r3, fp, #2256	; 0x8d0
   10a10:	sub	r3, r3, #4
   10a14:	sub	r3, r3, #12
   10a18:	ldr	r2, [fp, #-12]
   10a1c:	movw	r1, #410	; 0x19a
   10a20:	mul	r2, r1, r2
   10a24:	add	r2, r2, #200	; 0xc8
   10a28:	add	r3, r3, r2
   10a2c:	add	r0, r3, #5
   10a30:	sub	r3, fp, #2256	; 0x8d0
   10a34:	sub	r3, r3, #4
   10a38:	sub	r3, r3, #12
   10a3c:	ldr	r2, [fp, #-12]
   10a40:	movw	r1, #410	; 0x19a
   10a44:	mul	r2, r1, r2
   10a48:	add	r3, r3, r2
   10a4c:	mov	r2, r3
   10a50:	mov	r1, r0
   10a54:	movw	r0, #2844	; 0xb1c
   10a58:	movt	r0, #1
   10a5c:	bl	10608 <printf@plt>
   10a60:	ldr	r3, [fp, #-12]
   10a64:	add	r3, r3, #1
   10a68:	str	r3, [fp, #-12]
   10a6c:	b	1080c <main@@Base+0x40>
   10a70:	nop	{0}
   10a74:	b	1080c <main@@Base+0x40>
   10a78:	mov	r3, #0
   10a7c:	mov	r0, r3
   10a80:	sub	sp, fp, #4
   10a84:	ldr	fp, [sp]
   10a88:	add	sp, sp, #4
   10a8c:	pop	{pc}		; (ldr pc, [sp], #4)

00010a90 <__libc_csu_init@@Base>:
   10a90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a94:	mov	r7, r0
   10a98:	ldr	r6, [pc, #72]	; 10ae8 <__libc_csu_init@@Base+0x58>
   10a9c:	ldr	r5, [pc, #72]	; 10aec <__libc_csu_init@@Base+0x5c>
   10aa0:	add	r6, pc, r6
   10aa4:	add	r5, pc, r5
   10aa8:	sub	r6, r6, r5
   10aac:	mov	r8, r1
   10ab0:	mov	r9, r2
   10ab4:	bl	105e8 <printf@plt-0x20>
   10ab8:	asrs	r6, r6, #2
   10abc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ac0:	mov	r4, #0
   10ac4:	add	r4, r4, #1
   10ac8:	ldr	r3, [r5], #4
   10acc:	mov	r2, r9
   10ad0:	mov	r1, r8
   10ad4:	mov	r0, r7
   10ad8:	blx	r3
   10adc:	cmp	r6, r4
   10ae0:	bne	10ac4 <__libc_csu_init@@Base+0x34>
   10ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ae8:	andeq	r0, r1, ip, ror #8
   10aec:	andeq	r0, r1, r4, ror #8

00010af0 <__libc_csu_fini@@Base>:
   10af0:	bx	lr

Disassembly of section .fini:

00010af4 <.fini>:
   10af4:	push	{r3, lr}
   10af8:	pop	{r3, pc}
