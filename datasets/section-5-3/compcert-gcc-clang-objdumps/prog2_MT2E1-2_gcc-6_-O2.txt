
../compcert-repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e98 <.init>:
   10e98:	push	{r3, lr}
   10e9c:	bl	111f8 <_start@@Base+0x3c>
   10ea0:	pop	{r3, pc}

Disassembly of section .plt:

00010ea4 <calloc@plt-0x14>:
   10ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea8:	ldr	lr, [pc, #4]	; 10eb4 <calloc@plt-0x4>
   10eac:	add	lr, pc, lr
   10eb0:	ldr	pc, [lr, #8]!
   10eb4:	andeq	r2, r1, ip, asr #2

00010eb8 <calloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #332]!	; 0x14c

00010ec4 <raise@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #324]!	; 0x144

00010ed0 <strcmp@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #316]!	; 0x13c

00010edc <strtol@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #308]!	; 0x134

00010ee8 <printf@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #300]!	; 0x12c

00010ef4 <__isoc99_fscanf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #292]!	; 0x124

00010f00 <fopen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #284]!	; 0x11c

00010f0c <free@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #276]!	; 0x114

00010f18 <memcpy@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #268]!	; 0x10c

00010f24 <realloc@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #260]!	; 0x104

00010f30 <strcpy@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #252]!	; 0xfc

00010f3c <puts@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #244]!	; 0xf4

00010f48 <malloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #236]!	; 0xec

00010f54 <__libc_start_main@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #228]!	; 0xe4

00010f60 <__gmon_start__@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #220]!	; 0xdc

00010f6c <strlen@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #212]!	; 0xd4

00010f78 <setvbuf@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #204]!	; 0xcc

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #196]!	; 0xc4

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #188]!	; 0xbc

00010f9c <getline@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #180]!	; 0xb4

00010fa8 <abort@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #73728	; 0x12000
   10fb0:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fb4 <main@@Base>:
   10fb4:	ldr	r2, [pc, #464]	; 1118c <main@@Base+0x1d8>
   10fb8:	mov	r3, #0
   10fbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fc0:	mov	r1, r3
   10fc4:	sub	sp, sp, #32
   10fc8:	ldr	r0, [r2]
   10fcc:	mov	r2, #2
   10fd0:	bl	10f78 <setvbuf@plt>
   10fd4:	ldr	r1, [pc, #436]	; 11190 <main@@Base+0x1dc>
   10fd8:	ldr	r0, [pc, #436]	; 11194 <main@@Base+0x1e0>
   10fdc:	bl	10f00 <fopen@plt>
   10fe0:	add	r7, sp, #32
   10fe4:	mov	r6, #0
   10fe8:	mov	r8, r0
   10fec:	bl	12364 <lista_nova@@Base>
   10ff0:	str	r6, [r7, #-24]!	; 0xffffffe8
   10ff4:	str	r6, [sp, #4]
   10ff8:	mov	r5, r0
   10ffc:	b	11024 <main@@Base+0x70>
   11000:	ldr	r4, [sp, #4]
   11004:	mov	r0, r4
   11008:	bl	10f6c <strlen@plt>
   1100c:	mov	r2, #0
   11010:	add	r4, r4, r0
   11014:	mov	r0, r5
   11018:	strb	r6, [r4, #-1]
   1101c:	ldr	r1, [sp, #4]
   11020:	bl	123f0 <lista_insere@@Base>
   11024:	mov	r2, r8
   11028:	mov	r1, r7
   1102c:	add	r0, sp, #4
   11030:	bl	10f9c <getline@plt>
   11034:	cmn	r0, #1
   11038:	bne	11000 <main@@Base+0x4c>
   1103c:	ldr	r0, [sp, #4]
   11040:	bl	10f0c <free@plt>
   11044:	mov	r0, r8
   11048:	bl	10f90 <fclose@plt>
   1104c:	ldr	r1, [pc, #324]	; 11198 <main@@Base+0x1e4>
   11050:	mov	r0, r5
   11054:	bl	11504 <carrega_rotas@@Base>
   11058:	ldr	r9, [pc, #316]	; 1119c <main@@Base+0x1e8>
   1105c:	mov	r4, #0
   11060:	mov	sl, r0
   11064:	ldr	r0, [pc, #308]	; 111a0 <main@@Base+0x1ec>
   11068:	bl	10f3c <puts@plt>
   1106c:	ldr	r1, [pc, #284]	; 11190 <main@@Base+0x1dc>
   11070:	ldr	r0, [pc, #300]	; 111a4 <main@@Base+0x1f0>
   11074:	bl	10f00 <fopen@plt>
   11078:	mov	r7, r0
   1107c:	bl	12364 <lista_nova@@Base>
   11080:	mov	r6, r0
   11084:	bl	12364 <lista_nova@@Base>
   11088:	mov	r8, r0
   1108c:	b	110a4 <main@@Base+0xf0>
   11090:	bl	123f0 <lista_insere@@Base>
   11094:	mov	r2, r4
   11098:	add	r1, sp, #20
   1109c:	mov	r0, r8
   110a0:	bl	123f0 <lista_insere@@Base>
   110a4:	add	r2, sp, #12
   110a8:	mov	r1, r9
   110ac:	add	r3, sp, #20
   110b0:	mov	r0, r7
   110b4:	bl	10ef4 <__isoc99_fscanf@plt>
   110b8:	mov	r2, r4
   110bc:	add	r1, sp, #12
   110c0:	cmp	r0, #2
   110c4:	mov	r0, r6
   110c8:	beq	11090 <main@@Base+0xdc>
   110cc:	mov	r3, #5
   110d0:	mov	r2, r5
   110d4:	mov	r1, r8
   110d8:	bl	112e4 <proximas_n_chegadas@@Base>
   110dc:	cmp	r0, #1
   110e0:	beq	110ec <main@@Base+0x138>
   110e4:	ldr	r0, [pc, #188]	; 111a8 <main@@Base+0x1f4>
   110e8:	bl	10f3c <puts@plt>
   110ec:	mov	r0, r6
   110f0:	bl	12388 <lista_apaga@@Base>
   110f4:	mov	r0, r8
   110f8:	bl	12388 <lista_apaga@@Base>
   110fc:	mov	r0, r7
   11100:	bl	10f90 <fclose@plt>
   11104:	ldr	r0, [pc, #160]	; 111ac <main@@Base+0x1f8>
   11108:	bl	10f3c <puts@plt>
   1110c:	ldr	r2, [pc, #156]	; 111b0 <main@@Base+0x1fc>
   11110:	mov	r1, r5
   11114:	mov	r0, sl
   11118:	bl	11434 <pesquisa_destinos@@Base>
   1111c:	subs	r6, r0, #0
   11120:	beq	1117c <main@@Base+0x1c8>
   11124:	bl	123c8 <lista_tamanho@@Base>
   11128:	ldr	r1, [pc, #128]	; 111b0 <main@@Base+0x1fc>
   1112c:	mov	r2, r0
   11130:	ldr	r0, [pc, #124]	; 111b4 <main@@Base+0x200>
   11134:	bl	10ee8 <printf@plt>
   11138:	ldr	r4, [r6]
   1113c:	cmp	r4, #0
   11140:	beq	11158 <main@@Base+0x1a4>
   11144:	ldr	r0, [r4]
   11148:	bl	10f3c <puts@plt>
   1114c:	ldr	r4, [r4, #4]
   11150:	cmp	r4, #0
   11154:	bne	11144 <main@@Base+0x190>
   11158:	mov	r0, r6
   1115c:	bl	12388 <lista_apaga@@Base>
   11160:	mov	r0, sl
   11164:	bl	11634 <grafo_apaga@@Base>
   11168:	mov	r0, r5
   1116c:	bl	12388 <lista_apaga@@Base>
   11170:	mov	r0, #0
   11174:	add	sp, sp, #32
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1117c:	ldr	r1, [pc, #44]	; 111b0 <main@@Base+0x1fc>
   11180:	ldr	r0, [pc, #48]	; 111b8 <main@@Base+0x204>
   11184:	bl	10ee8 <printf@plt>
   11188:	b	11160 <main@@Base+0x1ac>
   1118c:	andeq	r3, r2, ip, rrx
   11190:	andeq	r2, r1, r8, asr #24
   11194:	muleq	r1, r4, ip
   11198:	andeq	r2, r1, r4, lsr #25
   1119c:	ldrdeq	r2, [r1], -r4
   111a0:			; <UNDEFINED> instruction: 0x00012cb0
   111a4:	andeq	r2, r1, r4, asr #25
   111a8:	ldrdeq	r2, [r1], -ip
   111ac:	strdeq	r2, [r1], -r8
   111b0:	andeq	r2, r1, ip, lsl #26
   111b4:	andeq	r2, r1, r0, asr #26
   111b8:	andeq	r2, r1, r8, lsl sp

000111bc <_start@@Base>:
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <_start@@Base+0x30>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <_start@@Base+0x34>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <_start@@Base+0x38>
   111e4:	bl	10f54 <__libc_start_main@plt>
   111e8:	bl	10fa8 <abort@plt>
   111ec:	andeq	r2, r1, ip, lsr #24
   111f0:			; <UNDEFINED> instruction: 0x00010fb4
   111f4:	andeq	r2, r1, ip, asr #23
   111f8:	ldr	r3, [pc, #20]	; 11214 <_start@@Base+0x58>
   111fc:	ldr	r2, [pc, #20]	; 11218 <_start@@Base+0x5c>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10f60 <__gmon_start__@plt>
   11214:	strdeq	r1, [r1], -r8
   11218:	andeq	r0, r0, r0, rrx
   1121c:	ldr	r3, [pc, #28]	; 11240 <_start@@Base+0x84>
   11220:	ldr	r0, [pc, #28]	; 11244 <_start@@Base+0x88>
   11224:	sub	r3, r3, r0
   11228:	cmp	r3, #6
   1122c:	bxls	lr
   11230:	ldr	r3, [pc, #16]	; 11248 <_start@@Base+0x8c>
   11234:	cmp	r3, #0
   11238:	bxeq	lr
   1123c:	bx	r3
   11240:	andeq	r3, r2, pc, rrx
   11244:	andeq	r3, r2, ip, rrx
   11248:	andeq	r0, r0, r0
   1124c:	ldr	r1, [pc, #36]	; 11278 <_start@@Base+0xbc>
   11250:	ldr	r0, [pc, #36]	; 1127c <_start@@Base+0xc0>
   11254:	sub	r1, r1, r0
   11258:	asr	r1, r1, #2
   1125c:	add	r1, r1, r1, lsr #31
   11260:	asrs	r1, r1, #1
   11264:	bxeq	lr
   11268:	ldr	r3, [pc, #16]	; 11280 <_start@@Base+0xc4>
   1126c:	cmp	r3, #0
   11270:	bxeq	lr
   11274:	bx	r3
   11278:	andeq	r3, r2, ip, rrx
   1127c:	andeq	r3, r2, ip, rrx
   11280:	andeq	r0, r0, r0
   11284:	push	{r4, lr}
   11288:	ldr	r4, [pc, #24]	; 112a8 <_start@@Base+0xec>
   1128c:	ldrb	r3, [r4]
   11290:	cmp	r3, #0
   11294:	popne	{r4, pc}
   11298:	bl	1121c <_start@@Base+0x60>
   1129c:	mov	r3, #1
   112a0:	strb	r3, [r4]
   112a4:	pop	{r4, pc}
   112a8:	andeq	r3, r2, r0, ror r0
   112ac:	ldr	r0, [pc, #40]	; 112dc <_start@@Base+0x120>
   112b0:	ldr	r3, [r0]
   112b4:	cmp	r3, #0
   112b8:	bne	112c0 <_start@@Base+0x104>
   112bc:	b	1124c <_start@@Base+0x90>
   112c0:	ldr	r3, [pc, #24]	; 112e0 <_start@@Base+0x124>
   112c4:	cmp	r3, #0
   112c8:	beq	112bc <_start@@Base+0x100>
   112cc:	push	{r4, lr}
   112d0:	blx	r3
   112d4:	pop	{r4, lr}
   112d8:	b	1124c <_start@@Base+0x90>
   112dc:	andeq	r2, r2, r4, lsl pc
   112e0:	andeq	r0, r0, r0

000112e4 <proximas_n_chegadas@@Base>:
   112e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112e8:	mov	fp, r0
   112ec:	ldr	r0, [r2, #8]
   112f0:	sub	sp, sp, #12
   112f4:	ldr	r4, [r2]
   112f8:	lsl	r0, r0, #2
   112fc:	str	r2, [sp, #4]
   11300:	mov	r9, r1
   11304:	mov	r7, r3
   11308:	bl	10f48 <malloc@plt>
   1130c:	cmp	r4, #0
   11310:	movne	r6, #200	; 0xc8
   11314:	mov	r8, r0
   11318:	subne	r5, r0, #4
   1131c:	beq	11340 <proximas_n_chegadas@@Base+0x5c>
   11320:	mov	r0, r6
   11324:	bl	10f48 <malloc@plt>
   11328:	ldr	r1, [r4]
   1132c:	str	r0, [r5, #4]!
   11330:	bl	10f30 <strcpy@plt>
   11334:	ldr	r4, [r4, #4]
   11338:	cmp	r4, #0
   1133c:	bne	11320 <proximas_n_chegadas@@Base+0x3c>
   11340:	ldr	r0, [fp, #8]
   11344:	bl	11efc <heap_nova@@Base>
   11348:	ldr	r4, [fp]
   1134c:	ldr	r5, [r9]
   11350:	cmp	r4, #0
   11354:	movne	fp, #10
   11358:	movne	r9, #0
   1135c:	mov	r6, r0
   11360:	beq	113a8 <proximas_n_chegadas@@Base+0xc4>
   11364:	mov	r2, fp
   11368:	mov	r1, r9
   1136c:	ldr	r0, [r5]
   11370:	bl	10edc <strtol@plt>
   11374:	mov	r2, fp
   11378:	mov	r1, r9
   1137c:	ldr	sl, [r8, r0, lsl #2]
   11380:	ldr	r0, [r4]
   11384:	bl	10edc <strtol@plt>
   11388:	mov	r1, sl
   1138c:	mov	r2, r0
   11390:	mov	r0, r6
   11394:	bl	12028 <heap_insere@@Base>
   11398:	ldr	r4, [r4, #4]
   1139c:	ldr	r5, [r5, #4]
   113a0:	cmp	r4, #0
   113a4:	bne	11364 <proximas_n_chegadas@@Base+0x80>
   113a8:	ldr	r3, [sp, #4]
   113ac:	ldr	r9, [r3, #8]
   113b0:	cmp	r9, #0
   113b4:	subgt	r5, r8, #4
   113b8:	movgt	r4, #0
   113bc:	ble	113d4 <proximas_n_chegadas@@Base+0xf0>
   113c0:	add	r4, r4, #1
   113c4:	ldr	r0, [r5, #4]!
   113c8:	bl	10f0c <free@plt>
   113cc:	cmp	r4, r9
   113d0:	bne	113c0 <proximas_n_chegadas@@Base+0xdc>
   113d4:	mov	r0, r8
   113d8:	bl	10f0c <free@plt>
   113dc:	cmp	r7, #0
   113e0:	movgt	r4, #0
   113e4:	ldrgt	r8, [pc, #68]	; 11430 <proximas_n_chegadas@@Base+0x14c>
   113e8:	ble	1141c <proximas_n_chegadas@@Base+0x138>
   113ec:	mov	r0, r6
   113f0:	bl	120f4 <heap_remove@@Base>
   113f4:	add	r4, r4, #1
   113f8:	mov	r1, r4
   113fc:	mov	r2, r0
   11400:	mov	r5, r0
   11404:	mov	r0, r8
   11408:	bl	10ee8 <printf@plt>
   1140c:	mov	r0, r5
   11410:	bl	10f0c <free@plt>
   11414:	cmp	r7, r4
   11418:	bne	113ec <proximas_n_chegadas@@Base+0x108>
   1141c:	mov	r0, r6
   11420:	bl	11f54 <heap_apaga@@Base>
   11424:	mov	r0, #1
   11428:	add	sp, sp, #12
   1142c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11430:	andeq	r2, r1, ip, lsr ip

00011434 <pesquisa_destinos@@Base>:
   11434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11438:	mov	r9, r1
   1143c:	mov	r7, r0
   11440:	mov	r6, r2
   11444:	bl	12364 <lista_nova@@Base>
   11448:	ldr	r4, [r9]
   1144c:	cmp	r4, #0
   11450:	moveq	r5, r4
   11454:	mov	r8, r0
   11458:	beq	11488 <pesquisa_destinos@@Base+0x54>
   1145c:	mov	r5, #0
   11460:	b	11474 <pesquisa_destinos@@Base+0x40>
   11464:	ldr	r4, [r4, #4]
   11468:	add	r5, r5, #1
   1146c:	cmp	r4, #0
   11470:	beq	11488 <pesquisa_destinos@@Base+0x54>
   11474:	mov	r1, r6
   11478:	ldr	r0, [r4]
   1147c:	bl	10ed0 <strcmp@plt>
   11480:	cmp	r0, #0
   11484:	bne	11464 <pesquisa_destinos@@Base+0x30>
   11488:	mov	r0, r7
   1148c:	mov	r1, r5
   11490:	bl	11990 <v_sucessores@@Base>
   11494:	ldr	r3, [r0]
   11498:	mov	r7, r0
   1149c:	cmp	r3, #0
   114a0:	ble	114f4 <pesquisa_destinos@@Base+0xc0>
   114a4:	mov	r6, #0
   114a8:	mov	sl, r6
   114ac:	ldr	r5, [r9]
   114b0:	mov	r4, #0
   114b4:	b	114bc <pesquisa_destinos@@Base+0x88>
   114b8:	ldr	r5, [r5, #4]
   114bc:	mov	r1, r6
   114c0:	mov	r0, r7
   114c4:	bl	1275c <vetor_elemento@@Base>
   114c8:	cmp	r4, r0
   114cc:	add	r4, r4, #1
   114d0:	blt	114b8 <pesquisa_destinos@@Base+0x84>
   114d4:	ldr	r1, [r5]
   114d8:	mov	r2, sl
   114dc:	mov	r0, r8
   114e0:	bl	123f0 <lista_insere@@Base>
   114e4:	ldr	r3, [r7]
   114e8:	add	r6, r6, #1
   114ec:	cmp	r3, r6
   114f0:	bgt	114ac <pesquisa_destinos@@Base+0x78>
   114f4:	mov	r0, r7
   114f8:	bl	126f8 <vetor_apaga@@Base>
   114fc:	mov	r0, r8
   11500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011504 <carrega_rotas@@Base>:
   11504:	push	{r4, r5, r6, lr}
   11508:	subs	r4, r1, #0
   1150c:	sub	sp, sp, #8
   11510:	beq	1157c <carrega_rotas@@Base+0x78>
   11514:	mov	r6, r0
   11518:	ldr	r1, [pc, #136]	; 115a8 <carrega_rotas@@Base+0xa4>
   1151c:	mov	r0, r4
   11520:	bl	10f00 <fopen@plt>
   11524:	subs	r5, r0, #0
   11528:	beq	11588 <carrega_rotas@@Base+0x84>
   1152c:	mov	r0, r6
   11530:	bl	123c8 <lista_tamanho@@Base>
   11534:	mov	r1, #0
   11538:	bl	115dc <grafo_novo@@Base>
   1153c:	subs	r4, r0, #0
   11540:	beq	1159c <carrega_rotas@@Base+0x98>
   11544:	ldr	r6, [pc, #96]	; 115ac <carrega_rotas@@Base+0xa8>
   11548:	b	11554 <carrega_rotas@@Base+0x50>
   1154c:	ldm	sp, {r1, r2}
   11550:	bl	116b4 <grafo_adiciona@@Base>
   11554:	add	r3, sp, #4
   11558:	mov	r2, sp
   1155c:	mov	r1, r6
   11560:	mov	r0, r5
   11564:	bl	10ef4 <__isoc99_fscanf@plt>
   11568:	cmp	r0, #2
   1156c:	mov	r0, r4
   11570:	beq	1154c <carrega_rotas@@Base+0x48>
   11574:	mov	r0, r5
   11578:	bl	10f90 <fclose@plt>
   1157c:	mov	r0, r4
   11580:	add	sp, sp, #8
   11584:	pop	{r4, r5, r6, pc}
   11588:	mov	r1, r4
   1158c:	ldr	r0, [pc, #28]	; 115b0 <carrega_rotas@@Base+0xac>
   11590:	mov	r4, r5
   11594:	bl	10ee8 <printf@plt>
   11598:	b	1157c <carrega_rotas@@Base+0x78>
   1159c:	ldr	r0, [pc, #16]	; 115b4 <carrega_rotas@@Base+0xb0>
   115a0:	bl	10f3c <puts@plt>
   115a4:	b	1157c <carrega_rotas@@Base+0x78>
   115a8:	andeq	r2, r1, r8, asr #24
   115ac:	andeq	r2, r1, ip, lsl #25
   115b0:	andeq	r2, r1, ip, asr #24
   115b4:	andeq	r2, r1, r0, ror ip

000115b8 <cria_no@@Base>:
   115b8:	push	{r4, lr}
   115bc:	mov	r4, r0
   115c0:	mov	r0, #8
   115c4:	bl	10f48 <malloc@plt>
   115c8:	cmp	r0, #0
   115cc:	movne	r3, #0
   115d0:	strne	r4, [r0]
   115d4:	strne	r3, [r0, #4]
   115d8:	pop	{r4, pc}

000115dc <grafo_novo@@Base>:
   115dc:	push	{r4, r5, r6, lr}
   115e0:	mov	r5, r0
   115e4:	mov	r0, #12
   115e8:	mov	r6, r1
   115ec:	bl	10f48 <malloc@plt>
   115f0:	subs	r4, r0, #0
   115f4:	beq	1161c <grafo_novo@@Base+0x40>
   115f8:	str	r5, [r4, #4]
   115fc:	mov	r0, r5
   11600:	str	r6, [r4]
   11604:	mov	r1, #8
   11608:	bl	10eb8 <calloc@plt>
   1160c:	cmp	r0, #0
   11610:	mov	r5, r0
   11614:	str	r0, [r4, #8]
   11618:	beq	11624 <grafo_novo@@Base+0x48>
   1161c:	mov	r0, r4
   11620:	pop	{r4, r5, r6, pc}
   11624:	mov	r0, r4
   11628:	bl	10f0c <free@plt>
   1162c:	mov	r4, r5
   11630:	b	1161c <grafo_novo@@Base+0x40>

00011634 <grafo_apaga@@Base>:
   11634:	push	{r4, r5, r6, lr}
   11638:	subs	r5, r0, #0
   1163c:	popeq	{r4, r5, r6, pc}
   11640:	ldr	r2, [r5, #8]
   11644:	cmp	r2, #0
   11648:	beq	116a8 <grafo_apaga@@Base+0x74>
   1164c:	ldr	r1, [r5, #4]
   11650:	cmp	r1, #0
   11654:	movgt	r6, #0
   11658:	ble	116a0 <grafo_apaga@@Base+0x6c>
   1165c:	lsl	r4, r6, #3
   11660:	add	r3, r2, r4
   11664:	ldr	r0, [r3, #4]
   11668:	cmp	r0, #0
   1166c:	beq	11694 <grafo_apaga@@Base+0x60>
   11670:	ldr	r2, [r0, #4]
   11674:	str	r2, [r3, #4]
   11678:	bl	10f0c <free@plt>
   1167c:	ldr	r2, [r5, #8]
   11680:	add	r3, r2, r4
   11684:	ldr	r0, [r3, #4]
   11688:	cmp	r0, #0
   1168c:	bne	11670 <grafo_apaga@@Base+0x3c>
   11690:	ldr	r1, [r5, #4]
   11694:	add	r6, r6, #1
   11698:	cmp	r1, r6
   1169c:	bgt	1165c <grafo_apaga@@Base+0x28>
   116a0:	mov	r0, r2
   116a4:	bl	10f0c <free@plt>
   116a8:	mov	r0, r5
   116ac:	pop	{r4, r5, r6, lr}
   116b0:	b	10f0c <free@plt>

000116b4 <grafo_adiciona@@Base>:
   116b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   116b8:	subs	r6, r0, #0
   116bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116c0:	ldr	r8, [r6, #8]
   116c4:	add	r9, r8, r1, lsl #3
   116c8:	ldr	r5, [r9, #4]
   116cc:	cmp	r5, #0
   116d0:	beq	11700 <grafo_adiciona@@Base+0x4c>
   116d4:	ldr	r3, [r5]
   116d8:	cmp	r2, r3
   116dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116e0:	mov	r3, r5
   116e4:	b	116f4 <grafo_adiciona@@Base+0x40>
   116e8:	ldr	ip, [r3]
   116ec:	cmp	r2, ip
   116f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116f4:	ldr	r3, [r3, #4]
   116f8:	cmp	r3, #0
   116fc:	bne	116e8 <grafo_adiciona@@Base+0x34>
   11700:	mov	r0, #8
   11704:	mov	r4, r2
   11708:	mov	r7, r1
   1170c:	bl	10f48 <malloc@plt>
   11710:	cmp	r0, #0
   11714:	beq	1176c <grafo_adiciona@@Base+0xb8>
   11718:	ldr	r2, [r6]
   1171c:	ldr	r3, [r8, r7, lsl #3]
   11720:	cmp	r2, #0
   11724:	add	r3, r3, #1
   11728:	stm	r0, {r4, r5}
   1172c:	str	r0, [r9, #4]
   11730:	str	r3, [r8, r7, lsl #3]
   11734:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   11738:	mov	r0, #8
   1173c:	bl	10f48 <malloc@plt>
   11740:	add	r2, r8, r4, lsl #3
   11744:	cmp	r0, #0
   11748:	beq	11774 <grafo_adiciona@@Base+0xc0>
   1174c:	ldr	r3, [r8, r4, lsl #3]
   11750:	ldr	r1, [r2, #4]
   11754:	add	r3, r3, #1
   11758:	str	r7, [r0]
   1175c:	str	r1, [r0, #4]
   11760:	str	r0, [r2, #4]
   11764:	str	r3, [r8, r4, lsl #3]
   11768:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1176c:	str	r5, [r0, #4]
   11770:	udf	#0
   11774:	ldr	r3, [r2, #4]
   11778:	str	r3, [r0, #4]
   1177c:	udf	#0

00011780 <grafo_remove@@Base>:
   11780:	push	{r4, r5, r6, lr}
   11784:	subs	r6, r0, #0
   11788:	popeq	{r4, r5, r6, pc}
   1178c:	ldr	r3, [r6, #8]
   11790:	add	r3, r3, r1, lsl #3
   11794:	ldr	ip, [r3, #4]
   11798:	cmp	ip, #0
   1179c:	popeq	{r4, r5, r6, pc}
   117a0:	mov	r4, r2
   117a4:	ldr	r2, [ip]
   117a8:	mov	r5, r1
   117ac:	cmp	r2, r4
   117b0:	beq	1187c <grafo_remove@@Base+0xfc>
   117b4:	ldr	r3, [ip, #4]
   117b8:	cmp	r3, #0
   117bc:	beq	117ec <grafo_remove@@Base+0x6c>
   117c0:	ldr	r2, [r3]
   117c4:	cmp	r4, r2
   117c8:	bne	117e0 <grafo_remove@@Base+0x60>
   117cc:	b	1184c <grafo_remove@@Base+0xcc>
   117d0:	ldr	ip, [r0]
   117d4:	cmp	r4, ip
   117d8:	beq	11854 <grafo_remove@@Base+0xd4>
   117dc:	mov	r3, r0
   117e0:	ldr	r0, [r3, #4]
   117e4:	cmp	r0, #0
   117e8:	bne	117d0 <grafo_remove@@Base+0x50>
   117ec:	ldr	r3, [r6]
   117f0:	cmp	r3, #0
   117f4:	popne	{r4, r5, r6, pc}
   117f8:	ldr	r3, [r6, #8]
   117fc:	add	r4, r3, r4, lsl #3
   11800:	ldr	r2, [r4, #4]
   11804:	ldr	r3, [r2]
   11808:	cmp	r5, r3
   1180c:	ldr	r3, [r2, #4]
   11810:	beq	11890 <grafo_remove@@Base+0x110>
   11814:	cmp	r3, #0
   11818:	popeq	{r4, r5, r6, pc}
   1181c:	ldr	r1, [r3]
   11820:	cmp	r5, r1
   11824:	bne	1183c <grafo_remove@@Base+0xbc>
   11828:	b	11864 <grafo_remove@@Base+0xe4>
   1182c:	ldr	r2, [r0]
   11830:	cmp	r5, r2
   11834:	beq	1186c <grafo_remove@@Base+0xec>
   11838:	mov	r3, r0
   1183c:	ldr	r0, [r3, #4]
   11840:	cmp	r0, #0
   11844:	bne	1182c <grafo_remove@@Base+0xac>
   11848:	pop	{r4, r5, r6, pc}
   1184c:	mov	r0, r3
   11850:	mov	r3, ip
   11854:	ldr	r2, [r0, #4]
   11858:	str	r2, [r3, #4]
   1185c:	bl	10f0c <free@plt>
   11860:	b	117ec <grafo_remove@@Base+0x6c>
   11864:	mov	r0, r3
   11868:	mov	r3, r2
   1186c:	ldr	r2, [r0, #4]
   11870:	pop	{r4, r5, r6, lr}
   11874:	str	r2, [r3, #4]
   11878:	b	10f0c <free@plt>
   1187c:	ldr	r2, [ip, #4]
   11880:	mov	r0, ip
   11884:	str	r2, [r3, #4]
   11888:	bl	10f0c <free@plt>
   1188c:	b	117ec <grafo_remove@@Base+0x6c>
   11890:	str	r3, [r4, #4]
   11894:	mov	r0, r2
   11898:	pop	{r4, r5, r6, lr}
   1189c:	b	10f0c <free@plt>

000118a0 <grafo_aresta@@Base>:
   118a0:	cmp	r0, #0
   118a4:	bxeq	lr
   118a8:	ldr	r3, [r0, #8]
   118ac:	add	r1, r3, r1, lsl #3
   118b0:	ldr	r0, [r1, #4]
   118b4:	cmp	r0, #0
   118b8:	bxeq	lr
   118bc:	ldr	r3, [r0]
   118c0:	cmp	r2, r3
   118c4:	bne	118d8 <grafo_aresta@@Base+0x38>
   118c8:	b	118e8 <grafo_aresta@@Base+0x48>
   118cc:	ldr	r3, [r0]
   118d0:	cmp	r3, r2
   118d4:	beq	118e8 <grafo_aresta@@Base+0x48>
   118d8:	ldr	r0, [r0, #4]
   118dc:	cmp	r0, #0
   118e0:	bne	118cc <grafo_aresta@@Base+0x2c>
   118e4:	bx	lr
   118e8:	mov	r0, #1
   118ec:	bx	lr

000118f0 <grafo_imprime@@Base>:
   118f0:	ldr	r3, [r0, #4]
   118f4:	cmp	r3, #0
   118f8:	bxle	lr
   118fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11900:	mov	r7, r0
   11904:	ldr	r9, [pc, #120]	; 11984 <grafo_imprime@@Base+0x94>
   11908:	ldr	sl, [pc, #120]	; 11988 <grafo_imprime@@Base+0x98>
   1190c:	ldr	r5, [pc, #120]	; 1198c <grafo_imprime@@Base+0x9c>
   11910:	mov	r6, #0
   11914:	mov	r8, #10
   11918:	ldr	r3, [r7, #8]
   1191c:	mov	r1, r6
   11920:	add	r3, r3, r6, lsl #3
   11924:	mov	r0, r9
   11928:	ldr	r4, [r3, #4]
   1192c:	bl	10ee8 <printf@plt>
   11930:	cmp	r4, #0
   11934:	beq	11968 <grafo_imprime@@Base+0x78>
   11938:	ldr	r1, [r4]
   1193c:	mov	r0, sl
   11940:	bl	10ee8 <printf@plt>
   11944:	ldr	r4, [r4, #4]
   11948:	cmp	r4, #0
   1194c:	beq	11968 <grafo_imprime@@Base+0x78>
   11950:	ldr	r1, [r4]
   11954:	mov	r0, r5
   11958:	bl	10ee8 <printf@plt>
   1195c:	ldr	r4, [r4, #4]
   11960:	cmp	r4, #0
   11964:	bne	11950 <grafo_imprime@@Base+0x60>
   11968:	mov	r0, r8
   1196c:	bl	10f84 <putchar@plt>
   11970:	ldr	r3, [r7, #4]
   11974:	add	r6, r6, #1
   11978:	cmp	r3, r6
   1197c:	bgt	11918 <grafo_imprime@@Base+0x28>
   11980:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11984:	andeq	r2, r1, r8, ror #26
   11988:	andeq	r2, r1, r0, ror sp
   1198c:	andeq	r2, r1, r4, ror sp

00011990 <v_sucessores@@Base>:
   11990:	push	{r4, r5, r6, r7, r8, lr}
   11994:	lsr	r4, r1, #31
   11998:	cmp	r0, #0
   1199c:	orreq	r4, r4, #1
   119a0:	cmp	r4, #0
   119a4:	bne	11a4c <v_sucessores@@Base+0xbc>
   119a8:	ldr	r3, [r0, #4]
   119ac:	cmp	r1, r3
   119b0:	bge	11a4c <v_sucessores@@Base+0xbc>
   119b4:	mov	r5, r0
   119b8:	mov	r6, r1
   119bc:	bl	126d4 <vetor_novo@@Base>
   119c0:	mov	r7, r0
   119c4:	ldr	r0, [r5, #4]
   119c8:	cmp	r0, #0
   119cc:	ble	11a20 <v_sucessores@@Base+0x90>
   119d0:	lsl	r6, r6, #3
   119d4:	mvn	r8, #0
   119d8:	ldr	r3, [r5, #8]
   119dc:	add	r3, r3, r6
   119e0:	ldr	r3, [r3, #4]
   119e4:	cmp	r3, #0
   119e8:	beq	11a14 <v_sucessores@@Base+0x84>
   119ec:	ldr	r2, [r3]
   119f0:	cmp	r4, r2
   119f4:	bne	11a08 <v_sucessores@@Base+0x78>
   119f8:	b	11a28 <v_sucessores@@Base+0x98>
   119fc:	ldr	r2, [r3]
   11a00:	cmp	r2, r4
   11a04:	beq	11a28 <v_sucessores@@Base+0x98>
   11a08:	ldr	r3, [r3, #4]
   11a0c:	cmp	r3, #0
   11a10:	bne	119fc <v_sucessores@@Base+0x6c>
   11a14:	add	r4, r4, #1
   11a18:	cmp	r0, r4
   11a1c:	bgt	119d8 <v_sucessores@@Base+0x48>
   11a20:	mov	r0, r7
   11a24:	pop	{r4, r5, r6, r7, r8, pc}
   11a28:	mov	r1, r4
   11a2c:	mov	r2, r8
   11a30:	mov	r0, r7
   11a34:	bl	1278c <vetor_insere@@Base>
   11a38:	ldr	r0, [r5, #4]
   11a3c:	add	r4, r4, #1
   11a40:	cmp	r0, r4
   11a44:	bgt	119d8 <v_sucessores@@Base+0x48>
   11a48:	b	11a20 <v_sucessores@@Base+0x90>
   11a4c:	mov	r7, #0
   11a50:	mov	r0, r7
   11a54:	pop	{r4, r5, r6, r7, r8, pc}

00011a58 <v_antecessores@@Base>:
   11a58:	push	{r4, r5, r6, r7, r8, lr}
   11a5c:	lsr	r5, r1, #31
   11a60:	cmp	r0, #0
   11a64:	orreq	r5, r5, #1
   11a68:	cmp	r5, #0
   11a6c:	bne	11af8 <v_antecessores@@Base+0xa0>
   11a70:	ldr	r3, [r0, #4]
   11a74:	cmp	r1, r3
   11a78:	bge	11af8 <v_antecessores@@Base+0xa0>
   11a7c:	mov	r6, r0
   11a80:	mov	r4, r1
   11a84:	bl	126d4 <vetor_novo@@Base>
   11a88:	ldr	r1, [r6, #4]
   11a8c:	cmp	r1, #0
   11a90:	mov	r7, r0
   11a94:	ble	11acc <v_antecessores@@Base+0x74>
   11a98:	mvn	r8, #0
   11a9c:	ldr	r3, [r6, #8]
   11aa0:	add	r3, r3, r5, lsl #3
   11aa4:	b	11ab4 <v_antecessores@@Base+0x5c>
   11aa8:	ldr	r2, [r3]
   11aac:	cmp	r4, r2
   11ab0:	beq	11ad4 <v_antecessores@@Base+0x7c>
   11ab4:	ldr	r3, [r3, #4]
   11ab8:	cmp	r3, #0
   11abc:	bne	11aa8 <v_antecessores@@Base+0x50>
   11ac0:	add	r5, r5, #1
   11ac4:	cmp	r1, r5
   11ac8:	bgt	11a9c <v_antecessores@@Base+0x44>
   11acc:	mov	r0, r7
   11ad0:	pop	{r4, r5, r6, r7, r8, pc}
   11ad4:	mov	r1, r5
   11ad8:	mov	r2, r8
   11adc:	mov	r0, r7
   11ae0:	bl	1278c <vetor_insere@@Base>
   11ae4:	ldr	r1, [r6, #4]
   11ae8:	add	r5, r5, #1
   11aec:	cmp	r1, r5
   11af0:	bgt	11a9c <v_antecessores@@Base+0x44>
   11af4:	b	11acc <v_antecessores@@Base+0x74>
   11af8:	mov	r7, #0
   11afc:	mov	r0, r7
   11b00:	pop	{r4, r5, r6, r7, r8, pc}

00011b04 <dfs_helper@@Base>:
   11b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b08:	sub	sp, sp, #12
   11b0c:	ldr	r8, [sp, #48]	; 0x30
   11b10:	ldr	fp, [r8, r1, lsl #2]
   11b14:	cmp	fp, #0
   11b18:	movne	fp, #0
   11b1c:	bne	11ba4 <dfs_helper@@Base+0xa0>
   11b20:	cmp	r1, r2
   11b24:	str	r3, [r8, r1, lsl #2]
   11b28:	moveq	fp, r3
   11b2c:	beq	11ba4 <dfs_helper@@Base+0xa0>
   11b30:	mov	sl, r1
   11b34:	ldr	r1, [r0, #4]
   11b38:	mov	r9, r2
   11b3c:	cmp	r1, #0
   11b40:	mov	r5, r0
   11b44:	addgt	r7, r3, #1
   11b48:	lslgt	r6, sl, #3
   11b4c:	movgt	r4, fp
   11b50:	ble	11b9c <dfs_helper@@Base+0x98>
   11b54:	ldr	r3, [r5, #8]
   11b58:	add	r3, r3, r6
   11b5c:	ldr	r3, [r3, #4]
   11b60:	cmp	r3, #0
   11b64:	beq	11b90 <dfs_helper@@Base+0x8c>
   11b68:	ldr	r2, [r3]
   11b6c:	cmp	r4, r2
   11b70:	bne	11b84 <dfs_helper@@Base+0x80>
   11b74:	b	11bb0 <dfs_helper@@Base+0xac>
   11b78:	ldr	r2, [r3]
   11b7c:	cmp	r2, r4
   11b80:	beq	11bb0 <dfs_helper@@Base+0xac>
   11b84:	ldr	r3, [r3, #4]
   11b88:	cmp	r3, #0
   11b8c:	bne	11b78 <dfs_helper@@Base+0x74>
   11b90:	add	r4, r4, #1
   11b94:	cmp	r1, r4
   11b98:	bgt	11b54 <dfs_helper@@Base+0x50>
   11b9c:	mov	r3, #0
   11ba0:	str	r3, [r8, sl, lsl #2]
   11ba4:	mov	r0, fp
   11ba8:	add	sp, sp, #12
   11bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bb0:	str	r8, [sp]
   11bb4:	mov	r3, r7
   11bb8:	mov	r2, r9
   11bbc:	mov	r1, r4
   11bc0:	mov	r0, r5
   11bc4:	bl	11b04 <dfs_helper@@Base>
   11bc8:	cmp	r0, #0
   11bcc:	bne	11be4 <dfs_helper@@Base+0xe0>
   11bd0:	ldr	r1, [r5, #4]
   11bd4:	add	r4, r4, #1
   11bd8:	cmp	r1, r4
   11bdc:	bgt	11b54 <dfs_helper@@Base+0x50>
   11be0:	b	11b9c <dfs_helper@@Base+0x98>
   11be4:	mov	fp, r0
   11be8:	mov	r0, fp
   11bec:	add	sp, sp, #12
   11bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011bf4 <grafo_dfs@@Base>:
   11bf4:	push	{r4, r5, r6, r7, r8, lr}
   11bf8:	subs	r4, r0, #0
   11bfc:	sub	sp, sp, #8
   11c00:	beq	11d00 <grafo_dfs@@Base+0x10c>
   11c04:	mov	r7, r1
   11c08:	ldr	r0, [r4, #4]
   11c0c:	mov	r1, #4
   11c10:	mov	r6, r3
   11c14:	mov	r8, r2
   11c18:	bl	10eb8 <calloc@plt>
   11c1c:	mov	r1, r7
   11c20:	mov	r2, r8
   11c24:	mov	r3, #1
   11c28:	str	r0, [sp]
   11c2c:	mov	r5, r0
   11c30:	mov	r0, r4
   11c34:	bl	11b04 <dfs_helper@@Base>
   11c38:	subs	r7, r0, #0
   11c3c:	beq	11ce4 <grafo_dfs@@Base+0xf0>
   11c40:	mov	r1, #4
   11c44:	bl	10eb8 <calloc@plt>
   11c48:	cmp	r7, #0
   11c4c:	mov	r8, r0
   11c50:	ble	11cb0 <grafo_dfs@@Base+0xbc>
   11c54:	ldr	lr, [r4, #4]
   11c58:	mov	ip, #1
   11c5c:	mov	r4, r0
   11c60:	cmp	lr, #0
   11c64:	movle	r3, ip
   11c68:	ble	11ca0 <grafo_dfs@@Base+0xac>
   11c6c:	ldr	r2, [r5]
   11c70:	mov	r3, ip
   11c74:	cmp	r2, ip
   11c78:	movne	r1, r5
   11c7c:	movne	r2, #0
   11c80:	bne	11c94 <grafo_dfs@@Base+0xa0>
   11c84:	b	11cc8 <grafo_dfs@@Base+0xd4>
   11c88:	ldr	r0, [r1, #4]!
   11c8c:	cmp	r0, ip
   11c90:	beq	11ccc <grafo_dfs@@Base+0xd8>
   11c94:	add	r2, r2, #1
   11c98:	cmp	r2, lr
   11c9c:	bne	11c88 <grafo_dfs@@Base+0x94>
   11ca0:	cmp	r3, r7
   11ca4:	add	ip, ip, #1
   11ca8:	add	r4, r4, #4
   11cac:	blt	11c60 <grafo_dfs@@Base+0x6c>
   11cb0:	str	r7, [r6]
   11cb4:	mov	r0, r5
   11cb8:	bl	10f0c <free@plt>
   11cbc:	mov	r0, r8
   11cc0:	add	sp, sp, #8
   11cc4:	pop	{r4, r5, r6, r7, r8, pc}
   11cc8:	mov	r2, #0
   11ccc:	cmp	r3, r7
   11cd0:	str	r2, [r4]
   11cd4:	add	ip, ip, #1
   11cd8:	add	r4, r4, #4
   11cdc:	blt	11c60 <grafo_dfs@@Base+0x6c>
   11ce0:	b	11cb0 <grafo_dfs@@Base+0xbc>
   11ce4:	mov	r0, r5
   11ce8:	bl	10f0c <free@plt>
   11cec:	mov	r8, r7
   11cf0:	mov	r0, r8
   11cf4:	str	r7, [r6]
   11cf8:	add	sp, sp, #8
   11cfc:	pop	{r4, r5, r6, r7, r8, pc}
   11d00:	mov	r8, r4
   11d04:	b	11cbc <grafo_dfs@@Base+0xc8>

00011d08 <grafo_bfs@@Base>:
   11d08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d0c:	sub	sp, sp, #28
   11d10:	cmp	r0, #0
   11d14:	str	r0, [sp, #4]
   11d18:	str	r2, [sp, #16]
   11d1c:	str	r3, [sp, #20]
   11d20:	beq	11ee8 <grafo_bfs@@Base+0x1e0>
   11d24:	ldr	r7, [r0, #4]
   11d28:	mov	r4, r1
   11d2c:	mov	r0, r7
   11d30:	mov	r1, #4
   11d34:	bl	10eb8 <calloc@plt>
   11d38:	mov	r1, #4
   11d3c:	mov	r9, r0
   11d40:	mov	r0, r7
   11d44:	bl	10eb8 <calloc@plt>
   11d48:	cmp	r7, #0
   11d4c:	movgt	r3, r9
   11d50:	addgt	r1, r9, r7, lsl #2
   11d54:	mvngt	r2, #0
   11d58:	mov	sl, r0
   11d5c:	ble	11d6c <grafo_bfs@@Base+0x64>
   11d60:	str	r2, [r3], #4
   11d64:	cmp	r1, r3
   11d68:	bne	11d60 <grafo_bfs@@Base+0x58>
   11d6c:	mov	r3, #1
   11d70:	str	r4, [r9, r4, lsl #2]
   11d74:	str	r9, [sp, #8]
   11d78:	mov	fp, #0
   11d7c:	mov	r9, r3
   11d80:	str	r4, [sl]
   11d84:	add	r0, fp, #1
   11d88:	mov	r1, r7
   11d8c:	bl	12b9c <vetor_ordena@@Base+0x298>
   11d90:	cmp	r7, #0
   11d94:	ldr	r8, [sl, fp, lsl #2]
   11d98:	mov	fp, r1
   11d9c:	ble	11dfc <grafo_bfs@@Base+0xf4>
   11da0:	ldr	r3, [sp, #4]
   11da4:	ldr	r6, [sp, #8]
   11da8:	mov	r4, #0
   11dac:	ldr	r1, [r3, #8]
   11db0:	add	r1, r1, r8, lsl #3
   11db4:	ldr	r5, [r1, #4]
   11db8:	cmp	r5, #0
   11dbc:	beq	11dec <grafo_bfs@@Base+0xe4>
   11dc0:	ldr	r3, [r5]
   11dc4:	cmp	r4, r3
   11dc8:	beq	11e98 <grafo_bfs@@Base+0x190>
   11dcc:	mov	r3, r5
   11dd0:	b	11de0 <grafo_bfs@@Base+0xd8>
   11dd4:	ldr	r2, [r3]
   11dd8:	cmp	r2, r4
   11ddc:	beq	11e98 <grafo_bfs@@Base+0x190>
   11de0:	ldr	r3, [r3, #4]
   11de4:	cmp	r3, #0
   11de8:	bne	11dd4 <grafo_bfs@@Base+0xcc>
   11dec:	add	r4, r4, #1
   11df0:	cmp	r7, r4
   11df4:	add	r6, r6, #4
   11df8:	bne	11db8 <grafo_bfs@@Base+0xb0>
   11dfc:	cmp	fp, r9
   11e00:	bne	11d84 <grafo_bfs@@Base+0x7c>
   11e04:	ldr	r9, [sp, #8]
   11e08:	ldr	r3, [sp, #16]
   11e0c:	ldr	r5, [r9, r3, lsl #2]
   11e10:	cmp	r5, #0
   11e14:	movlt	r6, #0
   11e18:	blt	11e74 <grafo_bfs@@Base+0x16c>
   11e1c:	cmp	r3, r5
   11e20:	beq	11ed0 <grafo_bfs@@Base+0x1c8>
   11e24:	mov	r3, r5
   11e28:	mov	r6, #1
   11e2c:	ldr	r2, [r9, r3, lsl #2]
   11e30:	add	r6, r6, #1
   11e34:	cmp	r2, r3
   11e38:	mov	r3, r2
   11e3c:	bne	11e2c <grafo_bfs@@Base+0x124>
   11e40:	lsl	r4, r6, #2
   11e44:	mov	r0, r4
   11e48:	bl	10f48 <malloc@plt>
   11e4c:	str	r0, [sp, #12]
   11e50:	ldr	r1, [sp, #12]
   11e54:	ldr	r2, [sp, #16]
   11e58:	add	r3, r1, r4
   11e5c:	b	11e68 <grafo_bfs@@Base+0x160>
   11e60:	mov	r2, r5
   11e64:	ldr	r5, [r9, r5, lsl #2]
   11e68:	str	r2, [r3, #-4]!
   11e6c:	cmp	r3, r1
   11e70:	bne	11e60 <grafo_bfs@@Base+0x158>
   11e74:	mov	r0, sl
   11e78:	bl	10f0c <free@plt>
   11e7c:	mov	r0, r9
   11e80:	bl	10f0c <free@plt>
   11e84:	ldr	r3, [sp, #20]
   11e88:	ldr	r0, [sp, #12]
   11e8c:	str	r6, [r3]
   11e90:	add	sp, sp, #28
   11e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e98:	ldr	r3, [r6]
   11e9c:	cmn	r3, #1
   11ea0:	bne	11dec <grafo_bfs@@Base+0xe4>
   11ea4:	add	r0, r9, #1
   11ea8:	str	r8, [r6]
   11eac:	mov	r1, r7
   11eb0:	str	r4, [sl, r9, lsl #2]
   11eb4:	bl	12b9c <vetor_ordena@@Base+0x298>
   11eb8:	add	r4, r4, #1
   11ebc:	cmp	r7, r4
   11ec0:	add	r6, r6, #4
   11ec4:	mov	r9, r1
   11ec8:	bne	11db8 <grafo_bfs@@Base+0xb0>
   11ecc:	b	11dfc <grafo_bfs@@Base+0xf4>
   11ed0:	mov	r0, #4
   11ed4:	bl	10f48 <malloc@plt>
   11ed8:	mov	r6, #1
   11edc:	mov	r4, #4
   11ee0:	str	r0, [sp, #12]
   11ee4:	b	11e50 <grafo_bfs@@Base+0x148>
   11ee8:	ldr	r3, [sp, #4]
   11eec:	str	r3, [sp, #12]
   11ef0:	ldr	r0, [sp, #12]
   11ef4:	add	sp, sp, #28
   11ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011efc <heap_nova@@Base>:
   11efc:	push	{r4, r5, r6, lr}
   11f00:	mov	r5, r0
   11f04:	mov	r0, #12
   11f08:	bl	10f48 <malloc@plt>
   11f0c:	subs	r4, r0, #0
   11f10:	beq	11f3c <heap_nova@@Base+0x40>
   11f14:	mov	r3, #0
   11f18:	str	r5, [r4, #4]
   11f1c:	mov	r0, r5
   11f20:	str	r3, [r4]
   11f24:	mov	r1, #4
   11f28:	bl	10eb8 <calloc@plt>
   11f2c:	cmp	r0, #0
   11f30:	mov	r5, r0
   11f34:	str	r0, [r4, #8]
   11f38:	beq	11f44 <heap_nova@@Base+0x48>
   11f3c:	mov	r0, r4
   11f40:	pop	{r4, r5, r6, pc}
   11f44:	mov	r0, r4
   11f48:	bl	10f0c <free@plt>
   11f4c:	mov	r4, r5
   11f50:	b	11f3c <heap_nova@@Base+0x40>

00011f54 <heap_apaga@@Base>:
   11f54:	push	{r4, r5, r6, lr}
   11f58:	subs	r5, r0, #0
   11f5c:	popeq	{r4, r5, r6, pc}
   11f60:	ldr	r3, [r5]
   11f64:	cmp	r3, #0
   11f68:	ldrle	r0, [r5, #8]
   11f6c:	ble	11fac <heap_apaga@@Base+0x58>
   11f70:	mov	r4, #0
   11f74:	ldr	r0, [r5, #8]
   11f78:	mov	r6, r4
   11f7c:	ldr	r3, [r0, r4, lsl #2]
   11f80:	ldr	r0, [r3, #4]
   11f84:	bl	10f0c <free@plt>
   11f88:	ldr	r3, [r5, #8]
   11f8c:	ldr	r0, [r3, r4, lsl #2]
   11f90:	bl	10f0c <free@plt>
   11f94:	ldr	r0, [r5, #8]
   11f98:	ldr	r3, [r5]
   11f9c:	str	r6, [r0, r4, lsl #2]
   11fa0:	add	r4, r4, #1
   11fa4:	cmp	r3, r4
   11fa8:	bgt	11f7c <heap_apaga@@Base+0x28>
   11fac:	bl	10f0c <free@plt>
   11fb0:	mov	r0, r5
   11fb4:	pop	{r4, r5, r6, lr}
   11fb8:	b	10f0c <free@plt>

00011fbc <elemento_cria@@Base>:
   11fbc:	push	{r4, r5, r6, r7, r8, lr}
   11fc0:	mov	r8, r0
   11fc4:	mov	r0, #8
   11fc8:	mov	r5, r1
   11fcc:	bl	10f48 <malloc@plt>
   11fd0:	subs	r4, r0, #0
   11fd4:	beq	12010 <elemento_cria@@Base+0x54>
   11fd8:	mov	r0, r5
   11fdc:	bl	10f6c <strlen@plt>
   11fe0:	mov	r1, #1
   11fe4:	add	r7, r0, r1
   11fe8:	mov	r0, r7
   11fec:	bl	10eb8 <calloc@plt>
   11ff0:	cmp	r0, #0
   11ff4:	mov	r6, r0
   11ff8:	str	r0, [r4, #4]
   11ffc:	beq	12018 <elemento_cria@@Base+0x5c>
   12000:	mov	r2, r7
   12004:	mov	r1, r5
   12008:	bl	10f18 <memcpy@plt>
   1200c:	str	r8, [r4]
   12010:	mov	r0, r4
   12014:	pop	{r4, r5, r6, r7, r8, pc}
   12018:	mov	r0, r4
   1201c:	bl	10f0c <free@plt>
   12020:	mov	r4, r6
   12024:	b	12010 <elemento_cria@@Base+0x54>

00012028 <heap_insere@@Base>:
   12028:	ldr	ip, [r0]
   1202c:	ldr	r3, [r0, #4]
   12030:	cmp	ip, r3
   12034:	blt	12040 <heap_insere@@Base+0x18>
   12038:	mov	r0, #0
   1203c:	bx	lr
   12040:	push	{r4, r5, r6, lr}
   12044:	mov	r5, r0
   12048:	mov	r0, r2
   1204c:	bl	11fbc <elemento_cria@@Base>
   12050:	subs	ip, r0, #0
   12054:	beq	120ec <heap_insere@@Base+0xc4>
   12058:	ldr	r3, [r5]
   1205c:	ldr	r1, [r5, #8]
   12060:	add	r2, r3, #1
   12064:	cmp	r3, #0
   12068:	str	ip, [r1, r3, lsl #2]
   1206c:	add	r4, r1, r3, lsl #2
   12070:	str	r2, [r5]
   12074:	beq	120e4 <heap_insere@@Base+0xbc>
   12078:	sub	r3, r3, #1
   1207c:	add	r3, r3, r3, lsr #31
   12080:	asr	r3, r3, #1
   12084:	ldr	lr, [r1, r3, lsl #2]
   12088:	lsl	r0, r3, #2
   1208c:	cmp	lr, #0
   12090:	add	r5, r1, r0
   12094:	beq	120e4 <heap_insere@@Base+0xbc>
   12098:	ldr	r6, [ip]
   1209c:	ldr	r2, [lr]
   120a0:	cmp	r6, r2
   120a4:	bge	120e4 <heap_insere@@Base+0xbc>
   120a8:	sub	r2, r3, #1
   120ac:	cmp	r3, #0
   120b0:	add	r2, r2, r2, lsr #31
   120b4:	str	ip, [r5]
   120b8:	asr	r3, r2, #1
   120bc:	str	lr, [r4]
   120c0:	add	r4, r1, r0
   120c4:	beq	120e4 <heap_insere@@Base+0xbc>
   120c8:	ldr	ip, [r1, r0]
   120cc:	ldr	lr, [r1, r3, lsl #2]
   120d0:	lsl	r0, r3, #2
   120d4:	cmp	lr, #0
   120d8:	cmpne	ip, #0
   120dc:	add	r5, r1, r0
   120e0:	bne	12098 <heap_insere@@Base+0x70>
   120e4:	mov	r0, #1
   120e8:	pop	{r4, r5, r6, pc}
   120ec:	mov	r0, #0
   120f0:	pop	{r4, r5, r6, pc}

000120f4 <heap_remove@@Base>:
   120f4:	push	{r4, r5, r6, r7, r8, lr}
   120f8:	subs	r6, r0, #0
   120fc:	beq	121e4 <heap_remove@@Base+0xf0>
   12100:	ldr	r3, [r6]
   12104:	cmp	r3, #0
   12108:	ble	121e4 <heap_remove@@Base+0xf0>
   1210c:	ldr	r3, [r6, #8]
   12110:	ldr	r3, [r3]
   12114:	mov	r0, r3
   12118:	ldr	r4, [r3, #4]
   1211c:	bl	10f0c <free@plt>
   12120:	ldr	r5, [r6]
   12124:	ldr	r1, [r6, #8]
   12128:	sub	r5, r5, #1
   1212c:	mov	r3, #0
   12130:	ldr	r2, [r1, r5, lsl #2]
   12134:	cmp	r5, #1
   12138:	str	r5, [r6]
   1213c:	str	r2, [r1]
   12140:	str	r3, [r1, r5, lsl #2]
   12144:	ble	121dc <heap_remove@@Base+0xe8>
   12148:	mov	r0, #1
   1214c:	b	12170 <heap_remove@@Base+0x7c>
   12150:	ldr	r8, [ip]
   12154:	ldr	r7, [lr]
   12158:	cmp	r8, r7
   1215c:	bge	121dc <heap_remove@@Base+0xe8>
   12160:	cmp	r5, r0
   12164:	str	lr, [r1, r6]
   12168:	str	ip, [r1, r2]
   1216c:	ble	121dc <heap_remove@@Base+0xe8>
   12170:	add	ip, r3, #1
   12174:	mov	r2, r3
   12178:	lsl	lr, ip, #1
   1217c:	cmp	r5, lr
   12180:	add	r6, r1, ip, lsl #3
   12184:	ble	121b4 <heap_remove@@Base+0xc0>
   12188:	ldr	r7, [r1, ip, lsl #3]
   1218c:	ldr	ip, [r6, #-4]
   12190:	mov	r2, r3
   12194:	cmp	r7, #0
   12198:	cmpne	ip, #0
   1219c:	beq	121b4 <heap_remove@@Base+0xc0>
   121a0:	ldr	r6, [r7]
   121a4:	ldr	ip, [ip]
   121a8:	cmp	r6, ip
   121ac:	movlt	r3, lr
   121b0:	blt	121b8 <heap_remove@@Base+0xc4>
   121b4:	mov	r3, r0
   121b8:	ldr	lr, [r1, r2, lsl #2]
   121bc:	ldr	ip, [r1, r3, lsl #2]
   121c0:	lsl	r0, r3, #1
   121c4:	cmp	lr, #0
   121c8:	cmpne	ip, #0
   121cc:	add	r0, r0, #1
   121d0:	lsl	r2, r2, #2
   121d4:	lsl	r6, r3, #2
   121d8:	bne	12150 <heap_remove@@Base+0x5c>
   121dc:	mov	r0, r4
   121e0:	pop	{r4, r5, r6, r7, r8, pc}
   121e4:	mov	r4, #0
   121e8:	mov	r0, r4
   121ec:	pop	{r4, r5, r6, r7, r8, pc}

000121f0 <mostraHeap@@Base>:
   121f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121f4:	mov	r8, r0
   121f8:	ldr	r6, [pc, #196]	; 122c4 <mostraHeap@@Base+0xd4>
   121fc:	ldr	r9, [pc, #196]	; 122c8 <mostraHeap@@Base+0xd8>
   12200:	mov	r7, r1
   12204:	ldr	r3, [r8]
   12208:	cmp	r3, r7
   1220c:	bgt	1221c <mostraHeap@@Base+0x2c>
   12210:	mov	r0, #10
   12214:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12218:	b	10f84 <putchar@plt>
   1221c:	cmp	r7, #0
   12220:	ble	12288 <mostraHeap@@Base+0x98>
   12224:	mov	r4, r7
   12228:	mov	r5, #0
   1222c:	sub	r4, r4, #1
   12230:	add	r5, r5, #1
   12234:	asrs	r4, r4, #1
   12238:	bne	1222c <mostraHeap@@Base+0x3c>
   1223c:	lsl	r1, r7, #1
   12240:	add	r1, r1, #1
   12244:	mov	r0, r8
   12248:	bl	121f0 <mostraHeap@@Base>
   1224c:	add	r5, r5, r5, lsl #1
   12250:	add	r4, r4, #1
   12254:	mov	r0, r6
   12258:	bl	10ee8 <printf@plt>
   1225c:	cmp	r4, r5
   12260:	bne	12250 <mostraHeap@@Base+0x60>
   12264:	ldr	r3, [r8, #8]
   12268:	mov	r0, r9
   1226c:	ldr	r3, [r3, r7, lsl #2]
   12270:	add	r7, r7, #1
   12274:	ldr	r2, [r3]
   12278:	ldr	r1, [r3, #4]
   1227c:	bl	10ee8 <printf@plt>
   12280:	lsl	r7, r7, #1
   12284:	b	12204 <mostraHeap@@Base+0x14>
   12288:	lsl	r1, r7, #1
   1228c:	mov	r0, r8
   12290:	add	r1, r1, #1
   12294:	bl	121f0 <mostraHeap@@Base>
   12298:	ldr	r3, [r8, #8]
   1229c:	ldr	r0, [pc, #36]	; 122c8 <mostraHeap@@Base+0xd8>
   122a0:	ldr	r3, [r3, r7, lsl #2]
   122a4:	ldr	r1, [r3, #4]
   122a8:	ldr	r2, [r3]
   122ac:	bl	10ee8 <printf@plt>
   122b0:	add	r1, r7, #1
   122b4:	mov	r0, r8
   122b8:	lsl	r1, r1, #1
   122bc:	bl	121f0 <mostraHeap@@Base>
   122c0:	b	12210 <mostraHeap@@Base+0x20>
   122c4:	andeq	r2, r1, ip, ror sp
   122c8:	andeq	r2, r1, r4, lsl #27

000122cc <menor_que@@Base>:
   122cc:	cmp	r1, #0
   122d0:	cmpne	r0, #0
   122d4:	beq	122f0 <menor_que@@Base+0x24>
   122d8:	ldr	r0, [r0]
   122dc:	ldr	r3, [r1]
   122e0:	cmp	r0, r3
   122e4:	movge	r0, #0
   122e8:	movlt	r0, #1
   122ec:	bx	lr
   122f0:	mov	r0, #0
   122f4:	bx	lr

000122f8 <novo_str@@Base>:
   122f8:	push	{r4, r5, r6, r7, r8, lr}
   122fc:	mov	r5, r0
   12300:	mov	r0, #12
   12304:	bl	10f48 <malloc@plt>
   12308:	subs	r4, r0, #0
   1230c:	beq	1234c <novo_str@@Base+0x54>
   12310:	mov	r0, r5
   12314:	bl	10f6c <strlen@plt>
   12318:	add	r7, r0, #1
   1231c:	mov	r0, r7
   12320:	bl	10f48 <malloc@plt>
   12324:	cmp	r0, #0
   12328:	mov	r6, r0
   1232c:	str	r0, [r4]
   12330:	beq	12354 <novo_str@@Base+0x5c>
   12334:	mov	r2, r7
   12338:	mov	r1, r5
   1233c:	bl	10f18 <memcpy@plt>
   12340:	mov	r3, #0
   12344:	str	r3, [r4, #4]
   12348:	str	r3, [r4, #8]
   1234c:	mov	r0, r4
   12350:	pop	{r4, r5, r6, r7, r8, pc}
   12354:	mov	r0, r4
   12358:	bl	10f0c <free@plt>
   1235c:	mov	r4, r6
   12360:	b	1234c <novo_str@@Base+0x54>

00012364 <lista_nova@@Base>:
   12364:	push	{r4, lr}
   12368:	mov	r0, #12
   1236c:	bl	10f48 <malloc@plt>
   12370:	cmp	r0, #0
   12374:	movne	r3, #0
   12378:	strne	r3, [r0]
   1237c:	strne	r3, [r0, #4]
   12380:	strne	r3, [r0, #8]
   12384:	pop	{r4, pc}

00012388 <lista_apaga@@Base>:
   12388:	push	{r4, r5, r6, lr}
   1238c:	subs	r5, r0, #0
   12390:	bne	123ac <lista_apaga@@Base+0x24>
   12394:	b	123c4 <lista_apaga@@Base+0x3c>
   12398:	ldm	r4, {r0, r3}
   1239c:	str	r3, [r5]
   123a0:	bl	10f0c <free@plt>
   123a4:	mov	r0, r4
   123a8:	bl	10f0c <free@plt>
   123ac:	ldr	r4, [r5]
   123b0:	cmp	r4, #0
   123b4:	bne	12398 <lista_apaga@@Base+0x10>
   123b8:	mov	r0, r5
   123bc:	pop	{r4, r5, r6, lr}
   123c0:	b	10f0c <free@plt>
   123c4:	pop	{r4, r5, r6, pc}

000123c8 <lista_tamanho@@Base>:
   123c8:	cmp	r0, #0
   123cc:	ldrne	r0, [r0, #8]
   123d0:	mvneq	r0, #0
   123d4:	bx	lr

000123d8 <lista_inicio@@Base>:
   123d8:	cmp	r0, #0
   123dc:	ldrne	r0, [r0]
   123e0:	bx	lr

000123e4 <lista_fim@@Base>:
   123e4:	cmp	r0, #0
   123e8:	ldrne	r0, [r0, #4]
   123ec:	bx	lr

000123f0 <lista_insere@@Base>:
   123f0:	cmp	r1, #0
   123f4:	cmpne	r0, #0
   123f8:	beq	12484 <lista_insere@@Base+0x94>
   123fc:	push	{r4, r5, r6, lr}
   12400:	mov	r5, r0
   12404:	mov	r0, r1
   12408:	mov	r4, r2
   1240c:	bl	122f8 <novo_str@@Base>
   12410:	cmp	r0, #0
   12414:	beq	1245c <lista_insere@@Base+0x6c>
   12418:	ldr	r3, [r5, #8]
   1241c:	cmp	r4, #0
   12420:	add	r3, r3, #1
   12424:	str	r3, [r5, #8]
   12428:	ldr	r3, [r5]
   1242c:	beq	12464 <lista_insere@@Base+0x74>
   12430:	cmp	r4, r3
   12434:	streq	r4, [r0, #4]
   12438:	ldrne	r3, [r4, #8]
   1243c:	streq	r0, [r4, #8]
   12440:	strne	r3, [r0, #8]
   12444:	ldrne	r3, [r4, #8]
   12448:	strne	r4, [r0, #4]
   1244c:	streq	r0, [r5]
   12450:	strne	r0, [r3, #4]
   12454:	strne	r0, [r4, #8]
   12458:	pop	{r4, r5, r6, pc}
   1245c:	mov	r0, #0
   12460:	pop	{r4, r5, r6, pc}
   12464:	cmp	r3, #0
   12468:	streq	r0, [r5, #4]
   1246c:	ldrne	r3, [r5, #4]
   12470:	streq	r0, [r5]
   12474:	strne	r3, [r0, #8]
   12478:	strne	r0, [r3, #4]
   1247c:	strne	r0, [r5, #4]
   12480:	pop	{r4, r5, r6, pc}
   12484:	mov	r0, #0
   12488:	bx	lr

0001248c <lista_remove@@Base>:
   1248c:	cmp	r1, #0
   12490:	cmpne	r0, #0
   12494:	push	{r4, r5, r6, lr}
   12498:	beq	124ec <lista_remove@@Base+0x60>
   1249c:	ldr	r2, [r1, #8]
   124a0:	ldr	r3, [r0, #8]
   124a4:	cmp	r2, #0
   124a8:	sub	r3, r3, #1
   124ac:	str	r3, [r0, #8]
   124b0:	ldrne	r3, [r1, #4]
   124b4:	ldreq	r5, [r1, #4]
   124b8:	strne	r3, [r2, #4]
   124bc:	ldrne	r5, [r1, #4]
   124c0:	streq	r5, [r0]
   124c4:	cmp	r5, #0
   124c8:	streq	r2, [r0, #4]
   124cc:	mov	r4, r1
   124d0:	ldr	r0, [r1]
   124d4:	strne	r2, [r5, #8]
   124d8:	bl	10f0c <free@plt>
   124dc:	mov	r0, r4
   124e0:	bl	10f0c <free@plt>
   124e4:	mov	r0, r5
   124e8:	pop	{r4, r5, r6, pc}
   124ec:	mov	r5, #0
   124f0:	mov	r0, r5
   124f4:	pop	{r4, r5, r6, pc}

000124f8 <lista_pesquisa@@Base>:
   124f8:	cmp	r1, #0
   124fc:	cmpne	r0, #0
   12500:	push	{r4, r5, r6, lr}
   12504:	moveq	r4, #1
   12508:	movne	r4, #0
   1250c:	beq	12594 <lista_pesquisa@@Base+0x9c>
   12510:	cmp	r2, #1
   12514:	bhi	12554 <lista_pesquisa@@Base+0x5c>
   12518:	cmp	r2, #0
   1251c:	mov	r5, r1
   12520:	bne	1255c <lista_pesquisa@@Base+0x64>
   12524:	ldr	r4, [r0]
   12528:	cmp	r4, #0
   1252c:	bne	12540 <lista_pesquisa@@Base+0x48>
   12530:	b	12554 <lista_pesquisa@@Base+0x5c>
   12534:	ldr	r4, [r4, #4]
   12538:	cmp	r4, #0
   1253c:	beq	12554 <lista_pesquisa@@Base+0x5c>
   12540:	mov	r1, r5
   12544:	ldr	r0, [r4]
   12548:	bl	10ed0 <strcmp@plt>
   1254c:	cmp	r0, #0
   12550:	bne	12534 <lista_pesquisa@@Base+0x3c>
   12554:	mov	r0, r4
   12558:	pop	{r4, r5, r6, pc}
   1255c:	ldr	r4, [r0, #4]
   12560:	cmp	r4, #0
   12564:	bne	12578 <lista_pesquisa@@Base+0x80>
   12568:	b	12554 <lista_pesquisa@@Base+0x5c>
   1256c:	ldr	r4, [r4, #8]
   12570:	cmp	r4, #0
   12574:	beq	12554 <lista_pesquisa@@Base+0x5c>
   12578:	mov	r1, r5
   1257c:	ldr	r0, [r4]
   12580:	bl	10ed0 <strcmp@plt>
   12584:	cmp	r0, #0
   12588:	bne	1256c <lista_pesquisa@@Base+0x74>
   1258c:	mov	r0, r4
   12590:	pop	{r4, r5, r6, pc}
   12594:	mov	r4, #0
   12598:	mov	r0, r4
   1259c:	pop	{r4, r5, r6, pc}

000125a0 <lista_ordena@@Base>:
   125a0:	cmp	r0, #0
   125a4:	beq	12624 <lista_ordena@@Base+0x84>
   125a8:	ldr	r3, [r0, #8]
   125ac:	cmp	r3, #0
   125b0:	beq	1261c <lista_ordena@@Base+0x7c>
   125b4:	push	{r4, r5, r6, r7, r8, lr}
   125b8:	ldr	r6, [r0]
   125bc:	ldr	r7, [r6, #4]
   125c0:	cmp	r7, #0
   125c4:	beq	12614 <lista_ordena@@Base+0x74>
   125c8:	mov	r5, r6
   125cc:	mov	r4, r7
   125d0:	ldr	r1, [r5]
   125d4:	ldr	r0, [r4]
   125d8:	bl	10ed0 <strcmp@plt>
   125dc:	cmp	r0, #0
   125e0:	movlt	r5, r4
   125e4:	ldr	r4, [r4, #4]
   125e8:	cmp	r4, #0
   125ec:	bne	125d0 <lista_ordena@@Base+0x30>
   125f0:	cmp	r6, r5
   125f4:	ldrne	r2, [r5]
   125f8:	ldrne	r3, [r6]
   125fc:	strne	r2, [r6]
   12600:	mov	r6, r7
   12604:	strne	r3, [r5]
   12608:	ldr	r7, [r6, #4]
   1260c:	cmp	r7, #0
   12610:	bne	125c8 <lista_ordena@@Base+0x28>
   12614:	mov	r0, #0
   12618:	pop	{r4, r5, r6, r7, r8, pc}
   1261c:	mov	r0, #0
   12620:	bx	lr
   12624:	mvn	r0, #0
   12628:	bx	lr

0001262c <lista_inverte@@Base>:
   1262c:	push	{r4, r5, lr}
   12630:	subs	r5, r0, #0
   12634:	beq	126cc <lista_inverte@@Base+0xa0>
   12638:	ldr	r4, [r5, #8]
   1263c:	cmp	r4, #1
   12640:	ble	126bc <lista_inverte@@Base+0x90>
   12644:	ldr	r2, [r5]
   12648:	cmp	r4, #2
   1264c:	ldr	r3, [r2, #4]
   12650:	beq	126c4 <lista_inverte@@Base+0x98>
   12654:	sub	r4, r4, #2
   12658:	mov	r1, #0
   1265c:	b	12664 <lista_inverte@@Base+0x38>
   12660:	mov	r3, lr
   12664:	ldr	ip, [r3, #8]
   12668:	ldr	lr, [r3, #4]
   1266c:	add	r1, r1, #1
   12670:	str	lr, [ip, #4]
   12674:	ldr	lr, [r3, #4]
   12678:	cmp	r1, r4
   1267c:	str	ip, [lr, #8]
   12680:	str	r2, [r3, #4]
   12684:	str	r3, [r2, #8]
   12688:	mov	r2, r3
   1268c:	bne	12660 <lista_inverte@@Base+0x34>
   12690:	ldr	r2, [r5, #4]
   12694:	mov	r1, #0
   12698:	mov	r0, r1
   1269c:	ldr	ip, [r2, #8]
   126a0:	str	ip, [r5, #4]
   126a4:	str	r1, [ip, #4]
   126a8:	str	r1, [r2, #8]
   126ac:	str	r3, [r2, #4]
   126b0:	str	r2, [r3, #8]
   126b4:	str	r2, [r5]
   126b8:	pop	{r4, r5, pc}
   126bc:	mov	r0, #0
   126c0:	pop	{r4, r5, pc}
   126c4:	mov	r3, r2
   126c8:	b	12690 <lista_inverte@@Base+0x64>
   126cc:	mvn	r0, #0
   126d0:	pop	{r4, r5, pc}

000126d4 <vetor_novo@@Base>:
   126d4:	push	{r4, lr}
   126d8:	mov	r0, #12
   126dc:	bl	10f48 <malloc@plt>
   126e0:	cmp	r0, #0
   126e4:	movne	r3, #0
   126e8:	strne	r3, [r0]
   126ec:	strne	r3, [r0, #4]
   126f0:	strne	r3, [r0, #8]
   126f4:	pop	{r4, pc}

000126f8 <vetor_apaga@@Base>:
   126f8:	push	{r4, lr}
   126fc:	subs	r4, r0, #0
   12700:	popeq	{r4, pc}
   12704:	ldr	r0, [r4, #8]
   12708:	bl	10f0c <free@plt>
   1270c:	mov	r0, r4
   12710:	pop	{r4, lr}
   12714:	b	10f0c <free@plt>

00012718 <vetor_atribui@@Base>:
   12718:	clz	r3, r0
   1271c:	lsr	r3, r3, #5
   12720:	orrs	r3, r3, r1, lsr #31
   12724:	bne	12744 <vetor_atribui@@Base+0x2c>
   12728:	ldr	r3, [r0]
   1272c:	cmp	r1, r3
   12730:	bge	12744 <vetor_atribui@@Base+0x2c>
   12734:	ldr	r3, [r0, #8]
   12738:	mov	r0, r1
   1273c:	str	r2, [r3, r1, lsl #2]
   12740:	bx	lr
   12744:	mvn	r0, #0
   12748:	bx	lr

0001274c <vetor_tamanho@@Base>:
   1274c:	cmp	r0, #0
   12750:	ldrne	r0, [r0]
   12754:	mvneq	r0, #0
   12758:	bx	lr

0001275c <vetor_elemento@@Base>:
   1275c:	clz	r3, r0
   12760:	lsr	r3, r3, #5
   12764:	orrs	r3, r3, r1, lsr #31
   12768:	bne	12784 <vetor_elemento@@Base+0x28>
   1276c:	ldr	r3, [r0]
   12770:	cmp	r1, r3
   12774:	bge	12784 <vetor_elemento@@Base+0x28>
   12778:	ldr	r3, [r0, #8]
   1277c:	ldr	r0, [r3, r1, lsl #2]
   12780:	bx	lr
   12784:	mov	r0, #-2147483648	; 0x80000000
   12788:	bx	lr

0001278c <vetor_insere@@Base>:
   1278c:	cmn	r2, #1
   12790:	movge	r3, #0
   12794:	movlt	r3, #1
   12798:	cmp	r0, #0
   1279c:	orreq	r3, r3, #1
   127a0:	cmp	r3, #0
   127a4:	push	{r4, r5, r6, lr}
   127a8:	bne	12844 <vetor_insere@@Base+0xb8>
   127ac:	ldr	lr, [r0]
   127b0:	cmp	r2, lr
   127b4:	bgt	12844 <vetor_insere@@Base+0xb8>
   127b8:	ldr	r3, [r0, #4]
   127bc:	cmn	r2, #1
   127c0:	movne	r4, r2
   127c4:	moveq	r4, lr
   127c8:	cmp	lr, r3
   127cc:	mov	r5, r0
   127d0:	mov	r6, r1
   127d4:	beq	12810 <vetor_insere@@Base+0x84>
   127d8:	ldr	r0, [r0, #8]
   127dc:	cmp	r4, lr
   127e0:	addlt	r3, r0, lr, lsl #2
   127e4:	addlt	ip, r0, r4, lsl #2
   127e8:	bge	127fc <vetor_insere@@Base+0x70>
   127ec:	ldr	r2, [r3, #-4]
   127f0:	str	r2, [r3], #-4
   127f4:	cmp	ip, r3
   127f8:	bne	127ec <vetor_insere@@Base+0x60>
   127fc:	add	lr, lr, #1
   12800:	str	r6, [r0, r4, lsl #2]
   12804:	str	lr, [r5]
   12808:	mov	r0, r4
   1280c:	pop	{r4, r5, r6, pc}
   12810:	cmp	lr, #0
   12814:	moveq	r3, #1
   12818:	lslne	r1, lr, #3
   1281c:	lslne	lr, lr, #1
   12820:	streq	r3, [r0, #4]
   12824:	strne	lr, [r0, #4]
   12828:	moveq	r1, #4
   1282c:	ldr	r0, [r0, #8]
   12830:	bl	10f24 <realloc@plt>
   12834:	cmp	r0, #0
   12838:	str	r0, [r5, #8]
   1283c:	ldrne	lr, [r5]
   12840:	bne	127dc <vetor_insere@@Base+0x50>
   12844:	mvn	r4, #0
   12848:	b	12808 <vetor_insere@@Base+0x7c>

0001284c <vetor_remove@@Base>:
   1284c:	clz	r3, r0
   12850:	lsr	r3, r3, #5
   12854:	orrs	r3, r3, r1, lsr #31
   12858:	bne	128a4 <vetor_remove@@Base+0x58>
   1285c:	ldr	ip, [r0]
   12860:	cmp	r1, ip
   12864:	bge	128a4 <vetor_remove@@Base+0x58>
   12868:	add	r3, r1, #1
   1286c:	cmp	ip, r3
   12870:	ble	12894 <vetor_remove@@Base+0x48>
   12874:	ldr	r3, [r0, #8]
   12878:	sub	r2, ip, #-1073741823	; 0xc0000001
   1287c:	add	r1, r3, r1, lsl #2
   12880:	add	r2, r3, r2, lsl #2
   12884:	ldr	r3, [r1, #4]
   12888:	str	r3, [r1], #4
   1288c:	cmp	r1, r2
   12890:	bne	12884 <vetor_remove@@Base+0x38>
   12894:	sub	ip, ip, #1
   12898:	str	ip, [r0]
   1289c:	mov	r0, #0
   128a0:	bx	lr
   128a4:	mvn	r0, #0
   128a8:	bx	lr

000128ac <vetor_pesquisa@@Base>:
   128ac:	cmp	r0, #0
   128b0:	beq	128f4 <vetor_pesquisa@@Base+0x48>
   128b4:	ldr	ip, [r0]
   128b8:	cmp	ip, #0
   128bc:	ble	128f4 <vetor_pesquisa@@Base+0x48>
   128c0:	ldr	r3, [r0, #8]
   128c4:	ldr	r2, [r3]
   128c8:	cmp	r1, r2
   128cc:	beq	128fc <vetor_pesquisa@@Base+0x50>
   128d0:	add	r3, r3, #4
   128d4:	mov	r0, #0
   128d8:	b	128e8 <vetor_pesquisa@@Base+0x3c>
   128dc:	ldr	r2, [r3], #4
   128e0:	cmp	r2, r1
   128e4:	bxeq	lr
   128e8:	add	r0, r0, #1
   128ec:	cmp	r0, ip
   128f0:	bne	128dc <vetor_pesquisa@@Base+0x30>
   128f4:	mvn	r0, #0
   128f8:	bx	lr
   128fc:	mov	r0, #0
   12900:	bx	lr

00012904 <vetor_ordena@@Base>:
   12904:	cmp	r0, #0
   12908:	beq	12974 <vetor_ordena@@Base+0x70>
   1290c:	ldr	r3, [r0]
   12910:	cmp	r3, #1
   12914:	ble	1296c <vetor_ordena@@Base+0x68>
   12918:	push	{r4, r5, lr}
   1291c:	sub	r3, r3, #-1073741823	; 0xc0000001
   12920:	ldr	r5, [r0, #8]
   12924:	mov	lr, #1
   12928:	mov	ip, r5
   1292c:	add	r4, r5, r3, lsl #2
   12930:	ldr	r0, [ip, #4]!
   12934:	mov	r3, lr
   12938:	mov	r2, ip
   1293c:	ldr	r1, [r2, #-4]
   12940:	cmp	r0, r1
   12944:	bge	12954 <vetor_ordena@@Base+0x50>
   12948:	subs	r3, r3, #1
   1294c:	str	r1, [r2], #-4
   12950:	bne	1293c <vetor_ordena@@Base+0x38>
   12954:	cmp	ip, r4
   12958:	str	r0, [r5, r3, lsl #2]
   1295c:	add	lr, lr, #1
   12960:	bne	12930 <vetor_ordena@@Base+0x2c>
   12964:	mov	r0, #0
   12968:	pop	{r4, r5, pc}
   1296c:	mov	r0, #0
   12970:	bx	lr
   12974:	mvn	r0, #0
   12978:	bx	lr
   1297c:	cmp	r1, #0
   12980:	beq	12b8c <vetor_ordena@@Base+0x288>
   12984:	eor	ip, r0, r1
   12988:	rsbmi	r1, r1, #0
   1298c:	subs	r2, r1, #1
   12990:	beq	12b58 <vetor_ordena@@Base+0x254>
   12994:	movs	r3, r0
   12998:	rsbmi	r3, r0, #0
   1299c:	cmp	r3, r1
   129a0:	bls	12b64 <vetor_ordena@@Base+0x260>
   129a4:	tst	r1, r2
   129a8:	beq	12b74 <vetor_ordena@@Base+0x270>
   129ac:	clz	r2, r3
   129b0:	clz	r0, r1
   129b4:	sub	r2, r0, r2
   129b8:	rsbs	r2, r2, #31
   129bc:	addne	r2, r2, r2, lsl #1
   129c0:	mov	r0, #0
   129c4:	addne	pc, pc, r2, lsl #2
   129c8:	nop			; (mov r0, r0)
   129cc:	cmp	r3, r1, lsl #31
   129d0:	adc	r0, r0, r0
   129d4:	subcs	r3, r3, r1, lsl #31
   129d8:	cmp	r3, r1, lsl #30
   129dc:	adc	r0, r0, r0
   129e0:	subcs	r3, r3, r1, lsl #30
   129e4:	cmp	r3, r1, lsl #29
   129e8:	adc	r0, r0, r0
   129ec:	subcs	r3, r3, r1, lsl #29
   129f0:	cmp	r3, r1, lsl #28
   129f4:	adc	r0, r0, r0
   129f8:	subcs	r3, r3, r1, lsl #28
   129fc:	cmp	r3, r1, lsl #27
   12a00:	adc	r0, r0, r0
   12a04:	subcs	r3, r3, r1, lsl #27
   12a08:	cmp	r3, r1, lsl #26
   12a0c:	adc	r0, r0, r0
   12a10:	subcs	r3, r3, r1, lsl #26
   12a14:	cmp	r3, r1, lsl #25
   12a18:	adc	r0, r0, r0
   12a1c:	subcs	r3, r3, r1, lsl #25
   12a20:	cmp	r3, r1, lsl #24
   12a24:	adc	r0, r0, r0
   12a28:	subcs	r3, r3, r1, lsl #24
   12a2c:	cmp	r3, r1, lsl #23
   12a30:	adc	r0, r0, r0
   12a34:	subcs	r3, r3, r1, lsl #23
   12a38:	cmp	r3, r1, lsl #22
   12a3c:	adc	r0, r0, r0
   12a40:	subcs	r3, r3, r1, lsl #22
   12a44:	cmp	r3, r1, lsl #21
   12a48:	adc	r0, r0, r0
   12a4c:	subcs	r3, r3, r1, lsl #21
   12a50:	cmp	r3, r1, lsl #20
   12a54:	adc	r0, r0, r0
   12a58:	subcs	r3, r3, r1, lsl #20
   12a5c:	cmp	r3, r1, lsl #19
   12a60:	adc	r0, r0, r0
   12a64:	subcs	r3, r3, r1, lsl #19
   12a68:	cmp	r3, r1, lsl #18
   12a6c:	adc	r0, r0, r0
   12a70:	subcs	r3, r3, r1, lsl #18
   12a74:	cmp	r3, r1, lsl #17
   12a78:	adc	r0, r0, r0
   12a7c:	subcs	r3, r3, r1, lsl #17
   12a80:	cmp	r3, r1, lsl #16
   12a84:	adc	r0, r0, r0
   12a88:	subcs	r3, r3, r1, lsl #16
   12a8c:	cmp	r3, r1, lsl #15
   12a90:	adc	r0, r0, r0
   12a94:	subcs	r3, r3, r1, lsl #15
   12a98:	cmp	r3, r1, lsl #14
   12a9c:	adc	r0, r0, r0
   12aa0:	subcs	r3, r3, r1, lsl #14
   12aa4:	cmp	r3, r1, lsl #13
   12aa8:	adc	r0, r0, r0
   12aac:	subcs	r3, r3, r1, lsl #13
   12ab0:	cmp	r3, r1, lsl #12
   12ab4:	adc	r0, r0, r0
   12ab8:	subcs	r3, r3, r1, lsl #12
   12abc:	cmp	r3, r1, lsl #11
   12ac0:	adc	r0, r0, r0
   12ac4:	subcs	r3, r3, r1, lsl #11
   12ac8:	cmp	r3, r1, lsl #10
   12acc:	adc	r0, r0, r0
   12ad0:	subcs	r3, r3, r1, lsl #10
   12ad4:	cmp	r3, r1, lsl #9
   12ad8:	adc	r0, r0, r0
   12adc:	subcs	r3, r3, r1, lsl #9
   12ae0:	cmp	r3, r1, lsl #8
   12ae4:	adc	r0, r0, r0
   12ae8:	subcs	r3, r3, r1, lsl #8
   12aec:	cmp	r3, r1, lsl #7
   12af0:	adc	r0, r0, r0
   12af4:	subcs	r3, r3, r1, lsl #7
   12af8:	cmp	r3, r1, lsl #6
   12afc:	adc	r0, r0, r0
   12b00:	subcs	r3, r3, r1, lsl #6
   12b04:	cmp	r3, r1, lsl #5
   12b08:	adc	r0, r0, r0
   12b0c:	subcs	r3, r3, r1, lsl #5
   12b10:	cmp	r3, r1, lsl #4
   12b14:	adc	r0, r0, r0
   12b18:	subcs	r3, r3, r1, lsl #4
   12b1c:	cmp	r3, r1, lsl #3
   12b20:	adc	r0, r0, r0
   12b24:	subcs	r3, r3, r1, lsl #3
   12b28:	cmp	r3, r1, lsl #2
   12b2c:	adc	r0, r0, r0
   12b30:	subcs	r3, r3, r1, lsl #2
   12b34:	cmp	r3, r1, lsl #1
   12b38:	adc	r0, r0, r0
   12b3c:	subcs	r3, r3, r1, lsl #1
   12b40:	cmp	r3, r1
   12b44:	adc	r0, r0, r0
   12b48:	subcs	r3, r3, r1
   12b4c:	cmp	ip, #0
   12b50:	rsbmi	r0, r0, #0
   12b54:	bx	lr
   12b58:	teq	ip, r0
   12b5c:	rsbmi	r0, r0, #0
   12b60:	bx	lr
   12b64:	movcc	r0, #0
   12b68:	asreq	r0, ip, #31
   12b6c:	orreq	r0, r0, #1
   12b70:	bx	lr
   12b74:	clz	r2, r1
   12b78:	rsb	r2, r2, #31
   12b7c:	cmp	ip, #0
   12b80:	lsr	r0, r3, r2
   12b84:	rsbmi	r0, r0, #0
   12b88:	bx	lr
   12b8c:	cmp	r0, #0
   12b90:	mvngt	r0, #-2147483648	; 0x80000000
   12b94:	movlt	r0, #-2147483648	; 0x80000000
   12b98:	b	12bbc <vetor_ordena@@Base+0x2b8>
   12b9c:	cmp	r1, #0
   12ba0:	beq	12b8c <vetor_ordena@@Base+0x288>
   12ba4:	push	{r0, r1, lr}
   12ba8:	bl	12984 <vetor_ordena@@Base+0x80>
   12bac:	pop	{r1, r2, lr}
   12bb0:	mul	r3, r2, r0
   12bb4:	sub	r1, r1, r3
   12bb8:	bx	lr
   12bbc:	push	{r1, lr}
   12bc0:	mov	r0, #8
   12bc4:	bl	10ec4 <raise@plt>
   12bc8:	pop	{r1, pc}

00012bcc <__libc_csu_init@@Base>:
   12bcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bd0:	mov	r7, r0
   12bd4:	ldr	r6, [pc, #72]	; 12c24 <__libc_csu_init@@Base+0x58>
   12bd8:	ldr	r5, [pc, #72]	; 12c28 <__libc_csu_init@@Base+0x5c>
   12bdc:	add	r6, pc, r6
   12be0:	add	r5, pc, r5
   12be4:	sub	r6, r6, r5
   12be8:	mov	r8, r1
   12bec:	mov	r9, r2
   12bf0:	bl	10e98 <calloc@plt-0x20>
   12bf4:	asrs	r6, r6, #2
   12bf8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bfc:	mov	r4, #0
   12c00:	add	r4, r4, #1
   12c04:	ldr	r3, [r5], #4
   12c08:	mov	r2, r9
   12c0c:	mov	r1, r8
   12c10:	mov	r0, r7
   12c14:	blx	r3
   12c18:	cmp	r6, r4
   12c1c:	bne	12c00 <__libc_csu_init@@Base+0x34>
   12c20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c24:	andeq	r0, r1, ip, lsr #6
   12c28:	andeq	r0, r1, r4, lsr #6

00012c2c <__libc_csu_fini@@Base>:
   12c2c:	bx	lr

Disassembly of section .fini:

00012c30 <.fini>:
   12c30:	push	{r3, lr}
   12c34:	pop	{r3, pc}
