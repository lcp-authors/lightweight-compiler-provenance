
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-xml-parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <is_whitespace>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #16
      10:	str	r0, [fp, #-16]
      14:	str	r1, [fp, #-20]	; 0xffffffec
      18:	ldr	r3, [fp, #-16]
      1c:	cmp	r3, #0
      20:	bne	44 <is_whitespace+0x44>
      24:	movw	r3, #0
      28:	movt	r3, #0
      2c:	mov	r2, #53	; 0x35
      30:	movw	r1, #0
      34:	movt	r1, #0
      38:	movw	r0, #0
      3c:	movt	r0, #0
      40:	bl	0 <__assert_fail>
      44:	mov	r3, #0
      48:	str	r3, [fp, #-8]
      4c:	b	c4 <is_whitespace+0xc4>
      50:	ldr	r3, [fp, #-8]
      54:	ldr	r2, [fp, #-16]
      58:	add	r3, r2, r3
      5c:	ldrb	r3, [r3]
      60:	cmp	r3, #32
      64:	beq	b8 <is_whitespace+0xb8>
      68:	ldr	r3, [fp, #-8]
      6c:	ldr	r2, [fp, #-16]
      70:	add	r3, r2, r3
      74:	ldrb	r3, [r3]
      78:	cmp	r3, #9
      7c:	beq	b8 <is_whitespace+0xb8>
      80:	ldr	r3, [fp, #-8]
      84:	ldr	r2, [fp, #-16]
      88:	add	r3, r2, r3
      8c:	ldrb	r3, [r3]
      90:	cmp	r3, #10
      94:	beq	b8 <is_whitespace+0xb8>
      98:	ldr	r3, [fp, #-8]
      9c:	ldr	r2, [fp, #-16]
      a0:	add	r3, r2, r3
      a4:	ldrb	r3, [r3]
      a8:	cmp	r3, #13
      ac:	beq	b8 <is_whitespace+0xb8>
      b0:	mov	r3, #0
      b4:	b	d8 <is_whitespace+0xd8>
      b8:	ldr	r3, [fp, #-8]
      bc:	add	r3, r3, #1
      c0:	str	r3, [fp, #-8]
      c4:	ldr	r2, [fp, #-8]
      c8:	ldr	r3, [fp, #-20]	; 0xffffffec
      cc:	cmp	r2, r3
      d0:	blt	50 <is_whitespace+0x50>
      d4:	mov	r3, #1
      d8:	mov	r0, r3
      dc:	sub	sp, fp, #4
      e0:	ldr	fp, [sp]
      e4:	add	sp, sp, #4
      e8:	pop	{pc}		; (ldr pc, [sp], #4)

000000ec <convert_to_text>:
      ec:	str	fp, [sp, #-8]!
      f0:	str	lr, [sp, #4]
      f4:	add	fp, sp, #4
      f8:	sub	sp, sp, #16
      fc:	str	r0, [fp, #-16]
     100:	ldr	r3, [fp, #-16]
     104:	ldr	r3, [r3]
     108:	ldr	r3, [r3, #8]
     10c:	cmp	r3, #0
     110:	bne	128 <convert_to_text+0x3c>
     114:	ldr	r3, [fp, #-16]
     118:	ldr	r3, [r3]
     11c:	ldr	r3, [r3]
     120:	cmp	r3, #2
     124:	beq	148 <convert_to_text+0x5c>
     128:	movw	r3, #0
     12c:	movt	r3, #0
     130:	mov	r2, #70	; 0x46
     134:	movw	r1, #0
     138:	movt	r1, #0
     13c:	movw	r0, #0
     140:	movt	r0, #0
     144:	bl	0 <__assert_fail>
     148:	mov	r0, #2
     14c:	bl	0 <coda_type_text_new>
     150:	str	r0, [fp, #-8]
     154:	ldr	r3, [fp, #-8]
     158:	cmp	r3, #0
     15c:	bne	168 <convert_to_text+0x7c>
     160:	mvn	r3, #0
     164:	b	1c4 <convert_to_text+0xd8>
     168:	ldr	r3, [fp, #-16]
     16c:	ldr	r3, [r3]
     170:	ldr	r3, [r3, #36]	; 0x24
     174:	cmp	r3, #0
     178:	beq	1a4 <convert_to_text+0xb8>
     17c:	ldr	r3, [fp, #-16]
     180:	ldr	r3, [r3]
     184:	ldr	r2, [r3, #36]	; 0x24
     188:	ldr	r3, [fp, #-8]
     18c:	str	r2, [r3, #36]	; 0x24
     190:	ldr	r3, [fp, #-8]
     194:	ldr	r3, [r3, #36]	; 0x24
     198:	ldr	r2, [r3, #4]
     19c:	add	r2, r2, #1
     1a0:	str	r2, [r3, #4]
     1a4:	ldr	r3, [fp, #-16]
     1a8:	ldr	r3, [r3]
     1ac:	mov	r0, r3
     1b0:	bl	0 <coda_type_release>
     1b4:	ldr	r3, [fp, #-16]
     1b8:	ldr	r2, [fp, #-8]
     1bc:	str	r2, [r3]
     1c0:	mov	r3, #0
     1c4:	mov	r0, r3
     1c8:	sub	sp, fp, #4
     1cc:	ldr	fp, [sp]
     1d0:	add	sp, sp, #4
     1d4:	pop	{pc}		; (ldr pc, [sp], #4)

000001d8 <attribute_record_new>:
     1d8:	str	r4, [sp, #-12]!
     1dc:	str	fp, [sp, #4]
     1e0:	str	lr, [sp, #8]
     1e4:	add	fp, sp, #8
     1e8:	sub	sp, sp, #68	; 0x44
     1ec:	str	r0, [fp, #-56]	; 0xffffffc8
     1f0:	str	r1, [fp, #-60]	; 0xffffffc4
     1f4:	str	r2, [fp, #-64]	; 0xffffffc0
     1f8:	str	r3, [fp, #-68]	; 0xffffffbc
     1fc:	ldr	r3, [fp, #4]
     200:	str	r3, [fp, #-20]	; 0xffffffec
     204:	ldr	r3, [fp, #-56]	; 0xffffffc8
     208:	cmp	r3, #0
     20c:	bne	230 <attribute_record_new+0x58>
     210:	movw	r3, #0
     214:	movt	r3, #0
     218:	mov	r2, #97	; 0x61
     21c:	movw	r1, #0
     220:	movt	r1, #0
     224:	movw	r0, #0
     228:	movt	r0, #0
     22c:	bl	0 <__assert_fail>
     230:	mov	r1, #0
     234:	ldr	r0, [fp, #-56]	; 0xffffffc8
     238:	bl	0 <coda_mem_record_new>
     23c:	str	r0, [fp, #-36]	; 0xffffffdc
     240:	ldr	r0, [fp, #-64]	; 0xffffffc0
     244:	bl	0 <coda_element_name_from_xml_name>
     248:	mov	r2, r0
     24c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     250:	cmp	r3, r2
     254:	beq	4a4 <attribute_record_new+0x2cc>
     258:	ldr	r3, [fp, #-56]	; 0xffffffc8
     25c:	ldr	r3, [r3, #44]	; 0x2c
     260:	movw	r1, #0
     264:	movt	r1, #0
     268:	mov	r0, r3
     26c:	bl	0 <coda_hashtable_get_index_from_name>
     270:	str	r0, [fp, #-24]	; 0xffffffe8
     274:	ldr	r3, [fp, #4]
     278:	cmp	r3, #0
     27c:	beq	3ec <attribute_record_new+0x214>
     280:	ldr	r3, [fp, #-24]	; 0xffffffe8
     284:	cmp	r3, #0
     288:	bge	2f8 <attribute_record_new+0x120>
     28c:	mov	r0, #2
     290:	bl	0 <coda_type_text_new>
     294:	str	r0, [fp, #-40]	; 0xffffffd8
     298:	ldr	r3, [fp, #-40]	; 0xffffffd8
     29c:	cmp	r3, #0
     2a0:	bne	2b4 <attribute_record_new+0xdc>
     2a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
     2a8:	bl	0 <coda_dynamic_type_delete>
     2ac:	mov	r3, #0
     2b0:	b	808 <attribute_record_new+0x630>
     2b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     2b8:	bl	0 <coda_element_name_from_xml_name>
     2bc:	mov	r2, r0
     2c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     2c4:	sub	r3, r2, r3
     2c8:	sub	r2, r3, #1
     2cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
     2d0:	str	r3, [sp]
     2d4:	mov	r3, r2
     2d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
     2dc:	mov	r1, #0
     2e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     2e4:	bl	0 <coda_mem_data_new>
     2e8:	str	r0, [fp, #-16]
     2ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
     2f0:	bl	0 <coda_type_release>
     2f4:	b	394 <attribute_record_new+0x1bc>
     2f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
     2fc:	ldr	r2, [r3, #20]
     300:	ldr	r3, [fp, #-24]	; 0xffffffe8
     304:	lsl	r3, r3, #2
     308:	add	r3, r2, r3
     30c:	ldr	r3, [r3]
     310:	cmp	r3, #0
     314:	beq	338 <attribute_record_new+0x160>
     318:	movw	r3, #0
     31c:	movt	r3, #0
     320:	mov	r2, #123	; 0x7b
     324:	movw	r1, #0
     328:	movt	r1, #0
     32c:	movw	r0, #0
     330:	movt	r0, #0
     334:	bl	0 <__assert_fail>
     338:	ldr	r3, [fp, #-56]	; 0xffffffc8
     33c:	ldr	r2, [r3, #52]	; 0x34
     340:	ldr	r3, [fp, #-24]	; 0xffffffe8
     344:	lsl	r3, r3, #2
     348:	add	r3, r2, r3
     34c:	ldr	r3, [r3]
     350:	ldr	r4, [r3, #8]
     354:	ldr	r0, [fp, #-64]	; 0xffffffc0
     358:	bl	0 <coda_element_name_from_xml_name>
     35c:	mov	r2, r0
     360:	ldr	r3, [fp, #-64]	; 0xffffffc0
     364:	sub	r3, r2, r3
     368:	sub	r2, r3, #1
     36c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     370:	str	r3, [sp]
     374:	mov	r3, r2
     378:	ldr	r2, [fp, #-60]	; 0xffffffc4
     37c:	mov	r1, #0
     380:	mov	r0, r4
     384:	bl	0 <coda_mem_data_new>
     388:	str	r0, [fp, #-16]
     38c:	mov	r3, #0
     390:	str	r3, [fp, #-20]	; 0xffffffec
     394:	ldr	r3, [fp, #-16]
     398:	cmp	r3, #0
     39c:	bne	3b0 <attribute_record_new+0x1d8>
     3a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     3a4:	bl	0 <coda_dynamic_type_delete>
     3a8:	mov	r3, #0
     3ac:	b	808 <attribute_record_new+0x630>
     3b0:	ldr	r3, [fp, #-20]	; 0xffffffec
     3b4:	ldr	r2, [fp, #-16]
     3b8:	movw	r1, #0
     3bc:	movt	r1, #0
     3c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     3c4:	bl	0 <coda_mem_record_add_field>
     3c8:	mov	r3, r0
     3cc:	cmp	r3, #0
     3d0:	beq	4a4 <attribute_record_new+0x2cc>
     3d4:	ldr	r0, [fp, #-16]
     3d8:	bl	0 <coda_dynamic_type_delete>
     3dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     3e0:	bl	0 <coda_dynamic_type_delete>
     3e4:	mov	r3, #0
     3e8:	b	808 <attribute_record_new+0x630>
     3ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3f0:	cmp	r3, #0
     3f4:	blt	4a4 <attribute_record_new+0x2cc>
     3f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     3fc:	ldr	r2, [r3, #52]	; 0x34
     400:	ldr	r3, [fp, #-24]	; 0xffffffe8
     404:	lsl	r3, r3, #2
     408:	add	r3, r2, r3
     40c:	ldr	r3, [r3]
     410:	ldr	r4, [r3, #8]
     414:	ldr	r0, [fp, #-64]	; 0xffffffc0
     418:	bl	0 <coda_element_name_from_xml_name>
     41c:	mov	r2, r0
     420:	ldr	r3, [fp, #-64]	; 0xffffffc0
     424:	sub	r3, r2, r3
     428:	sub	r2, r3, #1
     42c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     430:	str	r3, [sp]
     434:	mov	r3, r2
     438:	ldr	r2, [fp, #-60]	; 0xffffffc4
     43c:	mov	r1, #0
     440:	mov	r0, r4
     444:	bl	0 <coda_mem_data_new>
     448:	str	r0, [fp, #-16]
     44c:	ldr	r3, [fp, #-16]
     450:	cmp	r3, #0
     454:	bne	468 <attribute_record_new+0x290>
     458:	ldr	r0, [fp, #-36]	; 0xffffffdc
     45c:	bl	0 <coda_dynamic_type_delete>
     460:	mov	r3, #0
     464:	b	808 <attribute_record_new+0x630>
     468:	ldr	r3, [fp, #-20]	; 0xffffffec
     46c:	ldr	r2, [fp, #-16]
     470:	movw	r1, #0
     474:	movt	r1, #0
     478:	ldr	r0, [fp, #-36]	; 0xffffffdc
     47c:	bl	0 <coda_mem_record_add_field>
     480:	mov	r3, r0
     484:	cmp	r3, #0
     488:	beq	4a4 <attribute_record_new+0x2cc>
     48c:	ldr	r0, [fp, #-16]
     490:	bl	0 <coda_dynamic_type_delete>
     494:	ldr	r0, [fp, #-36]	; 0xffffffdc
     498:	bl	0 <coda_dynamic_type_delete>
     49c:	mov	r3, #0
     4a0:	b	808 <attribute_record_new+0x630>
     4a4:	mov	r3, #0
     4a8:	str	r3, [fp, #-28]	; 0xffffffe4
     4ac:	b	708 <attribute_record_new+0x530>
     4b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     4b4:	lsl	r3, r3, #3
     4b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
     4bc:	add	r3, r2, r3
     4c0:	ldr	r3, [r3]
     4c4:	str	r3, [fp, #-32]	; 0xffffffe0
     4c8:	ldr	r3, [fp, #4]
     4cc:	str	r3, [fp, #-20]	; 0xffffffec
     4d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4d4:	ldr	r3, [r3, #44]	; 0x2c
     4d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
     4dc:	mov	r0, r3
     4e0:	bl	0 <coda_hashtable_get_index_from_name>
     4e4:	str	r0, [fp, #-24]	; 0xffffffe8
     4e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4ec:	cmp	r3, #0
     4f0:	bge	530 <attribute_record_new+0x358>
     4f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4f8:	ldr	r4, [r3, #44]	; 0x2c
     4fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     500:	bl	0 <coda_element_name_from_xml_name>
     504:	mov	r3, r0
     508:	mov	r1, r3
     50c:	mov	r0, r4
     510:	bl	0 <coda_hashtable_get_index_from_name>
     514:	str	r0, [fp, #-24]	; 0xffffffe8
     518:	ldr	r3, [fp, #-24]	; 0xffffffe8
     51c:	cmp	r3, #0
     520:	blt	530 <attribute_record_new+0x358>
     524:	ldr	r0, [fp, #-32]	; 0xffffffe0
     528:	bl	0 <coda_element_name_from_xml_name>
     52c:	str	r0, [fp, #-32]	; 0xffffffe0
     530:	ldr	r3, [fp, #4]
     534:	cmp	r3, #0
     538:	beq	618 <attribute_record_new+0x440>
     53c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     540:	cmp	r3, #0
     544:	bge	5a8 <attribute_record_new+0x3d0>
     548:	mov	r0, #2
     54c:	bl	0 <coda_type_text_new>
     550:	str	r0, [fp, #-44]	; 0xffffffd4
     554:	ldr	r3, [fp, #-44]	; 0xffffffd4
     558:	cmp	r3, #0
     55c:	bne	570 <attribute_record_new+0x398>
     560:	ldr	r0, [fp, #-36]	; 0xffffffdc
     564:	bl	0 <coda_dynamic_type_delete>
     568:	mov	r3, #0
     56c:	b	808 <attribute_record_new+0x630>
     570:	ldr	r3, [fp, #-28]	; 0xffffffe4
     574:	lsl	r3, r3, #3
     578:	add	r3, r3, #4
     57c:	ldr	r2, [fp, #-68]	; 0xffffffbc
     580:	add	r3, r2, r3
     584:	ldr	r3, [r3]
     588:	ldr	r2, [fp, #-60]	; 0xffffffc4
     58c:	mov	r1, #0
     590:	ldr	r0, [fp, #-44]	; 0xffffffd4
     594:	bl	0 <coda_mem_string_new>
     598:	str	r0, [fp, #-16]
     59c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     5a0:	bl	0 <coda_type_release>
     5a4:	b	6a4 <attribute_record_new+0x4cc>
     5a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
     5ac:	ldr	r2, [r3, #20]
     5b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5b4:	lsl	r3, r3, #2
     5b8:	add	r3, r2, r3
     5bc:	ldr	r3, [r3]
     5c0:	cmp	r3, #0
     5c4:	bne	6f8 <attribute_record_new+0x520>
     5c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5cc:	ldr	r2, [r3, #52]	; 0x34
     5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5d4:	lsl	r3, r3, #2
     5d8:	add	r3, r2, r3
     5dc:	ldr	r3, [r3]
     5e0:	ldr	r0, [r3, #8]
     5e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     5e8:	lsl	r3, r3, #3
     5ec:	add	r3, r3, #4
     5f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
     5f4:	add	r3, r2, r3
     5f8:	ldr	r3, [r3]
     5fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
     600:	mov	r1, #0
     604:	bl	0 <coda_mem_string_new>
     608:	str	r0, [fp, #-16]
     60c:	mov	r3, #0
     610:	str	r3, [fp, #-20]	; 0xffffffec
     614:	b	6a4 <attribute_record_new+0x4cc>
     618:	ldr	r3, [fp, #-24]	; 0xffffffe8
     61c:	cmn	r3, #1
     620:	bne	660 <attribute_record_new+0x488>
     624:	ldr	r3, [fp, #-28]	; 0xffffffe4
     628:	lsl	r3, r3, #3
     62c:	ldr	r2, [fp, #-68]	; 0xffffffbc
     630:	add	r3, r2, r3
     634:	ldr	r3, [r3]
     638:	mov	r2, r3
     63c:	movw	r1, #0
     640:	movt	r1, #0
     644:	movw	r0, #65236	; 0xfed4
     648:	movt	r0, #65535	; 0xffff
     64c:	bl	0 <coda_set_error>
     650:	ldr	r0, [fp, #-36]	; 0xffffffdc
     654:	bl	0 <coda_dynamic_type_delete>
     658:	mov	r3, #0
     65c:	b	808 <attribute_record_new+0x630>
     660:	ldr	r3, [fp, #-56]	; 0xffffffc8
     664:	ldr	r2, [r3, #52]	; 0x34
     668:	ldr	r3, [fp, #-24]	; 0xffffffe8
     66c:	lsl	r3, r3, #2
     670:	add	r3, r2, r3
     674:	ldr	r3, [r3]
     678:	ldr	r0, [r3, #8]
     67c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     680:	lsl	r3, r3, #3
     684:	add	r3, r3, #4
     688:	ldr	r2, [fp, #-68]	; 0xffffffbc
     68c:	add	r3, r2, r3
     690:	ldr	r3, [r3]
     694:	ldr	r2, [fp, #-60]	; 0xffffffc4
     698:	mov	r1, #0
     69c:	bl	0 <coda_mem_string_new>
     6a0:	str	r0, [fp, #-16]
     6a4:	ldr	r3, [fp, #-16]
     6a8:	cmp	r3, #0
     6ac:	bne	6c0 <attribute_record_new+0x4e8>
     6b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     6b4:	bl	0 <coda_dynamic_type_delete>
     6b8:	mov	r3, #0
     6bc:	b	808 <attribute_record_new+0x630>
     6c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     6c4:	ldr	r2, [fp, #-16]
     6c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
     6cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     6d0:	bl	0 <coda_mem_record_add_field>
     6d4:	mov	r3, r0
     6d8:	cmp	r3, #0
     6dc:	beq	6fc <attribute_record_new+0x524>
     6e0:	ldr	r0, [fp, #-16]
     6e4:	bl	0 <coda_dynamic_type_delete>
     6e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     6ec:	bl	0 <coda_dynamic_type_delete>
     6f0:	mov	r3, #0
     6f4:	b	808 <attribute_record_new+0x630>
     6f8:	nop	{0}
     6fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     700:	add	r3, r3, #1
     704:	str	r3, [fp, #-28]	; 0xffffffe4
     708:	ldr	r3, [fp, #-28]	; 0xffffffe4
     70c:	lsl	r3, r3, #3
     710:	ldr	r2, [fp, #-68]	; 0xffffffbc
     714:	add	r3, r2, r3
     718:	ldr	r3, [r3]
     71c:	cmp	r3, #0
     720:	bne	4b0 <attribute_record_new+0x2d8>
     724:	mov	r3, #0
     728:	str	r3, [fp, #-28]	; 0xffffffe4
     72c:	b	7f0 <attribute_record_new+0x618>
     730:	ldr	r3, [fp, #-56]	; 0xffffffc8
     734:	ldr	r2, [r3, #52]	; 0x34
     738:	ldr	r3, [fp, #-28]	; 0xffffffe4
     73c:	lsl	r3, r3, #2
     740:	add	r3, r2, r3
     744:	ldr	r3, [r3]
     748:	ldrb	r3, [r3, #16]
     74c:	cmp	r3, #0
     750:	bne	7e4 <attribute_record_new+0x60c>
     754:	ldr	r3, [fp, #-36]	; 0xffffffdc
     758:	ldr	r2, [r3, #20]
     75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     760:	lsl	r3, r3, #2
     764:	add	r3, r2, r3
     768:	ldr	r3, [r3]
     76c:	cmp	r3, #0
     770:	bne	7e4 <attribute_record_new+0x60c>
     774:	ldr	r3, [fp, #4]
     778:	cmp	r3, #0
     77c:	beq	7a4 <attribute_record_new+0x5cc>
     780:	ldr	r3, [fp, #-56]	; 0xffffffc8
     784:	ldr	r2, [r3, #52]	; 0x34
     788:	ldr	r3, [fp, #-28]	; 0xffffffe4
     78c:	lsl	r3, r3, #2
     790:	add	r3, r2, r3
     794:	ldr	r3, [r3]
     798:	mov	r2, #1
     79c:	strb	r2, [r3, #16]
     7a0:	b	7e4 <attribute_record_new+0x60c>
     7a4:	sub	r3, fp, #48	; 0x30
     7a8:	mov	r2, r3
     7ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
     7b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
     7b4:	bl	0 <coda_type_get_record_field_real_name>
     7b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     7bc:	mov	r2, r3
     7c0:	movw	r1, #0
     7c4:	movt	r1, #0
     7c8:	movw	r0, #65236	; 0xfed4
     7cc:	movt	r0, #65535	; 0xffff
     7d0:	bl	0 <coda_set_error>
     7d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7d8:	bl	0 <coda_dynamic_type_delete>
     7dc:	mov	r3, #0
     7e0:	b	808 <attribute_record_new+0x630>
     7e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7e8:	add	r3, r3, #1
     7ec:	str	r3, [fp, #-28]	; 0xffffffe4
     7f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7f4:	ldr	r3, [r3, #48]	; 0x30
     7f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
     7fc:	cmp	r2, r3
     800:	blt	730 <attribute_record_new+0x558>
     804:	ldr	r3, [fp, #-36]	; 0xffffffdc
     808:	mov	r0, r3
     80c:	sub	sp, fp, #8
     810:	ldr	r4, [sp]
     814:	ldr	fp, [sp, #4]
     818:	add	sp, sp, #8
     81c:	pop	{pc}		; (ldr pc, [sp], #4)

00000820 <parser_info_cleanup>:
     820:	str	fp, [sp, #-8]!
     824:	str	lr, [sp, #4]
     828:	add	fp, sp, #4
     82c:	sub	sp, sp, #16
     830:	str	r0, [fp, #-16]
     834:	ldr	r3, [fp, #-16]
     838:	ldr	r3, [r3]
     83c:	cmp	r3, #0
     840:	beq	854 <parser_info_cleanup+0x34>
     844:	ldr	r3, [fp, #-16]
     848:	ldr	r3, [r3]
     84c:	mov	r0, r3
     850:	bl	0 <coda_XML_ParserFree>
     854:	mov	r3, #0
     858:	str	r3, [fp, #-8]
     85c:	b	89c <parser_info_cleanup+0x7c>
     860:	ldr	r3, [fp, #-16]
     864:	ldr	r2, [fp, #-8]
     868:	add	r2, r2, #36	; 0x24
     86c:	ldr	r3, [r3, r2, lsl #2]
     870:	cmp	r3, #0
     874:	beq	890 <parser_info_cleanup+0x70>
     878:	ldr	r3, [fp, #-16]
     87c:	ldr	r2, [fp, #-8]
     880:	add	r2, r2, #36	; 0x24
     884:	ldr	r3, [r3, r2, lsl #2]
     888:	mov	r0, r3
     88c:	bl	0 <coda_dynamic_type_delete>
     890:	ldr	r3, [fp, #-8]
     894:	add	r3, r3, #1
     898:	str	r3, [fp, #-8]
     89c:	ldr	r3, [fp, #-16]
     8a0:	ldr	r3, [r3, #12]
     8a4:	ldr	r2, [fp, #-8]
     8a8:	cmp	r2, r3
     8ac:	ble	860 <parser_info_cleanup+0x40>
     8b0:	ldr	r3, [fp, #-16]
     8b4:	ldr	r3, [r3, #528]	; 0x210
     8b8:	cmp	r3, #0
     8bc:	beq	8d0 <parser_info_cleanup+0xb0>
     8c0:	ldr	r3, [fp, #-16]
     8c4:	ldr	r3, [r3, #528]	; 0x210
     8c8:	mov	r0, r3
     8cc:	bl	0 <coda_dynamic_type_delete>
     8d0:	ldr	r3, [fp, #-16]
     8d4:	ldr	r3, [r3, #544]	; 0x220
     8d8:	cmp	r3, #0
     8dc:	beq	8f0 <parser_info_cleanup+0xd0>
     8e0:	ldr	r3, [fp, #-16]
     8e4:	ldr	r3, [r3, #544]	; 0x220
     8e8:	mov	r0, r3
     8ec:	bl	0 <free>
     8f0:	nop	{0}
     8f4:	sub	sp, fp, #4
     8f8:	ldr	fp, [sp]
     8fc:	add	sp, sp, #4
     900:	pop	{pc}		; (ldr pc, [sp], #4)

00000904 <parser_info_init>:
     904:	push	{fp}		; (str fp, [sp, #-4]!)
     908:	add	fp, sp, #0
     90c:	sub	sp, sp, #12
     910:	str	r0, [fp, #-8]
     914:	ldr	r3, [fp, #-8]
     918:	mov	r2, #0
     91c:	str	r2, [r3]
     920:	ldr	r3, [fp, #-8]
     924:	mov	r2, #0
     928:	str	r2, [r3, #4]
     92c:	ldr	r3, [fp, #-8]
     930:	mov	r2, #0
     934:	str	r2, [r3, #8]
     938:	ldr	r3, [fp, #-8]
     93c:	mvn	r2, #0
     940:	str	r2, [r3, #12]
     944:	ldr	r3, [fp, #-8]
     948:	mov	r2, #0
     94c:	str	r2, [r3, #528]	; 0x210
     950:	ldr	r3, [fp, #-8]
     954:	mov	r2, #0
     958:	str	r2, [r3, #532]	; 0x214
     95c:	ldr	r3, [fp, #-8]
     960:	mov	r2, #0
     964:	str	r2, [r3, #536]	; 0x218
     968:	ldr	r3, [fp, #-8]
     96c:	mov	r2, #0
     970:	str	r2, [r3, #540]	; 0x21c
     974:	ldr	r3, [fp, #-8]
     978:	mov	r2, #0
     97c:	str	r2, [r3, #544]	; 0x220
     980:	nop	{0}
     984:	add	sp, fp, #0
     988:	pop	{fp}		; (ldr fp, [sp], #4)
     98c:	bx	lr

00000990 <abort_parser>:
     990:	str	fp, [sp, #-8]!
     994:	str	lr, [sp, #4]
     998:	add	fp, sp, #4
     99c:	sub	sp, sp, #8
     9a0:	str	r0, [fp, #-8]
     9a4:	ldr	r3, [fp, #-8]
     9a8:	ldr	r3, [r3]
     9ac:	mov	r1, #0
     9b0:	mov	r0, r3
     9b4:	bl	0 <coda_XML_StopParser>
     9b8:	ldr	r3, [fp, #-8]
     9bc:	mov	r2, #1
     9c0:	str	r2, [r3, #4]
     9c4:	nop	{0}
     9c8:	sub	sp, fp, #4
     9cc:	ldr	fp, [sp]
     9d0:	add	sp, sp, #4
     9d4:	pop	{pc}		; (ldr pc, [sp], #4)

000009d8 <not_standalone_handler>:
     9d8:	push	{fp}		; (str fp, [sp, #-4]!)
     9dc:	add	fp, sp, #0
     9e0:	sub	sp, sp, #12
     9e4:	str	r0, [fp, #-8]
     9e8:	mov	r3, #0
     9ec:	mov	r0, r3
     9f0:	add	sp, fp, #0
     9f4:	pop	{fp}		; (ldr fp, [sp], #4)
     9f8:	bx	lr

000009fc <start_element_handler>:
     9fc:	str	r4, [sp, #-12]!
     a00:	str	fp, [sp, #4]
     a04:	str	lr, [sp, #8]
     a08:	add	fp, sp, #8
     a0c:	sub	sp, sp, #60	; 0x3c
     a10:	str	r0, [fp, #-48]	; 0xffffffd0
     a14:	str	r1, [fp, #-52]	; 0xffffffcc
     a18:	str	r2, [fp, #-56]	; 0xffffffc8
     a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a20:	str	r3, [fp, #-28]	; 0xffffffe4
     a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a28:	ldr	r2, [r3, #12]
     a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a30:	add	r2, r2, #36	; 0x24
     a34:	ldr	r3, [r3, r2, lsl #2]
     a38:	cmp	r3, #0
     a3c:	beq	ac4 <start_element_handler+0xc8>
     a40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a44:	ldr	r2, [r3, #12]
     a48:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a4c:	add	r2, r2, #36	; 0x24
     a50:	ldr	r3, [r3, r2, lsl #2]
     a54:	ldr	r3, [r3, #4]
     a58:	ldr	r3, [r3]
     a5c:	cmp	r3, #2
     a60:	beq	afc <start_element_handler+0x100>
     a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a68:	ldr	r2, [r3, #12]
     a6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a70:	add	r2, r2, #100	; 0x64
     a74:	ldr	r4, [r3, r2, lsl #2]
     a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a7c:	ldr	r2, [r3, #12]
     a80:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a84:	add	r2, r2, #36	; 0x24
     a88:	ldr	r3, [r3, r2, lsl #2]
     a8c:	ldr	r3, [r3, #4]
     a90:	ldr	r3, [r3]
     a94:	mov	r0, r3
     a98:	bl	0 <coda_type_get_format_name>
     a9c:	mov	r3, r0
     aa0:	mov	r2, r4
     aa4:	movw	r1, #0
     aa8:	movt	r1, #0
     aac:	movw	r0, #65236	; 0xfed4
     ab0:	movt	r0, #65535	; 0xffff
     ab4:	bl	0 <coda_set_error>
     ab8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     abc:	bl	990 <abort_parser>
     ac0:	b	13b4 <start_element_handler+0x9b8>
     ac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ac8:	ldr	r2, [r3, #12]
     acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ad0:	add	r2, r2, #100	; 0x64
     ad4:	ldr	r3, [r3, r2, lsl #2]
     ad8:	mov	r2, r3
     adc:	movw	r1, #0
     ae0:	movt	r1, #0
     ae4:	movw	r0, #65236	; 0xfed4
     ae8:	movt	r0, #65535	; 0xffff
     aec:	bl	0 <coda_set_error>
     af0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     af4:	bl	990 <abort_parser>
     af8:	b	13b4 <start_element_handler+0x9b8>
     afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b00:	mov	r2, #0
     b04:	str	r2, [r3, #536]	; 0x218
     b08:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b0c:	ldr	r3, [r3, #12]
     b10:	add	r2, r3, #1
     b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b18:	str	r2, [r3, #12]
     b1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b20:	ldr	r3, [r3, #12]
     b24:	cmp	r3, #31
     b28:	ble	b50 <start_element_handler+0x154>
     b2c:	mov	r2, #32
     b30:	movw	r1, #0
     b34:	movt	r1, #0
     b38:	movw	r0, #65236	; 0xfed4
     b3c:	movt	r0, #65535	; 0xffff
     b40:	bl	0 <coda_set_error>
     b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
     b48:	bl	990 <abort_parser>
     b4c:	b	13b4 <start_element_handler+0x9b8>
     b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b54:	ldr	r2, [r3, #12]
     b58:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b5c:	add	r2, r2, #36	; 0x24
     b60:	mov	r1, #0
     b64:	str	r1, [r3, r2, lsl #2]
     b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b6c:	ldr	r3, [r3, #12]
     b70:	sub	r2, r3, #1
     b74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b78:	add	r2, r2, #36	; 0x24
     b7c:	ldr	r3, [r3, r2, lsl #2]
     b80:	str	r3, [fp, #-44]	; 0xffffffd4
     b84:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b88:	ldr	r3, [r3, #4]
     b8c:	ldr	r3, [r3, #44]	; 0x2c
     b90:	ldr	r1, [fp, #-52]	; 0xffffffcc
     b94:	mov	r0, r3
     b98:	bl	0 <coda_hashtable_get_index_from_name>
     b9c:	str	r0, [fp, #-20]	; 0xffffffec
     ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
     ba4:	cmp	r3, #0
     ba8:	bge	bd4 <start_element_handler+0x1d8>
     bac:	ldr	r3, [fp, #-44]	; 0xffffffd4
     bb0:	ldr	r3, [r3, #4]
     bb4:	ldr	r4, [r3, #44]	; 0x2c
     bb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
     bbc:	bl	0 <coda_element_name_from_xml_name>
     bc0:	mov	r3, r0
     bc4:	mov	r1, r3
     bc8:	mov	r0, r4
     bcc:	bl	0 <coda_hashtable_get_index_from_name>
     bd0:	str	r0, [fp, #-20]	; 0xffffffec
     bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
     bd8:	cmp	r3, #0
     bdc:	bge	d78 <start_element_handler+0x37c>
     be0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     be4:	ldr	r3, [r3, #532]	; 0x214
     be8:	cmp	r3, #0
     bec:	beq	d10 <start_element_handler+0x314>
     bf0:	mov	r0, #2
     bf4:	bl	0 <coda_type_record_new>
     bf8:	str	r0, [fp, #-16]
     bfc:	ldr	r3, [fp, #-16]
     c00:	cmp	r3, #0
     c04:	bne	c14 <start_element_handler+0x218>
     c08:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c0c:	bl	990 <abort_parser>
     c10:	b	13b4 <start_element_handler+0x9b8>
     c14:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c18:	ldr	r3, [r3, #4]
     c1c:	ldr	r2, [fp, #-16]
     c20:	ldr	r1, [fp, #-52]	; 0xffffffcc
     c24:	mov	r0, r3
     c28:	bl	0 <coda_type_record_create_field>
     c2c:	mov	r3, r0
     c30:	cmp	r3, #0
     c34:	beq	c4c <start_element_handler+0x250>
     c38:	ldr	r0, [fp, #-16]
     c3c:	bl	0 <coda_type_release>
     c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c44:	bl	990 <abort_parser>
     c48:	b	13b4 <start_element_handler+0x9b8>
     c4c:	ldr	r0, [fp, #-16]
     c50:	bl	0 <coda_type_release>
     c54:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c58:	ldr	r2, [r3, #4]
     c5c:	sub	r3, fp, #44	; 0x2c
     c60:	mov	r1, r2
     c64:	mov	r0, r3
     c68:	bl	0 <coda_mem_type_update>
     c6c:	mov	r3, r0
     c70:	cmp	r3, #0
     c74:	beq	c84 <start_element_handler+0x288>
     c78:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c7c:	bl	990 <abort_parser>
     c80:	b	13b4 <start_element_handler+0x9b8>
     c84:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c88:	ldr	r3, [r3, #12]
     c8c:	sub	r2, r3, #1
     c90:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c94:	add	r2, r2, #36	; 0x24
     c98:	ldr	r2, [r3, r2, lsl #2]
     c9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ca0:	cmp	r2, r3
     ca4:	beq	cc8 <start_element_handler+0x2cc>
     ca8:	movw	r3, #0
     cac:	movt	r3, #0
     cb0:	movw	r2, #394	; 0x18a
     cb4:	movw	r1, #0
     cb8:	movt	r1, #0
     cbc:	movw	r0, #0
     cc0:	movt	r0, #0
     cc4:	bl	0 <__assert_fail>
     cc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ccc:	ldr	r3, [r3, #4]
     cd0:	ldr	r3, [r3, #44]	; 0x2c
     cd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
     cd8:	mov	r0, r3
     cdc:	bl	0 <coda_hashtable_get_index_from_name>
     ce0:	str	r0, [fp, #-20]	; 0xffffffec
     ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ce8:	cmp	r3, #0
     cec:	bge	d78 <start_element_handler+0x37c>
     cf0:	movw	r3, #0
     cf4:	movt	r3, #0
     cf8:	mov	r2, #396	; 0x18c
     cfc:	movw	r1, #0
     d00:	movt	r1, #0
     d04:	movw	r0, #0
     d08:	movt	r0, #0
     d0c:	bl	0 <__assert_fail>
     d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d14:	ldr	r3, [r3, #12]
     d18:	cmp	r3, #1
     d1c:	bne	d3c <start_element_handler+0x340>
     d20:	ldr	r2, [fp, #-52]	; 0xffffffcc
     d24:	movw	r1, #0
     d28:	movt	r1, #0
     d2c:	movw	r0, #65236	; 0xfed4
     d30:	movt	r0, #65535	; 0xffff
     d34:	bl	0 <coda_set_error>
     d38:	b	d6c <start_element_handler+0x370>
     d3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d40:	ldr	r3, [r3, #12]
     d44:	sub	r2, r3, #1
     d48:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d4c:	add	r2, r2, #100	; 0x64
     d50:	ldr	r3, [r3, r2, lsl #2]
     d54:	ldr	r2, [fp, #-52]	; 0xffffffcc
     d58:	movw	r1, #0
     d5c:	movt	r1, #0
     d60:	movw	r0, #65236	; 0xfed4
     d64:	movt	r0, #65535	; 0xffff
     d68:	bl	0 <coda_set_error>
     d6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d70:	bl	990 <abort_parser>
     d74:	b	13b4 <start_element_handler+0x9b8>
     d78:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d7c:	ldr	r2, [r3, #12]
     d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d84:	add	r2, r2, #68	; 0x44
     d88:	ldr	r1, [fp, #-20]	; 0xffffffec
     d8c:	str	r1, [r3, r2, lsl #2]
     d90:	ldr	r3, [fp, #-44]	; 0xffffffd4
     d94:	ldr	r3, [r3, #4]
     d98:	ldr	r2, [r3, #52]	; 0x34
     d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
     da0:	lsl	r3, r3, #2
     da4:	add	r3, r2, r3
     da8:	ldr	r3, [r3]
     dac:	ldr	r2, [fp, #-28]	; 0xffffffe4
     db0:	ldr	r2, [r2, #12]
     db4:	add	r1, r3, #8
     db8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dbc:	add	r2, r2, #4
     dc0:	str	r1, [r3, r2, lsl #2]
     dc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     dc8:	ldr	r0, [r3, #4]
     dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dd0:	ldr	r3, [r3, #12]
     dd4:	add	r3, r3, #100	; 0x64
     dd8:	lsl	r3, r3, #2
     ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     de0:	add	r3, r2, r3
     de4:	mov	r2, r3
     de8:	ldr	r1, [fp, #-20]	; 0xffffffec
     dec:	bl	0 <coda_type_get_record_field_real_name>
     df0:	mov	r3, r0
     df4:	cmp	r3, #0
     df8:	beq	e08 <start_element_handler+0x40c>
     dfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e00:	bl	990 <abort_parser>
     e04:	b	13b4 <start_element_handler+0x9b8>
     e08:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e0c:	ldr	r2, [r3, #12]
     e10:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e14:	add	r2, r2, #4
     e18:	ldr	r3, [r3, r2, lsl #2]
     e1c:	ldr	r3, [r3]
     e20:	str	r3, [fp, #-16]
     e24:	ldr	r3, [fp, #-16]
     e28:	ldr	r3, [r3, #8]
     e2c:	cmp	r3, #1
     e30:	bne	ef4 <start_element_handler+0x4f8>
     e34:	ldr	r3, [fp, #-16]
     e38:	ldr	r3, [r3]
     e3c:	cmp	r3, #2
     e40:	bne	10b4 <start_element_handler+0x6b8>
     e44:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e48:	ldr	r2, [r3, #20]
     e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
     e50:	lsl	r3, r3, #2
     e54:	add	r3, r2, r3
     e58:	ldr	r3, [r3]
     e5c:	cmp	r3, #0
     e60:	bne	eb8 <start_element_handler+0x4bc>
     e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e68:	ldr	r2, [r3, #20]
     e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
     e70:	lsl	r3, r3, #2
     e74:	add	r4, r2, r3
     e78:	mov	r1, #0
     e7c:	ldr	r0, [fp, #-16]
     e80:	bl	0 <coda_mem_array_new>
     e84:	mov	r3, r0
     e88:	str	r3, [r4]
     e8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e90:	ldr	r2, [r3, #20]
     e94:	ldr	r3, [fp, #-20]	; 0xffffffec
     e98:	lsl	r3, r3, #2
     e9c:	add	r3, r2, r3
     ea0:	ldr	r3, [r3]
     ea4:	cmp	r3, #0
     ea8:	bne	eb8 <start_element_handler+0x4bc>
     eac:	ldr	r0, [fp, #-28]	; 0xffffffe4
     eb0:	bl	990 <abort_parser>
     eb4:	b	13b4 <start_element_handler+0x9b8>
     eb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ebc:	ldr	r2, [r3, #12]
     ec0:	ldr	r3, [fp, #-16]
     ec4:	add	r1, r3, #40	; 0x28
     ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ecc:	add	r2, r2, #4
     ed0:	str	r1, [r3, r2, lsl #2]
     ed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ed8:	ldr	r2, [r3, #12]
     edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ee0:	add	r2, r2, #4
     ee4:	ldr	r3, [r3, r2, lsl #2]
     ee8:	ldr	r3, [r3]
     eec:	str	r3, [fp, #-16]
     ef0:	b	10b4 <start_element_handler+0x6b8>
     ef4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ef8:	ldr	r2, [r3, #20]
     efc:	ldr	r3, [fp, #-20]	; 0xffffffec
     f00:	lsl	r3, r3, #2
     f04:	add	r3, r2, r3
     f08:	ldr	r3, [r3]
     f0c:	cmp	r3, #0
     f10:	beq	10b4 <start_element_handler+0x6b8>
     f14:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f18:	ldr	r3, [r3, #532]	; 0x214
     f1c:	cmp	r3, #0
     f20:	beq	1078 <start_element_handler+0x67c>
     f24:	mov	r0, #2
     f28:	bl	0 <coda_type_array_new>
     f2c:	str	r0, [fp, #-32]	; 0xffffffe0
     f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f34:	cmp	r3, #0
     f38:	bne	f48 <start_element_handler+0x54c>
     f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f40:	bl	990 <abort_parser>
     f44:	b	13b4 <start_element_handler+0x9b8>
     f48:	ldr	r1, [fp, #-16]
     f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f50:	bl	0 <coda_type_array_set_base_type>
     f54:	mov	r3, r0
     f58:	cmp	r3, #0
     f5c:	beq	f74 <start_element_handler+0x578>
     f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f64:	bl	0 <coda_type_release>
     f68:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f6c:	bl	990 <abort_parser>
     f70:	b	13b4 <start_element_handler+0x9b8>
     f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f78:	ldr	r2, [r3, #12]
     f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f80:	add	r2, r2, #4
     f84:	ldr	r3, [r3, r2, lsl #2]
     f88:	ldr	r2, [fp, #-32]	; 0xffffffe0
     f8c:	str	r2, [r3]
     f90:	ldr	r0, [fp, #-16]
     f94:	bl	0 <coda_type_release>
     f98:	mov	r1, #0
     f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fa0:	bl	0 <coda_type_array_add_variable_dimension>
     fa4:	mov	r3, r0
     fa8:	cmp	r3, #0
     fac:	beq	fbc <start_element_handler+0x5c0>
     fb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     fb4:	bl	990 <abort_parser>
     fb8:	b	13b4 <start_element_handler+0x9b8>
     fbc:	mov	r1, #0
     fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fc4:	bl	0 <coda_mem_array_new>
     fc8:	str	r0, [fp, #-36]	; 0xffffffdc
     fcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fd0:	cmp	r3, #0
     fd4:	bne	fe4 <start_element_handler+0x5e8>
     fd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     fdc:	bl	990 <abort_parser>
     fe0:	b	13b4 <start_element_handler+0x9b8>
     fe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     fe8:	ldr	r2, [r3, #20]
     fec:	ldr	r3, [fp, #-20]	; 0xffffffec
     ff0:	lsl	r3, r3, #2
     ff4:	add	r3, r2, r3
     ff8:	ldr	r3, [r3]
     ffc:	mov	r1, r3
    1000:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1004:	bl	0 <coda_mem_array_add_element>
    1008:	mov	r3, r0
    100c:	cmp	r3, #0
    1010:	beq	1020 <start_element_handler+0x624>
    1014:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1018:	bl	990 <abort_parser>
    101c:	b	13b4 <start_element_handler+0x9b8>
    1020:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1024:	ldr	r2, [r3, #20]
    1028:	ldr	r3, [fp, #-20]	; 0xffffffec
    102c:	lsl	r3, r3, #2
    1030:	add	r3, r2, r3
    1034:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1038:	str	r2, [r3]
    103c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1040:	ldr	r2, [r3, #12]
    1044:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1048:	add	r1, r3, #40	; 0x28
    104c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1050:	add	r2, r2, #4
    1054:	str	r1, [r3, r2, lsl #2]
    1058:	ldr	r3, [fp, #-28]	; 0xffffffe4
    105c:	ldr	r2, [r3, #12]
    1060:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1064:	add	r2, r2, #4
    1068:	ldr	r3, [r3, r2, lsl #2]
    106c:	ldr	r3, [r3]
    1070:	str	r3, [fp, #-16]
    1074:	b	10b4 <start_element_handler+0x6b8>
    1078:	ldr	r3, [fp, #-28]	; 0xffffffe4
    107c:	ldr	r3, [r3, #12]
    1080:	sub	r2, r3, #1
    1084:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1088:	add	r2, r2, #100	; 0x64
    108c:	ldr	r3, [r3, r2, lsl #2]
    1090:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1094:	movw	r1, #0
    1098:	movt	r1, #0
    109c:	movw	r0, #65236	; 0xfed4
    10a0:	movt	r0, #65535	; 0xffff
    10a4:	bl	0 <coda_set_error>
    10a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10ac:	bl	990 <abort_parser>
    10b0:	b	13b4 <start_element_handler+0x9b8>
    10b4:	ldr	r3, [fp, #-16]
    10b8:	ldr	r3, [r3, #36]	; 0x24
    10bc:	cmp	r3, #0
    10c0:	bne	11c4 <start_element_handler+0x7c8>
    10c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10c8:	mov	r2, #0
    10cc:	str	r2, [r3, #528]	; 0x210
    10d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10d4:	ldr	r3, [r3, #532]	; 0x214
    10d8:	cmp	r3, #0
    10dc:	beq	1188 <start_element_handler+0x78c>
    10e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10e4:	ldr	r3, [r3]
    10e8:	cmp	r3, #0
    10ec:	bne	1108 <start_element_handler+0x70c>
    10f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    10f4:	bl	0 <coda_element_name_from_xml_name>
    10f8:	mov	r2, r0
    10fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1100:	cmp	r3, r2
    1104:	beq	1214 <start_element_handler+0x818>
    1108:	mov	r0, #2
    110c:	bl	0 <coda_type_record_new>
    1110:	mov	r2, r0
    1114:	ldr	r3, [fp, #-16]
    1118:	str	r2, [r3, #36]	; 0x24
    111c:	ldr	r3, [fp, #-16]
    1120:	ldr	r3, [r3, #36]	; 0x24
    1124:	cmp	r3, #0
    1128:	bne	1138 <start_element_handler+0x73c>
    112c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1130:	bl	990 <abort_parser>
    1134:	b	13b4 <start_element_handler+0x9b8>
    1138:	ldr	r3, [fp, #-16]
    113c:	ldr	r0, [r3, #36]	; 0x24
    1140:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1144:	ldr	r1, [r3, #8]
    1148:	ldr	r3, [fp, #-28]	; 0xffffffe4
    114c:	ldr	r3, [r3, #532]	; 0x214
    1150:	str	r3, [sp]
    1154:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1158:	ldr	r2, [fp, #-52]	; 0xffffffcc
    115c:	bl	1d8 <attribute_record_new>
    1160:	mov	r2, r0
    1164:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1168:	str	r2, [r3, #528]	; 0x210
    116c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1170:	ldr	r3, [r3, #528]	; 0x210
    1174:	cmp	r3, #0
    1178:	bne	1214 <start_element_handler+0x818>
    117c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1180:	bl	990 <abort_parser>
    1184:	b	13b4 <start_element_handler+0x9b8>
    1188:	ldr	r3, [fp, #-56]	; 0xffffffc8
    118c:	ldr	r3, [r3]
    1190:	cmp	r3, #0
    1194:	beq	1214 <start_element_handler+0x818>
    1198:	ldr	r3, [fp, #-56]	; 0xffffffc8
    119c:	ldr	r3, [r3]
    11a0:	mov	r2, r3
    11a4:	movw	r1, #0
    11a8:	movt	r1, #0
    11ac:	movw	r0, #65236	; 0xfed4
    11b0:	movt	r0, #65535	; 0xffff
    11b4:	bl	0 <coda_set_error>
    11b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11bc:	bl	990 <abort_parser>
    11c0:	b	13b4 <start_element_handler+0x9b8>
    11c4:	ldr	r3, [fp, #-16]
    11c8:	ldr	r0, [r3, #36]	; 0x24
    11cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11d0:	ldr	r1, [r3, #8]
    11d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11d8:	ldr	r3, [r3, #532]	; 0x214
    11dc:	str	r3, [sp]
    11e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    11e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    11e8:	bl	1d8 <attribute_record_new>
    11ec:	mov	r2, r0
    11f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11f4:	str	r2, [r3, #528]	; 0x210
    11f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11fc:	ldr	r3, [r3, #528]	; 0x210
    1200:	cmp	r3, #0
    1204:	bne	1214 <start_element_handler+0x818>
    1208:	ldr	r0, [fp, #-28]	; 0xffffffe4
    120c:	bl	990 <abort_parser>
    1210:	b	13b4 <start_element_handler+0x9b8>
    1214:	ldr	r3, [fp, #-16]
    1218:	ldr	r3, [r3]
    121c:	cmp	r3, #2
    1220:	bne	13b4 <start_element_handler+0x9b8>
    1224:	ldr	r3, [fp, #-16]
    1228:	ldr	r3, [r3, #8]
    122c:	cmp	r3, #0
    1230:	bne	13b4 <start_element_handler+0x9b8>
    1234:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1238:	ldr	r2, [r3, #528]	; 0x210
    123c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1240:	ldr	r4, [r3, #12]
    1244:	mov	r1, r2
    1248:	ldr	r0, [fp, #-16]
    124c:	bl	0 <coda_mem_record_new>
    1250:	mov	r1, r0
    1254:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1258:	add	r2, r4, #36	; 0x24
    125c:	str	r1, [r3, r2, lsl #2]
    1260:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1264:	ldr	r2, [r3, #12]
    1268:	ldr	r3, [fp, #-28]	; 0xffffffe4
    126c:	add	r2, r2, #36	; 0x24
    1270:	ldr	r3, [r3, r2, lsl #2]
    1274:	cmp	r3, #0
    1278:	bne	1288 <start_element_handler+0x88c>
    127c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1280:	bl	990 <abort_parser>
    1284:	b	13b4 <start_element_handler+0x9b8>
    1288:	mov	r3, #0
    128c:	str	r3, [fp, #-24]	; 0xffffffe8
    1290:	b	1384 <start_element_handler+0x988>
    1294:	ldr	r3, [fp, #-16]
    1298:	ldr	r2, [r3, #52]	; 0x34
    129c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12a0:	lsl	r3, r3, #2
    12a4:	add	r3, r2, r3
    12a8:	ldr	r3, [r3]
    12ac:	ldr	r3, [r3, #8]
    12b0:	ldr	r3, [r3, #8]
    12b4:	cmp	r3, #1
    12b8:	bne	1378 <start_element_handler+0x97c>
    12bc:	ldr	r3, [fp, #-16]
    12c0:	ldr	r2, [r3, #52]	; 0x34
    12c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12c8:	lsl	r3, r3, #2
    12cc:	add	r3, r2, r3
    12d0:	ldr	r3, [r3]
    12d4:	ldr	r3, [r3, #8]
    12d8:	ldr	r3, [r3]
    12dc:	cmp	r3, #2
    12e0:	bne	1378 <start_element_handler+0x97c>
    12e4:	ldr	r3, [fp, #-16]
    12e8:	ldr	r2, [r3, #52]	; 0x34
    12ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12f0:	lsl	r3, r3, #2
    12f4:	add	r3, r2, r3
    12f8:	ldr	r3, [r3]
    12fc:	ldr	r3, [r3, #8]
    1300:	str	r3, [fp, #-40]	; 0xffffffd8
    1304:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1308:	ldr	r2, [r3, #12]
    130c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1310:	add	r2, r2, #36	; 0x24
    1314:	ldr	r3, [r3, r2, lsl #2]
    1318:	ldr	r2, [r3, #20]
    131c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1320:	lsl	r3, r3, #2
    1324:	add	r4, r2, r3
    1328:	mov	r1, #0
    132c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1330:	bl	0 <coda_mem_array_new>
    1334:	mov	r3, r0
    1338:	str	r3, [r4]
    133c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1340:	ldr	r2, [r3, #12]
    1344:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1348:	add	r2, r2, #36	; 0x24
    134c:	ldr	r3, [r3, r2, lsl #2]
    1350:	ldr	r2, [r3, #20]
    1354:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1358:	lsl	r3, r3, #2
    135c:	add	r3, r2, r3
    1360:	ldr	r3, [r3]
    1364:	cmp	r3, #0
    1368:	bne	1378 <start_element_handler+0x97c>
    136c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1370:	bl	990 <abort_parser>
    1374:	b	13b4 <start_element_handler+0x9b8>
    1378:	ldr	r3, [fp, #-24]	; 0xffffffe8
    137c:	add	r3, r3, #1
    1380:	str	r3, [fp, #-24]	; 0xffffffe8
    1384:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1388:	ldr	r2, [r3, #12]
    138c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1390:	add	r2, r2, #36	; 0x24
    1394:	ldr	r3, [r3, r2, lsl #2]
    1398:	ldr	r3, [r3, #16]
    139c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    13a0:	cmp	r2, r3
    13a4:	blt	1294 <start_element_handler+0x898>
    13a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    13ac:	mov	r2, #0
    13b0:	str	r2, [r3, #528]	; 0x210
    13b4:	sub	sp, fp, #8
    13b8:	ldr	r4, [sp]
    13bc:	ldr	fp, [sp, #4]
    13c0:	add	sp, sp, #8
    13c4:	pop	{pc}		; (ldr pc, [sp], #4)

000013c8 <end_element_handler>:
    13c8:	str	fp, [sp, #-8]!
    13cc:	str	lr, [sp, #4]
    13d0:	add	fp, sp, #4
    13d4:	sub	sp, sp, #48	; 0x30
    13d8:	str	r0, [fp, #-40]	; 0xffffffd8
    13dc:	str	r1, [fp, #-44]	; 0xffffffd4
    13e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    13e4:	str	r3, [fp, #-16]
    13e8:	ldr	r3, [fp, #-16]
    13ec:	ldr	r3, [r3, #4]
    13f0:	cmp	r3, #0
    13f4:	bne	1980 <end_element_handler+0x5b8>
    13f8:	ldr	r3, [fp, #-16]
    13fc:	ldr	r2, [r3, #12]
    1400:	ldr	r3, [fp, #-16]
    1404:	add	r2, r2, #36	; 0x24
    1408:	ldr	r3, [r3, r2, lsl #2]
    140c:	cmp	r3, #0
    1410:	beq	157c <end_element_handler+0x1b4>
    1414:	ldr	r3, [fp, #-16]
    1418:	ldr	r3, [r3, #536]	; 0x218
    141c:	cmp	r3, #0
    1420:	ble	157c <end_element_handler+0x1b4>
    1424:	ldr	r3, [fp, #-16]
    1428:	ldr	r2, [r3, #544]	; 0x220
    142c:	ldr	r3, [fp, #-16]
    1430:	ldr	r3, [r3, #536]	; 0x218
    1434:	mov	r1, r3
    1438:	mov	r0, r2
    143c:	bl	0 <is_whitespace>
    1440:	mov	r3, r0
    1444:	cmp	r3, #0
    1448:	bne	157c <end_element_handler+0x1b4>
    144c:	ldr	r3, [fp, #-16]
    1450:	ldr	r3, [r3, #532]	; 0x214
    1454:	cmp	r3, #0
    1458:	bne	147c <end_element_handler+0xb4>
    145c:	movw	r3, #0
    1460:	movt	r3, #0
    1464:	movw	r2, #590	; 0x24e
    1468:	movw	r1, #0
    146c:	movt	r1, #0
    1470:	movw	r0, #0
    1474:	movt	r0, #0
    1478:	bl	0 <__assert_fail>
    147c:	ldr	r3, [fp, #-16]
    1480:	ldr	r2, [r3, #12]
    1484:	ldr	r3, [fp, #-16]
    1488:	add	r2, r2, #36	; 0x24
    148c:	ldr	r3, [r3, r2, lsl #2]
    1490:	ldr	r3, [r3, #4]
    1494:	ldr	r3, [r3, #48]	; 0x30
    1498:	cmp	r3, #0
    149c:	ble	14d8 <end_element_handler+0x110>
    14a0:	ldr	r3, [fp, #-16]
    14a4:	ldr	r2, [r3, #12]
    14a8:	ldr	r3, [fp, #-16]
    14ac:	add	r2, r2, #100	; 0x64
    14b0:	ldr	r3, [r3, r2, lsl #2]
    14b4:	mov	r2, r3
    14b8:	movw	r1, #0
    14bc:	movt	r1, #0
    14c0:	movw	r0, #65236	; 0xfed4
    14c4:	movt	r0, #65535	; 0xffff
    14c8:	bl	0 <coda_set_error>
    14cc:	ldr	r0, [fp, #-16]
    14d0:	bl	990 <abort_parser>
    14d4:	b	1984 <end_element_handler+0x5bc>
    14d8:	ldr	r3, [fp, #-16]
    14dc:	ldr	r2, [r3, #12]
    14e0:	ldr	r3, [fp, #-16]
    14e4:	add	r2, r2, #36	; 0x24
    14e8:	ldr	r3, [r3, r2, lsl #2]
    14ec:	ldr	r2, [r3, #12]
    14f0:	ldr	r3, [fp, #-16]
    14f4:	str	r2, [r3, #528]	; 0x210
    14f8:	ldr	r3, [fp, #-16]
    14fc:	ldr	r2, [r3, #12]
    1500:	ldr	r3, [fp, #-16]
    1504:	add	r2, r2, #36	; 0x24
    1508:	ldr	r3, [r3, r2, lsl #2]
    150c:	mov	r2, #0
    1510:	str	r2, [r3, #12]
    1514:	ldr	r3, [fp, #-16]
    1518:	ldr	r2, [r3, #12]
    151c:	ldr	r3, [fp, #-16]
    1520:	add	r2, r2, #4
    1524:	ldr	r3, [r3, r2, lsl #2]
    1528:	mov	r0, r3
    152c:	bl	ec <convert_to_text>
    1530:	mov	r3, r0
    1534:	cmp	r3, #0
    1538:	beq	1548 <end_element_handler+0x180>
    153c:	ldr	r0, [fp, #-16]
    1540:	bl	990 <abort_parser>
    1544:	b	1984 <end_element_handler+0x5bc>
    1548:	ldr	r3, [fp, #-16]
    154c:	ldr	r2, [r3, #12]
    1550:	ldr	r3, [fp, #-16]
    1554:	add	r2, r2, #36	; 0x24
    1558:	ldr	r3, [r3, r2, lsl #2]
    155c:	mov	r0, r3
    1560:	bl	0 <coda_dynamic_type_delete>
    1564:	ldr	r3, [fp, #-16]
    1568:	ldr	r2, [r3, #12]
    156c:	ldr	r3, [fp, #-16]
    1570:	add	r2, r2, #36	; 0x24
    1574:	mov	r1, #0
    1578:	str	r1, [r3, r2, lsl #2]
    157c:	ldr	r3, [fp, #-16]
    1580:	ldr	r2, [r3, #12]
    1584:	ldr	r3, [fp, #-16]
    1588:	add	r2, r2, #36	; 0x24
    158c:	ldr	r3, [r3, r2, lsl #2]
    1590:	cmp	r3, #0
    1594:	bne	16d8 <end_element_handler+0x310>
    1598:	ldr	r3, [fp, #-16]
    159c:	ldr	r2, [r3, #12]
    15a0:	ldr	r3, [fp, #-16]
    15a4:	add	r2, r2, #4
    15a8:	ldr	r3, [r3, r2, lsl #2]
    15ac:	ldr	r3, [r3]
    15b0:	str	r3, [fp, #-20]	; 0xffffffec
    15b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    15b8:	ldr	r3, [r3, #8]
    15bc:	cmp	r3, #6
    15c0:	bne	167c <end_element_handler+0x2b4>
    15c4:	ldr	r3, [fp, #-16]
    15c8:	ldr	r3, [r3, #532]	; 0x214
    15cc:	cmp	r3, #0
    15d0:	beq	15f4 <end_element_handler+0x22c>
    15d4:	movw	r3, #0
    15d8:	movt	r3, #0
    15dc:	movw	r2, #619	; 0x26b
    15e0:	movw	r1, #0
    15e4:	movt	r1, #0
    15e8:	movw	r0, #0
    15ec:	movt	r0, #0
    15f0:	bl	0 <__assert_fail>
    15f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    15f8:	ldr	r0, [r3, #44]	; 0x2c
    15fc:	ldr	r3, [fp, #-16]
    1600:	ldr	r2, [r3, #8]
    1604:	ldr	r3, [fp, #-16]
    1608:	ldr	r1, [r3, #536]	; 0x218
    160c:	ldr	r3, [fp, #-16]
    1610:	ldr	r3, [r3, #544]	; 0x220
    1614:	str	r3, [sp]
    1618:	mov	r3, r1
    161c:	mov	r1, #0
    1620:	bl	0 <coda_mem_data_new>
    1624:	str	r0, [fp, #-24]	; 0xffffffe8
    1628:	ldr	r3, [fp, #-24]	; 0xffffffe8
    162c:	cmp	r3, #0
    1630:	bne	1640 <end_element_handler+0x278>
    1634:	ldr	r0, [fp, #-16]
    1638:	bl	990 <abort_parser>
    163c:	b	1984 <end_element_handler+0x5bc>
    1640:	ldr	r3, [fp, #-16]
    1644:	ldr	r3, [r3, #528]	; 0x210
    1648:	ldr	r2, [fp, #-24]	; 0xffffffe8
    164c:	mov	r1, r3
    1650:	ldr	r0, [fp, #-20]	; 0xffffffec
    1654:	bl	0 <coda_mem_time_new>
    1658:	str	r0, [fp, #-8]
    165c:	ldr	r3, [fp, #-8]
    1660:	cmp	r3, #0
    1664:	bne	16c8 <end_element_handler+0x300>
    1668:	ldr	r0, [fp, #-24]	; 0xffffffe8
    166c:	bl	0 <coda_dynamic_type_delete>
    1670:	ldr	r0, [fp, #-16]
    1674:	bl	990 <abort_parser>
    1678:	b	1984 <end_element_handler+0x5bc>
    167c:	ldr	r3, [fp, #-16]
    1680:	ldr	r1, [r3, #528]	; 0x210
    1684:	ldr	r3, [fp, #-16]
    1688:	ldr	r2, [r3, #8]
    168c:	ldr	r3, [fp, #-16]
    1690:	ldr	r0, [r3, #536]	; 0x218
    1694:	ldr	r3, [fp, #-16]
    1698:	ldr	r3, [r3, #544]	; 0x220
    169c:	str	r3, [sp]
    16a0:	mov	r3, r0
    16a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    16a8:	bl	0 <coda_mem_data_new>
    16ac:	str	r0, [fp, #-8]
    16b0:	ldr	r3, [fp, #-8]
    16b4:	cmp	r3, #0
    16b8:	bne	16c8 <end_element_handler+0x300>
    16bc:	ldr	r0, [fp, #-16]
    16c0:	bl	990 <abort_parser>
    16c4:	b	1984 <end_element_handler+0x5bc>
    16c8:	ldr	r3, [fp, #-16]
    16cc:	mov	r2, #0
    16d0:	str	r2, [r3, #528]	; 0x210
    16d4:	b	1808 <end_element_handler+0x440>
    16d8:	ldr	r3, [fp, #-16]
    16dc:	ldr	r3, [r3, #532]	; 0x214
    16e0:	cmp	r3, #0
    16e4:	bne	17d8 <end_element_handler+0x410>
    16e8:	ldr	r3, [fp, #-16]
    16ec:	ldr	r2, [r3, #12]
    16f0:	ldr	r3, [fp, #-16]
    16f4:	add	r2, r2, #36	; 0x24
    16f8:	ldr	r3, [r3, r2, lsl #2]
    16fc:	mov	r0, r3
    1700:	bl	0 <coda_mem_record_validate>
    1704:	mov	r3, r0
    1708:	cmp	r3, #0
    170c:	beq	171c <end_element_handler+0x354>
    1710:	ldr	r0, [fp, #-16]
    1714:	bl	990 <abort_parser>
    1718:	b	1984 <end_element_handler+0x5bc>
    171c:	mov	r3, #0
    1720:	str	r3, [fp, #-12]
    1724:	b	17b4 <end_element_handler+0x3ec>
    1728:	ldr	r3, [fp, #-16]
    172c:	ldr	r2, [r3, #12]
    1730:	ldr	r3, [fp, #-16]
    1734:	add	r2, r2, #36	; 0x24
    1738:	ldr	r3, [r3, r2, lsl #2]
    173c:	ldr	r2, [r3, #20]
    1740:	ldr	r3, [fp, #-12]
    1744:	lsl	r3, r3, #2
    1748:	add	r3, r2, r3
    174c:	ldr	r3, [r3]
    1750:	str	r3, [fp, #-28]	; 0xffffffe4
    1754:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1758:	cmp	r3, #0
    175c:	beq	17a8 <end_element_handler+0x3e0>
    1760:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1764:	ldr	r3, [r3, #4]
    1768:	ldr	r3, [r3, #8]
    176c:	cmp	r3, #1
    1770:	bne	17a8 <end_element_handler+0x3e0>
    1774:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1778:	ldr	r3, [r3, #4]
    177c:	ldr	r3, [r3]
    1780:	cmp	r3, #2
    1784:	bne	17a8 <end_element_handler+0x3e0>
    1788:	ldr	r0, [fp, #-28]	; 0xffffffe4
    178c:	bl	0 <coda_mem_array_validate>
    1790:	mov	r3, r0
    1794:	cmp	r3, #0
    1798:	beq	17a8 <end_element_handler+0x3e0>
    179c:	ldr	r0, [fp, #-16]
    17a0:	bl	990 <abort_parser>
    17a4:	b	1984 <end_element_handler+0x5bc>
    17a8:	ldr	r3, [fp, #-12]
    17ac:	add	r3, r3, #1
    17b0:	str	r3, [fp, #-12]
    17b4:	ldr	r3, [fp, #-16]
    17b8:	ldr	r2, [r3, #12]
    17bc:	ldr	r3, [fp, #-16]
    17c0:	add	r2, r2, #36	; 0x24
    17c4:	ldr	r3, [r3, r2, lsl #2]
    17c8:	ldr	r3, [r3, #16]
    17cc:	ldr	r2, [fp, #-12]
    17d0:	cmp	r2, r3
    17d4:	blt	1728 <end_element_handler+0x360>
    17d8:	ldr	r3, [fp, #-16]
    17dc:	ldr	r2, [r3, #12]
    17e0:	ldr	r3, [fp, #-16]
    17e4:	add	r2, r2, #36	; 0x24
    17e8:	ldr	r3, [r3, r2, lsl #2]
    17ec:	str	r3, [fp, #-8]
    17f0:	ldr	r3, [fp, #-16]
    17f4:	ldr	r2, [r3, #12]
    17f8:	ldr	r3, [fp, #-16]
    17fc:	add	r2, r2, #36	; 0x24
    1800:	mov	r1, #0
    1804:	str	r1, [r3, r2, lsl #2]
    1808:	ldr	r3, [fp, #-16]
    180c:	ldr	r3, [r3, #528]	; 0x210
    1810:	cmp	r3, #0
    1814:	beq	1838 <end_element_handler+0x470>
    1818:	movw	r3, #0
    181c:	movt	r3, #0
    1820:	movw	r2, #685	; 0x2ad
    1824:	movw	r1, #0
    1828:	movt	r1, #0
    182c:	movw	r0, #0
    1830:	movt	r0, #0
    1834:	bl	0 <__assert_fail>
    1838:	ldr	r3, [fp, #-16]
    183c:	ldr	r3, [r3, #12]
    1840:	sub	r2, r3, #1
    1844:	ldr	r3, [fp, #-16]
    1848:	add	r2, r2, #36	; 0x24
    184c:	ldr	r3, [r3, r2, lsl #2]
    1850:	str	r3, [fp, #-32]	; 0xffffffe0
    1854:	ldr	r3, [fp, #-16]
    1858:	ldr	r2, [r3, #12]
    185c:	ldr	r3, [fp, #-16]
    1860:	add	r2, r2, #68	; 0x44
    1864:	ldr	r3, [r3, r2, lsl #2]
    1868:	str	r3, [fp, #-36]	; 0xffffffdc
    186c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1870:	ldr	r2, [r3, #20]
    1874:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1878:	lsl	r3, r3, #2
    187c:	add	r3, r2, r3
    1880:	ldr	r3, [r3]
    1884:	cmp	r3, #0
    1888:	beq	1940 <end_element_handler+0x578>
    188c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1890:	ldr	r2, [r3, #20]
    1894:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1898:	lsl	r3, r3, #2
    189c:	add	r3, r2, r3
    18a0:	ldr	r3, [r3]
    18a4:	ldr	r3, [r3, #4]
    18a8:	ldr	r3, [r3, #8]
    18ac:	cmp	r3, #1
    18b0:	bne	18dc <end_element_handler+0x514>
    18b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    18b8:	ldr	r2, [r3, #20]
    18bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    18c0:	lsl	r3, r3, #2
    18c4:	add	r3, r2, r3
    18c8:	ldr	r3, [r3]
    18cc:	ldr	r3, [r3, #4]
    18d0:	ldr	r3, [r3]
    18d4:	cmp	r3, #2
    18d8:	beq	18fc <end_element_handler+0x534>
    18dc:	movw	r3, #0
    18e0:	movt	r3, #0
    18e4:	movw	r2, #693	; 0x2b5
    18e8:	movw	r1, #0
    18ec:	movt	r1, #0
    18f0:	movw	r0, #0
    18f4:	movt	r0, #0
    18f8:	bl	0 <__assert_fail>
    18fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1900:	ldr	r2, [r3, #20]
    1904:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1908:	lsl	r3, r3, #2
    190c:	add	r3, r2, r3
    1910:	ldr	r3, [r3]
    1914:	ldr	r1, [fp, #-8]
    1918:	mov	r0, r3
    191c:	bl	0 <coda_mem_array_add_element>
    1920:	mov	r3, r0
    1924:	cmp	r3, #0
    1928:	beq	195c <end_element_handler+0x594>
    192c:	ldr	r0, [fp, #-8]
    1930:	bl	0 <coda_dynamic_type_delete>
    1934:	ldr	r0, [fp, #-16]
    1938:	bl	990 <abort_parser>
    193c:	b	1984 <end_element_handler+0x5bc>
    1940:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1944:	ldr	r2, [r3, #20]
    1948:	ldr	r3, [fp, #-36]	; 0xffffffdc
    194c:	lsl	r3, r3, #2
    1950:	add	r3, r2, r3
    1954:	ldr	r2, [fp, #-8]
    1958:	str	r2, [r3]
    195c:	ldr	r3, [fp, #-16]
    1960:	ldr	r3, [r3, #12]
    1964:	sub	r2, r3, #1
    1968:	ldr	r3, [fp, #-16]
    196c:	str	r2, [r3, #12]
    1970:	ldr	r3, [fp, #-16]
    1974:	mov	r2, #0
    1978:	str	r2, [r3, #536]	; 0x218
    197c:	b	1984 <end_element_handler+0x5bc>
    1980:	nop	{0}
    1984:	sub	sp, fp, #4
    1988:	ldr	fp, [sp]
    198c:	add	sp, sp, #4
    1990:	pop	{pc}		; (ldr pc, [sp], #4)

00001994 <character_data_handler>:
    1994:	str	fp, [sp, #-8]!
    1998:	str	lr, [sp, #4]
    199c:	add	fp, sp, #4
    19a0:	sub	sp, sp, #32
    19a4:	str	r0, [fp, #-16]
    19a8:	str	r1, [fp, #-20]	; 0xffffffec
    19ac:	str	r2, [fp, #-24]	; 0xffffffe8
    19b0:	ldr	r3, [fp, #-16]
    19b4:	str	r3, [fp, #-8]
    19b8:	ldr	r3, [fp, #-8]
    19bc:	ldr	r3, [r3, #532]	; 0x214
    19c0:	cmp	r3, #0
    19c4:	bne	1a34 <character_data_handler+0xa0>
    19c8:	ldr	r3, [fp, #-8]
    19cc:	ldr	r2, [r3, #12]
    19d0:	ldr	r3, [fp, #-8]
    19d4:	add	r2, r2, #36	; 0x24
    19d8:	ldr	r3, [r3, r2, lsl #2]
    19dc:	cmp	r3, #0
    19e0:	beq	1a34 <character_data_handler+0xa0>
    19e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    19e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    19ec:	bl	0 <is_whitespace>
    19f0:	mov	r3, r0
    19f4:	cmp	r3, #0
    19f8:	bne	1a34 <character_data_handler+0xa0>
    19fc:	ldr	r3, [fp, #-8]
    1a00:	ldr	r2, [r3, #12]
    1a04:	ldr	r3, [fp, #-8]
    1a08:	add	r2, r2, #100	; 0x64
    1a0c:	ldr	r3, [r3, r2, lsl #2]
    1a10:	mov	r2, r3
    1a14:	movw	r1, #0
    1a18:	movt	r1, #0
    1a1c:	movw	r0, #65236	; 0xfed4
    1a20:	movt	r0, #65535	; 0xffff
    1a24:	bl	0 <coda_set_error>
    1a28:	ldr	r0, [fp, #-8]
    1a2c:	bl	990 <abort_parser>
    1a30:	b	1b20 <character_data_handler+0x18c>
    1a34:	ldr	r3, [fp, #-8]
    1a38:	ldr	r2, [r3, #536]	; 0x218
    1a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a40:	add	r2, r2, r3
    1a44:	ldr	r3, [fp, #-8]
    1a48:	ldr	r3, [r3, #540]	; 0x21c
    1a4c:	cmp	r2, r3
    1a50:	ble	1ae4 <character_data_handler+0x150>
    1a54:	ldr	r3, [fp, #-8]
    1a58:	ldr	r0, [r3, #544]	; 0x220
    1a5c:	ldr	r3, [fp, #-8]
    1a60:	ldr	r2, [r3, #536]	; 0x218
    1a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a68:	add	r3, r2, r3
    1a6c:	mov	r1, r3
    1a70:	bl	0 <realloc>
    1a74:	str	r0, [fp, #-12]
    1a78:	ldr	r3, [fp, #-12]
    1a7c:	cmp	r3, #0
    1a80:	bne	1ac0 <character_data_handler+0x12c>
    1a84:	ldr	r3, [fp, #-8]
    1a88:	ldr	r2, [r3, #536]	; 0x218
    1a8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a90:	add	r2, r2, r3
    1a94:	movw	r3, #731	; 0x2db
    1a98:	str	r3, [sp]
    1a9c:	movw	r3, #0
    1aa0:	movt	r3, #0
    1aa4:	movw	r1, #0
    1aa8:	movt	r1, #0
    1aac:	mvn	r0, #0
    1ab0:	bl	0 <coda_set_error>
    1ab4:	ldr	r0, [fp, #-8]
    1ab8:	bl	990 <abort_parser>
    1abc:	b	1b20 <character_data_handler+0x18c>
    1ac0:	ldr	r3, [fp, #-8]
    1ac4:	ldr	r2, [fp, #-12]
    1ac8:	str	r2, [r3, #544]	; 0x220
    1acc:	ldr	r3, [fp, #-8]
    1ad0:	ldr	r2, [r3, #536]	; 0x218
    1ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ad8:	add	r2, r2, r3
    1adc:	ldr	r3, [fp, #-8]
    1ae0:	str	r2, [r3, #540]	; 0x21c
    1ae4:	ldr	r3, [fp, #-8]
    1ae8:	ldr	r3, [r3, #544]	; 0x220
    1aec:	ldr	r2, [fp, #-8]
    1af0:	ldr	r2, [r2, #536]	; 0x218
    1af4:	add	r3, r3, r2
    1af8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1afc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b00:	mov	r0, r3
    1b04:	bl	0 <memcpy>
    1b08:	ldr	r3, [fp, #-8]
    1b0c:	ldr	r2, [r3, #536]	; 0x218
    1b10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b14:	add	r2, r2, r3
    1b18:	ldr	r3, [fp, #-8]
    1b1c:	str	r2, [r3, #536]	; 0x218
    1b20:	sub	sp, fp, #4
    1b24:	ldr	fp, [sp]
    1b28:	add	sp, sp, #4
    1b2c:	pop	{pc}		; (ldr pc, [sp], #4)

00001b30 <coda_xml_parse>:
    1b30:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1b34:	strd	r6, [sp, #8]
    1b38:	strd	r8, [sp, #16]
    1b3c:	str	fp, [sp, #24]
    1b40:	str	lr, [sp, #28]
    1b44:	add	fp, sp, #28
    1b48:	sub	sp, sp, #8768	; 0x2240
    1b4c:	sub	sp, sp, #56	; 0x38
    1b50:	sub	r3, fp, #8192	; 0x2000
    1b54:	sub	r3, r3, #28
    1b58:	str	r0, [r3, #-628]	; 0xfffffd8c
    1b5c:	sub	r3, fp, #8704	; 0x2200
    1b60:	sub	r3, r3, #28
    1b64:	sub	r3, r3, #60	; 0x3c
    1b68:	mov	r0, r3
    1b6c:	bl	904 <parser_info_init>
    1b70:	mov	r1, #32
    1b74:	mov	r0, #0
    1b78:	bl	0 <coda_XML_ParserCreateNS>
    1b7c:	mov	r2, r0
    1b80:	sub	r3, fp, #8192	; 0x2000
    1b84:	sub	r3, r3, #28
    1b88:	str	r2, [r3, #-572]	; 0xfffffdc4
    1b8c:	sub	r3, fp, #8192	; 0x2000
    1b90:	sub	r3, r3, #28
    1b94:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1b98:	cmp	r3, #0
    1b9c:	bne	1bb8 <coda_xml_parse+0x88>
    1ba0:	movw	r1, #0
    1ba4:	movt	r1, #0
    1ba8:	mvn	r0, #13
    1bac:	bl	0 <coda_set_error>
    1bb0:	mvn	r3, #0
    1bb4:	b	22bc <coda_xml_parse+0x78c>
    1bb8:	sub	r3, fp, #8192	; 0x2000
    1bbc:	sub	r3, r3, #28
    1bc0:	mov	r2, r3
    1bc4:	sub	r3, fp, #8192	; 0x2000
    1bc8:	sub	r3, r3, #28
    1bcc:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1bd0:	str	r3, [r2, #-564]	; 0xfffffdcc
    1bd4:	sub	r3, fp, #8192	; 0x2000
    1bd8:	sub	r3, r3, #28
    1bdc:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1be0:	ldr	r3, [r3, #24]
    1be4:	cmp	r3, #0
    1be8:	beq	1c08 <coda_xml_parse+0xd8>
    1bec:	sub	r3, fp, #8192	; 0x2000
    1bf0:	sub	r3, r3, #28
    1bf4:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1bf8:	ldr	r3, [r3, #24]
    1bfc:	ldr	r3, [r3, #28]
    1c00:	cmp	r3, #0
    1c04:	bne	1c10 <coda_xml_parse+0xe0>
    1c08:	mov	r3, #1
    1c0c:	b	1c14 <coda_xml_parse+0xe4>
    1c10:	mov	r3, #0
    1c14:	sub	r2, fp, #8192	; 0x2000
    1c18:	sub	r2, r2, #28
    1c1c:	str	r3, [r2, #-40]	; 0xffffffd8
    1c20:	sub	r3, fp, #8192	; 0x2000
    1c24:	sub	r3, r3, #28
    1c28:	ldr	r3, [r3, #-40]	; 0xffffffd8
    1c2c:	cmp	r3, #0
    1c30:	beq	1c90 <coda_xml_parse+0x160>
    1c34:	mov	r0, #2
    1c38:	bl	0 <coda_type_record_new>
    1c3c:	str	r0, [fp, #-48]	; 0xffffffd0
    1c40:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1c44:	cmp	r3, #0
    1c48:	bne	1c68 <coda_xml_parse+0x138>
    1c4c:	sub	r3, fp, #8192	; 0x2000
    1c50:	sub	r3, r3, #28
    1c54:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1c58:	mov	r0, r3
    1c5c:	bl	0 <coda_XML_ParserFree>
    1c60:	mvn	r3, #0
    1c64:	b	22bc <coda_xml_parse+0x78c>
    1c68:	mov	r1, #0
    1c6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c70:	bl	0 <coda_mem_record_new>
    1c74:	mov	r2, r0
    1c78:	sub	r3, fp, #8192	; 0x2000
    1c7c:	sub	r3, r3, #28
    1c80:	str	r2, [r3, #-428]	; 0xfffffe54
    1c84:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c88:	bl	0 <coda_type_release>
    1c8c:	b	1d00 <coda_xml_parse+0x1d0>
    1c90:	sub	r3, fp, #8192	; 0x2000
    1c94:	sub	r3, r3, #28
    1c98:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1c9c:	ldr	r3, [r3, #24]
    1ca0:	ldr	r3, [r3, #28]
    1ca4:	ldr	r3, [r3, #8]
    1ca8:	cmp	r3, #0
    1cac:	beq	1cd0 <coda_xml_parse+0x1a0>
    1cb0:	movw	r3, #0
    1cb4:	movt	r3, #0
    1cb8:	movw	r2, #774	; 0x306
    1cbc:	movw	r1, #0
    1cc0:	movt	r1, #0
    1cc4:	movw	r0, #0
    1cc8:	movt	r0, #0
    1ccc:	bl	0 <__assert_fail>
    1cd0:	sub	r3, fp, #8192	; 0x2000
    1cd4:	sub	r3, r3, #28
    1cd8:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1cdc:	ldr	r3, [r3, #24]
    1ce0:	ldr	r3, [r3, #28]
    1ce4:	mov	r1, #0
    1ce8:	mov	r0, r3
    1cec:	bl	0 <coda_mem_record_new>
    1cf0:	mov	r2, r0
    1cf4:	sub	r3, fp, #8192	; 0x2000
    1cf8:	sub	r3, r3, #28
    1cfc:	str	r2, [r3, #-428]	; 0xfffffe54
    1d00:	sub	r3, fp, #8192	; 0x2000
    1d04:	sub	r3, r3, #28
    1d08:	ldr	r3, [r3, #-428]	; 0xfffffe54
    1d0c:	cmp	r3, #0
    1d10:	bne	1d30 <coda_xml_parse+0x200>
    1d14:	sub	r3, fp, #8704	; 0x2200
    1d18:	sub	r3, r3, #28
    1d1c:	sub	r3, r3, #60	; 0x3c
    1d20:	mov	r0, r3
    1d24:	bl	820 <parser_info_cleanup>
    1d28:	mvn	r3, #0
    1d2c:	b	22bc <coda_xml_parse+0x78c>
    1d30:	sub	r3, fp, #8192	; 0x2000
    1d34:	sub	r3, r3, #28
    1d38:	ldr	r3, [r3, #-428]	; 0xfffffe54
    1d3c:	add	r3, r3, #4
    1d40:	sub	r2, fp, #8192	; 0x2000
    1d44:	sub	r2, r2, #28
    1d48:	str	r3, [r2, #-556]	; 0xfffffdd4
    1d4c:	sub	r3, fp, #8192	; 0x2000
    1d50:	sub	r3, r3, #28
    1d54:	mov	r2, r3
    1d58:	mvn	r3, #0
    1d5c:	str	r3, [r2, #-300]	; 0xfffffed4
    1d60:	sub	r3, fp, #8192	; 0x2000
    1d64:	sub	r3, r3, #28
    1d68:	mov	r2, r3
    1d6c:	mov	r3, #0
    1d70:	str	r3, [r2, #-172]	; 0xffffff54
    1d74:	sub	r3, fp, #8192	; 0x2000
    1d78:	sub	r3, r3, #28
    1d7c:	mov	r2, r3
    1d80:	mov	r3, #0
    1d84:	str	r3, [r2, #-560]	; 0xfffffdd0
    1d88:	sub	r3, fp, #8192	; 0x2000
    1d8c:	sub	r3, r3, #28
    1d90:	ldr	r2, [r3, #-572]	; 0xfffffdc4
    1d94:	sub	r3, fp, #8704	; 0x2200
    1d98:	sub	r3, r3, #28
    1d9c:	sub	r3, r3, #60	; 0x3c
    1da0:	mov	r1, r3
    1da4:	mov	r0, r2
    1da8:	bl	0 <coda_XML_SetUserData>
    1dac:	sub	r3, fp, #8192	; 0x2000
    1db0:	sub	r3, r3, #28
    1db4:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1db8:	mov	r1, #2
    1dbc:	mov	r0, r3
    1dc0:	bl	0 <coda_XML_SetParamEntityParsing>
    1dc4:	sub	r3, fp, #8192	; 0x2000
    1dc8:	sub	r3, r3, #28
    1dcc:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1dd0:	movw	r2, #0
    1dd4:	movt	r2, #0
    1dd8:	movw	r1, #0
    1ddc:	movt	r1, #0
    1de0:	mov	r0, r3
    1de4:	bl	0 <coda_XML_SetElementHandler>
    1de8:	sub	r3, fp, #8192	; 0x2000
    1dec:	sub	r3, r3, #28
    1df0:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1df4:	movw	r1, #0
    1df8:	movt	r1, #0
    1dfc:	mov	r0, r3
    1e00:	bl	0 <coda_XML_SetCharacterDataHandler>
    1e04:	sub	r3, fp, #8192	; 0x2000
    1e08:	sub	r3, r3, #28
    1e0c:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1e10:	movw	r1, #0
    1e14:	movt	r1, #0
    1e18:	mov	r0, r3
    1e1c:	bl	0 <coda_XML_SetNotStandaloneHandler>
    1e20:	sub	r3, fp, #8192	; 0x2000
    1e24:	sub	r3, r3, #28
    1e28:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1e2c:	ldr	r3, [r3, #52]	; 0x34
    1e30:	ldrd	r2, [r3, #8]
    1e34:	asr	r1, r3, #31
    1e38:	mov	r0, r1
    1e3c:	asr	r1, r0, #31
    1e40:	movw	r8, #8191	; 0x1fff
    1e44:	mov	r9, #0
    1e48:	and	r6, r0, r8
    1e4c:	and	r7, r1, r9
    1e50:	adds	r4, r6, r2
    1e54:	adc	r5, r7, r3
    1e58:	mov	r2, #0
    1e5c:	mov	r3, #0
    1e60:	lsr	r2, r4, #13
    1e64:	orr	r2, r2, r5, lsl #19
    1e68:	asr	r3, r5, #13
    1e6c:	mov	r3, r2
    1e70:	str	r3, [fp, #-32]	; 0xffffffe0
    1e74:	sub	r3, fp, #8192	; 0x2000
    1e78:	sub	r3, r3, #28
    1e7c:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1e80:	ldr	r3, [r3, #52]	; 0x34
    1e84:	ldrd	r2, [r3, #8]
    1e88:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1e8c:	lsl	r1, r1, #13
    1e90:	mov	r0, r1
    1e94:	asr	r1, r0, #31
    1e98:	cmp	r0, r2
    1e9c:	sbcs	r3, r1, r3
    1ea0:	bge	1eb0 <coda_xml_parse+0x380>
    1ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ea8:	add	r3, r3, #1
    1eac:	str	r3, [fp, #-32]	; 0xffffffe0
    1eb0:	mov	r3, #0
    1eb4:	str	r3, [fp, #-36]	; 0xffffffdc
    1eb8:	b	21d4 <coda_xml_parse+0x6a4>
    1ebc:	sub	r3, fp, #8192	; 0x2000
    1ec0:	sub	r3, r3, #28
    1ec4:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1ec8:	ldr	r3, [r3, #52]	; 0x34
    1ecc:	ldr	r3, [r3, #52]	; 0x34
    1ed0:	cmp	r3, #0
    1ed4:	beq	1f48 <coda_xml_parse+0x418>
    1ed8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1edc:	sub	r3, r3, #1
    1ee0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1ee4:	cmp	r2, r3
    1ee8:	bge	1ef8 <coda_xml_parse+0x3c8>
    1eec:	mov	r3, #8192	; 0x2000
    1ef0:	str	r3, [fp, #-44]	; 0xffffffd4
    1ef4:	b	1f20 <coda_xml_parse+0x3f0>
    1ef8:	sub	r3, fp, #8192	; 0x2000
    1efc:	sub	r3, r3, #28
    1f00:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1f04:	ldr	r3, [r3, #52]	; 0x34
    1f08:	ldrd	r2, [r3, #8]
    1f0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f10:	sub	r3, r3, #1
    1f14:	lsl	r3, r3, #13
    1f18:	sub	r3, r2, r3
    1f1c:	str	r3, [fp, #-44]	; 0xffffffd4
    1f20:	sub	r3, fp, #8192	; 0x2000
    1f24:	sub	r3, r3, #28
    1f28:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1f2c:	ldr	r3, [r3, #52]	; 0x34
    1f30:	ldr	r3, [r3, #48]	; 0x30
    1f34:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1f38:	lsl	r2, r2, #13
    1f3c:	add	r3, r3, r2
    1f40:	str	r3, [fp, #-40]	; 0xffffffd8
    1f44:	b	2084 <coda_xml_parse+0x554>
    1f48:	sub	r3, fp, #8192	; 0x2000
    1f4c:	sub	r3, r3, #28
    1f50:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1f54:	ldr	r3, [r3, #52]	; 0x34
    1f58:	ldr	r0, [r3, #56]	; 0x38
    1f5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1f60:	lsl	r3, r3, #13
    1f64:	mov	r2, #0
    1f68:	mov	r1, r3
    1f6c:	bl	0 <lseek>
    1f70:	mov	r3, r0
    1f74:	cmp	r3, #0
    1f78:	bge	1ff0 <coda_xml_parse+0x4c0>
    1f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1f80:	lsl	r3, r3, #13
    1f84:	mov	r0, r3
    1f88:	asr	r1, r0, #31
    1f8c:	sub	r3, fp, #8768	; 0x2240
    1f90:	sub	r3, r3, #28
    1f94:	sub	r3, r3, #20
    1f98:	mov	r2, r3
    1f9c:	bl	0 <coda_str64>
    1fa0:	bl	0 <__errno_location>
    1fa4:	mov	r3, r0
    1fa8:	ldr	r3, [r3]
    1fac:	mov	r0, r3
    1fb0:	bl	0 <strerror>
    1fb4:	mov	r3, r0
    1fb8:	sub	r2, fp, #8768	; 0x2240
    1fbc:	sub	r2, r2, #28
    1fc0:	sub	r2, r2, #20
    1fc4:	movw	r1, #0
    1fc8:	movt	r1, #0
    1fcc:	mvn	r0, #21
    1fd0:	bl	0 <coda_set_error>
    1fd4:	sub	r3, fp, #8704	; 0x2200
    1fd8:	sub	r3, r3, #28
    1fdc:	sub	r3, r3, #60	; 0x3c
    1fe0:	mov	r0, r3
    1fe4:	bl	820 <parser_info_cleanup>
    1fe8:	mvn	r3, #0
    1fec:	b	22bc <coda_xml_parse+0x78c>
    1ff0:	sub	r3, fp, #8192	; 0x2000
    1ff4:	sub	r3, r3, #28
    1ff8:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1ffc:	ldr	r3, [r3, #52]	; 0x34
    2000:	ldr	r0, [r3, #56]	; 0x38
    2004:	sub	r3, fp, #8192	; 0x2000
    2008:	sub	r3, r3, #28
    200c:	sub	r3, r3, #24
    2010:	mov	r2, #8192	; 0x2000
    2014:	mov	r1, r3
    2018:	bl	0 <read>
    201c:	str	r0, [fp, #-44]	; 0xffffffd4
    2020:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2024:	cmp	r3, #0
    2028:	bge	2074 <coda_xml_parse+0x544>
    202c:	bl	0 <__errno_location>
    2030:	mov	r3, r0
    2034:	ldr	r3, [r3]
    2038:	mov	r0, r3
    203c:	bl	0 <strerror>
    2040:	mov	r3, r0
    2044:	mov	r2, r3
    2048:	movw	r1, #0
    204c:	movt	r1, #0
    2050:	mvn	r0, #21
    2054:	bl	0 <coda_set_error>
    2058:	sub	r3, fp, #8704	; 0x2200
    205c:	sub	r3, r3, #28
    2060:	sub	r3, r3, #60	; 0x3c
    2064:	mov	r0, r3
    2068:	bl	820 <parser_info_cleanup>
    206c:	mvn	r3, #0
    2070:	b	22bc <coda_xml_parse+0x78c>
    2074:	sub	r3, fp, #8192	; 0x2000
    2078:	sub	r3, r3, #28
    207c:	sub	r3, r3, #24
    2080:	str	r3, [fp, #-40]	; 0xffffffd8
    2084:	ldr	r3, [pc, #592]	; 22dc <coda_xml_parse+0x7ac>
    2088:	ldr	r3, [pc, r3]
    208c:	mrc	15, 0, r2, cr13, cr0, {3}
    2090:	mov	r1, #0
    2094:	str	r1, [r2, r3]
    2098:	sub	r3, fp, #8192	; 0x2000
    209c:	sub	r3, r3, #28
    20a0:	ldr	r0, [r3, #-572]	; 0xfffffdc4
    20a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20a8:	sub	r3, r3, #1
    20ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    20b0:	cmp	r2, r3
    20b4:	moveq	r3, #1
    20b8:	movne	r3, #0
    20bc:	uxtb	r3, r3
    20c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    20c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    20c8:	bl	0 <coda_XML_Parse>
    20cc:	mov	r3, r0
    20d0:	str	r3, [fp, #-52]	; 0xffffffcc
    20d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20d8:	cmp	r3, #0
    20dc:	beq	20f8 <coda_xml_parse+0x5c8>
    20e0:	ldr	r3, [pc, #504]	; 22e0 <coda_xml_parse+0x7b0>
    20e4:	ldr	r3, [pc, r3]
    20e8:	mrc	15, 0, r2, cr13, cr0, {3}
    20ec:	ldr	r3, [r2, r3]
    20f0:	cmp	r3, #0
    20f4:	beq	21c8 <coda_xml_parse+0x698>
    20f8:	ldr	r3, [pc, #484]	; 22e4 <coda_xml_parse+0x7b4>
    20fc:	ldr	r3, [pc, r3]
    2100:	mrc	15, 0, r2, cr13, cr0, {3}
    2104:	ldr	r3, [r2, r3]
    2108:	cmp	r3, #0
    210c:	bne	2148 <coda_xml_parse+0x618>
    2110:	sub	r3, fp, #8192	; 0x2000
    2114:	sub	r3, r3, #28
    2118:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    211c:	mov	r0, r3
    2120:	bl	0 <coda_XML_GetErrorCode>
    2124:	mov	r3, r0
    2128:	mov	r0, r3
    212c:	bl	0 <coda_XML_ErrorString>
    2130:	mov	r3, r0
    2134:	mov	r2, r3
    2138:	movw	r1, #0
    213c:	movt	r1, #0
    2140:	mvn	r0, #13
    2144:	bl	0 <coda_set_error>
    2148:	sub	r3, fp, #8192	; 0x2000
    214c:	sub	r3, r3, #28
    2150:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    2154:	mov	r0, r3
    2158:	bl	0 <coda_XML_GetCurrentByteIndex>
    215c:	sub	r3, fp, #8768	; 0x2240
    2160:	sub	r3, r3, #28
    2164:	sub	r3, r3, #44	; 0x2c
    2168:	mov	r2, r3
    216c:	bl	0 <coda_str64>
    2170:	sub	r3, fp, #8192	; 0x2000
    2174:	sub	r3, r3, #28
    2178:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    217c:	mov	r0, r3
    2180:	bl	0 <coda_XML_GetCurrentLineNumber>
    2184:	mov	r2, r0
    2188:	mov	r3, r1
    218c:	mov	r1, r2
    2190:	sub	r3, fp, #8768	; 0x2240
    2194:	sub	r3, r3, #28
    2198:	sub	r3, r3, #44	; 0x2c
    219c:	mov	r2, r3
    21a0:	movw	r0, #0
    21a4:	movt	r0, #0
    21a8:	bl	0 <coda_add_error_message>
    21ac:	sub	r3, fp, #8704	; 0x2200
    21b0:	sub	r3, r3, #28
    21b4:	sub	r3, r3, #60	; 0x3c
    21b8:	mov	r0, r3
    21bc:	bl	820 <parser_info_cleanup>
    21c0:	mvn	r3, #0
    21c4:	b	22bc <coda_xml_parse+0x78c>
    21c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    21cc:	add	r3, r3, #1
    21d0:	str	r3, [fp, #-36]	; 0xffffffdc
    21d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    21d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21dc:	cmp	r2, r3
    21e0:	blt	1ebc <coda_xml_parse+0x38c>
    21e4:	sub	r3, fp, #8192	; 0x2000
    21e8:	sub	r3, r3, #28
    21ec:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    21f0:	mov	r0, r3
    21f4:	bl	0 <coda_XML_ParserFree>
    21f8:	sub	r3, fp, #8192	; 0x2000
    21fc:	sub	r3, r3, #28
    2200:	mov	r2, r3
    2204:	mov	r3, #0
    2208:	str	r3, [r2, #-572]	; 0xfffffdc4
    220c:	sub	r3, fp, #8192	; 0x2000
    2210:	sub	r3, r3, #28
    2214:	ldr	r3, [r3, #-40]	; 0xffffffd8
    2218:	cmp	r3, #0
    221c:	beq	2274 <coda_xml_parse+0x744>
    2220:	sub	r3, fp, #8192	; 0x2000
    2224:	sub	r3, r3, #28
    2228:	ldr	r3, [r3, #-428]	; 0xfffffe54
    222c:	ldr	r2, [r3, #4]
    2230:	sub	r3, fp, #8704	; 0x2200
    2234:	sub	r3, r3, #28
    2238:	sub	r3, r3, #60	; 0x3c
    223c:	add	r3, r3, #144	; 0x90
    2240:	mov	r1, r2
    2244:	mov	r0, r3
    2248:	bl	0 <coda_mem_type_update>
    224c:	mov	r3, r0
    2250:	cmp	r3, #0
    2254:	beq	2274 <coda_xml_parse+0x744>
    2258:	sub	r3, fp, #8704	; 0x2200
    225c:	sub	r3, r3, #28
    2260:	sub	r3, r3, #60	; 0x3c
    2264:	mov	r0, r3
    2268:	bl	820 <parser_info_cleanup>
    226c:	mvn	r3, #0
    2270:	b	22bc <coda_xml_parse+0x78c>
    2274:	sub	r3, fp, #8192	; 0x2000
    2278:	sub	r3, r3, #28
    227c:	ldr	r2, [r3, #-428]	; 0xfffffe54
    2280:	sub	r3, fp, #8192	; 0x2000
    2284:	sub	r3, r3, #28
    2288:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    228c:	str	r2, [r3, #20]
    2290:	sub	r3, fp, #8192	; 0x2000
    2294:	sub	r3, r3, #28
    2298:	mov	r2, r3
    229c:	mvn	r3, #0
    22a0:	str	r3, [r2, #-560]	; 0xfffffdd0
    22a4:	sub	r3, fp, #8704	; 0x2200
    22a8:	sub	r3, r3, #28
    22ac:	sub	r3, r3, #60	; 0x3c
    22b0:	mov	r0, r3
    22b4:	bl	820 <parser_info_cleanup>
    22b8:	mov	r3, #0
    22bc:	mov	r0, r3
    22c0:	sub	sp, fp, #28
    22c4:	ldrd	r4, [sp]
    22c8:	ldrd	r6, [sp, #8]
    22cc:	ldrd	r8, [sp, #16]
    22d0:	ldr	fp, [sp, #24]
    22d4:	add	sp, sp, #28
    22d8:	pop	{pc}		; (ldr pc, [sp], #4)
    22dc:	.word	0x0000024c
    22e0:	.word	0x000001f4
    22e4:	.word	0x000001e0
