
../compcert-repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

00010630 <.init>:
   10630:	push	{r3, lr}
   10634:	bl	106d4 <_start@@Base+0x3c>
   10638:	pop	{r3, pc}

Disassembly of section .plt:

0001063c <printf@plt-0x14>:
   1063c:	push	{lr}		; (str lr, [sp, #-4]!)
   10640:	ldr	lr, [pc, #4]	; 1064c <printf@plt-0x4>
   10644:	add	lr, pc, lr
   10648:	ldr	pc, [lr, #8]!
   1064c:			; <UNDEFINED> instruction: 0x000109b4

00010650 <printf@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2484]!	; 0x9b4

0001065c <memcpy@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2476]!	; 0x9ac

00010668 <__libc_start_main@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2468]!	; 0x9a4

00010674 <__gmon_start__@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2460]!	; 0x99c

00010680 <__isoc99_scanf@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2452]!	; 0x994

0001068c <abort@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2444]!	; 0x98c

Disassembly of section .text:

00010698 <_start@@Base>:
   10698:	mov	fp, #0
   1069c:	mov	lr, #0
   106a0:	pop	{r1}		; (ldr r1, [sp], #4)
   106a4:	mov	r2, sp
   106a8:	push	{r2}		; (str r2, [sp, #-4]!)
   106ac:	push	{r0}		; (str r0, [sp, #-4]!)
   106b0:	ldr	ip, [pc, #16]	; 106c8 <_start@@Base+0x30>
   106b4:	push	{ip}		; (str ip, [sp, #-4]!)
   106b8:	ldr	r0, [pc, #12]	; 106cc <_start@@Base+0x34>
   106bc:	ldr	r3, [pc, #12]	; 106d0 <_start@@Base+0x38>
   106c0:	bl	10668 <__libc_start_main@plt>
   106c4:	bl	1068c <abort@plt>
   106c8:	andeq	r0, r1, r4, ror #23
   106cc:	andeq	r0, r1, ip, asr #21
   106d0:	andeq	r0, r1, r4, lsl #23
   106d4:	ldr	r3, [pc, #20]	; 106f0 <_start@@Base+0x58>
   106d8:	ldr	r2, [pc, #20]	; 106f4 <_start@@Base+0x5c>
   106dc:	add	r3, pc, r3
   106e0:	ldr	r2, [r3, r2]
   106e4:	cmp	r2, #0
   106e8:	bxeq	lr
   106ec:	b	10674 <__gmon_start__@plt>
   106f0:	andeq	r0, r1, ip, lsl r9
   106f4:	andeq	r0, r0, r4, lsr #32
   106f8:	ldr	r3, [pc, #28]	; 1071c <_start@@Base+0x84>
   106fc:	ldr	r0, [pc, #28]	; 10720 <_start@@Base+0x88>
   10700:	sub	r3, r3, r0
   10704:	cmp	r3, #6
   10708:	bxls	lr
   1070c:	ldr	r3, [pc, #16]	; 10724 <_start@@Base+0x8c>
   10710:	cmp	r3, #0
   10714:	bxeq	lr
   10718:	bx	r3
   1071c:	andeq	r1, r2, r3, lsr r0
   10720:	andeq	r1, r2, r0, lsr r0
   10724:	andeq	r0, r0, r0
   10728:	ldr	r1, [pc, #36]	; 10754 <_start@@Base+0xbc>
   1072c:	ldr	r0, [pc, #36]	; 10758 <_start@@Base+0xc0>
   10730:	sub	r1, r1, r0
   10734:	asr	r1, r1, #2
   10738:	add	r1, r1, r1, lsr #31
   1073c:	asrs	r1, r1, #1
   10740:	bxeq	lr
   10744:	ldr	r3, [pc, #16]	; 1075c <_start@@Base+0xc4>
   10748:	cmp	r3, #0
   1074c:	bxeq	lr
   10750:	bx	r3
   10754:	andeq	r1, r2, r0, lsr r0
   10758:	andeq	r1, r2, r0, lsr r0
   1075c:	andeq	r0, r0, r0
   10760:	push	{r4, lr}
   10764:	ldr	r4, [pc, #24]	; 10784 <_start@@Base+0xec>
   10768:	ldrb	r3, [r4]
   1076c:	cmp	r3, #0
   10770:	popne	{r4, pc}
   10774:	bl	106f8 <_start@@Base+0x60>
   10778:	mov	r3, #1
   1077c:	strb	r3, [r4]
   10780:	pop	{r4, pc}
   10784:	andeq	r1, r2, r0, lsr r0
   10788:	ldr	r0, [pc, #40]	; 107b8 <_start@@Base+0x120>
   1078c:	ldr	r3, [r0]
   10790:	cmp	r3, #0
   10794:	bne	1079c <_start@@Base+0x104>
   10798:	b	10728 <_start@@Base+0x90>
   1079c:	ldr	r3, [pc, #24]	; 107bc <_start@@Base+0x124>
   107a0:	cmp	r3, #0
   107a4:	beq	10798 <_start@@Base+0x100>
   107a8:	push	{r4, lr}
   107ac:	blx	r3
   107b0:	pop	{r4, lr}
   107b4:	b	10728 <_start@@Base+0x90>
   107b8:	andeq	r0, r2, r4, lsl pc
   107bc:	andeq	r0, r0, r0

000107c0 <nova_tarefa@@Base>:
   107c0:	push	{fp, lr}
   107c4:	add	fp, sp, #4
   107c8:	sub	sp, sp, #16
   107cc:	str	r0, [fp, #-8]
   107d0:	ldr	r1, [fp, #-8]
   107d4:	ldr	r3, [fp, #-8]
   107d8:	add	r2, r3, #30
   107dc:	ldr	r3, [fp, #-8]
   107e0:	add	r0, r3, #60	; 0x3c
   107e4:	ldr	r3, [fp, #-8]
   107e8:	add	r3, r3, #64	; 0x40
   107ec:	str	r3, [sp]
   107f0:	mov	r3, r0
   107f4:	ldr	r0, [pc, #36]	; 10820 <nova_tarefa@@Base+0x60>
   107f8:	bl	10680 <__isoc99_scanf@plt>
   107fc:	mov	r3, r0
   10800:	cmp	r3, #4
   10804:	bne	10810 <nova_tarefa@@Base+0x50>
   10808:	mov	r3, #1
   1080c:	b	10814 <nova_tarefa@@Base+0x54>
   10810:	mov	r3, #0
   10814:	mov	r0, r3
   10818:	sub	sp, fp, #4
   1081c:	pop	{fp, pc}
   10820:	strdeq	r0, [r1], -r4

00010824 <ler_tarefas@@Base>:
   10824:	push	{fp, lr}
   10828:	add	fp, sp, #4
   1082c:	sub	sp, sp, #16
   10830:	str	r0, [fp, #-16]
   10834:	mov	r3, #0
   10838:	str	r3, [fp, #-8]
   1083c:	b	1084c <ler_tarefas@@Base+0x28>
   10840:	ldr	r3, [fp, #-8]
   10844:	add	r3, r3, #1
   10848:	str	r3, [fp, #-8]
   1084c:	ldr	r2, [fp, #-8]
   10850:	mov	r3, r2
   10854:	lsl	r3, r3, #4
   10858:	add	r3, r3, r2
   1085c:	lsl	r3, r3, #2
   10860:	mov	r2, r3
   10864:	ldr	r3, [fp, #-16]
   10868:	add	r3, r3, r2
   1086c:	mov	r0, r3
   10870:	bl	107c0 <nova_tarefa@@Base>
   10874:	mov	r3, r0
   10878:	cmp	r3, #0
   1087c:	beq	1088c <ler_tarefas@@Base+0x68>
   10880:	ldr	r3, [fp, #-8]
   10884:	cmp	r3, #99	; 0x63
   10888:	ble	10840 <ler_tarefas@@Base+0x1c>
   1088c:	ldr	r3, [fp, #-8]
   10890:	mov	r0, r3
   10894:	sub	sp, fp, #4
   10898:	pop	{fp, pc}

0001089c <lista_tarefas@@Base>:
   1089c:	push	{fp, lr}
   108a0:	add	fp, sp, #4
   108a4:	sub	sp, sp, #24
   108a8:	str	r0, [fp, #-16]
   108ac:	str	r1, [fp, #-20]	; 0xffffffec
   108b0:	mov	r3, #0
   108b4:	str	r3, [fp, #-8]
   108b8:	b	10970 <lista_tarefas@@Base+0xd4>
   108bc:	ldr	r2, [fp, #-8]
   108c0:	mov	r3, r2
   108c4:	lsl	r3, r3, #4
   108c8:	add	r3, r3, r2
   108cc:	lsl	r3, r3, #2
   108d0:	mov	r2, r3
   108d4:	ldr	r3, [fp, #-16]
   108d8:	add	r3, r3, r2
   108dc:	mov	ip, r3
   108e0:	ldr	r2, [fp, #-8]
   108e4:	mov	r3, r2
   108e8:	lsl	r3, r3, #4
   108ec:	add	r3, r3, r2
   108f0:	lsl	r3, r3, #2
   108f4:	mov	r2, r3
   108f8:	ldr	r3, [fp, #-16]
   108fc:	add	r3, r3, r2
   10900:	add	r1, r3, #30
   10904:	ldr	r2, [fp, #-8]
   10908:	mov	r3, r2
   1090c:	lsl	r3, r3, #4
   10910:	add	r3, r3, r2
   10914:	lsl	r3, r3, #2
   10918:	mov	r2, r3
   1091c:	ldr	r3, [fp, #-16]
   10920:	add	r3, r3, r2
   10924:	ldr	r0, [r3, #60]	; 0x3c
   10928:	ldr	r2, [fp, #-8]
   1092c:	mov	r3, r2
   10930:	lsl	r3, r3, #4
   10934:	add	r3, r3, r2
   10938:	lsl	r3, r3, #2
   1093c:	mov	r2, r3
   10940:	ldr	r3, [fp, #-16]
   10944:	add	r3, r3, r2
   10948:	ldr	r3, [r3, #64]	; 0x40
   1094c:	str	r3, [sp]
   10950:	mov	r3, r0
   10954:	mov	r2, r1
   10958:	mov	r1, ip
   1095c:	ldr	r0, [pc, #40]	; 1098c <lista_tarefas@@Base+0xf0>
   10960:	bl	10650 <printf@plt>
   10964:	ldr	r3, [fp, #-8]
   10968:	add	r3, r3, #1
   1096c:	str	r3, [fp, #-8]
   10970:	ldr	r2, [fp, #-8]
   10974:	ldr	r3, [fp, #-20]	; 0xffffffec
   10978:	cmp	r2, r3
   1097c:	blt	108bc <lista_tarefas@@Base+0x20>
   10980:	nop			; (mov r0, r0)
   10984:	sub	sp, fp, #4
   10988:	pop	{fp, pc}
   1098c:	andeq	r0, r1, r0, lsl #24

00010990 <analisa_tarefas@@Base>:
   10990:	push	{fp, lr}
   10994:	add	fp, sp, #4
   10998:	sub	sp, sp, #32
   1099c:	str	r0, [fp, #-24]	; 0xffffffe8
   109a0:	str	r1, [fp, #-28]	; 0xffffffe4
   109a4:	str	r2, [fp, #-32]	; 0xffffffe0
   109a8:	mov	r3, #0
   109ac:	str	r3, [fp, #-12]
   109b0:	mov	r3, #0
   109b4:	str	r3, [fp, #-16]
   109b8:	mov	r3, #0
   109bc:	str	r3, [fp, #-8]
   109c0:	b	10a90 <analisa_tarefas@@Base+0x100>
   109c4:	ldr	r2, [fp, #-8]
   109c8:	mov	r3, r2
   109cc:	lsl	r3, r3, #4
   109d0:	add	r3, r3, r2
   109d4:	lsl	r3, r3, #2
   109d8:	mov	r2, r3
   109dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   109e0:	add	r3, r3, r2
   109e4:	ldr	r3, [r3, #60]	; 0x3c
   109e8:	ldr	r2, [fp, #-12]
   109ec:	add	r3, r2, r3
   109f0:	str	r3, [fp, #-12]
   109f4:	ldr	r2, [fp, #-8]
   109f8:	mov	r3, r2
   109fc:	lsl	r3, r3, #4
   10a00:	add	r3, r3, r2
   10a04:	lsl	r3, r3, #2
   10a08:	mov	r2, r3
   10a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a10:	add	r3, r3, r2
   10a14:	ldr	r2, [r3, #60]	; 0x3c
   10a18:	ldr	r3, [fp, #-16]
   10a1c:	cmp	r2, r3
   10a20:	ble	10a84 <analisa_tarefas@@Base+0xf4>
   10a24:	ldr	r2, [fp, #-8]
   10a28:	mov	r3, r2
   10a2c:	lsl	r3, r3, #4
   10a30:	add	r3, r3, r2
   10a34:	lsl	r3, r3, #2
   10a38:	mov	r2, r3
   10a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a40:	add	r3, r3, r2
   10a44:	ldr	r3, [r3, #60]	; 0x3c
   10a48:	str	r3, [fp, #-16]
   10a4c:	ldr	r2, [fp, #-8]
   10a50:	mov	r3, r2
   10a54:	lsl	r3, r3, #4
   10a58:	add	r3, r3, r2
   10a5c:	lsl	r3, r3, #2
   10a60:	mov	r2, r3
   10a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a68:	add	r3, r3, r2
   10a6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10a70:	mov	r0, r2
   10a74:	mov	r1, r3
   10a78:	mov	r3, #68	; 0x44
   10a7c:	mov	r2, r3
   10a80:	bl	1065c <memcpy@plt>
   10a84:	ldr	r3, [fp, #-8]
   10a88:	add	r3, r3, #1
   10a8c:	str	r3, [fp, #-8]
   10a90:	ldr	r2, [fp, #-8]
   10a94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10a98:	cmp	r2, r3
   10a9c:	blt	109c4 <analisa_tarefas@@Base+0x34>
   10aa0:	ldr	r3, [fp, #-12]
   10aa4:	vmov	s15, r3
   10aa8:	vcvt.f32.s32	s14, s15
   10aac:	ldr	r3, [fp, #-8]
   10ab0:	vmov	s15, r3
   10ab4:	vcvt.f32.s32	s15, s15
   10ab8:	vdiv.f32	s13, s14, s15
   10abc:	vmov.f32	s15, s13
   10ac0:	vmov.f32	s0, s15
   10ac4:	sub	sp, fp, #4
   10ac8:	pop	{fp, pc}

00010acc <main@@Base>:
   10acc:	push	{fp, lr}
   10ad0:	add	fp, sp, #4
   10ad4:	sub	sp, sp, #6848	; 0x1ac0
   10ad8:	sub	sp, sp, #24
   10adc:	sub	r3, fp, #6784	; 0x1a80
   10ae0:	sub	r3, r3, #4
   10ae4:	sub	r3, r3, #20
   10ae8:	mov	r0, r3
   10aec:	bl	10824 <ler_tarefas@@Base>
   10af0:	str	r0, [fp, #-8]
   10af4:	sub	r3, fp, #6784	; 0x1a80
   10af8:	sub	r3, r3, #4
   10afc:	sub	r3, r3, #20
   10b00:	ldr	r1, [fp, #-8]
   10b04:	mov	r0, r3
   10b08:	bl	1089c <lista_tarefas@@Base>
   10b0c:	ldr	r1, [fp, #-8]
   10b10:	ldr	r0, [pc, #96]	; 10b78 <main@@Base+0xac>
   10b14:	bl	10650 <printf@plt>
   10b18:	sub	r2, fp, #6848	; 0x1ac0
   10b1c:	sub	r2, r2, #4
   10b20:	sub	r2, r2, #24
   10b24:	sub	r3, fp, #6784	; 0x1a80
   10b28:	sub	r3, r3, #4
   10b2c:	sub	r3, r3, #20
   10b30:	ldr	r1, [fp, #-8]
   10b34:	mov	r0, r3
   10b38:	bl	10990 <analisa_tarefas@@Base>
   10b3c:	vmov.f32	s15, s0
   10b40:	vcvt.f64.f32	d7, s15
   10b44:	vmov	r2, r3, d7
   10b48:	ldr	r0, [pc, #44]	; 10b7c <main@@Base+0xb0>
   10b4c:	bl	10650 <printf@plt>
   10b50:	sub	r3, fp, #6848	; 0x1ac0
   10b54:	sub	r3, r3, #4
   10b58:	sub	r3, r3, #24
   10b5c:	mov	r1, r3
   10b60:	ldr	r0, [pc, #24]	; 10b80 <main@@Base+0xb4>
   10b64:	bl	10650 <printf@plt>
   10b68:	mov	r3, #0
   10b6c:	mov	r0, r3
   10b70:	sub	sp, fp, #4
   10b74:	pop	{fp, pc}
   10b78:	andeq	r0, r1, r0, lsl ip
   10b7c:	andeq	r0, r1, r0, lsr ip
   10b80:	andeq	r0, r1, r4, asr ip

00010b84 <__libc_csu_init@@Base>:
   10b84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b88:	mov	r7, r0
   10b8c:	ldr	r6, [pc, #72]	; 10bdc <__libc_csu_init@@Base+0x58>
   10b90:	ldr	r5, [pc, #72]	; 10be0 <__libc_csu_init@@Base+0x5c>
   10b94:	add	r6, pc, r6
   10b98:	add	r5, pc, r5
   10b9c:	sub	r6, r6, r5
   10ba0:	mov	r8, r1
   10ba4:	mov	r9, r2
   10ba8:	bl	10630 <printf@plt-0x20>
   10bac:	asrs	r6, r6, #2
   10bb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bb4:	mov	r4, #0
   10bb8:	add	r4, r4, #1
   10bbc:	ldr	r3, [r5], #4
   10bc0:	mov	r2, r9
   10bc4:	mov	r1, r8
   10bc8:	mov	r0, r7
   10bcc:	blx	r3
   10bd0:	cmp	r6, r4
   10bd4:	bne	10bb8 <__libc_csu_init@@Base+0x34>
   10bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bdc:	andeq	r0, r1, r4, ror r3
   10be0:	andeq	r0, r1, ip, ror #6

00010be4 <__libc_csu_fini@@Base>:
   10be4:	bx	lr

Disassembly of section .fini:

00010be8 <.fini>:
   10be8:	push	{r3, lr}
   10bec:	pop	{r3, pc}
