
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflateResetKeep>:
       0:	sub	sp, sp, #12
       4:	str	r0, [sp, #4]
       8:	ldr	r0, [sp, #4]
       c:	movw	r1, #0
      10:	cmp	r0, r1
      14:	beq	2c <coda_inflateResetKeep+0x2c>
      18:	ldr	r0, [sp, #4]
      1c:	ldr	r0, [r0, #28]
      20:	movw	r1, #0
      24:	cmp	r0, r1
      28:	bne	38 <coda_inflateResetKeep+0x38>
      2c:	mvn	r0, #1
      30:	str	r0, [sp, #8]
      34:	b	114 <coda_inflateResetKeep+0x114>
      38:	ldr	r0, [sp, #4]
      3c:	ldr	r0, [r0, #28]
      40:	str	r0, [sp]
      44:	ldr	r0, [sp]
      48:	movw	r1, #0
      4c:	str	r1, [r0, #28]
      50:	ldr	r0, [sp, #4]
      54:	str	r1, [r0, #20]
      58:	ldr	r0, [sp, #4]
      5c:	str	r1, [r0, #8]
      60:	ldr	r0, [sp, #4]
      64:	str	r1, [r0, #24]
      68:	ldr	r0, [sp]
      6c:	ldr	r0, [r0, #8]
      70:	cmp	r0, #0
      74:	beq	8c <coda_inflateResetKeep+0x8c>
      78:	ldr	r0, [sp]
      7c:	ldr	r0, [r0, #8]
      80:	and	r0, r0, #1
      84:	ldr	r1, [sp, #4]
      88:	str	r0, [r1, #48]	; 0x30
      8c:	ldr	r0, [sp]
      90:	movw	r1, #0
      94:	str	r1, [r0]
      98:	ldr	r0, [sp]
      9c:	str	r1, [r0, #4]
      a0:	ldr	r0, [sp]
      a4:	str	r1, [r0, #12]
      a8:	ldr	r0, [sp]
      ac:	movw	r2, #32768	; 0x8000
      b0:	str	r2, [r0, #20]
      b4:	ldr	r0, [sp]
      b8:	str	r1, [r0, #32]
      bc:	ldr	r0, [sp]
      c0:	str	r1, [r0, #56]	; 0x38
      c4:	ldr	r0, [sp]
      c8:	str	r1, [r0, #60]	; 0x3c
      cc:	ldr	r0, [sp]
      d0:	add	r0, r0, #1328	; 0x530
      d4:	ldr	r2, [sp]
      d8:	str	r0, [r2, #108]	; 0x6c
      dc:	ldr	r2, [sp]
      e0:	str	r0, [r2, #80]	; 0x50
      e4:	ldr	r2, [sp]
      e8:	str	r0, [r2, #76]	; 0x4c
      ec:	ldr	r0, [sp]
      f0:	add	r0, r0, #7104	; 0x1bc0
      f4:	movw	r2, #1
      f8:	str	r2, [r0]
      fc:	ldr	r0, [sp]
     100:	movw	r2, #7108	; 0x1bc4
     104:	add	r0, r0, r2
     108:	mvn	r2, #0
     10c:	str	r2, [r0]
     110:	str	r1, [sp, #8]
     114:	ldr	r0, [sp, #8]
     118:	add	sp, sp, #12
     11c:	bx	lr

00000120 <coda_inflateReset>:
     120:	push	{fp, lr}
     124:	mov	fp, sp
     128:	sub	sp, sp, #16
     12c:	str	r0, [sp, #8]
     130:	ldr	r0, [sp, #8]
     134:	movw	r1, #0
     138:	cmp	r0, r1
     13c:	beq	154 <coda_inflateReset+0x34>
     140:	ldr	r0, [sp, #8]
     144:	ldr	r0, [r0, #28]
     148:	movw	r1, #0
     14c:	cmp	r0, r1
     150:	bne	160 <coda_inflateReset+0x40>
     154:	mvn	r0, #1
     158:	str	r0, [fp, #-4]
     15c:	b	194 <coda_inflateReset+0x74>
     160:	ldr	r0, [sp, #8]
     164:	ldr	r0, [r0, #28]
     168:	str	r0, [sp, #4]
     16c:	ldr	r0, [sp, #4]
     170:	movw	r1, #0
     174:	str	r1, [r0, #40]	; 0x28
     178:	ldr	r0, [sp, #4]
     17c:	str	r1, [r0, #44]	; 0x2c
     180:	ldr	r0, [sp, #4]
     184:	str	r1, [r0, #48]	; 0x30
     188:	ldr	r0, [sp, #8]
     18c:	bl	0 <coda_inflateResetKeep>
     190:	str	r0, [fp, #-4]
     194:	ldr	r0, [fp, #-4]
     198:	mov	sp, fp
     19c:	pop	{fp, pc}

000001a0 <coda_inflateReset2>:
     1a0:	push	{fp, lr}
     1a4:	mov	fp, sp
     1a8:	sub	sp, sp, #24
     1ac:	str	r0, [fp, #-8]
     1b0:	str	r1, [sp, #12]
     1b4:	ldr	r0, [fp, #-8]
     1b8:	movw	r1, #0
     1bc:	cmp	r0, r1
     1c0:	beq	1d8 <coda_inflateReset2+0x38>
     1c4:	ldr	r0, [fp, #-8]
     1c8:	ldr	r0, [r0, #28]
     1cc:	movw	r1, #0
     1d0:	cmp	r0, r1
     1d4:	bne	1e4 <coda_inflateReset2+0x44>
     1d8:	mvn	r0, #1
     1dc:	str	r0, [fp, #-4]
     1e0:	b	2f4 <coda_inflateReset2+0x154>
     1e4:	ldr	r0, [fp, #-8]
     1e8:	ldr	r0, [r0, #28]
     1ec:	str	r0, [sp, #4]
     1f0:	ldr	r0, [sp, #12]
     1f4:	cmp	r0, #0
     1f8:	bge	214 <coda_inflateReset2+0x74>
     1fc:	movw	r0, #0
     200:	str	r0, [sp, #8]
     204:	ldr	r1, [sp, #12]
     208:	sub	r0, r0, r1
     20c:	str	r0, [sp, #12]
     210:	b	240 <coda_inflateReset2+0xa0>
     214:	ldr	r0, [sp, #12]
     218:	asr	r0, r0, #4
     21c:	add	r0, r0, #1
     220:	str	r0, [sp, #8]
     224:	ldr	r0, [sp, #12]
     228:	cmp	r0, #48	; 0x30
     22c:	bge	23c <coda_inflateReset2+0x9c>
     230:	ldr	r0, [sp, #12]
     234:	and	r0, r0, #15
     238:	str	r0, [sp, #12]
     23c:	b	240 <coda_inflateReset2+0xa0>
     240:	ldr	r0, [sp, #12]
     244:	cmp	r0, #0
     248:	beq	270 <coda_inflateReset2+0xd0>
     24c:	ldr	r0, [sp, #12]
     250:	cmp	r0, #8
     254:	blt	264 <coda_inflateReset2+0xc4>
     258:	ldr	r0, [sp, #12]
     25c:	cmp	r0, #15
     260:	ble	270 <coda_inflateReset2+0xd0>
     264:	mvn	r0, #1
     268:	str	r0, [fp, #-4]
     26c:	b	2f4 <coda_inflateReset2+0x154>
     270:	ldr	r0, [sp, #4]
     274:	ldr	r0, [r0, #52]	; 0x34
     278:	movw	r1, #0
     27c:	cmp	r0, r1
     280:	beq	2d0 <coda_inflateReset2+0x130>
     284:	ldr	r0, [sp, #4]
     288:	ldr	r0, [r0, #36]	; 0x24
     28c:	ldr	r1, [sp, #12]
     290:	cmp	r0, r1
     294:	beq	2d0 <coda_inflateReset2+0x130>
     298:	ldr	r0, [fp, #-8]
     29c:	ldr	r0, [r0, #36]	; 0x24
     2a0:	ldr	r1, [fp, #-8]
     2a4:	ldr	r1, [r1, #40]	; 0x28
     2a8:	ldr	r2, [sp, #4]
     2ac:	ldr	r2, [r2, #52]	; 0x34
     2b0:	str	r0, [sp]
     2b4:	mov	r0, r1
     2b8:	mov	r1, r2
     2bc:	ldr	r2, [sp]
     2c0:	blx	r2
     2c4:	ldr	r0, [sp, #4]
     2c8:	movw	r1, #0
     2cc:	str	r1, [r0, #52]	; 0x34
     2d0:	ldr	r0, [sp, #8]
     2d4:	ldr	r1, [sp, #4]
     2d8:	str	r0, [r1, #8]
     2dc:	ldr	r0, [sp, #12]
     2e0:	ldr	r1, [sp, #4]
     2e4:	str	r0, [r1, #36]	; 0x24
     2e8:	ldr	r0, [fp, #-8]
     2ec:	bl	120 <coda_inflateReset>
     2f0:	str	r0, [fp, #-4]
     2f4:	ldr	r0, [fp, #-4]
     2f8:	mov	sp, fp
     2fc:	pop	{fp, pc}

00000300 <coda_inflateInit2_>:
     300:	push	{fp, lr}
     304:	mov	fp, sp
     308:	sub	sp, sp, #40	; 0x28
     30c:	str	r0, [fp, #-8]
     310:	str	r1, [fp, #-12]
     314:	str	r2, [fp, #-16]
     318:	str	r3, [sp, #20]
     31c:	ldr	r0, [fp, #-16]
     320:	movw	r1, #0
     324:	cmp	r0, r1
     328:	beq	354 <coda_inflateInit2_+0x54>
     32c:	ldr	r0, [fp, #-16]
     330:	ldrb	r0, [r0]
     334:	movw	r1, #0
     338:	movt	r1, #0
     33c:	ldrb	r1, [r1]
     340:	cmp	r0, r1
     344:	bne	354 <coda_inflateInit2_+0x54>
     348:	ldr	r0, [sp, #20]
     34c:	cmp	r0, #56	; 0x38
     350:	beq	360 <coda_inflateInit2_+0x60>
     354:	mvn	r0, #5
     358:	str	r0, [fp, #-4]
     35c:	b	490 <coda_inflateInit2_+0x190>
     360:	ldr	r0, [fp, #-8]
     364:	movw	r1, #0
     368:	cmp	r0, r1
     36c:	bne	37c <coda_inflateInit2_+0x7c>
     370:	mvn	r0, #1
     374:	str	r0, [fp, #-4]
     378:	b	490 <coda_inflateInit2_+0x190>
     37c:	ldr	r0, [fp, #-8]
     380:	movw	r1, #0
     384:	str	r1, [r0, #24]
     388:	ldr	r0, [fp, #-8]
     38c:	ldr	r0, [r0, #32]
     390:	cmp	r0, r1
     394:	bne	3b4 <coda_inflateInit2_+0xb4>
     398:	ldr	r0, [fp, #-8]
     39c:	movw	r1, #0
     3a0:	movt	r1, #0
     3a4:	str	r1, [r0, #32]
     3a8:	ldr	r0, [fp, #-8]
     3ac:	movw	r1, #0
     3b0:	str	r1, [r0, #40]	; 0x28
     3b4:	ldr	r0, [fp, #-8]
     3b8:	ldr	r0, [r0, #36]	; 0x24
     3bc:	movw	r1, #0
     3c0:	cmp	r0, r1
     3c4:	bne	3d8 <coda_inflateInit2_+0xd8>
     3c8:	ldr	r0, [fp, #-8]
     3cc:	movw	r1, #0
     3d0:	movt	r1, #0
     3d4:	str	r1, [r0, #36]	; 0x24
     3d8:	ldr	r0, [fp, #-8]
     3dc:	ldr	r0, [r0, #32]
     3e0:	ldr	r1, [fp, #-8]
     3e4:	ldr	r1, [r1, #40]	; 0x28
     3e8:	str	r0, [sp, #8]
     3ec:	mov	r0, r1
     3f0:	movw	r1, #1
     3f4:	movw	r2, #7116	; 0x1bcc
     3f8:	ldr	r3, [sp, #8]
     3fc:	blx	r3
     400:	str	r0, [sp, #12]
     404:	ldr	r0, [sp, #12]
     408:	movw	r1, #0
     40c:	cmp	r0, r1
     410:	bne	420 <coda_inflateInit2_+0x120>
     414:	mvn	r0, #3
     418:	str	r0, [fp, #-4]
     41c:	b	490 <coda_inflateInit2_+0x190>
     420:	ldr	r0, [sp, #12]
     424:	ldr	r1, [fp, #-8]
     428:	str	r0, [r1, #28]
     42c:	ldr	r0, [sp, #12]
     430:	movw	r1, #0
     434:	str	r1, [r0, #52]	; 0x34
     438:	ldr	r0, [fp, #-8]
     43c:	ldr	r1, [fp, #-12]
     440:	bl	1a0 <coda_inflateReset2>
     444:	str	r0, [sp, #16]
     448:	ldr	r0, [sp, #16]
     44c:	cmp	r0, #0
     450:	beq	488 <coda_inflateInit2_+0x188>
     454:	ldr	r0, [fp, #-8]
     458:	ldr	r0, [r0, #36]	; 0x24
     45c:	ldr	r1, [fp, #-8]
     460:	ldr	r1, [r1, #40]	; 0x28
     464:	ldr	r2, [sp, #12]
     468:	str	r0, [sp, #4]
     46c:	mov	r0, r1
     470:	mov	r1, r2
     474:	ldr	r2, [sp, #4]
     478:	blx	r2
     47c:	ldr	r0, [fp, #-8]
     480:	movw	r1, #0
     484:	str	r1, [r0, #28]
     488:	ldr	r0, [sp, #16]
     48c:	str	r0, [fp, #-4]
     490:	ldr	r0, [fp, #-4]
     494:	mov	sp, fp
     498:	pop	{fp, pc}

0000049c <coda_inflateInit_>:
     49c:	push	{fp, lr}
     4a0:	mov	fp, sp
     4a4:	sub	sp, sp, #16
     4a8:	str	r0, [fp, #-4]
     4ac:	str	r1, [sp, #8]
     4b0:	str	r2, [sp, #4]
     4b4:	ldr	r0, [fp, #-4]
     4b8:	ldr	r2, [sp, #8]
     4bc:	ldr	r3, [sp, #4]
     4c0:	movw	r1, #15
     4c4:	bl	300 <coda_inflateInit2_>
     4c8:	mov	sp, fp
     4cc:	pop	{fp, pc}

000004d0 <coda_inflatePrime>:
     4d0:	sub	sp, sp, #20
     4d4:	str	r0, [sp, #12]
     4d8:	str	r1, [sp, #8]
     4dc:	str	r2, [sp, #4]
     4e0:	ldr	r0, [sp, #12]
     4e4:	movw	r1, #0
     4e8:	cmp	r0, r1
     4ec:	beq	504 <coda_inflatePrime+0x34>
     4f0:	ldr	r0, [sp, #12]
     4f4:	ldr	r0, [r0, #28]
     4f8:	movw	r1, #0
     4fc:	cmp	r0, r1
     500:	bne	510 <coda_inflatePrime+0x40>
     504:	mvn	r0, #1
     508:	str	r0, [sp, #16]
     50c:	b	5cc <coda_inflatePrime+0xfc>
     510:	ldr	r0, [sp, #12]
     514:	ldr	r0, [r0, #28]
     518:	str	r0, [sp]
     51c:	ldr	r0, [sp, #8]
     520:	cmp	r0, #0
     524:	bge	544 <coda_inflatePrime+0x74>
     528:	ldr	r0, [sp]
     52c:	movw	r1, #0
     530:	str	r1, [r0, #56]	; 0x38
     534:	ldr	r0, [sp]
     538:	str	r1, [r0, #60]	; 0x3c
     53c:	str	r1, [sp, #16]
     540:	b	5cc <coda_inflatePrime+0xfc>
     544:	ldr	r0, [sp, #8]
     548:	cmp	r0, #16
     54c:	bgt	568 <coda_inflatePrime+0x98>
     550:	ldr	r0, [sp]
     554:	ldr	r0, [r0, #60]	; 0x3c
     558:	ldr	r1, [sp, #8]
     55c:	add	r0, r0, r1
     560:	cmp	r0, #32
     564:	bls	574 <coda_inflatePrime+0xa4>
     568:	mvn	r0, #1
     56c:	str	r0, [sp, #16]
     570:	b	5cc <coda_inflatePrime+0xfc>
     574:	ldr	r0, [sp, #8]
     578:	movw	r1, #1
     57c:	lsl	r0, r1, r0
     580:	sub	r0, r0, #1
     584:	ldr	r1, [sp, #4]
     588:	and	r0, r1, r0
     58c:	str	r0, [sp, #4]
     590:	ldr	r0, [sp, #4]
     594:	ldr	r1, [sp]
     598:	ldr	r1, [r1, #60]	; 0x3c
     59c:	lsl	r0, r0, r1
     5a0:	ldr	r1, [sp]
     5a4:	ldr	r2, [r1, #56]	; 0x38
     5a8:	add	r0, r2, r0
     5ac:	str	r0, [r1, #56]	; 0x38
     5b0:	ldr	r0, [sp, #8]
     5b4:	ldr	r1, [sp]
     5b8:	ldr	r2, [r1, #60]	; 0x3c
     5bc:	add	r0, r2, r0
     5c0:	str	r0, [r1, #60]	; 0x3c
     5c4:	movw	r0, #0
     5c8:	str	r0, [sp, #16]
     5cc:	ldr	r0, [sp, #16]
     5d0:	add	sp, sp, #20
     5d4:	bx	lr

000005d8 <coda_inflate>:
     5d8:	push	{r4, sl, fp, lr}
     5dc:	add	fp, sp, #8
     5e0:	sub	sp, sp, #168	; 0xa8
     5e4:	str	r0, [fp, #-16]
     5e8:	str	r1, [fp, #-20]	; 0xffffffec
     5ec:	ldr	r0, [fp, #-16]
     5f0:	movw	r1, #0
     5f4:	cmp	r0, r1
     5f8:	beq	648 <coda_inflate+0x70>
     5fc:	ldr	r0, [fp, #-16]
     600:	ldr	r0, [r0, #28]
     604:	movw	r1, #0
     608:	cmp	r0, r1
     60c:	beq	648 <coda_inflate+0x70>
     610:	ldr	r0, [fp, #-16]
     614:	ldr	r0, [r0, #12]
     618:	movw	r1, #0
     61c:	cmp	r0, r1
     620:	beq	648 <coda_inflate+0x70>
     624:	ldr	r0, [fp, #-16]
     628:	ldr	r0, [r0]
     62c:	movw	r1, #0
     630:	cmp	r0, r1
     634:	bne	654 <coda_inflate+0x7c>
     638:	ldr	r0, [fp, #-16]
     63c:	ldr	r0, [r0, #4]
     640:	cmp	r0, #0
     644:	beq	654 <coda_inflate+0x7c>
     648:	mvn	r0, #1
     64c:	str	r0, [fp, #-12]
     650:	b	342c <coda_inflate+0x2e54>
     654:	ldr	r0, [fp, #-16]
     658:	ldr	r0, [r0, #28]
     65c:	str	r0, [fp, #-24]	; 0xffffffe8
     660:	ldr	r0, [fp, #-24]	; 0xffffffe8
     664:	ldr	r0, [r0]
     668:	cmp	r0, #11
     66c:	bne	67c <coda_inflate+0xa4>
     670:	ldr	r0, [fp, #-24]	; 0xffffffe8
     674:	movw	r1, #12
     678:	str	r1, [r0]
     67c:	b	680 <coda_inflate+0xa8>
     680:	ldr	r0, [fp, #-16]
     684:	ldr	r0, [r0, #12]
     688:	str	r0, [fp, #-32]	; 0xffffffe0
     68c:	ldr	r0, [fp, #-16]
     690:	ldr	r0, [r0, #16]
     694:	str	r0, [fp, #-40]	; 0xffffffd8
     698:	ldr	r0, [fp, #-16]
     69c:	ldr	r0, [r0]
     6a0:	str	r0, [fp, #-28]	; 0xffffffe4
     6a4:	ldr	r0, [fp, #-16]
     6a8:	ldr	r0, [r0, #4]
     6ac:	str	r0, [fp, #-36]	; 0xffffffdc
     6b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6b4:	ldr	r0, [r0, #56]	; 0x38
     6b8:	str	r0, [fp, #-44]	; 0xffffffd4
     6bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6c0:	ldr	r0, [r0, #60]	; 0x3c
     6c4:	str	r0, [fp, #-48]	; 0xffffffd0
     6c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     6cc:	str	r0, [fp, #-52]	; 0xffffffcc
     6d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     6d4:	str	r0, [fp, #-56]	; 0xffffffc8
     6d8:	movw	r0, #0
     6dc:	str	r0, [fp, #-80]	; 0xffffffb0
     6e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6e4:	ldr	r0, [r0]
     6e8:	cmp	r0, #31
     6ec:	str	r0, [sp, #88]	; 0x58
     6f0:	bhi	3158 <coda_inflate+0x2b80>
     6f4:	add	r0, pc, #8
     6f8:	ldr	r1, [sp, #88]	; 0x58
     6fc:	ldr	r0, [r0, r1, lsl #2]
     700:	mov	pc, r0
     704:	.word	0x00000784
     708:	.word	0x00000a64
     70c:	.word	0x00000bdc
     710:	.word	0x00000cf0
     714:	.word	0x00000e04
     718:	.word	0x00000f4c
     71c:	.word	0x000010ec
     720:	.word	0x00001284
     724:	.word	0x00001410
     728:	.word	0x00001558
     72c:	.word	0x0000162c
     730:	.word	0x000016c4
     734:	.word	0x000016e4
     738:	.word	0x0000189c
     73c:	.word	0x000019b8
     740:	.word	0x000019c4
     744:	.word	0x00001a94
     748:	.word	0x00001be8
     74c:	.word	0x00001dcc
     750:	.word	0x000023ec
     754:	.word	0x000023f8
     758:	.word	0x000027a4
     75c:	.word	0x000028c8
     760:	.word	0x00002b24
     764:	.word	0x00002c30
     768:	.word	0x00002e10
     76c:	.word	0x00002e58
     770:	.word	0x0000304c
     774:	.word	0x00003130
     778:	.word	0x0000313c
     77c:	.word	0x00003148
     780:	.word	0x00003154
     784:	ldr	r0, [fp, #-24]	; 0xffffffe8
     788:	ldr	r0, [r0, #8]
     78c:	cmp	r0, #0
     790:	bne	7a4 <coda_inflate+0x1cc>
     794:	ldr	r0, [fp, #-24]	; 0xffffffe8
     798:	movw	r1, #12
     79c:	str	r1, [r0]
     7a0:	b	3164 <coda_inflate+0x2b8c>
     7a4:	b	7a8 <coda_inflate+0x1d0>
     7a8:	b	7ac <coda_inflate+0x1d4>
     7ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
     7b0:	cmp	r0, #16
     7b4:	bcs	810 <coda_inflate+0x238>
     7b8:	b	7bc <coda_inflate+0x1e4>
     7bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7c0:	cmp	r0, #0
     7c4:	bne	7cc <coda_inflate+0x1f4>
     7c8:	b	3168 <coda_inflate+0x2b90>
     7cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7d0:	mvn	r1, #0
     7d4:	add	r0, r0, r1
     7d8:	str	r0, [fp, #-36]	; 0xffffffdc
     7dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     7e0:	add	r1, r0, #1
     7e4:	str	r1, [fp, #-28]	; 0xffffffe4
     7e8:	ldrb	r0, [r0]
     7ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
     7f0:	lsl	r0, r0, r1
     7f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     7f8:	add	r0, r1, r0
     7fc:	str	r0, [fp, #-44]	; 0xffffffd4
     800:	ldr	r0, [fp, #-48]	; 0xffffffd0
     804:	add	r0, r0, #8
     808:	str	r0, [fp, #-48]	; 0xffffffd0
     80c:	b	7ac <coda_inflate+0x1d4>
     810:	b	814 <coda_inflate+0x23c>
     814:	ldr	r0, [fp, #-24]	; 0xffffffe8
     818:	ldr	r0, [r0, #8]
     81c:	and	r0, r0, #2
     820:	cmp	r0, #0
     824:	beq	8a4 <coda_inflate+0x2cc>
     828:	ldr	r0, [fp, #-44]	; 0xffffffd4
     82c:	movw	r1, #35615	; 0x8b1f
     830:	cmp	r0, r1
     834:	bne	8a4 <coda_inflate+0x2cc>
     838:	movw	r0, #0
     83c:	str	r0, [sp, #84]	; 0x54
     840:	ldr	r1, [sp, #84]	; 0x54
     844:	ldr	r2, [sp, #84]	; 0x54
     848:	bl	0 <coda_crc32>
     84c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     850:	str	r0, [r1, #24]
     854:	sub	r1, fp, #84	; 0x54
     858:	ldr	r0, [fp, #-44]	; 0xffffffd4
     85c:	strb	r0, [fp, #-84]	; 0xffffffac
     860:	ldr	r0, [fp, #-44]	; 0xffffffd4
     864:	lsr	r0, r0, #8
     868:	strb	r0, [fp, #-83]	; 0xffffffad
     86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     870:	ldr	r0, [r0, #24]
     874:	movw	r2, #2
     878:	bl	0 <coda_crc32>
     87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     880:	str	r0, [r1, #24]
     884:	b	888 <coda_inflate+0x2b0>
     888:	movw	r0, #0
     88c:	str	r0, [fp, #-44]	; 0xffffffd4
     890:	str	r0, [fp, #-48]	; 0xffffffd0
     894:	ldr	r0, [fp, #-24]	; 0xffffffe8
     898:	movw	r1, #1
     89c:	str	r1, [r0]
     8a0:	b	3164 <coda_inflate+0x2b8c>
     8a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8a8:	movw	r1, #0
     8ac:	str	r1, [r0, #16]
     8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8b4:	ldr	r0, [r0, #32]
     8b8:	cmp	r0, r1
     8bc:	beq	8d0 <coda_inflate+0x2f8>
     8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8c4:	ldr	r0, [r0, #32]
     8c8:	mvn	r1, #0
     8cc:	str	r1, [r0, #48]	; 0x30
     8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8d4:	ldr	r0, [r0, #8]
     8d8:	and	r0, r0, #1
     8dc:	cmp	r0, #0
     8e0:	beq	920 <coda_inflate+0x348>
     8e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     8e8:	uxtb	r1, r0
     8ec:	lsl	r1, r1, #8
     8f0:	add	r0, r1, r0, lsr #8
     8f4:	movw	r1, #4229	; 0x1085
     8f8:	movt	r1, #2114	; 0x842
     8fc:	umull	r1, r2, r0, r1
     900:	sub	r3, r0, r2
     904:	add	r2, r2, r3, lsr #1
     908:	lsr	r3, r2, #4
     90c:	lsl	r3, r3, #5
     910:	sub	r2, r3, r2, lsr #4
     914:	sub	r0, r0, r2
     918:	cmp	r0, #0
     91c:	beq	940 <coda_inflate+0x368>
     920:	ldr	r0, [fp, #-16]
     924:	movw	r1, #0
     928:	movt	r1, #0
     92c:	str	r1, [r0, #24]
     930:	ldr	r0, [fp, #-24]	; 0xffffffe8
     934:	movw	r1, #29
     938:	str	r1, [r0]
     93c:	b	3164 <coda_inflate+0x2b8c>
     940:	ldr	r0, [fp, #-44]	; 0xffffffd4
     944:	and	r0, r0, #15
     948:	cmp	r0, #8
     94c:	beq	970 <coda_inflate+0x398>
     950:	ldr	r0, [fp, #-16]
     954:	movw	r1, #0
     958:	movt	r1, #0
     95c:	str	r1, [r0, #24]
     960:	ldr	r0, [fp, #-24]	; 0xffffffe8
     964:	movw	r1, #29
     968:	str	r1, [r0]
     96c:	b	3164 <coda_inflate+0x2b8c>
     970:	b	974 <coda_inflate+0x39c>
     974:	ldr	r0, [fp, #-44]	; 0xffffffd4
     978:	lsr	r0, r0, #4
     97c:	str	r0, [fp, #-44]	; 0xffffffd4
     980:	ldr	r0, [fp, #-48]	; 0xffffffd0
     984:	sub	r0, r0, #4
     988:	str	r0, [fp, #-48]	; 0xffffffd0
     98c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     990:	and	r0, r0, #15
     994:	add	r0, r0, #8
     998:	str	r0, [fp, #-76]	; 0xffffffb4
     99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9a0:	ldr	r0, [r0, #36]	; 0x24
     9a4:	cmp	r0, #0
     9a8:	bne	9bc <coda_inflate+0x3e4>
     9ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
     9b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9b4:	str	r0, [r1, #36]	; 0x24
     9b8:	b	9f4 <coda_inflate+0x41c>
     9bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
     9c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9c4:	ldr	r1, [r1, #36]	; 0x24
     9c8:	cmp	r0, r1
     9cc:	bls	9f0 <coda_inflate+0x418>
     9d0:	ldr	r0, [fp, #-16]
     9d4:	movw	r1, #0
     9d8:	movt	r1, #0
     9dc:	str	r1, [r0, #24]
     9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9e4:	movw	r1, #29
     9e8:	str	r1, [r0]
     9ec:	b	3164 <coda_inflate+0x2b8c>
     9f0:	b	9f4 <coda_inflate+0x41c>
     9f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
     9f8:	movw	r1, #1
     9fc:	lsl	r0, r1, r0
     a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a04:	str	r0, [r1, #20]
     a08:	movw	r0, #0
     a0c:	str	r0, [sp, #80]	; 0x50
     a10:	ldr	r1, [sp, #80]	; 0x50
     a14:	ldr	r2, [sp, #80]	; 0x50
     a18:	bl	0 <coda_adler32>
     a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a20:	str	r0, [r1, #24]
     a24:	ldr	r1, [fp, #-16]
     a28:	str	r0, [r1, #48]	; 0x30
     a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a30:	and	r0, r0, #512	; 0x200
     a34:	cmp	r0, #0
     a38:	movw	r0, #0
     a3c:	movne	r0, #1
     a40:	tst	r0, #1
     a44:	movw	r0, #9
     a48:	moveq	r0, #11
     a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a50:	str	r0, [r1]
     a54:	movw	r0, #0
     a58:	str	r0, [fp, #-44]	; 0xffffffd4
     a5c:	str	r0, [fp, #-48]	; 0xffffffd0
     a60:	b	3164 <coda_inflate+0x2b8c>
     a64:	b	a68 <coda_inflate+0x490>
     a68:	b	a6c <coda_inflate+0x494>
     a6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     a70:	cmp	r0, #16
     a74:	bcs	ad0 <coda_inflate+0x4f8>
     a78:	b	a7c <coda_inflate+0x4a4>
     a7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a80:	cmp	r0, #0
     a84:	bne	a8c <coda_inflate+0x4b4>
     a88:	b	3168 <coda_inflate+0x2b90>
     a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a90:	mvn	r1, #0
     a94:	add	r0, r0, r1
     a98:	str	r0, [fp, #-36]	; 0xffffffdc
     a9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     aa0:	add	r1, r0, #1
     aa4:	str	r1, [fp, #-28]	; 0xffffffe4
     aa8:	ldrb	r0, [r0]
     aac:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ab0:	lsl	r0, r0, r1
     ab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     ab8:	add	r0, r1, r0
     abc:	str	r0, [fp, #-44]	; 0xffffffd4
     ac0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ac4:	add	r0, r0, #8
     ac8:	str	r0, [fp, #-48]	; 0xffffffd0
     acc:	b	a6c <coda_inflate+0x494>
     ad0:	b	ad4 <coda_inflate+0x4fc>
     ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     adc:	str	r0, [r1, #16]
     ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ae4:	ldr	r0, [r0, #16]
     ae8:	and	r0, r0, #255	; 0xff
     aec:	cmp	r0, #8
     af0:	beq	b14 <coda_inflate+0x53c>
     af4:	ldr	r0, [fp, #-16]
     af8:	movw	r1, #0
     afc:	movt	r1, #0
     b00:	str	r1, [r0, #24]
     b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b08:	movw	r1, #29
     b0c:	str	r1, [r0]
     b10:	b	3164 <coda_inflate+0x2b8c>
     b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b18:	ldr	r0, [r0, #16]
     b1c:	and	r0, r0, #57344	; 0xe000
     b20:	cmp	r0, #0
     b24:	beq	b48 <coda_inflate+0x570>
     b28:	ldr	r0, [fp, #-16]
     b2c:	movw	r1, #0
     b30:	movt	r1, #0
     b34:	str	r1, [r0, #24]
     b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b3c:	movw	r1, #29
     b40:	str	r1, [r0]
     b44:	b	3164 <coda_inflate+0x2b8c>
     b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b4c:	ldr	r0, [r0, #32]
     b50:	movw	r1, #0
     b54:	cmp	r0, r1
     b58:	beq	b74 <coda_inflate+0x59c>
     b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b60:	lsr	r0, r0, #8
     b64:	and	r0, r0, #1
     b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b6c:	ldr	r1, [r1, #32]
     b70:	str	r0, [r1]
     b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b78:	ldr	r0, [r0, #16]
     b7c:	and	r0, r0, #512	; 0x200
     b80:	cmp	r0, #0
     b84:	beq	bc0 <coda_inflate+0x5e8>
     b88:	b	b8c <coda_inflate+0x5b4>
     b8c:	sub	r1, fp, #84	; 0x54
     b90:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b94:	strb	r0, [fp, #-84]	; 0xffffffac
     b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b9c:	lsr	r0, r0, #8
     ba0:	strb	r0, [fp, #-83]	; 0xffffffad
     ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ba8:	ldr	r0, [r0, #24]
     bac:	movw	r2, #2
     bb0:	bl	0 <coda_crc32>
     bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     bb8:	str	r0, [r1, #24]
     bbc:	b	bc0 <coda_inflate+0x5e8>
     bc0:	b	bc4 <coda_inflate+0x5ec>
     bc4:	movw	r0, #0
     bc8:	str	r0, [fp, #-44]	; 0xffffffd4
     bcc:	str	r0, [fp, #-48]	; 0xffffffd0
     bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bd4:	movw	r1, #2
     bd8:	str	r1, [r0]
     bdc:	b	be0 <coda_inflate+0x608>
     be0:	b	be4 <coda_inflate+0x60c>
     be4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     be8:	cmp	r0, #32
     bec:	bcs	c48 <coda_inflate+0x670>
     bf0:	b	bf4 <coda_inflate+0x61c>
     bf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
     bf8:	cmp	r0, #0
     bfc:	bne	c04 <coda_inflate+0x62c>
     c00:	b	3168 <coda_inflate+0x2b90>
     c04:	ldr	r0, [fp, #-36]	; 0xffffffdc
     c08:	mvn	r1, #0
     c0c:	add	r0, r0, r1
     c10:	str	r0, [fp, #-36]	; 0xffffffdc
     c14:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c18:	add	r1, r0, #1
     c1c:	str	r1, [fp, #-28]	; 0xffffffe4
     c20:	ldrb	r0, [r0]
     c24:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c28:	lsl	r0, r0, r1
     c2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
     c30:	add	r0, r1, r0
     c34:	str	r0, [fp, #-44]	; 0xffffffd4
     c38:	ldr	r0, [fp, #-48]	; 0xffffffd0
     c3c:	add	r0, r0, #8
     c40:	str	r0, [fp, #-48]	; 0xffffffd0
     c44:	b	be4 <coda_inflate+0x60c>
     c48:	b	c4c <coda_inflate+0x674>
     c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c50:	ldr	r0, [r0, #32]
     c54:	movw	r1, #0
     c58:	cmp	r0, r1
     c5c:	beq	c70 <coda_inflate+0x698>
     c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c64:	ldr	r1, [fp, #-24]	; 0xffffffe8
     c68:	ldr	r1, [r1, #32]
     c6c:	str	r0, [r1, #4]
     c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c74:	ldr	r0, [r0, #16]
     c78:	and	r0, r0, #512	; 0x200
     c7c:	cmp	r0, #0
     c80:	beq	cd4 <coda_inflate+0x6fc>
     c84:	b	c88 <coda_inflate+0x6b0>
     c88:	sub	r1, fp, #84	; 0x54
     c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c90:	strb	r0, [fp, #-84]	; 0xffffffac
     c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c98:	lsr	r0, r0, #8
     c9c:	strb	r0, [fp, #-83]	; 0xffffffad
     ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ca4:	lsr	r0, r0, #16
     ca8:	strb	r0, [fp, #-82]	; 0xffffffae
     cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
     cb0:	lsr	r0, r0, #24
     cb4:	strb	r0, [fp, #-81]	; 0xffffffaf
     cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cbc:	ldr	r0, [r0, #24]
     cc0:	movw	r2, #4
     cc4:	bl	0 <coda_crc32>
     cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ccc:	str	r0, [r1, #24]
     cd0:	b	cd4 <coda_inflate+0x6fc>
     cd4:	b	cd8 <coda_inflate+0x700>
     cd8:	movw	r0, #0
     cdc:	str	r0, [fp, #-44]	; 0xffffffd4
     ce0:	str	r0, [fp, #-48]	; 0xffffffd0
     ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ce8:	movw	r1, #3
     cec:	str	r1, [r0]
     cf0:	b	cf4 <coda_inflate+0x71c>
     cf4:	b	cf8 <coda_inflate+0x720>
     cf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     cfc:	cmp	r0, #16
     d00:	bcs	d5c <coda_inflate+0x784>
     d04:	b	d08 <coda_inflate+0x730>
     d08:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d0c:	cmp	r0, #0
     d10:	bne	d18 <coda_inflate+0x740>
     d14:	b	3168 <coda_inflate+0x2b90>
     d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d1c:	mvn	r1, #0
     d20:	add	r0, r0, r1
     d24:	str	r0, [fp, #-36]	; 0xffffffdc
     d28:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d2c:	add	r1, r0, #1
     d30:	str	r1, [fp, #-28]	; 0xffffffe4
     d34:	ldrb	r0, [r0]
     d38:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d3c:	lsl	r0, r0, r1
     d40:	ldr	r1, [fp, #-44]	; 0xffffffd4
     d44:	add	r0, r1, r0
     d48:	str	r0, [fp, #-44]	; 0xffffffd4
     d4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     d50:	add	r0, r0, #8
     d54:	str	r0, [fp, #-48]	; 0xffffffd0
     d58:	b	cf8 <coda_inflate+0x720>
     d5c:	b	d60 <coda_inflate+0x788>
     d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d64:	ldr	r0, [r0, #32]
     d68:	movw	r1, #0
     d6c:	cmp	r0, r1
     d70:	beq	d9c <coda_inflate+0x7c4>
     d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d78:	and	r0, r0, #255	; 0xff
     d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d80:	ldr	r1, [r1, #32]
     d84:	str	r0, [r1, #8]
     d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d8c:	lsr	r0, r0, #8
     d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d94:	ldr	r1, [r1, #32]
     d98:	str	r0, [r1, #12]
     d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     da0:	ldr	r0, [r0, #16]
     da4:	and	r0, r0, #512	; 0x200
     da8:	cmp	r0, #0
     dac:	beq	de8 <coda_inflate+0x810>
     db0:	b	db4 <coda_inflate+0x7dc>
     db4:	sub	r1, fp, #84	; 0x54
     db8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     dbc:	strb	r0, [fp, #-84]	; 0xffffffac
     dc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     dc4:	lsr	r0, r0, #8
     dc8:	strb	r0, [fp, #-83]	; 0xffffffad
     dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     dd0:	ldr	r0, [r0, #24]
     dd4:	movw	r2, #2
     dd8:	bl	0 <coda_crc32>
     ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     de0:	str	r0, [r1, #24]
     de4:	b	de8 <coda_inflate+0x810>
     de8:	b	dec <coda_inflate+0x814>
     dec:	movw	r0, #0
     df0:	str	r0, [fp, #-44]	; 0xffffffd4
     df4:	str	r0, [fp, #-48]	; 0xffffffd0
     df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     dfc:	movw	r1, #4
     e00:	str	r1, [r0]
     e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e08:	ldr	r0, [r0, #16]
     e0c:	and	r0, r0, #1024	; 0x400
     e10:	cmp	r0, #0
     e14:	beq	f18 <coda_inflate+0x940>
     e18:	b	e1c <coda_inflate+0x844>
     e1c:	b	e20 <coda_inflate+0x848>
     e20:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e24:	cmp	r0, #16
     e28:	bcs	e84 <coda_inflate+0x8ac>
     e2c:	b	e30 <coda_inflate+0x858>
     e30:	ldr	r0, [fp, #-36]	; 0xffffffdc
     e34:	cmp	r0, #0
     e38:	bne	e40 <coda_inflate+0x868>
     e3c:	b	3168 <coda_inflate+0x2b90>
     e40:	ldr	r0, [fp, #-36]	; 0xffffffdc
     e44:	mvn	r1, #0
     e48:	add	r0, r0, r1
     e4c:	str	r0, [fp, #-36]	; 0xffffffdc
     e50:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e54:	add	r1, r0, #1
     e58:	str	r1, [fp, #-28]	; 0xffffffe4
     e5c:	ldrb	r0, [r0]
     e60:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e64:	lsl	r0, r0, r1
     e68:	ldr	r1, [fp, #-44]	; 0xffffffd4
     e6c:	add	r0, r1, r0
     e70:	str	r0, [fp, #-44]	; 0xffffffd4
     e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e78:	add	r0, r0, #8
     e7c:	str	r0, [fp, #-48]	; 0xffffffd0
     e80:	b	e20 <coda_inflate+0x848>
     e84:	b	e88 <coda_inflate+0x8b0>
     e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
     e8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e90:	str	r0, [r1, #64]	; 0x40
     e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e98:	ldr	r0, [r0, #32]
     e9c:	movw	r1, #0
     ea0:	cmp	r0, r1
     ea4:	beq	eb8 <coda_inflate+0x8e0>
     ea8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     eac:	ldr	r1, [fp, #-24]	; 0xffffffe8
     eb0:	ldr	r1, [r1, #32]
     eb4:	str	r0, [r1, #20]
     eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ebc:	ldr	r0, [r0, #16]
     ec0:	and	r0, r0, #512	; 0x200
     ec4:	cmp	r0, #0
     ec8:	beq	f04 <coda_inflate+0x92c>
     ecc:	b	ed0 <coda_inflate+0x8f8>
     ed0:	sub	r1, fp, #84	; 0x54
     ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ed8:	strb	r0, [fp, #-84]	; 0xffffffac
     edc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ee0:	lsr	r0, r0, #8
     ee4:	strb	r0, [fp, #-83]	; 0xffffffad
     ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     eec:	ldr	r0, [r0, #24]
     ef0:	movw	r2, #2
     ef4:	bl	0 <coda_crc32>
     ef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     efc:	str	r0, [r1, #24]
     f00:	b	f04 <coda_inflate+0x92c>
     f04:	b	f08 <coda_inflate+0x930>
     f08:	movw	r0, #0
     f0c:	str	r0, [fp, #-44]	; 0xffffffd4
     f10:	str	r0, [fp, #-48]	; 0xffffffd0
     f14:	b	f40 <coda_inflate+0x968>
     f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f1c:	ldr	r0, [r0, #32]
     f20:	movw	r1, #0
     f24:	cmp	r0, r1
     f28:	beq	f3c <coda_inflate+0x964>
     f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f30:	ldr	r0, [r0, #32]
     f34:	movw	r1, #0
     f38:	str	r1, [r0, #16]
     f3c:	b	f40 <coda_inflate+0x968>
     f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f44:	movw	r1, #5
     f48:	str	r1, [r0]
     f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f50:	ldr	r0, [r0, #16]
     f54:	and	r0, r0, #1024	; 0x400
     f58:	cmp	r0, #0
     f5c:	beq	10d4 <coda_inflate+0xafc>
     f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f64:	ldr	r0, [r0, #64]	; 0x40
     f68:	str	r0, [fp, #-60]	; 0xffffffc4
     f6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
     f70:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f74:	cmp	r0, r1
     f78:	bls	f84 <coda_inflate+0x9ac>
     f7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f80:	str	r0, [fp, #-60]	; 0xffffffc4
     f84:	ldr	r0, [fp, #-60]	; 0xffffffc4
     f88:	cmp	r0, #0
     f8c:	beq	10bc <coda_inflate+0xae4>
     f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f94:	ldr	r0, [r0, #32]
     f98:	movw	r1, #0
     f9c:	cmp	r0, r1
     fa0:	beq	1058 <coda_inflate+0xa80>
     fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fa8:	ldr	r0, [r0, #32]
     fac:	ldr	r0, [r0, #16]
     fb0:	movw	r1, #0
     fb4:	cmp	r0, r1
     fb8:	beq	1058 <coda_inflate+0xa80>
     fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fc0:	ldr	r0, [r0, #32]
     fc4:	ldr	r0, [r0, #20]
     fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     fcc:	ldr	r1, [r1, #64]	; 0x40
     fd0:	sub	r0, r0, r1
     fd4:	str	r0, [fp, #-76]	; 0xffffffb4
     fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fdc:	ldr	r0, [r0, #32]
     fe0:	ldr	r0, [r0, #16]
     fe4:	ldr	r1, [fp, #-76]	; 0xffffffb4
     fe8:	add	r0, r0, r1
     fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
     ff0:	ldr	r2, [fp, #-76]	; 0xffffffb4
     ff4:	ldr	r3, [fp, #-60]	; 0xffffffc4
     ff8:	add	r2, r2, r3
     ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1000:	ldr	r3, [r3, #32]
    1004:	ldr	r3, [r3, #24]
    1008:	cmp	r2, r3
    100c:	str	r0, [sp, #76]	; 0x4c
    1010:	str	r1, [sp, #72]	; 0x48
    1014:	bls	1034 <coda_inflate+0xa5c>
    1018:	ldr	r0, [fp, #-24]	; 0xffffffe8
    101c:	ldr	r0, [r0, #32]
    1020:	ldr	r0, [r0, #24]
    1024:	ldr	r1, [fp, #-76]	; 0xffffffb4
    1028:	sub	r0, r0, r1
    102c:	str	r0, [sp, #68]	; 0x44
    1030:	b	103c <coda_inflate+0xa64>
    1034:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1038:	str	r0, [sp, #68]	; 0x44
    103c:	ldr	r0, [sp, #68]	; 0x44
    1040:	ldr	r1, [sp, #76]	; 0x4c
    1044:	str	r0, [sp, #64]	; 0x40
    1048:	mov	r0, r1
    104c:	ldr	r1, [sp, #72]	; 0x48
    1050:	ldr	r2, [sp, #64]	; 0x40
    1054:	bl	0 <memcpy>
    1058:	ldr	r0, [fp, #-24]	; 0xffffffe8
    105c:	ldr	r0, [r0, #16]
    1060:	and	r0, r0, #512	; 0x200
    1064:	cmp	r0, #0
    1068:	beq	1088 <coda_inflate+0xab0>
    106c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1070:	ldr	r0, [r0, #24]
    1074:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1078:	ldr	r2, [fp, #-60]	; 0xffffffc4
    107c:	bl	0 <coda_crc32>
    1080:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1084:	str	r0, [r1, #24]
    1088:	ldr	r0, [fp, #-60]	; 0xffffffc4
    108c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1090:	sub	r0, r1, r0
    1094:	str	r0, [fp, #-36]	; 0xffffffdc
    1098:	ldr	r0, [fp, #-60]	; 0xffffffc4
    109c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10a0:	add	r0, r1, r0
    10a4:	str	r0, [fp, #-28]	; 0xffffffe4
    10a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    10ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    10b0:	ldr	r2, [r1, #64]	; 0x40
    10b4:	sub	r0, r2, r0
    10b8:	str	r0, [r1, #64]	; 0x40
    10bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10c0:	ldr	r0, [r0, #64]	; 0x40
    10c4:	cmp	r0, #0
    10c8:	beq	10d0 <coda_inflate+0xaf8>
    10cc:	b	3168 <coda_inflate+0x2b90>
    10d0:	b	10d4 <coda_inflate+0xafc>
    10d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10d8:	movw	r1, #0
    10dc:	str	r1, [r0, #64]	; 0x40
    10e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10e4:	movw	r1, #6
    10e8:	str	r1, [r0]
    10ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10f0:	ldr	r0, [r0, #16]
    10f4:	and	r0, r0, #2048	; 0x800
    10f8:	cmp	r0, #0
    10fc:	beq	1244 <coda_inflate+0xc6c>
    1100:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1104:	cmp	r0, #0
    1108:	bne	1110 <coda_inflate+0xb38>
    110c:	b	3168 <coda_inflate+0x2b90>
    1110:	movw	r0, #0
    1114:	str	r0, [fp, #-60]	; 0xffffffc4
    1118:	ldr	r0, [fp, #-28]	; 0xffffffe4
    111c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1120:	add	r2, r1, #1
    1124:	str	r2, [fp, #-60]	; 0xffffffc4
    1128:	add	r0, r0, r1
    112c:	ldrb	r0, [r0]
    1130:	str	r0, [fp, #-76]	; 0xffffffb4
    1134:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1138:	ldr	r0, [r0, #32]
    113c:	movw	r1, #0
    1140:	cmp	r0, r1
    1144:	beq	11a4 <coda_inflate+0xbcc>
    1148:	ldr	r0, [fp, #-24]	; 0xffffffe8
    114c:	ldr	r0, [r0, #32]
    1150:	ldr	r0, [r0, #28]
    1154:	movw	r1, #0
    1158:	cmp	r0, r1
    115c:	beq	11a4 <coda_inflate+0xbcc>
    1160:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1164:	ldr	r0, [r0, #64]	; 0x40
    1168:	ldr	r1, [fp, #-24]	; 0xffffffe8
    116c:	ldr	r1, [r1, #32]
    1170:	ldr	r1, [r1, #32]
    1174:	cmp	r0, r1
    1178:	bcs	11a4 <coda_inflate+0xbcc>
    117c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1180:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1184:	ldr	r1, [r1, #32]
    1188:	ldr	r1, [r1, #28]
    118c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1190:	ldr	r3, [r2, #64]	; 0x40
    1194:	add	ip, r3, #1
    1198:	str	ip, [r2, #64]	; 0x40
    119c:	add	r1, r1, r3
    11a0:	strb	r0, [r1]
    11a4:	b	11a8 <coda_inflate+0xbd0>
    11a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
    11ac:	cmp	r0, #0
    11b0:	movw	r0, #0
    11b4:	str	r0, [sp, #60]	; 0x3c
    11b8:	beq	11d4 <coda_inflate+0xbfc>
    11bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    11c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    11c4:	cmp	r0, r1
    11c8:	movw	r0, #0
    11cc:	movcc	r0, #1
    11d0:	str	r0, [sp, #60]	; 0x3c
    11d4:	ldr	r0, [sp, #60]	; 0x3c
    11d8:	tst	r0, #1
    11dc:	bne	1118 <coda_inflate+0xb40>
    11e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11e4:	ldr	r0, [r0, #16]
    11e8:	and	r0, r0, #512	; 0x200
    11ec:	cmp	r0, #0
    11f0:	beq	1210 <coda_inflate+0xc38>
    11f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11f8:	ldr	r0, [r0, #24]
    11fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1200:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1204:	bl	0 <coda_crc32>
    1208:	ldr	r1, [fp, #-24]	; 0xffffffe8
    120c:	str	r0, [r1, #24]
    1210:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1214:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1218:	sub	r0, r1, r0
    121c:	str	r0, [fp, #-36]	; 0xffffffdc
    1220:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1224:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1228:	add	r0, r1, r0
    122c:	str	r0, [fp, #-28]	; 0xffffffe4
    1230:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1234:	cmp	r0, #0
    1238:	beq	1240 <coda_inflate+0xc68>
    123c:	b	3168 <coda_inflate+0x2b90>
    1240:	b	126c <coda_inflate+0xc94>
    1244:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1248:	ldr	r0, [r0, #32]
    124c:	movw	r1, #0
    1250:	cmp	r0, r1
    1254:	beq	1268 <coda_inflate+0xc90>
    1258:	ldr	r0, [fp, #-24]	; 0xffffffe8
    125c:	ldr	r0, [r0, #32]
    1260:	movw	r1, #0
    1264:	str	r1, [r0, #28]
    1268:	b	126c <coda_inflate+0xc94>
    126c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1270:	movw	r1, #0
    1274:	str	r1, [r0, #64]	; 0x40
    1278:	ldr	r0, [fp, #-24]	; 0xffffffe8
    127c:	movw	r1, #7
    1280:	str	r1, [r0]
    1284:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1288:	ldr	r0, [r0, #16]
    128c:	and	r0, r0, #4096	; 0x1000
    1290:	cmp	r0, #0
    1294:	beq	13dc <coda_inflate+0xe04>
    1298:	ldr	r0, [fp, #-36]	; 0xffffffdc
    129c:	cmp	r0, #0
    12a0:	bne	12a8 <coda_inflate+0xcd0>
    12a4:	b	3168 <coda_inflate+0x2b90>
    12a8:	movw	r0, #0
    12ac:	str	r0, [fp, #-60]	; 0xffffffc4
    12b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    12b8:	add	r2, r1, #1
    12bc:	str	r2, [fp, #-60]	; 0xffffffc4
    12c0:	add	r0, r0, r1
    12c4:	ldrb	r0, [r0]
    12c8:	str	r0, [fp, #-76]	; 0xffffffb4
    12cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12d0:	ldr	r0, [r0, #32]
    12d4:	movw	r1, #0
    12d8:	cmp	r0, r1
    12dc:	beq	133c <coda_inflate+0xd64>
    12e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12e4:	ldr	r0, [r0, #32]
    12e8:	ldr	r0, [r0, #36]	; 0x24
    12ec:	movw	r1, #0
    12f0:	cmp	r0, r1
    12f4:	beq	133c <coda_inflate+0xd64>
    12f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12fc:	ldr	r0, [r0, #64]	; 0x40
    1300:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1304:	ldr	r1, [r1, #32]
    1308:	ldr	r1, [r1, #40]	; 0x28
    130c:	cmp	r0, r1
    1310:	bcs	133c <coda_inflate+0xd64>
    1314:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1318:	ldr	r1, [fp, #-24]	; 0xffffffe8
    131c:	ldr	r1, [r1, #32]
    1320:	ldr	r1, [r1, #36]	; 0x24
    1324:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1328:	ldr	r3, [r2, #64]	; 0x40
    132c:	add	ip, r3, #1
    1330:	str	ip, [r2, #64]	; 0x40
    1334:	add	r1, r1, r3
    1338:	strb	r0, [r1]
    133c:	b	1340 <coda_inflate+0xd68>
    1340:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1344:	cmp	r0, #0
    1348:	movw	r0, #0
    134c:	str	r0, [sp, #56]	; 0x38
    1350:	beq	136c <coda_inflate+0xd94>
    1354:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1358:	ldr	r1, [fp, #-36]	; 0xffffffdc
    135c:	cmp	r0, r1
    1360:	movw	r0, #0
    1364:	movcc	r0, #1
    1368:	str	r0, [sp, #56]	; 0x38
    136c:	ldr	r0, [sp, #56]	; 0x38
    1370:	tst	r0, #1
    1374:	bne	12b0 <coda_inflate+0xcd8>
    1378:	ldr	r0, [fp, #-24]	; 0xffffffe8
    137c:	ldr	r0, [r0, #16]
    1380:	and	r0, r0, #512	; 0x200
    1384:	cmp	r0, #0
    1388:	beq	13a8 <coda_inflate+0xdd0>
    138c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1390:	ldr	r0, [r0, #24]
    1394:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1398:	ldr	r2, [fp, #-60]	; 0xffffffc4
    139c:	bl	0 <coda_crc32>
    13a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13a4:	str	r0, [r1, #24]
    13a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    13ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    13b0:	sub	r0, r1, r0
    13b4:	str	r0, [fp, #-36]	; 0xffffffdc
    13b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    13bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    13c0:	add	r0, r1, r0
    13c4:	str	r0, [fp, #-28]	; 0xffffffe4
    13c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
    13cc:	cmp	r0, #0
    13d0:	beq	13d8 <coda_inflate+0xe00>
    13d4:	b	3168 <coda_inflate+0x2b90>
    13d8:	b	1404 <coda_inflate+0xe2c>
    13dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13e0:	ldr	r0, [r0, #32]
    13e4:	movw	r1, #0
    13e8:	cmp	r0, r1
    13ec:	beq	1400 <coda_inflate+0xe28>
    13f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13f4:	ldr	r0, [r0, #32]
    13f8:	movw	r1, #0
    13fc:	str	r1, [r0, #36]	; 0x24
    1400:	b	1404 <coda_inflate+0xe2c>
    1404:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1408:	movw	r1, #8
    140c:	str	r1, [r0]
    1410:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1414:	ldr	r0, [r0, #16]
    1418:	and	r0, r0, #512	; 0x200
    141c:	cmp	r0, #0
    1420:	beq	14e4 <coda_inflate+0xf0c>
    1424:	b	1428 <coda_inflate+0xe50>
    1428:	b	142c <coda_inflate+0xe54>
    142c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1430:	cmp	r0, #16
    1434:	bcs	1490 <coda_inflate+0xeb8>
    1438:	b	143c <coda_inflate+0xe64>
    143c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1440:	cmp	r0, #0
    1444:	bne	144c <coda_inflate+0xe74>
    1448:	b	3168 <coda_inflate+0x2b90>
    144c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1450:	mvn	r1, #0
    1454:	add	r0, r0, r1
    1458:	str	r0, [fp, #-36]	; 0xffffffdc
    145c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1460:	add	r1, r0, #1
    1464:	str	r1, [fp, #-28]	; 0xffffffe4
    1468:	ldrb	r0, [r0]
    146c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1470:	lsl	r0, r0, r1
    1474:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1478:	add	r0, r1, r0
    147c:	str	r0, [fp, #-44]	; 0xffffffd4
    1480:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1484:	add	r0, r0, #8
    1488:	str	r0, [fp, #-48]	; 0xffffffd0
    148c:	b	142c <coda_inflate+0xe54>
    1490:	b	1494 <coda_inflate+0xebc>
    1494:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1498:	ldr	r1, [fp, #-24]	; 0xffffffe8
    149c:	ldr	r1, [r1, #24]
    14a0:	movw	r2, #65535	; 0xffff
    14a4:	and	r1, r1, r2
    14a8:	cmp	r0, r1
    14ac:	beq	14d0 <coda_inflate+0xef8>
    14b0:	ldr	r0, [fp, #-16]
    14b4:	movw	r1, #0
    14b8:	movt	r1, #0
    14bc:	str	r1, [r0, #24]
    14c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14c4:	movw	r1, #29
    14c8:	str	r1, [r0]
    14cc:	b	3164 <coda_inflate+0x2b8c>
    14d0:	b	14d4 <coda_inflate+0xefc>
    14d4:	movw	r0, #0
    14d8:	str	r0, [fp, #-44]	; 0xffffffd4
    14dc:	str	r0, [fp, #-48]	; 0xffffffd0
    14e0:	b	14e4 <coda_inflate+0xf0c>
    14e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14e8:	ldr	r0, [r0, #32]
    14ec:	movw	r1, #0
    14f0:	cmp	r0, r1
    14f4:	beq	1524 <coda_inflate+0xf4c>
    14f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14fc:	ldr	r0, [r0, #16]
    1500:	asr	r0, r0, #9
    1504:	and	r0, r0, #1
    1508:	ldr	r1, [fp, #-24]	; 0xffffffe8
    150c:	ldr	r1, [r1, #32]
    1510:	str	r0, [r1, #44]	; 0x2c
    1514:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1518:	ldr	r0, [r0, #32]
    151c:	movw	r1, #1
    1520:	str	r1, [r0, #48]	; 0x30
    1524:	movw	r0, #0
    1528:	str	r0, [sp, #52]	; 0x34
    152c:	ldr	r1, [sp, #52]	; 0x34
    1530:	ldr	r2, [sp, #52]	; 0x34
    1534:	bl	0 <coda_crc32>
    1538:	ldr	r1, [fp, #-24]	; 0xffffffe8
    153c:	str	r0, [r1, #24]
    1540:	ldr	r1, [fp, #-16]
    1544:	str	r0, [r1, #48]	; 0x30
    1548:	ldr	r0, [fp, #-24]	; 0xffffffe8
    154c:	movw	r1, #11
    1550:	str	r1, [r0]
    1554:	b	3164 <coda_inflate+0x2b8c>
    1558:	b	155c <coda_inflate+0xf84>
    155c:	b	1560 <coda_inflate+0xf88>
    1560:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1564:	cmp	r0, #32
    1568:	bcs	15c4 <coda_inflate+0xfec>
    156c:	b	1570 <coda_inflate+0xf98>
    1570:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1574:	cmp	r0, #0
    1578:	bne	1580 <coda_inflate+0xfa8>
    157c:	b	3168 <coda_inflate+0x2b90>
    1580:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1584:	mvn	r1, #0
    1588:	add	r0, r0, r1
    158c:	str	r0, [fp, #-36]	; 0xffffffdc
    1590:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1594:	add	r1, r0, #1
    1598:	str	r1, [fp, #-28]	; 0xffffffe4
    159c:	ldrb	r0, [r0]
    15a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15a4:	lsl	r0, r0, r1
    15a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15ac:	add	r0, r1, r0
    15b0:	str	r0, [fp, #-44]	; 0xffffffd4
    15b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15b8:	add	r0, r0, #8
    15bc:	str	r0, [fp, #-48]	; 0xffffffd0
    15c0:	b	1560 <coda_inflate+0xf88>
    15c4:	b	15c8 <coda_inflate+0xff0>
    15c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15cc:	lsr	r0, r0, #24
    15d0:	and	r0, r0, #255	; 0xff
    15d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15d8:	lsr	r1, r1, #8
    15dc:	and	r1, r1, #65280	; 0xff00
    15e0:	add	r0, r0, r1
    15e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15e8:	and	r1, r1, #65280	; 0xff00
    15ec:	lsl	r1, r1, #8
    15f0:	add	r0, r0, r1
    15f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15f8:	and	r1, r1, #255	; 0xff
    15fc:	lsl	r1, r1, #24
    1600:	add	r0, r0, r1
    1604:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1608:	str	r0, [r1, #24]
    160c:	ldr	r1, [fp, #-16]
    1610:	str	r0, [r1, #48]	; 0x30
    1614:	movw	r0, #0
    1618:	str	r0, [fp, #-44]	; 0xffffffd4
    161c:	str	r0, [fp, #-48]	; 0xffffffd0
    1620:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1624:	movw	r1, #10
    1628:	str	r1, [r0]
    162c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1630:	ldr	r0, [r0, #12]
    1634:	cmp	r0, #0
    1638:	bne	1694 <coda_inflate+0x10bc>
    163c:	b	1640 <coda_inflate+0x1068>
    1640:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1644:	ldr	r1, [fp, #-16]
    1648:	str	r0, [r1, #12]
    164c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1650:	ldr	r1, [fp, #-16]
    1654:	str	r0, [r1, #16]
    1658:	ldr	r0, [fp, #-28]	; 0xffffffe4
    165c:	ldr	r1, [fp, #-16]
    1660:	str	r0, [r1]
    1664:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1668:	ldr	r1, [fp, #-16]
    166c:	str	r0, [r1, #4]
    1670:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1674:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1678:	str	r0, [r1, #56]	; 0x38
    167c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1680:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1684:	str	r0, [r1, #60]	; 0x3c
    1688:	movw	r0, #2
    168c:	str	r0, [fp, #-12]
    1690:	b	342c <coda_inflate+0x2e54>
    1694:	movw	r0, #0
    1698:	str	r0, [sp, #48]	; 0x30
    169c:	ldr	r1, [sp, #48]	; 0x30
    16a0:	ldr	r2, [sp, #48]	; 0x30
    16a4:	bl	0 <coda_adler32>
    16a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16ac:	str	r0, [r1, #24]
    16b0:	ldr	r1, [fp, #-16]
    16b4:	str	r0, [r1, #48]	; 0x30
    16b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16bc:	movw	r1, #11
    16c0:	str	r1, [r0]
    16c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    16c8:	cmp	r0, #5
    16cc:	beq	16dc <coda_inflate+0x1104>
    16d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    16d4:	cmp	r0, #6
    16d8:	bne	16e0 <coda_inflate+0x1108>
    16dc:	b	3168 <coda_inflate+0x2b90>
    16e0:	b	16e4 <coda_inflate+0x110c>
    16e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16e8:	ldr	r0, [r0, #4]
    16ec:	cmp	r0, #0
    16f0:	beq	1730 <coda_inflate+0x1158>
    16f4:	b	16f8 <coda_inflate+0x1120>
    16f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16fc:	and	r0, r0, #7
    1700:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1704:	lsr	r0, r1, r0
    1708:	str	r0, [fp, #-44]	; 0xffffffd4
    170c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1710:	and	r0, r0, #7
    1714:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1718:	sub	r0, r1, r0
    171c:	str	r0, [fp, #-48]	; 0xffffffd0
    1720:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1724:	movw	r1, #26
    1728:	str	r1, [r0]
    172c:	b	3164 <coda_inflate+0x2b8c>
    1730:	b	1734 <coda_inflate+0x115c>
    1734:	b	1738 <coda_inflate+0x1160>
    1738:	ldr	r0, [fp, #-48]	; 0xffffffd0
    173c:	cmp	r0, #3
    1740:	bcs	179c <coda_inflate+0x11c4>
    1744:	b	1748 <coda_inflate+0x1170>
    1748:	ldr	r0, [fp, #-36]	; 0xffffffdc
    174c:	cmp	r0, #0
    1750:	bne	1758 <coda_inflate+0x1180>
    1754:	b	3168 <coda_inflate+0x2b90>
    1758:	ldr	r0, [fp, #-36]	; 0xffffffdc
    175c:	mvn	r1, #0
    1760:	add	r0, r0, r1
    1764:	str	r0, [fp, #-36]	; 0xffffffdc
    1768:	ldr	r0, [fp, #-28]	; 0xffffffe4
    176c:	add	r1, r0, #1
    1770:	str	r1, [fp, #-28]	; 0xffffffe4
    1774:	ldrb	r0, [r0]
    1778:	ldr	r1, [fp, #-48]	; 0xffffffd0
    177c:	lsl	r0, r0, r1
    1780:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1784:	add	r0, r1, r0
    1788:	str	r0, [fp, #-44]	; 0xffffffd4
    178c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1790:	add	r0, r0, #8
    1794:	str	r0, [fp, #-48]	; 0xffffffd0
    1798:	b	1738 <coda_inflate+0x1160>
    179c:	b	17a0 <coda_inflate+0x11c8>
    17a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    17a4:	and	r0, r0, #1
    17a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17ac:	str	r0, [r1, #4]
    17b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    17b4:	lsr	r0, r0, #1
    17b8:	str	r0, [fp, #-44]	; 0xffffffd4
    17bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17c0:	sub	r0, r0, #1
    17c4:	str	r0, [fp, #-48]	; 0xffffffd0
    17c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    17cc:	and	r0, r0, #3
    17d0:	cmp	r0, #3
    17d4:	str	r0, [sp, #44]	; 0x2c
    17d8:	bhi	187c <coda_inflate+0x12a4>
    17dc:	add	r0, pc, #8
    17e0:	ldr	r1, [sp, #44]	; 0x2c
    17e4:	ldr	r0, [r0, r1, lsl #2]
    17e8:	mov	pc, r0
    17ec:	.word	0x000017fc
    17f0:	.word	0x0000180c
    17f4:	.word	0x00001850
    17f8:	.word	0x00001860
    17fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1800:	movw	r1, #13
    1804:	str	r1, [r0]
    1808:	b	187c <coda_inflate+0x12a4>
    180c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1810:	bl	3438 <fixedtables>
    1814:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1818:	movw	r1, #19
    181c:	str	r1, [r0]
    1820:	ldr	r0, [fp, #-20]	; 0xffffffec
    1824:	cmp	r0, #6
    1828:	bne	184c <coda_inflate+0x1274>
    182c:	b	1830 <coda_inflate+0x1258>
    1830:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1834:	lsr	r0, r0, #2
    1838:	str	r0, [fp, #-44]	; 0xffffffd4
    183c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1840:	sub	r0, r0, #2
    1844:	str	r0, [fp, #-48]	; 0xffffffd0
    1848:	b	3168 <coda_inflate+0x2b90>
    184c:	b	187c <coda_inflate+0x12a4>
    1850:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1854:	movw	r1, #16
    1858:	str	r1, [r0]
    185c:	b	187c <coda_inflate+0x12a4>
    1860:	ldr	r0, [fp, #-16]
    1864:	movw	r1, #0
    1868:	movt	r1, #0
    186c:	str	r1, [r0, #24]
    1870:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1874:	movw	r1, #29
    1878:	str	r1, [r0]
    187c:	b	1880 <coda_inflate+0x12a8>
    1880:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1884:	lsr	r0, r0, #2
    1888:	str	r0, [fp, #-44]	; 0xffffffd4
    188c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1890:	sub	r0, r0, #2
    1894:	str	r0, [fp, #-48]	; 0xffffffd0
    1898:	b	3164 <coda_inflate+0x2b8c>
    189c:	b	18a0 <coda_inflate+0x12c8>
    18a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18a4:	and	r0, r0, #7
    18a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    18ac:	lsr	r0, r1, r0
    18b0:	str	r0, [fp, #-44]	; 0xffffffd4
    18b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18b8:	and	r0, r0, #7
    18bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    18c0:	sub	r0, r1, r0
    18c4:	str	r0, [fp, #-48]	; 0xffffffd0
    18c8:	b	18cc <coda_inflate+0x12f4>
    18cc:	b	18d0 <coda_inflate+0x12f8>
    18d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18d4:	cmp	r0, #32
    18d8:	bcs	1934 <coda_inflate+0x135c>
    18dc:	b	18e0 <coda_inflate+0x1308>
    18e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    18e4:	cmp	r0, #0
    18e8:	bne	18f0 <coda_inflate+0x1318>
    18ec:	b	3168 <coda_inflate+0x2b90>
    18f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    18f4:	mvn	r1, #0
    18f8:	add	r0, r0, r1
    18fc:	str	r0, [fp, #-36]	; 0xffffffdc
    1900:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1904:	add	r1, r0, #1
    1908:	str	r1, [fp, #-28]	; 0xffffffe4
    190c:	ldrb	r0, [r0]
    1910:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1914:	lsl	r0, r0, r1
    1918:	ldr	r1, [fp, #-44]	; 0xffffffd4
    191c:	add	r0, r1, r0
    1920:	str	r0, [fp, #-44]	; 0xffffffd4
    1924:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1928:	add	r0, r0, #8
    192c:	str	r0, [fp, #-48]	; 0xffffffd0
    1930:	b	18d0 <coda_inflate+0x12f8>
    1934:	b	1938 <coda_inflate+0x1360>
    1938:	ldr	r0, [fp, #-44]	; 0xffffffd4
    193c:	movw	r1, #65535	; 0xffff
    1940:	and	r0, r0, r1
    1944:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1948:	lsr	r2, r2, #16
    194c:	eor	r1, r2, r1
    1950:	cmp	r0, r1
    1954:	beq	1978 <coda_inflate+0x13a0>
    1958:	ldr	r0, [fp, #-16]
    195c:	movw	r1, #0
    1960:	movt	r1, #0
    1964:	str	r1, [r0, #24]
    1968:	ldr	r0, [fp, #-24]	; 0xffffffe8
    196c:	movw	r1, #29
    1970:	str	r1, [r0]
    1974:	b	3164 <coda_inflate+0x2b8c>
    1978:	ldr	r0, [fp, #-44]	; 0xffffffd4
    197c:	movw	r1, #65535	; 0xffff
    1980:	and	r0, r0, r1
    1984:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1988:	str	r0, [r1, #64]	; 0x40
    198c:	movw	r0, #0
    1990:	str	r0, [fp, #-44]	; 0xffffffd4
    1994:	str	r0, [fp, #-48]	; 0xffffffd0
    1998:	ldr	r0, [fp, #-24]	; 0xffffffe8
    199c:	movw	r1, #14
    19a0:	str	r1, [r0]
    19a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    19a8:	cmp	r0, #6
    19ac:	bne	19b4 <coda_inflate+0x13dc>
    19b0:	b	3168 <coda_inflate+0x2b90>
    19b4:	b	19b8 <coda_inflate+0x13e0>
    19b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19bc:	movw	r1, #15
    19c0:	str	r1, [r0]
    19c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19c8:	ldr	r0, [r0, #64]	; 0x40
    19cc:	str	r0, [fp, #-60]	; 0xffffffc4
    19d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19d4:	cmp	r0, #0
    19d8:	beq	1a84 <coda_inflate+0x14ac>
    19dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    19e4:	cmp	r0, r1
    19e8:	bls	19f4 <coda_inflate+0x141c>
    19ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    19f0:	str	r0, [fp, #-60]	; 0xffffffc4
    19f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    19fc:	cmp	r0, r1
    1a00:	bls	1a0c <coda_inflate+0x1434>
    1a04:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1a08:	str	r0, [fp, #-60]	; 0xffffffc4
    1a0c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a10:	cmp	r0, #0
    1a14:	bne	1a1c <coda_inflate+0x1444>
    1a18:	b	3168 <coda_inflate+0x2b90>
    1a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1a24:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1a28:	bl	0 <memcpy>
    1a2c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a30:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1a34:	sub	r0, r1, r0
    1a38:	str	r0, [fp, #-36]	; 0xffffffdc
    1a3c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1a44:	add	r0, r1, r0
    1a48:	str	r0, [fp, #-28]	; 0xffffffe4
    1a4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a50:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1a54:	sub	r0, r1, r0
    1a58:	str	r0, [fp, #-40]	; 0xffffffd8
    1a5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a60:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1a64:	add	r0, r1, r0
    1a68:	str	r0, [fp, #-32]	; 0xffffffe0
    1a6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1a74:	ldr	r2, [r1, #64]	; 0x40
    1a78:	sub	r0, r2, r0
    1a7c:	str	r0, [r1, #64]	; 0x40
    1a80:	b	3164 <coda_inflate+0x2b8c>
    1a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a88:	movw	r1, #11
    1a8c:	str	r1, [r0]
    1a90:	b	3164 <coda_inflate+0x2b8c>
    1a94:	b	1a98 <coda_inflate+0x14c0>
    1a98:	b	1a9c <coda_inflate+0x14c4>
    1a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1aa0:	cmp	r0, #14
    1aa4:	bcs	1b00 <coda_inflate+0x1528>
    1aa8:	b	1aac <coda_inflate+0x14d4>
    1aac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ab0:	cmp	r0, #0
    1ab4:	bne	1abc <coda_inflate+0x14e4>
    1ab8:	b	3168 <coda_inflate+0x2b90>
    1abc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ac0:	mvn	r1, #0
    1ac4:	add	r0, r0, r1
    1ac8:	str	r0, [fp, #-36]	; 0xffffffdc
    1acc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ad0:	add	r1, r0, #1
    1ad4:	str	r1, [fp, #-28]	; 0xffffffe4
    1ad8:	ldrb	r0, [r0]
    1adc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ae0:	lsl	r0, r0, r1
    1ae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1ae8:	add	r0, r1, r0
    1aec:	str	r0, [fp, #-44]	; 0xffffffd4
    1af0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1af4:	add	r0, r0, #8
    1af8:	str	r0, [fp, #-48]	; 0xffffffd0
    1afc:	b	1a9c <coda_inflate+0x14c4>
    1b00:	b	1b04 <coda_inflate+0x152c>
    1b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b08:	and	r0, r0, #31
    1b0c:	movw	r1, #257	; 0x101
    1b10:	add	r0, r0, r1
    1b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b18:	str	r0, [r1, #96]	; 0x60
    1b1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b20:	lsr	r0, r0, #5
    1b24:	str	r0, [fp, #-44]	; 0xffffffd4
    1b28:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b2c:	sub	r0, r0, #5
    1b30:	str	r0, [fp, #-48]	; 0xffffffd0
    1b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b38:	and	r0, r0, #31
    1b3c:	add	r0, r0, #1
    1b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b44:	str	r0, [r1, #100]	; 0x64
    1b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b4c:	lsr	r0, r0, #5
    1b50:	str	r0, [fp, #-44]	; 0xffffffd4
    1b54:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b58:	sub	r0, r0, #5
    1b5c:	str	r0, [fp, #-48]	; 0xffffffd0
    1b60:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b64:	and	r0, r0, #15
    1b68:	add	r0, r0, #4
    1b6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b70:	str	r0, [r1, #92]	; 0x5c
    1b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b78:	lsr	r0, r0, #4
    1b7c:	str	r0, [fp, #-44]	; 0xffffffd4
    1b80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b84:	sub	r0, r0, #4
    1b88:	str	r0, [fp, #-48]	; 0xffffffd0
    1b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b90:	ldr	r0, [r0, #96]	; 0x60
    1b94:	movw	r1, #286	; 0x11e
    1b98:	cmp	r0, r1
    1b9c:	bhi	1bb0 <coda_inflate+0x15d8>
    1ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ba4:	ldr	r0, [r0, #100]	; 0x64
    1ba8:	cmp	r0, #30
    1bac:	bls	1bd0 <coda_inflate+0x15f8>
    1bb0:	ldr	r0, [fp, #-16]
    1bb4:	movw	r1, #0
    1bb8:	movt	r1, #0
    1bbc:	str	r1, [r0, #24]
    1bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bc4:	movw	r1, #29
    1bc8:	str	r1, [r0]
    1bcc:	b	3164 <coda_inflate+0x2b8c>
    1bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bd4:	movw	r1, #0
    1bd8:	str	r1, [r0, #104]	; 0x68
    1bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1be0:	movw	r1, #17
    1be4:	str	r1, [r0]
    1be8:	b	1bec <coda_inflate+0x1614>
    1bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bf0:	ldr	r0, [r0, #104]	; 0x68
    1bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1bf8:	ldr	r1, [r1, #92]	; 0x5c
    1bfc:	cmp	r0, r1
    1c00:	bcs	1cc4 <coda_inflate+0x16ec>
    1c04:	b	1c08 <coda_inflate+0x1630>
    1c08:	b	1c0c <coda_inflate+0x1634>
    1c0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c10:	cmp	r0, #3
    1c14:	bcs	1c70 <coda_inflate+0x1698>
    1c18:	b	1c1c <coda_inflate+0x1644>
    1c1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1c20:	cmp	r0, #0
    1c24:	bne	1c2c <coda_inflate+0x1654>
    1c28:	b	3168 <coda_inflate+0x2b90>
    1c2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1c30:	mvn	r1, #0
    1c34:	add	r0, r0, r1
    1c38:	str	r0, [fp, #-36]	; 0xffffffdc
    1c3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1c40:	add	r1, r0, #1
    1c44:	str	r1, [fp, #-28]	; 0xffffffe4
    1c48:	ldrb	r0, [r0]
    1c4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1c50:	lsl	r0, r0, r1
    1c54:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1c58:	add	r0, r1, r0
    1c5c:	str	r0, [fp, #-44]	; 0xffffffd4
    1c60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c64:	add	r0, r0, #8
    1c68:	str	r0, [fp, #-48]	; 0xffffffd0
    1c6c:	b	1c0c <coda_inflate+0x1634>
    1c70:	b	1c74 <coda_inflate+0x169c>
    1c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1c78:	and	r0, r0, #7
    1c7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1c80:	add	r2, r1, #112	; 0x70
    1c84:	ldr	r3, [r1, #104]	; 0x68
    1c88:	add	ip, r3, #1
    1c8c:	str	ip, [r1, #104]	; 0x68
    1c90:	movw	r1, #0
    1c94:	movt	r1, #0
    1c98:	add	r1, r1, r3, lsl #1
    1c9c:	ldrh	r1, [r1]
    1ca0:	add	r1, r2, r1, lsl #1
    1ca4:	strh	r0, [r1]
    1ca8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1cac:	lsr	r0, r0, #3
    1cb0:	str	r0, [fp, #-44]	; 0xffffffd4
    1cb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cb8:	sub	r0, r0, #3
    1cbc:	str	r0, [fp, #-48]	; 0xffffffd0
    1cc0:	b	1bec <coda_inflate+0x1614>
    1cc4:	b	1cc8 <coda_inflate+0x16f0>
    1cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ccc:	ldr	r0, [r0, #104]	; 0x68
    1cd0:	cmp	r0, #19
    1cd4:	bcs	1d0c <coda_inflate+0x1734>
    1cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1cdc:	add	r1, r0, #112	; 0x70
    1ce0:	ldr	r2, [r0, #104]	; 0x68
    1ce4:	add	r3, r2, #1
    1ce8:	str	r3, [r0, #104]	; 0x68
    1cec:	movw	r0, #0
    1cf0:	movt	r0, #0
    1cf4:	add	r0, r0, r2, lsl #1
    1cf8:	ldrh	r0, [r0]
    1cfc:	add	r0, r1, r0, lsl #1
    1d00:	movw	r1, #0
    1d04:	strh	r1, [r0]
    1d08:	b	1cc8 <coda_inflate+0x16f0>
    1d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d10:	add	r0, r0, #1328	; 0x530
    1d14:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d18:	str	r0, [r1, #108]	; 0x6c
    1d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d20:	ldr	r0, [r0, #108]	; 0x6c
    1d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d28:	str	r0, [r1, #76]	; 0x4c
    1d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d30:	movw	r1, #7
    1d34:	str	r1, [r0, #84]	; 0x54
    1d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d3c:	add	r1, r0, #112	; 0x70
    1d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d44:	add	r3, r0, #108	; 0x6c
    1d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d4c:	add	r0, r0, #84	; 0x54
    1d50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d54:	add	r2, r2, #752	; 0x2f0
    1d58:	movw	ip, #0
    1d5c:	str	r0, [sp, #40]	; 0x28
    1d60:	mov	r0, ip
    1d64:	movw	ip, #19
    1d68:	str	r2, [sp, #36]	; 0x24
    1d6c:	mov	r2, ip
    1d70:	ldr	ip, [sp, #40]	; 0x28
    1d74:	str	ip, [sp]
    1d78:	ldr	lr, [sp, #36]	; 0x24
    1d7c:	str	lr, [sp, #4]
    1d80:	bl	0 <coda_inflate_table>
    1d84:	str	r0, [fp, #-80]	; 0xffffffb0
    1d88:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1d8c:	cmp	r0, #0
    1d90:	beq	1db4 <coda_inflate+0x17dc>
    1d94:	ldr	r0, [fp, #-16]
    1d98:	movw	r1, #0
    1d9c:	movt	r1, #0
    1da0:	str	r1, [r0, #24]
    1da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1da8:	movw	r1, #29
    1dac:	str	r1, [r0]
    1db0:	b	3164 <coda_inflate+0x2b8c>
    1db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1db8:	movw	r1, #0
    1dbc:	str	r1, [r0, #104]	; 0x68
    1dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dc4:	movw	r1, #18
    1dc8:	str	r1, [r0]
    1dcc:	b	1dd0 <coda_inflate+0x17f8>
    1dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dd4:	ldr	r0, [r0, #104]	; 0x68
    1dd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ddc:	ldr	r1, [r1, #96]	; 0x60
    1de0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1de4:	ldr	r2, [r2, #100]	; 0x64
    1de8:	add	r1, r1, r2
    1dec:	cmp	r0, r1
    1df0:	bcs	2250 <coda_inflate+0x1c78>
    1df4:	b	1df8 <coda_inflate+0x1820>
    1df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dfc:	ldr	r1, [r0, #76]	; 0x4c
    1e00:	ldr	r0, [r0, #84]	; 0x54
    1e04:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1e08:	mov	r3, #1
    1e0c:	mvn	ip, #0
    1e10:	add	r0, ip, r3, lsl r0
    1e14:	and	r0, r2, r0
    1e18:	add	r0, r1, r0, lsl #2
    1e1c:	ldrh	r1, [r0]
    1e20:	strh	r1, [fp, #-68]	; 0xffffffbc
    1e24:	ldrh	r0, [r0, #2]
    1e28:	strh	r0, [fp, #-66]	; 0xffffffbe
    1e2c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1e30:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e34:	cmp	r0, r1
    1e38:	bhi	1e40 <coda_inflate+0x1868>
    1e3c:	b	1e98 <coda_inflate+0x18c0>
    1e40:	b	1e44 <coda_inflate+0x186c>
    1e44:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1e48:	cmp	r0, #0
    1e4c:	bne	1e54 <coda_inflate+0x187c>
    1e50:	b	3168 <coda_inflate+0x2b90>
    1e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1e58:	mvn	r1, #0
    1e5c:	add	r0, r0, r1
    1e60:	str	r0, [fp, #-36]	; 0xffffffdc
    1e64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1e68:	add	r1, r0, #1
    1e6c:	str	r1, [fp, #-28]	; 0xffffffe4
    1e70:	ldrb	r0, [r0]
    1e74:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e78:	lsl	r0, r0, r1
    1e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1e80:	add	r0, r1, r0
    1e84:	str	r0, [fp, #-44]	; 0xffffffd4
    1e88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e8c:	add	r0, r0, #8
    1e90:	str	r0, [fp, #-48]	; 0xffffffd0
    1e94:	b	1df8 <coda_inflate+0x1820>
    1e98:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    1e9c:	cmp	r0, #16
    1ea0:	bge	1eec <coda_inflate+0x1914>
    1ea4:	b	1ea8 <coda_inflate+0x18d0>
    1ea8:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1eac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1eb0:	lsr	r0, r1, r0
    1eb4:	str	r0, [fp, #-44]	; 0xffffffd4
    1eb8:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1ebc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ec0:	sub	r0, r1, r0
    1ec4:	str	r0, [fp, #-48]	; 0xffffffd0
    1ec8:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    1ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ed0:	add	r2, r1, #112	; 0x70
    1ed4:	ldr	r3, [r1, #104]	; 0x68
    1ed8:	add	ip, r3, #1
    1edc:	str	ip, [r1, #104]	; 0x68
    1ee0:	add	r1, r2, r3, lsl #1
    1ee4:	strh	r0, [r1]
    1ee8:	b	224c <coda_inflate+0x1c74>
    1eec:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    1ef0:	cmp	r0, #16
    1ef4:	bne	200c <coda_inflate+0x1a34>
    1ef8:	b	1efc <coda_inflate+0x1924>
    1efc:	b	1f00 <coda_inflate+0x1928>
    1f00:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f04:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    1f08:	add	r1, r1, #2
    1f0c:	cmp	r0, r1
    1f10:	bcs	1f6c <coda_inflate+0x1994>
    1f14:	b	1f18 <coda_inflate+0x1940>
    1f18:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f1c:	cmp	r0, #0
    1f20:	bne	1f28 <coda_inflate+0x1950>
    1f24:	b	3168 <coda_inflate+0x2b90>
    1f28:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f2c:	mvn	r1, #0
    1f30:	add	r0, r0, r1
    1f34:	str	r0, [fp, #-36]	; 0xffffffdc
    1f38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1f3c:	add	r1, r0, #1
    1f40:	str	r1, [fp, #-28]	; 0xffffffe4
    1f44:	ldrb	r0, [r0]
    1f48:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f4c:	lsl	r0, r0, r1
    1f50:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1f54:	add	r0, r1, r0
    1f58:	str	r0, [fp, #-44]	; 0xffffffd4
    1f5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f60:	add	r0, r0, #8
    1f64:	str	r0, [fp, #-48]	; 0xffffffd0
    1f68:	b	1f00 <coda_inflate+0x1928>
    1f6c:	b	1f70 <coda_inflate+0x1998>
    1f70:	b	1f74 <coda_inflate+0x199c>
    1f74:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1f7c:	lsr	r0, r1, r0
    1f80:	str	r0, [fp, #-44]	; 0xffffffd4
    1f84:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1f88:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f8c:	sub	r0, r1, r0
    1f90:	str	r0, [fp, #-48]	; 0xffffffd0
    1f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1f98:	ldr	r0, [r0, #104]	; 0x68
    1f9c:	cmp	r0, #0
    1fa0:	bne	1fc4 <coda_inflate+0x19ec>
    1fa4:	ldr	r0, [fp, #-16]
    1fa8:	movw	r1, #0
    1fac:	movt	r1, #0
    1fb0:	str	r1, [r0, #24]
    1fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fb8:	movw	r1, #29
    1fbc:	str	r1, [r0]
    1fc0:	b	2250 <coda_inflate+0x1c78>
    1fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fc8:	add	r1, r0, #112	; 0x70
    1fcc:	ldr	r0, [r0, #104]	; 0x68
    1fd0:	sub	r0, r0, #1
    1fd4:	add	r0, r1, r0, lsl #1
    1fd8:	ldrh	r0, [r0]
    1fdc:	str	r0, [fp, #-76]	; 0xffffffb4
    1fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1fe4:	and	r0, r0, #3
    1fe8:	add	r0, r0, #3
    1fec:	str	r0, [fp, #-60]	; 0xffffffc4
    1ff0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1ff4:	lsr	r0, r0, #2
    1ff8:	str	r0, [fp, #-44]	; 0xffffffd4
    1ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2000:	sub	r0, r0, #2
    2004:	str	r0, [fp, #-48]	; 0xffffffd0
    2008:	b	21bc <coda_inflate+0x1be4>
    200c:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2010:	cmp	r0, #17
    2014:	bne	20e8 <coda_inflate+0x1b10>
    2018:	b	201c <coda_inflate+0x1a44>
    201c:	b	2020 <coda_inflate+0x1a48>
    2020:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2024:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    2028:	add	r1, r1, #3
    202c:	cmp	r0, r1
    2030:	bcs	208c <coda_inflate+0x1ab4>
    2034:	b	2038 <coda_inflate+0x1a60>
    2038:	ldr	r0, [fp, #-36]	; 0xffffffdc
    203c:	cmp	r0, #0
    2040:	bne	2048 <coda_inflate+0x1a70>
    2044:	b	3168 <coda_inflate+0x2b90>
    2048:	ldr	r0, [fp, #-36]	; 0xffffffdc
    204c:	mvn	r1, #0
    2050:	add	r0, r0, r1
    2054:	str	r0, [fp, #-36]	; 0xffffffdc
    2058:	ldr	r0, [fp, #-28]	; 0xffffffe4
    205c:	add	r1, r0, #1
    2060:	str	r1, [fp, #-28]	; 0xffffffe4
    2064:	ldrb	r0, [r0]
    2068:	ldr	r1, [fp, #-48]	; 0xffffffd0
    206c:	lsl	r0, r0, r1
    2070:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2074:	add	r0, r1, r0
    2078:	str	r0, [fp, #-44]	; 0xffffffd4
    207c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2080:	add	r0, r0, #8
    2084:	str	r0, [fp, #-48]	; 0xffffffd0
    2088:	b	2020 <coda_inflate+0x1a48>
    208c:	b	2090 <coda_inflate+0x1ab8>
    2090:	b	2094 <coda_inflate+0x1abc>
    2094:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2098:	ldr	r1, [fp, #-44]	; 0xffffffd4
    209c:	lsr	r0, r1, r0
    20a0:	str	r0, [fp, #-44]	; 0xffffffd4
    20a4:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    20a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    20ac:	sub	r0, r1, r0
    20b0:	str	r0, [fp, #-48]	; 0xffffffd0
    20b4:	movw	r0, #0
    20b8:	str	r0, [fp, #-76]	; 0xffffffb4
    20bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    20c0:	and	r0, r0, #7
    20c4:	add	r0, r0, #3
    20c8:	str	r0, [fp, #-60]	; 0xffffffc4
    20cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    20d0:	lsr	r0, r0, #3
    20d4:	str	r0, [fp, #-44]	; 0xffffffd4
    20d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20dc:	sub	r0, r0, #3
    20e0:	str	r0, [fp, #-48]	; 0xffffffd0
    20e4:	b	21b8 <coda_inflate+0x1be0>
    20e8:	b	20ec <coda_inflate+0x1b14>
    20ec:	b	20f0 <coda_inflate+0x1b18>
    20f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20f4:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    20f8:	add	r1, r1, #7
    20fc:	cmp	r0, r1
    2100:	bcs	215c <coda_inflate+0x1b84>
    2104:	b	2108 <coda_inflate+0x1b30>
    2108:	ldr	r0, [fp, #-36]	; 0xffffffdc
    210c:	cmp	r0, #0
    2110:	bne	2118 <coda_inflate+0x1b40>
    2114:	b	3168 <coda_inflate+0x2b90>
    2118:	ldr	r0, [fp, #-36]	; 0xffffffdc
    211c:	mvn	r1, #0
    2120:	add	r0, r0, r1
    2124:	str	r0, [fp, #-36]	; 0xffffffdc
    2128:	ldr	r0, [fp, #-28]	; 0xffffffe4
    212c:	add	r1, r0, #1
    2130:	str	r1, [fp, #-28]	; 0xffffffe4
    2134:	ldrb	r0, [r0]
    2138:	ldr	r1, [fp, #-48]	; 0xffffffd0
    213c:	lsl	r0, r0, r1
    2140:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2144:	add	r0, r1, r0
    2148:	str	r0, [fp, #-44]	; 0xffffffd4
    214c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2150:	add	r0, r0, #8
    2154:	str	r0, [fp, #-48]	; 0xffffffd0
    2158:	b	20f0 <coda_inflate+0x1b18>
    215c:	b	2160 <coda_inflate+0x1b88>
    2160:	b	2164 <coda_inflate+0x1b8c>
    2164:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2168:	ldr	r1, [fp, #-44]	; 0xffffffd4
    216c:	lsr	r0, r1, r0
    2170:	str	r0, [fp, #-44]	; 0xffffffd4
    2174:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2178:	ldr	r1, [fp, #-48]	; 0xffffffd0
    217c:	sub	r0, r1, r0
    2180:	str	r0, [fp, #-48]	; 0xffffffd0
    2184:	movw	r0, #0
    2188:	str	r0, [fp, #-76]	; 0xffffffb4
    218c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2190:	and	r0, r0, #127	; 0x7f
    2194:	add	r0, r0, #11
    2198:	str	r0, [fp, #-60]	; 0xffffffc4
    219c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    21a0:	lsr	r0, r0, #7
    21a4:	str	r0, [fp, #-44]	; 0xffffffd4
    21a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    21ac:	sub	r0, r0, #7
    21b0:	str	r0, [fp, #-48]	; 0xffffffd0
    21b4:	b	21b8 <coda_inflate+0x1be0>
    21b8:	b	21bc <coda_inflate+0x1be4>
    21bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    21c0:	ldr	r0, [r0, #104]	; 0x68
    21c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21c8:	add	r0, r0, r1
    21cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    21d0:	ldr	r1, [r1, #96]	; 0x60
    21d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    21d8:	ldr	r2, [r2, #100]	; 0x64
    21dc:	add	r1, r1, r2
    21e0:	cmp	r0, r1
    21e4:	bls	2208 <coda_inflate+0x1c30>
    21e8:	ldr	r0, [fp, #-16]
    21ec:	movw	r1, #0
    21f0:	movt	r1, #0
    21f4:	str	r1, [r0, #24]
    21f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    21fc:	movw	r1, #29
    2200:	str	r1, [r0]
    2204:	b	2250 <coda_inflate+0x1c78>
    2208:	b	220c <coda_inflate+0x1c34>
    220c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2210:	mvn	r1, #0
    2214:	add	r1, r0, r1
    2218:	str	r1, [fp, #-60]	; 0xffffffc4
    221c:	cmp	r0, #0
    2220:	beq	2248 <coda_inflate+0x1c70>
    2224:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2228:	ldr	r1, [fp, #-24]	; 0xffffffe8
    222c:	add	r2, r1, #112	; 0x70
    2230:	ldr	r3, [r1, #104]	; 0x68
    2234:	add	ip, r3, #1
    2238:	str	ip, [r1, #104]	; 0x68
    223c:	add	r1, r2, r3, lsl #1
    2240:	strh	r0, [r1]
    2244:	b	220c <coda_inflate+0x1c34>
    2248:	b	224c <coda_inflate+0x1c74>
    224c:	b	1dd0 <coda_inflate+0x17f8>
    2250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2254:	ldr	r0, [r0]
    2258:	cmp	r0, #29
    225c:	bne	2264 <coda_inflate+0x1c8c>
    2260:	b	3164 <coda_inflate+0x2b8c>
    2264:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2268:	add	r0, r0, #624	; 0x270
    226c:	ldrh	r0, [r0]
    2270:	cmp	r0, #0
    2274:	bne	2298 <coda_inflate+0x1cc0>
    2278:	ldr	r0, [fp, #-16]
    227c:	movw	r1, #0
    2280:	movt	r1, #0
    2284:	str	r1, [r0, #24]
    2288:	ldr	r0, [fp, #-24]	; 0xffffffe8
    228c:	movw	r1, #29
    2290:	str	r1, [r0]
    2294:	b	3164 <coda_inflate+0x2b8c>
    2298:	ldr	r0, [fp, #-24]	; 0xffffffe8
    229c:	add	r0, r0, #1328	; 0x530
    22a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    22a4:	str	r0, [r1, #108]	; 0x6c
    22a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22ac:	ldr	r0, [r0, #108]	; 0x6c
    22b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    22b4:	str	r0, [r1, #76]	; 0x4c
    22b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22bc:	movw	r1, #9
    22c0:	str	r1, [r0, #84]	; 0x54
    22c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22c8:	add	r1, r0, #112	; 0x70
    22cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22d0:	ldr	r2, [r0, #96]	; 0x60
    22d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22d8:	add	r3, r0, #108	; 0x6c
    22dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22e0:	add	r0, r0, #84	; 0x54
    22e4:	ldr	ip, [fp, #-24]	; 0xffffffe8
    22e8:	add	ip, ip, #752	; 0x2f0
    22ec:	movw	lr, #1
    22f0:	str	r0, [sp, #32]
    22f4:	mov	r0, lr
    22f8:	ldr	lr, [sp, #32]
    22fc:	str	lr, [sp]
    2300:	str	ip, [sp, #4]
    2304:	bl	0 <coda_inflate_table>
    2308:	str	r0, [fp, #-80]	; 0xffffffb0
    230c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    2310:	cmp	r0, #0
    2314:	beq	2338 <coda_inflate+0x1d60>
    2318:	ldr	r0, [fp, #-16]
    231c:	movw	r1, #0
    2320:	movt	r1, #0
    2324:	str	r1, [r0, #24]
    2328:	ldr	r0, [fp, #-24]	; 0xffffffe8
    232c:	movw	r1, #29
    2330:	str	r1, [r0]
    2334:	b	3164 <coda_inflate+0x2b8c>
    2338:	ldr	r0, [fp, #-24]	; 0xffffffe8
    233c:	ldr	r1, [r0, #108]	; 0x6c
    2340:	str	r1, [r0, #80]	; 0x50
    2344:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2348:	mov	r1, #6
    234c:	str	r1, [r0, #88]	; 0x58
    2350:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2354:	add	r1, r0, #112	; 0x70
    2358:	ldr	r0, [r0, #96]	; 0x60
    235c:	add	r1, r1, r0, lsl #1
    2360:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2364:	ldr	r2, [r0, #100]	; 0x64
    2368:	ldr	r0, [fp, #-24]	; 0xffffffe8
    236c:	add	r3, r0, #108	; 0x6c
    2370:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2374:	add	r0, r0, #88	; 0x58
    2378:	ldr	ip, [fp, #-24]	; 0xffffffe8
    237c:	add	ip, ip, #752	; 0x2f0
    2380:	movw	lr, #2
    2384:	str	r0, [sp, #28]
    2388:	mov	r0, lr
    238c:	ldr	lr, [sp, #28]
    2390:	str	lr, [sp]
    2394:	str	ip, [sp, #4]
    2398:	bl	0 <coda_inflate_table>
    239c:	str	r0, [fp, #-80]	; 0xffffffb0
    23a0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    23a4:	cmp	r0, #0
    23a8:	beq	23cc <coda_inflate+0x1df4>
    23ac:	ldr	r0, [fp, #-16]
    23b0:	movw	r1, #0
    23b4:	movt	r1, #0
    23b8:	str	r1, [r0, #24]
    23bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23c0:	movw	r1, #29
    23c4:	str	r1, [r0]
    23c8:	b	3164 <coda_inflate+0x2b8c>
    23cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23d0:	movw	r1, #19
    23d4:	str	r1, [r0]
    23d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    23dc:	cmp	r0, #6
    23e0:	bne	23e8 <coda_inflate+0x1e10>
    23e4:	b	3168 <coda_inflate+0x2b90>
    23e8:	b	23ec <coda_inflate+0x1e14>
    23ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23f0:	movw	r1, #20
    23f4:	str	r1, [r0]
    23f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    23fc:	cmp	r0, #6
    2400:	bcc	24dc <coda_inflate+0x1f04>
    2404:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2408:	movw	r1, #258	; 0x102
    240c:	cmp	r0, r1
    2410:	bcc	24dc <coda_inflate+0x1f04>
    2414:	b	2418 <coda_inflate+0x1e40>
    2418:	ldr	r0, [fp, #-32]	; 0xffffffe0
    241c:	ldr	r1, [fp, #-16]
    2420:	str	r0, [r1, #12]
    2424:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2428:	ldr	r1, [fp, #-16]
    242c:	str	r0, [r1, #16]
    2430:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2434:	ldr	r1, [fp, #-16]
    2438:	str	r0, [r1]
    243c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2440:	ldr	r1, [fp, #-16]
    2444:	str	r0, [r1, #4]
    2448:	ldr	r0, [fp, #-44]	; 0xffffffd4
    244c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2450:	str	r0, [r1, #56]	; 0x38
    2454:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2458:	ldr	r1, [fp, #-24]	; 0xffffffe8
    245c:	str	r0, [r1, #60]	; 0x3c
    2460:	ldr	r0, [fp, #-16]
    2464:	ldr	r1, [fp, #-56]	; 0xffffffc8
    2468:	bl	0 <coda_inflate_fast>
    246c:	ldr	r0, [fp, #-16]
    2470:	ldr	r0, [r0, #12]
    2474:	str	r0, [fp, #-32]	; 0xffffffe0
    2478:	ldr	r0, [fp, #-16]
    247c:	ldr	r0, [r0, #16]
    2480:	str	r0, [fp, #-40]	; 0xffffffd8
    2484:	ldr	r0, [fp, #-16]
    2488:	ldr	r0, [r0]
    248c:	str	r0, [fp, #-28]	; 0xffffffe4
    2490:	ldr	r0, [fp, #-16]
    2494:	ldr	r0, [r0, #4]
    2498:	str	r0, [fp, #-36]	; 0xffffffdc
    249c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24a0:	ldr	r0, [r0, #56]	; 0x38
    24a4:	str	r0, [fp, #-44]	; 0xffffffd4
    24a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24ac:	ldr	r0, [r0, #60]	; 0x3c
    24b0:	str	r0, [fp, #-48]	; 0xffffffd0
    24b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24b8:	ldr	r0, [r0]
    24bc:	cmp	r0, #11
    24c0:	bne	24d8 <coda_inflate+0x1f00>
    24c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24c8:	movw	r1, #7108	; 0x1bc4
    24cc:	add	r0, r0, r1
    24d0:	mvn	r1, #0
    24d4:	str	r1, [r0]
    24d8:	b	3164 <coda_inflate+0x2b8c>
    24dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24e0:	movw	r1, #7108	; 0x1bc4
    24e4:	add	r0, r0, r1
    24e8:	movw	r1, #0
    24ec:	str	r1, [r0]
    24f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24f4:	ldr	r1, [r0, #76]	; 0x4c
    24f8:	ldr	r0, [r0, #84]	; 0x54
    24fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2500:	mov	r3, #1
    2504:	mvn	ip, #0
    2508:	add	r0, ip, r3, lsl r0
    250c:	and	r0, r2, r0
    2510:	add	r0, r1, r0, lsl #2
    2514:	ldrh	r1, [r0]
    2518:	strh	r1, [fp, #-68]	; 0xffffffbc
    251c:	ldrh	r0, [r0, #2]
    2520:	strh	r0, [fp, #-66]	; 0xffffffbe
    2524:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2528:	ldr	r1, [fp, #-48]	; 0xffffffd0
    252c:	cmp	r0, r1
    2530:	bhi	2538 <coda_inflate+0x1f60>
    2534:	b	2590 <coda_inflate+0x1fb8>
    2538:	b	253c <coda_inflate+0x1f64>
    253c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2540:	cmp	r0, #0
    2544:	bne	254c <coda_inflate+0x1f74>
    2548:	b	3168 <coda_inflate+0x2b90>
    254c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2550:	mvn	r1, #0
    2554:	add	r0, r0, r1
    2558:	str	r0, [fp, #-36]	; 0xffffffdc
    255c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2560:	add	r1, r0, #1
    2564:	str	r1, [fp, #-28]	; 0xffffffe4
    2568:	ldrb	r0, [r0]
    256c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2570:	lsl	r0, r0, r1
    2574:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2578:	add	r0, r1, r0
    257c:	str	r0, [fp, #-44]	; 0xffffffd4
    2580:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2584:	add	r0, r0, #8
    2588:	str	r0, [fp, #-48]	; 0xffffffd0
    258c:	b	24f0 <coda_inflate+0x1f18>
    2590:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2594:	cmp	r0, #0
    2598:	beq	26b8 <coda_inflate+0x20e0>
    259c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    25a0:	and	r0, r0, #240	; 0xf0
    25a4:	cmp	r0, #0
    25a8:	bne	26b8 <coda_inflate+0x20e0>
    25ac:	ldrh	r0, [fp, #-68]	; 0xffffffbc
    25b0:	strh	r0, [fp, #-72]	; 0xffffffb8
    25b4:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    25b8:	strh	r0, [fp, #-70]	; 0xffffffba
    25bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    25c0:	ldr	r0, [r0, #76]	; 0x4c
    25c4:	ldrh	r1, [fp, #-70]	; 0xffffffba
    25c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    25cc:	ldrb	r3, [fp, #-72]	; 0xffffffb8
    25d0:	ldrb	ip, [fp, #-71]	; 0xffffffb9
    25d4:	add	r3, ip, r3
    25d8:	mov	lr, #1
    25dc:	mvn	r4, #0
    25e0:	add	r3, r4, lr, lsl r3
    25e4:	and	r2, r2, r3
    25e8:	add	r1, r1, r2, lsr ip
    25ec:	add	r0, r0, r1, lsl #2
    25f0:	ldrh	r1, [r0]
    25f4:	strh	r1, [fp, #-68]	; 0xffffffbc
    25f8:	ldrh	r0, [r0, #2]
    25fc:	strh	r0, [fp, #-66]	; 0xffffffbe
    2600:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2604:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    2608:	add	r0, r0, r1
    260c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2610:	cmp	r0, r1
    2614:	bhi	261c <coda_inflate+0x2044>
    2618:	b	2674 <coda_inflate+0x209c>
    261c:	b	2620 <coda_inflate+0x2048>
    2620:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2624:	cmp	r0, #0
    2628:	bne	2630 <coda_inflate+0x2058>
    262c:	b	3168 <coda_inflate+0x2b90>
    2630:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2634:	mvn	r1, #0
    2638:	add	r0, r0, r1
    263c:	str	r0, [fp, #-36]	; 0xffffffdc
    2640:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2644:	add	r1, r0, #1
    2648:	str	r1, [fp, #-28]	; 0xffffffe4
    264c:	ldrb	r0, [r0]
    2650:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2654:	lsl	r0, r0, r1
    2658:	ldr	r1, [fp, #-44]	; 0xffffffd4
    265c:	add	r0, r1, r0
    2660:	str	r0, [fp, #-44]	; 0xffffffd4
    2664:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2668:	add	r0, r0, #8
    266c:	str	r0, [fp, #-48]	; 0xffffffd0
    2670:	b	25bc <coda_inflate+0x1fe4>
    2674:	b	2678 <coda_inflate+0x20a0>
    2678:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    267c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2680:	lsr	r0, r1, r0
    2684:	str	r0, [fp, #-44]	; 0xffffffd4
    2688:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    268c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2690:	sub	r0, r1, r0
    2694:	str	r0, [fp, #-48]	; 0xffffffd0
    2698:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    269c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    26a0:	movw	r2, #7108	; 0x1bc4
    26a4:	add	r3, r1, r2
    26a8:	ldr	r3, [r3]
    26ac:	add	r0, r3, r0
    26b0:	add	r1, r1, r2
    26b4:	str	r0, [r1]
    26b8:	b	26bc <coda_inflate+0x20e4>
    26bc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    26c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    26c4:	lsr	r0, r1, r0
    26c8:	str	r0, [fp, #-44]	; 0xffffffd4
    26cc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    26d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    26d4:	sub	r0, r1, r0
    26d8:	str	r0, [fp, #-48]	; 0xffffffd0
    26dc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    26e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    26e4:	movw	r2, #7108	; 0x1bc4
    26e8:	add	r3, r1, r2
    26ec:	ldr	r3, [r3]
    26f0:	add	r0, r3, r0
    26f4:	add	r1, r1, r2
    26f8:	str	r0, [r1]
    26fc:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2700:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2704:	str	r0, [r1, #64]	; 0x40
    2708:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    270c:	cmp	r0, #0
    2710:	bne	2724 <coda_inflate+0x214c>
    2714:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2718:	movw	r1, #25
    271c:	str	r1, [r0]
    2720:	b	3164 <coda_inflate+0x2b8c>
    2724:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2728:	and	r0, r0, #32
    272c:	cmp	r0, #0
    2730:	beq	2758 <coda_inflate+0x2180>
    2734:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2738:	movw	r1, #7108	; 0x1bc4
    273c:	add	r0, r0, r1
    2740:	mvn	r1, #0
    2744:	str	r1, [r0]
    2748:	ldr	r0, [fp, #-24]	; 0xffffffe8
    274c:	movw	r1, #11
    2750:	str	r1, [r0]
    2754:	b	3164 <coda_inflate+0x2b8c>
    2758:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    275c:	and	r0, r0, #64	; 0x40
    2760:	cmp	r0, #0
    2764:	beq	2788 <coda_inflate+0x21b0>
    2768:	ldr	r0, [fp, #-16]
    276c:	movw	r1, #0
    2770:	movt	r1, #0
    2774:	str	r1, [r0, #24]
    2778:	ldr	r0, [fp, #-24]	; 0xffffffe8
    277c:	movw	r1, #29
    2780:	str	r1, [r0]
    2784:	b	3164 <coda_inflate+0x2b8c>
    2788:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    278c:	and	r0, r0, #15
    2790:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2794:	str	r0, [r1, #72]	; 0x48
    2798:	ldr	r0, [fp, #-24]	; 0xffffffe8
    279c:	movw	r1, #21
    27a0:	str	r1, [r0]
    27a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27a8:	ldr	r0, [r0, #72]	; 0x48
    27ac:	cmp	r0, #0
    27b0:	beq	28a4 <coda_inflate+0x22cc>
    27b4:	b	27b8 <coda_inflate+0x21e0>
    27b8:	b	27bc <coda_inflate+0x21e4>
    27bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    27c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    27c4:	ldr	r1, [r1, #72]	; 0x48
    27c8:	cmp	r0, r1
    27cc:	bcs	2828 <coda_inflate+0x2250>
    27d0:	b	27d4 <coda_inflate+0x21fc>
    27d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27d8:	cmp	r0, #0
    27dc:	bne	27e4 <coda_inflate+0x220c>
    27e0:	b	3168 <coda_inflate+0x2b90>
    27e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27e8:	mvn	r1, #0
    27ec:	add	r0, r0, r1
    27f0:	str	r0, [fp, #-36]	; 0xffffffdc
    27f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    27f8:	add	r1, r0, #1
    27fc:	str	r1, [fp, #-28]	; 0xffffffe4
    2800:	ldrb	r0, [r0]
    2804:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2808:	lsl	r0, r0, r1
    280c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2810:	add	r0, r1, r0
    2814:	str	r0, [fp, #-44]	; 0xffffffd4
    2818:	ldr	r0, [fp, #-48]	; 0xffffffd0
    281c:	add	r0, r0, #8
    2820:	str	r0, [fp, #-48]	; 0xffffffd0
    2824:	b	27bc <coda_inflate+0x21e4>
    2828:	b	282c <coda_inflate+0x2254>
    282c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2830:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2834:	ldr	r1, [r1, #72]	; 0x48
    2838:	movw	r2, #1
    283c:	lsl	r1, r2, r1
    2840:	sub	r1, r1, #1
    2844:	and	r0, r0, r1
    2848:	ldr	r1, [fp, #-24]	; 0xffffffe8
    284c:	ldr	r2, [r1, #64]	; 0x40
    2850:	add	r0, r2, r0
    2854:	str	r0, [r1, #64]	; 0x40
    2858:	ldr	r0, [fp, #-24]	; 0xffffffe8
    285c:	ldr	r0, [r0, #72]	; 0x48
    2860:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2864:	lsr	r0, r1, r0
    2868:	str	r0, [fp, #-44]	; 0xffffffd4
    286c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2870:	ldr	r0, [r0, #72]	; 0x48
    2874:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2878:	sub	r0, r1, r0
    287c:	str	r0, [fp, #-48]	; 0xffffffd0
    2880:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2884:	ldr	r0, [r0, #72]	; 0x48
    2888:	ldr	r1, [fp, #-24]	; 0xffffffe8
    288c:	movw	r2, #7108	; 0x1bc4
    2890:	add	r3, r1, r2
    2894:	ldr	r3, [r3]
    2898:	add	r0, r3, r0
    289c:	add	r1, r1, r2
    28a0:	str	r0, [r1]
    28a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28a8:	ldr	r0, [r0, #64]	; 0x40
    28ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    28b0:	movw	r2, #7112	; 0x1bc8
    28b4:	add	r1, r1, r2
    28b8:	str	r0, [r1]
    28bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28c0:	movw	r1, #22
    28c4:	str	r1, [r0]
    28c8:	b	28cc <coda_inflate+0x22f4>
    28cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28d0:	ldr	r1, [r0, #80]	; 0x50
    28d4:	ldr	r0, [r0, #88]	; 0x58
    28d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    28dc:	mov	r3, #1
    28e0:	mvn	ip, #0
    28e4:	add	r0, ip, r3, lsl r0
    28e8:	and	r0, r2, r0
    28ec:	add	r0, r1, r0, lsl #2
    28f0:	ldrh	r1, [r0]
    28f4:	strh	r1, [fp, #-68]	; 0xffffffbc
    28f8:	ldrh	r0, [r0, #2]
    28fc:	strh	r0, [fp, #-66]	; 0xffffffbe
    2900:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2904:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2908:	cmp	r0, r1
    290c:	bhi	2914 <coda_inflate+0x233c>
    2910:	b	296c <coda_inflate+0x2394>
    2914:	b	2918 <coda_inflate+0x2340>
    2918:	ldr	r0, [fp, #-36]	; 0xffffffdc
    291c:	cmp	r0, #0
    2920:	bne	2928 <coda_inflate+0x2350>
    2924:	b	3168 <coda_inflate+0x2b90>
    2928:	ldr	r0, [fp, #-36]	; 0xffffffdc
    292c:	mvn	r1, #0
    2930:	add	r0, r0, r1
    2934:	str	r0, [fp, #-36]	; 0xffffffdc
    2938:	ldr	r0, [fp, #-28]	; 0xffffffe4
    293c:	add	r1, r0, #1
    2940:	str	r1, [fp, #-28]	; 0xffffffe4
    2944:	ldrb	r0, [r0]
    2948:	ldr	r1, [fp, #-48]	; 0xffffffd0
    294c:	lsl	r0, r0, r1
    2950:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2954:	add	r0, r1, r0
    2958:	str	r0, [fp, #-44]	; 0xffffffd4
    295c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2960:	add	r0, r0, #8
    2964:	str	r0, [fp, #-48]	; 0xffffffd0
    2968:	b	28cc <coda_inflate+0x22f4>
    296c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2970:	and	r0, r0, #240	; 0xf0
    2974:	cmp	r0, #0
    2978:	bne	2a88 <coda_inflate+0x24b0>
    297c:	ldrh	r0, [fp, #-68]	; 0xffffffbc
    2980:	strh	r0, [fp, #-72]	; 0xffffffb8
    2984:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2988:	strh	r0, [fp, #-70]	; 0xffffffba
    298c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2990:	ldr	r0, [r0, #80]	; 0x50
    2994:	ldrh	r1, [fp, #-70]	; 0xffffffba
    2998:	ldr	r2, [fp, #-44]	; 0xffffffd4
    299c:	ldrb	r3, [fp, #-72]	; 0xffffffb8
    29a0:	ldrb	ip, [fp, #-71]	; 0xffffffb9
    29a4:	add	r3, ip, r3
    29a8:	mov	lr, #1
    29ac:	mvn	r4, #0
    29b0:	add	r3, r4, lr, lsl r3
    29b4:	and	r2, r2, r3
    29b8:	add	r1, r1, r2, lsr ip
    29bc:	add	r0, r0, r1, lsl #2
    29c0:	ldrh	r1, [r0]
    29c4:	strh	r1, [fp, #-68]	; 0xffffffbc
    29c8:	ldrh	r0, [r0, #2]
    29cc:	strh	r0, [fp, #-66]	; 0xffffffbe
    29d0:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    29d4:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    29d8:	add	r0, r0, r1
    29dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    29e0:	cmp	r0, r1
    29e4:	bhi	29ec <coda_inflate+0x2414>
    29e8:	b	2a44 <coda_inflate+0x246c>
    29ec:	b	29f0 <coda_inflate+0x2418>
    29f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    29f4:	cmp	r0, #0
    29f8:	bne	2a00 <coda_inflate+0x2428>
    29fc:	b	3168 <coda_inflate+0x2b90>
    2a00:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2a04:	mvn	r1, #0
    2a08:	add	r0, r0, r1
    2a0c:	str	r0, [fp, #-36]	; 0xffffffdc
    2a10:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2a14:	add	r1, r0, #1
    2a18:	str	r1, [fp, #-28]	; 0xffffffe4
    2a1c:	ldrb	r0, [r0]
    2a20:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a24:	lsl	r0, r0, r1
    2a28:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a2c:	add	r0, r1, r0
    2a30:	str	r0, [fp, #-44]	; 0xffffffd4
    2a34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a38:	add	r0, r0, #8
    2a3c:	str	r0, [fp, #-48]	; 0xffffffd0
    2a40:	b	298c <coda_inflate+0x23b4>
    2a44:	b	2a48 <coda_inflate+0x2470>
    2a48:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2a4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a50:	lsr	r0, r1, r0
    2a54:	str	r0, [fp, #-44]	; 0xffffffd4
    2a58:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2a5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a60:	sub	r0, r1, r0
    2a64:	str	r0, [fp, #-48]	; 0xffffffd0
    2a68:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2a6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2a70:	movw	r2, #7108	; 0x1bc4
    2a74:	add	r3, r1, r2
    2a78:	ldr	r3, [r3]
    2a7c:	add	r0, r3, r0
    2a80:	add	r1, r1, r2
    2a84:	str	r0, [r1]
    2a88:	b	2a8c <coda_inflate+0x24b4>
    2a8c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2a90:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a94:	lsr	r0, r1, r0
    2a98:	str	r0, [fp, #-44]	; 0xffffffd4
    2a9c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2aa0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2aa4:	sub	r0, r1, r0
    2aa8:	str	r0, [fp, #-48]	; 0xffffffd0
    2aac:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ab4:	movw	r2, #7108	; 0x1bc4
    2ab8:	add	r3, r1, r2
    2abc:	ldr	r3, [r3]
    2ac0:	add	r0, r3, r0
    2ac4:	add	r1, r1, r2
    2ac8:	str	r0, [r1]
    2acc:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2ad0:	and	r0, r0, #64	; 0x40
    2ad4:	cmp	r0, #0
    2ad8:	beq	2afc <coda_inflate+0x2524>
    2adc:	ldr	r0, [fp, #-16]
    2ae0:	movw	r1, #0
    2ae4:	movt	r1, #0
    2ae8:	str	r1, [r0, #24]
    2aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2af0:	movw	r1, #29
    2af4:	str	r1, [r0]
    2af8:	b	3164 <coda_inflate+0x2b8c>
    2afc:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b04:	str	r0, [r1, #68]	; 0x44
    2b08:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2b0c:	and	r0, r0, #15
    2b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b14:	str	r0, [r1, #72]	; 0x48
    2b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b1c:	movw	r1, #23
    2b20:	str	r1, [r0]
    2b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b28:	ldr	r0, [r0, #72]	; 0x48
    2b2c:	cmp	r0, #0
    2b30:	beq	2c24 <coda_inflate+0x264c>
    2b34:	b	2b38 <coda_inflate+0x2560>
    2b38:	b	2b3c <coda_inflate+0x2564>
    2b3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b44:	ldr	r1, [r1, #72]	; 0x48
    2b48:	cmp	r0, r1
    2b4c:	bcs	2ba8 <coda_inflate+0x25d0>
    2b50:	b	2b54 <coda_inflate+0x257c>
    2b54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2b58:	cmp	r0, #0
    2b5c:	bne	2b64 <coda_inflate+0x258c>
    2b60:	b	3168 <coda_inflate+0x2b90>
    2b64:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2b68:	mvn	r1, #0
    2b6c:	add	r0, r0, r1
    2b70:	str	r0, [fp, #-36]	; 0xffffffdc
    2b74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2b78:	add	r1, r0, #1
    2b7c:	str	r1, [fp, #-28]	; 0xffffffe4
    2b80:	ldrb	r0, [r0]
    2b84:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2b88:	lsl	r0, r0, r1
    2b8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b90:	add	r0, r1, r0
    2b94:	str	r0, [fp, #-44]	; 0xffffffd4
    2b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b9c:	add	r0, r0, #8
    2ba0:	str	r0, [fp, #-48]	; 0xffffffd0
    2ba4:	b	2b3c <coda_inflate+0x2564>
    2ba8:	b	2bac <coda_inflate+0x25d4>
    2bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2bb4:	ldr	r1, [r1, #72]	; 0x48
    2bb8:	movw	r2, #1
    2bbc:	lsl	r1, r2, r1
    2bc0:	sub	r1, r1, #1
    2bc4:	and	r0, r0, r1
    2bc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2bcc:	ldr	r2, [r1, #68]	; 0x44
    2bd0:	add	r0, r2, r0
    2bd4:	str	r0, [r1, #68]	; 0x44
    2bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2bdc:	ldr	r0, [r0, #72]	; 0x48
    2be0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2be4:	lsr	r0, r1, r0
    2be8:	str	r0, [fp, #-44]	; 0xffffffd4
    2bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2bf0:	ldr	r0, [r0, #72]	; 0x48
    2bf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2bf8:	sub	r0, r1, r0
    2bfc:	str	r0, [fp, #-48]	; 0xffffffd0
    2c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c04:	ldr	r0, [r0, #72]	; 0x48
    2c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2c0c:	movw	r2, #7108	; 0x1bc4
    2c10:	add	r3, r1, r2
    2c14:	ldr	r3, [r3]
    2c18:	add	r0, r3, r0
    2c1c:	add	r1, r1, r2
    2c20:	str	r0, [r1]
    2c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c28:	movw	r1, #24
    2c2c:	str	r1, [r0]
    2c30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c34:	cmp	r0, #0
    2c38:	bne	2c40 <coda_inflate+0x2668>
    2c3c:	b	3168 <coda_inflate+0x2b90>
    2c40:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2c48:	sub	r0, r0, r1
    2c4c:	str	r0, [fp, #-60]	; 0xffffffc4
    2c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c54:	ldr	r0, [r0, #68]	; 0x44
    2c58:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c5c:	cmp	r0, r1
    2c60:	bls	2d54 <coda_inflate+0x277c>
    2c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c68:	ldr	r0, [r0, #68]	; 0x44
    2c6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c70:	sub	r0, r0, r1
    2c74:	str	r0, [fp, #-60]	; 0xffffffc4
    2c78:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2c7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2c80:	ldr	r1, [r1, #44]	; 0x2c
    2c84:	cmp	r0, r1
    2c88:	bls	2cc4 <coda_inflate+0x26ec>
    2c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c90:	add	r0, r0, #7104	; 0x1bc0
    2c94:	ldr	r0, [r0]
    2c98:	cmp	r0, #0
    2c9c:	beq	2cc0 <coda_inflate+0x26e8>
    2ca0:	ldr	r0, [fp, #-16]
    2ca4:	movw	r1, #0
    2ca8:	movt	r1, #0
    2cac:	str	r1, [r0, #24]
    2cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2cb4:	movw	r1, #29
    2cb8:	str	r1, [r0]
    2cbc:	b	3164 <coda_inflate+0x2b8c>
    2cc0:	b	2cc4 <coda_inflate+0x26ec>
    2cc4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ccc:	ldr	r1, [r1, #48]	; 0x30
    2cd0:	cmp	r0, r1
    2cd4:	bls	2d10 <coda_inflate+0x2738>
    2cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2cdc:	ldr	r0, [r0, #48]	; 0x30
    2ce0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ce4:	sub	r0, r1, r0
    2ce8:	str	r0, [fp, #-60]	; 0xffffffc4
    2cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2cf0:	ldr	r0, [r0, #52]	; 0x34
    2cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2cf8:	ldr	r1, [r1, #40]	; 0x28
    2cfc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2d00:	sub	r1, r1, r2
    2d04:	add	r0, r0, r1
    2d08:	str	r0, [fp, #-64]	; 0xffffffc0
    2d0c:	b	2d30 <coda_inflate+0x2758>
    2d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d14:	ldr	r0, [r0, #52]	; 0x34
    2d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d1c:	ldr	r1, [r1, #48]	; 0x30
    2d20:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2d24:	sub	r1, r1, r2
    2d28:	add	r0, r0, r1
    2d2c:	str	r0, [fp, #-64]	; 0xffffffc0
    2d30:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d38:	ldr	r1, [r1, #64]	; 0x40
    2d3c:	cmp	r0, r1
    2d40:	bls	2d50 <coda_inflate+0x2778>
    2d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d48:	ldr	r0, [r0, #64]	; 0x40
    2d4c:	str	r0, [fp, #-60]	; 0xffffffc4
    2d50:	b	2d7c <coda_inflate+0x27a4>
    2d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d58:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d5c:	ldr	r1, [r1, #68]	; 0x44
    2d60:	movw	r2, #0
    2d64:	sub	r1, r2, r1
    2d68:	add	r0, r0, r1
    2d6c:	str	r0, [fp, #-64]	; 0xffffffc0
    2d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d74:	ldr	r0, [r0, #64]	; 0x40
    2d78:	str	r0, [fp, #-60]	; 0xffffffc4
    2d7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2d80:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2d84:	cmp	r0, r1
    2d88:	bls	2d94 <coda_inflate+0x27bc>
    2d8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2d90:	str	r0, [fp, #-60]	; 0xffffffc4
    2d94:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2d98:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2d9c:	sub	r0, r1, r0
    2da0:	str	r0, [fp, #-40]	; 0xffffffd8
    2da4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2dac:	ldr	r2, [r1, #64]	; 0x40
    2db0:	sub	r0, r2, r0
    2db4:	str	r0, [r1, #64]	; 0x40
    2db8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2dbc:	add	r1, r0, #1
    2dc0:	str	r1, [fp, #-64]	; 0xffffffc0
    2dc4:	ldrb	r0, [r0]
    2dc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2dcc:	add	r2, r1, #1
    2dd0:	str	r2, [fp, #-32]	; 0xffffffe0
    2dd4:	strb	r0, [r1]
    2dd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2ddc:	mvn	r1, #0
    2de0:	add	r0, r0, r1
    2de4:	str	r0, [fp, #-60]	; 0xffffffc4
    2de8:	cmp	r0, #0
    2dec:	bne	2db8 <coda_inflate+0x27e0>
    2df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2df4:	ldr	r0, [r0, #64]	; 0x40
    2df8:	cmp	r0, #0
    2dfc:	bne	2e0c <coda_inflate+0x2834>
    2e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e04:	movw	r1, #20
    2e08:	str	r1, [r0]
    2e0c:	b	3164 <coda_inflate+0x2b8c>
    2e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e14:	cmp	r0, #0
    2e18:	bne	2e20 <coda_inflate+0x2848>
    2e1c:	b	3168 <coda_inflate+0x2b90>
    2e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e24:	ldr	r0, [r0, #64]	; 0x40
    2e28:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2e2c:	add	r2, r1, #1
    2e30:	str	r2, [fp, #-32]	; 0xffffffe0
    2e34:	strb	r0, [r1]
    2e38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e3c:	mvn	r1, #0
    2e40:	add	r0, r0, r1
    2e44:	str	r0, [fp, #-40]	; 0xffffffd8
    2e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e4c:	movw	r1, #20
    2e50:	str	r1, [r0]
    2e54:	b	3164 <coda_inflate+0x2b8c>
    2e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e5c:	ldr	r0, [r0, #8]
    2e60:	cmp	r0, #0
    2e64:	beq	3040 <coda_inflate+0x2a68>
    2e68:	b	2e6c <coda_inflate+0x2894>
    2e6c:	b	2e70 <coda_inflate+0x2898>
    2e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e74:	cmp	r0, #32
    2e78:	bcs	2ed4 <coda_inflate+0x28fc>
    2e7c:	b	2e80 <coda_inflate+0x28a8>
    2e80:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2e84:	cmp	r0, #0
    2e88:	bne	2e90 <coda_inflate+0x28b8>
    2e8c:	b	3168 <coda_inflate+0x2b90>
    2e90:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2e94:	mvn	r1, #0
    2e98:	add	r0, r0, r1
    2e9c:	str	r0, [fp, #-36]	; 0xffffffdc
    2ea0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2ea4:	add	r1, r0, #1
    2ea8:	str	r1, [fp, #-28]	; 0xffffffe4
    2eac:	ldrb	r0, [r0]
    2eb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2eb4:	lsl	r0, r0, r1
    2eb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2ebc:	add	r0, r1, r0
    2ec0:	str	r0, [fp, #-44]	; 0xffffffd4
    2ec4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ec8:	add	r0, r0, #8
    2ecc:	str	r0, [fp, #-48]	; 0xffffffd0
    2ed0:	b	2e70 <coda_inflate+0x2898>
    2ed4:	b	2ed8 <coda_inflate+0x2900>
    2ed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2edc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    2ee0:	sub	r0, r1, r0
    2ee4:	str	r0, [fp, #-56]	; 0xffffffc8
    2ee8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2eec:	ldr	r1, [fp, #-16]
    2ef0:	ldr	r2, [r1, #20]
    2ef4:	add	r0, r2, r0
    2ef8:	str	r0, [r1, #20]
    2efc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2f00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f04:	ldr	r2, [r1, #28]
    2f08:	add	r0, r2, r0
    2f0c:	str	r0, [r1, #28]
    2f10:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2f14:	cmp	r0, #0
    2f18:	beq	2f94 <coda_inflate+0x29bc>
    2f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f20:	ldr	r0, [r0, #16]
    2f24:	cmp	r0, #0
    2f28:	beq	2f58 <coda_inflate+0x2980>
    2f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f30:	ldr	r0, [r0, #24]
    2f34:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2f38:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f3c:	movw	r3, #0
    2f40:	sub	r2, r3, r2
    2f44:	add	r1, r1, r2
    2f48:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f4c:	bl	0 <coda_crc32>
    2f50:	str	r0, [sp, #24]
    2f54:	b	2f80 <coda_inflate+0x29a8>
    2f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f5c:	ldr	r0, [r0, #24]
    2f60:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2f64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f68:	movw	r3, #0
    2f6c:	sub	r2, r3, r2
    2f70:	add	r1, r1, r2
    2f74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f78:	bl	0 <coda_adler32>
    2f7c:	str	r0, [sp, #24]
    2f80:	ldr	r0, [sp, #24]
    2f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f88:	str	r0, [r1, #24]
    2f8c:	ldr	r1, [fp, #-16]
    2f90:	str	r0, [r1, #48]	; 0x30
    2f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f98:	str	r0, [fp, #-56]	; 0xffffffc8
    2f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2fa0:	ldr	r0, [r0, #16]
    2fa4:	cmp	r0, #0
    2fa8:	beq	2fb8 <coda_inflate+0x29e0>
    2fac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2fb0:	str	r0, [sp, #20]
    2fb4:	b	2ff8 <coda_inflate+0x2a20>
    2fb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2fbc:	lsr	r0, r0, #24
    2fc0:	and	r0, r0, #255	; 0xff
    2fc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fc8:	lsr	r1, r1, #8
    2fcc:	and	r1, r1, #65280	; 0xff00
    2fd0:	add	r0, r0, r1
    2fd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fd8:	and	r1, r1, #65280	; 0xff00
    2fdc:	lsl	r1, r1, #8
    2fe0:	add	r0, r0, r1
    2fe4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fe8:	and	r1, r1, #255	; 0xff
    2fec:	lsl	r1, r1, #24
    2ff0:	add	r0, r0, r1
    2ff4:	str	r0, [sp, #20]
    2ff8:	ldr	r0, [sp, #20]
    2ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3000:	ldr	r1, [r1, #24]
    3004:	cmp	r0, r1
    3008:	beq	302c <coda_inflate+0x2a54>
    300c:	ldr	r0, [fp, #-16]
    3010:	movw	r1, #0
    3014:	movt	r1, #0
    3018:	str	r1, [r0, #24]
    301c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3020:	movw	r1, #29
    3024:	str	r1, [r0]
    3028:	b	3164 <coda_inflate+0x2b8c>
    302c:	b	3030 <coda_inflate+0x2a58>
    3030:	movw	r0, #0
    3034:	str	r0, [fp, #-44]	; 0xffffffd4
    3038:	str	r0, [fp, #-48]	; 0xffffffd0
    303c:	b	3040 <coda_inflate+0x2a68>
    3040:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3044:	movw	r1, #27
    3048:	str	r1, [r0]
    304c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3050:	ldr	r0, [r0, #8]
    3054:	cmp	r0, #0
    3058:	beq	3124 <coda_inflate+0x2b4c>
    305c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3060:	ldr	r0, [r0, #16]
    3064:	cmp	r0, #0
    3068:	beq	3124 <coda_inflate+0x2b4c>
    306c:	b	3070 <coda_inflate+0x2a98>
    3070:	b	3074 <coda_inflate+0x2a9c>
    3074:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3078:	cmp	r0, #32
    307c:	bcs	30d8 <coda_inflate+0x2b00>
    3080:	b	3084 <coda_inflate+0x2aac>
    3084:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3088:	cmp	r0, #0
    308c:	bne	3094 <coda_inflate+0x2abc>
    3090:	b	3168 <coda_inflate+0x2b90>
    3094:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3098:	mvn	r1, #0
    309c:	add	r0, r0, r1
    30a0:	str	r0, [fp, #-36]	; 0xffffffdc
    30a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    30a8:	add	r1, r0, #1
    30ac:	str	r1, [fp, #-28]	; 0xffffffe4
    30b0:	ldrb	r0, [r0]
    30b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    30b8:	lsl	r0, r0, r1
    30bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    30c0:	add	r0, r1, r0
    30c4:	str	r0, [fp, #-44]	; 0xffffffd4
    30c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30cc:	add	r0, r0, #8
    30d0:	str	r0, [fp, #-48]	; 0xffffffd0
    30d4:	b	3074 <coda_inflate+0x2a9c>
    30d8:	b	30dc <coda_inflate+0x2b04>
    30dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    30e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30e4:	ldr	r1, [r1, #28]
    30e8:	cmp	r0, r1
    30ec:	beq	3110 <coda_inflate+0x2b38>
    30f0:	ldr	r0, [fp, #-16]
    30f4:	movw	r1, #0
    30f8:	movt	r1, #0
    30fc:	str	r1, [r0, #24]
    3100:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3104:	movw	r1, #29
    3108:	str	r1, [r0]
    310c:	b	3164 <coda_inflate+0x2b8c>
    3110:	b	3114 <coda_inflate+0x2b3c>
    3114:	movw	r0, #0
    3118:	str	r0, [fp, #-44]	; 0xffffffd4
    311c:	str	r0, [fp, #-48]	; 0xffffffd0
    3120:	b	3124 <coda_inflate+0x2b4c>
    3124:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3128:	movw	r1, #28
    312c:	str	r1, [r0]
    3130:	movw	r0, #1
    3134:	str	r0, [fp, #-80]	; 0xffffffb0
    3138:	b	3168 <coda_inflate+0x2b90>
    313c:	mvn	r0, #2
    3140:	str	r0, [fp, #-80]	; 0xffffffb0
    3144:	b	3168 <coda_inflate+0x2b90>
    3148:	mvn	r0, #3
    314c:	str	r0, [fp, #-12]
    3150:	b	342c <coda_inflate+0x2e54>
    3154:	b	3158 <coda_inflate+0x2b80>
    3158:	mvn	r0, #1
    315c:	str	r0, [fp, #-12]
    3160:	b	342c <coda_inflate+0x2e54>
    3164:	b	6e0 <coda_inflate+0x108>
    3168:	b	316c <coda_inflate+0x2b94>
    316c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3170:	ldr	r1, [fp, #-16]
    3174:	str	r0, [r1, #12]
    3178:	ldr	r0, [fp, #-40]	; 0xffffffd8
    317c:	ldr	r1, [fp, #-16]
    3180:	str	r0, [r1, #16]
    3184:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3188:	ldr	r1, [fp, #-16]
    318c:	str	r0, [r1]
    3190:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3194:	ldr	r1, [fp, #-16]
    3198:	str	r0, [r1, #4]
    319c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    31a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31a4:	str	r0, [r1, #56]	; 0x38
    31a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    31ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31b0:	str	r0, [r1, #60]	; 0x3c
    31b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31b8:	ldr	r0, [r0, #40]	; 0x28
    31bc:	cmp	r0, #0
    31c0:	bne	3204 <coda_inflate+0x2c2c>
    31c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    31c8:	ldr	r1, [fp, #-16]
    31cc:	ldr	r1, [r1, #16]
    31d0:	cmp	r0, r1
    31d4:	beq	3248 <coda_inflate+0x2c70>
    31d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31dc:	ldr	r0, [r0]
    31e0:	cmp	r0, #29
    31e4:	bcs	3248 <coda_inflate+0x2c70>
    31e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31ec:	ldr	r0, [r0]
    31f0:	cmp	r0, #26
    31f4:	bcc	3204 <coda_inflate+0x2c2c>
    31f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    31fc:	cmp	r0, #4
    3200:	beq	3248 <coda_inflate+0x2c70>
    3204:	ldr	r0, [fp, #-16]
    3208:	ldr	r1, [fp, #-16]
    320c:	ldr	r1, [r1, #12]
    3210:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3214:	ldr	r3, [fp, #-16]
    3218:	ldr	r3, [r3, #16]
    321c:	sub	r2, r2, r3
    3220:	bl	3480 <updatewindow>
    3224:	cmp	r0, #0
    3228:	beq	3244 <coda_inflate+0x2c6c>
    322c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3230:	movw	r1, #30
    3234:	str	r1, [r0]
    3238:	mvn	r0, #3
    323c:	str	r0, [fp, #-12]
    3240:	b	342c <coda_inflate+0x2e54>
    3244:	b	3248 <coda_inflate+0x2c70>
    3248:	ldr	r0, [fp, #-16]
    324c:	ldr	r0, [r0, #4]
    3250:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3254:	sub	r0, r1, r0
    3258:	str	r0, [fp, #-52]	; 0xffffffcc
    325c:	ldr	r0, [fp, #-16]
    3260:	ldr	r0, [r0, #16]
    3264:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3268:	sub	r0, r1, r0
    326c:	str	r0, [fp, #-56]	; 0xffffffc8
    3270:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3274:	ldr	r1, [fp, #-16]
    3278:	ldr	r2, [r1, #8]
    327c:	add	r0, r2, r0
    3280:	str	r0, [r1, #8]
    3284:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3288:	ldr	r1, [fp, #-16]
    328c:	ldr	r2, [r1, #20]
    3290:	add	r0, r2, r0
    3294:	str	r0, [r1, #20]
    3298:	ldr	r0, [fp, #-56]	; 0xffffffc8
    329c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    32a0:	ldr	r2, [r1, #28]
    32a4:	add	r0, r2, r0
    32a8:	str	r0, [r1, #28]
    32ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32b0:	ldr	r0, [r0, #8]
    32b4:	cmp	r0, #0
    32b8:	beq	3348 <coda_inflate+0x2d70>
    32bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    32c0:	cmp	r0, #0
    32c4:	beq	3348 <coda_inflate+0x2d70>
    32c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32cc:	ldr	r0, [r0, #16]
    32d0:	cmp	r0, #0
    32d4:	beq	3308 <coda_inflate+0x2d30>
    32d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32dc:	ldr	r0, [r0, #24]
    32e0:	ldr	r1, [fp, #-16]
    32e4:	ldr	r1, [r1, #12]
    32e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32ec:	movw	r3, #0
    32f0:	sub	r2, r3, r2
    32f4:	add	r1, r1, r2
    32f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32fc:	bl	0 <coda_crc32>
    3300:	str	r0, [sp, #16]
    3304:	b	3334 <coda_inflate+0x2d5c>
    3308:	ldr	r0, [fp, #-24]	; 0xffffffe8
    330c:	ldr	r0, [r0, #24]
    3310:	ldr	r1, [fp, #-16]
    3314:	ldr	r1, [r1, #12]
    3318:	ldr	r2, [fp, #-56]	; 0xffffffc8
    331c:	movw	r3, #0
    3320:	sub	r2, r3, r2
    3324:	add	r1, r1, r2
    3328:	ldr	r2, [fp, #-56]	; 0xffffffc8
    332c:	bl	0 <coda_adler32>
    3330:	str	r0, [sp, #16]
    3334:	ldr	r0, [sp, #16]
    3338:	ldr	r1, [fp, #-24]	; 0xffffffe8
    333c:	str	r0, [r1, #24]
    3340:	ldr	r1, [fp, #-16]
    3344:	str	r0, [r1, #48]	; 0x30
    3348:	ldr	r0, [fp, #-24]	; 0xffffffe8
    334c:	ldr	r0, [r0, #60]	; 0x3c
    3350:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3354:	ldr	r1, [r1, #4]
    3358:	cmp	r1, #0
    335c:	movw	r1, #0
    3360:	movne	r1, #1
    3364:	tst	r1, #1
    3368:	movw	r1, #64	; 0x40
    336c:	moveq	r1, #0
    3370:	add	r0, r0, r1
    3374:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3378:	ldr	r1, [r1]
    337c:	cmp	r1, #11
    3380:	movw	r1, #0
    3384:	moveq	r1, #1
    3388:	tst	r1, #1
    338c:	movw	r1, #128	; 0x80
    3390:	moveq	r1, #0
    3394:	add	r0, r0, r1
    3398:	ldr	r1, [fp, #-24]	; 0xffffffe8
    339c:	ldr	r1, [r1]
    33a0:	cmp	r1, #19
    33a4:	movw	r1, #1
    33a8:	str	r0, [sp, #12]
    33ac:	str	r1, [sp, #8]
    33b0:	beq	33cc <coda_inflate+0x2df4>
    33b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    33b8:	ldr	r0, [r0]
    33bc:	cmp	r0, #14
    33c0:	movw	r0, #0
    33c4:	moveq	r0, #1
    33c8:	str	r0, [sp, #8]
    33cc:	ldr	r0, [sp, #8]
    33d0:	tst	r0, #1
    33d4:	movw	r0, #256	; 0x100
    33d8:	moveq	r0, #0
    33dc:	ldr	r1, [sp, #12]
    33e0:	add	r0, r1, r0
    33e4:	ldr	r2, [fp, #-16]
    33e8:	str	r0, [r2, #44]	; 0x2c
    33ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
    33f0:	cmp	r0, #0
    33f4:	bne	3404 <coda_inflate+0x2e2c>
    33f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    33fc:	cmp	r0, #0
    3400:	beq	3410 <coda_inflate+0x2e38>
    3404:	ldr	r0, [fp, #-20]	; 0xffffffec
    3408:	cmp	r0, #4
    340c:	bne	3424 <coda_inflate+0x2e4c>
    3410:	ldr	r0, [fp, #-80]	; 0xffffffb0
    3414:	cmp	r0, #0
    3418:	bne	3424 <coda_inflate+0x2e4c>
    341c:	mvn	r0, #4
    3420:	str	r0, [fp, #-80]	; 0xffffffb0
    3424:	ldr	r0, [fp, #-80]	; 0xffffffb0
    3428:	str	r0, [fp, #-12]
    342c:	ldr	r0, [fp, #-12]
    3430:	sub	sp, fp, #8
    3434:	pop	{r4, sl, fp, pc}

00003438 <fixedtables>:
    3438:	sub	sp, sp, #4
    343c:	str	r0, [sp]
    3440:	ldr	r0, [sp]
    3444:	movw	r1, #0
    3448:	movt	r1, #0
    344c:	str	r1, [r0, #76]	; 0x4c
    3450:	ldr	r0, [sp]
    3454:	movw	r1, #9
    3458:	str	r1, [r0, #84]	; 0x54
    345c:	ldr	r0, [sp]
    3460:	movw	r1, #0
    3464:	movt	r1, #0
    3468:	str	r1, [r0, #80]	; 0x50
    346c:	ldr	r0, [sp]
    3470:	movw	r1, #5
    3474:	str	r1, [r0, #88]	; 0x58
    3478:	add	sp, sp, #4
    347c:	bx	lr

00003480 <updatewindow>:
    3480:	push	{fp, lr}
    3484:	mov	fp, sp
    3488:	sub	sp, sp, #32
    348c:	str	r0, [fp, #-8]
    3490:	str	r1, [fp, #-12]
    3494:	str	r2, [sp, #16]
    3498:	ldr	r0, [fp, #-8]
    349c:	ldr	r0, [r0, #28]
    34a0:	str	r0, [sp, #12]
    34a4:	ldr	r0, [sp, #12]
    34a8:	ldr	r0, [r0, #52]	; 0x34
    34ac:	movw	r1, #0
    34b0:	cmp	r0, r1
    34b4:	bne	351c <updatewindow+0x9c>
    34b8:	ldr	r0, [fp, #-8]
    34bc:	ldr	r0, [r0, #32]
    34c0:	ldr	r1, [fp, #-8]
    34c4:	ldr	r1, [r1, #40]	; 0x28
    34c8:	ldr	r2, [sp, #12]
    34cc:	ldr	r2, [r2, #36]	; 0x24
    34d0:	movw	r3, #1
    34d4:	lsl	r2, r3, r2
    34d8:	str	r0, [sp, #4]
    34dc:	mov	r0, r1
    34e0:	mov	r1, r2
    34e4:	mov	r2, r3
    34e8:	ldr	r3, [sp, #4]
    34ec:	blx	r3
    34f0:	ldr	r1, [sp, #12]
    34f4:	str	r0, [r1, #52]	; 0x34
    34f8:	ldr	r0, [sp, #12]
    34fc:	ldr	r0, [r0, #52]	; 0x34
    3500:	movw	r1, #0
    3504:	cmp	r0, r1
    3508:	bne	3518 <updatewindow+0x98>
    350c:	movw	r0, #1
    3510:	str	r0, [fp, #-4]
    3514:	b	36f0 <updatewindow+0x270>
    3518:	b	351c <updatewindow+0x9c>
    351c:	ldr	r0, [sp, #12]
    3520:	ldr	r0, [r0, #40]	; 0x28
    3524:	cmp	r0, #0
    3528:	bne	3558 <updatewindow+0xd8>
    352c:	ldr	r0, [sp, #12]
    3530:	ldr	r0, [r0, #36]	; 0x24
    3534:	movw	r1, #1
    3538:	lsl	r0, r1, r0
    353c:	ldr	r1, [sp, #12]
    3540:	str	r0, [r1, #40]	; 0x28
    3544:	ldr	r0, [sp, #12]
    3548:	movw	r1, #0
    354c:	str	r1, [r0, #48]	; 0x30
    3550:	ldr	r0, [sp, #12]
    3554:	str	r1, [r0, #44]	; 0x2c
    3558:	ldr	r0, [sp, #16]
    355c:	ldr	r1, [sp, #12]
    3560:	ldr	r1, [r1, #40]	; 0x28
    3564:	cmp	r0, r1
    3568:	bcc	35bc <updatewindow+0x13c>
    356c:	ldr	r0, [sp, #12]
    3570:	ldr	r0, [r0, #52]	; 0x34
    3574:	ldr	r1, [fp, #-12]
    3578:	ldr	r2, [sp, #12]
    357c:	ldr	r2, [r2, #40]	; 0x28
    3580:	movw	r3, #0
    3584:	sub	r2, r3, r2
    3588:	add	r1, r1, r2
    358c:	ldr	r2, [sp, #12]
    3590:	ldr	r2, [r2, #40]	; 0x28
    3594:	str	r3, [sp]
    3598:	bl	0 <memcpy>
    359c:	ldr	r0, [sp, #12]
    35a0:	ldr	r1, [sp]
    35a4:	str	r1, [r0, #48]	; 0x30
    35a8:	ldr	r0, [sp, #12]
    35ac:	ldr	r0, [r0, #40]	; 0x28
    35b0:	ldr	r2, [sp, #12]
    35b4:	str	r0, [r2, #44]	; 0x2c
    35b8:	b	36e8 <updatewindow+0x268>
    35bc:	ldr	r0, [sp, #12]
    35c0:	ldr	r0, [r0, #40]	; 0x28
    35c4:	ldr	r1, [sp, #12]
    35c8:	ldr	r1, [r1, #48]	; 0x30
    35cc:	sub	r0, r0, r1
    35d0:	str	r0, [sp, #8]
    35d4:	ldr	r0, [sp, #8]
    35d8:	ldr	r1, [sp, #16]
    35dc:	cmp	r0, r1
    35e0:	bls	35ec <updatewindow+0x16c>
    35e4:	ldr	r0, [sp, #16]
    35e8:	str	r0, [sp, #8]
    35ec:	ldr	r0, [sp, #12]
    35f0:	ldr	r0, [r0, #52]	; 0x34
    35f4:	ldr	r1, [sp, #12]
    35f8:	ldr	r1, [r1, #48]	; 0x30
    35fc:	add	r0, r0, r1
    3600:	ldr	r1, [fp, #-12]
    3604:	ldr	r2, [sp, #16]
    3608:	movw	r3, #0
    360c:	sub	r2, r3, r2
    3610:	add	r1, r1, r2
    3614:	ldr	r2, [sp, #8]
    3618:	bl	0 <memcpy>
    361c:	ldr	r0, [sp, #8]
    3620:	ldr	r1, [sp, #16]
    3624:	sub	r0, r1, r0
    3628:	str	r0, [sp, #16]
    362c:	ldr	r0, [sp, #16]
    3630:	cmp	r0, #0
    3634:	beq	367c <updatewindow+0x1fc>
    3638:	ldr	r0, [sp, #12]
    363c:	ldr	r0, [r0, #52]	; 0x34
    3640:	ldr	r1, [fp, #-12]
    3644:	ldr	r2, [sp, #16]
    3648:	movw	r3, #0
    364c:	sub	r2, r3, r2
    3650:	add	r1, r1, r2
    3654:	ldr	r2, [sp, #16]
    3658:	bl	0 <memcpy>
    365c:	ldr	r0, [sp, #16]
    3660:	ldr	r1, [sp, #12]
    3664:	str	r0, [r1, #48]	; 0x30
    3668:	ldr	r0, [sp, #12]
    366c:	ldr	r0, [r0, #40]	; 0x28
    3670:	ldr	r1, [sp, #12]
    3674:	str	r0, [r1, #44]	; 0x2c
    3678:	b	36e4 <updatewindow+0x264>
    367c:	ldr	r0, [sp, #8]
    3680:	ldr	r1, [sp, #12]
    3684:	ldr	r2, [r1, #48]	; 0x30
    3688:	add	r0, r2, r0
    368c:	str	r0, [r1, #48]	; 0x30
    3690:	ldr	r0, [sp, #12]
    3694:	ldr	r0, [r0, #48]	; 0x30
    3698:	ldr	r1, [sp, #12]
    369c:	ldr	r1, [r1, #40]	; 0x28
    36a0:	cmp	r0, r1
    36a4:	bne	36b4 <updatewindow+0x234>
    36a8:	ldr	r0, [sp, #12]
    36ac:	movw	r1, #0
    36b0:	str	r1, [r0, #48]	; 0x30
    36b4:	ldr	r0, [sp, #12]
    36b8:	ldr	r0, [r0, #44]	; 0x2c
    36bc:	ldr	r1, [sp, #12]
    36c0:	ldr	r1, [r1, #40]	; 0x28
    36c4:	cmp	r0, r1
    36c8:	bcs	36e0 <updatewindow+0x260>
    36cc:	ldr	r0, [sp, #8]
    36d0:	ldr	r1, [sp, #12]
    36d4:	ldr	r2, [r1, #44]	; 0x2c
    36d8:	add	r0, r2, r0
    36dc:	str	r0, [r1, #44]	; 0x2c
    36e0:	b	36e4 <updatewindow+0x264>
    36e4:	b	36e8 <updatewindow+0x268>
    36e8:	movw	r0, #0
    36ec:	str	r0, [fp, #-4]
    36f0:	ldr	r0, [fp, #-4]
    36f4:	mov	sp, fp
    36f8:	pop	{fp, pc}

000036fc <coda_inflateEnd>:
    36fc:	push	{fp, lr}
    3700:	mov	fp, sp
    3704:	sub	sp, sp, #24
    3708:	str	r0, [fp, #-8]
    370c:	ldr	r0, [fp, #-8]
    3710:	movw	r1, #0
    3714:	cmp	r0, r1
    3718:	beq	3744 <coda_inflateEnd+0x48>
    371c:	ldr	r0, [fp, #-8]
    3720:	ldr	r0, [r0, #28]
    3724:	movw	r1, #0
    3728:	cmp	r0, r1
    372c:	beq	3744 <coda_inflateEnd+0x48>
    3730:	ldr	r0, [fp, #-8]
    3734:	ldr	r0, [r0, #36]	; 0x24
    3738:	movw	r1, #0
    373c:	cmp	r0, r1
    3740:	bne	3750 <coda_inflateEnd+0x54>
    3744:	mvn	r0, #1
    3748:	str	r0, [fp, #-4]
    374c:	b	37d8 <coda_inflateEnd+0xdc>
    3750:	ldr	r0, [fp, #-8]
    3754:	ldr	r0, [r0, #28]
    3758:	str	r0, [sp, #12]
    375c:	ldr	r0, [sp, #12]
    3760:	ldr	r0, [r0, #52]	; 0x34
    3764:	movw	r1, #0
    3768:	cmp	r0, r1
    376c:	beq	379c <coda_inflateEnd+0xa0>
    3770:	ldr	r0, [fp, #-8]
    3774:	ldr	r0, [r0, #36]	; 0x24
    3778:	ldr	r1, [fp, #-8]
    377c:	ldr	r1, [r1, #40]	; 0x28
    3780:	ldr	r2, [sp, #12]
    3784:	ldr	r2, [r2, #52]	; 0x34
    3788:	str	r0, [sp, #8]
    378c:	mov	r0, r1
    3790:	mov	r1, r2
    3794:	ldr	r2, [sp, #8]
    3798:	blx	r2
    379c:	ldr	r0, [fp, #-8]
    37a0:	ldr	r0, [r0, #36]	; 0x24
    37a4:	ldr	r1, [fp, #-8]
    37a8:	ldr	r1, [r1, #40]	; 0x28
    37ac:	ldr	r2, [fp, #-8]
    37b0:	ldr	r2, [r2, #28]
    37b4:	str	r0, [sp, #4]
    37b8:	mov	r0, r1
    37bc:	mov	r1, r2
    37c0:	ldr	r2, [sp, #4]
    37c4:	blx	r2
    37c8:	ldr	r0, [fp, #-8]
    37cc:	movw	r1, #0
    37d0:	str	r1, [r0, #28]
    37d4:	str	r1, [fp, #-4]
    37d8:	ldr	r0, [fp, #-4]
    37dc:	mov	sp, fp
    37e0:	pop	{fp, pc}

000037e4 <coda_inflateGetDictionary>:
    37e4:	push	{fp, lr}
    37e8:	mov	fp, sp
    37ec:	sub	sp, sp, #24
    37f0:	str	r0, [fp, #-8]
    37f4:	str	r1, [sp, #12]
    37f8:	str	r2, [sp, #8]
    37fc:	ldr	r0, [fp, #-8]
    3800:	movw	r1, #0
    3804:	cmp	r0, r1
    3808:	beq	3820 <coda_inflateGetDictionary+0x3c>
    380c:	ldr	r0, [fp, #-8]
    3810:	ldr	r0, [r0, #28]
    3814:	movw	r1, #0
    3818:	cmp	r0, r1
    381c:	bne	382c <coda_inflateGetDictionary+0x48>
    3820:	mvn	r0, #1
    3824:	str	r0, [fp, #-4]
    3828:	b	38e8 <coda_inflateGetDictionary+0x104>
    382c:	ldr	r0, [fp, #-8]
    3830:	ldr	r0, [r0, #28]
    3834:	str	r0, [sp, #4]
    3838:	ldr	r0, [sp, #4]
    383c:	ldr	r0, [r0, #44]	; 0x2c
    3840:	cmp	r0, #0
    3844:	beq	38c0 <coda_inflateGetDictionary+0xdc>
    3848:	ldr	r0, [sp, #12]
    384c:	movw	r1, #0
    3850:	cmp	r0, r1
    3854:	beq	38c0 <coda_inflateGetDictionary+0xdc>
    3858:	ldr	r0, [sp, #12]
    385c:	ldr	r1, [sp, #4]
    3860:	ldr	r1, [r1, #52]	; 0x34
    3864:	ldr	r2, [sp, #4]
    3868:	ldr	r2, [r2, #48]	; 0x30
    386c:	add	r1, r1, r2
    3870:	ldr	r2, [sp, #4]
    3874:	ldr	r2, [r2, #44]	; 0x2c
    3878:	ldr	r3, [sp, #4]
    387c:	ldr	r3, [r3, #48]	; 0x30
    3880:	sub	r2, r2, r3
    3884:	bl	0 <memcpy>
    3888:	ldr	r0, [sp, #12]
    388c:	ldr	r1, [sp, #4]
    3890:	ldr	r1, [r1, #44]	; 0x2c
    3894:	add	r0, r0, r1
    3898:	ldr	r1, [sp, #4]
    389c:	ldr	r1, [r1, #48]	; 0x30
    38a0:	movw	r2, #0
    38a4:	sub	r1, r2, r1
    38a8:	add	r0, r0, r1
    38ac:	ldr	r1, [sp, #4]
    38b0:	ldr	r1, [r1, #52]	; 0x34
    38b4:	ldr	r2, [sp, #4]
    38b8:	ldr	r2, [r2, #48]	; 0x30
    38bc:	bl	0 <memcpy>
    38c0:	ldr	r0, [sp, #8]
    38c4:	movw	r1, #0
    38c8:	cmp	r0, r1
    38cc:	beq	38e0 <coda_inflateGetDictionary+0xfc>
    38d0:	ldr	r0, [sp, #4]
    38d4:	ldr	r0, [r0, #44]	; 0x2c
    38d8:	ldr	r1, [sp, #8]
    38dc:	str	r0, [r1]
    38e0:	movw	r0, #0
    38e4:	str	r0, [fp, #-4]
    38e8:	ldr	r0, [fp, #-4]
    38ec:	mov	sp, fp
    38f0:	pop	{fp, pc}

000038f4 <coda_inflateSetDictionary>:
    38f4:	push	{fp, lr}
    38f8:	mov	fp, sp
    38fc:	sub	sp, sp, #32
    3900:	str	r0, [fp, #-8]
    3904:	str	r1, [fp, #-12]
    3908:	str	r2, [sp, #16]
    390c:	ldr	r0, [fp, #-8]
    3910:	movw	r1, #0
    3914:	cmp	r0, r1
    3918:	beq	3930 <coda_inflateSetDictionary+0x3c>
    391c:	ldr	r0, [fp, #-8]
    3920:	ldr	r0, [r0, #28]
    3924:	movw	r1, #0
    3928:	cmp	r0, r1
    392c:	bne	393c <coda_inflateSetDictionary+0x48>
    3930:	mvn	r0, #1
    3934:	str	r0, [fp, #-4]
    3938:	b	3a28 <coda_inflateSetDictionary+0x134>
    393c:	ldr	r0, [fp, #-8]
    3940:	ldr	r0, [r0, #28]
    3944:	str	r0, [sp, #12]
    3948:	ldr	r0, [sp, #12]
    394c:	ldr	r0, [r0, #8]
    3950:	cmp	r0, #0
    3954:	beq	3974 <coda_inflateSetDictionary+0x80>
    3958:	ldr	r0, [sp, #12]
    395c:	ldr	r0, [r0]
    3960:	cmp	r0, #10
    3964:	beq	3974 <coda_inflateSetDictionary+0x80>
    3968:	mvn	r0, #1
    396c:	str	r0, [fp, #-4]
    3970:	b	3a28 <coda_inflateSetDictionary+0x134>
    3974:	ldr	r0, [sp, #12]
    3978:	ldr	r0, [r0]
    397c:	cmp	r0, #10
    3980:	bne	39d4 <coda_inflateSetDictionary+0xe0>
    3984:	movw	r0, #0
    3988:	str	r0, [sp]
    398c:	ldr	r1, [sp]
    3990:	ldr	r2, [sp]
    3994:	bl	0 <coda_adler32>
    3998:	str	r0, [sp, #8]
    399c:	ldr	r0, [sp, #8]
    39a0:	ldr	r1, [fp, #-12]
    39a4:	ldr	r2, [sp, #16]
    39a8:	bl	0 <coda_adler32>
    39ac:	str	r0, [sp, #8]
    39b0:	ldr	r0, [sp, #8]
    39b4:	ldr	r1, [sp, #12]
    39b8:	ldr	r1, [r1, #24]
    39bc:	cmp	r0, r1
    39c0:	beq	39d0 <coda_inflateSetDictionary+0xdc>
    39c4:	mvn	r0, #2
    39c8:	str	r0, [fp, #-4]
    39cc:	b	3a28 <coda_inflateSetDictionary+0x134>
    39d0:	b	39d4 <coda_inflateSetDictionary+0xe0>
    39d4:	ldr	r0, [fp, #-8]
    39d8:	ldr	r1, [fp, #-12]
    39dc:	ldr	r2, [sp, #16]
    39e0:	add	r1, r1, r2
    39e4:	ldr	r2, [sp, #16]
    39e8:	bl	3480 <updatewindow>
    39ec:	str	r0, [sp, #4]
    39f0:	ldr	r0, [sp, #4]
    39f4:	cmp	r0, #0
    39f8:	beq	3a14 <coda_inflateSetDictionary+0x120>
    39fc:	ldr	r0, [sp, #12]
    3a00:	movw	r1, #30
    3a04:	str	r1, [r0]
    3a08:	mvn	r0, #3
    3a0c:	str	r0, [fp, #-4]
    3a10:	b	3a28 <coda_inflateSetDictionary+0x134>
    3a14:	ldr	r0, [sp, #12]
    3a18:	movw	r1, #1
    3a1c:	str	r1, [r0, #12]
    3a20:	movw	r0, #0
    3a24:	str	r0, [fp, #-4]
    3a28:	ldr	r0, [fp, #-4]
    3a2c:	mov	sp, fp
    3a30:	pop	{fp, pc}

00003a34 <coda_inflateGetHeader>:
    3a34:	sub	sp, sp, #16
    3a38:	str	r0, [sp, #8]
    3a3c:	str	r1, [sp, #4]
    3a40:	ldr	r0, [sp, #8]
    3a44:	movw	r1, #0
    3a48:	cmp	r0, r1
    3a4c:	beq	3a64 <coda_inflateGetHeader+0x30>
    3a50:	ldr	r0, [sp, #8]
    3a54:	ldr	r0, [r0, #28]
    3a58:	movw	r1, #0
    3a5c:	cmp	r0, r1
    3a60:	bne	3a70 <coda_inflateGetHeader+0x3c>
    3a64:	mvn	r0, #1
    3a68:	str	r0, [sp, #12]
    3a6c:	b	3ab8 <coda_inflateGetHeader+0x84>
    3a70:	ldr	r0, [sp, #8]
    3a74:	ldr	r0, [r0, #28]
    3a78:	str	r0, [sp]
    3a7c:	ldr	r0, [sp]
    3a80:	ldr	r0, [r0, #8]
    3a84:	and	r0, r0, #2
    3a88:	cmp	r0, #0
    3a8c:	bne	3a9c <coda_inflateGetHeader+0x68>
    3a90:	mvn	r0, #1
    3a94:	str	r0, [sp, #12]
    3a98:	b	3ab8 <coda_inflateGetHeader+0x84>
    3a9c:	ldr	r0, [sp, #4]
    3aa0:	ldr	r1, [sp]
    3aa4:	str	r0, [r1, #32]
    3aa8:	ldr	r0, [sp, #4]
    3aac:	movw	r1, #0
    3ab0:	str	r1, [r0, #48]	; 0x30
    3ab4:	str	r1, [sp, #12]
    3ab8:	ldr	r0, [sp, #12]
    3abc:	add	sp, sp, #16
    3ac0:	bx	lr

00003ac4 <coda_inflateSync>:
    3ac4:	push	{fp, lr}
    3ac8:	mov	fp, sp
    3acc:	sub	sp, sp, #32
    3ad0:	str	r0, [fp, #-8]
    3ad4:	ldr	r0, [fp, #-8]
    3ad8:	movw	r1, #0
    3adc:	cmp	r0, r1
    3ae0:	beq	3af8 <coda_inflateSync+0x34>
    3ae4:	ldr	r0, [fp, #-8]
    3ae8:	ldr	r0, [r0, #28]
    3aec:	movw	r1, #0
    3af0:	cmp	r0, r1
    3af4:	bne	3b04 <coda_inflateSync+0x40>
    3af8:	mvn	r0, #1
    3afc:	str	r0, [fp, #-4]
    3b00:	b	3cd0 <coda_inflateSync+0x20c>
    3b04:	ldr	r0, [fp, #-8]
    3b08:	ldr	r0, [r0, #28]
    3b0c:	str	r0, [sp, #4]
    3b10:	ldr	r0, [fp, #-8]
    3b14:	ldr	r0, [r0, #4]
    3b18:	cmp	r0, #0
    3b1c:	bne	3b3c <coda_inflateSync+0x78>
    3b20:	ldr	r0, [sp, #4]
    3b24:	ldr	r0, [r0, #60]	; 0x3c
    3b28:	cmp	r0, #8
    3b2c:	bcs	3b3c <coda_inflateSync+0x78>
    3b30:	mvn	r0, #4
    3b34:	str	r0, [fp, #-4]
    3b38:	b	3cd0 <coda_inflateSync+0x20c>
    3b3c:	ldr	r0, [sp, #4]
    3b40:	ldr	r0, [r0]
    3b44:	cmp	r0, #31
    3b48:	beq	3c0c <coda_inflateSync+0x148>
    3b4c:	ldr	r0, [sp, #4]
    3b50:	movw	r1, #31
    3b54:	str	r1, [r0]
    3b58:	ldr	r0, [sp, #4]
    3b5c:	ldr	r0, [r0, #60]	; 0x3c
    3b60:	and	r0, r0, #7
    3b64:	ldr	r1, [sp, #4]
    3b68:	ldr	r2, [r1, #56]	; 0x38
    3b6c:	lsl	r0, r2, r0
    3b70:	str	r0, [r1, #56]	; 0x38
    3b74:	ldr	r0, [sp, #4]
    3b78:	ldr	r0, [r0, #60]	; 0x3c
    3b7c:	and	r0, r0, #7
    3b80:	ldr	r1, [sp, #4]
    3b84:	ldr	r2, [r1, #60]	; 0x3c
    3b88:	sub	r0, r2, r0
    3b8c:	str	r0, [r1, #60]	; 0x3c
    3b90:	movw	r0, #0
    3b94:	str	r0, [fp, #-12]
    3b98:	ldr	r0, [sp, #4]
    3b9c:	ldr	r0, [r0, #60]	; 0x3c
    3ba0:	cmp	r0, #8
    3ba4:	bcc	3bec <coda_inflateSync+0x128>
    3ba8:	ldr	r0, [sp, #4]
    3bac:	ldr	r0, [r0, #56]	; 0x38
    3bb0:	ldr	r1, [fp, #-12]
    3bb4:	add	r2, r1, #1
    3bb8:	str	r2, [fp, #-12]
    3bbc:	add	r2, sp, #8
    3bc0:	add	r1, r2, r1
    3bc4:	strb	r0, [r1]
    3bc8:	ldr	r0, [sp, #4]
    3bcc:	ldr	r1, [r0, #56]	; 0x38
    3bd0:	lsr	r1, r1, #8
    3bd4:	str	r1, [r0, #56]	; 0x38
    3bd8:	ldr	r0, [sp, #4]
    3bdc:	ldr	r1, [r0, #60]	; 0x3c
    3be0:	sub	r1, r1, #8
    3be4:	str	r1, [r0, #60]	; 0x3c
    3be8:	b	3b98 <coda_inflateSync+0xd4>
    3bec:	add	r1, sp, #8
    3bf0:	ldr	r0, [sp, #4]
    3bf4:	movw	r2, #0
    3bf8:	str	r2, [r0, #104]	; 0x68
    3bfc:	ldr	r0, [sp, #4]
    3c00:	add	r0, r0, #104	; 0x68
    3c04:	ldr	r2, [fp, #-12]
    3c08:	bl	3cdc <syncsearch>
    3c0c:	ldr	r0, [sp, #4]
    3c10:	add	r0, r0, #104	; 0x68
    3c14:	ldr	r1, [fp, #-8]
    3c18:	ldr	r1, [r1]
    3c1c:	ldr	r2, [fp, #-8]
    3c20:	ldr	r2, [r2, #4]
    3c24:	bl	3cdc <syncsearch>
    3c28:	str	r0, [fp, #-12]
    3c2c:	ldr	r0, [fp, #-12]
    3c30:	ldr	r1, [fp, #-8]
    3c34:	ldr	r2, [r1, #4]
    3c38:	sub	r0, r2, r0
    3c3c:	str	r0, [r1, #4]
    3c40:	ldr	r0, [fp, #-12]
    3c44:	ldr	r1, [fp, #-8]
    3c48:	ldr	r2, [r1]
    3c4c:	add	r0, r2, r0
    3c50:	str	r0, [r1]
    3c54:	ldr	r0, [fp, #-12]
    3c58:	ldr	r1, [fp, #-8]
    3c5c:	ldr	r2, [r1, #8]
    3c60:	add	r0, r2, r0
    3c64:	str	r0, [r1, #8]
    3c68:	ldr	r0, [sp, #4]
    3c6c:	ldr	r0, [r0, #104]	; 0x68
    3c70:	cmp	r0, #4
    3c74:	beq	3c84 <coda_inflateSync+0x1c0>
    3c78:	mvn	r0, #2
    3c7c:	str	r0, [fp, #-4]
    3c80:	b	3cd0 <coda_inflateSync+0x20c>
    3c84:	ldr	r0, [fp, #-8]
    3c88:	ldr	r0, [r0, #8]
    3c8c:	str	r0, [sp, #16]
    3c90:	ldr	r0, [fp, #-8]
    3c94:	ldr	r0, [r0, #20]
    3c98:	str	r0, [sp, #12]
    3c9c:	ldr	r0, [fp, #-8]
    3ca0:	bl	120 <coda_inflateReset>
    3ca4:	ldr	r1, [sp, #16]
    3ca8:	ldr	r2, [fp, #-8]
    3cac:	str	r1, [r2, #8]
    3cb0:	ldr	r1, [sp, #12]
    3cb4:	ldr	r2, [fp, #-8]
    3cb8:	str	r1, [r2, #20]
    3cbc:	ldr	r1, [sp, #4]
    3cc0:	movw	r2, #11
    3cc4:	str	r2, [r1]
    3cc8:	movw	r1, #0
    3ccc:	str	r1, [fp, #-4]
    3cd0:	ldr	r0, [fp, #-4]
    3cd4:	mov	sp, fp
    3cd8:	pop	{fp, pc}

00003cdc <syncsearch>:
    3cdc:	sub	sp, sp, #24
    3ce0:	str	r0, [sp, #20]
    3ce4:	str	r1, [sp, #16]
    3ce8:	str	r2, [sp, #12]
    3cec:	ldr	r0, [sp, #20]
    3cf0:	ldr	r0, [r0]
    3cf4:	str	r0, [sp, #8]
    3cf8:	movw	r0, #0
    3cfc:	str	r0, [sp, #4]
    3d00:	ldr	r0, [sp, #4]
    3d04:	ldr	r1, [sp, #12]
    3d08:	cmp	r0, r1
    3d0c:	movw	r0, #0
    3d10:	str	r0, [sp]
    3d14:	bcs	3d2c <syncsearch+0x50>
    3d18:	ldr	r0, [sp, #8]
    3d1c:	cmp	r0, #4
    3d20:	movw	r0, #0
    3d24:	movcc	r0, #1
    3d28:	str	r0, [sp]
    3d2c:	ldr	r0, [sp]
    3d30:	tst	r0, #1
    3d34:	beq	3dc4 <syncsearch+0xe8>
    3d38:	ldr	r0, [sp, #16]
    3d3c:	ldr	r1, [sp, #4]
    3d40:	add	r0, r0, r1
    3d44:	ldrb	r0, [r0]
    3d48:	ldr	r1, [sp, #8]
    3d4c:	cmp	r1, #2
    3d50:	movw	r1, #0
    3d54:	movcc	r1, #1
    3d58:	tst	r1, #1
    3d5c:	movw	r1, #0
    3d60:	moveq	r1, #255	; 0xff
    3d64:	cmp	r0, r1
    3d68:	bne	3d7c <syncsearch+0xa0>
    3d6c:	ldr	r0, [sp, #8]
    3d70:	add	r0, r0, #1
    3d74:	str	r0, [sp, #8]
    3d78:	b	3db4 <syncsearch+0xd8>
    3d7c:	ldr	r0, [sp, #16]
    3d80:	ldr	r1, [sp, #4]
    3d84:	add	r0, r0, r1
    3d88:	ldrsb	r0, [r0]
    3d8c:	cmp	r0, #0
    3d90:	beq	3da0 <syncsearch+0xc4>
    3d94:	movw	r0, #0
    3d98:	str	r0, [sp, #8]
    3d9c:	b	3db0 <syncsearch+0xd4>
    3da0:	ldr	r0, [sp, #8]
    3da4:	movw	r1, #4
    3da8:	sub	r0, r1, r0
    3dac:	str	r0, [sp, #8]
    3db0:	b	3db4 <syncsearch+0xd8>
    3db4:	ldr	r0, [sp, #4]
    3db8:	add	r0, r0, #1
    3dbc:	str	r0, [sp, #4]
    3dc0:	b	3d00 <syncsearch+0x24>
    3dc4:	ldr	r0, [sp, #8]
    3dc8:	ldr	r1, [sp, #20]
    3dcc:	str	r0, [r1]
    3dd0:	ldr	r0, [sp, #4]
    3dd4:	add	sp, sp, #24
    3dd8:	bx	lr

00003ddc <coda_inflateSyncPoint>:
    3ddc:	sub	sp, sp, #16
    3de0:	str	r0, [sp, #8]
    3de4:	ldr	r0, [sp, #8]
    3de8:	movw	r1, #0
    3dec:	cmp	r0, r1
    3df0:	beq	3e08 <coda_inflateSyncPoint+0x2c>
    3df4:	ldr	r0, [sp, #8]
    3df8:	ldr	r0, [r0, #28]
    3dfc:	movw	r1, #0
    3e00:	cmp	r0, r1
    3e04:	bne	3e14 <coda_inflateSyncPoint+0x38>
    3e08:	mvn	r0, #1
    3e0c:	str	r0, [sp, #12]
    3e10:	b	3e5c <coda_inflateSyncPoint+0x80>
    3e14:	ldr	r0, [sp, #8]
    3e18:	ldr	r0, [r0, #28]
    3e1c:	str	r0, [sp, #4]
    3e20:	ldr	r0, [sp, #4]
    3e24:	ldr	r0, [r0]
    3e28:	cmp	r0, #13
    3e2c:	movw	r0, #0
    3e30:	str	r0, [sp]
    3e34:	bne	3e50 <coda_inflateSyncPoint+0x74>
    3e38:	ldr	r0, [sp, #4]
    3e3c:	ldr	r0, [r0, #60]	; 0x3c
    3e40:	cmp	r0, #0
    3e44:	movw	r0, #0
    3e48:	moveq	r0, #1
    3e4c:	str	r0, [sp]
    3e50:	ldr	r0, [sp]
    3e54:	and	r0, r0, #1
    3e58:	str	r0, [sp, #12]
    3e5c:	ldr	r0, [sp, #12]
    3e60:	add	sp, sp, #16
    3e64:	bx	lr

00003e68 <coda_inflateCopy>:
    3e68:	push	{fp, lr}
    3e6c:	mov	fp, sp
    3e70:	sub	sp, sp, #40	; 0x28
    3e74:	str	r0, [fp, #-8]
    3e78:	str	r1, [fp, #-12]
    3e7c:	ldr	r0, [fp, #-8]
    3e80:	movw	r1, #0
    3e84:	cmp	r0, r1
    3e88:	beq	3ed8 <coda_inflateCopy+0x70>
    3e8c:	ldr	r0, [fp, #-12]
    3e90:	movw	r1, #0
    3e94:	cmp	r0, r1
    3e98:	beq	3ed8 <coda_inflateCopy+0x70>
    3e9c:	ldr	r0, [fp, #-12]
    3ea0:	ldr	r0, [r0, #28]
    3ea4:	movw	r1, #0
    3ea8:	cmp	r0, r1
    3eac:	beq	3ed8 <coda_inflateCopy+0x70>
    3eb0:	ldr	r0, [fp, #-12]
    3eb4:	ldr	r0, [r0, #32]
    3eb8:	movw	r1, #0
    3ebc:	cmp	r0, r1
    3ec0:	beq	3ed8 <coda_inflateCopy+0x70>
    3ec4:	ldr	r0, [fp, #-12]
    3ec8:	ldr	r0, [r0, #36]	; 0x24
    3ecc:	movw	r1, #0
    3ed0:	cmp	r0, r1
    3ed4:	bne	3ee4 <coda_inflateCopy+0x7c>
    3ed8:	mvn	r0, #1
    3edc:	str	r0, [fp, #-4]
    3ee0:	b	40f4 <coda_inflateCopy+0x28c>
    3ee4:	ldr	r0, [fp, #-12]
    3ee8:	ldr	r0, [r0, #28]
    3eec:	str	r0, [fp, #-16]
    3ef0:	ldr	r0, [fp, #-12]
    3ef4:	ldr	r0, [r0, #32]
    3ef8:	ldr	r1, [fp, #-12]
    3efc:	ldr	r1, [r1, #40]	; 0x28
    3f00:	str	r0, [sp, #8]
    3f04:	mov	r0, r1
    3f08:	movw	r1, #1
    3f0c:	movw	r2, #7116	; 0x1bcc
    3f10:	ldr	r3, [sp, #8]
    3f14:	blx	r3
    3f18:	str	r0, [sp, #20]
    3f1c:	ldr	r0, [sp, #20]
    3f20:	movw	r1, #0
    3f24:	cmp	r0, r1
    3f28:	bne	3f38 <coda_inflateCopy+0xd0>
    3f2c:	mvn	r0, #3
    3f30:	str	r0, [fp, #-4]
    3f34:	b	40f4 <coda_inflateCopy+0x28c>
    3f38:	movw	r0, #0
    3f3c:	str	r0, [sp, #16]
    3f40:	ldr	r1, [fp, #-16]
    3f44:	ldr	r1, [r1, #52]	; 0x34
    3f48:	cmp	r1, r0
    3f4c:	beq	3fd4 <coda_inflateCopy+0x16c>
    3f50:	ldr	r0, [fp, #-12]
    3f54:	ldr	r0, [r0, #32]
    3f58:	ldr	r1, [fp, #-12]
    3f5c:	ldr	r1, [r1, #40]	; 0x28
    3f60:	ldr	r2, [fp, #-16]
    3f64:	ldr	r2, [r2, #36]	; 0x24
    3f68:	movw	r3, #1
    3f6c:	lsl	r2, r3, r2
    3f70:	str	r0, [sp, #4]
    3f74:	mov	r0, r1
    3f78:	mov	r1, r2
    3f7c:	mov	r2, r3
    3f80:	ldr	r3, [sp, #4]
    3f84:	blx	r3
    3f88:	str	r0, [sp, #16]
    3f8c:	ldr	r0, [sp, #16]
    3f90:	movw	r1, #0
    3f94:	cmp	r0, r1
    3f98:	bne	3fd0 <coda_inflateCopy+0x168>
    3f9c:	ldr	r0, [fp, #-12]
    3fa0:	ldr	r0, [r0, #36]	; 0x24
    3fa4:	ldr	r1, [fp, #-12]
    3fa8:	ldr	r1, [r1, #40]	; 0x28
    3fac:	ldr	r2, [sp, #20]
    3fb0:	str	r0, [sp]
    3fb4:	mov	r0, r1
    3fb8:	mov	r1, r2
    3fbc:	ldr	r2, [sp]
    3fc0:	blx	r2
    3fc4:	mvn	r0, #3
    3fc8:	str	r0, [fp, #-4]
    3fcc:	b	40f4 <coda_inflateCopy+0x28c>
    3fd0:	b	3fd4 <coda_inflateCopy+0x16c>
    3fd4:	ldr	r0, [fp, #-8]
    3fd8:	ldr	r1, [fp, #-12]
    3fdc:	movw	r2, #56	; 0x38
    3fe0:	bl	0 <memcpy>
    3fe4:	ldr	r0, [sp, #20]
    3fe8:	ldr	r1, [fp, #-16]
    3fec:	movw	r2, #7116	; 0x1bcc
    3ff0:	bl	0 <memcpy>
    3ff4:	ldr	r0, [fp, #-16]
    3ff8:	ldr	r0, [r0, #76]	; 0x4c
    3ffc:	ldr	r1, [fp, #-16]
    4000:	add	r1, r1, #1328	; 0x530
    4004:	cmp	r0, r1
    4008:	bcc	4074 <coda_inflateCopy+0x20c>
    400c:	ldr	r0, [fp, #-16]
    4010:	ldr	r0, [r0, #76]	; 0x4c
    4014:	ldr	r1, [fp, #-16]
    4018:	add	r1, r1, #1328	; 0x530
    401c:	movw	r2, #5776	; 0x1690
    4020:	add	r1, r1, r2
    4024:	mvn	r2, #3
    4028:	add	r1, r1, r2
    402c:	cmp	r0, r1
    4030:	bhi	4074 <coda_inflateCopy+0x20c>
    4034:	ldr	r0, [sp, #20]
    4038:	ldr	r1, [fp, #-16]
    403c:	ldr	r2, [r1, #76]	; 0x4c
    4040:	sub	r1, r2, r1
    4044:	add	r1, r1, r0
    4048:	str	r1, [r0, #76]	; 0x4c
    404c:	ldr	r0, [sp, #20]
    4050:	add	r0, r0, #1328	; 0x530
    4054:	ldr	r1, [fp, #-16]
    4058:	ldr	r2, [r1, #80]	; 0x50
    405c:	sub	r1, r2, r1
    4060:	sub	r1, r1, #1328	; 0x530
    4064:	asr	r2, r1, #2
    4068:	add	r0, r0, r1
    406c:	ldr	r1, [sp, #20]
    4070:	str	r0, [r1, #80]	; 0x50
    4074:	ldr	r0, [sp, #20]
    4078:	add	r0, r0, #1328	; 0x530
    407c:	ldr	r1, [fp, #-16]
    4080:	ldr	r2, [r1, #108]	; 0x6c
    4084:	sub	r1, r2, r1
    4088:	sub	r1, r1, #1328	; 0x530
    408c:	asr	r2, r1, #2
    4090:	add	r0, r0, r1
    4094:	ldr	r1, [sp, #20]
    4098:	str	r0, [r1, #108]	; 0x6c
    409c:	ldr	r0, [sp, #16]
    40a0:	movw	r1, #0
    40a4:	cmp	r0, r1
    40a8:	beq	40d4 <coda_inflateCopy+0x26c>
    40ac:	ldr	r0, [fp, #-16]
    40b0:	ldr	r0, [r0, #36]	; 0x24
    40b4:	movw	r1, #1
    40b8:	lsl	r0, r1, r0
    40bc:	str	r0, [sp, #12]
    40c0:	ldr	r0, [sp, #16]
    40c4:	ldr	r1, [fp, #-16]
    40c8:	ldr	r1, [r1, #52]	; 0x34
    40cc:	ldr	r2, [sp, #12]
    40d0:	bl	0 <memcpy>
    40d4:	ldr	r0, [sp, #16]
    40d8:	ldr	r1, [sp, #20]
    40dc:	str	r0, [r1, #52]	; 0x34
    40e0:	ldr	r0, [sp, #20]
    40e4:	ldr	r1, [fp, #-8]
    40e8:	str	r0, [r1, #28]
    40ec:	movw	r0, #0
    40f0:	str	r0, [fp, #-4]
    40f4:	ldr	r0, [fp, #-4]
    40f8:	mov	sp, fp
    40fc:	pop	{fp, pc}

00004100 <coda_inflateUndermine>:
    4100:	sub	sp, sp, #16
    4104:	str	r0, [sp, #8]
    4108:	str	r1, [sp, #4]
    410c:	ldr	r0, [sp, #8]
    4110:	movw	r1, #0
    4114:	cmp	r0, r1
    4118:	beq	4130 <coda_inflateUndermine+0x30>
    411c:	ldr	r0, [sp, #8]
    4120:	ldr	r0, [r0, #28]
    4124:	movw	r1, #0
    4128:	cmp	r0, r1
    412c:	bne	413c <coda_inflateUndermine+0x3c>
    4130:	mvn	r0, #1
    4134:	str	r0, [sp, #12]
    4138:	b	4188 <coda_inflateUndermine+0x88>
    413c:	ldr	r0, [sp, #8]
    4140:	ldr	r0, [r0, #28]
    4144:	str	r0, [sp]
    4148:	ldr	r0, [sp, #4]
    414c:	cmp	r0, #0
    4150:	movw	r0, #0
    4154:	movne	r0, #1
    4158:	mvn	r1, #0
    415c:	eor	r0, r0, r1
    4160:	and	r0, r0, #1
    4164:	ldr	r1, [sp]
    4168:	add	r1, r1, #7104	; 0x1bc0
    416c:	str	r0, [r1]
    4170:	ldr	r0, [sp]
    4174:	add	r0, r0, #7104	; 0x1bc0
    4178:	movw	r1, #1
    417c:	str	r1, [r0]
    4180:	mvn	r0, #2
    4184:	str	r0, [sp, #12]
    4188:	ldr	r0, [sp, #12]
    418c:	add	sp, sp, #16
    4190:	bx	lr

00004194 <coda_inflateMark>:
    4194:	sub	sp, sp, #24
    4198:	str	r0, [sp, #16]
    419c:	ldr	r0, [sp, #16]
    41a0:	movw	r1, #0
    41a4:	cmp	r0, r1
    41a8:	beq	41c0 <coda_inflateMark+0x2c>
    41ac:	ldr	r0, [sp, #16]
    41b0:	ldr	r0, [r0, #28]
    41b4:	movw	r1, #0
    41b8:	cmp	r0, r1
    41bc:	bne	41cc <coda_inflateMark+0x38>
    41c0:	ldr	r0, [pc, #172]	; 4274 <coda_inflateMark+0xe0>
    41c4:	str	r0, [sp, #20]
    41c8:	b	4268 <coda_inflateMark+0xd4>
    41cc:	ldr	r0, [sp, #16]
    41d0:	ldr	r0, [r0, #28]
    41d4:	str	r0, [sp, #12]
    41d8:	ldr	r0, [sp, #12]
    41dc:	movw	r1, #7108	; 0x1bc4
    41e0:	add	r0, r0, r1
    41e4:	ldr	r0, [r0]
    41e8:	lsl	r0, r0, #16
    41ec:	ldr	r1, [sp, #12]
    41f0:	ldr	r1, [r1]
    41f4:	cmp	r1, #15
    41f8:	str	r0, [sp, #8]
    41fc:	bne	4210 <coda_inflateMark+0x7c>
    4200:	ldr	r0, [sp, #12]
    4204:	ldr	r0, [r0, #64]	; 0x40
    4208:	str	r0, [sp, #4]
    420c:	b	4258 <coda_inflateMark+0xc4>
    4210:	ldr	r0, [sp, #12]
    4214:	ldr	r0, [r0]
    4218:	cmp	r0, #24
    421c:	bne	4244 <coda_inflateMark+0xb0>
    4220:	ldr	r0, [sp, #12]
    4224:	movw	r1, #7112	; 0x1bc8
    4228:	add	r0, r0, r1
    422c:	ldr	r0, [r0]
    4230:	ldr	r1, [sp, #12]
    4234:	ldr	r1, [r1, #64]	; 0x40
    4238:	sub	r0, r0, r1
    423c:	str	r0, [sp]
    4240:	b	4250 <coda_inflateMark+0xbc>
    4244:	movw	r0, #0
    4248:	str	r0, [sp]
    424c:	b	4250 <coda_inflateMark+0xbc>
    4250:	ldr	r0, [sp]
    4254:	str	r0, [sp, #4]
    4258:	ldr	r0, [sp, #4]
    425c:	ldr	r1, [sp, #8]
    4260:	add	r0, r1, r0
    4264:	str	r0, [sp, #20]
    4268:	ldr	r0, [sp, #20]
    426c:	add	sp, sp, #24
    4270:	bx	lr
    4274:	.word	0xffff0000
