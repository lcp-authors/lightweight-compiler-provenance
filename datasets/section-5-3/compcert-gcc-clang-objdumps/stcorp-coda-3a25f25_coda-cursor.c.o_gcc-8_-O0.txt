
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_dynamic_type_delete>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #8
      10:	str	r0, [fp, #-8]
      14:	ldr	r3, [fp, #-8]
      18:	cmp	r3, #0
      1c:	beq	b0 <coda_dynamic_type_delete+0xb0>
      20:	ldr	r3, [fp, #-8]
      24:	ldr	r3, [r3]
      28:	cmp	r3, #101	; 0x65
      2c:	beq	b8 <coda_dynamic_type_delete+0xb8>
      30:	cmp	r3, #101	; 0x65
      34:	bhi	4c <coda_dynamic_type_delete+0x4c>
      38:	cmp	r3, #1
      3c:	bls	70 <coda_dynamic_type_delete+0x70>
      40:	cmp	r3, #100	; 0x64
      44:	beq	7c <coda_dynamic_type_delete+0x7c>
      48:	b	c4 <coda_dynamic_type_delete+0xc4>
      4c:	cmp	r3, #103	; 0x67
      50:	beq	88 <coda_dynamic_type_delete+0x88>
      54:	cmp	r3, #103	; 0x67
      58:	bcc	c0 <coda_dynamic_type_delete+0xc0>
      5c:	cmp	r3, #104	; 0x68
      60:	beq	94 <coda_dynamic_type_delete+0x94>
      64:	cmp	r3, #105	; 0x69
      68:	beq	a0 <coda_dynamic_type_delete+0xa0>
      6c:	b	c4 <coda_dynamic_type_delete+0xc4>
      70:	ldr	r0, [fp, #-8]
      74:	bl	0 <coda_type_release>
      78:	b	c4 <coda_dynamic_type_delete+0xc4>
      7c:	ldr	r0, [fp, #-8]
      80:	bl	0 <coda_mem_type_delete>
      84:	b	c4 <coda_dynamic_type_delete+0xc4>
      88:	ldr	r0, [fp, #-8]
      8c:	bl	0 <coda_cdf_type_delete>
      90:	b	c4 <coda_dynamic_type_delete+0xc4>
      94:	ldr	r0, [fp, #-8]
      98:	bl	0 <coda_netcdf_type_delete>
      9c:	b	c4 <coda_dynamic_type_delete+0xc4>
      a0:	ldr	r0, [fp, #-8]
      a4:	bl	0 <coda_grib_type_delete>
      a8:	nop	{0}
      ac:	b	c4 <coda_dynamic_type_delete+0xc4>
      b0:	nop	{0}
      b4:	b	c4 <coda_dynamic_type_delete+0xc4>
      b8:	nop	{0}
      bc:	b	c4 <coda_dynamic_type_delete+0xc4>
      c0:	nop	{0}
      c4:	sub	sp, fp, #4
      c8:	ldr	fp, [sp]
      cc:	add	sp, sp, #4
      d0:	pop	{pc}		; (ldr pc, [sp], #4)

000000d4 <coda_cursor_compare>:
      d4:	push	{fp}		; (str fp, [sp, #-4]!)
      d8:	add	fp, sp, #0
      dc:	sub	sp, sp, #20
      e0:	str	r0, [fp, #-16]
      e4:	str	r1, [fp, #-20]	; 0xffffffec
      e8:	mov	r3, #0
      ec:	str	r3, [fp, #-8]
      f0:	b	17c <coda_cursor_compare+0xa8>
      f4:	ldr	r3, [fp, #-8]
      f8:	cmp	r3, #0
      fc:	ble	170 <coda_cursor_compare+0x9c>
     100:	ldr	r2, [fp, #-16]
     104:	ldr	r3, [fp, #-8]
     108:	lsl	r3, r3, #4
     10c:	add	r3, r2, r3
     110:	ldr	r2, [r3, #12]
     114:	ldr	r1, [fp, #-20]	; 0xffffffec
     118:	ldr	r3, [fp, #-8]
     11c:	lsl	r3, r3, #4
     120:	add	r3, r1, r3
     124:	ldr	r3, [r3, #12]
     128:	cmp	r2, r3
     12c:	ble	138 <coda_cursor_compare+0x64>
     130:	mov	r3, #1
     134:	b	1e0 <coda_cursor_compare+0x10c>
     138:	ldr	r2, [fp, #-16]
     13c:	ldr	r3, [fp, #-8]
     140:	lsl	r3, r3, #4
     144:	add	r3, r2, r3
     148:	ldr	r2, [r3, #12]
     14c:	ldr	r1, [fp, #-20]	; 0xffffffec
     150:	ldr	r3, [fp, #-8]
     154:	lsl	r3, r3, #4
     158:	add	r3, r1, r3
     15c:	ldr	r3, [r3, #12]
     160:	cmp	r2, r3
     164:	bge	170 <coda_cursor_compare+0x9c>
     168:	mvn	r3, #0
     16c:	b	1e0 <coda_cursor_compare+0x10c>
     170:	ldr	r3, [fp, #-8]
     174:	add	r3, r3, #1
     178:	str	r3, [fp, #-8]
     17c:	ldr	r3, [fp, #-16]
     180:	ldr	r3, [r3, #4]
     184:	ldr	r2, [fp, #-8]
     188:	cmp	r2, r3
     18c:	bge	1a4 <coda_cursor_compare+0xd0>
     190:	ldr	r3, [fp, #-20]	; 0xffffffec
     194:	ldr	r3, [r3, #4]
     198:	ldr	r2, [fp, #-8]
     19c:	cmp	r2, r3
     1a0:	blt	f4 <coda_cursor_compare+0x20>
     1a4:	ldr	r3, [fp, #-16]
     1a8:	ldr	r3, [r3, #4]
     1ac:	ldr	r2, [fp, #-8]
     1b0:	cmp	r2, r3
     1b4:	bge	1c0 <coda_cursor_compare+0xec>
     1b8:	mov	r3, #1
     1bc:	b	1e0 <coda_cursor_compare+0x10c>
     1c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     1c4:	ldr	r3, [r3, #4]
     1c8:	ldr	r2, [fp, #-8]
     1cc:	cmp	r2, r3
     1d0:	bge	1dc <coda_cursor_compare+0x108>
     1d4:	mvn	r3, #0
     1d8:	b	1e0 <coda_cursor_compare+0x10c>
     1dc:	mov	r3, #0
     1e0:	mov	r0, r3
     1e4:	add	sp, fp, #0
     1e8:	pop	{fp}		; (ldr fp, [sp], #4)
     1ec:	bx	lr

000001f0 <coda_cursor_print_path>:
     1f0:	str	fp, [sp, #-8]!
     1f4:	str	lr, [sp, #4]
     1f8:	add	fp, sp, #4
     1fc:	sub	sp, sp, #32
     200:	str	r0, [fp, #-32]	; 0xffffffe0
     204:	str	r1, [fp, #-36]	; 0xffffffdc
     208:	ldr	r3, [fp, #-32]	; 0xffffffe0
     20c:	ldr	r3, [r3, #4]
     210:	cmp	r3, #1
     214:	bgt	244 <coda_cursor_print_path+0x54>
     218:	ldr	r3, [fp, #-36]	; 0xffffffdc
     21c:	movw	r0, #0
     220:	movt	r0, #0
     224:	blx	r3
     228:	mov	r3, r0
     22c:	cmp	r3, #0
     230:	bge	23c <coda_cursor_print_path+0x4c>
     234:	mvn	r3, #0
     238:	b	484 <coda_cursor_print_path+0x294>
     23c:	mov	r3, #0
     240:	b	484 <coda_cursor_print_path+0x294>
     244:	mov	r3, #1
     248:	str	r3, [fp, #-8]
     24c:	b	46c <coda_cursor_print_path+0x27c>
     250:	ldr	r2, [fp, #-32]	; 0xffffffe0
     254:	ldr	r3, [fp, #-8]
     258:	lsl	r3, r3, #4
     25c:	add	r3, r2, r3
     260:	ldr	r3, [r3, #12]
     264:	str	r3, [fp, #-12]
     268:	ldr	r3, [fp, #-12]
     26c:	cmn	r3, #1
     270:	bne	2b4 <coda_cursor_print_path+0xc4>
     274:	ldr	r3, [fp, #-8]
     278:	cmp	r3, #1
     27c:	bne	28c <coda_cursor_print_path+0x9c>
     280:	movw	r3, #0
     284:	movt	r3, #0
     288:	b	294 <coda_cursor_print_path+0xa4>
     28c:	movw	r3, #0
     290:	movt	r3, #0
     294:	ldr	r2, [fp, #-36]	; 0xffffffdc
     298:	mov	r0, r3
     29c:	blx	r2
     2a0:	mov	r3, r0
     2a4:	cmp	r3, #0
     2a8:	bge	460 <coda_cursor_print_path+0x270>
     2ac:	mvn	r3, #0
     2b0:	b	484 <coda_cursor_print_path+0x294>
     2b4:	ldr	r3, [fp, #-8]
     2b8:	sub	r3, r3, #1
     2bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
     2c0:	lsl	r3, r3, #4
     2c4:	add	r3, r2, r3
     2c8:	ldr	r3, [r3, #8]
     2cc:	ldr	r3, [r3]
     2d0:	cmp	r3, #99	; 0x63
     2d4:	bhi	2f4 <coda_cursor_print_path+0x104>
     2d8:	ldr	r3, [fp, #-8]
     2dc:	sub	r3, r3, #1
     2e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     2e4:	lsl	r3, r3, #4
     2e8:	add	r3, r2, r3
     2ec:	ldr	r3, [r3, #8]
     2f0:	b	310 <coda_cursor_print_path+0x120>
     2f4:	ldr	r3, [fp, #-8]
     2f8:	sub	r3, r3, #1
     2fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
     300:	lsl	r3, r3, #4
     304:	add	r3, r2, r3
     308:	ldr	r3, [r3, #8]
     30c:	ldr	r3, [r3, #4]
     310:	str	r3, [fp, #-16]
     314:	sub	r3, fp, #20
     318:	mov	r1, r3
     31c:	ldr	r0, [fp, #-16]
     320:	bl	0 <coda_type_get_class>
     324:	mov	r3, r0
     328:	cmp	r3, #0
     32c:	beq	338 <coda_cursor_print_path+0x148>
     330:	mvn	r3, #0
     334:	b	484 <coda_cursor_print_path+0x294>
     338:	ldr	r3, [fp, #-20]	; 0xffffffec
     33c:	cmp	r3, #0
     340:	beq	390 <coda_cursor_print_path+0x1a0>
     344:	cmp	r3, #1
     348:	bne	434 <coda_cursor_print_path+0x244>
     34c:	ldr	r3, [fp, #-8]
     350:	cmp	r3, #1
     354:	bne	364 <coda_cursor_print_path+0x174>
     358:	movw	r3, #0
     35c:	movt	r3, #0
     360:	b	36c <coda_cursor_print_path+0x17c>
     364:	movw	r3, #0
     368:	movt	r3, #0
     36c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     370:	ldr	r1, [fp, #-12]
     374:	mov	r0, r3
     378:	blx	r2
     37c:	mov	r3, r0
     380:	cmp	r3, #0
     384:	bge	454 <coda_cursor_print_path+0x264>
     388:	mvn	r3, #0
     38c:	b	484 <coda_cursor_print_path+0x294>
     390:	sub	r3, fp, #24
     394:	mov	r2, r3
     398:	ldr	r1, [fp, #-12]
     39c:	ldr	r0, [fp, #-16]
     3a0:	bl	0 <coda_type_get_record_field_name>
     3a4:	mov	r3, r0
     3a8:	cmp	r3, #0
     3ac:	beq	3b8 <coda_cursor_print_path+0x1c8>
     3b0:	mvn	r3, #0
     3b4:	b	430 <coda_cursor_print_path+0x240>
     3b8:	ldr	r3, [fp, #-8]
     3bc:	cmp	r3, #1
     3c0:	beq	3e4 <coda_cursor_print_path+0x1f4>
     3c4:	ldr	r3, [fp, #-8]
     3c8:	sub	r3, r3, #1
     3cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
     3d0:	lsl	r3, r3, #4
     3d4:	add	r3, r2, r3
     3d8:	ldr	r3, [r3, #12]
     3dc:	cmn	r3, #1
     3e0:	beq	408 <coda_cursor_print_path+0x218>
     3e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     3e8:	movw	r0, #0
     3ec:	movt	r0, #0
     3f0:	blx	r3
     3f4:	mov	r3, r0
     3f8:	cmp	r3, #0
     3fc:	bge	408 <coda_cursor_print_path+0x218>
     400:	mvn	r3, #0
     404:	b	430 <coda_cursor_print_path+0x240>
     408:	ldr	r2, [fp, #-24]	; 0xffffffe8
     40c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     410:	mov	r1, r2
     414:	movw	r0, #0
     418:	movt	r0, #0
     41c:	blx	r3
     420:	mov	r3, r0
     424:	cmp	r3, #0
     428:	bge	45c <coda_cursor_print_path+0x26c>
     42c:	mvn	r3, #0
     430:	b	484 <coda_cursor_print_path+0x294>
     434:	movw	r3, #0
     438:	movt	r3, #0
     43c:	movw	r2, #305	; 0x131
     440:	movw	r1, #0
     444:	movt	r1, #0
     448:	movw	r0, #0
     44c:	movt	r0, #0
     450:	bl	0 <__assert_fail>
     454:	nop	{0}
     458:	b	460 <coda_cursor_print_path+0x270>
     45c:	nop	{0}
     460:	ldr	r3, [fp, #-8]
     464:	add	r3, r3, #1
     468:	str	r3, [fp, #-8]
     46c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     470:	ldr	r3, [r3, #4]
     474:	ldr	r2, [fp, #-8]
     478:	cmp	r2, r3
     47c:	blt	250 <coda_cursor_print_path+0x60>
     480:	mov	r3, #0
     484:	mov	r0, r3
     488:	sub	sp, fp, #4
     48c:	ldr	fp, [sp]
     490:	add	sp, sp, #4
     494:	pop	{pc}		; (ldr pc, [sp], #4)

00000498 <coda_cursor_set_product>:
     498:	str	fp, [sp, #-8]!
     49c:	str	lr, [sp, #4]
     4a0:	add	fp, sp, #4
     4a4:	sub	sp, sp, #8
     4a8:	str	r0, [fp, #-8]
     4ac:	str	r1, [fp, #-12]
     4b0:	ldr	r3, [fp, #-8]
     4b4:	cmp	r3, #0
     4b8:	bne	4e0 <coda_cursor_set_product+0x48>
     4bc:	movw	r3, #325	; 0x145
     4c0:	movw	r2, #0
     4c4:	movt	r2, #0
     4c8:	movw	r1, #0
     4cc:	movt	r1, #0
     4d0:	mvn	r0, #99	; 0x63
     4d4:	bl	0 <coda_set_error>
     4d8:	mvn	r3, #0
     4dc:	b	620 <coda_cursor_set_product+0x188>
     4e0:	ldr	r3, [fp, #-12]
     4e4:	cmp	r3, #0
     4e8:	bne	510 <coda_cursor_set_product+0x78>
     4ec:	movw	r3, #331	; 0x14b
     4f0:	movw	r2, #0
     4f4:	movt	r2, #0
     4f8:	movw	r1, #0
     4fc:	movt	r1, #0
     500:	mvn	r0, #99	; 0x63
     504:	bl	0 <coda_set_error>
     508:	mvn	r3, #0
     50c:	b	620 <coda_cursor_set_product+0x188>
     510:	ldr	r3, [fp, #-12]
     514:	ldr	r3, [r3, #16]
     518:	cmp	r3, #9
     51c:	ldrls	pc, [pc, r3, lsl #2]
     520:	b	600 <coda_cursor_set_product+0x168>
     524:	.word	0x0000054c
     528:	.word	0x0000054c
     52c:	.word	0x00000560
     530:	.word	0x000005b0
     534:	.word	0x000005c4
     538:	.word	0x00000574
     53c:	.word	0x00000588
     540:	.word	0x0000059c
     544:	.word	0x000005d8
     548:	.word	0x000005ec
     54c:	ldr	r1, [fp, #-12]
     550:	ldr	r0, [fp, #-8]
     554:	bl	0 <coda_ascbin_cursor_set_product>
     558:	mov	r3, r0
     55c:	b	620 <coda_cursor_set_product+0x188>
     560:	ldr	r1, [fp, #-12]
     564:	ldr	r0, [fp, #-8]
     568:	bl	0 <coda_xml_cursor_set_product>
     56c:	mov	r3, r0
     570:	b	620 <coda_cursor_set_product+0x188>
     574:	ldr	r1, [fp, #-12]
     578:	ldr	r0, [fp, #-8]
     57c:	bl	0 <coda_cdf_cursor_set_product>
     580:	mov	r3, r0
     584:	b	620 <coda_cursor_set_product+0x188>
     588:	ldr	r1, [fp, #-12]
     58c:	ldr	r0, [fp, #-8]
     590:	bl	0 <coda_netcdf_cursor_set_product>
     594:	mov	r3, r0
     598:	b	620 <coda_cursor_set_product+0x188>
     59c:	ldr	r1, [fp, #-12]
     5a0:	ldr	r0, [fp, #-8]
     5a4:	bl	0 <coda_grib_cursor_set_product>
     5a8:	mov	r3, r0
     5ac:	b	620 <coda_cursor_set_product+0x188>
     5b0:	mov	r1, #0
     5b4:	mvn	r0, #10
     5b8:	bl	0 <coda_set_error>
     5bc:	mvn	r3, #0
     5c0:	b	620 <coda_cursor_set_product+0x188>
     5c4:	mov	r1, #0
     5c8:	mvn	r0, #12
     5cc:	bl	0 <coda_set_error>
     5d0:	mvn	r3, #0
     5d4:	b	620 <coda_cursor_set_product+0x188>
     5d8:	ldr	r1, [fp, #-12]
     5dc:	ldr	r0, [fp, #-8]
     5e0:	bl	0 <coda_rinex_cursor_set_product>
     5e4:	mov	r3, r0
     5e8:	b	620 <coda_cursor_set_product+0x188>
     5ec:	ldr	r1, [fp, #-12]
     5f0:	ldr	r0, [fp, #-8]
     5f4:	bl	0 <coda_sp3_cursor_set_product>
     5f8:	mov	r3, r0
     5fc:	b	620 <coda_cursor_set_product+0x188>
     600:	movw	r3, #0
     604:	movt	r3, #0
     608:	mov	r2, #368	; 0x170
     60c:	movw	r1, #0
     610:	movt	r1, #0
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	bl	0 <__assert_fail>
     620:	mov	r0, r3
     624:	sub	sp, fp, #4
     628:	ldr	fp, [sp]
     62c:	add	sp, sp, #4
     630:	pop	{pc}		; (ldr pc, [sp], #4)

00000634 <coda_cursor_goto>:
     634:	str	fp, [sp, #-8]!
     638:	str	lr, [sp, #4]
     63c:	add	fp, sp, #4
     640:	sub	sp, sp, #32
     644:	str	r0, [fp, #-32]	; 0xffffffe0
     648:	str	r1, [fp, #-36]	; 0xffffffdc
     64c:	mov	r3, #0
     650:	str	r3, [fp, #-20]	; 0xffffffec
     654:	mov	r3, #0
     658:	str	r3, [fp, #-8]
     65c:	ldr	r3, [fp, #-8]
     660:	ldr	r2, [fp, #-36]	; 0xffffffdc
     664:	add	r3, r2, r3
     668:	ldrb	r3, [r3]
     66c:	cmp	r3, #47	; 0x2f
     670:	bne	c4c <coda_cursor_goto+0x618>
     674:	ldr	r0, [fp, #-32]	; 0xffffffe0
     678:	bl	24ac <coda_cursor_goto_root>
     67c:	mov	r3, r0
     680:	cmp	r3, #0
     684:	beq	690 <coda_cursor_goto+0x5c>
     688:	mvn	r3, #0
     68c:	b	c68 <coda_cursor_goto+0x634>
     690:	ldr	r3, [fp, #-8]
     694:	add	r3, r3, #1
     698:	ldr	r2, [fp, #-36]	; 0xffffffdc
     69c:	add	r3, r2, r3
     6a0:	ldrb	r3, [r3]
     6a4:	cmp	r3, #0
     6a8:	beq	700 <coda_cursor_goto+0xcc>
     6ac:	ldr	r3, [fp, #-8]
     6b0:	add	r3, r3, #1
     6b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6b8:	add	r3, r2, r3
     6bc:	ldrb	r3, [r3]
     6c0:	cmp	r3, #47	; 0x2f
     6c4:	beq	700 <coda_cursor_goto+0xcc>
     6c8:	ldr	r3, [fp, #-8]
     6cc:	add	r3, r3, #1
     6d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6d4:	add	r3, r2, r3
     6d8:	ldrb	r3, [r3]
     6dc:	cmp	r3, #91	; 0x5b
     6e0:	beq	700 <coda_cursor_goto+0xcc>
     6e4:	ldr	r3, [fp, #-8]
     6e8:	add	r3, r3, #1
     6ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6f0:	add	r3, r2, r3
     6f4:	ldrb	r3, [r3]
     6f8:	cmp	r3, #64	; 0x40
     6fc:	bne	c4c <coda_cursor_goto+0x618>
     700:	ldr	r3, [fp, #-8]
     704:	add	r3, r3, #1
     708:	str	r3, [fp, #-8]
     70c:	b	c4c <coda_cursor_goto+0x618>
     710:	ldr	r3, [fp, #-8]
     714:	ldr	r2, [fp, #-36]	; 0xffffffdc
     718:	add	r3, r2, r3
     71c:	ldrb	r3, [r3]
     720:	cmp	r3, #64	; 0x40
     724:	bne	8f4 <coda_cursor_goto+0x2c0>
     728:	ldr	r0, [fp, #-32]	; 0xffffffe0
     72c:	bl	21a4 <coda_cursor_goto_attributes>
     730:	mov	r3, r0
     734:	cmp	r3, #0
     738:	beq	744 <coda_cursor_goto+0x110>
     73c:	mvn	r3, #0
     740:	b	c68 <coda_cursor_goto+0x634>
     744:	ldr	r3, [fp, #-8]
     748:	add	r3, r3, #1
     74c:	str	r3, [fp, #-8]
     750:	ldr	r3, [fp, #-8]
     754:	str	r3, [fp, #-12]
     758:	b	768 <coda_cursor_goto+0x134>
     75c:	ldr	r3, [fp, #-12]
     760:	add	r3, r3, #1
     764:	str	r3, [fp, #-12]
     768:	ldr	r3, [fp, #-12]
     76c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     770:	add	r3, r2, r3
     774:	ldrb	r3, [r3]
     778:	cmp	r3, #0
     77c:	beq	7c8 <coda_cursor_goto+0x194>
     780:	ldr	r3, [fp, #-12]
     784:	ldr	r2, [fp, #-36]	; 0xffffffdc
     788:	add	r3, r2, r3
     78c:	ldrb	r3, [r3]
     790:	cmp	r3, #47	; 0x2f
     794:	beq	7c8 <coda_cursor_goto+0x194>
     798:	ldr	r3, [fp, #-12]
     79c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7a0:	add	r3, r2, r3
     7a4:	ldrb	r3, [r3]
     7a8:	cmp	r3, #91	; 0x5b
     7ac:	beq	7c8 <coda_cursor_goto+0x194>
     7b0:	ldr	r3, [fp, #-12]
     7b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7b8:	add	r3, r2, r3
     7bc:	ldrb	r3, [r3]
     7c0:	cmp	r3, #64	; 0x40
     7c4:	bne	75c <coda_cursor_goto+0x128>
     7c8:	ldr	r3, [fp, #-8]
     7cc:	add	r3, r3, #1
     7d0:	ldr	r2, [fp, #-12]
     7d4:	cmp	r2, r3
     7d8:	bne	7f4 <coda_cursor_goto+0x1c0>
     7dc:	ldr	r3, [fp, #-8]
     7e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7e4:	add	r3, r2, r3
     7e8:	ldrb	r3, [r3]
     7ec:	cmp	r3, #46	; 0x2e
     7f0:	beq	8e8 <coda_cursor_goto+0x2b4>
     7f4:	ldr	r3, [fp, #-8]
     7f8:	add	r3, r3, #2
     7fc:	ldr	r2, [fp, #-12]
     800:	cmp	r2, r3
     804:	bne	858 <coda_cursor_goto+0x224>
     808:	ldr	r3, [fp, #-8]
     80c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     810:	add	r3, r2, r3
     814:	ldrb	r3, [r3]
     818:	cmp	r3, #46	; 0x2e
     81c:	bne	858 <coda_cursor_goto+0x224>
     820:	ldr	r3, [fp, #-8]
     824:	add	r3, r3, #1
     828:	ldr	r2, [fp, #-36]	; 0xffffffdc
     82c:	add	r3, r2, r3
     830:	ldrb	r3, [r3]
     834:	cmp	r3, #46	; 0x2e
     838:	bne	858 <coda_cursor_goto+0x224>
     83c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     840:	bl	23e4 <coda_cursor_goto_parent>
     844:	mov	r3, r0
     848:	cmp	r3, #0
     84c:	beq	8e8 <coda_cursor_goto+0x2b4>
     850:	mvn	r3, #0
     854:	b	c68 <coda_cursor_goto+0x634>
     858:	ldr	r2, [fp, #-12]
     85c:	ldr	r3, [fp, #-8]
     860:	cmp	r2, r3
     864:	ble	8e8 <coda_cursor_goto+0x2b4>
     868:	sub	r3, fp, #20
     86c:	mov	r1, r3
     870:	ldr	r0, [fp, #-32]	; 0xffffffe0
     874:	bl	3cd0 <coda_cursor_get_type>
     878:	mov	r3, r0
     87c:	cmp	r3, #0
     880:	beq	88c <coda_cursor_goto+0x258>
     884:	mvn	r3, #0
     888:	b	c68 <coda_cursor_goto+0x634>
     88c:	ldr	r0, [fp, #-20]	; 0xffffffec
     890:	ldr	r3, [fp, #-8]
     894:	ldr	r2, [fp, #-36]	; 0xffffffdc
     898:	add	r1, r2, r3
     89c:	ldr	r2, [fp, #-12]
     8a0:	ldr	r3, [fp, #-8]
     8a4:	sub	r2, r2, r3
     8a8:	sub	r3, fp, #24
     8ac:	bl	0 <coda_type_get_record_field_index_from_name_n>
     8b0:	mov	r3, r0
     8b4:	cmp	r3, #0
     8b8:	beq	8c4 <coda_cursor_goto+0x290>
     8bc:	mvn	r3, #0
     8c0:	b	c68 <coda_cursor_goto+0x634>
     8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8c8:	mov	r1, r3
     8cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     8d0:	bl	cb4 <coda_cursor_goto_record_field_by_index>
     8d4:	mov	r3, r0
     8d8:	cmp	r3, #0
     8dc:	beq	8e8 <coda_cursor_goto+0x2b4>
     8e0:	mvn	r3, #0
     8e4:	b	c68 <coda_cursor_goto+0x634>
     8e8:	ldr	r3, [fp, #-12]
     8ec:	str	r3, [fp, #-8]
     8f0:	b	c4c <coda_cursor_goto+0x618>
     8f4:	ldr	r3, [fp, #-8]
     8f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     8fc:	add	r3, r2, r3
     900:	ldrb	r3, [r3]
     904:	cmp	r3, #91	; 0x5b
     908:	bne	a6c <coda_cursor_goto+0x438>
     90c:	ldr	r3, [fp, #-8]
     910:	add	r3, r3, #1
     914:	str	r3, [fp, #-8]
     918:	ldr	r3, [fp, #-8]
     91c:	str	r3, [fp, #-12]
     920:	b	930 <coda_cursor_goto+0x2fc>
     924:	ldr	r3, [fp, #-12]
     928:	add	r3, r3, #1
     92c:	str	r3, [fp, #-12]
     930:	ldr	r3, [fp, #-12]
     934:	ldr	r2, [fp, #-36]	; 0xffffffdc
     938:	add	r3, r2, r3
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	beq	960 <coda_cursor_goto+0x32c>
     948:	ldr	r3, [fp, #-12]
     94c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     950:	add	r3, r2, r3
     954:	ldrb	r3, [r3]
     958:	cmp	r3, #93	; 0x5d
     95c:	bne	924 <coda_cursor_goto+0x2f0>
     960:	ldr	r3, [fp, #-12]
     964:	ldr	r2, [fp, #-36]	; 0xffffffdc
     968:	add	r3, r2, r3
     96c:	ldrb	r3, [r3]
     970:	cmp	r3, #0
     974:	bne	994 <coda_cursor_goto+0x360>
     978:	ldr	r2, [fp, #-36]	; 0xffffffdc
     97c:	movw	r1, #0
     980:	movt	r1, #0
     984:	mvn	r0, #99	; 0x63
     988:	bl	0 <coda_set_error>
     98c:	mvn	r3, #0
     990:	b	c68 <coda_cursor_goto+0x634>
     994:	ldr	r2, [fp, #-8]
     998:	ldr	r3, [fp, #-12]
     99c:	cmp	r2, r3
     9a0:	bne	9bc <coda_cursor_goto+0x388>
     9a4:	movw	r1, #0
     9a8:	movt	r1, #0
     9ac:	mvn	r0, #99	; 0x63
     9b0:	bl	0 <coda_set_error>
     9b4:	mvn	r3, #0
     9b8:	b	c68 <coda_cursor_goto+0x634>
     9bc:	ldr	r3, [fp, #-8]
     9c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     9c4:	add	r0, r2, r3
     9c8:	sub	r3, fp, #28
     9cc:	sub	r2, fp, #24
     9d0:	movw	r1, #0
     9d4:	movt	r1, #0
     9d8:	bl	0 <__isoc99_sscanf>
     9dc:	str	r0, [fp, #-16]
     9e0:	ldr	r3, [fp, #-16]
     9e4:	cmp	r3, #1
     9e8:	bne	a04 <coda_cursor_goto+0x3d0>
     9ec:	ldr	r2, [fp, #-12]
     9f0:	ldr	r3, [fp, #-8]
     9f4:	sub	r2, r2, r3
     9f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9fc:	cmp	r2, r3
     a00:	beq	a38 <coda_cursor_goto+0x404>
     a04:	ldr	r2, [fp, #-12]
     a08:	ldr	r3, [fp, #-8]
     a0c:	sub	r1, r2, r3
     a10:	ldr	r3, [fp, #-8]
     a14:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a18:	add	r3, r2, r3
     a1c:	mov	r2, r1
     a20:	movw	r1, #0
     a24:	movt	r1, #0
     a28:	mvn	r0, #99	; 0x63
     a2c:	bl	0 <coda_set_error>
     a30:	mvn	r3, #0
     a34:	b	c68 <coda_cursor_goto+0x634>
     a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a3c:	mov	r1, r3
     a40:	ldr	r0, [fp, #-32]	; 0xffffffe0
     a44:	bl	1a60 <coda_cursor_goto_array_element_by_index>
     a48:	mov	r3, r0
     a4c:	cmp	r3, #0
     a50:	beq	a5c <coda_cursor_goto+0x428>
     a54:	mvn	r3, #0
     a58:	b	c68 <coda_cursor_goto+0x634>
     a5c:	ldr	r3, [fp, #-12]
     a60:	add	r3, r3, #1
     a64:	str	r3, [fp, #-8]
     a68:	b	c4c <coda_cursor_goto+0x618>
     a6c:	ldr	r3, [fp, #-8]
     a70:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a74:	add	r3, r2, r3
     a78:	ldrb	r3, [r3]
     a7c:	cmp	r3, #47	; 0x2f
     a80:	bne	a94 <coda_cursor_goto+0x460>
     a84:	ldr	r3, [fp, #-8]
     a88:	add	r3, r3, #1
     a8c:	str	r3, [fp, #-8]
     a90:	b	abc <coda_cursor_goto+0x488>
     a94:	ldr	r3, [fp, #-8]
     a98:	cmp	r3, #0
     a9c:	ble	abc <coda_cursor_goto+0x488>
     aa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     aa4:	movw	r1, #0
     aa8:	movt	r1, #0
     aac:	mvn	r0, #99	; 0x63
     ab0:	bl	0 <coda_set_error>
     ab4:	mvn	r3, #0
     ab8:	b	c68 <coda_cursor_goto+0x634>
     abc:	ldr	r3, [fp, #-8]
     ac0:	str	r3, [fp, #-12]
     ac4:	b	ad4 <coda_cursor_goto+0x4a0>
     ac8:	ldr	r3, [fp, #-12]
     acc:	add	r3, r3, #1
     ad0:	str	r3, [fp, #-12]
     ad4:	ldr	r3, [fp, #-12]
     ad8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     adc:	add	r3, r2, r3
     ae0:	ldrb	r3, [r3]
     ae4:	cmp	r3, #0
     ae8:	beq	b34 <coda_cursor_goto+0x500>
     aec:	ldr	r3, [fp, #-12]
     af0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     af4:	add	r3, r2, r3
     af8:	ldrb	r3, [r3]
     afc:	cmp	r3, #47	; 0x2f
     b00:	beq	b34 <coda_cursor_goto+0x500>
     b04:	ldr	r3, [fp, #-12]
     b08:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b0c:	add	r3, r2, r3
     b10:	ldrb	r3, [r3]
     b14:	cmp	r3, #91	; 0x5b
     b18:	beq	b34 <coda_cursor_goto+0x500>
     b1c:	ldr	r3, [fp, #-12]
     b20:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b24:	add	r3, r2, r3
     b28:	ldrb	r3, [r3]
     b2c:	cmp	r3, #64	; 0x40
     b30:	bne	ac8 <coda_cursor_goto+0x494>
     b34:	ldr	r3, [fp, #-8]
     b38:	add	r3, r3, #1
     b3c:	ldr	r2, [fp, #-12]
     b40:	cmp	r2, r3
     b44:	bne	b60 <coda_cursor_goto+0x52c>
     b48:	ldr	r3, [fp, #-8]
     b4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b50:	add	r3, r2, r3
     b54:	ldrb	r3, [r3]
     b58:	cmp	r3, #46	; 0x2e
     b5c:	beq	c44 <coda_cursor_goto+0x610>
     b60:	ldr	r3, [fp, #-8]
     b64:	add	r3, r3, #2
     b68:	ldr	r2, [fp, #-12]
     b6c:	cmp	r2, r3
     b70:	bne	bc4 <coda_cursor_goto+0x590>
     b74:	ldr	r3, [fp, #-8]
     b78:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b7c:	add	r3, r2, r3
     b80:	ldrb	r3, [r3]
     b84:	cmp	r3, #46	; 0x2e
     b88:	bne	bc4 <coda_cursor_goto+0x590>
     b8c:	ldr	r3, [fp, #-8]
     b90:	add	r3, r3, #1
     b94:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b98:	add	r3, r2, r3
     b9c:	ldrb	r3, [r3]
     ba0:	cmp	r3, #46	; 0x2e
     ba4:	bne	bc4 <coda_cursor_goto+0x590>
     ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bac:	bl	23e4 <coda_cursor_goto_parent>
     bb0:	mov	r3, r0
     bb4:	cmp	r3, #0
     bb8:	beq	c44 <coda_cursor_goto+0x610>
     bbc:	mvn	r3, #0
     bc0:	b	c68 <coda_cursor_goto+0x634>
     bc4:	sub	r3, fp, #20
     bc8:	mov	r1, r3
     bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bd0:	bl	3cd0 <coda_cursor_get_type>
     bd4:	mov	r3, r0
     bd8:	cmp	r3, #0
     bdc:	beq	be8 <coda_cursor_goto+0x5b4>
     be0:	mvn	r3, #0
     be4:	b	c68 <coda_cursor_goto+0x634>
     be8:	ldr	r0, [fp, #-20]	; 0xffffffec
     bec:	ldr	r3, [fp, #-8]
     bf0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     bf4:	add	r1, r2, r3
     bf8:	ldr	r2, [fp, #-12]
     bfc:	ldr	r3, [fp, #-8]
     c00:	sub	r2, r2, r3
     c04:	sub	r3, fp, #24
     c08:	bl	0 <coda_type_get_record_field_index_from_name_n>
     c0c:	mov	r3, r0
     c10:	cmp	r3, #0
     c14:	beq	c20 <coda_cursor_goto+0x5ec>
     c18:	mvn	r3, #0
     c1c:	b	c68 <coda_cursor_goto+0x634>
     c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c24:	mov	r1, r3
     c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c2c:	bl	cb4 <coda_cursor_goto_record_field_by_index>
     c30:	mov	r3, r0
     c34:	cmp	r3, #0
     c38:	beq	c44 <coda_cursor_goto+0x610>
     c3c:	mvn	r3, #0
     c40:	b	c68 <coda_cursor_goto+0x634>
     c44:	ldr	r3, [fp, #-12]
     c48:	str	r3, [fp, #-8]
     c4c:	ldr	r3, [fp, #-8]
     c50:	ldr	r2, [fp, #-36]	; 0xffffffdc
     c54:	add	r3, r2, r3
     c58:	ldrb	r3, [r3]
     c5c:	cmp	r3, #0
     c60:	bne	710 <coda_cursor_goto+0xdc>
     c64:	mov	r3, #0
     c68:	mov	r0, r3
     c6c:	sub	sp, fp, #4
     c70:	ldr	fp, [sp]
     c74:	add	sp, sp, #4
     c78:	pop	{pc}		; (ldr pc, [sp], #4)

00000c7c <coda_cursor_goto_first_record_field>:
     c7c:	str	fp, [sp, #-8]!
     c80:	str	lr, [sp, #4]
     c84:	add	fp, sp, #4
     c88:	sub	sp, sp, #8
     c8c:	str	r0, [fp, #-8]
     c90:	mov	r1, #0
     c94:	ldr	r0, [fp, #-8]
     c98:	bl	cb4 <coda_cursor_goto_record_field_by_index>
     c9c:	mov	r3, r0
     ca0:	mov	r0, r3
     ca4:	sub	sp, fp, #4
     ca8:	ldr	fp, [sp]
     cac:	add	sp, sp, #4
     cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00000cb4 <coda_cursor_goto_record_field_by_index>:
     cb4:	str	fp, [sp, #-8]!
     cb8:	str	lr, [sp, #4]
     cbc:	add	fp, sp, #4
     cc0:	sub	sp, sp, #24
     cc4:	str	r0, [fp, #-16]
     cc8:	str	r1, [fp, #-20]	; 0xffffffec
     ccc:	ldr	r3, [fp, #-16]
     cd0:	cmp	r3, #0
     cd4:	beq	d0c <coda_cursor_goto_record_field_by_index+0x58>
     cd8:	ldr	r3, [fp, #-16]
     cdc:	ldr	r3, [r3, #4]
     ce0:	cmp	r3, #0
     ce4:	ble	d0c <coda_cursor_goto_record_field_by_index+0x58>
     ce8:	ldr	r3, [fp, #-16]
     cec:	ldr	r3, [r3, #4]
     cf0:	sub	r3, r3, #1
     cf4:	ldr	r2, [fp, #-16]
     cf8:	lsl	r3, r3, #4
     cfc:	add	r3, r2, r3
     d00:	ldr	r3, [r3, #8]
     d04:	cmp	r3, #0
     d08:	bne	d30 <coda_cursor_goto_record_field_by_index+0x7c>
     d0c:	movw	r3, #569	; 0x239
     d10:	movw	r2, #0
     d14:	movt	r2, #0
     d18:	movw	r1, #0
     d1c:	movt	r1, #0
     d20:	mvn	r0, #99	; 0x63
     d24:	bl	0 <coda_set_error>
     d28:	mvn	r3, #0
     d2c:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     d30:	ldr	r3, [fp, #-16]
     d34:	ldr	r3, [r3, #4]
     d38:	sub	r3, r3, #1
     d3c:	ldr	r2, [fp, #-16]
     d40:	lsl	r3, r3, #4
     d44:	add	r3, r2, r3
     d48:	ldr	r3, [r3, #8]
     d4c:	ldr	r3, [r3]
     d50:	cmp	r3, #99	; 0x63
     d54:	bhi	d78 <coda_cursor_goto_record_field_by_index+0xc4>
     d58:	ldr	r3, [fp, #-16]
     d5c:	ldr	r3, [r3, #4]
     d60:	sub	r3, r3, #1
     d64:	ldr	r2, [fp, #-16]
     d68:	lsl	r3, r3, #4
     d6c:	add	r3, r2, r3
     d70:	ldr	r3, [r3, #8]
     d74:	b	d98 <coda_cursor_goto_record_field_by_index+0xe4>
     d78:	ldr	r3, [fp, #-16]
     d7c:	ldr	r3, [r3, #4]
     d80:	sub	r3, r3, #1
     d84:	ldr	r2, [fp, #-16]
     d88:	lsl	r3, r3, #4
     d8c:	add	r3, r2, r3
     d90:	ldr	r3, [r3, #8]
     d94:	ldr	r3, [r3, #4]
     d98:	str	r3, [fp, #-8]
     d9c:	ldr	r3, [fp, #-8]
     da0:	ldr	r3, [r3, #8]
     da4:	cmp	r3, #0
     da8:	beq	ddc <coda_cursor_goto_record_field_by_index+0x128>
     dac:	ldr	r3, [fp, #-8]
     db0:	ldr	r3, [r3, #8]
     db4:	mov	r0, r3
     db8:	bl	0 <coda_type_get_class_name>
     dbc:	mov	r3, r0
     dc0:	mov	r2, r3
     dc4:	movw	r1, #0
     dc8:	movt	r1, #0
     dcc:	mvn	r0, #104	; 0x68
     dd0:	bl	0 <coda_set_error>
     dd4:	mvn	r3, #0
     dd8:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     ddc:	ldr	r3, [fp, #-16]
     de0:	ldr	r3, [r3, #4]
     de4:	cmp	r3, #32
     de8:	bne	e1c <coda_cursor_goto_record_field_by_index+0x168>
     dec:	ldr	r3, [fp, #-16]
     df0:	ldr	r2, [r3, #4]
     df4:	mov	r3, #584	; 0x248
     df8:	str	r3, [sp]
     dfc:	movw	r3, #0
     e00:	movt	r3, #0
     e04:	movw	r1, #0
     e08:	movt	r1, #0
     e0c:	mvn	r0, #99	; 0x63
     e10:	bl	0 <coda_set_error>
     e14:	mvn	r3, #0
     e18:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     e1c:	ldr	r3, [fp, #-16]
     e20:	ldr	r3, [r3, #4]
     e24:	sub	r3, r3, #1
     e28:	ldr	r2, [fp, #-16]
     e2c:	lsl	r3, r3, #4
     e30:	add	r3, r2, r3
     e34:	ldr	r3, [r3, #8]
     e38:	ldr	r3, [r3]
     e3c:	cmp	r3, #101	; 0x65
     e40:	beq	eb4 <coda_cursor_goto_record_field_by_index+0x200>
     e44:	cmp	r3, #101	; 0x65
     e48:	bhi	e60 <coda_cursor_goto_record_field_by_index+0x1ac>
     e4c:	cmp	r3, #1
     e50:	bls	e74 <coda_cursor_goto_record_field_by_index+0x1c0>
     e54:	cmp	r3, #100	; 0x64
     e58:	beq	e94 <coda_cursor_goto_record_field_by_index+0x1e0>
     e5c:	b	f08 <coda_cursor_goto_record_field_by_index+0x254>
     e60:	cmp	r3, #102	; 0x66
     e64:	beq	ec8 <coda_cursor_goto_record_field_by_index+0x214>
     e68:	cmp	r3, #105	; 0x69
     e6c:	bhi	f08 <coda_cursor_goto_record_field_by_index+0x254>
     e70:	b	edc <coda_cursor_goto_record_field_by_index+0x228>
     e74:	ldr	r1, [fp, #-20]	; 0xffffffec
     e78:	ldr	r0, [fp, #-16]
     e7c:	bl	0 <coda_ascbin_cursor_goto_record_field_by_index>
     e80:	mov	r3, r0
     e84:	cmp	r3, #0
     e88:	beq	efc <coda_cursor_goto_record_field_by_index+0x248>
     e8c:	mvn	r3, #0
     e90:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     e94:	ldr	r1, [fp, #-20]	; 0xffffffec
     e98:	ldr	r0, [fp, #-16]
     e9c:	bl	0 <coda_mem_cursor_goto_record_field_by_index>
     ea0:	mov	r3, r0
     ea4:	cmp	r3, #0
     ea8:	beq	f04 <coda_cursor_goto_record_field_by_index+0x250>
     eac:	mvn	r3, #0
     eb0:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     eb4:	mov	r1, #0
     eb8:	mvn	r0, #10
     ebc:	bl	0 <coda_set_error>
     ec0:	mvn	r3, #0
     ec4:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     ec8:	mov	r1, #0
     ecc:	mvn	r0, #12
     ed0:	bl	0 <coda_set_error>
     ed4:	mvn	r3, #0
     ed8:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     edc:	movw	r3, #0
     ee0:	movt	r3, #0
     ee4:	mov	r2, #628	; 0x274
     ee8:	movw	r1, #0
     eec:	movt	r1, #0
     ef0:	movw	r0, #0
     ef4:	movt	r0, #0
     ef8:	bl	0 <__assert_fail>
     efc:	nop	{0}
     f00:	b	f08 <coda_cursor_goto_record_field_by_index+0x254>
     f04:	nop	{0}
     f08:	ldr	r3, [fp, #-16]
     f0c:	ldr	r3, [r3, #4]
     f10:	sub	r3, r3, #1
     f14:	ldr	r2, [fp, #-16]
     f18:	lsl	r3, r3, #4
     f1c:	add	r3, r2, r3
     f20:	ldr	r3, [r3, #8]
     f24:	ldr	r3, [r3]
     f28:	cmp	r3, #100	; 0x64
     f2c:	bne	f38 <coda_cursor_goto_record_field_by_index+0x284>
     f30:	ldr	r0, [fp, #-16]
     f34:	bl	0 <coda_mem_cursor_update_offset>
     f38:	ldr	r3, [pc, #184]	; ff8 <coda_cursor_goto_record_field_by_index+0x344>
     f3c:	ldr	r3, [pc, r3]
     f40:	mrc	15, 0, r2, cr13, cr0, {3}
     f44:	ldr	r3, [r2, r3]
     f48:	cmp	r3, #0
     f4c:	beq	fe0 <coda_cursor_goto_record_field_by_index+0x32c>
     f50:	ldr	r3, [fp, #-16]
     f54:	ldr	r3, [r3, #4]
     f58:	sub	r3, r3, #1
     f5c:	ldr	r2, [fp, #-16]
     f60:	lsl	r3, r3, #4
     f64:	add	r3, r2, r3
     f68:	ldr	r3, [r3, #8]
     f6c:	ldr	r3, [r3]
     f70:	cmp	r3, #99	; 0x63
     f74:	bhi	f98 <coda_cursor_goto_record_field_by_index+0x2e4>
     f78:	ldr	r3, [fp, #-16]
     f7c:	ldr	r3, [r3, #4]
     f80:	sub	r3, r3, #1
     f84:	ldr	r2, [fp, #-16]
     f88:	lsl	r3, r3, #4
     f8c:	add	r3, r2, r3
     f90:	ldr	r3, [r3, #8]
     f94:	b	fb8 <coda_cursor_goto_record_field_by_index+0x304>
     f98:	ldr	r3, [fp, #-16]
     f9c:	ldr	r3, [r3, #4]
     fa0:	sub	r3, r3, #1
     fa4:	ldr	r2, [fp, #-16]
     fa8:	lsl	r3, r3, #4
     fac:	add	r3, r2, r3
     fb0:	ldr	r3, [r3, #8]
     fb4:	ldr	r3, [r3, #4]
     fb8:	ldr	r3, [r3, #8]
     fbc:	cmp	r3, #6
     fc0:	bne	fe0 <coda_cursor_goto_record_field_by_index+0x32c>
     fc4:	ldr	r0, [fp, #-16]
     fc8:	bl	2624 <coda_cursor_use_base_type_of_special_type>
     fcc:	mov	r3, r0
     fd0:	cmp	r3, #0
     fd4:	beq	fe0 <coda_cursor_goto_record_field_by_index+0x32c>
     fd8:	mvn	r3, #0
     fdc:	b	fe4 <coda_cursor_goto_record_field_by_index+0x330>
     fe0:	mov	r3, #0
     fe4:	mov	r0, r3
     fe8:	sub	sp, fp, #4
     fec:	ldr	fp, [sp]
     ff0:	add	sp, sp, #4
     ff4:	pop	{pc}		; (ldr pc, [sp], #4)
     ff8:	.word	0x000000b4

00000ffc <coda_cursor_goto_record_field_by_name>:
     ffc:	str	fp, [sp, #-8]!
    1000:	str	lr, [sp, #4]
    1004:	add	fp, sp, #4
    1008:	sub	sp, sp, #16
    100c:	str	r0, [fp, #-16]
    1010:	str	r1, [fp, #-20]	; 0xffffffec
    1014:	sub	r3, fp, #8
    1018:	mov	r2, r3
    101c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1020:	ldr	r0, [fp, #-16]
    1024:	bl	3e04 <coda_cursor_get_record_field_index_from_name>
    1028:	mov	r3, r0
    102c:	cmp	r3, #0
    1030:	beq	103c <coda_cursor_goto_record_field_by_name+0x40>
    1034:	mvn	r3, #0
    1038:	b	1050 <coda_cursor_goto_record_field_by_name+0x54>
    103c:	ldr	r3, [fp, #-8]
    1040:	mov	r1, r3
    1044:	ldr	r0, [fp, #-16]
    1048:	bl	cb4 <coda_cursor_goto_record_field_by_index>
    104c:	mov	r3, r0
    1050:	mov	r0, r3
    1054:	sub	sp, fp, #4
    1058:	ldr	fp, [sp]
    105c:	add	sp, sp, #4
    1060:	pop	{pc}		; (ldr pc, [sp], #4)

00001064 <coda_cursor_goto_next_record_field>:
    1064:	str	fp, [sp, #-8]!
    1068:	str	lr, [sp, #4]
    106c:	add	fp, sp, #4
    1070:	sub	sp, sp, #16
    1074:	str	r0, [fp, #-16]
    1078:	ldr	r3, [fp, #-16]
    107c:	cmp	r3, #0
    1080:	beq	10b8 <coda_cursor_goto_next_record_field+0x54>
    1084:	ldr	r3, [fp, #-16]
    1088:	ldr	r3, [r3, #4]
    108c:	cmp	r3, #1
    1090:	ble	10b8 <coda_cursor_goto_next_record_field+0x54>
    1094:	ldr	r3, [fp, #-16]
    1098:	ldr	r3, [r3, #4]
    109c:	sub	r3, r3, #2
    10a0:	ldr	r2, [fp, #-16]
    10a4:	lsl	r3, r3, #4
    10a8:	add	r3, r2, r3
    10ac:	ldr	r3, [r3, #8]
    10b0:	cmp	r3, #0
    10b4:	bne	10dc <coda_cursor_goto_next_record_field+0x78>
    10b8:	movw	r3, #706	; 0x2c2
    10bc:	movw	r2, #0
    10c0:	movt	r2, #0
    10c4:	movw	r1, #0
    10c8:	movt	r1, #0
    10cc:	mvn	r0, #99	; 0x63
    10d0:	bl	0 <coda_set_error>
    10d4:	mvn	r3, #0
    10d8:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    10dc:	ldr	r3, [fp, #-16]
    10e0:	ldr	r3, [r3, #4]
    10e4:	sub	r3, r3, #2
    10e8:	ldr	r2, [fp, #-16]
    10ec:	lsl	r3, r3, #4
    10f0:	add	r3, r2, r3
    10f4:	ldr	r3, [r3, #8]
    10f8:	ldr	r3, [r3]
    10fc:	cmp	r3, #99	; 0x63
    1100:	bhi	1124 <coda_cursor_goto_next_record_field+0xc0>
    1104:	ldr	r3, [fp, #-16]
    1108:	ldr	r3, [r3, #4]
    110c:	sub	r3, r3, #2
    1110:	ldr	r2, [fp, #-16]
    1114:	lsl	r3, r3, #4
    1118:	add	r3, r2, r3
    111c:	ldr	r3, [r3, #8]
    1120:	b	1144 <coda_cursor_goto_next_record_field+0xe0>
    1124:	ldr	r3, [fp, #-16]
    1128:	ldr	r3, [r3, #4]
    112c:	sub	r3, r3, #2
    1130:	ldr	r2, [fp, #-16]
    1134:	lsl	r3, r3, #4
    1138:	add	r3, r2, r3
    113c:	ldr	r3, [r3, #8]
    1140:	ldr	r3, [r3, #4]
    1144:	str	r3, [fp, #-8]
    1148:	ldr	r3, [fp, #-8]
    114c:	ldr	r3, [r3, #8]
    1150:	cmp	r3, #0
    1154:	beq	1188 <coda_cursor_goto_next_record_field+0x124>
    1158:	ldr	r3, [fp, #-8]
    115c:	ldr	r3, [r3, #8]
    1160:	mov	r0, r3
    1164:	bl	0 <coda_type_get_class_name>
    1168:	mov	r3, r0
    116c:	mov	r2, r3
    1170:	movw	r1, #0
    1174:	movt	r1, #0
    1178:	mvn	r0, #104	; 0x68
    117c:	bl	0 <coda_set_error>
    1180:	mvn	r3, #0
    1184:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    1188:	ldr	r3, [fp, #-16]
    118c:	ldr	r3, [r3, #4]
    1190:	sub	r3, r3, #1
    1194:	ldr	r2, [fp, #-16]
    1198:	lsl	r3, r3, #4
    119c:	add	r3, r2, r3
    11a0:	ldr	r3, [r3, #12]
    11a4:	cmn	r3, #1
    11a8:	bne	11c4 <coda_cursor_goto_next_record_field+0x160>
    11ac:	movw	r1, #0
    11b0:	movt	r1, #0
    11b4:	mvn	r0, #104	; 0x68
    11b8:	bl	0 <coda_set_error>
    11bc:	mvn	r3, #0
    11c0:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    11c4:	ldr	r3, [fp, #-16]
    11c8:	ldr	r3, [r3, #4]
    11cc:	sub	r3, r3, #2
    11d0:	ldr	r2, [fp, #-16]
    11d4:	lsl	r3, r3, #4
    11d8:	add	r3, r2, r3
    11dc:	ldr	r3, [r3, #8]
    11e0:	ldr	r3, [r3]
    11e4:	cmp	r3, #101	; 0x65
    11e8:	beq	1254 <coda_cursor_goto_next_record_field+0x1f0>
    11ec:	cmp	r3, #101	; 0x65
    11f0:	bhi	1208 <coda_cursor_goto_next_record_field+0x1a4>
    11f4:	cmp	r3, #1
    11f8:	bls	121c <coda_cursor_goto_next_record_field+0x1b8>
    11fc:	cmp	r3, #100	; 0x64
    1200:	beq	1238 <coda_cursor_goto_next_record_field+0x1d4>
    1204:	b	12a8 <coda_cursor_goto_next_record_field+0x244>
    1208:	cmp	r3, #102	; 0x66
    120c:	beq	1268 <coda_cursor_goto_next_record_field+0x204>
    1210:	cmp	r3, #105	; 0x69
    1214:	bhi	12a8 <coda_cursor_goto_next_record_field+0x244>
    1218:	b	127c <coda_cursor_goto_next_record_field+0x218>
    121c:	ldr	r0, [fp, #-16]
    1220:	bl	0 <coda_ascbin_cursor_goto_next_record_field>
    1224:	mov	r3, r0
    1228:	cmp	r3, #0
    122c:	beq	129c <coda_cursor_goto_next_record_field+0x238>
    1230:	mvn	r3, #0
    1234:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    1238:	ldr	r0, [fp, #-16]
    123c:	bl	0 <coda_mem_cursor_goto_next_record_field>
    1240:	mov	r3, r0
    1244:	cmp	r3, #0
    1248:	beq	12a4 <coda_cursor_goto_next_record_field+0x240>
    124c:	mvn	r3, #0
    1250:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    1254:	mov	r1, #0
    1258:	mvn	r0, #10
    125c:	bl	0 <coda_set_error>
    1260:	mvn	r3, #0
    1264:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    1268:	mov	r1, #0
    126c:	mvn	r0, #12
    1270:	bl	0 <coda_set_error>
    1274:	mvn	r3, #0
    1278:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    127c:	movw	r3, #0
    1280:	movt	r3, #0
    1284:	movw	r2, #766	; 0x2fe
    1288:	movw	r1, #0
    128c:	movt	r1, #0
    1290:	movw	r0, #0
    1294:	movt	r0, #0
    1298:	bl	0 <__assert_fail>
    129c:	nop	{0}
    12a0:	b	12a8 <coda_cursor_goto_next_record_field+0x244>
    12a4:	nop	{0}
    12a8:	ldr	r3, [fp, #-16]
    12ac:	ldr	r3, [r3, #4]
    12b0:	sub	r3, r3, #1
    12b4:	ldr	r2, [fp, #-16]
    12b8:	lsl	r3, r3, #4
    12bc:	add	r3, r2, r3
    12c0:	ldr	r3, [r3, #8]
    12c4:	ldr	r3, [r3]
    12c8:	cmp	r3, #100	; 0x64
    12cc:	bne	12d8 <coda_cursor_goto_next_record_field+0x274>
    12d0:	ldr	r0, [fp, #-16]
    12d4:	bl	0 <coda_mem_cursor_update_offset>
    12d8:	ldr	r3, [pc, #184]	; 1398 <coda_cursor_goto_next_record_field+0x334>
    12dc:	ldr	r3, [pc, r3]
    12e0:	mrc	15, 0, r2, cr13, cr0, {3}
    12e4:	ldr	r3, [r2, r3]
    12e8:	cmp	r3, #0
    12ec:	beq	1380 <coda_cursor_goto_next_record_field+0x31c>
    12f0:	ldr	r3, [fp, #-16]
    12f4:	ldr	r3, [r3, #4]
    12f8:	sub	r3, r3, #1
    12fc:	ldr	r2, [fp, #-16]
    1300:	lsl	r3, r3, #4
    1304:	add	r3, r2, r3
    1308:	ldr	r3, [r3, #8]
    130c:	ldr	r3, [r3]
    1310:	cmp	r3, #99	; 0x63
    1314:	bhi	1338 <coda_cursor_goto_next_record_field+0x2d4>
    1318:	ldr	r3, [fp, #-16]
    131c:	ldr	r3, [r3, #4]
    1320:	sub	r3, r3, #1
    1324:	ldr	r2, [fp, #-16]
    1328:	lsl	r3, r3, #4
    132c:	add	r3, r2, r3
    1330:	ldr	r3, [r3, #8]
    1334:	b	1358 <coda_cursor_goto_next_record_field+0x2f4>
    1338:	ldr	r3, [fp, #-16]
    133c:	ldr	r3, [r3, #4]
    1340:	sub	r3, r3, #1
    1344:	ldr	r2, [fp, #-16]
    1348:	lsl	r3, r3, #4
    134c:	add	r3, r2, r3
    1350:	ldr	r3, [r3, #8]
    1354:	ldr	r3, [r3, #4]
    1358:	ldr	r3, [r3, #8]
    135c:	cmp	r3, #6
    1360:	bne	1380 <coda_cursor_goto_next_record_field+0x31c>
    1364:	ldr	r0, [fp, #-16]
    1368:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    136c:	mov	r3, r0
    1370:	cmp	r3, #0
    1374:	beq	1380 <coda_cursor_goto_next_record_field+0x31c>
    1378:	mvn	r3, #0
    137c:	b	1384 <coda_cursor_goto_next_record_field+0x320>
    1380:	mov	r3, #0
    1384:	mov	r0, r3
    1388:	sub	sp, fp, #4
    138c:	ldr	fp, [sp]
    1390:	add	sp, sp, #4
    1394:	pop	{pc}		; (ldr pc, [sp], #4)
    1398:	.word	0x000000b4

0000139c <coda_cursor_goto_available_union_field>:
    139c:	str	fp, [sp, #-8]!
    13a0:	str	lr, [sp, #4]
    13a4:	add	fp, sp, #4
    13a8:	sub	sp, sp, #16
    13ac:	str	r0, [fp, #-16]
    13b0:	ldr	r3, [fp, #-16]
    13b4:	cmp	r3, #0
    13b8:	beq	13f0 <coda_cursor_goto_available_union_field+0x54>
    13bc:	ldr	r3, [fp, #-16]
    13c0:	ldr	r3, [r3, #4]
    13c4:	cmp	r3, #0
    13c8:	ble	13f0 <coda_cursor_goto_available_union_field+0x54>
    13cc:	ldr	r3, [fp, #-16]
    13d0:	ldr	r3, [r3, #4]
    13d4:	sub	r3, r3, #1
    13d8:	ldr	r2, [fp, #-16]
    13dc:	lsl	r3, r3, #4
    13e0:	add	r3, r2, r3
    13e4:	ldr	r3, [r3, #8]
    13e8:	cmp	r3, #0
    13ec:	bne	1414 <coda_cursor_goto_available_union_field+0x78>
    13f0:	movw	r3, #803	; 0x323
    13f4:	movw	r2, #0
    13f8:	movt	r2, #0
    13fc:	movw	r1, #0
    1400:	movt	r1, #0
    1404:	mvn	r0, #99	; 0x63
    1408:	bl	0 <coda_set_error>
    140c:	mvn	r3, #0
    1410:	b	1648 <coda_cursor_goto_available_union_field+0x2ac>
    1414:	ldr	r3, [fp, #-16]
    1418:	ldr	r3, [r3, #4]
    141c:	sub	r3, r3, #1
    1420:	ldr	r2, [fp, #-16]
    1424:	lsl	r3, r3, #4
    1428:	add	r3, r2, r3
    142c:	ldr	r3, [r3, #8]
    1430:	ldr	r3, [r3]
    1434:	cmp	r3, #99	; 0x63
    1438:	bhi	145c <coda_cursor_goto_available_union_field+0xc0>
    143c:	ldr	r3, [fp, #-16]
    1440:	ldr	r3, [r3, #4]
    1444:	sub	r3, r3, #1
    1448:	ldr	r2, [fp, #-16]
    144c:	lsl	r3, r3, #4
    1450:	add	r3, r2, r3
    1454:	ldr	r3, [r3, #8]
    1458:	b	147c <coda_cursor_goto_available_union_field+0xe0>
    145c:	ldr	r3, [fp, #-16]
    1460:	ldr	r3, [r3, #4]
    1464:	sub	r3, r3, #1
    1468:	ldr	r2, [fp, #-16]
    146c:	lsl	r3, r3, #4
    1470:	add	r3, r2, r3
    1474:	ldr	r3, [r3, #8]
    1478:	ldr	r3, [r3, #4]
    147c:	str	r3, [fp, #-8]
    1480:	ldr	r3, [fp, #-8]
    1484:	ldr	r3, [r3, #8]
    1488:	cmp	r3, #0
    148c:	beq	14c0 <coda_cursor_goto_available_union_field+0x124>
    1490:	ldr	r3, [fp, #-8]
    1494:	ldr	r3, [r3, #8]
    1498:	mov	r0, r3
    149c:	bl	0 <coda_type_get_class_name>
    14a0:	mov	r3, r0
    14a4:	mov	r2, r3
    14a8:	movw	r1, #0
    14ac:	movt	r1, #0
    14b0:	mvn	r0, #104	; 0x68
    14b4:	bl	0 <coda_set_error>
    14b8:	mvn	r3, #0
    14bc:	b	1648 <coda_cursor_goto_available_union_field+0x2ac>
    14c0:	ldr	r3, [fp, #-16]
    14c4:	ldr	r3, [r3, #4]
    14c8:	sub	r3, r3, #1
    14cc:	ldr	r2, [fp, #-16]
    14d0:	lsl	r3, r3, #4
    14d4:	add	r3, r2, r3
    14d8:	ldr	r3, [r3, #8]
    14dc:	ldr	r3, [r3]
    14e0:	cmp	r3, #100	; 0x64
    14e4:	beq	1524 <coda_cursor_goto_available_union_field+0x188>
    14e8:	cmp	r3, #100	; 0x64
    14ec:	bhi	14fc <coda_cursor_goto_available_union_field+0x160>
    14f0:	cmp	r3, #1
    14f4:	bhi	156c <coda_cursor_goto_available_union_field+0x1d0>
    14f8:	b	1508 <coda_cursor_goto_available_union_field+0x16c>
    14fc:	cmp	r3, #105	; 0x69
    1500:	bhi	156c <coda_cursor_goto_available_union_field+0x1d0>
    1504:	b	1540 <coda_cursor_goto_available_union_field+0x1a4>
    1508:	ldr	r0, [fp, #-16]
    150c:	bl	0 <coda_ascbin_cursor_goto_available_union_field>
    1510:	mov	r3, r0
    1514:	cmp	r3, #0
    1518:	beq	1560 <coda_cursor_goto_available_union_field+0x1c4>
    151c:	mvn	r3, #0
    1520:	b	1648 <coda_cursor_goto_available_union_field+0x2ac>
    1524:	ldr	r0, [fp, #-16]
    1528:	bl	0 <coda_mem_cursor_goto_available_union_field>
    152c:	mov	r3, r0
    1530:	cmp	r3, #0
    1534:	beq	1568 <coda_cursor_goto_available_union_field+0x1cc>
    1538:	mvn	r3, #0
    153c:	b	1648 <coda_cursor_goto_available_union_field+0x2ac>
    1540:	movw	r3, #0
    1544:	movt	r3, #0
    1548:	movw	r2, #835	; 0x343
    154c:	movw	r1, #0
    1550:	movt	r1, #0
    1554:	movw	r0, #0
    1558:	movt	r0, #0
    155c:	bl	0 <__assert_fail>
    1560:	nop	{0}
    1564:	b	156c <coda_cursor_goto_available_union_field+0x1d0>
    1568:	nop	{0}
    156c:	ldr	r3, [fp, #-16]
    1570:	ldr	r3, [r3, #4]
    1574:	sub	r3, r3, #1
    1578:	ldr	r2, [fp, #-16]
    157c:	lsl	r3, r3, #4
    1580:	add	r3, r2, r3
    1584:	ldr	r3, [r3, #8]
    1588:	ldr	r3, [r3]
    158c:	cmp	r3, #100	; 0x64
    1590:	bne	159c <coda_cursor_goto_available_union_field+0x200>
    1594:	ldr	r0, [fp, #-16]
    1598:	bl	0 <coda_mem_cursor_update_offset>
    159c:	ldr	r3, [pc, #184]	; 165c <coda_cursor_goto_available_union_field+0x2c0>
    15a0:	ldr	r3, [pc, r3]
    15a4:	mrc	15, 0, r2, cr13, cr0, {3}
    15a8:	ldr	r3, [r2, r3]
    15ac:	cmp	r3, #0
    15b0:	beq	1644 <coda_cursor_goto_available_union_field+0x2a8>
    15b4:	ldr	r3, [fp, #-16]
    15b8:	ldr	r3, [r3, #4]
    15bc:	sub	r3, r3, #1
    15c0:	ldr	r2, [fp, #-16]
    15c4:	lsl	r3, r3, #4
    15c8:	add	r3, r2, r3
    15cc:	ldr	r3, [r3, #8]
    15d0:	ldr	r3, [r3]
    15d4:	cmp	r3, #99	; 0x63
    15d8:	bhi	15fc <coda_cursor_goto_available_union_field+0x260>
    15dc:	ldr	r3, [fp, #-16]
    15e0:	ldr	r3, [r3, #4]
    15e4:	sub	r3, r3, #1
    15e8:	ldr	r2, [fp, #-16]
    15ec:	lsl	r3, r3, #4
    15f0:	add	r3, r2, r3
    15f4:	ldr	r3, [r3, #8]
    15f8:	b	161c <coda_cursor_goto_available_union_field+0x280>
    15fc:	ldr	r3, [fp, #-16]
    1600:	ldr	r3, [r3, #4]
    1604:	sub	r3, r3, #1
    1608:	ldr	r2, [fp, #-16]
    160c:	lsl	r3, r3, #4
    1610:	add	r3, r2, r3
    1614:	ldr	r3, [r3, #8]
    1618:	ldr	r3, [r3, #4]
    161c:	ldr	r3, [r3, #8]
    1620:	cmp	r3, #6
    1624:	bne	1644 <coda_cursor_goto_available_union_field+0x2a8>
    1628:	ldr	r0, [fp, #-16]
    162c:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    1630:	mov	r3, r0
    1634:	cmp	r3, #0
    1638:	beq	1644 <coda_cursor_goto_available_union_field+0x2a8>
    163c:	mvn	r3, #0
    1640:	b	1648 <coda_cursor_goto_available_union_field+0x2ac>
    1644:	mov	r3, #0
    1648:	mov	r0, r3
    164c:	sub	sp, fp, #4
    1650:	ldr	fp, [sp]
    1654:	add	sp, sp, #4
    1658:	pop	{pc}		; (ldr pc, [sp], #4)
    165c:	.word	0x000000b4

00001660 <coda_cursor_goto_first_array_element>:
    1660:	str	fp, [sp, #-8]!
    1664:	str	lr, [sp, #4]
    1668:	add	fp, sp, #4
    166c:	sub	sp, sp, #8
    1670:	str	r0, [fp, #-8]
    1674:	mov	r1, #0
    1678:	ldr	r0, [fp, #-8]
    167c:	bl	1a60 <coda_cursor_goto_array_element_by_index>
    1680:	mov	r3, r0
    1684:	mov	r0, r3
    1688:	sub	sp, fp, #4
    168c:	ldr	fp, [sp]
    1690:	add	sp, sp, #4
    1694:	pop	{pc}		; (ldr pc, [sp], #4)

00001698 <coda_cursor_goto_array_element>:
    1698:	str	fp, [sp, #-8]!
    169c:	str	lr, [sp, #4]
    16a0:	add	fp, sp, #4
    16a4:	sub	sp, sp, #32
    16a8:	str	r0, [fp, #-16]
    16ac:	str	r1, [fp, #-20]	; 0xffffffec
    16b0:	str	r2, [fp, #-24]	; 0xffffffe8
    16b4:	ldr	r3, [fp, #-16]
    16b8:	cmp	r3, #0
    16bc:	beq	16f4 <coda_cursor_goto_array_element+0x5c>
    16c0:	ldr	r3, [fp, #-16]
    16c4:	ldr	r3, [r3, #4]
    16c8:	cmp	r3, #0
    16cc:	ble	16f4 <coda_cursor_goto_array_element+0x5c>
    16d0:	ldr	r3, [fp, #-16]
    16d4:	ldr	r3, [r3, #4]
    16d8:	sub	r3, r3, #1
    16dc:	ldr	r2, [fp, #-16]
    16e0:	lsl	r3, r3, #4
    16e4:	add	r3, r2, r3
    16e8:	ldr	r3, [r3, #8]
    16ec:	cmp	r3, #0
    16f0:	bne	1718 <coda_cursor_goto_array_element+0x80>
    16f4:	movw	r3, #890	; 0x37a
    16f8:	movw	r2, #0
    16fc:	movt	r2, #0
    1700:	movw	r1, #0
    1704:	movt	r1, #0
    1708:	mvn	r0, #99	; 0x63
    170c:	bl	0 <coda_set_error>
    1710:	mvn	r3, #0
    1714:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1718:	ldr	r3, [fp, #-16]
    171c:	ldr	r3, [r3, #4]
    1720:	sub	r3, r3, #1
    1724:	ldr	r2, [fp, #-16]
    1728:	lsl	r3, r3, #4
    172c:	add	r3, r2, r3
    1730:	ldr	r3, [r3, #8]
    1734:	ldr	r3, [r3]
    1738:	cmp	r3, #99	; 0x63
    173c:	bhi	1760 <coda_cursor_goto_array_element+0xc8>
    1740:	ldr	r3, [fp, #-16]
    1744:	ldr	r3, [r3, #4]
    1748:	sub	r3, r3, #1
    174c:	ldr	r2, [fp, #-16]
    1750:	lsl	r3, r3, #4
    1754:	add	r3, r2, r3
    1758:	ldr	r3, [r3, #8]
    175c:	b	1780 <coda_cursor_goto_array_element+0xe8>
    1760:	ldr	r3, [fp, #-16]
    1764:	ldr	r3, [r3, #4]
    1768:	sub	r3, r3, #1
    176c:	ldr	r2, [fp, #-16]
    1770:	lsl	r3, r3, #4
    1774:	add	r3, r2, r3
    1778:	ldr	r3, [r3, #8]
    177c:	ldr	r3, [r3, #4]
    1780:	str	r3, [fp, #-8]
    1784:	ldr	r3, [fp, #-8]
    1788:	ldr	r3, [r3, #8]
    178c:	cmp	r3, #1
    1790:	beq	17c4 <coda_cursor_goto_array_element+0x12c>
    1794:	ldr	r3, [fp, #-8]
    1798:	ldr	r3, [r3, #8]
    179c:	mov	r0, r3
    17a0:	bl	0 <coda_type_get_class_name>
    17a4:	mov	r3, r0
    17a8:	mov	r2, r3
    17ac:	movw	r1, #0
    17b0:	movt	r1, #0
    17b4:	mvn	r0, #104	; 0x68
    17b8:	bl	0 <coda_set_error>
    17bc:	mvn	r3, #0
    17c0:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    17c4:	ldr	r3, [fp, #-16]
    17c8:	ldr	r3, [r3, #4]
    17cc:	cmp	r3, #32
    17d0:	bne	1804 <coda_cursor_goto_array_element+0x16c>
    17d4:	ldr	r3, [fp, #-16]
    17d8:	ldr	r2, [r3, #4]
    17dc:	movw	r3, #905	; 0x389
    17e0:	str	r3, [sp]
    17e4:	movw	r3, #0
    17e8:	movt	r3, #0
    17ec:	movw	r1, #0
    17f0:	movt	r1, #0
    17f4:	mvn	r0, #99	; 0x63
    17f8:	bl	0 <coda_set_error>
    17fc:	mvn	r3, #0
    1800:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1804:	ldr	r3, [fp, #-16]
    1808:	ldr	r3, [r3, #4]
    180c:	sub	r3, r3, #1
    1810:	ldr	r2, [fp, #-16]
    1814:	lsl	r3, r3, #4
    1818:	add	r3, r2, r3
    181c:	ldr	r3, [r3, #8]
    1820:	ldr	r3, [r3]
    1824:	cmp	r3, #101	; 0x65
    1828:	beq	18b4 <coda_cursor_goto_array_element+0x21c>
    182c:	cmp	r3, #101	; 0x65
    1830:	bhi	1848 <coda_cursor_goto_array_element+0x1b0>
    1834:	cmp	r3, #1
    1838:	bls	186c <coda_cursor_goto_array_element+0x1d4>
    183c:	cmp	r3, #100	; 0x64
    1840:	beq	1890 <coda_cursor_goto_array_element+0x1f8>
    1844:	b	196c <coda_cursor_goto_array_element+0x2d4>
    1848:	cmp	r3, #103	; 0x67
    184c:	beq	18dc <coda_cursor_goto_array_element+0x244>
    1850:	cmp	r3, #103	; 0x67
    1854:	bcc	18c8 <coda_cursor_goto_array_element+0x230>
    1858:	cmp	r3, #104	; 0x68
    185c:	beq	1900 <coda_cursor_goto_array_element+0x268>
    1860:	cmp	r3, #105	; 0x69
    1864:	beq	1924 <coda_cursor_goto_array_element+0x28c>
    1868:	b	196c <coda_cursor_goto_array_element+0x2d4>
    186c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1870:	ldr	r1, [fp, #-20]	; 0xffffffec
    1874:	ldr	r0, [fp, #-16]
    1878:	bl	0 <coda_ascbin_cursor_goto_array_element>
    187c:	mov	r3, r0
    1880:	cmp	r3, #0
    1884:	beq	1948 <coda_cursor_goto_array_element+0x2b0>
    1888:	mvn	r3, #0
    188c:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1890:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1894:	ldr	r1, [fp, #-20]	; 0xffffffec
    1898:	ldr	r0, [fp, #-16]
    189c:	bl	0 <coda_mem_cursor_goto_array_element>
    18a0:	mov	r3, r0
    18a4:	cmp	r3, #0
    18a8:	beq	1950 <coda_cursor_goto_array_element+0x2b8>
    18ac:	mvn	r3, #0
    18b0:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    18b4:	mov	r1, #0
    18b8:	mvn	r0, #10
    18bc:	bl	0 <coda_set_error>
    18c0:	mvn	r3, #0
    18c4:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    18c8:	mov	r1, #0
    18cc:	mvn	r0, #12
    18d0:	bl	0 <coda_set_error>
    18d4:	mvn	r3, #0
    18d8:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    18dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    18e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    18e4:	ldr	r0, [fp, #-16]
    18e8:	bl	0 <coda_cdf_cursor_goto_array_element>
    18ec:	mov	r3, r0
    18f0:	cmp	r3, #0
    18f4:	beq	1958 <coda_cursor_goto_array_element+0x2c0>
    18f8:	mvn	r3, #0
    18fc:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1900:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1904:	ldr	r1, [fp, #-20]	; 0xffffffec
    1908:	ldr	r0, [fp, #-16]
    190c:	bl	0 <coda_netcdf_cursor_goto_array_element>
    1910:	mov	r3, r0
    1914:	cmp	r3, #0
    1918:	beq	1960 <coda_cursor_goto_array_element+0x2c8>
    191c:	mvn	r3, #0
    1920:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1924:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1928:	ldr	r1, [fp, #-20]	; 0xffffffec
    192c:	ldr	r0, [fp, #-16]
    1930:	bl	0 <coda_grib_cursor_goto_array_element>
    1934:	mov	r3, r0
    1938:	cmp	r3, #0
    193c:	beq	1968 <coda_cursor_goto_array_element+0x2d0>
    1940:	mvn	r3, #0
    1944:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1948:	nop	{0}
    194c:	b	196c <coda_cursor_goto_array_element+0x2d4>
    1950:	nop	{0}
    1954:	b	196c <coda_cursor_goto_array_element+0x2d4>
    1958:	nop	{0}
    195c:	b	196c <coda_cursor_goto_array_element+0x2d4>
    1960:	nop	{0}
    1964:	b	196c <coda_cursor_goto_array_element+0x2d4>
    1968:	nop	{0}
    196c:	ldr	r3, [fp, #-16]
    1970:	ldr	r3, [r3, #4]
    1974:	sub	r3, r3, #1
    1978:	ldr	r2, [fp, #-16]
    197c:	lsl	r3, r3, #4
    1980:	add	r3, r2, r3
    1984:	ldr	r3, [r3, #8]
    1988:	ldr	r3, [r3]
    198c:	cmp	r3, #100	; 0x64
    1990:	bne	199c <coda_cursor_goto_array_element+0x304>
    1994:	ldr	r0, [fp, #-16]
    1998:	bl	0 <coda_mem_cursor_update_offset>
    199c:	ldr	r3, [pc, #184]	; 1a5c <coda_cursor_goto_array_element+0x3c4>
    19a0:	ldr	r3, [pc, r3]
    19a4:	mrc	15, 0, r2, cr13, cr0, {3}
    19a8:	ldr	r3, [r2, r3]
    19ac:	cmp	r3, #0
    19b0:	beq	1a44 <coda_cursor_goto_array_element+0x3ac>
    19b4:	ldr	r3, [fp, #-16]
    19b8:	ldr	r3, [r3, #4]
    19bc:	sub	r3, r3, #1
    19c0:	ldr	r2, [fp, #-16]
    19c4:	lsl	r3, r3, #4
    19c8:	add	r3, r2, r3
    19cc:	ldr	r3, [r3, #8]
    19d0:	ldr	r3, [r3]
    19d4:	cmp	r3, #99	; 0x63
    19d8:	bhi	19fc <coda_cursor_goto_array_element+0x364>
    19dc:	ldr	r3, [fp, #-16]
    19e0:	ldr	r3, [r3, #4]
    19e4:	sub	r3, r3, #1
    19e8:	ldr	r2, [fp, #-16]
    19ec:	lsl	r3, r3, #4
    19f0:	add	r3, r2, r3
    19f4:	ldr	r3, [r3, #8]
    19f8:	b	1a1c <coda_cursor_goto_array_element+0x384>
    19fc:	ldr	r3, [fp, #-16]
    1a00:	ldr	r3, [r3, #4]
    1a04:	sub	r3, r3, #1
    1a08:	ldr	r2, [fp, #-16]
    1a0c:	lsl	r3, r3, #4
    1a10:	add	r3, r2, r3
    1a14:	ldr	r3, [r3, #8]
    1a18:	ldr	r3, [r3, #4]
    1a1c:	ldr	r3, [r3, #8]
    1a20:	cmp	r3, #6
    1a24:	bne	1a44 <coda_cursor_goto_array_element+0x3ac>
    1a28:	ldr	r0, [fp, #-16]
    1a2c:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    1a30:	mov	r3, r0
    1a34:	cmp	r3, #0
    1a38:	beq	1a44 <coda_cursor_goto_array_element+0x3ac>
    1a3c:	mvn	r3, #0
    1a40:	b	1a48 <coda_cursor_goto_array_element+0x3b0>
    1a44:	mov	r3, #0
    1a48:	mov	r0, r3
    1a4c:	sub	sp, fp, #4
    1a50:	ldr	fp, [sp]
    1a54:	add	sp, sp, #4
    1a58:	pop	{pc}		; (ldr pc, [sp], #4)
    1a5c:	.word	0x000000b4

00001a60 <coda_cursor_goto_array_element_by_index>:
    1a60:	str	fp, [sp, #-8]!
    1a64:	str	lr, [sp, #4]
    1a68:	add	fp, sp, #4
    1a6c:	sub	sp, sp, #24
    1a70:	str	r0, [fp, #-16]
    1a74:	str	r1, [fp, #-20]	; 0xffffffec
    1a78:	ldr	r3, [fp, #-16]
    1a7c:	cmp	r3, #0
    1a80:	beq	1ab8 <coda_cursor_goto_array_element_by_index+0x58>
    1a84:	ldr	r3, [fp, #-16]
    1a88:	ldr	r3, [r3, #4]
    1a8c:	cmp	r3, #0
    1a90:	ble	1ab8 <coda_cursor_goto_array_element_by_index+0x58>
    1a94:	ldr	r3, [fp, #-16]
    1a98:	ldr	r3, [r3, #4]
    1a9c:	sub	r3, r3, #1
    1aa0:	ldr	r2, [fp, #-16]
    1aa4:	lsl	r3, r3, #4
    1aa8:	add	r3, r2, r3
    1aac:	ldr	r3, [r3, #8]
    1ab0:	cmp	r3, #0
    1ab4:	bne	1adc <coda_cursor_goto_array_element_by_index+0x7c>
    1ab8:	mov	r3, #1008	; 0x3f0
    1abc:	movw	r2, #0
    1ac0:	movt	r2, #0
    1ac4:	movw	r1, #0
    1ac8:	movt	r1, #0
    1acc:	mvn	r0, #99	; 0x63
    1ad0:	bl	0 <coda_set_error>
    1ad4:	mvn	r3, #0
    1ad8:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1adc:	ldr	r3, [fp, #-16]
    1ae0:	ldr	r3, [r3, #4]
    1ae4:	sub	r3, r3, #1
    1ae8:	ldr	r2, [fp, #-16]
    1aec:	lsl	r3, r3, #4
    1af0:	add	r3, r2, r3
    1af4:	ldr	r3, [r3, #8]
    1af8:	ldr	r3, [r3]
    1afc:	cmp	r3, #99	; 0x63
    1b00:	bhi	1b24 <coda_cursor_goto_array_element_by_index+0xc4>
    1b04:	ldr	r3, [fp, #-16]
    1b08:	ldr	r3, [r3, #4]
    1b0c:	sub	r3, r3, #1
    1b10:	ldr	r2, [fp, #-16]
    1b14:	lsl	r3, r3, #4
    1b18:	add	r3, r2, r3
    1b1c:	ldr	r3, [r3, #8]
    1b20:	b	1b44 <coda_cursor_goto_array_element_by_index+0xe4>
    1b24:	ldr	r3, [fp, #-16]
    1b28:	ldr	r3, [r3, #4]
    1b2c:	sub	r3, r3, #1
    1b30:	ldr	r2, [fp, #-16]
    1b34:	lsl	r3, r3, #4
    1b38:	add	r3, r2, r3
    1b3c:	ldr	r3, [r3, #8]
    1b40:	ldr	r3, [r3, #4]
    1b44:	str	r3, [fp, #-8]
    1b48:	ldr	r3, [fp, #-8]
    1b4c:	ldr	r3, [r3, #8]
    1b50:	cmp	r3, #1
    1b54:	beq	1b88 <coda_cursor_goto_array_element_by_index+0x128>
    1b58:	ldr	r3, [fp, #-8]
    1b5c:	ldr	r3, [r3, #8]
    1b60:	mov	r0, r3
    1b64:	bl	0 <coda_type_get_class_name>
    1b68:	mov	r3, r0
    1b6c:	mov	r2, r3
    1b70:	movw	r1, #0
    1b74:	movt	r1, #0
    1b78:	mvn	r0, #104	; 0x68
    1b7c:	bl	0 <coda_set_error>
    1b80:	mvn	r3, #0
    1b84:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1b88:	ldr	r3, [fp, #-16]
    1b8c:	ldr	r3, [r3, #4]
    1b90:	cmp	r3, #32
    1b94:	bne	1bc8 <coda_cursor_goto_array_element_by_index+0x168>
    1b98:	ldr	r3, [fp, #-16]
    1b9c:	ldr	r2, [r3, #4]
    1ba0:	movw	r3, #1023	; 0x3ff
    1ba4:	str	r3, [sp]
    1ba8:	movw	r3, #0
    1bac:	movt	r3, #0
    1bb0:	movw	r1, #0
    1bb4:	movt	r1, #0
    1bb8:	mvn	r0, #99	; 0x63
    1bbc:	bl	0 <coda_set_error>
    1bc0:	mvn	r3, #0
    1bc4:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1bc8:	ldr	r3, [fp, #-16]
    1bcc:	ldr	r3, [r3, #4]
    1bd0:	sub	r3, r3, #1
    1bd4:	ldr	r2, [fp, #-16]
    1bd8:	lsl	r3, r3, #4
    1bdc:	add	r3, r2, r3
    1be0:	ldr	r3, [r3, #8]
    1be4:	ldr	r3, [r3]
    1be8:	cmp	r3, #101	; 0x65
    1bec:	beq	1c70 <coda_cursor_goto_array_element_by_index+0x210>
    1bf0:	cmp	r3, #101	; 0x65
    1bf4:	bhi	1c0c <coda_cursor_goto_array_element_by_index+0x1ac>
    1bf8:	cmp	r3, #1
    1bfc:	bls	1c30 <coda_cursor_goto_array_element_by_index+0x1d0>
    1c00:	cmp	r3, #100	; 0x64
    1c04:	beq	1c50 <coda_cursor_goto_array_element_by_index+0x1f0>
    1c08:	b	1d1c <coda_cursor_goto_array_element_by_index+0x2bc>
    1c0c:	cmp	r3, #103	; 0x67
    1c10:	beq	1c98 <coda_cursor_goto_array_element_by_index+0x238>
    1c14:	cmp	r3, #103	; 0x67
    1c18:	bcc	1c84 <coda_cursor_goto_array_element_by_index+0x224>
    1c1c:	cmp	r3, #104	; 0x68
    1c20:	beq	1cb8 <coda_cursor_goto_array_element_by_index+0x258>
    1c24:	cmp	r3, #105	; 0x69
    1c28:	beq	1cd8 <coda_cursor_goto_array_element_by_index+0x278>
    1c2c:	b	1d1c <coda_cursor_goto_array_element_by_index+0x2bc>
    1c30:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c34:	ldr	r0, [fp, #-16]
    1c38:	bl	0 <coda_ascbin_cursor_goto_array_element_by_index>
    1c3c:	mov	r3, r0
    1c40:	cmp	r3, #0
    1c44:	beq	1cf8 <coda_cursor_goto_array_element_by_index+0x298>
    1c48:	mvn	r3, #0
    1c4c:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1c50:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c54:	ldr	r0, [fp, #-16]
    1c58:	bl	0 <coda_mem_cursor_goto_array_element_by_index>
    1c5c:	mov	r3, r0
    1c60:	cmp	r3, #0
    1c64:	beq	1d00 <coda_cursor_goto_array_element_by_index+0x2a0>
    1c68:	mvn	r3, #0
    1c6c:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1c70:	mov	r1, #0
    1c74:	mvn	r0, #10
    1c78:	bl	0 <coda_set_error>
    1c7c:	mvn	r3, #0
    1c80:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1c84:	mov	r1, #0
    1c88:	mvn	r0, #12
    1c8c:	bl	0 <coda_set_error>
    1c90:	mvn	r3, #0
    1c94:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1c98:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c9c:	ldr	r0, [fp, #-16]
    1ca0:	bl	0 <coda_cdf_cursor_goto_array_element_by_index>
    1ca4:	mov	r3, r0
    1ca8:	cmp	r3, #0
    1cac:	beq	1d08 <coda_cursor_goto_array_element_by_index+0x2a8>
    1cb0:	mvn	r3, #0
    1cb4:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1cb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1cbc:	ldr	r0, [fp, #-16]
    1cc0:	bl	0 <coda_netcdf_cursor_goto_array_element_by_index>
    1cc4:	mov	r3, r0
    1cc8:	cmp	r3, #0
    1ccc:	beq	1d10 <coda_cursor_goto_array_element_by_index+0x2b0>
    1cd0:	mvn	r3, #0
    1cd4:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1cd8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1cdc:	ldr	r0, [fp, #-16]
    1ce0:	bl	0 <coda_grib_cursor_goto_array_element_by_index>
    1ce4:	mov	r3, r0
    1ce8:	cmp	r3, #0
    1cec:	beq	1d18 <coda_cursor_goto_array_element_by_index+0x2b8>
    1cf0:	mvn	r3, #0
    1cf4:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1cf8:	nop	{0}
    1cfc:	b	1d1c <coda_cursor_goto_array_element_by_index+0x2bc>
    1d00:	nop	{0}
    1d04:	b	1d1c <coda_cursor_goto_array_element_by_index+0x2bc>
    1d08:	nop	{0}
    1d0c:	b	1d1c <coda_cursor_goto_array_element_by_index+0x2bc>
    1d10:	nop	{0}
    1d14:	b	1d1c <coda_cursor_goto_array_element_by_index+0x2bc>
    1d18:	nop	{0}
    1d1c:	ldr	r3, [fp, #-16]
    1d20:	ldr	r3, [r3, #4]
    1d24:	sub	r3, r3, #1
    1d28:	ldr	r2, [fp, #-16]
    1d2c:	lsl	r3, r3, #4
    1d30:	add	r3, r2, r3
    1d34:	ldr	r3, [r3, #8]
    1d38:	ldr	r3, [r3]
    1d3c:	cmp	r3, #100	; 0x64
    1d40:	bne	1d4c <coda_cursor_goto_array_element_by_index+0x2ec>
    1d44:	ldr	r0, [fp, #-16]
    1d48:	bl	0 <coda_mem_cursor_update_offset>
    1d4c:	ldr	r3, [pc, #184]	; 1e0c <coda_cursor_goto_array_element_by_index+0x3ac>
    1d50:	ldr	r3, [pc, r3]
    1d54:	mrc	15, 0, r2, cr13, cr0, {3}
    1d58:	ldr	r3, [r2, r3]
    1d5c:	cmp	r3, #0
    1d60:	beq	1df4 <coda_cursor_goto_array_element_by_index+0x394>
    1d64:	ldr	r3, [fp, #-16]
    1d68:	ldr	r3, [r3, #4]
    1d6c:	sub	r3, r3, #1
    1d70:	ldr	r2, [fp, #-16]
    1d74:	lsl	r3, r3, #4
    1d78:	add	r3, r2, r3
    1d7c:	ldr	r3, [r3, #8]
    1d80:	ldr	r3, [r3]
    1d84:	cmp	r3, #99	; 0x63
    1d88:	bhi	1dac <coda_cursor_goto_array_element_by_index+0x34c>
    1d8c:	ldr	r3, [fp, #-16]
    1d90:	ldr	r3, [r3, #4]
    1d94:	sub	r3, r3, #1
    1d98:	ldr	r2, [fp, #-16]
    1d9c:	lsl	r3, r3, #4
    1da0:	add	r3, r2, r3
    1da4:	ldr	r3, [r3, #8]
    1da8:	b	1dcc <coda_cursor_goto_array_element_by_index+0x36c>
    1dac:	ldr	r3, [fp, #-16]
    1db0:	ldr	r3, [r3, #4]
    1db4:	sub	r3, r3, #1
    1db8:	ldr	r2, [fp, #-16]
    1dbc:	lsl	r3, r3, #4
    1dc0:	add	r3, r2, r3
    1dc4:	ldr	r3, [r3, #8]
    1dc8:	ldr	r3, [r3, #4]
    1dcc:	ldr	r3, [r3, #8]
    1dd0:	cmp	r3, #6
    1dd4:	bne	1df4 <coda_cursor_goto_array_element_by_index+0x394>
    1dd8:	ldr	r0, [fp, #-16]
    1ddc:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    1de0:	mov	r3, r0
    1de4:	cmp	r3, #0
    1de8:	beq	1df4 <coda_cursor_goto_array_element_by_index+0x394>
    1dec:	mvn	r3, #0
    1df0:	b	1df8 <coda_cursor_goto_array_element_by_index+0x398>
    1df4:	mov	r3, #0
    1df8:	mov	r0, r3
    1dfc:	sub	sp, fp, #4
    1e00:	ldr	fp, [sp]
    1e04:	add	sp, sp, #4
    1e08:	pop	{pc}		; (ldr pc, [sp], #4)
    1e0c:	.word	0x000000b4

00001e10 <coda_cursor_goto_next_array_element>:
    1e10:	str	fp, [sp, #-8]!
    1e14:	str	lr, [sp, #4]
    1e18:	add	fp, sp, #4
    1e1c:	sub	sp, sp, #16
    1e20:	str	r0, [fp, #-16]
    1e24:	ldr	r3, [fp, #-16]
    1e28:	cmp	r3, #0
    1e2c:	beq	1e64 <coda_cursor_goto_next_array_element+0x54>
    1e30:	ldr	r3, [fp, #-16]
    1e34:	ldr	r3, [r3, #4]
    1e38:	cmp	r3, #1
    1e3c:	ble	1e64 <coda_cursor_goto_next_array_element+0x54>
    1e40:	ldr	r3, [fp, #-16]
    1e44:	ldr	r3, [r3, #4]
    1e48:	sub	r3, r3, #1
    1e4c:	ldr	r2, [fp, #-16]
    1e50:	lsl	r3, r3, #4
    1e54:	add	r3, r2, r3
    1e58:	ldr	r3, [r3, #8]
    1e5c:	cmp	r3, #0
    1e60:	bne	1e88 <coda_cursor_goto_next_array_element+0x78>
    1e64:	movw	r3, #1134	; 0x46e
    1e68:	movw	r2, #0
    1e6c:	movt	r2, #0
    1e70:	movw	r1, #0
    1e74:	movt	r1, #0
    1e78:	mvn	r0, #99	; 0x63
    1e7c:	bl	0 <coda_set_error>
    1e80:	mvn	r3, #0
    1e84:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    1e88:	ldr	r3, [fp, #-16]
    1e8c:	ldr	r3, [r3, #4]
    1e90:	sub	r3, r3, #2
    1e94:	ldr	r2, [fp, #-16]
    1e98:	lsl	r3, r3, #4
    1e9c:	add	r3, r2, r3
    1ea0:	ldr	r3, [r3, #8]
    1ea4:	ldr	r3, [r3]
    1ea8:	cmp	r3, #99	; 0x63
    1eac:	bhi	1ed0 <coda_cursor_goto_next_array_element+0xc0>
    1eb0:	ldr	r3, [fp, #-16]
    1eb4:	ldr	r3, [r3, #4]
    1eb8:	sub	r3, r3, #2
    1ebc:	ldr	r2, [fp, #-16]
    1ec0:	lsl	r3, r3, #4
    1ec4:	add	r3, r2, r3
    1ec8:	ldr	r3, [r3, #8]
    1ecc:	b	1ef0 <coda_cursor_goto_next_array_element+0xe0>
    1ed0:	ldr	r3, [fp, #-16]
    1ed4:	ldr	r3, [r3, #4]
    1ed8:	sub	r3, r3, #2
    1edc:	ldr	r2, [fp, #-16]
    1ee0:	lsl	r3, r3, #4
    1ee4:	add	r3, r2, r3
    1ee8:	ldr	r3, [r3, #8]
    1eec:	ldr	r3, [r3, #4]
    1ef0:	str	r3, [fp, #-8]
    1ef4:	ldr	r3, [fp, #-8]
    1ef8:	ldr	r3, [r3, #8]
    1efc:	cmp	r3, #1
    1f00:	beq	1f34 <coda_cursor_goto_next_array_element+0x124>
    1f04:	ldr	r3, [fp, #-8]
    1f08:	ldr	r3, [r3, #8]
    1f0c:	mov	r0, r3
    1f10:	bl	0 <coda_type_get_class_name>
    1f14:	mov	r3, r0
    1f18:	mov	r2, r3
    1f1c:	movw	r1, #0
    1f20:	movt	r1, #0
    1f24:	mvn	r0, #104	; 0x68
    1f28:	bl	0 <coda_set_error>
    1f2c:	mvn	r3, #0
    1f30:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    1f34:	ldr	r3, [fp, #-16]
    1f38:	ldr	r3, [r3, #4]
    1f3c:	sub	r3, r3, #1
    1f40:	ldr	r2, [fp, #-16]
    1f44:	lsl	r3, r3, #4
    1f48:	add	r3, r2, r3
    1f4c:	ldr	r3, [r3, #12]
    1f50:	cmn	r3, #1
    1f54:	bne	1f70 <coda_cursor_goto_next_array_element+0x160>
    1f58:	movw	r1, #0
    1f5c:	movt	r1, #0
    1f60:	mvn	r0, #104	; 0x68
    1f64:	bl	0 <coda_set_error>
    1f68:	mvn	r3, #0
    1f6c:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    1f70:	ldr	r3, [fp, #-16]
    1f74:	ldr	r3, [r3, #4]
    1f78:	sub	r3, r3, #2
    1f7c:	ldr	r2, [fp, #-16]
    1f80:	lsl	r3, r3, #4
    1f84:	add	r3, r2, r3
    1f88:	ldr	r3, [r3, #8]
    1f8c:	ldr	r3, [r3]
    1f90:	cmp	r3, #101	; 0x65
    1f94:	beq	2010 <coda_cursor_goto_next_array_element+0x200>
    1f98:	cmp	r3, #101	; 0x65
    1f9c:	bhi	1fb4 <coda_cursor_goto_next_array_element+0x1a4>
    1fa0:	cmp	r3, #1
    1fa4:	bls	1fd8 <coda_cursor_goto_next_array_element+0x1c8>
    1fa8:	cmp	r3, #100	; 0x64
    1fac:	beq	1ff4 <coda_cursor_goto_next_array_element+0x1e4>
    1fb0:	b	20b0 <coda_cursor_goto_next_array_element+0x2a0>
    1fb4:	cmp	r3, #103	; 0x67
    1fb8:	beq	2038 <coda_cursor_goto_next_array_element+0x228>
    1fbc:	cmp	r3, #103	; 0x67
    1fc0:	bcc	2024 <coda_cursor_goto_next_array_element+0x214>
    1fc4:	cmp	r3, #104	; 0x68
    1fc8:	beq	2054 <coda_cursor_goto_next_array_element+0x244>
    1fcc:	cmp	r3, #105	; 0x69
    1fd0:	beq	2070 <coda_cursor_goto_next_array_element+0x260>
    1fd4:	b	20b0 <coda_cursor_goto_next_array_element+0x2a0>
    1fd8:	ldr	r0, [fp, #-16]
    1fdc:	bl	0 <coda_ascbin_cursor_goto_next_array_element>
    1fe0:	mov	r3, r0
    1fe4:	cmp	r3, #0
    1fe8:	beq	208c <coda_cursor_goto_next_array_element+0x27c>
    1fec:	mvn	r3, #0
    1ff0:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    1ff4:	ldr	r0, [fp, #-16]
    1ff8:	bl	0 <coda_mem_cursor_goto_next_array_element>
    1ffc:	mov	r3, r0
    2000:	cmp	r3, #0
    2004:	beq	2094 <coda_cursor_goto_next_array_element+0x284>
    2008:	mvn	r3, #0
    200c:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    2010:	mov	r1, #0
    2014:	mvn	r0, #10
    2018:	bl	0 <coda_set_error>
    201c:	mvn	r3, #0
    2020:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    2024:	mov	r1, #0
    2028:	mvn	r0, #12
    202c:	bl	0 <coda_set_error>
    2030:	mvn	r3, #0
    2034:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    2038:	ldr	r0, [fp, #-16]
    203c:	bl	0 <coda_cdf_cursor_goto_next_array_element>
    2040:	mov	r3, r0
    2044:	cmp	r3, #0
    2048:	beq	209c <coda_cursor_goto_next_array_element+0x28c>
    204c:	mvn	r3, #0
    2050:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    2054:	ldr	r0, [fp, #-16]
    2058:	bl	0 <coda_netcdf_cursor_goto_next_array_element>
    205c:	mov	r3, r0
    2060:	cmp	r3, #0
    2064:	beq	20a4 <coda_cursor_goto_next_array_element+0x294>
    2068:	mvn	r3, #0
    206c:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    2070:	ldr	r0, [fp, #-16]
    2074:	bl	0 <coda_grib_cursor_goto_next_array_element>
    2078:	mov	r3, r0
    207c:	cmp	r3, #0
    2080:	beq	20ac <coda_cursor_goto_next_array_element+0x29c>
    2084:	mvn	r3, #0
    2088:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    208c:	nop	{0}
    2090:	b	20b0 <coda_cursor_goto_next_array_element+0x2a0>
    2094:	nop	{0}
    2098:	b	20b0 <coda_cursor_goto_next_array_element+0x2a0>
    209c:	nop	{0}
    20a0:	b	20b0 <coda_cursor_goto_next_array_element+0x2a0>
    20a4:	nop	{0}
    20a8:	b	20b0 <coda_cursor_goto_next_array_element+0x2a0>
    20ac:	nop	{0}
    20b0:	ldr	r3, [fp, #-16]
    20b4:	ldr	r3, [r3, #4]
    20b8:	sub	r3, r3, #1
    20bc:	ldr	r2, [fp, #-16]
    20c0:	lsl	r3, r3, #4
    20c4:	add	r3, r2, r3
    20c8:	ldr	r3, [r3, #8]
    20cc:	ldr	r3, [r3]
    20d0:	cmp	r3, #100	; 0x64
    20d4:	bne	20e0 <coda_cursor_goto_next_array_element+0x2d0>
    20d8:	ldr	r0, [fp, #-16]
    20dc:	bl	0 <coda_mem_cursor_update_offset>
    20e0:	ldr	r3, [pc, #184]	; 21a0 <coda_cursor_goto_next_array_element+0x390>
    20e4:	ldr	r3, [pc, r3]
    20e8:	mrc	15, 0, r2, cr13, cr0, {3}
    20ec:	ldr	r3, [r2, r3]
    20f0:	cmp	r3, #0
    20f4:	beq	2188 <coda_cursor_goto_next_array_element+0x378>
    20f8:	ldr	r3, [fp, #-16]
    20fc:	ldr	r3, [r3, #4]
    2100:	sub	r3, r3, #1
    2104:	ldr	r2, [fp, #-16]
    2108:	lsl	r3, r3, #4
    210c:	add	r3, r2, r3
    2110:	ldr	r3, [r3, #8]
    2114:	ldr	r3, [r3]
    2118:	cmp	r3, #99	; 0x63
    211c:	bhi	2140 <coda_cursor_goto_next_array_element+0x330>
    2120:	ldr	r3, [fp, #-16]
    2124:	ldr	r3, [r3, #4]
    2128:	sub	r3, r3, #1
    212c:	ldr	r2, [fp, #-16]
    2130:	lsl	r3, r3, #4
    2134:	add	r3, r2, r3
    2138:	ldr	r3, [r3, #8]
    213c:	b	2160 <coda_cursor_goto_next_array_element+0x350>
    2140:	ldr	r3, [fp, #-16]
    2144:	ldr	r3, [r3, #4]
    2148:	sub	r3, r3, #1
    214c:	ldr	r2, [fp, #-16]
    2150:	lsl	r3, r3, #4
    2154:	add	r3, r2, r3
    2158:	ldr	r3, [r3, #8]
    215c:	ldr	r3, [r3, #4]
    2160:	ldr	r3, [r3, #8]
    2164:	cmp	r3, #6
    2168:	bne	2188 <coda_cursor_goto_next_array_element+0x378>
    216c:	ldr	r0, [fp, #-16]
    2170:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    2174:	mov	r3, r0
    2178:	cmp	r3, #0
    217c:	beq	2188 <coda_cursor_goto_next_array_element+0x378>
    2180:	mvn	r3, #0
    2184:	b	218c <coda_cursor_goto_next_array_element+0x37c>
    2188:	mov	r3, #0
    218c:	mov	r0, r3
    2190:	sub	sp, fp, #4
    2194:	ldr	fp, [sp]
    2198:	add	sp, sp, #4
    219c:	pop	{pc}		; (ldr pc, [sp], #4)
    21a0:	.word	0x000000b4

000021a4 <coda_cursor_goto_attributes>:
    21a4:	str	fp, [sp, #-8]!
    21a8:	str	lr, [sp, #4]
    21ac:	add	fp, sp, #4
    21b0:	sub	sp, sp, #16
    21b4:	str	r0, [fp, #-8]
    21b8:	ldr	r3, [fp, #-8]
    21bc:	cmp	r3, #0
    21c0:	beq	21f8 <coda_cursor_goto_attributes+0x54>
    21c4:	ldr	r3, [fp, #-8]
    21c8:	ldr	r3, [r3, #4]
    21cc:	cmp	r3, #0
    21d0:	ble	21f8 <coda_cursor_goto_attributes+0x54>
    21d4:	ldr	r3, [fp, #-8]
    21d8:	ldr	r3, [r3, #4]
    21dc:	sub	r3, r3, #1
    21e0:	ldr	r2, [fp, #-8]
    21e4:	lsl	r3, r3, #4
    21e8:	add	r3, r2, r3
    21ec:	ldr	r3, [r3, #8]
    21f0:	cmp	r3, #0
    21f4:	bne	221c <coda_cursor_goto_attributes+0x78>
    21f8:	movw	r3, #1244	; 0x4dc
    21fc:	movw	r2, #0
    2200:	movt	r2, #0
    2204:	movw	r1, #0
    2208:	movt	r1, #0
    220c:	mvn	r0, #99	; 0x63
    2210:	bl	0 <coda_set_error>
    2214:	mvn	r3, #0
    2218:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    221c:	ldr	r3, [fp, #-8]
    2220:	ldr	r3, [r3, #4]
    2224:	cmp	r3, #32
    2228:	bne	225c <coda_cursor_goto_attributes+0xb8>
    222c:	ldr	r3, [fp, #-8]
    2230:	ldr	r2, [r3, #4]
    2234:	movw	r3, #1251	; 0x4e3
    2238:	str	r3, [sp]
    223c:	movw	r3, #0
    2240:	movt	r3, #0
    2244:	movw	r1, #0
    2248:	movt	r1, #0
    224c:	mvn	r0, #99	; 0x63
    2250:	bl	0 <coda_set_error>
    2254:	mvn	r3, #0
    2258:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    225c:	ldr	r3, [fp, #-8]
    2260:	ldr	r3, [r3, #4]
    2264:	sub	r3, r3, #1
    2268:	ldr	r2, [fp, #-8]
    226c:	lsl	r3, r3, #4
    2270:	add	r3, r2, r3
    2274:	ldr	r3, [r3, #8]
    2278:	ldr	r3, [r3]
    227c:	cmp	r3, #101	; 0x65
    2280:	beq	22fc <coda_cursor_goto_attributes+0x158>
    2284:	cmp	r3, #101	; 0x65
    2288:	bhi	22a0 <coda_cursor_goto_attributes+0xfc>
    228c:	cmp	r3, #1
    2290:	bls	22c4 <coda_cursor_goto_attributes+0x120>
    2294:	cmp	r3, #100	; 0x64
    2298:	beq	22e0 <coda_cursor_goto_attributes+0x13c>
    229c:	b	239c <coda_cursor_goto_attributes+0x1f8>
    22a0:	cmp	r3, #103	; 0x67
    22a4:	beq	2324 <coda_cursor_goto_attributes+0x180>
    22a8:	cmp	r3, #103	; 0x67
    22ac:	bcc	2310 <coda_cursor_goto_attributes+0x16c>
    22b0:	cmp	r3, #104	; 0x68
    22b4:	beq	2340 <coda_cursor_goto_attributes+0x19c>
    22b8:	cmp	r3, #105	; 0x69
    22bc:	beq	235c <coda_cursor_goto_attributes+0x1b8>
    22c0:	b	239c <coda_cursor_goto_attributes+0x1f8>
    22c4:	ldr	r0, [fp, #-8]
    22c8:	bl	0 <coda_ascbin_cursor_goto_attributes>
    22cc:	mov	r3, r0
    22d0:	cmp	r3, #0
    22d4:	beq	2378 <coda_cursor_goto_attributes+0x1d4>
    22d8:	mvn	r3, #0
    22dc:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    22e0:	ldr	r0, [fp, #-8]
    22e4:	bl	0 <coda_mem_cursor_goto_attributes>
    22e8:	mov	r3, r0
    22ec:	cmp	r3, #0
    22f0:	beq	2380 <coda_cursor_goto_attributes+0x1dc>
    22f4:	mvn	r3, #0
    22f8:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    22fc:	mov	r1, #0
    2300:	mvn	r0, #10
    2304:	bl	0 <coda_set_error>
    2308:	mvn	r3, #0
    230c:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    2310:	mov	r1, #0
    2314:	mvn	r0, #12
    2318:	bl	0 <coda_set_error>
    231c:	mvn	r3, #0
    2320:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    2324:	ldr	r0, [fp, #-8]
    2328:	bl	0 <coda_cdf_cursor_goto_attributes>
    232c:	mov	r3, r0
    2330:	cmp	r3, #0
    2334:	beq	2388 <coda_cursor_goto_attributes+0x1e4>
    2338:	mvn	r3, #0
    233c:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    2340:	ldr	r0, [fp, #-8]
    2344:	bl	0 <coda_netcdf_cursor_goto_attributes>
    2348:	mov	r3, r0
    234c:	cmp	r3, #0
    2350:	beq	2390 <coda_cursor_goto_attributes+0x1ec>
    2354:	mvn	r3, #0
    2358:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    235c:	ldr	r0, [fp, #-8]
    2360:	bl	0 <coda_grib_cursor_goto_attributes>
    2364:	mov	r3, r0
    2368:	cmp	r3, #0
    236c:	beq	2398 <coda_cursor_goto_attributes+0x1f4>
    2370:	mvn	r3, #0
    2374:	b	23d0 <coda_cursor_goto_attributes+0x22c>
    2378:	nop	{0}
    237c:	b	239c <coda_cursor_goto_attributes+0x1f8>
    2380:	nop	{0}
    2384:	b	239c <coda_cursor_goto_attributes+0x1f8>
    2388:	nop	{0}
    238c:	b	239c <coda_cursor_goto_attributes+0x1f8>
    2390:	nop	{0}
    2394:	b	239c <coda_cursor_goto_attributes+0x1f8>
    2398:	nop	{0}
    239c:	ldr	r3, [fp, #-8]
    23a0:	ldr	r3, [r3, #4]
    23a4:	sub	r3, r3, #1
    23a8:	ldr	r2, [fp, #-8]
    23ac:	lsl	r3, r3, #4
    23b0:	add	r3, r2, r3
    23b4:	ldr	r3, [r3, #8]
    23b8:	ldr	r3, [r3]
    23bc:	cmp	r3, #100	; 0x64
    23c0:	bne	23cc <coda_cursor_goto_attributes+0x228>
    23c4:	ldr	r0, [fp, #-8]
    23c8:	bl	0 <coda_mem_cursor_update_offset>
    23cc:	mov	r3, #0
    23d0:	mov	r0, r3
    23d4:	sub	sp, fp, #4
    23d8:	ldr	fp, [sp]
    23dc:	add	sp, sp, #4
    23e0:	pop	{pc}		; (ldr pc, [sp], #4)

000023e4 <coda_cursor_goto_parent>:
    23e4:	str	fp, [sp, #-8]!
    23e8:	str	lr, [sp, #4]
    23ec:	add	fp, sp, #4
    23f0:	sub	sp, sp, #8
    23f4:	str	r0, [fp, #-8]
    23f8:	ldr	r3, [fp, #-8]
    23fc:	cmp	r3, #0
    2400:	beq	2438 <coda_cursor_goto_parent+0x54>
    2404:	ldr	r3, [fp, #-8]
    2408:	ldr	r3, [r3, #4]
    240c:	cmp	r3, #0
    2410:	ble	2438 <coda_cursor_goto_parent+0x54>
    2414:	ldr	r3, [fp, #-8]
    2418:	ldr	r3, [r3, #4]
    241c:	sub	r3, r3, #1
    2420:	ldr	r2, [fp, #-8]
    2424:	lsl	r3, r3, #4
    2428:	add	r3, r2, r3
    242c:	ldr	r3, [r3, #8]
    2430:	cmp	r3, #0
    2434:	bne	245c <coda_cursor_goto_parent+0x78>
    2438:	movw	r3, #1333	; 0x535
    243c:	movw	r2, #0
    2440:	movt	r2, #0
    2444:	movw	r1, #0
    2448:	movt	r1, #0
    244c:	mvn	r0, #99	; 0x63
    2450:	bl	0 <coda_set_error>
    2454:	mvn	r3, #0
    2458:	b	2498 <coda_cursor_goto_parent+0xb4>
    245c:	ldr	r3, [fp, #-8]
    2460:	ldr	r3, [r3, #4]
    2464:	cmp	r3, #1
    2468:	bgt	2480 <coda_cursor_goto_parent+0x9c>
    246c:	mov	r1, #0
    2470:	mvn	r0, #107	; 0x6b
    2474:	bl	0 <coda_set_error>
    2478:	mvn	r3, #0
    247c:	b	2498 <coda_cursor_goto_parent+0xb4>
    2480:	ldr	r3, [fp, #-8]
    2484:	ldr	r3, [r3, #4]
    2488:	sub	r2, r3, #1
    248c:	ldr	r3, [fp, #-8]
    2490:	str	r2, [r3, #4]
    2494:	mov	r3, #0
    2498:	mov	r0, r3
    249c:	sub	sp, fp, #4
    24a0:	ldr	fp, [sp]
    24a4:	add	sp, sp, #4
    24a8:	pop	{pc}		; (ldr pc, [sp], #4)

000024ac <coda_cursor_goto_root>:
    24ac:	str	fp, [sp, #-8]!
    24b0:	str	lr, [sp, #4]
    24b4:	add	fp, sp, #4
    24b8:	sub	sp, sp, #8
    24bc:	str	r0, [fp, #-8]
    24c0:	ldr	r3, [fp, #-8]
    24c4:	cmp	r3, #0
    24c8:	beq	2500 <coda_cursor_goto_root+0x54>
    24cc:	ldr	r3, [fp, #-8]
    24d0:	ldr	r3, [r3, #4]
    24d4:	cmp	r3, #0
    24d8:	ble	2500 <coda_cursor_goto_root+0x54>
    24dc:	ldr	r3, [fp, #-8]
    24e0:	ldr	r3, [r3, #4]
    24e4:	sub	r3, r3, #1
    24e8:	ldr	r2, [fp, #-8]
    24ec:	lsl	r3, r3, #4
    24f0:	add	r3, r2, r3
    24f4:	ldr	r3, [r3, #8]
    24f8:	cmp	r3, #0
    24fc:	bne	2524 <coda_cursor_goto_root+0x78>
    2500:	movw	r3, #1359	; 0x54f
    2504:	movw	r2, #0
    2508:	movt	r2, #0
    250c:	movw	r1, #0
    2510:	movt	r1, #0
    2514:	mvn	r0, #99	; 0x63
    2518:	bl	0 <coda_set_error>
    251c:	mvn	r3, #0
    2520:	b	260c <coda_cursor_goto_root+0x160>
    2524:	ldr	r3, [fp, #-8]
    2528:	mov	r2, #1
    252c:	str	r2, [r3, #4]
    2530:	ldr	r3, [fp, #-8]
    2534:	ldr	r3, [r3, #4]
    2538:	sub	r3, r3, #1
    253c:	ldr	r2, [fp, #-8]
    2540:	lsl	r3, r3, #4
    2544:	add	r3, r2, r3
    2548:	ldr	r3, [r3, #8]
    254c:	ldr	r3, [r3]
    2550:	cmp	r3, #100	; 0x64
    2554:	bne	2560 <coda_cursor_goto_root+0xb4>
    2558:	ldr	r0, [fp, #-8]
    255c:	bl	0 <coda_mem_cursor_update_offset>
    2560:	ldr	r3, [pc, #184]	; 2620 <coda_cursor_goto_root+0x174>
    2564:	ldr	r3, [pc, r3]
    2568:	mrc	15, 0, r2, cr13, cr0, {3}
    256c:	ldr	r3, [r2, r3]
    2570:	cmp	r3, #0
    2574:	beq	2608 <coda_cursor_goto_root+0x15c>
    2578:	ldr	r3, [fp, #-8]
    257c:	ldr	r3, [r3, #4]
    2580:	sub	r3, r3, #1
    2584:	ldr	r2, [fp, #-8]
    2588:	lsl	r3, r3, #4
    258c:	add	r3, r2, r3
    2590:	ldr	r3, [r3, #8]
    2594:	ldr	r3, [r3]
    2598:	cmp	r3, #99	; 0x63
    259c:	bhi	25c0 <coda_cursor_goto_root+0x114>
    25a0:	ldr	r3, [fp, #-8]
    25a4:	ldr	r3, [r3, #4]
    25a8:	sub	r3, r3, #1
    25ac:	ldr	r2, [fp, #-8]
    25b0:	lsl	r3, r3, #4
    25b4:	add	r3, r2, r3
    25b8:	ldr	r3, [r3, #8]
    25bc:	b	25e0 <coda_cursor_goto_root+0x134>
    25c0:	ldr	r3, [fp, #-8]
    25c4:	ldr	r3, [r3, #4]
    25c8:	sub	r3, r3, #1
    25cc:	ldr	r2, [fp, #-8]
    25d0:	lsl	r3, r3, #4
    25d4:	add	r3, r2, r3
    25d8:	ldr	r3, [r3, #8]
    25dc:	ldr	r3, [r3, #4]
    25e0:	ldr	r3, [r3, #8]
    25e4:	cmp	r3, #6
    25e8:	bne	2608 <coda_cursor_goto_root+0x15c>
    25ec:	ldr	r0, [fp, #-8]
    25f0:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    25f4:	mov	r3, r0
    25f8:	cmp	r3, #0
    25fc:	beq	2608 <coda_cursor_goto_root+0x15c>
    2600:	mvn	r3, #0
    2604:	b	260c <coda_cursor_goto_root+0x160>
    2608:	mov	r3, #0
    260c:	mov	r0, r3
    2610:	sub	sp, fp, #4
    2614:	ldr	fp, [sp]
    2618:	add	sp, sp, #4
    261c:	pop	{pc}		; (ldr pc, [sp], #4)
    2620:	.word	0x000000b4

00002624 <coda_cursor_use_base_type_of_special_type>:
    2624:	str	fp, [sp, #-8]!
    2628:	str	lr, [sp, #4]
    262c:	add	fp, sp, #4
    2630:	sub	sp, sp, #16
    2634:	str	r0, [fp, #-16]
    2638:	ldr	r3, [fp, #-16]
    263c:	cmp	r3, #0
    2640:	beq	2678 <coda_cursor_use_base_type_of_special_type+0x54>
    2644:	ldr	r3, [fp, #-16]
    2648:	ldr	r3, [r3, #4]
    264c:	cmp	r3, #0
    2650:	ble	2678 <coda_cursor_use_base_type_of_special_type+0x54>
    2654:	ldr	r3, [fp, #-16]
    2658:	ldr	r3, [r3, #4]
    265c:	sub	r3, r3, #1
    2660:	ldr	r2, [fp, #-16]
    2664:	lsl	r3, r3, #4
    2668:	add	r3, r2, r3
    266c:	ldr	r3, [r3, #8]
    2670:	cmp	r3, #0
    2674:	bne	269c <coda_cursor_use_base_type_of_special_type+0x78>
    2678:	movw	r3, #1403	; 0x57b
    267c:	movw	r2, #0
    2680:	movt	r2, #0
    2684:	movw	r1, #0
    2688:	movt	r1, #0
    268c:	mvn	r0, #99	; 0x63
    2690:	bl	0 <coda_set_error>
    2694:	mvn	r3, #0
    2698:	b	2904 <coda_cursor_use_base_type_of_special_type+0x2e0>
    269c:	ldr	r3, [fp, #-16]
    26a0:	ldr	r3, [r3, #4]
    26a4:	sub	r3, r3, #1
    26a8:	ldr	r2, [fp, #-16]
    26ac:	lsl	r3, r3, #4
    26b0:	add	r3, r2, r3
    26b4:	ldr	r3, [r3, #8]
    26b8:	ldr	r3, [r3]
    26bc:	cmp	r3, #99	; 0x63
    26c0:	bhi	26e4 <coda_cursor_use_base_type_of_special_type+0xc0>
    26c4:	ldr	r3, [fp, #-16]
    26c8:	ldr	r3, [r3, #4]
    26cc:	sub	r3, r3, #1
    26d0:	ldr	r2, [fp, #-16]
    26d4:	lsl	r3, r3, #4
    26d8:	add	r3, r2, r3
    26dc:	ldr	r3, [r3, #8]
    26e0:	b	2704 <coda_cursor_use_base_type_of_special_type+0xe0>
    26e4:	ldr	r3, [fp, #-16]
    26e8:	ldr	r3, [r3, #4]
    26ec:	sub	r3, r3, #1
    26f0:	ldr	r2, [fp, #-16]
    26f4:	lsl	r3, r3, #4
    26f8:	add	r3, r2, r3
    26fc:	ldr	r3, [r3, #8]
    2700:	ldr	r3, [r3, #4]
    2704:	str	r3, [fp, #-8]
    2708:	ldr	r3, [fp, #-8]
    270c:	ldr	r3, [r3, #8]
    2710:	cmp	r3, #6
    2714:	beq	2748 <coda_cursor_use_base_type_of_special_type+0x124>
    2718:	ldr	r3, [fp, #-8]
    271c:	ldr	r3, [r3, #8]
    2720:	mov	r0, r3
    2724:	bl	0 <coda_type_get_class_name>
    2728:	mov	r3, r0
    272c:	mov	r2, r3
    2730:	movw	r1, #0
    2734:	movt	r1, #0
    2738:	mvn	r0, #104	; 0x68
    273c:	bl	0 <coda_set_error>
    2740:	mvn	r3, #0
    2744:	b	2904 <coda_cursor_use_base_type_of_special_type+0x2e0>
    2748:	ldr	r3, [fp, #-16]
    274c:	ldr	r3, [r3, #4]
    2750:	sub	r3, r3, #1
    2754:	ldr	r2, [fp, #-16]
    2758:	lsl	r3, r3, #4
    275c:	add	r3, r2, r3
    2760:	ldr	r3, [r3, #8]
    2764:	ldr	r3, [r3]
    2768:	cmp	r3, #102	; 0x66
    276c:	bhi	278c <coda_cursor_use_base_type_of_special_type+0x168>
    2770:	cmp	r3, #101	; 0x65
    2774:	bcs	27f4 <coda_cursor_use_base_type_of_special_type+0x1d0>
    2778:	cmp	r3, #1
    277c:	bls	27a0 <coda_cursor_use_base_type_of_special_type+0x17c>
    2780:	cmp	r3, #100	; 0x64
    2784:	beq	27bc <coda_cursor_use_base_type_of_special_type+0x198>
    2788:	b	2828 <coda_cursor_use_base_type_of_special_type+0x204>
    278c:	cmp	r3, #103	; 0x67
    2790:	beq	27d8 <coda_cursor_use_base_type_of_special_type+0x1b4>
    2794:	cmp	r3, #105	; 0x69
    2798:	bhi	2828 <coda_cursor_use_base_type_of_special_type+0x204>
    279c:	b	27f4 <coda_cursor_use_base_type_of_special_type+0x1d0>
    27a0:	ldr	r0, [fp, #-16]
    27a4:	bl	0 <coda_ascbin_cursor_use_base_type_of_special_type>
    27a8:	mov	r3, r0
    27ac:	cmp	r3, #0
    27b0:	beq	2814 <coda_cursor_use_base_type_of_special_type+0x1f0>
    27b4:	mvn	r3, #0
    27b8:	b	2904 <coda_cursor_use_base_type_of_special_type+0x2e0>
    27bc:	ldr	r0, [fp, #-16]
    27c0:	bl	0 <coda_mem_cursor_use_base_type_of_special_type>
    27c4:	mov	r3, r0
    27c8:	cmp	r3, #0
    27cc:	beq	281c <coda_cursor_use_base_type_of_special_type+0x1f8>
    27d0:	mvn	r3, #0
    27d4:	b	2904 <coda_cursor_use_base_type_of_special_type+0x2e0>
    27d8:	ldr	r0, [fp, #-16]
    27dc:	bl	0 <coda_cdf_cursor_use_base_type_of_special_type>
    27e0:	mov	r3, r0
    27e4:	cmp	r3, #0
    27e8:	beq	2824 <coda_cursor_use_base_type_of_special_type+0x200>
    27ec:	mvn	r3, #0
    27f0:	b	2904 <coda_cursor_use_base_type_of_special_type+0x2e0>
    27f4:	movw	r3, #0
    27f8:	movt	r3, #0
    27fc:	mov	r2, #1440	; 0x5a0
    2800:	movw	r1, #0
    2804:	movt	r1, #0
    2808:	movw	r0, #0
    280c:	movt	r0, #0
    2810:	bl	0 <__assert_fail>
    2814:	nop	{0}
    2818:	b	2828 <coda_cursor_use_base_type_of_special_type+0x204>
    281c:	nop	{0}
    2820:	b	2828 <coda_cursor_use_base_type_of_special_type+0x204>
    2824:	nop	{0}
    2828:	ldr	r3, [fp, #-16]
    282c:	ldr	r3, [r3, #4]
    2830:	sub	r3, r3, #1
    2834:	ldr	r2, [fp, #-16]
    2838:	lsl	r3, r3, #4
    283c:	add	r3, r2, r3
    2840:	ldr	r3, [r3, #8]
    2844:	ldr	r3, [r3]
    2848:	cmp	r3, #100	; 0x64
    284c:	bne	2858 <coda_cursor_use_base_type_of_special_type+0x234>
    2850:	ldr	r0, [fp, #-16]
    2854:	bl	0 <coda_mem_cursor_update_offset>
    2858:	ldr	r3, [pc, #184]	; 2918 <coda_cursor_use_base_type_of_special_type+0x2f4>
    285c:	ldr	r3, [pc, r3]
    2860:	mrc	15, 0, r2, cr13, cr0, {3}
    2864:	ldr	r3, [r2, r3]
    2868:	cmp	r3, #0
    286c:	beq	2900 <coda_cursor_use_base_type_of_special_type+0x2dc>
    2870:	ldr	r3, [fp, #-16]
    2874:	ldr	r3, [r3, #4]
    2878:	sub	r3, r3, #1
    287c:	ldr	r2, [fp, #-16]
    2880:	lsl	r3, r3, #4
    2884:	add	r3, r2, r3
    2888:	ldr	r3, [r3, #8]
    288c:	ldr	r3, [r3]
    2890:	cmp	r3, #99	; 0x63
    2894:	bhi	28b8 <coda_cursor_use_base_type_of_special_type+0x294>
    2898:	ldr	r3, [fp, #-16]
    289c:	ldr	r3, [r3, #4]
    28a0:	sub	r3, r3, #1
    28a4:	ldr	r2, [fp, #-16]
    28a8:	lsl	r3, r3, #4
    28ac:	add	r3, r2, r3
    28b0:	ldr	r3, [r3, #8]
    28b4:	b	28d8 <coda_cursor_use_base_type_of_special_type+0x2b4>
    28b8:	ldr	r3, [fp, #-16]
    28bc:	ldr	r3, [r3, #4]
    28c0:	sub	r3, r3, #1
    28c4:	ldr	r2, [fp, #-16]
    28c8:	lsl	r3, r3, #4
    28cc:	add	r3, r2, r3
    28d0:	ldr	r3, [r3, #8]
    28d4:	ldr	r3, [r3, #4]
    28d8:	ldr	r3, [r3, #8]
    28dc:	cmp	r3, #6
    28e0:	bne	2900 <coda_cursor_use_base_type_of_special_type+0x2dc>
    28e4:	ldr	r0, [fp, #-16]
    28e8:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    28ec:	mov	r3, r0
    28f0:	cmp	r3, #0
    28f4:	beq	2900 <coda_cursor_use_base_type_of_special_type+0x2dc>
    28f8:	mvn	r3, #0
    28fc:	b	2904 <coda_cursor_use_base_type_of_special_type+0x2e0>
    2900:	mov	r3, #0
    2904:	mov	r0, r3
    2908:	sub	sp, fp, #4
    290c:	ldr	fp, [sp]
    2910:	add	sp, sp, #4
    2914:	pop	{pc}		; (ldr pc, [sp], #4)
    2918:	.word	0x000000b4

0000291c <coda_cursor_has_ascii_content>:
    291c:	str	fp, [sp, #-8]!
    2920:	str	lr, [sp, #4]
    2924:	add	fp, sp, #4
    2928:	sub	sp, sp, #536	; 0x218
    292c:	str	r0, [fp, #-536]	; 0xfffffde8
    2930:	str	r1, [fp, #-540]	; 0xfffffde4
    2934:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2938:	cmp	r3, #0
    293c:	beq	2974 <coda_cursor_has_ascii_content+0x58>
    2940:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2944:	ldr	r3, [r3, #4]
    2948:	cmp	r3, #0
    294c:	ble	2974 <coda_cursor_has_ascii_content+0x58>
    2950:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2954:	ldr	r3, [r3, #4]
    2958:	sub	r3, r3, #1
    295c:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2960:	lsl	r3, r3, #4
    2964:	add	r3, r2, r3
    2968:	ldr	r3, [r3, #8]
    296c:	cmp	r3, #0
    2970:	bne	2998 <coda_cursor_has_ascii_content+0x7c>
    2974:	movw	r3, #1477	; 0x5c5
    2978:	movw	r2, #0
    297c:	movt	r2, #0
    2980:	movw	r1, #0
    2984:	movt	r1, #0
    2988:	mvn	r0, #99	; 0x63
    298c:	bl	0 <coda_set_error>
    2990:	mvn	r3, #0
    2994:	b	2b08 <coda_cursor_has_ascii_content+0x1ec>
    2998:	ldr	r3, [fp, #-540]	; 0xfffffde4
    299c:	cmp	r3, #0
    29a0:	bne	29c8 <coda_cursor_has_ascii_content+0xac>
    29a4:	movw	r3, #1482	; 0x5ca
    29a8:	movw	r2, #0
    29ac:	movt	r2, #0
    29b0:	movw	r1, #0
    29b4:	movt	r1, #0
    29b8:	mvn	r0, #99	; 0x63
    29bc:	bl	0 <coda_set_error>
    29c0:	mvn	r3, #0
    29c4:	b	2b08 <coda_cursor_has_ascii_content+0x1ec>
    29c8:	ldr	r3, [fp, #-536]	; 0xfffffde8
    29cc:	ldr	r3, [r3, #4]
    29d0:	sub	r3, r3, #1
    29d4:	ldr	r2, [fp, #-536]	; 0xfffffde8
    29d8:	lsl	r3, r3, #4
    29dc:	add	r3, r2, r3
    29e0:	ldr	r3, [r3, #8]
    29e4:	ldr	r3, [r3]
    29e8:	cmp	r3, #0
    29ec:	bne	2a00 <coda_cursor_has_ascii_content+0xe4>
    29f0:	ldr	r3, [fp, #-540]	; 0xfffffde4
    29f4:	mov	r2, #1
    29f8:	str	r2, [r3]
    29fc:	b	2b04 <coda_cursor_has_ascii_content+0x1e8>
    2a00:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2a04:	ldr	r3, [r3, #4]
    2a08:	sub	r3, r3, #1
    2a0c:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2a10:	lsl	r3, r3, #4
    2a14:	add	r3, r2, r3
    2a18:	ldr	r3, [r3, #8]
    2a1c:	ldr	r3, [r3]
    2a20:	cmp	r3, #99	; 0x63
    2a24:	bhi	2a48 <coda_cursor_has_ascii_content+0x12c>
    2a28:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2a2c:	ldr	r3, [r3, #4]
    2a30:	sub	r3, r3, #1
    2a34:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2a38:	lsl	r3, r3, #4
    2a3c:	add	r3, r2, r3
    2a40:	ldr	r3, [r3, #8]
    2a44:	b	2a68 <coda_cursor_has_ascii_content+0x14c>
    2a48:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2a4c:	ldr	r3, [r3, #4]
    2a50:	sub	r3, r3, #1
    2a54:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2a58:	lsl	r3, r3, #4
    2a5c:	add	r3, r2, r3
    2a60:	ldr	r3, [r3, #8]
    2a64:	ldr	r3, [r3, #4]
    2a68:	str	r3, [fp, #-8]
    2a6c:	ldr	r3, [fp, #-8]
    2a70:	ldr	r3, [r3, #8]
    2a74:	cmp	r3, #6
    2a78:	bne	2acc <coda_cursor_has_ascii_content+0x1b0>
    2a7c:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2a80:	sub	r3, fp, #532	; 0x214
    2a84:	mov	r1, r2
    2a88:	mov	r2, #520	; 0x208
    2a8c:	mov	r0, r3
    2a90:	bl	0 <memcpy>
    2a94:	sub	r3, fp, #532	; 0x214
    2a98:	mov	r0, r3
    2a9c:	bl	2624 <coda_cursor_use_base_type_of_special_type>
    2aa0:	mov	r3, r0
    2aa4:	cmp	r3, #0
    2aa8:	beq	2ab4 <coda_cursor_has_ascii_content+0x198>
    2aac:	mvn	r3, #0
    2ab0:	b	2b08 <coda_cursor_has_ascii_content+0x1ec>
    2ab4:	sub	r3, fp, #532	; 0x214
    2ab8:	ldr	r1, [fp, #-540]	; 0xfffffde4
    2abc:	mov	r0, r3
    2ac0:	bl	291c <coda_cursor_has_ascii_content>
    2ac4:	mov	r3, r0
    2ac8:	b	2b08 <coda_cursor_has_ascii_content+0x1ec>
    2acc:	ldr	r3, [fp, #-8]
    2ad0:	ldr	r3, [r3]
    2ad4:	cmp	r3, #0
    2ad8:	beq	2aec <coda_cursor_has_ascii_content+0x1d0>
    2adc:	ldr	r3, [fp, #-8]
    2ae0:	ldr	r3, [r3, #8]
    2ae4:	cmp	r3, #4
    2ae8:	bne	2af4 <coda_cursor_has_ascii_content+0x1d8>
    2aec:	mov	r2, #1
    2af0:	b	2af8 <coda_cursor_has_ascii_content+0x1dc>
    2af4:	mov	r2, #0
    2af8:	ldr	r3, [fp, #-540]	; 0xfffffde4
    2afc:	str	r2, [r3]
    2b00:	nop	{0}
    2b04:	mov	r3, #0
    2b08:	mov	r0, r3
    2b0c:	sub	sp, fp, #4
    2b10:	ldr	fp, [sp]
    2b14:	add	sp, sp, #4
    2b18:	pop	{pc}		; (ldr pc, [sp], #4)

00002b1c <coda_cursor_has_attributes>:
    2b1c:	str	fp, [sp, #-8]!
    2b20:	str	lr, [sp, #4]
    2b24:	add	fp, sp, #4
    2b28:	sub	sp, sp, #16
    2b2c:	str	r0, [fp, #-16]
    2b30:	str	r1, [fp, #-20]	; 0xffffffec
    2b34:	ldr	r3, [fp, #-16]
    2b38:	cmp	r3, #0
    2b3c:	beq	2b74 <coda_cursor_has_attributes+0x58>
    2b40:	ldr	r3, [fp, #-16]
    2b44:	ldr	r3, [r3, #4]
    2b48:	cmp	r3, #0
    2b4c:	ble	2b74 <coda_cursor_has_attributes+0x58>
    2b50:	ldr	r3, [fp, #-16]
    2b54:	ldr	r3, [r3, #4]
    2b58:	sub	r3, r3, #1
    2b5c:	ldr	r2, [fp, #-16]
    2b60:	lsl	r3, r3, #4
    2b64:	add	r3, r2, r3
    2b68:	ldr	r3, [r3, #8]
    2b6c:	cmp	r3, #0
    2b70:	bne	2b98 <coda_cursor_has_attributes+0x7c>
    2b74:	movw	r3, #1528	; 0x5f8
    2b78:	movw	r2, #0
    2b7c:	movt	r2, #0
    2b80:	movw	r1, #0
    2b84:	movt	r1, #0
    2b88:	mvn	r0, #99	; 0x63
    2b8c:	bl	0 <coda_set_error>
    2b90:	mvn	r3, #0
    2b94:	b	2c5c <coda_cursor_has_attributes+0x140>
    2b98:	ldr	r3, [fp, #-20]	; 0xffffffec
    2b9c:	cmp	r3, #0
    2ba0:	bne	2bc8 <coda_cursor_has_attributes+0xac>
    2ba4:	movw	r3, #1533	; 0x5fd
    2ba8:	movw	r2, #0
    2bac:	movt	r2, #0
    2bb0:	movw	r1, #0
    2bb4:	movt	r1, #0
    2bb8:	mvn	r0, #99	; 0x63
    2bbc:	bl	0 <coda_set_error>
    2bc0:	mvn	r3, #0
    2bc4:	b	2c5c <coda_cursor_has_attributes+0x140>
    2bc8:	ldr	r3, [fp, #-16]
    2bcc:	ldr	r3, [r3, #4]
    2bd0:	sub	r3, r3, #1
    2bd4:	ldr	r2, [fp, #-16]
    2bd8:	lsl	r3, r3, #4
    2bdc:	add	r3, r2, r3
    2be0:	ldr	r3, [r3, #8]
    2be4:	ldr	r3, [r3]
    2be8:	cmp	r3, #99	; 0x63
    2bec:	bhi	2c10 <coda_cursor_has_attributes+0xf4>
    2bf0:	ldr	r3, [fp, #-16]
    2bf4:	ldr	r3, [r3, #4]
    2bf8:	sub	r3, r3, #1
    2bfc:	ldr	r2, [fp, #-16]
    2c00:	lsl	r3, r3, #4
    2c04:	add	r3, r2, r3
    2c08:	ldr	r3, [r3, #8]
    2c0c:	b	2c30 <coda_cursor_has_attributes+0x114>
    2c10:	ldr	r3, [fp, #-16]
    2c14:	ldr	r3, [r3, #4]
    2c18:	sub	r3, r3, #1
    2c1c:	ldr	r2, [fp, #-16]
    2c20:	lsl	r3, r3, #4
    2c24:	add	r3, r2, r3
    2c28:	ldr	r3, [r3, #8]
    2c2c:	ldr	r3, [r3, #4]
    2c30:	str	r3, [fp, #-8]
    2c34:	ldr	r3, [fp, #-8]
    2c38:	ldr	r3, [r3, #36]	; 0x24
    2c3c:	cmp	r3, #0
    2c40:	movne	r3, #1
    2c44:	moveq	r3, #0
    2c48:	uxtb	r3, r3
    2c4c:	mov	r2, r3
    2c50:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c54:	str	r2, [r3]
    2c58:	mov	r3, #0
    2c5c:	mov	r0, r3
    2c60:	sub	sp, fp, #4
    2c64:	ldr	fp, [sp]
    2c68:	add	sp, sp, #4
    2c6c:	pop	{pc}		; (ldr pc, [sp], #4)

00002c70 <coda_cursor_get_string_length>:
    2c70:	str	fp, [sp, #-8]!
    2c74:	str	lr, [sp, #4]
    2c78:	add	fp, sp, #4
    2c7c:	sub	sp, sp, #16
    2c80:	str	r0, [fp, #-16]
    2c84:	str	r1, [fp, #-20]	; 0xffffffec
    2c88:	ldr	r3, [fp, #-16]
    2c8c:	cmp	r3, #0
    2c90:	beq	2cc8 <coda_cursor_get_string_length+0x58>
    2c94:	ldr	r3, [fp, #-16]
    2c98:	ldr	r3, [r3, #4]
    2c9c:	cmp	r3, #0
    2ca0:	ble	2cc8 <coda_cursor_get_string_length+0x58>
    2ca4:	ldr	r3, [fp, #-16]
    2ca8:	ldr	r3, [r3, #4]
    2cac:	sub	r3, r3, #1
    2cb0:	ldr	r2, [fp, #-16]
    2cb4:	lsl	r3, r3, #4
    2cb8:	add	r3, r2, r3
    2cbc:	ldr	r3, [r3, #8]
    2cc0:	cmp	r3, #0
    2cc4:	bne	2cec <coda_cursor_get_string_length+0x7c>
    2cc8:	movw	r3, #1559	; 0x617
    2ccc:	movw	r2, #0
    2cd0:	movt	r2, #0
    2cd4:	movw	r1, #0
    2cd8:	movt	r1, #0
    2cdc:	mvn	r0, #99	; 0x63
    2ce0:	bl	0 <coda_set_error>
    2ce4:	mvn	r3, #0
    2ce8:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2cec:	ldr	r3, [fp, #-20]	; 0xffffffec
    2cf0:	cmp	r3, #0
    2cf4:	bne	2d1c <coda_cursor_get_string_length+0xac>
    2cf8:	movw	r3, #1564	; 0x61c
    2cfc:	movw	r2, #0
    2d00:	movt	r2, #0
    2d04:	movw	r1, #0
    2d08:	movt	r1, #0
    2d0c:	mvn	r0, #99	; 0x63
    2d10:	bl	0 <coda_set_error>
    2d14:	mvn	r3, #0
    2d18:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2d1c:	sub	r3, fp, #8
    2d20:	mov	r1, r3
    2d24:	ldr	r0, [fp, #-16]
    2d28:	bl	291c <coda_cursor_has_ascii_content>
    2d2c:	mov	r3, r0
    2d30:	cmp	r3, #0
    2d34:	beq	2d40 <coda_cursor_get_string_length+0xd0>
    2d38:	mvn	r3, #0
    2d3c:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2d40:	ldr	r3, [fp, #-8]
    2d44:	cmp	r3, #0
    2d48:	bne	2d64 <coda_cursor_get_string_length+0xf4>
    2d4c:	movw	r1, #0
    2d50:	movt	r1, #0
    2d54:	mvn	r0, #104	; 0x68
    2d58:	bl	0 <coda_set_error>
    2d5c:	mvn	r3, #0
    2d60:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2d64:	ldr	r3, [fp, #-16]
    2d68:	ldr	r3, [r3, #4]
    2d6c:	sub	r3, r3, #1
    2d70:	ldr	r2, [fp, #-16]
    2d74:	lsl	r3, r3, #4
    2d78:	add	r3, r2, r3
    2d7c:	ldr	r3, [r3, #8]
    2d80:	ldr	r3, [r3]
    2d84:	cmp	r3, #101	; 0x65
    2d88:	beq	2e0c <coda_cursor_get_string_length+0x19c>
    2d8c:	cmp	r3, #101	; 0x65
    2d90:	bhi	2db0 <coda_cursor_get_string_length+0x140>
    2d94:	cmp	r3, #1
    2d98:	beq	2de4 <coda_cursor_get_string_length+0x174>
    2d9c:	cmp	r3, #0
    2da0:	beq	2dd0 <coda_cursor_get_string_length+0x160>
    2da4:	cmp	r3, #100	; 0x64
    2da8:	beq	2df8 <coda_cursor_get_string_length+0x188>
    2dac:	b	2e5c <coda_cursor_get_string_length+0x1ec>
    2db0:	cmp	r3, #103	; 0x67
    2db4:	beq	2e34 <coda_cursor_get_string_length+0x1c4>
    2db8:	cmp	r3, #103	; 0x67
    2dbc:	bcc	2e20 <coda_cursor_get_string_length+0x1b0>
    2dc0:	cmp	r3, #104	; 0x68
    2dc4:	beq	2e48 <coda_cursor_get_string_length+0x1d8>
    2dc8:	cmp	r3, #105	; 0x69
    2dcc:	b	2e5c <coda_cursor_get_string_length+0x1ec>
    2dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2dd4:	ldr	r0, [fp, #-16]
    2dd8:	bl	0 <coda_ascii_cursor_get_string_length>
    2ddc:	mov	r3, r0
    2de0:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2de4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2de8:	ldr	r0, [fp, #-16]
    2dec:	bl	0 <coda_bin_cursor_get_string_length>
    2df0:	mov	r3, r0
    2df4:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2df8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2dfc:	ldr	r0, [fp, #-16]
    2e00:	bl	0 <coda_mem_cursor_get_string_length>
    2e04:	mov	r3, r0
    2e08:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2e0c:	mov	r1, #0
    2e10:	mvn	r0, #10
    2e14:	bl	0 <coda_set_error>
    2e18:	mvn	r3, #0
    2e1c:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2e20:	mov	r1, #0
    2e24:	mvn	r0, #12
    2e28:	bl	0 <coda_set_error>
    2e2c:	mvn	r3, #0
    2e30:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2e34:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e38:	ldr	r0, [fp, #-16]
    2e3c:	bl	0 <coda_cdf_cursor_get_string_length>
    2e40:	mov	r3, r0
    2e44:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2e48:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e4c:	ldr	r0, [fp, #-16]
    2e50:	bl	0 <coda_netcdf_cursor_get_string_length>
    2e54:	mov	r3, r0
    2e58:	b	2e7c <coda_cursor_get_string_length+0x20c>
    2e5c:	movw	r3, #0
    2e60:	movt	r3, #0
    2e64:	movw	r2, #1608	; 0x648
    2e68:	movw	r1, #0
    2e6c:	movt	r1, #0
    2e70:	movw	r0, #0
    2e74:	movt	r0, #0
    2e78:	bl	0 <__assert_fail>
    2e7c:	mov	r0, r3
    2e80:	sub	sp, fp, #4
    2e84:	ldr	fp, [sp]
    2e88:	add	sp, sp, #4
    2e8c:	pop	{pc}		; (ldr pc, [sp], #4)

00002e90 <coda_cursor_get_bit_size>:
    2e90:	str	fp, [sp, #-8]!
    2e94:	str	lr, [sp, #4]
    2e98:	add	fp, sp, #4
    2e9c:	sub	sp, sp, #8
    2ea0:	str	r0, [fp, #-8]
    2ea4:	str	r1, [fp, #-12]
    2ea8:	ldr	r3, [fp, #-8]
    2eac:	cmp	r3, #0
    2eb0:	beq	2ee8 <coda_cursor_get_bit_size+0x58>
    2eb4:	ldr	r3, [fp, #-8]
    2eb8:	ldr	r3, [r3, #4]
    2ebc:	cmp	r3, #0
    2ec0:	ble	2ee8 <coda_cursor_get_bit_size+0x58>
    2ec4:	ldr	r3, [fp, #-8]
    2ec8:	ldr	r3, [r3, #4]
    2ecc:	sub	r3, r3, #1
    2ed0:	ldr	r2, [fp, #-8]
    2ed4:	lsl	r3, r3, #4
    2ed8:	add	r3, r2, r3
    2edc:	ldr	r3, [r3, #8]
    2ee0:	cmp	r3, #0
    2ee4:	bne	2f0c <coda_cursor_get_bit_size+0x7c>
    2ee8:	movw	r3, #1630	; 0x65e
    2eec:	movw	r2, #0
    2ef0:	movt	r2, #0
    2ef4:	movw	r1, #0
    2ef8:	movt	r1, #0
    2efc:	mvn	r0, #99	; 0x63
    2f00:	bl	0 <coda_set_error>
    2f04:	mvn	r3, #0
    2f08:	b	2fb0 <coda_cursor_get_bit_size+0x120>
    2f0c:	ldr	r3, [fp, #-8]
    2f10:	ldr	r3, [r3, #4]
    2f14:	sub	r3, r3, #1
    2f18:	ldr	r2, [fp, #-8]
    2f1c:	lsl	r3, r3, #4
    2f20:	add	r3, r2, r3
    2f24:	ldr	r3, [r3, #8]
    2f28:	ldr	r3, [r3]
    2f2c:	cmp	r3, #100	; 0x64
    2f30:	beq	2f84 <coda_cursor_get_bit_size+0xf4>
    2f34:	cmp	r3, #100	; 0x64
    2f38:	bhi	2f50 <coda_cursor_get_bit_size+0xc0>
    2f3c:	cmp	r3, #0
    2f40:	beq	2f5c <coda_cursor_get_bit_size+0xcc>
    2f44:	cmp	r3, #1
    2f48:	beq	2f70 <coda_cursor_get_bit_size+0xe0>
    2f4c:	b	2fac <coda_cursor_get_bit_size+0x11c>
    2f50:	cmp	r3, #105	; 0x69
    2f54:	bhi	2fac <coda_cursor_get_bit_size+0x11c>
    2f58:	b	2f98 <coda_cursor_get_bit_size+0x108>
    2f5c:	ldr	r1, [fp, #-12]
    2f60:	ldr	r0, [fp, #-8]
    2f64:	bl	0 <coda_ascii_cursor_get_bit_size>
    2f68:	mov	r3, r0
    2f6c:	b	2fb0 <coda_cursor_get_bit_size+0x120>
    2f70:	ldr	r1, [fp, #-12]
    2f74:	ldr	r0, [fp, #-8]
    2f78:	bl	0 <coda_bin_cursor_get_bit_size>
    2f7c:	mov	r3, r0
    2f80:	b	2fb0 <coda_cursor_get_bit_size+0x120>
    2f84:	ldr	r1, [fp, #-12]
    2f88:	ldr	r0, [fp, #-8]
    2f8c:	bl	0 <coda_mem_cursor_get_bit_size>
    2f90:	mov	r3, r0
    2f94:	b	2fb0 <coda_cursor_get_bit_size+0x120>
    2f98:	ldr	r1, [fp, #-12]
    2f9c:	mvn	r2, #0
    2fa0:	mvn	r3, #0
    2fa4:	strd	r2, [r1]
    2fa8:	nop	{0}
    2fac:	mov	r3, #0
    2fb0:	mov	r0, r3
    2fb4:	sub	sp, fp, #4
    2fb8:	ldr	fp, [sp]
    2fbc:	add	sp, sp, #4
    2fc0:	pop	{pc}		; (ldr pc, [sp], #4)

00002fc4 <coda_cursor_get_byte_size>:
    2fc4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2fc8:	strd	r6, [sp, #8]
    2fcc:	strd	r8, [sp, #16]
    2fd0:	str	fp, [sp, #24]
    2fd4:	str	lr, [sp, #28]
    2fd8:	add	fp, sp, #28
    2fdc:	sub	sp, sp, #16
    2fe0:	str	r0, [fp, #-40]	; 0xffffffd8
    2fe4:	str	r1, [fp, #-44]	; 0xffffffd4
    2fe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2fec:	cmp	r3, #0
    2ff0:	beq	3028 <coda_cursor_get_byte_size+0x64>
    2ff4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2ff8:	ldr	r3, [r3, #4]
    2ffc:	cmp	r3, #0
    3000:	ble	3028 <coda_cursor_get_byte_size+0x64>
    3004:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3008:	ldr	r3, [r3, #4]
    300c:	sub	r3, r3, #1
    3010:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3014:	lsl	r3, r3, #4
    3018:	add	r3, r2, r3
    301c:	ldr	r3, [r3, #8]
    3020:	cmp	r3, #0
    3024:	bne	304c <coda_cursor_get_byte_size+0x88>
    3028:	movw	r3, #1670	; 0x686
    302c:	movw	r2, #0
    3030:	movt	r2, #0
    3034:	movw	r1, #0
    3038:	movt	r1, #0
    303c:	mvn	r0, #99	; 0x63
    3040:	bl	0 <coda_set_error>
    3044:	mvn	r3, #0
    3048:	b	30f4 <coda_cursor_get_byte_size+0x130>
    304c:	sub	r3, fp, #36	; 0x24
    3050:	mov	r1, r3
    3054:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3058:	bl	2e90 <coda_cursor_get_bit_size>
    305c:	mov	r3, r0
    3060:	cmp	r3, #0
    3064:	beq	3070 <coda_cursor_get_byte_size+0xac>
    3068:	mvn	r3, #0
    306c:	b	30f4 <coda_cursor_get_byte_size+0x130>
    3070:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3074:	cmp	r2, #0
    3078:	sbcs	r3, r3, #0
    307c:	bge	3098 <coda_cursor_get_byte_size+0xd4>
    3080:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3084:	mvn	r2, #0
    3088:	mvn	r3, #0
    308c:	strd	r2, [r1]
    3090:	mov	r3, #0
    3094:	b	30f4 <coda_cursor_get_byte_size+0x130>
    3098:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    309c:	mov	r2, #0
    30a0:	mov	r3, #0
    30a4:	lsr	r2, r0, #3
    30a8:	orr	r2, r2, r1, lsl #29
    30ac:	asr	r3, r1, #3
    30b0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    30b4:	mov	r8, #7
    30b8:	mov	r9, #0
    30bc:	and	r6, r0, r8
    30c0:	and	r7, r1, r9
    30c4:	orrs	r1, r6, r7
    30c8:	beq	30d8 <coda_cursor_get_byte_size+0x114>
    30cc:	mov	r0, #1
    30d0:	mov	r1, #0
    30d4:	b	30e0 <coda_cursor_get_byte_size+0x11c>
    30d8:	mov	r0, #0
    30dc:	mov	r1, #0
    30e0:	adds	r4, r0, r2
    30e4:	adc	r5, r1, r3
    30e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    30ec:	strd	r4, [r3]
    30f0:	mov	r3, #0
    30f4:	mov	r0, r3
    30f8:	sub	sp, fp, #28
    30fc:	ldrd	r4, [sp]
    3100:	ldrd	r6, [sp, #8]
    3104:	ldrd	r8, [sp, #16]
    3108:	ldr	fp, [sp, #24]
    310c:	add	sp, sp, #28
    3110:	pop	{pc}		; (ldr pc, [sp], #4)

00003114 <coda_cursor_get_num_elements>:
    3114:	str	fp, [sp, #-8]!
    3118:	str	lr, [sp, #4]
    311c:	add	fp, sp, #4
    3120:	sub	sp, sp, #8
    3124:	str	r0, [fp, #-8]
    3128:	str	r1, [fp, #-12]
    312c:	ldr	r3, [fp, #-8]
    3130:	cmp	r3, #0
    3134:	beq	316c <coda_cursor_get_num_elements+0x58>
    3138:	ldr	r3, [fp, #-8]
    313c:	ldr	r3, [r3, #4]
    3140:	cmp	r3, #0
    3144:	ble	316c <coda_cursor_get_num_elements+0x58>
    3148:	ldr	r3, [fp, #-8]
    314c:	ldr	r3, [r3, #4]
    3150:	sub	r3, r3, #1
    3154:	ldr	r2, [fp, #-8]
    3158:	lsl	r3, r3, #4
    315c:	add	r3, r2, r3
    3160:	ldr	r3, [r3, #8]
    3164:	cmp	r3, #0
    3168:	bne	3190 <coda_cursor_get_num_elements+0x7c>
    316c:	movw	r3, #1704	; 0x6a8
    3170:	movw	r2, #0
    3174:	movt	r2, #0
    3178:	movw	r1, #0
    317c:	movt	r1, #0
    3180:	mvn	r0, #99	; 0x63
    3184:	bl	0 <coda_set_error>
    3188:	mvn	r3, #0
    318c:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    3190:	ldr	r3, [fp, #-8]
    3194:	ldr	r3, [r3, #4]
    3198:	sub	r3, r3, #1
    319c:	ldr	r2, [fp, #-8]
    31a0:	lsl	r3, r3, #4
    31a4:	add	r3, r2, r3
    31a8:	ldr	r3, [r3, #8]
    31ac:	ldr	r3, [r3]
    31b0:	cmp	r3, #101	; 0x65
    31b4:	beq	323c <coda_cursor_get_num_elements+0x128>
    31b8:	cmp	r3, #101	; 0x65
    31bc:	bhi	31dc <coda_cursor_get_num_elements+0xc8>
    31c0:	cmp	r3, #1
    31c4:	beq	3214 <coda_cursor_get_num_elements+0x100>
    31c8:	cmp	r3, #0
    31cc:	beq	3200 <coda_cursor_get_num_elements+0xec>
    31d0:	cmp	r3, #100	; 0x64
    31d4:	beq	3228 <coda_cursor_get_num_elements+0x114>
    31d8:	b	32a0 <coda_cursor_get_num_elements+0x18c>
    31dc:	cmp	r3, #103	; 0x67
    31e0:	beq	3264 <coda_cursor_get_num_elements+0x150>
    31e4:	cmp	r3, #103	; 0x67
    31e8:	bcc	3250 <coda_cursor_get_num_elements+0x13c>
    31ec:	cmp	r3, #104	; 0x68
    31f0:	beq	3278 <coda_cursor_get_num_elements+0x164>
    31f4:	cmp	r3, #105	; 0x69
    31f8:	beq	328c <coda_cursor_get_num_elements+0x178>
    31fc:	b	32a0 <coda_cursor_get_num_elements+0x18c>
    3200:	ldr	r1, [fp, #-12]
    3204:	ldr	r0, [fp, #-8]
    3208:	bl	0 <coda_ascii_cursor_get_num_elements>
    320c:	mov	r3, r0
    3210:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    3214:	ldr	r1, [fp, #-12]
    3218:	ldr	r0, [fp, #-8]
    321c:	bl	0 <coda_bin_cursor_get_num_elements>
    3220:	mov	r3, r0
    3224:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    3228:	ldr	r1, [fp, #-12]
    322c:	ldr	r0, [fp, #-8]
    3230:	bl	0 <coda_mem_cursor_get_num_elements>
    3234:	mov	r3, r0
    3238:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    323c:	mov	r1, #0
    3240:	mvn	r0, #10
    3244:	bl	0 <coda_set_error>
    3248:	mvn	r3, #0
    324c:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    3250:	mov	r1, #0
    3254:	mvn	r0, #12
    3258:	bl	0 <coda_set_error>
    325c:	mvn	r3, #0
    3260:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    3264:	ldr	r1, [fp, #-12]
    3268:	ldr	r0, [fp, #-8]
    326c:	bl	0 <coda_cdf_cursor_get_num_elements>
    3270:	mov	r3, r0
    3274:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    3278:	ldr	r1, [fp, #-12]
    327c:	ldr	r0, [fp, #-8]
    3280:	bl	0 <coda_netcdf_cursor_get_num_elements>
    3284:	mov	r3, r0
    3288:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    328c:	ldr	r1, [fp, #-12]
    3290:	ldr	r0, [fp, #-8]
    3294:	bl	0 <coda_grib_cursor_get_num_elements>
    3298:	mov	r3, r0
    329c:	b	32c0 <coda_cursor_get_num_elements+0x1ac>
    32a0:	movw	r3, #0
    32a4:	movt	r3, #0
    32a8:	movw	r2, #1738	; 0x6ca
    32ac:	movw	r1, #0
    32b0:	movt	r1, #0
    32b4:	movw	r0, #0
    32b8:	movt	r0, #0
    32bc:	bl	0 <__assert_fail>
    32c0:	mov	r0, r3
    32c4:	sub	sp, fp, #4
    32c8:	ldr	fp, [sp]
    32cc:	add	sp, sp, #4
    32d0:	pop	{pc}		; (ldr pc, [sp], #4)

000032d4 <coda_cursor_get_product_file>:
    32d4:	str	fp, [sp, #-8]!
    32d8:	str	lr, [sp, #4]
    32dc:	add	fp, sp, #4
    32e0:	sub	sp, sp, #8
    32e4:	str	r0, [fp, #-8]
    32e8:	str	r1, [fp, #-12]
    32ec:	ldr	r3, [fp, #-8]
    32f0:	cmp	r3, #0
    32f4:	beq	332c <coda_cursor_get_product_file+0x58>
    32f8:	ldr	r3, [fp, #-8]
    32fc:	ldr	r3, [r3, #4]
    3300:	cmp	r3, #0
    3304:	ble	332c <coda_cursor_get_product_file+0x58>
    3308:	ldr	r3, [fp, #-8]
    330c:	ldr	r3, [r3, #4]
    3310:	sub	r3, r3, #1
    3314:	ldr	r2, [fp, #-8]
    3318:	lsl	r3, r3, #4
    331c:	add	r3, r2, r3
    3320:	ldr	r3, [r3, #8]
    3324:	cmp	r3, #0
    3328:	bne	3350 <coda_cursor_get_product_file+0x7c>
    332c:	movw	r3, #1753	; 0x6d9
    3330:	movw	r2, #0
    3334:	movt	r2, #0
    3338:	movw	r1, #0
    333c:	movt	r1, #0
    3340:	mvn	r0, #99	; 0x63
    3344:	bl	0 <coda_set_error>
    3348:	mvn	r3, #0
    334c:	b	3364 <coda_cursor_get_product_file+0x90>
    3350:	ldr	r3, [fp, #-8]
    3354:	ldr	r2, [r3]
    3358:	ldr	r3, [fp, #-12]
    335c:	str	r2, [r3]
    3360:	mov	r3, #0
    3364:	mov	r0, r3
    3368:	sub	sp, fp, #4
    336c:	ldr	fp, [sp]
    3370:	add	sp, sp, #4
    3374:	pop	{pc}		; (ldr pc, [sp], #4)

00003378 <coda_cursor_get_depth>:
    3378:	str	fp, [sp, #-8]!
    337c:	str	lr, [sp, #4]
    3380:	add	fp, sp, #4
    3384:	sub	sp, sp, #8
    3388:	str	r0, [fp, #-8]
    338c:	str	r1, [fp, #-12]
    3390:	ldr	r3, [fp, #-8]
    3394:	cmp	r3, #0
    3398:	beq	33d0 <coda_cursor_get_depth+0x58>
    339c:	ldr	r3, [fp, #-8]
    33a0:	ldr	r3, [r3, #4]
    33a4:	cmp	r3, #0
    33a8:	ble	33d0 <coda_cursor_get_depth+0x58>
    33ac:	ldr	r3, [fp, #-8]
    33b0:	ldr	r3, [r3, #4]
    33b4:	sub	r3, r3, #1
    33b8:	ldr	r2, [fp, #-8]
    33bc:	lsl	r3, r3, #4
    33c0:	add	r3, r2, r3
    33c4:	ldr	r3, [r3, #8]
    33c8:	cmp	r3, #0
    33cc:	bne	33f4 <coda_cursor_get_depth+0x7c>
    33d0:	movw	r3, #1775	; 0x6ef
    33d4:	movw	r2, #0
    33d8:	movt	r2, #0
    33dc:	movw	r1, #0
    33e0:	movt	r1, #0
    33e4:	mvn	r0, #99	; 0x63
    33e8:	bl	0 <coda_set_error>
    33ec:	mvn	r3, #0
    33f0:	b	343c <coda_cursor_get_depth+0xc4>
    33f4:	ldr	r3, [fp, #-12]
    33f8:	cmp	r3, #0
    33fc:	bne	3424 <coda_cursor_get_depth+0xac>
    3400:	movw	r3, #1781	; 0x6f5
    3404:	movw	r2, #0
    3408:	movt	r2, #0
    340c:	movw	r1, #0
    3410:	movt	r1, #0
    3414:	mvn	r0, #99	; 0x63
    3418:	bl	0 <coda_set_error>
    341c:	mvn	r3, #0
    3420:	b	343c <coda_cursor_get_depth+0xc4>
    3424:	ldr	r3, [fp, #-8]
    3428:	ldr	r3, [r3, #4]
    342c:	sub	r2, r3, #1
    3430:	ldr	r3, [fp, #-12]
    3434:	str	r2, [r3]
    3438:	mov	r3, #0
    343c:	mov	r0, r3
    3440:	sub	sp, fp, #4
    3444:	ldr	fp, [sp]
    3448:	add	sp, sp, #4
    344c:	pop	{pc}		; (ldr pc, [sp], #4)

00003450 <coda_cursor_get_index>:
    3450:	str	fp, [sp, #-8]!
    3454:	str	lr, [sp, #4]
    3458:	add	fp, sp, #4
    345c:	sub	sp, sp, #8
    3460:	str	r0, [fp, #-8]
    3464:	str	r1, [fp, #-12]
    3468:	ldr	r3, [fp, #-8]
    346c:	cmp	r3, #0
    3470:	beq	34a8 <coda_cursor_get_index+0x58>
    3474:	ldr	r3, [fp, #-8]
    3478:	ldr	r3, [r3, #4]
    347c:	cmp	r3, #1
    3480:	ble	34a8 <coda_cursor_get_index+0x58>
    3484:	ldr	r3, [fp, #-8]
    3488:	ldr	r3, [r3, #4]
    348c:	sub	r3, r3, #1
    3490:	ldr	r2, [fp, #-8]
    3494:	lsl	r3, r3, #4
    3498:	add	r3, r2, r3
    349c:	ldr	r3, [r3, #8]
    34a0:	cmp	r3, #0
    34a4:	bne	34cc <coda_cursor_get_index+0x7c>
    34a8:	movw	r3, #1805	; 0x70d
    34ac:	movw	r2, #0
    34b0:	movt	r2, #0
    34b4:	movw	r1, #0
    34b8:	movt	r1, #0
    34bc:	mvn	r0, #99	; 0x63
    34c0:	bl	0 <coda_set_error>
    34c4:	mvn	r3, #0
    34c8:	b	3524 <coda_cursor_get_index+0xd4>
    34cc:	ldr	r3, [fp, #-12]
    34d0:	cmp	r3, #0
    34d4:	bne	34fc <coda_cursor_get_index+0xac>
    34d8:	movw	r3, #1811	; 0x713
    34dc:	movw	r2, #0
    34e0:	movt	r2, #0
    34e4:	movw	r1, #0
    34e8:	movt	r1, #0
    34ec:	mvn	r0, #99	; 0x63
    34f0:	bl	0 <coda_set_error>
    34f4:	mvn	r3, #0
    34f8:	b	3524 <coda_cursor_get_index+0xd4>
    34fc:	ldr	r3, [fp, #-8]
    3500:	ldr	r3, [r3, #4]
    3504:	sub	r3, r3, #1
    3508:	ldr	r2, [fp, #-8]
    350c:	lsl	r3, r3, #4
    3510:	add	r3, r2, r3
    3514:	ldr	r2, [r3, #12]
    3518:	ldr	r3, [fp, #-12]
    351c:	str	r2, [r3]
    3520:	mov	r3, #0
    3524:	mov	r0, r3
    3528:	sub	sp, fp, #4
    352c:	ldr	fp, [sp]
    3530:	add	sp, sp, #4
    3534:	pop	{pc}		; (ldr pc, [sp], #4)

00003538 <coda_cursor_get_file_bit_offset>:
    3538:	str	fp, [sp, #-8]!
    353c:	str	lr, [sp, #4]
    3540:	add	fp, sp, #4
    3544:	sub	sp, sp, #8
    3548:	str	r0, [fp, #-8]
    354c:	str	r1, [fp, #-12]
    3550:	ldr	r3, [fp, #-8]
    3554:	cmp	r3, #0
    3558:	beq	3590 <coda_cursor_get_file_bit_offset+0x58>
    355c:	ldr	r3, [fp, #-8]
    3560:	ldr	r3, [r3, #4]
    3564:	cmp	r3, #0
    3568:	ble	3590 <coda_cursor_get_file_bit_offset+0x58>
    356c:	ldr	r3, [fp, #-8]
    3570:	ldr	r3, [r3, #4]
    3574:	sub	r3, r3, #1
    3578:	ldr	r2, [fp, #-8]
    357c:	lsl	r3, r3, #4
    3580:	add	r3, r2, r3
    3584:	ldr	r3, [r3, #8]
    3588:	cmp	r3, #0
    358c:	bne	35b4 <coda_cursor_get_file_bit_offset+0x7c>
    3590:	movw	r3, #1833	; 0x729
    3594:	movw	r2, #0
    3598:	movt	r2, #0
    359c:	movw	r1, #0
    35a0:	movt	r1, #0
    35a4:	mvn	r0, #99	; 0x63
    35a8:	bl	0 <coda_set_error>
    35ac:	mvn	r3, #0
    35b0:	b	3660 <coda_cursor_get_file_bit_offset+0x128>
    35b4:	ldr	r3, [fp, #-12]
    35b8:	cmp	r3, #0
    35bc:	bne	35e4 <coda_cursor_get_file_bit_offset+0xac>
    35c0:	movw	r3, #1839	; 0x72f
    35c4:	movw	r2, #0
    35c8:	movt	r2, #0
    35cc:	movw	r1, #0
    35d0:	movt	r1, #0
    35d4:	mvn	r0, #99	; 0x63
    35d8:	bl	0 <coda_set_error>
    35dc:	mvn	r3, #0
    35e0:	b	3660 <coda_cursor_get_file_bit_offset+0x128>
    35e4:	ldr	r3, [fp, #-8]
    35e8:	ldr	r3, [r3, #4]
    35ec:	sub	r3, r3, #1
    35f0:	ldr	r2, [fp, #-8]
    35f4:	lsl	r3, r3, #4
    35f8:	add	r3, r2, r3
    35fc:	ldr	r3, [r3, #8]
    3600:	ldr	r3, [r3]
    3604:	cmp	r3, #1
    3608:	bls	361c <coda_cursor_get_file_bit_offset+0xe4>
    360c:	sub	r3, r3, #100	; 0x64
    3610:	cmp	r3, #5
    3614:	bhi	365c <coda_cursor_get_file_bit_offset+0x124>
    3618:	b	3648 <coda_cursor_get_file_bit_offset+0x110>
    361c:	ldr	r3, [fp, #-8]
    3620:	ldr	r3, [r3, #4]
    3624:	sub	r3, r3, #1
    3628:	ldr	r2, [fp, #-8]
    362c:	add	r3, r3, #1
    3630:	lsl	r3, r3, #4
    3634:	add	r3, r2, r3
    3638:	ldrd	r2, [r3]
    363c:	ldr	r1, [fp, #-12]
    3640:	strd	r2, [r1]
    3644:	b	365c <coda_cursor_get_file_bit_offset+0x124>
    3648:	ldr	r1, [fp, #-12]
    364c:	mvn	r2, #0
    3650:	mvn	r3, #0
    3654:	strd	r2, [r1]
    3658:	nop	{0}
    365c:	mov	r3, #0
    3660:	mov	r0, r3
    3664:	sub	sp, fp, #4
    3668:	ldr	fp, [sp]
    366c:	add	sp, sp, #4
    3670:	pop	{pc}		; (ldr pc, [sp], #4)

00003674 <coda_cursor_get_file_byte_offset>:
    3674:	str	fp, [sp, #-8]!
    3678:	str	lr, [sp, #4]
    367c:	add	fp, sp, #4
    3680:	sub	sp, sp, #8
    3684:	str	r0, [fp, #-8]
    3688:	str	r1, [fp, #-12]
    368c:	ldr	r3, [fp, #-8]
    3690:	cmp	r3, #0
    3694:	beq	36cc <coda_cursor_get_file_byte_offset+0x58>
    3698:	ldr	r3, [fp, #-8]
    369c:	ldr	r3, [r3, #4]
    36a0:	cmp	r3, #0
    36a4:	ble	36cc <coda_cursor_get_file_byte_offset+0x58>
    36a8:	ldr	r3, [fp, #-8]
    36ac:	ldr	r3, [r3, #4]
    36b0:	sub	r3, r3, #1
    36b4:	ldr	r2, [fp, #-8]
    36b8:	lsl	r3, r3, #4
    36bc:	add	r3, r2, r3
    36c0:	ldr	r3, [r3, #8]
    36c4:	cmp	r3, #0
    36c8:	bne	36f0 <coda_cursor_get_file_byte_offset+0x7c>
    36cc:	movw	r3, #1875	; 0x753
    36d0:	movw	r2, #0
    36d4:	movt	r2, #0
    36d8:	movw	r1, #0
    36dc:	movt	r1, #0
    36e0:	mvn	r0, #99	; 0x63
    36e4:	bl	0 <coda_set_error>
    36e8:	mvn	r3, #0
    36ec:	b	37fc <coda_cursor_get_file_byte_offset+0x188>
    36f0:	ldr	r3, [fp, #-12]
    36f4:	cmp	r3, #0
    36f8:	bne	3720 <coda_cursor_get_file_byte_offset+0xac>
    36fc:	movw	r3, #1881	; 0x759
    3700:	movw	r2, #0
    3704:	movt	r2, #0
    3708:	movw	r1, #0
    370c:	movt	r1, #0
    3710:	mvn	r0, #99	; 0x63
    3714:	bl	0 <coda_set_error>
    3718:	mvn	r3, #0
    371c:	b	37fc <coda_cursor_get_file_byte_offset+0x188>
    3720:	ldr	r3, [fp, #-8]
    3724:	ldr	r3, [r3, #4]
    3728:	sub	r3, r3, #1
    372c:	ldr	r2, [fp, #-8]
    3730:	lsl	r3, r3, #4
    3734:	add	r3, r2, r3
    3738:	ldr	r3, [r3, #8]
    373c:	ldr	r3, [r3]
    3740:	cmp	r3, #1
    3744:	bls	3758 <coda_cursor_get_file_byte_offset+0xe4>
    3748:	sub	r3, r3, #100	; 0x64
    374c:	cmp	r3, #5
    3750:	bhi	37f8 <coda_cursor_get_file_byte_offset+0x184>
    3754:	b	37e0 <coda_cursor_get_file_byte_offset+0x16c>
    3758:	ldr	r3, [fp, #-8]
    375c:	ldr	r3, [r3, #4]
    3760:	sub	r3, r3, #1
    3764:	ldr	r2, [fp, #-8]
    3768:	add	r3, r3, #1
    376c:	lsl	r3, r3, #4
    3770:	add	r3, r2, r3
    3774:	ldrd	r2, [r3]
    3778:	mvn	r0, #0
    377c:	mvn	r1, #0
    3780:	cmp	r3, r1
    3784:	cmpeq	r2, r0
    3788:	bne	37a0 <coda_cursor_get_file_byte_offset+0x12c>
    378c:	ldr	r1, [fp, #-12]
    3790:	mvn	r2, #0
    3794:	mvn	r3, #0
    3798:	strd	r2, [r1]
    379c:	b	37f8 <coda_cursor_get_file_byte_offset+0x184>
    37a0:	ldr	r3, [fp, #-8]
    37a4:	ldr	r3, [r3, #4]
    37a8:	sub	r3, r3, #1
    37ac:	ldr	r2, [fp, #-8]
    37b0:	add	r3, r3, #1
    37b4:	lsl	r3, r3, #4
    37b8:	add	r3, r2, r3
    37bc:	ldrd	r0, [r3]
    37c0:	mov	r2, #0
    37c4:	mov	r3, #0
    37c8:	lsr	r2, r0, #3
    37cc:	orr	r2, r2, r1, lsl #29
    37d0:	asr	r3, r1, #3
    37d4:	ldr	r1, [fp, #-12]
    37d8:	strd	r2, [r1]
    37dc:	b	37f8 <coda_cursor_get_file_byte_offset+0x184>
    37e0:	ldr	r1, [fp, #-12]
    37e4:	mvn	r2, #0
    37e8:	mvn	r3, #0
    37ec:	strd	r2, [r1]
    37f0:	mvn	r3, #0
    37f4:	b	37fc <coda_cursor_get_file_byte_offset+0x188>
    37f8:	mov	r3, #0
    37fc:	mov	r0, r3
    3800:	sub	sp, fp, #4
    3804:	ldr	fp, [sp]
    3808:	add	sp, sp, #4
    380c:	pop	{pc}		; (ldr pc, [sp], #4)

00003810 <coda_cursor_get_format>:
    3810:	str	fp, [sp, #-8]!
    3814:	str	lr, [sp, #4]
    3818:	add	fp, sp, #4
    381c:	sub	sp, sp, #16
    3820:	str	r0, [fp, #-16]
    3824:	str	r1, [fp, #-20]	; 0xffffffec
    3828:	ldr	r3, [fp, #-16]
    382c:	cmp	r3, #0
    3830:	beq	3868 <coda_cursor_get_format+0x58>
    3834:	ldr	r3, [fp, #-16]
    3838:	ldr	r3, [r3, #4]
    383c:	cmp	r3, #0
    3840:	ble	3868 <coda_cursor_get_format+0x58>
    3844:	ldr	r3, [fp, #-16]
    3848:	ldr	r3, [r3, #4]
    384c:	sub	r3, r3, #1
    3850:	ldr	r2, [fp, #-16]
    3854:	lsl	r3, r3, #4
    3858:	add	r3, r2, r3
    385c:	ldr	r3, [r3, #8]
    3860:	cmp	r3, #0
    3864:	bne	388c <coda_cursor_get_format+0x7c>
    3868:	movw	r3, #1925	; 0x785
    386c:	movw	r2, #0
    3870:	movt	r2, #0
    3874:	movw	r1, #0
    3878:	movt	r1, #0
    387c:	mvn	r0, #99	; 0x63
    3880:	bl	0 <coda_set_error>
    3884:	mvn	r3, #0
    3888:	b	393c <coda_cursor_get_format+0x12c>
    388c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3890:	cmp	r3, #0
    3894:	bne	38bc <coda_cursor_get_format+0xac>
    3898:	movw	r3, #1930	; 0x78a
    389c:	movw	r2, #0
    38a0:	movt	r2, #0
    38a4:	movw	r1, #0
    38a8:	movt	r1, #0
    38ac:	mvn	r0, #99	; 0x63
    38b0:	bl	0 <coda_set_error>
    38b4:	mvn	r3, #0
    38b8:	b	393c <coda_cursor_get_format+0x12c>
    38bc:	ldr	r3, [fp, #-16]
    38c0:	ldr	r3, [r3, #4]
    38c4:	sub	r3, r3, #1
    38c8:	ldr	r2, [fp, #-16]
    38cc:	lsl	r3, r3, #4
    38d0:	add	r3, r2, r3
    38d4:	ldr	r3, [r3, #8]
    38d8:	ldr	r3, [r3]
    38dc:	cmp	r3, #99	; 0x63
    38e0:	bhi	3904 <coda_cursor_get_format+0xf4>
    38e4:	ldr	r3, [fp, #-16]
    38e8:	ldr	r3, [r3, #4]
    38ec:	sub	r3, r3, #1
    38f0:	ldr	r2, [fp, #-16]
    38f4:	lsl	r3, r3, #4
    38f8:	add	r3, r2, r3
    38fc:	ldr	r3, [r3, #8]
    3900:	b	3924 <coda_cursor_get_format+0x114>
    3904:	ldr	r3, [fp, #-16]
    3908:	ldr	r3, [r3, #4]
    390c:	sub	r3, r3, #1
    3910:	ldr	r2, [fp, #-16]
    3914:	lsl	r3, r3, #4
    3918:	add	r3, r2, r3
    391c:	ldr	r3, [r3, #8]
    3920:	ldr	r3, [r3, #4]
    3924:	str	r3, [fp, #-8]
    3928:	ldr	r3, [fp, #-8]
    392c:	ldr	r2, [r3]
    3930:	ldr	r3, [fp, #-20]	; 0xffffffec
    3934:	str	r2, [r3]
    3938:	mov	r3, #0
    393c:	mov	r0, r3
    3940:	sub	sp, fp, #4
    3944:	ldr	fp, [sp]
    3948:	add	sp, sp, #4
    394c:	pop	{pc}		; (ldr pc, [sp], #4)

00003950 <coda_cursor_get_type_class>:
    3950:	str	fp, [sp, #-8]!
    3954:	str	lr, [sp, #4]
    3958:	add	fp, sp, #4
    395c:	sub	sp, sp, #16
    3960:	str	r0, [fp, #-16]
    3964:	str	r1, [fp, #-20]	; 0xffffffec
    3968:	ldr	r3, [fp, #-16]
    396c:	cmp	r3, #0
    3970:	beq	39a8 <coda_cursor_get_type_class+0x58>
    3974:	ldr	r3, [fp, #-16]
    3978:	ldr	r3, [r3, #4]
    397c:	cmp	r3, #0
    3980:	ble	39a8 <coda_cursor_get_type_class+0x58>
    3984:	ldr	r3, [fp, #-16]
    3988:	ldr	r3, [r3, #4]
    398c:	sub	r3, r3, #1
    3990:	ldr	r2, [fp, #-16]
    3994:	lsl	r3, r3, #4
    3998:	add	r3, r2, r3
    399c:	ldr	r3, [r3, #8]
    39a0:	cmp	r3, #0
    39a4:	bne	39cc <coda_cursor_get_type_class+0x7c>
    39a8:	movw	r3, #1954	; 0x7a2
    39ac:	movw	r2, #0
    39b0:	movt	r2, #0
    39b4:	movw	r1, #0
    39b8:	movt	r1, #0
    39bc:	mvn	r0, #99	; 0x63
    39c0:	bl	0 <coda_set_error>
    39c4:	mvn	r3, #0
    39c8:	b	3a7c <coda_cursor_get_type_class+0x12c>
    39cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    39d0:	cmp	r3, #0
    39d4:	bne	39fc <coda_cursor_get_type_class+0xac>
    39d8:	movw	r3, #1959	; 0x7a7
    39dc:	movw	r2, #0
    39e0:	movt	r2, #0
    39e4:	movw	r1, #0
    39e8:	movt	r1, #0
    39ec:	mvn	r0, #99	; 0x63
    39f0:	bl	0 <coda_set_error>
    39f4:	mvn	r3, #0
    39f8:	b	3a7c <coda_cursor_get_type_class+0x12c>
    39fc:	ldr	r3, [fp, #-16]
    3a00:	ldr	r3, [r3, #4]
    3a04:	sub	r3, r3, #1
    3a08:	ldr	r2, [fp, #-16]
    3a0c:	lsl	r3, r3, #4
    3a10:	add	r3, r2, r3
    3a14:	ldr	r3, [r3, #8]
    3a18:	ldr	r3, [r3]
    3a1c:	cmp	r3, #99	; 0x63
    3a20:	bhi	3a44 <coda_cursor_get_type_class+0xf4>
    3a24:	ldr	r3, [fp, #-16]
    3a28:	ldr	r3, [r3, #4]
    3a2c:	sub	r3, r3, #1
    3a30:	ldr	r2, [fp, #-16]
    3a34:	lsl	r3, r3, #4
    3a38:	add	r3, r2, r3
    3a3c:	ldr	r3, [r3, #8]
    3a40:	b	3a64 <coda_cursor_get_type_class+0x114>
    3a44:	ldr	r3, [fp, #-16]
    3a48:	ldr	r3, [r3, #4]
    3a4c:	sub	r3, r3, #1
    3a50:	ldr	r2, [fp, #-16]
    3a54:	lsl	r3, r3, #4
    3a58:	add	r3, r2, r3
    3a5c:	ldr	r3, [r3, #8]
    3a60:	ldr	r3, [r3, #4]
    3a64:	str	r3, [fp, #-8]
    3a68:	ldr	r3, [fp, #-8]
    3a6c:	ldr	r2, [r3, #8]
    3a70:	ldr	r3, [fp, #-20]	; 0xffffffec
    3a74:	str	r2, [r3]
    3a78:	mov	r3, #0
    3a7c:	mov	r0, r3
    3a80:	sub	sp, fp, #4
    3a84:	ldr	fp, [sp]
    3a88:	add	sp, sp, #4
    3a8c:	pop	{pc}		; (ldr pc, [sp], #4)

00003a90 <coda_cursor_get_read_type>:
    3a90:	str	fp, [sp, #-8]!
    3a94:	str	lr, [sp, #4]
    3a98:	add	fp, sp, #4
    3a9c:	sub	sp, sp, #8
    3aa0:	str	r0, [fp, #-8]
    3aa4:	str	r1, [fp, #-12]
    3aa8:	ldr	r3, [fp, #-8]
    3aac:	cmp	r3, #0
    3ab0:	beq	3ae8 <coda_cursor_get_read_type+0x58>
    3ab4:	ldr	r3, [fp, #-8]
    3ab8:	ldr	r3, [r3, #4]
    3abc:	cmp	r3, #0
    3ac0:	ble	3ae8 <coda_cursor_get_read_type+0x58>
    3ac4:	ldr	r3, [fp, #-8]
    3ac8:	ldr	r3, [r3, #4]
    3acc:	sub	r3, r3, #1
    3ad0:	ldr	r2, [fp, #-8]
    3ad4:	lsl	r3, r3, #4
    3ad8:	add	r3, r2, r3
    3adc:	ldr	r3, [r3, #8]
    3ae0:	cmp	r3, #0
    3ae4:	bne	3b0c <coda_cursor_get_read_type+0x7c>
    3ae8:	movw	r3, #1982	; 0x7be
    3aec:	movw	r2, #0
    3af0:	movt	r2, #0
    3af4:	movw	r1, #0
    3af8:	movt	r1, #0
    3afc:	mvn	r0, #99	; 0x63
    3b00:	bl	0 <coda_set_error>
    3b04:	mvn	r3, #0
    3b08:	b	3b84 <coda_cursor_get_read_type+0xf4>
    3b0c:	ldr	r3, [fp, #-8]
    3b10:	ldr	r3, [r3, #4]
    3b14:	sub	r3, r3, #1
    3b18:	ldr	r2, [fp, #-8]
    3b1c:	lsl	r3, r3, #4
    3b20:	add	r3, r2, r3
    3b24:	ldr	r3, [r3, #8]
    3b28:	ldr	r3, [r3]
    3b2c:	cmp	r3, #99	; 0x63
    3b30:	bhi	3b54 <coda_cursor_get_read_type+0xc4>
    3b34:	ldr	r3, [fp, #-8]
    3b38:	ldr	r3, [r3, #4]
    3b3c:	sub	r3, r3, #1
    3b40:	ldr	r2, [fp, #-8]
    3b44:	lsl	r3, r3, #4
    3b48:	add	r3, r2, r3
    3b4c:	ldr	r3, [r3, #8]
    3b50:	b	3b74 <coda_cursor_get_read_type+0xe4>
    3b54:	ldr	r3, [fp, #-8]
    3b58:	ldr	r3, [r3, #4]
    3b5c:	sub	r3, r3, #1
    3b60:	ldr	r2, [fp, #-8]
    3b64:	lsl	r3, r3, #4
    3b68:	add	r3, r2, r3
    3b6c:	ldr	r3, [r3, #8]
    3b70:	ldr	r3, [r3, #4]
    3b74:	ldr	r1, [fp, #-12]
    3b78:	mov	r0, r3
    3b7c:	bl	0 <coda_type_get_read_type>
    3b80:	mov	r3, r0
    3b84:	mov	r0, r3
    3b88:	sub	sp, fp, #4
    3b8c:	ldr	fp, [sp]
    3b90:	add	sp, sp, #4
    3b94:	pop	{pc}		; (ldr pc, [sp], #4)

00003b98 <coda_cursor_get_special_type>:
    3b98:	str	fp, [sp, #-8]!
    3b9c:	str	lr, [sp, #4]
    3ba0:	add	fp, sp, #4
    3ba4:	sub	sp, sp, #8
    3ba8:	str	r0, [fp, #-8]
    3bac:	str	r1, [fp, #-12]
    3bb0:	ldr	r3, [fp, #-8]
    3bb4:	cmp	r3, #0
    3bb8:	beq	3bf0 <coda_cursor_get_special_type+0x58>
    3bbc:	ldr	r3, [fp, #-8]
    3bc0:	ldr	r3, [r3, #4]
    3bc4:	cmp	r3, #0
    3bc8:	ble	3bf0 <coda_cursor_get_special_type+0x58>
    3bcc:	ldr	r3, [fp, #-8]
    3bd0:	ldr	r3, [r3, #4]
    3bd4:	sub	r3, r3, #1
    3bd8:	ldr	r2, [fp, #-8]
    3bdc:	lsl	r3, r3, #4
    3be0:	add	r3, r2, r3
    3be4:	ldr	r3, [r3, #8]
    3be8:	cmp	r3, #0
    3bec:	bne	3c14 <coda_cursor_get_special_type+0x7c>
    3bf0:	movw	r3, #2003	; 0x7d3
    3bf4:	movw	r2, #0
    3bf8:	movt	r2, #0
    3bfc:	movw	r1, #0
    3c00:	movt	r1, #0
    3c04:	mvn	r0, #99	; 0x63
    3c08:	bl	0 <coda_set_error>
    3c0c:	mvn	r3, #0
    3c10:	b	3cbc <coda_cursor_get_special_type+0x124>
    3c14:	ldr	r3, [fp, #-12]
    3c18:	cmp	r3, #0
    3c1c:	bne	3c44 <coda_cursor_get_special_type+0xac>
    3c20:	movw	r3, #2008	; 0x7d8
    3c24:	movw	r2, #0
    3c28:	movt	r2, #0
    3c2c:	movw	r1, #0
    3c30:	movt	r1, #0
    3c34:	mvn	r0, #99	; 0x63
    3c38:	bl	0 <coda_set_error>
    3c3c:	mvn	r3, #0
    3c40:	b	3cbc <coda_cursor_get_special_type+0x124>
    3c44:	ldr	r3, [fp, #-8]
    3c48:	ldr	r3, [r3, #4]
    3c4c:	sub	r3, r3, #1
    3c50:	ldr	r2, [fp, #-8]
    3c54:	lsl	r3, r3, #4
    3c58:	add	r3, r2, r3
    3c5c:	ldr	r3, [r3, #8]
    3c60:	ldr	r3, [r3]
    3c64:	cmp	r3, #99	; 0x63
    3c68:	bhi	3c8c <coda_cursor_get_special_type+0xf4>
    3c6c:	ldr	r3, [fp, #-8]
    3c70:	ldr	r3, [r3, #4]
    3c74:	sub	r3, r3, #1
    3c78:	ldr	r2, [fp, #-8]
    3c7c:	lsl	r3, r3, #4
    3c80:	add	r3, r2, r3
    3c84:	ldr	r3, [r3, #8]
    3c88:	b	3cac <coda_cursor_get_special_type+0x114>
    3c8c:	ldr	r3, [fp, #-8]
    3c90:	ldr	r3, [r3, #4]
    3c94:	sub	r3, r3, #1
    3c98:	ldr	r2, [fp, #-8]
    3c9c:	lsl	r3, r3, #4
    3ca0:	add	r3, r2, r3
    3ca4:	ldr	r3, [r3, #8]
    3ca8:	ldr	r3, [r3, #4]
    3cac:	ldr	r1, [fp, #-12]
    3cb0:	mov	r0, r3
    3cb4:	bl	0 <coda_type_get_special_type>
    3cb8:	mov	r3, r0
    3cbc:	mov	r0, r3
    3cc0:	sub	sp, fp, #4
    3cc4:	ldr	fp, [sp]
    3cc8:	add	sp, sp, #4
    3ccc:	pop	{pc}		; (ldr pc, [sp], #4)

00003cd0 <coda_cursor_get_type>:
    3cd0:	str	fp, [sp, #-8]!
    3cd4:	str	lr, [sp, #4]
    3cd8:	add	fp, sp, #4
    3cdc:	sub	sp, sp, #8
    3ce0:	str	r0, [fp, #-8]
    3ce4:	str	r1, [fp, #-12]
    3ce8:	ldr	r3, [fp, #-8]
    3cec:	cmp	r3, #0
    3cf0:	beq	3d28 <coda_cursor_get_type+0x58>
    3cf4:	ldr	r3, [fp, #-8]
    3cf8:	ldr	r3, [r3, #4]
    3cfc:	cmp	r3, #0
    3d00:	ble	3d28 <coda_cursor_get_type+0x58>
    3d04:	ldr	r3, [fp, #-8]
    3d08:	ldr	r3, [r3, #4]
    3d0c:	sub	r3, r3, #1
    3d10:	ldr	r2, [fp, #-8]
    3d14:	lsl	r3, r3, #4
    3d18:	add	r3, r2, r3
    3d1c:	ldr	r3, [r3, #8]
    3d20:	cmp	r3, #0
    3d24:	bne	3d4c <coda_cursor_get_type+0x7c>
    3d28:	movw	r3, #2028	; 0x7ec
    3d2c:	movw	r2, #0
    3d30:	movt	r2, #0
    3d34:	movw	r1, #0
    3d38:	movt	r1, #0
    3d3c:	mvn	r0, #99	; 0x63
    3d40:	bl	0 <coda_set_error>
    3d44:	mvn	r3, #0
    3d48:	b	3df0 <coda_cursor_get_type+0x120>
    3d4c:	ldr	r3, [fp, #-12]
    3d50:	cmp	r3, #0
    3d54:	bne	3d7c <coda_cursor_get_type+0xac>
    3d58:	movw	r3, #2033	; 0x7f1
    3d5c:	movw	r2, #0
    3d60:	movt	r2, #0
    3d64:	movw	r1, #0
    3d68:	movt	r1, #0
    3d6c:	mvn	r0, #99	; 0x63
    3d70:	bl	0 <coda_set_error>
    3d74:	mvn	r3, #0
    3d78:	b	3df0 <coda_cursor_get_type+0x120>
    3d7c:	ldr	r3, [fp, #-8]
    3d80:	ldr	r3, [r3, #4]
    3d84:	sub	r3, r3, #1
    3d88:	ldr	r2, [fp, #-8]
    3d8c:	lsl	r3, r3, #4
    3d90:	add	r3, r2, r3
    3d94:	ldr	r3, [r3, #8]
    3d98:	ldr	r3, [r3]
    3d9c:	cmp	r3, #99	; 0x63
    3da0:	bhi	3dc4 <coda_cursor_get_type+0xf4>
    3da4:	ldr	r3, [fp, #-8]
    3da8:	ldr	r3, [r3, #4]
    3dac:	sub	r3, r3, #1
    3db0:	ldr	r2, [fp, #-8]
    3db4:	lsl	r3, r3, #4
    3db8:	add	r3, r2, r3
    3dbc:	ldr	r3, [r3, #8]
    3dc0:	b	3de4 <coda_cursor_get_type+0x114>
    3dc4:	ldr	r3, [fp, #-8]
    3dc8:	ldr	r3, [r3, #4]
    3dcc:	sub	r3, r3, #1
    3dd0:	ldr	r2, [fp, #-8]
    3dd4:	lsl	r3, r3, #4
    3dd8:	add	r3, r2, r3
    3ddc:	ldr	r3, [r3, #8]
    3de0:	ldr	r3, [r3, #4]
    3de4:	ldr	r2, [fp, #-12]
    3de8:	str	r3, [r2]
    3dec:	mov	r3, #0
    3df0:	mov	r0, r3
    3df4:	sub	sp, fp, #4
    3df8:	ldr	fp, [sp]
    3dfc:	add	sp, sp, #4
    3e00:	pop	{pc}		; (ldr pc, [sp], #4)

00003e04 <coda_cursor_get_record_field_index_from_name>:
    3e04:	str	fp, [sp, #-8]!
    3e08:	str	lr, [sp, #4]
    3e0c:	add	fp, sp, #4
    3e10:	sub	sp, sp, #24
    3e14:	str	r0, [fp, #-16]
    3e18:	str	r1, [fp, #-20]	; 0xffffffec
    3e1c:	str	r2, [fp, #-24]	; 0xffffffe8
    3e20:	ldr	r3, [fp, #-16]
    3e24:	cmp	r3, #0
    3e28:	beq	3e70 <coda_cursor_get_record_field_index_from_name+0x6c>
    3e2c:	ldr	r3, [fp, #-16]
    3e30:	ldr	r3, [r3, #4]
    3e34:	cmp	r3, #0
    3e38:	ble	3e70 <coda_cursor_get_record_field_index_from_name+0x6c>
    3e3c:	ldr	r3, [fp, #-16]
    3e40:	ldr	r3, [r3]
    3e44:	cmp	r3, #0
    3e48:	beq	3e70 <coda_cursor_get_record_field_index_from_name+0x6c>
    3e4c:	ldr	r3, [fp, #-16]
    3e50:	ldr	r3, [r3, #4]
    3e54:	sub	r3, r3, #1
    3e58:	ldr	r2, [fp, #-16]
    3e5c:	lsl	r3, r3, #4
    3e60:	add	r3, r2, r3
    3e64:	ldr	r3, [r3, #8]
    3e68:	cmp	r3, #0
    3e6c:	bne	3e94 <coda_cursor_get_record_field_index_from_name+0x90>
    3e70:	movw	r3, #2057	; 0x809
    3e74:	movw	r2, #0
    3e78:	movt	r2, #0
    3e7c:	movw	r1, #0
    3e80:	movt	r1, #0
    3e84:	mvn	r0, #99	; 0x63
    3e88:	bl	0 <coda_set_error>
    3e8c:	mvn	r3, #0
    3e90:	b	3f14 <coda_cursor_get_record_field_index_from_name+0x110>
    3e94:	ldr	r3, [fp, #-16]
    3e98:	ldr	r3, [r3, #4]
    3e9c:	sub	r3, r3, #1
    3ea0:	ldr	r2, [fp, #-16]
    3ea4:	lsl	r3, r3, #4
    3ea8:	add	r3, r2, r3
    3eac:	ldr	r3, [r3, #8]
    3eb0:	ldr	r3, [r3]
    3eb4:	cmp	r3, #99	; 0x63
    3eb8:	bhi	3edc <coda_cursor_get_record_field_index_from_name+0xd8>
    3ebc:	ldr	r3, [fp, #-16]
    3ec0:	ldr	r3, [r3, #4]
    3ec4:	sub	r3, r3, #1
    3ec8:	ldr	r2, [fp, #-16]
    3ecc:	lsl	r3, r3, #4
    3ed0:	add	r3, r2, r3
    3ed4:	ldr	r3, [r3, #8]
    3ed8:	b	3efc <coda_cursor_get_record_field_index_from_name+0xf8>
    3edc:	ldr	r3, [fp, #-16]
    3ee0:	ldr	r3, [r3, #4]
    3ee4:	sub	r3, r3, #1
    3ee8:	ldr	r2, [fp, #-16]
    3eec:	lsl	r3, r3, #4
    3ef0:	add	r3, r2, r3
    3ef4:	ldr	r3, [r3, #8]
    3ef8:	ldr	r3, [r3, #4]
    3efc:	str	r3, [fp, #-8]
    3f00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f04:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f08:	ldr	r0, [fp, #-8]
    3f0c:	bl	0 <coda_type_get_record_field_index_from_name>
    3f10:	mov	r3, r0
    3f14:	mov	r0, r3
    3f18:	sub	sp, fp, #4
    3f1c:	ldr	fp, [sp]
    3f20:	add	sp, sp, #4
    3f24:	pop	{pc}		; (ldr pc, [sp], #4)

00003f28 <coda_cursor_get_record_field_available_status>:
    3f28:	str	fp, [sp, #-8]!
    3f2c:	str	lr, [sp, #4]
    3f30:	add	fp, sp, #4
    3f34:	sub	sp, sp, #24
    3f38:	str	r0, [fp, #-16]
    3f3c:	str	r1, [fp, #-20]	; 0xffffffec
    3f40:	str	r2, [fp, #-24]	; 0xffffffe8
    3f44:	ldr	r3, [fp, #-16]
    3f48:	cmp	r3, #0
    3f4c:	beq	3f94 <coda_cursor_get_record_field_available_status+0x6c>
    3f50:	ldr	r3, [fp, #-16]
    3f54:	ldr	r3, [r3, #4]
    3f58:	cmp	r3, #0
    3f5c:	ble	3f94 <coda_cursor_get_record_field_available_status+0x6c>
    3f60:	ldr	r3, [fp, #-16]
    3f64:	ldr	r3, [r3]
    3f68:	cmp	r3, #0
    3f6c:	beq	3f94 <coda_cursor_get_record_field_available_status+0x6c>
    3f70:	ldr	r3, [fp, #-16]
    3f74:	ldr	r3, [r3, #4]
    3f78:	sub	r3, r3, #1
    3f7c:	ldr	r2, [fp, #-16]
    3f80:	lsl	r3, r3, #4
    3f84:	add	r3, r2, r3
    3f88:	ldr	r3, [r3, #8]
    3f8c:	cmp	r3, #0
    3f90:	bne	3fb8 <coda_cursor_get_record_field_available_status+0x90>
    3f94:	movw	r3, #2085	; 0x825
    3f98:	movw	r2, #0
    3f9c:	movt	r2, #0
    3fa0:	movw	r1, #0
    3fa4:	movt	r1, #0
    3fa8:	mvn	r0, #99	; 0x63
    3fac:	bl	0 <coda_set_error>
    3fb0:	mvn	r3, #0
    3fb4:	b	4148 <coda_cursor_get_record_field_available_status+0x220>
    3fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3fbc:	cmp	r3, #0
    3fc0:	bne	3fe8 <coda_cursor_get_record_field_available_status+0xc0>
    3fc4:	movw	r3, #2090	; 0x82a
    3fc8:	movw	r2, #0
    3fcc:	movt	r2, #0
    3fd0:	movw	r1, #0
    3fd4:	movt	r1, #0
    3fd8:	mvn	r0, #99	; 0x63
    3fdc:	bl	0 <coda_set_error>
    3fe0:	mvn	r3, #0
    3fe4:	b	4148 <coda_cursor_get_record_field_available_status+0x220>
    3fe8:	ldr	r3, [fp, #-16]
    3fec:	ldr	r3, [r3, #4]
    3ff0:	sub	r3, r3, #1
    3ff4:	ldr	r2, [fp, #-16]
    3ff8:	lsl	r3, r3, #4
    3ffc:	add	r3, r2, r3
    4000:	ldr	r3, [r3, #8]
    4004:	ldr	r3, [r3]
    4008:	cmp	r3, #99	; 0x63
    400c:	bhi	4030 <coda_cursor_get_record_field_available_status+0x108>
    4010:	ldr	r3, [fp, #-16]
    4014:	ldr	r3, [r3, #4]
    4018:	sub	r3, r3, #1
    401c:	ldr	r2, [fp, #-16]
    4020:	lsl	r3, r3, #4
    4024:	add	r3, r2, r3
    4028:	ldr	r3, [r3, #8]
    402c:	b	4050 <coda_cursor_get_record_field_available_status+0x128>
    4030:	ldr	r3, [fp, #-16]
    4034:	ldr	r3, [r3, #4]
    4038:	sub	r3, r3, #1
    403c:	ldr	r2, [fp, #-16]
    4040:	lsl	r3, r3, #4
    4044:	add	r3, r2, r3
    4048:	ldr	r3, [r3, #8]
    404c:	ldr	r3, [r3, #4]
    4050:	str	r3, [fp, #-8]
    4054:	ldr	r3, [fp, #-8]
    4058:	ldr	r3, [r3, #8]
    405c:	cmp	r3, #0
    4060:	beq	4094 <coda_cursor_get_record_field_available_status+0x16c>
    4064:	ldr	r3, [fp, #-8]
    4068:	ldr	r3, [r3, #8]
    406c:	mov	r0, r3
    4070:	bl	0 <coda_type_get_class_name>
    4074:	mov	r3, r0
    4078:	mov	r2, r3
    407c:	movw	r1, #0
    4080:	movt	r1, #0
    4084:	mvn	r0, #104	; 0x68
    4088:	bl	0 <coda_set_error>
    408c:	mvn	r3, #0
    4090:	b	4148 <coda_cursor_get_record_field_available_status+0x220>
    4094:	ldr	r3, [fp, #-16]
    4098:	ldr	r3, [r3, #4]
    409c:	sub	r3, r3, #1
    40a0:	ldr	r2, [fp, #-16]
    40a4:	lsl	r3, r3, #4
    40a8:	add	r3, r2, r3
    40ac:	ldr	r3, [r3, #8]
    40b0:	ldr	r3, [r3]
    40b4:	cmp	r3, #100	; 0x64
    40b8:	beq	40fc <coda_cursor_get_record_field_available_status+0x1d4>
    40bc:	cmp	r3, #100	; 0x64
    40c0:	bhi	40d0 <coda_cursor_get_record_field_available_status+0x1a8>
    40c4:	cmp	r3, #1
    40c8:	bhi	4144 <coda_cursor_get_record_field_available_status+0x21c>
    40cc:	b	40e4 <coda_cursor_get_record_field_available_status+0x1bc>
    40d0:	cmp	r3, #104	; 0x68
    40d4:	bls	4114 <coda_cursor_get_record_field_available_status+0x1ec>
    40d8:	cmp	r3, #105	; 0x69
    40dc:	beq	4124 <coda_cursor_get_record_field_available_status+0x1fc>
    40e0:	b	4144 <coda_cursor_get_record_field_available_status+0x21c>
    40e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    40e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    40ec:	ldr	r0, [fp, #-16]
    40f0:	bl	0 <coda_ascbin_cursor_get_record_field_available_status>
    40f4:	mov	r3, r0
    40f8:	b	4148 <coda_cursor_get_record_field_available_status+0x220>
    40fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4100:	ldr	r1, [fp, #-20]	; 0xffffffec
    4104:	ldr	r0, [fp, #-16]
    4108:	bl	0 <coda_mem_cursor_get_record_field_available_status>
    410c:	mov	r3, r0
    4110:	b	4148 <coda_cursor_get_record_field_available_status+0x220>
    4114:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4118:	mov	r2, #1
    411c:	str	r2, [r3]
    4120:	b	4144 <coda_cursor_get_record_field_available_status+0x21c>
    4124:	movw	r3, #0
    4128:	movt	r3, #0
    412c:	movw	r2, #2117	; 0x845
    4130:	movw	r1, #0
    4134:	movt	r1, #0
    4138:	movw	r0, #0
    413c:	movt	r0, #0
    4140:	bl	0 <__assert_fail>
    4144:	mov	r3, #0
    4148:	mov	r0, r3
    414c:	sub	sp, fp, #4
    4150:	ldr	fp, [sp]
    4154:	add	sp, sp, #4
    4158:	pop	{pc}		; (ldr pc, [sp], #4)

0000415c <coda_cursor_get_available_union_field_index>:
    415c:	str	fp, [sp, #-8]!
    4160:	str	lr, [sp, #4]
    4164:	add	fp, sp, #4
    4168:	sub	sp, sp, #16
    416c:	str	r0, [fp, #-16]
    4170:	str	r1, [fp, #-20]	; 0xffffffec
    4174:	ldr	r3, [fp, #-16]
    4178:	cmp	r3, #0
    417c:	beq	41c4 <coda_cursor_get_available_union_field_index+0x68>
    4180:	ldr	r3, [fp, #-16]
    4184:	ldr	r3, [r3, #4]
    4188:	cmp	r3, #0
    418c:	ble	41c4 <coda_cursor_get_available_union_field_index+0x68>
    4190:	ldr	r3, [fp, #-16]
    4194:	ldr	r3, [r3]
    4198:	cmp	r3, #0
    419c:	beq	41c4 <coda_cursor_get_available_union_field_index+0x68>
    41a0:	ldr	r3, [fp, #-16]
    41a4:	ldr	r3, [r3, #4]
    41a8:	sub	r3, r3, #1
    41ac:	ldr	r2, [fp, #-16]
    41b0:	lsl	r3, r3, #4
    41b4:	add	r3, r2, r3
    41b8:	ldr	r3, [r3, #8]
    41bc:	cmp	r3, #0
    41c0:	bne	41e8 <coda_cursor_get_available_union_field_index+0x8c>
    41c4:	movw	r3, #2140	; 0x85c
    41c8:	movw	r2, #0
    41cc:	movt	r2, #0
    41d0:	movw	r1, #0
    41d4:	movt	r1, #0
    41d8:	mvn	r0, #99	; 0x63
    41dc:	bl	0 <coda_set_error>
    41e0:	mvn	r3, #0
    41e4:	b	4354 <coda_cursor_get_available_union_field_index+0x1f8>
    41e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    41ec:	cmp	r3, #0
    41f0:	bne	4218 <coda_cursor_get_available_union_field_index+0xbc>
    41f4:	movw	r3, #2145	; 0x861
    41f8:	movw	r2, #0
    41fc:	movt	r2, #0
    4200:	movw	r1, #0
    4204:	movt	r1, #0
    4208:	mvn	r0, #99	; 0x63
    420c:	bl	0 <coda_set_error>
    4210:	mvn	r3, #0
    4214:	b	4354 <coda_cursor_get_available_union_field_index+0x1f8>
    4218:	ldr	r3, [fp, #-16]
    421c:	ldr	r3, [r3, #4]
    4220:	sub	r3, r3, #1
    4224:	ldr	r2, [fp, #-16]
    4228:	lsl	r3, r3, #4
    422c:	add	r3, r2, r3
    4230:	ldr	r3, [r3, #8]
    4234:	ldr	r3, [r3]
    4238:	cmp	r3, #99	; 0x63
    423c:	bhi	4260 <coda_cursor_get_available_union_field_index+0x104>
    4240:	ldr	r3, [fp, #-16]
    4244:	ldr	r3, [r3, #4]
    4248:	sub	r3, r3, #1
    424c:	ldr	r2, [fp, #-16]
    4250:	lsl	r3, r3, #4
    4254:	add	r3, r2, r3
    4258:	ldr	r3, [r3, #8]
    425c:	b	4280 <coda_cursor_get_available_union_field_index+0x124>
    4260:	ldr	r3, [fp, #-16]
    4264:	ldr	r3, [r3, #4]
    4268:	sub	r3, r3, #1
    426c:	ldr	r2, [fp, #-16]
    4270:	lsl	r3, r3, #4
    4274:	add	r3, r2, r3
    4278:	ldr	r3, [r3, #8]
    427c:	ldr	r3, [r3, #4]
    4280:	str	r3, [fp, #-8]
    4284:	ldr	r3, [fp, #-8]
    4288:	ldr	r3, [r3, #8]
    428c:	cmp	r3, #0
    4290:	beq	42c4 <coda_cursor_get_available_union_field_index+0x168>
    4294:	ldr	r3, [fp, #-8]
    4298:	ldr	r3, [r3, #8]
    429c:	mov	r0, r3
    42a0:	bl	0 <coda_type_get_class_name>
    42a4:	mov	r3, r0
    42a8:	mov	r2, r3
    42ac:	movw	r1, #0
    42b0:	movt	r1, #0
    42b4:	mvn	r0, #104	; 0x68
    42b8:	bl	0 <coda_set_error>
    42bc:	mvn	r3, #0
    42c0:	b	4354 <coda_cursor_get_available_union_field_index+0x1f8>
    42c4:	ldr	r3, [fp, #-16]
    42c8:	ldr	r3, [r3, #4]
    42cc:	sub	r3, r3, #1
    42d0:	ldr	r2, [fp, #-16]
    42d4:	lsl	r3, r3, #4
    42d8:	add	r3, r2, r3
    42dc:	ldr	r3, [r3, #8]
    42e0:	ldr	r3, [r3]
    42e4:	cmp	r3, #100	; 0x64
    42e8:	beq	4320 <coda_cursor_get_available_union_field_index+0x1c4>
    42ec:	cmp	r3, #100	; 0x64
    42f0:	bhi	4300 <coda_cursor_get_available_union_field_index+0x1a4>
    42f4:	cmp	r3, #1
    42f8:	bhi	4334 <coda_cursor_get_available_union_field_index+0x1d8>
    42fc:	b	430c <coda_cursor_get_available_union_field_index+0x1b0>
    4300:	cmp	r3, #105	; 0x69
    4304:	bhi	4334 <coda_cursor_get_available_union_field_index+0x1d8>
    4308:	b	4334 <coda_cursor_get_available_union_field_index+0x1d8>
    430c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4310:	ldr	r0, [fp, #-16]
    4314:	bl	0 <coda_ascbin_cursor_get_available_union_field_index>
    4318:	mov	r3, r0
    431c:	b	4354 <coda_cursor_get_available_union_field_index+0x1f8>
    4320:	ldr	r1, [fp, #-20]	; 0xffffffec
    4324:	ldr	r0, [fp, #-16]
    4328:	bl	0 <coda_mem_cursor_get_available_union_field_index>
    432c:	mov	r3, r0
    4330:	b	4354 <coda_cursor_get_available_union_field_index+0x1f8>
    4334:	movw	r3, #0
    4338:	movt	r3, #0
    433c:	movw	r2, #2172	; 0x87c
    4340:	movw	r1, #0
    4344:	movt	r1, #0
    4348:	movw	r0, #0
    434c:	movt	r0, #0
    4350:	bl	0 <__assert_fail>
    4354:	mov	r0, r3
    4358:	sub	sp, fp, #4
    435c:	ldr	fp, [sp]
    4360:	add	sp, sp, #4
    4364:	pop	{pc}		; (ldr pc, [sp], #4)

00004368 <coda_cursor_get_array_dim>:
    4368:	str	fp, [sp, #-8]!
    436c:	str	lr, [sp, #4]
    4370:	add	fp, sp, #4
    4374:	sub	sp, sp, #24
    4378:	str	r0, [fp, #-16]
    437c:	str	r1, [fp, #-20]	; 0xffffffec
    4380:	str	r2, [fp, #-24]	; 0xffffffe8
    4384:	ldr	r3, [fp, #-16]
    4388:	cmp	r3, #0
    438c:	beq	43c4 <coda_cursor_get_array_dim+0x5c>
    4390:	ldr	r3, [fp, #-16]
    4394:	ldr	r3, [r3, #4]
    4398:	cmp	r3, #0
    439c:	ble	43c4 <coda_cursor_get_array_dim+0x5c>
    43a0:	ldr	r3, [fp, #-16]
    43a4:	ldr	r3, [r3, #4]
    43a8:	sub	r3, r3, #1
    43ac:	ldr	r2, [fp, #-16]
    43b0:	lsl	r3, r3, #4
    43b4:	add	r3, r2, r3
    43b8:	ldr	r3, [r3, #8]
    43bc:	cmp	r3, #0
    43c0:	bne	43e8 <coda_cursor_get_array_dim+0x80>
    43c4:	movw	r3, #2197	; 0x895
    43c8:	movw	r2, #0
    43cc:	movt	r2, #0
    43d0:	movw	r1, #0
    43d4:	movt	r1, #0
    43d8:	mvn	r0, #99	; 0x63
    43dc:	bl	0 <coda_set_error>
    43e0:	mvn	r3, #0
    43e4:	b	45f8 <coda_cursor_get_array_dim+0x290>
    43e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    43ec:	cmp	r3, #0
    43f0:	beq	4400 <coda_cursor_get_array_dim+0x98>
    43f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    43f8:	cmp	r3, #0
    43fc:	bne	4424 <coda_cursor_get_array_dim+0xbc>
    4400:	movw	r3, #2202	; 0x89a
    4404:	movw	r2, #0
    4408:	movt	r2, #0
    440c:	movw	r1, #0
    4410:	movt	r1, #0
    4414:	mvn	r0, #99	; 0x63
    4418:	bl	0 <coda_set_error>
    441c:	mvn	r3, #0
    4420:	b	45f8 <coda_cursor_get_array_dim+0x290>
    4424:	ldr	r3, [fp, #-16]
    4428:	ldr	r3, [r3, #4]
    442c:	sub	r3, r3, #1
    4430:	ldr	r2, [fp, #-16]
    4434:	lsl	r3, r3, #4
    4438:	add	r3, r2, r3
    443c:	ldr	r3, [r3, #8]
    4440:	ldr	r3, [r3]
    4444:	cmp	r3, #99	; 0x63
    4448:	bhi	446c <coda_cursor_get_array_dim+0x104>
    444c:	ldr	r3, [fp, #-16]
    4450:	ldr	r3, [r3, #4]
    4454:	sub	r3, r3, #1
    4458:	ldr	r2, [fp, #-16]
    445c:	lsl	r3, r3, #4
    4460:	add	r3, r2, r3
    4464:	ldr	r3, [r3, #8]
    4468:	b	448c <coda_cursor_get_array_dim+0x124>
    446c:	ldr	r3, [fp, #-16]
    4470:	ldr	r3, [r3, #4]
    4474:	sub	r3, r3, #1
    4478:	ldr	r2, [fp, #-16]
    447c:	lsl	r3, r3, #4
    4480:	add	r3, r2, r3
    4484:	ldr	r3, [r3, #8]
    4488:	ldr	r3, [r3, #4]
    448c:	str	r3, [fp, #-8]
    4490:	ldr	r3, [fp, #-8]
    4494:	ldr	r3, [r3, #8]
    4498:	cmp	r3, #1
    449c:	beq	44d0 <coda_cursor_get_array_dim+0x168>
    44a0:	ldr	r3, [fp, #-8]
    44a4:	ldr	r3, [r3, #8]
    44a8:	mov	r0, r3
    44ac:	bl	0 <coda_type_get_class_name>
    44b0:	mov	r3, r0
    44b4:	mov	r2, r3
    44b8:	movw	r1, #0
    44bc:	movt	r1, #0
    44c0:	mvn	r0, #104	; 0x68
    44c4:	bl	0 <coda_set_error>
    44c8:	mvn	r3, #0
    44cc:	b	45f8 <coda_cursor_get_array_dim+0x290>
    44d0:	ldr	r3, [fp, #-16]
    44d4:	ldr	r3, [r3, #4]
    44d8:	sub	r3, r3, #1
    44dc:	ldr	r2, [fp, #-16]
    44e0:	lsl	r3, r3, #4
    44e4:	add	r3, r2, r3
    44e8:	ldr	r3, [r3, #8]
    44ec:	ldr	r3, [r3]
    44f0:	cmp	r3, #101	; 0x65
    44f4:	beq	4568 <coda_cursor_get_array_dim+0x200>
    44f8:	cmp	r3, #101	; 0x65
    44fc:	bhi	4514 <coda_cursor_get_array_dim+0x1ac>
    4500:	cmp	r3, #1
    4504:	bls	4538 <coda_cursor_get_array_dim+0x1d0>
    4508:	cmp	r3, #100	; 0x64
    450c:	beq	4550 <coda_cursor_get_array_dim+0x1e8>
    4510:	b	45d8 <coda_cursor_get_array_dim+0x270>
    4514:	cmp	r3, #103	; 0x67
    4518:	beq	4590 <coda_cursor_get_array_dim+0x228>
    451c:	cmp	r3, #103	; 0x67
    4520:	bcc	457c <coda_cursor_get_array_dim+0x214>
    4524:	cmp	r3, #104	; 0x68
    4528:	beq	45a8 <coda_cursor_get_array_dim+0x240>
    452c:	cmp	r3, #105	; 0x69
    4530:	beq	45c0 <coda_cursor_get_array_dim+0x258>
    4534:	b	45d8 <coda_cursor_get_array_dim+0x270>
    4538:	ldr	r2, [fp, #-24]	; 0xffffffe8
    453c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4540:	ldr	r0, [fp, #-16]
    4544:	bl	0 <coda_ascbin_cursor_get_array_dim>
    4548:	mov	r3, r0
    454c:	b	45f8 <coda_cursor_get_array_dim+0x290>
    4550:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4554:	ldr	r1, [fp, #-20]	; 0xffffffec
    4558:	ldr	r0, [fp, #-16]
    455c:	bl	0 <coda_mem_cursor_get_array_dim>
    4560:	mov	r3, r0
    4564:	b	45f8 <coda_cursor_get_array_dim+0x290>
    4568:	mov	r1, #0
    456c:	mvn	r0, #10
    4570:	bl	0 <coda_set_error>
    4574:	mvn	r3, #0
    4578:	b	45f8 <coda_cursor_get_array_dim+0x290>
    457c:	mov	r1, #0
    4580:	mvn	r0, #12
    4584:	bl	0 <coda_set_error>
    4588:	mvn	r3, #0
    458c:	b	45f8 <coda_cursor_get_array_dim+0x290>
    4590:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4594:	ldr	r1, [fp, #-20]	; 0xffffffec
    4598:	ldr	r0, [fp, #-16]
    459c:	bl	0 <coda_cdf_cursor_get_array_dim>
    45a0:	mov	r3, r0
    45a4:	b	45f8 <coda_cursor_get_array_dim+0x290>
    45a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    45ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    45b0:	ldr	r0, [fp, #-16]
    45b4:	bl	0 <coda_netcdf_cursor_get_array_dim>
    45b8:	mov	r3, r0
    45bc:	b	45f8 <coda_cursor_get_array_dim+0x290>
    45c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    45c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    45c8:	ldr	r0, [fp, #-16]
    45cc:	bl	0 <coda_grib_cursor_get_array_dim>
    45d0:	mov	r3, r0
    45d4:	b	45f8 <coda_cursor_get_array_dim+0x290>
    45d8:	movw	r3, #0
    45dc:	movt	r3, #0
    45e0:	movw	r2, #2243	; 0x8c3
    45e4:	movw	r1, #0
    45e8:	movt	r1, #0
    45ec:	movw	r0, #0
    45f0:	movt	r0, #0
    45f4:	bl	0 <__assert_fail>
    45f8:	mov	r0, r3
    45fc:	sub	sp, fp, #4
    4600:	ldr	fp, [sp]
    4604:	add	sp, sp, #4
    4608:	pop	{pc}		; (ldr pc, [sp], #4)
