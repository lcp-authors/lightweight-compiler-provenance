
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/__/__/external/hash/ptr_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ptr_set_clear>:
   0:	push	{r4, sl, fp, lr}
   4:	add	fp, sp, #8
   8:	mov	r4, r0
   c:	ldr	r0, [r0]
  10:	cmp	r0, #0
  14:	beq	1c <ptr_set_clear+0x1c>
  18:	bl	0 <free>
  1c:	vmov.i32	q8, #0	; 0x00000000
  20:	vst1.32	{d16-d17}, [r4]
  24:	pop	{r4, sl, fp, pc}

00000028 <ptr_set_destroy>:
  28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  2c:	add	fp, sp, #24
  30:	mov	r4, r0
  34:	cmp	r1, #0
  38:	beq	88 <ptr_set_destroy+0x60>
  3c:	ldr	r0, [r4, #12]
  40:	cmp	r0, #0
  44:	beq	88 <ptr_set_destroy+0x60>
  48:	ldr	r7, [r4]
  4c:	mov	r8, r2
  50:	mov	r6, r1
  54:	mov	r5, #0
  58:	b	68 <ptr_set_destroy+0x40>
  5c:	add	r5, r5, #1
  60:	cmp	r5, r0
  64:	bcs	88 <ptr_set_destroy+0x60>
  68:	ldr	r1, [r7, r5, lsl #2]
  6c:	orr	r2, r1, #2
  70:	cmp	r2, #2
  74:	beq	5c <ptr_set_destroy+0x34>
  78:	mov	r0, r8
  7c:	blx	r6
  80:	ldr	r0, [r4, #12]
  84:	b	5c <ptr_set_destroy+0x34>
  88:	ldr	r0, [r4]
  8c:	cmp	r0, #0
  90:	beq	98 <ptr_set_destroy+0x70>
  94:	bl	0 <free>
  98:	vmov.i32	q8, #0	; 0x00000000
  9c:	vst1.32	{d16-d17}, [r4]
  a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000000a4 <ptr_set_init>:
  a4:	push	{r4, r5, fp, lr}
  a8:	add	fp, sp, #8
  ac:	mov	r4, r0
  b0:	mov	r2, #4
  b4:	mov	r0, #179	; 0xb3
  b8:	mul	r3, r2, r0
  bc:	mov	r5, r2
  c0:	lsl	r2, r2, #1
  c4:	cmp	r1, r3, lsr #8
  c8:	bhi	b8 <ptr_set_init+0x14>
  cc:	mov	r0, r5
  d0:	mov	r1, #4
  d4:	bl	0 <calloc>
  d8:	cmp	r0, #0
  dc:	str	r0, [r4]
  e0:	mvneq	r0, #0
  e4:	movne	r0, #0
  e8:	strne	r0, [r4, #4]
  ec:	strne	r0, [r4, #8]
  f0:	strne	r5, [r4, #12]
  f4:	pop	{r4, r5, fp, pc}

000000f8 <ptr_set_resize>:
  f8:	b	fc <ht_resize>

000000fc <ht_resize>:
  fc:	push	{r4, r5, r6, r7, fp, lr}
 100:	add	fp, sp, #16
 104:	sub	sp, sp, #16
 108:	mov	r4, r0
 10c:	ldr	r5, [r0]
 110:	ldr	r0, [r0, #8]
 114:	mov	r2, #4
 118:	cmp	r0, r1
 11c:	movhi	r1, r0
 120:	mov	r0, #179	; 0xb3
 124:	mul	r3, r2, r0
 128:	mov	r6, r2
 12c:	lsl	r2, r2, #1
 130:	cmp	r1, r3, lsr #8
 134:	bhi	124 <ht_resize+0x28>
 138:	mov	r0, r6
 13c:	mov	r1, #4
 140:	bl	0 <calloc>
 144:	cmp	r0, #0
 148:	str	r0, [sp]
 14c:	beq	1a8 <ht_resize+0xac>
 150:	mov	r7, #0
 154:	str	r6, [sp, #12]
 158:	str	r7, [sp, #4]
 15c:	str	r7, [sp, #8]
 160:	ldr	r0, [r4, #12]
 164:	cmp	r0, #0
 168:	beq	1b8 <ht_resize+0xbc>
 16c:	mov	r6, sp
 170:	b	180 <ht_resize+0x84>
 174:	add	r7, r7, #1
 178:	cmp	r7, r0
 17c:	bcs	1b4 <ht_resize+0xb8>
 180:	ldr	r1, [r5, r7, lsl #2]
 184:	orr	r2, r1, #2
 188:	cmp	r2, #2
 18c:	beq	174 <ht_resize+0x78>
 190:	mov	r0, r6
 194:	mov	r2, r1
 198:	mov	r3, #3
 19c:	bl	1ec <ht_insert>
 1a0:	ldr	r0, [r4, #12]
 1a4:	b	174 <ht_resize+0x78>
 1a8:	mvn	r0, #0
 1ac:	sub	sp, fp, #16
 1b0:	pop	{r4, r5, r6, r7, fp, pc}
 1b4:	ldr	r5, [r4]
 1b8:	cmp	r5, #0
 1bc:	beq	1c8 <ht_resize+0xcc>
 1c0:	mov	r0, r5
 1c4:	bl	0 <free>
 1c8:	mov	r0, sp
 1cc:	vld1.64	{d16-d17}, [r0]
 1d0:	mov	r0, #0
 1d4:	vst1.32	{d16-d17}, [r4]
 1d8:	sub	sp, fp, #16
 1dc:	pop	{r4, r5, r6, r7, fp, pc}

000001e0 <ptr_set_insert>:
 1e0:	mov	r2, r3
 1e4:	ldr	r3, [sp]
 1e8:	b	1ec <ht_insert>

000001ec <ht_insert>:
 1ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1f0:	add	fp, sp, #28
 1f4:	sub	sp, sp, #28
 1f8:	cmp	r2, #2
 1fc:	beq	334 <ht_insert+0x148>
 200:	mov	r9, r2
 204:	cmp	r2, #1
 208:	beq	34c <ht_insert+0x160>
 20c:	cmp	r9, #0
 210:	beq	364 <ht_insert+0x178>
 214:	mov	sl, r0
 218:	mov	r5, r1
 21c:	ldr	r0, [r0, #8]
 220:	mov	r1, #179	; 0xb3
 224:	mov	r8, r3
 228:	ldr	r6, [sl, #12]
 22c:	mul	r1, r6, r1
 230:	cmp	r0, r1, lsr #8
 234:	bcc	250 <ht_insert+0x64>
 238:	lsl	r1, r0, #1
 23c:	mov	r0, sl
 240:	bl	fc <ht_resize>
 244:	cmp	r0, #0
 248:	bne	384 <ht_insert+0x198>
 24c:	ldr	r6, [sl, #12]
 250:	movw	r1, #15186	; 0x3b52
 254:	ldr	r7, [sl]
 258:	add	r0, sp, #16
 25c:	mov	r2, #4
 260:	mov	r3, #0
 264:	str	r5, [sp, #12]
 268:	mov	r4, #0
 26c:	movt	r1, #12137	; 0x2f69
 270:	str	r0, [sp, #4]
 274:	add	r0, sp, #12
 278:	str	r1, [sp]
 27c:	bl	0 <cmetrohash64_1>
 280:	ldr	r1, [sp, #16]
 284:	sub	r0, r6, #1
 288:	orr	r3, r8, #1
 28c:	cmp	r3, #3
 290:	and	r2, r0, r1
 294:	bne	2c8 <ht_insert+0xdc>
 298:	ldr	r3, [sl, #8]
 29c:	add	r3, r3, #1
 2a0:	str	r3, [sl, #8]
 2a4:	add	r3, r1, #1
 2a8:	mov	r1, r7
 2ac:	ldr	r2, [r1, r2, lsl #2]!
 2b0:	orr	r2, r2, #2
 2b4:	cmp	r2, #2
 2b8:	beq	320 <ht_insert+0x134>
 2bc:	and	r2, r3, r0
 2c0:	add	r3, r3, #1
 2c4:	b	2a8 <ht_insert+0xbc>
 2c8:	add	r3, r1, #1
 2cc:	b	2e0 <ht_insert+0xf4>
 2d0:	cmp	r4, #0
 2d4:	moveq	r4, r1
 2d8:	and	r2, r3, r0
 2dc:	add	r3, r3, #1
 2e0:	mov	r1, r7
 2e4:	ldr	r2, [r1, r2, lsl #2]!
 2e8:	cmp	r2, #2
 2ec:	beq	2d0 <ht_insert+0xe4>
 2f0:	cmp	r2, #0
 2f4:	beq	30c <ht_insert+0x120>
 2f8:	cmp	r2, r5
 2fc:	bne	2d8 <ht_insert+0xec>
 300:	cmp	r8, #0
 304:	streq	r9, [r1]
 308:	b	328 <ht_insert+0x13c>
 30c:	ldr	r0, [sl, #8]
 310:	cmp	r4, #0
 314:	movne	r1, r4
 318:	add	r0, r0, #1
 31c:	str	r0, [sl, #8]
 320:	mov	r5, #0
 324:	str	r9, [r1]
 328:	mov	r0, r5
 32c:	sub	sp, fp, #28
 330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 334:	movw	r0, #0
 338:	movw	r1, #0
 33c:	movw	r3, #0
 340:	mov	r2, #115	; 0x73
 344:	movt	r0, #0
 348:	b	378 <ht_insert+0x18c>
 34c:	movw	r0, #0
 350:	movw	r1, #0
 354:	movw	r3, #0
 358:	mov	r2, #116	; 0x74
 35c:	movt	r0, #0
 360:	b	378 <ht_insert+0x18c>
 364:	movw	r0, #0
 368:	movw	r1, #0
 36c:	movw	r3, #0
 370:	mov	r2, #114	; 0x72
 374:	movt	r0, #0
 378:	movt	r1, #0
 37c:	movt	r3, #0
 380:	bl	0 <__assert_fail>
 384:	movw	r0, #0
 388:	movw	r1, #0
 38c:	movw	r2, #0
 390:	movt	r0, #0
 394:	movt	r1, #0
 398:	movt	r2, #0
 39c:	ldr	r0, [r0]
 3a0:	bl	0 <fprintf>
 3a4:	mov	r0, #1
 3a8:	bl	0 <exit>

000003ac <ptr_set_insert_item>:
 3ac:	mov	r3, r2
 3b0:	mov	r2, r1
 3b4:	b	1ec <ht_insert>

000003b8 <ptr_set_find>:
 3b8:	push	{r4, r5, r6, r7, fp, lr}
 3bc:	add	fp, sp, #16
 3c0:	sub	sp, sp, #24
 3c4:	ldr	r6, [r0]
 3c8:	cmp	r6, #0
 3cc:	beq	43c <ptr_set_find+0x84>
 3d0:	ldr	r7, [r0, #12]
 3d4:	mov	r4, r1
 3d8:	str	r1, [sp, #12]
 3dc:	movw	r1, #15186	; 0x3b52
 3e0:	add	r0, sp, #16
 3e4:	mov	r2, #4
 3e8:	mov	r3, #0
 3ec:	mov	r5, #0
 3f0:	movt	r1, #12137	; 0x2f69
 3f4:	str	r0, [sp, #4]
 3f8:	add	r0, sp, #12
 3fc:	str	r1, [sp]
 400:	bl	0 <cmetrohash64_1>
 404:	ldr	r0, [sp, #16]
 408:	sub	r1, r7, #1
 40c:	b	414 <ptr_set_find+0x5c>
 410:	add	r0, r0, #1
 414:	and	r2, r0, r1
 418:	ldr	r2, [r6, r2, lsl #2]
 41c:	cmp	r2, #2
 420:	beq	410 <ptr_set_find+0x58>
 424:	cmp	r2, #0
 428:	beq	440 <ptr_set_find+0x88>
 42c:	cmp	r2, r4
 430:	bne	410 <ptr_set_find+0x58>
 434:	mov	r5, r4
 438:	b	440 <ptr_set_find+0x88>
 43c:	mov	r5, #0
 440:	mov	r0, r5
 444:	sub	sp, fp, #16
 448:	pop	{r4, r5, r6, r7, fp, pc}

0000044c <ptr_set_find_item>:
 44c:	push	{r4, r5, r6, r7, fp, lr}
 450:	add	fp, sp, #16
 454:	sub	sp, sp, #24
 458:	ldr	r6, [r0]
 45c:	cmp	r6, #0
 460:	beq	4d0 <ptr_set_find_item+0x84>
 464:	ldr	r7, [r0, #12]
 468:	mov	r4, r1
 46c:	str	r1, [sp, #12]
 470:	movw	r1, #15186	; 0x3b52
 474:	add	r0, sp, #16
 478:	mov	r2, #4
 47c:	mov	r3, #0
 480:	mov	r5, #0
 484:	movt	r1, #12137	; 0x2f69
 488:	str	r0, [sp, #4]
 48c:	add	r0, sp, #12
 490:	str	r1, [sp]
 494:	bl	0 <cmetrohash64_1>
 498:	ldr	r0, [sp, #16]
 49c:	sub	r1, r7, #1
 4a0:	b	4a8 <ptr_set_find_item+0x5c>
 4a4:	add	r0, r0, #1
 4a8:	and	r2, r0, r1
 4ac:	ldr	r2, [r6, r2, lsl #2]
 4b0:	cmp	r2, #2
 4b4:	beq	4a4 <ptr_set_find_item+0x58>
 4b8:	cmp	r2, #0
 4bc:	beq	4d4 <ptr_set_find_item+0x88>
 4c0:	cmp	r2, r4
 4c4:	bne	4a4 <ptr_set_find_item+0x58>
 4c8:	mov	r5, r4
 4cc:	b	4d4 <ptr_set_find_item+0x88>
 4d0:	mov	r5, #0
 4d4:	mov	r0, r5
 4d8:	sub	sp, fp, #16
 4dc:	pop	{r4, r5, r6, r7, fp, pc}

000004e0 <ptr_set_remove>:
 4e0:	push	{r4, r5, r6, r7, fp, lr}
 4e4:	add	fp, sp, #16
 4e8:	sub	sp, sp, #24
 4ec:	ldr	r6, [r0]
 4f0:	cmp	r6, #0
 4f4:	beq	574 <ptr_set_remove+0x94>
 4f8:	ldr	r7, [r0, #12]
 4fc:	mov	r4, r1
 500:	str	r1, [sp, #12]
 504:	movw	r1, #15186	; 0x3b52
 508:	mov	r5, r0
 50c:	add	r0, sp, #16
 510:	mov	r2, #4
 514:	mov	r3, #0
 518:	movt	r1, #12137	; 0x2f69
 51c:	str	r0, [sp, #4]
 520:	add	r0, sp, #12
 524:	str	r1, [sp]
 528:	bl	0 <cmetrohash64_1>
 52c:	ldr	r0, [sp, #16]
 530:	sub	r1, r7, #1
 534:	b	53c <ptr_set_remove+0x5c>
 538:	add	r0, r0, #1
 53c:	and	r2, r0, r1
 540:	ldr	r3, [r6, r2, lsl #2]
 544:	cmp	r3, #2
 548:	beq	538 <ptr_set_remove+0x58>
 54c:	cmp	r3, #0
 550:	beq	574 <ptr_set_remove+0x94>
 554:	cmp	r3, r4
 558:	bne	538 <ptr_set_remove+0x58>
 55c:	mov	r0, #2
 560:	str	r0, [r6, r2, lsl #2]
 564:	ldr	r0, [r5, #8]
 568:	sub	r0, r0, #1
 56c:	str	r0, [r5, #8]
 570:	b	578 <ptr_set_remove+0x98>
 574:	mov	r4, #0
 578:	mov	r0, r4
 57c:	sub	sp, fp, #16
 580:	pop	{r4, r5, r6, r7, fp, pc}

00000584 <ptr_set_remove_item>:
 584:	push	{r4, r5, r6, r7, fp, lr}
 588:	add	fp, sp, #16
 58c:	sub	sp, sp, #24
 590:	ldr	r6, [r0]
 594:	cmp	r6, #0
 598:	beq	618 <ptr_set_remove_item+0x94>
 59c:	ldr	r7, [r0, #12]
 5a0:	mov	r4, r1
 5a4:	str	r1, [sp, #12]
 5a8:	movw	r1, #15186	; 0x3b52
 5ac:	mov	r5, r0
 5b0:	add	r0, sp, #16
 5b4:	mov	r2, #4
 5b8:	mov	r3, #0
 5bc:	movt	r1, #12137	; 0x2f69
 5c0:	str	r0, [sp, #4]
 5c4:	add	r0, sp, #12
 5c8:	str	r1, [sp]
 5cc:	bl	0 <cmetrohash64_1>
 5d0:	ldr	r0, [sp, #16]
 5d4:	sub	r1, r7, #1
 5d8:	b	5e0 <ptr_set_remove_item+0x5c>
 5dc:	add	r0, r0, #1
 5e0:	and	r2, r0, r1
 5e4:	ldr	r3, [r6, r2, lsl #2]
 5e8:	cmp	r3, #2
 5ec:	beq	5dc <ptr_set_remove_item+0x58>
 5f0:	cmp	r3, #0
 5f4:	beq	618 <ptr_set_remove_item+0x94>
 5f8:	cmp	r3, r4
 5fc:	bne	5dc <ptr_set_remove_item+0x58>
 600:	mov	r0, #2
 604:	str	r0, [r6, r2, lsl #2]
 608:	ldr	r0, [r5, #8]
 60c:	sub	r0, r0, #1
 610:	str	r0, [r5, #8]
 614:	b	61c <ptr_set_remove_item+0x98>
 618:	mov	r4, #0
 61c:	mov	r0, r4
 620:	sub	sp, fp, #16
 624:	pop	{r4, r5, r6, r7, fp, pc}

00000628 <ptr_set_visit>:
 628:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 62c:	add	fp, sp, #24
 630:	mov	r6, r0
 634:	ldr	r0, [r0, #12]
 638:	cmp	r0, #0
 63c:	beq	680 <ptr_set_visit+0x58>
 640:	ldr	r7, [r6]
 644:	mov	r8, r2
 648:	mov	r5, r1
 64c:	mov	r4, #0
 650:	b	660 <ptr_set_visit+0x38>
 654:	add	r4, r4, #1
 658:	cmp	r4, r0
 65c:	bcs	680 <ptr_set_visit+0x58>
 660:	ldr	r1, [r7, r4, lsl #2]
 664:	orr	r2, r1, #2
 668:	cmp	r2, #2
 66c:	beq	654 <ptr_set_visit+0x2c>
 670:	mov	r0, r8
 674:	blx	r5
 678:	ldr	r0, [r6, #12]
 67c:	b	654 <ptr_set_visit+0x2c>
 680:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
