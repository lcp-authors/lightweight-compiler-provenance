
../compcert-repos/prog2/CMakeFiles/2.3.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/03.2_.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <imprime>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	mov	r1, #0
   c:	mov	r4, r0
  10:	bl	0 <vetor_elemento>
  14:	movw	r5, #0
  18:	mov	r2, r0
  1c:	mov	r1, #1
  20:	movt	r5, #0
  24:	mov	r0, r5
  28:	bl	0 <printf>
  2c:	mov	r0, r4
  30:	mov	r1, #1
  34:	bl	0 <vetor_elemento>
  38:	mov	r2, r0
  3c:	mov	r0, r5
  40:	mov	r1, #2
  44:	bl	0 <printf>
  48:	mov	r0, r4
  4c:	mov	r1, #2
  50:	bl	0 <vetor_elemento>
  54:	mov	r2, r0
  58:	mov	r0, r5
  5c:	mov	r1, #3
  60:	bl	0 <printf>
  64:	mov	r0, r4
  68:	mov	r1, #3
  6c:	bl	0 <vetor_elemento>
  70:	mov	r2, r0
  74:	mov	r0, r5
  78:	mov	r1, #4
  7c:	bl	0 <printf>
  80:	mov	r0, r4
  84:	mov	r1, #4
  88:	bl	0 <vetor_elemento>
  8c:	mov	r2, r0
  90:	mov	r0, r5
  94:	mov	r1, #5
  98:	pop	{r4, r5, fp, lr}
  9c:	b	0 <printf>

000000a0 <main>:
  a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  a4:	add	fp, sp, #24
  a8:	sub	sp, sp, #104	; 0x68
  ac:	bl	0 <vetor_novo>
  b0:	movw	r8, #0
  b4:	mov	r4, r0
  b8:	mov	r1, #1
  bc:	movt	r8, #0
  c0:	mov	r0, r8
  c4:	bl	0 <printf>
  c8:	movw	r7, #0
  cc:	add	r5, sp, #4
  d0:	mov	r1, #100	; 0x64
  d4:	movt	r7, #0
  d8:	mov	r0, r5
  dc:	ldr	r2, [r7]
  e0:	bl	0 <fgets>
  e4:	mov	r0, r5
  e8:	bl	0 <strlen>
  ec:	add	r0, r0, r5
  f0:	mov	r6, #0
  f4:	mov	r1, r5
  f8:	mov	r2, #0
  fc:	strb	r6, [r0, #-1]
 100:	mov	r0, r4
 104:	bl	0 <vetor_insere>
 108:	mov	r0, r8
 10c:	mov	r1, #2
 110:	bl	0 <printf>
 114:	ldr	r2, [r7]
 118:	mov	r0, r5
 11c:	mov	r1, #100	; 0x64
 120:	bl	0 <fgets>
 124:	mov	r0, r5
 128:	bl	0 <strlen>
 12c:	add	r0, r0, r5
 130:	mov	r1, r5
 134:	mov	r2, #1
 138:	strb	r6, [r0, #-1]
 13c:	mov	r0, r4
 140:	bl	0 <vetor_insere>
 144:	mov	r0, r8
 148:	mov	r1, #3
 14c:	bl	0 <printf>
 150:	ldr	r2, [r7]
 154:	mov	r0, r5
 158:	mov	r1, #100	; 0x64
 15c:	bl	0 <fgets>
 160:	mov	r0, r5
 164:	bl	0 <strlen>
 168:	add	r0, r0, r5
 16c:	mov	r1, r5
 170:	mov	r2, #2
 174:	strb	r6, [r0, #-1]
 178:	mov	r0, r4
 17c:	bl	0 <vetor_insere>
 180:	mov	r0, r8
 184:	mov	r1, #4
 188:	bl	0 <printf>
 18c:	ldr	r2, [r7]
 190:	mov	r0, r5
 194:	mov	r1, #100	; 0x64
 198:	bl	0 <fgets>
 19c:	mov	r0, r5
 1a0:	bl	0 <strlen>
 1a4:	add	r0, r0, r5
 1a8:	mov	r1, r5
 1ac:	mov	r2, #3
 1b0:	strb	r6, [r0, #-1]
 1b4:	mov	r0, r4
 1b8:	bl	0 <vetor_insere>
 1bc:	mov	r0, r8
 1c0:	mov	r1, #5
 1c4:	bl	0 <printf>
 1c8:	ldr	r2, [r7]
 1cc:	mov	r0, r5
 1d0:	mov	r1, #100	; 0x64
 1d4:	bl	0 <fgets>
 1d8:	mov	r0, r5
 1dc:	bl	0 <strlen>
 1e0:	add	r0, r0, r5
 1e4:	mov	r1, r5
 1e8:	mov	r2, #4
 1ec:	strb	r6, [r0, #-1]
 1f0:	mov	r0, r4
 1f4:	bl	0 <vetor_insere>
 1f8:	mov	r0, r4
 1fc:	bl	0 <imprime>
 200:	movw	r0, #0
 204:	movt	r0, #0
 208:	bl	0 <printf>
 20c:	movw	r0, #0
 210:	mov	r1, r5
 214:	movt	r0, #0
 218:	bl	0 <__isoc99_scanf>
 21c:	mov	r0, r4
 220:	mov	r1, r5
 224:	bl	0 <vetor_pesquisa>
 228:	mov	r1, r0
 22c:	mov	r0, r4
 230:	bl	0 <vetor_remove>
 234:	cmp	r0, #0
 238:	beq	24c <main+0x1ac>
 23c:	movw	r0, #0
 240:	movt	r0, #0
 244:	bl	0 <puts>
 248:	b	254 <main+0x1b4>
 24c:	mov	r0, r4
 250:	bl	0 <imprime>
 254:	mov	r0, r4
 258:	bl	0 <vetor_ordena>
 25c:	cmp	r0, #0
 260:	beq	270 <main+0x1d0>
 264:	movw	r0, #0
 268:	movt	r0, #0
 26c:	bl	0 <printf>
 270:	movw	r0, #0
 274:	movt	r0, #0
 278:	bl	0 <puts>
 27c:	mov	r0, r4
 280:	bl	0 <imprime>
 284:	mov	r0, r4
 288:	bl	0 <vetor_apaga>
 28c:	mov	r0, #0
 290:	sub	sp, fp, #24
 294:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
