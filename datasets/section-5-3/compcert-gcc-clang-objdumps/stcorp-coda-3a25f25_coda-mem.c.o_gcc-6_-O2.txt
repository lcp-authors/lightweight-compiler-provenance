
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-mem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_empty_record>:
   0:	cmp	r0, #10
   4:	push	{r4, r5, r6, lr}
   8:	bhi	64 <coda_mem_empty_record+0x64>
   c:	ldr	r4, [pc, #100]	; 78 <coda_mem_empty_record+0x78>
  10:	mov	r6, r0
  14:	bl	0 <__aeabi_read_tp>
  18:	add	r4, r4, r0
  1c:	ldr	r5, [r4, r6, lsl #2]
  20:	cmp	r5, #0
  24:	beq	30 <coda_mem_empty_record+0x30>
  28:	mov	r0, r5
  2c:	pop	{r4, r5, r6, pc}
  30:	mov	r0, r6
  34:	bl	0 <coda_type_empty_record>
  38:	mov	r1, r5
  3c:	bl	0 <coda_mem_record_new>
  40:	cmp	r0, #0
  44:	mov	r5, r0
  48:	str	r0, [r4, r6, lsl #2]
  4c:	bne	28 <coda_mem_empty_record+0x28>
  50:	ldr	r3, [pc, #36]	; 7c <coda_mem_empty_record+0x7c>
  54:	mov	r2, #53	; 0x35
  58:	ldr	r1, [pc, #32]	; 80 <coda_mem_empty_record+0x80>
  5c:	ldr	r0, [pc, #32]	; 84 <coda_mem_empty_record+0x84>
  60:	bl	0 <__assert_fail>
  64:	ldr	r3, [pc, #16]	; 7c <coda_mem_empty_record+0x7c>
  68:	mov	r2, #49	; 0x31
  6c:	ldr	r1, [pc, #12]	; 80 <coda_mem_empty_record+0x80>
  70:	ldr	r0, [pc, #16]	; 88 <coda_mem_empty_record+0x88>
  74:	bl	0 <__assert_fail>
	...
  84:	.word	0x00000070
  88:	.word	0x00000048

0000008c <coda_no_data_singleton>:
  8c:	cmp	r0, #10
  90:	push	{r4, lr}
  94:	bhi	e0 <coda_no_data_singleton+0x54>
  98:	ldr	r4, [pc, #84]	; f4 <coda_no_data_singleton+0x68>
  9c:	mov	r3, r0
  a0:	bl	0 <__aeabi_read_tp>
  a4:	add	r4, r4, r0
  a8:	add	r4, r4, r3, lsl #2
  ac:	ldr	r0, [r4, #44]	; 0x2c
  b0:	cmp	r0, #0
  b4:	popne	{r4, pc}
  b8:	mov	r0, r3
  bc:	bl	0 <coda_mem_no_data_new>
  c0:	cmp	r0, #0
  c4:	str	r0, [r4, #44]	; 0x2c
  c8:	popne	{r4, pc}
  cc:	ldr	r3, [pc, #36]	; f8 <coda_no_data_singleton+0x6c>
  d0:	mov	r2, #65	; 0x41
  d4:	ldr	r1, [pc, #32]	; fc <coda_no_data_singleton+0x70>
  d8:	ldr	r0, [pc, #32]	; 100 <coda_no_data_singleton+0x74>
  dc:	bl	0 <__assert_fail>
  e0:	ldr	r3, [pc, #16]	; f8 <coda_no_data_singleton+0x6c>
  e4:	mov	r2, #61	; 0x3d
  e8:	ldr	r1, [pc, #12]	; fc <coda_no_data_singleton+0x70>
  ec:	ldr	r0, [pc, #16]	; 104 <coda_no_data_singleton+0x78>
  f0:	bl	0 <__assert_fail>
  f4:	.word	0x00000000
  f8:	.word	0x00000018
  fc:	.word	0x00000000
 100:	.word	0x000000b8
 104:	.word	0x00000098

00000108 <coda_mem_done>:
 108:	push	{r4, r5, r6, r7, r8, lr}
 10c:	bl	0 <__aeabi_read_tp>
 110:	ldr	r5, [pc, #92]	; 174 <coda_mem_done+0x6c>
 114:	mov	r7, #0
 118:	add	r0, r5, r0
 11c:	sub	r4, r0, #4
 120:	add	r6, r0, #40	; 0x28
 124:	ldr	r3, [r4, #4]
 128:	subs	r0, r3, #0
 12c:	beq	134 <coda_mem_done+0x2c>
 130:	bl	0 <coda_mem_type_delete>
 134:	str	r7, [r4, #4]!
 138:	cmp	r4, r6
 13c:	bne	124 <coda_mem_done+0x1c>
 140:	bl	0 <__aeabi_read_tp>
 144:	add	r5, r5, r0
 148:	add	r4, r5, #40	; 0x28
 14c:	mov	r6, #0
 150:	add	r5, r5, #84	; 0x54
 154:	ldr	r3, [r4, #4]
 158:	subs	r0, r3, #0
 15c:	beq	164 <coda_mem_done+0x5c>
 160:	bl	0 <coda_mem_type_delete>
 164:	str	r6, [r4, #4]!
 168:	cmp	r5, r4
 16c:	bne	154 <coda_mem_done+0x4c>
 170:	pop	{r4, r5, r6, r7, r8, pc}
 174:	.word	0x00000000
