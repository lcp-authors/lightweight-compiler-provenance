
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/TestEndianess.bin:     file format elf32-littlearm


Disassembly of section .init:

000105d0 <.init>:
   105d0:	push	{r3, lr}
   105d4:	bl	10650 <_start@@Base+0x3c>
   105d8:	pop	{r3, pc}

Disassembly of section .plt:

000105dc <__libc_start_main@plt-0x14>:
   105dc:	push	{lr}		; (str lr, [sp, #-4]!)
   105e0:	ldr	lr, [pc, #4]	; 105ec <__libc_start_main@plt-0x4>
   105e4:	add	lr, pc, lr
   105e8:	ldr	pc, [lr, #8]!
   105ec:	andeq	r0, r1, r4, lsl sl

000105f0 <__libc_start_main@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2580]!	; 0xa14

000105fc <__gmon_start__@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2572]!	; 0xa0c

00010608 <abort@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2564]!	; 0xa04

Disassembly of section .text:

00010614 <_start@@Base>:
   10614:	mov	fp, #0
   10618:	mov	lr, #0
   1061c:	pop	{r1}		; (ldr r1, [sp], #4)
   10620:	mov	r2, sp
   10624:	push	{r2}		; (str r2, [sp, #-4]!)
   10628:	push	{r0}		; (str r0, [sp, #-4]!)
   1062c:	ldr	ip, [pc, #16]	; 10644 <_start@@Base+0x30>
   10630:	push	{ip}		; (str ip, [sp, #-4]!)
   10634:	ldr	r0, [pc, #12]	; 10648 <_start@@Base+0x34>
   10638:	ldr	r3, [pc, #12]	; 1064c <_start@@Base+0x38>
   1063c:	bl	105f0 <__libc_start_main@plt>
   10640:	bl	10608 <abort@plt>
   10644:	andeq	r0, r1, r8, asr #15
   10648:	andeq	r0, r1, r4, lsl #14
   1064c:	andeq	r0, r1, r8, ror #14
   10650:	ldr	r3, [pc, #20]	; 1066c <_start@@Base+0x58>
   10654:	ldr	r2, [pc, #20]	; 10670 <_start@@Base+0x5c>
   10658:	add	r3, pc, r3
   1065c:	ldr	r2, [r3, r2]
   10660:	cmp	r2, #0
   10664:	bxeq	lr
   10668:	b	105fc <__gmon_start__@plt>
   1066c:	andeq	r0, r1, r0, lsr #19
   10670:	andeq	r0, r0, r8, lsl r0
   10674:	ldr	r0, [pc, #24]	; 10694 <_start@@Base+0x80>
   10678:	ldr	r3, [pc, #24]	; 10698 <_start@@Base+0x84>
   1067c:	cmp	r3, r0
   10680:	bxeq	lr
   10684:	ldr	r3, [pc, #16]	; 1069c <_start@@Base+0x88>
   10688:	cmp	r3, #0
   1068c:	bxeq	lr
   10690:	bx	r3
   10694:	andeq	r1, r2, r4, lsr #32
   10698:	andeq	r1, r2, r4, lsr #32
   1069c:	andeq	r0, r0, r0
   106a0:	ldr	r0, [pc, #36]	; 106cc <_start@@Base+0xb8>
   106a4:	ldr	r1, [pc, #36]	; 106d0 <_start@@Base+0xbc>
   106a8:	sub	r1, r1, r0
   106ac:	asr	r1, r1, #2
   106b0:	add	r1, r1, r1, lsr #31
   106b4:	asrs	r1, r1, #1
   106b8:	bxeq	lr
   106bc:	ldr	r3, [pc, #16]	; 106d4 <_start@@Base+0xc0>
   106c0:	cmp	r3, #0
   106c4:	bxeq	lr
   106c8:	bx	r3
   106cc:	andeq	r1, r2, r4, lsr #32
   106d0:	andeq	r1, r2, r4, lsr #32
   106d4:	andeq	r0, r0, r0
   106d8:	push	{r4, lr}
   106dc:	ldr	r4, [pc, #24]	; 106fc <_start@@Base+0xe8>
   106e0:	ldrb	r3, [r4]
   106e4:	cmp	r3, #0
   106e8:	popne	{r4, pc}
   106ec:	bl	10674 <_start@@Base+0x60>
   106f0:	mov	r3, #1
   106f4:	strb	r3, [r4]
   106f8:	pop	{r4, pc}
   106fc:	andeq	r1, r2, r4, lsr #32
   10700:	b	106a0 <_start@@Base+0x8c>

00010704 <main@@Base>:
   10704:	sub	sp, sp, #16
   10708:	mov	r2, #0
   1070c:	str	r2, [sp, #12]
   10710:	str	r0, [sp, #8]
   10714:	str	r1, [sp, #4]
   10718:	str	r2, [sp]
   1071c:	ldr	r0, [sp, #8]
   10720:	movw	r1, #2008	; 0x7d8
   10724:	movt	r1, #1
   10728:	add	r0, r1, r0, lsl #1
   1072c:	ldrh	r0, [r0]
   10730:	ldr	r1, [sp]
   10734:	add	r0, r1, r0
   10738:	str	r0, [sp]
   1073c:	ldr	r0, [sp, #8]
   10740:	movw	r1, #2032	; 0x7f0
   10744:	movt	r1, #1
   10748:	add	r0, r1, r0, lsl #1
   1074c:	ldrh	r0, [r0]
   10750:	ldr	r1, [sp]
   10754:	add	r0, r1, r0
   10758:	str	r0, [sp]
   1075c:	ldr	r0, [sp]
   10760:	add	sp, sp, #16
   10764:	bx	lr

00010768 <__libc_csu_init@@Base>:
   10768:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1076c:	mov	r7, r0
   10770:	ldr	r6, [pc, #72]	; 107c0 <__libc_csu_init@@Base+0x58>
   10774:	ldr	r5, [pc, #72]	; 107c4 <__libc_csu_init@@Base+0x5c>
   10778:	add	r6, pc, r6
   1077c:	add	r5, pc, r5
   10780:	sub	r6, r6, r5
   10784:	mov	r8, r1
   10788:	mov	r9, r2
   1078c:	bl	105d0 <__libc_start_main@plt-0x20>
   10790:	asrs	r6, r6, #2
   10794:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10798:	mov	r4, #0
   1079c:	add	r4, r4, #1
   107a0:	ldr	r3, [r5], #4
   107a4:	mov	r2, r9
   107a8:	mov	r1, r8
   107ac:	mov	r0, r7
   107b0:	blx	r3
   107b4:	cmp	r6, r4
   107b8:	bne	1079c <__libc_csu_init@@Base+0x34>
   107bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   107c0:	andeq	r0, r1, ip, lsl #15
   107c4:	andeq	r0, r1, r4, lsl #15

000107c8 <__libc_csu_fini@@Base>:
   107c8:	bx	lr

Disassembly of section .fini:

000107cc <.fini>:
   107cc:	push	{r3, lr}
   107d0:	pop	{r3, pc}
