
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #12
   c:	mov	r5, r1
  10:	movw	r1, #0
  14:	mov	r7, r0
  18:	mov	r0, #0
  1c:	movw	r2, #0
  20:	mov	r4, #1
  24:	movt	r1, #0
  28:	movt	r2, #0
  2c:	cmp	r7, #2
  30:	str	r0, [r1]
  34:	movw	r1, #0
  38:	movt	r1, #0
  3c:	str	r1, [r2]
  40:	movw	r1, #0
  44:	movt	r1, #0
  48:	str	r0, [r1]
  4c:	movw	r1, #0
  50:	movt	r1, #0
  54:	str	r0, [r1]
  58:	movw	r1, #0
  5c:	movt	r1, #0
  60:	str	r0, [r1]
  64:	movw	r1, #0
  68:	movt	r1, #0
  6c:	str	r0, [r1]
  70:	movw	r1, #0
  74:	movt	r1, #0
  78:	str	r0, [r1]
  7c:	movw	r1, #0
  80:	movt	r1, #0
  84:	str	r0, [r1]
  88:	movw	r1, #0
  8c:	movt	r1, #0
  90:	str	r0, [r1]
  94:	movw	r1, #0
  98:	movt	r1, #0
  9c:	str	r0, [r1]
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	str	r4, [r0]
  ac:	blt	134 <main+0x134>
  b0:	ldr	r6, [r5, #4]
  b4:	movw	r1, #0
  b8:	movt	r1, #0
  bc:	mov	r0, r6
  c0:	bl	0 <strcmp>
  c4:	cmp	r0, #0
  c8:	beq	6c8 <main+0x6c8>
  cc:	movw	r1, #0
  d0:	mov	r0, r6
  d4:	movt	r1, #0
  d8:	bl	0 <strcmp>
  dc:	cmp	r0, #0
  e0:	beq	6c8 <main+0x6c8>
  e4:	movw	r1, #0
  e8:	mov	r0, r6
  ec:	movt	r1, #0
  f0:	bl	0 <strcmp>
  f4:	cmp	r0, #0
  f8:	beq	6d4 <main+0x6d4>
  fc:	movw	r1, #0
 100:	mov	r0, r6
 104:	movt	r1, #0
 108:	bl	0 <strcmp>
 10c:	cmp	r0, #0
 110:	beq	6d4 <main+0x6d4>
 114:	cmp	r7, #3
 118:	blt	134 <main+0x134>
 11c:	movw	r1, #0
 120:	mov	r0, r6
 124:	movt	r1, #0
 128:	bl	0 <strcmp>
 12c:	cmp	r0, #0
 130:	beq	5f0 <main+0x5f0>
 134:	ldr	r0, [r5]
 138:	movw	r2, #0
 13c:	mov	r1, #0
 140:	movt	r2, #0
 144:	bl	0 <coda_set_definition_path_conditional>
 148:	cmp	r0, #0
 14c:	bne	6f8 <main+0x6f8>
 150:	ldr	r0, [pc, #1532]	; 754 <main+0x754>
 154:	mov	r2, #1
 158:	ldr	r1, [pc, r0]
 15c:	bl	0 <__aeabi_read_tp>
 160:	str	r2, [r0, r1]
 164:	bl	0 <coda_init>
 168:	cmp	r0, #0
 16c:	bne	6e0 <main+0x6e0>
 170:	cmp	r4, r7
 174:	beq	6ec <main+0x6ec>
 178:	mov	r0, #0
 17c:	bl	0 <coda_set_option_perform_conversions>
 180:	ldr	r6, [r5, r4, lsl #2]
 184:	movw	r1, #0
 188:	movt	r1, #0
 18c:	mov	r0, r6
 190:	bl	0 <strcmp>
 194:	cmp	r0, #0
 198:	beq	298 <main+0x298>
 19c:	movw	r1, #0
 1a0:	mov	r0, r6
 1a4:	movt	r1, #0
 1a8:	bl	0 <strcmp>
 1ac:	cmp	r0, #0
 1b0:	beq	2b4 <main+0x2b4>
 1b4:	movw	r1, #0
 1b8:	mov	r0, r6
 1bc:	movt	r1, #0
 1c0:	bl	0 <strcmp>
 1c4:	cmp	r0, #0
 1c8:	beq	4fc <main+0x4fc>
 1cc:	movw	r1, #0
 1d0:	mov	r0, r6
 1d4:	movt	r1, #0
 1d8:	bl	0 <strcmp>
 1dc:	cmp	r0, #0
 1e0:	beq	600 <main+0x600>
 1e4:	movw	r1, #0
 1e8:	mov	r0, r6
 1ec:	mov	r8, r7
 1f0:	movt	r1, #0
 1f4:	bl	0 <strcmp>
 1f8:	cmp	r0, #0
 1fc:	bne	69c <main+0x69c>
 200:	mov	r0, #0
 204:	mov	r6, r0
 208:	add	r0, r4, #1
 20c:	mov	r9, r4
 210:	cmp	r0, r8
 214:	bge	278 <main+0x278>
 218:	add	sl, r5, r9, lsl #2
 21c:	movw	r1, #0
 220:	movt	r1, #0
 224:	ldr	r7, [sl, #4]
 228:	mov	r0, r7
 22c:	bl	0 <strcmp>
 230:	cmp	r0, #0
 234:	beq	250 <main+0x250>
 238:	movw	r1, #0
 23c:	mov	r0, r7
 240:	movt	r1, #0
 244:	bl	0 <strcmp>
 248:	cmp	r0, #0
 24c:	bne	26c <main+0x26c>
 250:	add	r4, r9, #2
 254:	cmp	r4, r8
 258:	bge	26c <main+0x26c>
 25c:	ldr	r0, [sl, #8]
 260:	ldrb	r1, [r0]
 264:	cmp	r1, #45	; 0x2d
 268:	bne	204 <main+0x204>
 26c:	ldrb	r0, [r7]
 270:	cmp	r0, #45	; 0x2d
 274:	beq	69c <main+0x69c>
 278:	sub	r0, r8, #2
 27c:	cmp	r0, r9
 280:	bne	69c <main+0x69c>
 284:	add	r0, r5, r9, lsl #2
 288:	ldr	r1, [r0, #4]
 28c:	mov	r0, r6
 290:	bl	0 <generate_definition>
 294:	b	62c <main+0x62c>
 298:	sub	r0, r7, #1
 29c:	add	r1, r4, #1
 2a0:	cmp	r1, r0
 2a4:	bne	69c <main+0x69c>
 2a8:	ldr	r0, [r5, r0, lsl #2]
 2ac:	bl	0 <generate_html>
 2b0:	b	62c <main+0x62c>
 2b4:	add	sl, r4, #1
 2b8:	mvn	r2, #0
 2bc:	mov	r6, #0
 2c0:	cmp	sl, r7
 2c4:	str	r2, [sp, #8]
 2c8:	bge	5cc <main+0x5cc>
 2cc:	movw	r9, #0
 2d0:	mov	r8, #1
 2d4:	movt	r9, #0
 2d8:	ldr	r6, [r5, sl, lsl #2]
 2dc:	mov	r1, r9
 2e0:	mov	r0, r6
 2e4:	bl	0 <strcmp>
 2e8:	cmp	r0, #0
 2ec:	beq	470 <main+0x470>
 2f0:	movw	r1, #0
 2f4:	mov	r0, r6
 2f8:	movt	r1, #0
 2fc:	bl	0 <strcmp>
 300:	cmp	r0, #0
 304:	beq	470 <main+0x470>
 308:	movw	r1, #0
 30c:	mov	r0, r6
 310:	movt	r1, #0
 314:	bl	0 <strcmp>
 318:	cmp	r0, #0
 31c:	beq	47c <main+0x47c>
 320:	movw	r1, #0
 324:	mov	r0, r6
 328:	movt	r1, #0
 32c:	bl	0 <strcmp>
 330:	cmp	r0, #0
 334:	beq	47c <main+0x47c>
 338:	movw	r1, #0
 33c:	mov	r0, r6
 340:	movt	r1, #0
 344:	bl	0 <strcmp>
 348:	cmp	r0, #0
 34c:	beq	488 <main+0x488>
 350:	movw	r1, #0
 354:	mov	r0, r6
 358:	movt	r1, #0
 35c:	bl	0 <strcmp>
 360:	cmp	r0, #0
 364:	beq	488 <main+0x488>
 368:	movw	r1, #0
 36c:	mov	r0, r6
 370:	movt	r1, #0
 374:	bl	0 <strcmp>
 378:	cmp	r0, #0
 37c:	beq	494 <main+0x494>
 380:	movw	r1, #0
 384:	mov	r0, r6
 388:	movt	r1, #0
 38c:	bl	0 <strcmp>
 390:	cmp	r0, #0
 394:	beq	494 <main+0x494>
 398:	movw	r1, #0
 39c:	mov	r0, r6
 3a0:	movt	r1, #0
 3a4:	bl	0 <strcmp>
 3a8:	cmp	r0, #0
 3ac:	beq	4b4 <main+0x4b4>
 3b0:	movw	r1, #0
 3b4:	mov	r0, r6
 3b8:	movt	r1, #0
 3bc:	bl	0 <strcmp>
 3c0:	cmp	r0, #0
 3c4:	beq	4c0 <main+0x4c0>
 3c8:	movw	r1, #0
 3cc:	mov	r0, r6
 3d0:	movt	r1, #0
 3d4:	bl	0 <strcmp>
 3d8:	cmp	r0, #0
 3dc:	beq	4cc <main+0x4cc>
 3e0:	movw	r1, #0
 3e4:	mov	r0, r6
 3e8:	movt	r1, #0
 3ec:	bl	0 <strcmp>
 3f0:	cmp	r0, #0
 3f4:	beq	4d8 <main+0x4d8>
 3f8:	movw	r1, #0
 3fc:	mov	r0, r6
 400:	movt	r1, #0
 404:	bl	0 <strcmp>
 408:	cmp	r0, #0
 40c:	beq	4e4 <main+0x4e4>
 410:	movw	r1, #0
 414:	mov	r0, r6
 418:	movt	r1, #0
 41c:	bl	0 <strcmp>
 420:	cmp	r0, #0
 424:	beq	440 <main+0x440>
 428:	movw	r1, #0
 42c:	mov	r0, r6
 430:	movt	r1, #0
 434:	bl	0 <strcmp>
 438:	cmp	r0, #0
 43c:	bne	63c <main+0x63c>
 440:	add	r0, r4, #2
 444:	cmp	r0, r7
 448:	bge	63c <main+0x63c>
 44c:	ldr	r1, [r5, r0, lsl #2]
 450:	ldrb	r2, [r1]
 454:	cmp	r2, #45	; 0x2d
 458:	beq	63c <main+0x63c>
 45c:	movw	r2, #0
 460:	mov	r4, r0
 464:	movt	r2, #0
 468:	str	r1, [r2]
 46c:	b	4a4 <main+0x4a4>
 470:	movw	r0, #0
 474:	movt	r0, #0
 478:	b	49c <main+0x49c>
 47c:	movw	r0, #0
 480:	movt	r0, #0
 484:	b	49c <main+0x49c>
 488:	movw	r0, #0
 48c:	movt	r0, #0
 490:	b	49c <main+0x49c>
 494:	movw	r0, #0
 498:	movt	r0, #0
 49c:	str	r8, [r0]
 4a0:	mov	r4, sl
 4a4:	add	sl, r4, #1
 4a8:	cmp	sl, r7
 4ac:	blt	2d8 <main+0x2d8>
 4b0:	b	5d4 <main+0x5d4>
 4b4:	movw	r0, #0
 4b8:	movt	r0, #0
 4bc:	b	49c <main+0x49c>
 4c0:	movw	r0, #0
 4c4:	movt	r0, #0
 4c8:	b	49c <main+0x49c>
 4cc:	movw	r0, #0
 4d0:	movt	r0, #0
 4d4:	b	49c <main+0x49c>
 4d8:	movw	r0, #0
 4dc:	movt	r0, #0
 4e0:	b	49c <main+0x49c>
 4e4:	movw	r0, #0
 4e8:	mov	r1, #0
 4ec:	mov	r4, sl
 4f0:	movt	r0, #0
 4f4:	str	r1, [r0]
 4f8:	b	4a4 <main+0x4a4>
 4fc:	mvn	r0, #0
 500:	mov	sl, r7
 504:	mov	r9, r5
 508:	str	r0, [sp, #4]
 50c:	mov	r0, #0
 510:	mov	r6, r0
 514:	add	r0, r4, #1
 518:	mov	r8, r4
 51c:	cmp	r0, sl
 520:	bge	584 <main+0x584>
 524:	add	r5, r9, r8, lsl #2
 528:	movw	r1, #0
 52c:	movt	r1, #0
 530:	ldr	r7, [r5, #4]
 534:	mov	r0, r7
 538:	bl	0 <strcmp>
 53c:	cmp	r0, #0
 540:	beq	55c <main+0x55c>
 544:	movw	r1, #0
 548:	mov	r0, r7
 54c:	movt	r1, #0
 550:	bl	0 <strcmp>
 554:	cmp	r0, #0
 558:	bne	578 <main+0x578>
 55c:	add	r4, r8, #2
 560:	cmp	r4, sl
 564:	bge	578 <main+0x578>
 568:	ldr	r0, [r5, #8]
 56c:	ldrb	r1, [r0]
 570:	cmp	r1, #45	; 0x2d
 574:	bne	510 <main+0x510>
 578:	ldrb	r0, [r7]
 57c:	cmp	r0, #45	; 0x2d
 580:	beq	69c <main+0x69c>
 584:	sub	r0, sl, #4
 588:	cmp	r0, r8
 58c:	bne	69c <main+0x69c>
 590:	add	r0, r9, r8, lsl #2
 594:	movw	r1, #0
 598:	add	r2, sp, #4
 59c:	movt	r1, #0
 5a0:	ldmib	r0, {r4, r5}
 5a4:	ldr	r0, [r0, #12]
 5a8:	bl	0 <__isoc99_sscanf>
 5ac:	cmp	r0, #1
 5b0:	bne	734 <main+0x734>
 5b4:	ldr	r3, [sp, #4]
 5b8:	mov	r0, r6
 5bc:	mov	r1, r4
 5c0:	mov	r2, r5
 5c4:	bl	0 <generate_xmlschema>
 5c8:	b	62c <main+0x62c>
 5cc:	mov	r8, #0
 5d0:	b	5e0 <main+0x5e0>
 5d4:	mov	r6, #0
 5d8:	mov	r8, #0
 5dc:	mvn	r2, #0
 5e0:	mov	r0, r6
 5e4:	mov	r1, r8
 5e8:	bl	0 <generate_list>
 5ec:	b	62c <main+0x62c>
 5f0:	ldr	r0, [r5, #8]
 5f4:	bl	0 <coda_set_definition_path>
 5f8:	mov	r4, #3
 5fc:	b	150 <main+0x150>
 600:	sub	r0, r7, #1
 604:	add	r1, r4, #1
 608:	cmp	r1, r0
 60c:	bne	69c <main+0x69c>
 610:	ldr	r0, [r5, r0, lsl #2]
 614:	mov	r1, sp
 618:	bl	0 <coda_format_from_string>
 61c:	cmp	r0, #0
 620:	bne	69c <main+0x69c>
 624:	ldr	r0, [sp]
 628:	bl	0 <generate_detection_tree>
 62c:	bl	0 <coda_done>
 630:	mov	r0, #0
 634:	sub	sp, fp, #28
 638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 63c:	ldrb	r0, [r6]
 640:	cmp	r0, #45	; 0x2d
 644:	beq	69c <main+0x69c>
 648:	add	r0, r4, #2
 64c:	mov	r8, #0
 650:	mvn	r2, #0
 654:	cmp	r0, r7
 658:	bge	5e0 <main+0x5e0>
 65c:	ldr	r8, [r5, r0, lsl #2]
 660:	add	r0, r4, #3
 664:	cmp	r0, r7
 668:	bge	5e0 <main+0x5e0>
 66c:	ldr	r0, [r5, r0, lsl #2]
 670:	movw	r1, #0
 674:	add	r2, sp, #8
 678:	movt	r1, #0
 67c:	bl	0 <__isoc99_sscanf>
 680:	cmp	r0, #1
 684:	bne	734 <main+0x734>
 688:	add	r0, r4, #4
 68c:	cmp	r0, r7
 690:	blt	69c <main+0x69c>
 694:	ldr	r2, [sp, #8]
 698:	b	5e0 <main+0x5e0>
 69c:	movw	r0, #0
 6a0:	mov	r1, #25
 6a4:	movt	r0, #0
 6a8:	ldr	r3, [r0]
 6ac:	movw	r0, #0
 6b0:	movt	r0, #0
 6b4:	mov	r2, #1
 6b8:	bl	0 <fwrite>
 6bc:	bl	75c <print_help>
 6c0:	mov	r0, #1
 6c4:	bl	0 <exit>
 6c8:	bl	75c <print_help>
 6cc:	mov	r0, #0
 6d0:	bl	0 <exit>
 6d4:	bl	ab0 <print_version>
 6d8:	mov	r0, #0
 6dc:	bl	0 <exit>
 6e0:	ldr	r0, [pc, #112]	; 758 <main+0x758>
 6e4:	ldr	r1, [pc, r0]
 6e8:	b	700 <main+0x700>
 6ec:	bl	0 <coda_done>
 6f0:	mov	r0, #0
 6f4:	bl	0 <exit>
 6f8:	ldr	r0, [pc, #80]	; 750 <main+0x750>
 6fc:	ldr	r1, [pc, r0]
 700:	bl	0 <__aeabi_read_tp>
 704:	ldr	r0, [r0, r1]
 708:	movw	r1, #0
 70c:	movt	r1, #0
 710:	ldr	r4, [r1]
 714:	bl	0 <coda_errno_to_string>
 718:	movw	r1, #0
 71c:	mov	r2, r0
 720:	mov	r0, r4
 724:	movt	r1, #0
 728:	bl	0 <fprintf>
 72c:	mov	r0, #1
 730:	bl	0 <exit>
 734:	movw	r0, #0
 738:	mov	r1, #40	; 0x28
 73c:	movt	r0, #0
 740:	ldr	r3, [r0]
 744:	movw	r0, #0
 748:	movt	r0, #0
 74c:	b	6b4 <main+0x6b4>
 750:	.word	0x0000004c
 754:	.word	0x000005f4
 758:	.word	0x0000006c

0000075c <print_help>:
 75c:	push	{r4, r5, fp, lr}
 760:	add	fp, sp, #8
 764:	movw	r0, #0
 768:	movt	r0, #0
 76c:	bl	0 <puts>
 770:	movw	r0, #0
 774:	movt	r0, #0
 778:	bl	0 <puts>
 77c:	movw	r0, #0
 780:	movt	r0, #0
 784:	bl	0 <puts>
 788:	mov	r0, #10
 78c:	bl	0 <putchar>
 790:	movw	r0, #0
 794:	movt	r0, #0
 798:	bl	0 <puts>
 79c:	movw	r0, #0
 7a0:	movt	r0, #0
 7a4:	bl	0 <puts>
 7a8:	mov	r0, #10
 7ac:	bl	0 <putchar>
 7b0:	movw	r0, #0
 7b4:	movt	r0, #0
 7b8:	bl	0 <puts>
 7bc:	movw	r0, #0
 7c0:	movt	r0, #0
 7c4:	bl	0 <puts>
 7c8:	movw	r0, #0
 7cc:	movt	r0, #0
 7d0:	bl	0 <puts>
 7d4:	movw	r0, #0
 7d8:	movt	r0, #0
 7dc:	bl	0 <puts>
 7e0:	movw	r0, #0
 7e4:	movt	r0, #0
 7e8:	bl	0 <puts>
 7ec:	movw	r0, #0
 7f0:	movt	r0, #0
 7f4:	bl	0 <puts>
 7f8:	movw	r0, #0
 7fc:	movt	r0, #0
 800:	bl	0 <puts>
 804:	movw	r0, #0
 808:	movt	r0, #0
 80c:	bl	0 <puts>
 810:	movw	r0, #0
 814:	movt	r0, #0
 818:	bl	0 <puts>
 81c:	movw	r0, #0
 820:	movt	r0, #0
 824:	bl	0 <puts>
 828:	movw	r0, #0
 82c:	movt	r0, #0
 830:	bl	0 <puts>
 834:	movw	r0, #0
 838:	movt	r0, #0
 83c:	bl	0 <puts>
 840:	movw	r0, #0
 844:	movt	r0, #0
 848:	bl	0 <puts>
 84c:	movw	r0, #0
 850:	movt	r0, #0
 854:	bl	0 <puts>
 858:	movw	r0, #0
 85c:	movt	r0, #0
 860:	bl	0 <puts>
 864:	movw	r0, #0
 868:	movt	r0, #0
 86c:	bl	0 <puts>
 870:	movw	r0, #0
 874:	movt	r0, #0
 878:	bl	0 <puts>
 87c:	movw	r0, #0
 880:	movt	r0, #0
 884:	bl	0 <puts>
 888:	movw	r0, #0
 88c:	movt	r0, #0
 890:	bl	0 <puts>
 894:	movw	r0, #0
 898:	movt	r0, #0
 89c:	bl	0 <puts>
 8a0:	movw	r0, #0
 8a4:	movt	r0, #0
 8a8:	bl	0 <puts>
 8ac:	movw	r0, #0
 8b0:	movt	r0, #0
 8b4:	bl	0 <puts>
 8b8:	movw	r0, #0
 8bc:	movt	r0, #0
 8c0:	bl	0 <puts>
 8c4:	movw	r0, #0
 8c8:	movt	r0, #0
 8cc:	bl	0 <puts>
 8d0:	movw	r0, #0
 8d4:	movt	r0, #0
 8d8:	bl	0 <puts>
 8dc:	movw	r0, #0
 8e0:	movt	r0, #0
 8e4:	bl	0 <puts>
 8e8:	movw	r0, #0
 8ec:	movt	r0, #0
 8f0:	bl	0 <puts>
 8f4:	movw	r0, #0
 8f8:	movt	r0, #0
 8fc:	bl	0 <puts>
 900:	movw	r0, #0
 904:	movt	r0, #0
 908:	bl	0 <puts>
 90c:	mov	r0, #10
 910:	bl	0 <putchar>
 914:	movw	r0, #0
 918:	movt	r0, #0
 91c:	bl	0 <puts>
 920:	movw	r0, #0
 924:	movt	r0, #0
 928:	bl	0 <puts>
 92c:	movw	r0, #0
 930:	movt	r0, #0
 934:	bl	0 <puts>
 938:	movw	r0, #0
 93c:	movt	r0, #0
 940:	bl	0 <puts>
 944:	movw	r0, #0
 948:	movt	r0, #0
 94c:	bl	0 <puts>
 950:	movw	r0, #0
 954:	movt	r0, #0
 958:	bl	0 <puts>
 95c:	movw	r4, #0
 960:	movt	r4, #0
 964:	mov	r0, r4
 968:	bl	0 <puts>
 96c:	movw	r5, #0
 970:	movt	r5, #0
 974:	mov	r0, r5
 978:	bl	0 <puts>
 97c:	mov	r0, #10
 980:	bl	0 <putchar>
 984:	movw	r0, #0
 988:	movt	r0, #0
 98c:	bl	0 <puts>
 990:	movw	r0, #0
 994:	movt	r0, #0
 998:	bl	0 <puts>
 99c:	movw	r0, #0
 9a0:	movt	r0, #0
 9a4:	bl	0 <puts>
 9a8:	movw	r0, #0
 9ac:	movt	r0, #0
 9b0:	bl	0 <puts>
 9b4:	movw	r0, #0
 9b8:	movt	r0, #0
 9bc:	bl	0 <puts>
 9c0:	mov	r0, r4
 9c4:	bl	0 <puts>
 9c8:	mov	r0, r5
 9cc:	bl	0 <puts>
 9d0:	mov	r0, #10
 9d4:	bl	0 <putchar>
 9d8:	movw	r0, #0
 9dc:	movt	r0, #0
 9e0:	bl	0 <puts>
 9e4:	movw	r0, #0
 9e8:	movt	r0, #0
 9ec:	bl	0 <puts>
 9f0:	movw	r0, #0
 9f4:	movt	r0, #0
 9f8:	bl	0 <puts>
 9fc:	movw	r0, #0
 a00:	movt	r0, #0
 a04:	bl	0 <puts>
 a08:	mov	r0, #10
 a0c:	bl	0 <putchar>
 a10:	movw	r0, #0
 a14:	movt	r0, #0
 a18:	bl	0 <puts>
 a1c:	movw	r0, #0
 a20:	movt	r0, #0
 a24:	bl	0 <puts>
 a28:	mov	r0, #10
 a2c:	bl	0 <putchar>
 a30:	movw	r0, #0
 a34:	movt	r0, #0
 a38:	bl	0 <puts>
 a3c:	movw	r0, #0
 a40:	movt	r0, #0
 a44:	bl	0 <puts>
 a48:	mov	r0, #10
 a4c:	bl	0 <putchar>
 a50:	movw	r0, #0
 a54:	movt	r0, #0
 a58:	bl	0 <puts>
 a5c:	movw	r0, #0
 a60:	movt	r0, #0
 a64:	bl	0 <puts>
 a68:	movw	r0, #0
 a6c:	movt	r0, #0
 a70:	bl	0 <puts>
 a74:	movw	r0, #0
 a78:	movt	r0, #0
 a7c:	bl	0 <puts>
 a80:	movw	r0, #0
 a84:	movt	r0, #0
 a88:	bl	0 <puts>
 a8c:	movw	r0, #0
 a90:	movt	r0, #0
 a94:	bl	0 <puts>
 a98:	movw	r0, #0
 a9c:	movt	r0, #0
 aa0:	bl	0 <puts>
 aa4:	mov	r0, #10
 aa8:	pop	{r4, r5, fp, lr}
 aac:	b	0 <putchar>

00000ab0 <print_version>:
 ab0:	push	{fp, lr}
 ab4:	mov	fp, sp
 ab8:	ldr	r0, [pc, #44]	; aec <print_version+0x3c>
 abc:	ldr	r1, [pc, r0]
 ac0:	bl	0 <__aeabi_read_tp>
 ac4:	ldr	r1, [r0, r1]
 ac8:	movw	r0, #0
 acc:	movt	r0, #0
 ad0:	bl	0 <printf>
 ad4:	movw	r0, #0
 ad8:	movt	r0, #0
 adc:	bl	0 <puts>
 ae0:	mov	r0, #10
 ae4:	pop	{fp, lr}
 ae8:	b	0 <putchar>
 aec:	.word	0x00000028
