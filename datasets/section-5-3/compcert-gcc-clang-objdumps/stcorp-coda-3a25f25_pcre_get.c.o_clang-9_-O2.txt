
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_get.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_get_stringnumber>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #12
   c:	mov	sl, r1
  10:	add	r3, sp, #4
  14:	mov	r1, #0
  18:	mov	r2, #8
  1c:	mov	r5, r0
  20:	bl	0 <coda_pcre_fullinfo>
  24:	cmp	r0, #0
  28:	bne	70 <coda_pcre_get_stringnumber+0x70>
  2c:	ldr	r0, [sp, #4]
  30:	cmp	r0, #1
  34:	blt	cc <coda_pcre_get_stringnumber+0xcc>
  38:	add	r3, sp, #8
  3c:	mov	r0, r5
  40:	mov	r1, #0
  44:	mov	r2, #7
  48:	bl	0 <coda_pcre_fullinfo>
  4c:	cmp	r0, #0
  50:	bne	70 <coda_pcre_get_stringnumber+0x70>
  54:	mov	r3, sp
  58:	mov	r0, r5
  5c:	mov	r1, #0
  60:	mov	r2, #9
  64:	bl	0 <coda_pcre_fullinfo>
  68:	cmp	r0, #0
  6c:	beq	78 <coda_pcre_get_stringnumber+0x78>
  70:	sub	sp, fp, #28
  74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  78:	ldr	r6, [sp, #4]
  7c:	cmp	r6, #1
  80:	blt	cc <coda_pcre_get_stringnumber+0xcc>
  84:	ldr	r8, [sp, #8]
  88:	ldr	r9, [sp]
  8c:	mov	r7, #0
  90:	add	r0, r6, r7
  94:	add	r0, r0, r0, lsr #31
  98:	asr	r5, r0, #1
  9c:	mov	r0, sl
  a0:	mla	r4, r8, r5, r9
  a4:	add	r1, r4, #2
  a8:	bl	0 <strcmp>
  ac:	cmp	r0, #0
  b0:	beq	d8 <coda_pcre_get_stringnumber+0xd8>
  b4:	cmp	r0, #1
  b8:	movlt	r6, r5
  bc:	addge	r7, r5, #1
  c0:	strlt	r5, [sp, #4]
  c4:	cmp	r6, r7
  c8:	bgt	90 <coda_pcre_get_stringnumber+0x90>
  cc:	mvn	r0, #6
  d0:	sub	sp, fp, #28
  d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  d8:	ldrb	r0, [r4]
  dc:	ldrb	r1, [r4, #1]
  e0:	orr	r0, r1, r0, lsl #8
  e4:	sub	sp, fp, #28
  e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000000ec <coda_pcre_get_stringtable_entries>:
  ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  f0:	add	fp, sp, #28
  f4:	sub	sp, sp, #28
  f8:	mov	r8, r3
  fc:	mov	r5, r2
 100:	mov	r9, r1
 104:	add	r3, sp, #20
 108:	mov	r1, #0
 10c:	mov	r2, #8
 110:	mov	r4, r0
 114:	bl	0 <coda_pcre_fullinfo>
 118:	mov	r7, r0
 11c:	cmp	r0, #0
 120:	bne	1d4 <coda_pcre_get_stringtable_entries+0xe8>
 124:	ldr	r0, [sp, #20]
 128:	cmp	r0, #1
 12c:	blt	1d0 <coda_pcre_get_stringtable_entries+0xe4>
 130:	add	r3, sp, #24
 134:	mov	r0, r4
 138:	mov	r1, #0
 13c:	mov	r2, #7
 140:	bl	0 <coda_pcre_fullinfo>
 144:	mov	r7, r0
 148:	cmp	r0, #0
 14c:	bne	1d4 <coda_pcre_get_stringtable_entries+0xe8>
 150:	add	r3, sp, #16
 154:	mov	r0, r4
 158:	mov	r1, #0
 15c:	mov	r2, #9
 160:	bl	0 <coda_pcre_fullinfo>
 164:	mov	r7, r0
 168:	cmp	r0, #0
 16c:	bne	1d4 <coda_pcre_get_stringtable_entries+0xe8>
 170:	ldr	r6, [sp, #20]
 174:	subs	r0, r6, #1
 178:	blt	1d0 <coda_pcre_get_stringtable_entries+0xe4>
 17c:	ldr	sl, [sp, #16]
 180:	ldr	r7, [sp, #24]
 184:	stm	sp, {r5, r8}
 188:	mov	r8, #0
 18c:	mla	r0, r0, r7, sl
 190:	str	r0, [sp, #12]
 194:	add	r0, r6, r8
 198:	add	r0, r0, r0, lsr #31
 19c:	asr	r5, r0, #1
 1a0:	mla	r0, r5, r7, sl
 1a4:	add	r1, r0, #2
 1a8:	mov	r0, r9
 1ac:	bl	0 <strcmp>
 1b0:	cmp	r0, #0
 1b4:	beq	1e0 <coda_pcre_get_stringtable_entries+0xf4>
 1b8:	cmp	r0, #1
 1bc:	movlt	r6, r5
 1c0:	addge	r8, r5, #1
 1c4:	strlt	r5, [sp, #20]
 1c8:	cmp	r6, r8
 1cc:	bgt	194 <coda_pcre_get_stringtable_entries+0xa8>
 1d0:	mvn	r7, #6
 1d4:	mov	r0, r7
 1d8:	sub	sp, fp, #28
 1dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1e0:	sub	r0, r5, #1
 1e4:	mul	r6, r7, r5
 1e8:	rsb	r8, r7, #0
 1ec:	mov	r1, sl
 1f0:	mul	r0, r7, r0
 1f4:	add	r0, r0, #2
 1f8:	str	r0, [sp, #8]
 1fc:	add	r0, r1, r6
 200:	mov	r4, r1
 204:	cmp	r0, sl
 208:	bls	228 <coda_pcre_get_stringtable_entries+0x13c>
 20c:	ldr	r0, [sp, #8]
 210:	add	r1, r4, r0
 214:	mov	r0, r9
 218:	bl	0 <strcmp>
 21c:	add	r1, r4, r8
 220:	cmp	r0, #0
 224:	beq	1fc <coda_pcre_get_stringtable_entries+0x110>
 228:	mla	r0, r7, r5, r4
 22c:	str	r0, [sp, #8]
 230:	add	r0, r5, #1
 234:	mul	r0, r7, r0
 238:	add	r8, r0, #2
 23c:	ldr	r1, [sp, #12]
 240:	add	r0, sl, r6
 244:	mov	r4, sl
 248:	cmp	r0, r1
 24c:	bcs	268 <coda_pcre_get_stringtable_entries+0x17c>
 250:	add	r1, r4, r8
 254:	mov	r0, r9
 258:	bl	0 <strcmp>
 25c:	add	sl, r4, r7
 260:	cmp	r0, #0
 264:	beq	23c <coda_pcre_get_stringtable_entries+0x150>
 268:	ldr	r0, [sp]
 26c:	ldr	r1, [sp, #8]
 270:	str	r1, [r0]
 274:	ldr	r1, [sp, #4]
 278:	mla	r0, r7, r5, r4
 27c:	str	r0, [r1]
 280:	b	1d4 <coda_pcre_get_stringtable_entries+0xe8>

00000284 <coda_pcre_copy_substring>:
 284:	push	{r4, r5, fp, lr}
 288:	add	fp, sp, #8
 28c:	mvn	r4, #6
 290:	cmp	r3, #0
 294:	bmi	2e4 <coda_pcre_copy_substring+0x60>
 298:	cmp	r3, r2
 29c:	bge	2e4 <coda_pcre_copy_substring+0x60>
 2a0:	mov	r5, #4
 2a4:	ldr	r2, [r1, r3, lsl #3]
 2a8:	ldr	ip, [fp, #12]
 2ac:	mvn	r4, #5
 2b0:	orr	r3, r5, r3, lsl #3
 2b4:	ldr	r1, [r1, r3]
 2b8:	sub	r5, r1, r2
 2bc:	cmp	r5, ip
 2c0:	bge	2e4 <coda_pcre_copy_substring+0x60>
 2c4:	ldr	r4, [fp, #8]
 2c8:	add	r1, r0, r2
 2cc:	mov	r2, r5
 2d0:	mov	r0, r4
 2d4:	bl	0 <memcpy>
 2d8:	mov	r0, #0
 2dc:	strb	r0, [r4, r5]
 2e0:	mov	r4, r5
 2e4:	mov	r0, r4
 2e8:	pop	{r4, r5, fp, pc}

000002ec <coda_pcre_copy_named_substring>:
 2ec:	push	{r4, r5, r6, r7, fp, lr}
 2f0:	add	fp, sp, #16
 2f4:	sub	sp, sp, #8
 2f8:	mov	r5, r2
 2fc:	ldrb	r2, [r0, #10]
 300:	mov	r7, r1
 304:	ldr	r1, [fp, #8]
 308:	mov	r6, r3
 30c:	tst	r2, #8
 310:	bne	334 <coda_pcre_copy_named_substring+0x48>
 314:	ldrb	r2, [r0, #13]
 318:	tst	r2, #4
 31c:	bne	334 <coda_pcre_copy_named_substring+0x48>
 320:	bl	0 <coda_pcre_get_stringnumber>
 324:	mov	r1, r0
 328:	cmp	r1, #1
 32c:	bge	38c <coda_pcre_copy_named_substring+0xa0>
 330:	b	3e4 <coda_pcre_copy_named_substring+0xf8>
 334:	add	r2, sp, #4
 338:	mov	r3, sp
 33c:	bl	ec <coda_pcre_get_stringtable_entries>
 340:	cmp	r0, #0
 344:	ble	3dc <coda_pcre_copy_named_substring+0xf0>
 348:	ldr	r2, [sp, #4]
 34c:	ldrb	r1, [r2]
 350:	ldrb	r3, [r2, #1]
 354:	orr	r1, r3, r1, lsl #8
 358:	ldr	r3, [sp]
 35c:	cmp	r2, r3
 360:	bhi	384 <coda_pcre_copy_named_substring+0x98>
 364:	ldr	r4, [r5, r1, lsl #3]
 368:	cmn	r4, #1
 36c:	bgt	384 <coda_pcre_copy_named_substring+0x98>
 370:	ldrb	r1, [r2, r0]!
 374:	ldrb	r4, [r2, #1]
 378:	orr	r1, r4, r1, lsl #8
 37c:	cmp	r2, r3
 380:	bls	364 <coda_pcre_copy_named_substring+0x78>
 384:	cmp	r1, #1
 388:	blt	3e4 <coda_pcre_copy_named_substring+0xf8>
 38c:	mvn	r0, #6
 390:	cmp	r1, r6
 394:	bge	3dc <coda_pcre_copy_named_substring+0xf0>
 398:	mov	r0, #4
 39c:	ldr	r2, [r5, r1, lsl #3]
 3a0:	ldr	r3, [fp, #16]
 3a4:	orr	r0, r0, r1, lsl #3
 3a8:	ldr	r0, [r5, r0]
 3ac:	sub	r5, r0, r2
 3b0:	mvn	r0, #5
 3b4:	cmp	r5, r3
 3b8:	bge	3dc <coda_pcre_copy_named_substring+0xf0>
 3bc:	ldr	r6, [fp, #12]
 3c0:	add	r1, r7, r2
 3c4:	mov	r2, r5
 3c8:	mov	r0, r6
 3cc:	bl	0 <memcpy>
 3d0:	mov	r0, #0
 3d4:	strb	r0, [r6, r5]
 3d8:	mov	r0, r5
 3dc:	sub	sp, fp, #16
 3e0:	pop	{r4, r5, r6, r7, fp, pc}
 3e4:	mov	r0, r1
 3e8:	sub	sp, fp, #16
 3ec:	pop	{r4, r5, r6, r7, fp, pc}

000003f0 <coda_pcre_get_substring_list>:
 3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3f4:	add	fp, sp, #28
 3f8:	sub	sp, sp, #4
 3fc:	mov	r8, r3
 400:	mov	r6, r2
 404:	mov	sl, r1
 408:	mov	r5, r0
 40c:	lsl	r4, r2, #1
 410:	cmp	r2, #1
 414:	blt	444 <coda_pcre_get_substring_list+0x54>
 418:	cmp	r4, #2
 41c:	mov	r0, #2
 420:	mov	r1, #1
 424:	lslgt	r0, r6, #1
 428:	sub	r0, r0, #1
 42c:	add	r2, r1, r0, lsr #1
 430:	cmp	r2, #4
 434:	bcs	44c <coda_pcre_get_substring_list+0x5c>
 438:	mov	r0, #4
 43c:	mov	r1, #0
 440:	b	49c <coda_pcre_get_substring_list+0xac>
 444:	mov	r0, #4
 448:	b	4c0 <coda_pcre_get_substring_list+0xd0>
 44c:	add	r0, pc, #252	; 0xfc
 450:	vmov.i32	q9, #5	; 0x00000005
 454:	bic	r3, r2, #-2147483645	; 0x80000003
 458:	mov	r7, sl
 45c:	vld1.64	{d16-d17}, [r0 :128]
 460:	lsl	r1, r3, #1
 464:	mov	r0, r3
 468:	vld2.32	{d20-d23}, [r7]!
 46c:	vadd.i32	q8, q8, q11
 470:	subs	r0, r0, #4
 474:	vsub.i32	q8, q8, q10
 478:	vadd.i32	q8, q8, q9
 47c:	bne	468 <coda_pcre_get_substring_list+0x78>
 480:	vext.8	q9, q8, q8, #8
 484:	cmp	r2, r3
 488:	vadd.i32	q8, q8, q9
 48c:	vdup.32	q9, d16[1]
 490:	vadd.i32	q8, q8, q9
 494:	vmov.32	r0, d16[0]
 498:	beq	4c0 <coda_pcre_get_substring_list+0xd0>
 49c:	mov	r2, sl
 4a0:	ldr	r3, [r2, r1, lsl #2]!
 4a4:	add	r1, r1, #2
 4a8:	cmp	r1, r4
 4ac:	ldr	r2, [r2, #4]
 4b0:	add	r0, r0, r2
 4b4:	sub	r0, r0, r3
 4b8:	add	r0, r0, #5
 4bc:	blt	49c <coda_pcre_get_substring_list+0xac>
 4c0:	movw	r1, #0
 4c4:	movt	r1, #0
 4c8:	ldr	r1, [r1]
 4cc:	blx	r1
 4d0:	cmp	r0, #0
 4d4:	beq	544 <coda_pcre_get_substring_list+0x154>
 4d8:	mov	r7, r0
 4dc:	cmp	r6, #1
 4e0:	str	r0, [r8]
 4e4:	blt	534 <coda_pcre_get_substring_list+0x144>
 4e8:	add	r0, r7, r6, lsl #2
 4ec:	mov	r9, #0
 4f0:	mov	r8, r5
 4f4:	add	r6, r0, #4
 4f8:	mov	r0, sl
 4fc:	ldr	r1, [r0, r9, lsl #2]!
 500:	ldr	r0, [r0, #4]
 504:	sub	r5, r0, r1
 508:	add	r1, r8, r1
 50c:	mov	r0, r6
 510:	mov	r2, r5
 514:	bl	0 <memcpy>
 518:	mov	r0, #0
 51c:	str	r6, [r7], #4
 520:	add	r9, r9, #2
 524:	strb	r0, [r6, r5]!
 528:	cmp	r9, r4
 52c:	add	r6, r6, #1
 530:	blt	4f8 <coda_pcre_get_substring_list+0x108>
 534:	mov	r0, #0
 538:	str	r0, [r7]
 53c:	sub	sp, fp, #28
 540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 544:	mvn	r0, #5
 548:	sub	sp, fp, #28
 54c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 550:	.word	0x00000004
	...

00000560 <coda_pcre_free_substring_list>:
 560:	movw	r1, #0
 564:	movt	r1, #0
 568:	ldr	r1, [r1]
 56c:	bx	r1

00000570 <coda_pcre_get_substring>:
 570:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 574:	add	fp, sp, #24
 578:	mvn	r4, #6
 57c:	cmp	r3, #0
 580:	bmi	5f4 <coda_pcre_get_substring+0x84>
 584:	mov	r7, r3
 588:	cmp	r3, r2
 58c:	bge	5f4 <coda_pcre_get_substring+0x84>
 590:	mov	r8, r0
 594:	mov	r6, r1
 598:	ldr	r0, [r1, r7, lsl #3]
 59c:	mov	r1, #4
 5a0:	orr	r1, r1, r7, lsl #3
 5a4:	ldr	r1, [r6, r1]
 5a8:	sub	r4, r1, r0
 5ac:	movw	r1, #0
 5b0:	movt	r1, #0
 5b4:	add	r0, r4, #1
 5b8:	ldr	r1, [r1]
 5bc:	blx	r1
 5c0:	cmp	r0, #0
 5c4:	beq	5fc <coda_pcre_get_substring+0x8c>
 5c8:	mov	r5, r0
 5cc:	lsl	r0, r7, #1
 5d0:	ldr	r9, [fp, #8]
 5d4:	mov	r2, r4
 5d8:	ldr	r0, [r6, r0, lsl #2]
 5dc:	add	r1, r8, r0
 5e0:	mov	r0, r5
 5e4:	bl	0 <memcpy>
 5e8:	mov	r0, #0
 5ec:	strb	r0, [r5, r4]
 5f0:	str	r5, [r9]
 5f4:	mov	r0, r4
 5f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 5fc:	mvn	r4, #5
 600:	mov	r0, r4
 604:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00000608 <coda_pcre_get_named_substring>:
 608:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 60c:	add	fp, sp, #24
 610:	sub	sp, sp, #8
 614:	mov	r5, r2
 618:	ldrb	r2, [r0, #10]
 61c:	mov	r8, r1
 620:	ldr	r1, [fp, #8]
 624:	mov	r6, r3
 628:	tst	r2, #8
 62c:	bne	650 <coda_pcre_get_named_substring+0x48>
 630:	ldrb	r2, [r0, #13]
 634:	tst	r2, #4
 638:	bne	650 <coda_pcre_get_named_substring+0x48>
 63c:	bl	0 <coda_pcre_get_stringnumber>
 640:	mov	r7, r0
 644:	cmp	r7, #1
 648:	bge	6ac <coda_pcre_get_named_substring+0xa4>
 64c:	b	718 <coda_pcre_get_named_substring+0x110>
 650:	add	r2, sp, #4
 654:	mov	r3, sp
 658:	bl	ec <coda_pcre_get_stringtable_entries>
 65c:	mov	r4, r0
 660:	cmp	r0, #0
 664:	ble	724 <coda_pcre_get_named_substring+0x11c>
 668:	ldr	r0, [sp, #4]
 66c:	ldrb	r1, [r0]
 670:	ldrb	r2, [r0, #1]
 674:	orr	r7, r2, r1, lsl #8
 678:	ldr	r1, [sp]
 67c:	cmp	r0, r1
 680:	bhi	6a4 <coda_pcre_get_named_substring+0x9c>
 684:	ldr	r2, [r5, r7, lsl #3]
 688:	cmn	r2, #1
 68c:	bgt	6a4 <coda_pcre_get_named_substring+0x9c>
 690:	ldrb	r2, [r0, r4]!
 694:	ldrb	r3, [r0, #1]
 698:	orr	r7, r3, r2, lsl #8
 69c:	cmp	r0, r1
 6a0:	bls	684 <coda_pcre_get_named_substring+0x7c>
 6a4:	cmp	r7, #1
 6a8:	blt	718 <coda_pcre_get_named_substring+0x110>
 6ac:	mvn	r4, #6
 6b0:	cmp	r7, r6
 6b4:	bge	724 <coda_pcre_get_named_substring+0x11c>
 6b8:	mov	r1, #4
 6bc:	ldr	r0, [r5, r7, lsl #3]
 6c0:	orr	r1, r1, r7, lsl #3
 6c4:	ldr	r1, [r5, r1]
 6c8:	sub	r4, r1, r0
 6cc:	movw	r1, #0
 6d0:	movt	r1, #0
 6d4:	add	r0, r4, #1
 6d8:	ldr	r1, [r1]
 6dc:	blx	r1
 6e0:	cmp	r0, #0
 6e4:	beq	720 <coda_pcre_get_named_substring+0x118>
 6e8:	mov	r6, r0
 6ec:	lsl	r0, r7, #1
 6f0:	ldr	r9, [fp, #12]
 6f4:	mov	r2, r4
 6f8:	ldr	r0, [r5, r0, lsl #2]
 6fc:	add	r1, r8, r0
 700:	mov	r0, r6
 704:	bl	0 <memcpy>
 708:	mov	r0, #0
 70c:	strb	r0, [r6, r4]
 710:	str	r6, [r9]
 714:	b	724 <coda_pcre_get_named_substring+0x11c>
 718:	mov	r4, r7
 71c:	b	724 <coda_pcre_get_named_substring+0x11c>
 720:	mvn	r4, #5
 724:	mov	r0, r4
 728:	sub	sp, fp, #24
 72c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00000730 <coda_pcre_free_substring>:
 730:	movw	r1, #0
 734:	movt	r1, #0
 738:	ldr	r1, [r1]
 73c:	bx	r1
