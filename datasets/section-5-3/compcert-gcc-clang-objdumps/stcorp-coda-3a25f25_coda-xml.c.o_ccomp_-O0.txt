
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-xml.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_xml_reopen>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp, #4]
   c:	str	lr, [sp, #8]
  10:	str	r4, [sp, #16]
  14:	str	r5, [sp, #20]
  18:	mov	r5, r0
  1c:	mov	r0, #56	; 0x38
  20:	bl	0 <malloc>
  24:	mov	r4, r0
  28:	cmp	r4, #0
  2c:	bne	5c <coda_xml_reopen+0x5c>
  30:	mvn	r0, #0
  34:	ldr	r1, [pc, #256]	; 13c <coda_xml_reopen+0x13c>
  38:	mov	r2, #56	; 0x38
  3c:	ldr	r3, [pc, #252]	; 140 <coda_xml_reopen+0x140>
  40:	mov	ip, #53	; 0x35
  44:	str	ip, [sp]
  48:	bl	0 <coda_set_error>
  4c:	ldr	r0, [r5]
  50:	bl	0 <coda_close>
  54:	mvn	r0, #0
  58:	b	128 <coda_xml_reopen+0x128>
  5c:	mov	r0, #0
  60:	str	r0, [r4]
  64:	ldr	r1, [r5]
  68:	ldr	r3, [r1, #8]
  6c:	ldr	r1, [r1, #12]
  70:	str	r3, [r4, #8]
  74:	str	r1, [r4, #12]
  78:	mov	r0, #2
  7c:	str	r0, [r4, #16]
  80:	mov	r3, #0
  84:	str	r3, [r4, #20]
  88:	mov	ip, #0
  8c:	str	ip, [r4, #24]
  90:	mov	r1, #0
  94:	str	r1, [r4, #28]
  98:	mov	r3, #0
  9c:	str	r3, [r4, #32]
  a0:	mov	r1, #0
  a4:	mov	r0, #0
  a8:	str	r0, [r4, #40]	; 0x28
  ac:	str	r1, [r4, #44]	; 0x2c
  b0:	mov	r2, #0
  b4:	str	r2, [r4, #48]	; 0x30
  b8:	ldr	ip, [r5]
  bc:	str	ip, [r4, #52]	; 0x34
  c0:	ldr	ip, [r5]
  c4:	ldr	r0, [ip]
  c8:	bl	0 <strdup>
  cc:	str	r0, [r4]
  d0:	ldr	r2, [r4]
  d4:	cmp	r2, #0
  d8:	bne	100 <coda_xml_reopen+0x100>
  dc:	mvn	r0, #0
  e0:	ldr	r1, [pc, #92]	; 144 <coda_xml_reopen+0x144>
  e4:	ldr	r2, [pc, #84]	; 140 <coda_xml_reopen+0x140>
  e8:	mov	r3, #72	; 0x48
  ec:	bl	0 <coda_set_error>
  f0:	mov	r0, r4
  f4:	bl	0 <coda_close>
  f8:	mvn	r0, #0
  fc:	b	128 <coda_xml_reopen+0x128>
 100:	mov	r0, r4
 104:	bl	0 <coda_xml_parse>
 108:	cmp	r0, #0
 10c:	beq	120 <coda_xml_reopen+0x120>
 110:	mov	r0, r4
 114:	bl	0 <coda_close>
 118:	mvn	r0, #0
 11c:	b	128 <coda_xml_reopen+0x128>
 120:	str	r4, [r5]
 124:	mov	r0, #0
 128:	ldr	r4, [sp, #16]
 12c:	ldr	r5, [sp, #20]
 130:	ldr	lr, [sp, #8]
 134:	add	sp, sp, #24
 138:	bx	lr
 13c:	.word	0x000000b9
 140:	.word	0x00000061
 144:	.word	0x000000ee

00000148 <coda_xml_reopen_with_definition>:
 148:	mov	ip, sp
 14c:	sub	sp, sp, #16
 150:	str	ip, [sp]
 154:	str	lr, [sp, #4]
 158:	str	r4, [sp, #8]
 15c:	str	r5, [sp, #12]
 160:	mov	r4, r1
 164:	ldr	r5, [r0]
 168:	cmp	r4, #0
 16c:	bne	184 <coda_xml_reopen_with_definition+0x3c>
 170:	ldr	r0, [pc, #196]	; 23c <coda_xml_reopen_with_definition+0xf4>
 174:	ldr	r1, [pc, #196]	; 240 <coda_xml_reopen_with_definition+0xf8>
 178:	mov	r2, #92	; 0x5c
 17c:	ldr	r3, [pc, #192]	; 244 <coda_xml_reopen_with_definition+0xfc>
 180:	bl	0 <__assert_fail>
 184:	ldr	ip, [r5, #16]
 188:	cmp	ip, #2
 18c:	beq	1a4 <coda_xml_reopen_with_definition+0x5c>
 190:	ldr	r0, [pc, #156]	; 234 <coda_xml_reopen_with_definition+0xec>
 194:	ldr	r1, [pc, #164]	; 240 <coda_xml_reopen_with_definition+0xf8>
 198:	mov	r2, #93	; 0x5d
 19c:	ldr	r3, [pc, #160]	; 244 <coda_xml_reopen_with_definition+0xfc>
 1a0:	bl	0 <__assert_fail>
 1a4:	ldr	r3, [r4]
 1a8:	cmp	r3, #2
 1ac:	beq	1c4 <coda_xml_reopen_with_definition+0x7c>
 1b0:	ldr	r0, [pc, #128]	; 238 <coda_xml_reopen_with_definition+0xf0>
 1b4:	ldr	r1, [pc, #132]	; 240 <coda_xml_reopen_with_definition+0xf8>
 1b8:	mov	r2, #94	; 0x5e
 1bc:	ldr	r3, [pc, #128]	; 244 <coda_xml_reopen_with_definition+0xfc>
 1c0:	bl	0 <__assert_fail>
 1c4:	ldr	r0, [r5, #20]
 1c8:	bl	0 <coda_dynamic_type_delete>
 1cc:	mov	r0, #0
 1d0:	str	r0, [r5, #20]
 1d4:	mov	r1, #0
 1d8:	mov	r0, #0
 1dc:	str	r0, [r5, #40]	; 0x28
 1e0:	str	r1, [r5, #44]	; 0x2c
 1e4:	ldr	r2, [r5, #48]	; 0x30
 1e8:	cmp	r2, #0
 1ec:	beq	200 <coda_xml_reopen_with_definition+0xb8>
 1f0:	ldr	r0, [r5, #48]	; 0x30
 1f4:	bl	0 <free>
 1f8:	mov	ip, #0
 1fc:	str	ip, [r5, #48]	; 0x30
 200:	str	r4, [r5, #24]
 204:	mov	r0, r5
 208:	bl	0 <coda_xml_parse>
 20c:	cmp	r0, #0
 210:	beq	21c <coda_xml_reopen_with_definition+0xd4>
 214:	mvn	r0, #0
 218:	b	220 <coda_xml_reopen_with_definition+0xd8>
 21c:	mov	r0, #0
 220:	ldr	r4, [sp, #8]
 224:	ldr	r5, [sp, #12]
 228:	ldr	lr, [sp, #4]
 22c:	add	sp, sp, #16
 230:	bx	lr
 234:	.word	0x00000039
 238:	.word	0x00000000
 23c:	.word	0x00000026
 240:	.word	0x00000061
 244:	.word	0x0000012a

00000248 <coda_xml_close>:
 248:	mov	ip, sp
 24c:	sub	sp, sp, #16
 250:	str	ip, [sp]
 254:	str	lr, [sp, #4]
 258:	str	r4, [sp, #8]
 25c:	mov	r4, r0
 260:	ldr	r0, [r4]
 264:	cmp	r0, #0
 268:	beq	274 <coda_xml_close+0x2c>
 26c:	ldr	r0, [r4]
 270:	bl	0 <free>
 274:	ldr	r3, [r4, #20]
 278:	cmp	r3, #0
 27c:	beq	288 <coda_xml_close+0x40>
 280:	ldr	r0, [r4, #20]
 284:	bl	0 <coda_dynamic_type_delete>
 288:	ldr	r2, [r4, #48]	; 0x30
 28c:	cmp	r2, #0
 290:	beq	29c <coda_xml_close+0x54>
 294:	ldr	r0, [r4, #48]	; 0x30
 298:	bl	0 <free>
 29c:	ldr	r1, [r4, #52]	; 0x34
 2a0:	cmp	r1, #0
 2a4:	beq	2b0 <coda_xml_close+0x68>
 2a8:	ldr	r0, [r4, #52]	; 0x34
 2ac:	bl	0 <coda_bin_close>
 2b0:	mov	r0, r4
 2b4:	bl	0 <free>
 2b8:	mov	r0, #0
 2bc:	ldr	r4, [sp, #8]
 2c0:	ldr	lr, [sp, #4]
 2c4:	add	sp, sp, #16
 2c8:	bx	lr

000002cc <coda_xml_cursor_set_product>:
 2cc:	mov	ip, sp
 2d0:	sub	sp, sp, #8
 2d4:	str	ip, [sp]
 2d8:	str	lr, [sp, #4]
 2dc:	str	r1, [r0]
 2e0:	mov	r3, #1
 2e4:	str	r3, [r0, #4]
 2e8:	ldr	r2, [r1, #20]
 2ec:	str	r2, [r0, #8]
 2f0:	mvn	ip, #0
 2f4:	str	ip, [r0, #12]
 2f8:	mov	r2, #0
 2fc:	mov	r1, #0
 300:	str	r1, [r0, #16]
 304:	str	r2, [r0, #20]
 308:	mov	r0, #0
 30c:	ldr	lr, [sp, #4]
 310:	add	sp, sp, #8
 314:	bx	lr
