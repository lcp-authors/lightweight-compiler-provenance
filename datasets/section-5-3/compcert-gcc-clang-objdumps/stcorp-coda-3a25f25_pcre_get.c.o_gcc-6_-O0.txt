
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_get.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_get_stringnumber>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #40	; 0x28
   c:	str	r0, [fp, #-40]	; 0xffffffd8
  10:	str	r1, [fp, #-44]	; 0xffffffd4
  14:	sub	r3, fp, #32
  18:	mov	r2, #8
  1c:	mov	r1, #0
  20:	ldr	r0, [fp, #-40]	; 0xffffffd8
  24:	bl	0 <coda_pcre_fullinfo>
  28:	str	r0, [fp, #-12]
  2c:	ldr	r3, [fp, #-12]
  30:	cmp	r3, #0
  34:	beq	40 <coda_pcre_get_stringnumber+0x40>
  38:	ldr	r3, [fp, #-12]
  3c:	b	168 <coda_pcre_get_stringnumber+0x168>
  40:	ldr	r3, [fp, #-32]	; 0xffffffe0
  44:	cmp	r3, #0
  48:	bgt	54 <coda_pcre_get_stringnumber+0x54>
  4c:	mvn	r3, #6
  50:	b	168 <coda_pcre_get_stringnumber+0x168>
  54:	sub	r3, fp, #28
  58:	mov	r2, #7
  5c:	mov	r1, #0
  60:	ldr	r0, [fp, #-40]	; 0xffffffd8
  64:	bl	0 <coda_pcre_fullinfo>
  68:	str	r0, [fp, #-12]
  6c:	ldr	r3, [fp, #-12]
  70:	cmp	r3, #0
  74:	beq	80 <coda_pcre_get_stringnumber+0x80>
  78:	ldr	r3, [fp, #-12]
  7c:	b	168 <coda_pcre_get_stringnumber+0x168>
  80:	sub	r3, fp, #36	; 0x24
  84:	mov	r2, #9
  88:	mov	r1, #0
  8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
  90:	bl	0 <coda_pcre_fullinfo>
  94:	str	r0, [fp, #-12]
  98:	ldr	r3, [fp, #-12]
  9c:	cmp	r3, #0
  a0:	beq	ac <coda_pcre_get_stringnumber+0xac>
  a4:	ldr	r3, [fp, #-12]
  a8:	b	168 <coda_pcre_get_stringnumber+0x168>
  ac:	mov	r3, #0
  b0:	str	r3, [fp, #-8]
  b4:	b	154 <coda_pcre_get_stringnumber+0x154>
  b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
  bc:	ldr	r3, [fp, #-8]
  c0:	add	r3, r2, r3
  c4:	lsr	r2, r3, #31
  c8:	add	r3, r2, r3
  cc:	asr	r3, r3, #1
  d0:	str	r3, [fp, #-16]
  d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
  d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
  dc:	ldr	r1, [fp, #-16]
  e0:	mul	r2, r1, r2
  e4:	add	r3, r3, r2
  e8:	str	r3, [fp, #-20]	; 0xffffffec
  ec:	ldr	r3, [fp, #-20]	; 0xffffffec
  f0:	add	r3, r3, #2
  f4:	mov	r1, r3
  f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
  fc:	bl	0 <strcmp>
 100:	str	r0, [fp, #-24]	; 0xffffffe8
 104:	ldr	r3, [fp, #-24]	; 0xffffffe8
 108:	cmp	r3, #0
 10c:	bne	130 <coda_pcre_get_stringnumber+0x130>
 110:	ldr	r3, [fp, #-20]	; 0xffffffec
 114:	ldrb	r3, [r3]
 118:	lsl	r3, r3, #8
 11c:	ldr	r2, [fp, #-20]	; 0xffffffec
 120:	add	r2, r2, #1
 124:	ldrb	r2, [r2]
 128:	orr	r3, r3, r2
 12c:	b	168 <coda_pcre_get_stringnumber+0x168>
 130:	ldr	r3, [fp, #-24]	; 0xffffffe8
 134:	cmp	r3, #0
 138:	ble	14c <coda_pcre_get_stringnumber+0x14c>
 13c:	ldr	r3, [fp, #-16]
 140:	add	r3, r3, #1
 144:	str	r3, [fp, #-8]
 148:	b	154 <coda_pcre_get_stringnumber+0x154>
 14c:	ldr	r3, [fp, #-16]
 150:	str	r3, [fp, #-32]	; 0xffffffe0
 154:	ldr	r2, [fp, #-32]	; 0xffffffe0
 158:	ldr	r3, [fp, #-8]
 15c:	cmp	r2, r3
 160:	bgt	b8 <coda_pcre_get_stringnumber+0xb8>
 164:	mvn	r3, #6
 168:	mov	r0, r3
 16c:	sub	sp, fp, #4
 170:	pop	{fp, pc}

00000174 <coda_pcre_get_stringtable_entries>:
 174:	push	{fp, lr}
 178:	add	fp, sp, #4
 17c:	sub	sp, sp, #64	; 0x40
 180:	str	r0, [fp, #-56]	; 0xffffffc8
 184:	str	r1, [fp, #-60]	; 0xffffffc4
 188:	str	r2, [fp, #-64]	; 0xffffffc0
 18c:	str	r3, [fp, #-68]	; 0xffffffbc
 190:	sub	r3, fp, #44	; 0x2c
 194:	mov	r2, #8
 198:	mov	r1, #0
 19c:	ldr	r0, [fp, #-56]	; 0xffffffc8
 1a0:	bl	0 <coda_pcre_fullinfo>
 1a4:	str	r0, [fp, #-20]	; 0xffffffec
 1a8:	ldr	r3, [fp, #-20]	; 0xffffffec
 1ac:	cmp	r3, #0
 1b0:	beq	1bc <coda_pcre_get_stringtable_entries+0x48>
 1b4:	ldr	r3, [fp, #-20]	; 0xffffffec
 1b8:	b	3c0 <coda_pcre_get_stringtable_entries+0x24c>
 1bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
 1c0:	cmp	r3, #0
 1c4:	bgt	1d0 <coda_pcre_get_stringtable_entries+0x5c>
 1c8:	mvn	r3, #6
 1cc:	b	3c0 <coda_pcre_get_stringtable_entries+0x24c>
 1d0:	sub	r3, fp, #40	; 0x28
 1d4:	mov	r2, #7
 1d8:	mov	r1, #0
 1dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
 1e0:	bl	0 <coda_pcre_fullinfo>
 1e4:	str	r0, [fp, #-20]	; 0xffffffec
 1e8:	ldr	r3, [fp, #-20]	; 0xffffffec
 1ec:	cmp	r3, #0
 1f0:	beq	1fc <coda_pcre_get_stringtable_entries+0x88>
 1f4:	ldr	r3, [fp, #-20]	; 0xffffffec
 1f8:	b	3c0 <coda_pcre_get_stringtable_entries+0x24c>
 1fc:	sub	r3, fp, #48	; 0x30
 200:	mov	r2, #9
 204:	mov	r1, #0
 208:	ldr	r0, [fp, #-56]	; 0xffffffc8
 20c:	bl	0 <coda_pcre_fullinfo>
 210:	str	r0, [fp, #-20]	; 0xffffffec
 214:	ldr	r3, [fp, #-20]	; 0xffffffec
 218:	cmp	r3, #0
 21c:	beq	228 <coda_pcre_get_stringtable_entries+0xb4>
 220:	ldr	r3, [fp, #-20]	; 0xffffffec
 224:	b	3c0 <coda_pcre_get_stringtable_entries+0x24c>
 228:	ldr	r3, [fp, #-48]	; 0xffffffd0
 22c:	ldr	r2, [fp, #-44]	; 0xffffffd4
 230:	sub	r2, r2, #1
 234:	ldr	r1, [fp, #-40]	; 0xffffffd8
 238:	mul	r2, r1, r2
 23c:	add	r3, r3, r2
 240:	str	r3, [fp, #-24]	; 0xffffffe8
 244:	mov	r3, #0
 248:	str	r3, [fp, #-8]
 24c:	b	3ac <coda_pcre_get_stringtable_entries+0x238>
 250:	ldr	r2, [fp, #-44]	; 0xffffffd4
 254:	ldr	r3, [fp, #-8]
 258:	add	r3, r2, r3
 25c:	lsr	r2, r3, #31
 260:	add	r3, r2, r3
 264:	asr	r3, r3, #1
 268:	str	r3, [fp, #-28]	; 0xffffffe4
 26c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 270:	ldr	r2, [fp, #-40]	; 0xffffffd8
 274:	ldr	r1, [fp, #-28]	; 0xffffffe4
 278:	mul	r2, r1, r2
 27c:	add	r3, r3, r2
 280:	str	r3, [fp, #-32]	; 0xffffffe0
 284:	ldr	r3, [fp, #-32]	; 0xffffffe0
 288:	add	r3, r3, #2
 28c:	mov	r1, r3
 290:	ldr	r0, [fp, #-60]	; 0xffffffc4
 294:	bl	0 <strcmp>
 298:	str	r0, [fp, #-36]	; 0xffffffdc
 29c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 2a0:	cmp	r3, #0
 2a4:	bne	388 <coda_pcre_get_stringtable_entries+0x214>
 2a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 2ac:	str	r3, [fp, #-12]
 2b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 2b4:	str	r3, [fp, #-16]
 2b8:	b	2f8 <coda_pcre_get_stringtable_entries+0x184>
 2bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 2c0:	rsb	r3, r3, #2
 2c4:	ldr	r2, [fp, #-12]
 2c8:	add	r3, r2, r3
 2cc:	mov	r1, r3
 2d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
 2d4:	bl	0 <strcmp>
 2d8:	mov	r3, r0
 2dc:	cmp	r3, #0
 2e0:	bne	30c <coda_pcre_get_stringtable_entries+0x198>
 2e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 2e8:	rsb	r3, r3, #0
 2ec:	ldr	r2, [fp, #-12]
 2f0:	add	r3, r2, r3
 2f4:	str	r3, [fp, #-12]
 2f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
 2fc:	ldr	r2, [fp, #-12]
 300:	cmp	r2, r3
 304:	bhi	2bc <coda_pcre_get_stringtable_entries+0x148>
 308:	b	350 <coda_pcre_get_stringtable_entries+0x1dc>
 30c:	nop			; (mov r0, r0)
 310:	b	350 <coda_pcre_get_stringtable_entries+0x1dc>
 314:	ldr	r3, [fp, #-40]	; 0xffffffd8
 318:	add	r3, r3, #2
 31c:	ldr	r2, [fp, #-16]
 320:	add	r3, r2, r3
 324:	mov	r1, r3
 328:	ldr	r0, [fp, #-60]	; 0xffffffc4
 32c:	bl	0 <strcmp>
 330:	mov	r3, r0
 334:	cmp	r3, #0
 338:	bne	364 <coda_pcre_get_stringtable_entries+0x1f0>
 33c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 340:	mov	r2, r3
 344:	ldr	r3, [fp, #-16]
 348:	add	r3, r3, r2
 34c:	str	r3, [fp, #-16]
 350:	ldr	r2, [fp, #-16]
 354:	ldr	r3, [fp, #-24]	; 0xffffffe8
 358:	cmp	r2, r3
 35c:	bcc	314 <coda_pcre_get_stringtable_entries+0x1a0>
 360:	b	368 <coda_pcre_get_stringtable_entries+0x1f4>
 364:	nop			; (mov r0, r0)
 368:	ldr	r3, [fp, #-64]	; 0xffffffc0
 36c:	ldr	r2, [fp, #-12]
 370:	str	r2, [r3]
 374:	ldr	r3, [fp, #-68]	; 0xffffffbc
 378:	ldr	r2, [fp, #-16]
 37c:	str	r2, [r3]
 380:	ldr	r3, [fp, #-40]	; 0xffffffd8
 384:	b	3c0 <coda_pcre_get_stringtable_entries+0x24c>
 388:	ldr	r3, [fp, #-36]	; 0xffffffdc
 38c:	cmp	r3, #0
 390:	ble	3a4 <coda_pcre_get_stringtable_entries+0x230>
 394:	ldr	r3, [fp, #-28]	; 0xffffffe4
 398:	add	r3, r3, #1
 39c:	str	r3, [fp, #-8]
 3a0:	b	3ac <coda_pcre_get_stringtable_entries+0x238>
 3a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 3a8:	str	r3, [fp, #-44]	; 0xffffffd4
 3ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
 3b0:	ldr	r3, [fp, #-8]
 3b4:	cmp	r2, r3
 3b8:	bgt	250 <coda_pcre_get_stringtable_entries+0xdc>
 3bc:	mvn	r3, #6
 3c0:	mov	r0, r3
 3c4:	sub	sp, fp, #4
 3c8:	pop	{fp, pc}

000003cc <get_first_set>:
 3cc:	push	{fp, lr}
 3d0:	add	fp, sp, #4
 3d4:	sub	sp, sp, #40	; 0x28
 3d8:	str	r0, [fp, #-32]	; 0xffffffe0
 3dc:	str	r1, [fp, #-36]	; 0xffffffdc
 3e0:	str	r2, [fp, #-40]	; 0xffffffd8
 3e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 3e8:	str	r3, [fp, #-12]
 3ec:	ldr	r3, [fp, #-12]
 3f0:	ldr	r3, [r3, #8]
 3f4:	and	r3, r3, #524288	; 0x80000
 3f8:	cmp	r3, #0
 3fc:	bne	428 <get_first_set+0x5c>
 400:	ldr	r3, [fp, #-12]
 404:	ldr	r3, [r3, #12]
 408:	and	r3, r3, #1024	; 0x400
 40c:	cmp	r3, #0
 410:	bne	428 <get_first_set+0x5c>
 414:	ldr	r1, [fp, #-36]	; 0xffffffdc
 418:	ldr	r0, [fp, #-32]	; 0xffffffe0
 41c:	bl	0 <coda_pcre_get_stringnumber>
 420:	mov	r3, r0
 424:	b	4e4 <get_first_set+0x118>
 428:	sub	r3, fp, #28
 42c:	sub	r2, fp, #24
 430:	ldr	r1, [fp, #-36]	; 0xffffffdc
 434:	ldr	r0, [fp, #-32]	; 0xffffffe0
 438:	bl	174 <coda_pcre_get_stringtable_entries>
 43c:	str	r0, [fp, #-16]
 440:	ldr	r3, [fp, #-16]
 444:	cmp	r3, #0
 448:	bgt	454 <get_first_set+0x88>
 44c:	ldr	r3, [fp, #-16]
 450:	b	4e4 <get_first_set+0x118>
 454:	ldr	r3, [fp, #-24]	; 0xffffffe8
 458:	str	r3, [fp, #-8]
 45c:	b	4b8 <get_first_set+0xec>
 460:	ldr	r3, [fp, #-8]
 464:	ldrb	r3, [r3]
 468:	lsl	r3, r3, #8
 46c:	ldr	r2, [fp, #-8]
 470:	add	r2, r2, #1
 474:	ldrb	r2, [r2]
 478:	orr	r3, r3, r2
 47c:	str	r3, [fp, #-20]	; 0xffffffec
 480:	ldr	r3, [fp, #-20]	; 0xffffffec
 484:	lsl	r3, r3, #3
 488:	mov	r2, r3
 48c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 490:	add	r3, r3, r2
 494:	ldr	r3, [r3]
 498:	cmp	r3, #0
 49c:	blt	4a8 <get_first_set+0xdc>
 4a0:	ldr	r3, [fp, #-20]	; 0xffffffec
 4a4:	b	4e4 <get_first_set+0x118>
 4a8:	ldr	r3, [fp, #-16]
 4ac:	ldr	r2, [fp, #-8]
 4b0:	add	r3, r2, r3
 4b4:	str	r3, [fp, #-8]
 4b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 4bc:	ldr	r2, [fp, #-8]
 4c0:	cmp	r2, r3
 4c4:	bls	460 <get_first_set+0x94>
 4c8:	ldr	r3, [fp, #-8]
 4cc:	ldrb	r3, [r3]
 4d0:	lsl	r3, r3, #8
 4d4:	ldr	r2, [fp, #-8]
 4d8:	add	r2, r2, #1
 4dc:	ldrb	r2, [r2]
 4e0:	orr	r3, r3, r2
 4e4:	mov	r0, r3
 4e8:	sub	sp, fp, #4
 4ec:	pop	{fp, pc}

000004f0 <coda_pcre_copy_substring>:
 4f0:	push	{fp, lr}
 4f4:	add	fp, sp, #4
 4f8:	sub	sp, sp, #24
 4fc:	str	r0, [fp, #-16]
 500:	str	r1, [fp, #-20]	; 0xffffffec
 504:	str	r2, [fp, #-24]	; 0xffffffe8
 508:	str	r3, [fp, #-28]	; 0xffffffe4
 50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 510:	cmp	r3, #0
 514:	blt	528 <coda_pcre_copy_substring+0x38>
 518:	ldr	r2, [fp, #-28]	; 0xffffffe4
 51c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 520:	cmp	r2, r3
 524:	blt	530 <coda_pcre_copy_substring+0x40>
 528:	mvn	r3, #6
 52c:	b	5d4 <coda_pcre_copy_substring+0xe4>
 530:	ldr	r3, [fp, #-28]	; 0xffffffe4
 534:	lsl	r3, r3, #1
 538:	str	r3, [fp, #-28]	; 0xffffffe4
 53c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 540:	add	r3, r3, #1
 544:	lsl	r3, r3, #2
 548:	ldr	r2, [fp, #-20]	; 0xffffffec
 54c:	add	r3, r2, r3
 550:	ldr	r2, [r3]
 554:	ldr	r3, [fp, #-28]	; 0xffffffe4
 558:	lsl	r3, r3, #2
 55c:	ldr	r1, [fp, #-20]	; 0xffffffec
 560:	add	r3, r1, r3
 564:	ldr	r3, [r3]
 568:	sub	r3, r2, r3
 56c:	str	r3, [fp, #-8]
 570:	ldr	r3, [fp, #-8]
 574:	add	r2, r3, #1
 578:	ldr	r3, [fp, #8]
 57c:	cmp	r2, r3
 580:	ble	58c <coda_pcre_copy_substring+0x9c>
 584:	mvn	r3, #5
 588:	b	5d4 <coda_pcre_copy_substring+0xe4>
 58c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 590:	lsl	r3, r3, #2
 594:	ldr	r2, [fp, #-20]	; 0xffffffec
 598:	add	r3, r2, r3
 59c:	ldr	r3, [r3]
 5a0:	mov	r2, r3
 5a4:	ldr	r3, [fp, #-16]
 5a8:	add	r3, r3, r2
 5ac:	ldr	r2, [fp, #-8]
 5b0:	mov	r1, r3
 5b4:	ldr	r0, [fp, #4]
 5b8:	bl	0 <memcpy>
 5bc:	ldr	r3, [fp, #-8]
 5c0:	ldr	r2, [fp, #4]
 5c4:	add	r3, r2, r3
 5c8:	mov	r2, #0
 5cc:	strb	r2, [r3]
 5d0:	ldr	r3, [fp, #-8]
 5d4:	mov	r0, r3
 5d8:	sub	sp, fp, #4
 5dc:	pop	{fp, pc}

000005e0 <coda_pcre_copy_named_substring>:
 5e0:	push	{fp, lr}
 5e4:	add	fp, sp, #4
 5e8:	sub	sp, sp, #32
 5ec:	str	r0, [fp, #-16]
 5f0:	str	r1, [fp, #-20]	; 0xffffffec
 5f4:	str	r2, [fp, #-24]	; 0xffffffe8
 5f8:	str	r3, [fp, #-28]	; 0xffffffe4
 5fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 600:	ldr	r1, [fp, #4]
 604:	ldr	r0, [fp, #-16]
 608:	bl	3cc <get_first_set>
 60c:	str	r0, [fp, #-8]
 610:	ldr	r3, [fp, #-8]
 614:	cmp	r3, #0
 618:	bgt	624 <coda_pcre_copy_named_substring+0x44>
 61c:	ldr	r3, [fp, #-8]
 620:	b	64c <coda_pcre_copy_named_substring+0x6c>
 624:	ldr	r3, [fp, #12]
 628:	str	r3, [sp, #4]
 62c:	ldr	r3, [fp, #8]
 630:	str	r3, [sp]
 634:	ldr	r3, [fp, #-8]
 638:	ldr	r2, [fp, #-28]	; 0xffffffe4
 63c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 640:	ldr	r0, [fp, #-20]	; 0xffffffec
 644:	bl	4f0 <coda_pcre_copy_substring>
 648:	mov	r3, r0
 64c:	mov	r0, r3
 650:	sub	sp, fp, #4
 654:	pop	{fp, pc}

00000658 <coda_pcre_get_substring_list>:
 658:	push	{fp, lr}
 65c:	add	fp, sp, #4
 660:	sub	sp, sp, #40	; 0x28
 664:	str	r0, [fp, #-32]	; 0xffffffe0
 668:	str	r1, [fp, #-36]	; 0xffffffdc
 66c:	str	r2, [fp, #-40]	; 0xffffffd8
 670:	str	r3, [fp, #-44]	; 0xffffffd4
 674:	mov	r3, #4
 678:	str	r3, [fp, #-12]
 67c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 680:	lsl	r3, r3, #1
 684:	str	r3, [fp, #-24]	; 0xffffffe8
 688:	mov	r3, #0
 68c:	str	r3, [fp, #-8]
 690:	b	6e4 <coda_pcre_get_substring_list+0x8c>
 694:	ldr	r3, [fp, #-8]
 698:	add	r3, r3, #1
 69c:	lsl	r3, r3, #2
 6a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
 6a4:	add	r3, r2, r3
 6a8:	ldr	r2, [r3]
 6ac:	ldr	r3, [fp, #-8]
 6b0:	lsl	r3, r3, #2
 6b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
 6b8:	add	r3, r1, r3
 6bc:	ldr	r3, [r3]
 6c0:	sub	r3, r2, r3
 6c4:	mov	r2, r3
 6c8:	ldr	r3, [fp, #-12]
 6cc:	add	r3, r2, r3
 6d0:	add	r3, r3, #5
 6d4:	str	r3, [fp, #-12]
 6d8:	ldr	r3, [fp, #-8]
 6dc:	add	r3, r3, #2
 6e0:	str	r3, [fp, #-8]
 6e4:	ldr	r2, [fp, #-8]
 6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6ec:	cmp	r2, r3
 6f0:	blt	694 <coda_pcre_get_substring_list+0x3c>
 6f4:	ldr	r3, [pc, #296]	; 824 <coda_pcre_get_substring_list+0x1cc>
 6f8:	ldr	r3, [r3]
 6fc:	ldr	r2, [fp, #-12]
 700:	mov	r0, r2
 704:	blx	r3
 708:	str	r0, [fp, #-16]
 70c:	ldr	r3, [fp, #-16]
 710:	cmp	r3, #0
 714:	bne	720 <coda_pcre_get_substring_list+0xc8>
 718:	mvn	r3, #5
 71c:	b	818 <coda_pcre_get_substring_list+0x1c0>
 720:	ldr	r3, [fp, #-44]	; 0xffffffd4
 724:	ldr	r2, [fp, #-16]
 728:	str	r2, [r3]
 72c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 730:	add	r3, r3, #1
 734:	lsl	r3, r3, #2
 738:	ldr	r2, [fp, #-16]
 73c:	add	r3, r2, r3
 740:	str	r3, [fp, #-20]	; 0xffffffec
 744:	mov	r3, #0
 748:	str	r3, [fp, #-8]
 74c:	b	7f8 <coda_pcre_get_substring_list+0x1a0>
 750:	ldr	r3, [fp, #-8]
 754:	add	r3, r3, #1
 758:	lsl	r3, r3, #2
 75c:	ldr	r2, [fp, #-36]	; 0xffffffdc
 760:	add	r3, r2, r3
 764:	ldr	r2, [r3]
 768:	ldr	r3, [fp, #-8]
 76c:	lsl	r3, r3, #2
 770:	ldr	r1, [fp, #-36]	; 0xffffffdc
 774:	add	r3, r1, r3
 778:	ldr	r3, [r3]
 77c:	sub	r3, r2, r3
 780:	str	r3, [fp, #-28]	; 0xffffffe4
 784:	ldr	r3, [fp, #-8]
 788:	lsl	r3, r3, #2
 78c:	ldr	r2, [fp, #-36]	; 0xffffffdc
 790:	add	r3, r2, r3
 794:	ldr	r3, [r3]
 798:	mov	r2, r3
 79c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7a0:	add	r3, r3, r2
 7a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
 7a8:	mov	r1, r3
 7ac:	ldr	r0, [fp, #-20]	; 0xffffffec
 7b0:	bl	0 <memcpy>
 7b4:	ldr	r3, [fp, #-16]
 7b8:	add	r2, r3, #4
 7bc:	str	r2, [fp, #-16]
 7c0:	ldr	r2, [fp, #-20]	; 0xffffffec
 7c4:	str	r2, [r3]
 7c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 7cc:	ldr	r2, [fp, #-20]	; 0xffffffec
 7d0:	add	r3, r2, r3
 7d4:	str	r3, [fp, #-20]	; 0xffffffec
 7d8:	ldr	r3, [fp, #-20]	; 0xffffffec
 7dc:	add	r2, r3, #1
 7e0:	str	r2, [fp, #-20]	; 0xffffffec
 7e4:	mov	r2, #0
 7e8:	strb	r2, [r3]
 7ec:	ldr	r3, [fp, #-8]
 7f0:	add	r3, r3, #2
 7f4:	str	r3, [fp, #-8]
 7f8:	ldr	r2, [fp, #-8]
 7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 800:	cmp	r2, r3
 804:	blt	750 <coda_pcre_get_substring_list+0xf8>
 808:	ldr	r3, [fp, #-16]
 80c:	mov	r2, #0
 810:	str	r2, [r3]
 814:	mov	r3, #0
 818:	mov	r0, r3
 81c:	sub	sp, fp, #4
 820:	pop	{fp, pc}
 824:	.word	0x00000000

00000828 <coda_pcre_free_substring_list>:
 828:	push	{fp, lr}
 82c:	add	fp, sp, #4
 830:	sub	sp, sp, #8
 834:	str	r0, [fp, #-8]
 838:	ldr	r3, [pc, #20]	; 854 <coda_pcre_free_substring_list+0x2c>
 83c:	ldr	r3, [r3]
 840:	ldr	r0, [fp, #-8]
 844:	blx	r3
 848:	nop			; (mov r0, r0)
 84c:	sub	sp, fp, #4
 850:	pop	{fp, pc}
 854:	.word	0x00000000

00000858 <coda_pcre_get_substring>:
 858:	push	{fp, lr}
 85c:	add	fp, sp, #4
 860:	sub	sp, sp, #24
 864:	str	r0, [fp, #-16]
 868:	str	r1, [fp, #-20]	; 0xffffffec
 86c:	str	r2, [fp, #-24]	; 0xffffffe8
 870:	str	r3, [fp, #-28]	; 0xffffffe4
 874:	ldr	r3, [fp, #-28]	; 0xffffffe4
 878:	cmp	r3, #0
 87c:	blt	890 <coda_pcre_get_substring+0x38>
 880:	ldr	r2, [fp, #-28]	; 0xffffffe4
 884:	ldr	r3, [fp, #-24]	; 0xffffffe8
 888:	cmp	r2, r3
 88c:	blt	898 <coda_pcre_get_substring+0x40>
 890:	mvn	r3, #6
 894:	b	95c <coda_pcre_get_substring+0x104>
 898:	ldr	r3, [fp, #-28]	; 0xffffffe4
 89c:	lsl	r3, r3, #1
 8a0:	str	r3, [fp, #-28]	; 0xffffffe4
 8a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8a8:	add	r3, r3, #1
 8ac:	lsl	r3, r3, #2
 8b0:	ldr	r2, [fp, #-20]	; 0xffffffec
 8b4:	add	r3, r2, r3
 8b8:	ldr	r2, [r3]
 8bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8c0:	lsl	r3, r3, #2
 8c4:	ldr	r1, [fp, #-20]	; 0xffffffec
 8c8:	add	r3, r1, r3
 8cc:	ldr	r3, [r3]
 8d0:	sub	r3, r2, r3
 8d4:	str	r3, [fp, #-8]
 8d8:	ldr	r3, [pc, #136]	; 968 <coda_pcre_get_substring+0x110>
 8dc:	ldr	r3, [r3]
 8e0:	ldr	r2, [fp, #-8]
 8e4:	add	r2, r2, #1
 8e8:	mov	r0, r2
 8ec:	blx	r3
 8f0:	str	r0, [fp, #-12]
 8f4:	ldr	r3, [fp, #-12]
 8f8:	cmp	r3, #0
 8fc:	bne	908 <coda_pcre_get_substring+0xb0>
 900:	mvn	r3, #5
 904:	b	95c <coda_pcre_get_substring+0x104>
 908:	ldr	r3, [fp, #-28]	; 0xffffffe4
 90c:	lsl	r3, r3, #2
 910:	ldr	r2, [fp, #-20]	; 0xffffffec
 914:	add	r3, r2, r3
 918:	ldr	r3, [r3]
 91c:	mov	r2, r3
 920:	ldr	r3, [fp, #-16]
 924:	add	r3, r3, r2
 928:	ldr	r2, [fp, #-8]
 92c:	mov	r1, r3
 930:	ldr	r0, [fp, #-12]
 934:	bl	0 <memcpy>
 938:	ldr	r3, [fp, #-8]
 93c:	ldr	r2, [fp, #-12]
 940:	add	r3, r2, r3
 944:	mov	r2, #0
 948:	strb	r2, [r3]
 94c:	ldr	r3, [fp, #4]
 950:	ldr	r2, [fp, #-12]
 954:	str	r2, [r3]
 958:	ldr	r3, [fp, #-8]
 95c:	mov	r0, r3
 960:	sub	sp, fp, #4
 964:	pop	{fp, pc}
 968:	.word	0x00000000

0000096c <coda_pcre_get_named_substring>:
 96c:	push	{fp, lr}
 970:	add	fp, sp, #4
 974:	sub	sp, sp, #32
 978:	str	r0, [fp, #-16]
 97c:	str	r1, [fp, #-20]	; 0xffffffec
 980:	str	r2, [fp, #-24]	; 0xffffffe8
 984:	str	r3, [fp, #-28]	; 0xffffffe4
 988:	ldr	r2, [fp, #-24]	; 0xffffffe8
 98c:	ldr	r1, [fp, #4]
 990:	ldr	r0, [fp, #-16]
 994:	bl	3cc <get_first_set>
 998:	str	r0, [fp, #-8]
 99c:	ldr	r3, [fp, #-8]
 9a0:	cmp	r3, #0
 9a4:	bgt	9b0 <coda_pcre_get_named_substring+0x44>
 9a8:	ldr	r3, [fp, #-8]
 9ac:	b	9d0 <coda_pcre_get_named_substring+0x64>
 9b0:	ldr	r3, [fp, #8]
 9b4:	str	r3, [sp]
 9b8:	ldr	r3, [fp, #-8]
 9bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
 9c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
 9c8:	bl	858 <coda_pcre_get_substring>
 9cc:	mov	r3, r0
 9d0:	mov	r0, r3
 9d4:	sub	sp, fp, #4
 9d8:	pop	{fp, pc}

000009dc <coda_pcre_free_substring>:
 9dc:	push	{fp, lr}
 9e0:	add	fp, sp, #4
 9e4:	sub	sp, sp, #8
 9e8:	str	r0, [fp, #-8]
 9ec:	ldr	r3, [pc, #20]	; a08 <coda_pcre_free_substring+0x2c>
 9f0:	ldr	r3, [r3]
 9f4:	ldr	r0, [fp, #-8]
 9f8:	blx	r3
 9fc:	nop			; (mov r0, r0)
 a00:	sub	sp, fp, #4
 a04:	pop	{fp, pc}
 a08:	.word	0x00000000
