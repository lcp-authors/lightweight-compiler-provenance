
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

00010454 <.init>:
   10454:	push	{r3, lr}
   10458:	bl	1054c <abort@plt+0x3c>
   1045c:	pop	{r3, pc}

Disassembly of section .plt:

00010460 <strcmp@plt-0x14>:
   10460:	push	{lr}		; (str lr, [sp, #-4]!)
   10464:	ldr	lr, [pc, #4]	; 10470 <strcmp@plt-0x4>
   10468:	add	lr, pc, lr
   1046c:	ldr	pc, [lr, #8]!
   10470:	muleq	r1, r0, fp

00010474 <strcmp@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2960]!	; 0xb90

00010480 <printf@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2952]!	; 0xb88

0001048c <fopen@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2944]!	; 0xb80

00010498 <free@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2936]!	; 0xb78

000104a4 <realloc@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2928]!	; 0xb70

000104b0 <strcpy@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2920]!	; 0xb68

000104bc <malloc@plt>:
   104bc:	add	ip, pc, #0, 12
   104c0:	add	ip, ip, #16, 20	; 0x10000
   104c4:	ldr	pc, [ip, #2912]!	; 0xb60

000104c8 <__libc_start_main@plt>:
   104c8:	add	ip, pc, #0, 12
   104cc:	add	ip, ip, #16, 20	; 0x10000
   104d0:	ldr	pc, [ip, #2904]!	; 0xb58

000104d4 <scanf@plt>:
   104d4:	add	ip, pc, #0, 12
   104d8:	add	ip, ip, #16, 20	; 0x10000
   104dc:	ldr	pc, [ip, #2896]!	; 0xb50

000104e0 <__gmon_start__@plt>:
   104e0:	add	ip, pc, #0, 12
   104e4:	add	ip, ip, #16, 20	; 0x10000
   104e8:	ldr	pc, [ip, #2888]!	; 0xb48

000104ec <fprintf@plt>:
   104ec:	add	ip, pc, #0, 12
   104f0:	add	ip, ip, #16, 20	; 0x10000
   104f4:	ldr	pc, [ip, #2880]!	; 0xb40

000104f8 <fscanf@plt>:
   104f8:	add	ip, pc, #0, 12
   104fc:	add	ip, ip, #16, 20	; 0x10000
   10500:	ldr	pc, [ip, #2872]!	; 0xb38

00010504 <fclose@plt>:
   10504:	add	ip, pc, #0, 12
   10508:	add	ip, ip, #16, 20	; 0x10000
   1050c:	ldr	pc, [ip, #2864]!	; 0xb30

00010510 <abort@plt>:
   10510:	add	ip, pc, #0, 12
   10514:	add	ip, ip, #16, 20	; 0x10000
   10518:	ldr	pc, [ip, #2856]!	; 0xb28

Disassembly of section .text:

0001051c <.text>:
   1051c:	bleq	4c660 <abort@plt+0x3c150>
   10520:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10524:	strbtmi	fp, [sl], -r2, lsl #24
   10528:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   1052c:			; <UNDEFINED> instruction: 0xc010f8df
   10530:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10534:	blmi	122548 <abort@plt+0x112038>
   10538:	svc	0x00c6f7ff
   1053c:	svc	0x00e8f7ff
   10540:	andeq	r0, r1, r5, lsr #17
   10544:	andeq	r0, r1, r8, ror r7
   10548:	andeq	r0, r1, r5, ror #16
   1054c:	ldr	r3, [pc, #20]	; 10568 <abort@plt+0x58>
   10550:	ldr	r2, [pc, #20]	; 1056c <abort@plt+0x5c>
   10554:	add	r3, pc, r3
   10558:	ldr	r2, [r3, r2]
   1055c:	cmp	r2, #0
   10560:	bxeq	lr
   10564:	b	104e0 <__gmon_start__@plt>
   10568:	andeq	r0, r1, r4, lsr #21
   1056c:	andeq	r0, r0, r4, asr #32
   10570:	subseq	pc, r0, r1, asr #4
   10574:	andeq	pc, r2, r0, asr #5
   10578:	cmpeq	r0, #268435460	; 0x10000004	; <UNPREDICTABLE>
   1057c:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10580:	andle	r4, r5, r3, lsl #5
   10584:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10588:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1058c:	ldrmi	fp, [r8, -r3, lsl #2]
   10590:	svclt	0x00004770
   10594:	subseq	pc, r0, r1, asr #4
   10598:	andeq	pc, r2, r0, asr #5
   1059c:	cmpeq	r0, r1, asr #4	; <UNPREDICTABLE>
   105a0:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   105a4:	svceq	0x00d91a0b
   105a8:			; <UNDEFINED> instruction: 0x01a3eb01
   105ac:	andle	r1, r5, r9, asr #32
   105b0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   105b4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   105b8:	ldrmi	fp, [r8, -r3, lsl #2]
   105bc:	svclt	0x00004770
   105c0:	vqrshl.s8	d27, d0, d1
   105c4:	vmov.i32	q8, #0	; 0x00000000
   105c8:	stmdavc	r3!, {r1, sl}
   105cc:			; <UNDEFINED> instruction: 0xf7ffb91b
   105d0:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   105d4:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   105d8:	svclt	0x0000e7dc
   105dc:	mov	ip, sp
   105e0:	sub	sp, sp, #88	; 0x58
   105e4:	str	ip, [sp]
   105e8:	str	lr, [sp, #4]
   105ec:	str	r4, [sp, #8]
   105f0:	str	r5, [sp, #12]
   105f4:	str	r6, [sp, #16]
   105f8:	str	r7, [sp, #20]
   105fc:	str	r8, [sp, #24]
   10600:	mov	r7, r1
   10604:	mov	r6, r0
   10608:	mov	r0, #104	; 0x68
   1060c:	bl	104bc <malloc@plt>
   10610:	mov	r4, r0
   10614:	mov	r5, #0
   10618:	ldr	r1, [pc, #196]	; 106e4 <abort@plt+0x1d4>
   1061c:	add	r2, sp, #32
   10620:	mov	r0, r6
   10624:	bl	104f8 <fscanf@plt>
   10628:	cmn	r0, #1
   1062c:	beq	106bc <abort@plt+0x1ac>
   10630:	mov	r8, #0
   10634:	cmp	r8, r5
   10638:	bgt	10618 <abort@plt+0x108>
   1063c:	add	r0, sp, #32
   10640:	mov	r1, #104	; 0x68
   10644:	mla	r1, r1, r8, r4
   10648:	bl	10474 <strcmp@plt>
   1064c:	cmp	r0, #0
   10650:	bne	1066c <abort@plt+0x15c>
   10654:	mov	r1, #104	; 0x68
   10658:	mla	r0, r1, r8, r4
   1065c:	ldr	r1, [r0, #100]	; 0x64
   10660:	add	r2, r1, #1
   10664:	str	r2, [r0, #100]	; 0x64
   10668:	b	10618 <abort@plt+0x108>
   1066c:	cmp	r8, r5
   10670:	bne	106b4 <abort@plt+0x1a4>
   10674:	mov	r0, #104	; 0x68
   10678:	mul	r3, r5, r0
   1067c:	add	r1, r3, #104	; 0x68
   10680:	mov	r0, r4
   10684:	bl	104a4 <realloc@plt>
   10688:	mov	r4, r0
   1068c:	mov	ip, #104	; 0x68
   10690:	mla	r0, ip, r5, r4
   10694:	add	r1, sp, #32
   10698:	bl	104b0 <strcpy@plt>
   1069c:	mov	r2, #104	; 0x68
   106a0:	mla	r1, r2, r5, r4
   106a4:	mov	r3, #1
   106a8:	str	r3, [r1, #100]	; 0x64
   106ac:	add	r5, r5, #1
   106b0:	b	10618 <abort@plt+0x108>
   106b4:	add	r8, r8, #1
   106b8:	b	10634 <abort@plt+0x124>
   106bc:	str	r5, [r7]
   106c0:	mov	r0, r4
   106c4:	ldr	r4, [sp, #8]
   106c8:	ldr	r5, [sp, #12]
   106cc:	ldr	r6, [sp, #16]
   106d0:	ldr	r7, [sp, #20]
   106d4:	ldr	r8, [sp, #24]
   106d8:	ldr	lr, [sp, #4]
   106dc:	add	sp, sp, #88	; 0x58
   106e0:	bx	lr
   106e4:	andeq	r0, r1, r4, asr #18
   106e8:	mov	ip, sp
   106ec:	sub	sp, sp, #32
   106f0:	str	ip, [sp, #4]
   106f4:	str	lr, [sp, #8]
   106f8:	str	r4, [sp, #16]
   106fc:	str	r5, [sp, #20]
   10700:	str	r6, [sp, #24]
   10704:	str	r7, [sp, #28]
   10708:	mov	r5, r2
   1070c:	mov	r6, r1
   10710:	mov	r4, r0
   10714:	ldr	r1, [pc, #84]	; 10770 <abort@plt+0x260>
   10718:	mov	r0, r4
   1071c:	bl	104ec <fprintf@plt>
   10720:	mov	r7, #0
   10724:	cmp	r7, r5
   10728:	bge	10754 <abort@plt+0x244>
   1072c:	ldr	r1, [pc, #64]	; 10774 <abort@plt+0x264>
   10730:	add	r2, r7, #1
   10734:	mov	r3, #104	; 0x68
   10738:	mla	r3, r3, r7, r6
   1073c:	ldr	r0, [r3, #100]	; 0x64
   10740:	str	r0, [sp]
   10744:	mov	r0, r4
   10748:	bl	104ec <fprintf@plt>
   1074c:	add	r7, r7, #1
   10750:	b	10724 <abort@plt+0x214>
   10754:	ldr	r4, [sp, #16]
   10758:	ldr	r5, [sp, #20]
   1075c:	ldr	r6, [sp, #24]
   10760:	ldr	r7, [sp, #28]
   10764:	ldr	lr, [sp, #8]
   10768:	add	sp, sp, #32
   1076c:	bx	lr
   10770:	andeq	r0, r1, r0, lsl #19
   10774:	andeq	r0, r1, pc, asr r9
   10778:	mov	ip, sp
   1077c:	sub	sp, sp, #144	; 0x90
   10780:	str	ip, [sp]
   10784:	str	lr, [sp, #4]
   10788:	str	r4, [sp, #8]
   1078c:	str	r5, [sp, #12]
   10790:	str	r6, [sp, #16]
   10794:	ldr	r0, [pc, #192]	; 1085c <abort@plt+0x34c>
   10798:	bl	10480 <printf@plt>
   1079c:	ldr	r0, [pc, #176]	; 10854 <abort@plt+0x344>
   107a0:	add	r1, sp, #32
   107a4:	bl	104d4 <scanf@plt>
   107a8:	ldr	r0, [pc, #160]	; 10850 <abort@plt+0x340>
   107ac:	bl	10480 <printf@plt>
   107b0:	ldr	r0, [pc, #156]	; 10854 <abort@plt+0x344>
   107b4:	add	r1, sp, #88	; 0x58
   107b8:	bl	104d4 <scanf@plt>
   107bc:	add	r0, sp, #32
   107c0:	ldr	r1, [pc, #152]	; 10860 <abort@plt+0x350>
   107c4:	bl	1048c <fopen@plt>
   107c8:	mov	r6, r0
   107cc:	cmp	r6, #0
   107d0:	bne	107dc <abort@plt+0x2cc>
   107d4:	mov	r0, #1
   107d8:	b	10838 <abort@plt+0x328>
   107dc:	add	r0, sp, #88	; 0x58
   107e0:	ldr	r1, [pc, #112]	; 10858 <abort@plt+0x348>
   107e4:	bl	1048c <fopen@plt>
   107e8:	mov	r5, r0
   107ec:	cmp	r5, #0
   107f0:	bne	107fc <abort@plt+0x2ec>
   107f4:	mov	r0, #1
   107f8:	b	10838 <abort@plt+0x328>
   107fc:	add	r1, sp, #24
   10800:	mov	r0, r6
   10804:	bl	105dc <abort@plt+0xcc>
   10808:	mov	r4, r0
   1080c:	ldr	r2, [sp, #24]
   10810:	mov	r1, r4
   10814:	mov	r0, r5
   10818:	bl	106e8 <abort@plt+0x1d8>
   1081c:	mov	r0, r6
   10820:	bl	10504 <fclose@plt>
   10824:	mov	r0, r5
   10828:	bl	10504 <fclose@plt>
   1082c:	mov	r0, r4
   10830:	bl	10498 <free@plt>
   10834:	mov	r0, #0
   10838:	ldr	r4, [sp, #8]
   1083c:	ldr	r5, [sp, #12]
   10840:	ldr	r6, [sp, #16]
   10844:	ldr	lr, [sp, #4]
   10848:	add	sp, sp, #144	; 0x90
   1084c:	bx	lr
   10850:	andeq	r0, r1, ip, ror #18
   10854:	andeq	r0, r1, r4, asr #18
   10858:			; <UNDEFINED> instruction: 0x000109b6
   1085c:	andeq	r0, r1, r9, asr #18
   10860:	andeq	r0, r1, r7, asr #18
   10864:	mvnsmi	lr, #737280	; 0xb4000
   10868:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   1086c:	strmi	r4, [r8], ip, lsl #26
   10870:			; <UNDEFINED> instruction: 0x4691447e
   10874:			; <UNDEFINED> instruction: 0xf7ff447d
   10878:	blne	1dcc038 <abort@plt+0x1dbbb28>
   1087c:	strhle	r1, [sl], -r6
   10880:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10884:	svccc	0x0004f855
   10888:	strbmi	r4, [r1], -sl, asr #12
   1088c:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10890:	adcmi	r4, r6, #152, 14	; 0x2600000
   10894:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10898:	svclt	0x000083f8
   1089c:	andeq	r0, r1, r0, lsr #13
   108a0:	muleq	r1, r8, r6
   108a4:	svclt	0x00004770

Disassembly of section .fini:

000108a8 <.fini>:
   108a8:	push	{r3, lr}
   108ac:	pop	{r3, pc}
