
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-mem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_empty_record>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	cmp	r0, #11
   c:	bcs	5c <coda_mem_empty_record+0x5c>
  10:	ldr	r5, [pc, #132]	; 9c <coda_mem_empty_record+0x9c>
  14:	mov	r4, r0
  18:	bl	0 <__aeabi_read_tp>
  1c:	add	r0, r0, r5
  20:	ldr	r1, [r0, r4, lsl #2]
  24:	cmp	r1, #0
  28:	bne	54 <coda_mem_empty_record+0x54>
  2c:	mov	r0, r4
  30:	bl	0 <coda_type_empty_record>
  34:	mov	r1, #0
  38:	bl	0 <coda_mem_record_new>
  3c:	mov	r1, r0
  40:	bl	0 <__aeabi_read_tp>
  44:	add	r0, r0, r5
  48:	cmp	r1, #0
  4c:	str	r1, [r0, r4, lsl #2]
  50:	beq	7c <coda_mem_empty_record+0x7c>
  54:	mov	r0, r1
  58:	pop	{r4, r5, fp, pc}
  5c:	movw	r0, #0
  60:	movw	r1, #0
  64:	movw	r3, #0
  68:	mov	r2, #49	; 0x31
  6c:	movt	r0, #0
  70:	movt	r1, #0
  74:	movt	r3, #0
  78:	bl	0 <__assert_fail>
  7c:	movw	r0, #0
  80:	movw	r1, #0
  84:	movw	r3, #0
  88:	mov	r2, #53	; 0x35
  8c:	movt	r0, #0
  90:	movt	r1, #0
  94:	movt	r3, #0
  98:	bl	0 <__assert_fail>
  9c:	.word	0x00000000

000000a0 <coda_no_data_singleton>:
  a0:	push	{r4, r5, fp, lr}
  a4:	add	fp, sp, #8
  a8:	cmp	r0, #11
  ac:	bcs	ec <coda_no_data_singleton+0x4c>
  b0:	ldr	r1, [pc, #116]	; 12c <coda_no_data_singleton+0x8c>
  b4:	mov	r4, r0
  b8:	bl	0 <__aeabi_read_tp>
  bc:	add	r0, r0, r1
  c0:	ldr	r0, [r0, r4, lsl #2]
  c4:	cmp	r0, #0
  c8:	popne	{r4, r5, fp, pc}
  cc:	bl	0 <__aeabi_read_tp>
  d0:	add	r5, r0, r1
  d4:	mov	r0, r4
  d8:	bl	0 <coda_mem_no_data_new>
  dc:	cmp	r0, #0
  e0:	str	r0, [r5, r4, lsl #2]
  e4:	beq	10c <coda_no_data_singleton+0x6c>
  e8:	pop	{r4, r5, fp, pc}
  ec:	movw	r0, #0
  f0:	movw	r1, #0
  f4:	movw	r3, #0
  f8:	mov	r2, #61	; 0x3d
  fc:	movt	r0, #0
 100:	movt	r1, #0
 104:	movt	r3, #0
 108:	bl	0 <__assert_fail>
 10c:	movw	r0, #0
 110:	movw	r1, #0
 114:	movw	r3, #0
 118:	mov	r2, #65	; 0x41
 11c:	movt	r0, #0
 120:	movt	r1, #0
 124:	movt	r3, #0
 128:	bl	0 <__assert_fail>
 12c:	.word	0x00000000

00000130 <coda_mem_done>:
 130:	push	{r4, r5, fp, lr}
 134:	add	fp, sp, #8
 138:	ldr	r4, [pc, #660]	; 3d4 <coda_mem_done+0x2a4>
 13c:	bl	0 <__aeabi_read_tp>
 140:	ldr	r0, [r0, r4]
 144:	cmp	r0, #0
 148:	beq	150 <coda_mem_done+0x20>
 14c:	bl	0 <coda_mem_type_delete>
 150:	mov	r5, #0
 154:	bl	0 <__aeabi_read_tp>
 158:	str	r5, [r0, r4]!
 15c:	ldr	r0, [r0, #4]
 160:	cmp	r0, #0
 164:	beq	16c <coda_mem_done+0x3c>
 168:	bl	0 <coda_mem_type_delete>
 16c:	bl	0 <__aeabi_read_tp>
 170:	add	r0, r0, r4
 174:	str	r5, [r0, #4]
 178:	ldr	r0, [r0, #8]
 17c:	cmp	r0, #0
 180:	beq	188 <coda_mem_done+0x58>
 184:	bl	0 <coda_mem_type_delete>
 188:	bl	0 <__aeabi_read_tp>
 18c:	add	r0, r0, r4
 190:	mov	r5, #0
 194:	str	r5, [r0, #8]
 198:	ldr	r0, [r0, #12]
 19c:	cmp	r0, #0
 1a0:	beq	1a8 <coda_mem_done+0x78>
 1a4:	bl	0 <coda_mem_type_delete>
 1a8:	bl	0 <__aeabi_read_tp>
 1ac:	add	r0, r0, r4
 1b0:	str	r5, [r0, #12]
 1b4:	ldr	r0, [r0, #16]
 1b8:	cmp	r0, #0
 1bc:	beq	1c4 <coda_mem_done+0x94>
 1c0:	bl	0 <coda_mem_type_delete>
 1c4:	bl	0 <__aeabi_read_tp>
 1c8:	add	r0, r0, r4
 1cc:	mov	r5, #0
 1d0:	str	r5, [r0, #16]
 1d4:	ldr	r0, [r0, #20]
 1d8:	cmp	r0, #0
 1dc:	beq	1e4 <coda_mem_done+0xb4>
 1e0:	bl	0 <coda_mem_type_delete>
 1e4:	bl	0 <__aeabi_read_tp>
 1e8:	add	r0, r0, r4
 1ec:	str	r5, [r0, #20]
 1f0:	ldr	r0, [r0, #24]
 1f4:	cmp	r0, #0
 1f8:	beq	200 <coda_mem_done+0xd0>
 1fc:	bl	0 <coda_mem_type_delete>
 200:	bl	0 <__aeabi_read_tp>
 204:	add	r0, r0, r4
 208:	mov	r5, #0
 20c:	str	r5, [r0, #24]
 210:	ldr	r0, [r0, #28]
 214:	cmp	r0, #0
 218:	beq	220 <coda_mem_done+0xf0>
 21c:	bl	0 <coda_mem_type_delete>
 220:	bl	0 <__aeabi_read_tp>
 224:	add	r0, r0, r4
 228:	str	r5, [r0, #28]
 22c:	ldr	r0, [r0, #32]
 230:	cmp	r0, #0
 234:	beq	23c <coda_mem_done+0x10c>
 238:	bl	0 <coda_mem_type_delete>
 23c:	bl	0 <__aeabi_read_tp>
 240:	add	r0, r0, r4
 244:	mov	r5, #0
 248:	str	r5, [r0, #32]
 24c:	ldr	r0, [r0, #36]	; 0x24
 250:	cmp	r0, #0
 254:	beq	25c <coda_mem_done+0x12c>
 258:	bl	0 <coda_mem_type_delete>
 25c:	bl	0 <__aeabi_read_tp>
 260:	add	r0, r0, r4
 264:	str	r5, [r0, #36]	; 0x24
 268:	ldr	r0, [r0, #40]	; 0x28
 26c:	cmp	r0, #0
 270:	beq	278 <coda_mem_done+0x148>
 274:	bl	0 <coda_mem_type_delete>
 278:	bl	0 <__aeabi_read_tp>
 27c:	add	r1, r0, r4
 280:	ldr	r4, [pc, #336]	; 3d8 <coda_mem_done+0x2a8>
 284:	mov	r5, #0
 288:	str	r5, [r1, #40]	; 0x28
 28c:	ldr	r0, [r0, r4]
 290:	cmp	r0, #0
 294:	beq	29c <coda_mem_done+0x16c>
 298:	bl	0 <coda_mem_type_delete>
 29c:	bl	0 <__aeabi_read_tp>
 2a0:	str	r5, [r0, r4]!
 2a4:	ldr	r0, [r0, #4]
 2a8:	cmp	r0, #0
 2ac:	beq	2b4 <coda_mem_done+0x184>
 2b0:	bl	0 <coda_mem_type_delete>
 2b4:	bl	0 <__aeabi_read_tp>
 2b8:	add	r0, r0, r4
 2bc:	mov	r5, #0
 2c0:	str	r5, [r0, #4]
 2c4:	ldr	r0, [r0, #8]
 2c8:	cmp	r0, #0
 2cc:	beq	2d4 <coda_mem_done+0x1a4>
 2d0:	bl	0 <coda_mem_type_delete>
 2d4:	bl	0 <__aeabi_read_tp>
 2d8:	add	r0, r0, r4
 2dc:	str	r5, [r0, #8]
 2e0:	ldr	r0, [r0, #12]
 2e4:	cmp	r0, #0
 2e8:	beq	2f0 <coda_mem_done+0x1c0>
 2ec:	bl	0 <coda_mem_type_delete>
 2f0:	bl	0 <__aeabi_read_tp>
 2f4:	add	r0, r0, r4
 2f8:	mov	r5, #0
 2fc:	str	r5, [r0, #12]
 300:	ldr	r0, [r0, #16]
 304:	cmp	r0, #0
 308:	beq	310 <coda_mem_done+0x1e0>
 30c:	bl	0 <coda_mem_type_delete>
 310:	bl	0 <__aeabi_read_tp>
 314:	add	r0, r0, r4
 318:	str	r5, [r0, #16]
 31c:	ldr	r0, [r0, #20]
 320:	cmp	r0, #0
 324:	beq	32c <coda_mem_done+0x1fc>
 328:	bl	0 <coda_mem_type_delete>
 32c:	bl	0 <__aeabi_read_tp>
 330:	add	r0, r0, r4
 334:	mov	r5, #0
 338:	str	r5, [r0, #20]
 33c:	ldr	r0, [r0, #24]
 340:	cmp	r0, #0
 344:	beq	34c <coda_mem_done+0x21c>
 348:	bl	0 <coda_mem_type_delete>
 34c:	bl	0 <__aeabi_read_tp>
 350:	add	r0, r0, r4
 354:	str	r5, [r0, #24]
 358:	ldr	r0, [r0, #28]
 35c:	cmp	r0, #0
 360:	beq	368 <coda_mem_done+0x238>
 364:	bl	0 <coda_mem_type_delete>
 368:	bl	0 <__aeabi_read_tp>
 36c:	add	r0, r0, r4
 370:	mov	r5, #0
 374:	str	r5, [r0, #28]
 378:	ldr	r0, [r0, #32]
 37c:	cmp	r0, #0
 380:	beq	388 <coda_mem_done+0x258>
 384:	bl	0 <coda_mem_type_delete>
 388:	bl	0 <__aeabi_read_tp>
 38c:	add	r0, r0, r4
 390:	str	r5, [r0, #32]
 394:	ldr	r0, [r0, #36]	; 0x24
 398:	cmp	r0, #0
 39c:	beq	3a4 <coda_mem_done+0x274>
 3a0:	bl	0 <coda_mem_type_delete>
 3a4:	bl	0 <__aeabi_read_tp>
 3a8:	add	r0, r0, r4
 3ac:	mov	r5, #0
 3b0:	str	r5, [r0, #36]	; 0x24
 3b4:	ldr	r0, [r0, #40]	; 0x28
 3b8:	cmp	r0, #0
 3bc:	beq	3c4 <coda_mem_done+0x294>
 3c0:	bl	0 <coda_mem_type_delete>
 3c4:	bl	0 <__aeabi_read_tp>
 3c8:	add	r0, r0, r4
 3cc:	str	r5, [r0, #40]	; 0x28
 3d0:	pop	{r4, r5, fp, pc}
	...
