
../compcert-repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

000108f4 <.init>:
   108f4:	push	{r3, lr}
   108f8:	bl	10a1c <_start@@Base+0x3c>
   108fc:	pop	{r3, pc}

Disassembly of section .plt:

00010900 <coda_match_filefilter@plt-0x14>:
   10900:	push	{lr}		; (str lr, [sp, #-4]!)
   10904:	ldr	lr, [pc, #4]	; 10910 <coda_match_filefilter@plt-0x4>
   10908:	add	lr, pc, lr
   1090c:	ldr	pc, [lr, #8]!
   10910:	strdeq	r1, [r1], -r0

00010914 <coda_match_filefilter@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010920 <strcmp@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1768]!	; 0x6e8

0001092c <printf@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1760]!	; 0x6e0

00010938 <coda_set_definition_path_conditional@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1752]!	; 0x6d8

00010944 <coda_set_definition_path@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010950 <coda_done@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1736]!	; 0x6c8

0001095c <__libc_start_main@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1728]!	; 0x6c0

00010968 <__gmon_start__@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1720]!	; 0x6b8

00010974 <exit@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1712]!	; 0x6b0

00010980 <fprintf@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1704]!	; 0x6a8

0001098c <coda_init@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1696]!	; 0x6a0

00010998 <coda_set_option_perform_conversions@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1688]!	; 0x698

000109a4 <coda_errno_to_string@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1680]!	; 0x690

000109b0 <coda_get_libcoda_version@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1672]!	; 0x688

000109bc <coda_get_errno@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1664]!	; 0x680

000109c8 <abort@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1656]!	; 0x678

000109d4 <__assert_fail@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1648]!	; 0x670

Disassembly of section .text:

000109e0 <_start@@Base>:
   109e0:	mov	fp, #0
   109e4:	mov	lr, #0
   109e8:	pop	{r1}		; (ldr r1, [sp], #4)
   109ec:	mov	r2, sp
   109f0:	push	{r2}		; (str r2, [sp, #-4]!)
   109f4:	push	{r0}		; (str r0, [sp, #-4]!)
   109f8:	ldr	ip, [pc, #16]	; 10a10 <_start@@Base+0x30>
   109fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10a00:	ldr	r0, [pc, #12]	; 10a14 <_start@@Base+0x34>
   10a04:	ldr	r3, [pc, #12]	; 10a18 <_start@@Base+0x38>
   10a08:	bl	1095c <__libc_start_main@plt>
   10a0c:	bl	109c8 <abort@plt>
   10a10:	andeq	r1, r1, r0, lsl #8
   10a14:	andeq	r0, r1, ip, asr ip
   10a18:	andeq	r1, r1, r0, lsr #7
   10a1c:	ldr	r3, [pc, #20]	; 10a38 <_start@@Base+0x58>
   10a20:	ldr	r2, [pc, #20]	; 10a3c <_start@@Base+0x5c>
   10a24:	add	r3, pc, r3
   10a28:	ldr	r2, [r3, r2]
   10a2c:	cmp	r2, #0
   10a30:	bxeq	lr
   10a34:	b	10968 <__gmon_start__@plt>
   10a38:	ldrdeq	r1, [r1], -r4
   10a3c:	andeq	r0, r0, r0, asr r0
   10a40:	ldr	r0, [pc, #24]	; 10a60 <_start@@Base+0x80>
   10a44:	ldr	r3, [pc, #24]	; 10a64 <_start@@Base+0x84>
   10a48:	cmp	r3, r0
   10a4c:	bxeq	lr
   10a50:	ldr	r3, [pc, #16]	; 10a68 <_start@@Base+0x88>
   10a54:	cmp	r3, #0
   10a58:	bxeq	lr
   10a5c:	bx	r3
   10a60:	andeq	r2, r2, ip, asr r0
   10a64:	andeq	r2, r2, ip, asr r0
   10a68:	andeq	r0, r0, r0
   10a6c:	ldr	r0, [pc, #36]	; 10a98 <_start@@Base+0xb8>
   10a70:	ldr	r1, [pc, #36]	; 10a9c <_start@@Base+0xbc>
   10a74:	sub	r1, r1, r0
   10a78:	asr	r1, r1, #2
   10a7c:	add	r1, r1, r1, lsr #31
   10a80:	asrs	r1, r1, #1
   10a84:	bxeq	lr
   10a88:	ldr	r3, [pc, #16]	; 10aa0 <_start@@Base+0xc0>
   10a8c:	cmp	r3, #0
   10a90:	bxeq	lr
   10a94:	bx	r3
   10a98:	andeq	r2, r2, ip, asr r0
   10a9c:	andeq	r2, r2, ip, asr r0
   10aa0:	andeq	r0, r0, r0
   10aa4:	push	{r4, lr}
   10aa8:	ldr	r4, [pc, #24]	; 10ac8 <_start@@Base+0xe8>
   10aac:	ldrb	r3, [r4]
   10ab0:	cmp	r3, #0
   10ab4:	popne	{r4, pc}
   10ab8:	bl	10a40 <_start@@Base+0x60>
   10abc:	mov	r3, #1
   10ac0:	strb	r3, [r4]
   10ac4:	pop	{r4, pc}
   10ac8:	andeq	r2, r2, r4, rrx
   10acc:	b	10a6c <_start@@Base+0x8c>

00010ad0 <callback@@Base>:
   10ad0:	push	{fp, lr}
   10ad4:	mov	fp, sp
   10ad8:	sub	sp, sp, #24
   10adc:	str	r0, [fp, #-4]
   10ae0:	str	r1, [fp, #-8]
   10ae4:	str	r2, [sp, #12]
   10ae8:	str	r3, [sp, #8]
   10aec:	ldr	r0, [fp, #-8]
   10af0:	cmp	r0, #0
   10af4:	bne	10b1c <callback@@Base+0x4c>
   10af8:	movw	r0, #8288	; 0x2060
   10afc:	movt	r0, #2
   10b00:	ldr	r0, [r0]
   10b04:	ldr	r2, [fp, #-4]
   10b08:	ldr	r3, [sp, #12]
   10b0c:	movw	r1, #5136	; 0x1410
   10b10:	movt	r1, #1
   10b14:	bl	10980 <fprintf@plt>
   10b18:	b	10c50 <callback@@Base+0x180>
   10b1c:	ldr	r0, [fp, #-8]
   10b20:	cmp	r0, #2
   10b24:	bne	10b48 <callback@@Base+0x78>
   10b28:	movw	r0, #8288	; 0x2060
   10b2c:	movt	r0, #2
   10b30:	ldr	r0, [r0]
   10b34:	ldr	r2, [fp, #-4]
   10b38:	movw	r1, #5144	; 0x1418
   10b3c:	movt	r1, #1
   10b40:	bl	10980 <fprintf@plt>
   10b44:	b	10c4c <callback@@Base+0x17c>
   10b48:	ldr	r0, [fp, #-8]
   10b4c:	cmp	r0, #1
   10b50:	bne	10b78 <callback@@Base+0xa8>
   10b54:	movw	r0, #8288	; 0x2060
   10b58:	movt	r0, #2
   10b5c:	ldr	r0, [r0]
   10b60:	ldr	r2, [fp, #-4]
   10b64:	ldr	r3, [sp, #12]
   10b68:	movw	r1, #5176	; 0x1438
   10b6c:	movt	r1, #1
   10b70:	bl	10980 <fprintf@plt>
   10b74:	b	10c48 <callback@@Base+0x178>
   10b78:	movw	r0, #8296	; 0x2068
   10b7c:	movt	r0, #2
   10b80:	ldr	r0, [r0]
   10b84:	cmp	r0, #0
   10b88:	beq	10c24 <callback@@Base+0x154>
   10b8c:	ldr	r1, [fp, #-4]
   10b90:	movw	r0, #5206	; 0x1456
   10b94:	movt	r0, #1
   10b98:	bl	1092c <printf@plt>
   10b9c:	ldr	r1, [fp, #-8]
   10ba0:	cmp	r1, #5
   10ba4:	str	r1, [sp, #4]
   10ba8:	bhi	10c20 <callback@@Base+0x150>
   10bac:	add	r0, pc, #8
   10bb0:	ldr	r1, [sp, #4]
   10bb4:	ldr	r0, [r0, r1, lsl #2]
   10bb8:	mov	pc, r0
   10bbc:	ldrdeq	r0, [r1], -r4
   10bc0:	ldrdeq	r0, [r1], -r4
   10bc4:	ldrdeq	r0, [r1], -r4
   10bc8:	strdeq	r0, [r1], -r4
   10bcc:	andeq	r0, r1, r4, lsl ip
   10bd0:	andeq	r0, r1, r4, lsl #24
   10bd4:	movw	r0, #5213	; 0x145d
   10bd8:	movt	r0, #1
   10bdc:	movw	r1, #5215	; 0x145f
   10be0:	movt	r1, #1
   10be4:	movw	r2, #110	; 0x6e
   10be8:	movw	r3, #5293	; 0x14ad
   10bec:	movt	r3, #1
   10bf0:	bl	109d4 <__assert_fail@plt>
   10bf4:	movw	r0, #5366	; 0x14f6
   10bf8:	movt	r0, #1
   10bfc:	bl	1092c <printf@plt>
   10c00:	b	10c20 <callback@@Base+0x150>
   10c04:	movw	r0, #5387	; 0x150b
   10c08:	movt	r0, #1
   10c0c:	bl	1092c <printf@plt>
   10c10:	b	10c20 <callback@@Base+0x150>
   10c14:	movw	r0, #5390	; 0x150e
   10c18:	movt	r0, #1
   10c1c:	bl	1092c <printf@plt>
   10c20:	b	10c44 <callback@@Base+0x174>
   10c24:	ldr	r0, [fp, #-8]
   10c28:	cmp	r0, #4
   10c2c:	bne	10c40 <callback@@Base+0x170>
   10c30:	ldr	r1, [fp, #-4]
   10c34:	movw	r0, #5456	; 0x1550
   10c38:	movt	r0, #1
   10c3c:	bl	1092c <printf@plt>
   10c40:	b	10c44 <callback@@Base+0x174>
   10c44:	b	10c48 <callback@@Base+0x178>
   10c48:	b	10c4c <callback@@Base+0x17c>
   10c4c:	b	10c50 <callback@@Base+0x180>
   10c50:	movw	r0, #0
   10c54:	mov	sp, fp
   10c58:	pop	{fp, pc}

00010c5c <main@@Base>:
   10c5c:	push	{fp, lr}
   10c60:	mov	fp, sp
   10c64:	sub	sp, sp, #80	; 0x50
   10c68:	movw	r2, #0
   10c6c:	str	r2, [fp, #-4]
   10c70:	str	r0, [fp, #-8]
   10c74:	str	r1, [fp, #-12]
   10c78:	str	r2, [fp, #-16]
   10c7c:	movw	r0, #8296	; 0x2068
   10c80:	movt	r0, #2
   10c84:	str	r2, [r0]
   10c88:	movw	r0, #1
   10c8c:	str	r0, [fp, #-20]	; 0xffffffec
   10c90:	ldr	r0, [fp, #-8]
   10c94:	cmp	r0, #1
   10c98:	beq	10cd4 <main@@Base+0x78>
   10c9c:	ldr	r0, [fp, #-12]
   10ca0:	ldr	r0, [r0, #4]
   10ca4:	movw	r1, #5397	; 0x1515
   10ca8:	movt	r1, #1
   10cac:	bl	10920 <strcmp@plt>
   10cb0:	cmp	r0, #0
   10cb4:	beq	10cd4 <main@@Base+0x78>
   10cb8:	ldr	r0, [fp, #-12]
   10cbc:	ldr	r0, [r0, #4]
   10cc0:	movw	r1, #5400	; 0x1518
   10cc4:	movt	r1, #1
   10cc8:	bl	10920 <strcmp@plt>
   10ccc:	cmp	r0, #0
   10cd0:	bne	10ce0 <main@@Base+0x84>
   10cd4:	bl	110f8 <main@@Base+0x49c>
   10cd8:	movw	r0, #0
   10cdc:	bl	10974 <exit@plt>
   10ce0:	ldr	r0, [fp, #-12]
   10ce4:	ldr	r0, [r0, #4]
   10ce8:	movw	r1, #5407	; 0x151f
   10cec:	movt	r1, #1
   10cf0:	bl	10920 <strcmp@plt>
   10cf4:	cmp	r0, #0
   10cf8:	beq	10d18 <main@@Base+0xbc>
   10cfc:	ldr	r0, [fp, #-12]
   10d00:	ldr	r0, [r0, #4]
   10d04:	movw	r1, #5410	; 0x1522
   10d08:	movt	r1, #1
   10d0c:	bl	10920 <strcmp@plt>
   10d10:	cmp	r0, #0
   10d14:	bne	10d24 <main@@Base+0xc8>
   10d18:	bl	11348 <main@@Base+0x6ec>
   10d1c:	movw	r0, #0
   10d20:	bl	10974 <exit@plt>
   10d24:	movw	r0, #1
   10d28:	str	r0, [fp, #-24]	; 0xffffffe8
   10d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d30:	add	r0, r0, #1
   10d34:	ldr	r1, [fp, #-8]
   10d38:	cmp	r0, r1
   10d3c:	bge	10d8c <main@@Base+0x130>
   10d40:	ldr	r0, [fp, #-12]
   10d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d48:	add	r0, r0, r1, lsl #2
   10d4c:	ldr	r0, [r0]
   10d50:	movw	r1, #5420	; 0x152c
   10d54:	movt	r1, #1
   10d58:	bl	10920 <strcmp@plt>
   10d5c:	cmp	r0, #0
   10d60:	bne	10d8c <main@@Base+0x130>
   10d64:	ldr	r0, [fp, #-12]
   10d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d6c:	add	r1, r1, #1
   10d70:	add	r0, r0, r1, lsl #2
   10d74:	ldr	r0, [r0]
   10d78:	bl	10944 <coda_set_definition_path@plt>
   10d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d80:	add	r1, r1, #2
   10d84:	str	r1, [fp, #-24]	; 0xffffffe8
   10d88:	b	10e00 <main@@Base+0x1a4>
   10d8c:	movw	r0, #5423	; 0x152f
   10d90:	movt	r0, #1
   10d94:	str	r0, [fp, #-28]	; 0xffffffe4
   10d98:	ldr	r0, [fp, #-12]
   10d9c:	ldr	r0, [r0]
   10da0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10da4:	movw	r1, #0
   10da8:	bl	10938 <coda_set_definition_path_conditional@plt>
   10dac:	cmp	r0, #0
   10db0:	beq	10dfc <main@@Base+0x1a0>
   10db4:	movw	r0, #8288	; 0x2060
   10db8:	movt	r0, #2
   10dbc:	ldr	r0, [r0]
   10dc0:	str	r0, [fp, #-32]	; 0xffffffe0
   10dc4:	bl	109bc <coda_get_errno@plt>
   10dc8:	ldr	r0, [r0]
   10dcc:	bl	109a4 <coda_errno_to_string@plt>
   10dd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10dd4:	str	r0, [fp, #-36]	; 0xffffffdc
   10dd8:	mov	r0, r1
   10ddc:	movw	r1, #5449	; 0x1549
   10de0:	movt	r1, #1
   10de4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10de8:	bl	10980 <fprintf@plt>
   10dec:	movw	r1, #1
   10df0:	str	r0, [sp, #40]	; 0x28
   10df4:	mov	r0, r1
   10df8:	bl	10974 <exit@plt>
   10dfc:	b	10e00 <main@@Base+0x1a4>
   10e00:	b	10e04 <main@@Base+0x1a8>
   10e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e08:	ldr	r1, [fp, #-8]
   10e0c:	cmp	r0, r1
   10e10:	bge	10fc8 <main@@Base+0x36c>
   10e14:	ldr	r0, [fp, #-12]
   10e18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e1c:	add	r0, r0, r1, lsl #2
   10e20:	ldr	r0, [r0]
   10e24:	movw	r1, #5460	; 0x1554
   10e28:	movt	r1, #1
   10e2c:	bl	10920 <strcmp@plt>
   10e30:	cmp	r0, #0
   10e34:	beq	10e5c <main@@Base+0x200>
   10e38:	ldr	r0, [fp, #-12]
   10e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e40:	add	r0, r0, r1, lsl #2
   10e44:	ldr	r0, [r0]
   10e48:	movw	r1, #5463	; 0x1557
   10e4c:	movt	r1, #1
   10e50:	bl	10920 <strcmp@plt>
   10e54:	cmp	r0, #0
   10e58:	bne	10e68 <main@@Base+0x20c>
   10e5c:	movw	r0, #0
   10e60:	str	r0, [fp, #-20]	; 0xffffffec
   10e64:	b	10fb8 <main@@Base+0x35c>
   10e68:	ldr	r0, [fp, #-12]
   10e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e70:	add	r0, r0, r1, lsl #2
   10e74:	ldr	r0, [r0]
   10e78:	movw	r1, #5485	; 0x156d
   10e7c:	movt	r1, #1
   10e80:	bl	10920 <strcmp@plt>
   10e84:	cmp	r0, #0
   10e88:	beq	10eb0 <main@@Base+0x254>
   10e8c:	ldr	r0, [fp, #-12]
   10e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e94:	add	r0, r0, r1, lsl #2
   10e98:	ldr	r0, [r0]
   10e9c:	movw	r1, #5488	; 0x1570
   10ea0:	movt	r1, #1
   10ea4:	bl	10920 <strcmp@plt>
   10ea8:	cmp	r0, #0
   10eac:	bne	10f0c <main@@Base+0x2b0>
   10eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10eb4:	add	r0, r0, #1
   10eb8:	ldr	r1, [fp, #-8]
   10ebc:	cmp	r0, r1
   10ec0:	bge	10f0c <main@@Base+0x2b0>
   10ec4:	ldr	r0, [fp, #-12]
   10ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10ecc:	add	r1, r1, #1
   10ed0:	add	r0, r0, r1, lsl #2
   10ed4:	ldr	r0, [r0]
   10ed8:	ldrb	r0, [r0]
   10edc:	cmp	r0, #45	; 0x2d
   10ee0:	beq	10f0c <main@@Base+0x2b0>
   10ee4:	ldr	r0, [fp, #-12]
   10ee8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10eec:	add	r1, r1, #1
   10ef0:	add	r0, r0, r1, lsl #2
   10ef4:	ldr	r0, [r0]
   10ef8:	str	r0, [fp, #-16]
   10efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f00:	add	r0, r0, #1
   10f04:	str	r0, [fp, #-24]	; 0xffffffe8
   10f08:	b	10fb4 <main@@Base+0x358>
   10f0c:	ldr	r0, [fp, #-12]
   10f10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f14:	add	r0, r0, r1, lsl #2
   10f18:	ldr	r0, [r0]
   10f1c:	movw	r1, #5497	; 0x1579
   10f20:	movt	r1, #1
   10f24:	bl	10920 <strcmp@plt>
   10f28:	cmp	r0, #0
   10f2c:	beq	10f54 <main@@Base+0x2f8>
   10f30:	ldr	r0, [fp, #-12]
   10f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f38:	add	r0, r0, r1, lsl #2
   10f3c:	ldr	r0, [r0]
   10f40:	movw	r1, #5500	; 0x157c
   10f44:	movt	r1, #1
   10f48:	bl	10920 <strcmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	bne	10f68 <main@@Base+0x30c>
   10f54:	movw	r0, #8296	; 0x2068
   10f58:	movt	r0, #2
   10f5c:	movw	r1, #1
   10f60:	str	r1, [r0]
   10f64:	b	10fb0 <main@@Base+0x354>
   10f68:	ldr	r0, [fp, #-12]
   10f6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f70:	add	r0, r0, r1, lsl #2
   10f74:	ldr	r0, [r0]
   10f78:	ldrb	r0, [r0]
   10f7c:	cmp	r0, #45	; 0x2d
   10f80:	beq	10f88 <main@@Base+0x32c>
   10f84:	b	10fc8 <main@@Base+0x36c>
   10f88:	movw	r0, #8288	; 0x2060
   10f8c:	movt	r0, #2
   10f90:	ldr	r0, [r0]
   10f94:	movw	r1, #5512	; 0x1588
   10f98:	movt	r1, #1
   10f9c:	bl	10980 <fprintf@plt>
   10fa0:	str	r0, [sp, #36]	; 0x24
   10fa4:	bl	110f8 <main@@Base+0x49c>
   10fa8:	movw	r0, #1
   10fac:	bl	10974 <exit@plt>
   10fb0:	b	10fb4 <main@@Base+0x358>
   10fb4:	b	10fb8 <main@@Base+0x35c>
   10fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10fbc:	add	r0, r0, #1
   10fc0:	str	r0, [fp, #-24]	; 0xffffffe8
   10fc4:	b	10e04 <main@@Base+0x1a8>
   10fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10fcc:	ldr	r1, [fp, #-8]
   10fd0:	cmp	r0, r1
   10fd4:	bne	11000 <main@@Base+0x3a4>
   10fd8:	movw	r0, #8288	; 0x2060
   10fdc:	movt	r0, #2
   10fe0:	ldr	r0, [r0]
   10fe4:	movw	r1, #5512	; 0x1588
   10fe8:	movt	r1, #1
   10fec:	bl	10980 <fprintf@plt>
   10ff0:	str	r0, [sp, #32]
   10ff4:	bl	110f8 <main@@Base+0x49c>
   10ff8:	movw	r0, #1
   10ffc:	bl	10974 <exit@plt>
   11000:	bl	1098c <coda_init@plt>
   11004:	cmp	r0, #0
   11008:	beq	11054 <main@@Base+0x3f8>
   1100c:	movw	r0, #8288	; 0x2060
   11010:	movt	r0, #2
   11014:	ldr	r0, [r0]
   11018:	str	r0, [sp, #28]
   1101c:	bl	109bc <coda_get_errno@plt>
   11020:	ldr	r0, [r0]
   11024:	bl	109a4 <coda_errno_to_string@plt>
   11028:	ldr	r1, [sp, #28]
   1102c:	str	r0, [sp, #24]
   11030:	mov	r0, r1
   11034:	movw	r1, #5449	; 0x1549
   11038:	movt	r1, #1
   1103c:	ldr	r2, [sp, #24]
   11040:	bl	10980 <fprintf@plt>
   11044:	movw	r1, #1
   11048:	str	r0, [sp, #20]
   1104c:	mov	r0, r1
   11050:	bl	10974 <exit@plt>
   11054:	ldr	r0, [fp, #-20]	; 0xffffffec
   11058:	bl	10998 <coda_set_option_perform_conversions@plt>
   1105c:	ldr	r1, [fp, #-16]
   11060:	ldr	r2, [fp, #-8]
   11064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11068:	sub	r2, r2, r3
   1106c:	ldr	ip, [fp, #-12]
   11070:	add	r3, ip, r3, lsl #2
   11074:	str	r0, [sp, #16]
   11078:	mov	r0, r1
   1107c:	mov	r1, r2
   11080:	mov	r2, r3
   11084:	movw	r3, #2768	; 0xad0
   11088:	movt	r3, #1
   1108c:	movw	ip, #0
   11090:	str	ip, [sp]
   11094:	bl	10914 <coda_match_filefilter@plt>
   11098:	cmp	r0, #0
   1109c:	beq	110e8 <main@@Base+0x48c>
   110a0:	movw	r0, #8288	; 0x2060
   110a4:	movt	r0, #2
   110a8:	ldr	r0, [r0]
   110ac:	str	r0, [sp, #12]
   110b0:	bl	109bc <coda_get_errno@plt>
   110b4:	ldr	r0, [r0]
   110b8:	bl	109a4 <coda_errno_to_string@plt>
   110bc:	ldr	r1, [sp, #12]
   110c0:	str	r0, [sp, #8]
   110c4:	mov	r0, r1
   110c8:	movw	r1, #5449	; 0x1549
   110cc:	movt	r1, #1
   110d0:	ldr	r2, [sp, #8]
   110d4:	bl	10980 <fprintf@plt>
   110d8:	movw	r1, #1
   110dc:	str	r0, [sp, #4]
   110e0:	mov	r0, r1
   110e4:	bl	10974 <exit@plt>
   110e8:	bl	10950 <coda_done@plt>
   110ec:	movw	r0, #0
   110f0:	mov	sp, fp
   110f4:	pop	{fp, pc}
   110f8:	push	{fp, lr}
   110fc:	mov	fp, sp
   11100:	sub	sp, sp, #112	; 0x70
   11104:	movw	r0, #5538	; 0x15a2
   11108:	movt	r0, #1
   1110c:	bl	1092c <printf@plt>
   11110:	movw	r1, #5546	; 0x15aa
   11114:	movt	r1, #1
   11118:	str	r0, [fp, #-4]
   1111c:	mov	r0, r1
   11120:	bl	1092c <printf@plt>
   11124:	movw	r1, #5612	; 0x15ec
   11128:	movt	r1, #1
   1112c:	str	r0, [fp, #-8]
   11130:	mov	r0, r1
   11134:	bl	1092c <printf@plt>
   11138:	movw	r1, #5692	; 0x163c
   1113c:	movt	r1, #1
   11140:	str	r0, [fp, #-12]
   11144:	mov	r0, r1
   11148:	bl	1092c <printf@plt>
   1114c:	movw	r1, #6374	; 0x18e6
   11150:	movt	r1, #1
   11154:	str	r0, [fp, #-16]
   11158:	mov	r0, r1
   1115c:	bl	1092c <printf@plt>
   11160:	movw	r1, #5716	; 0x1654
   11164:	movt	r1, #1
   11168:	str	r0, [fp, #-20]	; 0xffffffec
   1116c:	mov	r0, r1
   11170:	bl	1092c <printf@plt>
   11174:	movw	r1, #5734	; 0x1666
   11178:	movt	r1, #1
   1117c:	str	r0, [fp, #-24]	; 0xffffffe8
   11180:	mov	r0, r1
   11184:	bl	1092c <printf@plt>
   11188:	movw	r1, #5773	; 0x168d
   1118c:	movt	r1, #1
   11190:	str	r0, [fp, #-28]	; 0xffffffe4
   11194:	mov	r0, r1
   11198:	bl	1092c <printf@plt>
   1119c:	movw	r1, #5832	; 0x16c8
   111a0:	movt	r1, #1
   111a4:	str	r0, [fp, #-32]	; 0xffffffe0
   111a8:	mov	r0, r1
   111ac:	bl	1092c <printf@plt>
   111b0:	movw	r1, #5880	; 0x16f8
   111b4:	movt	r1, #1
   111b8:	str	r0, [fp, #-36]	; 0xffffffdc
   111bc:	mov	r0, r1
   111c0:	bl	1092c <printf@plt>
   111c4:	movw	r1, #5953	; 0x1741
   111c8:	movt	r1, #1
   111cc:	str	r0, [fp, #-40]	; 0xffffffd8
   111d0:	mov	r0, r1
   111d4:	bl	1092c <printf@plt>
   111d8:	movw	r1, #6033	; 0x1791
   111dc:	movt	r1, #1
   111e0:	str	r0, [fp, #-44]	; 0xffffffd4
   111e4:	mov	r0, r1
   111e8:	bl	1092c <printf@plt>
   111ec:	movw	r1, #6078	; 0x17be
   111f0:	movt	r1, #1
   111f4:	str	r0, [fp, #-48]	; 0xffffffd0
   111f8:	mov	r0, r1
   111fc:	bl	1092c <printf@plt>
   11200:	movw	r1, #6105	; 0x17d9
   11204:	movt	r1, #1
   11208:	str	r0, [fp, #-52]	; 0xffffffcc
   1120c:	mov	r0, r1
   11210:	bl	1092c <printf@plt>
   11214:	movw	r1, #6374	; 0x18e6
   11218:	movt	r1, #1
   1121c:	str	r0, [sp, #56]	; 0x38
   11220:	mov	r0, r1
   11224:	bl	1092c <printf@plt>
   11228:	movw	r1, #6162	; 0x1812
   1122c:	movt	r1, #1
   11230:	str	r0, [sp, #52]	; 0x34
   11234:	mov	r0, r1
   11238:	bl	1092c <printf@plt>
   1123c:	movw	r1, #6187	; 0x182b
   11240:	movt	r1, #1
   11244:	str	r0, [sp, #48]	; 0x30
   11248:	mov	r0, r1
   1124c:	bl	1092c <printf@plt>
   11250:	movw	r1, #6374	; 0x18e6
   11254:	movt	r1, #1
   11258:	str	r0, [sp, #44]	; 0x2c
   1125c:	mov	r0, r1
   11260:	bl	1092c <printf@plt>
   11264:	movw	r1, #6218	; 0x184a
   11268:	movt	r1, #1
   1126c:	str	r0, [sp, #40]	; 0x28
   11270:	mov	r0, r1
   11274:	bl	1092c <printf@plt>
   11278:	movw	r1, #6246	; 0x1866
   1127c:	movt	r1, #1
   11280:	str	r0, [sp, #36]	; 0x24
   11284:	mov	r0, r1
   11288:	bl	1092c <printf@plt>
   1128c:	movw	r1, #6374	; 0x18e6
   11290:	movt	r1, #1
   11294:	str	r0, [sp, #32]
   11298:	mov	r0, r1
   1129c:	bl	1092c <printf@plt>
   112a0:	movw	r1, #6297	; 0x1899
   112a4:	movt	r1, #1
   112a8:	str	r0, [sp, #28]
   112ac:	mov	r0, r1
   112b0:	bl	1092c <printf@plt>
   112b4:	movw	r1, #6376	; 0x18e8
   112b8:	movt	r1, #1
   112bc:	str	r0, [sp, #24]
   112c0:	mov	r0, r1
   112c4:	bl	1092c <printf@plt>
   112c8:	movw	r1, #6450	; 0x1932
   112cc:	movt	r1, #1
   112d0:	str	r0, [sp, #20]
   112d4:	mov	r0, r1
   112d8:	bl	1092c <printf@plt>
   112dc:	movw	r1, #6494	; 0x195e
   112e0:	movt	r1, #1
   112e4:	str	r0, [sp, #16]
   112e8:	mov	r0, r1
   112ec:	bl	1092c <printf@plt>
   112f0:	movw	r1, #6571	; 0x19ab
   112f4:	movt	r1, #1
   112f8:	str	r0, [sp, #12]
   112fc:	mov	r0, r1
   11300:	bl	1092c <printf@plt>
   11304:	movw	r1, #6642	; 0x19f2
   11308:	movt	r1, #1
   1130c:	str	r0, [sp, #8]
   11310:	mov	r0, r1
   11314:	bl	1092c <printf@plt>
   11318:	movw	r1, #6706	; 0x1a32
   1131c:	movt	r1, #1
   11320:	str	r0, [sp, #4]
   11324:	mov	r0, r1
   11328:	bl	1092c <printf@plt>
   1132c:	movw	r1, #6374	; 0x18e6
   11330:	movt	r1, #1
   11334:	str	r0, [sp]
   11338:	mov	r0, r1
   1133c:	bl	1092c <printf@plt>
   11340:	mov	sp, fp
   11344:	pop	{fp, pc}
   11348:	push	{fp, lr}
   1134c:	mov	fp, sp
   11350:	sub	sp, sp, #16
   11354:	bl	109b0 <coda_get_libcoda_version@plt>
   11358:	movw	r1, #6771	; 0x1a73
   1135c:	movt	r1, #1
   11360:	str	r0, [fp, #-4]
   11364:	mov	r0, r1
   11368:	ldr	r1, [fp, #-4]
   1136c:	bl	1092c <printf@plt>
   11370:	movw	r1, #6784	; 0x1a80
   11374:	movt	r1, #1
   11378:	str	r0, [sp, #8]
   1137c:	mov	r0, r1
   11380:	bl	1092c <printf@plt>
   11384:	movw	r1, #6374	; 0x18e6
   11388:	movt	r1, #1
   1138c:	str	r0, [sp, #4]
   11390:	mov	r0, r1
   11394:	bl	1092c <printf@plt>
   11398:	mov	sp, fp
   1139c:	pop	{fp, pc}

000113a0 <__libc_csu_init@@Base>:
   113a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113a4:	mov	r7, r0
   113a8:	ldr	r6, [pc, #72]	; 113f8 <__libc_csu_init@@Base+0x58>
   113ac:	ldr	r5, [pc, #72]	; 113fc <__libc_csu_init@@Base+0x5c>
   113b0:	add	r6, pc, r6
   113b4:	add	r5, pc, r5
   113b8:	sub	r6, r6, r5
   113bc:	mov	r8, r1
   113c0:	mov	r9, r2
   113c4:	bl	108f4 <coda_match_filefilter@plt-0x20>
   113c8:	asrs	r6, r6, #2
   113cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113d0:	mov	r4, #0
   113d4:	add	r4, r4, #1
   113d8:	ldr	r3, [r5], #4
   113dc:	mov	r2, r9
   113e0:	mov	r1, r8
   113e4:	mov	r0, r7
   113e8:	blx	r3
   113ec:	cmp	r6, r4
   113f0:	bne	113d4 <__libc_csu_init@@Base+0x34>
   113f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113f8:	andeq	r0, r1, ip, lsr fp
   113fc:	andeq	r0, r1, r4, lsr fp

00011400 <__libc_csu_fini@@Base>:
   11400:	bx	lr

Disassembly of section .fini:

00011404 <.fini>:
   11404:	push	{r3, lr}
   11408:	pop	{r3, pc}
