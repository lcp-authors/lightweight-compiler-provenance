
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010548 <.init>:
   10548:	push	{r3, lr}
   1054c:	bl	10670 <abort@plt+0x3c>
   10550:	pop	{r3, pc}

Disassembly of section .plt:

00010554 <calloc@plt-0x14>:
   10554:	push	{lr}		; (str lr, [sp, #-4]!)
   10558:	ldr	lr, [pc, #4]	; 10564 <calloc@plt-0x4>
   1055c:	add	lr, pc, lr
   10560:	ldr	pc, [lr, #8]!
   10564:	muleq	r1, ip, sl

00010568 <calloc@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #69632	; 0x11000
   10570:	ldr	pc, [ip, #2716]!	; 0xa9c

00010574 <raise@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #69632	; 0x11000
   1057c:	ldr	pc, [ip, #2708]!	; 0xa94

00010580 <strcmp@plt>:
   10580:	add	ip, pc, #0, 12
   10584:	add	ip, ip, #69632	; 0x11000
   10588:	ldr	pc, [ip, #2700]!	; 0xa8c

0001058c <printf@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2692]!	; 0xa84

00010598 <free@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2684]!	; 0xa7c

000105a4 <fgets@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2676]!	; 0xa74

000105b0 <time@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2668]!	; 0xa6c

000105bc <realloc@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2660]!	; 0xa64

000105c8 <strcat@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2652]!	; 0xa5c

000105d4 <strcpy@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2644]!	; 0xa54

000105e0 <malloc@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2636]!	; 0xa4c

000105ec <__libc_start_main@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2628]!	; 0xa44

000105f8 <scanf@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2620]!	; 0xa3c

00010604 <__gmon_start__@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2612]!	; 0xa34

00010610 <strlen@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2604]!	; 0xa2c

0001061c <srand@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2596]!	; 0xa24

00010628 <rand@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2588]!	; 0xa1c

00010634 <abort@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2580]!	; 0xa14

Disassembly of section .text:

00010640 <.text>:
   10640:	bleq	4c784 <stdin@@GLIBC_2.4+0x2a724>
   10644:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10648:	strbtmi	fp, [sl], -r2, lsl #24
   1064c:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10650:			; <UNDEFINED> instruction: 0xc010f8df
   10654:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10658:	blmi	12266c <stdin@@GLIBC_2.4+0x10060c>
   1065c:	svc	0x00c6f7ff
   10660:	svc	0x00e8f7ff
   10664:	andeq	r1, r1, r5, asr r3
   10668:	andeq	r0, r1, r8, ror #14
   1066c:	andeq	r1, r1, r5, lsl r3
   10670:	ldr	r3, [pc, #20]	; 1068c <abort@plt+0x58>
   10674:	ldr	r2, [pc, #20]	; 10690 <abort@plt+0x5c>
   10678:	add	r3, pc, r3
   1067c:	ldr	r2, [r3, r2]
   10680:	cmp	r2, #0
   10684:	bxeq	lr
   10688:	b	10604 <__gmon_start__@plt>
   1068c:	andeq	r1, r1, r0, lsl #19
   10690:	andeq	r0, r0, r4, asr r0
   10694:	rsbeq	pc, r0, r2, asr #4
   10698:	andeq	pc, r2, r0, asr #5
   1069c:	msreq	SPSR_, #536870916	; 0x20000004
   106a0:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   106a4:	andle	r4, r5, r3, lsl #5
   106a8:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   106ac:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   106b0:	ldrmi	fp, [r8, -r3, lsl #2]
   106b4:	svclt	0x00004770
   106b8:	rsbeq	pc, r0, r2, asr #4
   106bc:	andeq	pc, r2, r0, asr #5
   106c0:	msreq	(UNDEF: 96), r2
   106c4:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   106c8:	svceq	0x00d91a0b
   106cc:			; <UNDEFINED> instruction: 0x01a3eb01
   106d0:	andle	r1, r5, r9, asr #32
   106d4:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   106d8:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   106dc:	ldrmi	fp, [r8, -r3, lsl #2]
   106e0:	svclt	0x00004770
   106e4:	vqrshl.s8	d27, d0, d2
   106e8:	vmls.i<illegal width 8>	d16, d0, d0[5]
   106ec:	stmdavc	r3!, {r1, sl}
   106f0:			; <UNDEFINED> instruction: 0xf7ffb91b
   106f4:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   106f8:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   106fc:	svclt	0x0000e7dc
   10700:	mov	ip, sp
   10704:	sub	sp, sp, #16
   10708:	str	ip, [sp]
   1070c:	str	lr, [sp, #4]
   10710:	str	r4, [sp, #8]
   10714:	str	r5, [sp, #12]
   10718:	mov	r4, r0
   1071c:	mov	r5, #0
   10720:	mov	r1, r5
   10724:	mov	r0, r4
   10728:	bl	10a74 <abort@plt+0x440>
   1072c:	ldr	r2, [pc, #48]	; 10764 <abort@plt+0x130>
   10730:	add	r1, r5, #1
   10734:	mov	r3, r0
   10738:	mov	r0, r2
   1073c:	mov	r2, r3
   10740:	bl	1058c <printf@plt>
   10744:	add	r5, r5, #1
   10748:	cmp	r5, #5
   1074c:	blt	10720 <abort@plt+0xec>
   10750:	ldr	r4, [sp, #8]
   10754:	ldr	r5, [sp, #12]
   10758:	ldr	lr, [sp, #4]
   1075c:	add	sp, sp, #16
   10760:	bx	lr
   10764:	andeq	r1, r1, r4, ror r4
   10768:	mov	ip, sp
   1076c:	sub	sp, sp, #120	; 0x78
   10770:	str	ip, [sp]
   10774:	str	lr, [sp, #4]
   10778:	str	r4, [sp, #8]
   1077c:	str	r5, [sp, #12]
   10780:	bl	10898 <abort@plt+0x264>
   10784:	mov	r4, r0
   10788:	mov	r5, #0
   1078c:	ldr	r0, [pc, #232]	; 1087c <abort@plt+0x248>
   10790:	add	r1, r5, #1
   10794:	bl	1058c <printf@plt>
   10798:	add	r0, sp, #16
   1079c:	mov	r1, #100	; 0x64
   107a0:	ldr	r3, [pc, #220]	; 10884 <abort@plt+0x250>
   107a4:	ldr	r2, [r3]
   107a8:	bl	105a4 <fgets@plt>
   107ac:	add	r0, sp, #16
   107b0:	bl	10610 <strlen@plt>
   107b4:	add	r1, sp, #16
   107b8:	add	r0, r1, r0
   107bc:	mov	ip, #0
   107c0:	sub	lr, r0, #4096	; 0x1000
   107c4:	strb	ip, [lr, #4095]	; 0xfff
   107c8:	add	r1, sp, #16
   107cc:	mov	r2, r5
   107d0:	mov	r0, r4
   107d4:	bl	10ad0 <abort@plt+0x49c>
   107d8:	add	r5, r5, #1
   107dc:	cmp	r5, #5
   107e0:	blt	1078c <abort@plt+0x158>
   107e4:	mov	r0, r4
   107e8:	bl	10700 <abort@plt+0xcc>
   107ec:	ldr	r0, [pc, #156]	; 10890 <abort@plt+0x25c>
   107f0:	bl	1058c <printf@plt>
   107f4:	ldr	r0, [pc, #140]	; 10888 <abort@plt+0x254>
   107f8:	add	r1, sp, #16
   107fc:	bl	105f8 <scanf@plt>
   10800:	add	r1, sp, #16
   10804:	mov	r0, r4
   10808:	bl	10ccc <abort@plt+0x698>
   1080c:	mov	r1, r0
   10810:	mov	r0, r4
   10814:	bl	10c14 <abort@plt+0x5e0>
   10818:	cmp	r0, #0
   1081c:	beq	1082c <abort@plt+0x1f8>
   10820:	ldr	r0, [pc, #108]	; 10894 <abort@plt+0x260>
   10824:	bl	1058c <printf@plt>
   10828:	b	10834 <abort@plt+0x200>
   1082c:	mov	r0, r4
   10830:	bl	10700 <abort@plt+0xcc>
   10834:	mov	r0, r4
   10838:	bl	10d54 <abort@plt+0x720>
   1083c:	cmp	r0, #0
   10840:	beq	1084c <abort@plt+0x218>
   10844:	ldr	r0, [pc, #64]	; 1088c <abort@plt+0x258>
   10848:	bl	1058c <printf@plt>
   1084c:	ldr	r0, [pc, #44]	; 10880 <abort@plt+0x24c>
   10850:	bl	1058c <printf@plt>
   10854:	mov	r0, r4
   10858:	bl	10700 <abort@plt+0xcc>
   1085c:	mov	r0, r4
   10860:	bl	108e4 <abort@plt+0x2b0>
   10864:	mov	r0, #0
   10868:	ldr	r4, [sp, #8]
   1086c:	ldr	r5, [sp, #12]
   10870:	ldr	lr, [sp, #4]
   10874:	add	sp, sp, #120	; 0x78
   10878:	bx	lr
   1087c:	andeq	r1, r1, r0, lsr r4
   10880:	andeq	r1, r1, r3, asr #8
   10884:	andeq	r2, r2, r0, rrx
   10888:	strdeq	r1, [r1], -r4
   1088c:	strdeq	r1, [r1], -r7
   10890:	andeq	r1, r1, r4, asr r4
   10894:	andeq	r1, r1, r9, lsl r4
   10898:	mov	ip, sp
   1089c:	sub	sp, sp, #8
   108a0:	str	ip, [sp]
   108a4:	str	lr, [sp, #4]
   108a8:	mov	r0, #12
   108ac:	bl	105e0 <malloc@plt>
   108b0:	cmp	r0, #0
   108b4:	bne	108c0 <abort@plt+0x28c>
   108b8:	mov	r0, #0
   108bc:	b	108d8 <abort@plt+0x2a4>
   108c0:	mov	r1, #0
   108c4:	str	r1, [r0]
   108c8:	mov	r2, #0
   108cc:	str	r2, [r0, #4]
   108d0:	mov	r1, #0
   108d4:	str	r1, [r0, #8]
   108d8:	ldr	lr, [sp, #4]
   108dc:	add	sp, sp, #8
   108e0:	bx	lr
   108e4:	mov	ip, sp
   108e8:	sub	sp, sp, #16
   108ec:	str	ip, [sp]
   108f0:	str	lr, [sp, #4]
   108f4:	str	r4, [sp, #8]
   108f8:	str	r5, [sp, #12]
   108fc:	mov	r4, r0
   10900:	cmp	r4, #0
   10904:	beq	1094c <abort@plt+0x318>
   10908:	mov	r5, #0
   1090c:	ldr	r1, [r4]
   10910:	cmp	r5, r1
   10914:	bge	1092c <abort@plt+0x2f8>
   10918:	ldr	r0, [r4, #8]
   1091c:	ldr	r0, [r0, r5, lsl #2]
   10920:	bl	10598 <free@plt>
   10924:	add	r5, r5, #1
   10928:	b	1090c <abort@plt+0x2d8>
   1092c:	ldr	r0, [r4, #8]
   10930:	bl	10598 <free@plt>
   10934:	mov	r0, r4
   10938:	ldr	r4, [sp, #8]
   1093c:	ldr	r5, [sp, #12]
   10940:	ldr	lr, [sp, #4]
   10944:	add	sp, sp, #16
   10948:	b	10598 <free@plt>
   1094c:	ldr	r4, [sp, #8]
   10950:	ldr	r5, [sp, #12]
   10954:	ldr	lr, [sp, #4]
   10958:	add	sp, sp, #16
   1095c:	bx	lr
   10960:	mov	ip, sp
   10964:	sub	sp, sp, #24
   10968:	str	ip, [sp]
   1096c:	str	lr, [sp, #4]
   10970:	str	r4, [sp, #8]
   10974:	str	r5, [sp, #12]
   10978:	str	r6, [sp, #16]
   1097c:	str	r7, [sp, #20]
   10980:	mov	r6, r2
   10984:	mov	r4, r1
   10988:	mov	r7, r0
   1098c:	mov	r2, #1
   10990:	cmp	r4, #0
   10994:	movlt	r3, #1
   10998:	movge	r3, #0
   1099c:	cmp	r7, #0
   109a0:	moveq	r3, r2
   109a4:	movne	r3, r3
   109a8:	cmp	r3, #0
   109ac:	bne	10a24 <abort@plt+0x3f0>
   109b0:	ldr	r1, [r7]
   109b4:	cmp	r4, r1
   109b8:	bge	10a24 <abort@plt+0x3f0>
   109bc:	mov	r0, r6
   109c0:	bl	10610 <strlen@plt>
   109c4:	mov	r5, r0
   109c8:	ldr	r1, [r7, #8]
   109cc:	ldr	r0, [r1, r4, lsl #2]
   109d0:	bl	10610 <strlen@plt>
   109d4:	cmp	r5, r0
   109d8:	bls	10a0c <abort@plt+0x3d8>
   109dc:	ldr	r0, [r7, #8]
   109e0:	ldr	r0, [r0, r4, lsl #2]
   109e4:	add	r1, r5, #1
   109e8:	bl	105bc <realloc@plt>
   109ec:	ldr	ip, [r7, #8]
   109f0:	str	r0, [ip, r4, lsl #2]
   109f4:	ldr	r0, [r7, #8]
   109f8:	ldr	r3, [r0, r4, lsl #2]
   109fc:	cmp	r3, #0
   10a00:	bne	10a0c <abort@plt+0x3d8>
   10a04:	mvn	r0, #0
   10a08:	b	10a28 <abort@plt+0x3f4>
   10a0c:	ldr	r1, [r7, #8]
   10a10:	ldr	r0, [r1, r4, lsl #2]
   10a14:	mov	r1, r6
   10a18:	bl	105d4 <strcpy@plt>
   10a1c:	mov	r0, r4
   10a20:	b	10a28 <abort@plt+0x3f4>
   10a24:	mvn	r0, #0
   10a28:	ldr	r4, [sp, #8]
   10a2c:	ldr	r5, [sp, #12]
   10a30:	ldr	r6, [sp, #16]
   10a34:	ldr	r7, [sp, #20]
   10a38:	ldr	lr, [sp, #4]
   10a3c:	add	sp, sp, #24
   10a40:	bx	lr
   10a44:	mov	ip, sp
   10a48:	sub	sp, sp, #8
   10a4c:	str	ip, [sp]
   10a50:	str	lr, [sp, #4]
   10a54:	cmp	r0, #0
   10a58:	bne	10a64 <abort@plt+0x430>
   10a5c:	mvn	r0, #0
   10a60:	b	10a68 <abort@plt+0x434>
   10a64:	ldr	r0, [r0]
   10a68:	ldr	lr, [sp, #4]
   10a6c:	add	sp, sp, #8
   10a70:	bx	lr
   10a74:	mov	ip, sp
   10a78:	sub	sp, sp, #8
   10a7c:	str	ip, [sp]
   10a80:	str	lr, [sp, #4]
   10a84:	mov	r2, #1
   10a88:	cmp	r1, #0
   10a8c:	movlt	ip, #1
   10a90:	movge	ip, #0
   10a94:	cmp	r0, #0
   10a98:	moveq	r2, r2
   10a9c:	movne	r2, ip
   10aa0:	cmp	r2, #0
   10aa4:	bne	10ac0 <abort@plt+0x48c>
   10aa8:	ldr	r2, [r0]
   10aac:	cmp	r1, r2
   10ab0:	bge	10ac0 <abort@plt+0x48c>
   10ab4:	ldr	r3, [r0, #8]
   10ab8:	ldr	r0, [r3, r1, lsl #2]
   10abc:	b	10ac4 <abort@plt+0x490>
   10ac0:	mov	r0, #0
   10ac4:	ldr	lr, [sp, #4]
   10ac8:	add	sp, sp, #8
   10acc:	bx	lr
   10ad0:	mov	ip, sp
   10ad4:	sub	sp, sp, #24
   10ad8:	str	ip, [sp]
   10adc:	str	lr, [sp, #4]
   10ae0:	str	r4, [sp, #8]
   10ae4:	str	r5, [sp, #12]
   10ae8:	str	r6, [sp, #16]
   10aec:	mov	r5, r2
   10af0:	mov	r4, r1
   10af4:	mov	r6, r0
   10af8:	mov	r2, #1
   10afc:	cmp	r5, #0
   10b00:	movlt	ip, #1
   10b04:	movge	ip, #0
   10b08:	cmp	r6, #0
   10b0c:	moveq	r2, r2
   10b10:	movne	r2, ip
   10b14:	cmp	r2, #0
   10b18:	bne	10bf8 <abort@plt+0x5c4>
   10b1c:	ldr	r2, [r6]
   10b20:	cmp	r5, r2
   10b24:	bgt	10bf8 <abort@plt+0x5c4>
   10b28:	ldr	r1, [r6, #4]
   10b2c:	cmp	r2, r1
   10b30:	bne	10b74 <abort@plt+0x540>
   10b34:	cmp	r1, #0
   10b38:	beq	10b48 <abort@plt+0x514>
   10b3c:	lsl	r0, r1, #1
   10b40:	str	r0, [r6, #4]
   10b44:	b	10b50 <abort@plt+0x51c>
   10b48:	mov	r1, #1
   10b4c:	str	r1, [r6, #4]
   10b50:	ldr	r0, [r6, #8]
   10b54:	ldr	r1, [r6, #4]
   10b58:	lsl	r1, r1, #2
   10b5c:	bl	105bc <realloc@plt>
   10b60:	str	r0, [r6, #8]
   10b64:	cmp	r0, #0
   10b68:	bne	10b74 <abort@plt+0x540>
   10b6c:	mvn	r0, #0
   10b70:	b	10bfc <abort@plt+0x5c8>
   10b74:	ldr	r0, [r6]
   10b78:	sub	r1, r0, #1
   10b7c:	cmp	r1, r5
   10b80:	blt	10ba8 <abort@plt+0x574>
   10b84:	ldr	r0, [r6, #8]
   10b88:	lsl	ip, r1, #2
   10b8c:	add	ip, r0, ip
   10b90:	add	r2, ip, #4
   10b94:	add	r3, r0, r1, lsl #2
   10b98:	ldr	lr, [r3]
   10b9c:	str	lr, [r2]
   10ba0:	sub	r1, r1, #1
   10ba4:	b	10b7c <abort@plt+0x548>
   10ba8:	mov	r0, r4
   10bac:	bl	10610 <strlen@plt>
   10bb0:	add	r0, r0, #1
   10bb4:	mov	r1, #1
   10bb8:	bl	10568 <calloc@plt>
   10bbc:	ldr	r2, [r6, #8]
   10bc0:	str	r0, [r2, r5, lsl #2]
   10bc4:	ldr	r3, [r6, #8]
   10bc8:	ldr	r0, [r3, r5, lsl #2]
   10bcc:	cmp	r0, #0
   10bd0:	bne	10bdc <abort@plt+0x5a8>
   10bd4:	mvn	r0, #0
   10bd8:	b	10bfc <abort@plt+0x5c8>
   10bdc:	mov	r1, r4
   10be0:	bl	105d4 <strcpy@plt>
   10be4:	ldr	r3, [r6]
   10be8:	add	r0, r3, #1
   10bec:	str	r0, [r6]
   10bf0:	mov	r0, r5
   10bf4:	b	10bfc <abort@plt+0x5c8>
   10bf8:	mvn	r0, #0
   10bfc:	ldr	r4, [sp, #8]
   10c00:	ldr	r5, [sp, #12]
   10c04:	ldr	r6, [sp, #16]
   10c08:	ldr	lr, [sp, #4]
   10c0c:	add	sp, sp, #24
   10c10:	bx	lr
   10c14:	mov	ip, sp
   10c18:	sub	sp, sp, #16
   10c1c:	str	ip, [sp]
   10c20:	str	lr, [sp, #4]
   10c24:	str	r4, [sp, #8]
   10c28:	str	r5, [sp, #12]
   10c2c:	mov	r4, r1
   10c30:	mov	r5, r0
   10c34:	mov	ip, #1
   10c38:	cmp	r4, #0
   10c3c:	movlt	r2, #1
   10c40:	movge	r2, #0
   10c44:	cmp	r5, #0
   10c48:	moveq	r2, ip
   10c4c:	movne	r2, r2
   10c50:	cmp	r2, #0
   10c54:	bne	10cb4 <abort@plt+0x680>
   10c58:	ldr	r2, [r5]
   10c5c:	cmp	r4, r2
   10c60:	bge	10cb4 <abort@plt+0x680>
   10c64:	ldr	r1, [r5, #8]
   10c68:	ldr	r0, [r1, r4, lsl #2]
   10c6c:	bl	10598 <free@plt>
   10c70:	add	r4, r4, #1
   10c74:	ldr	r1, [r5]
   10c78:	cmp	r4, r1
   10c7c:	bge	10ca4 <abort@plt+0x670>
   10c80:	ldr	r0, [r5, #8]
   10c84:	lsl	r3, r4, #2
   10c88:	add	r1, r0, r3
   10c8c:	sub	r3, r1, #4
   10c90:	add	ip, r0, r4, lsl #2
   10c94:	ldr	lr, [ip]
   10c98:	str	lr, [r3]
   10c9c:	add	r4, r4, #1
   10ca0:	b	10c74 <abort@plt+0x640>
   10ca4:	sub	r0, r1, #1
   10ca8:	str	r0, [r5]
   10cac:	mov	r0, #0
   10cb0:	b	10cb8 <abort@plt+0x684>
   10cb4:	mvn	r0, #0
   10cb8:	ldr	r4, [sp, #8]
   10cbc:	ldr	r5, [sp, #12]
   10cc0:	ldr	lr, [sp, #4]
   10cc4:	add	sp, sp, #16
   10cc8:	bx	lr
   10ccc:	mov	ip, sp
   10cd0:	sub	sp, sp, #24
   10cd4:	str	ip, [sp]
   10cd8:	str	lr, [sp, #4]
   10cdc:	str	r4, [sp, #8]
   10ce0:	str	r5, [sp, #12]
   10ce4:	str	r6, [sp, #16]
   10ce8:	mov	r5, r1
   10cec:	mov	r6, r0
   10cf0:	cmp	r6, #0
   10cf4:	bne	10d00 <abort@plt+0x6cc>
   10cf8:	mvn	r0, #0
   10cfc:	b	10d3c <abort@plt+0x708>
   10d00:	mov	r4, #0
   10d04:	ldr	r3, [r6]
   10d08:	cmp	r4, r3
   10d0c:	bge	10d38 <abort@plt+0x704>
   10d10:	ldr	r0, [r6, #8]
   10d14:	ldr	r0, [r0, r4, lsl #2]
   10d18:	mov	r1, r5
   10d1c:	bl	10580 <strcmp@plt>
   10d20:	cmp	r0, #0
   10d24:	bne	10d30 <abort@plt+0x6fc>
   10d28:	mov	r0, r4
   10d2c:	b	10d3c <abort@plt+0x708>
   10d30:	add	r4, r4, #1
   10d34:	b	10d04 <abort@plt+0x6d0>
   10d38:	mvn	r0, #0
   10d3c:	ldr	r4, [sp, #8]
   10d40:	ldr	r5, [sp, #12]
   10d44:	ldr	r6, [sp, #16]
   10d48:	ldr	lr, [sp, #4]
   10d4c:	add	sp, sp, #24
   10d50:	bx	lr
   10d54:	mov	ip, sp
   10d58:	sub	sp, sp, #24
   10d5c:	str	ip, [sp]
   10d60:	str	lr, [sp, #4]
   10d64:	str	r4, [sp, #8]
   10d68:	str	r5, [sp, #12]
   10d6c:	str	r6, [sp, #16]
   10d70:	str	r7, [sp, #20]
   10d74:	mov	r7, r0
   10d78:	cmp	r7, #0
   10d7c:	bne	10d88 <abort@plt+0x754>
   10d80:	mvn	r0, #0
   10d84:	b	10e08 <abort@plt+0x7d4>
   10d88:	mov	r5, #1
   10d8c:	ldr	r0, [r7]
   10d90:	cmp	r5, r0
   10d94:	bge	10e04 <abort@plt+0x7d0>
   10d98:	ldr	r2, [r7, #8]
   10d9c:	ldr	r4, [r2, r5, lsl #2]
   10da0:	mov	r6, r5
   10da4:	cmp	r6, #0
   10da8:	ble	10df4 <abort@plt+0x7c0>
   10dac:	ldr	r2, [r7, #8]
   10db0:	lsl	r1, r6, #2
   10db4:	add	ip, r2, r1
   10db8:	sub	lr, ip, #4096	; 0x1000
   10dbc:	ldr	r1, [lr, #4092]	; 0xffc
   10dc0:	mov	r0, r4
   10dc4:	bl	10580 <strcmp@plt>
   10dc8:	cmp	r0, #0
   10dcc:	bge	10df4 <abort@plt+0x7c0>
   10dd0:	ldr	r0, [r7, #8]
   10dd4:	add	ip, r0, r6, lsl #2
   10dd8:	lsl	r1, r6, #2
   10ddc:	add	r0, r0, r1
   10de0:	sub	r3, r0, #4
   10de4:	ldr	lr, [r3]
   10de8:	str	lr, [ip]
   10dec:	sub	r6, r6, #1
   10df0:	b	10da4 <abort@plt+0x770>
   10df4:	ldr	r0, [r7, #8]
   10df8:	str	r4, [r0, r6, lsl #2]
   10dfc:	add	r5, r5, #1
   10e00:	b	10d8c <abort@plt+0x758>
   10e04:	mov	r0, #0
   10e08:	ldr	r4, [sp, #8]
   10e0c:	ldr	r5, [sp, #12]
   10e10:	ldr	r6, [sp, #16]
   10e14:	ldr	r7, [sp, #20]
   10e18:	ldr	lr, [sp, #4]
   10e1c:	add	sp, sp, #24
   10e20:	bx	lr
   10e24:	mov	ip, sp
   10e28:	sub	sp, sp, #24
   10e2c:	str	ip, [sp]
   10e30:	str	lr, [sp, #4]
   10e34:	str	r4, [sp, #8]
   10e38:	str	r5, [sp, #12]
   10e3c:	str	r6, [sp, #16]
   10e40:	mov	r4, r1
   10e44:	mov	r5, r0
   10e48:	mov	ip, #1
   10e4c:	cmp	r4, #0
   10e50:	moveq	r3, #1
   10e54:	movne	r3, #0
   10e58:	cmp	r5, #0
   10e5c:	moveq	ip, ip
   10e60:	movne	ip, r3
   10e64:	cmp	ip, #0
   10e68:	beq	10e74 <abort@plt+0x840>
   10e6c:	mov	r0, #0
   10e70:	b	10ec8 <abort@plt+0x894>
   10e74:	bl	10898 <abort@plt+0x264>
   10e78:	mov	r6, r0
   10e7c:	ldr	ip, [r5]
   10e80:	ldr	r0, [r4]
   10e84:	add	ip, ip, r0, lsl #2
   10e88:	str	ip, [r6, #8]
   10e8c:	ldr	r1, [r5, #4]
   10e90:	ldr	r2, [r4, #4]
   10e94:	add	r3, r1, r2
   10e98:	str	r3, [r6, #4]
   10e9c:	ldr	r0, [r6, #8]
   10ea0:	ldr	r0, [r0]
   10ea4:	ldr	r2, [r5, #8]
   10ea8:	ldr	r1, [r2]
   10eac:	bl	105d4 <strcpy@plt>
   10eb0:	ldr	r0, [r6, #8]
   10eb4:	ldr	r0, [r0]
   10eb8:	ldr	r1, [r4, #8]
   10ebc:	ldr	r1, [r1]
   10ec0:	bl	105c8 <strcat@plt>
   10ec4:	mov	r0, r6
   10ec8:	ldr	r4, [sp, #8]
   10ecc:	ldr	r5, [sp, #12]
   10ed0:	ldr	r6, [sp, #16]
   10ed4:	ldr	lr, [sp, #4]
   10ed8:	add	sp, sp, #24
   10edc:	bx	lr
   10ee0:	mov	ip, sp
   10ee4:	sub	sp, sp, #32
   10ee8:	str	ip, [sp]
   10eec:	str	lr, [sp, #4]
   10ef0:	str	r4, [sp, #8]
   10ef4:	str	r5, [sp, #12]
   10ef8:	str	r6, [sp, #16]
   10efc:	str	r7, [sp, #20]
   10f00:	mov	r4, r0
   10f04:	mov	r0, r4
   10f08:	bl	10a44 <abort@plt+0x410>
   10f0c:	mov	r5, r0
   10f10:	cmp	r0, #0
   10f14:	ble	10f78 <abort@plt+0x944>
   10f18:	mov	r7, #0
   10f1c:	cmp	r7, r5
   10f20:	movlt	r3, #1
   10f24:	movge	r3, #0
   10f28:	mov	r2, #0
   10f2c:	cmp	r7, r0
   10f30:	movlt	r1, r3
   10f34:	movge	r1, r2
   10f38:	cmp	r1, #0
   10f3c:	beq	10f78 <abort@plt+0x944>
   10f40:	ldr	r1, [r4, #8]
   10f44:	add	r6, r1, r7, lsl #2
   10f48:	ldr	lr, [r6]
   10f4c:	str	lr, [sp, #24]
   10f50:	add	r1, r1, r5, lsl #2
   10f54:	ldr	lr, [r1]
   10f58:	str	lr, [r6]
   10f5c:	ldr	ip, [r4, #8]
   10f60:	add	r1, ip, r5, lsl #2
   10f64:	ldr	lr, [sp, #24]
   10f68:	str	lr, [r1]
   10f6c:	sub	r5, r5, #1
   10f70:	add	r7, r7, #1
   10f74:	b	10f1c <abort@plt+0x8e8>
   10f78:	mov	r0, #0
   10f7c:	ldr	r4, [sp, #8]
   10f80:	ldr	r5, [sp, #12]
   10f84:	ldr	r6, [sp, #16]
   10f88:	ldr	r7, [sp, #20]
   10f8c:	ldr	lr, [sp, #4]
   10f90:	add	sp, sp, #32
   10f94:	bx	lr
   10f98:	mov	ip, sp
   10f9c:	sub	sp, sp, #40	; 0x28
   10fa0:	str	ip, [sp]
   10fa4:	str	lr, [sp, #4]
   10fa8:	str	r4, [sp, #8]
   10fac:	str	r5, [sp, #12]
   10fb0:	str	r6, [sp, #16]
   10fb4:	str	r7, [sp, #20]
   10fb8:	str	r8, [sp, #24]
   10fbc:	ldr	r7, [r0]
   10fc0:	bl	10898 <abort@plt+0x264>
   10fc4:	mov	r5, r0
   10fc8:	add	r0, sp, #32
   10fcc:	bl	105b0 <time@plt>
   10fd0:	bl	1061c <srand@plt>
   10fd4:	mov	r8, #0
   10fd8:	cmp	r8, r7
   10fdc:	bge	11034 <abort@plt+0xa00>
   10fe0:	bl	10628 <rand@plt>
   10fe4:	mov	r4, r0
   10fe8:	add	r6, r7, #1
   10fec:	mov	r0, r4
   10ff0:	mov	r1, r6
   10ff4:	blx	11058 <abort@plt+0xa24>
   10ff8:	mul	ip, r0, r6
   10ffc:	sub	r4, r4, ip
   11000:	ldr	r1, [r5, #8]
   11004:	add	r0, r1, r8, lsl #2
   11008:	ldr	lr, [r0]
   1100c:	str	lr, [sp, #36]	; 0x24
   11010:	add	r3, r1, r4, lsl #2
   11014:	ldr	lr, [r3]
   11018:	str	lr, [r0]
   1101c:	ldr	r0, [r5, #8]
   11020:	add	r2, r0, r4, lsl #2
   11024:	ldr	lr, [sp, #36]	; 0x24
   11028:	str	lr, [r2]
   1102c:	add	r8, r8, #1
   11030:	b	10fd8 <abort@plt+0x9a4>
   11034:	mov	r0, r5
   11038:	ldr	r4, [sp, #8]
   1103c:	ldr	r5, [sp, #12]
   11040:	ldr	r6, [sp, #16]
   11044:	ldr	r7, [sp, #20]
   11048:	ldr	r8, [sp, #24]
   1104c:	ldr	lr, [sp, #4]
   11050:	add	sp, sp, #40	; 0x28
   11054:	bx	lr
   11058:			; <UNDEFINED> instruction: 0xf0002900
   1105c:	b	fe03155c <stdin@@GLIBC_2.4+0xfe00f4fc>
   11060:	svclt	0x00480c01
   11064:	cdpne	2, 4, cr4, cr10, cr9, {2}
   11068:	tsthi	pc, r0	; <UNPREDICTABLE>
   1106c:	svclt	0x00480003
   11070:	addmi	r4, fp, #805306372	; 0x30000004
   11074:	tsthi	lr, r0, asr #4	; <UNPREDICTABLE>
   11078:			; <UNDEFINED> instruction: 0xf0004211
   1107c:	blx	fecf1510 <stdin@@GLIBC_2.4+0xfeccf4b0>
   11080:	blx	fec8da94 <stdin@@GLIBC_2.4+0xfec6ba34>
   11084:	bl	fe84d290 <stdin@@GLIBC_2.4+0xfe82b230>
   11088:			; <UNDEFINED> instruction: 0xf1c20202
   1108c:	andge	r0, r4, pc, lsl r2
   11090:	andne	lr, r2, #0, 22
   11094:	andeq	pc, r0, pc, asr #32
   11098:	svclt	0x00004697
   1109c:	andhi	pc, r0, pc, lsr #7
   110a0:	svcvc	0x00c1ebb3
   110a4:	bl	1040cac <stdin@@GLIBC_2.4+0x101ec4c>
   110a8:	svclt	0x00280000
   110ac:	bicvc	lr, r1, #166912	; 0x28c00
   110b0:	svcvc	0x0081ebb3
   110b4:	bl	1040cbc <stdin@@GLIBC_2.4+0x101ec5c>
   110b8:	svclt	0x00280000
   110bc:	orrvc	lr, r1, #166912	; 0x28c00
   110c0:	svcvc	0x0041ebb3
   110c4:	bl	1040ccc <stdin@@GLIBC_2.4+0x101ec6c>
   110c8:	svclt	0x00280000
   110cc:	movtvc	lr, #7075	; 0x1ba3
   110d0:	svcvc	0x0001ebb3
   110d4:	bl	1040cdc <stdin@@GLIBC_2.4+0x101ec7c>
   110d8:	svclt	0x00280000
   110dc:	movwvc	lr, #7075	; 0x1ba3
   110e0:	svcvs	0x00c1ebb3
   110e4:	bl	1040cec <stdin@@GLIBC_2.4+0x101ec8c>
   110e8:	svclt	0x00280000
   110ec:	bicvs	lr, r1, #166912	; 0x28c00
   110f0:	svcvs	0x0081ebb3
   110f4:	bl	1040cfc <stdin@@GLIBC_2.4+0x101ec9c>
   110f8:	svclt	0x00280000
   110fc:	orrvs	lr, r1, #166912	; 0x28c00
   11100:	svcvs	0x0041ebb3
   11104:	bl	1040d0c <stdin@@GLIBC_2.4+0x101ecac>
   11108:	svclt	0x00280000
   1110c:	movtvs	lr, #7075	; 0x1ba3
   11110:	svcvs	0x0001ebb3
   11114:	bl	1040d1c <stdin@@GLIBC_2.4+0x101ecbc>
   11118:	svclt	0x00280000
   1111c:	movwvs	lr, #7075	; 0x1ba3
   11120:	svcpl	0x00c1ebb3
   11124:	bl	1040d2c <stdin@@GLIBC_2.4+0x101eccc>
   11128:	svclt	0x00280000
   1112c:	bicpl	lr, r1, #166912	; 0x28c00
   11130:	svcpl	0x0081ebb3
   11134:	bl	1040d3c <stdin@@GLIBC_2.4+0x101ecdc>
   11138:	svclt	0x00280000
   1113c:	orrpl	lr, r1, #166912	; 0x28c00
   11140:	svcpl	0x0041ebb3
   11144:	bl	1040d4c <stdin@@GLIBC_2.4+0x101ecec>
   11148:	svclt	0x00280000
   1114c:	movtpl	lr, #7075	; 0x1ba3
   11150:	svcpl	0x0001ebb3
   11154:	bl	1040d5c <stdin@@GLIBC_2.4+0x101ecfc>
   11158:	svclt	0x00280000
   1115c:	movwpl	lr, #7075	; 0x1ba3
   11160:	svcmi	0x00c1ebb3
   11164:	bl	1040d6c <stdin@@GLIBC_2.4+0x101ed0c>
   11168:	svclt	0x00280000
   1116c:	bicmi	lr, r1, #166912	; 0x28c00
   11170:	svcmi	0x0081ebb3
   11174:	bl	1040d7c <stdin@@GLIBC_2.4+0x101ed1c>
   11178:	svclt	0x00280000
   1117c:	orrmi	lr, r1, #166912	; 0x28c00
   11180:	svcmi	0x0041ebb3
   11184:	bl	1040d8c <stdin@@GLIBC_2.4+0x101ed2c>
   11188:	svclt	0x00280000
   1118c:	movtmi	lr, #7075	; 0x1ba3
   11190:	svcmi	0x0001ebb3
   11194:	bl	1040d9c <stdin@@GLIBC_2.4+0x101ed3c>
   11198:	svclt	0x00280000
   1119c:	movwmi	lr, #7075	; 0x1ba3
   111a0:	svccc	0x00c1ebb3
   111a4:	bl	1040dac <stdin@@GLIBC_2.4+0x101ed4c>
   111a8:	svclt	0x00280000
   111ac:	biccc	lr, r1, #166912	; 0x28c00
   111b0:	svccc	0x0081ebb3
   111b4:	bl	1040dbc <stdin@@GLIBC_2.4+0x101ed5c>
   111b8:	svclt	0x00280000
   111bc:	orrcc	lr, r1, #166912	; 0x28c00
   111c0:	svccc	0x0041ebb3
   111c4:	bl	1040dcc <stdin@@GLIBC_2.4+0x101ed6c>
   111c8:	svclt	0x00280000
   111cc:	movtcc	lr, #7075	; 0x1ba3
   111d0:	svccc	0x0001ebb3
   111d4:	bl	1040ddc <stdin@@GLIBC_2.4+0x101ed7c>
   111d8:	svclt	0x00280000
   111dc:	movwcc	lr, #7075	; 0x1ba3
   111e0:	svccs	0x00c1ebb3
   111e4:	bl	1040dec <stdin@@GLIBC_2.4+0x101ed8c>
   111e8:	svclt	0x00280000
   111ec:	biccs	lr, r1, #166912	; 0x28c00
   111f0:	svccs	0x0081ebb3
   111f4:	bl	1040dfc <stdin@@GLIBC_2.4+0x101ed9c>
   111f8:	svclt	0x00280000
   111fc:	orrcs	lr, r1, #166912	; 0x28c00
   11200:	svccs	0x0041ebb3
   11204:	bl	1040e0c <stdin@@GLIBC_2.4+0x101edac>
   11208:	svclt	0x00280000
   1120c:	movtcs	lr, #7075	; 0x1ba3
   11210:	svccs	0x0001ebb3
   11214:	bl	1040e1c <stdin@@GLIBC_2.4+0x101edbc>
   11218:	svclt	0x00280000
   1121c:	movwcs	lr, #7075	; 0x1ba3
   11220:	svcne	0x00c1ebb3
   11224:	bl	1040e2c <stdin@@GLIBC_2.4+0x101edcc>
   11228:	svclt	0x00280000
   1122c:	bicne	lr, r1, #166912	; 0x28c00
   11230:	svcne	0x0081ebb3
   11234:	bl	1040e3c <stdin@@GLIBC_2.4+0x101eddc>
   11238:	svclt	0x00280000
   1123c:	orrne	lr, r1, #166912	; 0x28c00
   11240:	svcne	0x0041ebb3
   11244:	bl	1040e4c <stdin@@GLIBC_2.4+0x101edec>
   11248:	svclt	0x00280000
   1124c:	movtne	lr, #7075	; 0x1ba3
   11250:	svcne	0x0001ebb3
   11254:	bl	1040e5c <stdin@@GLIBC_2.4+0x101edfc>
   11258:	svclt	0x00280000
   1125c:	movwne	lr, #7075	; 0x1ba3
   11260:	svceq	0x00c1ebb3
   11264:	bl	1040e6c <stdin@@GLIBC_2.4+0x101ee0c>
   11268:	svclt	0x00280000
   1126c:	biceq	lr, r1, #166912	; 0x28c00
   11270:	svceq	0x0081ebb3
   11274:	bl	1040e7c <stdin@@GLIBC_2.4+0x101ee1c>
   11278:	svclt	0x00280000
   1127c:	orreq	lr, r1, #166912	; 0x28c00
   11280:	svceq	0x0041ebb3
   11284:	bl	1040e8c <stdin@@GLIBC_2.4+0x101ee2c>
   11288:	svclt	0x00280000
   1128c:	movteq	lr, #7075	; 0x1ba3
   11290:	svceq	0x0001ebb3
   11294:	bl	1040e9c <stdin@@GLIBC_2.4+0x101ee3c>
   11298:	svclt	0x00280000
   1129c:	movweq	lr, #7075	; 0x1ba3
   112a0:	svceq	0x0000f1bc
   112a4:	submi	fp, r0, #72, 30	; 0x120
   112a8:	b	fe723070 <stdin@@GLIBC_2.4+0xfe701010>
   112ac:	svclt	0x00480f00
   112b0:	ldrbmi	r4, [r0, -r0, asr #4]!
   112b4:	andcs	fp, r0, r8, lsr pc
   112b8:	b	1400ed0 <stdin@@GLIBC_2.4+0x13dee70>
   112bc:			; <UNDEFINED> instruction: 0xf04070ec
   112c0:	ldrbmi	r0, [r0, -r1]!
   112c4:			; <UNDEFINED> instruction: 0xf281fab1
   112c8:	andseq	pc, pc, #-2147483600	; 0x80000030
   112cc:	svceq	0x0000f1bc
   112d0:			; <UNDEFINED> instruction: 0xf002fa23
   112d4:	submi	fp, r0, #72, 30	; 0x120
   112d8:	stmdacs	r0, {r4, r5, r6, r8, r9, sl, lr}
   112dc:			; <UNDEFINED> instruction: 0xf06fbfc8
   112e0:	svclt	0x00b84000
   112e4:	andmi	pc, r0, pc, asr #32
   112e8:	stmdalt	lr, {ip, sp, lr, pc}
   112ec:	rscsle	r2, r4, r0, lsl #18
   112f0:	andmi	lr, r3, sp, lsr #18
   112f4:	mrc2	7, 5, pc, cr3, cr15, {7}
   112f8:			; <UNDEFINED> instruction: 0x4006e8bd
   112fc:	vqrdmulh.s<illegal width 8>	d15, d0, d2
   11300:	smlatbeq	r3, r1, fp, lr
   11304:	svclt	0x00004770
   11308:			; <UNDEFINED> instruction: 0xf04fb502
   1130c:			; <UNDEFINED> instruction: 0xf7ff0008
   11310:	vstrlt.16	s28, [r2, #-100]	; 0xffffff9c	; <UNPREDICTABLE>
   11314:	mvnsmi	lr, #737280	; 0xb4000
   11318:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   1131c:	strmi	r4, [r8], ip, lsl #26
   11320:			; <UNDEFINED> instruction: 0x4691447e
   11324:			; <UNDEFINED> instruction: 0xf7ff447d
   11328:	blne	1dcb770 <stdin@@GLIBC_2.4+0x1da9710>
   1132c:	strhle	r1, [sl], -r6
   11330:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   11334:	svccc	0x0004f855
   11338:	strbmi	r4, [r1], -sl, asr #12
   1133c:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   11340:	adcmi	r4, r6, #152, 14	; 0x2600000
   11344:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   11348:	svclt	0x000083f8
   1134c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11350:	andeq	r0, r1, r8, ror #23
   11354:	svclt	0x00004770

Disassembly of section .fini:

00011358 <.fini>:
   11358:	push	{r3, lr}
   1135c:	pop	{r3, pc}
