
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_basic_parse.dir/test_basic_parse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_space>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-8]
      10:	str	r1, [fp, #-12]
      14:	str	r2, [fp, #-16]
      18:	ldr	r2, [fp, #-16]
      1c:	ldr	r3, [fp, #-12]
      20:	sub	r3, r2, r3
      24:	cmp	r3, #1
      28:	ble	74 <flatcc_json_parser_space+0x74>
      2c:	ldr	r3, [fp, #-12]
      30:	ldrb	r3, [r3]
      34:	cmp	r3, #32
      38:	bls	44 <flatcc_json_parser_space+0x44>
      3c:	ldr	r3, [fp, #-12]
      40:	b	88 <flatcc_json_parser_space+0x88>
      44:	ldr	r3, [fp, #-12]
      48:	ldrb	r3, [r3]
      4c:	cmp	r3, #32
      50:	bne	74 <flatcc_json_parser_space+0x74>
      54:	ldr	r3, [fp, #-12]
      58:	add	r3, r3, #1
      5c:	ldrb	r3, [r3]
      60:	cmp	r3, #32
      64:	bls	74 <flatcc_json_parser_space+0x74>
      68:	ldr	r3, [fp, #-12]
      6c:	add	r3, r3, #1
      70:	b	88 <flatcc_json_parser_space+0x88>
      74:	ldr	r2, [fp, #-16]
      78:	ldr	r1, [fp, #-12]
      7c:	ldr	r0, [fp, #-8]
      80:	bl	0 <flatcc_json_parser_space_ext>
      84:	mov	r3, r0
      88:	mov	r0, r3
      8c:	sub	sp, fp, #4
      90:	pop	{fp, pc}

00000094 <flatcc_json_parser_string_start>:
      94:	push	{fp, lr}
      98:	add	fp, sp, #4
      9c:	sub	sp, sp, #16
      a0:	str	r0, [fp, #-8]
      a4:	str	r1, [fp, #-12]
      a8:	str	r2, [fp, #-16]
      ac:	ldr	r2, [fp, #-12]
      b0:	ldr	r3, [fp, #-16]
      b4:	cmp	r2, r3
      b8:	beq	cc <flatcc_json_parser_string_start+0x38>
      bc:	ldr	r3, [fp, #-12]
      c0:	ldrb	r3, [r3]
      c4:	cmp	r3, #34	; 0x22
      c8:	beq	e8 <flatcc_json_parser_string_start+0x54>
      cc:	mov	r3, #16
      d0:	ldr	r2, [fp, #-16]
      d4:	ldr	r1, [fp, #-12]
      d8:	ldr	r0, [fp, #-8]
      dc:	bl	0 <flatcc_json_parser_set_error>
      e0:	mov	r3, r0
      e4:	b	f8 <flatcc_json_parser_string_start+0x64>
      e8:	ldr	r3, [fp, #-12]
      ec:	add	r3, r3, #1
      f0:	str	r3, [fp, #-12]
      f4:	ldr	r3, [fp, #-12]
      f8:	mov	r0, r3
      fc:	sub	sp, fp, #4
     100:	pop	{fp, pc}

00000104 <flatcc_json_parser_string_end>:
     104:	push	{fp, lr}
     108:	add	fp, sp, #4
     10c:	sub	sp, sp, #16
     110:	str	r0, [fp, #-8]
     114:	str	r1, [fp, #-12]
     118:	str	r2, [fp, #-16]
     11c:	ldr	r2, [fp, #-12]
     120:	ldr	r3, [fp, #-16]
     124:	cmp	r2, r3
     128:	beq	13c <flatcc_json_parser_string_end+0x38>
     12c:	ldr	r3, [fp, #-12]
     130:	ldrb	r3, [r3]
     134:	cmp	r3, #34	; 0x22
     138:	beq	158 <flatcc_json_parser_string_end+0x54>
     13c:	mov	r3, #20
     140:	ldr	r2, [fp, #-16]
     144:	ldr	r1, [fp, #-12]
     148:	ldr	r0, [fp, #-8]
     14c:	bl	0 <flatcc_json_parser_set_error>
     150:	mov	r3, r0
     154:	b	168 <flatcc_json_parser_string_end+0x64>
     158:	ldr	r3, [fp, #-12]
     15c:	add	r3, r3, #1
     160:	str	r3, [fp, #-12]
     164:	ldr	r3, [fp, #-12]
     168:	mov	r0, r3
     16c:	sub	sp, fp, #4
     170:	pop	{fp, pc}

00000174 <flatcc_json_parser_symbol_start>:
     174:	push	{fp, lr}
     178:	add	fp, sp, #4
     17c:	sub	sp, sp, #16
     180:	str	r0, [fp, #-8]
     184:	str	r1, [fp, #-12]
     188:	str	r2, [fp, #-16]
     18c:	ldr	r2, [fp, #-12]
     190:	ldr	r3, [fp, #-16]
     194:	cmp	r2, r3
     198:	bne	1a4 <flatcc_json_parser_symbol_start+0x30>
     19c:	ldr	r3, [fp, #-12]
     1a0:	b	20c <flatcc_json_parser_symbol_start+0x98>
     1a4:	ldr	r3, [fp, #-12]
     1a8:	ldrb	r3, [r3]
     1ac:	cmp	r3, #34	; 0x22
     1b0:	bne	1d0 <flatcc_json_parser_symbol_start+0x5c>
     1b4:	ldr	r3, [fp, #-12]
     1b8:	add	r3, r3, #1
     1bc:	str	r3, [fp, #-12]
     1c0:	ldr	r3, [fp, #-8]
     1c4:	mov	r2, #0
     1c8:	str	r2, [r3, #12]
     1cc:	b	208 <flatcc_json_parser_symbol_start+0x94>
     1d0:	ldr	r3, [fp, #-12]
     1d4:	ldrb	r3, [r3]
     1d8:	cmp	r3, #46	; 0x2e
     1dc:	bne	1fc <flatcc_json_parser_symbol_start+0x88>
     1e0:	mov	r3, #5
     1e4:	ldr	r2, [fp, #-16]
     1e8:	ldr	r1, [fp, #-12]
     1ec:	ldr	r0, [fp, #-8]
     1f0:	bl	0 <flatcc_json_parser_set_error>
     1f4:	mov	r3, r0
     1f8:	b	20c <flatcc_json_parser_symbol_start+0x98>
     1fc:	ldr	r3, [fp, #-8]
     200:	mov	r2, #1
     204:	str	r2, [r3, #12]
     208:	ldr	r3, [fp, #-12]
     20c:	mov	r0, r3
     210:	sub	sp, fp, #4
     214:	pop	{fp, pc}

00000218 <flatcc_json_parser_symbol_part_ext>:
     218:	push	{r4, r5, r6, r7, r8, r9, fp}
     21c:	add	fp, sp, #24
     220:	sub	sp, sp, #60	; 0x3c
     224:	str	r0, [fp, #-48]	; 0xffffffd0
     228:	str	r1, [fp, #-52]	; 0xffffffcc
     22c:	mov	r2, #0
     230:	mov	r3, #0
     234:	strd	r2, [fp, #-36]	; 0xffffffdc
     238:	ldr	r2, [fp, #-52]	; 0xffffffcc
     23c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     240:	sub	r3, r2, r3
     244:	str	r3, [fp, #-40]	; 0xffffffd8
     248:	ldr	r3, [fp, #-40]	; 0xffffffd8
     24c:	cmp	r3, #8
     250:	bls	25c <flatcc_json_parser_symbol_part_ext+0x44>
     254:	mov	r3, #8
     258:	str	r3, [fp, #-40]	; 0xffffffd8
     25c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     260:	cmp	r3, #8
     264:	ldrls	pc, [pc, r3, lsl #2]
     268:	b	440 <flatcc_json_parser_symbol_part_ext+0x228>
     26c:	.word	0x00000440
     270:	.word	0x00000400
     274:	.word	0x000003c0
     278:	.word	0x00000380
     27c:	.word	0x00000340
     280:	.word	0x00000314
     284:	.word	0x000002e4
     288:	.word	0x000002b4
     28c:	.word	0x00000290
     290:	ldr	r3, [fp, #-48]	; 0xffffffd0
     294:	add	r3, r3, #7
     298:	ldrb	r3, [r3]
     29c:	uxtb	r0, r3
     2a0:	mov	r1, #0
     2a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     2a8:	orr	r2, r2, r0
     2ac:	orr	r3, r3, r1
     2b0:	strd	r2, [fp, #-36]	; 0xffffffdc
     2b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     2b8:	add	r3, r3, #6
     2bc:	ldrb	r3, [r3]
     2c0:	uxtb	r2, r3
     2c4:	mov	r3, #0
     2c8:	lsl	r5, r3, #8
     2cc:	orr	r5, r5, r2, lsr #24
     2d0:	lsl	r4, r2, #8
     2d4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     2d8:	orr	r2, r2, r4
     2dc:	orr	r3, r3, r5
     2e0:	strd	r2, [fp, #-36]	; 0xffffffdc
     2e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     2e8:	add	r3, r3, #5
     2ec:	ldrb	r3, [r3]
     2f0:	uxtb	r2, r3
     2f4:	mov	r3, #0
     2f8:	lsl	r7, r3, #16
     2fc:	orr	r7, r7, r2, lsr #16
     300:	lsl	r6, r2, #16
     304:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     308:	orr	r2, r2, r6
     30c:	orr	r3, r3, r7
     310:	strd	r2, [fp, #-36]	; 0xffffffdc
     314:	ldr	r3, [fp, #-48]	; 0xffffffd0
     318:	add	r3, r3, #4
     31c:	ldrb	r3, [r3]
     320:	uxtb	r2, r3
     324:	mov	r3, #0
     328:	lsr	r9, r2, #8
     32c:	lsl	r8, r2, #24
     330:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     334:	orr	r2, r2, r8
     338:	orr	r3, r3, r9
     33c:	strd	r2, [fp, #-36]	; 0xffffffdc
     340:	ldr	r3, [fp, #-48]	; 0xffffffd0
     344:	add	r3, r3, #3
     348:	ldrb	r3, [r3]
     34c:	uxtb	r2, r3
     350:	mov	r3, #0
     354:	mov	r3, r2
     358:	str	r3, [fp, #-56]	; 0xffffffc8
     35c:	mov	r3, #0
     360:	str	r3, [fp, #-60]	; 0xffffffc4
     364:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     368:	ldrd	r0, [fp, #-60]	; 0xffffffc4
     36c:	orr	r0, r0, r2
     370:	orr	r1, r1, r3
     374:	mov	r2, r0
     378:	mov	r3, r1
     37c:	strd	r2, [fp, #-36]	; 0xffffffdc
     380:	ldr	r3, [fp, #-48]	; 0xffffffd0
     384:	add	r3, r3, #2
     388:	ldrb	r3, [r3]
     38c:	uxtb	r2, r3
     390:	mov	r3, #0
     394:	lsl	r3, r2, #8
     398:	str	r3, [fp, #-64]	; 0xffffffc0
     39c:	mov	r3, #0
     3a0:	str	r3, [fp, #-68]	; 0xffffffbc
     3a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     3a8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
     3ac:	orr	r0, r0, r2
     3b0:	orr	r1, r1, r3
     3b4:	mov	r2, r0
     3b8:	mov	r3, r1
     3bc:	strd	r2, [fp, #-36]	; 0xffffffdc
     3c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     3c4:	add	r3, r3, #1
     3c8:	ldrb	r3, [r3]
     3cc:	uxtb	r2, r3
     3d0:	mov	r3, #0
     3d4:	lsl	r3, r2, #16
     3d8:	str	r3, [fp, #-72]	; 0xffffffb8
     3dc:	mov	r3, #0
     3e0:	str	r3, [fp, #-76]	; 0xffffffb4
     3e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     3e8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
     3ec:	orr	r0, r0, r2
     3f0:	orr	r1, r1, r3
     3f4:	mov	r2, r0
     3f8:	mov	r3, r1
     3fc:	strd	r2, [fp, #-36]	; 0xffffffdc
     400:	ldr	r3, [fp, #-48]	; 0xffffffd0
     404:	ldrb	r3, [r3]
     408:	uxtb	r2, r3
     40c:	mov	r3, #0
     410:	lsl	r3, r2, #24
     414:	str	r3, [fp, #-80]	; 0xffffffb0
     418:	mov	r3, #0
     41c:	str	r3, [fp, #-84]	; 0xffffffac
     420:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     424:	ldrd	r0, [fp, #-84]	; 0xffffffac
     428:	orr	r0, r0, r2
     42c:	orr	r1, r1, r3
     430:	mov	r2, r0
     434:	mov	r3, r1
     438:	strd	r2, [fp, #-36]	; 0xffffffdc
     43c:	nop			; (mov r0, r0)
     440:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     444:	mov	r0, r2
     448:	mov	r1, r3
     44c:	sub	sp, fp, #24
     450:	pop	{r4, r5, r6, r7, r8, r9, fp}
     454:	bx	lr

00000458 <flatcc_json_parser_symbol_part>:
     458:	push	{fp, lr}
     45c:	add	fp, sp, #4
     460:	sub	sp, sp, #16
     464:	str	r0, [fp, #-16]
     468:	str	r1, [fp, #-20]	; 0xffffffec
     46c:	ldr	r2, [fp, #-20]	; 0xffffffec
     470:	ldr	r3, [fp, #-16]
     474:	sub	r3, r2, r3
     478:	str	r3, [fp, #-8]
     47c:	ldr	r1, [fp, #-20]	; 0xffffffec
     480:	ldr	r0, [fp, #-16]
     484:	bl	218 <flatcc_json_parser_symbol_part_ext>
     488:	mov	r2, r0
     48c:	mov	r3, r1
     490:	mov	r0, r2
     494:	mov	r1, r3
     498:	sub	sp, fp, #4
     49c:	pop	{fp, pc}

000004a0 <flatcc_json_parser_symbol_end>:
     4a0:	push	{fp, lr}
     4a4:	add	fp, sp, #4
     4a8:	sub	sp, sp, #24
     4ac:	str	r0, [fp, #-16]
     4b0:	str	r1, [fp, #-20]	; 0xffffffec
     4b4:	str	r2, [fp, #-24]	; 0xffffffe8
     4b8:	mov	r3, #0
     4bc:	strb	r3, [fp, #-5]
     4c0:	ldr	r3, [fp, #-16]
     4c4:	ldr	r3, [r3, #12]
     4c8:	cmp	r3, #0
     4cc:	beq	5f4 <flatcc_json_parser_symbol_end+0x154>
     4d0:	b	568 <flatcc_json_parser_symbol_end+0xc8>
     4d4:	ldr	r3, [fp, #-20]	; 0xffffffec
     4d8:	ldrb	r3, [r3]
     4dc:	strb	r3, [fp, #-6]
     4e0:	ldrb	r3, [fp, #-6]
     4e4:	strb	r3, [fp, #-5]
     4e8:	ldrb	r3, [fp, #-6]
     4ec:	cmp	r3, #95	; 0x5f
     4f0:	beq	524 <flatcc_json_parser_symbol_end+0x84>
     4f4:	ldrb	r3, [fp, #-6]
     4f8:	cmp	r3, #46	; 0x2e
     4fc:	beq	524 <flatcc_json_parser_symbol_end+0x84>
     500:	ldrsb	r3, [fp, #-6]
     504:	cmp	r3, #0
     508:	blt	524 <flatcc_json_parser_symbol_end+0x84>
     50c:	ldrb	r3, [fp, #-6]
     510:	cmp	r3, #47	; 0x2f
     514:	bls	534 <flatcc_json_parser_symbol_end+0x94>
     518:	ldrb	r3, [fp, #-6]
     51c:	cmp	r3, #57	; 0x39
     520:	bhi	534 <flatcc_json_parser_symbol_end+0x94>
     524:	ldr	r3, [fp, #-20]	; 0xffffffec
     528:	add	r3, r3, #1
     52c:	str	r3, [fp, #-20]	; 0xffffffec
     530:	b	568 <flatcc_json_parser_symbol_end+0xc8>
     534:	ldrb	r3, [fp, #-6]
     538:	orr	r3, r3, #32
     53c:	strb	r3, [fp, #-6]
     540:	ldrb	r3, [fp, #-6]
     544:	cmp	r3, #96	; 0x60
     548:	bls	58c <flatcc_json_parser_symbol_end+0xec>
     54c:	ldrb	r3, [fp, #-6]
     550:	cmp	r3, #122	; 0x7a
     554:	bhi	58c <flatcc_json_parser_symbol_end+0xec>
     558:	ldr	r3, [fp, #-20]	; 0xffffffec
     55c:	add	r3, r3, #1
     560:	str	r3, [fp, #-20]	; 0xffffffec
     564:	nop			; (mov r0, r0)
     568:	ldr	r2, [fp, #-20]	; 0xffffffec
     56c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     570:	cmp	r2, r3
     574:	beq	590 <flatcc_json_parser_symbol_end+0xf0>
     578:	ldr	r3, [fp, #-20]	; 0xffffffec
     57c:	ldrb	r3, [r3]
     580:	cmp	r3, #32
     584:	bhi	4d4 <flatcc_json_parser_symbol_end+0x34>
     588:	b	590 <flatcc_json_parser_symbol_end+0xf0>
     58c:	nop			; (mov r0, r0)
     590:	ldrb	r3, [fp, #-5]
     594:	cmp	r3, #46	; 0x2e
     598:	bne	664 <flatcc_json_parser_symbol_end+0x1c4>
     59c:	mov	r3, #5
     5a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     5a4:	ldr	r1, [fp, #-20]	; 0xffffffec
     5a8:	ldr	r0, [fp, #-16]
     5ac:	bl	0 <flatcc_json_parser_set_error>
     5b0:	mov	r3, r0
     5b4:	b	668 <flatcc_json_parser_symbol_end+0x1c8>
     5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
     5bc:	ldrb	r3, [r3]
     5c0:	cmp	r3, #92	; 0x5c
     5c4:	bne	5e8 <flatcc_json_parser_symbol_end+0x148>
     5c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     5cc:	ldr	r3, [fp, #-20]	; 0xffffffec
     5d0:	sub	r3, r2, r3
     5d4:	cmp	r3, #1
     5d8:	ble	618 <flatcc_json_parser_symbol_end+0x178>
     5dc:	ldr	r3, [fp, #-20]	; 0xffffffec
     5e0:	add	r3, r3, #1
     5e4:	str	r3, [fp, #-20]	; 0xffffffec
     5e8:	ldr	r3, [fp, #-20]	; 0xffffffec
     5ec:	add	r3, r3, #1
     5f0:	str	r3, [fp, #-20]	; 0xffffffec
     5f4:	ldr	r2, [fp, #-20]	; 0xffffffec
     5f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5fc:	cmp	r2, r3
     600:	beq	61c <flatcc_json_parser_symbol_end+0x17c>
     604:	ldr	r3, [fp, #-20]	; 0xffffffec
     608:	ldrb	r3, [r3]
     60c:	cmp	r3, #34	; 0x22
     610:	bne	5b8 <flatcc_json_parser_symbol_end+0x118>
     614:	b	61c <flatcc_json_parser_symbol_end+0x17c>
     618:	nop			; (mov r0, r0)
     61c:	ldr	r2, [fp, #-20]	; 0xffffffec
     620:	ldr	r3, [fp, #-24]	; 0xffffffe8
     624:	cmp	r2, r3
     628:	beq	63c <flatcc_json_parser_symbol_end+0x19c>
     62c:	ldr	r3, [fp, #-20]	; 0xffffffec
     630:	ldrb	r3, [r3]
     634:	cmp	r3, #34	; 0x22
     638:	beq	658 <flatcc_json_parser_symbol_end+0x1b8>
     63c:	mov	r3, #20
     640:	ldr	r2, [fp, #-24]	; 0xffffffe8
     644:	ldr	r1, [fp, #-20]	; 0xffffffec
     648:	ldr	r0, [fp, #-16]
     64c:	bl	0 <flatcc_json_parser_set_error>
     650:	mov	r3, r0
     654:	b	668 <flatcc_json_parser_symbol_end+0x1c8>
     658:	ldr	r3, [fp, #-20]	; 0xffffffec
     65c:	add	r3, r3, #1
     660:	str	r3, [fp, #-20]	; 0xffffffec
     664:	ldr	r3, [fp, #-20]	; 0xffffffec
     668:	mov	r0, r3
     66c:	sub	sp, fp, #4
     670:	pop	{fp, pc}

00000674 <flatcc_json_parser_constant_start>:
     674:	push	{fp, lr}
     678:	add	fp, sp, #4
     67c:	sub	sp, sp, #16
     680:	str	r0, [fp, #-8]
     684:	str	r1, [fp, #-12]
     688:	str	r2, [fp, #-16]
     68c:	ldr	r2, [fp, #-16]
     690:	ldr	r1, [fp, #-12]
     694:	ldr	r0, [fp, #-8]
     698:	bl	174 <flatcc_json_parser_symbol_start>
     69c:	str	r0, [fp, #-12]
     6a0:	ldr	r3, [fp, #-8]
     6a4:	ldr	r3, [r3, #12]
     6a8:	cmp	r3, #0
     6ac:	bne	6c4 <flatcc_json_parser_constant_start+0x50>
     6b0:	ldr	r2, [fp, #-16]
     6b4:	ldr	r1, [fp, #-12]
     6b8:	ldr	r0, [fp, #-8]
     6bc:	bl	0 <flatcc_json_parser_space>
     6c0:	str	r0, [fp, #-12]
     6c4:	ldr	r3, [fp, #-12]
     6c8:	mov	r0, r3
     6cc:	sub	sp, fp, #4
     6d0:	pop	{fp, pc}

000006d4 <flatcc_json_parser_coerce_uint64>:
     6d4:	push	{fp, lr}
     6d8:	add	fp, sp, #4
     6dc:	sub	sp, sp, #16
     6e0:	str	r0, [fp, #-8]
     6e4:	str	r1, [fp, #-12]
     6e8:	str	r2, [fp, #-16]
     6ec:	str	r3, [fp, #-20]	; 0xffffffec
     6f0:	ldr	r3, [fp, #-20]	; 0xffffffec
     6f4:	cmp	r3, #0
     6f8:	beq	718 <flatcc_json_parser_coerce_uint64+0x44>
     6fc:	mov	r3, #8
     700:	ldr	r2, [fp, #-16]
     704:	ldr	r1, [fp, #-12]
     708:	ldr	r0, [fp, #-8]
     70c:	bl	0 <flatcc_json_parser_set_error>
     710:	mov	r3, r0
     714:	b	728 <flatcc_json_parser_coerce_uint64+0x54>
     718:	ldr	r1, [fp, #12]
     71c:	ldrd	r2, [fp, #4]
     720:	strd	r2, [r1]
     724:	ldr	r3, [fp, #-12]
     728:	mov	r0, r3
     72c:	sub	sp, fp, #4
     730:	pop	{fp, pc}

00000734 <flatcc_json_parser_coerce_bool>:
     734:	push	{fp, lr}
     738:	add	fp, sp, #4
     73c:	sub	sp, sp, #16
     740:	str	r0, [fp, #-8]
     744:	str	r1, [fp, #-12]
     748:	str	r2, [fp, #-16]
     74c:	str	r3, [fp, #-20]	; 0xffffffec
     750:	ldr	r3, [fp, #-20]	; 0xffffffec
     754:	cmp	r3, #0
     758:	beq	778 <flatcc_json_parser_coerce_bool+0x44>
     75c:	mov	r3, #8
     760:	ldr	r2, [fp, #-16]
     764:	ldr	r1, [fp, #-12]
     768:	ldr	r0, [fp, #-8]
     76c:	bl	0 <flatcc_json_parser_set_error>
     770:	mov	r3, r0
     774:	b	7a4 <flatcc_json_parser_coerce_bool+0x70>
     778:	ldr	r2, [fp, #4]
     77c:	ldr	r3, [fp, #8]
     780:	orr	r3, r2, r3
     784:	cmp	r3, #0
     788:	movne	r3, #1
     78c:	moveq	r3, #0
     790:	uxtb	r3, r3
     794:	mov	r2, r3
     798:	ldr	r3, [fp, #12]
     79c:	strb	r2, [r3]
     7a0:	ldr	r3, [fp, #-12]
     7a4:	mov	r0, r3
     7a8:	sub	sp, fp, #4
     7ac:	pop	{fp, pc}

000007b0 <flatcc_json_parser_coerce_uint32>:
     7b0:	push	{fp, lr}
     7b4:	add	fp, sp, #4
     7b8:	sub	sp, sp, #16
     7bc:	str	r0, [fp, #-8]
     7c0:	str	r1, [fp, #-12]
     7c4:	str	r2, [fp, #-16]
     7c8:	str	r3, [fp, #-20]	; 0xffffffec
     7cc:	ldr	r3, [fp, #-20]	; 0xffffffec
     7d0:	cmp	r3, #0
     7d4:	beq	7f4 <flatcc_json_parser_coerce_uint32+0x44>
     7d8:	mov	r3, #8
     7dc:	ldr	r2, [fp, #-16]
     7e0:	ldr	r1, [fp, #-12]
     7e4:	ldr	r0, [fp, #-8]
     7e8:	bl	0 <flatcc_json_parser_set_error>
     7ec:	mov	r3, r0
     7f0:	b	838 <flatcc_json_parser_coerce_uint32+0x88>
     7f4:	ldrd	r2, [fp, #4]
     7f8:	mvn	r0, #0
     7fc:	mov	r1, #0
     800:	cmp	r3, r1
     804:	cmpeq	r2, r0
     808:	bls	828 <flatcc_json_parser_coerce_uint32+0x78>
     80c:	mov	r3, #7
     810:	ldr	r2, [fp, #-16]
     814:	ldr	r1, [fp, #-12]
     818:	ldr	r0, [fp, #-8]
     81c:	bl	0 <flatcc_json_parser_set_error>
     820:	mov	r3, r0
     824:	b	838 <flatcc_json_parser_coerce_uint32+0x88>
     828:	ldr	r2, [fp, #4]
     82c:	ldr	r3, [fp, #12]
     830:	str	r2, [r3]
     834:	ldr	r3, [fp, #-12]
     838:	mov	r0, r3
     83c:	sub	sp, fp, #4
     840:	pop	{fp, pc}

00000844 <flatcc_json_parser_coerce_uint16>:
     844:	push	{fp, lr}
     848:	add	fp, sp, #4
     84c:	sub	sp, sp, #16
     850:	str	r0, [fp, #-8]
     854:	str	r1, [fp, #-12]
     858:	str	r2, [fp, #-16]
     85c:	str	r3, [fp, #-20]	; 0xffffffec
     860:	ldr	r3, [fp, #-20]	; 0xffffffec
     864:	cmp	r3, #0
     868:	beq	888 <flatcc_json_parser_coerce_uint16+0x44>
     86c:	mov	r3, #8
     870:	ldr	r2, [fp, #-16]
     874:	ldr	r1, [fp, #-12]
     878:	ldr	r0, [fp, #-8]
     87c:	bl	0 <flatcc_json_parser_set_error>
     880:	mov	r3, r0
     884:	b	8cc <flatcc_json_parser_coerce_uint16+0x88>
     888:	ldrd	r2, [fp, #4]
     88c:	ldr	r0, [pc, #68]	; 8d8 <flatcc_json_parser_coerce_uint16+0x94>
     890:	mov	r1, #0
     894:	cmp	r3, r1
     898:	cmpeq	r2, r0
     89c:	bls	8bc <flatcc_json_parser_coerce_uint16+0x78>
     8a0:	mov	r3, #7
     8a4:	ldr	r2, [fp, #-16]
     8a8:	ldr	r1, [fp, #-12]
     8ac:	ldr	r0, [fp, #-8]
     8b0:	bl	0 <flatcc_json_parser_set_error>
     8b4:	mov	r3, r0
     8b8:	b	8cc <flatcc_json_parser_coerce_uint16+0x88>
     8bc:	ldrh	r2, [fp, #4]
     8c0:	ldr	r3, [fp, #12]
     8c4:	strh	r2, [r3]
     8c8:	ldr	r3, [fp, #-12]
     8cc:	mov	r0, r3
     8d0:	sub	sp, fp, #4
     8d4:	pop	{fp, pc}
     8d8:	.word	0x0000ffff

000008dc <flatcc_json_parser_coerce_uint8>:
     8dc:	push	{fp, lr}
     8e0:	add	fp, sp, #4
     8e4:	sub	sp, sp, #16
     8e8:	str	r0, [fp, #-8]
     8ec:	str	r1, [fp, #-12]
     8f0:	str	r2, [fp, #-16]
     8f4:	str	r3, [fp, #-20]	; 0xffffffec
     8f8:	ldr	r3, [fp, #-20]	; 0xffffffec
     8fc:	cmp	r3, #0
     900:	beq	920 <flatcc_json_parser_coerce_uint8+0x44>
     904:	mov	r3, #8
     908:	ldr	r2, [fp, #-16]
     90c:	ldr	r1, [fp, #-12]
     910:	ldr	r0, [fp, #-8]
     914:	bl	0 <flatcc_json_parser_set_error>
     918:	mov	r3, r0
     91c:	b	95c <flatcc_json_parser_coerce_uint8+0x80>
     920:	ldrd	r2, [fp, #4]
     924:	cmp	r3, #0
     928:	cmpeq	r2, #255	; 0xff
     92c:	bls	94c <flatcc_json_parser_coerce_uint8+0x70>
     930:	mov	r3, #7
     934:	ldr	r2, [fp, #-16]
     938:	ldr	r1, [fp, #-12]
     93c:	ldr	r0, [fp, #-8]
     940:	bl	0 <flatcc_json_parser_set_error>
     944:	mov	r3, r0
     948:	b	95c <flatcc_json_parser_coerce_uint8+0x80>
     94c:	ldrb	r2, [fp, #4]
     950:	ldr	r3, [fp, #12]
     954:	strb	r2, [r3]
     958:	ldr	r3, [fp, #-12]
     95c:	mov	r0, r3
     960:	sub	sp, fp, #4
     964:	pop	{fp, pc}

00000968 <flatcc_json_parser_coerce_int64>:
     968:	push	{fp, lr}
     96c:	add	fp, sp, #4
     970:	sub	sp, sp, #16
     974:	str	r0, [fp, #-8]
     978:	str	r1, [fp, #-12]
     97c:	str	r2, [fp, #-16]
     980:	str	r3, [fp, #-20]	; 0xffffffec
     984:	ldr	r3, [fp, #-20]	; 0xffffffec
     988:	cmp	r3, #0
     98c:	beq	9d4 <flatcc_json_parser_coerce_int64+0x6c>
     990:	ldrd	r2, [fp, #4]
     994:	cmp	r3, #-2147483648	; 0x80000000
     998:	cmpeq	r2, #0
     99c:	bls	9bc <flatcc_json_parser_coerce_int64+0x54>
     9a0:	mov	r3, #8
     9a4:	ldr	r2, [fp, #-16]
     9a8:	ldr	r1, [fp, #-12]
     9ac:	ldr	r0, [fp, #-8]
     9b0:	bl	0 <flatcc_json_parser_set_error>
     9b4:	mov	r3, r0
     9b8:	b	a10 <flatcc_json_parser_coerce_int64+0xa8>
     9bc:	ldrd	r2, [fp, #4]
     9c0:	rsbs	r2, r2, #0
     9c4:	rsc	r3, r3, #0
     9c8:	ldr	r1, [fp, #12]
     9cc:	strd	r2, [r1]
     9d0:	b	a0c <flatcc_json_parser_coerce_int64+0xa4>
     9d4:	ldrd	r2, [fp, #4]
     9d8:	cmp	r2, #0
     9dc:	sbcs	r3, r3, #0
     9e0:	bge	a00 <flatcc_json_parser_coerce_int64+0x98>
     9e4:	mov	r3, #7
     9e8:	ldr	r2, [fp, #-16]
     9ec:	ldr	r1, [fp, #-12]
     9f0:	ldr	r0, [fp, #-8]
     9f4:	bl	0 <flatcc_json_parser_set_error>
     9f8:	mov	r3, r0
     9fc:	b	a10 <flatcc_json_parser_coerce_int64+0xa8>
     a00:	ldrd	r2, [fp, #4]
     a04:	ldr	r1, [fp, #12]
     a08:	strd	r2, [r1]
     a0c:	ldr	r3, [fp, #-12]
     a10:	mov	r0, r3
     a14:	sub	sp, fp, #4
     a18:	pop	{fp, pc}

00000a1c <flatcc_json_parser_coerce_int32>:
     a1c:	push	{fp, lr}
     a20:	add	fp, sp, #4
     a24:	sub	sp, sp, #16
     a28:	str	r0, [fp, #-8]
     a2c:	str	r1, [fp, #-12]
     a30:	str	r2, [fp, #-16]
     a34:	str	r3, [fp, #-20]	; 0xffffffec
     a38:	ldr	r3, [fp, #-20]	; 0xffffffec
     a3c:	cmp	r3, #0
     a40:	beq	a88 <flatcc_json_parser_coerce_int32+0x6c>
     a44:	ldrd	r2, [fp, #4]
     a48:	cmp	r3, #0
     a4c:	cmpeq	r2, #-2147483648	; 0x80000000
     a50:	bls	a70 <flatcc_json_parser_coerce_int32+0x54>
     a54:	mov	r3, #8
     a58:	ldr	r2, [fp, #-16]
     a5c:	ldr	r1, [fp, #-12]
     a60:	ldr	r0, [fp, #-8]
     a64:	bl	0 <flatcc_json_parser_set_error>
     a68:	mov	r3, r0
     a6c:	b	acc <flatcc_json_parser_coerce_int32+0xb0>
     a70:	ldr	r3, [fp, #4]
     a74:	rsb	r3, r3, #0
     a78:	mov	r2, r3
     a7c:	ldr	r3, [fp, #12]
     a80:	str	r2, [r3]
     a84:	b	ac8 <flatcc_json_parser_coerce_int32+0xac>
     a88:	ldrd	r2, [fp, #4]
     a8c:	mvn	r0, #-2147483648	; 0x80000000
     a90:	mov	r1, #0
     a94:	cmp	r3, r1
     a98:	cmpeq	r2, r0
     a9c:	bls	abc <flatcc_json_parser_coerce_int32+0xa0>
     aa0:	mov	r3, #7
     aa4:	ldr	r2, [fp, #-16]
     aa8:	ldr	r1, [fp, #-12]
     aac:	ldr	r0, [fp, #-8]
     ab0:	bl	0 <flatcc_json_parser_set_error>
     ab4:	mov	r3, r0
     ab8:	b	acc <flatcc_json_parser_coerce_int32+0xb0>
     abc:	ldr	r2, [fp, #4]
     ac0:	ldr	r3, [fp, #12]
     ac4:	str	r2, [r3]
     ac8:	ldr	r3, [fp, #-12]
     acc:	mov	r0, r3
     ad0:	sub	sp, fp, #4
     ad4:	pop	{fp, pc}

00000ad8 <flatcc_json_parser_coerce_int16>:
     ad8:	push	{fp, lr}
     adc:	add	fp, sp, #4
     ae0:	sub	sp, sp, #16
     ae4:	str	r0, [fp, #-8]
     ae8:	str	r1, [fp, #-12]
     aec:	str	r2, [fp, #-16]
     af0:	str	r3, [fp, #-20]	; 0xffffffec
     af4:	ldr	r3, [fp, #-20]	; 0xffffffec
     af8:	cmp	r3, #0
     afc:	beq	b48 <flatcc_json_parser_coerce_int16+0x70>
     b00:	ldrd	r2, [fp, #4]
     b04:	cmp	r3, #0
     b08:	cmpeq	r2, #32768	; 0x8000
     b0c:	bls	b2c <flatcc_json_parser_coerce_int16+0x54>
     b10:	mov	r3, #8
     b14:	ldr	r2, [fp, #-16]
     b18:	ldr	r1, [fp, #-12]
     b1c:	ldr	r0, [fp, #-8]
     b20:	bl	0 <flatcc_json_parser_set_error>
     b24:	mov	r3, r0
     b28:	b	b8c <flatcc_json_parser_coerce_int16+0xb4>
     b2c:	ldrh	r3, [fp, #4]
     b30:	rsb	r3, r3, #0
     b34:	uxth	r3, r3
     b38:	sxth	r2, r3
     b3c:	ldr	r3, [fp, #12]
     b40:	strh	r2, [r3]
     b44:	b	b88 <flatcc_json_parser_coerce_int16+0xb0>
     b48:	ldrd	r2, [fp, #4]
     b4c:	ldr	r0, [pc, #68]	; b98 <flatcc_json_parser_coerce_int16+0xc0>
     b50:	mov	r1, #0
     b54:	cmp	r3, r1
     b58:	cmpeq	r2, r0
     b5c:	bls	b7c <flatcc_json_parser_coerce_int16+0xa4>
     b60:	mov	r3, #7
     b64:	ldr	r2, [fp, #-16]
     b68:	ldr	r1, [fp, #-12]
     b6c:	ldr	r0, [fp, #-8]
     b70:	bl	0 <flatcc_json_parser_set_error>
     b74:	mov	r3, r0
     b78:	b	b8c <flatcc_json_parser_coerce_int16+0xb4>
     b7c:	ldrsh	r2, [fp, #4]
     b80:	ldr	r3, [fp, #12]
     b84:	strh	r2, [r3]
     b88:	ldr	r3, [fp, #-12]
     b8c:	mov	r0, r3
     b90:	sub	sp, fp, #4
     b94:	pop	{fp, pc}
     b98:	.word	0x00007fff

00000b9c <flatcc_json_parser_coerce_int8>:
     b9c:	push	{fp, lr}
     ba0:	add	fp, sp, #4
     ba4:	sub	sp, sp, #16
     ba8:	str	r0, [fp, #-8]
     bac:	str	r1, [fp, #-12]
     bb0:	str	r2, [fp, #-16]
     bb4:	str	r3, [fp, #-20]	; 0xffffffec
     bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
     bbc:	cmp	r3, #0
     bc0:	beq	c0c <flatcc_json_parser_coerce_int8+0x70>
     bc4:	ldrd	r2, [fp, #4]
     bc8:	cmp	r3, #0
     bcc:	cmpeq	r2, #128	; 0x80
     bd0:	bls	bf0 <flatcc_json_parser_coerce_int8+0x54>
     bd4:	mov	r3, #8
     bd8:	ldr	r2, [fp, #-16]
     bdc:	ldr	r1, [fp, #-12]
     be0:	ldr	r0, [fp, #-8]
     be4:	bl	0 <flatcc_json_parser_set_error>
     be8:	mov	r3, r0
     bec:	b	c48 <flatcc_json_parser_coerce_int8+0xac>
     bf0:	ldrb	r3, [fp, #4]
     bf4:	rsb	r3, r3, #0
     bf8:	uxtb	r3, r3
     bfc:	sxtb	r2, r3
     c00:	ldr	r3, [fp, #12]
     c04:	strb	r2, [r3]
     c08:	b	c44 <flatcc_json_parser_coerce_int8+0xa8>
     c0c:	ldrd	r2, [fp, #4]
     c10:	cmp	r3, #0
     c14:	cmpeq	r2, #127	; 0x7f
     c18:	bls	c38 <flatcc_json_parser_coerce_int8+0x9c>
     c1c:	mov	r3, #7
     c20:	ldr	r2, [fp, #-16]
     c24:	ldr	r1, [fp, #-12]
     c28:	ldr	r0, [fp, #-8]
     c2c:	bl	0 <flatcc_json_parser_set_error>
     c30:	mov	r3, r0
     c34:	b	c48 <flatcc_json_parser_coerce_int8+0xac>
     c38:	ldrsb	r2, [fp, #4]
     c3c:	ldr	r3, [fp, #12]
     c40:	strb	r2, [r3]
     c44:	ldr	r3, [fp, #-12]
     c48:	mov	r0, r3
     c4c:	sub	sp, fp, #4
     c50:	pop	{fp, pc}

00000c54 <flatcc_json_parser_coerce_float>:
     c54:	push	{fp, lr}
     c58:	add	fp, sp, #4
     c5c:	sub	sp, sp, #16
     c60:	str	r0, [fp, #-8]
     c64:	str	r1, [fp, #-12]
     c68:	str	r2, [fp, #-16]
     c6c:	str	r3, [fp, #-20]	; 0xffffffec
     c70:	ldr	r3, [fp, #-20]	; 0xffffffec
     c74:	cmp	r3, #0
     c78:	beq	c90 <flatcc_json_parser_coerce_float+0x3c>
     c7c:	ldrd	r0, [fp, #4]
     c80:	bl	0 <__aeabi_ul2f>
     c84:	mov	r3, r0
     c88:	eor	r2, r3, #-2147483648	; 0x80000000
     c8c:	b	c9c <flatcc_json_parser_coerce_float+0x48>
     c90:	ldrd	r0, [fp, #4]
     c94:	bl	0 <__aeabi_ul2f>
     c98:	mov	r2, r0
     c9c:	ldr	r3, [fp, #12]
     ca0:	str	r2, [r3]
     ca4:	ldr	r3, [fp, #-12]
     ca8:	mov	r0, r3
     cac:	sub	sp, fp, #4
     cb0:	pop	{fp, pc}

00000cb4 <flatcc_json_parser_coerce_double>:
     cb4:	push	{fp, lr}
     cb8:	add	fp, sp, #4
     cbc:	sub	sp, sp, #16
     cc0:	str	r0, [fp, #-8]
     cc4:	str	r1, [fp, #-12]
     cc8:	str	r2, [fp, #-16]
     ccc:	str	r3, [fp, #-20]	; 0xffffffec
     cd0:	ldr	r3, [fp, #-20]	; 0xffffffec
     cd4:	cmp	r3, #0
     cd8:	beq	cf4 <flatcc_json_parser_coerce_double+0x40>
     cdc:	ldrd	r0, [fp, #4]
     ce0:	bl	0 <__aeabi_ul2d>
     ce4:	mov	r2, r0
     ce8:	mov	r3, r1
     cec:	eor	r3, r3, #-2147483648	; 0x80000000
     cf0:	b	d04 <flatcc_json_parser_coerce_double+0x50>
     cf4:	ldrd	r0, [fp, #4]
     cf8:	bl	0 <__aeabi_ul2d>
     cfc:	mov	r2, r0
     d00:	mov	r3, r1
     d04:	ldr	r1, [fp, #12]
     d08:	strd	r2, [r1]
     d0c:	ldr	r3, [fp, #-12]
     d10:	mov	r0, r3
     d14:	sub	sp, fp, #4
     d18:	pop	{fp, pc}

00000d1c <flatcc_json_parser_uint32>:
     d1c:	push	{fp, lr}
     d20:	add	fp, sp, #4
     d24:	sub	sp, sp, #56	; 0x38
     d28:	str	r0, [fp, #-32]	; 0xffffffe0
     d2c:	str	r1, [fp, #-36]	; 0xffffffdc
     d30:	str	r2, [fp, #-40]	; 0xffffffd8
     d34:	str	r3, [fp, #-44]	; 0xffffffd4
     d38:	mov	r2, #0
     d3c:	mov	r3, #0
     d40:	strd	r2, [fp, #-20]	; 0xffffffec
     d44:	mov	r3, #0
     d48:	str	r3, [fp, #-24]	; 0xffffffe8
     d4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     d50:	str	r3, [fp, #-8]
     d54:	ldr	r3, [fp, #-44]	; 0xffffffd4
     d58:	mov	r2, #0
     d5c:	str	r2, [r3]
     d60:	ldr	r2, [fp, #-36]	; 0xffffffdc
     d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d68:	cmp	r2, r3
     d6c:	bne	d78 <flatcc_json_parser_uint32+0x5c>
     d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
     d74:	b	de0 <flatcc_json_parser_uint32+0xc4>
     d78:	sub	r2, fp, #24
     d7c:	sub	r3, fp, #20
     d80:	str	r3, [sp]
     d84:	mov	r3, r2
     d88:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     d90:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d94:	bl	0 <flatcc_json_parser_integer>
     d98:	str	r0, [fp, #-36]	; 0xffffffdc
     d9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     da0:	ldr	r3, [fp, #-8]
     da4:	cmp	r2, r3
     da8:	beq	ddc <flatcc_json_parser_uint32+0xc0>
     dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
     db0:	ldrd	r2, [fp, #-20]	; 0xffffffec
     db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     db8:	str	r1, [sp, #8]
     dbc:	strd	r2, [sp]
     dc0:	mov	r3, r0
     dc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
     dc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
     dcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dd0:	bl	7b0 <flatcc_json_parser_coerce_uint32>
     dd4:	mov	r3, r0
     dd8:	b	de0 <flatcc_json_parser_uint32+0xc4>
     ddc:	ldr	r3, [fp, #-36]	; 0xffffffdc
     de0:	mov	r0, r3
     de4:	sub	sp, fp, #4
     de8:	pop	{fp, pc}

00000dec <flatcc_json_parser_uint8>:
     dec:	push	{fp, lr}
     df0:	add	fp, sp, #4
     df4:	sub	sp, sp, #56	; 0x38
     df8:	str	r0, [fp, #-32]	; 0xffffffe0
     dfc:	str	r1, [fp, #-36]	; 0xffffffdc
     e00:	str	r2, [fp, #-40]	; 0xffffffd8
     e04:	str	r3, [fp, #-44]	; 0xffffffd4
     e08:	mov	r2, #0
     e0c:	mov	r3, #0
     e10:	strd	r2, [fp, #-20]	; 0xffffffec
     e14:	mov	r3, #0
     e18:	str	r3, [fp, #-24]	; 0xffffffe8
     e1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e20:	str	r3, [fp, #-8]
     e24:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e28:	mov	r2, #0
     e2c:	strb	r2, [r3]
     e30:	ldr	r2, [fp, #-36]	; 0xffffffdc
     e34:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e38:	cmp	r2, r3
     e3c:	bne	e48 <flatcc_json_parser_uint8+0x5c>
     e40:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e44:	b	eb0 <flatcc_json_parser_uint8+0xc4>
     e48:	sub	r2, fp, #24
     e4c:	sub	r3, fp, #20
     e50:	str	r3, [sp]
     e54:	mov	r3, r2
     e58:	ldr	r2, [fp, #-40]	; 0xffffffd8
     e5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e64:	bl	0 <flatcc_json_parser_integer>
     e68:	str	r0, [fp, #-36]	; 0xffffffdc
     e6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     e70:	ldr	r3, [fp, #-8]
     e74:	cmp	r2, r3
     e78:	beq	eac <flatcc_json_parser_uint8+0xc0>
     e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e80:	ldrd	r2, [fp, #-20]	; 0xffffffec
     e84:	ldr	r1, [fp, #-44]	; 0xffffffd4
     e88:	str	r1, [sp, #8]
     e8c:	strd	r2, [sp]
     e90:	mov	r3, r0
     e94:	ldr	r2, [fp, #-40]	; 0xffffffd8
     e98:	ldr	r1, [fp, #-36]	; 0xffffffdc
     e9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ea0:	bl	8dc <flatcc_json_parser_coerce_uint8>
     ea4:	mov	r3, r0
     ea8:	b	eb0 <flatcc_json_parser_uint8+0xc4>
     eac:	ldr	r3, [fp, #-36]	; 0xffffffdc
     eb0:	mov	r0, r3
     eb4:	sub	sp, fp, #4
     eb8:	pop	{fp, pc}

00000ebc <flatcc_json_parser_int64>:
     ebc:	push	{fp, lr}
     ec0:	add	fp, sp, #4
     ec4:	sub	sp, sp, #56	; 0x38
     ec8:	str	r0, [fp, #-32]	; 0xffffffe0
     ecc:	str	r1, [fp, #-36]	; 0xffffffdc
     ed0:	str	r2, [fp, #-40]	; 0xffffffd8
     ed4:	str	r3, [fp, #-44]	; 0xffffffd4
     ed8:	mov	r2, #0
     edc:	mov	r3, #0
     ee0:	strd	r2, [fp, #-20]	; 0xffffffec
     ee4:	mov	r3, #0
     ee8:	str	r3, [fp, #-24]	; 0xffffffe8
     eec:	ldr	r3, [fp, #-36]	; 0xffffffdc
     ef0:	str	r3, [fp, #-8]
     ef4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     ef8:	mov	r2, #0
     efc:	mov	r3, #0
     f00:	strd	r2, [r1]
     f04:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f08:	ldr	r3, [fp, #-40]	; 0xffffffd8
     f0c:	cmp	r2, r3
     f10:	bne	f1c <flatcc_json_parser_int64+0x60>
     f14:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f18:	b	f84 <flatcc_json_parser_int64+0xc8>
     f1c:	sub	r2, fp, #24
     f20:	sub	r3, fp, #20
     f24:	str	r3, [sp]
     f28:	mov	r3, r2
     f2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
     f30:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f38:	bl	0 <flatcc_json_parser_integer>
     f3c:	str	r0, [fp, #-36]	; 0xffffffdc
     f40:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f44:	ldr	r3, [fp, #-8]
     f48:	cmp	r2, r3
     f4c:	beq	f80 <flatcc_json_parser_int64+0xc4>
     f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f54:	ldrd	r2, [fp, #-20]	; 0xffffffec
     f58:	ldr	r1, [fp, #-44]	; 0xffffffd4
     f5c:	str	r1, [sp, #8]
     f60:	strd	r2, [sp]
     f64:	mov	r3, r0
     f68:	ldr	r2, [fp, #-40]	; 0xffffffd8
     f6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f74:	bl	968 <flatcc_json_parser_coerce_int64>
     f78:	mov	r3, r0
     f7c:	b	f84 <flatcc_json_parser_int64+0xc8>
     f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f84:	mov	r0, r3
     f88:	sub	sp, fp, #4
     f8c:	pop	{fp, pc}

00000f90 <flatcc_json_parser_symbolic_uint64>:
     f90:	push	{r4, fp, lr}
     f94:	add	fp, sp, #8
     f98:	sub	sp, sp, #76	; 0x4c
     f9c:	str	r0, [fp, #-56]	; 0xffffffc8
     fa0:	str	r1, [fp, #-60]	; 0xffffffc4
     fa4:	str	r2, [fp, #-64]	; 0xffffffc0
     fa8:	str	r3, [fp, #-68]	; 0xffffffbc
     fac:	mov	r2, #0
     fb0:	mov	r3, #0
     fb4:	strd	r2, [fp, #-36]	; 0xffffffdc
     fb8:	mov	r3, #0
     fbc:	str	r3, [fp, #-20]	; 0xffffffec
     fc0:	ldr	r1, [fp, #4]
     fc4:	mov	r2, #0
     fc8:	mov	r3, #0
     fcc:	strd	r2, [r1]
     fd0:	ldr	r2, [fp, #-64]	; 0xffffffc0
     fd4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     fd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
     fdc:	bl	674 <flatcc_json_parser_constant_start>
     fe0:	str	r0, [fp, #-60]	; 0xffffffc4
     fe4:	ldr	r2, [fp, #-60]	; 0xffffffc4
     fe8:	ldr	r3, [fp, #-64]	; 0xffffffc0
     fec:	cmp	r2, r3
     ff0:	bne	ffc <flatcc_json_parser_symbolic_uint64+0x6c>
     ff4:	ldr	r3, [fp, #-60]	; 0xffffffc4
     ff8:	b	115c <flatcc_json_parser_symbolic_uint64+0x1cc>
     ffc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1000:	str	r3, [fp, #-16]
    1004:	ldr	r3, [fp, #-16]
    1008:	ldr	r4, [r3]
    100c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1010:	str	r3, [fp, #-24]	; 0xffffffe8
    1014:	sub	r2, fp, #48	; 0x30
    1018:	sub	r3, fp, #52	; 0x34
    101c:	str	r3, [sp, #4]
    1020:	sub	r3, fp, #44	; 0x2c
    1024:	str	r3, [sp]
    1028:	mov	r3, r2
    102c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1030:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1034:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1038:	blx	r4
    103c:	str	r0, [fp, #-60]	; 0xffffffc4
    1040:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1044:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1048:	cmp	r2, r3
    104c:	bne	1058 <flatcc_json_parser_symbolic_uint64+0xc8>
    1050:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1054:	b	115c <flatcc_json_parser_symbolic_uint64+0x1cc>
    1058:	ldr	r2, [fp, #-60]	; 0xffffffc4
    105c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1060:	cmp	r2, r3
    1064:	bne	1084 <flatcc_json_parser_symbolic_uint64+0xf4>
    1068:	ldr	r3, [fp, #-16]
    106c:	add	r3, r3, #4
    1070:	str	r3, [fp, #-16]
    1074:	ldr	r3, [fp, #-16]
    1078:	ldr	r3, [r3]
    107c:	cmp	r3, #0
    1080:	bne	1004 <flatcc_json_parser_symbolic_uint64+0x74>
    1084:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1088:	ldr	r3, [fp, #-60]	; 0xffffffc4
    108c:	cmp	r2, r3
    1090:	bne	10b0 <flatcc_json_parser_symbolic_uint64+0x120>
    1094:	mov	r3, #23
    1098:	ldr	r2, [fp, #-64]	; 0xffffffc0
    109c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    10a4:	bl	0 <flatcc_json_parser_set_error>
    10a8:	mov	r3, r0
    10ac:	b	115c <flatcc_json_parser_symbolic_uint64+0x1cc>
    10b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    10b4:	add	r2, r3, #1
    10b8:	str	r2, [fp, #-20]	; 0xffffffec
    10bc:	cmp	r3, #0
    10c0:	beq	10f0 <flatcc_json_parser_symbolic_uint64+0x160>
    10c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10c8:	ldr	r3, [r3, #12]
    10cc:	cmp	r3, #0
    10d0:	beq	10f0 <flatcc_json_parser_symbolic_uint64+0x160>
    10d4:	mov	r3, #14
    10d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    10dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    10e4:	bl	0 <flatcc_json_parser_set_error>
    10e8:	mov	r3, r0
    10ec:	b	115c <flatcc_json_parser_symbolic_uint64+0x1cc>
    10f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10f4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    10f8:	sub	r1, fp, #36	; 0x24
    10fc:	str	r1, [sp, #8]
    1100:	strd	r2, [sp]
    1104:	mov	r3, r0
    1108:	ldr	r2, [fp, #-64]	; 0xffffffc0
    110c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1110:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1114:	bl	6d4 <flatcc_json_parser_coerce_uint64>
    1118:	mov	r2, r0
    111c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1120:	cmp	r2, r3
    1124:	bne	1130 <flatcc_json_parser_symbolic_uint64+0x1a0>
    1128:	ldr	r3, [fp, #-64]	; 0xffffffc0
    112c:	b	115c <flatcc_json_parser_symbolic_uint64+0x1cc>
    1130:	ldr	r3, [fp, #4]
    1134:	ldrd	r0, [r3]
    1138:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    113c:	adds	r2, r2, r0
    1140:	adc	r3, r3, r1
    1144:	ldr	r1, [fp, #4]
    1148:	strd	r2, [r1]
    114c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1150:	cmp	r3, #0
    1154:	bne	ffc <flatcc_json_parser_symbolic_uint64+0x6c>
    1158:	ldr	r3, [fp, #-60]	; 0xffffffc4
    115c:	mov	r0, r3
    1160:	sub	sp, fp, #8
    1164:	pop	{r4, fp, pc}

00001168 <flatcc_json_parser_symbolic_uint32>:
    1168:	push	{r4, fp, lr}
    116c:	add	fp, sp, #8
    1170:	sub	sp, sp, #68	; 0x44
    1174:	str	r0, [fp, #-48]	; 0xffffffd0
    1178:	str	r1, [fp, #-52]	; 0xffffffcc
    117c:	str	r2, [fp, #-56]	; 0xffffffc8
    1180:	str	r3, [fp, #-60]	; 0xffffffc4
    1184:	mov	r3, #0
    1188:	str	r3, [fp, #-28]	; 0xffffffe4
    118c:	mov	r3, #0
    1190:	str	r3, [fp, #-20]	; 0xffffffec
    1194:	ldr	r3, [fp, #4]
    1198:	mov	r2, #0
    119c:	str	r2, [r3]
    11a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    11a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    11ac:	bl	674 <flatcc_json_parser_constant_start>
    11b0:	str	r0, [fp, #-52]	; 0xffffffcc
    11b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    11b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    11bc:	cmp	r2, r3
    11c0:	bne	11cc <flatcc_json_parser_symbolic_uint32+0x64>
    11c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11c8:	b	1328 <flatcc_json_parser_symbolic_uint32+0x1c0>
    11cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    11d0:	str	r3, [fp, #-16]
    11d4:	ldr	r3, [fp, #-16]
    11d8:	ldr	r4, [r3]
    11dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11e0:	str	r3, [fp, #-24]	; 0xffffffe8
    11e4:	sub	r2, fp, #40	; 0x28
    11e8:	sub	r3, fp, #44	; 0x2c
    11ec:	str	r3, [sp, #4]
    11f0:	sub	r3, fp, #36	; 0x24
    11f4:	str	r3, [sp]
    11f8:	mov	r3, r2
    11fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1200:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1204:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1208:	blx	r4
    120c:	str	r0, [fp, #-52]	; 0xffffffcc
    1210:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1214:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1218:	cmp	r2, r3
    121c:	bne	1228 <flatcc_json_parser_symbolic_uint32+0xc0>
    1220:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1224:	b	1328 <flatcc_json_parser_symbolic_uint32+0x1c0>
    1228:	ldr	r2, [fp, #-52]	; 0xffffffcc
    122c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1230:	cmp	r2, r3
    1234:	bne	1254 <flatcc_json_parser_symbolic_uint32+0xec>
    1238:	ldr	r3, [fp, #-16]
    123c:	add	r3, r3, #4
    1240:	str	r3, [fp, #-16]
    1244:	ldr	r3, [fp, #-16]
    1248:	ldr	r3, [r3]
    124c:	cmp	r3, #0
    1250:	bne	11d4 <flatcc_json_parser_symbolic_uint32+0x6c>
    1254:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1258:	ldr	r3, [fp, #-52]	; 0xffffffcc
    125c:	cmp	r2, r3
    1260:	bne	1280 <flatcc_json_parser_symbolic_uint32+0x118>
    1264:	mov	r3, #23
    1268:	ldr	r2, [fp, #-56]	; 0xffffffc8
    126c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1270:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1274:	bl	0 <flatcc_json_parser_set_error>
    1278:	mov	r3, r0
    127c:	b	1328 <flatcc_json_parser_symbolic_uint32+0x1c0>
    1280:	ldr	r3, [fp, #-20]	; 0xffffffec
    1284:	add	r2, r3, #1
    1288:	str	r2, [fp, #-20]	; 0xffffffec
    128c:	cmp	r3, #0
    1290:	beq	12c0 <flatcc_json_parser_symbolic_uint32+0x158>
    1294:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1298:	ldr	r3, [r3, #12]
    129c:	cmp	r3, #0
    12a0:	beq	12c0 <flatcc_json_parser_symbolic_uint32+0x158>
    12a4:	mov	r3, #14
    12a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    12b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    12b4:	bl	0 <flatcc_json_parser_set_error>
    12b8:	mov	r3, r0
    12bc:	b	1328 <flatcc_json_parser_symbolic_uint32+0x1c0>
    12c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    12c4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    12c8:	sub	r1, fp, #28
    12cc:	str	r1, [sp, #8]
    12d0:	strd	r2, [sp]
    12d4:	mov	r3, r0
    12d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    12e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    12e4:	bl	7b0 <flatcc_json_parser_coerce_uint32>
    12e8:	mov	r2, r0
    12ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12f0:	cmp	r2, r3
    12f4:	bne	1300 <flatcc_json_parser_symbolic_uint32+0x198>
    12f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12fc:	b	1328 <flatcc_json_parser_symbolic_uint32+0x1c0>
    1300:	ldr	r3, [fp, #4]
    1304:	ldr	r2, [r3]
    1308:	ldr	r3, [fp, #-28]	; 0xffffffe4
    130c:	add	r2, r2, r3
    1310:	ldr	r3, [fp, #4]
    1314:	str	r2, [r3]
    1318:	ldr	r3, [fp, #-44]	; 0xffffffd4
    131c:	cmp	r3, #0
    1320:	bne	11cc <flatcc_json_parser_symbolic_uint32+0x64>
    1324:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1328:	mov	r0, r3
    132c:	sub	sp, fp, #8
    1330:	pop	{r4, fp, pc}

00001334 <flatcc_json_parser_symbolic_uint16>:
    1334:	push	{r4, fp, lr}
    1338:	add	fp, sp, #8
    133c:	sub	sp, sp, #68	; 0x44
    1340:	str	r0, [fp, #-48]	; 0xffffffd0
    1344:	str	r1, [fp, #-52]	; 0xffffffcc
    1348:	str	r2, [fp, #-56]	; 0xffffffc8
    134c:	str	r3, [fp, #-60]	; 0xffffffc4
    1350:	mov	r3, #0
    1354:	strh	r3, [fp, #-26]	; 0xffffffe6
    1358:	mov	r3, #0
    135c:	str	r3, [fp, #-20]	; 0xffffffec
    1360:	ldr	r3, [fp, #4]
    1364:	mov	r2, #0
    1368:	strh	r2, [r3]
    136c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1370:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1374:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1378:	bl	674 <flatcc_json_parser_constant_start>
    137c:	str	r0, [fp, #-52]	; 0xffffffcc
    1380:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1384:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1388:	cmp	r2, r3
    138c:	bne	1398 <flatcc_json_parser_symbolic_uint16+0x64>
    1390:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1394:	b	14f8 <flatcc_json_parser_symbolic_uint16+0x1c4>
    1398:	ldr	r3, [fp, #-60]	; 0xffffffc4
    139c:	str	r3, [fp, #-16]
    13a0:	ldr	r3, [fp, #-16]
    13a4:	ldr	r4, [r3]
    13a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13ac:	str	r3, [fp, #-24]	; 0xffffffe8
    13b0:	sub	r2, fp, #40	; 0x28
    13b4:	sub	r3, fp, #44	; 0x2c
    13b8:	str	r3, [sp, #4]
    13bc:	sub	r3, fp, #36	; 0x24
    13c0:	str	r3, [sp]
    13c4:	mov	r3, r2
    13c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    13d4:	blx	r4
    13d8:	str	r0, [fp, #-52]	; 0xffffffcc
    13dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    13e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    13e4:	cmp	r2, r3
    13e8:	bne	13f4 <flatcc_json_parser_symbolic_uint16+0xc0>
    13ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13f0:	b	14f8 <flatcc_json_parser_symbolic_uint16+0x1c4>
    13f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    13f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13fc:	cmp	r2, r3
    1400:	bne	1420 <flatcc_json_parser_symbolic_uint16+0xec>
    1404:	ldr	r3, [fp, #-16]
    1408:	add	r3, r3, #4
    140c:	str	r3, [fp, #-16]
    1410:	ldr	r3, [fp, #-16]
    1414:	ldr	r3, [r3]
    1418:	cmp	r3, #0
    141c:	bne	13a0 <flatcc_json_parser_symbolic_uint16+0x6c>
    1420:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1424:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1428:	cmp	r2, r3
    142c:	bne	144c <flatcc_json_parser_symbolic_uint16+0x118>
    1430:	mov	r3, #23
    1434:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1438:	ldr	r1, [fp, #-52]	; 0xffffffcc
    143c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1440:	bl	0 <flatcc_json_parser_set_error>
    1444:	mov	r3, r0
    1448:	b	14f8 <flatcc_json_parser_symbolic_uint16+0x1c4>
    144c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1450:	add	r2, r3, #1
    1454:	str	r2, [fp, #-20]	; 0xffffffec
    1458:	cmp	r3, #0
    145c:	beq	148c <flatcc_json_parser_symbolic_uint16+0x158>
    1460:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1464:	ldr	r3, [r3, #12]
    1468:	cmp	r3, #0
    146c:	beq	148c <flatcc_json_parser_symbolic_uint16+0x158>
    1470:	mov	r3, #14
    1474:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1478:	ldr	r1, [fp, #-52]	; 0xffffffcc
    147c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1480:	bl	0 <flatcc_json_parser_set_error>
    1484:	mov	r3, r0
    1488:	b	14f8 <flatcc_json_parser_symbolic_uint16+0x1c4>
    148c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1490:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1494:	sub	r1, fp, #26
    1498:	str	r1, [sp, #8]
    149c:	strd	r2, [sp]
    14a0:	mov	r3, r0
    14a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    14ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    14b0:	bl	844 <flatcc_json_parser_coerce_uint16>
    14b4:	mov	r2, r0
    14b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14bc:	cmp	r2, r3
    14c0:	bne	14cc <flatcc_json_parser_symbolic_uint16+0x198>
    14c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14c8:	b	14f8 <flatcc_json_parser_symbolic_uint16+0x1c4>
    14cc:	ldr	r3, [fp, #4]
    14d0:	ldrh	r2, [r3]
    14d4:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    14d8:	add	r3, r2, r3
    14dc:	uxth	r2, r3
    14e0:	ldr	r3, [fp, #4]
    14e4:	strh	r2, [r3]
    14e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    14ec:	cmp	r3, #0
    14f0:	bne	1398 <flatcc_json_parser_symbolic_uint16+0x64>
    14f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14f8:	mov	r0, r3
    14fc:	sub	sp, fp, #8
    1500:	pop	{r4, fp, pc}

00001504 <flatcc_json_parser_symbolic_uint8>:
    1504:	push	{r4, fp, lr}
    1508:	add	fp, sp, #8
    150c:	sub	sp, sp, #68	; 0x44
    1510:	str	r0, [fp, #-48]	; 0xffffffd0
    1514:	str	r1, [fp, #-52]	; 0xffffffcc
    1518:	str	r2, [fp, #-56]	; 0xffffffc8
    151c:	str	r3, [fp, #-60]	; 0xffffffc4
    1520:	mov	r3, #0
    1524:	strb	r3, [fp, #-25]	; 0xffffffe7
    1528:	mov	r3, #0
    152c:	str	r3, [fp, #-20]	; 0xffffffec
    1530:	ldr	r3, [fp, #4]
    1534:	mov	r2, #0
    1538:	strb	r2, [r3]
    153c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1540:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1544:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1548:	bl	674 <flatcc_json_parser_constant_start>
    154c:	str	r0, [fp, #-52]	; 0xffffffcc
    1550:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1554:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1558:	cmp	r2, r3
    155c:	bne	1568 <flatcc_json_parser_symbolic_uint8+0x64>
    1560:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1564:	b	16c8 <flatcc_json_parser_symbolic_uint8+0x1c4>
    1568:	ldr	r3, [fp, #-60]	; 0xffffffc4
    156c:	str	r3, [fp, #-16]
    1570:	ldr	r3, [fp, #-16]
    1574:	ldr	r4, [r3]
    1578:	ldr	r3, [fp, #-52]	; 0xffffffcc
    157c:	str	r3, [fp, #-24]	; 0xffffffe8
    1580:	sub	r2, fp, #40	; 0x28
    1584:	sub	r3, fp, #44	; 0x2c
    1588:	str	r3, [sp, #4]
    158c:	sub	r3, fp, #36	; 0x24
    1590:	str	r3, [sp]
    1594:	mov	r3, r2
    1598:	ldr	r2, [fp, #-56]	; 0xffffffc8
    159c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    15a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15a4:	blx	r4
    15a8:	str	r0, [fp, #-52]	; 0xffffffcc
    15ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
    15b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15b4:	cmp	r2, r3
    15b8:	bne	15c4 <flatcc_json_parser_symbolic_uint8+0xc0>
    15bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15c0:	b	16c8 <flatcc_json_parser_symbolic_uint8+0x1c4>
    15c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    15c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15cc:	cmp	r2, r3
    15d0:	bne	15f0 <flatcc_json_parser_symbolic_uint8+0xec>
    15d4:	ldr	r3, [fp, #-16]
    15d8:	add	r3, r3, #4
    15dc:	str	r3, [fp, #-16]
    15e0:	ldr	r3, [fp, #-16]
    15e4:	ldr	r3, [r3]
    15e8:	cmp	r3, #0
    15ec:	bne	1570 <flatcc_json_parser_symbolic_uint8+0x6c>
    15f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15f8:	cmp	r2, r3
    15fc:	bne	161c <flatcc_json_parser_symbolic_uint8+0x118>
    1600:	mov	r3, #23
    1604:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1608:	ldr	r1, [fp, #-52]	; 0xffffffcc
    160c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1610:	bl	0 <flatcc_json_parser_set_error>
    1614:	mov	r3, r0
    1618:	b	16c8 <flatcc_json_parser_symbolic_uint8+0x1c4>
    161c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1620:	add	r2, r3, #1
    1624:	str	r2, [fp, #-20]	; 0xffffffec
    1628:	cmp	r3, #0
    162c:	beq	165c <flatcc_json_parser_symbolic_uint8+0x158>
    1630:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1634:	ldr	r3, [r3, #12]
    1638:	cmp	r3, #0
    163c:	beq	165c <flatcc_json_parser_symbolic_uint8+0x158>
    1640:	mov	r3, #14
    1644:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1648:	ldr	r1, [fp, #-52]	; 0xffffffcc
    164c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1650:	bl	0 <flatcc_json_parser_set_error>
    1654:	mov	r3, r0
    1658:	b	16c8 <flatcc_json_parser_symbolic_uint8+0x1c4>
    165c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1660:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1664:	sub	r1, fp, #25
    1668:	str	r1, [sp, #8]
    166c:	strd	r2, [sp]
    1670:	mov	r3, r0
    1674:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1678:	ldr	r1, [fp, #-52]	; 0xffffffcc
    167c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1680:	bl	8dc <flatcc_json_parser_coerce_uint8>
    1684:	mov	r2, r0
    1688:	ldr	r3, [fp, #-56]	; 0xffffffc8
    168c:	cmp	r2, r3
    1690:	bne	169c <flatcc_json_parser_symbolic_uint8+0x198>
    1694:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1698:	b	16c8 <flatcc_json_parser_symbolic_uint8+0x1c4>
    169c:	ldr	r3, [fp, #4]
    16a0:	ldrb	r2, [r3]
    16a4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    16a8:	add	r3, r2, r3
    16ac:	uxtb	r2, r3
    16b0:	ldr	r3, [fp, #4]
    16b4:	strb	r2, [r3]
    16b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    16bc:	cmp	r3, #0
    16c0:	bne	1568 <flatcc_json_parser_symbolic_uint8+0x64>
    16c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16c8:	mov	r0, r3
    16cc:	sub	sp, fp, #8
    16d0:	pop	{r4, fp, pc}

000016d4 <flatcc_json_parser_symbolic_int64>:
    16d4:	push	{r4, fp, lr}
    16d8:	add	fp, sp, #8
    16dc:	sub	sp, sp, #76	; 0x4c
    16e0:	str	r0, [fp, #-56]	; 0xffffffc8
    16e4:	str	r1, [fp, #-60]	; 0xffffffc4
    16e8:	str	r2, [fp, #-64]	; 0xffffffc0
    16ec:	str	r3, [fp, #-68]	; 0xffffffbc
    16f0:	mov	r2, #0
    16f4:	mov	r3, #0
    16f8:	strd	r2, [fp, #-36]	; 0xffffffdc
    16fc:	mov	r3, #0
    1700:	str	r3, [fp, #-20]	; 0xffffffec
    1704:	ldr	r1, [fp, #4]
    1708:	mov	r2, #0
    170c:	mov	r3, #0
    1710:	strd	r2, [r1]
    1714:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1718:	ldr	r1, [fp, #-60]	; 0xffffffc4
    171c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1720:	bl	674 <flatcc_json_parser_constant_start>
    1724:	str	r0, [fp, #-60]	; 0xffffffc4
    1728:	ldr	r2, [fp, #-60]	; 0xffffffc4
    172c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1730:	cmp	r2, r3
    1734:	bne	1740 <flatcc_json_parser_symbolic_int64+0x6c>
    1738:	ldr	r3, [fp, #-60]	; 0xffffffc4
    173c:	b	18a0 <flatcc_json_parser_symbolic_int64+0x1cc>
    1740:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1744:	str	r3, [fp, #-16]
    1748:	ldr	r3, [fp, #-16]
    174c:	ldr	r4, [r3]
    1750:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1754:	str	r3, [fp, #-24]	; 0xffffffe8
    1758:	sub	r2, fp, #48	; 0x30
    175c:	sub	r3, fp, #52	; 0x34
    1760:	str	r3, [sp, #4]
    1764:	sub	r3, fp, #44	; 0x2c
    1768:	str	r3, [sp]
    176c:	mov	r3, r2
    1770:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1774:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1778:	ldr	r0, [fp, #-56]	; 0xffffffc8
    177c:	blx	r4
    1780:	str	r0, [fp, #-60]	; 0xffffffc4
    1784:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1788:	ldr	r3, [fp, #-64]	; 0xffffffc0
    178c:	cmp	r2, r3
    1790:	bne	179c <flatcc_json_parser_symbolic_int64+0xc8>
    1794:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1798:	b	18a0 <flatcc_json_parser_symbolic_int64+0x1cc>
    179c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    17a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    17a4:	cmp	r2, r3
    17a8:	bne	17c8 <flatcc_json_parser_symbolic_int64+0xf4>
    17ac:	ldr	r3, [fp, #-16]
    17b0:	add	r3, r3, #4
    17b4:	str	r3, [fp, #-16]
    17b8:	ldr	r3, [fp, #-16]
    17bc:	ldr	r3, [r3]
    17c0:	cmp	r3, #0
    17c4:	bne	1748 <flatcc_json_parser_symbolic_int64+0x74>
    17c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    17cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17d0:	cmp	r2, r3
    17d4:	bne	17f4 <flatcc_json_parser_symbolic_int64+0x120>
    17d8:	mov	r3, #23
    17dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    17e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    17e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    17e8:	bl	0 <flatcc_json_parser_set_error>
    17ec:	mov	r3, r0
    17f0:	b	18a0 <flatcc_json_parser_symbolic_int64+0x1cc>
    17f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    17f8:	add	r2, r3, #1
    17fc:	str	r2, [fp, #-20]	; 0xffffffec
    1800:	cmp	r3, #0
    1804:	beq	1834 <flatcc_json_parser_symbolic_int64+0x160>
    1808:	ldr	r3, [fp, #-56]	; 0xffffffc8
    180c:	ldr	r3, [r3, #12]
    1810:	cmp	r3, #0
    1814:	beq	1834 <flatcc_json_parser_symbolic_int64+0x160>
    1818:	mov	r3, #14
    181c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1820:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1824:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1828:	bl	0 <flatcc_json_parser_set_error>
    182c:	mov	r3, r0
    1830:	b	18a0 <flatcc_json_parser_symbolic_int64+0x1cc>
    1834:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1838:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    183c:	sub	r1, fp, #36	; 0x24
    1840:	str	r1, [sp, #8]
    1844:	strd	r2, [sp]
    1848:	mov	r3, r0
    184c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1850:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1854:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1858:	bl	968 <flatcc_json_parser_coerce_int64>
    185c:	mov	r2, r0
    1860:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1864:	cmp	r2, r3
    1868:	bne	1874 <flatcc_json_parser_symbolic_int64+0x1a0>
    186c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1870:	b	18a0 <flatcc_json_parser_symbolic_int64+0x1cc>
    1874:	ldr	r3, [fp, #4]
    1878:	ldrd	r0, [r3]
    187c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1880:	adds	r2, r2, r0
    1884:	adc	r3, r3, r1
    1888:	ldr	r1, [fp, #4]
    188c:	strd	r2, [r1]
    1890:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1894:	cmp	r3, #0
    1898:	bne	1740 <flatcc_json_parser_symbolic_int64+0x6c>
    189c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    18a0:	mov	r0, r3
    18a4:	sub	sp, fp, #8
    18a8:	pop	{r4, fp, pc}

000018ac <flatcc_json_parser_symbolic_int32>:
    18ac:	push	{r4, fp, lr}
    18b0:	add	fp, sp, #8
    18b4:	sub	sp, sp, #68	; 0x44
    18b8:	str	r0, [fp, #-48]	; 0xffffffd0
    18bc:	str	r1, [fp, #-52]	; 0xffffffcc
    18c0:	str	r2, [fp, #-56]	; 0xffffffc8
    18c4:	str	r3, [fp, #-60]	; 0xffffffc4
    18c8:	mov	r3, #0
    18cc:	str	r3, [fp, #-28]	; 0xffffffe4
    18d0:	mov	r3, #0
    18d4:	str	r3, [fp, #-20]	; 0xffffffec
    18d8:	ldr	r3, [fp, #4]
    18dc:	mov	r2, #0
    18e0:	str	r2, [r3]
    18e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    18ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18f0:	bl	674 <flatcc_json_parser_constant_start>
    18f4:	str	r0, [fp, #-52]	; 0xffffffcc
    18f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    18fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1900:	cmp	r2, r3
    1904:	bne	1910 <flatcc_json_parser_symbolic_int32+0x64>
    1908:	ldr	r3, [fp, #-52]	; 0xffffffcc
    190c:	b	1a6c <flatcc_json_parser_symbolic_int32+0x1c0>
    1910:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1914:	str	r3, [fp, #-16]
    1918:	ldr	r3, [fp, #-16]
    191c:	ldr	r4, [r3]
    1920:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1924:	str	r3, [fp, #-24]	; 0xffffffe8
    1928:	sub	r2, fp, #40	; 0x28
    192c:	sub	r3, fp, #44	; 0x2c
    1930:	str	r3, [sp, #4]
    1934:	sub	r3, fp, #36	; 0x24
    1938:	str	r3, [sp]
    193c:	mov	r3, r2
    1940:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1944:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1948:	ldr	r0, [fp, #-48]	; 0xffffffd0
    194c:	blx	r4
    1950:	str	r0, [fp, #-52]	; 0xffffffcc
    1954:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1958:	ldr	r3, [fp, #-56]	; 0xffffffc8
    195c:	cmp	r2, r3
    1960:	bne	196c <flatcc_json_parser_symbolic_int32+0xc0>
    1964:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1968:	b	1a6c <flatcc_json_parser_symbolic_int32+0x1c0>
    196c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1970:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1974:	cmp	r2, r3
    1978:	bne	1998 <flatcc_json_parser_symbolic_int32+0xec>
    197c:	ldr	r3, [fp, #-16]
    1980:	add	r3, r3, #4
    1984:	str	r3, [fp, #-16]
    1988:	ldr	r3, [fp, #-16]
    198c:	ldr	r3, [r3]
    1990:	cmp	r3, #0
    1994:	bne	1918 <flatcc_json_parser_symbolic_int32+0x6c>
    1998:	ldr	r2, [fp, #-24]	; 0xffffffe8
    199c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19a0:	cmp	r2, r3
    19a4:	bne	19c4 <flatcc_json_parser_symbolic_int32+0x118>
    19a8:	mov	r3, #23
    19ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    19b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    19b8:	bl	0 <flatcc_json_parser_set_error>
    19bc:	mov	r3, r0
    19c0:	b	1a6c <flatcc_json_parser_symbolic_int32+0x1c0>
    19c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    19c8:	add	r2, r3, #1
    19cc:	str	r2, [fp, #-20]	; 0xffffffec
    19d0:	cmp	r3, #0
    19d4:	beq	1a04 <flatcc_json_parser_symbolic_int32+0x158>
    19d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    19dc:	ldr	r3, [r3, #12]
    19e0:	cmp	r3, #0
    19e4:	beq	1a04 <flatcc_json_parser_symbolic_int32+0x158>
    19e8:	mov	r3, #14
    19ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    19f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    19f8:	bl	0 <flatcc_json_parser_set_error>
    19fc:	mov	r3, r0
    1a00:	b	1a6c <flatcc_json_parser_symbolic_int32+0x1c0>
    1a04:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1a08:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1a0c:	sub	r1, fp, #28
    1a10:	str	r1, [sp, #8]
    1a14:	strd	r2, [sp]
    1a18:	mov	r3, r0
    1a1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a20:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1a24:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a28:	bl	a1c <flatcc_json_parser_coerce_int32>
    1a2c:	mov	r2, r0
    1a30:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1a34:	cmp	r2, r3
    1a38:	bne	1a44 <flatcc_json_parser_symbolic_int32+0x198>
    1a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1a40:	b	1a6c <flatcc_json_parser_symbolic_int32+0x1c0>
    1a44:	ldr	r3, [fp, #4]
    1a48:	ldr	r2, [r3]
    1a4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a50:	add	r2, r2, r3
    1a54:	ldr	r3, [fp, #4]
    1a58:	str	r2, [r3]
    1a5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1a60:	cmp	r3, #0
    1a64:	bne	1910 <flatcc_json_parser_symbolic_int32+0x64>
    1a68:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1a6c:	mov	r0, r3
    1a70:	sub	sp, fp, #8
    1a74:	pop	{r4, fp, pc}

00001a78 <flatcc_json_parser_symbolic_int16>:
    1a78:	push	{r4, fp, lr}
    1a7c:	add	fp, sp, #8
    1a80:	sub	sp, sp, #68	; 0x44
    1a84:	str	r0, [fp, #-48]	; 0xffffffd0
    1a88:	str	r1, [fp, #-52]	; 0xffffffcc
    1a8c:	str	r2, [fp, #-56]	; 0xffffffc8
    1a90:	str	r3, [fp, #-60]	; 0xffffffc4
    1a94:	mov	r3, #0
    1a98:	strh	r3, [fp, #-26]	; 0xffffffe6
    1a9c:	mov	r3, #0
    1aa0:	str	r3, [fp, #-20]	; 0xffffffec
    1aa4:	ldr	r3, [fp, #4]
    1aa8:	mov	r2, #0
    1aac:	strh	r2, [r3]
    1ab0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ab4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1ab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1abc:	bl	674 <flatcc_json_parser_constant_start>
    1ac0:	str	r0, [fp, #-52]	; 0xffffffcc
    1ac4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ac8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1acc:	cmp	r2, r3
    1ad0:	bne	1adc <flatcc_json_parser_symbolic_int16+0x64>
    1ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ad8:	b	1c48 <flatcc_json_parser_symbolic_int16+0x1d0>
    1adc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1ae0:	str	r3, [fp, #-16]
    1ae4:	ldr	r3, [fp, #-16]
    1ae8:	ldr	r4, [r3]
    1aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1af0:	str	r3, [fp, #-24]	; 0xffffffe8
    1af4:	sub	r2, fp, #40	; 0x28
    1af8:	sub	r3, fp, #44	; 0x2c
    1afc:	str	r3, [sp, #4]
    1b00:	sub	r3, fp, #36	; 0x24
    1b04:	str	r3, [sp]
    1b08:	mov	r3, r2
    1b0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b14:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b18:	blx	r4
    1b1c:	str	r0, [fp, #-52]	; 0xffffffcc
    1b20:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1b24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1b28:	cmp	r2, r3
    1b2c:	bne	1b38 <flatcc_json_parser_symbolic_int16+0xc0>
    1b30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b34:	b	1c48 <flatcc_json_parser_symbolic_int16+0x1d0>
    1b38:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b40:	cmp	r2, r3
    1b44:	bne	1b64 <flatcc_json_parser_symbolic_int16+0xec>
    1b48:	ldr	r3, [fp, #-16]
    1b4c:	add	r3, r3, #4
    1b50:	str	r3, [fp, #-16]
    1b54:	ldr	r3, [fp, #-16]
    1b58:	ldr	r3, [r3]
    1b5c:	cmp	r3, #0
    1b60:	bne	1ae4 <flatcc_json_parser_symbolic_int16+0x6c>
    1b64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1b68:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b6c:	cmp	r2, r3
    1b70:	bne	1b90 <flatcc_json_parser_symbolic_int16+0x118>
    1b74:	mov	r3, #23
    1b78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1b80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b84:	bl	0 <flatcc_json_parser_set_error>
    1b88:	mov	r3, r0
    1b8c:	b	1c48 <flatcc_json_parser_symbolic_int16+0x1d0>
    1b90:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b94:	add	r2, r3, #1
    1b98:	str	r2, [fp, #-20]	; 0xffffffec
    1b9c:	cmp	r3, #0
    1ba0:	beq	1bd0 <flatcc_json_parser_symbolic_int16+0x158>
    1ba4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1ba8:	ldr	r3, [r3, #12]
    1bac:	cmp	r3, #0
    1bb0:	beq	1bd0 <flatcc_json_parser_symbolic_int16+0x158>
    1bb4:	mov	r3, #14
    1bb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1bc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bc4:	bl	0 <flatcc_json_parser_set_error>
    1bc8:	mov	r3, r0
    1bcc:	b	1c48 <flatcc_json_parser_symbolic_int16+0x1d0>
    1bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1bd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1bd8:	sub	r1, fp, #26
    1bdc:	str	r1, [sp, #8]
    1be0:	strd	r2, [sp]
    1be4:	mov	r3, r0
    1be8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1bf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bf4:	bl	ad8 <flatcc_json_parser_coerce_int16>
    1bf8:	mov	r2, r0
    1bfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1c00:	cmp	r2, r3
    1c04:	bne	1c10 <flatcc_json_parser_symbolic_int16+0x198>
    1c08:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1c0c:	b	1c48 <flatcc_json_parser_symbolic_int16+0x1d0>
    1c10:	ldr	r3, [fp, #4]
    1c14:	ldrsh	r3, [r3]
    1c18:	uxth	r2, r3
    1c1c:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
    1c20:	uxth	r3, r3
    1c24:	add	r3, r2, r3
    1c28:	uxth	r3, r3
    1c2c:	sxth	r2, r3
    1c30:	ldr	r3, [fp, #4]
    1c34:	strh	r2, [r3]
    1c38:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1c3c:	cmp	r3, #0
    1c40:	bne	1adc <flatcc_json_parser_symbolic_int16+0x64>
    1c44:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1c48:	mov	r0, r3
    1c4c:	sub	sp, fp, #8
    1c50:	pop	{r4, fp, pc}

00001c54 <flatcc_json_parser_symbolic_int8>:
    1c54:	push	{r4, fp, lr}
    1c58:	add	fp, sp, #8
    1c5c:	sub	sp, sp, #68	; 0x44
    1c60:	str	r0, [fp, #-48]	; 0xffffffd0
    1c64:	str	r1, [fp, #-52]	; 0xffffffcc
    1c68:	str	r2, [fp, #-56]	; 0xffffffc8
    1c6c:	str	r3, [fp, #-60]	; 0xffffffc4
    1c70:	mov	r3, #0
    1c74:	strb	r3, [fp, #-25]	; 0xffffffe7
    1c78:	mov	r3, #0
    1c7c:	str	r3, [fp, #-20]	; 0xffffffec
    1c80:	ldr	r3, [fp, #4]
    1c84:	mov	r2, #0
    1c88:	strb	r2, [r3]
    1c8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c90:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1c94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c98:	bl	674 <flatcc_json_parser_constant_start>
    1c9c:	str	r0, [fp, #-52]	; 0xffffffcc
    1ca0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ca4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1ca8:	cmp	r2, r3
    1cac:	bne	1cb8 <flatcc_json_parser_symbolic_int8+0x64>
    1cb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cb4:	b	1e24 <flatcc_json_parser_symbolic_int8+0x1d0>
    1cb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1cbc:	str	r3, [fp, #-16]
    1cc0:	ldr	r3, [fp, #-16]
    1cc4:	ldr	r4, [r3]
    1cc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ccc:	str	r3, [fp, #-24]	; 0xffffffe8
    1cd0:	sub	r2, fp, #40	; 0x28
    1cd4:	sub	r3, fp, #44	; 0x2c
    1cd8:	str	r3, [sp, #4]
    1cdc:	sub	r3, fp, #36	; 0x24
    1ce0:	str	r3, [sp]
    1ce4:	mov	r3, r2
    1ce8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1cf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cf4:	blx	r4
    1cf8:	str	r0, [fp, #-52]	; 0xffffffcc
    1cfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1d00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1d04:	cmp	r2, r3
    1d08:	bne	1d14 <flatcc_json_parser_symbolic_int8+0xc0>
    1d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d10:	b	1e24 <flatcc_json_parser_symbolic_int8+0x1d0>
    1d14:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d1c:	cmp	r2, r3
    1d20:	bne	1d40 <flatcc_json_parser_symbolic_int8+0xec>
    1d24:	ldr	r3, [fp, #-16]
    1d28:	add	r3, r3, #4
    1d2c:	str	r3, [fp, #-16]
    1d30:	ldr	r3, [fp, #-16]
    1d34:	ldr	r3, [r3]
    1d38:	cmp	r3, #0
    1d3c:	bne	1cc0 <flatcc_json_parser_symbolic_int8+0x6c>
    1d40:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d44:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d48:	cmp	r2, r3
    1d4c:	bne	1d6c <flatcc_json_parser_symbolic_int8+0x118>
    1d50:	mov	r3, #23
    1d54:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d58:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1d5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d60:	bl	0 <flatcc_json_parser_set_error>
    1d64:	mov	r3, r0
    1d68:	b	1e24 <flatcc_json_parser_symbolic_int8+0x1d0>
    1d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d70:	add	r2, r3, #1
    1d74:	str	r2, [fp, #-20]	; 0xffffffec
    1d78:	cmp	r3, #0
    1d7c:	beq	1dac <flatcc_json_parser_symbolic_int8+0x158>
    1d80:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1d84:	ldr	r3, [r3, #12]
    1d88:	cmp	r3, #0
    1d8c:	beq	1dac <flatcc_json_parser_symbolic_int8+0x158>
    1d90:	mov	r3, #14
    1d94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d98:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1d9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1da0:	bl	0 <flatcc_json_parser_set_error>
    1da4:	mov	r3, r0
    1da8:	b	1e24 <flatcc_json_parser_symbolic_int8+0x1d0>
    1dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1db0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1db4:	sub	r1, fp, #25
    1db8:	str	r1, [sp, #8]
    1dbc:	strd	r2, [sp]
    1dc0:	mov	r3, r0
    1dc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1dc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1dcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1dd0:	bl	b9c <flatcc_json_parser_coerce_int8>
    1dd4:	mov	r2, r0
    1dd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1ddc:	cmp	r2, r3
    1de0:	bne	1dec <flatcc_json_parser_symbolic_int8+0x198>
    1de4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1de8:	b	1e24 <flatcc_json_parser_symbolic_int8+0x1d0>
    1dec:	ldr	r3, [fp, #4]
    1df0:	ldrsb	r3, [r3]
    1df4:	uxtb	r2, r3
    1df8:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    1dfc:	uxtb	r3, r3
    1e00:	add	r3, r2, r3
    1e04:	uxtb	r3, r3
    1e08:	sxtb	r2, r3
    1e0c:	ldr	r3, [fp, #4]
    1e10:	strb	r2, [r3]
    1e14:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1e18:	cmp	r3, #0
    1e1c:	bne	1cb8 <flatcc_json_parser_symbolic_int8+0x64>
    1e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e24:	mov	r0, r3
    1e28:	sub	sp, fp, #8
    1e2c:	pop	{r4, fp, pc}

00001e30 <flatcc_json_parser_symbolic_bool>:
    1e30:	push	{r4, fp, lr}
    1e34:	add	fp, sp, #8
    1e38:	sub	sp, sp, #68	; 0x44
    1e3c:	str	r0, [fp, #-48]	; 0xffffffd0
    1e40:	str	r1, [fp, #-52]	; 0xffffffcc
    1e44:	str	r2, [fp, #-56]	; 0xffffffc8
    1e48:	str	r3, [fp, #-60]	; 0xffffffc4
    1e4c:	mov	r3, #0
    1e50:	strb	r3, [fp, #-25]	; 0xffffffe7
    1e54:	mov	r3, #0
    1e58:	str	r3, [fp, #-20]	; 0xffffffec
    1e5c:	ldr	r3, [fp, #4]
    1e60:	mov	r2, #0
    1e64:	strb	r2, [r3]
    1e68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e74:	bl	674 <flatcc_json_parser_constant_start>
    1e78:	str	r0, [fp, #-52]	; 0xffffffcc
    1e7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1e80:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e84:	cmp	r2, r3
    1e88:	bne	1e94 <flatcc_json_parser_symbolic_bool+0x64>
    1e8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e90:	b	1ff4 <flatcc_json_parser_symbolic_bool+0x1c4>
    1e94:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1e98:	str	r3, [fp, #-16]
    1e9c:	ldr	r3, [fp, #-16]
    1ea0:	ldr	r4, [r3]
    1ea4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ea8:	str	r3, [fp, #-24]	; 0xffffffe8
    1eac:	sub	r2, fp, #40	; 0x28
    1eb0:	sub	r3, fp, #44	; 0x2c
    1eb4:	str	r3, [sp, #4]
    1eb8:	sub	r3, fp, #36	; 0x24
    1ebc:	str	r3, [sp]
    1ec0:	mov	r3, r2
    1ec4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ecc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1ed0:	blx	r4
    1ed4:	str	r0, [fp, #-52]	; 0xffffffcc
    1ed8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1edc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1ee0:	cmp	r2, r3
    1ee4:	bne	1ef0 <flatcc_json_parser_symbolic_bool+0xc0>
    1ee8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1eec:	b	1ff4 <flatcc_json_parser_symbolic_bool+0x1c4>
    1ef0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ef8:	cmp	r2, r3
    1efc:	bne	1f1c <flatcc_json_parser_symbolic_bool+0xec>
    1f00:	ldr	r3, [fp, #-16]
    1f04:	add	r3, r3, #4
    1f08:	str	r3, [fp, #-16]
    1f0c:	ldr	r3, [fp, #-16]
    1f10:	ldr	r3, [r3]
    1f14:	cmp	r3, #0
    1f18:	bne	1e9c <flatcc_json_parser_symbolic_bool+0x6c>
    1f1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1f24:	cmp	r2, r3
    1f28:	bne	1f48 <flatcc_json_parser_symbolic_bool+0x118>
    1f2c:	mov	r3, #23
    1f30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f34:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1f38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f3c:	bl	0 <flatcc_json_parser_set_error>
    1f40:	mov	r3, r0
    1f44:	b	1ff4 <flatcc_json_parser_symbolic_bool+0x1c4>
    1f48:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f4c:	add	r2, r3, #1
    1f50:	str	r2, [fp, #-20]	; 0xffffffec
    1f54:	cmp	r3, #0
    1f58:	beq	1f88 <flatcc_json_parser_symbolic_bool+0x158>
    1f5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1f60:	ldr	r3, [r3, #12]
    1f64:	cmp	r3, #0
    1f68:	beq	1f88 <flatcc_json_parser_symbolic_bool+0x158>
    1f6c:	mov	r3, #14
    1f70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f74:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1f78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f7c:	bl	0 <flatcc_json_parser_set_error>
    1f80:	mov	r3, r0
    1f84:	b	1ff4 <flatcc_json_parser_symbolic_bool+0x1c4>
    1f88:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1f8c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1f90:	sub	r1, fp, #25
    1f94:	str	r1, [sp, #8]
    1f98:	strd	r2, [sp]
    1f9c:	mov	r3, r0
    1fa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1fa8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1fac:	bl	734 <flatcc_json_parser_coerce_bool>
    1fb0:	mov	r2, r0
    1fb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1fb8:	cmp	r2, r3
    1fbc:	bne	1fc8 <flatcc_json_parser_symbolic_bool+0x198>
    1fc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1fc4:	b	1ff4 <flatcc_json_parser_symbolic_bool+0x1c4>
    1fc8:	ldr	r3, [fp, #4]
    1fcc:	ldrb	r2, [r3]
    1fd0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    1fd4:	add	r3, r2, r3
    1fd8:	uxtb	r2, r3
    1fdc:	ldr	r3, [fp, #4]
    1fe0:	strb	r2, [r3]
    1fe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1fe8:	cmp	r3, #0
    1fec:	bne	1e94 <flatcc_json_parser_symbolic_bool+0x64>
    1ff0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ff4:	mov	r0, r3
    1ff8:	sub	sp, fp, #8
    1ffc:	pop	{r4, fp, pc}

00002000 <flatcc_json_parser_symbolic_float>:
    2000:	push	{r4, fp, lr}
    2004:	add	fp, sp, #8
    2008:	sub	sp, sp, #68	; 0x44
    200c:	str	r0, [fp, #-48]	; 0xffffffd0
    2010:	str	r1, [fp, #-52]	; 0xffffffcc
    2014:	str	r2, [fp, #-56]	; 0xffffffc8
    2018:	str	r3, [fp, #-60]	; 0xffffffc4
    201c:	mov	r3, #0
    2020:	str	r3, [fp, #-28]	; 0xffffffe4
    2024:	mov	r3, #0
    2028:	str	r3, [fp, #-20]	; 0xffffffec
    202c:	ldr	r3, [fp, #4]
    2030:	mov	r2, #0
    2034:	str	r2, [r3]
    2038:	ldr	r2, [fp, #-56]	; 0xffffffc8
    203c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2040:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2044:	bl	674 <flatcc_json_parser_constant_start>
    2048:	str	r0, [fp, #-52]	; 0xffffffcc
    204c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2050:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2054:	cmp	r2, r3
    2058:	bne	2064 <flatcc_json_parser_symbolic_float+0x64>
    205c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2060:	b	21c0 <flatcc_json_parser_symbolic_float+0x1c0>
    2064:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2068:	str	r3, [fp, #-16]
    206c:	ldr	r3, [fp, #-16]
    2070:	ldr	r4, [r3]
    2074:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2078:	str	r3, [fp, #-24]	; 0xffffffe8
    207c:	sub	r2, fp, #40	; 0x28
    2080:	sub	r3, fp, #44	; 0x2c
    2084:	str	r3, [sp, #4]
    2088:	sub	r3, fp, #36	; 0x24
    208c:	str	r3, [sp]
    2090:	mov	r3, r2
    2094:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2098:	ldr	r1, [fp, #-24]	; 0xffffffe8
    209c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20a0:	blx	r4
    20a4:	str	r0, [fp, #-52]	; 0xffffffcc
    20a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
    20b0:	cmp	r2, r3
    20b4:	bne	20c0 <flatcc_json_parser_symbolic_float+0xc0>
    20b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20bc:	b	21c0 <flatcc_json_parser_symbolic_float+0x1c0>
    20c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20c8:	cmp	r2, r3
    20cc:	bne	20ec <flatcc_json_parser_symbolic_float+0xec>
    20d0:	ldr	r3, [fp, #-16]
    20d4:	add	r3, r3, #4
    20d8:	str	r3, [fp, #-16]
    20dc:	ldr	r3, [fp, #-16]
    20e0:	ldr	r3, [r3]
    20e4:	cmp	r3, #0
    20e8:	bne	206c <flatcc_json_parser_symbolic_float+0x6c>
    20ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    20f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20f4:	cmp	r2, r3
    20f8:	bne	2118 <flatcc_json_parser_symbolic_float+0x118>
    20fc:	mov	r3, #23
    2100:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2104:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2108:	ldr	r0, [fp, #-48]	; 0xffffffd0
    210c:	bl	0 <flatcc_json_parser_set_error>
    2110:	mov	r3, r0
    2114:	b	21c0 <flatcc_json_parser_symbolic_float+0x1c0>
    2118:	ldr	r3, [fp, #-20]	; 0xffffffec
    211c:	add	r2, r3, #1
    2120:	str	r2, [fp, #-20]	; 0xffffffec
    2124:	cmp	r3, #0
    2128:	beq	2158 <flatcc_json_parser_symbolic_float+0x158>
    212c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2130:	ldr	r3, [r3, #12]
    2134:	cmp	r3, #0
    2138:	beq	2158 <flatcc_json_parser_symbolic_float+0x158>
    213c:	mov	r3, #14
    2140:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2144:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2148:	ldr	r0, [fp, #-48]	; 0xffffffd0
    214c:	bl	0 <flatcc_json_parser_set_error>
    2150:	mov	r3, r0
    2154:	b	21c0 <flatcc_json_parser_symbolic_float+0x1c0>
    2158:	ldr	r0, [fp, #-40]	; 0xffffffd8
    215c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2160:	sub	r1, fp, #28
    2164:	str	r1, [sp, #8]
    2168:	strd	r2, [sp]
    216c:	mov	r3, r0
    2170:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2174:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2178:	ldr	r0, [fp, #-48]	; 0xffffffd0
    217c:	bl	c54 <flatcc_json_parser_coerce_float>
    2180:	mov	r2, r0
    2184:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2188:	cmp	r2, r3
    218c:	bne	2198 <flatcc_json_parser_symbolic_float+0x198>
    2190:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2194:	b	21c0 <flatcc_json_parser_symbolic_float+0x1c0>
    2198:	ldr	r3, [fp, #4]
    219c:	vldr	s14, [r3]
    21a0:	vldr	s15, [fp, #-28]	; 0xffffffe4
    21a4:	vadd.f32	s15, s14, s15
    21a8:	ldr	r3, [fp, #4]
    21ac:	vstr	s15, [r3]
    21b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    21b4:	cmp	r3, #0
    21b8:	bne	2064 <flatcc_json_parser_symbolic_float+0x64>
    21bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    21c0:	mov	r0, r3
    21c4:	sub	sp, fp, #8
    21c8:	pop	{r4, fp, pc}

000021cc <flatcc_json_parser_symbolic_double>:
    21cc:	push	{r4, fp, lr}
    21d0:	add	fp, sp, #8
    21d4:	sub	sp, sp, #76	; 0x4c
    21d8:	str	r0, [fp, #-56]	; 0xffffffc8
    21dc:	str	r1, [fp, #-60]	; 0xffffffc4
    21e0:	str	r2, [fp, #-64]	; 0xffffffc0
    21e4:	str	r3, [fp, #-68]	; 0xffffffbc
    21e8:	mov	r2, #0
    21ec:	mov	r3, #0
    21f0:	strd	r2, [fp, #-36]	; 0xffffffdc
    21f4:	mov	r3, #0
    21f8:	str	r3, [fp, #-20]	; 0xffffffec
    21fc:	ldr	r1, [fp, #4]
    2200:	mov	r2, #0
    2204:	mov	r3, #0
    2208:	strd	r2, [r1]
    220c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2210:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2214:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2218:	bl	674 <flatcc_json_parser_constant_start>
    221c:	str	r0, [fp, #-60]	; 0xffffffc4
    2220:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2224:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2228:	cmp	r2, r3
    222c:	bne	2238 <flatcc_json_parser_symbolic_double+0x6c>
    2230:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2234:	b	2394 <flatcc_json_parser_symbolic_double+0x1c8>
    2238:	ldr	r3, [fp, #-68]	; 0xffffffbc
    223c:	str	r3, [fp, #-16]
    2240:	ldr	r3, [fp, #-16]
    2244:	ldr	r4, [r3]
    2248:	ldr	r3, [fp, #-60]	; 0xffffffc4
    224c:	str	r3, [fp, #-24]	; 0xffffffe8
    2250:	sub	r2, fp, #48	; 0x30
    2254:	sub	r3, fp, #52	; 0x34
    2258:	str	r3, [sp, #4]
    225c:	sub	r3, fp, #44	; 0x2c
    2260:	str	r3, [sp]
    2264:	mov	r3, r2
    2268:	ldr	r2, [fp, #-64]	; 0xffffffc0
    226c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2270:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2274:	blx	r4
    2278:	str	r0, [fp, #-60]	; 0xffffffc4
    227c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2280:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2284:	cmp	r2, r3
    2288:	bne	2294 <flatcc_json_parser_symbolic_double+0xc8>
    228c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2290:	b	2394 <flatcc_json_parser_symbolic_double+0x1c8>
    2294:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2298:	ldr	r3, [fp, #-24]	; 0xffffffe8
    229c:	cmp	r2, r3
    22a0:	bne	22c0 <flatcc_json_parser_symbolic_double+0xf4>
    22a4:	ldr	r3, [fp, #-16]
    22a8:	add	r3, r3, #4
    22ac:	str	r3, [fp, #-16]
    22b0:	ldr	r3, [fp, #-16]
    22b4:	ldr	r3, [r3]
    22b8:	cmp	r3, #0
    22bc:	bne	2240 <flatcc_json_parser_symbolic_double+0x74>
    22c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    22c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    22c8:	cmp	r2, r3
    22cc:	bne	22ec <flatcc_json_parser_symbolic_double+0x120>
    22d0:	mov	r3, #23
    22d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    22d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    22dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    22e0:	bl	0 <flatcc_json_parser_set_error>
    22e4:	mov	r3, r0
    22e8:	b	2394 <flatcc_json_parser_symbolic_double+0x1c8>
    22ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    22f0:	add	r2, r3, #1
    22f4:	str	r2, [fp, #-20]	; 0xffffffec
    22f8:	cmp	r3, #0
    22fc:	beq	232c <flatcc_json_parser_symbolic_double+0x160>
    2300:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2304:	ldr	r3, [r3, #12]
    2308:	cmp	r3, #0
    230c:	beq	232c <flatcc_json_parser_symbolic_double+0x160>
    2310:	mov	r3, #14
    2314:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2318:	ldr	r1, [fp, #-60]	; 0xffffffc4
    231c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2320:	bl	0 <flatcc_json_parser_set_error>
    2324:	mov	r3, r0
    2328:	b	2394 <flatcc_json_parser_symbolic_double+0x1c8>
    232c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2330:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2334:	sub	r1, fp, #36	; 0x24
    2338:	str	r1, [sp, #8]
    233c:	strd	r2, [sp]
    2340:	mov	r3, r0
    2344:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2348:	ldr	r1, [fp, #-60]	; 0xffffffc4
    234c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2350:	bl	cb4 <flatcc_json_parser_coerce_double>
    2354:	mov	r2, r0
    2358:	ldr	r3, [fp, #-64]	; 0xffffffc0
    235c:	cmp	r2, r3
    2360:	bne	236c <flatcc_json_parser_symbolic_double+0x1a0>
    2364:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2368:	b	2394 <flatcc_json_parser_symbolic_double+0x1c8>
    236c:	ldr	r3, [fp, #4]
    2370:	vldr	d6, [r3]
    2374:	vldr	d7, [fp, #-36]	; 0xffffffdc
    2378:	vadd.f64	d7, d6, d7
    237c:	ldr	r3, [fp, #4]
    2380:	vstr	d7, [r3]
    2384:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2388:	cmp	r3, #0
    238c:	bne	2238 <flatcc_json_parser_symbolic_double+0x6c>
    2390:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2394:	mov	r0, r3
    2398:	sub	sp, fp, #8
    239c:	pop	{r4, fp, pc}

000023a0 <test>:
    23a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    23a4:	add	fp, sp, #28
    23a8:	sub	sp, sp, #504	; 0x1f8
    23ac:	str	r0, [fp, #-120]	; 0xffffff88
    23b0:	str	r1, [fp, #-124]	; 0xffffff84
    23b4:	str	r2, [fp, #-128]	; 0xffffff80
    23b8:	str	r3, [fp, #-132]	; 0xffffff7c
    23bc:	mov	r3, #0
    23c0:	str	r3, [fp, #-36]	; 0xffffffdc
    23c4:	sub	r3, fp, #112	; 0x70
    23c8:	str	r3, [fp, #-40]	; 0xffffffd8
    23cc:	mov	r2, #44	; 0x2c
    23d0:	mov	r1, #0
    23d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    23d8:	bl	0 <memset>
    23dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    23e0:	mov	r3, #1
    23e4:	str	r3, [r2, #16]
    23e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    23ec:	ldr	r3, [fp, #-124]	; 0xffffff84
    23f0:	str	r3, [r2, #4]
    23f4:	mov	r3, #0
    23f8:	mov	r2, #0
    23fc:	ldr	r1, [pc, #3752]	; 32ac <test+0xf0c>
    2400:	ldr	r0, [fp, #-120]	; 0xffffff88
    2404:	bl	0 <flatcc_builder_start_buffer>
    2408:	ldr	r2, [fp, #-128]	; 0xffffff80
    240c:	ldr	r1, [fp, #-124]	; 0xffffff84
    2410:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2414:	bl	0 <flatcc_json_parser_space>
    2418:	str	r0, [fp, #-124]	; 0xffffff84
    241c:	ldr	r2, [fp, #-124]	; 0xffffff84
    2420:	ldr	r3, [fp, #-128]	; 0xffffff80
    2424:	cmp	r2, r3
    2428:	bne	2448 <test+0xa8>
    242c:	ldr	r3, [pc, #3728]	; 32c4 <test+0xf24>
    2430:	ldr	r3, [r3]
    2434:	mov	r2, #13
    2438:	mov	r1, #1
    243c:	ldr	r0, [pc, #3696]	; 32b4 <test+0xf14>
    2440:	bl	0 <fwrite>
    2444:	b	3a48 <test+0x16a8>
    2448:	ldr	r2, [fp, #-128]	; 0xffffff80
    244c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2450:	cmp	r2, r3
    2454:	bls	249c <test+0xfc>
    2458:	ldr	r3, [fp, #-124]	; 0xffffff84
    245c:	ldrb	r3, [r3]
    2460:	cmp	r3, #123	; 0x7b
    2464:	bne	249c <test+0xfc>
    2468:	ldr	r3, [fp, #-124]	; 0xffffff84
    246c:	add	r3, r3, #1
    2470:	str	r3, [fp, #-124]	; 0xffffff84
    2474:	ldr	r2, [fp, #-128]	; 0xffffff80
    2478:	ldr	r1, [fp, #-124]	; 0xffffff84
    247c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2480:	bl	0 <flatcc_json_parser_space>
    2484:	str	r0, [fp, #-124]	; 0xffffff84
    2488:	ldr	r2, [fp, #-124]	; 0xffffff84
    248c:	ldr	r3, [fp, #-128]	; 0xffffff80
    2490:	cmp	r2, r3
    2494:	beq	24d0 <test+0x130>
    2498:	b	24ec <test+0x14c>
    249c:	ldr	r3, [pc, #3616]	; 32c4 <test+0xf24>
    24a0:	ldr	r3, [r3]
    24a4:	mov	r2, #123	; 0x7b
    24a8:	ldr	r1, [pc, #3592]	; 32b8 <test+0xf18>
    24ac:	mov	r0, r3
    24b0:	bl	0 <fprintf>
    24b4:	mov	r3, #17
    24b8:	ldr	r2, [fp, #-128]	; 0xffffff80
    24bc:	ldr	r1, [fp, #-124]	; 0xffffff84
    24c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    24c4:	bl	0 <flatcc_json_parser_set_error>
    24c8:	str	r0, [fp, #-124]	; 0xffffff84
    24cc:	b	3a48 <test+0x16a8>
    24d0:	ldr	r3, [pc, #3564]	; 32c4 <test+0xf24>
    24d4:	ldr	r3, [r3]
    24d8:	mov	r2, #13
    24dc:	mov	r1, #1
    24e0:	ldr	r0, [pc, #3532]	; 32b4 <test+0xf14>
    24e4:	bl	0 <fwrite>
    24e8:	b	3a48 <test+0x16a8>
    24ec:	mov	r1, #11
    24f0:	ldr	r0, [fp, #-120]	; 0xffffff88
    24f4:	bl	0 <flatcc_builder_start_table>
    24f8:	ldr	r2, [fp, #-128]	; 0xffffff80
    24fc:	ldr	r1, [fp, #-124]	; 0xffffff84
    2500:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2504:	bl	174 <flatcc_json_parser_symbol_start>
    2508:	str	r0, [fp, #-124]	; 0xffffff84
    250c:	ldr	r1, [fp, #-128]	; 0xffffff80
    2510:	ldr	r0, [fp, #-124]	; 0xffffff84
    2514:	bl	458 <flatcc_json_parser_symbol_part>
    2518:	strd	r0, [fp, #-52]	; 0xffffffcc
    251c:	ldr	r2, [fp, #-128]	; 0xffffff80
    2520:	ldr	r3, [fp, #-124]	; 0xffffff84
    2524:	sub	r3, r2, r3
    2528:	cmp	r3, #8
    252c:	ble	253c <test+0x19c>
    2530:	ldr	r3, [fp, #-124]	; 0xffffff84
    2534:	add	r3, r3, #8
    2538:	b	2540 <test+0x1a0>
    253c:	ldr	r3, [fp, #-128]	; 0xffffff80
    2540:	str	r3, [fp, #-56]	; 0xffffffc8
    2544:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2548:	ldr	r2, [pc, #3424]	; 32b0 <test+0xf10>
    254c:	mvn	r3, #0
    2550:	and	r4, r0, r2
    2554:	and	r5, r1, r3
    2558:	mov	r3, #115	; 0x73
    255c:	uxtb	r2, r3
    2560:	mov	r3, #0
    2564:	lsl	r3, r2, #24
    2568:	str	r3, [fp, #-168]	; 0xffffff58
    256c:	mov	r3, #0
    2570:	str	r3, [fp, #-172]	; 0xffffff54
    2574:	mov	r3, #101	; 0x65
    2578:	uxtb	r2, r3
    257c:	mov	r3, #0
    2580:	lsl	r3, r2, #16
    2584:	str	r3, [fp, #-176]	; 0xffffff50
    2588:	mov	r3, #0
    258c:	str	r3, [fp, #-180]	; 0xffffff4c
    2590:	ldrd	r0, [fp, #-172]	; 0xffffff54
    2594:	ldrd	r2, [fp, #-180]	; 0xffffff4c
    2598:	orr	r0, r0, r2
    259c:	orr	r1, r1, r3
    25a0:	mov	r3, #99	; 0x63
    25a4:	uxtb	r2, r3
    25a8:	mov	r3, #0
    25ac:	lsl	r3, r2, #8
    25b0:	str	r3, [fp, #-184]	; 0xffffff48
    25b4:	mov	r3, #0
    25b8:	str	r3, [fp, #-188]	; 0xffffff44
    25bc:	ldrd	r2, [fp, #-188]	; 0xffffff44
    25c0:	orr	r2, r2, r0
    25c4:	orr	r3, r3, r1
    25c8:	mov	r0, r2
    25cc:	mov	r1, r3
    25d0:	mov	r3, #111	; 0x6f
    25d4:	uxtb	r2, r3
    25d8:	mov	r3, #0
    25dc:	mov	r3, r2
    25e0:	str	r3, [fp, #-192]	; 0xffffff40
    25e4:	mov	r3, #0
    25e8:	str	r3, [fp, #-196]	; 0xffffff3c
    25ec:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    25f0:	orr	r2, r2, r0
    25f4:	orr	r3, r3, r1
    25f8:	mov	r0, r2
    25fc:	mov	r1, r3
    2600:	mov	r3, #110	; 0x6e
    2604:	uxtb	r2, r3
    2608:	mov	r3, #0
    260c:	lsr	ip, r2, #8
    2610:	str	ip, [fp, #-200]	; 0xffffff38
    2614:	lsl	r3, r2, #24
    2618:	str	r3, [fp, #-204]	; 0xffffff34
    261c:	ldrd	r2, [fp, #-204]	; 0xffffff34
    2620:	orr	r2, r2, r0
    2624:	orr	r3, r3, r1
    2628:	mov	r0, r2
    262c:	mov	r1, r3
    2630:	mov	r3, #100	; 0x64
    2634:	uxtb	r2, r3
    2638:	mov	r3, #0
    263c:	lsl	r7, r3, #16
    2640:	orr	r7, r7, r2, lsr #16
    2644:	lsl	r6, r2, #16
    2648:	orr	r2, r0, r6
    264c:	orr	r3, r1, r7
    2650:	cmp	r5, r3
    2654:	cmpeq	r4, r2
    2658:	bcs	28d4 <test+0x534>
    265c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2660:	mov	r2, #-16777216	; 0xff000000
    2664:	mvn	r3, #0
    2668:	and	r4, r0, r2
    266c:	and	r5, r1, r3
    2670:	mov	r3, #102	; 0x66
    2674:	uxtb	r2, r3
    2678:	mov	r3, #0
    267c:	lsl	r3, r2, #24
    2680:	str	r3, [fp, #-488]	; 0xfffffe18
    2684:	mov	r3, #0
    2688:	str	r3, [fp, #-492]	; 0xfffffe14
    268c:	mov	r3, #105	; 0x69
    2690:	uxtb	r2, r3
    2694:	mov	r3, #0
    2698:	lsl	r3, r2, #16
    269c:	str	r3, [fp, #-496]	; 0xfffffe10
    26a0:	mov	r3, #0
    26a4:	str	r3, [fp, #-500]	; 0xfffffe0c
    26a8:	sub	r3, fp, #492	; 0x1ec
    26ac:	ldrd	r0, [r3]
    26b0:	sub	r3, fp, #500	; 0x1f4
    26b4:	ldrd	r2, [r3]
    26b8:	orr	r0, r0, r2
    26bc:	orr	r1, r1, r3
    26c0:	mov	r3, #114	; 0x72
    26c4:	uxtb	r2, r3
    26c8:	mov	r3, #0
    26cc:	lsl	r3, r2, #8
    26d0:	str	r3, [fp, #-504]	; 0xfffffe08
    26d4:	mov	r3, #0
    26d8:	str	r3, [fp, #-508]	; 0xfffffe04
    26dc:	sub	r3, fp, #508	; 0x1fc
    26e0:	ldrd	r2, [r3]
    26e4:	orr	r2, r2, r0
    26e8:	orr	r3, r3, r1
    26ec:	mov	r0, r2
    26f0:	mov	r1, r3
    26f4:	mov	r3, #115	; 0x73
    26f8:	uxtb	r2, r3
    26fc:	mov	r3, #0
    2700:	mov	r3, r2
    2704:	str	r3, [fp, #-512]	; 0xfffffe00
    2708:	mov	r3, #0
    270c:	str	r3, [fp, #-516]	; 0xfffffdfc
    2710:	sub	r3, fp, #516	; 0x204
    2714:	ldrd	r2, [r3]
    2718:	orr	r2, r2, r0
    271c:	orr	r3, r3, r1
    2720:	mov	r0, r2
    2724:	mov	r1, r3
    2728:	mov	r3, #116	; 0x74
    272c:	uxtb	r2, r3
    2730:	mov	r3, #0
    2734:	lsr	ip, r2, #8
    2738:	str	ip, [fp, #-520]	; 0xfffffdf8
    273c:	lsl	r3, r2, #24
    2740:	str	r3, [fp, #-524]	; 0xfffffdf4
    2744:	sub	r3, fp, #524	; 0x20c
    2748:	ldrd	r2, [r3]
    274c:	orr	r2, r2, r0
    2750:	orr	r3, r3, r1
    2754:	cmp	r5, r3
    2758:	cmpeq	r4, r2
    275c:	beq	277c <test+0x3dc>
    2760:	mov	r3, #13
    2764:	ldr	r2, [fp, #-128]	; 0xffffff80
    2768:	ldr	r1, [fp, #-124]	; 0xffffff84
    276c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2770:	bl	0 <flatcc_json_parser_set_error>
    2774:	str	r0, [fp, #-124]	; 0xffffff84
    2778:	b	3a48 <test+0x16a8>
    277c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2780:	add	r3, r3, #5
    2784:	ldr	r2, [fp, #-128]	; 0xffffff80
    2788:	mov	r1, r3
    278c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2790:	bl	4a0 <flatcc_json_parser_symbol_end>
    2794:	str	r0, [fp, #-124]	; 0xffffff84
    2798:	ldr	r2, [fp, #-128]	; 0xffffff80
    279c:	ldr	r1, [fp, #-124]	; 0xffffff84
    27a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    27a4:	bl	0 <flatcc_json_parser_space>
    27a8:	str	r0, [fp, #-124]	; 0xffffff84
    27ac:	ldr	r2, [fp, #-124]	; 0xffffff84
    27b0:	ldr	r3, [fp, #-128]	; 0xffffff80
    27b4:	cmp	r2, r3
    27b8:	bne	27d8 <test+0x438>
    27bc:	ldr	r3, [pc, #2816]	; 32c4 <test+0xf24>
    27c0:	ldr	r3, [r3]
    27c4:	mov	r2, #13
    27c8:	mov	r1, #1
    27cc:	ldr	r0, [pc, #2784]	; 32b4 <test+0xf14>
    27d0:	bl	0 <fwrite>
    27d4:	b	3a48 <test+0x16a8>
    27d8:	ldr	r2, [fp, #-128]	; 0xffffff80
    27dc:	ldr	r3, [fp, #-124]	; 0xffffff84
    27e0:	cmp	r2, r3
    27e4:	bls	282c <test+0x48c>
    27e8:	ldr	r3, [fp, #-124]	; 0xffffff84
    27ec:	ldrb	r3, [r3]
    27f0:	cmp	r3, #58	; 0x3a
    27f4:	bne	282c <test+0x48c>
    27f8:	ldr	r3, [fp, #-124]	; 0xffffff84
    27fc:	add	r3, r3, #1
    2800:	str	r3, [fp, #-124]	; 0xffffff84
    2804:	ldr	r2, [fp, #-128]	; 0xffffff80
    2808:	ldr	r1, [fp, #-124]	; 0xffffff84
    280c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2810:	bl	0 <flatcc_json_parser_space>
    2814:	str	r0, [fp, #-124]	; 0xffffff84
    2818:	ldr	r2, [fp, #-124]	; 0xffffff84
    281c:	ldr	r3, [fp, #-128]	; 0xffffff80
    2820:	cmp	r2, r3
    2824:	beq	2860 <test+0x4c0>
    2828:	b	287c <test+0x4dc>
    282c:	ldr	r3, [pc, #2704]	; 32c4 <test+0xf24>
    2830:	ldr	r3, [r3]
    2834:	mov	r2, #58	; 0x3a
    2838:	ldr	r1, [pc, #2680]	; 32b8 <test+0xf18>
    283c:	mov	r0, r3
    2840:	bl	0 <fprintf>
    2844:	mov	r3, #17
    2848:	ldr	r2, [fp, #-128]	; 0xffffff80
    284c:	ldr	r1, [fp, #-124]	; 0xffffff84
    2850:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2854:	bl	0 <flatcc_json_parser_set_error>
    2858:	str	r0, [fp, #-124]	; 0xffffff84
    285c:	b	3a48 <test+0x16a8>
    2860:	ldr	r3, [pc, #2652]	; 32c4 <test+0xf24>
    2864:	ldr	r3, [r3]
    2868:	mov	r2, #13
    286c:	mov	r1, #1
    2870:	ldr	r0, [pc, #2620]	; 32b4 <test+0xf14>
    2874:	bl	0 <fwrite>
    2878:	b	3a48 <test+0x16a8>
    287c:	mov	r3, #1
    2880:	mov	r2, #1
    2884:	mov	r1, #0
    2888:	ldr	r0, [fp, #-120]	; 0xffffff88
    288c:	bl	0 <flatcc_builder_table_add>
    2890:	str	r0, [fp, #-60]	; 0xffffffc4
    2894:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2898:	cmp	r3, #0
    289c:	beq	3a04 <test+0x1664>
    28a0:	ldr	r3, [fp, #-124]	; 0xffffff84
    28a4:	str	r3, [fp, #-56]	; 0xffffffc8
    28a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    28ac:	ldr	r2, [fp, #-128]	; 0xffffff80
    28b0:	ldr	r1, [fp, #-124]	; 0xffffff84
    28b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    28b8:	bl	dec <flatcc_json_parser_uint8>
    28bc:	str	r0, [fp, #-124]	; 0xffffff84
    28c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28c4:	ldr	r3, [fp, #-124]	; 0xffffff84
    28c8:	cmp	r2, r3
    28cc:	bne	3898 <test+0x14f8>
    28d0:	b	3a48 <test+0x16a8>
    28d4:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    28d8:	mov	r2, #0
    28dc:	mvn	r3, #0
    28e0:	and	r4, r0, r2
    28e4:	and	r5, r1, r3
    28e8:	mov	r3, #122	; 0x7a
    28ec:	uxtb	r2, r3
    28f0:	mov	r3, #0
    28f4:	lsl	r3, r2, #24
    28f8:	str	r3, [fp, #-208]	; 0xffffff30
    28fc:	mov	r3, #0
    2900:	str	r3, [fp, #-212]	; 0xffffff2c
    2904:	mov	r3, #117	; 0x75
    2908:	uxtb	r2, r3
    290c:	mov	r3, #0
    2910:	lsl	r3, r2, #16
    2914:	str	r3, [fp, #-216]	; 0xffffff28
    2918:	mov	r3, #0
    291c:	str	r3, [fp, #-220]	; 0xffffff24
    2920:	ldrd	r0, [fp, #-212]	; 0xffffff2c
    2924:	ldrd	r2, [fp, #-220]	; 0xffffff24
    2928:	orr	r0, r0, r2
    292c:	orr	r1, r1, r3
    2930:	mov	r3, #108	; 0x6c
    2934:	uxtb	r2, r3
    2938:	mov	r3, #0
    293c:	lsl	r3, r2, #8
    2940:	str	r3, [fp, #-224]	; 0xffffff20
    2944:	mov	r3, #0
    2948:	str	r3, [fp, #-228]	; 0xffffff1c
    294c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
    2950:	orr	r2, r2, r0
    2954:	orr	r3, r3, r1
    2958:	mov	r0, r2
    295c:	mov	r1, r3
    2960:	mov	r3, #117	; 0x75
    2964:	uxtb	r2, r3
    2968:	mov	r3, #0
    296c:	mov	r3, r2
    2970:	str	r3, [fp, #-232]	; 0xffffff18
    2974:	mov	r3, #0
    2978:	str	r3, [fp, #-236]	; 0xffffff14
    297c:	ldrd	r2, [fp, #-236]	; 0xffffff14
    2980:	orr	r2, r2, r0
    2984:	orr	r3, r3, r1
    2988:	cmp	r5, r3
    298c:	cmpeq	r4, r2
    2990:	bcs	3510 <test+0x1170>
    2994:	mov	r3, #115	; 0x73
    2998:	uxtb	r2, r3
    299c:	mov	r3, #0
    29a0:	lsl	r3, r2, #24
    29a4:	str	r3, [fp, #-240]	; 0xffffff10
    29a8:	mov	r3, #0
    29ac:	str	r3, [fp, #-244]	; 0xffffff0c
    29b0:	mov	r3, #101	; 0x65
    29b4:	uxtb	r2, r3
    29b8:	mov	r3, #0
    29bc:	lsl	r3, r2, #16
    29c0:	str	r3, [fp, #-248]	; 0xffffff08
    29c4:	mov	r3, #0
    29c8:	str	r3, [fp, #-252]	; 0xffffff04
    29cc:	ldrd	r0, [fp, #-244]	; 0xffffff0c
    29d0:	ldrd	r2, [fp, #-252]	; 0xffffff04
    29d4:	orr	r0, r0, r2
    29d8:	orr	r1, r1, r3
    29dc:	mov	r3, #99	; 0x63
    29e0:	uxtb	r2, r3
    29e4:	mov	r3, #0
    29e8:	lsl	r3, r2, #8
    29ec:	str	r3, [fp, #-256]	; 0xffffff00
    29f0:	mov	r3, #0
    29f4:	str	r3, [fp, #-260]	; 0xfffffefc
    29f8:	sub	r3, fp, #260	; 0x104
    29fc:	ldrd	r2, [r3]
    2a00:	orr	r2, r2, r0
    2a04:	orr	r3, r3, r1
    2a08:	mov	r0, r2
    2a0c:	mov	r1, r3
    2a10:	mov	r3, #111	; 0x6f
    2a14:	uxtb	r2, r3
    2a18:	mov	r3, #0
    2a1c:	mov	r3, r2
    2a20:	str	r3, [fp, #-264]	; 0xfffffef8
    2a24:	mov	r3, #0
    2a28:	str	r3, [fp, #-268]	; 0xfffffef4
    2a2c:	sub	r3, fp, #268	; 0x10c
    2a30:	ldrd	r2, [r3]
    2a34:	orr	r2, r2, r0
    2a38:	orr	r3, r3, r1
    2a3c:	mov	r0, r2
    2a40:	mov	r1, r3
    2a44:	mov	r3, #110	; 0x6e
    2a48:	uxtb	r2, r3
    2a4c:	mov	r3, #0
    2a50:	lsr	ip, r2, #8
    2a54:	str	ip, [fp, #-272]	; 0xfffffef0
    2a58:	lsl	r3, r2, #24
    2a5c:	str	r3, [fp, #-276]	; 0xfffffeec
    2a60:	sub	r3, fp, #276	; 0x114
    2a64:	ldrd	r2, [r3]
    2a68:	orr	r2, r2, r0
    2a6c:	orr	r3, r3, r1
    2a70:	mov	r0, r2
    2a74:	mov	r1, r3
    2a78:	mov	r3, #100	; 0x64
    2a7c:	uxtb	r2, r3
    2a80:	mov	r3, #0
    2a84:	lsl	ip, r3, #16
    2a88:	str	ip, [fp, #-136]	; 0xffffff78
    2a8c:	ldr	ip, [fp, #-136]	; 0xffffff78
    2a90:	orr	ip, ip, r2, lsr #16
    2a94:	str	ip, [fp, #-136]	; 0xffffff78
    2a98:	lsl	r3, r2, #16
    2a9c:	str	r3, [fp, #-140]	; 0xffffff74
    2aa0:	ldrd	r2, [fp, #-140]	; 0xffffff74
    2aa4:	orr	r2, r2, r0
    2aa8:	orr	r3, r3, r1
    2aac:	mov	r0, r2
    2ab0:	mov	r1, r3
    2ab4:	mov	r3, #115	; 0x73
    2ab8:	uxtb	r2, r3
    2abc:	mov	r3, #0
    2ac0:	lsl	ip, r3, #8
    2ac4:	str	ip, [fp, #-144]	; 0xffffff70
    2ac8:	ldr	ip, [fp, #-144]	; 0xffffff70
    2acc:	orr	ip, ip, r2, lsr #24
    2ad0:	str	ip, [fp, #-144]	; 0xffffff70
    2ad4:	lsl	r3, r2, #8
    2ad8:	str	r3, [fp, #-148]	; 0xffffff6c
    2adc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    2ae0:	orr	r2, r2, r0
    2ae4:	orr	r3, r3, r1
    2ae8:	mov	r0, r2
    2aec:	mov	r1, r3
    2af0:	mov	r3, #32
    2af4:	uxtb	r2, r3
    2af8:	mov	r3, #0
    2afc:	orr	r0, r0, r2
    2b00:	orr	r1, r1, r3
    2b04:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2b08:	cmp	r1, r3
    2b0c:	cmpeq	r0, r2
    2b10:	bls	2db4 <test+0xa14>
    2b14:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2b18:	ldr	r2, [pc, #1936]	; 32b0 <test+0xf10>
    2b1c:	mvn	r3, #0
    2b20:	and	r4, r0, r2
    2b24:	and	r5, r1, r3
    2b28:	mov	r3, #115	; 0x73
    2b2c:	uxtb	r2, r3
    2b30:	mov	r3, #0
    2b34:	lsl	r3, r2, #24
    2b38:	str	r3, [fp, #-416]	; 0xfffffe60
    2b3c:	mov	r3, #0
    2b40:	str	r3, [fp, #-420]	; 0xfffffe5c
    2b44:	mov	r3, #101	; 0x65
    2b48:	uxtb	r2, r3
    2b4c:	mov	r3, #0
    2b50:	lsl	r3, r2, #16
    2b54:	str	r3, [fp, #-424]	; 0xfffffe58
    2b58:	mov	r3, #0
    2b5c:	str	r3, [fp, #-428]	; 0xfffffe54
    2b60:	sub	r3, fp, #420	; 0x1a4
    2b64:	ldrd	r0, [r3]
    2b68:	sub	r3, fp, #428	; 0x1ac
    2b6c:	ldrd	r2, [r3]
    2b70:	orr	r0, r0, r2
    2b74:	orr	r1, r1, r3
    2b78:	mov	r3, #99	; 0x63
    2b7c:	uxtb	r2, r3
    2b80:	mov	r3, #0
    2b84:	lsl	r3, r2, #8
    2b88:	str	r3, [fp, #-432]	; 0xfffffe50
    2b8c:	mov	r3, #0
    2b90:	str	r3, [fp, #-436]	; 0xfffffe4c
    2b94:	sub	r3, fp, #436	; 0x1b4
    2b98:	ldrd	r2, [r3]
    2b9c:	orr	r2, r2, r0
    2ba0:	orr	r3, r3, r1
    2ba4:	mov	r0, r2
    2ba8:	mov	r1, r3
    2bac:	mov	r3, #111	; 0x6f
    2bb0:	uxtb	r2, r3
    2bb4:	mov	r3, #0
    2bb8:	mov	r3, r2
    2bbc:	str	r3, [fp, #-440]	; 0xfffffe48
    2bc0:	mov	r3, #0
    2bc4:	str	r3, [fp, #-444]	; 0xfffffe44
    2bc8:	sub	r3, fp, #444	; 0x1bc
    2bcc:	ldrd	r2, [r3]
    2bd0:	orr	r2, r2, r0
    2bd4:	orr	r3, r3, r1
    2bd8:	mov	r0, r2
    2bdc:	mov	r1, r3
    2be0:	mov	r3, #110	; 0x6e
    2be4:	uxtb	r2, r3
    2be8:	mov	r3, #0
    2bec:	lsr	ip, r2, #8
    2bf0:	str	ip, [fp, #-448]	; 0xfffffe40
    2bf4:	lsl	r3, r2, #24
    2bf8:	str	r3, [fp, #-452]	; 0xfffffe3c
    2bfc:	sub	r3, fp, #452	; 0x1c4
    2c00:	ldrd	r2, [r3]
    2c04:	orr	r2, r2, r0
    2c08:	orr	r3, r3, r1
    2c0c:	mov	r0, r2
    2c10:	mov	r1, r3
    2c14:	mov	r3, #100	; 0x64
    2c18:	uxtb	r2, r3
    2c1c:	mov	r3, #0
    2c20:	lsl	r9, r3, #16
    2c24:	orr	r9, r9, r2, lsr #16
    2c28:	lsl	r8, r2, #16
    2c2c:	orr	r2, r0, r8
    2c30:	orr	r3, r1, r9
    2c34:	cmp	r5, r3
    2c38:	cmpeq	r4, r2
    2c3c:	beq	2c5c <test+0x8bc>
    2c40:	mov	r3, #13
    2c44:	ldr	r2, [fp, #-128]	; 0xffffff80
    2c48:	ldr	r1, [fp, #-124]	; 0xffffff84
    2c4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c50:	bl	0 <flatcc_json_parser_set_error>
    2c54:	str	r0, [fp, #-124]	; 0xffffff84
    2c58:	b	3a48 <test+0x16a8>
    2c5c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2c60:	add	r3, r3, #6
    2c64:	ldr	r2, [fp, #-128]	; 0xffffff80
    2c68:	mov	r1, r3
    2c6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c70:	bl	4a0 <flatcc_json_parser_symbol_end>
    2c74:	str	r0, [fp, #-124]	; 0xffffff84
    2c78:	ldr	r2, [fp, #-128]	; 0xffffff80
    2c7c:	ldr	r1, [fp, #-124]	; 0xffffff84
    2c80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c84:	bl	0 <flatcc_json_parser_space>
    2c88:	str	r0, [fp, #-124]	; 0xffffff84
    2c8c:	ldr	r2, [fp, #-124]	; 0xffffff84
    2c90:	ldr	r3, [fp, #-128]	; 0xffffff80
    2c94:	cmp	r2, r3
    2c98:	bne	2cb8 <test+0x918>
    2c9c:	ldr	r3, [pc, #1568]	; 32c4 <test+0xf24>
    2ca0:	ldr	r3, [r3]
    2ca4:	mov	r2, #13
    2ca8:	mov	r1, #1
    2cac:	ldr	r0, [pc, #1536]	; 32b4 <test+0xf14>
    2cb0:	bl	0 <fwrite>
    2cb4:	b	3a48 <test+0x16a8>
    2cb8:	ldr	r2, [fp, #-128]	; 0xffffff80
    2cbc:	ldr	r3, [fp, #-124]	; 0xffffff84
    2cc0:	cmp	r2, r3
    2cc4:	bls	2d0c <test+0x96c>
    2cc8:	ldr	r3, [fp, #-124]	; 0xffffff84
    2ccc:	ldrb	r3, [r3]
    2cd0:	cmp	r3, #58	; 0x3a
    2cd4:	bne	2d0c <test+0x96c>
    2cd8:	ldr	r3, [fp, #-124]	; 0xffffff84
    2cdc:	add	r3, r3, #1
    2ce0:	str	r3, [fp, #-124]	; 0xffffff84
    2ce4:	ldr	r2, [fp, #-128]	; 0xffffff80
    2ce8:	ldr	r1, [fp, #-124]	; 0xffffff84
    2cec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2cf0:	bl	0 <flatcc_json_parser_space>
    2cf4:	str	r0, [fp, #-124]	; 0xffffff84
    2cf8:	ldr	r2, [fp, #-124]	; 0xffffff84
    2cfc:	ldr	r3, [fp, #-128]	; 0xffffff80
    2d00:	cmp	r2, r3
    2d04:	beq	2d40 <test+0x9a0>
    2d08:	b	2d5c <test+0x9bc>
    2d0c:	ldr	r3, [pc, #1456]	; 32c4 <test+0xf24>
    2d10:	ldr	r3, [r3]
    2d14:	mov	r2, #58	; 0x3a
    2d18:	ldr	r1, [pc, #1432]	; 32b8 <test+0xf18>
    2d1c:	mov	r0, r3
    2d20:	bl	0 <fprintf>
    2d24:	mov	r3, #17
    2d28:	ldr	r2, [fp, #-128]	; 0xffffff80
    2d2c:	ldr	r1, [fp, #-124]	; 0xffffff84
    2d30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2d34:	bl	0 <flatcc_json_parser_set_error>
    2d38:	str	r0, [fp, #-124]	; 0xffffff84
    2d3c:	b	3a48 <test+0x16a8>
    2d40:	ldr	r3, [pc, #1404]	; 32c4 <test+0xf24>
    2d44:	ldr	r3, [r3]
    2d48:	mov	r2, #13
    2d4c:	mov	r1, #1
    2d50:	ldr	r0, [pc, #1372]	; 32b4 <test+0xf14>
    2d54:	bl	0 <fwrite>
    2d58:	b	3a48 <test+0x16a8>
    2d5c:	mov	r3, #8
    2d60:	mov	r2, #8
    2d64:	mov	r1, #1
    2d68:	ldr	r0, [fp, #-120]	; 0xffffff88
    2d6c:	bl	0 <flatcc_builder_table_add>
    2d70:	str	r0, [fp, #-60]	; 0xffffffc4
    2d74:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2d78:	cmp	r3, #0
    2d7c:	beq	3a0c <test+0x166c>
    2d80:	ldr	r3, [fp, #-124]	; 0xffffff84
    2d84:	str	r3, [fp, #-56]	; 0xffffffc8
    2d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2d8c:	ldr	r2, [fp, #-128]	; 0xffffff80
    2d90:	ldr	r1, [fp, #-124]	; 0xffffff84
    2d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2d98:	bl	0 <flatcc_json_parser_double>
    2d9c:	str	r0, [fp, #-124]	; 0xffffff84
    2da0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2da4:	ldr	r3, [fp, #-124]	; 0xffffff84
    2da8:	cmp	r2, r3
    2dac:	bne	3898 <test+0x14f8>
    2db0:	b	3a48 <test+0x16a8>
    2db4:	mov	r3, #115	; 0x73
    2db8:	uxtb	r2, r3
    2dbc:	mov	r3, #0
    2dc0:	lsl	r3, r2, #24
    2dc4:	str	r3, [fp, #-280]	; 0xfffffee8
    2dc8:	mov	r3, #0
    2dcc:	str	r3, [fp, #-284]	; 0xfffffee4
    2dd0:	mov	r3, #101	; 0x65
    2dd4:	uxtb	r2, r3
    2dd8:	mov	r3, #0
    2ddc:	lsl	r3, r2, #16
    2de0:	str	r3, [fp, #-288]	; 0xfffffee0
    2de4:	mov	r3, #0
    2de8:	str	r3, [fp, #-292]	; 0xfffffedc
    2dec:	sub	r3, fp, #284	; 0x11c
    2df0:	ldrd	r0, [r3]
    2df4:	sub	r3, fp, #292	; 0x124
    2df8:	ldrd	r2, [r3]
    2dfc:	orr	r0, r0, r2
    2e00:	orr	r1, r1, r3
    2e04:	mov	r3, #99	; 0x63
    2e08:	uxtb	r2, r3
    2e0c:	mov	r3, #0
    2e10:	lsl	r3, r2, #8
    2e14:	str	r3, [fp, #-296]	; 0xfffffed8
    2e18:	mov	r3, #0
    2e1c:	str	r3, [fp, #-300]	; 0xfffffed4
    2e20:	sub	r3, fp, #300	; 0x12c
    2e24:	ldrd	r2, [r3]
    2e28:	orr	r2, r2, r0
    2e2c:	orr	r3, r3, r1
    2e30:	mov	r0, r2
    2e34:	mov	r1, r3
    2e38:	mov	r3, #111	; 0x6f
    2e3c:	uxtb	r2, r3
    2e40:	mov	r3, #0
    2e44:	mov	r3, r2
    2e48:	str	r3, [fp, #-304]	; 0xfffffed0
    2e4c:	mov	r3, #0
    2e50:	str	r3, [fp, #-308]	; 0xfffffecc
    2e54:	sub	r3, fp, #308	; 0x134
    2e58:	ldrd	r2, [r3]
    2e5c:	orr	r2, r2, r0
    2e60:	orr	r3, r3, r1
    2e64:	mov	r0, r2
    2e68:	mov	r1, r3
    2e6c:	mov	r3, #110	; 0x6e
    2e70:	uxtb	r2, r3
    2e74:	mov	r3, #0
    2e78:	lsr	ip, r2, #8
    2e7c:	str	ip, [fp, #-312]	; 0xfffffec8
    2e80:	lsl	r3, r2, #24
    2e84:	str	r3, [fp, #-316]	; 0xfffffec4
    2e88:	sub	r3, fp, #316	; 0x13c
    2e8c:	ldrd	r2, [r3]
    2e90:	orr	r2, r2, r0
    2e94:	orr	r3, r3, r1
    2e98:	mov	r0, r2
    2e9c:	mov	r1, r3
    2ea0:	mov	r3, #100	; 0x64
    2ea4:	uxtb	r2, r3
    2ea8:	mov	r3, #0
    2eac:	lsl	ip, r3, #16
    2eb0:	str	ip, [fp, #-152]	; 0xffffff68
    2eb4:	ldr	ip, [fp, #-152]	; 0xffffff68
    2eb8:	orr	ip, ip, r2, lsr #16
    2ebc:	str	ip, [fp, #-152]	; 0xffffff68
    2ec0:	lsl	r3, r2, #16
    2ec4:	str	r3, [fp, #-156]	; 0xffffff64
    2ec8:	ldrd	r2, [fp, #-156]	; 0xffffff64
    2ecc:	orr	r2, r2, r0
    2ed0:	orr	r3, r3, r1
    2ed4:	mov	r0, r2
    2ed8:	mov	r1, r3
    2edc:	mov	r3, #115	; 0x73
    2ee0:	uxtb	r2, r3
    2ee4:	mov	r3, #0
    2ee8:	lsl	ip, r3, #8
    2eec:	str	ip, [fp, #-160]	; 0xffffff60
    2ef0:	ldr	ip, [fp, #-160]	; 0xffffff60
    2ef4:	orr	ip, ip, r2, lsr #24
    2ef8:	str	ip, [fp, #-160]	; 0xffffff60
    2efc:	lsl	r3, r2, #8
    2f00:	str	r3, [fp, #-164]	; 0xffffff5c
    2f04:	ldrd	r2, [fp, #-164]	; 0xffffff5c
    2f08:	orr	r2, r2, r0
    2f0c:	orr	r3, r3, r1
    2f10:	mov	r0, r2
    2f14:	mov	r1, r3
    2f18:	mov	r3, #32
    2f1c:	uxtb	r2, r3
    2f20:	mov	r3, #0
    2f24:	orr	r0, r0, r2
    2f28:	orr	r1, r1, r3
    2f2c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2f30:	cmp	r1, r3
    2f34:	cmpeq	r0, r2
    2f38:	beq	2f58 <test+0xbb8>
    2f3c:	mov	r3, #13
    2f40:	ldr	r2, [fp, #-128]	; 0xffffff80
    2f44:	ldr	r1, [fp, #-124]	; 0xffffff84
    2f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f4c:	bl	0 <flatcc_json_parser_set_error>
    2f50:	str	r0, [fp, #-124]	; 0xffffff84
    2f54:	b	3a48 <test+0x16a8>
    2f58:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2f5c:	str	r3, [fp, #-124]	; 0xffffff84
    2f60:	ldr	r1, [fp, #-128]	; 0xffffff80
    2f64:	ldr	r0, [fp, #-124]	; 0xffffff84
    2f68:	bl	458 <flatcc_json_parser_symbol_part>
    2f6c:	strd	r0, [fp, #-52]	; 0xffffffcc
    2f70:	ldr	r2, [fp, #-128]	; 0xffffff80
    2f74:	ldr	r3, [fp, #-124]	; 0xffffff84
    2f78:	sub	r3, r2, r3
    2f7c:	cmp	r3, #8
    2f80:	ble	2f90 <test+0xbf0>
    2f84:	ldr	r3, [fp, #-124]	; 0xffffff84
    2f88:	add	r3, r3, #8
    2f8c:	b	2f94 <test+0xbf4>
    2f90:	ldr	r3, [fp, #-128]	; 0xffffff80
    2f94:	str	r3, [fp, #-56]	; 0xffffffc8
    2f98:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2f9c:	mov	r2, #0
    2fa0:	mvn	r3, #0
    2fa4:	and	r4, r0, r2
    2fa8:	and	r5, r1, r3
    2fac:	mov	r3, #108	; 0x6c
    2fb0:	uxtb	r2, r3
    2fb4:	mov	r3, #0
    2fb8:	lsl	r3, r2, #24
    2fbc:	str	r3, [fp, #-320]	; 0xfffffec0
    2fc0:	mov	r3, #0
    2fc4:	str	r3, [fp, #-324]	; 0xfffffebc
    2fc8:	mov	r3, #101	; 0x65
    2fcc:	uxtb	r2, r3
    2fd0:	mov	r3, #0
    2fd4:	lsl	r3, r2, #16
    2fd8:	str	r3, [fp, #-328]	; 0xfffffeb8
    2fdc:	mov	r3, #0
    2fe0:	str	r3, [fp, #-332]	; 0xfffffeb4
    2fe4:	sub	r3, fp, #324	; 0x144
    2fe8:	ldrd	r0, [r3]
    2fec:	sub	r3, fp, #332	; 0x14c
    2ff0:	ldrd	r2, [r3]
    2ff4:	orr	r0, r0, r2
    2ff8:	orr	r1, r1, r3
    2ffc:	mov	r3, #102	; 0x66
    3000:	uxtb	r2, r3
    3004:	mov	r3, #0
    3008:	lsl	r3, r2, #8
    300c:	str	r3, [fp, #-336]	; 0xfffffeb0
    3010:	mov	r3, #0
    3014:	str	r3, [fp, #-340]	; 0xfffffeac
    3018:	sub	r3, fp, #340	; 0x154
    301c:	ldrd	r2, [r3]
    3020:	orr	r2, r2, r0
    3024:	orr	r3, r3, r1
    3028:	mov	r0, r2
    302c:	mov	r1, r3
    3030:	mov	r3, #116	; 0x74
    3034:	uxtb	r2, r3
    3038:	mov	r3, #0
    303c:	mov	r3, r2
    3040:	str	r3, [fp, #-344]	; 0xfffffea8
    3044:	mov	r3, #0
    3048:	str	r3, [fp, #-348]	; 0xfffffea4
    304c:	sub	r3, fp, #348	; 0x15c
    3050:	ldrd	r2, [r3]
    3054:	orr	r2, r2, r0
    3058:	orr	r3, r3, r1
    305c:	cmp	r5, r3
    3060:	cmpeq	r4, r2
    3064:	bcs	32cc <test+0xf2c>
    3068:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    306c:	mov	r2, #0
    3070:	mvn	r3, #0
    3074:	and	r4, r0, r2
    3078:	and	r5, r1, r3
    307c:	mov	r3, #108	; 0x6c
    3080:	uxtb	r2, r3
    3084:	mov	r3, #0
    3088:	lsl	r3, r2, #24
    308c:	str	r3, [fp, #-352]	; 0xfffffea0
    3090:	mov	r3, #0
    3094:	str	r3, [fp, #-356]	; 0xfffffe9c
    3098:	mov	r3, #101	; 0x65
    309c:	uxtb	r2, r3
    30a0:	mov	r3, #0
    30a4:	lsl	r3, r2, #16
    30a8:	str	r3, [fp, #-360]	; 0xfffffe98
    30ac:	mov	r3, #0
    30b0:	str	r3, [fp, #-364]	; 0xfffffe94
    30b4:	sub	r3, fp, #356	; 0x164
    30b8:	ldrd	r0, [r3]
    30bc:	sub	r3, fp, #364	; 0x16c
    30c0:	ldrd	r2, [r3]
    30c4:	orr	r0, r0, r2
    30c8:	orr	r1, r1, r3
    30cc:	mov	r3, #97	; 0x61
    30d0:	uxtb	r2, r3
    30d4:	mov	r3, #0
    30d8:	lsl	r3, r2, #8
    30dc:	str	r3, [fp, #-368]	; 0xfffffe90
    30e0:	mov	r3, #0
    30e4:	str	r3, [fp, #-372]	; 0xfffffe8c
    30e8:	sub	r3, fp, #372	; 0x174
    30ec:	ldrd	r2, [r3]
    30f0:	orr	r2, r2, r0
    30f4:	orr	r3, r3, r1
    30f8:	mov	r0, r2
    30fc:	mov	r1, r3
    3100:	mov	r3, #100	; 0x64
    3104:	uxtb	r2, r3
    3108:	mov	r3, #0
    310c:	mov	r3, r2
    3110:	str	r3, [fp, #-376]	; 0xfffffe88
    3114:	mov	r3, #0
    3118:	str	r3, [fp, #-380]	; 0xfffffe84
    311c:	sub	r3, fp, #380	; 0x17c
    3120:	ldrd	r2, [r3]
    3124:	orr	r2, r2, r0
    3128:	orr	r3, r3, r1
    312c:	cmp	r5, r3
    3130:	cmpeq	r4, r2
    3134:	beq	3154 <test+0xdb4>
    3138:	mov	r3, #13
    313c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3140:	ldr	r1, [fp, #-124]	; 0xffffff84
    3144:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3148:	bl	0 <flatcc_json_parser_set_error>
    314c:	str	r0, [fp, #-124]	; 0xffffff84
    3150:	b	3a48 <test+0x16a8>
    3154:	ldr	r3, [fp, #-124]	; 0xffffff84
    3158:	add	r3, r3, #4
    315c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3160:	mov	r1, r3
    3164:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3168:	bl	4a0 <flatcc_json_parser_symbol_end>
    316c:	str	r0, [fp, #-124]	; 0xffffff84
    3170:	ldr	r2, [fp, #-128]	; 0xffffff80
    3174:	ldr	r1, [fp, #-124]	; 0xffffff84
    3178:	ldr	r0, [fp, #-40]	; 0xffffffd8
    317c:	bl	0 <flatcc_json_parser_space>
    3180:	str	r0, [fp, #-124]	; 0xffffff84
    3184:	ldr	r2, [fp, #-124]	; 0xffffff84
    3188:	ldr	r3, [fp, #-128]	; 0xffffff80
    318c:	cmp	r2, r3
    3190:	bne	31b0 <test+0xe10>
    3194:	ldr	r3, [pc, #296]	; 32c4 <test+0xf24>
    3198:	ldr	r3, [r3]
    319c:	mov	r2, #13
    31a0:	mov	r1, #1
    31a4:	ldr	r0, [pc, #264]	; 32b4 <test+0xf14>
    31a8:	bl	0 <fwrite>
    31ac:	b	3a48 <test+0x16a8>
    31b0:	ldr	r2, [fp, #-128]	; 0xffffff80
    31b4:	ldr	r3, [fp, #-124]	; 0xffffff84
    31b8:	cmp	r2, r3
    31bc:	bls	3204 <test+0xe64>
    31c0:	ldr	r3, [fp, #-124]	; 0xffffff84
    31c4:	ldrb	r3, [r3]
    31c8:	cmp	r3, #58	; 0x3a
    31cc:	bne	3204 <test+0xe64>
    31d0:	ldr	r3, [fp, #-124]	; 0xffffff84
    31d4:	add	r3, r3, #1
    31d8:	str	r3, [fp, #-124]	; 0xffffff84
    31dc:	ldr	r2, [fp, #-128]	; 0xffffff80
    31e0:	ldr	r1, [fp, #-124]	; 0xffffff84
    31e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    31e8:	bl	0 <flatcc_json_parser_space>
    31ec:	str	r0, [fp, #-124]	; 0xffffff84
    31f0:	ldr	r2, [fp, #-124]	; 0xffffff84
    31f4:	ldr	r3, [fp, #-128]	; 0xffffff80
    31f8:	cmp	r2, r3
    31fc:	beq	3238 <test+0xe98>
    3200:	b	3254 <test+0xeb4>
    3204:	ldr	r3, [pc, #184]	; 32c4 <test+0xf24>
    3208:	ldr	r3, [r3]
    320c:	mov	r2, #58	; 0x3a
    3210:	ldr	r1, [pc, #160]	; 32b8 <test+0xf18>
    3214:	mov	r0, r3
    3218:	bl	0 <fprintf>
    321c:	mov	r3, #17
    3220:	ldr	r2, [fp, #-128]	; 0xffffff80
    3224:	ldr	r1, [fp, #-124]	; 0xffffff84
    3228:	ldr	r0, [fp, #-40]	; 0xffffffd8
    322c:	bl	0 <flatcc_json_parser_set_error>
    3230:	str	r0, [fp, #-124]	; 0xffffff84
    3234:	b	3a48 <test+0x16a8>
    3238:	ldr	r3, [pc, #132]	; 32c4 <test+0xf24>
    323c:	ldr	r3, [r3]
    3240:	mov	r2, #13
    3244:	mov	r1, #1
    3248:	ldr	r0, [pc, #100]	; 32b4 <test+0xf14>
    324c:	bl	0 <fwrite>
    3250:	b	3a48 <test+0x16a8>
    3254:	mov	r3, #8
    3258:	mov	r2, #8
    325c:	mov	r1, #3
    3260:	ldr	r0, [fp, #-120]	; 0xffffff88
    3264:	bl	0 <flatcc_builder_table_add>
    3268:	str	r0, [fp, #-60]	; 0xffffffc4
    326c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3270:	cmp	r3, #0
    3274:	beq	3a14 <test+0x1674>
    3278:	ldr	r3, [fp, #-124]	; 0xffffff84
    327c:	str	r3, [fp, #-56]	; 0xffffffc8
    3280:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3284:	ldr	r2, [fp, #-128]	; 0xffffff80
    3288:	ldr	r1, [fp, #-124]	; 0xffffff84
    328c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3290:	bl	ebc <flatcc_json_parser_int64>
    3294:	str	r0, [fp, #-124]	; 0xffffff84
    3298:	ldr	r2, [fp, #-56]	; 0xffffffc8
    329c:	ldr	r3, [fp, #-124]	; 0xffffff84
    32a0:	cmp	r2, r3
    32a4:	bne	3898 <test+0x14f8>
    32a8:	b	3a48 <test+0x16a8>
    32ac:	.word	0x0000028c
    32b0:	.word	0xffff0000
    32b4:	.word	0x00000294
    32b8:	.word	0x000002a4
    32bc:	.word	0x000002bc
    32c0:	.word	0x000002d8
    32c4:	.word	0x00000000
    32c8:	.word	0x000002e4
    32cc:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    32d0:	mov	r2, #0
    32d4:	mvn	r3, #0
    32d8:	and	r4, r0, r2
    32dc:	and	r5, r1, r3
    32e0:	mov	r3, #108	; 0x6c
    32e4:	uxtb	r2, r3
    32e8:	mov	r3, #0
    32ec:	lsl	r3, r2, #24
    32f0:	str	r3, [fp, #-384]	; 0xfffffe80
    32f4:	mov	r3, #0
    32f8:	str	r3, [fp, #-388]	; 0xfffffe7c
    32fc:	mov	r3, #101	; 0x65
    3300:	uxtb	r2, r3
    3304:	mov	r3, #0
    3308:	lsl	r3, r2, #16
    330c:	str	r3, [fp, #-392]	; 0xfffffe78
    3310:	mov	r3, #0
    3314:	str	r3, [fp, #-396]	; 0xfffffe74
    3318:	sub	r3, fp, #388	; 0x184
    331c:	ldrd	r0, [r3]
    3320:	sub	r3, fp, #396	; 0x18c
    3324:	ldrd	r2, [r3]
    3328:	orr	r0, r0, r2
    332c:	orr	r1, r1, r3
    3330:	mov	r3, #102	; 0x66
    3334:	uxtb	r2, r3
    3338:	mov	r3, #0
    333c:	lsl	r3, r2, #8
    3340:	str	r3, [fp, #-400]	; 0xfffffe70
    3344:	mov	r3, #0
    3348:	str	r3, [fp, #-404]	; 0xfffffe6c
    334c:	sub	r3, fp, #404	; 0x194
    3350:	ldrd	r2, [r3]
    3354:	orr	r2, r2, r0
    3358:	orr	r3, r3, r1
    335c:	mov	r0, r2
    3360:	mov	r1, r3
    3364:	mov	r3, #116	; 0x74
    3368:	uxtb	r2, r3
    336c:	mov	r3, #0
    3370:	mov	r3, r2
    3374:	str	r3, [fp, #-408]	; 0xfffffe68
    3378:	mov	r3, #0
    337c:	str	r3, [fp, #-412]	; 0xfffffe64
    3380:	sub	r3, fp, #412	; 0x19c
    3384:	ldrd	r2, [r3]
    3388:	orr	r2, r2, r0
    338c:	orr	r3, r3, r1
    3390:	cmp	r5, r3
    3394:	cmpeq	r4, r2
    3398:	beq	33b8 <test+0x1018>
    339c:	mov	r3, #13
    33a0:	ldr	r2, [fp, #-128]	; 0xffffff80
    33a4:	ldr	r1, [fp, #-124]	; 0xffffff84
    33a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    33ac:	bl	0 <flatcc_json_parser_set_error>
    33b0:	str	r0, [fp, #-124]	; 0xffffff84
    33b4:	b	3a48 <test+0x16a8>
    33b8:	ldr	r3, [fp, #-124]	; 0xffffff84
    33bc:	add	r3, r3, #4
    33c0:	ldr	r2, [fp, #-128]	; 0xffffff80
    33c4:	mov	r1, r3
    33c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    33cc:	bl	4a0 <flatcc_json_parser_symbol_end>
    33d0:	str	r0, [fp, #-124]	; 0xffffff84
    33d4:	ldr	r2, [fp, #-128]	; 0xffffff80
    33d8:	ldr	r1, [fp, #-124]	; 0xffffff84
    33dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    33e0:	bl	0 <flatcc_json_parser_space>
    33e4:	str	r0, [fp, #-124]	; 0xffffff84
    33e8:	ldr	r2, [fp, #-124]	; 0xffffff84
    33ec:	ldr	r3, [fp, #-128]	; 0xffffff80
    33f0:	cmp	r2, r3
    33f4:	bne	3414 <test+0x1074>
    33f8:	ldr	r3, [pc, #-316]	; 32c4 <test+0xf24>
    33fc:	ldr	r3, [r3]
    3400:	mov	r2, #13
    3404:	mov	r1, #1
    3408:	ldr	r0, [pc, #-348]	; 32b4 <test+0xf14>
    340c:	bl	0 <fwrite>
    3410:	b	3a48 <test+0x16a8>
    3414:	ldr	r2, [fp, #-128]	; 0xffffff80
    3418:	ldr	r3, [fp, #-124]	; 0xffffff84
    341c:	cmp	r2, r3
    3420:	bls	3468 <test+0x10c8>
    3424:	ldr	r3, [fp, #-124]	; 0xffffff84
    3428:	ldrb	r3, [r3]
    342c:	cmp	r3, #58	; 0x3a
    3430:	bne	3468 <test+0x10c8>
    3434:	ldr	r3, [fp, #-124]	; 0xffffff84
    3438:	add	r3, r3, #1
    343c:	str	r3, [fp, #-124]	; 0xffffff84
    3440:	ldr	r2, [fp, #-128]	; 0xffffff80
    3444:	ldr	r1, [fp, #-124]	; 0xffffff84
    3448:	ldr	r0, [fp, #-40]	; 0xffffffd8
    344c:	bl	0 <flatcc_json_parser_space>
    3450:	str	r0, [fp, #-124]	; 0xffffff84
    3454:	ldr	r2, [fp, #-124]	; 0xffffff84
    3458:	ldr	r3, [fp, #-128]	; 0xffffff80
    345c:	cmp	r2, r3
    3460:	beq	349c <test+0x10fc>
    3464:	b	34b8 <test+0x1118>
    3468:	ldr	r3, [pc, #-428]	; 32c4 <test+0xf24>
    346c:	ldr	r3, [r3]
    3470:	mov	r2, #58	; 0x3a
    3474:	ldr	r1, [pc, #-452]	; 32b8 <test+0xf18>
    3478:	mov	r0, r3
    347c:	bl	0 <fprintf>
    3480:	mov	r3, #17
    3484:	ldr	r2, [fp, #-128]	; 0xffffff80
    3488:	ldr	r1, [fp, #-124]	; 0xffffff84
    348c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3490:	bl	0 <flatcc_json_parser_set_error>
    3494:	str	r0, [fp, #-124]	; 0xffffff84
    3498:	b	3a48 <test+0x16a8>
    349c:	ldr	r3, [pc, #-480]	; 32c4 <test+0xf24>
    34a0:	ldr	r3, [r3]
    34a4:	mov	r2, #13
    34a8:	mov	r1, #1
    34ac:	ldr	r0, [pc, #-512]	; 32b4 <test+0xf14>
    34b0:	bl	0 <fwrite>
    34b4:	b	3a48 <test+0x16a8>
    34b8:	mov	r3, #4
    34bc:	mov	r2, #4
    34c0:	mov	r1, #2
    34c4:	ldr	r0, [fp, #-120]	; 0xffffff88
    34c8:	bl	0 <flatcc_builder_table_add>
    34cc:	str	r0, [fp, #-60]	; 0xffffffc4
    34d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    34d4:	cmp	r3, #0
    34d8:	beq	3a1c <test+0x167c>
    34dc:	ldr	r3, [fp, #-124]	; 0xffffff84
    34e0:	str	r3, [fp, #-56]	; 0xffffffc8
    34e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    34e8:	ldr	r2, [fp, #-128]	; 0xffffff80
    34ec:	ldr	r1, [fp, #-124]	; 0xffffff84
    34f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    34f4:	bl	d1c <flatcc_json_parser_uint32>
    34f8:	str	r0, [fp, #-124]	; 0xffffff84
    34fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3500:	ldr	r3, [fp, #-124]	; 0xffffff84
    3504:	cmp	r2, r3
    3508:	bne	3898 <test+0x14f8>
    350c:	b	3a48 <test+0x16a8>
    3510:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    3514:	mov	r2, #0
    3518:	mvn	r3, #0
    351c:	and	r4, r0, r2
    3520:	and	r5, r1, r3
    3524:	mov	r3, #122	; 0x7a
    3528:	uxtb	r2, r3
    352c:	mov	r3, #0
    3530:	lsl	r3, r2, #24
    3534:	str	r3, [fp, #-456]	; 0xfffffe38
    3538:	mov	r3, #0
    353c:	str	r3, [fp, #-460]	; 0xfffffe34
    3540:	mov	r3, #117	; 0x75
    3544:	uxtb	r2, r3
    3548:	mov	r3, #0
    354c:	lsl	r3, r2, #16
    3550:	str	r3, [fp, #-464]	; 0xfffffe30
    3554:	mov	r3, #0
    3558:	str	r3, [fp, #-468]	; 0xfffffe2c
    355c:	sub	r3, fp, #460	; 0x1cc
    3560:	ldrd	r0, [r3]
    3564:	sub	r3, fp, #468	; 0x1d4
    3568:	ldrd	r2, [r3]
    356c:	orr	r0, r0, r2
    3570:	orr	r1, r1, r3
    3574:	mov	r3, #108	; 0x6c
    3578:	uxtb	r2, r3
    357c:	mov	r3, #0
    3580:	lsl	r3, r2, #8
    3584:	str	r3, [fp, #-472]	; 0xfffffe28
    3588:	mov	r3, #0
    358c:	str	r3, [fp, #-476]	; 0xfffffe24
    3590:	sub	r3, fp, #476	; 0x1dc
    3594:	ldrd	r2, [r3]
    3598:	orr	r2, r2, r0
    359c:	orr	r3, r3, r1
    35a0:	mov	r0, r2
    35a4:	mov	r1, r3
    35a8:	mov	r3, #117	; 0x75
    35ac:	uxtb	r2, r3
    35b0:	mov	r3, #0
    35b4:	mov	r3, r2
    35b8:	str	r3, [fp, #-480]	; 0xfffffe20
    35bc:	mov	r3, #0
    35c0:	str	r3, [fp, #-484]	; 0xfffffe1c
    35c4:	sub	r3, fp, #484	; 0x1e4
    35c8:	ldrd	r2, [r3]
    35cc:	orr	r2, r2, r0
    35d0:	orr	r3, r3, r1
    35d4:	cmp	r5, r3
    35d8:	cmpeq	r4, r2
    35dc:	beq	35fc <test+0x125c>
    35e0:	mov	r3, #13
    35e4:	ldr	r2, [fp, #-128]	; 0xffffff80
    35e8:	ldr	r1, [fp, #-124]	; 0xffffff84
    35ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    35f0:	bl	0 <flatcc_json_parser_set_error>
    35f4:	str	r0, [fp, #-124]	; 0xffffff84
    35f8:	b	3a48 <test+0x16a8>
    35fc:	ldr	r3, [fp, #-124]	; 0xffffff84
    3600:	add	r3, r3, #4
    3604:	ldr	r2, [fp, #-128]	; 0xffffff80
    3608:	mov	r1, r3
    360c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3610:	bl	4a0 <flatcc_json_parser_symbol_end>
    3614:	str	r0, [fp, #-124]	; 0xffffff84
    3618:	ldr	r2, [fp, #-128]	; 0xffffff80
    361c:	ldr	r1, [fp, #-124]	; 0xffffff84
    3620:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3624:	bl	0 <flatcc_json_parser_space>
    3628:	str	r0, [fp, #-124]	; 0xffffff84
    362c:	ldr	r2, [fp, #-124]	; 0xffffff84
    3630:	ldr	r3, [fp, #-128]	; 0xffffff80
    3634:	cmp	r2, r3
    3638:	bne	3658 <test+0x12b8>
    363c:	ldr	r3, [pc, #-896]	; 32c4 <test+0xf24>
    3640:	ldr	r3, [r3]
    3644:	mov	r2, #13
    3648:	mov	r1, #1
    364c:	ldr	r0, [pc, #-928]	; 32b4 <test+0xf14>
    3650:	bl	0 <fwrite>
    3654:	b	3a48 <test+0x16a8>
    3658:	ldr	r2, [fp, #-128]	; 0xffffff80
    365c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3660:	cmp	r2, r3
    3664:	bls	36ac <test+0x130c>
    3668:	ldr	r3, [fp, #-124]	; 0xffffff84
    366c:	ldrb	r3, [r3]
    3670:	cmp	r3, #58	; 0x3a
    3674:	bne	36ac <test+0x130c>
    3678:	ldr	r3, [fp, #-124]	; 0xffffff84
    367c:	add	r3, r3, #1
    3680:	str	r3, [fp, #-124]	; 0xffffff84
    3684:	ldr	r2, [fp, #-128]	; 0xffffff80
    3688:	ldr	r1, [fp, #-124]	; 0xffffff84
    368c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3690:	bl	0 <flatcc_json_parser_space>
    3694:	str	r0, [fp, #-124]	; 0xffffff84
    3698:	ldr	r2, [fp, #-124]	; 0xffffff84
    369c:	ldr	r3, [fp, #-128]	; 0xffffff80
    36a0:	cmp	r2, r3
    36a4:	beq	36e0 <test+0x1340>
    36a8:	b	36fc <test+0x135c>
    36ac:	ldr	r3, [pc, #-1008]	; 32c4 <test+0xf24>
    36b0:	ldr	r3, [r3]
    36b4:	mov	r2, #58	; 0x3a
    36b8:	ldr	r1, [pc, #-1032]	; 32b8 <test+0xf18>
    36bc:	mov	r0, r3
    36c0:	bl	0 <fprintf>
    36c4:	mov	r3, #17
    36c8:	ldr	r2, [fp, #-128]	; 0xffffff80
    36cc:	ldr	r1, [fp, #-124]	; 0xffffff84
    36d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    36d4:	bl	0 <flatcc_json_parser_set_error>
    36d8:	str	r0, [fp, #-124]	; 0xffffff84
    36dc:	b	3a48 <test+0x16a8>
    36e0:	ldr	r3, [pc, #-1060]	; 32c4 <test+0xf24>
    36e4:	ldr	r3, [r3]
    36e8:	mov	r2, #13
    36ec:	mov	r1, #1
    36f0:	ldr	r0, [pc, #-1092]	; 32b4 <test+0xf14>
    36f4:	bl	0 <fwrite>
    36f8:	b	3a48 <test+0x16a8>
    36fc:	ldr	r2, [fp, #-128]	; 0xffffff80
    3700:	ldr	r1, [fp, #-124]	; 0xffffff84
    3704:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3708:	bl	94 <flatcc_json_parser_string_start>
    370c:	str	r0, [fp, #-124]	; 0xffffff84
    3710:	ldr	r3, [fp, #-124]	; 0xffffff84
    3714:	str	r3, [fp, #-56]	; 0xffffffc8
    3718:	ldr	r2, [fp, #-128]	; 0xffffff80
    371c:	ldr	r1, [fp, #-124]	; 0xffffff84
    3720:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3724:	bl	0 <flatcc_json_parser_string_part>
    3728:	str	r0, [fp, #-124]	; 0xffffff84
    372c:	ldr	r2, [fp, #-124]	; 0xffffff84
    3730:	ldr	r3, [fp, #-128]	; 0xffffff80
    3734:	cmp	r2, r3
    3738:	beq	3a24 <test+0x1684>
    373c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3740:	ldrb	r3, [r3]
    3744:	cmp	r3, #34	; 0x22
    3748:	bne	3770 <test+0x13d0>
    374c:	ldr	r2, [fp, #-124]	; 0xffffff84
    3750:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3754:	sub	r3, r2, r3
    3758:	mov	r2, r3
    375c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3760:	ldr	r0, [fp, #-120]	; 0xffffff88
    3764:	bl	0 <flatcc_builder_create_string>
    3768:	str	r0, [fp, #-32]	; 0xffffffe0
    376c:	b	3850 <test+0x14b0>
    3770:	ldr	r0, [fp, #-120]	; 0xffffff88
    3774:	bl	0 <flatcc_builder_start_string>
    3778:	ldr	r2, [fp, #-124]	; 0xffffff84
    377c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3780:	sub	r3, r2, r3
    3784:	mov	r1, r3
    3788:	ldr	r0, [fp, #-120]	; 0xffffff88
    378c:	bl	0 <flatcc_builder_extend_string>
    3790:	str	r0, [fp, #-64]	; 0xffffffc0
    3794:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3798:	cmp	r3, #0
    379c:	beq	3a2c <test+0x168c>
    37a0:	ldr	r2, [fp, #-124]	; 0xffffff84
    37a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    37a8:	sub	r3, r2, r3
    37ac:	mov	r2, r3
    37b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    37b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    37b8:	bl	0 <memcpy>
    37bc:	sub	r3, fp, #116	; 0x74
    37c0:	ldr	r2, [fp, #-128]	; 0xffffff80
    37c4:	ldr	r1, [fp, #-124]	; 0xffffff84
    37c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37cc:	bl	0 <flatcc_json_parser_string_escape>
    37d0:	str	r0, [fp, #-124]	; 0xffffff84
    37d4:	sub	r1, fp, #116	; 0x74
    37d8:	add	r1, r1, #1
    37dc:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    37e0:	mov	r2, r3
    37e4:	ldr	r0, [fp, #-120]	; 0xffffff88
    37e8:	bl	0 <flatcc_builder_append_string>
    37ec:	ldr	r3, [fp, #-124]	; 0xffffff84
    37f0:	str	r3, [fp, #-56]	; 0xffffffc8
    37f4:	ldr	r2, [fp, #-128]	; 0xffffff80
    37f8:	ldr	r1, [fp, #-124]	; 0xffffff84
    37fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3800:	bl	0 <flatcc_json_parser_string_part>
    3804:	str	r0, [fp, #-124]	; 0xffffff84
    3808:	ldr	r2, [fp, #-124]	; 0xffffff84
    380c:	ldr	r3, [fp, #-128]	; 0xffffff80
    3810:	cmp	r2, r3
    3814:	beq	3a34 <test+0x1694>
    3818:	ldr	r2, [fp, #-124]	; 0xffffff84
    381c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3820:	sub	r3, r2, r3
    3824:	mov	r2, r3
    3828:	ldr	r1, [fp, #-56]	; 0xffffffc8
    382c:	ldr	r0, [fp, #-120]	; 0xffffff88
    3830:	bl	0 <flatcc_builder_append_string>
    3834:	ldr	r3, [fp, #-124]	; 0xffffff84
    3838:	ldrb	r3, [r3]
    383c:	cmp	r3, #34	; 0x22
    3840:	bne	37bc <test+0x141c>
    3844:	ldr	r0, [fp, #-120]	; 0xffffff88
    3848:	bl	0 <flatcc_builder_end_string>
    384c:	str	r0, [fp, #-32]	; 0xffffffe0
    3850:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3854:	cmp	r3, #0
    3858:	beq	3a3c <test+0x169c>
    385c:	mov	r1, #10
    3860:	ldr	r0, [fp, #-120]	; 0xffffff88
    3864:	bl	0 <flatcc_builder_table_add_offset>
    3868:	str	r0, [fp, #-68]	; 0xffffffbc
    386c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    3870:	cmp	r3, #0
    3874:	beq	3a44 <test+0x16a4>
    3878:	ldr	r2, [fp, #-68]	; 0xffffffbc
    387c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3880:	str	r3, [r2]
    3884:	ldr	r2, [fp, #-128]	; 0xffffff80
    3888:	ldr	r1, [fp, #-124]	; 0xffffff84
    388c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3890:	bl	104 <flatcc_json_parser_string_end>
    3894:	str	r0, [fp, #-124]	; 0xffffff84
    3898:	ldr	r2, [fp, #-128]	; 0xffffff80
    389c:	ldr	r1, [fp, #-124]	; 0xffffff84
    38a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    38a4:	bl	0 <flatcc_json_parser_space>
    38a8:	str	r0, [fp, #-124]	; 0xffffff84
    38ac:	ldr	r2, [fp, #-124]	; 0xffffff84
    38b0:	ldr	r3, [fp, #-128]	; 0xffffff80
    38b4:	cmp	r2, r3
    38b8:	bne	38d8 <test+0x1538>
    38bc:	ldr	r3, [pc, #-1536]	; 32c4 <test+0xf24>
    38c0:	ldr	r3, [r3]
    38c4:	mov	r2, #13
    38c8:	mov	r1, #1
    38cc:	ldr	r0, [pc, #-1568]	; 32b4 <test+0xf14>
    38d0:	bl	0 <fwrite>
    38d4:	b	3a48 <test+0x16a8>
    38d8:	ldr	r3, [fp, #-124]	; 0xffffff84
    38dc:	ldrb	r3, [r3]
    38e0:	cmp	r3, #44	; 0x2c
    38e4:	bne	3948 <test+0x15a8>
    38e8:	ldr	r3, [fp, #-124]	; 0xffffff84
    38ec:	add	r3, r3, #1
    38f0:	str	r3, [fp, #-124]	; 0xffffff84
    38f4:	ldr	r2, [fp, #-128]	; 0xffffff80
    38f8:	ldr	r1, [fp, #-124]	; 0xffffff84
    38fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3900:	bl	0 <flatcc_json_parser_space>
    3904:	str	r0, [fp, #-124]	; 0xffffff84
    3908:	ldr	r2, [fp, #-124]	; 0xffffff84
    390c:	ldr	r3, [fp, #-128]	; 0xffffff80
    3910:	cmp	r2, r3
    3914:	bne	3934 <test+0x1594>
    3918:	ldr	r3, [pc, #-1628]	; 32c4 <test+0xf24>
    391c:	ldr	r3, [r3]
    3920:	mov	r2, #13
    3924:	mov	r1, #1
    3928:	ldr	r0, [pc, #-1660]	; 32b4 <test+0xf14>
    392c:	bl	0 <fwrite>
    3930:	b	3a48 <test+0x16a8>
    3934:	ldr	r3, [fp, #-124]	; 0xffffff84
    3938:	ldrb	r3, [r3]
    393c:	cmp	r3, #125	; 0x7d
    3940:	beq	3948 <test+0x15a8>
    3944:	b	24f8 <test+0x158>
    3948:	ldr	r2, [fp, #-128]	; 0xffffff80
    394c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3950:	cmp	r2, r3
    3954:	bls	39b4 <test+0x1614>
    3958:	ldr	r3, [fp, #-124]	; 0xffffff84
    395c:	ldrb	r3, [r3]
    3960:	cmp	r3, #125	; 0x7d
    3964:	bne	39b4 <test+0x1614>
    3968:	ldr	r3, [fp, #-124]	; 0xffffff84
    396c:	add	r3, r3, #1
    3970:	str	r3, [fp, #-124]	; 0xffffff84
    3974:	ldr	r0, [fp, #-120]	; 0xffffff88
    3978:	bl	0 <flatcc_builder_end_table>
    397c:	str	r0, [fp, #-36]	; 0xffffffdc
    3980:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3984:	ldr	r0, [fp, #-120]	; 0xffffff88
    3988:	bl	0 <flatcc_builder_end_buffer>
    398c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3990:	ldr	r1, [fp, #-124]	; 0xffffff84
    3994:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3998:	bl	0 <flatcc_json_parser_space>
    399c:	str	r0, [fp, #-124]	; 0xffffff84
    39a0:	ldr	r2, [fp, #-124]	; 0xffffff84
    39a4:	ldr	r3, [fp, #-128]	; 0xffffff80
    39a8:	cmp	r2, r3
    39ac:	bne	39e8 <test+0x1648>
    39b0:	b	3a48 <test+0x16a8>
    39b4:	ldr	r3, [pc, #-1784]	; 32c4 <test+0xf24>
    39b8:	ldr	r3, [r3]
    39bc:	mov	r2, #125	; 0x7d
    39c0:	ldr	r1, [pc, #-1808]	; 32b8 <test+0xf18>
    39c4:	mov	r0, r3
    39c8:	bl	0 <fprintf>
    39cc:	mov	r3, #17
    39d0:	ldr	r2, [fp, #-128]	; 0xffffff80
    39d4:	ldr	r1, [fp, #-124]	; 0xffffff84
    39d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    39dc:	bl	0 <flatcc_json_parser_set_error>
    39e0:	str	r0, [fp, #-124]	; 0xffffff84
    39e4:	b	3a48 <test+0x16a8>
    39e8:	ldr	r3, [pc, #-1836]	; 32c4 <test+0xf24>
    39ec:	ldr	r3, [r3]
    39f0:	mov	r2, #26
    39f4:	mov	r1, #1
    39f8:	ldr	r0, [pc, #-1860]	; 32bc <test+0xf1c>
    39fc:	bl	0 <fwrite>
    3a00:	b	3a48 <test+0x16a8>
    3a04:	nop			; (mov r0, r0)
    3a08:	b	3a48 <test+0x16a8>
    3a0c:	nop			; (mov r0, r0)
    3a10:	b	3a48 <test+0x16a8>
    3a14:	nop			; (mov r0, r0)
    3a18:	b	3a48 <test+0x16a8>
    3a1c:	nop			; (mov r0, r0)
    3a20:	b	3a48 <test+0x16a8>
    3a24:	nop			; (mov r0, r0)
    3a28:	b	3a48 <test+0x16a8>
    3a2c:	nop			; (mov r0, r0)
    3a30:	b	3a48 <test+0x16a8>
    3a34:	nop			; (mov r0, r0)
    3a38:	b	3a48 <test+0x16a8>
    3a3c:	nop			; (mov r0, r0)
    3a40:	b	3a48 <test+0x16a8>
    3a44:	nop			; (mov r0, r0)
    3a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3a4c:	ldr	r3, [r3, #24]
    3a50:	cmp	r3, #0
    3a54:	beq	3abc <test+0x171c>
    3a58:	ldr	r3, [pc, #-1948]	; 32c4 <test+0xf24>
    3a5c:	ldr	r4, [r3]
    3a60:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3a64:	ldr	r5, [r3, #16]
    3a68:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3a6c:	ldr	r3, [r3, #36]	; 0x24
    3a70:	mov	r2, r3
    3a74:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3a78:	ldr	r3, [r3, #4]
    3a7c:	sub	r3, r2, r3
    3a80:	add	r6, r3, #1
    3a84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3a88:	ldr	r3, [r3, #24]
    3a8c:	mov	r0, r3
    3a90:	bl	0 <flatcc_json_parser_error_string>
    3a94:	mov	r3, r0
    3a98:	str	r3, [sp]
    3a9c:	mov	r3, r6
    3aa0:	mov	r2, r5
    3aa4:	ldr	r1, [pc, #-2028]	; 32c0 <test+0xf20>
    3aa8:	mov	r0, r4
    3aac:	bl	0 <fprintf>
    3ab0:	ldr	r0, [fp, #-120]	; 0xffffff88
    3ab4:	bl	0 <flatcc_builder_reset>
    3ab8:	b	3ad4 <test+0x1734>
    3abc:	ldr	r3, [pc, #-2048]	; 32c4 <test+0xf24>
    3ac0:	ldr	r3, [r3]
    3ac4:	mov	r2, #15
    3ac8:	mov	r1, #1
    3acc:	ldr	r0, [pc, #-2060]	; 32c8 <test+0xf28>
    3ad0:	bl	0 <fwrite>
    3ad4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3ad8:	ldr	r2, [r3, #24]
    3adc:	ldr	r3, [fp, #-132]	; 0xffffff7c
    3ae0:	str	r2, [r3]
    3ae4:	ldr	r3, [fp, #-124]	; 0xffffff84
    3ae8:	mov	r0, r3
    3aec:	sub	sp, fp, #28
    3af0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00003af4 <main>:
    3af4:	push	{fp, lr}
    3af8:	add	fp, sp, #4
    3afc:	sub	sp, sp, #240	; 0xf0
    3b00:	mvn	r3, #0
    3b04:	str	r3, [fp, #-8]
    3b08:	sub	r3, fp, #240	; 0xf0
    3b0c:	mov	r0, r3
    3b10:	bl	0 <flatcc_builder_init>
    3b14:	ldr	r2, [pc, #40]	; 3b44 <main+0x50>
    3b18:	sub	r3, fp, #8
    3b1c:	sub	r0, fp, #240	; 0xf0
    3b20:	ldr	r1, [pc, #32]	; 3b48 <main+0x54>
    3b24:	bl	23a0 <test>
    3b28:	sub	r3, fp, #240	; 0xf0
    3b2c:	mov	r0, r3
    3b30:	bl	0 <flatcc_builder_clear>
    3b34:	ldr	r3, [fp, #-8]
    3b38:	mov	r0, r3
    3b3c:	sub	sp, fp, #4
    3b40:	pop	{fp, pc}
    3b44:	.word	0x00000285
    3b48:	.word	0x00000000
