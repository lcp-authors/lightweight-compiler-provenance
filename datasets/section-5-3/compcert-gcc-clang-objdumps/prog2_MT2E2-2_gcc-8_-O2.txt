
../compcert-repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c08 <.init>:
   10c08:	push	{r3, lr}
   10c0c:	bl	10f7c <_start@@Base+0x3c>
   10c10:	pop	{r3, pc}

Disassembly of section .plt:

00010c14 <calloc@plt-0x14>:
   10c14:	push	{lr}		; (str lr, [sp, #-4]!)
   10c18:	ldr	lr, [pc, #4]	; 10c24 <calloc@plt-0x4>
   10c1c:	add	lr, pc, lr
   10c20:	ldr	pc, [lr, #8]!
   10c24:	ldrdeq	r2, [r1], -ip

00010c28 <calloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #73728	; 0x12000
   10c30:	ldr	pc, [ip, #988]!	; 0x3dc

00010c34 <strcmp@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #73728	; 0x12000
   10c3c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c40 <strtol@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #73728	; 0x12000
   10c48:	ldr	pc, [ip, #972]!	; 0x3cc

00010c4c <printf@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #964]!	; 0x3c4

00010c58 <__isoc99_fscanf@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #956]!	; 0x3bc

00010c64 <fopen@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #73728	; 0x12000
   10c6c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c70 <free@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #940]!	; 0x3ac

00010c7c <memcpy@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #932]!	; 0x3a4

00010c88 <realloc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #924]!	; 0x39c

00010c94 <strcpy@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #916]!	; 0x394

00010ca0 <puts@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #908]!	; 0x38c

00010cac <malloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #900]!	; 0x384

00010cb8 <__libc_start_main@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #892]!	; 0x37c

00010cc4 <__gmon_start__@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #884]!	; 0x374

00010cd0 <strlen@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #876]!	; 0x36c

00010cdc <putchar@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #868]!	; 0x364

00010ce8 <fclose@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #860]!	; 0x35c

00010cf4 <sprintf@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #852]!	; 0x354

00010d00 <abort@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #844]!	; 0x34c

Disassembly of section .text:

00010d0c <main@@Base>:
   10d0c:	movw	r0, #9828	; 0x2664
   10d10:	movt	r0, #1
   10d14:	strd	r4, [sp, #-20]!	; 0xffffffec
   10d18:	strd	r6, [sp, #8]
   10d1c:	mov	r4, #0
   10d20:	movw	r7, #9912	; 0x26b8
   10d24:	movt	r7, #1
   10d28:	str	lr, [sp, #16]
   10d2c:	sub	sp, sp, #36	; 0x24
   10d30:	bl	10ca0 <puts@plt>
   10d34:	mov	r1, #1
   10d38:	mov	r0, #8
   10d3c:	bl	11294 <grafo_novo@@Base>
   10d40:	mov	r6, r0
   10d44:	mov	r2, #3
   10d48:	mov	r1, #1
   10d4c:	bl	113a4 <grafo_adiciona@@Base>
   10d50:	mov	r0, r6
   10d54:	mov	r2, #3
   10d58:	mov	r1, #2
   10d5c:	bl	113a4 <grafo_adiciona@@Base>
   10d60:	mov	r0, r6
   10d64:	mov	r2, #4
   10d68:	mov	r1, #2
   10d6c:	bl	113a4 <grafo_adiciona@@Base>
   10d70:	mov	r0, r6
   10d74:	mov	r2, #5
   10d78:	mov	r1, #2
   10d7c:	bl	113a4 <grafo_adiciona@@Base>
   10d80:	mov	r0, r6
   10d84:	mov	r2, #2
   10d88:	mov	r1, #3
   10d8c:	bl	113a4 <grafo_adiciona@@Base>
   10d90:	mov	r0, r6
   10d94:	mov	r2, #4
   10d98:	mov	r1, #3
   10d9c:	bl	113a4 <grafo_adiciona@@Base>
   10da0:	mov	r0, r6
   10da4:	mov	r2, #6
   10da8:	mov	r1, #4
   10dac:	bl	113a4 <grafo_adiciona@@Base>
   10db0:	mov	r0, r6
   10db4:	mov	r2, #7
   10db8:	mov	r1, #4
   10dbc:	bl	113a4 <grafo_adiciona@@Base>
   10dc0:	mov	r0, r6
   10dc4:	mov	r2, #4
   10dc8:	mov	r1, #5
   10dcc:	bl	113a4 <grafo_adiciona@@Base>
   10dd0:	mov	r0, r6
   10dd4:	mov	r2, #6
   10dd8:	mov	r1, #5
   10ddc:	bl	113a4 <grafo_adiciona@@Base>
   10de0:	mov	r0, r6
   10de4:	mov	r2, #7
   10de8:	mov	r1, #5
   10dec:	bl	113a4 <grafo_adiciona@@Base>
   10df0:	mov	r0, r6
   10df4:	mov	r2, #7
   10df8:	mov	r1, #6
   10dfc:	bl	113a4 <grafo_adiciona@@Base>
   10e00:	mov	r0, r6
   10e04:	mov	r3, #5
   10e08:	mov	r2, #7
   10e0c:	mov	r1, #1
   10e10:	bl	1111c <descobre_caminho@@Base>
   10e14:	mov	r5, r0
   10e18:	movw	r0, #9848	; 0x2678
   10e1c:	movt	r0, #1
   10e20:	bl	10c4c <printf@plt>
   10e24:	b	10e38 <main@@Base+0x12c>
   10e28:	bl	12070 <lista_elemento@@Base>
   10e2c:	mov	r1, r0
   10e30:	mov	r0, r7
   10e34:	bl	10c4c <printf@plt>
   10e38:	mov	r0, r5
   10e3c:	bl	12060 <lista_tamanho@@Base>
   10e40:	cmp	r0, r4
   10e44:	mov	r1, r4
   10e48:	mov	r0, r5
   10e4c:	add	r4, r4, #1
   10e50:	bgt	10e28 <main@@Base+0x11c>
   10e54:	movw	r0, #9916	; 0x26bc
   10e58:	movt	r0, #1
   10e5c:	bl	10ca0 <puts@plt>
   10e60:	mov	r0, r6
   10e64:	movw	r6, #9956	; 0x26e4
   10e68:	movt	r6, #1
   10e6c:	bl	11300 <grafo_apaga@@Base>
   10e70:	mov	r0, r5
   10e74:	bl	12000 <lista_apaga@@Base>
   10e78:	movw	r0, #9920	; 0x26c0
   10e7c:	movt	r0, #1
   10e80:	bl	10ca0 <puts@plt>
   10e84:	movw	r1, #9940	; 0x26d4
   10e88:	movt	r1, #1
   10e8c:	movw	r0, #9944	; 0x26d8
   10e90:	movt	r0, #1
   10e94:	bl	10c64 <fopen@plt>
   10e98:	mov	r5, r0
   10e9c:	bl	11fd0 <lista_nova@@Base>
   10ea0:	mov	r4, r0
   10ea4:	bl	11fd0 <lista_nova@@Base>
   10ea8:	mov	r7, r0
   10eac:	b	10ec4 <main@@Base+0x1b8>
   10eb0:	bl	12158 <lista_insere@@Base>
   10eb4:	mvn	r2, #0
   10eb8:	mov	r1, sp
   10ebc:	mov	r0, r7
   10ec0:	bl	12158 <lista_insere@@Base>
   10ec4:	add	r2, sp, #8
   10ec8:	mov	r1, r6
   10ecc:	mov	r3, sp
   10ed0:	mov	r0, r5
   10ed4:	bl	10c58 <__isoc99_fscanf@plt>
   10ed8:	cmp	r0, #2
   10edc:	mvn	r2, #0
   10ee0:	add	r1, sp, #8
   10ee4:	mov	r0, r4
   10ee8:	beq	10eb0 <main@@Base+0x1a4>
   10eec:	mov	r2, #4
   10ef0:	mov	r1, r7
   10ef4:	bl	11030 <_start@@Base+0xf0>
   10ef8:	cmp	r0, #0
   10efc:	beq	10f30 <main@@Base+0x224>
   10f00:	mov	r0, r4
   10f04:	bl	12000 <lista_apaga@@Base>
   10f08:	mov	r0, r7
   10f0c:	bl	12000 <lista_apaga@@Base>
   10f10:	mov	r0, r5
   10f14:	bl	10ce8 <fclose@plt>
   10f18:	mov	r0, #0
   10f1c:	add	sp, sp, #36	; 0x24
   10f20:	ldrd	r4, [sp]
   10f24:	ldrd	r6, [sp, #8]
   10f28:	add	sp, sp, #16
   10f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f30:	movw	r0, #9964	; 0x26ec
   10f34:	movt	r0, #1
   10f38:	bl	10ca0 <puts@plt>
   10f3c:	b	10f00 <main@@Base+0x1f4>

00010f40 <_start@@Base>:
   10f40:	mov	fp, #0
   10f44:	mov	lr, #0
   10f48:	pop	{r1}		; (ldr r1, [sp], #4)
   10f4c:	mov	r2, sp
   10f50:	push	{r2}		; (str r2, [sp, #-4]!)
   10f54:	push	{r0}		; (str r0, [sp, #-4]!)
   10f58:	ldr	ip, [pc, #16]	; 10f70 <_start@@Base+0x30>
   10f5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f60:	ldr	r0, [pc, #12]	; 10f74 <_start@@Base+0x34>
   10f64:	ldr	r3, [pc, #12]	; 10f78 <_start@@Base+0x38>
   10f68:	bl	10cb8 <__libc_start_main@plt>
   10f6c:	bl	10d00 <abort@plt>
   10f70:	andeq	r2, r1, r8, asr #12
   10f74:	andeq	r0, r1, ip, lsl #26
   10f78:	andeq	r2, r1, r8, ror #11
   10f7c:	ldr	r3, [pc, #20]	; 10f98 <_start@@Base+0x58>
   10f80:	ldr	r2, [pc, #20]	; 10f9c <_start@@Base+0x5c>
   10f84:	add	r3, pc, r3
   10f88:	ldr	r2, [r3, r2]
   10f8c:	cmp	r2, #0
   10f90:	bxeq	lr
   10f94:	b	10cc4 <__gmon_start__@plt>
   10f98:	andeq	r2, r1, r4, ror r0
   10f9c:	andeq	r0, r0, r8, asr r0
   10fa0:	ldr	r0, [pc, #24]	; 10fc0 <_start@@Base+0x80>
   10fa4:	ldr	r3, [pc, #24]	; 10fc4 <_start@@Base+0x84>
   10fa8:	cmp	r3, r0
   10fac:	bxeq	lr
   10fb0:	ldr	r3, [pc, #16]	; 10fc8 <_start@@Base+0x88>
   10fb4:	cmp	r3, #0
   10fb8:	bxeq	lr
   10fbc:	bx	r3
   10fc0:	andeq	r3, r2, r4, rrx
   10fc4:	andeq	r3, r2, r4, rrx
   10fc8:	andeq	r0, r0, r0
   10fcc:	ldr	r0, [pc, #36]	; 10ff8 <_start@@Base+0xb8>
   10fd0:	ldr	r1, [pc, #36]	; 10ffc <_start@@Base+0xbc>
   10fd4:	sub	r1, r1, r0
   10fd8:	asr	r1, r1, #2
   10fdc:	add	r1, r1, r1, lsr #31
   10fe0:	asrs	r1, r1, #1
   10fe4:	bxeq	lr
   10fe8:	ldr	r3, [pc, #16]	; 11000 <_start@@Base+0xc0>
   10fec:	cmp	r3, #0
   10ff0:	bxeq	lr
   10ff4:	bx	r3
   10ff8:	andeq	r3, r2, r4, rrx
   10ffc:	andeq	r3, r2, r4, rrx
   11000:	andeq	r0, r0, r0
   11004:	push	{r4, lr}
   11008:	ldr	r4, [pc, #24]	; 11028 <_start@@Base+0xe8>
   1100c:	ldrb	r3, [r4]
   11010:	cmp	r3, #0
   11014:	popne	{r4, pc}
   11018:	bl	10fa0 <_start@@Base+0x60>
   1101c:	mov	r3, #1
   11020:	strb	r3, [r4]
   11024:	pop	{r4, pc}
   11028:	andeq	r3, r2, r4, rrx
   1102c:	b	10fcc <_start@@Base+0x8c>
   11030:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11034:	mov	r5, r2
   11038:	strd	r6, [sp, #8]
   1103c:	mov	r6, r0
   11040:	mov	r0, r2
   11044:	strd	r8, [sp, #16]
   11048:	mov	r7, r1
   1104c:	str	lr, [sp, #24]
   11050:	sub	sp, sp, #28
   11054:	bl	11ac8 <heap_nova@@Base>
   11058:	cmp	r5, #0
   1105c:	mov	r8, r0
   11060:	ble	110f8 <_start@@Base+0x1b8>
   11064:	mov	r4, #0
   11068:	b	11070 <_start@@Base+0x130>
   1106c:	mov	r4, r3
   11070:	mov	r1, r4
   11074:	mov	r0, r6
   11078:	bl	12070 <lista_elemento@@Base>
   1107c:	mov	r1, r0
   11080:	add	r0, sp, #4
   11084:	bl	10c94 <strcpy@plt>
   11088:	mov	r1, r4
   1108c:	mov	r0, r7
   11090:	bl	12070 <lista_elemento@@Base>
   11094:	mov	r2, #10
   11098:	mov	r1, #0
   1109c:	bl	10c40 <strtol@plt>
   110a0:	mov	r2, r0
   110a4:	add	r1, sp, #4
   110a8:	mov	r0, r8
   110ac:	bl	11c40 <heap_insere@@Base>
   110b0:	add	r3, r4, #1
   110b4:	cmp	r5, r3
   110b8:	bne	1106c <_start@@Base+0x12c>
   110bc:	mov	r5, #0
   110c0:	movw	r9, #9816	; 0x2658
   110c4:	movt	r9, #1
   110c8:	mov	r6, r5
   110cc:	ldr	r3, [r8, #8]
   110d0:	add	r7, r6, #1
   110d4:	mov	r0, r9
   110d8:	mov	r1, r7
   110dc:	ldr	r3, [r3, r5]
   110e0:	add	r5, r5, #4
   110e4:	ldr	r2, [r3, #4]
   110e8:	bl	10c4c <printf@plt>
   110ec:	cmp	r4, r6
   110f0:	mov	r6, r7
   110f4:	bne	110cc <_start@@Base+0x18c>
   110f8:	mov	r0, r8
   110fc:	bl	11b30 <heap_apaga@@Base>
   11100:	mov	r0, #1
   11104:	add	sp, sp, #28
   11108:	ldrd	r4, [sp]
   1110c:	ldrd	r6, [sp, #8]
   11110:	ldrd	r8, [sp, #16]
   11114:	add	sp, sp, #24
   11118:	pop	{pc}		; (ldr pc, [sp], #4)

0001111c <descobre_caminho@@Base>:
   1111c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11120:	mov	r4, r1
   11124:	strd	r6, [sp, #8]
   11128:	strd	r8, [sp, #16]
   1112c:	mov	r8, r0
   11130:	strd	sl, [sp, #24]
   11134:	mov	sl, r3
   11138:	str	lr, [sp, #32]
   1113c:	sub	sp, sp, #20
   11140:	str	r2, [sp, #4]
   11144:	bl	11fd0 <lista_nova@@Base>
   11148:	mov	r6, r0
   1114c:	add	r3, sp, #12
   11150:	mov	r1, r4
   11154:	mov	r2, sl
   11158:	mov	r0, r8
   1115c:	bl	118f8 <grafo_bfs@@Base>
   11160:	ldr	r3, [sp, #12]
   11164:	mov	r9, r0
   11168:	cmp	r3, #0
   1116c:	ble	111b4 <descobre_caminho@@Base+0x98>
   11170:	movw	r7, #9824	; 0x2660
   11174:	movt	r7, #1
   11178:	sub	fp, r0, #4
   1117c:	mov	r5, #0
   11180:	add	r4, sp, #8
   11184:	mov	r1, r7
   11188:	mov	r0, r4
   1118c:	ldr	r2, [fp, #4]!
   11190:	bl	10cf4 <sprintf@plt>
   11194:	mvn	r2, #0
   11198:	mov	r1, r4
   1119c:	mov	r0, r6
   111a0:	add	r5, r5, #1
   111a4:	bl	12158 <lista_insere@@Base>
   111a8:	ldr	r2, [sp, #12]
   111ac:	cmp	r2, r5
   111b0:	bgt	11184 <descobre_caminho@@Base+0x68>
   111b4:	add	r3, sp, #12
   111b8:	mov	r1, sl
   111bc:	ldr	r2, [sp, #4]
   111c0:	mov	r0, r8
   111c4:	bl	118f8 <grafo_bfs@@Base>
   111c8:	ldr	r3, [sp, #12]
   111cc:	mov	sl, r0
   111d0:	cmp	r3, #1
   111d4:	ble	1121c <descobre_caminho@@Base+0x100>
   111d8:	movw	r8, #9824	; 0x2660
   111dc:	movt	r8, #1
   111e0:	mov	r7, r0
   111e4:	mov	r5, #1
   111e8:	add	r4, sp, #8
   111ec:	mov	r1, r8
   111f0:	mov	r0, r4
   111f4:	ldr	r2, [r7, #4]!
   111f8:	bl	10cf4 <sprintf@plt>
   111fc:	mvn	r2, #0
   11200:	mov	r1, r4
   11204:	mov	r0, r6
   11208:	add	r5, r5, #1
   1120c:	bl	12158 <lista_insere@@Base>
   11210:	ldr	r3, [sp, #12]
   11214:	cmp	r3, r5
   11218:	bgt	111ec <descobre_caminho@@Base+0xd0>
   1121c:	mov	r0, sl
   11220:	bl	10c70 <free@plt>
   11224:	mov	r0, r9
   11228:	bl	10c70 <free@plt>
   1122c:	mov	r0, r6
   11230:	add	sp, sp, #20
   11234:	ldrd	r4, [sp]
   11238:	ldrd	r6, [sp, #8]
   1123c:	ldrd	r8, [sp, #16]
   11240:	ldrd	sl, [sp, #24]
   11244:	add	sp, sp, #32
   11248:	pop	{pc}		; (ldr pc, [sp], #4)

0001124c <simula_acontecimentos@@Base>:
   1124c:	cmp	r2, #20
   11250:	ble	1125c <simula_acontecimentos@@Base+0x10>
   11254:	mov	r0, #0
   11258:	bx	lr
   1125c:	b	11030 <_start@@Base+0xf0>

00011260 <cria_no@@Base>:
   11260:	str	r4, [sp, #-8]!
   11264:	mov	r4, r0
   11268:	mov	r0, #8
   1126c:	str	lr, [sp, #4]
   11270:	bl	10cac <malloc@plt>
   11274:	cmp	r0, #0
   11278:	beq	11288 <cria_no@@Base+0x28>
   1127c:	mov	r3, #0
   11280:	str	r4, [r0]
   11284:	str	r3, [r0, #4]
   11288:	ldr	r4, [sp]
   1128c:	add	sp, sp, #4
   11290:	pop	{pc}		; (ldr pc, [sp], #4)

00011294 <grafo_novo@@Base>:
   11294:	strd	r4, [sp, #-16]!
   11298:	mov	r5, r0
   1129c:	mov	r0, #12
   112a0:	str	r6, [sp, #8]
   112a4:	mov	r6, r1
   112a8:	str	lr, [sp, #12]
   112ac:	bl	10cac <malloc@plt>
   112b0:	subs	r4, r0, #0
   112b4:	beq	112dc <grafo_novo@@Base+0x48>
   112b8:	mov	r0, r5
   112bc:	mov	r1, #8
   112c0:	str	r6, [r4]
   112c4:	str	r5, [r4, #4]
   112c8:	bl	10c28 <calloc@plt>
   112cc:	cmp	r0, #0
   112d0:	mov	r3, r0
   112d4:	str	r0, [r4, #8]
   112d8:	beq	112f0 <grafo_novo@@Base+0x5c>
   112dc:	mov	r0, r4
   112e0:	ldrd	r4, [sp]
   112e4:	ldr	r6, [sp, #8]
   112e8:	add	sp, sp, #12
   112ec:	pop	{pc}		; (ldr pc, [sp], #4)
   112f0:	mov	r0, r4
   112f4:	mov	r4, r3
   112f8:	bl	10c70 <free@plt>
   112fc:	b	112dc <grafo_novo@@Base+0x48>

00011300 <grafo_apaga@@Base>:
   11300:	strd	r4, [sp, #-16]!
   11304:	subs	r5, r0, #0
   11308:	str	r6, [sp, #8]
   1130c:	str	lr, [sp, #12]
   11310:	beq	11394 <grafo_apaga@@Base+0x94>
   11314:	ldr	r2, [r5, #8]
   11318:	cmp	r2, #0
   1131c:	beq	1137c <grafo_apaga@@Base+0x7c>
   11320:	ldr	r1, [r5, #4]
   11324:	cmp	r1, #0
   11328:	movgt	r6, #0
   1132c:	ble	11374 <grafo_apaga@@Base+0x74>
   11330:	lsl	r4, r6, #3
   11334:	add	r3, r2, r4
   11338:	ldr	r0, [r3, #4]
   1133c:	cmp	r0, #0
   11340:	beq	11368 <grafo_apaga@@Base+0x68>
   11344:	ldr	r2, [r0, #4]
   11348:	str	r2, [r3, #4]
   1134c:	bl	10c70 <free@plt>
   11350:	ldr	r2, [r5, #8]
   11354:	add	r3, r2, r4
   11358:	ldr	r0, [r3, #4]
   1135c:	cmp	r0, #0
   11360:	bne	11344 <grafo_apaga@@Base+0x44>
   11364:	ldr	r1, [r5, #4]
   11368:	add	r6, r6, #1
   1136c:	cmp	r1, r6
   11370:	bgt	11330 <grafo_apaga@@Base+0x30>
   11374:	mov	r0, r2
   11378:	bl	10c70 <free@plt>
   1137c:	mov	r0, r5
   11380:	ldrd	r4, [sp]
   11384:	ldr	r6, [sp, #8]
   11388:	ldr	lr, [sp, #12]
   1138c:	add	sp, sp, #16
   11390:	b	10c70 <free@plt>
   11394:	ldrd	r4, [sp]
   11398:	ldr	r6, [sp, #8]
   1139c:	add	sp, sp, #12
   113a0:	pop	{pc}		; (ldr pc, [sp], #4)

000113a4 <grafo_adiciona@@Base>:
   113a4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   113a8:	strd	r6, [sp, #8]
   113ac:	subs	r6, r0, #0
   113b0:	strd	r8, [sp, #16]
   113b4:	str	sl, [sp, #24]
   113b8:	str	lr, [sp, #28]
   113bc:	beq	11438 <grafo_adiciona@@Base+0x94>
   113c0:	ldr	r8, [r6, #8]
   113c4:	add	r9, r8, r1, lsl #3
   113c8:	ldr	r5, [r9, #4]
   113cc:	cmp	r5, #0
   113d0:	beq	11400 <grafo_adiciona@@Base+0x5c>
   113d4:	ldr	r3, [r5]
   113d8:	cmp	r2, r3
   113dc:	beq	11438 <grafo_adiciona@@Base+0x94>
   113e0:	mov	r3, r5
   113e4:	b	113f4 <grafo_adiciona@@Base+0x50>
   113e8:	ldr	ip, [r3]
   113ec:	cmp	r2, ip
   113f0:	beq	11438 <grafo_adiciona@@Base+0x94>
   113f4:	ldr	r3, [r3, #4]
   113f8:	cmp	r3, #0
   113fc:	bne	113e8 <grafo_adiciona@@Base+0x44>
   11400:	mov	r0, #8
   11404:	mov	r4, r2
   11408:	mov	r7, r1
   1140c:	bl	10cac <malloc@plt>
   11410:	cmp	r0, #0
   11414:	beq	1148c <grafo_adiciona@@Base+0xe8>
   11418:	ldr	r3, [r8, r7, lsl #3]
   1141c:	strd	r4, [r0]
   11420:	ldr	r2, [r6]
   11424:	str	r0, [r9, #4]
   11428:	add	r3, r3, #1
   1142c:	cmp	r2, #0
   11430:	str	r3, [r8, r7, lsl #3]
   11434:	beq	11450 <grafo_adiciona@@Base+0xac>
   11438:	ldrd	r4, [sp]
   1143c:	ldrd	r6, [sp, #8]
   11440:	ldrd	r8, [sp, #16]
   11444:	ldr	sl, [sp, #24]
   11448:	add	sp, sp, #28
   1144c:	pop	{pc}		; (ldr pc, [sp], #4)
   11450:	mov	r0, #8
   11454:	bl	10cac <malloc@plt>
   11458:	add	r2, r8, r4, lsl #3
   1145c:	cmp	r0, #0
   11460:	ldr	r1, [r2, #4]
   11464:	beq	11484 <grafo_adiciona@@Base+0xe0>
   11468:	ldr	r3, [r8, r4, lsl #3]
   1146c:	str	r7, [r0]
   11470:	str	r1, [r0, #4]
   11474:	str	r0, [r2, #4]
   11478:	add	r3, r3, #1
   1147c:	str	r3, [r8, r4, lsl #3]
   11480:	b	11438 <grafo_adiciona@@Base+0x94>
   11484:	str	r1, [r0, #4]
   11488:	udf	#0
   1148c:	str	r5, [r0, #4]
   11490:	udf	#0

00011494 <grafo_remove@@Base>:
   11494:	strd	r4, [sp, #-16]!
   11498:	str	r6, [sp, #8]
   1149c:	subs	r6, r0, #0
   114a0:	str	lr, [sp, #12]
   114a4:	beq	11558 <grafo_remove@@Base+0xc4>
   114a8:	ldr	ip, [r6, #8]
   114ac:	add	ip, ip, r1, lsl #3
   114b0:	ldr	lr, [ip, #4]
   114b4:	cmp	lr, #0
   114b8:	beq	11558 <grafo_remove@@Base+0xc4>
   114bc:	mov	r4, r2
   114c0:	ldrd	r2, [lr]
   114c4:	mov	r5, r1
   114c8:	cmp	r2, r4
   114cc:	beq	115b8 <grafo_remove@@Base+0x124>
   114d0:	cmp	r3, #0
   114d4:	beq	114f8 <grafo_remove@@Base+0x64>
   114d8:	ldr	r2, [r3]
   114dc:	cmp	r4, r2
   114e0:	bne	11578 <grafo_remove@@Base+0xe4>
   114e4:	mov	r0, r3
   114e8:	mov	r3, lr
   114ec:	ldr	r2, [r0, #4]
   114f0:	str	r2, [r3, #4]
   114f4:	bl	10c70 <free@plt>
   114f8:	ldr	r3, [r6]
   114fc:	cmp	r3, #0
   11500:	bne	11558 <grafo_remove@@Base+0xc4>
   11504:	ldr	r2, [r6, #8]
   11508:	add	r4, r2, r4, lsl #3
   1150c:	ldr	r2, [r4, #4]
   11510:	ldm	r2, {r1, r3}
   11514:	cmp	r1, r5
   11518:	moveq	r0, r2
   1151c:	streq	r3, [r4, #4]
   11520:	beq	115a4 <grafo_remove@@Base+0x110>
   11524:	cmp	r3, #0
   11528:	beq	11558 <grafo_remove@@Base+0xc4>
   1152c:	ldr	r1, [r3]
   11530:	cmp	r1, r5
   11534:	bne	1154c <grafo_remove@@Base+0xb8>
   11538:	b	11594 <grafo_remove@@Base+0x100>
   1153c:	ldr	r2, [r0]
   11540:	cmp	r2, r5
   11544:	beq	1159c <grafo_remove@@Base+0x108>
   11548:	mov	r3, r0
   1154c:	ldr	r0, [r3, #4]
   11550:	cmp	r0, #0
   11554:	bne	1153c <grafo_remove@@Base+0xa8>
   11558:	ldrd	r4, [sp]
   1155c:	ldr	r6, [sp, #8]
   11560:	add	sp, sp, #12
   11564:	pop	{pc}		; (ldr pc, [sp], #4)
   11568:	ldr	ip, [r0]
   1156c:	cmp	ip, r4
   11570:	beq	114ec <grafo_remove@@Base+0x58>
   11574:	mov	r3, r0
   11578:	ldr	r0, [r3, #4]
   1157c:	cmp	r0, #0
   11580:	bne	11568 <grafo_remove@@Base+0xd4>
   11584:	ldr	r3, [r6]
   11588:	cmp	r3, #0
   1158c:	bne	11558 <grafo_remove@@Base+0xc4>
   11590:	b	11504 <grafo_remove@@Base+0x70>
   11594:	mov	r0, r3
   11598:	mov	r3, r2
   1159c:	ldr	r2, [r0, #4]
   115a0:	str	r2, [r3, #4]
   115a4:	ldrd	r4, [sp]
   115a8:	ldr	r6, [sp, #8]
   115ac:	ldr	lr, [sp, #12]
   115b0:	add	sp, sp, #16
   115b4:	b	10c70 <free@plt>
   115b8:	mov	r0, lr
   115bc:	str	r3, [ip, #4]
   115c0:	bl	10c70 <free@plt>
   115c4:	ldr	r3, [r6]
   115c8:	cmp	r3, #0
   115cc:	bne	11558 <grafo_remove@@Base+0xc4>
   115d0:	b	11504 <grafo_remove@@Base+0x70>

000115d4 <grafo_existe@@Base>:
   115d4:	cmp	r0, #0
   115d8:	beq	11620 <grafo_existe@@Base+0x4c>
   115dc:	ldr	r3, [r0, #8]
   115e0:	add	r3, r3, r1, lsl #3
   115e4:	ldr	r0, [r3, #4]
   115e8:	cmp	r0, #0
   115ec:	beq	11620 <grafo_existe@@Base+0x4c>
   115f0:	ldr	r3, [r0]
   115f4:	cmp	r2, r3
   115f8:	bne	1160c <grafo_existe@@Base+0x38>
   115fc:	b	1161c <grafo_existe@@Base+0x48>
   11600:	ldr	r3, [r0]
   11604:	cmp	r3, r2
   11608:	beq	1161c <grafo_existe@@Base+0x48>
   1160c:	ldr	r0, [r0, #4]
   11610:	cmp	r0, #0
   11614:	bne	11600 <grafo_existe@@Base+0x2c>
   11618:	bx	lr
   1161c:	mov	r0, #1
   11620:	bx	lr

00011624 <grafo_imprime@@Base>:
   11624:	ldr	r3, [r0, #4]
   11628:	cmp	r3, #0
   1162c:	bxle	lr
   11630:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11634:	mov	r5, #0
   11638:	strd	r6, [sp, #8]
   1163c:	movw	r6, #10000	; 0x2710
   11640:	movt	r6, #1
   11644:	mov	r7, r0
   11648:	strd	r8, [sp, #16]
   1164c:	movw	r8, #9992	; 0x2708
   11650:	movt	r8, #1
   11654:	movw	r9, #9824	; 0x2660
   11658:	movt	r9, #1
   1165c:	str	sl, [sp, #24]
   11660:	str	lr, [sp, #28]
   11664:	b	11680 <grafo_imprime@@Base+0x5c>
   11668:	mov	r0, #10
   1166c:	add	r5, r5, #1
   11670:	bl	10cdc <putchar@plt>
   11674:	ldr	r3, [r7, #4]
   11678:	cmp	r3, r5
   1167c:	ble	116c4 <grafo_imprime@@Base+0xa0>
   11680:	ldr	r3, [r7, #8]
   11684:	mov	r1, r5
   11688:	mov	r0, r8
   1168c:	add	r3, r3, r5, lsl #3
   11690:	ldr	r4, [r3, #4]
   11694:	bl	10c4c <printf@plt>
   11698:	cmp	r4, #0
   1169c:	beq	11668 <grafo_imprime@@Base+0x44>
   116a0:	mov	r0, r9
   116a4:	b	116ac <grafo_imprime@@Base+0x88>
   116a8:	mov	r0, r6
   116ac:	ldr	r1, [r4]
   116b0:	bl	10c4c <printf@plt>
   116b4:	ldr	r4, [r4, #4]
   116b8:	cmp	r4, #0
   116bc:	bne	116a8 <grafo_imprime@@Base+0x84>
   116c0:	b	11668 <grafo_imprime@@Base+0x44>
   116c4:	ldrd	r4, [sp]
   116c8:	ldrd	r6, [sp, #8]
   116cc:	ldrd	r8, [sp, #16]
   116d0:	ldr	sl, [sp, #24]
   116d4:	add	sp, sp, #28
   116d8:	pop	{pc}		; (ldr pc, [sp], #4)

000116dc <dfs_helper@@Base>:
   116dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   116e0:	strd	r6, [sp, #8]
   116e4:	strd	r8, [sp, #16]
   116e8:	strd	sl, [sp, #24]
   116ec:	str	lr, [sp, #32]
   116f0:	sub	sp, sp, #12
   116f4:	ldr	r8, [sp, #48]	; 0x30
   116f8:	ldr	r9, [r8, r1, lsl #2]
   116fc:	cmp	r9, #0
   11700:	movne	r9, #0
   11704:	bne	1178c <dfs_helper@@Base+0xb0>
   11708:	cmp	r1, r2
   1170c:	str	r3, [r8, r1, lsl #2]
   11710:	moveq	r9, r3
   11714:	beq	1178c <dfs_helper@@Base+0xb0>
   11718:	mov	r6, r1
   1171c:	ldr	r1, [r0, #4]
   11720:	mov	fp, r2
   11724:	mov	r5, r0
   11728:	cmp	r1, #0
   1172c:	ble	11784 <dfs_helper@@Base+0xa8>
   11730:	lsl	sl, r6, #3
   11734:	add	r7, r3, #1
   11738:	mov	r4, r9
   1173c:	ldr	r3, [r5, #8]
   11740:	add	r3, r3, sl
   11744:	ldr	r3, [r3, #4]
   11748:	cmp	r3, #0
   1174c:	beq	11778 <dfs_helper@@Base+0x9c>
   11750:	ldr	r2, [r3]
   11754:	cmp	r4, r2
   11758:	bne	1176c <dfs_helper@@Base+0x90>
   1175c:	b	117ac <dfs_helper@@Base+0xd0>
   11760:	ldr	r2, [r3]
   11764:	cmp	r2, r4
   11768:	beq	117ac <dfs_helper@@Base+0xd0>
   1176c:	ldr	r3, [r3, #4]
   11770:	cmp	r3, #0
   11774:	bne	11760 <dfs_helper@@Base+0x84>
   11778:	add	r4, r4, #1
   1177c:	cmp	r1, r4
   11780:	bgt	1173c <dfs_helper@@Base+0x60>
   11784:	mov	r3, #0
   11788:	str	r3, [r8, r6, lsl #2]
   1178c:	mov	r0, r9
   11790:	add	sp, sp, #12
   11794:	ldrd	r4, [sp]
   11798:	ldrd	r6, [sp, #8]
   1179c:	ldrd	r8, [sp, #16]
   117a0:	ldrd	sl, [sp, #24]
   117a4:	add	sp, sp, #32
   117a8:	pop	{pc}		; (ldr pc, [sp], #4)
   117ac:	mov	r3, r7
   117b0:	mov	r2, fp
   117b4:	str	r8, [sp]
   117b8:	mov	r1, r4
   117bc:	mov	r0, r5
   117c0:	bl	116dc <dfs_helper@@Base>
   117c4:	cmp	r0, #0
   117c8:	bne	117e0 <dfs_helper@@Base+0x104>
   117cc:	ldr	r1, [r5, #4]
   117d0:	add	r4, r4, #1
   117d4:	cmp	r1, r4
   117d8:	bgt	1173c <dfs_helper@@Base+0x60>
   117dc:	b	11784 <dfs_helper@@Base+0xa8>
   117e0:	mov	r9, r0
   117e4:	b	1178c <dfs_helper@@Base+0xb0>

000117e8 <grafo_dfs@@Base>:
   117e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   117ec:	strd	r6, [sp, #8]
   117f0:	subs	r7, r0, #0
   117f4:	str	r8, [sp, #16]
   117f8:	moveq	r8, r7
   117fc:	str	lr, [sp, #20]
   11800:	sub	sp, sp, #8
   11804:	beq	118b4 <grafo_dfs@@Base+0xcc>
   11808:	mov	r6, r1
   1180c:	mov	r1, #4
   11810:	ldr	r0, [r7, #4]
   11814:	mov	r5, r3
   11818:	mov	r8, r2
   1181c:	bl	10c28 <calloc@plt>
   11820:	mov	r4, r0
   11824:	mov	r1, r6
   11828:	mov	r2, r8
   1182c:	mov	r3, #1
   11830:	mov	r0, r7
   11834:	str	r4, [sp]
   11838:	bl	116dc <dfs_helper@@Base>
   1183c:	subs	r6, r0, #0
   11840:	beq	118e4 <grafo_dfs@@Base+0xfc>
   11844:	mov	r1, #4
   11848:	bl	10c28 <calloc@plt>
   1184c:	cmp	r6, #0
   11850:	mov	r8, r0
   11854:	ble	118a8 <grafo_dfs@@Base+0xc0>
   11858:	ldr	lr, [r7, #4]
   1185c:	mov	ip, #0
   11860:	sub	r3, r0, #4
   11864:	cmp	lr, #0
   11868:	add	ip, ip, #1
   1186c:	ble	118a0 <grafo_dfs@@Base+0xb8>
   11870:	ldr	r2, [r4]
   11874:	cmp	ip, r2
   11878:	movne	r1, r4
   1187c:	movne	r2, #0
   11880:	bne	11894 <grafo_dfs@@Base+0xac>
   11884:	b	118d0 <grafo_dfs@@Base+0xe8>
   11888:	ldr	r0, [r1, #4]!
   1188c:	cmp	r0, ip
   11890:	beq	118d4 <grafo_dfs@@Base+0xec>
   11894:	add	r2, r2, #1
   11898:	cmp	r2, lr
   1189c:	bne	11888 <grafo_dfs@@Base+0xa0>
   118a0:	cmp	r6, ip
   118a4:	bne	11864 <grafo_dfs@@Base+0x7c>
   118a8:	mov	r0, r4
   118ac:	str	r6, [r5]
   118b0:	bl	10c70 <free@plt>
   118b4:	mov	r0, r8
   118b8:	add	sp, sp, #8
   118bc:	ldrd	r4, [sp]
   118c0:	ldrd	r6, [sp, #8]
   118c4:	ldr	r8, [sp, #16]
   118c8:	add	sp, sp, #20
   118cc:	pop	{pc}		; (ldr pc, [sp], #4)
   118d0:	mov	r2, #0
   118d4:	cmp	r6, ip
   118d8:	str	r2, [r3, ip, lsl #2]
   118dc:	bne	11864 <grafo_dfs@@Base+0x7c>
   118e0:	b	118a8 <grafo_dfs@@Base+0xc0>
   118e4:	mov	r0, r4
   118e8:	mov	r8, r6
   118ec:	bl	10c70 <free@plt>
   118f0:	str	r6, [r5]
   118f4:	b	118b4 <grafo_dfs@@Base+0xcc>

000118f8 <grafo_bfs@@Base>:
   118f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   118fc:	strd	r6, [sp, #8]
   11900:	subs	r6, r0, #0
   11904:	moveq	r7, r6
   11908:	strd	r8, [sp, #16]
   1190c:	strd	sl, [sp, #24]
   11910:	str	lr, [sp, #32]
   11914:	sub	sp, sp, #4
   11918:	beq	11a44 <grafo_bfs@@Base+0x14c>
   1191c:	ldr	r4, [r6, #4]
   11920:	mov	r5, r1
   11924:	mov	r1, #4
   11928:	mov	r9, r2
   1192c:	mov	r8, r3
   11930:	mov	r0, r4
   11934:	bl	10c28 <calloc@plt>
   11938:	mov	sl, r0
   1193c:	mov	r1, #4
   11940:	mov	r0, r4
   11944:	bl	10c28 <calloc@plt>
   11948:	cmp	r4, #0
   1194c:	mov	fp, r0
   11950:	addgt	r1, sl, r4, lsl #2
   11954:	movgt	r3, sl
   11958:	mvngt	r2, #0
   1195c:	ble	1196c <grafo_bfs@@Base+0x74>
   11960:	str	r2, [r3], #4
   11964:	cmp	r1, r3
   11968:	bne	11960 <grafo_bfs@@Base+0x68>
   1196c:	mov	ip, #1
   11970:	mov	lr, #0
   11974:	str	r5, [sl, r5, lsl #2]
   11978:	str	r5, [fp]
   1197c:	add	lr, lr, #1
   11980:	cmp	r4, #0
   11984:	sdiv	r3, lr, r4
   11988:	mls	lr, r4, r3, lr
   1198c:	ble	119e0 <grafo_bfs@@Base+0xe8>
   11990:	ldr	r3, [r6, #8]
   11994:	mov	r0, #0
   11998:	add	r3, r3, r5, lsl #3
   1199c:	ldr	r2, [r3, #4]
   119a0:	cmp	r2, #0
   119a4:	beq	119d4 <grafo_bfs@@Base+0xdc>
   119a8:	ldr	r3, [r2]
   119ac:	cmp	r3, r0
   119b0:	beq	119f0 <grafo_bfs@@Base+0xf8>
   119b4:	mov	r3, r2
   119b8:	b	119c8 <grafo_bfs@@Base+0xd0>
   119bc:	ldr	r1, [r3]
   119c0:	cmp	r1, r0
   119c4:	beq	119f0 <grafo_bfs@@Base+0xf8>
   119c8:	ldr	r3, [r3, #4]
   119cc:	cmp	r3, #0
   119d0:	bne	119bc <grafo_bfs@@Base+0xc4>
   119d4:	add	r0, r0, #1
   119d8:	cmp	r4, r0
   119dc:	bne	119a0 <grafo_bfs@@Base+0xa8>
   119e0:	cmp	lr, ip
   119e4:	beq	11a20 <grafo_bfs@@Base+0x128>
   119e8:	ldr	r5, [fp, lr, lsl #2]
   119ec:	b	1197c <grafo_bfs@@Base+0x84>
   119f0:	ldr	r3, [sl, r0, lsl #2]
   119f4:	cmn	r3, #1
   119f8:	bne	119d4 <grafo_bfs@@Base+0xdc>
   119fc:	add	r3, ip, #1
   11a00:	str	r0, [fp, ip, lsl #2]
   11a04:	str	r5, [sl, r0, lsl #2]
   11a08:	add	r0, r0, #1
   11a0c:	sdiv	ip, r3, r4
   11a10:	cmp	r4, r0
   11a14:	mls	ip, r4, ip, r3
   11a18:	bne	119a0 <grafo_bfs@@Base+0xa8>
   11a1c:	b	119e0 <grafo_bfs@@Base+0xe8>
   11a20:	ldr	r5, [sl, r9, lsl #2]
   11a24:	cmp	r5, #0
   11a28:	movlt	r6, #0
   11a2c:	bge	11a64 <grafo_bfs@@Base+0x16c>
   11a30:	mov	r0, fp
   11a34:	bl	10c70 <free@plt>
   11a38:	mov	r0, sl
   11a3c:	bl	10c70 <free@plt>
   11a40:	str	r6, [r8]
   11a44:	mov	r0, r7
   11a48:	add	sp, sp, #4
   11a4c:	ldrd	r4, [sp]
   11a50:	ldrd	r6, [sp, #8]
   11a54:	ldrd	r8, [sp, #16]
   11a58:	ldrd	sl, [sp, #24]
   11a5c:	add	sp, sp, #32
   11a60:	pop	{pc}		; (ldr pc, [sp], #4)
   11a64:	cmp	r5, r9
   11a68:	beq	11ab8 <grafo_bfs@@Base+0x1c0>
   11a6c:	mov	r3, r5
   11a70:	mov	r6, #1
   11a74:	ldr	r2, [sl, r3, lsl #2]
   11a78:	add	r6, r6, #1
   11a7c:	cmp	r2, r3
   11a80:	mov	r3, r2
   11a84:	bne	11a74 <grafo_bfs@@Base+0x17c>
   11a88:	lsl	r4, r6, #2
   11a8c:	mov	r0, r4
   11a90:	bl	10cac <malloc@plt>
   11a94:	mov	r7, r0
   11a98:	add	r3, r0, r4
   11a9c:	b	11aa4 <grafo_bfs@@Base+0x1ac>
   11aa0:	ldr	r5, [sl, r5, lsl #2]
   11aa4:	str	r9, [r3, #-4]!
   11aa8:	cmp	r3, r7
   11aac:	mov	r9, r5
   11ab0:	bne	11aa0 <grafo_bfs@@Base+0x1a8>
   11ab4:	b	11a30 <grafo_bfs@@Base+0x138>
   11ab8:	mov	r0, #4
   11abc:	mov	r6, #1
   11ac0:	mov	r4, r0
   11ac4:	b	11a90 <grafo_bfs@@Base+0x198>

00011ac8 <heap_nova@@Base>:
   11ac8:	strd	r4, [sp, #-16]!
   11acc:	mov	r5, r0
   11ad0:	mov	r0, #12
   11ad4:	str	r6, [sp, #8]
   11ad8:	str	lr, [sp, #12]
   11adc:	bl	10cac <malloc@plt>
   11ae0:	subs	r4, r0, #0
   11ae4:	beq	11b0c <heap_nova@@Base+0x44>
   11ae8:	mov	r3, #0
   11aec:	mov	r0, r5
   11af0:	mov	r1, #4
   11af4:	stm	r4, {r3, r5}
   11af8:	bl	10c28 <calloc@plt>
   11afc:	cmp	r0, #0
   11b00:	mov	r3, r0
   11b04:	str	r0, [r4, #8]
   11b08:	beq	11b20 <heap_nova@@Base+0x58>
   11b0c:	mov	r0, r4
   11b10:	ldrd	r4, [sp]
   11b14:	ldr	r6, [sp, #8]
   11b18:	add	sp, sp, #12
   11b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b20:	mov	r0, r4
   11b24:	mov	r4, r3
   11b28:	bl	10c70 <free@plt>
   11b2c:	b	11b0c <heap_nova@@Base+0x44>

00011b30 <heap_apaga@@Base>:
   11b30:	strd	r4, [sp, #-16]!
   11b34:	subs	r5, r0, #0
   11b38:	str	r6, [sp, #8]
   11b3c:	str	lr, [sp, #12]
   11b40:	beq	11ba8 <heap_apaga@@Base+0x78>
   11b44:	ldr	r3, [r5]
   11b48:	ldr	r0, [r5, #8]
   11b4c:	cmp	r3, #0
   11b50:	ble	11b8c <heap_apaga@@Base+0x5c>
   11b54:	mov	r4, #0
   11b58:	mov	r6, r4
   11b5c:	ldr	r3, [r0, r4, lsl #2]
   11b60:	ldr	r0, [r3, #4]
   11b64:	bl	10c70 <free@plt>
   11b68:	ldr	r3, [r5, #8]
   11b6c:	ldr	r0, [r3, r4, lsl #2]
   11b70:	bl	10c70 <free@plt>
   11b74:	ldr	r3, [r5]
   11b78:	ldr	r0, [r5, #8]
   11b7c:	str	r6, [r0, r4, lsl #2]
   11b80:	add	r4, r4, #1
   11b84:	cmp	r3, r4
   11b88:	bgt	11b5c <heap_apaga@@Base+0x2c>
   11b8c:	bl	10c70 <free@plt>
   11b90:	mov	r0, r5
   11b94:	ldrd	r4, [sp]
   11b98:	ldr	r6, [sp, #8]
   11b9c:	ldr	lr, [sp, #12]
   11ba0:	add	sp, sp, #16
   11ba4:	b	10c70 <free@plt>
   11ba8:	ldrd	r4, [sp]
   11bac:	ldr	r6, [sp, #8]
   11bb0:	add	sp, sp, #12
   11bb4:	pop	{pc}		; (ldr pc, [sp], #4)

00011bb8 <elemento_cria@@Base>:
   11bb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11bbc:	mov	r5, r1
   11bc0:	strd	r6, [sp, #8]
   11bc4:	mov	r7, r0
   11bc8:	mov	r0, #8
   11bcc:	str	r8, [sp, #16]
   11bd0:	str	lr, [sp, #20]
   11bd4:	bl	10cac <malloc@plt>
   11bd8:	subs	r4, r0, #0
   11bdc:	beq	11c18 <elemento_cria@@Base+0x60>
   11be0:	mov	r0, r5
   11be4:	bl	10cd0 <strlen@plt>
   11be8:	add	r6, r0, #1
   11bec:	mov	r1, #1
   11bf0:	mov	r0, r6
   11bf4:	bl	10c28 <calloc@plt>
   11bf8:	cmp	r0, #0
   11bfc:	mov	r3, r0
   11c00:	str	r0, [r4, #4]
   11c04:	beq	11c30 <elemento_cria@@Base+0x78>
   11c08:	mov	r2, r6
   11c0c:	mov	r1, r5
   11c10:	bl	10c7c <memcpy@plt>
   11c14:	str	r7, [r4]
   11c18:	mov	r0, r4
   11c1c:	ldrd	r4, [sp]
   11c20:	ldrd	r6, [sp, #8]
   11c24:	ldr	r8, [sp, #16]
   11c28:	add	sp, sp, #20
   11c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c30:	mov	r0, r4
   11c34:	mov	r4, r3
   11c38:	bl	10c70 <free@plt>
   11c3c:	b	11c18 <elemento_cria@@Base+0x60>

00011c40 <heap_insere@@Base>:
   11c40:	ldr	ip, [r0]
   11c44:	ldr	r3, [r0, #4]
   11c48:	cmp	ip, r3
   11c4c:	blt	11c58 <heap_insere@@Base+0x18>
   11c50:	mov	r0, #0
   11c54:	bx	lr
   11c58:	strd	r4, [sp, #-16]!
   11c5c:	mov	r4, r0
   11c60:	mov	r0, r2
   11c64:	str	r6, [sp, #8]
   11c68:	str	lr, [sp, #12]
   11c6c:	bl	11bb8 <elemento_cria@@Base>
   11c70:	cmp	r0, #0
   11c74:	moveq	r0, #0
   11c78:	beq	11d0c <heap_insere@@Base+0xcc>
   11c7c:	ldr	r3, [r4]
   11c80:	ldr	r2, [r4, #8]
   11c84:	add	r1, r3, #1
   11c88:	cmp	r3, #0
   11c8c:	add	r5, r2, r3, lsl #2
   11c90:	str	r0, [r2, r3, lsl #2]
   11c94:	str	r1, [r4]
   11c98:	beq	11d08 <heap_insere@@Base+0xc8>
   11c9c:	sub	r3, r3, #1
   11ca0:	add	r3, r3, r3, lsr #31
   11ca4:	asr	r3, r3, #1
   11ca8:	ldr	r1, [r2, r3, lsl #2]
   11cac:	lsl	ip, r3, #2
   11cb0:	add	r4, r2, ip
   11cb4:	cmp	r1, #0
   11cb8:	beq	11d08 <heap_insere@@Base+0xc8>
   11cbc:	ldr	r6, [r0]
   11cc0:	ldr	lr, [r1]
   11cc4:	cmp	r6, lr
   11cc8:	bge	11d08 <heap_insere@@Base+0xc8>
   11ccc:	sub	lr, r3, #1
   11cd0:	cmp	r3, #0
   11cd4:	str	r0, [r4]
   11cd8:	add	lr, lr, lr, lsr #31
   11cdc:	str	r1, [r5]
   11ce0:	add	r5, r2, ip
   11ce4:	beq	11d08 <heap_insere@@Base+0xc8>
   11ce8:	asr	r3, lr, #1
   11cec:	ldr	r0, [r2, ip]
   11cf0:	ldr	r1, [r2, r3, lsl #2]
   11cf4:	lsl	ip, r3, #2
   11cf8:	add	r4, r2, ip
   11cfc:	cmp	r1, #0
   11d00:	cmpne	r0, #0
   11d04:	bne	11cbc <heap_insere@@Base+0x7c>
   11d08:	mov	r0, #1
   11d0c:	ldrd	r4, [sp]
   11d10:	ldr	r6, [sp, #8]
   11d14:	add	sp, sp, #12
   11d18:	pop	{pc}		; (ldr pc, [sp], #4)

00011d1c <heap_remove@@Base>:
   11d1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11d20:	subs	r4, r0, #0
   11d24:	strd	r6, [sp, #8]
   11d28:	strd	r8, [sp, #16]
   11d2c:	str	sl, [sp, #24]
   11d30:	str	lr, [sp, #28]
   11d34:	beq	11e24 <heap_remove@@Base+0x108>
   11d38:	ldr	r3, [r4]
   11d3c:	cmp	r3, #0
   11d40:	ble	11e24 <heap_remove@@Base+0x108>
   11d44:	ldr	r3, [r4, #8]
   11d48:	ldr	r3, [r3]
   11d4c:	mov	r0, r3
   11d50:	ldr	r6, [r3, #4]
   11d54:	bl	10c70 <free@plt>
   11d58:	ldr	lr, [r4]
   11d5c:	mov	r1, #0
   11d60:	ldr	r3, [r4, #8]
   11d64:	sub	lr, lr, #1
   11d68:	cmp	lr, #1
   11d6c:	ldr	r2, [r3, lr, lsl #2]
   11d70:	str	lr, [r4]
   11d74:	str	r2, [r3]
   11d78:	str	r1, [r3, lr, lsl #2]
   11d7c:	ble	11e08 <heap_remove@@Base+0xec>
   11d80:	mov	r2, #1
   11d84:	add	r0, r1, #1
   11d88:	lsl	r4, r1, #2
   11d8c:	lsl	ip, r0, #1
   11d90:	add	r5, r3, r0, lsl #3
   11d94:	cmp	lr, ip
   11d98:	ble	11dc0 <heap_remove@@Base+0xa4>
   11d9c:	ldr	r5, [r5, #-4]
   11da0:	ldr	r0, [r3, r0, lsl #3]
   11da4:	cmp	r0, #0
   11da8:	cmpne	r5, #0
   11dac:	beq	11dc0 <heap_remove@@Base+0xa4>
   11db0:	ldr	r7, [r0]
   11db4:	ldr	r0, [r5]
   11db8:	cmp	r7, r0
   11dbc:	movlt	r2, ip
   11dc0:	ldr	r5, [r3, r1, lsl #2]
   11dc4:	lsl	ip, r2, #1
   11dc8:	mov	r1, r2
   11dcc:	lsl	r7, r2, #2
   11dd0:	ldr	r0, [r3, r2, lsl #2]
   11dd4:	add	ip, ip, #1
   11dd8:	mov	r2, ip
   11ddc:	cmp	r5, #0
   11de0:	cmpne	r0, #0
   11de4:	beq	11e08 <heap_remove@@Base+0xec>
   11de8:	ldr	r9, [r0]
   11dec:	ldr	r8, [r5]
   11df0:	cmp	r9, r8
   11df4:	bge	11e08 <heap_remove@@Base+0xec>
   11df8:	cmp	lr, ip
   11dfc:	str	r5, [r3, r7]
   11e00:	str	r0, [r3, r4]
   11e04:	bgt	11d84 <heap_remove@@Base+0x68>
   11e08:	mov	r0, r6
   11e0c:	ldrd	r4, [sp]
   11e10:	ldrd	r6, [sp, #8]
   11e14:	ldrd	r8, [sp, #16]
   11e18:	ldr	sl, [sp, #24]
   11e1c:	add	sp, sp, #28
   11e20:	pop	{pc}		; (ldr pc, [sp], #4)
   11e24:	mov	r6, #0
   11e28:	b	11e08 <heap_remove@@Base+0xec>

00011e2c <mostraHeap@@Base>:
   11e2c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e30:	movw	r5, #10008	; 0x2718
   11e34:	movt	r5, #1
   11e38:	strd	r6, [sp, #8]
   11e3c:	mov	r7, r0
   11e40:	mov	r6, r1
   11e44:	ldr	r3, [r7]
   11e48:	strd	r8, [sp, #16]
   11e4c:	movw	r8, #10016	; 0x2720
   11e50:	movt	r8, #1
   11e54:	str	sl, [sp, #24]
   11e58:	str	lr, [sp, #28]
   11e5c:	cmp	r3, r6
   11e60:	ble	11ed4 <mostraHeap@@Base+0xa8>
   11e64:	lsl	r9, r6, #1
   11e68:	cmp	r6, #0
   11e6c:	add	r1, r9, #1
   11e70:	ble	11ef4 <mostraHeap@@Base+0xc8>
   11e74:	mov	r4, r6
   11e78:	mov	r3, #0
   11e7c:	sub	r4, r4, #1
   11e80:	add	r3, r3, #1
   11e84:	asrs	r4, r4, #1
   11e88:	bne	11e7c <mostraHeap@@Base+0x50>
   11e8c:	mov	r0, r7
   11e90:	add	sl, r3, r3, lsl #1
   11e94:	bl	11e2c <mostraHeap@@Base>
   11e98:	add	r4, r4, #1
   11e9c:	mov	r0, r5
   11ea0:	bl	10c4c <printf@plt>
   11ea4:	cmp	r4, sl
   11ea8:	blt	11e98 <mostraHeap@@Base+0x6c>
   11eac:	ldr	r3, [r7, #8]
   11eb0:	mov	r0, r8
   11eb4:	ldr	r3, [r3, r6, lsl #2]
   11eb8:	add	r6, r9, #2
   11ebc:	ldr	r2, [r3]
   11ec0:	ldr	r1, [r3, #4]
   11ec4:	bl	10c4c <printf@plt>
   11ec8:	ldr	r3, [r7]
   11ecc:	cmp	r3, r6
   11ed0:	bgt	11e64 <mostraHeap@@Base+0x38>
   11ed4:	mov	r0, #10
   11ed8:	ldrd	r4, [sp]
   11edc:	ldrd	r6, [sp, #8]
   11ee0:	ldrd	r8, [sp, #16]
   11ee4:	ldr	sl, [sp, #24]
   11ee8:	ldr	lr, [sp, #28]
   11eec:	add	sp, sp, #32
   11ef0:	b	10cdc <putchar@plt>
   11ef4:	mov	r0, r7
   11ef8:	bl	11e2c <mostraHeap@@Base>
   11efc:	ldr	r3, [r7, #8]
   11f00:	movw	r0, #10016	; 0x2720
   11f04:	movt	r0, #1
   11f08:	ldr	r3, [r3, r6, lsl #2]
   11f0c:	ldr	r2, [r3]
   11f10:	ldr	r1, [r3, #4]
   11f14:	bl	10c4c <printf@plt>
   11f18:	add	r1, r9, #2
   11f1c:	mov	r0, r7
   11f20:	bl	11e2c <mostraHeap@@Base>
   11f24:	b	11ed4 <mostraHeap@@Base+0xa8>

00011f28 <menor_que@@Base>:
   11f28:	cmp	r1, #0
   11f2c:	cmpne	r0, #0
   11f30:	beq	11f4c <menor_que@@Base+0x24>
   11f34:	ldr	r0, [r0]
   11f38:	ldr	r3, [r1]
   11f3c:	cmp	r0, r3
   11f40:	movge	r0, #0
   11f44:	movlt	r0, #1
   11f48:	bx	lr
   11f4c:	mov	r0, #0
   11f50:	bx	lr

00011f54 <novo_str@@Base>:
   11f54:	strd	r4, [sp, #-16]!
   11f58:	mov	r5, r0
   11f5c:	mov	r0, #8
   11f60:	str	r6, [sp, #8]
   11f64:	str	lr, [sp, #12]
   11f68:	bl	10cac <malloc@plt>
   11f6c:	subs	r4, r0, #0
   11f70:	beq	11fac <novo_str@@Base+0x58>
   11f74:	mov	r0, r5
   11f78:	bl	10cd0 <strlen@plt>
   11f7c:	add	r6, r0, #1
   11f80:	mov	r0, r6
   11f84:	bl	10cac <malloc@plt>
   11f88:	cmp	r0, #0
   11f8c:	mov	r3, r0
   11f90:	str	r0, [r4]
   11f94:	beq	11fc0 <novo_str@@Base+0x6c>
   11f98:	mov	r2, r6
   11f9c:	mov	r1, r5
   11fa0:	bl	10c7c <memcpy@plt>
   11fa4:	mov	r3, #0
   11fa8:	str	r3, [r4, #4]
   11fac:	mov	r0, r4
   11fb0:	ldrd	r4, [sp]
   11fb4:	ldr	r6, [sp, #8]
   11fb8:	add	sp, sp, #12
   11fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   11fc0:	mov	r0, r4
   11fc4:	mov	r4, r3
   11fc8:	bl	10c70 <free@plt>
   11fcc:	b	11fac <novo_str@@Base+0x58>

00011fd0 <lista_nova@@Base>:
   11fd0:	mov	r0, #8
   11fd4:	str	r4, [sp, #-8]!
   11fd8:	str	lr, [sp, #4]
   11fdc:	bl	10cac <malloc@plt>
   11fe0:	cmp	r0, #0
   11fe4:	beq	11ff4 <lista_nova@@Base+0x24>
   11fe8:	mov	r3, #0
   11fec:	str	r3, [r0]
   11ff0:	str	r3, [r0, #4]
   11ff4:	ldr	r4, [sp]
   11ff8:	add	sp, sp, #4
   11ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00012000 <lista_apaga@@Base>:
   12000:	strd	r4, [sp, #-16]!
   12004:	subs	r5, r0, #0
   12008:	str	r6, [sp, #8]
   1200c:	str	lr, [sp, #12]
   12010:	bne	1202c <lista_apaga@@Base+0x2c>
   12014:	b	12050 <lista_apaga@@Base+0x50>
   12018:	ldm	r4, {r0, r3}
   1201c:	str	r3, [r5]
   12020:	bl	10c70 <free@plt>
   12024:	mov	r0, r4
   12028:	bl	10c70 <free@plt>
   1202c:	ldr	r4, [r5]
   12030:	cmp	r4, #0
   12034:	bne	12018 <lista_apaga@@Base+0x18>
   12038:	mov	r0, r5
   1203c:	ldrd	r4, [sp]
   12040:	ldr	r6, [sp, #8]
   12044:	ldr	lr, [sp, #12]
   12048:	add	sp, sp, #16
   1204c:	b	10c70 <free@plt>
   12050:	ldrd	r4, [sp]
   12054:	ldr	r6, [sp, #8]
   12058:	add	sp, sp, #12
   1205c:	pop	{pc}		; (ldr pc, [sp], #4)

00012060 <lista_tamanho@@Base>:
   12060:	cmp	r0, #0
   12064:	ldrne	r0, [r0, #4]
   12068:	mvneq	r0, #0
   1206c:	bx	lr

00012070 <lista_elemento@@Base>:
   12070:	cmp	r0, #0
   12074:	lsrne	r3, r1, #31
   12078:	moveq	r3, #1
   1207c:	cmp	r3, #0
   12080:	bne	120b8 <lista_elemento@@Base+0x48>
   12084:	ldr	r0, [r0]
   12088:	cmp	r0, #0
   1208c:	cmpne	r1, #0
   12090:	ble	120a8 <lista_elemento@@Base+0x38>
   12094:	ldr	r0, [r0, #4]
   12098:	add	r3, r3, #1
   1209c:	cmp	r0, #0
   120a0:	cmpne	r1, r3
   120a4:	bgt	12094 <lista_elemento@@Base+0x24>
   120a8:	cmp	r0, #0
   120ac:	beq	120bc <lista_elemento@@Base+0x4c>
   120b0:	ldr	r0, [r0]
   120b4:	bx	lr
   120b8:	mov	r0, #0
   120bc:	bx	lr

000120c0 <lista_atribui@@Base>:
   120c0:	cmp	r0, #0
   120c4:	lsrne	r3, r1, #31
   120c8:	moveq	r3, #1
   120cc:	cmp	r3, #0
   120d0:	bne	12148 <lista_atribui@@Base+0x88>
   120d4:	strd	r4, [sp, #-16]!
   120d8:	ldr	r4, [r0]
   120dc:	str	r6, [sp, #8]
   120e0:	str	lr, [sp, #12]
   120e4:	cmp	r4, #0
   120e8:	cmpne	r1, #0
   120ec:	ble	12104 <lista_atribui@@Base+0x44>
   120f0:	ldr	r4, [r4, #4]
   120f4:	add	r3, r3, #1
   120f8:	cmp	r4, #0
   120fc:	cmpne	r1, r3
   12100:	bgt	120f0 <lista_atribui@@Base+0x30>
   12104:	cmp	r4, #0
   12108:	beq	12150 <lista_atribui@@Base+0x90>
   1210c:	mov	r0, r2
   12110:	mov	r6, r2
   12114:	mov	r5, r1
   12118:	bl	10cd0 <strlen@plt>
   1211c:	add	r1, r0, #1
   12120:	ldr	r0, [r4]
   12124:	bl	10c88 <realloc@plt>
   12128:	mov	r1, r6
   1212c:	str	r0, [r4]
   12130:	bl	10c94 <strcpy@plt>
   12134:	mov	r0, r5
   12138:	ldrd	r4, [sp]
   1213c:	ldr	r6, [sp, #8]
   12140:	add	sp, sp, #12
   12144:	pop	{pc}		; (ldr pc, [sp], #4)
   12148:	mvn	r0, #0
   1214c:	bx	lr
   12150:	mvn	r0, #0
   12154:	b	12138 <lista_atribui@@Base+0x78>

00012158 <lista_insere@@Base>:
   12158:	cmn	r2, #1
   1215c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12160:	movge	r3, #0
   12164:	movlt	r3, #1
   12168:	strd	r6, [sp, #8]
   1216c:	cmp	r0, #0
   12170:	str	r8, [sp, #16]
   12174:	movne	r5, r3
   12178:	moveq	r5, #1
   1217c:	str	lr, [sp, #20]
   12180:	cmp	r5, #0
   12184:	bne	1227c <lista_insere@@Base+0x124>
   12188:	cmp	r2, #0
   1218c:	mov	r6, r0
   12190:	mov	r7, r2
   12194:	mov	r0, r1
   12198:	beq	12224 <lista_insere@@Base+0xcc>
   1219c:	ldr	r3, [r6, #4]
   121a0:	cmp	r3, r2
   121a4:	ble	1227c <lista_insere@@Base+0x124>
   121a8:	ldr	r4, [r6]
   121ac:	bl	11f54 <novo_str@@Base>
   121b0:	subs	r1, r0, #0
   121b4:	beq	1227c <lista_insere@@Base+0x124>
   121b8:	ldr	r0, [r6, #4]
   121bc:	cmn	r7, #1
   121c0:	add	r3, r0, #1
   121c4:	str	r3, [r6, #4]
   121c8:	beq	12250 <lista_insere@@Base+0xf8>
   121cc:	cmp	r7, #1
   121d0:	beq	12200 <lista_insere@@Base+0xa8>
   121d4:	cmp	r4, #0
   121d8:	beq	12284 <lista_insere@@Base+0x12c>
   121dc:	mov	r3, r5
   121e0:	sub	r2, r7, #1
   121e4:	b	121f0 <lista_insere@@Base+0x98>
   121e8:	cmp	r4, #0
   121ec:	beq	12284 <lista_insere@@Base+0x12c>
   121f0:	add	r3, r3, #1
   121f4:	ldr	r4, [r4, #4]
   121f8:	cmp	r3, r2
   121fc:	bne	121e8 <lista_insere@@Base+0x90>
   12200:	ldr	r3, [r4, #4]
   12204:	mov	r0, r7
   12208:	str	r3, [r1, #4]
   1220c:	str	r1, [r4, #4]
   12210:	ldrd	r4, [sp]
   12214:	ldrd	r6, [sp, #8]
   12218:	ldr	r8, [sp, #16]
   1221c:	add	sp, sp, #20
   12220:	pop	{pc}		; (ldr pc, [sp], #4)
   12224:	ldr	r4, [r6]
   12228:	bl	11f54 <novo_str@@Base>
   1222c:	subs	r2, r0, #0
   12230:	beq	1227c <lista_insere@@Base+0x124>
   12234:	ldr	r3, [r6, #4]
   12238:	mov	r0, r7
   1223c:	add	r3, r3, #1
   12240:	str	r3, [r6, #4]
   12244:	str	r4, [r2, #4]
   12248:	str	r2, [r6]
   1224c:	b	12210 <lista_insere@@Base+0xb8>
   12250:	cmp	r4, #0
   12254:	streq	r1, [r6]
   12258:	beq	12210 <lista_insere@@Base+0xb8>
   1225c:	ldr	r3, [r4, #4]
   12260:	cmp	r3, #0
   12264:	beq	1220c <lista_insere@@Base+0xb4>
   12268:	mov	r4, r3
   1226c:	ldr	r3, [r4, #4]
   12270:	cmp	r3, #0
   12274:	bne	12268 <lista_insere@@Base+0x110>
   12278:	b	1220c <lista_insere@@Base+0xb4>
   1227c:	mvn	r0, #0
   12280:	b	12210 <lista_insere@@Base+0xb8>
   12284:	mov	r3, #0
   12288:	ldr	r3, [r3, #4]
   1228c:	udf	#0

00012290 <lista_remove@@Base>:
   12290:	cmp	r0, #0
   12294:	lsrne	r3, r1, #31
   12298:	moveq	r3, #1
   1229c:	cmp	r3, #0
   122a0:	bne	1235c <lista_remove@@Base+0xcc>
   122a4:	ldr	r2, [r0, #4]
   122a8:	cmp	r2, r1
   122ac:	ble	1235c <lista_remove@@Base+0xcc>
   122b0:	strd	r4, [sp, #-16]!
   122b4:	sub	r2, r2, #1
   122b8:	cmp	r1, #0
   122bc:	str	r6, [sp, #8]
   122c0:	mov	r5, r1
   122c4:	ldr	r6, [r0]
   122c8:	str	lr, [sp, #12]
   122cc:	str	r2, [r0, #4]
   122d0:	ldr	r4, [r6, #4]
   122d4:	beq	12334 <lista_remove@@Base+0xa4>
   122d8:	cmp	r4, #0
   122dc:	moveq	r2, r4
   122e0:	moveq	r4, r6
   122e4:	bne	122fc <lista_remove@@Base+0x6c>
   122e8:	b	1230c <lista_remove@@Base+0x7c>
   122ec:	cmp	r2, #0
   122f0:	beq	1230c <lista_remove@@Base+0x7c>
   122f4:	mov	r6, r4
   122f8:	mov	r4, r2
   122fc:	add	r3, r3, #1
   12300:	ldr	r2, [r4, #4]
   12304:	cmp	r5, r3
   12308:	bne	122ec <lista_remove@@Base+0x5c>
   1230c:	ldr	r0, [r4]
   12310:	str	r2, [r6, #4]
   12314:	bl	10c70 <free@plt>
   12318:	mov	r0, r4
   1231c:	bl	10c70 <free@plt>
   12320:	ldrd	r4, [sp]
   12324:	mov	r0, #0
   12328:	ldr	r6, [sp, #8]
   1232c:	add	sp, sp, #12
   12330:	pop	{pc}		; (ldr pc, [sp], #4)
   12334:	str	r4, [r0]
   12338:	ldr	r0, [r6]
   1233c:	bl	10c70 <free@plt>
   12340:	mov	r0, r6
   12344:	bl	10c70 <free@plt>
   12348:	mov	r0, r5
   1234c:	ldrd	r4, [sp]
   12350:	ldr	r6, [sp, #8]
   12354:	add	sp, sp, #12
   12358:	pop	{pc}		; (ldr pc, [sp], #4)
   1235c:	mvn	r0, #0
   12360:	bx	lr

00012364 <lista_pesquisa@@Base>:
   12364:	cmp	r0, #0
   12368:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1236c:	strd	r6, [sp, #8]
   12370:	str	r8, [sp, #16]
   12374:	str	lr, [sp, #20]
   12378:	beq	123ec <lista_pesquisa@@Base+0x88>
   1237c:	ldr	r4, [r0]
   12380:	cmp	r4, #0
   12384:	beq	123ec <lista_pesquisa@@Base+0x88>
   12388:	mov	r7, r2
   1238c:	mov	r6, r1
   12390:	mvn	r8, #0
   12394:	mov	r5, #0
   12398:	mov	r1, r6
   1239c:	ldr	r0, [r4]
   123a0:	bl	10c34 <strcmp@plt>
   123a4:	cmp	r0, #0
   123a8:	bne	123bc <lista_pesquisa@@Base+0x58>
   123ac:	cmp	r7, #0
   123b0:	beq	123e4 <lista_pesquisa@@Base+0x80>
   123b4:	cmn	r7, #1
   123b8:	moveq	r8, r5
   123bc:	ldr	r4, [r4, #4]
   123c0:	add	r5, r5, #1
   123c4:	cmp	r4, #0
   123c8:	bne	12398 <lista_pesquisa@@Base+0x34>
   123cc:	mov	r0, r8
   123d0:	ldrd	r4, [sp]
   123d4:	ldrd	r6, [sp, #8]
   123d8:	ldr	r8, [sp, #16]
   123dc:	add	sp, sp, #20
   123e0:	pop	{pc}		; (ldr pc, [sp], #4)
   123e4:	mov	r8, r5
   123e8:	b	123cc <lista_pesquisa@@Base+0x68>
   123ec:	mvn	r8, #0
   123f0:	b	123cc <lista_pesquisa@@Base+0x68>

000123f4 <lista_ordena@@Base>:
   123f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   123f8:	strd	r6, [sp, #8]
   123fc:	str	sl, [sp, #24]
   12400:	subs	sl, r0, #0
   12404:	strd	r8, [sp, #16]
   12408:	str	lr, [sp, #28]
   1240c:	beq	124c0 <lista_ordena@@Base+0xcc>
   12410:	ldr	r6, [sl]
   12414:	ldr	r7, [r6, #4]
   12418:	cmp	r7, #0
   1241c:	beq	1244c <lista_ordena@@Base+0x58>
   12420:	ldr	r4, [r6]
   12424:	mov	r0, r4
   12428:	ldr	r5, [r7]
   1242c:	mov	r1, r5
   12430:	bl	10c34 <strcmp@plt>
   12434:	cmp	r0, #0
   12438:	bgt	12468 <lista_ordena@@Base+0x74>
   1243c:	ldr	r6, [r6, #4]
   12440:	ldr	r7, [r6, #4]
   12444:	cmp	r7, #0
   12448:	bne	12420 <lista_ordena@@Base+0x2c>
   1244c:	mov	r0, #0
   12450:	ldrd	r4, [sp]
   12454:	ldrd	r6, [sp, #8]
   12458:	ldrd	r8, [sp, #16]
   1245c:	ldr	sl, [sp, #24]
   12460:	add	sp, sp, #28
   12464:	pop	{pc}		; (ldr pc, [sp], #4)
   12468:	ldr	r3, [r7, #4]
   1246c:	ldr	r9, [sl]
   12470:	cmp	r3, r6
   12474:	str	r3, [r6, #4]
   12478:	beq	124b8 <lista_ordena@@Base+0xc4>
   1247c:	mov	r8, r9
   12480:	mov	r4, r9
   12484:	b	12490 <lista_ordena@@Base+0x9c>
   12488:	mov	r8, r4
   1248c:	ldr	r4, [r4, #4]
   12490:	mov	r1, r5
   12494:	ldr	r0, [r4]
   12498:	bl	10c34 <strcmp@plt>
   1249c:	cmp	r0, #0
   124a0:	ble	12488 <lista_ordena@@Base+0x94>
   124a4:	cmp	r9, r4
   124a8:	str	r4, [r7, #4]
   124ac:	streq	r7, [sl]
   124b0:	strne	r7, [r8, #4]
   124b4:	b	12414 <lista_ordena@@Base+0x20>
   124b8:	mov	r7, r6
   124bc:	b	12424 <lista_ordena@@Base+0x30>
   124c0:	mvn	r0, #0
   124c4:	b	12450 <lista_ordena@@Base+0x5c>

000124c8 <lista_compara@@Base>:
   124c8:	clz	r3, r1
   124cc:	cmp	r0, #0
   124d0:	lsr	r3, r3, #5
   124d4:	moveq	r3, #1
   124d8:	cmp	r3, #0
   124dc:	bne	12550 <lista_compara@@Base+0x88>
   124e0:	ldr	ip, [r0, #4]
   124e4:	ldr	r2, [r1, #4]
   124e8:	cmp	ip, r2
   124ec:	bne	12548 <lista_compara@@Base+0x80>
   124f0:	strd	r4, [sp, #-16]!
   124f4:	ldr	r4, [r0]
   124f8:	ldr	r5, [r1]
   124fc:	str	r6, [sp, #8]
   12500:	str	lr, [sp, #12]
   12504:	cmp	r4, #0
   12508:	bne	12520 <lista_compara@@Base+0x58>
   1250c:	b	12558 <lista_compara@@Base+0x90>
   12510:	ldr	r4, [r4, #4]
   12514:	ldr	r5, [r5, #4]
   12518:	cmp	r4, #0
   1251c:	beq	12558 <lista_compara@@Base+0x90>
   12520:	ldr	r0, [r4]
   12524:	ldr	r1, [r5]
   12528:	bl	10c34 <strcmp@plt>
   1252c:	cmp	r0, #0
   12530:	beq	12510 <lista_compara@@Base+0x48>
   12534:	ldrd	r4, [sp]
   12538:	mov	r0, #0
   1253c:	ldr	r6, [sp, #8]
   12540:	add	sp, sp, #12
   12544:	pop	{pc}		; (ldr pc, [sp], #4)
   12548:	mov	r0, r3
   1254c:	bx	lr
   12550:	mvn	r0, #0
   12554:	bx	lr
   12558:	cmp	r5, #0
   1255c:	ldrd	r4, [sp]
   12560:	mvnne	r0, #0
   12564:	moveq	r0, #1
   12568:	ldr	r6, [sp, #8]
   1256c:	add	sp, sp, #12
   12570:	pop	{pc}		; (ldr pc, [sp], #4)

00012574 <lista_inverte@@Base>:
   12574:	strd	r4, [sp, #-16]!
   12578:	subs	r4, r0, #0
   1257c:	str	r6, [sp, #8]
   12580:	str	lr, [sp, #12]
   12584:	beq	125e0 <lista_inverte@@Base+0x6c>
   12588:	mov	r0, #8
   1258c:	bl	10cac <malloc@plt>
   12590:	subs	r5, r0, #0
   12594:	beq	125e0 <lista_inverte@@Base+0x6c>
   12598:	ldr	r4, [r4]
   1259c:	mov	r3, #0
   125a0:	str	r3, [r5]
   125a4:	str	r3, [r5, #4]
   125a8:	cmp	r4, r3
   125ac:	beq	125cc <lista_inverte@@Base+0x58>
   125b0:	mov	r2, #0
   125b4:	mov	r0, r5
   125b8:	ldr	r1, [r4]
   125bc:	bl	12158 <lista_insere@@Base>
   125c0:	ldr	r4, [r4, #4]
   125c4:	cmp	r4, #0
   125c8:	bne	125b0 <lista_inverte@@Base+0x3c>
   125cc:	mov	r0, r5
   125d0:	ldrd	r4, [sp]
   125d4:	ldr	r6, [sp, #8]
   125d8:	add	sp, sp, #12
   125dc:	pop	{pc}		; (ldr pc, [sp], #4)
   125e0:	mov	r5, #0
   125e4:	b	125cc <lista_inverte@@Base+0x58>

000125e8 <__libc_csu_init@@Base>:
   125e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125ec:	mov	r7, r0
   125f0:	ldr	r6, [pc, #72]	; 12640 <__libc_csu_init@@Base+0x58>
   125f4:	ldr	r5, [pc, #72]	; 12644 <__libc_csu_init@@Base+0x5c>
   125f8:	add	r6, pc, r6
   125fc:	add	r5, pc, r5
   12600:	sub	r6, r6, r5
   12604:	mov	r8, r1
   12608:	mov	r9, r2
   1260c:	bl	10c08 <calloc@plt-0x20>
   12610:	asrs	r6, r6, #2
   12614:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12618:	mov	r4, #0
   1261c:	add	r4, r4, #1
   12620:	ldr	r3, [r5], #4
   12624:	mov	r2, r9
   12628:	mov	r1, r8
   1262c:	mov	r0, r7
   12630:	blx	r3
   12634:	cmp	r6, r4
   12638:	bne	1261c <__libc_csu_init@@Base+0x34>
   1263c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12640:	andeq	r0, r1, r4, lsl r9
   12644:	andeq	r0, r1, ip, lsl #18

00012648 <__libc_csu_fini@@Base>:
   12648:	bx	lr

Disassembly of section .fini:

0001264c <.fini>:
   1264c:	push	{r3, lr}
   12650:	pop	{r3, pc}
