
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_printer.dir/test_json_printer.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test_print>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	add	fp, sp, #28
       8:	sub	sp, sp, #68	; 0x44
       c:	movw	sl, #0
      10:	movw	r1, #0
      14:	mov	r4, #0
      18:	movt	sl, #0
      1c:	movt	r1, #0
      20:	str	r4, [fp, #-32]	; 0xffffffe0
      24:	str	r4, [fp, #-36]	; 0xffffffdc
      28:	str	r4, [fp, #-40]	; 0xffffffd8
      2c:	ldr	r0, [sl]
      30:	bl	0 <fopen>
      34:	cmp	r0, #0
      38:	bne	60 <test_print+0x60>
      3c:	movw	r0, #0
      40:	ldr	r2, [sl]
      44:	movw	r1, #0
      48:	movt	r0, #0
      4c:	movt	r1, #0
      50:	ldr	r0, [r0]
      54:	bl	0 <fprintf>
      58:	mvn	r4, #0
      5c:	b	2a4 <test_print+0x2a4>
      60:	mov	r5, r0
      64:	add	r0, sp, #8
      68:	mov	r1, r5
      6c:	bl	0 <flatcc_json_printer_init>
      70:	movw	r9, #0
      74:	strb	r4, [sp, #35]	; 0x23
      78:	movw	r0, #258	; 0x102
      7c:	movt	r9, #0
      80:	strh	r0, [sp, #33]	; 0x21
      84:	ldr	r4, [r9]
      88:	cmp	r4, #0
      8c:	beq	a8 <test_print+0xa8>
      90:	movw	r1, #0
      94:	mov	r0, r4
      98:	movt	r1, #0
      9c:	bl	0 <strcmp>
      a0:	cmp	r0, #0
      a4:	bne	198 <test_print+0x198>
      a8:	movw	r8, #0
      ac:	mov	r0, #288	; 0x120
      b0:	movt	r8, #0
      b4:	str	r0, [fp, #-32]	; 0xffffffe0
      b8:	movw	r4, #0
      bc:	sub	r1, fp, #36	; 0x24
      c0:	movt	r4, #0
      c4:	ldr	r0, [r4]
      c8:	bl	2c4 <readfile>
      cc:	cmp	r0, #0
      d0:	bne	100 <test_print+0x100>
      d4:	movw	r0, #0
      d8:	ldr	r2, [r4]
      dc:	movw	r1, #0
      e0:	movt	r0, #0
      e4:	movt	r1, #0
      e8:	ldr	r0, [r0]
      ec:	bl	0 <fprintf>
      f0:	mov	r6, #0
      f4:	mvn	r4, #0
      f8:	mov	r7, #0
      fc:	b	25c <test_print+0x25c>
     100:	mov	r6, r0
     104:	movw	r0, #0
     108:	ldr	r2, [fp, #-32]	; 0xffffffe0
     10c:	movw	r3, #0
     110:	add	r4, sp, #8
     114:	mov	r1, r8
     118:	movt	r0, #0
     11c:	movt	r3, #0
     120:	str	r0, [sp]
     124:	mov	r0, r4
     128:	bl	0 <flatcc_json_printer_table_as_root>
     12c:	ldr	r2, [sp, #52]	; 0x34
     130:	mov	r0, r4
     134:	mov	r1, #1
     138:	blx	r2
     13c:	ldr	r0, [sp, #44]	; 0x2c
     140:	cmp	r0, #0
     144:	beq	154 <test_print+0x154>
     148:	movw	r0, #0
     14c:	movt	r0, #0
     150:	bl	0 <puts>
     154:	mov	r0, r5
     158:	bl	0 <fclose>
     15c:	ldr	r0, [sl]
     160:	sub	r1, fp, #40	; 0x28
     164:	bl	2c4 <readfile>
     168:	cmp	r0, #0
     16c:	bne	1e0 <test_print+0x1e0>
     170:	movw	r0, #0
     174:	ldr	r2, [sl]
     178:	movw	r1, #0
     17c:	movt	r0, #0
     180:	movt	r1, #0
     184:	ldr	r0, [r0]
     188:	bl	0 <fprintf>
     18c:	mov	r7, #0
     190:	mvn	r4, #0
     194:	b	22c <test_print+0x22c>
     198:	sub	r1, fp, #32
     19c:	mov	r0, r4
     1a0:	bl	2c4 <readfile>
     1a4:	mov	r8, r0
     1a8:	cmp	r0, #0
     1ac:	bne	b8 <test_print+0xb8>
     1b0:	movw	r0, #0
     1b4:	ldr	r2, [r9]
     1b8:	movw	r1, #0
     1bc:	movt	r0, #0
     1c0:	movt	r1, #0
     1c4:	ldr	r0, [r0]
     1c8:	bl	0 <fprintf>
     1cc:	mvn	r4, #0
     1d0:	mov	r8, #0
     1d4:	mov	r6, #0
     1d8:	mov	r7, #0
     1dc:	b	25c <test_print+0x25c>
     1e0:	mov	r7, r0
     1e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
     1e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     1ec:	cmp	r2, r0
     1f0:	bne	234 <test_print+0x234>
     1f4:	mov	r0, r7
     1f8:	mov	r1, r6
     1fc:	bl	0 <bcmp>
     200:	cmp	r0, #0
     204:	bne	234 <test_print+0x234>
     208:	movw	r0, #0
     20c:	mov	r1, #26
     210:	mov	r2, #1
     214:	movt	r0, #0
     218:	ldr	r3, [r0]
     21c:	movw	r0, #0
     220:	movt	r0, #0
     224:	bl	0 <fwrite>
     228:	mov	r4, #0
     22c:	mov	r5, #0
     230:	b	25c <test_print+0x25c>
     234:	movw	r0, #0
     238:	mov	r1, #54	; 0x36
     23c:	mov	r2, #1
     240:	movt	r0, #0
     244:	ldr	r3, [r0]
     248:	movw	r0, #0
     24c:	movt	r0, #0
     250:	bl	0 <fwrite>
     254:	mov	r5, #0
     258:	mvn	r4, #0
     25c:	add	r0, sp, #8
     260:	bl	0 <flatcc_json_printer_clear>
     264:	cmp	r8, #0
     268:	ldrne	r0, [r9]
     26c:	cmpne	r0, #0
     270:	bne	2b0 <test_print+0x2b0>
     274:	cmp	r6, #0
     278:	beq	284 <test_print+0x284>
     27c:	mov	r0, r6
     280:	bl	0 <free>
     284:	cmp	r7, #0
     288:	beq	294 <test_print+0x294>
     28c:	mov	r0, r7
     290:	bl	0 <free>
     294:	cmp	r5, #0
     298:	beq	2a4 <test_print+0x2a4>
     29c:	mov	r0, r5
     2a0:	bl	0 <fclose>
     2a4:	mov	r0, r4
     2a8:	sub	sp, fp, #28
     2ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     2b0:	mov	r0, r8
     2b4:	bl	0 <free>
     2b8:	cmp	r6, #0
     2bc:	bne	27c <test_print+0x27c>
     2c0:	b	284 <test_print+0x284>

000002c4 <readfile>:
     2c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
     2c8:	add	fp, sp, #24
     2cc:	sub	sp, sp, #8
     2d0:	cmp	r1, #0
     2d4:	add	r9, sp, #4
     2d8:	movne	r9, r1
     2dc:	movw	r1, #0
     2e0:	movt	r1, #0
     2e4:	bl	0 <fopen>
     2e8:	cmp	r0, #0
     2ec:	beq	38c <readfile+0xc8>
     2f0:	mov	r1, #0
     2f4:	mov	r2, #2
     2f8:	mov	r5, r0
     2fc:	mov	r8, #0
     300:	bl	0 <fseek>
     304:	mov	r0, r5
     308:	bl	0 <ftell>
     30c:	mov	r4, r0
     310:	cmp	r0, #10240	; 0x2800
     314:	str	r0, [r9]
     318:	bhi	380 <readfile+0xbc>
     31c:	mov	r0, r5
     320:	bl	0 <rewind>
     324:	cmp	r4, #0
     328:	mov	r0, r4
     32c:	movweq	r0, #1
     330:	bl	0 <malloc>
     334:	cmp	r0, #0
     338:	beq	380 <readfile+0xbc>
     33c:	mov	r7, r0
     340:	mov	r1, #0
     344:	mov	r6, r1
     348:	add	r0, r7, r1
     34c:	sub	r2, r4, r1
     350:	mov	r1, #1
     354:	mov	r3, r5
     358:	bl	0 <fread_unlocked>
     35c:	add	r1, r0, r6
     360:	cmp	r0, #0
     364:	bne	344 <readfile+0x80>
     368:	mov	r0, r5
     36c:	bl	0 <fclose>
     370:	cmp	r4, r6
     374:	bne	394 <readfile+0xd0>
     378:	mov	r8, r7
     37c:	b	3a0 <readfile+0xdc>
     380:	mov	r0, r5
     384:	bl	0 <fclose>
     388:	b	3a0 <readfile+0xdc>
     38c:	mov	r4, #0
     390:	b	39c <readfile+0xd8>
     394:	mov	r0, r7
     398:	bl	0 <free>
     39c:	mov	r8, #0
     3a0:	str	r4, [r9]
     3a4:	mov	r0, r8
     3a8:	sub	sp, fp, #24
     3ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000003b0 <main>:
     3b0:	push	{r4, r5, r6, sl, fp, lr}
     3b4:	add	fp, sp, #16
     3b8:	movw	r6, #0
     3bc:	mov	r5, r0
     3c0:	movw	r0, #0
     3c4:	mov	r4, r1
     3c8:	mov	r1, #24
     3cc:	mov	r2, #1
     3d0:	movt	r6, #0
     3d4:	movt	r0, #0
     3d8:	ldr	r3, [r6]
     3dc:	bl	0 <fwrite>
     3e0:	cmp	r5, #1
     3e4:	beq	418 <main+0x68>
     3e8:	cmp	r5, #4
     3ec:	bne	420 <main+0x70>
     3f0:	movw	r3, #0
     3f4:	ldmib	r4, {r0, r1, r2}
     3f8:	movt	r3, #0
     3fc:	str	r0, [r3]
     400:	movw	r0, #0
     404:	movt	r0, #0
     408:	str	r1, [r0]
     40c:	movw	r0, #0
     410:	movt	r0, #0
     414:	str	r2, [r0]
     418:	pop	{r4, r5, r6, sl, fp, lr}
     41c:	b	0 <test_print>
     420:	ldr	r3, [r6]
     424:	movw	r0, #0
     428:	mov	r1, #191	; 0xbf
     42c:	mov	r2, #1
     430:	movt	r0, #0
     434:	bl	0 <fwrite>
     438:	mov	r0, #1
     43c:	bl	0 <exit>

00000440 <MyGame_Example_Monster_print_json_table>:
     440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     444:	add	fp, sp, #28
     448:	sub	sp, sp, #20
     44c:	mov	r5, r0
     450:	movw	r0, #0
     454:	movw	r3, #0
     458:	mov	r4, r1
     45c:	mov	r1, #3
     460:	mov	r2, #0
     464:	mov	r8, #0
     468:	movt	r0, #0
     46c:	movt	r3, #0
     470:	str	r1, [sp]
     474:	mov	r1, r4
     478:	str	r0, [sp, #4]
     47c:	mov	r0, r5
     480:	bl	0 <flatcc_json_printer_struct_field>
     484:	movw	r3, #0
     488:	mov	r0, #150	; 0x96
     48c:	mov	r1, #4
     490:	mov	r2, #1
     494:	mov	r6, #4
     498:	movt	r3, #0
     49c:	str	r1, [sp]
     4a0:	str	r0, [sp, #4]
     4a4:	mov	r0, r5
     4a8:	mov	r1, r4
     4ac:	bl	0 <flatcc_json_printer_int16_field>
     4b0:	movw	r3, #0
     4b4:	mov	r0, #100	; 0x64
     4b8:	mov	r1, #2
     4bc:	mov	r2, #2
     4c0:	movt	r3, #0
     4c4:	str	r1, [sp]
     4c8:	str	r0, [sp, #4]
     4cc:	mov	r0, r5
     4d0:	mov	r1, r4
     4d4:	bl	0 <flatcc_json_printer_int16_field>
     4d8:	movw	r3, #0
     4dc:	mov	r0, r5
     4e0:	mov	r1, r4
     4e4:	mov	r2, #3
     4e8:	str	r6, [sp]
     4ec:	movt	r3, #0
     4f0:	bl	0 <flatcc_json_printer_string_field>
     4f4:	movw	r3, #0
     4f8:	mov	r0, #9
     4fc:	mov	r1, r4
     500:	mov	r2, #5
     504:	mov	r7, #5
     508:	movt	r3, #0
     50c:	str	r0, [sp]
     510:	mov	r0, r5
     514:	bl	0 <flatcc_json_printer_uint8_vector_field>
     518:	movw	r0, #0
     51c:	movw	r3, #0
     520:	mov	r1, #8
     524:	mov	r2, #6
     528:	str	r7, [sp]
     52c:	mov	r7, #5
     530:	movt	r0, #0
     534:	movt	r3, #0
     538:	str	r1, [sp, #4]
     53c:	mov	r1, r4
     540:	str	r0, [sp, #8]
     544:	mov	r0, r5
     548:	bl	0 <flatcc_json_printer_int8_enum_field>
     54c:	movw	r0, #0
     550:	movw	r1, #0
     554:	movw	r3, #0
     558:	mov	r2, #8
     55c:	str	r6, [sp]
     560:	movt	r0, #0
     564:	movt	r1, #0
     568:	movt	r3, #0
     56c:	str	r1, [sp, #4]
     570:	str	r0, [sp, #8]
     574:	mov	r0, r5
     578:	mov	r1, r4
     57c:	bl	0 <flatcc_json_printer_union_field>
     580:	movw	r0, #0
     584:	movw	r3, #0
     588:	mov	r1, r4
     58c:	mov	r2, #9
     590:	str	r7, [sp]
     594:	mov	sl, #5
     598:	str	r6, [sp, #4]
     59c:	movt	r0, #0
     5a0:	movt	r3, #0
     5a4:	str	r0, [sp, #8]
     5a8:	mov	r0, r5
     5ac:	bl	0 <flatcc_json_printer_struct_vector_field>
     5b0:	movw	r3, #0
     5b4:	mov	r7, #17
     5b8:	mov	r0, r5
     5bc:	mov	r1, r4
     5c0:	mov	r2, #10
     5c4:	movt	r3, #0
     5c8:	str	r7, [sp]
     5cc:	bl	0 <flatcc_json_printer_string_vector_field>
     5d0:	movw	r3, #0
     5d4:	movw	r9, #0
     5d8:	mov	r0, r5
     5dc:	mov	r1, r4
     5e0:	mov	r2, #11
     5e4:	movt	r3, #0
     5e8:	movt	r9, #0
     5ec:	stm	sp, {r7, r9}
     5f0:	bl	0 <flatcc_json_printer_table_vector_field>
     5f4:	movw	r3, #0
     5f8:	mov	r0, r5
     5fc:	mov	r1, r4
     600:	mov	r2, #12
     604:	str	sl, [sp]
     608:	mov	sl, #5
     60c:	str	r9, [sp, #4]
     610:	movt	r3, #0
     614:	bl	0 <flatcc_json_printer_table_field>
     618:	movw	r3, #0
     61c:	mov	r0, #20
     620:	mov	r1, r4
     624:	mov	r2, #13
     628:	movt	r3, #0
     62c:	stm	sp, {r0, r8, r9}
     630:	mov	r0, r5
     634:	bl	0 <flatcc_json_printer_table_as_nested_root>
     638:	movw	r0, #0
     63c:	movw	r3, #0
     640:	mov	r1, #9
     644:	mov	r2, #14
     648:	movt	r0, #0
     64c:	movt	r3, #0
     650:	str	r1, [sp]
     654:	mov	r1, r4
     658:	str	r0, [sp, #4]
     65c:	mov	r0, r5
     660:	bl	0 <flatcc_json_printer_table_field>
     664:	movw	r3, #0
     668:	mov	r0, #1
     66c:	mov	r9, #8
     670:	mov	r1, r4
     674:	mov	r2, #15
     678:	movt	r3, #0
     67c:	str	r0, [sp, #4]
     680:	mov	r0, r5
     684:	str	r9, [sp]
     688:	bl	0 <flatcc_json_printer_bool_field>
     68c:	movw	r3, #0
     690:	mov	r6, #16
     694:	mov	r0, r5
     698:	mov	r1, r4
     69c:	mov	r2, #16
     6a0:	movt	r3, #0
     6a4:	stm	sp, {r6, r8}
     6a8:	bl	0 <flatcc_json_printer_int32_field>
     6ac:	movw	r3, #0
     6b0:	mov	r0, r5
     6b4:	mov	r1, r4
     6b8:	mov	r2, #17
     6bc:	stm	sp, {r6, r8}
     6c0:	movt	r3, #0
     6c4:	bl	0 <flatcc_json_printer_uint32_field>
     6c8:	movw	r3, #0
     6cc:	mov	r0, r5
     6d0:	mov	r1, r4
     6d4:	mov	r2, #18
     6d8:	str	r8, [sp, #8]
     6dc:	str	r8, [sp, #12]
     6e0:	str	r6, [sp]
     6e4:	movt	r3, #0
     6e8:	bl	0 <flatcc_json_printer_int64_field>
     6ec:	movw	r3, #0
     6f0:	mov	r0, r5
     6f4:	mov	r1, r4
     6f8:	mov	r2, #19
     6fc:	str	r8, [sp, #8]
     700:	str	r8, [sp, #12]
     704:	str	r6, [sp]
     708:	movt	r3, #0
     70c:	bl	0 <flatcc_json_printer_uint64_field>
     710:	movw	r3, #0
     714:	mov	r0, r5
     718:	mov	r1, r4
     71c:	mov	r2, #20
     720:	stm	sp, {r7, r8}
     724:	movt	r3, #0
     728:	bl	0 <flatcc_json_printer_int32_field>
     72c:	movw	r3, #0
     730:	mov	r0, r5
     734:	mov	r1, r4
     738:	mov	r2, #21
     73c:	stm	sp, {r7, r8}
     740:	movt	r3, #0
     744:	bl	0 <flatcc_json_printer_uint32_field>
     748:	movw	r3, #0
     74c:	mov	r0, r5
     750:	mov	r1, r4
     754:	mov	r2, #22
     758:	str	r8, [sp, #8]
     75c:	str	r8, [sp, #12]
     760:	str	r7, [sp]
     764:	movt	r3, #0
     768:	bl	0 <flatcc_json_printer_int64_field>
     76c:	movw	r3, #0
     770:	mov	r0, r5
     774:	mov	r1, r4
     778:	mov	r2, #23
     77c:	str	r8, [sp, #8]
     780:	str	r8, [sp, #12]
     784:	str	r7, [sp]
     788:	mov	r8, #23
     78c:	movt	r3, #0
     790:	bl	0 <flatcc_json_printer_uint64_field>
     794:	movw	r3, #0
     798:	mov	r0, r5
     79c:	mov	r1, r4
     7a0:	mov	r2, #24
     7a4:	str	r6, [sp]
     7a8:	movt	r3, #0
     7ac:	bl	0 <flatcc_json_printer_bool_vector_field>
     7b0:	vldr	s0, [pc, #396]	; 944 <MyGame_Example_Monster_print_json_table+0x504>
     7b4:	movw	r3, #0
     7b8:	mov	r0, r5
     7bc:	mov	r1, r4
     7c0:	mov	r2, #25
     7c4:	str	sl, [sp]
     7c8:	movt	r3, #0
     7cc:	bl	0 <flatcc_json_printer_float_field>
     7d0:	movw	r3, #0
     7d4:	vmov.f32	s0, #8	; 0x40400000  3.0
     7d8:	mov	r6, #6
     7dc:	mov	r0, r5
     7e0:	mov	r1, r4
     7e4:	mov	r2, #26
     7e8:	movt	r3, #0
     7ec:	str	r6, [sp]
     7f0:	bl	0 <flatcc_json_printer_float_field>
     7f4:	vldr	s0, [pc, #332]	; 948 <MyGame_Example_Monster_print_json_table+0x508>
     7f8:	movw	r3, #0
     7fc:	mov	r0, r5
     800:	mov	r1, r4
     804:	mov	r2, #27
     808:	str	r6, [sp]
     80c:	movt	r3, #0
     810:	bl	0 <flatcc_json_printer_float_field>
     814:	movw	r3, #0
     818:	mov	r0, #18
     81c:	mov	r1, r4
     820:	mov	r2, #28
     824:	movt	r3, #0
     828:	str	r0, [sp]
     82c:	mov	r0, r5
     830:	bl	0 <flatcc_json_printer_string_vector_field>
     834:	movw	r0, #0
     838:	movw	r3, #0
     83c:	stm	sp, {r8, r9}
     840:	mov	r1, r4
     844:	mov	r2, #29
     848:	movt	r0, #0
     84c:	movt	r3, #0
     850:	str	r0, [sp, #8]
     854:	mov	r0, r5
     858:	bl	0 <flatcc_json_printer_struct_vector_field>
     85c:	movw	r3, #0
     860:	mov	r6, #4
     864:	mov	r0, r5
     868:	mov	r1, r4
     86c:	mov	r2, #30
     870:	movt	r3, #0
     874:	str	r6, [sp]
     878:	bl	0 <flatcc_json_printer_uint8_vector_field>
     87c:	movw	r0, #0
     880:	movw	r3, #0
     884:	mov	r1, r4
     888:	mov	r2, #31
     88c:	str	sl, [sp]
     890:	str	r6, [sp, #4]
     894:	movt	r0, #0
     898:	movt	r3, #0
     89c:	str	r0, [sp, #8]
     8a0:	mov	r0, r5
     8a4:	bl	0 <flatcc_json_printer_struct_vector_field>
     8a8:	movw	r3, #0
     8ac:	mov	r0, #15
     8b0:	mov	r1, r4
     8b4:	mov	r2, #32
     8b8:	movt	r3, #0
     8bc:	str	r0, [sp]
     8c0:	mov	r0, r5
     8c4:	bl	0 <flatcc_json_printer_int64_vector_field>
     8c8:	movw	r3, #0
     8cc:	mov	r0, r5
     8d0:	mov	r1, r4
     8d4:	mov	r2, #33	; 0x21
     8d8:	str	r7, [sp]
     8dc:	movt	r3, #0
     8e0:	bl	0 <flatcc_json_printer_double_vector_field>
     8e4:	movw	r0, #0
     8e8:	movw	r3, #0
     8ec:	mov	r1, #21
     8f0:	mov	r2, #34	; 0x22
     8f4:	movt	r0, #0
     8f8:	movt	r3, #0
     8fc:	str	r1, [sp]
     900:	mov	r1, r4
     904:	str	r0, [sp, #4]
     908:	mov	r0, r5
     90c:	bl	0 <flatcc_json_printer_table_field>
     910:	movw	r0, #0
     914:	movw	r3, #0
     918:	mov	r1, #10
     91c:	mov	r2, #35	; 0x23
     920:	movt	r0, #0
     924:	movt	r3, #0
     928:	str	r1, [sp]
     92c:	mov	r1, r4
     930:	str	r0, [sp, #4]
     934:	mov	r0, r5
     938:	bl	0 <flatcc_json_printer_table_field>
     93c:	sub	sp, fp, #28
     940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     944:	.word	0x489965e0
     948:	.word	0x00000000

0000094c <MyGame_Example_Vec3_print_json_struct>:
     94c:	push	{r4, r5, r6, sl, fp, lr}
     950:	add	fp, sp, #16
     954:	sub	sp, sp, #16
     958:	mov	r5, r0
     95c:	movw	r0, #0
     960:	mov	r4, r1
     964:	mov	r6, #1
     968:	mov	r1, #0
     96c:	mov	r3, #0
     970:	movt	r0, #0
     974:	mov	r2, r4
     978:	stm	sp, {r0, r6}
     97c:	mov	r0, r5
     980:	bl	0 <flatcc_json_printer_float_struct_field>
     984:	movw	r0, #0
     988:	mov	r1, #1
     98c:	mov	r2, r4
     990:	mov	r3, #4
     994:	movt	r0, #0
     998:	stm	sp, {r0, r6}
     99c:	mov	r0, r5
     9a0:	bl	0 <flatcc_json_printer_float_struct_field>
     9a4:	movw	r0, #0
     9a8:	mov	r1, #2
     9ac:	mov	r2, r4
     9b0:	mov	r3, #8
     9b4:	movt	r0, #0
     9b8:	stm	sp, {r0, r6}
     9bc:	mov	r0, r5
     9c0:	bl	0 <flatcc_json_printer_float_struct_field>
     9c4:	movw	r0, #0
     9c8:	mov	r6, #5
     9cc:	mov	r1, #3
     9d0:	mov	r2, r4
     9d4:	mov	r3, #16
     9d8:	movt	r0, #0
     9dc:	stm	sp, {r0, r6}
     9e0:	mov	r0, r5
     9e4:	bl	0 <flatcc_json_printer_double_struct_field>
     9e8:	movw	r0, #0
     9ec:	movw	r1, #0
     9f0:	mov	r2, r4
     9f4:	mov	r3, #24
     9f8:	movt	r1, #0
     9fc:	movt	r0, #0
     a00:	stm	sp, {r1, r6}
     a04:	str	r0, [sp, #8]
     a08:	mov	r0, r5
     a0c:	mov	r1, #4
     a10:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
     a14:	movw	r0, #0
     a18:	movw	r1, #0
     a1c:	mov	r2, r4
     a20:	mov	r3, #26
     a24:	movt	r1, #0
     a28:	movt	r0, #0
     a2c:	stm	sp, {r1, r6}
     a30:	str	r0, [sp, #8]
     a34:	mov	r0, r5
     a38:	mov	r1, #5
     a3c:	bl	0 <flatcc_json_printer_embedded_struct_field>
     a40:	sub	sp, fp, #16
     a44:	pop	{r4, r5, r6, sl, fp, pc}

00000a48 <MyGame_Example_Color_print_json_enum>:
     a48:	push	{r4, r5, r6, r7, fp, lr}
     a4c:	add	fp, sp, #16
     a50:	mov	r4, r0
     a54:	mvn	r0, #0
     a58:	uxtb	r7, r1
     a5c:	uxtab	r0, r0, r1
     a60:	ands	r5, r0, r7
     a64:	movwne	r5, #1
     a68:	cmp	r1, #0
     a6c:	beq	ac8 <MyGame_Example_Color_print_json_enum+0x80>
     a70:	ands	r0, r1, #244	; 0xf4
     a74:	bne	ac8 <MyGame_Example_Color_print_json_enum+0x80>
     a78:	mov	r0, r4
     a7c:	mov	r1, r5
     a80:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     a84:	mov	r6, #0
     a88:	tst	r7, #1
     a8c:	bne	ad4 <MyGame_Example_Color_print_json_enum+0x8c>
     a90:	tst	r7, #2
     a94:	bne	af8 <MyGame_Example_Color_print_json_enum+0xb0>
     a98:	tst	r7, #8
     a9c:	beq	ab8 <MyGame_Example_Color_print_json_enum+0x70>
     aa0:	movw	r2, #0
     aa4:	mov	r0, r4
     aa8:	mov	r1, r6
     aac:	mov	r3, #4
     ab0:	movt	r2, #0
     ab4:	bl	0 <flatcc_json_printer_enum_flag>
     ab8:	mov	r0, r4
     abc:	mov	r1, r5
     ac0:	pop	{r4, r5, r6, r7, fp, lr}
     ac4:	b	0 <flatcc_json_printer_delimit_enum_flags>
     ac8:	mov	r0, r4
     acc:	pop	{r4, r5, r6, r7, fp, lr}
     ad0:	b	0 <flatcc_json_printer_int8>
     ad4:	movw	r2, #0
     ad8:	mov	r0, r4
     adc:	mov	r1, #0
     ae0:	mov	r3, #3
     ae4:	movt	r2, #0
     ae8:	bl	0 <flatcc_json_printer_enum_flag>
     aec:	mov	r6, #1
     af0:	tst	r7, #2
     af4:	beq	a98 <MyGame_Example_Color_print_json_enum+0x50>
     af8:	movw	r2, #0
     afc:	mov	r0, r4
     b00:	mov	r1, r6
     b04:	mov	r3, #5
     b08:	movt	r2, #0
     b0c:	bl	0 <flatcc_json_printer_enum_flag>
     b10:	add	r6, r6, #1
     b14:	tst	r7, #8
     b18:	bne	aa0 <MyGame_Example_Color_print_json_enum+0x58>
     b1c:	b	ab8 <MyGame_Example_Color_print_json_enum+0x70>

00000b20 <MyGame_Example_Any_print_json_union_type>:
     b20:	sub	r1, r1, #1
     b24:	cmp	r1, #3
     b28:	bhi	b54 <MyGame_Example_Any_print_json_union_type+0x34>
     b2c:	add	r2, pc, #0
     b30:	ldr	pc, [r2, r1, lsl #2]
     b34:	.word	0x00000b44
     b38:	.word	0x00000b64
     b3c:	.word	0x00000b74
     b40:	.word	0x00000b84
     b44:	movw	r1, #0
     b48:	mov	r2, #7
     b4c:	movt	r1, #0
     b50:	b	0 <flatcc_json_printer_enum>
     b54:	movw	r1, #0
     b58:	mov	r2, #4
     b5c:	movt	r1, #0
     b60:	b	0 <flatcc_json_printer_enum>
     b64:	movw	r1, #0
     b68:	mov	r2, #23
     b6c:	movt	r1, #0
     b70:	b	0 <flatcc_json_printer_enum>
     b74:	movw	r1, #0
     b78:	mov	r2, #8
     b7c:	movt	r1, #0
     b80:	b	0 <flatcc_json_printer_enum>
     b84:	movw	r1, #0
     b88:	mov	r2, #3
     b8c:	movt	r1, #0
     b90:	b	0 <flatcc_json_printer_enum>

00000b94 <MyGame_Example_Any_print_json_union>:
     b94:	ldrb	r2, [r1, #8]
     b98:	sub	r2, r2, #1
     b9c:	uxtb	r3, r2
     ba0:	cmp	r3, #3
     ba4:	bxhi	lr
     ba8:	movw	r3, #0
     bac:	sxtb	r2, r2
     bb0:	movt	r3, #0
     bb4:	ldr	r2, [r3, r2, lsl #2]
     bb8:	b	0 <flatcc_json_printer_union_table>

00000bbc <MyGame_Example_Test_print_json_struct>:
     bbc:	push	{r4, r5, r6, sl, fp, lr}
     bc0:	add	fp, sp, #16
     bc4:	sub	sp, sp, #8
     bc8:	mov	r5, r0
     bcc:	movw	r0, #0
     bd0:	mov	r4, r1
     bd4:	mov	r6, #1
     bd8:	mov	r1, #0
     bdc:	mov	r3, #0
     be0:	movt	r0, #0
     be4:	mov	r2, r4
     be8:	stm	sp, {r0, r6}
     bec:	mov	r0, r5
     bf0:	bl	0 <flatcc_json_printer_int16_struct_field>
     bf4:	movw	r0, #0
     bf8:	mov	r1, #1
     bfc:	mov	r2, r4
     c00:	mov	r3, #2
     c04:	movt	r0, #0
     c08:	stm	sp, {r0, r6}
     c0c:	mov	r0, r5
     c10:	bl	0 <flatcc_json_printer_int8_struct_field>
     c14:	sub	sp, fp, #16
     c18:	pop	{r4, r5, r6, sl, fp, pc}

00000c1c <MyGame_Example_Stat_print_json_table>:
     c1c:	push	{r4, r5, r6, sl, fp, lr}
     c20:	add	fp, sp, #16
     c24:	sub	sp, sp, #16
     c28:	movw	r3, #0
     c2c:	mov	r5, r0
     c30:	mov	r0, #2
     c34:	mov	r2, #0
     c38:	mov	r4, r1
     c3c:	mov	r6, #0
     c40:	movt	r3, #0
     c44:	str	r0, [sp]
     c48:	mov	r0, r5
     c4c:	bl	0 <flatcc_json_printer_string_field>
     c50:	movw	r3, #0
     c54:	mov	r0, #3
     c58:	mov	r1, r4
     c5c:	mov	r2, #1
     c60:	str	r6, [sp, #8]
     c64:	str	r6, [sp, #12]
     c68:	movt	r3, #0
     c6c:	str	r0, [sp]
     c70:	mov	r0, r5
     c74:	bl	0 <flatcc_json_printer_int64_field>
     c78:	movw	r3, #0
     c7c:	mov	r0, #5
     c80:	mov	r1, r4
     c84:	mov	r2, #2
     c88:	movt	r3, #0
     c8c:	stm	sp, {r0, r6}
     c90:	mov	r0, r5
     c94:	bl	0 <flatcc_json_printer_uint16_field>
     c98:	sub	sp, fp, #16
     c9c:	pop	{r4, r5, r6, sl, fp, pc}

00000ca0 <MyGame_Example_Ability_print_json_struct>:
     ca0:	push	{r4, r5, fp, lr}
     ca4:	add	fp, sp, #8
     ca8:	sub	sp, sp, #8
     cac:	mov	r4, r1
     cb0:	movw	r1, #0
     cb4:	mov	r5, r0
     cb8:	mov	r0, #2
     cbc:	mov	r3, #0
     cc0:	movt	r1, #0
     cc4:	str	r0, [sp, #4]
     cc8:	mov	r0, r5
     ccc:	mov	r2, r4
     cd0:	str	r1, [sp]
     cd4:	mov	r1, #0
     cd8:	bl	0 <flatcc_json_printer_uint32_struct_field>
     cdc:	movw	r1, #0
     ce0:	mov	r0, #8
     ce4:	mov	r2, r4
     ce8:	mov	r3, #4
     cec:	movt	r1, #0
     cf0:	str	r0, [sp, #4]
     cf4:	mov	r0, r5
     cf8:	str	r1, [sp]
     cfc:	mov	r1, #1
     d00:	bl	0 <flatcc_json_printer_uint32_struct_field>
     d04:	sub	sp, fp, #8
     d08:	pop	{r4, r5, fp, pc}

00000d0c <MyGame_InParentNamespace_print_json_table>:
     d0c:	bx	lr

00000d10 <MyGame_Example_TestBase64_print_json_table>:
     d10:	push	{r4, r5, r6, sl, fp, lr}
     d14:	add	fp, sp, #16
     d18:	sub	sp, sp, #8
     d1c:	movw	r3, #0
     d20:	mov	r5, r0
     d24:	mov	r0, #4
     d28:	mov	r6, #0
     d2c:	mov	r2, #0
     d30:	mov	r4, r1
     d34:	movt	r3, #0
     d38:	stm	sp, {r0, r6}
     d3c:	mov	r0, r5
     d40:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     d44:	movw	r3, #0
     d48:	mov	r0, #1
     d4c:	mov	r1, #7
     d50:	mov	r2, #1
     d54:	movt	r3, #0
     d58:	str	r1, [sp]
     d5c:	str	r0, [sp, #4]
     d60:	mov	r0, r5
     d64:	mov	r1, r4
     d68:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     d6c:	movw	r3, #0
     d70:	mov	r0, #6
     d74:	mov	r1, r4
     d78:	mov	r2, #2
     d7c:	movt	r3, #0
     d80:	stm	sp, {r0, r6}
     d84:	mov	r0, r5
     d88:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     d8c:	sub	sp, fp, #16
     d90:	pop	{r4, r5, r6, sl, fp, pc}

00000d94 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
     d94:	push	{r4, r5, r6, r7, fp, lr}
     d98:	add	fp, sp, #16
     d9c:	sub	sp, sp, #16
     da0:	movw	r3, #0
     da4:	movw	r7, #0
     da8:	mov	r5, r0
     dac:	mov	r0, #5
     db0:	mov	r6, #2
     db4:	mov	r2, #0
     db8:	mov	r4, r1
     dbc:	movt	r3, #0
     dc0:	movt	r7, #0
     dc4:	stm	sp, {r0, r6, r7}
     dc8:	mov	r0, r5
     dcc:	bl	0 <flatcc_json_printer_int8_enum_field>
     dd0:	movw	r3, #0
     dd4:	mov	r0, #6
     dd8:	mov	r1, r4
     ddc:	mov	r2, #1
     de0:	movt	r3, #0
     de4:	stm	sp, {r0, r6, r7}
     de8:	mov	r0, r5
     dec:	bl	0 <flatcc_json_printer_int8_enum_field>
     df0:	movw	r3, #0
     df4:	mov	r0, r5
     df8:	mov	r1, r4
     dfc:	mov	r2, #2
     e00:	str	r6, [sp]
     e04:	str	r6, [sp, #4]
     e08:	movt	r3, #0
     e0c:	bl	0 <flatcc_json_printer_uint8_field>
     e10:	movw	r3, #0
     e14:	mov	r0, #3
     e18:	mov	r1, r4
     e1c:	mov	r2, #3
     e20:	movt	r3, #0
     e24:	stm	sp, {r0, r6}
     e28:	mov	r0, r5
     e2c:	bl	0 <flatcc_json_printer_uint8_field>
     e30:	sub	sp, fp, #16
     e34:	pop	{r4, r5, r6, r7, fp, pc}

00000e38 <MyGame_Example2_Monster_print_json_table>:
     e38:	bx	lr

00000e3c <MyGame_Example_Alt_print_json_table>:
     e3c:	push	{r4, r5, fp, lr}
     e40:	add	fp, sp, #8
     e44:	sub	sp, sp, #16
     e48:	mov	r5, r0
     e4c:	movw	r0, #0
     e50:	movw	r3, #0
     e54:	mov	r4, r1
     e58:	mov	r1, #6
     e5c:	mov	r2, #0
     e60:	movt	r0, #0
     e64:	movt	r3, #0
     e68:	str	r1, [sp]
     e6c:	mov	r1, r4
     e70:	str	r0, [sp, #4]
     e74:	mov	r0, r5
     e78:	bl	0 <flatcc_json_printer_table_field>
     e7c:	movw	r0, #0
     e80:	movw	r3, #0
     e84:	mov	r1, #5
     e88:	mov	r2, #1
     e8c:	movt	r0, #0
     e90:	movt	r3, #0
     e94:	str	r1, [sp]
     e98:	mov	r1, r4
     e9c:	str	r0, [sp, #4]
     ea0:	mov	r0, r5
     ea4:	bl	0 <flatcc_json_printer_table_field>
     ea8:	movw	r0, #0
     eac:	movw	r1, #0
     eb0:	movw	r3, #0
     eb4:	mov	r2, #7
     eb8:	movt	r0, #0
     ebc:	movt	r1, #0
     ec0:	movt	r3, #0
     ec4:	str	r2, [sp]
     ec8:	mov	r2, #3
     ecc:	str	r1, [sp, #4]
     ed0:	str	r0, [sp, #8]
     ed4:	mov	r0, r5
     ed8:	mov	r1, r4
     edc:	bl	0 <flatcc_json_printer_union_vector_field>
     ee0:	sub	sp, fp, #8
     ee4:	pop	{r4, r5, fp, pc}

00000ee8 <MyGame_Example_TestJSONPrefix_print_json_table>:
     ee8:	push	{r4, r5, r6, sl, fp, lr}
     eec:	add	fp, sp, #16
     ef0:	sub	sp, sp, #8
     ef4:	mov	r5, r0
     ef8:	movw	r0, #0
     efc:	movw	r3, #0
     f00:	mov	r4, r1
     f04:	mov	r1, #21
     f08:	mov	r2, #0
     f0c:	movt	r0, #0
     f10:	movt	r3, #0
     f14:	str	r1, [sp]
     f18:	mov	r1, r4
     f1c:	str	r0, [sp, #4]
     f20:	mov	r0, r5
     f24:	bl	0 <flatcc_json_printer_table_field>
     f28:	movw	r0, #0
     f2c:	movw	r3, #0
     f30:	mov	r6, #22
     f34:	mov	r1, r4
     f38:	mov	r2, #1
     f3c:	movt	r0, #0
     f40:	movt	r3, #0
     f44:	str	r6, [sp]
     f48:	str	r0, [sp, #4]
     f4c:	mov	r0, r5
     f50:	bl	0 <flatcc_json_printer_table_field>
     f54:	movw	r0, #0
     f58:	movw	r3, #0
     f5c:	mov	r1, r4
     f60:	mov	r2, #2
     f64:	str	r6, [sp]
     f68:	movt	r0, #0
     f6c:	movt	r3, #0
     f70:	str	r0, [sp, #4]
     f74:	mov	r0, r5
     f78:	bl	0 <flatcc_json_printer_table_field>
     f7c:	sub	sp, fp, #16
     f80:	pop	{r4, r5, r6, sl, fp, pc}

00000f84 <Fantasy_Movie_print_json_table>:
     f84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
     f88:	add	fp, sp, #24
     f8c:	sub	sp, sp, #16
     f90:	movw	r6, #0
     f94:	movw	r3, #0
     f98:	movw	r7, #0
     f9c:	mov	r5, r0
     fa0:	mov	r0, #14
     fa4:	mov	r2, #1
     fa8:	mov	r4, r1
     fac:	movt	r6, #0
     fb0:	movt	r3, #0
     fb4:	movt	r7, #0
     fb8:	stm	sp, {r0, r7}
     fbc:	mov	r0, r5
     fc0:	str	r6, [sp, #8]
     fc4:	bl	0 <flatcc_json_printer_union_field>
     fc8:	movw	r3, #0
     fcc:	mov	r8, #10
     fd0:	mov	r0, r5
     fd4:	mov	r1, r4
     fd8:	mov	r2, #3
     fdc:	str	r7, [sp, #4]
     fe0:	str	r6, [sp, #8]
     fe4:	movt	r3, #0
     fe8:	str	r8, [sp]
     fec:	bl	0 <flatcc_json_printer_union_field>
     ff0:	movw	r3, #0
     ff4:	mov	r0, #9
     ff8:	mov	r1, r4
     ffc:	mov	r2, #5
    1000:	mov	r9, #5
    1004:	movt	r3, #0
    1008:	stm	sp, {r0, r7}
    100c:	mov	r0, r5
    1010:	str	r6, [sp, #8]
    1014:	bl	0 <flatcc_json_printer_union_field>
    1018:	movw	r3, #0
    101c:	mov	r0, r5
    1020:	mov	r1, r4
    1024:	mov	r2, #7
    1028:	str	r9, [sp]
    102c:	str	r7, [sp, #4]
    1030:	str	r6, [sp, #8]
    1034:	movt	r3, #0
    1038:	bl	0 <flatcc_json_printer_union_field>
    103c:	movw	r3, #0
    1040:	mov	r0, r5
    1044:	mov	r1, r4
    1048:	mov	r2, #9
    104c:	str	r8, [sp]
    1050:	str	r7, [sp, #4]
    1054:	str	r6, [sp, #8]
    1058:	movt	r3, #0
    105c:	bl	0 <flatcc_json_printer_union_vector_field>
    1060:	sub	sp, fp, #24
    1064:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00001068 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
    1068:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    106c:	add	fp, sp, #24
    1070:	sub	sp, sp, #16
    1074:	movw	r3, #0
    1078:	mov	r9, #4
    107c:	mov	r2, #0
    1080:	mov	r4, r1
    1084:	mov	r5, r0
    1088:	mov	r6, #0
    108c:	movt	r3, #0
    1090:	str	r9, [sp]
    1094:	bl	0 <flatcc_json_printer_string_field>
    1098:	movw	r3, #0
    109c:	mov	r8, #9
    10a0:	mov	r0, r5
    10a4:	mov	r1, r4
    10a8:	mov	r2, #1
    10ac:	str	r6, [sp, #4]
    10b0:	movt	r3, #0
    10b4:	str	r8, [sp]
    10b8:	bl	0 <flatcc_json_printer_uint32_field>
    10bc:	movw	r3, #0
    10c0:	mov	r0, r5
    10c4:	mov	r1, r4
    10c8:	mov	r2, #2
    10cc:	str	r9, [sp]
    10d0:	movt	r3, #0
    10d4:	bl	0 <flatcc_json_printer_string_field>
    10d8:	movw	r3, #0
    10dc:	mov	r7, #8
    10e0:	mov	r0, r5
    10e4:	mov	r1, r4
    10e8:	mov	r2, #3
    10ec:	str	r6, [sp, #8]
    10f0:	str	r6, [sp, #12]
    10f4:	movt	r3, #0
    10f8:	str	r7, [sp]
    10fc:	bl	0 <flatcc_json_printer_int64_field>
    1100:	movw	r3, #0
    1104:	mov	r0, r5
    1108:	mov	r1, r4
    110c:	mov	r2, #4
    1110:	str	r9, [sp]
    1114:	movt	r3, #0
    1118:	bl	0 <flatcc_json_printer_string_field>
    111c:	movw	r3, #0
    1120:	mov	r0, r5
    1124:	mov	r1, r4
    1128:	mov	r2, #5
    112c:	str	r6, [sp, #8]
    1130:	str	r6, [sp, #12]
    1134:	str	r7, [sp]
    1138:	movt	r3, #0
    113c:	bl	0 <flatcc_json_printer_int64_field>
    1140:	movw	r3, #0
    1144:	mov	r0, r5
    1148:	mov	r1, r4
    114c:	mov	r2, #6
    1150:	str	r8, [sp]
    1154:	str	r6, [sp, #4]
    1158:	movt	r3, #0
    115c:	bl	0 <flatcc_json_printer_uint32_field>
    1160:	movw	r3, #0
    1164:	mov	r0, r5
    1168:	mov	r1, r4
    116c:	mov	r2, #7
    1170:	str	r6, [sp, #8]
    1174:	str	r6, [sp, #12]
    1178:	str	r7, [sp]
    117c:	movt	r3, #0
    1180:	bl	0 <flatcc_json_printer_int64_field>
    1184:	movw	r3, #0
    1188:	mov	r0, r5
    118c:	mov	r1, r4
    1190:	mov	r2, #8
    1194:	str	r8, [sp]
    1198:	str	r6, [sp, #4]
    119c:	movt	r3, #0
    11a0:	bl	0 <flatcc_json_printer_uint32_field>
    11a4:	sub	sp, fp, #24
    11a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000011ac <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
    11ac:	push	{r4, r5, r6, sl, fp, lr}
    11b0:	add	fp, sp, #16
    11b4:	sub	sp, sp, #16
    11b8:	movw	r3, #0
    11bc:	mov	r5, r0
    11c0:	mov	r0, #15
    11c4:	mov	r6, #0
    11c8:	mov	r2, #0
    11cc:	mov	r4, r1
    11d0:	movt	r3, #0
    11d4:	str	r0, [sp]
    11d8:	mov	r0, r5
    11dc:	str	r6, [sp, #8]
    11e0:	str	r6, [sp, #12]
    11e4:	bl	0 <flatcc_json_printer_int64_field>
    11e8:	movw	r3, #0
    11ec:	mov	r0, #16
    11f0:	mov	r1, r4
    11f4:	mov	r2, #1
    11f8:	movt	r3, #0
    11fc:	stm	sp, {r0, r6}
    1200:	mov	r0, r5
    1204:	bl	0 <flatcc_json_printer_uint32_field>
    1208:	sub	sp, fp, #16
    120c:	pop	{r4, r5, r6, sl, fp, pc}

00001210 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
    1210:	push	{r4, r5, r6, sl, fp, lr}
    1214:	add	fp, sp, #16
    1218:	sub	sp, sp, #16
    121c:	movw	r3, #0
    1220:	mov	r5, r0
    1224:	mov	r0, #15
    1228:	mov	r6, #0
    122c:	mov	r2, #0
    1230:	mov	r4, r1
    1234:	movt	r3, #0
    1238:	str	r0, [sp]
    123c:	mov	r0, r5
    1240:	str	r6, [sp, #8]
    1244:	str	r6, [sp, #12]
    1248:	bl	0 <flatcc_json_printer_int64_field>
    124c:	movw	r3, #0
    1250:	mov	r0, #21
    1254:	mov	r1, r4
    1258:	mov	r2, #1
    125c:	movt	r3, #0
    1260:	stm	sp, {r0, r6}
    1264:	mov	r0, r5
    1268:	bl	0 <flatcc_json_printer_uint32_field>
    126c:	sub	sp, fp, #16
    1270:	pop	{r4, r5, r6, sl, fp, pc}

00001274 <Fantasy_Character_print_json_union_type>:
    1274:	sub	r2, r1, #2
    1278:	cmp	r2, #9
    127c:	bhi	12c0 <Fantasy_Character_print_json_union_type+0x4c>
    1280:	add	r1, pc, #0
    1284:	ldr	pc, [r1, r2, lsl #2]
    1288:	.word	0x000012b0
    128c:	.word	0x000012d8
    1290:	.word	0x000012d8
    1294:	.word	0x000012d8
    1298:	.word	0x000012d8
    129c:	.word	0x000012d8
    12a0:	.word	0x000012e8
    12a4:	.word	0x000012f8
    12a8:	.word	0x00001308
    12ac:	.word	0x00001318
    12b0:	movw	r1, #0
    12b4:	mov	r2, #5
    12b8:	movt	r1, #0
    12bc:	b	0 <flatcc_json_printer_enum>
    12c0:	cmp	r1, #255	; 0xff
    12c4:	bne	12d8 <Fantasy_Character_print_json_union_type+0x64>
    12c8:	movw	r1, #0
    12cc:	mov	r2, #6
    12d0:	movt	r1, #0
    12d4:	b	0 <flatcc_json_printer_enum>
    12d8:	movw	r1, #0
    12dc:	mov	r2, #4
    12e0:	movt	r1, #0
    12e4:	b	0 <flatcc_json_printer_enum>
    12e8:	movw	r1, #0
    12ec:	mov	r2, #8
    12f0:	movt	r1, #0
    12f4:	b	0 <flatcc_json_printer_enum>
    12f8:	movw	r1, #0
    12fc:	mov	r2, #5
    1300:	movt	r1, #0
    1304:	b	0 <flatcc_json_printer_enum>
    1308:	movw	r1, #0
    130c:	mov	r2, #7
    1310:	movt	r1, #0
    1314:	b	0 <flatcc_json_printer_enum>
    1318:	movw	r1, #0
    131c:	mov	r2, #5
    1320:	movt	r1, #0
    1324:	b	0 <flatcc_json_printer_enum>

00001328 <Fantasy_Character_print_json_union>:
    1328:	ldrb	r3, [r1, #8]
    132c:	sub	r2, r3, #2
    1330:	cmp	r2, #9
    1334:	bhi	1374 <Fantasy_Character_print_json_union+0x4c>
    1338:	add	r3, pc, #0
    133c:	ldr	pc, [r3, r2, lsl #2]
    1340:	.word	0x00001380
    1344:	.word	0x00001398
    1348:	.word	0x00001398
    134c:	.word	0x00001398
    1350:	.word	0x00001398
    1354:	.word	0x00001398
    1358:	.word	0x0000138c
    135c:	.word	0x00001368
    1360:	.word	0x00001368
    1364:	.word	0x0000137c
    1368:	movw	r2, #0
    136c:	movt	r2, #0
    1370:	b	0 <flatcc_json_printer_union_struct>
    1374:	cmp	r3, #255	; 0xff
    1378:	bxne	lr
    137c:	b	0 <flatcc_json_printer_union_string>
    1380:	movw	r2, #0
    1384:	movt	r2, #0
    1388:	b	0 <flatcc_json_printer_union_table>
    138c:	movw	r2, #0
    1390:	movt	r2, #0
    1394:	b	0 <flatcc_json_printer_union_struct>
    1398:	bx	lr

0000139c <Fantasy_Attacker_print_json_table>:
    139c:	push	{fp, lr}
    13a0:	mov	fp, sp
    13a4:	sub	sp, sp, #8
    13a8:	mov	r3, #19
    13ac:	mov	r2, #0
    13b0:	str	r3, [sp]
    13b4:	movw	r3, #0
    13b8:	str	r2, [sp, #4]
    13bc:	mov	r2, #0
    13c0:	movt	r3, #0
    13c4:	bl	0 <flatcc_json_printer_int32_field>
    13c8:	mov	sp, fp
    13cc:	pop	{fp, pc}

000013d0 <Fantasy_Rapunzel_print_json_struct>:
    13d0:	push	{fp, lr}
    13d4:	mov	fp, sp
    13d8:	sub	sp, sp, #8
    13dc:	movw	r3, #0
    13e0:	mov	r2, r1
    13e4:	mov	r1, #11
    13e8:	movt	r3, #0
    13ec:	str	r1, [sp, #4]
    13f0:	mov	r1, #0
    13f4:	str	r3, [sp]
    13f8:	mov	r3, #0
    13fc:	bl	0 <flatcc_json_printer_uint16_struct_field>
    1400:	mov	sp, fp
    1404:	pop	{fp, pc}

00001408 <Fantasy_BookReader_print_json_struct>:
    1408:	push	{fp, lr}
    140c:	mov	fp, sp
    1410:	sub	sp, sp, #8
    1414:	movw	r3, #0
    1418:	mov	r2, r1
    141c:	mov	r1, #10
    1420:	movt	r3, #0
    1424:	str	r1, [sp, #4]
    1428:	mov	r1, #0
    142c:	str	r3, [sp]
    1430:	mov	r3, #0
    1434:	bl	0 <flatcc_json_printer_int32_struct_field>
    1438:	mov	sp, fp
    143c:	pop	{fp, pc}
