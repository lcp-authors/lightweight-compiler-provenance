
../compcert-repos/prog2/CMakeFiles/MT2E1-1.dir/Extras/Miniteste2-Exemplo1/prob1/avl.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avl_nova>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #8
  10:	mov	r0, #4
  14:	bl	0 <malloc>
  18:	mov	r3, r0
  1c:	str	r3, [fp, #-8]
  20:	ldr	r3, [fp, #-8]
  24:	cmp	r3, #0
  28:	bne	34 <avl_nova+0x34>
  2c:	mov	r3, #0
  30:	b	44 <avl_nova+0x44>
  34:	ldr	r3, [fp, #-8]
  38:	mov	r2, #0
  3c:	str	r2, [r3]
  40:	ldr	r3, [fp, #-8]
  44:	mov	r0, r3
  48:	sub	sp, fp, #4
  4c:	ldr	fp, [sp]
  50:	add	sp, sp, #4
  54:	pop	{pc}		; (ldr pc, [sp], #4)

00000058 <avl_apaga>:
  58:	str	fp, [sp, #-8]!
  5c:	str	lr, [sp, #4]
  60:	add	fp, sp, #4
  64:	sub	sp, sp, #8
  68:	str	r0, [fp, #-8]
  6c:	ldr	r3, [fp, #-8]
  70:	cmp	r3, #0
  74:	beq	c4 <avl_apaga+0x6c>
  78:	b	a8 <avl_apaga+0x50>
  7c:	ldr	r3, [fp, #-8]
  80:	ldr	r2, [r3]
  84:	ldr	r3, [fp, #-8]
  88:	ldr	r3, [r3]
  8c:	ldr	r3, [r3]
  90:	mov	r1, r3
  94:	mov	r0, r2
  98:	bl	9bc <avl_remove_impl>
  9c:	mov	r2, r0
  a0:	ldr	r3, [fp, #-8]
  a4:	str	r2, [r3]
  a8:	ldr	r3, [fp, #-8]
  ac:	ldr	r3, [r3]
  b0:	cmp	r3, #0
  b4:	bne	7c <avl_apaga+0x24>
  b8:	ldr	r0, [fp, #-8]
  bc:	bl	0 <free>
  c0:	b	c8 <avl_apaga+0x70>
  c4:	nop	{0}
  c8:	sub	sp, fp, #4
  cc:	ldr	fp, [sp]
  d0:	add	sp, sp, #4
  d4:	pop	{pc}		; (ldr pc, [sp], #4)

000000d8 <avl_pesquisa>:
  d8:	str	fp, [sp, #-8]!
  dc:	str	lr, [sp, #4]
  e0:	add	fp, sp, #4
  e4:	sub	sp, sp, #8
  e8:	str	r0, [fp, #-8]
  ec:	str	r1, [fp, #-12]
  f0:	ldr	r3, [fp, #-8]
  f4:	cmp	r3, #0
  f8:	beq	108 <avl_pesquisa+0x30>
  fc:	ldr	r3, [fp, #-12]
 100:	cmp	r3, #0
 104:	bne	110 <avl_pesquisa+0x38>
 108:	mov	r3, #0
 10c:	b	128 <avl_pesquisa+0x50>
 110:	ldr	r3, [fp, #-8]
 114:	ldr	r3, [r3]
 118:	ldr	r1, [fp, #-12]
 11c:	mov	r0, r3
 120:	bl	66c <avl_pesquisa_impl>
 124:	mov	r3, r0
 128:	mov	r0, r3
 12c:	sub	sp, fp, #4
 130:	ldr	fp, [sp]
 134:	add	sp, sp, #4
 138:	pop	{pc}		; (ldr pc, [sp], #4)

0000013c <avl_insere>:
 13c:	str	fp, [sp, #-8]!
 140:	str	lr, [sp, #4]
 144:	add	fp, sp, #4
 148:	sub	sp, sp, #8
 14c:	str	r0, [fp, #-8]
 150:	str	r1, [fp, #-12]
 154:	ldr	r3, [fp, #-8]
 158:	cmp	r3, #0
 15c:	beq	16c <avl_insere+0x30>
 160:	ldr	r3, [fp, #-12]
 164:	cmp	r3, #0
 168:	bne	174 <avl_insere+0x38>
 16c:	mvn	r3, #0
 170:	b	198 <avl_insere+0x5c>
 174:	ldr	r3, [fp, #-8]
 178:	ldr	r3, [r3]
 17c:	ldr	r1, [fp, #-12]
 180:	mov	r0, r3
 184:	bl	728 <avl_insere_impl>
 188:	mov	r2, r0
 18c:	ldr	r3, [fp, #-8]
 190:	str	r2, [r3]
 194:	mov	r3, #0
 198:	mov	r0, r3
 19c:	sub	sp, fp, #4
 1a0:	ldr	fp, [sp]
 1a4:	add	sp, sp, #4
 1a8:	pop	{pc}		; (ldr pc, [sp], #4)

000001ac <avl_remove>:
 1ac:	str	fp, [sp, #-8]!
 1b0:	str	lr, [sp, #4]
 1b4:	add	fp, sp, #4
 1b8:	sub	sp, sp, #8
 1bc:	str	r0, [fp, #-8]
 1c0:	str	r1, [fp, #-12]
 1c4:	ldr	r3, [fp, #-8]
 1c8:	cmp	r3, #0
 1cc:	beq	1dc <avl_remove+0x30>
 1d0:	ldr	r3, [fp, #-12]
 1d4:	cmp	r3, #0
 1d8:	bne	1e4 <avl_remove+0x38>
 1dc:	mvn	r3, #0
 1e0:	b	208 <avl_remove+0x5c>
 1e4:	ldr	r3, [fp, #-8]
 1e8:	ldr	r3, [r3]
 1ec:	ldr	r1, [fp, #-12]
 1f0:	mov	r0, r3
 1f4:	bl	9bc <avl_remove_impl>
 1f8:	mov	r2, r0
 1fc:	ldr	r3, [fp, #-8]
 200:	str	r2, [r3]
 204:	mov	r3, #0
 208:	mov	r0, r3
 20c:	sub	sp, fp, #4
 210:	ldr	fp, [sp]
 214:	add	sp, sp, #4
 218:	pop	{pc}		; (ldr pc, [sp], #4)

0000021c <avl_min>:
 21c:	str	fp, [sp, #-8]!
 220:	str	lr, [sp, #4]
 224:	add	fp, sp, #4
 228:	sub	sp, sp, #8
 22c:	str	r0, [fp, #-8]
 230:	ldr	r3, [fp, #-8]
 234:	cmp	r3, #0
 238:	bne	244 <avl_min+0x28>
 23c:	mov	r3, #0
 240:	b	25c <avl_min+0x40>
 244:	ldr	r3, [fp, #-8]
 248:	ldr	r3, [r3]
 24c:	mov	r0, r3
 250:	bl	924 <avl_no_valormin>
 254:	mov	r3, r0
 258:	ldr	r3, [r3]
 25c:	mov	r0, r3
 260:	sub	sp, fp, #4
 264:	ldr	fp, [sp]
 268:	add	sp, sp, #4
 26c:	pop	{pc}		; (ldr pc, [sp], #4)

00000270 <avl_max>:
 270:	str	fp, [sp, #-8]!
 274:	str	lr, [sp, #4]
 278:	add	fp, sp, #4
 27c:	sub	sp, sp, #8
 280:	str	r0, [fp, #-8]
 284:	ldr	r3, [fp, #-8]
 288:	cmp	r3, #0
 28c:	bne	298 <avl_max+0x28>
 290:	mov	r3, #0
 294:	b	2b0 <avl_max+0x40>
 298:	ldr	r3, [fp, #-8]
 29c:	ldr	r3, [r3]
 2a0:	mov	r0, r3
 2a4:	bl	970 <avl_no_valormax>
 2a8:	mov	r3, r0
 2ac:	ldr	r3, [r3]
 2b0:	mov	r0, r3
 2b4:	sub	sp, fp, #4
 2b8:	ldr	fp, [sp]
 2bc:	add	sp, sp, #4
 2c0:	pop	{pc}		; (ldr pc, [sp], #4)

000002c4 <avl_imprime>:
 2c4:	str	fp, [sp, #-8]!
 2c8:	str	lr, [sp, #4]
 2cc:	add	fp, sp, #4
 2d0:	sub	sp, sp, #8
 2d4:	str	r0, [fp, #-8]
 2d8:	ldr	r3, [fp, #-8]
 2dc:	cmp	r3, #0
 2e0:	beq	300 <avl_imprime+0x3c>
 2e4:	ldr	r3, [fp, #-8]
 2e8:	ldr	r3, [r3]
 2ec:	mov	r0, r3
 2f0:	bl	d54 <avl_preordem_impl>
 2f4:	mov	r0, #10
 2f8:	bl	0 <putchar>
 2fc:	b	304 <avl_imprime+0x40>
 300:	nop	{0}
 304:	sub	sp, fp, #4
 308:	ldr	fp, [sp]
 30c:	add	sp, sp, #4
 310:	pop	{pc}		; (ldr pc, [sp], #4)

00000314 <avl_altura>:
 314:	push	{fp}		; (str fp, [sp, #-4]!)
 318:	add	fp, sp, #0
 31c:	sub	sp, sp, #12
 320:	str	r0, [fp, #-8]
 324:	ldr	r3, [fp, #-8]
 328:	cmp	r3, #0
 32c:	bne	338 <avl_altura+0x24>
 330:	mvn	r3, #0
 334:	b	340 <avl_altura+0x2c>
 338:	ldr	r3, [fp, #-8]
 33c:	ldr	r3, [r3, #12]
 340:	mov	r0, r3
 344:	add	sp, fp, #0
 348:	pop	{fp}		; (ldr fp, [sp], #4)
 34c:	bx	lr

00000350 <max>:
 350:	push	{fp}		; (str fp, [sp, #-4]!)
 354:	add	fp, sp, #0
 358:	sub	sp, sp, #12
 35c:	str	r0, [fp, #-8]
 360:	str	r1, [fp, #-12]
 364:	ldr	r2, [fp, #-12]
 368:	ldr	r3, [fp, #-8]
 36c:	cmp	r2, r3
 370:	movge	r3, r2
 374:	movlt	r3, r3
 378:	mov	r0, r3
 37c:	add	sp, fp, #0
 380:	pop	{fp}		; (ldr fp, [sp], #4)
 384:	bx	lr

00000388 <avl_novo_no>:
 388:	str	fp, [sp, #-8]!
 38c:	str	lr, [sp, #4]
 390:	add	fp, sp, #4
 394:	sub	sp, sp, #16
 398:	str	r0, [fp, #-16]
 39c:	mov	r0, #16
 3a0:	bl	0 <malloc>
 3a4:	mov	r3, r0
 3a8:	str	r3, [fp, #-8]
 3ac:	ldr	r0, [fp, #-16]
 3b0:	bl	0 <strlen>
 3b4:	mov	r3, r0
 3b8:	add	r3, r3, #1
 3bc:	mov	r0, r3
 3c0:	bl	0 <malloc>
 3c4:	mov	r3, r0
 3c8:	mov	r2, r3
 3cc:	ldr	r3, [fp, #-8]
 3d0:	str	r2, [r3]
 3d4:	ldr	r3, [fp, #-8]
 3d8:	ldr	r3, [r3]
 3dc:	ldr	r1, [fp, #-16]
 3e0:	mov	r0, r3
 3e4:	bl	0 <strcpy>
 3e8:	ldr	r3, [fp, #-8]
 3ec:	mov	r2, #0
 3f0:	str	r2, [r3, #4]
 3f4:	ldr	r3, [fp, #-8]
 3f8:	mov	r2, #0
 3fc:	str	r2, [r3, #8]
 400:	ldr	r3, [fp, #-8]
 404:	mov	r2, #0
 408:	str	r2, [r3, #12]
 40c:	ldr	r3, [fp, #-8]
 410:	mov	r0, r3
 414:	sub	sp, fp, #4
 418:	ldr	fp, [sp]
 41c:	add	sp, sp, #4
 420:	pop	{pc}		; (ldr pc, [sp], #4)

00000424 <roda_direita>:
 424:	str	r4, [sp, #-12]!
 428:	str	fp, [sp, #4]
 42c:	str	lr, [sp, #8]
 430:	add	fp, sp, #8
 434:	sub	sp, sp, #20
 438:	str	r0, [fp, #-24]	; 0xffffffe8
 43c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 440:	ldr	r3, [r3, #4]
 444:	str	r3, [fp, #-16]
 448:	ldr	r3, [fp, #-16]
 44c:	ldr	r3, [r3, #8]
 450:	str	r3, [fp, #-20]	; 0xffffffec
 454:	ldr	r3, [fp, #-16]
 458:	ldr	r2, [fp, #-24]	; 0xffffffe8
 45c:	str	r2, [r3, #8]
 460:	ldr	r3, [fp, #-24]	; 0xffffffe8
 464:	ldr	r2, [fp, #-20]	; 0xffffffec
 468:	str	r2, [r3, #4]
 46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 470:	ldr	r3, [r3, #4]
 474:	mov	r0, r3
 478:	bl	314 <avl_altura>
 47c:	mov	r4, r0
 480:	ldr	r3, [fp, #-24]	; 0xffffffe8
 484:	ldr	r3, [r3, #8]
 488:	mov	r0, r3
 48c:	bl	314 <avl_altura>
 490:	mov	r3, r0
 494:	mov	r1, r3
 498:	mov	r0, r4
 49c:	bl	350 <max>
 4a0:	mov	r3, r0
 4a4:	add	r2, r3, #1
 4a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4ac:	str	r2, [r3, #12]
 4b0:	ldr	r3, [fp, #-16]
 4b4:	ldr	r3, [r3, #4]
 4b8:	mov	r0, r3
 4bc:	bl	314 <avl_altura>
 4c0:	mov	r4, r0
 4c4:	ldr	r3, [fp, #-16]
 4c8:	ldr	r3, [r3, #8]
 4cc:	mov	r0, r3
 4d0:	bl	314 <avl_altura>
 4d4:	mov	r3, r0
 4d8:	mov	r1, r3
 4dc:	mov	r0, r4
 4e0:	bl	350 <max>
 4e4:	mov	r3, r0
 4e8:	add	r2, r3, #1
 4ec:	ldr	r3, [fp, #-16]
 4f0:	str	r2, [r3, #12]
 4f4:	ldr	r3, [fp, #-16]
 4f8:	mov	r0, r3
 4fc:	sub	sp, fp, #8
 500:	ldr	r4, [sp]
 504:	ldr	fp, [sp, #4]
 508:	add	sp, sp, #8
 50c:	pop	{pc}		; (ldr pc, [sp], #4)

00000510 <roda_esquerda>:
 510:	str	r4, [sp, #-12]!
 514:	str	fp, [sp, #4]
 518:	str	lr, [sp, #8]
 51c:	add	fp, sp, #8
 520:	sub	sp, sp, #20
 524:	str	r0, [fp, #-24]	; 0xffffffe8
 528:	ldr	r3, [fp, #-24]	; 0xffffffe8
 52c:	ldr	r3, [r3, #8]
 530:	str	r3, [fp, #-16]
 534:	ldr	r3, [fp, #-16]
 538:	ldr	r3, [r3, #4]
 53c:	str	r3, [fp, #-20]	; 0xffffffec
 540:	ldr	r3, [fp, #-16]
 544:	ldr	r2, [fp, #-24]	; 0xffffffe8
 548:	str	r2, [r3, #4]
 54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 550:	ldr	r2, [fp, #-20]	; 0xffffffec
 554:	str	r2, [r3, #8]
 558:	ldr	r3, [fp, #-24]	; 0xffffffe8
 55c:	ldr	r3, [r3, #4]
 560:	mov	r0, r3
 564:	bl	314 <avl_altura>
 568:	mov	r4, r0
 56c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 570:	ldr	r3, [r3, #8]
 574:	mov	r0, r3
 578:	bl	314 <avl_altura>
 57c:	mov	r3, r0
 580:	mov	r1, r3
 584:	mov	r0, r4
 588:	bl	350 <max>
 58c:	mov	r3, r0
 590:	add	r2, r3, #1
 594:	ldr	r3, [fp, #-24]	; 0xffffffe8
 598:	str	r2, [r3, #12]
 59c:	ldr	r3, [fp, #-16]
 5a0:	ldr	r3, [r3, #4]
 5a4:	mov	r0, r3
 5a8:	bl	314 <avl_altura>
 5ac:	mov	r4, r0
 5b0:	ldr	r3, [fp, #-16]
 5b4:	ldr	r3, [r3, #8]
 5b8:	mov	r0, r3
 5bc:	bl	314 <avl_altura>
 5c0:	mov	r3, r0
 5c4:	mov	r1, r3
 5c8:	mov	r0, r4
 5cc:	bl	350 <max>
 5d0:	mov	r3, r0
 5d4:	add	r2, r3, #1
 5d8:	ldr	r3, [fp, #-16]
 5dc:	str	r2, [r3, #12]
 5e0:	ldr	r3, [fp, #-16]
 5e4:	mov	r0, r3
 5e8:	sub	sp, fp, #8
 5ec:	ldr	r4, [sp]
 5f0:	ldr	fp, [sp, #4]
 5f4:	add	sp, sp, #8
 5f8:	pop	{pc}		; (ldr pc, [sp], #4)

000005fc <calc_balanceamento>:
 5fc:	str	r4, [sp, #-12]!
 600:	str	fp, [sp, #4]
 604:	str	lr, [sp, #8]
 608:	add	fp, sp, #8
 60c:	sub	sp, sp, #12
 610:	str	r0, [fp, #-16]
 614:	ldr	r3, [fp, #-16]
 618:	cmp	r3, #0
 61c:	bne	628 <calc_balanceamento+0x2c>
 620:	mov	r3, #0
 624:	b	654 <calc_balanceamento+0x58>
 628:	ldr	r3, [fp, #-16]
 62c:	ldr	r3, [r3, #8]
 630:	mov	r0, r3
 634:	bl	314 <avl_altura>
 638:	mov	r4, r0
 63c:	ldr	r3, [fp, #-16]
 640:	ldr	r3, [r3, #4]
 644:	mov	r0, r3
 648:	bl	314 <avl_altura>
 64c:	mov	r3, r0
 650:	sub	r3, r4, r3
 654:	mov	r0, r3
 658:	sub	sp, fp, #8
 65c:	ldr	r4, [sp]
 660:	ldr	fp, [sp, #4]
 664:	add	sp, sp, #8
 668:	pop	{pc}		; (ldr pc, [sp], #4)

0000066c <avl_pesquisa_impl>:
 66c:	str	fp, [sp, #-8]!
 670:	str	lr, [sp, #4]
 674:	add	fp, sp, #4
 678:	sub	sp, sp, #8
 67c:	str	r0, [fp, #-8]
 680:	str	r1, [fp, #-12]
 684:	ldr	r3, [fp, #-8]
 688:	cmp	r3, #0
 68c:	bne	698 <avl_pesquisa_impl+0x2c>
 690:	mov	r3, #0
 694:	b	714 <avl_pesquisa_impl+0xa8>
 698:	ldr	r3, [fp, #-8]
 69c:	ldr	r3, [r3]
 6a0:	mov	r1, r3
 6a4:	ldr	r0, [fp, #-12]
 6a8:	bl	0 <strcmp>
 6ac:	mov	r3, r0
 6b0:	cmp	r3, #0
 6b4:	bge	6d4 <avl_pesquisa_impl+0x68>
 6b8:	ldr	r3, [fp, #-8]
 6bc:	ldr	r3, [r3, #4]
 6c0:	ldr	r1, [fp, #-12]
 6c4:	mov	r0, r3
 6c8:	bl	66c <avl_pesquisa_impl>
 6cc:	mov	r3, r0
 6d0:	b	714 <avl_pesquisa_impl+0xa8>
 6d4:	ldr	r3, [fp, #-8]
 6d8:	ldr	r3, [r3]
 6dc:	mov	r1, r3
 6e0:	ldr	r0, [fp, #-12]
 6e4:	bl	0 <strcmp>
 6e8:	mov	r3, r0
 6ec:	cmp	r3, #0
 6f0:	ble	710 <avl_pesquisa_impl+0xa4>
 6f4:	ldr	r3, [fp, #-8]
 6f8:	ldr	r3, [r3, #8]
 6fc:	ldr	r1, [fp, #-12]
 700:	mov	r0, r3
 704:	bl	66c <avl_pesquisa_impl>
 708:	mov	r3, r0
 70c:	b	714 <avl_pesquisa_impl+0xa8>
 710:	ldr	r3, [fp, #-8]
 714:	mov	r0, r3
 718:	sub	sp, fp, #4
 71c:	ldr	fp, [sp]
 720:	add	sp, sp, #4
 724:	pop	{pc}		; (ldr pc, [sp], #4)

00000728 <avl_insere_impl>:
 728:	str	r4, [sp, #-12]!
 72c:	str	fp, [sp, #4]
 730:	str	lr, [sp, #8]
 734:	add	fp, sp, #8
 738:	sub	sp, sp, #20
 73c:	str	r0, [fp, #-24]	; 0xffffffe8
 740:	str	r1, [fp, #-28]	; 0xffffffe4
 744:	ldr	r3, [fp, #-24]	; 0xffffffe8
 748:	cmp	r3, #0
 74c:	bne	760 <avl_insere_impl+0x38>
 750:	ldr	r0, [fp, #-28]	; 0xffffffe4
 754:	bl	388 <avl_novo_no>
 758:	mov	r3, r0
 75c:	b	90c <avl_insere_impl+0x1e4>
 760:	ldr	r3, [fp, #-24]	; 0xffffffe8
 764:	ldr	r3, [r3]
 768:	mov	r1, r3
 76c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 770:	bl	0 <strcmp>
 774:	mov	r3, r0
 778:	cmp	r3, #0
 77c:	bge	7a4 <avl_insere_impl+0x7c>
 780:	ldr	r3, [fp, #-24]	; 0xffffffe8
 784:	ldr	r3, [r3, #4]
 788:	ldr	r1, [fp, #-28]	; 0xffffffe4
 78c:	mov	r0, r3
 790:	bl	728 <avl_insere_impl>
 794:	mov	r2, r0
 798:	ldr	r3, [fp, #-24]	; 0xffffffe8
 79c:	str	r2, [r3, #4]
 7a0:	b	7f0 <avl_insere_impl+0xc8>
 7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7a8:	ldr	r3, [r3]
 7ac:	mov	r1, r3
 7b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
 7b4:	bl	0 <strcmp>
 7b8:	mov	r3, r0
 7bc:	cmp	r3, #0
 7c0:	ble	7e8 <avl_insere_impl+0xc0>
 7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7c8:	ldr	r3, [r3, #8]
 7cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
 7d0:	mov	r0, r3
 7d4:	bl	728 <avl_insere_impl>
 7d8:	mov	r2, r0
 7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7e0:	str	r2, [r3, #8]
 7e4:	b	7f0 <avl_insere_impl+0xc8>
 7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7ec:	b	90c <avl_insere_impl+0x1e4>
 7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7f4:	ldr	r3, [r3, #4]
 7f8:	mov	r0, r3
 7fc:	bl	314 <avl_altura>
 800:	mov	r4, r0
 804:	ldr	r3, [fp, #-24]	; 0xffffffe8
 808:	ldr	r3, [r3, #8]
 80c:	mov	r0, r3
 810:	bl	314 <avl_altura>
 814:	mov	r3, r0
 818:	mov	r1, r3
 81c:	mov	r0, r4
 820:	bl	350 <max>
 824:	mov	r3, r0
 828:	add	r2, r3, #1
 82c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 830:	str	r2, [r3, #12]
 834:	ldr	r0, [fp, #-24]	; 0xffffffe8
 838:	bl	5fc <calc_balanceamento>
 83c:	str	r0, [fp, #-16]
 840:	ldr	r3, [fp, #-16]
 844:	cmp	r3, #1
 848:	ble	8a4 <avl_insere_impl+0x17c>
 84c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 850:	ldr	r3, [r3, #8]
 854:	mov	r0, r3
 858:	bl	5fc <calc_balanceamento>
 85c:	mov	r3, r0
 860:	cmp	r3, #0
 864:	bge	894 <avl_insere_impl+0x16c>
 868:	ldr	r3, [fp, #-24]	; 0xffffffe8
 86c:	ldr	r3, [r3, #8]
 870:	mov	r0, r3
 874:	bl	424 <roda_direita>
 878:	mov	r2, r0
 87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 880:	str	r2, [r3, #8]
 884:	ldr	r0, [fp, #-24]	; 0xffffffe8
 888:	bl	510 <roda_esquerda>
 88c:	mov	r3, r0
 890:	b	90c <avl_insere_impl+0x1e4>
 894:	ldr	r0, [fp, #-24]	; 0xffffffe8
 898:	bl	510 <roda_esquerda>
 89c:	mov	r3, r0
 8a0:	b	90c <avl_insere_impl+0x1e4>
 8a4:	ldr	r3, [fp, #-16]
 8a8:	cmn	r3, #1
 8ac:	bge	908 <avl_insere_impl+0x1e0>
 8b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8b4:	ldr	r3, [r3, #4]
 8b8:	mov	r0, r3
 8bc:	bl	5fc <calc_balanceamento>
 8c0:	mov	r3, r0
 8c4:	cmp	r3, #0
 8c8:	ble	8f8 <avl_insere_impl+0x1d0>
 8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8d0:	ldr	r3, [r3, #4]
 8d4:	mov	r0, r3
 8d8:	bl	510 <roda_esquerda>
 8dc:	mov	r2, r0
 8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8e4:	str	r2, [r3, #4]
 8e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8ec:	bl	424 <roda_direita>
 8f0:	mov	r3, r0
 8f4:	b	90c <avl_insere_impl+0x1e4>
 8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8fc:	bl	424 <roda_direita>
 900:	mov	r3, r0
 904:	b	90c <avl_insere_impl+0x1e4>
 908:	ldr	r3, [fp, #-24]	; 0xffffffe8
 90c:	mov	r0, r3
 910:	sub	sp, fp, #8
 914:	ldr	r4, [sp]
 918:	ldr	fp, [sp, #4]
 91c:	add	sp, sp, #8
 920:	pop	{pc}		; (ldr pc, [sp], #4)

00000924 <avl_no_valormin>:
 924:	push	{fp}		; (str fp, [sp, #-4]!)
 928:	add	fp, sp, #0
 92c:	sub	sp, sp, #20
 930:	str	r0, [fp, #-16]
 934:	ldr	r3, [fp, #-16]
 938:	str	r3, [fp, #-8]
 93c:	b	94c <avl_no_valormin+0x28>
 940:	ldr	r3, [fp, #-8]
 944:	ldr	r3, [r3, #4]
 948:	str	r3, [fp, #-8]
 94c:	ldr	r3, [fp, #-8]
 950:	ldr	r3, [r3, #4]
 954:	cmp	r3, #0
 958:	bne	940 <avl_no_valormin+0x1c>
 95c:	ldr	r3, [fp, #-8]
 960:	mov	r0, r3
 964:	add	sp, fp, #0
 968:	pop	{fp}		; (ldr fp, [sp], #4)
 96c:	bx	lr

00000970 <avl_no_valormax>:
 970:	push	{fp}		; (str fp, [sp, #-4]!)
 974:	add	fp, sp, #0
 978:	sub	sp, sp, #20
 97c:	str	r0, [fp, #-16]
 980:	ldr	r3, [fp, #-16]
 984:	str	r3, [fp, #-8]
 988:	b	998 <avl_no_valormax+0x28>
 98c:	ldr	r3, [fp, #-8]
 990:	ldr	r3, [r3, #8]
 994:	str	r3, [fp, #-8]
 998:	ldr	r3, [fp, #-8]
 99c:	ldr	r3, [r3, #8]
 9a0:	cmp	r3, #0
 9a4:	bne	98c <avl_no_valormax+0x1c>
 9a8:	ldr	r3, [fp, #-8]
 9ac:	mov	r0, r3
 9b0:	add	sp, fp, #0
 9b4:	pop	{fp}		; (ldr fp, [sp], #4)
 9b8:	bx	lr

000009bc <avl_remove_impl>:
 9bc:	str	r4, [sp, #-12]!
 9c0:	str	fp, [sp, #4]
 9c4:	str	lr, [sp, #8]
 9c8:	add	fp, sp, #8
 9cc:	sub	sp, sp, #28
 9d0:	str	r0, [fp, #-32]	; 0xffffffe0
 9d4:	str	r1, [fp, #-36]	; 0xffffffdc
 9d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9dc:	cmp	r3, #0
 9e0:	bne	9ec <avl_remove_impl+0x30>
 9e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9e8:	b	d3c <avl_remove_impl+0x380>
 9ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9f0:	ldr	r3, [r3]
 9f4:	mov	r1, r3
 9f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
 9fc:	bl	0 <strcmp>
 a00:	mov	r3, r0
 a04:	cmp	r3, #0
 a08:	bge	a30 <avl_remove_impl+0x74>
 a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a10:	ldr	r3, [r3, #4]
 a14:	ldr	r1, [fp, #-36]	; 0xffffffdc
 a18:	mov	r0, r3
 a1c:	bl	9bc <avl_remove_impl>
 a20:	mov	r2, r0
 a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a28:	str	r2, [r3, #4]
 a2c:	b	c0c <avl_remove_impl+0x250>
 a30:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a34:	ldr	r3, [r3]
 a38:	mov	r1, r3
 a3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a40:	bl	0 <strcmp>
 a44:	mov	r3, r0
 a48:	cmp	r3, #0
 a4c:	ble	a74 <avl_remove_impl+0xb8>
 a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a54:	ldr	r3, [r3, #8]
 a58:	ldr	r1, [fp, #-36]	; 0xffffffdc
 a5c:	mov	r0, r3
 a60:	bl	9bc <avl_remove_impl>
 a64:	mov	r2, r0
 a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a6c:	str	r2, [r3, #8]
 a70:	b	c0c <avl_remove_impl+0x250>
 a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a78:	ldr	r3, [r3, #4]
 a7c:	cmp	r3, #0
 a80:	beq	a94 <avl_remove_impl+0xd8>
 a84:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a88:	ldr	r3, [r3, #8]
 a8c:	cmp	r3, #0
 a90:	bne	b7c <avl_remove_impl+0x1c0>
 a94:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a98:	ldr	r3, [r3, #4]
 a9c:	cmp	r3, #0
 aa0:	beq	ab0 <avl_remove_impl+0xf4>
 aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 aa8:	ldr	r3, [r3, #4]
 aac:	b	ab8 <avl_remove_impl+0xfc>
 ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 ab4:	ldr	r3, [r3, #8]
 ab8:	str	r3, [fp, #-16]
 abc:	ldr	r3, [fp, #-16]
 ac0:	cmp	r3, #0
 ac4:	bne	adc <avl_remove_impl+0x120>
 ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 acc:	str	r3, [fp, #-16]
 ad0:	mov	r3, #0
 ad4:	str	r3, [fp, #-32]	; 0xffffffe0
 ad8:	b	b60 <avl_remove_impl+0x1a4>
 adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 ae0:	ldr	r4, [r3]
 ae4:	ldr	r3, [fp, #-16]
 ae8:	ldr	r3, [r3]
 aec:	mov	r0, r3
 af0:	bl	0 <strlen>
 af4:	mov	r3, r0
 af8:	add	r3, r3, #1
 afc:	mov	r1, r3
 b00:	mov	r0, r4
 b04:	bl	0 <realloc>
 b08:	mov	r2, r0
 b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b10:	str	r2, [r3]
 b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b18:	ldr	r2, [r3]
 b1c:	ldr	r3, [fp, #-16]
 b20:	ldr	r3, [r3]
 b24:	mov	r1, r3
 b28:	mov	r0, r2
 b2c:	bl	0 <strcpy>
 b30:	ldr	r3, [fp, #-16]
 b34:	ldr	r2, [r3, #4]
 b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b3c:	str	r2, [r3, #4]
 b40:	ldr	r3, [fp, #-16]
 b44:	ldr	r2, [r3, #8]
 b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b4c:	str	r2, [r3, #8]
 b50:	ldr	r3, [fp, #-16]
 b54:	ldr	r2, [r3, #12]
 b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b5c:	str	r2, [r3, #12]
 b60:	ldr	r3, [fp, #-16]
 b64:	ldr	r3, [r3]
 b68:	mov	r0, r3
 b6c:	bl	0 <free>
 b70:	ldr	r0, [fp, #-16]
 b74:	bl	0 <free>
 b78:	b	c0c <avl_remove_impl+0x250>
 b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b80:	ldr	r3, [r3, #8]
 b84:	mov	r0, r3
 b88:	bl	924 <avl_no_valormin>
 b8c:	str	r0, [fp, #-20]	; 0xffffffec
 b90:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b94:	ldr	r4, [r3]
 b98:	ldr	r3, [fp, #-20]	; 0xffffffec
 b9c:	ldr	r3, [r3]
 ba0:	mov	r0, r3
 ba4:	bl	0 <strlen>
 ba8:	mov	r3, r0
 bac:	add	r3, r3, #1
 bb0:	mov	r1, r3
 bb4:	mov	r0, r4
 bb8:	bl	0 <realloc>
 bbc:	mov	r2, r0
 bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 bc4:	str	r2, [r3]
 bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 bcc:	ldr	r2, [r3]
 bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
 bd4:	ldr	r3, [r3]
 bd8:	mov	r1, r3
 bdc:	mov	r0, r2
 be0:	bl	0 <strcpy>
 be4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 be8:	ldr	r2, [r3, #8]
 bec:	ldr	r3, [fp, #-20]	; 0xffffffec
 bf0:	ldr	r3, [r3]
 bf4:	mov	r1, r3
 bf8:	mov	r0, r2
 bfc:	bl	9bc <avl_remove_impl>
 c00:	mov	r2, r0
 c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c08:	str	r2, [r3, #8]
 c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c10:	cmp	r3, #0
 c14:	bne	c20 <avl_remove_impl+0x264>
 c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c1c:	b	d3c <avl_remove_impl+0x380>
 c20:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c24:	ldr	r3, [r3, #4]
 c28:	mov	r0, r3
 c2c:	bl	314 <avl_altura>
 c30:	mov	r4, r0
 c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c38:	ldr	r3, [r3, #8]
 c3c:	mov	r0, r3
 c40:	bl	314 <avl_altura>
 c44:	mov	r3, r0
 c48:	mov	r1, r3
 c4c:	mov	r0, r4
 c50:	bl	350 <max>
 c54:	mov	r3, r0
 c58:	add	r2, r3, #1
 c5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c60:	str	r2, [r3, #12]
 c64:	ldr	r0, [fp, #-32]	; 0xffffffe0
 c68:	bl	5fc <calc_balanceamento>
 c6c:	str	r0, [fp, #-24]	; 0xffffffe8
 c70:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c74:	cmp	r3, #1
 c78:	ble	cd4 <avl_remove_impl+0x318>
 c7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c80:	ldr	r3, [r3, #8]
 c84:	mov	r0, r3
 c88:	bl	5fc <calc_balanceamento>
 c8c:	mov	r3, r0
 c90:	cmp	r3, #0
 c94:	bge	cc4 <avl_remove_impl+0x308>
 c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c9c:	ldr	r3, [r3, #8]
 ca0:	mov	r0, r3
 ca4:	bl	424 <roda_direita>
 ca8:	mov	r2, r0
 cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 cb0:	str	r2, [r3, #8]
 cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 cb8:	bl	510 <roda_esquerda>
 cbc:	mov	r3, r0
 cc0:	b	d3c <avl_remove_impl+0x380>
 cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 cc8:	bl	510 <roda_esquerda>
 ccc:	mov	r3, r0
 cd0:	b	d3c <avl_remove_impl+0x380>
 cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 cd8:	cmn	r3, #1
 cdc:	bge	d38 <avl_remove_impl+0x37c>
 ce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 ce4:	ldr	r3, [r3, #4]
 ce8:	mov	r0, r3
 cec:	bl	5fc <calc_balanceamento>
 cf0:	mov	r3, r0
 cf4:	cmp	r3, #0
 cf8:	ble	d28 <avl_remove_impl+0x36c>
 cfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 d00:	ldr	r3, [r3, #4]
 d04:	mov	r0, r3
 d08:	bl	510 <roda_esquerda>
 d0c:	mov	r2, r0
 d10:	ldr	r3, [fp, #-32]	; 0xffffffe0
 d14:	str	r2, [r3, #4]
 d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
 d1c:	bl	424 <roda_direita>
 d20:	mov	r3, r0
 d24:	b	d3c <avl_remove_impl+0x380>
 d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
 d2c:	bl	424 <roda_direita>
 d30:	mov	r3, r0
 d34:	b	d3c <avl_remove_impl+0x380>
 d38:	ldr	r3, [fp, #-32]	; 0xffffffe0
 d3c:	mov	r0, r3
 d40:	sub	sp, fp, #8
 d44:	ldr	r4, [sp]
 d48:	ldr	fp, [sp, #4]
 d4c:	add	sp, sp, #8
 d50:	pop	{pc}		; (ldr pc, [sp], #4)

00000d54 <avl_preordem_impl>:
 d54:	str	fp, [sp, #-8]!
 d58:	str	lr, [sp, #4]
 d5c:	add	fp, sp, #4
 d60:	sub	sp, sp, #8
 d64:	str	r0, [fp, #-8]
 d68:	ldr	r3, [fp, #-8]
 d6c:	cmp	r3, #0
 d70:	beq	db0 <avl_preordem_impl+0x5c>
 d74:	ldr	r3, [fp, #-8]
 d78:	ldr	r3, [r3]
 d7c:	mov	r1, r3
 d80:	movw	r0, #0
 d84:	movt	r0, #0
 d88:	bl	0 <printf>
 d8c:	ldr	r3, [fp, #-8]
 d90:	ldr	r3, [r3, #4]
 d94:	mov	r0, r3
 d98:	bl	d54 <avl_preordem_impl>
 d9c:	ldr	r3, [fp, #-8]
 da0:	ldr	r3, [r3, #8]
 da4:	mov	r0, r3
 da8:	bl	d54 <avl_preordem_impl>
 dac:	b	db4 <avl_preordem_impl+0x60>
 db0:	nop	{0}
 db4:	sub	sp, fp, #4
 db8:	ldr	fp, [sp]
 dbc:	add	sp, sp, #4
 dc0:	pop	{pc}		; (ldr pc, [sp], #4)
