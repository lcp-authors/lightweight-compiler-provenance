
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ff_printf>:
   0:	push	{r0, r1, r2, r3}
   4:	ldr	r1, [pc, #44]	; 38 <ff_printf+0x38>
   8:	push	{lr}		; (str lr, [sp, #-4]!)
   c:	sub	sp, sp, #12
  10:	add	r3, sp, #20
  14:	mov	r2, r3
  18:	ldr	r0, [r1]
  1c:	ldr	r1, [sp, #16]
  20:	str	r3, [sp, #4]
  24:	bl	0 <vfprintf>
  28:	add	sp, sp, #12
  2c:	pop	{lr}		; (ldr lr, [sp], #4)
  30:	add	sp, sp, #16
  34:	bx	lr
  38:	.word	0x00000000

0000003c <print_escaped>:
  3c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40:	subs	r4, r1, #0
  44:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  48:	mov	fp, r0
  4c:	ldr	r8, [pc, #208]	; 124 <print_escaped+0xe8>
  50:	ldr	sl, [pc, #208]	; 128 <print_escaped+0xec>
  54:	ldr	r9, [pc, #208]	; 12c <print_escaped+0xf0>
  58:	ldr	r7, [pc, #208]	; 130 <print_escaped+0xf4>
  5c:	ldr	r6, [pc, #208]	; 134 <print_escaped+0xf8>
  60:	ldr	r5, [pc, #208]	; 138 <print_escaped+0xfc>
  64:	add	r4, r0, r4
  68:	b	a0 <print_escaped+0x64>
  6c:	cmp	r1, #9
  70:	beq	118 <print_escaped+0xdc>
  74:	cmp	r1, #10
  78:	beq	10c <print_escaped+0xd0>
  7c:	cmp	r1, #8
  80:	beq	100 <print_escaped+0xc4>
  84:	sub	r3, r1, #32
  88:	cmp	r3, #94	; 0x5e
  8c:	movls	r0, r9
  90:	movhi	r0, sl
  94:	bl	0 <ff_printf>
  98:	cmp	fp, r4
  9c:	beq	d8 <print_escaped+0x9c>
  a0:	ldrb	r1, [fp], #1
  a4:	cmp	r1, #12
  a8:	beq	dc <print_escaped+0xa0>
  ac:	bls	6c <print_escaped+0x30>
  b0:	cmp	r1, #34	; 0x22
  b4:	beq	f4 <print_escaped+0xb8>
  b8:	cmp	r1, #92	; 0x5c
  bc:	beq	e8 <print_escaped+0xac>
  c0:	cmp	r1, #13
  c4:	bne	84 <print_escaped+0x48>
  c8:	mov	r0, r5
  cc:	bl	0 <ff_printf>
  d0:	cmp	fp, r4
  d4:	bne	a0 <print_escaped+0x64>
  d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  dc:	mov	r0, r8
  e0:	bl	0 <ff_printf>
  e4:	b	98 <print_escaped+0x5c>
  e8:	mov	r0, r6
  ec:	bl	0 <ff_printf>
  f0:	b	98 <print_escaped+0x5c>
  f4:	mov	r0, r7
  f8:	bl	0 <ff_printf>
  fc:	b	98 <print_escaped+0x5c>
 100:	ldr	r0, [pc, #52]	; 13c <print_escaped+0x100>
 104:	bl	0 <ff_printf>
 108:	b	98 <print_escaped+0x5c>
 10c:	ldr	r0, [pc, #44]	; 140 <print_escaped+0x104>
 110:	bl	0 <ff_printf>
 114:	b	98 <print_escaped+0x5c>
 118:	ldr	r0, [pc, #36]	; 144 <print_escaped+0x108>
 11c:	bl	0 <ff_printf>
 120:	b	98 <print_escaped+0x5c>
 124:	.word	0x00000004
 128:	.word	0x00000020
 12c:	.word	0x0000001c
 130:	.word	0x00000014
 134:	.word	0x00000018
 138:	.word	0x0000000c
 13c:	.word	0x00000000
 140:	.word	0x00000008
 144:	.word	0x00000010

00000148 <print_data>:
 148:	ldr	r3, [pc, #2048]	; 950 <print_data+0x808>
 14c:	push	{r4, r5, r6, r7, r8, r9, lr}
 150:	mov	r2, #0
 154:	ldr	r3, [r3]
 158:	sub	sp, sp, #76	; 0x4c
 15c:	cmp	r3, r2
 160:	str	r2, [sp, #12]
 164:	mov	r4, r0
 168:	bne	430 <print_data+0x2e8>
 16c:	add	r1, sp, #8
 170:	mov	r0, r4
 174:	bl	0 <coda_cursor_get_type_class>
 178:	cmp	r0, #0
 17c:	bne	428 <print_data+0x2e0>
 180:	ldr	r3, [sp, #8]
 184:	cmp	r3, #6
 188:	ldrls	pc, [pc, r3, lsl #2]
 18c:	b	1ec <print_data+0xa4>
 190:	.word	0x00000350
 194:	.word	0x0000029c
 198:	.word	0x0000023c
 19c:	.word	0x0000023c
 1a0:	.word	0x0000023c
 1a4:	.word	0x0000023c
 1a8:	.word	0x00000208
 1ac:	mov	r0, r4
 1b0:	add	r1, sp, #32
 1b4:	bl	0 <coda_cursor_read_double>
 1b8:	cmp	r0, #0
 1bc:	bne	864 <print_data+0x71c>
 1c0:	vldr	d0, [sp, #32]
 1c4:	bl	0 <coda_isNaN>
 1c8:	cmp	r0, #0
 1cc:	bne	1e0 <print_data+0x98>
 1d0:	vldr	d0, [sp, #32]
 1d4:	bl	0 <coda_isInf>
 1d8:	cmp	r0, #0
 1dc:	beq	87c <print_data+0x734>
 1e0:	ldrd	r2, [sp, #32]
 1e4:	ldr	r0, [pc, #1896]	; 954 <print_data+0x80c>
 1e8:	bl	0 <ff_printf>
 1ec:	ldr	r3, [sp, #12]
 1f0:	cmp	r3, #0
 1f4:	beq	200 <print_data+0xb8>
 1f8:	ldr	r0, [pc, #1880]	; 958 <print_data+0x810>
 1fc:	bl	0 <ff_printf>
 200:	add	sp, sp, #76	; 0x4c
 204:	pop	{r4, r5, r6, r7, r8, r9, pc}
 208:	add	r1, sp, #28
 20c:	mov	r0, r4
 210:	bl	0 <coda_cursor_get_special_type>
 214:	cmp	r0, #0
 218:	bne	498 <print_data+0x350>
 21c:	ldr	r3, [sp, #28]
 220:	cmp	r3, #3
 224:	ldrls	pc, [pc, r3, lsl #2]
 228:	b	1ec <print_data+0xa4>
 22c:	.word	0x000004a0
 230:	.word	0x000005ac
 234:	.word	0x000001ac
 238:	.word	0x0000057c
 23c:	add	r1, sp, #28
 240:	mov	r0, r4
 244:	bl	0 <coda_cursor_get_read_type>
 248:	cmp	r0, #0
 24c:	bne	490 <print_data+0x348>
 250:	ldr	r3, [sp, #28]
 254:	add	r3, r3, #1
 258:	cmp	r3, #13
 25c:	ldrls	pc, [pc, r3, lsl #2]
 260:	b	1ec <print_data+0xa4>
 264:	.word	0x000004a0
 268:	.word	0x000007bc
 26c:	.word	0x00000698
 270:	.word	0x000007bc
 274:	.word	0x00000698
 278:	.word	0x000007bc
 27c:	.word	0x00000698
 280:	.word	0x0000078c
 284:	.word	0x000006bc
 288:	.word	0x000006ec
 28c:	.word	0x000006ec
 290:	.word	0x000005d0
 294:	.word	0x0000071c
 298:	.word	0x00000608
 29c:	ldr	r0, [pc, #1720]	; 95c <print_data+0x814>
 2a0:	add	r5, sp, #40	; 0x28
 2a4:	bl	0 <ff_printf>
 2a8:	mov	r2, r5
 2ac:	add	r1, sp, #32
 2b0:	mov	r0, r4
 2b4:	bl	0 <coda_cursor_get_array_dim>
 2b8:	cmp	r0, #0
 2bc:	bne	488 <print_data+0x340>
 2c0:	ldr	r3, [sp, #32]
 2c4:	cmp	r3, #0
 2c8:	blt	41c <print_data+0x2d4>
 2cc:	beq	858 <print_data+0x710>
 2d0:	mov	r2, r5
 2d4:	add	r3, r5, r3, lsl #2
 2d8:	mov	r5, #1
 2dc:	ldr	r1, [r2], #4
 2e0:	cmp	r2, r3
 2e4:	mul	r5, r1, r5
 2e8:	bne	2dc <print_data+0x194>
 2ec:	cmp	r5, #0
 2f0:	subgt	r7, r5, #1
 2f4:	ble	41c <print_data+0x2d4>
 2f8:	mov	r0, r4
 2fc:	bl	0 <coda_cursor_goto_first_array_element>
 300:	cmp	r0, #0
 304:	bne	850 <print_data+0x708>
 308:	ldr	r8, [pc, #1616]	; 960 <print_data+0x818>
 30c:	mov	r6, #0
 310:	b	31c <print_data+0x1d4>
 314:	cmp	r5, r6
 318:	ble	414 <print_data+0x2cc>
 31c:	mov	r0, r4
 320:	bl	148 <print_data>
 324:	cmp	r6, r7
 328:	mov	r0, r8
 32c:	add	r6, r6, #1
 330:	bge	314 <print_data+0x1cc>
 334:	bl	0 <ff_printf>
 338:	mov	r0, r4
 33c:	bl	0 <coda_cursor_goto_next_array_element>
 340:	cmp	r0, #0
 344:	beq	314 <print_data+0x1cc>
 348:	bl	0 <handle_coda_error>
 34c:	b	314 <print_data+0x1cc>
 350:	ldr	r0, [pc, #1548]	; 964 <print_data+0x81c>
 354:	bl	0 <ff_printf>
 358:	add	r1, sp, #16
 35c:	mov	r0, r4
 360:	bl	0 <coda_cursor_get_num_elements>
 364:	cmp	r0, #0
 368:	bne	480 <print_data+0x338>
 36c:	ldr	r3, [sp, #16]
 370:	cmp	r3, #0
 374:	ble	408 <print_data+0x2c0>
 378:	add	r1, sp, #20
 37c:	mov	r0, r4
 380:	bl	0 <coda_cursor_get_type>
 384:	cmp	r0, #0
 388:	bne	840 <print_data+0x6f8>
 38c:	add	r1, sp, #24
 390:	ldr	r0, [sp, #20]
 394:	bl	0 <coda_type_get_record_union_status>
 398:	cmp	r0, #0
 39c:	bne	838 <print_data+0x6f0>
 3a0:	ldr	r3, [sp, #24]
 3a4:	cmp	r3, #0
 3a8:	beq	4b4 <print_data+0x36c>
 3ac:	add	r1, sp, #28
 3b0:	mov	r0, r4
 3b4:	bl	0 <coda_cursor_get_available_union_field_index>
 3b8:	cmp	r0, #0
 3bc:	bne	7e8 <print_data+0x6a0>
 3c0:	add	r2, sp, #40	; 0x28
 3c4:	ldr	r1, [sp, #28]
 3c8:	ldr	r0, [sp, #20]
 3cc:	bl	0 <coda_type_get_record_field_name>
 3d0:	cmp	r0, #0
 3d4:	bne	7f8 <print_data+0x6b0>
 3d8:	ldr	r1, [sp, #28]
 3dc:	mov	r0, r4
 3e0:	bl	0 <coda_cursor_goto_record_field_by_index>
 3e4:	cmp	r0, #0
 3e8:	bne	7f0 <print_data+0x6a8>
 3ec:	ldr	r1, [sp, #40]	; 0x28
 3f0:	ldr	r0, [pc, #1392]	; 968 <print_data+0x820>
 3f4:	bl	0 <ff_printf>
 3f8:	mov	r0, r4
 3fc:	bl	148 <print_data>
 400:	mov	r0, r4
 404:	bl	0 <coda_cursor_goto_parent>
 408:	ldr	r0, [pc, #1352]	; 958 <print_data+0x810>
 40c:	bl	0 <ff_printf>
 410:	b	1ec <print_data+0xa4>
 414:	mov	r0, r4
 418:	bl	0 <coda_cursor_goto_parent>
 41c:	ldr	r0, [pc, #1352]	; 96c <print_data+0x824>
 420:	bl	0 <ff_printf>
 424:	b	1ec <print_data+0xa4>
 428:	bl	0 <handle_coda_error>
 42c:	b	180 <print_data+0x38>
 430:	add	r1, sp, #12
 434:	bl	0 <coda_cursor_has_attributes>
 438:	cmp	r0, #0
 43c:	bne	4ac <print_data+0x364>
 440:	ldr	r3, [sp, #12]
 444:	cmp	r3, #0
 448:	beq	16c <print_data+0x24>
 44c:	ldr	r0, [pc, #1308]	; 970 <print_data+0x828>
 450:	bl	0 <ff_printf>
 454:	mov	r0, r4
 458:	bl	0 <coda_cursor_goto_attributes>
 45c:	cmp	r0, #0
 460:	bne	848 <print_data+0x700>
 464:	mov	r0, r4
 468:	bl	148 <print_data>
 46c:	mov	r0, r4
 470:	bl	0 <coda_cursor_goto_parent>
 474:	ldr	r0, [pc, #1272]	; 974 <print_data+0x82c>
 478:	bl	0 <ff_printf>
 47c:	b	16c <print_data+0x24>
 480:	bl	0 <handle_coda_error>
 484:	b	36c <print_data+0x224>
 488:	bl	0 <handle_coda_error>
 48c:	b	2c0 <print_data+0x178>
 490:	bl	0 <handle_coda_error>
 494:	b	250 <print_data+0x108>
 498:	bl	0 <handle_coda_error>
 49c:	b	21c <print_data+0xd4>
 4a0:	ldr	r0, [pc, #1232]	; 978 <print_data+0x830>
 4a4:	bl	0 <ff_printf>
 4a8:	b	1ec <print_data+0xa4>
 4ac:	bl	0 <handle_coda_error>
 4b0:	b	440 <print_data+0x2f8>
 4b4:	mov	r0, r4
 4b8:	bl	0 <coda_cursor_goto_first_record_field>
 4bc:	cmp	r0, #0
 4c0:	bne	7e0 <print_data+0x698>
 4c4:	ldr	r3, [sp, #16]
 4c8:	mov	r1, #0
 4cc:	cmp	r3, r1
 4d0:	str	r1, [sp, #28]
 4d4:	ble	570 <print_data+0x428>
 4d8:	ldr	r6, [pc, #1160]	; 968 <print_data+0x820>
 4dc:	ldr	r7, [pc, #1148]	; 960 <print_data+0x818>
 4e0:	mov	r8, #1
 4e4:	add	r5, sp, #40	; 0x28
 4e8:	b	554 <print_data+0x40c>
 4ec:	ldr	r9, [sp, #40]	; 0x28
 4f0:	cmp	r9, #0
 4f4:	bne	530 <print_data+0x3e8>
 4f8:	cmp	r8, #0
 4fc:	beq	824 <print_data+0x6dc>
 500:	add	r2, sp, #32
 504:	ldr	r1, [sp, #28]
 508:	ldr	r0, [sp, #20]
 50c:	bl	0 <coda_type_get_record_field_name>
 510:	cmp	r0, #0
 514:	bne	81c <print_data+0x6d4>
 518:	ldr	r1, [sp, #32]
 51c:	mov	r0, r6
 520:	bl	0 <ff_printf>
 524:	mov	r0, r4
 528:	bl	148 <print_data>
 52c:	mov	r8, r9
 530:	ldr	r3, [sp, #16]
 534:	ldr	r1, [sp, #28]
 538:	sub	r2, r3, #1
 53c:	cmp	r2, r1
 540:	bgt	800 <print_data+0x6b8>
 544:	add	r1, r1, #1
 548:	cmp	r1, r3
 54c:	str	r1, [sp, #28]
 550:	bge	570 <print_data+0x428>
 554:	mov	r2, r5
 558:	ldr	r0, [sp, #20]
 55c:	bl	0 <coda_type_get_record_field_hidden_status>
 560:	cmp	r0, #0
 564:	beq	4ec <print_data+0x3a4>
 568:	bl	0 <handle_coda_error>
 56c:	b	4ec <print_data+0x3a4>
 570:	mov	r0, r4
 574:	bl	0 <coda_cursor_goto_parent>
 578:	b	408 <print_data+0x2c0>
 57c:	mov	r0, r4
 580:	add	r2, sp, #40	; 0x28
 584:	add	r1, sp, #32
 588:	bl	0 <coda_cursor_read_complex_double_split>
 58c:	cmp	r0, #0
 590:	bne	86c <print_data+0x724>
 594:	ldrd	r4, [sp, #40]	; 0x28
 598:	ldrd	r2, [sp, #32]
 59c:	ldr	r0, [pc, #984]	; 97c <print_data+0x834>
 5a0:	strd	r4, [sp]
 5a4:	bl	0 <ff_printf>
 5a8:	b	1ec <print_data+0xa4>
 5ac:	mov	r0, r4
 5b0:	add	r1, sp, #40	; 0x28
 5b4:	bl	0 <coda_cursor_read_double>
 5b8:	cmp	r0, #0
 5bc:	bne	874 <print_data+0x72c>
 5c0:	ldrd	r2, [sp, #40]	; 0x28
 5c4:	ldr	r0, [pc, #904]	; 954 <print_data+0x80c>
 5c8:	bl	0 <ff_printf>
 5cc:	b	1ec <print_data+0xa4>
 5d0:	add	r5, sp, #40	; 0x28
 5d4:	mov	r0, r4
 5d8:	mov	r1, r5
 5dc:	bl	0 <coda_cursor_read_char>
 5e0:	cmp	r0, #0
 5e4:	bne	8b8 <print_data+0x770>
 5e8:	ldr	r0, [pc, #912]	; 980 <print_data+0x838>
 5ec:	bl	0 <ff_printf>
 5f0:	mov	r0, r5
 5f4:	mov	r1, #1
 5f8:	bl	3c <print_escaped>
 5fc:	ldr	r0, [pc, #892]	; 980 <print_data+0x838>
 600:	bl	0 <ff_printf>
 604:	b	1ec <print_data+0xa4>
 608:	add	r1, sp, #40	; 0x28
 60c:	mov	r0, r4
 610:	bl	0 <coda_cursor_get_bit_size>
 614:	cmp	r0, #0
 618:	bne	8a8 <print_data+0x760>
 61c:	ldrd	r8, [sp, #40]	; 0x28
 620:	mov	r1, #0
 624:	and	r0, r8, #7
 628:	orrs	r3, r0, r1
 62c:	lsr	r6, r8, #3
 630:	movne	r1, #1
 634:	moveq	r1, #0
 638:	orr	r6, r6, r9, lsl #29
 63c:	adds	r6, r6, r1
 640:	mov	r0, r6
 644:	bl	0 <malloc>
 648:	subs	r5, r0, #0
 64c:	beq	928 <print_data+0x7e0>
 650:	strd	r8, [sp]
 654:	mov	r0, r4
 658:	mov	r2, #0
 65c:	mov	r3, #0
 660:	mov	r1, r5
 664:	bl	0 <coda_cursor_read_bits>
 668:	cmp	r0, #0
 66c:	bne	8d8 <print_data+0x790>
 670:	ldr	r0, [pc, #776]	; 980 <print_data+0x838>
 674:	bl	0 <ff_printf>
 678:	mov	r1, r6
 67c:	mov	r0, r5
 680:	bl	3c <print_escaped>
 684:	ldr	r0, [pc, #756]	; 980 <print_data+0x838>
 688:	bl	0 <ff_printf>
 68c:	mov	r0, r5
 690:	bl	0 <free>
 694:	b	1ec <print_data+0xa4>
 698:	mov	r0, r4
 69c:	add	r1, sp, #40	; 0x28
 6a0:	bl	0 <coda_cursor_read_uint32>
 6a4:	cmp	r0, #0
 6a8:	bne	8a0 <print_data+0x758>
 6ac:	ldr	r1, [sp, #40]	; 0x28
 6b0:	ldr	r0, [pc, #716]	; 984 <print_data+0x83c>
 6b4:	bl	0 <ff_printf>
 6b8:	b	1ec <print_data+0xa4>
 6bc:	mov	r0, r4
 6c0:	add	r1, sp, #32
 6c4:	bl	0 <coda_cursor_read_uint64>
 6c8:	cmp	r0, #0
 6cc:	bne	8b0 <print_data+0x768>
 6d0:	ldrd	r0, [sp, #32]
 6d4:	add	r2, sp, #40	; 0x28
 6d8:	bl	0 <coda_str64u>
 6dc:	add	r1, sp, #40	; 0x28
 6e0:	ldr	r0, [pc, #672]	; 988 <print_data+0x840>
 6e4:	bl	0 <ff_printf>
 6e8:	b	1ec <print_data+0xa4>
 6ec:	mov	r0, r4
 6f0:	add	r1, sp, #40	; 0x28
 6f4:	bl	0 <coda_cursor_read_double>
 6f8:	cmp	r0, #0
 6fc:	bne	8c8 <print_data+0x780>
 700:	ldr	r3, [sp, #28]
 704:	cmp	r3, #8
 708:	ldrd	r2, [sp, #40]	; 0x28
 70c:	bne	5c4 <print_data+0x47c>
 710:	ldr	r0, [pc, #628]	; 98c <print_data+0x844>
 714:	bl	0 <ff_printf>
 718:	b	1ec <print_data+0xa4>
 71c:	add	r1, sp, #40	; 0x28
 720:	mov	r0, r4
 724:	bl	0 <coda_cursor_get_string_length>
 728:	cmp	r0, #0
 72c:	bne	8e8 <print_data+0x7a0>
 730:	ldr	r0, [sp, #40]	; 0x28
 734:	add	r0, r0, #1
 738:	bl	0 <malloc>
 73c:	subs	r5, r0, #0
 740:	beq	900 <print_data+0x7b8>
 744:	ldr	r2, [sp, #40]	; 0x28
 748:	mov	r0, r4
 74c:	add	r2, r2, #1
 750:	mov	r1, r5
 754:	bl	0 <coda_cursor_read_string>
 758:	cmp	r0, #0
 75c:	bne	8e0 <print_data+0x798>
 760:	ldr	r0, [pc, #536]	; 980 <print_data+0x838>
 764:	bl	0 <ff_printf>
 768:	ldr	r1, [sp, #40]	; 0x28
 76c:	mov	r0, r5
 770:	bl	3c <print_escaped>
 774:	ldr	r1, [sp, #40]	; 0x28
 778:	ldr	r0, [pc, #512]	; 980 <print_data+0x838>
 77c:	bl	0 <ff_printf>
 780:	mov	r0, r5
 784:	bl	0 <free>
 788:	b	1ec <print_data+0xa4>
 78c:	mov	r0, r4
 790:	add	r1, sp, #32
 794:	bl	0 <coda_cursor_read_int64>
 798:	cmp	r0, #0
 79c:	bne	8d0 <print_data+0x788>
 7a0:	ldrd	r0, [sp, #32]
 7a4:	add	r2, sp, #40	; 0x28
 7a8:	bl	0 <coda_str64>
 7ac:	add	r1, sp, #40	; 0x28
 7b0:	ldr	r0, [pc, #464]	; 988 <print_data+0x840>
 7b4:	bl	0 <ff_printf>
 7b8:	b	1ec <print_data+0xa4>
 7bc:	mov	r0, r4
 7c0:	add	r1, sp, #40	; 0x28
 7c4:	bl	0 <coda_cursor_read_int32>
 7c8:	cmp	r0, #0
 7cc:	bne	8c0 <print_data+0x778>
 7d0:	ldr	r1, [sp, #40]	; 0x28
 7d4:	ldr	r0, [pc, #436]	; 990 <print_data+0x848>
 7d8:	bl	0 <ff_printf>
 7dc:	b	1ec <print_data+0xa4>
 7e0:	bl	0 <handle_coda_error>
 7e4:	b	4c4 <print_data+0x37c>
 7e8:	bl	0 <handle_coda_error>
 7ec:	b	3c0 <print_data+0x278>
 7f0:	bl	0 <handle_coda_error>
 7f4:	b	3ec <print_data+0x2a4>
 7f8:	bl	0 <handle_coda_error>
 7fc:	b	3d8 <print_data+0x290>
 800:	mov	r0, r4
 804:	bl	0 <coda_cursor_goto_next_record_field>
 808:	cmp	r0, #0
 80c:	bne	830 <print_data+0x6e8>
 810:	ldr	r3, [sp, #16]
 814:	ldr	r1, [sp, #28]
 818:	b	544 <print_data+0x3fc>
 81c:	bl	0 <handle_coda_error>
 820:	b	518 <print_data+0x3d0>
 824:	mov	r0, r7
 828:	bl	0 <ff_printf>
 82c:	b	500 <print_data+0x3b8>
 830:	bl	0 <handle_coda_error>
 834:	b	810 <print_data+0x6c8>
 838:	bl	0 <handle_coda_error>
 83c:	b	3a0 <print_data+0x258>
 840:	bl	0 <handle_coda_error>
 844:	b	38c <print_data+0x244>
 848:	bl	0 <handle_coda_error>
 84c:	b	464 <print_data+0x31c>
 850:	bl	0 <handle_coda_error>
 854:	b	308 <print_data+0x1c0>
 858:	mov	r7, r3
 85c:	mov	r5, #1
 860:	b	2f8 <print_data+0x1b0>
 864:	bl	0 <handle_coda_error>
 868:	b	1c0 <print_data+0x78>
 86c:	bl	0 <handle_coda_error>
 870:	b	594 <print_data+0x44c>
 874:	bl	0 <handle_coda_error>
 878:	b	5c0 <print_data+0x478>
 87c:	add	r1, sp, #40	; 0x28
 880:	ldr	r0, [pc, #268]	; 994 <print_data+0x84c>
 884:	vldr	d0, [sp, #32]
 888:	bl	0 <coda_time_double_to_string>
 88c:	cmp	r0, #0
 890:	beq	8f0 <print_data+0x7a8>
 894:	ldr	r0, [pc, #252]	; 998 <print_data+0x850>
 898:	bl	0 <ff_printf>
 89c:	b	1ec <print_data+0xa4>
 8a0:	bl	0 <handle_coda_error>
 8a4:	b	6ac <print_data+0x564>
 8a8:	bl	0 <handle_coda_error>
 8ac:	b	61c <print_data+0x4d4>
 8b0:	bl	0 <handle_coda_error>
 8b4:	b	6d0 <print_data+0x588>
 8b8:	bl	0 <handle_coda_error>
 8bc:	b	5e8 <print_data+0x4a0>
 8c0:	bl	0 <handle_coda_error>
 8c4:	b	7d0 <print_data+0x688>
 8c8:	bl	0 <handle_coda_error>
 8cc:	b	700 <print_data+0x5b8>
 8d0:	bl	0 <handle_coda_error>
 8d4:	b	7a0 <print_data+0x658>
 8d8:	bl	0 <handle_coda_error>
 8dc:	b	670 <print_data+0x528>
 8e0:	bl	0 <handle_coda_error>
 8e4:	b	760 <print_data+0x618>
 8e8:	bl	0 <handle_coda_error>
 8ec:	b	730 <print_data+0x5e8>
 8f0:	add	r1, sp, #40	; 0x28
 8f4:	ldr	r0, [pc, #160]	; 99c <print_data+0x854>
 8f8:	bl	0 <ff_printf>
 8fc:	b	1ec <print_data+0xa4>
 900:	ldr	r2, [sp, #40]	; 0x28
 904:	ldr	r3, [pc, #148]	; 9a0 <print_data+0x858>
 908:	add	r2, r2, #1
 90c:	str	r3, [sp]
 910:	ldr	r1, [pc, #140]	; 9a4 <print_data+0x85c>
 914:	ldr	r3, [pc, #140]	; 9a8 <print_data+0x860>
 918:	mvn	r0, #0
 91c:	bl	0 <coda_set_error>
 920:	bl	0 <handle_coda_error>
 924:	b	744 <print_data+0x5fc>
 928:	ldr	r2, [pc, #124]	; 9ac <print_data+0x864>
 92c:	ldr	r3, [pc, #116]	; 9a8 <print_data+0x860>
 930:	str	r2, [sp]
 934:	ldr	r1, [pc, #104]	; 9a4 <print_data+0x85c>
 938:	mov	r2, r6
 93c:	mvn	r0, #0
 940:	bl	0 <coda_set_error>
 944:	bl	0 <handle_coda_error>
 948:	ldrd	r8, [sp, #40]	; 0x28
 94c:	b	650 <print_data+0x508>
 950:	.word	0x00000000
 954:	.word	0x00000100
 958:	.word	0x00000050
 95c:	.word	0x00000054
 960:	.word	0x0000004c
 964:	.word	0x00000040
 968:	.word	0x00000044
 96c:	.word	0x00000058
 970:	.word	0x00000028
 974:	.word	0x00000034
 978:	.word	0x00000108
 97c:	.word	0x00000154
 980:	.word	0x0000005c
 984:	.word	0x000000f0
 988:	.word	0x000000f4
 98c:	.word	0x000000f8
 990:	.word	0x000000ec
 994:	.word	0x00000110
 998:	.word	0x00000130
 99c:	.word	0x0000014c
 9a0:	.word	0x0000012f
 9a4:	.word	0x000000b4
 9a8:	.word	0x00000060
 9ac:	.word	0x0000014e

000009b0 <print_json_data>:
 9b0:	push	{r4, lr}
 9b4:	sub	sp, sp, #528	; 0x210
 9b8:	ldr	r3, [pc, #200]	; a88 <print_json_data+0xd8>
 9bc:	ldr	r4, [pc, #200]	; a8c <print_json_data+0xdc>
 9c0:	add	r1, sp, #4
 9c4:	str	r0, [r3]
 9c8:	ldr	r0, [r4]
 9cc:	bl	0 <coda_open>
 9d0:	cmp	r0, #0
 9d4:	bne	a44 <print_json_data+0x94>
 9d8:	add	r0, sp, #8
 9dc:	ldr	r1, [sp, #4]
 9e0:	bl	0 <coda_cursor_set_product>
 9e4:	cmp	r0, #0
 9e8:	bne	a3c <print_json_data+0x8c>
 9ec:	ldr	r3, [pc, #156]	; a90 <print_json_data+0xe0>
 9f0:	ldr	r1, [r3]
 9f4:	cmp	r1, #0
 9f8:	beq	a0c <print_json_data+0x5c>
 9fc:	add	r0, sp, #8
 a00:	bl	0 <coda_cursor_goto>
 a04:	cmp	r0, #0
 a08:	bne	a34 <print_json_data+0x84>
 a0c:	mov	r0, #0
 a10:	bl	0 <coda_set_option_perform_boundary_checks>
 a14:	add	r0, sp, #8
 a18:	bl	148 <print_data>
 a1c:	ldr	r0, [pc, #112]	; a94 <print_json_data+0xe4>
 a20:	bl	0 <ff_printf>
 a24:	ldr	r0, [sp, #4]
 a28:	bl	0 <coda_close>
 a2c:	add	sp, sp, #528	; 0x210
 a30:	pop	{r4, pc}
 a34:	bl	0 <handle_coda_error>
 a38:	b	a0c <print_json_data+0x5c>
 a3c:	bl	0 <handle_coda_error>
 a40:	b	9ec <print_json_data+0x3c>
 a44:	bl	0 <coda_get_errno>
 a48:	ldr	r3, [r0]
 a4c:	cmn	r3, #21
 a50:	beq	a5c <print_json_data+0xac>
 a54:	bl	0 <handle_coda_error>
 a58:	b	9d8 <print_json_data+0x28>
 a5c:	mov	r0, #0
 a60:	bl	0 <coda_set_option_use_mmap>
 a64:	add	r1, sp, #4
 a68:	ldr	r0, [r4]
 a6c:	bl	0 <coda_open>
 a70:	mov	r4, r0
 a74:	mov	r0, #1
 a78:	bl	0 <coda_set_option_use_mmap>
 a7c:	cmp	r4, #0
 a80:	bne	a54 <print_json_data+0xa4>
 a84:	b	9d8 <print_json_data+0x28>
	...
 a94:	.word	0x00000160
