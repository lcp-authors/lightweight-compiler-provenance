
../compcert-repos/stcorp-coda-3a25f25/codacheck:     file format elf32-littlearm


Disassembly of section .init:

00010ba0 <.init>:
   10ba0:	push	{r3, lr}
   10ba4:	bl	10d70 <_start@@Base+0x3c>
   10ba8:	pop	{r3, pc}

Disassembly of section .plt:

00010bac <coda_set_option_perform_boundary_checks@plt-0x14>:
   10bac:	push	{lr}		; (str lr, [sp, #-4]!)
   10bb0:	ldr	lr, [pc, #4]	; 10bbc <coda_set_option_perform_boundary_checks@plt-0x4>
   10bb4:	add	lr, pc, lr
   10bb8:	ldr	pc, [lr, #8]!
   10bbc:	andeq	r2, r1, r4, asr #8

00010bc0 <coda_set_option_perform_boundary_checks@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #1092]!	; 0x444

00010bcc <strcmp@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #73728	; 0x12000
   10bd4:	ldr	pc, [ip, #1084]!	; 0x43c

00010bd8 <printf@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #73728	; 0x12000
   10be0:	ldr	pc, [ip, #1076]!	; 0x434

00010be4 <coda_set_error@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #1068]!	; 0x42c

00010bf0 <coda_open@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #73728	; 0x12000
   10bf8:	ldr	pc, [ip, #1060]!	; 0x424

00010bfc <fflush@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #73728	; 0x12000
   10c04:	ldr	pc, [ip, #1052]!	; 0x41c

00010c08 <coda_set_option_use_mmap@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #73728	; 0x12000
   10c10:	ldr	pc, [ip, #1044]!	; 0x414

00010c14 <coda_cursor_print_path@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #73728	; 0x12000
   10c1c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c20 <coda_set_definition_path_conditional@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #73728	; 0x12000
   10c28:	ldr	pc, [ip, #1028]!	; 0x404

00010c2c <getchar@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #73728	; 0x12000
   10c34:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c38 <coda_set_definition_path@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #73728	; 0x12000
   10c40:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c44 <coda_recognize_file@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #73728	; 0x12000
   10c4c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c50 <fwrite@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #73728	; 0x12000
   10c58:	ldr	pc, [ip, #996]!	; 0x3e4

00010c5c <coda_type_get_format_name@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #73728	; 0x12000
   10c64:	ldr	pc, [ip, #988]!	; 0x3dc

00010c68 <coda_done@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #73728	; 0x12000
   10c70:	ldr	pc, [ip, #980]!	; 0x3d4

00010c74 <puts@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #73728	; 0x12000
   10c7c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c80 <coda_product_check@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #73728	; 0x12000
   10c88:	ldr	pc, [ip, #964]!	; 0x3c4

00010c8c <__libc_start_main@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #73728	; 0x12000
   10c94:	ldr	pc, [ip, #956]!	; 0x3bc

00010c98 <__gmon_start__@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #948]!	; 0x3b4

00010ca4 <exit@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #940]!	; 0x3ac

00010cb0 <fprintf@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cbc <coda_init@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #924]!	; 0x39c

00010cc8 <ungetc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #916]!	; 0x394

00010cd4 <coda_set_option_perform_conversions@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #908]!	; 0x38c

00010ce0 <putchar@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #900]!	; 0x384

00010cec <coda_close@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #892]!	; 0x37c

00010cf8 <coda_errno_to_string@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #884]!	; 0x374

00010d04 <coda_get_libcoda_version@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #876]!	; 0x36c

00010d10 <coda_get_errno@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #868]!	; 0x364

00010d1c <abort@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #860]!	; 0x35c

00010d28 <__assert_fail@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #852]!	; 0x354

Disassembly of section .text:

00010d34 <_start@@Base>:
   10d34:	mov	fp, #0
   10d38:	mov	lr, #0
   10d3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d40:	mov	r2, sp
   10d44:	push	{r2}		; (str r2, [sp, #-4]!)
   10d48:	push	{r0}		; (str r0, [sp, #-4]!)
   10d4c:	ldr	ip, [pc, #16]	; 10d64 <_start@@Base+0x30>
   10d50:	push	{ip}		; (str ip, [sp, #-4]!)
   10d54:	ldr	r0, [pc, #12]	; 10d68 <_start@@Base+0x34>
   10d58:	ldr	r3, [pc, #12]	; 10d6c <_start@@Base+0x38>
   10d5c:	bl	10c8c <__libc_start_main@plt>
   10d60:	bl	10d1c <abort@plt>
   10d64:	andeq	r1, r1, ip, lsr #20
   10d68:	andeq	r1, r1, ip, ror #6
   10d6c:	andeq	r1, r1, ip, asr #19
   10d70:	ldr	r3, [pc, #20]	; 10d8c <_start@@Base+0x58>
   10d74:	ldr	r2, [pc, #20]	; 10d90 <_start@@Base+0x5c>
   10d78:	add	r3, pc, r3
   10d7c:	ldr	r2, [r3, r2]
   10d80:	cmp	r2, #0
   10d84:	bxeq	lr
   10d88:	b	10c98 <__gmon_start__@plt>
   10d8c:	andeq	r2, r1, r0, lsl #5
   10d90:	andeq	r0, r0, r8, lsl #1
   10d94:	ldr	r0, [pc, #24]	; 10db4 <_start@@Base+0x80>
   10d98:	ldr	r3, [pc, #24]	; 10db8 <_start@@Base+0x84>
   10d9c:	cmp	r3, r0
   10da0:	bxeq	lr
   10da4:	ldr	r3, [pc, #16]	; 10dbc <_start@@Base+0x88>
   10da8:	cmp	r3, #0
   10dac:	bxeq	lr
   10db0:	bx	r3
   10db4:	muleq	r2, r4, r0
   10db8:	muleq	r2, r4, r0
   10dbc:	andeq	r0, r0, r0
   10dc0:	ldr	r0, [pc, #36]	; 10dec <_start@@Base+0xb8>
   10dc4:	ldr	r1, [pc, #36]	; 10df0 <_start@@Base+0xbc>
   10dc8:	sub	r1, r1, r0
   10dcc:	asr	r1, r1, #2
   10dd0:	add	r1, r1, r1, lsr #31
   10dd4:	asrs	r1, r1, #1
   10dd8:	bxeq	lr
   10ddc:	ldr	r3, [pc, #16]	; 10df4 <_start@@Base+0xc0>
   10de0:	cmp	r3, #0
   10de4:	bxeq	lr
   10de8:	bx	r3
   10dec:	muleq	r2, r4, r0
   10df0:	muleq	r2, r4, r0
   10df4:	andeq	r0, r0, r0
   10df8:	push	{r4, lr}
   10dfc:	ldr	r4, [pc, #24]	; 10e1c <_start@@Base+0xe8>
   10e00:	ldrb	r3, [r4]
   10e04:	cmp	r3, #0
   10e08:	popne	{r4, pc}
   10e0c:	bl	10d94 <_start@@Base+0x60>
   10e10:	mov	r3, #1
   10e14:	strb	r3, [r4]
   10e18:	pop	{r4, pc}
   10e1c:	andeq	r3, r2, r4, lsr #1
   10e20:	b	10dc0 <_start@@Base+0x8c>
   10e24:	str	fp, [sp, #-8]!
   10e28:	str	lr, [sp, #4]
   10e2c:	add	fp, sp, #4
   10e30:	bl	10d04 <coda_get_libcoda_version@plt>
   10e34:	mov	r3, r0
   10e38:	mov	r1, r3
   10e3c:	movw	r0, #6716	; 0x1a3c
   10e40:	movt	r0, #1
   10e44:	bl	10bd8 <printf@plt>
   10e48:	movw	r0, #6740	; 0x1a54
   10e4c:	movt	r0, #1
   10e50:	bl	10c74 <puts@plt>
   10e54:	mov	r0, #10
   10e58:	bl	10ce0 <putchar@plt>
   10e5c:	nop	{0}
   10e60:	sub	sp, fp, #4
   10e64:	ldr	fp, [sp]
   10e68:	add	sp, sp, #4
   10e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   10e70:	str	fp, [sp, #-8]!
   10e74:	str	lr, [sp, #4]
   10e78:	add	fp, sp, #4
   10e7c:	movw	r0, #6788	; 0x1a84
   10e80:	movt	r0, #1
   10e84:	bl	10c74 <puts@plt>
   10e88:	movw	r0, #6796	; 0x1a8c
   10e8c:	movt	r0, #1
   10e90:	bl	10c74 <puts@plt>
   10e94:	movw	r0, #6852	; 0x1ac4
   10e98:	movt	r0, #1
   10e9c:	bl	10c74 <puts@plt>
   10ea0:	movw	r0, #6924	; 0x1b0c
   10ea4:	movt	r0, #1
   10ea8:	bl	10c74 <puts@plt>
   10eac:	movw	r0, #6944	; 0x1b20
   10eb0:	movt	r0, #1
   10eb4:	bl	10c74 <puts@plt>
   10eb8:	movw	r0, #6976	; 0x1b40
   10ebc:	movt	r0, #1
   10ec0:	bl	10c74 <puts@plt>
   10ec4:	movw	r0, #7056	; 0x1b90
   10ec8:	movt	r0, #1
   10ecc:	bl	10c74 <puts@plt>
   10ed0:	movw	r0, #7128	; 0x1bd8
   10ed4:	movt	r0, #1
   10ed8:	bl	10c74 <puts@plt>
   10edc:	movw	r0, #7204	; 0x1c24
   10ee0:	movt	r0, #1
   10ee4:	bl	10c74 <puts@plt>
   10ee8:	movw	r0, #7228	; 0x1c3c
   10eec:	movt	r0, #1
   10ef0:	bl	10c74 <puts@plt>
   10ef4:	movw	r0, #7292	; 0x1c7c
   10ef8:	movt	r0, #1
   10efc:	bl	10c74 <puts@plt>
   10f00:	movw	r0, #7348	; 0x1cb4
   10f04:	movt	r0, #1
   10f08:	bl	10c74 <puts@plt>
   10f0c:	movw	r0, #7376	; 0x1cd0
   10f10:	movt	r0, #1
   10f14:	bl	10c74 <puts@plt>
   10f18:	movw	r0, #7448	; 0x1d18
   10f1c:	movt	r0, #1
   10f20:	bl	10c74 <puts@plt>
   10f24:	movw	r0, #7472	; 0x1d30
   10f28:	movt	r0, #1
   10f2c:	bl	10c74 <puts@plt>
   10f30:	mov	r0, #10
   10f34:	bl	10ce0 <putchar@plt>
   10f38:	movw	r0, #7536	; 0x1d70
   10f3c:	movt	r0, #1
   10f40:	bl	10c74 <puts@plt>
   10f44:	movw	r0, #7616	; 0x1dc0
   10f48:	movt	r0, #1
   10f4c:	bl	10c74 <puts@plt>
   10f50:	mov	r0, #10
   10f54:	bl	10ce0 <putchar@plt>
   10f58:	movw	r0, #7644	; 0x1ddc
   10f5c:	movt	r0, #1
   10f60:	bl	10c74 <puts@plt>
   10f64:	movw	r0, #7672	; 0x1df8
   10f68:	movt	r0, #1
   10f6c:	bl	10c74 <puts@plt>
   10f70:	mov	r0, #10
   10f74:	bl	10ce0 <putchar@plt>
   10f78:	movw	r0, #7704	; 0x1e18
   10f7c:	movt	r0, #1
   10f80:	bl	10c74 <puts@plt>
   10f84:	movw	r0, #7732	; 0x1e34
   10f88:	movt	r0, #1
   10f8c:	bl	10c74 <puts@plt>
   10f90:	mov	r0, #10
   10f94:	bl	10ce0 <putchar@plt>
   10f98:	movw	r0, #7784	; 0x1e68
   10f9c:	movt	r0, #1
   10fa0:	bl	10c74 <puts@plt>
   10fa4:	movw	r0, #7864	; 0x1eb8
   10fa8:	movt	r0, #1
   10fac:	bl	10c74 <puts@plt>
   10fb0:	movw	r0, #7940	; 0x1f04
   10fb4:	movt	r0, #1
   10fb8:	bl	10c74 <puts@plt>
   10fbc:	movw	r0, #7984	; 0x1f30
   10fc0:	movt	r0, #1
   10fc4:	bl	10c74 <puts@plt>
   10fc8:	movw	r0, #8060	; 0x1f7c
   10fcc:	movt	r0, #1
   10fd0:	bl	10c74 <puts@plt>
   10fd4:	movw	r0, #8132	; 0x1fc4
   10fd8:	movt	r0, #1
   10fdc:	bl	10c74 <puts@plt>
   10fe0:	movw	r0, #8196	; 0x2004
   10fe4:	movt	r0, #1
   10fe8:	bl	10c74 <puts@plt>
   10fec:	mov	r0, #10
   10ff0:	bl	10ce0 <putchar@plt>
   10ff4:	nop	{0}
   10ff8:	sub	sp, fp, #4
   10ffc:	ldr	fp, [sp]
   11000:	add	sp, sp, #4
   11004:	pop	{pc}		; (ldr pc, [sp], #4)
   11008:	str	fp, [sp, #-8]!
   1100c:	str	lr, [sp, #4]
   11010:	add	fp, sp, #4
   11014:	sub	sp, sp, #16
   11018:	str	r0, [fp, #-8]
   1101c:	str	r1, [fp, #-12]
   11020:	str	r2, [fp, #-16]
   11024:	ldr	r1, [fp, #-12]
   11028:	movw	r0, #8260	; 0x2044
   1102c:	movt	r0, #1
   11030:	bl	10bd8 <printf@plt>
   11034:	ldr	r3, [fp, #-8]
   11038:	cmp	r3, #0
   1103c:	beq	1105c <_start@@Base+0x328>
   11040:	movw	r0, #8272	; 0x2050
   11044:	movt	r0, #1
   11048:	bl	10bd8 <printf@plt>
   1104c:	movw	r1, #3032	; 0xbd8
   11050:	movt	r1, #1
   11054:	ldr	r0, [fp, #-8]
   11058:	bl	10c14 <coda_cursor_print_path@plt>
   1105c:	mov	r0, #10
   11060:	bl	10ce0 <putchar@plt>
   11064:	movw	r3, #12460	; 0x30ac
   11068:	movt	r3, #2
   1106c:	mov	r2, #1
   11070:	str	r2, [r3]
   11074:	nop	{0}
   11078:	sub	sp, fp, #4
   1107c:	ldr	fp, [sp]
   11080:	add	sp, sp, #4
   11084:	pop	{pc}		; (ldr pc, [sp], #4)
   11088:	str	fp, [sp, #-8]!
   1108c:	str	lr, [sp, #4]
   11090:	add	fp, sp, #4
   11094:	sub	sp, sp, #56	; 0x38
   11098:	str	r0, [fp, #-48]	; 0xffffffd0
   1109c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   110a0:	bl	10c74 <puts@plt>
   110a4:	sub	r0, fp, #32
   110a8:	sub	r2, fp, #16
   110ac:	sub	r1, fp, #28
   110b0:	sub	r3, fp, #40	; 0x28
   110b4:	str	r3, [sp, #4]
   110b8:	sub	r3, fp, #36	; 0x24
   110bc:	str	r3, [sp]
   110c0:	mov	r3, r0
   110c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   110c8:	bl	10c44 <coda_recognize_file@plt>
   110cc:	mov	r3, r0
   110d0:	cmp	r3, #0
   110d4:	beq	11120 <_start@@Base+0x3ec>
   110d8:	bl	10d10 <coda_get_errno@plt>
   110dc:	mov	r3, r0
   110e0:	ldr	r3, [r3]
   110e4:	mov	r0, r3
   110e8:	bl	10cf8 <coda_errno_to_string@plt>
   110ec:	mov	r3, r0
   110f0:	mov	r1, r3
   110f4:	movw	r0, #8280	; 0x2058
   110f8:	movt	r0, #1
   110fc:	bl	10bd8 <printf@plt>
   11100:	mov	r1, #0
   11104:	mov	r0, #0
   11108:	bl	10be4 <coda_set_error@plt>
   1110c:	movw	r3, #12460	; 0x30ac
   11110:	movt	r3, #2
   11114:	mov	r2, #1
   11118:	str	r2, [r3]
   1111c:	b	1135c <_start@@Base+0x628>
   11120:	movw	r3, #12456	; 0x30a8
   11124:	movt	r3, #2
   11128:	ldr	r3, [r3]
   1112c:	cmp	r3, #0
   11130:	beq	1116c <_start@@Base+0x438>
   11134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11138:	cmp	r3, #0
   1113c:	beq	1114c <_start@@Base+0x418>
   11140:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11144:	cmp	r3, #0
   11148:	bne	1116c <_start@@Base+0x438>
   1114c:	movw	r0, #8296	; 0x2068
   11150:	movt	r0, #1
   11154:	bl	10c74 <puts@plt>
   11158:	movw	r3, #12460	; 0x30ac
   1115c:	movt	r3, #2
   11160:	mov	r2, #1
   11164:	str	r2, [r3]
   11168:	b	1135c <_start@@Base+0x628>
   1116c:	movw	r3, #12464	; 0x30b0
   11170:	movt	r3, #2
   11174:	ldr	r3, [r3]
   11178:	cmp	r3, #0
   1117c:	beq	111d8 <_start@@Base+0x4a4>
   11180:	ldr	r3, [fp, #-16]
   11184:	mov	r0, r3
   11188:	bl	10c5c <coda_type_get_format_name@plt>
   1118c:	mov	r3, r0
   11190:	mov	r1, r3
   11194:	movw	r0, #8340	; 0x2094
   11198:	movt	r0, #1
   1119c:	bl	10bd8 <printf@plt>
   111a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111a4:	cmp	r3, #0
   111a8:	beq	111d0 <_start@@Base+0x49c>
   111ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   111b0:	cmp	r3, #0
   111b4:	beq	111d0 <_start@@Base+0x49c>
   111b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   111c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   111c4:	movw	r0, #8364	; 0x20ac
   111c8:	movt	r0, #1
   111cc:	bl	10bd8 <printf@plt>
   111d0:	mov	r0, #10
   111d4:	bl	10ce0 <putchar@plt>
   111d8:	sub	r3, fp, #12
   111dc:	mov	r1, r3
   111e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   111e4:	bl	10bf0 <coda_open@plt>
   111e8:	str	r0, [fp, #-8]
   111ec:	ldr	r3, [fp, #-8]
   111f0:	cmp	r3, #0
   111f4:	beq	11230 <_start@@Base+0x4fc>
   111f8:	bl	10d10 <coda_get_errno@plt>
   111fc:	mov	r3, r0
   11200:	ldr	r3, [r3]
   11204:	cmn	r3, #21
   11208:	bne	11230 <_start@@Base+0x4fc>
   1120c:	mov	r0, #0
   11210:	bl	10c08 <coda_set_option_use_mmap@plt>
   11214:	sub	r3, fp, #12
   11218:	mov	r1, r3
   1121c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11220:	bl	10bf0 <coda_open@plt>
   11224:	str	r0, [fp, #-8]
   11228:	mov	r0, #1
   1122c:	bl	10c08 <coda_set_option_use_mmap@plt>
   11230:	ldr	r3, [fp, #-8]
   11234:	cmp	r3, #0
   11238:	beq	11278 <_start@@Base+0x544>
   1123c:	bl	10d10 <coda_get_errno@plt>
   11240:	mov	r3, r0
   11244:	ldr	r3, [r3]
   11248:	mov	r0, r3
   1124c:	bl	10cf8 <coda_errno_to_string@plt>
   11250:	mov	r3, r0
   11254:	mov	r1, r3
   11258:	movw	r0, #8280	; 0x2058
   1125c:	movt	r0, #1
   11260:	bl	10bd8 <printf@plt>
   11264:	movw	r3, #12460	; 0x30ac
   11268:	movt	r3, #2
   1126c:	mov	r2, #1
   11270:	str	r2, [r3]
   11274:	b	1135c <_start@@Base+0x628>
   11278:	ldr	r0, [fp, #-12]
   1127c:	movw	r3, #12468	; 0x30b4
   11280:	movt	r3, #2
   11284:	ldr	r3, [r3]
   11288:	cmp	r3, #0
   1128c:	moveq	r3, #1
   11290:	movne	r3, #0
   11294:	uxtb	r3, r3
   11298:	mov	r1, r3
   1129c:	mov	r3, #0
   112a0:	movw	r2, #4104	; 0x1008
   112a4:	movt	r2, #1
   112a8:	bl	10c80 <coda_product_check@plt>
   112ac:	mov	r3, r0
   112b0:	cmp	r3, #0
   112b4:	beq	11300 <_start@@Base+0x5cc>
   112b8:	bl	10d10 <coda_get_errno@plt>
   112bc:	mov	r3, r0
   112c0:	ldr	r3, [r3]
   112c4:	mov	r0, r3
   112c8:	bl	10cf8 <coda_errno_to_string@plt>
   112cc:	mov	r3, r0
   112d0:	mov	r1, r3
   112d4:	movw	r0, #8280	; 0x2058
   112d8:	movt	r0, #1
   112dc:	bl	10bd8 <printf@plt>
   112e0:	movw	r3, #12460	; 0x30ac
   112e4:	movt	r3, #2
   112e8:	mov	r2, #1
   112ec:	str	r2, [r3]
   112f0:	ldr	r3, [fp, #-12]
   112f4:	mov	r0, r3
   112f8:	bl	10cec <coda_close@plt>
   112fc:	b	1135c <_start@@Base+0x628>
   11300:	ldr	r3, [fp, #-12]
   11304:	mov	r0, r3
   11308:	bl	10cec <coda_close@plt>
   1130c:	mov	r3, r0
   11310:	cmp	r3, #0
   11314:	beq	11354 <_start@@Base+0x620>
   11318:	bl	10d10 <coda_get_errno@plt>
   1131c:	mov	r3, r0
   11320:	ldr	r3, [r3]
   11324:	mov	r0, r3
   11328:	bl	10cf8 <coda_errno_to_string@plt>
   1132c:	mov	r3, r0
   11330:	mov	r1, r3
   11334:	movw	r0, #8376	; 0x20b8
   11338:	movt	r0, #1
   1133c:	bl	10bd8 <printf@plt>
   11340:	movw	r3, #12460	; 0x30ac
   11344:	movt	r3, #2
   11348:	mov	r2, #1
   1134c:	str	r2, [r3]
   11350:	b	1135c <_start@@Base+0x628>
   11354:	mov	r0, #10
   11358:	bl	10ce0 <putchar@plt>
   1135c:	sub	sp, fp, #4
   11360:	ldr	fp, [sp]
   11364:	add	sp, sp, #4
   11368:	pop	{pc}		; (ldr pc, [sp], #4)

0001136c <main@@Base>:
   1136c:	str	r4, [sp, #-12]!
   11370:	str	fp, [sp, #4]
   11374:	str	lr, [sp, #8]
   11378:	add	fp, sp, #8
   1137c:	sub	sp, sp, #1024	; 0x400
   11380:	sub	sp, sp, #12
   11384:	str	r0, [fp, #-1040]	; 0xfffffbf0
   11388:	str	r1, [fp, #-1044]	; 0xfffffbec
   1138c:	mov	r3, #0
   11390:	str	r3, [fp, #-16]
   11394:	movw	r3, #12464	; 0x30b0
   11398:	movt	r3, #2
   1139c:	mov	r2, #0
   113a0:	str	r2, [r3]
   113a4:	movw	r3, #12468	; 0x30b4
   113a8:	movt	r3, #2
   113ac:	mov	r2, #0
   113b0:	str	r2, [r3]
   113b4:	mov	r3, #1
   113b8:	str	r3, [fp, #-20]	; 0xffffffec
   113bc:	movw	r3, #12456	; 0x30a8
   113c0:	movt	r3, #2
   113c4:	mov	r2, #0
   113c8:	str	r2, [r3]
   113cc:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
   113d0:	cmp	r3, #1
   113d4:	beq	11428 <main@@Base+0xbc>
   113d8:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   113dc:	add	r3, r3, #4
   113e0:	ldr	r3, [r3]
   113e4:	movw	r1, #8392	; 0x20c8
   113e8:	movt	r1, #1
   113ec:	mov	r0, r3
   113f0:	bl	10bcc <strcmp@plt>
   113f4:	mov	r3, r0
   113f8:	cmp	r3, #0
   113fc:	beq	11428 <main@@Base+0xbc>
   11400:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   11404:	add	r3, r3, #4
   11408:	ldr	r3, [r3]
   1140c:	movw	r1, #8396	; 0x20cc
   11410:	movt	r1, #1
   11414:	mov	r0, r3
   11418:	bl	10bcc <strcmp@plt>
   1141c:	mov	r3, r0
   11420:	cmp	r3, #0
   11424:	bne	11434 <main@@Base+0xc8>
   11428:	bl	10e70 <_start@@Base+0x13c>
   1142c:	mov	r0, #0
   11430:	bl	10ca4 <exit@plt>
   11434:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   11438:	add	r3, r3, #4
   1143c:	ldr	r3, [r3]
   11440:	movw	r1, #8404	; 0x20d4
   11444:	movt	r1, #1
   11448:	mov	r0, r3
   1144c:	bl	10bcc <strcmp@plt>
   11450:	mov	r3, r0
   11454:	cmp	r3, #0
   11458:	beq	11484 <main@@Base+0x118>
   1145c:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   11460:	add	r3, r3, #4
   11464:	ldr	r3, [r3]
   11468:	movw	r1, #8408	; 0x20d8
   1146c:	movt	r1, #1
   11470:	mov	r0, r3
   11474:	bl	10bcc <strcmp@plt>
   11478:	mov	r3, r0
   1147c:	cmp	r3, #0
   11480:	bne	11490 <main@@Base+0x124>
   11484:	bl	10e24 <_start@@Base+0xf0>
   11488:	mov	r0, #0
   1148c:	bl	10ca4 <exit@plt>
   11490:	mov	r3, #1
   11494:	str	r3, [fp, #-24]	; 0xffffffe8
   11498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1149c:	add	r3, r3, #1
   114a0:	ldr	r2, [fp, #-1040]	; 0xfffffbf0
   114a4:	cmp	r2, r3
   114a8:	ble	1150c <main@@Base+0x1a0>
   114ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b0:	lsl	r3, r3, #2
   114b4:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   114b8:	add	r3, r2, r3
   114bc:	ldr	r3, [r3]
   114c0:	movw	r1, #8420	; 0x20e4
   114c4:	movt	r1, #1
   114c8:	mov	r0, r3
   114cc:	bl	10bcc <strcmp@plt>
   114d0:	mov	r3, r0
   114d4:	cmp	r3, #0
   114d8:	bne	1150c <main@@Base+0x1a0>
   114dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114e0:	add	r3, r3, #1
   114e4:	lsl	r3, r3, #2
   114e8:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   114ec:	add	r3, r2, r3
   114f0:	ldr	r3, [r3]
   114f4:	mov	r0, r3
   114f8:	bl	10c38 <coda_set_definition_path@plt>
   114fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11500:	add	r3, r3, #2
   11504:	str	r3, [fp, #-24]	; 0xffffffe8
   11508:	b	1157c <main@@Base+0x210>
   1150c:	movw	r3, #8424	; 0x20e8
   11510:	movt	r3, #1
   11514:	str	r3, [fp, #-32]	; 0xffffffe0
   11518:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   1151c:	ldr	r3, [r3]
   11520:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11524:	mov	r1, #0
   11528:	mov	r0, r3
   1152c:	bl	10c20 <coda_set_definition_path_conditional@plt>
   11530:	mov	r3, r0
   11534:	cmp	r3, #0
   11538:	beq	117c0 <main@@Base+0x454>
   1153c:	movw	r3, #12440	; 0x3098
   11540:	movt	r3, #2
   11544:	ldr	r4, [r3]
   11548:	bl	10d10 <coda_get_errno@plt>
   1154c:	mov	r3, r0
   11550:	ldr	r3, [r3]
   11554:	mov	r0, r3
   11558:	bl	10cf8 <coda_errno_to_string@plt>
   1155c:	mov	r3, r0
   11560:	mov	r2, r3
   11564:	movw	r1, #8452	; 0x2104
   11568:	movt	r1, #1
   1156c:	mov	r0, r4
   11570:	bl	10cb0 <fprintf@plt>
   11574:	mov	r0, #1
   11578:	bl	10ca4 <exit@plt>
   1157c:	b	117c0 <main@@Base+0x454>
   11580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11584:	lsl	r3, r3, #2
   11588:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   1158c:	add	r3, r2, r3
   11590:	ldr	r3, [r3]
   11594:	movw	r1, #8464	; 0x2110
   11598:	movt	r1, #1
   1159c:	mov	r0, r3
   115a0:	bl	10bcc <strcmp@plt>
   115a4:	mov	r3, r0
   115a8:	cmp	r3, #0
   115ac:	beq	115e0 <main@@Base+0x274>
   115b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115b4:	lsl	r3, r3, #2
   115b8:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   115bc:	add	r3, r2, r3
   115c0:	ldr	r3, [r3]
   115c4:	movw	r1, #8468	; 0x2114
   115c8:	movt	r1, #1
   115cc:	mov	r0, r3
   115d0:	bl	10bcc <strcmp@plt>
   115d4:	mov	r3, r0
   115d8:	cmp	r3, #0
   115dc:	bne	115f4 <main@@Base+0x288>
   115e0:	movw	r3, #12464	; 0x30b0
   115e4:	movt	r3, #2
   115e8:	mov	r2, #1
   115ec:	str	r2, [r3]
   115f0:	b	117b4 <main@@Base+0x448>
   115f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115f8:	lsl	r3, r3, #2
   115fc:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   11600:	add	r3, r2, r3
   11604:	ldr	r3, [r3]
   11608:	movw	r1, #8480	; 0x2120
   1160c:	movt	r1, #1
   11610:	mov	r0, r3
   11614:	bl	10bcc <strcmp@plt>
   11618:	mov	r3, r0
   1161c:	cmp	r3, #0
   11620:	beq	11654 <main@@Base+0x2e8>
   11624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11628:	lsl	r3, r3, #2
   1162c:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   11630:	add	r3, r2, r3
   11634:	ldr	r3, [r3]
   11638:	movw	r1, #8484	; 0x2124
   1163c:	movt	r1, #1
   11640:	mov	r0, r3
   11644:	bl	10bcc <strcmp@plt>
   11648:	mov	r3, r0
   1164c:	cmp	r3, #0
   11650:	bne	11668 <main@@Base+0x2fc>
   11654:	movw	r3, #12468	; 0x30b4
   11658:	movt	r3, #2
   1165c:	mov	r2, #1
   11660:	str	r2, [r3]
   11664:	b	117b4 <main@@Base+0x448>
   11668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1166c:	lsl	r3, r3, #2
   11670:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   11674:	add	r3, r2, r3
   11678:	ldr	r3, [r3]
   1167c:	movw	r1, #8492	; 0x212c
   11680:	movt	r1, #1
   11684:	mov	r0, r3
   11688:	bl	10bcc <strcmp@plt>
   1168c:	mov	r3, r0
   11690:	cmp	r3, #0
   11694:	beq	116c8 <main@@Base+0x35c>
   11698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1169c:	lsl	r3, r3, #2
   116a0:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   116a4:	add	r3, r2, r3
   116a8:	ldr	r3, [r3]
   116ac:	movw	r1, #8496	; 0x2130
   116b0:	movt	r1, #1
   116b4:	mov	r0, r3
   116b8:	bl	10bcc <strcmp@plt>
   116bc:	mov	r3, r0
   116c0:	cmp	r3, #0
   116c4:	bne	116dc <main@@Base+0x370>
   116c8:	movw	r3, #12456	; 0x30a8
   116cc:	movt	r3, #2
   116d0:	mov	r2, #1
   116d4:	str	r2, [r3]
   116d8:	b	117b4 <main@@Base+0x448>
   116dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116e0:	lsl	r3, r3, #2
   116e4:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   116e8:	add	r3, r2, r3
   116ec:	ldr	r3, [r3]
   116f0:	movw	r1, #8512	; 0x2140
   116f4:	movt	r1, #1
   116f8:	mov	r0, r3
   116fc:	bl	10bcc <strcmp@plt>
   11700:	mov	r3, r0
   11704:	cmp	r3, #0
   11708:	bne	11718 <main@@Base+0x3ac>
   1170c:	mov	r3, #0
   11710:	str	r3, [fp, #-20]	; 0xffffffec
   11714:	b	117b4 <main@@Base+0x448>
   11718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1171c:	lsl	r3, r3, #2
   11720:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   11724:	add	r3, r2, r3
   11728:	ldr	r3, [r3]
   1172c:	movw	r1, #8524	; 0x214c
   11730:	movt	r1, #1
   11734:	mov	r0, r3
   11738:	bl	10bcc <strcmp@plt>
   1173c:	mov	r3, r0
   11740:	cmp	r3, #0
   11744:	bne	11768 <main@@Base+0x3fc>
   11748:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
   1174c:	sub	r3, r3, #1
   11750:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11754:	cmp	r2, r3
   11758:	bne	11768 <main@@Base+0x3fc>
   1175c:	mov	r3, #1
   11760:	str	r3, [fp, #-16]
   11764:	b	117d8 <main@@Base+0x46c>
   11768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1176c:	lsl	r3, r3, #2
   11770:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   11774:	add	r3, r2, r3
   11778:	ldr	r3, [r3]
   1177c:	ldrb	r3, [r3]
   11780:	cmp	r3, #45	; 0x2d
   11784:	bne	117d4 <main@@Base+0x468>
   11788:	movw	r3, #12440	; 0x3098
   1178c:	movt	r3, #2
   11790:	ldr	r3, [r3]
   11794:	mov	r2, #25
   11798:	mov	r1, #1
   1179c:	movw	r0, #8528	; 0x2150
   117a0:	movt	r0, #1
   117a4:	bl	10c50 <fwrite@plt>
   117a8:	bl	10e70 <_start@@Base+0x13c>
   117ac:	mov	r0, #1
   117b0:	bl	10ca4 <exit@plt>
   117b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117b8:	add	r3, r3, #1
   117bc:	str	r3, [fp, #-24]	; 0xffffffe8
   117c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   117c4:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
   117c8:	cmp	r2, r3
   117cc:	blt	11580 <main@@Base+0x214>
   117d0:	b	117d8 <main@@Base+0x46c>
   117d4:	nop	{0}
   117d8:	bl	10cbc <coda_init@plt>
   117dc:	mov	r3, r0
   117e0:	cmp	r3, #0
   117e4:	beq	11828 <main@@Base+0x4bc>
   117e8:	movw	r3, #12440	; 0x3098
   117ec:	movt	r3, #2
   117f0:	ldr	r4, [r3]
   117f4:	bl	10d10 <coda_get_errno@plt>
   117f8:	mov	r3, r0
   117fc:	ldr	r3, [r3]
   11800:	mov	r0, r3
   11804:	bl	10cf8 <coda_errno_to_string@plt>
   11808:	mov	r3, r0
   1180c:	mov	r2, r3
   11810:	movw	r1, #8452	; 0x2104
   11814:	movt	r1, #1
   11818:	mov	r0, r4
   1181c:	bl	10cb0 <fprintf@plt>
   11820:	mov	r0, #1
   11824:	bl	10ca4 <exit@plt>
   11828:	mov	r0, #0
   1182c:	bl	10bc0 <coda_set_option_perform_boundary_checks@plt>
   11830:	mov	r0, #0
   11834:	bl	10cd4 <coda_set_option_perform_conversions@plt>
   11838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1183c:	bl	10c08 <coda_set_option_use_mmap@plt>
   11840:	ldr	r3, [fp, #-16]
   11844:	cmp	r3, #0
   11848:	beq	11980 <main@@Base+0x614>
   1184c:	mov	r3, #0
   11850:	str	r3, [fp, #-28]	; 0xffffffe4
   11854:	bl	10c2c <getchar@plt>
   11858:	mov	r3, r0
   1185c:	strb	r3, [fp, #-33]	; 0xffffffdf
   11860:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   11864:	cmp	r3, #13
   11868:	bne	118a0 <main@@Base+0x534>
   1186c:	bl	10c2c <getchar@plt>
   11870:	mov	r3, r0
   11874:	strb	r3, [fp, #-34]	; 0xffffffde
   11878:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1187c:	cmp	r3, #10
   11880:	beq	118a0 <main@@Base+0x534>
   11884:	ldrb	r2, [fp, #-34]	; 0xffffffde
   11888:	movw	r3, #12448	; 0x30a0
   1188c:	movt	r3, #2
   11890:	ldr	r3, [r3]
   11894:	mov	r1, r3
   11898:	mov	r0, r2
   1189c:	bl	10cc8 <ungetc@plt>
   118a0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   118a4:	cmp	r3, #10
   118a8:	beq	118b8 <main@@Base+0x54c>
   118ac:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   118b0:	cmp	r3, #13
   118b4:	bne	118e4 <main@@Base+0x578>
   118b8:	sub	r2, fp, #1024	; 0x400
   118bc:	sub	r2, r2, #12
   118c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   118c4:	add	r3, r2, r3
   118c8:	mov	r2, #0
   118cc:	strb	r2, [r3]
   118d0:	nop	{0}
   118d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   118d8:	cmp	r3, #0
   118dc:	ble	1184c <main@@Base+0x4e0>
   118e0:	b	11934 <main@@Base+0x5c8>
   118e4:	sub	r2, fp, #1024	; 0x400
   118e8:	sub	r2, r2, #12
   118ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   118f0:	add	r3, r2, r3
   118f4:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   118f8:	strb	r2, [r3]
   118fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11900:	add	r3, r3, #1
   11904:	str	r3, [fp, #-28]	; 0xffffffe4
   11908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1190c:	cmp	r3, #1000	; 0x3e8
   11910:	blt	11854 <main@@Base+0x4e8>
   11914:	movw	r3, #8648	; 0x21c8
   11918:	movt	r3, #1
   1191c:	mov	r2, #316	; 0x13c
   11920:	movw	r1, #8556	; 0x216c
   11924:	movt	r1, #1
   11928:	movw	r0, #8636	; 0x21bc
   1192c:	movt	r0, #1
   11930:	bl	10d28 <__assert_fail@plt>
   11934:	sub	r3, fp, #1024	; 0x400
   11938:	sub	r3, r3, #12
   1193c:	mov	r0, r3
   11940:	bl	11088 <_start@@Base+0x354>
   11944:	mov	r0, #0
   11948:	bl	10bfc <fflush@plt>
   1194c:	b	1184c <main@@Base+0x4e0>
   11950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11954:	lsl	r3, r3, #2
   11958:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   1195c:	add	r3, r2, r3
   11960:	ldr	r3, [r3]
   11964:	mov	r0, r3
   11968:	bl	11088 <_start@@Base+0x354>
   1196c:	mov	r0, #0
   11970:	bl	10bfc <fflush@plt>
   11974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11978:	add	r3, r3, #1
   1197c:	str	r3, [fp, #-24]	; 0xffffffe8
   11980:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11984:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
   11988:	cmp	r2, r3
   1198c:	blt	11950 <main@@Base+0x5e4>
   11990:	bl	10c68 <coda_done@plt>
   11994:	movw	r3, #12460	; 0x30ac
   11998:	movt	r3, #2
   1199c:	ldr	r3, [r3]
   119a0:	cmp	r3, #0
   119a4:	beq	119b0 <main@@Base+0x644>
   119a8:	mov	r0, #1
   119ac:	bl	10ca4 <exit@plt>
   119b0:	mov	r3, #0
   119b4:	mov	r0, r3
   119b8:	sub	sp, fp, #8
   119bc:	ldr	r4, [sp]
   119c0:	ldr	fp, [sp, #4]
   119c4:	add	sp, sp, #8
   119c8:	pop	{pc}		; (ldr pc, [sp], #4)

000119cc <__libc_csu_init@@Base>:
   119cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119d0:	mov	r7, r0
   119d4:	ldr	r6, [pc, #72]	; 11a24 <__libc_csu_init@@Base+0x58>
   119d8:	ldr	r5, [pc, #72]	; 11a28 <__libc_csu_init@@Base+0x5c>
   119dc:	add	r6, pc, r6
   119e0:	add	r5, pc, r5
   119e4:	sub	r6, r6, r5
   119e8:	mov	r8, r1
   119ec:	mov	r9, r2
   119f0:	bl	10ba0 <coda_set_option_perform_boundary_checks@plt-0x20>
   119f4:	asrs	r6, r6, #2
   119f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119fc:	mov	r4, #0
   11a00:	add	r4, r4, #1
   11a04:	ldr	r3, [r5], #4
   11a08:	mov	r2, r9
   11a0c:	mov	r1, r8
   11a10:	mov	r0, r7
   11a14:	blx	r3
   11a18:	cmp	r6, r4
   11a1c:	bne	11a00 <__libc_csu_init@@Base+0x34>
   11a20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a24:	andeq	r1, r1, r8, lsl r5
   11a28:	andeq	r1, r1, r0, lsl r5

00011a2c <__libc_csu_fini@@Base>:
   11a2c:	bx	lr

Disassembly of section .fini:

00011a30 <.fini>:
   11a30:	push	{r3, lr}
   11a34:	pop	{r3, pc}
