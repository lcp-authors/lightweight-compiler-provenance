
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-time.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_month_to_integer>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldrb	r1, [r0]
      14:	strb	r1, [sp, #8]
      18:	ldrb	r2, [r0, #1]
      1c:	strb	r2, [sp, #9]
      20:	ldrb	r1, [r0, #2]
      24:	strb	r1, [sp, #10]
      28:	mov	r0, #0
      2c:	strb	r0, [sp, #11]
      30:	add	r0, sp, #8
      34:	ldr	r1, [pc, #428]	; 1e8 <coda_month_to_integer+0x1e8>
      38:	mov	r2, #3
      3c:	bl	0 <strncasecmp>
      40:	cmp	r0, #0
      44:	bne	50 <coda_month_to_integer+0x50>
      48:	mov	r0, #1
      4c:	b	1c4 <coda_month_to_integer+0x1c4>
      50:	add	r0, sp, #8
      54:	ldr	r1, [pc, #384]	; 1dc <coda_month_to_integer+0x1dc>
      58:	mov	r2, #3
      5c:	bl	0 <strncasecmp>
      60:	cmp	r0, #0
      64:	bne	70 <coda_month_to_integer+0x70>
      68:	mov	r0, #2
      6c:	b	1c4 <coda_month_to_integer+0x1c4>
      70:	add	r0, sp, #8
      74:	ldr	r1, [pc, #384]	; 1fc <coda_month_to_integer+0x1fc>
      78:	mov	r2, #3
      7c:	bl	0 <strncasecmp>
      80:	cmp	r0, #0
      84:	bne	90 <coda_month_to_integer+0x90>
      88:	mov	r0, #3
      8c:	b	1c4 <coda_month_to_integer+0x1c4>
      90:	add	r0, sp, #8
      94:	ldr	r1, [pc, #340]	; 1f0 <coda_month_to_integer+0x1f0>
      98:	mov	r2, #3
      9c:	bl	0 <strncasecmp>
      a0:	cmp	r0, #0
      a4:	bne	b0 <coda_month_to_integer+0xb0>
      a8:	mov	r0, #4
      ac:	b	1c4 <coda_month_to_integer+0x1c4>
      b0:	add	r0, sp, #8
      b4:	ldr	r1, [pc, #280]	; 1d4 <coda_month_to_integer+0x1d4>
      b8:	mov	r2, #3
      bc:	bl	0 <strncasecmp>
      c0:	cmp	r0, #0
      c4:	bne	d0 <coda_month_to_integer+0xd0>
      c8:	mov	r0, #5
      cc:	b	1c4 <coda_month_to_integer+0x1c4>
      d0:	add	r0, sp, #8
      d4:	ldr	r1, [pc, #280]	; 1f4 <coda_month_to_integer+0x1f4>
      d8:	mov	r2, #3
      dc:	bl	0 <strncasecmp>
      e0:	cmp	r0, #0
      e4:	bne	f0 <coda_month_to_integer+0xf0>
      e8:	mov	r0, #6
      ec:	b	1c4 <coda_month_to_integer+0x1c4>
      f0:	add	r0, sp, #8
      f4:	ldr	r1, [pc, #232]	; 1e4 <coda_month_to_integer+0x1e4>
      f8:	mov	r2, #3
      fc:	bl	0 <strncasecmp>
     100:	cmp	r0, #0
     104:	bne	110 <coda_month_to_integer+0x110>
     108:	mov	r0, #7
     10c:	b	1c4 <coda_month_to_integer+0x1c4>
     110:	add	r0, sp, #8
     114:	ldr	r1, [pc, #228]	; 200 <coda_month_to_integer+0x200>
     118:	mov	r2, #3
     11c:	bl	0 <strncasecmp>
     120:	cmp	r0, #0
     124:	bne	130 <coda_month_to_integer+0x130>
     128:	mov	r0, #8
     12c:	b	1c4 <coda_month_to_integer+0x1c4>
     130:	add	r0, sp, #8
     134:	ldr	r1, [pc, #176]	; 1ec <coda_month_to_integer+0x1ec>
     138:	mov	r2, #3
     13c:	bl	0 <strncasecmp>
     140:	cmp	r0, #0
     144:	bne	150 <coda_month_to_integer+0x150>
     148:	mov	r0, #9
     14c:	b	1c4 <coda_month_to_integer+0x1c4>
     150:	add	r0, sp, #8
     154:	ldr	r1, [pc, #124]	; 1d8 <coda_month_to_integer+0x1d8>
     158:	mov	r2, #3
     15c:	bl	0 <strncasecmp>
     160:	cmp	r0, #0
     164:	bne	170 <coda_month_to_integer+0x170>
     168:	mov	r0, #10
     16c:	b	1c4 <coda_month_to_integer+0x1c4>
     170:	add	r0, sp, #8
     174:	ldr	r1, [pc, #100]	; 1e0 <coda_month_to_integer+0x1e0>
     178:	mov	r2, #3
     17c:	bl	0 <strncasecmp>
     180:	cmp	r0, #0
     184:	bne	190 <coda_month_to_integer+0x190>
     188:	mov	r0, #11
     18c:	b	1c4 <coda_month_to_integer+0x1c4>
     190:	add	r0, sp, #8
     194:	ldr	r1, [pc, #92]	; 1f8 <coda_month_to_integer+0x1f8>
     198:	mov	r2, #3
     19c:	bl	0 <strncasecmp>
     1a0:	cmp	r0, #0
     1a4:	bne	1b0 <coda_month_to_integer+0x1b0>
     1a8:	mov	r0, #12
     1ac:	b	1c4 <coda_month_to_integer+0x1c4>
     1b0:	mvn	r0, #99	; 0x63
     1b4:	ldr	r1, [pc, #20]	; 1d0 <coda_month_to_integer+0x1d0>
     1b8:	add	r2, sp, #8
     1bc:	bl	0 <coda_set_error>
     1c0:	mvn	r0, #0
     1c4:	ldr	lr, [sp, #4]
     1c8:	add	sp, sp, #16
     1cc:	bx	lr
     1d0:	.word	0x000004cc
     1d4:	.word	0x000007b9
     1d8:	.word	0x00000097
     1dc:	.word	0x00000330
     1e0:	.word	0x00000334
     1e4:	.word	0x0000059b
     1e8:	.word	0x00000780
     1ec:	.word	0x00000137
     1f0:	.word	0x0000021c
     1f4:	.word	0x000001f6
     1f8:	.word	0x0000071f
     1fc:	.word	0x000006c2
     200:	.word	0x00000453

00000204 <parse_integer>:
     204:	mov	ip, sp
     208:	sub	sp, sp, #16
     20c:	str	ip, [sp]
     210:	str	lr, [sp, #4]
     214:	str	r4, [sp, #8]
     218:	cmp	r2, #0
     21c:	beq	240 <parse_integer+0x3c>
     220:	cmp	r1, #1
     224:	ble	240 <parse_integer+0x3c>
     228:	ldrb	r2, [r0]
     22c:	cmp	r2, #32
     230:	bne	240 <parse_integer+0x3c>
     234:	add	r0, r0, #1
     238:	sub	r1, r1, #1
     23c:	b	220 <parse_integer+0x1c>
     240:	mov	r2, #0
     244:	str	r2, [r3]
     248:	cmp	r1, #0
     24c:	ble	290 <parse_integer+0x8c>
     250:	ldrb	r2, [r0]
     254:	cmp	r2, #48	; 0x30
     258:	blt	288 <parse_integer+0x84>
     25c:	cmp	r2, #57	; 0x39
     260:	bgt	288 <parse_integer+0x84>
     264:	ldr	r4, [r3]
     268:	lsl	ip, r4, #3
     26c:	add	ip, ip, r4, lsl #1
     270:	add	r2, ip, r2
     274:	sub	ip, r2, #48	; 0x30
     278:	str	ip, [r3]
     27c:	add	r0, r0, #1
     280:	sub	r1, r1, #1
     284:	b	248 <parse_integer+0x44>
     288:	mvn	r0, #0
     28c:	b	294 <parse_integer+0x90>
     290:	mov	r0, #0
     294:	ldr	r4, [sp, #8]
     298:	ldr	lr, [sp, #4]
     29c:	add	sp, sp, #16
     2a0:	bx	lr

000002a4 <y>:
     2a4:	mov	ip, sp
     2a8:	sub	sp, sp, #8
     2ac:	str	ip, [sp]
     2b0:	str	lr, [sp, #4]
     2b4:	cmp	r0, #0
     2b8:	movlt	r1, #1
     2bc:	movge	r1, #0
     2c0:	add	r0, r0, r1
     2c4:	ldr	lr, [sp, #4]
     2c8:	add	sp, sp, #8
     2cc:	bx	lr

000002d0 <int_div>:
     2d0:	mov	ip, sp
     2d4:	sub	sp, sp, #16
     2d8:	str	ip, [sp]
     2dc:	str	lr, [sp, #4]
     2e0:	str	r4, [sp, #8]
     2e4:	str	r5, [sp, #12]
     2e8:	mov	r5, r1
     2ec:	mov	r4, r0
     2f0:	mov	r0, r4
     2f4:	mov	r1, r5
     2f8:	bl	0 <__aeabi_idiv>
     2fc:	mul	r1, r0, r5
     300:	sub	r2, r4, r1
     304:	cmp	r2, #0
     308:	movlt	r1, #1
     30c:	movge	r1, #0
     310:	sub	r0, r0, r1
     314:	ldr	r4, [sp, #8]
     318:	ldr	r5, [sp, #12]
     31c:	ldr	lr, [sp, #4]
     320:	add	sp, sp, #16
     324:	bx	lr

00000328 <int_mod>:
     328:	mov	ip, sp
     32c:	sub	sp, sp, #16
     330:	str	ip, [sp]
     334:	str	lr, [sp, #4]
     338:	str	r4, [sp, #8]
     33c:	str	r5, [sp, #12]
     340:	mov	r4, r1
     344:	mov	r5, r0
     348:	mov	r0, r5
     34c:	mov	r1, r4
     350:	bl	0 <__aeabi_idiv>
     354:	mul	r1, r0, r4
     358:	sub	r0, r5, r1
     35c:	cmp	r0, #0
     360:	movlt	r2, #1
     364:	movge	r2, #0
     368:	mla	r0, r4, r2, r0
     36c:	ldr	r4, [sp, #8]
     370:	ldr	r5, [sp, #12]
     374:	ldr	lr, [sp, #4]
     378:	add	sp, sp, #16
     37c:	bx	lr

00000380 <dmy_to_mjd2000_julian>:
     380:	mov	ip, sp
     384:	sub	sp, sp, #96	; 0x60
     388:	str	ip, [sp, #4]
     38c:	str	lr, [sp, #8]
     390:	str	r4, [sp, #16]
     394:	str	r5, [sp, #20]
     398:	str	r6, [sp, #24]
     39c:	str	r7, [sp, #28]
     3a0:	str	r8, [sp, #32]
     3a4:	str	r9, [sp, #36]	; 0x24
     3a8:	mov	r6, r3
     3ac:	mov	r5, r2
     3b0:	mov	r7, r1
     3b4:	mov	r8, r0
     3b8:	mov	r2, #0
     3bc:	str	r2, [sp, #40]	; 0x28
     3c0:	mov	r1, #31
     3c4:	str	r1, [sp, #44]	; 0x2c
     3c8:	mov	r3, #59	; 0x3b
     3cc:	str	r3, [sp, #48]	; 0x30
     3d0:	mov	r1, #90	; 0x5a
     3d4:	str	r1, [sp, #52]	; 0x34
     3d8:	mov	ip, #120	; 0x78
     3dc:	str	ip, [sp, #56]	; 0x38
     3e0:	mov	r2, #151	; 0x97
     3e4:	str	r2, [sp, #60]	; 0x3c
     3e8:	mov	r3, #181	; 0xb5
     3ec:	str	r3, [sp, #64]	; 0x40
     3f0:	mov	ip, #212	; 0xd4
     3f4:	str	ip, [sp, #68]	; 0x44
     3f8:	mov	r3, #243	; 0xf3
     3fc:	str	r3, [sp, #72]	; 0x48
     400:	movw	r2, #273	; 0x111
     404:	str	r2, [sp, #76]	; 0x4c
     408:	mov	r0, #304	; 0x130
     40c:	str	r0, [sp, #80]	; 0x50
     410:	movw	r0, #334	; 0x14e
     414:	str	r0, [sp, #84]	; 0x54
     418:	movw	r2, #365	; 0x16d
     41c:	str	r2, [sp, #88]	; 0x58
     420:	mov	r2, #1
     424:	cmp	r7, #1
     428:	movlt	r3, #1
     42c:	movge	r3, #0
     430:	cmp	r5, #0
     434:	moveq	ip, r2
     438:	movne	ip, r3
     43c:	mov	r3, #1
     440:	cmp	r7, #12
     444:	movgt	r0, #1
     448:	movle	r0, #0
     44c:	cmp	ip, #0
     450:	movne	r3, r3
     454:	moveq	r3, r0
     458:	mov	r0, #1
     45c:	cmp	r8, #1
     460:	movlt	ip, #1
     464:	movge	ip, #0
     468:	cmp	r3, #0
     46c:	movne	r0, r0
     470:	moveq	r0, ip
     474:	cmp	r0, #0
     478:	bne	578 <dmy_to_mjd2000_julian+0x1f8>
     47c:	cmp	r7, #2
     480:	bne	4b0 <dmy_to_mjd2000_julian+0x130>
     484:	mov	r0, r5
     488:	bl	2a4 <y>
     48c:	asr	lr, r0, #31
     490:	add	lr, r0, lr, lsr #30
     494:	asr	r3, lr, #2
     498:	lsl	r1, r3, #2
     49c:	sub	ip, r0, r1
     4a0:	cmp	ip, #0
     4a4:	moveq	r3, #1
     4a8:	movne	r3, #0
     4ac:	b	4b4 <dmy_to_mjd2000_julian+0x134>
     4b0:	mov	r3, #0
     4b4:	add	ip, sp, #40	; 0x28
     4b8:	ldr	ip, [ip, r7, lsl #2]
     4bc:	add	r2, sp, #40	; 0x28
     4c0:	lsl	r0, r7, #2
     4c4:	add	r1, r2, r0
     4c8:	sub	lr, r1, #4096	; 0x1000
     4cc:	ldr	r0, [lr, #4092]	; 0xffc
     4d0:	sub	r2, ip, r0
     4d4:	add	r1, r2, r3
     4d8:	cmp	r8, r1
     4dc:	bgt	578 <dmy_to_mjd2000_julian+0x1f8>
     4e0:	mov	r0, r5
     4e4:	bl	2a4 <y>
     4e8:	mov	r4, r0
     4ec:	mov	r0, r5
     4f0:	bl	2a4 <y>
     4f4:	mov	r1, #4
     4f8:	bl	2d0 <int_div>
     4fc:	mov	r9, r0
     500:	cmp	r7, #2
     504:	bgt	534 <dmy_to_mjd2000_julian+0x1b4>
     508:	mov	r0, r5
     50c:	bl	2a4 <y>
     510:	asr	lr, r0, #31
     514:	add	lr, r0, lr, lsr #30
     518:	asr	r2, lr, #2
     51c:	lsl	r3, r2, #2
     520:	sub	r1, r0, r3
     524:	cmp	r1, #0
     528:	moveq	r3, #1
     52c:	movne	r3, #0
     530:	b	538 <dmy_to_mjd2000_julian+0x1b8>
     534:	mov	r3, #0
     538:	movw	ip, #365	; 0x16d
     53c:	mla	r0, ip, r4, r8
     540:	add	r0, r0, r9
     544:	add	r1, sp, #40	; 0x28
     548:	lsl	r2, r7, #2
     54c:	add	ip, r1, r2
     550:	sub	lr, ip, #4096	; 0x1000
     554:	ldr	r1, [lr, #4092]	; 0xffc
     558:	add	r2, r0, r1
     55c:	sub	r1, r2, r3
     560:	add	r0, r1, #226	; 0xe2
     564:	add	r0, r0, #16896	; 0x4200
     568:	add	r0, r0, #1703936	; 0x1a0000
     56c:	str	r0, [r6]
     570:	mov	r0, #0
     574:	b	594 <dmy_to_mjd2000_julian+0x214>
     578:	mvn	r0, #103	; 0x67
     57c:	ldr	r1, [pc, #52]	; 5b8 <dmy_to_mjd2000_julian+0x238>
     580:	str	r5, [sp]
     584:	mov	r3, r7
     588:	mov	r2, r8
     58c:	bl	0 <coda_set_error>
     590:	mvn	r0, #0
     594:	ldr	r4, [sp, #16]
     598:	ldr	r5, [sp, #20]
     59c:	ldr	r6, [sp, #24]
     5a0:	ldr	r7, [sp, #28]
     5a4:	ldr	r8, [sp, #32]
     5a8:	ldr	r9, [sp, #36]	; 0x24
     5ac:	ldr	lr, [sp, #8]
     5b0:	add	sp, sp, #96	; 0x60
     5b4:	bx	lr
     5b8:	.word	0x00000427

000005bc <dmy_to_mjd2000>:
     5bc:	mov	ip, sp
     5c0:	sub	sp, sp, #128	; 0x80
     5c4:	str	ip, [sp, #4]
     5c8:	str	lr, [sp, #8]
     5cc:	str	r4, [sp, #28]
     5d0:	str	r5, [sp, #32]
     5d4:	str	r6, [sp, #36]	; 0x24
     5d8:	str	r7, [sp, #40]	; 0x28
     5dc:	str	r8, [sp, #44]	; 0x2c
     5e0:	str	r9, [sp, #48]	; 0x30
     5e4:	str	sl, [sp, #52]	; 0x34
     5e8:	str	fp, [sp, #56]	; 0x38
     5ec:	mov	r7, r3
     5f0:	mov	r6, r2
     5f4:	mov	r5, r1
     5f8:	mov	fp, r0
     5fc:	mov	r9, #2
     600:	mov	r4, #9
     604:	movw	r8, #1752	; 0x6d8
     608:	add	r3, sp, #68	; 0x44
     60c:	mov	r2, r6
     610:	mov	r1, r5
     614:	mov	r0, fp
     618:	bl	380 <dmy_to_mjd2000_julian>
     61c:	cmp	r0, #0
     620:	bne	9e8 <dmy_to_mjd2000+0x42c>
     624:	add	r3, sp, #64	; 0x40
     628:	mov	r2, r8
     62c:	mov	r1, r4
     630:	mov	r0, r9
     634:	bl	380 <dmy_to_mjd2000_julian>
     638:	cmp	r0, #0
     63c:	bne	9e8 <dmy_to_mjd2000+0x42c>
     640:	ldr	r3, [sp, #68]	; 0x44
     644:	ldr	ip, [sp, #64]	; 0x40
     648:	cmp	r3, ip
     64c:	ble	9d0 <dmy_to_mjd2000+0x414>
     650:	mov	r0, #0
     654:	str	r0, [sp, #72]	; 0x48
     658:	mov	r2, #31
     65c:	str	r2, [sp, #76]	; 0x4c
     660:	mov	r1, #59	; 0x3b
     664:	str	r1, [sp, #80]	; 0x50
     668:	mov	r3, #90	; 0x5a
     66c:	str	r3, [sp, #84]	; 0x54
     670:	mov	r2, #120	; 0x78
     674:	str	r2, [sp, #88]	; 0x58
     678:	mov	r0, #151	; 0x97
     67c:	str	r0, [sp, #92]	; 0x5c
     680:	mov	r3, #181	; 0xb5
     684:	str	r3, [sp, #96]	; 0x60
     688:	mov	r2, #212	; 0xd4
     68c:	str	r2, [sp, #100]	; 0x64
     690:	mov	r1, #243	; 0xf3
     694:	str	r1, [sp, #104]	; 0x68
     698:	movw	ip, #273	; 0x111
     69c:	str	ip, [sp, #108]	; 0x6c
     6a0:	mov	r1, #304	; 0x130
     6a4:	str	r1, [sp, #112]	; 0x70
     6a8:	movw	ip, #334	; 0x14e
     6ac:	str	ip, [sp, #116]	; 0x74
     6b0:	movw	r2, #365	; 0x16d
     6b4:	str	r2, [sp, #120]	; 0x78
     6b8:	mov	r3, #1
     6bc:	cmp	r5, #1
     6c0:	movlt	r0, #1
     6c4:	movge	r0, #0
     6c8:	cmp	r6, #0
     6cc:	moveq	r0, r3
     6d0:	movne	r0, r0
     6d4:	mov	r3, #1
     6d8:	cmp	r5, #12
     6dc:	movgt	ip, #1
     6e0:	movle	ip, #0
     6e4:	cmp	r0, #0
     6e8:	movne	r1, r3
     6ec:	moveq	r1, ip
     6f0:	mov	r2, #1
     6f4:	cmp	fp, #1
     6f8:	movlt	r0, #1
     6fc:	movge	r0, #0
     700:	cmp	r1, #0
     704:	movne	r1, r2
     708:	moveq	r1, r0
     70c:	cmp	r1, #0
     710:	bne	954 <dmy_to_mjd2000+0x398>
     714:	cmp	r5, #2
     718:	bne	7c4 <dmy_to_mjd2000+0x208>
     71c:	mov	r0, r6
     720:	bl	2a4 <y>
     724:	mov	r4, r0
     728:	mov	r0, r6
     72c:	bl	2a4 <y>
     730:	mov	r8, r0
     734:	mov	r0, r6
     738:	bl	2a4 <y>
     73c:	asr	lr, r4, #31
     740:	add	lr, r4, lr, lsr #30
     744:	asr	r3, lr, #2
     748:	lsl	r2, r3, #2
     74c:	sub	r1, r4, r2
     750:	cmp	r1, #0
     754:	moveq	r2, #1
     758:	movne	r2, #0
     75c:	mov	r3, r8
     760:	mov	r4, #100	; 0x64
     764:	lsr	r1, r3, #31
     768:	movw	ip, #34079	; 0x851f
     76c:	movt	ip, #20971	; 0x51eb
     770:	smull	lr, ip, r3, ip
     774:	add	ip, r1, ip, asr #5
     778:	mul	ip, ip, r4
     77c:	sub	r1, r3, ip
     780:	cmp	r1, #0
     784:	moveq	ip, #1
     788:	movne	ip, #0
     78c:	eor	r3, r2, ip
     790:	mov	r2, #400	; 0x190
     794:	lsr	r4, r0, #31
     798:	movw	r1, #34079	; 0x851f
     79c:	movt	r1, #20971	; 0x51eb
     7a0:	smull	lr, ip, r0, r1
     7a4:	add	r1, r4, ip, asr #7
     7a8:	mul	r1, r1, r2
     7ac:	sub	ip, r0, r1
     7b0:	cmp	ip, #0
     7b4:	moveq	r2, #1
     7b8:	movne	r2, #0
     7bc:	eor	r0, r3, r2
     7c0:	b	7c8 <dmy_to_mjd2000+0x20c>
     7c4:	mov	r0, #0
     7c8:	add	r1, sp, #72	; 0x48
     7cc:	ldr	r4, [r1, r5, lsl #2]
     7d0:	add	r1, sp, #72	; 0x48
     7d4:	lsl	ip, r5, #2
     7d8:	add	r3, r1, ip
     7dc:	sub	lr, r3, #4096	; 0x1000
     7e0:	ldr	r2, [lr, #4092]	; 0xffc
     7e4:	sub	r1, r4, r2
     7e8:	add	ip, r1, r0
     7ec:	cmp	fp, ip
     7f0:	bgt	954 <dmy_to_mjd2000+0x398>
     7f4:	mov	r0, r6
     7f8:	bl	2a4 <y>
     7fc:	str	r0, [sp, #24]
     800:	mov	r0, r6
     804:	bl	2a4 <y>
     808:	mov	r1, #4
     80c:	bl	2d0 <int_div>
     810:	mov	sl, r0
     814:	mov	r0, r6
     818:	bl	2a4 <y>
     81c:	mov	r1, #100	; 0x64
     820:	bl	2d0 <int_div>
     824:	mov	r4, r0
     828:	mov	r0, r6
     82c:	bl	2a4 <y>
     830:	mov	r1, #400	; 0x190
     834:	bl	2d0 <int_div>
     838:	mov	r8, r0
     83c:	cmp	r5, #2
     840:	bgt	900 <dmy_to_mjd2000+0x344>
     844:	mov	r0, r6
     848:	bl	2a4 <y>
     84c:	mov	r9, r0
     850:	mov	r0, r6
     854:	bl	2a4 <y>
     858:	str	r0, [sp, #20]
     85c:	mov	r0, r6
     860:	bl	2a4 <y>
     864:	str	r0, [sp, #16]
     868:	asr	lr, r9, #31
     86c:	add	lr, r9, lr, lsr #30
     870:	asr	r1, lr, #2
     874:	lsl	r3, r1, #2
     878:	sub	r1, r9, r3
     87c:	cmp	r1, #0
     880:	moveq	r3, #1
     884:	movne	r3, #0
     888:	ldr	r2, [sp, #20]
     88c:	mov	ip, #100	; 0x64
     890:	lsr	r1, r2, #31
     894:	movw	r0, #34079	; 0x851f
     898:	movt	r0, #20971	; 0x51eb
     89c:	smull	lr, r0, r2, r0
     8a0:	add	r0, r1, r0, asr #5
     8a4:	mul	r0, r0, ip
     8a8:	sub	ip, r2, r0
     8ac:	cmp	ip, #0
     8b0:	moveq	r0, #1
     8b4:	movne	r0, #0
     8b8:	sub	r0, r3, r0
     8bc:	ldr	r1, [sp, #16]
     8c0:	mov	r2, #400	; 0x190
     8c4:	lsr	ip, r1, #31
     8c8:	movw	r3, #34079	; 0x851f
     8cc:	movt	r3, #20971	; 0x51eb
     8d0:	smull	lr, r3, r1, r3
     8d4:	add	ip, ip, r3, asr #7
     8d8:	mul	r2, ip, r2
     8dc:	sub	ip, r1, r2
     8e0:	cmp	ip, #0
     8e4:	moveq	r1, #1
     8e8:	movne	r1, #0
     8ec:	add	r3, r0, r1
     8f0:	cmp	r3, #0
     8f4:	movne	r3, #1
     8f8:	moveq	r3, #0
     8fc:	b	904 <dmy_to_mjd2000+0x348>
     900:	mov	r3, #0
     904:	movw	r1, #365	; 0x16d
     908:	add	r0, sp, #72	; 0x48
     90c:	lsl	r2, r5, #2
     910:	add	ip, r0, r2
     914:	sub	lr, ip, #4096	; 0x1000
     918:	ldr	ip, [lr, #4092]	; 0xffc
     91c:	add	ip, fp, ip
     920:	ldr	r2, [sp, #24]
     924:	mla	ip, r1, r2, ip
     928:	add	ip, ip, sl
     92c:	sub	ip, ip, r4
     930:	add	r0, ip, r8
     934:	rsb	r2, r3, #0
     938:	add	r3, r0, r2
     93c:	sub	r1, r3, #223	; 0xdf
     940:	sub	r1, r1, #55040	; 0xd700
     944:	sub	r1, r1, #524288	; 0x80000
     948:	str	r1, [sp, #68]	; 0x44
     94c:	mov	r1, #0
     950:	b	970 <dmy_to_mjd2000+0x3b4>
     954:	mvn	r0, #103	; 0x67
     958:	ldr	r1, [pc, #184]	; a18 <dmy_to_mjd2000+0x45c>
     95c:	str	r6, [sp]
     960:	mov	r3, r5
     964:	mov	r2, fp
     968:	bl	0 <coda_set_error>
     96c:	mvn	r1, #0
     970:	cmp	r1, #0
     974:	beq	980 <dmy_to_mjd2000+0x3c4>
     978:	mvn	r0, #0
     97c:	b	9ec <dmy_to_mjd2000+0x430>
     980:	ldr	r2, [sp, #68]	; 0x44
     984:	sub	r2, r2, #150	; 0x96
     988:	sub	r2, r2, #19712	; 0x4d00
     98c:	sub	r2, r2, #131072	; 0x20000
     990:	ldr	r1, [sp, #64]	; 0x40
     994:	sub	r3, r1, #89	; 0x59
     998:	sub	r3, r3, #92160	; 0x16800
     99c:	sub	r3, r3, #2359296	; 0x240000
     9a0:	cmp	r2, r3
     9a4:	bgt	9c8 <dmy_to_mjd2000+0x40c>
     9a8:	mvn	r0, #103	; 0x67
     9ac:	ldr	r1, [pc, #100]	; a18 <dmy_to_mjd2000+0x45c>
     9b0:	str	r6, [sp]
     9b4:	mov	r3, r5
     9b8:	mov	r2, fp
     9bc:	bl	0 <coda_set_error>
     9c0:	mvn	r0, #0
     9c4:	b	9ec <dmy_to_mjd2000+0x430>
     9c8:	str	r2, [r7]
     9cc:	b	9e0 <dmy_to_mjd2000+0x424>
     9d0:	sub	r2, r3, #89	; 0x59
     9d4:	sub	r2, r2, #92160	; 0x16800
     9d8:	sub	r2, r2, #2359296	; 0x240000
     9dc:	str	r2, [r7]
     9e0:	mov	r0, #0
     9e4:	b	9ec <dmy_to_mjd2000+0x430>
     9e8:	mvn	r0, #0
     9ec:	ldr	r4, [sp, #28]
     9f0:	ldr	r5, [sp, #32]
     9f4:	ldr	r6, [sp, #36]	; 0x24
     9f8:	ldr	r7, [sp, #40]	; 0x28
     9fc:	ldr	r8, [sp, #44]	; 0x2c
     a00:	ldr	r9, [sp, #48]	; 0x30
     a04:	ldr	sl, [sp, #52]	; 0x34
     a08:	ldr	fp, [sp, #56]	; 0x38
     a0c:	ldr	lr, [sp, #8]
     a10:	add	sp, sp, #128	; 0x80
     a14:	bx	lr
     a18:	.word	0x00000427

00000a1c <getday_leapyear>:
     a1c:	mov	ip, sp
     a20:	sub	sp, sp, #80	; 0x50
     a24:	str	ip, [sp]
     a28:	str	lr, [sp, #4]
     a2c:	str	r4, [sp, #8]
     a30:	str	r5, [sp, #12]
     a34:	str	r6, [sp, #16]
     a38:	mov	r4, r2
     a3c:	mov	r5, r1
     a40:	mov	r6, r0
     a44:	mov	r1, #0
     a48:	str	r1, [sp, #24]
     a4c:	mov	r1, #31
     a50:	str	r1, [sp, #28]
     a54:	mov	r0, #60	; 0x3c
     a58:	str	r0, [sp, #32]
     a5c:	mov	ip, #91	; 0x5b
     a60:	str	ip, [sp, #36]	; 0x24
     a64:	mov	r3, #121	; 0x79
     a68:	str	r3, [sp, #40]	; 0x28
     a6c:	mov	r2, #152	; 0x98
     a70:	str	r2, [sp, #44]	; 0x2c
     a74:	mov	r3, #182	; 0xb6
     a78:	str	r3, [sp, #48]	; 0x30
     a7c:	mov	r3, #213	; 0xd5
     a80:	str	r3, [sp, #52]	; 0x34
     a84:	mov	r2, #244	; 0xf4
     a88:	str	r2, [sp, #56]	; 0x38
     a8c:	movw	r2, #274	; 0x112
     a90:	str	r2, [sp, #60]	; 0x3c
     a94:	movw	ip, #305	; 0x131
     a98:	str	ip, [sp, #64]	; 0x40
     a9c:	movw	r2, #335	; 0x14f
     aa0:	str	r2, [sp, #68]	; 0x44
     aa4:	movw	r2, #366	; 0x16e
     aa8:	str	r2, [sp, #72]	; 0x48
     aac:	cmp	r6, #0
     ab0:	bge	ac8 <getday_leapyear+0xac>
     ab4:	ldr	r0, [pc, #148]	; b50 <getday_leapyear+0x134>
     ab8:	ldr	r1, [pc, #140]	; b4c <getday_leapyear+0x130>
     abc:	movw	r2, #358	; 0x166
     ac0:	ldr	r3, [pc, #128]	; b48 <getday_leapyear+0x12c>
     ac4:	bl	0 <__assert_fail>
     ac8:	movw	lr, #366	; 0x16e
     acc:	cmp	r6, lr
     ad0:	blt	ae8 <getday_leapyear+0xcc>
     ad4:	ldr	r0, [pc, #104]	; b44 <getday_leapyear+0x128>
     ad8:	ldr	r1, [pc, #108]	; b4c <getday_leapyear+0x130>
     adc:	movw	r2, #359	; 0x167
     ae0:	ldr	r3, [pc, #96]	; b48 <getday_leapyear+0x12c>
     ae4:	bl	0 <__assert_fail>
     ae8:	mov	r3, #1
     aec:	add	ip, sp, #24
     af0:	ldr	r0, [ip, r3, lsl #2]
     af4:	cmp	r6, r0
     af8:	blt	b08 <getday_leapyear+0xec>
     afc:	add	r3, r3, #1
     b00:	cmp	r3, #12
     b04:	ble	aec <getday_leapyear+0xd0>
     b08:	str	r3, [r4]
     b0c:	add	ip, sp, #24
     b10:	lsl	r1, r3, #2
     b14:	add	r0, ip, r1
     b18:	sub	lr, r0, #4096	; 0x1000
     b1c:	ldr	ip, [lr, #4092]	; 0xffc
     b20:	sub	r1, r6, ip
     b24:	add	ip, r1, #1
     b28:	str	ip, [r5]
     b2c:	ldr	r4, [sp, #8]
     b30:	ldr	r5, [sp, #12]
     b34:	ldr	r6, [sp, #16]
     b38:	ldr	lr, [sp, #4]
     b3c:	add	sp, sp, #80	; 0x50
     b40:	bx	lr
     b44:	.word	0x00000363
     b48:	.word	0x000008bb
     b4c:	.word	0x000006c6
     b50:	.word	0x000002b7

00000b54 <getday_nonleapyear>:
     b54:	mov	ip, sp
     b58:	sub	sp, sp, #80	; 0x50
     b5c:	str	ip, [sp]
     b60:	str	lr, [sp, #4]
     b64:	str	r4, [sp, #8]
     b68:	str	r5, [sp, #12]
     b6c:	str	r6, [sp, #16]
     b70:	mov	r4, r2
     b74:	mov	r5, r1
     b78:	mov	r6, r0
     b7c:	mov	r1, #0
     b80:	str	r1, [sp, #24]
     b84:	mov	r1, #31
     b88:	str	r1, [sp, #28]
     b8c:	mov	r0, #59	; 0x3b
     b90:	str	r0, [sp, #32]
     b94:	mov	ip, #90	; 0x5a
     b98:	str	ip, [sp, #36]	; 0x24
     b9c:	mov	r3, #120	; 0x78
     ba0:	str	r3, [sp, #40]	; 0x28
     ba4:	mov	r2, #151	; 0x97
     ba8:	str	r2, [sp, #44]	; 0x2c
     bac:	mov	r3, #181	; 0xb5
     bb0:	str	r3, [sp, #48]	; 0x30
     bb4:	mov	r3, #212	; 0xd4
     bb8:	str	r3, [sp, #52]	; 0x34
     bbc:	mov	r2, #243	; 0xf3
     bc0:	str	r2, [sp, #56]	; 0x38
     bc4:	movw	r2, #273	; 0x111
     bc8:	str	r2, [sp, #60]	; 0x3c
     bcc:	mov	ip, #304	; 0x130
     bd0:	str	ip, [sp, #64]	; 0x40
     bd4:	movw	r2, #334	; 0x14e
     bd8:	str	r2, [sp, #68]	; 0x44
     bdc:	movw	r2, #365	; 0x16d
     be0:	str	r2, [sp, #72]	; 0x48
     be4:	cmp	r6, #0
     be8:	bge	c00 <getday_nonleapyear+0xac>
     bec:	ldr	r0, [pc, #144]	; c84 <getday_nonleapyear+0x130>
     bf0:	ldr	r1, [pc, #136]	; c80 <getday_nonleapyear+0x12c>
     bf4:	movw	r2, #377	; 0x179
     bf8:	ldr	r3, [pc, #136]	; c88 <getday_nonleapyear+0x134>
     bfc:	bl	0 <__assert_fail>
     c00:	movw	lr, #365	; 0x16d
     c04:	cmp	r6, lr
     c08:	blt	c20 <getday_nonleapyear+0xcc>
     c0c:	ldr	r0, [pc, #104]	; c7c <getday_nonleapyear+0x128>
     c10:	ldr	r1, [pc, #104]	; c80 <getday_nonleapyear+0x12c>
     c14:	movw	r2, #378	; 0x17a
     c18:	ldr	r3, [pc, #104]	; c88 <getday_nonleapyear+0x134>
     c1c:	bl	0 <__assert_fail>
     c20:	mov	r3, #1
     c24:	add	ip, sp, #24
     c28:	ldr	r0, [ip, r3, lsl #2]
     c2c:	cmp	r6, r0
     c30:	blt	c40 <getday_nonleapyear+0xec>
     c34:	add	r3, r3, #1
     c38:	cmp	r3, #12
     c3c:	ble	c24 <getday_nonleapyear+0xd0>
     c40:	str	r3, [r4]
     c44:	add	ip, sp, #24
     c48:	lsl	r1, r3, #2
     c4c:	add	r0, ip, r1
     c50:	sub	lr, r0, #4096	; 0x1000
     c54:	ldr	ip, [lr, #4092]	; 0xffc
     c58:	sub	r1, r6, ip
     c5c:	add	ip, r1, #1
     c60:	str	ip, [r5]
     c64:	ldr	r4, [sp, #8]
     c68:	ldr	r5, [sp, #12]
     c6c:	ldr	r6, [sp, #16]
     c70:	ldr	lr, [sp, #4]
     c74:	add	sp, sp, #80	; 0x50
     c78:	bx	lr
     c7c:	.word	0x0000036f
     c80:	.word	0x000006c6
     c84:	.word	0x000002b7
     c88:	.word	0x000008cb

00000c8c <mjd2000_to_dmy>:
     c8c:	mov	ip, sp
     c90:	sub	sp, sp, #32
     c94:	str	ip, [sp]
     c98:	str	lr, [sp, #4]
     c9c:	str	r4, [sp, #8]
     ca0:	str	r5, [sp, #12]
     ca4:	str	r6, [sp, #16]
     ca8:	str	r7, [sp, #20]
     cac:	mov	r6, r3
     cb0:	mov	r7, r2
     cb4:	mov	r5, r1
     cb8:	mov	r4, r0
     cbc:	mov	r0, #2
     cc0:	mov	r1, #9
     cc4:	movw	r2, #1752	; 0x6d8
     cc8:	add	r3, sp, #24
     ccc:	bl	5bc <dmy_to_mjd2000>
     cd0:	cmp	r0, #0
     cd4:	beq	ce0 <mjd2000_to_dmy+0x54>
     cd8:	mvn	r0, #0
     cdc:	b	f94 <mjd2000_to_dmy+0x308>
     ce0:	ldr	r2, [sp, #24]
     ce4:	cmp	r4, r2
     ce8:	ble	eec <mjd2000_to_dmy+0x260>
     cec:	mov	r1, #2000	; 0x7d0
     cf0:	str	r1, [r6]
     cf4:	movw	r1, #15025	; 0x3ab1
     cf8:	movt	r1, #2
     cfc:	mov	r0, r4
     d00:	bl	2d0 <int_div>
     d04:	mov	r3, #400	; 0x190
     d08:	ldr	r2, [r6]
     d0c:	mla	ip, r3, r0, r2
     d10:	str	ip, [r6]
     d14:	movw	r1, #15025	; 0x3ab1
     d18:	movt	r1, #2
     d1c:	mov	r0, r4
     d20:	bl	328 <int_mod>
     d24:	mov	r4, r0
     d28:	movw	lr, #36525	; 0x8ead
     d2c:	cmp	r4, lr
     d30:	blt	e50 <mjd2000_to_dmy+0x1c4>
     d34:	sub	r4, r4, #173	; 0xad
     d38:	sub	r4, r4, #36352	; 0x8e00
     d3c:	ldr	ip, [r6]
     d40:	add	r0, ip, #100	; 0x64
     d44:	str	r0, [r6]
     d48:	movw	r1, #36524	; 0x8eac
     d4c:	mov	r0, r4
     d50:	bl	2d0 <int_div>
     d54:	mov	r2, #100	; 0x64
     d58:	ldr	r1, [r6]
     d5c:	mla	r3, r2, r0, r1
     d60:	str	r3, [r6]
     d64:	movw	r1, #36524	; 0x8eac
     d68:	mov	r0, r4
     d6c:	bl	328 <int_mod>
     d70:	mov	r4, r0
     d74:	movw	lr, #1460	; 0x5b4
     d78:	cmp	r4, lr
     d7c:	blt	e1c <mjd2000_to_dmy+0x190>
     d80:	sub	r4, r4, #436	; 0x1b4
     d84:	sub	r4, r4, #1024	; 0x400
     d88:	ldr	r3, [r6]
     d8c:	add	ip, r3, #4
     d90:	str	ip, [r6]
     d94:	movw	r1, #1461	; 0x5b5
     d98:	mov	r0, r4
     d9c:	bl	2d0 <int_div>
     da0:	ldr	r1, [r6]
     da4:	add	ip, r1, r0, lsl #2
     da8:	str	ip, [r6]
     dac:	movw	r1, #1461	; 0x5b5
     db0:	mov	r0, r4
     db4:	bl	328 <int_mod>
     db8:	movw	lr, #366	; 0x16e
     dbc:	cmp	r0, lr
     dc0:	blt	e0c <mjd2000_to_dmy+0x180>
     dc4:	ldr	r1, [r6]
     dc8:	add	r1, r1, #1
     dcc:	str	r1, [r6]
     dd0:	sub	r4, r0, #110	; 0x6e
     dd4:	sub	r4, r4, #256	; 0x100
     dd8:	movw	r1, #365	; 0x16d
     ddc:	mov	r0, r4
     de0:	bl	2d0 <int_div>
     de4:	ldr	r1, [r6]
     de8:	add	ip, r1, r0
     dec:	str	ip, [r6]
     df0:	movw	r1, #365	; 0x16d
     df4:	mov	r0, r4
     df8:	bl	328 <int_mod>
     dfc:	mov	r2, r7
     e00:	mov	r1, r5
     e04:	bl	b54 <getday_nonleapyear>
     e08:	b	ed4 <mjd2000_to_dmy+0x248>
     e0c:	mov	r2, r7
     e10:	mov	r1, r5
     e14:	bl	a1c <getday_leapyear>
     e18:	b	ed4 <mjd2000_to_dmy+0x248>
     e1c:	movw	r1, #365	; 0x16d
     e20:	mov	r0, r4
     e24:	bl	2d0 <int_div>
     e28:	ldr	r1, [r6]
     e2c:	add	r2, r1, r0
     e30:	str	r2, [r6]
     e34:	movw	r1, #365	; 0x16d
     e38:	mov	r0, r4
     e3c:	bl	328 <int_mod>
     e40:	mov	r2, r7
     e44:	mov	r1, r5
     e48:	bl	b54 <getday_nonleapyear>
     e4c:	b	ed4 <mjd2000_to_dmy+0x248>
     e50:	movw	r1, #1461	; 0x5b5
     e54:	mov	r0, r4
     e58:	bl	2d0 <int_div>
     e5c:	ldr	r3, [r6]
     e60:	add	r3, r3, r0, lsl #2
     e64:	str	r3, [r6]
     e68:	movw	r1, #1461	; 0x5b5
     e6c:	mov	r0, r4
     e70:	bl	328 <int_mod>
     e74:	movw	lr, #366	; 0x16e
     e78:	cmp	r0, lr
     e7c:	blt	ec8 <mjd2000_to_dmy+0x23c>
     e80:	ldr	ip, [r6]
     e84:	add	r3, ip, #1
     e88:	str	r3, [r6]
     e8c:	sub	r4, r0, #110	; 0x6e
     e90:	sub	r4, r4, #256	; 0x100
     e94:	movw	r1, #365	; 0x16d
     e98:	mov	r0, r4
     e9c:	bl	2d0 <int_div>
     ea0:	ldr	r1, [r6]
     ea4:	add	r1, r1, r0
     ea8:	str	r1, [r6]
     eac:	movw	r1, #365	; 0x16d
     eb0:	mov	r0, r4
     eb4:	bl	328 <int_mod>
     eb8:	mov	r2, r7
     ebc:	mov	r1, r5
     ec0:	bl	b54 <getday_nonleapyear>
     ec4:	b	ed4 <mjd2000_to_dmy+0x248>
     ec8:	mov	r2, r7
     ecc:	mov	r1, r5
     ed0:	bl	a1c <getday_leapyear>
     ed4:	ldr	r1, [r6]
     ed8:	cmp	r1, #0
     edc:	bgt	f90 <mjd2000_to_dmy+0x304>
     ee0:	sub	r1, r1, #1
     ee4:	str	r1, [r6]
     ee8:	b	f90 <mjd2000_to_dmy+0x304>
     eec:	mov	r1, #2000	; 0x7d0
     ef0:	str	r1, [r6]
     ef4:	sub	r4, r4, #13
     ef8:	movw	r1, #1461	; 0x5b5
     efc:	mov	r0, r4
     f00:	bl	2d0 <int_div>
     f04:	ldr	ip, [r6]
     f08:	add	r2, ip, r0, lsl #2
     f0c:	str	r2, [r6]
     f10:	movw	r1, #1461	; 0x5b5
     f14:	mov	r0, r4
     f18:	bl	328 <int_mod>
     f1c:	movw	lr, #366	; 0x16e
     f20:	cmp	r0, lr
     f24:	blt	f70 <mjd2000_to_dmy+0x2e4>
     f28:	ldr	r1, [r6]
     f2c:	add	r3, r1, #1
     f30:	str	r3, [r6]
     f34:	sub	r4, r0, #110	; 0x6e
     f38:	sub	r4, r4, #256	; 0x100
     f3c:	movw	r1, #365	; 0x16d
     f40:	mov	r0, r4
     f44:	bl	2d0 <int_div>
     f48:	ldr	r1, [r6]
     f4c:	add	r2, r1, r0
     f50:	str	r2, [r6]
     f54:	movw	r1, #365	; 0x16d
     f58:	mov	r0, r4
     f5c:	bl	328 <int_mod>
     f60:	mov	r2, r7
     f64:	mov	r1, r5
     f68:	bl	b54 <getday_nonleapyear>
     f6c:	b	f7c <mjd2000_to_dmy+0x2f0>
     f70:	mov	r2, r7
     f74:	mov	r1, r5
     f78:	bl	a1c <getday_leapyear>
     f7c:	ldr	r0, [r6]
     f80:	cmp	r0, #0
     f84:	bgt	f90 <mjd2000_to_dmy+0x304>
     f88:	sub	r3, r0, #1
     f8c:	str	r3, [r6]
     f90:	mov	r0, #0
     f94:	ldr	r4, [sp, #8]
     f98:	ldr	r5, [sp, #12]
     f9c:	ldr	r6, [sp, #16]
     fa0:	ldr	r7, [sp, #20]
     fa4:	ldr	lr, [sp, #4]
     fa8:	add	sp, sp, #32
     fac:	bx	lr

00000fb0 <hms_to_daytime>:
     fb0:	mov	ip, sp
     fb4:	sub	sp, sp, #32
     fb8:	str	ip, [sp, #8]
     fbc:	str	lr, [sp, #12]
     fc0:	str	r4, [sp, #16]
     fc4:	str	r5, [sp, #20]
     fc8:	str	r6, [sp, #24]
     fcc:	ldr	r5, [ip]
     fd0:	mov	r4, #1
     fd4:	cmp	r0, #23
     fd8:	movgt	ip, #1
     fdc:	movle	ip, #0
     fe0:	cmp	r0, #0
     fe4:	movlt	r4, r4
     fe8:	movge	r4, ip
     fec:	mov	r6, #1
     ff0:	cmp	r1, #0
     ff4:	movlt	ip, #1
     ff8:	movge	ip, #0
     ffc:	cmp	r4, #0
    1000:	movne	r4, r6
    1004:	moveq	r4, ip
    1008:	mov	r6, #1
    100c:	cmp	r1, #59	; 0x3b
    1010:	movgt	ip, #1
    1014:	movle	ip, #0
    1018:	cmp	r4, #0
    101c:	movne	r6, r6
    1020:	moveq	r6, ip
    1024:	mov	r4, #1
    1028:	cmp	r2, #0
    102c:	movlt	ip, #1
    1030:	movge	ip, #0
    1034:	cmp	r6, #0
    1038:	movne	r4, r4
    103c:	moveq	r4, ip
    1040:	mov	ip, #1
    1044:	cmp	r2, #60	; 0x3c
    1048:	movgt	r6, #1
    104c:	movle	r6, #0
    1050:	cmp	r4, #0
    1054:	movne	ip, ip
    1058:	moveq	ip, r6
    105c:	mov	r6, #1
    1060:	cmp	r3, #0
    1064:	movlt	r4, #1
    1068:	movge	r4, #0
    106c:	cmp	ip, #0
    1070:	movne	r4, r6
    1074:	moveq	r4, r4
    1078:	mov	ip, #1
    107c:	movw	lr, #16959	; 0x423f
    1080:	movt	lr, #15
    1084:	cmp	r3, lr
    1088:	movgt	r6, #1
    108c:	movle	r6, #0
    1090:	cmp	r4, #0
    1094:	movne	ip, ip
    1098:	moveq	ip, r6
    109c:	cmp	ip, #0
    10a0:	beq	10d0 <hms_to_daytime+0x120>
    10a4:	mvn	r4, #103	; 0x67
    10a8:	ldr	ip, [pc, #140]	; 113c <hms_to_daytime+0x18c>
    10ac:	str	r3, [sp, #4]
    10b0:	str	r2, [sp]
    10b4:	mov	r3, r1
    10b8:	mov	r2, r0
    10bc:	mov	r1, ip
    10c0:	mov	r0, r4
    10c4:	bl	0 <coda_set_error>
    10c8:	mvn	r0, #0
    10cc:	b	1124 <hms_to_daytime+0x174>
    10d0:	vldr	d6, [pc, #120]	; 1150 <hms_to_daytime+0x1a0>
    10d4:	vmov	s10, r0
    10d8:	vcvt.f64.s32	d5, s10
    10dc:	vmul.f64	d7, d6, d5
    10e0:	vldr	d4, [pc, #88]	; 1140 <hms_to_daytime+0x190>
    10e4:	vmov	s10, r1
    10e8:	vcvt.f64.s32	d5, s10
    10ec:	vmul.f64	d3, d4, d5
    10f0:	vadd.f64	d3, d7, d3
    10f4:	vmov.f64	d2, #112	; 0x3f800000  1.0
    10f8:	vmov	s0, r2
    10fc:	vcvt.f64.s32	d0, s0
    1100:	vmul.f64	d2, d2, d0
    1104:	vadd.f64	d6, d3, d2
    1108:	vmov	s8, r3
    110c:	vcvt.f64.s32	d4, s8
    1110:	vldr	d1, [pc, #48]	; 1148 <hms_to_daytime+0x198>
    1114:	vdiv.f64	d1, d4, d1
    1118:	vadd.f64	d7, d6, d1
    111c:	vstr	d7, [r5]
    1120:	mov	r0, #0
    1124:	ldr	r4, [sp, #16]
    1128:	ldr	r5, [sp, #20]
    112c:	ldr	r6, [sp, #24]
    1130:	ldr	lr, [sp, #12]
    1134:	add	sp, sp, #32
    1138:	bx	lr
    113c:	.word	0x00000784
    1140:	.word	0x00000000
    1144:	.word	0x404e0000
    1148:	.word	0x00000000
    114c:	.word	0x412e8480
    1150:	.word	0x00000000
    1154:	.word	0x40ac2000

00001158 <coda_dayofyear_to_month_day>:
    1158:	mov	ip, sp
    115c:	sub	sp, sp, #32
    1160:	str	ip, [sp]
    1164:	str	lr, [sp, #4]
    1168:	str	r4, [sp, #8]
    116c:	str	r5, [sp, #12]
    1170:	str	r6, [sp, #16]
    1174:	mov	r5, r3
    1178:	mov	r6, r2
    117c:	mov	r4, r1
    1180:	mov	r2, r0
    1184:	str	r2, [sp, #24]
    1188:	mov	ip, #1
    118c:	cmp	r5, #0
    1190:	moveq	r3, #1
    1194:	movne	r3, #0
    1198:	cmp	r6, #0
    119c:	moveq	r3, ip
    11a0:	movne	r3, r3
    11a4:	cmp	r3, #0
    11a8:	beq	11c8 <coda_dayofyear_to_month_day+0x70>
    11ac:	mvn	r0, #99	; 0x63
    11b0:	ldr	r1, [pc, #192]	; 1278 <coda_dayofyear_to_month_day+0x120>
    11b4:	ldr	r2, [pc, #184]	; 1274 <coda_dayofyear_to_month_day+0x11c>
    11b8:	movw	r3, #549	; 0x225
    11bc:	bl	0 <coda_set_error>
    11c0:	mvn	r0, #0
    11c4:	b	125c <coda_dayofyear_to_month_day+0x104>
    11c8:	mov	ip, #1
    11cc:	movw	lr, #366	; 0x16e
    11d0:	cmp	r4, lr
    11d4:	movgt	r3, #1
    11d8:	movle	r3, #0
    11dc:	cmp	r4, #0
    11e0:	movlt	r3, ip
    11e4:	movge	r3, r3
    11e8:	cmp	r3, #0
    11ec:	beq	1208 <coda_dayofyear_to_month_day+0xb0>
    11f0:	mvn	r0, #103	; 0x67
    11f4:	ldr	r1, [pc, #128]	; 127c <coda_dayofyear_to_month_day+0x124>
    11f8:	mov	r2, r4
    11fc:	bl	0 <coda_set_error>
    1200:	mvn	r0, #0
    1204:	b	125c <coda_dayofyear_to_month_day+0x104>
    1208:	mov	r0, #1
    120c:	mov	r1, #1
    1210:	add	r3, sp, #28
    1214:	bl	5bc <dmy_to_mjd2000>
    1218:	cmp	r0, #0
    121c:	beq	1228 <coda_dayofyear_to_month_day+0xd0>
    1220:	mvn	r0, #0
    1224:	b	125c <coda_dayofyear_to_month_day+0x104>
    1228:	ldr	r1, [sp, #28]
    122c:	add	r0, r1, r4
    1230:	sub	r0, r0, #1
    1234:	str	r0, [sp, #28]
    1238:	add	r3, sp, #24
    123c:	mov	r2, r6
    1240:	mov	r1, r5
    1244:	bl	c8c <mjd2000_to_dmy>
    1248:	cmp	r0, #0
    124c:	beq	1258 <coda_dayofyear_to_month_day+0x100>
    1250:	mvn	r0, #0
    1254:	b	125c <coda_dayofyear_to_month_day+0x104>
    1258:	mov	r0, #0
    125c:	ldr	r4, [sp, #8]
    1260:	ldr	r5, [sp, #12]
    1264:	ldr	r6, [sp, #16]
    1268:	ldr	lr, [sp, #4]
    126c:	add	sp, sp, #32
    1270:	bx	lr
    1274:	.word	0x000006c6
    1278:	.word	0x000005b6
    127c:	.word	0x000007ff

00001280 <seconds_to_hms>:
    1280:	mov	ip, sp
    1284:	sub	sp, sp, #16
    1288:	str	ip, [sp]
    128c:	str	lr, [sp, #4]
    1290:	str	r4, [sp, #8]
    1294:	mov	ip, r0
    1298:	mov	r0, #1
    129c:	movw	lr, #20863	; 0x517f
    12a0:	movt	lr, #1
    12a4:	cmp	ip, lr
    12a8:	movgt	r4, #1
    12ac:	movle	r4, #0
    12b0:	cmp	ip, #0
    12b4:	movlt	r0, r0
    12b8:	movge	r0, r4
    12bc:	cmp	r0, #0
    12c0:	beq	12dc <seconds_to_hms+0x5c>
    12c4:	mvn	r0, #103	; 0x67
    12c8:	ldr	r1, [pc, #116]	; 1344 <seconds_to_hms+0xc4>
    12cc:	mov	r2, ip
    12d0:	bl	0 <coda_set_error>
    12d4:	mvn	r0, #0
    12d8:	b	1334 <seconds_to_hms+0xb4>
    12dc:	lsr	r4, ip, #31
    12e0:	movw	r0, #46021	; 0xb3c5
    12e4:	movt	r0, #37282	; 0x91a2
    12e8:	smull	lr, r0, ip, r0
    12ec:	add	r0, r0, ip
    12f0:	add	r0, r4, r0, asr #11
    12f4:	str	r0, [r1]
    12f8:	mov	r1, #3600	; 0xe10
    12fc:	mul	r0, r0, r1
    1300:	sub	r0, ip, r0
    1304:	lsr	r1, r0, #31
    1308:	movw	ip, #34953	; 0x8889
    130c:	movt	ip, #34952	; 0x8888
    1310:	smull	lr, ip, r0, ip
    1314:	add	ip, ip, r0
    1318:	add	ip, r1, ip, asr #5
    131c:	str	ip, [r2]
    1320:	mov	r1, #60	; 0x3c
    1324:	mul	ip, ip, r1
    1328:	sub	r2, r0, ip
    132c:	str	r2, [r3]
    1330:	mov	r0, #0
    1334:	ldr	r4, [sp, #8]
    1338:	ldr	lr, [sp, #4]
    133c:	add	sp, sp, #16
    1340:	bx	lr
    1344:	.word	0x0000009d

00001348 <register_leap_second>:
    1348:	mov	ip, sp
    134c:	sub	sp, sp, #32
    1350:	str	ip, [sp, #4]
    1354:	str	lr, [sp, #8]
    1358:	str	r4, [sp, #16]
    135c:	vstr	d8, [sp, #24]
    1360:	vmov.f64	d8, d0
    1364:	ldr	ip, [pc, #316]	; 14a8 <register_leap_second+0x160>
    1368:	ldr	r2, [ip]
    136c:	asr	lr, r2, #31
    1370:	add	lr, r2, lr, lsr #28
    1374:	asr	r3, lr, #4
    1378:	lsl	r0, r3, #4
    137c:	sub	r3, r2, r0
    1380:	cmp	r3, #0
    1384:	bne	13dc <register_leap_second+0x94>
    1388:	ldr	r1, [pc, #272]	; 14a0 <register_leap_second+0x158>
    138c:	ldr	r0, [r1]
    1390:	lsl	ip, r2, #3
    1394:	add	r1, ip, #128	; 0x80
    1398:	bl	0 <realloc>
    139c:	cmp	r0, #0
    13a0:	bne	13d4 <register_leap_second+0x8c>
    13a4:	mvn	r0, #0
    13a8:	ldr	r1, [pc, #244]	; 14a4 <register_leap_second+0x15c>
    13ac:	ldr	r2, [pc, #244]	; 14a8 <register_leap_second+0x160>
    13b0:	ldr	r2, [r2]
    13b4:	lsl	r3, r2, #3
    13b8:	add	r2, r3, #128	; 0x80
    13bc:	ldr	r3, [pc, #232]	; 14ac <register_leap_second+0x164>
    13c0:	movw	r4, #609	; 0x261
    13c4:	str	r4, [sp]
    13c8:	bl	0 <coda_set_error>
    13cc:	mvn	r0, #0
    13d0:	b	148c <register_leap_second+0x144>
    13d4:	ldr	r1, [pc, #196]	; 14a0 <register_leap_second+0x158>
    13d8:	str	r0, [r1]
    13dc:	ldr	ip, [pc, #196]	; 14a8 <register_leap_second+0x160>
    13e0:	ldr	r3, [ip]
    13e4:	cmp	r3, #0
    13e8:	ble	1464 <register_leap_second+0x11c>
    13ec:	ldr	r0, [pc, #172]	; 14a0 <register_leap_second+0x158>
    13f0:	ldr	r0, [r0]
    13f4:	lsl	ip, r3, #3
    13f8:	add	r3, r0, ip
    13fc:	sub	lr, r3, #1024	; 0x400
    1400:	vldr	d1, [lr, #1016]	; 0x3f8
    1404:	vcmp.f64	d8, d1
    1408:	vmrs	APSR_nzcv, fpscr
    140c:	bhi	1464 <register_leap_second+0x11c>
    1410:	mov	r3, #0
    1414:	ldr	r2, [pc, #140]	; 14a8 <register_leap_second+0x160>
    1418:	ldr	r0, [r2]
    141c:	cmp	r3, r0
    1420:	bge	1464 <register_leap_second+0x11c>
    1424:	ldr	r1, [pc, #116]	; 14a0 <register_leap_second+0x158>
    1428:	ldr	r0, [r1]
    142c:	add	r0, r0, r3, lsl #3
    1430:	vldr	d0, [r0]
    1434:	vcmp.f64	d8, d0
    1438:	vmrs	APSR_nzcv, fpscr
    143c:	bhi	145c <register_leap_second+0x114>
    1440:	vcmp.f64	d8, d0
    1444:	vmrs	APSR_nzcv, fpscr
    1448:	bne	1454 <register_leap_second+0x10c>
    144c:	mov	r0, #0
    1450:	b	148c <register_leap_second+0x144>
    1454:	vstr	d8, [r0]
    1458:	vmov.f64	d8, d0
    145c:	add	r3, r3, #1
    1460:	b	1414 <register_leap_second+0xcc>
    1464:	ldr	r2, [pc, #52]	; 14a0 <register_leap_second+0x158>
    1468:	ldr	ip, [r2]
    146c:	ldr	r1, [pc, #52]	; 14a8 <register_leap_second+0x160>
    1470:	ldr	r2, [r1]
    1474:	add	r0, ip, r2, lsl #3
    1478:	vstr	d8, [r0]
    147c:	ldr	r3, [r1]
    1480:	add	r2, r3, #1
    1484:	str	r2, [r1]
    1488:	mov	r0, #0
    148c:	ldr	r4, [sp, #16]
    1490:	vldr	d8, [sp, #24]
    1494:	ldr	lr, [sp, #8]
    1498:	add	sp, sp, #32
    149c:	bx	lr
    14a0:	.word	0x00000004
    14a4:	.word	0x0000074b
    14a8:	.word	0x00000000
    14ac:	.word	0x000006c6

000014b0 <coda_leap_second_table_done>:
    14b0:	mov	ip, sp
    14b4:	sub	sp, sp, #8
    14b8:	str	ip, [sp]
    14bc:	str	lr, [sp, #4]
    14c0:	ldr	r0, [pc, #48]	; 14f8 <coda_leap_second_table_done+0x48>
    14c4:	ldr	r0, [r0]
    14c8:	cmp	r0, #0
    14cc:	beq	14e0 <coda_leap_second_table_done+0x30>
    14d0:	bl	0 <free>
    14d4:	ldr	r3, [pc, #28]	; 14f8 <coda_leap_second_table_done+0x48>
    14d8:	mov	r1, #0
    14dc:	str	r1, [r3]
    14e0:	ldr	r0, [pc, #20]	; 14fc <coda_leap_second_table_done+0x4c>
    14e4:	mov	r2, #0
    14e8:	str	r2, [r0]
    14ec:	ldr	lr, [sp, #4]
    14f0:	add	sp, sp, #8
    14f4:	bx	lr
    14f8:	.word	0x00000004
    14fc:	.word	0x00000000

00001500 <coda_leap_second_table_init>:
    1500:	mov	ip, sp
    1504:	sub	sp, sp, #232	; 0xe8
    1508:	str	ip, [sp, #32]
    150c:	str	lr, [sp, #36]	; 0x24
    1510:	str	r4, [sp, #52]	; 0x34
    1514:	str	r5, [sp, #56]	; 0x38
    1518:	str	r6, [sp, #60]	; 0x3c
    151c:	str	r8, [sp, #64]	; 0x40
    1520:	str	r9, [sp, #68]	; 0x44
    1524:	str	sl, [sp, #72]	; 0x48
    1528:	str	fp, [sp, #76]	; 0x4c
    152c:	bl	14b0 <coda_leap_second_table_done>
    1530:	ldr	r0, [pc, #560]	; 1768 <coda_leap_second_table_init+0x268>
    1534:	bl	0 <getenv>
    1538:	cmp	r0, #0
    153c:	bne	161c <coda_leap_second_table_init+0x11c>
    1540:	vldr	d0, [pc, #564]	; 177c <coda_leap_second_table_init+0x27c>
    1544:	bl	1348 <register_leap_second>
    1548:	vldr	d0, [pc, #684]	; 17fc <coda_leap_second_table_init+0x2fc>
    154c:	bl	1348 <register_leap_second>
    1550:	vldr	d0, [pc, #660]	; 17ec <coda_leap_second_table_init+0x2ec>
    1554:	bl	1348 <register_leap_second>
    1558:	vldr	d0, [pc, #588]	; 17ac <coda_leap_second_table_init+0x2ac>
    155c:	bl	1348 <register_leap_second>
    1560:	vldr	d0, [pc, #692]	; 181c <coda_leap_second_table_init+0x31c>
    1564:	bl	1348 <register_leap_second>
    1568:	vldr	d0, [pc, #628]	; 17e4 <coda_leap_second_table_init+0x2e4>
    156c:	bl	1348 <register_leap_second>
    1570:	vldr	d0, [pc, #612]	; 17dc <coda_leap_second_table_init+0x2dc>
    1574:	bl	1348 <register_leap_second>
    1578:	vldr	d0, [pc, #564]	; 17b4 <coda_leap_second_table_init+0x2b4>
    157c:	bl	1348 <register_leap_second>
    1580:	vldr	d0, [pc, #692]	; 183c <coda_leap_second_table_init+0x33c>
    1584:	bl	1348 <register_leap_second>
    1588:	vldr	d0, [pc, #524]	; 179c <coda_leap_second_table_init+0x29c>
    158c:	bl	1348 <register_leap_second>
    1590:	vldr	d0, [pc, #652]	; 1824 <coda_leap_second_table_init+0x324>
    1594:	bl	1348 <register_leap_second>
    1598:	vldr	d0, [pc, #620]	; 180c <coda_leap_second_table_init+0x30c>
    159c:	bl	1348 <register_leap_second>
    15a0:	vldr	d0, [pc, #476]	; 1784 <coda_leap_second_table_init+0x284>
    15a4:	bl	1348 <register_leap_second>
    15a8:	vldr	d0, [pc, #636]	; 182c <coda_leap_second_table_init+0x32c>
    15ac:	bl	1348 <register_leap_second>
    15b0:	vldr	d0, [pc, #588]	; 1804 <coda_leap_second_table_init+0x304>
    15b4:	bl	1348 <register_leap_second>
    15b8:	vldr	d0, [pc, #628]	; 1834 <coda_leap_second_table_init+0x334>
    15bc:	bl	1348 <register_leap_second>
    15c0:	vldr	d0, [pc, #476]	; 17a4 <coda_leap_second_table_init+0x2a4>
    15c4:	bl	1348 <register_leap_second>
    15c8:	vldr	d0, [pc, #500]	; 17c4 <coda_leap_second_table_init+0x2c4>
    15cc:	bl	1348 <register_leap_second>
    15d0:	vldr	d0, [pc, #412]	; 1774 <coda_leap_second_table_init+0x274>
    15d4:	bl	1348 <register_leap_second>
    15d8:	vldr	d0, [pc, #436]	; 1794 <coda_leap_second_table_init+0x294>
    15dc:	bl	1348 <register_leap_second>
    15e0:	vldr	d0, [pc, #468]	; 17bc <coda_leap_second_table_init+0x2bc>
    15e4:	bl	1348 <register_leap_second>
    15e8:	vldr	d0, [pc, #516]	; 17f4 <coda_leap_second_table_init+0x2f4>
    15ec:	bl	1348 <register_leap_second>
    15f0:	vldr	d0, [pc, #588]	; 1844 <coda_leap_second_table_init+0x344>
    15f4:	bl	1348 <register_leap_second>
    15f8:	vldr	d0, [pc, #460]	; 17cc <coda_leap_second_table_init+0x2cc>
    15fc:	bl	1348 <register_leap_second>
    1600:	vldr	d0, [pc, #460]	; 17d4 <coda_leap_second_table_init+0x2d4>
    1604:	bl	1348 <register_leap_second>
    1608:	vldr	d0, [pc, #516]	; 1814 <coda_leap_second_table_init+0x314>
    160c:	bl	1348 <register_leap_second>
    1610:	vldr	d0, [pc, #372]	; 178c <coda_leap_second_table_init+0x28c>
    1614:	bl	1348 <register_leap_second>
    1618:	b	18c0 <coda_leap_second_table_init+0x3c0>
    161c:	ldr	r0, [pc, #324]	; 1768 <coda_leap_second_table_init+0x268>
    1620:	bl	0 <getenv>
    1624:	str	r0, [sp, #44]	; 0x2c
    1628:	mov	r6, #0
    162c:	ldr	r1, [pc, #316]	; 1770 <coda_leap_second_table_init+0x270>
    1630:	ldr	r0, [sp, #44]	; 0x2c
    1634:	bl	0 <fopen>
    1638:	str	r0, [sp, #40]	; 0x28
    163c:	ldr	r2, [sp, #40]	; 0x28
    1640:	cmp	r2, #0
    1644:	bne	1660 <coda_leap_second_table_init+0x160>
    1648:	mvn	r0, #20
    164c:	ldr	r1, [pc, #260]	; 1758 <coda_leap_second_table_init+0x258>
    1650:	ldr	r2, [sp, #44]	; 0x2c
    1654:	bl	0 <coda_set_error>
    1658:	mvn	r0, #0
    165c:	b	18b0 <coda_leap_second_table_init+0x3b0>
    1660:	mov	r1, #0
    1664:	str	r1, [sp, #84]	; 0x54
    1668:	ldr	r1, [pc, #252]	; 176c <coda_leap_second_table_init+0x26c>
    166c:	add	r2, sp, #128	; 0x80
    1670:	add	r3, sp, #84	; 0x54
    1674:	ldr	r0, [sp, #40]	; 0x28
    1678:	bl	0 <fscanf>
    167c:	ldr	ip, [sp, #84]	; 0x54
    1680:	cmp	ip, #0
    1684:	ble	18a4 <coda_leap_second_table_init+0x3a4>
    1688:	cmp	ip, #80	; 0x50
    168c:	beq	16b0 <coda_leap_second_table_init+0x1b0>
    1690:	ldr	r0, [sp, #40]	; 0x28
    1694:	bl	0 <fclose>
    1698:	mvn	r0, #21
    169c:	ldr	r1, [pc, #192]	; 1764 <coda_leap_second_table_init+0x264>
    16a0:	ldr	r2, [sp, #44]	; 0x2c
    16a4:	bl	0 <coda_set_error>
    16a8:	mvn	r0, #0
    16ac:	b	18b0 <coda_leap_second_table_init+0x3b0>
    16b0:	add	r3, sp, #128	; 0x80
    16b4:	mov	r0, #0
    16b8:	strb	r0, [r3, ip]
    16bc:	ldr	r1, [pc, #152]	; 175c <coda_leap_second_table_init+0x25c>
    16c0:	ldr	r0, [sp, #40]	; 0x28
    16c4:	bl	0 <fscanf>
    16c8:	add	r0, sp, #128	; 0x80
    16cc:	ldr	r3, [pc, #140]	; 1760 <coda_leap_second_table_init+0x260>
    16d0:	str	r3, [sp, #48]	; 0x30
    16d4:	add	r2, sp, #88	; 0x58
    16d8:	add	r3, sp, #80	; 0x50
    16dc:	add	sl, sp, #81	; 0x51
    16e0:	add	ip, sp, #82	; 0x52
    16e4:	add	r9, sp, #92	; 0x5c
    16e8:	add	r5, sp, #104	; 0x68
    16ec:	add	fp, sp, #112	; 0x70
    16f0:	add	r1, sp, #120	; 0x78
    16f4:	add	r8, sp, #96	; 0x60
    16f8:	add	r4, sp, #84	; 0x54
    16fc:	str	r4, [sp, #28]
    1700:	str	r8, [sp, #24]
    1704:	str	r1, [sp, #20]
    1708:	str	fp, [sp, #16]
    170c:	str	r5, [sp, #12]
    1710:	str	r9, [sp, #8]
    1714:	str	ip, [sp, #4]
    1718:	str	sl, [sp]
    171c:	ldr	r1, [sp, #48]	; 0x30
    1720:	bl	0 <sscanf>
    1724:	cmp	r0, #9
    1728:	beq	184c <coda_leap_second_table_init+0x34c>
    172c:	ldr	r1, [sp, #84]	; 0x54
    1730:	cmp	r1, #80	; 0x50
    1734:	beq	184c <coda_leap_second_table_init+0x34c>
    1738:	ldr	r0, [sp, #40]	; 0x28
    173c:	bl	0 <fclose>
    1740:	mvn	r0, #21
    1744:	ldr	r1, [pc, #24]	; 1764 <coda_leap_second_table_init+0x264>
    1748:	ldr	r2, [sp, #44]	; 0x2c
    174c:	bl	0 <coda_set_error>
    1750:	mvn	r0, #0
    1754:	b	18b0 <coda_leap_second_table_init+0x3b0>
    1758:	.word	0x000004b5
    175c:	.word	0x00000516
    1760:	.word	0x0000013b
    1764:	.word	0x000000dc
    1768:	.word	0x0000059f
    176c:	.word	0x0000062f
    1770:	.word	0x0000009b
    1774:	.word	0xc8000000
    1778:	.word	0xc1a4b3cd
    177c:	.word	0xbb000000
    1780:	.word	0xc1c9dd75
    1784:	.word	0x6a000000
    1788:	.word	0xc1bb4759
    178c:	.word	0x24000000
    1790:	.word	0x41bffb03
    1794:	.word	0x8c000000
    1798:	.word	0xc19e187d
    179c:	.word	0x76800000
    17a0:	.word	0xc1c166bc
    17a4:	.word	0xcc000000
    17a8:	.word	0xc1ac389b
    17ac:	.word	0x39800000
    17b0:	.word	0xc1c782f8
    17b4:	.word	0x77800000
    17b8:	.word	0xc1c3bfe8
    17bc:	.word	0x88000000
    17c0:	.word	0xc192d3eb
    17c4:	.word	0xca000000
    17c8:	.word	0xc1a87634
    17cc:	.word	0x21000000
    17d0:	.word	0x41b0eec4
    17d4:	.word	0xa2000000
    17d8:	.word	0x41b7824f
    17dc:	.word	0x38000000
    17e0:	.word	0xc1c4b082
    17e4:	.word	0xf8800000
    17e8:	.word	0xc1c5a11b
    17ec:	.word	0xfa000000
    17f0:	.word	0xc1c87391
    17f4:	.word	0x10000000
    17f8:	.word	0xc17e1336
    17fc:	.word	0xba800000
    1800:	.word	0xc1c9642b
    1804:	.word	0xe8000000
    1808:	.word	0xc1b2cea5
    180c:	.word	0xeb000000
    1810:	.word	0xc1bf0b11
    1814:	.word	0x23000000
    1818:	.word	0x41bd25ea
    181c:	.word	0x79000000
    1820:	.word	0xc1c6925e
    1824:	.word	0xb6000000
    1828:	.word	0xc1c07622
    182c:	.word	0x69000000
    1830:	.word	0xc1b6925e
    1834:	.word	0x67000000
    1838:	.word	0xc1b0ed72
    183c:	.word	0xb7000000
    1840:	.word	0xc1c2cf4e
    1844:	.word	0x40000000
    1848:	.word	0x41a693b0
    184c:	vldr	d0, [sp, #104]	; 0x68
    1850:	vldr	d1, [pc, #148]	; 18ec <coda_leap_second_table_init+0x3ec>
    1854:	vcmp.f64	d0, d1
    1858:	vmrs	APSR_nzcv, fpscr
    185c:	ble	1660 <coda_leap_second_table_init+0x160>
    1860:	vldr	d2, [pc, #140]	; 18f4 <coda_leap_second_table_init+0x3f4>
    1864:	vsub.f64	d7, d0, d2
    1868:	vldr	d2, [pc, #140]	; 18fc <coda_leap_second_table_init+0x3fc>
    186c:	vmul.f64	d1, d7, d2
    1870:	add	r2, r6, #10
    1874:	vmov	s6, r2
    1878:	vcvt.f64.s32	d3, s6
    187c:	vadd.f64	d0, d1, d3
    1880:	bl	1348 <register_leap_second>
    1884:	cmp	r0, #0
    1888:	beq	189c <coda_leap_second_table_init+0x39c>
    188c:	ldr	r0, [sp, #40]	; 0x28
    1890:	bl	0 <fclose>
    1894:	mvn	r0, #0
    1898:	b	18b0 <coda_leap_second_table_init+0x3b0>
    189c:	add	r6, r6, #1
    18a0:	b	1660 <coda_leap_second_table_init+0x160>
    18a4:	ldr	r0, [sp, #40]	; 0x28
    18a8:	bl	0 <fclose>
    18ac:	mov	r0, #0
    18b0:	cmp	r0, #0
    18b4:	beq	18c0 <coda_leap_second_table_init+0x3c0>
    18b8:	mvn	r0, #0
    18bc:	b	18c4 <coda_leap_second_table_init+0x3c4>
    18c0:	mov	r0, #0
    18c4:	ldr	r4, [sp, #52]	; 0x34
    18c8:	ldr	r5, [sp, #56]	; 0x38
    18cc:	ldr	r6, [sp, #60]	; 0x3c
    18d0:	ldr	r8, [sp, #64]	; 0x40
    18d4:	ldr	r9, [sp, #68]	; 0x44
    18d8:	ldr	sl, [sp, #72]	; 0x48
    18dc:	ldr	fp, [sp, #76]	; 0x4c
    18e0:	ldr	lr, [sp, #36]	; 0x24
    18e4:	add	sp, sp, #232	; 0xe8
    18e8:	bx	lr
    18ec:	.word	0xc0000000
    18f0:	.word	0x4142a032
    18f4:	.word	0x40000000
    18f8:	.word	0x4142b42c
    18fc:	.word	0x00000000
    1900:	.word	0x40f51800

00001904 <coda_time_double_to_parts>:
    1904:	mov	ip, sp
    1908:	sub	sp, sp, #80	; 0x50
    190c:	str	ip, [sp]
    1910:	str	lr, [sp, #4]
    1914:	str	r4, [sp, #8]
    1918:	str	r5, [sp, #12]
    191c:	str	r6, [sp, #16]
    1920:	str	r7, [sp, #20]
    1924:	str	r8, [sp, #24]
    1928:	str	r9, [sp, #28]
    192c:	str	sl, [sp, #32]
    1930:	str	fp, [sp, #36]	; 0x24
    1934:	vstr	d8, [sp, #40]	; 0x28
    1938:	vstr	d9, [sp, #48]	; 0x30
    193c:	ldr	r5, [ip, #8]
    1940:	ldr	sl, [ip, #4]
    1944:	ldr	r9, [ip]
    1948:	mov	r6, r3
    194c:	mov	r4, r2
    1950:	mov	r8, r1
    1954:	mov	r7, r0
    1958:	vmov.f64	d8, d0
    195c:	mov	r2, #1
    1960:	cmp	r8, #0
    1964:	moveq	ip, #1
    1968:	movne	ip, #0
    196c:	cmp	r7, #0
    1970:	moveq	r0, r2
    1974:	movne	r0, ip
    1978:	mov	ip, #1
    197c:	cmp	r4, #0
    1980:	moveq	r1, #1
    1984:	movne	r1, #0
    1988:	cmp	r0, #0
    198c:	movne	ip, ip
    1990:	moveq	ip, r1
    1994:	mov	r0, #1
    1998:	cmp	r6, #0
    199c:	moveq	r2, #1
    19a0:	movne	r2, #0
    19a4:	cmp	ip, #0
    19a8:	movne	r2, r0
    19ac:	moveq	r2, r2
    19b0:	mov	r3, #1
    19b4:	cmp	r9, #0
    19b8:	moveq	ip, #1
    19bc:	movne	ip, #0
    19c0:	cmp	r2, #0
    19c4:	movne	r1, r3
    19c8:	moveq	r1, ip
    19cc:	mov	ip, #1
    19d0:	cmp	sl, #0
    19d4:	moveq	r2, #1
    19d8:	movne	r2, #0
    19dc:	cmp	r1, #0
    19e0:	movne	ip, ip
    19e4:	moveq	ip, r2
    19e8:	mov	r3, #1
    19ec:	cmp	r5, #0
    19f0:	moveq	r2, #1
    19f4:	movne	r2, #0
    19f8:	cmp	ip, #0
    19fc:	movne	r0, r3
    1a00:	moveq	r0, r2
    1a04:	cmp	r0, #0
    1a08:	beq	1a28 <coda_time_double_to_parts+0x124>
    1a0c:	mvn	r0, #99	; 0x63
    1a10:	ldr	r1, [pc, #368]	; 1b88 <coda_time_double_to_parts+0x284>
    1a14:	ldr	r2, [pc, #356]	; 1b80 <coda_time_double_to_parts+0x27c>
    1a18:	movw	r3, #787	; 0x313
    1a1c:	bl	0 <coda_set_error>
    1a20:	mvn	r0, #0
    1a24:	b	1b48 <coda_time_double_to_parts+0x244>
    1a28:	vmov.f64	d0, d8
    1a2c:	bl	0 <coda_isNaN>
    1a30:	cmp	r0, #0
    1a34:	beq	1a4c <coda_time_double_to_parts+0x148>
    1a38:	mvn	r0, #103	; 0x67
    1a3c:	ldr	r1, [pc, #320]	; 1b84 <coda_time_double_to_parts+0x280>
    1a40:	bl	0 <coda_set_error>
    1a44:	mvn	r0, #0
    1a48:	b	1b48 <coda_time_double_to_parts+0x244>
    1a4c:	vmov.f64	d0, d8
    1a50:	bl	0 <coda_isInf>
    1a54:	cmp	r0, #0
    1a58:	beq	1a70 <coda_time_double_to_parts+0x16c>
    1a5c:	mvn	r0, #103	; 0x67
    1a60:	ldr	r1, [pc, #276]	; 1b7c <coda_time_double_to_parts+0x278>
    1a64:	bl	0 <coda_set_error>
    1a68:	mvn	r0, #0
    1a6c:	b	1b48 <coda_time_double_to_parts+0x244>
    1a70:	vldr	d4, [pc, #276]	; 1b8c <coda_time_double_to_parts+0x288>
    1a74:	vadd.f64	d9, d8, d4
    1a78:	vmov.f64	d0, d9
    1a7c:	bl	0 <floor>
    1a80:	vmov.f64	d8, d0
    1a84:	vldr	d0, [pc, #272]	; 1b9c <coda_time_double_to_parts+0x298>
    1a88:	vdiv.f64	d0, d8, d0
    1a8c:	bl	0 <floor>
    1a90:	vcvt.s32.f64	s12, d0
    1a94:	vmov	fp, s12
    1a98:	add	r1, sp, #64	; 0x40
    1a9c:	add	r2, sp, #68	; 0x44
    1aa0:	add	r3, sp, #72	; 0x48
    1aa4:	mov	r0, fp
    1aa8:	bl	c8c <mjd2000_to_dmy>
    1aac:	cmp	r0, #0
    1ab0:	beq	1abc <coda_time_double_to_parts+0x1b8>
    1ab4:	mvn	r0, #0
    1ab8:	b	1b48 <coda_time_double_to_parts+0x244>
    1abc:	vmov	s10, fp
    1ac0:	vcvt.f64.s32	d5, s10
    1ac4:	vldr	d3, [pc, #208]	; 1b9c <coda_time_double_to_parts+0x298>
    1ac8:	vmul.f64	d1, d5, d3
    1acc:	vsub.f64	d0, d8, d1
    1ad0:	vcvt.s32.f64	s12, d0
    1ad4:	vmov	r0, s12
    1ad8:	add	r1, sp, #76	; 0x4c
    1adc:	add	r2, sp, #56	; 0x38
    1ae0:	add	r3, sp, #60	; 0x3c
    1ae4:	bl	1280 <seconds_to_hms>
    1ae8:	cmp	r0, #0
    1aec:	beq	1af8 <coda_time_double_to_parts+0x1f4>
    1af0:	mvn	r0, #0
    1af4:	b	1b48 <coda_time_double_to_parts+0x244>
    1af8:	vsub.f64	d1, d9, d8
    1afc:	vldr	d2, [pc, #144]	; 1b94 <coda_time_double_to_parts+0x290>
    1b00:	vmul.f64	d0, d1, d2
    1b04:	bl	0 <floor>
    1b08:	vcvt.s32.f64	s12, d0
    1b0c:	vmov	r2, s12
    1b10:	ldr	r3, [sp, #72]	; 0x48
    1b14:	str	r3, [r7]
    1b18:	ldr	r1, [sp, #68]	; 0x44
    1b1c:	str	r1, [r8]
    1b20:	ldr	ip, [sp, #64]	; 0x40
    1b24:	str	ip, [r4]
    1b28:	ldr	r0, [sp, #76]	; 0x4c
    1b2c:	str	r0, [r6]
    1b30:	ldr	r1, [sp, #56]	; 0x38
    1b34:	str	r1, [r9]
    1b38:	ldr	r1, [sp, #60]	; 0x3c
    1b3c:	str	r1, [sl]
    1b40:	str	r2, [r5]
    1b44:	mov	r0, #0
    1b48:	ldr	r4, [sp, #8]
    1b4c:	ldr	r5, [sp, #12]
    1b50:	ldr	r6, [sp, #16]
    1b54:	ldr	r7, [sp, #20]
    1b58:	ldr	r8, [sp, #24]
    1b5c:	ldr	r9, [sp, #28]
    1b60:	ldr	sl, [sp, #32]
    1b64:	ldr	fp, [sp, #36]	; 0x24
    1b68:	vldr	d8, [sp, #40]	; 0x28
    1b6c:	vldr	d9, [sp, #48]	; 0x30
    1b70:	ldr	lr, [sp, #4]
    1b74:	add	sp, sp, #80	; 0x50
    1b78:	bx	lr
    1b7c:	.word	0x00000723
    1b80:	.word	0x000006c6
    1b84:	.word	0x00000220
    1b88:	.word	0x000005b6
    1b8c:	.word	0xa0b5ed8d
    1b90:	.word	0x3ea0c6f7
    1b94:	.word	0x00000000
    1b98:	.word	0x412e8480
    1b9c:	.word	0x00000000
    1ba0:	.word	0x40f51800

00001ba4 <coda_time_double_to_parts_utc>:
    1ba4:	mov	ip, sp
    1ba8:	sub	sp, sp, #88	; 0x58
    1bac:	str	ip, [sp]
    1bb0:	str	lr, [sp, #4]
    1bb4:	str	r4, [sp, #12]
    1bb8:	str	r5, [sp, #16]
    1bbc:	str	r6, [sp, #20]
    1bc0:	str	r7, [sp, #24]
    1bc4:	str	r8, [sp, #28]
    1bc8:	str	r9, [sp, #32]
    1bcc:	str	sl, [sp, #36]	; 0x24
    1bd0:	str	fp, [sp, #40]	; 0x28
    1bd4:	vstr	d8, [sp, #48]	; 0x30
    1bd8:	vstr	d9, [sp, #56]	; 0x38
    1bdc:	ldr	r4, [ip, #8]
    1be0:	ldr	r6, [ip, #4]
    1be4:	ldr	r9, [ip]
    1be8:	mov	r7, r3
    1bec:	mov	r8, r2
    1bf0:	mov	fp, r1
    1bf4:	str	r0, [sp, #8]
    1bf8:	vmov.f64	d8, d0
    1bfc:	mov	r3, #1
    1c00:	cmp	fp, #0
    1c04:	moveq	r2, #1
    1c08:	movne	r2, #0
    1c0c:	ldr	r1, [sp, #8]
    1c10:	cmp	r1, #0
    1c14:	moveq	ip, r3
    1c18:	movne	ip, r2
    1c1c:	mov	r3, #1
    1c20:	cmp	r8, #0
    1c24:	moveq	r2, #1
    1c28:	movne	r2, #0
    1c2c:	cmp	ip, #0
    1c30:	movne	r0, r3
    1c34:	moveq	r0, r2
    1c38:	mov	r1, #1
    1c3c:	cmp	r7, #0
    1c40:	moveq	ip, #1
    1c44:	movne	ip, #0
    1c48:	cmp	r0, #0
    1c4c:	movne	r3, r1
    1c50:	moveq	r3, ip
    1c54:	mov	r1, #1
    1c58:	cmp	r9, #0
    1c5c:	moveq	r2, #1
    1c60:	movne	r2, #0
    1c64:	cmp	r3, #0
    1c68:	movne	r1, r1
    1c6c:	moveq	r1, r2
    1c70:	mov	r3, #1
    1c74:	cmp	r6, #0
    1c78:	moveq	r0, #1
    1c7c:	movne	r0, #0
    1c80:	cmp	r1, #0
    1c84:	movne	r2, r3
    1c88:	moveq	r2, r0
    1c8c:	mov	r3, #1
    1c90:	cmp	r4, #0
    1c94:	moveq	r0, #1
    1c98:	movne	r0, #0
    1c9c:	cmp	r2, #0
    1ca0:	movne	r3, r3
    1ca4:	moveq	r3, r0
    1ca8:	cmp	r3, #0
    1cac:	beq	1ccc <coda_time_double_to_parts_utc+0x128>
    1cb0:	mvn	r0, #99	; 0x63
    1cb4:	ldr	r1, [pc, #568]	; 1ef4 <coda_time_double_to_parts_utc+0x350>
    1cb8:	ldr	r2, [pc, #552]	; 1ee8 <coda_time_double_to_parts_utc+0x344>
    1cbc:	movw	r3, #874	; 0x36a
    1cc0:	bl	0 <coda_set_error>
    1cc4:	mvn	r0, #0
    1cc8:	b	1ea4 <coda_time_double_to_parts_utc+0x300>
    1ccc:	vmov.f64	d0, d8
    1cd0:	bl	0 <coda_isNaN>
    1cd4:	cmp	r0, #0
    1cd8:	beq	1cf0 <coda_time_double_to_parts_utc+0x14c>
    1cdc:	mvn	r0, #103	; 0x67
    1ce0:	ldr	r1, [pc, #516]	; 1eec <coda_time_double_to_parts_utc+0x348>
    1ce4:	bl	0 <coda_set_error>
    1ce8:	mvn	r0, #0
    1cec:	b	1ea4 <coda_time_double_to_parts_utc+0x300>
    1cf0:	vmov.f64	d0, d8
    1cf4:	bl	0 <coda_isInf>
    1cf8:	cmp	r0, #0
    1cfc:	beq	1d14 <coda_time_double_to_parts_utc+0x170>
    1d00:	mvn	r0, #103	; 0x67
    1d04:	ldr	r1, [pc, #472]	; 1ee4 <coda_time_double_to_parts_utc+0x340>
    1d08:	bl	0 <coda_set_error>
    1d0c:	mvn	r0, #0
    1d10:	b	1ea4 <coda_time_double_to_parts_utc+0x300>
    1d14:	vldr	d0, [pc, #484]	; 1f00 <coda_time_double_to_parts_utc+0x35c>
    1d18:	vadd.f64	d9, d8, d0
    1d1c:	vmov.f64	d0, d9
    1d20:	bl	0 <floor>
    1d24:	vmov.f64	d8, d0
    1d28:	ldr	r0, [pc, #424]	; 1ed8 <coda_time_double_to_parts_utc+0x334>
    1d2c:	ldr	ip, [r0]
    1d30:	cmp	ip, #0
    1d34:	beq	1d48 <coda_time_double_to_parts_utc+0x1a4>
    1d38:	ldr	ip, [pc, #416]	; 1ee0 <coda_time_double_to_parts_utc+0x33c>
    1d3c:	ldr	r1, [ip]
    1d40:	cmp	r1, #0
    1d44:	bgt	1d5c <coda_time_double_to_parts_utc+0x1b8>
    1d48:	ldr	r0, [pc, #396]	; 1edc <coda_time_double_to_parts_utc+0x338>
    1d4c:	ldr	r1, [pc, #404]	; 1ee8 <coda_time_double_to_parts_utc+0x344>
    1d50:	movw	r2, #894	; 0x37e
    1d54:	ldr	r3, [pc, #404]	; 1ef0 <coda_time_double_to_parts_utc+0x34c>
    1d58:	bl	0 <__assert_fail>
    1d5c:	mov	sl, #0
    1d60:	ldr	r3, [pc, #376]	; 1ee0 <coda_time_double_to_parts_utc+0x33c>
    1d64:	ldr	r0, [r3]
    1d68:	cmp	sl, r0
    1d6c:	bge	1d94 <coda_time_double_to_parts_utc+0x1f0>
    1d70:	ldr	r2, [pc, #352]	; 1ed8 <coda_time_double_to_parts_utc+0x334>
    1d74:	ldr	ip, [r2]
    1d78:	add	r0, ip, sl, lsl #3
    1d7c:	vldr	d5, [r0]
    1d80:	vcmp.f64	d8, d5
    1d84:	vmrs	APSR_nzcv, fpscr
    1d88:	ble	1d94 <coda_time_double_to_parts_utc+0x1f0>
    1d8c:	add	sl, sl, #1
    1d90:	b	1d60 <coda_time_double_to_parts_utc+0x1bc>
    1d94:	ldr	r0, [pc, #316]	; 1ed8 <coda_time_double_to_parts_utc+0x334>
    1d98:	ldr	r2, [r0]
    1d9c:	add	r3, r2, sl, lsl #3
    1da0:	vldr	d3, [r3]
    1da4:	vsub.f64	d0, d8, d3
    1da8:	bl	0 <fabs>
    1dac:	vldr	d2, [pc, #324]	; 1ef8 <coda_time_double_to_parts_utc+0x354>
    1db0:	vcmp.f64	d0, d2
    1db4:	vmrs	APSR_nzcv, fpscr
    1db8:	movmi	r5, #1
    1dbc:	movpl	r5, #0
    1dc0:	add	r1, sl, r5
    1dc4:	add	ip, r1, #10
    1dc8:	vmov	s0, ip
    1dcc:	vcvt.f64.s32	d0, s0
    1dd0:	vsub.f64	d8, d8, d0
    1dd4:	vsub.f64	d9, d9, d0
    1dd8:	vldr	d4, [pc, #304]	; 1f10 <coda_time_double_to_parts_utc+0x36c>
    1ddc:	vdiv.f64	d0, d8, d4
    1de0:	bl	0 <floor>
    1de4:	vcvt.s32.f64	s12, d0
    1de8:	vmov	sl, s12
    1dec:	add	r1, sp, #72	; 0x48
    1df0:	add	r2, sp, #76	; 0x4c
    1df4:	add	r3, sp, #80	; 0x50
    1df8:	mov	r0, sl
    1dfc:	bl	c8c <mjd2000_to_dmy>
    1e00:	cmp	r0, #0
    1e04:	beq	1e10 <coda_time_double_to_parts_utc+0x26c>
    1e08:	mvn	r0, #0
    1e0c:	b	1ea4 <coda_time_double_to_parts_utc+0x300>
    1e10:	vmov	s4, sl
    1e14:	vcvt.f64.s32	d2, s4
    1e18:	vldr	d5, [pc, #240]	; 1f10 <coda_time_double_to_parts_utc+0x36c>
    1e1c:	vmul.f64	d7, d2, d5
    1e20:	vsub.f64	d1, d8, d7
    1e24:	vcvt.s32.f64	s12, d1
    1e28:	vmov	r0, s12
    1e2c:	add	r1, sp, #84	; 0x54
    1e30:	add	r2, sp, #64	; 0x40
    1e34:	add	r3, sp, #68	; 0x44
    1e38:	bl	1280 <seconds_to_hms>
    1e3c:	cmp	r0, #0
    1e40:	beq	1e4c <coda_time_double_to_parts_utc+0x2a8>
    1e44:	mvn	r0, #0
    1e48:	b	1ea4 <coda_time_double_to_parts_utc+0x300>
    1e4c:	vsub.f64	d6, d9, d8
    1e50:	vldr	d7, [pc, #176]	; 1f08 <coda_time_double_to_parts_utc+0x364>
    1e54:	vmul.f64	d0, d6, d7
    1e58:	bl	0 <floor>
    1e5c:	vcvt.s32.f64	s12, d0
    1e60:	vmov	r3, s12
    1e64:	ldr	r0, [sp, #80]	; 0x50
    1e68:	ldr	r2, [sp, #8]
    1e6c:	str	r0, [r2]
    1e70:	ldr	r1, [sp, #76]	; 0x4c
    1e74:	str	r1, [fp]
    1e78:	ldr	r1, [sp, #72]	; 0x48
    1e7c:	str	r1, [r8]
    1e80:	ldr	r2, [sp, #84]	; 0x54
    1e84:	str	r2, [r7]
    1e88:	ldr	r0, [sp, #64]	; 0x40
    1e8c:	str	r0, [r9]
    1e90:	ldr	r2, [sp, #68]	; 0x44
    1e94:	add	r2, r2, r5
    1e98:	str	r2, [r6]
    1e9c:	str	r3, [r4]
    1ea0:	mov	r0, #0
    1ea4:	ldr	r4, [sp, #12]
    1ea8:	ldr	r5, [sp, #16]
    1eac:	ldr	r6, [sp, #20]
    1eb0:	ldr	r7, [sp, #24]
    1eb4:	ldr	r8, [sp, #28]
    1eb8:	ldr	r9, [sp, #32]
    1ebc:	ldr	sl, [sp, #36]	; 0x24
    1ec0:	ldr	fp, [sp, #40]	; 0x28
    1ec4:	vldr	d8, [sp, #48]	; 0x30
    1ec8:	vldr	d9, [sp, #56]	; 0x38
    1ecc:	ldr	lr, [sp, #4]
    1ed0:	add	sp, sp, #88	; 0x58
    1ed4:	bx	lr
    1ed8:	.word	0x00000004
    1edc:	.word	0x00000281
    1ee0:	.word	0x00000000
    1ee4:	.word	0x00000723
    1ee8:	.word	0x000006c6
    1eec:	.word	0x00000220
    1ef0:	.word	0x000008de
    1ef4:	.word	0x000005b6
    1ef8:	.word	0x9999999a
    1efc:	.word	0x3fb99999
    1f00:	.word	0xa0b5ed8d
    1f04:	.word	0x3ea0c6f7
    1f08:	.word	0x00000000
    1f0c:	.word	0x412e8480
    1f10:	.word	0x00000000
    1f14:	.word	0x40f51800

00001f18 <coda_time_parts_to_double>:
    1f18:	mov	ip, sp
    1f1c:	sub	sp, sp, #56	; 0x38
    1f20:	str	ip, [sp, #4]
    1f24:	str	lr, [sp, #8]
    1f28:	str	r4, [sp, #16]
    1f2c:	str	r5, [sp, #20]
    1f30:	str	r6, [sp, #24]
    1f34:	str	r7, [sp, #28]
    1f38:	str	r8, [sp, #32]
    1f3c:	ldr	r8, [ip, #12]
    1f40:	ldr	r4, [ip, #8]
    1f44:	ldr	r5, [ip, #4]
    1f48:	ldr	r6, [ip]
    1f4c:	mov	r7, r3
    1f50:	cmp	r8, #0
    1f54:	bne	1f74 <coda_time_parts_to_double+0x5c>
    1f58:	mvn	r0, #99	; 0x63
    1f5c:	ldr	r1, [pc, #164]	; 2008 <coda_time_parts_to_double+0xf0>
    1f60:	ldr	r2, [pc, #164]	; 200c <coda_time_parts_to_double+0xf4>
    1f64:	movw	r3, #954	; 0x3ba
    1f68:	bl	0 <coda_set_error>
    1f6c:	mvn	r0, #0
    1f70:	b	1fe8 <coda_time_parts_to_double+0xd0>
    1f74:	add	r3, sp, #40	; 0x28
    1f78:	mov	ip, r0
    1f7c:	mov	r0, r2
    1f80:	mov	r2, ip
    1f84:	bl	5bc <dmy_to_mjd2000>
    1f88:	cmp	r0, #0
    1f8c:	beq	1f98 <coda_time_parts_to_double+0x80>
    1f90:	mvn	r0, #0
    1f94:	b	1fe8 <coda_time_parts_to_double+0xd0>
    1f98:	add	ip, sp, #48	; 0x30
    1f9c:	str	ip, [sp]
    1fa0:	mov	r3, r4
    1fa4:	mov	r2, r5
    1fa8:	mov	r1, r6
    1fac:	mov	r0, r7
    1fb0:	bl	fb0 <hms_to_daytime>
    1fb4:	cmp	r0, #0
    1fb8:	beq	1fc4 <coda_time_parts_to_double+0xac>
    1fbc:	mvn	r0, #0
    1fc0:	b	1fe8 <coda_time_parts_to_double+0xd0>
    1fc4:	vldr	d7, [pc, #68]	; 2010 <coda_time_parts_to_double+0xf8>
    1fc8:	ldr	r3, [sp, #40]	; 0x28
    1fcc:	vmov	s4, r3
    1fd0:	vcvt.f64.s32	d2, s4
    1fd4:	vmul.f64	d6, d7, d2
    1fd8:	vldr	d0, [sp, #48]	; 0x30
    1fdc:	vadd.f64	d0, d6, d0
    1fe0:	vstr	d0, [r8]
    1fe4:	mov	r0, #0
    1fe8:	ldr	r4, [sp, #16]
    1fec:	ldr	r5, [sp, #20]
    1ff0:	ldr	r6, [sp, #24]
    1ff4:	ldr	r7, [sp, #28]
    1ff8:	ldr	r8, [sp, #32]
    1ffc:	ldr	lr, [sp, #8]
    2000:	add	sp, sp, #56	; 0x38
    2004:	bx	lr
    2008:	.word	0x000001fa
    200c:	.word	0x000006c6
    2010:	.word	0x00000000
    2014:	.word	0x40f51800

00002018 <coda_time_parts_to_double_utc>:
    2018:	mov	ip, sp
    201c:	sub	sp, sp, #64	; 0x40
    2020:	str	ip, [sp, #4]
    2024:	str	lr, [sp, #8]
    2028:	str	r4, [sp, #16]
    202c:	str	r5, [sp, #20]
    2030:	str	r6, [sp, #24]
    2034:	str	r7, [sp, #28]
    2038:	str	r8, [sp, #32]
    203c:	vstr	d8, [sp, #40]	; 0x28
    2040:	ldr	r6, [ip, #12]
    2044:	ldr	r5, [ip, #8]
    2048:	ldr	r7, [ip, #4]
    204c:	ldr	r8, [ip]
    2050:	mov	r4, r3
    2054:	mov	ip, r2
    2058:	mov	r2, r0
    205c:	mov	r0, ip
    2060:	cmp	r6, #0
    2064:	bne	2084 <coda_time_parts_to_double_utc+0x6c>
    2068:	mvn	r0, #99	; 0x63
    206c:	ldr	r1, [pc, #292]	; 2198 <coda_time_parts_to_double_utc+0x180>
    2070:	ldr	r2, [pc, #292]	; 219c <coda_time_parts_to_double_utc+0x184>
    2074:	mov	r3, #1008	; 0x3f0
    2078:	bl	0 <coda_set_error>
    207c:	mvn	r0, #0
    2080:	b	2168 <coda_time_parts_to_double_utc+0x150>
    2084:	add	r3, sp, #48	; 0x30
    2088:	bl	5bc <dmy_to_mjd2000>
    208c:	cmp	r0, #0
    2090:	beq	209c <coda_time_parts_to_double_utc+0x84>
    2094:	mvn	r0, #0
    2098:	b	2168 <coda_time_parts_to_double_utc+0x150>
    209c:	add	r1, sp, #56	; 0x38
    20a0:	str	r1, [sp]
    20a4:	mov	r3, r5
    20a8:	mov	r2, r7
    20ac:	mov	r1, r8
    20b0:	mov	r0, r4
    20b4:	bl	fb0 <hms_to_daytime>
    20b8:	cmp	r0, #0
    20bc:	beq	20c8 <coda_time_parts_to_double_utc+0xb0>
    20c0:	mvn	r0, #0
    20c4:	b	2168 <coda_time_parts_to_double_utc+0x150>
    20c8:	vldr	d7, [pc, #212]	; 21a4 <coda_time_parts_to_double_utc+0x18c>
    20cc:	ldr	r0, [sp, #48]	; 0x30
    20d0:	vmov	s0, r0
    20d4:	vcvt.f64.s32	d0, s0
    20d8:	vmul.f64	d1, d7, d0
    20dc:	vmov.f64	d3, #36	; 0x41200000  10.0
    20e0:	vadd.f64	d8, d1, d3
    20e4:	ldr	r1, [pc, #160]	; 218c <coda_time_parts_to_double_utc+0x174>
    20e8:	ldr	r3, [r1]
    20ec:	cmp	r3, #0
    20f0:	beq	2104 <coda_time_parts_to_double_utc+0xec>
    20f4:	ldr	ip, [pc, #152]	; 2194 <coda_time_parts_to_double_utc+0x17c>
    20f8:	ldr	r2, [ip]
    20fc:	cmp	r2, #0
    2100:	bgt	2118 <coda_time_parts_to_double_utc+0x100>
    2104:	ldr	r0, [pc, #132]	; 2190 <coda_time_parts_to_double_utc+0x178>
    2108:	ldr	r1, [pc, #140]	; 219c <coda_time_parts_to_double_utc+0x184>
    210c:	mov	r2, #1024	; 0x400
    2110:	ldr	r3, [pc, #136]	; 21a0 <coda_time_parts_to_double_utc+0x188>
    2114:	bl	0 <__assert_fail>
    2118:	mov	r0, #0
    211c:	ldr	r3, [pc, #112]	; 2194 <coda_time_parts_to_double_utc+0x17c>
    2120:	ldr	ip, [r3]
    2124:	cmp	r0, ip
    2128:	bge	2158 <coda_time_parts_to_double_utc+0x140>
    212c:	ldr	r2, [pc, #88]	; 218c <coda_time_parts_to_double_utc+0x174>
    2130:	ldr	r2, [r2]
    2134:	add	r1, r2, r0, lsl #3
    2138:	vldr	d5, [r1]
    213c:	vcmp.f64	d8, d5
    2140:	vmrs	APSR_nzcv, fpscr
    2144:	blt	2158 <coda_time_parts_to_double_utc+0x140>
    2148:	vmov.f64	d3, #112	; 0x3f800000  1.0
    214c:	vadd.f64	d8, d8, d3
    2150:	add	r0, r0, #1
    2154:	b	211c <coda_time_parts_to_double_utc+0x104>
    2158:	vldr	d1, [sp, #56]	; 0x38
    215c:	vadd.f64	d0, d8, d1
    2160:	vstr	d0, [r6]
    2164:	mov	r0, #0
    2168:	ldr	r4, [sp, #16]
    216c:	ldr	r5, [sp, #20]
    2170:	ldr	r6, [sp, #24]
    2174:	ldr	r7, [sp, #28]
    2178:	ldr	r8, [sp, #32]
    217c:	vldr	d8, [sp, #40]	; 0x28
    2180:	ldr	lr, [sp, #8]
    2184:	add	sp, sp, #64	; 0x40
    2188:	bx	lr
    218c:	.word	0x00000004
    2190:	.word	0x00000281
    2194:	.word	0x00000000
    2198:	.word	0x000001fa
    219c:	.word	0x000006c6
    21a0:	.word	0x000008fc
    21a4:	.word	0x00000000
    21a8:	.word	0x40f51800

000021ac <coda_time_parts_to_string>:
    21ac:	mov	ip, sp
    21b0:	sub	sp, sp, #120	; 0x78
    21b4:	str	ip, [sp]
    21b8:	str	lr, [sp, #4]
    21bc:	str	r4, [sp, #28]
    21c0:	str	r5, [sp, #32]
    21c4:	str	r6, [sp, #36]	; 0x24
    21c8:	str	r7, [sp, #40]	; 0x28
    21cc:	str	r8, [sp, #44]	; 0x2c
    21d0:	str	r9, [sp, #48]	; 0x30
    21d4:	str	sl, [sp, #52]	; 0x34
    21d8:	str	fp, [sp, #56]	; 0x38
    21dc:	ldr	r9, [ip, #16]
    21e0:	ldr	r8, [ip, #12]
    21e4:	ldr	ip, [ip, #8]
    21e8:	str	ip, [sp, #24]
    21ec:	ldr	ip, [sp]
    21f0:	ldr	ip, [ip, #4]
    21f4:	str	ip, [sp, #16]
    21f8:	ldr	ip, [sp]
    21fc:	ldr	ip, [ip]
    2200:	str	ip, [sp, #20]
    2204:	str	r3, [sp, #12]
    2208:	str	r2, [sp, #8]
    220c:	mov	r4, r1
    2210:	mov	r7, r0
    2214:	ldr	r0, [pc, #1512]	; 2804 <coda_time_parts_to_string+0x658>
    2218:	str	r0, [sp, #72]	; 0x48
    221c:	ldr	r2, [pc, #1536]	; 2824 <coda_time_parts_to_string+0x678>
    2220:	str	r2, [sp, #76]	; 0x4c
    2224:	ldr	r1, [pc, #1508]	; 2810 <coda_time_parts_to_string+0x664>
    2228:	str	r1, [sp, #80]	; 0x50
    222c:	ldr	ip, [pc, #1492]	; 2808 <coda_time_parts_to_string+0x65c>
    2230:	str	ip, [sp, #84]	; 0x54
    2234:	ldr	r2, [pc, #1588]	; 2870 <coda_time_parts_to_string+0x6c4>
    2238:	str	r2, [sp, #88]	; 0x58
    223c:	ldr	r3, [pc, #1568]	; 2864 <coda_time_parts_to_string+0x6b8>
    2240:	str	r3, [sp, #92]	; 0x5c
    2244:	ldr	r1, [pc, #1472]	; 280c <coda_time_parts_to_string+0x660>
    2248:	str	r1, [sp, #96]	; 0x60
    224c:	ldr	r2, [pc, #1568]	; 2874 <coda_time_parts_to_string+0x6c8>
    2250:	str	r2, [sp, #100]	; 0x64
    2254:	ldr	ip, [pc, #1488]	; 282c <coda_time_parts_to_string+0x680>
    2258:	str	ip, [sp, #104]	; 0x68
    225c:	ldr	ip, [pc, #1504]	; 2844 <coda_time_parts_to_string+0x698>
    2260:	str	ip, [sp, #108]	; 0x6c
    2264:	ldr	ip, [pc, #1488]	; 283c <coda_time_parts_to_string+0x690>
    2268:	str	ip, [sp, #112]	; 0x70
    226c:	ldr	r2, [pc, #1504]	; 2854 <coda_time_parts_to_string+0x6a8>
    2270:	str	r2, [sp, #116]	; 0x74
    2274:	mov	r6, #0
    2278:	mov	r5, #0
    227c:	mov	fp, #0
    2280:	cmp	r8, #0
    2284:	bne	22a4 <coda_time_parts_to_string+0xf8>
    2288:	mvn	r0, #99	; 0x63
    228c:	ldr	r1, [pc, #1468]	; 2850 <coda_time_parts_to_string+0x6a4>
    2290:	ldr	r2, [pc, #1460]	; 284c <coda_time_parts_to_string+0x6a0>
    2294:	movw	r3, #1069	; 0x42d
    2298:	bl	0 <coda_set_error>
    229c:	mvn	r0, #0
    22a0:	b	27d8 <coda_time_parts_to_string+0x62c>
    22a4:	cmp	r9, #0
    22a8:	bne	22c8 <coda_time_parts_to_string+0x11c>
    22ac:	mvn	r0, #99	; 0x63
    22b0:	ldr	r1, [pc, #1408]	; 2838 <coda_time_parts_to_string+0x68c>
    22b4:	ldr	r2, [pc, #1424]	; 284c <coda_time_parts_to_string+0x6a0>
    22b8:	movw	r3, #1074	; 0x432
    22bc:	bl	0 <coda_set_error>
    22c0:	mvn	r0, #0
    22c4:	b	27d8 <coda_time_parts_to_string+0x62c>
    22c8:	ldrb	ip, [r8, r5]
    22cc:	cmp	ip, #0
    22d0:	beq	27b4 <coda_time_parts_to_string+0x608>
    22d4:	cmp	r6, #0
    22d8:	bne	22e4 <coda_time_parts_to_string+0x138>
    22dc:	cmp	ip, #124	; 0x7c
    22e0:	beq	27b4 <coda_time_parts_to_string+0x608>
    22e4:	ldrb	r0, [r8, r5]
    22e8:	cmp	r0, #39	; 0x27
    22ec:	bne	2308 <coda_time_parts_to_string+0x15c>
    22f0:	add	r5, r5, #1
    22f4:	ldrb	r0, [r8, r5]
    22f8:	cmp	r0, #39	; 0x27
    22fc:	beq	2308 <coda_time_parts_to_string+0x15c>
    2300:	eor	r6, r6, #1
    2304:	b	22c8 <coda_time_parts_to_string+0x11c>
    2308:	cmp	r6, #0
    230c:	bne	27a0 <coda_time_parts_to_string+0x5f4>
    2310:	ldrb	ip, [r8, r5]
    2314:	cmp	ip, #121	; 0x79
    2318:	bne	239c <coda_time_parts_to_string+0x1f0>
    231c:	add	ip, r8, r5
    2320:	ldrb	r0, [ip, #1]
    2324:	cmp	r0, #121	; 0x79
    2328:	bne	239c <coda_time_parts_to_string+0x1f0>
    232c:	ldrb	r2, [ip, #2]
    2330:	cmp	r2, #121	; 0x79
    2334:	bne	239c <coda_time_parts_to_string+0x1f0>
    2338:	ldrb	r2, [ip, #3]
    233c:	cmp	r2, #121	; 0x79
    2340:	bne	239c <coda_time_parts_to_string+0x1f0>
    2344:	mov	r0, #1
    2348:	movw	lr, #9999	; 0x270f
    234c:	cmp	r7, lr
    2350:	movgt	r1, #1
    2354:	movle	r1, #0
    2358:	cmp	r7, #0
    235c:	movlt	r3, r0
    2360:	movge	r3, r1
    2364:	cmp	r3, #0
    2368:	beq	2380 <coda_time_parts_to_string+0x1d4>
    236c:	mvn	r0, #103	; 0x67
    2370:	ldr	r1, [pc, #1264]	; 2868 <coda_time_parts_to_string+0x6bc>
    2374:	bl	0 <coda_set_error>
    2378:	mvn	r0, #0
    237c:	b	27d8 <coda_time_parts_to_string+0x62c>
    2380:	add	r0, r9, fp
    2384:	ldr	r1, [pc, #1192]	; 2834 <coda_time_parts_to_string+0x688>
    2388:	mov	r2, r7
    238c:	bl	0 <sprintf>
    2390:	add	r5, r5, #4
    2394:	add	fp, fp, #4
    2398:	b	22c8 <coda_time_parts_to_string+0x11c>
    239c:	ldrb	r2, [r8, r5]
    23a0:	cmp	r2, #77	; 0x4d
    23a4:	bne	2438 <coda_time_parts_to_string+0x28c>
    23a8:	add	r3, r8, r5
    23ac:	ldrb	r0, [r3, #1]
    23b0:	cmp	r0, #77	; 0x4d
    23b4:	bne	2438 <coda_time_parts_to_string+0x28c>
    23b8:	mov	r1, #1
    23bc:	cmp	r4, #12
    23c0:	movgt	r0, #1
    23c4:	movle	r0, #0
    23c8:	cmp	r4, #1
    23cc:	movlt	r2, r1
    23d0:	movge	r2, r0
    23d4:	cmp	r2, #0
    23d8:	beq	23f0 <coda_time_parts_to_string+0x244>
    23dc:	mvn	r0, #103	; 0x67
    23e0:	ldr	r1, [pc, #1076]	; 281c <coda_time_parts_to_string+0x670>
    23e4:	bl	0 <coda_set_error>
    23e8:	mvn	r0, #0
    23ec:	b	27d8 <coda_time_parts_to_string+0x62c>
    23f0:	ldrb	r2, [r3, #2]
    23f4:	cmp	r2, #77	; 0x4d
    23f8:	bne	241c <coda_time_parts_to_string+0x270>
    23fc:	add	r0, r9, fp
    2400:	ldr	r1, [pc, #1080]	; 2840 <coda_time_parts_to_string+0x694>
    2404:	add	r2, sp, #72	; 0x48
    2408:	ldr	r2, [r2, r4, lsl #2]
    240c:	bl	0 <sprintf>
    2410:	add	r5, r5, #3
    2414:	add	fp, fp, #3
    2418:	b	22c8 <coda_time_parts_to_string+0x11c>
    241c:	add	r0, r9, fp
    2420:	ldr	r1, [pc, #1056]	; 2848 <coda_time_parts_to_string+0x69c>
    2424:	mov	r2, r4
    2428:	bl	0 <sprintf>
    242c:	add	r5, r5, #2
    2430:	add	fp, fp, #2
    2434:	b	22c8 <coda_time_parts_to_string+0x11c>
    2438:	ldrb	r1, [r8, r5]
    243c:	cmp	r1, #100	; 0x64
    2440:	bne	24ac <coda_time_parts_to_string+0x300>
    2444:	add	r0, r8, r5
    2448:	ldrb	ip, [r0, #1]
    244c:	cmp	ip, #100	; 0x64
    2450:	bne	24ac <coda_time_parts_to_string+0x300>
    2454:	mov	r2, #1
    2458:	ldr	ip, [sp, #8]
    245c:	cmp	ip, #31
    2460:	movgt	r3, #1
    2464:	movle	r3, #0
    2468:	cmp	ip, #1
    246c:	movlt	r1, r2
    2470:	movge	r1, r3
    2474:	cmp	r1, #0
    2478:	beq	2490 <coda_time_parts_to_string+0x2e4>
    247c:	mvn	r0, #103	; 0x67
    2480:	ldr	r1, [pc, #984]	; 2860 <coda_time_parts_to_string+0x6b4>
    2484:	bl	0 <coda_set_error>
    2488:	mvn	r0, #0
    248c:	b	27d8 <coda_time_parts_to_string+0x62c>
    2490:	add	r0, r9, fp
    2494:	ldr	r1, [pc, #940]	; 2848 <coda_time_parts_to_string+0x69c>
    2498:	ldr	r2, [sp, #8]
    249c:	bl	0 <sprintf>
    24a0:	add	r5, r5, #2
    24a4:	add	fp, fp, #2
    24a8:	b	22c8 <coda_time_parts_to_string+0x11c>
    24ac:	ldrb	r1, [r8, r5]
    24b0:	cmp	r1, #68	; 0x44
    24b4:	bne	2544 <coda_time_parts_to_string+0x398>
    24b8:	add	ip, r8, r5
    24bc:	ldrb	r3, [ip, #1]
    24c0:	cmp	r3, #68	; 0x44
    24c4:	bne	2544 <coda_time_parts_to_string+0x398>
    24c8:	ldrb	r1, [ip, #2]
    24cc:	cmp	r1, #68	; 0x44
    24d0:	bne	2544 <coda_time_parts_to_string+0x398>
    24d4:	add	r3, sp, #68	; 0x44
    24d8:	mov	r2, r7
    24dc:	mov	r1, r4
    24e0:	ldr	r0, [sp, #8]
    24e4:	bl	5bc <dmy_to_mjd2000>
    24e8:	cmp	r0, #0
    24ec:	beq	24f8 <coda_time_parts_to_string+0x34c>
    24f0:	mvn	r0, #0
    24f4:	b	27d8 <coda_time_parts_to_string+0x62c>
    24f8:	mov	r0, #1
    24fc:	mov	r1, #1
    2500:	add	r3, sp, #64	; 0x40
    2504:	mov	r2, r7
    2508:	bl	5bc <dmy_to_mjd2000>
    250c:	cmp	r0, #0
    2510:	beq	251c <coda_time_parts_to_string+0x370>
    2514:	mvn	r0, #0
    2518:	b	27d8 <coda_time_parts_to_string+0x62c>
    251c:	add	r0, r9, fp
    2520:	ldr	r1, [pc, #768]	; 2828 <coda_time_parts_to_string+0x67c>
    2524:	ldr	r2, [sp, #68]	; 0x44
    2528:	ldr	ip, [sp, #64]	; 0x40
    252c:	sub	r2, r2, ip
    2530:	add	r2, r2, #1
    2534:	bl	0 <sprintf>
    2538:	add	r5, r5, #3
    253c:	add	fp, fp, #3
    2540:	b	22c8 <coda_time_parts_to_string+0x11c>
    2544:	ldrb	r0, [r8, r5]
    2548:	cmp	r0, #72	; 0x48
    254c:	bne	25b8 <coda_time_parts_to_string+0x40c>
    2550:	add	r1, r8, r5
    2554:	ldrb	r2, [r1, #1]
    2558:	cmp	r2, #72	; 0x48
    255c:	bne	25b8 <coda_time_parts_to_string+0x40c>
    2560:	mov	r3, #1
    2564:	ldr	r0, [sp, #12]
    2568:	cmp	r0, #23
    256c:	movgt	ip, #1
    2570:	movle	ip, #0
    2574:	cmp	r0, #0
    2578:	movlt	r1, r3
    257c:	movge	r1, ip
    2580:	cmp	r1, #0
    2584:	beq	259c <coda_time_parts_to_string+0x3f0>
    2588:	mvn	r0, #103	; 0x67
    258c:	ldr	r1, [pc, #652]	; 2820 <coda_time_parts_to_string+0x674>
    2590:	bl	0 <coda_set_error>
    2594:	mvn	r0, #0
    2598:	b	27d8 <coda_time_parts_to_string+0x62c>
    259c:	add	r0, r9, fp
    25a0:	ldr	r1, [pc, #672]	; 2848 <coda_time_parts_to_string+0x69c>
    25a4:	ldr	r2, [sp, #12]
    25a8:	bl	0 <sprintf>
    25ac:	add	r5, r5, #2
    25b0:	add	fp, fp, #2
    25b4:	b	22c8 <coda_time_parts_to_string+0x11c>
    25b8:	ldrb	r0, [r8, r5]
    25bc:	cmp	r0, #109	; 0x6d
    25c0:	bne	262c <coda_time_parts_to_string+0x480>
    25c4:	add	r1, r8, r5
    25c8:	ldrb	r3, [r1, #1]
    25cc:	cmp	r3, #109	; 0x6d
    25d0:	bne	262c <coda_time_parts_to_string+0x480>
    25d4:	mov	r1, #1
    25d8:	ldr	r3, [sp, #20]
    25dc:	cmp	r3, #59	; 0x3b
    25e0:	movgt	r2, #1
    25e4:	movle	r2, #0
    25e8:	cmp	r3, #0
    25ec:	movlt	r0, r1
    25f0:	movge	r0, r2
    25f4:	cmp	r0, #0
    25f8:	beq	2610 <coda_time_parts_to_string+0x464>
    25fc:	mvn	r0, #103	; 0x67
    2600:	ldr	r1, [pc, #528]	; 2818 <coda_time_parts_to_string+0x66c>
    2604:	bl	0 <coda_set_error>
    2608:	mvn	r0, #0
    260c:	b	27d8 <coda_time_parts_to_string+0x62c>
    2610:	add	r0, r9, fp
    2614:	ldr	r1, [pc, #556]	; 2848 <coda_time_parts_to_string+0x69c>
    2618:	ldr	r2, [sp, #20]
    261c:	bl	0 <sprintf>
    2620:	add	r5, r5, #2
    2624:	add	fp, fp, #2
    2628:	b	22c8 <coda_time_parts_to_string+0x11c>
    262c:	ldrb	r2, [r8, r5]
    2630:	cmp	r2, #115	; 0x73
    2634:	bne	26a0 <coda_time_parts_to_string+0x4f4>
    2638:	add	r3, r8, r5
    263c:	ldrb	r0, [r3, #1]
    2640:	cmp	r0, #115	; 0x73
    2644:	bne	26a0 <coda_time_parts_to_string+0x4f4>
    2648:	mov	r0, #1
    264c:	ldr	r2, [sp, #16]
    2650:	cmp	r2, #60	; 0x3c
    2654:	movgt	r1, #1
    2658:	movle	r1, #0
    265c:	cmp	r2, #0
    2660:	movlt	ip, r0
    2664:	movge	ip, r1
    2668:	cmp	ip, #0
    266c:	beq	2684 <coda_time_parts_to_string+0x4d8>
    2670:	mvn	r0, #103	; 0x67
    2674:	ldr	r1, [pc, #408]	; 2814 <coda_time_parts_to_string+0x668>
    2678:	bl	0 <coda_set_error>
    267c:	mvn	r0, #0
    2680:	b	27d8 <coda_time_parts_to_string+0x62c>
    2684:	add	r0, r9, fp
    2688:	ldr	r1, [pc, #440]	; 2848 <coda_time_parts_to_string+0x69c>
    268c:	ldr	r2, [sp, #16]
    2690:	bl	0 <sprintf>
    2694:	add	r5, r5, #2
    2698:	add	fp, fp, #2
    269c:	b	22c8 <coda_time_parts_to_string+0x11c>
    26a0:	ldrb	r0, [r8, r5]
    26a4:	cmp	r0, #83	; 0x53
    26a8:	bne	2750 <coda_time_parts_to_string+0x5a4>
    26ac:	ldr	r3, [sp, #24]
    26b0:	mov	sl, #0
    26b4:	mov	r2, #1
    26b8:	ldr	r0, [sp, #24]
    26bc:	movw	lr, #16959	; 0x423f
    26c0:	movt	lr, #15
    26c4:	cmp	r0, lr
    26c8:	movgt	r1, #1
    26cc:	movle	r1, #0
    26d0:	cmp	r0, #0
    26d4:	movlt	r2, r2
    26d8:	movge	r2, r1
    26dc:	cmp	r2, #0
    26e0:	beq	26f8 <coda_time_parts_to_string+0x54c>
    26e4:	mvn	r0, #103	; 0x67
    26e8:	ldr	r1, [pc, #360]	; 2858 <coda_time_parts_to_string+0x6ac>
    26ec:	bl	0 <coda_set_error>
    26f0:	mvn	r0, #0
    26f4:	b	27d8 <coda_time_parts_to_string+0x62c>
    26f8:	ldrb	ip, [r8, r5]
    26fc:	cmp	ip, #83	; 0x53
    2700:	bne	2710 <coda_time_parts_to_string+0x564>
    2704:	add	r5, r5, #1
    2708:	add	sl, sl, #1
    270c:	b	26f8 <coda_time_parts_to_string+0x54c>
    2710:	mov	r2, sl
    2714:	cmp	r2, #6
    2718:	bge	2738 <coda_time_parts_to_string+0x58c>
    271c:	lsr	ip, r3, #31
    2720:	movw	r0, #26215	; 0x6667
    2724:	movt	r0, #26214	; 0x6666
    2728:	smull	lr, r1, r3, r0
    272c:	add	r3, ip, r1, asr #2
    2730:	add	r2, r2, #1
    2734:	b	2714 <coda_time_parts_to_string+0x568>
    2738:	add	r0, r9, fp
    273c:	ldr	r1, [pc, #280]	; 285c <coda_time_parts_to_string+0x6b0>
    2740:	mov	r2, sl
    2744:	bl	0 <sprintf>
    2748:	add	fp, fp, sl
    274c:	b	22c8 <coda_time_parts_to_string+0x11c>
    2750:	cmp	r0, #65	; 0x41
    2754:	blt	2760 <coda_time_parts_to_string+0x5b4>
    2758:	cmp	r0, #90	; 0x5a
    275c:	ble	2774 <coda_time_parts_to_string+0x5c8>
    2760:	ldrb	r3, [r8, r5]
    2764:	cmp	r3, #97	; 0x61
    2768:	blt	278c <coda_time_parts_to_string+0x5e0>
    276c:	cmp	r3, #122	; 0x7a
    2770:	bgt	278c <coda_time_parts_to_string+0x5e0>
    2774:	mvn	r0, #102	; 0x66
    2778:	ldr	r1, [pc, #236]	; 286c <coda_time_parts_to_string+0x6c0>
    277c:	mov	r2, r8
    2780:	bl	0 <coda_set_error>
    2784:	mvn	r0, #0
    2788:	b	27d8 <coda_time_parts_to_string+0x62c>
    278c:	ldrb	r2, [r8, r5]
    2790:	strb	r2, [r9, fp]
    2794:	add	r5, r5, #1
    2798:	add	fp, fp, #1
    279c:	b	22c8 <coda_time_parts_to_string+0x11c>
    27a0:	ldrb	r1, [r8, r5]
    27a4:	strb	r1, [r9, fp]
    27a8:	add	r5, r5, #1
    27ac:	add	fp, fp, #1
    27b0:	b	22c8 <coda_time_parts_to_string+0x11c>
    27b4:	cmp	r6, #0
    27b8:	beq	27d4 <coda_time_parts_to_string+0x628>
    27bc:	mvn	r0, #102	; 0x66
    27c0:	ldr	r1, [pc, #104]	; 2830 <coda_time_parts_to_string+0x684>
    27c4:	mov	r2, r8
    27c8:	bl	0 <coda_set_error>
    27cc:	mvn	r0, #0
    27d0:	b	27d8 <coda_time_parts_to_string+0x62c>
    27d4:	mov	r0, #0
    27d8:	ldr	r4, [sp, #28]
    27dc:	ldr	r5, [sp, #32]
    27e0:	ldr	r6, [sp, #36]	; 0x24
    27e4:	ldr	r7, [sp, #40]	; 0x28
    27e8:	ldr	r8, [sp, #44]	; 0x2c
    27ec:	ldr	r9, [sp, #48]	; 0x30
    27f0:	ldr	sl, [sp, #52]	; 0x34
    27f4:	ldr	fp, [sp, #56]	; 0x38
    27f8:	ldr	lr, [sp, #4]
    27fc:	add	sp, sp, #120	; 0x78
    2800:	bx	lr
    2804:	.word	0x000003e1
    2808:	.word	0x000005dd
    280c:	.word	0x00000239
    2810:	.word	0x0000003a
    2814:	.word	0x000001bf
    2818:	.word	0x000004e8
    281c:	.word	0x0000006a
    2820:	.word	0x0000003e
    2824:	.word	0x000000d8
    2828:	.word	0x0000063a
    282c:	.word	0x000000d4
    2830:	.word	0x000002c2
    2834:	.word	0x000001ed
    2838:	.word	0x00000827
    283c:	.word	0x000003e5
    2840:	.word	0x00000000
    2844:	.word	0x00000823
    2848:	.word	0x00000741
    284c:	.word	0x000006c6
    2850:	.word	0x0000037b
    2854:	.word	0x000001f2
    2858:	.word	0x00000100
    285c:	.word	0x00000746
    2860:	.word	0x00000338
    2864:	.word	0x000004c8
    2868:	.word	0x00000472
    286c:	.word	0x00000003
    2870:	.word	0x000002b3
    2874:	.word	0x000007bd

00002878 <string_to_parts>:
    2878:	mov	ip, sp
    287c:	sub	sp, sp, #72	; 0x48
    2880:	str	ip, [sp]
    2884:	str	lr, [sp, #4]
    2888:	str	r4, [sp, #28]
    288c:	str	r5, [sp, #32]
    2890:	str	r6, [sp, #36]	; 0x24
    2894:	str	r7, [sp, #40]	; 0x28
    2898:	str	r8, [sp, #44]	; 0x2c
    289c:	str	r9, [sp, #48]	; 0x30
    28a0:	str	sl, [sp, #52]	; 0x34
    28a4:	str	fp, [sp, #56]	; 0x38
    28a8:	ldr	r4, [ip, #16]
    28ac:	ldr	ip, [ip, #12]
    28b0:	str	ip, [sp, #16]
    28b4:	ldr	ip, [sp]
    28b8:	ldr	ip, [ip, #8]
    28bc:	str	ip, [sp, #20]
    28c0:	ldr	ip, [sp]
    28c4:	ldr	ip, [ip, #4]
    28c8:	str	ip, [sp, #24]
    28cc:	ldr	ip, [sp]
    28d0:	ldr	ip, [ip]
    28d4:	str	ip, [sp, #12]
    28d8:	mov	r9, r3
    28dc:	str	r2, [sp, #8]
    28e0:	mov	r8, r1
    28e4:	mov	sl, r0
    28e8:	mov	r5, #0
    28ec:	mov	fp, #0
    28f0:	mov	r7, #0
    28f4:	mov	ip, #2000	; 0x7d0
    28f8:	ldr	r0, [sp, #8]
    28fc:	str	ip, [r0]
    2900:	mov	r0, #1
    2904:	str	r0, [r9]
    2908:	mov	r1, #1
    290c:	ldr	r2, [sp, #12]
    2910:	str	r1, [r2]
    2914:	mov	r1, #0
    2918:	ldr	r2, [sp, #24]
    291c:	str	r1, [r2]
    2920:	mov	r3, #0
    2924:	ldr	ip, [sp, #20]
    2928:	str	r3, [ip]
    292c:	mov	r0, #0
    2930:	ldr	r1, [sp, #16]
    2934:	str	r0, [r1]
    2938:	mov	r3, #0
    293c:	str	r3, [r4]
    2940:	ldrb	r2, [sl, r5]
    2944:	cmp	r2, #0
    2948:	beq	2f08 <string_to_parts+0x690>
    294c:	cmp	r7, #0
    2950:	bne	295c <string_to_parts+0xe4>
    2954:	cmp	r2, #124	; 0x7c
    2958:	beq	2f08 <string_to_parts+0x690>
    295c:	ldrb	r0, [sl, r5]
    2960:	cmp	r0, #39	; 0x27
    2964:	bne	2980 <string_to_parts+0x108>
    2968:	add	r5, r5, #1
    296c:	ldrb	r2, [sl, r5]
    2970:	cmp	r2, #39	; 0x27
    2974:	beq	2980 <string_to_parts+0x108>
    2978:	eor	r7, r7, #1
    297c:	b	2940 <string_to_parts+0xc8>
    2980:	cmp	r7, #0
    2984:	bne	2ed0 <string_to_parts+0x658>
    2988:	ldrb	r3, [sl, r5]
    298c:	cmp	r3, #121	; 0x79
    2990:	bne	2a20 <string_to_parts+0x1a8>
    2994:	add	r2, sl, r5
    2998:	ldrb	r3, [r2, #1]
    299c:	cmp	r3, #121	; 0x79
    29a0:	bne	2a20 <string_to_parts+0x1a8>
    29a4:	ldrb	ip, [r2, #2]
    29a8:	cmp	ip, #121	; 0x79
    29ac:	bne	2a20 <string_to_parts+0x1a8>
    29b0:	ldrb	r3, [r2, #3]
    29b4:	cmp	r3, #121	; 0x79
    29b8:	bne	2a20 <string_to_parts+0x1a8>
    29bc:	ldrb	r3, [r2, #4]
    29c0:	cmp	r3, #42	; 0x2a
    29c4:	moveq	r2, #1
    29c8:	movne	r2, #0
    29cc:	add	r0, r8, fp
    29d0:	mov	r1, #4
    29d4:	ldr	r3, [sp, #8]
    29d8:	bl	204 <parse_integer>
    29dc:	cmp	r0, #0
    29e0:	beq	2a00 <string_to_parts+0x188>
    29e4:	mvn	r0, #103	; 0x67
    29e8:	ldr	r1, [pc, #1468]	; 2fac <string_to_parts+0x734>
    29ec:	mov	r3, sl
    29f0:	mov	r2, r8
    29f4:	bl	0 <coda_set_error>
    29f8:	mvn	r0, #0
    29fc:	b	2f54 <string_to_parts+0x6dc>
    2a00:	ldrb	r0, [sl, r5]
    2a04:	cmp	r0, #42	; 0x2a
    2a08:	moveq	r2, #1
    2a0c:	movne	r2, #0
    2a10:	add	r3, r5, r2
    2a14:	add	r5, r3, #4
    2a18:	add	fp, fp, #4
    2a1c:	b	2940 <string_to_parts+0xc8>
    2a20:	ldrb	r3, [sl, r5]
    2a24:	cmp	r3, #77	; 0x4d
    2a28:	bne	2ae8 <string_to_parts+0x270>
    2a2c:	add	r1, sl, r5
    2a30:	ldrb	ip, [r1, #1]
    2a34:	cmp	ip, #77	; 0x4d
    2a38:	bne	2ae8 <string_to_parts+0x270>
    2a3c:	ldrb	ip, [r1, #2]
    2a40:	cmp	ip, #77	; 0x4d
    2a44:	beq	2aac <string_to_parts+0x234>
    2a48:	cmp	ip, #42	; 0x2a
    2a4c:	moveq	r2, #1
    2a50:	movne	r2, #0
    2a54:	add	r0, r8, fp
    2a58:	mov	r1, #2
    2a5c:	mov	r3, r9
    2a60:	bl	204 <parse_integer>
    2a64:	cmp	r0, #0
    2a68:	beq	2a88 <string_to_parts+0x210>
    2a6c:	mvn	r0, #103	; 0x67
    2a70:	ldr	r1, [pc, #1316]	; 2f9c <string_to_parts+0x724>
    2a74:	mov	r3, sl
    2a78:	mov	r2, r8
    2a7c:	bl	0 <coda_set_error>
    2a80:	mvn	r0, #0
    2a84:	b	2f54 <string_to_parts+0x6dc>
    2a88:	add	ip, sl, r5
    2a8c:	ldrb	r3, [ip, #2]
    2a90:	cmp	r3, #42	; 0x2a
    2a94:	moveq	r1, #1
    2a98:	movne	r1, #0
    2a9c:	add	r0, r5, r1
    2aa0:	add	r5, r0, #2
    2aa4:	add	fp, fp, #2
    2aa8:	b	2940 <string_to_parts+0xc8>
    2aac:	add	r0, r8, fp
    2ab0:	bl	0 <coda_month_to_integer>
    2ab4:	str	r0, [r9]
    2ab8:	cmn	r0, #1
    2abc:	bne	2adc <string_to_parts+0x264>
    2ac0:	mvn	r0, #103	; 0x67
    2ac4:	ldr	r1, [pc, #1232]	; 2f9c <string_to_parts+0x724>
    2ac8:	mov	r3, sl
    2acc:	mov	r2, r8
    2ad0:	bl	0 <coda_set_error>
    2ad4:	mvn	r0, #0
    2ad8:	b	2f54 <string_to_parts+0x6dc>
    2adc:	add	r5, r5, #3
    2ae0:	add	fp, fp, #3
    2ae4:	b	2940 <string_to_parts+0xc8>
    2ae8:	ldrb	r1, [sl, r5]
    2aec:	cmp	r1, #100	; 0x64
    2af0:	bne	2b6c <string_to_parts+0x2f4>
    2af4:	add	r0, sl, r5
    2af8:	ldrb	ip, [r0, #1]
    2afc:	cmp	ip, #100	; 0x64
    2b00:	bne	2b6c <string_to_parts+0x2f4>
    2b04:	ldrb	r0, [r0, #2]
    2b08:	cmp	r0, #42	; 0x2a
    2b0c:	moveq	r2, #1
    2b10:	movne	r2, #0
    2b14:	add	r0, r8, fp
    2b18:	mov	r1, #2
    2b1c:	ldr	r3, [sp, #12]
    2b20:	bl	204 <parse_integer>
    2b24:	cmp	r0, #0
    2b28:	beq	2b48 <string_to_parts+0x2d0>
    2b2c:	mvn	r0, #103	; 0x67
    2b30:	ldr	r1, [pc, #1128]	; 2fa0 <string_to_parts+0x728>
    2b34:	mov	r3, sl
    2b38:	mov	r2, r8
    2b3c:	bl	0 <coda_set_error>
    2b40:	mvn	r0, #0
    2b44:	b	2f54 <string_to_parts+0x6dc>
    2b48:	add	r0, sl, r5
    2b4c:	ldrb	r3, [r0, #2]
    2b50:	cmp	r3, #42	; 0x2a
    2b54:	moveq	r1, #1
    2b58:	movne	r1, #0
    2b5c:	add	r2, r5, r1
    2b60:	add	r5, r2, #2
    2b64:	add	fp, fp, #2
    2b68:	b	2940 <string_to_parts+0xc8>
    2b6c:	ldrb	r0, [sl, r5]
    2b70:	cmp	r0, #68	; 0x44
    2b74:	bne	2c38 <string_to_parts+0x3c0>
    2b78:	add	r1, sl, r5
    2b7c:	ldrb	r2, [r1, #1]
    2b80:	cmp	r2, #68	; 0x44
    2b84:	bne	2c38 <string_to_parts+0x3c0>
    2b88:	ldrb	r0, [r1, #2]
    2b8c:	cmp	r0, #68	; 0x44
    2b90:	bne	2c38 <string_to_parts+0x3c0>
    2b94:	ldrb	r2, [r1, #3]
    2b98:	cmp	r2, #42	; 0x2a
    2b9c:	moveq	r2, #1
    2ba0:	movne	r2, #0
    2ba4:	add	r0, r8, fp
    2ba8:	mov	r1, #3
    2bac:	add	r3, sp, #64	; 0x40
    2bb0:	bl	204 <parse_integer>
    2bb4:	cmp	r0, #0
    2bb8:	beq	2bd8 <string_to_parts+0x360>
    2bbc:	mvn	r0, #103	; 0x67
    2bc0:	ldr	r1, [pc, #984]	; 2fa0 <string_to_parts+0x728>
    2bc4:	mov	r3, sl
    2bc8:	mov	r2, r8
    2bcc:	bl	0 <coda_set_error>
    2bd0:	mvn	r0, #0
    2bd4:	b	2f54 <string_to_parts+0x6dc>
    2bd8:	ldr	r3, [sp, #8]
    2bdc:	ldr	r0, [r3]
    2be0:	ldr	r1, [sp, #64]	; 0x40
    2be4:	ldr	r3, [sp, #12]
    2be8:	mov	r2, r9
    2bec:	bl	1158 <coda_dayofyear_to_month_day>
    2bf0:	cmp	r0, #0
    2bf4:	beq	2c14 <string_to_parts+0x39c>
    2bf8:	mvn	r0, #103	; 0x67
    2bfc:	ldr	r1, [pc, #908]	; 2f90 <string_to_parts+0x718>
    2c00:	mov	r3, sl
    2c04:	mov	r2, r8
    2c08:	bl	0 <coda_set_error>
    2c0c:	mvn	r0, #0
    2c10:	b	2f54 <string_to_parts+0x6dc>
    2c14:	add	ip, sl, r5
    2c18:	ldrb	r3, [ip, #3]
    2c1c:	cmp	r3, #42	; 0x2a
    2c20:	moveq	ip, #1
    2c24:	movne	ip, #0
    2c28:	add	r2, r5, ip
    2c2c:	add	r5, r2, #3
    2c30:	add	fp, fp, #3
    2c34:	b	2940 <string_to_parts+0xc8>
    2c38:	ldrb	r1, [sl, r5]
    2c3c:	cmp	r1, #72	; 0x48
    2c40:	bne	2cbc <string_to_parts+0x444>
    2c44:	add	r3, sl, r5
    2c48:	ldrb	r2, [r3, #1]
    2c4c:	cmp	r2, #72	; 0x48
    2c50:	bne	2cbc <string_to_parts+0x444>
    2c54:	ldrb	r2, [r3, #2]
    2c58:	cmp	r2, #42	; 0x2a
    2c5c:	moveq	r2, #1
    2c60:	movne	r2, #0
    2c64:	add	r0, r8, fp
    2c68:	mov	r1, #2
    2c6c:	ldr	r3, [sp, #24]
    2c70:	bl	204 <parse_integer>
    2c74:	cmp	r0, #0
    2c78:	beq	2c98 <string_to_parts+0x420>
    2c7c:	mvn	r0, #103	; 0x67
    2c80:	ldr	r1, [pc, #780]	; 2f94 <string_to_parts+0x71c>
    2c84:	mov	r3, sl
    2c88:	mov	r2, r8
    2c8c:	bl	0 <coda_set_error>
    2c90:	mvn	r0, #0
    2c94:	b	2f54 <string_to_parts+0x6dc>
    2c98:	add	r2, sl, r5
    2c9c:	ldrb	r1, [r2, #2]
    2ca0:	cmp	r1, #42	; 0x2a
    2ca4:	moveq	r3, #1
    2ca8:	movne	r3, #0
    2cac:	add	ip, r5, r3
    2cb0:	add	r5, ip, #2
    2cb4:	add	fp, fp, #2
    2cb8:	b	2940 <string_to_parts+0xc8>
    2cbc:	ldrb	r2, [sl, r5]
    2cc0:	cmp	r2, #109	; 0x6d
    2cc4:	bne	2d40 <string_to_parts+0x4c8>
    2cc8:	add	r2, sl, r5
    2ccc:	ldrb	r0, [r2, #1]
    2cd0:	cmp	r0, #109	; 0x6d
    2cd4:	bne	2d40 <string_to_parts+0x4c8>
    2cd8:	ldrb	r3, [r2, #2]
    2cdc:	cmp	r3, #42	; 0x2a
    2ce0:	moveq	r2, #1
    2ce4:	movne	r2, #0
    2ce8:	add	r0, r8, fp
    2cec:	mov	r1, #2
    2cf0:	ldr	r3, [sp, #20]
    2cf4:	bl	204 <parse_integer>
    2cf8:	cmp	r0, #0
    2cfc:	beq	2d1c <string_to_parts+0x4a4>
    2d00:	mvn	r0, #103	; 0x67
    2d04:	ldr	r1, [pc, #632]	; 2f84 <string_to_parts+0x70c>
    2d08:	mov	r3, sl
    2d0c:	mov	r2, r8
    2d10:	bl	0 <coda_set_error>
    2d14:	mvn	r0, #0
    2d18:	b	2f54 <string_to_parts+0x6dc>
    2d1c:	add	ip, sl, r5
    2d20:	ldrb	r1, [ip, #2]
    2d24:	cmp	r1, #42	; 0x2a
    2d28:	moveq	r0, #1
    2d2c:	movne	r0, #0
    2d30:	add	r0, r5, r0
    2d34:	add	r5, r0, #2
    2d38:	add	fp, fp, #2
    2d3c:	b	2940 <string_to_parts+0xc8>
    2d40:	ldrb	ip, [sl, r5]
    2d44:	cmp	ip, #115	; 0x73
    2d48:	bne	2dc4 <string_to_parts+0x54c>
    2d4c:	add	r0, sl, r5
    2d50:	ldrb	r3, [r0, #1]
    2d54:	cmp	r3, #115	; 0x73
    2d58:	bne	2dc4 <string_to_parts+0x54c>
    2d5c:	ldrb	ip, [r0, #2]
    2d60:	cmp	ip, #42	; 0x2a
    2d64:	moveq	r2, #1
    2d68:	movne	r2, #0
    2d6c:	add	r0, r8, fp
    2d70:	mov	r1, #2
    2d74:	ldr	r3, [sp, #16]
    2d78:	bl	204 <parse_integer>
    2d7c:	cmp	r0, #0
    2d80:	beq	2da0 <string_to_parts+0x528>
    2d84:	mvn	r0, #103	; 0x67
    2d88:	ldr	r1, [pc, #504]	; 2f88 <string_to_parts+0x710>
    2d8c:	mov	r3, sl
    2d90:	mov	r2, r8
    2d94:	bl	0 <coda_set_error>
    2d98:	mvn	r0, #0
    2d9c:	b	2f54 <string_to_parts+0x6dc>
    2da0:	add	r1, sl, r5
    2da4:	ldrb	r1, [r1, #2]
    2da8:	cmp	r1, #42	; 0x2a
    2dac:	moveq	r1, #1
    2db0:	movne	r1, #0
    2db4:	add	r2, r5, r1
    2db8:	add	r5, r2, #2
    2dbc:	add	fp, fp, #2
    2dc0:	b	2940 <string_to_parts+0xc8>
    2dc4:	ldrb	r3, [sl, r5]
    2dc8:	cmp	r3, #83	; 0x53
    2dcc:	bne	2e54 <string_to_parts+0x5dc>
    2dd0:	mov	r6, #0
    2dd4:	ldrb	r1, [sl, r5]
    2dd8:	cmp	r1, #83	; 0x53
    2ddc:	bne	2dec <string_to_parts+0x574>
    2de0:	add	r5, r5, #1
    2de4:	add	r6, r6, #1
    2de8:	b	2dd4 <string_to_parts+0x55c>
    2dec:	mov	r0, #6
    2df0:	cmp	r6, #6
    2df4:	movgt	r1, r0
    2df8:	movle	r1, r6
    2dfc:	add	r0, r8, fp
    2e00:	mov	r2, #0
    2e04:	mov	r3, r4
    2e08:	bl	204 <parse_integer>
    2e0c:	cmp	r0, #0
    2e10:	beq	2e30 <string_to_parts+0x5b8>
    2e14:	mvn	r0, #103	; 0x67
    2e18:	ldr	r1, [pc, #376]	; 2f98 <string_to_parts+0x720>
    2e1c:	mov	r3, sl
    2e20:	mov	r2, r8
    2e24:	bl	0 <coda_set_error>
    2e28:	mvn	r0, #0
    2e2c:	b	2f54 <string_to_parts+0x6dc>
    2e30:	add	fp, fp, r6
    2e34:	cmp	r6, #6
    2e38:	bge	2940 <string_to_parts+0xc8>
    2e3c:	ldr	r0, [r4]
    2e40:	lsl	ip, r0, #3
    2e44:	add	r3, ip, r0, lsl #1
    2e48:	str	r3, [r4]
    2e4c:	add	r6, r6, #1
    2e50:	b	2e34 <string_to_parts+0x5bc>
    2e54:	cmp	r3, #65	; 0x41
    2e58:	blt	2e64 <string_to_parts+0x5ec>
    2e5c:	cmp	r3, #90	; 0x5a
    2e60:	ble	2eb8 <string_to_parts+0x640>
    2e64:	ldrb	r0, [sl, r5]
    2e68:	cmp	r0, #97	; 0x61
    2e6c:	blt	2e78 <string_to_parts+0x600>
    2e70:	cmp	r0, #122	; 0x7a
    2e74:	ble	2eb8 <string_to_parts+0x640>
    2e78:	ldrb	ip, [sl, r5]
    2e7c:	cmp	ip, #42	; 0x2a
    2e80:	beq	2eb8 <string_to_parts+0x640>
    2e84:	ldrb	r1, [r8, fp]
    2e88:	cmp	ip, r1
    2e8c:	beq	2eac <string_to_parts+0x634>
    2e90:	mvn	r0, #103	; 0x67
    2e94:	ldr	r1, [pc, #264]	; 2fa4 <string_to_parts+0x72c>
    2e98:	mov	r3, sl
    2e9c:	mov	r2, r8
    2ea0:	bl	0 <coda_set_error>
    2ea4:	mvn	r0, #0
    2ea8:	b	2f54 <string_to_parts+0x6dc>
    2eac:	add	r5, r5, #1
    2eb0:	add	fp, fp, #1
    2eb4:	b	2940 <string_to_parts+0xc8>
    2eb8:	mvn	r0, #102	; 0x66
    2ebc:	ldr	r1, [pc, #228]	; 2fa8 <string_to_parts+0x730>
    2ec0:	mov	r2, sl
    2ec4:	bl	0 <coda_set_error>
    2ec8:	mvn	r0, #0
    2ecc:	b	2f54 <string_to_parts+0x6dc>
    2ed0:	ldrb	r3, [sl, r5]
    2ed4:	ldrb	r1, [r8, fp]
    2ed8:	cmp	r3, r1
    2edc:	beq	2efc <string_to_parts+0x684>
    2ee0:	mvn	r0, #103	; 0x67
    2ee4:	ldr	r1, [pc, #184]	; 2fa4 <string_to_parts+0x72c>
    2ee8:	mov	r3, sl
    2eec:	mov	r2, r8
    2ef0:	bl	0 <coda_set_error>
    2ef4:	mvn	r0, #0
    2ef8:	b	2f54 <string_to_parts+0x6dc>
    2efc:	add	r5, r5, #1
    2f00:	add	fp, fp, #1
    2f04:	b	2940 <string_to_parts+0xc8>
    2f08:	cmp	r7, #0
    2f0c:	beq	2f28 <string_to_parts+0x6b0>
    2f10:	mvn	r0, #102	; 0x66
    2f14:	ldr	r1, [pc, #112]	; 2f8c <string_to_parts+0x714>
    2f18:	mov	r2, sl
    2f1c:	bl	0 <coda_set_error>
    2f20:	mvn	r0, #0
    2f24:	b	2f54 <string_to_parts+0x6dc>
    2f28:	ldrb	r1, [r8, fp]
    2f2c:	cmp	r1, #0
    2f30:	beq	2f50 <string_to_parts+0x6d8>
    2f34:	mvn	r0, #103	; 0x67
    2f38:	ldr	r1, [pc, #64]	; 2f80 <string_to_parts+0x708>
    2f3c:	mov	r3, sl
    2f40:	mov	r2, r8
    2f44:	bl	0 <coda_set_error>
    2f48:	mvn	r0, #0
    2f4c:	b	2f54 <string_to_parts+0x6dc>
    2f50:	mov	r0, #0
    2f54:	ldr	r4, [sp, #28]
    2f58:	ldr	r5, [sp, #32]
    2f5c:	ldr	r6, [sp, #36]	; 0x24
    2f60:	ldr	r7, [sp, #40]	; 0x28
    2f64:	ldr	r8, [sp, #44]	; 0x2c
    2f68:	ldr	r9, [sp, #48]	; 0x30
    2f6c:	ldr	sl, [sp, #52]	; 0x34
    2f70:	ldr	fp, [sp, #56]	; 0x38
    2f74:	ldr	lr, [sp, #4]
    2f78:	add	sp, sp, #72	; 0x48
    2f7c:	bx	lr
    2f80:	.word	0x0000023d
    2f84:	.word	0x0000017c
    2f88:	.word	0x000002ed
    2f8c:	.word	0x000002c2
    2f90:	.word	0x000007c1
    2f94:	.word	0x0000055a
    2f98:	.word	0x000005e1
    2f9c:	.word	0x0000063f
    2fa0:	.word	0x0000051a
    2fa4:	.word	0x0000039b
    2fa8:	.word	0x00000003
    2fac:	.word	0x00000681

00002fb0 <coda_time_string_to_parts>:
    2fb0:	mov	ip, sp
    2fb4:	sub	sp, sp, #80	; 0x50
    2fb8:	str	ip, [sp, #20]
    2fbc:	str	lr, [sp, #24]
    2fc0:	str	r4, [sp, #44]	; 0x2c
    2fc4:	str	r5, [sp, #48]	; 0x30
    2fc8:	str	r6, [sp, #52]	; 0x34
    2fcc:	str	r7, [sp, #56]	; 0x38
    2fd0:	str	r8, [sp, #60]	; 0x3c
    2fd4:	str	r9, [sp, #64]	; 0x40
    2fd8:	str	sl, [sp, #68]	; 0x44
    2fdc:	str	fp, [sp, #72]	; 0x48
    2fe0:	ldr	ip, [ip, #16]
    2fe4:	str	ip, [sp, #36]	; 0x24
    2fe8:	ldr	ip, [sp, #20]
    2fec:	ldr	ip, [ip, #12]
    2ff0:	str	ip, [sp, #32]
    2ff4:	ldr	ip, [sp, #20]
    2ff8:	ldr	r9, [ip, #8]
    2ffc:	ldr	r5, [ip, #4]
    3000:	ldr	ip, [ip]
    3004:	str	ip, [sp, #40]	; 0x28
    3008:	mov	r7, r3
    300c:	mov	r4, r2
    3010:	mov	r8, r1
    3014:	mov	r6, r0
    3018:	mov	fp, #0
    301c:	mov	sl, #0
    3020:	cmp	r6, #0
    3024:	bne	3044 <coda_time_string_to_parts+0x94>
    3028:	mvn	r0, #99	; 0x63
    302c:	ldr	r1, [pc, #620]	; 32a0 <coda_time_string_to_parts+0x2f0>
    3030:	ldr	r2, [pc, #612]	; 329c <coda_time_string_to_parts+0x2ec>
    3034:	movw	r3, #1468	; 0x5bc
    3038:	bl	0 <coda_set_error>
    303c:	mvn	r0, #0
    3040:	b	3268 <coda_time_string_to_parts+0x2b8>
    3044:	cmp	r8, #0
    3048:	bne	3068 <coda_time_string_to_parts+0xb8>
    304c:	mvn	r0, #99	; 0x63
    3050:	ldr	r1, [pc, #576]	; 3298 <coda_time_string_to_parts+0x2e8>
    3054:	ldr	r2, [pc, #576]	; 329c <coda_time_string_to_parts+0x2ec>
    3058:	movw	r3, #1473	; 0x5c1
    305c:	bl	0 <coda_set_error>
    3060:	mvn	r0, #0
    3064:	b	3268 <coda_time_string_to_parts+0x2b8>
    3068:	mov	r3, #1
    306c:	cmp	r7, #0
    3070:	moveq	r1, #1
    3074:	movne	r1, #0
    3078:	cmp	r4, #0
    307c:	moveq	r3, r3
    3080:	movne	r3, r1
    3084:	mov	r1, #1
    3088:	ldr	r2, [sp, #40]	; 0x28
    308c:	cmp	r2, #0
    3090:	moveq	r0, #1
    3094:	movne	r0, #0
    3098:	cmp	r3, #0
    309c:	movne	ip, r1
    30a0:	moveq	ip, r0
    30a4:	mov	r0, #1
    30a8:	cmp	r5, #0
    30ac:	moveq	r1, #1
    30b0:	movne	r1, #0
    30b4:	cmp	ip, #0
    30b8:	movne	r1, r0
    30bc:	moveq	r1, r1
    30c0:	mov	r3, #1
    30c4:	cmp	r9, #0
    30c8:	moveq	r2, #1
    30cc:	movne	r2, #0
    30d0:	cmp	r1, #0
    30d4:	movne	r0, r3
    30d8:	moveq	r0, r2
    30dc:	mov	ip, #1
    30e0:	ldr	r2, [sp, #32]
    30e4:	cmp	r2, #0
    30e8:	moveq	r2, #1
    30ec:	movne	r2, #0
    30f0:	cmp	r0, #0
    30f4:	movne	ip, ip
    30f8:	moveq	ip, r2
    30fc:	mov	r3, #1
    3100:	ldr	r0, [sp, #36]	; 0x24
    3104:	cmp	r0, #0
    3108:	moveq	r2, #1
    310c:	movne	r2, #0
    3110:	cmp	ip, #0
    3114:	movne	r0, r3
    3118:	moveq	r0, r2
    311c:	cmp	r0, #0
    3120:	beq	3140 <coda_time_string_to_parts+0x190>
    3124:	mvn	r0, #99	; 0x63
    3128:	ldr	r1, [pc, #372]	; 32a4 <coda_time_string_to_parts+0x2f4>
    312c:	ldr	r2, [pc, #360]	; 329c <coda_time_string_to_parts+0x2ec>
    3130:	movw	r3, #1479	; 0x5c7
    3134:	bl	0 <coda_set_error>
    3138:	mvn	r0, #0
    313c:	b	3268 <coda_time_string_to_parts+0x2b8>
    3140:	ldrb	ip, [r6, sl]
    3144:	cmp	ip, #0
    3148:	beq	3178 <coda_time_string_to_parts+0x1c8>
    314c:	cmp	fp, #0
    3150:	bne	315c <coda_time_string_to_parts+0x1ac>
    3154:	cmp	ip, #124	; 0x7c
    3158:	beq	3178 <coda_time_string_to_parts+0x1c8>
    315c:	eor	r2, fp, #1
    3160:	ldrb	r0, [r6, sl]
    3164:	cmp	r0, #39	; 0x27
    3168:	moveq	fp, r2
    316c:	movne	fp, fp
    3170:	add	sl, sl, #1
    3174:	b	3140 <coda_time_string_to_parts+0x190>
    3178:	ldrb	r3, [r6, sl]
    317c:	cmp	r3, #124	; 0x7c
    3180:	bne	3234 <coda_time_string_to_parts+0x284>
    3184:	mov	ip, #0
    3188:	add	r0, r6, ip
    318c:	ldr	ip, [sp, #36]	; 0x24
    3190:	str	ip, [sp, #16]
    3194:	ldr	ip, [sp, #32]
    3198:	str	ip, [sp, #12]
    319c:	str	r9, [sp, #8]
    31a0:	str	r5, [sp, #4]
    31a4:	ldr	ip, [sp, #40]	; 0x28
    31a8:	str	ip, [sp]
    31ac:	mov	r3, r7
    31b0:	mov	r2, r4
    31b4:	mov	r1, r8
    31b8:	bl	2878 <string_to_parts>
    31bc:	cmp	r0, #0
    31c0:	bne	31cc <coda_time_string_to_parts+0x21c>
    31c4:	mov	r0, #0
    31c8:	b	3268 <coda_time_string_to_parts+0x2b8>
    31cc:	ldrb	r1, [r6, sl]
    31d0:	cmp	r1, #0
    31d4:	bne	31f4 <coda_time_string_to_parts+0x244>
    31d8:	mvn	r0, #103	; 0x67
    31dc:	ldr	r1, [pc, #176]	; 3294 <coda_time_string_to_parts+0x2e4>
    31e0:	mov	r3, r6
    31e4:	mov	r2, r8
    31e8:	bl	0 <coda_set_error>
    31ec:	mvn	r0, #0
    31f0:	b	3268 <coda_time_string_to_parts+0x2b8>
    31f4:	add	sl, sl, #1
    31f8:	mov	ip, sl
    31fc:	ldrb	r0, [r6, sl]
    3200:	cmp	r0, #0
    3204:	beq	3188 <coda_time_string_to_parts+0x1d8>
    3208:	cmp	fp, #0
    320c:	bne	3218 <coda_time_string_to_parts+0x268>
    3210:	cmp	r0, #124	; 0x7c
    3214:	beq	3188 <coda_time_string_to_parts+0x1d8>
    3218:	eor	r0, fp, #1
    321c:	ldrb	r3, [r6, sl]
    3220:	cmp	r3, #39	; 0x27
    3224:	moveq	fp, r0
    3228:	movne	fp, fp
    322c:	add	sl, sl, #1
    3230:	b	31fc <coda_time_string_to_parts+0x24c>
    3234:	ldr	ip, [sp, #36]	; 0x24
    3238:	str	ip, [sp, #16]
    323c:	ldr	ip, [sp, #32]
    3240:	str	ip, [sp, #12]
    3244:	str	r9, [sp, #8]
    3248:	str	r5, [sp, #4]
    324c:	ldr	ip, [sp, #40]	; 0x28
    3250:	str	ip, [sp]
    3254:	mov	r3, r7
    3258:	mov	r2, r4
    325c:	mov	r1, r8
    3260:	mov	r0, r6
    3264:	bl	2878 <string_to_parts>
    3268:	ldr	r4, [sp, #44]	; 0x2c
    326c:	ldr	r5, [sp, #48]	; 0x30
    3270:	ldr	r6, [sp, #52]	; 0x34
    3274:	ldr	r7, [sp, #56]	; 0x38
    3278:	ldr	r8, [sp, #60]	; 0x3c
    327c:	ldr	r9, [sp, #64]	; 0x40
    3280:	ldr	sl, [sp, #68]	; 0x44
    3284:	ldr	fp, [sp, #72]	; 0x48
    3288:	ldr	lr, [sp, #24]
    328c:	add	sp, sp, #80	; 0x50
    3290:	bx	lr
    3294:	.word	0x000003e9
    3298:	.word	0x00000827
    329c:	.word	0x000006c6
    32a0:	.word	0x0000037b
    32a4:	.word	0x000005b6

000032a8 <coda_time_double_to_string>:
    32a8:	mov	ip, sp
    32ac:	sub	sp, sp, #80	; 0x50
    32b0:	str	ip, [sp, #20]
    32b4:	str	lr, [sp, #24]
    32b8:	str	r4, [sp, #32]
    32bc:	str	r5, [sp, #36]	; 0x24
    32c0:	str	r6, [sp, #40]	; 0x28
    32c4:	str	r8, [sp, #44]	; 0x2c
    32c8:	mov	r4, r1
    32cc:	mov	r5, r0
    32d0:	add	r0, sp, #60	; 0x3c
    32d4:	add	r1, sp, #64	; 0x40
    32d8:	add	r2, sp, #68	; 0x44
    32dc:	add	r3, sp, #72	; 0x48
    32e0:	add	r8, sp, #52	; 0x34
    32e4:	add	r6, sp, #56	; 0x38
    32e8:	add	ip, sp, #48	; 0x30
    32ec:	str	ip, [sp, #8]
    32f0:	str	r6, [sp, #4]
    32f4:	str	r8, [sp]
    32f8:	bl	1904 <coda_time_double_to_parts>
    32fc:	cmp	r0, #0
    3300:	beq	330c <coda_time_double_to_string+0x64>
    3304:	mvn	r0, #0
    3308:	b	3340 <coda_time_double_to_string+0x98>
    330c:	ldr	r0, [sp, #60]	; 0x3c
    3310:	ldr	r1, [sp, #64]	; 0x40
    3314:	ldr	r2, [sp, #68]	; 0x44
    3318:	ldr	r3, [sp, #72]	; 0x48
    331c:	ldr	ip, [sp, #52]	; 0x34
    3320:	ldr	r8, [sp, #56]	; 0x38
    3324:	ldr	r6, [sp, #48]	; 0x30
    3328:	str	r4, [sp, #16]
    332c:	str	r5, [sp, #12]
    3330:	str	r6, [sp, #8]
    3334:	str	r8, [sp, #4]
    3338:	str	ip, [sp]
    333c:	bl	21ac <coda_time_parts_to_string>
    3340:	ldr	r4, [sp, #32]
    3344:	ldr	r5, [sp, #36]	; 0x24
    3348:	ldr	r6, [sp, #40]	; 0x28
    334c:	ldr	r8, [sp, #44]	; 0x2c
    3350:	ldr	lr, [sp, #24]
    3354:	add	sp, sp, #80	; 0x50
    3358:	bx	lr

0000335c <coda_time_double_to_string_utc>:
    335c:	mov	ip, sp
    3360:	sub	sp, sp, #80	; 0x50
    3364:	str	ip, [sp, #20]
    3368:	str	lr, [sp, #24]
    336c:	str	r4, [sp, #32]
    3370:	str	r5, [sp, #36]	; 0x24
    3374:	str	r6, [sp, #40]	; 0x28
    3378:	str	r8, [sp, #44]	; 0x2c
    337c:	mov	r4, r1
    3380:	mov	r5, r0
    3384:	add	r0, sp, #60	; 0x3c
    3388:	add	r1, sp, #64	; 0x40
    338c:	add	r2, sp, #68	; 0x44
    3390:	add	r3, sp, #72	; 0x48
    3394:	add	r8, sp, #52	; 0x34
    3398:	add	r6, sp, #56	; 0x38
    339c:	add	ip, sp, #48	; 0x30
    33a0:	str	ip, [sp, #8]
    33a4:	str	r6, [sp, #4]
    33a8:	str	r8, [sp]
    33ac:	bl	1ba4 <coda_time_double_to_parts_utc>
    33b0:	cmp	r0, #0
    33b4:	beq	33c0 <coda_time_double_to_string_utc+0x64>
    33b8:	mvn	r0, #0
    33bc:	b	33f4 <coda_time_double_to_string_utc+0x98>
    33c0:	ldr	r0, [sp, #60]	; 0x3c
    33c4:	ldr	r1, [sp, #64]	; 0x40
    33c8:	ldr	r2, [sp, #68]	; 0x44
    33cc:	ldr	r3, [sp, #72]	; 0x48
    33d0:	ldr	ip, [sp, #52]	; 0x34
    33d4:	ldr	r8, [sp, #56]	; 0x38
    33d8:	ldr	r6, [sp, #48]	; 0x30
    33dc:	str	r4, [sp, #16]
    33e0:	str	r5, [sp, #12]
    33e4:	str	r6, [sp, #8]
    33e8:	str	r8, [sp, #4]
    33ec:	str	ip, [sp]
    33f0:	bl	21ac <coda_time_parts_to_string>
    33f4:	ldr	r4, [sp, #32]
    33f8:	ldr	r5, [sp, #36]	; 0x24
    33fc:	ldr	r6, [sp, #40]	; 0x28
    3400:	ldr	r8, [sp, #44]	; 0x2c
    3404:	ldr	lr, [sp, #24]
    3408:	add	sp, sp, #80	; 0x50
    340c:	bx	lr

00003410 <coda_time_string_to_double>:
    3410:	mov	ip, sp
    3414:	sub	sp, sp, #88	; 0x58
    3418:	str	ip, [sp, #20]
    341c:	str	lr, [sp, #24]
    3420:	str	r4, [sp, #32]
    3424:	str	r5, [sp, #36]	; 0x24
    3428:	str	r6, [sp, #40]	; 0x28
    342c:	str	r7, [sp, #44]	; 0x2c
    3430:	str	r8, [sp, #48]	; 0x30
    3434:	str	r9, [sp, #52]	; 0x34
    3438:	mov	r4, r2
    343c:	add	r2, sp, #68	; 0x44
    3440:	add	r3, sp, #72	; 0x48
    3444:	add	r5, sp, #76	; 0x4c
    3448:	add	r6, sp, #80	; 0x50
    344c:	add	r9, sp, #60	; 0x3c
    3450:	add	r8, sp, #64	; 0x40
    3454:	add	ip, sp, #56	; 0x38
    3458:	str	ip, [sp, #16]
    345c:	str	r8, [sp, #12]
    3460:	str	r9, [sp, #8]
    3464:	str	r6, [sp, #4]
    3468:	str	r5, [sp]
    346c:	bl	2fb0 <coda_time_string_to_parts>
    3470:	cmp	r0, #0
    3474:	beq	3480 <coda_time_string_to_double+0x70>
    3478:	mvn	r0, #0
    347c:	b	34b0 <coda_time_string_to_double+0xa0>
    3480:	ldr	r0, [sp, #68]	; 0x44
    3484:	ldr	r1, [sp, #72]	; 0x48
    3488:	ldr	r2, [sp, #76]	; 0x4c
    348c:	ldr	r3, [sp, #80]	; 0x50
    3490:	ldr	ip, [sp, #60]	; 0x3c
    3494:	ldr	r7, [sp, #64]	; 0x40
    3498:	ldr	r6, [sp, #56]	; 0x38
    349c:	str	r4, [sp, #12]
    34a0:	str	r6, [sp, #8]
    34a4:	str	r7, [sp, #4]
    34a8:	str	ip, [sp]
    34ac:	bl	1f18 <coda_time_parts_to_double>
    34b0:	ldr	r4, [sp, #32]
    34b4:	ldr	r5, [sp, #36]	; 0x24
    34b8:	ldr	r6, [sp, #40]	; 0x28
    34bc:	ldr	r7, [sp, #44]	; 0x2c
    34c0:	ldr	r8, [sp, #48]	; 0x30
    34c4:	ldr	r9, [sp, #52]	; 0x34
    34c8:	ldr	lr, [sp, #24]
    34cc:	add	sp, sp, #88	; 0x58
    34d0:	bx	lr

000034d4 <coda_time_string_to_double_utc>:
    34d4:	mov	ip, sp
    34d8:	sub	sp, sp, #88	; 0x58
    34dc:	str	ip, [sp, #20]
    34e0:	str	lr, [sp, #24]
    34e4:	str	r4, [sp, #32]
    34e8:	str	r5, [sp, #36]	; 0x24
    34ec:	str	r6, [sp, #40]	; 0x28
    34f0:	str	r7, [sp, #44]	; 0x2c
    34f4:	str	r8, [sp, #48]	; 0x30
    34f8:	str	r9, [sp, #52]	; 0x34
    34fc:	mov	r4, r2
    3500:	add	r2, sp, #68	; 0x44
    3504:	add	r3, sp, #72	; 0x48
    3508:	add	r5, sp, #76	; 0x4c
    350c:	add	r6, sp, #80	; 0x50
    3510:	add	r9, sp, #60	; 0x3c
    3514:	add	r8, sp, #64	; 0x40
    3518:	add	ip, sp, #56	; 0x38
    351c:	str	ip, [sp, #16]
    3520:	str	r8, [sp, #12]
    3524:	str	r9, [sp, #8]
    3528:	str	r6, [sp, #4]
    352c:	str	r5, [sp]
    3530:	bl	2fb0 <coda_time_string_to_parts>
    3534:	cmp	r0, #0
    3538:	beq	3544 <coda_time_string_to_double_utc+0x70>
    353c:	mvn	r0, #0
    3540:	b	3574 <coda_time_string_to_double_utc+0xa0>
    3544:	ldr	r0, [sp, #68]	; 0x44
    3548:	ldr	r1, [sp, #72]	; 0x48
    354c:	ldr	r2, [sp, #76]	; 0x4c
    3550:	ldr	r3, [sp, #80]	; 0x50
    3554:	ldr	ip, [sp, #60]	; 0x3c
    3558:	ldr	r7, [sp, #64]	; 0x40
    355c:	ldr	r6, [sp, #56]	; 0x38
    3560:	str	r4, [sp, #12]
    3564:	str	r6, [sp, #8]
    3568:	str	r7, [sp, #4]
    356c:	str	ip, [sp]
    3570:	bl	2018 <coda_time_parts_to_double_utc>
    3574:	ldr	r4, [sp, #32]
    3578:	ldr	r5, [sp, #36]	; 0x24
    357c:	ldr	r6, [sp, #40]	; 0x28
    3580:	ldr	r7, [sp, #44]	; 0x2c
    3584:	ldr	r8, [sp, #48]	; 0x30
    3588:	ldr	r9, [sp, #52]	; 0x34
    358c:	ldr	lr, [sp, #24]
    3590:	add	sp, sp, #88	; 0x58
    3594:	bx	lr

00003598 <coda_datetime_to_double>:
    3598:	mov	ip, sp
    359c:	sub	sp, sp, #40	; 0x28
    35a0:	str	ip, [sp, #16]
    35a4:	str	lr, [sp, #20]
    35a8:	str	r4, [sp, #24]
    35ac:	str	r5, [sp, #28]
    35b0:	str	r6, [sp, #32]
    35b4:	str	r7, [sp, #36]	; 0x24
    35b8:	ldr	r4, [ip, #12]
    35bc:	ldr	r6, [ip, #8]
    35c0:	ldr	r5, [ip, #4]
    35c4:	ldr	r7, [ip]
    35c8:	str	r4, [sp, #12]
    35cc:	str	r6, [sp, #8]
    35d0:	str	r5, [sp, #4]
    35d4:	str	r7, [sp]
    35d8:	bl	1f18 <coda_time_parts_to_double>
    35dc:	ldr	r4, [sp, #24]
    35e0:	ldr	r5, [sp, #28]
    35e4:	ldr	r6, [sp, #32]
    35e8:	ldr	r7, [sp, #36]	; 0x24
    35ec:	ldr	lr, [sp, #20]
    35f0:	add	sp, sp, #40	; 0x28
    35f4:	bx	lr

000035f8 <coda_double_to_datetime>:
    35f8:	mov	ip, sp
    35fc:	sub	sp, sp, #40	; 0x28
    3600:	str	ip, [sp, #12]
    3604:	str	lr, [sp, #16]
    3608:	str	r4, [sp, #24]
    360c:	str	r5, [sp, #28]
    3610:	str	r6, [sp, #32]
    3614:	ldr	r4, [ip, #8]
    3618:	ldr	r6, [ip, #4]
    361c:	ldr	r5, [ip]
    3620:	str	r4, [sp, #8]
    3624:	str	r6, [sp, #4]
    3628:	str	r5, [sp]
    362c:	bl	1904 <coda_time_double_to_parts>
    3630:	ldr	r4, [sp, #24]
    3634:	ldr	r5, [sp, #28]
    3638:	ldr	r6, [sp, #32]
    363c:	ldr	lr, [sp, #16]
    3640:	add	sp, sp, #40	; 0x28
    3644:	bx	lr

00003648 <coda_time_to_string>:
    3648:	mov	ip, sp
    364c:	sub	sp, sp, #8
    3650:	str	ip, [sp]
    3654:	str	lr, [sp, #4]
    3658:	ldr	r1, [pc, #20]	; 3674 <coda_time_to_string+0x2c>
    365c:	mov	r2, r0
    3660:	mov	r0, r1
    3664:	mov	r1, r2
    3668:	ldr	lr, [sp, #4]
    366c:	add	sp, sp, #8
    3670:	b	32a8 <coda_time_double_to_string>
    3674:	.word	0x00000457

00003678 <coda_string_to_time>:
    3678:	mov	ip, sp
    367c:	sub	sp, sp, #8
    3680:	str	ip, [sp]
    3684:	str	lr, [sp, #4]
    3688:	ldr	r2, [pc, #24]	; 36a8 <coda_string_to_time+0x30>
    368c:	mov	r3, r1
    3690:	mov	r1, r0
    3694:	mov	r0, r2
    3698:	mov	r2, r3
    369c:	ldr	lr, [sp, #4]
    36a0:	add	sp, sp, #8
    36a4:	b	3410 <coda_time_string_to_double>
    36a8:	.word	0x00000844

000036ac <coda_utcdatetime_to_double>:
    36ac:	mov	ip, sp
    36b0:	sub	sp, sp, #40	; 0x28
    36b4:	str	ip, [sp, #16]
    36b8:	str	lr, [sp, #20]
    36bc:	str	r4, [sp, #24]
    36c0:	str	r5, [sp, #28]
    36c4:	str	r6, [sp, #32]
    36c8:	str	r7, [sp, #36]	; 0x24
    36cc:	ldr	r4, [ip, #12]
    36d0:	ldr	r6, [ip, #8]
    36d4:	ldr	r5, [ip, #4]
    36d8:	ldr	r7, [ip]
    36dc:	str	r4, [sp, #12]
    36e0:	str	r6, [sp, #8]
    36e4:	str	r5, [sp, #4]
    36e8:	str	r7, [sp]
    36ec:	bl	2018 <coda_time_parts_to_double_utc>
    36f0:	ldr	r4, [sp, #24]
    36f4:	ldr	r5, [sp, #28]
    36f8:	ldr	r6, [sp, #32]
    36fc:	ldr	r7, [sp, #36]	; 0x24
    3700:	ldr	lr, [sp, #20]
    3704:	add	sp, sp, #40	; 0x28
    3708:	bx	lr

0000370c <coda_double_to_utcdatetime>:
    370c:	mov	ip, sp
    3710:	sub	sp, sp, #40	; 0x28
    3714:	str	ip, [sp, #12]
    3718:	str	lr, [sp, #16]
    371c:	str	r4, [sp, #24]
    3720:	str	r5, [sp, #28]
    3724:	str	r6, [sp, #32]
    3728:	ldr	r4, [ip, #8]
    372c:	ldr	r6, [ip, #4]
    3730:	ldr	r5, [ip]
    3734:	str	r4, [sp, #8]
    3738:	str	r6, [sp, #4]
    373c:	str	r5, [sp]
    3740:	bl	1ba4 <coda_time_double_to_parts_utc>
    3744:	ldr	r4, [sp, #24]
    3748:	ldr	r5, [sp, #28]
    374c:	ldr	r6, [sp, #32]
    3750:	ldr	lr, [sp, #16]
    3754:	add	sp, sp, #40	; 0x28
    3758:	bx	lr

0000375c <coda_time_to_utcstring>:
    375c:	mov	ip, sp
    3760:	sub	sp, sp, #8
    3764:	str	ip, [sp]
    3768:	str	lr, [sp, #4]
    376c:	ldr	r1, [pc, #20]	; 3788 <coda_time_to_utcstring+0x2c>
    3770:	mov	r2, r0
    3774:	mov	r0, r1
    3778:	mov	r1, r2
    377c:	ldr	lr, [sp, #4]
    3780:	add	sp, sp, #8
    3784:	b	335c <coda_time_double_to_string_utc>
    3788:	.word	0x00000457

0000378c <coda_utcstring_to_time>:
    378c:	mov	ip, sp
    3790:	sub	sp, sp, #8
    3794:	str	ip, [sp]
    3798:	str	lr, [sp, #4]
    379c:	ldr	r2, [pc, #24]	; 37bc <coda_utcstring_to_time+0x30>
    37a0:	mov	r3, r1
    37a4:	mov	r1, r0
    37a8:	mov	r0, r2
    37ac:	mov	r2, r3
    37b0:	ldr	lr, [sp, #4]
    37b4:	add	sp, sp, #8
    37b8:	b	34d4 <coda_time_string_to_double_utc>
    37bc:	.word	0x00000844
