
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_basic_parse.dir/test_basic_parse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_space>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #16
      10:	str	r0, [fp, #-8]
      14:	str	r1, [fp, #-12]
      18:	str	r2, [fp, #-16]
      1c:	ldr	r2, [fp, #-16]
      20:	ldr	r3, [fp, #-12]
      24:	sub	r3, r2, r3
      28:	cmp	r3, #1
      2c:	ble	78 <flatcc_json_parser_space+0x78>
      30:	ldr	r3, [fp, #-12]
      34:	ldrb	r3, [r3]
      38:	cmp	r3, #32
      3c:	bls	48 <flatcc_json_parser_space+0x48>
      40:	ldr	r3, [fp, #-12]
      44:	b	8c <flatcc_json_parser_space+0x8c>
      48:	ldr	r3, [fp, #-12]
      4c:	ldrb	r3, [r3]
      50:	cmp	r3, #32
      54:	bne	78 <flatcc_json_parser_space+0x78>
      58:	ldr	r3, [fp, #-12]
      5c:	add	r3, r3, #1
      60:	ldrb	r3, [r3]
      64:	cmp	r3, #32
      68:	bls	78 <flatcc_json_parser_space+0x78>
      6c:	ldr	r3, [fp, #-12]
      70:	add	r3, r3, #1
      74:	b	8c <flatcc_json_parser_space+0x8c>
      78:	ldr	r2, [fp, #-16]
      7c:	ldr	r1, [fp, #-12]
      80:	ldr	r0, [fp, #-8]
      84:	bl	0 <flatcc_json_parser_space_ext>
      88:	mov	r3, r0
      8c:	mov	r0, r3
      90:	sub	sp, fp, #4
      94:	ldr	fp, [sp]
      98:	add	sp, sp, #4
      9c:	pop	{pc}		; (ldr pc, [sp], #4)

000000a0 <flatcc_json_parser_string_start>:
      a0:	str	fp, [sp, #-8]!
      a4:	str	lr, [sp, #4]
      a8:	add	fp, sp, #4
      ac:	sub	sp, sp, #16
      b0:	str	r0, [fp, #-8]
      b4:	str	r1, [fp, #-12]
      b8:	str	r2, [fp, #-16]
      bc:	ldr	r2, [fp, #-12]
      c0:	ldr	r3, [fp, #-16]
      c4:	cmp	r2, r3
      c8:	beq	dc <flatcc_json_parser_string_start+0x3c>
      cc:	ldr	r3, [fp, #-12]
      d0:	ldrb	r3, [r3]
      d4:	cmp	r3, #34	; 0x22
      d8:	beq	f8 <flatcc_json_parser_string_start+0x58>
      dc:	mov	r3, #16
      e0:	ldr	r2, [fp, #-16]
      e4:	ldr	r1, [fp, #-12]
      e8:	ldr	r0, [fp, #-8]
      ec:	bl	0 <flatcc_json_parser_set_error>
      f0:	mov	r3, r0
      f4:	b	108 <flatcc_json_parser_string_start+0x68>
      f8:	ldr	r3, [fp, #-12]
      fc:	add	r3, r3, #1
     100:	str	r3, [fp, #-12]
     104:	ldr	r3, [fp, #-12]
     108:	mov	r0, r3
     10c:	sub	sp, fp, #4
     110:	ldr	fp, [sp]
     114:	add	sp, sp, #4
     118:	pop	{pc}		; (ldr pc, [sp], #4)

0000011c <flatcc_json_parser_string_end>:
     11c:	str	fp, [sp, #-8]!
     120:	str	lr, [sp, #4]
     124:	add	fp, sp, #4
     128:	sub	sp, sp, #16
     12c:	str	r0, [fp, #-8]
     130:	str	r1, [fp, #-12]
     134:	str	r2, [fp, #-16]
     138:	ldr	r2, [fp, #-12]
     13c:	ldr	r3, [fp, #-16]
     140:	cmp	r2, r3
     144:	beq	158 <flatcc_json_parser_string_end+0x3c>
     148:	ldr	r3, [fp, #-12]
     14c:	ldrb	r3, [r3]
     150:	cmp	r3, #34	; 0x22
     154:	beq	174 <flatcc_json_parser_string_end+0x58>
     158:	mov	r3, #20
     15c:	ldr	r2, [fp, #-16]
     160:	ldr	r1, [fp, #-12]
     164:	ldr	r0, [fp, #-8]
     168:	bl	0 <flatcc_json_parser_set_error>
     16c:	mov	r3, r0
     170:	b	184 <flatcc_json_parser_string_end+0x68>
     174:	ldr	r3, [fp, #-12]
     178:	add	r3, r3, #1
     17c:	str	r3, [fp, #-12]
     180:	ldr	r3, [fp, #-12]
     184:	mov	r0, r3
     188:	sub	sp, fp, #4
     18c:	ldr	fp, [sp]
     190:	add	sp, sp, #4
     194:	pop	{pc}		; (ldr pc, [sp], #4)

00000198 <flatcc_json_parser_symbol_start>:
     198:	str	fp, [sp, #-8]!
     19c:	str	lr, [sp, #4]
     1a0:	add	fp, sp, #4
     1a4:	sub	sp, sp, #16
     1a8:	str	r0, [fp, #-8]
     1ac:	str	r1, [fp, #-12]
     1b0:	str	r2, [fp, #-16]
     1b4:	ldr	r2, [fp, #-12]
     1b8:	ldr	r3, [fp, #-16]
     1bc:	cmp	r2, r3
     1c0:	bne	1cc <flatcc_json_parser_symbol_start+0x34>
     1c4:	ldr	r3, [fp, #-12]
     1c8:	b	234 <flatcc_json_parser_symbol_start+0x9c>
     1cc:	ldr	r3, [fp, #-12]
     1d0:	ldrb	r3, [r3]
     1d4:	cmp	r3, #34	; 0x22
     1d8:	bne	1f8 <flatcc_json_parser_symbol_start+0x60>
     1dc:	ldr	r3, [fp, #-12]
     1e0:	add	r3, r3, #1
     1e4:	str	r3, [fp, #-12]
     1e8:	ldr	r3, [fp, #-8]
     1ec:	mov	r2, #0
     1f0:	str	r2, [r3, #12]
     1f4:	b	230 <flatcc_json_parser_symbol_start+0x98>
     1f8:	ldr	r3, [fp, #-12]
     1fc:	ldrb	r3, [r3]
     200:	cmp	r3, #46	; 0x2e
     204:	bne	224 <flatcc_json_parser_symbol_start+0x8c>
     208:	mov	r3, #5
     20c:	ldr	r2, [fp, #-16]
     210:	ldr	r1, [fp, #-12]
     214:	ldr	r0, [fp, #-8]
     218:	bl	0 <flatcc_json_parser_set_error>
     21c:	mov	r3, r0
     220:	b	234 <flatcc_json_parser_symbol_start+0x9c>
     224:	ldr	r3, [fp, #-8]
     228:	mov	r2, #1
     22c:	str	r2, [r3, #12]
     230:	ldr	r3, [fp, #-12]
     234:	mov	r0, r3
     238:	sub	sp, fp, #4
     23c:	ldr	fp, [sp]
     240:	add	sp, sp, #4
     244:	pop	{pc}		; (ldr pc, [sp], #4)

00000248 <flatcc_json_parser_symbol_part_ext>:
     248:	strd	r4, [sp, #-28]!	; 0xffffffe4
     24c:	strd	r6, [sp, #8]
     250:	strd	r8, [sp, #16]
     254:	str	fp, [sp, #24]
     258:	add	fp, sp, #24
     25c:	sub	sp, sp, #76	; 0x4c
     260:	str	r0, [fp, #-48]	; 0xffffffd0
     264:	str	r1, [fp, #-52]	; 0xffffffcc
     268:	mov	r2, #0
     26c:	mov	r3, #0
     270:	strd	r2, [fp, #-36]	; 0xffffffdc
     274:	ldr	r2, [fp, #-52]	; 0xffffffcc
     278:	ldr	r3, [fp, #-48]	; 0xffffffd0
     27c:	sub	r3, r2, r3
     280:	str	r3, [fp, #-40]	; 0xffffffd8
     284:	ldr	r3, [fp, #-40]	; 0xffffffd8
     288:	cmp	r3, #8
     28c:	bls	298 <flatcc_json_parser_symbol_part_ext+0x50>
     290:	mov	r3, #8
     294:	str	r3, [fp, #-40]	; 0xffffffd8
     298:	ldr	r3, [fp, #-40]	; 0xffffffd8
     29c:	cmp	r3, #8
     2a0:	ldrls	pc, [pc, r3, lsl #2]
     2a4:	b	4a4 <flatcc_json_parser_symbol_part_ext+0x25c>
     2a8:	.word	0x000004a4
     2ac:	.word	0x00000464
     2b0:	.word	0x00000424
     2b4:	.word	0x000003e4
     2b8:	.word	0x000003a4
     2bc:	.word	0x0000036c
     2c0:	.word	0x00000328
     2c4:	.word	0x000002f0
     2c8:	.word	0x000002cc
     2cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     2d0:	add	r3, r3, #7
     2d4:	ldrb	r3, [r3]
     2d8:	uxtb	r0, r3
     2dc:	mov	r1, #0
     2e0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     2e4:	orr	r6, r2, r0
     2e8:	orr	r7, r3, r1
     2ec:	strd	r6, [fp, #-36]	; 0xffffffdc
     2f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     2f4:	add	r3, r3, #6
     2f8:	ldrb	r3, [r3]
     2fc:	uxtb	r2, r3
     300:	mov	r3, #0
     304:	mov	r0, #0
     308:	mov	r1, #0
     30c:	lsl	r1, r3, #8
     310:	orr	r1, r1, r2, lsr #24
     314:	lsl	r0, r2, #8
     318:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     31c:	orr	r8, r2, r0
     320:	orr	r9, r3, r1
     324:	strd	r8, [fp, #-36]	; 0xffffffdc
     328:	ldr	r3, [fp, #-48]	; 0xffffffd0
     32c:	add	r3, r3, #5
     330:	ldrb	r3, [r3]
     334:	uxtb	r2, r3
     338:	mov	r3, #0
     33c:	mov	r0, #0
     340:	mov	r1, #0
     344:	lsl	r1, r3, #16
     348:	orr	r1, r1, r2, lsr #16
     34c:	lsl	r0, r2, #16
     350:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     354:	orr	ip, r2, r0
     358:	str	ip, [fp, #-60]	; 0xffffffc4
     35c:	orr	r3, r3, r1
     360:	str	r3, [fp, #-56]	; 0xffffffc8
     364:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     368:	strd	r2, [fp, #-36]	; 0xffffffdc
     36c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     370:	add	r3, r3, #4
     374:	ldrb	r3, [r3]
     378:	uxtb	r2, r3
     37c:	mov	r3, #0
     380:	lsr	r5, r2, #8
     384:	lsl	r4, r2, #24
     388:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     38c:	orr	r1, r2, r4
     390:	str	r1, [fp, #-68]	; 0xffffffbc
     394:	orr	r3, r3, r5
     398:	str	r3, [fp, #-64]	; 0xffffffc0
     39c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     3a0:	strd	r2, [fp, #-36]	; 0xffffffdc
     3a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     3a8:	add	r3, r3, #3
     3ac:	ldrb	r3, [r3]
     3b0:	uxtb	r0, r3
     3b4:	mov	r1, #0
     3b8:	mov	r2, #0
     3bc:	mov	r3, #0
     3c0:	mov	r3, r0
     3c4:	mov	r2, #0
     3c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     3cc:	orr	ip, r0, r2
     3d0:	str	ip, [fp, #-76]	; 0xffffffb4
     3d4:	orr	r3, r1, r3
     3d8:	str	r3, [fp, #-72]	; 0xffffffb8
     3dc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     3e0:	strd	r2, [fp, #-36]	; 0xffffffdc
     3e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     3e8:	add	r3, r3, #2
     3ec:	ldrb	r3, [r3]
     3f0:	uxtb	r0, r3
     3f4:	mov	r1, #0
     3f8:	mov	r2, #0
     3fc:	mov	r3, #0
     400:	lsl	r3, r0, #8
     404:	mov	r2, #0
     408:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     40c:	orr	ip, r0, r2
     410:	str	ip, [fp, #-84]	; 0xffffffac
     414:	orr	r3, r1, r3
     418:	str	r3, [fp, #-80]	; 0xffffffb0
     41c:	ldrd	r2, [fp, #-84]	; 0xffffffac
     420:	strd	r2, [fp, #-36]	; 0xffffffdc
     424:	ldr	r3, [fp, #-48]	; 0xffffffd0
     428:	add	r3, r3, #1
     42c:	ldrb	r3, [r3]
     430:	uxtb	r0, r3
     434:	mov	r1, #0
     438:	mov	r2, #0
     43c:	mov	r3, #0
     440:	lsl	r3, r0, #16
     444:	mov	r2, #0
     448:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     44c:	orr	ip, r0, r2
     450:	str	ip, [fp, #-92]	; 0xffffffa4
     454:	orr	r3, r1, r3
     458:	str	r3, [fp, #-88]	; 0xffffffa8
     45c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
     460:	strd	r2, [fp, #-36]	; 0xffffffdc
     464:	ldr	r3, [fp, #-48]	; 0xffffffd0
     468:	ldrb	r3, [r3]
     46c:	uxtb	r0, r3
     470:	mov	r1, #0
     474:	mov	r2, #0
     478:	mov	r3, #0
     47c:	lsl	r3, r0, #24
     480:	mov	r2, #0
     484:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     488:	orr	ip, r0, r2
     48c:	str	ip, [fp, #-100]	; 0xffffff9c
     490:	orr	r3, r1, r3
     494:	str	r3, [fp, #-96]	; 0xffffffa0
     498:	ldrd	r2, [fp, #-100]	; 0xffffff9c
     49c:	strd	r2, [fp, #-36]	; 0xffffffdc
     4a0:	nop	{0}
     4a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     4a8:	mov	r0, r2
     4ac:	mov	r1, r3
     4b0:	sub	sp, fp, #24
     4b4:	ldrd	r4, [sp]
     4b8:	ldrd	r6, [sp, #8]
     4bc:	ldrd	r8, [sp, #16]
     4c0:	ldr	fp, [sp, #24]
     4c4:	add	sp, sp, #28
     4c8:	bx	lr

000004cc <flatcc_json_parser_symbol_part>:
     4cc:	str	fp, [sp, #-8]!
     4d0:	str	lr, [sp, #4]
     4d4:	add	fp, sp, #4
     4d8:	sub	sp, sp, #16
     4dc:	str	r0, [fp, #-16]
     4e0:	str	r1, [fp, #-20]	; 0xffffffec
     4e4:	ldr	r2, [fp, #-20]	; 0xffffffec
     4e8:	ldr	r3, [fp, #-16]
     4ec:	sub	r3, r2, r3
     4f0:	str	r3, [fp, #-8]
     4f4:	ldr	r1, [fp, #-20]	; 0xffffffec
     4f8:	ldr	r0, [fp, #-16]
     4fc:	bl	248 <flatcc_json_parser_symbol_part_ext>
     500:	mov	r2, r0
     504:	mov	r3, r1
     508:	mov	r0, r2
     50c:	mov	r1, r3
     510:	sub	sp, fp, #4
     514:	ldr	fp, [sp]
     518:	add	sp, sp, #4
     51c:	pop	{pc}		; (ldr pc, [sp], #4)

00000520 <flatcc_json_parser_symbol_end>:
     520:	str	fp, [sp, #-8]!
     524:	str	lr, [sp, #4]
     528:	add	fp, sp, #4
     52c:	sub	sp, sp, #24
     530:	str	r0, [fp, #-16]
     534:	str	r1, [fp, #-20]	; 0xffffffec
     538:	str	r2, [fp, #-24]	; 0xffffffe8
     53c:	mov	r3, #0
     540:	strb	r3, [fp, #-5]
     544:	ldr	r3, [fp, #-16]
     548:	ldr	r3, [r3, #12]
     54c:	cmp	r3, #0
     550:	beq	678 <flatcc_json_parser_symbol_end+0x158>
     554:	b	5ec <flatcc_json_parser_symbol_end+0xcc>
     558:	ldr	r3, [fp, #-20]	; 0xffffffec
     55c:	ldrb	r3, [r3]
     560:	strb	r3, [fp, #-6]
     564:	ldrb	r3, [fp, #-6]
     568:	strb	r3, [fp, #-5]
     56c:	ldrb	r3, [fp, #-6]
     570:	cmp	r3, #95	; 0x5f
     574:	beq	5a8 <flatcc_json_parser_symbol_end+0x88>
     578:	ldrb	r3, [fp, #-6]
     57c:	cmp	r3, #46	; 0x2e
     580:	beq	5a8 <flatcc_json_parser_symbol_end+0x88>
     584:	ldrsb	r3, [fp, #-6]
     588:	cmp	r3, #0
     58c:	blt	5a8 <flatcc_json_parser_symbol_end+0x88>
     590:	ldrb	r3, [fp, #-6]
     594:	cmp	r3, #47	; 0x2f
     598:	bls	5b8 <flatcc_json_parser_symbol_end+0x98>
     59c:	ldrb	r3, [fp, #-6]
     5a0:	cmp	r3, #57	; 0x39
     5a4:	bhi	5b8 <flatcc_json_parser_symbol_end+0x98>
     5a8:	ldr	r3, [fp, #-20]	; 0xffffffec
     5ac:	add	r3, r3, #1
     5b0:	str	r3, [fp, #-20]	; 0xffffffec
     5b4:	b	5ec <flatcc_json_parser_symbol_end+0xcc>
     5b8:	ldrb	r3, [fp, #-6]
     5bc:	orr	r3, r3, #32
     5c0:	strb	r3, [fp, #-6]
     5c4:	ldrb	r3, [fp, #-6]
     5c8:	cmp	r3, #96	; 0x60
     5cc:	bls	610 <flatcc_json_parser_symbol_end+0xf0>
     5d0:	ldrb	r3, [fp, #-6]
     5d4:	cmp	r3, #122	; 0x7a
     5d8:	bhi	610 <flatcc_json_parser_symbol_end+0xf0>
     5dc:	ldr	r3, [fp, #-20]	; 0xffffffec
     5e0:	add	r3, r3, #1
     5e4:	str	r3, [fp, #-20]	; 0xffffffec
     5e8:	nop	{0}
     5ec:	ldr	r2, [fp, #-20]	; 0xffffffec
     5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5f4:	cmp	r2, r3
     5f8:	beq	614 <flatcc_json_parser_symbol_end+0xf4>
     5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
     600:	ldrb	r3, [r3]
     604:	cmp	r3, #32
     608:	bhi	558 <flatcc_json_parser_symbol_end+0x38>
     60c:	b	614 <flatcc_json_parser_symbol_end+0xf4>
     610:	nop	{0}
     614:	ldrb	r3, [fp, #-5]
     618:	cmp	r3, #46	; 0x2e
     61c:	bne	6e8 <flatcc_json_parser_symbol_end+0x1c8>
     620:	mov	r3, #5
     624:	ldr	r2, [fp, #-24]	; 0xffffffe8
     628:	ldr	r1, [fp, #-20]	; 0xffffffec
     62c:	ldr	r0, [fp, #-16]
     630:	bl	0 <flatcc_json_parser_set_error>
     634:	mov	r3, r0
     638:	b	6ec <flatcc_json_parser_symbol_end+0x1cc>
     63c:	ldr	r3, [fp, #-20]	; 0xffffffec
     640:	ldrb	r3, [r3]
     644:	cmp	r3, #92	; 0x5c
     648:	bne	66c <flatcc_json_parser_symbol_end+0x14c>
     64c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     650:	ldr	r3, [fp, #-20]	; 0xffffffec
     654:	sub	r3, r2, r3
     658:	cmp	r3, #1
     65c:	ble	69c <flatcc_json_parser_symbol_end+0x17c>
     660:	ldr	r3, [fp, #-20]	; 0xffffffec
     664:	add	r3, r3, #1
     668:	str	r3, [fp, #-20]	; 0xffffffec
     66c:	ldr	r3, [fp, #-20]	; 0xffffffec
     670:	add	r3, r3, #1
     674:	str	r3, [fp, #-20]	; 0xffffffec
     678:	ldr	r2, [fp, #-20]	; 0xffffffec
     67c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     680:	cmp	r2, r3
     684:	beq	6a0 <flatcc_json_parser_symbol_end+0x180>
     688:	ldr	r3, [fp, #-20]	; 0xffffffec
     68c:	ldrb	r3, [r3]
     690:	cmp	r3, #34	; 0x22
     694:	bne	63c <flatcc_json_parser_symbol_end+0x11c>
     698:	b	6a0 <flatcc_json_parser_symbol_end+0x180>
     69c:	nop	{0}
     6a0:	ldr	r2, [fp, #-20]	; 0xffffffec
     6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6a8:	cmp	r2, r3
     6ac:	beq	6c0 <flatcc_json_parser_symbol_end+0x1a0>
     6b0:	ldr	r3, [fp, #-20]	; 0xffffffec
     6b4:	ldrb	r3, [r3]
     6b8:	cmp	r3, #34	; 0x22
     6bc:	beq	6dc <flatcc_json_parser_symbol_end+0x1bc>
     6c0:	mov	r3, #20
     6c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     6c8:	ldr	r1, [fp, #-20]	; 0xffffffec
     6cc:	ldr	r0, [fp, #-16]
     6d0:	bl	0 <flatcc_json_parser_set_error>
     6d4:	mov	r3, r0
     6d8:	b	6ec <flatcc_json_parser_symbol_end+0x1cc>
     6dc:	ldr	r3, [fp, #-20]	; 0xffffffec
     6e0:	add	r3, r3, #1
     6e4:	str	r3, [fp, #-20]	; 0xffffffec
     6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
     6ec:	mov	r0, r3
     6f0:	sub	sp, fp, #4
     6f4:	ldr	fp, [sp]
     6f8:	add	sp, sp, #4
     6fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000700 <flatcc_json_parser_constant_start>:
     700:	str	fp, [sp, #-8]!
     704:	str	lr, [sp, #4]
     708:	add	fp, sp, #4
     70c:	sub	sp, sp, #16
     710:	str	r0, [fp, #-8]
     714:	str	r1, [fp, #-12]
     718:	str	r2, [fp, #-16]
     71c:	ldr	r2, [fp, #-16]
     720:	ldr	r1, [fp, #-12]
     724:	ldr	r0, [fp, #-8]
     728:	bl	198 <flatcc_json_parser_symbol_start>
     72c:	str	r0, [fp, #-12]
     730:	ldr	r3, [fp, #-8]
     734:	ldr	r3, [r3, #12]
     738:	cmp	r3, #0
     73c:	bne	754 <flatcc_json_parser_constant_start+0x54>
     740:	ldr	r2, [fp, #-16]
     744:	ldr	r1, [fp, #-12]
     748:	ldr	r0, [fp, #-8]
     74c:	bl	0 <flatcc_json_parser_space>
     750:	str	r0, [fp, #-12]
     754:	ldr	r3, [fp, #-12]
     758:	mov	r0, r3
     75c:	sub	sp, fp, #4
     760:	ldr	fp, [sp]
     764:	add	sp, sp, #4
     768:	pop	{pc}		; (ldr pc, [sp], #4)

0000076c <flatcc_json_parser_coerce_uint64>:
     76c:	str	fp, [sp, #-8]!
     770:	str	lr, [sp, #4]
     774:	add	fp, sp, #4
     778:	sub	sp, sp, #16
     77c:	str	r0, [fp, #-8]
     780:	str	r1, [fp, #-12]
     784:	str	r2, [fp, #-16]
     788:	str	r3, [fp, #-20]	; 0xffffffec
     78c:	ldr	r3, [fp, #-20]	; 0xffffffec
     790:	cmp	r3, #0
     794:	beq	7b4 <flatcc_json_parser_coerce_uint64+0x48>
     798:	mov	r3, #8
     79c:	ldr	r2, [fp, #-16]
     7a0:	ldr	r1, [fp, #-12]
     7a4:	ldr	r0, [fp, #-8]
     7a8:	bl	0 <flatcc_json_parser_set_error>
     7ac:	mov	r3, r0
     7b0:	b	7c4 <flatcc_json_parser_coerce_uint64+0x58>
     7b4:	ldr	r1, [fp, #12]
     7b8:	ldrd	r2, [fp, #4]
     7bc:	strd	r2, [r1]
     7c0:	ldr	r3, [fp, #-12]
     7c4:	mov	r0, r3
     7c8:	sub	sp, fp, #4
     7cc:	ldr	fp, [sp]
     7d0:	add	sp, sp, #4
     7d4:	pop	{pc}		; (ldr pc, [sp], #4)

000007d8 <flatcc_json_parser_coerce_bool>:
     7d8:	str	fp, [sp, #-8]!
     7dc:	str	lr, [sp, #4]
     7e0:	add	fp, sp, #4
     7e4:	sub	sp, sp, #16
     7e8:	str	r0, [fp, #-8]
     7ec:	str	r1, [fp, #-12]
     7f0:	str	r2, [fp, #-16]
     7f4:	str	r3, [fp, #-20]	; 0xffffffec
     7f8:	ldr	r3, [fp, #-20]	; 0xffffffec
     7fc:	cmp	r3, #0
     800:	beq	820 <flatcc_json_parser_coerce_bool+0x48>
     804:	mov	r3, #8
     808:	ldr	r2, [fp, #-16]
     80c:	ldr	r1, [fp, #-12]
     810:	ldr	r0, [fp, #-8]
     814:	bl	0 <flatcc_json_parser_set_error>
     818:	mov	r3, r0
     81c:	b	84c <flatcc_json_parser_coerce_bool+0x74>
     820:	ldr	r2, [fp, #4]
     824:	ldr	r3, [fp, #8]
     828:	orr	r3, r2, r3
     82c:	cmp	r3, #0
     830:	movne	r3, #1
     834:	moveq	r3, #0
     838:	uxtb	r3, r3
     83c:	mov	r2, r3
     840:	ldr	r3, [fp, #12]
     844:	strb	r2, [r3]
     848:	ldr	r3, [fp, #-12]
     84c:	mov	r0, r3
     850:	sub	sp, fp, #4
     854:	ldr	fp, [sp]
     858:	add	sp, sp, #4
     85c:	pop	{pc}		; (ldr pc, [sp], #4)

00000860 <flatcc_json_parser_coerce_uint32>:
     860:	str	fp, [sp, #-8]!
     864:	str	lr, [sp, #4]
     868:	add	fp, sp, #4
     86c:	sub	sp, sp, #16
     870:	str	r0, [fp, #-8]
     874:	str	r1, [fp, #-12]
     878:	str	r2, [fp, #-16]
     87c:	str	r3, [fp, #-20]	; 0xffffffec
     880:	ldr	r3, [fp, #-20]	; 0xffffffec
     884:	cmp	r3, #0
     888:	beq	8a8 <flatcc_json_parser_coerce_uint32+0x48>
     88c:	mov	r3, #8
     890:	ldr	r2, [fp, #-16]
     894:	ldr	r1, [fp, #-12]
     898:	ldr	r0, [fp, #-8]
     89c:	bl	0 <flatcc_json_parser_set_error>
     8a0:	mov	r3, r0
     8a4:	b	8ec <flatcc_json_parser_coerce_uint32+0x8c>
     8a8:	ldrd	r2, [fp, #4]
     8ac:	mvn	r0, #0
     8b0:	mov	r1, #0
     8b4:	cmp	r3, r1
     8b8:	cmpeq	r2, r0
     8bc:	bls	8dc <flatcc_json_parser_coerce_uint32+0x7c>
     8c0:	mov	r3, #7
     8c4:	ldr	r2, [fp, #-16]
     8c8:	ldr	r1, [fp, #-12]
     8cc:	ldr	r0, [fp, #-8]
     8d0:	bl	0 <flatcc_json_parser_set_error>
     8d4:	mov	r3, r0
     8d8:	b	8ec <flatcc_json_parser_coerce_uint32+0x8c>
     8dc:	ldr	r2, [fp, #4]
     8e0:	ldr	r3, [fp, #12]
     8e4:	str	r2, [r3]
     8e8:	ldr	r3, [fp, #-12]
     8ec:	mov	r0, r3
     8f0:	sub	sp, fp, #4
     8f4:	ldr	fp, [sp]
     8f8:	add	sp, sp, #4
     8fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000900 <flatcc_json_parser_coerce_uint16>:
     900:	str	fp, [sp, #-8]!
     904:	str	lr, [sp, #4]
     908:	add	fp, sp, #4
     90c:	sub	sp, sp, #16
     910:	str	r0, [fp, #-8]
     914:	str	r1, [fp, #-12]
     918:	str	r2, [fp, #-16]
     91c:	str	r3, [fp, #-20]	; 0xffffffec
     920:	ldr	r3, [fp, #-20]	; 0xffffffec
     924:	cmp	r3, #0
     928:	beq	948 <flatcc_json_parser_coerce_uint16+0x48>
     92c:	mov	r3, #8
     930:	ldr	r2, [fp, #-16]
     934:	ldr	r1, [fp, #-12]
     938:	ldr	r0, [fp, #-8]
     93c:	bl	0 <flatcc_json_parser_set_error>
     940:	mov	r3, r0
     944:	b	98c <flatcc_json_parser_coerce_uint16+0x8c>
     948:	ldrd	r2, [fp, #4]
     94c:	movw	r0, #65535	; 0xffff
     950:	mov	r1, #0
     954:	cmp	r3, r1
     958:	cmpeq	r2, r0
     95c:	bls	97c <flatcc_json_parser_coerce_uint16+0x7c>
     960:	mov	r3, #7
     964:	ldr	r2, [fp, #-16]
     968:	ldr	r1, [fp, #-12]
     96c:	ldr	r0, [fp, #-8]
     970:	bl	0 <flatcc_json_parser_set_error>
     974:	mov	r3, r0
     978:	b	98c <flatcc_json_parser_coerce_uint16+0x8c>
     97c:	ldrh	r2, [fp, #4]
     980:	ldr	r3, [fp, #12]
     984:	strh	r2, [r3]
     988:	ldr	r3, [fp, #-12]
     98c:	mov	r0, r3
     990:	sub	sp, fp, #4
     994:	ldr	fp, [sp]
     998:	add	sp, sp, #4
     99c:	pop	{pc}		; (ldr pc, [sp], #4)

000009a0 <flatcc_json_parser_coerce_uint8>:
     9a0:	str	fp, [sp, #-8]!
     9a4:	str	lr, [sp, #4]
     9a8:	add	fp, sp, #4
     9ac:	sub	sp, sp, #16
     9b0:	str	r0, [fp, #-8]
     9b4:	str	r1, [fp, #-12]
     9b8:	str	r2, [fp, #-16]
     9bc:	str	r3, [fp, #-20]	; 0xffffffec
     9c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     9c4:	cmp	r3, #0
     9c8:	beq	9e8 <flatcc_json_parser_coerce_uint8+0x48>
     9cc:	mov	r3, #8
     9d0:	ldr	r2, [fp, #-16]
     9d4:	ldr	r1, [fp, #-12]
     9d8:	ldr	r0, [fp, #-8]
     9dc:	bl	0 <flatcc_json_parser_set_error>
     9e0:	mov	r3, r0
     9e4:	b	a24 <flatcc_json_parser_coerce_uint8+0x84>
     9e8:	ldrd	r2, [fp, #4]
     9ec:	cmp	r3, #0
     9f0:	cmpeq	r2, #255	; 0xff
     9f4:	bls	a14 <flatcc_json_parser_coerce_uint8+0x74>
     9f8:	mov	r3, #7
     9fc:	ldr	r2, [fp, #-16]
     a00:	ldr	r1, [fp, #-12]
     a04:	ldr	r0, [fp, #-8]
     a08:	bl	0 <flatcc_json_parser_set_error>
     a0c:	mov	r3, r0
     a10:	b	a24 <flatcc_json_parser_coerce_uint8+0x84>
     a14:	ldrb	r2, [fp, #4]
     a18:	ldr	r3, [fp, #12]
     a1c:	strb	r2, [r3]
     a20:	ldr	r3, [fp, #-12]
     a24:	mov	r0, r3
     a28:	sub	sp, fp, #4
     a2c:	ldr	fp, [sp]
     a30:	add	sp, sp, #4
     a34:	pop	{pc}		; (ldr pc, [sp], #4)

00000a38 <flatcc_json_parser_coerce_int64>:
     a38:	str	fp, [sp, #-8]!
     a3c:	str	lr, [sp, #4]
     a40:	add	fp, sp, #4
     a44:	sub	sp, sp, #16
     a48:	str	r0, [fp, #-8]
     a4c:	str	r1, [fp, #-12]
     a50:	str	r2, [fp, #-16]
     a54:	str	r3, [fp, #-20]	; 0xffffffec
     a58:	ldr	r3, [fp, #-20]	; 0xffffffec
     a5c:	cmp	r3, #0
     a60:	beq	aa8 <flatcc_json_parser_coerce_int64+0x70>
     a64:	ldrd	r2, [fp, #4]
     a68:	cmp	r3, #-2147483648	; 0x80000000
     a6c:	cmpeq	r2, #0
     a70:	bls	a90 <flatcc_json_parser_coerce_int64+0x58>
     a74:	mov	r3, #8
     a78:	ldr	r2, [fp, #-16]
     a7c:	ldr	r1, [fp, #-12]
     a80:	ldr	r0, [fp, #-8]
     a84:	bl	0 <flatcc_json_parser_set_error>
     a88:	mov	r3, r0
     a8c:	b	ae4 <flatcc_json_parser_coerce_int64+0xac>
     a90:	ldrd	r2, [fp, #4]
     a94:	rsbs	r2, r2, #0
     a98:	rsc	r3, r3, #0
     a9c:	ldr	r1, [fp, #12]
     aa0:	strd	r2, [r1]
     aa4:	b	ae0 <flatcc_json_parser_coerce_int64+0xa8>
     aa8:	ldrd	r2, [fp, #4]
     aac:	cmp	r2, #0
     ab0:	sbcs	r3, r3, #0
     ab4:	bge	ad4 <flatcc_json_parser_coerce_int64+0x9c>
     ab8:	mov	r3, #7
     abc:	ldr	r2, [fp, #-16]
     ac0:	ldr	r1, [fp, #-12]
     ac4:	ldr	r0, [fp, #-8]
     ac8:	bl	0 <flatcc_json_parser_set_error>
     acc:	mov	r3, r0
     ad0:	b	ae4 <flatcc_json_parser_coerce_int64+0xac>
     ad4:	ldrd	r2, [fp, #4]
     ad8:	ldr	r1, [fp, #12]
     adc:	strd	r2, [r1]
     ae0:	ldr	r3, [fp, #-12]
     ae4:	mov	r0, r3
     ae8:	sub	sp, fp, #4
     aec:	ldr	fp, [sp]
     af0:	add	sp, sp, #4
     af4:	pop	{pc}		; (ldr pc, [sp], #4)

00000af8 <flatcc_json_parser_coerce_int32>:
     af8:	str	fp, [sp, #-8]!
     afc:	str	lr, [sp, #4]
     b00:	add	fp, sp, #4
     b04:	sub	sp, sp, #16
     b08:	str	r0, [fp, #-8]
     b0c:	str	r1, [fp, #-12]
     b10:	str	r2, [fp, #-16]
     b14:	str	r3, [fp, #-20]	; 0xffffffec
     b18:	ldr	r3, [fp, #-20]	; 0xffffffec
     b1c:	cmp	r3, #0
     b20:	beq	b68 <flatcc_json_parser_coerce_int32+0x70>
     b24:	ldrd	r2, [fp, #4]
     b28:	cmp	r3, #0
     b2c:	cmpeq	r2, #-2147483648	; 0x80000000
     b30:	bls	b50 <flatcc_json_parser_coerce_int32+0x58>
     b34:	mov	r3, #8
     b38:	ldr	r2, [fp, #-16]
     b3c:	ldr	r1, [fp, #-12]
     b40:	ldr	r0, [fp, #-8]
     b44:	bl	0 <flatcc_json_parser_set_error>
     b48:	mov	r3, r0
     b4c:	b	bac <flatcc_json_parser_coerce_int32+0xb4>
     b50:	ldr	r3, [fp, #4]
     b54:	rsb	r3, r3, #0
     b58:	mov	r2, r3
     b5c:	ldr	r3, [fp, #12]
     b60:	str	r2, [r3]
     b64:	b	ba8 <flatcc_json_parser_coerce_int32+0xb0>
     b68:	ldrd	r2, [fp, #4]
     b6c:	mvn	r0, #-2147483648	; 0x80000000
     b70:	mov	r1, #0
     b74:	cmp	r3, r1
     b78:	cmpeq	r2, r0
     b7c:	bls	b9c <flatcc_json_parser_coerce_int32+0xa4>
     b80:	mov	r3, #7
     b84:	ldr	r2, [fp, #-16]
     b88:	ldr	r1, [fp, #-12]
     b8c:	ldr	r0, [fp, #-8]
     b90:	bl	0 <flatcc_json_parser_set_error>
     b94:	mov	r3, r0
     b98:	b	bac <flatcc_json_parser_coerce_int32+0xb4>
     b9c:	ldr	r2, [fp, #4]
     ba0:	ldr	r3, [fp, #12]
     ba4:	str	r2, [r3]
     ba8:	ldr	r3, [fp, #-12]
     bac:	mov	r0, r3
     bb0:	sub	sp, fp, #4
     bb4:	ldr	fp, [sp]
     bb8:	add	sp, sp, #4
     bbc:	pop	{pc}		; (ldr pc, [sp], #4)

00000bc0 <flatcc_json_parser_coerce_int16>:
     bc0:	str	fp, [sp, #-8]!
     bc4:	str	lr, [sp, #4]
     bc8:	add	fp, sp, #4
     bcc:	sub	sp, sp, #16
     bd0:	str	r0, [fp, #-8]
     bd4:	str	r1, [fp, #-12]
     bd8:	str	r2, [fp, #-16]
     bdc:	str	r3, [fp, #-20]	; 0xffffffec
     be0:	ldr	r3, [fp, #-20]	; 0xffffffec
     be4:	cmp	r3, #0
     be8:	beq	c34 <flatcc_json_parser_coerce_int16+0x74>
     bec:	ldrd	r2, [fp, #4]
     bf0:	cmp	r3, #0
     bf4:	cmpeq	r2, #32768	; 0x8000
     bf8:	bls	c18 <flatcc_json_parser_coerce_int16+0x58>
     bfc:	mov	r3, #8
     c00:	ldr	r2, [fp, #-16]
     c04:	ldr	r1, [fp, #-12]
     c08:	ldr	r0, [fp, #-8]
     c0c:	bl	0 <flatcc_json_parser_set_error>
     c10:	mov	r3, r0
     c14:	b	c78 <flatcc_json_parser_coerce_int16+0xb8>
     c18:	ldrh	r3, [fp, #4]
     c1c:	rsb	r3, r3, #0
     c20:	uxth	r3, r3
     c24:	sxth	r2, r3
     c28:	ldr	r3, [fp, #12]
     c2c:	strh	r2, [r3]
     c30:	b	c74 <flatcc_json_parser_coerce_int16+0xb4>
     c34:	ldrd	r2, [fp, #4]
     c38:	movw	r0, #32767	; 0x7fff
     c3c:	mov	r1, #0
     c40:	cmp	r3, r1
     c44:	cmpeq	r2, r0
     c48:	bls	c68 <flatcc_json_parser_coerce_int16+0xa8>
     c4c:	mov	r3, #7
     c50:	ldr	r2, [fp, #-16]
     c54:	ldr	r1, [fp, #-12]
     c58:	ldr	r0, [fp, #-8]
     c5c:	bl	0 <flatcc_json_parser_set_error>
     c60:	mov	r3, r0
     c64:	b	c78 <flatcc_json_parser_coerce_int16+0xb8>
     c68:	ldrsh	r2, [fp, #4]
     c6c:	ldr	r3, [fp, #12]
     c70:	strh	r2, [r3]
     c74:	ldr	r3, [fp, #-12]
     c78:	mov	r0, r3
     c7c:	sub	sp, fp, #4
     c80:	ldr	fp, [sp]
     c84:	add	sp, sp, #4
     c88:	pop	{pc}		; (ldr pc, [sp], #4)

00000c8c <flatcc_json_parser_coerce_int8>:
     c8c:	str	fp, [sp, #-8]!
     c90:	str	lr, [sp, #4]
     c94:	add	fp, sp, #4
     c98:	sub	sp, sp, #16
     c9c:	str	r0, [fp, #-8]
     ca0:	str	r1, [fp, #-12]
     ca4:	str	r2, [fp, #-16]
     ca8:	str	r3, [fp, #-20]	; 0xffffffec
     cac:	ldr	r3, [fp, #-20]	; 0xffffffec
     cb0:	cmp	r3, #0
     cb4:	beq	d00 <flatcc_json_parser_coerce_int8+0x74>
     cb8:	ldrd	r2, [fp, #4]
     cbc:	cmp	r3, #0
     cc0:	cmpeq	r2, #128	; 0x80
     cc4:	bls	ce4 <flatcc_json_parser_coerce_int8+0x58>
     cc8:	mov	r3, #8
     ccc:	ldr	r2, [fp, #-16]
     cd0:	ldr	r1, [fp, #-12]
     cd4:	ldr	r0, [fp, #-8]
     cd8:	bl	0 <flatcc_json_parser_set_error>
     cdc:	mov	r3, r0
     ce0:	b	d3c <flatcc_json_parser_coerce_int8+0xb0>
     ce4:	ldrb	r3, [fp, #4]
     ce8:	rsb	r3, r3, #0
     cec:	uxtb	r3, r3
     cf0:	sxtb	r2, r3
     cf4:	ldr	r3, [fp, #12]
     cf8:	strb	r2, [r3]
     cfc:	b	d38 <flatcc_json_parser_coerce_int8+0xac>
     d00:	ldrd	r2, [fp, #4]
     d04:	cmp	r3, #0
     d08:	cmpeq	r2, #127	; 0x7f
     d0c:	bls	d2c <flatcc_json_parser_coerce_int8+0xa0>
     d10:	mov	r3, #7
     d14:	ldr	r2, [fp, #-16]
     d18:	ldr	r1, [fp, #-12]
     d1c:	ldr	r0, [fp, #-8]
     d20:	bl	0 <flatcc_json_parser_set_error>
     d24:	mov	r3, r0
     d28:	b	d3c <flatcc_json_parser_coerce_int8+0xb0>
     d2c:	ldrsb	r2, [fp, #4]
     d30:	ldr	r3, [fp, #12]
     d34:	strb	r2, [r3]
     d38:	ldr	r3, [fp, #-12]
     d3c:	mov	r0, r3
     d40:	sub	sp, fp, #4
     d44:	ldr	fp, [sp]
     d48:	add	sp, sp, #4
     d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00000d50 <flatcc_json_parser_coerce_float>:
     d50:	str	fp, [sp, #-8]!
     d54:	str	lr, [sp, #4]
     d58:	add	fp, sp, #4
     d5c:	sub	sp, sp, #16
     d60:	str	r0, [fp, #-8]
     d64:	str	r1, [fp, #-12]
     d68:	str	r2, [fp, #-16]
     d6c:	str	r3, [fp, #-20]	; 0xffffffec
     d70:	ldr	r3, [fp, #-20]	; 0xffffffec
     d74:	cmp	r3, #0
     d78:	beq	d90 <flatcc_json_parser_coerce_float+0x40>
     d7c:	ldrd	r0, [fp, #4]
     d80:	bl	0 <__aeabi_ul2f>
     d84:	mov	r3, r0
     d88:	eor	r2, r3, #-2147483648	; 0x80000000
     d8c:	b	d9c <flatcc_json_parser_coerce_float+0x4c>
     d90:	ldrd	r0, [fp, #4]
     d94:	bl	0 <__aeabi_ul2f>
     d98:	mov	r2, r0
     d9c:	ldr	r3, [fp, #12]
     da0:	str	r2, [r3]
     da4:	ldr	r3, [fp, #-12]
     da8:	mov	r0, r3
     dac:	sub	sp, fp, #4
     db0:	ldr	fp, [sp]
     db4:	add	sp, sp, #4
     db8:	pop	{pc}		; (ldr pc, [sp], #4)

00000dbc <flatcc_json_parser_coerce_double>:
     dbc:	str	fp, [sp, #-8]!
     dc0:	str	lr, [sp, #4]
     dc4:	add	fp, sp, #4
     dc8:	sub	sp, sp, #16
     dcc:	str	r0, [fp, #-8]
     dd0:	str	r1, [fp, #-12]
     dd4:	str	r2, [fp, #-16]
     dd8:	str	r3, [fp, #-20]	; 0xffffffec
     ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
     de0:	cmp	r3, #0
     de4:	beq	e00 <flatcc_json_parser_coerce_double+0x44>
     de8:	ldrd	r0, [fp, #4]
     dec:	bl	0 <__aeabi_ul2d>
     df0:	mov	r2, r0
     df4:	mov	r3, r1
     df8:	eor	r3, r3, #-2147483648	; 0x80000000
     dfc:	b	e10 <flatcc_json_parser_coerce_double+0x54>
     e00:	ldrd	r0, [fp, #4]
     e04:	bl	0 <__aeabi_ul2d>
     e08:	mov	r2, r0
     e0c:	mov	r3, r1
     e10:	ldr	r1, [fp, #12]
     e14:	strd	r2, [r1]
     e18:	ldr	r3, [fp, #-12]
     e1c:	mov	r0, r3
     e20:	sub	sp, fp, #4
     e24:	ldr	fp, [sp]
     e28:	add	sp, sp, #4
     e2c:	pop	{pc}		; (ldr pc, [sp], #4)

00000e30 <flatcc_json_parser_uint32>:
     e30:	str	fp, [sp, #-8]!
     e34:	str	lr, [sp, #4]
     e38:	add	fp, sp, #4
     e3c:	sub	sp, sp, #56	; 0x38
     e40:	str	r0, [fp, #-32]	; 0xffffffe0
     e44:	str	r1, [fp, #-36]	; 0xffffffdc
     e48:	str	r2, [fp, #-40]	; 0xffffffd8
     e4c:	str	r3, [fp, #-44]	; 0xffffffd4
     e50:	mov	r2, #0
     e54:	mov	r3, #0
     e58:	strd	r2, [fp, #-20]	; 0xffffffec
     e5c:	mov	r3, #0
     e60:	str	r3, [fp, #-24]	; 0xffffffe8
     e64:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e68:	str	r3, [fp, #-8]
     e6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e70:	mov	r2, #0
     e74:	str	r2, [r3]
     e78:	ldr	r2, [fp, #-36]	; 0xffffffdc
     e7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e80:	cmp	r2, r3
     e84:	bne	e90 <flatcc_json_parser_uint32+0x60>
     e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e8c:	b	ef8 <flatcc_json_parser_uint32+0xc8>
     e90:	sub	r2, fp, #24
     e94:	sub	r3, fp, #20
     e98:	str	r3, [sp]
     e9c:	mov	r3, r2
     ea0:	ldr	r2, [fp, #-40]	; 0xffffffd8
     ea4:	ldr	r1, [fp, #-36]	; 0xffffffdc
     ea8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     eac:	bl	0 <flatcc_json_parser_integer>
     eb0:	str	r0, [fp, #-36]	; 0xffffffdc
     eb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     eb8:	ldr	r3, [fp, #-8]
     ebc:	cmp	r2, r3
     ec0:	beq	ef4 <flatcc_json_parser_uint32+0xc4>
     ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ec8:	ldrd	r2, [fp, #-20]	; 0xffffffec
     ecc:	ldr	r1, [fp, #-44]	; 0xffffffd4
     ed0:	str	r1, [sp, #8]
     ed4:	strd	r2, [sp]
     ed8:	mov	r3, r0
     edc:	ldr	r2, [fp, #-40]	; 0xffffffd8
     ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
     ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ee8:	bl	860 <flatcc_json_parser_coerce_uint32>
     eec:	mov	r3, r0
     ef0:	b	ef8 <flatcc_json_parser_uint32+0xc8>
     ef4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     ef8:	mov	r0, r3
     efc:	sub	sp, fp, #4
     f00:	ldr	fp, [sp]
     f04:	add	sp, sp, #4
     f08:	pop	{pc}		; (ldr pc, [sp], #4)

00000f0c <flatcc_json_parser_uint8>:
     f0c:	str	fp, [sp, #-8]!
     f10:	str	lr, [sp, #4]
     f14:	add	fp, sp, #4
     f18:	sub	sp, sp, #56	; 0x38
     f1c:	str	r0, [fp, #-32]	; 0xffffffe0
     f20:	str	r1, [fp, #-36]	; 0xffffffdc
     f24:	str	r2, [fp, #-40]	; 0xffffffd8
     f28:	str	r3, [fp, #-44]	; 0xffffffd4
     f2c:	mov	r2, #0
     f30:	mov	r3, #0
     f34:	strd	r2, [fp, #-20]	; 0xffffffec
     f38:	mov	r3, #0
     f3c:	str	r3, [fp, #-24]	; 0xffffffe8
     f40:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f44:	str	r3, [fp, #-8]
     f48:	ldr	r3, [fp, #-44]	; 0xffffffd4
     f4c:	mov	r2, #0
     f50:	strb	r2, [r3]
     f54:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f58:	ldr	r3, [fp, #-40]	; 0xffffffd8
     f5c:	cmp	r2, r3
     f60:	bne	f6c <flatcc_json_parser_uint8+0x60>
     f64:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f68:	b	fd4 <flatcc_json_parser_uint8+0xc8>
     f6c:	sub	r2, fp, #24
     f70:	sub	r3, fp, #20
     f74:	str	r3, [sp]
     f78:	mov	r3, r2
     f7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
     f80:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f88:	bl	0 <flatcc_json_parser_integer>
     f8c:	str	r0, [fp, #-36]	; 0xffffffdc
     f90:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f94:	ldr	r3, [fp, #-8]
     f98:	cmp	r2, r3
     f9c:	beq	fd0 <flatcc_json_parser_uint8+0xc4>
     fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fa4:	ldrd	r2, [fp, #-20]	; 0xffffffec
     fa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
     fac:	str	r1, [sp, #8]
     fb0:	strd	r2, [sp]
     fb4:	mov	r3, r0
     fb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
     fbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
     fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fc4:	bl	9a0 <flatcc_json_parser_coerce_uint8>
     fc8:	mov	r3, r0
     fcc:	b	fd4 <flatcc_json_parser_uint8+0xc8>
     fd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fd4:	mov	r0, r3
     fd8:	sub	sp, fp, #4
     fdc:	ldr	fp, [sp]
     fe0:	add	sp, sp, #4
     fe4:	pop	{pc}		; (ldr pc, [sp], #4)

00000fe8 <flatcc_json_parser_int64>:
     fe8:	str	fp, [sp, #-8]!
     fec:	str	lr, [sp, #4]
     ff0:	add	fp, sp, #4
     ff4:	sub	sp, sp, #56	; 0x38
     ff8:	str	r0, [fp, #-32]	; 0xffffffe0
     ffc:	str	r1, [fp, #-36]	; 0xffffffdc
    1000:	str	r2, [fp, #-40]	; 0xffffffd8
    1004:	str	r3, [fp, #-44]	; 0xffffffd4
    1008:	mov	r2, #0
    100c:	mov	r3, #0
    1010:	strd	r2, [fp, #-20]	; 0xffffffec
    1014:	mov	r3, #0
    1018:	str	r3, [fp, #-24]	; 0xffffffe8
    101c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1020:	str	r3, [fp, #-8]
    1024:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1028:	mov	r2, #0
    102c:	mov	r3, #0
    1030:	strd	r2, [r1]
    1034:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1038:	ldr	r3, [fp, #-40]	; 0xffffffd8
    103c:	cmp	r2, r3
    1040:	bne	104c <flatcc_json_parser_int64+0x64>
    1044:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1048:	b	10b4 <flatcc_json_parser_int64+0xcc>
    104c:	sub	r2, fp, #24
    1050:	sub	r3, fp, #20
    1054:	str	r3, [sp]
    1058:	mov	r3, r2
    105c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1060:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1064:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1068:	bl	0 <flatcc_json_parser_integer>
    106c:	str	r0, [fp, #-36]	; 0xffffffdc
    1070:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1074:	ldr	r3, [fp, #-8]
    1078:	cmp	r2, r3
    107c:	beq	10b0 <flatcc_json_parser_int64+0xc8>
    1080:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1084:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1088:	ldr	r1, [fp, #-44]	; 0xffffffd4
    108c:	str	r1, [sp, #8]
    1090:	strd	r2, [sp]
    1094:	mov	r3, r0
    1098:	ldr	r2, [fp, #-40]	; 0xffffffd8
    109c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    10a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10a4:	bl	a38 <flatcc_json_parser_coerce_int64>
    10a8:	mov	r3, r0
    10ac:	b	10b4 <flatcc_json_parser_int64+0xcc>
    10b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    10b4:	mov	r0, r3
    10b8:	sub	sp, fp, #4
    10bc:	ldr	fp, [sp]
    10c0:	add	sp, sp, #4
    10c4:	pop	{pc}		; (ldr pc, [sp], #4)

000010c8 <flatcc_json_parser_symbolic_uint64>:
    10c8:	strd	r4, [sp, #-20]!	; 0xffffffec
    10cc:	str	r6, [sp, #8]
    10d0:	str	fp, [sp, #12]
    10d4:	str	lr, [sp, #16]
    10d8:	add	fp, sp, #16
    10dc:	sub	sp, sp, #76	; 0x4c
    10e0:	str	r0, [fp, #-64]	; 0xffffffc0
    10e4:	str	r1, [fp, #-68]	; 0xffffffbc
    10e8:	str	r2, [fp, #-72]	; 0xffffffb8
    10ec:	str	r3, [fp, #-76]	; 0xffffffb4
    10f0:	mov	r2, #0
    10f4:	mov	r3, #0
    10f8:	strd	r2, [fp, #-44]	; 0xffffffd4
    10fc:	mov	r3, #0
    1100:	str	r3, [fp, #-28]	; 0xffffffe4
    1104:	ldr	r1, [fp, #4]
    1108:	mov	r2, #0
    110c:	mov	r3, #0
    1110:	strd	r2, [r1]
    1114:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1118:	ldr	r1, [fp, #-68]	; 0xffffffbc
    111c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1120:	bl	700 <flatcc_json_parser_constant_start>
    1124:	str	r0, [fp, #-68]	; 0xffffffbc
    1128:	ldr	r2, [fp, #-68]	; 0xffffffbc
    112c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1130:	cmp	r2, r3
    1134:	bne	1140 <flatcc_json_parser_symbolic_uint64+0x78>
    1138:	ldr	r3, [fp, #-68]	; 0xffffffbc
    113c:	b	12a0 <flatcc_json_parser_symbolic_uint64+0x1d8>
    1140:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1144:	str	r3, [fp, #-24]	; 0xffffffe8
    1148:	ldr	r3, [fp, #-24]	; 0xffffffe8
    114c:	ldr	r6, [r3]
    1150:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1154:	str	r3, [fp, #-32]	; 0xffffffe0
    1158:	sub	r2, fp, #56	; 0x38
    115c:	sub	r3, fp, #60	; 0x3c
    1160:	str	r3, [sp, #4]
    1164:	sub	r3, fp, #52	; 0x34
    1168:	str	r3, [sp]
    116c:	mov	r3, r2
    1170:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1174:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1178:	ldr	r0, [fp, #-64]	; 0xffffffc0
    117c:	blx	r6
    1180:	str	r0, [fp, #-68]	; 0xffffffbc
    1184:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1188:	ldr	r3, [fp, #-72]	; 0xffffffb8
    118c:	cmp	r2, r3
    1190:	bne	119c <flatcc_json_parser_symbolic_uint64+0xd4>
    1194:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1198:	b	12a0 <flatcc_json_parser_symbolic_uint64+0x1d8>
    119c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    11a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    11a4:	cmp	r2, r3
    11a8:	bne	11c8 <flatcc_json_parser_symbolic_uint64+0x100>
    11ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11b0:	add	r3, r3, #4
    11b4:	str	r3, [fp, #-24]	; 0xffffffe8
    11b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11bc:	ldr	r3, [r3]
    11c0:	cmp	r3, #0
    11c4:	bne	1148 <flatcc_json_parser_symbolic_uint64+0x80>
    11c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    11cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    11d0:	cmp	r2, r3
    11d4:	bne	11f4 <flatcc_json_parser_symbolic_uint64+0x12c>
    11d8:	mov	r3, #23
    11dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    11e0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    11e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    11e8:	bl	0 <flatcc_json_parser_set_error>
    11ec:	mov	r3, r0
    11f0:	b	12a0 <flatcc_json_parser_symbolic_uint64+0x1d8>
    11f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11f8:	add	r2, r3, #1
    11fc:	str	r2, [fp, #-28]	; 0xffffffe4
    1200:	cmp	r3, #0
    1204:	beq	1234 <flatcc_json_parser_symbolic_uint64+0x16c>
    1208:	ldr	r3, [fp, #-64]	; 0xffffffc0
    120c:	ldr	r3, [r3, #12]
    1210:	cmp	r3, #0
    1214:	beq	1234 <flatcc_json_parser_symbolic_uint64+0x16c>
    1218:	mov	r3, #14
    121c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1220:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1224:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1228:	bl	0 <flatcc_json_parser_set_error>
    122c:	mov	r3, r0
    1230:	b	12a0 <flatcc_json_parser_symbolic_uint64+0x1d8>
    1234:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1238:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    123c:	sub	r1, fp, #44	; 0x2c
    1240:	str	r1, [sp, #8]
    1244:	strd	r2, [sp]
    1248:	mov	r3, r0
    124c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1250:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1254:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1258:	bl	76c <flatcc_json_parser_coerce_uint64>
    125c:	mov	r2, r0
    1260:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1264:	cmp	r3, r2
    1268:	bne	1274 <flatcc_json_parser_symbolic_uint64+0x1ac>
    126c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1270:	b	12a0 <flatcc_json_parser_symbolic_uint64+0x1d8>
    1274:	ldr	r3, [fp, #4]
    1278:	ldrd	r0, [r3]
    127c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    1280:	adds	r4, r0, r2
    1284:	adc	r5, r1, r3
    1288:	ldr	r3, [fp, #4]
    128c:	strd	r4, [r3]
    1290:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1294:	cmp	r3, #0
    1298:	bne	1140 <flatcc_json_parser_symbolic_uint64+0x78>
    129c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    12a0:	mov	r0, r3
    12a4:	sub	sp, fp, #16
    12a8:	ldrd	r4, [sp]
    12ac:	ldr	r6, [sp, #8]
    12b0:	ldr	fp, [sp, #12]
    12b4:	add	sp, sp, #16
    12b8:	pop	{pc}		; (ldr pc, [sp], #4)

000012bc <flatcc_json_parser_symbolic_uint32>:
    12bc:	str	r4, [sp, #-12]!
    12c0:	str	fp, [sp, #4]
    12c4:	str	lr, [sp, #8]
    12c8:	add	fp, sp, #8
    12cc:	sub	sp, sp, #68	; 0x44
    12d0:	str	r0, [fp, #-48]	; 0xffffffd0
    12d4:	str	r1, [fp, #-52]	; 0xffffffcc
    12d8:	str	r2, [fp, #-56]	; 0xffffffc8
    12dc:	str	r3, [fp, #-60]	; 0xffffffc4
    12e0:	mov	r3, #0
    12e4:	str	r3, [fp, #-28]	; 0xffffffe4
    12e8:	mov	r3, #0
    12ec:	str	r3, [fp, #-20]	; 0xffffffec
    12f0:	ldr	r3, [fp, #4]
    12f4:	mov	r2, #0
    12f8:	str	r2, [r3]
    12fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1300:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1304:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1308:	bl	700 <flatcc_json_parser_constant_start>
    130c:	str	r0, [fp, #-52]	; 0xffffffcc
    1310:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1314:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1318:	cmp	r2, r3
    131c:	bne	1328 <flatcc_json_parser_symbolic_uint32+0x6c>
    1320:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1324:	b	1484 <flatcc_json_parser_symbolic_uint32+0x1c8>
    1328:	ldr	r3, [fp, #-60]	; 0xffffffc4
    132c:	str	r3, [fp, #-16]
    1330:	ldr	r3, [fp, #-16]
    1334:	ldr	r4, [r3]
    1338:	ldr	r3, [fp, #-52]	; 0xffffffcc
    133c:	str	r3, [fp, #-24]	; 0xffffffe8
    1340:	sub	r2, fp, #40	; 0x28
    1344:	sub	r3, fp, #44	; 0x2c
    1348:	str	r3, [sp, #4]
    134c:	sub	r3, fp, #36	; 0x24
    1350:	str	r3, [sp]
    1354:	mov	r3, r2
    1358:	ldr	r2, [fp, #-56]	; 0xffffffc8
    135c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1360:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1364:	blx	r4
    1368:	str	r0, [fp, #-52]	; 0xffffffcc
    136c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1370:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1374:	cmp	r2, r3
    1378:	bne	1384 <flatcc_json_parser_symbolic_uint32+0xc8>
    137c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1380:	b	1484 <flatcc_json_parser_symbolic_uint32+0x1c8>
    1384:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1388:	ldr	r3, [fp, #-24]	; 0xffffffe8
    138c:	cmp	r2, r3
    1390:	bne	13b0 <flatcc_json_parser_symbolic_uint32+0xf4>
    1394:	ldr	r3, [fp, #-16]
    1398:	add	r3, r3, #4
    139c:	str	r3, [fp, #-16]
    13a0:	ldr	r3, [fp, #-16]
    13a4:	ldr	r3, [r3]
    13a8:	cmp	r3, #0
    13ac:	bne	1330 <flatcc_json_parser_symbolic_uint32+0x74>
    13b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    13b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13b8:	cmp	r2, r3
    13bc:	bne	13dc <flatcc_json_parser_symbolic_uint32+0x120>
    13c0:	mov	r3, #23
    13c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    13cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    13d0:	bl	0 <flatcc_json_parser_set_error>
    13d4:	mov	r3, r0
    13d8:	b	1484 <flatcc_json_parser_symbolic_uint32+0x1c8>
    13dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    13e0:	add	r2, r3, #1
    13e4:	str	r2, [fp, #-20]	; 0xffffffec
    13e8:	cmp	r3, #0
    13ec:	beq	141c <flatcc_json_parser_symbolic_uint32+0x160>
    13f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    13f4:	ldr	r3, [r3, #12]
    13f8:	cmp	r3, #0
    13fc:	beq	141c <flatcc_json_parser_symbolic_uint32+0x160>
    1400:	mov	r3, #14
    1404:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1408:	ldr	r1, [fp, #-52]	; 0xffffffcc
    140c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1410:	bl	0 <flatcc_json_parser_set_error>
    1414:	mov	r3, r0
    1418:	b	1484 <flatcc_json_parser_symbolic_uint32+0x1c8>
    141c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1420:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1424:	sub	r1, fp, #28
    1428:	str	r1, [sp, #8]
    142c:	strd	r2, [sp]
    1430:	mov	r3, r0
    1434:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1438:	ldr	r1, [fp, #-52]	; 0xffffffcc
    143c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1440:	bl	860 <flatcc_json_parser_coerce_uint32>
    1444:	mov	r2, r0
    1448:	ldr	r3, [fp, #-56]	; 0xffffffc8
    144c:	cmp	r3, r2
    1450:	bne	145c <flatcc_json_parser_symbolic_uint32+0x1a0>
    1454:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1458:	b	1484 <flatcc_json_parser_symbolic_uint32+0x1c8>
    145c:	ldr	r3, [fp, #4]
    1460:	ldr	r2, [r3]
    1464:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1468:	add	r2, r2, r3
    146c:	ldr	r3, [fp, #4]
    1470:	str	r2, [r3]
    1474:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1478:	cmp	r3, #0
    147c:	bne	1328 <flatcc_json_parser_symbolic_uint32+0x6c>
    1480:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1484:	mov	r0, r3
    1488:	sub	sp, fp, #8
    148c:	ldr	r4, [sp]
    1490:	ldr	fp, [sp, #4]
    1494:	add	sp, sp, #8
    1498:	pop	{pc}		; (ldr pc, [sp], #4)

0000149c <flatcc_json_parser_symbolic_uint16>:
    149c:	str	r4, [sp, #-12]!
    14a0:	str	fp, [sp, #4]
    14a4:	str	lr, [sp, #8]
    14a8:	add	fp, sp, #8
    14ac:	sub	sp, sp, #68	; 0x44
    14b0:	str	r0, [fp, #-48]	; 0xffffffd0
    14b4:	str	r1, [fp, #-52]	; 0xffffffcc
    14b8:	str	r2, [fp, #-56]	; 0xffffffc8
    14bc:	str	r3, [fp, #-60]	; 0xffffffc4
    14c0:	mov	r3, #0
    14c4:	strh	r3, [fp, #-26]	; 0xffffffe6
    14c8:	mov	r3, #0
    14cc:	str	r3, [fp, #-20]	; 0xffffffec
    14d0:	ldr	r3, [fp, #4]
    14d4:	mov	r2, #0
    14d8:	strh	r2, [r3]
    14dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    14e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    14e8:	bl	700 <flatcc_json_parser_constant_start>
    14ec:	str	r0, [fp, #-52]	; 0xffffffcc
    14f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    14f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14f8:	cmp	r2, r3
    14fc:	bne	1508 <flatcc_json_parser_symbolic_uint16+0x6c>
    1500:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1504:	b	1668 <flatcc_json_parser_symbolic_uint16+0x1cc>
    1508:	ldr	r3, [fp, #-60]	; 0xffffffc4
    150c:	str	r3, [fp, #-16]
    1510:	ldr	r3, [fp, #-16]
    1514:	ldr	r4, [r3]
    1518:	ldr	r3, [fp, #-52]	; 0xffffffcc
    151c:	str	r3, [fp, #-24]	; 0xffffffe8
    1520:	sub	r2, fp, #40	; 0x28
    1524:	sub	r3, fp, #44	; 0x2c
    1528:	str	r3, [sp, #4]
    152c:	sub	r3, fp, #36	; 0x24
    1530:	str	r3, [sp]
    1534:	mov	r3, r2
    1538:	ldr	r2, [fp, #-56]	; 0xffffffc8
    153c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1540:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1544:	blx	r4
    1548:	str	r0, [fp, #-52]	; 0xffffffcc
    154c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1550:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1554:	cmp	r2, r3
    1558:	bne	1564 <flatcc_json_parser_symbolic_uint16+0xc8>
    155c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1560:	b	1668 <flatcc_json_parser_symbolic_uint16+0x1cc>
    1564:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1568:	ldr	r3, [fp, #-24]	; 0xffffffe8
    156c:	cmp	r2, r3
    1570:	bne	1590 <flatcc_json_parser_symbolic_uint16+0xf4>
    1574:	ldr	r3, [fp, #-16]
    1578:	add	r3, r3, #4
    157c:	str	r3, [fp, #-16]
    1580:	ldr	r3, [fp, #-16]
    1584:	ldr	r3, [r3]
    1588:	cmp	r3, #0
    158c:	bne	1510 <flatcc_json_parser_symbolic_uint16+0x74>
    1590:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1594:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1598:	cmp	r2, r3
    159c:	bne	15bc <flatcc_json_parser_symbolic_uint16+0x120>
    15a0:	mov	r3, #23
    15a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    15ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15b0:	bl	0 <flatcc_json_parser_set_error>
    15b4:	mov	r3, r0
    15b8:	b	1668 <flatcc_json_parser_symbolic_uint16+0x1cc>
    15bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    15c0:	add	r2, r3, #1
    15c4:	str	r2, [fp, #-20]	; 0xffffffec
    15c8:	cmp	r3, #0
    15cc:	beq	15fc <flatcc_json_parser_symbolic_uint16+0x160>
    15d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    15d4:	ldr	r3, [r3, #12]
    15d8:	cmp	r3, #0
    15dc:	beq	15fc <flatcc_json_parser_symbolic_uint16+0x160>
    15e0:	mov	r3, #14
    15e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    15ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15f0:	bl	0 <flatcc_json_parser_set_error>
    15f4:	mov	r3, r0
    15f8:	b	1668 <flatcc_json_parser_symbolic_uint16+0x1cc>
    15fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1600:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1604:	sub	r1, fp, #26
    1608:	str	r1, [sp, #8]
    160c:	strd	r2, [sp]
    1610:	mov	r3, r0
    1614:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1618:	ldr	r1, [fp, #-52]	; 0xffffffcc
    161c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1620:	bl	900 <flatcc_json_parser_coerce_uint16>
    1624:	mov	r2, r0
    1628:	ldr	r3, [fp, #-56]	; 0xffffffc8
    162c:	cmp	r3, r2
    1630:	bne	163c <flatcc_json_parser_symbolic_uint16+0x1a0>
    1634:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1638:	b	1668 <flatcc_json_parser_symbolic_uint16+0x1cc>
    163c:	ldr	r3, [fp, #4]
    1640:	ldrh	r2, [r3]
    1644:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    1648:	add	r3, r2, r3
    164c:	uxth	r2, r3
    1650:	ldr	r3, [fp, #4]
    1654:	strh	r2, [r3]
    1658:	ldr	r3, [fp, #-44]	; 0xffffffd4
    165c:	cmp	r3, #0
    1660:	bne	1508 <flatcc_json_parser_symbolic_uint16+0x6c>
    1664:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1668:	mov	r0, r3
    166c:	sub	sp, fp, #8
    1670:	ldr	r4, [sp]
    1674:	ldr	fp, [sp, #4]
    1678:	add	sp, sp, #8
    167c:	pop	{pc}		; (ldr pc, [sp], #4)

00001680 <flatcc_json_parser_symbolic_uint8>:
    1680:	str	r4, [sp, #-12]!
    1684:	str	fp, [sp, #4]
    1688:	str	lr, [sp, #8]
    168c:	add	fp, sp, #8
    1690:	sub	sp, sp, #68	; 0x44
    1694:	str	r0, [fp, #-48]	; 0xffffffd0
    1698:	str	r1, [fp, #-52]	; 0xffffffcc
    169c:	str	r2, [fp, #-56]	; 0xffffffc8
    16a0:	str	r3, [fp, #-60]	; 0xffffffc4
    16a4:	mov	r3, #0
    16a8:	strb	r3, [fp, #-25]	; 0xffffffe7
    16ac:	mov	r3, #0
    16b0:	str	r3, [fp, #-20]	; 0xffffffec
    16b4:	ldr	r3, [fp, #4]
    16b8:	mov	r2, #0
    16bc:	strb	r2, [r3]
    16c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    16c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16cc:	bl	700 <flatcc_json_parser_constant_start>
    16d0:	str	r0, [fp, #-52]	; 0xffffffcc
    16d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    16d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    16dc:	cmp	r2, r3
    16e0:	bne	16ec <flatcc_json_parser_symbolic_uint8+0x6c>
    16e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16e8:	b	184c <flatcc_json_parser_symbolic_uint8+0x1cc>
    16ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
    16f0:	str	r3, [fp, #-16]
    16f4:	ldr	r3, [fp, #-16]
    16f8:	ldr	r4, [r3]
    16fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1700:	str	r3, [fp, #-24]	; 0xffffffe8
    1704:	sub	r2, fp, #40	; 0x28
    1708:	sub	r3, fp, #44	; 0x2c
    170c:	str	r3, [sp, #4]
    1710:	sub	r3, fp, #36	; 0x24
    1714:	str	r3, [sp]
    1718:	mov	r3, r2
    171c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1720:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1724:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1728:	blx	r4
    172c:	str	r0, [fp, #-52]	; 0xffffffcc
    1730:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1734:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1738:	cmp	r2, r3
    173c:	bne	1748 <flatcc_json_parser_symbolic_uint8+0xc8>
    1740:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1744:	b	184c <flatcc_json_parser_symbolic_uint8+0x1cc>
    1748:	ldr	r2, [fp, #-52]	; 0xffffffcc
    174c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1750:	cmp	r2, r3
    1754:	bne	1774 <flatcc_json_parser_symbolic_uint8+0xf4>
    1758:	ldr	r3, [fp, #-16]
    175c:	add	r3, r3, #4
    1760:	str	r3, [fp, #-16]
    1764:	ldr	r3, [fp, #-16]
    1768:	ldr	r3, [r3]
    176c:	cmp	r3, #0
    1770:	bne	16f4 <flatcc_json_parser_symbolic_uint8+0x74>
    1774:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1778:	ldr	r3, [fp, #-52]	; 0xffffffcc
    177c:	cmp	r2, r3
    1780:	bne	17a0 <flatcc_json_parser_symbolic_uint8+0x120>
    1784:	mov	r3, #23
    1788:	ldr	r2, [fp, #-56]	; 0xffffffc8
    178c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1790:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1794:	bl	0 <flatcc_json_parser_set_error>
    1798:	mov	r3, r0
    179c:	b	184c <flatcc_json_parser_symbolic_uint8+0x1cc>
    17a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    17a4:	add	r2, r3, #1
    17a8:	str	r2, [fp, #-20]	; 0xffffffec
    17ac:	cmp	r3, #0
    17b0:	beq	17e0 <flatcc_json_parser_symbolic_uint8+0x160>
    17b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    17b8:	ldr	r3, [r3, #12]
    17bc:	cmp	r3, #0
    17c0:	beq	17e0 <flatcc_json_parser_symbolic_uint8+0x160>
    17c4:	mov	r3, #14
    17c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    17cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    17d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17d4:	bl	0 <flatcc_json_parser_set_error>
    17d8:	mov	r3, r0
    17dc:	b	184c <flatcc_json_parser_symbolic_uint8+0x1cc>
    17e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    17e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    17e8:	sub	r1, fp, #25
    17ec:	str	r1, [sp, #8]
    17f0:	strd	r2, [sp]
    17f4:	mov	r3, r0
    17f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    17fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1800:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1804:	bl	9a0 <flatcc_json_parser_coerce_uint8>
    1808:	mov	r2, r0
    180c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1810:	cmp	r3, r2
    1814:	bne	1820 <flatcc_json_parser_symbolic_uint8+0x1a0>
    1818:	ldr	r3, [fp, #-56]	; 0xffffffc8
    181c:	b	184c <flatcc_json_parser_symbolic_uint8+0x1cc>
    1820:	ldr	r3, [fp, #4]
    1824:	ldrb	r2, [r3]
    1828:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    182c:	add	r3, r2, r3
    1830:	uxtb	r2, r3
    1834:	ldr	r3, [fp, #4]
    1838:	strb	r2, [r3]
    183c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1840:	cmp	r3, #0
    1844:	bne	16ec <flatcc_json_parser_symbolic_uint8+0x6c>
    1848:	ldr	r3, [fp, #-52]	; 0xffffffcc
    184c:	mov	r0, r3
    1850:	sub	sp, fp, #8
    1854:	ldr	r4, [sp]
    1858:	ldr	fp, [sp, #4]
    185c:	add	sp, sp, #8
    1860:	pop	{pc}		; (ldr pc, [sp], #4)

00001864 <flatcc_json_parser_symbolic_int64>:
    1864:	strd	r4, [sp, #-20]!	; 0xffffffec
    1868:	str	r6, [sp, #8]
    186c:	str	fp, [sp, #12]
    1870:	str	lr, [sp, #16]
    1874:	add	fp, sp, #16
    1878:	sub	sp, sp, #76	; 0x4c
    187c:	str	r0, [fp, #-64]	; 0xffffffc0
    1880:	str	r1, [fp, #-68]	; 0xffffffbc
    1884:	str	r2, [fp, #-72]	; 0xffffffb8
    1888:	str	r3, [fp, #-76]	; 0xffffffb4
    188c:	mov	r2, #0
    1890:	mov	r3, #0
    1894:	strd	r2, [fp, #-44]	; 0xffffffd4
    1898:	mov	r3, #0
    189c:	str	r3, [fp, #-28]	; 0xffffffe4
    18a0:	ldr	r1, [fp, #4]
    18a4:	mov	r2, #0
    18a8:	mov	r3, #0
    18ac:	strd	r2, [r1]
    18b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    18b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    18b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    18bc:	bl	700 <flatcc_json_parser_constant_start>
    18c0:	str	r0, [fp, #-68]	; 0xffffffbc
    18c4:	ldr	r2, [fp, #-68]	; 0xffffffbc
    18c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    18cc:	cmp	r2, r3
    18d0:	bne	18dc <flatcc_json_parser_symbolic_int64+0x78>
    18d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    18d8:	b	1a3c <flatcc_json_parser_symbolic_int64+0x1d8>
    18dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    18e0:	str	r3, [fp, #-24]	; 0xffffffe8
    18e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    18e8:	ldr	r6, [r3]
    18ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    18f0:	str	r3, [fp, #-32]	; 0xffffffe0
    18f4:	sub	r2, fp, #56	; 0x38
    18f8:	sub	r3, fp, #60	; 0x3c
    18fc:	str	r3, [sp, #4]
    1900:	sub	r3, fp, #52	; 0x34
    1904:	str	r3, [sp]
    1908:	mov	r3, r2
    190c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1910:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1914:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1918:	blx	r6
    191c:	str	r0, [fp, #-68]	; 0xffffffbc
    1920:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1924:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1928:	cmp	r2, r3
    192c:	bne	1938 <flatcc_json_parser_symbolic_int64+0xd4>
    1930:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1934:	b	1a3c <flatcc_json_parser_symbolic_int64+0x1d8>
    1938:	ldr	r2, [fp, #-68]	; 0xffffffbc
    193c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1940:	cmp	r2, r3
    1944:	bne	1964 <flatcc_json_parser_symbolic_int64+0x100>
    1948:	ldr	r3, [fp, #-24]	; 0xffffffe8
    194c:	add	r3, r3, #4
    1950:	str	r3, [fp, #-24]	; 0xffffffe8
    1954:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1958:	ldr	r3, [r3]
    195c:	cmp	r3, #0
    1960:	bne	18e4 <flatcc_json_parser_symbolic_int64+0x80>
    1964:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1968:	ldr	r3, [fp, #-68]	; 0xffffffbc
    196c:	cmp	r2, r3
    1970:	bne	1990 <flatcc_json_parser_symbolic_int64+0x12c>
    1974:	mov	r3, #23
    1978:	ldr	r2, [fp, #-72]	; 0xffffffb8
    197c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1980:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1984:	bl	0 <flatcc_json_parser_set_error>
    1988:	mov	r3, r0
    198c:	b	1a3c <flatcc_json_parser_symbolic_int64+0x1d8>
    1990:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1994:	add	r2, r3, #1
    1998:	str	r2, [fp, #-28]	; 0xffffffe4
    199c:	cmp	r3, #0
    19a0:	beq	19d0 <flatcc_json_parser_symbolic_int64+0x16c>
    19a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    19a8:	ldr	r3, [r3, #12]
    19ac:	cmp	r3, #0
    19b0:	beq	19d0 <flatcc_json_parser_symbolic_int64+0x16c>
    19b4:	mov	r3, #14
    19b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    19bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    19c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    19c4:	bl	0 <flatcc_json_parser_set_error>
    19c8:	mov	r3, r0
    19cc:	b	1a3c <flatcc_json_parser_symbolic_int64+0x1d8>
    19d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    19d4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    19d8:	sub	r1, fp, #44	; 0x2c
    19dc:	str	r1, [sp, #8]
    19e0:	strd	r2, [sp]
    19e4:	mov	r3, r0
    19e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    19ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
    19f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    19f4:	bl	a38 <flatcc_json_parser_coerce_int64>
    19f8:	mov	r2, r0
    19fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1a00:	cmp	r3, r2
    1a04:	bne	1a10 <flatcc_json_parser_symbolic_int64+0x1ac>
    1a08:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1a0c:	b	1a3c <flatcc_json_parser_symbolic_int64+0x1d8>
    1a10:	ldr	r3, [fp, #4]
    1a14:	ldrd	r0, [r3]
    1a18:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    1a1c:	adds	r4, r0, r2
    1a20:	adc	r5, r1, r3
    1a24:	ldr	r3, [fp, #4]
    1a28:	strd	r4, [r3]
    1a2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a30:	cmp	r3, #0
    1a34:	bne	18dc <flatcc_json_parser_symbolic_int64+0x78>
    1a38:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1a3c:	mov	r0, r3
    1a40:	sub	sp, fp, #16
    1a44:	ldrd	r4, [sp]
    1a48:	ldr	r6, [sp, #8]
    1a4c:	ldr	fp, [sp, #12]
    1a50:	add	sp, sp, #16
    1a54:	pop	{pc}		; (ldr pc, [sp], #4)

00001a58 <flatcc_json_parser_symbolic_int32>:
    1a58:	str	r4, [sp, #-12]!
    1a5c:	str	fp, [sp, #4]
    1a60:	str	lr, [sp, #8]
    1a64:	add	fp, sp, #8
    1a68:	sub	sp, sp, #68	; 0x44
    1a6c:	str	r0, [fp, #-48]	; 0xffffffd0
    1a70:	str	r1, [fp, #-52]	; 0xffffffcc
    1a74:	str	r2, [fp, #-56]	; 0xffffffc8
    1a78:	str	r3, [fp, #-60]	; 0xffffffc4
    1a7c:	mov	r3, #0
    1a80:	str	r3, [fp, #-28]	; 0xffffffe4
    1a84:	mov	r3, #0
    1a88:	str	r3, [fp, #-20]	; 0xffffffec
    1a8c:	ldr	r3, [fp, #4]
    1a90:	mov	r2, #0
    1a94:	str	r2, [r3]
    1a98:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1aa4:	bl	700 <flatcc_json_parser_constant_start>
    1aa8:	str	r0, [fp, #-52]	; 0xffffffcc
    1aac:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ab0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1ab4:	cmp	r2, r3
    1ab8:	bne	1ac4 <flatcc_json_parser_symbolic_int32+0x6c>
    1abc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ac0:	b	1c20 <flatcc_json_parser_symbolic_int32+0x1c8>
    1ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1ac8:	str	r3, [fp, #-16]
    1acc:	ldr	r3, [fp, #-16]
    1ad0:	ldr	r4, [r3]
    1ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ad8:	str	r3, [fp, #-24]	; 0xffffffe8
    1adc:	sub	r2, fp, #40	; 0x28
    1ae0:	sub	r3, fp, #44	; 0x2c
    1ae4:	str	r3, [sp, #4]
    1ae8:	sub	r3, fp, #36	; 0x24
    1aec:	str	r3, [sp]
    1af0:	mov	r3, r2
    1af4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1afc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b00:	blx	r4
    1b04:	str	r0, [fp, #-52]	; 0xffffffcc
    1b08:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1b0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1b10:	cmp	r2, r3
    1b14:	bne	1b20 <flatcc_json_parser_symbolic_int32+0xc8>
    1b18:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b1c:	b	1c20 <flatcc_json_parser_symbolic_int32+0x1c8>
    1b20:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b28:	cmp	r2, r3
    1b2c:	bne	1b4c <flatcc_json_parser_symbolic_int32+0xf4>
    1b30:	ldr	r3, [fp, #-16]
    1b34:	add	r3, r3, #4
    1b38:	str	r3, [fp, #-16]
    1b3c:	ldr	r3, [fp, #-16]
    1b40:	ldr	r3, [r3]
    1b44:	cmp	r3, #0
    1b48:	bne	1acc <flatcc_json_parser_symbolic_int32+0x74>
    1b4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1b50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b54:	cmp	r2, r3
    1b58:	bne	1b78 <flatcc_json_parser_symbolic_int32+0x120>
    1b5c:	mov	r3, #23
    1b60:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b64:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1b68:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b6c:	bl	0 <flatcc_json_parser_set_error>
    1b70:	mov	r3, r0
    1b74:	b	1c20 <flatcc_json_parser_symbolic_int32+0x1c8>
    1b78:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b7c:	add	r2, r3, #1
    1b80:	str	r2, [fp, #-20]	; 0xffffffec
    1b84:	cmp	r3, #0
    1b88:	beq	1bb8 <flatcc_json_parser_symbolic_int32+0x160>
    1b8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1b90:	ldr	r3, [r3, #12]
    1b94:	cmp	r3, #0
    1b98:	beq	1bb8 <flatcc_json_parser_symbolic_int32+0x160>
    1b9c:	mov	r3, #14
    1ba0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ba4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1ba8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bac:	bl	0 <flatcc_json_parser_set_error>
    1bb0:	mov	r3, r0
    1bb4:	b	1c20 <flatcc_json_parser_symbolic_int32+0x1c8>
    1bb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1bbc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1bc0:	sub	r1, fp, #28
    1bc4:	str	r1, [sp, #8]
    1bc8:	strd	r2, [sp]
    1bcc:	mov	r3, r0
    1bd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1bd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bdc:	bl	af8 <flatcc_json_parser_coerce_int32>
    1be0:	mov	r2, r0
    1be4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1be8:	cmp	r3, r2
    1bec:	bne	1bf8 <flatcc_json_parser_symbolic_int32+0x1a0>
    1bf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1bf4:	b	1c20 <flatcc_json_parser_symbolic_int32+0x1c8>
    1bf8:	ldr	r3, [fp, #4]
    1bfc:	ldr	r2, [r3]
    1c00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c04:	add	r2, r2, r3
    1c08:	ldr	r3, [fp, #4]
    1c0c:	str	r2, [r3]
    1c10:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1c14:	cmp	r3, #0
    1c18:	bne	1ac4 <flatcc_json_parser_symbolic_int32+0x6c>
    1c1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1c20:	mov	r0, r3
    1c24:	sub	sp, fp, #8
    1c28:	ldr	r4, [sp]
    1c2c:	ldr	fp, [sp, #4]
    1c30:	add	sp, sp, #8
    1c34:	pop	{pc}		; (ldr pc, [sp], #4)

00001c38 <flatcc_json_parser_symbolic_int16>:
    1c38:	str	r4, [sp, #-12]!
    1c3c:	str	fp, [sp, #4]
    1c40:	str	lr, [sp, #8]
    1c44:	add	fp, sp, #8
    1c48:	sub	sp, sp, #68	; 0x44
    1c4c:	str	r0, [fp, #-48]	; 0xffffffd0
    1c50:	str	r1, [fp, #-52]	; 0xffffffcc
    1c54:	str	r2, [fp, #-56]	; 0xffffffc8
    1c58:	str	r3, [fp, #-60]	; 0xffffffc4
    1c5c:	mov	r3, #0
    1c60:	strh	r3, [fp, #-26]	; 0xffffffe6
    1c64:	mov	r3, #0
    1c68:	str	r3, [fp, #-20]	; 0xffffffec
    1c6c:	ldr	r3, [fp, #4]
    1c70:	mov	r2, #0
    1c74:	strh	r2, [r3]
    1c78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1c80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c84:	bl	700 <flatcc_json_parser_constant_start>
    1c88:	str	r0, [fp, #-52]	; 0xffffffcc
    1c8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1c90:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1c94:	cmp	r2, r3
    1c98:	bne	1ca4 <flatcc_json_parser_symbolic_int16+0x6c>
    1c9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ca0:	b	1e10 <flatcc_json_parser_symbolic_int16+0x1d8>
    1ca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1ca8:	str	r3, [fp, #-16]
    1cac:	ldr	r3, [fp, #-16]
    1cb0:	ldr	r4, [r3]
    1cb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cb8:	str	r3, [fp, #-24]	; 0xffffffe8
    1cbc:	sub	r2, fp, #40	; 0x28
    1cc0:	sub	r3, fp, #44	; 0x2c
    1cc4:	str	r3, [sp, #4]
    1cc8:	sub	r3, fp, #36	; 0x24
    1ccc:	str	r3, [sp]
    1cd0:	mov	r3, r2
    1cd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1cdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1ce0:	blx	r4
    1ce4:	str	r0, [fp, #-52]	; 0xffffffcc
    1ce8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1cec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1cf0:	cmp	r2, r3
    1cf4:	bne	1d00 <flatcc_json_parser_symbolic_int16+0xc8>
    1cf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cfc:	b	1e10 <flatcc_json_parser_symbolic_int16+0x1d8>
    1d00:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d08:	cmp	r2, r3
    1d0c:	bne	1d2c <flatcc_json_parser_symbolic_int16+0xf4>
    1d10:	ldr	r3, [fp, #-16]
    1d14:	add	r3, r3, #4
    1d18:	str	r3, [fp, #-16]
    1d1c:	ldr	r3, [fp, #-16]
    1d20:	ldr	r3, [r3]
    1d24:	cmp	r3, #0
    1d28:	bne	1cac <flatcc_json_parser_symbolic_int16+0x74>
    1d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d34:	cmp	r2, r3
    1d38:	bne	1d58 <flatcc_json_parser_symbolic_int16+0x120>
    1d3c:	mov	r3, #23
    1d40:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d44:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1d48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d4c:	bl	0 <flatcc_json_parser_set_error>
    1d50:	mov	r3, r0
    1d54:	b	1e10 <flatcc_json_parser_symbolic_int16+0x1d8>
    1d58:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d5c:	add	r2, r3, #1
    1d60:	str	r2, [fp, #-20]	; 0xffffffec
    1d64:	cmp	r3, #0
    1d68:	beq	1d98 <flatcc_json_parser_symbolic_int16+0x160>
    1d6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1d70:	ldr	r3, [r3, #12]
    1d74:	cmp	r3, #0
    1d78:	beq	1d98 <flatcc_json_parser_symbolic_int16+0x160>
    1d7c:	mov	r3, #14
    1d80:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d84:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1d88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d8c:	bl	0 <flatcc_json_parser_set_error>
    1d90:	mov	r3, r0
    1d94:	b	1e10 <flatcc_json_parser_symbolic_int16+0x1d8>
    1d98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1d9c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1da0:	sub	r1, fp, #26
    1da4:	str	r1, [sp, #8]
    1da8:	strd	r2, [sp]
    1dac:	mov	r3, r0
    1db0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1db4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1db8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1dbc:	bl	bc0 <flatcc_json_parser_coerce_int16>
    1dc0:	mov	r2, r0
    1dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1dc8:	cmp	r3, r2
    1dcc:	bne	1dd8 <flatcc_json_parser_symbolic_int16+0x1a0>
    1dd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1dd4:	b	1e10 <flatcc_json_parser_symbolic_int16+0x1d8>
    1dd8:	ldr	r3, [fp, #4]
    1ddc:	ldrsh	r3, [r3]
    1de0:	uxth	r2, r3
    1de4:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
    1de8:	uxth	r3, r3
    1dec:	add	r3, r2, r3
    1df0:	uxth	r3, r3
    1df4:	sxth	r2, r3
    1df8:	ldr	r3, [fp, #4]
    1dfc:	strh	r2, [r3]
    1e00:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1e04:	cmp	r3, #0
    1e08:	bne	1ca4 <flatcc_json_parser_symbolic_int16+0x6c>
    1e0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e10:	mov	r0, r3
    1e14:	sub	sp, fp, #8
    1e18:	ldr	r4, [sp]
    1e1c:	ldr	fp, [sp, #4]
    1e20:	add	sp, sp, #8
    1e24:	pop	{pc}		; (ldr pc, [sp], #4)

00001e28 <flatcc_json_parser_symbolic_int8>:
    1e28:	str	r4, [sp, #-12]!
    1e2c:	str	fp, [sp, #4]
    1e30:	str	lr, [sp, #8]
    1e34:	add	fp, sp, #8
    1e38:	sub	sp, sp, #68	; 0x44
    1e3c:	str	r0, [fp, #-48]	; 0xffffffd0
    1e40:	str	r1, [fp, #-52]	; 0xffffffcc
    1e44:	str	r2, [fp, #-56]	; 0xffffffc8
    1e48:	str	r3, [fp, #-60]	; 0xffffffc4
    1e4c:	mov	r3, #0
    1e50:	strb	r3, [fp, #-25]	; 0xffffffe7
    1e54:	mov	r3, #0
    1e58:	str	r3, [fp, #-20]	; 0xffffffec
    1e5c:	ldr	r3, [fp, #4]
    1e60:	mov	r2, #0
    1e64:	strb	r2, [r3]
    1e68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e74:	bl	700 <flatcc_json_parser_constant_start>
    1e78:	str	r0, [fp, #-52]	; 0xffffffcc
    1e7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1e80:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e84:	cmp	r2, r3
    1e88:	bne	1e94 <flatcc_json_parser_symbolic_int8+0x6c>
    1e8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e90:	b	2000 <flatcc_json_parser_symbolic_int8+0x1d8>
    1e94:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1e98:	str	r3, [fp, #-16]
    1e9c:	ldr	r3, [fp, #-16]
    1ea0:	ldr	r4, [r3]
    1ea4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ea8:	str	r3, [fp, #-24]	; 0xffffffe8
    1eac:	sub	r2, fp, #40	; 0x28
    1eb0:	sub	r3, fp, #44	; 0x2c
    1eb4:	str	r3, [sp, #4]
    1eb8:	sub	r3, fp, #36	; 0x24
    1ebc:	str	r3, [sp]
    1ec0:	mov	r3, r2
    1ec4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ecc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1ed0:	blx	r4
    1ed4:	str	r0, [fp, #-52]	; 0xffffffcc
    1ed8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1edc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1ee0:	cmp	r2, r3
    1ee4:	bne	1ef0 <flatcc_json_parser_symbolic_int8+0xc8>
    1ee8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1eec:	b	2000 <flatcc_json_parser_symbolic_int8+0x1d8>
    1ef0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ef8:	cmp	r2, r3
    1efc:	bne	1f1c <flatcc_json_parser_symbolic_int8+0xf4>
    1f00:	ldr	r3, [fp, #-16]
    1f04:	add	r3, r3, #4
    1f08:	str	r3, [fp, #-16]
    1f0c:	ldr	r3, [fp, #-16]
    1f10:	ldr	r3, [r3]
    1f14:	cmp	r3, #0
    1f18:	bne	1e9c <flatcc_json_parser_symbolic_int8+0x74>
    1f1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1f24:	cmp	r2, r3
    1f28:	bne	1f48 <flatcc_json_parser_symbolic_int8+0x120>
    1f2c:	mov	r3, #23
    1f30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f34:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1f38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f3c:	bl	0 <flatcc_json_parser_set_error>
    1f40:	mov	r3, r0
    1f44:	b	2000 <flatcc_json_parser_symbolic_int8+0x1d8>
    1f48:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f4c:	add	r2, r3, #1
    1f50:	str	r2, [fp, #-20]	; 0xffffffec
    1f54:	cmp	r3, #0
    1f58:	beq	1f88 <flatcc_json_parser_symbolic_int8+0x160>
    1f5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1f60:	ldr	r3, [r3, #12]
    1f64:	cmp	r3, #0
    1f68:	beq	1f88 <flatcc_json_parser_symbolic_int8+0x160>
    1f6c:	mov	r3, #14
    1f70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f74:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1f78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f7c:	bl	0 <flatcc_json_parser_set_error>
    1f80:	mov	r3, r0
    1f84:	b	2000 <flatcc_json_parser_symbolic_int8+0x1d8>
    1f88:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1f8c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1f90:	sub	r1, fp, #25
    1f94:	str	r1, [sp, #8]
    1f98:	strd	r2, [sp]
    1f9c:	mov	r3, r0
    1fa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1fa8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1fac:	bl	c8c <flatcc_json_parser_coerce_int8>
    1fb0:	mov	r2, r0
    1fb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1fb8:	cmp	r3, r2
    1fbc:	bne	1fc8 <flatcc_json_parser_symbolic_int8+0x1a0>
    1fc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1fc4:	b	2000 <flatcc_json_parser_symbolic_int8+0x1d8>
    1fc8:	ldr	r3, [fp, #4]
    1fcc:	ldrsb	r3, [r3]
    1fd0:	uxtb	r2, r3
    1fd4:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    1fd8:	uxtb	r3, r3
    1fdc:	add	r3, r2, r3
    1fe0:	uxtb	r3, r3
    1fe4:	sxtb	r2, r3
    1fe8:	ldr	r3, [fp, #4]
    1fec:	strb	r2, [r3]
    1ff0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1ff4:	cmp	r3, #0
    1ff8:	bne	1e94 <flatcc_json_parser_symbolic_int8+0x6c>
    1ffc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2000:	mov	r0, r3
    2004:	sub	sp, fp, #8
    2008:	ldr	r4, [sp]
    200c:	ldr	fp, [sp, #4]
    2010:	add	sp, sp, #8
    2014:	pop	{pc}		; (ldr pc, [sp], #4)

00002018 <flatcc_json_parser_symbolic_bool>:
    2018:	str	r4, [sp, #-12]!
    201c:	str	fp, [sp, #4]
    2020:	str	lr, [sp, #8]
    2024:	add	fp, sp, #8
    2028:	sub	sp, sp, #68	; 0x44
    202c:	str	r0, [fp, #-48]	; 0xffffffd0
    2030:	str	r1, [fp, #-52]	; 0xffffffcc
    2034:	str	r2, [fp, #-56]	; 0xffffffc8
    2038:	str	r3, [fp, #-60]	; 0xffffffc4
    203c:	mov	r3, #0
    2040:	strb	r3, [fp, #-25]	; 0xffffffe7
    2044:	mov	r3, #0
    2048:	str	r3, [fp, #-20]	; 0xffffffec
    204c:	ldr	r3, [fp, #4]
    2050:	mov	r2, #0
    2054:	strb	r2, [r3]
    2058:	ldr	r2, [fp, #-56]	; 0xffffffc8
    205c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2060:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2064:	bl	700 <flatcc_json_parser_constant_start>
    2068:	str	r0, [fp, #-52]	; 0xffffffcc
    206c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2070:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2074:	cmp	r2, r3
    2078:	bne	2084 <flatcc_json_parser_symbolic_bool+0x6c>
    207c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2080:	b	21e4 <flatcc_json_parser_symbolic_bool+0x1cc>
    2084:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2088:	str	r3, [fp, #-16]
    208c:	ldr	r3, [fp, #-16]
    2090:	ldr	r4, [r3]
    2094:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2098:	str	r3, [fp, #-24]	; 0xffffffe8
    209c:	sub	r2, fp, #40	; 0x28
    20a0:	sub	r3, fp, #44	; 0x2c
    20a4:	str	r3, [sp, #4]
    20a8:	sub	r3, fp, #36	; 0x24
    20ac:	str	r3, [sp]
    20b0:	mov	r3, r2
    20b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    20bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20c0:	blx	r4
    20c4:	str	r0, [fp, #-52]	; 0xffffffcc
    20c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    20d0:	cmp	r2, r3
    20d4:	bne	20e0 <flatcc_json_parser_symbolic_bool+0xc8>
    20d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20dc:	b	21e4 <flatcc_json_parser_symbolic_bool+0x1cc>
    20e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20e8:	cmp	r2, r3
    20ec:	bne	210c <flatcc_json_parser_symbolic_bool+0xf4>
    20f0:	ldr	r3, [fp, #-16]
    20f4:	add	r3, r3, #4
    20f8:	str	r3, [fp, #-16]
    20fc:	ldr	r3, [fp, #-16]
    2100:	ldr	r3, [r3]
    2104:	cmp	r3, #0
    2108:	bne	208c <flatcc_json_parser_symbolic_bool+0x74>
    210c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2110:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2114:	cmp	r2, r3
    2118:	bne	2138 <flatcc_json_parser_symbolic_bool+0x120>
    211c:	mov	r3, #23
    2120:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2124:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2128:	ldr	r0, [fp, #-48]	; 0xffffffd0
    212c:	bl	0 <flatcc_json_parser_set_error>
    2130:	mov	r3, r0
    2134:	b	21e4 <flatcc_json_parser_symbolic_bool+0x1cc>
    2138:	ldr	r3, [fp, #-20]	; 0xffffffec
    213c:	add	r2, r3, #1
    2140:	str	r2, [fp, #-20]	; 0xffffffec
    2144:	cmp	r3, #0
    2148:	beq	2178 <flatcc_json_parser_symbolic_bool+0x160>
    214c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2150:	ldr	r3, [r3, #12]
    2154:	cmp	r3, #0
    2158:	beq	2178 <flatcc_json_parser_symbolic_bool+0x160>
    215c:	mov	r3, #14
    2160:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2164:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2168:	ldr	r0, [fp, #-48]	; 0xffffffd0
    216c:	bl	0 <flatcc_json_parser_set_error>
    2170:	mov	r3, r0
    2174:	b	21e4 <flatcc_json_parser_symbolic_bool+0x1cc>
    2178:	ldr	r0, [fp, #-40]	; 0xffffffd8
    217c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2180:	sub	r1, fp, #25
    2184:	str	r1, [sp, #8]
    2188:	strd	r2, [sp]
    218c:	mov	r3, r0
    2190:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2194:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2198:	ldr	r0, [fp, #-48]	; 0xffffffd0
    219c:	bl	7d8 <flatcc_json_parser_coerce_bool>
    21a0:	mov	r2, r0
    21a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    21a8:	cmp	r3, r2
    21ac:	bne	21b8 <flatcc_json_parser_symbolic_bool+0x1a0>
    21b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    21b4:	b	21e4 <flatcc_json_parser_symbolic_bool+0x1cc>
    21b8:	ldr	r3, [fp, #4]
    21bc:	ldrb	r2, [r3]
    21c0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    21c4:	add	r3, r2, r3
    21c8:	uxtb	r2, r3
    21cc:	ldr	r3, [fp, #4]
    21d0:	strb	r2, [r3]
    21d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    21d8:	cmp	r3, #0
    21dc:	bne	2084 <flatcc_json_parser_symbolic_bool+0x6c>
    21e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    21e4:	mov	r0, r3
    21e8:	sub	sp, fp, #8
    21ec:	ldr	r4, [sp]
    21f0:	ldr	fp, [sp, #4]
    21f4:	add	sp, sp, #8
    21f8:	pop	{pc}		; (ldr pc, [sp], #4)

000021fc <flatcc_json_parser_symbolic_float>:
    21fc:	str	r4, [sp, #-12]!
    2200:	str	fp, [sp, #4]
    2204:	str	lr, [sp, #8]
    2208:	add	fp, sp, #8
    220c:	sub	sp, sp, #68	; 0x44
    2210:	str	r0, [fp, #-48]	; 0xffffffd0
    2214:	str	r1, [fp, #-52]	; 0xffffffcc
    2218:	str	r2, [fp, #-56]	; 0xffffffc8
    221c:	str	r3, [fp, #-60]	; 0xffffffc4
    2220:	mov	r3, #0
    2224:	str	r3, [fp, #-28]	; 0xffffffe4
    2228:	mov	r3, #0
    222c:	str	r3, [fp, #-20]	; 0xffffffec
    2230:	ldr	r3, [fp, #4]
    2234:	mov	r2, #0
    2238:	str	r2, [r3]
    223c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2240:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2244:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2248:	bl	700 <flatcc_json_parser_constant_start>
    224c:	str	r0, [fp, #-52]	; 0xffffffcc
    2250:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2254:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2258:	cmp	r2, r3
    225c:	bne	2268 <flatcc_json_parser_symbolic_float+0x6c>
    2260:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2264:	b	23c4 <flatcc_json_parser_symbolic_float+0x1c8>
    2268:	ldr	r3, [fp, #-60]	; 0xffffffc4
    226c:	str	r3, [fp, #-16]
    2270:	ldr	r3, [fp, #-16]
    2274:	ldr	r4, [r3]
    2278:	ldr	r3, [fp, #-52]	; 0xffffffcc
    227c:	str	r3, [fp, #-24]	; 0xffffffe8
    2280:	sub	r2, fp, #40	; 0x28
    2284:	sub	r3, fp, #44	; 0x2c
    2288:	str	r3, [sp, #4]
    228c:	sub	r3, fp, #36	; 0x24
    2290:	str	r3, [sp]
    2294:	mov	r3, r2
    2298:	ldr	r2, [fp, #-56]	; 0xffffffc8
    229c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    22a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    22a4:	blx	r4
    22a8:	str	r0, [fp, #-52]	; 0xffffffcc
    22ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
    22b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    22b4:	cmp	r2, r3
    22b8:	bne	22c4 <flatcc_json_parser_symbolic_float+0xc8>
    22bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22c0:	b	23c4 <flatcc_json_parser_symbolic_float+0x1c8>
    22c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    22c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    22cc:	cmp	r2, r3
    22d0:	bne	22f0 <flatcc_json_parser_symbolic_float+0xf4>
    22d4:	ldr	r3, [fp, #-16]
    22d8:	add	r3, r3, #4
    22dc:	str	r3, [fp, #-16]
    22e0:	ldr	r3, [fp, #-16]
    22e4:	ldr	r3, [r3]
    22e8:	cmp	r3, #0
    22ec:	bne	2270 <flatcc_json_parser_symbolic_float+0x74>
    22f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    22f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22f8:	cmp	r2, r3
    22fc:	bne	231c <flatcc_json_parser_symbolic_float+0x120>
    2300:	mov	r3, #23
    2304:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2308:	ldr	r1, [fp, #-52]	; 0xffffffcc
    230c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2310:	bl	0 <flatcc_json_parser_set_error>
    2314:	mov	r3, r0
    2318:	b	23c4 <flatcc_json_parser_symbolic_float+0x1c8>
    231c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2320:	add	r2, r3, #1
    2324:	str	r2, [fp, #-20]	; 0xffffffec
    2328:	cmp	r3, #0
    232c:	beq	235c <flatcc_json_parser_symbolic_float+0x160>
    2330:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2334:	ldr	r3, [r3, #12]
    2338:	cmp	r3, #0
    233c:	beq	235c <flatcc_json_parser_symbolic_float+0x160>
    2340:	mov	r3, #14
    2344:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2348:	ldr	r1, [fp, #-52]	; 0xffffffcc
    234c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2350:	bl	0 <flatcc_json_parser_set_error>
    2354:	mov	r3, r0
    2358:	b	23c4 <flatcc_json_parser_symbolic_float+0x1c8>
    235c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2360:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2364:	sub	r1, fp, #28
    2368:	str	r1, [sp, #8]
    236c:	strd	r2, [sp]
    2370:	mov	r3, r0
    2374:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2378:	ldr	r1, [fp, #-52]	; 0xffffffcc
    237c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2380:	bl	d50 <flatcc_json_parser_coerce_float>
    2384:	mov	r2, r0
    2388:	ldr	r3, [fp, #-56]	; 0xffffffc8
    238c:	cmp	r3, r2
    2390:	bne	239c <flatcc_json_parser_symbolic_float+0x1a0>
    2394:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2398:	b	23c4 <flatcc_json_parser_symbolic_float+0x1c8>
    239c:	ldr	r3, [fp, #4]
    23a0:	vldr	s14, [r3]
    23a4:	vldr	s15, [fp, #-28]	; 0xffffffe4
    23a8:	vadd.f32	s15, s14, s15
    23ac:	ldr	r3, [fp, #4]
    23b0:	vstr	s15, [r3]
    23b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    23b8:	cmp	r3, #0
    23bc:	bne	2268 <flatcc_json_parser_symbolic_float+0x6c>
    23c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23c4:	mov	r0, r3
    23c8:	sub	sp, fp, #8
    23cc:	ldr	r4, [sp]
    23d0:	ldr	fp, [sp, #4]
    23d4:	add	sp, sp, #8
    23d8:	pop	{pc}		; (ldr pc, [sp], #4)

000023dc <flatcc_json_parser_symbolic_double>:
    23dc:	str	r4, [sp, #-12]!
    23e0:	str	fp, [sp, #4]
    23e4:	str	lr, [sp, #8]
    23e8:	add	fp, sp, #8
    23ec:	sub	sp, sp, #76	; 0x4c
    23f0:	str	r0, [fp, #-56]	; 0xffffffc8
    23f4:	str	r1, [fp, #-60]	; 0xffffffc4
    23f8:	str	r2, [fp, #-64]	; 0xffffffc0
    23fc:	str	r3, [fp, #-68]	; 0xffffffbc
    2400:	mov	r2, #0
    2404:	mov	r3, #0
    2408:	strd	r2, [fp, #-36]	; 0xffffffdc
    240c:	mov	r3, #0
    2410:	str	r3, [fp, #-20]	; 0xffffffec
    2414:	ldr	r1, [fp, #4]
    2418:	mov	r2, #0
    241c:	mov	r3, #0
    2420:	strd	r2, [r1]
    2424:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2428:	ldr	r1, [fp, #-60]	; 0xffffffc4
    242c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2430:	bl	700 <flatcc_json_parser_constant_start>
    2434:	str	r0, [fp, #-60]	; 0xffffffc4
    2438:	ldr	r2, [fp, #-60]	; 0xffffffc4
    243c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2440:	cmp	r2, r3
    2444:	bne	2450 <flatcc_json_parser_symbolic_double+0x74>
    2448:	ldr	r3, [fp, #-60]	; 0xffffffc4
    244c:	b	25ac <flatcc_json_parser_symbolic_double+0x1d0>
    2450:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2454:	str	r3, [fp, #-16]
    2458:	ldr	r3, [fp, #-16]
    245c:	ldr	r4, [r3]
    2460:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2464:	str	r3, [fp, #-24]	; 0xffffffe8
    2468:	sub	r2, fp, #48	; 0x30
    246c:	sub	r3, fp, #52	; 0x34
    2470:	str	r3, [sp, #4]
    2474:	sub	r3, fp, #44	; 0x2c
    2478:	str	r3, [sp]
    247c:	mov	r3, r2
    2480:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2484:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2488:	ldr	r0, [fp, #-56]	; 0xffffffc8
    248c:	blx	r4
    2490:	str	r0, [fp, #-60]	; 0xffffffc4
    2494:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2498:	ldr	r3, [fp, #-64]	; 0xffffffc0
    249c:	cmp	r2, r3
    24a0:	bne	24ac <flatcc_json_parser_symbolic_double+0xd0>
    24a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    24a8:	b	25ac <flatcc_json_parser_symbolic_double+0x1d0>
    24ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
    24b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    24b4:	cmp	r2, r3
    24b8:	bne	24d8 <flatcc_json_parser_symbolic_double+0xfc>
    24bc:	ldr	r3, [fp, #-16]
    24c0:	add	r3, r3, #4
    24c4:	str	r3, [fp, #-16]
    24c8:	ldr	r3, [fp, #-16]
    24cc:	ldr	r3, [r3]
    24d0:	cmp	r3, #0
    24d4:	bne	2458 <flatcc_json_parser_symbolic_double+0x7c>
    24d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    24dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    24e0:	cmp	r2, r3
    24e4:	bne	2504 <flatcc_json_parser_symbolic_double+0x128>
    24e8:	mov	r3, #23
    24ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
    24f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    24f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    24f8:	bl	0 <flatcc_json_parser_set_error>
    24fc:	mov	r3, r0
    2500:	b	25ac <flatcc_json_parser_symbolic_double+0x1d0>
    2504:	ldr	r3, [fp, #-20]	; 0xffffffec
    2508:	add	r2, r3, #1
    250c:	str	r2, [fp, #-20]	; 0xffffffec
    2510:	cmp	r3, #0
    2514:	beq	2544 <flatcc_json_parser_symbolic_double+0x168>
    2518:	ldr	r3, [fp, #-56]	; 0xffffffc8
    251c:	ldr	r3, [r3, #12]
    2520:	cmp	r3, #0
    2524:	beq	2544 <flatcc_json_parser_symbolic_double+0x168>
    2528:	mov	r3, #14
    252c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2530:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2534:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2538:	bl	0 <flatcc_json_parser_set_error>
    253c:	mov	r3, r0
    2540:	b	25ac <flatcc_json_parser_symbolic_double+0x1d0>
    2544:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2548:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    254c:	sub	r1, fp, #36	; 0x24
    2550:	str	r1, [sp, #8]
    2554:	strd	r2, [sp]
    2558:	mov	r3, r0
    255c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2560:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2564:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2568:	bl	dbc <flatcc_json_parser_coerce_double>
    256c:	mov	r2, r0
    2570:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2574:	cmp	r3, r2
    2578:	bne	2584 <flatcc_json_parser_symbolic_double+0x1a8>
    257c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2580:	b	25ac <flatcc_json_parser_symbolic_double+0x1d0>
    2584:	ldr	r3, [fp, #4]
    2588:	vldr	d6, [r3]
    258c:	vldr	d7, [fp, #-36]	; 0xffffffdc
    2590:	vadd.f64	d7, d6, d7
    2594:	ldr	r3, [fp, #4]
    2598:	vstr	d7, [r3]
    259c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25a0:	cmp	r3, #0
    25a4:	bne	2450 <flatcc_json_parser_symbolic_double+0x74>
    25a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    25ac:	mov	r0, r3
    25b0:	sub	sp, fp, #8
    25b4:	ldr	r4, [sp]
    25b8:	ldr	fp, [sp, #4]
    25bc:	add	sp, sp, #8
    25c0:	pop	{pc}		; (ldr pc, [sp], #4)

000025c4 <test>:
    25c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    25c8:	strd	r6, [sp, #8]
    25cc:	strd	r8, [sp, #16]
    25d0:	str	fp, [sp, #24]
    25d4:	str	lr, [sp, #28]
    25d8:	add	fp, sp, #28
    25dc:	sub	sp, sp, #544	; 0x220
    25e0:	str	r0, [fp, #-120]	; 0xffffff88
    25e4:	str	r1, [fp, #-124]	; 0xffffff84
    25e8:	str	r2, [fp, #-128]	; 0xffffff80
    25ec:	str	r3, [fp, #-132]	; 0xffffff7c
    25f0:	mov	r3, #0
    25f4:	str	r3, [fp, #-36]	; 0xffffffdc
    25f8:	sub	r3, fp, #112	; 0x70
    25fc:	str	r3, [fp, #-40]	; 0xffffffd8
    2600:	mov	r2, #44	; 0x2c
    2604:	mov	r1, #0
    2608:	ldr	r0, [fp, #-40]	; 0xffffffd8
    260c:	bl	0 <memset>
    2610:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2614:	mov	r3, #1
    2618:	str	r3, [r2, #16]
    261c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2620:	ldr	r3, [fp, #-124]	; 0xffffff84
    2624:	str	r3, [r2, #4]
    2628:	mov	r3, #0
    262c:	mov	r2, #0
    2630:	movw	r1, #0
    2634:	movt	r1, #0
    2638:	ldr	r0, [fp, #-120]	; 0xffffff88
    263c:	bl	0 <flatcc_builder_start_buffer>
    2640:	ldr	r2, [fp, #-128]	; 0xffffff80
    2644:	ldr	r1, [fp, #-124]	; 0xffffff84
    2648:	ldr	r0, [fp, #-40]	; 0xffffffd8
    264c:	bl	0 <flatcc_json_parser_space>
    2650:	str	r0, [fp, #-124]	; 0xffffff84
    2654:	ldr	r2, [fp, #-124]	; 0xffffff84
    2658:	ldr	r3, [fp, #-128]	; 0xffffff80
    265c:	cmp	r2, r3
    2660:	bne	2688 <test+0xc4>
    2664:	movw	r3, #0
    2668:	movt	r3, #0
    266c:	ldr	r3, [r3]
    2670:	mov	r2, #13
    2674:	mov	r1, #1
    2678:	movw	r0, #0
    267c:	movt	r0, #0
    2680:	bl	0 <fwrite>
    2684:	b	3e90 <test+0x18cc>
    2688:	ldr	r2, [fp, #-128]	; 0xffffff80
    268c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2690:	cmp	r2, r3
    2694:	bls	26dc <test+0x118>
    2698:	ldr	r3, [fp, #-124]	; 0xffffff84
    269c:	ldrb	r3, [r3]
    26a0:	cmp	r3, #123	; 0x7b
    26a4:	bne	26dc <test+0x118>
    26a8:	ldr	r3, [fp, #-124]	; 0xffffff84
    26ac:	add	r3, r3, #1
    26b0:	str	r3, [fp, #-124]	; 0xffffff84
    26b4:	ldr	r2, [fp, #-128]	; 0xffffff80
    26b8:	ldr	r1, [fp, #-124]	; 0xffffff84
    26bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    26c0:	bl	0 <flatcc_json_parser_space>
    26c4:	str	r0, [fp, #-124]	; 0xffffff84
    26c8:	ldr	r2, [fp, #-124]	; 0xffffff84
    26cc:	ldr	r3, [fp, #-128]	; 0xffffff80
    26d0:	cmp	r2, r3
    26d4:	beq	2718 <test+0x154>
    26d8:	b	273c <test+0x178>
    26dc:	movw	r3, #0
    26e0:	movt	r3, #0
    26e4:	ldr	r3, [r3]
    26e8:	mov	r2, #123	; 0x7b
    26ec:	movw	r1, #0
    26f0:	movt	r1, #0
    26f4:	mov	r0, r3
    26f8:	bl	0 <fprintf>
    26fc:	mov	r3, #17
    2700:	ldr	r2, [fp, #-128]	; 0xffffff80
    2704:	ldr	r1, [fp, #-124]	; 0xffffff84
    2708:	ldr	r0, [fp, #-40]	; 0xffffffd8
    270c:	bl	0 <flatcc_json_parser_set_error>
    2710:	str	r0, [fp, #-124]	; 0xffffff84
    2714:	b	3e90 <test+0x18cc>
    2718:	movw	r3, #0
    271c:	movt	r3, #0
    2720:	ldr	r3, [r3]
    2724:	mov	r2, #13
    2728:	mov	r1, #1
    272c:	movw	r0, #0
    2730:	movt	r0, #0
    2734:	bl	0 <fwrite>
    2738:	b	3e90 <test+0x18cc>
    273c:	mov	r1, #11
    2740:	ldr	r0, [fp, #-120]	; 0xffffff88
    2744:	bl	0 <flatcc_builder_start_table>
    2748:	ldr	r2, [fp, #-128]	; 0xffffff80
    274c:	ldr	r1, [fp, #-124]	; 0xffffff84
    2750:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2754:	bl	198 <flatcc_json_parser_symbol_start>
    2758:	str	r0, [fp, #-124]	; 0xffffff84
    275c:	ldr	r1, [fp, #-128]	; 0xffffff80
    2760:	ldr	r0, [fp, #-124]	; 0xffffff84
    2764:	bl	4cc <flatcc_json_parser_symbol_part>
    2768:	strd	r0, [fp, #-52]	; 0xffffffcc
    276c:	ldr	r2, [fp, #-128]	; 0xffffff80
    2770:	ldr	r3, [fp, #-124]	; 0xffffff84
    2774:	sub	r3, r2, r3
    2778:	cmp	r3, #8
    277c:	ble	278c <test+0x1c8>
    2780:	ldr	r3, [fp, #-124]	; 0xffffff84
    2784:	add	r3, r3, #8
    2788:	b	2790 <test+0x1cc>
    278c:	ldr	r3, [fp, #-128]	; 0xffffff80
    2790:	str	r3, [fp, #-56]	; 0xffffffc8
    2794:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2798:	mov	r2, #0
    279c:	movt	r2, #65535	; 0xffff
    27a0:	mvn	r3, #0
    27a4:	and	ip, r0, r2
    27a8:	str	ip, [fp, #-140]	; 0xffffff74
    27ac:	and	r3, r1, r3
    27b0:	str	r3, [fp, #-136]	; 0xffffff78
    27b4:	mov	r3, #115	; 0x73
    27b8:	uxtb	r2, r3
    27bc:	mov	r3, #0
    27c0:	mov	r4, #0
    27c4:	mov	r5, #0
    27c8:	lsl	r5, r2, #24
    27cc:	mov	r4, #0
    27d0:	mov	r3, #101	; 0x65
    27d4:	uxtb	r2, r3
    27d8:	mov	r3, #0
    27dc:	mov	r0, #0
    27e0:	mov	r1, #0
    27e4:	lsl	r1, r2, #16
    27e8:	mov	r0, #0
    27ec:	orr	r3, r4, r0
    27f0:	str	r3, [fp, #-148]	; 0xffffff6c
    27f4:	orr	r3, r5, r1
    27f8:	str	r3, [fp, #-144]	; 0xffffff70
    27fc:	mov	r3, #99	; 0x63
    2800:	uxtb	r2, r3
    2804:	mov	r3, #0
    2808:	mov	r0, #0
    280c:	mov	r1, #0
    2810:	lsl	r1, r2, #8
    2814:	mov	r0, #0
    2818:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    281c:	mov	ip, r2
    2820:	orr	ip, ip, r0
    2824:	str	ip, [fp, #-156]	; 0xffffff64
    2828:	orr	r3, r3, r1
    282c:	str	r3, [fp, #-152]	; 0xffffff68
    2830:	mov	r3, #111	; 0x6f
    2834:	uxtb	r2, r3
    2838:	mov	r3, #0
    283c:	mov	r0, #0
    2840:	mov	r1, #0
    2844:	mov	r1, r2
    2848:	mov	r0, #0
    284c:	ldrd	r2, [fp, #-156]	; 0xffffff64
    2850:	mov	ip, r2
    2854:	orr	ip, ip, r0
    2858:	str	ip, [fp, #-164]	; 0xffffff5c
    285c:	orr	r3, r3, r1
    2860:	str	r3, [fp, #-160]	; 0xffffff60
    2864:	mov	r3, #110	; 0x6e
    2868:	uxtb	r2, r3
    286c:	mov	r3, #0
    2870:	lsr	r1, r2, #8
    2874:	str	r1, [fp, #-168]	; 0xffffff58
    2878:	lsl	r3, r2, #24
    287c:	str	r3, [fp, #-172]	; 0xffffff54
    2880:	ldrd	r0, [fp, #-164]	; 0xffffff5c
    2884:	mov	ip, r0
    2888:	ldrd	r2, [fp, #-172]	; 0xffffff54
    288c:	mov	lr, r2
    2890:	orr	ip, ip, lr
    2894:	str	ip, [fp, #-180]	; 0xffffff4c
    2898:	orr	r3, r1, r3
    289c:	str	r3, [fp, #-176]	; 0xffffff50
    28a0:	mov	r3, #100	; 0x64
    28a4:	uxtb	r2, r3
    28a8:	mov	r3, #0
    28ac:	mov	r0, #0
    28b0:	mov	r1, #0
    28b4:	lsl	r1, r3, #16
    28b8:	orr	r1, r1, r2, lsr #16
    28bc:	lsl	r0, r2, #16
    28c0:	ldrd	r2, [fp, #-180]	; 0xffffff4c
    28c4:	mov	ip, r2
    28c8:	orr	ip, ip, r0
    28cc:	str	ip, [fp, #-188]	; 0xffffff44
    28d0:	orr	r3, r3, r1
    28d4:	str	r3, [fp, #-184]	; 0xffffff48
    28d8:	ldrd	r2, [fp, #-140]	; 0xffffff74
    28dc:	ldrd	r0, [fp, #-188]	; 0xffffff44
    28e0:	cmp	r3, r1
    28e4:	cmpeq	r2, r0
    28e8:	bcs	2b84 <test+0x5c0>
    28ec:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    28f0:	mov	r2, #-16777216	; 0xff000000
    28f4:	mvn	r3, #0
    28f8:	and	ip, r0, r2
    28fc:	str	ip, [fp, #-196]	; 0xffffff3c
    2900:	and	r3, r1, r3
    2904:	str	r3, [fp, #-192]	; 0xffffff40
    2908:	mov	r3, #102	; 0x66
    290c:	uxtb	r2, r3
    2910:	mov	r3, #0
    2914:	mov	r4, #0
    2918:	mov	r5, #0
    291c:	lsl	r5, r2, #24
    2920:	mov	r4, #0
    2924:	mov	r3, #105	; 0x69
    2928:	uxtb	r2, r3
    292c:	mov	r3, #0
    2930:	mov	r0, #0
    2934:	mov	r1, #0
    2938:	lsl	r1, r2, #16
    293c:	mov	r0, #0
    2940:	orr	r3, r4, r0
    2944:	str	r3, [fp, #-204]	; 0xffffff34
    2948:	orr	r3, r5, r1
    294c:	str	r3, [fp, #-200]	; 0xffffff38
    2950:	mov	r3, #114	; 0x72
    2954:	uxtb	r2, r3
    2958:	mov	r3, #0
    295c:	mov	r0, #0
    2960:	mov	r1, #0
    2964:	lsl	r1, r2, #8
    2968:	mov	r0, #0
    296c:	ldrd	r2, [fp, #-204]	; 0xffffff34
    2970:	mov	ip, r2
    2974:	orr	ip, ip, r0
    2978:	str	ip, [fp, #-212]	; 0xffffff2c
    297c:	orr	r3, r3, r1
    2980:	str	r3, [fp, #-208]	; 0xffffff30
    2984:	mov	r3, #115	; 0x73
    2988:	uxtb	r2, r3
    298c:	mov	r3, #0
    2990:	mov	r0, #0
    2994:	mov	r1, #0
    2998:	mov	r1, r2
    299c:	mov	r0, #0
    29a0:	ldrd	r2, [fp, #-212]	; 0xffffff2c
    29a4:	mov	ip, r2
    29a8:	orr	ip, ip, r0
    29ac:	str	ip, [fp, #-220]	; 0xffffff24
    29b0:	orr	r3, r3, r1
    29b4:	str	r3, [fp, #-216]	; 0xffffff28
    29b8:	mov	r3, #116	; 0x74
    29bc:	uxtb	r2, r3
    29c0:	mov	r3, #0
    29c4:	lsr	r7, r2, #8
    29c8:	lsl	r6, r2, #24
    29cc:	ldrd	r2, [fp, #-220]	; 0xffffff24
    29d0:	mov	r1, r2
    29d4:	orr	r1, r1, r6
    29d8:	str	r1, [fp, #-228]	; 0xffffff1c
    29dc:	orr	r3, r3, r7
    29e0:	str	r3, [fp, #-224]	; 0xffffff20
    29e4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    29e8:	ldrd	r0, [fp, #-228]	; 0xffffff1c
    29ec:	cmp	r3, r1
    29f0:	cmpeq	r2, r0
    29f4:	beq	2a14 <test+0x450>
    29f8:	mov	r3, #13
    29fc:	ldr	r2, [fp, #-128]	; 0xffffff80
    2a00:	ldr	r1, [fp, #-124]	; 0xffffff84
    2a04:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a08:	bl	0 <flatcc_json_parser_set_error>
    2a0c:	str	r0, [fp, #-124]	; 0xffffff84
    2a10:	b	3e90 <test+0x18cc>
    2a14:	ldr	r3, [fp, #-124]	; 0xffffff84
    2a18:	add	r3, r3, #5
    2a1c:	ldr	r2, [fp, #-128]	; 0xffffff80
    2a20:	mov	r1, r3
    2a24:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a28:	bl	520 <flatcc_json_parser_symbol_end>
    2a2c:	str	r0, [fp, #-124]	; 0xffffff84
    2a30:	ldr	r2, [fp, #-128]	; 0xffffff80
    2a34:	ldr	r1, [fp, #-124]	; 0xffffff84
    2a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a3c:	bl	0 <flatcc_json_parser_space>
    2a40:	str	r0, [fp, #-124]	; 0xffffff84
    2a44:	ldr	r2, [fp, #-124]	; 0xffffff84
    2a48:	ldr	r3, [fp, #-128]	; 0xffffff80
    2a4c:	cmp	r2, r3
    2a50:	bne	2a78 <test+0x4b4>
    2a54:	movw	r3, #0
    2a58:	movt	r3, #0
    2a5c:	ldr	r3, [r3]
    2a60:	mov	r2, #13
    2a64:	mov	r1, #1
    2a68:	movw	r0, #0
    2a6c:	movt	r0, #0
    2a70:	bl	0 <fwrite>
    2a74:	b	3e90 <test+0x18cc>
    2a78:	ldr	r2, [fp, #-128]	; 0xffffff80
    2a7c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2a80:	cmp	r2, r3
    2a84:	bls	2acc <test+0x508>
    2a88:	ldr	r3, [fp, #-124]	; 0xffffff84
    2a8c:	ldrb	r3, [r3]
    2a90:	cmp	r3, #58	; 0x3a
    2a94:	bne	2acc <test+0x508>
    2a98:	ldr	r3, [fp, #-124]	; 0xffffff84
    2a9c:	add	r3, r3, #1
    2aa0:	str	r3, [fp, #-124]	; 0xffffff84
    2aa4:	ldr	r2, [fp, #-128]	; 0xffffff80
    2aa8:	ldr	r1, [fp, #-124]	; 0xffffff84
    2aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2ab0:	bl	0 <flatcc_json_parser_space>
    2ab4:	str	r0, [fp, #-124]	; 0xffffff84
    2ab8:	ldr	r2, [fp, #-124]	; 0xffffff84
    2abc:	ldr	r3, [fp, #-128]	; 0xffffff80
    2ac0:	cmp	r2, r3
    2ac4:	beq	2b08 <test+0x544>
    2ac8:	b	2b2c <test+0x568>
    2acc:	movw	r3, #0
    2ad0:	movt	r3, #0
    2ad4:	ldr	r3, [r3]
    2ad8:	mov	r2, #58	; 0x3a
    2adc:	movw	r1, #0
    2ae0:	movt	r1, #0
    2ae4:	mov	r0, r3
    2ae8:	bl	0 <fprintf>
    2aec:	mov	r3, #17
    2af0:	ldr	r2, [fp, #-128]	; 0xffffff80
    2af4:	ldr	r1, [fp, #-124]	; 0xffffff84
    2af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2afc:	bl	0 <flatcc_json_parser_set_error>
    2b00:	str	r0, [fp, #-124]	; 0xffffff84
    2b04:	b	3e90 <test+0x18cc>
    2b08:	movw	r3, #0
    2b0c:	movt	r3, #0
    2b10:	ldr	r3, [r3]
    2b14:	mov	r2, #13
    2b18:	mov	r1, #1
    2b1c:	movw	r0, #0
    2b20:	movt	r0, #0
    2b24:	bl	0 <fwrite>
    2b28:	b	3e90 <test+0x18cc>
    2b2c:	mov	r3, #1
    2b30:	mov	r2, #1
    2b34:	mov	r1, #0
    2b38:	ldr	r0, [fp, #-120]	; 0xffffff88
    2b3c:	bl	0 <flatcc_builder_table_add>
    2b40:	str	r0, [fp, #-60]	; 0xffffffc4
    2b44:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2b48:	cmp	r3, #0
    2b4c:	beq	3e4c <test+0x1888>
    2b50:	ldr	r3, [fp, #-124]	; 0xffffff84
    2b54:	str	r3, [fp, #-56]	; 0xffffffc8
    2b58:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2b5c:	ldr	r2, [fp, #-128]	; 0xffffff80
    2b60:	ldr	r1, [fp, #-124]	; 0xffffff84
    2b64:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2b68:	bl	f0c <flatcc_json_parser_uint8>
    2b6c:	str	r0, [fp, #-124]	; 0xffffff84
    2b70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b74:	ldr	r3, [fp, #-124]	; 0xffffff84
    2b78:	cmp	r2, r3
    2b7c:	bne	3cc0 <test+0x16fc>
    2b80:	b	3e90 <test+0x18cc>
    2b84:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2b88:	mov	r2, #0
    2b8c:	mvn	r3, #0
    2b90:	and	ip, r0, r2
    2b94:	str	ip, [fp, #-236]	; 0xffffff14
    2b98:	and	r3, r1, r3
    2b9c:	str	r3, [fp, #-232]	; 0xffffff18
    2ba0:	mov	r3, #122	; 0x7a
    2ba4:	uxtb	r2, r3
    2ba8:	mov	r3, #0
    2bac:	mov	r4, #0
    2bb0:	mov	r5, #0
    2bb4:	lsl	r5, r2, #24
    2bb8:	mov	r4, #0
    2bbc:	mov	r3, #117	; 0x75
    2bc0:	uxtb	r2, r3
    2bc4:	mov	r3, #0
    2bc8:	mov	r0, #0
    2bcc:	mov	r1, #0
    2bd0:	lsl	r1, r2, #16
    2bd4:	mov	r0, #0
    2bd8:	orr	r3, r4, r0
    2bdc:	str	r3, [fp, #-244]	; 0xffffff0c
    2be0:	orr	r3, r5, r1
    2be4:	str	r3, [fp, #-240]	; 0xffffff10
    2be8:	mov	r3, #108	; 0x6c
    2bec:	uxtb	r2, r3
    2bf0:	mov	r3, #0
    2bf4:	mov	r0, #0
    2bf8:	mov	r1, #0
    2bfc:	lsl	r1, r2, #8
    2c00:	mov	r0, #0
    2c04:	ldrd	r2, [fp, #-244]	; 0xffffff0c
    2c08:	mov	ip, r2
    2c0c:	orr	ip, ip, r0
    2c10:	str	ip, [fp, #-252]	; 0xffffff04
    2c14:	orr	r3, r3, r1
    2c18:	str	r3, [fp, #-248]	; 0xffffff08
    2c1c:	mov	r3, #117	; 0x75
    2c20:	uxtb	r2, r3
    2c24:	mov	r3, #0
    2c28:	mov	r0, #0
    2c2c:	mov	r1, #0
    2c30:	mov	r1, r2
    2c34:	mov	r0, #0
    2c38:	ldrd	r2, [fp, #-252]	; 0xffffff04
    2c3c:	mov	ip, r2
    2c40:	orr	ip, ip, r0
    2c44:	str	ip, [fp, #-260]	; 0xfffffefc
    2c48:	orr	r3, r3, r1
    2c4c:	str	r3, [fp, #-256]	; 0xffffff00
    2c50:	ldrd	r2, [fp, #-236]	; 0xffffff14
    2c54:	sub	r1, fp, #260	; 0x104
    2c58:	ldrd	r0, [r1]
    2c5c:	cmp	r3, r1
    2c60:	cmpeq	r2, r0
    2c64:	bcs	3900 <test+0x133c>
    2c68:	mov	r3, #115	; 0x73
    2c6c:	uxtb	r2, r3
    2c70:	mov	r3, #0
    2c74:	mov	r4, #0
    2c78:	mov	r5, #0
    2c7c:	lsl	r5, r2, #24
    2c80:	mov	r4, #0
    2c84:	mov	r3, #101	; 0x65
    2c88:	uxtb	r2, r3
    2c8c:	mov	r3, #0
    2c90:	mov	r0, #0
    2c94:	mov	r1, #0
    2c98:	lsl	r1, r2, #16
    2c9c:	mov	r0, #0
    2ca0:	orr	r3, r4, r0
    2ca4:	str	r3, [fp, #-268]	; 0xfffffef4
    2ca8:	orr	r3, r5, r1
    2cac:	str	r3, [fp, #-264]	; 0xfffffef8
    2cb0:	mov	r3, #99	; 0x63
    2cb4:	uxtb	r2, r3
    2cb8:	mov	r3, #0
    2cbc:	mov	r0, #0
    2cc0:	mov	r1, #0
    2cc4:	lsl	r1, r2, #8
    2cc8:	mov	r0, #0
    2ccc:	sub	r3, fp, #268	; 0x10c
    2cd0:	ldrd	r2, [r3]
    2cd4:	mov	ip, r2
    2cd8:	orr	ip, ip, r0
    2cdc:	str	ip, [fp, #-276]	; 0xfffffeec
    2ce0:	orr	r3, r3, r1
    2ce4:	str	r3, [fp, #-272]	; 0xfffffef0
    2ce8:	mov	r3, #111	; 0x6f
    2cec:	uxtb	r2, r3
    2cf0:	mov	r3, #0
    2cf4:	mov	r0, #0
    2cf8:	mov	r1, #0
    2cfc:	mov	r1, r2
    2d00:	mov	r0, #0
    2d04:	sub	r3, fp, #276	; 0x114
    2d08:	ldrd	r2, [r3]
    2d0c:	mov	ip, r2
    2d10:	orr	ip, ip, r0
    2d14:	str	ip, [fp, #-284]	; 0xfffffee4
    2d18:	orr	r3, r3, r1
    2d1c:	str	r3, [fp, #-280]	; 0xfffffee8
    2d20:	mov	r3, #110	; 0x6e
    2d24:	uxtb	r2, r3
    2d28:	mov	r3, #0
    2d2c:	lsr	r1, r2, #8
    2d30:	str	r1, [fp, #-288]	; 0xfffffee0
    2d34:	lsl	r3, r2, #24
    2d38:	str	r3, [fp, #-292]	; 0xfffffedc
    2d3c:	sub	r3, fp, #284	; 0x11c
    2d40:	ldrd	r0, [r3]
    2d44:	mov	ip, r0
    2d48:	sub	r3, fp, #292	; 0x124
    2d4c:	ldrd	r2, [r3]
    2d50:	mov	lr, r2
    2d54:	orr	ip, ip, lr
    2d58:	str	ip, [fp, #-300]	; 0xfffffed4
    2d5c:	orr	r3, r1, r3
    2d60:	str	r3, [fp, #-296]	; 0xfffffed8
    2d64:	mov	r3, #100	; 0x64
    2d68:	uxtb	r2, r3
    2d6c:	mov	r3, #0
    2d70:	mov	r0, #0
    2d74:	mov	r1, #0
    2d78:	lsl	r1, r3, #16
    2d7c:	orr	r1, r1, r2, lsr #16
    2d80:	lsl	r0, r2, #16
    2d84:	sub	r3, fp, #300	; 0x12c
    2d88:	ldrd	r2, [r3]
    2d8c:	mov	ip, r2
    2d90:	orr	ip, ip, r0
    2d94:	str	ip, [fp, #-308]	; 0xfffffecc
    2d98:	orr	r3, r3, r1
    2d9c:	str	r3, [fp, #-304]	; 0xfffffed0
    2da0:	mov	r3, #115	; 0x73
    2da4:	uxtb	r2, r3
    2da8:	mov	r3, #0
    2dac:	mov	r0, #0
    2db0:	mov	r1, #0
    2db4:	lsl	r1, r3, #8
    2db8:	orr	r1, r1, r2, lsr #24
    2dbc:	lsl	r0, r2, #8
    2dc0:	sub	r3, fp, #308	; 0x134
    2dc4:	ldrd	r2, [r3]
    2dc8:	mov	ip, r2
    2dcc:	orr	r8, ip, r0
    2dd0:	orr	r9, r3, r1
    2dd4:	mov	r3, #32
    2dd8:	uxtb	r2, r3
    2ddc:	mov	r3, #0
    2de0:	orr	r1, r8, r2
    2de4:	str	r1, [fp, #-316]	; 0xfffffec4
    2de8:	orr	r3, r9, r3
    2dec:	str	r3, [fp, #-312]	; 0xfffffec8
    2df0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2df4:	sub	r1, fp, #316	; 0x13c
    2df8:	ldrd	r0, [r1]
    2dfc:	cmp	r3, r1
    2e00:	cmpeq	r2, r0
    2e04:	bcs	3108 <test+0xb44>
    2e08:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    2e0c:	mov	r2, #0
    2e10:	movt	r2, #65535	; 0xffff
    2e14:	mvn	r3, #0
    2e18:	and	ip, r0, r2
    2e1c:	str	ip, [fp, #-324]	; 0xfffffebc
    2e20:	and	r3, r1, r3
    2e24:	str	r3, [fp, #-320]	; 0xfffffec0
    2e28:	mov	r3, #115	; 0x73
    2e2c:	uxtb	r2, r3
    2e30:	mov	r3, #0
    2e34:	mov	r4, #0
    2e38:	mov	r5, #0
    2e3c:	lsl	r5, r2, #24
    2e40:	mov	r4, #0
    2e44:	mov	r3, #101	; 0x65
    2e48:	uxtb	r2, r3
    2e4c:	mov	r3, #0
    2e50:	mov	r0, #0
    2e54:	mov	r1, #0
    2e58:	lsl	r1, r2, #16
    2e5c:	mov	r0, #0
    2e60:	orr	r3, r4, r0
    2e64:	str	r3, [fp, #-332]	; 0xfffffeb4
    2e68:	orr	r3, r5, r1
    2e6c:	str	r3, [fp, #-328]	; 0xfffffeb8
    2e70:	mov	r3, #99	; 0x63
    2e74:	uxtb	r2, r3
    2e78:	mov	r3, #0
    2e7c:	mov	r0, #0
    2e80:	mov	r1, #0
    2e84:	lsl	r1, r2, #8
    2e88:	mov	r0, #0
    2e8c:	sub	r3, fp, #332	; 0x14c
    2e90:	ldrd	r2, [r3]
    2e94:	mov	ip, r2
    2e98:	orr	ip, ip, r0
    2e9c:	str	ip, [fp, #-340]	; 0xfffffeac
    2ea0:	orr	r3, r3, r1
    2ea4:	str	r3, [fp, #-336]	; 0xfffffeb0
    2ea8:	mov	r3, #111	; 0x6f
    2eac:	uxtb	r2, r3
    2eb0:	mov	r3, #0
    2eb4:	mov	r0, #0
    2eb8:	mov	r1, #0
    2ebc:	mov	r1, r2
    2ec0:	mov	r0, #0
    2ec4:	sub	r3, fp, #340	; 0x154
    2ec8:	ldrd	r2, [r3]
    2ecc:	mov	ip, r2
    2ed0:	orr	ip, ip, r0
    2ed4:	str	ip, [fp, #-348]	; 0xfffffea4
    2ed8:	orr	r3, r3, r1
    2edc:	str	r3, [fp, #-344]	; 0xfffffea8
    2ee0:	mov	r3, #110	; 0x6e
    2ee4:	uxtb	r2, r3
    2ee8:	mov	r3, #0
    2eec:	lsr	r1, r2, #8
    2ef0:	str	r1, [fp, #-352]	; 0xfffffea0
    2ef4:	lsl	r3, r2, #24
    2ef8:	str	r3, [fp, #-356]	; 0xfffffe9c
    2efc:	sub	r3, fp, #348	; 0x15c
    2f00:	ldrd	r0, [r3]
    2f04:	mov	ip, r0
    2f08:	sub	r3, fp, #356	; 0x164
    2f0c:	ldrd	r2, [r3]
    2f10:	mov	lr, r2
    2f14:	orr	ip, ip, lr
    2f18:	str	ip, [fp, #-364]	; 0xfffffe94
    2f1c:	orr	r3, r1, r3
    2f20:	str	r3, [fp, #-360]	; 0xfffffe98
    2f24:	mov	r3, #100	; 0x64
    2f28:	uxtb	r2, r3
    2f2c:	mov	r3, #0
    2f30:	mov	r0, #0
    2f34:	mov	r1, #0
    2f38:	lsl	r1, r3, #16
    2f3c:	orr	r1, r1, r2, lsr #16
    2f40:	lsl	r0, r2, #16
    2f44:	sub	r3, fp, #364	; 0x16c
    2f48:	ldrd	r2, [r3]
    2f4c:	mov	ip, r2
    2f50:	orr	ip, ip, r0
    2f54:	str	ip, [fp, #-372]	; 0xfffffe8c
    2f58:	orr	r3, r3, r1
    2f5c:	str	r3, [fp, #-368]	; 0xfffffe90
    2f60:	sub	r3, fp, #324	; 0x144
    2f64:	ldrd	r2, [r3]
    2f68:	sub	r1, fp, #372	; 0x174
    2f6c:	ldrd	r0, [r1]
    2f70:	cmp	r3, r1
    2f74:	cmpeq	r2, r0
    2f78:	beq	2f98 <test+0x9d4>
    2f7c:	mov	r3, #13
    2f80:	ldr	r2, [fp, #-128]	; 0xffffff80
    2f84:	ldr	r1, [fp, #-124]	; 0xffffff84
    2f88:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f8c:	bl	0 <flatcc_json_parser_set_error>
    2f90:	str	r0, [fp, #-124]	; 0xffffff84
    2f94:	b	3e90 <test+0x18cc>
    2f98:	ldr	r3, [fp, #-124]	; 0xffffff84
    2f9c:	add	r3, r3, #6
    2fa0:	ldr	r2, [fp, #-128]	; 0xffffff80
    2fa4:	mov	r1, r3
    2fa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fac:	bl	520 <flatcc_json_parser_symbol_end>
    2fb0:	str	r0, [fp, #-124]	; 0xffffff84
    2fb4:	ldr	r2, [fp, #-128]	; 0xffffff80
    2fb8:	ldr	r1, [fp, #-124]	; 0xffffff84
    2fbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fc0:	bl	0 <flatcc_json_parser_space>
    2fc4:	str	r0, [fp, #-124]	; 0xffffff84
    2fc8:	ldr	r2, [fp, #-124]	; 0xffffff84
    2fcc:	ldr	r3, [fp, #-128]	; 0xffffff80
    2fd0:	cmp	r2, r3
    2fd4:	bne	2ffc <test+0xa38>
    2fd8:	movw	r3, #0
    2fdc:	movt	r3, #0
    2fe0:	ldr	r3, [r3]
    2fe4:	mov	r2, #13
    2fe8:	mov	r1, #1
    2fec:	movw	r0, #0
    2ff0:	movt	r0, #0
    2ff4:	bl	0 <fwrite>
    2ff8:	b	3e90 <test+0x18cc>
    2ffc:	ldr	r2, [fp, #-128]	; 0xffffff80
    3000:	ldr	r3, [fp, #-124]	; 0xffffff84
    3004:	cmp	r2, r3
    3008:	bls	3050 <test+0xa8c>
    300c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3010:	ldrb	r3, [r3]
    3014:	cmp	r3, #58	; 0x3a
    3018:	bne	3050 <test+0xa8c>
    301c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3020:	add	r3, r3, #1
    3024:	str	r3, [fp, #-124]	; 0xffffff84
    3028:	ldr	r2, [fp, #-128]	; 0xffffff80
    302c:	ldr	r1, [fp, #-124]	; 0xffffff84
    3030:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3034:	bl	0 <flatcc_json_parser_space>
    3038:	str	r0, [fp, #-124]	; 0xffffff84
    303c:	ldr	r2, [fp, #-124]	; 0xffffff84
    3040:	ldr	r3, [fp, #-128]	; 0xffffff80
    3044:	cmp	r2, r3
    3048:	beq	308c <test+0xac8>
    304c:	b	30b0 <test+0xaec>
    3050:	movw	r3, #0
    3054:	movt	r3, #0
    3058:	ldr	r3, [r3]
    305c:	mov	r2, #58	; 0x3a
    3060:	movw	r1, #0
    3064:	movt	r1, #0
    3068:	mov	r0, r3
    306c:	bl	0 <fprintf>
    3070:	mov	r3, #17
    3074:	ldr	r2, [fp, #-128]	; 0xffffff80
    3078:	ldr	r1, [fp, #-124]	; 0xffffff84
    307c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3080:	bl	0 <flatcc_json_parser_set_error>
    3084:	str	r0, [fp, #-124]	; 0xffffff84
    3088:	b	3e90 <test+0x18cc>
    308c:	movw	r3, #0
    3090:	movt	r3, #0
    3094:	ldr	r3, [r3]
    3098:	mov	r2, #13
    309c:	mov	r1, #1
    30a0:	movw	r0, #0
    30a4:	movt	r0, #0
    30a8:	bl	0 <fwrite>
    30ac:	b	3e90 <test+0x18cc>
    30b0:	mov	r3, #8
    30b4:	mov	r2, #8
    30b8:	mov	r1, #1
    30bc:	ldr	r0, [fp, #-120]	; 0xffffff88
    30c0:	bl	0 <flatcc_builder_table_add>
    30c4:	str	r0, [fp, #-60]	; 0xffffffc4
    30c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    30cc:	cmp	r3, #0
    30d0:	beq	3e54 <test+0x1890>
    30d4:	ldr	r3, [fp, #-124]	; 0xffffff84
    30d8:	str	r3, [fp, #-56]	; 0xffffffc8
    30dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    30e0:	ldr	r2, [fp, #-128]	; 0xffffff80
    30e4:	ldr	r1, [fp, #-124]	; 0xffffff84
    30e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    30ec:	bl	0 <flatcc_json_parser_double>
    30f0:	str	r0, [fp, #-124]	; 0xffffff84
    30f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30f8:	ldr	r3, [fp, #-124]	; 0xffffff84
    30fc:	cmp	r2, r3
    3100:	bne	3cc0 <test+0x16fc>
    3104:	b	3e90 <test+0x18cc>
    3108:	mov	r3, #115	; 0x73
    310c:	uxtb	r2, r3
    3110:	mov	r3, #0
    3114:	mov	r4, #0
    3118:	mov	r5, #0
    311c:	lsl	r5, r2, #24
    3120:	mov	r4, #0
    3124:	mov	r3, #101	; 0x65
    3128:	uxtb	r2, r3
    312c:	mov	r3, #0
    3130:	mov	r0, #0
    3134:	mov	r1, #0
    3138:	lsl	r1, r2, #16
    313c:	mov	r0, #0
    3140:	orr	r3, r4, r0
    3144:	str	r3, [fp, #-380]	; 0xfffffe84
    3148:	orr	r3, r5, r1
    314c:	str	r3, [fp, #-376]	; 0xfffffe88
    3150:	mov	r3, #99	; 0x63
    3154:	uxtb	r2, r3
    3158:	mov	r3, #0
    315c:	mov	r0, #0
    3160:	mov	r1, #0
    3164:	lsl	r1, r2, #8
    3168:	mov	r0, #0
    316c:	sub	r3, fp, #380	; 0x17c
    3170:	ldrd	r2, [r3]
    3174:	mov	ip, r2
    3178:	orr	ip, ip, r0
    317c:	str	ip, [fp, #-388]	; 0xfffffe7c
    3180:	orr	r3, r3, r1
    3184:	str	r3, [fp, #-384]	; 0xfffffe80
    3188:	mov	r3, #111	; 0x6f
    318c:	uxtb	r2, r3
    3190:	mov	r3, #0
    3194:	mov	r0, #0
    3198:	mov	r1, #0
    319c:	mov	r1, r2
    31a0:	mov	r0, #0
    31a4:	sub	r3, fp, #388	; 0x184
    31a8:	ldrd	r2, [r3]
    31ac:	mov	ip, r2
    31b0:	orr	ip, ip, r0
    31b4:	str	ip, [fp, #-396]	; 0xfffffe74
    31b8:	orr	r3, r3, r1
    31bc:	str	r3, [fp, #-392]	; 0xfffffe78
    31c0:	mov	r3, #110	; 0x6e
    31c4:	uxtb	r2, r3
    31c8:	mov	r3, #0
    31cc:	lsr	r1, r2, #8
    31d0:	str	r1, [fp, #-400]	; 0xfffffe70
    31d4:	lsl	r3, r2, #24
    31d8:	str	r3, [fp, #-404]	; 0xfffffe6c
    31dc:	sub	r3, fp, #396	; 0x18c
    31e0:	ldrd	r0, [r3]
    31e4:	mov	ip, r0
    31e8:	sub	r3, fp, #404	; 0x194
    31ec:	ldrd	r2, [r3]
    31f0:	mov	lr, r2
    31f4:	orr	ip, ip, lr
    31f8:	str	ip, [fp, #-412]	; 0xfffffe64
    31fc:	orr	r3, r1, r3
    3200:	str	r3, [fp, #-408]	; 0xfffffe68
    3204:	mov	r3, #100	; 0x64
    3208:	uxtb	r2, r3
    320c:	mov	r3, #0
    3210:	mov	r0, #0
    3214:	mov	r1, #0
    3218:	lsl	r1, r3, #16
    321c:	orr	r1, r1, r2, lsr #16
    3220:	lsl	r0, r2, #16
    3224:	sub	r3, fp, #412	; 0x19c
    3228:	ldrd	r2, [r3]
    322c:	mov	ip, r2
    3230:	orr	ip, ip, r0
    3234:	str	ip, [fp, #-420]	; 0xfffffe5c
    3238:	orr	r3, r3, r1
    323c:	str	r3, [fp, #-416]	; 0xfffffe60
    3240:	mov	r3, #115	; 0x73
    3244:	uxtb	r2, r3
    3248:	mov	r3, #0
    324c:	mov	r0, #0
    3250:	mov	r1, #0
    3254:	lsl	r1, r3, #8
    3258:	orr	r1, r1, r2, lsr #24
    325c:	lsl	r0, r2, #8
    3260:	sub	r3, fp, #420	; 0x1a4
    3264:	ldrd	r2, [r3]
    3268:	mov	ip, r2
    326c:	orr	ip, ip, r0
    3270:	str	ip, [fp, #-428]	; 0xfffffe54
    3274:	orr	r3, r3, r1
    3278:	str	r3, [fp, #-424]	; 0xfffffe58
    327c:	mov	r3, #32
    3280:	uxtb	r2, r3
    3284:	mov	r3, #0
    3288:	sub	r1, fp, #428	; 0x1ac
    328c:	ldrd	r0, [r1]
    3290:	mov	ip, r0
    3294:	orr	ip, ip, r2
    3298:	str	ip, [fp, #-436]	; 0xfffffe4c
    329c:	orr	r3, r1, r3
    32a0:	str	r3, [fp, #-432]	; 0xfffffe50
    32a4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    32a8:	sub	r1, fp, #436	; 0x1b4
    32ac:	ldrd	r0, [r1]
    32b0:	cmp	r3, r1
    32b4:	cmpeq	r2, r0
    32b8:	beq	32d8 <test+0xd14>
    32bc:	mov	r3, #13
    32c0:	ldr	r2, [fp, #-128]	; 0xffffff80
    32c4:	ldr	r1, [fp, #-124]	; 0xffffff84
    32c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    32cc:	bl	0 <flatcc_json_parser_set_error>
    32d0:	str	r0, [fp, #-124]	; 0xffffff84
    32d4:	b	3e90 <test+0x18cc>
    32d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    32dc:	str	r3, [fp, #-124]	; 0xffffff84
    32e0:	ldr	r1, [fp, #-128]	; 0xffffff80
    32e4:	ldr	r0, [fp, #-124]	; 0xffffff84
    32e8:	bl	4cc <flatcc_json_parser_symbol_part>
    32ec:	strd	r0, [fp, #-52]	; 0xffffffcc
    32f0:	ldr	r2, [fp, #-128]	; 0xffffff80
    32f4:	ldr	r3, [fp, #-124]	; 0xffffff84
    32f8:	sub	r3, r2, r3
    32fc:	cmp	r3, #8
    3300:	ble	3310 <test+0xd4c>
    3304:	ldr	r3, [fp, #-124]	; 0xffffff84
    3308:	add	r3, r3, #8
    330c:	b	3314 <test+0xd50>
    3310:	ldr	r3, [fp, #-128]	; 0xffffff80
    3314:	str	r3, [fp, #-56]	; 0xffffffc8
    3318:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    331c:	mov	r2, #0
    3320:	mvn	r3, #0
    3324:	and	ip, r0, r2
    3328:	str	ip, [fp, #-444]	; 0xfffffe44
    332c:	and	r3, r1, r3
    3330:	str	r3, [fp, #-440]	; 0xfffffe48
    3334:	mov	r3, #108	; 0x6c
    3338:	uxtb	r2, r3
    333c:	mov	r3, #0
    3340:	mov	r4, #0
    3344:	mov	r5, #0
    3348:	lsl	r5, r2, #24
    334c:	mov	r4, #0
    3350:	mov	r3, #101	; 0x65
    3354:	uxtb	r2, r3
    3358:	mov	r3, #0
    335c:	mov	r0, #0
    3360:	mov	r1, #0
    3364:	lsl	r1, r2, #16
    3368:	mov	r0, #0
    336c:	orr	r3, r4, r0
    3370:	str	r3, [fp, #-452]	; 0xfffffe3c
    3374:	orr	r3, r5, r1
    3378:	str	r3, [fp, #-448]	; 0xfffffe40
    337c:	mov	r3, #102	; 0x66
    3380:	uxtb	r2, r3
    3384:	mov	r3, #0
    3388:	mov	r0, #0
    338c:	mov	r1, #0
    3390:	lsl	r1, r2, #8
    3394:	mov	r0, #0
    3398:	sub	r3, fp, #452	; 0x1c4
    339c:	ldrd	r2, [r3]
    33a0:	mov	ip, r2
    33a4:	orr	ip, ip, r0
    33a8:	str	ip, [fp, #-460]	; 0xfffffe34
    33ac:	orr	r3, r3, r1
    33b0:	str	r3, [fp, #-456]	; 0xfffffe38
    33b4:	mov	r3, #116	; 0x74
    33b8:	uxtb	r2, r3
    33bc:	mov	r3, #0
    33c0:	mov	r0, #0
    33c4:	mov	r1, #0
    33c8:	mov	r1, r2
    33cc:	mov	r0, #0
    33d0:	sub	r3, fp, #460	; 0x1cc
    33d4:	ldrd	r2, [r3]
    33d8:	mov	ip, r2
    33dc:	orr	ip, ip, r0
    33e0:	str	ip, [fp, #-468]	; 0xfffffe2c
    33e4:	orr	r3, r3, r1
    33e8:	str	r3, [fp, #-464]	; 0xfffffe30
    33ec:	sub	r3, fp, #444	; 0x1bc
    33f0:	ldrd	r2, [r3]
    33f4:	sub	r1, fp, #468	; 0x1d4
    33f8:	ldrd	r0, [r1]
    33fc:	cmp	r3, r1
    3400:	cmpeq	r2, r0
    3404:	bcs	3684 <test+0x10c0>
    3408:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    340c:	mov	r2, #0
    3410:	mvn	r3, #0
    3414:	and	ip, r0, r2
    3418:	str	ip, [fp, #-476]	; 0xfffffe24
    341c:	and	r3, r1, r3
    3420:	str	r3, [fp, #-472]	; 0xfffffe28
    3424:	mov	r3, #108	; 0x6c
    3428:	uxtb	r2, r3
    342c:	mov	r3, #0
    3430:	mov	r4, #0
    3434:	mov	r5, #0
    3438:	lsl	r5, r2, #24
    343c:	mov	r4, #0
    3440:	mov	r3, #101	; 0x65
    3444:	uxtb	r2, r3
    3448:	mov	r3, #0
    344c:	mov	r0, #0
    3450:	mov	r1, #0
    3454:	lsl	r1, r2, #16
    3458:	mov	r0, #0
    345c:	orr	r3, r4, r0
    3460:	str	r3, [fp, #-484]	; 0xfffffe1c
    3464:	orr	r3, r5, r1
    3468:	str	r3, [fp, #-480]	; 0xfffffe20
    346c:	mov	r3, #97	; 0x61
    3470:	uxtb	r2, r3
    3474:	mov	r3, #0
    3478:	mov	r0, #0
    347c:	mov	r1, #0
    3480:	lsl	r1, r2, #8
    3484:	mov	r0, #0
    3488:	sub	r3, fp, #484	; 0x1e4
    348c:	ldrd	r2, [r3]
    3490:	mov	ip, r2
    3494:	orr	ip, ip, r0
    3498:	str	ip, [fp, #-492]	; 0xfffffe14
    349c:	orr	r3, r3, r1
    34a0:	str	r3, [fp, #-488]	; 0xfffffe18
    34a4:	mov	r3, #100	; 0x64
    34a8:	uxtb	r2, r3
    34ac:	mov	r3, #0
    34b0:	mov	r0, #0
    34b4:	mov	r1, #0
    34b8:	mov	r1, r2
    34bc:	mov	r0, #0
    34c0:	sub	r3, fp, #492	; 0x1ec
    34c4:	ldrd	r2, [r3]
    34c8:	mov	ip, r2
    34cc:	orr	ip, ip, r0
    34d0:	str	ip, [fp, #-500]	; 0xfffffe0c
    34d4:	orr	r3, r3, r1
    34d8:	str	r3, [fp, #-496]	; 0xfffffe10
    34dc:	sub	r3, fp, #476	; 0x1dc
    34e0:	ldrd	r2, [r3]
    34e4:	sub	r1, fp, #500	; 0x1f4
    34e8:	ldrd	r0, [r1]
    34ec:	cmp	r3, r1
    34f0:	cmpeq	r2, r0
    34f4:	beq	3514 <test+0xf50>
    34f8:	mov	r3, #13
    34fc:	ldr	r2, [fp, #-128]	; 0xffffff80
    3500:	ldr	r1, [fp, #-124]	; 0xffffff84
    3504:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3508:	bl	0 <flatcc_json_parser_set_error>
    350c:	str	r0, [fp, #-124]	; 0xffffff84
    3510:	b	3e90 <test+0x18cc>
    3514:	ldr	r3, [fp, #-124]	; 0xffffff84
    3518:	add	r3, r3, #4
    351c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3520:	mov	r1, r3
    3524:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3528:	bl	520 <flatcc_json_parser_symbol_end>
    352c:	str	r0, [fp, #-124]	; 0xffffff84
    3530:	ldr	r2, [fp, #-128]	; 0xffffff80
    3534:	ldr	r1, [fp, #-124]	; 0xffffff84
    3538:	ldr	r0, [fp, #-40]	; 0xffffffd8
    353c:	bl	0 <flatcc_json_parser_space>
    3540:	str	r0, [fp, #-124]	; 0xffffff84
    3544:	ldr	r2, [fp, #-124]	; 0xffffff84
    3548:	ldr	r3, [fp, #-128]	; 0xffffff80
    354c:	cmp	r2, r3
    3550:	bne	3578 <test+0xfb4>
    3554:	movw	r3, #0
    3558:	movt	r3, #0
    355c:	ldr	r3, [r3]
    3560:	mov	r2, #13
    3564:	mov	r1, #1
    3568:	movw	r0, #0
    356c:	movt	r0, #0
    3570:	bl	0 <fwrite>
    3574:	b	3e90 <test+0x18cc>
    3578:	ldr	r2, [fp, #-128]	; 0xffffff80
    357c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3580:	cmp	r2, r3
    3584:	bls	35cc <test+0x1008>
    3588:	ldr	r3, [fp, #-124]	; 0xffffff84
    358c:	ldrb	r3, [r3]
    3590:	cmp	r3, #58	; 0x3a
    3594:	bne	35cc <test+0x1008>
    3598:	ldr	r3, [fp, #-124]	; 0xffffff84
    359c:	add	r3, r3, #1
    35a0:	str	r3, [fp, #-124]	; 0xffffff84
    35a4:	ldr	r2, [fp, #-128]	; 0xffffff80
    35a8:	ldr	r1, [fp, #-124]	; 0xffffff84
    35ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    35b0:	bl	0 <flatcc_json_parser_space>
    35b4:	str	r0, [fp, #-124]	; 0xffffff84
    35b8:	ldr	r2, [fp, #-124]	; 0xffffff84
    35bc:	ldr	r3, [fp, #-128]	; 0xffffff80
    35c0:	cmp	r2, r3
    35c4:	beq	3608 <test+0x1044>
    35c8:	b	362c <test+0x1068>
    35cc:	movw	r3, #0
    35d0:	movt	r3, #0
    35d4:	ldr	r3, [r3]
    35d8:	mov	r2, #58	; 0x3a
    35dc:	movw	r1, #0
    35e0:	movt	r1, #0
    35e4:	mov	r0, r3
    35e8:	bl	0 <fprintf>
    35ec:	mov	r3, #17
    35f0:	ldr	r2, [fp, #-128]	; 0xffffff80
    35f4:	ldr	r1, [fp, #-124]	; 0xffffff84
    35f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    35fc:	bl	0 <flatcc_json_parser_set_error>
    3600:	str	r0, [fp, #-124]	; 0xffffff84
    3604:	b	3e90 <test+0x18cc>
    3608:	movw	r3, #0
    360c:	movt	r3, #0
    3610:	ldr	r3, [r3]
    3614:	mov	r2, #13
    3618:	mov	r1, #1
    361c:	movw	r0, #0
    3620:	movt	r0, #0
    3624:	bl	0 <fwrite>
    3628:	b	3e90 <test+0x18cc>
    362c:	mov	r3, #8
    3630:	mov	r2, #8
    3634:	mov	r1, #3
    3638:	ldr	r0, [fp, #-120]	; 0xffffff88
    363c:	bl	0 <flatcc_builder_table_add>
    3640:	str	r0, [fp, #-60]	; 0xffffffc4
    3644:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3648:	cmp	r3, #0
    364c:	beq	3e5c <test+0x1898>
    3650:	ldr	r3, [fp, #-124]	; 0xffffff84
    3654:	str	r3, [fp, #-56]	; 0xffffffc8
    3658:	ldr	r3, [fp, #-60]	; 0xffffffc4
    365c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3660:	ldr	r1, [fp, #-124]	; 0xffffff84
    3664:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3668:	bl	fe8 <flatcc_json_parser_int64>
    366c:	str	r0, [fp, #-124]	; 0xffffff84
    3670:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3674:	ldr	r3, [fp, #-124]	; 0xffffff84
    3678:	cmp	r2, r3
    367c:	bne	3cc0 <test+0x16fc>
    3680:	b	3e90 <test+0x18cc>
    3684:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    3688:	mov	r2, #0
    368c:	mvn	r3, #0
    3690:	and	ip, r0, r2
    3694:	str	ip, [fp, #-508]	; 0xfffffe04
    3698:	and	r3, r1, r3
    369c:	str	r3, [fp, #-504]	; 0xfffffe08
    36a0:	mov	r3, #108	; 0x6c
    36a4:	uxtb	r2, r3
    36a8:	mov	r3, #0
    36ac:	mov	r4, #0
    36b0:	mov	r5, #0
    36b4:	lsl	r5, r2, #24
    36b8:	mov	r4, #0
    36bc:	mov	r3, #101	; 0x65
    36c0:	uxtb	r2, r3
    36c4:	mov	r3, #0
    36c8:	mov	r0, #0
    36cc:	mov	r1, #0
    36d0:	lsl	r1, r2, #16
    36d4:	mov	r0, #0
    36d8:	orr	r3, r4, r0
    36dc:	str	r3, [fp, #-516]	; 0xfffffdfc
    36e0:	orr	r3, r5, r1
    36e4:	str	r3, [fp, #-512]	; 0xfffffe00
    36e8:	mov	r3, #102	; 0x66
    36ec:	uxtb	r2, r3
    36f0:	mov	r3, #0
    36f4:	mov	r0, #0
    36f8:	mov	r1, #0
    36fc:	lsl	r1, r2, #8
    3700:	mov	r0, #0
    3704:	sub	r3, fp, #516	; 0x204
    3708:	ldrd	r2, [r3]
    370c:	mov	ip, r2
    3710:	orr	ip, ip, r0
    3714:	str	ip, [fp, #-524]	; 0xfffffdf4
    3718:	orr	r3, r3, r1
    371c:	str	r3, [fp, #-520]	; 0xfffffdf8
    3720:	mov	r3, #116	; 0x74
    3724:	uxtb	r2, r3
    3728:	mov	r3, #0
    372c:	mov	r0, #0
    3730:	mov	r1, #0
    3734:	mov	r1, r2
    3738:	mov	r0, #0
    373c:	sub	r3, fp, #524	; 0x20c
    3740:	ldrd	r2, [r3]
    3744:	mov	ip, r2
    3748:	orr	ip, ip, r0
    374c:	str	ip, [fp, #-532]	; 0xfffffdec
    3750:	orr	r3, r3, r1
    3754:	str	r3, [fp, #-528]	; 0xfffffdf0
    3758:	sub	r3, fp, #508	; 0x1fc
    375c:	ldrd	r2, [r3]
    3760:	sub	r1, fp, #532	; 0x214
    3764:	ldrd	r0, [r1]
    3768:	cmp	r3, r1
    376c:	cmpeq	r2, r0
    3770:	beq	3790 <test+0x11cc>
    3774:	mov	r3, #13
    3778:	ldr	r2, [fp, #-128]	; 0xffffff80
    377c:	ldr	r1, [fp, #-124]	; 0xffffff84
    3780:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3784:	bl	0 <flatcc_json_parser_set_error>
    3788:	str	r0, [fp, #-124]	; 0xffffff84
    378c:	b	3e90 <test+0x18cc>
    3790:	ldr	r3, [fp, #-124]	; 0xffffff84
    3794:	add	r3, r3, #4
    3798:	ldr	r2, [fp, #-128]	; 0xffffff80
    379c:	mov	r1, r3
    37a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37a4:	bl	520 <flatcc_json_parser_symbol_end>
    37a8:	str	r0, [fp, #-124]	; 0xffffff84
    37ac:	ldr	r2, [fp, #-128]	; 0xffffff80
    37b0:	ldr	r1, [fp, #-124]	; 0xffffff84
    37b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37b8:	bl	0 <flatcc_json_parser_space>
    37bc:	str	r0, [fp, #-124]	; 0xffffff84
    37c0:	ldr	r2, [fp, #-124]	; 0xffffff84
    37c4:	ldr	r3, [fp, #-128]	; 0xffffff80
    37c8:	cmp	r2, r3
    37cc:	bne	37f4 <test+0x1230>
    37d0:	movw	r3, #0
    37d4:	movt	r3, #0
    37d8:	ldr	r3, [r3]
    37dc:	mov	r2, #13
    37e0:	mov	r1, #1
    37e4:	movw	r0, #0
    37e8:	movt	r0, #0
    37ec:	bl	0 <fwrite>
    37f0:	b	3e90 <test+0x18cc>
    37f4:	ldr	r2, [fp, #-128]	; 0xffffff80
    37f8:	ldr	r3, [fp, #-124]	; 0xffffff84
    37fc:	cmp	r2, r3
    3800:	bls	3848 <test+0x1284>
    3804:	ldr	r3, [fp, #-124]	; 0xffffff84
    3808:	ldrb	r3, [r3]
    380c:	cmp	r3, #58	; 0x3a
    3810:	bne	3848 <test+0x1284>
    3814:	ldr	r3, [fp, #-124]	; 0xffffff84
    3818:	add	r3, r3, #1
    381c:	str	r3, [fp, #-124]	; 0xffffff84
    3820:	ldr	r2, [fp, #-128]	; 0xffffff80
    3824:	ldr	r1, [fp, #-124]	; 0xffffff84
    3828:	ldr	r0, [fp, #-40]	; 0xffffffd8
    382c:	bl	0 <flatcc_json_parser_space>
    3830:	str	r0, [fp, #-124]	; 0xffffff84
    3834:	ldr	r2, [fp, #-124]	; 0xffffff84
    3838:	ldr	r3, [fp, #-128]	; 0xffffff80
    383c:	cmp	r2, r3
    3840:	beq	3884 <test+0x12c0>
    3844:	b	38a8 <test+0x12e4>
    3848:	movw	r3, #0
    384c:	movt	r3, #0
    3850:	ldr	r3, [r3]
    3854:	mov	r2, #58	; 0x3a
    3858:	movw	r1, #0
    385c:	movt	r1, #0
    3860:	mov	r0, r3
    3864:	bl	0 <fprintf>
    3868:	mov	r3, #17
    386c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3870:	ldr	r1, [fp, #-124]	; 0xffffff84
    3874:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3878:	bl	0 <flatcc_json_parser_set_error>
    387c:	str	r0, [fp, #-124]	; 0xffffff84
    3880:	b	3e90 <test+0x18cc>
    3884:	movw	r3, #0
    3888:	movt	r3, #0
    388c:	ldr	r3, [r3]
    3890:	mov	r2, #13
    3894:	mov	r1, #1
    3898:	movw	r0, #0
    389c:	movt	r0, #0
    38a0:	bl	0 <fwrite>
    38a4:	b	3e90 <test+0x18cc>
    38a8:	mov	r3, #4
    38ac:	mov	r2, #4
    38b0:	mov	r1, #2
    38b4:	ldr	r0, [fp, #-120]	; 0xffffff88
    38b8:	bl	0 <flatcc_builder_table_add>
    38bc:	str	r0, [fp, #-60]	; 0xffffffc4
    38c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    38c4:	cmp	r3, #0
    38c8:	beq	3e64 <test+0x18a0>
    38cc:	ldr	r3, [fp, #-124]	; 0xffffff84
    38d0:	str	r3, [fp, #-56]	; 0xffffffc8
    38d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    38d8:	ldr	r2, [fp, #-128]	; 0xffffff80
    38dc:	ldr	r1, [fp, #-124]	; 0xffffff84
    38e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    38e4:	bl	e30 <flatcc_json_parser_uint32>
    38e8:	str	r0, [fp, #-124]	; 0xffffff84
    38ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38f0:	ldr	r3, [fp, #-124]	; 0xffffff84
    38f4:	cmp	r2, r3
    38f8:	bne	3cc0 <test+0x16fc>
    38fc:	b	3e90 <test+0x18cc>
    3900:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    3904:	mov	r2, #0
    3908:	mvn	r3, #0
    390c:	and	ip, r0, r2
    3910:	str	ip, [fp, #-540]	; 0xfffffde4
    3914:	and	r3, r1, r3
    3918:	str	r3, [fp, #-536]	; 0xfffffde8
    391c:	mov	r3, #122	; 0x7a
    3920:	uxtb	r2, r3
    3924:	mov	r3, #0
    3928:	mov	r4, #0
    392c:	mov	r5, #0
    3930:	lsl	r5, r2, #24
    3934:	mov	r4, #0
    3938:	mov	r3, #117	; 0x75
    393c:	uxtb	r2, r3
    3940:	mov	r3, #0
    3944:	mov	r0, #0
    3948:	mov	r1, #0
    394c:	lsl	r1, r2, #16
    3950:	mov	r0, #0
    3954:	orr	r3, r4, r0
    3958:	str	r3, [fp, #-548]	; 0xfffffddc
    395c:	orr	r3, r5, r1
    3960:	str	r3, [fp, #-544]	; 0xfffffde0
    3964:	mov	r3, #108	; 0x6c
    3968:	uxtb	r2, r3
    396c:	mov	r3, #0
    3970:	mov	r0, #0
    3974:	mov	r1, #0
    3978:	lsl	r1, r2, #8
    397c:	mov	r0, #0
    3980:	sub	r3, fp, #548	; 0x224
    3984:	ldrd	r2, [r3]
    3988:	mov	ip, r2
    398c:	orr	ip, ip, r0
    3990:	str	ip, [fp, #-556]	; 0xfffffdd4
    3994:	orr	r3, r3, r1
    3998:	str	r3, [fp, #-552]	; 0xfffffdd8
    399c:	mov	r3, #117	; 0x75
    39a0:	uxtb	r2, r3
    39a4:	mov	r3, #0
    39a8:	mov	r0, #0
    39ac:	mov	r1, #0
    39b0:	mov	r1, r2
    39b4:	mov	r0, #0
    39b8:	sub	r3, fp, #556	; 0x22c
    39bc:	ldrd	r2, [r3]
    39c0:	mov	ip, r2
    39c4:	orr	ip, ip, r0
    39c8:	str	ip, [fp, #-564]	; 0xfffffdcc
    39cc:	orr	r3, r3, r1
    39d0:	str	r3, [fp, #-560]	; 0xfffffdd0
    39d4:	sub	r3, fp, #540	; 0x21c
    39d8:	ldrd	r2, [r3]
    39dc:	sub	r1, fp, #564	; 0x234
    39e0:	ldrd	r0, [r1]
    39e4:	cmp	r3, r1
    39e8:	cmpeq	r2, r0
    39ec:	beq	3a0c <test+0x1448>
    39f0:	mov	r3, #13
    39f4:	ldr	r2, [fp, #-128]	; 0xffffff80
    39f8:	ldr	r1, [fp, #-124]	; 0xffffff84
    39fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3a00:	bl	0 <flatcc_json_parser_set_error>
    3a04:	str	r0, [fp, #-124]	; 0xffffff84
    3a08:	b	3e90 <test+0x18cc>
    3a0c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3a10:	add	r3, r3, #4
    3a14:	ldr	r2, [fp, #-128]	; 0xffffff80
    3a18:	mov	r1, r3
    3a1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3a20:	bl	520 <flatcc_json_parser_symbol_end>
    3a24:	str	r0, [fp, #-124]	; 0xffffff84
    3a28:	ldr	r2, [fp, #-128]	; 0xffffff80
    3a2c:	ldr	r1, [fp, #-124]	; 0xffffff84
    3a30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3a34:	bl	0 <flatcc_json_parser_space>
    3a38:	str	r0, [fp, #-124]	; 0xffffff84
    3a3c:	ldr	r2, [fp, #-124]	; 0xffffff84
    3a40:	ldr	r3, [fp, #-128]	; 0xffffff80
    3a44:	cmp	r2, r3
    3a48:	bne	3a70 <test+0x14ac>
    3a4c:	movw	r3, #0
    3a50:	movt	r3, #0
    3a54:	ldr	r3, [r3]
    3a58:	mov	r2, #13
    3a5c:	mov	r1, #1
    3a60:	movw	r0, #0
    3a64:	movt	r0, #0
    3a68:	bl	0 <fwrite>
    3a6c:	b	3e90 <test+0x18cc>
    3a70:	ldr	r2, [fp, #-128]	; 0xffffff80
    3a74:	ldr	r3, [fp, #-124]	; 0xffffff84
    3a78:	cmp	r2, r3
    3a7c:	bls	3ac4 <test+0x1500>
    3a80:	ldr	r3, [fp, #-124]	; 0xffffff84
    3a84:	ldrb	r3, [r3]
    3a88:	cmp	r3, #58	; 0x3a
    3a8c:	bne	3ac4 <test+0x1500>
    3a90:	ldr	r3, [fp, #-124]	; 0xffffff84
    3a94:	add	r3, r3, #1
    3a98:	str	r3, [fp, #-124]	; 0xffffff84
    3a9c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3aa0:	ldr	r1, [fp, #-124]	; 0xffffff84
    3aa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3aa8:	bl	0 <flatcc_json_parser_space>
    3aac:	str	r0, [fp, #-124]	; 0xffffff84
    3ab0:	ldr	r2, [fp, #-124]	; 0xffffff84
    3ab4:	ldr	r3, [fp, #-128]	; 0xffffff80
    3ab8:	cmp	r2, r3
    3abc:	beq	3b00 <test+0x153c>
    3ac0:	b	3b24 <test+0x1560>
    3ac4:	movw	r3, #0
    3ac8:	movt	r3, #0
    3acc:	ldr	r3, [r3]
    3ad0:	mov	r2, #58	; 0x3a
    3ad4:	movw	r1, #0
    3ad8:	movt	r1, #0
    3adc:	mov	r0, r3
    3ae0:	bl	0 <fprintf>
    3ae4:	mov	r3, #17
    3ae8:	ldr	r2, [fp, #-128]	; 0xffffff80
    3aec:	ldr	r1, [fp, #-124]	; 0xffffff84
    3af0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3af4:	bl	0 <flatcc_json_parser_set_error>
    3af8:	str	r0, [fp, #-124]	; 0xffffff84
    3afc:	b	3e90 <test+0x18cc>
    3b00:	movw	r3, #0
    3b04:	movt	r3, #0
    3b08:	ldr	r3, [r3]
    3b0c:	mov	r2, #13
    3b10:	mov	r1, #1
    3b14:	movw	r0, #0
    3b18:	movt	r0, #0
    3b1c:	bl	0 <fwrite>
    3b20:	b	3e90 <test+0x18cc>
    3b24:	ldr	r2, [fp, #-128]	; 0xffffff80
    3b28:	ldr	r1, [fp, #-124]	; 0xffffff84
    3b2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3b30:	bl	a0 <flatcc_json_parser_string_start>
    3b34:	str	r0, [fp, #-124]	; 0xffffff84
    3b38:	ldr	r3, [fp, #-124]	; 0xffffff84
    3b3c:	str	r3, [fp, #-56]	; 0xffffffc8
    3b40:	ldr	r2, [fp, #-128]	; 0xffffff80
    3b44:	ldr	r1, [fp, #-124]	; 0xffffff84
    3b48:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3b4c:	bl	0 <flatcc_json_parser_string_part>
    3b50:	str	r0, [fp, #-124]	; 0xffffff84
    3b54:	ldr	r2, [fp, #-124]	; 0xffffff84
    3b58:	ldr	r3, [fp, #-128]	; 0xffffff80
    3b5c:	cmp	r2, r3
    3b60:	beq	3e6c <test+0x18a8>
    3b64:	ldr	r3, [fp, #-124]	; 0xffffff84
    3b68:	ldrb	r3, [r3]
    3b6c:	cmp	r3, #34	; 0x22
    3b70:	bne	3b98 <test+0x15d4>
    3b74:	ldr	r2, [fp, #-124]	; 0xffffff84
    3b78:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3b7c:	sub	r3, r2, r3
    3b80:	mov	r2, r3
    3b84:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3b88:	ldr	r0, [fp, #-120]	; 0xffffff88
    3b8c:	bl	0 <flatcc_builder_create_string>
    3b90:	str	r0, [fp, #-32]	; 0xffffffe0
    3b94:	b	3c78 <test+0x16b4>
    3b98:	ldr	r0, [fp, #-120]	; 0xffffff88
    3b9c:	bl	0 <flatcc_builder_start_string>
    3ba0:	ldr	r2, [fp, #-124]	; 0xffffff84
    3ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3ba8:	sub	r3, r2, r3
    3bac:	mov	r1, r3
    3bb0:	ldr	r0, [fp, #-120]	; 0xffffff88
    3bb4:	bl	0 <flatcc_builder_extend_string>
    3bb8:	str	r0, [fp, #-64]	; 0xffffffc0
    3bbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3bc0:	cmp	r3, #0
    3bc4:	beq	3e74 <test+0x18b0>
    3bc8:	ldr	r2, [fp, #-124]	; 0xffffff84
    3bcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3bd0:	sub	r3, r2, r3
    3bd4:	mov	r2, r3
    3bd8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3bdc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    3be0:	bl	0 <memcpy>
    3be4:	sub	r3, fp, #116	; 0x74
    3be8:	ldr	r2, [fp, #-128]	; 0xffffff80
    3bec:	ldr	r1, [fp, #-124]	; 0xffffff84
    3bf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3bf4:	bl	0 <flatcc_json_parser_string_escape>
    3bf8:	str	r0, [fp, #-124]	; 0xffffff84
    3bfc:	sub	r1, fp, #116	; 0x74
    3c00:	add	r1, r1, #1
    3c04:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    3c08:	mov	r2, r3
    3c0c:	ldr	r0, [fp, #-120]	; 0xffffff88
    3c10:	bl	0 <flatcc_builder_append_string>
    3c14:	ldr	r3, [fp, #-124]	; 0xffffff84
    3c18:	str	r3, [fp, #-56]	; 0xffffffc8
    3c1c:	ldr	r2, [fp, #-128]	; 0xffffff80
    3c20:	ldr	r1, [fp, #-124]	; 0xffffff84
    3c24:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3c28:	bl	0 <flatcc_json_parser_string_part>
    3c2c:	str	r0, [fp, #-124]	; 0xffffff84
    3c30:	ldr	r2, [fp, #-124]	; 0xffffff84
    3c34:	ldr	r3, [fp, #-128]	; 0xffffff80
    3c38:	cmp	r2, r3
    3c3c:	beq	3e7c <test+0x18b8>
    3c40:	ldr	r2, [fp, #-124]	; 0xffffff84
    3c44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3c48:	sub	r3, r2, r3
    3c4c:	mov	r2, r3
    3c50:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3c54:	ldr	r0, [fp, #-120]	; 0xffffff88
    3c58:	bl	0 <flatcc_builder_append_string>
    3c5c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3c60:	ldrb	r3, [r3]
    3c64:	cmp	r3, #34	; 0x22
    3c68:	bne	3be4 <test+0x1620>
    3c6c:	ldr	r0, [fp, #-120]	; 0xffffff88
    3c70:	bl	0 <flatcc_builder_end_string>
    3c74:	str	r0, [fp, #-32]	; 0xffffffe0
    3c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c7c:	cmp	r3, #0
    3c80:	beq	3e84 <test+0x18c0>
    3c84:	mov	r1, #10
    3c88:	ldr	r0, [fp, #-120]	; 0xffffff88
    3c8c:	bl	0 <flatcc_builder_table_add_offset>
    3c90:	str	r0, [fp, #-68]	; 0xffffffbc
    3c94:	ldr	r3, [fp, #-68]	; 0xffffffbc
    3c98:	cmp	r3, #0
    3c9c:	beq	3e8c <test+0x18c8>
    3ca0:	ldr	r2, [fp, #-68]	; 0xffffffbc
    3ca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3ca8:	str	r3, [r2]
    3cac:	ldr	r2, [fp, #-128]	; 0xffffff80
    3cb0:	ldr	r1, [fp, #-124]	; 0xffffff84
    3cb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3cb8:	bl	11c <flatcc_json_parser_string_end>
    3cbc:	str	r0, [fp, #-124]	; 0xffffff84
    3cc0:	ldr	r2, [fp, #-128]	; 0xffffff80
    3cc4:	ldr	r1, [fp, #-124]	; 0xffffff84
    3cc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3ccc:	bl	0 <flatcc_json_parser_space>
    3cd0:	str	r0, [fp, #-124]	; 0xffffff84
    3cd4:	ldr	r2, [fp, #-124]	; 0xffffff84
    3cd8:	ldr	r3, [fp, #-128]	; 0xffffff80
    3cdc:	cmp	r2, r3
    3ce0:	bne	3d08 <test+0x1744>
    3ce4:	movw	r3, #0
    3ce8:	movt	r3, #0
    3cec:	ldr	r3, [r3]
    3cf0:	mov	r2, #13
    3cf4:	mov	r1, #1
    3cf8:	movw	r0, #0
    3cfc:	movt	r0, #0
    3d00:	bl	0 <fwrite>
    3d04:	b	3e90 <test+0x18cc>
    3d08:	ldr	r3, [fp, #-124]	; 0xffffff84
    3d0c:	ldrb	r3, [r3]
    3d10:	cmp	r3, #44	; 0x2c
    3d14:	bne	3d80 <test+0x17bc>
    3d18:	ldr	r3, [fp, #-124]	; 0xffffff84
    3d1c:	add	r3, r3, #1
    3d20:	str	r3, [fp, #-124]	; 0xffffff84
    3d24:	ldr	r2, [fp, #-128]	; 0xffffff80
    3d28:	ldr	r1, [fp, #-124]	; 0xffffff84
    3d2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3d30:	bl	0 <flatcc_json_parser_space>
    3d34:	str	r0, [fp, #-124]	; 0xffffff84
    3d38:	ldr	r2, [fp, #-124]	; 0xffffff84
    3d3c:	ldr	r3, [fp, #-128]	; 0xffffff80
    3d40:	cmp	r2, r3
    3d44:	bne	3d6c <test+0x17a8>
    3d48:	movw	r3, #0
    3d4c:	movt	r3, #0
    3d50:	ldr	r3, [r3]
    3d54:	mov	r2, #13
    3d58:	mov	r1, #1
    3d5c:	movw	r0, #0
    3d60:	movt	r0, #0
    3d64:	bl	0 <fwrite>
    3d68:	b	3e90 <test+0x18cc>
    3d6c:	ldr	r3, [fp, #-124]	; 0xffffff84
    3d70:	ldrb	r3, [r3]
    3d74:	cmp	r3, #125	; 0x7d
    3d78:	beq	3d80 <test+0x17bc>
    3d7c:	b	2748 <test+0x184>
    3d80:	ldr	r2, [fp, #-128]	; 0xffffff80
    3d84:	ldr	r3, [fp, #-124]	; 0xffffff84
    3d88:	cmp	r2, r3
    3d8c:	bls	3dec <test+0x1828>
    3d90:	ldr	r3, [fp, #-124]	; 0xffffff84
    3d94:	ldrb	r3, [r3]
    3d98:	cmp	r3, #125	; 0x7d
    3d9c:	bne	3dec <test+0x1828>
    3da0:	ldr	r3, [fp, #-124]	; 0xffffff84
    3da4:	add	r3, r3, #1
    3da8:	str	r3, [fp, #-124]	; 0xffffff84
    3dac:	ldr	r0, [fp, #-120]	; 0xffffff88
    3db0:	bl	0 <flatcc_builder_end_table>
    3db4:	str	r0, [fp, #-36]	; 0xffffffdc
    3db8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3dbc:	ldr	r0, [fp, #-120]	; 0xffffff88
    3dc0:	bl	0 <flatcc_builder_end_buffer>
    3dc4:	ldr	r2, [fp, #-128]	; 0xffffff80
    3dc8:	ldr	r1, [fp, #-124]	; 0xffffff84
    3dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3dd0:	bl	0 <flatcc_json_parser_space>
    3dd4:	str	r0, [fp, #-124]	; 0xffffff84
    3dd8:	ldr	r2, [fp, #-124]	; 0xffffff84
    3ddc:	ldr	r3, [fp, #-128]	; 0xffffff80
    3de0:	cmp	r2, r3
    3de4:	bne	3e28 <test+0x1864>
    3de8:	b	3e90 <test+0x18cc>
    3dec:	movw	r3, #0
    3df0:	movt	r3, #0
    3df4:	ldr	r3, [r3]
    3df8:	mov	r2, #125	; 0x7d
    3dfc:	movw	r1, #0
    3e00:	movt	r1, #0
    3e04:	mov	r0, r3
    3e08:	bl	0 <fprintf>
    3e0c:	mov	r3, #17
    3e10:	ldr	r2, [fp, #-128]	; 0xffffff80
    3e14:	ldr	r1, [fp, #-124]	; 0xffffff84
    3e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3e1c:	bl	0 <flatcc_json_parser_set_error>
    3e20:	str	r0, [fp, #-124]	; 0xffffff84
    3e24:	b	3e90 <test+0x18cc>
    3e28:	movw	r3, #0
    3e2c:	movt	r3, #0
    3e30:	ldr	r3, [r3]
    3e34:	mov	r2, #26
    3e38:	mov	r1, #1
    3e3c:	movw	r0, #0
    3e40:	movt	r0, #0
    3e44:	bl	0 <fwrite>
    3e48:	b	3e90 <test+0x18cc>
    3e4c:	nop	{0}
    3e50:	b	3e90 <test+0x18cc>
    3e54:	nop	{0}
    3e58:	b	3e90 <test+0x18cc>
    3e5c:	nop	{0}
    3e60:	b	3e90 <test+0x18cc>
    3e64:	nop	{0}
    3e68:	b	3e90 <test+0x18cc>
    3e6c:	nop	{0}
    3e70:	b	3e90 <test+0x18cc>
    3e74:	nop	{0}
    3e78:	b	3e90 <test+0x18cc>
    3e7c:	nop	{0}
    3e80:	b	3e90 <test+0x18cc>
    3e84:	nop	{0}
    3e88:	b	3e90 <test+0x18cc>
    3e8c:	nop	{0}
    3e90:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3e94:	ldr	r3, [r3, #24]
    3e98:	cmp	r3, #0
    3e9c:	beq	3f08 <test+0x1944>
    3ea0:	movw	r3, #0
    3ea4:	movt	r3, #0
    3ea8:	ldr	r4, [r3]
    3eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3eb0:	ldr	r5, [r3, #16]
    3eb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3eb8:	ldr	r2, [r3, #36]	; 0x24
    3ebc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3ec0:	ldr	r3, [r3, #4]
    3ec4:	sub	r3, r2, r3
    3ec8:	add	r6, r3, #1
    3ecc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3ed0:	ldr	r3, [r3, #24]
    3ed4:	mov	r0, r3
    3ed8:	bl	0 <flatcc_json_parser_error_string>
    3edc:	mov	r3, r0
    3ee0:	str	r3, [sp]
    3ee4:	mov	r3, r6
    3ee8:	mov	r2, r5
    3eec:	movw	r1, #0
    3ef0:	movt	r1, #0
    3ef4:	mov	r0, r4
    3ef8:	bl	0 <fprintf>
    3efc:	ldr	r0, [fp, #-120]	; 0xffffff88
    3f00:	bl	0 <flatcc_builder_reset>
    3f04:	b	3f28 <test+0x1964>
    3f08:	movw	r3, #0
    3f0c:	movt	r3, #0
    3f10:	ldr	r3, [r3]
    3f14:	mov	r2, #15
    3f18:	mov	r1, #1
    3f1c:	movw	r0, #0
    3f20:	movt	r0, #0
    3f24:	bl	0 <fwrite>
    3f28:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3f2c:	ldr	r2, [r3, #24]
    3f30:	ldr	r3, [fp, #-132]	; 0xffffff7c
    3f34:	str	r2, [r3]
    3f38:	ldr	r3, [fp, #-124]	; 0xffffff84
    3f3c:	mov	r0, r3
    3f40:	sub	sp, fp, #28
    3f44:	ldrd	r4, [sp]
    3f48:	ldrd	r6, [sp, #8]
    3f4c:	ldrd	r8, [sp, #16]
    3f50:	ldr	fp, [sp, #24]
    3f54:	add	sp, sp, #28
    3f58:	pop	{pc}		; (ldr pc, [sp], #4)

00003f5c <main>:
    3f5c:	str	fp, [sp, #-8]!
    3f60:	str	lr, [sp, #4]
    3f64:	add	fp, sp, #4
    3f68:	sub	sp, sp, #240	; 0xf0
    3f6c:	mvn	r3, #0
    3f70:	str	r3, [fp, #-8]
    3f74:	sub	r3, fp, #240	; 0xf0
    3f78:	mov	r0, r3
    3f7c:	bl	0 <flatcc_builder_init>
    3f80:	ldr	r2, [pc, #52]	; 3fbc <main+0x60>
    3f84:	sub	r3, fp, #8
    3f88:	sub	r0, fp, #240	; 0xf0
    3f8c:	movw	r1, #0
    3f90:	movt	r1, #0
    3f94:	bl	25c4 <test>
    3f98:	sub	r3, fp, #240	; 0xf0
    3f9c:	mov	r0, r3
    3fa0:	bl	0 <flatcc_builder_clear>
    3fa4:	ldr	r3, [fp, #-8]
    3fa8:	mov	r0, r3
    3fac:	sub	sp, fp, #4
    3fb0:	ldr	fp, [sp]
    3fb4:	add	sp, sp, #4
    3fb8:	pop	{pc}		; (ldr pc, [sp], #4)
    3fbc:	.word	0x00000285
