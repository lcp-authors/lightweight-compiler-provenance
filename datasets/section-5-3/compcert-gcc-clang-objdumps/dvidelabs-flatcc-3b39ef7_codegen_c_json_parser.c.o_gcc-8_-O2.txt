
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <println>:
       0:	push	{r1, r2, r3}
       4:	movw	r3, #0
       8:	movt	r3, #0
       c:	strd	r4, [sp, #-28]!	; 0xffffffe4
      10:	mov	r5, r0
      14:	ldr	r2, [r0, #212]	; 0xd4
      18:	ldr	r4, [r0, #220]	; 0xdc
      1c:	strd	r6, [sp, #8]
      20:	strd	r8, [sp, #16]
      24:	str	lr, [sp, #24]
      28:	sub	sp, sp, #8
      2c:	ldrb	r1, [r3]
      30:	ldr	r9, [sp, #36]	; 0x24
      34:	ldr	r6, [r2, #176]	; 0xb0
      38:	cmp	r1, #0
      3c:	beq	fc <println+0xfc>
      40:	ldrb	r3, [r9]
      44:	cmp	r3, #0
      48:	beq	d0 <println+0xd0>
      4c:	mul	r6, r6, r4
      50:	cmp	r6, #64	; 0x40
      54:	ble	9c <println+0x9c>
      58:	movw	r8, #0
      5c:	movt	r8, #0
      60:	movw	r7, #0
      64:	movt	r7, #0
      68:	mov	r4, r6
      6c:	sub	r4, r4, #64	; 0x40
      70:	mov	r3, r8
      74:	ldr	r0, [r5, #204]	; 0xcc
      78:	mov	r2, #64	; 0x40
      7c:	mov	r1, r7
      80:	bl	0 <fprintf>
      84:	cmp	r4, #64	; 0x40
      88:	bgt	6c <println+0x6c>
      8c:	sub	r3, r6, #65	; 0x41
      90:	sub	r6, r6, #64	; 0x40
      94:	bic	r3, r3, #63	; 0x3f
      98:	sub	r6, r6, r3
      9c:	mov	r2, r6
      a0:	movw	r3, #0
      a4:	movt	r3, #0
      a8:	movw	r1, #0
      ac:	movt	r1, #0
      b0:	ldr	r0, [r5, #204]	; 0xcc
      b4:	bl	0 <fprintf>
      b8:	add	r3, sp, #40	; 0x28
      bc:	mov	r1, r9
      c0:	ldr	r0, [r5, #204]	; 0xcc
      c4:	mov	r2, r3
      c8:	str	r3, [sp, #4]
      cc:	bl	0 <vfprintf>
      d0:	ldr	r1, [r5, #204]	; 0xcc
      d4:	mov	r0, #10
      d8:	bl	0 <fputc>
      dc:	add	sp, sp, #8
      e0:	ldrd	r4, [sp]
      e4:	ldrd	r6, [sp, #8]
      e8:	ldrd	r8, [sp, #16]
      ec:	ldr	lr, [sp, #24]
      f0:	add	sp, sp, #28
      f4:	add	sp, sp, #12
      f8:	bx	lr
      fc:	mov	r0, r3
     100:	mov	r2, #64	; 0x40
     104:	mov	r1, #32
     108:	bl	0 <memset>
     10c:	b	40 <println+0x40>

00000110 <gen_field_unmatched>:
     110:	movw	r1, #0
     114:	movt	r1, #0
     118:	b	0 <println>

0000011c <gen_enum_unmatched>:
     11c:	movw	r1, #0
     120:	movt	r1, #0
     124:	b	0 <println>

00000128 <gen_scope_unmatched>:
     128:	b	11c <gen_enum_unmatched>

0000012c <gen_prefix_trie>:
     12c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     130:	sub	r5, r3, r2
     134:	mov	r4, r0
     138:	strd	r6, [sp, #8]
     13c:	add	r5, r5, #1
     140:	strd	r8, [sp, #16]
     144:	add	r5, r5, r5, lsr #31
     148:	mov	r8, r1
     14c:	strd	sl, [sp, #24]
     150:	mov	sl, r2
     154:	str	lr, [sp, #32]
     158:	sub	sp, sp, #52	; 0x34
     15c:	add	r5, r2, r5, asr #1
     160:	ldr	r2, [r1]
     164:	str	r3, [sp, #28]
     168:	ldr	r9, [sp, #88]	; 0x58
     16c:	ldr	r3, [sp, #92]	; 0x5c
     170:	str	r3, [sp, #24]
     174:	lsl	r3, r5, #4
     178:	str	r3, [sp, #40]	; 0x28
     17c:	add	r3, r2, r3
     180:	ldr	r3, [r3, #4]
     184:	cmp	r9, r3
     188:	bgt	310 <gen_prefix_trie+0x1e4>
     18c:	sub	r1, r3, r9
     190:	ldr	r7, [r2, r5, lsl #4]
     194:	mov	r2, #1
     198:	cmp	r1, #8
     19c:	movlt	r6, r1
     1a0:	movge	r6, #8
     1a4:	str	r1, [sp, #44]	; 0x2c
     1a8:	rsb	ip, r6, #8
     1ac:	lsl	ip, ip, #3
     1b0:	add	r7, r7, r9
     1b4:	sub	lr, ip, #32
     1b8:	rsb	fp, ip, #32
     1bc:	lsl	r0, r2, ip
     1c0:	lsl	r1, r2, lr
     1c4:	rsbs	r0, r0, #0
     1c8:	orr	r1, r1, r2, lsr fp
     1cc:	rsc	r1, r1, #0
     1d0:	cmp	r9, r3
     1d4:	strd	r0, [sp, #32]
     1d8:	mov	r1, #0
     1dc:	mov	r0, r1
     1e0:	beq	32c <gen_prefix_trie+0x200>
     1e4:	add	lr, r7, r6
     1e8:	ldrb	r2, [lr, #-1]!
     1ec:	mov	r3, #0
     1f0:	strd	r2, [sp, #16]
     1f4:	sub	r3, ip, #32
     1f8:	ldr	fp, [sp, #16]
     1fc:	ldr	r2, [sp, #16]
     200:	lsl	r3, fp, r3
     204:	rsb	fp, ip, #32
     208:	orr	r1, r1, r2, lsl ip
     20c:	add	ip, ip, #8
     210:	orr	r3, r3, r2, lsr fp
     214:	cmp	ip, #64	; 0x40
     218:	orr	r0, r3, r0
     21c:	bne	1e8 <gen_prefix_trie+0xbc>
     220:	ldr	r3, [sp, #44]	; 0x2c
     224:	cmp	r3, #7
     228:	ble	32c <gen_prefix_trie+0x200>
     22c:	mov	r6, #8
     230:	mov	r3, r0
     234:	mov	r2, r1
     238:	mov	r0, r4
     23c:	movw	r1, #0
     240:	movt	r1, #0
     244:	strd	r6, [sp]
     248:	bl	0 <println>
     24c:	ldr	r3, [r4, #220]	; 0xdc
     250:	cmp	sl, r5
     254:	add	r3, r3, #1
     258:	str	r3, [r4, #220]	; 0xdc
     25c:	bne	35c <gen_prefix_trie+0x230>
     260:	ldm	r8, {r2, r5}
     264:	mov	r0, r4
     268:	ldr	r3, [sp, #40]	; 0x28
     26c:	ldr	r1, [r8, #12]
     270:	add	r2, r2, r3
     274:	ldrd	r2, [r2, #8]
     278:	str	r6, [sp]
     27c:	blx	r5
     280:	ldr	r2, [sp, #24]
     284:	cmp	r2, #0
     288:	bgt	480 <gen_prefix_trie+0x354>
     28c:	mov	r0, r4
     290:	ldr	r3, [r8, #8]
     294:	blx	r3
     298:	ldr	r3, [r4, #220]	; 0xdc
     29c:	cmp	r3, #0
     2a0:	beq	51c <gen_prefix_trie+0x3f0>
     2a4:	sub	r3, r3, #1
     2a8:	movw	r1, #0
     2ac:	movt	r1, #0
     2b0:	mov	r0, r4
     2b4:	str	r3, [r4, #220]	; 0xdc
     2b8:	bl	0 <println>
     2bc:	ldr	r3, [r4, #220]	; 0xdc
     2c0:	cmp	r3, #0
     2c4:	beq	4fc <gen_prefix_trie+0x3d0>
     2c8:	sub	r0, r3, #1
     2cc:	mov	r2, r6
     2d0:	mov	r3, r7
     2d4:	movw	r1, #0
     2d8:	movt	r1, #0
     2dc:	str	r0, [r4, #220]	; 0xdc
     2e0:	mov	r0, r4
     2e4:	bl	0 <println>
     2e8:	ldr	r3, [r4, #220]	; 0xdc
     2ec:	ldr	r2, [sp, #24]
     2f0:	add	r3, r3, #1
     2f4:	cmp	r2, #0
     2f8:	str	r3, [r4, #220]	; 0xdc
     2fc:	bgt	4a8 <gen_prefix_trie+0x37c>
     300:	mov	r0, r4
     304:	ldr	r3, [r8, #8]
     308:	blx	r3
     30c:	b	438 <gen_prefix_trie+0x30c>
     310:	mov	r1, #0
     314:	mov	r2, #0
     318:	mov	r3, #0
     31c:	mov	r0, r1
     320:	mov	r6, r1
     324:	mov	r7, r1
     328:	strd	r2, [sp, #32]
     32c:	str	r1, [sp]
     330:	movw	r1, #0
     334:	movt	r1, #0
     338:	stmib	sp, {r0, r6, r7}
     33c:	mov	r0, r4
     340:	ldrd	r2, [sp, #32]
     344:	bl	0 <println>
     348:	ldr	r3, [r4, #220]	; 0xdc
     34c:	cmp	sl, r5
     350:	add	r3, r3, #1
     354:	str	r3, [r4, #220]	; 0xdc
     358:	beq	260 <gen_prefix_trie+0x134>
     35c:	ldr	r3, [sp, #28]
     360:	cmp	r3, r5
     364:	bne	3c8 <gen_prefix_trie+0x29c>
     368:	ldm	r8, {r2, fp}
     36c:	mov	r0, r4
     370:	ldr	r3, [sp, #40]	; 0x28
     374:	ldr	r1, [r8, #12]
     378:	add	r2, r2, r3
     37c:	ldrd	r2, [r2, #8]
     380:	str	r6, [sp]
     384:	blx	fp
     388:	ldr	r2, [sp, #24]
     38c:	cmp	r2, #0
     390:	bgt	494 <gen_prefix_trie+0x368>
     394:	mov	r0, r4
     398:	ldr	r3, [r8, #8]
     39c:	blx	r3
     3a0:	ldr	r3, [r4, #220]	; 0xdc
     3a4:	cmp	r3, #0
     3a8:	beq	4dc <gen_prefix_trie+0x3b0>
     3ac:	sub	r3, r3, #1
     3b0:	movw	r1, #0
     3b4:	movt	r1, #0
     3b8:	mov	r0, r4
     3bc:	str	r3, [r4, #220]	; 0xdc
     3c0:	bl	0 <println>
     3c4:	b	3e4 <gen_prefix_trie+0x2b8>
     3c8:	ldr	ip, [sp, #24]
     3cc:	mov	r2, r5
     3d0:	mov	r1, r8
     3d4:	mov	r0, r4
     3d8:	ldr	r3, [sp, #28]
     3dc:	stm	sp, {r9, ip}
     3e0:	bl	12c <gen_prefix_trie>
     3e4:	ldr	r3, [r4, #220]	; 0xdc
     3e8:	cmp	r3, #0
     3ec:	beq	53c <gen_prefix_trie+0x410>
     3f0:	sub	r0, r3, #1
     3f4:	mov	r2, r6
     3f8:	mov	r3, r7
     3fc:	movw	r1, #0
     400:	movt	r1, #0
     404:	str	r0, [r4, #220]	; 0xdc
     408:	mov	r0, r4
     40c:	bl	0 <println>
     410:	ldr	ip, [r4, #220]	; 0xdc
     414:	sub	r3, r5, #1
     418:	mov	r2, sl
     41c:	mov	r1, r8
     420:	mov	r0, r4
     424:	ldr	lr, [sp, #24]
     428:	add	ip, ip, #1
     42c:	stm	sp, {r9, lr}
     430:	str	ip, [r4, #220]	; 0xdc
     434:	bl	12c <gen_prefix_trie>
     438:	ldr	r3, [r4, #220]	; 0xdc
     43c:	cmp	r3, #0
     440:	beq	4bc <gen_prefix_trie+0x390>
     444:	sub	r1, r3, #1
     448:	mov	r2, r6
     44c:	mov	r3, r7
     450:	mov	r0, r4
     454:	str	r1, [r4, #220]	; 0xdc
     458:	movw	r1, #0
     45c:	movt	r1, #0
     460:	add	sp, sp, #52	; 0x34
     464:	ldrd	r4, [sp]
     468:	ldrd	r6, [sp, #8]
     46c:	ldrd	r8, [sp, #16]
     470:	ldrd	sl, [sp, #24]
     474:	ldr	lr, [sp, #32]
     478:	add	sp, sp, #36	; 0x24
     47c:	b	0 <println>
     480:	movw	r1, #0
     484:	movt	r1, #0
     488:	mov	r0, r4
     48c:	bl	0 <println>
     490:	b	298 <gen_prefix_trie+0x16c>
     494:	movw	r1, #0
     498:	movt	r1, #0
     49c:	mov	r0, r4
     4a0:	bl	0 <println>
     4a4:	b	3a0 <gen_prefix_trie+0x274>
     4a8:	movw	r1, #0
     4ac:	movt	r1, #0
     4b0:	mov	r0, r4
     4b4:	bl	0 <println>
     4b8:	b	438 <gen_prefix_trie+0x30c>
     4bc:	movw	r3, #0
     4c0:	movt	r3, #0
     4c4:	movw	r1, #0
     4c8:	movt	r1, #0
     4cc:	movw	r0, #0
     4d0:	movt	r0, #0
     4d4:	movw	r2, #910	; 0x38e
     4d8:	bl	0 <__assert_fail>
     4dc:	movw	r3, #0
     4e0:	movt	r3, #0
     4e4:	movw	r1, #0
     4e8:	movt	r1, #0
     4ec:	movw	r0, #0
     4f0:	movt	r0, #0
     4f4:	movw	r2, #903	; 0x387
     4f8:	bl	0 <__assert_fail>
     4fc:	movw	r3, #0
     500:	movt	r3, #0
     504:	movw	r1, #0
     508:	movt	r1, #0
     50c:	movw	r0, #0
     510:	movt	r0, #0
     514:	movw	r2, #889	; 0x379
     518:	bl	0 <__assert_fail>
     51c:	movw	r3, #0
     520:	movt	r3, #0
     524:	movw	r1, #0
     528:	movt	r1, #0
     52c:	movw	r0, #0
     530:	movt	r0, #0
     534:	mov	r2, #888	; 0x378
     538:	bl	0 <__assert_fail>
     53c:	movw	r3, #0
     540:	movt	r3, #0
     544:	movw	r1, #0
     548:	movt	r1, #0
     54c:	movw	r0, #0
     550:	movt	r0, #0
     554:	movw	r2, #907	; 0x38b
     558:	bl	0 <__assert_fail>

0000055c <gen_trie>:
     55c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     560:	strd	r6, [sp, #8]
     564:	strd	r8, [sp, #16]
     568:	strd	sl, [sp, #24]
     56c:	str	lr, [sp, #32]
     570:	sub	sp, sp, #100	; 0x64
     574:	ldr	r4, [sp, #136]	; 0x88
     578:	strd	r2, [sp, #60]	; 0x3c
     57c:	ldr	r3, [r1]
     580:	strd	r0, [sp, #72]	; 0x48
     584:	add	r1, r4, #7
     588:	str	r3, [sp, #80]	; 0x50
     58c:	add	r3, r3, r2, lsl #4
     590:	str	r1, [sp, #92]	; 0x5c
     594:	ldr	r3, [r3, #4]
     598:	cmp	r1, r3
     59c:	str	r3, [sp, #88]	; 0x58
     5a0:	bge	a98 <gen_trie+0x53c>
     5a4:	sub	r3, r3, r4
     5a8:	cmp	r3, #8
     5ac:	beq	a98 <gen_trie+0x53c>
     5b0:	ldrd	r2, [sp, #60]	; 0x3c
     5b4:	sub	r3, r3, r2
     5b8:	add	r3, r3, r3, lsr #31
     5bc:	add	fp, r2, r3, asr #1
     5c0:	cmp	r2, fp
     5c4:	str	fp, [sp, #84]	; 0x54
     5c8:	bge	74c <gen_trie+0x1f0>
     5cc:	ldr	r3, [sp, #80]	; 0x50
     5d0:	mov	r0, #0
     5d4:	mov	r2, #0
     5d8:	mov	r8, r0
     5dc:	mov	lr, r0
     5e0:	mov	r5, r0
     5e4:	mov	r9, #1
     5e8:	add	ip, r3, fp, lsl #4
     5ec:	mov	r3, #0
     5f0:	strd	r2, [sp, #16]
     5f4:	ldr	r3, [ip, #-12]
     5f8:	cmp	r4, r3
     5fc:	bgt	698 <gen_trie+0x13c>
     600:	sub	r1, r3, r4
     604:	cmp	r1, #8
     608:	movge	r1, #8
     60c:	cmp	r4, r3
     610:	beq	af8 <gen_trie+0x59c>
     614:	ldr	r3, [ip, #-16]
     618:	rsb	r6, r1, #8
     61c:	mov	lr, #0
     620:	add	r1, r1, r4
     624:	lsl	r7, r6, #3
     628:	mov	r5, lr
     62c:	add	r1, r3, r1
     630:	ldrb	r2, [r1, #-1]!
     634:	mov	r3, #0
     638:	strd	r2, [sp, #16]
     63c:	sub	r3, r7, #32
     640:	ldr	sl, [sp, #16]
     644:	ldr	r2, [sp, #16]
     648:	lsl	r3, sl, r3
     64c:	rsb	sl, r7, #32
     650:	orr	lr, lr, r2, lsl r7
     654:	add	r7, r7, #8
     658:	orr	r3, r3, r2, lsr sl
     65c:	cmp	r7, #64	; 0x40
     660:	orr	r5, r3, r5
     664:	bne	630 <gen_trie+0xd4>
     668:	lsl	r6, r6, #3
     66c:	sub	r2, r6, #32
     670:	rsb	r3, r6, #32
     674:	lsl	r2, r9, r2
     678:	orr	r3, r2, r9, lsr r3
     67c:	str	r3, [sp, #12]
     680:	lsl	r3, r9, r6
     684:	str	r3, [sp, #8]
     688:	ldrd	r2, [sp, #8]
     68c:	rsbs	r2, r2, #0
     690:	rsc	r3, r3, #0
     694:	strd	r2, [sp, #16]
     698:	ldm	ip, {r1, sl}
     69c:	cmp	r4, sl
     6a0:	str	r1, [sp, #68]	; 0x44
     6a4:	bgt	708 <gen_trie+0x1ac>
     6a8:	sub	r3, sl, r4
     6ac:	cmp	r3, #8
     6b0:	movge	r3, #8
     6b4:	cmp	r4, sl
     6b8:	beq	ae4 <gen_trie+0x588>
     6bc:	rsb	r2, r3, #8
     6c0:	mov	r0, #0
     6c4:	add	r3, r3, r4
     6c8:	lsl	r2, r2, #3
     6cc:	mov	r8, r0
     6d0:	add	r3, r1, r3
     6d4:	ldrb	r6, [r3, #-1]!
     6d8:	mov	r7, #0
     6dc:	sub	r1, r2, #32
     6e0:	strd	r6, [sp, #32]
     6e4:	lsl	r1, r6, r1
     6e8:	rsb	r7, r2, #32
     6ec:	ldr	r6, [sp, #32]
     6f0:	orr	r0, r0, r6, lsl r2
     6f4:	add	r2, r2, #8
     6f8:	orr	r1, r1, r6, lsr r7
     6fc:	cmp	r2, #64	; 0x40
     700:	orr	r8, r1, r8
     704:	bne	6d4 <gen_trie+0x178>
     708:	eor	r2, lr, r0
     70c:	eor	r3, r5, r8
     710:	ldr	r1, [sp, #16]
     714:	sub	r6, fp, #1
     718:	and	r2, r1, r2
     71c:	str	r2, [sp, #40]	; 0x28
     720:	ldr	r2, [sp, #20]
     724:	and	r3, r2, r3
     728:	str	r3, [sp, #44]	; 0x2c
     72c:	ldrd	r2, [sp, #40]	; 0x28
     730:	orrs	r3, r2, r3
     734:	bne	b14 <gen_trie+0x5b8>
     738:	ldr	r3, [sp, #60]	; 0x3c
     73c:	mov	fp, r6
     740:	sub	ip, ip, #16
     744:	cmp	r3, r6
     748:	bne	5f4 <gen_trie+0x98>
     74c:	ldr	r3, [sp, #64]	; 0x40
     750:	ldr	r2, [sp, #84]	; 0x54
     754:	cmp	r3, r2
     758:	movle	r5, r2
     75c:	ble	900 <gen_trie+0x3a4>
     760:	ldr	r3, [sp, #80]	; 0x50
     764:	mov	r2, #0
     768:	mov	sl, #0
     76c:	mov	fp, #0
     770:	mov	lr, r2
     774:	ldr	r9, [sp, #84]	; 0x54
     778:	mov	r0, r2
     77c:	mov	ip, r2
     780:	mov	r8, #1
     784:	add	r1, r3, r9, lsl #4
     788:	ldr	r3, [r1, #4]
     78c:	cmp	r4, r3
     790:	bgt	834 <gen_trie+0x2d8>
     794:	sub	r5, r3, r4
     798:	cmp	r5, #8
     79c:	movge	r5, #8
     7a0:	cmp	r4, r3
     7a4:	beq	c64 <gen_trie+0x708>
     7a8:	ldr	r6, [r1]
     7ac:	rsb	sl, r5, #8
     7b0:	mov	r0, #0
     7b4:	add	r5, r5, r4
     7b8:	lsl	r3, sl, #3
     7bc:	mov	ip, r0
     7c0:	mov	fp, r1
     7c4:	mov	r7, r0
     7c8:	add	r5, r6, r5
     7cc:	ldrb	r0, [r5, #-1]!
     7d0:	mov	r1, #0
     7d4:	sub	r6, r3, #32
     7d8:	strd	r0, [sp, #8]
     7dc:	lsl	r6, r0, r6
     7e0:	rsb	r1, r3, #32
     7e4:	ldr	r0, [sp, #8]
     7e8:	orr	r7, r7, r0, lsl r3
     7ec:	add	r3, r3, #8
     7f0:	orr	r6, r6, r0, lsr r1
     7f4:	cmp	r3, #64	; 0x40
     7f8:	orr	ip, r6, ip
     7fc:	bne	7cc <gen_trie+0x270>
     800:	mov	r1, fp
     804:	mov	r0, r7
     808:	lsl	sl, sl, #3
     80c:	sub	r5, sl, #32
     810:	rsb	r3, sl, #32
     814:	lsl	r5, r8, r5
     818:	orr	r3, r5, r8, lsr r3
     81c:	str	r3, [sp, #28]
     820:	lsl	r3, r8, sl
     824:	str	r3, [sp, #24]
     828:	ldrd	sl, [sp, #24]
     82c:	rsbs	sl, sl, #0
     830:	rsc	fp, fp, #0
     834:	ldr	r3, [r1, #20]
     838:	cmp	r4, r3
     83c:	bgt	b08 <gen_trie+0x5ac>
     840:	sub	r5, r3, r4
     844:	cmp	r5, #8
     848:	movge	r5, #8
     84c:	cmp	r4, r3
     850:	beq	c74 <gen_trie+0x718>
     854:	ldr	r6, [r1, #16]
     858:	rsb	r3, r5, #8
     85c:	mov	r2, #0
     860:	add	r5, r5, r4
     864:	lsl	r3, r3, #3
     868:	mov	lr, r2
     86c:	mov	r7, r1
     870:	strd	sl, [sp, #16]
     874:	mov	fp, ip
     878:	mov	ip, r0
     87c:	add	r5, r6, r5
     880:	ldrb	r0, [r5, #-1]!
     884:	mov	r1, #0
     888:	sub	r6, r3, #32
     88c:	strd	r0, [sp, #8]
     890:	lsl	r6, r0, r6
     894:	rsb	r1, r3, #32
     898:	ldr	sl, [sp, #8]
     89c:	orr	r2, r2, sl, lsl r3
     8a0:	add	r3, r3, #8
     8a4:	orr	r6, r6, sl, lsr r1
     8a8:	cmp	r3, #64	; 0x40
     8ac:	orr	lr, r6, lr
     8b0:	bne	880 <gen_trie+0x324>
     8b4:	mov	r0, ip
     8b8:	eor	r3, lr, fp
     8bc:	mov	ip, fp
     8c0:	ldrd	sl, [sp, #16]
     8c4:	mov	r1, r7
     8c8:	eor	r5, r2, r0
     8cc:	and	r5, sl, r5
     8d0:	and	r3, fp, r3
     8d4:	str	r5, [sp, #48]	; 0x30
     8d8:	add	r5, r9, #1
     8dc:	str	r3, [sp, #52]	; 0x34
     8e0:	ldrd	r6, [sp, #48]	; 0x30
     8e4:	orrs	r3, r6, r7
     8e8:	bne	df0 <gen_trie+0x894>
     8ec:	ldr	r3, [sp, #64]	; 0x40
     8f0:	mov	r9, r5
     8f4:	add	r1, r1, #16
     8f8:	cmp	r3, r5
     8fc:	bne	788 <gen_trie+0x22c>
     900:	str	r5, [sp, #84]	; 0x54
     904:	add	r5, r5, #1
     908:	ldr	r3, [sp, #60]	; 0x3c
     90c:	cmp	r3, r5
     910:	bge	f68 <gen_trie+0xa0c>
     914:	mov	r6, r3
     918:	ldr	r3, [sp, #80]	; 0x50
     91c:	ldr	r0, [sp, #92]	; 0x5c
     920:	add	r2, r3, #4
     924:	ldr	r3, [sp, #88]	; 0x58
     928:	b	930 <gen_trie+0x3d4>
     92c:	ldr	r3, [r2, r6, lsl #4]
     930:	cmp	r0, r3
     934:	bge	944 <gen_trie+0x3e8>
     938:	sub	r1, r3, r4
     93c:	cmp	r1, #8
     940:	bgt	c88 <gen_trie+0x72c>
     944:	add	r6, r6, #1
     948:	cmp	r6, r5
     94c:	bne	92c <gen_trie+0x3d0>
     950:	ldr	r3, [sp, #60]	; 0x3c
     954:	movw	r7, #0
     958:	movt	r7, #0
     95c:	mov	r9, r6
     960:	ldr	r8, [sp, #64]	; 0x40
     964:	cmp	r8, r6
     968:	movge	r8, #1
     96c:	movlt	r8, #0
     970:	cmp	r3, r6
     974:	movge	r8, #0
     978:	cmp	r8, #0
     97c:	movne	r8, #0
     980:	beq	1030 <gen_trie+0xad4>
     984:	sub	r3, r9, #1
     988:	ldr	r2, [sp, #60]	; 0x3c
     98c:	mov	sl, #0
     990:	ldr	lr, [sp, #76]	; 0x4c
     994:	ldr	fp, [sp, #72]	; 0x48
     998:	ldr	ip, [lr, #24]
     99c:	mov	r1, lr
     9a0:	mov	r0, fp
     9a4:	add	r9, ip, #1
     9a8:	stm	sp, {r4, r9}
     9ac:	str	r9, [lr, #24]
     9b0:	bl	12c <gen_prefix_trie>
     9b4:	mov	r2, r9
     9b8:	mov	r0, fp
     9bc:	movw	r1, #0
     9c0:	movt	r1, #0
     9c4:	bl	0 <println>
     9c8:	ldr	r3, [fp, #220]	; 0xdc
     9cc:	mov	r2, r9
     9d0:	mov	r0, fp
     9d4:	movw	r1, #0
     9d8:	movt	r1, #0
     9dc:	str	sl, [fp, #220]	; 0xdc
     9e0:	str	r3, [fp, #228]	; 0xe4
     9e4:	bl	0 <println>
     9e8:	ldr	ip, [fp, #228]	; 0xe4
     9ec:	mov	r0, fp
     9f0:	mov	r2, r5
     9f4:	str	r4, [sp]
     9f8:	ldr	r3, [sp, #64]	; 0x40
     9fc:	ldr	r1, [sp, #76]	; 0x4c
     a00:	str	ip, [fp, #220]	; 0xdc
     a04:	bl	55c <gen_trie>
     a08:	ldr	r3, [fp, #220]	; 0xdc
     a0c:	mov	r0, fp
     a10:	mov	r2, r9
     a14:	movw	r1, #0
     a18:	movt	r1, #0
     a1c:	str	sl, [fp, #220]	; 0xdc
     a20:	str	r3, [fp, #228]	; 0xe4
     a24:	bl	0 <println>
     a28:	ldr	r3, [fp, #228]	; 0xe4
     a2c:	movw	r1, #0
     a30:	movt	r1, #0
     a34:	mov	r0, fp
     a38:	str	r3, [fp, #220]	; 0xdc
     a3c:	bl	0 <println>
     a40:	cmp	r5, r6
     a44:	ble	c48 <gen_trie+0x6ec>
     a48:	ldr	r3, [sp, #72]	; 0x48
     a4c:	ldr	r3, [r3, #220]	; 0xdc
     a50:	cmp	r3, #0
     a54:	beq	f8c <gen_trie+0xa30>
     a58:	ldr	ip, [sp, #72]	; 0x48
     a5c:	sub	r1, r3, #1
     a60:	mov	r2, r8
     a64:	mov	r3, r7
     a68:	mov	r0, ip
     a6c:	str	r1, [ip, #220]	; 0xdc
     a70:	movw	r1, #0
     a74:	movt	r1, #0
     a78:	add	sp, sp, #100	; 0x64
     a7c:	ldrd	r4, [sp]
     a80:	ldrd	r6, [sp, #8]
     a84:	ldrd	r8, [sp, #16]
     a88:	ldrd	sl, [sp, #24]
     a8c:	ldr	lr, [sp, #32]
     a90:	add	sp, sp, #36	; 0x24
     a94:	b	0 <println>
     a98:	ldr	r3, [sp, #60]	; 0x3c
     a9c:	ldr	r2, [sp, #64]	; 0x40
     aa0:	cmp	r3, r2
     aa4:	beq	c34 <gen_trie+0x6d8>
     aa8:	add	r3, r3, #1
     aac:	cmp	r3, r2
     ab0:	bne	5b0 <gen_trie+0x54>
     ab4:	ldr	r3, [sp, #80]	; 0x50
     ab8:	add	r3, r3, r2, lsl #4
     abc:	ldr	r2, [sp, #92]	; 0x5c
     ac0:	ldr	r3, [r3, #4]
     ac4:	cmp	r2, r3
     ac8:	bge	c34 <gen_trie+0x6d8>
     acc:	sub	r3, r3, r4
     ad0:	cmp	r3, #8
     ad4:	beq	c34 <gen_trie+0x6d8>
     ad8:	ldr	r3, [sp, #60]	; 0x3c
     adc:	str	r3, [sp, #84]	; 0x54
     ae0:	b	74c <gen_trie+0x1f0>
     ae4:	mov	r0, #0
     ae8:	mov	r2, lr
     aec:	mov	r8, r0
     af0:	mov	r3, r5
     af4:	b	710 <gen_trie+0x1b4>
     af8:	mov	lr, #0
     afc:	rsb	r6, r1, #8
     b00:	mov	r5, lr
     b04:	b	668 <gen_trie+0x10c>
     b08:	eor	r5, r0, r2
     b0c:	eor	r3, ip, lr
     b10:	b	8cc <gen_trie+0x370>
     b14:	cmp	r4, sl
     b18:	bgt	e3c <gen_trie+0x8e0>
     b1c:	ldr	r3, [sp, #68]	; 0x44
     b20:	sub	r5, sl, r4
     b24:	cmp	r5, #8
     b28:	movge	r5, #8
     b2c:	cmp	r4, sl
     b30:	add	r7, r3, r4
     b34:	beq	f58 <gen_trie+0x9fc>
     b38:	rsb	r1, r5, #8
     b3c:	mov	r2, #0
     b40:	lsl	r1, r1, #3
     b44:	mov	r3, r2
     b48:	add	ip, r7, r5
     b4c:	ldrb	r8, [ip, #-1]!
     b50:	sub	r0, r1, #32
     b54:	rsb	lr, r1, #32
     b58:	lsl	r0, r8, r0
     b5c:	orr	r2, r2, r8, lsl r1
     b60:	add	r1, r1, #8
     b64:	orr	r0, r0, r8, lsr lr
     b68:	cmp	r1, #64	; 0x40
     b6c:	orr	r3, r0, r3
     b70:	bne	b4c <gen_trie+0x5f0>
     b74:	ldr	r8, [sp, #72]	; 0x48
     b78:	movw	r1, #0
     b7c:	movt	r1, #0
     b80:	stm	sp, {r5, r7}
     b84:	mov	r0, r8
     b88:	bl	0 <println>
     b8c:	ldr	ip, [r8, #220]	; 0xdc
     b90:	mov	r3, r6
     b94:	mov	r0, r8
     b98:	str	r4, [sp]
     b9c:	ldr	r2, [sp, #60]	; 0x3c
     ba0:	ldr	r1, [sp, #76]	; 0x4c
     ba4:	add	ip, ip, #1
     ba8:	str	ip, [r8, #220]	; 0xdc
     bac:	bl	55c <gen_trie>
     bb0:	ldr	r3, [r8, #220]	; 0xdc
     bb4:	cmp	r3, #0
     bb8:	beq	ff8 <gen_trie+0xa9c>
     bbc:	ldr	r6, [sp, #72]	; 0x48
     bc0:	sub	r0, r3, #1
     bc4:	mov	r2, r5
     bc8:	mov	r3, r7
     bcc:	movw	r1, #0
     bd0:	movt	r1, #0
     bd4:	str	r0, [r6, #220]	; 0xdc
     bd8:	mov	r0, r6
     bdc:	bl	0 <println>
     be0:	ldr	ip, [r6, #220]	; 0xdc
     be4:	mov	r2, fp
     be8:	mov	r0, r6
     bec:	str	r4, [sp]
     bf0:	ldr	r3, [sp, #64]	; 0x40
     bf4:	ldr	r1, [sp, #76]	; 0x4c
     bf8:	add	ip, ip, #1
     bfc:	str	ip, [r6, #220]	; 0xdc
     c00:	bl	55c <gen_trie>
     c04:	ldr	r3, [r6, #220]	; 0xdc
     c08:	cmp	r3, #0
     c0c:	beq	1014 <gen_trie+0xab8>
     c10:	ldr	ip, [sp, #72]	; 0x48
     c14:	sub	r1, r3, #1
     c18:	mov	r2, r5
     c1c:	mov	r3, r7
     c20:	mov	r0, ip
     c24:	str	r1, [ip, #220]	; 0xdc
     c28:	movw	r1, #0
     c2c:	movt	r1, #0
     c30:	b	a78 <gen_trie+0x51c>
     c34:	mov	ip, #0
     c38:	ldrd	r2, [sp, #60]	; 0x3c
     c3c:	stm	sp, {r4, ip}
     c40:	ldrd	r0, [sp, #72]	; 0x48
     c44:	bl	12c <gen_prefix_trie>
     c48:	add	sp, sp, #100	; 0x64
     c4c:	ldrd	r4, [sp]
     c50:	ldrd	r6, [sp, #8]
     c54:	ldrd	r8, [sp, #16]
     c58:	ldrd	sl, [sp, #24]
     c5c:	add	sp, sp, #32
     c60:	pop	{pc}		; (ldr pc, [sp], #4)
     c64:	mov	r0, #0
     c68:	rsb	sl, r5, #8
     c6c:	mov	ip, r0
     c70:	b	808 <gen_trie+0x2ac>
     c74:	mov	r2, #0
     c78:	mov	r5, r0
     c7c:	mov	lr, r2
     c80:	mov	r3, ip
     c84:	b	8cc <gen_trie+0x370>
     c88:	str	r3, [sp, #88]	; 0x58
     c8c:	add	fp, r4, #8
     c90:	ldr	r3, [sp, #60]	; 0x3c
     c94:	cmp	r6, r3
     c98:	bgt	df8 <gen_trie+0x89c>
     c9c:	ldr	r3, [sp, #88]	; 0x58
     ca0:	cmp	r4, r3
     ca4:	movle	sl, #0
     ca8:	bgt	f18 <gen_trie+0x9bc>
     cac:	ldr	r3, [sp, #80]	; 0x50
     cb0:	mov	r1, #0
     cb4:	mov	r2, r1
     cb8:	ldr	r7, [r3, r6, lsl #4]
     cbc:	mov	r3, r1
     cc0:	add	r7, r7, r4
     cc4:	add	ip, r7, #8
     cc8:	ldrb	r8, [ip, #-1]!
     ccc:	sub	r0, r1, #32
     cd0:	rsb	lr, r1, #32
     cd4:	lsl	r0, r8, r0
     cd8:	orr	r2, r2, r8, lsl r1
     cdc:	add	r1, r1, #8
     ce0:	orr	r0, r0, r8, lsr lr
     ce4:	cmp	r1, #64	; 0x40
     ce8:	orr	r3, r0, r3
     cec:	bne	cc8 <gen_trie+0x76c>
     cf0:	mov	r8, #8
     cf4:	ldr	r9, [sp, #72]	; 0x48
     cf8:	movw	r1, #0
     cfc:	movt	r1, #0
     d00:	str	r8, [sp]
     d04:	str	r7, [sp, #4]
     d08:	mov	r0, r9
     d0c:	bl	0 <println>
     d10:	ldr	r3, [r9, #220]	; 0xdc
     d14:	cmp	sl, #0
     d18:	mov	sl, r9
     d1c:	add	r3, r3, #1
     d20:	str	r3, [r9, #220]	; 0xdc
     d24:	bne	e50 <gen_trie+0x8f4>
     d28:	ldr	sl, [sp, #72]	; 0x48
     d2c:	movw	r1, #0
     d30:	movt	r1, #0
     d34:	mov	r9, r6
     d38:	mov	r0, sl
     d3c:	bl	0 <println>
     d40:	mov	r0, sl
     d44:	movw	r1, #0
     d48:	movt	r1, #0
     d4c:	bl	0 <println>
     d50:	mov	r2, r6
     d54:	mov	r0, sl
     d58:	str	fp, [sp]
     d5c:	ldr	r1, [sp, #76]	; 0x4c
     d60:	ldr	r3, [sp, #84]	; 0x54
     d64:	bl	55c <gen_trie>
     d68:	ldr	r3, [sp, #72]	; 0x48
     d6c:	ldr	r3, [r3, #220]	; 0xdc
     d70:	cmp	r3, #0
     d74:	beq	fdc <gen_trie+0xa80>
     d78:	ldr	sl, [sp, #72]	; 0x48
     d7c:	sub	r0, r3, #1
     d80:	mov	r2, r8
     d84:	mov	r3, r7
     d88:	movw	r1, #0
     d8c:	movt	r1, #0
     d90:	str	r0, [sl, #220]	; 0xdc
     d94:	mov	r0, sl
     d98:	bl	0 <println>
     d9c:	ldr	r3, [sl, #220]	; 0xdc
     da0:	ldr	r0, [sp, #64]	; 0x40
     da4:	ldr	ip, [sp, #60]	; 0x3c
     da8:	add	r3, r3, #1
     dac:	cmp	r0, r5
     db0:	str	r3, [sl, #220]	; 0xdc
     db4:	movlt	r2, #0
     db8:	movge	r2, #1
     dbc:	cmp	r0, r5
     dc0:	cmpge	r9, ip
     dc4:	bgt	984 <gen_trie+0x428>
     dc8:	ldr	r3, [sp, #60]	; 0x3c
     dcc:	cmp	r9, r3
     dd0:	bgt	1030 <gen_trie+0xad4>
     dd4:	cmp	r2, #0
     dd8:	bne	fa8 <gen_trie+0xa4c>
     ddc:	ldr	r0, [sp, #72]	; 0x48
     de0:	ldr	r3, [sp, #76]	; 0x4c
     de4:	ldr	r3, [r3, #8]
     de8:	blx	r3
     dec:	b	a40 <gen_trie+0x4e4>
     df0:	str	r9, [sp, #84]	; 0x54
     df4:	b	908 <gen_trie+0x3ac>
     df8:	ldr	r3, [sp, #80]	; 0x50
     dfc:	add	r3, r3, r6, lsl #4
     e00:	ldr	r3, [r3, #-12]
     e04:	cmp	r3, fp
     e08:	bgt	c9c <gen_trie+0x740>
     e0c:	sub	r3, r3, r4
     e10:	sub	sl, r3, #8
     e14:	ldr	r3, [sp, #88]	; 0x58
     e18:	clz	sl, sl
     e1c:	lsr	sl, sl, #5
     e20:	cmp	r4, r3
     e24:	ble	cac <gen_trie+0x750>
     e28:	mov	r2, #0
     e2c:	mov	r3, r2
     e30:	mov	r7, r2
     e34:	mov	r8, r2
     e38:	b	cf4 <gen_trie+0x798>
     e3c:	mov	r2, #0
     e40:	mov	r3, r2
     e44:	mov	r7, r2
     e48:	mov	r5, r2
     e4c:	b	b74 <gen_trie+0x618>
     e50:	mov	r0, r9
     e54:	mov	r3, r7
     e58:	mov	r2, r8
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	bl	0 <println>
     e68:	ldr	r1, [sp, #76]	; 0x4c
     e6c:	mov	r0, r9
     e70:	sub	r2, r6, #-268435455	; 0xf0000001
     e74:	mov	ip, #8
     e78:	ldm	r1, {r3, r9}
     e7c:	ldr	r1, [r1, #12]
     e80:	add	r2, r3, r2, lsl #4
     e84:	ldrd	r2, [r2, #8]
     e88:	str	ip, [sp]
     e8c:	blx	r9
     e90:	mov	r3, r7
     e94:	mov	r2, r8
     e98:	mov	r0, sl
     e9c:	movw	r1, #0
     ea0:	movt	r1, #0
     ea4:	bl	0 <println>
     ea8:	mov	r0, sl
     eac:	movw	r1, #0
     eb0:	movt	r1, #0
     eb4:	bl	0 <println>
     eb8:	mov	r0, sl
     ebc:	movw	r1, #0
     ec0:	movt	r1, #0
     ec4:	bl	0 <println>
     ec8:	mov	r2, r6
     ecc:	mov	r0, sl
     ed0:	str	fp, [sp]
     ed4:	ldr	r1, [sp, #76]	; 0x4c
     ed8:	ldr	r3, [sp, #84]	; 0x54
     edc:	bl	55c <gen_trie>
     ee0:	ldr	r3, [sl, #220]	; 0xdc
     ee4:	cmp	r3, #0
     ee8:	beq	fc0 <gen_trie+0xa64>
     eec:	ldr	ip, [sp, #72]	; 0x48
     ef0:	sub	r0, r3, #1
     ef4:	movw	r1, #0
     ef8:	movt	r1, #0
     efc:	mov	r3, r7
     f00:	mov	r2, r8
     f04:	sub	r9, r6, #1
     f08:	str	r0, [ip, #220]	; 0xdc
     f0c:	mov	r0, ip
     f10:	bl	0 <println>
     f14:	b	d68 <gen_trie+0x80c>
     f18:	ldr	r9, [sp, #72]	; 0x48
     f1c:	mov	ip, #0
     f20:	mov	r3, #0
     f24:	movw	r1, #0
     f28:	movt	r1, #0
     f2c:	mov	r2, #0
     f30:	str	ip, [sp]
     f34:	mov	r8, ip
     f38:	str	ip, [sp, #4]
     f3c:	mov	r7, ip
     f40:	mov	r0, r9
     f44:	bl	0 <println>
     f48:	ldr	r3, [r9, #220]	; 0xdc
     f4c:	add	r3, r3, #1
     f50:	str	r3, [r9, #220]	; 0xdc
     f54:	b	d28 <gen_trie+0x7cc>
     f58:	mov	r2, #0
     f5c:	mov	r3, r2
     f60:	mov	r5, r2
     f64:	b	b74 <gen_trie+0x618>
     f68:	movw	r7, #0
     f6c:	movt	r7, #0
     f70:	ldr	r6, [sp, #60]	; 0x3c
     f74:	mov	r8, #0
     f78:	ldr	r3, [sp, #64]	; 0x40
     f7c:	cmp	r3, r5
     f80:	movlt	r2, #0
     f84:	movge	r2, #1
     f88:	b	dd4 <gen_trie+0x878>
     f8c:	movw	r1, #0
     f90:	movt	r1, #0
     f94:	ldr	r3, [pc, #184]	; 1054 <gen_trie+0xaf8>
     f98:	movw	r0, #0
     f9c:	movt	r0, #0
     fa0:	mov	r2, #1072	; 0x430
     fa4:	bl	0 <__assert_fail>
     fa8:	mov	r2, r5
     fac:	str	r4, [sp]
     fb0:	ldr	r3, [sp, #64]	; 0x40
     fb4:	ldrd	r0, [sp, #72]	; 0x48
     fb8:	bl	55c <gen_trie>
     fbc:	b	a40 <gen_trie+0x4e4>
     fc0:	movw	r1, #0
     fc4:	movt	r1, #0
     fc8:	ldr	r3, [pc, #132]	; 1054 <gen_trie+0xaf8>
     fcc:	movw	r0, #0
     fd0:	movt	r0, #0
     fd4:	mov	r2, #1040	; 0x410
     fd8:	bl	0 <__assert_fail>
     fdc:	movw	r1, #0
     fe0:	movt	r1, #0
     fe4:	ldr	r3, [pc, #104]	; 1054 <gen_trie+0xaf8>
     fe8:	movw	r0, #0
     fec:	movt	r0, #0
     ff0:	movw	r2, #1044	; 0x414
     ff4:	bl	0 <__assert_fail>
     ff8:	movw	r1, #0
     ffc:	movt	r1, #0
    1000:	ldr	r3, [pc, #76]	; 1054 <gen_trie+0xaf8>
    1004:	movw	r0, #0
    1008:	movt	r0, #0
    100c:	movw	r2, #973	; 0x3cd
    1010:	bl	0 <__assert_fail>
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	ldr	r3, [pc, #48]	; 1054 <gen_trie+0xaf8>
    1020:	movw	r0, #0
    1024:	movt	r0, #0
    1028:	movw	r2, #975	; 0x3cf
    102c:	bl	0 <__assert_fail>
    1030:	mov	r0, #0
    1034:	sub	r3, r9, #1
    1038:	str	r4, [sp]
    103c:	ldr	r2, [sp, #60]	; 0x3c
    1040:	str	r0, [sp, #4]
    1044:	ldr	r0, [sp, #72]	; 0x48
    1048:	ldr	r1, [sp, #76]	; 0x4c
    104c:	bl	12c <gen_prefix_trie>
    1050:	b	a40 <gen_trie+0x4e4>
    1054:	.word	0x00000010

00001058 <gen_local_scope_prototype>:
    1058:	str	r4, [sp, #-8]!
    105c:	mov	r4, r0
    1060:	mov	r0, r1
    1064:	str	lr, [sp, #4]
    1068:	sub	sp, sp, #208	; 0xd0
    106c:	add	r1, sp, #4
    1070:	bl	0 <__flatcc_fb_copy_scope>
    1074:	ldr	r2, [r4, #208]	; 0xd0
    1078:	add	r3, sp, #4
    107c:	mov	r0, r4
    1080:	movw	r1, #0
    1084:	movt	r1, #0
    1088:	ldr	r2, [r2, #160]	; 0xa0
    108c:	bl	0 <println>
    1090:	mov	r0, r4
    1094:	movw	r1, #0
    1098:	movt	r1, #0
    109c:	bl	0 <println>
    10a0:	add	sp, sp, #208	; 0xd0
    10a4:	ldr	r4, [sp]
    10a8:	add	sp, sp, #4
    10ac:	pop	{pc}		; (ldr pc, [sp], #4)

000010b0 <gen_union_parser>:
    10b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    10b4:	mov	r2, #220	; 0xdc
    10b8:	mov	r5, r0
    10bc:	strd	r6, [sp, #8]
    10c0:	mov	r4, r1
    10c4:	mov	r1, #0
    10c8:	strd	r8, [sp, #16]
    10cc:	str	sl, [sp, #24]
    10d0:	str	lr, [sp, #28]
    10d4:	sub	sp, sp, #448	; 0x1c0
    10d8:	add	r0, sp, #8
    10dc:	bl	0 <memset>
    10e0:	mov	r2, #220	; 0xdc
    10e4:	mov	r1, #0
    10e8:	add	r0, sp, #228	; 0xe4
    10ec:	bl	0 <memset>
    10f0:	add	r2, sp, #8
    10f4:	mov	r1, r4
    10f8:	ldr	r0, [r4, #12]
    10fc:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1100:	add	r2, sp, #8
    1104:	mov	r0, r5
    1108:	movw	r1, #0
    110c:	movt	r1, #0
    1110:	bl	0 <println>
    1114:	mov	r0, r5
    1118:	movw	r1, #0
    111c:	movt	r1, #0
    1120:	bl	0 <println>
    1124:	ldr	r3, [r5, #220]	; 0xdc
    1128:	mov	r0, r5
    112c:	movw	r1, #0
    1130:	movt	r1, #0
    1134:	add	r3, r3, #1
    1138:	str	r3, [r5, #220]	; 0xdc
    113c:	bl	0 <println>
    1140:	mov	r0, r5
    1144:	movw	r1, #0
    1148:	movt	r1, #0
    114c:	bl	0 <println>
    1150:	mov	r0, r5
    1154:	movw	r1, #0
    1158:	movt	r1, #0
    115c:	bl	0 <println>
    1160:	mov	r0, r5
    1164:	movw	r1, #0
    1168:	movt	r1, #0
    116c:	bl	0 <println>
    1170:	ldr	r3, [r5, #220]	; 0xdc
    1174:	mov	r0, r5
    1178:	movw	r1, #0
    117c:	movt	r1, #0
    1180:	add	r3, r3, #1
    1184:	str	r3, [r5, #220]	; 0xdc
    1188:	bl	0 <println>
    118c:	ldr	r3, [r5, #220]	; 0xdc
    1190:	cmp	r3, #0
    1194:	beq	1590 <gen_union_parser+0x4e0>
    1198:	ldr	r4, [r4, #20]
    119c:	sub	r3, r3, #1
    11a0:	str	r3, [r5, #220]	; 0xdc
    11a4:	cmp	r4, #0
    11a8:	beq	1340 <gen_union_parser+0x290>
    11ac:	movw	r8, #0
    11b0:	movt	r8, #0
    11b4:	movw	r9, #0
    11b8:	movt	r9, #0
    11bc:	movw	r7, #0
    11c0:	movt	r7, #0
    11c4:	b	124c <gen_union_parser+0x19c>
    11c8:	ldr	r1, [r4, #16]
    11cc:	add	r2, sp, #228	; 0xe4
    11d0:	ldr	r0, [r1, #12]
    11d4:	bl	0 <__flatcc_fb_scoped_symbol_name>
    11d8:	mov	r3, sl
    11dc:	mov	r1, r8
    11e0:	ldr	r2, [r4, #48]	; 0x30
    11e4:	mov	r0, r5
    11e8:	str	r6, [sp]
    11ec:	bl	0 <println>
    11f0:	ldr	r2, [r4, #16]
    11f4:	ldr	r3, [r5, #220]	; 0xdc
    11f8:	ldrh	r2, [r2, #8]
    11fc:	add	r3, r3, #1
    1200:	str	r3, [r5, #220]	; 0xdc
    1204:	cmp	r2, #0
    1208:	bne	1320 <gen_union_parser+0x270>
    120c:	movw	r1, #0
    1210:	movt	r1, #0
    1214:	add	r2, sp, #228	; 0xe4
    1218:	mov	r0, r5
    121c:	bl	0 <println>
    1220:	mov	r1, r7
    1224:	mov	r0, r5
    1228:	bl	0 <println>
    122c:	ldr	r3, [r5, #220]	; 0xdc
    1230:	cmp	r3, #0
    1234:	beq	1520 <gen_union_parser+0x470>
    1238:	sub	r3, r3, #1
    123c:	str	r3, [r5, #220]	; 0xdc
    1240:	ldr	r4, [r4]
    1244:	cmp	r4, #0
    1248:	beq	1340 <gen_union_parser+0x290>
    124c:	ldrh	r2, [r4, #24]
    1250:	ldr	r3, [r4, #4]
    1254:	cmp	r2, #10
    1258:	ldm	r3, {r6, sl}
    125c:	beq	12bc <gen_union_parser+0x20c>
    1260:	cmp	r2, #14
    1264:	beq	11c8 <gen_union_parser+0x118>
    1268:	cmp	r2, #0
    126c:	beq	1240 <gen_union_parser+0x190>
    1270:	movw	r1, #0
    1274:	movt	r1, #0
    1278:	movw	r3, #0
    127c:	movt	r3, #0
    1280:	movw	r2, #0
    1284:	movt	r2, #0
    1288:	str	r1, [sp]
    128c:	movw	r1, #0
    1290:	movt	r1, #0
    1294:	ldr	r0, [r3]
    1298:	movw	r3, #1535	; 0x5ff
    129c:	bl	0 <fprintf>
    12a0:	movw	r1, #0
    12a4:	movt	r1, #0
    12a8:	ldr	r3, [pc, #820]	; 15e4 <gen_union_parser+0x534>
    12ac:	movw	r0, #0
    12b0:	movt	r0, #0
    12b4:	movw	r2, #1535	; 0x5ff
    12b8:	bl	0 <__assert_fail>
    12bc:	mov	r3, sl
    12c0:	mov	r1, r8
    12c4:	ldr	r2, [r4, #48]	; 0x30
    12c8:	mov	r0, r5
    12cc:	str	r6, [sp]
    12d0:	bl	0 <println>
    12d4:	ldr	r3, [r5, #220]	; 0xdc
    12d8:	mov	r1, r9
    12dc:	mov	r0, r5
    12e0:	add	r3, r3, #1
    12e4:	str	r3, [r5, #220]	; 0xdc
    12e8:	bl	0 <println>
    12ec:	mov	r1, r7
    12f0:	mov	r0, r5
    12f4:	bl	0 <println>
    12f8:	ldr	r3, [r5, #220]	; 0xdc
    12fc:	cmp	r3, #0
    1300:	bne	1238 <gen_union_parser+0x188>
    1304:	movw	r1, #0
    1308:	movt	r1, #0
    130c:	ldr	r3, [pc, #720]	; 15e4 <gen_union_parser+0x534>
    1310:	movw	r0, #0
    1314:	movt	r0, #0
    1318:	movw	r2, #1532	; 0x5fc
    131c:	bl	0 <__assert_fail>
    1320:	cmp	r2, #1
    1324:	bne	14d4 <gen_union_parser+0x424>
    1328:	movw	r1, #0
    132c:	movt	r1, #0
    1330:	add	r2, sp, #228	; 0xe4
    1334:	mov	r0, r5
    1338:	bl	0 <println>
    133c:	b	1220 <gen_union_parser+0x170>
    1340:	mov	r0, r5
    1344:	movw	r1, #0
    1348:	movt	r1, #0
    134c:	bl	0 <println>
    1350:	ldr	r3, [r5, #220]	; 0xdc
    1354:	mov	r0, r5
    1358:	movw	r1, #0
    135c:	movt	r1, #0
    1360:	add	r3, r3, #1
    1364:	str	r3, [r5, #220]	; 0xdc
    1368:	bl	0 <println>
    136c:	ldr	r3, [r5, #220]	; 0xdc
    1370:	movw	r1, #0
    1374:	movt	r1, #0
    1378:	mov	r0, r5
    137c:	add	r3, r3, #1
    1380:	str	r3, [r5, #220]	; 0xdc
    1384:	bl	0 <println>
    1388:	ldr	r3, [r5, #220]	; 0xdc
    138c:	cmp	r3, #0
    1390:	beq	1574 <gen_union_parser+0x4c4>
    1394:	sub	r3, r3, #1
    1398:	mov	r0, r5
    139c:	movw	r1, #0
    13a0:	movt	r1, #0
    13a4:	str	r3, [r5, #220]	; 0xdc
    13a8:	bl	0 <println>
    13ac:	ldr	r3, [r5, #220]	; 0xdc
    13b0:	movw	r1, #0
    13b4:	movt	r1, #0
    13b8:	mov	r0, r5
    13bc:	add	r3, r3, #1
    13c0:	str	r3, [r5, #220]	; 0xdc
    13c4:	bl	0 <println>
    13c8:	ldr	r3, [r5, #220]	; 0xdc
    13cc:	cmp	r3, #0
    13d0:	beq	1558 <gen_union_parser+0x4a8>
    13d4:	sub	r3, r3, #1
    13d8:	movw	r1, #0
    13dc:	movt	r1, #0
    13e0:	mov	r0, r5
    13e4:	str	r3, [r5, #220]	; 0xdc
    13e8:	bl	0 <println>
    13ec:	ldr	r3, [r5, #220]	; 0xdc
    13f0:	cmp	r3, #0
    13f4:	beq	153c <gen_union_parser+0x48c>
    13f8:	sub	r3, r3, #1
    13fc:	mov	r0, r5
    1400:	movw	r1, #0
    1404:	movt	r1, #0
    1408:	str	r3, [r5, #220]	; 0xdc
    140c:	bl	0 <println>
    1410:	mov	r0, r5
    1414:	movw	r1, #0
    1418:	movt	r1, #0
    141c:	bl	0 <println>
    1420:	mov	r0, r5
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	bl	0 <println>
    1430:	ldr	r3, [r5, #220]	; 0xdc
    1434:	movw	r1, #0
    1438:	movt	r1, #0
    143c:	mov	r0, r5
    1440:	add	r3, r3, #1
    1444:	str	r3, [r5, #220]	; 0xdc
    1448:	bl	0 <println>
    144c:	ldr	r3, [r5, #220]	; 0xdc
    1450:	cmp	r3, #0
    1454:	beq	15c8 <gen_union_parser+0x518>
    1458:	sub	r3, r3, #1
    145c:	mov	r0, r5
    1460:	movw	r1, #0
    1464:	movt	r1, #0
    1468:	str	r3, [r5, #220]	; 0xdc
    146c:	bl	0 <println>
    1470:	movw	r1, #0
    1474:	movt	r1, #0
    1478:	mov	r0, r5
    147c:	bl	0 <println>
    1480:	ldr	r3, [r5, #220]	; 0xdc
    1484:	cmp	r3, #0
    1488:	beq	15ac <gen_union_parser+0x4fc>
    148c:	sub	r3, r3, #1
    1490:	mov	r0, r5
    1494:	movw	r1, #0
    1498:	movt	r1, #0
    149c:	str	r3, [r5, #220]	; 0xdc
    14a0:	bl	0 <println>
    14a4:	mov	r0, r5
    14a8:	movw	r1, #0
    14ac:	movt	r1, #0
    14b0:	bl	0 <println>
    14b4:	mov	r0, #0
    14b8:	add	sp, sp, #448	; 0x1c0
    14bc:	ldrd	r4, [sp]
    14c0:	ldrd	r6, [sp, #8]
    14c4:	ldrd	r8, [sp, #16]
    14c8:	ldr	sl, [sp, #24]
    14cc:	add	sp, sp, #28
    14d0:	pop	{pc}		; (ldr pc, [sp], #4)
    14d4:	movw	r1, #0
    14d8:	movt	r1, #0
    14dc:	movw	r3, #0
    14e0:	movt	r3, #0
    14e4:	movw	r2, #0
    14e8:	movt	r2, #0
    14ec:	str	r1, [sp]
    14f0:	movw	r1, #0
    14f4:	movt	r1, #0
    14f8:	ldr	r0, [r3]
    14fc:	movw	r3, #1522	; 0x5f2
    1500:	bl	0 <fprintf>
    1504:	movw	r1, #0
    1508:	movt	r1, #0
    150c:	ldr	r3, [pc, #208]	; 15e4 <gen_union_parser+0x534>
    1510:	movw	r0, #0
    1514:	movt	r0, #0
    1518:	movw	r2, #1522	; 0x5f2
    151c:	bl	0 <__assert_fail>
    1520:	movw	r1, #0
    1524:	movt	r1, #0
    1528:	ldr	r3, [pc, #180]	; 15e4 <gen_union_parser+0x534>
    152c:	movw	r0, #0
    1530:	movt	r0, #0
    1534:	movw	r2, #1526	; 0x5f6
    1538:	bl	0 <__assert_fail>
    153c:	movw	r1, #0
    1540:	movt	r1, #0
    1544:	ldr	r3, [pc, #152]	; 15e4 <gen_union_parser+0x534>
    1548:	movw	r0, #0
    154c:	movt	r0, #0
    1550:	movw	r2, #1546	; 0x60a
    1554:	bl	0 <__assert_fail>
    1558:	movw	r1, #0
    155c:	movt	r1, #0
    1560:	ldr	r3, [pc, #124]	; 15e4 <gen_union_parser+0x534>
    1564:	movw	r0, #0
    1568:	movt	r0, #0
    156c:	movw	r2, #1545	; 0x609
    1570:	bl	0 <__assert_fail>
    1574:	movw	r1, #0
    1578:	movt	r1, #0
    157c:	ldr	r3, [pc, #96]	; 15e4 <gen_union_parser+0x534>
    1580:	movw	r0, #0
    1584:	movt	r0, #0
    1588:	movw	r2, #1543	; 0x607
    158c:	bl	0 <__assert_fail>
    1590:	movw	r1, #0
    1594:	movt	r1, #0
    1598:	ldr	r3, [pc, #68]	; 15e4 <gen_union_parser+0x534>
    159c:	movw	r0, #0
    15a0:	movt	r0, #0
    15a4:	movw	r2, #1503	; 0x5df
    15a8:	bl	0 <__assert_fail>
    15ac:	movw	r1, #0
    15b0:	movt	r1, #0
    15b4:	ldr	r3, [pc, #40]	; 15e4 <gen_union_parser+0x534>
    15b8:	movw	r0, #0
    15bc:	movt	r0, #0
    15c0:	mov	r2, #1552	; 0x610
    15c4:	bl	0 <__assert_fail>
    15c8:	movw	r1, #0
    15cc:	movt	r1, #0
    15d0:	ldr	r3, [pc, #12]	; 15e4 <gen_union_parser+0x534>
    15d4:	movw	r0, #0
    15d8:	movt	r0, #0
    15dc:	movw	r2, #1550	; 0x60e
    15e0:	bl	0 <__assert_fail>
    15e4:	.word	0x0000001c

000015e8 <gen_union_accept_type>:
    15e8:	strd	r4, [sp, #-20]!	; 0xffffffec
    15ec:	mov	r2, #220	; 0xdc
    15f0:	mov	r5, r0
    15f4:	strd	r6, [sp, #8]
    15f8:	mov	r4, r1
    15fc:	mov	r1, #0
    1600:	str	lr, [sp, #16]
    1604:	sub	sp, sp, #452	; 0x1c4
    1608:	add	r0, sp, #8
    160c:	bl	0 <memset>
    1610:	mov	r2, #220	; 0xdc
    1614:	mov	r1, #0
    1618:	add	r0, sp, #228	; 0xe4
    161c:	bl	0 <memset>
    1620:	mov	r1, r4
    1624:	add	r2, sp, #8
    1628:	ldr	r0, [r4, #12]
    162c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1630:	add	r2, sp, #8
    1634:	mov	r0, r5
    1638:	movw	r1, #0
    163c:	movt	r1, #0
    1640:	bl	0 <println>
    1644:	mov	r0, r5
    1648:	movw	r1, #0
    164c:	movt	r1, #0
    1650:	bl	0 <println>
    1654:	ldr	r3, [r5, #220]	; 0xdc
    1658:	mov	r0, r5
    165c:	movw	r1, #0
    1660:	movt	r1, #0
    1664:	add	r3, r3, #1
    1668:	str	r3, [r5, #220]	; 0xdc
    166c:	bl	0 <println>
    1670:	ldr	r4, [r4, #20]
    1674:	cmp	r4, #0
    1678:	beq	16e0 <gen_union_accept_type+0xf8>
    167c:	movw	r6, #0
    1680:	movt	r6, #0
    1684:	movw	r7, #0
    1688:	movt	r7, #0
    168c:	b	16bc <gen_union_accept_type+0xd4>
    1690:	ldr	r3, [r4, #4]
    1694:	mov	r1, r6
    1698:	mov	r0, r5
    169c:	ldr	r2, [r4, #48]	; 0x30
    16a0:	ldr	ip, [r3]
    16a4:	ldr	r3, [r3, #4]
    16a8:	str	ip, [sp]
    16ac:	bl	0 <println>
    16b0:	ldr	r4, [r4]
    16b4:	cmp	r4, #0
    16b8:	beq	16e0 <gen_union_accept_type+0xf8>
    16bc:	ldrh	r3, [r4, #24]
    16c0:	cmp	r3, #0
    16c4:	bne	1690 <gen_union_accept_type+0xa8>
    16c8:	mov	r1, r7
    16cc:	mov	r0, r5
    16d0:	bl	0 <println>
    16d4:	ldr	r4, [r4]
    16d8:	cmp	r4, #0
    16dc:	bne	16bc <gen_union_accept_type+0xd4>
    16e0:	movw	r1, #0
    16e4:	movt	r1, #0
    16e8:	mov	r0, r5
    16ec:	bl	0 <println>
    16f0:	ldr	r3, [r5, #220]	; 0xdc
    16f4:	add	r2, r3, #1
    16f8:	cmp	r2, #0
    16fc:	str	r2, [r5, #220]	; 0xdc
    1700:	beq	1764 <gen_union_accept_type+0x17c>
    1704:	movw	r1, #0
    1708:	movt	r1, #0
    170c:	str	r3, [r5, #220]	; 0xdc
    1710:	mov	r0, r5
    1714:	bl	0 <println>
    1718:	ldr	r3, [r5, #220]	; 0xdc
    171c:	cmp	r3, #0
    1720:	beq	1780 <gen_union_accept_type+0x198>
    1724:	sub	r3, r3, #1
    1728:	mov	r0, r5
    172c:	movw	r1, #0
    1730:	movt	r1, #0
    1734:	str	r3, [r5, #220]	; 0xdc
    1738:	bl	0 <println>
    173c:	mov	r0, r5
    1740:	movw	r1, #0
    1744:	movt	r1, #0
    1748:	bl	0 <println>
    174c:	mov	r0, #0
    1750:	add	sp, sp, #452	; 0x1c4
    1754:	ldrd	r4, [sp]
    1758:	ldrd	r6, [sp, #8]
    175c:	add	sp, sp, #16
    1760:	pop	{pc}		; (ldr pc, [sp], #4)
    1764:	movw	r1, #0
    1768:	movt	r1, #0
    176c:	ldr	r3, [pc, #40]	; 179c <gen_union_accept_type+0x1b4>
    1770:	movw	r0, #0
    1774:	movt	r0, #0
    1778:	movw	r2, #1582	; 0x62e
    177c:	bl	0 <__assert_fail>
    1780:	movw	r1, #0
    1784:	movt	r1, #0
    1788:	ldr	r3, [pc, #12]	; 179c <gen_union_accept_type+0x1b4>
    178c:	movw	r0, #0
    1790:	movt	r0, #0
    1794:	movw	r2, #1583	; 0x62f
    1798:	bl	0 <__assert_fail>
    179c:	.word	0x00000030

000017a0 <install_symbols>:
    17a0:	add	r3, r1, #4
    17a4:	mov	r2, r0
    17a8:	movw	r1, #0
    17ac:	movt	r1, #0
    17b0:	mov	r0, r3
    17b4:	b	0 <fb_symbol_table_visit>

000017b8 <count_symbols>:
    17b8:	add	r3, r1, #4
    17bc:	mov	r2, r0
    17c0:	movw	r1, #0
    17c4:	movt	r1, #0
    17c8:	mov	r0, r3
    17cc:	b	0 <fb_symbol_table_visit>

000017d0 <sort_entries>:
    17d0:	movw	r3, #0
    17d4:	movt	r3, #0
    17d8:	strd	r4, [sp, #-16]!
    17dc:	mov	r2, #8
    17e0:	mov	r4, r1
    17e4:	str	r6, [sp, #8]
    17e8:	mov	r5, r0
    17ec:	str	lr, [sp, #12]
    17f0:	bl	0 <qsort>
    17f4:	cmp	r4, #0
    17f8:	ble	1814 <sort_entries+0x44>
    17fc:	mov	r3, #0
    1800:	ldr	r2, [r5, r3, lsl #3]
    1804:	str	r3, [r2, #124]	; 0x7c
    1808:	add	r3, r3, #1
    180c:	cmp	r4, r3
    1810:	bne	1800 <sort_entries+0x30>
    1814:	ldrd	r4, [sp]
    1818:	ldr	r6, [sp, #8]
    181c:	add	sp, sp, #12
    1820:	pop	{pc}		; (ldr pc, [sp], #4)

00001824 <dict_cmp>:
    1824:	strd	r4, [sp, #-16]!
    1828:	ldm	r0, {r0, r5}
    182c:	ldm	r1, {r1, r4}
    1830:	str	r6, [sp, #8]
    1834:	str	lr, [sp, #12]
    1838:	cmp	r5, r4
    183c:	movlt	r2, r5
    1840:	movge	r2, r4
    1844:	bl	0 <memcmp>
    1848:	cmp	r0, #0
    184c:	ldr	r6, [sp, #8]
    1850:	subeq	r0, r5, r4
    1854:	ldrd	r4, [sp]
    1858:	add	sp, sp, #12
    185c:	pop	{pc}		; (ldr pc, [sp], #4)

00001860 <gen_local_scope_parser>:
    1860:	strd	r4, [sp, #-20]!	; 0xffffffec
    1864:	mov	r5, #0
    1868:	mov	r3, r1
    186c:	strd	r6, [sp, #8]
    1870:	mov	r4, r0
    1874:	mov	r0, r1
    1878:	str	lr, [sp, #16]
    187c:	sub	sp, sp, #260	; 0x104
    1880:	add	r7, r3, #4
    1884:	add	r1, sp, #52	; 0x34
    1888:	str	r5, [sp, #24]
    188c:	str	r5, [sp, #28]
    1890:	str	r5, [sp, #32]
    1894:	str	r5, [sp, #36]	; 0x24
    1898:	str	r5, [sp, #40]	; 0x28
    189c:	str	r5, [sp, #44]	; 0x2c
    18a0:	str	r5, [sp, #48]	; 0x30
    18a4:	bl	0 <__flatcc_fb_copy_scope>
    18a8:	ldr	r3, [r4, #208]	; 0xd0
    18ac:	mov	r0, r7
    18b0:	add	r2, sp, #12
    18b4:	movw	r1, #0
    18b8:	movt	r1, #0
    18bc:	str	r5, [sp, #12]
    18c0:	str	r3, [sp, #16]
    18c4:	str	r5, [sp, #20]
    18c8:	bl	0 <fb_symbol_table_visit>
    18cc:	ldr	r5, [sp, #12]
    18d0:	cmp	r5, #0
    18d4:	streq	r5, [sp, #24]
    18d8:	beq	1920 <gen_local_scope_parser+0xc0>
    18dc:	lsl	r0, r5, #4
    18e0:	bl	0 <malloc>
    18e4:	subs	r6, r0, #0
    18e8:	beq	1adc <gen_local_scope_parser+0x27c>
    18ec:	add	r2, sp, #12
    18f0:	mov	r0, r7
    18f4:	str	r6, [sp, #20]
    18f8:	movw	r1, #0
    18fc:	movt	r1, #0
    1900:	bl	0 <fb_symbol_table_visit>
    1904:	movw	r3, #0
    1908:	movt	r3, #0
    190c:	ldr	r1, [sp, #12]
    1910:	mov	r2, #16
    1914:	mov	r0, r6
    1918:	bl	0 <qsort>
    191c:	str	r6, [sp, #24]
    1920:	ldr	lr, [r4, #208]	; 0xd0
    1924:	movw	r3, #0
    1928:	movt	r3, #0
    192c:	movw	r2, #0
    1930:	movt	r2, #0
    1934:	mov	ip, #3
    1938:	mov	r6, #0
    193c:	str	r3, [sp, #28]
    1940:	mov	r0, r4
    1944:	add	r3, sp, #52	; 0x34
    1948:	str	r2, [sp, #32]
    194c:	movw	r1, #0
    1950:	movt	r1, #0
    1954:	str	r6, [sp, #36]	; 0x24
    1958:	ldr	r2, [lr, #160]	; 0xa0
    195c:	str	ip, [sp, #40]	; 0x28
    1960:	bl	0 <println>
    1964:	ldr	r3, [r4, #220]	; 0xdc
    1968:	movw	r1, #0
    196c:	movt	r1, #0
    1970:	mov	r0, r4
    1974:	add	r3, r3, #2
    1978:	str	r3, [r4, #220]	; 0xdc
    197c:	bl	0 <println>
    1980:	ldr	r3, [r4, #220]	; 0xdc
    1984:	cmp	r3, r6
    1988:	beq	1b34 <gen_local_scope_parser+0x2d4>
    198c:	cmp	r3, #1
    1990:	streq	r6, [r4, #220]	; 0xdc
    1994:	beq	1b34 <gen_local_scope_parser+0x2d4>
    1998:	sub	r3, r3, #2
    199c:	movw	r1, #0
    19a0:	movt	r1, #0
    19a4:	mov	r0, r4
    19a8:	str	r3, [r4, #220]	; 0xdc
    19ac:	bl	0 <println>
    19b0:	ldr	r3, [r4, #220]	; 0xdc
    19b4:	cmp	r5, #0
    19b8:	add	r3, r3, #1
    19bc:	str	r3, [r4, #220]	; 0xdc
    19c0:	beq	1a94 <gen_local_scope_parser+0x234>
    19c4:	mov	r0, r4
    19c8:	movw	r1, #0
    19cc:	movt	r1, #0
    19d0:	bl	0 <println>
    19d4:	mov	r0, r4
    19d8:	movw	r1, #0
    19dc:	movt	r1, #0
    19e0:	bl	0 <println>
    19e4:	mov	r0, r4
    19e8:	movw	r1, #0
    19ec:	movt	r1, #0
    19f0:	bl	0 <println>
    19f4:	mov	r0, r4
    19f8:	movw	r1, #0
    19fc:	movt	r1, #0
    1a00:	bl	0 <println>
    1a04:	mov	r0, r4
    1a08:	movw	r1, #0
    1a0c:	movt	r1, #0
    1a10:	bl	0 <println>
    1a14:	sub	r3, r5, #1
    1a18:	mov	r2, r6
    1a1c:	str	r6, [sp]
    1a20:	add	r1, sp, #24
    1a24:	mov	r0, r4
    1a28:	bl	55c <gen_trie>
    1a2c:	movw	r1, #0
    1a30:	movt	r1, #0
    1a34:	mov	r0, r4
    1a38:	bl	0 <println>
    1a3c:	ldr	r3, [r4, #220]	; 0xdc
    1a40:	cmp	r3, #0
    1a44:	beq	1b50 <gen_local_scope_parser+0x2f0>
    1a48:	sub	r3, r3, #1
    1a4c:	mov	r0, r4
    1a50:	movw	r1, #0
    1a54:	movt	r1, #0
    1a58:	str	r3, [r4, #220]	; 0xdc
    1a5c:	bl	0 <println>
    1a60:	mov	r0, r4
    1a64:	movw	r1, #0
    1a68:	movt	r1, #0
    1a6c:	bl	0 <println>
    1a70:	ldr	r0, [sp, #24]
    1a74:	cmp	r0, #0
    1a78:	beq	1a80 <gen_local_scope_parser+0x220>
    1a7c:	bl	0 <free>
    1a80:	add	sp, sp, #260	; 0x104
    1a84:	ldrd	r4, [sp]
    1a88:	ldrd	r6, [sp, #8]
    1a8c:	add	sp, sp, #16
    1a90:	pop	{pc}		; (ldr pc, [sp], #4)
    1a94:	mov	r0, r4
    1a98:	movw	r1, #0
    1a9c:	movt	r1, #0
    1aa0:	bl	0 <println>
    1aa4:	movw	r1, #0
    1aa8:	movt	r1, #0
    1aac:	mov	r0, r4
    1ab0:	bl	0 <println>
    1ab4:	ldr	r3, [r4, #220]	; 0xdc
    1ab8:	cmp	r3, #0
    1abc:	bne	1a48 <gen_local_scope_parser+0x1e8>
    1ac0:	movw	r1, #0
    1ac4:	movt	r1, #0
    1ac8:	ldr	r3, [pc, #156]	; 1b6c <gen_local_scope_parser+0x30c>
    1acc:	movw	r0, #0
    1ad0:	movt	r0, #0
    1ad4:	movw	r2, #1157	; 0x485
    1ad8:	bl	0 <__assert_fail>
    1adc:	cmp	r5, #0
    1ae0:	str	r6, [sp, #24]
    1ae4:	ble	1920 <gen_local_scope_parser+0xc0>
    1ae8:	movw	r1, #0
    1aec:	movt	r1, #0
    1af0:	movw	r3, #0
    1af4:	movt	r3, #0
    1af8:	movw	r2, #0
    1afc:	movt	r2, #0
    1b00:	str	r1, [sp]
    1b04:	movw	r1, #0
    1b08:	movt	r1, #0
    1b0c:	ldr	r0, [r3]
    1b10:	movw	r3, #1140	; 0x474
    1b14:	bl	0 <fprintf>
    1b18:	movw	r1, #0
    1b1c:	movt	r1, #0
    1b20:	ldr	r3, [pc, #68]	; 1b6c <gen_local_scope_parser+0x30c>
    1b24:	movw	r0, #0
    1b28:	movt	r0, #0
    1b2c:	movw	r2, #1140	; 0x474
    1b30:	bl	0 <__assert_fail>
    1b34:	movw	r1, #0
    1b38:	movt	r1, #0
    1b3c:	ldr	r3, [pc, #40]	; 1b6c <gen_local_scope_parser+0x30c>
    1b40:	movw	r0, #0
    1b44:	movt	r0, #0
    1b48:	mov	r2, #1152	; 0x480
    1b4c:	bl	0 <__assert_fail>
    1b50:	movw	r1, #0
    1b54:	movt	r1, #0
    1b58:	ldr	r3, [pc, #12]	; 1b6c <gen_local_scope_parser+0x30c>
    1b5c:	movw	r0, #0
    1b60:	movt	r0, #0
    1b64:	movw	r2, #1166	; 0x48e
    1b68:	bl	0 <__assert_fail>
    1b6c:	.word	0x00000048

00001b70 <clear_catalog>:
    1b70:	str	r4, [sp, #-8]!
    1b74:	mov	r4, r0
    1b78:	ldr	r0, [r0, #16]
    1b7c:	str	lr, [sp, #4]
    1b80:	cmp	r0, #0
    1b84:	beq	1b8c <clear_catalog+0x1c>
    1b88:	bl	0 <free>
    1b8c:	ldr	r0, [r4, #20]
    1b90:	cmp	r0, #0
    1b94:	beq	1b9c <clear_catalog+0x2c>
    1b98:	bl	0 <free>
    1b9c:	ldr	r0, [r4, #24]
    1ba0:	cmp	r0, #0
    1ba4:	beq	1bac <clear_catalog+0x3c>
    1ba8:	bl	0 <free>
    1bac:	mov	r3, #0
    1bb0:	str	r3, [r4]
    1bb4:	str	r3, [r4, #4]
    1bb8:	str	r3, [r4, #8]
    1bbc:	str	r3, [r4, #12]
    1bc0:	str	r3, [r4, #16]
    1bc4:	str	r3, [r4, #20]
    1bc8:	str	r3, [r4, #24]
    1bcc:	str	r3, [r4, #28]
    1bd0:	str	r3, [r4, #32]
    1bd4:	str	r3, [r4, #36]	; 0x24
    1bd8:	str	r3, [r4, #40]	; 0x28
    1bdc:	ldr	r4, [sp]
    1be0:	add	sp, sp, #4
    1be4:	pop	{pc}		; (ldr pc, [sp], #4)

00001be8 <compare_entries>:
    1be8:	ldr	r0, [r0, #4]
    1bec:	ldr	r1, [r1, #4]
    1bf0:	b	0 <strcmp>

00001bf4 <gen_enum_match>:
    1bf4:	strd	r4, [sp, #-16]!
    1bf8:	mov	r4, r0
    1bfc:	mov	r5, r1
    1c00:	str	r6, [sp, #8]
    1c04:	movw	r1, #0
    1c08:	movt	r1, #0
    1c0c:	str	lr, [sp, #12]
    1c10:	sub	sp, sp, #8
    1c14:	mov	r6, r2
    1c18:	ldr	r2, [sp, #24]
    1c1c:	bl	0 <println>
    1c20:	mov	r0, r4
    1c24:	movw	r1, #0
    1c28:	movt	r1, #0
    1c2c:	bl	0 <println>
    1c30:	ldr	r2, [r4, #220]	; 0xdc
    1c34:	ldr	r3, [r5, #40]	; 0x28
    1c38:	add	r2, r2, #1
    1c3c:	sub	r3, r3, #1
    1c40:	str	r2, [r4, #220]	; 0xdc
    1c44:	cmp	r3, #8
    1c48:	ldrls	pc, [pc, r3, lsl #2]
    1c4c:	b	1d10 <gen_enum_match+0x11c>
    1c50:	.word	0x00001cdc
    1c54:	.word	0x00001cdc
    1c58:	.word	0x00001cdc
    1c5c:	.word	0x00001cdc
    1c60:	.word	0x00001cdc
    1c64:	.word	0x00001c74
    1c68:	.word	0x00001c74
    1c6c:	.word	0x00001c74
    1c70:	.word	0x00001c74
    1c74:	ldrd	r2, [r6, #48]	; 0x30
    1c78:	mov	r0, r4
    1c7c:	cmp	r2, #0
    1c80:	sbcs	r1, r3, #0
    1c84:	movwlt	r1, #0
    1c88:	movwge	r1, #0
    1c8c:	movtlt	r1, #0
    1c90:	movtge	r1, #0
    1c94:	bl	0 <println>
    1c98:	ldr	r3, [r4, #220]	; 0xdc
    1c9c:	cmp	r3, #0
    1ca0:	beq	1cf4 <gen_enum_match+0x100>
    1ca4:	sub	r3, r3, #1
    1ca8:	mov	r0, r4
    1cac:	movw	r1, #0
    1cb0:	movt	r1, #0
    1cb4:	str	r3, [r4, #220]	; 0xdc
    1cb8:	bl	0 <println>
    1cbc:	ldr	r3, [r4, #220]	; 0xdc
    1cc0:	add	r3, r3, #1
    1cc4:	str	r3, [r4, #220]	; 0xdc
    1cc8:	add	sp, sp, #8
    1ccc:	ldrd	r4, [sp]
    1cd0:	ldr	r6, [sp, #8]
    1cd4:	add	sp, sp, #12
    1cd8:	pop	{pc}		; (ldr pc, [sp], #4)
    1cdc:	movw	r1, #0
    1ce0:	movt	r1, #0
    1ce4:	ldrd	r2, [r6, #48]	; 0x30
    1ce8:	mov	r0, r4
    1cec:	bl	0 <println>
    1cf0:	b	1c98 <gen_enum_match+0xa4>
    1cf4:	movw	r1, #0
    1cf8:	movt	r1, #0
    1cfc:	ldr	r3, [pc, #88]	; 1d5c <gen_enum_match+0x168>
    1d00:	movw	r0, #0
    1d04:	movt	r0, #0
    1d08:	movw	r2, #719	; 0x2cf
    1d0c:	bl	0 <__assert_fail>
    1d10:	movw	r1, #0
    1d14:	movt	r1, #0
    1d18:	movw	r3, #0
    1d1c:	movt	r3, #0
    1d20:	movw	r2, #0
    1d24:	movt	r2, #0
    1d28:	str	r1, [sp]
    1d2c:	movw	r1, #0
    1d30:	movt	r1, #0
    1d34:	ldr	r0, [r3]
    1d38:	movw	r3, #710	; 0x2c6
    1d3c:	bl	0 <fprintf>
    1d40:	movw	r1, #0
    1d44:	movt	r1, #0
    1d48:	ldr	r3, [pc, #16]	; 1d60 <gen_enum_match+0x16c>
    1d4c:	movw	r0, #0
    1d50:	movt	r0, #0
    1d54:	movw	r2, #710	; 0x2c6
    1d58:	bl	0 <__assert_fail>
    1d5c:	.word	0x00000078
    1d60:	.word	0x00000060

00001d64 <gen_scope_match>:
    1d64:	strd	r4, [sp, #-12]!
    1d68:	movw	r1, #0
    1d6c:	movt	r1, #0
    1d70:	str	lr, [sp, #8]
    1d74:	sub	sp, sp, #228	; 0xe4
    1d78:	mov	r4, r0
    1d7c:	mov	r5, r2
    1d80:	ldr	r2, [sp, #240]	; 0xf0
    1d84:	bl	0 <println>
    1d88:	mov	r0, r4
    1d8c:	movw	r1, #0
    1d90:	movt	r1, #0
    1d94:	bl	0 <println>
    1d98:	ldrh	r2, [r5, #8]
    1d9c:	ldr	r3, [r4, #220]	; 0xdc
    1da0:	sub	r2, r2, #3
    1da4:	cmp	r2, #1
    1da8:	add	r3, r3, #1
    1dac:	str	r3, [r4, #220]	; 0xdc
    1db0:	bhi	1e28 <gen_scope_match+0xc4>
    1db4:	mov	r2, #220	; 0xdc
    1db8:	mov	r1, #0
    1dbc:	add	r0, sp, #4
    1dc0:	bl	0 <memset>
    1dc4:	add	r2, sp, #4
    1dc8:	mov	r1, r5
    1dcc:	ldr	r0, [r5, #12]
    1dd0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1dd4:	add	r2, sp, #4
    1dd8:	movw	r1, #0
    1ddc:	movt	r1, #0
    1de0:	mov	r0, r4
    1de4:	bl	0 <println>
    1de8:	ldr	r3, [r4, #220]	; 0xdc
    1dec:	cmp	r3, #0
    1df0:	beq	1e44 <gen_scope_match+0xe0>
    1df4:	sub	r3, r3, #1
    1df8:	mov	r0, r4
    1dfc:	movw	r1, #0
    1e00:	movt	r1, #0
    1e04:	str	r3, [r4, #220]	; 0xdc
    1e08:	bl	0 <println>
    1e0c:	ldr	r3, [r4, #220]	; 0xdc
    1e10:	add	r3, r3, #1
    1e14:	str	r3, [r4, #220]	; 0xdc
    1e18:	add	sp, sp, #228	; 0xe4
    1e1c:	ldrd	r4, [sp]
    1e20:	add	sp, sp, #8
    1e24:	pop	{pc}		; (ldr pc, [sp], #4)
    1e28:	movw	r1, #0
    1e2c:	movt	r1, #0
    1e30:	ldr	r3, [pc, #40]	; 1e60 <gen_scope_match+0xfc>
    1e34:	movw	r0, #0
    1e38:	movt	r0, #0
    1e3c:	movw	r2, #729	; 0x2d9
    1e40:	bl	0 <__assert_fail>
    1e44:	movw	r1, #0
    1e48:	movt	r1, #0
    1e4c:	ldr	r3, [pc, #16]	; 1e64 <gen_scope_match+0x100>
    1e50:	movw	r0, #0
    1e54:	movt	r0, #0
    1e58:	movw	r2, #742	; 0x2e6
    1e5c:	bl	0 <__assert_fail>
    1e60:	.word	0x00000088
    1e64:	.word	0x000000a0

00001e68 <gen_field_match_handler.isra.12>:
    1e68:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1e6c:	mov	r5, r1
    1e70:	mov	r4, r0
    1e74:	strd	r6, [sp, #8]
    1e78:	mov	r1, #0
    1e7c:	mov	r6, r2
    1e80:	strd	r8, [sp, #16]
    1e84:	mov	r2, #220	; 0xdc
    1e88:	mov	r7, r3
    1e8c:	strd	sl, [sp, #24]
    1e90:	str	lr, [sp, #32]
    1e94:	sub	sp, sp, #516	; 0x204
    1e98:	add	r0, sp, #292	; 0x124
    1e9c:	bl	0 <memset>
    1ea0:	add	r1, sp, #88	; 0x58
    1ea4:	ldr	r0, [r6]
    1ea8:	bl	0 <__flatcc_fb_copy_scope>
    1eac:	ldrh	r3, [r5]
    1eb0:	sub	r2, r3, #1
    1eb4:	str	r3, [sp, #28]
    1eb8:	ldrh	r3, [r7, #24]
    1ebc:	clz	r2, r2
    1ec0:	lsr	r2, r2, #5
    1ec4:	str	r2, [sp, #68]	; 0x44
    1ec8:	cmp	r3, #9
    1ecc:	beq	1f14 <gen_field_match_handler.isra.12+0xac>
    1ed0:	cmp	r3, #15
    1ed4:	beq	1f14 <gen_field_match_handler.isra.12+0xac>
    1ed8:	cmp	r3, #7
    1edc:	beq	1f14 <gen_field_match_handler.isra.12+0xac>
    1ee0:	sub	r3, r3, #7
    1ee4:	cmp	r3, #8
    1ee8:	ldrls	pc, [pc, r3, lsl #2]
    1eec:	b	2b08 <gen_field_match_handler.isra.12+0xca0>
    1ef0:	.word	0x0000245c
    1ef4:	.word	0x00002c64
    1ef8:	.word	0x00002b08
    1efc:	.word	0x000024e8
    1f00:	.word	0x00002b08
    1f04:	.word	0x00002b08
    1f08:	.word	0x00002b08
    1f0c:	.word	0x00001f94
    1f10:	.word	0x00001f94
    1f14:	sub	r3, r3, #7
    1f18:	cmp	r3, #8
    1f1c:	ldrls	pc, [pc, r3, lsl #2]
    1f20:	b	2b24 <gen_field_match_handler.isra.12+0xcbc>
    1f24:	.word	0x0000251c
    1f28:	.word	0x00001f48
    1f2c:	.word	0x00002524
    1f30:	.word	0x00002524
    1f34:	.word	0x00002b24
    1f38:	.word	0x00002b24
    1f3c:	.word	0x00002b24
    1f40:	.word	0x00002510
    1f44:	.word	0x00002510
    1f48:	ldr	r3, [r7, #16]
    1f4c:	mov	r5, #1
    1f50:	mov	fp, #0
    1f54:	mov	r9, r3
    1f58:	mov	r8, r5
    1f5c:	mov	r6, #1
    1f60:	ldr	r3, [sp, #552]	; 0x228
    1f64:	cmp	r3, #0
    1f68:	movne	sl, #0
    1f6c:	strne	sl, [sp, #36]	; 0x24
    1f70:	strne	sl, [sp, #52]	; 0x34
    1f74:	strne	sl, [sp, #64]	; 0x40
    1f78:	bne	2024 <gen_field_match_handler.isra.12+0x1bc>
    1f7c:	mov	sl, r3
    1f80:	str	r3, [sp, #36]	; 0x24
    1f84:	str	r3, [sp, #52]	; 0x34
    1f88:	str	r3, [sp, #64]	; 0x40
    1f8c:	str	r3, [sp, #84]	; 0x54
    1f90:	b	203c <gen_field_match_handler.isra.12+0x1d4>
    1f94:	mov	r8, #0
    1f98:	mov	r5, r8
    1f9c:	ldr	r1, [r7, #16]
    1fa0:	add	r2, sp, #292	; 0x124
    1fa4:	ldr	r0, [r1, #12]
    1fa8:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1fac:	ldr	r2, [r7, #16]
    1fb0:	ldrh	r3, [r2, #8]
    1fb4:	sub	r1, r3, #3
    1fb8:	sub	r9, r3, #4
    1fbc:	clz	r1, r1
    1fc0:	clz	r9, r9
    1fc4:	lsr	r1, r1, #5
    1fc8:	sub	sl, r3, #1
    1fcc:	lsr	r9, r9, #5
    1fd0:	clz	sl, sl
    1fd4:	lsr	sl, sl, #5
    1fd8:	str	r1, [sp, #64]	; 0x40
    1fdc:	ldr	r1, [sp, #552]	; 0x228
    1fe0:	cmp	r1, #0
    1fe4:	clz	r1, r3
    1fe8:	lsr	r1, r1, #5
    1fec:	movne	r9, #0
    1ff0:	cmp	r9, #0
    1ff4:	str	r1, [sp, #36]	; 0x24
    1ff8:	bne	2a04 <gen_field_match_handler.isra.12+0xb9c>
    1ffc:	cmp	r3, #3
    2000:	beq	2af0 <gen_field_match_handler.isra.12+0xc88>
    2004:	mov	r6, r9
    2008:	str	r9, [sp, #52]	; 0x34
    200c:	str	r9, [sp, #64]	; 0x40
    2010:	ldr	r3, [sp, #552]	; 0x228
    2014:	cmp	r3, #0
    2018:	streq	r3, [sp, #76]	; 0x4c
    201c:	beq	2a18 <gen_field_match_handler.isra.12+0xbb0>
    2020:	mov	fp, #0
    2024:	cmp	r8, #0
    2028:	movne	r3, #1
    202c:	movne	r6, #0
    2030:	movne	r5, r6
    2034:	strne	r3, [sp, #84]	; 0x54
    2038:	beq	2c84 <gen_field_match_handler.isra.12+0xe1c>
    203c:	cmp	fp, #1
    2040:	beq	2ab4 <gen_field_match_handler.isra.12+0xc4c>
    2044:	str	fp, [sp, #56]	; 0x38
    2048:	str	fp, [sp, #60]	; 0x3c
    204c:	str	fp, [sp, #72]	; 0x48
    2050:	str	fp, [sp, #76]	; 0x4c
    2054:	str	fp, [sp, #80]	; 0x50
    2058:	movw	r3, #0
    205c:	movt	r3, #0
    2060:	sub	r1, r9, #1
    2064:	mov	r8, r3
    2068:	add	r2, r3, r1, lsl #2
    206c:	movw	r3, #0
    2070:	movt	r3, #0
    2074:	cmp	fp, #2
    2078:	str	r3, [sp, #24]
    207c:	movw	r3, #0
    2080:	movt	r3, #0
    2084:	str	r3, [sp, #44]	; 0x2c
    2088:	movw	r3, #0
    208c:	movt	r3, #0
    2090:	str	r3, [sp, #32]
    2094:	beq	2300 <gen_field_match_handler.isra.12+0x498>
    2098:	ldr	r0, [sp, #552]	; 0x228
    209c:	orr	r3, r6, sl
    20a0:	cmp	r6, #0
    20a4:	orr	r3, r3, r0
    20a8:	str	r3, [sp, #20]
    20ac:	beq	254c <gen_field_match_handler.isra.12+0x6e4>
    20b0:	cmp	r1, #10
    20b4:	bhi	2b54 <gen_field_match_handler.isra.12+0xcec>
    20b8:	ldr	r3, [r2, #200]	; 0xc8
    20bc:	cmp	r9, #5
    20c0:	str	r3, [sp, #24]
    20c4:	bne	2774 <gen_field_match_handler.isra.12+0x90c>
    20c8:	movw	r3, #0
    20cc:	movt	r3, #0
    20d0:	str	r3, [sp, #40]	; 0x28
    20d4:	cmp	r5, #0
    20d8:	beq	2150 <gen_field_match_handler.isra.12+0x2e8>
    20dc:	ldrd	r2, [r7, #88]	; 0x58
    20e0:	ldrsh	r1, [r7, #74]	; 0x4a
    20e4:	mov	r9, r3
    20e8:	orrs	r3, r2, r3
    20ec:	mov	r8, r2
    20f0:	str	r1, [sp, #48]	; 0x30
    20f4:	bne	2854 <gen_field_match_handler.isra.12+0x9ec>
    20f8:	ldr	r1, [sp, #48]	; 0x30
    20fc:	mov	r2, r8
    2100:	mov	r3, r9
    2104:	mvn	r8, #0
    2108:	mov	r9, #0
    210c:	str	r1, [sp]
    2110:	movw	r1, #0
    2114:	movt	r1, #0
    2118:	strd	r8, [sp, #8]
    211c:	mov	r0, r4
    2120:	bl	0 <println>
    2124:	mov	r0, r4
    2128:	movw	r1, #0
    212c:	movt	r1, #0
    2130:	bl	0 <println>
    2134:	movw	r1, #0
    2138:	movt	r1, #0
    213c:	mov	r0, r4
    2140:	bl	0 <println>
    2144:	ldr	r3, [r4, #220]	; 0xdc
    2148:	add	r3, r3, #1
    214c:	str	r3, [r4, #220]	; 0xdc
    2150:	mov	r0, r4
    2154:	movw	r1, #0
    2158:	movt	r1, #0
    215c:	ldr	r2, [sp, #40]	; 0x28
    2160:	bl	0 <println>
    2164:	movw	r1, #0
    2168:	movt	r1, #0
    216c:	mov	r0, r4
    2170:	bl	0 <println>
    2174:	ldr	r3, [r4, #220]	; 0xdc
    2178:	ldr	r2, [sp, #64]	; 0x40
    217c:	add	r3, r3, #2
    2180:	cmp	r2, #0
    2184:	str	r3, [r4, #220]	; 0xdc
    2188:	beq	21a0 <gen_field_match_handler.isra.12+0x338>
    218c:	movw	r1, #0
    2190:	movt	r1, #0
    2194:	add	r2, sp, #292	; 0x124
    2198:	mov	r0, r4
    219c:	bl	0 <println>
    21a0:	ldr	r2, [r4, #208]	; 0xd0
    21a4:	add	r3, sp, #88	; 0x58
    21a8:	mov	r0, r4
    21ac:	movw	r1, #0
    21b0:	movt	r1, #0
    21b4:	ldr	r2, [r2, #160]	; 0xa0
    21b8:	bl	0 <println>
    21bc:	ldr	r3, [r4, #208]	; 0xd0
    21c0:	movw	r1, #0
    21c4:	movt	r1, #0
    21c8:	mov	r0, r4
    21cc:	ldr	r2, [r3, #160]	; 0xa0
    21d0:	bl	0 <println>
    21d4:	ldr	r3, [r4, #220]	; 0xdc
    21d8:	cmp	r3, #0
    21dc:	beq	2b38 <gen_field_match_handler.isra.12+0xcd0>
    21e0:	cmp	r3, #1
    21e4:	beq	2b30 <gen_field_match_handler.isra.12+0xcc8>
    21e8:	sub	r3, r3, #2
    21ec:	str	r3, [r4, #220]	; 0xdc
    21f0:	ldr	r3, [sp, #20]
    21f4:	cmp	r3, #0
    21f8:	movne	r3, r5
    21fc:	moveq	r3, #0
    2200:	cmp	r3, #0
    2204:	beq	2218 <gen_field_match_handler.isra.12+0x3b0>
    2208:	movw	r1, #0
    220c:	movt	r1, #0
    2210:	mov	r0, r4
    2214:	bl	0 <println>
    2218:	ldr	r3, [sp, #28]
    221c:	cmp	r3, #1
    2220:	beq	238c <gen_field_match_handler.isra.12+0x524>
    2224:	eor	r3, r5, #1
    2228:	tst	r3, sl
    222c:	bne	26ac <gen_field_match_handler.isra.12+0x844>
    2230:	cmp	r6, #0
    2234:	bne	23a8 <gen_field_match_handler.isra.12+0x540>
    2238:	cmp	sl, #0
    223c:	bne	26d8 <gen_field_match_handler.isra.12+0x870>
    2240:	ldr	r3, [sp, #52]	; 0x34
    2244:	cmp	r3, #0
    2248:	bne	2780 <gen_field_match_handler.isra.12+0x918>
    224c:	ldr	r3, [sp, #72]	; 0x48
    2250:	cmp	r3, #0
    2254:	bne	2794 <gen_field_match_handler.isra.12+0x92c>
    2258:	ldr	r3, [sp, #36]	; 0x24
    225c:	cmp	r3, #0
    2260:	bne	28e8 <gen_field_match_handler.isra.12+0xa80>
    2264:	ldr	r3, [sp, #76]	; 0x4c
    2268:	cmp	r3, #0
    226c:	beq	2888 <gen_field_match_handler.isra.12+0xa20>
    2270:	ldr	r3, [sp, #80]	; 0x50
    2274:	ldrd	r8, [r7, #96]	; 0x60
    2278:	ldr	r2, [r7, #112]	; 0x70
    227c:	cmp	r3, #0
    2280:	beq	2900 <gen_field_match_handler.isra.12+0xa98>
    2284:	add	ip, sp, #292	; 0x124
    2288:	movw	r1, #0
    228c:	movt	r1, #0
    2290:	mov	r0, r4
    2294:	strd	r8, [sp]
    2298:	str	ip, [sp, #8]
    229c:	ldr	r3, [sp, #36]	; 0x24
    22a0:	bl	0 <println>
    22a4:	cmp	r5, #0
    22a8:	beq	22f4 <gen_field_match_handler.isra.12+0x48c>
    22ac:	ldr	r3, [sp, #20]
    22b0:	cmp	r3, #0
    22b4:	beq	2714 <gen_field_match_handler.isra.12+0x8ac>
    22b8:	mov	r0, r4
    22bc:	ldr	r1, [sp, #44]	; 0x2c
    22c0:	bl	0 <println>
    22c4:	ldr	r3, [r4, #220]	; 0xdc
    22c8:	cmp	r3, #0
    22cc:	beq	2838 <gen_field_match_handler.isra.12+0x9d0>
    22d0:	sub	r3, r3, #1
    22d4:	mov	r0, r4
    22d8:	ldr	r1, [sp, #32]
    22dc:	str	r3, [r4, #220]	; 0xdc
    22e0:	bl	0 <println>
    22e4:	movw	r1, #0
    22e8:	movt	r1, #0
    22ec:	mov	r0, r4
    22f0:	bl	0 <println>
    22f4:	cmp	fp, #1
    22f8:	bne	2630 <gen_field_match_handler.isra.12+0x7c8>
    22fc:	mov	fp, #2
    2300:	ldr	r3, [r4, #220]	; 0xdc
    2304:	cmp	r3, #0
    2308:	beq	2ba0 <gen_field_match_handler.isra.12+0xd38>
    230c:	sub	r3, r3, #1
    2310:	mov	r0, r4
    2314:	movw	r1, #0
    2318:	movt	r1, #0
    231c:	str	r3, [r4, #220]	; 0xdc
    2320:	bl	0 <println>
    2324:	ldr	r3, [r4, #220]	; 0xdc
    2328:	add	r2, sp, #292	; 0x124
    232c:	ldr	r1, [r7, #104]	; 0x68
    2330:	add	r3, r3, #1
    2334:	ldr	r0, [r1, #12]
    2338:	str	r3, [r4, #220]	; 0xdc
    233c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2340:	ldr	r3, [r7, #104]	; 0x68
    2344:	movw	r1, #0
    2348:	movt	r1, #0
    234c:	mov	r0, r4
    2350:	ldrh	r3, [r3, #8]
    2354:	cmp	r3, #0
    2358:	ldr	r3, [sp, #36]	; 0x24
    235c:	moveq	r3, #1
    2360:	movne	sl, #1
    2364:	str	r3, [sp, #36]	; 0x24
    2368:	ldr	r3, [sp, #552]	; 0x228
    236c:	orr	r3, r3, sl
    2370:	str	r3, [sp, #20]
    2374:	bl	0 <println>
    2378:	ldr	r3, [sp, #28]
    237c:	mov	r5, #0
    2380:	mov	r6, r5
    2384:	cmp	r3, #1
    2388:	bne	2224 <gen_field_match_handler.isra.12+0x3bc>
    238c:	movw	r1, #0
    2390:	movt	r1, #0
    2394:	ldrd	r2, [r7, #80]	; 0x50
    2398:	mov	r0, r4
    239c:	bl	0 <println>
    23a0:	cmp	r6, #0
    23a4:	beq	2238 <gen_field_match_handler.isra.12+0x3d0>
    23a8:	ldr	r6, [sp, #24]
    23ac:	mov	r0, r4
    23b0:	movw	r1, #0
    23b4:	movt	r1, #0
    23b8:	mov	r2, r6
    23bc:	bl	0 <println>
    23c0:	mov	r0, r4
    23c4:	movw	r1, #0
    23c8:	movt	r1, #0
    23cc:	bl	0 <println>
    23d0:	ldr	r3, [r4, #220]	; 0xdc
    23d4:	mov	r2, r6
    23d8:	mov	r0, r4
    23dc:	movw	r1, #0
    23e0:	movt	r1, #0
    23e4:	add	r3, r3, #1
    23e8:	str	r3, [r4, #220]	; 0xdc
    23ec:	bl	0 <println>
    23f0:	movw	r1, #0
    23f4:	movt	r1, #0
    23f8:	mov	r0, r4
    23fc:	bl	0 <println>
    2400:	ldr	r3, [r4, #220]	; 0xdc
    2404:	cmp	r3, #0
    2408:	beq	2bbc <gen_field_match_handler.isra.12+0xd54>
    240c:	sub	r3, r3, #1
    2410:	mov	r0, r4
    2414:	ldr	r1, [sp, #32]
    2418:	str	r3, [r4, #220]	; 0xdc
    241c:	ldr	r3, [sp, #68]	; 0x44
    2420:	orr	r6, r3, r5
    2424:	bl	0 <println>
    2428:	ldrd	r2, [sp, #56]	; 0x38
    242c:	orr	r3, r3, r2
    2430:	orrs	r3, r3, r6
    2434:	bne	26f0 <gen_field_match_handler.isra.12+0x888>
    2438:	ldrh	r3, [r7, #56]	; 0x38
    243c:	sub	r3, r3, #3
    2440:	cmp	r3, #3
    2444:	ldrls	pc, [pc, r3, lsl #2]
    2448:	b	2d2c <gen_field_match_handler.isra.12+0xec4>
    244c:	.word	0x00002688
    2450:	.word	0x0000267c
    2454:	.word	0x000025ac
    2458:	.word	0x000025ac
    245c:	mov	r5, #0
    2460:	ldrh	r3, [r7, #72]	; 0x48
    2464:	ldr	r1, [r7, #16]
    2468:	ldr	r2, [r7, #104]	; 0x68
    246c:	and	r0, r3, #1024	; 0x400
    2470:	str	r0, [sp, #56]	; 0x38
    2474:	and	r0, r3, #2048	; 0x800
    2478:	mov	r9, r1
    247c:	adds	fp, r2, #0
    2480:	str	r0, [sp, #60]	; 0x3c
    2484:	movne	fp, #1
    2488:	ands	r3, r3, #3072	; 0xc00
    248c:	str	r3, [sp, #72]	; 0x48
    2490:	beq	1f58 <gen_field_match_handler.isra.12+0xf0>
    2494:	eor	r6, r5, #1
    2498:	cmp	r1, #4
    249c:	orrne	r6, r6, #1
    24a0:	cmp	r6, #0
    24a4:	moveq	r3, #4
    24a8:	moveq	r9, r3
    24ac:	bne	2bf4 <gen_field_match_handler.isra.12+0xd8c>
    24b0:	ldr	r3, [sp, #552]	; 0x228
    24b4:	cmp	r3, #0
    24b8:	bne	2c40 <gen_field_match_handler.isra.12+0xdd8>
    24bc:	ldr	sl, [sp, #552]	; 0x228
    24c0:	mov	r5, sl
    24c4:	str	sl, [sp, #36]	; 0x24
    24c8:	str	sl, [sp, #52]	; 0x34
    24cc:	str	sl, [sp, #64]	; 0x40
    24d0:	str	sl, [sp, #76]	; 0x4c
    24d4:	str	sl, [sp, #80]	; 0x50
    24d8:	mov	r3, #0
    24dc:	mov	fp, r3
    24e0:	str	r3, [sp, #84]	; 0x54
    24e4:	b	2058 <gen_field_match_handler.isra.12+0x1f0>
    24e8:	mov	r8, #0
    24ec:	mov	r3, #1
    24f0:	mov	r5, r8
    24f4:	mov	r9, r8
    24f8:	mov	sl, r8
    24fc:	mov	r6, r8
    2500:	str	r8, [sp, #36]	; 0x24
    2504:	str	r3, [sp, #52]	; 0x34
    2508:	str	r8, [sp, #64]	; 0x40
    250c:	b	2010 <gen_field_match_handler.isra.12+0x1a8>
    2510:	mov	r8, #1
    2514:	mov	r5, r8
    2518:	b	1f9c <gen_field_match_handler.isra.12+0x134>
    251c:	mov	r5, #1
    2520:	b	2460 <gen_field_match_handler.isra.12+0x5f8>
    2524:	mov	r3, #0
    2528:	mov	r8, #1
    252c:	mov	r9, r3
    2530:	mov	r5, r8
    2534:	mov	sl, r3
    2538:	mov	r6, r3
    253c:	str	r3, [sp, #36]	; 0x24
    2540:	str	r8, [sp, #52]	; 0x34
    2544:	str	r3, [sp, #64]	; 0x40
    2548:	b	2010 <gen_field_match_handler.isra.12+0x1a8>
    254c:	cmp	r5, #0
    2550:	beq	2378 <gen_field_match_handler.isra.12+0x510>
    2554:	ldr	r3, [sp, #20]
    2558:	cmp	r3, #0
    255c:	bne	27b4 <gen_field_match_handler.isra.12+0x94c>
    2560:	mov	r0, r4
    2564:	movw	r1, #0
    2568:	movt	r1, #0
    256c:	bl	0 <println>
    2570:	mov	r0, r4
    2574:	movw	r1, #0
    2578:	movt	r1, #0
    257c:	bl	0 <println>
    2580:	movw	r1, #0
    2584:	movt	r1, #0
    2588:	mov	r0, r4
    258c:	bl	0 <println>
    2590:	ldr	r3, [r4, #220]	; 0xdc
    2594:	ldr	r2, [sp, #28]
    2598:	add	r3, r3, #1
    259c:	cmp	r2, #1
    25a0:	str	r3, [r4, #220]	; 0xdc
    25a4:	bne	2238 <gen_field_match_handler.isra.12+0x3d0>
    25a8:	b	238c <gen_field_match_handler.isra.12+0x524>
    25ac:	movw	r1, #0
    25b0:	movt	r1, #0
    25b4:	mov	r0, r4
    25b8:	ldrd	r2, [r7, #48]	; 0x30
    25bc:	bl	0 <println>
    25c0:	ldr	r3, [r4, #220]	; 0xdc
    25c4:	add	r3, r3, #1
    25c8:	str	r3, [r4, #220]	; 0xdc
    25cc:	ldrsh	r3, [r7, #74]	; 0x4a
    25d0:	mov	r0, r4
    25d4:	movw	r1, #0
    25d8:	movt	r1, #0
    25dc:	ldrd	r8, [r7, #88]	; 0x58
    25e0:	str	r3, [sp, #8]
    25e4:	ldrd	r2, [r7, #96]	; 0x60
    25e8:	strd	r8, [sp]
    25ec:	bl	0 <println>
    25f0:	movw	r1, #0
    25f4:	movt	r1, #0
    25f8:	ldr	r3, [sp, #24]
    25fc:	mov	r2, r4
    2600:	mov	r0, r4
    2604:	bl	0 <println>
    2608:	ldr	r3, [r4, #220]	; 0xdc
    260c:	cmp	r3, #0
    2610:	beq	2bd8 <gen_field_match_handler.isra.12+0xd70>
    2614:	sub	r3, r3, #1
    2618:	mov	r0, r4
    261c:	ldr	r1, [sp, #32]
    2620:	str	r3, [r4, #220]	; 0xdc
    2624:	bl	0 <println>
    2628:	cmp	fp, #1
    262c:	beq	22fc <gen_field_match_handler.isra.12+0x494>
    2630:	cmp	fp, #2
    2634:	beq	2a48 <gen_field_match_handler.isra.12+0xbe0>
    2638:	ldrd	r2, [sp, #56]	; 0x38
    263c:	orr	r3, r3, r2
    2640:	ldr	r2, [sp, #52]	; 0x34
    2644:	orr	r3, r3, r2
    2648:	orr	r3, r3, fp
    264c:	orr	r5, r3, r5
    2650:	ldr	r3, [sp, #36]	; 0x24
    2654:	orrs	r3, r5, r3
    2658:	bne	2a8c <gen_field_match_handler.isra.12+0xc24>
    265c:	mov	r0, #0
    2660:	add	sp, sp, #516	; 0x204
    2664:	ldrd	r4, [sp]
    2668:	ldrd	r6, [sp, #8]
    266c:	ldrd	r8, [sp, #16]
    2670:	ldrd	sl, [sp, #24]
    2674:	add	sp, sp, #32
    2678:	pop	{pc}		; (ldr pc, [sp], #4)
    267c:	movw	r1, #0
    2680:	movt	r1, #0
    2684:	b	25b4 <gen_field_match_handler.isra.12+0x74c>
    2688:	movw	r1, #0
    268c:	movt	r1, #0
    2690:	ldrd	r2, [r7, #48]	; 0x30
    2694:	mov	r0, r4
    2698:	bl	0 <println>
    269c:	ldr	r3, [r4, #220]	; 0xdc
    26a0:	add	r3, r3, #1
    26a4:	str	r3, [r4, #220]	; 0xdc
    26a8:	b	25cc <gen_field_match_handler.isra.12+0x764>
    26ac:	ldrh	r3, [r7, #74]	; 0x4a
    26b0:	movw	r1, #0
    26b4:	movt	r1, #0
    26b8:	mov	r0, r4
    26bc:	ldrd	r8, [r7, #88]	; 0x58
    26c0:	str	r3, [sp, #8]
    26c4:	ldrd	r2, [r7, #96]	; 0x60
    26c8:	strd	r8, [sp]
    26cc:	bl	0 <println>
    26d0:	cmp	r6, #0
    26d4:	bne	23a8 <gen_field_match_handler.isra.12+0x540>
    26d8:	movw	r1, #0
    26dc:	movt	r1, #0
    26e0:	add	r2, sp, #292	; 0x124
    26e4:	mov	r0, r4
    26e8:	bl	0 <println>
    26ec:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    26f0:	movw	r1, #0
    26f4:	movt	r1, #0
    26f8:	ldr	r3, [sp, #24]
    26fc:	mov	r2, r4
    2700:	mov	r0, r4
    2704:	bl	0 <println>
    2708:	cmp	r6, #0
    270c:	bne	22a4 <gen_field_match_handler.isra.12+0x43c>
    2710:	b	2608 <gen_field_match_handler.isra.12+0x7a0>
    2714:	mov	r0, r4
    2718:	movw	r1, #0
    271c:	movt	r1, #0
    2720:	bl	0 <println>
    2724:	mov	r0, r4
    2728:	movw	r1, #0
    272c:	movt	r1, #0
    2730:	bl	0 <println>
    2734:	mov	r0, r4
    2738:	ldr	r1, [sp, #44]	; 0x2c
    273c:	bl	0 <println>
    2740:	ldr	r3, [r4, #220]	; 0xdc
    2744:	cmp	r3, #0
    2748:	beq	2838 <gen_field_match_handler.isra.12+0x9d0>
    274c:	sub	r3, r3, #1
    2750:	mov	r0, r4
    2754:	ldr	r1, [sp, #32]
    2758:	str	r3, [r4, #220]	; 0xdc
    275c:	bl	0 <println>
    2760:	movw	r1, #0
    2764:	movt	r1, #0
    2768:	mov	r0, r4
    276c:	bl	0 <println>
    2770:	b	22f4 <gen_field_match_handler.isra.12+0x48c>
    2774:	ldr	r3, [r2, #264]	; 0x108
    2778:	str	r3, [sp, #40]	; 0x28
    277c:	b	20d4 <gen_field_match_handler.isra.12+0x26c>
    2780:	movw	r1, #0
    2784:	movt	r1, #0
    2788:	mov	r0, r4
    278c:	bl	0 <println>
    2790:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    2794:	ldr	r3, [sp, #56]	; 0x38
    2798:	movw	r1, #0
    279c:	movt	r1, #0
    27a0:	mov	r0, r4
    27a4:	clz	r2, r3
    27a8:	lsr	r2, r2, #5
    27ac:	bl	0 <println>
    27b0:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    27b4:	ldrd	r2, [r7, #88]	; 0x58
    27b8:	ldrsh	r1, [r7, #74]	; 0x4a
    27bc:	mov	r9, r3
    27c0:	orrs	r3, r2, r3
    27c4:	mov	r8, r2
    27c8:	str	r1, [sp, #40]	; 0x28
    27cc:	beq	2cd0 <gen_field_match_handler.isra.12+0xe68>
    27d0:	mov	r2, r8
    27d4:	mov	r3, r9
    27d8:	mvn	r0, #0
    27dc:	mov	r1, #0
    27e0:	bl	0 <__aeabi_uldivmod>
    27e4:	ldr	ip, [sp, #40]	; 0x28
    27e8:	mov	r3, r9
    27ec:	mov	r2, r8
    27f0:	str	ip, [sp]
    27f4:	strd	r0, [sp, #8]
    27f8:	mov	r0, r4
    27fc:	movw	r1, #0
    2800:	movt	r1, #0
    2804:	bl	0 <println>
    2808:	mov	r0, r4
    280c:	movw	r1, #0
    2810:	movt	r1, #0
    2814:	bl	0 <println>
    2818:	movw	r1, #0
    281c:	movt	r1, #0
    2820:	mov	r0, r4
    2824:	bl	0 <println>
    2828:	ldr	r3, [r4, #220]	; 0xdc
    282c:	add	r3, r3, #1
    2830:	str	r3, [r4, #220]	; 0xdc
    2834:	b	21f0 <gen_field_match_handler.isra.12+0x388>
    2838:	movw	r1, #0
    283c:	movt	r1, #0
    2840:	ldr	r3, [pc, #1328]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2844:	movw	r0, #0
    2848:	movt	r0, #0
    284c:	movw	r2, #647	; 0x287
    2850:	bl	0 <__assert_fail>
    2854:	mov	r2, r8
    2858:	mov	r3, r9
    285c:	mvn	r0, #0
    2860:	mov	r1, #0
    2864:	bl	0 <__aeabi_uldivmod>
    2868:	ldr	ip, [sp, #48]	; 0x30
    286c:	mov	r2, r8
    2870:	mov	r3, r9
    2874:	str	ip, [sp]
    2878:	strd	r0, [sp, #8]
    287c:	movw	r1, #0
    2880:	movt	r1, #0
    2884:	b	211c <gen_field_match_handler.isra.12+0x2b4>
    2888:	ldr	r3, [sp, #552]	; 0x228
    288c:	cmp	r3, #0
    2890:	bne	2924 <gen_field_match_handler.isra.12+0xabc>
    2894:	cmp	r5, #0
    2898:	bne	22ac <gen_field_match_handler.isra.12+0x444>
    289c:	movw	r1, #0
    28a0:	movt	r1, #0
    28a4:	movw	r3, #0
    28a8:	movt	r3, #0
    28ac:	movw	r2, #0
    28b0:	movt	r2, #0
    28b4:	str	r1, [sp]
    28b8:	movw	r1, #0
    28bc:	movt	r1, #0
    28c0:	ldr	r0, [r3]
    28c4:	mov	r3, #636	; 0x27c
    28c8:	bl	0 <fprintf>
    28cc:	movw	r1, #0
    28d0:	movt	r1, #0
    28d4:	ldr	r3, [pc, #1180]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    28d8:	movw	r0, #0
    28dc:	movt	r0, #0
    28e0:	mov	r2, #636	; 0x27c
    28e4:	bl	0 <__assert_fail>
    28e8:	movw	r1, #0
    28ec:	movt	r1, #0
    28f0:	add	r2, sp, #292	; 0x124
    28f4:	mov	r0, r4
    28f8:	bl	0 <println>
    28fc:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    2900:	add	ip, sp, #292	; 0x124
    2904:	movw	r1, #0
    2908:	movt	r1, #0
    290c:	mov	r0, r4
    2910:	strd	r8, [sp]
    2914:	str	ip, [sp, #8]
    2918:	ldr	r3, [sp, #80]	; 0x50
    291c:	bl	0 <println>
    2920:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    2924:	mov	r0, r4
    2928:	movw	r1, #0
    292c:	movt	r1, #0
    2930:	bl	0 <println>
    2934:	ldr	r3, [r4, #220]	; 0xdc
    2938:	add	r2, sp, #292	; 0x124
    293c:	mov	r0, r4
    2940:	movw	r1, #0
    2944:	movt	r1, #0
    2948:	add	r3, r3, #2
    294c:	str	r3, [r4, #220]	; 0xdc
    2950:	bl	0 <println>
    2954:	ldr	r2, [r4, #208]	; 0xd0
    2958:	add	r3, sp, #88	; 0x58
    295c:	mov	r0, r4
    2960:	movw	r1, #0
    2964:	movt	r1, #0
    2968:	ldr	r2, [r2, #160]	; 0xa0
    296c:	bl	0 <println>
    2970:	ldr	r3, [r4, #208]	; 0xd0
    2974:	movw	r1, #0
    2978:	movt	r1, #0
    297c:	mov	r0, r4
    2980:	ldr	r2, [r3, #160]	; 0xa0
    2984:	bl	0 <println>
    2988:	ldr	r3, [r4, #220]	; 0xdc
    298c:	cmp	r3, #0
    2990:	beq	2cb4 <gen_field_match_handler.isra.12+0xe4c>
    2994:	cmp	r3, #1
    2998:	beq	2cac <gen_field_match_handler.isra.12+0xe44>
    299c:	ldr	r2, [sp, #84]	; 0x54
    29a0:	sub	r3, r3, #2
    29a4:	ldrd	r8, [r7, #96]	; 0x60
    29a8:	cmp	r2, #0
    29ac:	ldr	r2, [r7, #112]	; 0x70
    29b0:	str	r3, [r4, #220]	; 0xdc
    29b4:	beq	29e0 <gen_field_match_handler.isra.12+0xb78>
    29b8:	add	ip, sp, #292	; 0x124
    29bc:	movw	r1, #0
    29c0:	movt	r1, #0
    29c4:	mov	r0, r4
    29c8:	strd	r8, [sp]
    29cc:	str	ip, [sp, #8]
    29d0:	str	ip, [sp, #12]
    29d4:	ldr	r3, [sp, #76]	; 0x4c
    29d8:	bl	0 <println>
    29dc:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    29e0:	add	ip, sp, #292	; 0x124
    29e4:	movw	r1, #0
    29e8:	movt	r1, #0
    29ec:	mov	r0, r4
    29f0:	strd	r8, [sp]
    29f4:	str	ip, [sp, #8]
    29f8:	ldr	r3, [sp, #84]	; 0x54
    29fc:	bl	0 <println>
    2a00:	b	22a4 <gen_field_match_handler.isra.12+0x43c>
    2a04:	mov	r6, #0
    2a08:	mov	r3, #1
    2a0c:	mov	r9, r6
    2a10:	str	r6, [sp, #52]	; 0x34
    2a14:	str	r3, [sp, #76]	; 0x4c
    2a18:	ldr	r3, [sp, #76]	; 0x4c
    2a1c:	ands	r3, r3, r5
    2a20:	streq	r3, [sp, #56]	; 0x38
    2a24:	streq	r3, [sp, #60]	; 0x3c
    2a28:	streq	r3, [sp, #72]	; 0x48
    2a2c:	str	r3, [sp, #80]	; 0x50
    2a30:	beq	24d8 <gen_field_match_handler.isra.12+0x670>
    2a34:	mov	r5, #0
    2a38:	str	r5, [sp, #56]	; 0x38
    2a3c:	str	r5, [sp, #60]	; 0x3c
    2a40:	str	r5, [sp, #72]	; 0x48
    2a44:	b	24d8 <gen_field_match_handler.isra.12+0x670>
    2a48:	mov	r0, r4
    2a4c:	movw	r1, #0
    2a50:	movt	r1, #0
    2a54:	bl	0 <println>
    2a58:	movw	r1, #0
    2a5c:	movt	r1, #0
    2a60:	mov	r0, r4
    2a64:	bl	0 <println>
    2a68:	ldr	r3, [r4, #220]	; 0xdc
    2a6c:	cmp	r3, #0
    2a70:	beq	2c90 <gen_field_match_handler.isra.12+0xe28>
    2a74:	sub	r3, r3, #1
    2a78:	movw	r1, #0
    2a7c:	movt	r1, #0
    2a80:	mov	r0, r4
    2a84:	str	r3, [r4, #220]	; 0xdc
    2a88:	bl	0 <println>
    2a8c:	mov	r0, r4
    2a90:	movw	r1, #0
    2a94:	movt	r1, #0
    2a98:	ldrd	r2, [r7, #96]	; 0x60
    2a9c:	bl	0 <println>
    2aa0:	mov	r0, r4
    2aa4:	movw	r1, #0
    2aa8:	movt	r1, #0
    2aac:	bl	0 <println>
    2ab0:	b	265c <gen_field_match_handler.isra.12+0x7f4>
    2ab4:	mov	r2, #0
    2ab8:	movw	r1, #0
    2abc:	movt	r1, #0
    2ac0:	mov	r0, r4
    2ac4:	mov	r8, r2
    2ac8:	str	r2, [sp, #76]	; 0x4c
    2acc:	bl	0 <println>
    2ad0:	ldr	r3, [r4, #220]	; 0xdc
    2ad4:	str	r8, [sp, #56]	; 0x38
    2ad8:	str	r8, [sp, #60]	; 0x3c
    2adc:	str	r8, [sp, #72]	; 0x48
    2ae0:	str	r8, [sp, #80]	; 0x50
    2ae4:	add	r3, r3, #1
    2ae8:	str	r3, [r4, #220]	; 0xdc
    2aec:	b	2058 <gen_field_match_handler.isra.12+0x1f0>
    2af0:	ldr	r3, [r2, #40]	; 0x28
    2af4:	mov	r6, #1
    2af8:	str	r9, [sp, #52]	; 0x34
    2afc:	str	r6, [sp, #64]	; 0x40
    2b00:	mov	r9, r3
    2b04:	b	2010 <gen_field_match_handler.isra.12+0x1a8>
    2b08:	mov	r8, #0
    2b0c:	mov	r5, r8
    2b10:	mov	r3, #0
    2b14:	mov	r6, r3
    2b18:	mov	r9, r3
    2b1c:	mov	fp, r3
    2b20:	b	1f60 <gen_field_match_handler.isra.12+0xf8>
    2b24:	mov	r8, #1
    2b28:	mov	r5, r8
    2b2c:	b	2b10 <gen_field_match_handler.isra.12+0xca8>
    2b30:	mov	r3, #0
    2b34:	str	r3, [r4, #220]	; 0xdc
    2b38:	movw	r1, #0
    2b3c:	movt	r1, #0
    2b40:	ldr	r3, [pc, #560]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2b44:	movw	r0, #0
    2b48:	movt	r0, #0
    2b4c:	movw	r2, #539	; 0x21b
    2b50:	bl	0 <__assert_fail>
    2b54:	movw	r1, #0
    2b58:	movt	r1, #0
    2b5c:	movw	r3, #0
    2b60:	movt	r3, #0
    2b64:	movw	r2, #0
    2b68:	movt	r2, #0
    2b6c:	str	r1, [sp]
    2b70:	movw	r1, #0
    2b74:	movt	r1, #0
    2b78:	ldr	r0, [r3]
    2b7c:	mov	r3, #96	; 0x60
    2b80:	bl	0 <fprintf>
    2b84:	movw	r1, #0
    2b88:	movt	r1, #0
    2b8c:	movw	r0, #0
    2b90:	movt	r0, #0
    2b94:	add	r3, r8, #244	; 0xf4
    2b98:	mov	r2, #96	; 0x60
    2b9c:	bl	0 <__assert_fail>
    2ba0:	movw	r1, #0
    2ba4:	movt	r1, #0
    2ba8:	ldr	r3, [pc, #456]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2bac:	movw	r0, #0
    2bb0:	movt	r0, #0
    2bb4:	movw	r2, #490	; 0x1ea
    2bb8:	bl	0 <__assert_fail>
    2bbc:	movw	r1, #0
    2bc0:	movt	r1, #0
    2bc4:	ldr	r3, [pc, #428]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2bc8:	movw	r0, #0
    2bcc:	movt	r0, #0
    2bd0:	movw	r2, #559	; 0x22f
    2bd4:	bl	0 <__assert_fail>
    2bd8:	movw	r1, #0
    2bdc:	movt	r1, #0
    2be0:	ldr	r3, [pc, #400]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2be4:	movw	r0, #0
    2be8:	movt	r0, #0
    2bec:	movw	r2, #602	; 0x25a
    2bf0:	bl	0 <__assert_fail>
    2bf4:	movw	r1, #0
    2bf8:	movt	r1, #0
    2bfc:	movw	r3, #0
    2c00:	movt	r3, #0
    2c04:	movw	r2, #0
    2c08:	movt	r2, #0
    2c0c:	str	r1, [sp]
    2c10:	movw	r1, #0
    2c14:	movt	r1, #0
    2c18:	ldr	r0, [r3]
    2c1c:	movw	r3, #466	; 0x1d2
    2c20:	bl	0 <fprintf>
    2c24:	movw	r1, #0
    2c28:	movt	r1, #0
    2c2c:	ldr	r3, [pc, #324]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2c30:	movw	r0, #0
    2c34:	movt	r0, #0
    2c38:	movw	r2, #466	; 0x1d2
    2c3c:	bl	0 <__assert_fail>
    2c40:	mov	sl, #0
    2c44:	mov	r6, sl
    2c48:	mov	r5, sl
    2c4c:	str	sl, [sp, #36]	; 0x24
    2c50:	str	sl, [sp, #52]	; 0x34
    2c54:	str	sl, [sp, #64]	; 0x40
    2c58:	str	sl, [sp, #76]	; 0x4c
    2c5c:	str	sl, [sp, #80]	; 0x50
    2c60:	b	24d8 <gen_field_match_handler.isra.12+0x670>
    2c64:	ldr	r2, [r7, #16]
    2c68:	mov	r3, #0
    2c6c:	mov	r6, #1
    2c70:	str	r3, [sp, #56]	; 0x38
    2c74:	str	r3, [sp, #60]	; 0x3c
    2c78:	str	r3, [sp, #72]	; 0x48
    2c7c:	mov	r9, r2
    2c80:	b	24b0 <gen_field_match_handler.isra.12+0x648>
    2c84:	mov	r6, r8
    2c88:	str	r8, [sp, #84]	; 0x54
    2c8c:	b	203c <gen_field_match_handler.isra.12+0x1d4>
    2c90:	movw	r1, #0
    2c94:	movt	r1, #0
    2c98:	ldr	r3, [pc, #216]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2c9c:	movw	r0, #0
    2ca0:	movt	r0, #0
    2ca4:	movw	r2, #661	; 0x295
    2ca8:	bl	0 <__assert_fail>
    2cac:	ldr	r3, [sp, #76]	; 0x4c
    2cb0:	str	r3, [r4, #220]	; 0xdc
    2cb4:	movw	r1, #0
    2cb8:	movt	r1, #0
    2cbc:	ldr	r3, [pc, #180]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2cc0:	movw	r0, #0
    2cc4:	movt	r0, #0
    2cc8:	movw	r2, #627	; 0x273
    2ccc:	bl	0 <__assert_fail>
    2cd0:	ldr	r1, [sp, #40]	; 0x28
    2cd4:	mov	r3, r9
    2cd8:	mov	r2, r8
    2cdc:	mov	r9, #0
    2ce0:	mvn	r8, #0
    2ce4:	mov	r0, r4
    2ce8:	str	r1, [sp]
    2cec:	movw	r1, #0
    2cf0:	movt	r1, #0
    2cf4:	strd	r8, [sp, #8]
    2cf8:	bl	0 <println>
    2cfc:	mov	r0, r4
    2d00:	movw	r1, #0
    2d04:	movt	r1, #0
    2d08:	bl	0 <println>
    2d0c:	movw	r1, #0
    2d10:	movt	r1, #0
    2d14:	mov	r0, r4
    2d18:	bl	0 <println>
    2d1c:	ldr	r3, [r4, #220]	; 0xdc
    2d20:	add	r3, r3, #1
    2d24:	str	r3, [r4, #220]	; 0xdc
    2d28:	b	2208 <gen_field_match_handler.isra.12+0x3a0>
    2d2c:	movw	r1, #0
    2d30:	movt	r1, #0
    2d34:	movw	r3, #0
    2d38:	movt	r3, #0
    2d3c:	movw	r2, #0
    2d40:	movt	r2, #0
    2d44:	str	r1, [sp]
    2d48:	movw	r1, #0
    2d4c:	movt	r1, #0
    2d50:	ldr	r0, [r3]
    2d54:	movw	r3, #590	; 0x24e
    2d58:	bl	0 <fprintf>
    2d5c:	movw	r1, #0
    2d60:	movt	r1, #0
    2d64:	ldr	r3, [pc, #12]	; 2d78 <gen_field_match_handler.isra.12+0xf10>
    2d68:	movw	r0, #0
    2d6c:	movt	r0, #0
    2d70:	movw	r2, #590	; 0x24e
    2d74:	bl	0 <__assert_fail>
    2d78:	.word	0x000000b0

00002d7c <gen_field_match>:
    2d7c:	strd	r4, [sp, #-20]!	; 0xffffffec
    2d80:	mov	r4, r0
    2d84:	mov	r5, r1
    2d88:	strd	r6, [sp, #8]
    2d8c:	movw	r1, #0
    2d90:	movt	r1, #0
    2d94:	str	lr, [sp, #16]
    2d98:	sub	sp, sp, #12
    2d9c:	mov	r7, r2
    2da0:	ldr	r2, [sp, #32]
    2da4:	mov	r6, r3
    2da8:	bl	0 <println>
    2dac:	mov	r0, r4
    2db0:	movw	r1, #0
    2db4:	movt	r1, #0
    2db8:	bl	0 <println>
    2dbc:	ldr	ip, [r4, #220]	; 0xdc
    2dc0:	mov	r3, r7
    2dc4:	add	r2, r5, #12
    2dc8:	add	r1, r5, #8
    2dcc:	mov	r0, r4
    2dd0:	str	r6, [sp]
    2dd4:	add	ip, ip, #1
    2dd8:	str	ip, [r4, #220]	; 0xdc
    2ddc:	bl	1e68 <gen_field_match_handler.isra.12>
    2de0:	ldr	r3, [r4, #220]	; 0xdc
    2de4:	cmp	r3, #0
    2de8:	beq	2e24 <gen_field_match+0xa8>
    2dec:	sub	r3, r3, #1
    2df0:	mov	r0, r4
    2df4:	movw	r1, #0
    2df8:	movt	r1, #0
    2dfc:	str	r3, [r4, #220]	; 0xdc
    2e00:	bl	0 <println>
    2e04:	ldr	r3, [r4, #220]	; 0xdc
    2e08:	add	r3, r3, #1
    2e0c:	str	r3, [r4, #220]	; 0xdc
    2e10:	add	sp, sp, #12
    2e14:	ldrd	r4, [sp]
    2e18:	ldrd	r6, [sp, #8]
    2e1c:	add	sp, sp, #16
    2e20:	pop	{pc}		; (ldr pc, [sp], #4)
    2e24:	movw	r1, #0
    2e28:	movt	r1, #0
    2e2c:	ldr	r3, [pc, #12]	; 2e40 <gen_field_match+0xc4>
    2e30:	movw	r0, #0
    2e34:	movt	r0, #0
    2e38:	movw	r2, #675	; 0x2a3
    2e3c:	bl	0 <__assert_fail>
    2e40:	.word	0x00000134

00002e44 <install_symbol>:
    2e44:	ldrh	r3, [r1, #8]
    2e48:	cmp	r3, #4
    2e4c:	bxhi	lr
    2e50:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2e54:	strd	r6, [sp, #8]
    2e58:	mov	r7, r0
    2e5c:	mov	r6, r1
    2e60:	ldr	r0, [r0, #40]	; 0x28
    2e64:	strd	r8, [sp, #16]
    2e68:	ldr	r1, [r1, #16]
    2e6c:	str	sl, [sp, #24]
    2e70:	str	lr, [sp, #28]
    2e74:	add	r0, r0, #172	; 0xac
    2e78:	bl	0 <ptr_set_find_item>
    2e7c:	cmp	r0, #0
    2e80:	beq	2f30 <install_symbol+0xec>
    2e84:	ldr	r3, [r7]
    2e88:	ldr	r9, [r7, #36]	; 0x24
    2e8c:	cmp	r3, #0
    2e90:	moveq	r4, r9
    2e94:	beq	2ed4 <install_symbol+0x90>
    2e98:	ldr	r3, [r6, #12]
    2e9c:	mov	r4, r9
    2ea0:	ldr	r5, [r3]
    2ea4:	cmp	r5, #0
    2ea8:	beq	2ed4 <install_symbol+0x90>
    2eac:	mov	r8, #46	; 0x2e
    2eb0:	ldr	r3, [r5, #4]
    2eb4:	mov	r0, r4
    2eb8:	ldm	r3, {r1, r2}
    2ebc:	add	r4, r4, r2
    2ec0:	bl	0 <memcpy>
    2ec4:	strb	r8, [r4], #1
    2ec8:	ldr	r5, [r5]
    2ecc:	cmp	r5, #0
    2ed0:	bne	2eb0 <install_symbol+0x6c>
    2ed4:	ldr	r3, [r6, #4]
    2ed8:	mov	r0, r4
    2edc:	ldm	r3, {r1, r5}
    2ee0:	mov	r2, r5
    2ee4:	bl	0 <memcpy>
    2ee8:	mov	r2, #0
    2eec:	add	r3, r4, r5
    2ef0:	add	r3, r3, #1
    2ef4:	strb	r2, [r4, r5]
    2ef8:	ldrh	r2, [r6, #8]
    2efc:	str	r3, [r7, #36]	; 0x24
    2f00:	cmp	r2, #4
    2f04:	ldrls	pc, [pc, r2, lsl #2]
    2f08:	b	2f30 <install_symbol+0xec>
    2f0c:	.word	0x00002f48
    2f10:	.word	0x00002f48
    2f14:	.word	0x00002f30
    2f18:	.word	0x00002f20
    2f1c:	.word	0x00002f20
    2f20:	ldr	r3, [r7, #32]
    2f24:	add	r2, r3, #8
    2f28:	stm	r3, {r6, r9}
    2f2c:	str	r2, [r7, #32]
    2f30:	ldrd	r4, [sp]
    2f34:	ldrd	r6, [sp, #8]
    2f38:	ldrd	r8, [sp, #16]
    2f3c:	ldr	sl, [sp, #24]
    2f40:	add	sp, sp, #28
    2f44:	pop	{pc}		; (ldr pc, [sp], #4)
    2f48:	ldr	r3, [r7, #28]
    2f4c:	add	r2, r3, #8
    2f50:	stm	r3, {r6, r9}
    2f54:	str	r2, [r7, #28]
    2f58:	b	2f30 <install_symbol+0xec>

00002f5c <build_compound_dict.isra.17>:
    2f5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2f60:	subs	r5, r0, #0
    2f64:	strd	r6, [sp, #8]
    2f68:	strd	r8, [sp, #16]
    2f6c:	strd	sl, [sp, #24]
    2f70:	str	lr, [sp, #32]
    2f74:	sub	sp, sp, #4
    2f78:	beq	3100 <build_compound_dict.isra.17+0x1a4>
    2f7c:	mov	r0, #0
    2f80:	mov	r4, r5
    2f84:	mov	r7, r0
    2f88:	b	2f9c <build_compound_dict.isra.17+0x40>
    2f8c:	mov	r7, r2
    2f90:	ldr	r4, [r4]
    2f94:	cmp	r4, #0
    2f98:	beq	2fe4 <build_compound_dict.isra.17+0x88>
    2f9c:	ldrh	r3, [r4, #72]	; 0x48
    2fa0:	add	r2, r7, #1
    2fa4:	tst	r3, #4
    2fa8:	bne	2f90 <build_compound_dict.isra.17+0x34>
    2fac:	ldrh	r3, [r4, #24]
    2fb0:	sub	r3, r3, #14
    2fb4:	cmp	r3, #1
    2fb8:	bhi	2f8c <build_compound_dict.isra.17+0x30>
    2fbc:	ldr	r3, [r4, #16]
    2fc0:	ldrh	r3, [r3, #8]
    2fc4:	cmp	r3, #4
    2fc8:	bne	2f8c <build_compound_dict.isra.17+0x30>
    2fcc:	ldr	r3, [r4, #4]
    2fd0:	add	r2, r7, #2
    2fd4:	ldr	r3, [r3, #4]
    2fd8:	add	r3, r3, #6
    2fdc:	add	r0, r0, r3
    2fe0:	b	2f8c <build_compound_dict.isra.17+0x30>
    2fe4:	cmp	r7, #0
    2fe8:	str	r7, [r1]
    2fec:	beq	30f8 <build_compound_dict.isra.17+0x19c>
    2ff0:	lsl	r8, r7, #4
    2ff4:	add	r0, r0, r8
    2ff8:	bl	0 <malloc>
    2ffc:	subs	r9, r0, #0
    3000:	beq	30f8 <build_compound_dict.isra.17+0x19c>
    3004:	movw	sl, #0
    3008:	movt	sl, #0
    300c:	add	r8, r9, r8
    3010:	mov	r6, r9
    3014:	mov	fp, #1
    3018:	b	302c <build_compound_dict.isra.17+0xd0>
    301c:	mov	r6, ip
    3020:	ldr	r5, [r5]
    3024:	cmp	r5, #0
    3028:	beq	30c0 <build_compound_dict.isra.17+0x164>
    302c:	ldrh	r3, [r5, #72]	; 0x48
    3030:	add	ip, r6, #16
    3034:	ands	r3, r3, #4
    3038:	bne	3020 <build_compound_dict.isra.17+0xc4>
    303c:	ldr	r2, [r5, #4]
    3040:	ldrh	r0, [r5, #24]
    3044:	ldm	r2, {r1, r2}
    3048:	sub	r0, r0, #14
    304c:	cmp	r0, #1
    3050:	stm	r6, {r1, r2, r5}
    3054:	str	r3, [r6, #12]
    3058:	bhi	301c <build_compound_dict.isra.17+0xc0>
    305c:	ldr	r3, [r5, #16]
    3060:	ldrh	r3, [r3, #8]
    3064:	cmp	r3, #4
    3068:	bne	301c <build_compound_dict.isra.17+0xc0>
    306c:	add	r3, r2, #5
    3070:	mov	r0, r8
    3074:	str	r4, [r5, #112]	; 0x70
    3078:	str	r8, [r6, #16]
    307c:	add	r4, r4, #1
    3080:	add	r6, r6, #32
    3084:	str	r3, [r6, #-12]
    3088:	bl	0 <memcpy>
    308c:	ldr	r2, [r5, #4]
    3090:	ldrh	r3, [sl, #4]
    3094:	ldr	r0, [sl]
    3098:	ldr	r1, [r2, #4]
    309c:	add	r2, r8, r1
    30a0:	str	r0, [r8, r1]
    30a4:	add	r8, r2, #6
    30a8:	strh	r3, [r2, #4]
    30ac:	str	r5, [r6, #-8]
    30b0:	ldr	r5, [r5]
    30b4:	str	fp, [r6, #-4]
    30b8:	cmp	r5, #0
    30bc:	bne	302c <build_compound_dict.isra.17+0xd0>
    30c0:	movw	r3, #0
    30c4:	movt	r3, #0
    30c8:	mov	r1, r7
    30cc:	mov	r2, #16
    30d0:	mov	r0, r9
    30d4:	bl	0 <qsort>
    30d8:	mov	r0, r9
    30dc:	add	sp, sp, #4
    30e0:	ldrd	r4, [sp]
    30e4:	ldrd	r6, [sp, #8]
    30e8:	ldrd	r8, [sp, #16]
    30ec:	ldrd	sl, [sp, #24]
    30f0:	add	sp, sp, #32
    30f4:	pop	{pc}		; (ldr pc, [sp], #4)
    30f8:	mov	r9, #0
    30fc:	b	30d8 <build_compound_dict.isra.17+0x17c>
    3100:	mov	r9, r5
    3104:	str	r5, [r1]
    3108:	b	30d8 <build_compound_dict.isra.17+0x17c>

0000310c <gen_enum_parser>:
    310c:	ldrh	r2, [r1, #8]
    3110:	mov	r3, #0
    3114:	strd	r4, [sp, #-12]!
    3118:	str	lr, [sp, #8]
    311c:	sub	sp, sp, #268	; 0x10c
    3120:	str	r3, [sp, #12]
    3124:	sub	r2, r2, #3
    3128:	str	r3, [sp, #16]
    312c:	cmp	r2, #1
    3130:	str	r3, [sp, #20]
    3134:	str	r3, [sp, #24]
    3138:	str	r3, [sp, #28]
    313c:	str	r3, [sp, #32]
    3140:	str	r3, [sp, #36]	; 0x24
    3144:	str	r3, [sp, #40]	; 0x28
    3148:	bhi	33cc <gen_enum_parser+0x2c0>
    314c:	mov	r5, r1
    3150:	mov	r4, r0
    3154:	add	r1, sp, #12
    3158:	ldr	r0, [r5, #20]
    315c:	bl	2f5c <build_compound_dict.isra.17>
    3160:	cmp	r0, #0
    3164:	str	r0, [sp, #16]
    3168:	beq	3358 <gen_enum_parser+0x24c>
    316c:	movw	r2, #0
    3170:	movt	r2, #0
    3174:	str	r5, [sp, #28]
    3178:	movw	r3, #0
    317c:	movt	r3, #0
    3180:	mov	ip, #2
    3184:	mov	r1, #0
    3188:	add	r0, sp, #44	; 0x2c
    318c:	strd	r2, [sp, #20]
    3190:	mov	r2, #220	; 0xdc
    3194:	str	ip, [sp, #32]
    3198:	bl	0 <memset>
    319c:	add	r2, sp, #44	; 0x2c
    31a0:	mov	r1, r5
    31a4:	ldr	r0, [r5, #12]
    31a8:	bl	0 <__flatcc_fb_scoped_symbol_name>
    31ac:	add	r2, sp, #44	; 0x2c
    31b0:	mov	r0, r4
    31b4:	movw	r1, #0
    31b8:	movt	r1, #0
    31bc:	bl	0 <println>
    31c0:	ldr	r3, [r4, #220]	; 0xdc
    31c4:	movw	r1, #0
    31c8:	movt	r1, #0
    31cc:	mov	r0, r4
    31d0:	add	r3, r3, #2
    31d4:	str	r3, [r4, #220]	; 0xdc
    31d8:	bl	0 <println>
    31dc:	ldr	r3, [r4, #220]	; 0xdc
    31e0:	cmp	r3, #0
    31e4:	beq	33b0 <gen_enum_parser+0x2a4>
    31e8:	cmp	r3, #1
    31ec:	moveq	r3, #0
    31f0:	streq	r3, [r4, #220]	; 0xdc
    31f4:	beq	33b0 <gen_enum_parser+0x2a4>
    31f8:	sub	r3, r3, #2
    31fc:	movw	r1, #0
    3200:	movt	r1, #0
    3204:	mov	r0, r4
    3208:	str	r3, [r4, #220]	; 0xdc
    320c:	bl	0 <println>
    3210:	ldr	r3, [r4, #220]	; 0xdc
    3214:	ldr	r2, [sp, #12]
    3218:	add	r3, r3, #1
    321c:	cmp	r2, #0
    3220:	str	r3, [r4, #220]	; 0xdc
    3224:	beq	3300 <gen_enum_parser+0x1f4>
    3228:	mov	r0, r4
    322c:	movw	r1, #0
    3230:	movt	r1, #0
    3234:	bl	0 <println>
    3238:	mov	r0, r4
    323c:	movw	r1, #0
    3240:	movt	r1, #0
    3244:	bl	0 <println>
    3248:	mov	r0, r4
    324c:	movw	r1, #0
    3250:	movt	r1, #0
    3254:	bl	0 <println>
    3258:	mov	r0, r4
    325c:	movw	r1, #0
    3260:	movt	r1, #0
    3264:	bl	0 <println>
    3268:	mov	r0, r4
    326c:	movw	r1, #0
    3270:	movt	r1, #0
    3274:	bl	0 <println>
    3278:	ldr	r3, [sp, #12]
    327c:	mov	ip, #0
    3280:	add	r1, sp, #16
    3284:	mov	r2, ip
    3288:	mov	r0, r4
    328c:	str	ip, [sp]
    3290:	sub	r3, r3, #1
    3294:	bl	55c <gen_trie>
    3298:	movw	r1, #0
    329c:	movt	r1, #0
    32a0:	mov	r0, r4
    32a4:	bl	0 <println>
    32a8:	ldr	r3, [r4, #220]	; 0xdc
    32ac:	cmp	r3, #0
    32b0:	beq	33e8 <gen_enum_parser+0x2dc>
    32b4:	sub	r3, r3, #1
    32b8:	mov	r0, r4
    32bc:	movw	r1, #0
    32c0:	movt	r1, #0
    32c4:	str	r3, [r4, #220]	; 0xdc
    32c8:	bl	0 <println>
    32cc:	mov	r0, r4
    32d0:	movw	r1, #0
    32d4:	movt	r1, #0
    32d8:	bl	0 <println>
    32dc:	ldr	r0, [sp, #16]
    32e0:	cmp	r0, #0
    32e4:	beq	32ec <gen_enum_parser+0x1e0>
    32e8:	bl	0 <free>
    32ec:	mov	r0, #0
    32f0:	add	sp, sp, #268	; 0x10c
    32f4:	ldrd	r4, [sp]
    32f8:	add	sp, sp, #8
    32fc:	pop	{pc}		; (ldr pc, [sp], #4)
    3300:	mov	r0, r4
    3304:	movw	r1, #0
    3308:	movt	r1, #0
    330c:	bl	0 <println>
    3310:	mov	r0, r4
    3314:	movw	r1, #0
    3318:	movt	r1, #0
    331c:	bl	0 <println>
    3320:	movw	r1, #0
    3324:	movt	r1, #0
    3328:	mov	r0, r4
    332c:	bl	0 <println>
    3330:	ldr	r3, [r4, #220]	; 0xdc
    3334:	cmp	r3, #0
    3338:	bne	32b4 <gen_enum_parser+0x1a8>
    333c:	movw	r1, #0
    3340:	movt	r1, #0
    3344:	ldr	r3, [pc, #184]	; 3404 <gen_enum_parser+0x2f8>
    3348:	movw	r0, #0
    334c:	movt	r0, #0
    3350:	movw	r2, #1269	; 0x4f5
    3354:	bl	0 <__assert_fail>
    3358:	ldr	r3, [sp, #12]
    335c:	cmp	r3, #0
    3360:	ble	316c <gen_enum_parser+0x60>
    3364:	movw	r1, #0
    3368:	movt	r1, #0
    336c:	movw	r3, #0
    3370:	movt	r3, #0
    3374:	movw	r2, #0
    3378:	movt	r2, #0
    337c:	str	r1, [sp]
    3380:	movw	r1, #0
    3384:	movt	r1, #0
    3388:	ldr	r0, [r3]
    338c:	movw	r3, #1249	; 0x4e1
    3390:	bl	0 <fprintf>
    3394:	movw	r1, #0
    3398:	movt	r1, #0
    339c:	ldr	r3, [pc, #96]	; 3404 <gen_enum_parser+0x2f8>
    33a0:	movw	r0, #0
    33a4:	movt	r0, #0
    33a8:	movw	r2, #1249	; 0x4e1
    33ac:	bl	0 <__assert_fail>
    33b0:	movw	r1, #0
    33b4:	movt	r1, #0
    33b8:	ldr	r3, [pc, #68]	; 3404 <gen_enum_parser+0x2f8>
    33bc:	movw	r0, #0
    33c0:	movt	r0, #0
    33c4:	movw	r2, #1263	; 0x4ef
    33c8:	bl	0 <__assert_fail>
    33cc:	movw	r1, #0
    33d0:	movt	r1, #0
    33d4:	ldr	r3, [pc, #40]	; 3404 <gen_enum_parser+0x2f8>
    33d8:	movw	r0, #0
    33dc:	movt	r0, #0
    33e0:	movw	r2, #1246	; 0x4de
    33e4:	bl	0 <__assert_fail>
    33e8:	movw	r1, #0
    33ec:	movt	r1, #0
    33f0:	ldr	r3, [pc, #12]	; 3404 <gen_enum_parser+0x2f8>
    33f4:	movw	r0, #0
    33f8:	movt	r0, #0
    33fc:	movw	r2, #1278	; 0x4fe
    3400:	bl	0 <__assert_fail>
    3404:	.word	0x00000144

00003408 <count_visible_enum_symbol>:
    3408:	ldrh	r3, [r1, #8]
    340c:	sub	r3, r3, #3
    3410:	cmp	r3, #1
    3414:	bxhi	lr
    3418:	str	r4, [sp, #-8]!
    341c:	mov	r4, r0
    3420:	ldr	r0, [r0, #4]
    3424:	ldr	r1, [r1, #16]
    3428:	str	lr, [sp, #4]
    342c:	add	r0, r0, #172	; 0xac
    3430:	bl	0 <ptr_set_find_item>
    3434:	cmp	r0, #0
    3438:	beq	3448 <count_visible_enum_symbol+0x40>
    343c:	ldr	r3, [r4]
    3440:	add	r3, r3, #1
    3444:	str	r3, [r4]
    3448:	ldr	r4, [sp]
    344c:	add	sp, sp, #4
    3450:	pop	{pc}		; (ldr pc, [sp], #4)

00003454 <install_visible_enum_symbol>:
    3454:	ldrh	r3, [r1, #8]
    3458:	sub	r3, r3, #3
    345c:	cmp	r3, #1
    3460:	bxhi	lr
    3464:	strd	r4, [sp, #-16]!
    3468:	mov	r5, r0
    346c:	mov	r4, r1
    3470:	ldr	r0, [r0, #4]
    3474:	ldr	r1, [r1, #16]
    3478:	str	r6, [sp, #8]
    347c:	str	lr, [sp, #12]
    3480:	add	r0, r0, #172	; 0xac
    3484:	bl	0 <ptr_set_find_item>
    3488:	cmp	r0, #0
    348c:	beq	34ac <install_visible_enum_symbol+0x58>
    3490:	ldr	r2, [r4, #4]
    3494:	ldr	r3, [r5, #8]
    3498:	ldrd	r0, [r2]
    349c:	add	r2, r3, #16
    34a0:	strd	r0, [r3]
    34a4:	str	r4, [r3, #8]
    34a8:	str	r2, [r5, #8]
    34ac:	ldrd	r4, [sp]
    34b0:	ldr	r6, [sp, #8]
    34b4:	add	sp, sp, #12
    34b8:	pop	{pc}		; (ldr pc, [sp], #4)

000034bc <count_symbol>:
    34bc:	ldrh	r3, [r1, #8]
    34c0:	cmp	r3, #4
    34c4:	bxhi	lr
    34c8:	strd	r4, [sp, #-16]!
    34cc:	mov	r4, r0
    34d0:	mov	r5, r1
    34d4:	ldr	r0, [r0, #40]	; 0x28
    34d8:	ldr	r1, [r1, #16]
    34dc:	str	r6, [sp, #8]
    34e0:	str	lr, [sp, #12]
    34e4:	add	r0, r0, #172	; 0xac
    34e8:	bl	0 <ptr_set_find_item>
    34ec:	cmp	r0, #0
    34f0:	beq	357c <count_symbol+0xc0>
    34f4:	ldr	ip, [r4]
    34f8:	cmp	ip, #0
    34fc:	beq	3530 <count_symbol+0x74>
    3500:	ldr	r3, [r5, #12]
    3504:	ldr	r3, [r3]
    3508:	cmp	r3, #0
    350c:	beq	35a8 <count_symbol+0xec>
    3510:	mov	ip, #0
    3514:	ldr	r2, [r3, #4]
    3518:	ldr	r3, [r3]
    351c:	ldr	r2, [r2, #4]
    3520:	cmp	r3, #0
    3524:	add	r2, r2, #1
    3528:	add	ip, ip, r2
    352c:	bne	3514 <count_symbol+0x58>
    3530:	ldr	r3, [r5, #4]
    3534:	ldr	r1, [r4, #12]
    3538:	ldrh	r2, [r5, #8]
    353c:	ldr	r3, [r3, #4]
    3540:	add	r3, r3, r1
    3544:	add	r3, r3, #1
    3548:	add	ip, r3, ip
    354c:	str	ip, [r4, #12]
    3550:	cmp	r2, #4
    3554:	ldrls	pc, [pc, r2, lsl #2]
    3558:	b	357c <count_symbol+0xc0>
    355c:	.word	0x0000358c
    3560:	.word	0x0000358c
    3564:	.word	0x0000357c
    3568:	.word	0x00003570
    356c:	.word	0x00003570
    3570:	ldr	r3, [r4, #8]
    3574:	add	r3, r3, #1
    3578:	str	r3, [r4, #8]
    357c:	ldrd	r4, [sp]
    3580:	ldr	r6, [sp, #8]
    3584:	add	sp, sp, #12
    3588:	pop	{pc}		; (ldr pc, [sp], #4)
    358c:	ldr	r3, [r4, #4]
    3590:	ldr	r6, [sp, #8]
    3594:	add	r3, r3, #1
    3598:	str	r3, [r4, #4]
    359c:	ldrd	r4, [sp]
    35a0:	add	sp, sp, #12
    35a4:	pop	{pc}		; (ldr pc, [sp], #4)
    35a8:	mov	ip, r3
    35ac:	b	3530 <count_symbol+0x74>

000035b0 <__flatcc_fb_gen_c_json_parser>:
    35b0:	ldr	r3, [r0, #208]	; 0xd0
    35b4:	movw	r1, #0
    35b8:	movt	r1, #0
    35bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    35c0:	mov	r4, r0
    35c4:	ldr	r2, [r3, #164]	; 0xa4
    35c8:	strd	r6, [sp, #8]
    35cc:	strd	r8, [sp, #16]
    35d0:	strd	sl, [sp, #24]
    35d4:	str	lr, [sp, #32]
    35d8:	sub	sp, sp, #284	; 0x11c
    35dc:	bl	0 <println>
    35e0:	ldr	r3, [r4, #208]	; 0xd0
    35e4:	mov	r0, r4
    35e8:	movw	r1, #0
    35ec:	movt	r1, #0
    35f0:	ldr	r2, [r3, #164]	; 0xa4
    35f4:	bl	0 <println>
    35f8:	mov	r0, r4
    35fc:	movw	r1, #0
    3600:	movt	r1, #0
    3604:	bl	0 <println>
    3608:	mov	r0, r4
    360c:	movw	r1, #0
    3610:	movt	r1, #0
    3614:	bl	0 <println>
    3618:	mov	r0, r4
    361c:	movw	r1, #0
    3620:	movt	r1, #0
    3624:	bl	0 <println>
    3628:	mov	r0, r4
    362c:	movw	r1, #0
    3630:	movt	r1, #0
    3634:	bl	0 <println>
    3638:	mov	r0, r4
    363c:	movw	r2, #0
    3640:	movt	r2, #0
    3644:	movw	r1, #0
    3648:	movt	r1, #0
    364c:	bl	0 <__flatcc_fb_gen_c_includes>
    3650:	ldr	r3, [r4, #212]	; 0xd4
    3654:	ldr	r3, [r3, #140]	; 0x8c
    3658:	cmp	r3, #0
    365c:	bne	4ad4 <__flatcc_fb_gen_c_json_parser+0x1524>
    3660:	mov	r0, r4
    3664:	movw	r1, #0
    3668:	movt	r1, #0
    366c:	bl	0 <println>
    3670:	ldr	r6, [r4, #208]	; 0xd0
    3674:	add	r0, sp, #60	; 0x3c
    3678:	mov	r2, #220	; 0xdc
    367c:	mov	r1, #0
    3680:	ldr	r5, [r6, #52]	; 0x34
    3684:	bl	0 <memset>
    3688:	cmp	r5, #0
    368c:	beq	369c <__flatcc_fb_gen_c_json_parser+0xec>
    3690:	ldrh	r3, [r5, #8]
    3694:	cmp	r3, #1
    3698:	bls	4b44 <__flatcc_fb_gen_c_json_parser+0x1594>
    369c:	ldr	r5, [r6, #40]	; 0x28
    36a0:	cmp	r5, #0
    36a4:	beq	3770 <__flatcc_fb_gen_c_json_parser+0x1c0>
    36a8:	movw	r7, #0
    36ac:	movt	r7, #0
    36b0:	movw	r6, #0
    36b4:	movt	r6, #0
    36b8:	movw	r8, #0
    36bc:	movt	r8, #0
    36c0:	ldrh	r3, [r5, #8]
    36c4:	cmp	r3, #4
    36c8:	ldrls	pc, [pc, r3, lsl #2]
    36cc:	b	3760 <__flatcc_fb_gen_c_json_parser+0x1b0>
    36d0:	.word	0x000038f8
    36d4:	.word	0x00003848
    36d8:	.word	0x00003760
    36dc:	.word	0x00003884
    36e0:	.word	0x000036e4
    36e4:	add	r2, sp, #60	; 0x3c
    36e8:	mov	r1, r5
    36ec:	ldr	r0, [r5, #12]
    36f0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    36f4:	add	r2, sp, #60	; 0x3c
    36f8:	mov	r0, r4
    36fc:	movw	r1, #0
    3700:	movt	r1, #0
    3704:	bl	0 <println>
    3708:	add	r2, sp, #60	; 0x3c
    370c:	mov	r0, r4
    3710:	movw	r1, #0
    3714:	movt	r1, #0
    3718:	bl	0 <println>
    371c:	add	r2, sp, #60	; 0x3c
    3720:	mov	r1, r7
    3724:	mov	r0, r4
    3728:	bl	0 <println>
    372c:	ldr	r3, [r4, #220]	; 0xdc
    3730:	mov	r1, r6
    3734:	mov	r0, r4
    3738:	add	r3, r3, #2
    373c:	str	r3, [r4, #220]	; 0xdc
    3740:	bl	0 <println>
    3744:	ldr	r3, [r4, #220]	; 0xdc
    3748:	cmp	r3, #0
    374c:	beq	4cac <__flatcc_fb_gen_c_json_parser+0x16fc>
    3750:	cmp	r3, #1
    3754:	beq	4ca4 <__flatcc_fb_gen_c_json_parser+0x16f4>
    3758:	sub	r3, r3, #2
    375c:	str	r3, [r4, #220]	; 0xdc
    3760:	ldr	r5, [r5]
    3764:	cmp	r5, #0
    3768:	bne	36c0 <__flatcc_fb_gen_c_json_parser+0x110>
    376c:	ldr	r6, [r4, #208]	; 0xd0
    3770:	mov	r2, r4
    3774:	movw	r1, #0
    3778:	movt	r1, #0
    377c:	ldr	r0, [r6, #60]	; 0x3c
    3780:	bl	0 <fb_scope_table_visit>
    3784:	ldr	r3, [r4, #208]	; 0xd0
    3788:	mov	r0, r4
    378c:	movw	r1, #0
    3790:	movt	r1, #0
    3794:	ldr	r2, [r3, #160]	; 0xa0
    3798:	bl	0 <println>
    379c:	ldr	r3, [r4, #220]	; 0xdc
    37a0:	movw	r1, #0
    37a4:	movt	r1, #0
    37a8:	mov	r0, r4
    37ac:	add	r3, r3, #2
    37b0:	str	r3, [r4, #220]	; 0xdc
    37b4:	bl	0 <println>
    37b8:	ldr	r3, [r4, #220]	; 0xdc
    37bc:	cmp	r3, #0
    37c0:	beq	4ce4 <__flatcc_fb_gen_c_json_parser+0x1734>
    37c4:	cmp	r3, #1
    37c8:	moveq	r3, #0
    37cc:	streq	r3, [r4, #220]	; 0xdc
    37d0:	beq	4ce4 <__flatcc_fb_gen_c_json_parser+0x1734>
    37d4:	sub	r3, r3, #2
    37d8:	movw	r1, #0
    37dc:	movt	r1, #0
    37e0:	mov	r0, r4
    37e4:	str	r3, [r4, #220]	; 0xdc
    37e8:	bl	0 <println>
    37ec:	ldr	r3, [r4, #208]	; 0xd0
    37f0:	ldr	r5, [r3, #40]	; 0x28
    37f4:	cmp	r5, #0
    37f8:	addeq	r6, sp, #32
    37fc:	beq	3950 <__flatcc_fb_gen_c_json_parser+0x3a0>
    3800:	movw	r3, #0
    3804:	movt	r3, #0
    3808:	movw	r7, #0
    380c:	movt	r7, #0
    3810:	movw	r9, #0
    3814:	movt	r9, #0
    3818:	add	r6, sp, #32
    381c:	str	r9, [sp, #8]
    3820:	str	r3, [sp, #20]
    3824:	ldrh	r3, [r5, #8]
    3828:	cmp	r3, #4
    382c:	ldrls	pc, [pc, r3, lsl #2]
    3830:	b	3940 <__flatcc_fb_gen_c_json_parser+0x390>
    3834:	.word	0x00004284
    3838:	.word	0x00003e78
    383c:	.word	0x00003940
    3840:	.word	0x00004274
    3844:	.word	0x0000391c
    3848:	add	r2, sp, #60	; 0x3c
    384c:	mov	r1, r5
    3850:	ldr	r0, [r5, #12]
    3854:	bl	0 <__flatcc_fb_scoped_symbol_name>
    3858:	add	r2, sp, #60	; 0x3c
    385c:	mov	r0, r4
    3860:	movw	r1, #0
    3864:	movt	r1, #0
    3868:	bl	0 <println>
    386c:	add	r2, sp, #60	; 0x3c
    3870:	movw	r1, #0
    3874:	movt	r1, #0
    3878:	mov	r0, r4
    387c:	bl	0 <println>
    3880:	b	3760 <__flatcc_fb_gen_c_json_parser+0x1b0>
    3884:	add	r2, sp, #60	; 0x3c
    3888:	mov	r1, r5
    388c:	ldr	r0, [r5, #12]
    3890:	bl	0 <__flatcc_fb_scoped_symbol_name>
    3894:	add	r2, sp, #60	; 0x3c
    3898:	mov	r1, r7
    389c:	mov	r0, r4
    38a0:	bl	0 <println>
    38a4:	ldr	r3, [r4, #220]	; 0xdc
    38a8:	add	r2, sp, #60	; 0x3c
    38ac:	mov	r1, r6
    38b0:	mov	r0, r4
    38b4:	add	r3, r3, #2
    38b8:	str	r3, [r4, #220]	; 0xdc
    38bc:	bl	0 <println>
    38c0:	ldr	r3, [r4, #220]	; 0xdc
    38c4:	cmp	r3, #0
    38c8:	beq	38dc <__flatcc_fb_gen_c_json_parser+0x32c>
    38cc:	cmp	r3, #1
    38d0:	bne	3758 <__flatcc_fb_gen_c_json_parser+0x1a8>
    38d4:	mov	r3, #0
    38d8:	str	r3, [r4, #220]	; 0xdc
    38dc:	movw	r1, #0
    38e0:	movt	r1, #0
    38e4:	ldr	r3, [pc, #3672]	; 4744 <__flatcc_fb_gen_c_json_parser+0x1194>
    38e8:	movw	r0, #0
    38ec:	movt	r0, #0
    38f0:	movw	r2, #1747	; 0x6d3
    38f4:	bl	0 <__assert_fail>
    38f8:	add	r2, sp, #60	; 0x3c
    38fc:	mov	r1, r5
    3900:	ldr	r0, [r5, #12]
    3904:	bl	0 <__flatcc_fb_scoped_symbol_name>
    3908:	add	r2, sp, #60	; 0x3c
    390c:	mov	r1, r8
    3910:	mov	r0, r4
    3914:	bl	0 <println>
    3918:	b	3760 <__flatcc_fb_gen_c_json_parser+0x1b0>
    391c:	mov	r1, r5
    3920:	mov	r0, r4
    3924:	bl	10b0 <gen_union_parser>
    3928:	mov	r1, r5
    392c:	mov	r0, r4
    3930:	bl	15e8 <gen_union_accept_type>
    3934:	mov	r1, r5
    3938:	mov	r0, r4
    393c:	bl	310c <gen_enum_parser>
    3940:	ldr	r5, [r5]
    3944:	cmp	r5, #0
    3948:	bne	3824 <__flatcc_fb_gen_c_json_parser+0x274>
    394c:	ldr	r3, [r4, #208]	; 0xd0
    3950:	mov	r2, r4
    3954:	movw	r1, #0
    3958:	movt	r1, #0
    395c:	ldr	r0, [r3, #60]	; 0x3c
    3960:	bl	0 <fb_scope_table_visit>
    3964:	ldr	r0, [r4, #208]	; 0xd0
    3968:	mov	r3, #0
    396c:	mov	ip, #1
    3970:	add	r2, sp, #60	; 0x3c
    3974:	movw	r1, #0
    3978:	movt	r1, #0
    397c:	str	r3, [sp, #32]
    3980:	str	r3, [r6, #4]
    3984:	str	r3, [r6, #8]
    3988:	str	r3, [r6, #12]
    398c:	str	r3, [r6, #16]
    3990:	str	r3, [r6, #20]
    3994:	str	r3, [r6, #24]
    3998:	ldr	r9, [r0, #60]	; 0x3c
    399c:	str	ip, [sp, #60]	; 0x3c
    39a0:	str	r0, [sp, #100]	; 0x64
    39a4:	str	r3, [sp, #64]	; 0x40
    39a8:	str	r3, [sp, #68]	; 0x44
    39ac:	mov	r0, r9
    39b0:	str	r3, [sp, #72]	; 0x48
    39b4:	str	r3, [sp, #76]	; 0x4c
    39b8:	str	r3, [sp, #80]	; 0x50
    39bc:	str	r3, [sp, #84]	; 0x54
    39c0:	str	r3, [sp, #88]	; 0x58
    39c4:	str	r3, [sp, #92]	; 0x5c
    39c8:	str	r3, [sp, #96]	; 0x60
    39cc:	bl	0 <fb_scope_table_visit>
    39d0:	ldr	sl, [sp, #64]	; 0x40
    39d4:	mov	r1, #8
    39d8:	mov	r0, sl
    39dc:	bl	0 <calloc>
    39e0:	ldr	r3, [sp, #68]	; 0x44
    39e4:	mov	fp, r0
    39e8:	mov	r1, #8
    39ec:	mov	r0, r3
    39f0:	str	r3, [sp, #8]
    39f4:	str	fp, [sp, #76]	; 0x4c
    39f8:	bl	0 <calloc>
    39fc:	ldr	r7, [sp, #72]	; 0x48
    3a00:	mov	r5, r0
    3a04:	str	r5, [sp, #80]	; 0x50
    3a08:	mov	r0, r7
    3a0c:	bl	0 <malloc>
    3a10:	cmp	sl, #0
    3a14:	str	r0, [sp, #84]	; 0x54
    3a18:	movle	r8, #0
    3a1c:	movgt	r8, #1
    3a20:	str	fp, [sp, #88]	; 0x58
    3a24:	cmp	fp, #0
    3a28:	str	r5, [sp, #92]	; 0x5c
    3a2c:	movne	r8, #0
    3a30:	str	r0, [sp, #96]	; 0x60
    3a34:	cmp	r8, #0
    3a38:	bne	3c8c <__flatcc_fb_gen_c_json_parser+0x6dc>
    3a3c:	ldr	sl, [sp, #8]
    3a40:	cmp	sl, #0
    3a44:	movle	sl, #0
    3a48:	movgt	sl, #1
    3a4c:	cmp	r5, #0
    3a50:	movne	sl, #0
    3a54:	cmp	sl, #0
    3a58:	bne	3c8c <__flatcc_fb_gen_c_json_parser+0x6dc>
    3a5c:	adds	r5, r7, #0
    3a60:	movne	r5, #1
    3a64:	cmp	r0, #0
    3a68:	movne	r5, #0
    3a6c:	cmp	r5, #0
    3a70:	bne	3c8c <__flatcc_fb_gen_c_json_parser+0x6dc>
    3a74:	add	r2, sp, #60	; 0x3c
    3a78:	mov	r0, r9
    3a7c:	movw	r1, #0
    3a80:	movt	r1, #0
    3a84:	bl	0 <fb_scope_table_visit>
    3a88:	ldr	r1, [sp, #64]	; 0x40
    3a8c:	ldr	r0, [sp, #76]	; 0x4c
    3a90:	bl	17d0 <sort_entries>
    3a94:	ldr	r1, [sp, #68]	; 0x44
    3a98:	ldr	r0, [sp, #80]	; 0x50
    3a9c:	bl	17d0 <sort_entries>
    3aa0:	ldr	r7, [sp, #68]	; 0x44
    3aa4:	cmp	r7, #0
    3aa8:	streq	r7, [sp, #32]
    3aac:	beq	3b34 <__flatcc_fb_gen_c_json_parser+0x584>
    3ab0:	lsl	r0, r7, #4
    3ab4:	bl	0 <malloc>
    3ab8:	subs	r9, r0, #0
    3abc:	beq	4c44 <__flatcc_fb_gen_c_json_parser+0x1694>
    3ac0:	cmp	r7, #0
    3ac4:	ble	3b14 <__flatcc_fb_gen_c_json_parser+0x564>
    3ac8:	ldr	sl, [sp, #80]	; 0x50
    3acc:	mov	r8, r9
    3ad0:	mov	fp, r5
    3ad4:	add	r3, sl, #4
    3ad8:	str	r3, [sp, #8]
    3adc:	mov	r3, r7
    3ae0:	mov	r7, sl
    3ae4:	mov	sl, r3
    3ae8:	ldr	r3, [sp, #8]
    3aec:	ldr	r0, [r3, r5, lsl #3]
    3af0:	str	r0, [r8]
    3af4:	bl	0 <strlen>
    3af8:	ldr	r3, [r7, r5, lsl #3]
    3afc:	add	r5, r5, #1
    3b00:	cmp	sl, r5
    3b04:	stmib	r8, {r0, r3, fp}
    3b08:	add	r8, r8, #16
    3b0c:	bne	3ae8 <__flatcc_fb_gen_c_json_parser+0x538>
    3b10:	mov	r7, sl
    3b14:	mov	r1, r7
    3b18:	movw	r3, #0
    3b1c:	movt	r3, #0
    3b20:	mov	r2, #16
    3b24:	mov	r0, r9
    3b28:	bl	0 <qsort>
    3b2c:	ldr	r7, [sp, #68]	; 0x44
    3b30:	str	r9, [sp, #32]
    3b34:	ldr	lr, [r4, #208]	; 0xd0
    3b38:	movw	r2, #0
    3b3c:	movt	r2, #0
    3b40:	movw	r3, #0
    3b44:	movt	r3, #0
    3b48:	mov	ip, #4
    3b4c:	mov	r5, #0
    3b50:	mov	r0, r4
    3b54:	movw	r1, #0
    3b58:	movt	r1, #0
    3b5c:	strd	r2, [sp, #36]	; 0x24
    3b60:	ldr	r2, [lr, #160]	; 0xa0
    3b64:	str	r5, [sp, #44]	; 0x2c
    3b68:	str	ip, [sp, #48]	; 0x30
    3b6c:	bl	0 <println>
    3b70:	ldr	r3, [r4, #220]	; 0xdc
    3b74:	movw	r1, #0
    3b78:	movt	r1, #0
    3b7c:	mov	r0, r4
    3b80:	add	r3, r3, #2
    3b84:	str	r3, [r4, #220]	; 0xdc
    3b88:	bl	0 <println>
    3b8c:	ldr	r3, [r4, #220]	; 0xdc
    3b90:	cmp	r3, r5
    3b94:	beq	4cc8 <__flatcc_fb_gen_c_json_parser+0x1718>
    3b98:	cmp	r3, #1
    3b9c:	streq	r5, [r4, #220]	; 0xdc
    3ba0:	beq	4cc8 <__flatcc_fb_gen_c_json_parser+0x1718>
    3ba4:	sub	r3, r3, #2
    3ba8:	movw	r1, #0
    3bac:	movt	r1, #0
    3bb0:	mov	r0, r4
    3bb4:	str	r3, [r4, #220]	; 0xdc
    3bb8:	bl	0 <println>
    3bbc:	ldr	r3, [r4, #220]	; 0xdc
    3bc0:	cmp	r7, #0
    3bc4:	add	r3, r3, #1
    3bc8:	str	r3, [r4, #220]	; 0xdc
    3bcc:	beq	4a60 <__flatcc_fb_gen_c_json_parser+0x14b0>
    3bd0:	mov	r0, r4
    3bd4:	movw	r1, #0
    3bd8:	movt	r1, #0
    3bdc:	bl	0 <println>
    3be0:	mov	r0, r4
    3be4:	movw	r1, #0
    3be8:	movt	r1, #0
    3bec:	bl	0 <println>
    3bf0:	mov	r0, r4
    3bf4:	movw	r1, #0
    3bf8:	movt	r1, #0
    3bfc:	bl	0 <println>
    3c00:	mov	r0, r4
    3c04:	movw	r1, #0
    3c08:	movt	r1, #0
    3c0c:	bl	0 <println>
    3c10:	mov	r0, r4
    3c14:	movw	r1, #0
    3c18:	movt	r1, #0
    3c1c:	bl	0 <println>
    3c20:	sub	r3, r7, #1
    3c24:	mov	r2, r5
    3c28:	str	r5, [sp]
    3c2c:	mov	r1, r6
    3c30:	mov	r0, r4
    3c34:	bl	55c <gen_trie>
    3c38:	movw	r1, #0
    3c3c:	movt	r1, #0
    3c40:	mov	r0, r4
    3c44:	bl	0 <println>
    3c48:	ldr	r3, [r4, #220]	; 0xdc
    3c4c:	cmp	r3, #0
    3c50:	beq	4e88 <__flatcc_fb_gen_c_json_parser+0x18d8>
    3c54:	sub	r3, r3, #1
    3c58:	mov	r0, r4
    3c5c:	movw	r1, #0
    3c60:	movt	r1, #0
    3c64:	str	r3, [r4, #220]	; 0xdc
    3c68:	bl	0 <println>
    3c6c:	mov	r0, r4
    3c70:	movw	r1, #0
    3c74:	movt	r1, #0
    3c78:	bl	0 <println>
    3c7c:	ldr	r0, [sp, #32]
    3c80:	cmp	r0, #0
    3c84:	beq	3c8c <__flatcc_fb_gen_c_json_parser+0x6dc>
    3c88:	bl	0 <free>
    3c8c:	add	r0, sp, #60	; 0x3c
    3c90:	bl	1b70 <clear_catalog>
    3c94:	ldr	r3, [r4, #208]	; 0xd0
    3c98:	ldr	r5, [r3, #52]	; 0x34
    3c9c:	cmp	r5, #0
    3ca0:	beq	4918 <__flatcc_fb_gen_c_json_parser+0x1368>
    3ca4:	ldrh	r6, [r5, #8]
    3ca8:	cmp	r6, #0
    3cac:	beq	4750 <__flatcc_fb_gen_c_json_parser+0x11a0>
    3cb0:	cmp	r6, #1
    3cb4:	bne	4918 <__flatcc_fb_gen_c_json_parser+0x1368>
    3cb8:	mov	r2, #220	; 0xdc
    3cbc:	mov	r1, #0
    3cc0:	add	r0, sp, #60	; 0x3c
    3cc4:	bl	0 <memset>
    3cc8:	add	r2, sp, #60	; 0x3c
    3ccc:	mov	r1, r5
    3cd0:	ldr	r0, [r5, #12]
    3cd4:	bl	0 <__flatcc_fb_scoped_symbol_name>
    3cd8:	ldr	r3, [r4, #208]	; 0xd0
    3cdc:	mov	r0, r4
    3ce0:	movw	r1, #0
    3ce4:	movt	r1, #0
    3ce8:	ldr	r2, [r3, #160]	; 0xa0
    3cec:	bl	0 <println>
    3cf0:	ldr	r3, [r4, #220]	; 0xdc
    3cf4:	movw	r1, #0
    3cf8:	movt	r1, #0
    3cfc:	mov	r0, r4
    3d00:	add	r3, r3, #2
    3d04:	str	r3, [r4, #220]	; 0xdc
    3d08:	bl	0 <println>
    3d0c:	ldr	r3, [r4, #220]	; 0xdc
    3d10:	cmp	r3, #0
    3d14:	beq	4e50 <__flatcc_fb_gen_c_json_parser+0x18a0>
    3d18:	cmp	r3, #1
    3d1c:	moveq	r3, #0
    3d20:	streq	r3, [r4, #220]	; 0xdc
    3d24:	beq	4e50 <__flatcc_fb_gen_c_json_parser+0x18a0>
    3d28:	sub	r3, r3, #2
    3d2c:	mov	r0, r4
    3d30:	movw	r1, #0
    3d34:	movt	r1, #0
    3d38:	str	r3, [r4, #220]	; 0xdc
    3d3c:	bl	0 <println>
    3d40:	ldr	r3, [r4, #220]	; 0xdc
    3d44:	mov	r0, r4
    3d48:	movw	r1, #0
    3d4c:	movt	r1, #0
    3d50:	add	r3, r3, #1
    3d54:	str	r3, [r4, #220]	; 0xdc
    3d58:	bl	0 <println>
    3d5c:	mov	r0, r4
    3d60:	movw	r1, #0
    3d64:	movt	r1, #0
    3d68:	bl	0 <println>
    3d6c:	mov	r0, r4
    3d70:	movw	r1, #0
    3d74:	movt	r1, #0
    3d78:	bl	0 <println>
    3d7c:	mov	r0, r4
    3d80:	movw	r1, #0
    3d84:	movt	r1, #0
    3d88:	bl	0 <println>
    3d8c:	movw	r1, #0
    3d90:	movt	r1, #0
    3d94:	mov	r0, r4
    3d98:	bl	0 <println>
    3d9c:	ldr	r2, [r4, #208]	; 0xd0
    3da0:	ldrh	r3, [r2, #16]
    3da4:	cmp	r3, #2
    3da8:	beq	4b28 <__flatcc_fb_gen_c_json_parser+0x1578>
    3dac:	movw	r1, #0
    3db0:	movt	r1, #0
    3db4:	mov	r0, r4
    3db8:	bl	0 <println>
    3dbc:	add	r2, sp, #60	; 0x3c
    3dc0:	mov	r0, r4
    3dc4:	movw	r1, #0
    3dc8:	movt	r1, #0
    3dcc:	bl	0 <println>
    3dd0:	mov	r0, r4
    3dd4:	movw	r1, #0
    3dd8:	movt	r1, #0
    3ddc:	bl	0 <println>
    3de0:	ldr	r3, [r4, #220]	; 0xdc
    3de4:	movw	r1, #0
    3de8:	movt	r1, #0
    3dec:	mov	r0, r4
    3df0:	add	r3, r3, #1
    3df4:	str	r3, [r4, #220]	; 0xdc
    3df8:	bl	0 <println>
    3dfc:	ldr	r3, [r4, #220]	; 0xdc
    3e00:	cmp	r3, #0
    3e04:	beq	4f28 <__flatcc_fb_gen_c_json_parser+0x1978>
    3e08:	sub	r3, r3, #1
    3e0c:	mov	r0, r4
    3e10:	movw	r1, #0
    3e14:	movt	r1, #0
    3e18:	str	r3, [r4, #220]	; 0xdc
    3e1c:	bl	0 <println>
    3e20:	mov	r0, r4
    3e24:	movw	r1, #0
    3e28:	movt	r1, #0
    3e2c:	bl	0 <println>
    3e30:	mov	r0, r4
    3e34:	movw	r1, #0
    3e38:	movt	r1, #0
    3e3c:	bl	0 <println>
    3e40:	movw	r1, #0
    3e44:	movt	r1, #0
    3e48:	mov	r0, r4
    3e4c:	bl	0 <println>
    3e50:	ldr	r3, [r4, #220]	; 0xdc
    3e54:	cmp	r3, #0
    3e58:	bne	48f0 <__flatcc_fb_gen_c_json_parser+0x1340>
    3e5c:	movw	r1, #0
    3e60:	movt	r1, #0
    3e64:	ldr	r3, [pc, #2268]	; 4748 <__flatcc_fb_gen_c_json_parser+0x1198>
    3e68:	movw	r0, #0
    3e6c:	movt	r0, #0
    3e70:	movw	r2, #1665	; 0x681
    3e74:	bl	0 <__assert_fail>
    3e78:	mov	r3, #0
    3e7c:	str	r3, [r6]
    3e80:	str	r3, [r6, #4]
    3e84:	str	r3, [r6, #8]
    3e88:	str	r3, [r6, #12]
    3e8c:	str	r3, [r6, #16]
    3e90:	str	r3, [r6, #20]
    3e94:	str	r3, [r6, #24]
    3e98:	ldrh	r3, [r5, #8]
    3e9c:	cmp	r3, #1
    3ea0:	bne	4d70 <__flatcc_fb_gen_c_json_parser+0x17c0>
    3ea4:	add	r1, sp, #28
    3ea8:	ldr	r0, [r5, #20]
    3eac:	bl	2f5c <build_compound_dict.isra.17>
    3eb0:	cmp	r0, #0
    3eb4:	str	r0, [sp, #32]
    3eb8:	beq	49a4 <__flatcc_fb_gen_c_json_parser+0x13f4>
    3ebc:	movw	r1, #0
    3ec0:	movt	r1, #0
    3ec4:	mov	ip, #1
    3ec8:	movw	r3, #0
    3ecc:	movt	r3, #0
    3ed0:	mov	r2, #220	; 0xdc
    3ed4:	str	r1, [sp, #36]	; 0x24
    3ed8:	add	r0, sp, #60	; 0x3c
    3edc:	mov	r1, #0
    3ee0:	str	r3, [sp, #40]	; 0x28
    3ee4:	str	r5, [sp, #44]	; 0x2c
    3ee8:	str	ip, [sp, #48]	; 0x30
    3eec:	bl	0 <memset>
    3ef0:	add	r2, sp, #60	; 0x3c
    3ef4:	mov	r1, r5
    3ef8:	ldr	r0, [r5, #12]
    3efc:	bl	0 <__flatcc_fb_scoped_symbol_name>
    3f00:	add	r2, sp, #60	; 0x3c
    3f04:	mov	r0, r4
    3f08:	movw	r1, #0
    3f0c:	movt	r1, #0
    3f10:	bl	0 <println>
    3f14:	mov	r1, r7
    3f18:	mov	r0, r4
    3f1c:	bl	0 <println>
    3f20:	ldr	r3, [r4, #220]	; 0xdc
    3f24:	mov	r0, r4
    3f28:	ldr	r1, [sp, #8]
    3f2c:	add	r3, r3, #1
    3f30:	str	r3, [r4, #220]	; 0xdc
    3f34:	bl	0 <println>
    3f38:	ldr	r3, [sp, #28]
    3f3c:	cmp	r3, #0
    3f40:	ble	3f84 <__flatcc_fb_gen_c_json_parser+0x9d4>
    3f44:	mov	r0, r4
    3f48:	movw	r1, #0
    3f4c:	movt	r1, #0
    3f50:	bl	0 <println>
    3f54:	mov	r0, r4
    3f58:	movw	r1, #0
    3f5c:	movt	r1, #0
    3f60:	bl	0 <println>
    3f64:	mov	r0, r4
    3f68:	movw	r1, #0
    3f6c:	movt	r1, #0
    3f70:	bl	0 <println>
    3f74:	movw	r1, #0
    3f78:	movt	r1, #0
    3f7c:	mov	r0, r4
    3f80:	bl	0 <println>
    3f84:	mov	r0, r4
    3f88:	movw	r1, #0
    3f8c:	movt	r1, #0
    3f90:	bl	0 <println>
    3f94:	mov	r0, r4
    3f98:	movw	r1, #0
    3f9c:	movt	r1, #0
    3fa0:	bl	0 <println>
    3fa4:	movw	r1, #0
    3fa8:	movt	r1, #0
    3fac:	mov	r0, r4
    3fb0:	bl	0 <println>
    3fb4:	ldr	r3, [r4, #220]	; 0xdc
    3fb8:	ldr	r2, [sp, #28]
    3fbc:	add	r3, r3, #1
    3fc0:	cmp	r2, #0
    3fc4:	str	r3, [r4, #220]	; 0xdc
    3fc8:	bne	4960 <__flatcc_fb_gen_c_json_parser+0x13b0>
    3fcc:	mov	r0, r4
    3fd0:	movw	r1, #0
    3fd4:	movt	r1, #0
    3fd8:	bl	0 <println>
    3fdc:	movw	r1, #0
    3fe0:	movt	r1, #0
    3fe4:	mov	r0, r4
    3fe8:	bl	0 <println>
    3fec:	movw	r1, #0
    3ff0:	movt	r1, #0
    3ff4:	mov	r0, r4
    3ff8:	bl	0 <println>
    3ffc:	ldr	r3, [r4, #220]	; 0xdc
    4000:	cmp	r3, #0
    4004:	beq	4dfc <__flatcc_fb_gen_c_json_parser+0x184c>
    4008:	sub	r3, r3, #1
    400c:	mov	r0, r4
    4010:	movw	r1, #0
    4014:	movt	r1, #0
    4018:	str	r3, [r4, #220]	; 0xdc
    401c:	bl	0 <println>
    4020:	movw	r1, #0
    4024:	movt	r1, #0
    4028:	mov	r0, r4
    402c:	bl	0 <println>
    4030:	ldr	r3, [sp, #28]
    4034:	cmp	r3, #0
    4038:	ble	4074 <__flatcc_fb_gen_c_json_parser+0xac4>
    403c:	ldr	r3, [r4, #220]	; 0xdc
    4040:	mov	r2, #0
    4044:	mov	r0, r4
    4048:	movw	r1, #0
    404c:	movt	r1, #0
    4050:	str	r2, [r4, #220]	; 0xdc
    4054:	str	r3, [r4, #228]	; 0xe4
    4058:	bl	0 <println>
    405c:	ldr	r3, [r4, #228]	; 0xe4
    4060:	movw	r1, #0
    4064:	movt	r1, #0
    4068:	mov	r0, r4
    406c:	str	r3, [r4, #220]	; 0xdc
    4070:	bl	0 <println>
    4074:	ldr	r3, [r4, #220]	; 0xdc
    4078:	cmp	r3, #0
    407c:	beq	4de0 <__flatcc_fb_gen_c_json_parser+0x1830>
    4080:	sub	r3, r3, #1
    4084:	mov	r0, r4
    4088:	movw	r1, #0
    408c:	movt	r1, #0
    4090:	str	r3, [r4, #220]	; 0xdc
    4094:	bl	0 <println>
    4098:	mov	r0, r4
    409c:	movw	r1, #0
    40a0:	movt	r1, #0
    40a4:	bl	0 <println>
    40a8:	ldr	r0, [sp, #32]
    40ac:	cmp	r0, #0
    40b0:	beq	40b8 <__flatcc_fb_gen_c_json_parser+0xb08>
    40b4:	bl	0 <free>
    40b8:	ldrh	r3, [r5, #8]
    40bc:	cmp	r3, #1
    40c0:	bne	4dc4 <__flatcc_fb_gen_c_json_parser+0x1814>
    40c4:	mov	r2, #220	; 0xdc
    40c8:	mov	r1, #0
    40cc:	add	r0, sp, #60	; 0x3c
    40d0:	bl	0 <memset>
    40d4:	add	r2, sp, #60	; 0x3c
    40d8:	mov	r1, r5
    40dc:	ldr	r0, [r5, #12]
    40e0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    40e4:	add	r2, sp, #60	; 0x3c
    40e8:	mov	r0, r4
    40ec:	movw	r1, #0
    40f0:	movt	r1, #0
    40f4:	bl	0 <println>
    40f8:	mov	r1, r7
    40fc:	mov	r0, r4
    4100:	bl	0 <println>
    4104:	ldr	r3, [r4, #220]	; 0xdc
    4108:	mov	r0, r4
    410c:	movw	r1, #0
    4110:	movt	r1, #0
    4114:	add	r3, r3, #1
    4118:	str	r3, [r4, #220]	; 0xdc
    411c:	bl	0 <println>
    4120:	mov	r0, r4
    4124:	movw	r1, #0
    4128:	movt	r1, #0
    412c:	bl	0 <println>
    4130:	mov	r0, r4
    4134:	movw	r1, #0
    4138:	movt	r1, #0
    413c:	bl	0 <println>
    4140:	ldrh	ip, [r5, #104]	; 0x68
    4144:	mov	r0, r4
    4148:	movw	r1, #0
    414c:	movt	r1, #0
    4150:	ldrd	r2, [r5, #112]	; 0x70
    4154:	str	ip, [sp]
    4158:	bl	0 <println>
    415c:	add	r2, sp, #60	; 0x3c
    4160:	mov	r0, r4
    4164:	movw	r1, #0
    4168:	movt	r1, #0
    416c:	bl	0 <println>
    4170:	mov	r0, r4
    4174:	movw	r1, #0
    4178:	movt	r1, #0
    417c:	bl	0 <println>
    4180:	mov	r0, r4
    4184:	movw	r1, #0
    4188:	movt	r1, #0
    418c:	bl	0 <println>
    4190:	ldr	r3, [r4, #220]	; 0xdc
    4194:	mov	r2, #0
    4198:	mov	r0, r4
    419c:	movw	r1, #0
    41a0:	movt	r1, #0
    41a4:	str	r2, [r4, #220]	; 0xdc
    41a8:	str	r3, [r4, #228]	; 0xe4
    41ac:	bl	0 <println>
    41b0:	ldr	r3, [r4, #228]	; 0xe4
    41b4:	movw	r1, #0
    41b8:	movt	r1, #0
    41bc:	mov	r0, r4
    41c0:	str	r3, [r4, #220]	; 0xdc
    41c4:	bl	0 <println>
    41c8:	ldr	r3, [r4, #220]	; 0xdc
    41cc:	cmp	r3, #0
    41d0:	beq	4d00 <__flatcc_fb_gen_c_json_parser+0x1750>
    41d4:	sub	r3, r3, #1
    41d8:	mov	r0, r4
    41dc:	movw	r1, #0
    41e0:	movt	r1, #0
    41e4:	str	r3, [r4, #220]	; 0xdc
    41e8:	bl	0 <println>
    41ec:	mov	r0, r4
    41f0:	movw	r1, #0
    41f4:	movt	r1, #0
    41f8:	bl	0 <println>
    41fc:	add	r2, sp, #60	; 0x3c
    4200:	mov	r0, r4
    4204:	movw	r1, #0
    4208:	movt	r1, #0
    420c:	bl	0 <println>
    4210:	mov	r1, r7
    4214:	mov	r0, r4
    4218:	bl	0 <println>
    421c:	ldr	r3, [r4, #220]	; 0xdc
    4220:	movw	r1, #0
    4224:	movt	r1, #0
    4228:	add	r2, sp, #60	; 0x3c
    422c:	mov	r0, r4
    4230:	add	r3, r3, #1
    4234:	str	r3, [r4, #220]	; 0xdc
    4238:	bl	0 <println>
    423c:	ldr	r3, [r4, #220]	; 0xdc
    4240:	cmp	r3, #0
    4244:	beq	4da8 <__flatcc_fb_gen_c_json_parser+0x17f8>
    4248:	sub	r3, r3, #1
    424c:	mov	r0, r4
    4250:	movw	r1, #0
    4254:	movt	r1, #0
    4258:	str	r3, [r4, #220]	; 0xdc
    425c:	bl	0 <println>
    4260:	movw	r1, #0
    4264:	movt	r1, #0
    4268:	mov	r0, r4
    426c:	bl	0 <println>
    4270:	b	3940 <__flatcc_fb_gen_c_json_parser+0x390>
    4274:	mov	r1, r5
    4278:	mov	r0, r4
    427c:	bl	310c <gen_enum_parser>
    4280:	b	3940 <__flatcc_fb_gen_c_json_parser+0x390>
    4284:	mov	r3, #0
    4288:	str	r3, [r6]
    428c:	str	r3, [r6, #4]
    4290:	str	r3, [r6, #8]
    4294:	str	r3, [r6, #12]
    4298:	str	r3, [r6, #16]
    429c:	str	r3, [r6, #20]
    42a0:	str	r3, [r6, #24]
    42a4:	ldrh	r8, [r5, #8]
    42a8:	cmp	r8, r3
    42ac:	bne	4d8c <__flatcc_fb_gen_c_json_parser+0x17dc>
    42b0:	add	r1, sp, #28
    42b4:	ldr	r0, [r5, #20]
    42b8:	bl	2f5c <build_compound_dict.isra.17>
    42bc:	cmp	r0, #0
    42c0:	str	r0, [sp, #32]
    42c4:	ldr	r3, [sp, #28]
    42c8:	beq	4aa8 <__flatcc_fb_gen_c_json_parser+0x14f8>
    42cc:	movw	r1, #0
    42d0:	movt	r1, #0
    42d4:	movw	r2, #0
    42d8:	movt	r2, #0
    42dc:	cmp	r3, #0
    42e0:	str	r1, [sp, #36]	; 0x24
    42e4:	str	r2, [sp, #40]	; 0x28
    42e8:	str	r5, [sp, #44]	; 0x2c
    42ec:	str	r8, [sp, #48]	; 0x30
    42f0:	str	r8, [sp, #52]	; 0x34
    42f4:	ble	4318 <__flatcc_fb_gen_c_json_parser+0xd68>
    42f8:	add	r3, r0, r3, lsl #4
    42fc:	ldr	r2, [r0, #12]
    4300:	add	r0, r0, #16
    4304:	cmp	r2, #0
    4308:	addne	r8, r8, #1
    430c:	cmp	r3, r0
    4310:	bne	42fc <__flatcc_fb_gen_c_json_parser+0xd4c>
    4314:	str	r8, [sp, #52]	; 0x34
    4318:	mov	r2, #220	; 0xdc
    431c:	mov	r1, #0
    4320:	add	r0, sp, #60	; 0x3c
    4324:	bl	0 <memset>
    4328:	add	r2, sp, #60	; 0x3c
    432c:	mov	r1, r5
    4330:	ldr	r0, [r5, #12]
    4334:	bl	0 <__flatcc_fb_scoped_symbol_name>
    4338:	add	r2, sp, #60	; 0x3c
    433c:	mov	r0, r4
    4340:	ldr	r1, [sp, #20]
    4344:	bl	0 <println>
    4348:	mov	r1, r7
    434c:	mov	r0, r4
    4350:	bl	0 <println>
    4354:	ldr	r3, [r4, #220]	; 0xdc
    4358:	mov	r0, r4
    435c:	ldr	r1, [sp, #8]
    4360:	add	r3, r3, #1
    4364:	str	r3, [r4, #220]	; 0xdc
    4368:	bl	0 <println>
    436c:	ldr	r3, [sp, #28]
    4370:	cmp	r3, #0
    4374:	ble	43b8 <__flatcc_fb_gen_c_json_parser+0xe08>
    4378:	mov	r0, r4
    437c:	movw	r1, #0
    4380:	movt	r1, #0
    4384:	bl	0 <println>
    4388:	mov	r0, r4
    438c:	movw	r1, #0
    4390:	movt	r1, #0
    4394:	bl	0 <println>
    4398:	mov	r0, r4
    439c:	movw	r1, #0
    43a0:	movt	r1, #0
    43a4:	bl	0 <println>
    43a8:	movw	r1, #0
    43ac:	movt	r1, #0
    43b0:	mov	r0, r4
    43b4:	bl	0 <println>
    43b8:	ldr	r3, [sp, #52]	; 0x34
    43bc:	cmp	r3, #0
    43c0:	bne	4a38 <__flatcc_fb_gen_c_json_parser+0x1488>
    43c4:	mov	r0, r4
    43c8:	movw	r1, #0
    43cc:	movt	r1, #0
    43d0:	bl	0 <println>
    43d4:	mov	r0, r4
    43d8:	movw	r1, #0
    43dc:	movt	r1, #0
    43e0:	bl	0 <println>
    43e4:	movw	r1, #0
    43e8:	movt	r1, #0
    43ec:	ldrd	r2, [r5, #96]	; 0x60
    43f0:	mov	r0, r4
    43f4:	bl	0 <println>
    43f8:	ldr	r2, [sp, #52]	; 0x34
    43fc:	cmp	r2, #0
    4400:	bne	4a20 <__flatcc_fb_gen_c_json_parser+0x1470>
    4404:	mov	r0, r4
    4408:	movw	r1, #0
    440c:	movt	r1, #0
    4410:	bl	0 <println>
    4414:	mov	r0, r4
    4418:	movw	r1, #0
    441c:	movt	r1, #0
    4420:	bl	0 <println>
    4424:	ldr	r3, [r4, #220]	; 0xdc
    4428:	movw	r1, #0
    442c:	movt	r1, #0
    4430:	mov	r0, r4
    4434:	add	r3, r3, #1
    4438:	str	r3, [r4, #220]	; 0xdc
    443c:	bl	0 <println>
    4440:	ldr	r3, [sp, #28]
    4444:	cmp	r3, #0
    4448:	ble	49fc <__flatcc_fb_gen_c_json_parser+0x144c>
    444c:	mov	r0, r4
    4450:	movw	r1, #0
    4454:	movt	r1, #0
    4458:	bl	0 <println>
    445c:	ldr	r3, [sp, #28]
    4460:	mov	ip, #0
    4464:	mov	r1, r6
    4468:	mov	r2, ip
    446c:	mov	r0, r4
    4470:	str	ip, [sp]
    4474:	sub	r3, r3, #1
    4478:	bl	55c <gen_trie>
    447c:	movw	r1, #0
    4480:	movt	r1, #0
    4484:	mov	r0, r4
    4488:	bl	0 <println>
    448c:	ldr	r3, [r4, #220]	; 0xdc
    4490:	cmp	r3, #0
    4494:	beq	4d54 <__flatcc_fb_gen_c_json_parser+0x17a4>
    4498:	sub	r3, r3, #1
    449c:	mov	r0, r4
    44a0:	movw	r1, #0
    44a4:	movt	r1, #0
    44a8:	str	r3, [r4, #220]	; 0xdc
    44ac:	bl	0 <println>
    44b0:	movw	r1, #0
    44b4:	movt	r1, #0
    44b8:	mov	r0, r4
    44bc:	bl	0 <println>
    44c0:	ldr	r2, [sp, #28]
    44c4:	cmp	r2, #0
    44c8:	ble	4614 <__flatcc_fb_gen_c_json_parser+0x1064>
    44cc:	movw	fp, #0
    44d0:	movt	fp, #0
    44d4:	strd	r6, [sp, #12]
    44d8:	movw	sl, #0
    44dc:	movt	sl, #0
    44e0:	mov	r9, #1
    44e4:	mov	r8, #0
    44e8:	b	4518 <__flatcc_fb_gen_c_json_parser+0xf68>
    44ec:	mov	r1, sl
    44f0:	mov	r0, r4
    44f4:	bl	0 <println>
    44f8:	ldr	r3, [r4, #220]	; 0xdc
    44fc:	mov	r9, #0
    4500:	ldr	r2, [sp, #28]
    4504:	add	r3, r3, #1
    4508:	str	r3, [r4, #220]	; 0xdc
    450c:	add	r8, r8, #1
    4510:	cmp	r8, r2
    4514:	bge	4594 <__flatcc_fb_gen_c_json_parser+0xfe4>
    4518:	ldr	r3, [sp, #32]
    451c:	add	r3, r3, r8, lsl #4
    4520:	ldr	r1, [r3, #8]
    4524:	ldrh	r0, [r1, #72]	; 0x48
    4528:	ands	r3, r0, #4
    452c:	bne	450c <__flatcc_fb_gen_c_json_parser+0xf5c>
    4530:	ldrh	ip, [r1, #24]
    4534:	sub	ip, ip, #14
    4538:	cmp	ip, #1
    453c:	bhi	4554 <__flatcc_fb_gen_c_json_parser+0xfa4>
    4540:	ldr	r3, [r1, #16]
    4544:	ldrh	r3, [r3, #8]
    4548:	sub	r3, r3, #4
    454c:	clz	r3, r3
    4550:	lsr	r3, r3, #5
    4554:	tst	r0, #256	; 0x100
    4558:	beq	450c <__flatcc_fb_gen_c_json_parser+0xf5c>
    455c:	ldrd	r0, [r1, #96]	; 0x60
    4560:	subs	r6, r0, r3
    4564:	sbc	r7, r1, r3, asr #31
    4568:	cmp	r9, #0
    456c:	mov	r2, r6
    4570:	mov	r3, r7
    4574:	bne	44ec <__flatcc_fb_gen_c_json_parser+0xf3c>
    4578:	mov	r1, fp
    457c:	mov	r0, r4
    4580:	bl	0 <println>
    4584:	ldr	r2, [sp, #28]
    4588:	add	r8, r8, #1
    458c:	cmp	r8, r2
    4590:	blt	4518 <__flatcc_fb_gen_c_json_parser+0xf68>
    4594:	cmp	r9, #0
    4598:	ldrd	r6, [sp, #12]
    459c:	bne	4614 <__flatcc_fb_gen_c_json_parser+0x1064>
    45a0:	ldr	r3, [r4, #220]	; 0xdc
    45a4:	cmp	r3, #0
    45a8:	beq	4e34 <__flatcc_fb_gen_c_json_parser+0x1884>
    45ac:	sub	r3, r3, #1
    45b0:	mov	r0, r4
    45b4:	movw	r1, #0
    45b8:	movt	r1, #0
    45bc:	str	r3, [r4, #220]	; 0xdc
    45c0:	bl	0 <println>
    45c4:	ldr	r3, [r4, #220]	; 0xdc
    45c8:	mov	r0, r4
    45cc:	movw	r1, #0
    45d0:	movt	r1, #0
    45d4:	add	r3, r3, #1
    45d8:	str	r3, [r4, #220]	; 0xdc
    45dc:	bl	0 <println>
    45e0:	movw	r1, #0
    45e4:	movt	r1, #0
    45e8:	mov	r0, r4
    45ec:	bl	0 <println>
    45f0:	ldr	r3, [r4, #220]	; 0xdc
    45f4:	cmp	r3, #0
    45f8:	beq	4e18 <__flatcc_fb_gen_c_json_parser+0x1868>
    45fc:	sub	r3, r3, #1
    4600:	movw	r1, #0
    4604:	movt	r1, #0
    4608:	mov	r0, r4
    460c:	str	r3, [r4, #220]	; 0xdc
    4610:	bl	0 <println>
    4614:	ldr	r3, [sp, #52]	; 0x34
    4618:	cmp	r3, #0
    461c:	bne	4a4c <__flatcc_fb_gen_c_json_parser+0x149c>
    4620:	mov	r0, r4
    4624:	movw	r1, #0
    4628:	movt	r1, #0
    462c:	bl	0 <println>
    4630:	mov	r0, r4
    4634:	movw	r1, #0
    4638:	movt	r1, #0
    463c:	bl	0 <println>
    4640:	ldr	r3, [r4, #220]	; 0xdc
    4644:	mov	r2, #0
    4648:	mov	r0, r4
    464c:	movw	r1, #0
    4650:	movt	r1, #0
    4654:	str	r2, [r4, #220]	; 0xdc
    4658:	str	r3, [r4, #228]	; 0xe4
    465c:	bl	0 <println>
    4660:	ldr	r3, [r4, #228]	; 0xe4
    4664:	movw	r1, #0
    4668:	movt	r1, #0
    466c:	mov	r0, r4
    4670:	str	r3, [r4, #220]	; 0xdc
    4674:	bl	0 <println>
    4678:	ldr	r3, [r4, #220]	; 0xdc
    467c:	cmp	r3, #0
    4680:	beq	4d38 <__flatcc_fb_gen_c_json_parser+0x1788>
    4684:	sub	r3, r3, #1
    4688:	mov	r0, r4
    468c:	movw	r1, #0
    4690:	movt	r1, #0
    4694:	str	r3, [r4, #220]	; 0xdc
    4698:	bl	0 <println>
    469c:	mov	r0, r4
    46a0:	movw	r1, #0
    46a4:	movt	r1, #0
    46a8:	bl	0 <println>
    46ac:	add	r2, sp, #60	; 0x3c
    46b0:	mov	r0, r4
    46b4:	movw	r1, #0
    46b8:	movt	r1, #0
    46bc:	bl	0 <println>
    46c0:	mov	r1, r7
    46c4:	mov	r0, r4
    46c8:	bl	0 <println>
    46cc:	ldr	r3, [r4, #220]	; 0xdc
    46d0:	movw	r1, #0
    46d4:	movt	r1, #0
    46d8:	add	r2, sp, #60	; 0x3c
    46dc:	mov	r0, r4
    46e0:	add	r3, r3, #1
    46e4:	str	r3, [r4, #220]	; 0xdc
    46e8:	bl	0 <println>
    46ec:	ldr	r3, [r4, #220]	; 0xdc
    46f0:	cmp	r3, #0
    46f4:	beq	4d1c <__flatcc_fb_gen_c_json_parser+0x176c>
    46f8:	sub	r3, r3, #1
    46fc:	mov	r0, r4
    4700:	movw	r1, #0
    4704:	movt	r1, #0
    4708:	str	r3, [r4, #220]	; 0xdc
    470c:	bl	0 <println>
    4710:	mov	r0, r4
    4714:	movw	r1, #0
    4718:	movt	r1, #0
    471c:	bl	0 <println>
    4720:	ldr	r0, [sp, #32]
    4724:	cmp	r0, #0
    4728:	beq	3940 <__flatcc_fb_gen_c_json_parser+0x390>
    472c:	bl	0 <free>
    4730:	b	3940 <__flatcc_fb_gen_c_json_parser+0x390>
    4734:	.word	0x0000018c
    4738:	.word	0x00000170
    473c:	.word	0x000001b4
    4740:	.word	0x000001a0
    4744:	.word	0x00000154
    4748:	.word	0x000001e4
    474c:	.word	0x000001cc
    4750:	mov	r2, #220	; 0xdc
    4754:	mov	r1, r6
    4758:	add	r0, sp, #60	; 0x3c
    475c:	bl	0 <memset>
    4760:	add	r2, sp, #60	; 0x3c
    4764:	mov	r1, r5
    4768:	ldr	r0, [r5, #12]
    476c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    4770:	ldr	r3, [r4, #208]	; 0xd0
    4774:	mov	r0, r4
    4778:	movw	r1, #0
    477c:	movt	r1, #0
    4780:	ldr	r2, [r3, #160]	; 0xa0
    4784:	bl	0 <println>
    4788:	ldr	r3, [r4, #220]	; 0xdc
    478c:	movw	r1, #0
    4790:	movt	r1, #0
    4794:	mov	r0, r4
    4798:	add	r3, r3, #2
    479c:	str	r3, [r4, #220]	; 0xdc
    47a0:	bl	0 <println>
    47a4:	ldr	r3, [r4, #220]	; 0xdc
    47a8:	cmp	r3, #0
    47ac:	beq	4e6c <__flatcc_fb_gen_c_json_parser+0x18bc>
    47b0:	cmp	r3, #1
    47b4:	streq	r6, [r4, #220]	; 0xdc
    47b8:	beq	4e6c <__flatcc_fb_gen_c_json_parser+0x18bc>
    47bc:	sub	r3, r3, #2
    47c0:	mov	r0, r4
    47c4:	movw	r1, #0
    47c8:	movt	r1, #0
    47cc:	str	r3, [r4, #220]	; 0xdc
    47d0:	bl	0 <println>
    47d4:	ldr	r3, [r4, #220]	; 0xdc
    47d8:	mov	r0, r4
    47dc:	movw	r1, #0
    47e0:	movt	r1, #0
    47e4:	add	r3, r3, #1
    47e8:	str	r3, [r4, #220]	; 0xdc
    47ec:	bl	0 <println>
    47f0:	mov	r0, r4
    47f4:	movw	r1, #0
    47f8:	movt	r1, #0
    47fc:	bl	0 <println>
    4800:	mov	r0, r4
    4804:	movw	r1, #0
    4808:	movt	r1, #0
    480c:	bl	0 <println>
    4810:	mov	r0, r4
    4814:	movw	r1, #0
    4818:	movt	r1, #0
    481c:	bl	0 <println>
    4820:	movw	r1, #0
    4824:	movt	r1, #0
    4828:	mov	r0, r4
    482c:	bl	0 <println>
    4830:	ldr	r2, [r4, #208]	; 0xd0
    4834:	ldrh	r3, [r2, #16]
    4838:	cmp	r3, #2
    483c:	beq	4b0c <__flatcc_fb_gen_c_json_parser+0x155c>
    4840:	movw	r1, #0
    4844:	movt	r1, #0
    4848:	mov	r0, r4
    484c:	bl	0 <println>
    4850:	add	r2, sp, #60	; 0x3c
    4854:	mov	r0, r4
    4858:	movw	r1, #0
    485c:	movt	r1, #0
    4860:	bl	0 <println>
    4864:	mov	r0, r4
    4868:	movw	r1, #0
    486c:	movt	r1, #0
    4870:	bl	0 <println>
    4874:	ldr	r3, [r4, #220]	; 0xdc
    4878:	movw	r1, #0
    487c:	movt	r1, #0
    4880:	mov	r0, r4
    4884:	add	r3, r3, #1
    4888:	str	r3, [r4, #220]	; 0xdc
    488c:	bl	0 <println>
    4890:	ldr	r3, [r4, #220]	; 0xdc
    4894:	cmp	r3, #0
    4898:	beq	4f0c <__flatcc_fb_gen_c_json_parser+0x195c>
    489c:	sub	r3, r3, #1
    48a0:	mov	r0, r4
    48a4:	movw	r1, #0
    48a8:	movt	r1, #0
    48ac:	str	r3, [r4, #220]	; 0xdc
    48b0:	bl	0 <println>
    48b4:	mov	r0, r4
    48b8:	movw	r1, #0
    48bc:	movt	r1, #0
    48c0:	bl	0 <println>
    48c4:	mov	r0, r4
    48c8:	movw	r1, #0
    48cc:	movt	r1, #0
    48d0:	bl	0 <println>
    48d4:	movw	r1, #0
    48d8:	movt	r1, #0
    48dc:	mov	r0, r4
    48e0:	bl	0 <println>
    48e4:	ldr	r3, [r4, #220]	; 0xdc
    48e8:	cmp	r3, #0
    48ec:	beq	4f44 <__flatcc_fb_gen_c_json_parser+0x1994>
    48f0:	sub	r3, r3, #1
    48f4:	mov	r0, r4
    48f8:	movw	r1, #0
    48fc:	movt	r1, #0
    4900:	str	r3, [r4, #220]	; 0xdc
    4904:	bl	0 <println>
    4908:	movw	r1, #0
    490c:	movt	r1, #0
    4910:	mov	r0, r4
    4914:	bl	0 <println>
    4918:	ldr	r3, [r4, #212]	; 0xd4
    491c:	ldr	r3, [r3, #140]	; 0x8c
    4920:	cmp	r3, #0
    4924:	bne	4af0 <__flatcc_fb_gen_c_json_parser+0x1540>
    4928:	ldr	r3, [r4, #208]	; 0xd0
    492c:	mov	r0, r4
    4930:	movw	r1, #0
    4934:	movt	r1, #0
    4938:	ldr	r2, [r3, #164]	; 0xa4
    493c:	bl	0 <println>
    4940:	mov	r0, #0
    4944:	add	sp, sp, #284	; 0x11c
    4948:	ldrd	r4, [sp]
    494c:	ldrd	r6, [sp, #8]
    4950:	ldrd	r8, [sp, #16]
    4954:	ldrd	sl, [sp, #24]
    4958:	add	sp, sp, #32
    495c:	pop	{pc}		; (ldr pc, [sp], #4)
    4960:	mov	r0, r4
    4964:	movw	r1, #0
    4968:	movt	r1, #0
    496c:	bl	0 <println>
    4970:	mov	r0, r4
    4974:	movw	r1, #0
    4978:	movt	r1, #0
    497c:	bl	0 <println>
    4980:	ldr	r3, [sp, #28]
    4984:	mov	ip, #0
    4988:	mov	r1, r6
    498c:	mov	r2, ip
    4990:	mov	r0, r4
    4994:	str	ip, [sp]
    4998:	sub	r3, r3, #1
    499c:	bl	55c <gen_trie>
    49a0:	b	3fec <__flatcc_fb_gen_c_json_parser+0xa3c>
    49a4:	ldr	r3, [sp, #28]
    49a8:	cmp	r3, #0
    49ac:	ble	3ebc <__flatcc_fb_gen_c_json_parser+0x90c>
    49b0:	movw	r1, #0
    49b4:	movt	r1, #0
    49b8:	movw	r3, #0
    49bc:	movt	r3, #0
    49c0:	movw	r2, #0
    49c4:	movt	r2, #0
    49c8:	str	r1, [sp]
    49cc:	movw	r1, #0
    49d0:	movt	r1, #0
    49d4:	ldr	r0, [r3]
    49d8:	movw	r3, #1303	; 0x517
    49dc:	bl	0 <fprintf>
    49e0:	movw	r1, #0
    49e4:	movt	r1, #0
    49e8:	ldr	r3, [pc, #-696]	; 4738 <__flatcc_fb_gen_c_json_parser+0x1188>
    49ec:	movw	r0, #0
    49f0:	movt	r0, #0
    49f4:	movw	r2, #1303	; 0x517
    49f8:	bl	0 <__assert_fail>
    49fc:	mov	r0, r4
    4a00:	movw	r1, #0
    4a04:	movt	r1, #0
    4a08:	bl	0 <println>
    4a0c:	movw	r1, #0
    4a10:	movt	r1, #0
    4a14:	mov	r0, r4
    4a18:	bl	0 <println>
    4a1c:	b	447c <__flatcc_fb_gen_c_json_parser+0xecc>
    4a20:	movw	r1, #0
    4a24:	movt	r1, #0
    4a28:	asr	r3, r2, #31
    4a2c:	mov	r0, r4
    4a30:	bl	0 <println>
    4a34:	b	4404 <__flatcc_fb_gen_c_json_parser+0xe54>
    4a38:	movw	r1, #0
    4a3c:	movt	r1, #0
    4a40:	mov	r0, r4
    4a44:	bl	0 <println>
    4a48:	b	43c4 <__flatcc_fb_gen_c_json_parser+0xe14>
    4a4c:	movw	r1, #0
    4a50:	movt	r1, #0
    4a54:	mov	r0, r4
    4a58:	bl	0 <println>
    4a5c:	b	4620 <__flatcc_fb_gen_c_json_parser+0x1070>
    4a60:	mov	r0, r4
    4a64:	movw	r1, #0
    4a68:	movt	r1, #0
    4a6c:	bl	0 <println>
    4a70:	movw	r1, #0
    4a74:	movt	r1, #0
    4a78:	mov	r0, r4
    4a7c:	bl	0 <println>
    4a80:	ldr	r3, [r4, #220]	; 0xdc
    4a84:	cmp	r3, #0
    4a88:	bne	3c54 <__flatcc_fb_gen_c_json_parser+0x6a4>
    4a8c:	movw	r1, #0
    4a90:	movt	r1, #0
    4a94:	ldr	r3, [pc, #-864]	; 473c <__flatcc_fb_gen_c_json_parser+0x118c>
    4a98:	movw	r0, #0
    4a9c:	movt	r0, #0
    4aa0:	movw	r2, #1210	; 0x4ba
    4aa4:	bl	0 <__assert_fail>
    4aa8:	cmp	r3, #0
    4aac:	bgt	4ea4 <__flatcc_fb_gen_c_json_parser+0x18f4>
    4ab0:	movw	r2, #0
    4ab4:	movt	r2, #0
    4ab8:	str	r5, [sp, #44]	; 0x2c
    4abc:	movw	r3, #0
    4ac0:	movt	r3, #0
    4ac4:	strd	r2, [sp, #36]	; 0x24
    4ac8:	str	r0, [sp, #48]	; 0x30
    4acc:	str	r0, [sp, #52]	; 0x34
    4ad0:	b	4318 <__flatcc_fb_gen_c_json_parser+0xd68>
    4ad4:	movw	r0, #0
    4ad8:	movt	r0, #0
    4adc:	ldr	r3, [r4, #204]	; 0xcc
    4ae0:	mov	r2, #36	; 0x24
    4ae4:	mov	r1, #1
    4ae8:	bl	0 <fwrite>
    4aec:	b	3660 <__flatcc_fb_gen_c_json_parser+0xb0>
    4af0:	movw	r0, #0
    4af4:	movt	r0, #0
    4af8:	ldr	r3, [r4, #204]	; 0xcc
    4afc:	mov	r2, #36	; 0x24
    4b00:	mov	r1, #1
    4b04:	bl	0 <fwrite>
    4b08:	b	4928 <__flatcc_fb_gen_c_json_parser+0x1378>
    4b0c:	movw	r1, #0
    4b10:	movt	r1, #0
    4b14:	ldr	r3, [r2, #8]
    4b18:	mov	r0, r4
    4b1c:	ldr	r2, [r2, #12]
    4b20:	bl	0 <println>
    4b24:	b	4850 <__flatcc_fb_gen_c_json_parser+0x12a0>
    4b28:	movw	r1, #0
    4b2c:	movt	r1, #0
    4b30:	ldr	r3, [r2, #8]
    4b34:	mov	r0, r4
    4b38:	ldr	r2, [r2, #12]
    4b3c:	bl	0 <println>
    4b40:	b	3dbc <__flatcc_fb_gen_c_json_parser+0x80c>
    4b44:	mov	r0, r4
    4b48:	movw	r1, #0
    4b4c:	movt	r1, #0
    4b50:	bl	0 <println>
    4b54:	mov	r0, r4
    4b58:	movw	r1, #0
    4b5c:	movt	r1, #0
    4b60:	bl	0 <println>
    4b64:	mov	r0, r4
    4b68:	movw	r1, #0
    4b6c:	movt	r1, #0
    4b70:	bl	0 <println>
    4b74:	mov	r0, r4
    4b78:	movw	r1, #0
    4b7c:	movt	r1, #0
    4b80:	bl	0 <println>
    4b84:	mov	r0, r4
    4b88:	movw	r1, #0
    4b8c:	movt	r1, #0
    4b90:	bl	0 <println>
    4b94:	mov	r0, r4
    4b98:	movw	r1, #0
    4b9c:	movt	r1, #0
    4ba0:	bl	0 <println>
    4ba4:	mov	r0, r4
    4ba8:	movw	r1, #0
    4bac:	movt	r1, #0
    4bb0:	bl	0 <println>
    4bb4:	mov	r0, r4
    4bb8:	movw	r1, #0
    4bbc:	movt	r1, #0
    4bc0:	bl	0 <println>
    4bc4:	mov	r0, r4
    4bc8:	movw	r1, #0
    4bcc:	movt	r1, #0
    4bd0:	bl	0 <println>
    4bd4:	ldr	r3, [r4, #208]	; 0xd0
    4bd8:	mov	r0, r4
    4bdc:	movw	r1, #0
    4be0:	movt	r1, #0
    4be4:	ldr	r2, [r3, #160]	; 0xa0
    4be8:	bl	0 <println>
    4bec:	ldr	r3, [r4, #220]	; 0xdc
    4bf0:	movw	r1, #0
    4bf4:	movt	r1, #0
    4bf8:	mov	r0, r4
    4bfc:	add	r3, r3, #2
    4c00:	str	r3, [r4, #220]	; 0xdc
    4c04:	bl	0 <println>
    4c08:	ldr	r3, [r4, #220]	; 0xdc
    4c0c:	cmp	r3, #0
    4c10:	beq	4ef0 <__flatcc_fb_gen_c_json_parser+0x1940>
    4c14:	cmp	r3, #1
    4c18:	moveq	r3, #0
    4c1c:	streq	r3, [r4, #220]	; 0xdc
    4c20:	beq	4ef0 <__flatcc_fb_gen_c_json_parser+0x1940>
    4c24:	sub	r3, r3, #2
    4c28:	movw	r1, #0
    4c2c:	movt	r1, #0
    4c30:	mov	r0, r4
    4c34:	str	r3, [r4, #220]	; 0xdc
    4c38:	bl	0 <println>
    4c3c:	ldr	r6, [r4, #208]	; 0xd0
    4c40:	b	369c <__flatcc_fb_gen_c_json_parser+0xec>
    4c44:	cmp	r7, #0
    4c48:	str	r9, [sp, #32]
    4c4c:	ble	3b34 <__flatcc_fb_gen_c_json_parser+0x584>
    4c50:	add	r0, sp, #60	; 0x3c
    4c54:	bl	1b70 <clear_catalog>
    4c58:	movw	r1, #0
    4c5c:	movt	r1, #0
    4c60:	movw	r3, #0
    4c64:	movt	r3, #0
    4c68:	movw	r2, #0
    4c6c:	movt	r2, #0
    4c70:	str	r1, [sp]
    4c74:	movw	r1, #0
    4c78:	movt	r1, #0
    4c7c:	ldr	r0, [r3]
    4c80:	movw	r3, #1194	; 0x4aa
    4c84:	bl	0 <fprintf>
    4c88:	movw	r1, #0
    4c8c:	movt	r1, #0
    4c90:	ldr	r3, [pc, #-1372]	; 473c <__flatcc_fb_gen_c_json_parser+0x118c>
    4c94:	movw	r0, #0
    4c98:	movt	r0, #0
    4c9c:	movw	r2, #1194	; 0x4aa
    4ca0:	bl	0 <__assert_fail>
    4ca4:	mov	r3, #0
    4ca8:	str	r3, [r4, #220]	; 0xdc
    4cac:	movw	r1, #0
    4cb0:	movt	r1, #0
    4cb4:	ldr	r3, [pc, #-1400]	; 4744 <__flatcc_fb_gen_c_json_parser+0x1194>
    4cb8:	movw	r0, #0
    4cbc:	movt	r0, #0
    4cc0:	movw	r2, #1731	; 0x6c3
    4cc4:	bl	0 <__assert_fail>
    4cc8:	movw	r1, #0
    4ccc:	movt	r1, #0
    4cd0:	ldr	r3, [pc, #-1436]	; 473c <__flatcc_fb_gen_c_json_parser+0x118c>
    4cd4:	movw	r0, #0
    4cd8:	movt	r0, #0
    4cdc:	movw	r2, #1205	; 0x4b5
    4ce0:	bl	0 <__assert_fail>
    4ce4:	movw	r1, #0
    4ce8:	movt	r1, #0
    4cec:	ldr	r3, [pc, #-1456]	; 4744 <__flatcc_fb_gen_c_json_parser+0x1194>
    4cf0:	movw	r0, #0
    4cf4:	movt	r0, #0
    4cf8:	movw	r2, #1755	; 0x6db
    4cfc:	bl	0 <__assert_fail>
    4d00:	movw	r1, #0
    4d04:	movt	r1, #0
    4d08:	ldr	r3, [pc, #-1500]	; 4734 <__flatcc_fb_gen_c_json_parser+0x1184>
    4d0c:	movw	r0, #0
    4d10:	movt	r0, #0
    4d14:	movw	r2, #1370	; 0x55a
    4d18:	bl	0 <__assert_fail>
    4d1c:	movw	r1, #0
    4d20:	movt	r1, #0
    4d24:	ldr	r3, [pc, #-1516]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4d28:	movw	r0, #0
    4d2c:	movt	r0, #0
    4d30:	movw	r2, #1479	; 0x5c7
    4d34:	bl	0 <__assert_fail>
    4d38:	movw	r1, #0
    4d3c:	movt	r1, #0
    4d40:	ldr	r3, [pc, #-1544]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4d44:	movw	r0, #0
    4d48:	movt	r0, #0
    4d4c:	movw	r2, #1473	; 0x5c1
    4d50:	bl	0 <__assert_fail>
    4d54:	movw	r1, #0
    4d58:	movt	r1, #0
    4d5c:	ldr	r3, [pc, #-1572]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4d60:	movw	r0, #0
    4d64:	movt	r0, #0
    4d68:	movw	r2, #1438	; 0x59e
    4d6c:	bl	0 <__assert_fail>
    4d70:	movw	r1, #0
    4d74:	movt	r1, #0
    4d78:	ldr	r3, [pc, #-1608]	; 4738 <__flatcc_fb_gen_c_json_parser+0x1188>
    4d7c:	movw	r0, #0
    4d80:	movt	r0, #0
    4d84:	movw	r2, #1301	; 0x515
    4d88:	bl	0 <__assert_fail>
    4d8c:	movw	r1, #0
    4d90:	movt	r1, #0
    4d94:	ldr	r3, [pc, #-1628]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4d98:	movw	r0, #0
    4d9c:	movt	r0, #0
    4da0:	movw	r2, #1390	; 0x56e
    4da4:	bl	0 <__assert_fail>
    4da8:	movw	r1, #0
    4dac:	movt	r1, #0
    4db0:	ldr	r3, [pc, #-1668]	; 4734 <__flatcc_fb_gen_c_json_parser+0x1184>
    4db4:	movw	r0, #0
    4db8:	movt	r0, #0
    4dbc:	mov	r2, #1376	; 0x560
    4dc0:	bl	0 <__assert_fail>
    4dc4:	movw	r1, #0
    4dc8:	movt	r1, #0
    4dcc:	ldr	r3, [pc, #-1696]	; 4734 <__flatcc_fb_gen_c_json_parser+0x1184>
    4dd0:	movw	r0, #0
    4dd4:	movt	r0, #0
    4dd8:	movw	r2, #1353	; 0x549
    4ddc:	bl	0 <__assert_fail>
    4de0:	movw	r1, #0
    4de4:	movt	r1, #0
    4de8:	ldr	r3, [pc, #-1720]	; 4738 <__flatcc_fb_gen_c_json_parser+0x1188>
    4dec:	movw	r0, #0
    4df0:	movt	r0, #0
    4df4:	movw	r2, #1343	; 0x53f
    4df8:	bl	0 <__assert_fail>
    4dfc:	movw	r1, #0
    4e00:	movt	r1, #0
    4e04:	ldr	r3, [pc, #-1748]	; 4738 <__flatcc_fb_gen_c_json_parser+0x1188>
    4e08:	movw	r0, #0
    4e0c:	movt	r0, #0
    4e10:	movw	r2, #1334	; 0x536
    4e14:	bl	0 <__assert_fail>
    4e18:	movw	r1, #0
    4e1c:	movt	r1, #0
    4e20:	ldr	r3, [pc, #-1768]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4e24:	movw	r0, #0
    4e28:	movt	r0, #0
    4e2c:	movw	r2, #1461	; 0x5b5
    4e30:	bl	0 <__assert_fail>
    4e34:	movw	r1, #0
    4e38:	movt	r1, #0
    4e3c:	ldr	r3, [pc, #-1796]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4e40:	movw	r0, #0
    4e44:	movt	r0, #0
    4e48:	movw	r2, #1458	; 0x5b2
    4e4c:	bl	0 <__assert_fail>
    4e50:	movw	r1, #0
    4e54:	movt	r1, #0
    4e58:	ldr	r3, [pc, #-1816]	; 4748 <__flatcc_fb_gen_c_json_parser+0x1198>
    4e5c:	movw	r0, #0
    4e60:	movt	r0, #0
    4e64:	movw	r2, #1645	; 0x66d
    4e68:	bl	0 <__assert_fail>
    4e6c:	movw	r1, #0
    4e70:	movt	r1, #0
    4e74:	ldr	r3, [pc, #-1840]	; 474c <__flatcc_fb_gen_c_json_parser+0x119c>
    4e78:	movw	r0, #0
    4e7c:	movt	r0, #0
    4e80:	movw	r2, #1610	; 0x64a
    4e84:	bl	0 <__assert_fail>
    4e88:	movw	r1, #0
    4e8c:	movt	r1, #0
    4e90:	ldr	r3, [pc, #-1884]	; 473c <__flatcc_fb_gen_c_json_parser+0x118c>
    4e94:	movw	r0, #0
    4e98:	movt	r0, #0
    4e9c:	movw	r2, #1219	; 0x4c3
    4ea0:	bl	0 <__assert_fail>
    4ea4:	movw	r1, #0
    4ea8:	movt	r1, #0
    4eac:	movw	r3, #0
    4eb0:	movt	r3, #0
    4eb4:	movw	r2, #0
    4eb8:	movt	r2, #0
    4ebc:	str	r1, [sp]
    4ec0:	movw	r1, #0
    4ec4:	movt	r1, #0
    4ec8:	ldr	r0, [r3]
    4ecc:	mov	r3, #1392	; 0x570
    4ed0:	bl	0 <fprintf>
    4ed4:	movw	r1, #0
    4ed8:	movt	r1, #0
    4edc:	ldr	r3, [pc, #-1956]	; 4740 <__flatcc_fb_gen_c_json_parser+0x1190>
    4ee0:	movw	r0, #0
    4ee4:	movt	r0, #0
    4ee8:	mov	r2, #1392	; 0x570
    4eec:	bl	0 <__assert_fail>
    4ef0:	movw	r1, #0
    4ef4:	movt	r1, #0
    4ef8:	ldr	r3, [pc, #-1980]	; 4744 <__flatcc_fb_gen_c_json_parser+0x1194>
    4efc:	movw	r0, #0
    4f00:	movt	r0, #0
    4f04:	movw	r2, #1716	; 0x6b4
    4f08:	bl	0 <__assert_fail>
    4f0c:	movw	r1, #0
    4f10:	movt	r1, #0
    4f14:	ldr	r3, [pc, #-2000]	; 474c <__flatcc_fb_gen_c_json_parser+0x119c>
    4f18:	movw	r0, #0
    4f1c:	movt	r0, #0
    4f20:	movw	r2, #1626	; 0x65a
    4f24:	bl	0 <__assert_fail>
    4f28:	movw	r1, #0
    4f2c:	movt	r1, #0
    4f30:	ldr	r3, [pc, #-2032]	; 4748 <__flatcc_fb_gen_c_json_parser+0x1198>
    4f34:	movw	r0, #0
    4f38:	movt	r0, #0
    4f3c:	movw	r2, #1661	; 0x67d
    4f40:	bl	0 <__assert_fail>
    4f44:	movw	r1, #0
    4f48:	movt	r1, #0
    4f4c:	ldr	r3, [pc, #-2056]	; 474c <__flatcc_fb_gen_c_json_parser+0x119c>
    4f50:	movw	r0, #0
    4f54:	movt	r0, #0
    4f58:	movw	r2, #1630	; 0x65e
    4f5c:	bl	0 <__assert_fail>
