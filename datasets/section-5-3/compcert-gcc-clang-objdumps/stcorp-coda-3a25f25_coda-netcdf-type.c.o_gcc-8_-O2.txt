
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_netcdf_type_delete>:
   0:	str	r4, [sp, #-8]!
   4:	subs	r4, r0, #0
   8:	str	lr, [sp, #4]
   c:	beq	88 <coda_netcdf_type_delete+0x88>
  10:	ldr	r3, [r4]
  14:	cmp	r3, #104	; 0x68
  18:	bne	a8 <coda_netcdf_type_delete+0xa8>
  1c:	ldr	r3, [r4, #4]
  20:	ldr	r2, [r3, #8]
  24:	cmp	r2, #1
  28:	beq	68 <coda_netcdf_type_delete+0x68>
  2c:	ldr	r0, [r4, #8]
  30:	cmp	r0, #0
  34:	beq	5c <coda_netcdf_type_delete+0x5c>
  38:	bl	0 <coda_dynamic_type_delete>
  3c:	ldr	r3, [r4, #4]
  40:	cmp	r3, #0
  44:	bne	5c <coda_netcdf_type_delete+0x5c>
  48:	mov	r0, r4
  4c:	ldr	r4, [sp]
  50:	ldr	lr, [sp, #4]
  54:	add	sp, sp, #8
  58:	b	0 <free>
  5c:	mov	r0, r3
  60:	bl	0 <coda_type_release>
  64:	b	48 <coda_netcdf_type_delete+0x48>
  68:	ldr	r0, [r4, #12]
  6c:	cmp	r0, #0
  70:	beq	2c <coda_netcdf_type_delete+0x2c>
  74:	bl	0 <coda_dynamic_type_delete>
  78:	ldr	r0, [r4, #8]
  7c:	cmp	r0, #0
  80:	bne	38 <coda_netcdf_type_delete+0x38>
  84:	b	3c <coda_netcdf_type_delete+0x3c>
  88:	movw	r3, #0
  8c:	movt	r3, #0
  90:	movw	r1, #0
  94:	movt	r1, #0
  98:	movw	r0, #0
  9c:	movt	r0, #0
  a0:	mov	r2, #39	; 0x27
  a4:	bl	0 <__assert_fail>
  a8:	movw	r3, #0
  ac:	movt	r3, #0
  b0:	movw	r1, #0
  b4:	movt	r1, #0
  b8:	movw	r0, #0
  bc:	movt	r0, #0
  c0:	mov	r2, #40	; 0x28
  c4:	bl	0 <__assert_fail>

000000c8 <coda_netcdf_array_new>:
  c8:	strd	r4, [sp, #-28]!	; 0xffffffe4
  cc:	mov	r5, r1
  d0:	strd	r6, [sp, #8]
  d4:	mov	r7, r0
  d8:	mov	r0, #16
  dc:	strd	r8, [sp, #16]
  e0:	mov	r9, r2
  e4:	str	lr, [sp, #24]
  e8:	sub	sp, sp, #12
  ec:	bl	0 <malloc>
  f0:	subs	r6, r0, #0
  f4:	beq	190 <coda_netcdf_array_new+0xc8>
  f8:	mov	r8, #0
  fc:	mov	r3, #104	; 0x68
 100:	mov	r0, #6
 104:	stm	r6, {r3, r8}
 108:	str	r8, [r6, #8]
 10c:	str	r8, [r6, #12]
 110:	bl	0 <coda_type_array_new>
 114:	cmp	r0, r8
 118:	str	r0, [r6, #4]
 11c:	beq	160 <coda_netcdf_array_new+0x98>
 120:	ldr	r1, [r9, #4]
 124:	bl	0 <coda_type_array_set_base_type>
 128:	subs	r4, r0, #0
 12c:	bne	160 <coda_netcdf_array_new+0x98>
 130:	cmp	r7, #0
 134:	subgt	r5, r5, #4
 138:	bgt	148 <coda_netcdf_array_new+0x80>
 13c:	b	188 <coda_netcdf_array_new+0xc0>
 140:	cmp	r7, r4
 144:	beq	188 <coda_netcdf_array_new+0xc0>
 148:	ldr	r1, [r5, #4]!
 14c:	add	r4, r4, #1
 150:	ldr	r0, [r6, #4]
 154:	bl	0 <coda_type_array_add_fixed_dimension>
 158:	cmp	r0, #0
 15c:	beq	140 <coda_netcdf_array_new+0x78>
 160:	mov	r0, r6
 164:	mov	r6, #0
 168:	bl	0 <coda_dynamic_type_delete>
 16c:	mov	r0, r6
 170:	add	sp, sp, #12
 174:	ldrd	r4, [sp]
 178:	ldrd	r6, [sp, #8]
 17c:	ldrd	r8, [sp, #16]
 180:	add	sp, sp, #24
 184:	pop	{pc}		; (ldr pc, [sp], #4)
 188:	str	r9, [r6, #12]
 18c:	b	16c <coda_netcdf_array_new+0xa4>
 190:	mov	r0, #69	; 0x45
 194:	movw	r3, #0
 198:	movt	r3, #0
 19c:	movw	r1, #0
 1a0:	movt	r1, #0
 1a4:	mov	r2, #16
 1a8:	str	r0, [sp]
 1ac:	mvn	r0, #0
 1b0:	bl	0 <coda_set_error>
 1b4:	b	16c <coda_netcdf_array_new+0xa4>

000001b8 <coda_netcdf_array_set_attributes>:
 1b8:	ldr	r3, [r0, #8]
 1bc:	strd	r4, [sp, #-16]!
 1c0:	str	r6, [sp, #8]
 1c4:	str	lr, [sp, #12]
 1c8:	cmp	r3, #0
 1cc:	bne	200 <coda_netcdf_array_set_attributes+0x48>
 1d0:	mov	r4, r0
 1d4:	mov	r5, r1
 1d8:	ldr	r0, [r0, #4]
 1dc:	ldr	r1, [r1, #4]
 1e0:	bl	0 <coda_type_set_attributes>
 1e4:	cmp	r0, #0
 1e8:	ldr	r6, [sp, #8]
 1ec:	mvnne	r0, #0
 1f0:	streq	r5, [r4, #8]
 1f4:	ldrd	r4, [sp]
 1f8:	add	sp, sp, #12
 1fc:	pop	{pc}		; (ldr pc, [sp], #4)
 200:	movw	r1, #0
 204:	movt	r1, #0
 208:	ldr	r3, [pc, #12]	; 21c <coda_netcdf_array_set_attributes+0x64>
 20c:	movw	r0, #0
 210:	movt	r0, #0
 214:	mov	r2, #104	; 0x68
 218:	bl	0 <__assert_fail>
 21c:	.word	0x00000018

00000220 <coda_netcdf_basic_type_new>:
 220:	strd	r4, [sp, #-20]!	; 0xffffffec
 224:	mov	r5, r0
 228:	mov	r0, #32
 22c:	strd	r6, [sp, #8]
 230:	mov	r6, r2
 234:	mov	r7, r3
 238:	str	lr, [sp, #16]
 23c:	sub	sp, sp, #12
 240:	bl	0 <malloc>
 244:	subs	r4, r0, #0
 248:	beq	3e4 <coda_netcdf_basic_type_new+0x1c4>
 24c:	ldr	r0, [sp, #32]
 250:	mov	r1, #0
 254:	mov	r2, #104	; 0x68
 258:	sub	r3, r5, #1
 25c:	str	r2, [r4]
 260:	str	r1, [r4, #4]
 264:	str	r1, [r4, #8]
 268:	strd	r6, [r4, #16]
 26c:	str	r0, [r4, #24]
 270:	cmp	r3, #5
 274:	ldrls	pc, [pc, r3, lsl #2]
 278:	b	40c <coda_netcdf_basic_type_new+0x1ec>
 27c:	.word	0x00000300
 280:	.word	0x00000328
 284:	.word	0x00000350
 288:	.word	0x00000378
 28c:	.word	0x0000039c
 290:	.word	0x00000294
 294:	mov	r1, #3
 298:	mov	r0, #6
 29c:	bl	0 <coda_type_number_new>
 2a0:	mov	r3, r0
 2a4:	mov	r1, #0
 2a8:	mov	r0, #8
 2ac:	mov	r5, #9
 2b0:	str	r3, [r4, #4]
 2b4:	strd	r0, [sp, #40]	; 0x28
 2b8:	cmp	r3, #0
 2bc:	beq	3c4 <coda_netcdf_basic_type_new+0x1a4>
 2c0:	mov	r1, r5
 2c4:	mov	r0, r3
 2c8:	bl	0 <coda_type_set_read_type>
 2cc:	subs	r5, r0, #0
 2d0:	bne	3c4 <coda_netcdf_basic_type_new+0x1a4>
 2d4:	ldr	r0, [r4, #4]
 2d8:	ldrd	r2, [sp, #40]	; 0x28
 2dc:	bl	0 <coda_type_set_byte_size>
 2e0:	cmp	r0, #0
 2e4:	bne	3d4 <coda_netcdf_basic_type_new+0x1b4>
 2e8:	mov	r0, r4
 2ec:	add	sp, sp, #12
 2f0:	ldrd	r4, [sp]
 2f4:	ldrd	r6, [sp, #8]
 2f8:	add	sp, sp, #16
 2fc:	pop	{pc}		; (ldr pc, [sp], #4)
 300:	mov	r1, #2
 304:	mov	r0, #6
 308:	bl	0 <coda_type_number_new>
 30c:	mov	r3, r0
 310:	mov	r1, #0
 314:	mov	r0, #1
 318:	mov	r5, #0
 31c:	str	r3, [r4, #4]
 320:	strd	r0, [sp, #40]	; 0x28
 324:	b	2b8 <coda_netcdf_basic_type_new+0x98>
 328:	ldrd	r2, [sp, #40]	; 0x28
 32c:	mov	r0, #6
 330:	cmp	r2, #2
 334:	sbcs	r3, r3, #0
 338:	movge	r5, #11
 33c:	movlt	r5, #10
 340:	bl	0 <coda_type_text_new>
 344:	mov	r3, r0
 348:	str	r0, [r4, #4]
 34c:	b	2b8 <coda_netcdf_basic_type_new+0x98>
 350:	mov	r1, #2
 354:	mov	r0, #6
 358:	bl	0 <coda_type_number_new>
 35c:	mov	r3, r0
 360:	mov	r1, #0
 364:	mov	r0, #2
 368:	mov	r5, #2
 36c:	str	r3, [r4, #4]
 370:	strd	r0, [sp, #40]	; 0x28
 374:	b	2b8 <coda_netcdf_basic_type_new+0x98>
 378:	mov	r1, #2
 37c:	mov	r0, #6
 380:	bl	0 <coda_type_number_new>
 384:	mov	r3, r0
 388:	mov	r1, #0
 38c:	mov	r0, #4
 390:	str	r3, [r4, #4]
 394:	strd	r0, [sp, #40]	; 0x28
 398:	b	2b8 <coda_netcdf_basic_type_new+0x98>
 39c:	mov	r1, #3
 3a0:	mov	r0, #6
 3a4:	bl	0 <coda_type_number_new>
 3a8:	mov	r3, r0
 3ac:	mov	r1, #0
 3b0:	mov	r0, #4
 3b4:	mov	r5, #8
 3b8:	str	r3, [r4, #4]
 3bc:	strd	r0, [sp, #40]	; 0x28
 3c0:	b	2b8 <coda_netcdf_basic_type_new+0x98>
 3c4:	mov	r0, r4
 3c8:	mov	r4, #0
 3cc:	bl	0 <coda_dynamic_type_delete>
 3d0:	b	2e8 <coda_netcdf_basic_type_new+0xc8>
 3d4:	mov	r0, r4
 3d8:	mov	r4, r5
 3dc:	bl	0 <coda_dynamic_type_delete>
 3e0:	b	2e8 <coda_netcdf_basic_type_new+0xc8>
 3e4:	mov	r0, #124	; 0x7c
 3e8:	movw	r3, #0
 3ec:	movt	r3, #0
 3f0:	movw	r1, #0
 3f4:	movt	r1, #0
 3f8:	mov	r2, #32
 3fc:	str	r0, [sp]
 400:	mvn	r0, #0
 404:	bl	0 <coda_set_error>
 408:	b	2e8 <coda_netcdf_basic_type_new+0xc8>
 40c:	movw	r1, #0
 410:	movt	r1, #0
 414:	ldr	r3, [pc, #12]	; 428 <coda_netcdf_basic_type_new+0x208>
 418:	movw	r0, #0
 41c:	movt	r0, #0
 420:	mov	r2, #166	; 0xa6
 424:	bl	0 <__assert_fail>
 428:	.word	0x0000003c

0000042c <coda_netcdf_basic_type_set_conversion>:
 42c:	ldr	r0, [r0, #4]
 430:	ldr	r3, [r0, #8]
 434:	sub	r3, r3, #2
 438:	cmp	r3, #1
 43c:	bhi	444 <coda_netcdf_basic_type_set_conversion+0x18>
 440:	b	0 <coda_type_number_set_conversion>
 444:	movw	r1, #0
 448:	movt	r1, #0
 44c:	ldr	r3, [pc, #20]	; 468 <coda_netcdf_basic_type_set_conversion+0x3c>
 450:	movw	r0, #0
 454:	movt	r0, #0
 458:	str	r4, [sp, #-8]!
 45c:	mov	r2, #190	; 0xbe
 460:	str	lr, [sp, #4]
 464:	bl	0 <__assert_fail>
 468:	.word	0x00000058

0000046c <coda_netcdf_basic_type_set_attributes>:
 46c:	ldr	r3, [r0, #8]
 470:	strd	r4, [sp, #-16]!
 474:	str	r6, [sp, #8]
 478:	str	lr, [sp, #12]
 47c:	cmp	r3, #0
 480:	bne	4b4 <coda_netcdf_basic_type_set_attributes+0x48>
 484:	mov	r4, r0
 488:	mov	r5, r1
 48c:	ldr	r0, [r0, #4]
 490:	ldr	r1, [r1, #4]
 494:	bl	0 <coda_type_set_attributes>
 498:	cmp	r0, #0
 49c:	ldr	r6, [sp, #8]
 4a0:	mvnne	r0, #0
 4a4:	streq	r5, [r4, #8]
 4a8:	ldrd	r4, [sp]
 4ac:	add	sp, sp, #12
 4b0:	pop	{pc}		; (ldr pc, [sp], #4)
 4b4:	movw	r1, #0
 4b8:	movt	r1, #0
 4bc:	ldr	r3, [pc, #12]	; 4d0 <coda_netcdf_basic_type_set_attributes+0x64>
 4c0:	movw	r0, #0
 4c4:	movt	r0, #0
 4c8:	mov	r2, #196	; 0xc4
 4cc:	bl	0 <__assert_fail>
 4d0:	.word	0x00000080
