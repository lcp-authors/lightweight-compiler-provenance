
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_dynamic_type_delete>:
       0:	subs	r3, r0, #0
       4:	bxeq	lr
       8:	ldr	r3, [r3]
       c:	cmp	r3, #100	; 0x64
      10:	beq	4c <coda_dynamic_type_delete+0x4c>
      14:	bls	34 <coda_dynamic_type_delete+0x34>
      18:	cmp	r3, #104	; 0x68
      1c:	beq	40 <coda_dynamic_type_delete+0x40>
      20:	cmp	r3, #105	; 0x69
      24:	beq	48 <coda_dynamic_type_delete+0x48>
      28:	cmp	r3, #103	; 0x67
      2c:	bxne	lr
      30:	b	0 <coda_cdf_type_delete>
      34:	cmp	r3, #1
      38:	bhi	44 <coda_dynamic_type_delete+0x44>
      3c:	b	0 <coda_type_release>
      40:	b	0 <coda_netcdf_type_delete>
      44:	bx	lr
      48:	b	0 <coda_grib_type_delete>
      4c:	b	0 <coda_mem_type_delete>

00000050 <coda_cursor_compare>:
      50:	push	{r4, r5, lr}
      54:	ldr	r5, [r0, #4]
      58:	ldr	r4, [r1, #4]
      5c:	cmp	r5, #0
      60:	ble	b0 <coda_cursor_compare+0x60>
      64:	cmp	r4, #0
      68:	ble	a8 <coda_cursor_compare+0x58>
      6c:	mov	r2, #28
      70:	mov	r3, #0
      74:	add	r3, r3, #1
      78:	cmp	r3, r5
      7c:	beq	b4 <coda_cursor_compare+0x64>
      80:	cmp	r3, r4
      84:	beq	a8 <coda_cursor_compare+0x58>
      88:	ldr	lr, [r0, r2]
      8c:	ldr	ip, [r1, r2]
      90:	add	r2, r2, #16
      94:	cmp	lr, ip
      98:	bgt	a8 <coda_cursor_compare+0x58>
      9c:	bge	74 <coda_cursor_compare+0x24>
      a0:	mvn	r0, #0
      a4:	pop	{r4, r5, pc}
      a8:	mov	r0, #1
      ac:	pop	{r4, r5, pc}
      b0:	mov	r3, #0
      b4:	cmp	r3, r4
      b8:	movge	r0, #0
      bc:	mvnlt	r0, #0
      c0:	pop	{r4, r5, pc}

000000c4 <coda_cursor_print_path>:
      c4:	ldr	r3, [r0, #4]
      c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
      cc:	cmp	r3, #1
      d0:	sub	sp, sp, #12
      d4:	mov	r7, r1
      d8:	ble	204 <coda_cursor_print_path+0x140>
      dc:	ldr	r9, [pc, #308]	; 218 <coda_cursor_print_path+0x154>
      e0:	ldr	r8, [pc, #308]	; 21c <coda_cursor_print_path+0x158>
      e4:	mov	r6, r0
      e8:	mov	fp, r0
      ec:	mov	r5, #1
      f0:	ldr	sl, [fp, #28]
      f4:	cmn	sl, #1
      f8:	beq	174 <coda_cursor_print_path+0xb0>
      fc:	ldr	r0, [fp, #8]
     100:	mov	r1, sp
     104:	ldr	r3, [r0]
     108:	cmp	r3, #99	; 0x63
     10c:	movls	r4, r0
     110:	ldrhi	r4, [r0, #4]
     114:	mov	r0, r4
     118:	bl	0 <coda_type_get_class>
     11c:	cmp	r0, #0
     120:	bne	1f8 <coda_cursor_print_path+0x134>
     124:	ldr	r3, [sp]
     128:	cmp	r3, #0
     12c:	beq	1a8 <coda_cursor_print_path+0xe4>
     130:	cmp	r3, #1
     134:	bne	194 <coda_cursor_print_path+0xd0>
     138:	ldr	r3, [pc, #224]	; 220 <coda_cursor_print_path+0x15c>
     13c:	cmp	r5, #1
     140:	ldr	r0, [pc, #220]	; 224 <coda_cursor_print_path+0x160>
     144:	mov	r1, sl
     148:	movne	r0, r3
     14c:	blx	r7
     150:	cmp	r0, #0
     154:	blt	1f8 <coda_cursor_print_path+0x134>
     158:	ldr	r3, [r6, #4]
     15c:	add	r5, r5, #1
     160:	cmp	r3, r5
     164:	add	fp, fp, #16
     168:	bgt	f0 <coda_cursor_print_path+0x2c>
     16c:	mov	r0, #0
     170:	b	1fc <coda_cursor_print_path+0x138>
     174:	cmp	r5, #1
     178:	moveq	r0, r9
     17c:	movne	r0, r8
     180:	blx	r7
     184:	cmp	r0, #0
     188:	bge	158 <coda_cursor_print_path+0x94>
     18c:	mov	r0, sl
     190:	b	1fc <coda_cursor_print_path+0x138>
     194:	ldr	r3, [pc, #140]	; 228 <coda_cursor_print_path+0x164>
     198:	ldr	r2, [pc, #140]	; 22c <coda_cursor_print_path+0x168>
     19c:	ldr	r1, [pc, #140]	; 230 <coda_cursor_print_path+0x16c>
     1a0:	ldr	r0, [pc, #140]	; 234 <coda_cursor_print_path+0x170>
     1a4:	bl	0 <__assert_fail>
     1a8:	mov	r1, sl
     1ac:	mov	r0, r4
     1b0:	add	r2, sp, #4
     1b4:	bl	0 <coda_type_get_record_field_name>
     1b8:	cmp	r0, #0
     1bc:	bne	1f8 <coda_cursor_print_path+0x134>
     1c0:	cmp	r5, #1
     1c4:	beq	1d4 <coda_cursor_print_path+0x110>
     1c8:	ldr	r3, [fp, #12]
     1cc:	cmn	r3, #1
     1d0:	beq	1e4 <coda_cursor_print_path+0x120>
     1d4:	ldr	r0, [pc, #92]	; 238 <coda_cursor_print_path+0x174>
     1d8:	blx	r7
     1dc:	cmp	r0, #0
     1e0:	blt	1f8 <coda_cursor_print_path+0x134>
     1e4:	ldr	r1, [sp, #4]
     1e8:	ldr	r0, [pc, #76]	; 23c <coda_cursor_print_path+0x178>
     1ec:	blx	r7
     1f0:	cmp	r0, #0
     1f4:	bge	158 <coda_cursor_print_path+0x94>
     1f8:	mvn	r0, #0
     1fc:	add	sp, sp, #12
     200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     204:	ldr	r0, [pc, #44]	; 238 <coda_cursor_print_path+0x174>
     208:	blx	r1
     20c:	asr	r0, r0, #31
     210:	add	sp, sp, #12
     214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     218:	.word	0x00000000
     21c:	.word	0x00000004
     220:	.word	0x00000010
     224:	.word	0x00000008
     228:	.word	0x00000000
     22c:	.word	0x00000131
     230:	.word	0x00000020
     234:	.word	0x0000006c
     238:	.word	0x00000018
     23c:	.word	0x0000001c

00000240 <coda_cursor_set_product>:
     240:	cmp	r0, #0
     244:	push	{r4, lr}
     248:	beq	300 <coda_cursor_set_product+0xc0>
     24c:	cmp	r1, #0
     250:	beq	31c <coda_cursor_set_product+0xdc>
     254:	ldr	r3, [r1, #16]
     258:	cmp	r3, #9
     25c:	ldrls	pc, [pc, r3, lsl #2]
     260:	b	2ec <coda_cursor_set_product+0xac>
     264:	.word	0x00000294
     268:	.word	0x00000294
     26c:	.word	0x0000029c
     270:	.word	0x000002a4
     274:	.word	0x000002b8
     278:	.word	0x000002cc
     27c:	.word	0x000002d4
     280:	.word	0x000002dc
     284:	.word	0x000002e4
     288:	.word	0x0000028c
     28c:	pop	{r4, lr}
     290:	b	0 <coda_sp3_cursor_set_product>
     294:	pop	{r4, lr}
     298:	b	0 <coda_ascbin_cursor_set_product>
     29c:	pop	{r4, lr}
     2a0:	b	0 <coda_xml_cursor_set_product>
     2a4:	mov	r1, #0
     2a8:	mvn	r0, #10
     2ac:	bl	0 <coda_set_error>
     2b0:	mvn	r0, #0
     2b4:	pop	{r4, pc}
     2b8:	mov	r1, #0
     2bc:	mvn	r0, #12
     2c0:	bl	0 <coda_set_error>
     2c4:	mvn	r0, #0
     2c8:	pop	{r4, pc}
     2cc:	pop	{r4, lr}
     2d0:	b	0 <coda_cdf_cursor_set_product>
     2d4:	pop	{r4, lr}
     2d8:	b	0 <coda_netcdf_cursor_set_product>
     2dc:	pop	{r4, lr}
     2e0:	b	0 <coda_grib_cursor_set_product>
     2e4:	pop	{r4, lr}
     2e8:	b	0 <coda_rinex_cursor_set_product>
     2ec:	ldr	r3, [pc, #68]	; 338 <coda_cursor_set_product+0xf8>
     2f0:	mov	r2, #368	; 0x170
     2f4:	ldr	r1, [pc, #64]	; 33c <coda_cursor_set_product+0xfc>
     2f8:	ldr	r0, [pc, #64]	; 340 <coda_cursor_set_product+0x100>
     2fc:	bl	0 <__assert_fail>
     300:	ldr	r3, [pc, #60]	; 344 <coda_cursor_set_product+0x104>
     304:	ldr	r2, [pc, #48]	; 33c <coda_cursor_set_product+0xfc>
     308:	ldr	r1, [pc, #56]	; 348 <coda_cursor_set_product+0x108>
     30c:	mvn	r0, #99	; 0x63
     310:	bl	0 <coda_set_error>
     314:	mvn	r0, #0
     318:	pop	{r4, pc}
     31c:	ldr	r3, [pc, #40]	; 34c <coda_cursor_set_product+0x10c>
     320:	ldr	r2, [pc, #20]	; 33c <coda_cursor_set_product+0xfc>
     324:	ldr	r1, [pc, #36]	; 350 <coda_cursor_set_product+0x110>
     328:	mvn	r0, #99	; 0x63
     32c:	bl	0 <coda_set_error>
     330:	mvn	r0, #0
     334:	pop	{r4, pc}
     338:	.word	0x00000018
     33c:	.word	0x00000020
     340:	.word	0x0000006c
     344:	.word	0x00000145
     348:	.word	0x00000070
     34c:	.word	0x0000014b
     350:	.word	0x00000090

00000354 <coda_cursor_goto_attributes>:
     354:	push	{r4, lr}
     358:	subs	r4, r0, #0
     35c:	sub	sp, sp, #8
     360:	beq	480 <coda_cursor_goto_attributes+0x12c>
     364:	ldr	r2, [r4, #4]
     368:	cmp	r2, #0
     36c:	ble	480 <coda_cursor_goto_attributes+0x12c>
     370:	add	r3, r4, r2, lsl #4
     374:	ldr	r3, [r3, #-8]
     378:	cmp	r3, #0
     37c:	beq	480 <coda_cursor_goto_attributes+0x12c>
     380:	cmp	r2, #32
     384:	beq	49c <coda_cursor_goto_attributes+0x148>
     388:	ldr	r3, [r3]
     38c:	cmp	r3, #101	; 0x65
     390:	beq	468 <coda_cursor_goto_attributes+0x114>
     394:	bls	3e8 <coda_cursor_goto_attributes+0x94>
     398:	cmp	r3, #103	; 0x67
     39c:	beq	430 <coda_cursor_goto_attributes+0xdc>
     3a0:	bcc	454 <coda_cursor_goto_attributes+0x100>
     3a4:	cmp	r3, #104	; 0x68
     3a8:	beq	410 <coda_cursor_goto_attributes+0xbc>
     3ac:	cmp	r3, #105	; 0x69
     3b0:	bne	3d4 <coda_cursor_goto_attributes+0x80>
     3b4:	mov	r0, r4
     3b8:	bl	0 <coda_grib_cursor_goto_attributes>
     3bc:	cmp	r0, #0
     3c0:	bne	404 <coda_cursor_goto_attributes+0xb0>
     3c4:	ldr	r3, [r4, #4]
     3c8:	add	r3, r4, r3, lsl #4
     3cc:	ldr	r3, [r3, #-8]
     3d0:	ldr	r3, [r3]
     3d4:	cmp	r3, #100	; 0x64
     3d8:	beq	440 <coda_cursor_goto_attributes+0xec>
     3dc:	mov	r0, #0
     3e0:	add	sp, sp, #8
     3e4:	pop	{r4, pc}
     3e8:	cmp	r3, #1
     3ec:	bls	420 <coda_cursor_goto_attributes+0xcc>
     3f0:	cmp	r3, #100	; 0x64
     3f4:	bne	3dc <coda_cursor_goto_attributes+0x88>
     3f8:	bl	0 <coda_mem_cursor_goto_attributes>
     3fc:	cmp	r0, #0
     400:	beq	3c4 <coda_cursor_goto_attributes+0x70>
     404:	mvn	r0, #0
     408:	add	sp, sp, #8
     40c:	pop	{r4, pc}
     410:	bl	0 <coda_netcdf_cursor_goto_attributes>
     414:	cmp	r0, #0
     418:	beq	3c4 <coda_cursor_goto_attributes+0x70>
     41c:	b	404 <coda_cursor_goto_attributes+0xb0>
     420:	bl	0 <coda_ascbin_cursor_goto_attributes>
     424:	cmp	r0, #0
     428:	beq	3c4 <coda_cursor_goto_attributes+0x70>
     42c:	b	404 <coda_cursor_goto_attributes+0xb0>
     430:	bl	0 <coda_cdf_cursor_goto_attributes>
     434:	cmp	r0, #0
     438:	beq	3c4 <coda_cursor_goto_attributes+0x70>
     43c:	b	404 <coda_cursor_goto_attributes+0xb0>
     440:	mov	r0, r4
     444:	bl	0 <coda_mem_cursor_update_offset>
     448:	mov	r0, #0
     44c:	add	sp, sp, #8
     450:	pop	{r4, pc}
     454:	mvn	r0, #12
     458:	mov	r1, #0
     45c:	bl	0 <coda_set_error>
     460:	mvn	r0, #0
     464:	b	408 <coda_cursor_goto_attributes+0xb4>
     468:	mov	r1, #0
     46c:	mvn	r0, #10
     470:	bl	0 <coda_set_error>
     474:	mvn	r0, #0
     478:	add	sp, sp, #8
     47c:	pop	{r4, pc}
     480:	mvn	r0, #99	; 0x63
     484:	ldr	r3, [pc, #48]	; 4bc <coda_cursor_goto_attributes+0x168>
     488:	ldr	r2, [pc, #48]	; 4c0 <coda_cursor_goto_attributes+0x16c>
     48c:	ldr	r1, [pc, #48]	; 4c4 <coda_cursor_goto_attributes+0x170>
     490:	bl	0 <coda_set_error>
     494:	mvn	r0, #0
     498:	b	3e0 <coda_cursor_goto_attributes+0x8c>
     49c:	ldr	r3, [pc, #36]	; 4c8 <coda_cursor_goto_attributes+0x174>
     4a0:	mvn	r0, #99	; 0x63
     4a4:	str	r3, [sp]
     4a8:	ldr	r1, [pc, #28]	; 4cc <coda_cursor_goto_attributes+0x178>
     4ac:	ldr	r3, [pc, #12]	; 4c0 <coda_cursor_goto_attributes+0x16c>
     4b0:	bl	0 <coda_set_error>
     4b4:	mvn	r0, #0
     4b8:	b	3e0 <coda_cursor_goto_attributes+0x8c>
     4bc:	.word	0x000004dc
     4c0:	.word	0x00000020
     4c4:	.word	0x000000b8
     4c8:	.word	0x000004e3
     4cc:	.word	0x000000d8

000004d0 <coda_cursor_goto_parent>:
     4d0:	subs	r2, r0, #0
     4d4:	push	{r4, lr}
     4d8:	beq	510 <coda_cursor_goto_parent+0x40>
     4dc:	ldr	r3, [r2, #4]
     4e0:	cmp	r3, #0
     4e4:	ble	510 <coda_cursor_goto_parent+0x40>
     4e8:	sub	r1, r3, #1
     4ec:	add	r0, r2, r1, lsl #4
     4f0:	ldr	r0, [r0, #8]
     4f4:	cmp	r0, #0
     4f8:	beq	510 <coda_cursor_goto_parent+0x40>
     4fc:	cmp	r3, #1
     500:	beq	52c <coda_cursor_goto_parent+0x5c>
     504:	mov	r0, #0
     508:	str	r1, [r2, #4]
     50c:	pop	{r4, pc}
     510:	ldr	r3, [pc, #40]	; 540 <coda_cursor_goto_parent+0x70>
     514:	ldr	r2, [pc, #40]	; 544 <coda_cursor_goto_parent+0x74>
     518:	ldr	r1, [pc, #40]	; 548 <coda_cursor_goto_parent+0x78>
     51c:	mvn	r0, #99	; 0x63
     520:	bl	0 <coda_set_error>
     524:	mvn	r0, #0
     528:	pop	{r4, pc}
     52c:	mov	r1, #0
     530:	mvn	r0, #107	; 0x6b
     534:	bl	0 <coda_set_error>
     538:	mvn	r0, #0
     53c:	pop	{r4, pc}
     540:	.word	0x00000535
     544:	.word	0x00000020
     548:	.word	0x000000b8

0000054c <coda_cursor_use_base_type_of_special_type>:
     54c:	push	{r4, lr}
     550:	subs	r4, r0, #0
     554:	beq	6a0 <coda_cursor_use_base_type_of_special_type+0x154>
     558:	ldr	r3, [r4, #4]
     55c:	cmp	r3, #0
     560:	ble	6a0 <coda_cursor_use_base_type_of_special_type+0x154>
     564:	add	r3, r4, r3, lsl #4
     568:	ldr	r2, [r3, #-8]
     56c:	cmp	r2, #0
     570:	beq	6a0 <coda_cursor_use_base_type_of_special_type+0x154>
     574:	ldr	r3, [r2]
     578:	cmp	r3, #99	; 0x63
     57c:	ldrhi	r2, [r2, #4]
     580:	ldr	r0, [r2, #8]
     584:	cmp	r0, #6
     588:	bne	684 <coda_cursor_use_base_type_of_special_type+0x138>
     58c:	cmp	r3, #102	; 0x66
     590:	bhi	620 <coda_cursor_use_base_type_of_special_type+0xd4>
     594:	cmp	r3, #101	; 0x65
     598:	bcs	630 <coda_cursor_use_base_type_of_special_type+0xe4>
     59c:	cmp	r3, #1
     5a0:	bls	65c <coda_cursor_use_base_type_of_special_type+0x110>
     5a4:	cmp	r3, #100	; 0x64
     5a8:	bne	5dc <coda_cursor_use_base_type_of_special_type+0x90>
     5ac:	mov	r0, r4
     5b0:	bl	0 <coda_mem_cursor_use_base_type_of_special_type>
     5b4:	cmp	r0, #0
     5b8:	bne	654 <coda_cursor_use_base_type_of_special_type+0x108>
     5bc:	ldr	r3, [r4, #4]
     5c0:	add	r3, r4, r3, lsl #4
     5c4:	ldr	r3, [r3, #-8]
     5c8:	ldr	r3, [r3]
     5cc:	cmp	r3, #100	; 0x64
     5d0:	bne	5dc <coda_cursor_use_base_type_of_special_type+0x90>
     5d4:	mov	r0, r4
     5d8:	bl	0 <coda_mem_cursor_update_offset>
     5dc:	ldr	r3, [pc, #216]	; 6bc <coda_cursor_use_base_type_of_special_type+0x170>
     5e0:	bl	0 <__aeabi_read_tp>
     5e4:	ldr	r3, [pc, r3]
     5e8:	ldr	r0, [r0, r3]
     5ec:	cmp	r0, #0
     5f0:	popeq	{r4, pc}
     5f4:	ldr	r3, [r4, #4]
     5f8:	add	r3, r4, r3, lsl #4
     5fc:	ldr	r3, [r3, #-8]
     600:	ldr	r2, [r3]
     604:	cmp	r2, #99	; 0x63
     608:	ldrhi	r3, [r3, #4]
     60c:	ldr	r3, [r3, #8]
     610:	cmp	r3, #6
     614:	beq	670 <coda_cursor_use_base_type_of_special_type+0x124>
     618:	mov	r0, #0
     61c:	pop	{r4, pc}
     620:	cmp	r3, #103	; 0x67
     624:	beq	644 <coda_cursor_use_base_type_of_special_type+0xf8>
     628:	cmp	r3, #105	; 0x69
     62c:	bhi	5cc <coda_cursor_use_base_type_of_special_type+0x80>
     630:	ldr	r3, [pc, #136]	; 6c0 <coda_cursor_use_base_type_of_special_type+0x174>
     634:	mov	r2, #1440	; 0x5a0
     638:	ldr	r1, [pc, #132]	; 6c4 <coda_cursor_use_base_type_of_special_type+0x178>
     63c:	ldr	r0, [pc, #132]	; 6c8 <coda_cursor_use_base_type_of_special_type+0x17c>
     640:	bl	0 <__assert_fail>
     644:	mov	r0, r4
     648:	bl	0 <coda_cdf_cursor_use_base_type_of_special_type>
     64c:	cmp	r0, #0
     650:	beq	5bc <coda_cursor_use_base_type_of_special_type+0x70>
     654:	mvn	r0, #0
     658:	pop	{r4, pc}
     65c:	mov	r0, r4
     660:	bl	0 <coda_ascbin_cursor_use_base_type_of_special_type>
     664:	cmp	r0, #0
     668:	beq	5bc <coda_cursor_use_base_type_of_special_type+0x70>
     66c:	b	654 <coda_cursor_use_base_type_of_special_type+0x108>
     670:	mov	r0, r4
     674:	bl	54c <coda_cursor_use_base_type_of_special_type>
     678:	adds	r0, r0, #0
     67c:	mvnne	r0, #0
     680:	pop	{r4, pc}
     684:	bl	0 <coda_type_get_class_name>
     688:	ldr	r1, [pc, #60]	; 6cc <coda_cursor_use_base_type_of_special_type+0x180>
     68c:	mov	r2, r0
     690:	mvn	r0, #104	; 0x68
     694:	bl	0 <coda_set_error>
     698:	mvn	r0, #0
     69c:	pop	{r4, pc}
     6a0:	ldr	r3, [pc, #40]	; 6d0 <coda_cursor_use_base_type_of_special_type+0x184>
     6a4:	ldr	r2, [pc, #24]	; 6c4 <coda_cursor_use_base_type_of_special_type+0x178>
     6a8:	ldr	r1, [pc, #36]	; 6d4 <coda_cursor_use_base_type_of_special_type+0x188>
     6ac:	mvn	r0, #99	; 0x63
     6b0:	bl	0 <coda_set_error>
     6b4:	mvn	r0, #0
     6b8:	pop	{r4, pc}
     6bc:	.word	0x000000d0
     6c0:	.word	0x00000030
     6c4:	.word	0x00000020
     6c8:	.word	0x0000006c
     6cc:	.word	0x00000108
     6d0:	.word	0x0000057b
     6d4:	.word	0x000000b8

000006d8 <coda_cursor_goto_record_field_by_index>:
     6d8:	push	{r4, lr}
     6dc:	subs	r4, r0, #0
     6e0:	sub	sp, sp, #8
     6e4:	beq	838 <coda_cursor_goto_record_field_by_index+0x160>
     6e8:	ldr	r2, [r4, #4]
     6ec:	cmp	r2, #0
     6f0:	ble	838 <coda_cursor_goto_record_field_by_index+0x160>
     6f4:	add	r3, r4, r2, lsl #4
     6f8:	ldr	r3, [r3, #-8]
     6fc:	cmp	r3, #0
     700:	beq	838 <coda_cursor_goto_record_field_by_index+0x160>
     704:	ldr	ip, [r3]
     708:	cmp	ip, #99	; 0x63
     70c:	ldrhi	r3, [r3, #4]
     710:	ldr	r0, [r3, #8]
     714:	cmp	r0, #0
     718:	bne	854 <coda_cursor_goto_record_field_by_index+0x17c>
     71c:	cmp	r2, #32
     720:	beq	870 <coda_cursor_goto_record_field_by_index+0x198>
     724:	cmp	ip, #101	; 0x65
     728:	beq	80c <coda_cursor_goto_record_field_by_index+0x134>
     72c:	bhi	7b0 <coda_cursor_goto_record_field_by_index+0xd8>
     730:	cmp	ip, #1
     734:	bls	7f8 <coda_cursor_goto_record_field_by_index+0x120>
     738:	cmp	ip, #100	; 0x64
     73c:	bne	768 <coda_cursor_goto_record_field_by_index+0x90>
     740:	mov	r0, r4
     744:	bl	0 <coda_mem_cursor_goto_record_field_by_index>
     748:	cmp	r0, #0
     74c:	bne	7ec <coda_cursor_goto_record_field_by_index+0x114>
     750:	ldr	r3, [r4, #4]
     754:	add	r3, r4, r3, lsl #4
     758:	ldr	r3, [r3, #-8]
     75c:	ldr	ip, [r3]
     760:	cmp	ip, #100	; 0x64
     764:	beq	7d4 <coda_cursor_goto_record_field_by_index+0xfc>
     768:	ldr	r3, [pc, #288]	; 890 <coda_cursor_goto_record_field_by_index+0x1b8>
     76c:	bl	0 <__aeabi_read_tp>
     770:	ldr	r3, [pc, r3]
     774:	ldr	r0, [r0, r3]
     778:	cmp	r0, #0
     77c:	beq	7a8 <coda_cursor_goto_record_field_by_index+0xd0>
     780:	ldr	r3, [r4, #4]
     784:	add	r3, r4, r3, lsl #4
     788:	ldr	r3, [r3, #-8]
     78c:	ldr	r2, [r3]
     790:	cmp	r2, #99	; 0x63
     794:	ldrhi	r3, [r3, #4]
     798:	ldr	r3, [r3, #8]
     79c:	cmp	r3, #6
     7a0:	movne	r0, #0
     7a4:	beq	824 <coda_cursor_goto_record_field_by_index+0x14c>
     7a8:	add	sp, sp, #8
     7ac:	pop	{r4, pc}
     7b0:	cmp	ip, #102	; 0x66
     7b4:	beq	7e0 <coda_cursor_goto_record_field_by_index+0x108>
     7b8:	cmp	ip, #105	; 0x69
     7bc:	bhi	760 <coda_cursor_goto_record_field_by_index+0x88>
     7c0:	ldr	r3, [pc, #204]	; 894 <coda_cursor_goto_record_field_by_index+0x1bc>
     7c4:	mov	r2, #628	; 0x274
     7c8:	ldr	r1, [pc, #200]	; 898 <coda_cursor_goto_record_field_by_index+0x1c0>
     7cc:	ldr	r0, [pc, #200]	; 89c <coda_cursor_goto_record_field_by_index+0x1c4>
     7d0:	bl	0 <__assert_fail>
     7d4:	mov	r0, r4
     7d8:	bl	0 <coda_mem_cursor_update_offset>
     7dc:	b	768 <coda_cursor_goto_record_field_by_index+0x90>
     7e0:	mov	r1, r0
     7e4:	mvn	r0, #12
     7e8:	bl	0 <coda_set_error>
     7ec:	mvn	r0, #0
     7f0:	add	sp, sp, #8
     7f4:	pop	{r4, pc}
     7f8:	mov	r0, r4
     7fc:	bl	0 <coda_ascbin_cursor_goto_record_field_by_index>
     800:	cmp	r0, #0
     804:	beq	750 <coda_cursor_goto_record_field_by_index+0x78>
     808:	b	7ec <coda_cursor_goto_record_field_by_index+0x114>
     80c:	mov	r1, r0
     810:	mvn	r0, #10
     814:	bl	0 <coda_set_error>
     818:	mvn	r0, #0
     81c:	add	sp, sp, #8
     820:	pop	{r4, pc}
     824:	mov	r0, r4
     828:	bl	54c <coda_cursor_use_base_type_of_special_type>
     82c:	adds	r0, r0, #0
     830:	mvnne	r0, #0
     834:	b	7a8 <coda_cursor_goto_record_field_by_index+0xd0>
     838:	mvn	r0, #99	; 0x63
     83c:	ldr	r3, [pc, #92]	; 8a0 <coda_cursor_goto_record_field_by_index+0x1c8>
     840:	ldr	r2, [pc, #80]	; 898 <coda_cursor_goto_record_field_by_index+0x1c0>
     844:	ldr	r1, [pc, #88]	; 8a4 <coda_cursor_goto_record_field_by_index+0x1cc>
     848:	bl	0 <coda_set_error>
     84c:	mvn	r0, #0
     850:	b	7a8 <coda_cursor_goto_record_field_by_index+0xd0>
     854:	bl	0 <coda_type_get_class_name>
     858:	ldr	r1, [pc, #72]	; 8a8 <coda_cursor_goto_record_field_by_index+0x1d0>
     85c:	mov	r2, r0
     860:	mvn	r0, #104	; 0x68
     864:	bl	0 <coda_set_error>
     868:	mvn	r0, #0
     86c:	b	7a8 <coda_cursor_goto_record_field_by_index+0xd0>
     870:	mov	r3, #584	; 0x248
     874:	str	r3, [sp]
     878:	mvn	r0, #99	; 0x63
     87c:	ldr	r3, [pc, #20]	; 898 <coda_cursor_goto_record_field_by_index+0x1c0>
     880:	ldr	r1, [pc, #36]	; 8ac <coda_cursor_goto_record_field_by_index+0x1d4>
     884:	bl	0 <coda_set_error>
     888:	mvn	r0, #0
     88c:	b	7a8 <coda_cursor_goto_record_field_by_index+0xd0>
     890:	.word	0x00000118
     894:	.word	0x0000005c
     898:	.word	0x00000020
     89c:	.word	0x0000006c
     8a0:	.word	0x00000239
     8a4:	.word	0x000000b8
     8a8:	.word	0x00000148
     8ac:	.word	0x000000d8

000008b0 <coda_cursor_goto_first_record_field>:
     8b0:	mov	r1, #0
     8b4:	b	6d8 <coda_cursor_goto_record_field_by_index>

000008b8 <coda_cursor_goto_next_record_field>:
     8b8:	push	{r4, r5, r6, lr}
     8bc:	subs	r4, r0, #0
     8c0:	beq	a18 <coda_cursor_goto_next_record_field+0x160>
     8c4:	ldr	r3, [r4, #4]
     8c8:	cmp	r3, #1
     8cc:	ble	a18 <coda_cursor_goto_next_record_field+0x160>
     8d0:	add	r2, r4, r3, lsl #4
     8d4:	ldr	r2, [r2, #-24]	; 0xffffffe8
     8d8:	cmp	r2, #0
     8dc:	beq	a18 <coda_cursor_goto_next_record_field+0x160>
     8e0:	ldr	ip, [r2]
     8e4:	cmp	ip, #99	; 0x63
     8e8:	ldrhi	r2, [r2, #4]
     8ec:	ldr	r1, [r2, #8]
     8f0:	cmp	r1, #0
     8f4:	bne	a34 <coda_cursor_goto_next_record_field+0x17c>
     8f8:	sub	r3, r3, #1
     8fc:	lsl	r3, r3, #4
     900:	add	r2, r4, r3
     904:	ldr	r5, [r2, #12]
     908:	cmn	r5, #1
     90c:	beq	a54 <coda_cursor_goto_next_record_field+0x19c>
     910:	cmp	ip, #101	; 0x65
     914:	beq	9e8 <coda_cursor_goto_next_record_field+0x130>
     918:	bhi	9a0 <coda_cursor_goto_next_record_field+0xe8>
     91c:	cmp	ip, #1
     920:	bls	9d4 <coda_cursor_goto_next_record_field+0x11c>
     924:	cmp	ip, #100	; 0x64
     928:	bne	948 <coda_cursor_goto_next_record_field+0x90>
     92c:	mov	r0, r4
     930:	bl	0 <coda_mem_cursor_goto_next_record_field>
     934:	cmp	r0, #0
     938:	bne	9cc <coda_cursor_goto_next_record_field+0x114>
     93c:	ldr	r3, [r4, #4]
     940:	sub	r3, r3, #1
     944:	lsl	r3, r3, #4
     948:	add	r3, r4, r3
     94c:	ldr	r3, [r3, #8]
     950:	ldr	r3, [r3]
     954:	cmp	r3, #100	; 0x64
     958:	beq	9f8 <coda_cursor_goto_next_record_field+0x140>
     95c:	ldr	r3, [pc, #260]	; a68 <coda_cursor_goto_next_record_field+0x1b0>
     960:	bl	0 <__aeabi_read_tp>
     964:	ldr	r3, [pc, r3]
     968:	ldr	r0, [r0, r3]
     96c:	cmp	r0, #0
     970:	popeq	{r4, r5, r6, pc}
     974:	ldr	r3, [r4, #4]
     978:	add	r3, r4, r3, lsl #4
     97c:	ldr	r3, [r3, #-8]
     980:	ldr	r2, [r3]
     984:	cmp	r2, #99	; 0x63
     988:	ldrhi	r3, [r3, #4]
     98c:	ldr	r3, [r3, #8]
     990:	cmp	r3, #6
     994:	beq	a04 <coda_cursor_goto_next_record_field+0x14c>
     998:	mov	r0, #0
     99c:	pop	{r4, r5, r6, pc}
     9a0:	cmp	ip, #102	; 0x66
     9a4:	beq	9c4 <coda_cursor_goto_next_record_field+0x10c>
     9a8:	cmp	ip, #105	; 0x69
     9ac:	bhi	948 <coda_cursor_goto_next_record_field+0x90>
     9b0:	ldr	r3, [pc, #180]	; a6c <coda_cursor_goto_next_record_field+0x1b4>
     9b4:	ldr	r2, [pc, #180]	; a70 <coda_cursor_goto_next_record_field+0x1b8>
     9b8:	ldr	r1, [pc, #180]	; a74 <coda_cursor_goto_next_record_field+0x1bc>
     9bc:	ldr	r0, [pc, #180]	; a78 <coda_cursor_goto_next_record_field+0x1c0>
     9c0:	bl	0 <__assert_fail>
     9c4:	mvn	r0, #12
     9c8:	bl	0 <coda_set_error>
     9cc:	mvn	r0, #0
     9d0:	pop	{r4, r5, r6, pc}
     9d4:	mov	r0, r4
     9d8:	bl	0 <coda_ascbin_cursor_goto_next_record_field>
     9dc:	cmp	r0, #0
     9e0:	beq	93c <coda_cursor_goto_next_record_field+0x84>
     9e4:	b	9cc <coda_cursor_goto_next_record_field+0x114>
     9e8:	mvn	r0, #10
     9ec:	bl	0 <coda_set_error>
     9f0:	mvn	r0, #0
     9f4:	pop	{r4, r5, r6, pc}
     9f8:	mov	r0, r4
     9fc:	bl	0 <coda_mem_cursor_update_offset>
     a00:	b	95c <coda_cursor_goto_next_record_field+0xa4>
     a04:	mov	r0, r4
     a08:	bl	54c <coda_cursor_use_base_type_of_special_type>
     a0c:	adds	r0, r0, #0
     a10:	mvnne	r0, #0
     a14:	pop	{r4, r5, r6, pc}
     a18:	ldr	r3, [pc, #92]	; a7c <coda_cursor_goto_next_record_field+0x1c4>
     a1c:	ldr	r2, [pc, #80]	; a74 <coda_cursor_goto_next_record_field+0x1bc>
     a20:	ldr	r1, [pc, #88]	; a80 <coda_cursor_goto_next_record_field+0x1c8>
     a24:	mvn	r0, #99	; 0x63
     a28:	bl	0 <coda_set_error>
     a2c:	mvn	r0, #0
     a30:	pop	{r4, r5, r6, pc}
     a34:	mov	r0, r1
     a38:	bl	0 <coda_type_get_class_name>
     a3c:	ldr	r1, [pc, #64]	; a84 <coda_cursor_goto_next_record_field+0x1cc>
     a40:	mov	r2, r0
     a44:	mvn	r0, #104	; 0x68
     a48:	bl	0 <coda_set_error>
     a4c:	mvn	r0, #0
     a50:	pop	{r4, r5, r6, pc}
     a54:	ldr	r1, [pc, #44]	; a88 <coda_cursor_goto_next_record_field+0x1d0>
     a58:	mvn	r0, #104	; 0x68
     a5c:	bl	0 <coda_set_error>
     a60:	mov	r0, r5
     a64:	pop	{r4, r5, r6, pc}
     a68:	.word	0x000000fc
     a6c:	.word	0x00000084
     a70:	.word	0x000002fe
     a74:	.word	0x00000020
     a78:	.word	0x0000006c
     a7c:	.word	0x000002c2
     a80:	.word	0x000000b8
     a84:	.word	0x00000180
     a88:	.word	0x000001c0

00000a8c <coda_cursor_goto_available_union_field>:
     a8c:	push	{r4, lr}
     a90:	subs	r4, r0, #0
     a94:	beq	ba0 <coda_cursor_goto_available_union_field+0x114>
     a98:	ldr	r3, [r4, #4]
     a9c:	cmp	r3, #0
     aa0:	ble	ba0 <coda_cursor_goto_available_union_field+0x114>
     aa4:	add	r3, r4, r3, lsl #4
     aa8:	ldr	r3, [r3, #-8]
     aac:	cmp	r3, #0
     ab0:	beq	ba0 <coda_cursor_goto_available_union_field+0x114>
     ab4:	ldr	r2, [r3]
     ab8:	cmp	r2, #99	; 0x63
     abc:	ldrhi	r3, [r3, #4]
     ac0:	ldr	r0, [r3, #8]
     ac4:	cmp	r0, #0
     ac8:	bne	bbc <coda_cursor_goto_available_union_field+0x130>
     acc:	cmp	r2, #100	; 0x64
     ad0:	beq	b68 <coda_cursor_goto_available_union_field+0xdc>
     ad4:	bhi	b4c <coda_cursor_goto_available_union_field+0xc0>
     ad8:	cmp	r2, #1
     adc:	bhi	b00 <coda_cursor_goto_available_union_field+0x74>
     ae0:	mov	r0, r4
     ae4:	bl	0 <coda_ascbin_cursor_goto_available_union_field>
     ae8:	cmp	r0, #0
     aec:	bne	b78 <coda_cursor_goto_available_union_field+0xec>
     af0:	ldr	r3, [r4, #4]
     af4:	add	r3, r4, r3, lsl #4
     af8:	ldr	r3, [r3, #-8]
     afc:	ldr	r2, [r3]
     b00:	cmp	r2, #100	; 0x64
     b04:	beq	b80 <coda_cursor_goto_available_union_field+0xf4>
     b08:	ldr	r3, [pc, #200]	; bd8 <coda_cursor_goto_available_union_field+0x14c>
     b0c:	bl	0 <__aeabi_read_tp>
     b10:	ldr	r3, [pc, r3]
     b14:	ldr	r0, [r0, r3]
     b18:	cmp	r0, #0
     b1c:	popeq	{r4, pc}
     b20:	ldr	r3, [r4, #4]
     b24:	add	r3, r4, r3, lsl #4
     b28:	ldr	r3, [r3, #-8]
     b2c:	ldr	r2, [r3]
     b30:	cmp	r2, #99	; 0x63
     b34:	ldrhi	r3, [r3, #4]
     b38:	ldr	r3, [r3, #8]
     b3c:	cmp	r3, #6
     b40:	beq	b8c <coda_cursor_goto_available_union_field+0x100>
     b44:	mov	r0, #0
     b48:	pop	{r4, pc}
     b4c:	cmp	r2, #105	; 0x69
     b50:	bhi	b00 <coda_cursor_goto_available_union_field+0x74>
     b54:	ldr	r3, [pc, #128]	; bdc <coda_cursor_goto_available_union_field+0x150>
     b58:	ldr	r2, [pc, #128]	; be0 <coda_cursor_goto_available_union_field+0x154>
     b5c:	ldr	r1, [pc, #128]	; be4 <coda_cursor_goto_available_union_field+0x158>
     b60:	ldr	r0, [pc, #128]	; be8 <coda_cursor_goto_available_union_field+0x15c>
     b64:	bl	0 <__assert_fail>
     b68:	mov	r0, r4
     b6c:	bl	0 <coda_mem_cursor_goto_available_union_field>
     b70:	cmp	r0, #0
     b74:	beq	af0 <coda_cursor_goto_available_union_field+0x64>
     b78:	mvn	r0, #0
     b7c:	pop	{r4, pc}
     b80:	mov	r0, r4
     b84:	bl	0 <coda_mem_cursor_update_offset>
     b88:	b	b08 <coda_cursor_goto_available_union_field+0x7c>
     b8c:	mov	r0, r4
     b90:	bl	54c <coda_cursor_use_base_type_of_special_type>
     b94:	adds	r0, r0, #0
     b98:	mvnne	r0, #0
     b9c:	pop	{r4, pc}
     ba0:	ldr	r3, [pc, #68]	; bec <coda_cursor_goto_available_union_field+0x160>
     ba4:	ldr	r2, [pc, #56]	; be4 <coda_cursor_goto_available_union_field+0x158>
     ba8:	ldr	r1, [pc, #64]	; bf0 <coda_cursor_goto_available_union_field+0x164>
     bac:	mvn	r0, #99	; 0x63
     bb0:	bl	0 <coda_set_error>
     bb4:	mvn	r0, #0
     bb8:	pop	{r4, pc}
     bbc:	bl	0 <coda_type_get_class_name>
     bc0:	ldr	r1, [pc, #44]	; bf4 <coda_cursor_goto_available_union_field+0x168>
     bc4:	mov	r2, r0
     bc8:	mvn	r0, #104	; 0x68
     bcc:	bl	0 <coda_set_error>
     bd0:	mvn	r0, #0
     bd4:	pop	{r4, pc}
     bd8:	.word	0x000000c0
     bdc:	.word	0x000000a8
     be0:	.word	0x00000343
     be4:	.word	0x00000020
     be8:	.word	0x0000006c
     bec:	.word	0x00000323
     bf0:	.word	0x000000b8
     bf4:	.word	0x00000148

00000bf8 <coda_cursor_goto_array_element>:
     bf8:	push	{r4, lr}
     bfc:	subs	r4, r0, #0
     c00:	sub	sp, sp, #8
     c04:	beq	dac <coda_cursor_goto_array_element+0x1b4>
     c08:	ldr	lr, [r4, #4]
     c0c:	cmp	lr, #0
     c10:	ble	dac <coda_cursor_goto_array_element+0x1b4>
     c14:	add	r3, r4, lr, lsl #4
     c18:	ldr	r3, [r3, #-8]
     c1c:	cmp	r3, #0
     c20:	beq	dac <coda_cursor_goto_array_element+0x1b4>
     c24:	ldr	ip, [r3]
     c28:	cmp	ip, #99	; 0x63
     c2c:	ldrhi	r3, [r3, #4]
     c30:	ldr	r0, [r3, #8]
     c34:	cmp	r0, #1
     c38:	bne	d90 <coda_cursor_goto_array_element+0x198>
     c3c:	cmp	lr, #32
     c40:	beq	dc8 <coda_cursor_goto_array_element+0x1d0>
     c44:	cmp	ip, #101	; 0x65
     c48:	beq	d58 <coda_cursor_goto_array_element+0x160>
     c4c:	bls	c88 <coda_cursor_goto_array_element+0x90>
     c50:	cmp	ip, #103	; 0x67
     c54:	beq	d30 <coda_cursor_goto_array_element+0x138>
     c58:	bcc	d44 <coda_cursor_goto_array_element+0x14c>
     c5c:	cmp	ip, #104	; 0x68
     c60:	beq	d08 <coda_cursor_goto_array_element+0x110>
     c64:	cmp	ip, #105	; 0x69
     c68:	bne	cb8 <coda_cursor_goto_array_element+0xc0>
     c6c:	mov	r0, r4
     c70:	bl	0 <coda_grib_cursor_goto_array_element>
     c74:	cmp	r0, #0
     c78:	beq	ca8 <coda_cursor_goto_array_element+0xb0>
     c7c:	mvn	r0, #0
     c80:	add	sp, sp, #8
     c84:	pop	{r4, pc}
     c88:	cmp	ip, #1
     c8c:	bls	d1c <coda_cursor_goto_array_element+0x124>
     c90:	cmp	ip, #100	; 0x64
     c94:	bne	cc0 <coda_cursor_goto_array_element+0xc8>
     c98:	mov	r0, r4
     c9c:	bl	0 <coda_mem_cursor_goto_array_element>
     ca0:	cmp	r0, #0
     ca4:	bne	c7c <coda_cursor_goto_array_element+0x84>
     ca8:	ldr	r3, [r4, #4]
     cac:	add	r3, r4, r3, lsl #4
     cb0:	ldr	r3, [r3, #-8]
     cb4:	ldr	ip, [r3]
     cb8:	cmp	ip, #100	; 0x64
     cbc:	beq	d70 <coda_cursor_goto_array_element+0x178>
     cc0:	ldr	r3, [pc, #292]	; dec <coda_cursor_goto_array_element+0x1f4>
     cc4:	bl	0 <__aeabi_read_tp>
     cc8:	ldr	r3, [pc, r3]
     ccc:	ldr	r0, [r0, r3]
     cd0:	cmp	r0, #0
     cd4:	beq	d00 <coda_cursor_goto_array_element+0x108>
     cd8:	ldr	r3, [r4, #4]
     cdc:	add	r3, r4, r3, lsl #4
     ce0:	ldr	r3, [r3, #-8]
     ce4:	ldr	r2, [r3]
     ce8:	cmp	r2, #99	; 0x63
     cec:	ldrhi	r3, [r3, #4]
     cf0:	ldr	r3, [r3, #8]
     cf4:	cmp	r3, #6
     cf8:	movne	r0, #0
     cfc:	beq	d7c <coda_cursor_goto_array_element+0x184>
     d00:	add	sp, sp, #8
     d04:	pop	{r4, pc}
     d08:	mov	r0, r4
     d0c:	bl	0 <coda_netcdf_cursor_goto_array_element>
     d10:	cmp	r0, #0
     d14:	beq	ca8 <coda_cursor_goto_array_element+0xb0>
     d18:	b	c7c <coda_cursor_goto_array_element+0x84>
     d1c:	mov	r0, r4
     d20:	bl	0 <coda_ascbin_cursor_goto_array_element>
     d24:	cmp	r0, #0
     d28:	beq	ca8 <coda_cursor_goto_array_element+0xb0>
     d2c:	b	c7c <coda_cursor_goto_array_element+0x84>
     d30:	mov	r0, r4
     d34:	bl	0 <coda_cdf_cursor_goto_array_element>
     d38:	cmp	r0, #0
     d3c:	beq	ca8 <coda_cursor_goto_array_element+0xb0>
     d40:	b	c7c <coda_cursor_goto_array_element+0x84>
     d44:	mvn	r0, #12
     d48:	mov	r1, #0
     d4c:	bl	0 <coda_set_error>
     d50:	mvn	r0, #0
     d54:	b	c80 <coda_cursor_goto_array_element+0x88>
     d58:	mov	r1, #0
     d5c:	mvn	r0, #10
     d60:	bl	0 <coda_set_error>
     d64:	mvn	r0, #0
     d68:	add	sp, sp, #8
     d6c:	pop	{r4, pc}
     d70:	mov	r0, r4
     d74:	bl	0 <coda_mem_cursor_update_offset>
     d78:	b	cc0 <coda_cursor_goto_array_element+0xc8>
     d7c:	mov	r0, r4
     d80:	bl	54c <coda_cursor_use_base_type_of_special_type>
     d84:	adds	r0, r0, #0
     d88:	mvnne	r0, #0
     d8c:	b	d00 <coda_cursor_goto_array_element+0x108>
     d90:	bl	0 <coda_type_get_class_name>
     d94:	ldr	r1, [pc, #84]	; df0 <coda_cursor_goto_array_element+0x1f8>
     d98:	mov	r2, r0
     d9c:	mvn	r0, #104	; 0x68
     da0:	bl	0 <coda_set_error>
     da4:	mvn	r0, #0
     da8:	b	d00 <coda_cursor_goto_array_element+0x108>
     dac:	mvn	r0, #99	; 0x63
     db0:	ldr	r3, [pc, #60]	; df4 <coda_cursor_goto_array_element+0x1fc>
     db4:	ldr	r2, [pc, #60]	; df8 <coda_cursor_goto_array_element+0x200>
     db8:	ldr	r1, [pc, #60]	; dfc <coda_cursor_goto_array_element+0x204>
     dbc:	bl	0 <coda_set_error>
     dc0:	mvn	r0, #0
     dc4:	b	d00 <coda_cursor_goto_array_element+0x108>
     dc8:	ldr	r3, [pc, #48]	; e00 <coda_cursor_goto_array_element+0x208>
     dcc:	mvn	r0, #99	; 0x63
     dd0:	str	r3, [sp]
     dd4:	mov	r2, lr
     dd8:	ldr	r3, [pc, #24]	; df8 <coda_cursor_goto_array_element+0x200>
     ddc:	ldr	r1, [pc, #32]	; e04 <coda_cursor_goto_array_element+0x20c>
     de0:	bl	0 <coda_set_error>
     de4:	mvn	r0, #0
     de8:	b	d00 <coda_cursor_goto_array_element+0x108>
     dec:	.word	0x0000011c
     df0:	.word	0x00000218
     df4:	.word	0x0000037a
     df8:	.word	0x00000020
     dfc:	.word	0x000000b8
     e00:	.word	0x00000389
     e04:	.word	0x000000d8

00000e08 <coda_cursor_goto_array_element_by_index>:
     e08:	push	{r4, lr}
     e0c:	subs	r4, r0, #0
     e10:	sub	sp, sp, #8
     e14:	beq	fbc <coda_cursor_goto_array_element_by_index+0x1b4>
     e18:	ldr	r2, [r4, #4]
     e1c:	cmp	r2, #0
     e20:	ble	fbc <coda_cursor_goto_array_element_by_index+0x1b4>
     e24:	add	r3, r4, r2, lsl #4
     e28:	ldr	r3, [r3, #-8]
     e2c:	cmp	r3, #0
     e30:	beq	fbc <coda_cursor_goto_array_element_by_index+0x1b4>
     e34:	ldr	ip, [r3]
     e38:	cmp	ip, #99	; 0x63
     e3c:	ldrhi	r3, [r3, #4]
     e40:	ldr	r0, [r3, #8]
     e44:	cmp	r0, #1
     e48:	bne	fa0 <coda_cursor_goto_array_element_by_index+0x198>
     e4c:	cmp	r2, #32
     e50:	beq	fd8 <coda_cursor_goto_array_element_by_index+0x1d0>
     e54:	cmp	ip, #101	; 0x65
     e58:	beq	f68 <coda_cursor_goto_array_element_by_index+0x160>
     e5c:	bls	e98 <coda_cursor_goto_array_element_by_index+0x90>
     e60:	cmp	ip, #103	; 0x67
     e64:	beq	f40 <coda_cursor_goto_array_element_by_index+0x138>
     e68:	bcc	f54 <coda_cursor_goto_array_element_by_index+0x14c>
     e6c:	cmp	ip, #104	; 0x68
     e70:	beq	f18 <coda_cursor_goto_array_element_by_index+0x110>
     e74:	cmp	ip, #105	; 0x69
     e78:	bne	ec8 <coda_cursor_goto_array_element_by_index+0xc0>
     e7c:	mov	r0, r4
     e80:	bl	0 <coda_grib_cursor_goto_array_element_by_index>
     e84:	cmp	r0, #0
     e88:	beq	eb8 <coda_cursor_goto_array_element_by_index+0xb0>
     e8c:	mvn	r0, #0
     e90:	add	sp, sp, #8
     e94:	pop	{r4, pc}
     e98:	cmp	ip, #1
     e9c:	bls	f2c <coda_cursor_goto_array_element_by_index+0x124>
     ea0:	cmp	ip, #100	; 0x64
     ea4:	bne	ed0 <coda_cursor_goto_array_element_by_index+0xc8>
     ea8:	mov	r0, r4
     eac:	bl	0 <coda_mem_cursor_goto_array_element_by_index>
     eb0:	cmp	r0, #0
     eb4:	bne	e8c <coda_cursor_goto_array_element_by_index+0x84>
     eb8:	ldr	r3, [r4, #4]
     ebc:	add	r3, r4, r3, lsl #4
     ec0:	ldr	r3, [r3, #-8]
     ec4:	ldr	ip, [r3]
     ec8:	cmp	ip, #100	; 0x64
     ecc:	beq	f80 <coda_cursor_goto_array_element_by_index+0x178>
     ed0:	ldr	r3, [pc, #288]	; ff8 <coda_cursor_goto_array_element_by_index+0x1f0>
     ed4:	bl	0 <__aeabi_read_tp>
     ed8:	ldr	r3, [pc, r3]
     edc:	ldr	r0, [r0, r3]
     ee0:	cmp	r0, #0
     ee4:	beq	f10 <coda_cursor_goto_array_element_by_index+0x108>
     ee8:	ldr	r3, [r4, #4]
     eec:	add	r3, r4, r3, lsl #4
     ef0:	ldr	r3, [r3, #-8]
     ef4:	ldr	r2, [r3]
     ef8:	cmp	r2, #99	; 0x63
     efc:	ldrhi	r3, [r3, #4]
     f00:	ldr	r3, [r3, #8]
     f04:	cmp	r3, #6
     f08:	movne	r0, #0
     f0c:	beq	f8c <coda_cursor_goto_array_element_by_index+0x184>
     f10:	add	sp, sp, #8
     f14:	pop	{r4, pc}
     f18:	mov	r0, r4
     f1c:	bl	0 <coda_netcdf_cursor_goto_array_element_by_index>
     f20:	cmp	r0, #0
     f24:	beq	eb8 <coda_cursor_goto_array_element_by_index+0xb0>
     f28:	b	e8c <coda_cursor_goto_array_element_by_index+0x84>
     f2c:	mov	r0, r4
     f30:	bl	0 <coda_ascbin_cursor_goto_array_element_by_index>
     f34:	cmp	r0, #0
     f38:	beq	eb8 <coda_cursor_goto_array_element_by_index+0xb0>
     f3c:	b	e8c <coda_cursor_goto_array_element_by_index+0x84>
     f40:	mov	r0, r4
     f44:	bl	0 <coda_cdf_cursor_goto_array_element_by_index>
     f48:	cmp	r0, #0
     f4c:	beq	eb8 <coda_cursor_goto_array_element_by_index+0xb0>
     f50:	b	e8c <coda_cursor_goto_array_element_by_index+0x84>
     f54:	mvn	r0, #12
     f58:	mov	r1, #0
     f5c:	bl	0 <coda_set_error>
     f60:	mvn	r0, #0
     f64:	b	e90 <coda_cursor_goto_array_element_by_index+0x88>
     f68:	mov	r1, #0
     f6c:	mvn	r0, #10
     f70:	bl	0 <coda_set_error>
     f74:	mvn	r0, #0
     f78:	add	sp, sp, #8
     f7c:	pop	{r4, pc}
     f80:	mov	r0, r4
     f84:	bl	0 <coda_mem_cursor_update_offset>
     f88:	b	ed0 <coda_cursor_goto_array_element_by_index+0xc8>
     f8c:	mov	r0, r4
     f90:	bl	54c <coda_cursor_use_base_type_of_special_type>
     f94:	adds	r0, r0, #0
     f98:	mvnne	r0, #0
     f9c:	b	f10 <coda_cursor_goto_array_element_by_index+0x108>
     fa0:	bl	0 <coda_type_get_class_name>
     fa4:	ldr	r1, [pc, #80]	; ffc <coda_cursor_goto_array_element_by_index+0x1f4>
     fa8:	mov	r2, r0
     fac:	mvn	r0, #104	; 0x68
     fb0:	bl	0 <coda_set_error>
     fb4:	mvn	r0, #0
     fb8:	b	f10 <coda_cursor_goto_array_element_by_index+0x108>
     fbc:	mvn	r0, #99	; 0x63
     fc0:	mov	r3, #1008	; 0x3f0
     fc4:	ldr	r2, [pc, #52]	; 1000 <coda_cursor_goto_array_element_by_index+0x1f8>
     fc8:	ldr	r1, [pc, #52]	; 1004 <coda_cursor_goto_array_element_by_index+0x1fc>
     fcc:	bl	0 <coda_set_error>
     fd0:	mvn	r0, #0
     fd4:	b	f10 <coda_cursor_goto_array_element_by_index+0x108>
     fd8:	ldr	r3, [pc, #40]	; 1008 <coda_cursor_goto_array_element_by_index+0x200>
     fdc:	mvn	r0, #99	; 0x63
     fe0:	str	r3, [sp]
     fe4:	ldr	r1, [pc, #32]	; 100c <coda_cursor_goto_array_element_by_index+0x204>
     fe8:	ldr	r3, [pc, #16]	; 1000 <coda_cursor_goto_array_element_by_index+0x1f8>
     fec:	bl	0 <coda_set_error>
     ff0:	mvn	r0, #0
     ff4:	b	f10 <coda_cursor_goto_array_element_by_index+0x108>
     ff8:	.word	0x00000118
     ffc:	.word	0x00000218
    1000:	.word	0x00000020
    1004:	.word	0x000000b8
    1008:	.word	0x000003ff
    100c:	.word	0x000000d8

00001010 <coda_cursor_goto_first_array_element>:
    1010:	mov	r1, #0
    1014:	b	e08 <coda_cursor_goto_array_element_by_index>

00001018 <coda_cursor_goto_next_array_element>:
    1018:	push	{r4, r5, r6, lr}
    101c:	subs	r4, r0, #0
    1020:	beq	11d4 <coda_cursor_goto_next_array_element+0x1bc>
    1024:	ldr	r2, [r4, #4]
    1028:	cmp	r2, #1
    102c:	ble	11d4 <coda_cursor_goto_next_array_element+0x1bc>
    1030:	sub	r3, r2, #1
    1034:	lsl	r3, r3, #4
    1038:	add	r1, r4, r3
    103c:	ldr	ip, [r1, #8]
    1040:	cmp	ip, #0
    1044:	beq	11d4 <coda_cursor_goto_next_array_element+0x1bc>
    1048:	add	r2, r4, r2, lsl #4
    104c:	ldr	r2, [r2, #-24]	; 0xffffffe8
    1050:	ldr	r1, [r2]
    1054:	cmp	r1, #99	; 0x63
    1058:	ldrhi	r2, [r2, #4]
    105c:	ldr	r0, [r2, #8]
    1060:	cmp	r0, #1
    1064:	bne	11b8 <coda_cursor_goto_next_array_element+0x1a0>
    1068:	add	r3, r4, r3
    106c:	ldr	r5, [r3, #12]
    1070:	cmn	r5, #1
    1074:	beq	11f0 <coda_cursor_goto_next_array_element+0x1d8>
    1078:	cmp	r1, #101	; 0x65
    107c:	beq	1184 <coda_cursor_goto_next_array_element+0x16c>
    1080:	bls	10b8 <coda_cursor_goto_next_array_element+0xa0>
    1084:	cmp	r1, #103	; 0x67
    1088:	beq	115c <coda_cursor_goto_next_array_element+0x144>
    108c:	bcc	1170 <coda_cursor_goto_next_array_element+0x158>
    1090:	cmp	r1, #104	; 0x68
    1094:	beq	1148 <coda_cursor_goto_next_array_element+0x130>
    1098:	cmp	r1, #105	; 0x69
    109c:	bne	10e4 <coda_cursor_goto_next_array_element+0xcc>
    10a0:	mov	r0, r4
    10a4:	bl	0 <coda_grib_cursor_goto_next_array_element>
    10a8:	cmp	r0, #0
    10ac:	beq	10d8 <coda_cursor_goto_next_array_element+0xc0>
    10b0:	mvn	r0, #0
    10b4:	pop	{r4, r5, r6, pc}
    10b8:	cmp	r1, #1
    10bc:	bls	1134 <coda_cursor_goto_next_array_element+0x11c>
    10c0:	cmp	r1, #100	; 0x64
    10c4:	bne	10e4 <coda_cursor_goto_next_array_element+0xcc>
    10c8:	mov	r0, r4
    10cc:	bl	0 <coda_mem_cursor_goto_next_array_element>
    10d0:	cmp	r0, #0
    10d4:	bne	10b0 <coda_cursor_goto_next_array_element+0x98>
    10d8:	ldr	r3, [r4, #4]
    10dc:	add	r3, r4, r3, lsl #4
    10e0:	ldr	ip, [r3, #-8]
    10e4:	ldr	r3, [ip]
    10e8:	cmp	r3, #100	; 0x64
    10ec:	beq	1198 <coda_cursor_goto_next_array_element+0x180>
    10f0:	ldr	r3, [pc, #268]	; 1204 <coda_cursor_goto_next_array_element+0x1ec>
    10f4:	bl	0 <__aeabi_read_tp>
    10f8:	ldr	r3, [pc, r3]
    10fc:	ldr	r0, [r0, r3]
    1100:	cmp	r0, #0
    1104:	popeq	{r4, r5, r6, pc}
    1108:	ldr	r3, [r4, #4]
    110c:	add	r3, r4, r3, lsl #4
    1110:	ldr	r3, [r3, #-8]
    1114:	ldr	r2, [r3]
    1118:	cmp	r2, #99	; 0x63
    111c:	ldrhi	r3, [r3, #4]
    1120:	ldr	r3, [r3, #8]
    1124:	cmp	r3, #6
    1128:	beq	11a4 <coda_cursor_goto_next_array_element+0x18c>
    112c:	mov	r0, #0
    1130:	pop	{r4, r5, r6, pc}
    1134:	mov	r0, r4
    1138:	bl	0 <coda_ascbin_cursor_goto_next_array_element>
    113c:	cmp	r0, #0
    1140:	beq	10d8 <coda_cursor_goto_next_array_element+0xc0>
    1144:	b	10b0 <coda_cursor_goto_next_array_element+0x98>
    1148:	mov	r0, r4
    114c:	bl	0 <coda_netcdf_cursor_goto_next_array_element>
    1150:	cmp	r0, #0
    1154:	beq	10d8 <coda_cursor_goto_next_array_element+0xc0>
    1158:	b	10b0 <coda_cursor_goto_next_array_element+0x98>
    115c:	mov	r0, r4
    1160:	bl	0 <coda_cdf_cursor_goto_next_array_element>
    1164:	cmp	r0, #0
    1168:	beq	10d8 <coda_cursor_goto_next_array_element+0xc0>
    116c:	b	10b0 <coda_cursor_goto_next_array_element+0x98>
    1170:	mov	r1, #0
    1174:	mvn	r0, #12
    1178:	bl	0 <coda_set_error>
    117c:	mvn	r0, #0
    1180:	pop	{r4, r5, r6, pc}
    1184:	mov	r1, #0
    1188:	mvn	r0, #10
    118c:	bl	0 <coda_set_error>
    1190:	mvn	r0, #0
    1194:	pop	{r4, r5, r6, pc}
    1198:	mov	r0, r4
    119c:	bl	0 <coda_mem_cursor_update_offset>
    11a0:	b	10f0 <coda_cursor_goto_next_array_element+0xd8>
    11a4:	mov	r0, r4
    11a8:	bl	54c <coda_cursor_use_base_type_of_special_type>
    11ac:	adds	r0, r0, #0
    11b0:	mvnne	r0, #0
    11b4:	pop	{r4, r5, r6, pc}
    11b8:	bl	0 <coda_type_get_class_name>
    11bc:	ldr	r1, [pc, #68]	; 1208 <coda_cursor_goto_next_array_element+0x1f0>
    11c0:	mov	r2, r0
    11c4:	mvn	r0, #104	; 0x68
    11c8:	bl	0 <coda_set_error>
    11cc:	mvn	r0, #0
    11d0:	pop	{r4, r5, r6, pc}
    11d4:	ldr	r3, [pc, #48]	; 120c <coda_cursor_goto_next_array_element+0x1f4>
    11d8:	ldr	r2, [pc, #48]	; 1210 <coda_cursor_goto_next_array_element+0x1f8>
    11dc:	ldr	r1, [pc, #48]	; 1214 <coda_cursor_goto_next_array_element+0x1fc>
    11e0:	mvn	r0, #99	; 0x63
    11e4:	bl	0 <coda_set_error>
    11e8:	mvn	r0, #0
    11ec:	pop	{r4, r5, r6, pc}
    11f0:	ldr	r1, [pc, #32]	; 1218 <coda_cursor_goto_next_array_element+0x200>
    11f4:	mvn	r0, #104	; 0x68
    11f8:	bl	0 <coda_set_error>
    11fc:	mov	r0, r5
    1200:	pop	{r4, r5, r6, pc}
    1204:	.word	0x00000104
    1208:	.word	0x00000250
    120c:	.word	0x0000046e
    1210:	.word	0x00000020
    1214:	.word	0x000000b8
    1218:	.word	0x00000294

0000121c <coda_cursor_goto_root>:
    121c:	push	{r4, lr}
    1220:	subs	r4, r0, #0
    1224:	beq	12bc <coda_cursor_goto_root+0xa0>
    1228:	ldr	r3, [r4, #4]
    122c:	cmp	r3, #0
    1230:	ble	12bc <coda_cursor_goto_root+0xa0>
    1234:	add	r3, r4, r3, lsl #4
    1238:	ldr	r3, [r3, #-8]
    123c:	cmp	r3, #0
    1240:	beq	12bc <coda_cursor_goto_root+0xa0>
    1244:	ldr	r3, [r4, #8]
    1248:	mov	r2, #1
    124c:	str	r2, [r4, #4]
    1250:	ldr	r3, [r3]
    1254:	cmp	r3, #100	; 0x64
    1258:	beq	12b4 <coda_cursor_goto_root+0x98>
    125c:	ldr	r3, [pc, #116]	; 12d8 <coda_cursor_goto_root+0xbc>
    1260:	bl	0 <__aeabi_read_tp>
    1264:	ldr	r3, [pc, r3]
    1268:	ldr	r0, [r0, r3]
    126c:	cmp	r0, #0
    1270:	popeq	{r4, pc}
    1274:	ldr	r3, [r4, #4]
    1278:	add	r3, r4, r3, lsl #4
    127c:	ldr	r3, [r3, #-8]
    1280:	ldr	r2, [r3]
    1284:	cmp	r2, #99	; 0x63
    1288:	ldrhi	r3, [r3, #4]
    128c:	ldr	r3, [r3, #8]
    1290:	cmp	r3, #6
    1294:	beq	12a0 <coda_cursor_goto_root+0x84>
    1298:	mov	r0, #0
    129c:	pop	{r4, pc}
    12a0:	mov	r0, r4
    12a4:	bl	54c <coda_cursor_use_base_type_of_special_type>
    12a8:	adds	r0, r0, #0
    12ac:	mvnne	r0, #0
    12b0:	pop	{r4, pc}
    12b4:	bl	0 <coda_mem_cursor_update_offset>
    12b8:	b	125c <coda_cursor_goto_root+0x40>
    12bc:	ldr	r3, [pc, #24]	; 12dc <coda_cursor_goto_root+0xc0>
    12c0:	ldr	r2, [pc, #24]	; 12e0 <coda_cursor_goto_root+0xc4>
    12c4:	ldr	r1, [pc, #24]	; 12e4 <coda_cursor_goto_root+0xc8>
    12c8:	mvn	r0, #99	; 0x63
    12cc:	bl	0 <coda_set_error>
    12d0:	mvn	r0, #0
    12d4:	pop	{r4, pc}
    12d8:	.word	0x0000006c
    12dc:	.word	0x0000054f
    12e0:	.word	0x00000020
    12e4:	.word	0x000000b8

000012e8 <coda_cursor_has_ascii_content>:
    12e8:	subs	r2, r0, #0
    12ec:	push	{r4, lr}
    12f0:	sub	sp, sp, #520	; 0x208
    12f4:	beq	13a0 <coda_cursor_has_ascii_content+0xb8>
    12f8:	ldr	r3, [r2, #4]
    12fc:	cmp	r3, #0
    1300:	ble	13a0 <coda_cursor_has_ascii_content+0xb8>
    1304:	add	r3, r2, r3, lsl #4
    1308:	ldr	r3, [r3, #-8]
    130c:	cmp	r3, #0
    1310:	beq	13a0 <coda_cursor_has_ascii_content+0xb8>
    1314:	cmp	r1, #0
    1318:	mov	r4, r1
    131c:	beq	13bc <coda_cursor_has_ascii_content+0xd4>
    1320:	ldr	r0, [r3]
    1324:	cmp	r0, #0
    1328:	moveq	r3, #1
    132c:	streq	r3, [r1]
    1330:	beq	1364 <coda_cursor_has_ascii_content+0x7c>
    1334:	cmp	r0, #99	; 0x63
    1338:	ldrhi	r3, [r3, #4]
    133c:	ldr	r1, [r3, #8]
    1340:	cmp	r1, #6
    1344:	beq	136c <coda_cursor_has_ascii_content+0x84>
    1348:	ldr	r3, [r3]
    134c:	mov	r0, #0
    1350:	cmp	r1, #4
    1354:	cmpne	r3, r0
    1358:	moveq	r3, #1
    135c:	movne	r3, #0
    1360:	str	r3, [r4]
    1364:	add	sp, sp, #520	; 0x208
    1368:	pop	{r4, pc}
    136c:	mov	r1, r2
    1370:	mov	r0, sp
    1374:	mov	r2, #520	; 0x208
    1378:	bl	0 <memcpy>
    137c:	mov	r0, sp
    1380:	bl	54c <coda_cursor_use_base_type_of_special_type>
    1384:	cmp	r0, #0
    1388:	mvnne	r0, #0
    138c:	bne	1364 <coda_cursor_has_ascii_content+0x7c>
    1390:	mov	r1, r4
    1394:	mov	r0, sp
    1398:	bl	12e8 <coda_cursor_has_ascii_content>
    139c:	b	1364 <coda_cursor_has_ascii_content+0x7c>
    13a0:	mvn	r0, #99	; 0x63
    13a4:	ldr	r3, [pc, #44]	; 13d8 <coda_cursor_has_ascii_content+0xf0>
    13a8:	ldr	r2, [pc, #44]	; 13dc <coda_cursor_has_ascii_content+0xf4>
    13ac:	ldr	r1, [pc, #44]	; 13e0 <coda_cursor_has_ascii_content+0xf8>
    13b0:	bl	0 <coda_set_error>
    13b4:	mvn	r0, #0
    13b8:	b	1364 <coda_cursor_has_ascii_content+0x7c>
    13bc:	mvn	r0, #99	; 0x63
    13c0:	ldr	r3, [pc, #28]	; 13e4 <coda_cursor_has_ascii_content+0xfc>
    13c4:	ldr	r2, [pc, #16]	; 13dc <coda_cursor_has_ascii_content+0xf4>
    13c8:	ldr	r1, [pc, #24]	; 13e8 <coda_cursor_has_ascii_content+0x100>
    13cc:	bl	0 <coda_set_error>
    13d0:	mvn	r0, #0
    13d4:	b	1364 <coda_cursor_has_ascii_content+0x7c>
    13d8:	.word	0x000005c5
    13dc:	.word	0x00000020
    13e0:	.word	0x000000b8
    13e4:	.word	0x000005ca
    13e8:	.word	0x000002ec

000013ec <coda_cursor_has_attributes>:
    13ec:	cmp	r0, #0
    13f0:	push	{r4, lr}
    13f4:	beq	1440 <coda_cursor_has_attributes+0x54>
    13f8:	ldr	r3, [r0, #4]
    13fc:	cmp	r3, #0
    1400:	ble	1440 <coda_cursor_has_attributes+0x54>
    1404:	add	r0, r0, r3, lsl #4
    1408:	ldr	r3, [r0, #-8]
    140c:	cmp	r3, #0
    1410:	beq	1440 <coda_cursor_has_attributes+0x54>
    1414:	cmp	r1, #0
    1418:	beq	145c <coda_cursor_has_attributes+0x70>
    141c:	ldr	r2, [r3]
    1420:	mov	r0, #0
    1424:	cmp	r2, #99	; 0x63
    1428:	ldrhi	r3, [r3, #4]
    142c:	ldr	r3, [r3, #36]	; 0x24
    1430:	subs	r3, r3, r0
    1434:	movne	r3, #1
    1438:	str	r3, [r1]
    143c:	pop	{r4, pc}
    1440:	ldr	r3, [pc, #48]	; 1478 <coda_cursor_has_attributes+0x8c>
    1444:	ldr	r2, [pc, #48]	; 147c <coda_cursor_has_attributes+0x90>
    1448:	ldr	r1, [pc, #48]	; 1480 <coda_cursor_has_attributes+0x94>
    144c:	mvn	r0, #99	; 0x63
    1450:	bl	0 <coda_set_error>
    1454:	mvn	r0, #0
    1458:	pop	{r4, pc}
    145c:	ldr	r3, [pc, #32]	; 1484 <coda_cursor_has_attributes+0x98>
    1460:	ldr	r2, [pc, #20]	; 147c <coda_cursor_has_attributes+0x90>
    1464:	ldr	r1, [pc, #28]	; 1488 <coda_cursor_has_attributes+0x9c>
    1468:	mvn	r0, #99	; 0x63
    146c:	bl	0 <coda_set_error>
    1470:	mvn	r0, #0
    1474:	pop	{r4, pc}
    1478:	.word	0x000005f8
    147c:	.word	0x00000020
    1480:	.word	0x000000b8
    1484:	.word	0x000005fd
    1488:	.word	0x00000318

0000148c <coda_cursor_get_string_length>:
    148c:	push	{r4, r5, lr}
    1490:	subs	r4, r0, #0
    1494:	sub	sp, sp, #12
    1498:	beq	15d0 <coda_cursor_get_string_length+0x144>
    149c:	ldr	r3, [r4, #4]
    14a0:	cmp	r3, #0
    14a4:	ble	15d0 <coda_cursor_get_string_length+0x144>
    14a8:	add	r3, r4, r3, lsl #4
    14ac:	ldr	r3, [r3, #-8]
    14b0:	cmp	r3, #0
    14b4:	beq	15d0 <coda_cursor_get_string_length+0x144>
    14b8:	cmp	r1, #0
    14bc:	mov	r5, r1
    14c0:	beq	1600 <coda_cursor_get_string_length+0x174>
    14c4:	add	r1, sp, #4
    14c8:	bl	12e8 <coda_cursor_has_ascii_content>
    14cc:	subs	r1, r0, #0
    14d0:	bne	15c8 <coda_cursor_get_string_length+0x13c>
    14d4:	ldr	r3, [sp, #4]
    14d8:	cmp	r3, #0
    14dc:	beq	15ec <coda_cursor_get_string_length+0x160>
    14e0:	ldr	r3, [r4, #4]
    14e4:	add	r3, r4, r3, lsl #4
    14e8:	ldr	r3, [r3, #-8]
    14ec:	ldr	r3, [r3]
    14f0:	cmp	r3, #101	; 0x65
    14f4:	beq	15b4 <coda_cursor_get_string_length+0x128>
    14f8:	bls	1524 <coda_cursor_get_string_length+0x98>
    14fc:	cmp	r3, #103	; 0x67
    1500:	beq	1578 <coda_cursor_get_string_length+0xec>
    1504:	bcc	154c <coda_cursor_get_string_length+0xc0>
    1508:	cmp	r3, #104	; 0x68
    150c:	bne	158c <coda_cursor_get_string_length+0x100>
    1510:	mov	r1, r5
    1514:	mov	r0, r4
    1518:	bl	0 <coda_netcdf_cursor_get_string_length>
    151c:	add	sp, sp, #12
    1520:	pop	{r4, r5, pc}
    1524:	cmp	r3, #1
    1528:	beq	15a0 <coda_cursor_get_string_length+0x114>
    152c:	bcc	1564 <coda_cursor_get_string_length+0xd8>
    1530:	cmp	r3, #100	; 0x64
    1534:	bne	158c <coda_cursor_get_string_length+0x100>
    1538:	mov	r1, r5
    153c:	mov	r0, r4
    1540:	bl	0 <coda_mem_cursor_get_string_length>
    1544:	add	sp, sp, #12
    1548:	pop	{r4, r5, pc}
    154c:	mov	r1, #0
    1550:	mvn	r0, #12
    1554:	bl	0 <coda_set_error>
    1558:	mvn	r0, #0
    155c:	add	sp, sp, #12
    1560:	pop	{r4, r5, pc}
    1564:	mov	r1, r5
    1568:	mov	r0, r4
    156c:	bl	0 <coda_ascii_cursor_get_string_length>
    1570:	add	sp, sp, #12
    1574:	pop	{r4, r5, pc}
    1578:	mov	r1, r5
    157c:	mov	r0, r4
    1580:	bl	0 <coda_cdf_cursor_get_string_length>
    1584:	add	sp, sp, #12
    1588:	pop	{r4, r5, pc}
    158c:	ldr	r3, [pc, #136]	; 161c <coda_cursor_get_string_length+0x190>
    1590:	ldr	r2, [pc, #136]	; 1620 <coda_cursor_get_string_length+0x194>
    1594:	ldr	r1, [pc, #136]	; 1624 <coda_cursor_get_string_length+0x198>
    1598:	ldr	r0, [pc, #136]	; 1628 <coda_cursor_get_string_length+0x19c>
    159c:	bl	0 <__assert_fail>
    15a0:	mov	r1, r5
    15a4:	mov	r0, r4
    15a8:	bl	0 <coda_bin_cursor_get_string_length>
    15ac:	add	sp, sp, #12
    15b0:	pop	{r4, r5, pc}
    15b4:	mvn	r0, #10
    15b8:	bl	0 <coda_set_error>
    15bc:	mvn	r0, #0
    15c0:	add	sp, sp, #12
    15c4:	pop	{r4, r5, pc}
    15c8:	mvn	r0, #0
    15cc:	b	151c <coda_cursor_get_string_length+0x90>
    15d0:	mvn	r0, #99	; 0x63
    15d4:	ldr	r3, [pc, #80]	; 162c <coda_cursor_get_string_length+0x1a0>
    15d8:	ldr	r2, [pc, #68]	; 1624 <coda_cursor_get_string_length+0x198>
    15dc:	ldr	r1, [pc, #76]	; 1630 <coda_cursor_get_string_length+0x1a4>
    15e0:	bl	0 <coda_set_error>
    15e4:	mvn	r0, #0
    15e8:	b	151c <coda_cursor_get_string_length+0x90>
    15ec:	mvn	r0, #104	; 0x68
    15f0:	ldr	r1, [pc, #60]	; 1634 <coda_cursor_get_string_length+0x1a8>
    15f4:	bl	0 <coda_set_error>
    15f8:	mvn	r0, #0
    15fc:	b	151c <coda_cursor_get_string_length+0x90>
    1600:	mvn	r0, #99	; 0x63
    1604:	ldr	r3, [pc, #44]	; 1638 <coda_cursor_get_string_length+0x1ac>
    1608:	ldr	r2, [pc, #20]	; 1624 <coda_cursor_get_string_length+0x198>
    160c:	ldr	r1, [pc, #40]	; 163c <coda_cursor_get_string_length+0x1b0>
    1610:	bl	0 <coda_set_error>
    1614:	mvn	r0, #0
    1618:	b	151c <coda_cursor_get_string_length+0x90>
    161c:	.word	0x000000d0
    1620:	.word	0x00000648
    1624:	.word	0x00000020
    1628:	.word	0x0000006c
    162c:	.word	0x00000617
    1630:	.word	0x000000b8
    1634:	.word	0x00000360
    1638:	.word	0x0000061c
    163c:	.word	0x00000340

00001640 <coda_cursor_get_bit_size>:
    1640:	subs	r3, r0, #0
    1644:	beq	16b4 <coda_cursor_get_bit_size+0x74>
    1648:	ldr	r2, [r3, #4]
    164c:	cmp	r2, #0
    1650:	ble	16b4 <coda_cursor_get_bit_size+0x74>
    1654:	add	r3, r3, r2, lsl #4
    1658:	ldr	r3, [r3, #-8]
    165c:	cmp	r3, #0
    1660:	beq	16b4 <coda_cursor_get_bit_size+0x74>
    1664:	ldr	r3, [r3]
    1668:	cmp	r3, #100	; 0x64
    166c:	beq	16b0 <coda_cursor_get_bit_size+0x70>
    1670:	bhi	1688 <coda_cursor_get_bit_size+0x48>
    1674:	cmp	r3, #0
    1678:	beq	16ac <coda_cursor_get_bit_size+0x6c>
    167c:	cmp	r3, #1
    1680:	bne	16a4 <coda_cursor_get_bit_size+0x64>
    1684:	b	0 <coda_bin_cursor_get_bit_size>
    1688:	cmp	r3, #105	; 0x69
    168c:	bhi	16a4 <coda_cursor_get_bit_size+0x64>
    1690:	mvn	r2, #0
    1694:	mvn	r3, #0
    1698:	mov	r0, #0
    169c:	strd	r2, [r1]
    16a0:	bx	lr
    16a4:	mov	r0, #0
    16a8:	bx	lr
    16ac:	b	0 <coda_ascii_cursor_get_bit_size>
    16b0:	b	0 <coda_mem_cursor_get_bit_size>
    16b4:	push	{r4, lr}
    16b8:	mvn	r0, #99	; 0x63
    16bc:	ldr	r3, [pc, #16]	; 16d4 <coda_cursor_get_bit_size+0x94>
    16c0:	ldr	r2, [pc, #16]	; 16d8 <coda_cursor_get_bit_size+0x98>
    16c4:	ldr	r1, [pc, #16]	; 16dc <coda_cursor_get_bit_size+0x9c>
    16c8:	bl	0 <coda_set_error>
    16cc:	mvn	r0, #0
    16d0:	pop	{r4, pc}
    16d4:	.word	0x0000065e
    16d8:	.word	0x00000020
    16dc:	.word	0x000000b8

000016e0 <coda_cursor_get_byte_size>:
    16e0:	subs	r3, r0, #0
    16e4:	push	{r4, r6, r7, r8, r9, lr}
    16e8:	sub	sp, sp, #8
    16ec:	beq	1780 <coda_cursor_get_byte_size+0xa0>
    16f0:	ldr	r2, [r3, #4]
    16f4:	cmp	r2, #0
    16f8:	ble	1780 <coda_cursor_get_byte_size+0xa0>
    16fc:	add	r3, r3, r2, lsl #4
    1700:	ldr	r3, [r3, #-8]
    1704:	cmp	r3, #0
    1708:	beq	1780 <coda_cursor_get_byte_size+0xa0>
    170c:	mov	r4, r1
    1710:	mov	r1, sp
    1714:	bl	1640 <coda_cursor_get_bit_size>
    1718:	cmp	r0, #0
    171c:	bne	1778 <coda_cursor_get_byte_size+0x98>
    1720:	ldrd	r6, [sp]
    1724:	cmp	r6, #0
    1728:	sbcs	r3, r7, #0
    172c:	blt	1764 <coda_cursor_get_byte_size+0x84>
    1730:	and	r8, r6, #7
    1734:	mov	r9, #0
    1738:	orrs	r1, r8, r9
    173c:	lsr	r2, r6, #3
    1740:	orr	r2, r2, r7, lsl #29
    1744:	movne	r1, #1
    1748:	moveq	r1, #0
    174c:	adds	r2, r2, r1
    1750:	asr	r3, r7, #3
    1754:	adc	r3, r3, #0
    1758:	strd	r2, [r4]
    175c:	add	sp, sp, #8
    1760:	pop	{r4, r6, r7, r8, r9, pc}
    1764:	mvn	r2, #0
    1768:	mvn	r3, #0
    176c:	strd	r2, [r4]
    1770:	add	sp, sp, #8
    1774:	pop	{r4, r6, r7, r8, r9, pc}
    1778:	mvn	r0, #0
    177c:	b	175c <coda_cursor_get_byte_size+0x7c>
    1780:	mvn	r0, #99	; 0x63
    1784:	ldr	r3, [pc, #16]	; 179c <coda_cursor_get_byte_size+0xbc>
    1788:	ldr	r2, [pc, #16]	; 17a0 <coda_cursor_get_byte_size+0xc0>
    178c:	ldr	r1, [pc, #16]	; 17a4 <coda_cursor_get_byte_size+0xc4>
    1790:	bl	0 <coda_set_error>
    1794:	mvn	r0, #0
    1798:	b	175c <coda_cursor_get_byte_size+0x7c>
    179c:	.word	0x00000686
    17a0:	.word	0x00000020
    17a4:	.word	0x000000b8

000017a8 <coda_cursor_get_num_elements>:
    17a8:	subs	r3, r0, #0
    17ac:	push	{r4, lr}
    17b0:	beq	187c <coda_cursor_get_num_elements+0xd4>
    17b4:	ldr	r2, [r3, #4]
    17b8:	cmp	r2, #0
    17bc:	ble	187c <coda_cursor_get_num_elements+0xd4>
    17c0:	add	r3, r3, r2, lsl #4
    17c4:	ldr	r3, [r3, #-8]
    17c8:	cmp	r3, #0
    17cc:	beq	187c <coda_cursor_get_num_elements+0xd4>
    17d0:	ldr	r3, [r3]
    17d4:	cmp	r3, #101	; 0x65
    17d8:	beq	1868 <coda_cursor_get_num_elements+0xc0>
    17dc:	bls	1804 <coda_cursor_get_num_elements+0x5c>
    17e0:	cmp	r3, #103	; 0x67
    17e4:	beq	1860 <coda_cursor_get_num_elements+0xb8>
    17e8:	bcc	184c <coda_cursor_get_num_elements+0xa4>
    17ec:	cmp	r3, #104	; 0x68
    17f0:	beq	1828 <coda_cursor_get_num_elements+0x80>
    17f4:	cmp	r3, #105	; 0x69
    17f8:	bne	1838 <coda_cursor_get_num_elements+0x90>
    17fc:	pop	{r4, lr}
    1800:	b	0 <coda_grib_cursor_get_num_elements>
    1804:	cmp	r3, #1
    1808:	beq	1830 <coda_cursor_get_num_elements+0x88>
    180c:	bcc	1820 <coda_cursor_get_num_elements+0x78>
    1810:	cmp	r3, #100	; 0x64
    1814:	bne	1838 <coda_cursor_get_num_elements+0x90>
    1818:	pop	{r4, lr}
    181c:	b	0 <coda_mem_cursor_get_num_elements>
    1820:	pop	{r4, lr}
    1824:	b	0 <coda_ascii_cursor_get_num_elements>
    1828:	pop	{r4, lr}
    182c:	b	0 <coda_netcdf_cursor_get_num_elements>
    1830:	pop	{r4, lr}
    1834:	b	0 <coda_bin_cursor_get_num_elements>
    1838:	ldr	r3, [pc, #88]	; 1898 <coda_cursor_get_num_elements+0xf0>
    183c:	ldr	r2, [pc, #88]	; 189c <coda_cursor_get_num_elements+0xf4>
    1840:	ldr	r1, [pc, #88]	; 18a0 <coda_cursor_get_num_elements+0xf8>
    1844:	ldr	r0, [pc, #88]	; 18a4 <coda_cursor_get_num_elements+0xfc>
    1848:	bl	0 <__assert_fail>
    184c:	mov	r1, #0
    1850:	mvn	r0, #12
    1854:	bl	0 <coda_set_error>
    1858:	mvn	r0, #0
    185c:	pop	{r4, pc}
    1860:	pop	{r4, lr}
    1864:	b	0 <coda_cdf_cursor_get_num_elements>
    1868:	mov	r1, #0
    186c:	mvn	r0, #10
    1870:	bl	0 <coda_set_error>
    1874:	mvn	r0, #0
    1878:	pop	{r4, pc}
    187c:	ldr	r3, [pc, #36]	; 18a8 <coda_cursor_get_num_elements+0x100>
    1880:	ldr	r2, [pc, #24]	; 18a0 <coda_cursor_get_num_elements+0xf8>
    1884:	ldr	r1, [pc, #32]	; 18ac <coda_cursor_get_num_elements+0x104>
    1888:	mvn	r0, #99	; 0x63
    188c:	bl	0 <coda_set_error>
    1890:	mvn	r0, #0
    1894:	pop	{r4, pc}
    1898:	.word	0x000000f0
    189c:	.word	0x000006ca
    18a0:	.word	0x00000020
    18a4:	.word	0x0000006c
    18a8:	.word	0x000006a8
    18ac:	.word	0x000000b8

000018b0 <coda_cursor_get_product_file>:
    18b0:	cmp	r0, #0
    18b4:	beq	18e4 <coda_cursor_get_product_file+0x34>
    18b8:	ldr	r3, [r0, #4]
    18bc:	cmp	r3, #0
    18c0:	ble	18e4 <coda_cursor_get_product_file+0x34>
    18c4:	add	r3, r0, r3, lsl #4
    18c8:	ldr	r3, [r3, #-8]
    18cc:	cmp	r3, #0
    18d0:	beq	18e4 <coda_cursor_get_product_file+0x34>
    18d4:	ldr	r3, [r0]
    18d8:	mov	r0, #0
    18dc:	str	r3, [r1]
    18e0:	bx	lr
    18e4:	push	{r4, lr}
    18e8:	mvn	r0, #99	; 0x63
    18ec:	ldr	r3, [pc, #16]	; 1904 <coda_cursor_get_product_file+0x54>
    18f0:	ldr	r2, [pc, #16]	; 1908 <coda_cursor_get_product_file+0x58>
    18f4:	ldr	r1, [pc, #16]	; 190c <coda_cursor_get_product_file+0x5c>
    18f8:	bl	0 <coda_set_error>
    18fc:	mvn	r0, #0
    1900:	pop	{r4, pc}
    1904:	.word	0x000006d9
    1908:	.word	0x00000020
    190c:	.word	0x000000b8

00001910 <coda_cursor_get_depth>:
    1910:	cmp	r0, #0
    1914:	push	{r4, lr}
    1918:	beq	1950 <coda_cursor_get_depth+0x40>
    191c:	ldr	r3, [r0, #4]
    1920:	cmp	r3, #0
    1924:	ble	1950 <coda_cursor_get_depth+0x40>
    1928:	sub	r3, r3, #1
    192c:	add	r0, r0, r3, lsl #4
    1930:	ldr	r2, [r0, #8]
    1934:	cmp	r2, #0
    1938:	beq	1950 <coda_cursor_get_depth+0x40>
    193c:	cmp	r1, #0
    1940:	beq	196c <coda_cursor_get_depth+0x5c>
    1944:	mov	r0, #0
    1948:	str	r3, [r1]
    194c:	pop	{r4, pc}
    1950:	ldr	r3, [pc, #48]	; 1988 <coda_cursor_get_depth+0x78>
    1954:	ldr	r2, [pc, #48]	; 198c <coda_cursor_get_depth+0x7c>
    1958:	ldr	r1, [pc, #48]	; 1990 <coda_cursor_get_depth+0x80>
    195c:	mvn	r0, #99	; 0x63
    1960:	bl	0 <coda_set_error>
    1964:	mvn	r0, #0
    1968:	pop	{r4, pc}
    196c:	ldr	r3, [pc, #32]	; 1994 <coda_cursor_get_depth+0x84>
    1970:	ldr	r2, [pc, #20]	; 198c <coda_cursor_get_depth+0x7c>
    1974:	ldr	r1, [pc, #28]	; 1998 <coda_cursor_get_depth+0x88>
    1978:	mvn	r0, #99	; 0x63
    197c:	bl	0 <coda_set_error>
    1980:	mvn	r0, #0
    1984:	pop	{r4, pc}
    1988:	.word	0x000006ef
    198c:	.word	0x00000020
    1990:	.word	0x000000b8
    1994:	.word	0x000006f5
    1998:	.word	0x00000384

0000199c <coda_cursor_get_index>:
    199c:	cmp	r0, #0
    19a0:	push	{r4, lr}
    19a4:	beq	19e0 <coda_cursor_get_index+0x44>
    19a8:	ldr	r3, [r0, #4]
    19ac:	cmp	r3, #1
    19b0:	ble	19e0 <coda_cursor_get_index+0x44>
    19b4:	sub	r3, r3, #1
    19b8:	add	r0, r0, r3, lsl #4
    19bc:	ldr	r3, [r0, #8]
    19c0:	cmp	r3, #0
    19c4:	beq	19e0 <coda_cursor_get_index+0x44>
    19c8:	cmp	r1, #0
    19cc:	beq	19fc <coda_cursor_get_index+0x60>
    19d0:	ldr	r3, [r0, #12]
    19d4:	mov	r0, #0
    19d8:	str	r3, [r1]
    19dc:	pop	{r4, pc}
    19e0:	ldr	r3, [pc, #48]	; 1a18 <coda_cursor_get_index+0x7c>
    19e4:	ldr	r2, [pc, #48]	; 1a1c <coda_cursor_get_index+0x80>
    19e8:	ldr	r1, [pc, #48]	; 1a20 <coda_cursor_get_index+0x84>
    19ec:	mvn	r0, #99	; 0x63
    19f0:	bl	0 <coda_set_error>
    19f4:	mvn	r0, #0
    19f8:	pop	{r4, pc}
    19fc:	ldr	r3, [pc, #32]	; 1a24 <coda_cursor_get_index+0x88>
    1a00:	ldr	r2, [pc, #20]	; 1a1c <coda_cursor_get_index+0x80>
    1a04:	ldr	r1, [pc, #28]	; 1a28 <coda_cursor_get_index+0x8c>
    1a08:	mvn	r0, #99	; 0x63
    1a0c:	bl	0 <coda_set_error>
    1a10:	mvn	r0, #0
    1a14:	pop	{r4, pc}
    1a18:	.word	0x0000070d
    1a1c:	.word	0x00000020
    1a20:	.word	0x000000b8
    1a24:	.word	0x00000713
    1a28:	.word	0x000003a4

00001a2c <coda_cursor_get_file_bit_offset>:
    1a2c:	subs	ip, r0, #0
    1a30:	push	{r4, lr}
    1a34:	beq	1aa4 <coda_cursor_get_file_bit_offset+0x78>
    1a38:	ldr	r3, [ip, #4]
    1a3c:	cmp	r3, #0
    1a40:	ble	1aa4 <coda_cursor_get_file_bit_offset+0x78>
    1a44:	add	r2, ip, r3, lsl #4
    1a48:	ldr	r2, [r2, #-8]
    1a4c:	cmp	r2, #0
    1a50:	beq	1aa4 <coda_cursor_get_file_bit_offset+0x78>
    1a54:	cmp	r1, #0
    1a58:	beq	1ac0 <coda_cursor_get_file_bit_offset+0x94>
    1a5c:	ldr	r2, [r2]
    1a60:	cmp	r2, #1
    1a64:	bls	1a90 <coda_cursor_get_file_bit_offset+0x64>
    1a68:	sub	r2, r2, #100	; 0x64
    1a6c:	cmp	r2, #5
    1a70:	bls	1a7c <coda_cursor_get_file_bit_offset+0x50>
    1a74:	mov	r0, #0
    1a78:	pop	{r4, pc}
    1a7c:	mvn	r2, #0
    1a80:	mvn	r3, #0
    1a84:	mov	r0, #0
    1a88:	strd	r2, [r1]
    1a8c:	pop	{r4, pc}
    1a90:	lsl	r3, r3, #4
    1a94:	mov	r0, #0
    1a98:	ldrd	r2, [r3, ip]
    1a9c:	strd	r2, [r1]
    1aa0:	pop	{r4, pc}
    1aa4:	ldr	r3, [pc, #48]	; 1adc <coda_cursor_get_file_bit_offset+0xb0>
    1aa8:	ldr	r2, [pc, #48]	; 1ae0 <coda_cursor_get_file_bit_offset+0xb4>
    1aac:	ldr	r1, [pc, #48]	; 1ae4 <coda_cursor_get_file_bit_offset+0xb8>
    1ab0:	mvn	r0, #99	; 0x63
    1ab4:	bl	0 <coda_set_error>
    1ab8:	mvn	r0, #0
    1abc:	pop	{r4, pc}
    1ac0:	ldr	r3, [pc, #32]	; 1ae8 <coda_cursor_get_file_bit_offset+0xbc>
    1ac4:	ldr	r2, [pc, #20]	; 1ae0 <coda_cursor_get_file_bit_offset+0xb4>
    1ac8:	ldr	r1, [pc, #28]	; 1aec <coda_cursor_get_file_bit_offset+0xc0>
    1acc:	mvn	r0, #99	; 0x63
    1ad0:	bl	0 <coda_set_error>
    1ad4:	mvn	r0, #0
    1ad8:	pop	{r4, pc}
    1adc:	.word	0x00000729
    1ae0:	.word	0x00000020
    1ae4:	.word	0x000000b8
    1ae8:	.word	0x0000072f
    1aec:	.word	0x000003c4

00001af0 <coda_cursor_get_file_byte_offset>:
    1af0:	cmp	r0, #0
    1af4:	push	{r4, r5, r6, lr}
    1af8:	beq	1b94 <coda_cursor_get_file_byte_offset+0xa4>
    1afc:	ldr	r3, [r0, #4]
    1b00:	cmp	r3, #0
    1b04:	ble	1b94 <coda_cursor_get_file_byte_offset+0xa4>
    1b08:	add	r2, r0, r3, lsl #4
    1b0c:	ldr	r2, [r2, #-8]
    1b10:	cmp	r2, #0
    1b14:	beq	1b94 <coda_cursor_get_file_byte_offset+0xa4>
    1b18:	cmp	r1, #0
    1b1c:	beq	1bb0 <coda_cursor_get_file_byte_offset+0xc0>
    1b20:	ldr	r2, [r2]
    1b24:	cmp	r2, #1
    1b28:	bls	1b54 <coda_cursor_get_file_byte_offset+0x64>
    1b2c:	sub	r2, r2, #100	; 0x64
    1b30:	cmp	r2, #5
    1b34:	bls	1b40 <coda_cursor_get_file_byte_offset+0x50>
    1b38:	mov	r0, #0
    1b3c:	pop	{r4, r5, r6, pc}
    1b40:	mvn	r2, #0
    1b44:	mvn	r3, #0
    1b48:	mvn	r0, #0
    1b4c:	strd	r2, [r1]
    1b50:	pop	{r4, r5, r6, pc}
    1b54:	lsl	r3, r3, #4
    1b58:	mvn	r5, #0
    1b5c:	ldrd	r2, [r3, r0]
    1b60:	mvn	r4, #0
    1b64:	cmp	r3, r5
    1b68:	cmpeq	r2, r4
    1b6c:	beq	1b88 <coda_cursor_get_file_byte_offset+0x98>
    1b70:	lsr	r2, r2, #3
    1b74:	orr	r2, r2, r3, lsl #29
    1b78:	asr	r3, r3, #3
    1b7c:	mov	r0, #0
    1b80:	stm	r1, {r2, r3}
    1b84:	pop	{r4, r5, r6, pc}
    1b88:	strd	r2, [r1]
    1b8c:	mov	r0, #0
    1b90:	pop	{r4, r5, r6, pc}
    1b94:	ldr	r3, [pc, #48]	; 1bcc <coda_cursor_get_file_byte_offset+0xdc>
    1b98:	ldr	r2, [pc, #48]	; 1bd0 <coda_cursor_get_file_byte_offset+0xe0>
    1b9c:	ldr	r1, [pc, #48]	; 1bd4 <coda_cursor_get_file_byte_offset+0xe4>
    1ba0:	mvn	r0, #99	; 0x63
    1ba4:	bl	0 <coda_set_error>
    1ba8:	mvn	r0, #0
    1bac:	pop	{r4, r5, r6, pc}
    1bb0:	ldr	r3, [pc, #32]	; 1bd8 <coda_cursor_get_file_byte_offset+0xe8>
    1bb4:	ldr	r2, [pc, #20]	; 1bd0 <coda_cursor_get_file_byte_offset+0xe0>
    1bb8:	ldr	r1, [pc, #28]	; 1bdc <coda_cursor_get_file_byte_offset+0xec>
    1bbc:	mvn	r0, #99	; 0x63
    1bc0:	bl	0 <coda_set_error>
    1bc4:	mvn	r0, #0
    1bc8:	pop	{r4, r5, r6, pc}
    1bcc:	.word	0x00000753
    1bd0:	.word	0x00000020
    1bd4:	.word	0x000000b8
    1bd8:	.word	0x00000759
    1bdc:	.word	0x000003e8

00001be0 <coda_cursor_get_format>:
    1be0:	cmp	r0, #0
    1be4:	push	{r4, lr}
    1be8:	beq	1c2c <coda_cursor_get_format+0x4c>
    1bec:	ldr	r3, [r0, #4]
    1bf0:	cmp	r3, #0
    1bf4:	ble	1c2c <coda_cursor_get_format+0x4c>
    1bf8:	add	r0, r0, r3, lsl #4
    1bfc:	ldr	r2, [r0, #-8]
    1c00:	cmp	r2, #0
    1c04:	beq	1c2c <coda_cursor_get_format+0x4c>
    1c08:	cmp	r1, #0
    1c0c:	beq	1c48 <coda_cursor_get_format+0x68>
    1c10:	ldr	r3, [r2]
    1c14:	mov	r0, #0
    1c18:	cmp	r3, #99	; 0x63
    1c1c:	ldrhi	r3, [r2, #4]
    1c20:	ldrhi	r3, [r3]
    1c24:	str	r3, [r1]
    1c28:	pop	{r4, pc}
    1c2c:	ldr	r3, [pc, #48]	; 1c64 <coda_cursor_get_format+0x84>
    1c30:	ldr	r2, [pc, #48]	; 1c68 <coda_cursor_get_format+0x88>
    1c34:	ldr	r1, [pc, #48]	; 1c6c <coda_cursor_get_format+0x8c>
    1c38:	mvn	r0, #99	; 0x63
    1c3c:	bl	0 <coda_set_error>
    1c40:	mvn	r0, #0
    1c44:	pop	{r4, pc}
    1c48:	ldr	r3, [pc, #32]	; 1c70 <coda_cursor_get_format+0x90>
    1c4c:	ldr	r2, [pc, #20]	; 1c68 <coda_cursor_get_format+0x88>
    1c50:	ldr	r1, [pc, #28]	; 1c74 <coda_cursor_get_format+0x94>
    1c54:	mvn	r0, #99	; 0x63
    1c58:	bl	0 <coda_set_error>
    1c5c:	mvn	r0, #0
    1c60:	pop	{r4, pc}
    1c64:	.word	0x00000785
    1c68:	.word	0x00000020
    1c6c:	.word	0x000000b8
    1c70:	.word	0x0000078a
    1c74:	.word	0x00000410

00001c78 <coda_cursor_get_type_class>:
    1c78:	cmp	r0, #0
    1c7c:	push	{r4, lr}
    1c80:	beq	1cc4 <coda_cursor_get_type_class+0x4c>
    1c84:	ldr	r3, [r0, #4]
    1c88:	cmp	r3, #0
    1c8c:	ble	1cc4 <coda_cursor_get_type_class+0x4c>
    1c90:	add	r0, r0, r3, lsl #4
    1c94:	ldr	r3, [r0, #-8]
    1c98:	cmp	r3, #0
    1c9c:	beq	1cc4 <coda_cursor_get_type_class+0x4c>
    1ca0:	cmp	r1, #0
    1ca4:	beq	1ce0 <coda_cursor_get_type_class+0x68>
    1ca8:	ldr	r2, [r3]
    1cac:	mov	r0, #0
    1cb0:	cmp	r2, #99	; 0x63
    1cb4:	ldrhi	r3, [r3, #4]
    1cb8:	ldr	r3, [r3, #8]
    1cbc:	str	r3, [r1]
    1cc0:	pop	{r4, pc}
    1cc4:	ldr	r3, [pc, #48]	; 1cfc <coda_cursor_get_type_class+0x84>
    1cc8:	ldr	r2, [pc, #48]	; 1d00 <coda_cursor_get_type_class+0x88>
    1ccc:	ldr	r1, [pc, #48]	; 1d04 <coda_cursor_get_type_class+0x8c>
    1cd0:	mvn	r0, #99	; 0x63
    1cd4:	bl	0 <coda_set_error>
    1cd8:	mvn	r0, #0
    1cdc:	pop	{r4, pc}
    1ce0:	ldr	r3, [pc, #32]	; 1d08 <coda_cursor_get_type_class+0x90>
    1ce4:	ldr	r2, [pc, #20]	; 1d00 <coda_cursor_get_type_class+0x88>
    1ce8:	ldr	r1, [pc, #28]	; 1d0c <coda_cursor_get_type_class+0x94>
    1cec:	mvn	r0, #99	; 0x63
    1cf0:	bl	0 <coda_set_error>
    1cf4:	mvn	r0, #0
    1cf8:	pop	{r4, pc}
    1cfc:	.word	0x000007a2
    1d00:	.word	0x00000020
    1d04:	.word	0x000000b8
    1d08:	.word	0x000007a7
    1d0c:	.word	0x00000430

00001d10 <coda_cursor_get_read_type>:
    1d10:	cmp	r0, #0
    1d14:	beq	1d44 <coda_cursor_get_read_type+0x34>
    1d18:	ldr	r3, [r0, #4]
    1d1c:	cmp	r3, #0
    1d20:	ble	1d44 <coda_cursor_get_read_type+0x34>
    1d24:	add	r0, r0, r3, lsl #4
    1d28:	ldr	r0, [r0, #-8]
    1d2c:	cmp	r0, #0
    1d30:	beq	1d44 <coda_cursor_get_read_type+0x34>
    1d34:	ldr	r3, [r0]
    1d38:	cmp	r3, #99	; 0x63
    1d3c:	ldrhi	r0, [r0, #4]
    1d40:	b	0 <coda_type_get_read_type>
    1d44:	push	{r4, lr}
    1d48:	mvn	r0, #99	; 0x63
    1d4c:	ldr	r3, [pc, #16]	; 1d64 <coda_cursor_get_read_type+0x54>
    1d50:	ldr	r2, [pc, #16]	; 1d68 <coda_cursor_get_read_type+0x58>
    1d54:	ldr	r1, [pc, #16]	; 1d6c <coda_cursor_get_read_type+0x5c>
    1d58:	bl	0 <coda_set_error>
    1d5c:	mvn	r0, #0
    1d60:	pop	{r4, pc}
    1d64:	.word	0x000007be
    1d68:	.word	0x00000020
    1d6c:	.word	0x000000b8

00001d70 <coda_cursor_get_special_type>:
    1d70:	cmp	r0, #0
    1d74:	push	{r4, lr}
    1d78:	beq	1db4 <coda_cursor_get_special_type+0x44>
    1d7c:	ldr	r3, [r0, #4]
    1d80:	cmp	r3, #0
    1d84:	ble	1db4 <coda_cursor_get_special_type+0x44>
    1d88:	add	r0, r0, r3, lsl #4
    1d8c:	ldr	r0, [r0, #-8]
    1d90:	cmp	r0, #0
    1d94:	beq	1db4 <coda_cursor_get_special_type+0x44>
    1d98:	cmp	r1, #0
    1d9c:	beq	1dd0 <coda_cursor_get_special_type+0x60>
    1da0:	ldr	r3, [r0]
    1da4:	pop	{r4, lr}
    1da8:	cmp	r3, #99	; 0x63
    1dac:	ldrhi	r0, [r0, #4]
    1db0:	b	0 <coda_type_get_special_type>
    1db4:	ldr	r3, [pc, #48]	; 1dec <coda_cursor_get_special_type+0x7c>
    1db8:	ldr	r2, [pc, #48]	; 1df0 <coda_cursor_get_special_type+0x80>
    1dbc:	ldr	r1, [pc, #48]	; 1df4 <coda_cursor_get_special_type+0x84>
    1dc0:	mvn	r0, #99	; 0x63
    1dc4:	bl	0 <coda_set_error>
    1dc8:	mvn	r0, #0
    1dcc:	pop	{r4, pc}
    1dd0:	ldr	r3, [pc, #32]	; 1df8 <coda_cursor_get_special_type+0x88>
    1dd4:	ldr	r2, [pc, #20]	; 1df0 <coda_cursor_get_special_type+0x80>
    1dd8:	ldr	r1, [pc, #28]	; 1dfc <coda_cursor_get_special_type+0x8c>
    1ddc:	mvn	r0, #99	; 0x63
    1de0:	bl	0 <coda_set_error>
    1de4:	mvn	r0, #0
    1de8:	pop	{r4, pc}
    1dec:	.word	0x000007d3
    1df0:	.word	0x00000020
    1df4:	.word	0x000000b8
    1df8:	.word	0x000007d8
    1dfc:	.word	0x00000454

00001e00 <coda_cursor_get_type>:
    1e00:	cmp	r0, #0
    1e04:	push	{r4, lr}
    1e08:	beq	1e48 <coda_cursor_get_type+0x48>
    1e0c:	ldr	r3, [r0, #4]
    1e10:	cmp	r3, #0
    1e14:	ble	1e48 <coda_cursor_get_type+0x48>
    1e18:	add	r0, r0, r3, lsl #4
    1e1c:	ldr	r3, [r0, #-8]
    1e20:	cmp	r3, #0
    1e24:	beq	1e48 <coda_cursor_get_type+0x48>
    1e28:	cmp	r1, #0
    1e2c:	beq	1e64 <coda_cursor_get_type+0x64>
    1e30:	ldr	r2, [r3]
    1e34:	mov	r0, #0
    1e38:	cmp	r2, #99	; 0x63
    1e3c:	ldrhi	r3, [r3, #4]
    1e40:	str	r3, [r1]
    1e44:	pop	{r4, pc}
    1e48:	ldr	r3, [pc, #48]	; 1e80 <coda_cursor_get_type+0x80>
    1e4c:	ldr	r2, [pc, #48]	; 1e84 <coda_cursor_get_type+0x84>
    1e50:	ldr	r1, [pc, #48]	; 1e88 <coda_cursor_get_type+0x88>
    1e54:	mvn	r0, #99	; 0x63
    1e58:	bl	0 <coda_set_error>
    1e5c:	mvn	r0, #0
    1e60:	pop	{r4, pc}
    1e64:	ldr	r3, [pc, #32]	; 1e8c <coda_cursor_get_type+0x8c>
    1e68:	ldr	r2, [pc, #20]	; 1e84 <coda_cursor_get_type+0x84>
    1e6c:	ldr	r1, [pc, #28]	; 1e90 <coda_cursor_get_type+0x90>
    1e70:	mvn	r0, #99	; 0x63
    1e74:	bl	0 <coda_set_error>
    1e78:	mvn	r0, #0
    1e7c:	pop	{r4, pc}
    1e80:	.word	0x000007ec
    1e84:	.word	0x00000020
    1e88:	.word	0x000000b8
    1e8c:	.word	0x000007f1
    1e90:	.word	0x0000047c

00001e94 <coda_cursor_goto>:
    1e94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1e98:	sub	sp, sp, #16
    1e9c:	ldrb	r3, [r1]
    1ea0:	mov	r4, #0
    1ea4:	mov	r5, r1
    1ea8:	cmp	r3, #47	; 0x2f
    1eac:	str	r4, [sp, #4]
    1eb0:	mov	r6, r0
    1eb4:	beq	21dc <coda_cursor_goto+0x348>
    1eb8:	ldr	r7, [pc, #896]	; 2240 <coda_cursor_goto+0x3ac>
    1ebc:	ldrb	r0, [r5, r4]
    1ec0:	mov	lr, r4
    1ec4:	add	r8, r5, r4
    1ec8:	cmp	r0, #0
    1ecc:	beq	1f94 <coda_cursor_goto+0x100>
    1ed0:	cmp	r0, #64	; 0x40
    1ed4:	beq	2080 <coda_cursor_goto+0x1ec>
    1ed8:	cmp	r0, #91	; 0x5b
    1edc:	beq	1f9c <coda_cursor_goto+0x108>
    1ee0:	cmp	r0, #47	; 0x2f
    1ee4:	beq	2030 <coda_cursor_goto+0x19c>
    1ee8:	cmp	r4, #0
    1eec:	bgt	2224 <coda_cursor_goto+0x390>
    1ef0:	mov	ip, r8
    1ef4:	mov	r1, r4
    1ef8:	ldrb	r2, [ip, #1]!
    1efc:	add	r1, r1, #1
    1f00:	cmp	r2, #47	; 0x2f
    1f04:	cmpne	r2, #91	; 0x5b
    1f08:	movne	r3, #1
    1f0c:	moveq	r3, #0
    1f10:	tst	r2, #191	; 0xbf
    1f14:	moveq	r3, #0
    1f18:	andne	r3, r3, #1
    1f1c:	cmp	r3, #0
    1f20:	bne	1ef8 <coda_cursor_goto+0x64>
    1f24:	mov	r9, r4
    1f28:	add	r3, r9, #1
    1f2c:	mov	r4, r1
    1f30:	cmp	r3, r4
    1f34:	beq	2074 <coda_cursor_goto+0x1e0>
    1f38:	add	r3, r9, #2
    1f3c:	cmp	r3, r4
    1f40:	bne	1f4c <coda_cursor_goto+0xb8>
    1f44:	cmp	r0, #46	; 0x2e
    1f48:	beq	211c <coda_cursor_goto+0x288>
    1f4c:	add	r1, sp, #4
    1f50:	mov	r0, r6
    1f54:	bl	1e00 <coda_cursor_get_type>
    1f58:	cmp	r0, #0
    1f5c:	bne	1f90 <coda_cursor_goto+0xfc>
    1f60:	sub	r2, r4, r9
    1f64:	mov	r1, r8
    1f68:	add	r3, sp, #8
    1f6c:	ldr	r0, [sp, #4]
    1f70:	bl	0 <coda_type_get_record_field_index_from_name_n>
    1f74:	cmp	r0, #0
    1f78:	bne	1f90 <coda_cursor_goto+0xfc>
    1f7c:	ldr	r1, [sp, #8]
    1f80:	mov	r0, r6
    1f84:	bl	6d8 <coda_cursor_goto_record_field_by_index>
    1f88:	cmp	r0, #0
    1f8c:	beq	1ebc <coda_cursor_goto+0x28>
    1f90:	mvn	r0, #0
    1f94:	add	sp, sp, #16
    1f98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1f9c:	add	r4, r4, #1
    1fa0:	add	sl, r5, r4
    1fa4:	ldrb	r3, [r5, r4]
    1fa8:	cmp	r3, #93	; 0x5d
    1fac:	cmpne	r3, #0
    1fb0:	beq	21b0 <coda_cursor_goto+0x31c>
    1fb4:	mov	r2, sl
    1fb8:	mov	r9, r4
    1fbc:	b	1fc4 <coda_cursor_goto+0x130>
    1fc0:	mov	r9, r8
    1fc4:	ldrb	r3, [r2, #1]!
    1fc8:	add	r8, r9, #1
    1fcc:	cmp	r3, #0
    1fd0:	cmpne	r3, #93	; 0x5d
    1fd4:	bne	1fc0 <coda_cursor_goto+0x12c>
    1fd8:	cmp	r3, #0
    1fdc:	beq	21b8 <coda_cursor_goto+0x324>
    1fe0:	cmp	r4, r8
    1fe4:	beq	21cc <coda_cursor_goto+0x338>
    1fe8:	add	r3, sp, #12
    1fec:	add	r2, sp, #8
    1ff0:	mov	r1, r7
    1ff4:	mov	r0, sl
    1ff8:	bl	0 <__isoc99_sscanf>
    1ffc:	cmp	r0, #1
    2000:	bne	2208 <coda_cursor_goto+0x374>
    2004:	ldr	r3, [sp, #12]
    2008:	sub	r8, r8, r4
    200c:	cmp	r8, r3
    2010:	bne	220c <coda_cursor_goto+0x378>
    2014:	ldr	r1, [sp, #8]
    2018:	mov	r0, r6
    201c:	bl	e08 <coda_cursor_goto_array_element_by_index>
    2020:	cmp	r0, #0
    2024:	bne	1f90 <coda_cursor_goto+0xfc>
    2028:	add	r4, r9, #2
    202c:	b	1ebc <coda_cursor_goto+0x28>
    2030:	add	r4, r4, #1
    2034:	mov	lr, r4
    2038:	ldrb	r0, [r5, r4]
    203c:	add	r8, r5, r4
    2040:	cmp	r0, #47	; 0x2f
    2044:	cmpne	r0, #91	; 0x5b
    2048:	movne	r3, #1
    204c:	moveq	r3, #0
    2050:	tst	r0, #191	; 0xbf
    2054:	moveq	r3, #0
    2058:	andne	r3, r3, #1
    205c:	cmp	r3, #0
    2060:	moveq	r9, r4
    2064:	bne	1ef0 <coda_cursor_goto+0x5c>
    2068:	add	r3, r9, #1
    206c:	cmp	r3, r4
    2070:	bne	1f38 <coda_cursor_goto+0xa4>
    2074:	cmp	r0, #46	; 0x2e
    2078:	bne	1f4c <coda_cursor_goto+0xb8>
    207c:	b	1ebc <coda_cursor_goto+0x28>
    2080:	mov	r0, r6
    2084:	bl	354 <coda_cursor_goto_attributes>
    2088:	cmp	r0, #0
    208c:	bne	1f90 <coda_cursor_goto+0xfc>
    2090:	add	sl, r4, #1
    2094:	add	r9, r5, sl
    2098:	ldrb	r0, [r5, sl]
    209c:	cmp	r0, #47	; 0x2f
    20a0:	cmpne	r0, #91	; 0x5b
    20a4:	movne	r3, #1
    20a8:	moveq	r3, #0
    20ac:	tst	r0, #191	; 0xbf
    20b0:	moveq	r3, #0
    20b4:	andne	r3, r3, #1
    20b8:	cmp	r3, #0
    20bc:	beq	2238 <coda_cursor_goto+0x3a4>
    20c0:	mov	r2, r9
    20c4:	mov	r8, sl
    20c8:	ldrb	r1, [r2, #1]!
    20cc:	add	r8, r8, #1
    20d0:	cmp	r1, #47	; 0x2f
    20d4:	cmpne	r1, #91	; 0x5b
    20d8:	movne	r3, #1
    20dc:	moveq	r3, #0
    20e0:	tst	r1, #191	; 0xbf
    20e4:	moveq	r3, #0
    20e8:	andne	r3, r3, #1
    20ec:	cmp	r3, #0
    20f0:	bne	20c8 <coda_cursor_goto+0x234>
    20f4:	add	r3, r4, #2
    20f8:	cmp	r3, r8
    20fc:	beq	2140 <coda_cursor_goto+0x2ac>
    2100:	add	r4, r4, #3
    2104:	cmp	r4, r8
    2108:	beq	2198 <coda_cursor_goto+0x304>
    210c:	cmp	sl, r8
    2110:	blt	2150 <coda_cursor_goto+0x2bc>
    2114:	mov	r4, r8
    2118:	b	1ebc <coda_cursor_goto+0x28>
    211c:	add	lr, r5, lr
    2120:	ldrb	r3, [lr, #1]
    2124:	cmp	r3, #46	; 0x2e
    2128:	bne	1f4c <coda_cursor_goto+0xb8>
    212c:	mov	r0, r6
    2130:	bl	4d0 <coda_cursor_goto_parent>
    2134:	cmp	r0, #0
    2138:	beq	1ebc <coda_cursor_goto+0x28>
    213c:	b	1f90 <coda_cursor_goto+0xfc>
    2140:	cmp	r0, #46	; 0x2e
    2144:	beq	2114 <coda_cursor_goto+0x280>
    2148:	cmp	sl, r8
    214c:	bge	2114 <coda_cursor_goto+0x280>
    2150:	add	r1, sp, #4
    2154:	mov	r0, r6
    2158:	bl	1e00 <coda_cursor_get_type>
    215c:	cmp	r0, #0
    2160:	bne	1f90 <coda_cursor_goto+0xfc>
    2164:	sub	r2, r8, sl
    2168:	mov	r1, r9
    216c:	add	r3, sp, #8
    2170:	ldr	r0, [sp, #4]
    2174:	bl	0 <coda_type_get_record_field_index_from_name_n>
    2178:	cmp	r0, #0
    217c:	bne	1f90 <coda_cursor_goto+0xfc>
    2180:	ldr	r1, [sp, #8]
    2184:	mov	r0, r6
    2188:	bl	6d8 <coda_cursor_goto_record_field_by_index>
    218c:	cmp	r0, #0
    2190:	beq	2114 <coda_cursor_goto+0x280>
    2194:	b	1f90 <coda_cursor_goto+0xfc>
    2198:	cmp	r0, #46	; 0x2e
    219c:	bne	210c <coda_cursor_goto+0x278>
    21a0:	ldrb	r3, [r9, #1]
    21a4:	cmp	r3, #46	; 0x2e
    21a8:	bne	210c <coda_cursor_goto+0x278>
    21ac:	b	212c <coda_cursor_goto+0x298>
    21b0:	cmp	r3, #0
    21b4:	bne	21cc <coda_cursor_goto+0x338>
    21b8:	mov	r2, r5
    21bc:	ldr	r1, [pc, #128]	; 2244 <coda_cursor_goto+0x3b0>
    21c0:	mvn	r0, #99	; 0x63
    21c4:	bl	0 <coda_set_error>
    21c8:	b	1f90 <coda_cursor_goto+0xfc>
    21cc:	ldr	r1, [pc, #116]	; 2248 <coda_cursor_goto+0x3b4>
    21d0:	mvn	r0, #99	; 0x63
    21d4:	bl	0 <coda_set_error>
    21d8:	b	1f90 <coda_cursor_goto+0xfc>
    21dc:	bl	121c <coda_cursor_goto_root>
    21e0:	cmp	r0, r4
    21e4:	bne	1f90 <coda_cursor_goto+0xfc>
    21e8:	ldrb	r3, [r5, #1]
    21ec:	cmp	r3, #91	; 0x5b
    21f0:	cmpne	r3, #47	; 0x2f
    21f4:	moveq	r4, #1
    21f8:	movne	r4, #0
    21fc:	tst	r3, #191	; 0xbf
    2200:	orreq	r4, r4, #1
    2204:	b	1eb8 <coda_cursor_goto+0x24>
    2208:	sub	r8, r8, r4
    220c:	mov	r3, sl
    2210:	mov	r2, r8
    2214:	ldr	r1, [pc, #48]	; 224c <coda_cursor_goto+0x3b8>
    2218:	mvn	r0, #99	; 0x63
    221c:	bl	0 <coda_set_error>
    2220:	b	1f90 <coda_cursor_goto+0xfc>
    2224:	mov	r2, r5
    2228:	ldr	r1, [pc, #32]	; 2250 <coda_cursor_goto+0x3bc>
    222c:	mvn	r0, #99	; 0x63
    2230:	bl	0 <coda_set_error>
    2234:	b	1f90 <coda_cursor_goto+0xfc>
    2238:	mov	r8, sl
    223c:	b	20f4 <coda_cursor_goto+0x260>
    2240:	.word	0x000004dc
    2244:	.word	0x0000049c
    2248:	.word	0x000004bc
    224c:	.word	0x000004e4
    2250:	.word	0x00000508

00002254 <coda_cursor_get_record_field_index_from_name>:
    2254:	cmp	r0, #0
    2258:	beq	2294 <coda_cursor_get_record_field_index_from_name+0x40>
    225c:	ldr	r3, [r0, #4]
    2260:	cmp	r3, #0
    2264:	ble	2294 <coda_cursor_get_record_field_index_from_name+0x40>
    2268:	ldr	ip, [r0]
    226c:	cmp	ip, #0
    2270:	beq	2294 <coda_cursor_get_record_field_index_from_name+0x40>
    2274:	add	r0, r0, r3, lsl #4
    2278:	ldr	r0, [r0, #-8]
    227c:	cmp	r0, #0
    2280:	beq	2294 <coda_cursor_get_record_field_index_from_name+0x40>
    2284:	ldr	r3, [r0]
    2288:	cmp	r3, #99	; 0x63
    228c:	ldrhi	r0, [r0, #4]
    2290:	b	0 <coda_type_get_record_field_index_from_name>
    2294:	push	{r4, lr}
    2298:	mvn	r0, #99	; 0x63
    229c:	ldr	r3, [pc, #16]	; 22b4 <coda_cursor_get_record_field_index_from_name+0x60>
    22a0:	ldr	r2, [pc, #16]	; 22b8 <coda_cursor_get_record_field_index_from_name+0x64>
    22a4:	ldr	r1, [pc, #16]	; 22bc <coda_cursor_get_record_field_index_from_name+0x68>
    22a8:	bl	0 <coda_set_error>
    22ac:	mvn	r0, #0
    22b0:	pop	{r4, pc}
    22b4:	.word	0x00000809
    22b8:	.word	0x00000020
    22bc:	.word	0x000000b8

000022c0 <coda_cursor_goto_record_field_by_name>:
    22c0:	push	{r4, lr}
    22c4:	sub	sp, sp, #8
    22c8:	add	r2, sp, #4
    22cc:	mov	r4, r0
    22d0:	bl	2254 <coda_cursor_get_record_field_index_from_name>
    22d4:	cmp	r0, #0
    22d8:	bne	22f0 <coda_cursor_goto_record_field_by_name+0x30>
    22dc:	mov	r0, r4
    22e0:	ldr	r1, [sp, #4]
    22e4:	bl	6d8 <coda_cursor_goto_record_field_by_index>
    22e8:	add	sp, sp, #8
    22ec:	pop	{r4, pc}
    22f0:	mvn	r0, #0
    22f4:	b	22e8 <coda_cursor_goto_record_field_by_name+0x28>

000022f8 <coda_cursor_get_record_field_available_status>:
    22f8:	cmp	r0, #0
    22fc:	push	{r4, lr}
    2300:	beq	23ac <coda_cursor_get_record_field_available_status+0xb4>
    2304:	ldr	r3, [r0, #4]
    2308:	cmp	r3, #0
    230c:	ble	23ac <coda_cursor_get_record_field_available_status+0xb4>
    2310:	ldr	ip, [r0]
    2314:	cmp	ip, #0
    2318:	beq	23ac <coda_cursor_get_record_field_available_status+0xb4>
    231c:	add	r3, r0, r3, lsl #4
    2320:	ldr	r3, [r3, #-8]
    2324:	cmp	r3, #0
    2328:	beq	23ac <coda_cursor_get_record_field_available_status+0xb4>
    232c:	cmp	r2, #0
    2330:	beq	23e8 <coda_cursor_get_record_field_available_status+0xf0>
    2334:	ldr	ip, [r3]
    2338:	cmp	ip, #99	; 0x63
    233c:	ldrhi	r3, [r3, #4]
    2340:	ldr	r3, [r3, #8]
    2344:	cmp	r3, #0
    2348:	bne	23c8 <coda_cursor_get_record_field_available_status+0xd0>
    234c:	cmp	ip, #100	; 0x64
    2350:	beq	23a4 <coda_cursor_get_record_field_available_status+0xac>
    2354:	bls	237c <coda_cursor_get_record_field_available_status+0x84>
    2358:	cmp	ip, #104	; 0x68
    235c:	bls	2394 <coda_cursor_get_record_field_available_status+0x9c>
    2360:	cmp	ip, #105	; 0x69
    2364:	bne	238c <coda_cursor_get_record_field_available_status+0x94>
    2368:	ldr	r3, [pc, #148]	; 2404 <coda_cursor_get_record_field_available_status+0x10c>
    236c:	ldr	r2, [pc, #148]	; 2408 <coda_cursor_get_record_field_available_status+0x110>
    2370:	ldr	r1, [pc, #148]	; 240c <coda_cursor_get_record_field_available_status+0x114>
    2374:	ldr	r0, [pc, #148]	; 2410 <coda_cursor_get_record_field_available_status+0x118>
    2378:	bl	0 <__assert_fail>
    237c:	cmp	ip, #1
    2380:	bhi	238c <coda_cursor_get_record_field_available_status+0x94>
    2384:	pop	{r4, lr}
    2388:	b	0 <coda_ascbin_cursor_get_record_field_available_status>
    238c:	mov	r0, #0
    2390:	pop	{r4, pc}
    2394:	mov	r1, #1
    2398:	mov	r0, r3
    239c:	str	r1, [r2]
    23a0:	pop	{r4, pc}
    23a4:	pop	{r4, lr}
    23a8:	b	0 <coda_mem_cursor_get_record_field_available_status>
    23ac:	ldr	r3, [pc, #96]	; 2414 <coda_cursor_get_record_field_available_status+0x11c>
    23b0:	ldr	r2, [pc, #84]	; 240c <coda_cursor_get_record_field_available_status+0x114>
    23b4:	ldr	r1, [pc, #92]	; 2418 <coda_cursor_get_record_field_available_status+0x120>
    23b8:	mvn	r0, #99	; 0x63
    23bc:	bl	0 <coda_set_error>
    23c0:	mvn	r0, #0
    23c4:	pop	{r4, pc}
    23c8:	mov	r0, r3
    23cc:	bl	0 <coda_type_get_class_name>
    23d0:	ldr	r1, [pc, #68]	; 241c <coda_cursor_get_record_field_available_status+0x124>
    23d4:	mov	r2, r0
    23d8:	mvn	r0, #104	; 0x68
    23dc:	bl	0 <coda_set_error>
    23e0:	mvn	r0, #0
    23e4:	pop	{r4, pc}
    23e8:	ldr	r3, [pc, #48]	; 2420 <coda_cursor_get_record_field_available_status+0x128>
    23ec:	ldr	r2, [pc, #24]	; 240c <coda_cursor_get_record_field_available_status+0x114>
    23f0:	ldr	r1, [pc, #44]	; 2424 <coda_cursor_get_record_field_available_status+0x12c>
    23f4:	mvn	r0, #99	; 0x63
    23f8:	bl	0 <coda_set_error>
    23fc:	mvn	r0, #0
    2400:	pop	{r4, pc}
    2404:	.word	0x00000110
    2408:	.word	0x00000845
    240c:	.word	0x00000020
    2410:	.word	0x0000006c
    2414:	.word	0x00000825
    2418:	.word	0x000000b8
    241c:	.word	0x00000148
    2420:	.word	0x0000082a
    2424:	.word	0x0000052c

00002428 <coda_cursor_get_available_union_field_index>:
    2428:	cmp	r0, #0
    242c:	push	{r4, lr}
    2430:	beq	24b0 <coda_cursor_get_available_union_field_index+0x88>
    2434:	ldr	r3, [r0, #4]
    2438:	cmp	r3, #0
    243c:	ble	24b0 <coda_cursor_get_available_union_field_index+0x88>
    2440:	ldr	r2, [r0]
    2444:	cmp	r2, #0
    2448:	beq	24b0 <coda_cursor_get_available_union_field_index+0x88>
    244c:	add	r3, r0, r3, lsl #4
    2450:	ldr	r3, [r3, #-8]
    2454:	cmp	r3, #0
    2458:	beq	24b0 <coda_cursor_get_available_union_field_index+0x88>
    245c:	cmp	r1, #0
    2460:	beq	24ec <coda_cursor_get_available_union_field_index+0xc4>
    2464:	ldr	r2, [r3]
    2468:	cmp	r2, #99	; 0x63
    246c:	ldrhi	r3, [r3, #4]
    2470:	ldr	r3, [r3, #8]
    2474:	cmp	r3, #0
    2478:	bne	24cc <coda_cursor_get_available_union_field_index+0xa4>
    247c:	cmp	r2, #1
    2480:	bls	24a8 <coda_cursor_get_available_union_field_index+0x80>
    2484:	cmp	r2, #100	; 0x64
    2488:	bne	2494 <coda_cursor_get_available_union_field_index+0x6c>
    248c:	pop	{r4, lr}
    2490:	b	0 <coda_mem_cursor_get_available_union_field_index>
    2494:	ldr	r3, [pc, #108]	; 2508 <coda_cursor_get_available_union_field_index+0xe0>
    2498:	ldr	r2, [pc, #108]	; 250c <coda_cursor_get_available_union_field_index+0xe4>
    249c:	ldr	r1, [pc, #108]	; 2510 <coda_cursor_get_available_union_field_index+0xe8>
    24a0:	ldr	r0, [pc, #108]	; 2514 <coda_cursor_get_available_union_field_index+0xec>
    24a4:	bl	0 <__assert_fail>
    24a8:	pop	{r4, lr}
    24ac:	b	0 <coda_ascbin_cursor_get_available_union_field_index>
    24b0:	ldr	r3, [pc, #96]	; 2518 <coda_cursor_get_available_union_field_index+0xf0>
    24b4:	ldr	r2, [pc, #84]	; 2510 <coda_cursor_get_available_union_field_index+0xe8>
    24b8:	ldr	r1, [pc, #92]	; 251c <coda_cursor_get_available_union_field_index+0xf4>
    24bc:	mvn	r0, #99	; 0x63
    24c0:	bl	0 <coda_set_error>
    24c4:	mvn	r0, #0
    24c8:	pop	{r4, pc}
    24cc:	mov	r0, r3
    24d0:	bl	0 <coda_type_get_class_name>
    24d4:	ldr	r1, [pc, #68]	; 2520 <coda_cursor_get_available_union_field_index+0xf8>
    24d8:	mov	r2, r0
    24dc:	mvn	r0, #104	; 0x68
    24e0:	bl	0 <coda_set_error>
    24e4:	mvn	r0, #0
    24e8:	pop	{r4, pc}
    24ec:	ldr	r3, [pc, #48]	; 2524 <coda_cursor_get_available_union_field_index+0xfc>
    24f0:	ldr	r2, [pc, #24]	; 2510 <coda_cursor_get_available_union_field_index+0xe8>
    24f4:	ldr	r1, [pc, #44]	; 2528 <coda_cursor_get_available_union_field_index+0x100>
    24f8:	mvn	r0, #99	; 0x63
    24fc:	bl	0 <coda_set_error>
    2500:	mvn	r0, #0
    2504:	pop	{r4, pc}
    2508:	.word	0x00000140
    250c:	.word	0x0000087c
    2510:	.word	0x00000020
    2514:	.word	0x0000006c
    2518:	.word	0x0000085c
    251c:	.word	0x000000b8
    2520:	.word	0x00000148
    2524:	.word	0x00000861
    2528:	.word	0x000003a4

0000252c <coda_cursor_get_array_dim>:
    252c:	cmp	r0, #0
    2530:	push	{r4, lr}
    2534:	beq	2634 <coda_cursor_get_array_dim+0x108>
    2538:	ldr	r3, [r0, #4]
    253c:	cmp	r3, #0
    2540:	ble	2634 <coda_cursor_get_array_dim+0x108>
    2544:	add	r3, r0, r3, lsl #4
    2548:	ldr	r3, [r3, #-8]
    254c:	cmp	r3, #0
    2550:	beq	2634 <coda_cursor_get_array_dim+0x108>
    2554:	cmp	r2, #0
    2558:	cmpne	r1, #0
    255c:	beq	2650 <coda_cursor_get_array_dim+0x124>
    2560:	ldr	ip, [r3]
    2564:	cmp	ip, #99	; 0x63
    2568:	ldrhi	r3, [r3, #4]
    256c:	ldr	r3, [r3, #8]
    2570:	cmp	r3, #1
    2574:	bne	2614 <coda_cursor_get_array_dim+0xe8>
    2578:	cmp	ip, #101	; 0x65
    257c:	beq	2600 <coda_cursor_get_array_dim+0xd4>
    2580:	bls	25a8 <coda_cursor_get_array_dim+0x7c>
    2584:	cmp	ip, #103	; 0x67
    2588:	beq	25d0 <coda_cursor_get_array_dim+0xa4>
    258c:	bcc	25d8 <coda_cursor_get_array_dim+0xac>
    2590:	cmp	ip, #104	; 0x68
    2594:	beq	25c8 <coda_cursor_get_array_dim+0x9c>
    2598:	cmp	ip, #105	; 0x69
    259c:	bne	25ec <coda_cursor_get_array_dim+0xc0>
    25a0:	pop	{r4, lr}
    25a4:	b	0 <coda_grib_cursor_get_array_dim>
    25a8:	cmp	ip, #1
    25ac:	bls	25c0 <coda_cursor_get_array_dim+0x94>
    25b0:	cmp	ip, #100	; 0x64
    25b4:	bne	25ec <coda_cursor_get_array_dim+0xc0>
    25b8:	pop	{r4, lr}
    25bc:	b	0 <coda_mem_cursor_get_array_dim>
    25c0:	pop	{r4, lr}
    25c4:	b	0 <coda_ascbin_cursor_get_array_dim>
    25c8:	pop	{r4, lr}
    25cc:	b	0 <coda_netcdf_cursor_get_array_dim>
    25d0:	pop	{r4, lr}
    25d4:	b	0 <coda_cdf_cursor_get_array_dim>
    25d8:	mov	r1, #0
    25dc:	mvn	r0, #12
    25e0:	bl	0 <coda_set_error>
    25e4:	mvn	r0, #0
    25e8:	pop	{r4, pc}
    25ec:	ldr	r3, [pc, #120]	; 266c <coda_cursor_get_array_dim+0x140>
    25f0:	ldr	r2, [pc, #120]	; 2670 <coda_cursor_get_array_dim+0x144>
    25f4:	ldr	r1, [pc, #120]	; 2674 <coda_cursor_get_array_dim+0x148>
    25f8:	ldr	r0, [pc, #120]	; 2678 <coda_cursor_get_array_dim+0x14c>
    25fc:	bl	0 <__assert_fail>
    2600:	mov	r1, #0
    2604:	mvn	r0, #10
    2608:	bl	0 <coda_set_error>
    260c:	mvn	r0, #0
    2610:	pop	{r4, pc}
    2614:	mov	r0, r3
    2618:	bl	0 <coda_type_get_class_name>
    261c:	ldr	r1, [pc, #88]	; 267c <coda_cursor_get_array_dim+0x150>
    2620:	mov	r2, r0
    2624:	mvn	r0, #104	; 0x68
    2628:	bl	0 <coda_set_error>
    262c:	mvn	r0, #0
    2630:	pop	{r4, pc}
    2634:	ldr	r3, [pc, #68]	; 2680 <coda_cursor_get_array_dim+0x154>
    2638:	ldr	r2, [pc, #52]	; 2674 <coda_cursor_get_array_dim+0x148>
    263c:	ldr	r1, [pc, #64]	; 2684 <coda_cursor_get_array_dim+0x158>
    2640:	mvn	r0, #99	; 0x63
    2644:	bl	0 <coda_set_error>
    2648:	mvn	r0, #0
    264c:	pop	{r4, pc}
    2650:	ldr	r3, [pc, #48]	; 2688 <coda_cursor_get_array_dim+0x15c>
    2654:	ldr	r2, [pc, #24]	; 2674 <coda_cursor_get_array_dim+0x148>
    2658:	ldr	r1, [pc, #44]	; 268c <coda_cursor_get_array_dim+0x160>
    265c:	mvn	r0, #99	; 0x63
    2660:	bl	0 <coda_set_error>
    2664:	mvn	r0, #0
    2668:	pop	{r4, pc}
    266c:	.word	0x0000016c
    2670:	.word	0x000008c3
    2674:	.word	0x00000020
    2678:	.word	0x0000006c
    267c:	.word	0x00000218
    2680:	.word	0x00000895
    2684:	.word	0x000000b8
    2688:	.word	0x0000089a
    268c:	.word	0x00000550
