
../compcert-repos/prog2/0.6:     file format elf32-littlearm


Disassembly of section .init:

000106a0 <.init>:
   106a0:	push	{r3, lr}
   106a4:	bl	10768 <_start@@Base+0x3c>
   106a8:	pop	{r3, pc}

Disassembly of section .plt:

000106ac <printf@plt-0x14>:
   106ac:	push	{lr}		; (str lr, [sp, #-4]!)
   106b0:	ldr	lr, [pc, #4]	; 106bc <printf@plt-0x4>
   106b4:	add	lr, pc, lr
   106b8:	ldr	pc, [lr, #8]!
   106bc:	andeq	r0, r1, r4, asr #18

000106c0 <printf@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2372]!	; 0x944

000106cc <realloc@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2364]!	; 0x93c

000106d8 <strcpy@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2356]!	; 0x934

000106e4 <malloc@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2348]!	; 0x92c

000106f0 <__libc_start_main@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2340]!	; 0x924

000106fc <__gmon_start__@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2332]!	; 0x91c

00010708 <strlen@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2324]!	; 0x914

00010714 <__isoc99_scanf@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2316]!	; 0x90c

00010720 <abort@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2308]!	; 0x904

Disassembly of section .text:

0001072c <_start@@Base>:
   1072c:	mov	fp, #0
   10730:	mov	lr, #0
   10734:	pop	{r1}		; (ldr r1, [sp], #4)
   10738:	mov	r2, sp
   1073c:	push	{r2}		; (str r2, [sp, #-4]!)
   10740:	push	{r0}		; (str r0, [sp, #-4]!)
   10744:	ldr	ip, [pc, #16]	; 1075c <_start@@Base+0x30>
   10748:	push	{ip}		; (str ip, [sp, #-4]!)
   1074c:	ldr	r0, [pc, #12]	; 10760 <_start@@Base+0x34>
   10750:	ldr	r3, [pc, #12]	; 10764 <_start@@Base+0x38>
   10754:	bl	106f0 <__libc_start_main@plt>
   10758:	bl	10720 <abort@plt>
   1075c:	andeq	r0, r1, ip, asr #20
   10760:	andeq	r0, r1, ip, lsl r8
   10764:	andeq	r0, r1, ip, ror #19
   10768:	ldr	r3, [pc, #20]	; 10784 <_start@@Base+0x58>
   1076c:	ldr	r2, [pc, #20]	; 10788 <_start@@Base+0x5c>
   10770:	add	r3, pc, r3
   10774:	ldr	r2, [r3, r2]
   10778:	cmp	r2, #0
   1077c:	bxeq	lr
   10780:	b	106fc <__gmon_start__@plt>
   10784:	andeq	r0, r1, r8, lsl #17
   10788:	andeq	r0, r0, r0, lsr r0
   1078c:	ldr	r0, [pc, #24]	; 107ac <_start@@Base+0x80>
   10790:	ldr	r3, [pc, #24]	; 107b0 <_start@@Base+0x84>
   10794:	cmp	r3, r0
   10798:	bxeq	lr
   1079c:	ldr	r3, [pc, #16]	; 107b4 <_start@@Base+0x88>
   107a0:	cmp	r3, #0
   107a4:	bxeq	lr
   107a8:	bx	r3
   107ac:	andeq	r1, r2, ip, lsr r0
   107b0:	andeq	r1, r2, ip, lsr r0
   107b4:	andeq	r0, r0, r0
   107b8:	ldr	r0, [pc, #36]	; 107e4 <_start@@Base+0xb8>
   107bc:	ldr	r1, [pc, #36]	; 107e8 <_start@@Base+0xbc>
   107c0:	sub	r1, r1, r0
   107c4:	asr	r1, r1, #2
   107c8:	add	r1, r1, r1, lsr #31
   107cc:	asrs	r1, r1, #1
   107d0:	bxeq	lr
   107d4:	ldr	r3, [pc, #16]	; 107ec <_start@@Base+0xc0>
   107d8:	cmp	r3, #0
   107dc:	bxeq	lr
   107e0:	bx	r3
   107e4:	andeq	r1, r2, ip, lsr r0
   107e8:	andeq	r1, r2, ip, lsr r0
   107ec:	andeq	r0, r0, r0
   107f0:	push	{r4, lr}
   107f4:	ldr	r4, [pc, #24]	; 10814 <_start@@Base+0xe8>
   107f8:	ldrb	r3, [r4]
   107fc:	cmp	r3, #0
   10800:	popne	{r4, pc}
   10804:	bl	1078c <_start@@Base+0x60>
   10808:	mov	r3, #1
   1080c:	strb	r3, [r4]
   10810:	pop	{r4, pc}
   10814:	andeq	r1, r2, ip, lsr r0
   10818:	b	107b8 <_start@@Base+0x8c>

0001081c <main@@Base>:
   1081c:	push	{fp, lr}
   10820:	mov	fp, sp
   10824:	sub	sp, sp, #72	; 0x48
   10828:	movw	r0, #0
   1082c:	str	r0, [fp, #-4]
   10830:	str	r0, [fp, #-20]	; 0xffffffec
   10834:	str	r0, [fp, #-24]	; 0xffffffe8
   10838:	str	r0, [fp, #-28]	; 0xffffffe4
   1083c:	movw	r0, #2652	; 0xa5c
   10840:	movt	r0, #1
   10844:	bl	106c0 <printf@plt>
   10848:	movw	lr, #1
   1084c:	str	r0, [fp, #-32]	; 0xffffffe0
   10850:	mov	r0, lr
   10854:	bl	106e4 <malloc@plt>
   10858:	str	r0, [fp, #-12]
   1085c:	movw	r0, #1
   10860:	bl	106e4 <malloc@plt>
   10864:	str	r0, [fp, #-16]
   10868:	movw	r0, #2660	; 0xa64
   1086c:	movt	r0, #1
   10870:	sub	r1, fp, #5
   10874:	bl	10714 <__isoc99_scanf@plt>
   10878:	cmp	r0, #1
   1087c:	bne	10978 <main@@Base+0x15c>
   10880:	ldrb	r0, [fp, #-5]
   10884:	cmp	r0, #32
   10888:	beq	10898 <main@@Base+0x7c>
   1088c:	ldrb	r0, [fp, #-5]
   10890:	cmp	r0, #10
   10894:	bne	1092c <main@@Base+0x110>
   10898:	ldr	r0, [fp, #-16]
   1089c:	bl	10708 <strlen@plt>
   108a0:	ldr	lr, [fp, #-12]
   108a4:	str	r0, [sp, #36]	; 0x24
   108a8:	mov	r0, lr
   108ac:	bl	10708 <strlen@plt>
   108b0:	ldr	lr, [sp, #36]	; 0x24
   108b4:	cmp	lr, r0
   108b8:	bls	10904 <main@@Base+0xe8>
   108bc:	ldr	r0, [fp, #-12]
   108c0:	ldr	r1, [fp, #-16]
   108c4:	str	r0, [sp, #32]
   108c8:	mov	r0, r1
   108cc:	bl	10708 <strlen@plt>
   108d0:	mov	r1, r0
   108d4:	ldr	lr, [sp, #32]
   108d8:	str	r0, [sp, #28]
   108dc:	mov	r0, lr
   108e0:	ldr	r2, [sp, #28]
   108e4:	str	r1, [sp, #24]
   108e8:	mov	r1, r2
   108ec:	bl	106cc <realloc@plt>
   108f0:	str	r0, [fp, #-12]
   108f4:	ldr	r0, [fp, #-12]
   108f8:	ldr	r1, [fp, #-16]
   108fc:	bl	106d8 <strcpy@plt>
   10900:	str	r0, [sp, #20]
   10904:	ldr	r0, [fp, #-20]	; 0xffffffec
   10908:	add	r0, r0, #1
   1090c:	str	r0, [fp, #-20]	; 0xffffffec
   10910:	movw	r0, #0
   10914:	str	r0, [fp, #-28]	; 0xffffffe4
   10918:	ldrb	r0, [fp, #-5]
   1091c:	cmp	r0, #10
   10920:	bne	10928 <main@@Base+0x10c>
   10924:	b	10978 <main@@Base+0x15c>
   10928:	b	10974 <main@@Base+0x158>
   1092c:	ldr	r0, [fp, #-16]
   10930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10934:	add	r1, r1, #1
   10938:	mov	r2, r1
   1093c:	str	r2, [sp, #16]
   10940:	bl	106cc <realloc@plt>
   10944:	str	r0, [fp, #-16]
   10948:	ldrb	r0, [fp, #-5]
   1094c:	ldr	r1, [fp, #-16]
   10950:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10954:	add	r1, r1, r2
   10958:	strb	r0, [r1]
   1095c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10960:	add	r0, r0, #1
   10964:	str	r0, [fp, #-24]	; 0xffffffe8
   10968:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1096c:	add	r0, r0, #1
   10970:	str	r0, [fp, #-28]	; 0xffffffe4
   10974:	b	10868 <main@@Base+0x4c>
   10978:	ldr	r1, [fp, #-20]	; 0xffffffec
   1097c:	movw	r0, #2663	; 0xa67
   10980:	movt	r0, #1
   10984:	bl	106c0 <printf@plt>
   10988:	ldr	r1, [fp, #-12]
   1098c:	movw	lr, #2687	; 0xa7f
   10990:	movt	lr, #1
   10994:	str	r0, [sp, #12]
   10998:	mov	r0, lr
   1099c:	bl	106c0 <printf@plt>
   109a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   109a4:	vmov	s0, r1
   109a8:	vcvt.f32.s32	s0, s0
   109ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   109b0:	vmov	s2, r1
   109b4:	vcvt.f32.s32	s2, s2
   109b8:	vdiv.f32	s0, s0, s2
   109bc:	vcvt.f64.f32	d16, s0
   109c0:	movw	r1, #2706	; 0xa92
   109c4:	movt	r1, #1
   109c8:	str	r0, [sp, #8]
   109cc:	mov	r0, r1
   109d0:	vmov	r2, r3, d16
   109d4:	bl	106c0 <printf@plt>
   109d8:	movw	r1, #0
   109dc:	str	r0, [sp, #4]
   109e0:	mov	r0, r1
   109e4:	mov	sp, fp
   109e8:	pop	{fp, pc}

000109ec <__libc_csu_init@@Base>:
   109ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109f0:	mov	r7, r0
   109f4:	ldr	r6, [pc, #72]	; 10a44 <__libc_csu_init@@Base+0x58>
   109f8:	ldr	r5, [pc, #72]	; 10a48 <__libc_csu_init@@Base+0x5c>
   109fc:	add	r6, pc, r6
   10a00:	add	r5, pc, r5
   10a04:	sub	r6, r6, r5
   10a08:	mov	r8, r1
   10a0c:	mov	r9, r2
   10a10:	bl	106a0 <printf@plt-0x20>
   10a14:	asrs	r6, r6, #2
   10a18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a1c:	mov	r4, #0
   10a20:	add	r4, r4, #1
   10a24:	ldr	r3, [r5], #4
   10a28:	mov	r2, r9
   10a2c:	mov	r1, r8
   10a30:	mov	r0, r7
   10a34:	blx	r3
   10a38:	cmp	r6, r4
   10a3c:	bne	10a20 <__libc_csu_init@@Base+0x34>
   10a40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a44:	andeq	r0, r1, r8, lsl #10
   10a48:	andeq	r0, r1, r0, lsl #10

00010a4c <__libc_csu_fini@@Base>:
   10a4c:	bx	lr

Disassembly of section .fini:

00010a50 <.fini>:
   10a50:	push	{r3, lr}
   10a54:	pop	{r3, pc}
