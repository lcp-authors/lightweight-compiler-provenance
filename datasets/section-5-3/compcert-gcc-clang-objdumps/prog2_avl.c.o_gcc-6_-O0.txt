
../compcert-repos/prog2/CMakeFiles/MT2E1-1.dir/Extras/Miniteste2-Exemplo1/prob1/avl.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avl_nova>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	mov	r0, #4
  10:	bl	0 <malloc>
  14:	mov	r3, r0
  18:	str	r3, [fp, #-8]
  1c:	ldr	r3, [fp, #-8]
  20:	cmp	r3, #0
  24:	bne	30 <avl_nova+0x30>
  28:	mov	r3, #0
  2c:	b	40 <avl_nova+0x40>
  30:	ldr	r3, [fp, #-8]
  34:	mov	r2, #0
  38:	str	r2, [r3]
  3c:	ldr	r3, [fp, #-8]
  40:	mov	r0, r3
  44:	sub	sp, fp, #4
  48:	pop	{fp, pc}

0000004c <avl_apaga>:
  4c:	push	{fp, lr}
  50:	add	fp, sp, #4
  54:	sub	sp, sp, #8
  58:	str	r0, [fp, #-8]
  5c:	ldr	r3, [fp, #-8]
  60:	cmp	r3, #0
  64:	beq	b4 <avl_apaga+0x68>
  68:	b	98 <avl_apaga+0x4c>
  6c:	ldr	r3, [fp, #-8]
  70:	ldr	r2, [r3]
  74:	ldr	r3, [fp, #-8]
  78:	ldr	r3, [r3]
  7c:	ldr	r3, [r3]
  80:	mov	r1, r3
  84:	mov	r0, r2
  88:	bl	8f4 <avl_remove_impl>
  8c:	mov	r2, r0
  90:	ldr	r3, [fp, #-8]
  94:	str	r2, [r3]
  98:	ldr	r3, [fp, #-8]
  9c:	ldr	r3, [r3]
  a0:	cmp	r3, #0
  a4:	bne	6c <avl_apaga+0x20>
  a8:	ldr	r0, [fp, #-8]
  ac:	bl	0 <free>
  b0:	b	b8 <avl_apaga+0x6c>
  b4:	nop			; (mov r0, r0)
  b8:	sub	sp, fp, #4
  bc:	pop	{fp, pc}

000000c0 <avl_pesquisa>:
  c0:	push	{fp, lr}
  c4:	add	fp, sp, #4
  c8:	sub	sp, sp, #8
  cc:	str	r0, [fp, #-8]
  d0:	str	r1, [fp, #-12]
  d4:	ldr	r3, [fp, #-8]
  d8:	cmp	r3, #0
  dc:	beq	ec <avl_pesquisa+0x2c>
  e0:	ldr	r3, [fp, #-12]
  e4:	cmp	r3, #0
  e8:	bne	f4 <avl_pesquisa+0x34>
  ec:	mov	r3, #0
  f0:	b	10c <avl_pesquisa+0x4c>
  f4:	ldr	r3, [fp, #-8]
  f8:	ldr	r3, [r3]
  fc:	ldr	r1, [fp, #-12]
 100:	mov	r0, r3
 104:	bl	5c4 <avl_pesquisa_impl>
 108:	mov	r3, r0
 10c:	mov	r0, r3
 110:	sub	sp, fp, #4
 114:	pop	{fp, pc}

00000118 <avl_insere>:
 118:	push	{fp, lr}
 11c:	add	fp, sp, #4
 120:	sub	sp, sp, #8
 124:	str	r0, [fp, #-8]
 128:	str	r1, [fp, #-12]
 12c:	ldr	r3, [fp, #-8]
 130:	cmp	r3, #0
 134:	beq	144 <avl_insere+0x2c>
 138:	ldr	r3, [fp, #-12]
 13c:	cmp	r3, #0
 140:	bne	14c <avl_insere+0x34>
 144:	mvn	r3, #0
 148:	b	170 <avl_insere+0x58>
 14c:	ldr	r3, [fp, #-8]
 150:	ldr	r3, [r3]
 154:	ldr	r1, [fp, #-12]
 158:	mov	r0, r3
 15c:	bl	674 <avl_insere_impl>
 160:	mov	r2, r0
 164:	ldr	r3, [fp, #-8]
 168:	str	r2, [r3]
 16c:	mov	r3, #0
 170:	mov	r0, r3
 174:	sub	sp, fp, #4
 178:	pop	{fp, pc}

0000017c <avl_remove>:
 17c:	push	{fp, lr}
 180:	add	fp, sp, #4
 184:	sub	sp, sp, #8
 188:	str	r0, [fp, #-8]
 18c:	str	r1, [fp, #-12]
 190:	ldr	r3, [fp, #-8]
 194:	cmp	r3, #0
 198:	beq	1a8 <avl_remove+0x2c>
 19c:	ldr	r3, [fp, #-12]
 1a0:	cmp	r3, #0
 1a4:	bne	1b0 <avl_remove+0x34>
 1a8:	mvn	r3, #0
 1ac:	b	1d4 <avl_remove+0x58>
 1b0:	ldr	r3, [fp, #-8]
 1b4:	ldr	r3, [r3]
 1b8:	ldr	r1, [fp, #-12]
 1bc:	mov	r0, r3
 1c0:	bl	8f4 <avl_remove_impl>
 1c4:	mov	r2, r0
 1c8:	ldr	r3, [fp, #-8]
 1cc:	str	r2, [r3]
 1d0:	mov	r3, #0
 1d4:	mov	r0, r3
 1d8:	sub	sp, fp, #4
 1dc:	pop	{fp, pc}

000001e0 <avl_min>:
 1e0:	push	{fp, lr}
 1e4:	add	fp, sp, #4
 1e8:	sub	sp, sp, #8
 1ec:	str	r0, [fp, #-8]
 1f0:	ldr	r3, [fp, #-8]
 1f4:	cmp	r3, #0
 1f8:	bne	204 <avl_min+0x24>
 1fc:	mov	r3, #0
 200:	b	21c <avl_min+0x3c>
 204:	ldr	r3, [fp, #-8]
 208:	ldr	r3, [r3]
 20c:	mov	r0, r3
 210:	bl	85c <avl_no_valormin>
 214:	mov	r3, r0
 218:	ldr	r3, [r3]
 21c:	mov	r0, r3
 220:	sub	sp, fp, #4
 224:	pop	{fp, pc}

00000228 <avl_max>:
 228:	push	{fp, lr}
 22c:	add	fp, sp, #4
 230:	sub	sp, sp, #8
 234:	str	r0, [fp, #-8]
 238:	ldr	r3, [fp, #-8]
 23c:	cmp	r3, #0
 240:	bne	24c <avl_max+0x24>
 244:	mov	r3, #0
 248:	b	264 <avl_max+0x3c>
 24c:	ldr	r3, [fp, #-8]
 250:	ldr	r3, [r3]
 254:	mov	r0, r3
 258:	bl	8a8 <avl_no_valormax>
 25c:	mov	r3, r0
 260:	ldr	r3, [r3]
 264:	mov	r0, r3
 268:	sub	sp, fp, #4
 26c:	pop	{fp, pc}

00000270 <avl_imprime>:
 270:	push	{fp, lr}
 274:	add	fp, sp, #4
 278:	sub	sp, sp, #8
 27c:	str	r0, [fp, #-8]
 280:	ldr	r3, [fp, #-8]
 284:	cmp	r3, #0
 288:	beq	2a8 <avl_imprime+0x38>
 28c:	ldr	r3, [fp, #-8]
 290:	ldr	r3, [r3]
 294:	mov	r0, r3
 298:	bl	c78 <avl_preordem_impl>
 29c:	mov	r0, #10
 2a0:	bl	0 <putchar>
 2a4:	b	2ac <avl_imprime+0x3c>
 2a8:	nop			; (mov r0, r0)
 2ac:	sub	sp, fp, #4
 2b0:	pop	{fp, pc}

000002b4 <avl_altura>:
 2b4:	push	{fp}		; (str fp, [sp, #-4]!)
 2b8:	add	fp, sp, #0
 2bc:	sub	sp, sp, #12
 2c0:	str	r0, [fp, #-8]
 2c4:	ldr	r3, [fp, #-8]
 2c8:	cmp	r3, #0
 2cc:	bne	2d8 <avl_altura+0x24>
 2d0:	mvn	r3, #0
 2d4:	b	2e0 <avl_altura+0x2c>
 2d8:	ldr	r3, [fp, #-8]
 2dc:	ldr	r3, [r3, #12]
 2e0:	mov	r0, r3
 2e4:	add	sp, fp, #0
 2e8:	pop	{fp}		; (ldr fp, [sp], #4)
 2ec:	bx	lr

000002f0 <max>:
 2f0:	push	{fp}		; (str fp, [sp, #-4]!)
 2f4:	add	fp, sp, #0
 2f8:	sub	sp, sp, #12
 2fc:	str	r0, [fp, #-8]
 300:	str	r1, [fp, #-12]
 304:	ldr	r2, [fp, #-12]
 308:	ldr	r3, [fp, #-8]
 30c:	cmp	r2, r3
 310:	movge	r3, r2
 314:	movlt	r3, r3
 318:	mov	r0, r3
 31c:	add	sp, fp, #0
 320:	pop	{fp}		; (ldr fp, [sp], #4)
 324:	bx	lr

00000328 <avl_novo_no>:
 328:	push	{fp, lr}
 32c:	add	fp, sp, #4
 330:	sub	sp, sp, #16
 334:	str	r0, [fp, #-16]
 338:	mov	r0, #16
 33c:	bl	0 <malloc>
 340:	mov	r3, r0
 344:	str	r3, [fp, #-8]
 348:	ldr	r0, [fp, #-16]
 34c:	bl	0 <strlen>
 350:	mov	r3, r0
 354:	add	r3, r3, #1
 358:	mov	r0, r3
 35c:	bl	0 <malloc>
 360:	mov	r3, r0
 364:	mov	r2, r3
 368:	ldr	r3, [fp, #-8]
 36c:	str	r2, [r3]
 370:	ldr	r3, [fp, #-8]
 374:	ldr	r3, [r3]
 378:	ldr	r1, [fp, #-16]
 37c:	mov	r0, r3
 380:	bl	0 <strcpy>
 384:	ldr	r3, [fp, #-8]
 388:	mov	r2, #0
 38c:	str	r2, [r3, #4]
 390:	ldr	r3, [fp, #-8]
 394:	mov	r2, #0
 398:	str	r2, [r3, #8]
 39c:	ldr	r3, [fp, #-8]
 3a0:	mov	r2, #0
 3a4:	str	r2, [r3, #12]
 3a8:	ldr	r3, [fp, #-8]
 3ac:	mov	r0, r3
 3b0:	sub	sp, fp, #4
 3b4:	pop	{fp, pc}

000003b8 <roda_direita>:
 3b8:	push	{r4, fp, lr}
 3bc:	add	fp, sp, #8
 3c0:	sub	sp, sp, #20
 3c4:	str	r0, [fp, #-24]	; 0xffffffe8
 3c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3cc:	ldr	r3, [r3, #4]
 3d0:	str	r3, [fp, #-16]
 3d4:	ldr	r3, [fp, #-16]
 3d8:	ldr	r3, [r3, #8]
 3dc:	str	r3, [fp, #-20]	; 0xffffffec
 3e0:	ldr	r3, [fp, #-16]
 3e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 3e8:	str	r2, [r3, #8]
 3ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3f0:	ldr	r2, [fp, #-20]	; 0xffffffec
 3f4:	str	r2, [r3, #4]
 3f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3fc:	ldr	r3, [r3, #4]
 400:	mov	r0, r3
 404:	bl	2b4 <avl_altura>
 408:	mov	r4, r0
 40c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 410:	ldr	r3, [r3, #8]
 414:	mov	r0, r3
 418:	bl	2b4 <avl_altura>
 41c:	mov	r3, r0
 420:	mov	r1, r3
 424:	mov	r0, r4
 428:	bl	2f0 <max>
 42c:	mov	r3, r0
 430:	add	r2, r3, #1
 434:	ldr	r3, [fp, #-24]	; 0xffffffe8
 438:	str	r2, [r3, #12]
 43c:	ldr	r3, [fp, #-16]
 440:	ldr	r3, [r3, #4]
 444:	mov	r0, r3
 448:	bl	2b4 <avl_altura>
 44c:	mov	r4, r0
 450:	ldr	r3, [fp, #-16]
 454:	ldr	r3, [r3, #8]
 458:	mov	r0, r3
 45c:	bl	2b4 <avl_altura>
 460:	mov	r3, r0
 464:	mov	r1, r3
 468:	mov	r0, r4
 46c:	bl	2f0 <max>
 470:	mov	r3, r0
 474:	add	r2, r3, #1
 478:	ldr	r3, [fp, #-16]
 47c:	str	r2, [r3, #12]
 480:	ldr	r3, [fp, #-16]
 484:	mov	r0, r3
 488:	sub	sp, fp, #8
 48c:	pop	{r4, fp, pc}

00000490 <roda_esquerda>:
 490:	push	{r4, fp, lr}
 494:	add	fp, sp, #8
 498:	sub	sp, sp, #20
 49c:	str	r0, [fp, #-24]	; 0xffffffe8
 4a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4a4:	ldr	r3, [r3, #8]
 4a8:	str	r3, [fp, #-16]
 4ac:	ldr	r3, [fp, #-16]
 4b0:	ldr	r3, [r3, #4]
 4b4:	str	r3, [fp, #-20]	; 0xffffffec
 4b8:	ldr	r3, [fp, #-16]
 4bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 4c0:	str	r2, [r3, #4]
 4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4c8:	ldr	r2, [fp, #-20]	; 0xffffffec
 4cc:	str	r2, [r3, #8]
 4d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4d4:	ldr	r3, [r3, #4]
 4d8:	mov	r0, r3
 4dc:	bl	2b4 <avl_altura>
 4e0:	mov	r4, r0
 4e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4e8:	ldr	r3, [r3, #8]
 4ec:	mov	r0, r3
 4f0:	bl	2b4 <avl_altura>
 4f4:	mov	r3, r0
 4f8:	mov	r1, r3
 4fc:	mov	r0, r4
 500:	bl	2f0 <max>
 504:	mov	r3, r0
 508:	add	r2, r3, #1
 50c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 510:	str	r2, [r3, #12]
 514:	ldr	r3, [fp, #-16]
 518:	ldr	r3, [r3, #4]
 51c:	mov	r0, r3
 520:	bl	2b4 <avl_altura>
 524:	mov	r4, r0
 528:	ldr	r3, [fp, #-16]
 52c:	ldr	r3, [r3, #8]
 530:	mov	r0, r3
 534:	bl	2b4 <avl_altura>
 538:	mov	r3, r0
 53c:	mov	r1, r3
 540:	mov	r0, r4
 544:	bl	2f0 <max>
 548:	mov	r3, r0
 54c:	add	r2, r3, #1
 550:	ldr	r3, [fp, #-16]
 554:	str	r2, [r3, #12]
 558:	ldr	r3, [fp, #-16]
 55c:	mov	r0, r3
 560:	sub	sp, fp, #8
 564:	pop	{r4, fp, pc}

00000568 <calc_balanceamento>:
 568:	push	{r4, fp, lr}
 56c:	add	fp, sp, #8
 570:	sub	sp, sp, #12
 574:	str	r0, [fp, #-16]
 578:	ldr	r3, [fp, #-16]
 57c:	cmp	r3, #0
 580:	bne	58c <calc_balanceamento+0x24>
 584:	mov	r3, #0
 588:	b	5b8 <calc_balanceamento+0x50>
 58c:	ldr	r3, [fp, #-16]
 590:	ldr	r3, [r3, #8]
 594:	mov	r0, r3
 598:	bl	2b4 <avl_altura>
 59c:	mov	r4, r0
 5a0:	ldr	r3, [fp, #-16]
 5a4:	ldr	r3, [r3, #4]
 5a8:	mov	r0, r3
 5ac:	bl	2b4 <avl_altura>
 5b0:	mov	r3, r0
 5b4:	sub	r3, r4, r3
 5b8:	mov	r0, r3
 5bc:	sub	sp, fp, #8
 5c0:	pop	{r4, fp, pc}

000005c4 <avl_pesquisa_impl>:
 5c4:	push	{fp, lr}
 5c8:	add	fp, sp, #4
 5cc:	sub	sp, sp, #8
 5d0:	str	r0, [fp, #-8]
 5d4:	str	r1, [fp, #-12]
 5d8:	ldr	r3, [fp, #-8]
 5dc:	cmp	r3, #0
 5e0:	bne	5ec <avl_pesquisa_impl+0x28>
 5e4:	mov	r3, #0
 5e8:	b	668 <avl_pesquisa_impl+0xa4>
 5ec:	ldr	r3, [fp, #-8]
 5f0:	ldr	r3, [r3]
 5f4:	mov	r1, r3
 5f8:	ldr	r0, [fp, #-12]
 5fc:	bl	0 <strcmp>
 600:	mov	r3, r0
 604:	cmp	r3, #0
 608:	bge	628 <avl_pesquisa_impl+0x64>
 60c:	ldr	r3, [fp, #-8]
 610:	ldr	r3, [r3, #4]
 614:	ldr	r1, [fp, #-12]
 618:	mov	r0, r3
 61c:	bl	5c4 <avl_pesquisa_impl>
 620:	mov	r3, r0
 624:	b	668 <avl_pesquisa_impl+0xa4>
 628:	ldr	r3, [fp, #-8]
 62c:	ldr	r3, [r3]
 630:	mov	r1, r3
 634:	ldr	r0, [fp, #-12]
 638:	bl	0 <strcmp>
 63c:	mov	r3, r0
 640:	cmp	r3, #0
 644:	ble	664 <avl_pesquisa_impl+0xa0>
 648:	ldr	r3, [fp, #-8]
 64c:	ldr	r3, [r3, #8]
 650:	ldr	r1, [fp, #-12]
 654:	mov	r0, r3
 658:	bl	5c4 <avl_pesquisa_impl>
 65c:	mov	r3, r0
 660:	b	668 <avl_pesquisa_impl+0xa4>
 664:	ldr	r3, [fp, #-8]
 668:	mov	r0, r3
 66c:	sub	sp, fp, #4
 670:	pop	{fp, pc}

00000674 <avl_insere_impl>:
 674:	push	{r4, fp, lr}
 678:	add	fp, sp, #8
 67c:	sub	sp, sp, #20
 680:	str	r0, [fp, #-24]	; 0xffffffe8
 684:	str	r1, [fp, #-28]	; 0xffffffe4
 688:	ldr	r3, [fp, #-24]	; 0xffffffe8
 68c:	cmp	r3, #0
 690:	bne	6a4 <avl_insere_impl+0x30>
 694:	ldr	r0, [fp, #-28]	; 0xffffffe4
 698:	bl	328 <avl_novo_no>
 69c:	mov	r3, r0
 6a0:	b	850 <avl_insere_impl+0x1dc>
 6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6a8:	ldr	r3, [r3]
 6ac:	mov	r1, r3
 6b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
 6b4:	bl	0 <strcmp>
 6b8:	mov	r3, r0
 6bc:	cmp	r3, #0
 6c0:	bge	6e8 <avl_insere_impl+0x74>
 6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6c8:	ldr	r3, [r3, #4]
 6cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
 6d0:	mov	r0, r3
 6d4:	bl	674 <avl_insere_impl>
 6d8:	mov	r2, r0
 6dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6e0:	str	r2, [r3, #4]
 6e4:	b	734 <avl_insere_impl+0xc0>
 6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6ec:	ldr	r3, [r3]
 6f0:	mov	r1, r3
 6f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
 6f8:	bl	0 <strcmp>
 6fc:	mov	r3, r0
 700:	cmp	r3, #0
 704:	ble	72c <avl_insere_impl+0xb8>
 708:	ldr	r3, [fp, #-24]	; 0xffffffe8
 70c:	ldr	r3, [r3, #8]
 710:	ldr	r1, [fp, #-28]	; 0xffffffe4
 714:	mov	r0, r3
 718:	bl	674 <avl_insere_impl>
 71c:	mov	r2, r0
 720:	ldr	r3, [fp, #-24]	; 0xffffffe8
 724:	str	r2, [r3, #8]
 728:	b	734 <avl_insere_impl+0xc0>
 72c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 730:	b	850 <avl_insere_impl+0x1dc>
 734:	ldr	r3, [fp, #-24]	; 0xffffffe8
 738:	ldr	r3, [r3, #4]
 73c:	mov	r0, r3
 740:	bl	2b4 <avl_altura>
 744:	mov	r4, r0
 748:	ldr	r3, [fp, #-24]	; 0xffffffe8
 74c:	ldr	r3, [r3, #8]
 750:	mov	r0, r3
 754:	bl	2b4 <avl_altura>
 758:	mov	r3, r0
 75c:	mov	r1, r3
 760:	mov	r0, r4
 764:	bl	2f0 <max>
 768:	mov	r3, r0
 76c:	add	r2, r3, #1
 770:	ldr	r3, [fp, #-24]	; 0xffffffe8
 774:	str	r2, [r3, #12]
 778:	ldr	r0, [fp, #-24]	; 0xffffffe8
 77c:	bl	568 <calc_balanceamento>
 780:	str	r0, [fp, #-16]
 784:	ldr	r3, [fp, #-16]
 788:	cmp	r3, #1
 78c:	ble	7e8 <avl_insere_impl+0x174>
 790:	ldr	r3, [fp, #-24]	; 0xffffffe8
 794:	ldr	r3, [r3, #8]
 798:	mov	r0, r3
 79c:	bl	568 <calc_balanceamento>
 7a0:	mov	r3, r0
 7a4:	cmp	r3, #0
 7a8:	bge	7d8 <avl_insere_impl+0x164>
 7ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7b0:	ldr	r3, [r3, #8]
 7b4:	mov	r0, r3
 7b8:	bl	3b8 <roda_direita>
 7bc:	mov	r2, r0
 7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7c4:	str	r2, [r3, #8]
 7c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7cc:	bl	490 <roda_esquerda>
 7d0:	mov	r3, r0
 7d4:	b	850 <avl_insere_impl+0x1dc>
 7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7dc:	bl	490 <roda_esquerda>
 7e0:	mov	r3, r0
 7e4:	b	850 <avl_insere_impl+0x1dc>
 7e8:	ldr	r3, [fp, #-16]
 7ec:	cmn	r3, #1
 7f0:	bge	84c <avl_insere_impl+0x1d8>
 7f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7f8:	ldr	r3, [r3, #4]
 7fc:	mov	r0, r3
 800:	bl	568 <calc_balanceamento>
 804:	mov	r3, r0
 808:	cmp	r3, #0
 80c:	ble	83c <avl_insere_impl+0x1c8>
 810:	ldr	r3, [fp, #-24]	; 0xffffffe8
 814:	ldr	r3, [r3, #4]
 818:	mov	r0, r3
 81c:	bl	490 <roda_esquerda>
 820:	mov	r2, r0
 824:	ldr	r3, [fp, #-24]	; 0xffffffe8
 828:	str	r2, [r3, #4]
 82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 830:	bl	3b8 <roda_direita>
 834:	mov	r3, r0
 838:	b	850 <avl_insere_impl+0x1dc>
 83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 840:	bl	3b8 <roda_direita>
 844:	mov	r3, r0
 848:	b	850 <avl_insere_impl+0x1dc>
 84c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 850:	mov	r0, r3
 854:	sub	sp, fp, #8
 858:	pop	{r4, fp, pc}

0000085c <avl_no_valormin>:
 85c:	push	{fp}		; (str fp, [sp, #-4]!)
 860:	add	fp, sp, #0
 864:	sub	sp, sp, #20
 868:	str	r0, [fp, #-16]
 86c:	ldr	r3, [fp, #-16]
 870:	str	r3, [fp, #-8]
 874:	b	884 <avl_no_valormin+0x28>
 878:	ldr	r3, [fp, #-8]
 87c:	ldr	r3, [r3, #4]
 880:	str	r3, [fp, #-8]
 884:	ldr	r3, [fp, #-8]
 888:	ldr	r3, [r3, #4]
 88c:	cmp	r3, #0
 890:	bne	878 <avl_no_valormin+0x1c>
 894:	ldr	r3, [fp, #-8]
 898:	mov	r0, r3
 89c:	add	sp, fp, #0
 8a0:	pop	{fp}		; (ldr fp, [sp], #4)
 8a4:	bx	lr

000008a8 <avl_no_valormax>:
 8a8:	push	{fp}		; (str fp, [sp, #-4]!)
 8ac:	add	fp, sp, #0
 8b0:	sub	sp, sp, #20
 8b4:	str	r0, [fp, #-16]
 8b8:	ldr	r3, [fp, #-16]
 8bc:	str	r3, [fp, #-8]
 8c0:	b	8d0 <avl_no_valormax+0x28>
 8c4:	ldr	r3, [fp, #-8]
 8c8:	ldr	r3, [r3, #8]
 8cc:	str	r3, [fp, #-8]
 8d0:	ldr	r3, [fp, #-8]
 8d4:	ldr	r3, [r3, #8]
 8d8:	cmp	r3, #0
 8dc:	bne	8c4 <avl_no_valormax+0x1c>
 8e0:	ldr	r3, [fp, #-8]
 8e4:	mov	r0, r3
 8e8:	add	sp, fp, #0
 8ec:	pop	{fp}		; (ldr fp, [sp], #4)
 8f0:	bx	lr

000008f4 <avl_remove_impl>:
 8f4:	push	{r4, fp, lr}
 8f8:	add	fp, sp, #8
 8fc:	sub	sp, sp, #28
 900:	str	r0, [fp, #-32]	; 0xffffffe0
 904:	str	r1, [fp, #-36]	; 0xffffffdc
 908:	ldr	r3, [fp, #-32]	; 0xffffffe0
 90c:	cmp	r3, #0
 910:	bne	91c <avl_remove_impl+0x28>
 914:	ldr	r3, [fp, #-32]	; 0xffffffe0
 918:	b	c6c <avl_remove_impl+0x378>
 91c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 920:	ldr	r3, [r3]
 924:	mov	r1, r3
 928:	ldr	r0, [fp, #-36]	; 0xffffffdc
 92c:	bl	0 <strcmp>
 930:	mov	r3, r0
 934:	cmp	r3, #0
 938:	bge	960 <avl_remove_impl+0x6c>
 93c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 940:	ldr	r3, [r3, #4]
 944:	ldr	r1, [fp, #-36]	; 0xffffffdc
 948:	mov	r0, r3
 94c:	bl	8f4 <avl_remove_impl>
 950:	mov	r2, r0
 954:	ldr	r3, [fp, #-32]	; 0xffffffe0
 958:	str	r2, [r3, #4]
 95c:	b	b3c <avl_remove_impl+0x248>
 960:	ldr	r3, [fp, #-32]	; 0xffffffe0
 964:	ldr	r3, [r3]
 968:	mov	r1, r3
 96c:	ldr	r0, [fp, #-36]	; 0xffffffdc
 970:	bl	0 <strcmp>
 974:	mov	r3, r0
 978:	cmp	r3, #0
 97c:	ble	9a4 <avl_remove_impl+0xb0>
 980:	ldr	r3, [fp, #-32]	; 0xffffffe0
 984:	ldr	r3, [r3, #8]
 988:	ldr	r1, [fp, #-36]	; 0xffffffdc
 98c:	mov	r0, r3
 990:	bl	8f4 <avl_remove_impl>
 994:	mov	r2, r0
 998:	ldr	r3, [fp, #-32]	; 0xffffffe0
 99c:	str	r2, [r3, #8]
 9a0:	b	b3c <avl_remove_impl+0x248>
 9a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9a8:	ldr	r3, [r3, #4]
 9ac:	cmp	r3, #0
 9b0:	beq	9c4 <avl_remove_impl+0xd0>
 9b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9b8:	ldr	r3, [r3, #8]
 9bc:	cmp	r3, #0
 9c0:	bne	aac <avl_remove_impl+0x1b8>
 9c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9c8:	ldr	r3, [r3, #4]
 9cc:	cmp	r3, #0
 9d0:	beq	9e0 <avl_remove_impl+0xec>
 9d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9d8:	ldr	r3, [r3, #4]
 9dc:	b	9e8 <avl_remove_impl+0xf4>
 9e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9e4:	ldr	r3, [r3, #8]
 9e8:	str	r3, [fp, #-16]
 9ec:	ldr	r3, [fp, #-16]
 9f0:	cmp	r3, #0
 9f4:	bne	a0c <avl_remove_impl+0x118>
 9f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9fc:	str	r3, [fp, #-16]
 a00:	mov	r3, #0
 a04:	str	r3, [fp, #-32]	; 0xffffffe0
 a08:	b	a90 <avl_remove_impl+0x19c>
 a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a10:	ldr	r4, [r3]
 a14:	ldr	r3, [fp, #-16]
 a18:	ldr	r3, [r3]
 a1c:	mov	r0, r3
 a20:	bl	0 <strlen>
 a24:	mov	r3, r0
 a28:	add	r3, r3, #1
 a2c:	mov	r1, r3
 a30:	mov	r0, r4
 a34:	bl	0 <realloc>
 a38:	mov	r2, r0
 a3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a40:	str	r2, [r3]
 a44:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a48:	ldr	r2, [r3]
 a4c:	ldr	r3, [fp, #-16]
 a50:	ldr	r3, [r3]
 a54:	mov	r1, r3
 a58:	mov	r0, r2
 a5c:	bl	0 <strcpy>
 a60:	ldr	r3, [fp, #-16]
 a64:	ldr	r2, [r3, #4]
 a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a6c:	str	r2, [r3, #4]
 a70:	ldr	r3, [fp, #-16]
 a74:	ldr	r2, [r3, #8]
 a78:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a7c:	str	r2, [r3, #8]
 a80:	ldr	r3, [fp, #-16]
 a84:	ldr	r2, [r3, #12]
 a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a8c:	str	r2, [r3, #12]
 a90:	ldr	r3, [fp, #-16]
 a94:	ldr	r3, [r3]
 a98:	mov	r0, r3
 a9c:	bl	0 <free>
 aa0:	ldr	r0, [fp, #-16]
 aa4:	bl	0 <free>
 aa8:	b	b3c <avl_remove_impl+0x248>
 aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 ab0:	ldr	r3, [r3, #8]
 ab4:	mov	r0, r3
 ab8:	bl	85c <avl_no_valormin>
 abc:	str	r0, [fp, #-20]	; 0xffffffec
 ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 ac4:	ldr	r4, [r3]
 ac8:	ldr	r3, [fp, #-20]	; 0xffffffec
 acc:	ldr	r3, [r3]
 ad0:	mov	r0, r3
 ad4:	bl	0 <strlen>
 ad8:	mov	r3, r0
 adc:	add	r3, r3, #1
 ae0:	mov	r1, r3
 ae4:	mov	r0, r4
 ae8:	bl	0 <realloc>
 aec:	mov	r2, r0
 af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 af4:	str	r2, [r3]
 af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 afc:	ldr	r2, [r3]
 b00:	ldr	r3, [fp, #-20]	; 0xffffffec
 b04:	ldr	r3, [r3]
 b08:	mov	r1, r3
 b0c:	mov	r0, r2
 b10:	bl	0 <strcpy>
 b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b18:	ldr	r2, [r3, #8]
 b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
 b20:	ldr	r3, [r3]
 b24:	mov	r1, r3
 b28:	mov	r0, r2
 b2c:	bl	8f4 <avl_remove_impl>
 b30:	mov	r2, r0
 b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b38:	str	r2, [r3, #8]
 b3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b40:	cmp	r3, #0
 b44:	bne	b50 <avl_remove_impl+0x25c>
 b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b4c:	b	c6c <avl_remove_impl+0x378>
 b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b54:	ldr	r3, [r3, #4]
 b58:	mov	r0, r3
 b5c:	bl	2b4 <avl_altura>
 b60:	mov	r4, r0
 b64:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b68:	ldr	r3, [r3, #8]
 b6c:	mov	r0, r3
 b70:	bl	2b4 <avl_altura>
 b74:	mov	r3, r0
 b78:	mov	r1, r3
 b7c:	mov	r0, r4
 b80:	bl	2f0 <max>
 b84:	mov	r3, r0
 b88:	add	r2, r3, #1
 b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b90:	str	r2, [r3, #12]
 b94:	ldr	r0, [fp, #-32]	; 0xffffffe0
 b98:	bl	568 <calc_balanceamento>
 b9c:	str	r0, [fp, #-24]	; 0xffffffe8
 ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 ba4:	cmp	r3, #1
 ba8:	ble	c04 <avl_remove_impl+0x310>
 bac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 bb0:	ldr	r3, [r3, #8]
 bb4:	mov	r0, r3
 bb8:	bl	568 <calc_balanceamento>
 bbc:	mov	r3, r0
 bc0:	cmp	r3, #0
 bc4:	bge	bf4 <avl_remove_impl+0x300>
 bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 bcc:	ldr	r3, [r3, #8]
 bd0:	mov	r0, r3
 bd4:	bl	3b8 <roda_direita>
 bd8:	mov	r2, r0
 bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 be0:	str	r2, [r3, #8]
 be4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 be8:	bl	490 <roda_esquerda>
 bec:	mov	r3, r0
 bf0:	b	c6c <avl_remove_impl+0x378>
 bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 bf8:	bl	490 <roda_esquerda>
 bfc:	mov	r3, r0
 c00:	b	c6c <avl_remove_impl+0x378>
 c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c08:	cmn	r3, #1
 c0c:	bge	c68 <avl_remove_impl+0x374>
 c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c14:	ldr	r3, [r3, #4]
 c18:	mov	r0, r3
 c1c:	bl	568 <calc_balanceamento>
 c20:	mov	r3, r0
 c24:	cmp	r3, #0
 c28:	ble	c58 <avl_remove_impl+0x364>
 c2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c30:	ldr	r3, [r3, #4]
 c34:	mov	r0, r3
 c38:	bl	490 <roda_esquerda>
 c3c:	mov	r2, r0
 c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c44:	str	r2, [r3, #4]
 c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
 c4c:	bl	3b8 <roda_direita>
 c50:	mov	r3, r0
 c54:	b	c6c <avl_remove_impl+0x378>
 c58:	ldr	r0, [fp, #-32]	; 0xffffffe0
 c5c:	bl	3b8 <roda_direita>
 c60:	mov	r3, r0
 c64:	b	c6c <avl_remove_impl+0x378>
 c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c6c:	mov	r0, r3
 c70:	sub	sp, fp, #8
 c74:	pop	{r4, fp, pc}

00000c78 <avl_preordem_impl>:
 c78:	push	{fp, lr}
 c7c:	add	fp, sp, #4
 c80:	sub	sp, sp, #8
 c84:	str	r0, [fp, #-8]
 c88:	ldr	r3, [fp, #-8]
 c8c:	cmp	r3, #0
 c90:	beq	ccc <avl_preordem_impl+0x54>
 c94:	ldr	r3, [fp, #-8]
 c98:	ldr	r3, [r3]
 c9c:	mov	r1, r3
 ca0:	ldr	r0, [pc, #48]	; cd8 <avl_preordem_impl+0x60>
 ca4:	bl	0 <printf>
 ca8:	ldr	r3, [fp, #-8]
 cac:	ldr	r3, [r3, #4]
 cb0:	mov	r0, r3
 cb4:	bl	c78 <avl_preordem_impl>
 cb8:	ldr	r3, [fp, #-8]
 cbc:	ldr	r3, [r3, #8]
 cc0:	mov	r0, r3
 cc4:	bl	c78 <avl_preordem_impl>
 cc8:	b	cd0 <avl_preordem_impl+0x58>
 ccc:	nop			; (mov r0, r0)
 cd0:	sub	sp, fp, #4
 cd4:	pop	{fp, pc}
 cd8:	.word	0x00000000
