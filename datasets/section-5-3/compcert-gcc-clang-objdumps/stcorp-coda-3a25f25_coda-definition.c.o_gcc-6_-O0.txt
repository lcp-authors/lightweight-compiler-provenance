
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_product_variable_delete>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #8
       c:	str	r0, [fp, #-8]
      10:	ldr	r3, [fp, #-8]
      14:	cmp	r3, #0
      18:	bne	30 <coda_product_variable_delete+0x30>
      1c:	ldr	r3, [pc, #128]	; a4 <coda_product_variable_delete+0xa4>
      20:	mov	r2, #49	; 0x31
      24:	ldr	r1, [pc, #124]	; a8 <coda_product_variable_delete+0xa8>
      28:	ldr	r0, [pc, #124]	; ac <coda_product_variable_delete+0xac>
      2c:	bl	0 <__assert_fail>
      30:	ldr	r3, [fp, #-8]
      34:	ldr	r3, [r3]
      38:	cmp	r3, #0
      3c:	beq	50 <coda_product_variable_delete+0x50>
      40:	ldr	r3, [fp, #-8]
      44:	ldr	r3, [r3]
      48:	mov	r0, r3
      4c:	bl	0 <free>
      50:	ldr	r3, [fp, #-8]
      54:	ldr	r3, [r3, #4]
      58:	cmp	r3, #0
      5c:	beq	70 <coda_product_variable_delete+0x70>
      60:	ldr	r3, [fp, #-8]
      64:	ldr	r3, [r3, #4]
      68:	mov	r0, r3
      6c:	bl	0 <coda_expression_delete>
      70:	ldr	r3, [fp, #-8]
      74:	ldr	r3, [r3, #8]
      78:	cmp	r3, #0
      7c:	beq	90 <coda_product_variable_delete+0x90>
      80:	ldr	r3, [fp, #-8]
      84:	ldr	r3, [r3, #8]
      88:	mov	r0, r3
      8c:	bl	0 <coda_expression_delete>
      90:	ldr	r0, [fp, #-8]
      94:	bl	0 <free>
      98:	nop			; (mov r0, r0)
      9c:	sub	sp, fp, #4
      a0:	pop	{fp, pc}
      a4:	.word	0x000008bc
      a8:	.word	0x00000000
      ac:	.word	0x00000050

000000b0 <coda_product_variable_new>:
      b0:	push	{fp, lr}
      b4:	add	fp, sp, #4
      b8:	sub	sp, sp, #24
      bc:	str	r0, [fp, #-16]
      c0:	ldr	r0, [fp, #-16]
      c4:	bl	0 <coda_is_identifier>
      c8:	mov	r3, r0
      cc:	cmp	r3, #0
      d0:	bne	ec <coda_product_variable_new+0x3c>
      d4:	ldr	r2, [fp, #-16]
      d8:	ldr	r1, [pc, #204]	; 1ac <coda_product_variable_new+0xfc>
      dc:	ldr	r0, [pc, #204]	; 1b0 <coda_product_variable_new+0x100>
      e0:	bl	0 <coda_set_error>
      e4:	mov	r3, #0
      e8:	b	1a0 <coda_product_variable_new+0xf0>
      ec:	mov	r0, #12
      f0:	bl	0 <malloc>
      f4:	mov	r3, r0
      f8:	str	r3, [fp, #-8]
      fc:	ldr	r3, [fp, #-8]
     100:	cmp	r3, #0
     104:	bne	12c <coda_product_variable_new+0x7c>
     108:	mov	r3, #82	; 0x52
     10c:	str	r3, [sp]
     110:	ldr	r3, [pc, #156]	; 1b4 <coda_product_variable_new+0x104>
     114:	mov	r2, #12
     118:	ldr	r1, [pc, #152]	; 1b8 <coda_product_variable_new+0x108>
     11c:	mvn	r0, #0
     120:	bl	0 <coda_set_error>
     124:	mov	r3, #0
     128:	b	1a0 <coda_product_variable_new+0xf0>
     12c:	ldr	r3, [fp, #-8]
     130:	mov	r2, #0
     134:	str	r2, [r3]
     138:	ldr	r3, [fp, #-8]
     13c:	mov	r2, #0
     140:	str	r2, [r3, #4]
     144:	ldr	r3, [fp, #-8]
     148:	mov	r2, #0
     14c:	str	r2, [r3, #8]
     150:	ldr	r0, [fp, #-16]
     154:	bl	0 <strdup>
     158:	mov	r3, r0
     15c:	mov	r2, r3
     160:	ldr	r3, [fp, #-8]
     164:	str	r2, [r3]
     168:	ldr	r3, [fp, #-8]
     16c:	ldr	r3, [r3]
     170:	cmp	r3, #0
     174:	bne	19c <coda_product_variable_new+0xec>
     178:	mov	r3, #93	; 0x5d
     17c:	ldr	r2, [pc, #48]	; 1b4 <coda_product_variable_new+0x104>
     180:	ldr	r1, [pc, #52]	; 1bc <coda_product_variable_new+0x10c>
     184:	mvn	r0, #0
     188:	bl	0 <coda_set_error>
     18c:	ldr	r0, [fp, #-8]
     190:	bl	0 <coda_product_variable_delete>
     194:	mov	r3, #0
     198:	b	1a0 <coda_product_variable_new+0xf0>
     19c:	ldr	r3, [fp, #-8]
     1a0:	mov	r0, r3
     1a4:	sub	sp, fp, #4
     1a8:	pop	{fp, pc}
     1ac:	.word	0x0000006c
     1b0:	.word	0xfffffe70
     1b4:	.word	0x00000000
     1b8:	.word	0x000000b0
     1bc:	.word	0x000000e8

000001c0 <coda_product_variable_set_size_expression>:
     1c0:	push	{fp, lr}
     1c4:	add	fp, sp, #4
     1c8:	sub	sp, sp, #8
     1cc:	str	r0, [fp, #-8]
     1d0:	str	r1, [fp, #-12]
     1d4:	ldr	r3, [fp, #-12]
     1d8:	cmp	r3, #0
     1dc:	bne	1f4 <coda_product_variable_set_size_expression+0x34>
     1e0:	ldr	r3, [pc, #76]	; 234 <coda_product_variable_set_size_expression+0x74>
     1e4:	mov	r2, #103	; 0x67
     1e8:	ldr	r1, [pc, #72]	; 238 <coda_product_variable_set_size_expression+0x78>
     1ec:	ldr	r0, [pc, #72]	; 23c <coda_product_variable_set_size_expression+0x7c>
     1f0:	bl	0 <__assert_fail>
     1f4:	ldr	r3, [fp, #-8]
     1f8:	ldr	r3, [r3, #4]
     1fc:	cmp	r3, #0
     200:	beq	218 <coda_product_variable_set_size_expression+0x58>
     204:	ldr	r1, [pc, #52]	; 240 <coda_product_variable_set_size_expression+0x80>
     208:	ldr	r0, [pc, #52]	; 244 <coda_product_variable_set_size_expression+0x84>
     20c:	bl	0 <coda_set_error>
     210:	mvn	r3, #0
     214:	b	228 <coda_product_variable_set_size_expression+0x68>
     218:	ldr	r3, [fp, #-8]
     21c:	ldr	r2, [fp, #-12]
     220:	str	r2, [r3, #4]
     224:	mov	r3, #0
     228:	mov	r0, r3
     22c:	sub	sp, fp, #4
     230:	pop	{fp, pc}
     234:	.word	0x000008dc
     238:	.word	0x00000000
     23c:	.word	0x0000011c
     240:	.word	0x00000130
     244:	.word	0xfffffe70

00000248 <coda_product_variable_set_init_expression>:
     248:	push	{fp, lr}
     24c:	add	fp, sp, #4
     250:	sub	sp, sp, #8
     254:	str	r0, [fp, #-8]
     258:	str	r1, [fp, #-12]
     25c:	ldr	r3, [fp, #-12]
     260:	cmp	r3, #0
     264:	bne	27c <coda_product_variable_set_init_expression+0x34>
     268:	ldr	r3, [pc, #76]	; 2bc <coda_product_variable_set_init_expression+0x74>
     26c:	mov	r2, #115	; 0x73
     270:	ldr	r1, [pc, #72]	; 2c0 <coda_product_variable_set_init_expression+0x78>
     274:	ldr	r0, [pc, #72]	; 2c4 <coda_product_variable_set_init_expression+0x7c>
     278:	bl	0 <__assert_fail>
     27c:	ldr	r3, [fp, #-8]
     280:	ldr	r3, [r3, #8]
     284:	cmp	r3, #0
     288:	beq	2a0 <coda_product_variable_set_init_expression+0x58>
     28c:	ldr	r1, [pc, #52]	; 2c8 <coda_product_variable_set_init_expression+0x80>
     290:	ldr	r0, [pc, #52]	; 2cc <coda_product_variable_set_init_expression+0x84>
     294:	bl	0 <coda_set_error>
     298:	mvn	r3, #0
     29c:	b	2b0 <coda_product_variable_set_init_expression+0x68>
     2a0:	ldr	r3, [fp, #-8]
     2a4:	ldr	r2, [fp, #-12]
     2a8:	str	r2, [r3, #8]
     2ac:	mov	r3, #0
     2b0:	mov	r0, r3
     2b4:	sub	sp, fp, #4
     2b8:	pop	{fp, pc}
     2bc:	.word	0x00000908
     2c0:	.word	0x00000000
     2c4:	.word	0x00000160
     2c8:	.word	0x00000174
     2cc:	.word	0xfffffe70

000002d0 <coda_product_variable_validate>:
     2d0:	push	{fp, lr}
     2d4:	add	fp, sp, #4
     2d8:	sub	sp, sp, #8
     2dc:	str	r0, [fp, #-8]
     2e0:	ldr	r3, [fp, #-8]
     2e4:	ldr	r3, [r3, #8]
     2e8:	cmp	r3, #0
     2ec:	bne	304 <coda_product_variable_validate+0x34>
     2f0:	ldr	r1, [pc, #28]	; 314 <coda_product_variable_validate+0x44>
     2f4:	ldr	r0, [pc, #28]	; 318 <coda_product_variable_validate+0x48>
     2f8:	bl	0 <coda_set_error>
     2fc:	mvn	r3, #0
     300:	b	308 <coda_product_variable_validate+0x38>
     304:	mov	r3, #0
     308:	mov	r0, r3
     30c:	sub	sp, fp, #4
     310:	pop	{fp, pc}
     314:	.word	0x000001a4
     318:	.word	0xfffffe70

0000031c <init_product_variable>:
     31c:	push	{r4, fp, lr}
     320:	add	fp, sp, #8
     324:	sub	sp, sp, #548	; 0x224
     328:	str	r0, [fp, #-544]	; 0xfffffde0
     32c:	str	r1, [fp, #-548]	; 0xfffffddc
     330:	sub	r3, fp, #540	; 0x21c
     334:	mov	r1, r3
     338:	mov	r2, #1
     33c:	mov	r3, #0
     340:	strd	r2, [r1]
     344:	sub	r3, fp, #532	; 0x214
     348:	ldr	r1, [fp, #-544]	; 0xfffffde0
     34c:	mov	r0, r3
     350:	bl	0 <coda_cursor_set_product>
     354:	mov	r3, r0
     358:	cmp	r3, #0
     35c:	beq	368 <init_product_variable+0x4c>
     360:	mvn	r3, #0
     364:	b	550 <init_product_variable+0x234>
     368:	ldr	r3, [fp, #-544]	; 0xfffffde0
     36c:	ldr	r3, [r3, #24]
     370:	ldr	r2, [r3, #36]	; 0x24
     374:	ldr	r3, [fp, #-548]	; 0xfffffddc
     378:	lsl	r3, r3, #2
     37c:	add	r3, r2, r3
     380:	ldr	r3, [r3]
     384:	ldr	r3, [r3, #4]
     388:	cmp	r3, #0
     38c:	beq	400 <init_product_variable+0xe4>
     390:	ldr	r3, [fp, #-544]	; 0xfffffde0
     394:	ldr	r3, [r3, #24]
     398:	ldr	r2, [r3, #36]	; 0x24
     39c:	ldr	r3, [fp, #-548]	; 0xfffffddc
     3a0:	lsl	r3, r3, #2
     3a4:	add	r3, r2, r3
     3a8:	ldr	r3, [r3]
     3ac:	ldr	r3, [r3, #4]
     3b0:	sub	r2, fp, #540	; 0x21c
     3b4:	sub	r1, fp, #532	; 0x214
     3b8:	mov	r0, r3
     3bc:	bl	0 <coda_expression_eval_integer>
     3c0:	mov	r3, r0
     3c4:	cmp	r3, #0
     3c8:	beq	400 <init_product_variable+0xe4>
     3cc:	ldr	r3, [fp, #-544]	; 0xfffffde0
     3d0:	ldr	r3, [r3, #24]
     3d4:	ldr	r2, [r3, #36]	; 0x24
     3d8:	ldr	r3, [fp, #-548]	; 0xfffffddc
     3dc:	lsl	r3, r3, #2
     3e0:	add	r3, r2, r3
     3e4:	ldr	r3, [r3]
     3e8:	ldr	r3, [r3]
     3ec:	mov	r1, r3
     3f0:	ldr	r0, [pc, #356]	; 55c <init_product_variable+0x240>
     3f4:	bl	0 <coda_add_error_message>
     3f8:	mvn	r3, #0
     3fc:	b	550 <init_product_variable+0x234>
     400:	ldr	r3, [fp, #-544]	; 0xfffffde0
     404:	ldr	r2, [r3, #28]
     408:	ldr	r3, [fp, #-548]	; 0xfffffddc
     40c:	lsl	r3, r3, #2
     410:	add	r1, r2, r3
     414:	sub	r3, fp, #540	; 0x21c
     418:	ldrd	r2, [r3]
     41c:	mov	r3, r2
     420:	str	r3, [r1]
     424:	ldr	r3, [fp, #-544]	; 0xfffffde0
     428:	ldr	r2, [r3, #32]
     42c:	ldr	r3, [fp, #-548]	; 0xfffffddc
     430:	lsl	r3, r3, #2
     434:	add	r4, r2, r3
     438:	sub	r3, fp, #540	; 0x21c
     43c:	ldrd	r2, [r3]
     440:	mov	r3, r2
     444:	lsl	r3, r3, #3
     448:	mov	r0, r3
     44c:	bl	0 <malloc>
     450:	mov	r3, r0
     454:	str	r3, [r4]
     458:	ldr	r3, [fp, #-544]	; 0xfffffde0
     45c:	ldr	r2, [r3, #32]
     460:	ldr	r3, [fp, #-548]	; 0xfffffddc
     464:	lsl	r3, r3, #2
     468:	add	r3, r2, r3
     46c:	ldr	r3, [r3]
     470:	cmp	r3, #0
     474:	bne	4a8 <init_product_variable+0x18c>
     478:	sub	r3, fp, #540	; 0x21c
     47c:	ldrd	r2, [r3]
     480:	mov	r3, r2
     484:	lsl	r2, r3, #3
     488:	mov	r3, #162	; 0xa2
     48c:	str	r3, [sp]
     490:	ldr	r3, [pc, #200]	; 560 <init_product_variable+0x244>
     494:	ldr	r1, [pc, #200]	; 564 <init_product_variable+0x248>
     498:	mvn	r0, #0
     49c:	bl	0 <coda_set_error>
     4a0:	mvn	r3, #0
     4a4:	b	550 <init_product_variable+0x234>
     4a8:	ldr	r3, [fp, #-544]	; 0xfffffde0
     4ac:	ldr	r2, [r3, #32]
     4b0:	ldr	r3, [fp, #-548]	; 0xfffffddc
     4b4:	lsl	r3, r3, #2
     4b8:	add	r3, r2, r3
     4bc:	ldr	r0, [r3]
     4c0:	sub	r3, fp, #540	; 0x21c
     4c4:	ldrd	r2, [r3]
     4c8:	mov	r3, r2
     4cc:	lsl	r3, r3, #3
     4d0:	mov	r2, r3
     4d4:	mov	r1, #0
     4d8:	bl	0 <memset>
     4dc:	ldr	r3, [fp, #-544]	; 0xfffffde0
     4e0:	ldr	r3, [r3, #24]
     4e4:	ldr	r2, [r3, #36]	; 0x24
     4e8:	ldr	r3, [fp, #-548]	; 0xfffffddc
     4ec:	lsl	r3, r3, #2
     4f0:	add	r3, r2, r3
     4f4:	ldr	r3, [r3]
     4f8:	ldr	r3, [r3, #8]
     4fc:	sub	r2, fp, #532	; 0x214
     500:	mov	r1, r2
     504:	mov	r0, r3
     508:	bl	0 <coda_expression_eval_void>
     50c:	mov	r3, r0
     510:	cmp	r3, #0
     514:	beq	54c <init_product_variable+0x230>
     518:	ldr	r3, [fp, #-544]	; 0xfffffde0
     51c:	ldr	r3, [r3, #24]
     520:	ldr	r2, [r3, #36]	; 0x24
     524:	ldr	r3, [fp, #-548]	; 0xfffffddc
     528:	lsl	r3, r3, #2
     52c:	add	r3, r2, r3
     530:	ldr	r3, [r3]
     534:	ldr	r3, [r3]
     538:	mov	r1, r3
     53c:	ldr	r0, [pc, #36]	; 568 <init_product_variable+0x24c>
     540:	bl	0 <coda_add_error_message>
     544:	mvn	r3, #0
     548:	b	550 <init_product_variable+0x234>
     54c:	mov	r3, #0
     550:	mov	r0, r3
     554:	sub	sp, fp, #8
     558:	pop	{r4, fp, pc}
     55c:	.word	0x000001dc
     560:	.word	0x00000000
     564:	.word	0x000000b0
     568:	.word	0x00000210

0000056c <coda_product_variable_get_size>:
     56c:	push	{fp, lr}
     570:	add	fp, sp, #4
     574:	sub	sp, sp, #32
     578:	str	r0, [fp, #-16]
     57c:	str	r1, [fp, #-20]	; 0xffffffec
     580:	str	r2, [fp, #-24]	; 0xffffffe8
     584:	ldr	r3, [fp, #-16]
     588:	cmp	r3, #0
     58c:	beq	5a8 <coda_product_variable_get_size+0x3c>
     590:	ldr	r3, [fp, #-20]	; 0xffffffec
     594:	cmp	r3, #0
     598:	beq	5a8 <coda_product_variable_get_size+0x3c>
     59c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5a0:	cmp	r3, #0
     5a4:	bne	5bc <coda_product_variable_get_size+0x50>
     5a8:	ldr	r3, [pc, #260]	; 6b4 <coda_product_variable_get_size+0x148>
     5ac:	mov	r2, #180	; 0xb4
     5b0:	ldr	r1, [pc, #256]	; 6b8 <coda_product_variable_get_size+0x14c>
     5b4:	ldr	r0, [pc, #256]	; 6bc <coda_product_variable_get_size+0x150>
     5b8:	bl	0 <__assert_fail>
     5bc:	ldr	r3, [fp, #-16]
     5c0:	ldr	r3, [r3, #32]
     5c4:	cmp	r3, #0
     5c8:	bne	5e0 <coda_product_variable_get_size+0x74>
     5cc:	ldr	r3, [pc, #224]	; 6b4 <coda_product_variable_get_size+0x148>
     5d0:	mov	r2, #181	; 0xb5
     5d4:	ldr	r1, [pc, #220]	; 6b8 <coda_product_variable_get_size+0x14c>
     5d8:	ldr	r0, [pc, #224]	; 6c0 <coda_product_variable_get_size+0x154>
     5dc:	bl	0 <__assert_fail>
     5e0:	ldr	r3, [fp, #-16]
     5e4:	ldr	r3, [r3, #24]
     5e8:	ldr	r3, [r3, #40]	; 0x28
     5ec:	ldr	r1, [fp, #-20]	; 0xffffffec
     5f0:	mov	r0, r3
     5f4:	bl	0 <coda_hashtable_get_index_from_name>
     5f8:	str	r0, [fp, #-8]
     5fc:	ldr	r3, [fp, #-8]
     600:	cmn	r3, #1
     604:	bne	644 <coda_product_variable_get_size+0xd8>
     608:	ldr	r3, [fp, #-16]
     60c:	ldr	r3, [r3, #24]
     610:	ldr	r3, [r3, #44]	; 0x2c
     614:	ldr	r2, [r3]
     618:	ldr	r3, [fp, #-16]
     61c:	ldr	r3, [r3, #24]
     620:	ldr	r1, [r3, #4]
     624:	ldr	r3, [fp, #-20]	; 0xffffffec
     628:	str	r3, [sp]
     62c:	mov	r3, r1
     630:	ldr	r1, [pc, #140]	; 6c4 <coda_product_variable_get_size+0x158>
     634:	ldr	r0, [pc, #140]	; 6c8 <coda_product_variable_get_size+0x15c>
     638:	bl	0 <coda_set_error>
     63c:	mvn	r3, #0
     640:	b	6a8 <coda_product_variable_get_size+0x13c>
     644:	ldr	r3, [fp, #-16]
     648:	ldr	r2, [r3, #32]
     64c:	ldr	r3, [fp, #-8]
     650:	lsl	r3, r3, #2
     654:	add	r3, r2, r3
     658:	ldr	r3, [r3]
     65c:	cmp	r3, #0
     660:	bne	684 <coda_product_variable_get_size+0x118>
     664:	ldr	r1, [fp, #-8]
     668:	ldr	r0, [fp, #-16]
     66c:	bl	31c <init_product_variable>
     670:	mov	r3, r0
     674:	cmp	r3, #0
     678:	beq	684 <coda_product_variable_get_size+0x118>
     67c:	mvn	r3, #0
     680:	b	6a8 <coda_product_variable_get_size+0x13c>
     684:	ldr	r3, [fp, #-16]
     688:	ldr	r2, [r3, #28]
     68c:	ldr	r3, [fp, #-8]
     690:	lsl	r3, r3, #2
     694:	add	r3, r2, r3
     698:	ldr	r2, [r3]
     69c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6a0:	str	r2, [r3]
     6a4:	mov	r3, #0
     6a8:	mov	r0, r3
     6ac:	sub	sp, fp, #4
     6b0:	pop	{fp, pc}
     6b4:	.word	0x00000934
     6b8:	.word	0x00000000
     6bc:	.word	0x00000238
     6c0:	.word	0x00000268
     6c4:	.word	0x0000028c
     6c8:	.word	0xfffffe70

000006cc <coda_product_variable_get_pointer>:
     6cc:	push	{fp, lr}
     6d0:	add	fp, sp, #4
     6d4:	sub	sp, sp, #32
     6d8:	str	r0, [fp, #-16]
     6dc:	str	r1, [fp, #-20]	; 0xffffffec
     6e0:	str	r2, [fp, #-24]	; 0xffffffe8
     6e4:	str	r3, [fp, #-28]	; 0xffffffe4
     6e8:	ldr	r3, [fp, #-16]
     6ec:	cmp	r3, #0
     6f0:	beq	70c <coda_product_variable_get_pointer+0x40>
     6f4:	ldr	r3, [fp, #-20]	; 0xffffffec
     6f8:	cmp	r3, #0
     6fc:	beq	70c <coda_product_variable_get_pointer+0x40>
     700:	ldr	r3, [fp, #-28]	; 0xffffffe4
     704:	cmp	r3, #0
     708:	bne	720 <coda_product_variable_get_pointer+0x54>
     70c:	ldr	r3, [pc, #312]	; 84c <coda_product_variable_get_pointer+0x180>
     710:	mov	r2, #208	; 0xd0
     714:	ldr	r1, [pc, #308]	; 850 <coda_product_variable_get_pointer+0x184>
     718:	ldr	r0, [pc, #308]	; 854 <coda_product_variable_get_pointer+0x188>
     71c:	bl	0 <__assert_fail>
     720:	ldr	r3, [fp, #-16]
     724:	ldr	r3, [r3, #24]
     728:	ldr	r3, [r3, #40]	; 0x28
     72c:	ldr	r1, [fp, #-20]	; 0xffffffec
     730:	mov	r0, r3
     734:	bl	0 <coda_hashtable_get_index_from_name>
     738:	str	r0, [fp, #-8]
     73c:	ldr	r3, [fp, #-8]
     740:	cmn	r3, #1
     744:	bne	784 <coda_product_variable_get_pointer+0xb8>
     748:	ldr	r3, [fp, #-16]
     74c:	ldr	r3, [r3, #24]
     750:	ldr	r3, [r3, #44]	; 0x2c
     754:	ldr	r2, [r3]
     758:	ldr	r3, [fp, #-16]
     75c:	ldr	r3, [r3, #24]
     760:	ldr	r1, [r3, #4]
     764:	ldr	r3, [fp, #-20]	; 0xffffffec
     768:	str	r3, [sp]
     76c:	mov	r3, r1
     770:	ldr	r1, [pc, #224]	; 858 <coda_product_variable_get_pointer+0x18c>
     774:	ldr	r0, [pc, #224]	; 85c <coda_product_variable_get_pointer+0x190>
     778:	bl	0 <coda_set_error>
     77c:	mvn	r3, #0
     780:	b	840 <coda_product_variable_get_pointer+0x174>
     784:	ldr	r3, [fp, #-16]
     788:	ldr	r2, [r3, #32]
     78c:	ldr	r3, [fp, #-8]
     790:	lsl	r3, r3, #2
     794:	add	r3, r2, r3
     798:	ldr	r3, [r3]
     79c:	cmp	r3, #0
     7a0:	bne	7c4 <coda_product_variable_get_pointer+0xf8>
     7a4:	ldr	r1, [fp, #-8]
     7a8:	ldr	r0, [fp, #-16]
     7ac:	bl	31c <init_product_variable>
     7b0:	mov	r3, r0
     7b4:	cmp	r3, #0
     7b8:	beq	7c4 <coda_product_variable_get_pointer+0xf8>
     7bc:	mvn	r3, #0
     7c0:	b	840 <coda_product_variable_get_pointer+0x174>
     7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7c8:	cmp	r3, #0
     7cc:	blt	7f4 <coda_product_variable_get_pointer+0x128>
     7d0:	ldr	r3, [fp, #-16]
     7d4:	ldr	r2, [r3, #28]
     7d8:	ldr	r3, [fp, #-8]
     7dc:	lsl	r3, r3, #2
     7e0:	add	r3, r2, r3
     7e4:	ldr	r2, [r3]
     7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7ec:	cmp	r2, r3
     7f0:	bgt	810 <coda_product_variable_get_pointer+0x144>
     7f4:	ldr	r3, [fp, #-20]	; 0xffffffec
     7f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7fc:	ldr	r1, [pc, #92]	; 860 <coda_product_variable_get_pointer+0x194>
     800:	ldr	r0, [pc, #84]	; 85c <coda_product_variable_get_pointer+0x190>
     804:	bl	0 <coda_set_error>
     808:	mvn	r3, #0
     80c:	b	840 <coda_product_variable_get_pointer+0x174>
     810:	ldr	r3, [fp, #-16]
     814:	ldr	r2, [r3, #32]
     818:	ldr	r3, [fp, #-8]
     81c:	lsl	r3, r3, #2
     820:	add	r3, r2, r3
     824:	ldr	r2, [r3]
     828:	ldr	r3, [fp, #-24]	; 0xffffffe8
     82c:	lsl	r3, r3, #3
     830:	add	r2, r2, r3
     834:	ldr	r3, [fp, #-28]	; 0xffffffe4
     838:	str	r2, [r3]
     83c:	mov	r3, #0
     840:	mov	r0, r3
     844:	sub	sp, fp, #4
     848:	pop	{fp, pc}
     84c:	.word	0x00000954
     850:	.word	0x00000000
     854:	.word	0x000002dc
     858:	.word	0x0000028c
     85c:	.word	0xfffffe70
     860:	.word	0x0000030c

00000864 <coda_product_definition_delete>:
     864:	push	{fp, lr}
     868:	add	fp, sp, #4
     86c:	sub	sp, sp, #16
     870:	str	r0, [fp, #-16]
     874:	ldr	r3, [fp, #-16]
     878:	ldr	r3, [r3, #20]
     87c:	cmp	r3, #0
     880:	beq	8e0 <coda_product_definition_delete+0x7c>
     884:	mov	r3, #0
     888:	str	r3, [fp, #-8]
     88c:	b	8bc <coda_product_definition_delete+0x58>
     890:	ldr	r3, [fp, #-16]
     894:	ldr	r2, [r3, #20]
     898:	ldr	r3, [fp, #-8]
     89c:	lsl	r3, r3, #2
     8a0:	add	r3, r2, r3
     8a4:	ldr	r3, [r3]
     8a8:	mov	r0, r3
     8ac:	bl	0 <coda_detection_rule_delete>
     8b0:	ldr	r3, [fp, #-8]
     8b4:	add	r3, r3, #1
     8b8:	str	r3, [fp, #-8]
     8bc:	ldr	r3, [fp, #-16]
     8c0:	ldr	r2, [r3, #16]
     8c4:	ldr	r3, [fp, #-8]
     8c8:	cmp	r2, r3
     8cc:	bgt	890 <coda_product_definition_delete+0x2c>
     8d0:	ldr	r3, [fp, #-16]
     8d4:	ldr	r3, [r3, #20]
     8d8:	mov	r0, r3
     8dc:	bl	0 <free>
     8e0:	ldr	r3, [fp, #-16]
     8e4:	ldr	r3, [r3, #8]
     8e8:	cmp	r3, #0
     8ec:	beq	900 <coda_product_definition_delete+0x9c>
     8f0:	ldr	r3, [fp, #-16]
     8f4:	ldr	r3, [r3, #8]
     8f8:	mov	r0, r3
     8fc:	bl	0 <free>
     900:	ldr	r3, [fp, #-16]
     904:	ldr	r3, [r3, #12]
     908:	cmp	r3, #0
     90c:	beq	920 <coda_product_definition_delete+0xbc>
     910:	ldr	r3, [fp, #-16]
     914:	ldr	r3, [r3, #12]
     918:	mov	r0, r3
     91c:	bl	0 <free>
     920:	ldr	r3, [fp, #-16]
     924:	ldr	r3, [r3, #28]
     928:	cmp	r3, #0
     92c:	beq	940 <coda_product_definition_delete+0xdc>
     930:	ldr	r3, [fp, #-16]
     934:	ldr	r3, [r3, #28]
     938:	mov	r0, r3
     93c:	bl	0 <coda_type_release>
     940:	ldr	r3, [fp, #-16]
     944:	ldr	r3, [r3, #40]	; 0x28
     948:	cmp	r3, #0
     94c:	beq	960 <coda_product_definition_delete+0xfc>
     950:	ldr	r3, [fp, #-16]
     954:	ldr	r3, [r3, #40]	; 0x28
     958:	mov	r0, r3
     95c:	bl	0 <coda_hashtable_delete>
     960:	ldr	r3, [fp, #-16]
     964:	ldr	r3, [r3, #36]	; 0x24
     968:	cmp	r3, #0
     96c:	beq	9cc <coda_product_definition_delete+0x168>
     970:	mov	r3, #0
     974:	str	r3, [fp, #-8]
     978:	b	9a8 <coda_product_definition_delete+0x144>
     97c:	ldr	r3, [fp, #-16]
     980:	ldr	r2, [r3, #36]	; 0x24
     984:	ldr	r3, [fp, #-8]
     988:	lsl	r3, r3, #2
     98c:	add	r3, r2, r3
     990:	ldr	r3, [r3]
     994:	mov	r0, r3
     998:	bl	0 <coda_product_variable_delete>
     99c:	ldr	r3, [fp, #-8]
     9a0:	add	r3, r3, #1
     9a4:	str	r3, [fp, #-8]
     9a8:	ldr	r3, [fp, #-16]
     9ac:	ldr	r2, [r3, #32]
     9b0:	ldr	r3, [fp, #-8]
     9b4:	cmp	r2, r3
     9b8:	bgt	97c <coda_product_definition_delete+0x118>
     9bc:	ldr	r3, [fp, #-16]
     9c0:	ldr	r3, [r3, #36]	; 0x24
     9c4:	mov	r0, r3
     9c8:	bl	0 <free>
     9cc:	ldr	r0, [fp, #-16]
     9d0:	bl	0 <free>
     9d4:	nop			; (mov r0, r0)
     9d8:	sub	sp, fp, #4
     9dc:	pop	{fp, pc}

000009e0 <coda_product_definition_new>:
     9e0:	push	{fp, lr}
     9e4:	add	fp, sp, #4
     9e8:	sub	sp, sp, #32
     9ec:	str	r0, [fp, #-16]
     9f0:	str	r1, [fp, #-20]	; 0xffffffec
     9f4:	str	r2, [fp, #-24]	; 0xffffffe8
     9f8:	ldr	r0, [fp, #-16]
     9fc:	bl	0 <coda_is_identifier>
     a00:	mov	r3, r0
     a04:	cmp	r3, #0
     a08:	bne	a24 <coda_product_definition_new+0x44>
     a0c:	ldr	r2, [fp, #-16]
     a10:	ldr	r1, [pc, #384]	; b98 <coda_product_definition_new+0x1b8>
     a14:	ldr	r0, [pc, #384]	; b9c <coda_product_definition_new+0x1bc>
     a18:	bl	0 <coda_set_error>
     a1c:	mov	r3, #0
     a20:	b	b8c <coda_product_definition_new+0x1ac>
     a24:	mov	r0, #48	; 0x30
     a28:	bl	0 <malloc>
     a2c:	mov	r3, r0
     a30:	str	r3, [fp, #-8]
     a34:	ldr	r3, [fp, #-8]
     a38:	cmp	r3, #0
     a3c:	bne	a64 <coda_product_definition_new+0x84>
     a40:	ldr	r3, [pc, #344]	; ba0 <coda_product_definition_new+0x1c0>
     a44:	str	r3, [sp]
     a48:	ldr	r3, [pc, #340]	; ba4 <coda_product_definition_new+0x1c4>
     a4c:	mov	r2, #48	; 0x30
     a50:	ldr	r1, [pc, #336]	; ba8 <coda_product_definition_new+0x1c8>
     a54:	mvn	r0, #0
     a58:	bl	0 <coda_set_error>
     a5c:	mov	r3, #0
     a60:	b	b8c <coda_product_definition_new+0x1ac>
     a64:	ldr	r3, [fp, #-8]
     a68:	ldr	r2, [fp, #-20]	; 0xffffffec
     a6c:	str	r2, [r3]
     a70:	ldr	r3, [fp, #-8]
     a74:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a78:	str	r2, [r3, #4]
     a7c:	ldr	r3, [fp, #-8]
     a80:	mov	r2, #0
     a84:	str	r2, [r3, #8]
     a88:	ldr	r3, [fp, #-8]
     a8c:	mov	r2, #0
     a90:	str	r2, [r3, #12]
     a94:	ldr	r3, [fp, #-8]
     a98:	mov	r2, #0
     a9c:	str	r2, [r3, #16]
     aa0:	ldr	r3, [fp, #-8]
     aa4:	mov	r2, #0
     aa8:	str	r2, [r3, #20]
     aac:	ldr	r3, [fp, #-8]
     ab0:	mov	r2, #0
     ab4:	str	r2, [r3, #24]
     ab8:	ldr	r3, [fp, #-8]
     abc:	mov	r2, #0
     ac0:	str	r2, [r3, #28]
     ac4:	ldr	r3, [fp, #-8]
     ac8:	mov	r2, #0
     acc:	str	r2, [r3, #40]	; 0x28
     ad0:	ldr	r3, [fp, #-8]
     ad4:	mov	r2, #0
     ad8:	str	r2, [r3, #32]
     adc:	ldr	r3, [fp, #-8]
     ae0:	mov	r2, #0
     ae4:	str	r2, [r3, #36]	; 0x24
     ae8:	ldr	r3, [fp, #-8]
     aec:	mov	r2, #0
     af0:	str	r2, [r3, #44]	; 0x2c
     af4:	ldr	r0, [fp, #-16]
     af8:	bl	0 <strdup>
     afc:	mov	r3, r0
     b00:	mov	r2, r3
     b04:	ldr	r3, [fp, #-8]
     b08:	str	r2, [r3, #8]
     b0c:	ldr	r3, [fp, #-8]
     b10:	ldr	r3, [r3, #8]
     b14:	cmp	r3, #0
     b18:	bne	b40 <coda_product_definition_new+0x160>
     b1c:	ldr	r3, [pc, #136]	; bac <coda_product_definition_new+0x1cc>
     b20:	ldr	r2, [pc, #124]	; ba4 <coda_product_definition_new+0x1c4>
     b24:	ldr	r1, [pc, #132]	; bb0 <coda_product_definition_new+0x1d0>
     b28:	mvn	r0, #0
     b2c:	bl	0 <coda_set_error>
     b30:	ldr	r0, [fp, #-8]
     b34:	bl	864 <coda_product_definition_delete>
     b38:	mov	r3, #0
     b3c:	b	b8c <coda_product_definition_new+0x1ac>
     b40:	mov	r0, #1
     b44:	bl	0 <coda_hashtable_new>
     b48:	mov	r2, r0
     b4c:	ldr	r3, [fp, #-8]
     b50:	str	r2, [r3, #40]	; 0x28
     b54:	ldr	r3, [fp, #-8]
     b58:	ldr	r3, [r3, #40]	; 0x28
     b5c:	cmp	r3, #0
     b60:	bne	b88 <coda_product_definition_new+0x1a8>
     b64:	mov	r3, #320	; 0x140
     b68:	ldr	r2, [pc, #52]	; ba4 <coda_product_definition_new+0x1c4>
     b6c:	ldr	r1, [pc, #64]	; bb4 <coda_product_definition_new+0x1d4>
     b70:	mvn	r0, #0
     b74:	bl	0 <coda_set_error>
     b78:	ldr	r0, [fp, #-8]
     b7c:	bl	864 <coda_product_definition_delete>
     b80:	mov	r3, #0
     b84:	b	b8c <coda_product_definition_new+0x1ac>
     b88:	ldr	r3, [fp, #-8]
     b8c:	mov	r0, r3
     b90:	sub	sp, fp, #4
     b94:	pop	{fp, pc}
     b98:	.word	0x00000348
     b9c:	.word	0xfffffe70
     ba0:	.word	0x00000123
     ba4:	.word	0x00000000
     ba8:	.word	0x000000b0
     bac:	.word	0x00000137
     bb0:	.word	0x000000e8
     bb4:	.word	0x00000384

00000bb8 <coda_product_definition_set_description>:
     bb8:	push	{fp, lr}
     bbc:	add	fp, sp, #4
     bc0:	sub	sp, sp, #16
     bc4:	str	r0, [fp, #-16]
     bc8:	str	r1, [fp, #-20]	; 0xffffffec
     bcc:	mov	r3, #0
     bd0:	str	r3, [fp, #-8]
     bd4:	ldr	r3, [fp, #-16]
     bd8:	ldr	r3, [r3, #12]
     bdc:	cmp	r3, #0
     be0:	beq	bf8 <coda_product_definition_set_description+0x40>
     be4:	ldr	r1, [pc, #108]	; c58 <coda_product_definition_set_description+0xa0>
     be8:	ldr	r0, [pc, #108]	; c5c <coda_product_definition_set_description+0xa4>
     bec:	bl	0 <coda_set_error>
     bf0:	mvn	r3, #0
     bf4:	b	c4c <coda_product_definition_set_description+0x94>
     bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
     bfc:	cmp	r3, #0
     c00:	beq	c3c <coda_product_definition_set_description+0x84>
     c04:	ldr	r0, [fp, #-20]	; 0xffffffec
     c08:	bl	0 <strdup>
     c0c:	mov	r3, r0
     c10:	str	r3, [fp, #-8]
     c14:	ldr	r3, [fp, #-8]
     c18:	cmp	r3, #0
     c1c:	bne	c3c <coda_product_definition_set_description+0x84>
     c20:	ldr	r3, [pc, #56]	; c60 <coda_product_definition_set_description+0xa8>
     c24:	ldr	r2, [pc, #56]	; c64 <coda_product_definition_set_description+0xac>
     c28:	ldr	r1, [pc, #56]	; c68 <coda_product_definition_set_description+0xb0>
     c2c:	mvn	r0, #0
     c30:	bl	0 <coda_set_error>
     c34:	mvn	r3, #0
     c38:	b	c4c <coda_product_definition_set_description+0x94>
     c3c:	ldr	r3, [fp, #-16]
     c40:	ldr	r2, [fp, #-8]
     c44:	str	r2, [r3, #12]
     c48:	mov	r3, #0
     c4c:	mov	r0, r3
     c50:	sub	sp, fp, #4
     c54:	pop	{fp, pc}
     c58:	.word	0x000003b8
     c5c:	.word	0xfffffe70
     c60:	.word	0x00000157
     c64:	.word	0x00000000
     c68:	.word	0x000000e8

00000c6c <coda_product_definition_set_root_type>:
     c6c:	push	{fp, lr}
     c70:	add	fp, sp, #4
     c74:	sub	sp, sp, #8
     c78:	str	r0, [fp, #-8]
     c7c:	str	r1, [fp, #-12]
     c80:	ldr	r3, [fp, #-12]
     c84:	cmp	r3, #0
     c88:	bne	ca0 <coda_product_definition_set_root_type+0x34>
     c8c:	ldr	r3, [pc, #96]	; cf4 <coda_product_definition_set_root_type+0x88>
     c90:	ldr	r2, [pc, #96]	; cf8 <coda_product_definition_set_root_type+0x8c>
     c94:	ldr	r1, [pc, #96]	; cfc <coda_product_definition_set_root_type+0x90>
     c98:	ldr	r0, [pc, #96]	; d00 <coda_product_definition_set_root_type+0x94>
     c9c:	bl	0 <__assert_fail>
     ca0:	ldr	r3, [fp, #-8]
     ca4:	ldr	r3, [r3, #28]
     ca8:	cmp	r3, #0
     cac:	beq	cc4 <coda_product_definition_set_root_type+0x58>
     cb0:	ldr	r1, [pc, #76]	; d04 <coda_product_definition_set_root_type+0x98>
     cb4:	ldr	r0, [pc, #76]	; d08 <coda_product_definition_set_root_type+0x9c>
     cb8:	bl	0 <coda_set_error>
     cbc:	mvn	r3, #0
     cc0:	b	ce8 <coda_product_definition_set_root_type+0x7c>
     cc4:	ldr	r3, [fp, #-8]
     cc8:	ldr	r2, [fp, #-12]
     ccc:	str	r2, [r3, #28]
     cd0:	ldr	r3, [fp, #-12]
     cd4:	ldr	r3, [r3, #4]
     cd8:	add	r2, r3, #1
     cdc:	ldr	r3, [fp, #-12]
     ce0:	str	r2, [r3, #4]
     ce4:	mov	r3, #0
     ce8:	mov	r0, r3
     cec:	sub	sp, fp, #4
     cf0:	pop	{fp, pc}
     cf4:	.word	0x00000978
     cf8:	.word	0x00000162
     cfc:	.word	0x00000000
     d00:	.word	0x000003e8
     d04:	.word	0x000003fc
     d08:	.word	0xfffffe70

00000d0c <coda_product_definition_add_detection_rule>:
     d0c:	push	{fp, lr}
     d10:	add	fp, sp, #4
     d14:	sub	sp, sp, #24
     d18:	str	r0, [fp, #-16]
     d1c:	str	r1, [fp, #-20]	; 0xffffffec
     d20:	ldr	r3, [fp, #-20]	; 0xffffffec
     d24:	ldr	r3, [r3]
     d28:	cmp	r3, #0
     d2c:	bne	d50 <coda_product_definition_add_detection_rule+0x44>
     d30:	ldr	r3, [fp, #-16]
     d34:	ldr	r3, [r3, #8]
     d38:	mov	r2, r3
     d3c:	ldr	r1, [pc, #236]	; e30 <coda_product_definition_add_detection_rule+0x124>
     d40:	ldr	r0, [pc, #236]	; e34 <coda_product_definition_add_detection_rule+0x128>
     d44:	bl	0 <coda_set_error>
     d48:	mvn	r3, #0
     d4c:	b	e24 <coda_product_definition_add_detection_rule+0x118>
     d50:	ldr	r3, [fp, #-20]	; 0xffffffec
     d54:	ldr	r2, [fp, #-16]
     d58:	str	r2, [r3, #8]
     d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
     d60:	bl	2950 <data_dictionary_add_detection_rule>
     d64:	mov	r3, r0
     d68:	cmp	r3, #0
     d6c:	beq	d78 <coda_product_definition_add_detection_rule+0x6c>
     d70:	mvn	r3, #0
     d74:	b	e24 <coda_product_definition_add_detection_rule+0x118>
     d78:	ldr	r3, [fp, #-16]
     d7c:	ldr	r2, [r3, #20]
     d80:	ldr	r3, [fp, #-16]
     d84:	ldr	r3, [r3, #16]
     d88:	add	r3, r3, #1
     d8c:	lsl	r3, r3, #2
     d90:	mov	r1, r3
     d94:	mov	r0, r2
     d98:	bl	0 <realloc>
     d9c:	str	r0, [fp, #-8]
     da0:	ldr	r3, [fp, #-8]
     da4:	cmp	r3, #0
     da8:	bne	ddc <coda_product_definition_add_detection_rule+0xd0>
     dac:	ldr	r3, [fp, #-16]
     db0:	ldr	r3, [r3, #16]
     db4:	add	r3, r3, #1
     db8:	lsl	r2, r3, #2
     dbc:	ldr	r3, [pc, #116]	; e38 <coda_product_definition_add_detection_rule+0x12c>
     dc0:	str	r3, [sp]
     dc4:	ldr	r3, [pc, #112]	; e3c <coda_product_definition_add_detection_rule+0x130>
     dc8:	ldr	r1, [pc, #112]	; e40 <coda_product_definition_add_detection_rule+0x134>
     dcc:	mvn	r0, #0
     dd0:	bl	0 <coda_set_error>
     dd4:	mvn	r3, #0
     dd8:	b	e24 <coda_product_definition_add_detection_rule+0x118>
     ddc:	ldr	r3, [fp, #-16]
     de0:	ldr	r2, [fp, #-8]
     de4:	str	r2, [r3, #20]
     de8:	ldr	r3, [fp, #-16]
     dec:	ldr	r3, [r3, #16]
     df0:	add	r2, r3, #1
     df4:	ldr	r3, [fp, #-16]
     df8:	str	r2, [r3, #16]
     dfc:	ldr	r3, [fp, #-16]
     e00:	ldr	r2, [r3, #20]
     e04:	ldr	r3, [fp, #-16]
     e08:	ldr	r3, [r3, #16]
     e0c:	sub	r3, r3, #-1073741823	; 0xc0000001
     e10:	lsl	r3, r3, #2
     e14:	add	r3, r2, r3
     e18:	ldr	r2, [fp, #-20]	; 0xffffffec
     e1c:	str	r2, [r3]
     e20:	mov	r3, #0
     e24:	mov	r0, r3
     e28:	sub	sp, fp, #4
     e2c:	pop	{fp, pc}
     e30:	.word	0x00000428
     e34:	.word	0xfffffe70
     e38:	.word	0x00000186
     e3c:	.word	0x00000000
     e40:	.word	0x000000b0

00000e44 <coda_product_definition_add_product_variable>:
     e44:	push	{fp, lr}
     e48:	add	fp, sp, #4
     e4c:	sub	sp, sp, #24
     e50:	str	r0, [fp, #-16]
     e54:	str	r1, [fp, #-20]	; 0xffffffec
     e58:	ldr	r3, [fp, #-16]
     e5c:	ldr	r2, [r3, #40]	; 0x28
     e60:	ldr	r3, [fp, #-20]	; 0xffffffec
     e64:	ldr	r3, [r3]
     e68:	mov	r1, r3
     e6c:	mov	r0, r2
     e70:	bl	0 <coda_hashtable_add_name>
     e74:	mov	r3, r0
     e78:	cmp	r3, #0
     e7c:	beq	ea4 <coda_product_definition_add_product_variable+0x60>
     e80:	ldr	r3, [fp, #-20]	; 0xffffffec
     e84:	ldr	r2, [r3]
     e88:	ldr	r3, [fp, #-16]
     e8c:	ldr	r3, [r3, #8]
     e90:	ldr	r1, [pc, #216]	; f70 <coda_product_definition_add_product_variable+0x12c>
     e94:	ldr	r0, [pc, #216]	; f74 <coda_product_definition_add_product_variable+0x130>
     e98:	bl	0 <coda_set_error>
     e9c:	mvn	r3, #0
     ea0:	b	f64 <coda_product_definition_add_product_variable+0x120>
     ea4:	ldr	r3, [fp, #-16]
     ea8:	ldr	r3, [r3, #32]
     eac:	and	r3, r3, #15
     eb0:	cmp	r3, #0
     eb4:	bne	f28 <coda_product_definition_add_product_variable+0xe4>
     eb8:	ldr	r3, [fp, #-16]
     ebc:	ldr	r2, [r3, #36]	; 0x24
     ec0:	ldr	r3, [fp, #-16]
     ec4:	ldr	r3, [r3, #32]
     ec8:	add	r3, r3, #16
     ecc:	lsl	r3, r3, #2
     ed0:	mov	r1, r3
     ed4:	mov	r0, r2
     ed8:	bl	0 <realloc>
     edc:	str	r0, [fp, #-8]
     ee0:	ldr	r3, [fp, #-8]
     ee4:	cmp	r3, #0
     ee8:	bne	f1c <coda_product_definition_add_product_variable+0xd8>
     eec:	ldr	r3, [fp, #-16]
     ef0:	ldr	r3, [r3, #32]
     ef4:	add	r3, r3, #16
     ef8:	lsl	r2, r3, #2
     efc:	mov	r3, #420	; 0x1a4
     f00:	str	r3, [sp]
     f04:	ldr	r3, [pc, #108]	; f78 <coda_product_definition_add_product_variable+0x134>
     f08:	ldr	r1, [pc, #108]	; f7c <coda_product_definition_add_product_variable+0x138>
     f0c:	mvn	r0, #0
     f10:	bl	0 <coda_set_error>
     f14:	mvn	r3, #0
     f18:	b	f64 <coda_product_definition_add_product_variable+0x120>
     f1c:	ldr	r3, [fp, #-16]
     f20:	ldr	r2, [fp, #-8]
     f24:	str	r2, [r3, #36]	; 0x24
     f28:	ldr	r3, [fp, #-16]
     f2c:	ldr	r3, [r3, #32]
     f30:	add	r2, r3, #1
     f34:	ldr	r3, [fp, #-16]
     f38:	str	r2, [r3, #32]
     f3c:	ldr	r3, [fp, #-16]
     f40:	ldr	r2, [r3, #36]	; 0x24
     f44:	ldr	r3, [fp, #-16]
     f48:	ldr	r3, [r3, #32]
     f4c:	sub	r3, r3, #-1073741823	; 0xc0000001
     f50:	lsl	r3, r3, #2
     f54:	add	r3, r2, r3
     f58:	ldr	r2, [fp, #-20]	; 0xffffffec
     f5c:	str	r2, [r3]
     f60:	mov	r3, #0
     f64:	mov	r0, r3
     f68:	sub	sp, fp, #4
     f6c:	pop	{fp, pc}
     f70:	.word	0x00000460
     f74:	.word	0xfffffe70
     f78:	.word	0x00000000
     f7c:	.word	0x000000b0

00000f80 <coda_product_definition_validate>:
     f80:	push	{fp, lr}
     f84:	add	fp, sp, #4
     f88:	sub	sp, sp, #8
     f8c:	str	r0, [fp, #-8]
     f90:	ldr	r3, [fp, #-8]
     f94:	ldr	r3, [r3]
     f98:	cmp	r3, #0
     f9c:	beq	fb0 <coda_product_definition_validate+0x30>
     fa0:	ldr	r3, [fp, #-8]
     fa4:	ldr	r3, [r3]
     fa8:	cmp	r3, #1
     fac:	bne	fd4 <coda_product_definition_validate+0x54>
     fb0:	ldr	r3, [fp, #-8]
     fb4:	ldr	r3, [r3, #28]
     fb8:	cmp	r3, #0
     fbc:	bne	fd4 <coda_product_definition_validate+0x54>
     fc0:	ldr	r1, [pc, #40]	; ff0 <coda_product_definition_validate+0x70>
     fc4:	ldr	r0, [pc, #40]	; ff4 <coda_product_definition_validate+0x74>
     fc8:	bl	0 <coda_set_error>
     fcc:	mvn	r3, #0
     fd0:	b	fe4 <coda_product_definition_validate+0x64>
     fd4:	ldr	r3, [fp, #-8]
     fd8:	mov	r2, #1
     fdc:	str	r2, [r3, #24]
     fe0:	mov	r3, #0
     fe4:	mov	r0, r3
     fe8:	sub	sp, fp, #4
     fec:	pop	{fp, pc}
     ff0:	.word	0x00000498
     ff4:	.word	0xfffffe70

00000ff8 <coda_product_type_delete>:
     ff8:	push	{fp, lr}
     ffc:	add	fp, sp, #4
    1000:	sub	sp, sp, #16
    1004:	str	r0, [fp, #-16]
    1008:	ldr	r3, [fp, #-16]
    100c:	ldr	r3, [r3]
    1010:	cmp	r3, #0
    1014:	beq	1028 <coda_product_type_delete+0x30>
    1018:	ldr	r3, [fp, #-16]
    101c:	ldr	r3, [r3]
    1020:	mov	r0, r3
    1024:	bl	0 <free>
    1028:	ldr	r3, [fp, #-16]
    102c:	ldr	r3, [r3, #4]
    1030:	cmp	r3, #0
    1034:	beq	1048 <coda_product_type_delete+0x50>
    1038:	ldr	r3, [fp, #-16]
    103c:	ldr	r3, [r3, #4]
    1040:	mov	r0, r3
    1044:	bl	0 <free>
    1048:	ldr	r3, [fp, #-16]
    104c:	ldr	r3, [r3, #16]
    1050:	cmp	r3, #0
    1054:	beq	1068 <coda_product_type_delete+0x70>
    1058:	ldr	r3, [fp, #-16]
    105c:	ldr	r3, [r3, #16]
    1060:	mov	r0, r3
    1064:	bl	0 <coda_hashtable_delete>
    1068:	ldr	r3, [fp, #-16]
    106c:	ldr	r3, [r3, #12]
    1070:	cmp	r3, #0
    1074:	beq	10d4 <coda_product_type_delete+0xdc>
    1078:	mov	r3, #0
    107c:	str	r3, [fp, #-8]
    1080:	b	10b0 <coda_product_type_delete+0xb8>
    1084:	ldr	r3, [fp, #-16]
    1088:	ldr	r2, [r3, #12]
    108c:	ldr	r3, [fp, #-8]
    1090:	lsl	r3, r3, #2
    1094:	add	r3, r2, r3
    1098:	ldr	r3, [r3]
    109c:	mov	r0, r3
    10a0:	bl	864 <coda_product_definition_delete>
    10a4:	ldr	r3, [fp, #-8]
    10a8:	add	r3, r3, #1
    10ac:	str	r3, [fp, #-8]
    10b0:	ldr	r3, [fp, #-16]
    10b4:	ldr	r2, [r3, #8]
    10b8:	ldr	r3, [fp, #-8]
    10bc:	cmp	r2, r3
    10c0:	bgt	1084 <coda_product_type_delete+0x8c>
    10c4:	ldr	r3, [fp, #-16]
    10c8:	ldr	r3, [r3, #12]
    10cc:	mov	r0, r3
    10d0:	bl	0 <free>
    10d4:	ldr	r0, [fp, #-16]
    10d8:	bl	0 <free>
    10dc:	nop			; (mov r0, r0)
    10e0:	sub	sp, fp, #4
    10e4:	pop	{fp, pc}

000010e8 <coda_product_type_new>:
    10e8:	push	{fp, lr}
    10ec:	add	fp, sp, #4
    10f0:	sub	sp, sp, #24
    10f4:	str	r0, [fp, #-16]
    10f8:	mov	r0, #24
    10fc:	bl	0 <malloc>
    1100:	mov	r3, r0
    1104:	str	r3, [fp, #-8]
    1108:	ldr	r3, [fp, #-8]
    110c:	cmp	r3, #0
    1110:	bne	1138 <coda_product_type_new+0x50>
    1114:	ldr	r3, [pc, #252]	; 1218 <coda_product_type_new+0x130>
    1118:	str	r3, [sp]
    111c:	ldr	r3, [pc, #248]	; 121c <coda_product_type_new+0x134>
    1120:	mov	r2, #24
    1124:	ldr	r1, [pc, #244]	; 1220 <coda_product_type_new+0x138>
    1128:	mvn	r0, #0
    112c:	bl	0 <coda_set_error>
    1130:	mov	r3, #0
    1134:	b	120c <coda_product_type_new+0x124>
    1138:	ldr	r3, [fp, #-8]
    113c:	mov	r2, #0
    1140:	str	r2, [r3]
    1144:	ldr	r3, [fp, #-8]
    1148:	mov	r2, #0
    114c:	str	r2, [r3, #4]
    1150:	ldr	r3, [fp, #-8]
    1154:	mov	r2, #0
    1158:	str	r2, [r3, #8]
    115c:	ldr	r3, [fp, #-8]
    1160:	mov	r2, #0
    1164:	str	r2, [r3, #16]
    1168:	ldr	r3, [fp, #-8]
    116c:	mov	r2, #0
    1170:	str	r2, [r3, #12]
    1174:	ldr	r0, [fp, #-16]
    1178:	bl	0 <strdup>
    117c:	mov	r3, r0
    1180:	mov	r2, r3
    1184:	ldr	r3, [fp, #-8]
    1188:	str	r2, [r3]
    118c:	ldr	r3, [fp, #-8]
    1190:	ldr	r3, [r3]
    1194:	cmp	r3, #0
    1198:	bne	11c0 <coda_product_type_new+0xd8>
    119c:	ldr	r3, [pc, #128]	; 1224 <coda_product_type_new+0x13c>
    11a0:	ldr	r2, [pc, #116]	; 121c <coda_product_type_new+0x134>
    11a4:	ldr	r1, [pc, #124]	; 1228 <coda_product_type_new+0x140>
    11a8:	mvn	r0, #0
    11ac:	bl	0 <coda_set_error>
    11b0:	ldr	r0, [fp, #-8]
    11b4:	bl	ff8 <coda_product_type_delete>
    11b8:	mov	r3, #0
    11bc:	b	120c <coda_product_type_new+0x124>
    11c0:	mov	r0, #1
    11c4:	bl	0 <coda_hashtable_new>
    11c8:	mov	r2, r0
    11cc:	ldr	r3, [fp, #-8]
    11d0:	str	r2, [r3, #16]
    11d4:	ldr	r3, [fp, #-8]
    11d8:	ldr	r3, [r3, #16]
    11dc:	cmp	r3, #0
    11e0:	bne	1208 <coda_product_type_new+0x120>
    11e4:	mov	r3, #504	; 0x1f8
    11e8:	ldr	r2, [pc, #44]	; 121c <coda_product_type_new+0x134>
    11ec:	ldr	r1, [pc, #56]	; 122c <coda_product_type_new+0x144>
    11f0:	mvn	r0, #0
    11f4:	bl	0 <coda_set_error>
    11f8:	ldr	r0, [fp, #-8]
    11fc:	bl	ff8 <coda_product_type_delete>
    1200:	mov	r3, #0
    1204:	b	120c <coda_product_type_new+0x124>
    1208:	ldr	r3, [fp, #-8]
    120c:	mov	r0, r3
    1210:	sub	sp, fp, #4
    1214:	pop	{fp, pc}
    1218:	.word	0x000001e2
    121c:	.word	0x00000000
    1220:	.word	0x000000b0
    1224:	.word	0x000001ef
    1228:	.word	0x000000e8
    122c:	.word	0x00000384

00001230 <coda_product_type_set_description>:
    1230:	push	{fp, lr}
    1234:	add	fp, sp, #4
    1238:	sub	sp, sp, #16
    123c:	str	r0, [fp, #-16]
    1240:	str	r1, [fp, #-20]	; 0xffffffec
    1244:	mov	r3, #0
    1248:	str	r3, [fp, #-8]
    124c:	ldr	r3, [fp, #-16]
    1250:	ldr	r3, [r3, #4]
    1254:	cmp	r3, #0
    1258:	beq	1270 <coda_product_type_set_description+0x40>
    125c:	ldr	r1, [pc, #108]	; 12d0 <coda_product_type_set_description+0xa0>
    1260:	ldr	r0, [pc, #108]	; 12d4 <coda_product_type_set_description+0xa4>
    1264:	bl	0 <coda_set_error>
    1268:	mvn	r3, #0
    126c:	b	12c4 <coda_product_type_set_description+0x94>
    1270:	ldr	r3, [fp, #-20]	; 0xffffffec
    1274:	cmp	r3, #0
    1278:	beq	12b4 <coda_product_type_set_description+0x84>
    127c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1280:	bl	0 <strdup>
    1284:	mov	r3, r0
    1288:	str	r3, [fp, #-8]
    128c:	ldr	r3, [fp, #-8]
    1290:	cmp	r3, #0
    1294:	bne	12b4 <coda_product_type_set_description+0x84>
    1298:	ldr	r3, [pc, #56]	; 12d8 <coda_product_type_set_description+0xa8>
    129c:	ldr	r2, [pc, #56]	; 12dc <coda_product_type_set_description+0xac>
    12a0:	ldr	r1, [pc, #56]	; 12e0 <coda_product_type_set_description+0xb0>
    12a4:	mvn	r0, #0
    12a8:	bl	0 <coda_set_error>
    12ac:	mvn	r3, #0
    12b0:	b	12c4 <coda_product_type_set_description+0x94>
    12b4:	ldr	r3, [fp, #-16]
    12b8:	ldr	r2, [fp, #-8]
    12bc:	str	r2, [r3, #4]
    12c0:	mov	r3, #0
    12c4:	mov	r0, r3
    12c8:	sub	sp, fp, #4
    12cc:	pop	{fp, pc}
    12d0:	.word	0x000004d0
    12d4:	.word	0xfffffe70
    12d8:	.word	0x0000020f
    12dc:	.word	0x00000000
    12e0:	.word	0x000000e8

000012e4 <coda_product_type_add_product_definition>:
    12e4:	push	{fp, lr}
    12e8:	add	fp, sp, #4
    12ec:	sub	sp, sp, #24
    12f0:	str	r0, [fp, #-16]
    12f4:	str	r1, [fp, #-20]	; 0xffffffec
    12f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    12fc:	ldr	r3, [r3, #44]	; 0x2c
    1300:	cmp	r3, #0
    1304:	beq	1340 <coda_product_type_add_product_definition+0x5c>
    1308:	ldr	r3, [fp, #-20]	; 0xffffffec
    130c:	ldr	r2, [r3, #8]
    1310:	ldr	r3, [fp, #-20]	; 0xffffffec
    1314:	ldr	r3, [r3, #44]	; 0x2c
    1318:	ldr	r1, [r3]
    131c:	ldr	r3, [fp, #-16]
    1320:	ldr	r3, [r3]
    1324:	str	r3, [sp]
    1328:	mov	r3, r1
    132c:	ldr	r1, [pc, #428]	; 14e0 <coda_product_type_add_product_definition+0x1fc>
    1330:	ldr	r0, [pc, #428]	; 14e4 <coda_product_type_add_product_definition+0x200>
    1334:	bl	0 <coda_set_error>
    1338:	mvn	r3, #0
    133c:	b	14d4 <coda_product_type_add_product_definition+0x1f0>
    1340:	mov	r3, #0
    1344:	str	r3, [fp, #-8]
    1348:	b	13a8 <coda_product_type_add_product_definition+0xc4>
    134c:	ldr	r3, [fp, #-16]
    1350:	ldr	r2, [r3, #12]
    1354:	ldr	r3, [fp, #-8]
    1358:	lsl	r3, r3, #2
    135c:	add	r3, r2, r3
    1360:	ldr	r3, [r3]
    1364:	ldr	r2, [r3, #4]
    1368:	ldr	r3, [fp, #-20]	; 0xffffffec
    136c:	ldr	r3, [r3, #4]
    1370:	cmp	r2, r3
    1374:	bne	139c <coda_product_type_add_product_definition+0xb8>
    1378:	ldr	r3, [fp, #-20]	; 0xffffffec
    137c:	ldr	r2, [r3, #4]
    1380:	ldr	r3, [fp, #-16]
    1384:	ldr	r3, [r3]
    1388:	ldr	r1, [pc, #344]	; 14e8 <coda_product_type_add_product_definition+0x204>
    138c:	ldr	r0, [pc, #336]	; 14e4 <coda_product_type_add_product_definition+0x200>
    1390:	bl	0 <coda_set_error>
    1394:	mvn	r3, #0
    1398:	b	14d4 <coda_product_type_add_product_definition+0x1f0>
    139c:	ldr	r3, [fp, #-8]
    13a0:	add	r3, r3, #1
    13a4:	str	r3, [fp, #-8]
    13a8:	ldr	r3, [fp, #-16]
    13ac:	ldr	r2, [r3, #8]
    13b0:	ldr	r3, [fp, #-8]
    13b4:	cmp	r2, r3
    13b8:	bgt	134c <coda_product_type_add_product_definition+0x68>
    13bc:	ldr	r3, [fp, #-16]
    13c0:	ldr	r2, [r3, #16]
    13c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    13c8:	ldr	r3, [r3, #8]
    13cc:	mov	r1, r3
    13d0:	mov	r0, r2
    13d4:	bl	0 <coda_hashtable_add_name>
    13d8:	mov	r3, r0
    13dc:	cmp	r3, #0
    13e0:	beq	1408 <coda_product_type_add_product_definition+0x124>
    13e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    13e8:	ldr	r2, [r3, #8]
    13ec:	ldr	r3, [fp, #-16]
    13f0:	ldr	r3, [r3]
    13f4:	ldr	r1, [pc, #240]	; 14ec <coda_product_type_add_product_definition+0x208>
    13f8:	ldr	r0, [pc, #228]	; 14e4 <coda_product_type_add_product_definition+0x200>
    13fc:	bl	0 <coda_set_error>
    1400:	mvn	r3, #0
    1404:	b	14d4 <coda_product_type_add_product_definition+0x1f0>
    1408:	ldr	r3, [fp, #-16]
    140c:	ldr	r3, [r3, #8]
    1410:	and	r3, r3, #15
    1414:	cmp	r3, #0
    1418:	bne	148c <coda_product_type_add_product_definition+0x1a8>
    141c:	ldr	r3, [fp, #-16]
    1420:	ldr	r2, [r3, #12]
    1424:	ldr	r3, [fp, #-16]
    1428:	ldr	r3, [r3, #8]
    142c:	add	r3, r3, #16
    1430:	lsl	r3, r3, #2
    1434:	mov	r1, r3
    1438:	mov	r0, r2
    143c:	bl	0 <realloc>
    1440:	str	r0, [fp, #-12]
    1444:	ldr	r3, [fp, #-12]
    1448:	cmp	r3, #0
    144c:	bne	1480 <coda_product_type_add_product_definition+0x19c>
    1450:	ldr	r3, [fp, #-16]
    1454:	ldr	r3, [r3, #8]
    1458:	add	r3, r3, #16
    145c:	lsl	r2, r3, #2
    1460:	ldr	r3, [pc, #136]	; 14f0 <coda_product_type_add_product_definition+0x20c>
    1464:	str	r3, [sp]
    1468:	ldr	r3, [pc, #132]	; 14f4 <coda_product_type_add_product_definition+0x210>
    146c:	ldr	r1, [pc, #132]	; 14f8 <coda_product_type_add_product_definition+0x214>
    1470:	mvn	r0, #0
    1474:	bl	0 <coda_set_error>
    1478:	mvn	r3, #0
    147c:	b	14d4 <coda_product_type_add_product_definition+0x1f0>
    1480:	ldr	r3, [fp, #-16]
    1484:	ldr	r2, [fp, #-12]
    1488:	str	r2, [r3, #12]
    148c:	ldr	r3, [fp, #-16]
    1490:	ldr	r3, [r3, #8]
    1494:	add	r2, r3, #1
    1498:	ldr	r3, [fp, #-16]
    149c:	str	r2, [r3, #8]
    14a0:	ldr	r3, [fp, #-16]
    14a4:	ldr	r2, [r3, #12]
    14a8:	ldr	r3, [fp, #-16]
    14ac:	ldr	r3, [r3, #8]
    14b0:	sub	r3, r3, #-1073741823	; 0xc0000001
    14b4:	lsl	r3, r3, #2
    14b8:	add	r3, r2, r3
    14bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    14c0:	str	r2, [r3]
    14c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    14c8:	ldr	r2, [fp, #-16]
    14cc:	str	r2, [r3, #44]	; 0x2c
    14d0:	mov	r3, #0
    14d4:	mov	r0, r3
    14d8:	sub	sp, fp, #4
    14dc:	pop	{fp, pc}
    14e0:	.word	0x000004f8
    14e4:	.word	0xfffffe70
    14e8:	.word	0x00000548
    14ec:	.word	0x00000590
    14f0:	.word	0x0000023e
    14f4:	.word	0x00000000
    14f8:	.word	0x000000b0

000014fc <coda_product_type_get_product_definition_by_version>:
    14fc:	push	{fp, lr}
    1500:	add	fp, sp, #4
    1504:	sub	sp, sp, #16
    1508:	str	r0, [fp, #-16]
    150c:	str	r1, [fp, #-20]	; 0xffffffec
    1510:	mov	r3, #0
    1514:	str	r3, [fp, #-8]
    1518:	b	156c <coda_product_type_get_product_definition_by_version+0x70>
    151c:	ldr	r3, [fp, #-16]
    1520:	ldr	r2, [r3, #12]
    1524:	ldr	r3, [fp, #-8]
    1528:	lsl	r3, r3, #2
    152c:	add	r3, r2, r3
    1530:	ldr	r3, [r3]
    1534:	ldr	r2, [r3, #4]
    1538:	ldr	r3, [fp, #-20]	; 0xffffffec
    153c:	cmp	r2, r3
    1540:	bne	1560 <coda_product_type_get_product_definition_by_version+0x64>
    1544:	ldr	r3, [fp, #-16]
    1548:	ldr	r2, [r3, #12]
    154c:	ldr	r3, [fp, #-8]
    1550:	lsl	r3, r3, #2
    1554:	add	r3, r2, r3
    1558:	ldr	r3, [r3]
    155c:	b	159c <coda_product_type_get_product_definition_by_version+0xa0>
    1560:	ldr	r3, [fp, #-8]
    1564:	add	r3, r3, #1
    1568:	str	r3, [fp, #-8]
    156c:	ldr	r3, [fp, #-16]
    1570:	ldr	r2, [r3, #8]
    1574:	ldr	r3, [fp, #-8]
    1578:	cmp	r2, r3
    157c:	bgt	151c <coda_product_type_get_product_definition_by_version+0x20>
    1580:	ldr	r3, [fp, #-16]
    1584:	ldr	r2, [r3]
    1588:	ldr	r3, [fp, #-20]	; 0xffffffec
    158c:	ldr	r1, [pc, #20]	; 15a8 <coda_product_type_get_product_definition_by_version+0xac>
    1590:	ldr	r0, [pc, #20]	; 15ac <coda_product_type_get_product_definition_by_version+0xb0>
    1594:	bl	0 <coda_set_error>
    1598:	mov	r3, #0
    159c:	mov	r0, r3
    15a0:	sub	sp, fp, #4
    15a4:	pop	{fp, pc}
    15a8:	.word	0x000005c4
    15ac:	.word	0xfffffe70

000015b0 <coda_product_type_get_latest_product_definition>:
    15b0:	push	{fp, lr}
    15b4:	add	fp, sp, #4
    15b8:	sub	sp, sp, #24
    15bc:	str	r0, [fp, #-24]	; 0xffffffe8
    15c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15c4:	ldr	r3, [r3, #8]
    15c8:	cmp	r3, #0
    15cc:	bne	15f0 <coda_product_type_get_latest_product_definition+0x40>
    15d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15d4:	ldr	r3, [r3]
    15d8:	mov	r2, r3
    15dc:	ldr	r1, [pc, #200]	; 16ac <coda_product_type_get_latest_product_definition+0xfc>
    15e0:	ldr	r0, [pc, #200]	; 16b0 <coda_product_type_get_latest_product_definition+0x100>
    15e4:	bl	0 <coda_set_error>
    15e8:	mov	r3, #0
    15ec:	b	16a0 <coda_product_type_get_latest_product_definition+0xf0>
    15f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15f4:	ldr	r3, [r3, #12]
    15f8:	ldr	r3, [r3]
    15fc:	ldr	r3, [r3, #4]
    1600:	str	r3, [fp, #-8]
    1604:	mov	r3, #0
    1608:	str	r3, [fp, #-12]
    160c:	mov	r3, #1
    1610:	str	r3, [fp, #-16]
    1614:	b	1674 <coda_product_type_get_latest_product_definition+0xc4>
    1618:	ldr	r3, [fp, #-24]	; 0xffffffe8
    161c:	ldr	r2, [r3, #12]
    1620:	ldr	r3, [fp, #-16]
    1624:	lsl	r3, r3, #2
    1628:	add	r3, r2, r3
    162c:	ldr	r3, [r3]
    1630:	ldr	r2, [r3, #4]
    1634:	ldr	r3, [fp, #-8]
    1638:	cmp	r2, r3
    163c:	ble	1668 <coda_product_type_get_latest_product_definition+0xb8>
    1640:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1644:	ldr	r2, [r3, #12]
    1648:	ldr	r3, [fp, #-16]
    164c:	lsl	r3, r3, #2
    1650:	add	r3, r2, r3
    1654:	ldr	r3, [r3]
    1658:	ldr	r3, [r3, #4]
    165c:	str	r3, [fp, #-8]
    1660:	ldr	r3, [fp, #-16]
    1664:	str	r3, [fp, #-12]
    1668:	ldr	r3, [fp, #-16]
    166c:	add	r3, r3, #1
    1670:	str	r3, [fp, #-16]
    1674:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1678:	ldr	r2, [r3, #8]
    167c:	ldr	r3, [fp, #-16]
    1680:	cmp	r2, r3
    1684:	bgt	1618 <coda_product_type_get_latest_product_definition+0x68>
    1688:	ldr	r3, [fp, #-24]	; 0xffffffe8
    168c:	ldr	r2, [r3, #12]
    1690:	ldr	r3, [fp, #-12]
    1694:	lsl	r3, r3, #2
    1698:	add	r3, r2, r3
    169c:	ldr	r3, [r3]
    16a0:	mov	r0, r3
    16a4:	sub	sp, fp, #4
    16a8:	pop	{fp, pc}
    16ac:	.word	0x00000604
    16b0:	.word	0xfffffe70

000016b4 <coda_product_class_delete>:
    16b4:	push	{fp, lr}
    16b8:	add	fp, sp, #4
    16bc:	sub	sp, sp, #16
    16c0:	str	r0, [fp, #-16]
    16c4:	ldr	r3, [fp, #-16]
    16c8:	ldr	r3, [r3]
    16cc:	cmp	r3, #0
    16d0:	beq	16e4 <coda_product_class_delete+0x30>
    16d4:	ldr	r3, [fp, #-16]
    16d8:	ldr	r3, [r3]
    16dc:	mov	r0, r3
    16e0:	bl	0 <free>
    16e4:	ldr	r3, [fp, #-16]
    16e8:	ldr	r3, [r3, #4]
    16ec:	cmp	r3, #0
    16f0:	beq	1704 <coda_product_class_delete+0x50>
    16f4:	ldr	r3, [fp, #-16]
    16f8:	ldr	r3, [r3, #4]
    16fc:	mov	r0, r3
    1700:	bl	0 <free>
    1704:	ldr	r3, [fp, #-16]
    1708:	ldr	r3, [r3, #8]
    170c:	cmp	r3, #0
    1710:	beq	1724 <coda_product_class_delete+0x70>
    1714:	ldr	r3, [fp, #-16]
    1718:	ldr	r3, [r3, #8]
    171c:	mov	r0, r3
    1720:	bl	0 <free>
    1724:	ldr	r3, [fp, #-16]
    1728:	ldr	r3, [r3, #24]
    172c:	cmp	r3, #0
    1730:	beq	1744 <coda_product_class_delete+0x90>
    1734:	ldr	r3, [fp, #-16]
    1738:	ldr	r3, [r3, #24]
    173c:	mov	r0, r3
    1740:	bl	0 <coda_hashtable_delete>
    1744:	ldr	r3, [fp, #-16]
    1748:	ldr	r3, [r3, #36]	; 0x24
    174c:	cmp	r3, #0
    1750:	beq	1764 <coda_product_class_delete+0xb0>
    1754:	ldr	r3, [fp, #-16]
    1758:	ldr	r3, [r3, #36]	; 0x24
    175c:	mov	r0, r3
    1760:	bl	0 <coda_hashtable_delete>
    1764:	ldr	r3, [fp, #-16]
    1768:	ldr	r3, [r3, #20]
    176c:	cmp	r3, #0
    1770:	beq	17d0 <coda_product_class_delete+0x11c>
    1774:	mov	r3, #0
    1778:	str	r3, [fp, #-8]
    177c:	b	17ac <coda_product_class_delete+0xf8>
    1780:	ldr	r3, [fp, #-16]
    1784:	ldr	r2, [r3, #20]
    1788:	ldr	r3, [fp, #-8]
    178c:	lsl	r3, r3, #2
    1790:	add	r3, r2, r3
    1794:	ldr	r3, [r3]
    1798:	mov	r0, r3
    179c:	bl	0 <coda_type_release>
    17a0:	ldr	r3, [fp, #-8]
    17a4:	add	r3, r3, #1
    17a8:	str	r3, [fp, #-8]
    17ac:	ldr	r3, [fp, #-16]
    17b0:	ldr	r2, [r3, #16]
    17b4:	ldr	r3, [fp, #-8]
    17b8:	cmp	r2, r3
    17bc:	bgt	1780 <coda_product_class_delete+0xcc>
    17c0:	ldr	r3, [fp, #-16]
    17c4:	ldr	r3, [r3, #20]
    17c8:	mov	r0, r3
    17cc:	bl	0 <free>
    17d0:	ldr	r3, [fp, #-16]
    17d4:	ldr	r3, [r3, #32]
    17d8:	cmp	r3, #0
    17dc:	beq	183c <coda_product_class_delete+0x188>
    17e0:	mov	r3, #0
    17e4:	str	r3, [fp, #-8]
    17e8:	b	1818 <coda_product_class_delete+0x164>
    17ec:	ldr	r3, [fp, #-16]
    17f0:	ldr	r2, [r3, #32]
    17f4:	ldr	r3, [fp, #-8]
    17f8:	lsl	r3, r3, #2
    17fc:	add	r3, r2, r3
    1800:	ldr	r3, [r3]
    1804:	mov	r0, r3
    1808:	bl	ff8 <coda_product_type_delete>
    180c:	ldr	r3, [fp, #-8]
    1810:	add	r3, r3, #1
    1814:	str	r3, [fp, #-8]
    1818:	ldr	r3, [fp, #-16]
    181c:	ldr	r2, [r3, #28]
    1820:	ldr	r3, [fp, #-8]
    1824:	cmp	r2, r3
    1828:	bgt	17ec <coda_product_class_delete+0x138>
    182c:	ldr	r3, [fp, #-16]
    1830:	ldr	r3, [r3, #32]
    1834:	mov	r0, r3
    1838:	bl	0 <free>
    183c:	ldr	r0, [fp, #-16]
    1840:	bl	0 <free>
    1844:	nop			; (mov r0, r0)
    1848:	sub	sp, fp, #4
    184c:	pop	{fp, pc}

00001850 <coda_product_class_new>:
    1850:	push	{fp, lr}
    1854:	add	fp, sp, #4
    1858:	sub	sp, sp, #16
    185c:	str	r0, [fp, #-16]
    1860:	ldr	r0, [fp, #-16]
    1864:	bl	0 <coda_is_identifier>
    1868:	mov	r3, r0
    186c:	cmp	r3, #0
    1870:	bne	188c <coda_product_class_new+0x3c>
    1874:	ldr	r2, [fp, #-16]
    1878:	ldr	r1, [pc, #416]	; 1a20 <coda_product_class_new+0x1d0>
    187c:	ldr	r0, [pc, #416]	; 1a24 <coda_product_class_new+0x1d4>
    1880:	bl	0 <coda_set_error>
    1884:	mov	r3, #0
    1888:	b	1a14 <coda_product_class_new+0x1c4>
    188c:	mov	r0, #40	; 0x28
    1890:	bl	0 <malloc>
    1894:	mov	r3, r0
    1898:	str	r3, [fp, #-8]
    189c:	ldr	r3, [fp, #-8]
    18a0:	cmp	r3, #0
    18a4:	bne	18bc <coda_product_class_new+0x6c>
    18a8:	ldr	r3, [pc, #376]	; 1a28 <coda_product_class_new+0x1d8>
    18ac:	ldr	r2, [pc, #376]	; 1a2c <coda_product_class_new+0x1dc>
    18b0:	ldr	r1, [pc, #376]	; 1a30 <coda_product_class_new+0x1e0>
    18b4:	ldr	r0, [pc, #376]	; 1a34 <coda_product_class_new+0x1e4>
    18b8:	bl	0 <__assert_fail>
    18bc:	ldr	r3, [fp, #-8]
    18c0:	mov	r2, #0
    18c4:	str	r2, [r3]
    18c8:	ldr	r3, [fp, #-8]
    18cc:	mov	r2, #0
    18d0:	str	r2, [r3, #4]
    18d4:	ldr	r3, [fp, #-8]
    18d8:	mov	r2, #0
    18dc:	str	r2, [r3, #8]
    18e0:	ldr	r3, [fp, #-8]
    18e4:	mov	r2, #0
    18e8:	str	r2, [r3, #12]
    18ec:	ldr	r3, [fp, #-8]
    18f0:	mov	r2, #0
    18f4:	str	r2, [r3, #16]
    18f8:	ldr	r3, [fp, #-8]
    18fc:	mov	r2, #0
    1900:	str	r2, [r3, #20]
    1904:	ldr	r3, [fp, #-8]
    1908:	mov	r2, #0
    190c:	str	r2, [r3, #24]
    1910:	ldr	r3, [fp, #-8]
    1914:	mov	r2, #0
    1918:	str	r2, [r3, #28]
    191c:	ldr	r3, [fp, #-8]
    1920:	mov	r2, #0
    1924:	str	r2, [r3, #32]
    1928:	ldr	r3, [fp, #-8]
    192c:	mov	r2, #0
    1930:	str	r2, [r3, #36]	; 0x24
    1934:	ldr	r0, [fp, #-16]
    1938:	bl	0 <strdup>
    193c:	mov	r3, r0
    1940:	mov	r2, r3
    1944:	ldr	r3, [fp, #-8]
    1948:	str	r2, [r3]
    194c:	ldr	r3, [fp, #-8]
    1950:	ldr	r3, [r3]
    1954:	cmp	r3, #0
    1958:	bne	1980 <coda_product_class_new+0x130>
    195c:	ldr	r3, [pc, #212]	; 1a38 <coda_product_class_new+0x1e8>
    1960:	ldr	r2, [pc, #200]	; 1a30 <coda_product_class_new+0x1e0>
    1964:	ldr	r1, [pc, #208]	; 1a3c <coda_product_class_new+0x1ec>
    1968:	mvn	r0, #0
    196c:	bl	0 <coda_set_error>
    1970:	ldr	r0, [fp, #-8]
    1974:	bl	16b4 <coda_product_class_delete>
    1978:	mov	r3, #0
    197c:	b	1a14 <coda_product_class_new+0x1c4>
    1980:	mov	r0, #1
    1984:	bl	0 <coda_hashtable_new>
    1988:	mov	r2, r0
    198c:	ldr	r3, [fp, #-8]
    1990:	str	r2, [r3, #24]
    1994:	ldr	r3, [fp, #-8]
    1998:	ldr	r3, [r3, #24]
    199c:	cmp	r3, #0
    19a0:	bne	19c8 <coda_product_class_new+0x178>
    19a4:	ldr	r3, [pc, #148]	; 1a40 <coda_product_class_new+0x1f0>
    19a8:	ldr	r2, [pc, #128]	; 1a30 <coda_product_class_new+0x1e0>
    19ac:	ldr	r1, [pc, #144]	; 1a44 <coda_product_class_new+0x1f4>
    19b0:	mvn	r0, #0
    19b4:	bl	0 <coda_set_error>
    19b8:	ldr	r0, [fp, #-8]
    19bc:	bl	16b4 <coda_product_class_delete>
    19c0:	mov	r3, #0
    19c4:	b	1a14 <coda_product_class_new+0x1c4>
    19c8:	mov	r0, #1
    19cc:	bl	0 <coda_hashtable_new>
    19d0:	mov	r2, r0
    19d4:	ldr	r3, [fp, #-8]
    19d8:	str	r2, [r3, #36]	; 0x24
    19dc:	ldr	r3, [fp, #-8]
    19e0:	ldr	r3, [r3, #36]	; 0x24
    19e4:	cmp	r3, #0
    19e8:	bne	1a10 <coda_product_class_new+0x1c0>
    19ec:	mov	r3, #720	; 0x2d0
    19f0:	ldr	r2, [pc, #56]	; 1a30 <coda_product_class_new+0x1e0>
    19f4:	ldr	r1, [pc, #72]	; 1a44 <coda_product_class_new+0x1f4>
    19f8:	mvn	r0, #0
    19fc:	bl	0 <coda_set_error>
    1a00:	ldr	r0, [fp, #-8]
    1a04:	bl	16b4 <coda_product_class_delete>
    1a08:	mov	r3, #0
    1a0c:	b	1a14 <coda_product_class_new+0x1c4>
    1a10:	ldr	r3, [fp, #-8]
    1a14:	mov	r0, r3
    1a18:	sub	sp, fp, #4
    1a1c:	pop	{fp, pc}
    1a20:	.word	0x00000638
    1a24:	.word	0xfffffe70
    1a28:	.word	0x000009a0
    1a2c:	.word	0x000002ae
    1a30:	.word	0x00000000
    1a34:	.word	0x0000067c
    1a38:	.word	0x000002be
    1a3c:	.word	0x000000e8
    1a40:	.word	0x000002c7
    1a44:	.word	0x00000384

00001a48 <coda_product_class_set_description>:
    1a48:	push	{fp, lr}
    1a4c:	add	fp, sp, #4
    1a50:	sub	sp, sp, #16
    1a54:	str	r0, [fp, #-16]
    1a58:	str	r1, [fp, #-20]	; 0xffffffec
    1a5c:	mov	r3, #0
    1a60:	str	r3, [fp, #-8]
    1a64:	ldr	r3, [fp, #-16]
    1a68:	ldr	r3, [r3, #4]
    1a6c:	cmp	r3, #0
    1a70:	beq	1a88 <coda_product_class_set_description+0x40>
    1a74:	ldr	r1, [pc, #108]	; 1ae8 <coda_product_class_set_description+0xa0>
    1a78:	ldr	r0, [pc, #108]	; 1aec <coda_product_class_set_description+0xa4>
    1a7c:	bl	0 <coda_set_error>
    1a80:	mvn	r3, #0
    1a84:	b	1adc <coda_product_class_set_description+0x94>
    1a88:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a8c:	cmp	r3, #0
    1a90:	beq	1acc <coda_product_class_set_description+0x84>
    1a94:	ldr	r0, [fp, #-20]	; 0xffffffec
    1a98:	bl	0 <strdup>
    1a9c:	mov	r3, r0
    1aa0:	str	r3, [fp, #-8]
    1aa4:	ldr	r3, [fp, #-8]
    1aa8:	cmp	r3, #0
    1aac:	bne	1acc <coda_product_class_set_description+0x84>
    1ab0:	ldr	r3, [pc, #56]	; 1af0 <coda_product_class_set_description+0xa8>
    1ab4:	ldr	r2, [pc, #56]	; 1af4 <coda_product_class_set_description+0xac>
    1ab8:	ldr	r1, [pc, #56]	; 1af8 <coda_product_class_set_description+0xb0>
    1abc:	mvn	r0, #0
    1ac0:	bl	0 <coda_set_error>
    1ac4:	mvn	r3, #0
    1ac8:	b	1adc <coda_product_class_set_description+0x94>
    1acc:	ldr	r3, [fp, #-16]
    1ad0:	ldr	r2, [fp, #-8]
    1ad4:	str	r2, [r3, #4]
    1ad8:	mov	r3, #0
    1adc:	mov	r0, r3
    1ae0:	sub	sp, fp, #4
    1ae4:	pop	{fp, pc}
    1ae8:	.word	0x00000694
    1aec:	.word	0xfffffe70
    1af0:	.word	0x000002e7
    1af4:	.word	0x00000000
    1af8:	.word	0x000000e8

00001afc <coda_product_class_set_definition_file>:
    1afc:	push	{fp, lr}
    1b00:	add	fp, sp, #4
    1b04:	sub	sp, sp, #16
    1b08:	str	r0, [fp, #-16]
    1b0c:	str	r1, [fp, #-20]	; 0xffffffec
    1b10:	mov	r3, #0
    1b14:	str	r3, [fp, #-8]
    1b18:	ldr	r3, [fp, #-16]
    1b1c:	ldr	r3, [r3, #8]
    1b20:	cmp	r3, #0
    1b24:	beq	1b3c <coda_product_class_set_definition_file+0x40>
    1b28:	ldr	r1, [pc, #108]	; 1b9c <coda_product_class_set_definition_file+0xa0>
    1b2c:	ldr	r0, [pc, #108]	; 1ba0 <coda_product_class_set_definition_file+0xa4>
    1b30:	bl	0 <coda_set_error>
    1b34:	mvn	r3, #0
    1b38:	b	1b90 <coda_product_class_set_definition_file+0x94>
    1b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b40:	cmp	r3, #0
    1b44:	beq	1b80 <coda_product_class_set_definition_file+0x84>
    1b48:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b4c:	bl	0 <strdup>
    1b50:	mov	r3, r0
    1b54:	str	r3, [fp, #-8]
    1b58:	ldr	r3, [fp, #-8]
    1b5c:	cmp	r3, #0
    1b60:	bne	1b80 <coda_product_class_set_definition_file+0x84>
    1b64:	ldr	r3, [pc, #56]	; 1ba4 <coda_product_class_set_definition_file+0xa8>
    1b68:	ldr	r2, [pc, #56]	; 1ba8 <coda_product_class_set_definition_file+0xac>
    1b6c:	ldr	r1, [pc, #56]	; 1bac <coda_product_class_set_definition_file+0xb0>
    1b70:	mvn	r0, #0
    1b74:	bl	0 <coda_set_error>
    1b78:	mvn	r3, #0
    1b7c:	b	1b90 <coda_product_class_set_definition_file+0x94>
    1b80:	ldr	r3, [fp, #-16]
    1b84:	ldr	r2, [fp, #-8]
    1b88:	str	r2, [r3, #8]
    1b8c:	mov	r3, #0
    1b90:	mov	r0, r3
    1b94:	sub	sp, fp, #4
    1b98:	pop	{fp, pc}
    1b9c:	.word	0x000006bc
    1ba0:	.word	0xfffffe70
    1ba4:	.word	0x000002ff
    1ba8:	.word	0x00000000
    1bac:	.word	0x000000e8

00001bb0 <coda_product_class_set_revision>:
    1bb0:	push	{fp}		; (str fp, [sp, #-4]!)
    1bb4:	add	fp, sp, #0
    1bb8:	sub	sp, sp, #12
    1bbc:	str	r0, [fp, #-8]
    1bc0:	str	r1, [fp, #-12]
    1bc4:	ldr	r3, [fp, #-8]
    1bc8:	ldr	r2, [fp, #-12]
    1bcc:	str	r2, [r3, #12]
    1bd0:	mov	r3, #0
    1bd4:	mov	r0, r3
    1bd8:	add	sp, fp, #0
    1bdc:	pop	{fp}		; (ldr fp, [sp], #4)
    1be0:	bx	lr

00001be4 <coda_product_class_add_product_type>:
    1be4:	push	{fp, lr}
    1be8:	add	fp, sp, #4
    1bec:	sub	sp, sp, #24
    1bf0:	str	r0, [fp, #-16]
    1bf4:	str	r1, [fp, #-20]	; 0xffffffec
    1bf8:	ldr	r3, [fp, #-16]
    1bfc:	ldr	r2, [r3, #36]	; 0x24
    1c00:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c04:	ldr	r3, [r3]
    1c08:	mov	r1, r3
    1c0c:	mov	r0, r2
    1c10:	bl	0 <coda_hashtable_add_name>
    1c14:	mov	r3, r0
    1c18:	cmp	r3, #0
    1c1c:	beq	1c44 <coda_product_class_add_product_type+0x60>
    1c20:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c24:	ldr	r2, [r3]
    1c28:	ldr	r3, [fp, #-16]
    1c2c:	ldr	r3, [r3]
    1c30:	ldr	r1, [pc, #228]	; 1d1c <coda_product_class_add_product_type+0x138>
    1c34:	ldr	r0, [pc, #228]	; 1d20 <coda_product_class_add_product_type+0x13c>
    1c38:	bl	0 <coda_set_error>
    1c3c:	mvn	r3, #0
    1c40:	b	1d10 <coda_product_class_add_product_type+0x12c>
    1c44:	ldr	r3, [fp, #-16]
    1c48:	ldr	r3, [r3, #28]
    1c4c:	and	r3, r3, #15
    1c50:	cmp	r3, #0
    1c54:	bne	1cc8 <coda_product_class_add_product_type+0xe4>
    1c58:	ldr	r3, [fp, #-16]
    1c5c:	ldr	r2, [r3, #32]
    1c60:	ldr	r3, [fp, #-16]
    1c64:	ldr	r3, [r3, #28]
    1c68:	add	r3, r3, #16
    1c6c:	lsl	r3, r3, #2
    1c70:	mov	r1, r3
    1c74:	mov	r0, r2
    1c78:	bl	0 <realloc>
    1c7c:	str	r0, [fp, #-8]
    1c80:	ldr	r3, [fp, #-8]
    1c84:	cmp	r3, #0
    1c88:	bne	1cbc <coda_product_class_add_product_type+0xd8>
    1c8c:	ldr	r3, [fp, #-16]
    1c90:	ldr	r3, [r3, #28]
    1c94:	add	r3, r3, #16
    1c98:	lsl	r2, r3, #2
    1c9c:	mov	r3, #800	; 0x320
    1ca0:	str	r3, [sp]
    1ca4:	ldr	r3, [pc, #120]	; 1d24 <coda_product_class_add_product_type+0x140>
    1ca8:	ldr	r1, [pc, #120]	; 1d28 <coda_product_class_add_product_type+0x144>
    1cac:	mvn	r0, #0
    1cb0:	bl	0 <coda_set_error>
    1cb4:	mvn	r3, #0
    1cb8:	b	1d10 <coda_product_class_add_product_type+0x12c>
    1cbc:	ldr	r3, [fp, #-16]
    1cc0:	ldr	r2, [fp, #-8]
    1cc4:	str	r2, [r3, #32]
    1cc8:	ldr	r3, [fp, #-16]
    1ccc:	ldr	r3, [r3, #28]
    1cd0:	add	r2, r3, #1
    1cd4:	ldr	r3, [fp, #-16]
    1cd8:	str	r2, [r3, #28]
    1cdc:	ldr	r3, [fp, #-16]
    1ce0:	ldr	r2, [r3, #32]
    1ce4:	ldr	r3, [fp, #-16]
    1ce8:	ldr	r3, [r3, #28]
    1cec:	sub	r3, r3, #-1073741823	; 0xc0000001
    1cf0:	lsl	r3, r3, #2
    1cf4:	add	r3, r2, r3
    1cf8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1cfc:	str	r2, [r3]
    1d00:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d04:	ldr	r2, [fp, #-16]
    1d08:	str	r2, [r3, #20]
    1d0c:	mov	r3, #0
    1d10:	mov	r0, r3
    1d14:	sub	sp, fp, #4
    1d18:	pop	{fp, pc}
    1d1c:	.word	0x000006e8
    1d20:	.word	0xfffffe70
    1d24:	.word	0x00000000
    1d28:	.word	0x000000b0

00001d2c <coda_product_class_get_product_type>:
    1d2c:	push	{fp, lr}
    1d30:	add	fp, sp, #4
    1d34:	sub	sp, sp, #16
    1d38:	str	r0, [fp, #-16]
    1d3c:	str	r1, [fp, #-20]	; 0xffffffec
    1d40:	ldr	r3, [fp, #-16]
    1d44:	ldr	r3, [r3, #36]	; 0x24
    1d48:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d4c:	mov	r0, r3
    1d50:	bl	0 <coda_hashtable_get_index_from_name>
    1d54:	str	r0, [fp, #-8]
    1d58:	ldr	r3, [fp, #-8]
    1d5c:	cmn	r3, #1
    1d60:	bne	1d84 <coda_product_class_get_product_type+0x58>
    1d64:	ldr	r3, [fp, #-16]
    1d68:	ldr	r2, [r3]
    1d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d70:	ldr	r1, [pc, #48]	; 1da8 <coda_product_class_get_product_type+0x7c>
    1d74:	ldr	r0, [pc, #48]	; 1dac <coda_product_class_get_product_type+0x80>
    1d78:	bl	0 <coda_set_error>
    1d7c:	mov	r3, #0
    1d80:	b	1d9c <coda_product_class_get_product_type+0x70>
    1d84:	ldr	r3, [fp, #-16]
    1d88:	ldr	r2, [r3, #32]
    1d8c:	ldr	r3, [fp, #-8]
    1d90:	lsl	r3, r3, #2
    1d94:	add	r3, r2, r3
    1d98:	ldr	r3, [r3]
    1d9c:	mov	r0, r3
    1da0:	sub	sp, fp, #4
    1da4:	pop	{fp, pc}
    1da8:	.word	0x00000718
    1dac:	.word	0xfffffe70

00001db0 <coda_product_class_has_product_type>:
    1db0:	push	{fp, lr}
    1db4:	add	fp, sp, #4
    1db8:	sub	sp, sp, #8
    1dbc:	str	r0, [fp, #-8]
    1dc0:	str	r1, [fp, #-12]
    1dc4:	ldr	r3, [fp, #-8]
    1dc8:	ldr	r3, [r3, #36]	; 0x24
    1dcc:	ldr	r1, [fp, #-12]
    1dd0:	mov	r0, r3
    1dd4:	bl	0 <coda_hashtable_get_index_from_name>
    1dd8:	mov	r3, r0
    1ddc:	cmn	r3, #1
    1de0:	movne	r3, #1
    1de4:	moveq	r3, #0
    1de8:	uxtb	r3, r3
    1dec:	mov	r0, r3
    1df0:	sub	sp, fp, #4
    1df4:	pop	{fp, pc}

00001df8 <coda_product_class_add_named_type>:
    1df8:	push	{fp, lr}
    1dfc:	add	fp, sp, #4
    1e00:	sub	sp, sp, #16
    1e04:	str	r0, [fp, #-16]
    1e08:	str	r1, [fp, #-20]	; 0xffffffec
    1e0c:	ldr	r3, [fp, #-16]
    1e10:	ldr	r2, [r3, #24]
    1e14:	ldr	r3, [fp, #-20]	; 0xffffffec
    1e18:	ldr	r3, [r3, #16]
    1e1c:	mov	r1, r3
    1e20:	mov	r0, r2
    1e24:	bl	0 <coda_hashtable_add_name>
    1e28:	mov	r3, r0
    1e2c:	cmp	r3, #0
    1e30:	beq	1e58 <coda_product_class_add_named_type+0x60>
    1e34:	ldr	r3, [fp, #-20]	; 0xffffffec
    1e38:	ldr	r2, [r3, #16]
    1e3c:	ldr	r3, [fp, #-16]
    1e40:	ldr	r3, [r3]
    1e44:	ldr	r1, [pc, #208]	; 1f1c <coda_product_class_add_named_type+0x124>
    1e48:	ldr	r0, [pc, #208]	; 1f20 <coda_product_class_add_named_type+0x128>
    1e4c:	bl	0 <coda_set_error>
    1e50:	mvn	r3, #0
    1e54:	b	1f10 <coda_product_class_add_named_type+0x118>
    1e58:	ldr	r3, [fp, #-16]
    1e5c:	ldr	r3, [r3, #16]
    1e60:	and	r3, r3, #15
    1e64:	cmp	r3, #0
    1e68:	bne	1ec0 <coda_product_class_add_named_type+0xc8>
    1e6c:	ldr	r3, [fp, #-16]
    1e70:	ldr	r2, [r3, #20]
    1e74:	ldr	r3, [fp, #-16]
    1e78:	ldr	r3, [r3, #16]
    1e7c:	add	r3, r3, #16
    1e80:	lsl	r3, r3, #2
    1e84:	mov	r1, r3
    1e88:	mov	r0, r2
    1e8c:	bl	0 <realloc>
    1e90:	str	r0, [fp, #-8]
    1e94:	ldr	r3, [fp, #-8]
    1e98:	cmp	r3, #0
    1e9c:	bne	1eb4 <coda_product_class_add_named_type+0xbc>
    1ea0:	ldr	r3, [pc, #124]	; 1f24 <coda_product_class_add_named_type+0x12c>
    1ea4:	mov	r2, #848	; 0x350
    1ea8:	ldr	r1, [pc, #120]	; 1f28 <coda_product_class_add_named_type+0x130>
    1eac:	ldr	r0, [pc, #120]	; 1f2c <coda_product_class_add_named_type+0x134>
    1eb0:	bl	0 <__assert_fail>
    1eb4:	ldr	r3, [fp, #-16]
    1eb8:	ldr	r2, [fp, #-8]
    1ebc:	str	r2, [r3, #20]
    1ec0:	ldr	r3, [fp, #-16]
    1ec4:	ldr	r3, [r3, #16]
    1ec8:	add	r2, r3, #1
    1ecc:	ldr	r3, [fp, #-16]
    1ed0:	str	r2, [r3, #16]
    1ed4:	ldr	r3, [fp, #-16]
    1ed8:	ldr	r2, [r3, #20]
    1edc:	ldr	r3, [fp, #-16]
    1ee0:	ldr	r3, [r3, #16]
    1ee4:	sub	r3, r3, #-1073741823	; 0xc0000001
    1ee8:	lsl	r3, r3, #2
    1eec:	add	r3, r2, r3
    1ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
    1ef4:	str	r2, [r3]
    1ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1efc:	ldr	r3, [r3, #4]
    1f00:	add	r2, r3, #1
    1f04:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f08:	str	r2, [r3, #4]
    1f0c:	mov	r3, #0
    1f10:	mov	r0, r3
    1f14:	sub	sp, fp, #4
    1f18:	pop	{fp, pc}
    1f1c:	.word	0x00000758
    1f20:	.word	0xfffffe70
    1f24:	.word	0x000009b8
    1f28:	.word	0x00000000
    1f2c:	.word	0x00000788

00001f30 <coda_product_class_get_named_type>:
    1f30:	push	{fp, lr}
    1f34:	add	fp, sp, #4
    1f38:	sub	sp, sp, #16
    1f3c:	str	r0, [fp, #-16]
    1f40:	str	r1, [fp, #-20]	; 0xffffffec
    1f44:	ldr	r3, [fp, #-16]
    1f48:	ldr	r3, [r3, #24]
    1f4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f50:	mov	r0, r3
    1f54:	bl	0 <coda_hashtable_get_index_from_name>
    1f58:	str	r0, [fp, #-8]
    1f5c:	ldr	r3, [fp, #-8]
    1f60:	cmn	r3, #1
    1f64:	bne	1f88 <coda_product_class_get_named_type+0x58>
    1f68:	ldr	r3, [fp, #-16]
    1f6c:	ldr	r2, [r3]
    1f70:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f74:	ldr	r1, [pc, #48]	; 1fac <coda_product_class_get_named_type+0x7c>
    1f78:	ldr	r0, [pc, #48]	; 1fb0 <coda_product_class_get_named_type+0x80>
    1f7c:	bl	0 <coda_set_error>
    1f80:	mov	r3, #0
    1f84:	b	1fa0 <coda_product_class_get_named_type+0x70>
    1f88:	ldr	r3, [fp, #-16]
    1f8c:	ldr	r2, [r3, #20]
    1f90:	ldr	r3, [fp, #-8]
    1f94:	lsl	r3, r3, #2
    1f98:	add	r3, r2, r3
    1f9c:	ldr	r3, [r3]
    1fa0:	mov	r0, r3
    1fa4:	sub	sp, fp, #4
    1fa8:	pop	{fp, pc}
    1fac:	.word	0x000007a0
    1fb0:	.word	0xfffffe70

00001fb4 <coda_product_class_has_named_type>:
    1fb4:	push	{fp, lr}
    1fb8:	add	fp, sp, #4
    1fbc:	sub	sp, sp, #8
    1fc0:	str	r0, [fp, #-8]
    1fc4:	str	r1, [fp, #-12]
    1fc8:	ldr	r3, [fp, #-8]
    1fcc:	ldr	r3, [r3, #24]
    1fd0:	ldr	r1, [fp, #-12]
    1fd4:	mov	r0, r3
    1fd8:	bl	0 <coda_hashtable_get_index_from_name>
    1fdc:	mov	r3, r0
    1fe0:	cmn	r3, #1
    1fe4:	movne	r3, #1
    1fe8:	moveq	r3, #0
    1fec:	uxtb	r3, r3
    1ff0:	mov	r0, r3
    1ff4:	sub	sp, fp, #4
    1ff8:	pop	{fp, pc}

00001ffc <coda_product_class_get_revision>:
    1ffc:	push	{fp}		; (str fp, [sp, #-4]!)
    2000:	add	fp, sp, #0
    2004:	sub	sp, sp, #12
    2008:	str	r0, [fp, #-8]
    200c:	ldr	r3, [fp, #-8]
    2010:	ldr	r3, [r3, #12]
    2014:	mov	r0, r3
    2018:	add	sp, fp, #0
    201c:	pop	{fp}		; (ldr fp, [sp], #4)
    2020:	bx	lr

00002024 <delete_data_dictionary>:
    2024:	push	{fp, lr}
    2028:	add	fp, sp, #4
    202c:	sub	sp, sp, #16
    2030:	str	r0, [fp, #-16]
    2034:	ldr	r3, [fp, #-16]
    2038:	cmp	r3, #0
    203c:	bne	2054 <delete_data_dictionary+0x30>
    2040:	ldr	r3, [pc, #272]	; 2158 <delete_data_dictionary+0x134>
    2044:	ldr	r2, [pc, #272]	; 215c <delete_data_dictionary+0x138>
    2048:	ldr	r1, [pc, #272]	; 2160 <delete_data_dictionary+0x13c>
    204c:	ldr	r0, [pc, #272]	; 2164 <delete_data_dictionary+0x140>
    2050:	bl	0 <__assert_fail>
    2054:	ldr	r3, [fp, #-16]
    2058:	ldr	r3, [r3, #8]
    205c:	cmp	r3, #0
    2060:	beq	2074 <delete_data_dictionary+0x50>
    2064:	ldr	r3, [fp, #-16]
    2068:	ldr	r3, [r3, #8]
    206c:	mov	r0, r3
    2070:	bl	0 <coda_hashtable_delete>
    2074:	ldr	r3, [fp, #-16]
    2078:	ldr	r3, [r3, #4]
    207c:	cmp	r3, #0
    2080:	beq	20e0 <delete_data_dictionary+0xbc>
    2084:	mov	r3, #0
    2088:	str	r3, [fp, #-8]
    208c:	b	20bc <delete_data_dictionary+0x98>
    2090:	ldr	r3, [fp, #-16]
    2094:	ldr	r2, [r3, #4]
    2098:	ldr	r3, [fp, #-8]
    209c:	lsl	r3, r3, #2
    20a0:	add	r3, r2, r3
    20a4:	ldr	r3, [r3]
    20a8:	mov	r0, r3
    20ac:	bl	16b4 <coda_product_class_delete>
    20b0:	ldr	r3, [fp, #-8]
    20b4:	add	r3, r3, #1
    20b8:	str	r3, [fp, #-8]
    20bc:	ldr	r3, [fp, #-16]
    20c0:	ldr	r2, [r3]
    20c4:	ldr	r3, [fp, #-8]
    20c8:	cmp	r2, r3
    20cc:	bgt	2090 <delete_data_dictionary+0x6c>
    20d0:	ldr	r3, [fp, #-16]
    20d4:	ldr	r3, [r3, #4]
    20d8:	mov	r0, r3
    20dc:	bl	0 <free>
    20e0:	mov	r3, #0
    20e4:	str	r3, [fp, #-8]
    20e8:	b	2138 <delete_data_dictionary+0x114>
    20ec:	ldr	r2, [fp, #-16]
    20f0:	ldr	r3, [fp, #-8]
    20f4:	add	r3, r3, #2
    20f8:	lsl	r3, r3, #2
    20fc:	add	r3, r2, r3
    2100:	ldr	r3, [r3, #4]
    2104:	cmp	r3, #0
    2108:	beq	212c <delete_data_dictionary+0x108>
    210c:	ldr	r2, [fp, #-16]
    2110:	ldr	r3, [fp, #-8]
    2114:	add	r3, r3, #2
    2118:	lsl	r3, r3, #2
    211c:	add	r3, r2, r3
    2120:	ldr	r3, [r3, #4]
    2124:	mov	r0, r3
    2128:	bl	0 <coda_detection_tree_delete>
    212c:	ldr	r3, [fp, #-8]
    2130:	add	r3, r3, #1
    2134:	str	r3, [fp, #-8]
    2138:	ldr	r3, [fp, #-8]
    213c:	cmp	r3, #9
    2140:	ble	20ec <delete_data_dictionary+0xc8>
    2144:	ldr	r0, [fp, #-16]
    2148:	bl	0 <free>
    214c:	nop			; (mov r0, r0)
    2150:	sub	sp, fp, #4
    2154:	pop	{fp, pc}
    2158:	.word	0x000009dc
    215c:	.word	0x00000377
    2160:	.word	0x00000000
    2164:	.word	0x000007dc

00002168 <coda_data_dictionary_new>:
    2168:	push	{fp, lr}
    216c:	add	fp, sp, #4
    2170:	sub	sp, sp, #16
    2174:	mov	r0, #52	; 0x34
    2178:	bl	0 <malloc>
    217c:	mov	r3, r0
    2180:	str	r3, [fp, #-12]
    2184:	ldr	r3, [fp, #-12]
    2188:	cmp	r3, #0
    218c:	bne	21b4 <coda_data_dictionary_new+0x4c>
    2190:	mov	r3, #920	; 0x398
    2194:	str	r3, [sp]
    2198:	ldr	r3, [pc, #208]	; 2270 <coda_data_dictionary_new+0x108>
    219c:	mov	r2, #52	; 0x34
    21a0:	ldr	r1, [pc, #204]	; 2274 <coda_data_dictionary_new+0x10c>
    21a4:	mvn	r0, #0
    21a8:	bl	0 <coda_set_error>
    21ac:	mov	r3, #0
    21b0:	b	2264 <coda_data_dictionary_new+0xfc>
    21b4:	ldr	r3, [fp, #-12]
    21b8:	mov	r2, #0
    21bc:	str	r2, [r3]
    21c0:	ldr	r3, [fp, #-12]
    21c4:	mov	r2, #0
    21c8:	str	r2, [r3, #4]
    21cc:	ldr	r3, [fp, #-12]
    21d0:	mov	r2, #0
    21d4:	str	r2, [r3, #8]
    21d8:	mov	r3, #0
    21dc:	str	r3, [fp, #-8]
    21e0:	b	220c <coda_data_dictionary_new+0xa4>
    21e4:	ldr	r2, [fp, #-12]
    21e8:	ldr	r3, [fp, #-8]
    21ec:	add	r3, r3, #2
    21f0:	lsl	r3, r3, #2
    21f4:	add	r3, r2, r3
    21f8:	mov	r2, #0
    21fc:	str	r2, [r3, #4]
    2200:	ldr	r3, [fp, #-8]
    2204:	add	r3, r3, #1
    2208:	str	r3, [fp, #-8]
    220c:	ldr	r3, [fp, #-8]
    2210:	cmp	r3, #9
    2214:	ble	21e4 <coda_data_dictionary_new+0x7c>
    2218:	mov	r0, #1
    221c:	bl	0 <coda_hashtable_new>
    2220:	mov	r2, r0
    2224:	ldr	r3, [fp, #-12]
    2228:	str	r2, [r3, #8]
    222c:	ldr	r3, [fp, #-12]
    2230:	ldr	r3, [r3, #8]
    2234:	cmp	r3, #0
    2238:	bne	2260 <coda_data_dictionary_new+0xf8>
    223c:	ldr	r3, [pc, #52]	; 2278 <coda_data_dictionary_new+0x110>
    2240:	ldr	r2, [pc, #40]	; 2270 <coda_data_dictionary_new+0x108>
    2244:	ldr	r1, [pc, #48]	; 227c <coda_data_dictionary_new+0x114>
    2248:	mvn	r0, #0
    224c:	bl	0 <coda_set_error>
    2250:	ldr	r0, [fp, #-12]
    2254:	bl	2024 <delete_data_dictionary>
    2258:	mov	r3, #0
    225c:	b	2264 <coda_data_dictionary_new+0xfc>
    2260:	ldr	r3, [fp, #-12]
    2264:	mov	r0, r3
    2268:	sub	sp, fp, #4
    226c:	pop	{fp, pc}
    2270:	.word	0x00000000
    2274:	.word	0x000000b0
    2278:	.word	0x000003a7
    227c:	.word	0x00000384

00002280 <data_dictionary_rebuild_product_class_hash_data>:
    2280:	push	{r4, fp, lr}
    2284:	add	fp, sp, #8
    2288:	sub	sp, sp, #12
    228c:	bl	0 <__aeabi_read_tp>
    2290:	mov	r2, r0
    2294:	ldr	r3, [pc, #276]	; 23b0 <data_dictionary_rebuild_product_class_hash_data+0x130>
    2298:	ldr	r3, [r2, r3]
    229c:	ldr	r3, [r3, #8]
    22a0:	mov	r0, r3
    22a4:	bl	0 <coda_hashtable_delete>
    22a8:	bl	0 <__aeabi_read_tp>
    22ac:	mov	r2, r0
    22b0:	ldr	r3, [pc, #248]	; 23b0 <data_dictionary_rebuild_product_class_hash_data+0x130>
    22b4:	ldr	r4, [r2, r3]
    22b8:	mov	r0, #1
    22bc:	bl	0 <coda_hashtable_new>
    22c0:	mov	r3, r0
    22c4:	str	r3, [r4, #8]
    22c8:	bl	0 <__aeabi_read_tp>
    22cc:	mov	r2, r0
    22d0:	ldr	r3, [pc, #216]	; 23b0 <data_dictionary_rebuild_product_class_hash_data+0x130>
    22d4:	ldr	r3, [r2, r3]
    22d8:	ldr	r3, [r3, #8]
    22dc:	cmp	r3, #0
    22e0:	bne	2300 <data_dictionary_rebuild_product_class_hash_data+0x80>
    22e4:	mov	r3, #952	; 0x3b8
    22e8:	ldr	r2, [pc, #196]	; 23b4 <data_dictionary_rebuild_product_class_hash_data+0x134>
    22ec:	ldr	r1, [pc, #196]	; 23b8 <data_dictionary_rebuild_product_class_hash_data+0x138>
    22f0:	mvn	r0, #0
    22f4:	bl	0 <coda_set_error>
    22f8:	mvn	r3, #0
    22fc:	b	23a4 <data_dictionary_rebuild_product_class_hash_data+0x124>
    2300:	mov	r3, #0
    2304:	str	r3, [fp, #-16]
    2308:	b	2380 <data_dictionary_rebuild_product_class_hash_data+0x100>
    230c:	bl	0 <__aeabi_read_tp>
    2310:	mov	r2, r0
    2314:	ldr	r3, [pc, #148]	; 23b0 <data_dictionary_rebuild_product_class_hash_data+0x130>
    2318:	ldr	r3, [r2, r3]
    231c:	ldr	r4, [r3, #8]
    2320:	bl	0 <__aeabi_read_tp>
    2324:	mov	r2, r0
    2328:	ldr	r3, [pc, #128]	; 23b0 <data_dictionary_rebuild_product_class_hash_data+0x130>
    232c:	ldr	r3, [r2, r3]
    2330:	ldr	r2, [r3, #4]
    2334:	ldr	r3, [fp, #-16]
    2338:	lsl	r3, r3, #2
    233c:	add	r3, r2, r3
    2340:	ldr	r3, [r3]
    2344:	ldr	r3, [r3]
    2348:	mov	r1, r3
    234c:	mov	r0, r4
    2350:	bl	0 <coda_hashtable_add_name>
    2354:	mov	r3, r0
    2358:	cmp	r3, #0
    235c:	beq	2374 <data_dictionary_rebuild_product_class_hash_data+0xf4>
    2360:	ldr	r3, [pc, #84]	; 23bc <data_dictionary_rebuild_product_class_hash_data+0x13c>
    2364:	mov	r2, #960	; 0x3c0
    2368:	ldr	r1, [pc, #68]	; 23b4 <data_dictionary_rebuild_product_class_hash_data+0x134>
    236c:	ldr	r0, [pc, #76]	; 23c0 <data_dictionary_rebuild_product_class_hash_data+0x140>
    2370:	bl	0 <__assert_fail>
    2374:	ldr	r3, [fp, #-16]
    2378:	add	r3, r3, #1
    237c:	str	r3, [fp, #-16]
    2380:	bl	0 <__aeabi_read_tp>
    2384:	mov	r2, r0
    2388:	ldr	r3, [pc, #32]	; 23b0 <data_dictionary_rebuild_product_class_hash_data+0x130>
    238c:	ldr	r3, [r2, r3]
    2390:	ldr	r2, [r3]
    2394:	ldr	r3, [fp, #-16]
    2398:	cmp	r2, r3
    239c:	bgt	230c <data_dictionary_rebuild_product_class_hash_data+0x8c>
    23a0:	mov	r3, #0
    23a4:	mov	r0, r3
    23a8:	sub	sp, fp, #8
    23ac:	pop	{r4, fp, pc}
	...
    23b8:	.word	0x00000384
    23bc:	.word	0x000009f4
    23c0:	.word	0x000007f4

000023c4 <coda_data_dictionary_add_product_class>:
    23c4:	push	{r4, fp, lr}
    23c8:	add	fp, sp, #8
    23cc:	sub	sp, sp, #36	; 0x24
    23d0:	str	r0, [fp, #-32]	; 0xffffffe0
    23d4:	bl	0 <__aeabi_read_tp>
    23d8:	mov	r2, r0
    23dc:	ldr	r3, [pc, #648]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    23e0:	ldr	r3, [r2, r3]
    23e4:	cmp	r3, #0
    23e8:	bne	2400 <coda_data_dictionary_add_product_class+0x3c>
    23ec:	ldr	r1, [pc, #636]	; 2670 <coda_data_dictionary_add_product_class+0x2ac>
    23f0:	ldr	r0, [pc, #636]	; 2674 <coda_data_dictionary_add_product_class+0x2b0>
    23f4:	bl	0 <coda_set_error>
    23f8:	mvn	r3, #0
    23fc:	b	2660 <coda_data_dictionary_add_product_class+0x29c>
    2400:	bl	0 <__aeabi_read_tp>
    2404:	mov	r2, r0
    2408:	ldr	r3, [pc, #604]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    240c:	ldr	r3, [r2, r3]
    2410:	ldr	r2, [r3, #8]
    2414:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2418:	ldr	r3, [r3]
    241c:	mov	r1, r3
    2420:	mov	r0, r2
    2424:	bl	0 <coda_hashtable_add_name>
    2428:	mov	r3, r0
    242c:	cmp	r3, #0
    2430:	beq	2454 <coda_data_dictionary_add_product_class+0x90>
    2434:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2438:	ldr	r3, [r3]
    243c:	mov	r2, r3
    2440:	ldr	r1, [pc, #560]	; 2678 <coda_data_dictionary_add_product_class+0x2b4>
    2444:	ldr	r0, [pc, #552]	; 2674 <coda_data_dictionary_add_product_class+0x2b0>
    2448:	bl	0 <coda_set_error>
    244c:	mvn	r3, #0
    2450:	b	2660 <coda_data_dictionary_add_product_class+0x29c>
    2454:	bl	0 <__aeabi_read_tp>
    2458:	mov	r2, r0
    245c:	ldr	r3, [pc, #520]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2460:	ldr	r3, [r2, r3]
    2464:	ldr	r3, [r3]
    2468:	and	r3, r3, #15
    246c:	cmp	r3, #0
    2470:	bne	2514 <coda_data_dictionary_add_product_class+0x150>
    2474:	bl	0 <__aeabi_read_tp>
    2478:	mov	r2, r0
    247c:	ldr	r3, [pc, #488]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2480:	ldr	r3, [r2, r3]
    2484:	ldr	r2, [r3, #4]
    2488:	bl	0 <__aeabi_read_tp>
    248c:	mov	r1, r0
    2490:	ldr	r3, [pc, #468]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2494:	ldr	r3, [r1, r3]
    2498:	ldr	r3, [r3]
    249c:	add	r3, r3, #16
    24a0:	lsl	r3, r3, #2
    24a4:	mov	r1, r3
    24a8:	mov	r0, r2
    24ac:	bl	0 <realloc>
    24b0:	str	r0, [fp, #-20]	; 0xffffffec
    24b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    24b8:	cmp	r3, #0
    24bc:	bne	24fc <coda_data_dictionary_add_product_class+0x138>
    24c0:	bl	0 <__aeabi_read_tp>
    24c4:	mov	r2, r0
    24c8:	ldr	r3, [pc, #412]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    24cc:	ldr	r3, [r2, r3]
    24d0:	ldr	r3, [r3]
    24d4:	add	r3, r3, #16
    24d8:	lsl	r2, r3, #2
    24dc:	ldr	r3, [pc, #408]	; 267c <coda_data_dictionary_add_product_class+0x2b8>
    24e0:	str	r3, [sp]
    24e4:	ldr	r3, [pc, #404]	; 2680 <coda_data_dictionary_add_product_class+0x2bc>
    24e8:	ldr	r1, [pc, #404]	; 2684 <coda_data_dictionary_add_product_class+0x2c0>
    24ec:	mvn	r0, #0
    24f0:	bl	0 <coda_set_error>
    24f4:	mvn	r3, #0
    24f8:	b	2660 <coda_data_dictionary_add_product_class+0x29c>
    24fc:	bl	0 <__aeabi_read_tp>
    2500:	mov	r2, r0
    2504:	ldr	r3, [pc, #352]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2508:	ldr	r3, [r2, r3]
    250c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2510:	str	r2, [r3, #4]
    2514:	mov	r3, #0
    2518:	str	r3, [fp, #-16]
    251c:	b	25cc <coda_data_dictionary_add_product_class+0x208>
    2520:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2524:	ldr	r4, [r3]
    2528:	bl	0 <__aeabi_read_tp>
    252c:	mov	r2, r0
    2530:	ldr	r3, [pc, #308]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2534:	ldr	r3, [r2, r3]
    2538:	ldr	r2, [r3, #4]
    253c:	ldr	r3, [fp, #-16]
    2540:	lsl	r3, r3, #2
    2544:	add	r3, r2, r3
    2548:	ldr	r3, [r3]
    254c:	ldr	r3, [r3]
    2550:	mov	r1, r3
    2554:	mov	r0, r4
    2558:	bl	0 <strcmp>
    255c:	mov	r3, r0
    2560:	cmp	r3, #0
    2564:	bge	25c0 <coda_data_dictionary_add_product_class+0x1fc>
    2568:	ldr	r3, [fp, #-32]	; 0xffffffe0
    256c:	str	r3, [fp, #-24]	; 0xffffffe8
    2570:	bl	0 <__aeabi_read_tp>
    2574:	mov	r2, r0
    2578:	ldr	r3, [pc, #236]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    257c:	ldr	r3, [r2, r3]
    2580:	ldr	r2, [r3, #4]
    2584:	ldr	r3, [fp, #-16]
    2588:	lsl	r3, r3, #2
    258c:	add	r3, r2, r3
    2590:	ldr	r3, [r3]
    2594:	str	r3, [fp, #-32]	; 0xffffffe0
    2598:	bl	0 <__aeabi_read_tp>
    259c:	mov	r2, r0
    25a0:	ldr	r3, [pc, #196]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    25a4:	ldr	r3, [r2, r3]
    25a8:	ldr	r2, [r3, #4]
    25ac:	ldr	r3, [fp, #-16]
    25b0:	lsl	r3, r3, #2
    25b4:	add	r3, r2, r3
    25b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    25bc:	str	r2, [r3]
    25c0:	ldr	r3, [fp, #-16]
    25c4:	add	r3, r3, #1
    25c8:	str	r3, [fp, #-16]
    25cc:	bl	0 <__aeabi_read_tp>
    25d0:	mov	r2, r0
    25d4:	ldr	r3, [pc, #144]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    25d8:	ldr	r3, [r2, r3]
    25dc:	ldr	r2, [r3]
    25e0:	ldr	r3, [fp, #-16]
    25e4:	cmp	r2, r3
    25e8:	bgt	2520 <coda_data_dictionary_add_product_class+0x15c>
    25ec:	bl	0 <__aeabi_read_tp>
    25f0:	mov	r2, r0
    25f4:	ldr	r3, [pc, #112]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    25f8:	ldr	r3, [r2, r3]
    25fc:	ldr	r2, [r3]
    2600:	add	r2, r2, #1
    2604:	str	r2, [r3]
    2608:	bl	0 <__aeabi_read_tp>
    260c:	mov	r2, r0
    2610:	ldr	r3, [pc, #84]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2614:	ldr	r3, [r2, r3]
    2618:	ldr	r2, [r3, #4]
    261c:	bl	0 <__aeabi_read_tp>
    2620:	mov	r1, r0
    2624:	ldr	r3, [pc, #64]	; 266c <coda_data_dictionary_add_product_class+0x2a8>
    2628:	ldr	r3, [r1, r3]
    262c:	ldr	r3, [r3]
    2630:	sub	r3, r3, #-1073741823	; 0xc0000001
    2634:	lsl	r3, r3, #2
    2638:	add	r3, r2, r3
    263c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2640:	str	r2, [r3]
    2644:	bl	2280 <data_dictionary_rebuild_product_class_hash_data>
    2648:	mov	r3, r0
    264c:	cmp	r3, #0
    2650:	beq	265c <coda_data_dictionary_add_product_class+0x298>
    2654:	mvn	r3, #0
    2658:	b	2660 <coda_data_dictionary_add_product_class+0x29c>
    265c:	mov	r3, #0
    2660:	mov	r0, r3
    2664:	sub	sp, fp, #8
    2668:	pop	{r4, fp, pc}
    266c:	.word	0x00000000
    2670:	.word	0x000007f8
    2674:	.word	0xfffffe70
    2678:	.word	0x00000818
    267c:	.word	0x000003e2
    2680:	.word	0x00000000
    2684:	.word	0x000000b0

00002688 <coda_data_dictionary_get_product_class>:
    2688:	push	{fp, lr}
    268c:	add	fp, sp, #4
    2690:	sub	sp, sp, #16
    2694:	str	r0, [fp, #-16]
    2698:	bl	0 <__aeabi_read_tp>
    269c:	mov	r2, r0
    26a0:	ldr	r3, [pc, #148]	; 273c <coda_data_dictionary_get_product_class+0xb4>
    26a4:	ldr	r3, [r2, r3]
    26a8:	cmp	r3, #0
    26ac:	bne	26c4 <coda_data_dictionary_get_product_class+0x3c>
    26b0:	ldr	r1, [pc, #136]	; 2740 <coda_data_dictionary_get_product_class+0xb8>
    26b4:	ldr	r0, [pc, #136]	; 2744 <coda_data_dictionary_get_product_class+0xbc>
    26b8:	bl	0 <coda_set_error>
    26bc:	mov	r3, #0
    26c0:	b	2730 <coda_data_dictionary_get_product_class+0xa8>
    26c4:	bl	0 <__aeabi_read_tp>
    26c8:	mov	r2, r0
    26cc:	ldr	r3, [pc, #104]	; 273c <coda_data_dictionary_get_product_class+0xb4>
    26d0:	ldr	r3, [r2, r3]
    26d4:	ldr	r3, [r3, #8]
    26d8:	ldr	r1, [fp, #-16]
    26dc:	mov	r0, r3
    26e0:	bl	0 <coda_hashtable_get_index_from_name>
    26e4:	str	r0, [fp, #-8]
    26e8:	ldr	r3, [fp, #-8]
    26ec:	cmn	r3, #1
    26f0:	bne	270c <coda_data_dictionary_get_product_class+0x84>
    26f4:	ldr	r2, [fp, #-16]
    26f8:	ldr	r1, [pc, #72]	; 2748 <coda_data_dictionary_get_product_class+0xc0>
    26fc:	ldr	r0, [pc, #64]	; 2744 <coda_data_dictionary_get_product_class+0xbc>
    2700:	bl	0 <coda_set_error>
    2704:	mov	r3, #0
    2708:	b	2730 <coda_data_dictionary_get_product_class+0xa8>
    270c:	bl	0 <__aeabi_read_tp>
    2710:	mov	r2, r0
    2714:	ldr	r3, [pc, #32]	; 273c <coda_data_dictionary_get_product_class+0xb4>
    2718:	ldr	r3, [r2, r3]
    271c:	ldr	r2, [r3, #4]
    2720:	ldr	r3, [fp, #-8]
    2724:	lsl	r3, r3, #2
    2728:	add	r3, r2, r3
    272c:	ldr	r3, [r3]
    2730:	mov	r0, r3
    2734:	sub	sp, fp, #4
    2738:	pop	{fp, pc}
    273c:	.word	0x00000000
    2740:	.word	0x000007f8
    2744:	.word	0xfffffe70
    2748:	.word	0x00000834

0000274c <coda_data_dictionary_has_product_class>:
    274c:	push	{fp, lr}
    2750:	add	fp, sp, #4
    2754:	sub	sp, sp, #8
    2758:	str	r0, [fp, #-8]
    275c:	bl	0 <__aeabi_read_tp>
    2760:	mov	r2, r0
    2764:	ldr	r3, [pc, #80]	; 27bc <coda_data_dictionary_has_product_class+0x70>
    2768:	ldr	r3, [r2, r3]
    276c:	cmp	r3, #0
    2770:	bne	277c <coda_data_dictionary_has_product_class+0x30>
    2774:	mov	r3, #0
    2778:	b	27b0 <coda_data_dictionary_has_product_class+0x64>
    277c:	bl	0 <__aeabi_read_tp>
    2780:	mov	r2, r0
    2784:	ldr	r3, [pc, #48]	; 27bc <coda_data_dictionary_has_product_class+0x70>
    2788:	ldr	r3, [r2, r3]
    278c:	ldr	r3, [r3, #8]
    2790:	ldr	r1, [fp, #-8]
    2794:	mov	r0, r3
    2798:	bl	0 <coda_hashtable_get_index_from_name>
    279c:	mov	r3, r0
    27a0:	cmn	r3, #1
    27a4:	movne	r3, #1
    27a8:	moveq	r3, #0
    27ac:	uxtb	r3, r3
    27b0:	mov	r0, r3
    27b4:	sub	sp, fp, #4
    27b8:	pop	{fp, pc}
    27bc:	.word	0x00000000

000027c0 <coda_data_dictionary_remove_product_class>:
    27c0:	push	{fp, lr}
    27c4:	add	fp, sp, #4
    27c8:	sub	sp, sp, #16
    27cc:	str	r0, [fp, #-16]
    27d0:	bl	0 <__aeabi_read_tp>
    27d4:	mov	r2, r0
    27d8:	ldr	r3, [pc, #352]	; 2940 <coda_data_dictionary_remove_product_class+0x180>
    27dc:	ldr	r3, [r2, r3]
    27e0:	cmp	r3, #0
    27e4:	bne	27fc <coda_data_dictionary_remove_product_class+0x3c>
    27e8:	ldr	r1, [pc, #340]	; 2944 <coda_data_dictionary_remove_product_class+0x184>
    27ec:	ldr	r0, [pc, #340]	; 2948 <coda_data_dictionary_remove_product_class+0x188>
    27f0:	bl	0 <coda_set_error>
    27f4:	mvn	r3, #0
    27f8:	b	2934 <coda_data_dictionary_remove_product_class+0x174>
    27fc:	bl	0 <__aeabi_read_tp>
    2800:	mov	r2, r0
    2804:	ldr	r3, [pc, #308]	; 2940 <coda_data_dictionary_remove_product_class+0x180>
    2808:	ldr	r3, [r2, r3]
    280c:	ldr	r2, [r3, #8]
    2810:	ldr	r3, [fp, #-16]
    2814:	ldr	r3, [r3]
    2818:	mov	r1, r3
    281c:	mov	r0, r2
    2820:	bl	0 <coda_hashtable_get_index_from_name>
    2824:	str	r0, [fp, #-12]
    2828:	ldr	r3, [fp, #-12]
    282c:	cmn	r3, #1
    2830:	bne	2854 <coda_data_dictionary_remove_product_class+0x94>
    2834:	ldr	r3, [fp, #-16]
    2838:	ldr	r3, [r3]
    283c:	mov	r2, r3
    2840:	ldr	r1, [pc, #260]	; 294c <coda_data_dictionary_remove_product_class+0x18c>
    2844:	ldr	r0, [pc, #252]	; 2948 <coda_data_dictionary_remove_product_class+0x188>
    2848:	bl	0 <coda_set_error>
    284c:	mvn	r3, #0
    2850:	b	2934 <coda_data_dictionary_remove_product_class+0x174>
    2854:	ldr	r3, [fp, #-12]
    2858:	add	r3, r3, #1
    285c:	str	r3, [fp, #-8]
    2860:	b	28bc <coda_data_dictionary_remove_product_class+0xfc>
    2864:	bl	0 <__aeabi_read_tp>
    2868:	mov	r2, r0
    286c:	ldr	r3, [pc, #204]	; 2940 <coda_data_dictionary_remove_product_class+0x180>
    2870:	ldr	r3, [r2, r3]
    2874:	ldr	r2, [r3, #4]
    2878:	ldr	r3, [fp, #-8]
    287c:	sub	r3, r3, #-1073741823	; 0xc0000001
    2880:	lsl	r3, r3, #2
    2884:	add	r3, r2, r3
    2888:	bl	0 <__aeabi_read_tp>
    288c:	mov	r1, r0
    2890:	ldr	r2, [pc, #168]	; 2940 <coda_data_dictionary_remove_product_class+0x180>
    2894:	ldr	r2, [r1, r2]
    2898:	ldr	r1, [r2, #4]
    289c:	ldr	r2, [fp, #-8]
    28a0:	lsl	r2, r2, #2
    28a4:	add	r2, r1, r2
    28a8:	ldr	r2, [r2]
    28ac:	str	r2, [r3]
    28b0:	ldr	r3, [fp, #-8]
    28b4:	add	r3, r3, #1
    28b8:	str	r3, [fp, #-8]
    28bc:	bl	0 <__aeabi_read_tp>
    28c0:	mov	r2, r0
    28c4:	ldr	r3, [pc, #116]	; 2940 <coda_data_dictionary_remove_product_class+0x180>
    28c8:	ldr	r3, [r2, r3]
    28cc:	ldr	r2, [r3]
    28d0:	ldr	r3, [fp, #-8]
    28d4:	cmp	r2, r3
    28d8:	bgt	2864 <coda_data_dictionary_remove_product_class+0xa4>
    28dc:	bl	0 <__aeabi_read_tp>
    28e0:	mov	r2, r0
    28e4:	ldr	r3, [pc, #84]	; 2940 <coda_data_dictionary_remove_product_class+0x180>
    28e8:	ldr	r3, [r2, r3]
    28ec:	ldr	r2, [r3]
    28f0:	sub	r2, r2, #1
    28f4:	str	r2, [r3]
    28f8:	ldr	r0, [fp, #-16]
    28fc:	bl	16b4 <coda_product_class_delete>
    2900:	bl	2280 <data_dictionary_rebuild_product_class_hash_data>
    2904:	mov	r3, r0
    2908:	cmp	r3, #0
    290c:	beq	2918 <coda_data_dictionary_remove_product_class+0x158>
    2910:	mvn	r3, #0
    2914:	b	2934 <coda_data_dictionary_remove_product_class+0x174>
    2918:	bl	29c8 <data_dictionary_rebuild_detection_tree>
    291c:	mov	r3, r0
    2920:	cmp	r3, #0
    2924:	beq	2930 <coda_data_dictionary_remove_product_class+0x170>
    2928:	mvn	r3, #0
    292c:	b	2934 <coda_data_dictionary_remove_product_class+0x174>
    2930:	mov	r3, #0
    2934:	mov	r0, r3
    2938:	sub	sp, fp, #4
    293c:	pop	{fp, pc}
    2940:	.word	0x00000000
    2944:	.word	0x000007f8
    2948:	.word	0xfffffe70
    294c:	.word	0x00000834

00002950 <data_dictionary_add_detection_rule>:
    2950:	push	{fp, lr}
    2954:	add	fp, sp, #4
    2958:	sub	sp, sp, #16
    295c:	str	r0, [fp, #-16]
    2960:	ldr	r3, [fp, #-16]
    2964:	ldr	r3, [r3, #8]
    2968:	ldr	r3, [r3]
    296c:	str	r3, [fp, #-8]
    2970:	ldr	r3, [fp, #-8]
    2974:	cmp	r3, #0
    2978:	bne	2984 <data_dictionary_add_detection_rule+0x34>
    297c:	mov	r3, #1
    2980:	str	r3, [fp, #-8]
    2984:	bl	0 <__aeabi_read_tp>
    2988:	mov	r2, r0
    298c:	ldr	r3, [pc, #48]	; 29c4 <data_dictionary_add_detection_rule+0x74>
    2990:	ldr	r2, [r2, r3]
    2994:	ldr	r3, [fp, #-8]
    2998:	add	r3, r3, #2
    299c:	lsl	r3, r3, #2
    29a0:	add	r3, r2, r3
    29a4:	add	r3, r3, #4
    29a8:	ldr	r1, [fp, #-16]
    29ac:	mov	r0, r3
    29b0:	bl	0 <coda_detection_tree_add_rule>
    29b4:	mov	r3, r0
    29b8:	mov	r0, r3
    29bc:	sub	sp, fp, #4
    29c0:	pop	{fp, pc}
    29c4:	.word	0x00000000

000029c8 <data_dictionary_rebuild_detection_tree>:
    29c8:	push	{fp, lr}
    29cc:	add	fp, sp, #4
    29d0:	sub	sp, sp, #32
    29d4:	mov	r3, #0
    29d8:	str	r3, [fp, #-8]
    29dc:	b	2a6c <data_dictionary_rebuild_detection_tree+0xa4>
    29e0:	bl	0 <__aeabi_read_tp>
    29e4:	mov	r2, r0
    29e8:	ldr	r3, [pc, #488]	; 2bd8 <data_dictionary_rebuild_detection_tree+0x210>
    29ec:	ldr	r2, [r2, r3]
    29f0:	ldr	r3, [fp, #-8]
    29f4:	add	r3, r3, #2
    29f8:	lsl	r3, r3, #2
    29fc:	add	r3, r2, r3
    2a00:	ldr	r3, [r3, #4]
    2a04:	cmp	r3, #0
    2a08:	beq	2a60 <data_dictionary_rebuild_detection_tree+0x98>
    2a0c:	bl	0 <__aeabi_read_tp>
    2a10:	mov	r2, r0
    2a14:	ldr	r3, [pc, #444]	; 2bd8 <data_dictionary_rebuild_detection_tree+0x210>
    2a18:	ldr	r2, [r2, r3]
    2a1c:	ldr	r3, [fp, #-8]
    2a20:	add	r3, r3, #2
    2a24:	lsl	r3, r3, #2
    2a28:	add	r3, r2, r3
    2a2c:	ldr	r3, [r3, #4]
    2a30:	mov	r0, r3
    2a34:	bl	0 <coda_detection_tree_delete>
    2a38:	bl	0 <__aeabi_read_tp>
    2a3c:	mov	r2, r0
    2a40:	ldr	r3, [pc, #400]	; 2bd8 <data_dictionary_rebuild_detection_tree+0x210>
    2a44:	ldr	r2, [r2, r3]
    2a48:	ldr	r3, [fp, #-8]
    2a4c:	add	r3, r3, #2
    2a50:	lsl	r3, r3, #2
    2a54:	add	r3, r2, r3
    2a58:	mov	r2, #0
    2a5c:	str	r2, [r3, #4]
    2a60:	ldr	r3, [fp, #-8]
    2a64:	add	r3, r3, #1
    2a68:	str	r3, [fp, #-8]
    2a6c:	ldr	r3, [fp, #-8]
    2a70:	cmp	r3, #9
    2a74:	ble	29e0 <data_dictionary_rebuild_detection_tree+0x18>
    2a78:	mov	r3, #0
    2a7c:	str	r3, [fp, #-8]
    2a80:	b	2ba8 <data_dictionary_rebuild_detection_tree+0x1e0>
    2a84:	bl	0 <__aeabi_read_tp>
    2a88:	mov	r2, r0
    2a8c:	ldr	r3, [pc, #324]	; 2bd8 <data_dictionary_rebuild_detection_tree+0x210>
    2a90:	ldr	r3, [r2, r3]
    2a94:	ldr	r2, [r3, #4]
    2a98:	ldr	r3, [fp, #-8]
    2a9c:	lsl	r3, r3, #2
    2aa0:	add	r3, r2, r3
    2aa4:	ldr	r3, [r3]
    2aa8:	str	r3, [fp, #-24]	; 0xffffffe8
    2aac:	mov	r3, #0
    2ab0:	str	r3, [fp, #-12]
    2ab4:	b	2b88 <data_dictionary_rebuild_detection_tree+0x1c0>
    2ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2abc:	ldr	r2, [r3, #32]
    2ac0:	ldr	r3, [fp, #-12]
    2ac4:	lsl	r3, r3, #2
    2ac8:	add	r3, r2, r3
    2acc:	ldr	r3, [r3]
    2ad0:	str	r3, [fp, #-28]	; 0xffffffe4
    2ad4:	mov	r3, #0
    2ad8:	str	r3, [fp, #-16]
    2adc:	b	2b68 <data_dictionary_rebuild_detection_tree+0x1a0>
    2ae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2ae4:	ldr	r2, [r3, #12]
    2ae8:	ldr	r3, [fp, #-16]
    2aec:	lsl	r3, r3, #2
    2af0:	add	r3, r2, r3
    2af4:	ldr	r3, [r3]
    2af8:	str	r3, [fp, #-32]	; 0xffffffe0
    2afc:	mov	r3, #0
    2b00:	str	r3, [fp, #-20]	; 0xffffffec
    2b04:	b	2b48 <data_dictionary_rebuild_detection_tree+0x180>
    2b08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b0c:	ldr	r2, [r3, #20]
    2b10:	ldr	r3, [fp, #-20]	; 0xffffffec
    2b14:	lsl	r3, r3, #2
    2b18:	add	r3, r2, r3
    2b1c:	ldr	r3, [r3]
    2b20:	mov	r0, r3
    2b24:	bl	2950 <data_dictionary_add_detection_rule>
    2b28:	mov	r3, r0
    2b2c:	cmp	r3, #0
    2b30:	beq	2b3c <data_dictionary_rebuild_detection_tree+0x174>
    2b34:	mvn	r3, #0
    2b38:	b	2bcc <data_dictionary_rebuild_detection_tree+0x204>
    2b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2b40:	add	r3, r3, #1
    2b44:	str	r3, [fp, #-20]	; 0xffffffec
    2b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b4c:	ldr	r2, [r3, #16]
    2b50:	ldr	r3, [fp, #-20]	; 0xffffffec
    2b54:	cmp	r2, r3
    2b58:	bgt	2b08 <data_dictionary_rebuild_detection_tree+0x140>
    2b5c:	ldr	r3, [fp, #-16]
    2b60:	add	r3, r3, #1
    2b64:	str	r3, [fp, #-16]
    2b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b6c:	ldr	r2, [r3, #8]
    2b70:	ldr	r3, [fp, #-16]
    2b74:	cmp	r2, r3
    2b78:	bgt	2ae0 <data_dictionary_rebuild_detection_tree+0x118>
    2b7c:	ldr	r3, [fp, #-12]
    2b80:	add	r3, r3, #1
    2b84:	str	r3, [fp, #-12]
    2b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b8c:	ldr	r2, [r3, #28]
    2b90:	ldr	r3, [fp, #-12]
    2b94:	cmp	r2, r3
    2b98:	bgt	2ab8 <data_dictionary_rebuild_detection_tree+0xf0>
    2b9c:	ldr	r3, [fp, #-8]
    2ba0:	add	r3, r3, #1
    2ba4:	str	r3, [fp, #-8]
    2ba8:	bl	0 <__aeabi_read_tp>
    2bac:	mov	r2, r0
    2bb0:	ldr	r3, [pc, #32]	; 2bd8 <data_dictionary_rebuild_detection_tree+0x210>
    2bb4:	ldr	r3, [r2, r3]
    2bb8:	ldr	r2, [r3]
    2bbc:	ldr	r3, [fp, #-8]
    2bc0:	cmp	r2, r3
    2bc4:	bgt	2a84 <data_dictionary_rebuild_detection_tree+0xbc>
    2bc8:	mov	r3, #0
    2bcc:	mov	r0, r3
    2bd0:	sub	sp, fp, #4
    2bd4:	pop	{fp, pc}
    2bd8:	.word	0x00000000

00002bdc <coda_data_dictionary_get_definition>:
    2bdc:	push	{fp, lr}
    2be0:	add	fp, sp, #4
    2be4:	sub	sp, sp, #32
    2be8:	str	r0, [fp, #-24]	; 0xffffffe8
    2bec:	str	r1, [fp, #-28]	; 0xffffffe4
    2bf0:	str	r2, [fp, #-32]	; 0xffffffe0
    2bf4:	str	r3, [fp, #-36]	; 0xffffffdc
    2bf8:	mov	r3, #0
    2bfc:	str	r3, [fp, #-8]
    2c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c04:	bl	2688 <coda_data_dictionary_get_product_class>
    2c08:	str	r0, [fp, #-12]
    2c0c:	ldr	r3, [fp, #-12]
    2c10:	cmp	r3, #0
    2c14:	bne	2c20 <coda_data_dictionary_get_definition+0x44>
    2c18:	mvn	r3, #0
    2c1c:	b	2c94 <coda_data_dictionary_get_definition+0xb8>
    2c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2c24:	ldr	r0, [fp, #-12]
    2c28:	bl	1d2c <coda_product_class_get_product_type>
    2c2c:	str	r0, [fp, #-16]
    2c30:	ldr	r3, [fp, #-16]
    2c34:	cmp	r3, #0
    2c38:	bne	2c44 <coda_data_dictionary_get_definition+0x68>
    2c3c:	mvn	r3, #0
    2c40:	b	2c94 <coda_data_dictionary_get_definition+0xb8>
    2c44:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c48:	cmp	r3, #0
    2c4c:	bge	2c60 <coda_data_dictionary_get_definition+0x84>
    2c50:	ldr	r0, [fp, #-16]
    2c54:	bl	15b0 <coda_product_type_get_latest_product_definition>
    2c58:	str	r0, [fp, #-8]
    2c5c:	b	2c70 <coda_data_dictionary_get_definition+0x94>
    2c60:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2c64:	ldr	r0, [fp, #-16]
    2c68:	bl	14fc <coda_product_type_get_product_definition_by_version>
    2c6c:	str	r0, [fp, #-8]
    2c70:	ldr	r3, [fp, #-8]
    2c74:	cmp	r3, #0
    2c78:	bne	2c84 <coda_data_dictionary_get_definition+0xa8>
    2c7c:	mvn	r3, #0
    2c80:	b	2c94 <coda_data_dictionary_get_definition+0xb8>
    2c84:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2c88:	ldr	r2, [fp, #-8]
    2c8c:	str	r2, [r3]
    2c90:	mov	r3, #0
    2c94:	mov	r0, r3
    2c98:	sub	sp, fp, #4
    2c9c:	pop	{fp, pc}

00002ca0 <coda_data_dictionary_get_detection_tree>:
    2ca0:	push	{fp, lr}
    2ca4:	add	fp, sp, #4
    2ca8:	sub	sp, sp, #8
    2cac:	str	r0, [fp, #-8]
    2cb0:	ldr	r3, [fp, #-8]
    2cb4:	cmp	r3, #0
    2cb8:	bne	2cc4 <coda_data_dictionary_get_detection_tree+0x24>
    2cbc:	mov	r3, #1
    2cc0:	str	r3, [fp, #-8]
    2cc4:	bl	0 <__aeabi_read_tp>
    2cc8:	mov	r2, r0
    2ccc:	ldr	r3, [pc, #32]	; 2cf4 <coda_data_dictionary_get_detection_tree+0x54>
    2cd0:	ldr	r2, [r2, r3]
    2cd4:	ldr	r3, [fp, #-8]
    2cd8:	add	r3, r3, #2
    2cdc:	lsl	r3, r3, #2
    2ce0:	add	r3, r2, r3
    2ce4:	ldr	r3, [r3, #4]
    2ce8:	mov	r0, r3
    2cec:	sub	sp, fp, #4
    2cf0:	pop	{fp, pc}
    2cf4:	.word	0x00000000

00002cf8 <coda_data_dictionary_find_definition_for_product>:
    2cf8:	push	{fp, lr}
    2cfc:	add	fp, sp, #4
    2d00:	sub	sp, sp, #528	; 0x210
    2d04:	str	r0, [fp, #-528]	; 0xfffffdf0
    2d08:	str	r1, [fp, #-532]	; 0xfffffdec
    2d0c:	sub	r3, fp, #524	; 0x20c
    2d10:	ldr	r1, [fp, #-528]	; 0xfffffdf0
    2d14:	mov	r0, r3
    2d18:	bl	0 <coda_cursor_set_product>
    2d1c:	mov	r3, r0
    2d20:	cmp	r3, #0
    2d24:	beq	2d30 <coda_data_dictionary_find_definition_for_product+0x38>
    2d28:	mvn	r3, #0
    2d2c:	b	2d54 <coda_data_dictionary_find_definition_for_product+0x5c>
    2d30:	ldr	r3, [fp, #-528]	; 0xfffffdf0
    2d34:	ldr	r3, [r3, #16]
    2d38:	mov	r0, r3
    2d3c:	bl	2ca0 <coda_data_dictionary_get_detection_tree>
    2d40:	sub	r3, fp, #524	; 0x20c
    2d44:	ldr	r2, [fp, #-532]	; 0xfffffdec
    2d48:	mov	r1, r3
    2d4c:	bl	0 <coda_evaluate_detection_node>
    2d50:	mov	r3, r0
    2d54:	mov	r0, r3
    2d58:	sub	sp, fp, #4
    2d5c:	pop	{fp, pc}

00002d60 <coda_data_dictionary_init>:
    2d60:	push	{fp, lr}
    2d64:	add	fp, sp, #4
    2d68:	bl	0 <__aeabi_read_tp>
    2d6c:	mov	r2, r0
    2d70:	ldr	r3, [pc, #96]	; 2dd8 <coda_data_dictionary_init+0x78>
    2d74:	ldr	r3, [r2, r3]
    2d78:	cmp	r3, #0
    2d7c:	beq	2d94 <coda_data_dictionary_init+0x34>
    2d80:	ldr	r3, [pc, #84]	; 2ddc <coda_data_dictionary_init+0x7c>
    2d84:	mov	r2, #1200	; 0x4b0
    2d88:	ldr	r1, [pc, #80]	; 2de0 <coda_data_dictionary_init+0x80>
    2d8c:	ldr	r0, [pc, #80]	; 2de4 <coda_data_dictionary_init+0x84>
    2d90:	bl	0 <__assert_fail>
    2d94:	bl	2168 <coda_data_dictionary_new>
    2d98:	mov	r1, r0
    2d9c:	bl	0 <__aeabi_read_tp>
    2da0:	mov	r2, r0
    2da4:	ldr	r3, [pc, #44]	; 2dd8 <coda_data_dictionary_init+0x78>
    2da8:	str	r1, [r2, r3]
    2dac:	bl	0 <__aeabi_read_tp>
    2db0:	mov	r2, r0
    2db4:	ldr	r3, [pc, #28]	; 2dd8 <coda_data_dictionary_init+0x78>
    2db8:	ldr	r3, [r2, r3]
    2dbc:	cmp	r3, #0
    2dc0:	bne	2dcc <coda_data_dictionary_init+0x6c>
    2dc4:	mvn	r3, #0
    2dc8:	b	2dd0 <coda_data_dictionary_init+0x70>
    2dcc:	mov	r3, #0
    2dd0:	mov	r0, r3
    2dd4:	pop	{fp, pc}
    2dd8:	.word	0x00000000
    2ddc:	.word	0x00000a24
    2de0:	.word	0x00000000
    2de4:	.word	0x00000874

00002de8 <coda_data_dictionary_done>:
    2de8:	push	{fp, lr}
    2dec:	add	fp, sp, #4
    2df0:	bl	0 <__aeabi_read_tp>
    2df4:	mov	r2, r0
    2df8:	ldr	r3, [pc, #80]	; 2e50 <coda_data_dictionary_done+0x68>
    2dfc:	ldr	r3, [r2, r3]
    2e00:	cmp	r3, #0
    2e04:	bne	2e1c <coda_data_dictionary_done+0x34>
    2e08:	ldr	r3, [pc, #68]	; 2e54 <coda_data_dictionary_done+0x6c>
    2e0c:	ldr	r2, [pc, #68]	; 2e58 <coda_data_dictionary_done+0x70>
    2e10:	ldr	r1, [pc, #68]	; 2e5c <coda_data_dictionary_done+0x74>
    2e14:	ldr	r0, [pc, #68]	; 2e60 <coda_data_dictionary_done+0x78>
    2e18:	bl	0 <__assert_fail>
    2e1c:	bl	0 <__aeabi_read_tp>
    2e20:	mov	r2, r0
    2e24:	ldr	r3, [pc, #36]	; 2e50 <coda_data_dictionary_done+0x68>
    2e28:	ldr	r3, [r2, r3]
    2e2c:	mov	r0, r3
    2e30:	bl	2024 <delete_data_dictionary>
    2e34:	bl	0 <__aeabi_read_tp>
    2e38:	mov	r1, r0
    2e3c:	ldr	r3, [pc, #12]	; 2e50 <coda_data_dictionary_done+0x68>
    2e40:	mov	r2, #0
    2e44:	str	r2, [r1, r3]
    2e48:	nop			; (mov r0, r0)
    2e4c:	pop	{fp, pc}
    2e50:	.word	0x00000000
    2e54:	.word	0x00000a40
    2e58:	.word	0x000004bd
    2e5c:	.word	0x00000000
    2e60:	.word	0x00000898
