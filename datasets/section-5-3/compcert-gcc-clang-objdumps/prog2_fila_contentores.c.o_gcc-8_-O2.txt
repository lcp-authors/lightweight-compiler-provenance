
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/fila_contentores.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fila_novo_elemento>:
   0:	str	r4, [sp, #-8]!
   4:	mov	r4, r0
   8:	mov	r0, #8
   c:	str	lr, [sp, #4]
  10:	bl	0 <malloc>
  14:	subs	r3, r0, #0
  18:	beq	30 <fila_novo_elemento+0x30>
  1c:	cmp	r4, #0
  20:	str	r4, [r3]
  24:	movne	r2, #0
  28:	strne	r2, [r3, #4]
  2c:	beq	40 <fila_novo_elemento+0x40>
  30:	ldr	r4, [sp]
  34:	add	sp, sp, #4
  38:	mov	r0, r3
  3c:	pop	{pc}		; (ldr pc, [sp], #4)
  40:	bl	0 <free>
  44:	mov	r3, r4
  48:	b	30 <fila_novo_elemento+0x30>

0000004c <fila_nova>:
  4c:	mov	r0, #8
  50:	str	r4, [sp, #-8]!
  54:	str	lr, [sp, #4]
  58:	bl	0 <malloc>
  5c:	cmp	r0, #0
  60:	beq	70 <fila_nova+0x24>
  64:	mov	r3, #0
  68:	str	r3, [r0]
  6c:	str	r3, [r0, #4]
  70:	ldr	r4, [sp]
  74:	add	sp, sp, #4
  78:	pop	{pc}		; (ldr pc, [sp], #4)

0000007c <fila_apaga>:
  7c:	strd	r4, [sp, #-16]!
  80:	subs	r5, r0, #0
  84:	str	r6, [sp, #8]
  88:	str	lr, [sp, #12]
  8c:	bne	a8 <fila_apaga+0x2c>
  90:	b	cc <fila_apaga+0x50>
  94:	ldm	r4, {r0, r3}
  98:	str	r3, [r5]
  9c:	bl	0 <pilha_apaga>
  a0:	mov	r0, r4
  a4:	bl	0 <free>
  a8:	ldr	r4, [r5]
  ac:	cmp	r4, #0
  b0:	bne	94 <fila_apaga+0x18>
  b4:	mov	r0, r5
  b8:	ldrd	r4, [sp]
  bc:	ldr	r6, [sp, #8]
  c0:	ldr	lr, [sp, #12]
  c4:	add	sp, sp, #16
  c8:	b	0 <free>
  cc:	ldrd	r4, [sp]
  d0:	ldr	r6, [sp, #8]
  d4:	add	sp, sp, #12
  d8:	pop	{pc}		; (ldr pc, [sp], #4)

000000dc <fila_tamanho>:
  dc:	cmp	r0, #0
  e0:	ldrne	r0, [r0, #4]
  e4:	mvneq	r0, #0
  e8:	bx	lr

000000ec <fila_front>:
  ec:	subs	r3, r0, #0
  f0:	beq	10c <fila_front+0x20>
  f4:	ldr	r0, [r3, #4]
  f8:	cmp	r0, #0
  fc:	beq	110 <fila_front+0x24>
 100:	ldr	r3, [r3]
 104:	ldr	r0, [r3]
 108:	bx	lr
 10c:	mov	r0, r3
 110:	bx	lr

00000114 <fila_back>:
 114:	subs	r3, r0, #0
 118:	beq	148 <fila_back+0x34>
 11c:	ldr	r0, [r3, #4]
 120:	cmp	r0, #0
 124:	beq	14c <fila_back+0x38>
 128:	ldr	r2, [r3]
 12c:	b	134 <fila_back+0x20>
 130:	mov	r2, r3
 134:	ldr	r3, [r2, #4]
 138:	cmp	r3, #0
 13c:	bne	130 <fila_back+0x1c>
 140:	ldr	r0, [r2]
 144:	bx	lr
 148:	mov	r0, r3
 14c:	bx	lr

00000150 <fila_push>:
 150:	strd	r4, [sp, #-16]!
 154:	subs	r5, r0, #0
 158:	str	r6, [sp, #8]
 15c:	str	lr, [sp, #12]
 160:	beq	190 <fila_push+0x40>
 164:	mov	r0, r1
 168:	ldr	r4, [r5]
 16c:	bl	0 <fila_novo_elemento>
 170:	cmp	r0, #0
 174:	beq	190 <fila_push+0x40>
 178:	ldr	r3, [r5, #4]
 17c:	cmp	r4, #0
 180:	streq	r0, [r5]
 184:	add	r3, r3, #1
 188:	str	r3, [r5, #4]
 18c:	bne	1a4 <fila_push+0x54>
 190:	ldrd	r4, [sp]
 194:	ldr	r6, [sp, #8]
 198:	add	sp, sp, #12
 19c:	pop	{pc}		; (ldr pc, [sp], #4)
 1a0:	mov	r4, r3
 1a4:	ldr	r3, [r4, #4]
 1a8:	cmp	r3, #0
 1ac:	bne	1a0 <fila_push+0x50>
 1b0:	str	r0, [r4, #4]
 1b4:	ldrd	r4, [sp]
 1b8:	ldr	r6, [sp, #8]
 1bc:	add	sp, sp, #12
 1c0:	pop	{pc}		; (ldr pc, [sp], #4)

000001c4 <fila_pop>:
 1c4:	subs	r3, r0, #0
 1c8:	bxeq	lr
 1cc:	ldr	r2, [r3, #4]
 1d0:	cmp	r2, #0
 1d4:	bxeq	lr
 1d8:	str	r4, [sp, #-8]!
 1dc:	sub	r2, r2, #1
 1e0:	ldr	r4, [r3]
 1e4:	ldr	r0, [r4]
 1e8:	str	lr, [sp, #4]
 1ec:	str	r2, [r3, #4]
 1f0:	ldr	r2, [r4, #4]
 1f4:	str	r2, [r3]
 1f8:	bl	0 <pilha_apaga>
 1fc:	mov	r0, r4
 200:	ldr	r4, [sp]
 204:	ldr	lr, [sp, #4]
 208:	add	sp, sp, #8
 20c:	b	0 <free>
