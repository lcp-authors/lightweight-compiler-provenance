
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_c_json_parser>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	add	fp, sp, #28
       8:	sub	sp, sp, #4
       c:	vpush	{d8-d9}
      10:	sub	sp, sp, #456	; 0x1c8
      14:	mov	r4, r0
      18:	ldr	r0, [r0, #208]	; 0xd0
      1c:	movw	r1, #0
      20:	movt	r1, #0
      24:	ldr	r2, [r0, #164]	; 0xa4
      28:	mov	r0, r4
      2c:	bl	2064 <println>
      30:	ldr	r0, [r4, #208]	; 0xd0
      34:	movw	r1, #0
      38:	movt	r1, #0
      3c:	ldr	r2, [r0, #164]	; 0xa4
      40:	mov	r0, r4
      44:	bl	2064 <println>
      48:	movw	r5, #0
      4c:	mov	r0, r4
      50:	movt	r5, #0
      54:	mov	r1, r5
      58:	bl	2064 <println>
      5c:	movw	r1, #0
      60:	mov	r0, r4
      64:	movt	r1, #0
      68:	bl	2064 <println>
      6c:	mov	r0, r4
      70:	mov	r1, r5
      74:	bl	2064 <println>
      78:	movw	r1, #0
      7c:	mov	r0, r4
      80:	movt	r1, #0
      84:	bl	2064 <println>
      88:	movw	r1, #0
      8c:	movw	r2, #0
      90:	mov	r0, r4
      94:	movt	r1, #0
      98:	movt	r2, #0
      9c:	bl	0 <__flatcc_fb_gen_c_includes>
      a0:	ldr	r0, [r4, #212]	; 0xd4
      a4:	ldr	r0, [r0, #140]	; 0x8c
      a8:	cmp	r0, #0
      ac:	beq	c8 <__flatcc_fb_gen_c_json_parser+0xc8>
      b0:	ldr	r3, [r4, #204]	; 0xcc
      b4:	movw	r0, #0
      b8:	mov	r1, #36	; 0x24
      bc:	mov	r2, #1
      c0:	movt	r0, #0
      c4:	bl	0 <fwrite>
      c8:	movw	r1, #0
      cc:	mov	r0, r4
      d0:	movt	r1, #0
      d4:	bl	2064 <println>
      d8:	ldr	r6, [r4, #208]	; 0xd0
      dc:	add	r0, sp, #232	; 0xe8
      e0:	mov	r1, #0
      e4:	mov	r2, #220	; 0xdc
      e8:	ldr	r5, [r6, #52]	; 0x34
      ec:	bl	0 <memset>
      f0:	cmp	r5, #0
      f4:	beq	1fc <__flatcc_fb_gen_c_json_parser+0x1fc>
      f8:	ldrh	r0, [r5, #8]
      fc:	cmp	r0, #1
     100:	bhi	1fc <__flatcc_fb_gen_c_json_parser+0x1fc>
     104:	movw	r1, #0
     108:	mov	r0, r4
     10c:	movt	r1, #0
     110:	bl	2064 <println>
     114:	movw	r1, #0
     118:	mov	r0, r4
     11c:	movt	r1, #0
     120:	bl	2064 <println>
     124:	movw	r1, #0
     128:	mov	r0, r4
     12c:	movt	r1, #0
     130:	bl	2064 <println>
     134:	movw	r1, #0
     138:	mov	r0, r4
     13c:	movt	r1, #0
     140:	bl	2064 <println>
     144:	movw	r1, #0
     148:	mov	r0, r4
     14c:	movt	r1, #0
     150:	bl	2064 <println>
     154:	movw	r1, #0
     158:	mov	r0, r4
     15c:	movt	r1, #0
     160:	bl	2064 <println>
     164:	movw	r1, #0
     168:	mov	r0, r4
     16c:	movt	r1, #0
     170:	bl	2064 <println>
     174:	movw	r1, #0
     178:	mov	r0, r4
     17c:	movt	r1, #0
     180:	bl	2064 <println>
     184:	movw	r1, #0
     188:	mov	r0, r4
     18c:	movt	r1, #0
     190:	bl	2064 <println>
     194:	ldr	r0, [r4, #208]	; 0xd0
     198:	movw	r1, #0
     19c:	movt	r1, #0
     1a0:	ldr	r2, [r0, #160]	; 0xa0
     1a4:	mov	r0, r4
     1a8:	bl	2064 <println>
     1ac:	ldr	r0, [r4, #220]	; 0xdc
     1b0:	movw	r1, #0
     1b4:	movt	r1, #0
     1b8:	add	r0, r0, #2
     1bc:	str	r0, [r4, #220]	; 0xdc
     1c0:	mov	r0, r4
     1c4:	bl	2064 <println>
     1c8:	ldr	r0, [r4, #220]	; 0xdc
     1cc:	cmp	r0, #0
     1d0:	beq	1f3c <__flatcc_fb_gen_c_json_parser+0x1f3c>
     1d4:	subs	r1, r0, #1
     1d8:	str	r1, [r4, #220]	; 0xdc
     1dc:	beq	1f3c <__flatcc_fb_gen_c_json_parser+0x1f3c>
     1e0:	movw	r1, #0
     1e4:	sub	r0, r0, #2
     1e8:	movt	r1, #0
     1ec:	str	r0, [r4, #220]	; 0xdc
     1f0:	mov	r0, r4
     1f4:	bl	2064 <println>
     1f8:	ldr	r6, [r4, #208]	; 0xd0
     1fc:	ldr	r5, [r6, #40]	; 0x28
     200:	cmp	r5, #0
     204:	beq	394 <__flatcc_fb_gen_c_json_parser+0x394>
     208:	movw	r7, #0
     20c:	movw	r8, #0
     210:	movw	r9, #0
     214:	movw	sl, #0
     218:	add	r6, sp, #232	; 0xe8
     21c:	movt	r7, #0
     220:	movt	r8, #0
     224:	movt	r9, #0
     228:	movt	sl, #0
     22c:	b	260 <__flatcc_fb_gen_c_json_parser+0x260>
     230:	ldr	r0, [r5, #12]
     234:	mov	r1, r5
     238:	mov	r2, r6
     23c:	bl	0 <__flatcc_fb_scoped_symbol_name>
     240:	movw	r1, #0
     244:	mov	r0, r4
     248:	movt	r1, #0
     24c:	mov	r2, r6
     250:	bl	2064 <println>
     254:	ldr	r5, [r5]
     258:	cmp	r5, #0
     25c:	beq	390 <__flatcc_fb_gen_c_json_parser+0x390>
     260:	ldrh	r0, [r5, #8]
     264:	cmp	r0, #4
     268:	bhi	254 <__flatcc_fb_gen_c_json_parser+0x254>
     26c:	add	r1, pc, #0
     270:	ldr	pc, [r1, r0, lsl #2]
     274:	.word	0x00000230
     278:	.word	0x00000288
     27c:	.word	0x00000254
     280:	.word	0x000002bc
     284:	.word	0x00000314
     288:	ldr	r0, [r5, #12]
     28c:	mov	r1, r5
     290:	mov	r2, r6
     294:	bl	0 <__flatcc_fb_scoped_symbol_name>
     298:	movw	r1, #0
     29c:	mov	r0, r4
     2a0:	mov	r2, r6
     2a4:	movt	r1, #0
     2a8:	bl	2064 <println>
     2ac:	movw	r1, #0
     2b0:	mov	r0, r4
     2b4:	movt	r1, #0
     2b8:	b	24c <__flatcc_fb_gen_c_json_parser+0x24c>
     2bc:	ldr	r0, [r5, #12]
     2c0:	mov	r1, r5
     2c4:	mov	r2, r6
     2c8:	bl	0 <__flatcc_fb_scoped_symbol_name>
     2cc:	mov	r0, r4
     2d0:	mov	r1, r7
     2d4:	mov	r2, r6
     2d8:	bl	2064 <println>
     2dc:	ldr	r0, [r4, #220]	; 0xdc
     2e0:	mov	r1, r8
     2e4:	mov	r2, r6
     2e8:	add	r0, r0, #2
     2ec:	str	r0, [r4, #220]	; 0xdc
     2f0:	mov	r0, r4
     2f4:	bl	2064 <println>
     2f8:	ldr	r0, [r4, #220]	; 0xdc
     2fc:	cmp	r0, #0
     300:	beq	1c94 <__flatcc_fb_gen_c_json_parser+0x1c94>
     304:	subs	r1, r0, #1
     308:	str	r1, [r4, #220]	; 0xdc
     30c:	bne	384 <__flatcc_fb_gen_c_json_parser+0x384>
     310:	b	1c94 <__flatcc_fb_gen_c_json_parser+0x1c94>
     314:	ldr	r0, [r5, #12]
     318:	mov	r1, r5
     31c:	mov	r2, r6
     320:	bl	0 <__flatcc_fb_scoped_symbol_name>
     324:	mov	r0, r4
     328:	mov	r1, r9
     32c:	mov	r2, r6
     330:	bl	2064 <println>
     334:	mov	r0, r4
     338:	mov	r1, sl
     33c:	mov	r2, r6
     340:	bl	2064 <println>
     344:	mov	r0, r4
     348:	mov	r1, r7
     34c:	mov	r2, r6
     350:	bl	2064 <println>
     354:	ldr	r0, [r4, #220]	; 0xdc
     358:	mov	r1, r8
     35c:	add	r0, r0, #2
     360:	str	r0, [r4, #220]	; 0xdc
     364:	mov	r0, r4
     368:	bl	2064 <println>
     36c:	ldr	r0, [r4, #220]	; 0xdc
     370:	cmp	r0, #0
     374:	beq	1ca8 <__flatcc_fb_gen_c_json_parser+0x1ca8>
     378:	subs	r1, r0, #1
     37c:	str	r1, [r4, #220]	; 0xdc
     380:	beq	1ca8 <__flatcc_fb_gen_c_json_parser+0x1ca8>
     384:	sub	r0, r0, #2
     388:	str	r0, [r4, #220]	; 0xdc
     38c:	b	254 <__flatcc_fb_gen_c_json_parser+0x254>
     390:	ldr	r6, [r4, #208]	; 0xd0
     394:	ldr	r0, [r6, #60]	; 0x3c
     398:	movw	r1, #0
     39c:	mov	r2, r4
     3a0:	movt	r1, #0
     3a4:	bl	0 <fb_scope_table_visit>
     3a8:	ldr	r0, [r4, #208]	; 0xd0
     3ac:	movw	r1, #0
     3b0:	movt	r1, #0
     3b4:	ldr	r2, [r0, #160]	; 0xa0
     3b8:	mov	r0, r4
     3bc:	bl	2064 <println>
     3c0:	ldr	r0, [r4, #220]	; 0xdc
     3c4:	movw	r1, #0
     3c8:	movt	r1, #0
     3cc:	add	r0, r0, #2
     3d0:	str	r0, [r4, #220]	; 0xdc
     3d4:	mov	r0, r4
     3d8:	bl	2064 <println>
     3dc:	ldr	r0, [r4, #220]	; 0xdc
     3e0:	cmp	r0, #0
     3e4:	beq	1ef4 <__flatcc_fb_gen_c_json_parser+0x1ef4>
     3e8:	subs	r1, r0, #1
     3ec:	str	r1, [r4, #220]	; 0xdc
     3f0:	beq	1ef4 <__flatcc_fb_gen_c_json_parser+0x1ef4>
     3f4:	movw	r1, #0
     3f8:	sub	r0, r0, #2
     3fc:	movt	r1, #0
     400:	str	r0, [r4, #220]	; 0xdc
     404:	mov	r0, r4
     408:	bl	2064 <println>
     40c:	ldr	r0, [r4, #208]	; 0xd0
     410:	ldr	sl, [r0, #40]	; 0x28
     414:	cmp	sl, #0
     418:	beq	12b8 <__flatcc_fb_gen_c_json_parser+0x12b8>
     41c:	movw	r9, #0
     420:	vmov.i32	q4, #0	; 0x00000000
     424:	add	r8, sp, #8
     428:	add	r5, sp, #232	; 0xe8
     42c:	movt	r9, #0
     430:	b	454 <__flatcc_fb_gen_c_json_parser+0x454>
     434:	mov	r0, r4
     438:	mov	r1, sl
     43c:	bl	21b4 <gen_enum_parser>
     440:	movw	r9, #0
     444:	movt	r9, #0
     448:	ldr	sl, [sl]
     44c:	cmp	sl, #0
     450:	beq	12b4 <__flatcc_fb_gen_c_json_parser+0x12b4>
     454:	ldrh	r0, [sl, #8]
     458:	cmp	r0, #4
     45c:	bhi	448 <__flatcc_fb_gen_c_json_parser+0x448>
     460:	add	r1, pc, #4
     464:	add	r7, sl, #96	; 0x60
     468:	ldr	pc, [r1, r0, lsl #2]
     46c:	.word	0x00000480
     470:	.word	0x0000063c
     474:	.word	0x00000448
     478:	.word	0x00000434
     47c:	.word	0x000007d8
     480:	mov	r1, #12
     484:	vst1.64	{d8-d9}, [r8], r1
     488:	vst1.32	{d8-d9}, [r8]
     48c:	ldrh	r0, [sl, #8]
     490:	cmp	r0, #0
     494:	bne	1cbc <__flatcc_fb_gen_c_json_parser+0x1cbc>
     498:	mov	r0, sl
     49c:	add	r1, sp, #228	; 0xe4
     4a0:	bl	2784 <build_compound_dict>
     4a4:	ldr	r8, [sp, #228]	; 0xe4
     4a8:	movw	r9, #0
     4ac:	cmp	r0, #0
     4b0:	str	r0, [sp, #8]
     4b4:	movt	r9, #0
     4b8:	bne	4c4 <__flatcc_fb_gen_c_json_parser+0x4c4>
     4bc:	cmp	r8, #1
     4c0:	bge	1cd4 <__flatcc_fb_gen_c_json_parser+0x1cd4>
     4c4:	movw	r1, #0
     4c8:	mov	r5, #0
     4cc:	cmp	r8, #1
     4d0:	movt	r1, #0
     4d4:	str	r5, [sp, #24]
     4d8:	str	sl, [sp, #20]
     4dc:	str	r5, [sp, #28]
     4e0:	str	r1, [sp, #16]
     4e4:	movw	r1, #0
     4e8:	movt	r1, #0
     4ec:	str	r1, [sp, #12]
     4f0:	blt	570 <__flatcc_fb_gen_c_json_parser+0x570>
     4f4:	mov	r5, #0
     4f8:	cmp	r8, #5
     4fc:	mov	r1, #0
     500:	bcc	54c <__flatcc_fb_gen_c_json_parser+0x54c>
     504:	ands	r1, r8, #3
     508:	vmov.i32	q8, #0	; 0x00000000
     50c:	add	r2, r0, #12
     510:	movweq	r1, #4
     514:	sub	r1, r8, r1
     518:	mov	r3, r1
     51c:	vld4.32	{d18,d20,d22,d24}, [r2]!
     520:	subs	r3, r3, #4
     524:	vld4.32	{d19,d21,d23,d25}, [r2]!
     528:	vceq.i32	q9, q9, #0
     52c:	vmvn	q9, q9
     530:	vsub.i32	q8, q8, q9
     534:	bne	51c <__flatcc_fb_gen_c_json_parser+0x51c>
     538:	vext.8	q9, q8, q8, #8
     53c:	vadd.i32	q8, q8, q9
     540:	vdup.32	q9, d16[1]
     544:	vadd.i32	q8, q8, q9
     548:	vmov.32	r5, d16[0]
     54c:	add	r0, r0, r1, lsl #4
     550:	sub	r2, r8, r1
     554:	add	r0, r0, #12
     558:	ldr	r1, [r0], #16
     55c:	cmp	r1, #0
     560:	addne	r5, r5, #1
     564:	subs	r2, r2, #1
     568:	bne	558 <__flatcc_fb_gen_c_json_parser+0x558>
     56c:	str	r5, [sp, #28]
     570:	add	r6, sp, #232	; 0xe8
     574:	mov	r1, #0
     578:	mov	r2, #220	; 0xdc
     57c:	mov	r0, r6
     580:	bl	0 <memset>
     584:	ldr	r0, [sl, #12]
     588:	mov	r1, sl
     58c:	mov	r2, r6
     590:	bl	0 <__flatcc_fb_scoped_symbol_name>
     594:	movw	r1, #0
     598:	mov	r0, r4
     59c:	mov	r2, r6
     5a0:	movt	r1, #0
     5a4:	bl	2064 <println>
     5a8:	mov	r0, r4
     5ac:	mov	r1, r9
     5b0:	bl	2064 <println>
     5b4:	ldr	r0, [r4, #220]	; 0xdc
     5b8:	movw	r1, #0
     5bc:	movt	r1, #0
     5c0:	add	r0, r0, #1
     5c4:	str	r0, [r4, #220]	; 0xdc
     5c8:	mov	r0, r4
     5cc:	bl	2064 <println>
     5d0:	cmp	r8, #1
     5d4:	blt	61c <__flatcc_fb_gen_c_json_parser+0x61c>
     5d8:	movw	r1, #0
     5dc:	mov	r0, r4
     5e0:	movt	r1, #0
     5e4:	bl	2064 <println>
     5e8:	movw	r1, #0
     5ec:	mov	r0, r4
     5f0:	movt	r1, #0
     5f4:	bl	2064 <println>
     5f8:	movw	r1, #0
     5fc:	mov	r0, r4
     600:	movt	r1, #0
     604:	bl	2064 <println>
     608:	movw	r1, #0
     60c:	mov	r0, r4
     610:	movt	r1, #0
     614:	bl	2064 <println>
     618:	ldr	r5, [sp, #28]
     61c:	cmp	r5, #0
     620:	beq	c80 <__flatcc_fb_gen_c_json_parser+0xc80>
     624:	movw	r1, #0
     628:	mov	r0, r4
     62c:	movt	r1, #0
     630:	bl	2064 <println>
     634:	ldr	r9, [sp, #28]
     638:	b	c84 <__flatcc_fb_gen_c_json_parser+0xc84>
     63c:	mov	r0, r8
     640:	mov	r1, #12
     644:	vst1.64	{d8-d9}, [r0], r1
     648:	vst1.32	{d8-d9}, [r0]
     64c:	ldrh	r0, [sl, #8]
     650:	cmp	r0, #1
     654:	bne	1d24 <__flatcc_fb_gen_c_json_parser+0x1d24>
     658:	mov	r0, sl
     65c:	add	r1, sp, #228	; 0xe4
     660:	bl	2784 <build_compound_dict>
     664:	ldr	r5, [sp, #228]	; 0xe4
     668:	movw	r9, #0
     66c:	cmp	r0, #0
     670:	str	r0, [sp, #8]
     674:	movt	r9, #0
     678:	bne	684 <__flatcc_fb_gen_c_json_parser+0x684>
     67c:	cmp	r5, #1
     680:	bge	1d3c <__flatcc_fb_gen_c_json_parser+0x1d3c>
     684:	mov	r0, #1
     688:	add	r6, sp, #232	; 0xe8
     68c:	mov	r1, #0
     690:	mov	r2, #220	; 0xdc
     694:	str	r0, [sp, #24]
     698:	movw	r0, #0
     69c:	str	sl, [sp, #20]
     6a0:	movt	r0, #0
     6a4:	str	r0, [sp, #16]
     6a8:	movw	r0, #0
     6ac:	movt	r0, #0
     6b0:	str	r0, [sp, #12]
     6b4:	mov	r0, r6
     6b8:	bl	0 <memset>
     6bc:	ldr	r0, [sl, #12]
     6c0:	mov	r1, sl
     6c4:	mov	r2, r6
     6c8:	bl	0 <__flatcc_fb_scoped_symbol_name>
     6cc:	movw	r1, #0
     6d0:	mov	r0, r4
     6d4:	mov	r2, r6
     6d8:	movt	r1, #0
     6dc:	bl	2064 <println>
     6e0:	movw	r1, #0
     6e4:	mov	r0, r4
     6e8:	movt	r1, #0
     6ec:	bl	2064 <println>
     6f0:	ldr	r0, [r4, #220]	; 0xdc
     6f4:	movw	r1, #0
     6f8:	movt	r1, #0
     6fc:	add	r0, r0, #1
     700:	str	r0, [r4, #220]	; 0xdc
     704:	mov	r0, r4
     708:	bl	2064 <println>
     70c:	cmp	r5, #1
     710:	blt	754 <__flatcc_fb_gen_c_json_parser+0x754>
     714:	movw	r1, #0
     718:	mov	r0, r4
     71c:	movt	r1, #0
     720:	bl	2064 <println>
     724:	movw	r1, #0
     728:	mov	r0, r4
     72c:	movt	r1, #0
     730:	bl	2064 <println>
     734:	movw	r1, #0
     738:	mov	r0, r4
     73c:	movt	r1, #0
     740:	bl	2064 <println>
     744:	movw	r1, #0
     748:	mov	r0, r4
     74c:	movt	r1, #0
     750:	bl	2064 <println>
     754:	movw	r1, #0
     758:	mov	r0, r4
     75c:	movt	r1, #0
     760:	bl	2064 <println>
     764:	movw	r1, #0
     768:	mov	r0, r4
     76c:	movt	r1, #0
     770:	bl	2064 <println>
     774:	movw	r1, #0
     778:	mov	r0, r4
     77c:	movt	r1, #0
     780:	bl	2064 <println>
     784:	ldr	r0, [r4, #220]	; 0xdc
     788:	cmp	r5, #0
     78c:	add	r0, r0, #1
     790:	str	r0, [r4, #220]	; 0xdc
     794:	mov	r0, r4
     798:	beq	1014 <__flatcc_fb_gen_c_json_parser+0x1014>
     79c:	movw	r1, #0
     7a0:	movt	r1, #0
     7a4:	bl	2064 <println>
     7a8:	movw	r1, #0
     7ac:	mov	r0, r4
     7b0:	movt	r1, #0
     7b4:	bl	2064 <println>
     7b8:	mov	r0, #0
     7bc:	sub	r3, r5, #1
     7c0:	mov	r1, r8
     7c4:	mov	r2, #0
     7c8:	str	r0, [sp]
     7cc:	mov	r0, r4
     7d0:	bl	2a64 <gen_trie>
     7d4:	b	1030 <__flatcc_fb_gen_c_json_parser+0x1030>
     7d8:	mov	r0, r5
     7dc:	mov	r1, #0
     7e0:	mov	r2, #220	; 0xdc
     7e4:	bl	0 <memset>
     7e8:	mov	r0, r8
     7ec:	mov	r1, #0
     7f0:	mov	r2, #220	; 0xdc
     7f4:	bl	0 <memset>
     7f8:	ldr	r0, [sl, #12]
     7fc:	mov	r1, sl
     800:	mov	r2, r5
     804:	bl	0 <__flatcc_fb_scoped_symbol_name>
     808:	movw	r1, #0
     80c:	mov	r0, r4
     810:	mov	r2, r5
     814:	movt	r1, #0
     818:	bl	2064 <println>
     81c:	movw	r1, #0
     820:	mov	r0, r4
     824:	movt	r1, #0
     828:	bl	2064 <println>
     82c:	ldr	r0, [r4, #220]	; 0xdc
     830:	mov	r1, r9
     834:	add	r0, r0, #1
     838:	str	r0, [r4, #220]	; 0xdc
     83c:	mov	r0, r4
     840:	bl	2064 <println>
     844:	movw	r1, #0
     848:	mov	r0, r4
     84c:	movt	r1, #0
     850:	bl	2064 <println>
     854:	movw	r1, #0
     858:	mov	r0, r4
     85c:	movt	r1, #0
     860:	bl	2064 <println>
     864:	movw	r1, #0
     868:	mov	r0, r4
     86c:	movt	r1, #0
     870:	bl	2064 <println>
     874:	ldr	r0, [r4, #220]	; 0xdc
     878:	movw	r1, #0
     87c:	movt	r1, #0
     880:	add	r0, r0, #1
     884:	str	r0, [r4, #220]	; 0xdc
     888:	mov	r0, r4
     88c:	bl	2064 <println>
     890:	ldr	r0, [r4, #220]	; 0xdc
     894:	cmp	r0, #0
     898:	beq	1d8c <__flatcc_fb_gen_c_json_parser+0x1d8c>
     89c:	sub	r0, r0, #1
     8a0:	movw	r9, #0
     8a4:	str	r0, [r4, #220]	; 0xdc
     8a8:	movt	r9, #0
     8ac:	ldr	r5, [sl, #20]
     8b0:	cmp	r5, #0
     8b4:	bne	924 <__flatcc_fb_gen_c_json_parser+0x924>
     8b8:	b	9d4 <__flatcc_fb_gen_c_json_parser+0x9d4>
     8bc:	ldr	r2, [r5, #48]	; 0x30
     8c0:	movw	r1, #0
     8c4:	mov	r0, r4
     8c8:	mov	r3, r7
     8cc:	str	r6, [sp]
     8d0:	movt	r1, #0
     8d4:	bl	2064 <println>
     8d8:	ldr	r0, [r4, #220]	; 0xdc
     8dc:	movw	r1, #0
     8e0:	movt	r1, #0
     8e4:	add	r0, r0, #1
     8e8:	str	r0, [r4, #220]	; 0xdc
     8ec:	mov	r0, r4
     8f0:	bl	2064 <println>
     8f4:	movw	r1, #0
     8f8:	mov	r0, r4
     8fc:	movt	r1, #0
     900:	bl	2064 <println>
     904:	ldr	r0, [r4, #220]	; 0xdc
     908:	cmp	r0, #0
     90c:	beq	1c10 <__flatcc_fb_gen_c_json_parser+0x1c10>
     910:	sub	r0, r0, #1
     914:	str	r0, [r4, #220]	; 0xdc
     918:	ldr	r5, [r5]
     91c:	cmp	r5, #0
     920:	beq	9d4 <__flatcc_fb_gen_c_json_parser+0x9d4>
     924:	ldrh	r0, [r5, #24]
     928:	cmp	r0, #0
     92c:	beq	918 <__flatcc_fb_gen_c_json_parser+0x918>
     930:	ldr	r1, [r5, #4]
     934:	cmp	r0, #10
     938:	ldm	r1, {r6, r7}
     93c:	beq	8bc <__flatcc_fb_gen_c_json_parser+0x8bc>
     940:	cmp	r0, #14
     944:	bne	1bc8 <__flatcc_fb_gen_c_json_parser+0x1bc8>
     948:	ldr	r1, [r5, #16]
     94c:	mov	r2, r8
     950:	ldr	r0, [r1, #12]
     954:	bl	0 <__flatcc_fb_scoped_symbol_name>
     958:	ldr	r2, [r5, #48]	; 0x30
     95c:	movw	r1, #0
     960:	mov	r0, r4
     964:	mov	r3, r7
     968:	str	r6, [sp]
     96c:	movt	r1, #0
     970:	bl	2064 <println>
     974:	ldr	r0, [r4, #220]	; 0xdc
     978:	movw	r1, #0
     97c:	movt	r1, #0
     980:	add	r0, r0, #1
     984:	str	r0, [r4, #220]	; 0xdc
     988:	ldr	r0, [r5, #16]
     98c:	ldrh	r0, [r0, #8]
     990:	cmp	r0, #0
     994:	beq	9a8 <__flatcc_fb_gen_c_json_parser+0x9a8>
     998:	cmp	r0, #1
     99c:	bne	1c24 <__flatcc_fb_gen_c_json_parser+0x1c24>
     9a0:	movw	r1, #0
     9a4:	movt	r1, #0
     9a8:	mov	r0, r4
     9ac:	mov	r2, r8
     9b0:	bl	2064 <println>
     9b4:	movw	r1, #0
     9b8:	mov	r0, r4
     9bc:	movt	r1, #0
     9c0:	bl	2064 <println>
     9c4:	ldr	r0, [r4, #220]	; 0xdc
     9c8:	cmp	r0, #0
     9cc:	bne	910 <__flatcc_fb_gen_c_json_parser+0x910>
     9d0:	b	1c74 <__flatcc_fb_gen_c_json_parser+0x1c74>
     9d4:	movw	r1, #0
     9d8:	mov	r0, r4
     9dc:	movt	r1, #0
     9e0:	bl	2064 <println>
     9e4:	ldr	r0, [r4, #220]	; 0xdc
     9e8:	movw	r1, #0
     9ec:	movt	r1, #0
     9f0:	add	r0, r0, #1
     9f4:	str	r0, [r4, #220]	; 0xdc
     9f8:	mov	r0, r4
     9fc:	bl	2064 <println>
     a00:	ldr	r0, [r4, #220]	; 0xdc
     a04:	movw	r1, #0
     a08:	movt	r1, #0
     a0c:	add	r0, r0, #1
     a10:	str	r0, [r4, #220]	; 0xdc
     a14:	mov	r0, r4
     a18:	bl	2064 <println>
     a1c:	ldr	r0, [r4, #220]	; 0xdc
     a20:	cmp	r0, #0
     a24:	beq	1da0 <__flatcc_fb_gen_c_json_parser+0x1da0>
     a28:	movw	r1, #0
     a2c:	sub	r0, r0, #1
     a30:	movt	r1, #0
     a34:	str	r0, [r4, #220]	; 0xdc
     a38:	mov	r0, r4
     a3c:	bl	2064 <println>
     a40:	ldr	r0, [r4, #220]	; 0xdc
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	add	r0, r0, #1
     a50:	str	r0, [r4, #220]	; 0xdc
     a54:	mov	r0, r4
     a58:	bl	2064 <println>
     a5c:	ldr	r0, [r4, #220]	; 0xdc
     a60:	movw	r6, #0
     a64:	movw	r7, #0
     a68:	add	r5, sp, #232	; 0xe8
     a6c:	movt	r6, #0
     a70:	movt	r7, #0
     a74:	cmp	r0, #0
     a78:	beq	1db4 <__flatcc_fb_gen_c_json_parser+0x1db4>
     a7c:	sub	r0, r0, #1
     a80:	mov	r1, r9
     a84:	str	r0, [r4, #220]	; 0xdc
     a88:	mov	r0, r4
     a8c:	bl	2064 <println>
     a90:	ldr	r0, [r4, #220]	; 0xdc
     a94:	cmp	r0, #0
     a98:	beq	1dc8 <__flatcc_fb_gen_c_json_parser+0x1dc8>
     a9c:	sub	r0, r0, #1
     aa0:	mov	r1, r9
     aa4:	str	r0, [r4, #220]	; 0xdc
     aa8:	mov	r0, r4
     aac:	bl	2064 <println>
     ab0:	movw	r1, #0
     ab4:	mov	r0, r4
     ab8:	movt	r1, #0
     abc:	bl	2064 <println>
     ac0:	movw	r1, #0
     ac4:	mov	r0, r4
     ac8:	movt	r1, #0
     acc:	bl	2064 <println>
     ad0:	ldr	r0, [r4, #220]	; 0xdc
     ad4:	movw	r1, #0
     ad8:	movt	r1, #0
     adc:	add	r0, r0, #1
     ae0:	str	r0, [r4, #220]	; 0xdc
     ae4:	mov	r0, r4
     ae8:	bl	2064 <println>
     aec:	ldr	r0, [r4, #220]	; 0xdc
     af0:	cmp	r0, #0
     af4:	beq	1ddc <__flatcc_fb_gen_c_json_parser+0x1ddc>
     af8:	sub	r0, r0, #1
     afc:	mov	r1, r9
     b00:	str	r0, [r4, #220]	; 0xdc
     b04:	mov	r0, r4
     b08:	bl	2064 <println>
     b0c:	movw	r1, #0
     b10:	mov	r0, r4
     b14:	movt	r1, #0
     b18:	bl	2064 <println>
     b1c:	ldr	r0, [r4, #220]	; 0xdc
     b20:	cmp	r0, #0
     b24:	beq	1df0 <__flatcc_fb_gen_c_json_parser+0x1df0>
     b28:	sub	r0, r0, #1
     b2c:	mov	r1, r9
     b30:	str	r0, [r4, #220]	; 0xdc
     b34:	mov	r0, r4
     b38:	bl	2064 <println>
     b3c:	movw	r1, #0
     b40:	mov	r0, r4
     b44:	movt	r1, #0
     b48:	bl	2064 <println>
     b4c:	mov	r0, r5
     b50:	mov	r1, #0
     b54:	mov	r2, #220	; 0xdc
     b58:	bl	0 <memset>
     b5c:	ldr	r0, [sl, #12]
     b60:	mov	r1, sl
     b64:	mov	r2, r5
     b68:	bl	0 <__flatcc_fb_scoped_symbol_name>
     b6c:	movw	r1, #0
     b70:	mov	r0, r4
     b74:	mov	r2, r5
     b78:	movt	r1, #0
     b7c:	bl	2064 <println>
     b80:	movw	r1, #0
     b84:	mov	r0, r4
     b88:	movt	r1, #0
     b8c:	bl	2064 <println>
     b90:	ldr	r0, [r4, #220]	; 0xdc
     b94:	movw	r1, #0
     b98:	movt	r1, #0
     b9c:	add	r0, r0, #1
     ba0:	str	r0, [r4, #220]	; 0xdc
     ba4:	mov	r0, r4
     ba8:	bl	2064 <println>
     bac:	ldr	r5, [sl, #20]
     bb0:	cmp	r5, #0
     bb4:	bne	bd4 <__flatcc_fb_gen_c_json_parser+0xbd4>
     bb8:	b	c08 <__flatcc_fb_gen_c_json_parser+0xc08>
     bbc:	mov	r0, r4
     bc0:	mov	r1, r6
     bc4:	bl	2064 <println>
     bc8:	ldr	r5, [r5]
     bcc:	cmp	r5, #0
     bd0:	beq	c08 <__flatcc_fb_gen_c_json_parser+0xc08>
     bd4:	ldrh	r0, [r5, #24]
     bd8:	cmp	r0, #0
     bdc:	beq	bbc <__flatcc_fb_gen_c_json_parser+0xbbc>
     be0:	ldr	r0, [r5, #4]
     be4:	ldr	r2, [r5, #48]	; 0x30
     be8:	ldm	r0, {r1, r3}
     bec:	mov	r0, r4
     bf0:	str	r1, [sp]
     bf4:	mov	r1, r7
     bf8:	bl	2064 <println>
     bfc:	ldr	r5, [r5]
     c00:	cmp	r5, #0
     c04:	bne	bd4 <__flatcc_fb_gen_c_json_parser+0xbd4>
     c08:	movw	r1, #0
     c0c:	mov	r0, r4
     c10:	movt	r1, #0
     c14:	bl	2064 <println>
     c18:	ldr	r0, [r4, #220]	; 0xdc
     c1c:	adds	r1, r0, #1
     c20:	str	r1, [r4, #220]	; 0xdc
     c24:	bcs	1e04 <__flatcc_fb_gen_c_json_parser+0x1e04>
     c28:	str	r0, [r4, #220]	; 0xdc
     c2c:	mov	r0, r4
     c30:	mov	r1, r9
     c34:	bl	2064 <println>
     c38:	ldr	r0, [r4, #220]	; 0xdc
     c3c:	add	r5, sp, #232	; 0xe8
     c40:	cmp	r0, #0
     c44:	beq	1e18 <__flatcc_fb_gen_c_json_parser+0x1e18>
     c48:	sub	r0, r0, #1
     c4c:	mov	r1, r9
     c50:	str	r0, [r4, #220]	; 0xdc
     c54:	mov	r0, r4
     c58:	bl	2064 <println>
     c5c:	movw	r9, #0
     c60:	mov	r0, r4
     c64:	movt	r9, #0
     c68:	mov	r1, r9
     c6c:	bl	2064 <println>
     c70:	mov	r0, r4
     c74:	mov	r1, sl
     c78:	bl	21b4 <gen_enum_parser>
     c7c:	b	448 <__flatcc_fb_gen_c_json_parser+0x448>
     c80:	mov	r9, #0
     c84:	movw	r1, #0
     c88:	mov	r0, r4
     c8c:	add	r5, sp, #232	; 0xe8
     c90:	movt	r1, #0
     c94:	bl	2064 <println>
     c98:	movw	r1, #0
     c9c:	mov	r0, r4
     ca0:	movt	r1, #0
     ca4:	bl	2064 <println>
     ca8:	ldrd	r2, [r7]
     cac:	movw	r1, #0
     cb0:	mov	r0, r4
     cb4:	movt	r1, #0
     cb8:	bl	2064 <println>
     cbc:	cmp	r9, #0
     cc0:	beq	cdc <__flatcc_fb_gen_c_json_parser+0xcdc>
     cc4:	movw	r1, #0
     cc8:	asr	r3, r9, #31
     ccc:	mov	r0, r4
     cd0:	mov	r2, r9
     cd4:	movt	r1, #0
     cd8:	bl	2064 <println>
     cdc:	movw	r1, #0
     ce0:	mov	r0, r4
     ce4:	movt	r1, #0
     ce8:	bl	2064 <println>
     cec:	movw	r1, #0
     cf0:	mov	r0, r4
     cf4:	movt	r1, #0
     cf8:	bl	2064 <println>
     cfc:	ldr	r0, [r4, #220]	; 0xdc
     d00:	movw	r1, #0
     d04:	movt	r1, #0
     d08:	add	r0, r0, #1
     d0c:	str	r0, [r4, #220]	; 0xdc
     d10:	mov	r0, r4
     d14:	bl	2064 <println>
     d18:	mov	r0, r4
     d1c:	cmp	r8, #1
     d20:	blt	d50 <__flatcc_fb_gen_c_json_parser+0xd50>
     d24:	movw	r1, #0
     d28:	movt	r1, #0
     d2c:	bl	2064 <println>
     d30:	mov	r0, #0
     d34:	sub	r3, r8, #1
     d38:	add	r1, sp, #8
     d3c:	mov	r2, #0
     d40:	str	r0, [sp]
     d44:	mov	r0, r4
     d48:	bl	2a64 <gen_trie>
     d4c:	b	d6c <__flatcc_fb_gen_c_json_parser+0xd6c>
     d50:	movw	r1, #0
     d54:	movt	r1, #0
     d58:	bl	2064 <println>
     d5c:	movw	r1, #0
     d60:	mov	r0, r4
     d64:	movt	r1, #0
     d68:	bl	2064 <println>
     d6c:	movw	r1, #0
     d70:	movw	r9, #0
     d74:	mov	r0, r4
     d78:	movt	r1, #0
     d7c:	movt	r9, #0
     d80:	bl	2064 <println>
     d84:	ldr	r0, [r4, #220]	; 0xdc
     d88:	cmp	r0, #0
     d8c:	beq	1e38 <__flatcc_fb_gen_c_json_parser+0x1e38>
     d90:	sub	r0, r0, #1
     d94:	mov	r1, r9
     d98:	str	r0, [r4, #220]	; 0xdc
     d9c:	mov	r0, r4
     da0:	bl	2064 <println>
     da4:	movw	r1, #0
     da8:	mov	r0, r4
     dac:	movt	r1, #0
     db0:	bl	2064 <println>
     db4:	cmp	r8, #1
     db8:	blt	ee4 <__flatcc_fb_gen_c_json_parser+0xee4>
     dbc:	mov	r5, #0
     dc0:	mov	r0, #1
     dc4:	b	de8 <__flatcc_fb_gen_c_json_parser+0xde8>
     dc8:	movw	r1, #0
     dcc:	mov	r0, r4
     dd0:	movt	r1, #0
     dd4:	bl	2064 <println>
     dd8:	mov	r0, #0
     ddc:	add	r5, r5, #1
     de0:	cmp	r8, r5
     de4:	beq	e68 <__flatcc_fb_gen_c_json_parser+0xe68>
     de8:	ldr	r1, [sp, #8]
     dec:	add	r1, r1, r5, lsl #4
     df0:	ldr	r1, [r1, #8]
     df4:	ldrh	r2, [r1, #72]	; 0x48
     df8:	tst	r2, #4
     dfc:	bne	ddc <__flatcc_fb_gen_c_json_parser+0xddc>
     e00:	ldrh	r3, [r1, #24]
     e04:	bic	r7, r3, #1
     e08:	mov	r3, #0
     e0c:	cmp	r7, #14
     e10:	bne	e28 <__flatcc_fb_gen_c_json_parser+0xe28>
     e14:	ldr	r3, [r1, #16]
     e18:	ldrh	r3, [r3, #8]
     e1c:	sub	r3, r3, #4
     e20:	clz	r3, r3
     e24:	lsr	r3, r3, #5
     e28:	tst	r2, #256	; 0x100
     e2c:	beq	ddc <__flatcc_fb_gen_c_json_parser+0xddc>
     e30:	ldr	r2, [r1, #96]	; 0x60
     e34:	ldr	r1, [r1, #100]	; 0x64
     e38:	subs	r2, r2, r3
     e3c:	sbc	r3, r1, #0
     e40:	cmp	r0, #0
     e44:	beq	dc8 <__flatcc_fb_gen_c_json_parser+0xdc8>
     e48:	movw	r1, #0
     e4c:	mov	r0, r4
     e50:	movt	r1, #0
     e54:	bl	2064 <println>
     e58:	ldr	r0, [r4, #220]	; 0xdc
     e5c:	add	r0, r0, #1
     e60:	str	r0, [r4, #220]	; 0xdc
     e64:	b	dd8 <__flatcc_fb_gen_c_json_parser+0xdd8>
     e68:	cmp	r0, #0
     e6c:	add	r5, sp, #232	; 0xe8
     e70:	bne	ee4 <__flatcc_fb_gen_c_json_parser+0xee4>
     e74:	ldr	r0, [r4, #220]	; 0xdc
     e78:	cmp	r0, #0
     e7c:	beq	1f08 <__flatcc_fb_gen_c_json_parser+0x1f08>
     e80:	movw	r1, #0
     e84:	sub	r0, r0, #1
     e88:	movt	r1, #0
     e8c:	str	r0, [r4, #220]	; 0xdc
     e90:	mov	r0, r4
     e94:	bl	2064 <println>
     e98:	ldr	r0, [r4, #220]	; 0xdc
     e9c:	movw	r1, #0
     ea0:	movt	r1, #0
     ea4:	add	r0, r0, #1
     ea8:	str	r0, [r4, #220]	; 0xdc
     eac:	mov	r0, r4
     eb0:	bl	2064 <println>
     eb4:	movw	r1, #0
     eb8:	mov	r0, r4
     ebc:	movt	r1, #0
     ec0:	bl	2064 <println>
     ec4:	ldr	r0, [r4, #220]	; 0xdc
     ec8:	cmp	r0, #0
     ecc:	beq	1f1c <__flatcc_fb_gen_c_json_parser+0x1f1c>
     ed0:	sub	r0, r0, #1
     ed4:	mov	r1, r9
     ed8:	str	r0, [r4, #220]	; 0xdc
     edc:	mov	r0, r4
     ee0:	bl	2064 <println>
     ee4:	ldr	r0, [sp, #28]
     ee8:	cmp	r0, #0
     eec:	beq	f00 <__flatcc_fb_gen_c_json_parser+0xf00>
     ef0:	movw	r1, #0
     ef4:	mov	r0, r4
     ef8:	movt	r1, #0
     efc:	bl	2064 <println>
     f00:	movw	r1, #0
     f04:	mov	r0, r4
     f08:	movt	r1, #0
     f0c:	bl	2064 <println>
     f10:	movw	r1, #0
     f14:	mov	r0, r4
     f18:	movt	r1, #0
     f1c:	bl	2064 <println>
     f20:	ldr	r0, [r4, #220]	; 0xdc
     f24:	mov	r1, #0
     f28:	str	r1, [r4, #220]	; 0xdc
     f2c:	movw	r1, #0
     f30:	movt	r1, #0
     f34:	str	r0, [r4, #228]	; 0xe4
     f38:	mov	r0, r4
     f3c:	bl	2064 <println>
     f40:	ldr	r0, [r4, #228]	; 0xe4
     f44:	movw	r1, #0
     f48:	movt	r1, #0
     f4c:	str	r0, [r4, #220]	; 0xdc
     f50:	mov	r0, r4
     f54:	bl	2064 <println>
     f58:	ldr	r0, [r4, #220]	; 0xdc
     f5c:	add	r8, sp, #8
     f60:	cmp	r0, #0
     f64:	beq	1e4c <__flatcc_fb_gen_c_json_parser+0x1e4c>
     f68:	sub	r0, r0, #1
     f6c:	mov	r1, r9
     f70:	str	r0, [r4, #220]	; 0xdc
     f74:	mov	r0, r4
     f78:	bl	2064 <println>
     f7c:	movw	r6, #0
     f80:	mov	r0, r4
     f84:	movt	r6, #0
     f88:	mov	r1, r6
     f8c:	bl	2064 <println>
     f90:	movw	r1, #0
     f94:	mov	r0, r4
     f98:	mov	r2, r5
     f9c:	movt	r1, #0
     fa0:	bl	2064 <println>
     fa4:	movw	r1, #0
     fa8:	mov	r0, r4
     fac:	movt	r1, #0
     fb0:	bl	2064 <println>
     fb4:	ldr	r0, [r4, #220]	; 0xdc
     fb8:	movw	r1, #0
     fbc:	mov	r2, r5
     fc0:	movt	r1, #0
     fc4:	add	r0, r0, #1
     fc8:	str	r0, [r4, #220]	; 0xdc
     fcc:	mov	r0, r4
     fd0:	bl	2064 <println>
     fd4:	ldr	r0, [r4, #220]	; 0xdc
     fd8:	cmp	r0, #0
     fdc:	beq	1e60 <__flatcc_fb_gen_c_json_parser+0x1e60>
     fe0:	sub	r0, r0, #1
     fe4:	mov	r1, r9
     fe8:	str	r0, [r4, #220]	; 0xdc
     fec:	mov	r0, r4
     ff0:	bl	2064 <println>
     ff4:	mov	r0, r4
     ff8:	mov	r1, r6
     ffc:	bl	2064 <println>
    1000:	ldr	r0, [sp, #8]
    1004:	cmp	r0, #0
    1008:	beq	440 <__flatcc_fb_gen_c_json_parser+0x440>
    100c:	bl	0 <free>
    1010:	b	440 <__flatcc_fb_gen_c_json_parser+0x440>
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	bl	2064 <println>
    1020:	movw	r1, #0
    1024:	mov	r0, r4
    1028:	movt	r1, #0
    102c:	bl	2064 <println>
    1030:	movw	r1, #0
    1034:	mov	r0, r4
    1038:	movt	r1, #0
    103c:	bl	2064 <println>
    1040:	ldr	r0, [r4, #220]	; 0xdc
    1044:	cmp	r0, #0
    1048:	beq	1e74 <__flatcc_fb_gen_c_json_parser+0x1e74>
    104c:	sub	r0, r0, #1
    1050:	mov	r1, r9
    1054:	str	r0, [r4, #220]	; 0xdc
    1058:	mov	r0, r4
    105c:	bl	2064 <println>
    1060:	movw	r1, #0
    1064:	mov	r0, r4
    1068:	movt	r1, #0
    106c:	bl	2064 <println>
    1070:	cmp	r5, #1
    1074:	blt	10b0 <__flatcc_fb_gen_c_json_parser+0x10b0>
    1078:	ldr	r0, [r4, #220]	; 0xdc
    107c:	mov	r1, #0
    1080:	str	r1, [r4, #220]	; 0xdc
    1084:	movw	r1, #0
    1088:	movt	r1, #0
    108c:	str	r0, [r4, #228]	; 0xe4
    1090:	mov	r0, r4
    1094:	bl	2064 <println>
    1098:	ldr	r0, [r4, #228]	; 0xe4
    109c:	movw	r1, #0
    10a0:	movt	r1, #0
    10a4:	str	r0, [r4, #220]	; 0xdc
    10a8:	mov	r0, r4
    10ac:	bl	2064 <println>
    10b0:	ldr	r0, [r4, #220]	; 0xdc
    10b4:	add	r5, sp, #232	; 0xe8
    10b8:	cmp	r0, #0
    10bc:	beq	1e88 <__flatcc_fb_gen_c_json_parser+0x1e88>
    10c0:	sub	r0, r0, #1
    10c4:	mov	r1, r9
    10c8:	str	r0, [r4, #220]	; 0xdc
    10cc:	mov	r0, r4
    10d0:	bl	2064 <println>
    10d4:	movw	r1, #0
    10d8:	mov	r0, r4
    10dc:	movt	r1, #0
    10e0:	bl	2064 <println>
    10e4:	ldr	r0, [sp, #8]
    10e8:	cmp	r0, #0
    10ec:	beq	10f4 <__flatcc_fb_gen_c_json_parser+0x10f4>
    10f0:	bl	0 <free>
    10f4:	ldrh	r0, [sl, #8]
    10f8:	cmp	r0, #1
    10fc:	bne	1ea8 <__flatcc_fb_gen_c_json_parser+0x1ea8>
    1100:	mov	r0, r5
    1104:	mov	r1, #0
    1108:	mov	r2, #220	; 0xdc
    110c:	bl	0 <memset>
    1110:	ldr	r0, [sl, #12]
    1114:	mov	r1, sl
    1118:	mov	r2, r5
    111c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1120:	movw	r1, #0
    1124:	mov	r0, r4
    1128:	mov	r2, r5
    112c:	movt	r1, #0
    1130:	bl	2064 <println>
    1134:	movw	r6, #0
    1138:	mov	r0, r4
    113c:	movt	r6, #0
    1140:	mov	r1, r6
    1144:	bl	2064 <println>
    1148:	ldr	r0, [r4, #220]	; 0xdc
    114c:	movw	r1, #0
    1150:	movt	r1, #0
    1154:	add	r0, r0, #1
    1158:	str	r0, [r4, #220]	; 0xdc
    115c:	mov	r0, r4
    1160:	bl	2064 <println>
    1164:	movw	r9, #0
    1168:	mov	r0, r4
    116c:	movt	r9, #0
    1170:	mov	r1, r9
    1174:	bl	2064 <println>
    1178:	movw	r1, #0
    117c:	mov	r0, r4
    1180:	movt	r1, #0
    1184:	bl	2064 <println>
    1188:	ldrh	r0, [sl, #104]	; 0x68
    118c:	ldrd	r2, [r7, #16]
    1190:	movw	r1, #0
    1194:	movt	r1, #0
    1198:	str	r0, [sp]
    119c:	mov	r0, r4
    11a0:	bl	2064 <println>
    11a4:	movw	r1, #0
    11a8:	mov	r0, r4
    11ac:	mov	r2, r5
    11b0:	movt	r1, #0
    11b4:	bl	2064 <println>
    11b8:	movw	r1, #0
    11bc:	mov	r0, r4
    11c0:	movt	r1, #0
    11c4:	bl	2064 <println>
    11c8:	movw	r1, #0
    11cc:	mov	r0, r4
    11d0:	movt	r1, #0
    11d4:	bl	2064 <println>
    11d8:	ldr	r0, [r4, #220]	; 0xdc
    11dc:	mov	r1, #0
    11e0:	str	r1, [r4, #220]	; 0xdc
    11e4:	movw	r1, #0
    11e8:	movt	r1, #0
    11ec:	str	r0, [r4, #228]	; 0xe4
    11f0:	mov	r0, r4
    11f4:	bl	2064 <println>
    11f8:	ldr	r0, [r4, #228]	; 0xe4
    11fc:	movw	r1, #0
    1200:	movt	r1, #0
    1204:	str	r0, [r4, #220]	; 0xdc
    1208:	mov	r0, r4
    120c:	bl	2064 <println>
    1210:	ldr	r0, [r4, #220]	; 0xdc
    1214:	cmp	r0, #0
    1218:	beq	1ec0 <__flatcc_fb_gen_c_json_parser+0x1ec0>
    121c:	movw	r7, #0
    1220:	sub	r0, r0, #1
    1224:	movt	r7, #0
    1228:	str	r0, [r4, #220]	; 0xdc
    122c:	mov	r0, r4
    1230:	mov	r1, r7
    1234:	bl	2064 <println>
    1238:	mov	r0, r4
    123c:	mov	r1, r9
    1240:	bl	2064 <println>
    1244:	movw	r1, #0
    1248:	mov	r0, r4
    124c:	mov	r2, r5
    1250:	movt	r1, #0
    1254:	bl	2064 <println>
    1258:	mov	r0, r4
    125c:	mov	r1, r6
    1260:	bl	2064 <println>
    1264:	ldr	r0, [r4, #220]	; 0xdc
    1268:	movw	r1, #0
    126c:	mov	r2, r5
    1270:	movt	r1, #0
    1274:	add	r0, r0, #1
    1278:	str	r0, [r4, #220]	; 0xdc
    127c:	mov	r0, r4
    1280:	bl	2064 <println>
    1284:	ldr	r0, [r4, #220]	; 0xdc
    1288:	cmp	r0, #0
    128c:	beq	1ed4 <__flatcc_fb_gen_c_json_parser+0x1ed4>
    1290:	sub	r0, r0, #1
    1294:	mov	r1, r7
    1298:	str	r0, [r4, #220]	; 0xdc
    129c:	mov	r0, r4
    12a0:	bl	2064 <println>
    12a4:	mov	r0, r4
    12a8:	mov	r1, r9
    12ac:	bl	2064 <println>
    12b0:	b	448 <__flatcc_fb_gen_c_json_parser+0x448>
    12b4:	ldr	r0, [r4, #208]	; 0xd0
    12b8:	ldr	r0, [r0, #60]	; 0x3c
    12bc:	movw	r1, #0
    12c0:	mov	r2, r4
    12c4:	movt	r1, #0
    12c8:	bl	0 <fb_scope_table_visit>
    12cc:	vmov.i32	q8, #0	; 0x00000000
    12d0:	mov	r0, #12
    12d4:	add	r1, sp, #8
    12d8:	add	r2, sp, #232	; 0xe8
    12dc:	vst1.64	{d16-d17}, [r1], r0
    12e0:	vst1.32	{d16-d17}, [r1]
    12e4:	add	r1, r2, #20
    12e8:	ldr	r0, [r4, #208]	; 0xd0
    12ec:	ldr	r8, [r0, #60]	; 0x3c
    12f0:	vst1.32	{d16-d17}, [r1]
    12f4:	orr	r1, r2, #4
    12f8:	vst1.32	{d16-d17}, [r1]
    12fc:	mov	r1, #0
    1300:	str	r1, [sp, #268]	; 0x10c
    1304:	movw	r1, #0
    1308:	str	r0, [sp, #272]	; 0x110
    130c:	mov	r0, #1
    1310:	movt	r1, #0
    1314:	str	r0, [sp, #232]	; 0xe8
    1318:	mov	r0, r8
    131c:	bl	0 <fb_scope_table_visit>
    1320:	ldr	r5, [sp, #236]	; 0xec
    1324:	mov	r1, #8
    1328:	mov	r0, r5
    132c:	bl	0 <calloc>
    1330:	str	r0, [sp, #248]	; 0xf8
    1334:	mov	r7, r0
    1338:	mov	r1, #8
    133c:	ldr	sl, [sp, #240]	; 0xf0
    1340:	mov	r0, sl
    1344:	bl	0 <calloc>
    1348:	str	r0, [sp, #252]	; 0xfc
    134c:	mov	r6, r0
    1350:	ldr	r9, [sp, #244]	; 0xf4
    1354:	mov	r0, r9
    1358:	bl	0 <malloc>
    135c:	cmp	r5, #1
    1360:	str	r0, [sp, #268]	; 0x10c
    1364:	str	r6, [sp, #264]	; 0x108
    1368:	str	r7, [sp, #260]	; 0x104
    136c:	str	r0, [sp, #256]	; 0x100
    1370:	blt	137c <__flatcc_fb_gen_c_json_parser+0x137c>
    1374:	cmp	r7, #0
    1378:	beq	13b0 <__flatcc_fb_gen_c_json_parser+0x13b0>
    137c:	cmp	sl, #1
    1380:	blt	138c <__flatcc_fb_gen_c_json_parser+0x138c>
    1384:	cmp	r6, #0
    1388:	beq	139c <__flatcc_fb_gen_c_json_parser+0x139c>
    138c:	cmp	r9, #0
    1390:	beq	161c <__flatcc_fb_gen_c_json_parser+0x161c>
    1394:	cmp	r0, #0
    1398:	bne	161c <__flatcc_fb_gen_c_json_parser+0x161c>
    139c:	cmp	r7, #0
    13a0:	beq	13b0 <__flatcc_fb_gen_c_json_parser+0x13b0>
    13a4:	mov	r0, r7
    13a8:	bl	0 <free>
    13ac:	ldr	r6, [sp, #252]	; 0xfc
    13b0:	cmp	r6, #0
    13b4:	beq	13c0 <__flatcc_fb_gen_c_json_parser+0x13c0>
    13b8:	mov	r0, r6
    13bc:	bl	0 <free>
    13c0:	ldr	r0, [sp, #256]	; 0x100
    13c4:	cmp	r0, #0
    13c8:	beq	13d0 <__flatcc_fb_gen_c_json_parser+0x13d0>
    13cc:	bl	0 <free>
    13d0:	ldr	r0, [r4, #208]	; 0xd0
    13d4:	ldr	r5, [r0, #52]	; 0x34
    13d8:	cmp	r5, #0
    13dc:	beq	1990 <__flatcc_fb_gen_c_json_parser+0x1990>
    13e0:	ldrh	r0, [r5, #8]
    13e4:	cmp	r0, #1
    13e8:	beq	1508 <__flatcc_fb_gen_c_json_parser+0x1508>
    13ec:	cmp	r0, #0
    13f0:	bne	1990 <__flatcc_fb_gen_c_json_parser+0x1990>
    13f4:	add	r6, sp, #232	; 0xe8
    13f8:	mov	r1, #0
    13fc:	mov	r2, #220	; 0xdc
    1400:	mov	r0, r6
    1404:	bl	0 <memset>
    1408:	ldr	r0, [r5, #12]
    140c:	mov	r1, r5
    1410:	mov	r2, r6
    1414:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1418:	ldr	r0, [r4, #208]	; 0xd0
    141c:	movw	r1, #0
    1420:	movt	r1, #0
    1424:	ldr	r2, [r0, #160]	; 0xa0
    1428:	mov	r0, r4
    142c:	bl	2064 <println>
    1430:	ldr	r0, [r4, #220]	; 0xdc
    1434:	movw	r1, #0
    1438:	movt	r1, #0
    143c:	add	r0, r0, #2
    1440:	str	r0, [r4, #220]	; 0xdc
    1444:	mov	r0, r4
    1448:	bl	2064 <println>
    144c:	ldr	r0, [r4, #220]	; 0xdc
    1450:	cmp	r0, #0
    1454:	beq	1f5c <__flatcc_fb_gen_c_json_parser+0x1f5c>
    1458:	subs	r1, r0, #1
    145c:	str	r1, [r4, #220]	; 0xdc
    1460:	beq	1f5c <__flatcc_fb_gen_c_json_parser+0x1f5c>
    1464:	movw	r1, #0
    1468:	sub	r0, r0, #2
    146c:	movt	r1, #0
    1470:	str	r0, [r4, #220]	; 0xdc
    1474:	mov	r0, r4
    1478:	bl	2064 <println>
    147c:	ldr	r0, [r4, #220]	; 0xdc
    1480:	movw	r1, #0
    1484:	movt	r1, #0
    1488:	add	r0, r0, #1
    148c:	str	r0, [r4, #220]	; 0xdc
    1490:	mov	r0, r4
    1494:	bl	2064 <println>
    1498:	movw	r1, #0
    149c:	mov	r0, r4
    14a0:	movt	r1, #0
    14a4:	bl	2064 <println>
    14a8:	movw	r1, #0
    14ac:	mov	r0, r4
    14b0:	movt	r1, #0
    14b4:	bl	2064 <println>
    14b8:	movw	r1, #0
    14bc:	mov	r0, r4
    14c0:	movt	r1, #0
    14c4:	bl	2064 <println>
    14c8:	movw	r1, #0
    14cc:	mov	r0, r4
    14d0:	movt	r1, #0
    14d4:	bl	2064 <println>
    14d8:	ldr	r0, [r4, #208]	; 0xd0
    14dc:	ldrh	r1, [r0, #16]
    14e0:	cmp	r1, #2
    14e4:	bne	17f4 <__flatcc_fb_gen_c_json_parser+0x17f4>
    14e8:	ldrd	r6, [r0, #8]
    14ec:	movw	r1, #0
    14f0:	mov	r0, r4
    14f4:	movt	r1, #0
    14f8:	mov	r2, r7
    14fc:	mov	r3, r6
    1500:	bl	2064 <println>
    1504:	b	1804 <__flatcc_fb_gen_c_json_parser+0x1804>
    1508:	add	r6, sp, #232	; 0xe8
    150c:	mov	r1, #0
    1510:	mov	r2, #220	; 0xdc
    1514:	mov	r0, r6
    1518:	bl	0 <memset>
    151c:	ldr	r0, [r5, #12]
    1520:	mov	r1, r5
    1524:	mov	r2, r6
    1528:	bl	0 <__flatcc_fb_scoped_symbol_name>
    152c:	ldr	r0, [r4, #208]	; 0xd0
    1530:	movw	r1, #0
    1534:	movt	r1, #0
    1538:	ldr	r2, [r0, #160]	; 0xa0
    153c:	mov	r0, r4
    1540:	bl	2064 <println>
    1544:	ldr	r0, [r4, #220]	; 0xdc
    1548:	movw	r1, #0
    154c:	movt	r1, #0
    1550:	add	r0, r0, #2
    1554:	str	r0, [r4, #220]	; 0xdc
    1558:	mov	r0, r4
    155c:	bl	2064 <println>
    1560:	ldr	r0, [r4, #220]	; 0xdc
    1564:	cmp	r0, #0
    1568:	beq	1f70 <__flatcc_fb_gen_c_json_parser+0x1f70>
    156c:	subs	r1, r0, #1
    1570:	str	r1, [r4, #220]	; 0xdc
    1574:	beq	1f70 <__flatcc_fb_gen_c_json_parser+0x1f70>
    1578:	movw	r1, #0
    157c:	sub	r0, r0, #2
    1580:	movt	r1, #0
    1584:	str	r0, [r4, #220]	; 0xdc
    1588:	mov	r0, r4
    158c:	bl	2064 <println>
    1590:	ldr	r0, [r4, #220]	; 0xdc
    1594:	movw	r1, #0
    1598:	movt	r1, #0
    159c:	add	r0, r0, #1
    15a0:	str	r0, [r4, #220]	; 0xdc
    15a4:	mov	r0, r4
    15a8:	bl	2064 <println>
    15ac:	movw	r1, #0
    15b0:	mov	r0, r4
    15b4:	movt	r1, #0
    15b8:	bl	2064 <println>
    15bc:	movw	r1, #0
    15c0:	mov	r0, r4
    15c4:	movt	r1, #0
    15c8:	bl	2064 <println>
    15cc:	movw	r1, #0
    15d0:	mov	r0, r4
    15d4:	movt	r1, #0
    15d8:	bl	2064 <println>
    15dc:	movw	r1, #0
    15e0:	mov	r0, r4
    15e4:	movt	r1, #0
    15e8:	bl	2064 <println>
    15ec:	ldr	r0, [r4, #208]	; 0xd0
    15f0:	ldrh	r1, [r0, #16]
    15f4:	cmp	r1, #2
    15f8:	bne	18b8 <__flatcc_fb_gen_c_json_parser+0x18b8>
    15fc:	ldrd	r6, [r0, #8]
    1600:	movw	r1, #0
    1604:	mov	r0, r4
    1608:	movt	r1, #0
    160c:	mov	r2, r7
    1610:	mov	r3, r6
    1614:	bl	2064 <println>
    1618:	b	18c8 <__flatcc_fb_gen_c_json_parser+0x18c8>
    161c:	movw	r1, #0
    1620:	add	r2, sp, #232	; 0xe8
    1624:	mov	r0, r8
    1628:	movt	r1, #0
    162c:	bl	0 <fb_scope_table_visit>
    1630:	ldr	r6, [sp, #236]	; 0xec
    1634:	ldr	r5, [sp, #248]	; 0xf8
    1638:	movw	r3, #0
    163c:	mov	r2, #8
    1640:	movt	r3, #0
    1644:	mov	r0, r5
    1648:	mov	r1, r6
    164c:	bl	0 <qsort>
    1650:	cmp	r6, #1
    1654:	blt	16d0 <__flatcc_fb_gen_c_json_parser+0x16d0>
    1658:	sub	r2, r6, #1
    165c:	and	r0, r6, #3
    1660:	mov	r1, #0
    1664:	cmp	r2, #3
    1668:	bcc	16b4 <__flatcc_fb_gen_c_json_parser+0x16b4>
    166c:	sub	r2, r6, r0
    1670:	add	r3, r5, #16
    1674:	mov	r1, #0
    1678:	ldr	r7, [r3, #-16]
    167c:	add	r6, r1, #1
    1680:	str	r1, [r7, #124]	; 0x7c
    1684:	ldr	r7, [r3, #-8]
    1688:	str	r6, [r7, #124]	; 0x7c
    168c:	add	r6, r1, #2
    1690:	ldr	r7, [r3]
    1694:	str	r6, [r7, #124]	; 0x7c
    1698:	add	r6, r1, #3
    169c:	add	r1, r1, #4
    16a0:	ldr	r7, [r3, #8]
    16a4:	add	r3, r3, #32
    16a8:	cmp	r2, r1
    16ac:	str	r6, [r7, #124]	; 0x7c
    16b0:	bne	1678 <__flatcc_fb_gen_c_json_parser+0x1678>
    16b4:	cmp	r0, #0
    16b8:	beq	16d0 <__flatcc_fb_gen_c_json_parser+0x16d0>
    16bc:	ldr	r2, [r5, r1, lsl #3]
    16c0:	subs	r0, r0, #1
    16c4:	str	r1, [r2, #124]	; 0x7c
    16c8:	add	r1, r1, #1
    16cc:	bne	16bc <__flatcc_fb_gen_c_json_parser+0x16bc>
    16d0:	ldr	r6, [sp, #240]	; 0xf0
    16d4:	ldr	r5, [sp, #252]	; 0xfc
    16d8:	movw	r3, #0
    16dc:	mov	r2, #8
    16e0:	movt	r3, #0
    16e4:	mov	r0, r5
    16e8:	mov	r1, r6
    16ec:	bl	0 <qsort>
    16f0:	cmp	r6, #1
    16f4:	blt	1770 <__flatcc_fb_gen_c_json_parser+0x1770>
    16f8:	sub	r2, r6, #1
    16fc:	and	r0, r6, #3
    1700:	mov	r1, #0
    1704:	cmp	r2, #3
    1708:	bcc	1754 <__flatcc_fb_gen_c_json_parser+0x1754>
    170c:	sub	r2, r6, r0
    1710:	add	r3, r5, #16
    1714:	mov	r1, #0
    1718:	ldr	r7, [r3, #-16]
    171c:	add	r6, r1, #1
    1720:	str	r1, [r7, #124]	; 0x7c
    1724:	ldr	r7, [r3, #-8]
    1728:	str	r6, [r7, #124]	; 0x7c
    172c:	add	r6, r1, #2
    1730:	ldr	r7, [r3]
    1734:	str	r6, [r7, #124]	; 0x7c
    1738:	add	r6, r1, #3
    173c:	add	r1, r1, #4
    1740:	ldr	r7, [r3, #8]
    1744:	add	r3, r3, #32
    1748:	cmp	r2, r1
    174c:	str	r6, [r7, #124]	; 0x7c
    1750:	bne	1718 <__flatcc_fb_gen_c_json_parser+0x1718>
    1754:	cmp	r0, #0
    1758:	beq	1770 <__flatcc_fb_gen_c_json_parser+0x1770>
    175c:	ldr	r2, [r5, r1, lsl #3]
    1760:	subs	r0, r0, #1
    1764:	str	r1, [r2, #124]	; 0x7c
    1768:	add	r1, r1, #1
    176c:	bne	175c <__flatcc_fb_gen_c_json_parser+0x175c>
    1770:	ldr	r9, [sp, #240]	; 0xf0
    1774:	cmp	r9, #0
    1778:	beq	19e4 <__flatcc_fb_gen_c_json_parser+0x19e4>
    177c:	lsl	r0, r9, #4
    1780:	bl	0 <malloc>
    1784:	cmp	r0, #0
    1788:	beq	19f0 <__flatcc_fb_gen_c_json_parser+0x19f0>
    178c:	mov	r8, r0
    1790:	cmp	r9, #1
    1794:	blt	17d4 <__flatcc_fb_gen_c_json_parser+0x17d4>
    1798:	ldr	r0, [sp, #252]	; 0xfc
    179c:	add	r7, r8, #8
    17a0:	mov	sl, #0
    17a4:	mov	r5, r9
    17a8:	add	r6, r0, #4
    17ac:	ldr	r0, [r6]
    17b0:	str	r0, [r7, #-8]
    17b4:	bl	0 <strlen>
    17b8:	str	r0, [r7, #-4]
    17bc:	subs	r5, r5, #1
    17c0:	ldr	r0, [r6, #-4]
    17c4:	add	r6, r6, #8
    17c8:	stm	r7, {r0, sl}
    17cc:	add	r7, r7, #16
    17d0:	bne	17ac <__flatcc_fb_gen_c_json_parser+0x17ac>
    17d4:	movw	r3, #0
    17d8:	mov	r0, r8
    17dc:	mov	r1, r9
    17e0:	mov	r2, #16
    17e4:	movt	r3, #0
    17e8:	bl	0 <qsort>
    17ec:	ldr	r9, [sp, #240]	; 0xf0
    17f0:	b	19f4 <__flatcc_fb_gen_c_json_parser+0x19f4>
    17f4:	movw	r1, #0
    17f8:	mov	r0, r4
    17fc:	movt	r1, #0
    1800:	bl	2064 <println>
    1804:	movw	r1, #0
    1808:	add	r2, sp, #232	; 0xe8
    180c:	mov	r0, r4
    1810:	movt	r1, #0
    1814:	bl	2064 <println>
    1818:	movw	r1, #0
    181c:	mov	r0, r4
    1820:	movt	r1, #0
    1824:	bl	2064 <println>
    1828:	ldr	r0, [r4, #220]	; 0xdc
    182c:	movw	r1, #0
    1830:	movt	r1, #0
    1834:	add	r0, r0, #1
    1838:	str	r0, [r4, #220]	; 0xdc
    183c:	mov	r0, r4
    1840:	bl	2064 <println>
    1844:	ldr	r0, [r4, #220]	; 0xdc
    1848:	cmp	r0, #0
    184c:	beq	1fa4 <__flatcc_fb_gen_c_json_parser+0x1fa4>
    1850:	movw	r1, #0
    1854:	sub	r0, r0, #1
    1858:	movt	r1, #0
    185c:	str	r0, [r4, #220]	; 0xdc
    1860:	mov	r0, r4
    1864:	bl	2064 <println>
    1868:	movw	r1, #0
    186c:	mov	r0, r4
    1870:	movt	r1, #0
    1874:	bl	2064 <println>
    1878:	movw	r1, #0
    187c:	mov	r0, r4
    1880:	movt	r1, #0
    1884:	bl	2064 <println>
    1888:	movw	r1, #0
    188c:	mov	r0, r4
    1890:	movt	r1, #0
    1894:	bl	2064 <println>
    1898:	ldr	r0, [r4, #220]	; 0xdc
    189c:	cmp	r0, #0
    18a0:	bne	1968 <__flatcc_fb_gen_c_json_parser+0x1968>
    18a4:	movw	r0, #0
    18a8:	movw	r1, #0
    18ac:	movw	r3, #0
    18b0:	movw	r2, #1630	; 0x65e
    18b4:	b	1fb4 <__flatcc_fb_gen_c_json_parser+0x1fb4>
    18b8:	movw	r1, #0
    18bc:	mov	r0, r4
    18c0:	movt	r1, #0
    18c4:	bl	2064 <println>
    18c8:	movw	r1, #0
    18cc:	add	r2, sp, #232	; 0xe8
    18d0:	mov	r0, r4
    18d4:	movt	r1, #0
    18d8:	bl	2064 <println>
    18dc:	movw	r1, #0
    18e0:	mov	r0, r4
    18e4:	movt	r1, #0
    18e8:	bl	2064 <println>
    18ec:	ldr	r0, [r4, #220]	; 0xdc
    18f0:	movw	r1, #0
    18f4:	movt	r1, #0
    18f8:	add	r0, r0, #1
    18fc:	str	r0, [r4, #220]	; 0xdc
    1900:	mov	r0, r4
    1904:	bl	2064 <println>
    1908:	ldr	r0, [r4, #220]	; 0xdc
    190c:	cmp	r0, #0
    1910:	beq	1fc4 <__flatcc_fb_gen_c_json_parser+0x1fc4>
    1914:	movw	r1, #0
    1918:	sub	r0, r0, #1
    191c:	movt	r1, #0
    1920:	str	r0, [r4, #220]	; 0xdc
    1924:	mov	r0, r4
    1928:	bl	2064 <println>
    192c:	movw	r1, #0
    1930:	mov	r0, r4
    1934:	movt	r1, #0
    1938:	bl	2064 <println>
    193c:	movw	r1, #0
    1940:	mov	r0, r4
    1944:	movt	r1, #0
    1948:	bl	2064 <println>
    194c:	movw	r1, #0
    1950:	mov	r0, r4
    1954:	movt	r1, #0
    1958:	bl	2064 <println>
    195c:	ldr	r0, [r4, #220]	; 0xdc
    1960:	cmp	r0, #0
    1964:	beq	1fd8 <__flatcc_fb_gen_c_json_parser+0x1fd8>
    1968:	movw	r1, #0
    196c:	sub	r0, r0, #1
    1970:	movt	r1, #0
    1974:	str	r0, [r4, #220]	; 0xdc
    1978:	mov	r0, r4
    197c:	bl	2064 <println>
    1980:	movw	r1, #0
    1984:	mov	r0, r4
    1988:	movt	r1, #0
    198c:	bl	2064 <println>
    1990:	ldr	r0, [r4, #212]	; 0xd4
    1994:	ldr	r0, [r0, #140]	; 0x8c
    1998:	cmp	r0, #0
    199c:	beq	19b8 <__flatcc_fb_gen_c_json_parser+0x19b8>
    19a0:	ldr	r3, [r4, #204]	; 0xcc
    19a4:	movw	r0, #0
    19a8:	mov	r1, #36	; 0x24
    19ac:	mov	r2, #1
    19b0:	movt	r0, #0
    19b4:	bl	0 <fwrite>
    19b8:	ldr	r0, [r4, #208]	; 0xd0
    19bc:	movw	r1, #0
    19c0:	movt	r1, #0
    19c4:	ldr	r2, [r0, #164]	; 0xa4
    19c8:	mov	r0, r4
    19cc:	bl	2064 <println>
    19d0:	mov	r0, #0
    19d4:	sub	sp, fp, #48	; 0x30
    19d8:	vpop	{d8-d9}
    19dc:	add	sp, sp, #4
    19e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    19e4:	mov	r9, #0
    19e8:	str	r9, [sp, #8]
    19ec:	b	1a08 <__flatcc_fb_gen_c_json_parser+0x1a08>
    19f0:	mov	r8, #0
    19f4:	cmp	r9, #1
    19f8:	str	r8, [sp, #8]
    19fc:	blt	1a08 <__flatcc_fb_gen_c_json_parser+0x1a08>
    1a00:	cmp	r8, #0
    1a04:	beq	1ff8 <__flatcc_fb_gen_c_json_parser+0x1ff8>
    1a08:	mov	r0, #4
    1a0c:	movw	r1, #0
    1a10:	str	r0, [sp, #24]
    1a14:	mov	r0, #0
    1a18:	movt	r1, #0
    1a1c:	str	r0, [sp, #20]
    1a20:	movw	r0, #0
    1a24:	movt	r0, #0
    1a28:	str	r0, [sp, #16]
    1a2c:	movw	r0, #0
    1a30:	movt	r0, #0
    1a34:	str	r0, [sp, #12]
    1a38:	ldr	r0, [r4, #208]	; 0xd0
    1a3c:	ldr	r2, [r0, #160]	; 0xa0
    1a40:	mov	r0, r4
    1a44:	bl	2064 <println>
    1a48:	ldr	r0, [r4, #220]	; 0xdc
    1a4c:	movw	r1, #0
    1a50:	movt	r1, #0
    1a54:	add	r0, r0, #2
    1a58:	str	r0, [r4, #220]	; 0xdc
    1a5c:	mov	r0, r4
    1a60:	bl	2064 <println>
    1a64:	ldr	r0, [r4, #220]	; 0xdc
    1a68:	cmp	r0, #0
    1a6c:	beq	1f84 <__flatcc_fb_gen_c_json_parser+0x1f84>
    1a70:	subs	r1, r0, #1
    1a74:	str	r1, [r4, #220]	; 0xdc
    1a78:	beq	1f84 <__flatcc_fb_gen_c_json_parser+0x1f84>
    1a7c:	movw	r1, #0
    1a80:	sub	r0, r0, #2
    1a84:	movt	r1, #0
    1a88:	str	r0, [r4, #220]	; 0xdc
    1a8c:	mov	r0, r4
    1a90:	bl	2064 <println>
    1a94:	ldr	r0, [r4, #220]	; 0xdc
    1a98:	cmp	r9, #0
    1a9c:	add	r0, r0, #1
    1aa0:	str	r0, [r4, #220]	; 0xdc
    1aa4:	beq	1b44 <__flatcc_fb_gen_c_json_parser+0x1b44>
    1aa8:	movw	r1, #0
    1aac:	mov	r0, r4
    1ab0:	movt	r1, #0
    1ab4:	bl	2064 <println>
    1ab8:	movw	r1, #0
    1abc:	mov	r0, r4
    1ac0:	movt	r1, #0
    1ac4:	bl	2064 <println>
    1ac8:	movw	r1, #0
    1acc:	mov	r0, r4
    1ad0:	movt	r1, #0
    1ad4:	bl	2064 <println>
    1ad8:	movw	r1, #0
    1adc:	mov	r0, r4
    1ae0:	movt	r1, #0
    1ae4:	bl	2064 <println>
    1ae8:	movw	r1, #0
    1aec:	mov	r0, r4
    1af0:	movt	r1, #0
    1af4:	bl	2064 <println>
    1af8:	mov	r0, #0
    1afc:	sub	r3, r9, #1
    1b00:	add	r1, sp, #8
    1b04:	mov	r2, #0
    1b08:	str	r0, [sp]
    1b0c:	mov	r0, r4
    1b10:	bl	2a64 <gen_trie>
    1b14:	movw	r1, #0
    1b18:	mov	r0, r4
    1b1c:	movt	r1, #0
    1b20:	bl	2064 <println>
    1b24:	ldr	r0, [r4, #220]	; 0xdc
    1b28:	cmp	r0, #0
    1b2c:	bne	1b70 <__flatcc_fb_gen_c_json_parser+0x1b70>
    1b30:	movw	r0, #0
    1b34:	movw	r1, #0
    1b38:	movw	r3, #0
    1b3c:	movw	r2, #1219	; 0x4c3
    1b40:	b	1f94 <__flatcc_fb_gen_c_json_parser+0x1f94>
    1b44:	movw	r1, #0
    1b48:	mov	r0, r4
    1b4c:	movt	r1, #0
    1b50:	bl	2064 <println>
    1b54:	movw	r1, #0
    1b58:	mov	r0, r4
    1b5c:	movt	r1, #0
    1b60:	bl	2064 <println>
    1b64:	ldr	r0, [r4, #220]	; 0xdc
    1b68:	cmp	r0, #0
    1b6c:	beq	2050 <__flatcc_fb_gen_c_json_parser+0x2050>
    1b70:	movw	r1, #0
    1b74:	sub	r0, r0, #1
    1b78:	movt	r1, #0
    1b7c:	str	r0, [r4, #220]	; 0xdc
    1b80:	mov	r0, r4
    1b84:	bl	2064 <println>
    1b88:	movw	r1, #0
    1b8c:	mov	r0, r4
    1b90:	movt	r1, #0
    1b94:	bl	2064 <println>
    1b98:	ldr	r0, [sp, #8]
    1b9c:	cmp	r0, #0
    1ba0:	beq	1ba8 <__flatcc_fb_gen_c_json_parser+0x1ba8>
    1ba4:	bl	0 <free>
    1ba8:	ldr	r0, [sp, #248]	; 0xf8
    1bac:	cmp	r0, #0
    1bb0:	beq	1bb8 <__flatcc_fb_gen_c_json_parser+0x1bb8>
    1bb4:	bl	0 <free>
    1bb8:	ldr	r0, [sp, #252]	; 0xfc
    1bbc:	cmp	r0, #0
    1bc0:	bne	13bc <__flatcc_fb_gen_c_json_parser+0x13bc>
    1bc4:	b	13c0 <__flatcc_fb_gen_c_json_parser+0x13c0>
    1bc8:	movw	r0, #0
    1bcc:	movw	r1, #0
    1bd0:	movw	r4, #0
    1bd4:	movw	r3, #1535	; 0x5ff
    1bd8:	movt	r0, #0
    1bdc:	movt	r1, #0
    1be0:	movt	r4, #0
    1be4:	ldr	r0, [r0]
    1be8:	str	r1, [sp]
    1bec:	movw	r1, #0
    1bf0:	mov	r2, r4
    1bf4:	movt	r1, #0
    1bf8:	bl	0 <fprintf>
    1bfc:	movw	r0, #0
    1c00:	movw	r3, #0
    1c04:	mov	r1, r4
    1c08:	movw	r2, #1535	; 0x5ff
    1c0c:	b	1c68 <__flatcc_fb_gen_c_json_parser+0x1c68>
    1c10:	movw	r0, #0
    1c14:	movw	r1, #0
    1c18:	movw	r3, #0
    1c1c:	movw	r2, #1532	; 0x5fc
    1c20:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1c24:	movw	r0, #0
    1c28:	movw	r1, #0
    1c2c:	movw	r4, #0
    1c30:	movw	r3, #1522	; 0x5f2
    1c34:	movt	r0, #0
    1c38:	movt	r1, #0
    1c3c:	movt	r4, #0
    1c40:	ldr	r0, [r0]
    1c44:	str	r1, [sp]
    1c48:	movw	r1, #0
    1c4c:	mov	r2, r4
    1c50:	movt	r1, #0
    1c54:	bl	0 <fprintf>
    1c58:	movw	r0, #0
    1c5c:	movw	r3, #0
    1c60:	mov	r1, r4
    1c64:	movw	r2, #1522	; 0x5f2
    1c68:	movt	r0, #0
    1c6c:	movt	r3, #0
    1c70:	bl	0 <__assert_fail>
    1c74:	movw	r0, #0
    1c78:	movw	r1, #0
    1c7c:	movw	r3, #0
    1c80:	movw	r2, #1526	; 0x5f6
    1c84:	movt	r0, #0
    1c88:	movt	r1, #0
    1c8c:	movt	r3, #0
    1c90:	bl	0 <__assert_fail>
    1c94:	movw	r0, #0
    1c98:	movw	r1, #0
    1c9c:	movw	r3, #0
    1ca0:	movw	r2, #1747	; 0x6d3
    1ca4:	b	1f4c <__flatcc_fb_gen_c_json_parser+0x1f4c>
    1ca8:	movw	r0, #0
    1cac:	movw	r1, #0
    1cb0:	movw	r3, #0
    1cb4:	movw	r2, #1731	; 0x6c3
    1cb8:	b	1f4c <__flatcc_fb_gen_c_json_parser+0x1f4c>
    1cbc:	movw	r0, #0
    1cc0:	movw	r1, #0
    1cc4:	movw	r3, #0
    1cc8:	movw	r2, #1390	; 0x56e
    1ccc:	movt	r0, #0
    1cd0:	b	1f30 <__flatcc_fb_gen_c_json_parser+0x1f30>
    1cd4:	movw	r0, #0
    1cd8:	movw	r1, #0
    1cdc:	movw	r4, #0
    1ce0:	mov	r3, #1392	; 0x570
    1ce4:	movt	r0, #0
    1ce8:	movt	r1, #0
    1cec:	movt	r4, #0
    1cf0:	ldr	r0, [r0]
    1cf4:	str	r1, [sp]
    1cf8:	movw	r1, #0
    1cfc:	mov	r2, r4
    1d00:	movt	r1, #0
    1d04:	bl	0 <fprintf>
    1d08:	movw	r0, #0
    1d0c:	movw	r3, #0
    1d10:	mov	r1, r4
    1d14:	mov	r2, #1392	; 0x570
    1d18:	movt	r0, #0
    1d1c:	movt	r3, #0
    1d20:	bl	0 <__assert_fail>
    1d24:	movw	r0, #0
    1d28:	movw	r1, #0
    1d2c:	movw	r3, #0
    1d30:	movw	r2, #1301	; 0x515
    1d34:	movt	r0, #0
    1d38:	b	1e9c <__flatcc_fb_gen_c_json_parser+0x1e9c>
    1d3c:	movw	r0, #0
    1d40:	movw	r1, #0
    1d44:	movw	r4, #0
    1d48:	movw	r3, #1303	; 0x517
    1d4c:	movt	r0, #0
    1d50:	movt	r1, #0
    1d54:	movt	r4, #0
    1d58:	ldr	r0, [r0]
    1d5c:	str	r1, [sp]
    1d60:	movw	r1, #0
    1d64:	mov	r2, r4
    1d68:	movt	r1, #0
    1d6c:	bl	0 <fprintf>
    1d70:	movw	r0, #0
    1d74:	movw	r3, #0
    1d78:	mov	r1, r4
    1d7c:	movw	r2, #1303	; 0x517
    1d80:	movt	r0, #0
    1d84:	movt	r3, #0
    1d88:	bl	0 <__assert_fail>
    1d8c:	movw	r0, #0
    1d90:	movw	r1, #0
    1d94:	movw	r3, #0
    1d98:	movw	r2, #1503	; 0x5df
    1d9c:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1da0:	movw	r0, #0
    1da4:	movw	r1, #0
    1da8:	movw	r3, #0
    1dac:	movw	r2, #1543	; 0x607
    1db0:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1db4:	movw	r0, #0
    1db8:	movw	r1, #0
    1dbc:	movw	r3, #0
    1dc0:	movw	r2, #1545	; 0x609
    1dc4:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1dc8:	movw	r0, #0
    1dcc:	movw	r1, #0
    1dd0:	movw	r3, #0
    1dd4:	movw	r2, #1546	; 0x60a
    1dd8:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1ddc:	movw	r0, #0
    1de0:	movw	r1, #0
    1de4:	movw	r3, #0
    1de8:	movw	r2, #1550	; 0x60e
    1dec:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1df0:	movw	r0, #0
    1df4:	movw	r1, #0
    1df8:	movw	r3, #0
    1dfc:	mov	r2, #1552	; 0x610
    1e00:	b	1c84 <__flatcc_fb_gen_c_json_parser+0x1c84>
    1e04:	movw	r0, #0
    1e08:	movw	r1, #0
    1e0c:	movw	r3, #0
    1e10:	movw	r2, #1582	; 0x62e
    1e14:	b	1e28 <__flatcc_fb_gen_c_json_parser+0x1e28>
    1e18:	movw	r0, #0
    1e1c:	movw	r1, #0
    1e20:	movw	r3, #0
    1e24:	movw	r2, #1583	; 0x62f
    1e28:	movt	r0, #0
    1e2c:	movt	r1, #0
    1e30:	movt	r3, #0
    1e34:	bl	0 <__assert_fail>
    1e38:	movw	r0, #0
    1e3c:	movw	r1, #0
    1e40:	movw	r3, #0
    1e44:	movw	r2, #1438	; 0x59e
    1e48:	b	1f2c <__flatcc_fb_gen_c_json_parser+0x1f2c>
    1e4c:	movw	r0, #0
    1e50:	movw	r1, #0
    1e54:	movw	r3, #0
    1e58:	movw	r2, #1473	; 0x5c1
    1e5c:	b	1f2c <__flatcc_fb_gen_c_json_parser+0x1f2c>
    1e60:	movw	r0, #0
    1e64:	movw	r1, #0
    1e68:	movw	r3, #0
    1e6c:	movw	r2, #1479	; 0x5c7
    1e70:	b	1f2c <__flatcc_fb_gen_c_json_parser+0x1f2c>
    1e74:	movw	r0, #0
    1e78:	movw	r1, #0
    1e7c:	movw	r3, #0
    1e80:	movw	r2, #1334	; 0x536
    1e84:	b	1e98 <__flatcc_fb_gen_c_json_parser+0x1e98>
    1e88:	movw	r0, #0
    1e8c:	movw	r1, #0
    1e90:	movw	r3, #0
    1e94:	movw	r2, #1343	; 0x53f
    1e98:	movt	r0, #0
    1e9c:	movt	r1, #0
    1ea0:	movt	r3, #0
    1ea4:	bl	0 <__assert_fail>
    1ea8:	movw	r0, #0
    1eac:	movw	r1, #0
    1eb0:	movw	r3, #0
    1eb4:	movw	r2, #1353	; 0x549
    1eb8:	movt	r0, #0
    1ebc:	b	1ee8 <__flatcc_fb_gen_c_json_parser+0x1ee8>
    1ec0:	movw	r0, #0
    1ec4:	movw	r1, #0
    1ec8:	movw	r3, #0
    1ecc:	movw	r2, #1370	; 0x55a
    1ed0:	b	1ee4 <__flatcc_fb_gen_c_json_parser+0x1ee4>
    1ed4:	movw	r0, #0
    1ed8:	movw	r1, #0
    1edc:	movw	r3, #0
    1ee0:	mov	r2, #1376	; 0x560
    1ee4:	movt	r0, #0
    1ee8:	movt	r1, #0
    1eec:	movt	r3, #0
    1ef0:	bl	0 <__assert_fail>
    1ef4:	movw	r0, #0
    1ef8:	movw	r1, #0
    1efc:	movw	r3, #0
    1f00:	movw	r2, #1755	; 0x6db
    1f04:	b	1f4c <__flatcc_fb_gen_c_json_parser+0x1f4c>
    1f08:	movw	r0, #0
    1f0c:	movw	r1, #0
    1f10:	movw	r3, #0
    1f14:	movw	r2, #1458	; 0x5b2
    1f18:	b	1f2c <__flatcc_fb_gen_c_json_parser+0x1f2c>
    1f1c:	movw	r0, #0
    1f20:	movw	r1, #0
    1f24:	movw	r3, #0
    1f28:	movw	r2, #1461	; 0x5b5
    1f2c:	movt	r0, #0
    1f30:	movt	r1, #0
    1f34:	movt	r3, #0
    1f38:	bl	0 <__assert_fail>
    1f3c:	movw	r0, #0
    1f40:	movw	r1, #0
    1f44:	movw	r3, #0
    1f48:	movw	r2, #1716	; 0x6b4
    1f4c:	movt	r0, #0
    1f50:	movt	r1, #0
    1f54:	movt	r3, #0
    1f58:	bl	0 <__assert_fail>
    1f5c:	movw	r0, #0
    1f60:	movw	r1, #0
    1f64:	movw	r3, #0
    1f68:	movw	r2, #1610	; 0x64a
    1f6c:	b	1fb4 <__flatcc_fb_gen_c_json_parser+0x1fb4>
    1f70:	movw	r0, #0
    1f74:	movw	r1, #0
    1f78:	movw	r3, #0
    1f7c:	movw	r2, #1645	; 0x66d
    1f80:	b	1fe8 <__flatcc_fb_gen_c_json_parser+0x1fe8>
    1f84:	movw	r0, #0
    1f88:	movw	r1, #0
    1f8c:	movw	r3, #0
    1f90:	movw	r2, #1205	; 0x4b5
    1f94:	movt	r0, #0
    1f98:	movt	r1, #0
    1f9c:	movt	r3, #0
    1fa0:	bl	0 <__assert_fail>
    1fa4:	movw	r0, #0
    1fa8:	movw	r1, #0
    1fac:	movw	r3, #0
    1fb0:	movw	r2, #1626	; 0x65a
    1fb4:	movt	r0, #0
    1fb8:	movt	r1, #0
    1fbc:	movt	r3, #0
    1fc0:	bl	0 <__assert_fail>
    1fc4:	movw	r0, #0
    1fc8:	movw	r1, #0
    1fcc:	movw	r3, #0
    1fd0:	movw	r2, #1661	; 0x67d
    1fd4:	b	1fe8 <__flatcc_fb_gen_c_json_parser+0x1fe8>
    1fd8:	movw	r0, #0
    1fdc:	movw	r1, #0
    1fe0:	movw	r3, #0
    1fe4:	movw	r2, #1665	; 0x681
    1fe8:	movt	r0, #0
    1fec:	movt	r1, #0
    1ff0:	movt	r3, #0
    1ff4:	bl	0 <__assert_fail>
    1ff8:	add	r0, sp, #232	; 0xe8
    1ffc:	bl	4d74 <clear_catalog>
    2000:	movw	r0, #0
    2004:	movw	r1, #0
    2008:	movw	r4, #0
    200c:	movw	r3, #1194	; 0x4aa
    2010:	movt	r0, #0
    2014:	movt	r1, #0
    2018:	movt	r4, #0
    201c:	ldr	r0, [r0]
    2020:	str	r1, [sp]
    2024:	movw	r1, #0
    2028:	mov	r2, r4
    202c:	movt	r1, #0
    2030:	bl	0 <fprintf>
    2034:	movw	r0, #0
    2038:	movw	r3, #0
    203c:	mov	r1, r4
    2040:	movw	r2, #1194	; 0x4aa
    2044:	movt	r0, #0
    2048:	movt	r3, #0
    204c:	bl	0 <__assert_fail>
    2050:	movw	r0, #0
    2054:	movw	r1, #0
    2058:	movw	r3, #0
    205c:	movw	r2, #1210	; 0x4ba
    2060:	b	1f94 <__flatcc_fb_gen_c_json_parser+0x1f94>

00002064 <println>:
    2064:	sub	sp, sp, #8
    2068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    206c:	add	fp, sp, #28
    2070:	sub	sp, sp, #4
    2074:	str	r2, [fp, #8]
    2078:	str	r3, [fp, #12]
    207c:	mov	r4, r0
    2080:	mov	r8, r1
    2084:	ldr	r0, [r0, #212]	; 0xd4
    2088:	ldr	r5, [r4, #220]	; 0xdc
    208c:	ldr	r6, [r0, #176]	; 0xb0
    2090:	movw	r0, #0
    2094:	movt	r0, #0
    2098:	ldrb	r0, [r0]
    209c:	cmp	r0, #0
    20a0:	bne	20b8 <println+0x54>
    20a4:	movw	r0, #0
    20a8:	mov	r1, #32
    20ac:	mov	r2, #64	; 0x40
    20b0:	movt	r0, #0
    20b4:	bl	0 <memset>
    20b8:	ldrb	r0, [r8]
    20bc:	cmp	r0, #0
    20c0:	beq	2144 <println+0xe0>
    20c4:	mul	sl, r6, r5
    20c8:	ldr	r0, [r4, #204]	; 0xcc
    20cc:	cmp	sl, #65	; 0x41
    20d0:	blt	2118 <println+0xb4>
    20d4:	movw	r7, #0
    20d8:	movw	r5, #0
    20dc:	sub	r1, sl, #65	; 0x41
    20e0:	mov	r6, sl
    20e4:	movt	r7, #0
    20e8:	movt	r5, #0
    20ec:	bic	r9, r1, #63	; 0x3f
    20f0:	mov	r1, r7
    20f4:	mov	r2, #64	; 0x40
    20f8:	mov	r3, r5
    20fc:	bl	0 <fprintf>
    2100:	ldr	r0, [r4, #204]	; 0xcc
    2104:	sub	r6, r6, #64	; 0x40
    2108:	cmp	r6, #64	; 0x40
    210c:	bgt	20f0 <println+0x8c>
    2110:	sub	r1, sl, r9
    2114:	sub	sl, r1, #64	; 0x40
    2118:	movw	r1, #0
    211c:	movw	r3, #0
    2120:	mov	r2, sl
    2124:	movt	r1, #0
    2128:	movt	r3, #0
    212c:	bl	0 <fprintf>
    2130:	add	r2, fp, #8
    2134:	mov	r1, r8
    2138:	str	r2, [sp]
    213c:	ldr	r0, [r4, #204]	; 0xcc
    2140:	bl	0 <vfprintf>
    2144:	ldr	r1, [r4, #204]	; 0xcc
    2148:	mov	r0, #10
    214c:	bl	0 <fputc>
    2150:	sub	sp, fp, #28
    2154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2158:	add	sp, sp, #8
    215c:	bx	lr

00002160 <gen_local_scope_prototype>:
    2160:	push	{r4, r5, fp, lr}
    2164:	add	fp, sp, #8
    2168:	sub	sp, sp, #208	; 0xd0
    216c:	add	r5, sp, #4
    2170:	mov	r4, r0
    2174:	mov	r0, r1
    2178:	mov	r1, r5
    217c:	bl	0 <__flatcc_fb_copy_scope>
    2180:	ldr	r0, [r4, #208]	; 0xd0
    2184:	movw	r1, #0
    2188:	mov	r3, r5
    218c:	movt	r1, #0
    2190:	ldr	r2, [r0, #160]	; 0xa0
    2194:	mov	r0, r4
    2198:	bl	2064 <println>
    219c:	movw	r1, #0
    21a0:	mov	r0, r4
    21a4:	movt	r1, #0
    21a8:	bl	2064 <println>
    21ac:	sub	sp, fp, #8
    21b0:	pop	{r4, r5, fp, pc}

000021b4 <gen_enum_parser>:
    21b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    21b8:	add	fp, sp, #24
    21bc:	sub	sp, sp, #264	; 0x108
    21c0:	vmov.i32	q8, #0	; 0x00000000
    21c4:	mov	r4, r0
    21c8:	mov	r0, #0
    21cc:	mov	r5, r1
    21d0:	add	r1, sp, #8
    21d4:	str	r0, [sp, #36]	; 0x24
    21d8:	mov	r0, #12
    21dc:	vst1.64	{d16-d17}, [r1], r0
    21e0:	vst1.32	{d16-d17}, [r1]
    21e4:	ldrh	r0, [r5, #8]
    21e8:	sub	r0, r0, #3
    21ec:	uxth	r0, r0
    21f0:	cmp	r0, #2
    21f4:	bcs	2408 <gen_enum_parser+0x254>
    21f8:	add	r1, sp, #36	; 0x24
    21fc:	mov	r0, r5
    2200:	bl	2784 <build_compound_dict>
    2204:	ldr	r7, [sp, #36]	; 0x24
    2208:	cmp	r0, #0
    220c:	str	r0, [sp, #8]
    2210:	bne	221c <gen_enum_parser+0x68>
    2214:	cmp	r7, #1
    2218:	bge	2428 <gen_enum_parser+0x274>
    221c:	mov	r0, #2
    2220:	add	r6, sp, #40	; 0x28
    2224:	mov	r1, #0
    2228:	mov	r2, #220	; 0xdc
    222c:	str	r0, [sp, #24]
    2230:	movw	r0, #0
    2234:	str	r5, [sp, #20]
    2238:	movt	r0, #0
    223c:	str	r0, [sp, #16]
    2240:	movw	r0, #0
    2244:	movt	r0, #0
    2248:	str	r0, [sp, #12]
    224c:	mov	r0, r6
    2250:	bl	0 <memset>
    2254:	ldr	r0, [r5, #12]
    2258:	mov	r1, r5
    225c:	mov	r2, r6
    2260:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2264:	movw	r1, #0
    2268:	mov	r0, r4
    226c:	mov	r2, r6
    2270:	movt	r1, #0
    2274:	bl	2064 <println>
    2278:	ldr	r0, [r4, #220]	; 0xdc
    227c:	movw	r1, #0
    2280:	movt	r1, #0
    2284:	add	r0, r0, #2
    2288:	str	r0, [r4, #220]	; 0xdc
    228c:	mov	r0, r4
    2290:	bl	2064 <println>
    2294:	ldr	r0, [r4, #220]	; 0xdc
    2298:	cmp	r0, #0
    229c:	beq	23f0 <gen_enum_parser+0x23c>
    22a0:	subs	r1, r0, #1
    22a4:	str	r1, [r4, #220]	; 0xdc
    22a8:	beq	23f0 <gen_enum_parser+0x23c>
    22ac:	movw	r1, #0
    22b0:	sub	r0, r0, #2
    22b4:	movt	r1, #0
    22b8:	str	r0, [r4, #220]	; 0xdc
    22bc:	mov	r0, r4
    22c0:	bl	2064 <println>
    22c4:	ldr	r0, [r4, #220]	; 0xdc
    22c8:	cmp	r7, #0
    22cc:	add	r0, r0, #1
    22d0:	str	r0, [r4, #220]	; 0xdc
    22d4:	beq	2374 <gen_enum_parser+0x1c0>
    22d8:	movw	r1, #0
    22dc:	mov	r0, r4
    22e0:	movt	r1, #0
    22e4:	bl	2064 <println>
    22e8:	movw	r1, #0
    22ec:	mov	r0, r4
    22f0:	movt	r1, #0
    22f4:	bl	2064 <println>
    22f8:	movw	r1, #0
    22fc:	mov	r0, r4
    2300:	movt	r1, #0
    2304:	bl	2064 <println>
    2308:	movw	r1, #0
    230c:	mov	r0, r4
    2310:	movt	r1, #0
    2314:	bl	2064 <println>
    2318:	movw	r1, #0
    231c:	mov	r0, r4
    2320:	movt	r1, #0
    2324:	bl	2064 <println>
    2328:	mov	r0, #0
    232c:	sub	r3, r7, #1
    2330:	add	r1, sp, #8
    2334:	mov	r2, #0
    2338:	str	r0, [sp]
    233c:	mov	r0, r4
    2340:	bl	2a64 <gen_trie>
    2344:	movw	r1, #0
    2348:	mov	r0, r4
    234c:	movt	r1, #0
    2350:	bl	2064 <println>
    2354:	ldr	r0, [r4, #220]	; 0xdc
    2358:	cmp	r0, #0
    235c:	bne	23b0 <gen_enum_parser+0x1fc>
    2360:	movw	r0, #0
    2364:	movw	r1, #0
    2368:	movw	r3, #0
    236c:	movw	r2, #1278	; 0x4fe
    2370:	b	2400 <gen_enum_parser+0x24c>
    2374:	movw	r1, #0
    2378:	mov	r0, r4
    237c:	movt	r1, #0
    2380:	bl	2064 <println>
    2384:	movw	r1, #0
    2388:	mov	r0, r4
    238c:	movt	r1, #0
    2390:	bl	2064 <println>
    2394:	movw	r1, #0
    2398:	mov	r0, r4
    239c:	movt	r1, #0
    23a0:	bl	2064 <println>
    23a4:	ldr	r0, [r4, #220]	; 0xdc
    23a8:	cmp	r0, #0
    23ac:	beq	2478 <gen_enum_parser+0x2c4>
    23b0:	movw	r1, #0
    23b4:	sub	r0, r0, #1
    23b8:	movt	r1, #0
    23bc:	str	r0, [r4, #220]	; 0xdc
    23c0:	mov	r0, r4
    23c4:	bl	2064 <println>
    23c8:	movw	r1, #0
    23cc:	mov	r0, r4
    23d0:	movt	r1, #0
    23d4:	bl	2064 <println>
    23d8:	ldr	r0, [sp, #8]
    23dc:	cmp	r0, #0
    23e0:	beq	23e8 <gen_enum_parser+0x234>
    23e4:	bl	0 <free>
    23e8:	sub	sp, fp, #24
    23ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    23f0:	movw	r0, #0
    23f4:	movw	r1, #0
    23f8:	movw	r3, #0
    23fc:	movw	r2, #1263	; 0x4ef
    2400:	movt	r0, #0
    2404:	b	241c <gen_enum_parser+0x268>
    2408:	movw	r0, #0
    240c:	movw	r1, #0
    2410:	movw	r3, #0
    2414:	movw	r2, #1246	; 0x4de
    2418:	movt	r0, #0
    241c:	movt	r1, #0
    2420:	movt	r3, #0
    2424:	bl	0 <__assert_fail>
    2428:	movw	r0, #0
    242c:	movw	r1, #0
    2430:	movw	r4, #0
    2434:	movw	r3, #1249	; 0x4e1
    2438:	movt	r0, #0
    243c:	movt	r1, #0
    2440:	movt	r4, #0
    2444:	ldr	r0, [r0]
    2448:	str	r1, [sp]
    244c:	movw	r1, #0
    2450:	mov	r2, r4
    2454:	movt	r1, #0
    2458:	bl	0 <fprintf>
    245c:	movw	r0, #0
    2460:	movw	r3, #0
    2464:	mov	r1, r4
    2468:	movw	r2, #1249	; 0x4e1
    246c:	movt	r0, #0
    2470:	movt	r3, #0
    2474:	bl	0 <__assert_fail>
    2478:	movw	r0, #0
    247c:	movw	r1, #0
    2480:	movw	r3, #0
    2484:	movw	r2, #1269	; 0x4f5
    2488:	b	2400 <gen_enum_parser+0x24c>

0000248c <gen_local_scope_parser>:
    248c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2490:	add	fp, sp, #24
    2494:	sub	sp, sp, #256	; 0x100
    2498:	vmov.i32	q8, #0	; 0x00000000
    249c:	mov	r5, r1
    24a0:	mov	r4, r0
    24a4:	mov	r0, #12
    24a8:	sub	r1, fp, #72	; 0x48
    24ac:	vst1.64	{d16-d17}, [r1], r0
    24b0:	mov	r0, r5
    24b4:	vst1.32	{d16-d17}, [r1]
    24b8:	add	r1, sp, #4
    24bc:	bl	0 <__flatcc_fb_copy_scope>
    24c0:	ldr	r0, [r4, #208]	; 0xd0
    24c4:	movw	r1, #0
    24c8:	mov	r6, #0
    24cc:	add	r5, r5, #4
    24d0:	sub	r2, fp, #40	; 0x28
    24d4:	movt	r1, #0
    24d8:	str	r6, [fp, #-40]	; 0xffffffd8
    24dc:	str	r6, [fp, #-32]	; 0xffffffe0
    24e0:	str	r0, [fp, #-36]	; 0xffffffdc
    24e4:	mov	r0, r5
    24e8:	bl	0 <fb_symbol_table_visit>
    24ec:	ldr	r8, [fp, #-40]	; 0xffffffd8
    24f0:	cmp	r8, #0
    24f4:	beq	2540 <gen_local_scope_parser+0xb4>
    24f8:	lsl	r0, r8, #4
    24fc:	bl	0 <malloc>
    2500:	cmp	r0, #0
    2504:	beq	2540 <gen_local_scope_parser+0xb4>
    2508:	movw	r1, #0
    250c:	mov	r7, r0
    2510:	str	r0, [fp, #-32]	; 0xffffffe0
    2514:	sub	r2, fp, #40	; 0x28
    2518:	mov	r0, r5
    251c:	movt	r1, #0
    2520:	bl	0 <fb_symbol_table_visit>
    2524:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2528:	movw	r3, #0
    252c:	mov	r0, r7
    2530:	mov	r2, #16
    2534:	movt	r3, #0
    2538:	bl	0 <qsort>
    253c:	mov	r6, r7
    2540:	cmp	r8, #1
    2544:	str	r6, [fp, #-72]	; 0xffffffb8
    2548:	blt	2554 <gen_local_scope_parser+0xc8>
    254c:	cmp	r6, #0
    2550:	beq	2720 <gen_local_scope_parser+0x294>
    2554:	mov	r0, #3
    2558:	movw	r1, #0
    255c:	add	r3, sp, #4
    2560:	str	r0, [fp, #-56]	; 0xffffffc8
    2564:	mov	r0, #0
    2568:	movt	r1, #0
    256c:	str	r0, [fp, #-60]	; 0xffffffc4
    2570:	movw	r0, #0
    2574:	movt	r0, #0
    2578:	str	r0, [fp, #-64]	; 0xffffffc0
    257c:	movw	r0, #0
    2580:	movt	r0, #0
    2584:	str	r0, [fp, #-68]	; 0xffffffbc
    2588:	ldr	r0, [r4, #208]	; 0xd0
    258c:	ldr	r2, [r0, #160]	; 0xa0
    2590:	mov	r0, r4
    2594:	bl	2064 <println>
    2598:	ldr	r0, [r4, #220]	; 0xdc
    259c:	movw	r1, #0
    25a0:	movt	r1, #0
    25a4:	add	r0, r0, #2
    25a8:	str	r0, [r4, #220]	; 0xdc
    25ac:	mov	r0, r4
    25b0:	bl	2064 <println>
    25b4:	ldr	r0, [r4, #220]	; 0xdc
    25b8:	cmp	r0, #0
    25bc:	beq	2700 <gen_local_scope_parser+0x274>
    25c0:	subs	r1, r0, #1
    25c4:	str	r1, [r4, #220]	; 0xdc
    25c8:	beq	2700 <gen_local_scope_parser+0x274>
    25cc:	movw	r1, #0
    25d0:	sub	r0, r0, #2
    25d4:	movt	r1, #0
    25d8:	str	r0, [r4, #220]	; 0xdc
    25dc:	mov	r0, r4
    25e0:	bl	2064 <println>
    25e4:	ldr	r0, [r4, #220]	; 0xdc
    25e8:	cmp	r8, #0
    25ec:	add	r0, r0, #1
    25f0:	str	r0, [r4, #220]	; 0xdc
    25f4:	beq	2694 <gen_local_scope_parser+0x208>
    25f8:	movw	r1, #0
    25fc:	mov	r0, r4
    2600:	movt	r1, #0
    2604:	bl	2064 <println>
    2608:	movw	r1, #0
    260c:	mov	r0, r4
    2610:	movt	r1, #0
    2614:	bl	2064 <println>
    2618:	movw	r1, #0
    261c:	mov	r0, r4
    2620:	movt	r1, #0
    2624:	bl	2064 <println>
    2628:	movw	r1, #0
    262c:	mov	r0, r4
    2630:	movt	r1, #0
    2634:	bl	2064 <println>
    2638:	movw	r1, #0
    263c:	mov	r0, r4
    2640:	movt	r1, #0
    2644:	bl	2064 <println>
    2648:	mov	r0, #0
    264c:	sub	r3, r8, #1
    2650:	sub	r1, fp, #72	; 0x48
    2654:	mov	r2, #0
    2658:	str	r0, [sp]
    265c:	mov	r0, r4
    2660:	bl	2a64 <gen_trie>
    2664:	movw	r1, #0
    2668:	mov	r0, r4
    266c:	movt	r1, #0
    2670:	bl	2064 <println>
    2674:	ldr	r0, [r4, #220]	; 0xdc
    2678:	cmp	r0, #0
    267c:	bne	26c0 <gen_local_scope_parser+0x234>
    2680:	movw	r0, #0
    2684:	movw	r1, #0
    2688:	movw	r3, #0
    268c:	movw	r2, #1166	; 0x48e
    2690:	b	2710 <gen_local_scope_parser+0x284>
    2694:	movw	r1, #0
    2698:	mov	r0, r4
    269c:	movt	r1, #0
    26a0:	bl	2064 <println>
    26a4:	movw	r1, #0
    26a8:	mov	r0, r4
    26ac:	movt	r1, #0
    26b0:	bl	2064 <println>
    26b4:	ldr	r0, [r4, #220]	; 0xdc
    26b8:	cmp	r0, #0
    26bc:	beq	2770 <gen_local_scope_parser+0x2e4>
    26c0:	movw	r1, #0
    26c4:	sub	r0, r0, #1
    26c8:	movt	r1, #0
    26cc:	str	r0, [r4, #220]	; 0xdc
    26d0:	mov	r0, r4
    26d4:	bl	2064 <println>
    26d8:	movw	r1, #0
    26dc:	mov	r0, r4
    26e0:	movt	r1, #0
    26e4:	bl	2064 <println>
    26e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    26ec:	cmp	r0, #0
    26f0:	beq	26f8 <gen_local_scope_parser+0x26c>
    26f4:	bl	0 <free>
    26f8:	sub	sp, fp, #24
    26fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2700:	movw	r0, #0
    2704:	movw	r1, #0
    2708:	movw	r3, #0
    270c:	mov	r2, #1152	; 0x480
    2710:	movt	r0, #0
    2714:	movt	r1, #0
    2718:	movt	r3, #0
    271c:	bl	0 <__assert_fail>
    2720:	movw	r0, #0
    2724:	movw	r1, #0
    2728:	movw	r4, #0
    272c:	movw	r3, #1140	; 0x474
    2730:	movt	r0, #0
    2734:	movt	r1, #0
    2738:	movt	r4, #0
    273c:	ldr	r0, [r0]
    2740:	str	r1, [sp]
    2744:	movw	r1, #0
    2748:	mov	r2, r4
    274c:	movt	r1, #0
    2750:	bl	0 <fprintf>
    2754:	movw	r0, #0
    2758:	movw	r3, #0
    275c:	mov	r1, r4
    2760:	movw	r2, #1140	; 0x474
    2764:	movt	r0, #0
    2768:	movt	r3, #0
    276c:	bl	0 <__assert_fail>
    2770:	movw	r0, #0
    2774:	movw	r1, #0
    2778:	movw	r3, #0
    277c:	movw	r2, #1157	; 0x485
    2780:	b	2710 <gen_local_scope_parser+0x284>

00002784 <build_compound_dict>:
    2784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2788:	add	fp, sp, #28
    278c:	sub	sp, sp, #4
    2790:	ldr	r7, [r0, #20]
    2794:	cmp	r7, #0
    2798:	beq	28ec <build_compound_dict+0x168>
    279c:	mov	r0, #0
    27a0:	mov	r2, r7
    27a4:	mov	r4, #0
    27a8:	b	27bc <build_compound_dict+0x38>
    27ac:	add	r4, r4, #1
    27b0:	ldr	r2, [r2]
    27b4:	cmp	r2, #0
    27b8:	beq	2800 <build_compound_dict+0x7c>
    27bc:	ldrb	r3, [r2, #72]	; 0x48
    27c0:	tst	r3, #4
    27c4:	bne	27b0 <build_compound_dict+0x2c>
    27c8:	ldrh	r3, [r2, #24]
    27cc:	bic	r3, r3, #1
    27d0:	cmp	r3, #14
    27d4:	bne	27ac <build_compound_dict+0x28>
    27d8:	ldr	r3, [r2, #16]
    27dc:	ldrh	r3, [r3, #8]
    27e0:	cmp	r3, #4
    27e4:	bne	27ac <build_compound_dict+0x28>
    27e8:	ldr	r3, [r2, #4]
    27ec:	add	r4, r4, #1
    27f0:	ldr	r3, [r3, #4]
    27f4:	add	r0, r0, r3
    27f8:	add	r0, r0, #6
    27fc:	b	27ac <build_compound_dict+0x28>
    2800:	mov	r6, #0
    2804:	cmp	r4, #0
    2808:	str	r4, [r1]
    280c:	beq	2914 <build_compound_dict+0x190>
    2810:	add	r0, r0, r4, lsl #4
    2814:	bl	0 <malloc>
    2818:	cmp	r0, #0
    281c:	beq	2914 <build_compound_dict+0x190>
    2820:	mov	r9, r0
    2824:	cmp	r7, #0
    2828:	beq	28f8 <build_compound_dict+0x174>
    282c:	lsl	r0, r4, #4
    2830:	mov	r5, #0
    2834:	mov	sl, #0
    2838:	mov	r8, r9
    283c:	add	r6, r9, r0
    2840:	b	2854 <build_compound_dict+0xd0>
    2844:	mov	r8, r0
    2848:	ldr	r7, [r7]
    284c:	cmp	r7, #0
    2850:	beq	28f8 <build_compound_dict+0x174>
    2854:	ldrb	r0, [r7, #72]	; 0x48
    2858:	tst	r0, #4
    285c:	bne	2848 <build_compound_dict+0xc4>
    2860:	ldr	r0, [r7, #4]
    2864:	ldr	r1, [r0]
    2868:	str	r1, [r8]
    286c:	ldr	r2, [r0, #4]
    2870:	str	r5, [r8, #12]
    2874:	add	r0, r8, #16
    2878:	stmib	r8, {r2, r7}
    287c:	ldrh	r3, [r7, #24]
    2880:	bic	r3, r3, #1
    2884:	cmp	r3, #14
    2888:	bne	2844 <build_compound_dict+0xc0>
    288c:	ldr	r3, [r7, #16]
    2890:	ldrh	r3, [r3, #8]
    2894:	cmp	r3, #4
    2898:	bne	2844 <build_compound_dict+0xc0>
    289c:	add	r0, r2, #5
    28a0:	str	sl, [r7, #112]	; 0x70
    28a4:	str	r6, [r8, #16]
    28a8:	str	r0, [r8, #20]
    28ac:	mov	r0, r6
    28b0:	bl	0 <memcpy>
    28b4:	ldr	r0, [r7, #4]
    28b8:	movw	r1, #29791	; 0x745f
    28bc:	add	sl, sl, #1
    28c0:	movt	r1, #28793	; 0x7079
    28c4:	ldr	r0, [r0, #4]
    28c8:	str	r1, [r6, r0]!
    28cc:	mov	r0, #101	; 0x65
    28d0:	strh	r0, [r6, #4]
    28d4:	mov	r0, #1
    28d8:	str	r7, [r8, #24]
    28dc:	add	r6, r6, #6
    28e0:	str	r0, [r8, #28]
    28e4:	add	r8, r8, #32
    28e8:	b	2848 <build_compound_dict+0xc4>
    28ec:	mov	r6, #0
    28f0:	str	r6, [r1]
    28f4:	b	2914 <build_compound_dict+0x190>
    28f8:	movw	r3, #0
    28fc:	mov	r0, r9
    2900:	mov	r1, r4
    2904:	mov	r2, #16
    2908:	movt	r3, #0
    290c:	bl	0 <qsort>
    2910:	mov	r6, r9
    2914:	mov	r0, r6
    2918:	sub	sp, fp, #28
    291c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00002920 <gen_enum_match>:
    2920:	push	{r4, r5, r6, sl, fp, lr}
    2924:	add	fp, sp, #16
    2928:	sub	sp, sp, #8
    292c:	mov	r5, r2
    2930:	ldr	r2, [fp, #8]
    2934:	mov	r6, r1
    2938:	movw	r1, #0
    293c:	mov	r4, r0
    2940:	movt	r1, #0
    2944:	bl	2064 <println>
    2948:	movw	r1, #0
    294c:	mov	r0, r4
    2950:	movt	r1, #0
    2954:	bl	2064 <println>
    2958:	ldr	r0, [r4, #220]	; 0xdc
    295c:	add	r0, r0, #1
    2960:	str	r0, [r4, #220]	; 0xdc
    2964:	ldr	r0, [r6, #40]	; 0x28
    2968:	sub	r1, r0, #1
    296c:	cmp	r1, #5
    2970:	bcs	297c <gen_enum_match+0x5c>
    2974:	ldrd	r2, [r5, #48]	; 0x30
    2978:	b	2994 <gen_enum_match+0x74>
    297c:	sub	r0, r0, #6
    2980:	cmp	r0, #4
    2984:	bcs	29e8 <gen_enum_match+0xc8>
    2988:	ldrd	r2, [r5, #48]	; 0x30
    298c:	cmn	r3, #1
    2990:	ble	29dc <gen_enum_match+0xbc>
    2994:	movw	r1, #0
    2998:	movt	r1, #0
    299c:	mov	r0, r4
    29a0:	bl	2064 <println>
    29a4:	ldr	r0, [r4, #220]	; 0xdc
    29a8:	cmp	r0, #0
    29ac:	beq	2a38 <gen_enum_match+0x118>
    29b0:	movw	r1, #0
    29b4:	sub	r0, r0, #1
    29b8:	movt	r1, #0
    29bc:	str	r0, [r4, #220]	; 0xdc
    29c0:	mov	r0, r4
    29c4:	bl	2064 <println>
    29c8:	ldr	r0, [r4, #220]	; 0xdc
    29cc:	add	r0, r0, #1
    29d0:	str	r0, [r4, #220]	; 0xdc
    29d4:	sub	sp, fp, #16
    29d8:	pop	{r4, r5, r6, sl, fp, pc}
    29dc:	movw	r1, #0
    29e0:	movt	r1, #0
    29e4:	b	299c <gen_enum_match+0x7c>
    29e8:	movw	r0, #0
    29ec:	movw	r1, #0
    29f0:	movw	r4, #0
    29f4:	movw	r3, #710	; 0x2c6
    29f8:	movt	r0, #0
    29fc:	movt	r1, #0
    2a00:	movt	r4, #0
    2a04:	ldr	r0, [r0]
    2a08:	str	r1, [sp]
    2a0c:	movw	r1, #0
    2a10:	mov	r2, r4
    2a14:	movt	r1, #0
    2a18:	bl	0 <fprintf>
    2a1c:	movw	r0, #0
    2a20:	movw	r3, #0
    2a24:	mov	r1, r4
    2a28:	movw	r2, #710	; 0x2c6
    2a2c:	movt	r0, #0
    2a30:	movt	r3, #0
    2a34:	bl	0 <__assert_fail>
    2a38:	movw	r0, #0
    2a3c:	movw	r1, #0
    2a40:	movw	r3, #0
    2a44:	movw	r2, #719	; 0x2cf
    2a48:	movt	r0, #0
    2a4c:	movt	r1, #0
    2a50:	movt	r3, #0
    2a54:	bl	0 <__assert_fail>

00002a58 <gen_enum_unmatched>:
    2a58:	movw	r1, #0
    2a5c:	movt	r1, #0
    2a60:	b	2064 <println>

00002a64 <gen_trie>:
    2a64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2a68:	add	fp, sp, #28
    2a6c:	sub	sp, sp, #92	; 0x5c
    2a70:	ldr	lr, [r1]
    2a74:	ldr	r5, [fp, #8]
    2a78:	str	r2, [sp, #44]	; 0x2c
    2a7c:	mvn	r7, #7
    2a80:	add	r2, lr, r2, lsl #4
    2a84:	sub	r6, r7, r5
    2a88:	add	r7, r5, #8
    2a8c:	ldr	r4, [r2, #4]
    2a90:	cmp	r7, r4
    2a94:	bgt	2dd0 <gen_trie+0x36c>
    2a98:	rsb	r2, r4, #0
    2a9c:	cmp	r6, r2
    2aa0:	beq	2dd0 <gen_trie+0x36c>
    2aa4:	str	r4, [sp, #16]
    2aa8:	str	r6, [sp, #12]
    2aac:	str	r7, [sp, #20]
    2ab0:	str	r1, [sp, #28]
    2ab4:	str	r0, [sp, #24]
    2ab8:	str	r3, [sp, #36]	; 0x24
    2abc:	vmov.i64	d17, #0xffffffff00000000
    2ac0:	vmov.i8	d18, #255	; 0xff
    2ac4:	vmov.i32	d19, #56	; 0x00000038
    2ac8:	vmov.i64	q10, #0x00000000000000ff
    2acc:	vmvn.i32	d16, #1	; 0x00000001
    2ad0:	mov	r9, #0
    2ad4:	mov	r7, #0
    2ad8:	mov	r2, #0
    2adc:	ldr	r1, [sp, #44]	; 0x2c
    2ae0:	sub	r0, r3, r1
    2ae4:	mov	r3, #0
    2ae8:	add	r0, r0, r0, lsr #31
    2aec:	add	r0, r1, r0, asr #1
    2af0:	sub	r1, r5, #1
    2af4:	str	r1, [sp, #40]	; 0x28
    2af8:	mov	r1, #0
    2afc:	str	r1, [sp, #48]	; 0x30
    2b00:	mov	r1, #0
    2b04:	str	r1, [sp, #52]	; 0x34
    2b08:	str	r0, [sp, #32]
    2b0c:	str	r0, [sp, #56]	; 0x38
    2b10:	str	r5, [fp, #-56]	; 0xffffffc8
    2b14:	str	lr, [sp, #60]	; 0x3c
    2b18:	b	2b48 <gen_trie+0xe4>
    2b1c:	mov	r2, #0
    2b20:	ldr	r1, [sp, #48]	; 0x30
    2b24:	ldr	r6, [sp, #52]	; 0x34
    2b28:	eor	r0, r3, r9
    2b2c:	ldr	r5, [fp, #-56]	; 0xffffffc8
    2b30:	ldr	lr, [sp, #60]	; 0x3c
    2b34:	and	r0, r0, r1
    2b38:	eor	r1, r2, r7
    2b3c:	and	r1, r1, r6
    2b40:	orrs	r0, r0, r1
    2b44:	bne	30d8 <gen_trie+0x674>
    2b48:	ldr	sl, [sp, #56]	; 0x38
    2b4c:	ldr	r0, [sp, #44]	; 0x2c
    2b50:	cmp	sl, r0
    2b54:	ble	2df8 <gen_trie+0x394>
    2b58:	sub	r1, sl, #1
    2b5c:	mov	r0, r1
    2b60:	add	r0, lr, r1, lsl #4
    2b64:	str	r1, [sp, #56]	; 0x38
    2b68:	ldr	r0, [r0, #4]
    2b6c:	cmp	r0, r5
    2b70:	blt	2cb8 <gen_trie+0x254>
    2b74:	sub	ip, r0, r5
    2b78:	mov	r0, #8
    2b7c:	mov	r9, #0
    2b80:	cmp	ip, #8
    2b84:	movge	ip, r0
    2b88:	cmp	ip, #0
    2b8c:	beq	2c78 <gen_trie+0x214>
    2b90:	ldr	r0, [sp, #56]	; 0x38
    2b94:	cmp	ip, #1
    2b98:	mov	r1, ip
    2b9c:	mov	r7, #0
    2ba0:	ldr	r4, [lr, r0, lsl #4]
    2ba4:	beq	2c34 <gen_trie+0x1d0>
    2ba8:	vdup.32	d24, ip
    2bac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2bb0:	vmov.i32	q11, #0	; 0x00000000
    2bb4:	bic	r8, ip, #1
    2bb8:	sub	r5, fp, #44	; 0x2c
    2bbc:	sub	r1, ip, r8
    2bc0:	mov	r6, r8
    2bc4:	add	r0, r4, r0
    2bc8:	sub	r7, r0, #1
    2bcc:	vadd.i32	d24, d24, d17
    2bd0:	vadd.i32	d25, d24, d18
    2bd4:	vadd.i32	d24, d24, d16
    2bd8:	subs	r6, r6, #2
    2bdc:	vmov.32	r0, d25[0]
    2be0:	vshl.s32	d25, d25, #3
    2be4:	vsub.i32	d25, d19, d25
    2be8:	add	r0, r7, r0
    2bec:	vmovl.u32	q14, d25
    2bf0:	ldrh	r0, [r0]
    2bf4:	strh	r0, [fp, #-44]	; 0xffffffd4
    2bf8:	vld1.16	{d26[0]}, [r5 :16]
    2bfc:	vmovl.u8	q13, d26
    2c00:	vmovl.u16	q13, d26
    2c04:	vrev64.32	d26, d26
    2c08:	vmovl.u32	q13, d26
    2c0c:	vand	q13, q13, q10
    2c10:	vshl.u64	q13, q13, q14
    2c14:	vorr	q11, q13, q11
    2c18:	bne	2bd0 <gen_trie+0x16c>
    2c1c:	vorr	d24, d23, d23
    2c20:	cmp	ip, r8
    2c24:	vorr	q11, q11, q12
    2c28:	vmov.32	r7, d22[1]
    2c2c:	vmov.32	r9, d22[0]
    2c30:	beq	2c7c <gen_trie+0x218>
    2c34:	ldr	r0, [sp, #40]	; 0x28
    2c38:	add	r8, r4, r0
    2c3c:	mov	r0, #64	; 0x40
    2c40:	sub	r6, r0, r1, lsl #3
    2c44:	ldrb	r5, [r8, r1]
    2c48:	rsb	r4, r6, #32
    2c4c:	subs	r0, r6, #32
    2c50:	lsr	r4, r5, r4
    2c54:	lslpl	r4, r5, r0
    2c58:	lsl	r0, r5, r6
    2c5c:	movwpl	r0, #0
    2c60:	add	r6, r6, #8
    2c64:	subs	r1, r1, #1
    2c68:	orr	r9, r0, r9
    2c6c:	orr	r7, r4, r7
    2c70:	bne	2c44 <gen_trie+0x1e0>
    2c74:	b	2c7c <gen_trie+0x218>
    2c78:	mov	r7, #0
    2c7c:	mov	r0, #64	; 0x40
    2c80:	mvn	r4, #0
    2c84:	sub	r0, r0, ip, lsl #3
    2c88:	rsb	r1, r0, #32
    2c8c:	lsr	r1, r4, r1
    2c90:	orr	r5, r1, r4, lsl r0
    2c94:	mov	r1, #32
    2c98:	lsl	r0, r4, r0
    2c9c:	sub	r6, r1, ip, lsl #3
    2ca0:	cmp	r6, #0
    2ca4:	lslpl	r5, r4, r6
    2ca8:	movwpl	r0, #0
    2cac:	str	r5, [sp, #52]	; 0x34
    2cb0:	str	r0, [sp, #48]	; 0x30
    2cb4:	ldr	r5, [fp, #-56]	; 0xffffffc8
    2cb8:	add	r0, lr, sl, lsl #4
    2cbc:	ldr	ip, [r0, #4]
    2cc0:	cmp	ip, r5
    2cc4:	blt	2b20 <gen_trie+0xbc>
    2cc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2ccc:	mov	r1, #8
    2cd0:	mov	r3, #0
    2cd4:	sub	r6, ip, r0
    2cd8:	cmp	r6, #8
    2cdc:	movge	r6, r1
    2ce0:	cmp	r6, #0
    2ce4:	beq	2b1c <gen_trie+0xb8>
    2ce8:	ldr	r1, [sp, #60]	; 0x3c
    2cec:	cmp	r6, #1
    2cf0:	ldr	r4, [r1, sl, lsl #4]
    2cf4:	bne	2d04 <gen_trie+0x2a0>
    2cf8:	mov	r8, r6
    2cfc:	mov	r2, #0
    2d00:	b	2d8c <gen_trie+0x328>
    2d04:	vdup.32	d24, r6
    2d08:	add	r0, r4, r0
    2d0c:	vmov.i32	q11, #0	; 0x00000000
    2d10:	sub	r1, fp, #48	; 0x30
    2d14:	sub	r2, r0, #1
    2d18:	bic	r0, r6, #1
    2d1c:	sub	r8, r6, r0
    2d20:	mov	r3, r0
    2d24:	vadd.i32	d24, d24, d17
    2d28:	vadd.i32	d25, d24, d18
    2d2c:	vadd.i32	d24, d24, d16
    2d30:	subs	r3, r3, #2
    2d34:	vmov.32	r5, d25[0]
    2d38:	vshl.s32	d25, d25, #3
    2d3c:	vsub.i32	d25, d19, d25
    2d40:	add	r5, r2, r5
    2d44:	vmovl.u32	q14, d25
    2d48:	ldrh	r5, [r5]
    2d4c:	strh	r5, [fp, #-48]	; 0xffffffd0
    2d50:	vld1.16	{d26[0]}, [r1 :16]
    2d54:	vmovl.u8	q13, d26
    2d58:	vmovl.u16	q13, d26
    2d5c:	vrev64.32	d26, d26
    2d60:	vmovl.u32	q13, d26
    2d64:	vand	q13, q13, q10
    2d68:	vshl.u64	q13, q13, q14
    2d6c:	vorr	q11, q13, q11
    2d70:	bne	2d28 <gen_trie+0x2c4>
    2d74:	vorr	d24, d23, d23
    2d78:	cmp	r6, r0
    2d7c:	vorr	q11, q11, q12
    2d80:	vmov.32	r2, d22[1]
    2d84:	vmov.32	r3, d22[0]
    2d88:	beq	2b20 <gen_trie+0xbc>
    2d8c:	ldr	r0, [sp, #40]	; 0x28
    2d90:	mov	r1, #64	; 0x40
    2d94:	sub	r6, r1, r8, lsl #3
    2d98:	add	r0, r4, r0
    2d9c:	ldrb	r5, [r0, r8]
    2da0:	rsb	lr, r6, #32
    2da4:	subs	r4, r6, #32
    2da8:	lsr	r1, r5, lr
    2dac:	lslpl	r1, r5, r4
    2db0:	orr	r2, r1, r2
    2db4:	lsl	r1, r5, r6
    2db8:	movwpl	r1, #0
    2dbc:	add	r6, r6, #8
    2dc0:	subs	r8, r8, #1
    2dc4:	orr	r3, r1, r3
    2dc8:	bne	2d9c <gen_trie+0x338>
    2dcc:	b	2b20 <gen_trie+0xbc>
    2dd0:	ldr	r2, [sp, #44]	; 0x2c
    2dd4:	cmp	r3, r2
    2dd8:	bne	30f8 <gen_trie+0x694>
    2ddc:	mov	r2, #0
    2de0:	str	r5, [sp]
    2de4:	str	r2, [sp, #4]
    2de8:	ldr	r2, [sp, #44]	; 0x2c
    2dec:	bl	38fc <gen_prefix_trie>
    2df0:	sub	sp, fp, #28
    2df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2df8:	ldr	r2, [sp, #32]
    2dfc:	vmov.i64	d17, #0xffffffff00000000
    2e00:	vmov.i8	d18, #255	; 0xff
    2e04:	vmov.i32	d19, #56	; 0x00000038
    2e08:	vmov.i64	q10, #0x00000000000000ff
    2e0c:	mov	ip, #0
    2e10:	mov	r7, #0
    2e14:	mov	r3, #0
    2e18:	mov	r1, #0
    2e1c:	mov	lr, #0
    2e20:	mov	sl, #0
    2e24:	b	2e4c <gen_trie+0x3e8>
    2e28:	mov	r1, #0
    2e2c:	ldr	r5, [fp, #-56]	; 0xffffffc8
    2e30:	eor	r0, r3, ip
    2e34:	eor	r2, r1, r7
    2e38:	and	r0, r0, lr
    2e3c:	and	r2, r2, sl
    2e40:	orrs	r0, r0, r2
    2e44:	mov	r2, r9
    2e48:	bne	312c <gen_trie+0x6c8>
    2e4c:	ldr	r0, [sp, #36]	; 0x24
    2e50:	cmp	r2, r0
    2e54:	bge	3128 <gen_trie+0x6c4>
    2e58:	ldr	r0, [sp, #60]	; 0x3c
    2e5c:	add	r0, r0, r2, lsl #4
    2e60:	ldr	r0, [r0, #4]
    2e64:	cmp	r0, r5
    2e68:	blt	2fb4 <gen_trie+0x550>
    2e6c:	sub	r8, r0, r5
    2e70:	mov	r0, #8
    2e74:	mov	ip, #0
    2e78:	cmp	r8, #8
    2e7c:	movge	r8, r0
    2e80:	cmp	r8, #0
    2e84:	beq	2f74 <gen_trie+0x510>
    2e88:	ldr	r0, [sp, #60]	; 0x3c
    2e8c:	mov	r9, r2
    2e90:	cmp	r8, #1
    2e94:	mov	r4, r8
    2e98:	mov	r7, #0
    2e9c:	ldr	lr, [r0, r2, lsl #4]
    2ea0:	beq	2f30 <gen_trie+0x4cc>
    2ea4:	vdup.32	d24, r8
    2ea8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2eac:	vmov.i32	q11, #0	; 0x00000000
    2eb0:	sub	r2, fp, #32
    2eb4:	add	r0, lr, r0
    2eb8:	sub	r5, r0, #1
    2ebc:	bic	r0, r8, #1
    2ec0:	sub	r4, r8, r0
    2ec4:	mov	r7, r0
    2ec8:	vadd.i32	d24, d24, d17
    2ecc:	vadd.i32	d25, d24, d18
    2ed0:	vadd.i32	d24, d24, d16
    2ed4:	subs	r7, r7, #2
    2ed8:	vmov.32	r6, d25[0]
    2edc:	vshl.s32	d25, d25, #3
    2ee0:	vsub.i32	d25, d19, d25
    2ee4:	add	r6, r5, r6
    2ee8:	vmovl.u32	q14, d25
    2eec:	ldrh	r6, [r6]
    2ef0:	strh	r6, [fp, #-32]	; 0xffffffe0
    2ef4:	vld1.16	{d26[0]}, [r2 :16]
    2ef8:	vmovl.u8	q13, d26
    2efc:	vmovl.u16	q13, d26
    2f00:	vrev64.32	d26, d26
    2f04:	vmovl.u32	q13, d26
    2f08:	vand	q13, q13, q10
    2f0c:	vshl.u64	q13, q13, q14
    2f10:	vorr	q11, q13, q11
    2f14:	bne	2ecc <gen_trie+0x468>
    2f18:	vorr	d24, d23, d23
    2f1c:	cmp	r8, r0
    2f20:	vorr	q11, q11, q12
    2f24:	vmov.32	r7, d22[1]
    2f28:	vmov.32	ip, d22[0]
    2f2c:	beq	2f7c <gen_trie+0x518>
    2f30:	ldr	r0, [sp, #40]	; 0x28
    2f34:	add	lr, lr, r0
    2f38:	mov	r0, #64	; 0x40
    2f3c:	sub	r6, r0, r4, lsl #3
    2f40:	ldrb	r2, [lr, r4]
    2f44:	rsb	r0, r6, #32
    2f48:	subs	r5, r6, #32
    2f4c:	lsr	r0, r2, r0
    2f50:	lslpl	r0, r2, r5
    2f54:	orr	r7, r0, r7
    2f58:	lsl	r0, r2, r6
    2f5c:	movwpl	r0, #0
    2f60:	add	r6, r6, #8
    2f64:	subs	r4, r4, #1
    2f68:	orr	ip, r0, ip
    2f6c:	bne	2f40 <gen_trie+0x4dc>
    2f70:	b	2f7c <gen_trie+0x518>
    2f74:	mov	r9, r2
    2f78:	mov	r7, #0
    2f7c:	mov	r0, #64	; 0x40
    2f80:	mvn	r6, #0
    2f84:	ldr	r5, [fp, #-56]	; 0xffffffc8
    2f88:	sub	r0, r0, r8, lsl #3
    2f8c:	rsb	r2, r0, #32
    2f90:	lsl	lr, r6, r0
    2f94:	lsr	r2, r6, r2
    2f98:	orr	sl, r2, r6, lsl r0
    2f9c:	mov	r2, #32
    2fa0:	sub	r2, r2, r8, lsl #3
    2fa4:	cmp	r2, #0
    2fa8:	lslpl	sl, r6, r2
    2fac:	movwpl	lr, #0
    2fb0:	mov	r2, r9
    2fb4:	ldr	r0, [sp, #60]	; 0x3c
    2fb8:	add	r2, r2, #1
    2fbc:	mov	r9, r2
    2fc0:	add	r0, r0, r2, lsl #4
    2fc4:	ldr	r0, [r0, #4]
    2fc8:	cmp	r0, r5
    2fcc:	blt	2e2c <gen_trie+0x3c8>
    2fd0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    2fd4:	mov	r3, #0
    2fd8:	sub	r4, r0, r1
    2fdc:	mov	r0, #8
    2fe0:	cmp	r4, #8
    2fe4:	movge	r4, r0
    2fe8:	cmp	r4, #0
    2fec:	beq	2e28 <gen_trie+0x3c4>
    2ff0:	ldr	r0, [sp, #60]	; 0x3c
    2ff4:	cmp	r4, #1
    2ff8:	ldr	r8, [r0, r9, lsl #4]
    2ffc:	bne	300c <gen_trie+0x5a8>
    3000:	mov	r2, r4
    3004:	mov	r1, #0
    3008:	b	3094 <gen_trie+0x630>
    300c:	vdup.32	d24, r4
    3010:	add	r0, r8, r1
    3014:	vmov.i32	q11, #0	; 0x00000000
    3018:	sub	r6, fp, #36	; 0x24
    301c:	sub	r1, r0, #1
    3020:	bic	r0, r4, #1
    3024:	sub	r2, r4, r0
    3028:	mov	r3, r0
    302c:	vadd.i32	d24, d24, d17
    3030:	vadd.i32	d25, d24, d18
    3034:	vadd.i32	d24, d24, d16
    3038:	subs	r3, r3, #2
    303c:	vmov.32	r5, d25[0]
    3040:	vshl.s32	d25, d25, #3
    3044:	vsub.i32	d25, d19, d25
    3048:	add	r5, r1, r5
    304c:	vmovl.u32	q14, d25
    3050:	ldrh	r5, [r5]
    3054:	strh	r5, [fp, #-36]	; 0xffffffdc
    3058:	vld1.16	{d26[0]}, [r6 :16]
    305c:	vmovl.u8	q13, d26
    3060:	vmovl.u16	q13, d26
    3064:	vrev64.32	d26, d26
    3068:	vmovl.u32	q13, d26
    306c:	vand	q13, q13, q10
    3070:	vshl.u64	q13, q13, q14
    3074:	vorr	q11, q13, q11
    3078:	bne	3030 <gen_trie+0x5cc>
    307c:	vorr	d24, d23, d23
    3080:	cmp	r4, r0
    3084:	vorr	q11, q11, q12
    3088:	vmov.32	r1, d22[1]
    308c:	vmov.32	r3, d22[0]
    3090:	beq	2e2c <gen_trie+0x3c8>
    3094:	ldr	r0, [sp, #40]	; 0x28
    3098:	add	r8, r8, r0
    309c:	mov	r0, #64	; 0x40
    30a0:	sub	r4, r0, r2, lsl #3
    30a4:	ldrb	r5, [r8, r2]
    30a8:	rsb	r6, r4, #32
    30ac:	subs	r0, r4, #32
    30b0:	lsr	r6, r5, r6
    30b4:	lslpl	r6, r5, r0
    30b8:	lsl	r0, r5, r4
    30bc:	movwpl	r0, #0
    30c0:	add	r4, r4, #8
    30c4:	subs	r2, r2, #1
    30c8:	orr	r3, r0, r3
    30cc:	orr	r1, r6, r1
    30d0:	bne	30a4 <gen_trie+0x640>
    30d4:	b	2e2c <gen_trie+0x3c8>
    30d8:	cmp	ip, r5
    30dc:	bge	3230 <gen_trie+0x7cc>
    30e0:	ldr	r9, [sp, #28]
    30e4:	mov	r2, #0
    30e8:	mov	r3, #0
    30ec:	mov	r8, #0
    30f0:	mov	r6, #0
    30f4:	b	3474 <gen_trie+0xa10>
    30f8:	ldr	r2, [sp, #44]	; 0x2c
    30fc:	add	r2, r2, #1
    3100:	cmp	r2, r3
    3104:	bne	2aa4 <gen_trie+0x40>
    3108:	add	r2, lr, r3, lsl #4
    310c:	ldr	r2, [r2, #4]
    3110:	cmp	r7, r2
    3114:	bgt	2ddc <gen_trie+0x378>
    3118:	rsb	r2, r2, #0
    311c:	cmp	r6, r2
    3120:	bne	2aa4 <gen_trie+0x40>
    3124:	b	2ddc <gen_trie+0x378>
    3128:	add	r2, r2, #1
    312c:	ldr	r9, [sp, #44]	; 0x2c
    3130:	str	r2, [sp, #32]
    3134:	sub	sl, r2, #1
    3138:	ldr	r7, [sp, #20]
    313c:	ldr	r6, [sp, #60]	; 0x3c
    3140:	ldr	r1, [sp, #16]
    3144:	cmp	r2, r9
    3148:	ble	31a4 <gen_trie+0x740>
    314c:	cmp	r7, r1
    3150:	bgt	3168 <gen_trie+0x704>
    3154:	ldr	r0, [sp, #12]
    3158:	ldr	r9, [sp, #44]	; 0x2c
    315c:	add	r0, r1, r0
    3160:	cmp	r0, #0
    3164:	bgt	31a4 <gen_trie+0x740>
    3168:	ldr	r2, [sp, #44]	; 0x2c
    316c:	ldr	r4, [sp, #12]
    3170:	add	r0, r6, #20
    3174:	mov	r1, r2
    3178:	cmp	r2, sl
    317c:	bge	319c <gen_trie+0x738>
    3180:	ldr	r3, [r0, r1, lsl #4]
    3184:	add	r2, r1, #1
    3188:	cmp	r7, r3
    318c:	bgt	3174 <gen_trie+0x710>
    3190:	add	r3, r3, r4
    3194:	cmp	r3, #1
    3198:	blt	3174 <gen_trie+0x710>
    319c:	ldr	r2, [sp, #32]
    31a0:	add	r9, r1, #1
    31a4:	mov	r0, #0
    31a8:	cmp	r9, r2
    31ac:	str	r0, [sp, #56]	; 0x38
    31b0:	bge	3214 <gen_trie+0x7b0>
    31b4:	ldr	r0, [sp, #44]	; 0x2c
    31b8:	mov	r2, #0
    31bc:	mov	r1, #0
    31c0:	cmp	r9, r0
    31c4:	ble	31f0 <gen_trie+0x78c>
    31c8:	add	r0, r6, r9, lsl #4
    31cc:	mov	r1, #0
    31d0:	ldr	r0, [r0, #-12]
    31d4:	cmp	r7, r0
    31d8:	sub	r0, r0, r5
    31dc:	sub	r0, r0, #8
    31e0:	movwge	r1, #1
    31e4:	clz	r0, r0
    31e8:	lsr	r0, r0, #5
    31ec:	and	r1, r1, r0
    31f0:	add	r0, r6, r9, lsl #4
    31f4:	str	r1, [sp, #52]	; 0x34
    31f8:	ldr	r0, [r0, #4]
    31fc:	cmp	r0, r5
    3200:	bge	3354 <gen_trie+0x8f0>
    3204:	mov	r3, #0
    3208:	mov	r4, #0
    320c:	mov	r8, #0
    3210:	b	3534 <gen_trie+0xad0>
    3214:	ldr	r5, [sp, #24]
    3218:	ldr	r6, [sp, #36]	; 0x24
    321c:	movw	sl, #0
    3220:	mov	r8, #0
    3224:	mov	r7, r9
    3228:	movt	sl, #0
    322c:	b	36bc <gen_trie+0xc58>
    3230:	ldr	r1, [lr, sl, lsl #4]
    3234:	sub	r8, ip, r5
    3238:	ldr	r9, [sp, #28]
    323c:	mov	r2, #0
    3240:	cmp	r8, #8
    3244:	movge	r8, #8
    3248:	cmp	r8, #0
    324c:	add	r6, r1, r5
    3250:	beq	3470 <gen_trie+0xa0c>
    3254:	cmp	r8, #1
    3258:	mov	r0, r8
    325c:	mov	r3, #0
    3260:	beq	3304 <gen_trie+0x8a0>
    3264:	vdup.32	d20, r8
    3268:	vmov.i64	d17, #0xffffffff00000000
    326c:	vmov.i32	q9, #0	; 0x00000000
    3270:	vmov.i32	d21, #56	; 0x00000038
    3274:	vmov.i64	q11, #0x00000000000000ff
    3278:	mov	r4, r6
    327c:	sub	r2, r6, #1
    3280:	bic	r6, r8, #1
    3284:	sub	r3, fp, #52	; 0x34
    3288:	sub	r0, r8, r6
    328c:	mov	r7, r6
    3290:	vadd.i32	d17, d20, d17
    3294:	vmov.i8	d20, #255	; 0xff
    3298:	vadd.i32	d24, d17, d20
    329c:	vadd.i32	d17, d17, d16
    32a0:	subs	r7, r7, #2
    32a4:	vmov.32	r5, d24[0]
    32a8:	vshl.s32	d24, d24, #3
    32ac:	vsub.i32	d24, d21, d24
    32b0:	add	r5, r2, r5
    32b4:	ldrh	r5, [r5]
    32b8:	strh	r5, [fp, #-52]	; 0xffffffcc
    32bc:	vld1.16	{d25[0]}, [r3 :16]
    32c0:	vmovl.u8	q13, d25
    32c4:	vmovl.u16	q13, d26
    32c8:	vrev64.32	d25, d26
    32cc:	vmovl.u32	q13, d25
    32d0:	vmovl.u32	q12, d24
    32d4:	vand	q13, q13, q11
    32d8:	vshl.u64	q12, q13, q12
    32dc:	vorr	q9, q12, q9
    32e0:	bne	3298 <gen_trie+0x834>
    32e4:	vorr	d16, d19, d19
    32e8:	ldr	r5, [fp, #-56]	; 0xffffffc8
    32ec:	cmp	r8, r6
    32f0:	mov	r6, r4
    32f4:	vorr	q8, q9, q8
    32f8:	vmov.32	r3, d16[1]
    32fc:	vmov.32	r2, d16[0]
    3300:	beq	3474 <gen_trie+0xa10>
    3304:	mov	r7, #64	; 0x40
    3308:	add	r1, r1, r5
    330c:	mov	ip, r6
    3310:	sub	r7, r7, r0, lsl #3
    3314:	sub	r1, r1, #1
    3318:	ldrb	r6, [r1, r0]
    331c:	rsb	r5, r7, #32
    3320:	subs	r4, r7, #32
    3324:	lsr	r5, r6, r5
    3328:	lslpl	r5, r6, r4
    332c:	lsl	r6, r6, r7
    3330:	movwpl	r6, #0
    3334:	add	r7, r7, #8
    3338:	subs	r0, r0, #1
    333c:	orr	r2, r6, r2
    3340:	orr	r3, r5, r3
    3344:	bne	3318 <gen_trie+0x8b4>
    3348:	ldr	r5, [fp, #-56]	; 0xffffffc8
    334c:	mov	r6, ip
    3350:	b	3474 <gen_trie+0xa10>
    3354:	ldr	lr, [r6, r9, lsl #4]
    3358:	sub	r4, r0, r5
    335c:	mov	r2, #0
    3360:	cmp	r4, #8
    3364:	movge	r4, #8
    3368:	cmp	r4, #0
    336c:	add	r8, lr, r5
    3370:	beq	3530 <gen_trie+0xacc>
    3374:	cmp	r4, #1
    3378:	mov	r0, r4
    337c:	mov	r3, #0
    3380:	beq	3420 <gen_trie+0x9bc>
    3384:	vdup.32	d20, r4
    3388:	vmov.i64	d17, #0xffffffff00000000
    338c:	vmov.i32	q9, #0	; 0x00000000
    3390:	vmov.i32	d21, #56	; 0x00000038
    3394:	vmov.i64	q11, #0x00000000000000ff
    3398:	bic	ip, r4, #1
    339c:	sub	r2, r8, #1
    33a0:	mov	r6, r4
    33a4:	sub	r3, fp, #40	; 0x28
    33a8:	sub	r0, r4, ip
    33ac:	mov	r4, ip
    33b0:	vadd.i32	d17, d20, d17
    33b4:	vmov.i8	d20, #255	; 0xff
    33b8:	vadd.i32	d24, d17, d20
    33bc:	vadd.i32	d17, d17, d16
    33c0:	subs	r4, r4, #2
    33c4:	vmov.32	r1, d24[0]
    33c8:	vshl.s32	d24, d24, #3
    33cc:	vsub.i32	d24, d21, d24
    33d0:	add	r1, r2, r1
    33d4:	ldrh	r1, [r1]
    33d8:	strh	r1, [fp, #-40]	; 0xffffffd8
    33dc:	vld1.16	{d25[0]}, [r3 :16]
    33e0:	vmovl.u8	q13, d25
    33e4:	vmovl.u16	q13, d26
    33e8:	vrev64.32	d25, d26
    33ec:	vmovl.u32	q13, d25
    33f0:	vmovl.u32	q12, d24
    33f4:	vand	q13, q13, q11
    33f8:	vshl.u64	q12, q13, q12
    33fc:	vorr	q9, q12, q9
    3400:	bne	33b8 <gen_trie+0x954>
    3404:	vorr	d16, d19, d19
    3408:	mov	r4, r6
    340c:	cmp	r6, ip
    3410:	vorr	q8, q9, q8
    3414:	vmov.32	r3, d16[1]
    3418:	vmov.32	r2, d16[0]
    341c:	beq	3534 <gen_trie+0xad0>
    3420:	mov	r1, #64	; 0x40
    3424:	mov	ip, r4
    3428:	sub	r4, r1, r0, lsl #3
    342c:	add	r1, lr, r5
    3430:	sub	r1, r1, #1
    3434:	ldrb	r7, [r1, r0]
    3438:	rsb	r5, r4, #32
    343c:	subs	r6, r4, #32
    3440:	lsr	r5, r7, r5
    3444:	lslpl	r5, r7, r6
    3448:	lsl	r7, r7, r4
    344c:	movwpl	r7, #0
    3450:	add	r4, r4, #8
    3454:	subs	r0, r0, #1
    3458:	orr	r2, r7, r2
    345c:	orr	r3, r5, r3
    3460:	bne	3434 <gen_trie+0x9d0>
    3464:	ldr	r7, [sp, #20]
    3468:	mov	r4, ip
    346c:	b	3534 <gen_trie+0xad0>
    3470:	mov	r3, #0
    3474:	str	r8, [sp]
    3478:	str	r6, [sp, #4]
    347c:	movw	r1, #0
    3480:	ldr	r4, [sp, #24]
    3484:	movt	r1, #0
    3488:	mov	r0, r4
    348c:	bl	2064 <println>
    3490:	ldr	r0, [r4, #220]	; 0xdc
    3494:	mov	r1, r9
    3498:	add	r0, r0, #1
    349c:	str	r0, [r4, #220]	; 0xdc
    34a0:	str	r5, [sp]
    34a4:	mov	r0, r4
    34a8:	ldr	r2, [sp, #44]	; 0x2c
    34ac:	ldr	r3, [sp, #56]	; 0x38
    34b0:	bl	2a64 <gen_trie>
    34b4:	ldr	r0, [r4, #220]	; 0xdc
    34b8:	cmp	r0, #0
    34bc:	beq	3858 <gen_trie+0xdf4>
    34c0:	movw	r1, #0
    34c4:	sub	r0, r0, #1
    34c8:	mov	r2, r8
    34cc:	mov	r3, r6
    34d0:	movt	r1, #0
    34d4:	str	r0, [r4, #220]	; 0xdc
    34d8:	mov	r0, r4
    34dc:	bl	2064 <println>
    34e0:	ldr	r0, [r4, #220]	; 0xdc
    34e4:	mov	r1, r9
    34e8:	mov	r2, sl
    34ec:	add	r0, r0, #1
    34f0:	str	r0, [r4, #220]	; 0xdc
    34f4:	str	r5, [sp]
    34f8:	mov	r0, r4
    34fc:	ldr	r3, [sp, #36]	; 0x24
    3500:	bl	2a64 <gen_trie>
    3504:	ldr	r0, [r4, #220]	; 0xdc
    3508:	cmp	r0, #0
    350c:	beq	386c <gen_trie+0xe08>
    3510:	movw	r1, #0
    3514:	sub	r0, r0, #1
    3518:	mov	r2, r8
    351c:	mov	r3, r6
    3520:	movt	r1, #0
    3524:	str	r0, [r4, #220]	; 0xdc
    3528:	mov	r0, r4
    352c:	b	3844 <gen_trie+0xde0>
    3530:	mov	r3, #0
    3534:	stm	sp, {r4, r8}
    3538:	movw	r1, #0
    353c:	ldr	r5, [sp, #24]
    3540:	movt	r1, #0
    3544:	mov	r0, r5
    3548:	bl	2064 <println>
    354c:	ldr	r0, [r5, #220]	; 0xdc
    3550:	add	r0, r0, #1
    3554:	str	r0, [r5, #220]	; 0xdc
    3558:	ldr	r0, [sp, #52]	; 0x34
    355c:	cmp	r0, #0
    3560:	beq	3638 <gen_trie+0xbd4>
    3564:	movw	r1, #0
    3568:	mov	r0, r5
    356c:	mov	r2, r4
    3570:	mov	r3, r8
    3574:	movt	r1, #0
    3578:	bl	2064 <println>
    357c:	mov	r6, r4
    3580:	ldr	r4, [sp, #28]
    3584:	sub	r7, r9, #1
    3588:	ldm	r4, {r0, ip}
    358c:	ldr	r1, [r4, #12]
    3590:	add	r0, r0, r7, lsl #4
    3594:	ldr	r2, [r0, #8]
    3598:	ldr	r3, [r0, #12]
    359c:	mov	r0, #8
    35a0:	str	r0, [sp]
    35a4:	mov	r0, r5
    35a8:	blx	ip
    35ac:	movw	r1, #0
    35b0:	mov	r0, r5
    35b4:	mov	r2, r6
    35b8:	mov	r3, r8
    35bc:	str	r6, [sp, #60]	; 0x3c
    35c0:	movt	r1, #0
    35c4:	bl	2064 <println>
    35c8:	movw	r1, #0
    35cc:	mov	r0, r5
    35d0:	movt	r1, #0
    35d4:	bl	2064 <println>
    35d8:	movw	r1, #0
    35dc:	mov	r0, r5
    35e0:	movt	r1, #0
    35e4:	bl	2064 <println>
    35e8:	ldr	r0, [sp, #20]
    35ec:	mov	r1, r4
    35f0:	mov	r2, r9
    35f4:	mov	r3, sl
    35f8:	str	r0, [sp]
    35fc:	mov	r0, r5
    3600:	bl	2a64 <gen_trie>
    3604:	ldr	r0, [r5, #220]	; 0xdc
    3608:	cmp	r0, #0
    360c:	beq	38a8 <gen_trie+0xe44>
    3610:	ldr	r4, [sp, #60]	; 0x3c
    3614:	movw	r1, #0
    3618:	sub	r0, r0, #1
    361c:	mov	r3, r8
    3620:	movt	r1, #0
    3624:	str	r0, [r5, #220]	; 0xdc
    3628:	mov	r0, r5
    362c:	mov	r2, r4
    3630:	bl	2064 <println>
    3634:	b	3674 <gen_trie+0xc10>
    3638:	movw	r1, #0
    363c:	mov	r0, r5
    3640:	movt	r1, #0
    3644:	bl	2064 <println>
    3648:	movw	r1, #0
    364c:	mov	r0, r5
    3650:	movt	r1, #0
    3654:	bl	2064 <println>
    3658:	str	r7, [sp]
    365c:	mov	r0, r5
    3660:	mov	r2, r9
    3664:	mov	r3, sl
    3668:	ldr	r1, [sp, #28]
    366c:	bl	2a64 <gen_trie>
    3670:	mov	r7, r9
    3674:	ldr	r0, [r5, #220]	; 0xdc
    3678:	ldr	r6, [sp, #36]	; 0x24
    367c:	mov	sl, r8
    3680:	cmp	r0, #0
    3684:	beq	3880 <gen_trie+0xe1c>
    3688:	movw	r1, #0
    368c:	sub	r0, r0, #1
    3690:	mov	r2, r4
    3694:	mov	r3, sl
    3698:	mov	r8, r4
    369c:	movt	r1, #0
    36a0:	str	r0, [r5, #220]	; 0xdc
    36a4:	mov	r0, r5
    36a8:	bl	2064 <println>
    36ac:	ldr	r0, [r5, #220]	; 0xdc
    36b0:	ldr	r2, [sp, #32]
    36b4:	add	r0, r0, #1
    36b8:	str	r0, [r5, #220]	; 0xdc
    36bc:	ldr	r0, [sp, #44]	; 0x2c
    36c0:	mov	r1, #0
    36c4:	cmp	r7, r0
    36c8:	mov	r0, #0
    36cc:	movwgt	r0, #1
    36d0:	cmp	r2, r6
    36d4:	movwle	r1, #1
    36d8:	and	r4, r1, r0
    36dc:	cmp	r4, #1
    36e0:	bne	36f8 <gen_trie+0xc94>
    36e4:	ldr	r1, [sp, #28]
    36e8:	ldr	r0, [r1, #24]
    36ec:	add	r0, r0, #1
    36f0:	str	r0, [sp, #56]	; 0x38
    36f4:	str	r0, [r1, #24]
    36f8:	ldr	r0, [sp, #44]	; 0x2c
    36fc:	cmp	r7, r0
    3700:	ble	3784 <gen_trie+0xd20>
    3704:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3708:	sub	r3, r7, #1
    370c:	str	r0, [sp]
    3710:	ldr	r0, [sp, #56]	; 0x38
    3714:	str	r0, [sp, #4]
    3718:	mov	r0, r5
    371c:	ldr	r1, [sp, #28]
    3720:	ldr	r2, [sp, #44]	; 0x2c
    3724:	bl	38fc <gen_prefix_trie>
    3728:	ldr	r2, [sp, #32]
    372c:	cmp	r4, #0
    3730:	beq	3784 <gen_trie+0xd20>
    3734:	str	sl, [sp, #60]	; 0x3c
    3738:	movw	r1, #0
    373c:	mov	r0, r5
    3740:	ldr	sl, [sp, #56]	; 0x38
    3744:	movt	r1, #0
    3748:	mov	r2, sl
    374c:	bl	2064 <println>
    3750:	ldr	r0, [r5, #220]	; 0xdc
    3754:	mov	r1, #0
    3758:	mov	r2, sl
    375c:	ldr	sl, [sp, #60]	; 0x3c
    3760:	str	r1, [r5, #220]	; 0xdc
    3764:	movw	r1, #0
    3768:	movt	r1, #0
    376c:	str	r0, [r5, #228]	; 0xe4
    3770:	mov	r0, r5
    3774:	bl	2064 <println>
    3778:	ldr	r0, [r5, #228]	; 0xe4
    377c:	ldr	r2, [sp, #32]
    3780:	str	r0, [r5, #220]	; 0xdc
    3784:	cmp	r2, r6
    3788:	ble	37b0 <gen_trie+0xd4c>
    378c:	ldr	r0, [sp, #44]	; 0x2c
    3790:	cmp	r7, r0
    3794:	bgt	37c8 <gen_trie+0xd64>
    3798:	ldr	r0, [sp, #28]
    379c:	ldr	r1, [r0, #8]
    37a0:	mov	r0, r5
    37a4:	blx	r1
    37a8:	mov	r4, r8
    37ac:	b	3810 <gen_trie+0xdac>
    37b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    37b4:	mov	r3, r6
    37b8:	str	r0, [sp]
    37bc:	mov	r0, r5
    37c0:	ldr	r1, [sp, #28]
    37c4:	bl	2a64 <gen_trie>
    37c8:	cmp	r4, #0
    37cc:	mov	r4, r8
    37d0:	beq	3810 <gen_trie+0xdac>
    37d4:	ldr	r0, [r5, #220]	; 0xdc
    37d8:	mov	r1, #0
    37dc:	ldr	r2, [sp, #56]	; 0x38
    37e0:	str	r1, [r5, #220]	; 0xdc
    37e4:	movw	r1, #0
    37e8:	movt	r1, #0
    37ec:	str	r0, [r5, #228]	; 0xe4
    37f0:	mov	r0, r5
    37f4:	bl	2064 <println>
    37f8:	ldr	r0, [r5, #228]	; 0xe4
    37fc:	movw	r1, #0
    3800:	movt	r1, #0
    3804:	str	r0, [r5, #220]	; 0xdc
    3808:	mov	r0, r5
    380c:	bl	2064 <println>
    3810:	ldr	r0, [sp, #32]
    3814:	cmp	r9, r0
    3818:	bge	3850 <gen_trie+0xdec>
    381c:	ldr	r0, [r5, #220]	; 0xdc
    3820:	cmp	r0, #0
    3824:	beq	3894 <gen_trie+0xe30>
    3828:	movw	r1, #0
    382c:	sub	r0, r0, #1
    3830:	mov	r2, r4
    3834:	mov	r3, sl
    3838:	str	r0, [r5, #220]	; 0xdc
    383c:	movt	r1, #0
    3840:	mov	r0, r5
    3844:	sub	sp, fp, #28
    3848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    384c:	b	2064 <println>
    3850:	sub	sp, fp, #28
    3854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3858:	movw	r0, #0
    385c:	movw	r1, #0
    3860:	movw	r3, #0
    3864:	movw	r2, #973	; 0x3cd
    3868:	b	38b8 <gen_trie+0xe54>
    386c:	movw	r0, #0
    3870:	movw	r1, #0
    3874:	movw	r3, #0
    3878:	movw	r2, #975	; 0x3cf
    387c:	b	38b8 <gen_trie+0xe54>
    3880:	movw	r0, #0
    3884:	movw	r1, #0
    3888:	movw	r3, #0
    388c:	movw	r2, #1044	; 0x414
    3890:	b	38b8 <gen_trie+0xe54>
    3894:	movw	r0, #0
    3898:	movw	r1, #0
    389c:	movw	r3, #0
    38a0:	mov	r2, #1072	; 0x430
    38a4:	b	38b8 <gen_trie+0xe54>
    38a8:	movw	r0, #0
    38ac:	movw	r1, #0
    38b0:	movw	r3, #0
    38b4:	mov	r2, #1040	; 0x410
    38b8:	movt	r0, #0
    38bc:	movt	r1, #0
    38c0:	movt	r3, #0
    38c4:	bl	0 <__assert_fail>

000038c8 <dict_cmp>:
    38c8:	push	{r4, r5, fp, lr}
    38cc:	add	fp, sp, #8
    38d0:	ldm	r1, {r3, r4}
    38d4:	ldm	r0, {r1, r5}
    38d8:	cmp	r5, r4
    38dc:	mov	r2, r5
    38e0:	movgt	r2, r4
    38e4:	mov	r0, r1
    38e8:	mov	r1, r3
    38ec:	bl	0 <memcmp>
    38f0:	cmp	r0, #0
    38f4:	subeq	r0, r5, r4
    38f8:	pop	{r4, r5, fp, pc}

000038fc <gen_prefix_trie>:
    38fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3900:	add	fp, sp, #28
    3904:	sub	sp, sp, #52	; 0x34
    3908:	sub	r5, r3, r2
    390c:	mov	r9, r0
    3910:	mov	sl, r1
    3914:	ldr	r1, [r1]
    3918:	str	r3, [sp, #32]
    391c:	mov	r7, r2
    3920:	add	r0, r5, #1
    3924:	ldr	r4, [fp, #8]
    3928:	add	r0, r0, r0, lsr #31
    392c:	add	r3, r2, r0, asr #1
    3930:	ldr	r2, [fp, #12]
    3934:	add	r0, r1, r3, lsl #4
    3938:	ldr	r0, [r0, #4]
    393c:	str	r2, [sp, #40]	; 0x28
    3940:	str	r3, [fp, #-36]	; 0xffffffdc
    3944:	str	r4, [sp, #36]	; 0x24
    3948:	str	r5, [sp, #28]
    394c:	cmp	r0, r4
    3950:	bge	3970 <gen_prefix_trie+0x74>
    3954:	mov	r4, #0
    3958:	mov	r8, #0
    395c:	mov	r2, #0
    3960:	mov	r3, #0
    3964:	mov	r6, #0
    3968:	mov	r5, #0
    396c:	b	3afc <gen_prefix_trie+0x200>
    3970:	ldr	lr, [r1, r3, lsl #4]
    3974:	sub	ip, r0, r4
    3978:	mov	r2, #0
    397c:	cmp	ip, #8
    3980:	mov	r8, ip
    3984:	movge	r8, #8
    3988:	cmp	r8, #0
    398c:	add	r4, lr, r4
    3990:	beq	3ae8 <gen_prefix_trie+0x1ec>
    3994:	cmp	r8, #1
    3998:	mov	r1, r8
    399c:	mov	r3, #0
    39a0:	str	r7, [sp, #20]
    39a4:	str	r4, [sp, #24]
    39a8:	beq	3a48 <gen_prefix_trie+0x14c>
    39ac:	vdup.32	d19, r8
    39b0:	vmov.i64	d18, #0xffffffff00000000
    39b4:	ldr	r0, [sp, #24]
    39b8:	vmov.i32	q8, #0	; 0x00000000
    39bc:	vmov.i32	d20, #56	; 0x00000038
    39c0:	vmov.i64	q11, #0x00000000000000ff
    39c4:	vmvn.i32	d21, #1	; 0x00000001
    39c8:	sub	r3, fp, #32
    39cc:	sub	r2, r0, #1
    39d0:	bic	r0, r8, #1
    39d4:	sub	r1, r8, r0
    39d8:	mov	r5, r0
    39dc:	vadd.i32	d18, d19, d18
    39e0:	vmov.i8	d19, #255	; 0xff
    39e4:	vadd.i32	d24, d18, d19
    39e8:	vadd.i32	d18, d18, d21
    39ec:	subs	r5, r5, #2
    39f0:	vmov.32	r6, d24[0]
    39f4:	vshl.s32	d24, d24, #3
    39f8:	vsub.i32	d24, d20, d24
    39fc:	add	r6, r2, r6
    3a00:	ldrh	r6, [r6]
    3a04:	strh	r6, [fp, #-32]	; 0xffffffe0
    3a08:	vld1.16	{d25[0]}, [r3 :16]
    3a0c:	vmovl.u8	q13, d25
    3a10:	vmovl.u16	q13, d26
    3a14:	vrev64.32	d25, d26
    3a18:	vmovl.u32	q13, d25
    3a1c:	vmovl.u32	q12, d24
    3a20:	vand	q13, q13, q11
    3a24:	vshl.u64	q12, q13, q12
    3a28:	vorr	q8, q12, q8
    3a2c:	bne	39e4 <gen_prefix_trie+0xe8>
    3a30:	vorr	d18, d17, d17
    3a34:	cmp	r8, r0
    3a38:	vorr	q8, q8, q9
    3a3c:	vmov.32	r3, d16[1]
    3a40:	vmov.32	r2, d16[0]
    3a44:	beq	3a8c <gen_prefix_trie+0x190>
    3a48:	ldr	r0, [sp, #36]	; 0x24
    3a4c:	mov	r6, #64	; 0x40
    3a50:	sub	r5, r6, r1, lsl #3
    3a54:	add	r6, lr, r0
    3a58:	sub	r6, r6, #1
    3a5c:	ldrb	r0, [r6, r1]
    3a60:	rsb	r7, r5, #32
    3a64:	subs	r4, r5, #32
    3a68:	lsr	r7, r0, r7
    3a6c:	lslpl	r7, r0, r4
    3a70:	lsl	r0, r0, r5
    3a74:	movwpl	r0, #0
    3a78:	add	r5, r5, #8
    3a7c:	subs	r1, r1, #1
    3a80:	orr	r2, r0, r2
    3a84:	orr	r3, r7, r3
    3a88:	bne	3a5c <gen_prefix_trie+0x160>
    3a8c:	mov	r0, #32
    3a90:	mov	r1, #64	; 0x40
    3a94:	mvn	r6, #0
    3a98:	sub	r0, r0, r8, lsl #3
    3a9c:	sub	r1, r1, r8, lsl #3
    3aa0:	rsb	r7, r1, #32
    3aa4:	cmp	r0, #0
    3aa8:	ror	r5, r6, r7
    3aac:	lslpl	r5, r6, r0
    3ab0:	lsl	r6, r6, r1
    3ab4:	movwpl	r6, #0
    3ab8:	cmp	ip, #8
    3abc:	blt	3af0 <gen_prefix_trie+0x1f4>
    3ac0:	str	r8, [sp]
    3ac4:	movw	r1, #0
    3ac8:	mov	r0, r9
    3acc:	ldr	r4, [sp, #24]
    3ad0:	movt	r1, #0
    3ad4:	str	r4, [sp, #4]
    3ad8:	bl	2064 <println>
    3adc:	ldr	r7, [sp, #20]
    3ae0:	mov	r8, #8
    3ae4:	b	3b1c <gen_prefix_trie+0x220>
    3ae8:	mov	r3, #0
    3aec:	b	3afc <gen_prefix_trie+0x200>
    3af0:	ldr	r4, [sp, #24]
    3af4:	ldr	r7, [sp, #20]
    3af8:	mov	r8, ip
    3afc:	movw	r1, #0
    3b00:	stm	sp, {r2, r3, r8}
    3b04:	mov	r0, r9
    3b08:	mov	r2, r6
    3b0c:	mov	r3, r5
    3b10:	str	r4, [sp, #12]
    3b14:	movt	r1, #0
    3b18:	bl	2064 <println>
    3b1c:	ldr	r0, [r9, #220]	; 0xdc
    3b20:	ldr	r5, [sp, #40]	; 0x28
    3b24:	ldr	r6, [fp, #-36]	; 0xffffffdc
    3b28:	ldr	r3, [sp, #32]
    3b2c:	add	r0, r0, #1
    3b30:	str	r0, [r9, #220]	; 0xdc
    3b34:	ldr	r0, [sp, #28]
    3b38:	add	r0, r0, #2
    3b3c:	cmp	r0, #2
    3b40:	bhi	3b84 <gen_prefix_trie+0x288>
    3b44:	ldm	sl, {r0, r7}
    3b48:	ldr	r1, [sl, #12]
    3b4c:	add	r0, r0, r6, lsl #4
    3b50:	ldr	r2, [r0, #8]
    3b54:	ldr	r3, [r0, #12]
    3b58:	mov	r0, r9
    3b5c:	str	r8, [sp]
    3b60:	blx	r7
    3b64:	cmp	r5, #1
    3b68:	blt	3bec <gen_prefix_trie+0x2f0>
    3b6c:	movw	r1, #0
    3b70:	mov	r0, r9
    3b74:	mov	r2, r5
    3b78:	movt	r1, #0
    3b7c:	bl	2064 <println>
    3b80:	b	3bf8 <gen_prefix_trie+0x2fc>
    3b84:	cmp	r6, r3
    3b88:	bne	3bd0 <gen_prefix_trie+0x2d4>
    3b8c:	mov	r6, r7
    3b90:	ldm	sl, {r0, r7}
    3b94:	ldr	r1, [sl, #12]
    3b98:	add	r0, r0, r3, lsl #4
    3b9c:	ldr	r2, [r0, #8]
    3ba0:	ldr	r3, [r0, #12]
    3ba4:	mov	r0, r9
    3ba8:	str	r8, [sp]
    3bac:	blx	r7
    3bb0:	cmp	r5, #1
    3bb4:	blt	3c84 <gen_prefix_trie+0x388>
    3bb8:	movw	r1, #0
    3bbc:	mov	r0, r9
    3bc0:	mov	r2, r5
    3bc4:	movt	r1, #0
    3bc8:	bl	2064 <println>
    3bcc:	b	3c90 <gen_prefix_trie+0x394>
    3bd0:	ldr	r0, [sp, #36]	; 0x24
    3bd4:	mov	r1, sl
    3bd8:	mov	r2, r6
    3bdc:	stm	sp, {r0, r5}
    3be0:	mov	r0, r9
    3be4:	bl	38fc <gen_prefix_trie>
    3be8:	b	3cbc <gen_prefix_trie+0x3c0>
    3bec:	ldr	r1, [sl, #8]
    3bf0:	mov	r0, r9
    3bf4:	blx	r1
    3bf8:	ldr	r0, [r9, #220]	; 0xdc
    3bfc:	cmp	r0, #0
    3c00:	beq	3d58 <gen_prefix_trie+0x45c>
    3c04:	movw	r1, #0
    3c08:	sub	r0, r0, #1
    3c0c:	movt	r1, #0
    3c10:	str	r0, [r9, #220]	; 0xdc
    3c14:	mov	r0, r9
    3c18:	bl	2064 <println>
    3c1c:	ldr	r0, [r9, #220]	; 0xdc
    3c20:	cmp	r0, #0
    3c24:	beq	3d6c <gen_prefix_trie+0x470>
    3c28:	movw	r1, #0
    3c2c:	sub	r0, r0, #1
    3c30:	mov	r2, r8
    3c34:	mov	r3, r4
    3c38:	movt	r1, #0
    3c3c:	str	r0, [r9, #220]	; 0xdc
    3c40:	mov	r0, r9
    3c44:	bl	2064 <println>
    3c48:	ldr	r0, [r9, #220]	; 0xdc
    3c4c:	cmp	r5, #1
    3c50:	add	r0, r0, #1
    3c54:	str	r0, [r9, #220]	; 0xdc
    3c58:	blt	3c74 <gen_prefix_trie+0x378>
    3c5c:	movw	r1, #0
    3c60:	mov	r0, r9
    3c64:	mov	r2, r5
    3c68:	movt	r1, #0
    3c6c:	bl	2064 <println>
    3c70:	b	3d10 <gen_prefix_trie+0x414>
    3c74:	ldr	r1, [sl, #8]
    3c78:	mov	r0, r9
    3c7c:	blx	r1
    3c80:	b	3d10 <gen_prefix_trie+0x414>
    3c84:	ldr	r1, [sl, #8]
    3c88:	mov	r0, r9
    3c8c:	blx	r1
    3c90:	ldr	r0, [r9, #220]	; 0xdc
    3c94:	cmp	r0, #0
    3c98:	beq	3d94 <gen_prefix_trie+0x498>
    3c9c:	movw	r1, #0
    3ca0:	sub	r0, r0, #1
    3ca4:	mov	r7, r6
    3ca8:	movt	r1, #0
    3cac:	str	r0, [r9, #220]	; 0xdc
    3cb0:	mov	r0, r9
    3cb4:	bl	2064 <println>
    3cb8:	ldr	r6, [fp, #-36]	; 0xffffffdc
    3cbc:	ldr	r0, [r9, #220]	; 0xdc
    3cc0:	cmp	r0, #0
    3cc4:	beq	3d80 <gen_prefix_trie+0x484>
    3cc8:	movw	r1, #0
    3ccc:	sub	r0, r0, #1
    3cd0:	mov	r2, r8
    3cd4:	mov	r3, r4
    3cd8:	movt	r1, #0
    3cdc:	str	r0, [r9, #220]	; 0xdc
    3ce0:	mov	r0, r9
    3ce4:	bl	2064 <println>
    3ce8:	ldr	r0, [r9, #220]	; 0xdc
    3cec:	sub	r3, r6, #1
    3cf0:	mov	r1, sl
    3cf4:	mov	r2, r7
    3cf8:	add	r0, r0, #1
    3cfc:	str	r0, [r9, #220]	; 0xdc
    3d00:	ldr	r0, [sp, #36]	; 0x24
    3d04:	stm	sp, {r0, r5}
    3d08:	mov	r0, r9
    3d0c:	bl	38fc <gen_prefix_trie>
    3d10:	ldr	r0, [r9, #220]	; 0xdc
    3d14:	cmp	r0, #0
    3d18:	beq	3d44 <gen_prefix_trie+0x448>
    3d1c:	movw	r1, #0
    3d20:	sub	r0, r0, #1
    3d24:	mov	r2, r8
    3d28:	mov	r3, r4
    3d2c:	str	r0, [r9, #220]	; 0xdc
    3d30:	movt	r1, #0
    3d34:	mov	r0, r9
    3d38:	sub	sp, fp, #28
    3d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3d40:	b	2064 <println>
    3d44:	movw	r0, #0
    3d48:	movw	r1, #0
    3d4c:	movw	r3, #0
    3d50:	movw	r2, #910	; 0x38e
    3d54:	b	3da4 <gen_prefix_trie+0x4a8>
    3d58:	movw	r0, #0
    3d5c:	movw	r1, #0
    3d60:	movw	r3, #0
    3d64:	mov	r2, #888	; 0x378
    3d68:	b	3da4 <gen_prefix_trie+0x4a8>
    3d6c:	movw	r0, #0
    3d70:	movw	r1, #0
    3d74:	movw	r3, #0
    3d78:	movw	r2, #889	; 0x379
    3d7c:	b	3da4 <gen_prefix_trie+0x4a8>
    3d80:	movw	r0, #0
    3d84:	movw	r1, #0
    3d88:	movw	r3, #0
    3d8c:	movw	r2, #907	; 0x38b
    3d90:	b	3da4 <gen_prefix_trie+0x4a8>
    3d94:	movw	r0, #0
    3d98:	movw	r1, #0
    3d9c:	movw	r3, #0
    3da0:	movw	r2, #903	; 0x387
    3da4:	movt	r0, #0
    3da8:	movt	r1, #0
    3dac:	movt	r3, #0
    3db0:	bl	0 <__assert_fail>

00003db4 <gen_field_match>:
    3db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3db8:	add	fp, sp, #28
    3dbc:	sub	sp, sp, #540	; 0x21c
    3dc0:	mov	r9, r2
    3dc4:	ldr	r2, [fp, #8]
    3dc8:	mov	r5, r1
    3dcc:	movw	r1, #0
    3dd0:	str	r3, [sp, #32]
    3dd4:	mov	r4, r0
    3dd8:	movt	r1, #0
    3ddc:	bl	2064 <println>
    3de0:	movw	r1, #0
    3de4:	mov	r0, r4
    3de8:	movt	r1, #0
    3dec:	bl	2064 <println>
    3df0:	ldr	r0, [r4, #220]	; 0xdc
    3df4:	mov	r1, #0
    3df8:	mov	r2, #220	; 0xdc
    3dfc:	mov	r8, #0
    3e00:	add	r0, r0, #1
    3e04:	str	r0, [r4, #220]	; 0xdc
    3e08:	sub	r0, fp, #256	; 0x100
    3e0c:	bl	0 <memset>
    3e10:	ldr	r0, [r5, #12]
    3e14:	add	r1, sp, #108	; 0x6c
    3e18:	bl	0 <__flatcc_fb_copy_scope>
    3e1c:	ldrh	r0, [r9, #24]
    3e20:	ldrh	r1, [r5, #8]
    3e24:	mov	sl, #0
    3e28:	cmp	r0, #15
    3e2c:	str	r1, [sp, #88]	; 0x58
    3e30:	bhi	3e48 <gen_field_match+0x94>
    3e34:	mov	r1, #1
    3e38:	movw	r2, #33408	; 0x8280
    3e3c:	mov	sl, #0
    3e40:	tst	r2, r1, lsl r0
    3e44:	movne	sl, #1
    3e48:	sub	r5, r0, #7
    3e4c:	cmp	r5, #8
    3e50:	bhi	4a14 <gen_field_match+0xc60>
    3e54:	mov	r2, #0
    3e58:	add	r6, pc, #68	; 0x44
    3e5c:	mov	r0, #0
    3e60:	mov	r1, #0
    3e64:	mov	ip, #0
    3e68:	mov	r3, #0
    3e6c:	mov	lr, #0
    3e70:	mov	r7, #0
    3e74:	str	r2, [sp, #44]	; 0x2c
    3e78:	mov	r2, #0
    3e7c:	str	r0, [sp, #48]	; 0x30
    3e80:	str	r2, [sp, #36]	; 0x24
    3e84:	mov	r2, #0
    3e88:	str	r2, [sp, #84]	; 0x54
    3e8c:	mov	r2, #0
    3e90:	str	r2, [sp, #92]	; 0x5c
    3e94:	mov	r2, #0
    3e98:	str	r2, [sp, #28]
    3e9c:	mov	r2, #0
    3ea0:	ldr	pc, [r6, r5, lsl #2]
    3ea4:	.word	0x00003f9c
    3ea8:	.word	0x00003fb4
    3eac:	.word	0x00003ec8
    3eb0:	.word	0x00003ec8
    3eb4:	.word	0x00003ff4
    3eb8:	.word	0x00003ff4
    3ebc:	.word	0x00003ff4
    3ec0:	.word	0x00003ef8
    3ec4:	.word	0x00003ef8
    3ec8:	mov	r0, #1
    3ecc:	str	r0, [sp, #44]	; 0x2c
    3ed0:	mov	r0, #0
    3ed4:	mov	lr, #0
    3ed8:	str	r0, [sp, #36]	; 0x24
    3edc:	mov	r0, #0
    3ee0:	str	r0, [sp, #84]	; 0x54
    3ee4:	mov	r0, #0
    3ee8:	str	r0, [sp, #92]	; 0x5c
    3eec:	mov	r0, #0
    3ef0:	str	r0, [sp, #28]
    3ef4:	b	3f88 <gen_field_match+0x1d4>
    3ef8:	ldr	r1, [r9, #16]
    3efc:	sub	r2, fp, #256	; 0x100
    3f00:	ldr	r0, [r1, #12]
    3f04:	bl	0 <__flatcc_fb_scoped_symbol_name>
    3f08:	ldr	r0, [r9, #16]
    3f0c:	ldr	r3, [sp, #32]
    3f10:	ldrh	r1, [r0, #8]
    3f14:	eor	r2, r1, #4
    3f18:	cmp	r1, #3
    3f1c:	orr	r2, r3, r2
    3f20:	clz	r2, r2
    3f24:	lsr	r2, r2, #5
    3f28:	str	r2, [sp, #28]
    3f2c:	clz	r2, r1
    3f30:	lsr	r2, r2, #5
    3f34:	str	r2, [sp, #84]	; 0x54
    3f38:	sub	r2, r1, #1
    3f3c:	clz	r2, r2
    3f40:	lsr	r2, r2, #5
    3f44:	str	r2, [sp, #92]	; 0x5c
    3f48:	bne	3f74 <gen_field_match+0x1c0>
    3f4c:	ldr	r0, [r0, #40]	; 0x28
    3f50:	mov	lr, #1
    3f54:	mov	r2, #0
    3f58:	mov	r7, #0
    3f5c:	str	r0, [sp, #48]	; 0x30
    3f60:	mov	r0, #1
    3f64:	str	r0, [sp, #36]	; 0x24
    3f68:	mov	r0, #0
    3f6c:	str	r0, [sp, #44]	; 0x2c
    3f70:	b	3ff4 <gen_field_match+0x240>
    3f74:	mov	r0, #0
    3f78:	mov	lr, #0
    3f7c:	str	r0, [sp, #44]	; 0x2c
    3f80:	mov	r0, #0
    3f84:	str	r0, [sp, #36]	; 0x24
    3f88:	mov	r0, #0
    3f8c:	mov	r2, #0
    3f90:	mov	r7, #0
    3f94:	str	r0, [sp, #48]	; 0x30
    3f98:	b	3ff4 <gen_field_match+0x240>
    3f9c:	ldr	r3, [r9, #104]	; 0x68
    3fa0:	ldrh	r1, [r9, #72]	; 0x48
    3fa4:	cmp	r3, #0
    3fa8:	and	ip, r1, #2048	; 0x800
    3fac:	and	r1, r1, #1024	; 0x400
    3fb0:	movwne	r3, #1
    3fb4:	ldr	r2, [r9, #16]
    3fb8:	mov	lr, #1
    3fbc:	mov	r8, r1
    3fc0:	mov	r7, r3
    3fc4:	str	r2, [sp, #48]	; 0x30
    3fc8:	mov	r2, #0
    3fcc:	str	r2, [sp, #44]	; 0x2c
    3fd0:	mov	r2, #0
    3fd4:	str	r2, [sp, #36]	; 0x24
    3fd8:	mov	r2, #0
    3fdc:	str	r2, [sp, #84]	; 0x54
    3fe0:	mov	r2, #0
    3fe4:	str	r2, [sp, #92]	; 0x5c
    3fe8:	mov	r2, #0
    3fec:	str	r2, [sp, #28]
    3ff0:	mov	r2, ip
    3ff4:	orrs	r0, r2, r8
    3ff8:	str	r0, [sp, #60]	; 0x3c
    3ffc:	beq	4068 <gen_field_match+0x2b4>
    4000:	cmp	sl, #0
    4004:	beq	4020 <gen_field_match+0x26c>
    4008:	ldr	r0, [sp, #48]	; 0x30
    400c:	mov	r3, #0
    4010:	mov	lr, #0
    4014:	mov	r7, #0
    4018:	cmp	r0, #4
    401c:	beq	406c <gen_field_match+0x2b8>
    4020:	movw	r0, #0
    4024:	movw	r1, #0
    4028:	movw	r4, #0
    402c:	movw	r3, #466	; 0x1d2
    4030:	movt	r0, #0
    4034:	movt	r1, #0
    4038:	movt	r4, #0
    403c:	ldr	r0, [r0]
    4040:	str	r1, [sp]
    4044:	movw	r1, #0
    4048:	mov	r2, r4
    404c:	movt	r1, #0
    4050:	bl	0 <fprintf>
    4054:	movw	r0, #0
    4058:	movw	r3, #0
    405c:	mov	r1, r4
    4060:	movw	r2, #466	; 0x1d2
    4064:	b	4b70 <gen_field_match+0xdbc>
    4068:	mov	r3, sl
    406c:	ldr	r2, [sp, #32]
    4070:	add	r0, r9, #48	; 0x30
    4074:	cmp	r3, #0
    4078:	str	r0, [sp, #40]	; 0x28
    407c:	mov	r0, r3
    4080:	movwne	r0, #1
    4084:	cmp	r2, #0
    4088:	mov	r1, r2
    408c:	movwne	r1, #1
    4090:	ands	r0, r1, r0
    4094:	ldr	r1, [sp, #28]
    4098:	movwne	r3, #0
    409c:	str	r0, [sp, #16]
    40a0:	cmp	r3, #0
    40a4:	mov	r0, r3
    40a8:	movwne	r0, #1
    40ac:	cmp	r1, #0
    40b0:	movwne	r1, #1
    40b4:	ands	r0, r1, r0
    40b8:	movwne	r3, #0
    40bc:	cmp	r2, #0
    40c0:	str	r0, [sp, #20]
    40c4:	movwne	lr, #0
    40c8:	cmp	r7, #0
    40cc:	str	r3, [sp, #96]	; 0x60
    40d0:	str	lr, [sp, #80]	; 0x50
    40d4:	beq	40f4 <gen_field_match+0x340>
    40d8:	movw	r1, #0
    40dc:	mov	r0, r4
    40e0:	movt	r1, #0
    40e4:	bl	2064 <println>
    40e8:	ldr	r0, [r4, #220]	; 0xdc
    40ec:	add	r0, r0, #1
    40f0:	str	r0, [r4, #220]	; 0xdc
    40f4:	ldr	r1, [sp, #40]	; 0x28
    40f8:	str	r9, [sp, #68]	; 0x44
    40fc:	add	r0, r1, #32
    4100:	str	r0, [sp, #52]	; 0x34
    4104:	add	r0, r1, #48	; 0x30
    4108:	str	r0, [sp, #56]	; 0x38
    410c:	add	r0, r1, #40	; 0x28
    4110:	str	r0, [sp, #64]	; 0x40
    4114:	clz	r0, r8
    4118:	lsr	r0, r0, #5
    411c:	str	r0, [sp, #24]
    4120:	ldr	r0, [sp, #32]
    4124:	clz	r0, r0
    4128:	lsr	r0, r0, #5
    412c:	str	r0, [sp, #76]	; 0x4c
    4130:	movw	r0, #0
    4134:	movt	r0, #0
    4138:	str	r0, [sp, #100]	; 0x64
    413c:	str	r0, [sp, #72]	; 0x48
    4140:	b	4160 <gen_field_match+0x3ac>
    4144:	movw	r1, #0
    4148:	movt	r1, #0
    414c:	bl	2064 <println>
    4150:	ldr	r6, [sp, #104]	; 0x68
    4154:	mov	r7, #2
    4158:	cmp	r6, #1
    415c:	bne	4944 <gen_field_match+0xb90>
    4160:	cmp	r7, #2
    4164:	mov	r1, r7
    4168:	str	r7, [sp, #104]	; 0x68
    416c:	bne	4210 <gen_field_match+0x45c>
    4170:	ldr	r0, [r4, #220]	; 0xdc
    4174:	cmp	r0, #0
    4178:	beq	4a1c <gen_field_match+0xc68>
    417c:	movw	r1, #0
    4180:	sub	r0, r0, #1
    4184:	movt	r1, #0
    4188:	str	r0, [r4, #220]	; 0xdc
    418c:	mov	r0, r4
    4190:	bl	2064 <println>
    4194:	ldr	r0, [r4, #220]	; 0xdc
    4198:	sub	r2, fp, #256	; 0x100
    419c:	add	r0, r0, #1
    41a0:	str	r0, [r4, #220]	; 0xdc
    41a4:	ldr	r1, [r9, #104]	; 0x68
    41a8:	ldr	r0, [r1, #12]
    41ac:	bl	0 <__flatcc_fb_scoped_symbol_name>
    41b0:	ldr	r0, [r9, #104]	; 0x68
    41b4:	movw	r1, #0
    41b8:	movt	r1, #0
    41bc:	ldrh	r5, [r0, #8]
    41c0:	mov	r0, r4
    41c4:	bl	2064 <println>
    41c8:	cmp	r5, #0
    41cc:	ldr	r0, [sp, #92]	; 0x5c
    41d0:	mov	sl, #0
    41d4:	mov	r5, #0
    41d8:	movne	r0, #1
    41dc:	str	r0, [sp, #92]	; 0x5c
    41e0:	clz	r0, r0
    41e4:	lsr	r6, r0, #5
    41e8:	ldr	r0, [sp, #76]	; 0x4c
    41ec:	and	r8, r6, r0
    41f0:	ldr	r0, [sp, #84]	; 0x54
    41f4:	movweq	r0, #1
    41f8:	str	r0, [sp, #84]	; 0x54
    41fc:	mov	r0, #0
    4200:	str	r0, [sp, #96]	; 0x60
    4204:	mov	r0, #0
    4208:	str	r0, [sp, #80]	; 0x50
    420c:	b	4508 <gen_field_match+0x754>
    4210:	ldr	r7, [sp, #80]	; 0x50
    4214:	cmp	r7, #0
    4218:	beq	42a0 <gen_field_match+0x4ec>
    421c:	ldr	r0, [sp, #48]	; 0x30
    4220:	sub	r2, r0, #1
    4224:	cmp	r2, #10
    4228:	bhi	4a6c <gen_field_match+0xcb8>
    422c:	movw	r6, #0
    4230:	add	r3, pc, #40	; 0x28
    4234:	movw	r0, #0
    4238:	movw	r1, #0
    423c:	mov	r9, #1
    4240:	movt	r6, #0
    4244:	movt	r0, #0
    4248:	movt	r1, #0
    424c:	str	r6, [sp, #100]	; 0x64
    4250:	movw	r6, #0
    4254:	movt	r6, #0
    4258:	str	r6, [sp, #72]	; 0x48
    425c:	ldr	pc, [r3, r2, lsl #2]
    4260:	.word	0x0000428c
    4264:	.word	0x00004338
    4268:	.word	0x000042c8
    426c:	.word	0x000042a8
    4270:	.word	0x00004340
    4274:	.word	0x000042f0
    4278:	.word	0x00004304
    427c:	.word	0x000042dc
    4280:	.word	0x00004328
    4284:	.word	0x000042bc
    4288:	.word	0x00004318
    428c:	movw	r0, #0
    4290:	movw	r1, #0
    4294:	movt	r0, #0
    4298:	movt	r1, #0
    429c:	b	4338 <gen_field_match+0x584>
    42a0:	mov	r9, #0
    42a4:	b	4340 <gen_field_match+0x58c>
    42a8:	movw	r0, #0
    42ac:	movw	r1, #0
    42b0:	movt	r0, #0
    42b4:	movt	r1, #0
    42b8:	b	4338 <gen_field_match+0x584>
    42bc:	movw	r1, #0
    42c0:	movt	r1, #0
    42c4:	b	4320 <gen_field_match+0x56c>
    42c8:	movw	r0, #0
    42cc:	movw	r1, #0
    42d0:	movt	r0, #0
    42d4:	movt	r1, #0
    42d8:	b	4338 <gen_field_match+0x584>
    42dc:	movw	r0, #0
    42e0:	movw	r1, #0
    42e4:	movt	r0, #0
    42e8:	movt	r1, #0
    42ec:	b	4338 <gen_field_match+0x584>
    42f0:	movw	r0, #0
    42f4:	movw	r1, #0
    42f8:	movt	r0, #0
    42fc:	movt	r1, #0
    4300:	b	4338 <gen_field_match+0x584>
    4304:	movw	r0, #0
    4308:	movw	r1, #0
    430c:	movt	r0, #0
    4310:	movt	r1, #0
    4314:	b	4338 <gen_field_match+0x584>
    4318:	movw	r1, #0
    431c:	movt	r1, #0
    4320:	mov	r0, r1
    4324:	b	4338 <gen_field_match+0x584>
    4328:	movw	r0, #0
    432c:	movw	r1, #0
    4330:	movt	r0, #0
    4334:	movt	r1, #0
    4338:	str	r0, [sp, #100]	; 0x64
    433c:	str	r1, [sp, #72]	; 0x48
    4340:	ldr	r1, [sp, #92]	; 0x5c
    4344:	ldr	r2, [sp, #76]	; 0x4c
    4348:	orr	r0, r1, r7
    434c:	clz	r0, r0
    4350:	lsr	r0, r0, #5
    4354:	and	r8, r0, r2
    4358:	clz	r0, r1
    435c:	lsr	r6, r0, #5
    4360:	ldr	r0, [sp, #96]	; 0x60
    4364:	cmp	r0, #0
    4368:	beq	4388 <gen_field_match+0x5d4>
    436c:	cmp	r8, #0
    4370:	beq	43a8 <gen_field_match+0x5f4>
    4374:	movw	r1, #0
    4378:	mov	r0, r4
    437c:	movt	r1, #0
    4380:	bl	2064 <println>
    4384:	b	43f8 <gen_field_match+0x644>
    4388:	cmp	r9, #0
    438c:	ldr	r9, [sp, #68]	; 0x44
    4390:	mov	sl, #0
    4394:	bne	4438 <gen_field_match+0x684>
    4398:	mov	r0, #0
    439c:	mov	r5, #0
    43a0:	str	r0, [sp, #96]	; 0x60
    43a4:	b	4508 <gen_field_match+0x754>
    43a8:	ldr	r0, [sp, #64]	; 0x40
    43ac:	mov	r1, #0
    43b0:	ldm	r0, {r5, r7}
    43b4:	mvn	r0, #0
    43b8:	orrs	r3, r5, r7
    43bc:	mov	r2, r5
    43c0:	movweq	r2, #1
    43c4:	movne	r3, r7
    43c8:	bl	0 <__aeabi_uldivmod>
    43cc:	ldr	r2, [sp, #68]	; 0x44
    43d0:	mov	r3, r7
    43d4:	ldrsh	r2, [r2, #74]	; 0x4a
    43d8:	str	r1, [sp, #12]
    43dc:	movw	r1, #0
    43e0:	str	r0, [sp, #8]
    43e4:	mov	r0, r4
    43e8:	movt	r1, #0
    43ec:	str	r2, [sp]
    43f0:	mov	r2, r5
    43f4:	bl	2064 <println>
    43f8:	movw	r1, #0
    43fc:	mov	r0, r4
    4400:	movt	r1, #0
    4404:	bl	2064 <println>
    4408:	movw	r1, #0
    440c:	mov	r0, r4
    4410:	movt	r1, #0
    4414:	bl	2064 <println>
    4418:	ldr	r0, [r4, #220]	; 0xdc
    441c:	cmp	r9, #0
    4420:	ldr	r9, [sp, #68]	; 0x44
    4424:	mov	r5, #0
    4428:	mov	sl, #1
    442c:	add	r0, r0, #1
    4430:	str	r0, [r4, #220]	; 0xdc
    4434:	beq	44e0 <gen_field_match+0x72c>
    4438:	ldr	r2, [sp, #72]	; 0x48
    443c:	movw	r1, #0
    4440:	mov	r0, r4
    4444:	movt	r1, #0
    4448:	bl	2064 <println>
    444c:	movw	r1, #0
    4450:	mov	r0, r4
    4454:	movt	r1, #0
    4458:	bl	2064 <println>
    445c:	ldr	r0, [r4, #220]	; 0xdc
    4460:	add	r0, r0, #2
    4464:	str	r0, [r4, #220]	; 0xdc
    4468:	ldr	r0, [sp, #36]	; 0x24
    446c:	cmp	r0, #0
    4470:	beq	4488 <gen_field_match+0x6d4>
    4474:	movw	r1, #0
    4478:	mov	r0, r4
    447c:	sub	r2, fp, #256	; 0x100
    4480:	movt	r1, #0
    4484:	bl	2064 <println>
    4488:	ldr	r0, [r4, #208]	; 0xd0
    448c:	movw	r1, #0
    4490:	add	r3, sp, #108	; 0x6c
    4494:	movt	r1, #0
    4498:	ldr	r2, [r0, #160]	; 0xa0
    449c:	mov	r0, r4
    44a0:	bl	2064 <println>
    44a4:	ldr	r0, [r4, #208]	; 0xd0
    44a8:	movw	r1, #0
    44ac:	movt	r1, #0
    44b0:	ldr	r2, [r0, #160]	; 0xa0
    44b4:	mov	r0, r4
    44b8:	bl	2064 <println>
    44bc:	ldr	r0, [r4, #220]	; 0xdc
    44c0:	cmp	r0, #0
    44c4:	beq	4a30 <gen_field_match+0xc7c>
    44c8:	subs	r1, r0, #1
    44cc:	str	r1, [r4, #220]	; 0xdc
    44d0:	beq	4a30 <gen_field_match+0xc7c>
    44d4:	sub	r0, r0, #2
    44d8:	mov	r5, #1
    44dc:	str	r0, [r4, #220]	; 0xdc
    44e0:	ldr	r0, [sp, #96]	; 0x60
    44e4:	clz	r0, r0
    44e8:	lsr	r0, r0, #5
    44ec:	orrs	r0, r0, r8
    44f0:	bne	4508 <gen_field_match+0x754>
    44f4:	movw	r1, #0
    44f8:	mov	r0, r4
    44fc:	movt	r1, #0
    4500:	bl	2064 <println>
    4504:	mov	r8, #0
    4508:	ldr	r0, [sp, #88]	; 0x58
    450c:	cmp	r0, #1
    4510:	bne	452c <gen_field_match+0x778>
    4514:	ldr	r0, [sp, #52]	; 0x34
    4518:	movw	r1, #0
    451c:	movt	r1, #0
    4520:	ldrd	r2, [r0]
    4524:	mov	r0, r4
    4528:	b	4558 <gen_field_match+0x7a4>
    452c:	orrs	r0, sl, r6
    4530:	bne	455c <gen_field_match+0x7a8>
    4534:	ldr	r0, [sp, #56]	; 0x38
    4538:	ldrh	r7, [r9, #74]	; 0x4a
    453c:	ldrd	r2, [r0]
    4540:	ldr	r0, [sp, #64]	; 0x40
    4544:	ldrd	r0, [r0]
    4548:	stm	sp, {r0, r1, r7}
    454c:	movw	r1, #0
    4550:	mov	r0, r4
    4554:	movt	r1, #0
    4558:	bl	2064 <println>
    455c:	cmp	r5, #0
    4560:	beq	4634 <gen_field_match+0x880>
    4564:	ldr	r5, [sp, #100]	; 0x64
    4568:	movw	r1, #0
    456c:	mov	r0, r4
    4570:	movt	r1, #0
    4574:	mov	r2, r5
    4578:	bl	2064 <println>
    457c:	movw	r1, #0
    4580:	mov	r0, r4
    4584:	movt	r1, #0
    4588:	bl	2064 <println>
    458c:	ldr	r0, [r4, #220]	; 0xdc
    4590:	movw	r1, #0
    4594:	mov	r2, r5
    4598:	movt	r1, #0
    459c:	add	r0, r0, #1
    45a0:	str	r0, [r4, #220]	; 0xdc
    45a4:	mov	r0, r4
    45a8:	bl	2064 <println>
    45ac:	movw	r1, #0
    45b0:	mov	r0, r4
    45b4:	movt	r1, #0
    45b8:	bl	2064 <println>
    45bc:	ldr	r0, [r4, #220]	; 0xdc
    45c0:	cmp	r0, #0
    45c4:	beq	4a44 <gen_field_match+0xc90>
    45c8:	movw	r1, #0
    45cc:	sub	r0, r0, #1
    45d0:	movt	r1, #0
    45d4:	str	r0, [r4, #220]	; 0xdc
    45d8:	mov	r0, r4
    45dc:	bl	2064 <println>
    45e0:	ldr	r0, [sp, #88]	; 0x58
    45e4:	sub	r0, r0, #1
    45e8:	clz	r0, r0
    45ec:	lsr	r0, r0, #5
    45f0:	orr	r5, r0, sl
    45f4:	ldr	r0, [sp, #60]	; 0x3c
    45f8:	cmp	r0, #0
    45fc:	cmpeq	r5, #0
    4600:	bne	470c <gen_field_match+0x958>
    4604:	ldrh	r0, [r9, #56]	; 0x38
    4608:	sub	r1, r0, #5
    460c:	cmp	r1, #2
    4610:	bcc	46a4 <gen_field_match+0x8f0>
    4614:	cmp	r0, #3
    4618:	beq	46bc <gen_field_match+0x908>
    461c:	cmp	r0, #4
    4620:	bne	4ad0 <gen_field_match+0xd1c>
    4624:	ldr	r0, [sp, #40]	; 0x28
    4628:	movw	r1, #0
    462c:	movt	r1, #0
    4630:	b	46b0 <gen_field_match+0x8fc>
    4634:	cmp	r6, #0
    4638:	beq	4664 <gen_field_match+0x8b0>
    463c:	ldr	r0, [sp, #44]	; 0x2c
    4640:	cmp	r0, #0
    4644:	beq	4684 <gen_field_match+0x8d0>
    4648:	movw	r1, #0
    464c:	mov	r0, r4
    4650:	movt	r1, #0
    4654:	bl	2064 <println>
    4658:	cmp	sl, #0
    465c:	beq	4150 <gen_field_match+0x39c>
    4660:	b	4734 <gen_field_match+0x980>
    4664:	movw	r1, #0
    4668:	mov	r0, r4
    466c:	movt	r1, #0
    4670:	sub	r2, fp, #256	; 0x100
    4674:	bl	2064 <println>
    4678:	cmp	sl, #0
    467c:	beq	4150 <gen_field_match+0x39c>
    4680:	b	4734 <gen_field_match+0x980>
    4684:	ldr	r0, [sp, #60]	; 0x3c
    4688:	cmp	r0, #0
    468c:	beq	47cc <gen_field_match+0xa18>
    4690:	ldr	r2, [sp, #24]
    4694:	movw	r1, #0
    4698:	mov	r0, r4
    469c:	movt	r1, #0
    46a0:	b	4674 <gen_field_match+0x8c0>
    46a4:	ldr	r0, [sp, #40]	; 0x28
    46a8:	movw	r1, #0
    46ac:	movt	r1, #0
    46b0:	ldrd	r2, [r0]
    46b4:	mov	r0, r4
    46b8:	b	46d4 <gen_field_match+0x920>
    46bc:	ldr	r0, [sp, #40]	; 0x28
    46c0:	movw	r1, #0
    46c4:	movt	r1, #0
    46c8:	vldr	d16, [r0]
    46cc:	mov	r0, r4
    46d0:	vmov	r2, r3, d16
    46d4:	bl	2064 <println>
    46d8:	ldr	r0, [r4, #220]	; 0xdc
    46dc:	add	r0, r0, #1
    46e0:	str	r0, [r4, #220]	; 0xdc
    46e4:	ldr	r0, [sp, #56]	; 0x38
    46e8:	ldrsh	r7, [r9, #74]	; 0x4a
    46ec:	ldrd	r2, [r0]
    46f0:	ldr	r0, [sp, #64]	; 0x40
    46f4:	ldrd	r0, [r0]
    46f8:	stm	sp, {r0, r1, r7}
    46fc:	movw	r1, #0
    4700:	mov	r0, r4
    4704:	movt	r1, #0
    4708:	bl	2064 <println>
    470c:	ldr	r3, [sp, #100]	; 0x64
    4710:	movw	r1, #0
    4714:	mov	r0, r4
    4718:	mov	r2, r4
    471c:	movt	r1, #0
    4720:	bl	2064 <println>
    4724:	cmp	r5, #0
    4728:	beq	47a8 <gen_field_match+0x9f4>
    472c:	cmp	sl, #0
    4730:	beq	4150 <gen_field_match+0x39c>
    4734:	cmp	r8, #0
    4738:	beq	475c <gen_field_match+0x9a8>
    473c:	movw	r1, #0
    4740:	mov	r0, r4
    4744:	movt	r1, #0
    4748:	bl	2064 <println>
    474c:	movw	r1, #0
    4750:	mov	r0, r4
    4754:	movt	r1, #0
    4758:	bl	2064 <println>
    475c:	movw	r1, #0
    4760:	mov	r0, r4
    4764:	movt	r1, #0
    4768:	bl	2064 <println>
    476c:	ldr	r0, [r4, #220]	; 0xdc
    4770:	cmp	r0, #0
    4774:	beq	4a58 <gen_field_match+0xca4>
    4778:	movw	r1, #0
    477c:	sub	r0, r0, #1
    4780:	movt	r1, #0
    4784:	str	r0, [r4, #220]	; 0xdc
    4788:	mov	r0, r4
    478c:	bl	2064 <println>
    4790:	mov	r0, r4
    4794:	cmp	r8, #0
    4798:	beq	4144 <gen_field_match+0x390>
    479c:	movw	r1, #0
    47a0:	movt	r1, #0
    47a4:	b	414c <gen_field_match+0x398>
    47a8:	ldr	r0, [r4, #220]	; 0xdc
    47ac:	cmp	r0, #0
    47b0:	beq	4abc <gen_field_match+0xd08>
    47b4:	movw	r1, #0
    47b8:	sub	r0, r0, #1
    47bc:	str	r0, [r4, #220]	; 0xdc
    47c0:	mov	r0, r4
    47c4:	movt	r1, #0
    47c8:	b	414c <gen_field_match+0x398>
    47cc:	ldr	r0, [sp, #84]	; 0x54
    47d0:	cmp	r0, #0
    47d4:	beq	47e8 <gen_field_match+0xa34>
    47d8:	movw	r1, #0
    47dc:	mov	r0, r4
    47e0:	movt	r1, #0
    47e4:	b	4670 <gen_field_match+0x8bc>
    47e8:	ldr	r0, [sp, #28]
    47ec:	cmp	r0, #0
    47f0:	beq	4828 <gen_field_match+0xa74>
    47f4:	ldr	r0, [sp, #56]	; 0x38
    47f8:	ldr	r3, [sp, #20]
    47fc:	ldr	r2, [r9, #112]	; 0x70
    4800:	ldrd	r0, [r0]
    4804:	cmp	r3, #0
    4808:	beq	48f0 <gen_field_match+0xb3c>
    480c:	stm	sp, {r0, r1}
    4810:	movw	r1, #0
    4814:	sub	r0, fp, #256	; 0x100
    4818:	movt	r1, #0
    481c:	str	r0, [sp, #8]
    4820:	mov	r0, r4
    4824:	b	4930 <gen_field_match+0xb7c>
    4828:	ldr	r0, [sp, #32]
    482c:	cmp	r0, #0
    4830:	beq	490c <gen_field_match+0xb58>
    4834:	movw	r1, #0
    4838:	mov	r0, r4
    483c:	movt	r1, #0
    4840:	bl	2064 <println>
    4844:	ldr	r0, [r4, #220]	; 0xdc
    4848:	movw	r1, #0
    484c:	sub	r2, fp, #256	; 0x100
    4850:	movt	r1, #0
    4854:	add	r0, r0, #2
    4858:	str	r0, [r4, #220]	; 0xdc
    485c:	mov	r0, r4
    4860:	bl	2064 <println>
    4864:	ldr	r0, [r4, #208]	; 0xd0
    4868:	movw	r1, #0
    486c:	add	r3, sp, #108	; 0x6c
    4870:	movt	r1, #0
    4874:	ldr	r2, [r0, #160]	; 0xa0
    4878:	mov	r0, r4
    487c:	bl	2064 <println>
    4880:	ldr	r0, [r4, #208]	; 0xd0
    4884:	movw	r1, #0
    4888:	movt	r1, #0
    488c:	ldr	r2, [r0, #160]	; 0xa0
    4890:	mov	r0, r4
    4894:	bl	2064 <println>
    4898:	ldr	r0, [r4, #220]	; 0xdc
    489c:	cmp	r0, #0
    48a0:	beq	4b18 <gen_field_match+0xd64>
    48a4:	subs	r1, r0, #1
    48a8:	str	r1, [r4, #220]	; 0xdc
    48ac:	beq	4b18 <gen_field_match+0xd64>
    48b0:	sub	r0, r0, #2
    48b4:	ldr	r3, [sp, #16]
    48b8:	str	r0, [r4, #220]	; 0xdc
    48bc:	ldr	r0, [sp, #56]	; 0x38
    48c0:	ldr	r2, [r9, #112]	; 0x70
    48c4:	cmp	r3, #0
    48c8:	ldrd	r0, [r0]
    48cc:	beq	4918 <gen_field_match+0xb64>
    48d0:	stm	sp, {r0, r1}
    48d4:	sub	r0, fp, #256	; 0x100
    48d8:	movw	r1, #0
    48dc:	str	r0, [sp, #8]
    48e0:	str	r0, [sp, #12]
    48e4:	mov	r0, r4
    48e8:	movt	r1, #0
    48ec:	b	4930 <gen_field_match+0xb7c>
    48f0:	stm	sp, {r0, r1}
    48f4:	movw	r1, #0
    48f8:	sub	r0, fp, #256	; 0x100
    48fc:	str	r0, [sp, #8]
    4900:	mov	r0, r4
    4904:	movt	r1, #0
    4908:	b	4930 <gen_field_match+0xb7c>
    490c:	cmp	sl, #0
    4910:	bne	4734 <gen_field_match+0x980>
    4914:	b	4b2c <gen_field_match+0xd78>
    4918:	stm	sp, {r0, r1}
    491c:	movw	r1, #0
    4920:	sub	r0, fp, #256	; 0x100
    4924:	str	r0, [sp, #8]
    4928:	mov	r0, r4
    492c:	movt	r1, #0
    4930:	mov	r3, #0
    4934:	bl	2064 <println>
    4938:	cmp	sl, #0
    493c:	beq	4150 <gen_field_match+0x39c>
    4940:	b	4734 <gen_field_match+0x980>
    4944:	ldr	r5, [sp, #96]	; 0x60
    4948:	cmp	r6, #2
    494c:	bne	4994 <gen_field_match+0xbe0>
    4950:	movw	r1, #0
    4954:	mov	r0, r4
    4958:	movt	r1, #0
    495c:	bl	2064 <println>
    4960:	movw	r1, #0
    4964:	mov	r0, r4
    4968:	movt	r1, #0
    496c:	bl	2064 <println>
    4970:	ldr	r0, [r4, #220]	; 0xdc
    4974:	cmp	r0, #0
    4978:	beq	4b9c <gen_field_match+0xde8>
    497c:	movw	r1, #0
    4980:	sub	r0, r0, #1
    4984:	movt	r1, #0
    4988:	str	r0, [r4, #220]	; 0xdc
    498c:	mov	r0, r4
    4990:	bl	2064 <println>
    4994:	ldr	r0, [sp, #44]	; 0x2c
    4998:	ldr	r1, [sp, #60]	; 0x3c
    499c:	orr	r0, r1, r0
    49a0:	ldr	r1, [sp, #84]	; 0x54
    49a4:	orr	r0, r0, r6
    49a8:	orr	r0, r0, r5
    49ac:	orrs	r0, r0, r1
    49b0:	beq	49dc <gen_field_match+0xc28>
    49b4:	ldr	r0, [sp, #56]	; 0x38
    49b8:	movw	r1, #0
    49bc:	movt	r1, #0
    49c0:	ldrd	r2, [r0]
    49c4:	mov	r0, r4
    49c8:	bl	2064 <println>
    49cc:	movw	r1, #0
    49d0:	mov	r0, r4
    49d4:	movt	r1, #0
    49d8:	bl	2064 <println>
    49dc:	ldr	r0, [r4, #220]	; 0xdc
    49e0:	cmp	r0, #0
    49e4:	beq	4b7c <gen_field_match+0xdc8>
    49e8:	movw	r1, #0
    49ec:	sub	r0, r0, #1
    49f0:	movt	r1, #0
    49f4:	str	r0, [r4, #220]	; 0xdc
    49f8:	mov	r0, r4
    49fc:	bl	2064 <println>
    4a00:	ldr	r0, [r4, #220]	; 0xdc
    4a04:	add	r0, r0, #1
    4a08:	str	r0, [r4, #220]	; 0xdc
    4a0c:	sub	sp, fp, #28
    4a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4a14:	mov	r0, #0
    4a18:	b	3ecc <gen_field_match+0x118>
    4a1c:	movw	r0, #0
    4a20:	movw	r1, #0
    4a24:	movw	r3, #0
    4a28:	movw	r2, #490	; 0x1ea
    4a2c:	b	4bac <gen_field_match+0xdf8>
    4a30:	movw	r0, #0
    4a34:	movw	r1, #0
    4a38:	movw	r3, #0
    4a3c:	movw	r2, #539	; 0x21b
    4a40:	b	4bac <gen_field_match+0xdf8>
    4a44:	movw	r0, #0
    4a48:	movw	r1, #0
    4a4c:	movw	r3, #0
    4a50:	movw	r2, #559	; 0x22f
    4a54:	b	4bac <gen_field_match+0xdf8>
    4a58:	movw	r0, #0
    4a5c:	movw	r1, #0
    4a60:	movw	r3, #0
    4a64:	movw	r2, #647	; 0x287
    4a68:	b	4bac <gen_field_match+0xdf8>
    4a6c:	movw	r0, #0
    4a70:	movw	r1, #0
    4a74:	movw	r4, #0
    4a78:	mov	r3, #96	; 0x60
    4a7c:	movt	r0, #0
    4a80:	movt	r1, #0
    4a84:	movt	r4, #0
    4a88:	ldr	r0, [r0]
    4a8c:	str	r1, [sp]
    4a90:	movw	r1, #0
    4a94:	mov	r2, r4
    4a98:	movt	r1, #0
    4a9c:	bl	0 <fprintf>
    4aa0:	movw	r0, #0
    4aa4:	movw	r3, #0
    4aa8:	mov	r1, r4
    4aac:	mov	r2, #96	; 0x60
    4ab0:	movt	r0, #0
    4ab4:	movt	r3, #0
    4ab8:	bl	0 <__assert_fail>
    4abc:	movw	r0, #0
    4ac0:	movw	r1, #0
    4ac4:	movw	r3, #0
    4ac8:	movw	r2, #602	; 0x25a
    4acc:	b	4bac <gen_field_match+0xdf8>
    4ad0:	movw	r0, #0
    4ad4:	movw	r1, #0
    4ad8:	movw	r4, #0
    4adc:	movw	r3, #590	; 0x24e
    4ae0:	movt	r0, #0
    4ae4:	movt	r1, #0
    4ae8:	movt	r4, #0
    4aec:	ldr	r0, [r0]
    4af0:	str	r1, [sp]
    4af4:	movw	r1, #0
    4af8:	mov	r2, r4
    4afc:	movt	r1, #0
    4b00:	bl	0 <fprintf>
    4b04:	movw	r0, #0
    4b08:	movw	r3, #0
    4b0c:	mov	r1, r4
    4b10:	movw	r2, #590	; 0x24e
    4b14:	b	4b70 <gen_field_match+0xdbc>
    4b18:	movw	r0, #0
    4b1c:	movw	r1, #0
    4b20:	movw	r3, #0
    4b24:	movw	r2, #627	; 0x273
    4b28:	b	4bac <gen_field_match+0xdf8>
    4b2c:	movw	r0, #0
    4b30:	movw	r1, #0
    4b34:	movw	r4, #0
    4b38:	mov	r3, #636	; 0x27c
    4b3c:	movt	r0, #0
    4b40:	movt	r1, #0
    4b44:	movt	r4, #0
    4b48:	ldr	r0, [r0]
    4b4c:	str	r1, [sp]
    4b50:	movw	r1, #0
    4b54:	mov	r2, r4
    4b58:	movt	r1, #0
    4b5c:	bl	0 <fprintf>
    4b60:	movw	r0, #0
    4b64:	movw	r3, #0
    4b68:	mov	r1, r4
    4b6c:	mov	r2, #636	; 0x27c
    4b70:	movt	r0, #0
    4b74:	movt	r3, #0
    4b78:	bl	0 <__assert_fail>
    4b7c:	movw	r0, #0
    4b80:	movw	r1, #0
    4b84:	movw	r3, #0
    4b88:	movw	r2, #675	; 0x2a3
    4b8c:	movt	r0, #0
    4b90:	movt	r1, #0
    4b94:	movt	r3, #0
    4b98:	bl	0 <__assert_fail>
    4b9c:	movw	r0, #0
    4ba0:	movw	r1, #0
    4ba4:	movw	r3, #0
    4ba8:	movw	r2, #661	; 0x295
    4bac:	movt	r0, #0
    4bb0:	movt	r1, #0
    4bb4:	movt	r3, #0
    4bb8:	bl	0 <__assert_fail>

00004bbc <gen_field_unmatched>:
    4bbc:	movw	r1, #0
    4bc0:	movt	r1, #0
    4bc4:	b	2064 <println>

00004bc8 <gen_scope_match>:
    4bc8:	push	{r4, r5, r6, sl, fp, lr}
    4bcc:	add	fp, sp, #16
    4bd0:	sub	sp, sp, #224	; 0xe0
    4bd4:	mov	r5, r2
    4bd8:	ldr	r2, [fp, #8]
    4bdc:	movw	r1, #0
    4be0:	mov	r4, r0
    4be4:	movt	r1, #0
    4be8:	bl	2064 <println>
    4bec:	movw	r1, #0
    4bf0:	mov	r0, r4
    4bf4:	movt	r1, #0
    4bf8:	bl	2064 <println>
    4bfc:	ldr	r0, [r4, #220]	; 0xdc
    4c00:	add	r0, r0, #1
    4c04:	str	r0, [r4, #220]	; 0xdc
    4c08:	ldrh	r0, [r5, #8]
    4c0c:	sub	r0, r0, #3
    4c10:	uxth	r0, r0
    4c14:	cmp	r0, #2
    4c18:	bcs	4c8c <gen_scope_match+0xc4>
    4c1c:	mov	r6, sp
    4c20:	mov	r1, #0
    4c24:	mov	r2, #220	; 0xdc
    4c28:	mov	r0, r6
    4c2c:	bl	0 <memset>
    4c30:	ldr	r0, [r5, #12]
    4c34:	mov	r1, r5
    4c38:	mov	r2, r6
    4c3c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    4c40:	movw	r1, #0
    4c44:	mov	r0, r4
    4c48:	mov	r2, r6
    4c4c:	movt	r1, #0
    4c50:	bl	2064 <println>
    4c54:	ldr	r0, [r4, #220]	; 0xdc
    4c58:	cmp	r0, #0
    4c5c:	beq	4cac <gen_scope_match+0xe4>
    4c60:	movw	r1, #0
    4c64:	sub	r0, r0, #1
    4c68:	movt	r1, #0
    4c6c:	str	r0, [r4, #220]	; 0xdc
    4c70:	mov	r0, r4
    4c74:	bl	2064 <println>
    4c78:	ldr	r0, [r4, #220]	; 0xdc
    4c7c:	add	r0, r0, #1
    4c80:	str	r0, [r4, #220]	; 0xdc
    4c84:	sub	sp, fp, #16
    4c88:	pop	{r4, r5, r6, sl, fp, pc}
    4c8c:	movw	r0, #0
    4c90:	movw	r1, #0
    4c94:	movw	r3, #0
    4c98:	movw	r2, #729	; 0x2d9
    4c9c:	movt	r0, #0
    4ca0:	movt	r1, #0
    4ca4:	movt	r3, #0
    4ca8:	bl	0 <__assert_fail>
    4cac:	movw	r0, #0
    4cb0:	movw	r1, #0
    4cb4:	movw	r3, #0
    4cb8:	movw	r2, #742	; 0x2e6
    4cbc:	movt	r0, #0
    4cc0:	movt	r1, #0
    4cc4:	movt	r3, #0
    4cc8:	bl	0 <__assert_fail>

00004ccc <gen_scope_unmatched>:
    4ccc:	movw	r1, #0
    4cd0:	movt	r1, #0
    4cd4:	b	2064 <println>

00004cd8 <count_visible_enum_symbol>:
    4cd8:	push	{r4, sl, fp, lr}
    4cdc:	add	fp, sp, #8
    4ce0:	mov	r4, r0
    4ce4:	ldrh	r0, [r1, #8]
    4ce8:	sub	r0, r0, #3
    4cec:	cmp	r0, #1
    4cf0:	pophi	{r4, sl, fp, pc}
    4cf4:	ldr	r0, [r4, #4]
    4cf8:	ldr	r1, [r1, #16]
    4cfc:	add	r0, r0, #172	; 0xac
    4d00:	bl	0 <ptr_set_find_item>
    4d04:	cmp	r0, #0
    4d08:	ldrne	r0, [r4]
    4d0c:	addne	r0, r0, #1
    4d10:	strne	r0, [r4]
    4d14:	pop	{r4, sl, fp, pc}

00004d18 <install_visible_enum_symbol>:
    4d18:	push	{r4, r5, fp, lr}
    4d1c:	add	fp, sp, #8
    4d20:	mov	r4, r0
    4d24:	ldrh	r0, [r1, #8]
    4d28:	sub	r0, r0, #3
    4d2c:	cmp	r0, #1
    4d30:	bhi	4d70 <install_visible_enum_symbol+0x58>
    4d34:	ldr	r0, [r4, #4]
    4d38:	mov	r5, r1
    4d3c:	ldr	r1, [r1, #16]
    4d40:	add	r0, r0, #172	; 0xac
    4d44:	bl	0 <ptr_set_find_item>
    4d48:	cmp	r0, #0
    4d4c:	popeq	{r4, r5, fp, pc}
    4d50:	ldr	r1, [r5, #4]
    4d54:	ldr	r0, [r4, #8]
    4d58:	ldr	r2, [r1]
    4d5c:	str	r2, [r0]
    4d60:	ldr	r1, [r1, #4]
    4d64:	stmib	r0, {r1, r5}
    4d68:	add	r0, r0, #16
    4d6c:	str	r0, [r4, #8]
    4d70:	pop	{r4, r5, fp, pc}

00004d74 <clear_catalog>:
    4d74:	push	{r4, sl, fp, lr}
    4d78:	add	fp, sp, #8
    4d7c:	mov	r4, r0
    4d80:	ldr	r0, [r0, #16]
    4d84:	cmp	r0, #0
    4d88:	beq	4d90 <clear_catalog+0x1c>
    4d8c:	bl	0 <free>
    4d90:	ldr	r0, [r4, #20]
    4d94:	cmp	r0, #0
    4d98:	beq	4da0 <clear_catalog+0x2c>
    4d9c:	bl	0 <free>
    4da0:	ldr	r0, [r4, #24]
    4da4:	cmp	r0, #0
    4da8:	beq	4db0 <clear_catalog+0x3c>
    4dac:	bl	0 <free>
    4db0:	vmov.i32	q8, #0	; 0x00000000
    4db4:	mov	r0, #28
    4db8:	add	r1, r4, #16
    4dbc:	vst1.32	{d16-d17}, [r4], r0
    4dc0:	vst1.32	{d16-d17}, [r4]
    4dc4:	vst1.32	{d16-d17}, [r1]
    4dc8:	pop	{r4, sl, fp, pc}

00004dcc <count_symbols>:
    4dcc:	mov	r2, r0
    4dd0:	add	r0, r1, #4
    4dd4:	movw	r1, #0
    4dd8:	movt	r1, #0
    4ddc:	b	0 <fb_symbol_table_visit>

00004de0 <install_symbols>:
    4de0:	mov	r2, r0
    4de4:	add	r0, r1, #4
    4de8:	movw	r1, #0
    4dec:	movt	r1, #0
    4df0:	b	0 <fb_symbol_table_visit>

00004df4 <count_symbol>:
    4df4:	push	{r4, r5, fp, lr}
    4df8:	add	fp, sp, #8
    4dfc:	mov	r4, r0
    4e00:	ldrh	r0, [r1, #8]
    4e04:	cmp	r0, #4
    4e08:	bhi	4ebc <count_symbol+0xc8>
    4e0c:	ldr	r0, [r4, #40]	; 0x28
    4e10:	mov	r5, r1
    4e14:	ldr	r1, [r1, #16]
    4e18:	add	r0, r0, #172	; 0xac
    4e1c:	bl	0 <ptr_set_find_item>
    4e20:	cmp	r0, #0
    4e24:	popeq	{r4, r5, fp, pc}
    4e28:	ldr	r1, [r4]
    4e2c:	mov	r0, #1
    4e30:	cmp	r1, #0
    4e34:	beq	4e70 <count_symbol+0x7c>
    4e38:	ldr	r1, [r5, #12]
    4e3c:	ldr	r1, [r1]
    4e40:	cmp	r1, #0
    4e44:	beq	4e70 <count_symbol+0x7c>
    4e48:	mov	r0, #0
    4e4c:	ldr	r2, [r1]
    4e50:	ldr	r1, [r1, #4]
    4e54:	ldr	r1, [r1, #4]
    4e58:	cmp	r2, #0
    4e5c:	add	r0, r0, r1
    4e60:	mov	r1, r2
    4e64:	add	r0, r0, #1
    4e68:	bne	4e4c <count_symbol+0x58>
    4e6c:	add	r0, r0, #1
    4e70:	ldr	r1, [r5, #4]
    4e74:	ldr	r1, [r1, #4]
    4e78:	add	r0, r0, r1
    4e7c:	ldr	r1, [r4, #12]
    4e80:	add	r0, r0, r1
    4e84:	str	r0, [r4, #12]
    4e88:	ldrh	r0, [r5, #8]
    4e8c:	sub	r1, r0, #3
    4e90:	cmp	r1, #2
    4e94:	bcc	4eb0 <count_symbol+0xbc>
    4e98:	cmp	r0, #1
    4e9c:	bhi	4ebc <count_symbol+0xc8>
    4ea0:	ldr	r0, [r4, #4]
    4ea4:	add	r0, r0, #1
    4ea8:	str	r0, [r4, #4]
    4eac:	pop	{r4, r5, fp, pc}
    4eb0:	ldr	r0, [r4, #8]
    4eb4:	add	r0, r0, #1
    4eb8:	str	r0, [r4, #8]
    4ebc:	pop	{r4, r5, fp, pc}

00004ec0 <install_symbol>:
    4ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4ec4:	add	fp, sp, #28
    4ec8:	sub	sp, sp, #4
    4ecc:	mov	r9, r0
    4ed0:	ldrh	r0, [r1, #8]
    4ed4:	cmp	r0, #4
    4ed8:	bhi	4fbc <install_symbol+0xfc>
    4edc:	ldr	r0, [r9, #40]	; 0x28
    4ee0:	mov	sl, r1
    4ee4:	ldr	r1, [r1, #16]
    4ee8:	add	r0, r0, #172	; 0xac
    4eec:	bl	0 <ptr_set_find_item>
    4ef0:	cmp	r0, #0
    4ef4:	beq	4fbc <install_symbol+0xfc>
    4ef8:	ldr	r0, [r9]
    4efc:	ldr	r8, [r9, #36]	; 0x24
    4f00:	cmp	r0, #0
    4f04:	mov	r6, r8
    4f08:	beq	4f50 <install_symbol+0x90>
    4f0c:	ldr	r0, [sl, #12]
    4f10:	mov	r6, r8
    4f14:	ldr	r4, [r0]
    4f18:	cmp	r4, #0
    4f1c:	beq	4f50 <install_symbol+0x90>
    4f20:	mov	r5, #46	; 0x2e
    4f24:	mov	r6, r8
    4f28:	ldr	r0, [r4, #4]
    4f2c:	ldm	r0, {r1, r7}
    4f30:	mov	r0, r6
    4f34:	mov	r2, r7
    4f38:	bl	0 <memcpy>
    4f3c:	strb	r5, [r6, r7]!
    4f40:	ldr	r4, [r4]
    4f44:	add	r6, r6, #1
    4f48:	cmp	r4, #0
    4f4c:	bne	4f28 <install_symbol+0x68>
    4f50:	ldr	r0, [sl, #4]
    4f54:	ldm	r0, {r1, r7}
    4f58:	mov	r0, r6
    4f5c:	mov	r2, r7
    4f60:	bl	0 <memcpy>
    4f64:	mov	r0, #0
    4f68:	strb	r0, [r6, r7]!
    4f6c:	add	r0, r6, #1
    4f70:	str	r0, [r9, #36]	; 0x24
    4f74:	ldrh	r0, [sl, #8]
    4f78:	sub	r1, r0, #3
    4f7c:	cmp	r1, #2
    4f80:	bcc	4fa8 <install_symbol+0xe8>
    4f84:	cmp	r0, #1
    4f88:	bhi	4fbc <install_symbol+0xfc>
    4f8c:	ldr	r0, [r9, #28]
    4f90:	str	sl, [r0]
    4f94:	str	r8, [r0, #4]
    4f98:	add	r0, r0, #8
    4f9c:	str	r0, [r9, #28]
    4fa0:	sub	sp, fp, #28
    4fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4fa8:	ldr	r0, [r9, #32]
    4fac:	str	sl, [r0]
    4fb0:	str	r8, [r0, #4]
    4fb4:	add	r0, r0, #8
    4fb8:	str	r0, [r9, #32]
    4fbc:	sub	sp, fp, #28
    4fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00004fc4 <compare_entries>:
    4fc4:	ldr	r1, [r1, #4]
    4fc8:	ldr	r0, [r0, #4]
    4fcc:	b	0 <strcmp>
