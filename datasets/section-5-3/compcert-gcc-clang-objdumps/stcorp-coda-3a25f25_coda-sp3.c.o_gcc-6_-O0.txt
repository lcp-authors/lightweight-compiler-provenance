
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-sp3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ingest_info_cleanup>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #8
       c:	str	r0, [fp, #-8]
      10:	ldr	r3, [fp, #-8]
      14:	ldr	r3, [r3]
      18:	cmp	r3, #0
      1c:	beq	30 <ingest_info_cleanup+0x30>
      20:	ldr	r3, [fp, #-8]
      24:	ldr	r3, [r3]
      28:	mov	r0, r3
      2c:	bl	0 <fclose>
      30:	ldr	r3, [fp, #-8]
      34:	ldr	r3, [r3, #8]
      38:	cmp	r3, #0
      3c:	beq	50 <ingest_info_cleanup+0x50>
      40:	ldr	r3, [fp, #-8]
      44:	ldr	r3, [r3, #8]
      48:	mov	r0, r3
      4c:	bl	0 <coda_dynamic_type_delete>
      50:	ldr	r3, [fp, #-8]
      54:	ldr	r3, [r3, #12]
      58:	cmp	r3, #0
      5c:	beq	70 <ingest_info_cleanup+0x70>
      60:	ldr	r3, [fp, #-8]
      64:	ldr	r3, [r3, #12]
      68:	mov	r0, r3
      6c:	bl	0 <coda_dynamic_type_delete>
      70:	ldr	r3, [fp, #-8]
      74:	ldr	r3, [r3, #16]
      78:	cmp	r3, #0
      7c:	beq	90 <ingest_info_cleanup+0x90>
      80:	ldr	r3, [fp, #-8]
      84:	ldr	r3, [r3, #16]
      88:	mov	r0, r3
      8c:	bl	0 <coda_dynamic_type_delete>
      90:	ldr	r3, [fp, #-8]
      94:	ldr	r3, [r3, #20]
      98:	cmp	r3, #0
      9c:	beq	b0 <ingest_info_cleanup+0xb0>
      a0:	ldr	r3, [fp, #-8]
      a4:	ldr	r3, [r3, #20]
      a8:	mov	r0, r3
      ac:	bl	0 <coda_dynamic_type_delete>
      b0:	ldr	r3, [fp, #-8]
      b4:	ldr	r3, [r3, #24]
      b8:	cmp	r3, #0
      bc:	beq	d0 <ingest_info_cleanup+0xd0>
      c0:	ldr	r3, [fp, #-8]
      c4:	ldr	r3, [r3, #24]
      c8:	mov	r0, r3
      cc:	bl	0 <coda_dynamic_type_delete>
      d0:	ldr	r3, [fp, #-8]
      d4:	ldr	r3, [r3, #28]
      d8:	cmp	r3, #0
      dc:	beq	f0 <ingest_info_cleanup+0xf0>
      e0:	ldr	r3, [fp, #-8]
      e4:	ldr	r3, [r3, #28]
      e8:	mov	r0, r3
      ec:	bl	0 <coda_dynamic_type_delete>
      f0:	ldr	r3, [fp, #-8]
      f4:	ldr	r3, [r3, #32]
      f8:	cmp	r3, #0
      fc:	beq	110 <ingest_info_cleanup+0x110>
     100:	ldr	r3, [fp, #-8]
     104:	ldr	r3, [r3, #32]
     108:	mov	r0, r3
     10c:	bl	0 <coda_dynamic_type_delete>
     110:	ldr	r3, [fp, #-8]
     114:	ldr	r3, [r3, #36]	; 0x24
     118:	cmp	r3, #0
     11c:	beq	130 <ingest_info_cleanup+0x130>
     120:	ldr	r3, [fp, #-8]
     124:	ldr	r3, [r3, #36]	; 0x24
     128:	mov	r0, r3
     12c:	bl	0 <coda_dynamic_type_delete>
     130:	nop			; (mov r0, r0)
     134:	sub	sp, fp, #4
     138:	pop	{fp, pc}

0000013c <ingest_info_init>:
     13c:	push	{fp}		; (str fp, [sp, #-4]!)
     140:	add	fp, sp, #0
     144:	sub	sp, sp, #12
     148:	str	r0, [fp, #-8]
     14c:	ldr	r3, [fp, #-8]
     150:	mov	r2, #0
     154:	str	r2, [r3]
     158:	ldr	r3, [fp, #-8]
     15c:	mov	r2, #0
     160:	str	r2, [r3, #8]
     164:	ldr	r3, [fp, #-8]
     168:	mov	r2, #0
     16c:	str	r2, [r3, #12]
     170:	ldr	r3, [fp, #-8]
     174:	mov	r2, #0
     178:	str	r2, [r3, #16]
     17c:	ldr	r3, [fp, #-8]
     180:	mov	r2, #0
     184:	str	r2, [r3, #20]
     188:	ldr	r3, [fp, #-8]
     18c:	mov	r2, #0
     190:	str	r2, [r3, #24]
     194:	ldr	r3, [fp, #-8]
     198:	mov	r2, #0
     19c:	str	r2, [r3, #28]
     1a0:	ldr	r3, [fp, #-8]
     1a4:	mov	r2, #0
     1a8:	str	r2, [r3, #32]
     1ac:	ldr	r3, [fp, #-8]
     1b0:	mov	r2, #0
     1b4:	str	r2, [r3, #36]	; 0x24
     1b8:	ldr	r3, [fp, #-8]
     1bc:	mov	r2, #0
     1c0:	str	r2, [r3, #40]	; 0x28
     1c4:	ldr	r3, [fp, #-8]
     1c8:	mov	r2, #0
     1cc:	str	r2, [r3, #48]	; 0x30
     1d0:	ldr	r3, [fp, #-8]
     1d4:	mov	r2, #0
     1d8:	str	r2, [r3, #52]	; 0x34
     1dc:	nop			; (mov r0, r0)
     1e0:	add	sp, fp, #0
     1e4:	pop	{fp}		; (ldr fp, [sp], #4)
     1e8:	bx	lr

000001ec <sp3_init>:
     1ec:	push	{r4, fp, lr}
     1f0:	add	fp, sp, #8
     1f4:	sub	sp, sp, #28
     1f8:	bl	0 <__aeabi_read_tp>
     1fc:	mov	r2, r0
     200:	ldr	r3, [pc, #248]	; 300 <sp3_init+0x114>
     204:	ldr	r3, [r2, r3]
     208:	cmp	r3, #0
     20c:	beq	218 <sp3_init+0x2c>
     210:	mov	r3, #0
     214:	b	4818 <sp3_init+0x462c>
     218:	mov	r3, #1
     21c:	str	r3, [fp, #-20]	; 0xffffffec
     220:	mov	r0, #300	; 0x12c
     224:	bl	0 <malloc>
     228:	mov	r3, r0
     22c:	mov	r1, r3
     230:	bl	0 <__aeabi_read_tp>
     234:	mov	r2, r0
     238:	ldr	r3, [pc, #192]	; 300 <sp3_init+0x114>
     23c:	str	r1, [r2, r3]
     240:	bl	0 <__aeabi_read_tp>
     244:	mov	r2, r0
     248:	ldr	r3, [pc, #176]	; 300 <sp3_init+0x114>
     24c:	ldr	r3, [r2, r3]
     250:	cmp	r3, #0
     254:	bne	27c <sp3_init+0x90>
     258:	mov	r3, #230	; 0xe6
     25c:	str	r3, [sp]
     260:	ldr	r3, [pc, #32]	; 288 <sp3_init+0x9c>
     264:	mov	r2, #300	; 0x12c
     268:	ldr	r1, [pc, #28]	; 28c <sp3_init+0xa0>
     26c:	mvn	r0, #0
     270:	bl	0 <coda_set_error>
     274:	mvn	r3, #0
     278:	b	4818 <sp3_init+0x462c>
     27c:	mov	r3, #0
     280:	str	r3, [fp, #-16]
     284:	b	334 <sp3_init+0x148>
     288:	.word	0x00000000
     28c:	.word	0x00000048
     290:	.word	0x00000080
     294:	.word	0x00000180
     298:	.word	0x0000018c
     29c:	.word	0x000001a0
     2a0:	.word	0x000001ac
     2a4:	.word	0x000001c0
     2a8:	.word	0x000001cc
     2ac:	.word	0x000001d4
     2b0:	.word	0x000001e0
     2b4:	.word	0x000001f0
     2b8:	.word	0x00000200
     2bc:	.word	0x0000021c
     2c0:	.word	0x0000022c
     2c4:	.word	0x00000244
     2c8:	.word	0x00000254
     2cc:	.word	0x00000268
     2d0:	.word	0x00000274
     2d4:	.word	0x00000280
     2d8:	.word	0x000002a8
     2dc:	.word	0x00000130
     2e0:	.word	0x000002d4
     2e4:	.word	0x000002e0
     2e8:	.word	0x000002ec
     2ec:	.word	0x00000300
     2f0:	.word	0x00000310
     2f4:	.word	0x000002fc
     2f8:	.word	0x00000320
     2fc:	.word	0x00000328
     300:	.word	0x00000000
     304:	bl	0 <__aeabi_read_tp>
     308:	mov	r2, r0
     30c:	ldr	r3, [pc, #-20]	; 300 <sp3_init+0x114>
     310:	ldr	r2, [r2, r3]
     314:	ldr	r3, [fp, #-16]
     318:	lsl	r3, r3, #2
     31c:	add	r3, r2, r3
     320:	mov	r2, #0
     324:	str	r2, [r3]
     328:	ldr	r3, [fp, #-16]
     32c:	add	r3, r3, #1
     330:	str	r3, [fp, #-16]
     334:	ldr	r3, [fp, #-16]
     338:	cmp	r3, #74	; 0x4a
     33c:	ble	304 <sp3_init+0x118>
     340:	bl	0 <__aeabi_read_tp>
     344:	mov	r2, r0
     348:	ldr	r3, [pc, #-80]	; 300 <sp3_init+0x114>
     34c:	ldr	r4, [r2, r3]
     350:	mov	r0, #9
     354:	bl	0 <coda_type_text_new>
     358:	mov	r3, r0
     35c:	str	r3, [r4]
     360:	bl	0 <__aeabi_read_tp>
     364:	mov	r2, r0
     368:	ldr	r3, [pc, #-112]	; 300 <sp3_init+0x114>
     36c:	ldr	r3, [r2, r3]
     370:	ldr	r1, [r3]
     374:	mov	r2, #1
     378:	mov	r3, #0
     37c:	mov	r0, r1
     380:	bl	0 <coda_type_set_byte_size>
     384:	bl	0 <__aeabi_read_tp>
     388:	mov	r2, r0
     38c:	ldr	r3, [pc, #-148]	; 300 <sp3_init+0x114>
     390:	ldr	r3, [r2, r3]
     394:	ldr	r3, [r3]
     398:	ldr	r1, [pc, #-272]	; 290 <sp3_init+0xa4>
     39c:	mov	r0, r3
     3a0:	bl	0 <coda_type_set_description>
     3a4:	bl	0 <__aeabi_read_tp>
     3a8:	mov	r2, r0
     3ac:	ldr	r3, [pc, #-180]	; 300 <sp3_init+0x114>
     3b0:	ldr	r3, [r2, r3]
     3b4:	add	r4, r3, #4
     3b8:	mov	r0, #9
     3bc:	bl	0 <coda_type_text_new>
     3c0:	mov	r3, r0
     3c4:	str	r3, [r4]
     3c8:	mov	r3, #0
     3cc:	str	r3, [fp, #-28]	; 0xffffffe4
     3d0:	sub	r3, fp, #28
     3d4:	mov	r1, r3
     3d8:	ldr	r0, [pc, #-260]	; 2dc <sp3_init+0xf0>
     3dc:	bl	0 <coda_expression_from_string>
     3e0:	bl	0 <__aeabi_read_tp>
     3e4:	mov	r2, r0
     3e8:	ldr	r3, [pc, #-240]	; 300 <sp3_init+0x114>
     3ec:	ldr	r3, [r2, r3]
     3f0:	add	r4, r3, #8
     3f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     3f8:	mov	r1, r3
     3fc:	mov	r0, #9
     400:	bl	0 <coda_type_time_new>
     404:	mov	r3, r0
     408:	str	r3, [r4]
     40c:	bl	0 <__aeabi_read_tp>
     410:	mov	r2, r0
     414:	ldr	r3, [pc, #-284]	; 300 <sp3_init+0x114>
     418:	ldr	r3, [r2, r3]
     41c:	add	r3, r3, #8
     420:	ldr	r2, [r3]
     424:	bl	0 <__aeabi_read_tp>
     428:	mov	r1, r0
     42c:	ldr	r3, [pc, #-308]	; 300 <sp3_init+0x114>
     430:	ldr	r3, [r1, r3]
     434:	add	r3, r3, #4
     438:	ldr	r3, [r3]
     43c:	mov	r1, r3
     440:	mov	r0, r2
     444:	bl	0 <coda_type_time_set_base_type>
     448:	bl	0 <__aeabi_read_tp>
     44c:	mov	r2, r0
     450:	ldr	r3, [pc, #-344]	; 300 <sp3_init+0x114>
     454:	ldr	r3, [r2, r3]
     458:	add	r3, r3, #8
     45c:	ldr	r3, [r3]
     460:	ldr	r1, [pc, #-468]	; 294 <sp3_init+0xa8>
     464:	mov	r0, r3
     468:	bl	0 <coda_type_set_description>
     46c:	bl	0 <__aeabi_read_tp>
     470:	mov	r2, r0
     474:	ldr	r3, [pc, #-380]	; 300 <sp3_init+0x114>
     478:	ldr	r3, [r2, r3]
     47c:	add	r4, r3, #12
     480:	mov	r1, #2
     484:	mov	r0, #9
     488:	bl	0 <coda_type_number_new>
     48c:	mov	r3, r0
     490:	str	r3, [r4]
     494:	bl	0 <__aeabi_read_tp>
     498:	mov	r2, r0
     49c:	ldr	r3, [pc, #-420]	; 300 <sp3_init+0x114>
     4a0:	ldr	r3, [r2, r3]
     4a4:	add	r3, r3, #12
     4a8:	ldr	r3, [r3]
     4ac:	ldr	r1, [fp, #-20]	; 0xffffffec
     4b0:	mov	r0, r3
     4b4:	bl	0 <coda_type_number_set_endianness>
     4b8:	bl	0 <__aeabi_read_tp>
     4bc:	mov	r2, r0
     4c0:	ldr	r3, [pc, #-456]	; 300 <sp3_init+0x114>
     4c4:	ldr	r3, [r2, r3]
     4c8:	add	r3, r3, #12
     4cc:	ldr	r3, [r3]
     4d0:	mov	r1, #4
     4d4:	mov	r0, r3
     4d8:	bl	0 <coda_type_set_read_type>
     4dc:	bl	0 <__aeabi_read_tp>
     4e0:	mov	r2, r0
     4e4:	ldr	r3, [pc, #-492]	; 300 <sp3_init+0x114>
     4e8:	ldr	r3, [r2, r3]
     4ec:	add	r3, r3, #12
     4f0:	ldr	r1, [r3]
     4f4:	mov	r2, #32
     4f8:	mov	r3, #0
     4fc:	mov	r0, r1
     500:	bl	0 <coda_type_set_bit_size>
     504:	bl	0 <__aeabi_read_tp>
     508:	mov	r2, r0
     50c:	ldr	r3, [pc, #-532]	; 300 <sp3_init+0x114>
     510:	ldr	r3, [r2, r3]
     514:	add	r3, r3, #12
     518:	ldr	r3, [r3]
     51c:	ldr	r1, [pc, #-652]	; 298 <sp3_init+0xac>
     520:	mov	r0, r3
     524:	bl	0 <coda_type_set_description>
     528:	bl	0 <__aeabi_read_tp>
     52c:	mov	r2, r0
     530:	ldr	r3, [pc, #-568]	; 300 <sp3_init+0x114>
     534:	ldr	r3, [r2, r3]
     538:	add	r4, r3, #16
     53c:	mov	r0, #9
     540:	bl	0 <coda_type_text_new>
     544:	mov	r3, r0
     548:	str	r3, [r4]
     54c:	bl	0 <__aeabi_read_tp>
     550:	mov	r2, r0
     554:	ldr	r3, [pc, #-604]	; 300 <sp3_init+0x114>
     558:	ldr	r3, [r2, r3]
     55c:	add	r3, r3, #16
     560:	ldr	r1, [r3]
     564:	mov	r2, #5
     568:	mov	r3, #0
     56c:	mov	r0, r1
     570:	bl	0 <coda_type_set_byte_size>
     574:	bl	0 <__aeabi_read_tp>
     578:	mov	r2, r0
     57c:	ldr	r3, [pc, #-644]	; 300 <sp3_init+0x114>
     580:	ldr	r3, [r2, r3]
     584:	add	r3, r3, #16
     588:	ldr	r3, [r3]
     58c:	ldr	r1, [pc, #-760]	; 29c <sp3_init+0xb0>
     590:	mov	r0, r3
     594:	bl	0 <coda_type_set_description>
     598:	bl	0 <__aeabi_read_tp>
     59c:	mov	r2, r0
     5a0:	ldr	r3, [pc, #-680]	; 300 <sp3_init+0x114>
     5a4:	ldr	r3, [r2, r3]
     5a8:	add	r4, r3, #20
     5ac:	mov	r0, #9
     5b0:	bl	0 <coda_type_text_new>
     5b4:	mov	r3, r0
     5b8:	str	r3, [r4]
     5bc:	bl	0 <__aeabi_read_tp>
     5c0:	mov	r2, r0
     5c4:	ldr	r3, [pc, #-716]	; 300 <sp3_init+0x114>
     5c8:	ldr	r3, [r2, r3]
     5cc:	add	r3, r3, #20
     5d0:	ldr	r1, [r3]
     5d4:	mov	r2, #5
     5d8:	mov	r3, #0
     5dc:	mov	r0, r1
     5e0:	bl	0 <coda_type_set_byte_size>
     5e4:	bl	0 <__aeabi_read_tp>
     5e8:	mov	r2, r0
     5ec:	ldr	r3, [pc, #-756]	; 300 <sp3_init+0x114>
     5f0:	ldr	r3, [r2, r3]
     5f4:	add	r3, r3, #20
     5f8:	ldr	r3, [r3]
     5fc:	ldr	r1, [pc, #-868]	; 2a0 <sp3_init+0xb4>
     600:	mov	r0, r3
     604:	bl	0 <coda_type_set_description>
     608:	bl	0 <__aeabi_read_tp>
     60c:	mov	r2, r0
     610:	ldr	r3, [pc, #-792]	; 300 <sp3_init+0x114>
     614:	ldr	r3, [r2, r3]
     618:	add	r4, r3, #24
     61c:	mov	r0, #9
     620:	bl	0 <coda_type_text_new>
     624:	mov	r3, r0
     628:	str	r3, [r4]
     62c:	bl	0 <__aeabi_read_tp>
     630:	mov	r2, r0
     634:	ldr	r3, [pc, #-828]	; 300 <sp3_init+0x114>
     638:	ldr	r3, [r2, r3]
     63c:	add	r3, r3, #24
     640:	ldr	r1, [r3]
     644:	mov	r2, #3
     648:	mov	r3, #0
     64c:	mov	r0, r1
     650:	bl	0 <coda_type_set_byte_size>
     654:	bl	0 <__aeabi_read_tp>
     658:	mov	r2, r0
     65c:	ldr	r3, [pc, #-868]	; 300 <sp3_init+0x114>
     660:	ldr	r3, [r2, r3]
     664:	add	r3, r3, #24
     668:	ldr	r3, [r3]
     66c:	ldr	r1, [pc, #-976]	; 2a4 <sp3_init+0xb8>
     670:	mov	r0, r3
     674:	bl	0 <coda_type_set_description>
     678:	bl	0 <__aeabi_read_tp>
     67c:	mov	r2, r0
     680:	ldr	r3, [pc, #-904]	; 300 <sp3_init+0x114>
     684:	ldr	r3, [r2, r3]
     688:	add	r4, r3, #28
     68c:	mov	r0, #9
     690:	bl	0 <coda_type_text_new>
     694:	mov	r3, r0
     698:	str	r3, [r4]
     69c:	bl	0 <__aeabi_read_tp>
     6a0:	mov	r2, r0
     6a4:	ldr	r3, [pc, #-940]	; 300 <sp3_init+0x114>
     6a8:	ldr	r3, [r2, r3]
     6ac:	add	r3, r3, #28
     6b0:	ldr	r1, [r3]
     6b4:	mov	r2, #4
     6b8:	mov	r3, #0
     6bc:	mov	r0, r1
     6c0:	bl	0 <coda_type_set_byte_size>
     6c4:	bl	0 <__aeabi_read_tp>
     6c8:	mov	r2, r0
     6cc:	ldr	r3, [pc, #-980]	; 300 <sp3_init+0x114>
     6d0:	ldr	r3, [r2, r3]
     6d4:	add	r3, r3, #28
     6d8:	ldr	r3, [r3]
     6dc:	ldr	r1, [pc, #-1084]	; 2a8 <sp3_init+0xbc>
     6e0:	mov	r0, r3
     6e4:	bl	0 <coda_type_set_description>
     6e8:	bl	0 <__aeabi_read_tp>
     6ec:	mov	r2, r0
     6f0:	ldr	r3, [pc, #-1016]	; 300 <sp3_init+0x114>
     6f4:	ldr	r3, [r2, r3]
     6f8:	add	r4, r3, #32
     6fc:	mov	r1, #2
     700:	mov	r0, #9
     704:	bl	0 <coda_type_number_new>
     708:	mov	r3, r0
     70c:	str	r3, [r4]
     710:	bl	0 <__aeabi_read_tp>
     714:	mov	r2, r0
     718:	ldr	r3, [pc, #-1056]	; 300 <sp3_init+0x114>
     71c:	ldr	r3, [r2, r3]
     720:	add	r3, r3, #32
     724:	ldr	r3, [r3]
     728:	ldr	r1, [fp, #-20]	; 0xffffffec
     72c:	mov	r0, r3
     730:	bl	0 <coda_type_number_set_endianness>
     734:	bl	0 <__aeabi_read_tp>
     738:	mov	r2, r0
     73c:	ldr	r3, [pc, #-1092]	; 300 <sp3_init+0x114>
     740:	ldr	r3, [r2, r3]
     744:	add	r3, r3, #32
     748:	ldr	r3, [r3]
     74c:	mov	r1, #2
     750:	mov	r0, r3
     754:	bl	0 <coda_type_set_read_type>
     758:	bl	0 <__aeabi_read_tp>
     75c:	mov	r2, r0
     760:	ldr	r3, [pc, #-1128]	; 300 <sp3_init+0x114>
     764:	ldr	r3, [r2, r3]
     768:	add	r3, r3, #32
     76c:	ldr	r1, [r3]
     770:	mov	r2, #16
     774:	mov	r3, #0
     778:	mov	r0, r1
     77c:	bl	0 <coda_type_set_bit_size>
     780:	bl	0 <__aeabi_read_tp>
     784:	mov	r2, r0
     788:	ldr	r3, [pc, #-1168]	; 300 <sp3_init+0x114>
     78c:	ldr	r3, [r2, r3]
     790:	add	r3, r3, #32
     794:	ldr	r3, [r3]
     798:	ldr	r1, [pc, #-1268]	; 2ac <sp3_init+0xc0>
     79c:	mov	r0, r3
     7a0:	bl	0 <coda_type_set_description>
     7a4:	bl	0 <__aeabi_read_tp>
     7a8:	mov	r2, r0
     7ac:	ldr	r3, [pc, #-1204]	; 300 <sp3_init+0x114>
     7b0:	ldr	r3, [r2, r3]
     7b4:	add	r4, r3, #36	; 0x24
     7b8:	mov	r1, #3
     7bc:	mov	r0, #9
     7c0:	bl	0 <coda_type_number_new>
     7c4:	mov	r3, r0
     7c8:	str	r3, [r4]
     7cc:	bl	0 <__aeabi_read_tp>
     7d0:	mov	r2, r0
     7d4:	ldr	r3, [pc, #-1244]	; 300 <sp3_init+0x114>
     7d8:	ldr	r3, [r2, r3]
     7dc:	add	r3, r3, #36	; 0x24
     7e0:	ldr	r3, [r3]
     7e4:	ldr	r1, [fp, #-20]	; 0xffffffec
     7e8:	mov	r0, r3
     7ec:	bl	0 <coda_type_number_set_endianness>
     7f0:	bl	0 <__aeabi_read_tp>
     7f4:	mov	r2, r0
     7f8:	ldr	r3, [pc, #-1280]	; 300 <sp3_init+0x114>
     7fc:	ldr	r3, [r2, r3]
     800:	add	r3, r3, #36	; 0x24
     804:	ldr	r1, [r3]
     808:	mov	r2, #64	; 0x40
     80c:	mov	r3, #0
     810:	mov	r0, r1
     814:	bl	0 <coda_type_set_bit_size>
     818:	bl	0 <__aeabi_read_tp>
     81c:	mov	r2, r0
     820:	ldr	r3, [pc, #-1320]	; 300 <sp3_init+0x114>
     824:	ldr	r3, [r2, r3]
     828:	add	r3, r3, #36	; 0x24
     82c:	ldr	r3, [r3]
     830:	ldr	r1, [pc, #-1416]	; 2b0 <sp3_init+0xc4>
     834:	mov	r0, r3
     838:	bl	0 <coda_type_set_description>
     83c:	bl	0 <__aeabi_read_tp>
     840:	mov	r2, r0
     844:	ldr	r3, [pc, #-1356]	; 300 <sp3_init+0x114>
     848:	ldr	r3, [r2, r3]
     84c:	add	r4, r3, #40	; 0x28
     850:	mov	r1, #3
     854:	mov	r0, #9
     858:	bl	0 <coda_type_number_new>
     85c:	mov	r3, r0
     860:	str	r3, [r4]
     864:	bl	0 <__aeabi_read_tp>
     868:	mov	r2, r0
     86c:	ldr	r3, [pc, #-1396]	; 300 <sp3_init+0x114>
     870:	ldr	r3, [r2, r3]
     874:	add	r3, r3, #40	; 0x28
     878:	ldr	r3, [r3]
     87c:	ldr	r1, [fp, #-20]	; 0xffffffec
     880:	mov	r0, r3
     884:	bl	0 <coda_type_number_set_endianness>
     888:	bl	0 <__aeabi_read_tp>
     88c:	mov	r2, r0
     890:	ldr	r3, [pc, #-1432]	; 300 <sp3_init+0x114>
     894:	ldr	r3, [r2, r3]
     898:	add	r3, r3, #40	; 0x28
     89c:	ldr	r1, [r3]
     8a0:	mov	r2, #64	; 0x40
     8a4:	mov	r3, #0
     8a8:	mov	r0, r1
     8ac:	bl	0 <coda_type_set_bit_size>
     8b0:	bl	0 <__aeabi_read_tp>
     8b4:	mov	r2, r0
     8b8:	ldr	r3, [pc, #-1472]	; 300 <sp3_init+0x114>
     8bc:	ldr	r3, [r2, r3]
     8c0:	add	r3, r3, #40	; 0x28
     8c4:	ldr	r3, [r3]
     8c8:	ldr	r1, [pc, #-1564]	; 2b4 <sp3_init+0xc8>
     8cc:	mov	r0, r3
     8d0:	bl	0 <coda_type_set_description>
     8d4:	bl	0 <__aeabi_read_tp>
     8d8:	mov	r2, r0
     8dc:	ldr	r3, [pc, #-1508]	; 300 <sp3_init+0x114>
     8e0:	ldr	r3, [r2, r3]
     8e4:	add	r4, r3, #44	; 0x2c
     8e8:	mov	r1, #2
     8ec:	mov	r0, #9
     8f0:	bl	0 <coda_type_number_new>
     8f4:	mov	r3, r0
     8f8:	str	r3, [r4]
     8fc:	bl	0 <__aeabi_read_tp>
     900:	mov	r2, r0
     904:	ldr	r3, [pc, #-1548]	; 300 <sp3_init+0x114>
     908:	ldr	r3, [r2, r3]
     90c:	add	r3, r3, #44	; 0x2c
     910:	ldr	r3, [r3]
     914:	ldr	r1, [fp, #-20]	; 0xffffffec
     918:	mov	r0, r3
     91c:	bl	0 <coda_type_number_set_endianness>
     920:	bl	0 <__aeabi_read_tp>
     924:	mov	r2, r0
     928:	ldr	r3, [pc, #-1584]	; 300 <sp3_init+0x114>
     92c:	ldr	r3, [r2, r3]
     930:	add	r3, r3, #44	; 0x2c
     934:	ldr	r3, [r3]
     938:	mov	r1, #4
     93c:	mov	r0, r3
     940:	bl	0 <coda_type_set_read_type>
     944:	bl	0 <__aeabi_read_tp>
     948:	mov	r2, r0
     94c:	ldr	r3, [pc, #-1620]	; 300 <sp3_init+0x114>
     950:	ldr	r3, [r2, r3]
     954:	add	r3, r3, #44	; 0x2c
     958:	ldr	r1, [r3]
     95c:	mov	r2, #32
     960:	mov	r3, #0
     964:	mov	r0, r1
     968:	bl	0 <coda_type_set_bit_size>
     96c:	bl	0 <__aeabi_read_tp>
     970:	mov	r2, r0
     974:	ldr	r3, [pc, #-1660]	; 300 <sp3_init+0x114>
     978:	ldr	r3, [r2, r3]
     97c:	add	r3, r3, #44	; 0x2c
     980:	ldr	r3, [r3]
     984:	ldr	r1, [pc, #-1748]	; 2b8 <sp3_init+0xcc>
     988:	mov	r0, r3
     98c:	bl	0 <coda_type_set_description>
     990:	bl	0 <__aeabi_read_tp>
     994:	mov	r2, r0
     998:	ldr	r3, [pc, #-1696]	; 300 <sp3_init+0x114>
     99c:	ldr	r3, [r2, r3]
     9a0:	add	r4, r3, #48	; 0x30
     9a4:	mov	r1, #3
     9a8:	mov	r0, #9
     9ac:	bl	0 <coda_type_number_new>
     9b0:	mov	r3, r0
     9b4:	str	r3, [r4]
     9b8:	bl	0 <__aeabi_read_tp>
     9bc:	mov	r2, r0
     9c0:	ldr	r3, [pc, #-1736]	; 300 <sp3_init+0x114>
     9c4:	ldr	r3, [r2, r3]
     9c8:	add	r3, r3, #48	; 0x30
     9cc:	ldr	r3, [r3]
     9d0:	ldr	r1, [fp, #-20]	; 0xffffffec
     9d4:	mov	r0, r3
     9d8:	bl	0 <coda_type_number_set_endianness>
     9dc:	bl	0 <__aeabi_read_tp>
     9e0:	mov	r2, r0
     9e4:	ldr	r3, [pc, #-1772]	; 300 <sp3_init+0x114>
     9e8:	ldr	r3, [r2, r3]
     9ec:	add	r3, r3, #48	; 0x30
     9f0:	ldr	r1, [r3]
     9f4:	mov	r2, #64	; 0x40
     9f8:	mov	r3, #0
     9fc:	mov	r0, r1
     a00:	bl	0 <coda_type_set_bit_size>
     a04:	bl	0 <__aeabi_read_tp>
     a08:	mov	r2, r0
     a0c:	ldr	r3, [pc, #-1812]	; 300 <sp3_init+0x114>
     a10:	ldr	r3, [r2, r3]
     a14:	add	r3, r3, #48	; 0x30
     a18:	ldr	r3, [r3]
     a1c:	ldr	r1, [pc, #-1896]	; 2bc <sp3_init+0xd0>
     a20:	mov	r0, r3
     a24:	bl	0 <coda_type_set_description>
     a28:	bl	0 <__aeabi_read_tp>
     a2c:	mov	r2, r0
     a30:	ldr	r3, [pc, #-1848]	; 300 <sp3_init+0x114>
     a34:	ldr	r3, [r2, r3]
     a38:	add	r4, r3, #52	; 0x34
     a3c:	mov	r1, #2
     a40:	mov	r0, #9
     a44:	bl	0 <coda_type_number_new>
     a48:	mov	r3, r0
     a4c:	str	r3, [r4]
     a50:	bl	0 <__aeabi_read_tp>
     a54:	mov	r2, r0
     a58:	ldr	r3, [pc, #-1888]	; 300 <sp3_init+0x114>
     a5c:	ldr	r3, [r2, r3]
     a60:	add	r3, r3, #52	; 0x34
     a64:	ldr	r3, [r3]
     a68:	ldr	r1, [fp, #-20]	; 0xffffffec
     a6c:	mov	r0, r3
     a70:	bl	0 <coda_type_number_set_endianness>
     a74:	bl	0 <__aeabi_read_tp>
     a78:	mov	r2, r0
     a7c:	ldr	r3, [pc, #-1924]	; 300 <sp3_init+0x114>
     a80:	ldr	r3, [r2, r3]
     a84:	add	r3, r3, #52	; 0x34
     a88:	ldr	r3, [r3]
     a8c:	mov	r1, #1
     a90:	mov	r0, r3
     a94:	bl	0 <coda_type_set_read_type>
     a98:	bl	0 <__aeabi_read_tp>
     a9c:	mov	r2, r0
     aa0:	ldr	r3, [pc, #-1960]	; 300 <sp3_init+0x114>
     aa4:	ldr	r3, [r2, r3]
     aa8:	add	r3, r3, #52	; 0x34
     aac:	ldr	r1, [r3]
     ab0:	mov	r2, #8
     ab4:	mov	r3, #0
     ab8:	mov	r0, r1
     abc:	bl	0 <coda_type_set_bit_size>
     ac0:	bl	0 <__aeabi_read_tp>
     ac4:	mov	r2, r0
     ac8:	ldr	r3, [pc, #-2000]	; 300 <sp3_init+0x114>
     acc:	ldr	r3, [r2, r3]
     ad0:	add	r3, r3, #52	; 0x34
     ad4:	ldr	r3, [r3]
     ad8:	ldr	r1, [pc, #-2080]	; 2c0 <sp3_init+0xd4>
     adc:	mov	r0, r3
     ae0:	bl	0 <coda_type_set_description>
     ae4:	bl	0 <__aeabi_read_tp>
     ae8:	mov	r2, r0
     aec:	ldr	r3, [pc, #-2036]	; 300 <sp3_init+0x114>
     af0:	ldr	r3, [r2, r3]
     af4:	add	r4, r3, #56	; 0x38
     af8:	mov	r0, #9
     afc:	bl	0 <coda_type_text_new>
     b00:	mov	r3, r0
     b04:	str	r3, [r4]
     b08:	bl	0 <__aeabi_read_tp>
     b0c:	mov	r2, r0
     b10:	ldr	r3, [pc, #-2072]	; 300 <sp3_init+0x114>
     b14:	ldr	r3, [r2, r3]
     b18:	add	r3, r3, #56	; 0x38
     b1c:	ldr	r1, [r3]
     b20:	mov	r2, #3
     b24:	mov	r3, #0
     b28:	mov	r0, r1
     b2c:	bl	0 <coda_type_set_byte_size>
     b30:	bl	0 <__aeabi_read_tp>
     b34:	mov	r2, r0
     b38:	ldr	r3, [pc, #-2112]	; 300 <sp3_init+0x114>
     b3c:	ldr	r3, [r2, r3]
     b40:	add	r3, r3, #56	; 0x38
     b44:	ldr	r3, [r3]
     b48:	ldr	r1, [pc, #-2188]	; 2c4 <sp3_init+0xd8>
     b4c:	mov	r0, r3
     b50:	bl	0 <coda_type_set_description>
     b54:	bl	0 <__aeabi_read_tp>
     b58:	mov	r2, r0
     b5c:	ldr	r3, [pc, #-2148]	; 300 <sp3_init+0x114>
     b60:	ldr	r3, [r2, r3]
     b64:	add	r4, r3, #64	; 0x40
     b68:	mov	r1, #2
     b6c:	mov	r0, #9
     b70:	bl	0 <coda_type_number_new>
     b74:	mov	r3, r0
     b78:	str	r3, [r4]
     b7c:	bl	0 <__aeabi_read_tp>
     b80:	mov	r2, r0
     b84:	ldr	r3, [pc, #-2188]	; 300 <sp3_init+0x114>
     b88:	ldr	r3, [r2, r3]
     b8c:	add	r3, r3, #64	; 0x40
     b90:	ldr	r3, [r3]
     b94:	ldr	r1, [fp, #-20]	; 0xffffffec
     b98:	mov	r0, r3
     b9c:	bl	0 <coda_type_number_set_endianness>
     ba0:	bl	0 <__aeabi_read_tp>
     ba4:	mov	r2, r0
     ba8:	ldr	r3, [pc, #-2224]	; 300 <sp3_init+0x114>
     bac:	ldr	r3, [r2, r3]
     bb0:	add	r3, r3, #64	; 0x40
     bb4:	ldr	r3, [r3]
     bb8:	mov	r1, #2
     bbc:	mov	r0, r3
     bc0:	bl	0 <coda_type_set_read_type>
     bc4:	bl	0 <__aeabi_read_tp>
     bc8:	mov	r2, r0
     bcc:	ldr	r3, [pc, #-2260]	; 300 <sp3_init+0x114>
     bd0:	ldr	r3, [r2, r3]
     bd4:	add	r3, r3, #64	; 0x40
     bd8:	ldr	r1, [r3]
     bdc:	mov	r2, #16
     be0:	mov	r3, #0
     be4:	mov	r0, r1
     be8:	bl	0 <coda_type_set_bit_size>
     bec:	bl	0 <__aeabi_read_tp>
     bf0:	mov	r2, r0
     bf4:	ldr	r3, [pc, #-2300]	; 300 <sp3_init+0x114>
     bf8:	ldr	r3, [r2, r3]
     bfc:	add	r3, r3, #64	; 0x40
     c00:	ldr	r3, [r3]
     c04:	ldr	r1, [pc, #-2372]	; 2c8 <sp3_init+0xdc>
     c08:	mov	r0, r3
     c0c:	bl	0 <coda_type_set_description>
     c10:	bl	0 <__aeabi_read_tp>
     c14:	mov	r2, r0
     c18:	ldr	r3, [pc, #-2336]	; 300 <sp3_init+0x114>
     c1c:	ldr	r3, [r2, r3]
     c20:	add	r4, r3, #72	; 0x48
     c24:	mov	r0, #9
     c28:	bl	0 <coda_type_text_new>
     c2c:	mov	r3, r0
     c30:	str	r3, [r4]
     c34:	bl	0 <__aeabi_read_tp>
     c38:	mov	r2, r0
     c3c:	ldr	r3, [pc, #-2372]	; 300 <sp3_init+0x114>
     c40:	ldr	r3, [r2, r3]
     c44:	add	r3, r3, #72	; 0x48
     c48:	ldr	r1, [r3]
     c4c:	mov	r2, #2
     c50:	mov	r3, #0
     c54:	mov	r0, r1
     c58:	bl	0 <coda_type_set_byte_size>
     c5c:	bl	0 <__aeabi_read_tp>
     c60:	mov	r2, r0
     c64:	ldr	r3, [pc, #-2412]	; 300 <sp3_init+0x114>
     c68:	ldr	r3, [r2, r3]
     c6c:	add	r3, r3, #72	; 0x48
     c70:	ldr	r3, [r3]
     c74:	ldr	r1, [pc, #-2480]	; 2cc <sp3_init+0xe0>
     c78:	mov	r0, r3
     c7c:	bl	0 <coda_type_set_description>
     c80:	bl	0 <__aeabi_read_tp>
     c84:	mov	r2, r0
     c88:	ldr	r3, [pc, #-2448]	; 300 <sp3_init+0x114>
     c8c:	ldr	r3, [r2, r3]
     c90:	add	r4, r3, #76	; 0x4c
     c94:	mov	r0, #9
     c98:	bl	0 <coda_type_text_new>
     c9c:	mov	r3, r0
     ca0:	str	r3, [r4]
     ca4:	bl	0 <__aeabi_read_tp>
     ca8:	mov	r2, r0
     cac:	ldr	r3, [pc, #-2484]	; 300 <sp3_init+0x114>
     cb0:	ldr	r3, [r2, r3]
     cb4:	add	r3, r3, #76	; 0x4c
     cb8:	ldr	r1, [r3]
     cbc:	mov	r2, #3
     cc0:	mov	r3, #0
     cc4:	mov	r0, r1
     cc8:	bl	0 <coda_type_set_byte_size>
     ccc:	bl	0 <__aeabi_read_tp>
     cd0:	mov	r2, r0
     cd4:	ldr	r3, [pc, #-2524]	; 300 <sp3_init+0x114>
     cd8:	ldr	r3, [r2, r3]
     cdc:	add	r3, r3, #76	; 0x4c
     ce0:	ldr	r3, [r3]
     ce4:	ldr	r1, [pc, #-2588]	; 2d0 <sp3_init+0xe4>
     ce8:	mov	r0, r3
     cec:	bl	0 <coda_type_set_description>
     cf0:	bl	0 <__aeabi_read_tp>
     cf4:	mov	r2, r0
     cf8:	ldr	r3, [pc, #-2560]	; 300 <sp3_init+0x114>
     cfc:	ldr	r3, [r2, r3]
     d00:	add	r4, r3, #80	; 0x50
     d04:	mov	r1, #3
     d08:	mov	r0, #9
     d0c:	bl	0 <coda_type_number_new>
     d10:	mov	r3, r0
     d14:	str	r3, [r4]
     d18:	bl	0 <__aeabi_read_tp>
     d1c:	mov	r2, r0
     d20:	ldr	r3, [pc, #-2600]	; 300 <sp3_init+0x114>
     d24:	ldr	r3, [r2, r3]
     d28:	add	r3, r3, #80	; 0x50
     d2c:	ldr	r3, [r3]
     d30:	ldr	r1, [fp, #-20]	; 0xffffffec
     d34:	mov	r0, r3
     d38:	bl	0 <coda_type_number_set_endianness>
     d3c:	bl	0 <__aeabi_read_tp>
     d40:	mov	r2, r0
     d44:	ldr	r3, [pc, #-2636]	; 300 <sp3_init+0x114>
     d48:	ldr	r3, [r2, r3]
     d4c:	add	r3, r3, #80	; 0x50
     d50:	ldr	r1, [r3]
     d54:	mov	r2, #64	; 0x40
     d58:	mov	r3, #0
     d5c:	mov	r0, r1
     d60:	bl	0 <coda_type_set_bit_size>
     d64:	bl	0 <__aeabi_read_tp>
     d68:	mov	r2, r0
     d6c:	ldr	r3, [pc, #-2676]	; 300 <sp3_init+0x114>
     d70:	ldr	r3, [r2, r3]
     d74:	add	r3, r3, #80	; 0x50
     d78:	ldr	r3, [r3]
     d7c:	ldr	r1, [pc, #-2736]	; 2d4 <sp3_init+0xe8>
     d80:	mov	r0, r3
     d84:	bl	0 <coda_type_set_description>
     d88:	bl	0 <__aeabi_read_tp>
     d8c:	mov	r2, r0
     d90:	ldr	r3, [pc, #-2712]	; 300 <sp3_init+0x114>
     d94:	ldr	r3, [r2, r3]
     d98:	add	r4, r3, #84	; 0x54
     d9c:	mov	r1, #3
     da0:	mov	r0, #9
     da4:	bl	0 <coda_type_number_new>
     da8:	mov	r3, r0
     dac:	str	r3, [r4]
     db0:	bl	0 <__aeabi_read_tp>
     db4:	mov	r2, r0
     db8:	ldr	r3, [pc, #-2752]	; 300 <sp3_init+0x114>
     dbc:	ldr	r3, [r2, r3]
     dc0:	add	r3, r3, #84	; 0x54
     dc4:	ldr	r3, [r3]
     dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
     dcc:	mov	r0, r3
     dd0:	bl	0 <coda_type_number_set_endianness>
     dd4:	bl	0 <__aeabi_read_tp>
     dd8:	mov	r2, r0
     ddc:	ldr	r3, [pc, #-2788]	; 300 <sp3_init+0x114>
     de0:	ldr	r3, [r2, r3]
     de4:	add	r3, r3, #84	; 0x54
     de8:	ldr	r1, [r3]
     dec:	mov	r2, #64	; 0x40
     df0:	mov	r3, #0
     df4:	mov	r0, r1
     df8:	bl	0 <coda_type_set_bit_size>
     dfc:	bl	0 <__aeabi_read_tp>
     e00:	mov	r2, r0
     e04:	ldr	r3, [pc, #-2828]	; 300 <sp3_init+0x114>
     e08:	ldr	r3, [r2, r3]
     e0c:	add	r3, r3, #84	; 0x54
     e10:	ldr	r3, [r3]
     e14:	ldr	r1, [pc, #-2884]	; 2d8 <sp3_init+0xec>
     e18:	mov	r0, r3
     e1c:	bl	0 <coda_type_set_description>
     e20:	bl	0 <__aeabi_read_tp>
     e24:	mov	r2, r0
     e28:	ldr	r3, [pc, #-2864]	; 300 <sp3_init+0x114>
     e2c:	ldr	r3, [r2, r3]
     e30:	add	r4, r3, #260	; 0x104
     e34:	mov	r0, #9
     e38:	bl	0 <coda_type_text_new>
     e3c:	mov	r3, r0
     e40:	str	r3, [r4]
     e44:	mov	r3, #0
     e48:	str	r3, [fp, #-28]	; 0xffffffe4
     e4c:	sub	r3, fp, #28
     e50:	mov	r1, r3
     e54:	ldr	r0, [pc, #-2944]	; 2dc <sp3_init+0xf0>
     e58:	bl	0 <coda_expression_from_string>
     e5c:	bl	0 <__aeabi_read_tp>
     e60:	mov	r2, r0
     e64:	ldr	r3, [pc, #-2924]	; 300 <sp3_init+0x114>
     e68:	ldr	r3, [r2, r3]
     e6c:	add	r4, r3, #264	; 0x108
     e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e74:	mov	r1, r3
     e78:	mov	r0, #9
     e7c:	bl	0 <coda_type_time_new>
     e80:	mov	r3, r0
     e84:	str	r3, [r4]
     e88:	bl	0 <__aeabi_read_tp>
     e8c:	mov	r2, r0
     e90:	ldr	r3, [pc, #-2968]	; 300 <sp3_init+0x114>
     e94:	ldr	r3, [r2, r3]
     e98:	add	r3, r3, #264	; 0x108
     e9c:	ldr	r2, [r3]
     ea0:	bl	0 <__aeabi_read_tp>
     ea4:	mov	r1, r0
     ea8:	ldr	r3, [pc, #-2992]	; 300 <sp3_init+0x114>
     eac:	ldr	r3, [r1, r3]
     eb0:	add	r3, r3, #260	; 0x104
     eb4:	ldr	r3, [r3]
     eb8:	mov	r1, r3
     ebc:	mov	r0, r2
     ec0:	bl	0 <coda_type_time_set_base_type>
     ec4:	bl	0 <__aeabi_read_tp>
     ec8:	mov	r2, r0
     ecc:	ldr	r3, [pc, #-3028]	; 300 <sp3_init+0x114>
     ed0:	ldr	r3, [r2, r3]
     ed4:	add	r3, r3, #264	; 0x108
     ed8:	ldr	r3, [r3]
     edc:	ldr	r1, [pc, #-3076]	; 2e0 <sp3_init+0xf4>
     ee0:	mov	r0, r3
     ee4:	bl	0 <coda_type_set_description>
     ee8:	bl	0 <__aeabi_read_tp>
     eec:	mov	r2, r0
     ef0:	ldr	r3, [pc, #-3064]	; 300 <sp3_init+0x114>
     ef4:	ldr	r3, [r2, r3]
     ef8:	add	r4, r3, #88	; 0x58
     efc:	mov	r0, #9
     f00:	bl	0 <coda_type_text_new>
     f04:	mov	r3, r0
     f08:	str	r3, [r4]
     f0c:	bl	0 <__aeabi_read_tp>
     f10:	mov	r2, r0
     f14:	ldr	r3, [pc, #-3100]	; 300 <sp3_init+0x114>
     f18:	ldr	r3, [r2, r3]
     f1c:	add	r3, r3, #88	; 0x58
     f20:	ldr	r1, [r3]
     f24:	mov	r2, #3
     f28:	mov	r3, #0
     f2c:	mov	r0, r1
     f30:	bl	0 <coda_type_set_byte_size>
     f34:	bl	0 <__aeabi_read_tp>
     f38:	mov	r2, r0
     f3c:	ldr	r3, [pc, #-3140]	; 300 <sp3_init+0x114>
     f40:	ldr	r3, [r2, r3]
     f44:	add	r3, r3, #88	; 0x58
     f48:	ldr	r3, [r3]
     f4c:	ldr	r1, [pc, #-3184]	; 2e4 <sp3_init+0xf8>
     f50:	mov	r0, r3
     f54:	bl	0 <coda_type_set_description>
     f58:	bl	0 <__aeabi_read_tp>
     f5c:	mov	r2, r0
     f60:	ldr	r3, [pc, #-3176]	; 300 <sp3_init+0x114>
     f64:	ldr	r3, [r2, r3]
     f68:	add	r4, r3, #92	; 0x5c
     f6c:	mov	r1, #3
     f70:	mov	r0, #9
     f74:	bl	0 <coda_type_number_new>
     f78:	mov	r3, r0
     f7c:	str	r3, [r4]
     f80:	bl	0 <__aeabi_read_tp>
     f84:	mov	r2, r0
     f88:	ldr	r3, [pc, #-3216]	; 300 <sp3_init+0x114>
     f8c:	ldr	r3, [r2, r3]
     f90:	add	r3, r3, #92	; 0x5c
     f94:	ldr	r3, [r3]
     f98:	ldr	r1, [fp, #-20]	; 0xffffffec
     f9c:	mov	r0, r3
     fa0:	bl	0 <coda_type_number_set_endianness>
     fa4:	bl	0 <__aeabi_read_tp>
     fa8:	mov	r2, r0
     fac:	ldr	r3, [pc, #-3252]	; 300 <sp3_init+0x114>
     fb0:	ldr	r3, [r2, r3]
     fb4:	add	r3, r3, #92	; 0x5c
     fb8:	ldr	r1, [r3]
     fbc:	mov	r2, #64	; 0x40
     fc0:	mov	r3, #0
     fc4:	mov	r0, r1
     fc8:	bl	0 <coda_type_set_bit_size>
     fcc:	bl	0 <__aeabi_read_tp>
     fd0:	mov	r2, r0
     fd4:	ldr	r3, [pc, #-3292]	; 300 <sp3_init+0x114>
     fd8:	ldr	r3, [r2, r3]
     fdc:	add	r3, r3, #92	; 0x5c
     fe0:	ldr	r3, [r3]
     fe4:	ldr	r1, [pc, #-3332]	; 2e8 <sp3_init+0xfc>
     fe8:	mov	r0, r3
     fec:	bl	0 <coda_type_set_description>
     ff0:	bl	0 <__aeabi_read_tp>
     ff4:	mov	r2, r0
     ff8:	ldr	r3, [pc, #-3328]	; 300 <sp3_init+0x114>
     ffc:	ldr	r3, [r2, r3]
    1000:	add	r3, r3, #92	; 0x5c
    1004:	ldr	r3, [r3]
    1008:	ldr	r1, [pc, #-3356]	; 2f4 <sp3_init+0x108>
    100c:	mov	r0, r3
    1010:	bl	0 <coda_type_number_set_unit>
    1014:	bl	0 <__aeabi_read_tp>
    1018:	mov	r2, r0
    101c:	ldr	r3, [pc, #-3364]	; 300 <sp3_init+0x114>
    1020:	ldr	r3, [r2, r3]
    1024:	add	r4, r3, #96	; 0x60
    1028:	mov	r1, #3
    102c:	mov	r0, #9
    1030:	bl	0 <coda_type_number_new>
    1034:	mov	r3, r0
    1038:	str	r3, [r4]
    103c:	bl	0 <__aeabi_read_tp>
    1040:	mov	r2, r0
    1044:	ldr	r3, [pc, #-3404]	; 300 <sp3_init+0x114>
    1048:	ldr	r3, [r2, r3]
    104c:	add	r3, r3, #96	; 0x60
    1050:	ldr	r3, [r3]
    1054:	ldr	r1, [fp, #-20]	; 0xffffffec
    1058:	mov	r0, r3
    105c:	bl	0 <coda_type_number_set_endianness>
    1060:	bl	0 <__aeabi_read_tp>
    1064:	mov	r2, r0
    1068:	ldr	r3, [pc, #-3440]	; 300 <sp3_init+0x114>
    106c:	ldr	r3, [r2, r3]
    1070:	add	r3, r3, #96	; 0x60
    1074:	ldr	r1, [r3]
    1078:	mov	r2, #64	; 0x40
    107c:	mov	r3, #0
    1080:	mov	r0, r1
    1084:	bl	0 <coda_type_set_bit_size>
    1088:	bl	0 <__aeabi_read_tp>
    108c:	mov	r2, r0
    1090:	ldr	r3, [pc, #-3480]	; 300 <sp3_init+0x114>
    1094:	ldr	r3, [r2, r3]
    1098:	add	r3, r3, #96	; 0x60
    109c:	ldr	r3, [r3]
    10a0:	ldr	r1, [pc, #-3516]	; 2ec <sp3_init+0x100>
    10a4:	mov	r0, r3
    10a8:	bl	0 <coda_type_set_description>
    10ac:	bl	0 <__aeabi_read_tp>
    10b0:	mov	r2, r0
    10b4:	ldr	r3, [pc, #-3516]	; 300 <sp3_init+0x114>
    10b8:	ldr	r3, [r2, r3]
    10bc:	add	r3, r3, #96	; 0x60
    10c0:	ldr	r3, [r3]
    10c4:	ldr	r1, [pc, #-3544]	; 2f4 <sp3_init+0x108>
    10c8:	mov	r0, r3
    10cc:	bl	0 <coda_type_number_set_unit>
    10d0:	bl	0 <__aeabi_read_tp>
    10d4:	mov	r2, r0
    10d8:	ldr	r3, [pc, #-3552]	; 300 <sp3_init+0x114>
    10dc:	ldr	r3, [r2, r3]
    10e0:	add	r4, r3, #100	; 0x64
    10e4:	mov	r1, #3
    10e8:	mov	r0, #9
    10ec:	bl	0 <coda_type_number_new>
    10f0:	mov	r3, r0
    10f4:	str	r3, [r4]
    10f8:	bl	0 <__aeabi_read_tp>
    10fc:	mov	r2, r0
    1100:	ldr	r3, [pc, #-3592]	; 300 <sp3_init+0x114>
    1104:	ldr	r3, [r2, r3]
    1108:	add	r3, r3, #100	; 0x64
    110c:	ldr	r3, [r3]
    1110:	ldr	r1, [fp, #-20]	; 0xffffffec
    1114:	mov	r0, r3
    1118:	bl	0 <coda_type_number_set_endianness>
    111c:	bl	0 <__aeabi_read_tp>
    1120:	mov	r2, r0
    1124:	ldr	r3, [pc, #-3628]	; 300 <sp3_init+0x114>
    1128:	ldr	r3, [r2, r3]
    112c:	add	r3, r3, #100	; 0x64
    1130:	ldr	r1, [r3]
    1134:	mov	r2, #64	; 0x40
    1138:	mov	r3, #0
    113c:	mov	r0, r1
    1140:	bl	0 <coda_type_set_bit_size>
    1144:	bl	0 <__aeabi_read_tp>
    1148:	mov	r2, r0
    114c:	ldr	r3, [pc, #-3668]	; 300 <sp3_init+0x114>
    1150:	ldr	r3, [r2, r3]
    1154:	add	r3, r3, #100	; 0x64
    1158:	ldr	r3, [r3]
    115c:	ldr	r1, [pc, #-3700]	; 2f0 <sp3_init+0x104>
    1160:	mov	r0, r3
    1164:	bl	0 <coda_type_set_description>
    1168:	bl	0 <__aeabi_read_tp>
    116c:	mov	r2, r0
    1170:	ldr	r3, [pc, #-3704]	; 300 <sp3_init+0x114>
    1174:	ldr	r3, [r2, r3]
    1178:	add	r3, r3, #100	; 0x64
    117c:	ldr	r3, [r3]
    1180:	ldr	r1, [pc, #-3732]	; 2f4 <sp3_init+0x108>
    1184:	mov	r0, r3
    1188:	bl	0 <coda_type_number_set_unit>
    118c:	bl	0 <__aeabi_read_tp>
    1190:	mov	r2, r0
    1194:	ldr	r3, [pc, #-3740]	; 300 <sp3_init+0x114>
    1198:	ldr	r3, [r2, r3]
    119c:	add	r4, r3, #104	; 0x68
    11a0:	mov	r1, #3
    11a4:	mov	r0, #9
    11a8:	bl	0 <coda_type_number_new>
    11ac:	mov	r3, r0
    11b0:	str	r3, [r4]
    11b4:	bl	0 <__aeabi_read_tp>
    11b8:	mov	r2, r0
    11bc:	ldr	r3, [pc, #-3780]	; 300 <sp3_init+0x114>
    11c0:	ldr	r3, [r2, r3]
    11c4:	add	r3, r3, #104	; 0x68
    11c8:	ldr	r3, [r3]
    11cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    11d0:	mov	r0, r3
    11d4:	bl	0 <coda_type_number_set_endianness>
    11d8:	bl	0 <__aeabi_read_tp>
    11dc:	mov	r2, r0
    11e0:	ldr	r3, [pc, #-3816]	; 300 <sp3_init+0x114>
    11e4:	ldr	r3, [r2, r3]
    11e8:	add	r3, r3, #104	; 0x68
    11ec:	ldr	r1, [r3]
    11f0:	mov	r2, #64	; 0x40
    11f4:	mov	r3, #0
    11f8:	mov	r0, r1
    11fc:	bl	0 <coda_type_set_bit_size>
    1200:	bl	0 <__aeabi_read_tp>
    1204:	mov	r2, r0
    1208:	ldr	r3, [pc, #-3856]	; 300 <sp3_init+0x114>
    120c:	ldr	r3, [r2, r3]
    1210:	add	r3, r3, #104	; 0x68
    1214:	ldr	r3, [r3]
    1218:	ldr	r1, [pc, #-3880]	; 2f8 <sp3_init+0x10c>
    121c:	mov	r0, r3
    1220:	bl	0 <coda_type_set_description>
    1224:	bl	0 <__aeabi_read_tp>
    1228:	mov	r2, r0
    122c:	ldr	r3, [pc, #-3892]	; 300 <sp3_init+0x114>
    1230:	ldr	r3, [r2, r3]
    1234:	add	r3, r3, #104	; 0x68
    1238:	ldr	r3, [r3]
    123c:	ldr	r1, [pc, #-3912]	; 2fc <sp3_init+0x110>
    1240:	mov	r0, r3
    1244:	bl	0 <coda_type_number_set_unit>
    1248:	bl	0 <__aeabi_read_tp>
    124c:	mov	r2, r0
    1250:	ldr	r3, [pc, #-3928]	; 300 <sp3_init+0x114>
    1254:	ldr	r3, [r2, r3]
    1258:	add	r4, r3, #108	; 0x6c
    125c:	mov	r1, #2
    1260:	mov	r0, #9
    1264:	bl	0 <coda_type_number_new>
    1268:	mov	r3, r0
    126c:	str	r3, [r4]
    1270:	bl	0 <__aeabi_read_tp>
    1274:	mov	r2, r0
    1278:	ldr	r3, [pc, #-3968]	; 300 <sp3_init+0x114>
    127c:	ldr	r3, [r2, r3]
    1280:	add	r3, r3, #108	; 0x6c
    1284:	ldr	r3, [r3]
    1288:	ldr	r1, [fp, #-20]	; 0xffffffec
    128c:	mov	r0, r3
    1290:	bl	0 <coda_type_number_set_endianness>
    1294:	bl	0 <__aeabi_read_tp>
    1298:	mov	r2, r0
    129c:	ldr	r3, [pc, #-4004]	; 300 <sp3_init+0x114>
    12a0:	ldr	r3, [r2, r3]
    12a4:	add	r3, r3, #108	; 0x6c
    12a8:	ldr	r3, [r3]
    12ac:	mov	r1, #0
    12b0:	mov	r0, r3
    12b4:	bl	0 <coda_type_set_read_type>
    12b8:	bl	0 <__aeabi_read_tp>
    12bc:	mov	r2, r0
    12c0:	ldr	r3, [pc, #-4040]	; 300 <sp3_init+0x114>
    12c4:	ldr	r3, [r2, r3]
    12c8:	add	r3, r3, #108	; 0x6c
    12cc:	ldr	r1, [r3]
    12d0:	mov	r2, #8
    12d4:	mov	r3, #0
    12d8:	mov	r0, r1
    12dc:	bl	0 <coda_type_set_bit_size>
    12e0:	bl	0 <__aeabi_read_tp>
    12e4:	mov	r2, r0
    12e8:	ldr	r3, [pc, #-4080]	; 300 <sp3_init+0x114>
    12ec:	ldr	r3, [r2, r3]
    12f0:	add	r3, r3, #108	; 0x6c
    12f4:	ldr	r3, [r3]
    12f8:	ldr	r1, [pc, #4088]	; 22f8 <sp3_init+0x210c>
    12fc:	mov	r0, r3
    1300:	bl	0 <coda_type_set_description>
    1304:	bl	0 <__aeabi_read_tp>
    1308:	mov	r2, r0
    130c:	ldr	r3, [pc, #4072]	; 22fc <sp3_init+0x2110>
    1310:	ldr	r3, [r2, r3]
    1314:	add	r4, r3, #112	; 0x70
    1318:	mov	r1, #2
    131c:	mov	r0, #9
    1320:	bl	0 <coda_type_number_new>
    1324:	mov	r3, r0
    1328:	str	r3, [r4]
    132c:	bl	0 <__aeabi_read_tp>
    1330:	mov	r2, r0
    1334:	ldr	r3, [pc, #4032]	; 22fc <sp3_init+0x2110>
    1338:	ldr	r3, [r2, r3]
    133c:	add	r3, r3, #112	; 0x70
    1340:	ldr	r3, [r3]
    1344:	ldr	r1, [fp, #-20]	; 0xffffffec
    1348:	mov	r0, r3
    134c:	bl	0 <coda_type_number_set_endianness>
    1350:	bl	0 <__aeabi_read_tp>
    1354:	mov	r2, r0
    1358:	ldr	r3, [pc, #3996]	; 22fc <sp3_init+0x2110>
    135c:	ldr	r3, [r2, r3]
    1360:	add	r3, r3, #112	; 0x70
    1364:	ldr	r3, [r3]
    1368:	mov	r1, #0
    136c:	mov	r0, r3
    1370:	bl	0 <coda_type_set_read_type>
    1374:	bl	0 <__aeabi_read_tp>
    1378:	mov	r2, r0
    137c:	ldr	r3, [pc, #3960]	; 22fc <sp3_init+0x2110>
    1380:	ldr	r3, [r2, r3]
    1384:	add	r3, r3, #112	; 0x70
    1388:	ldr	r1, [r3]
    138c:	mov	r2, #8
    1390:	mov	r3, #0
    1394:	mov	r0, r1
    1398:	bl	0 <coda_type_set_bit_size>
    139c:	bl	0 <__aeabi_read_tp>
    13a0:	mov	r2, r0
    13a4:	ldr	r3, [pc, #3920]	; 22fc <sp3_init+0x2110>
    13a8:	ldr	r3, [r2, r3]
    13ac:	add	r3, r3, #112	; 0x70
    13b0:	ldr	r3, [r3]
    13b4:	ldr	r1, [pc, #3908]	; 2300 <sp3_init+0x2114>
    13b8:	mov	r0, r3
    13bc:	bl	0 <coda_type_set_description>
    13c0:	bl	0 <__aeabi_read_tp>
    13c4:	mov	r2, r0
    13c8:	ldr	r3, [pc, #3884]	; 22fc <sp3_init+0x2110>
    13cc:	ldr	r3, [r2, r3]
    13d0:	add	r4, r3, #116	; 0x74
    13d4:	mov	r1, #2
    13d8:	mov	r0, #9
    13dc:	bl	0 <coda_type_number_new>
    13e0:	mov	r3, r0
    13e4:	str	r3, [r4]
    13e8:	bl	0 <__aeabi_read_tp>
    13ec:	mov	r2, r0
    13f0:	ldr	r3, [pc, #3844]	; 22fc <sp3_init+0x2110>
    13f4:	ldr	r3, [r2, r3]
    13f8:	add	r3, r3, #116	; 0x74
    13fc:	ldr	r3, [r3]
    1400:	ldr	r1, [fp, #-20]	; 0xffffffec
    1404:	mov	r0, r3
    1408:	bl	0 <coda_type_number_set_endianness>
    140c:	bl	0 <__aeabi_read_tp>
    1410:	mov	r2, r0
    1414:	ldr	r3, [pc, #3808]	; 22fc <sp3_init+0x2110>
    1418:	ldr	r3, [r2, r3]
    141c:	add	r3, r3, #116	; 0x74
    1420:	ldr	r3, [r3]
    1424:	mov	r1, #0
    1428:	mov	r0, r3
    142c:	bl	0 <coda_type_set_read_type>
    1430:	bl	0 <__aeabi_read_tp>
    1434:	mov	r2, r0
    1438:	ldr	r3, [pc, #3772]	; 22fc <sp3_init+0x2110>
    143c:	ldr	r3, [r2, r3]
    1440:	add	r3, r3, #116	; 0x74
    1444:	ldr	r1, [r3]
    1448:	mov	r2, #8
    144c:	mov	r3, #0
    1450:	mov	r0, r1
    1454:	bl	0 <coda_type_set_bit_size>
    1458:	bl	0 <__aeabi_read_tp>
    145c:	mov	r2, r0
    1460:	ldr	r3, [pc, #3732]	; 22fc <sp3_init+0x2110>
    1464:	ldr	r3, [r2, r3]
    1468:	add	r3, r3, #116	; 0x74
    146c:	ldr	r3, [r3]
    1470:	ldr	r1, [pc, #3724]	; 2304 <sp3_init+0x2118>
    1474:	mov	r0, r3
    1478:	bl	0 <coda_type_set_description>
    147c:	bl	0 <__aeabi_read_tp>
    1480:	mov	r2, r0
    1484:	ldr	r3, [pc, #3696]	; 22fc <sp3_init+0x2110>
    1488:	ldr	r3, [r2, r3]
    148c:	add	r4, r3, #120	; 0x78
    1490:	mov	r1, #2
    1494:	mov	r0, #9
    1498:	bl	0 <coda_type_number_new>
    149c:	mov	r3, r0
    14a0:	str	r3, [r4]
    14a4:	bl	0 <__aeabi_read_tp>
    14a8:	mov	r2, r0
    14ac:	ldr	r3, [pc, #3656]	; 22fc <sp3_init+0x2110>
    14b0:	ldr	r3, [r2, r3]
    14b4:	add	r3, r3, #120	; 0x78
    14b8:	ldr	r3, [r3]
    14bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    14c0:	mov	r0, r3
    14c4:	bl	0 <coda_type_number_set_endianness>
    14c8:	bl	0 <__aeabi_read_tp>
    14cc:	mov	r2, r0
    14d0:	ldr	r3, [pc, #3620]	; 22fc <sp3_init+0x2110>
    14d4:	ldr	r3, [r2, r3]
    14d8:	add	r3, r3, #120	; 0x78
    14dc:	ldr	r3, [r3]
    14e0:	mov	r1, #2
    14e4:	mov	r0, r3
    14e8:	bl	0 <coda_type_set_read_type>
    14ec:	bl	0 <__aeabi_read_tp>
    14f0:	mov	r2, r0
    14f4:	ldr	r3, [pc, #3584]	; 22fc <sp3_init+0x2110>
    14f8:	ldr	r3, [r2, r3]
    14fc:	add	r3, r3, #120	; 0x78
    1500:	ldr	r1, [r3]
    1504:	mov	r2, #16
    1508:	mov	r3, #0
    150c:	mov	r0, r1
    1510:	bl	0 <coda_type_set_bit_size>
    1514:	bl	0 <__aeabi_read_tp>
    1518:	mov	r2, r0
    151c:	ldr	r3, [pc, #3544]	; 22fc <sp3_init+0x2110>
    1520:	ldr	r3, [r2, r3]
    1524:	add	r3, r3, #120	; 0x78
    1528:	ldr	r3, [r3]
    152c:	ldr	r1, [pc, #3540]	; 2308 <sp3_init+0x211c>
    1530:	mov	r0, r3
    1534:	bl	0 <coda_type_set_description>
    1538:	bl	0 <__aeabi_read_tp>
    153c:	mov	r2, r0
    1540:	ldr	r3, [pc, #3508]	; 22fc <sp3_init+0x2110>
    1544:	ldr	r3, [r2, r3]
    1548:	add	r4, r3, #124	; 0x7c
    154c:	mov	r0, #9
    1550:	bl	0 <coda_type_text_new>
    1554:	mov	r3, r0
    1558:	str	r3, [r4]
    155c:	bl	0 <__aeabi_read_tp>
    1560:	mov	r2, r0
    1564:	ldr	r3, [pc, #3472]	; 22fc <sp3_init+0x2110>
    1568:	ldr	r3, [r2, r3]
    156c:	add	r3, r3, #124	; 0x7c
    1570:	ldr	r1, [r3]
    1574:	mov	r2, #1
    1578:	mov	r3, #0
    157c:	mov	r0, r1
    1580:	bl	0 <coda_type_set_byte_size>
    1584:	bl	0 <__aeabi_read_tp>
    1588:	mov	r2, r0
    158c:	ldr	r3, [pc, #3432]	; 22fc <sp3_init+0x2110>
    1590:	ldr	r3, [r2, r3]
    1594:	add	r3, r3, #124	; 0x7c
    1598:	ldr	r3, [r3]
    159c:	ldr	r1, [pc, #3432]	; 230c <sp3_init+0x2120>
    15a0:	mov	r0, r3
    15a4:	bl	0 <coda_type_set_description>
    15a8:	bl	0 <__aeabi_read_tp>
    15ac:	mov	r2, r0
    15b0:	ldr	r3, [pc, #3396]	; 22fc <sp3_init+0x2110>
    15b4:	ldr	r3, [r2, r3]
    15b8:	add	r4, r3, #128	; 0x80
    15bc:	mov	r0, #9
    15c0:	bl	0 <coda_type_text_new>
    15c4:	mov	r3, r0
    15c8:	str	r3, [r4]
    15cc:	bl	0 <__aeabi_read_tp>
    15d0:	mov	r2, r0
    15d4:	ldr	r3, [pc, #3360]	; 22fc <sp3_init+0x2110>
    15d8:	ldr	r3, [r2, r3]
    15dc:	add	r3, r3, #128	; 0x80
    15e0:	ldr	r1, [r3]
    15e4:	mov	r2, #1
    15e8:	mov	r3, #0
    15ec:	mov	r0, r1
    15f0:	bl	0 <coda_type_set_byte_size>
    15f4:	bl	0 <__aeabi_read_tp>
    15f8:	mov	r2, r0
    15fc:	ldr	r3, [pc, #3320]	; 22fc <sp3_init+0x2110>
    1600:	ldr	r3, [r2, r3]
    1604:	add	r3, r3, #128	; 0x80
    1608:	ldr	r3, [r3]
    160c:	ldr	r1, [pc, #3324]	; 2310 <sp3_init+0x2124>
    1610:	mov	r0, r3
    1614:	bl	0 <coda_type_set_description>
    1618:	bl	0 <__aeabi_read_tp>
    161c:	mov	r2, r0
    1620:	ldr	r3, [pc, #3284]	; 22fc <sp3_init+0x2110>
    1624:	ldr	r3, [r2, r3]
    1628:	add	r4, r3, #132	; 0x84
    162c:	mov	r0, #9
    1630:	bl	0 <coda_type_text_new>
    1634:	mov	r3, r0
    1638:	str	r3, [r4]
    163c:	bl	0 <__aeabi_read_tp>
    1640:	mov	r2, r0
    1644:	ldr	r3, [pc, #3248]	; 22fc <sp3_init+0x2110>
    1648:	ldr	r3, [r2, r3]
    164c:	add	r3, r3, #132	; 0x84
    1650:	ldr	r1, [r3]
    1654:	mov	r2, #1
    1658:	mov	r3, #0
    165c:	mov	r0, r1
    1660:	bl	0 <coda_type_set_byte_size>
    1664:	bl	0 <__aeabi_read_tp>
    1668:	mov	r2, r0
    166c:	ldr	r3, [pc, #3208]	; 22fc <sp3_init+0x2110>
    1670:	ldr	r3, [r2, r3]
    1674:	add	r3, r3, #132	; 0x84
    1678:	ldr	r3, [r3]
    167c:	ldr	r1, [pc, #3216]	; 2314 <sp3_init+0x2128>
    1680:	mov	r0, r3
    1684:	bl	0 <coda_type_set_description>
    1688:	bl	0 <__aeabi_read_tp>
    168c:	mov	r2, r0
    1690:	ldr	r3, [pc, #3172]	; 22fc <sp3_init+0x2110>
    1694:	ldr	r3, [r2, r3]
    1698:	add	r4, r3, #136	; 0x88
    169c:	mov	r0, #9
    16a0:	bl	0 <coda_type_text_new>
    16a4:	mov	r3, r0
    16a8:	str	r3, [r4]
    16ac:	bl	0 <__aeabi_read_tp>
    16b0:	mov	r2, r0
    16b4:	ldr	r3, [pc, #3136]	; 22fc <sp3_init+0x2110>
    16b8:	ldr	r3, [r2, r3]
    16bc:	add	r3, r3, #136	; 0x88
    16c0:	ldr	r1, [r3]
    16c4:	mov	r2, #1
    16c8:	mov	r3, #0
    16cc:	mov	r0, r1
    16d0:	bl	0 <coda_type_set_byte_size>
    16d4:	bl	0 <__aeabi_read_tp>
    16d8:	mov	r2, r0
    16dc:	ldr	r3, [pc, #3096]	; 22fc <sp3_init+0x2110>
    16e0:	ldr	r3, [r2, r3]
    16e4:	add	r3, r3, #136	; 0x88
    16e8:	ldr	r3, [r3]
    16ec:	ldr	r1, [pc, #3108]	; 2318 <sp3_init+0x212c>
    16f0:	mov	r0, r3
    16f4:	bl	0 <coda_type_set_description>
    16f8:	bl	0 <__aeabi_read_tp>
    16fc:	mov	r2, r0
    1700:	ldr	r3, [pc, #3060]	; 22fc <sp3_init+0x2110>
    1704:	ldr	r3, [r2, r3]
    1708:	add	r4, r3, #144	; 0x90
    170c:	mov	r1, #2
    1710:	mov	r0, #9
    1714:	bl	0 <coda_type_number_new>
    1718:	mov	r3, r0
    171c:	str	r3, [r4]
    1720:	bl	0 <__aeabi_read_tp>
    1724:	mov	r2, r0
    1728:	ldr	r3, [pc, #3020]	; 22fc <sp3_init+0x2110>
    172c:	ldr	r3, [r2, r3]
    1730:	add	r3, r3, #144	; 0x90
    1734:	ldr	r3, [r3]
    1738:	ldr	r1, [fp, #-20]	; 0xffffffec
    173c:	mov	r0, r3
    1740:	bl	0 <coda_type_number_set_endianness>
    1744:	bl	0 <__aeabi_read_tp>
    1748:	mov	r2, r0
    174c:	ldr	r3, [pc, #2984]	; 22fc <sp3_init+0x2110>
    1750:	ldr	r3, [r2, r3]
    1754:	add	r3, r3, #144	; 0x90
    1758:	ldr	r3, [r3]
    175c:	mov	r1, #2
    1760:	mov	r0, r3
    1764:	bl	0 <coda_type_set_read_type>
    1768:	bl	0 <__aeabi_read_tp>
    176c:	mov	r2, r0
    1770:	ldr	r3, [pc, #2948]	; 22fc <sp3_init+0x2110>
    1774:	ldr	r3, [r2, r3]
    1778:	add	r3, r3, #144	; 0x90
    177c:	ldr	r1, [r3]
    1780:	mov	r2, #16
    1784:	mov	r3, #0
    1788:	mov	r0, r1
    178c:	bl	0 <coda_type_set_bit_size>
    1790:	bl	0 <__aeabi_read_tp>
    1794:	mov	r2, r0
    1798:	ldr	r3, [pc, #2908]	; 22fc <sp3_init+0x2110>
    179c:	ldr	r3, [r2, r3]
    17a0:	add	r3, r3, #144	; 0x90
    17a4:	ldr	r3, [r3]
    17a8:	ldr	r1, [pc, #2924]	; 231c <sp3_init+0x2130>
    17ac:	mov	r0, r3
    17b0:	bl	0 <coda_type_set_description>
    17b4:	bl	0 <__aeabi_read_tp>
    17b8:	mov	r2, r0
    17bc:	ldr	r3, [pc, #2872]	; 22fc <sp3_init+0x2110>
    17c0:	ldr	r3, [r2, r3]
    17c4:	add	r3, r3, #144	; 0x90
    17c8:	ldr	r3, [r3]
    17cc:	ldr	r1, [pc, #2892]	; 2320 <sp3_init+0x2134>
    17d0:	mov	r0, r3
    17d4:	bl	0 <coda_type_number_set_unit>
    17d8:	bl	0 <__aeabi_read_tp>
    17dc:	mov	r2, r0
    17e0:	ldr	r3, [pc, #2836]	; 22fc <sp3_init+0x2110>
    17e4:	ldr	r3, [r2, r3]
    17e8:	add	r4, r3, #148	; 0x94
    17ec:	mov	r1, #2
    17f0:	mov	r0, #9
    17f4:	bl	0 <coda_type_number_new>
    17f8:	mov	r3, r0
    17fc:	str	r3, [r4]
    1800:	bl	0 <__aeabi_read_tp>
    1804:	mov	r2, r0
    1808:	ldr	r3, [pc, #2796]	; 22fc <sp3_init+0x2110>
    180c:	ldr	r3, [r2, r3]
    1810:	add	r3, r3, #148	; 0x94
    1814:	ldr	r3, [r3]
    1818:	ldr	r1, [fp, #-20]	; 0xffffffec
    181c:	mov	r0, r3
    1820:	bl	0 <coda_type_number_set_endianness>
    1824:	bl	0 <__aeabi_read_tp>
    1828:	mov	r2, r0
    182c:	ldr	r3, [pc, #2760]	; 22fc <sp3_init+0x2110>
    1830:	ldr	r3, [r2, r3]
    1834:	add	r3, r3, #148	; 0x94
    1838:	ldr	r3, [r3]
    183c:	mov	r1, #2
    1840:	mov	r0, r3
    1844:	bl	0 <coda_type_set_read_type>
    1848:	bl	0 <__aeabi_read_tp>
    184c:	mov	r2, r0
    1850:	ldr	r3, [pc, #2724]	; 22fc <sp3_init+0x2110>
    1854:	ldr	r3, [r2, r3]
    1858:	add	r3, r3, #148	; 0x94
    185c:	ldr	r1, [r3]
    1860:	mov	r2, #16
    1864:	mov	r3, #0
    1868:	mov	r0, r1
    186c:	bl	0 <coda_type_set_bit_size>
    1870:	bl	0 <__aeabi_read_tp>
    1874:	mov	r2, r0
    1878:	ldr	r3, [pc, #2684]	; 22fc <sp3_init+0x2110>
    187c:	ldr	r3, [r2, r3]
    1880:	add	r3, r3, #148	; 0x94
    1884:	ldr	r3, [r3]
    1888:	ldr	r1, [pc, #2708]	; 2324 <sp3_init+0x2138>
    188c:	mov	r0, r3
    1890:	bl	0 <coda_type_set_description>
    1894:	bl	0 <__aeabi_read_tp>
    1898:	mov	r2, r0
    189c:	ldr	r3, [pc, #2648]	; 22fc <sp3_init+0x2110>
    18a0:	ldr	r3, [r2, r3]
    18a4:	add	r3, r3, #148	; 0x94
    18a8:	ldr	r3, [r3]
    18ac:	ldr	r1, [pc, #2668]	; 2320 <sp3_init+0x2134>
    18b0:	mov	r0, r3
    18b4:	bl	0 <coda_type_number_set_unit>
    18b8:	bl	0 <__aeabi_read_tp>
    18bc:	mov	r2, r0
    18c0:	ldr	r3, [pc, #2612]	; 22fc <sp3_init+0x2110>
    18c4:	ldr	r3, [r2, r3]
    18c8:	add	r4, r3, #152	; 0x98
    18cc:	mov	r1, #2
    18d0:	mov	r0, #9
    18d4:	bl	0 <coda_type_number_new>
    18d8:	mov	r3, r0
    18dc:	str	r3, [r4]
    18e0:	bl	0 <__aeabi_read_tp>
    18e4:	mov	r2, r0
    18e8:	ldr	r3, [pc, #2572]	; 22fc <sp3_init+0x2110>
    18ec:	ldr	r3, [r2, r3]
    18f0:	add	r3, r3, #152	; 0x98
    18f4:	ldr	r3, [r3]
    18f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    18fc:	mov	r0, r3
    1900:	bl	0 <coda_type_number_set_endianness>
    1904:	bl	0 <__aeabi_read_tp>
    1908:	mov	r2, r0
    190c:	ldr	r3, [pc, #2536]	; 22fc <sp3_init+0x2110>
    1910:	ldr	r3, [r2, r3]
    1914:	add	r3, r3, #152	; 0x98
    1918:	ldr	r3, [r3]
    191c:	mov	r1, #2
    1920:	mov	r0, r3
    1924:	bl	0 <coda_type_set_read_type>
    1928:	bl	0 <__aeabi_read_tp>
    192c:	mov	r2, r0
    1930:	ldr	r3, [pc, #2500]	; 22fc <sp3_init+0x2110>
    1934:	ldr	r3, [r2, r3]
    1938:	add	r3, r3, #152	; 0x98
    193c:	ldr	r1, [r3]
    1940:	mov	r2, #16
    1944:	mov	r3, #0
    1948:	mov	r0, r1
    194c:	bl	0 <coda_type_set_bit_size>
    1950:	bl	0 <__aeabi_read_tp>
    1954:	mov	r2, r0
    1958:	ldr	r3, [pc, #2460]	; 22fc <sp3_init+0x2110>
    195c:	ldr	r3, [r2, r3]
    1960:	add	r3, r3, #152	; 0x98
    1964:	ldr	r3, [r3]
    1968:	ldr	r1, [pc, #2488]	; 2328 <sp3_init+0x213c>
    196c:	mov	r0, r3
    1970:	bl	0 <coda_type_set_description>
    1974:	bl	0 <__aeabi_read_tp>
    1978:	mov	r2, r0
    197c:	ldr	r3, [pc, #2424]	; 22fc <sp3_init+0x2110>
    1980:	ldr	r3, [r2, r3]
    1984:	add	r3, r3, #152	; 0x98
    1988:	ldr	r3, [r3]
    198c:	ldr	r1, [pc, #2444]	; 2320 <sp3_init+0x2134>
    1990:	mov	r0, r3
    1994:	bl	0 <coda_type_number_set_unit>
    1998:	bl	0 <__aeabi_read_tp>
    199c:	mov	r2, r0
    19a0:	ldr	r3, [pc, #2388]	; 22fc <sp3_init+0x2110>
    19a4:	ldr	r3, [r2, r3]
    19a8:	add	r4, r3, #156	; 0x9c
    19ac:	mov	r1, #2
    19b0:	mov	r0, #9
    19b4:	bl	0 <coda_type_number_new>
    19b8:	mov	r3, r0
    19bc:	str	r3, [r4]
    19c0:	bl	0 <__aeabi_read_tp>
    19c4:	mov	r2, r0
    19c8:	ldr	r3, [pc, #2348]	; 22fc <sp3_init+0x2110>
    19cc:	ldr	r3, [r2, r3]
    19d0:	add	r3, r3, #156	; 0x9c
    19d4:	ldr	r3, [r3]
    19d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    19dc:	mov	r0, r3
    19e0:	bl	0 <coda_type_number_set_endianness>
    19e4:	bl	0 <__aeabi_read_tp>
    19e8:	mov	r2, r0
    19ec:	ldr	r3, [pc, #2312]	; 22fc <sp3_init+0x2110>
    19f0:	ldr	r3, [r2, r3]
    19f4:	add	r3, r3, #156	; 0x9c
    19f8:	ldr	r3, [r3]
    19fc:	mov	r1, #4
    1a00:	mov	r0, r3
    1a04:	bl	0 <coda_type_set_read_type>
    1a08:	bl	0 <__aeabi_read_tp>
    1a0c:	mov	r2, r0
    1a10:	ldr	r3, [pc, #2276]	; 22fc <sp3_init+0x2110>
    1a14:	ldr	r3, [r2, r3]
    1a18:	add	r3, r3, #156	; 0x9c
    1a1c:	ldr	r1, [r3]
    1a20:	mov	r2, #32
    1a24:	mov	r3, #0
    1a28:	mov	r0, r1
    1a2c:	bl	0 <coda_type_set_bit_size>
    1a30:	bl	0 <__aeabi_read_tp>
    1a34:	mov	r2, r0
    1a38:	ldr	r3, [pc, #2236]	; 22fc <sp3_init+0x2110>
    1a3c:	ldr	r3, [r2, r3]
    1a40:	add	r3, r3, #156	; 0x9c
    1a44:	ldr	r3, [r3]
    1a48:	ldr	r1, [pc, #2268]	; 232c <sp3_init+0x2140>
    1a4c:	mov	r0, r3
    1a50:	bl	0 <coda_type_set_description>
    1a54:	bl	0 <__aeabi_read_tp>
    1a58:	mov	r2, r0
    1a5c:	ldr	r3, [pc, #2200]	; 22fc <sp3_init+0x2110>
    1a60:	ldr	r3, [r2, r3]
    1a64:	add	r3, r3, #156	; 0x9c
    1a68:	ldr	r3, [r3]
    1a6c:	ldr	r1, [pc, #2236]	; 2330 <sp3_init+0x2144>
    1a70:	mov	r0, r3
    1a74:	bl	0 <coda_type_number_set_unit>
    1a78:	bl	0 <__aeabi_read_tp>
    1a7c:	mov	r2, r0
    1a80:	ldr	r3, [pc, #2164]	; 22fc <sp3_init+0x2110>
    1a84:	ldr	r3, [r2, r3]
    1a88:	add	r4, r3, #160	; 0xa0
    1a8c:	mov	r1, #2
    1a90:	mov	r0, #9
    1a94:	bl	0 <coda_type_number_new>
    1a98:	mov	r3, r0
    1a9c:	str	r3, [r4]
    1aa0:	bl	0 <__aeabi_read_tp>
    1aa4:	mov	r2, r0
    1aa8:	ldr	r3, [pc, #2124]	; 22fc <sp3_init+0x2110>
    1aac:	ldr	r3, [r2, r3]
    1ab0:	add	r3, r3, #160	; 0xa0
    1ab4:	ldr	r3, [r3]
    1ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1abc:	mov	r0, r3
    1ac0:	bl	0 <coda_type_number_set_endianness>
    1ac4:	bl	0 <__aeabi_read_tp>
    1ac8:	mov	r2, r0
    1acc:	ldr	r3, [pc, #2088]	; 22fc <sp3_init+0x2110>
    1ad0:	ldr	r3, [r2, r3]
    1ad4:	add	r3, r3, #160	; 0xa0
    1ad8:	ldr	r3, [r3]
    1adc:	mov	r1, #4
    1ae0:	mov	r0, r3
    1ae4:	bl	0 <coda_type_set_read_type>
    1ae8:	bl	0 <__aeabi_read_tp>
    1aec:	mov	r2, r0
    1af0:	ldr	r3, [pc, #2052]	; 22fc <sp3_init+0x2110>
    1af4:	ldr	r3, [r2, r3]
    1af8:	add	r3, r3, #160	; 0xa0
    1afc:	ldr	r1, [r3]
    1b00:	mov	r2, #32
    1b04:	mov	r3, #0
    1b08:	mov	r0, r1
    1b0c:	bl	0 <coda_type_set_bit_size>
    1b10:	bl	0 <__aeabi_read_tp>
    1b14:	mov	r2, r0
    1b18:	ldr	r3, [pc, #2012]	; 22fc <sp3_init+0x2110>
    1b1c:	ldr	r3, [r2, r3]
    1b20:	add	r3, r3, #160	; 0xa0
    1b24:	ldr	r3, [r3]
    1b28:	ldr	r1, [pc, #2116]	; 2374 <sp3_init+0x2188>
    1b2c:	mov	r0, r3
    1b30:	bl	0 <coda_type_set_description>
    1b34:	bl	0 <__aeabi_read_tp>
    1b38:	mov	r2, r0
    1b3c:	ldr	r3, [pc, #1976]	; 22fc <sp3_init+0x2110>
    1b40:	ldr	r3, [r2, r3]
    1b44:	add	r4, r3, #164	; 0xa4
    1b48:	mov	r1, #2
    1b4c:	mov	r0, #9
    1b50:	bl	0 <coda_type_number_new>
    1b54:	mov	r3, r0
    1b58:	str	r3, [r4]
    1b5c:	bl	0 <__aeabi_read_tp>
    1b60:	mov	r2, r0
    1b64:	ldr	r3, [pc, #1936]	; 22fc <sp3_init+0x2110>
    1b68:	ldr	r3, [r2, r3]
    1b6c:	add	r3, r3, #164	; 0xa4
    1b70:	ldr	r3, [r3]
    1b74:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b78:	mov	r0, r3
    1b7c:	bl	0 <coda_type_number_set_endianness>
    1b80:	bl	0 <__aeabi_read_tp>
    1b84:	mov	r2, r0
    1b88:	ldr	r3, [pc, #1900]	; 22fc <sp3_init+0x2110>
    1b8c:	ldr	r3, [r2, r3]
    1b90:	add	r3, r3, #164	; 0xa4
    1b94:	ldr	r3, [r3]
    1b98:	mov	r1, #4
    1b9c:	mov	r0, r3
    1ba0:	bl	0 <coda_type_set_read_type>
    1ba4:	bl	0 <__aeabi_read_tp>
    1ba8:	mov	r2, r0
    1bac:	ldr	r3, [pc, #1864]	; 22fc <sp3_init+0x2110>
    1bb0:	ldr	r3, [r2, r3]
    1bb4:	add	r3, r3, #164	; 0xa4
    1bb8:	ldr	r1, [r3]
    1bbc:	mov	r2, #32
    1bc0:	mov	r3, #0
    1bc4:	mov	r0, r1
    1bc8:	bl	0 <coda_type_set_bit_size>
    1bcc:	bl	0 <__aeabi_read_tp>
    1bd0:	mov	r2, r0
    1bd4:	ldr	r3, [pc, #1824]	; 22fc <sp3_init+0x2110>
    1bd8:	ldr	r3, [r2, r3]
    1bdc:	add	r3, r3, #164	; 0xa4
    1be0:	ldr	r3, [r3]
    1be4:	ldr	r1, [pc, #1932]	; 2378 <sp3_init+0x218c>
    1be8:	mov	r0, r3
    1bec:	bl	0 <coda_type_set_description>
    1bf0:	bl	0 <__aeabi_read_tp>
    1bf4:	mov	r2, r0
    1bf8:	ldr	r3, [pc, #1788]	; 22fc <sp3_init+0x2110>
    1bfc:	ldr	r3, [r2, r3]
    1c00:	add	r4, r3, #168	; 0xa8
    1c04:	mov	r1, #2
    1c08:	mov	r0, #9
    1c0c:	bl	0 <coda_type_number_new>
    1c10:	mov	r3, r0
    1c14:	str	r3, [r4]
    1c18:	bl	0 <__aeabi_read_tp>
    1c1c:	mov	r2, r0
    1c20:	ldr	r3, [pc, #1748]	; 22fc <sp3_init+0x2110>
    1c24:	ldr	r3, [r2, r3]
    1c28:	add	r3, r3, #168	; 0xa8
    1c2c:	ldr	r3, [r3]
    1c30:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c34:	mov	r0, r3
    1c38:	bl	0 <coda_type_number_set_endianness>
    1c3c:	bl	0 <__aeabi_read_tp>
    1c40:	mov	r2, r0
    1c44:	ldr	r3, [pc, #1712]	; 22fc <sp3_init+0x2110>
    1c48:	ldr	r3, [r2, r3]
    1c4c:	add	r3, r3, #168	; 0xa8
    1c50:	ldr	r3, [r3]
    1c54:	mov	r1, #4
    1c58:	mov	r0, r3
    1c5c:	bl	0 <coda_type_set_read_type>
    1c60:	bl	0 <__aeabi_read_tp>
    1c64:	mov	r2, r0
    1c68:	ldr	r3, [pc, #1676]	; 22fc <sp3_init+0x2110>
    1c6c:	ldr	r3, [r2, r3]
    1c70:	add	r3, r3, #168	; 0xa8
    1c74:	ldr	r1, [r3]
    1c78:	mov	r2, #32
    1c7c:	mov	r3, #0
    1c80:	mov	r0, r1
    1c84:	bl	0 <coda_type_set_bit_size>
    1c88:	bl	0 <__aeabi_read_tp>
    1c8c:	mov	r2, r0
    1c90:	ldr	r3, [pc, #1636]	; 22fc <sp3_init+0x2110>
    1c94:	ldr	r3, [r2, r3]
    1c98:	add	r3, r3, #168	; 0xa8
    1c9c:	ldr	r3, [r3]
    1ca0:	ldr	r1, [pc, #1748]	; 237c <sp3_init+0x2190>
    1ca4:	mov	r0, r3
    1ca8:	bl	0 <coda_type_set_description>
    1cac:	bl	0 <__aeabi_read_tp>
    1cb0:	mov	r2, r0
    1cb4:	ldr	r3, [pc, #1600]	; 22fc <sp3_init+0x2110>
    1cb8:	ldr	r3, [r2, r3]
    1cbc:	add	r4, r3, #172	; 0xac
    1cc0:	mov	r1, #2
    1cc4:	mov	r0, #9
    1cc8:	bl	0 <coda_type_number_new>
    1ccc:	mov	r3, r0
    1cd0:	str	r3, [r4]
    1cd4:	bl	0 <__aeabi_read_tp>
    1cd8:	mov	r2, r0
    1cdc:	ldr	r3, [pc, #1560]	; 22fc <sp3_init+0x2110>
    1ce0:	ldr	r3, [r2, r3]
    1ce4:	add	r3, r3, #172	; 0xac
    1ce8:	ldr	r3, [r3]
    1cec:	ldr	r1, [fp, #-20]	; 0xffffffec
    1cf0:	mov	r0, r3
    1cf4:	bl	0 <coda_type_number_set_endianness>
    1cf8:	bl	0 <__aeabi_read_tp>
    1cfc:	mov	r2, r0
    1d00:	ldr	r3, [pc, #1524]	; 22fc <sp3_init+0x2110>
    1d04:	ldr	r3, [r2, r3]
    1d08:	add	r3, r3, #172	; 0xac
    1d0c:	ldr	r3, [r3]
    1d10:	mov	r1, #4
    1d14:	mov	r0, r3
    1d18:	bl	0 <coda_type_set_read_type>
    1d1c:	bl	0 <__aeabi_read_tp>
    1d20:	mov	r2, r0
    1d24:	ldr	r3, [pc, #1488]	; 22fc <sp3_init+0x2110>
    1d28:	ldr	r3, [r2, r3]
    1d2c:	add	r3, r3, #172	; 0xac
    1d30:	ldr	r1, [r3]
    1d34:	mov	r2, #32
    1d38:	mov	r3, #0
    1d3c:	mov	r0, r1
    1d40:	bl	0 <coda_type_set_bit_size>
    1d44:	bl	0 <__aeabi_read_tp>
    1d48:	mov	r2, r0
    1d4c:	ldr	r3, [pc, #1448]	; 22fc <sp3_init+0x2110>
    1d50:	ldr	r3, [r2, r3]
    1d54:	add	r3, r3, #172	; 0xac
    1d58:	ldr	r3, [r3]
    1d5c:	ldr	r1, [pc, #1564]	; 2380 <sp3_init+0x2194>
    1d60:	mov	r0, r3
    1d64:	bl	0 <coda_type_set_description>
    1d68:	bl	0 <__aeabi_read_tp>
    1d6c:	mov	r2, r0
    1d70:	ldr	r3, [pc, #1412]	; 22fc <sp3_init+0x2110>
    1d74:	ldr	r3, [r2, r3]
    1d78:	add	r4, r3, #176	; 0xb0
    1d7c:	mov	r1, #2
    1d80:	mov	r0, #9
    1d84:	bl	0 <coda_type_number_new>
    1d88:	mov	r3, r0
    1d8c:	str	r3, [r4]
    1d90:	bl	0 <__aeabi_read_tp>
    1d94:	mov	r2, r0
    1d98:	ldr	r3, [pc, #1372]	; 22fc <sp3_init+0x2110>
    1d9c:	ldr	r3, [r2, r3]
    1da0:	add	r3, r3, #176	; 0xb0
    1da4:	ldr	r3, [r3]
    1da8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1dac:	mov	r0, r3
    1db0:	bl	0 <coda_type_number_set_endianness>
    1db4:	bl	0 <__aeabi_read_tp>
    1db8:	mov	r2, r0
    1dbc:	ldr	r3, [pc, #1336]	; 22fc <sp3_init+0x2110>
    1dc0:	ldr	r3, [r2, r3]
    1dc4:	add	r3, r3, #176	; 0xb0
    1dc8:	ldr	r3, [r3]
    1dcc:	mov	r1, #4
    1dd0:	mov	r0, r3
    1dd4:	bl	0 <coda_type_set_read_type>
    1dd8:	bl	0 <__aeabi_read_tp>
    1ddc:	mov	r2, r0
    1de0:	ldr	r3, [pc, #1300]	; 22fc <sp3_init+0x2110>
    1de4:	ldr	r3, [r2, r3]
    1de8:	add	r3, r3, #176	; 0xb0
    1dec:	ldr	r1, [r3]
    1df0:	mov	r2, #32
    1df4:	mov	r3, #0
    1df8:	mov	r0, r1
    1dfc:	bl	0 <coda_type_set_bit_size>
    1e00:	bl	0 <__aeabi_read_tp>
    1e04:	mov	r2, r0
    1e08:	ldr	r3, [pc, #1260]	; 22fc <sp3_init+0x2110>
    1e0c:	ldr	r3, [r2, r3]
    1e10:	add	r3, r3, #176	; 0xb0
    1e14:	ldr	r3, [r3]
    1e18:	ldr	r1, [pc, #1380]	; 2384 <sp3_init+0x2198>
    1e1c:	mov	r0, r3
    1e20:	bl	0 <coda_type_set_description>
    1e24:	bl	0 <__aeabi_read_tp>
    1e28:	mov	r2, r0
    1e2c:	ldr	r3, [pc, #1224]	; 22fc <sp3_init+0x2110>
    1e30:	ldr	r3, [r2, r3]
    1e34:	add	r4, r3, #180	; 0xb4
    1e38:	mov	r1, #2
    1e3c:	mov	r0, #9
    1e40:	bl	0 <coda_type_number_new>
    1e44:	mov	r3, r0
    1e48:	str	r3, [r4]
    1e4c:	bl	0 <__aeabi_read_tp>
    1e50:	mov	r2, r0
    1e54:	ldr	r3, [pc, #1184]	; 22fc <sp3_init+0x2110>
    1e58:	ldr	r3, [r2, r3]
    1e5c:	add	r3, r3, #180	; 0xb4
    1e60:	ldr	r3, [r3]
    1e64:	ldr	r1, [fp, #-20]	; 0xffffffec
    1e68:	mov	r0, r3
    1e6c:	bl	0 <coda_type_number_set_endianness>
    1e70:	bl	0 <__aeabi_read_tp>
    1e74:	mov	r2, r0
    1e78:	ldr	r3, [pc, #1148]	; 22fc <sp3_init+0x2110>
    1e7c:	ldr	r3, [r2, r3]
    1e80:	add	r3, r3, #180	; 0xb4
    1e84:	ldr	r3, [r3]
    1e88:	mov	r1, #4
    1e8c:	mov	r0, r3
    1e90:	bl	0 <coda_type_set_read_type>
    1e94:	bl	0 <__aeabi_read_tp>
    1e98:	mov	r2, r0
    1e9c:	ldr	r3, [pc, #1112]	; 22fc <sp3_init+0x2110>
    1ea0:	ldr	r3, [r2, r3]
    1ea4:	add	r3, r3, #180	; 0xb4
    1ea8:	ldr	r1, [r3]
    1eac:	mov	r2, #32
    1eb0:	mov	r3, #0
    1eb4:	mov	r0, r1
    1eb8:	bl	0 <coda_type_set_bit_size>
    1ebc:	bl	0 <__aeabi_read_tp>
    1ec0:	mov	r2, r0
    1ec4:	ldr	r3, [pc, #1072]	; 22fc <sp3_init+0x2110>
    1ec8:	ldr	r3, [r2, r3]
    1ecc:	add	r3, r3, #180	; 0xb4
    1ed0:	ldr	r3, [r3]
    1ed4:	ldr	r1, [pc, #1196]	; 2388 <sp3_init+0x219c>
    1ed8:	mov	r0, r3
    1edc:	bl	0 <coda_type_set_description>
    1ee0:	bl	0 <__aeabi_read_tp>
    1ee4:	mov	r2, r0
    1ee8:	ldr	r3, [pc, #1036]	; 22fc <sp3_init+0x2110>
    1eec:	ldr	r3, [r2, r3]
    1ef0:	add	r4, r3, #184	; 0xb8
    1ef4:	mov	r1, #3
    1ef8:	mov	r0, #9
    1efc:	bl	0 <coda_type_number_new>
    1f00:	mov	r3, r0
    1f04:	str	r3, [r4]
    1f08:	bl	0 <__aeabi_read_tp>
    1f0c:	mov	r2, r0
    1f10:	ldr	r3, [pc, #996]	; 22fc <sp3_init+0x2110>
    1f14:	ldr	r3, [r2, r3]
    1f18:	add	r3, r3, #184	; 0xb8
    1f1c:	ldr	r3, [r3]
    1f20:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f24:	mov	r0, r3
    1f28:	bl	0 <coda_type_number_set_endianness>
    1f2c:	bl	0 <__aeabi_read_tp>
    1f30:	mov	r2, r0
    1f34:	ldr	r3, [pc, #960]	; 22fc <sp3_init+0x2110>
    1f38:	ldr	r3, [r2, r3]
    1f3c:	add	r3, r3, #184	; 0xb8
    1f40:	ldr	r1, [r3]
    1f44:	mov	r2, #64	; 0x40
    1f48:	mov	r3, #0
    1f4c:	mov	r0, r1
    1f50:	bl	0 <coda_type_set_bit_size>
    1f54:	bl	0 <__aeabi_read_tp>
    1f58:	mov	r2, r0
    1f5c:	ldr	r3, [pc, #920]	; 22fc <sp3_init+0x2110>
    1f60:	ldr	r3, [r2, r3]
    1f64:	add	r3, r3, #184	; 0xb8
    1f68:	ldr	r3, [r3]
    1f6c:	ldr	r1, [pc, #960]	; 2334 <sp3_init+0x2148>
    1f70:	mov	r0, r3
    1f74:	bl	0 <coda_type_set_description>
    1f78:	bl	0 <__aeabi_read_tp>
    1f7c:	mov	r2, r0
    1f80:	ldr	r3, [pc, #884]	; 22fc <sp3_init+0x2110>
    1f84:	ldr	r3, [r2, r3]
    1f88:	add	r3, r3, #184	; 0xb8
    1f8c:	ldr	r3, [r3]
    1f90:	ldr	r1, [pc, #928]	; 2338 <sp3_init+0x214c>
    1f94:	mov	r0, r3
    1f98:	bl	0 <coda_type_number_set_unit>
    1f9c:	bl	0 <__aeabi_read_tp>
    1fa0:	mov	r2, r0
    1fa4:	ldr	r3, [pc, #848]	; 22fc <sp3_init+0x2110>
    1fa8:	ldr	r3, [r2, r3]
    1fac:	add	r4, r3, #188	; 0xbc
    1fb0:	mov	r1, #3
    1fb4:	mov	r0, #9
    1fb8:	bl	0 <coda_type_number_new>
    1fbc:	mov	r3, r0
    1fc0:	str	r3, [r4]
    1fc4:	bl	0 <__aeabi_read_tp>
    1fc8:	mov	r2, r0
    1fcc:	ldr	r3, [pc, #808]	; 22fc <sp3_init+0x2110>
    1fd0:	ldr	r3, [r2, r3]
    1fd4:	add	r3, r3, #188	; 0xbc
    1fd8:	ldr	r3, [r3]
    1fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1fe0:	mov	r0, r3
    1fe4:	bl	0 <coda_type_number_set_endianness>
    1fe8:	bl	0 <__aeabi_read_tp>
    1fec:	mov	r2, r0
    1ff0:	ldr	r3, [pc, #772]	; 22fc <sp3_init+0x2110>
    1ff4:	ldr	r3, [r2, r3]
    1ff8:	add	r3, r3, #188	; 0xbc
    1ffc:	ldr	r1, [r3]
    2000:	mov	r2, #64	; 0x40
    2004:	mov	r3, #0
    2008:	mov	r0, r1
    200c:	bl	0 <coda_type_set_bit_size>
    2010:	bl	0 <__aeabi_read_tp>
    2014:	mov	r2, r0
    2018:	ldr	r3, [pc, #732]	; 22fc <sp3_init+0x2110>
    201c:	ldr	r3, [r2, r3]
    2020:	add	r3, r3, #188	; 0xbc
    2024:	ldr	r3, [r3]
    2028:	ldr	r1, [pc, #780]	; 233c <sp3_init+0x2150>
    202c:	mov	r0, r3
    2030:	bl	0 <coda_type_set_description>
    2034:	bl	0 <__aeabi_read_tp>
    2038:	mov	r2, r0
    203c:	ldr	r3, [pc, #696]	; 22fc <sp3_init+0x2110>
    2040:	ldr	r3, [r2, r3]
    2044:	add	r3, r3, #188	; 0xbc
    2048:	ldr	r3, [r3]
    204c:	ldr	r1, [pc, #740]	; 2338 <sp3_init+0x214c>
    2050:	mov	r0, r3
    2054:	bl	0 <coda_type_number_set_unit>
    2058:	bl	0 <__aeabi_read_tp>
    205c:	mov	r2, r0
    2060:	ldr	r3, [pc, #660]	; 22fc <sp3_init+0x2110>
    2064:	ldr	r3, [r2, r3]
    2068:	add	r4, r3, #192	; 0xc0
    206c:	mov	r1, #3
    2070:	mov	r0, #9
    2074:	bl	0 <coda_type_number_new>
    2078:	mov	r3, r0
    207c:	str	r3, [r4]
    2080:	bl	0 <__aeabi_read_tp>
    2084:	mov	r2, r0
    2088:	ldr	r3, [pc, #620]	; 22fc <sp3_init+0x2110>
    208c:	ldr	r3, [r2, r3]
    2090:	add	r3, r3, #192	; 0xc0
    2094:	ldr	r3, [r3]
    2098:	ldr	r1, [fp, #-20]	; 0xffffffec
    209c:	mov	r0, r3
    20a0:	bl	0 <coda_type_number_set_endianness>
    20a4:	bl	0 <__aeabi_read_tp>
    20a8:	mov	r2, r0
    20ac:	ldr	r3, [pc, #584]	; 22fc <sp3_init+0x2110>
    20b0:	ldr	r3, [r2, r3]
    20b4:	add	r3, r3, #192	; 0xc0
    20b8:	ldr	r1, [r3]
    20bc:	mov	r2, #64	; 0x40
    20c0:	mov	r3, #0
    20c4:	mov	r0, r1
    20c8:	bl	0 <coda_type_set_bit_size>
    20cc:	bl	0 <__aeabi_read_tp>
    20d0:	mov	r2, r0
    20d4:	ldr	r3, [pc, #544]	; 22fc <sp3_init+0x2110>
    20d8:	ldr	r3, [r2, r3]
    20dc:	add	r3, r3, #192	; 0xc0
    20e0:	ldr	r3, [r3]
    20e4:	ldr	r1, [pc, #596]	; 2340 <sp3_init+0x2154>
    20e8:	mov	r0, r3
    20ec:	bl	0 <coda_type_set_description>
    20f0:	bl	0 <__aeabi_read_tp>
    20f4:	mov	r2, r0
    20f8:	ldr	r3, [pc, #508]	; 22fc <sp3_init+0x2110>
    20fc:	ldr	r3, [r2, r3]
    2100:	add	r3, r3, #192	; 0xc0
    2104:	ldr	r3, [r3]
    2108:	ldr	r1, [pc, #552]	; 2338 <sp3_init+0x214c>
    210c:	mov	r0, r3
    2110:	bl	0 <coda_type_number_set_unit>
    2114:	bl	0 <__aeabi_read_tp>
    2118:	mov	r2, r0
    211c:	ldr	r3, [pc, #472]	; 22fc <sp3_init+0x2110>
    2120:	ldr	r3, [r2, r3]
    2124:	add	r4, r3, #196	; 0xc4
    2128:	mov	r1, #3
    212c:	mov	r0, #9
    2130:	bl	0 <coda_type_number_new>
    2134:	mov	r3, r0
    2138:	str	r3, [r4]
    213c:	bl	0 <__aeabi_read_tp>
    2140:	mov	r2, r0
    2144:	ldr	r3, [pc, #432]	; 22fc <sp3_init+0x2110>
    2148:	ldr	r3, [r2, r3]
    214c:	add	r3, r3, #196	; 0xc4
    2150:	ldr	r3, [r3]
    2154:	ldr	r1, [fp, #-20]	; 0xffffffec
    2158:	mov	r0, r3
    215c:	bl	0 <coda_type_number_set_endianness>
    2160:	bl	0 <__aeabi_read_tp>
    2164:	mov	r2, r0
    2168:	ldr	r3, [pc, #396]	; 22fc <sp3_init+0x2110>
    216c:	ldr	r3, [r2, r3]
    2170:	add	r3, r3, #196	; 0xc4
    2174:	ldr	r1, [r3]
    2178:	mov	r2, #64	; 0x40
    217c:	mov	r3, #0
    2180:	mov	r0, r1
    2184:	bl	0 <coda_type_set_bit_size>
    2188:	bl	0 <__aeabi_read_tp>
    218c:	mov	r2, r0
    2190:	ldr	r3, [pc, #356]	; 22fc <sp3_init+0x2110>
    2194:	ldr	r3, [r2, r3]
    2198:	add	r3, r3, #196	; 0xc4
    219c:	ldr	r3, [r3]
    21a0:	ldr	r1, [pc, #412]	; 2344 <sp3_init+0x2158>
    21a4:	mov	r0, r3
    21a8:	bl	0 <coda_type_set_description>
    21ac:	bl	0 <__aeabi_read_tp>
    21b0:	mov	r2, r0
    21b4:	ldr	r3, [pc, #320]	; 22fc <sp3_init+0x2110>
    21b8:	ldr	r3, [r2, r3]
    21bc:	add	r3, r3, #196	; 0xc4
    21c0:	ldr	r3, [r3]
    21c4:	ldr	r1, [pc, #380]	; 2348 <sp3_init+0x215c>
    21c8:	mov	r0, r3
    21cc:	bl	0 <coda_type_number_set_unit>
    21d0:	bl	0 <__aeabi_read_tp>
    21d4:	mov	r2, r0
    21d8:	ldr	r3, [pc, #284]	; 22fc <sp3_init+0x2110>
    21dc:	ldr	r3, [r2, r3]
    21e0:	add	r4, r3, #200	; 0xc8
    21e4:	mov	r1, #2
    21e8:	mov	r0, #9
    21ec:	bl	0 <coda_type_number_new>
    21f0:	mov	r3, r0
    21f4:	str	r3, [r4]
    21f8:	bl	0 <__aeabi_read_tp>
    21fc:	mov	r2, r0
    2200:	ldr	r3, [pc, #244]	; 22fc <sp3_init+0x2110>
    2204:	ldr	r3, [r2, r3]
    2208:	add	r3, r3, #200	; 0xc8
    220c:	ldr	r3, [r3]
    2210:	ldr	r1, [fp, #-20]	; 0xffffffec
    2214:	mov	r0, r3
    2218:	bl	0 <coda_type_number_set_endianness>
    221c:	bl	0 <__aeabi_read_tp>
    2220:	mov	r2, r0
    2224:	ldr	r3, [pc, #208]	; 22fc <sp3_init+0x2110>
    2228:	ldr	r3, [r2, r3]
    222c:	add	r3, r3, #200	; 0xc8
    2230:	ldr	r3, [r3]
    2234:	mov	r1, #0
    2238:	mov	r0, r3
    223c:	bl	0 <coda_type_set_read_type>
    2240:	bl	0 <__aeabi_read_tp>
    2244:	mov	r2, r0
    2248:	ldr	r3, [pc, #172]	; 22fc <sp3_init+0x2110>
    224c:	ldr	r3, [r2, r3]
    2250:	add	r3, r3, #200	; 0xc8
    2254:	ldr	r1, [r3]
    2258:	mov	r2, #8
    225c:	mov	r3, #0
    2260:	mov	r0, r1
    2264:	bl	0 <coda_type_set_bit_size>
    2268:	bl	0 <__aeabi_read_tp>
    226c:	mov	r2, r0
    2270:	ldr	r3, [pc, #132]	; 22fc <sp3_init+0x2110>
    2274:	ldr	r3, [r2, r3]
    2278:	add	r3, r3, #200	; 0xc8
    227c:	ldr	r3, [r3]
    2280:	ldr	r1, [pc, #196]	; 234c <sp3_init+0x2160>
    2284:	mov	r0, r3
    2288:	bl	0 <coda_type_set_description>
    228c:	bl	0 <__aeabi_read_tp>
    2290:	mov	r2, r0
    2294:	ldr	r3, [pc, #96]	; 22fc <sp3_init+0x2110>
    2298:	ldr	r3, [r2, r3]
    229c:	add	r4, r3, #204	; 0xcc
    22a0:	mov	r1, #2
    22a4:	mov	r0, #9
    22a8:	bl	0 <coda_type_number_new>
    22ac:	mov	r3, r0
    22b0:	str	r3, [r4]
    22b4:	bl	0 <__aeabi_read_tp>
    22b8:	mov	r2, r0
    22bc:	ldr	r3, [pc, #56]	; 22fc <sp3_init+0x2110>
    22c0:	ldr	r3, [r2, r3]
    22c4:	add	r3, r3, #204	; 0xcc
    22c8:	ldr	r3, [r3]
    22cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    22d0:	mov	r0, r3
    22d4:	bl	0 <coda_type_number_set_endianness>
    22d8:	bl	0 <__aeabi_read_tp>
    22dc:	mov	r2, r0
    22e0:	ldr	r3, [pc, #20]	; 22fc <sp3_init+0x2110>
    22e4:	ldr	r3, [r2, r3]
    22e8:	add	r3, r3, #204	; 0xcc
    22ec:	ldr	r3, [r3]
    22f0:	mov	r1, #0
    22f4:	b	23d0 <sp3_init+0x21e4>
    22f8:	.word	0x00000330
    22fc:	.word	0x00000000
    2300:	.word	0x00000344
    2304:	.word	0x00000358
    2308:	.word	0x0000036c
    230c:	.word	0x00000384
    2310:	.word	0x00000398
    2314:	.word	0x000003ac
    2318:	.word	0x000003bc
    231c:	.word	0x000003d0
    2320:	.word	0x000003d8
    2324:	.word	0x000003dc
    2328:	.word	0x000003e4
    232c:	.word	0x000003ec
    2330:	.word	0x000003f8
    2334:	.word	0x0000045c
    2338:	.word	0x00000468
    233c:	.word	0x00000470
    2340:	.word	0x0000047c
    2344:	.word	0x00000488
    2348:	.word	0x0000049c
    234c:	.word	0x000004a8
    2350:	.word	0x000004c8
    2354:	.word	0x000004e8
    2358:	.word	0x00000508
    235c:	.word	0x00000530
    2360:	.word	0x00000548
    2364:	.word	0x00000554
    2368:	.word	0x0000053c
    236c:	.word	0x00000560
    2370:	.word	0x00000570
    2374:	.word	0x000003fc
    2378:	.word	0x0000040c
    237c:	.word	0x0000041c
    2380:	.word	0x0000042c
    2384:	.word	0x0000043c
    2388:	.word	0x0000044c
    238c:	.word	0x0000057c
    2390:	.word	0x00000584
    2394:	.word	0x00000594
    2398:	.word	0x000005a0
    239c:	.word	0x000005ac
    23a0:	.word	0x000005bc
    23a4:	.word	0x000005c8
    23a8:	.word	0x000005d0
    23ac:	.word	0x000005dc
    23b0:	.word	0x000005e8
    23b4:	.word	0x000005f8
    23b8:	.word	0x00000604
    23bc:	.word	0x00000610
    23c0:	.word	0x00000620
    23c4:	.word	0x00000628
    23c8:	.word	0x00000638
    23cc:	.word	0x00000000
    23d0:	mov	r0, r3
    23d4:	bl	0 <coda_type_set_read_type>
    23d8:	bl	0 <__aeabi_read_tp>
    23dc:	mov	r2, r0
    23e0:	ldr	r3, [pc, #-28]	; 23cc <sp3_init+0x21e0>
    23e4:	ldr	r3, [r2, r3]
    23e8:	add	r3, r3, #204	; 0xcc
    23ec:	ldr	r1, [r3]
    23f0:	mov	r2, #8
    23f4:	mov	r3, #0
    23f8:	mov	r0, r1
    23fc:	bl	0 <coda_type_set_bit_size>
    2400:	bl	0 <__aeabi_read_tp>
    2404:	mov	r2, r0
    2408:	ldr	r3, [pc, #-68]	; 23cc <sp3_init+0x21e0>
    240c:	ldr	r3, [r2, r3]
    2410:	add	r3, r3, #204	; 0xcc
    2414:	ldr	r3, [r3]
    2418:	ldr	r1, [pc, #-208]	; 2350 <sp3_init+0x2164>
    241c:	mov	r0, r3
    2420:	bl	0 <coda_type_set_description>
    2424:	bl	0 <__aeabi_read_tp>
    2428:	mov	r2, r0
    242c:	ldr	r3, [pc, #-104]	; 23cc <sp3_init+0x21e0>
    2430:	ldr	r3, [r2, r3]
    2434:	add	r4, r3, #208	; 0xd0
    2438:	mov	r1, #2
    243c:	mov	r0, #9
    2440:	bl	0 <coda_type_number_new>
    2444:	mov	r3, r0
    2448:	str	r3, [r4]
    244c:	bl	0 <__aeabi_read_tp>
    2450:	mov	r2, r0
    2454:	ldr	r3, [pc, #-144]	; 23cc <sp3_init+0x21e0>
    2458:	ldr	r3, [r2, r3]
    245c:	add	r3, r3, #208	; 0xd0
    2460:	ldr	r3, [r3]
    2464:	ldr	r1, [fp, #-20]	; 0xffffffec
    2468:	mov	r0, r3
    246c:	bl	0 <coda_type_number_set_endianness>
    2470:	bl	0 <__aeabi_read_tp>
    2474:	mov	r2, r0
    2478:	ldr	r3, [pc, #-180]	; 23cc <sp3_init+0x21e0>
    247c:	ldr	r3, [r2, r3]
    2480:	add	r3, r3, #208	; 0xd0
    2484:	ldr	r3, [r3]
    2488:	mov	r1, #0
    248c:	mov	r0, r3
    2490:	bl	0 <coda_type_set_read_type>
    2494:	bl	0 <__aeabi_read_tp>
    2498:	mov	r2, r0
    249c:	ldr	r3, [pc, #-216]	; 23cc <sp3_init+0x21e0>
    24a0:	ldr	r3, [r2, r3]
    24a4:	add	r3, r3, #208	; 0xd0
    24a8:	ldr	r1, [r3]
    24ac:	mov	r2, #8
    24b0:	mov	r3, #0
    24b4:	mov	r0, r1
    24b8:	bl	0 <coda_type_set_bit_size>
    24bc:	bl	0 <__aeabi_read_tp>
    24c0:	mov	r2, r0
    24c4:	ldr	r3, [pc, #-256]	; 23cc <sp3_init+0x21e0>
    24c8:	ldr	r3, [r2, r3]
    24cc:	add	r3, r3, #208	; 0xd0
    24d0:	ldr	r3, [r3]
    24d4:	ldr	r1, [pc, #-392]	; 2354 <sp3_init+0x2168>
    24d8:	mov	r0, r3
    24dc:	bl	0 <coda_type_set_description>
    24e0:	bl	0 <__aeabi_read_tp>
    24e4:	mov	r2, r0
    24e8:	ldr	r3, [pc, #-292]	; 23cc <sp3_init+0x21e0>
    24ec:	ldr	r3, [r2, r3]
    24f0:	add	r4, r3, #212	; 0xd4
    24f4:	mov	r1, #2
    24f8:	mov	r0, #9
    24fc:	bl	0 <coda_type_number_new>
    2500:	mov	r3, r0
    2504:	str	r3, [r4]
    2508:	bl	0 <__aeabi_read_tp>
    250c:	mov	r2, r0
    2510:	ldr	r3, [pc, #-332]	; 23cc <sp3_init+0x21e0>
    2514:	ldr	r3, [r2, r3]
    2518:	add	r3, r3, #212	; 0xd4
    251c:	ldr	r3, [r3]
    2520:	ldr	r1, [fp, #-20]	; 0xffffffec
    2524:	mov	r0, r3
    2528:	bl	0 <coda_type_number_set_endianness>
    252c:	bl	0 <__aeabi_read_tp>
    2530:	mov	r2, r0
    2534:	ldr	r3, [pc, #-368]	; 23cc <sp3_init+0x21e0>
    2538:	ldr	r3, [r2, r3]
    253c:	add	r3, r3, #212	; 0xd4
    2540:	ldr	r3, [r3]
    2544:	mov	r1, #2
    2548:	mov	r0, r3
    254c:	bl	0 <coda_type_set_read_type>
    2550:	bl	0 <__aeabi_read_tp>
    2554:	mov	r2, r0
    2558:	ldr	r3, [pc, #-404]	; 23cc <sp3_init+0x21e0>
    255c:	ldr	r3, [r2, r3]
    2560:	add	r3, r3, #212	; 0xd4
    2564:	ldr	r1, [r3]
    2568:	mov	r2, #16
    256c:	mov	r3, #0
    2570:	mov	r0, r1
    2574:	bl	0 <coda_type_set_bit_size>
    2578:	bl	0 <__aeabi_read_tp>
    257c:	mov	r2, r0
    2580:	ldr	r3, [pc, #-444]	; 23cc <sp3_init+0x21e0>
    2584:	ldr	r3, [r2, r3]
    2588:	add	r3, r3, #212	; 0xd4
    258c:	ldr	r3, [r3]
    2590:	ldr	r1, [pc, #-576]	; 2358 <sp3_init+0x216c>
    2594:	mov	r0, r3
    2598:	bl	0 <coda_type_set_description>
    259c:	bl	0 <__aeabi_read_tp>
    25a0:	mov	r2, r0
    25a4:	ldr	r3, [pc, #-480]	; 23cc <sp3_init+0x21e0>
    25a8:	ldr	r3, [r2, r3]
    25ac:	add	r4, r3, #220	; 0xdc
    25b0:	mov	r1, #2
    25b4:	mov	r0, #9
    25b8:	bl	0 <coda_type_number_new>
    25bc:	mov	r3, r0
    25c0:	str	r3, [r4]
    25c4:	bl	0 <__aeabi_read_tp>
    25c8:	mov	r2, r0
    25cc:	ldr	r3, [pc, #-520]	; 23cc <sp3_init+0x21e0>
    25d0:	ldr	r3, [r2, r3]
    25d4:	add	r3, r3, #220	; 0xdc
    25d8:	ldr	r3, [r3]
    25dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    25e0:	mov	r0, r3
    25e4:	bl	0 <coda_type_number_set_endianness>
    25e8:	bl	0 <__aeabi_read_tp>
    25ec:	mov	r2, r0
    25f0:	ldr	r3, [pc, #-556]	; 23cc <sp3_init+0x21e0>
    25f4:	ldr	r3, [r2, r3]
    25f8:	add	r3, r3, #220	; 0xdc
    25fc:	ldr	r3, [r3]
    2600:	mov	r1, #2
    2604:	mov	r0, r3
    2608:	bl	0 <coda_type_set_read_type>
    260c:	bl	0 <__aeabi_read_tp>
    2610:	mov	r2, r0
    2614:	ldr	r3, [pc, #-592]	; 23cc <sp3_init+0x21e0>
    2618:	ldr	r3, [r2, r3]
    261c:	add	r3, r3, #220	; 0xdc
    2620:	ldr	r1, [r3]
    2624:	mov	r2, #16
    2628:	mov	r3, #0
    262c:	mov	r0, r1
    2630:	bl	0 <coda_type_set_bit_size>
    2634:	bl	0 <__aeabi_read_tp>
    2638:	mov	r2, r0
    263c:	ldr	r3, [pc, #-632]	; 23cc <sp3_init+0x21e0>
    2640:	ldr	r3, [r2, r3]
    2644:	add	r3, r3, #220	; 0xdc
    2648:	ldr	r3, [r3]
    264c:	ldr	r1, [pc, #-760]	; 235c <sp3_init+0x2170>
    2650:	mov	r0, r3
    2654:	bl	0 <coda_type_set_description>
    2658:	bl	0 <__aeabi_read_tp>
    265c:	mov	r2, r0
    2660:	ldr	r3, [pc, #-668]	; 23cc <sp3_init+0x21e0>
    2664:	ldr	r3, [r2, r3]
    2668:	add	r3, r3, #220	; 0xdc
    266c:	ldr	r3, [r3]
    2670:	ldr	r1, [pc, #-784]	; 2368 <sp3_init+0x217c>
    2674:	mov	r0, r3
    2678:	bl	0 <coda_type_number_set_unit>
    267c:	bl	0 <__aeabi_read_tp>
    2680:	mov	r2, r0
    2684:	ldr	r3, [pc, #-704]	; 23cc <sp3_init+0x21e0>
    2688:	ldr	r3, [r2, r3]
    268c:	add	r4, r3, #224	; 0xe0
    2690:	mov	r1, #2
    2694:	mov	r0, #9
    2698:	bl	0 <coda_type_number_new>
    269c:	mov	r3, r0
    26a0:	str	r3, [r4]
    26a4:	bl	0 <__aeabi_read_tp>
    26a8:	mov	r2, r0
    26ac:	ldr	r3, [pc, #-744]	; 23cc <sp3_init+0x21e0>
    26b0:	ldr	r3, [r2, r3]
    26b4:	add	r3, r3, #224	; 0xe0
    26b8:	ldr	r3, [r3]
    26bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    26c0:	mov	r0, r3
    26c4:	bl	0 <coda_type_number_set_endianness>
    26c8:	bl	0 <__aeabi_read_tp>
    26cc:	mov	r2, r0
    26d0:	ldr	r3, [pc, #-780]	; 23cc <sp3_init+0x21e0>
    26d4:	ldr	r3, [r2, r3]
    26d8:	add	r3, r3, #224	; 0xe0
    26dc:	ldr	r3, [r3]
    26e0:	mov	r1, #2
    26e4:	mov	r0, r3
    26e8:	bl	0 <coda_type_set_read_type>
    26ec:	bl	0 <__aeabi_read_tp>
    26f0:	mov	r2, r0
    26f4:	ldr	r3, [pc, #-816]	; 23cc <sp3_init+0x21e0>
    26f8:	ldr	r3, [r2, r3]
    26fc:	add	r3, r3, #224	; 0xe0
    2700:	ldr	r1, [r3]
    2704:	mov	r2, #16
    2708:	mov	r3, #0
    270c:	mov	r0, r1
    2710:	bl	0 <coda_type_set_bit_size>
    2714:	bl	0 <__aeabi_read_tp>
    2718:	mov	r2, r0
    271c:	ldr	r3, [pc, #-856]	; 23cc <sp3_init+0x21e0>
    2720:	ldr	r3, [r2, r3]
    2724:	add	r3, r3, #224	; 0xe0
    2728:	ldr	r3, [r3]
    272c:	ldr	r1, [pc, #-980]	; 2360 <sp3_init+0x2174>
    2730:	mov	r0, r3
    2734:	bl	0 <coda_type_set_description>
    2738:	bl	0 <__aeabi_read_tp>
    273c:	mov	r2, r0
    2740:	ldr	r3, [pc, #-892]	; 23cc <sp3_init+0x21e0>
    2744:	ldr	r3, [r2, r3]
    2748:	add	r3, r3, #224	; 0xe0
    274c:	ldr	r3, [r3]
    2750:	ldr	r1, [pc, #-1008]	; 2368 <sp3_init+0x217c>
    2754:	mov	r0, r3
    2758:	bl	0 <coda_type_number_set_unit>
    275c:	bl	0 <__aeabi_read_tp>
    2760:	mov	r2, r0
    2764:	ldr	r3, [pc, #-928]	; 23cc <sp3_init+0x21e0>
    2768:	ldr	r3, [r2, r3]
    276c:	add	r4, r3, #228	; 0xe4
    2770:	mov	r1, #2
    2774:	mov	r0, #9
    2778:	bl	0 <coda_type_number_new>
    277c:	mov	r3, r0
    2780:	str	r3, [r4]
    2784:	bl	0 <__aeabi_read_tp>
    2788:	mov	r2, r0
    278c:	ldr	r3, [pc, #-968]	; 23cc <sp3_init+0x21e0>
    2790:	ldr	r3, [r2, r3]
    2794:	add	r3, r3, #228	; 0xe4
    2798:	ldr	r3, [r3]
    279c:	ldr	r1, [fp, #-20]	; 0xffffffec
    27a0:	mov	r0, r3
    27a4:	bl	0 <coda_type_number_set_endianness>
    27a8:	bl	0 <__aeabi_read_tp>
    27ac:	mov	r2, r0
    27b0:	ldr	r3, [pc, #-1004]	; 23cc <sp3_init+0x21e0>
    27b4:	ldr	r3, [r2, r3]
    27b8:	add	r3, r3, #228	; 0xe4
    27bc:	ldr	r3, [r3]
    27c0:	mov	r1, #2
    27c4:	mov	r0, r3
    27c8:	bl	0 <coda_type_set_read_type>
    27cc:	bl	0 <__aeabi_read_tp>
    27d0:	mov	r2, r0
    27d4:	ldr	r3, [pc, #-1040]	; 23cc <sp3_init+0x21e0>
    27d8:	ldr	r3, [r2, r3]
    27dc:	add	r3, r3, #228	; 0xe4
    27e0:	ldr	r1, [r3]
    27e4:	mov	r2, #16
    27e8:	mov	r3, #0
    27ec:	mov	r0, r1
    27f0:	bl	0 <coda_type_set_bit_size>
    27f4:	bl	0 <__aeabi_read_tp>
    27f8:	mov	r2, r0
    27fc:	ldr	r3, [pc, #-1080]	; 23cc <sp3_init+0x21e0>
    2800:	ldr	r3, [r2, r3]
    2804:	add	r3, r3, #228	; 0xe4
    2808:	ldr	r3, [r3]
    280c:	ldr	r1, [pc, #-1200]	; 2364 <sp3_init+0x2178>
    2810:	mov	r0, r3
    2814:	bl	0 <coda_type_set_description>
    2818:	bl	0 <__aeabi_read_tp>
    281c:	mov	r2, r0
    2820:	ldr	r3, [pc, #-1116]	; 23cc <sp3_init+0x21e0>
    2824:	ldr	r3, [r2, r3]
    2828:	add	r3, r3, #228	; 0xe4
    282c:	ldr	r3, [r3]
    2830:	ldr	r1, [pc, #-1232]	; 2368 <sp3_init+0x217c>
    2834:	mov	r0, r3
    2838:	bl	0 <coda_type_number_set_unit>
    283c:	bl	0 <__aeabi_read_tp>
    2840:	mov	r2, r0
    2844:	ldr	r3, [pc, #-1152]	; 23cc <sp3_init+0x21e0>
    2848:	ldr	r3, [r2, r3]
    284c:	add	r4, r3, #232	; 0xe8
    2850:	mov	r1, #2
    2854:	mov	r0, #9
    2858:	bl	0 <coda_type_number_new>
    285c:	mov	r3, r0
    2860:	str	r3, [r4]
    2864:	bl	0 <__aeabi_read_tp>
    2868:	mov	r2, r0
    286c:	ldr	r3, [pc, #-1192]	; 23cc <sp3_init+0x21e0>
    2870:	ldr	r3, [r2, r3]
    2874:	add	r3, r3, #232	; 0xe8
    2878:	ldr	r3, [r3]
    287c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2880:	mov	r0, r3
    2884:	bl	0 <coda_type_number_set_endianness>
    2888:	bl	0 <__aeabi_read_tp>
    288c:	mov	r2, r0
    2890:	ldr	r3, [pc, #-1228]	; 23cc <sp3_init+0x21e0>
    2894:	ldr	r3, [r2, r3]
    2898:	add	r3, r3, #232	; 0xe8
    289c:	ldr	r3, [r3]
    28a0:	mov	r1, #2
    28a4:	mov	r0, r3
    28a8:	bl	0 <coda_type_set_read_type>
    28ac:	bl	0 <__aeabi_read_tp>
    28b0:	mov	r2, r0
    28b4:	ldr	r3, [pc, #-1264]	; 23cc <sp3_init+0x21e0>
    28b8:	ldr	r3, [r2, r3]
    28bc:	add	r3, r3, #232	; 0xe8
    28c0:	ldr	r1, [r3]
    28c4:	mov	r2, #16
    28c8:	mov	r3, #0
    28cc:	mov	r0, r1
    28d0:	bl	0 <coda_type_set_bit_size>
    28d4:	bl	0 <__aeabi_read_tp>
    28d8:	mov	r2, r0
    28dc:	ldr	r3, [pc, #-1304]	; 23cc <sp3_init+0x21e0>
    28e0:	ldr	r3, [r2, r3]
    28e4:	add	r3, r3, #232	; 0xe8
    28e8:	ldr	r3, [r3]
    28ec:	ldr	r1, [pc, #-1416]	; 236c <sp3_init+0x2180>
    28f0:	mov	r0, r3
    28f4:	bl	0 <coda_type_set_description>
    28f8:	bl	0 <__aeabi_read_tp>
    28fc:	mov	r2, r0
    2900:	ldr	r3, [pc, #-1340]	; 23cc <sp3_init+0x21e0>
    2904:	ldr	r3, [r2, r3]
    2908:	add	r3, r3, #232	; 0xe8
    290c:	ldr	r3, [r3]
    2910:	ldr	r1, [pc, #-1448]	; 2370 <sp3_init+0x2184>
    2914:	mov	r0, r3
    2918:	bl	0 <coda_type_number_set_unit>
    291c:	bl	0 <__aeabi_read_tp>
    2920:	mov	r2, r0
    2924:	ldr	r3, [pc, #-1376]	; 23cc <sp3_init+0x21e0>
    2928:	ldr	r3, [r2, r3]
    292c:	add	r4, r3, #236	; 0xec
    2930:	mov	r1, #2
    2934:	mov	r0, #9
    2938:	bl	0 <coda_type_number_new>
    293c:	mov	r3, r0
    2940:	str	r3, [r4]
    2944:	bl	0 <__aeabi_read_tp>
    2948:	mov	r2, r0
    294c:	ldr	r3, [pc, #-1416]	; 23cc <sp3_init+0x21e0>
    2950:	ldr	r3, [r2, r3]
    2954:	add	r3, r3, #236	; 0xec
    2958:	ldr	r3, [r3]
    295c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2960:	mov	r0, r3
    2964:	bl	0 <coda_type_number_set_endianness>
    2968:	bl	0 <__aeabi_read_tp>
    296c:	mov	r2, r0
    2970:	ldr	r3, [pc, #-1452]	; 23cc <sp3_init+0x21e0>
    2974:	ldr	r3, [r2, r3]
    2978:	add	r3, r3, #236	; 0xec
    297c:	ldr	r3, [r3]
    2980:	mov	r1, #4
    2984:	mov	r0, r3
    2988:	bl	0 <coda_type_set_read_type>
    298c:	bl	0 <__aeabi_read_tp>
    2990:	mov	r2, r0
    2994:	ldr	r3, [pc, #-1488]	; 23cc <sp3_init+0x21e0>
    2998:	ldr	r3, [r2, r3]
    299c:	add	r3, r3, #236	; 0xec
    29a0:	ldr	r1, [r3]
    29a4:	mov	r2, #32
    29a8:	mov	r3, #0
    29ac:	mov	r0, r1
    29b0:	bl	0 <coda_type_set_bit_size>
    29b4:	bl	0 <__aeabi_read_tp>
    29b8:	mov	r2, r0
    29bc:	ldr	r3, [pc, #-1528]	; 23cc <sp3_init+0x21e0>
    29c0:	ldr	r3, [r2, r3]
    29c4:	add	r3, r3, #236	; 0xec
    29c8:	ldr	r3, [r3]
    29cc:	ldr	r1, [pc, #-1632]	; 2374 <sp3_init+0x2188>
    29d0:	mov	r0, r3
    29d4:	bl	0 <coda_type_set_description>
    29d8:	bl	0 <__aeabi_read_tp>
    29dc:	mov	r2, r0
    29e0:	ldr	r3, [pc, #-1564]	; 23cc <sp3_init+0x21e0>
    29e4:	ldr	r3, [r2, r3]
    29e8:	add	r4, r3, #240	; 0xf0
    29ec:	mov	r1, #2
    29f0:	mov	r0, #9
    29f4:	bl	0 <coda_type_number_new>
    29f8:	mov	r3, r0
    29fc:	str	r3, [r4]
    2a00:	bl	0 <__aeabi_read_tp>
    2a04:	mov	r2, r0
    2a08:	ldr	r3, [pc, #-1604]	; 23cc <sp3_init+0x21e0>
    2a0c:	ldr	r3, [r2, r3]
    2a10:	add	r3, r3, #240	; 0xf0
    2a14:	ldr	r3, [r3]
    2a18:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a1c:	mov	r0, r3
    2a20:	bl	0 <coda_type_number_set_endianness>
    2a24:	bl	0 <__aeabi_read_tp>
    2a28:	mov	r2, r0
    2a2c:	ldr	r3, [pc, #-1640]	; 23cc <sp3_init+0x21e0>
    2a30:	ldr	r3, [r2, r3]
    2a34:	add	r3, r3, #240	; 0xf0
    2a38:	ldr	r3, [r3]
    2a3c:	mov	r1, #4
    2a40:	mov	r0, r3
    2a44:	bl	0 <coda_type_set_read_type>
    2a48:	bl	0 <__aeabi_read_tp>
    2a4c:	mov	r2, r0
    2a50:	ldr	r3, [pc, #-1676]	; 23cc <sp3_init+0x21e0>
    2a54:	ldr	r3, [r2, r3]
    2a58:	add	r3, r3, #240	; 0xf0
    2a5c:	ldr	r1, [r3]
    2a60:	mov	r2, #32
    2a64:	mov	r3, #0
    2a68:	mov	r0, r1
    2a6c:	bl	0 <coda_type_set_bit_size>
    2a70:	bl	0 <__aeabi_read_tp>
    2a74:	mov	r2, r0
    2a78:	ldr	r3, [pc, #-1716]	; 23cc <sp3_init+0x21e0>
    2a7c:	ldr	r3, [r2, r3]
    2a80:	add	r3, r3, #240	; 0xf0
    2a84:	ldr	r3, [r3]
    2a88:	ldr	r1, [pc, #-1816]	; 2378 <sp3_init+0x218c>
    2a8c:	mov	r0, r3
    2a90:	bl	0 <coda_type_set_description>
    2a94:	bl	0 <__aeabi_read_tp>
    2a98:	mov	r2, r0
    2a9c:	ldr	r3, [pc, #-1752]	; 23cc <sp3_init+0x21e0>
    2aa0:	ldr	r3, [r2, r3]
    2aa4:	add	r4, r3, #244	; 0xf4
    2aa8:	mov	r1, #2
    2aac:	mov	r0, #9
    2ab0:	bl	0 <coda_type_number_new>
    2ab4:	mov	r3, r0
    2ab8:	str	r3, [r4]
    2abc:	bl	0 <__aeabi_read_tp>
    2ac0:	mov	r2, r0
    2ac4:	ldr	r3, [pc, #-1792]	; 23cc <sp3_init+0x21e0>
    2ac8:	ldr	r3, [r2, r3]
    2acc:	add	r3, r3, #244	; 0xf4
    2ad0:	ldr	r3, [r3]
    2ad4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ad8:	mov	r0, r3
    2adc:	bl	0 <coda_type_number_set_endianness>
    2ae0:	bl	0 <__aeabi_read_tp>
    2ae4:	mov	r2, r0
    2ae8:	ldr	r3, [pc, #-1828]	; 23cc <sp3_init+0x21e0>
    2aec:	ldr	r3, [r2, r3]
    2af0:	add	r3, r3, #244	; 0xf4
    2af4:	ldr	r3, [r3]
    2af8:	mov	r1, #4
    2afc:	mov	r0, r3
    2b00:	bl	0 <coda_type_set_read_type>
    2b04:	bl	0 <__aeabi_read_tp>
    2b08:	mov	r2, r0
    2b0c:	ldr	r3, [pc, #-1864]	; 23cc <sp3_init+0x21e0>
    2b10:	ldr	r3, [r2, r3]
    2b14:	add	r3, r3, #244	; 0xf4
    2b18:	ldr	r1, [r3]
    2b1c:	mov	r2, #32
    2b20:	mov	r3, #0
    2b24:	mov	r0, r1
    2b28:	bl	0 <coda_type_set_bit_size>
    2b2c:	bl	0 <__aeabi_read_tp>
    2b30:	mov	r2, r0
    2b34:	ldr	r3, [pc, #-1904]	; 23cc <sp3_init+0x21e0>
    2b38:	ldr	r3, [r2, r3]
    2b3c:	add	r3, r3, #244	; 0xf4
    2b40:	ldr	r3, [r3]
    2b44:	ldr	r1, [pc, #-2000]	; 237c <sp3_init+0x2190>
    2b48:	mov	r0, r3
    2b4c:	bl	0 <coda_type_set_description>
    2b50:	bl	0 <__aeabi_read_tp>
    2b54:	mov	r2, r0
    2b58:	ldr	r3, [pc, #-1940]	; 23cc <sp3_init+0x21e0>
    2b5c:	ldr	r3, [r2, r3]
    2b60:	add	r4, r3, #248	; 0xf8
    2b64:	mov	r1, #2
    2b68:	mov	r0, #9
    2b6c:	bl	0 <coda_type_number_new>
    2b70:	mov	r3, r0
    2b74:	str	r3, [r4]
    2b78:	bl	0 <__aeabi_read_tp>
    2b7c:	mov	r2, r0
    2b80:	ldr	r3, [pc, #-1980]	; 23cc <sp3_init+0x21e0>
    2b84:	ldr	r3, [r2, r3]
    2b88:	add	r3, r3, #248	; 0xf8
    2b8c:	ldr	r3, [r3]
    2b90:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b94:	mov	r0, r3
    2b98:	bl	0 <coda_type_number_set_endianness>
    2b9c:	bl	0 <__aeabi_read_tp>
    2ba0:	mov	r2, r0
    2ba4:	ldr	r3, [pc, #-2016]	; 23cc <sp3_init+0x21e0>
    2ba8:	ldr	r3, [r2, r3]
    2bac:	add	r3, r3, #248	; 0xf8
    2bb0:	ldr	r3, [r3]
    2bb4:	mov	r1, #4
    2bb8:	mov	r0, r3
    2bbc:	bl	0 <coda_type_set_read_type>
    2bc0:	bl	0 <__aeabi_read_tp>
    2bc4:	mov	r2, r0
    2bc8:	ldr	r3, [pc, #-2052]	; 23cc <sp3_init+0x21e0>
    2bcc:	ldr	r3, [r2, r3]
    2bd0:	add	r3, r3, #248	; 0xf8
    2bd4:	ldr	r1, [r3]
    2bd8:	mov	r2, #32
    2bdc:	mov	r3, #0
    2be0:	mov	r0, r1
    2be4:	bl	0 <coda_type_set_bit_size>
    2be8:	bl	0 <__aeabi_read_tp>
    2bec:	mov	r2, r0
    2bf0:	ldr	r3, [pc, #-2092]	; 23cc <sp3_init+0x21e0>
    2bf4:	ldr	r3, [r2, r3]
    2bf8:	add	r3, r3, #248	; 0xf8
    2bfc:	ldr	r3, [r3]
    2c00:	ldr	r1, [pc, #-2184]	; 2380 <sp3_init+0x2194>
    2c04:	mov	r0, r3
    2c08:	bl	0 <coda_type_set_description>
    2c0c:	bl	0 <__aeabi_read_tp>
    2c10:	mov	r2, r0
    2c14:	ldr	r3, [pc, #-2128]	; 23cc <sp3_init+0x21e0>
    2c18:	ldr	r3, [r2, r3]
    2c1c:	add	r4, r3, #252	; 0xfc
    2c20:	mov	r1, #2
    2c24:	mov	r0, #9
    2c28:	bl	0 <coda_type_number_new>
    2c2c:	mov	r3, r0
    2c30:	str	r3, [r4]
    2c34:	bl	0 <__aeabi_read_tp>
    2c38:	mov	r2, r0
    2c3c:	ldr	r3, [pc, #-2168]	; 23cc <sp3_init+0x21e0>
    2c40:	ldr	r3, [r2, r3]
    2c44:	add	r3, r3, #252	; 0xfc
    2c48:	ldr	r3, [r3]
    2c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c50:	mov	r0, r3
    2c54:	bl	0 <coda_type_number_set_endianness>
    2c58:	bl	0 <__aeabi_read_tp>
    2c5c:	mov	r2, r0
    2c60:	ldr	r3, [pc, #-2204]	; 23cc <sp3_init+0x21e0>
    2c64:	ldr	r3, [r2, r3]
    2c68:	add	r3, r3, #252	; 0xfc
    2c6c:	ldr	r3, [r3]
    2c70:	mov	r1, #4
    2c74:	mov	r0, r3
    2c78:	bl	0 <coda_type_set_read_type>
    2c7c:	bl	0 <__aeabi_read_tp>
    2c80:	mov	r2, r0
    2c84:	ldr	r3, [pc, #-2240]	; 23cc <sp3_init+0x21e0>
    2c88:	ldr	r3, [r2, r3]
    2c8c:	add	r3, r3, #252	; 0xfc
    2c90:	ldr	r1, [r3]
    2c94:	mov	r2, #32
    2c98:	mov	r3, #0
    2c9c:	mov	r0, r1
    2ca0:	bl	0 <coda_type_set_bit_size>
    2ca4:	bl	0 <__aeabi_read_tp>
    2ca8:	mov	r2, r0
    2cac:	ldr	r3, [pc, #-2280]	; 23cc <sp3_init+0x21e0>
    2cb0:	ldr	r3, [r2, r3]
    2cb4:	add	r3, r3, #252	; 0xfc
    2cb8:	ldr	r3, [r3]
    2cbc:	ldr	r1, [pc, #-2368]	; 2384 <sp3_init+0x2198>
    2cc0:	mov	r0, r3
    2cc4:	bl	0 <coda_type_set_description>
    2cc8:	bl	0 <__aeabi_read_tp>
    2ccc:	mov	r2, r0
    2cd0:	ldr	r3, [pc, #-2316]	; 23cc <sp3_init+0x21e0>
    2cd4:	ldr	r3, [r2, r3]
    2cd8:	add	r4, r3, #256	; 0x100
    2cdc:	mov	r1, #2
    2ce0:	mov	r0, #9
    2ce4:	bl	0 <coda_type_number_new>
    2ce8:	mov	r3, r0
    2cec:	str	r3, [r4]
    2cf0:	bl	0 <__aeabi_read_tp>
    2cf4:	mov	r2, r0
    2cf8:	ldr	r3, [pc, #-2356]	; 23cc <sp3_init+0x21e0>
    2cfc:	ldr	r3, [r2, r3]
    2d00:	add	r3, r3, #256	; 0x100
    2d04:	ldr	r3, [r3]
    2d08:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d0c:	mov	r0, r3
    2d10:	bl	0 <coda_type_number_set_endianness>
    2d14:	bl	0 <__aeabi_read_tp>
    2d18:	mov	r2, r0
    2d1c:	ldr	r3, [pc, #-2392]	; 23cc <sp3_init+0x21e0>
    2d20:	ldr	r3, [r2, r3]
    2d24:	add	r3, r3, #256	; 0x100
    2d28:	ldr	r3, [r3]
    2d2c:	mov	r1, #4
    2d30:	mov	r0, r3
    2d34:	bl	0 <coda_type_set_read_type>
    2d38:	bl	0 <__aeabi_read_tp>
    2d3c:	mov	r2, r0
    2d40:	ldr	r3, [pc, #-2428]	; 23cc <sp3_init+0x21e0>
    2d44:	ldr	r3, [r2, r3]
    2d48:	add	r3, r3, #256	; 0x100
    2d4c:	ldr	r1, [r3]
    2d50:	mov	r2, #32
    2d54:	mov	r3, #0
    2d58:	mov	r0, r1
    2d5c:	bl	0 <coda_type_set_bit_size>
    2d60:	bl	0 <__aeabi_read_tp>
    2d64:	mov	r2, r0
    2d68:	ldr	r3, [pc, #-2468]	; 23cc <sp3_init+0x21e0>
    2d6c:	ldr	r3, [r2, r3]
    2d70:	add	r3, r3, #256	; 0x100
    2d74:	ldr	r3, [r3]
    2d78:	ldr	r1, [pc, #-2552]	; 2388 <sp3_init+0x219c>
    2d7c:	mov	r0, r3
    2d80:	bl	0 <coda_type_set_description>
    2d84:	bl	0 <__aeabi_read_tp>
    2d88:	mov	r2, r0
    2d8c:	ldr	r3, [pc, #-2504]	; 23cc <sp3_init+0x21e0>
    2d90:	ldr	r3, [r2, r3]
    2d94:	add	r4, r3, #60	; 0x3c
    2d98:	mov	r0, #9
    2d9c:	bl	0 <coda_type_array_new>
    2da0:	mov	r3, r0
    2da4:	str	r3, [r4]
    2da8:	bl	0 <__aeabi_read_tp>
    2dac:	mov	r2, r0
    2db0:	ldr	r3, [pc, #-2540]	; 23cc <sp3_init+0x21e0>
    2db4:	ldr	r3, [r2, r3]
    2db8:	add	r3, r3, #60	; 0x3c
    2dbc:	ldr	r3, [r3]
    2dc0:	mov	r1, #0
    2dc4:	mov	r0, r3
    2dc8:	bl	0 <coda_type_array_add_variable_dimension>
    2dcc:	bl	0 <__aeabi_read_tp>
    2dd0:	mov	r2, r0
    2dd4:	ldr	r3, [pc, #-2576]	; 23cc <sp3_init+0x21e0>
    2dd8:	ldr	r3, [r2, r3]
    2ddc:	add	r3, r3, #60	; 0x3c
    2de0:	ldr	r2, [r3]
    2de4:	bl	0 <__aeabi_read_tp>
    2de8:	mov	r1, r0
    2dec:	ldr	r3, [pc, #-2600]	; 23cc <sp3_init+0x21e0>
    2df0:	ldr	r3, [r1, r3]
    2df4:	add	r3, r3, #56	; 0x38
    2df8:	ldr	r3, [r3]
    2dfc:	mov	r1, r3
    2e00:	mov	r0, r2
    2e04:	bl	0 <coda_type_array_set_base_type>
    2e08:	bl	0 <__aeabi_read_tp>
    2e0c:	mov	r2, r0
    2e10:	ldr	r3, [pc, #-2636]	; 23cc <sp3_init+0x21e0>
    2e14:	ldr	r3, [r2, r3]
    2e18:	add	r4, r3, #68	; 0x44
    2e1c:	mov	r0, #9
    2e20:	bl	0 <coda_type_array_new>
    2e24:	mov	r3, r0
    2e28:	str	r3, [r4]
    2e2c:	bl	0 <__aeabi_read_tp>
    2e30:	mov	r2, r0
    2e34:	ldr	r3, [pc, #-2672]	; 23cc <sp3_init+0x21e0>
    2e38:	ldr	r3, [r2, r3]
    2e3c:	add	r3, r3, #68	; 0x44
    2e40:	ldr	r3, [r3]
    2e44:	mov	r1, #0
    2e48:	mov	r0, r3
    2e4c:	bl	0 <coda_type_array_add_variable_dimension>
    2e50:	bl	0 <__aeabi_read_tp>
    2e54:	mov	r2, r0
    2e58:	ldr	r3, [pc, #-2708]	; 23cc <sp3_init+0x21e0>
    2e5c:	ldr	r3, [r2, r3]
    2e60:	add	r3, r3, #68	; 0x44
    2e64:	ldr	r2, [r3]
    2e68:	bl	0 <__aeabi_read_tp>
    2e6c:	mov	r1, r0
    2e70:	ldr	r3, [pc, #-2732]	; 23cc <sp3_init+0x21e0>
    2e74:	ldr	r3, [r1, r3]
    2e78:	add	r3, r3, #64	; 0x40
    2e7c:	ldr	r3, [r3]
    2e80:	mov	r1, r3
    2e84:	mov	r0, r2
    2e88:	bl	0 <coda_type_array_set_base_type>
    2e8c:	bl	0 <__aeabi_read_tp>
    2e90:	mov	r2, r0
    2e94:	ldr	r3, [pc, #-2768]	; 23cc <sp3_init+0x21e0>
    2e98:	ldr	r3, [r2, r3]
    2e9c:	add	r4, r3, #284	; 0x11c
    2ea0:	mov	r0, #9
    2ea4:	bl	0 <coda_type_record_new>
    2ea8:	mov	r3, r0
    2eac:	str	r3, [r4]
    2eb0:	ldr	r0, [pc, #-2860]	; 238c <sp3_init+0x21a0>
    2eb4:	bl	0 <coda_type_record_field_new>
    2eb8:	str	r0, [fp, #-24]	; 0xffffffe8
    2ebc:	bl	0 <__aeabi_read_tp>
    2ec0:	mov	r2, r0
    2ec4:	ldr	r3, [pc, #-2816]	; 23cc <sp3_init+0x21e0>
    2ec8:	ldr	r3, [r2, r3]
    2ecc:	ldr	r3, [r3]
    2ed0:	mov	r1, r3
    2ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ed8:	bl	0 <coda_type_record_field_set_type>
    2edc:	bl	0 <__aeabi_read_tp>
    2ee0:	mov	r2, r0
    2ee4:	ldr	r3, [pc, #-2848]	; 23cc <sp3_init+0x21e0>
    2ee8:	ldr	r3, [r2, r3]
    2eec:	add	r3, r3, #284	; 0x11c
    2ef0:	ldr	r3, [r3]
    2ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ef8:	mov	r0, r3
    2efc:	bl	0 <coda_type_record_add_field>
    2f00:	ldr	r0, [pc, #-2936]	; 2390 <sp3_init+0x21a4>
    2f04:	bl	0 <coda_type_record_field_new>
    2f08:	str	r0, [fp, #-24]	; 0xffffffe8
    2f0c:	bl	0 <__aeabi_read_tp>
    2f10:	mov	r2, r0
    2f14:	ldr	r3, [pc, #-2896]	; 23cc <sp3_init+0x21e0>
    2f18:	ldr	r3, [r2, r3]
    2f1c:	add	r3, r3, #8
    2f20:	ldr	r3, [r3]
    2f24:	mov	r1, r3
    2f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f2c:	bl	0 <coda_type_record_field_set_type>
    2f30:	bl	0 <__aeabi_read_tp>
    2f34:	mov	r2, r0
    2f38:	ldr	r3, [pc, #-2932]	; 23cc <sp3_init+0x21e0>
    2f3c:	ldr	r3, [r2, r3]
    2f40:	add	r3, r3, #284	; 0x11c
    2f44:	ldr	r3, [r3]
    2f48:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f4c:	mov	r0, r3
    2f50:	bl	0 <coda_type_record_add_field>
    2f54:	ldr	r0, [pc, #-3016]	; 2394 <sp3_init+0x21a8>
    2f58:	bl	0 <coda_type_record_field_new>
    2f5c:	str	r0, [fp, #-24]	; 0xffffffe8
    2f60:	bl	0 <__aeabi_read_tp>
    2f64:	mov	r2, r0
    2f68:	ldr	r3, [pc, #-2980]	; 23cc <sp3_init+0x21e0>
    2f6c:	ldr	r3, [r2, r3]
    2f70:	add	r3, r3, #12
    2f74:	ldr	r3, [r3]
    2f78:	mov	r1, r3
    2f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f80:	bl	0 <coda_type_record_field_set_type>
    2f84:	bl	0 <__aeabi_read_tp>
    2f88:	mov	r2, r0
    2f8c:	ldr	r3, [pc, #-3016]	; 23cc <sp3_init+0x21e0>
    2f90:	ldr	r3, [r2, r3]
    2f94:	add	r3, r3, #284	; 0x11c
    2f98:	ldr	r3, [r3]
    2f9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2fa0:	mov	r0, r3
    2fa4:	bl	0 <coda_type_record_add_field>
    2fa8:	ldr	r0, [pc, #-3096]	; 2398 <sp3_init+0x21ac>
    2fac:	bl	0 <coda_type_record_field_new>
    2fb0:	str	r0, [fp, #-24]	; 0xffffffe8
    2fb4:	bl	0 <__aeabi_read_tp>
    2fb8:	mov	r2, r0
    2fbc:	ldr	r3, [pc, #-3064]	; 23cc <sp3_init+0x21e0>
    2fc0:	ldr	r3, [r2, r3]
    2fc4:	add	r3, r3, #16
    2fc8:	ldr	r3, [r3]
    2fcc:	mov	r1, r3
    2fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2fd4:	bl	0 <coda_type_record_field_set_type>
    2fd8:	bl	0 <__aeabi_read_tp>
    2fdc:	mov	r2, r0
    2fe0:	ldr	r3, [pc, #-3100]	; 23cc <sp3_init+0x21e0>
    2fe4:	ldr	r3, [r2, r3]
    2fe8:	add	r3, r3, #284	; 0x11c
    2fec:	ldr	r3, [r3]
    2ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ff4:	mov	r0, r3
    2ff8:	bl	0 <coda_type_record_add_field>
    2ffc:	ldr	r0, [pc, #-3176]	; 239c <sp3_init+0x21b0>
    3000:	bl	0 <coda_type_record_field_new>
    3004:	str	r0, [fp, #-24]	; 0xffffffe8
    3008:	bl	0 <__aeabi_read_tp>
    300c:	mov	r2, r0
    3010:	ldr	r3, [pc, #-3148]	; 23cc <sp3_init+0x21e0>
    3014:	ldr	r3, [r2, r3]
    3018:	add	r3, r3, #20
    301c:	ldr	r3, [r3]
    3020:	mov	r1, r3
    3024:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3028:	bl	0 <coda_type_record_field_set_type>
    302c:	bl	0 <__aeabi_read_tp>
    3030:	mov	r2, r0
    3034:	ldr	r3, [pc, #-3184]	; 23cc <sp3_init+0x21e0>
    3038:	ldr	r3, [r2, r3]
    303c:	add	r3, r3, #284	; 0x11c
    3040:	ldr	r3, [r3]
    3044:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3048:	mov	r0, r3
    304c:	bl	0 <coda_type_record_add_field>
    3050:	ldr	r0, [pc, #-3256]	; 23a0 <sp3_init+0x21b4>
    3054:	bl	0 <coda_type_record_field_new>
    3058:	str	r0, [fp, #-24]	; 0xffffffe8
    305c:	bl	0 <__aeabi_read_tp>
    3060:	mov	r2, r0
    3064:	ldr	r3, [pc, #-3232]	; 23cc <sp3_init+0x21e0>
    3068:	ldr	r3, [r2, r3]
    306c:	add	r3, r3, #24
    3070:	ldr	r3, [r3]
    3074:	mov	r1, r3
    3078:	ldr	r0, [fp, #-24]	; 0xffffffe8
    307c:	bl	0 <coda_type_record_field_set_type>
    3080:	bl	0 <__aeabi_read_tp>
    3084:	mov	r2, r0
    3088:	ldr	r3, [pc, #-3268]	; 23cc <sp3_init+0x21e0>
    308c:	ldr	r3, [r2, r3]
    3090:	add	r3, r3, #284	; 0x11c
    3094:	ldr	r3, [r3]
    3098:	ldr	r1, [fp, #-24]	; 0xffffffe8
    309c:	mov	r0, r3
    30a0:	bl	0 <coda_type_record_add_field>
    30a4:	ldr	r0, [pc, #-3336]	; 23a4 <sp3_init+0x21b8>
    30a8:	bl	0 <coda_type_record_field_new>
    30ac:	str	r0, [fp, #-24]	; 0xffffffe8
    30b0:	bl	0 <__aeabi_read_tp>
    30b4:	mov	r2, r0
    30b8:	ldr	r3, [pc, #-3316]	; 23cc <sp3_init+0x21e0>
    30bc:	ldr	r3, [r2, r3]
    30c0:	add	r3, r3, #28
    30c4:	ldr	r3, [r3]
    30c8:	mov	r1, r3
    30cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30d0:	bl	0 <coda_type_record_field_set_type>
    30d4:	bl	0 <__aeabi_read_tp>
    30d8:	mov	r2, r0
    30dc:	ldr	r3, [pc, #-3352]	; 23cc <sp3_init+0x21e0>
    30e0:	ldr	r3, [r2, r3]
    30e4:	add	r3, r3, #284	; 0x11c
    30e8:	ldr	r3, [r3]
    30ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30f0:	mov	r0, r3
    30f4:	bl	0 <coda_type_record_add_field>
    30f8:	ldr	r0, [pc, #-3416]	; 23a8 <sp3_init+0x21bc>
    30fc:	bl	0 <coda_type_record_field_new>
    3100:	str	r0, [fp, #-24]	; 0xffffffe8
    3104:	bl	0 <__aeabi_read_tp>
    3108:	mov	r2, r0
    310c:	ldr	r3, [pc, #-3400]	; 23cc <sp3_init+0x21e0>
    3110:	ldr	r3, [r2, r3]
    3114:	add	r3, r3, #32
    3118:	ldr	r3, [r3]
    311c:	mov	r1, r3
    3120:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3124:	bl	0 <coda_type_record_field_set_type>
    3128:	bl	0 <__aeabi_read_tp>
    312c:	mov	r2, r0
    3130:	ldr	r3, [pc, #-3436]	; 23cc <sp3_init+0x21e0>
    3134:	ldr	r3, [r2, r3]
    3138:	add	r3, r3, #284	; 0x11c
    313c:	ldr	r3, [r3]
    3140:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3144:	mov	r0, r3
    3148:	bl	0 <coda_type_record_add_field>
    314c:	ldr	r0, [pc, #-3496]	; 23ac <sp3_init+0x21c0>
    3150:	bl	0 <coda_type_record_field_new>
    3154:	str	r0, [fp, #-24]	; 0xffffffe8
    3158:	bl	0 <__aeabi_read_tp>
    315c:	mov	r2, r0
    3160:	ldr	r3, [pc, #-3484]	; 23cc <sp3_init+0x21e0>
    3164:	ldr	r3, [r2, r3]
    3168:	add	r3, r3, #36	; 0x24
    316c:	ldr	r3, [r3]
    3170:	mov	r1, r3
    3174:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3178:	bl	0 <coda_type_record_field_set_type>
    317c:	bl	0 <__aeabi_read_tp>
    3180:	mov	r2, r0
    3184:	ldr	r3, [pc, #-3520]	; 23cc <sp3_init+0x21e0>
    3188:	ldr	r3, [r2, r3]
    318c:	add	r3, r3, #284	; 0x11c
    3190:	ldr	r3, [r3]
    3194:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3198:	mov	r0, r3
    319c:	bl	0 <coda_type_record_add_field>
    31a0:	ldr	r0, [pc, #-3576]	; 23b0 <sp3_init+0x21c4>
    31a4:	bl	0 <coda_type_record_field_new>
    31a8:	str	r0, [fp, #-24]	; 0xffffffe8
    31ac:	bl	0 <__aeabi_read_tp>
    31b0:	mov	r2, r0
    31b4:	ldr	r3, [pc, #-3568]	; 23cc <sp3_init+0x21e0>
    31b8:	ldr	r3, [r2, r3]
    31bc:	add	r3, r3, #40	; 0x28
    31c0:	ldr	r3, [r3]
    31c4:	mov	r1, r3
    31c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31cc:	bl	0 <coda_type_record_field_set_type>
    31d0:	bl	0 <__aeabi_read_tp>
    31d4:	mov	r2, r0
    31d8:	ldr	r3, [pc, #-3604]	; 23cc <sp3_init+0x21e0>
    31dc:	ldr	r3, [r2, r3]
    31e0:	add	r3, r3, #284	; 0x11c
    31e4:	ldr	r3, [r3]
    31e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31ec:	mov	r0, r3
    31f0:	bl	0 <coda_type_record_add_field>
    31f4:	ldr	r0, [pc, #-3656]	; 23b4 <sp3_init+0x21c8>
    31f8:	bl	0 <coda_type_record_field_new>
    31fc:	str	r0, [fp, #-24]	; 0xffffffe8
    3200:	bl	0 <__aeabi_read_tp>
    3204:	mov	r2, r0
    3208:	ldr	r3, [pc, #-3652]	; 23cc <sp3_init+0x21e0>
    320c:	ldr	r3, [r2, r3]
    3210:	add	r3, r3, #44	; 0x2c
    3214:	ldr	r3, [r3]
    3218:	mov	r1, r3
    321c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3220:	bl	0 <coda_type_record_field_set_type>
    3224:	bl	0 <__aeabi_read_tp>
    3228:	mov	r2, r0
    322c:	ldr	r3, [pc, #-3688]	; 23cc <sp3_init+0x21e0>
    3230:	ldr	r3, [r2, r3]
    3234:	add	r3, r3, #284	; 0x11c
    3238:	ldr	r3, [r3]
    323c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3240:	mov	r0, r3
    3244:	bl	0 <coda_type_record_add_field>
    3248:	ldr	r0, [pc, #-3736]	; 23b8 <sp3_init+0x21cc>
    324c:	bl	0 <coda_type_record_field_new>
    3250:	str	r0, [fp, #-24]	; 0xffffffe8
    3254:	bl	0 <__aeabi_read_tp>
    3258:	mov	r2, r0
    325c:	ldr	r3, [pc, #-3736]	; 23cc <sp3_init+0x21e0>
    3260:	ldr	r3, [r2, r3]
    3264:	add	r3, r3, #48	; 0x30
    3268:	ldr	r3, [r3]
    326c:	mov	r1, r3
    3270:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3274:	bl	0 <coda_type_record_field_set_type>
    3278:	bl	0 <__aeabi_read_tp>
    327c:	mov	r2, r0
    3280:	ldr	r3, [pc, #-3772]	; 23cc <sp3_init+0x21e0>
    3284:	ldr	r3, [r2, r3]
    3288:	add	r3, r3, #284	; 0x11c
    328c:	ldr	r3, [r3]
    3290:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3294:	mov	r0, r3
    3298:	bl	0 <coda_type_record_add_field>
    329c:	ldr	r0, [pc, #-3816]	; 23bc <sp3_init+0x21d0>
    32a0:	bl	0 <coda_type_record_field_new>
    32a4:	str	r0, [fp, #-24]	; 0xffffffe8
    32a8:	bl	0 <__aeabi_read_tp>
    32ac:	mov	r2, r0
    32b0:	ldr	r3, [pc, #-3820]	; 23cc <sp3_init+0x21e0>
    32b4:	ldr	r3, [r2, r3]
    32b8:	add	r3, r3, #52	; 0x34
    32bc:	ldr	r3, [r3]
    32c0:	mov	r1, r3
    32c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32c8:	bl	0 <coda_type_record_field_set_type>
    32cc:	bl	0 <__aeabi_read_tp>
    32d0:	mov	r2, r0
    32d4:	ldr	r3, [pc, #-3856]	; 23cc <sp3_init+0x21e0>
    32d8:	ldr	r3, [r2, r3]
    32dc:	add	r3, r3, #284	; 0x11c
    32e0:	ldr	r3, [r3]
    32e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    32e8:	mov	r0, r3
    32ec:	bl	0 <coda_type_record_add_field>
    32f0:	ldr	r0, [pc, #-3896]	; 23c0 <sp3_init+0x21d4>
    32f4:	bl	0 <coda_type_record_field_new>
    32f8:	str	r0, [fp, #-24]	; 0xffffffe8
    32fc:	bl	0 <__aeabi_read_tp>
    3300:	mov	r2, r0
    3304:	ldr	r3, [pc, #-3904]	; 23cc <sp3_init+0x21e0>
    3308:	ldr	r3, [r2, r3]
    330c:	add	r3, r3, #60	; 0x3c
    3310:	ldr	r3, [r3]
    3314:	mov	r1, r3
    3318:	ldr	r0, [fp, #-24]	; 0xffffffe8
    331c:	bl	0 <coda_type_record_field_set_type>
    3320:	bl	0 <__aeabi_read_tp>
    3324:	mov	r2, r0
    3328:	ldr	r3, [pc, #-3940]	; 23cc <sp3_init+0x21e0>
    332c:	ldr	r3, [r2, r3]
    3330:	add	r3, r3, #284	; 0x11c
    3334:	ldr	r3, [r3]
    3338:	ldr	r1, [fp, #-24]	; 0xffffffe8
    333c:	mov	r0, r3
    3340:	bl	0 <coda_type_record_add_field>
    3344:	ldr	r0, [pc, #-3976]	; 23c4 <sp3_init+0x21d8>
    3348:	bl	0 <coda_type_record_field_new>
    334c:	str	r0, [fp, #-24]	; 0xffffffe8
    3350:	bl	0 <__aeabi_read_tp>
    3354:	mov	r2, r0
    3358:	ldr	r3, [pc, #-3988]	; 23cc <sp3_init+0x21e0>
    335c:	ldr	r3, [r2, r3]
    3360:	add	r3, r3, #68	; 0x44
    3364:	ldr	r3, [r3]
    3368:	mov	r1, r3
    336c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3370:	bl	0 <coda_type_record_field_set_type>
    3374:	bl	0 <__aeabi_read_tp>
    3378:	mov	r2, r0
    337c:	ldr	r3, [pc, #-4024]	; 23cc <sp3_init+0x21e0>
    3380:	ldr	r3, [r2, r3]
    3384:	add	r3, r3, #284	; 0x11c
    3388:	ldr	r3, [r3]
    338c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3390:	mov	r0, r3
    3394:	bl	0 <coda_type_record_add_field>
    3398:	ldr	r0, [pc, #-4056]	; 23c8 <sp3_init+0x21dc>
    339c:	bl	0 <coda_type_record_field_new>
    33a0:	str	r0, [fp, #-24]	; 0xffffffe8
    33a4:	bl	0 <__aeabi_read_tp>
    33a8:	mov	r2, r0
    33ac:	ldr	r3, [pc, #-4072]	; 23cc <sp3_init+0x21e0>
    33b0:	ldr	r3, [r2, r3]
    33b4:	add	r3, r3, #72	; 0x48
    33b8:	ldr	r3, [r3]
    33bc:	mov	r1, r3
    33c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    33c4:	bl	0 <coda_type_record_field_set_type>
    33c8:	bl	0 <__aeabi_read_tp>
    33cc:	mov	r2, r0
    33d0:	ldr	r3, [pc, #4088]	; 43d0 <sp3_init+0x41e4>
    33d4:	ldr	r3, [r2, r3]
    33d8:	add	r3, r3, #284	; 0x11c
    33dc:	ldr	r3, [r3]
    33e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    33e4:	mov	r0, r3
    33e8:	bl	0 <coda_type_record_add_field>
    33ec:	ldr	r0, [pc, #4064]	; 43d4 <sp3_init+0x41e8>
    33f0:	bl	0 <coda_type_record_field_new>
    33f4:	str	r0, [fp, #-24]	; 0xffffffe8
    33f8:	bl	0 <__aeabi_read_tp>
    33fc:	mov	r2, r0
    3400:	ldr	r3, [pc, #4040]	; 43d0 <sp3_init+0x41e4>
    3404:	ldr	r3, [r2, r3]
    3408:	add	r3, r3, #76	; 0x4c
    340c:	ldr	r3, [r3]
    3410:	mov	r1, r3
    3414:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3418:	bl	0 <coda_type_record_field_set_type>
    341c:	bl	0 <__aeabi_read_tp>
    3420:	mov	r2, r0
    3424:	ldr	r3, [pc, #4004]	; 43d0 <sp3_init+0x41e4>
    3428:	ldr	r3, [r2, r3]
    342c:	add	r3, r3, #284	; 0x11c
    3430:	ldr	r3, [r3]
    3434:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3438:	mov	r0, r3
    343c:	bl	0 <coda_type_record_add_field>
    3440:	ldr	r0, [pc, #3984]	; 43d8 <sp3_init+0x41ec>
    3444:	bl	0 <coda_type_record_field_new>
    3448:	str	r0, [fp, #-24]	; 0xffffffe8
    344c:	bl	0 <__aeabi_read_tp>
    3450:	mov	r2, r0
    3454:	ldr	r3, [pc, #3956]	; 43d0 <sp3_init+0x41e4>
    3458:	ldr	r3, [r2, r3]
    345c:	add	r3, r3, #80	; 0x50
    3460:	ldr	r3, [r3]
    3464:	mov	r1, r3
    3468:	ldr	r0, [fp, #-24]	; 0xffffffe8
    346c:	bl	0 <coda_type_record_field_set_type>
    3470:	bl	0 <__aeabi_read_tp>
    3474:	mov	r2, r0
    3478:	ldr	r3, [pc, #3920]	; 43d0 <sp3_init+0x41e4>
    347c:	ldr	r3, [r2, r3]
    3480:	add	r3, r3, #284	; 0x11c
    3484:	ldr	r3, [r3]
    3488:	ldr	r1, [fp, #-24]	; 0xffffffe8
    348c:	mov	r0, r3
    3490:	bl	0 <coda_type_record_add_field>
    3494:	ldr	r0, [pc, #3904]	; 43dc <sp3_init+0x41f0>
    3498:	bl	0 <coda_type_record_field_new>
    349c:	str	r0, [fp, #-24]	; 0xffffffe8
    34a0:	bl	0 <__aeabi_read_tp>
    34a4:	mov	r2, r0
    34a8:	ldr	r3, [pc, #3872]	; 43d0 <sp3_init+0x41e4>
    34ac:	ldr	r3, [r2, r3]
    34b0:	add	r3, r3, #84	; 0x54
    34b4:	ldr	r3, [r3]
    34b8:	mov	r1, r3
    34bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    34c0:	bl	0 <coda_type_record_field_set_type>
    34c4:	bl	0 <__aeabi_read_tp>
    34c8:	mov	r2, r0
    34cc:	ldr	r3, [pc, #3836]	; 43d0 <sp3_init+0x41e4>
    34d0:	ldr	r3, [r2, r3]
    34d4:	add	r3, r3, #284	; 0x11c
    34d8:	ldr	r3, [r3]
    34dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    34e0:	mov	r0, r3
    34e4:	bl	0 <coda_type_record_add_field>
    34e8:	bl	0 <__aeabi_read_tp>
    34ec:	mov	r2, r0
    34f0:	ldr	r3, [pc, #3800]	; 43d0 <sp3_init+0x41e4>
    34f4:	ldr	r3, [r2, r3]
    34f8:	add	r4, r3, #140	; 0x8c
    34fc:	mov	r0, #9
    3500:	bl	0 <coda_type_record_new>
    3504:	mov	r3, r0
    3508:	str	r3, [r4]
    350c:	ldr	r0, [pc, #3788]	; 43e0 <sp3_init+0x41f4>
    3510:	bl	0 <coda_type_record_field_new>
    3514:	str	r0, [fp, #-24]	; 0xffffffe8
    3518:	bl	0 <__aeabi_read_tp>
    351c:	mov	r2, r0
    3520:	ldr	r3, [pc, #3752]	; 43d0 <sp3_init+0x41e4>
    3524:	ldr	r3, [r2, r3]
    3528:	add	r3, r3, #144	; 0x90
    352c:	ldr	r3, [r3]
    3530:	mov	r1, r3
    3534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3538:	bl	0 <coda_type_record_field_set_type>
    353c:	bl	0 <__aeabi_read_tp>
    3540:	mov	r2, r0
    3544:	ldr	r3, [pc, #3716]	; 43d0 <sp3_init+0x41e4>
    3548:	ldr	r3, [r2, r3]
    354c:	add	r3, r3, #140	; 0x8c
    3550:	ldr	r3, [r3]
    3554:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3558:	mov	r0, r3
    355c:	bl	0 <coda_type_record_add_field>
    3560:	ldr	r0, [pc, #3708]	; 43e4 <sp3_init+0x41f8>
    3564:	bl	0 <coda_type_record_field_new>
    3568:	str	r0, [fp, #-24]	; 0xffffffe8
    356c:	bl	0 <__aeabi_read_tp>
    3570:	mov	r2, r0
    3574:	ldr	r3, [pc, #3668]	; 43d0 <sp3_init+0x41e4>
    3578:	ldr	r3, [r2, r3]
    357c:	add	r3, r3, #148	; 0x94
    3580:	ldr	r3, [r3]
    3584:	mov	r1, r3
    3588:	ldr	r0, [fp, #-24]	; 0xffffffe8
    358c:	bl	0 <coda_type_record_field_set_type>
    3590:	bl	0 <__aeabi_read_tp>
    3594:	mov	r2, r0
    3598:	ldr	r3, [pc, #3632]	; 43d0 <sp3_init+0x41e4>
    359c:	ldr	r3, [r2, r3]
    35a0:	add	r3, r3, #140	; 0x8c
    35a4:	ldr	r3, [r3]
    35a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    35ac:	mov	r0, r3
    35b0:	bl	0 <coda_type_record_add_field>
    35b4:	ldr	r0, [pc, #3628]	; 43e8 <sp3_init+0x41fc>
    35b8:	bl	0 <coda_type_record_field_new>
    35bc:	str	r0, [fp, #-24]	; 0xffffffe8
    35c0:	bl	0 <__aeabi_read_tp>
    35c4:	mov	r2, r0
    35c8:	ldr	r3, [pc, #3584]	; 43d0 <sp3_init+0x41e4>
    35cc:	ldr	r3, [r2, r3]
    35d0:	add	r3, r3, #152	; 0x98
    35d4:	ldr	r3, [r3]
    35d8:	mov	r1, r3
    35dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    35e0:	bl	0 <coda_type_record_field_set_type>
    35e4:	bl	0 <__aeabi_read_tp>
    35e8:	mov	r2, r0
    35ec:	ldr	r3, [pc, #3548]	; 43d0 <sp3_init+0x41e4>
    35f0:	ldr	r3, [r2, r3]
    35f4:	add	r3, r3, #140	; 0x8c
    35f8:	ldr	r3, [r3]
    35fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3600:	mov	r0, r3
    3604:	bl	0 <coda_type_record_add_field>
    3608:	ldr	r0, [pc, #3548]	; 43ec <sp3_init+0x4200>
    360c:	bl	0 <coda_type_record_field_new>
    3610:	str	r0, [fp, #-24]	; 0xffffffe8
    3614:	bl	0 <__aeabi_read_tp>
    3618:	mov	r2, r0
    361c:	ldr	r3, [pc, #3500]	; 43d0 <sp3_init+0x41e4>
    3620:	ldr	r3, [r2, r3]
    3624:	add	r3, r3, #156	; 0x9c
    3628:	ldr	r3, [r3]
    362c:	mov	r1, r3
    3630:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3634:	bl	0 <coda_type_record_field_set_type>
    3638:	bl	0 <__aeabi_read_tp>
    363c:	mov	r2, r0
    3640:	ldr	r3, [pc, #3464]	; 43d0 <sp3_init+0x41e4>
    3644:	ldr	r3, [r2, r3]
    3648:	add	r3, r3, #140	; 0x8c
    364c:	ldr	r3, [r3]
    3650:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3654:	mov	r0, r3
    3658:	bl	0 <coda_type_record_add_field>
    365c:	ldr	r0, [pc, #3468]	; 43f0 <sp3_init+0x4204>
    3660:	bl	0 <coda_type_record_field_new>
    3664:	str	r0, [fp, #-24]	; 0xffffffe8
    3668:	bl	0 <__aeabi_read_tp>
    366c:	mov	r2, r0
    3670:	ldr	r3, [pc, #3416]	; 43d0 <sp3_init+0x41e4>
    3674:	ldr	r3, [r2, r3]
    3678:	add	r3, r3, #160	; 0xa0
    367c:	ldr	r3, [r3]
    3680:	mov	r1, r3
    3684:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3688:	bl	0 <coda_type_record_field_set_type>
    368c:	bl	0 <__aeabi_read_tp>
    3690:	mov	r2, r0
    3694:	ldr	r3, [pc, #3380]	; 43d0 <sp3_init+0x41e4>
    3698:	ldr	r3, [r2, r3]
    369c:	add	r3, r3, #140	; 0x8c
    36a0:	ldr	r3, [r3]
    36a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    36a8:	mov	r0, r3
    36ac:	bl	0 <coda_type_record_add_field>
    36b0:	ldr	r0, [pc, #3388]	; 43f4 <sp3_init+0x4208>
    36b4:	bl	0 <coda_type_record_field_new>
    36b8:	str	r0, [fp, #-24]	; 0xffffffe8
    36bc:	bl	0 <__aeabi_read_tp>
    36c0:	mov	r2, r0
    36c4:	ldr	r3, [pc, #3332]	; 43d0 <sp3_init+0x41e4>
    36c8:	ldr	r3, [r2, r3]
    36cc:	add	r3, r3, #164	; 0xa4
    36d0:	ldr	r3, [r3]
    36d4:	mov	r1, r3
    36d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    36dc:	bl	0 <coda_type_record_field_set_type>
    36e0:	bl	0 <__aeabi_read_tp>
    36e4:	mov	r2, r0
    36e8:	ldr	r3, [pc, #3296]	; 43d0 <sp3_init+0x41e4>
    36ec:	ldr	r3, [r2, r3]
    36f0:	add	r3, r3, #140	; 0x8c
    36f4:	ldr	r3, [r3]
    36f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    36fc:	mov	r0, r3
    3700:	bl	0 <coda_type_record_add_field>
    3704:	ldr	r0, [pc, #3308]	; 43f8 <sp3_init+0x420c>
    3708:	bl	0 <coda_type_record_field_new>
    370c:	str	r0, [fp, #-24]	; 0xffffffe8
    3710:	bl	0 <__aeabi_read_tp>
    3714:	mov	r2, r0
    3718:	ldr	r3, [pc, #3248]	; 43d0 <sp3_init+0x41e4>
    371c:	ldr	r3, [r2, r3]
    3720:	add	r3, r3, #168	; 0xa8
    3724:	ldr	r3, [r3]
    3728:	mov	r1, r3
    372c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3730:	bl	0 <coda_type_record_field_set_type>
    3734:	bl	0 <__aeabi_read_tp>
    3738:	mov	r2, r0
    373c:	ldr	r3, [pc, #3212]	; 43d0 <sp3_init+0x41e4>
    3740:	ldr	r3, [r2, r3]
    3744:	add	r3, r3, #140	; 0x8c
    3748:	ldr	r3, [r3]
    374c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3750:	mov	r0, r3
    3754:	bl	0 <coda_type_record_add_field>
    3758:	ldr	r0, [pc, #3228]	; 43fc <sp3_init+0x4210>
    375c:	bl	0 <coda_type_record_field_new>
    3760:	str	r0, [fp, #-24]	; 0xffffffe8
    3764:	bl	0 <__aeabi_read_tp>
    3768:	mov	r2, r0
    376c:	ldr	r3, [pc, #3164]	; 43d0 <sp3_init+0x41e4>
    3770:	ldr	r3, [r2, r3]
    3774:	add	r3, r3, #172	; 0xac
    3778:	ldr	r3, [r3]
    377c:	mov	r1, r3
    3780:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3784:	bl	0 <coda_type_record_field_set_type>
    3788:	bl	0 <__aeabi_read_tp>
    378c:	mov	r2, r0
    3790:	ldr	r3, [pc, #3128]	; 43d0 <sp3_init+0x41e4>
    3794:	ldr	r3, [r2, r3]
    3798:	add	r3, r3, #140	; 0x8c
    379c:	ldr	r3, [r3]
    37a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    37a4:	mov	r0, r3
    37a8:	bl	0 <coda_type_record_add_field>
    37ac:	ldr	r0, [pc, #3148]	; 4400 <sp3_init+0x4214>
    37b0:	bl	0 <coda_type_record_field_new>
    37b4:	str	r0, [fp, #-24]	; 0xffffffe8
    37b8:	bl	0 <__aeabi_read_tp>
    37bc:	mov	r2, r0
    37c0:	ldr	r3, [pc, #3080]	; 43d0 <sp3_init+0x41e4>
    37c4:	ldr	r3, [r2, r3]
    37c8:	add	r3, r3, #176	; 0xb0
    37cc:	ldr	r3, [r3]
    37d0:	mov	r1, r3
    37d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    37d8:	bl	0 <coda_type_record_field_set_type>
    37dc:	bl	0 <__aeabi_read_tp>
    37e0:	mov	r2, r0
    37e4:	ldr	r3, [pc, #3044]	; 43d0 <sp3_init+0x41e4>
    37e8:	ldr	r3, [r2, r3]
    37ec:	add	r3, r3, #140	; 0x8c
    37f0:	ldr	r3, [r3]
    37f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    37f8:	mov	r0, r3
    37fc:	bl	0 <coda_type_record_add_field>
    3800:	ldr	r0, [pc, #3068]	; 4404 <sp3_init+0x4218>
    3804:	bl	0 <coda_type_record_field_new>
    3808:	str	r0, [fp, #-24]	; 0xffffffe8
    380c:	bl	0 <__aeabi_read_tp>
    3810:	mov	r2, r0
    3814:	ldr	r3, [pc, #2996]	; 43d0 <sp3_init+0x41e4>
    3818:	ldr	r3, [r2, r3]
    381c:	add	r3, r3, #180	; 0xb4
    3820:	ldr	r3, [r3]
    3824:	mov	r1, r3
    3828:	ldr	r0, [fp, #-24]	; 0xffffffe8
    382c:	bl	0 <coda_type_record_field_set_type>
    3830:	bl	0 <__aeabi_read_tp>
    3834:	mov	r2, r0
    3838:	ldr	r3, [pc, #2960]	; 43d0 <sp3_init+0x41e4>
    383c:	ldr	r3, [r2, r3]
    3840:	add	r3, r3, #140	; 0x8c
    3844:	ldr	r3, [r3]
    3848:	ldr	r1, [fp, #-24]	; 0xffffffe8
    384c:	mov	r0, r3
    3850:	bl	0 <coda_type_record_add_field>
    3854:	bl	0 <__aeabi_read_tp>
    3858:	mov	r2, r0
    385c:	ldr	r3, [pc, #2924]	; 43d0 <sp3_init+0x41e4>
    3860:	ldr	r3, [r2, r3]
    3864:	add	r4, r3, #268	; 0x10c
    3868:	mov	r0, #9
    386c:	bl	0 <coda_type_record_new>
    3870:	mov	r3, r0
    3874:	str	r3, [r4]
    3878:	ldr	r0, [pc, #2952]	; 4408 <sp3_init+0x421c>
    387c:	bl	0 <coda_type_record_field_new>
    3880:	str	r0, [fp, #-24]	; 0xffffffe8
    3884:	bl	0 <__aeabi_read_tp>
    3888:	mov	r2, r0
    388c:	ldr	r3, [pc, #2876]	; 43d0 <sp3_init+0x41e4>
    3890:	ldr	r3, [r2, r3]
    3894:	add	r3, r3, #88	; 0x58
    3898:	ldr	r3, [r3]
    389c:	mov	r1, r3
    38a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    38a4:	bl	0 <coda_type_record_field_set_type>
    38a8:	bl	0 <__aeabi_read_tp>
    38ac:	mov	r2, r0
    38b0:	ldr	r3, [pc, #2840]	; 43d0 <sp3_init+0x41e4>
    38b4:	ldr	r3, [r2, r3]
    38b8:	add	r3, r3, #268	; 0x10c
    38bc:	ldr	r3, [r3]
    38c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    38c4:	mov	r0, r3
    38c8:	bl	0 <coda_type_record_add_field>
    38cc:	ldr	r0, [pc, #2872]	; 440c <sp3_init+0x4220>
    38d0:	bl	0 <coda_type_record_field_new>
    38d4:	str	r0, [fp, #-24]	; 0xffffffe8
    38d8:	bl	0 <__aeabi_read_tp>
    38dc:	mov	r2, r0
    38e0:	ldr	r3, [pc, #2792]	; 43d0 <sp3_init+0x41e4>
    38e4:	ldr	r3, [r2, r3]
    38e8:	add	r3, r3, #92	; 0x5c
    38ec:	ldr	r3, [r3]
    38f0:	mov	r1, r3
    38f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    38f8:	bl	0 <coda_type_record_field_set_type>
    38fc:	bl	0 <__aeabi_read_tp>
    3900:	mov	r2, r0
    3904:	ldr	r3, [pc, #2756]	; 43d0 <sp3_init+0x41e4>
    3908:	ldr	r3, [r2, r3]
    390c:	add	r3, r3, #268	; 0x10c
    3910:	ldr	r3, [r3]
    3914:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3918:	mov	r0, r3
    391c:	bl	0 <coda_type_record_add_field>
    3920:	ldr	r0, [pc, #2792]	; 4410 <sp3_init+0x4224>
    3924:	bl	0 <coda_type_record_field_new>
    3928:	str	r0, [fp, #-24]	; 0xffffffe8
    392c:	bl	0 <__aeabi_read_tp>
    3930:	mov	r2, r0
    3934:	ldr	r3, [pc, #2708]	; 43d0 <sp3_init+0x41e4>
    3938:	ldr	r3, [r2, r3]
    393c:	add	r3, r3, #96	; 0x60
    3940:	ldr	r3, [r3]
    3944:	mov	r1, r3
    3948:	ldr	r0, [fp, #-24]	; 0xffffffe8
    394c:	bl	0 <coda_type_record_field_set_type>
    3950:	bl	0 <__aeabi_read_tp>
    3954:	mov	r2, r0
    3958:	ldr	r3, [pc, #2672]	; 43d0 <sp3_init+0x41e4>
    395c:	ldr	r3, [r2, r3]
    3960:	add	r3, r3, #268	; 0x10c
    3964:	ldr	r3, [r3]
    3968:	ldr	r1, [fp, #-24]	; 0xffffffe8
    396c:	mov	r0, r3
    3970:	bl	0 <coda_type_record_add_field>
    3974:	ldr	r0, [pc, #2712]	; 4414 <sp3_init+0x4228>
    3978:	bl	0 <coda_type_record_field_new>
    397c:	str	r0, [fp, #-24]	; 0xffffffe8
    3980:	bl	0 <__aeabi_read_tp>
    3984:	mov	r2, r0
    3988:	ldr	r3, [pc, #2624]	; 43d0 <sp3_init+0x41e4>
    398c:	ldr	r3, [r2, r3]
    3990:	add	r3, r3, #100	; 0x64
    3994:	ldr	r3, [r3]
    3998:	mov	r1, r3
    399c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    39a0:	bl	0 <coda_type_record_field_set_type>
    39a4:	bl	0 <__aeabi_read_tp>
    39a8:	mov	r2, r0
    39ac:	ldr	r3, [pc, #2588]	; 43d0 <sp3_init+0x41e4>
    39b0:	ldr	r3, [r2, r3]
    39b4:	add	r3, r3, #268	; 0x10c
    39b8:	ldr	r3, [r3]
    39bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    39c0:	mov	r0, r3
    39c4:	bl	0 <coda_type_record_add_field>
    39c8:	ldr	r0, [pc, #2632]	; 4418 <sp3_init+0x422c>
    39cc:	bl	0 <coda_type_record_field_new>
    39d0:	str	r0, [fp, #-24]	; 0xffffffe8
    39d4:	bl	0 <__aeabi_read_tp>
    39d8:	mov	r2, r0
    39dc:	ldr	r3, [pc, #2540]	; 43d0 <sp3_init+0x41e4>
    39e0:	ldr	r3, [r2, r3]
    39e4:	add	r3, r3, #104	; 0x68
    39e8:	ldr	r3, [r3]
    39ec:	mov	r1, r3
    39f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    39f4:	bl	0 <coda_type_record_field_set_type>
    39f8:	bl	0 <__aeabi_read_tp>
    39fc:	mov	r2, r0
    3a00:	ldr	r3, [pc, #2504]	; 43d0 <sp3_init+0x41e4>
    3a04:	ldr	r3, [r2, r3]
    3a08:	add	r3, r3, #268	; 0x10c
    3a0c:	ldr	r3, [r3]
    3a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3a14:	mov	r0, r3
    3a18:	bl	0 <coda_type_record_add_field>
    3a1c:	ldr	r0, [pc, #2492]	; 43e0 <sp3_init+0x41f4>
    3a20:	bl	0 <coda_type_record_field_new>
    3a24:	str	r0, [fp, #-24]	; 0xffffffe8
    3a28:	bl	0 <__aeabi_read_tp>
    3a2c:	mov	r2, r0
    3a30:	ldr	r3, [pc, #2456]	; 43d0 <sp3_init+0x41e4>
    3a34:	ldr	r3, [r2, r3]
    3a38:	add	r3, r3, #108	; 0x6c
    3a3c:	ldr	r3, [r3]
    3a40:	mov	r1, r3
    3a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3a48:	bl	0 <coda_type_record_field_set_type>
    3a4c:	bl	0 <__aeabi_read_tp>
    3a50:	mov	r2, r0
    3a54:	ldr	r3, [pc, #2420]	; 43d0 <sp3_init+0x41e4>
    3a58:	ldr	r3, [r2, r3]
    3a5c:	add	r3, r3, #268	; 0x10c
    3a60:	ldr	r3, [r3]
    3a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3a68:	mov	r0, r3
    3a6c:	bl	0 <coda_type_record_add_field>
    3a70:	ldr	r0, [pc, #2412]	; 43e4 <sp3_init+0x41f8>
    3a74:	bl	0 <coda_type_record_field_new>
    3a78:	str	r0, [fp, #-24]	; 0xffffffe8
    3a7c:	bl	0 <__aeabi_read_tp>
    3a80:	mov	r2, r0
    3a84:	ldr	r3, [pc, #2372]	; 43d0 <sp3_init+0x41e4>
    3a88:	ldr	r3, [r2, r3]
    3a8c:	add	r3, r3, #112	; 0x70
    3a90:	ldr	r3, [r3]
    3a94:	mov	r1, r3
    3a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3a9c:	bl	0 <coda_type_record_field_set_type>
    3aa0:	bl	0 <__aeabi_read_tp>
    3aa4:	mov	r2, r0
    3aa8:	ldr	r3, [pc, #2336]	; 43d0 <sp3_init+0x41e4>
    3aac:	ldr	r3, [r2, r3]
    3ab0:	add	r3, r3, #268	; 0x10c
    3ab4:	ldr	r3, [r3]
    3ab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3abc:	mov	r0, r3
    3ac0:	bl	0 <coda_type_record_add_field>
    3ac4:	ldr	r0, [pc, #2332]	; 43e8 <sp3_init+0x41fc>
    3ac8:	bl	0 <coda_type_record_field_new>
    3acc:	str	r0, [fp, #-24]	; 0xffffffe8
    3ad0:	bl	0 <__aeabi_read_tp>
    3ad4:	mov	r2, r0
    3ad8:	ldr	r3, [pc, #2288]	; 43d0 <sp3_init+0x41e4>
    3adc:	ldr	r3, [r2, r3]
    3ae0:	add	r3, r3, #116	; 0x74
    3ae4:	ldr	r3, [r3]
    3ae8:	mov	r1, r3
    3aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3af0:	bl	0 <coda_type_record_field_set_type>
    3af4:	bl	0 <__aeabi_read_tp>
    3af8:	mov	r2, r0
    3afc:	ldr	r3, [pc, #2252]	; 43d0 <sp3_init+0x41e4>
    3b00:	ldr	r3, [r2, r3]
    3b04:	add	r3, r3, #268	; 0x10c
    3b08:	ldr	r3, [r3]
    3b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3b10:	mov	r0, r3
    3b14:	bl	0 <coda_type_record_add_field>
    3b18:	ldr	r0, [pc, #2252]	; 43ec <sp3_init+0x4200>
    3b1c:	bl	0 <coda_type_record_field_new>
    3b20:	str	r0, [fp, #-24]	; 0xffffffe8
    3b24:	bl	0 <__aeabi_read_tp>
    3b28:	mov	r2, r0
    3b2c:	ldr	r3, [pc, #2204]	; 43d0 <sp3_init+0x41e4>
    3b30:	ldr	r3, [r2, r3]
    3b34:	add	r3, r3, #120	; 0x78
    3b38:	ldr	r3, [r3]
    3b3c:	mov	r1, r3
    3b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3b44:	bl	0 <coda_type_record_field_set_type>
    3b48:	bl	0 <__aeabi_read_tp>
    3b4c:	mov	r2, r0
    3b50:	ldr	r3, [pc, #2168]	; 43d0 <sp3_init+0x41e4>
    3b54:	ldr	r3, [r2, r3]
    3b58:	add	r3, r3, #268	; 0x10c
    3b5c:	ldr	r3, [r3]
    3b60:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3b64:	mov	r0, r3
    3b68:	bl	0 <coda_type_record_add_field>
    3b6c:	ldr	r0, [pc, #2216]	; 441c <sp3_init+0x4230>
    3b70:	bl	0 <coda_type_record_field_new>
    3b74:	str	r0, [fp, #-24]	; 0xffffffe8
    3b78:	bl	0 <__aeabi_read_tp>
    3b7c:	mov	r2, r0
    3b80:	ldr	r3, [pc, #2120]	; 43d0 <sp3_init+0x41e4>
    3b84:	ldr	r3, [r2, r3]
    3b88:	add	r3, r3, #124	; 0x7c
    3b8c:	ldr	r3, [r3]
    3b90:	mov	r1, r3
    3b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3b98:	bl	0 <coda_type_record_field_set_type>
    3b9c:	bl	0 <__aeabi_read_tp>
    3ba0:	mov	r2, r0
    3ba4:	ldr	r3, [pc, #2084]	; 43d0 <sp3_init+0x41e4>
    3ba8:	ldr	r3, [r2, r3]
    3bac:	add	r3, r3, #268	; 0x10c
    3bb0:	ldr	r3, [r3]
    3bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3bb8:	mov	r0, r3
    3bbc:	bl	0 <coda_type_record_add_field>
    3bc0:	ldr	r0, [pc, #2136]	; 4420 <sp3_init+0x4234>
    3bc4:	bl	0 <coda_type_record_field_new>
    3bc8:	str	r0, [fp, #-24]	; 0xffffffe8
    3bcc:	bl	0 <__aeabi_read_tp>
    3bd0:	mov	r2, r0
    3bd4:	ldr	r3, [pc, #2036]	; 43d0 <sp3_init+0x41e4>
    3bd8:	ldr	r3, [r2, r3]
    3bdc:	add	r3, r3, #128	; 0x80
    3be0:	ldr	r3, [r3]
    3be4:	mov	r1, r3
    3be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3bec:	bl	0 <coda_type_record_field_set_type>
    3bf0:	bl	0 <__aeabi_read_tp>
    3bf4:	mov	r2, r0
    3bf8:	ldr	r3, [pc, #2000]	; 43d0 <sp3_init+0x41e4>
    3bfc:	ldr	r3, [r2, r3]
    3c00:	add	r3, r3, #268	; 0x10c
    3c04:	ldr	r3, [r3]
    3c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3c0c:	mov	r0, r3
    3c10:	bl	0 <coda_type_record_add_field>
    3c14:	ldr	r0, [pc, #2056]	; 4424 <sp3_init+0x4238>
    3c18:	bl	0 <coda_type_record_field_new>
    3c1c:	str	r0, [fp, #-24]	; 0xffffffe8
    3c20:	bl	0 <__aeabi_read_tp>
    3c24:	mov	r2, r0
    3c28:	ldr	r3, [pc, #1952]	; 43d0 <sp3_init+0x41e4>
    3c2c:	ldr	r3, [r2, r3]
    3c30:	add	r3, r3, #132	; 0x84
    3c34:	ldr	r3, [r3]
    3c38:	mov	r1, r3
    3c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3c40:	bl	0 <coda_type_record_field_set_type>
    3c44:	bl	0 <__aeabi_read_tp>
    3c48:	mov	r2, r0
    3c4c:	ldr	r3, [pc, #1916]	; 43d0 <sp3_init+0x41e4>
    3c50:	ldr	r3, [r2, r3]
    3c54:	add	r3, r3, #268	; 0x10c
    3c58:	ldr	r3, [r3]
    3c5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3c60:	mov	r0, r3
    3c64:	bl	0 <coda_type_record_add_field>
    3c68:	ldr	r0, [pc, #1976]	; 4428 <sp3_init+0x423c>
    3c6c:	bl	0 <coda_type_record_field_new>
    3c70:	str	r0, [fp, #-24]	; 0xffffffe8
    3c74:	bl	0 <__aeabi_read_tp>
    3c78:	mov	r2, r0
    3c7c:	ldr	r3, [pc, #1868]	; 43d0 <sp3_init+0x41e4>
    3c80:	ldr	r3, [r2, r3]
    3c84:	add	r3, r3, #136	; 0x88
    3c88:	ldr	r3, [r3]
    3c8c:	mov	r1, r3
    3c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3c94:	bl	0 <coda_type_record_field_set_type>
    3c98:	bl	0 <__aeabi_read_tp>
    3c9c:	mov	r2, r0
    3ca0:	ldr	r3, [pc, #1832]	; 43d0 <sp3_init+0x41e4>
    3ca4:	ldr	r3, [r2, r3]
    3ca8:	add	r3, r3, #268	; 0x10c
    3cac:	ldr	r3, [r3]
    3cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3cb4:	mov	r0, r3
    3cb8:	bl	0 <coda_type_record_add_field>
    3cbc:	ldr	r0, [pc, #1928]	; 444c <sp3_init+0x4260>
    3cc0:	bl	0 <coda_type_record_field_new>
    3cc4:	str	r0, [fp, #-24]	; 0xffffffe8
    3cc8:	bl	0 <__aeabi_read_tp>
    3ccc:	mov	r2, r0
    3cd0:	ldr	r3, [pc, #1784]	; 43d0 <sp3_init+0x41e4>
    3cd4:	ldr	r3, [r2, r3]
    3cd8:	add	r3, r3, #140	; 0x8c
    3cdc:	ldr	r3, [r3]
    3ce0:	mov	r1, r3
    3ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3ce8:	bl	0 <coda_type_record_field_set_type>
    3cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3cf0:	bl	0 <coda_type_record_field_set_optional>
    3cf4:	bl	0 <__aeabi_read_tp>
    3cf8:	mov	r2, r0
    3cfc:	ldr	r3, [pc, #1740]	; 43d0 <sp3_init+0x41e4>
    3d00:	ldr	r3, [r2, r3]
    3d04:	add	r3, r3, #268	; 0x10c
    3d08:	ldr	r3, [r3]
    3d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3d10:	mov	r0, r3
    3d14:	bl	0 <coda_type_record_add_field>
    3d18:	bl	0 <__aeabi_read_tp>
    3d1c:	mov	r2, r0
    3d20:	ldr	r3, [pc, #1704]	; 43d0 <sp3_init+0x41e4>
    3d24:	ldr	r3, [r2, r3]
    3d28:	add	r4, r3, #272	; 0x110
    3d2c:	mov	r0, #9
    3d30:	bl	0 <coda_type_array_new>
    3d34:	mov	r3, r0
    3d38:	str	r3, [r4]
    3d3c:	bl	0 <__aeabi_read_tp>
    3d40:	mov	r2, r0
    3d44:	ldr	r3, [pc, #1668]	; 43d0 <sp3_init+0x41e4>
    3d48:	ldr	r3, [r2, r3]
    3d4c:	add	r3, r3, #272	; 0x110
    3d50:	ldr	r3, [r3]
    3d54:	mov	r1, #0
    3d58:	mov	r0, r3
    3d5c:	bl	0 <coda_type_array_add_variable_dimension>
    3d60:	bl	0 <__aeabi_read_tp>
    3d64:	mov	r2, r0
    3d68:	ldr	r3, [pc, #1632]	; 43d0 <sp3_init+0x41e4>
    3d6c:	ldr	r3, [r2, r3]
    3d70:	add	r3, r3, #272	; 0x110
    3d74:	ldr	r2, [r3]
    3d78:	bl	0 <__aeabi_read_tp>
    3d7c:	mov	r1, r0
    3d80:	ldr	r3, [pc, #1608]	; 43d0 <sp3_init+0x41e4>
    3d84:	ldr	r3, [r1, r3]
    3d88:	add	r3, r3, #268	; 0x10c
    3d8c:	ldr	r3, [r3]
    3d90:	mov	r1, r3
    3d94:	mov	r0, r2
    3d98:	bl	0 <coda_type_array_set_base_type>
    3d9c:	bl	0 <__aeabi_read_tp>
    3da0:	mov	r2, r0
    3da4:	ldr	r3, [pc, #1572]	; 43d0 <sp3_init+0x41e4>
    3da8:	ldr	r3, [r2, r3]
    3dac:	add	r4, r3, #216	; 0xd8
    3db0:	mov	r0, #9
    3db4:	bl	0 <coda_type_record_new>
    3db8:	mov	r3, r0
    3dbc:	str	r3, [r4]
    3dc0:	ldr	r0, [pc, #1636]	; 442c <sp3_init+0x4240>
    3dc4:	bl	0 <coda_type_record_field_new>
    3dc8:	str	r0, [fp, #-24]	; 0xffffffe8
    3dcc:	bl	0 <__aeabi_read_tp>
    3dd0:	mov	r2, r0
    3dd4:	ldr	r3, [pc, #1524]	; 43d0 <sp3_init+0x41e4>
    3dd8:	ldr	r3, [r2, r3]
    3ddc:	add	r3, r3, #220	; 0xdc
    3de0:	ldr	r3, [r3]
    3de4:	mov	r1, r3
    3de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3dec:	bl	0 <coda_type_record_field_set_type>
    3df0:	bl	0 <__aeabi_read_tp>
    3df4:	mov	r2, r0
    3df8:	ldr	r3, [pc, #1488]	; 43d0 <sp3_init+0x41e4>
    3dfc:	ldr	r3, [r2, r3]
    3e00:	add	r3, r3, #216	; 0xd8
    3e04:	ldr	r3, [r3]
    3e08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3e0c:	mov	r0, r3
    3e10:	bl	0 <coda_type_record_add_field>
    3e14:	ldr	r0, [pc, #1556]	; 4430 <sp3_init+0x4244>
    3e18:	bl	0 <coda_type_record_field_new>
    3e1c:	str	r0, [fp, #-24]	; 0xffffffe8
    3e20:	bl	0 <__aeabi_read_tp>
    3e24:	mov	r2, r0
    3e28:	ldr	r3, [pc, #1440]	; 43d0 <sp3_init+0x41e4>
    3e2c:	ldr	r3, [r2, r3]
    3e30:	add	r3, r3, #224	; 0xe0
    3e34:	ldr	r3, [r3]
    3e38:	mov	r1, r3
    3e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3e40:	bl	0 <coda_type_record_field_set_type>
    3e44:	bl	0 <__aeabi_read_tp>
    3e48:	mov	r2, r0
    3e4c:	ldr	r3, [pc, #1404]	; 43d0 <sp3_init+0x41e4>
    3e50:	ldr	r3, [r2, r3]
    3e54:	add	r3, r3, #216	; 0xd8
    3e58:	ldr	r3, [r3]
    3e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3e60:	mov	r0, r3
    3e64:	bl	0 <coda_type_record_add_field>
    3e68:	ldr	r0, [pc, #1476]	; 4434 <sp3_init+0x4248>
    3e6c:	bl	0 <coda_type_record_field_new>
    3e70:	str	r0, [fp, #-24]	; 0xffffffe8
    3e74:	bl	0 <__aeabi_read_tp>
    3e78:	mov	r2, r0
    3e7c:	ldr	r3, [pc, #1356]	; 43d0 <sp3_init+0x41e4>
    3e80:	ldr	r3, [r2, r3]
    3e84:	add	r3, r3, #228	; 0xe4
    3e88:	ldr	r3, [r3]
    3e8c:	mov	r1, r3
    3e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3e94:	bl	0 <coda_type_record_field_set_type>
    3e98:	bl	0 <__aeabi_read_tp>
    3e9c:	mov	r2, r0
    3ea0:	ldr	r3, [pc, #1320]	; 43d0 <sp3_init+0x41e4>
    3ea4:	ldr	r3, [r2, r3]
    3ea8:	add	r3, r3, #216	; 0xd8
    3eac:	ldr	r3, [r3]
    3eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3eb4:	mov	r0, r3
    3eb8:	bl	0 <coda_type_record_add_field>
    3ebc:	ldr	r0, [pc, #1412]	; 4448 <sp3_init+0x425c>
    3ec0:	bl	0 <coda_type_record_field_new>
    3ec4:	str	r0, [fp, #-24]	; 0xffffffe8
    3ec8:	bl	0 <__aeabi_read_tp>
    3ecc:	mov	r2, r0
    3ed0:	ldr	r3, [pc, #1272]	; 43d0 <sp3_init+0x41e4>
    3ed4:	ldr	r3, [r2, r3]
    3ed8:	add	r3, r3, #232	; 0xe8
    3edc:	ldr	r3, [r3]
    3ee0:	mov	r1, r3
    3ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3ee8:	bl	0 <coda_type_record_field_set_type>
    3eec:	bl	0 <__aeabi_read_tp>
    3ef0:	mov	r2, r0
    3ef4:	ldr	r3, [pc, #1236]	; 43d0 <sp3_init+0x41e4>
    3ef8:	ldr	r3, [r2, r3]
    3efc:	add	r3, r3, #216	; 0xd8
    3f00:	ldr	r3, [r3]
    3f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3f08:	mov	r0, r3
    3f0c:	bl	0 <coda_type_record_add_field>
    3f10:	ldr	r0, [pc, #1240]	; 43f0 <sp3_init+0x4204>
    3f14:	bl	0 <coda_type_record_field_new>
    3f18:	str	r0, [fp, #-24]	; 0xffffffe8
    3f1c:	bl	0 <__aeabi_read_tp>
    3f20:	mov	r2, r0
    3f24:	ldr	r3, [pc, #1188]	; 43d0 <sp3_init+0x41e4>
    3f28:	ldr	r3, [r2, r3]
    3f2c:	add	r3, r3, #236	; 0xec
    3f30:	ldr	r3, [r3]
    3f34:	mov	r1, r3
    3f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3f3c:	bl	0 <coda_type_record_field_set_type>
    3f40:	bl	0 <__aeabi_read_tp>
    3f44:	mov	r2, r0
    3f48:	ldr	r3, [pc, #1152]	; 43d0 <sp3_init+0x41e4>
    3f4c:	ldr	r3, [r2, r3]
    3f50:	add	r3, r3, #216	; 0xd8
    3f54:	ldr	r3, [r3]
    3f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3f5c:	mov	r0, r3
    3f60:	bl	0 <coda_type_record_add_field>
    3f64:	ldr	r0, [pc, #1160]	; 43f4 <sp3_init+0x4208>
    3f68:	bl	0 <coda_type_record_field_new>
    3f6c:	str	r0, [fp, #-24]	; 0xffffffe8
    3f70:	bl	0 <__aeabi_read_tp>
    3f74:	mov	r2, r0
    3f78:	ldr	r3, [pc, #1104]	; 43d0 <sp3_init+0x41e4>
    3f7c:	ldr	r3, [r2, r3]
    3f80:	add	r3, r3, #240	; 0xf0
    3f84:	ldr	r3, [r3]
    3f88:	mov	r1, r3
    3f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3f90:	bl	0 <coda_type_record_field_set_type>
    3f94:	bl	0 <__aeabi_read_tp>
    3f98:	mov	r2, r0
    3f9c:	ldr	r3, [pc, #1068]	; 43d0 <sp3_init+0x41e4>
    3fa0:	ldr	r3, [r2, r3]
    3fa4:	add	r3, r3, #216	; 0xd8
    3fa8:	ldr	r3, [r3]
    3fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3fb0:	mov	r0, r3
    3fb4:	bl	0 <coda_type_record_add_field>
    3fb8:	ldr	r0, [pc, #1080]	; 43f8 <sp3_init+0x420c>
    3fbc:	bl	0 <coda_type_record_field_new>
    3fc0:	str	r0, [fp, #-24]	; 0xffffffe8
    3fc4:	bl	0 <__aeabi_read_tp>
    3fc8:	mov	r2, r0
    3fcc:	ldr	r3, [pc, #1020]	; 43d0 <sp3_init+0x41e4>
    3fd0:	ldr	r3, [r2, r3]
    3fd4:	add	r3, r3, #244	; 0xf4
    3fd8:	ldr	r3, [r3]
    3fdc:	mov	r1, r3
    3fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3fe4:	bl	0 <coda_type_record_field_set_type>
    3fe8:	bl	0 <__aeabi_read_tp>
    3fec:	mov	r2, r0
    3ff0:	ldr	r3, [pc, #984]	; 43d0 <sp3_init+0x41e4>
    3ff4:	ldr	r3, [r2, r3]
    3ff8:	add	r3, r3, #216	; 0xd8
    3ffc:	ldr	r3, [r3]
    4000:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4004:	mov	r0, r3
    4008:	bl	0 <coda_type_record_add_field>
    400c:	ldr	r0, [pc, #1000]	; 43fc <sp3_init+0x4210>
    4010:	bl	0 <coda_type_record_field_new>
    4014:	str	r0, [fp, #-24]	; 0xffffffe8
    4018:	bl	0 <__aeabi_read_tp>
    401c:	mov	r2, r0
    4020:	ldr	r3, [pc, #936]	; 43d0 <sp3_init+0x41e4>
    4024:	ldr	r3, [r2, r3]
    4028:	add	r3, r3, #248	; 0xf8
    402c:	ldr	r3, [r3]
    4030:	mov	r1, r3
    4034:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4038:	bl	0 <coda_type_record_field_set_type>
    403c:	bl	0 <__aeabi_read_tp>
    4040:	mov	r2, r0
    4044:	ldr	r3, [pc, #900]	; 43d0 <sp3_init+0x41e4>
    4048:	ldr	r3, [r2, r3]
    404c:	add	r3, r3, #216	; 0xd8
    4050:	ldr	r3, [r3]
    4054:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4058:	mov	r0, r3
    405c:	bl	0 <coda_type_record_add_field>
    4060:	ldr	r0, [pc, #920]	; 4400 <sp3_init+0x4214>
    4064:	bl	0 <coda_type_record_field_new>
    4068:	str	r0, [fp, #-24]	; 0xffffffe8
    406c:	bl	0 <__aeabi_read_tp>
    4070:	mov	r2, r0
    4074:	ldr	r3, [pc, #852]	; 43d0 <sp3_init+0x41e4>
    4078:	ldr	r3, [r2, r3]
    407c:	add	r3, r3, #252	; 0xfc
    4080:	ldr	r3, [r3]
    4084:	mov	r1, r3
    4088:	ldr	r0, [fp, #-24]	; 0xffffffe8
    408c:	bl	0 <coda_type_record_field_set_type>
    4090:	bl	0 <__aeabi_read_tp>
    4094:	mov	r2, r0
    4098:	ldr	r3, [pc, #816]	; 43d0 <sp3_init+0x41e4>
    409c:	ldr	r3, [r2, r3]
    40a0:	add	r3, r3, #216	; 0xd8
    40a4:	ldr	r3, [r3]
    40a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    40ac:	mov	r0, r3
    40b0:	bl	0 <coda_type_record_add_field>
    40b4:	ldr	r0, [pc, #840]	; 4404 <sp3_init+0x4218>
    40b8:	bl	0 <coda_type_record_field_new>
    40bc:	str	r0, [fp, #-24]	; 0xffffffe8
    40c0:	bl	0 <__aeabi_read_tp>
    40c4:	mov	r2, r0
    40c8:	ldr	r3, [pc, #768]	; 43d0 <sp3_init+0x41e4>
    40cc:	ldr	r3, [r2, r3]
    40d0:	add	r3, r3, #256	; 0x100
    40d4:	ldr	r3, [r3]
    40d8:	mov	r1, r3
    40dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    40e0:	bl	0 <coda_type_record_field_set_type>
    40e4:	bl	0 <__aeabi_read_tp>
    40e8:	mov	r2, r0
    40ec:	ldr	r3, [pc, #732]	; 43d0 <sp3_init+0x41e4>
    40f0:	ldr	r3, [r2, r3]
    40f4:	add	r3, r3, #216	; 0xd8
    40f8:	ldr	r3, [r3]
    40fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4100:	mov	r0, r3
    4104:	bl	0 <coda_type_record_add_field>
    4108:	bl	0 <__aeabi_read_tp>
    410c:	mov	r2, r0
    4110:	ldr	r3, [pc, #696]	; 43d0 <sp3_init+0x41e4>
    4114:	ldr	r3, [r2, r3]
    4118:	add	r4, r3, #276	; 0x114
    411c:	mov	r0, #9
    4120:	bl	0 <coda_type_record_new>
    4124:	mov	r3, r0
    4128:	str	r3, [r4]
    412c:	ldr	r0, [pc, #724]	; 4408 <sp3_init+0x421c>
    4130:	bl	0 <coda_type_record_field_new>
    4134:	str	r0, [fp, #-24]	; 0xffffffe8
    4138:	bl	0 <__aeabi_read_tp>
    413c:	mov	r2, r0
    4140:	ldr	r3, [pc, #648]	; 43d0 <sp3_init+0x41e4>
    4144:	ldr	r3, [r2, r3]
    4148:	add	r3, r3, #88	; 0x58
    414c:	ldr	r3, [r3]
    4150:	mov	r1, r3
    4154:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4158:	bl	0 <coda_type_record_field_set_type>
    415c:	bl	0 <__aeabi_read_tp>
    4160:	mov	r2, r0
    4164:	ldr	r3, [pc, #612]	; 43d0 <sp3_init+0x41e4>
    4168:	ldr	r3, [r2, r3]
    416c:	add	r3, r3, #276	; 0x114
    4170:	ldr	r3, [r3]
    4174:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4178:	mov	r0, r3
    417c:	bl	0 <coda_type_record_add_field>
    4180:	ldr	r0, [pc, #688]	; 4438 <sp3_init+0x424c>
    4184:	bl	0 <coda_type_record_field_new>
    4188:	str	r0, [fp, #-24]	; 0xffffffe8
    418c:	bl	0 <__aeabi_read_tp>
    4190:	mov	r2, r0
    4194:	ldr	r3, [pc, #564]	; 43d0 <sp3_init+0x41e4>
    4198:	ldr	r3, [r2, r3]
    419c:	add	r3, r3, #184	; 0xb8
    41a0:	ldr	r3, [r3]
    41a4:	mov	r1, r3
    41a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    41ac:	bl	0 <coda_type_record_field_set_type>
    41b0:	bl	0 <__aeabi_read_tp>
    41b4:	mov	r2, r0
    41b8:	ldr	r3, [pc, #528]	; 43d0 <sp3_init+0x41e4>
    41bc:	ldr	r3, [r2, r3]
    41c0:	add	r3, r3, #276	; 0x114
    41c4:	ldr	r3, [r3]
    41c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    41cc:	mov	r0, r3
    41d0:	bl	0 <coda_type_record_add_field>
    41d4:	ldr	r0, [pc, #608]	; 443c <sp3_init+0x4250>
    41d8:	bl	0 <coda_type_record_field_new>
    41dc:	str	r0, [fp, #-24]	; 0xffffffe8
    41e0:	bl	0 <__aeabi_read_tp>
    41e4:	mov	r2, r0
    41e8:	ldr	r3, [pc, #480]	; 43d0 <sp3_init+0x41e4>
    41ec:	ldr	r3, [r2, r3]
    41f0:	add	r3, r3, #188	; 0xbc
    41f4:	ldr	r3, [r3]
    41f8:	mov	r1, r3
    41fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4200:	bl	0 <coda_type_record_field_set_type>
    4204:	bl	0 <__aeabi_read_tp>
    4208:	mov	r2, r0
    420c:	ldr	r3, [pc, #444]	; 43d0 <sp3_init+0x41e4>
    4210:	ldr	r3, [r2, r3]
    4214:	add	r3, r3, #276	; 0x114
    4218:	ldr	r3, [r3]
    421c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4220:	mov	r0, r3
    4224:	bl	0 <coda_type_record_add_field>
    4228:	ldr	r0, [pc, #528]	; 4440 <sp3_init+0x4254>
    422c:	bl	0 <coda_type_record_field_new>
    4230:	str	r0, [fp, #-24]	; 0xffffffe8
    4234:	bl	0 <__aeabi_read_tp>
    4238:	mov	r2, r0
    423c:	ldr	r3, [pc, #396]	; 43d0 <sp3_init+0x41e4>
    4240:	ldr	r3, [r2, r3]
    4244:	add	r3, r3, #192	; 0xc0
    4248:	ldr	r3, [r3]
    424c:	mov	r1, r3
    4250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4254:	bl	0 <coda_type_record_field_set_type>
    4258:	bl	0 <__aeabi_read_tp>
    425c:	mov	r2, r0
    4260:	ldr	r3, [pc, #360]	; 43d0 <sp3_init+0x41e4>
    4264:	ldr	r3, [r2, r3]
    4268:	add	r3, r3, #276	; 0x114
    426c:	ldr	r3, [r3]
    4270:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4274:	mov	r0, r3
    4278:	bl	0 <coda_type_record_add_field>
    427c:	ldr	r0, [pc, #448]	; 4444 <sp3_init+0x4258>
    4280:	bl	0 <coda_type_record_field_new>
    4284:	str	r0, [fp, #-24]	; 0xffffffe8
    4288:	bl	0 <__aeabi_read_tp>
    428c:	mov	r2, r0
    4290:	ldr	r3, [pc, #312]	; 43d0 <sp3_init+0x41e4>
    4294:	ldr	r3, [r2, r3]
    4298:	add	r3, r3, #196	; 0xc4
    429c:	ldr	r3, [r3]
    42a0:	mov	r1, r3
    42a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    42a8:	bl	0 <coda_type_record_field_set_type>
    42ac:	bl	0 <__aeabi_read_tp>
    42b0:	mov	r2, r0
    42b4:	ldr	r3, [pc, #276]	; 43d0 <sp3_init+0x41e4>
    42b8:	ldr	r3, [r2, r3]
    42bc:	add	r3, r3, #276	; 0x114
    42c0:	ldr	r3, [r3]
    42c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    42c8:	mov	r0, r3
    42cc:	bl	0 <coda_type_record_add_field>
    42d0:	ldr	r0, [pc, #340]	; 442c <sp3_init+0x4240>
    42d4:	bl	0 <coda_type_record_field_new>
    42d8:	str	r0, [fp, #-24]	; 0xffffffe8
    42dc:	bl	0 <__aeabi_read_tp>
    42e0:	mov	r2, r0
    42e4:	ldr	r3, [pc, #228]	; 43d0 <sp3_init+0x41e4>
    42e8:	ldr	r3, [r2, r3]
    42ec:	add	r3, r3, #200	; 0xc8
    42f0:	ldr	r3, [r3]
    42f4:	mov	r1, r3
    42f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    42fc:	bl	0 <coda_type_record_field_set_type>
    4300:	bl	0 <__aeabi_read_tp>
    4304:	mov	r2, r0
    4308:	ldr	r3, [pc, #192]	; 43d0 <sp3_init+0x41e4>
    430c:	ldr	r3, [r2, r3]
    4310:	add	r3, r3, #276	; 0x114
    4314:	ldr	r3, [r3]
    4318:	ldr	r1, [fp, #-24]	; 0xffffffe8
    431c:	mov	r0, r3
    4320:	bl	0 <coda_type_record_add_field>
    4324:	ldr	r0, [pc, #260]	; 4430 <sp3_init+0x4244>
    4328:	bl	0 <coda_type_record_field_new>
    432c:	str	r0, [fp, #-24]	; 0xffffffe8
    4330:	bl	0 <__aeabi_read_tp>
    4334:	mov	r2, r0
    4338:	ldr	r3, [pc, #144]	; 43d0 <sp3_init+0x41e4>
    433c:	ldr	r3, [r2, r3]
    4340:	add	r3, r3, #204	; 0xcc
    4344:	ldr	r3, [r3]
    4348:	mov	r1, r3
    434c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4350:	bl	0 <coda_type_record_field_set_type>
    4354:	bl	0 <__aeabi_read_tp>
    4358:	mov	r2, r0
    435c:	ldr	r3, [pc, #108]	; 43d0 <sp3_init+0x41e4>
    4360:	ldr	r3, [r2, r3]
    4364:	add	r3, r3, #276	; 0x114
    4368:	ldr	r3, [r3]
    436c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4370:	mov	r0, r3
    4374:	bl	0 <coda_type_record_add_field>
    4378:	ldr	r0, [pc, #180]	; 4434 <sp3_init+0x4248>
    437c:	bl	0 <coda_type_record_field_new>
    4380:	str	r0, [fp, #-24]	; 0xffffffe8
    4384:	bl	0 <__aeabi_read_tp>
    4388:	mov	r2, r0
    438c:	ldr	r3, [pc, #60]	; 43d0 <sp3_init+0x41e4>
    4390:	ldr	r3, [r2, r3]
    4394:	add	r3, r3, #208	; 0xd0
    4398:	ldr	r3, [r3]
    439c:	mov	r1, r3
    43a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    43a4:	bl	0 <coda_type_record_field_set_type>
    43a8:	bl	0 <__aeabi_read_tp>
    43ac:	mov	r2, r0
    43b0:	ldr	r3, [pc, #24]	; 43d0 <sp3_init+0x41e4>
    43b4:	ldr	r3, [r2, r3]
    43b8:	add	r3, r3, #276	; 0x114
    43bc:	ldr	r3, [r3]
    43c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    43c4:	mov	r0, r3
    43c8:	bl	0 <coda_type_record_add_field>
    43cc:	b	4468 <sp3_init+0x427c>
    43d0:	.word	0x00000000
    43d4:	.word	0x00000644
    43d8:	.word	0x00000650
    43dc:	.word	0x00000660
    43e0:	.word	0x00000670
    43e4:	.word	0x00000678
    43e8:	.word	0x00000680
    43ec:	.word	0x00000688
    43f0:	.word	0x00000694
    43f4:	.word	0x0000069c
    43f8:	.word	0x000006a4
    43fc:	.word	0x000006ac
    4400:	.word	0x000006b4
    4404:	.word	0x000006bc
    4408:	.word	0x000006c4
    440c:	.word	0x000006d0
    4410:	.word	0x000006e0
    4414:	.word	0x000006f0
    4418:	.word	0x00000320
    441c:	.word	0x00000700
    4420:	.word	0x00000714
    4424:	.word	0x00000724
    4428:	.word	0x00000734
    442c:	.word	0x0000074c
    4430:	.word	0x00000758
    4434:	.word	0x00000764
    4438:	.word	0x00000780
    443c:	.word	0x0000078c
    4440:	.word	0x00000798
    4444:	.word	0x000007a4
    4448:	.word	0x00000770
    444c:	.word	0x00000744
    4450:	.word	0x000007b0
    4454:	.word	0x000007b8
    4458:	.word	0x000007c0
    445c:	.word	0x000007cc
    4460:	.word	0x000007d4
    4464:	.word	0x00000000
    4468:	ldr	r0, [pc, #-40]	; 4448 <sp3_init+0x425c>
    446c:	bl	0 <coda_type_record_field_new>
    4470:	str	r0, [fp, #-24]	; 0xffffffe8
    4474:	bl	0 <__aeabi_read_tp>
    4478:	mov	r2, r0
    447c:	ldr	r3, [pc, #-32]	; 4464 <sp3_init+0x4278>
    4480:	ldr	r3, [r2, r3]
    4484:	add	r3, r3, #212	; 0xd4
    4488:	ldr	r3, [r3]
    448c:	mov	r1, r3
    4490:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4494:	bl	0 <coda_type_record_field_set_type>
    4498:	bl	0 <__aeabi_read_tp>
    449c:	mov	r2, r0
    44a0:	ldr	r3, [pc, #-68]	; 4464 <sp3_init+0x4278>
    44a4:	ldr	r3, [r2, r3]
    44a8:	add	r3, r3, #276	; 0x114
    44ac:	ldr	r3, [r3]
    44b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    44b4:	mov	r0, r3
    44b8:	bl	0 <coda_type_record_add_field>
    44bc:	ldr	r0, [pc, #-120]	; 444c <sp3_init+0x4260>
    44c0:	bl	0 <coda_type_record_field_new>
    44c4:	str	r0, [fp, #-24]	; 0xffffffe8
    44c8:	bl	0 <__aeabi_read_tp>
    44cc:	mov	r2, r0
    44d0:	ldr	r3, [pc, #-116]	; 4464 <sp3_init+0x4278>
    44d4:	ldr	r3, [r2, r3]
    44d8:	add	r3, r3, #216	; 0xd8
    44dc:	ldr	r3, [r3]
    44e0:	mov	r1, r3
    44e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44e8:	bl	0 <coda_type_record_field_set_type>
    44ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44f0:	bl	0 <coda_type_record_field_set_optional>
    44f4:	bl	0 <__aeabi_read_tp>
    44f8:	mov	r2, r0
    44fc:	ldr	r3, [pc, #-160]	; 4464 <sp3_init+0x4278>
    4500:	ldr	r3, [r2, r3]
    4504:	add	r3, r3, #276	; 0x114
    4508:	ldr	r3, [r3]
    450c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4510:	mov	r0, r3
    4514:	bl	0 <coda_type_record_add_field>
    4518:	bl	0 <__aeabi_read_tp>
    451c:	mov	r2, r0
    4520:	ldr	r3, [pc, #-196]	; 4464 <sp3_init+0x4278>
    4524:	ldr	r3, [r2, r3]
    4528:	add	r4, r3, #280	; 0x118
    452c:	mov	r0, #9
    4530:	bl	0 <coda_type_array_new>
    4534:	mov	r3, r0
    4538:	str	r3, [r4]
    453c:	bl	0 <__aeabi_read_tp>
    4540:	mov	r2, r0
    4544:	ldr	r3, [pc, #-232]	; 4464 <sp3_init+0x4278>
    4548:	ldr	r3, [r2, r3]
    454c:	add	r3, r3, #280	; 0x118
    4550:	ldr	r3, [r3]
    4554:	mov	r1, #0
    4558:	mov	r0, r3
    455c:	bl	0 <coda_type_array_add_variable_dimension>
    4560:	bl	0 <__aeabi_read_tp>
    4564:	mov	r2, r0
    4568:	ldr	r3, [pc, #-268]	; 4464 <sp3_init+0x4278>
    456c:	ldr	r3, [r2, r3]
    4570:	add	r3, r3, #280	; 0x118
    4574:	ldr	r2, [r3]
    4578:	bl	0 <__aeabi_read_tp>
    457c:	mov	r1, r0
    4580:	ldr	r3, [pc, #-292]	; 4464 <sp3_init+0x4278>
    4584:	ldr	r3, [r1, r3]
    4588:	add	r3, r3, #276	; 0x114
    458c:	ldr	r3, [r3]
    4590:	mov	r1, r3
    4594:	mov	r0, r2
    4598:	bl	0 <coda_type_array_set_base_type>
    459c:	bl	0 <__aeabi_read_tp>
    45a0:	mov	r2, r0
    45a4:	ldr	r3, [pc, #-328]	; 4464 <sp3_init+0x4278>
    45a8:	ldr	r3, [r2, r3]
    45ac:	add	r4, r3, #292	; 0x124
    45b0:	mov	r0, #9
    45b4:	bl	0 <coda_type_record_new>
    45b8:	mov	r3, r0
    45bc:	str	r3, [r4]
    45c0:	ldr	r0, [pc, #-376]	; 4450 <sp3_init+0x4264>
    45c4:	bl	0 <coda_type_record_field_new>
    45c8:	str	r0, [fp, #-24]	; 0xffffffe8
    45cc:	bl	0 <__aeabi_read_tp>
    45d0:	mov	r2, r0
    45d4:	ldr	r3, [pc, #-376]	; 4464 <sp3_init+0x4278>
    45d8:	ldr	r3, [r2, r3]
    45dc:	add	r3, r3, #264	; 0x108
    45e0:	ldr	r3, [r3]
    45e4:	mov	r1, r3
    45e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    45ec:	bl	0 <coda_type_record_field_set_type>
    45f0:	bl	0 <__aeabi_read_tp>
    45f4:	mov	r2, r0
    45f8:	ldr	r3, [pc, #-412]	; 4464 <sp3_init+0x4278>
    45fc:	ldr	r3, [r2, r3]
    4600:	add	r3, r3, #292	; 0x124
    4604:	ldr	r3, [r3]
    4608:	ldr	r1, [fp, #-24]	; 0xffffffe8
    460c:	mov	r0, r3
    4610:	bl	0 <coda_type_record_add_field>
    4614:	ldr	r0, [pc, #-456]	; 4454 <sp3_init+0x4268>
    4618:	bl	0 <coda_type_record_field_new>
    461c:	str	r0, [fp, #-24]	; 0xffffffe8
    4620:	bl	0 <__aeabi_read_tp>
    4624:	mov	r2, r0
    4628:	ldr	r3, [pc, #-460]	; 4464 <sp3_init+0x4278>
    462c:	ldr	r3, [r2, r3]
    4630:	add	r3, r3, #272	; 0x110
    4634:	ldr	r3, [r3]
    4638:	mov	r1, r3
    463c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4640:	bl	0 <coda_type_record_field_set_type>
    4644:	bl	0 <__aeabi_read_tp>
    4648:	mov	r2, r0
    464c:	ldr	r3, [pc, #-496]	; 4464 <sp3_init+0x4278>
    4650:	ldr	r3, [r2, r3]
    4654:	add	r3, r3, #292	; 0x124
    4658:	ldr	r3, [r3]
    465c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4660:	mov	r0, r3
    4664:	bl	0 <coda_type_record_add_field>
    4668:	ldr	r0, [pc, #-536]	; 4458 <sp3_init+0x426c>
    466c:	bl	0 <coda_type_record_field_new>
    4670:	str	r0, [fp, #-24]	; 0xffffffe8
    4674:	bl	0 <__aeabi_read_tp>
    4678:	mov	r2, r0
    467c:	ldr	r3, [pc, #-544]	; 4464 <sp3_init+0x4278>
    4680:	ldr	r3, [r2, r3]
    4684:	add	r3, r3, #280	; 0x118
    4688:	ldr	r3, [r3]
    468c:	mov	r1, r3
    4690:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4694:	bl	0 <coda_type_record_field_set_type>
    4698:	ldr	r0, [fp, #-24]	; 0xffffffe8
    469c:	bl	0 <coda_type_record_field_set_optional>
    46a0:	bl	0 <__aeabi_read_tp>
    46a4:	mov	r2, r0
    46a8:	ldr	r3, [pc, #-588]	; 4464 <sp3_init+0x4278>
    46ac:	ldr	r3, [r2, r3]
    46b0:	add	r3, r3, #292	; 0x124
    46b4:	ldr	r3, [r3]
    46b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    46bc:	mov	r0, r3
    46c0:	bl	0 <coda_type_record_add_field>
    46c4:	bl	0 <__aeabi_read_tp>
    46c8:	mov	r2, r0
    46cc:	ldr	r3, [pc, #-624]	; 4464 <sp3_init+0x4278>
    46d0:	ldr	r3, [r2, r3]
    46d4:	add	r4, r3, #288	; 0x120
    46d8:	mov	r0, #9
    46dc:	bl	0 <coda_type_array_new>
    46e0:	mov	r3, r0
    46e4:	str	r3, [r4]
    46e8:	bl	0 <__aeabi_read_tp>
    46ec:	mov	r2, r0
    46f0:	ldr	r3, [pc, #-660]	; 4464 <sp3_init+0x4278>
    46f4:	ldr	r3, [r2, r3]
    46f8:	add	r3, r3, #288	; 0x120
    46fc:	ldr	r3, [r3]
    4700:	mov	r1, #0
    4704:	mov	r0, r3
    4708:	bl	0 <coda_type_array_add_variable_dimension>
    470c:	bl	0 <__aeabi_read_tp>
    4710:	mov	r2, r0
    4714:	ldr	r3, [pc, #-696]	; 4464 <sp3_init+0x4278>
    4718:	ldr	r3, [r2, r3]
    471c:	add	r3, r3, #288	; 0x120
    4720:	ldr	r2, [r3]
    4724:	bl	0 <__aeabi_read_tp>
    4728:	mov	r1, r0
    472c:	ldr	r3, [pc, #-720]	; 4464 <sp3_init+0x4278>
    4730:	ldr	r3, [r1, r3]
    4734:	add	r3, r3, #292	; 0x124
    4738:	ldr	r3, [r3]
    473c:	mov	r1, r3
    4740:	mov	r0, r2
    4744:	bl	0 <coda_type_array_set_base_type>
    4748:	bl	0 <__aeabi_read_tp>
    474c:	mov	r2, r0
    4750:	ldr	r3, [pc, #-756]	; 4464 <sp3_init+0x4278>
    4754:	ldr	r3, [r2, r3]
    4758:	add	r4, r3, #296	; 0x128
    475c:	mov	r0, #9
    4760:	bl	0 <coda_type_record_new>
    4764:	mov	r3, r0
    4768:	str	r3, [r4]
    476c:	ldr	r0, [pc, #-792]	; 445c <sp3_init+0x4270>
    4770:	bl	0 <coda_type_record_field_new>
    4774:	str	r0, [fp, #-24]	; 0xffffffe8
    4778:	bl	0 <__aeabi_read_tp>
    477c:	mov	r2, r0
    4780:	ldr	r3, [pc, #-804]	; 4464 <sp3_init+0x4278>
    4784:	ldr	r3, [r2, r3]
    4788:	add	r3, r3, #284	; 0x11c
    478c:	ldr	r3, [r3]
    4790:	mov	r1, r3
    4794:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4798:	bl	0 <coda_type_record_field_set_type>
    479c:	bl	0 <__aeabi_read_tp>
    47a0:	mov	r2, r0
    47a4:	ldr	r3, [pc, #-840]	; 4464 <sp3_init+0x4278>
    47a8:	ldr	r3, [r2, r3]
    47ac:	add	r3, r3, #296	; 0x128
    47b0:	ldr	r3, [r3]
    47b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    47b8:	mov	r0, r3
    47bc:	bl	0 <coda_type_record_add_field>
    47c0:	ldr	r0, [pc, #-872]	; 4460 <sp3_init+0x4274>
    47c4:	bl	0 <coda_type_record_field_new>
    47c8:	str	r0, [fp, #-24]	; 0xffffffe8
    47cc:	bl	0 <__aeabi_read_tp>
    47d0:	mov	r2, r0
    47d4:	ldr	r3, [pc, #-888]	; 4464 <sp3_init+0x4278>
    47d8:	ldr	r3, [r2, r3]
    47dc:	add	r3, r3, #288	; 0x120
    47e0:	ldr	r3, [r3]
    47e4:	mov	r1, r3
    47e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    47ec:	bl	0 <coda_type_record_field_set_type>
    47f0:	bl	0 <__aeabi_read_tp>
    47f4:	mov	r2, r0
    47f8:	ldr	r3, [pc, #-924]	; 4464 <sp3_init+0x4278>
    47fc:	ldr	r3, [r2, r3]
    4800:	add	r3, r3, #296	; 0x128
    4804:	ldr	r3, [r3]
    4808:	ldr	r1, [fp, #-24]	; 0xffffffe8
    480c:	mov	r0, r3
    4810:	bl	0 <coda_type_record_add_field>
    4814:	mov	r3, #0
    4818:	mov	r0, r3
    481c:	sub	sp, fp, #8
    4820:	pop	{r4, fp, pc}

00004824 <coda_sp3_done>:
    4824:	push	{fp, lr}
    4828:	add	fp, sp, #4
    482c:	sub	sp, sp, #8
    4830:	bl	0 <__aeabi_read_tp>
    4834:	mov	r2, r0
    4838:	ldr	r3, [pc, #220]	; 491c <coda_sp3_done+0xf8>
    483c:	ldr	r3, [r2, r3]
    4840:	cmp	r3, #0
    4844:	beq	4910 <coda_sp3_done+0xec>
    4848:	mov	r3, #0
    484c:	str	r3, [fp, #-8]
    4850:	b	48d4 <coda_sp3_done+0xb0>
    4854:	bl	0 <__aeabi_read_tp>
    4858:	mov	r2, r0
    485c:	ldr	r3, [pc, #184]	; 491c <coda_sp3_done+0xf8>
    4860:	ldr	r2, [r2, r3]
    4864:	ldr	r3, [fp, #-8]
    4868:	lsl	r3, r3, #2
    486c:	add	r3, r2, r3
    4870:	ldr	r3, [r3]
    4874:	cmp	r3, #0
    4878:	beq	48c8 <coda_sp3_done+0xa4>
    487c:	bl	0 <__aeabi_read_tp>
    4880:	mov	r2, r0
    4884:	ldr	r3, [pc, #144]	; 491c <coda_sp3_done+0xf8>
    4888:	ldr	r2, [r2, r3]
    488c:	ldr	r3, [fp, #-8]
    4890:	lsl	r3, r3, #2
    4894:	add	r3, r2, r3
    4898:	ldr	r3, [r3]
    489c:	mov	r0, r3
    48a0:	bl	0 <coda_type_release>
    48a4:	bl	0 <__aeabi_read_tp>
    48a8:	mov	r2, r0
    48ac:	ldr	r3, [pc, #104]	; 491c <coda_sp3_done+0xf8>
    48b0:	ldr	r2, [r2, r3]
    48b4:	ldr	r3, [fp, #-8]
    48b8:	lsl	r3, r3, #2
    48bc:	add	r3, r2, r3
    48c0:	mov	r2, #0
    48c4:	str	r2, [r3]
    48c8:	ldr	r3, [fp, #-8]
    48cc:	add	r3, r3, #1
    48d0:	str	r3, [fp, #-8]
    48d4:	ldr	r3, [fp, #-8]
    48d8:	cmp	r3, #74	; 0x4a
    48dc:	ble	4854 <coda_sp3_done+0x30>
    48e0:	bl	0 <__aeabi_read_tp>
    48e4:	mov	r2, r0
    48e8:	ldr	r3, [pc, #44]	; 491c <coda_sp3_done+0xf8>
    48ec:	ldr	r3, [r2, r3]
    48f0:	mov	r0, r3
    48f4:	bl	0 <free>
    48f8:	bl	0 <__aeabi_read_tp>
    48fc:	mov	r1, r0
    4900:	ldr	r3, [pc, #20]	; 491c <coda_sp3_done+0xf8>
    4904:	mov	r2, #0
    4908:	str	r2, [r1, r3]
    490c:	b	4914 <coda_sp3_done+0xf0>
    4910:	nop			; (mov r0, r0)
    4914:	sub	sp, fp, #4
    4918:	pop	{fp, pc}
    491c:	.word	0x00000000

00004920 <get_line>:
    4920:	push	{fp, lr}
    4924:	add	fp, sp, #4
    4928:	sub	sp, sp, #16
    492c:	str	r0, [fp, #-16]
    4930:	str	r1, [fp, #-20]	; 0xffffffec
    4934:	ldr	r2, [fp, #-16]
    4938:	mov	r1, #1000	; 0x3e8
    493c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4940:	bl	0 <fgets>
    4944:	mov	r3, r0
    4948:	cmp	r3, #0
    494c:	bne	49a8 <get_line+0x88>
    4950:	ldr	r0, [fp, #-16]
    4954:	bl	0 <ferror>
    4958:	mov	r3, r0
    495c:	cmp	r3, #0
    4960:	beq	4994 <get_line+0x74>
    4964:	bl	0 <__errno_location>
    4968:	mov	r3, r0
    496c:	ldr	r3, [r3]
    4970:	mov	r0, r3
    4974:	bl	0 <strerror>
    4978:	mov	r3, r0
    497c:	mov	r2, r3
    4980:	ldr	r1, [pc, #216]	; 4a60 <get_line+0x140>
    4984:	mvn	r0, #21
    4988:	bl	0 <coda_set_error>
    498c:	mvn	r3, #0
    4990:	b	4a54 <get_line+0x134>
    4994:	ldr	r3, [fp, #-20]	; 0xffffffec
    4998:	mov	r2, #0
    499c:	strb	r2, [r3]
    49a0:	mov	r3, #0
    49a4:	b	4a54 <get_line+0x134>
    49a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    49ac:	bl	0 <strlen>
    49b0:	mov	r3, r0
    49b4:	str	r3, [fp, #-8]
    49b8:	ldr	r3, [fp, #-8]
    49bc:	cmp	r3, #0
    49c0:	ble	4a04 <get_line+0xe4>
    49c4:	ldr	r3, [fp, #-8]
    49c8:	sub	r3, r3, #1
    49cc:	ldr	r2, [fp, #-20]	; 0xffffffec
    49d0:	add	r3, r2, r3
    49d4:	ldrb	r3, [r3]
    49d8:	cmp	r3, #10
    49dc:	bne	4a04 <get_line+0xe4>
    49e0:	ldr	r3, [fp, #-8]
    49e4:	sub	r3, r3, #1
    49e8:	ldr	r2, [fp, #-20]	; 0xffffffec
    49ec:	add	r3, r2, r3
    49f0:	mov	r2, #0
    49f4:	strb	r2, [r3]
    49f8:	ldr	r3, [fp, #-8]
    49fc:	sub	r3, r3, #1
    4a00:	str	r3, [fp, #-8]
    4a04:	ldr	r3, [fp, #-8]
    4a08:	cmp	r3, #0
    4a0c:	ble	4a50 <get_line+0x130>
    4a10:	ldr	r3, [fp, #-8]
    4a14:	sub	r3, r3, #1
    4a18:	ldr	r2, [fp, #-20]	; 0xffffffec
    4a1c:	add	r3, r2, r3
    4a20:	ldrb	r3, [r3]
    4a24:	cmp	r3, #13
    4a28:	bne	4a50 <get_line+0x130>
    4a2c:	ldr	r3, [fp, #-8]
    4a30:	sub	r3, r3, #1
    4a34:	ldr	r2, [fp, #-20]	; 0xffffffec
    4a38:	add	r3, r2, r3
    4a3c:	mov	r2, #0
    4a40:	strb	r2, [r3]
    4a44:	ldr	r3, [fp, #-8]
    4a48:	sub	r3, r3, #1
    4a4c:	str	r3, [fp, #-8]
    4a50:	ldr	r3, [fp, #-8]
    4a54:	mov	r0, r3
    4a58:	sub	sp, fp, #4
    4a5c:	pop	{fp, pc}
    4a60:	.word	0x000007dc

00004a64 <read_header>:
    4a64:	push	{fp, lr}
    4a68:	add	fp, sp, #4
    4a6c:	sub	sp, sp, #1120	; 0x460
    4a70:	str	r0, [fp, #-1112]	; 0xfffffba8
    4a74:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4a78:	ldr	r3, [r3]
    4a7c:	mov	r0, r3
    4a80:	bl	0 <ftell>
    4a84:	mov	r2, r0
    4a88:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4a8c:	str	r2, [r3, #52]	; 0x34
    4a90:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4a94:	ldr	r3, [r3, #48]	; 0x30
    4a98:	add	r2, r3, #1
    4a9c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4aa0:	str	r2, [r3, #48]	; 0x30
    4aa4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4aa8:	ldr	r3, [r3]
    4aac:	sub	r2, fp, #1024	; 0x400
    4ab0:	mov	r1, r2
    4ab4:	mov	r0, r3
    4ab8:	bl	4920 <get_line>
    4abc:	str	r0, [fp, #-12]
    4ac0:	ldr	r3, [fp, #-12]
    4ac4:	cmp	r3, #0
    4ac8:	bge	4ad4 <read_header+0x70>
    4acc:	mvn	r3, #0
    4ad0:	b	5f04 <read_header+0x14a0>
    4ad4:	ldr	r3, [fp, #-12]
    4ad8:	cmp	r3, #59	; 0x3b
    4adc:	bgt	4b10 <read_header+0xac>
    4ae0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4ae4:	ldr	r2, [r3, #48]	; 0x30
    4ae8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4aec:	ldr	r3, [r3, #52]	; 0x34
    4af0:	str	r3, [sp]
    4af4:	mov	r3, r2
    4af8:	ldr	r2, [fp, #-12]
    4afc:	ldr	r1, [pc, #3940]	; 5a68 <read_header+0x1004>
    4b00:	mvn	r0, #21
    4b04:	bl	0 <coda_set_error>
    4b08:	mvn	r3, #0
    4b0c:	b	5f04 <read_header+0x14a0>
    4b10:	ldrb	r2, [fp, #-1022]	; 0xfffffc02
    4b14:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4b18:	strb	r2, [r3, #44]	; 0x2c
    4b1c:	ldrb	r3, [fp, #-1022]	; 0xfffffc02
    4b20:	strb	r3, [fp, #-1108]	; 0xfffffbac
    4b24:	mov	r3, #0
    4b28:	strb	r3, [fp, #-1107]	; 0xfffffbad
    4b2c:	bl	0 <__aeabi_read_tp>
    4b30:	mov	r2, r0
    4b34:	ldr	r3, [pc, #3904]	; 5a7c <read_header+0x1018>
    4b38:	ldr	r3, [r2, r3]
    4b3c:	ldr	r0, [r3]
    4b40:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4b44:	ldr	r2, [r3, #4]
    4b48:	sub	r3, fp, #1104	; 0x450
    4b4c:	sub	r3, r3, #4
    4b50:	mov	r1, #0
    4b54:	bl	0 <coda_mem_string_new>
    4b58:	str	r0, [fp, #-16]
    4b5c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4b60:	ldr	r0, [r3, #8]
    4b64:	mov	r3, #0
    4b68:	ldr	r2, [fp, #-16]
    4b6c:	ldr	r1, [pc, #3736]	; 5a0c <read_header+0xfa8>
    4b70:	bl	0 <coda_mem_record_add_field>
    4b74:	sub	r3, fp, #1024	; 0x400
    4b78:	add	r1, r3, #3
    4b7c:	sub	r3, fp, #1104	; 0x450
    4b80:	sub	r3, r3, #4
    4b84:	mov	r2, #28
    4b88:	mov	r0, r3
    4b8c:	bl	0 <memcpy>
    4b90:	mov	r3, #0
    4b94:	strb	r3, [fp, #-1080]	; 0xfffffbc8
    4b98:	bl	0 <__aeabi_read_tp>
    4b9c:	mov	r2, r0
    4ba0:	ldr	r3, [pc, #3796]	; 5a7c <read_header+0x1018>
    4ba4:	ldr	r3, [r2, r3]
    4ba8:	add	r3, r3, #4
    4bac:	ldr	r0, [r3]
    4bb0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4bb4:	ldr	r2, [r3, #4]
    4bb8:	sub	r3, fp, #1104	; 0x450
    4bbc:	sub	r3, r3, #4
    4bc0:	mov	r1, #0
    4bc4:	bl	0 <coda_mem_string_new>
    4bc8:	str	r0, [fp, #-20]	; 0xffffffec
    4bcc:	bl	0 <__aeabi_read_tp>
    4bd0:	mov	r2, r0
    4bd4:	ldr	r3, [pc, #3744]	; 5a7c <read_header+0x1018>
    4bd8:	ldr	r3, [r2, r3]
    4bdc:	add	r3, r3, #8
    4be0:	ldr	r3, [r3]
    4be4:	ldr	r2, [fp, #-20]	; 0xffffffec
    4be8:	mov	r1, #0
    4bec:	mov	r0, r3
    4bf0:	bl	0 <coda_mem_time_new>
    4bf4:	str	r0, [fp, #-16]
    4bf8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4bfc:	ldr	r0, [r3, #8]
    4c00:	mov	r3, #0
    4c04:	ldr	r2, [fp, #-16]
    4c08:	ldr	r1, [pc, #3584]	; 5a10 <read_header+0xfac>
    4c0c:	bl	0 <coda_mem_record_add_field>
    4c10:	sub	r2, fp, #1040	; 0x410
    4c14:	sub	r2, r2, #4
    4c18:	sub	r3, fp, #1024	; 0x400
    4c1c:	add	r0, r3, #32
    4c20:	mov	r3, #0
    4c24:	mov	r1, #7
    4c28:	bl	0 <coda_ascii_parse_int64>
    4c2c:	mov	r3, r0
    4c30:	cmp	r3, #0
    4c34:	bge	4c60 <read_header+0x1fc>
    4c38:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4c3c:	ldr	r1, [r3, #48]	; 0x30
    4c40:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4c44:	ldr	r3, [r3, #52]	; 0x34
    4c48:	add	r3, r3, #32
    4c4c:	mov	r2, r3
    4c50:	ldr	r0, [pc, #3616]	; 5a78 <read_header+0x1014>
    4c54:	bl	0 <coda_add_error_message>
    4c58:	mvn	r3, #0
    4c5c:	b	5f04 <read_header+0x14a0>
    4c60:	bl	0 <__aeabi_read_tp>
    4c64:	mov	r2, r0
    4c68:	ldr	r3, [pc, #3596]	; 5a7c <read_header+0x1018>
    4c6c:	ldr	r3, [r2, r3]
    4c70:	add	r3, r3, #12
    4c74:	ldr	r0, [r3]
    4c78:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4c7c:	ldr	r1, [r3, #4]
    4c80:	sub	r3, fp, #1040	; 0x410
    4c84:	sub	r3, r3, #4
    4c88:	ldrd	r2, [r3]
    4c8c:	mov	r3, r2
    4c90:	mov	r2, r1
    4c94:	mov	r1, #0
    4c98:	bl	0 <coda_mem_int32_new>
    4c9c:	str	r0, [fp, #-16]
    4ca0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4ca4:	ldr	r0, [r3, #8]
    4ca8:	mov	r3, #0
    4cac:	ldr	r2, [fp, #-16]
    4cb0:	ldr	r1, [pc, #3420]	; 5a14 <read_header+0xfb0>
    4cb4:	bl	0 <coda_mem_record_add_field>
    4cb8:	sub	r3, fp, #1024	; 0x400
    4cbc:	add	r1, r3, #40	; 0x28
    4cc0:	sub	r3, fp, #1104	; 0x450
    4cc4:	sub	r3, r3, #4
    4cc8:	mov	r2, #5
    4ccc:	mov	r0, r3
    4cd0:	bl	0 <memcpy>
    4cd4:	mov	r3, #0
    4cd8:	strb	r3, [fp, #-1103]	; 0xfffffbb1
    4cdc:	bl	0 <__aeabi_read_tp>
    4ce0:	mov	r2, r0
    4ce4:	ldr	r3, [pc, #3472]	; 5a7c <read_header+0x1018>
    4ce8:	ldr	r3, [r2, r3]
    4cec:	add	r3, r3, #16
    4cf0:	ldr	r0, [r3]
    4cf4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4cf8:	ldr	r2, [r3, #4]
    4cfc:	sub	r3, fp, #1104	; 0x450
    4d00:	sub	r3, r3, #4
    4d04:	mov	r1, #0
    4d08:	bl	0 <coda_mem_string_new>
    4d0c:	str	r0, [fp, #-16]
    4d10:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4d14:	ldr	r0, [r3, #8]
    4d18:	mov	r3, #0
    4d1c:	ldr	r2, [fp, #-16]
    4d20:	ldr	r1, [pc, #3312]	; 5a18 <read_header+0xfb4>
    4d24:	bl	0 <coda_mem_record_add_field>
    4d28:	sub	r3, fp, #1024	; 0x400
    4d2c:	add	r1, r3, #46	; 0x2e
    4d30:	sub	r3, fp, #1104	; 0x450
    4d34:	sub	r3, r3, #4
    4d38:	mov	r2, #5
    4d3c:	mov	r0, r3
    4d40:	bl	0 <memcpy>
    4d44:	mov	r3, #0
    4d48:	strb	r3, [fp, #-1103]	; 0xfffffbb1
    4d4c:	bl	0 <__aeabi_read_tp>
    4d50:	mov	r2, r0
    4d54:	ldr	r3, [pc, #3360]	; 5a7c <read_header+0x1018>
    4d58:	ldr	r3, [r2, r3]
    4d5c:	add	r3, r3, #20
    4d60:	ldr	r0, [r3]
    4d64:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4d68:	ldr	r2, [r3, #4]
    4d6c:	sub	r3, fp, #1104	; 0x450
    4d70:	sub	r3, r3, #4
    4d74:	mov	r1, #0
    4d78:	bl	0 <coda_mem_string_new>
    4d7c:	str	r0, [fp, #-16]
    4d80:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4d84:	ldr	r0, [r3, #8]
    4d88:	mov	r3, #0
    4d8c:	ldr	r2, [fp, #-16]
    4d90:	ldr	r1, [pc, #3204]	; 5a1c <read_header+0xfb8>
    4d94:	bl	0 <coda_mem_record_add_field>
    4d98:	sub	r3, fp, #1024	; 0x400
    4d9c:	add	r1, r3, #52	; 0x34
    4da0:	sub	r3, fp, #1104	; 0x450
    4da4:	sub	r3, r3, #4
    4da8:	mov	r2, #3
    4dac:	mov	r0, r3
    4db0:	bl	0 <memcpy>
    4db4:	mov	r3, #0
    4db8:	strb	r3, [fp, #-1105]	; 0xfffffbaf
    4dbc:	bl	0 <__aeabi_read_tp>
    4dc0:	mov	r2, r0
    4dc4:	ldr	r3, [pc, #3248]	; 5a7c <read_header+0x1018>
    4dc8:	ldr	r3, [r2, r3]
    4dcc:	add	r3, r3, #24
    4dd0:	ldr	r0, [r3]
    4dd4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4dd8:	ldr	r2, [r3, #4]
    4ddc:	sub	r3, fp, #1104	; 0x450
    4de0:	sub	r3, r3, #4
    4de4:	mov	r1, #0
    4de8:	bl	0 <coda_mem_string_new>
    4dec:	str	r0, [fp, #-16]
    4df0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4df4:	ldr	r0, [r3, #8]
    4df8:	mov	r3, #0
    4dfc:	ldr	r2, [fp, #-16]
    4e00:	ldr	r1, [pc, #3096]	; 5a20 <read_header+0xfbc>
    4e04:	bl	0 <coda_mem_record_add_field>
    4e08:	ldr	r3, [fp, #-968]	; 0xfffffc38
    4e0c:	str	r3, [fp, #-1108]	; 0xfffffbac
    4e10:	mov	r3, #0
    4e14:	strb	r3, [fp, #-1104]	; 0xfffffbb0
    4e18:	bl	0 <__aeabi_read_tp>
    4e1c:	mov	r2, r0
    4e20:	ldr	r3, [pc, #3156]	; 5a7c <read_header+0x1018>
    4e24:	ldr	r3, [r2, r3]
    4e28:	add	r3, r3, #28
    4e2c:	ldr	r0, [r3]
    4e30:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e34:	ldr	r2, [r3, #4]
    4e38:	sub	r3, fp, #1104	; 0x450
    4e3c:	sub	r3, r3, #4
    4e40:	mov	r1, #0
    4e44:	bl	0 <coda_mem_string_new>
    4e48:	str	r0, [fp, #-16]
    4e4c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e50:	ldr	r0, [r3, #8]
    4e54:	mov	r3, #0
    4e58:	ldr	r2, [fp, #-16]
    4e5c:	ldr	r1, [pc, #3008]	; 5a24 <read_header+0xfc0>
    4e60:	bl	0 <coda_mem_record_add_field>
    4e64:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e68:	ldr	r3, [r3]
    4e6c:	mov	r0, r3
    4e70:	bl	0 <ftell>
    4e74:	mov	r2, r0
    4e78:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e7c:	str	r2, [r3, #52]	; 0x34
    4e80:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e84:	ldr	r3, [r3, #48]	; 0x30
    4e88:	add	r2, r3, #1
    4e8c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e90:	str	r2, [r3, #48]	; 0x30
    4e94:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4e98:	ldr	r3, [r3]
    4e9c:	sub	r2, fp, #1024	; 0x400
    4ea0:	mov	r1, r2
    4ea4:	mov	r0, r3
    4ea8:	bl	4920 <get_line>
    4eac:	str	r0, [fp, #-12]
    4eb0:	ldr	r3, [fp, #-12]
    4eb4:	cmp	r3, #0
    4eb8:	bge	4ec4 <read_header+0x460>
    4ebc:	mvn	r3, #0
    4ec0:	b	5f04 <read_header+0x14a0>
    4ec4:	ldr	r3, [fp, #-12]
    4ec8:	cmp	r3, #59	; 0x3b
    4ecc:	bgt	4f00 <read_header+0x49c>
    4ed0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4ed4:	ldr	r2, [r3, #48]	; 0x30
    4ed8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4edc:	ldr	r3, [r3, #52]	; 0x34
    4ee0:	str	r3, [sp]
    4ee4:	mov	r3, r2
    4ee8:	ldr	r2, [fp, #-12]
    4eec:	ldr	r1, [pc, #2932]	; 5a68 <read_header+0x1004>
    4ef0:	mvn	r0, #21
    4ef4:	bl	0 <coda_set_error>
    4ef8:	mvn	r3, #0
    4efc:	b	5f04 <read_header+0x14a0>
    4f00:	sub	r3, fp, #1024	; 0x400
    4f04:	mov	r2, #3
    4f08:	ldr	r1, [pc, #2840]	; 5a28 <read_header+0xfc4>
    4f0c:	mov	r0, r3
    4f10:	bl	0 <memcmp>
    4f14:	mov	r3, r0
    4f18:	cmp	r3, #0
    4f1c:	beq	4f44 <read_header+0x4e0>
    4f20:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4f24:	ldr	r2, [r3, #48]	; 0x30
    4f28:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4f2c:	ldr	r3, [r3, #52]	; 0x34
    4f30:	ldr	r1, [pc, #2872]	; 5a70 <read_header+0x100c>
    4f34:	mvn	r0, #21
    4f38:	bl	0 <coda_set_error>
    4f3c:	mvn	r3, #0
    4f40:	b	5f04 <read_header+0x14a0>
    4f44:	sub	r2, fp, #1040	; 0x410
    4f48:	sub	r2, r2, #4
    4f4c:	sub	r3, fp, #1024	; 0x400
    4f50:	add	r0, r3, #3
    4f54:	mov	r3, #0
    4f58:	mov	r1, #4
    4f5c:	bl	0 <coda_ascii_parse_int64>
    4f60:	mov	r3, r0
    4f64:	cmp	r3, #0
    4f68:	bge	4f94 <read_header+0x530>
    4f6c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4f70:	ldr	r1, [r3, #48]	; 0x30
    4f74:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4f78:	ldr	r3, [r3, #52]	; 0x34
    4f7c:	add	r3, r3, #3
    4f80:	mov	r2, r3
    4f84:	ldr	r0, [pc, #2796]	; 5a78 <read_header+0x1014>
    4f88:	bl	0 <coda_add_error_message>
    4f8c:	mvn	r3, #0
    4f90:	b	5f04 <read_header+0x14a0>
    4f94:	bl	0 <__aeabi_read_tp>
    4f98:	mov	r2, r0
    4f9c:	ldr	r3, [pc, #2776]	; 5a7c <read_header+0x1018>
    4fa0:	ldr	r3, [r2, r3]
    4fa4:	add	r3, r3, #32
    4fa8:	ldr	r0, [r3]
    4fac:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4fb0:	ldr	r1, [r3, #4]
    4fb4:	sub	r3, fp, #1040	; 0x410
    4fb8:	sub	r3, r3, #4
    4fbc:	ldrd	r2, [r3]
    4fc0:	sxth	r3, r2
    4fc4:	mov	r2, r1
    4fc8:	mov	r1, #0
    4fcc:	bl	0 <coda_mem_int16_new>
    4fd0:	str	r0, [fp, #-16]
    4fd4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    4fd8:	ldr	r0, [r3, #8]
    4fdc:	mov	r3, #0
    4fe0:	ldr	r2, [fp, #-16]
    4fe4:	ldr	r1, [pc, #2624]	; 5a2c <read_header+0xfc8>
    4fe8:	bl	0 <coda_mem_record_add_field>
    4fec:	sub	r2, fp, #1024	; 0x400
    4ff0:	sub	r2, r2, #4
    4ff4:	sub	r2, r2, #8
    4ff8:	sub	r3, fp, #1024	; 0x400
    4ffc:	add	r0, r3, #8
    5000:	mov	r3, #0
    5004:	mov	r1, #15
    5008:	bl	0 <coda_ascii_parse_double>
    500c:	mov	r3, r0
    5010:	cmp	r3, #0
    5014:	bge	5040 <read_header+0x5dc>
    5018:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    501c:	ldr	r1, [r3, #48]	; 0x30
    5020:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5024:	ldr	r3, [r3, #52]	; 0x34
    5028:	add	r3, r3, #8
    502c:	mov	r2, r3
    5030:	ldr	r0, [pc, #2624]	; 5a78 <read_header+0x1014>
    5034:	bl	0 <coda_add_error_message>
    5038:	mvn	r3, #0
    503c:	b	5f04 <read_header+0x14a0>
    5040:	bl	0 <__aeabi_read_tp>
    5044:	mov	r2, r0
    5048:	ldr	r3, [pc, #2604]	; 5a7c <read_header+0x1018>
    504c:	ldr	r3, [r2, r3]
    5050:	add	r3, r3, #36	; 0x24
    5054:	ldr	r0, [r3]
    5058:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    505c:	ldr	r3, [r3, #4]
    5060:	sub	r2, fp, #1024	; 0x400
    5064:	sub	r2, r2, #4
    5068:	vldr	d7, [r2, #-8]
    506c:	vmov.f64	d0, d7
    5070:	mov	r2, r3
    5074:	mov	r1, #0
    5078:	bl	0 <coda_mem_double_new>
    507c:	str	r0, [fp, #-16]
    5080:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5084:	ldr	r0, [r3, #8]
    5088:	mov	r3, #0
    508c:	ldr	r2, [fp, #-16]
    5090:	ldr	r1, [pc, #2456]	; 5a30 <read_header+0xfcc>
    5094:	bl	0 <coda_mem_record_add_field>
    5098:	sub	r2, fp, #1024	; 0x400
    509c:	sub	r2, r2, #4
    50a0:	sub	r2, r2, #8
    50a4:	sub	r3, fp, #1024	; 0x400
    50a8:	add	r0, r3, #24
    50ac:	mov	r3, #0
    50b0:	mov	r1, #14
    50b4:	bl	0 <coda_ascii_parse_double>
    50b8:	mov	r3, r0
    50bc:	cmp	r3, #0
    50c0:	bge	50ec <read_header+0x688>
    50c4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    50c8:	ldr	r1, [r3, #48]	; 0x30
    50cc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    50d0:	ldr	r3, [r3, #52]	; 0x34
    50d4:	add	r3, r3, #24
    50d8:	mov	r2, r3
    50dc:	ldr	r0, [pc, #2452]	; 5a78 <read_header+0x1014>
    50e0:	bl	0 <coda_add_error_message>
    50e4:	mvn	r3, #0
    50e8:	b	5f04 <read_header+0x14a0>
    50ec:	bl	0 <__aeabi_read_tp>
    50f0:	mov	r2, r0
    50f4:	ldr	r3, [pc, #2432]	; 5a7c <read_header+0x1018>
    50f8:	ldr	r3, [r2, r3]
    50fc:	add	r3, r3, #40	; 0x28
    5100:	ldr	r0, [r3]
    5104:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5108:	ldr	r3, [r3, #4]
    510c:	sub	r2, fp, #1024	; 0x400
    5110:	sub	r2, r2, #4
    5114:	vldr	d7, [r2, #-8]
    5118:	vmov.f64	d0, d7
    511c:	mov	r2, r3
    5120:	mov	r1, #0
    5124:	bl	0 <coda_mem_double_new>
    5128:	str	r0, [fp, #-16]
    512c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5130:	ldr	r0, [r3, #8]
    5134:	mov	r3, #0
    5138:	ldr	r2, [fp, #-16]
    513c:	ldr	r1, [pc, #2288]	; 5a34 <read_header+0xfd0>
    5140:	bl	0 <coda_mem_record_add_field>
    5144:	sub	r2, fp, #1040	; 0x410
    5148:	sub	r2, r2, #4
    514c:	sub	r3, fp, #1024	; 0x400
    5150:	add	r0, r3, #39	; 0x27
    5154:	mov	r3, #0
    5158:	mov	r1, #5
    515c:	bl	0 <coda_ascii_parse_int64>
    5160:	mov	r3, r0
    5164:	cmp	r3, #0
    5168:	bge	5194 <read_header+0x730>
    516c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5170:	ldr	r1, [r3, #48]	; 0x30
    5174:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5178:	ldr	r3, [r3, #52]	; 0x34
    517c:	add	r3, r3, #39	; 0x27
    5180:	mov	r2, r3
    5184:	ldr	r0, [pc, #2284]	; 5a78 <read_header+0x1014>
    5188:	bl	0 <coda_add_error_message>
    518c:	mvn	r3, #0
    5190:	b	5f04 <read_header+0x14a0>
    5194:	bl	0 <__aeabi_read_tp>
    5198:	mov	r2, r0
    519c:	ldr	r3, [pc, #2264]	; 5a7c <read_header+0x1018>
    51a0:	ldr	r3, [r2, r3]
    51a4:	add	r3, r3, #44	; 0x2c
    51a8:	ldr	r0, [r3]
    51ac:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    51b0:	ldr	r1, [r3, #4]
    51b4:	sub	r3, fp, #1040	; 0x410
    51b8:	sub	r3, r3, #4
    51bc:	ldrd	r2, [r3]
    51c0:	mov	r3, r2
    51c4:	mov	r2, r1
    51c8:	mov	r1, #0
    51cc:	bl	0 <coda_mem_int32_new>
    51d0:	str	r0, [fp, #-16]
    51d4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    51d8:	ldr	r0, [r3, #8]
    51dc:	mov	r3, #0
    51e0:	ldr	r2, [fp, #-16]
    51e4:	ldr	r1, [pc, #2124]	; 5a38 <read_header+0xfd4>
    51e8:	bl	0 <coda_mem_record_add_field>
    51ec:	sub	r2, fp, #1024	; 0x400
    51f0:	sub	r2, r2, #4
    51f4:	sub	r2, r2, #8
    51f8:	sub	r3, fp, #1024	; 0x400
    51fc:	add	r0, r3, #45	; 0x2d
    5200:	mov	r3, #0
    5204:	mov	r1, #15
    5208:	bl	0 <coda_ascii_parse_double>
    520c:	mov	r3, r0
    5210:	cmp	r3, #0
    5214:	bge	5240 <read_header+0x7dc>
    5218:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    521c:	ldr	r1, [r3, #48]	; 0x30
    5220:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5224:	ldr	r3, [r3, #52]	; 0x34
    5228:	add	r3, r3, #45	; 0x2d
    522c:	mov	r2, r3
    5230:	ldr	r0, [pc, #2112]	; 5a78 <read_header+0x1014>
    5234:	bl	0 <coda_add_error_message>
    5238:	mvn	r3, #0
    523c:	b	5f04 <read_header+0x14a0>
    5240:	bl	0 <__aeabi_read_tp>
    5244:	mov	r2, r0
    5248:	ldr	r3, [pc, #2092]	; 5a7c <read_header+0x1018>
    524c:	ldr	r3, [r2, r3]
    5250:	add	r3, r3, #48	; 0x30
    5254:	ldr	r0, [r3]
    5258:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    525c:	ldr	r3, [r3, #4]
    5260:	sub	r2, fp, #1024	; 0x400
    5264:	sub	r2, r2, #4
    5268:	vldr	d7, [r2, #-8]
    526c:	vmov.f64	d0, d7
    5270:	mov	r2, r3
    5274:	mov	r1, #0
    5278:	bl	0 <coda_mem_double_new>
    527c:	str	r0, [fp, #-16]
    5280:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5284:	ldr	r0, [r3, #8]
    5288:	mov	r3, #0
    528c:	ldr	r2, [fp, #-16]
    5290:	ldr	r1, [pc, #1956]	; 5a3c <read_header+0xfd8>
    5294:	bl	0 <coda_mem_record_add_field>
    5298:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    529c:	ldr	r3, [r3]
    52a0:	mov	r0, r3
    52a4:	bl	0 <ftell>
    52a8:	mov	r2, r0
    52ac:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    52b0:	str	r2, [r3, #52]	; 0x34
    52b4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    52b8:	ldr	r3, [r3, #48]	; 0x30
    52bc:	add	r2, r3, #1
    52c0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    52c4:	str	r2, [r3, #48]	; 0x30
    52c8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    52cc:	ldr	r3, [r3]
    52d0:	sub	r2, fp, #1024	; 0x400
    52d4:	mov	r1, r2
    52d8:	mov	r0, r3
    52dc:	bl	4920 <get_line>
    52e0:	str	r0, [fp, #-12]
    52e4:	ldr	r3, [fp, #-12]
    52e8:	cmp	r3, #0
    52ec:	bge	52f8 <read_header+0x894>
    52f0:	mvn	r3, #0
    52f4:	b	5f04 <read_header+0x14a0>
    52f8:	ldr	r3, [fp, #-12]
    52fc:	cmp	r3, #59	; 0x3b
    5300:	bgt	5334 <read_header+0x8d0>
    5304:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5308:	ldr	r2, [r3, #48]	; 0x30
    530c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5310:	ldr	r3, [r3, #52]	; 0x34
    5314:	str	r3, [sp]
    5318:	mov	r3, r2
    531c:	ldr	r2, [fp, #-12]
    5320:	ldr	r1, [pc, #1856]	; 5a68 <read_header+0x1004>
    5324:	mvn	r0, #21
    5328:	bl	0 <coda_set_error>
    532c:	mvn	r3, #0
    5330:	b	5f04 <read_header+0x14a0>
    5334:	sub	r3, fp, #1024	; 0x400
    5338:	mov	r2, #4
    533c:	ldr	r1, [pc, #1788]	; 5a40 <read_header+0xfdc>
    5340:	mov	r0, r3
    5344:	bl	0 <memcmp>
    5348:	mov	r3, r0
    534c:	cmp	r3, #0
    5350:	beq	5378 <read_header+0x914>
    5354:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5358:	ldr	r2, [r3, #48]	; 0x30
    535c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5360:	ldr	r3, [r3, #52]	; 0x34
    5364:	ldr	r1, [pc, #1796]	; 5a70 <read_header+0x100c>
    5368:	mvn	r0, #21
    536c:	bl	0 <coda_set_error>
    5370:	mvn	r3, #0
    5374:	b	5f04 <read_header+0x14a0>
    5378:	sub	r2, fp, #1040	; 0x410
    537c:	sub	r2, r2, #4
    5380:	sub	r3, fp, #1024	; 0x400
    5384:	add	r0, r3, #4
    5388:	mov	r3, #0
    538c:	mov	r1, #2
    5390:	bl	0 <coda_ascii_parse_int64>
    5394:	mov	r3, r0
    5398:	cmp	r3, #0
    539c:	bge	53c8 <read_header+0x964>
    53a0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    53a4:	ldr	r1, [r3, #48]	; 0x30
    53a8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    53ac:	ldr	r3, [r3, #52]	; 0x34
    53b0:	add	r3, r3, #4
    53b4:	mov	r2, r3
    53b8:	ldr	r0, [pc, #1720]	; 5a78 <read_header+0x1014>
    53bc:	bl	0 <coda_add_error_message>
    53c0:	mvn	r3, #0
    53c4:	b	5f04 <read_header+0x14a0>
    53c8:	bl	0 <__aeabi_read_tp>
    53cc:	mov	r2, r0
    53d0:	ldr	r3, [pc, #1700]	; 5a7c <read_header+0x1018>
    53d4:	ldr	r3, [r2, r3]
    53d8:	add	r3, r3, #52	; 0x34
    53dc:	ldr	r0, [r3]
    53e0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    53e4:	ldr	r1, [r3, #4]
    53e8:	sub	r3, fp, #1040	; 0x410
    53ec:	sub	r3, r3, #4
    53f0:	ldrd	r2, [r3]
    53f4:	uxtb	r3, r2
    53f8:	mov	r2, r1
    53fc:	mov	r1, #0
    5400:	bl	0 <coda_mem_uint8_new>
    5404:	str	r0, [fp, #-16]
    5408:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    540c:	ldr	r0, [r3, #8]
    5410:	mov	r3, #0
    5414:	ldr	r2, [fp, #-16]
    5418:	ldr	r1, [pc, #1572]	; 5a44 <read_header+0xfe0>
    541c:	bl	0 <coda_mem_record_add_field>
    5420:	sub	r3, fp, #1040	; 0x410
    5424:	sub	r3, r3, #4
    5428:	ldrd	r2, [r3]
    542c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5430:	str	r2, [r3, #40]	; 0x28
    5434:	bl	0 <__aeabi_read_tp>
    5438:	mov	r2, r0
    543c:	ldr	r3, [pc, #1592]	; 5a7c <read_header+0x1018>
    5440:	ldr	r3, [r2, r3]
    5444:	add	r3, r3, #60	; 0x3c
    5448:	ldr	r3, [r3]
    544c:	mov	r1, #0
    5450:	mov	r0, r3
    5454:	bl	0 <coda_mem_array_new>
    5458:	str	r0, [fp, #-24]	; 0xffffffe8
    545c:	mov	r3, #0
    5460:	str	r3, [fp, #-8]
    5464:	b	5658 <read_header+0xbf4>
    5468:	ldr	r1, [fp, #-8]
    546c:	ldr	r3, [pc, #1492]	; 5a48 <read_header+0xfe4>
    5470:	smull	r2, r3, r3, r1
    5474:	asr	r2, r3, #3
    5478:	asr	r3, r1, #31
    547c:	sub	r2, r2, r3
    5480:	mov	r3, r2
    5484:	lsl	r3, r3, #4
    5488:	add	r3, r3, r2
    548c:	sub	r2, r1, r3
    5490:	cmp	r2, #0
    5494:	bne	559c <read_header+0xb38>
    5498:	ldr	r3, [fp, #-8]
    549c:	cmp	r3, #0
    54a0:	ble	559c <read_header+0xb38>
    54a4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    54a8:	ldr	r3, [r3]
    54ac:	mov	r0, r3
    54b0:	bl	0 <ftell>
    54b4:	mov	r2, r0
    54b8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    54bc:	str	r2, [r3, #52]	; 0x34
    54c0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    54c4:	ldr	r3, [r3, #48]	; 0x30
    54c8:	add	r2, r3, #1
    54cc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    54d0:	str	r2, [r3, #48]	; 0x30
    54d4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    54d8:	ldr	r3, [r3]
    54dc:	sub	r2, fp, #1024	; 0x400
    54e0:	mov	r1, r2
    54e4:	mov	r0, r3
    54e8:	bl	4920 <get_line>
    54ec:	str	r0, [fp, #-12]
    54f0:	ldr	r3, [fp, #-12]
    54f4:	cmp	r3, #0
    54f8:	bge	550c <read_header+0xaa8>
    54fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5500:	bl	0 <coda_dynamic_type_delete>
    5504:	mvn	r3, #0
    5508:	b	5f04 <read_header+0x14a0>
    550c:	ldr	r3, [fp, #-12]
    5510:	cmp	r3, #59	; 0x3b
    5514:	bgt	5550 <read_header+0xaec>
    5518:	ldr	r0, [fp, #-24]	; 0xffffffe8
    551c:	bl	0 <coda_dynamic_type_delete>
    5520:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5524:	ldr	r2, [r3, #48]	; 0x30
    5528:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    552c:	ldr	r3, [r3, #52]	; 0x34
    5530:	str	r3, [sp]
    5534:	mov	r3, r2
    5538:	ldr	r2, [fp, #-12]
    553c:	ldr	r1, [pc, #1316]	; 5a68 <read_header+0x1004>
    5540:	mvn	r0, #21
    5544:	bl	0 <coda_set_error>
    5548:	mvn	r3, #0
    554c:	b	5f04 <read_header+0x14a0>
    5550:	sub	r3, fp, #1024	; 0x400
    5554:	mov	r2, #9
    5558:	ldr	r1, [pc, #1260]	; 5a4c <read_header+0xfe8>
    555c:	mov	r0, r3
    5560:	bl	0 <memcmp>
    5564:	mov	r3, r0
    5568:	cmp	r3, #0
    556c:	beq	559c <read_header+0xb38>
    5570:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5574:	bl	0 <coda_dynamic_type_delete>
    5578:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    557c:	ldr	r2, [r3, #48]	; 0x30
    5580:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5584:	ldr	r3, [r3, #52]	; 0x34
    5588:	ldr	r1, [pc, #1248]	; 5a70 <read_header+0x100c>
    558c:	mvn	r0, #21
    5590:	bl	0 <coda_set_error>
    5594:	mvn	r3, #0
    5598:	b	5f04 <read_header+0x14a0>
    559c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    55a0:	ldr	r2, [r3, #40]	; 0x28
    55a4:	ldr	r3, [fp, #-8]
    55a8:	cmp	r2, r3
    55ac:	ble	564c <read_header+0xbe8>
    55b0:	ldr	r1, [fp, #-8]
    55b4:	ldr	r3, [pc, #1164]	; 5a48 <read_header+0xfe4>
    55b8:	smull	r2, r3, r3, r1
    55bc:	asr	r2, r3, #3
    55c0:	asr	r3, r1, #31
    55c4:	sub	r2, r2, r3
    55c8:	mov	r3, r2
    55cc:	lsl	r3, r3, #4
    55d0:	add	r3, r3, r2
    55d4:	sub	r2, r1, r3
    55d8:	mov	r3, r2
    55dc:	lsl	r3, r3, #1
    55e0:	add	r3, r3, r2
    55e4:	add	r3, r3, #9
    55e8:	sub	r2, fp, #1024	; 0x400
    55ec:	add	r1, r2, r3
    55f0:	sub	r3, fp, #1104	; 0x450
    55f4:	sub	r3, r3, #4
    55f8:	mov	r2, #3
    55fc:	mov	r0, r3
    5600:	bl	0 <memcpy>
    5604:	mov	r3, #0
    5608:	strb	r3, [fp, #-1105]	; 0xfffffbaf
    560c:	bl	0 <__aeabi_read_tp>
    5610:	mov	r2, r0
    5614:	ldr	r3, [pc, #1120]	; 5a7c <read_header+0x1018>
    5618:	ldr	r3, [r2, r3]
    561c:	add	r3, r3, #56	; 0x38
    5620:	ldr	r0, [r3]
    5624:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5628:	ldr	r2, [r3, #4]
    562c:	sub	r3, fp, #1104	; 0x450
    5630:	sub	r3, r3, #4
    5634:	mov	r1, #0
    5638:	bl	0 <coda_mem_string_new>
    563c:	str	r0, [fp, #-16]
    5640:	ldr	r1, [fp, #-16]
    5644:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5648:	bl	0 <coda_mem_array_add_element>
    564c:	ldr	r3, [fp, #-8]
    5650:	add	r3, r3, #1
    5654:	str	r3, [fp, #-8]
    5658:	ldr	r3, [fp, #-8]
    565c:	cmp	r3, #84	; 0x54
    5660:	ble	5468 <read_header+0xa04>
    5664:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5668:	ldr	r0, [r3, #8]
    566c:	mov	r3, #0
    5670:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5674:	ldr	r1, [pc, #980]	; 5a50 <read_header+0xfec>
    5678:	bl	0 <coda_mem_record_add_field>
    567c:	bl	0 <__aeabi_read_tp>
    5680:	mov	r2, r0
    5684:	ldr	r3, [pc, #1008]	; 5a7c <read_header+0x1018>
    5688:	ldr	r3, [r2, r3]
    568c:	add	r3, r3, #68	; 0x44
    5690:	ldr	r3, [r3]
    5694:	mov	r1, #0
    5698:	mov	r0, r3
    569c:	bl	0 <coda_mem_array_new>
    56a0:	str	r0, [fp, #-24]	; 0xffffffe8
    56a4:	mov	r3, #0
    56a8:	str	r3, [fp, #-8]
    56ac:	b	5908 <read_header+0xea4>
    56b0:	ldr	r1, [fp, #-8]
    56b4:	ldr	r3, [pc, #908]	; 5a48 <read_header+0xfe4>
    56b8:	smull	r2, r3, r3, r1
    56bc:	asr	r2, r3, #3
    56c0:	asr	r3, r1, #31
    56c4:	sub	r2, r2, r3
    56c8:	mov	r3, r2
    56cc:	lsl	r3, r3, #4
    56d0:	add	r3, r3, r2
    56d4:	sub	r2, r1, r3
    56d8:	cmp	r2, #0
    56dc:	bne	57d8 <read_header+0xd74>
    56e0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    56e4:	ldr	r3, [r3]
    56e8:	mov	r0, r3
    56ec:	bl	0 <ftell>
    56f0:	mov	r2, r0
    56f4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    56f8:	str	r2, [r3, #52]	; 0x34
    56fc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5700:	ldr	r3, [r3, #48]	; 0x30
    5704:	add	r2, r3, #1
    5708:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    570c:	str	r2, [r3, #48]	; 0x30
    5710:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5714:	ldr	r3, [r3]
    5718:	sub	r2, fp, #1024	; 0x400
    571c:	mov	r1, r2
    5720:	mov	r0, r3
    5724:	bl	4920 <get_line>
    5728:	str	r0, [fp, #-12]
    572c:	ldr	r3, [fp, #-12]
    5730:	cmp	r3, #0
    5734:	bge	5748 <read_header+0xce4>
    5738:	ldr	r0, [fp, #-24]	; 0xffffffe8
    573c:	bl	0 <coda_dynamic_type_delete>
    5740:	mvn	r3, #0
    5744:	b	5f04 <read_header+0x14a0>
    5748:	ldr	r3, [fp, #-12]
    574c:	cmp	r3, #59	; 0x3b
    5750:	bgt	578c <read_header+0xd28>
    5754:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5758:	bl	0 <coda_dynamic_type_delete>
    575c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5760:	ldr	r2, [r3, #48]	; 0x30
    5764:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5768:	ldr	r3, [r3, #52]	; 0x34
    576c:	str	r3, [sp]
    5770:	mov	r3, r2
    5774:	ldr	r2, [fp, #-12]
    5778:	ldr	r1, [pc, #744]	; 5a68 <read_header+0x1004>
    577c:	mvn	r0, #21
    5780:	bl	0 <coda_set_error>
    5784:	mvn	r3, #0
    5788:	b	5f04 <read_header+0x14a0>
    578c:	sub	r3, fp, #1024	; 0x400
    5790:	mov	r2, #9
    5794:	ldr	r1, [pc, #696]	; 5a54 <read_header+0xff0>
    5798:	mov	r0, r3
    579c:	bl	0 <memcmp>
    57a0:	mov	r3, r0
    57a4:	cmp	r3, #0
    57a8:	beq	57d8 <read_header+0xd74>
    57ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57b0:	bl	0 <coda_dynamic_type_delete>
    57b4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    57b8:	ldr	r2, [r3, #48]	; 0x30
    57bc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    57c0:	ldr	r3, [r3, #52]	; 0x34
    57c4:	ldr	r1, [pc, #676]	; 5a70 <read_header+0x100c>
    57c8:	mvn	r0, #21
    57cc:	bl	0 <coda_set_error>
    57d0:	mvn	r3, #0
    57d4:	b	5f04 <read_header+0x14a0>
    57d8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    57dc:	ldr	r2, [r3, #40]	; 0x28
    57e0:	ldr	r3, [fp, #-8]
    57e4:	cmp	r2, r3
    57e8:	ble	58fc <read_header+0xe98>
    57ec:	ldr	r1, [fp, #-8]
    57f0:	ldr	r3, [pc, #592]	; 5a48 <read_header+0xfe4>
    57f4:	smull	r2, r3, r3, r1
    57f8:	asr	r2, r3, #3
    57fc:	asr	r3, r1, #31
    5800:	sub	r2, r2, r3
    5804:	mov	r3, r2
    5808:	lsl	r3, r3, #4
    580c:	add	r3, r3, r2
    5810:	sub	r2, r1, r3
    5814:	mov	r3, r2
    5818:	lsl	r3, r3, #1
    581c:	add	r3, r3, r2
    5820:	add	r3, r3, #9
    5824:	sub	r2, fp, #1024	; 0x400
    5828:	add	r0, r2, r3
    582c:	sub	r2, fp, #1040	; 0x410
    5830:	sub	r2, r2, #4
    5834:	mov	r3, #0
    5838:	mov	r1, #3
    583c:	bl	0 <coda_ascii_parse_int64>
    5840:	mov	r3, r0
    5844:	cmp	r3, #0
    5848:	bge	58b0 <read_header+0xe4c>
    584c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5850:	ldr	ip, [r3, #48]	; 0x30
    5854:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5858:	ldr	r3, [r3, #52]	; 0x34
    585c:	add	r0, r3, #9
    5860:	ldr	r1, [fp, #-8]
    5864:	ldr	r3, [pc, #476]	; 5a48 <read_header+0xfe4>
    5868:	smull	r2, r3, r3, r1
    586c:	asr	r2, r3, #3
    5870:	asr	r3, r1, #31
    5874:	sub	r2, r2, r3
    5878:	mov	r3, r2
    587c:	lsl	r3, r3, #4
    5880:	add	r3, r3, r2
    5884:	sub	r2, r1, r3
    5888:	mov	r3, r2
    588c:	lsl	r3, r3, #1
    5890:	add	r3, r3, r2
    5894:	add	r3, r0, r3
    5898:	mov	r2, r3
    589c:	mov	r1, ip
    58a0:	ldr	r0, [pc, #464]	; 5a78 <read_header+0x1014>
    58a4:	bl	0 <coda_add_error_message>
    58a8:	mvn	r3, #0
    58ac:	b	5f04 <read_header+0x14a0>
    58b0:	bl	0 <__aeabi_read_tp>
    58b4:	mov	r2, r0
    58b8:	ldr	r3, [pc, #444]	; 5a7c <read_header+0x1018>
    58bc:	ldr	r3, [r2, r3]
    58c0:	add	r3, r3, #64	; 0x40
    58c4:	ldr	r0, [r3]
    58c8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    58cc:	ldr	r1, [r3, #4]
    58d0:	sub	r3, fp, #1040	; 0x410
    58d4:	sub	r3, r3, #4
    58d8:	ldrd	r2, [r3]
    58dc:	sxth	r3, r2
    58e0:	mov	r2, r1
    58e4:	mov	r1, #0
    58e8:	bl	0 <coda_mem_int16_new>
    58ec:	str	r0, [fp, #-16]
    58f0:	ldr	r1, [fp, #-16]
    58f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58f8:	bl	0 <coda_mem_array_add_element>
    58fc:	ldr	r3, [fp, #-8]
    5900:	add	r3, r3, #1
    5904:	str	r3, [fp, #-8]
    5908:	ldr	r3, [fp, #-8]
    590c:	cmp	r3, #84	; 0x54
    5910:	ble	56b0 <read_header+0xc4c>
    5914:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5918:	ldr	r0, [r3, #8]
    591c:	mov	r3, #0
    5920:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5924:	ldr	r1, [pc, #300]	; 5a58 <read_header+0xff4>
    5928:	bl	0 <coda_mem_record_add_field>
    592c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5930:	ldr	r3, [r3]
    5934:	mov	r0, r3
    5938:	bl	0 <ftell>
    593c:	mov	r2, r0
    5940:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5944:	str	r2, [r3, #52]	; 0x34
    5948:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    594c:	ldr	r3, [r3, #48]	; 0x30
    5950:	add	r2, r3, #1
    5954:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5958:	str	r2, [r3, #48]	; 0x30
    595c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5960:	ldr	r3, [r3]
    5964:	sub	r2, fp, #1024	; 0x400
    5968:	mov	r1, r2
    596c:	mov	r0, r3
    5970:	bl	4920 <get_line>
    5974:	str	r0, [fp, #-12]
    5978:	ldr	r3, [fp, #-12]
    597c:	cmp	r3, #0
    5980:	bge	598c <read_header+0xf28>
    5984:	mvn	r3, #0
    5988:	b	5f04 <read_header+0x14a0>
    598c:	ldr	r3, [fp, #-12]
    5990:	cmp	r3, #59	; 0x3b
    5994:	bgt	59c8 <read_header+0xf64>
    5998:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    599c:	ldr	r2, [r3, #48]	; 0x30
    59a0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    59a4:	ldr	r3, [r3, #52]	; 0x34
    59a8:	str	r3, [sp]
    59ac:	mov	r3, r2
    59b0:	ldr	r2, [fp, #-12]
    59b4:	ldr	r1, [pc, #172]	; 5a68 <read_header+0x1004>
    59b8:	mvn	r0, #21
    59bc:	bl	0 <coda_set_error>
    59c0:	mvn	r3, #0
    59c4:	b	5f04 <read_header+0x14a0>
    59c8:	sub	r3, fp, #1024	; 0x400
    59cc:	mov	r2, #3
    59d0:	ldr	r1, [pc, #140]	; 5a64 <read_header+0x1000>
    59d4:	mov	r0, r3
    59d8:	bl	0 <memcmp>
    59dc:	mov	r3, r0
    59e0:	cmp	r3, #0
    59e4:	beq	5a84 <read_header+0x1020>
    59e8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    59ec:	ldr	r2, [r3, #48]	; 0x30
    59f0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    59f4:	ldr	r3, [r3, #52]	; 0x34
    59f8:	ldr	r1, [pc, #112]	; 5a70 <read_header+0x100c>
    59fc:	mvn	r0, #21
    5a00:	bl	0 <coda_set_error>
    5a04:	mvn	r3, #0
    5a08:	b	5f04 <read_header+0x14a0>
    5a0c:	.word	0x0000057c
    5a10:	.word	0x00000584
    5a14:	.word	0x00000594
    5a18:	.word	0x000005a0
    5a1c:	.word	0x000005ac
    5a20:	.word	0x000005bc
    5a24:	.word	0x000005c8
    5a28:	.word	0x00000860
    5a2c:	.word	0x000005d0
    5a30:	.word	0x000005dc
    5a34:	.word	0x000005e8
    5a38:	.word	0x000005f8
    5a3c:	.word	0x00000604
    5a40:	.word	0x000008a4
    5a44:	.word	0x00000610
    5a48:	.word	0x78787879
    5a4c:	.word	0x000008ac
    5a50:	.word	0x00000620
    5a54:	.word	0x000008b8
    5a58:	.word	0x00000628
    5a5c:	.word	0x00000638
    5a60:	.word	0x00000644
    5a64:	.word	0x000008c4
    5a68:	.word	0x000007fc
    5a6c:	.word	0x000008c8
    5a70:	.word	0x00000864
    5a74:	.word	0x00000650
    5a78:	.word	0x00000840
    5a7c:	.word	0x00000000
    5a80:	.word	0x00000660
    5a84:	sub	r3, fp, #4
    5a88:	sub	r3, r3, #1020	; 0x3fc
    5a8c:	ldrh	r3, [r3, #3]
    5a90:	uxth	r2, r3
    5a94:	sub	r3, fp, #4
    5a98:	sub	r3, r3, #1104	; 0x450
    5a9c:	strh	r2, [r3]
    5aa0:	mov	r3, #0
    5aa4:	strb	r3, [fp, #-1106]	; 0xfffffbae
    5aa8:	bl	0 <__aeabi_read_tp>
    5aac:	mov	r2, r0
    5ab0:	ldr	r3, [pc, #-60]	; 5a7c <read_header+0x1018>
    5ab4:	ldr	r3, [r2, r3]
    5ab8:	add	r3, r3, #72	; 0x48
    5abc:	ldr	r0, [r3]
    5ac0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5ac4:	ldr	r2, [r3, #4]
    5ac8:	sub	r3, fp, #1104	; 0x450
    5acc:	sub	r3, r3, #4
    5ad0:	mov	r1, #0
    5ad4:	bl	0 <coda_mem_string_new>
    5ad8:	str	r0, [fp, #-16]
    5adc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5ae0:	ldr	r0, [r3, #8]
    5ae4:	mov	r3, #0
    5ae8:	ldr	r2, [fp, #-16]
    5aec:	ldr	r1, [pc, #-152]	; 5a5c <read_header+0xff8>
    5af0:	bl	0 <coda_mem_record_add_field>
    5af4:	sub	r3, fp, #1024	; 0x400
    5af8:	add	r1, r3, #9
    5afc:	sub	r3, fp, #1104	; 0x450
    5b00:	sub	r3, r3, #4
    5b04:	mov	r2, #3
    5b08:	mov	r0, r3
    5b0c:	bl	0 <memcpy>
    5b10:	mov	r3, #0
    5b14:	strb	r3, [fp, #-1105]	; 0xfffffbaf
    5b18:	bl	0 <__aeabi_read_tp>
    5b1c:	mov	r2, r0
    5b20:	ldr	r3, [pc, #-172]	; 5a7c <read_header+0x1018>
    5b24:	ldr	r3, [r2, r3]
    5b28:	add	r3, r3, #76	; 0x4c
    5b2c:	ldr	r0, [r3]
    5b30:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b34:	ldr	r2, [r3, #4]
    5b38:	sub	r3, fp, #1104	; 0x450
    5b3c:	sub	r3, r3, #4
    5b40:	mov	r1, #0
    5b44:	bl	0 <coda_mem_string_new>
    5b48:	str	r0, [fp, #-16]
    5b4c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b50:	ldr	r0, [r3, #8]
    5b54:	mov	r3, #0
    5b58:	ldr	r2, [fp, #-16]
    5b5c:	ldr	r1, [pc, #-260]	; 5a60 <read_header+0xffc>
    5b60:	bl	0 <coda_mem_record_add_field>
    5b64:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b68:	ldr	r3, [r3]
    5b6c:	mov	r0, r3
    5b70:	bl	0 <ftell>
    5b74:	mov	r2, r0
    5b78:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b7c:	str	r2, [r3, #52]	; 0x34
    5b80:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b84:	ldr	r3, [r3, #48]	; 0x30
    5b88:	add	r2, r3, #1
    5b8c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b90:	str	r2, [r3, #48]	; 0x30
    5b94:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5b98:	ldr	r3, [r3]
    5b9c:	sub	r2, fp, #1024	; 0x400
    5ba0:	mov	r1, r2
    5ba4:	mov	r0, r3
    5ba8:	bl	4920 <get_line>
    5bac:	str	r0, [fp, #-12]
    5bb0:	ldr	r3, [fp, #-12]
    5bb4:	cmp	r3, #0
    5bb8:	bge	5bc4 <read_header+0x1160>
    5bbc:	mvn	r3, #0
    5bc0:	b	5f04 <read_header+0x14a0>
    5bc4:	ldr	r3, [fp, #-12]
    5bc8:	cmp	r3, #59	; 0x3b
    5bcc:	bgt	5c00 <read_header+0x119c>
    5bd0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5bd4:	ldr	r2, [r3, #48]	; 0x30
    5bd8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5bdc:	ldr	r3, [r3, #52]	; 0x34
    5be0:	str	r3, [sp]
    5be4:	mov	r3, r2
    5be8:	ldr	r2, [fp, #-12]
    5bec:	ldr	r1, [pc, #-396]	; 5a68 <read_header+0x1004>
    5bf0:	mvn	r0, #21
    5bf4:	bl	0 <coda_set_error>
    5bf8:	mvn	r3, #0
    5bfc:	b	5f04 <read_header+0x14a0>
    5c00:	sub	r3, fp, #1024	; 0x400
    5c04:	mov	r2, #3
    5c08:	ldr	r1, [pc, #-428]	; 5a64 <read_header+0x1000>
    5c0c:	mov	r0, r3
    5c10:	bl	0 <memcmp>
    5c14:	mov	r3, r0
    5c18:	cmp	r3, #0
    5c1c:	beq	5c44 <read_header+0x11e0>
    5c20:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c24:	ldr	r2, [r3, #48]	; 0x30
    5c28:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c2c:	ldr	r3, [r3, #52]	; 0x34
    5c30:	ldr	r1, [pc, #-456]	; 5a70 <read_header+0x100c>
    5c34:	mvn	r0, #21
    5c38:	bl	0 <coda_set_error>
    5c3c:	mvn	r3, #0
    5c40:	b	5f04 <read_header+0x14a0>
    5c44:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c48:	ldr	r3, [r3]
    5c4c:	mov	r0, r3
    5c50:	bl	0 <ftell>
    5c54:	mov	r2, r0
    5c58:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c5c:	str	r2, [r3, #52]	; 0x34
    5c60:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c64:	ldr	r3, [r3, #48]	; 0x30
    5c68:	add	r2, r3, #1
    5c6c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c70:	str	r2, [r3, #48]	; 0x30
    5c74:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5c78:	ldr	r3, [r3]
    5c7c:	sub	r2, fp, #1024	; 0x400
    5c80:	mov	r1, r2
    5c84:	mov	r0, r3
    5c88:	bl	4920 <get_line>
    5c8c:	str	r0, [fp, #-12]
    5c90:	ldr	r3, [fp, #-12]
    5c94:	cmp	r3, #0
    5c98:	bge	5ca4 <read_header+0x1240>
    5c9c:	mvn	r3, #0
    5ca0:	b	5f04 <read_header+0x14a0>
    5ca4:	ldr	r3, [fp, #-12]
    5ca8:	cmp	r3, #59	; 0x3b
    5cac:	bgt	5ce0 <read_header+0x127c>
    5cb0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5cb4:	ldr	r2, [r3, #48]	; 0x30
    5cb8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5cbc:	ldr	r3, [r3, #52]	; 0x34
    5cc0:	str	r3, [sp]
    5cc4:	mov	r3, r2
    5cc8:	ldr	r2, [fp, #-12]
    5ccc:	ldr	r1, [pc, #-620]	; 5a68 <read_header+0x1004>
    5cd0:	mvn	r0, #21
    5cd4:	bl	0 <coda_set_error>
    5cd8:	mvn	r3, #0
    5cdc:	b	5f04 <read_header+0x14a0>
    5ce0:	sub	r3, fp, #1024	; 0x400
    5ce4:	mov	r2, #3
    5ce8:	ldr	r1, [pc, #-644]	; 5a6c <read_header+0x1008>
    5cec:	mov	r0, r3
    5cf0:	bl	0 <memcmp>
    5cf4:	mov	r3, r0
    5cf8:	cmp	r3, #0
    5cfc:	beq	5d24 <read_header+0x12c0>
    5d00:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5d04:	ldr	r2, [r3, #48]	; 0x30
    5d08:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5d0c:	ldr	r3, [r3, #52]	; 0x34
    5d10:	ldr	r1, [pc, #-680]	; 5a70 <read_header+0x100c>
    5d14:	mvn	r0, #21
    5d18:	bl	0 <coda_set_error>
    5d1c:	mvn	r3, #0
    5d20:	b	5f04 <read_header+0x14a0>
    5d24:	sub	r2, fp, #1024	; 0x400
    5d28:	sub	r2, r2, #4
    5d2c:	sub	r2, r2, #8
    5d30:	sub	r3, fp, #1024	; 0x400
    5d34:	add	r0, r3, #3
    5d38:	mov	r3, #0
    5d3c:	mov	r1, #10
    5d40:	bl	0 <coda_ascii_parse_double>
    5d44:	mov	r3, r0
    5d48:	cmp	r3, #0
    5d4c:	bge	5d78 <read_header+0x1314>
    5d50:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5d54:	ldr	r1, [r3, #48]	; 0x30
    5d58:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5d5c:	ldr	r3, [r3, #52]	; 0x34
    5d60:	add	r3, r3, #3
    5d64:	mov	r2, r3
    5d68:	ldr	r0, [pc, #-760]	; 5a78 <read_header+0x1014>
    5d6c:	bl	0 <coda_add_error_message>
    5d70:	mvn	r3, #0
    5d74:	b	5f04 <read_header+0x14a0>
    5d78:	bl	0 <__aeabi_read_tp>
    5d7c:	mov	r2, r0
    5d80:	ldr	r3, [pc, #-780]	; 5a7c <read_header+0x1018>
    5d84:	ldr	r3, [r2, r3]
    5d88:	add	r3, r3, #80	; 0x50
    5d8c:	ldr	r0, [r3]
    5d90:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5d94:	ldr	r3, [r3, #4]
    5d98:	sub	r2, fp, #1024	; 0x400
    5d9c:	sub	r2, r2, #4
    5da0:	vldr	d7, [r2, #-8]
    5da4:	vmov.f64	d0, d7
    5da8:	mov	r2, r3
    5dac:	mov	r1, #0
    5db0:	bl	0 <coda_mem_double_new>
    5db4:	str	r0, [fp, #-16]
    5db8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5dbc:	ldr	r0, [r3, #8]
    5dc0:	mov	r3, #0
    5dc4:	ldr	r2, [fp, #-16]
    5dc8:	ldr	r1, [pc, #-860]	; 5a74 <read_header+0x1010>
    5dcc:	bl	0 <coda_mem_record_add_field>
    5dd0:	sub	r2, fp, #1024	; 0x400
    5dd4:	sub	r2, r2, #4
    5dd8:	sub	r2, r2, #8
    5ddc:	sub	r3, fp, #1024	; 0x400
    5de0:	add	r0, r3, #14
    5de4:	mov	r3, #0
    5de8:	mov	r1, #12
    5dec:	bl	0 <coda_ascii_parse_double>
    5df0:	mov	r3, r0
    5df4:	cmp	r3, #0
    5df8:	bge	5e24 <read_header+0x13c0>
    5dfc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5e00:	ldr	r1, [r3, #48]	; 0x30
    5e04:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5e08:	ldr	r3, [r3, #52]	; 0x34
    5e0c:	add	r3, r3, #14
    5e10:	mov	r2, r3
    5e14:	ldr	r0, [pc, #-932]	; 5a78 <read_header+0x1014>
    5e18:	bl	0 <coda_add_error_message>
    5e1c:	mvn	r3, #0
    5e20:	b	5f04 <read_header+0x14a0>
    5e24:	bl	0 <__aeabi_read_tp>
    5e28:	mov	r2, r0
    5e2c:	ldr	r3, [pc, #-952]	; 5a7c <read_header+0x1018>
    5e30:	ldr	r3, [r2, r3]
    5e34:	add	r3, r3, #84	; 0x54
    5e38:	ldr	r0, [r3]
    5e3c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5e40:	ldr	r3, [r3, #4]
    5e44:	sub	r2, fp, #1024	; 0x400
    5e48:	sub	r2, r2, #4
    5e4c:	vldr	d7, [r2, #-8]
    5e50:	vmov.f64	d0, d7
    5e54:	mov	r2, r3
    5e58:	mov	r1, #0
    5e5c:	bl	0 <coda_mem_double_new>
    5e60:	str	r0, [fp, #-16]
    5e64:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5e68:	ldr	r0, [r3, #8]
    5e6c:	mov	r3, #0
    5e70:	ldr	r2, [fp, #-16]
    5e74:	ldr	r1, [pc, #-1020]	; 5a80 <read_header+0x101c>
    5e78:	bl	0 <coda_mem_record_add_field>
    5e7c:	mov	r3, #0
    5e80:	str	r3, [fp, #-8]
    5e84:	b	5ef4 <read_header+0x1490>
    5e88:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5e8c:	ldr	r3, [r3]
    5e90:	mov	r0, r3
    5e94:	bl	0 <ftell>
    5e98:	mov	r2, r0
    5e9c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5ea0:	str	r2, [r3, #52]	; 0x34
    5ea4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5ea8:	ldr	r3, [r3, #48]	; 0x30
    5eac:	add	r2, r3, #1
    5eb0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5eb4:	str	r2, [r3, #48]	; 0x30
    5eb8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    5ebc:	ldr	r3, [r3]
    5ec0:	sub	r2, fp, #1024	; 0x400
    5ec4:	mov	r1, r2
    5ec8:	mov	r0, r3
    5ecc:	bl	4920 <get_line>
    5ed0:	str	r0, [fp, #-12]
    5ed4:	ldr	r3, [fp, #-12]
    5ed8:	cmp	r3, #0
    5edc:	bge	5ee8 <read_header+0x1484>
    5ee0:	mvn	r3, #0
    5ee4:	b	5f04 <read_header+0x14a0>
    5ee8:	ldr	r3, [fp, #-8]
    5eec:	add	r3, r3, #1
    5ef0:	str	r3, [fp, #-8]
    5ef4:	ldr	r3, [fp, #-8]
    5ef8:	cmp	r3, #6
    5efc:	ble	5e88 <read_header+0x1424>
    5f00:	mov	r3, #0
    5f04:	mov	r0, r3
    5f08:	sub	sp, fp, #4
    5f0c:	pop	{fp, pc}

00005f10 <read_records>:
    5f10:	push	{fp, lr}
    5f14:	add	fp, sp, #4
    5f18:	sub	sp, sp, #1104	; 0x450
    5f1c:	sub	sp, sp, #8
    5f20:	str	r0, [fp, #-1104]	; 0xfffffbb0
    5f24:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5f28:	ldr	r3, [r3]
    5f2c:	mov	r0, r3
    5f30:	bl	0 <ftell>
    5f34:	mov	r2, r0
    5f38:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5f3c:	str	r2, [r3, #52]	; 0x34
    5f40:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5f44:	ldr	r3, [r3, #48]	; 0x30
    5f48:	add	r2, r3, #1
    5f4c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5f50:	str	r2, [r3, #48]	; 0x30
    5f54:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5f58:	ldr	r3, [r3]
    5f5c:	sub	r2, fp, #1016	; 0x3f8
    5f60:	mov	r1, r2
    5f64:	mov	r0, r3
    5f68:	bl	4920 <get_line>
    5f6c:	str	r0, [fp, #-8]
    5f70:	ldr	r3, [fp, #-8]
    5f74:	cmp	r3, #0
    5f78:	bge	899c <read_records+0x2a8c>
    5f7c:	mvn	r3, #0
    5f80:	b	8a48 <read_records+0x2b38>
    5f84:	ldrb	r3, [fp, #-1016]	; 0xfffffc08
    5f88:	cmp	r3, #42	; 0x2a
    5f8c:	bne	61ac <read_records+0x29c>
    5f90:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5f94:	ldr	r3, [r3, #16]
    5f98:	cmp	r3, #0
    5f9c:	beq	6028 <read_records+0x118>
    5fa0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5fa4:	ldr	r0, [r3, #16]
    5fa8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5fac:	ldr	r2, [r3, #20]
    5fb0:	mov	r3, #0
    5fb4:	ldr	r1, [pc, #3988]	; 6f50 <read_records+0x1040>
    5fb8:	bl	0 <coda_mem_record_add_field>
    5fbc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5fc0:	mov	r2, #0
    5fc4:	str	r2, [r3, #20]
    5fc8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5fcc:	ldr	r3, [r3, #28]
    5fd0:	cmp	r3, #0
    5fd4:	beq	6000 <read_records+0xf0>
    5fd8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5fdc:	ldr	r0, [r3, #16]
    5fe0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5fe4:	ldr	r2, [r3, #28]
    5fe8:	mov	r3, #0
    5fec:	ldr	r1, [pc, #3936]	; 6f54 <read_records+0x1044>
    5ff0:	bl	0 <coda_mem_record_add_field>
    5ff4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    5ff8:	mov	r2, #0
    5ffc:	str	r2, [r3, #28]
    6000:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6004:	ldr	r2, [r3, #12]
    6008:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    600c:	ldr	r3, [r3, #16]
    6010:	mov	r1, r3
    6014:	mov	r0, r2
    6018:	bl	0 <coda_mem_array_add_element>
    601c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6020:	mov	r2, #0
    6024:	str	r2, [r3, #16]
    6028:	bl	0 <__aeabi_read_tp>
    602c:	mov	r2, r0
    6030:	ldr	r3, [pc, #4032]	; 6ff8 <read_records+0x10e8>
    6034:	ldr	r3, [r2, r3]
    6038:	add	r3, r3, #272	; 0x110
    603c:	ldr	r3, [r3]
    6040:	mov	r1, #0
    6044:	mov	r0, r3
    6048:	bl	0 <coda_mem_array_new>
    604c:	mov	r2, r0
    6050:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6054:	str	r2, [r3, #20]
    6058:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    605c:	ldrb	r3, [r3, #44]	; 0x2c
    6060:	cmp	r3, #86	; 0x56
    6064:	bne	6098 <read_records+0x188>
    6068:	bl	0 <__aeabi_read_tp>
    606c:	mov	r2, r0
    6070:	ldr	r3, [pc, #3968]	; 6ff8 <read_records+0x10e8>
    6074:	ldr	r3, [r2, r3]
    6078:	add	r3, r3, #280	; 0x118
    607c:	ldr	r3, [r3]
    6080:	mov	r1, #0
    6084:	mov	r0, r3
    6088:	bl	0 <coda_mem_array_new>
    608c:	mov	r2, r0
    6090:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6094:	str	r2, [r3, #28]
    6098:	bl	0 <__aeabi_read_tp>
    609c:	mov	r2, r0
    60a0:	ldr	r3, [pc, #3920]	; 6ff8 <read_records+0x10e8>
    60a4:	ldr	r3, [r2, r3]
    60a8:	add	r3, r3, #292	; 0x124
    60ac:	ldr	r3, [r3]
    60b0:	mov	r1, #0
    60b4:	mov	r0, r3
    60b8:	bl	0 <coda_mem_record_new>
    60bc:	mov	r2, r0
    60c0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    60c4:	str	r2, [r3, #16]
    60c8:	ldr	r3, [fp, #-8]
    60cc:	cmp	r3, #30
    60d0:	bgt	6104 <read_records+0x1f4>
    60d4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    60d8:	ldr	r2, [r3, #48]	; 0x30
    60dc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    60e0:	ldr	r3, [r3, #52]	; 0x34
    60e4:	str	r3, [sp]
    60e8:	mov	r3, r2
    60ec:	ldr	r2, [fp, #-8]
    60f0:	ldr	r1, [pc, #3680]	; 6f58 <read_records+0x1048>
    60f4:	mvn	r0, #21
    60f8:	bl	0 <coda_set_error>
    60fc:	mvn	r3, #0
    6100:	b	8a48 <read_records+0x2b38>
    6104:	sub	r3, fp, #1016	; 0x3f8
    6108:	add	r1, r3, #3
    610c:	sub	r3, fp, #1088	; 0x440
    6110:	sub	r3, r3, #4
    6114:	sub	r3, r3, #8
    6118:	mov	r2, #28
    611c:	mov	r0, r3
    6120:	bl	0 <memcpy>
    6124:	mov	r3, #0
    6128:	strb	r3, [fp, #-1072]	; 0xfffffbd0
    612c:	bl	0 <__aeabi_read_tp>
    6130:	mov	r2, r0
    6134:	ldr	r3, [pc, #3772]	; 6ff8 <read_records+0x10e8>
    6138:	ldr	r3, [r2, r3]
    613c:	add	r3, r3, #260	; 0x104
    6140:	ldr	r0, [r3]
    6144:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6148:	ldr	r2, [r3, #4]
    614c:	sub	r3, fp, #1088	; 0x440
    6150:	sub	r3, r3, #4
    6154:	sub	r3, r3, #8
    6158:	mov	r1, #0
    615c:	bl	0 <coda_mem_string_new>
    6160:	str	r0, [fp, #-16]
    6164:	bl	0 <__aeabi_read_tp>
    6168:	mov	r2, r0
    616c:	ldr	r3, [pc, #3716]	; 6ff8 <read_records+0x10e8>
    6170:	ldr	r3, [r2, r3]
    6174:	add	r3, r3, #264	; 0x108
    6178:	ldr	r3, [r3]
    617c:	ldr	r2, [fp, #-16]
    6180:	mov	r1, #0
    6184:	mov	r0, r3
    6188:	bl	0 <coda_mem_time_new>
    618c:	str	r0, [fp, #-12]
    6190:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6194:	ldr	r0, [r3, #16]
    6198:	mov	r3, #0
    619c:	ldr	r2, [fp, #-12]
    61a0:	ldr	r1, [pc, #3508]	; 6f5c <read_records+0x104c>
    61a4:	bl	0 <coda_mem_record_add_field>
    61a8:	b	73c0 <read_records+0x14b0>
    61ac:	ldrb	r3, [fp, #-1016]	; 0xfffffc08
    61b0:	cmp	r3, #80	; 0x50
    61b4:	bne	6b0c <read_records+0xbfc>
    61b8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    61bc:	ldr	r3, [r3, #20]
    61c0:	cmp	r3, #0
    61c4:	bne	61ec <read_records+0x2dc>
    61c8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    61cc:	ldr	r2, [r3, #48]	; 0x30
    61d0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    61d4:	ldr	r3, [r3, #52]	; 0x34
    61d8:	ldr	r1, [pc, #3456]	; 6f60 <read_records+0x1050>
    61dc:	mvn	r0, #21
    61e0:	bl	0 <coda_set_error>
    61e4:	mvn	r3, #0
    61e8:	b	8a48 <read_records+0x2b38>
    61ec:	bl	0 <__aeabi_read_tp>
    61f0:	mov	r2, r0
    61f4:	ldr	r3, [pc, #3580]	; 6ff8 <read_records+0x10e8>
    61f8:	ldr	r3, [r2, r3]
    61fc:	add	r3, r3, #268	; 0x10c
    6200:	ldr	r3, [r3]
    6204:	mov	r1, #0
    6208:	mov	r0, r3
    620c:	bl	0 <coda_mem_record_new>
    6210:	mov	r2, r0
    6214:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6218:	str	r2, [r3, #24]
    621c:	ldr	r3, [fp, #-8]
    6220:	cmp	r3, #59	; 0x3b
    6224:	bgt	6258 <read_records+0x348>
    6228:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    622c:	ldr	r2, [r3, #48]	; 0x30
    6230:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6234:	ldr	r3, [r3, #52]	; 0x34
    6238:	str	r3, [sp]
    623c:	mov	r3, r2
    6240:	ldr	r2, [fp, #-8]
    6244:	ldr	r1, [pc, #3340]	; 6f58 <read_records+0x1048>
    6248:	mvn	r0, #21
    624c:	bl	0 <coda_set_error>
    6250:	mvn	r3, #0
    6254:	b	8a48 <read_records+0x2b38>
    6258:	sub	r3, fp, #1016	; 0x3f8
    625c:	add	r1, r3, #1
    6260:	sub	r3, fp, #1088	; 0x440
    6264:	sub	r3, r3, #4
    6268:	sub	r3, r3, #8
    626c:	mov	r2, #3
    6270:	mov	r0, r3
    6274:	bl	0 <memcpy>
    6278:	mov	r3, #0
    627c:	strb	r3, [fp, #-1097]	; 0xfffffbb7
    6280:	bl	0 <__aeabi_read_tp>
    6284:	mov	r2, r0
    6288:	ldr	r3, [pc, #3432]	; 6ff8 <read_records+0x10e8>
    628c:	ldr	r3, [r2, r3]
    6290:	add	r3, r3, #88	; 0x58
    6294:	ldr	r0, [r3]
    6298:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    629c:	ldr	r2, [r3, #4]
    62a0:	sub	r3, fp, #1088	; 0x440
    62a4:	sub	r3, r3, #4
    62a8:	sub	r3, r3, #8
    62ac:	mov	r1, #0
    62b0:	bl	0 <coda_mem_string_new>
    62b4:	str	r0, [fp, #-12]
    62b8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    62bc:	ldr	r0, [r3, #24]
    62c0:	mov	r3, #0
    62c4:	ldr	r2, [fp, #-12]
    62c8:	ldr	r1, [pc, #3220]	; 6f64 <read_records+0x1054>
    62cc:	bl	0 <coda_mem_record_add_field>
    62d0:	sub	r2, fp, #1024	; 0x400
    62d4:	sub	r2, r2, #4
    62d8:	sub	r3, fp, #1016	; 0x3f8
    62dc:	add	r0, r3, #4
    62e0:	mov	r3, #0
    62e4:	mov	r1, #14
    62e8:	bl	0 <coda_ascii_parse_double>
    62ec:	mov	r3, r0
    62f0:	cmp	r3, #0
    62f4:	bge	6320 <read_records+0x410>
    62f8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    62fc:	ldr	r1, [r3, #48]	; 0x30
    6300:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6304:	ldr	r3, [r3, #52]	; 0x34
    6308:	add	r3, r3, #4
    630c:	mov	r2, r3
    6310:	ldr	r0, [pc, #3304]	; 7000 <read_records+0x10f0>
    6314:	bl	0 <coda_add_error_message>
    6318:	mvn	r3, #0
    631c:	b	8a48 <read_records+0x2b38>
    6320:	bl	0 <__aeabi_read_tp>
    6324:	mov	r2, r0
    6328:	ldr	r3, [pc, #3272]	; 6ff8 <read_records+0x10e8>
    632c:	ldr	r3, [r2, r3]
    6330:	add	r3, r3, #92	; 0x5c
    6334:	ldr	r0, [r3]
    6338:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    633c:	ldr	r3, [r3, #4]
    6340:	sub	r2, fp, #1024	; 0x400
    6344:	sub	r2, r2, #4
    6348:	vldr	d7, [r2]
    634c:	vmov.f64	d0, d7
    6350:	mov	r2, r3
    6354:	mov	r1, #0
    6358:	bl	0 <coda_mem_double_new>
    635c:	str	r0, [fp, #-12]
    6360:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6364:	ldr	r0, [r3, #24]
    6368:	mov	r3, #0
    636c:	ldr	r2, [fp, #-12]
    6370:	ldr	r1, [pc, #3056]	; 6f68 <read_records+0x1058>
    6374:	bl	0 <coda_mem_record_add_field>
    6378:	sub	r2, fp, #1024	; 0x400
    637c:	sub	r2, r2, #4
    6380:	sub	r3, fp, #1016	; 0x3f8
    6384:	add	r0, r3, #18
    6388:	mov	r3, #0
    638c:	mov	r1, #14
    6390:	bl	0 <coda_ascii_parse_double>
    6394:	mov	r3, r0
    6398:	cmp	r3, #0
    639c:	bge	63c8 <read_records+0x4b8>
    63a0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    63a4:	ldr	r1, [r3, #48]	; 0x30
    63a8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    63ac:	ldr	r3, [r3, #52]	; 0x34
    63b0:	add	r3, r3, #18
    63b4:	mov	r2, r3
    63b8:	ldr	r0, [pc, #3136]	; 7000 <read_records+0x10f0>
    63bc:	bl	0 <coda_add_error_message>
    63c0:	mvn	r3, #0
    63c4:	b	8a48 <read_records+0x2b38>
    63c8:	bl	0 <__aeabi_read_tp>
    63cc:	mov	r2, r0
    63d0:	ldr	r3, [pc, #3104]	; 6ff8 <read_records+0x10e8>
    63d4:	ldr	r3, [r2, r3]
    63d8:	add	r3, r3, #96	; 0x60
    63dc:	ldr	r0, [r3]
    63e0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    63e4:	ldr	r3, [r3, #4]
    63e8:	sub	r2, fp, #1024	; 0x400
    63ec:	sub	r2, r2, #4
    63f0:	vldr	d7, [r2]
    63f4:	vmov.f64	d0, d7
    63f8:	mov	r2, r3
    63fc:	mov	r1, #0
    6400:	bl	0 <coda_mem_double_new>
    6404:	str	r0, [fp, #-12]
    6408:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    640c:	ldr	r0, [r3, #24]
    6410:	mov	r3, #0
    6414:	ldr	r2, [fp, #-12]
    6418:	ldr	r1, [pc, #2892]	; 6f6c <read_records+0x105c>
    641c:	bl	0 <coda_mem_record_add_field>
    6420:	sub	r2, fp, #1024	; 0x400
    6424:	sub	r2, r2, #4
    6428:	sub	r3, fp, #1016	; 0x3f8
    642c:	add	r0, r3, #32
    6430:	mov	r3, #0
    6434:	mov	r1, #14
    6438:	bl	0 <coda_ascii_parse_double>
    643c:	mov	r3, r0
    6440:	cmp	r3, #0
    6444:	bge	6470 <read_records+0x560>
    6448:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    644c:	ldr	r1, [r3, #48]	; 0x30
    6450:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6454:	ldr	r3, [r3, #52]	; 0x34
    6458:	add	r3, r3, #32
    645c:	mov	r2, r3
    6460:	ldr	r0, [pc, #2968]	; 7000 <read_records+0x10f0>
    6464:	bl	0 <coda_add_error_message>
    6468:	mvn	r3, #0
    646c:	b	8a48 <read_records+0x2b38>
    6470:	bl	0 <__aeabi_read_tp>
    6474:	mov	r2, r0
    6478:	ldr	r3, [pc, #2936]	; 6ff8 <read_records+0x10e8>
    647c:	ldr	r3, [r2, r3]
    6480:	add	r3, r3, #100	; 0x64
    6484:	ldr	r0, [r3]
    6488:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    648c:	ldr	r3, [r3, #4]
    6490:	sub	r2, fp, #1024	; 0x400
    6494:	sub	r2, r2, #4
    6498:	vldr	d7, [r2]
    649c:	vmov.f64	d0, d7
    64a0:	mov	r2, r3
    64a4:	mov	r1, #0
    64a8:	bl	0 <coda_mem_double_new>
    64ac:	str	r0, [fp, #-12]
    64b0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    64b4:	ldr	r0, [r3, #24]
    64b8:	mov	r3, #0
    64bc:	ldr	r2, [fp, #-12]
    64c0:	ldr	r1, [pc, #2728]	; 6f70 <read_records+0x1060>
    64c4:	bl	0 <coda_mem_record_add_field>
    64c8:	sub	r2, fp, #1024	; 0x400
    64cc:	sub	r2, r2, #4
    64d0:	sub	r3, fp, #1016	; 0x3f8
    64d4:	add	r0, r3, #46	; 0x2e
    64d8:	mov	r3, #0
    64dc:	mov	r1, #14
    64e0:	bl	0 <coda_ascii_parse_double>
    64e4:	mov	r3, r0
    64e8:	cmp	r3, #0
    64ec:	bge	6518 <read_records+0x608>
    64f0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    64f4:	ldr	r1, [r3, #48]	; 0x30
    64f8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    64fc:	ldr	r3, [r3, #52]	; 0x34
    6500:	add	r3, r3, #46	; 0x2e
    6504:	mov	r2, r3
    6508:	ldr	r0, [pc, #2800]	; 7000 <read_records+0x10f0>
    650c:	bl	0 <coda_add_error_message>
    6510:	mvn	r3, #0
    6514:	b	8a48 <read_records+0x2b38>
    6518:	bl	0 <__aeabi_read_tp>
    651c:	mov	r2, r0
    6520:	ldr	r3, [pc, #2768]	; 6ff8 <read_records+0x10e8>
    6524:	ldr	r3, [r2, r3]
    6528:	add	r3, r3, #104	; 0x68
    652c:	ldr	r0, [r3]
    6530:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6534:	ldr	r3, [r3, #4]
    6538:	sub	r2, fp, #1024	; 0x400
    653c:	sub	r2, r2, #4
    6540:	vldr	d7, [r2]
    6544:	vmov.f64	d0, d7
    6548:	mov	r2, r3
    654c:	mov	r1, #0
    6550:	bl	0 <coda_mem_double_new>
    6554:	str	r0, [fp, #-12]
    6558:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    655c:	ldr	r0, [r3, #24]
    6560:	mov	r3, #0
    6564:	ldr	r2, [fp, #-12]
    6568:	ldr	r1, [pc, #2564]	; 6f74 <read_records+0x1064>
    656c:	bl	0 <coda_mem_record_add_field>
    6570:	ldr	r3, [fp, #-8]
    6574:	cmp	r3, #63	; 0x3f
    6578:	ble	65a0 <read_records+0x690>
    657c:	sub	r3, fp, #1016	; 0x3f8
    6580:	add	r3, r3, #61	; 0x3d
    6584:	mov	r2, #2
    6588:	ldr	r1, [pc, #2584]	; 6fa8 <read_records+0x1098>
    658c:	mov	r0, r3
    6590:	bl	0 <memcmp>
    6594:	mov	r3, r0
    6598:	cmp	r3, #0
    659c:	bne	65bc <read_records+0x6ac>
    65a0:	sub	r3, fp, #1024	; 0x400
    65a4:	sub	r3, r3, #4
    65a8:	mov	r1, r3
    65ac:	mov	r2, #0
    65b0:	mov	r3, #0
    65b4:	strd	r2, [r1, #-8]
    65b8:	b	6610 <read_records+0x700>
    65bc:	sub	r2, fp, #1024	; 0x400
    65c0:	sub	r2, r2, #4
    65c4:	sub	r2, r2, #8
    65c8:	sub	r3, fp, #1016	; 0x3f8
    65cc:	add	r0, r3, #61	; 0x3d
    65d0:	mov	r3, #0
    65d4:	mov	r1, #2
    65d8:	bl	0 <coda_ascii_parse_int64>
    65dc:	mov	r3, r0
    65e0:	cmp	r3, #0
    65e4:	bge	6610 <read_records+0x700>
    65e8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    65ec:	ldr	r1, [r3, #48]	; 0x30
    65f0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    65f4:	ldr	r3, [r3, #52]	; 0x34
    65f8:	add	r3, r3, #61	; 0x3d
    65fc:	mov	r2, r3
    6600:	ldr	r0, [pc, #2552]	; 7000 <read_records+0x10f0>
    6604:	bl	0 <coda_add_error_message>
    6608:	mvn	r3, #0
    660c:	b	8a48 <read_records+0x2b38>
    6610:	bl	0 <__aeabi_read_tp>
    6614:	mov	r2, r0
    6618:	ldr	r3, [pc, #2520]	; 6ff8 <read_records+0x10e8>
    661c:	ldr	r3, [r2, r3]
    6620:	add	r3, r3, #108	; 0x6c
    6624:	ldr	r0, [r3]
    6628:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    662c:	ldr	r1, [r3, #4]
    6630:	sub	r3, fp, #1024	; 0x400
    6634:	sub	r3, r3, #4
    6638:	ldrd	r2, [r3, #-8]
    663c:	sxtb	r3, r2
    6640:	mov	r2, r1
    6644:	mov	r1, #0
    6648:	bl	0 <coda_mem_int8_new>
    664c:	str	r0, [fp, #-12]
    6650:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6654:	ldr	r0, [r3, #24]
    6658:	mov	r3, #0
    665c:	ldr	r2, [fp, #-12]
    6660:	ldr	r1, [pc, #2392]	; 6fc0 <read_records+0x10b0>
    6664:	bl	0 <coda_mem_record_add_field>
    6668:	ldr	r3, [fp, #-8]
    666c:	cmp	r3, #65	; 0x41
    6670:	ble	6698 <read_records+0x788>
    6674:	sub	r3, fp, #1016	; 0x3f8
    6678:	add	r3, r3, #64	; 0x40
    667c:	mov	r2, #2
    6680:	ldr	r1, [pc, #2336]	; 6fa8 <read_records+0x1098>
    6684:	mov	r0, r3
    6688:	bl	0 <memcmp>
    668c:	mov	r3, r0
    6690:	cmp	r3, #0
    6694:	bne	66b4 <read_records+0x7a4>
    6698:	sub	r3, fp, #1024	; 0x400
    669c:	sub	r3, r3, #4
    66a0:	mov	r1, r3
    66a4:	mov	r2, #0
    66a8:	mov	r3, #0
    66ac:	strd	r2, [r1, #-8]
    66b0:	b	6708 <read_records+0x7f8>
    66b4:	sub	r2, fp, #1024	; 0x400
    66b8:	sub	r2, r2, #4
    66bc:	sub	r2, r2, #8
    66c0:	sub	r3, fp, #1016	; 0x3f8
    66c4:	add	r0, r3, #64	; 0x40
    66c8:	mov	r3, #0
    66cc:	mov	r1, #2
    66d0:	bl	0 <coda_ascii_parse_int64>
    66d4:	mov	r3, r0
    66d8:	cmp	r3, #0
    66dc:	bge	6708 <read_records+0x7f8>
    66e0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    66e4:	ldr	r1, [r3, #48]	; 0x30
    66e8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    66ec:	ldr	r3, [r3, #52]	; 0x34
    66f0:	add	r3, r3, #64	; 0x40
    66f4:	mov	r2, r3
    66f8:	ldr	r0, [pc, #2304]	; 7000 <read_records+0x10f0>
    66fc:	bl	0 <coda_add_error_message>
    6700:	mvn	r3, #0
    6704:	b	8a48 <read_records+0x2b38>
    6708:	bl	0 <__aeabi_read_tp>
    670c:	mov	r2, r0
    6710:	ldr	r3, [pc, #2272]	; 6ff8 <read_records+0x10e8>
    6714:	ldr	r3, [r2, r3]
    6718:	add	r3, r3, #112	; 0x70
    671c:	ldr	r0, [r3]
    6720:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6724:	ldr	r1, [r3, #4]
    6728:	sub	r3, fp, #1024	; 0x400
    672c:	sub	r3, r3, #4
    6730:	ldrd	r2, [r3, #-8]
    6734:	sxtb	r3, r2
    6738:	mov	r2, r1
    673c:	mov	r1, #0
    6740:	bl	0 <coda_mem_int8_new>
    6744:	str	r0, [fp, #-12]
    6748:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    674c:	ldr	r0, [r3, #24]
    6750:	mov	r3, #0
    6754:	ldr	r2, [fp, #-12]
    6758:	ldr	r1, [pc, #2148]	; 6fc4 <read_records+0x10b4>
    675c:	bl	0 <coda_mem_record_add_field>
    6760:	ldr	r3, [fp, #-8]
    6764:	cmp	r3, #68	; 0x44
    6768:	ble	6790 <read_records+0x880>
    676c:	sub	r3, fp, #1016	; 0x3f8
    6770:	add	r3, r3, #67	; 0x43
    6774:	mov	r2, #2
    6778:	ldr	r1, [pc, #2088]	; 6fa8 <read_records+0x1098>
    677c:	mov	r0, r3
    6780:	bl	0 <memcmp>
    6784:	mov	r3, r0
    6788:	cmp	r3, #0
    678c:	bne	67ac <read_records+0x89c>
    6790:	sub	r3, fp, #1024	; 0x400
    6794:	sub	r3, r3, #4
    6798:	mov	r1, r3
    679c:	mov	r2, #0
    67a0:	mov	r3, #0
    67a4:	strd	r2, [r1, #-8]
    67a8:	b	6800 <read_records+0x8f0>
    67ac:	sub	r2, fp, #1024	; 0x400
    67b0:	sub	r2, r2, #4
    67b4:	sub	r2, r2, #8
    67b8:	sub	r3, fp, #1016	; 0x3f8
    67bc:	add	r0, r3, #67	; 0x43
    67c0:	mov	r3, #0
    67c4:	mov	r1, #2
    67c8:	bl	0 <coda_ascii_parse_int64>
    67cc:	mov	r3, r0
    67d0:	cmp	r3, #0
    67d4:	bge	6800 <read_records+0x8f0>
    67d8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    67dc:	ldr	r1, [r3, #48]	; 0x30
    67e0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    67e4:	ldr	r3, [r3, #52]	; 0x34
    67e8:	add	r3, r3, #67	; 0x43
    67ec:	mov	r2, r3
    67f0:	ldr	r0, [pc, #2056]	; 7000 <read_records+0x10f0>
    67f4:	bl	0 <coda_add_error_message>
    67f8:	mvn	r3, #0
    67fc:	b	8a48 <read_records+0x2b38>
    6800:	bl	0 <__aeabi_read_tp>
    6804:	mov	r2, r0
    6808:	ldr	r3, [pc, #2024]	; 6ff8 <read_records+0x10e8>
    680c:	ldr	r3, [r2, r3]
    6810:	add	r3, r3, #116	; 0x74
    6814:	ldr	r0, [r3]
    6818:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    681c:	ldr	r1, [r3, #4]
    6820:	sub	r3, fp, #1024	; 0x400
    6824:	sub	r3, r3, #4
    6828:	ldrd	r2, [r3, #-8]
    682c:	sxtb	r3, r2
    6830:	mov	r2, r1
    6834:	mov	r1, #0
    6838:	bl	0 <coda_mem_int8_new>
    683c:	str	r0, [fp, #-12]
    6840:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6844:	ldr	r0, [r3, #24]
    6848:	mov	r3, #0
    684c:	ldr	r2, [fp, #-12]
    6850:	ldr	r1, [pc, #1904]	; 6fc8 <read_records+0x10b8>
    6854:	bl	0 <coda_mem_record_add_field>
    6858:	ldr	r3, [fp, #-8]
    685c:	cmp	r3, #72	; 0x48
    6860:	ble	6888 <read_records+0x978>
    6864:	sub	r3, fp, #1016	; 0x3f8
    6868:	add	r3, r3, #70	; 0x46
    686c:	mov	r2, #3
    6870:	ldr	r1, [pc, #1848]	; 6fb0 <read_records+0x10a0>
    6874:	mov	r0, r3
    6878:	bl	0 <memcmp>
    687c:	mov	r3, r0
    6880:	cmp	r3, #0
    6884:	bne	68a4 <read_records+0x994>
    6888:	sub	r3, fp, #1024	; 0x400
    688c:	sub	r3, r3, #4
    6890:	mov	r1, r3
    6894:	mov	r2, #0
    6898:	mov	r3, #0
    689c:	strd	r2, [r1, #-8]
    68a0:	b	68f8 <read_records+0x9e8>
    68a4:	sub	r2, fp, #1024	; 0x400
    68a8:	sub	r2, r2, #4
    68ac:	sub	r2, r2, #8
    68b0:	sub	r3, fp, #1016	; 0x3f8
    68b4:	add	r0, r3, #70	; 0x46
    68b8:	mov	r3, #0
    68bc:	mov	r1, #3
    68c0:	bl	0 <coda_ascii_parse_int64>
    68c4:	mov	r3, r0
    68c8:	cmp	r3, #0
    68cc:	bge	68f8 <read_records+0x9e8>
    68d0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    68d4:	ldr	r1, [r3, #48]	; 0x30
    68d8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    68dc:	ldr	r3, [r3, #52]	; 0x34
    68e0:	add	r3, r3, #70	; 0x46
    68e4:	mov	r2, r3
    68e8:	ldr	r0, [pc, #1808]	; 7000 <read_records+0x10f0>
    68ec:	bl	0 <coda_add_error_message>
    68f0:	mvn	r3, #0
    68f4:	b	8a48 <read_records+0x2b38>
    68f8:	bl	0 <__aeabi_read_tp>
    68fc:	mov	r2, r0
    6900:	ldr	r3, [pc, #1776]	; 6ff8 <read_records+0x10e8>
    6904:	ldr	r3, [r2, r3]
    6908:	add	r3, r3, #120	; 0x78
    690c:	ldr	r0, [r3]
    6910:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6914:	ldr	r1, [r3, #4]
    6918:	sub	r3, fp, #1024	; 0x400
    691c:	sub	r3, r3, #4
    6920:	ldrd	r2, [r3, #-8]
    6924:	sxth	r3, r2
    6928:	mov	r2, r1
    692c:	mov	r1, #0
    6930:	bl	0 <coda_mem_int16_new>
    6934:	str	r0, [fp, #-12]
    6938:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    693c:	ldr	r0, [r3, #24]
    6940:	mov	r3, #0
    6944:	ldr	r2, [fp, #-12]
    6948:	ldr	r1, [pc, #1664]	; 6fd0 <read_records+0x10c0>
    694c:	bl	0 <coda_mem_record_add_field>
    6950:	ldr	r3, [fp, #-8]
    6954:	cmp	r3, #74	; 0x4a
    6958:	ble	6964 <read_records+0xa54>
    695c:	ldrb	r3, [fp, #-942]	; 0xfffffc52
    6960:	b	6968 <read_records+0xa58>
    6964:	mov	r3, #32
    6968:	strb	r3, [fp, #-1100]	; 0xfffffbb4
    696c:	mov	r3, #0
    6970:	strb	r3, [fp, #-1099]	; 0xfffffbb5
    6974:	bl	0 <__aeabi_read_tp>
    6978:	mov	r2, r0
    697c:	ldr	r3, [pc, #1652]	; 6ff8 <read_records+0x10e8>
    6980:	ldr	r3, [r2, r3]
    6984:	add	r3, r3, #124	; 0x7c
    6988:	ldr	r0, [r3]
    698c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6990:	ldr	r2, [r3, #4]
    6994:	sub	r3, fp, #1088	; 0x440
    6998:	sub	r3, r3, #4
    699c:	sub	r3, r3, #8
    69a0:	mov	r1, #0
    69a4:	bl	0 <coda_mem_string_new>
    69a8:	str	r0, [fp, #-12]
    69ac:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    69b0:	ldr	r0, [r3, #24]
    69b4:	mov	r3, #0
    69b8:	ldr	r2, [fp, #-12]
    69bc:	ldr	r1, [pc, #1460]	; 6f78 <read_records+0x1068>
    69c0:	bl	0 <coda_mem_record_add_field>
    69c4:	ldr	r3, [fp, #-8]
    69c8:	cmp	r3, #75	; 0x4b
    69cc:	ble	69d8 <read_records+0xac8>
    69d0:	ldrb	r3, [fp, #-941]	; 0xfffffc53
    69d4:	b	69dc <read_records+0xacc>
    69d8:	mov	r3, #32
    69dc:	strb	r3, [fp, #-1100]	; 0xfffffbb4
    69e0:	bl	0 <__aeabi_read_tp>
    69e4:	mov	r2, r0
    69e8:	ldr	r3, [pc, #1544]	; 6ff8 <read_records+0x10e8>
    69ec:	ldr	r3, [r2, r3]
    69f0:	add	r3, r3, #128	; 0x80
    69f4:	ldr	r0, [r3]
    69f8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    69fc:	ldr	r2, [r3, #4]
    6a00:	sub	r3, fp, #1088	; 0x440
    6a04:	sub	r3, r3, #4
    6a08:	sub	r3, r3, #8
    6a0c:	mov	r1, #0
    6a10:	bl	0 <coda_mem_string_new>
    6a14:	str	r0, [fp, #-12]
    6a18:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6a1c:	ldr	r0, [r3, #24]
    6a20:	mov	r3, #0
    6a24:	ldr	r2, [fp, #-12]
    6a28:	ldr	r1, [pc, #1356]	; 6f7c <read_records+0x106c>
    6a2c:	bl	0 <coda_mem_record_add_field>
    6a30:	ldr	r3, [fp, #-8]
    6a34:	cmp	r3, #78	; 0x4e
    6a38:	ble	6a44 <read_records+0xb34>
    6a3c:	ldrb	r3, [fp, #-938]	; 0xfffffc56
    6a40:	b	6a48 <read_records+0xb38>
    6a44:	mov	r3, #32
    6a48:	strb	r3, [fp, #-1100]	; 0xfffffbb4
    6a4c:	bl	0 <__aeabi_read_tp>
    6a50:	mov	r2, r0
    6a54:	ldr	r3, [pc, #1436]	; 6ff8 <read_records+0x10e8>
    6a58:	ldr	r3, [r2, r3]
    6a5c:	add	r3, r3, #132	; 0x84
    6a60:	ldr	r0, [r3]
    6a64:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6a68:	ldr	r2, [r3, #4]
    6a6c:	sub	r3, fp, #1088	; 0x440
    6a70:	sub	r3, r3, #4
    6a74:	sub	r3, r3, #8
    6a78:	mov	r1, #0
    6a7c:	bl	0 <coda_mem_string_new>
    6a80:	str	r0, [fp, #-12]
    6a84:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6a88:	ldr	r0, [r3, #24]
    6a8c:	mov	r3, #0
    6a90:	ldr	r2, [fp, #-12]
    6a94:	ldr	r1, [pc, #1252]	; 6f80 <read_records+0x1070>
    6a98:	bl	0 <coda_mem_record_add_field>
    6a9c:	ldr	r3, [fp, #-8]
    6aa0:	cmp	r3, #79	; 0x4f
    6aa4:	ble	6ab0 <read_records+0xba0>
    6aa8:	ldrb	r3, [fp, #-937]	; 0xfffffc57
    6aac:	b	6ab4 <read_records+0xba4>
    6ab0:	mov	r3, #32
    6ab4:	strb	r3, [fp, #-1100]	; 0xfffffbb4
    6ab8:	bl	0 <__aeabi_read_tp>
    6abc:	mov	r2, r0
    6ac0:	ldr	r3, [pc, #1328]	; 6ff8 <read_records+0x10e8>
    6ac4:	ldr	r3, [r2, r3]
    6ac8:	add	r3, r3, #136	; 0x88
    6acc:	ldr	r0, [r3]
    6ad0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6ad4:	ldr	r2, [r3, #4]
    6ad8:	sub	r3, fp, #1088	; 0x440
    6adc:	sub	r3, r3, #4
    6ae0:	sub	r3, r3, #8
    6ae4:	mov	r1, #0
    6ae8:	bl	0 <coda_mem_string_new>
    6aec:	str	r0, [fp, #-12]
    6af0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6af4:	ldr	r0, [r3, #24]
    6af8:	mov	r3, #0
    6afc:	ldr	r2, [fp, #-12]
    6b00:	ldr	r1, [pc, #1148]	; 6f84 <read_records+0x1074>
    6b04:	bl	0 <coda_mem_record_add_field>
    6b08:	b	73c0 <read_records+0x14b0>
    6b0c:	ldrb	r3, [fp, #-1016]	; 0xfffffc08
    6b10:	cmp	r3, #86	; 0x56
    6b14:	bne	739c <read_records+0x148c>
    6b18:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6b1c:	ldrb	r3, [r3, #44]	; 0x2c
    6b20:	cmp	r3, #86	; 0x56
    6b24:	beq	6b4c <read_records+0xc3c>
    6b28:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6b2c:	ldr	r2, [r3, #48]	; 0x30
    6b30:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6b34:	ldr	r3, [r3, #52]	; 0x34
    6b38:	ldr	r1, [pc, #1096]	; 6f88 <read_records+0x1078>
    6b3c:	mvn	r0, #21
    6b40:	bl	0 <coda_set_error>
    6b44:	mvn	r3, #0
    6b48:	b	8a48 <read_records+0x2b38>
    6b4c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6b50:	ldr	r3, [r3, #28]
    6b54:	cmp	r3, #0
    6b58:	bne	6b80 <read_records+0xc70>
    6b5c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6b60:	ldr	r2, [r3, #48]	; 0x30
    6b64:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6b68:	ldr	r3, [r3, #52]	; 0x34
    6b6c:	ldr	r1, [pc, #1048]	; 6f8c <read_records+0x107c>
    6b70:	mvn	r0, #21
    6b74:	bl	0 <coda_set_error>
    6b78:	mvn	r3, #0
    6b7c:	b	8a48 <read_records+0x2b38>
    6b80:	bl	0 <__aeabi_read_tp>
    6b84:	mov	r2, r0
    6b88:	ldr	r3, [pc, #1128]	; 6ff8 <read_records+0x10e8>
    6b8c:	ldr	r3, [r2, r3]
    6b90:	add	r3, r3, #276	; 0x114
    6b94:	ldr	r3, [r3]
    6b98:	mov	r1, #0
    6b9c:	mov	r0, r3
    6ba0:	bl	0 <coda_mem_record_new>
    6ba4:	mov	r2, r0
    6ba8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6bac:	str	r2, [r3, #32]
    6bb0:	ldr	r3, [fp, #-8]
    6bb4:	cmp	r3, #59	; 0x3b
    6bb8:	bgt	6bec <read_records+0xcdc>
    6bbc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6bc0:	ldr	r2, [r3, #48]	; 0x30
    6bc4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6bc8:	ldr	r3, [r3, #52]	; 0x34
    6bcc:	str	r3, [sp]
    6bd0:	mov	r3, r2
    6bd4:	ldr	r2, [fp, #-8]
    6bd8:	ldr	r1, [pc, #888]	; 6f58 <read_records+0x1048>
    6bdc:	mvn	r0, #21
    6be0:	bl	0 <coda_set_error>
    6be4:	mvn	r3, #0
    6be8:	b	8a48 <read_records+0x2b38>
    6bec:	sub	r3, fp, #1016	; 0x3f8
    6bf0:	add	r1, r3, #1
    6bf4:	sub	r3, fp, #1088	; 0x440
    6bf8:	sub	r3, r3, #4
    6bfc:	sub	r3, r3, #8
    6c00:	mov	r2, #3
    6c04:	mov	r0, r3
    6c08:	bl	0 <memcpy>
    6c0c:	mov	r3, #0
    6c10:	strb	r3, [fp, #-1097]	; 0xfffffbb7
    6c14:	bl	0 <__aeabi_read_tp>
    6c18:	mov	r2, r0
    6c1c:	ldr	r3, [pc, #980]	; 6ff8 <read_records+0x10e8>
    6c20:	ldr	r3, [r2, r3]
    6c24:	add	r3, r3, #88	; 0x58
    6c28:	ldr	r0, [r3]
    6c2c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6c30:	ldr	r2, [r3, #4]
    6c34:	sub	r3, fp, #1088	; 0x440
    6c38:	sub	r3, r3, #4
    6c3c:	sub	r3, r3, #8
    6c40:	mov	r1, #0
    6c44:	bl	0 <coda_mem_string_new>
    6c48:	str	r0, [fp, #-12]
    6c4c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6c50:	ldr	r0, [r3, #32]
    6c54:	mov	r3, #0
    6c58:	ldr	r2, [fp, #-12]
    6c5c:	ldr	r1, [pc, #768]	; 6f64 <read_records+0x1054>
    6c60:	bl	0 <coda_mem_record_add_field>
    6c64:	sub	r2, fp, #1024	; 0x400
    6c68:	sub	r2, r2, #4
    6c6c:	sub	r3, fp, #1016	; 0x3f8
    6c70:	add	r0, r3, #4
    6c74:	mov	r3, #0
    6c78:	mov	r1, #14
    6c7c:	bl	0 <coda_ascii_parse_double>
    6c80:	mov	r3, r0
    6c84:	cmp	r3, #0
    6c88:	bge	6cb4 <read_records+0xda4>
    6c8c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6c90:	ldr	r1, [r3, #48]	; 0x30
    6c94:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6c98:	ldr	r3, [r3, #52]	; 0x34
    6c9c:	add	r3, r3, #4
    6ca0:	mov	r2, r3
    6ca4:	ldr	r0, [pc, #852]	; 7000 <read_records+0x10f0>
    6ca8:	bl	0 <coda_add_error_message>
    6cac:	mvn	r3, #0
    6cb0:	b	8a48 <read_records+0x2b38>
    6cb4:	bl	0 <__aeabi_read_tp>
    6cb8:	mov	r2, r0
    6cbc:	ldr	r3, [pc, #820]	; 6ff8 <read_records+0x10e8>
    6cc0:	ldr	r3, [r2, r3]
    6cc4:	add	r3, r3, #184	; 0xb8
    6cc8:	ldr	r0, [r3]
    6ccc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6cd0:	ldr	r3, [r3, #4]
    6cd4:	sub	r2, fp, #1024	; 0x400
    6cd8:	sub	r2, r2, #4
    6cdc:	vldr	d7, [r2]
    6ce0:	vmov.f64	d0, d7
    6ce4:	mov	r2, r3
    6ce8:	mov	r1, #0
    6cec:	bl	0 <coda_mem_double_new>
    6cf0:	str	r0, [fp, #-12]
    6cf4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6cf8:	ldr	r0, [r3, #32]
    6cfc:	mov	r3, #0
    6d00:	ldr	r2, [fp, #-12]
    6d04:	ldr	r1, [pc, #644]	; 6f90 <read_records+0x1080>
    6d08:	bl	0 <coda_mem_record_add_field>
    6d0c:	sub	r2, fp, #1024	; 0x400
    6d10:	sub	r2, r2, #4
    6d14:	sub	r3, fp, #1016	; 0x3f8
    6d18:	add	r0, r3, #18
    6d1c:	mov	r3, #0
    6d20:	mov	r1, #14
    6d24:	bl	0 <coda_ascii_parse_double>
    6d28:	mov	r3, r0
    6d2c:	cmp	r3, #0
    6d30:	bge	6d5c <read_records+0xe4c>
    6d34:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6d38:	ldr	r1, [r3, #48]	; 0x30
    6d3c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6d40:	ldr	r3, [r3, #52]	; 0x34
    6d44:	add	r3, r3, #18
    6d48:	mov	r2, r3
    6d4c:	ldr	r0, [pc, #684]	; 7000 <read_records+0x10f0>
    6d50:	bl	0 <coda_add_error_message>
    6d54:	mvn	r3, #0
    6d58:	b	8a48 <read_records+0x2b38>
    6d5c:	bl	0 <__aeabi_read_tp>
    6d60:	mov	r2, r0
    6d64:	ldr	r3, [pc, #652]	; 6ff8 <read_records+0x10e8>
    6d68:	ldr	r3, [r2, r3]
    6d6c:	add	r3, r3, #188	; 0xbc
    6d70:	ldr	r0, [r3]
    6d74:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6d78:	ldr	r3, [r3, #4]
    6d7c:	sub	r2, fp, #1024	; 0x400
    6d80:	sub	r2, r2, #4
    6d84:	vldr	d7, [r2]
    6d88:	vmov.f64	d0, d7
    6d8c:	mov	r2, r3
    6d90:	mov	r1, #0
    6d94:	bl	0 <coda_mem_double_new>
    6d98:	str	r0, [fp, #-12]
    6d9c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6da0:	ldr	r0, [r3, #32]
    6da4:	mov	r3, #0
    6da8:	ldr	r2, [fp, #-12]
    6dac:	ldr	r1, [pc, #480]	; 6f94 <read_records+0x1084>
    6db0:	bl	0 <coda_mem_record_add_field>
    6db4:	sub	r2, fp, #1024	; 0x400
    6db8:	sub	r2, r2, #4
    6dbc:	sub	r3, fp, #1016	; 0x3f8
    6dc0:	add	r0, r3, #32
    6dc4:	mov	r3, #0
    6dc8:	mov	r1, #14
    6dcc:	bl	0 <coda_ascii_parse_double>
    6dd0:	mov	r3, r0
    6dd4:	cmp	r3, #0
    6dd8:	bge	6e04 <read_records+0xef4>
    6ddc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6de0:	ldr	r1, [r3, #48]	; 0x30
    6de4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6de8:	ldr	r3, [r3, #52]	; 0x34
    6dec:	add	r3, r3, #32
    6df0:	mov	r2, r3
    6df4:	ldr	r0, [pc, #516]	; 7000 <read_records+0x10f0>
    6df8:	bl	0 <coda_add_error_message>
    6dfc:	mvn	r3, #0
    6e00:	b	8a48 <read_records+0x2b38>
    6e04:	bl	0 <__aeabi_read_tp>
    6e08:	mov	r2, r0
    6e0c:	ldr	r3, [pc, #484]	; 6ff8 <read_records+0x10e8>
    6e10:	ldr	r3, [r2, r3]
    6e14:	add	r3, r3, #192	; 0xc0
    6e18:	ldr	r0, [r3]
    6e1c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6e20:	ldr	r3, [r3, #4]
    6e24:	sub	r2, fp, #1024	; 0x400
    6e28:	sub	r2, r2, #4
    6e2c:	vldr	d7, [r2]
    6e30:	vmov.f64	d0, d7
    6e34:	mov	r2, r3
    6e38:	mov	r1, #0
    6e3c:	bl	0 <coda_mem_double_new>
    6e40:	str	r0, [fp, #-12]
    6e44:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6e48:	ldr	r0, [r3, #32]
    6e4c:	mov	r3, #0
    6e50:	ldr	r2, [fp, #-12]
    6e54:	ldr	r1, [pc, #316]	; 6f98 <read_records+0x1088>
    6e58:	bl	0 <coda_mem_record_add_field>
    6e5c:	sub	r2, fp, #1024	; 0x400
    6e60:	sub	r2, r2, #4
    6e64:	sub	r3, fp, #1016	; 0x3f8
    6e68:	add	r0, r3, #46	; 0x2e
    6e6c:	mov	r3, #0
    6e70:	mov	r1, #14
    6e74:	bl	0 <coda_ascii_parse_double>
    6e78:	mov	r3, r0
    6e7c:	cmp	r3, #0
    6e80:	bge	6eac <read_records+0xf9c>
    6e84:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6e88:	ldr	r1, [r3, #48]	; 0x30
    6e8c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6e90:	ldr	r3, [r3, #52]	; 0x34
    6e94:	add	r3, r3, #46	; 0x2e
    6e98:	mov	r2, r3
    6e9c:	ldr	r0, [pc, #348]	; 7000 <read_records+0x10f0>
    6ea0:	bl	0 <coda_add_error_message>
    6ea4:	mvn	r3, #0
    6ea8:	b	8a48 <read_records+0x2b38>
    6eac:	bl	0 <__aeabi_read_tp>
    6eb0:	mov	r2, r0
    6eb4:	ldr	r3, [pc, #316]	; 6ff8 <read_records+0x10e8>
    6eb8:	ldr	r3, [r2, r3]
    6ebc:	add	r3, r3, #196	; 0xc4
    6ec0:	ldr	r0, [r3]
    6ec4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6ec8:	ldr	r3, [r3, #4]
    6ecc:	sub	r2, fp, #1024	; 0x400
    6ed0:	sub	r2, r2, #4
    6ed4:	vldr	d7, [r2]
    6ed8:	vmov.f64	d0, d7
    6edc:	mov	r2, r3
    6ee0:	mov	r1, #0
    6ee4:	bl	0 <coda_mem_double_new>
    6ee8:	str	r0, [fp, #-12]
    6eec:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    6ef0:	ldr	r0, [r3, #32]
    6ef4:	mov	r3, #0
    6ef8:	ldr	r2, [fp, #-12]
    6efc:	ldr	r1, [pc, #152]	; 6f9c <read_records+0x108c>
    6f00:	bl	0 <coda_mem_record_add_field>
    6f04:	ldr	r3, [fp, #-8]
    6f08:	cmp	r3, #62	; 0x3e
    6f0c:	ble	6f34 <read_records+0x1024>
    6f10:	sub	r3, fp, #1016	; 0x3f8
    6f14:	add	r3, r3, #61	; 0x3d
    6f18:	mov	r2, #2
    6f1c:	ldr	r1, [pc, #132]	; 6fa8 <read_records+0x1098>
    6f20:	mov	r0, r3
    6f24:	bl	0 <memcmp>
    6f28:	mov	r3, r0
    6f2c:	cmp	r3, #0
    6f30:	bne	7004 <read_records+0x10f4>
    6f34:	sub	r3, fp, #1024	; 0x400
    6f38:	sub	r3, r3, #4
    6f3c:	mov	r1, r3
    6f40:	mov	r2, #0
    6f44:	mov	r3, #0
    6f48:	strd	r2, [r1, #-8]
    6f4c:	b	7058 <read_records+0x1148>
    6f50:	.word	0x000007b8
    6f54:	.word	0x000007c0
    6f58:	.word	0x000008cc
    6f5c:	.word	0x000007b0
    6f60:	.word	0x00000910
    6f64:	.word	0x000006c4
    6f68:	.word	0x000006d0
    6f6c:	.word	0x000006e0
    6f70:	.word	0x000006f0
    6f74:	.word	0x00000320
    6f78:	.word	0x00000700
    6f7c:	.word	0x00000714
    6f80:	.word	0x00000724
    6f84:	.word	0x00000734
    6f88:	.word	0x0000096c
    6f8c:	.word	0x000009dc
    6f90:	.word	0x00000780
    6f94:	.word	0x0000078c
    6f98:	.word	0x00000798
    6f9c:	.word	0x000007a4
    6fa0:	.word	0x0000074c
    6fa4:	.word	0x00000758
    6fa8:	.word	0x00000964
    6fac:	.word	0x00000764
    6fb0:	.word	0x00000968
    6fb4:	.word	0x00000770
    6fb8:	.word	0x00000a30
    6fbc:	.word	0x00000a5c
    6fc0:	.word	0x00000670
    6fc4:	.word	0x00000678
    6fc8:	.word	0x00000680
    6fcc:	.word	0x00000acc
    6fd0:	.word	0x00000688
    6fd4:	.word	0x00000694
    6fd8:	.word	0x0000069c
    6fdc:	.word	0x000006a4
    6fe0:	.word	0x000006ac
    6fe4:	.word	0x000006b4
    6fe8:	.word	0x00000ad4
    6fec:	.word	0x000006bc
    6ff0:	.word	0x00000744
    6ff4:	.word	0x00000ae0
    6ff8:	.word	0x00000000
    6ffc:	.word	0x00000ac4
    7000:	.word	0x00000840
    7004:	sub	r2, fp, #1024	; 0x400
    7008:	sub	r2, r2, #4
    700c:	sub	r2, r2, #8
    7010:	sub	r3, fp, #1016	; 0x3f8
    7014:	add	r0, r3, #61	; 0x3d
    7018:	mov	r3, #0
    701c:	mov	r1, #2
    7020:	bl	0 <coda_ascii_parse_int64>
    7024:	mov	r3, r0
    7028:	cmp	r3, #0
    702c:	bge	7058 <read_records+0x1148>
    7030:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7034:	ldr	r1, [r3, #48]	; 0x30
    7038:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    703c:	ldr	r3, [r3, #52]	; 0x34
    7040:	add	r3, r3, #61	; 0x3d
    7044:	mov	r2, r3
    7048:	ldr	r0, [pc, #-80]	; 7000 <read_records+0x10f0>
    704c:	bl	0 <coda_add_error_message>
    7050:	mvn	r3, #0
    7054:	b	8a48 <read_records+0x2b38>
    7058:	bl	0 <__aeabi_read_tp>
    705c:	mov	r2, r0
    7060:	ldr	r3, [pc, #-112]	; 6ff8 <read_records+0x10e8>
    7064:	ldr	r3, [r2, r3]
    7068:	add	r3, r3, #200	; 0xc8
    706c:	ldr	r0, [r3]
    7070:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7074:	ldr	r1, [r3, #4]
    7078:	sub	r3, fp, #1024	; 0x400
    707c:	sub	r3, r3, #4
    7080:	ldrd	r2, [r3, #-8]
    7084:	sxtb	r3, r2
    7088:	mov	r2, r1
    708c:	mov	r1, #0
    7090:	bl	0 <coda_mem_int8_new>
    7094:	str	r0, [fp, #-12]
    7098:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    709c:	ldr	r0, [r3, #32]
    70a0:	mov	r3, #0
    70a4:	ldr	r2, [fp, #-12]
    70a8:	ldr	r1, [pc, #-272]	; 6fa0 <read_records+0x1090>
    70ac:	bl	0 <coda_mem_record_add_field>
    70b0:	ldr	r3, [fp, #-8]
    70b4:	cmp	r3, #65	; 0x41
    70b8:	ble	70e0 <read_records+0x11d0>
    70bc:	sub	r3, fp, #1016	; 0x3f8
    70c0:	add	r3, r3, #64	; 0x40
    70c4:	mov	r2, #2
    70c8:	ldr	r1, [pc, #-296]	; 6fa8 <read_records+0x1098>
    70cc:	mov	r0, r3
    70d0:	bl	0 <memcmp>
    70d4:	mov	r3, r0
    70d8:	cmp	r3, #0
    70dc:	bne	70fc <read_records+0x11ec>
    70e0:	sub	r3, fp, #1024	; 0x400
    70e4:	sub	r3, r3, #4
    70e8:	mov	r1, r3
    70ec:	mov	r2, #0
    70f0:	mov	r3, #0
    70f4:	strd	r2, [r1, #-8]
    70f8:	b	7150 <read_records+0x1240>
    70fc:	sub	r2, fp, #1024	; 0x400
    7100:	sub	r2, r2, #4
    7104:	sub	r2, r2, #8
    7108:	sub	r3, fp, #1016	; 0x3f8
    710c:	add	r0, r3, #64	; 0x40
    7110:	mov	r3, #0
    7114:	mov	r1, #2
    7118:	bl	0 <coda_ascii_parse_int64>
    711c:	mov	r3, r0
    7120:	cmp	r3, #0
    7124:	bge	7150 <read_records+0x1240>
    7128:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    712c:	ldr	r1, [r3, #48]	; 0x30
    7130:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7134:	ldr	r3, [r3, #52]	; 0x34
    7138:	add	r3, r3, #64	; 0x40
    713c:	mov	r2, r3
    7140:	ldr	r0, [pc, #-328]	; 7000 <read_records+0x10f0>
    7144:	bl	0 <coda_add_error_message>
    7148:	mvn	r3, #0
    714c:	b	8a48 <read_records+0x2b38>
    7150:	bl	0 <__aeabi_read_tp>
    7154:	mov	r2, r0
    7158:	ldr	r3, [pc, #-360]	; 6ff8 <read_records+0x10e8>
    715c:	ldr	r3, [r2, r3]
    7160:	add	r3, r3, #204	; 0xcc
    7164:	ldr	r0, [r3]
    7168:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    716c:	ldr	r1, [r3, #4]
    7170:	sub	r3, fp, #1024	; 0x400
    7174:	sub	r3, r3, #4
    7178:	ldrd	r2, [r3, #-8]
    717c:	sxtb	r3, r2
    7180:	mov	r2, r1
    7184:	mov	r1, #0
    7188:	bl	0 <coda_mem_int8_new>
    718c:	str	r0, [fp, #-12]
    7190:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7194:	ldr	r0, [r3, #32]
    7198:	mov	r3, #0
    719c:	ldr	r2, [fp, #-12]
    71a0:	ldr	r1, [pc, #-516]	; 6fa4 <read_records+0x1094>
    71a4:	bl	0 <coda_mem_record_add_field>
    71a8:	ldr	r3, [fp, #-8]
    71ac:	cmp	r3, #68	; 0x44
    71b0:	ble	71d8 <read_records+0x12c8>
    71b4:	sub	r3, fp, #1016	; 0x3f8
    71b8:	add	r3, r3, #67	; 0x43
    71bc:	mov	r2, #2
    71c0:	ldr	r1, [pc, #-544]	; 6fa8 <read_records+0x1098>
    71c4:	mov	r0, r3
    71c8:	bl	0 <memcmp>
    71cc:	mov	r3, r0
    71d0:	cmp	r3, #0
    71d4:	bne	71f4 <read_records+0x12e4>
    71d8:	sub	r3, fp, #1024	; 0x400
    71dc:	sub	r3, r3, #4
    71e0:	mov	r1, r3
    71e4:	mov	r2, #0
    71e8:	mov	r3, #0
    71ec:	strd	r2, [r1, #-8]
    71f0:	b	7248 <read_records+0x1338>
    71f4:	sub	r2, fp, #1024	; 0x400
    71f8:	sub	r2, r2, #4
    71fc:	sub	r2, r2, #8
    7200:	sub	r3, fp, #1016	; 0x3f8
    7204:	add	r0, r3, #67	; 0x43
    7208:	mov	r3, #0
    720c:	mov	r1, #2
    7210:	bl	0 <coda_ascii_parse_int64>
    7214:	mov	r3, r0
    7218:	cmp	r3, #0
    721c:	bge	7248 <read_records+0x1338>
    7220:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7224:	ldr	r1, [r3, #48]	; 0x30
    7228:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    722c:	ldr	r3, [r3, #52]	; 0x34
    7230:	add	r3, r3, #67	; 0x43
    7234:	mov	r2, r3
    7238:	ldr	r0, [pc, #-576]	; 7000 <read_records+0x10f0>
    723c:	bl	0 <coda_add_error_message>
    7240:	mvn	r3, #0
    7244:	b	8a48 <read_records+0x2b38>
    7248:	bl	0 <__aeabi_read_tp>
    724c:	mov	r2, r0
    7250:	ldr	r3, [pc, #-608]	; 6ff8 <read_records+0x10e8>
    7254:	ldr	r3, [r2, r3]
    7258:	add	r3, r3, #208	; 0xd0
    725c:	ldr	r0, [r3]
    7260:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7264:	ldr	r1, [r3, #4]
    7268:	sub	r3, fp, #1024	; 0x400
    726c:	sub	r3, r3, #4
    7270:	ldrd	r2, [r3, #-8]
    7274:	sxtb	r3, r2
    7278:	mov	r2, r1
    727c:	mov	r1, #0
    7280:	bl	0 <coda_mem_int8_new>
    7284:	str	r0, [fp, #-12]
    7288:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    728c:	ldr	r0, [r3, #32]
    7290:	mov	r3, #0
    7294:	ldr	r2, [fp, #-12]
    7298:	ldr	r1, [pc, #-756]	; 6fac <read_records+0x109c>
    729c:	bl	0 <coda_mem_record_add_field>
    72a0:	ldr	r3, [fp, #-8]
    72a4:	cmp	r3, #72	; 0x48
    72a8:	ble	72d0 <read_records+0x13c0>
    72ac:	sub	r3, fp, #1016	; 0x3f8
    72b0:	add	r3, r3, #70	; 0x46
    72b4:	mov	r2, #3
    72b8:	ldr	r1, [pc, #-784]	; 6fb0 <read_records+0x10a0>
    72bc:	mov	r0, r3
    72c0:	bl	0 <memcmp>
    72c4:	mov	r3, r0
    72c8:	cmp	r3, #0
    72cc:	bne	72ec <read_records+0x13dc>
    72d0:	sub	r3, fp, #1024	; 0x400
    72d4:	sub	r3, r3, #4
    72d8:	mov	r1, r3
    72dc:	mov	r2, #0
    72e0:	mov	r3, #0
    72e4:	strd	r2, [r1, #-8]
    72e8:	b	7340 <read_records+0x1430>
    72ec:	sub	r2, fp, #1024	; 0x400
    72f0:	sub	r2, r2, #4
    72f4:	sub	r2, r2, #8
    72f8:	sub	r3, fp, #1016	; 0x3f8
    72fc:	add	r0, r3, #70	; 0x46
    7300:	mov	r3, #0
    7304:	mov	r1, #3
    7308:	bl	0 <coda_ascii_parse_int64>
    730c:	mov	r3, r0
    7310:	cmp	r3, #0
    7314:	bge	7340 <read_records+0x1430>
    7318:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    731c:	ldr	r1, [r3, #48]	; 0x30
    7320:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7324:	ldr	r3, [r3, #52]	; 0x34
    7328:	add	r3, r3, #70	; 0x46
    732c:	mov	r2, r3
    7330:	ldr	r0, [pc, #-824]	; 7000 <read_records+0x10f0>
    7334:	bl	0 <coda_add_error_message>
    7338:	mvn	r3, #0
    733c:	b	8a48 <read_records+0x2b38>
    7340:	bl	0 <__aeabi_read_tp>
    7344:	mov	r2, r0
    7348:	ldr	r3, [pc, #-856]	; 6ff8 <read_records+0x10e8>
    734c:	ldr	r3, [r2, r3]
    7350:	add	r3, r3, #212	; 0xd4
    7354:	ldr	r0, [r3]
    7358:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    735c:	ldr	r1, [r3, #4]
    7360:	sub	r3, fp, #1024	; 0x400
    7364:	sub	r3, r3, #4
    7368:	ldrd	r2, [r3, #-8]
    736c:	sxth	r3, r2
    7370:	mov	r2, r1
    7374:	mov	r1, #0
    7378:	bl	0 <coda_mem_int16_new>
    737c:	str	r0, [fp, #-12]
    7380:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7384:	ldr	r0, [r3, #32]
    7388:	mov	r3, #0
    738c:	ldr	r2, [fp, #-12]
    7390:	ldr	r1, [pc, #-996]	; 6fb4 <read_records+0x10a4>
    7394:	bl	0 <coda_mem_record_add_field>
    7398:	b	73c0 <read_records+0x14b0>
    739c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73a0:	ldr	r2, [r3, #48]	; 0x30
    73a4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73a8:	ldr	r3, [r3, #52]	; 0x34
    73ac:	ldr	r1, [pc, #-1020]	; 6fb8 <read_records+0x10a8>
    73b0:	mvn	r0, #21
    73b4:	bl	0 <coda_set_error>
    73b8:	mvn	r3, #0
    73bc:	b	8a48 <read_records+0x2b38>
    73c0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73c4:	ldr	r3, [r3]
    73c8:	mov	r0, r3
    73cc:	bl	0 <ftell>
    73d0:	mov	r2, r0
    73d4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73d8:	str	r2, [r3, #52]	; 0x34
    73dc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73e0:	ldr	r3, [r3, #48]	; 0x30
    73e4:	add	r2, r3, #1
    73e8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73ec:	str	r2, [r3, #48]	; 0x30
    73f0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    73f4:	ldr	r3, [r3]
    73f8:	sub	r2, fp, #1016	; 0x3f8
    73fc:	mov	r1, r2
    7400:	mov	r0, r3
    7404:	bl	4920 <get_line>
    7408:	str	r0, [fp, #-8]
    740c:	ldr	r3, [fp, #-8]
    7410:	cmp	r3, #0
    7414:	bge	7420 <read_records+0x1510>
    7418:	mvn	r3, #0
    741c:	b	8a48 <read_records+0x2b38>
    7420:	ldrb	r3, [fp, #-1016]	; 0xfffffc08
    7424:	cmp	r3, #69	; 0x45
    7428:	bne	892c <read_records+0x2a1c>
    742c:	ldrb	r3, [fp, #-1015]	; 0xfffffc09
    7430:	cmp	r3, #80	; 0x50
    7434:	beq	7444 <read_records+0x1534>
    7438:	ldrb	r3, [fp, #-1015]	; 0xfffffc09
    743c:	cmp	r3, #86	; 0x56
    7440:	bne	892c <read_records+0x2a1c>
    7444:	ldrb	r3, [fp, #-1015]	; 0xfffffc09
    7448:	cmp	r3, #80	; 0x50
    744c:	bne	7e90 <read_records+0x1f80>
    7450:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7454:	ldr	r3, [r3, #24]
    7458:	cmp	r3, #0
    745c:	bne	7484 <read_records+0x1574>
    7460:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7464:	ldr	r2, [r3, #48]	; 0x30
    7468:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    746c:	ldr	r3, [r3, #52]	; 0x34
    7470:	ldr	r1, [pc, #-1212]	; 6fbc <read_records+0x10ac>
    7474:	mvn	r0, #21
    7478:	bl	0 <coda_set_error>
    747c:	mvn	r3, #0
    7480:	b	8a48 <read_records+0x2b38>
    7484:	bl	0 <__aeabi_read_tp>
    7488:	mov	r2, r0
    748c:	ldr	r3, [pc, #-1180]	; 6ff8 <read_records+0x10e8>
    7490:	ldr	r3, [r2, r3]
    7494:	add	r3, r3, #140	; 0x8c
    7498:	ldr	r3, [r3]
    749c:	mov	r1, #0
    74a0:	mov	r0, r3
    74a4:	bl	0 <coda_mem_record_new>
    74a8:	mov	r2, r0
    74ac:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    74b0:	str	r2, [r3, #36]	; 0x24
    74b4:	ldr	r3, [fp, #-8]
    74b8:	cmp	r3, #7
    74bc:	ble	74e4 <read_records+0x15d4>
    74c0:	sub	r3, fp, #1016	; 0x3f8
    74c4:	add	r3, r3, #4
    74c8:	mov	r2, #4
    74cc:	ldr	r1, [pc, #-1240]	; 6ffc <read_records+0x10ec>
    74d0:	mov	r0, r3
    74d4:	bl	0 <memcmp>
    74d8:	mov	r3, r0
    74dc:	cmp	r3, #0
    74e0:	bne	7500 <read_records+0x15f0>
    74e4:	sub	r3, fp, #1024	; 0x400
    74e8:	sub	r3, r3, #4
    74ec:	mov	r1, r3
    74f0:	mov	r2, #0
    74f4:	mov	r3, #0
    74f8:	strd	r2, [r1, #-8]
    74fc:	b	7554 <read_records+0x1644>
    7500:	sub	r2, fp, #1024	; 0x400
    7504:	sub	r2, r2, #4
    7508:	sub	r2, r2, #8
    750c:	sub	r3, fp, #1016	; 0x3f8
    7510:	add	r0, r3, #4
    7514:	mov	r3, #0
    7518:	mov	r1, #4
    751c:	bl	0 <coda_ascii_parse_int64>
    7520:	mov	r3, r0
    7524:	cmp	r3, #0
    7528:	bge	7554 <read_records+0x1644>
    752c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7530:	ldr	r1, [r3, #48]	; 0x30
    7534:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7538:	ldr	r3, [r3, #52]	; 0x34
    753c:	add	r3, r3, #4
    7540:	mov	r2, r3
    7544:	ldr	r0, [pc, #-1356]	; 7000 <read_records+0x10f0>
    7548:	bl	0 <coda_add_error_message>
    754c:	mvn	r3, #0
    7550:	b	8a48 <read_records+0x2b38>
    7554:	bl	0 <__aeabi_read_tp>
    7558:	mov	r2, r0
    755c:	ldr	r3, [pc, #-1388]	; 6ff8 <read_records+0x10e8>
    7560:	ldr	r3, [r2, r3]
    7564:	add	r3, r3, #144	; 0x90
    7568:	ldr	r0, [r3]
    756c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7570:	ldr	r1, [r3, #4]
    7574:	sub	r3, fp, #1024	; 0x400
    7578:	sub	r3, r3, #4
    757c:	ldrd	r2, [r3, #-8]
    7580:	sxth	r3, r2
    7584:	mov	r2, r1
    7588:	mov	r1, #0
    758c:	bl	0 <coda_mem_int16_new>
    7590:	str	r0, [fp, #-12]
    7594:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7598:	ldr	r0, [r3, #36]	; 0x24
    759c:	mov	r3, #0
    75a0:	ldr	r2, [fp, #-12]
    75a4:	ldr	r1, [pc, #-1516]	; 6fc0 <read_records+0x10b0>
    75a8:	bl	0 <coda_mem_record_add_field>
    75ac:	ldr	r3, [fp, #-8]
    75b0:	cmp	r3, #12
    75b4:	ble	75dc <read_records+0x16cc>
    75b8:	sub	r3, fp, #1016	; 0x3f8
    75bc:	add	r3, r3, #9
    75c0:	mov	r2, #4
    75c4:	ldr	r1, [pc, #-1488]	; 6ffc <read_records+0x10ec>
    75c8:	mov	r0, r3
    75cc:	bl	0 <memcmp>
    75d0:	mov	r3, r0
    75d4:	cmp	r3, #0
    75d8:	bne	75f8 <read_records+0x16e8>
    75dc:	sub	r3, fp, #1024	; 0x400
    75e0:	sub	r3, r3, #4
    75e4:	mov	r1, r3
    75e8:	mov	r2, #0
    75ec:	mov	r3, #0
    75f0:	strd	r2, [r1, #-8]
    75f4:	b	764c <read_records+0x173c>
    75f8:	sub	r2, fp, #1024	; 0x400
    75fc:	sub	r2, r2, #4
    7600:	sub	r2, r2, #8
    7604:	sub	r3, fp, #1016	; 0x3f8
    7608:	add	r0, r3, #9
    760c:	mov	r3, #0
    7610:	mov	r1, #4
    7614:	bl	0 <coda_ascii_parse_int64>
    7618:	mov	r3, r0
    761c:	cmp	r3, #0
    7620:	bge	764c <read_records+0x173c>
    7624:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7628:	ldr	r1, [r3, #48]	; 0x30
    762c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7630:	ldr	r3, [r3, #52]	; 0x34
    7634:	add	r3, r3, #9
    7638:	mov	r2, r3
    763c:	ldr	r0, [pc, #-1604]	; 7000 <read_records+0x10f0>
    7640:	bl	0 <coda_add_error_message>
    7644:	mvn	r3, #0
    7648:	b	8a48 <read_records+0x2b38>
    764c:	bl	0 <__aeabi_read_tp>
    7650:	mov	r2, r0
    7654:	ldr	r3, [pc, #-1636]	; 6ff8 <read_records+0x10e8>
    7658:	ldr	r3, [r2, r3]
    765c:	add	r3, r3, #148	; 0x94
    7660:	ldr	r0, [r3]
    7664:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7668:	ldr	r1, [r3, #4]
    766c:	sub	r3, fp, #1024	; 0x400
    7670:	sub	r3, r3, #4
    7674:	ldrd	r2, [r3, #-8]
    7678:	sxth	r3, r2
    767c:	mov	r2, r1
    7680:	mov	r1, #0
    7684:	bl	0 <coda_mem_int16_new>
    7688:	str	r0, [fp, #-12]
    768c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7690:	ldr	r0, [r3, #36]	; 0x24
    7694:	mov	r3, #0
    7698:	ldr	r2, [fp, #-12]
    769c:	ldr	r1, [pc, #-1760]	; 6fc4 <read_records+0x10b4>
    76a0:	bl	0 <coda_mem_record_add_field>
    76a4:	ldr	r3, [fp, #-8]
    76a8:	cmp	r3, #17
    76ac:	ble	76d4 <read_records+0x17c4>
    76b0:	sub	r3, fp, #1016	; 0x3f8
    76b4:	add	r3, r3, #14
    76b8:	mov	r2, #4
    76bc:	ldr	r1, [pc, #-1736]	; 6ffc <read_records+0x10ec>
    76c0:	mov	r0, r3
    76c4:	bl	0 <memcmp>
    76c8:	mov	r3, r0
    76cc:	cmp	r3, #0
    76d0:	bne	76f0 <read_records+0x17e0>
    76d4:	sub	r3, fp, #1024	; 0x400
    76d8:	sub	r3, r3, #4
    76dc:	mov	r1, r3
    76e0:	mov	r2, #0
    76e4:	mov	r3, #0
    76e8:	strd	r2, [r1, #-8]
    76ec:	b	7744 <read_records+0x1834>
    76f0:	sub	r2, fp, #1024	; 0x400
    76f4:	sub	r2, r2, #4
    76f8:	sub	r2, r2, #8
    76fc:	sub	r3, fp, #1016	; 0x3f8
    7700:	add	r0, r3, #14
    7704:	mov	r3, #0
    7708:	mov	r1, #4
    770c:	bl	0 <coda_ascii_parse_int64>
    7710:	mov	r3, r0
    7714:	cmp	r3, #0
    7718:	bge	7744 <read_records+0x1834>
    771c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7720:	ldr	r1, [r3, #48]	; 0x30
    7724:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7728:	ldr	r3, [r3, #52]	; 0x34
    772c:	add	r3, r3, #14
    7730:	mov	r2, r3
    7734:	ldr	r0, [pc, #-1852]	; 7000 <read_records+0x10f0>
    7738:	bl	0 <coda_add_error_message>
    773c:	mvn	r3, #0
    7740:	b	8a48 <read_records+0x2b38>
    7744:	bl	0 <__aeabi_read_tp>
    7748:	mov	r2, r0
    774c:	ldr	r3, [pc, #-1884]	; 6ff8 <read_records+0x10e8>
    7750:	ldr	r3, [r2, r3]
    7754:	add	r3, r3, #152	; 0x98
    7758:	ldr	r0, [r3]
    775c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7760:	ldr	r1, [r3, #4]
    7764:	sub	r3, fp, #1024	; 0x400
    7768:	sub	r3, r3, #4
    776c:	ldrd	r2, [r3, #-8]
    7770:	sxth	r3, r2
    7774:	mov	r2, r1
    7778:	mov	r1, #0
    777c:	bl	0 <coda_mem_int16_new>
    7780:	str	r0, [fp, #-12]
    7784:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7788:	ldr	r0, [r3, #36]	; 0x24
    778c:	mov	r3, #0
    7790:	ldr	r2, [fp, #-12]
    7794:	ldr	r1, [pc, #-2004]	; 6fc8 <read_records+0x10b8>
    7798:	bl	0 <coda_mem_record_add_field>
    779c:	ldr	r3, [fp, #-8]
    77a0:	cmp	r3, #25
    77a4:	ble	77cc <read_records+0x18bc>
    77a8:	sub	r3, fp, #1016	; 0x3f8
    77ac:	add	r3, r3, #19
    77b0:	mov	r2, #7
    77b4:	ldr	r1, [pc, #-2032]	; 6fcc <read_records+0x10bc>
    77b8:	mov	r0, r3
    77bc:	bl	0 <memcmp>
    77c0:	mov	r3, r0
    77c4:	cmp	r3, #0
    77c8:	bne	77e8 <read_records+0x18d8>
    77cc:	sub	r3, fp, #1024	; 0x400
    77d0:	sub	r3, r3, #4
    77d4:	mov	r1, r3
    77d8:	mov	r2, #0
    77dc:	mov	r3, #0
    77e0:	strd	r2, [r1, #-8]
    77e4:	b	783c <read_records+0x192c>
    77e8:	sub	r2, fp, #1024	; 0x400
    77ec:	sub	r2, r2, #4
    77f0:	sub	r2, r2, #8
    77f4:	sub	r3, fp, #1016	; 0x3f8
    77f8:	add	r0, r3, #19
    77fc:	mov	r3, #0
    7800:	mov	r1, #7
    7804:	bl	0 <coda_ascii_parse_int64>
    7808:	mov	r3, r0
    780c:	cmp	r3, #0
    7810:	bge	783c <read_records+0x192c>
    7814:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7818:	ldr	r1, [r3, #48]	; 0x30
    781c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7820:	ldr	r3, [r3, #52]	; 0x34
    7824:	add	r3, r3, #19
    7828:	mov	r2, r3
    782c:	ldr	r0, [pc, #-2100]	; 7000 <read_records+0x10f0>
    7830:	bl	0 <coda_add_error_message>
    7834:	mvn	r3, #0
    7838:	b	8a48 <read_records+0x2b38>
    783c:	bl	0 <__aeabi_read_tp>
    7840:	mov	r2, r0
    7844:	ldr	r3, [pc, #-2132]	; 6ff8 <read_records+0x10e8>
    7848:	ldr	r3, [r2, r3]
    784c:	add	r3, r3, #156	; 0x9c
    7850:	ldr	r0, [r3]
    7854:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7858:	ldr	r1, [r3, #4]
    785c:	sub	r3, fp, #1024	; 0x400
    7860:	sub	r3, r3, #4
    7864:	ldrd	r2, [r3, #-8]
    7868:	mov	r3, r2
    786c:	mov	r2, r1
    7870:	mov	r1, #0
    7874:	bl	0 <coda_mem_int32_new>
    7878:	str	r0, [fp, #-12]
    787c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7880:	ldr	r0, [r3, #36]	; 0x24
    7884:	mov	r3, #0
    7888:	ldr	r2, [fp, #-12]
    788c:	ldr	r1, [pc, #-2244]	; 6fd0 <read_records+0x10c0>
    7890:	bl	0 <coda_mem_record_add_field>
    7894:	ldr	r3, [fp, #-8]
    7898:	cmp	r3, #34	; 0x22
    789c:	ble	78c4 <read_records+0x19b4>
    78a0:	sub	r3, fp, #1016	; 0x3f8
    78a4:	add	r3, r3, #27
    78a8:	mov	r2, #8
    78ac:	ldr	r1, [pc, #-2252]	; 6fe8 <read_records+0x10d8>
    78b0:	mov	r0, r3
    78b4:	bl	0 <memcmp>
    78b8:	mov	r3, r0
    78bc:	cmp	r3, #0
    78c0:	bne	78e0 <read_records+0x19d0>
    78c4:	sub	r3, fp, #1024	; 0x400
    78c8:	sub	r3, r3, #4
    78cc:	mov	r1, r3
    78d0:	mov	r2, #0
    78d4:	mov	r3, #0
    78d8:	strd	r2, [r1, #-8]
    78dc:	b	7934 <read_records+0x1a24>
    78e0:	sub	r2, fp, #1024	; 0x400
    78e4:	sub	r2, r2, #4
    78e8:	sub	r2, r2, #8
    78ec:	sub	r3, fp, #1016	; 0x3f8
    78f0:	add	r0, r3, #27
    78f4:	mov	r3, #0
    78f8:	mov	r1, #8
    78fc:	bl	0 <coda_ascii_parse_int64>
    7900:	mov	r3, r0
    7904:	cmp	r3, #0
    7908:	bge	7934 <read_records+0x1a24>
    790c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7910:	ldr	r1, [r3, #48]	; 0x30
    7914:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7918:	ldr	r3, [r3, #52]	; 0x34
    791c:	add	r3, r3, #27
    7920:	mov	r2, r3
    7924:	ldr	r0, [pc, #-2348]	; 7000 <read_records+0x10f0>
    7928:	bl	0 <coda_add_error_message>
    792c:	mvn	r3, #0
    7930:	b	8a48 <read_records+0x2b38>
    7934:	bl	0 <__aeabi_read_tp>
    7938:	mov	r2, r0
    793c:	ldr	r3, [pc, #-2380]	; 6ff8 <read_records+0x10e8>
    7940:	ldr	r3, [r2, r3]
    7944:	add	r3, r3, #160	; 0xa0
    7948:	ldr	r0, [r3]
    794c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7950:	ldr	r1, [r3, #4]
    7954:	sub	r3, fp, #1024	; 0x400
    7958:	sub	r3, r3, #4
    795c:	ldrd	r2, [r3, #-8]
    7960:	mov	r3, r2
    7964:	mov	r2, r1
    7968:	mov	r1, #0
    796c:	bl	0 <coda_mem_int32_new>
    7970:	str	r0, [fp, #-12]
    7974:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7978:	ldr	r0, [r3, #36]	; 0x24
    797c:	mov	r3, #0
    7980:	ldr	r2, [fp, #-12]
    7984:	ldr	r1, [pc, #-2488]	; 6fd4 <read_records+0x10c4>
    7988:	bl	0 <coda_mem_record_add_field>
    798c:	ldr	r3, [fp, #-8]
    7990:	cmp	r3, #43	; 0x2b
    7994:	ble	79bc <read_records+0x1aac>
    7998:	sub	r3, fp, #1016	; 0x3f8
    799c:	add	r3, r3, #36	; 0x24
    79a0:	mov	r2, #8
    79a4:	ldr	r1, [pc, #-2500]	; 6fe8 <read_records+0x10d8>
    79a8:	mov	r0, r3
    79ac:	bl	0 <memcmp>
    79b0:	mov	r3, r0
    79b4:	cmp	r3, #0
    79b8:	bne	79d8 <read_records+0x1ac8>
    79bc:	sub	r3, fp, #1024	; 0x400
    79c0:	sub	r3, r3, #4
    79c4:	mov	r1, r3
    79c8:	mov	r2, #0
    79cc:	mov	r3, #0
    79d0:	strd	r2, [r1, #-8]
    79d4:	b	7a2c <read_records+0x1b1c>
    79d8:	sub	r2, fp, #1024	; 0x400
    79dc:	sub	r2, r2, #4
    79e0:	sub	r2, r2, #8
    79e4:	sub	r3, fp, #1016	; 0x3f8
    79e8:	add	r0, r3, #36	; 0x24
    79ec:	mov	r3, #0
    79f0:	mov	r1, #8
    79f4:	bl	0 <coda_ascii_parse_int64>
    79f8:	mov	r3, r0
    79fc:	cmp	r3, #0
    7a00:	bge	7a2c <read_records+0x1b1c>
    7a04:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7a08:	ldr	r1, [r3, #48]	; 0x30
    7a0c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7a10:	ldr	r3, [r3, #52]	; 0x34
    7a14:	add	r3, r3, #36	; 0x24
    7a18:	mov	r2, r3
    7a1c:	ldr	r0, [pc, #-2596]	; 7000 <read_records+0x10f0>
    7a20:	bl	0 <coda_add_error_message>
    7a24:	mvn	r3, #0
    7a28:	b	8a48 <read_records+0x2b38>
    7a2c:	bl	0 <__aeabi_read_tp>
    7a30:	mov	r2, r0
    7a34:	ldr	r3, [pc, #-2628]	; 6ff8 <read_records+0x10e8>
    7a38:	ldr	r3, [r2, r3]
    7a3c:	add	r3, r3, #164	; 0xa4
    7a40:	ldr	r0, [r3]
    7a44:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7a48:	ldr	r1, [r3, #4]
    7a4c:	sub	r3, fp, #1024	; 0x400
    7a50:	sub	r3, r3, #4
    7a54:	ldrd	r2, [r3, #-8]
    7a58:	mov	r3, r2
    7a5c:	mov	r2, r1
    7a60:	mov	r1, #0
    7a64:	bl	0 <coda_mem_int32_new>
    7a68:	str	r0, [fp, #-12]
    7a6c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7a70:	ldr	r0, [r3, #36]	; 0x24
    7a74:	mov	r3, #0
    7a78:	ldr	r2, [fp, #-12]
    7a7c:	ldr	r1, [pc, #-2732]	; 6fd8 <read_records+0x10c8>
    7a80:	bl	0 <coda_mem_record_add_field>
    7a84:	ldr	r3, [fp, #-8]
    7a88:	cmp	r3, #52	; 0x34
    7a8c:	ble	7ab4 <read_records+0x1ba4>
    7a90:	sub	r3, fp, #1016	; 0x3f8
    7a94:	add	r3, r3, #45	; 0x2d
    7a98:	mov	r2, #8
    7a9c:	ldr	r1, [pc, #-2748]	; 6fe8 <read_records+0x10d8>
    7aa0:	mov	r0, r3
    7aa4:	bl	0 <memcmp>
    7aa8:	mov	r3, r0
    7aac:	cmp	r3, #0
    7ab0:	bne	7ad0 <read_records+0x1bc0>
    7ab4:	sub	r3, fp, #1024	; 0x400
    7ab8:	sub	r3, r3, #4
    7abc:	mov	r1, r3
    7ac0:	mov	r2, #0
    7ac4:	mov	r3, #0
    7ac8:	strd	r2, [r1, #-8]
    7acc:	b	7b24 <read_records+0x1c14>
    7ad0:	sub	r2, fp, #1024	; 0x400
    7ad4:	sub	r2, r2, #4
    7ad8:	sub	r2, r2, #8
    7adc:	sub	r3, fp, #1016	; 0x3f8
    7ae0:	add	r0, r3, #45	; 0x2d
    7ae4:	mov	r3, #0
    7ae8:	mov	r1, #8
    7aec:	bl	0 <coda_ascii_parse_int64>
    7af0:	mov	r3, r0
    7af4:	cmp	r3, #0
    7af8:	bge	7b24 <read_records+0x1c14>
    7afc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7b00:	ldr	r1, [r3, #48]	; 0x30
    7b04:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7b08:	ldr	r3, [r3, #52]	; 0x34
    7b0c:	add	r3, r3, #45	; 0x2d
    7b10:	mov	r2, r3
    7b14:	ldr	r0, [pc, #-2844]	; 7000 <read_records+0x10f0>
    7b18:	bl	0 <coda_add_error_message>
    7b1c:	mvn	r3, #0
    7b20:	b	8a48 <read_records+0x2b38>
    7b24:	bl	0 <__aeabi_read_tp>
    7b28:	mov	r2, r0
    7b2c:	ldr	r3, [pc, #-2876]	; 6ff8 <read_records+0x10e8>
    7b30:	ldr	r3, [r2, r3]
    7b34:	add	r3, r3, #168	; 0xa8
    7b38:	ldr	r0, [r3]
    7b3c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7b40:	ldr	r1, [r3, #4]
    7b44:	sub	r3, fp, #1024	; 0x400
    7b48:	sub	r3, r3, #4
    7b4c:	ldrd	r2, [r3, #-8]
    7b50:	mov	r3, r2
    7b54:	mov	r2, r1
    7b58:	mov	r1, #0
    7b5c:	bl	0 <coda_mem_int32_new>
    7b60:	str	r0, [fp, #-12]
    7b64:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7b68:	ldr	r0, [r3, #36]	; 0x24
    7b6c:	mov	r3, #0
    7b70:	ldr	r2, [fp, #-12]
    7b74:	ldr	r1, [pc, #-2976]	; 6fdc <read_records+0x10cc>
    7b78:	bl	0 <coda_mem_record_add_field>
    7b7c:	ldr	r3, [fp, #-8]
    7b80:	cmp	r3, #61	; 0x3d
    7b84:	ble	7bac <read_records+0x1c9c>
    7b88:	sub	r3, fp, #1016	; 0x3f8
    7b8c:	add	r3, r3, #54	; 0x36
    7b90:	mov	r2, #8
    7b94:	ldr	r1, [pc, #-2996]	; 6fe8 <read_records+0x10d8>
    7b98:	mov	r0, r3
    7b9c:	bl	0 <memcmp>
    7ba0:	mov	r3, r0
    7ba4:	cmp	r3, #0
    7ba8:	bne	7bc8 <read_records+0x1cb8>
    7bac:	sub	r3, fp, #1024	; 0x400
    7bb0:	sub	r3, r3, #4
    7bb4:	mov	r1, r3
    7bb8:	mov	r2, #0
    7bbc:	mov	r3, #0
    7bc0:	strd	r2, [r1, #-8]
    7bc4:	b	7c1c <read_records+0x1d0c>
    7bc8:	sub	r2, fp, #1024	; 0x400
    7bcc:	sub	r2, r2, #4
    7bd0:	sub	r2, r2, #8
    7bd4:	sub	r3, fp, #1016	; 0x3f8
    7bd8:	add	r0, r3, #54	; 0x36
    7bdc:	mov	r3, #0
    7be0:	mov	r1, #8
    7be4:	bl	0 <coda_ascii_parse_int64>
    7be8:	mov	r3, r0
    7bec:	cmp	r3, #0
    7bf0:	bge	7c1c <read_records+0x1d0c>
    7bf4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7bf8:	ldr	r1, [r3, #48]	; 0x30
    7bfc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7c00:	ldr	r3, [r3, #52]	; 0x34
    7c04:	add	r3, r3, #54	; 0x36
    7c08:	mov	r2, r3
    7c0c:	ldr	r0, [pc, #-3092]	; 7000 <read_records+0x10f0>
    7c10:	bl	0 <coda_add_error_message>
    7c14:	mvn	r3, #0
    7c18:	b	8a48 <read_records+0x2b38>
    7c1c:	bl	0 <__aeabi_read_tp>
    7c20:	mov	r2, r0
    7c24:	ldr	r3, [pc, #-3124]	; 6ff8 <read_records+0x10e8>
    7c28:	ldr	r3, [r2, r3]
    7c2c:	add	r3, r3, #172	; 0xac
    7c30:	ldr	r0, [r3]
    7c34:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7c38:	ldr	r1, [r3, #4]
    7c3c:	sub	r3, fp, #1024	; 0x400
    7c40:	sub	r3, r3, #4
    7c44:	ldrd	r2, [r3, #-8]
    7c48:	mov	r3, r2
    7c4c:	mov	r2, r1
    7c50:	mov	r1, #0
    7c54:	bl	0 <coda_mem_int32_new>
    7c58:	str	r0, [fp, #-12]
    7c5c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7c60:	ldr	r0, [r3, #36]	; 0x24
    7c64:	mov	r3, #0
    7c68:	ldr	r2, [fp, #-12]
    7c6c:	ldr	r1, [pc, #-3220]	; 6fe0 <read_records+0x10d0>
    7c70:	bl	0 <coda_mem_record_add_field>
    7c74:	ldr	r3, [fp, #-8]
    7c78:	cmp	r3, #70	; 0x46
    7c7c:	ble	7ca4 <read_records+0x1d94>
    7c80:	sub	r3, fp, #1016	; 0x3f8
    7c84:	add	r3, r3, #63	; 0x3f
    7c88:	mov	r2, #8
    7c8c:	ldr	r1, [pc, #-3244]	; 6fe8 <read_records+0x10d8>
    7c90:	mov	r0, r3
    7c94:	bl	0 <memcmp>
    7c98:	mov	r3, r0
    7c9c:	cmp	r3, #0
    7ca0:	bne	7cc0 <read_records+0x1db0>
    7ca4:	sub	r3, fp, #1024	; 0x400
    7ca8:	sub	r3, r3, #4
    7cac:	mov	r1, r3
    7cb0:	mov	r2, #0
    7cb4:	mov	r3, #0
    7cb8:	strd	r2, [r1, #-8]
    7cbc:	b	7d14 <read_records+0x1e04>
    7cc0:	sub	r2, fp, #1024	; 0x400
    7cc4:	sub	r2, r2, #4
    7cc8:	sub	r2, r2, #8
    7ccc:	sub	r3, fp, #1016	; 0x3f8
    7cd0:	add	r0, r3, #63	; 0x3f
    7cd4:	mov	r3, #0
    7cd8:	mov	r1, #8
    7cdc:	bl	0 <coda_ascii_parse_int64>
    7ce0:	mov	r3, r0
    7ce4:	cmp	r3, #0
    7ce8:	bge	7d14 <read_records+0x1e04>
    7cec:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7cf0:	ldr	r1, [r3, #48]	; 0x30
    7cf4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7cf8:	ldr	r3, [r3, #52]	; 0x34
    7cfc:	add	r3, r3, #63	; 0x3f
    7d00:	mov	r2, r3
    7d04:	ldr	r0, [pc, #-3340]	; 7000 <read_records+0x10f0>
    7d08:	bl	0 <coda_add_error_message>
    7d0c:	mvn	r3, #0
    7d10:	b	8a48 <read_records+0x2b38>
    7d14:	bl	0 <__aeabi_read_tp>
    7d18:	mov	r2, r0
    7d1c:	ldr	r3, [pc, #-3372]	; 6ff8 <read_records+0x10e8>
    7d20:	ldr	r3, [r2, r3]
    7d24:	add	r3, r3, #176	; 0xb0
    7d28:	ldr	r0, [r3]
    7d2c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7d30:	ldr	r1, [r3, #4]
    7d34:	sub	r3, fp, #1024	; 0x400
    7d38:	sub	r3, r3, #4
    7d3c:	ldrd	r2, [r3, #-8]
    7d40:	mov	r3, r2
    7d44:	mov	r2, r1
    7d48:	mov	r1, #0
    7d4c:	bl	0 <coda_mem_int32_new>
    7d50:	str	r0, [fp, #-12]
    7d54:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7d58:	ldr	r0, [r3, #36]	; 0x24
    7d5c:	mov	r3, #0
    7d60:	ldr	r2, [fp, #-12]
    7d64:	ldr	r1, [pc, #-3464]	; 6fe4 <read_records+0x10d4>
    7d68:	bl	0 <coda_mem_record_add_field>
    7d6c:	ldr	r3, [fp, #-8]
    7d70:	cmp	r3, #79	; 0x4f
    7d74:	ble	7d9c <read_records+0x1e8c>
    7d78:	sub	r3, fp, #1016	; 0x3f8
    7d7c:	add	r3, r3, #72	; 0x48
    7d80:	mov	r2, #8
    7d84:	ldr	r1, [pc, #-3492]	; 6fe8 <read_records+0x10d8>
    7d88:	mov	r0, r3
    7d8c:	bl	0 <memcmp>
    7d90:	mov	r3, r0
    7d94:	cmp	r3, #0
    7d98:	bne	7db8 <read_records+0x1ea8>
    7d9c:	sub	r3, fp, #1024	; 0x400
    7da0:	sub	r3, r3, #4
    7da4:	mov	r1, r3
    7da8:	mov	r2, #0
    7dac:	mov	r3, #0
    7db0:	strd	r2, [r1, #-8]
    7db4:	b	7e0c <read_records+0x1efc>
    7db8:	sub	r2, fp, #1024	; 0x400
    7dbc:	sub	r2, r2, #4
    7dc0:	sub	r2, r2, #8
    7dc4:	sub	r3, fp, #1016	; 0x3f8
    7dc8:	add	r0, r3, #72	; 0x48
    7dcc:	mov	r3, #0
    7dd0:	mov	r1, #8
    7dd4:	bl	0 <coda_ascii_parse_int64>
    7dd8:	mov	r3, r0
    7ddc:	cmp	r3, #0
    7de0:	bge	7e0c <read_records+0x1efc>
    7de4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7de8:	ldr	r1, [r3, #48]	; 0x30
    7dec:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7df0:	ldr	r3, [r3, #52]	; 0x34
    7df4:	add	r3, r3, #72	; 0x48
    7df8:	mov	r2, r3
    7dfc:	ldr	r0, [pc, #-3588]	; 7000 <read_records+0x10f0>
    7e00:	bl	0 <coda_add_error_message>
    7e04:	mvn	r3, #0
    7e08:	b	8a48 <read_records+0x2b38>
    7e0c:	bl	0 <__aeabi_read_tp>
    7e10:	mov	r2, r0
    7e14:	ldr	r3, [pc, #-3620]	; 6ff8 <read_records+0x10e8>
    7e18:	ldr	r3, [r2, r3]
    7e1c:	add	r3, r3, #180	; 0xb4
    7e20:	ldr	r0, [r3]
    7e24:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7e28:	ldr	r1, [r3, #4]
    7e2c:	sub	r3, fp, #1024	; 0x400
    7e30:	sub	r3, r3, #4
    7e34:	ldrd	r2, [r3, #-8]
    7e38:	mov	r3, r2
    7e3c:	mov	r2, r1
    7e40:	mov	r1, #0
    7e44:	bl	0 <coda_mem_int32_new>
    7e48:	str	r0, [fp, #-12]
    7e4c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7e50:	ldr	r0, [r3, #36]	; 0x24
    7e54:	mov	r3, #0
    7e58:	ldr	r2, [fp, #-12]
    7e5c:	ldr	r1, [pc, #-3704]	; 6fec <read_records+0x10dc>
    7e60:	bl	0 <coda_mem_record_add_field>
    7e64:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7e68:	ldr	r0, [r3, #24]
    7e6c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7e70:	ldr	r2, [r3, #36]	; 0x24
    7e74:	mov	r3, #0
    7e78:	ldr	r1, [pc, #-3728]	; 6ff0 <read_records+0x10e0>
    7e7c:	bl	0 <coda_mem_record_add_field>
    7e80:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7e84:	mov	r2, #0
    7e88:	str	r2, [r3, #36]	; 0x24
    7e8c:	b	88cc <read_records+0x29bc>
    7e90:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7e94:	ldr	r3, [r3, #32]
    7e98:	cmp	r3, #0
    7e9c:	bne	7ec4 <read_records+0x1fb4>
    7ea0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7ea4:	ldr	r2, [r3, #48]	; 0x30
    7ea8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7eac:	ldr	r3, [r3, #52]	; 0x34
    7eb0:	ldr	r1, [pc, #-3780]	; 6ff4 <read_records+0x10e4>
    7eb4:	mvn	r0, #21
    7eb8:	bl	0 <coda_set_error>
    7ebc:	mvn	r3, #0
    7ec0:	b	8a48 <read_records+0x2b38>
    7ec4:	bl	0 <__aeabi_read_tp>
    7ec8:	mov	r2, r0
    7ecc:	ldr	r3, [pc, #-3804]	; 6ff8 <read_records+0x10e8>
    7ed0:	ldr	r3, [r2, r3]
    7ed4:	add	r3, r3, #216	; 0xd8
    7ed8:	ldr	r3, [r3]
    7edc:	mov	r1, #0
    7ee0:	mov	r0, r3
    7ee4:	bl	0 <coda_mem_record_new>
    7ee8:	mov	r2, r0
    7eec:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7ef0:	str	r2, [r3, #36]	; 0x24
    7ef4:	ldr	r3, [fp, #-8]
    7ef8:	cmp	r3, #7
    7efc:	ble	7f24 <read_records+0x2014>
    7f00:	sub	r3, fp, #1016	; 0x3f8
    7f04:	add	r3, r3, #4
    7f08:	mov	r2, #4
    7f0c:	ldr	r1, [pc, #-3864]	; 6ffc <read_records+0x10ec>
    7f10:	mov	r0, r3
    7f14:	bl	0 <memcmp>
    7f18:	mov	r3, r0
    7f1c:	cmp	r3, #0
    7f20:	bne	7f40 <read_records+0x2030>
    7f24:	sub	r3, fp, #1024	; 0x400
    7f28:	sub	r3, r3, #4
    7f2c:	mov	r1, r3
    7f30:	mov	r2, #0
    7f34:	mov	r3, #0
    7f38:	strd	r2, [r1, #-8]
    7f3c:	b	7f94 <read_records+0x2084>
    7f40:	sub	r2, fp, #1024	; 0x400
    7f44:	sub	r2, r2, #4
    7f48:	sub	r2, r2, #8
    7f4c:	sub	r3, fp, #1016	; 0x3f8
    7f50:	add	r0, r3, #4
    7f54:	mov	r3, #0
    7f58:	mov	r1, #4
    7f5c:	bl	0 <coda_ascii_parse_int64>
    7f60:	mov	r3, r0
    7f64:	cmp	r3, #0
    7f68:	bge	7f94 <read_records+0x2084>
    7f6c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7f70:	ldr	r1, [r3, #48]	; 0x30
    7f74:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7f78:	ldr	r3, [r3, #52]	; 0x34
    7f7c:	add	r3, r3, #4
    7f80:	mov	r2, r3
    7f84:	ldr	r0, [pc, #-3980]	; 7000 <read_records+0x10f0>
    7f88:	bl	0 <coda_add_error_message>
    7f8c:	mvn	r3, #0
    7f90:	b	8a48 <read_records+0x2b38>
    7f94:	bl	0 <__aeabi_read_tp>
    7f98:	mov	r2, r0
    7f9c:	ldr	r3, [pc, #2736]	; 8a54 <read_records+0x2b44>
    7fa0:	ldr	r3, [r2, r3]
    7fa4:	add	r3, r3, #220	; 0xdc
    7fa8:	ldr	r0, [r3]
    7fac:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7fb0:	ldr	r1, [r3, #4]
    7fb4:	sub	r3, fp, #1024	; 0x400
    7fb8:	sub	r3, r3, #4
    7fbc:	ldrd	r2, [r3, #-8]
    7fc0:	sxth	r3, r2
    7fc4:	mov	r2, r1
    7fc8:	mov	r1, #0
    7fcc:	bl	0 <coda_mem_int16_new>
    7fd0:	str	r0, [fp, #-12]
    7fd4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    7fd8:	ldr	r0, [r3, #36]	; 0x24
    7fdc:	mov	r3, #0
    7fe0:	ldr	r2, [fp, #-12]
    7fe4:	ldr	r1, [pc, #2668]	; 8a58 <read_records+0x2b48>
    7fe8:	bl	0 <coda_mem_record_add_field>
    7fec:	ldr	r3, [fp, #-8]
    7ff0:	cmp	r3, #12
    7ff4:	ble	801c <read_records+0x210c>
    7ff8:	sub	r3, fp, #1016	; 0x3f8
    7ffc:	add	r3, r3, #9
    8000:	mov	r2, #4
    8004:	ldr	r1, [pc, #2640]	; 8a5c <read_records+0x2b4c>
    8008:	mov	r0, r3
    800c:	bl	0 <memcmp>
    8010:	mov	r3, r0
    8014:	cmp	r3, #0
    8018:	bne	8038 <read_records+0x2128>
    801c:	sub	r3, fp, #1024	; 0x400
    8020:	sub	r3, r3, #4
    8024:	mov	r1, r3
    8028:	mov	r2, #0
    802c:	mov	r3, #0
    8030:	strd	r2, [r1, #-8]
    8034:	b	808c <read_records+0x217c>
    8038:	sub	r2, fp, #1024	; 0x400
    803c:	sub	r2, r2, #4
    8040:	sub	r2, r2, #8
    8044:	sub	r3, fp, #1016	; 0x3f8
    8048:	add	r0, r3, #9
    804c:	mov	r3, #0
    8050:	mov	r1, #4
    8054:	bl	0 <coda_ascii_parse_int64>
    8058:	mov	r3, r0
    805c:	cmp	r3, #0
    8060:	bge	808c <read_records+0x217c>
    8064:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8068:	ldr	r1, [r3, #48]	; 0x30
    806c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8070:	ldr	r3, [r3, #52]	; 0x34
    8074:	add	r3, r3, #9
    8078:	mov	r2, r3
    807c:	ldr	r0, [pc, #2524]	; 8a60 <read_records+0x2b50>
    8080:	bl	0 <coda_add_error_message>
    8084:	mvn	r3, #0
    8088:	b	8a48 <read_records+0x2b38>
    808c:	bl	0 <__aeabi_read_tp>
    8090:	mov	r2, r0
    8094:	ldr	r3, [pc, #2488]	; 8a54 <read_records+0x2b44>
    8098:	ldr	r3, [r2, r3]
    809c:	add	r3, r3, #224	; 0xe0
    80a0:	ldr	r0, [r3]
    80a4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    80a8:	ldr	r1, [r3, #4]
    80ac:	sub	r3, fp, #1024	; 0x400
    80b0:	sub	r3, r3, #4
    80b4:	ldrd	r2, [r3, #-8]
    80b8:	sxth	r3, r2
    80bc:	mov	r2, r1
    80c0:	mov	r1, #0
    80c4:	bl	0 <coda_mem_int16_new>
    80c8:	str	r0, [fp, #-12]
    80cc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    80d0:	ldr	r0, [r3, #36]	; 0x24
    80d4:	mov	r3, #0
    80d8:	ldr	r2, [fp, #-12]
    80dc:	ldr	r1, [pc, #2432]	; 8a64 <read_records+0x2b54>
    80e0:	bl	0 <coda_mem_record_add_field>
    80e4:	ldr	r3, [fp, #-8]
    80e8:	cmp	r3, #17
    80ec:	ble	8114 <read_records+0x2204>
    80f0:	sub	r3, fp, #1016	; 0x3f8
    80f4:	add	r3, r3, #14
    80f8:	mov	r2, #4
    80fc:	ldr	r1, [pc, #2392]	; 8a5c <read_records+0x2b4c>
    8100:	mov	r0, r3
    8104:	bl	0 <memcmp>
    8108:	mov	r3, r0
    810c:	cmp	r3, #0
    8110:	bne	8130 <read_records+0x2220>
    8114:	sub	r3, fp, #1024	; 0x400
    8118:	sub	r3, r3, #4
    811c:	mov	r1, r3
    8120:	mov	r2, #0
    8124:	mov	r3, #0
    8128:	strd	r2, [r1, #-8]
    812c:	b	8184 <read_records+0x2274>
    8130:	sub	r2, fp, #1024	; 0x400
    8134:	sub	r2, r2, #4
    8138:	sub	r2, r2, #8
    813c:	sub	r3, fp, #1016	; 0x3f8
    8140:	add	r0, r3, #14
    8144:	mov	r3, #0
    8148:	mov	r1, #4
    814c:	bl	0 <coda_ascii_parse_int64>
    8150:	mov	r3, r0
    8154:	cmp	r3, #0
    8158:	bge	8184 <read_records+0x2274>
    815c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8160:	ldr	r1, [r3, #48]	; 0x30
    8164:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8168:	ldr	r3, [r3, #52]	; 0x34
    816c:	add	r3, r3, #14
    8170:	mov	r2, r3
    8174:	ldr	r0, [pc, #2276]	; 8a60 <read_records+0x2b50>
    8178:	bl	0 <coda_add_error_message>
    817c:	mvn	r3, #0
    8180:	b	8a48 <read_records+0x2b38>
    8184:	bl	0 <__aeabi_read_tp>
    8188:	mov	r2, r0
    818c:	ldr	r3, [pc, #2240]	; 8a54 <read_records+0x2b44>
    8190:	ldr	r3, [r2, r3]
    8194:	add	r3, r3, #228	; 0xe4
    8198:	ldr	r0, [r3]
    819c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    81a0:	ldr	r1, [r3, #4]
    81a4:	sub	r3, fp, #1024	; 0x400
    81a8:	sub	r3, r3, #4
    81ac:	ldrd	r2, [r3, #-8]
    81b0:	sxth	r3, r2
    81b4:	mov	r2, r1
    81b8:	mov	r1, #0
    81bc:	bl	0 <coda_mem_int16_new>
    81c0:	str	r0, [fp, #-12]
    81c4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    81c8:	ldr	r0, [r3, #36]	; 0x24
    81cc:	mov	r3, #0
    81d0:	ldr	r2, [fp, #-12]
    81d4:	ldr	r1, [pc, #2188]	; 8a68 <read_records+0x2b58>
    81d8:	bl	0 <coda_mem_record_add_field>
    81dc:	ldr	r3, [fp, #-8]
    81e0:	cmp	r3, #27
    81e4:	ble	820c <read_records+0x22fc>
    81e8:	sub	r3, fp, #1016	; 0x3f8
    81ec:	add	r3, r3, #19
    81f0:	mov	r2, #7
    81f4:	ldr	r1, [pc, #2160]	; 8a6c <read_records+0x2b5c>
    81f8:	mov	r0, r3
    81fc:	bl	0 <memcmp>
    8200:	mov	r3, r0
    8204:	cmp	r3, #0
    8208:	bne	8228 <read_records+0x2318>
    820c:	sub	r3, fp, #1024	; 0x400
    8210:	sub	r3, r3, #4
    8214:	mov	r1, r3
    8218:	mov	r2, #0
    821c:	mov	r3, #0
    8220:	strd	r2, [r1, #-8]
    8224:	b	827c <read_records+0x236c>
    8228:	sub	r2, fp, #1024	; 0x400
    822c:	sub	r2, r2, #4
    8230:	sub	r2, r2, #8
    8234:	sub	r3, fp, #1016	; 0x3f8
    8238:	add	r0, r3, #19
    823c:	mov	r3, #0
    8240:	mov	r1, #7
    8244:	bl	0 <coda_ascii_parse_int64>
    8248:	mov	r3, r0
    824c:	cmp	r3, #0
    8250:	bge	827c <read_records+0x236c>
    8254:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8258:	ldr	r1, [r3, #48]	; 0x30
    825c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8260:	ldr	r3, [r3, #52]	; 0x34
    8264:	add	r3, r3, #19
    8268:	mov	r2, r3
    826c:	ldr	r0, [pc, #2028]	; 8a60 <read_records+0x2b50>
    8270:	bl	0 <coda_add_error_message>
    8274:	mvn	r3, #0
    8278:	b	8a48 <read_records+0x2b38>
    827c:	bl	0 <__aeabi_read_tp>
    8280:	mov	r2, r0
    8284:	ldr	r3, [pc, #1992]	; 8a54 <read_records+0x2b44>
    8288:	ldr	r3, [r2, r3]
    828c:	add	r3, r3, #232	; 0xe8
    8290:	ldr	r0, [r3]
    8294:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8298:	ldr	r1, [r3, #4]
    829c:	sub	r3, fp, #1024	; 0x400
    82a0:	sub	r3, r3, #4
    82a4:	ldrd	r2, [r3, #-8]
    82a8:	sxth	r3, r2
    82ac:	mov	r2, r1
    82b0:	mov	r1, #0
    82b4:	bl	0 <coda_mem_int16_new>
    82b8:	str	r0, [fp, #-12]
    82bc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    82c0:	ldr	r0, [r3, #36]	; 0x24
    82c4:	mov	r3, #0
    82c8:	ldr	r2, [fp, #-12]
    82cc:	ldr	r1, [pc, #1948]	; 8a70 <read_records+0x2b60>
    82d0:	bl	0 <coda_mem_record_add_field>
    82d4:	ldr	r3, [fp, #-8]
    82d8:	cmp	r3, #34	; 0x22
    82dc:	ble	8304 <read_records+0x23f4>
    82e0:	sub	r3, fp, #1016	; 0x3f8
    82e4:	add	r3, r3, #27
    82e8:	mov	r2, #8
    82ec:	ldr	r1, [pc, #1920]	; 8a74 <read_records+0x2b64>
    82f0:	mov	r0, r3
    82f4:	bl	0 <memcmp>
    82f8:	mov	r3, r0
    82fc:	cmp	r3, #0
    8300:	bne	8320 <read_records+0x2410>
    8304:	sub	r3, fp, #1024	; 0x400
    8308:	sub	r3, r3, #4
    830c:	mov	r1, r3
    8310:	mov	r2, #0
    8314:	mov	r3, #0
    8318:	strd	r2, [r1, #-8]
    831c:	b	8374 <read_records+0x2464>
    8320:	sub	r2, fp, #1024	; 0x400
    8324:	sub	r2, r2, #4
    8328:	sub	r2, r2, #8
    832c:	sub	r3, fp, #1016	; 0x3f8
    8330:	add	r0, r3, #27
    8334:	mov	r3, #0
    8338:	mov	r1, #8
    833c:	bl	0 <coda_ascii_parse_int64>
    8340:	mov	r3, r0
    8344:	cmp	r3, #0
    8348:	bge	8374 <read_records+0x2464>
    834c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8350:	ldr	r1, [r3, #48]	; 0x30
    8354:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8358:	ldr	r3, [r3, #52]	; 0x34
    835c:	add	r3, r3, #27
    8360:	mov	r2, r3
    8364:	ldr	r0, [pc, #1780]	; 8a60 <read_records+0x2b50>
    8368:	bl	0 <coda_add_error_message>
    836c:	mvn	r3, #0
    8370:	b	8a48 <read_records+0x2b38>
    8374:	bl	0 <__aeabi_read_tp>
    8378:	mov	r2, r0
    837c:	ldr	r3, [pc, #1744]	; 8a54 <read_records+0x2b44>
    8380:	ldr	r3, [r2, r3]
    8384:	add	r3, r3, #236	; 0xec
    8388:	ldr	r0, [r3]
    838c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8390:	ldr	r1, [r3, #4]
    8394:	sub	r3, fp, #1024	; 0x400
    8398:	sub	r3, r3, #4
    839c:	ldrd	r2, [r3, #-8]
    83a0:	mov	r3, r2
    83a4:	mov	r2, r1
    83a8:	mov	r1, #0
    83ac:	bl	0 <coda_mem_int32_new>
    83b0:	str	r0, [fp, #-12]
    83b4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    83b8:	ldr	r0, [r3, #36]	; 0x24
    83bc:	mov	r3, #0
    83c0:	ldr	r2, [fp, #-12]
    83c4:	ldr	r1, [pc, #1708]	; 8a78 <read_records+0x2b68>
    83c8:	bl	0 <coda_mem_record_add_field>
    83cc:	ldr	r3, [fp, #-8]
    83d0:	cmp	r3, #43	; 0x2b
    83d4:	ble	83fc <read_records+0x24ec>
    83d8:	sub	r3, fp, #1016	; 0x3f8
    83dc:	add	r3, r3, #36	; 0x24
    83e0:	mov	r2, #8
    83e4:	ldr	r1, [pc, #1672]	; 8a74 <read_records+0x2b64>
    83e8:	mov	r0, r3
    83ec:	bl	0 <memcmp>
    83f0:	mov	r3, r0
    83f4:	cmp	r3, #0
    83f8:	bne	8418 <read_records+0x2508>
    83fc:	sub	r3, fp, #1024	; 0x400
    8400:	sub	r3, r3, #4
    8404:	mov	r1, r3
    8408:	mov	r2, #0
    840c:	mov	r3, #0
    8410:	strd	r2, [r1, #-8]
    8414:	b	846c <read_records+0x255c>
    8418:	sub	r2, fp, #1024	; 0x400
    841c:	sub	r2, r2, #4
    8420:	sub	r2, r2, #8
    8424:	sub	r3, fp, #1016	; 0x3f8
    8428:	add	r0, r3, #36	; 0x24
    842c:	mov	r3, #0
    8430:	mov	r1, #8
    8434:	bl	0 <coda_ascii_parse_int64>
    8438:	mov	r3, r0
    843c:	cmp	r3, #0
    8440:	bge	846c <read_records+0x255c>
    8444:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8448:	ldr	r1, [r3, #48]	; 0x30
    844c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8450:	ldr	r3, [r3, #52]	; 0x34
    8454:	add	r3, r3, #36	; 0x24
    8458:	mov	r2, r3
    845c:	ldr	r0, [pc, #1532]	; 8a60 <read_records+0x2b50>
    8460:	bl	0 <coda_add_error_message>
    8464:	mvn	r3, #0
    8468:	b	8a48 <read_records+0x2b38>
    846c:	bl	0 <__aeabi_read_tp>
    8470:	mov	r2, r0
    8474:	ldr	r3, [pc, #1496]	; 8a54 <read_records+0x2b44>
    8478:	ldr	r3, [r2, r3]
    847c:	add	r3, r3, #240	; 0xf0
    8480:	ldr	r0, [r3]
    8484:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8488:	ldr	r1, [r3, #4]
    848c:	sub	r3, fp, #1024	; 0x400
    8490:	sub	r3, r3, #4
    8494:	ldrd	r2, [r3, #-8]
    8498:	mov	r3, r2
    849c:	mov	r2, r1
    84a0:	mov	r1, #0
    84a4:	bl	0 <coda_mem_int32_new>
    84a8:	str	r0, [fp, #-12]
    84ac:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    84b0:	ldr	r0, [r3, #36]	; 0x24
    84b4:	mov	r3, #0
    84b8:	ldr	r2, [fp, #-12]
    84bc:	ldr	r1, [pc, #1464]	; 8a7c <read_records+0x2b6c>
    84c0:	bl	0 <coda_mem_record_add_field>
    84c4:	ldr	r3, [fp, #-8]
    84c8:	cmp	r3, #52	; 0x34
    84cc:	ble	84f4 <read_records+0x25e4>
    84d0:	sub	r3, fp, #1016	; 0x3f8
    84d4:	add	r3, r3, #45	; 0x2d
    84d8:	mov	r2, #8
    84dc:	ldr	r1, [pc, #1424]	; 8a74 <read_records+0x2b64>
    84e0:	mov	r0, r3
    84e4:	bl	0 <memcmp>
    84e8:	mov	r3, r0
    84ec:	cmp	r3, #0
    84f0:	bne	8510 <read_records+0x2600>
    84f4:	sub	r3, fp, #1024	; 0x400
    84f8:	sub	r3, r3, #4
    84fc:	mov	r1, r3
    8500:	mov	r2, #0
    8504:	mov	r3, #0
    8508:	strd	r2, [r1, #-8]
    850c:	b	8564 <read_records+0x2654>
    8510:	sub	r2, fp, #1024	; 0x400
    8514:	sub	r2, r2, #4
    8518:	sub	r2, r2, #8
    851c:	sub	r3, fp, #1016	; 0x3f8
    8520:	add	r0, r3, #45	; 0x2d
    8524:	mov	r3, #0
    8528:	mov	r1, #8
    852c:	bl	0 <coda_ascii_parse_int64>
    8530:	mov	r3, r0
    8534:	cmp	r3, #0
    8538:	bge	8564 <read_records+0x2654>
    853c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8540:	ldr	r1, [r3, #48]	; 0x30
    8544:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8548:	ldr	r3, [r3, #52]	; 0x34
    854c:	add	r3, r3, #45	; 0x2d
    8550:	mov	r2, r3
    8554:	ldr	r0, [pc, #1284]	; 8a60 <read_records+0x2b50>
    8558:	bl	0 <coda_add_error_message>
    855c:	mvn	r3, #0
    8560:	b	8a48 <read_records+0x2b38>
    8564:	bl	0 <__aeabi_read_tp>
    8568:	mov	r2, r0
    856c:	ldr	r3, [pc, #1248]	; 8a54 <read_records+0x2b44>
    8570:	ldr	r3, [r2, r3]
    8574:	add	r3, r3, #244	; 0xf4
    8578:	ldr	r0, [r3]
    857c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8580:	ldr	r1, [r3, #4]
    8584:	sub	r3, fp, #1024	; 0x400
    8588:	sub	r3, r3, #4
    858c:	ldrd	r2, [r3, #-8]
    8590:	mov	r3, r2
    8594:	mov	r2, r1
    8598:	mov	r1, #0
    859c:	bl	0 <coda_mem_int32_new>
    85a0:	str	r0, [fp, #-12]
    85a4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    85a8:	ldr	r0, [r3, #36]	; 0x24
    85ac:	mov	r3, #0
    85b0:	ldr	r2, [fp, #-12]
    85b4:	ldr	r1, [pc, #1220]	; 8a80 <read_records+0x2b70>
    85b8:	bl	0 <coda_mem_record_add_field>
    85bc:	ldr	r3, [fp, #-8]
    85c0:	cmp	r3, #61	; 0x3d
    85c4:	ble	85ec <read_records+0x26dc>
    85c8:	sub	r3, fp, #1016	; 0x3f8
    85cc:	add	r3, r3, #54	; 0x36
    85d0:	mov	r2, #8
    85d4:	ldr	r1, [pc, #1176]	; 8a74 <read_records+0x2b64>
    85d8:	mov	r0, r3
    85dc:	bl	0 <memcmp>
    85e0:	mov	r3, r0
    85e4:	cmp	r3, #0
    85e8:	bne	8608 <read_records+0x26f8>
    85ec:	sub	r3, fp, #1024	; 0x400
    85f0:	sub	r3, r3, #4
    85f4:	mov	r1, r3
    85f8:	mov	r2, #0
    85fc:	mov	r3, #0
    8600:	strd	r2, [r1, #-8]
    8604:	b	865c <read_records+0x274c>
    8608:	sub	r2, fp, #1024	; 0x400
    860c:	sub	r2, r2, #4
    8610:	sub	r2, r2, #8
    8614:	sub	r3, fp, #1016	; 0x3f8
    8618:	add	r0, r3, #54	; 0x36
    861c:	mov	r3, #0
    8620:	mov	r1, #8
    8624:	bl	0 <coda_ascii_parse_int64>
    8628:	mov	r3, r0
    862c:	cmp	r3, #0
    8630:	bge	865c <read_records+0x274c>
    8634:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8638:	ldr	r1, [r3, #48]	; 0x30
    863c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8640:	ldr	r3, [r3, #52]	; 0x34
    8644:	add	r3, r3, #54	; 0x36
    8648:	mov	r2, r3
    864c:	ldr	r0, [pc, #1036]	; 8a60 <read_records+0x2b50>
    8650:	bl	0 <coda_add_error_message>
    8654:	mvn	r3, #0
    8658:	b	8a48 <read_records+0x2b38>
    865c:	bl	0 <__aeabi_read_tp>
    8660:	mov	r2, r0
    8664:	ldr	r3, [pc, #1000]	; 8a54 <read_records+0x2b44>
    8668:	ldr	r3, [r2, r3]
    866c:	add	r3, r3, #248	; 0xf8
    8670:	ldr	r0, [r3]
    8674:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8678:	ldr	r1, [r3, #4]
    867c:	sub	r3, fp, #1024	; 0x400
    8680:	sub	r3, r3, #4
    8684:	ldrd	r2, [r3, #-8]
    8688:	mov	r3, r2
    868c:	mov	r2, r1
    8690:	mov	r1, #0
    8694:	bl	0 <coda_mem_int32_new>
    8698:	str	r0, [fp, #-12]
    869c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    86a0:	ldr	r0, [r3, #36]	; 0x24
    86a4:	mov	r3, #0
    86a8:	ldr	r2, [fp, #-12]
    86ac:	ldr	r1, [pc, #976]	; 8a84 <read_records+0x2b74>
    86b0:	bl	0 <coda_mem_record_add_field>
    86b4:	ldr	r3, [fp, #-8]
    86b8:	cmp	r3, #70	; 0x46
    86bc:	ble	86e4 <read_records+0x27d4>
    86c0:	sub	r3, fp, #1016	; 0x3f8
    86c4:	add	r3, r3, #63	; 0x3f
    86c8:	mov	r2, #8
    86cc:	ldr	r1, [pc, #928]	; 8a74 <read_records+0x2b64>
    86d0:	mov	r0, r3
    86d4:	bl	0 <memcmp>
    86d8:	mov	r3, r0
    86dc:	cmp	r3, #0
    86e0:	bne	8700 <read_records+0x27f0>
    86e4:	sub	r3, fp, #1024	; 0x400
    86e8:	sub	r3, r3, #4
    86ec:	mov	r1, r3
    86f0:	mov	r2, #0
    86f4:	mov	r3, #0
    86f8:	strd	r2, [r1, #-8]
    86fc:	b	8754 <read_records+0x2844>
    8700:	sub	r2, fp, #1024	; 0x400
    8704:	sub	r2, r2, #4
    8708:	sub	r2, r2, #8
    870c:	sub	r3, fp, #1016	; 0x3f8
    8710:	add	r0, r3, #63	; 0x3f
    8714:	mov	r3, #0
    8718:	mov	r1, #8
    871c:	bl	0 <coda_ascii_parse_int64>
    8720:	mov	r3, r0
    8724:	cmp	r3, #0
    8728:	bge	8754 <read_records+0x2844>
    872c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8730:	ldr	r1, [r3, #48]	; 0x30
    8734:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8738:	ldr	r3, [r3, #52]	; 0x34
    873c:	add	r3, r3, #63	; 0x3f
    8740:	mov	r2, r3
    8744:	ldr	r0, [pc, #788]	; 8a60 <read_records+0x2b50>
    8748:	bl	0 <coda_add_error_message>
    874c:	mvn	r3, #0
    8750:	b	8a48 <read_records+0x2b38>
    8754:	bl	0 <__aeabi_read_tp>
    8758:	mov	r2, r0
    875c:	ldr	r3, [pc, #752]	; 8a54 <read_records+0x2b44>
    8760:	ldr	r3, [r2, r3]
    8764:	add	r3, r3, #252	; 0xfc
    8768:	ldr	r0, [r3]
    876c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8770:	ldr	r1, [r3, #4]
    8774:	sub	r3, fp, #1024	; 0x400
    8778:	sub	r3, r3, #4
    877c:	ldrd	r2, [r3, #-8]
    8780:	mov	r3, r2
    8784:	mov	r2, r1
    8788:	mov	r1, #0
    878c:	bl	0 <coda_mem_int32_new>
    8790:	str	r0, [fp, #-12]
    8794:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8798:	ldr	r0, [r3, #36]	; 0x24
    879c:	mov	r3, #0
    87a0:	ldr	r2, [fp, #-12]
    87a4:	ldr	r1, [pc, #732]	; 8a88 <read_records+0x2b78>
    87a8:	bl	0 <coda_mem_record_add_field>
    87ac:	ldr	r3, [fp, #-8]
    87b0:	cmp	r3, #79	; 0x4f
    87b4:	ble	87dc <read_records+0x28cc>
    87b8:	sub	r3, fp, #1016	; 0x3f8
    87bc:	add	r3, r3, #72	; 0x48
    87c0:	mov	r2, #8
    87c4:	ldr	r1, [pc, #680]	; 8a74 <read_records+0x2b64>
    87c8:	mov	r0, r3
    87cc:	bl	0 <memcmp>
    87d0:	mov	r3, r0
    87d4:	cmp	r3, #0
    87d8:	bne	87f8 <read_records+0x28e8>
    87dc:	sub	r3, fp, #1024	; 0x400
    87e0:	sub	r3, r3, #4
    87e4:	mov	r1, r3
    87e8:	mov	r2, #0
    87ec:	mov	r3, #0
    87f0:	strd	r2, [r1, #-8]
    87f4:	b	884c <read_records+0x293c>
    87f8:	sub	r2, fp, #1024	; 0x400
    87fc:	sub	r2, r2, #4
    8800:	sub	r2, r2, #8
    8804:	sub	r3, fp, #1016	; 0x3f8
    8808:	add	r0, r3, #72	; 0x48
    880c:	mov	r3, #0
    8810:	mov	r1, #8
    8814:	bl	0 <coda_ascii_parse_int64>
    8818:	mov	r3, r0
    881c:	cmp	r3, #0
    8820:	bge	884c <read_records+0x293c>
    8824:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8828:	ldr	r1, [r3, #48]	; 0x30
    882c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8830:	ldr	r3, [r3, #52]	; 0x34
    8834:	add	r3, r3, #72	; 0x48
    8838:	mov	r2, r3
    883c:	ldr	r0, [pc, #540]	; 8a60 <read_records+0x2b50>
    8840:	bl	0 <coda_add_error_message>
    8844:	mvn	r3, #0
    8848:	b	8a48 <read_records+0x2b38>
    884c:	bl	0 <__aeabi_read_tp>
    8850:	mov	r2, r0
    8854:	ldr	r3, [pc, #504]	; 8a54 <read_records+0x2b44>
    8858:	ldr	r3, [r2, r3]
    885c:	add	r3, r3, #256	; 0x100
    8860:	ldr	r0, [r3]
    8864:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8868:	ldr	r1, [r3, #4]
    886c:	sub	r3, fp, #1024	; 0x400
    8870:	sub	r3, r3, #4
    8874:	ldrd	r2, [r3, #-8]
    8878:	mov	r3, r2
    887c:	mov	r2, r1
    8880:	mov	r1, #0
    8884:	bl	0 <coda_mem_int32_new>
    8888:	str	r0, [fp, #-12]
    888c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8890:	ldr	r0, [r3, #36]	; 0x24
    8894:	mov	r3, #0
    8898:	ldr	r2, [fp, #-12]
    889c:	ldr	r1, [pc, #488]	; 8a8c <read_records+0x2b7c>
    88a0:	bl	0 <coda_mem_record_add_field>
    88a4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88a8:	ldr	r0, [r3, #32]
    88ac:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88b0:	ldr	r2, [r3, #36]	; 0x24
    88b4:	mov	r3, #0
    88b8:	ldr	r1, [pc, #464]	; 8a90 <read_records+0x2b80>
    88bc:	bl	0 <coda_mem_record_add_field>
    88c0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88c4:	mov	r2, #0
    88c8:	str	r2, [r3, #36]	; 0x24
    88cc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88d0:	ldr	r3, [r3]
    88d4:	mov	r0, r3
    88d8:	bl	0 <ftell>
    88dc:	mov	r2, r0
    88e0:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88e4:	str	r2, [r3, #52]	; 0x34
    88e8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88ec:	ldr	r3, [r3, #48]	; 0x30
    88f0:	add	r2, r3, #1
    88f4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    88f8:	str	r2, [r3, #48]	; 0x30
    88fc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8900:	ldr	r3, [r3]
    8904:	sub	r2, fp, #1016	; 0x3f8
    8908:	mov	r1, r2
    890c:	mov	r0, r3
    8910:	bl	4920 <get_line>
    8914:	str	r0, [fp, #-8]
    8918:	ldr	r3, [fp, #-8]
    891c:	cmp	r3, #0
    8920:	bge	892c <read_records+0x2a1c>
    8924:	mvn	r3, #0
    8928:	b	8a48 <read_records+0x2b38>
    892c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8930:	ldr	r3, [r3, #24]
    8934:	cmp	r3, #0
    8938:	beq	8964 <read_records+0x2a54>
    893c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8940:	ldr	r2, [r3, #20]
    8944:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8948:	ldr	r3, [r3, #24]
    894c:	mov	r1, r3
    8950:	mov	r0, r2
    8954:	bl	0 <coda_mem_array_add_element>
    8958:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    895c:	mov	r2, #0
    8960:	str	r2, [r3, #24]
    8964:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8968:	ldr	r3, [r3, #32]
    896c:	cmp	r3, #0
    8970:	beq	899c <read_records+0x2a8c>
    8974:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8978:	ldr	r2, [r3, #28]
    897c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8980:	ldr	r3, [r3, #32]
    8984:	mov	r1, r3
    8988:	mov	r0, r2
    898c:	bl	0 <coda_mem_array_add_element>
    8990:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8994:	mov	r2, #0
    8998:	str	r2, [r3, #32]
    899c:	sub	r3, fp, #1016	; 0x3f8
    89a0:	mov	r2, #3
    89a4:	ldr	r1, [pc, #232]	; 8a94 <read_records+0x2b84>
    89a8:	mov	r0, r3
    89ac:	bl	0 <memcmp>
    89b0:	mov	r3, r0
    89b4:	cmp	r3, #0
    89b8:	bne	5f84 <read_records+0x74>
    89bc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    89c0:	ldr	r3, [r3, #16]
    89c4:	cmp	r3, #0
    89c8:	beq	8a44 <read_records+0x2b34>
    89cc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    89d0:	ldr	r0, [r3, #16]
    89d4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    89d8:	ldr	r2, [r3, #20]
    89dc:	mov	r3, #0
    89e0:	ldr	r1, [pc, #176]	; 8a98 <read_records+0x2b88>
    89e4:	bl	0 <coda_mem_record_add_field>
    89e8:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    89ec:	mov	r2, #0
    89f0:	str	r2, [r3, #20]
    89f4:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    89f8:	ldr	r0, [r3, #16]
    89fc:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8a00:	ldr	r2, [r3, #28]
    8a04:	mov	r3, #0
    8a08:	ldr	r1, [pc, #140]	; 8a9c <read_records+0x2b8c>
    8a0c:	bl	0 <coda_mem_record_add_field>
    8a10:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8a14:	mov	r2, #0
    8a18:	str	r2, [r3, #28]
    8a1c:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8a20:	ldr	r2, [r3, #12]
    8a24:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8a28:	ldr	r3, [r3, #16]
    8a2c:	mov	r1, r3
    8a30:	mov	r0, r2
    8a34:	bl	0 <coda_mem_array_add_element>
    8a38:	ldr	r3, [fp, #-1104]	; 0xfffffbb0
    8a3c:	mov	r2, #0
    8a40:	str	r2, [r3, #16]
    8a44:	mov	r3, #0
    8a48:	mov	r0, r3
    8a4c:	sub	sp, fp, #4
    8a50:	pop	{fp, pc}
    8a54:	.word	0x00000000
    8a58:	.word	0x0000074c
    8a5c:	.word	0x00000ac4
    8a60:	.word	0x00000840
    8a64:	.word	0x00000758
    8a68:	.word	0x00000764
    8a6c:	.word	0x00000acc
    8a70:	.word	0x00000770
    8a74:	.word	0x00000ad4
    8a78:	.word	0x00000694
    8a7c:	.word	0x0000069c
    8a80:	.word	0x000006a4
    8a84:	.word	0x000006ac
    8a88:	.word	0x000006b4
    8a8c:	.word	0x000006bc
    8a90:	.word	0x00000744
    8a94:	.word	0x00000b44
    8a98:	.word	0x000007b8
    8a9c:	.word	0x000007c0

00008aa0 <read_file>:
    8aa0:	push	{fp, lr}
    8aa4:	add	fp, sp, #4
    8aa8:	sub	sp, sp, #72	; 0x48
    8aac:	str	r0, [fp, #-72]	; 0xffffffb8
    8ab0:	mov	r3, #0
    8ab4:	str	r3, [fp, #-8]
    8ab8:	sub	r3, fp, #64	; 0x40
    8abc:	mov	r0, r3
    8ac0:	bl	13c <ingest_info_init>
    8ac4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8ac8:	str	r3, [fp, #-60]	; 0xffffffc4
    8acc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8ad0:	ldr	r3, [r3]
    8ad4:	ldr	r1, [pc, #368]	; 8c4c <read_file+0x1ac>
    8ad8:	mov	r0, r3
    8adc:	bl	0 <fopen>
    8ae0:	mov	r3, r0
    8ae4:	str	r3, [fp, #-64]	; 0xffffffc0
    8ae8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    8aec:	cmp	r3, #0
    8af0:	bne	8b14 <read_file+0x74>
    8af4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8af8:	ldr	r3, [r3]
    8afc:	mov	r2, r3
    8b00:	ldr	r1, [pc, #328]	; 8c50 <read_file+0x1b0>
    8b04:	mvn	r0, #20
    8b08:	bl	0 <coda_set_error>
    8b0c:	mvn	r3, #0
    8b10:	b	8c40 <read_file+0x1a0>
    8b14:	bl	0 <__aeabi_read_tp>
    8b18:	mov	r2, r0
    8b1c:	ldr	r3, [pc, #304]	; 8c54 <read_file+0x1b4>
    8b20:	ldr	r3, [r2, r3]
    8b24:	add	r3, r3, #284	; 0x11c
    8b28:	ldr	r3, [r3]
    8b2c:	mov	r1, #0
    8b30:	mov	r0, r3
    8b34:	bl	0 <coda_mem_record_new>
    8b38:	mov	r3, r0
    8b3c:	str	r3, [fp, #-56]	; 0xffffffc8
    8b40:	bl	0 <__aeabi_read_tp>
    8b44:	mov	r2, r0
    8b48:	ldr	r3, [pc, #260]	; 8c54 <read_file+0x1b4>
    8b4c:	ldr	r3, [r2, r3]
    8b50:	add	r3, r3, #288	; 0x120
    8b54:	ldr	r3, [r3]
    8b58:	mov	r1, #0
    8b5c:	mov	r0, r3
    8b60:	bl	0 <coda_mem_array_new>
    8b64:	mov	r3, r0
    8b68:	str	r3, [fp, #-52]	; 0xffffffcc
    8b6c:	sub	r3, fp, #64	; 0x40
    8b70:	mov	r0, r3
    8b74:	bl	4a64 <read_header>
    8b78:	mov	r3, r0
    8b7c:	cmp	r3, #0
    8b80:	beq	8b98 <read_file+0xf8>
    8b84:	sub	r3, fp, #64	; 0x40
    8b88:	mov	r0, r3
    8b8c:	bl	0 <ingest_info_cleanup>
    8b90:	mvn	r3, #0
    8b94:	b	8c40 <read_file+0x1a0>
    8b98:	sub	r3, fp, #64	; 0x40
    8b9c:	mov	r0, r3
    8ba0:	bl	5f10 <read_records>
    8ba4:	mov	r3, r0
    8ba8:	cmp	r3, #0
    8bac:	beq	8bc4 <read_file+0x124>
    8bb0:	sub	r3, fp, #64	; 0x40
    8bb4:	mov	r0, r3
    8bb8:	bl	0 <ingest_info_cleanup>
    8bbc:	mvn	r3, #0
    8bc0:	b	8c40 <read_file+0x1a0>
    8bc4:	bl	0 <__aeabi_read_tp>
    8bc8:	mov	r2, r0
    8bcc:	ldr	r3, [pc, #128]	; 8c54 <read_file+0x1b4>
    8bd0:	ldr	r3, [r2, r3]
    8bd4:	add	r3, r3, #296	; 0x128
    8bd8:	ldr	r3, [r3]
    8bdc:	mov	r1, #0
    8be0:	mov	r0, r3
    8be4:	bl	0 <coda_mem_record_new>
    8be8:	str	r0, [fp, #-8]
    8bec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8bf0:	mov	r3, #0
    8bf4:	ldr	r1, [pc, #92]	; 8c58 <read_file+0x1b8>
    8bf8:	ldr	r0, [fp, #-8]
    8bfc:	bl	0 <coda_mem_record_add_field>
    8c00:	mov	r3, #0
    8c04:	str	r3, [fp, #-56]	; 0xffffffc8
    8c08:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8c0c:	mov	r3, #0
    8c10:	ldr	r1, [pc, #68]	; 8c5c <read_file+0x1bc>
    8c14:	ldr	r0, [fp, #-8]
    8c18:	bl	0 <coda_mem_record_add_field>
    8c1c:	mov	r3, #0
    8c20:	str	r3, [fp, #-52]	; 0xffffffcc
    8c24:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8c28:	ldr	r2, [fp, #-8]
    8c2c:	str	r2, [r3, #20]
    8c30:	sub	r3, fp, #64	; 0x40
    8c34:	mov	r0, r3
    8c38:	bl	0 <ingest_info_cleanup>
    8c3c:	mov	r3, #0
    8c40:	mov	r0, r3
    8c44:	sub	sp, fp, #4
    8c48:	pop	{fp, pc}
    8c4c:	.word	0x00000b48
    8c50:	.word	0x00000b4c
    8c54:	.word	0x00000000
    8c58:	.word	0x000007cc
    8c5c:	.word	0x000007d4

00008c60 <coda_sp3_reopen>:
    8c60:	push	{fp, lr}
    8c64:	add	fp, sp, #4
    8c68:	sub	sp, sp, #24
    8c6c:	str	r0, [fp, #-16]
    8c70:	bl	1ec <sp3_init>
    8c74:	mov	r3, r0
    8c78:	cmp	r3, #0
    8c7c:	beq	8c98 <coda_sp3_reopen+0x38>
    8c80:	ldr	r3, [fp, #-16]
    8c84:	ldr	r3, [r3]
    8c88:	mov	r0, r3
    8c8c:	bl	0 <coda_close>
    8c90:	mvn	r3, #0
    8c94:	b	8e0c <coda_sp3_reopen+0x1ac>
    8c98:	mov	r0, #56	; 0x38
    8c9c:	bl	0 <malloc>
    8ca0:	mov	r3, r0
    8ca4:	str	r3, [fp, #-8]
    8ca8:	ldr	r3, [fp, #-8]
    8cac:	cmp	r3, #0
    8cb0:	bne	8ce8 <coda_sp3_reopen+0x88>
    8cb4:	ldr	r3, [pc, #348]	; 8e18 <coda_sp3_reopen+0x1b8>
    8cb8:	str	r3, [sp]
    8cbc:	ldr	r3, [pc, #344]	; 8e1c <coda_sp3_reopen+0x1bc>
    8cc0:	mov	r2, #56	; 0x38
    8cc4:	ldr	r1, [pc, #340]	; 8e20 <coda_sp3_reopen+0x1c0>
    8cc8:	mvn	r0, #0
    8ccc:	bl	0 <coda_set_error>
    8cd0:	ldr	r3, [fp, #-16]
    8cd4:	ldr	r3, [r3]
    8cd8:	mov	r0, r3
    8cdc:	bl	0 <coda_close>
    8ce0:	mvn	r3, #0
    8ce4:	b	8e0c <coda_sp3_reopen+0x1ac>
    8ce8:	ldr	r3, [fp, #-8]
    8cec:	mov	r2, #0
    8cf0:	str	r2, [r3]
    8cf4:	ldr	r3, [fp, #-16]
    8cf8:	ldr	r3, [r3]
    8cfc:	ldrd	r2, [r3, #8]
    8d00:	ldr	r1, [fp, #-8]
    8d04:	strd	r2, [r1, #8]
    8d08:	ldr	r3, [fp, #-8]
    8d0c:	mov	r2, #9
    8d10:	str	r2, [r3, #16]
    8d14:	ldr	r3, [fp, #-8]
    8d18:	mov	r2, #0
    8d1c:	str	r2, [r3, #20]
    8d20:	ldr	r3, [fp, #-8]
    8d24:	mov	r2, #0
    8d28:	str	r2, [r3, #24]
    8d2c:	ldr	r3, [fp, #-8]
    8d30:	mov	r2, #0
    8d34:	str	r2, [r3, #28]
    8d38:	ldr	r3, [fp, #-8]
    8d3c:	mov	r2, #0
    8d40:	str	r2, [r3, #32]
    8d44:	ldr	r1, [fp, #-8]
    8d48:	mov	r2, #0
    8d4c:	mov	r3, #0
    8d50:	strd	r2, [r1, #40]	; 0x28
    8d54:	ldr	r3, [fp, #-8]
    8d58:	mov	r2, #0
    8d5c:	str	r2, [r3, #48]	; 0x30
    8d60:	ldr	r3, [fp, #-16]
    8d64:	ldr	r3, [r3]
    8d68:	ldr	r3, [r3]
    8d6c:	mov	r0, r3
    8d70:	bl	0 <strdup>
    8d74:	mov	r3, r0
    8d78:	mov	r2, r3
    8d7c:	ldr	r3, [fp, #-8]
    8d80:	str	r2, [r3]
    8d84:	ldr	r3, [fp, #-8]
    8d88:	ldr	r3, [r3]
    8d8c:	cmp	r3, #0
    8d90:	bne	8dc8 <coda_sp3_reopen+0x168>
    8d94:	ldr	r3, [pc, #136]	; 8e24 <coda_sp3_reopen+0x1c4>
    8d98:	ldr	r2, [pc, #124]	; 8e1c <coda_sp3_reopen+0x1bc>
    8d9c:	ldr	r1, [pc, #132]	; 8e28 <coda_sp3_reopen+0x1c8>
    8da0:	mvn	r0, #0
    8da4:	bl	0 <coda_set_error>
    8da8:	ldr	r0, [fp, #-8]
    8dac:	bl	0 <coda_close>
    8db0:	ldr	r3, [fp, #-16]
    8db4:	ldr	r3, [r3]
    8db8:	mov	r0, r3
    8dbc:	bl	0 <coda_close>
    8dc0:	mvn	r3, #0
    8dc4:	b	8e0c <coda_sp3_reopen+0x1ac>
    8dc8:	ldr	r3, [fp, #-16]
    8dcc:	ldr	r3, [r3]
    8dd0:	mov	r0, r3
    8dd4:	bl	0 <coda_close>
    8dd8:	ldr	r0, [fp, #-8]
    8ddc:	bl	8aa0 <read_file>
    8de0:	mov	r3, r0
    8de4:	cmp	r3, #0
    8de8:	beq	8dfc <coda_sp3_reopen+0x19c>
    8dec:	ldr	r0, [fp, #-8]
    8df0:	bl	0 <coda_close>
    8df4:	mvn	r3, #0
    8df8:	b	8e0c <coda_sp3_reopen+0x1ac>
    8dfc:	ldr	r3, [fp, #-16]
    8e00:	ldr	r2, [fp, #-8]
    8e04:	str	r2, [r3]
    8e08:	mov	r3, #0
    8e0c:	mov	r0, r3
    8e10:	sub	sp, fp, #4
    8e14:	pop	{fp, pc}
    8e18:	.word	0x0000079a
    8e1c:	.word	0x00000000
    8e20:	.word	0x00000048
    8e24:	.word	0x000007ac
    8e28:	.word	0x00000b64

00008e2c <coda_sp3_close>:
    8e2c:	push	{fp, lr}
    8e30:	add	fp, sp, #4
    8e34:	sub	sp, sp, #8
    8e38:	str	r0, [fp, #-8]
    8e3c:	ldr	r3, [fp, #-8]
    8e40:	ldr	r3, [r3, #20]
    8e44:	cmp	r3, #0
    8e48:	beq	8e5c <coda_sp3_close+0x30>
    8e4c:	ldr	r3, [fp, #-8]
    8e50:	ldr	r3, [r3, #20]
    8e54:	mov	r0, r3
    8e58:	bl	0 <coda_dynamic_type_delete>
    8e5c:	ldr	r3, [fp, #-8]
    8e60:	ldr	r3, [r3]
    8e64:	cmp	r3, #0
    8e68:	beq	8e7c <coda_sp3_close+0x50>
    8e6c:	ldr	r3, [fp, #-8]
    8e70:	ldr	r3, [r3]
    8e74:	mov	r0, r3
    8e78:	bl	0 <free>
    8e7c:	ldr	r0, [fp, #-8]
    8e80:	bl	0 <free>
    8e84:	mov	r3, #0
    8e88:	mov	r0, r3
    8e8c:	sub	sp, fp, #4
    8e90:	pop	{fp, pc}

00008e94 <coda_sp3_cursor_set_product>:
    8e94:	push	{fp}		; (str fp, [sp, #-4]!)
    8e98:	add	fp, sp, #0
    8e9c:	sub	sp, sp, #12
    8ea0:	str	r0, [fp, #-8]
    8ea4:	str	r1, [fp, #-12]
    8ea8:	ldr	r3, [fp, #-8]
    8eac:	ldr	r2, [fp, #-12]
    8eb0:	str	r2, [r3]
    8eb4:	ldr	r3, [fp, #-8]
    8eb8:	mov	r2, #1
    8ebc:	str	r2, [r3, #4]
    8ec0:	ldr	r3, [fp, #-12]
    8ec4:	ldr	r2, [r3, #20]
    8ec8:	ldr	r3, [fp, #-8]
    8ecc:	str	r2, [r3, #8]
    8ed0:	ldr	r3, [fp, #-8]
    8ed4:	mvn	r2, #0
    8ed8:	str	r2, [r3, #12]
    8edc:	ldr	r1, [fp, #-8]
    8ee0:	mvn	r2, #0
    8ee4:	mvn	r3, #0
    8ee8:	strd	r2, [r1, #16]
    8eec:	mov	r3, #0
    8ef0:	mov	r0, r3
    8ef4:	add	sp, fp, #0
    8ef8:	pop	{fp}		; (ldr fp, [sp], #4)
    8efc:	bx	lr
