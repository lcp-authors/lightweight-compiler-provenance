
../compcert-repos/prog2/CMakeFiles/MT1E1-2.1.dir/Extras/Miniteste1-Exemplo2/1/lista.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <novo_str>:
   0:	push	{r4, r5, r6, sl, fp, lr}
   4:	add	fp, sp, #16
   8:	mov	r6, r0
   c:	mov	r0, #12
  10:	bl	0 <malloc>
  14:	mov	r5, #0
  18:	cmp	r0, #0
  1c:	beq	58 <novo_str+0x58>
  20:	mov	r4, r0
  24:	mov	r0, r6
  28:	bl	0 <strlen>
  2c:	add	r0, r0, #1
  30:	bl	0 <malloc>
  34:	cmp	r0, #0
  38:	str	r0, [r4]
  3c:	beq	60 <novo_str+0x60>
  40:	mov	r1, r6
  44:	bl	0 <strcpy>
  48:	mov	r0, #0
  4c:	mov	r5, r4
  50:	str	r0, [r4, #4]
  54:	str	r0, [r4, #8]
  58:	mov	r0, r5
  5c:	pop	{r4, r5, r6, sl, fp, pc}
  60:	mov	r0, r4
  64:	bl	0 <free>
  68:	mov	r0, r5
  6c:	pop	{r4, r5, r6, sl, fp, pc}

00000070 <lista_nova>:
  70:	push	{fp, lr}
  74:	mov	fp, sp
  78:	mov	r0, #12
  7c:	bl	0 <malloc>
  80:	cmp	r0, #0
  84:	moveq	r0, #0
  88:	movne	r1, #0
  8c:	strne	r1, [r0]
  90:	strne	r1, [r0, #4]
  94:	strne	r1, [r0, #8]
  98:	pop	{fp, pc}

0000009c <lista_apaga>:
  9c:	cmp	r0, #0
  a0:	bxeq	lr
  a4:	push	{r4, r5, fp, lr}
  a8:	add	fp, sp, #8
  ac:	mov	r4, r0
  b0:	ldr	r5, [r4]
  b4:	cmp	r5, #0
  b8:	beq	d8 <lista_apaga+0x3c>
  bc:	ldr	r0, [r5, #4]
  c0:	str	r0, [r4]
  c4:	ldr	r0, [r5]
  c8:	bl	0 <free>
  cc:	mov	r0, r5
  d0:	bl	0 <free>
  d4:	b	b0 <lista_apaga+0x14>
  d8:	mov	r0, r4
  dc:	pop	{r4, r5, fp, lr}
  e0:	b	0 <free>

000000e4 <lista_tamanho>:
  e4:	cmp	r0, #0
  e8:	ldrne	r0, [r0, #8]
  ec:	mvneq	r0, #0
  f0:	bx	lr

000000f4 <lista_inicio>:
  f4:	cmp	r0, #0
  f8:	ldrne	r0, [r0]
  fc:	moveq	r0, #0
 100:	bx	lr

00000104 <lista_fim>:
 104:	cmp	r0, #0
 108:	ldrne	r0, [r0, #4]
 10c:	moveq	r0, #0
 110:	bx	lr

00000114 <lista_insere>:
 114:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 118:	add	fp, sp, #24
 11c:	cmp	r0, #0
 120:	mov	r7, #0
 124:	movne	r6, r1
 128:	cmpne	r1, #0
 12c:	bne	138 <lista_insere+0x24>
 130:	mov	r0, r7
 134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 138:	mov	r5, r0
 13c:	mov	r0, #12
 140:	mov	r8, r2
 144:	bl	0 <malloc>
 148:	cmp	r0, #0
 14c:	beq	130 <lista_insere+0x1c>
 150:	mov	r4, r0
 154:	mov	r0, r6
 158:	bl	0 <strlen>
 15c:	add	r0, r0, #1
 160:	bl	0 <malloc>
 164:	cmp	r0, #0
 168:	str	r0, [r4]
 16c:	beq	1bc <lista_insere+0xa8>
 170:	mov	r1, r6
 174:	bl	0 <strcpy>
 178:	mov	r0, #0
 17c:	cmp	r8, #0
 180:	str	r0, [r4, #4]
 184:	str	r0, [r4, #8]
 188:	ldr	r1, [r5, #8]
 18c:	ldr	r0, [r5]
 190:	add	r1, r1, #1
 194:	str	r1, [r5, #8]
 198:	beq	1cc <lista_insere+0xb8>
 19c:	cmp	r0, r8
 1a0:	beq	1e4 <lista_insere+0xd0>
 1a4:	ldr	r0, [r8, #8]
 1a8:	str	r8, [r4, #4]
 1ac:	str	r0, [r4, #8]
 1b0:	str	r4, [r0, #4]
 1b4:	str	r4, [r8, #8]
 1b8:	b	1fc <lista_insere+0xe8>
 1bc:	mov	r0, r4
 1c0:	bl	0 <free>
 1c4:	mov	r0, r7
 1c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 1cc:	cmp	r0, #0
 1d0:	beq	1f4 <lista_insere+0xe0>
 1d4:	ldr	r0, [r5, #4]
 1d8:	str	r0, [r4, #8]
 1dc:	str	r4, [r0, #4]
 1e0:	b	1f8 <lista_insere+0xe4>
 1e4:	str	r8, [r4, #4]
 1e8:	str	r4, [r8, #8]
 1ec:	str	r4, [r5]
 1f0:	b	1fc <lista_insere+0xe8>
 1f4:	str	r4, [r5]
 1f8:	str	r4, [r5, #4]
 1fc:	mov	r7, r4
 200:	mov	r0, r7
 204:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000208 <lista_remove>:
 208:	push	{r4, r5, fp, lr}
 20c:	add	fp, sp, #8
 210:	cmp	r0, #0
 214:	mov	r4, #0
 218:	movne	r5, r1
 21c:	cmpne	r1, #0
 220:	bne	22c <lista_remove+0x24>
 224:	mov	r0, r4
 228:	pop	{r4, r5, fp, pc}
 22c:	ldr	r1, [r0, #8]
 230:	sub	r1, r1, #1
 234:	str	r1, [r0, #8]
 238:	ldr	r1, [r5, #8]
 23c:	ldr	r4, [r5, #4]
 240:	cmp	r1, #0
 244:	beq	254 <lista_remove+0x4c>
 248:	str	r4, [r1, #4]
 24c:	ldr	r4, [r5, #4]
 250:	b	258 <lista_remove+0x50>
 254:	str	r4, [r0]
 258:	cmp	r4, #0
 25c:	add	r2, r4, #8
 260:	addeq	r2, r0, #4
 264:	str	r1, [r2]
 268:	ldr	r0, [r5]
 26c:	bl	0 <free>
 270:	mov	r0, r5
 274:	bl	0 <free>
 278:	mov	r0, r4
 27c:	pop	{r4, r5, fp, pc}

00000280 <lista_pesquisa>:
 280:	push	{r4, r5, r6, sl, fp, lr}
 284:	add	fp, sp, #16
 288:	cmp	r0, #0
 28c:	mov	r4, #0
 290:	movne	r5, r1
 294:	cmpne	r1, #0
 298:	bne	2a4 <lista_pesquisa+0x24>
 29c:	mov	r0, r4
 2a0:	pop	{r4, r5, r6, sl, fp, pc}
 2a4:	cmp	r2, #1
 2a8:	bhi	29c <lista_pesquisa+0x1c>
 2ac:	cmp	r2, #0
 2b0:	beq	2e4 <lista_pesquisa+0x64>
 2b4:	ldr	r6, [r0, #4]
 2b8:	cmp	r6, #0
 2bc:	beq	29c <lista_pesquisa+0x1c>
 2c0:	ldr	r0, [r6]
 2c4:	mov	r1, r5
 2c8:	bl	0 <strcmp>
 2cc:	cmp	r0, #0
 2d0:	beq	314 <lista_pesquisa+0x94>
 2d4:	ldr	r6, [r6, #8]
 2d8:	cmp	r6, #0
 2dc:	bne	2c0 <lista_pesquisa+0x40>
 2e0:	b	29c <lista_pesquisa+0x1c>
 2e4:	ldr	r6, [r0]
 2e8:	cmp	r6, #0
 2ec:	beq	29c <lista_pesquisa+0x1c>
 2f0:	ldr	r0, [r6]
 2f4:	mov	r1, r5
 2f8:	bl	0 <strcmp>
 2fc:	cmp	r0, #0
 300:	beq	314 <lista_pesquisa+0x94>
 304:	ldr	r6, [r6, #4]
 308:	cmp	r6, #0
 30c:	bne	2f0 <lista_pesquisa+0x70>
 310:	b	29c <lista_pesquisa+0x1c>
 314:	mov	r4, r6
 318:	mov	r0, r4
 31c:	pop	{r4, r5, r6, sl, fp, pc}

00000320 <lista_ordena>:
 320:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 324:	add	fp, sp, #24
 328:	cmp	r0, #0
 32c:	beq	3ac <lista_ordena+0x8c>
 330:	ldr	r0, [r0]
 334:	mov	r8, #0
 338:	mov	r5, r0
 33c:	ldr	r4, [r5, #4]!
 340:	cmp	r4, #0
 344:	bne	35c <lista_ordena+0x3c>
 348:	b	3b0 <lista_ordena+0x90>
 34c:	mov	r5, r0
 350:	ldr	r4, [r5, #4]!
 354:	cmp	r4, #0
 358:	beq	3b0 <lista_ordena+0x90>
 35c:	mov	r9, r0
 360:	mov	r7, r0
 364:	mov	r6, r4
 368:	ldr	r1, [r7]
 36c:	ldr	r0, [r6]
 370:	bl	0 <strcmp>
 374:	cmp	r0, #0
 378:	movmi	r7, r6
 37c:	ldr	r6, [r6, #4]
 380:	cmp	r6, #0
 384:	bne	368 <lista_ordena+0x48>
 388:	cmp	r7, r9
 38c:	mov	r0, r4
 390:	beq	34c <lista_ordena+0x2c>
 394:	ldr	r0, [r9]
 398:	ldr	r1, [r7]
 39c:	str	r1, [r9]
 3a0:	str	r0, [r7]
 3a4:	ldr	r0, [r5]
 3a8:	b	34c <lista_ordena+0x2c>
 3ac:	mvn	r8, #0
 3b0:	mov	r0, r8
 3b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000003b8 <lista_inverte>:
 3b8:	push	{fp, lr}
 3bc:	mov	fp, sp
 3c0:	cmp	r0, #0
 3c4:	beq	420 <lista_inverte+0x68>
 3c8:	ldr	r2, [r0, #8]
 3cc:	mov	r1, #0
 3d0:	cmp	r2, #2
 3d4:	blt	454 <lista_inverte+0x9c>
 3d8:	sub	r1, r2, #2
 3dc:	cmp	r1, #0
 3e0:	ble	42c <lista_inverte+0x74>
 3e4:	ldr	ip, [r0]
 3e8:	ldr	r3, [ip, #4]
 3ec:	mov	r2, r3
 3f0:	ldr	r3, [r3, #4]
 3f4:	subs	r1, r1, #1
 3f8:	ldr	lr, [r2, #8]
 3fc:	str	r3, [lr, #4]
 400:	ldr	r3, [r2, #4]
 404:	str	lr, [r3, #8]
 408:	str	ip, [r2, #4]
 40c:	str	r2, [ip, #8]
 410:	mov	ip, r2
 414:	bne	3ec <lista_inverte+0x34>
 418:	str	r2, [r0]
 41c:	b	430 <lista_inverte+0x78>
 420:	mvn	r1, #0
 424:	mov	r0, r1
 428:	pop	{fp, pc}
 42c:	ldr	r2, [r0]
 430:	ldr	r3, [r0, #4]
 434:	mov	r1, #0
 438:	ldr	ip, [r3, #8]
 43c:	str	ip, [r0, #4]
 440:	str	r1, [ip, #4]
 444:	str	r2, [r3, #4]
 448:	str	r1, [r3, #8]
 44c:	str	r3, [r2, #8]
 450:	str	r3, [r0]
 454:	mov	r0, r1
 458:	pop	{fp, pc}
