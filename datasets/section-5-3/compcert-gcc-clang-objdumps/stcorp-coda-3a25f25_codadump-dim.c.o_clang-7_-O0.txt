
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-dim.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <dim_info_init>:
       0:	movw	r0, #0
       4:	movw	r1, #0
       8:	movt	r1, #0
       c:	str	r0, [r1]
      10:	str	r0, [r1, #68]	; 0x44
      14:	mvn	r0, #0
      18:	str	r0, [r1, #104]	; 0x68
      1c:	bx	lr

00000020 <dim_info_done>:
      20:	bx	lr

00000024 <print_all_distinct_dims>:
      24:	push	{fp, lr}
      28:	mov	fp, sp
      2c:	sub	sp, sp, #80	; 0x50
      30:	str	r0, [fp, #-4]
      34:	ldr	r0, [fp, #-4]
      38:	movw	r1, #0
      3c:	movt	r1, #0
      40:	ldr	r1, [r1]
      44:	cmp	r0, r1
      48:	bge	50 <print_all_distinct_dims+0x2c>
      4c:	b	70 <print_all_distinct_dims+0x4c>
      50:	movw	r0, #0
      54:	movt	r0, #0
      58:	movw	r1, #0
      5c:	movt	r1, #0
      60:	movw	r2, #50	; 0x32
      64:	movw	r3, #0
      68:	movt	r3, #0
      6c:	bl	0 <__assert_fail>
      70:	movw	r0, #0
      74:	movt	r0, #0
      78:	add	r0, r0, #72	; 0x48
      7c:	ldr	r1, [fp, #-4]
      80:	movw	r2, #0
      84:	movt	r2, #0
      88:	add	r1, r2, r1, lsl #2
      8c:	add	r1, r1, #72	; 0x48
      90:	ldr	r1, [r1]
      94:	cmp	r1, #0
      98:	str	r0, [fp, #-16]
      9c:	bne	a4 <print_all_distinct_dims+0x80>
      a0:	b	3f0 <print_all_distinct_dims+0x3cc>
      a4:	ldr	r0, [fp, #-4]
      a8:	movw	r1, #0
      ac:	movt	r1, #0
      b0:	add	r0, r1, r0, lsl #2
      b4:	ldr	r0, [r0, #4]
      b8:	add	r0, r0, #1
      bc:	lsl	r0, r0, #2
      c0:	bl	0 <malloc>
      c4:	str	r0, [fp, #-8]
      c8:	ldr	r0, [fp, #-8]
      cc:	movw	r1, #0
      d0:	cmp	r0, r1
      d4:	bne	120 <print_all_distinct_dims+0xfc>
      d8:	ldr	r0, [fp, #-4]
      dc:	movw	r1, #0
      e0:	movt	r1, #0
      e4:	add	r0, r1, r0, lsl #2
      e8:	ldr	r0, [r0, #4]
      ec:	add	r0, r0, #1
      f0:	lsl	r2, r0, #2
      f4:	mvn	r0, #0
      f8:	movw	r1, #0
      fc:	movt	r1, #0
     100:	movw	r3, #0
     104:	movt	r3, #0
     108:	movw	ip, #61	; 0x3d
     10c:	str	ip, [sp]
     110:	bl	0 <coda_set_error>
     114:	movw	r0, #0
     118:	movt	r0, #0
     11c:	blx	r0
     120:	ldr	r0, [fp, #-8]
     124:	ldr	r1, [fp, #-4]
     128:	movw	r2, #0
     12c:	movt	r2, #0
     130:	add	r1, r2, r1, lsl #2
     134:	ldr	r1, [r1, #4]
     138:	add	r1, r1, #1
     13c:	lsl	r2, r1, #2
     140:	movw	r1, #0
     144:	and	r1, r1, #255	; 0xff
     148:	bl	0 <memset>
     14c:	movw	r0, #0
     150:	str	r0, [fp, #-12]
     154:	ldr	r0, [fp, #-12]
     158:	ldr	r1, [fp, #-4]
     15c:	movw	r2, #0
     160:	movt	r2, #0
     164:	add	r1, r2, r1, lsl #2
     168:	ldr	r1, [r1, #140]	; 0x8c
     16c:	add	r1, r2, r1, lsl #3
     170:	ldr	r2, [r1, #232]	; 0xe8
     174:	ldr	r1, [r1, #236]	; 0xec
     178:	subs	r2, r0, r2
     17c:	rscs	r0, r1, r0, asr #31
     180:	str	r2, [fp, #-20]	; 0xffffffec
     184:	str	r0, [fp, #-24]	; 0xffffffe8
     188:	bge	1fc <print_all_distinct_dims+0x1d8>
     18c:	b	190 <print_all_distinct_dims+0x16c>
     190:	ldr	r0, [fp, #-4]
     194:	movw	r1, #0
     198:	movt	r1, #0
     19c:	add	r0, r1, r0, lsl #2
     1a0:	ldr	r0, [r0, #108]	; 0x6c
     1a4:	ldr	r1, [fp, #-12]
     1a8:	add	r0, r0, r1, lsl #2
     1ac:	ldr	r0, [r0]
     1b0:	cmp	r0, #0
     1b4:	blt	1e8 <print_all_distinct_dims+0x1c4>
     1b8:	ldr	r0, [fp, #-8]
     1bc:	ldr	r1, [fp, #-4]
     1c0:	movw	r2, #0
     1c4:	movt	r2, #0
     1c8:	add	r1, r2, r1, lsl #2
     1cc:	ldr	r1, [r1, #108]	; 0x6c
     1d0:	ldr	r2, [fp, #-12]
     1d4:	ldr	r1, [r1, r2, lsl #2]
     1d8:	add	r0, r0, r1, lsl #2
     1dc:	ldr	r1, [r0]
     1e0:	add	r1, r1, #1
     1e4:	str	r1, [r0]
     1e8:	b	1ec <print_all_distinct_dims+0x1c8>
     1ec:	ldr	r0, [fp, #-12]
     1f0:	add	r0, r0, #1
     1f4:	str	r0, [fp, #-12]
     1f8:	b	154 <print_all_distinct_dims+0x130>
     1fc:	movw	r0, #0
     200:	movt	r0, #0
     204:	add	r0, r0, #36	; 0x24
     208:	ldr	r1, [fp, #-4]
     20c:	add	r1, r1, #1
     210:	movw	r2, #0
     214:	movt	r2, #0
     218:	str	r0, [fp, #-28]	; 0xffffffe4
     21c:	mov	r0, r2
     220:	bl	0 <printf>
     224:	ldr	r1, [fp, #-4]
     228:	movw	r2, #0
     22c:	movt	r2, #0
     230:	add	r1, r2, r1, lsl #2
     234:	add	r1, r1, #36	; 0x24
     238:	ldr	r1, [r1]
     23c:	str	r1, [fp, #-12]
     240:	str	r0, [fp, #-32]	; 0xffffffe0
     244:	movw	r0, #0
     248:	movt	r0, #0
     24c:	add	r0, r0, #4
     250:	ldr	r1, [fp, #-12]
     254:	ldr	r2, [fp, #-4]
     258:	movw	r3, #0
     25c:	movt	r3, #0
     260:	add	r2, r3, r2, lsl #2
     264:	add	r2, r2, #4
     268:	ldr	r2, [r2]
     26c:	cmp	r1, r2
     270:	str	r0, [fp, #-36]	; 0xffffffdc
     274:	bge	2b8 <print_all_distinct_dims+0x294>
     278:	ldr	r0, [fp, #-8]
     27c:	ldr	r1, [fp, #-12]
     280:	add	r0, r0, r1, lsl #2
     284:	ldr	r0, [r0]
     288:	cmp	r0, #0
     28c:	ble	2a4 <print_all_distinct_dims+0x280>
     290:	ldr	r1, [fp, #-12]
     294:	movw	r0, #0
     298:	movt	r0, #0
     29c:	bl	0 <printf>
     2a0:	str	r0, [sp, #40]	; 0x28
     2a4:	b	2a8 <print_all_distinct_dims+0x284>
     2a8:	ldr	r0, [fp, #-12]
     2ac:	add	r0, r0, #1
     2b0:	str	r0, [fp, #-12]
     2b4:	b	244 <print_all_distinct_dims+0x220>
     2b8:	movw	r0, #0
     2bc:	movt	r0, #0
     2c0:	add	r0, r0, #36	; 0x24
     2c4:	ldr	r1, [fp, #-4]
     2c8:	movw	r2, #0
     2cc:	movt	r2, #0
     2d0:	add	r1, r2, r1, lsl #2
     2d4:	ldr	r1, [r1, #4]
     2d8:	movw	r3, #0
     2dc:	movt	r3, #0
     2e0:	str	r0, [sp, #36]	; 0x24
     2e4:	mov	r0, r3
     2e8:	str	r2, [sp, #32]
     2ec:	bl	0 <printf>
     2f0:	movw	r1, #0
     2f4:	movt	r1, #0
     2f8:	str	r0, [sp, #28]
     2fc:	mov	r0, r1
     300:	bl	0 <printf>
     304:	ldr	r1, [fp, #-4]
     308:	ldr	r2, [sp, #32]
     30c:	add	r1, r2, r1, lsl #2
     310:	add	r1, r1, #36	; 0x24
     314:	ldr	r1, [r1]
     318:	str	r1, [fp, #-12]
     31c:	str	r0, [sp, #24]
     320:	movw	r0, #0
     324:	movt	r0, #0
     328:	add	r0, r0, #4
     32c:	ldr	r1, [fp, #-12]
     330:	ldr	r2, [fp, #-4]
     334:	movw	r3, #0
     338:	movt	r3, #0
     33c:	add	r2, r3, r2, lsl #2
     340:	add	r2, r2, #4
     344:	ldr	r2, [r2]
     348:	cmp	r1, r2
     34c:	str	r0, [sp, #20]
     350:	bge	3a0 <print_all_distinct_dims+0x37c>
     354:	ldr	r0, [fp, #-8]
     358:	ldr	r1, [fp, #-12]
     35c:	add	r0, r0, r1, lsl #2
     360:	ldr	r0, [r0]
     364:	cmp	r0, #0
     368:	ble	38c <print_all_distinct_dims+0x368>
     36c:	ldr	r0, [fp, #-8]
     370:	ldr	r1, [fp, #-12]
     374:	add	r0, r0, r1, lsl #2
     378:	ldr	r1, [r0]
     37c:	movw	r0, #0
     380:	movt	r0, #0
     384:	bl	0 <printf>
     388:	str	r0, [sp, #16]
     38c:	b	390 <print_all_distinct_dims+0x36c>
     390:	ldr	r0, [fp, #-12]
     394:	add	r0, r0, #1
     398:	str	r0, [fp, #-12]
     39c:	b	320 <print_all_distinct_dims+0x2fc>
     3a0:	ldr	r0, [fp, #-8]
     3a4:	ldr	r1, [fp, #-4]
     3a8:	movw	r2, #0
     3ac:	movt	r2, #0
     3b0:	add	r1, r2, r1, lsl #2
     3b4:	ldr	r1, [r1, #4]
     3b8:	add	r0, r0, r1, lsl #2
     3bc:	ldr	r1, [r0]
     3c0:	movw	r0, #0
     3c4:	movt	r0, #0
     3c8:	bl	0 <printf>
     3cc:	movw	r1, #0
     3d0:	movt	r1, #0
     3d4:	str	r0, [sp, #12]
     3d8:	mov	r0, r1
     3dc:	bl	0 <printf>
     3e0:	ldr	r1, [fp, #-8]
     3e4:	str	r0, [sp, #8]
     3e8:	mov	r0, r1
     3ec:	bl	0 <free>
     3f0:	mov	sp, fp
     3f4:	pop	{fp, pc}

000003f8 <dim_enter_array>:
     3f8:	push	{r4, r5, r6, r7, fp, lr}
     3fc:	add	fp, sp, #16
     400:	sub	sp, sp, #232	; 0xe8
     404:	movw	r0, #0
     408:	movt	r0, #0
     40c:	add	r0, r0, #8
     410:	movw	r1, #0
     414:	movt	r1, #0
     418:	ldr	r2, [r1, #3360]	; 0xd20
     41c:	add	r2, r2, r2, lsl #2
     420:	add	r2, r1, r2, lsl #4
     424:	add	r2, r2, #800	; 0x320
     428:	str	r2, [fp, #-24]	; 0xffffffe8
     42c:	ldr	r2, [r1, #136]	; 0x88
     430:	add	r1, r1, r2, lsl #2
     434:	add	r1, r1, #8
     438:	ldr	r1, [r1]
     43c:	str	r0, [sp, #120]	; 0x78
     440:	mov	r0, r1
     444:	sub	r1, fp, #20
     448:	bl	0 <coda_type_get_class>
     44c:	cmp	r0, #0
     450:	beq	460 <dim_enter_array+0x68>
     454:	movw	r0, #0
     458:	movt	r0, #0
     45c:	blx	r0
     460:	ldr	r0, [fp, #-20]	; 0xffffffec
     464:	sub	r0, r0, #1
     468:	cmp	r0, #5
     46c:	str	r0, [sp, #116]	; 0x74
     470:	bhi	6d4 <dim_enter_array+0x2dc>
     474:	add	r0, pc, #8
     478:	ldr	r1, [sp, #116]	; 0x74
     47c:	ldr	r0, [r0, r1, lsl #2]
     480:	mov	pc, r0
     484:	.word	0x0000049c
     488:	.word	0x000006d4
     48c:	.word	0x000006d4
     490:	.word	0x000005d4
     494:	.word	0x00000638
     498:	.word	0x0000053c
     49c:	sub	r2, fp, #88	; 0x58
     4a0:	movw	r0, #0
     4a4:	movt	r0, #0
     4a8:	add	r0, r0, #8
     4ac:	movw	r1, #0
     4b0:	movt	r1, #0
     4b4:	ldr	r3, [r1, #136]	; 0x88
     4b8:	add	r1, r1, r3, lsl #2
     4bc:	add	r1, r1, #8
     4c0:	ldr	r1, [r1]
     4c4:	str	r0, [sp, #112]	; 0x70
     4c8:	mov	r0, r1
     4cc:	sub	r1, fp, #92	; 0x5c
     4d0:	bl	0 <coda_type_get_array_dim>
     4d4:	cmp	r0, #0
     4d8:	beq	4e8 <dim_enter_array+0xf0>
     4dc:	movw	r0, #0
     4e0:	movt	r0, #0
     4e4:	blx	r0
     4e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
     4ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
     4f0:	str	r0, [r1, #4]
     4f4:	movw	r0, #0
     4f8:	str	r0, [fp, #-56]	; 0xffffffc8
     4fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
     500:	ldr	r1, [fp, #-92]	; 0xffffffa4
     504:	cmp	r0, r1
     508:	bge	538 <dim_enter_array+0x140>
     50c:	ldr	r0, [fp, #-56]	; 0xffffffc8
     510:	sub	r1, fp, #88	; 0x58
     514:	ldr	r1, [r1, r0, lsl #2]
     518:	ldr	r2, [fp, #-24]	; 0xffffffe8
     51c:	add	r2, r2, #8
     520:	add	r0, r2, r0, lsl #2
     524:	str	r1, [r0]
     528:	ldr	r0, [fp, #-56]	; 0xffffffc8
     52c:	add	r0, r0, #1
     530:	str	r0, [fp, #-56]	; 0xffffffc8
     534:	b	4fc <dim_enter_array+0x104>
     538:	b	6f4 <dim_enter_array+0x2fc>
     53c:	movw	r0, #0
     540:	movt	r0, #0
     544:	add	r0, r0, #8
     548:	movw	r1, #0
     54c:	movt	r1, #0
     550:	ldr	r2, [r1, #136]	; 0x88
     554:	add	r1, r1, r2, lsl #2
     558:	add	r1, r1, #8
     55c:	ldr	r1, [r1]
     560:	str	r0, [sp, #108]	; 0x6c
     564:	mov	r0, r1
     568:	sub	r1, fp, #96	; 0x60
     56c:	bl	0 <coda_type_get_special_type>
     570:	cmp	r0, #0
     574:	beq	584 <dim_enter_array+0x18c>
     578:	movw	r0, #0
     57c:	movt	r0, #0
     580:	blx	r0
     584:	ldr	r0, [fp, #-96]	; 0xffffffa0
     588:	cmp	r0, #3
     58c:	bne	5b0 <dim_enter_array+0x1b8>
     590:	b	594 <dim_enter_array+0x19c>
     594:	ldr	r0, [fp, #-24]	; 0xffffffe8
     598:	movw	r1, #1
     59c:	str	r1, [r0, #4]
     5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     5a4:	movw	r1, #2
     5a8:	str	r1, [r0, #8]
     5ac:	b	5d0 <dim_enter_array+0x1d8>
     5b0:	movw	r0, #0
     5b4:	movt	r0, #0
     5b8:	movw	r1, #0
     5bc:	movt	r1, #0
     5c0:	movw	r2, #349	; 0x15d
     5c4:	movw	r3, #0
     5c8:	movt	r3, #0
     5cc:	bl	0 <__assert_fail>
     5d0:	b	6f4 <dim_enter_array+0x2fc>
     5d4:	movw	r0, #0
     5d8:	movt	r0, #0
     5dc:	add	r0, r0, #8
     5e0:	movw	r1, #0
     5e4:	movt	r1, #0
     5e8:	ldr	r2, [r1, #136]	; 0x88
     5ec:	add	r1, r1, r2, lsl #2
     5f0:	add	r1, r1, #8
     5f4:	ldr	r1, [r1]
     5f8:	str	r0, [sp, #104]	; 0x68
     5fc:	mov	r0, r1
     600:	sub	r1, fp, #100	; 0x64
     604:	bl	0 <coda_type_get_string_length>
     608:	cmp	r0, #0
     60c:	beq	61c <dim_enter_array+0x224>
     610:	movw	r0, #0
     614:	movt	r0, #0
     618:	blx	r0
     61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     620:	movw	r1, #1
     624:	str	r1, [r0, #4]
     628:	ldr	r0, [fp, #-100]	; 0xffffff9c
     62c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     630:	str	r0, [r1, #8]
     634:	b	6f4 <dim_enter_array+0x2fc>
     638:	movw	r0, #0
     63c:	movt	r0, #0
     640:	add	r0, r0, #8
     644:	movw	r1, #0
     648:	movt	r1, #0
     64c:	ldr	r2, [r1, #136]	; 0x88
     650:	add	r1, r1, r2, lsl #2
     654:	add	r1, r1, #8
     658:	ldr	r1, [r1]
     65c:	str	r0, [sp, #100]	; 0x64
     660:	mov	r0, r1
     664:	sub	r1, fp, #112	; 0x70
     668:	bl	0 <coda_type_get_bit_size>
     66c:	cmp	r0, #0
     670:	beq	680 <dim_enter_array+0x288>
     674:	movw	r0, #0
     678:	movt	r0, #0
     67c:	blx	r0
     680:	ldr	r0, [fp, #-24]	; 0xffffffe8
     684:	mov	r1, #1
     688:	str	r1, [r0, #4]
     68c:	ldr	r0, [fp, #-108]	; 0xffffff94
     690:	cmp	r0, #0
     694:	blt	6c4 <dim_enter_array+0x2cc>
     698:	b	69c <dim_enter_array+0x2a4>
     69c:	ldr	r0, [fp, #-112]	; 0xffffff90
     6a0:	ldr	r1, [fp, #-108]	; 0xffffff94
     6a4:	lsr	r2, r0, #3
     6a8:	orr	r1, r2, r1, lsl #29
     6ac:	add	r2, r1, #1
     6b0:	tst	r0, #7
     6b4:	movne	r1, r2
     6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6bc:	str	r1, [r0, #8]
     6c0:	b	6d0 <dim_enter_array+0x2d8>
     6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6c8:	mvn	r1, #0
     6cc:	str	r1, [r0, #8]
     6d0:	b	6f4 <dim_enter_array+0x2fc>
     6d4:	movw	r0, #0
     6d8:	movt	r0, #0
     6dc:	movw	r1, #0
     6e0:	movt	r1, #0
     6e4:	movw	r2, #386	; 0x182
     6e8:	movw	r3, #0
     6ec:	movt	r3, #0
     6f0:	bl	0 <__assert_fail>
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	ldr	r0, [r0]
     700:	cmp	r0, #0
     704:	bne	72c <dim_enter_array+0x334>
     708:	ldr	r0, [fp, #-24]	; 0xffffffe8
     70c:	mvn	r1, #0
     710:	str	r1, [r0]
     714:	ldr	r0, [fp, #-24]	; 0xffffffe8
     718:	movw	r1, #0
     71c:	str	r1, [r0, #40]	; 0x28
     720:	ldr	r0, [fp, #-24]	; 0xffffffe8
     724:	str	r1, [r0, #44]	; 0x2c
     728:	b	11a4 <dim_enter_array+0xdac>
     72c:	movw	r0, #0
     730:	movt	r0, #0
     734:	ldr	r1, [r0]
     738:	str	r1, [fp, #-52]	; 0xffffffcc
     73c:	ldr	r1, [fp, #-52]	; 0xffffffcc
     740:	ldr	r2, [fp, #-24]	; 0xffffffe8
     744:	str	r1, [r2]
     748:	ldr	r0, [r0]
     74c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     750:	ldr	r1, [r1, #4]
     754:	add	r0, r0, r1
     758:	cmp	r0, #8
     75c:	bgt	764 <dim_enter_array+0x36c>
     760:	b	784 <dim_enter_array+0x38c>
     764:	movw	r0, #0
     768:	movt	r0, #0
     76c:	movw	r1, #0
     770:	movt	r1, #0
     774:	movw	r2, #402	; 0x192
     778:	movw	r3, #0
     77c:	movt	r3, #0
     780:	bl	0 <__assert_fail>
     784:	ldr	r0, [fp, #-24]	; 0xffffffe8
     788:	ldr	r0, [r0, #4]
     78c:	movw	r1, #0
     790:	movt	r1, #0
     794:	ldr	r2, [r1]
     798:	add	r0, r2, r0
     79c:	str	r0, [r1]
     7a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
     7a4:	cmp	r0, #0
     7a8:	ble	7e8 <dim_enter_array+0x3f0>
     7ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
     7b0:	movw	r1, #0
     7b4:	movt	r1, #0
     7b8:	add	r0, r1, r0, lsl #3
     7bc:	ldr	r2, [r0, #232]	; 0xe8
     7c0:	ldr	r0, [r0, #236]	; 0xec
     7c4:	str	r0, [fp, #-28]	; 0xffffffe4
     7c8:	str	r2, [fp, #-32]	; 0xffffffe0
     7cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
     7d0:	add	r0, r1, r0, lsl #3
     7d4:	ldr	r1, [r0, #296]	; 0x128
     7d8:	ldr	r0, [r0, #300]	; 0x12c
     7dc:	str	r0, [fp, #-36]	; 0xffffffdc
     7e0:	str	r1, [fp, #-40]	; 0xffffffd8
     7e4:	b	800 <dim_enter_array+0x408>
     7e8:	mov	r0, #0
     7ec:	str	r0, [fp, #-28]	; 0xffffffe4
     7f0:	mov	r1, #1
     7f4:	str	r1, [fp, #-32]	; 0xffffffe0
     7f8:	str	r0, [fp, #-36]	; 0xffffffdc
     7fc:	str	r1, [fp, #-40]	; 0xffffffd8
     800:	mov	r0, #0
     804:	str	r0, [fp, #-44]	; 0xffffffd4
     808:	str	r0, [fp, #-48]	; 0xffffffd0
     80c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     810:	ldr	r1, [fp, #-36]	; 0xffffffdc
     814:	subs	r0, r0, #1
     818:	sbcs	r1, r1, #0
     81c:	str	r0, [sp, #96]	; 0x60
     820:	str	r1, [sp, #92]	; 0x5c
     824:	blt	8c4 <dim_enter_array+0x4cc>
     828:	b	82c <dim_enter_array+0x434>
     82c:	movw	r0, #0
     830:	str	r0, [fp, #-56]	; 0xffffffc8
     834:	ldr	r0, [fp, #-56]	; 0xffffffc8
     838:	ldr	r1, [fp, #-24]	; 0xffffffe8
     83c:	ldr	r1, [r1, #4]
     840:	cmp	r0, r1
     844:	bge	8c0 <dim_enter_array+0x4c8>
     848:	ldr	r0, [fp, #-24]	; 0xffffffe8
     84c:	ldr	r1, [fp, #-56]	; 0xffffffc8
     850:	add	r0, r0, r1, lsl #2
     854:	ldr	r0, [r0, #8]
     858:	ldr	r2, [fp, #-52]	; 0xffffffcc
     85c:	add	r1, r2, r1
     860:	movw	r2, #0
     864:	movt	r2, #0
     868:	add	r1, r2, r1, lsl #2
     86c:	str	r0, [r1, #4]
     870:	ldr	r0, [fp, #-52]	; 0xffffffcc
     874:	ldr	r1, [fp, #-56]	; 0xffffffc8
     878:	add	r0, r0, r1
     87c:	add	r0, r2, r0, lsl #2
     880:	mov	r1, #0
     884:	str	r1, [r0, #72]	; 0x48
     888:	ldr	r0, [fp, #-24]	; 0xffffffe8
     88c:	add	r0, r0, #8
     890:	ldr	r1, [fp, #-56]	; 0xffffffc8
     894:	add	r0, r0, r1, lsl #2
     898:	ldr	r0, [r0]
     89c:	cmn	r0, #1
     8a0:	bne	8ac <dim_enter_array+0x4b4>
     8a4:	movw	r0, #1
     8a8:	str	r0, [fp, #-44]	; 0xffffffd4
     8ac:	b	8b0 <dim_enter_array+0x4b8>
     8b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
     8b4:	add	r0, r0, #1
     8b8:	str	r0, [fp, #-56]	; 0xffffffc8
     8bc:	b	834 <dim_enter_array+0x43c>
     8c0:	b	940 <dim_enter_array+0x548>
     8c4:	movw	r0, #0
     8c8:	str	r0, [fp, #-56]	; 0xffffffc8
     8cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
     8d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     8d4:	ldr	r1, [r1, #4]
     8d8:	cmp	r0, r1
     8dc:	bge	93c <dim_enter_array+0x544>
     8e0:	movw	r0, #0
     8e4:	movt	r0, #0
     8e8:	add	r0, r0, #72	; 0x48
     8ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
     8f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     8f4:	add	r1, r1, r2
     8f8:	movw	r2, #0
     8fc:	movt	r2, #0
     900:	add	r1, r2, r1, lsl #2
     904:	mov	r3, #0
     908:	str	r3, [r1, #4]
     90c:	ldr	r1, [fp, #-52]	; 0xffffffcc
     910:	ldr	r3, [fp, #-56]	; 0xffffffc8
     914:	add	r1, r1, r3
     918:	add	r1, r2, r1, lsl #2
     91c:	add	r1, r1, #72	; 0x48
     920:	movw	r2, #0
     924:	str	r2, [r1]
     928:	str	r0, [sp, #88]	; 0x58
     92c:	ldr	r0, [fp, #-56]	; 0xffffffc8
     930:	add	r0, r0, #1
     934:	str	r0, [fp, #-56]	; 0xffffffc8
     938:	b	8cc <dim_enter_array+0x4d4>
     93c:	b	940 <dim_enter_array+0x548>
     940:	ldr	r0, [fp, #-44]	; 0xffffffd4
     944:	cmp	r0, #0
     948:	beq	c74 <dim_enter_array+0x87c>
     94c:	movw	r0, #0
     950:	str	r0, [fp, #-56]	; 0xffffffc8
     954:	ldr	r0, [fp, #-56]	; 0xffffffc8
     958:	ldr	r1, [fp, #-24]	; 0xffffffe8
     95c:	ldr	r1, [r1, #4]
     960:	cmp	r0, r1
     964:	bge	afc <dim_enter_array+0x704>
     968:	ldr	r0, [fp, #-24]	; 0xffffffe8
     96c:	add	r0, r0, #8
     970:	ldr	r1, [fp, #-56]	; 0xffffffc8
     974:	add	r0, r0, r1, lsl #2
     978:	ldr	r0, [r0]
     97c:	cmn	r0, #1
     980:	bne	a9c <dim_enter_array+0x6a4>
     984:	movw	r0, #0
     988:	movt	r0, #0
     98c:	add	r0, r0, #108	; 0x6c
     990:	ldr	r1, [fp, #-52]	; 0xffffffcc
     994:	ldr	r2, [fp, #-56]	; 0xffffffc8
     998:	add	r2, r1, r2
     99c:	movw	r3, #0
     9a0:	movt	r3, #0
     9a4:	add	r2, r3, r2, lsl #2
     9a8:	str	r1, [r2, #140]	; 0x8c
     9ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
     9b0:	lsl	r1, r1, #2
     9b4:	str	r0, [sp, #84]	; 0x54
     9b8:	mov	r0, r1
     9bc:	str	r3, [sp, #80]	; 0x50
     9c0:	bl	0 <malloc>
     9c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
     9c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     9cc:	add	r1, r1, r2
     9d0:	ldr	r2, [sp, #80]	; 0x50
     9d4:	add	r3, r2, #108	; 0x6c
     9d8:	str	r0, [r3, r1, lsl #2]
     9dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
     9e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
     9e4:	add	r0, r0, r1
     9e8:	add	r0, r3, r0, lsl #2
     9ec:	ldr	r0, [r0]
     9f0:	movw	r1, #0
     9f4:	cmp	r0, r1
     9f8:	bne	a30 <dim_enter_array+0x638>
     9fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     a00:	lsl	r2, r0, #2
     a04:	mvn	r0, #0
     a08:	movw	r1, #0
     a0c:	movt	r1, #0
     a10:	movw	r3, #0
     a14:	movt	r3, #0
     a18:	movw	ip, #456	; 0x1c8
     a1c:	str	ip, [sp]
     a20:	bl	0 <coda_set_error>
     a24:	movw	r0, #0
     a28:	movt	r0, #0
     a2c:	blx	r0
     a30:	movw	r0, #0
     a34:	str	r0, [fp, #-116]	; 0xffffff8c
     a38:	ldr	r0, [fp, #-116]	; 0xffffff8c
     a3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     a40:	ldr	r2, [fp, #-28]	; 0xffffffe4
     a44:	subs	r1, r0, r1
     a48:	rscs	r0, r2, r0, asr #31
     a4c:	str	r1, [sp, #76]	; 0x4c
     a50:	str	r0, [sp, #72]	; 0x48
     a54:	bge	a98 <dim_enter_array+0x6a0>
     a58:	b	a5c <dim_enter_array+0x664>
     a5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
     a60:	ldr	r1, [fp, #-56]	; 0xffffffc8
     a64:	add	r0, r0, r1
     a68:	movw	r1, #0
     a6c:	movt	r1, #0
     a70:	add	r0, r1, r0, lsl #2
     a74:	ldr	r0, [r0, #108]	; 0x6c
     a78:	ldr	r1, [fp, #-116]	; 0xffffff8c
     a7c:	add	r0, r0, r1, lsl #2
     a80:	mvn	r1, #0
     a84:	str	r1, [r0]
     a88:	ldr	r0, [fp, #-116]	; 0xffffff8c
     a8c:	add	r0, r0, #1
     a90:	str	r0, [fp, #-116]	; 0xffffff8c
     a94:	b	a38 <dim_enter_array+0x640>
     a98:	b	ae8 <dim_enter_array+0x6f0>
     a9c:	movw	r0, #0
     aa0:	movt	r0, #0
     aa4:	add	r0, r0, #108	; 0x6c
     aa8:	ldr	r1, [fp, #-52]	; 0xffffffcc
     aac:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ab0:	add	r1, r1, r2
     ab4:	movw	r2, #0
     ab8:	movt	r2, #0
     abc:	add	r1, r2, r1, lsl #2
     ac0:	mov	r3, #0
     ac4:	str	r3, [r1, #140]	; 0x8c
     ac8:	ldr	r1, [fp, #-52]	; 0xffffffcc
     acc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     ad0:	add	r1, r1, r3
     ad4:	add	r1, r2, r1, lsl #2
     ad8:	add	r1, r1, #108	; 0x6c
     adc:	movw	r2, #0
     ae0:	str	r2, [r1]
     ae4:	str	r0, [sp, #68]	; 0x44
     ae8:	b	aec <dim_enter_array+0x6f4>
     aec:	ldr	r0, [fp, #-56]	; 0xffffffc8
     af0:	add	r0, r0, #1
     af4:	str	r0, [fp, #-56]	; 0xffffffc8
     af8:	b	954 <dim_enter_array+0x55c>
     afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b00:	movw	r1, #0
     b04:	str	r1, [r0, #44]	; 0x2c
     b08:	mov	r0, r1
     b0c:	str	r1, [sp, #64]	; 0x40
     b10:	ldr	r2, [sp, #64]	; 0x40
     b14:	bl	11ac <get_all_dims_for_array>
     b18:	movw	r0, #0
     b1c:	str	r0, [fp, #-56]	; 0xffffffc8
     b20:	ldr	r0, [fp, #-56]	; 0xffffffc8
     b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b28:	ldr	r1, [r1, #4]
     b2c:	cmp	r0, r1
     b30:	bge	c70 <dim_enter_array+0x878>
     b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b38:	add	r0, r0, #8
     b3c:	ldr	r1, [fp, #-56]	; 0xffffffc8
     b40:	add	r0, r0, r1, lsl #2
     b44:	ldr	r0, [r0]
     b48:	cmn	r0, #1
     b4c:	bne	c5c <dim_enter_array+0x864>
     b50:	movw	r0, #0
     b54:	movt	r0, #0
     b58:	add	r0, r0, #36	; 0x24
     b5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
     b60:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b64:	add	r1, r1, r2
     b68:	movw	r2, #0
     b6c:	movt	r2, #0
     b70:	add	r1, r2, r1, lsl #2
     b74:	ldr	r2, [r1, #4]
     b78:	add	r1, r1, #36	; 0x24
     b7c:	ldr	r1, [r1]
     b80:	cmp	r2, r1
     b84:	str	r0, [sp, #60]	; 0x3c
     b88:	beq	bc8 <dim_enter_array+0x7d0>
     b8c:	movw	r0, #0
     b90:	movt	r0, #0
     b94:	add	r0, r0, #72	; 0x48
     b98:	ldr	r1, [fp, #-52]	; 0xffffffcc
     b9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ba0:	add	r1, r1, r2
     ba4:	movw	r2, #0
     ba8:	movt	r2, #0
     bac:	add	r1, r2, r1, lsl #2
     bb0:	add	r1, r1, #72	; 0x48
     bb4:	movw	r2, #1
     bb8:	str	r2, [r1]
     bbc:	str	r2, [fp, #-48]	; 0xffffffd0
     bc0:	str	r0, [sp, #56]	; 0x38
     bc4:	b	c58 <dim_enter_array+0x860>
     bc8:	movw	r0, #0
     bcc:	movt	r0, #0
     bd0:	add	r0, r0, #140	; 0x8c
     bd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
     bd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     bdc:	add	r1, r1, r2
     be0:	movw	r2, #0
     be4:	movt	r2, #0
     be8:	add	r1, r2, r1, lsl #2
     bec:	mov	r3, #0
     bf0:	str	r3, [r1, #72]	; 0x48
     bf4:	ldr	r1, [fp, #-52]	; 0xffffffcc
     bf8:	ldr	ip, [fp, #-56]	; 0xffffffc8
     bfc:	add	r1, r1, ip
     c00:	add	ip, r2, #108	; 0x6c
     c04:	ldr	r1, [ip, r1, lsl #2]
     c08:	str	r0, [sp, #52]	; 0x34
     c0c:	mov	r0, r1
     c10:	str	ip, [sp, #48]	; 0x30
     c14:	str	r2, [sp, #44]	; 0x2c
     c18:	str	r3, [sp, #40]	; 0x28
     c1c:	bl	0 <free>
     c20:	ldr	r0, [fp, #-52]	; 0xffffffcc
     c24:	ldr	r1, [fp, #-56]	; 0xffffffc8
     c28:	add	r0, r0, r1
     c2c:	ldr	r1, [sp, #40]	; 0x28
     c30:	ldr	r2, [sp, #48]	; 0x30
     c34:	str	r1, [r2, r0, lsl #2]
     c38:	ldr	r0, [fp, #-52]	; 0xffffffcc
     c3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     c40:	add	r0, r0, r3
     c44:	ldr	r3, [sp, #44]	; 0x2c
     c48:	add	r0, r3, r0, lsl #2
     c4c:	add	r0, r0, #140	; 0x8c
     c50:	movw	ip, #0
     c54:	str	ip, [r0]
     c58:	b	c5c <dim_enter_array+0x864>
     c5c:	b	c60 <dim_enter_array+0x868>
     c60:	ldr	r0, [fp, #-56]	; 0xffffffc8
     c64:	add	r0, r0, #1
     c68:	str	r0, [fp, #-56]	; 0xffffffc8
     c6c:	b	b20 <dim_enter_array+0x728>
     c70:	b	c74 <dim_enter_array+0x87c>
     c74:	movw	r0, #0
     c78:	movt	r0, #0
     c7c:	movw	r1, #0
     c80:	str	r1, [r0, #68]	; 0x44
     c84:	mvn	r2, #0
     c88:	str	r2, [r0, #104]	; 0x68
     c8c:	str	r1, [fp, #-56]	; 0xffffffc8
     c90:	ldr	r0, [fp, #-56]	; 0xffffffc8
     c94:	movw	r1, #0
     c98:	movt	r1, #0
     c9c:	ldr	r1, [r1]
     ca0:	cmp	r0, r1
     ca4:	bge	d04 <dim_enter_array+0x90c>
     ca8:	movw	r0, #0
     cac:	movt	r0, #0
     cb0:	add	r0, r0, #72	; 0x48
     cb4:	ldr	r1, [fp, #-56]	; 0xffffffc8
     cb8:	movw	r2, #0
     cbc:	movt	r2, #0
     cc0:	add	r1, r2, r1, lsl #2
     cc4:	add	r1, r1, #72	; 0x48
     cc8:	ldr	r1, [r1]
     ccc:	cmp	r1, #0
     cd0:	str	r0, [sp, #36]	; 0x24
     cd4:	beq	cf0 <dim_enter_array+0x8f8>
     cd8:	movw	r0, #1
     cdc:	movw	r1, #0
     ce0:	movt	r1, #0
     ce4:	str	r0, [r1, #68]	; 0x44
     ce8:	ldr	r0, [fp, #-56]	; 0xffffffc8
     cec:	str	r0, [r1, #104]	; 0x68
     cf0:	b	cf4 <dim_enter_array+0x8fc>
     cf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
     cf8:	add	r0, r0, #1
     cfc:	str	r0, [fp, #-56]	; 0xffffffc8
     d00:	b	c90 <dim_enter_array+0x898>
     d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d08:	movw	r1, #1
     d0c:	str	r1, [r0, #40]	; 0x28
     d10:	movw	r0, #0
     d14:	str	r0, [fp, #-56]	; 0xffffffc8
     d18:	ldr	r0, [fp, #-56]	; 0xffffffc8
     d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d20:	ldr	r1, [r1, #4]
     d24:	cmp	r0, r1
     d28:	bge	e08 <dim_enter_array+0xa10>
     d2c:	movw	r0, #0
     d30:	movt	r0, #0
     d34:	add	r0, r0, #4
     d38:	ldr	r1, [fp, #-52]	; 0xffffffcc
     d3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d40:	add	r1, r1, r2
     d44:	movw	r2, #0
     d48:	movt	r2, #0
     d4c:	add	r1, r2, r1, lsl #2
     d50:	add	r1, r1, #4
     d54:	ldr	r1, [r1]
     d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d5c:	ldr	r3, [r2, #40]	; 0x28
     d60:	mul	r1, r3, r1
     d64:	str	r1, [r2, #40]	; 0x28
     d68:	ldr	r1, [fp, #-56]	; 0xffffffc8
     d6c:	cmp	r1, #0
     d70:	str	r0, [sp, #32]
     d74:	bne	db4 <dim_enter_array+0x9bc>
     d78:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     d80:	ldr	r2, [fp, #-52]	; 0xffffffcc
     d84:	movw	r3, #0
     d88:	movt	r3, #0
     d8c:	add	ip, r3, r2, lsl #2
     d90:	ldr	ip, [ip, #4]
     d94:	asr	lr, ip, #31
     d98:	umull	r4, r5, r0, ip
     d9c:	mla	r0, r0, lr, r5
     da0:	mla	r0, r1, ip, r0
     da4:	add	r1, r3, r2, lsl #3
     da8:	str	r4, [r1, #240]	; 0xf0
     dac:	str	r0, [r1, #244]	; 0xf4
     db0:	b	df4 <dim_enter_array+0x9fc>
     db4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     db8:	ldr	r1, [fp, #-56]	; 0xffffffc8
     dbc:	add	r0, r0, r1
     dc0:	movw	r1, #0
     dc4:	movt	r1, #0
     dc8:	add	r2, r1, r0, lsl #3
     dcc:	ldr	r3, [r2, #232]	; 0xe8
     dd0:	ldr	ip, [r2, #236]	; 0xec
     dd4:	add	r0, r1, r0, lsl #2
     dd8:	ldr	r0, [r0, #4]
     ddc:	asr	r1, r0, #31
     de0:	umull	lr, r4, r3, r0
     de4:	mla	r1, r3, r1, r4
     de8:	mla	r0, ip, r0, r1
     dec:	str	lr, [r2, #240]	; 0xf0
     df0:	str	r0, [r2, #244]	; 0xf4
     df4:	b	df8 <dim_enter_array+0xa00>
     df8:	ldr	r0, [fp, #-56]	; 0xffffffc8
     dfc:	add	r0, r0, #1
     e00:	str	r0, [fp, #-56]	; 0xffffffc8
     e04:	b	d18 <dim_enter_array+0x920>
     e08:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e0c:	cmp	r0, #0
     e10:	beq	fbc <dim_enter_array+0xbc4>
     e14:	movw	r0, #0
     e18:	str	r0, [fp, #-56]	; 0xffffffc8
     e1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
     e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e24:	ldr	r1, [r1, #4]
     e28:	cmp	r0, r1
     e2c:	bge	e64 <dim_enter_array+0xa6c>
     e30:	ldr	r0, [fp, #-52]	; 0xffffffcc
     e34:	ldr	r1, [fp, #-56]	; 0xffffffc8
     e38:	add	r0, r0, r1
     e3c:	movw	r1, #0
     e40:	movt	r1, #0
     e44:	add	r0, r1, r0, lsl #3
     e48:	mov	r1, #0
     e4c:	str	r1, [r0, #308]	; 0x134
     e50:	str	r1, [r0, #304]	; 0x130
     e54:	ldr	r0, [fp, #-56]	; 0xffffffc8
     e58:	add	r0, r0, #1
     e5c:	str	r0, [fp, #-56]	; 0xffffffc8
     e60:	b	e1c <dim_enter_array+0xa24>
     e64:	movw	r0, #0
     e68:	str	r0, [fp, #-120]	; 0xffffff88
     e6c:	ldr	r0, [fp, #-120]	; 0xffffff88
     e70:	ldr	r1, [fp, #-32]	; 0xffffffe0
     e74:	ldr	r2, [fp, #-28]	; 0xffffffe4
     e78:	subs	r1, r0, r1
     e7c:	rscs	r0, r2, r0, asr #31
     e80:	str	r1, [sp, #28]
     e84:	str	r0, [sp, #24]
     e88:	bge	fb8 <dim_enter_array+0xbc0>
     e8c:	b	e90 <dim_enter_array+0xa98>
     e90:	movw	r0, #1
     e94:	str	r0, [sp, #124]	; 0x7c
     e98:	movw	r0, #0
     e9c:	str	r0, [fp, #-56]	; 0xffffffc8
     ea0:	ldr	r0, [fp, #-56]	; 0xffffffc8
     ea4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ea8:	ldr	r1, [r1, #4]
     eac:	cmp	r0, r1
     eb0:	bge	fa4 <dim_enter_array+0xbac>
     eb4:	movw	r0, #0
     eb8:	movt	r0, #0
     ebc:	add	r0, r0, #72	; 0x48
     ec0:	ldr	r1, [fp, #-52]	; 0xffffffcc
     ec4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ec8:	add	r1, r1, r2
     ecc:	movw	r2, #0
     ed0:	movt	r2, #0
     ed4:	add	r1, r2, r1, lsl #2
     ed8:	add	r1, r1, #72	; 0x48
     edc:	ldr	r1, [r1]
     ee0:	cmp	r1, #0
     ee4:	str	r0, [sp, #20]
     ee8:	beq	f24 <dim_enter_array+0xb2c>
     eec:	ldr	r0, [fp, #-52]	; 0xffffffcc
     ef0:	ldr	r1, [fp, #-56]	; 0xffffffc8
     ef4:	add	r0, r0, r1
     ef8:	movw	r1, #0
     efc:	movt	r1, #0
     f00:	add	r0, r1, r0, lsl #2
     f04:	ldr	r0, [r0, #108]	; 0x6c
     f08:	ldr	r1, [fp, #-120]	; 0xffffff88
     f0c:	add	r0, r0, r1, lsl #2
     f10:	ldr	r0, [r0]
     f14:	ldr	r1, [sp, #124]	; 0x7c
     f18:	mul	r0, r1, r0
     f1c:	str	r0, [sp, #124]	; 0x7c
     f20:	b	f60 <dim_enter_array+0xb68>
     f24:	movw	r0, #0
     f28:	movt	r0, #0
     f2c:	add	r0, r0, #4
     f30:	ldr	r1, [fp, #-52]	; 0xffffffcc
     f34:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f38:	add	r1, r1, r2
     f3c:	movw	r2, #0
     f40:	movt	r2, #0
     f44:	add	r1, r2, r1, lsl #2
     f48:	add	r1, r1, #4
     f4c:	ldr	r1, [r1]
     f50:	ldr	r2, [sp, #124]	; 0x7c
     f54:	mul	r1, r2, r1
     f58:	str	r1, [sp, #124]	; 0x7c
     f5c:	str	r0, [sp, #16]
     f60:	ldr	r0, [sp, #124]	; 0x7c
     f64:	ldr	r1, [fp, #-52]	; 0xffffffcc
     f68:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f6c:	add	r1, r1, r2
     f70:	movw	r2, #0
     f74:	movt	r2, #0
     f78:	add	r1, r2, r1, lsl #3
     f7c:	ldr	r2, [r1, #304]	; 0x130
     f80:	ldr	r3, [r1, #308]	; 0x134
     f84:	adds	r2, r2, r0
     f88:	adc	r0, r3, r0, asr #31
     f8c:	str	r2, [r1, #304]	; 0x130
     f90:	str	r0, [r1, #308]	; 0x134
     f94:	ldr	r0, [fp, #-56]	; 0xffffffc8
     f98:	add	r0, r0, #1
     f9c:	str	r0, [fp, #-56]	; 0xffffffc8
     fa0:	b	ea0 <dim_enter_array+0xaa8>
     fa4:	b	fa8 <dim_enter_array+0xbb0>
     fa8:	ldr	r0, [fp, #-120]	; 0xffffff88
     fac:	add	r0, r0, #1
     fb0:	str	r0, [fp, #-120]	; 0xffffff88
     fb4:	b	e6c <dim_enter_array+0xa74>
     fb8:	b	1064 <dim_enter_array+0xc6c>
     fbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     fc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
     fc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
     fc8:	movw	r3, #0
     fcc:	movt	r3, #0
     fd0:	add	ip, r3, r2, lsl #2
     fd4:	ldr	ip, [ip, #4]
     fd8:	asr	lr, ip, #31
     fdc:	umull	r4, r5, r0, ip
     fe0:	mla	r0, r0, lr, r5
     fe4:	mla	r0, r1, ip, r0
     fe8:	add	r1, r3, r2, lsl #3
     fec:	str	r4, [r1, #304]	; 0x130
     ff0:	str	r0, [r1, #308]	; 0x134
     ff4:	movw	r0, #1
     ff8:	str	r0, [fp, #-56]	; 0xffffffc8
     ffc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1000:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1004:	ldr	r1, [r1, #4]
    1008:	cmp	r0, r1
    100c:	bge	1060 <dim_enter_array+0xc68>
    1010:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1014:	ldr	r1, [fp, #-56]	; 0xffffffc8
    1018:	add	r0, r0, r1
    101c:	movw	r1, #0
    1020:	movt	r1, #0
    1024:	add	r2, r1, r0, lsl #3
    1028:	ldr	r3, [r2, #296]	; 0x128
    102c:	ldr	ip, [r2, #300]	; 0x12c
    1030:	add	r0, r1, r0, lsl #2
    1034:	ldr	r0, [r0, #4]
    1038:	asr	r1, r0, #31
    103c:	umull	lr, r4, r3, r0
    1040:	mla	r1, r3, r1, r4
    1044:	mla	r0, ip, r0, r1
    1048:	str	lr, [r2, #304]	; 0x130
    104c:	str	r0, [r2, #308]	; 0x134
    1050:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1054:	add	r0, r0, #1
    1058:	str	r0, [fp, #-56]	; 0xffffffc8
    105c:	b	ffc <dim_enter_array+0xc04>
    1060:	b	1064 <dim_enter_array+0xc6c>
    1064:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1068:	ldr	r1, [fp, #-24]	; 0xffffffe8
    106c:	ldr	r1, [r1, #4]
    1070:	add	r0, r0, r1
    1074:	movw	r1, #0
    1078:	movt	r1, #0
    107c:	add	r0, r1, r0, lsl #3
    1080:	ldr	r1, [r0, #296]	; 0x128
    1084:	ldr	r0, [r0, #300]	; 0x12c
    1088:	subs	r1, r1, #1
    108c:	sbcs	r0, r0, #0
    1090:	str	r1, [sp, #12]
    1094:	str	r0, [sp, #8]
    1098:	blt	11a4 <dim_enter_array+0xdac>
    109c:	b	10a0 <dim_enter_array+0xca8>
    10a0:	movw	r0, #0
    10a4:	movt	r0, #0
    10a8:	ldr	r1, [r0]
    10ac:	sub	r1, r1, #1
    10b0:	add	r2, r0, r1, lsl #2
    10b4:	ldr	r2, [r2, #4]
    10b8:	asr	r3, r2, #31
    10bc:	add	r0, r0, r1, lsl #3
    10c0:	str	r2, [r0, #176]	; 0xb0
    10c4:	str	r3, [r0, #180]	; 0xb4
    10c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10cc:	ldr	r0, [r0, #4]
    10d0:	sub	r0, r0, #2
    10d4:	str	r0, [fp, #-56]	; 0xffffffc8
    10d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    10dc:	cmp	r0, #0
    10e0:	blt	1138 <dim_enter_array+0xd40>
    10e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    10e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    10ec:	add	r0, r0, r1
    10f0:	movw	r1, #0
    10f4:	movt	r1, #0
    10f8:	add	r2, r1, r0, lsl #2
    10fc:	ldr	r2, [r2, #4]
    1100:	asr	r3, r2, #31
    1104:	add	r0, r1, r0, lsl #3
    1108:	ldr	r1, [r0, #184]	; 0xb8
    110c:	ldr	ip, [r0, #188]	; 0xbc
    1110:	umull	lr, r4, r2, r1
    1114:	mla	r2, r2, ip, r4
    1118:	mla	r1, r3, r1, r2
    111c:	str	lr, [r0, #176]	; 0xb0
    1120:	str	r1, [r0, #180]	; 0xb4
    1124:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1128:	mvn	r1, #0
    112c:	add	r0, r0, r1
    1130:	str	r0, [fp, #-56]	; 0xffffffc8
    1134:	b	10d8 <dim_enter_array+0xce0>
    1138:	ldr	r0, [fp, #-52]	; 0xffffffcc
    113c:	sub	r0, r0, #1
    1140:	str	r0, [fp, #-56]	; 0xffffffc8
    1144:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1148:	cmp	r0, #0
    114c:	blt	11a0 <dim_enter_array+0xda8>
    1150:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1154:	movw	r1, #0
    1158:	movt	r1, #0
    115c:	add	r1, r1, #176	; 0xb0
    1160:	mov	r2, r1
    1164:	ldr	r0, [r2, r0, lsl #3]!
    1168:	ldr	r2, [r2, #4]
    116c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1170:	ldr	r3, [r1, r3, lsl #3]!
    1174:	ldr	ip, [r1, #4]
    1178:	umull	lr, r4, r3, r0
    117c:	mla	r2, r3, r2, r4
    1180:	mla	r0, ip, r0, r2
    1184:	str	lr, [r1]
    1188:	str	r0, [r1, #4]
    118c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1190:	mvn	r1, #0
    1194:	add	r0, r0, r1
    1198:	str	r0, [fp, #-56]	; 0xffffffc8
    119c:	b	1144 <dim_enter_array+0xd4c>
    11a0:	b	11a4 <dim_enter_array+0xdac>
    11a4:	sub	sp, fp, #16
    11a8:	pop	{r4, r5, r6, r7, fp, pc}

000011ac <get_all_dims_for_array>:
    11ac:	push	{fp, lr}
    11b0:	mov	fp, sp
    11b4:	sub	sp, sp, #208	; 0xd0
    11b8:	movw	r3, #0
    11bc:	movt	r3, #0
    11c0:	add	r3, r3, #144	; 0x90
    11c4:	str	r0, [fp, #-4]
    11c8:	str	r1, [fp, #-8]
    11cc:	str	r2, [fp, #-12]
    11d0:	mov	r0, r3
    11d4:	sub	r1, fp, #16
    11d8:	bl	0 <coda_cursor_get_type_class>
    11dc:	cmp	r0, #0
    11e0:	beq	11f0 <get_all_dims_for_array+0x44>
    11e4:	movw	r0, #0
    11e8:	movt	r0, #0
    11ec:	blx	r0
    11f0:	ldr	r0, [fp, #-16]
    11f4:	cmp	r0, #0
    11f8:	str	r0, [sp, #88]	; 0x58
    11fc:	beq	16c0 <get_all_dims_for_array+0x514>
    1200:	b	1204 <get_all_dims_for_array+0x58>
    1204:	ldr	r0, [sp, #88]	; 0x58
    1208:	cmp	r0, #1
    120c:	beq	1228 <get_all_dims_for_array+0x7c>
    1210:	b	1214 <get_all_dims_for_array+0x68>
    1214:	ldr	r0, [sp, #88]	; 0x58
    1218:	sub	r1, r0, #4
    121c:	cmp	r1, #2
    1220:	bcc	18ec <get_all_dims_for_array+0x740>
    1224:	b	1b18 <get_all_dims_for_array+0x96c>
    1228:	movw	r0, #0
    122c:	movt	r0, #0
    1230:	add	r1, r0, #800	; 0x320
    1234:	ldr	r2, [fp, #-8]
    1238:	movw	r3, #80	; 0x50
    123c:	mul	r2, r2, r3
    1240:	add	r1, r1, r2
    1244:	str	r1, [fp, #-20]	; 0xffffffec
    1248:	ldr	r1, [fp, #-20]	; 0xffffffec
    124c:	ldr	r1, [r1]
    1250:	str	r1, [fp, #-24]	; 0xffffffe8
    1254:	ldr	r1, [fp, #-8]
    1258:	ldr	r0, [r0, #3360]	; 0xd20
    125c:	cmp	r1, r0
    1260:	bne	14a4 <get_all_dims_for_array+0x2f8>
    1264:	movw	r0, #0
    1268:	movt	r0, #0
    126c:	add	r0, r0, #144	; 0x90
    1270:	sub	r2, fp, #56	; 0x38
    1274:	sub	r1, fp, #60	; 0x3c
    1278:	bl	0 <coda_cursor_get_array_dim>
    127c:	cmp	r0, #0
    1280:	beq	1290 <get_all_dims_for_array+0xe4>
    1284:	movw	r0, #0
    1288:	movt	r0, #0
    128c:	blx	r0
    1290:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1294:	ldr	r1, [fp, #-20]	; 0xffffffec
    1298:	ldr	r1, [r1, #4]
    129c:	cmp	r0, r1
    12a0:	bne	12a8 <get_all_dims_for_array+0xfc>
    12a4:	b	12c8 <get_all_dims_for_array+0x11c>
    12a8:	movw	r0, #0
    12ac:	movt	r0, #0
    12b0:	movw	r1, #0
    12b4:	movt	r1, #0
    12b8:	movw	r2, #125	; 0x7d
    12bc:	movw	r3, #0
    12c0:	movt	r3, #0
    12c4:	bl	0 <__assert_fail>
    12c8:	movw	r0, #0
    12cc:	str	r0, [fp, #-64]	; 0xffffffc0
    12d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    12d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    12d8:	ldr	r1, [r1, #4]
    12dc:	cmp	r0, r1
    12e0:	bge	14a0 <get_all_dims_for_array+0x2f4>
    12e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    12e8:	add	r0, r0, #8
    12ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
    12f0:	add	r0, r0, r1, lsl #2
    12f4:	ldr	r0, [r0]
    12f8:	cmn	r0, #1
    12fc:	bne	148c <get_all_dims_for_array+0x2e0>
    1300:	movw	r0, #0
    1304:	movt	r0, #0
    1308:	add	r0, r0, #4
    130c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1310:	sub	r2, fp, #56	; 0x38
    1314:	ldr	r2, [r2, r1, lsl #2]
    1318:	ldr	r3, [fp, #-24]	; 0xffffffe8
    131c:	add	r1, r3, r1
    1320:	movw	r3, #0
    1324:	movt	r3, #0
    1328:	add	r1, r3, r1, lsl #2
    132c:	ldr	r1, [r1, #108]	; 0x6c
    1330:	ldr	ip, [fp, #-20]	; 0xffffffec
    1334:	ldr	ip, [ip, #44]	; 0x2c
    1338:	str	r2, [r1, ip, lsl #2]
    133c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1340:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1344:	add	r1, r1, r2
    1348:	add	r1, r3, r1, lsl #2
    134c:	add	r1, r1, #4
    1350:	ldr	r1, [r1]
    1354:	cmn	r1, #1
    1358:	str	r0, [sp, #84]	; 0x54
    135c:	bne	13b4 <get_all_dims_for_array+0x208>
    1360:	movw	r0, #0
    1364:	movt	r0, #0
    1368:	add	r0, r0, #36	; 0x24
    136c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1370:	sub	r2, fp, #56	; 0x38
    1374:	ldr	r3, [r2, r1, lsl #2]
    1378:	ldr	ip, [fp, #-24]	; 0xffffffe8
    137c:	add	r1, ip, r1
    1380:	movw	ip, #0
    1384:	movt	ip, #0
    1388:	add	r1, ip, r1, lsl #2
    138c:	str	r3, [r1, #4]
    1390:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1394:	ldr	r2, [r2, r1, lsl #2]
    1398:	ldr	r3, [fp, #-24]	; 0xffffffe8
    139c:	add	r1, r3, r1
    13a0:	add	r1, ip, r1, lsl #2
    13a4:	add	r1, r1, #36	; 0x24
    13a8:	str	r2, [r1]
    13ac:	str	r0, [sp, #80]	; 0x50
    13b0:	b	1488 <get_all_dims_for_array+0x2dc>
    13b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
    13bc:	add	r0, r0, r1
    13c0:	movw	r2, #0
    13c4:	movt	r2, #0
    13c8:	add	r0, r2, r0, lsl #2
    13cc:	ldr	r0, [r0, #4]
    13d0:	sub	r2, fp, #56	; 0x38
    13d4:	add	r1, r2, r1, lsl #2
    13d8:	ldr	r1, [r1]
    13dc:	cmp	r0, r1
    13e0:	bge	141c <get_all_dims_for_array+0x270>
    13e4:	movw	r0, #0
    13e8:	movt	r0, #0
    13ec:	add	r0, r0, #4
    13f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    13f4:	sub	r2, fp, #56	; 0x38
    13f8:	ldr	r2, [r2, r1, lsl #2]
    13fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1400:	add	r1, r3, r1
    1404:	movw	r3, #0
    1408:	movt	r3, #0
    140c:	add	r1, r3, r1, lsl #2
    1410:	add	r1, r1, #4
    1414:	str	r2, [r1]
    1418:	str	r0, [sp, #76]	; 0x4c
    141c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1420:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1424:	add	r0, r0, r1
    1428:	movw	r2, #0
    142c:	movt	r2, #0
    1430:	add	r0, r2, r0, lsl #2
    1434:	ldr	r0, [r0, #36]	; 0x24
    1438:	sub	r2, fp, #56	; 0x38
    143c:	add	r1, r2, r1, lsl #2
    1440:	ldr	r1, [r1]
    1444:	cmp	r0, r1
    1448:	ble	1484 <get_all_dims_for_array+0x2d8>
    144c:	movw	r0, #0
    1450:	movt	r0, #0
    1454:	add	r0, r0, #36	; 0x24
    1458:	ldr	r1, [fp, #-64]	; 0xffffffc0
    145c:	sub	r2, fp, #56	; 0x38
    1460:	ldr	r2, [r2, r1, lsl #2]
    1464:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1468:	add	r1, r3, r1
    146c:	movw	r3, #0
    1470:	movt	r3, #0
    1474:	add	r1, r3, r1, lsl #2
    1478:	add	r1, r1, #36	; 0x24
    147c:	str	r2, [r1]
    1480:	str	r0, [sp, #72]	; 0x48
    1484:	b	1488 <get_all_dims_for_array+0x2dc>
    1488:	b	148c <get_all_dims_for_array+0x2e0>
    148c:	b	1490 <get_all_dims_for_array+0x2e4>
    1490:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1494:	add	r0, r0, #1
    1498:	str	r0, [fp, #-64]	; 0xffffffc0
    149c:	b	12d0 <get_all_dims_for_array+0x124>
    14a0:	b	16bc <get_all_dims_for_array+0x510>
    14a4:	ldr	r0, [fp, #-8]
    14a8:	cmp	r0, #0
    14ac:	bne	14bc <get_all_dims_for_array+0x310>
    14b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    14b4:	movw	r1, #0
    14b8:	str	r1, [r0, #44]	; 0x2c
    14bc:	movw	r0, #0
    14c0:	movt	r0, #0
    14c4:	add	r0, r0, #800	; 0x320
    14c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    14cc:	ldr	r1, [r1, #44]	; 0x2c
    14d0:	ldr	r2, [fp, #-20]	; 0xffffffec
    14d4:	ldr	r2, [r2, #40]	; 0x28
    14d8:	mul	r1, r1, r2
    14dc:	ldr	r2, [fp, #-8]
    14e0:	add	r2, r2, #1
    14e4:	movw	r3, #80	; 0x50
    14e8:	mul	r2, r2, r3
    14ec:	add	r0, r0, r2
    14f0:	str	r1, [r0, #44]	; 0x2c
    14f4:	movw	r0, #1
    14f8:	str	r0, [fp, #-68]	; 0xffffffbc
    14fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1500:	str	r0, [fp, #-72]	; 0xffffffb8
    1504:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1508:	ldr	r1, [fp, #-24]	; 0xffffffe8
    150c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1510:	ldr	r2, [r2, #4]
    1514:	add	r1, r1, r2
    1518:	cmp	r0, r1
    151c:	bge	15cc <get_all_dims_for_array+0x420>
    1520:	movw	r0, #0
    1524:	movt	r0, #0
    1528:	add	r0, r0, #72	; 0x48
    152c:	ldr	r1, [fp, #-72]	; 0xffffffb8
    1530:	movw	r2, #0
    1534:	movt	r2, #0
    1538:	add	r1, r2, r1, lsl #2
    153c:	add	r1, r1, #72	; 0x48
    1540:	ldr	r1, [r1]
    1544:	cmp	r1, #0
    1548:	str	r0, [sp, #68]	; 0x44
    154c:	beq	1584 <get_all_dims_for_array+0x3d8>
    1550:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1554:	movw	r1, #0
    1558:	movt	r1, #0
    155c:	add	r0, r1, r0, lsl #2
    1560:	ldr	r0, [r0, #108]	; 0x6c
    1564:	ldr	r1, [fp, #-20]	; 0xffffffec
    1568:	ldr	r1, [r1, #44]	; 0x2c
    156c:	add	r0, r0, r1, lsl #2
    1570:	ldr	r0, [r0]
    1574:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1578:	mul	r0, r1, r0
    157c:	str	r0, [fp, #-68]	; 0xffffffbc
    1580:	b	15b8 <get_all_dims_for_array+0x40c>
    1584:	movw	r0, #0
    1588:	movt	r0, #0
    158c:	add	r0, r0, #4
    1590:	ldr	r1, [fp, #-72]	; 0xffffffb8
    1594:	movw	r2, #0
    1598:	movt	r2, #0
    159c:	add	r1, r2, r1, lsl #2
    15a0:	add	r1, r1, #4
    15a4:	ldr	r1, [r1]
    15a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
    15ac:	mul	r1, r2, r1
    15b0:	str	r1, [fp, #-68]	; 0xffffffbc
    15b4:	str	r0, [sp, #64]	; 0x40
    15b8:	b	15bc <get_all_dims_for_array+0x410>
    15bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    15c0:	add	r0, r0, #1
    15c4:	str	r0, [fp, #-72]	; 0xffffffb8
    15c8:	b	1504 <get_all_dims_for_array+0x358>
    15cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
    15d0:	cmp	r0, #0
    15d4:	ble	16b8 <get_all_dims_for_array+0x50c>
    15d8:	movw	r0, #0
    15dc:	movt	r0, #0
    15e0:	add	r0, r0, #144	; 0x90
    15e4:	bl	0 <coda_cursor_goto_first_array_element>
    15e8:	cmp	r0, #0
    15ec:	beq	15fc <get_all_dims_for_array+0x450>
    15f0:	movw	r0, #0
    15f4:	movt	r0, #0
    15f8:	blx	r0
    15fc:	movw	r0, #0
    1600:	str	r0, [fp, #-76]	; 0xffffffb4
    1604:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1608:	ldr	r1, [fp, #-68]	; 0xffffffbc
    160c:	cmp	r0, r1
    1610:	bge	16a4 <get_all_dims_for_array+0x4f8>
    1614:	ldr	r0, [fp, #-4]
    1618:	add	r0, r0, #1
    161c:	ldr	r1, [fp, #-8]
    1620:	add	r1, r1, #1
    1624:	ldr	r2, [fp, #-12]
    1628:	bl	11ac <get_all_dims_for_array>
    162c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1630:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1634:	sub	r1, r1, #1
    1638:	cmp	r0, r1
    163c:	bge	1690 <get_all_dims_for_array+0x4e4>
    1640:	movw	r0, #0
    1644:	movt	r0, #0
    1648:	add	r0, r0, #144	; 0x90
    164c:	bl	0 <coda_cursor_goto_next_array_element>
    1650:	cmp	r0, #0
    1654:	beq	1664 <get_all_dims_for_array+0x4b8>
    1658:	movw	r0, #0
    165c:	movt	r0, #0
    1660:	blx	r0
    1664:	movw	r0, #0
    1668:	movt	r0, #0
    166c:	add	r0, r0, #800	; 0x320
    1670:	ldr	r1, [fp, #-8]
    1674:	add	r1, r1, #1
    1678:	movw	r2, #80	; 0x50
    167c:	mul	r1, r1, r2
    1680:	add	r0, r0, r1
    1684:	ldr	r1, [r0, #44]	; 0x2c
    1688:	add	r1, r1, #1
    168c:	str	r1, [r0, #44]	; 0x2c
    1690:	b	1694 <get_all_dims_for_array+0x4e8>
    1694:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1698:	add	r0, r0, #1
    169c:	str	r0, [fp, #-76]	; 0xffffffb4
    16a0:	b	1604 <get_all_dims_for_array+0x458>
    16a4:	movw	r0, #0
    16a8:	movt	r0, #0
    16ac:	add	r0, r0, #144	; 0x90
    16b0:	bl	0 <coda_cursor_goto_parent>
    16b4:	str	r0, [sp, #60]	; 0x3c
    16b8:	b	16bc <get_all_dims_for_array+0x510>
    16bc:	b	1b38 <get_all_dims_for_array+0x98c>
    16c0:	movw	r0, #0
    16c4:	movt	r0, #0
    16c8:	add	r1, r0, #144	; 0x90
    16cc:	movw	r2, #3492	; 0xda4
    16d0:	add	r0, r0, r2
    16d4:	ldr	r2, [fp, #-12]
    16d8:	movw	r3, #0
    16dc:	movt	r3, #0
    16e0:	add	r2, r3, r2, lsl #2
    16e4:	movw	r3, #3492	; 0xda4
    16e8:	add	r2, r2, r3
    16ec:	ldr	r2, [r2]
    16f0:	str	r0, [sp, #56]	; 0x38
    16f4:	mov	r0, r1
    16f8:	mov	r1, r2
    16fc:	sub	r2, fp, #80	; 0x50
    1700:	bl	0 <coda_cursor_get_record_field_available_status>
    1704:	cmp	r0, #0
    1708:	beq	1718 <get_all_dims_for_array+0x56c>
    170c:	movw	r0, #0
    1710:	movt	r0, #0
    1714:	blx	r0
    1718:	ldr	r0, [fp, #-80]	; 0xffffffb0
    171c:	cmp	r0, #0
    1720:	beq	17a8 <get_all_dims_for_array+0x5fc>
    1724:	movw	r0, #0
    1728:	movt	r0, #0
    172c:	add	r1, r0, #144	; 0x90
    1730:	movw	r2, #3492	; 0xda4
    1734:	add	r0, r0, r2
    1738:	ldr	r2, [fp, #-12]
    173c:	movw	r3, #0
    1740:	movt	r3, #0
    1744:	add	r2, r3, r2, lsl #2
    1748:	movw	r3, #3492	; 0xda4
    174c:	add	r2, r2, r3
    1750:	ldr	r2, [r2]
    1754:	str	r0, [sp, #52]	; 0x34
    1758:	mov	r0, r1
    175c:	mov	r1, r2
    1760:	bl	0 <coda_cursor_goto_record_field_by_index>
    1764:	cmp	r0, #0
    1768:	beq	1778 <get_all_dims_for_array+0x5cc>
    176c:	movw	r0, #0
    1770:	movt	r0, #0
    1774:	blx	r0
    1778:	ldr	r0, [fp, #-4]
    177c:	add	r0, r0, #1
    1780:	ldr	r1, [fp, #-8]
    1784:	ldr	r2, [fp, #-12]
    1788:	add	r2, r2, #1
    178c:	bl	11ac <get_all_dims_for_array>
    1790:	movw	r0, #0
    1794:	movt	r0, #0
    1798:	add	r0, r0, #144	; 0x90
    179c:	bl	0 <coda_cursor_goto_parent>
    17a0:	str	r0, [sp, #48]	; 0x30
    17a4:	b	18e8 <get_all_dims_for_array+0x73c>
    17a8:	movw	r0, #0
    17ac:	movt	r0, #0
    17b0:	add	r1, r0, #800	; 0x320
    17b4:	ldr	r0, [r0, #3360]	; 0xd20
    17b8:	movw	r2, #80	; 0x50
    17bc:	mul	r0, r0, r2
    17c0:	add	r0, r1, r0
    17c4:	str	r0, [fp, #-84]	; 0xffffffac
    17c8:	ldr	r0, [fp, #-84]	; 0xffffffac
    17cc:	ldr	r0, [r0]
    17d0:	str	r0, [fp, #-88]	; 0xffffffa8
    17d4:	movw	r0, #0
    17d8:	str	r0, [fp, #-92]	; 0xffffffa4
    17dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
    17e0:	ldr	r1, [fp, #-84]	; 0xffffffac
    17e4:	ldr	r1, [r1, #4]
    17e8:	cmp	r0, r1
    17ec:	bge	18e4 <get_all_dims_for_array+0x738>
    17f0:	ldr	r0, [fp, #-84]	; 0xffffffac
    17f4:	add	r0, r0, #8
    17f8:	ldr	r1, [fp, #-92]	; 0xffffffa4
    17fc:	add	r0, r0, r1, lsl #2
    1800:	ldr	r0, [r0]
    1804:	cmn	r0, #1
    1808:	bne	18d0 <get_all_dims_for_array+0x724>
    180c:	movw	r0, #0
    1810:	movt	r0, #0
    1814:	add	r0, r0, #4
    1818:	ldr	r1, [fp, #-88]	; 0xffffffa8
    181c:	ldr	r2, [fp, #-92]	; 0xffffffa4
    1820:	add	r1, r1, r2
    1824:	movw	r2, #0
    1828:	movt	r2, #0
    182c:	add	r1, r2, r1, lsl #2
    1830:	ldr	r1, [r1, #108]	; 0x6c
    1834:	ldr	r3, [fp, #-84]	; 0xffffffac
    1838:	ldr	r3, [r3, #44]	; 0x2c
    183c:	mov	ip, #0
    1840:	str	ip, [r1, r3, lsl #2]
    1844:	ldr	r1, [fp, #-88]	; 0xffffffa8
    1848:	ldr	r3, [fp, #-92]	; 0xffffffa4
    184c:	add	r1, r1, r3
    1850:	add	r1, r2, r1, lsl #2
    1854:	add	r1, r1, #4
    1858:	ldr	r1, [r1]
    185c:	cmn	r1, #1
    1860:	str	r0, [sp, #44]	; 0x2c
    1864:	bne	189c <get_all_dims_for_array+0x6f0>
    1868:	movw	r0, #0
    186c:	movt	r0, #0
    1870:	add	r0, r0, #4
    1874:	ldr	r1, [fp, #-88]	; 0xffffffa8
    1878:	ldr	r2, [fp, #-92]	; 0xffffffa4
    187c:	add	r1, r1, r2
    1880:	movw	r2, #0
    1884:	movt	r2, #0
    1888:	add	r1, r2, r1, lsl #2
    188c:	add	r1, r1, #4
    1890:	movw	r2, #0
    1894:	str	r2, [r1]
    1898:	str	r0, [sp, #40]	; 0x28
    189c:	movw	r0, #0
    18a0:	movt	r0, #0
    18a4:	add	r0, r0, #36	; 0x24
    18a8:	ldr	r1, [fp, #-88]	; 0xffffffa8
    18ac:	ldr	r2, [fp, #-92]	; 0xffffffa4
    18b0:	add	r1, r1, r2
    18b4:	movw	r2, #0
    18b8:	movt	r2, #0
    18bc:	add	r1, r2, r1, lsl #2
    18c0:	add	r1, r1, #36	; 0x24
    18c4:	movw	r2, #0
    18c8:	str	r2, [r1]
    18cc:	str	r0, [sp, #36]	; 0x24
    18d0:	b	18d4 <get_all_dims_for_array+0x728>
    18d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
    18d8:	add	r0, r0, #1
    18dc:	str	r0, [fp, #-92]	; 0xffffffa4
    18e0:	b	17dc <get_all_dims_for_array+0x630>
    18e4:	b	18e8 <get_all_dims_for_array+0x73c>
    18e8:	b	1b38 <get_all_dims_for_array+0x98c>
    18ec:	ldr	r0, [fp, #-8]
    18f0:	movw	r1, #0
    18f4:	movt	r1, #0
    18f8:	ldr	r1, [r1, #3360]	; 0xd20
    18fc:	cmp	r0, r1
    1900:	bne	1908 <get_all_dims_for_array+0x75c>
    1904:	b	1928 <get_all_dims_for_array+0x77c>
    1908:	movw	r0, #0
    190c:	movt	r0, #0
    1910:	movw	r1, #0
    1914:	movt	r1, #0
    1918:	movw	r2, #252	; 0xfc
    191c:	movw	r3, #0
    1920:	movt	r3, #0
    1924:	bl	0 <__assert_fail>
    1928:	ldr	r0, [fp, #-16]
    192c:	cmp	r0, #4
    1930:	bne	1970 <get_all_dims_for_array+0x7c4>
    1934:	movw	r0, #0
    1938:	movt	r0, #0
    193c:	add	r0, r0, #144	; 0x90
    1940:	add	r1, sp, #92	; 0x5c
    1944:	bl	0 <coda_cursor_get_string_length>
    1948:	cmp	r0, #0
    194c:	beq	195c <get_all_dims_for_array+0x7b0>
    1950:	movw	r0, #0
    1954:	movt	r0, #0
    1958:	blx	r0
    195c:	ldr	r0, [sp, #92]	; 0x5c
    1960:	asr	r1, r0, #31
    1964:	str	r0, [sp, #96]	; 0x60
    1968:	str	r1, [sp, #100]	; 0x64
    196c:	b	199c <get_all_dims_for_array+0x7f0>
    1970:	movw	r0, #0
    1974:	movt	r0, #0
    1978:	add	r0, r0, #144	; 0x90
    197c:	add	r1, sp, #96	; 0x60
    1980:	bl	0 <coda_cursor_get_byte_size>
    1984:	cmp	r0, #0
    1988:	beq	1998 <get_all_dims_for_array+0x7ec>
    198c:	movw	r0, #0
    1990:	movt	r0, #0
    1994:	blx	r0
    1998:	b	199c <get_all_dims_for_array+0x7f0>
    199c:	movw	r0, #0
    19a0:	movt	r0, #0
    19a4:	add	r0, r0, #4
    19a8:	ldr	r1, [fp, #-8]
    19ac:	add	r1, r1, r1, lsl #2
    19b0:	movw	r2, #0
    19b4:	movt	r2, #0
    19b8:	add	r1, r2, r1, lsl #4
    19bc:	add	r1, r1, #800	; 0x320
    19c0:	str	r1, [fp, #-96]	; 0xffffffa0
    19c4:	ldr	r1, [fp, #-96]	; 0xffffffa0
    19c8:	ldr	r1, [r1]
    19cc:	str	r1, [fp, #-100]	; 0xffffff9c
    19d0:	ldr	r1, [sp, #96]	; 0x60
    19d4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    19d8:	movw	r3, #0
    19dc:	movt	r3, #0
    19e0:	add	r2, r3, r2, lsl #2
    19e4:	ldr	r2, [r2, #108]	; 0x6c
    19e8:	ldr	ip, [fp, #-96]	; 0xffffffa0
    19ec:	ldr	ip, [ip, #44]	; 0x2c
    19f0:	str	r1, [r2, ip, lsl #2]
    19f4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    19f8:	add	r1, r3, r1, lsl #2
    19fc:	add	r1, r1, #4
    1a00:	ldr	r1, [r1]
    1a04:	cmn	r1, #1
    1a08:	str	r0, [sp, #32]
    1a0c:	bne	1a50 <get_all_dims_for_array+0x8a4>
    1a10:	movw	r0, #0
    1a14:	movt	r0, #0
    1a18:	add	r0, r0, #36	; 0x24
    1a1c:	ldr	r1, [sp, #96]	; 0x60
    1a20:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a24:	movw	r3, #0
    1a28:	movt	r3, #0
    1a2c:	add	r2, r3, r2, lsl #2
    1a30:	str	r1, [r2, #4]
    1a34:	ldr	r1, [sp, #96]	; 0x60
    1a38:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a3c:	add	r2, r3, r2, lsl #2
    1a40:	add	r2, r2, #36	; 0x24
    1a44:	str	r1, [r2]
    1a48:	str	r0, [sp, #28]
    1a4c:	b	1b14 <get_all_dims_for_array+0x968>
    1a50:	ldr	r0, [fp, #-100]	; 0xffffff9c
    1a54:	movw	r1, #0
    1a58:	movt	r1, #0
    1a5c:	add	r0, r1, r0, lsl #2
    1a60:	ldr	r0, [r0, #4]
    1a64:	ldr	r1, [sp, #96]	; 0x60
    1a68:	ldr	r2, [sp, #100]	; 0x64
    1a6c:	subs	r1, r0, r1
    1a70:	rscs	r0, r2, r0, asr #31
    1a74:	str	r1, [sp, #24]
    1a78:	str	r0, [sp, #20]
    1a7c:	bge	1ab0 <get_all_dims_for_array+0x904>
    1a80:	b	1a84 <get_all_dims_for_array+0x8d8>
    1a84:	movw	r0, #0
    1a88:	movt	r0, #0
    1a8c:	add	r0, r0, #4
    1a90:	ldr	r1, [sp, #96]	; 0x60
    1a94:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a98:	movw	r3, #0
    1a9c:	movt	r3, #0
    1aa0:	add	r2, r3, r2, lsl #2
    1aa4:	add	r2, r2, #4
    1aa8:	str	r1, [r2]
    1aac:	str	r0, [sp, #16]
    1ab0:	ldr	r0, [fp, #-100]	; 0xffffff9c
    1ab4:	movw	r1, #0
    1ab8:	movt	r1, #0
    1abc:	add	r0, r1, r0, lsl #2
    1ac0:	ldr	r0, [r0, #36]	; 0x24
    1ac4:	ldr	r1, [sp, #96]	; 0x60
    1ac8:	ldr	r2, [sp, #100]	; 0x64
    1acc:	subs	r1, r1, r0
    1ad0:	sbcs	r0, r2, r0, asr #31
    1ad4:	str	r1, [sp, #12]
    1ad8:	str	r0, [sp, #8]
    1adc:	bge	1b10 <get_all_dims_for_array+0x964>
    1ae0:	b	1ae4 <get_all_dims_for_array+0x938>
    1ae4:	movw	r0, #0
    1ae8:	movt	r0, #0
    1aec:	add	r0, r0, #36	; 0x24
    1af0:	ldr	r1, [sp, #96]	; 0x60
    1af4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1af8:	movw	r3, #0
    1afc:	movt	r3, #0
    1b00:	add	r2, r3, r2, lsl #2
    1b04:	add	r2, r2, #36	; 0x24
    1b08:	str	r1, [r2]
    1b0c:	str	r0, [sp, #4]
    1b10:	b	1b14 <get_all_dims_for_array+0x968>
    1b14:	b	1b38 <get_all_dims_for_array+0x98c>
    1b18:	movw	r0, #0
    1b1c:	movt	r0, #0
    1b20:	movw	r1, #0
    1b24:	movt	r1, #0
    1b28:	movw	r2, #294	; 0x126
    1b2c:	movw	r3, #0
    1b30:	movt	r3, #0
    1b34:	bl	0 <__assert_fail>
    1b38:	mov	sp, fp
    1b3c:	pop	{fp, pc}

00001b40 <dim_leave_array>:
    1b40:	push	{fp, lr}
    1b44:	mov	fp, sp
    1b48:	sub	sp, sp, #40	; 0x28
    1b4c:	movw	r0, #0
    1b50:	movt	r0, #0
    1b54:	ldr	r0, [r0, #3360]	; 0xd20
    1b58:	cmp	r0, #0
    1b5c:	blt	1b64 <dim_leave_array+0x24>
    1b60:	b	1b84 <dim_leave_array+0x44>
    1b64:	movw	r0, #0
    1b68:	movt	r0, #0
    1b6c:	movw	r1, #0
    1b70:	movt	r1, #0
    1b74:	movw	r2, #579	; 0x243
    1b78:	movw	r3, #0
    1b7c:	movt	r3, #0
    1b80:	bl	0 <__assert_fail>
    1b84:	movw	r0, #0
    1b88:	movt	r0, #0
    1b8c:	add	r1, r0, #800	; 0x320
    1b90:	ldr	r0, [r0, #3360]	; 0xd20
    1b94:	movw	r2, #80	; 0x50
    1b98:	mul	r0, r0, r2
    1b9c:	add	r0, r1, r0
    1ba0:	str	r0, [fp, #-4]
    1ba4:	ldr	r0, [fp, #-4]
    1ba8:	ldr	r0, [r0]
    1bac:	str	r0, [fp, #-8]
    1bb0:	ldr	r0, [fp, #-4]
    1bb4:	ldr	r0, [r0, #4]
    1bb8:	movw	r1, #0
    1bbc:	movt	r1, #0
    1bc0:	ldr	r2, [r1]
    1bc4:	sub	r0, r2, r0
    1bc8:	str	r0, [r1]
    1bcc:	movw	r0, #0
    1bd0:	str	r0, [fp, #-12]
    1bd4:	ldr	r0, [fp, #-12]
    1bd8:	ldr	r1, [fp, #-4]
    1bdc:	ldr	r1, [r1, #4]
    1be0:	cmp	r0, r1
    1be4:	bge	1c6c <dim_leave_array+0x12c>
    1be8:	movw	r0, #0
    1bec:	movt	r0, #0
    1bf0:	add	r0, r0, #72	; 0x48
    1bf4:	ldr	r1, [fp, #-8]
    1bf8:	ldr	r2, [fp, #-12]
    1bfc:	add	r1, r1, r2
    1c00:	movw	r2, #0
    1c04:	movt	r2, #0
    1c08:	add	r1, r2, r1, lsl #2
    1c0c:	add	r1, r1, #72	; 0x48
    1c10:	ldr	r1, [r1]
    1c14:	cmp	r1, #0
    1c18:	str	r0, [fp, #-16]
    1c1c:	beq	1c58 <dim_leave_array+0x118>
    1c20:	movw	r0, #0
    1c24:	movt	r0, #0
    1c28:	add	r0, r0, #108	; 0x6c
    1c2c:	ldr	r1, [fp, #-8]
    1c30:	ldr	r2, [fp, #-12]
    1c34:	add	r1, r1, r2
    1c38:	movw	r2, #0
    1c3c:	movt	r2, #0
    1c40:	add	r1, r2, r1, lsl #2
    1c44:	add	r1, r1, #108	; 0x6c
    1c48:	ldr	r1, [r1]
    1c4c:	str	r0, [sp, #20]
    1c50:	mov	r0, r1
    1c54:	bl	0 <free>
    1c58:	b	1c5c <dim_leave_array+0x11c>
    1c5c:	ldr	r0, [fp, #-12]
    1c60:	add	r0, r0, #1
    1c64:	str	r0, [fp, #-12]
    1c68:	b	1bd4 <dim_leave_array+0x94>
    1c6c:	movw	r0, #0
    1c70:	movt	r0, #0
    1c74:	movw	r1, #0
    1c78:	str	r1, [r0, #68]	; 0x44
    1c7c:	mvn	r2, #0
    1c80:	str	r2, [r0, #104]	; 0x68
    1c84:	str	r1, [fp, #-12]
    1c88:	ldr	r0, [fp, #-12]
    1c8c:	movw	r1, #0
    1c90:	movt	r1, #0
    1c94:	ldr	r1, [r1]
    1c98:	cmp	r0, r1
    1c9c:	bge	1cfc <dim_leave_array+0x1bc>
    1ca0:	movw	r0, #0
    1ca4:	movt	r0, #0
    1ca8:	add	r0, r0, #72	; 0x48
    1cac:	ldr	r1, [fp, #-12]
    1cb0:	movw	r2, #0
    1cb4:	movt	r2, #0
    1cb8:	add	r1, r2, r1, lsl #2
    1cbc:	add	r1, r1, #72	; 0x48
    1cc0:	ldr	r1, [r1]
    1cc4:	cmp	r1, #0
    1cc8:	str	r0, [sp, #16]
    1ccc:	beq	1ce8 <dim_leave_array+0x1a8>
    1cd0:	movw	r0, #1
    1cd4:	movw	r1, #0
    1cd8:	movt	r1, #0
    1cdc:	str	r0, [r1, #68]	; 0x44
    1ce0:	ldr	r0, [fp, #-12]
    1ce4:	str	r0, [r1, #104]	; 0x68
    1ce8:	b	1cec <dim_leave_array+0x1ac>
    1cec:	ldr	r0, [fp, #-12]
    1cf0:	add	r0, r0, #1
    1cf4:	str	r0, [fp, #-12]
    1cf8:	b	1c88 <dim_leave_array+0x148>
    1cfc:	ldr	r0, [fp, #-8]
    1d00:	ldr	r1, [fp, #-4]
    1d04:	ldr	r1, [r1, #4]
    1d08:	add	r0, r0, r1
    1d0c:	movw	r1, #0
    1d10:	movt	r1, #0
    1d14:	add	r0, r1, r0, lsl #3
    1d18:	ldr	r1, [r0, #296]	; 0x128
    1d1c:	ldr	r0, [r0, #300]	; 0x12c
    1d20:	subs	r1, r1, #1
    1d24:	sbcs	r0, r0, #0
    1d28:	str	r1, [sp, #12]
    1d2c:	str	r0, [sp, #8]
    1d30:	blt	1db4 <dim_leave_array+0x274>
    1d34:	b	1d38 <dim_leave_array+0x1f8>
    1d38:	ldr	r0, [fp, #-8]
    1d3c:	sub	r0, r0, #1
    1d40:	str	r0, [fp, #-12]
    1d44:	ldr	r0, [fp, #-12]
    1d48:	cmp	r0, #0
    1d4c:	blt	1db0 <dim_leave_array+0x270>
    1d50:	ldr	r0, [fp, #-8]
    1d54:	movw	r1, #0
    1d58:	movt	r1, #0
    1d5c:	add	r1, r1, #176	; 0xb0
    1d60:	mov	r2, r1
    1d64:	ldr	r0, [r2, r0, lsl #3]!
    1d68:	ldr	r3, [r2, #4]
    1d6c:	ldr	r2, [fp, #-12]
    1d70:	ldr	r2, [r1, r2, lsl #3]!
    1d74:	ldr	ip, [r1, #4]
    1d78:	str	r0, [sp, #4]
    1d7c:	mov	r0, r2
    1d80:	str	r1, [sp]
    1d84:	mov	r1, ip
    1d88:	ldr	r2, [sp, #4]
    1d8c:	bl	0 <__aeabi_ldivmod>
    1d90:	ldr	r2, [sp]
    1d94:	str	r1, [r2, #4]
    1d98:	str	r0, [r2]
    1d9c:	ldr	r0, [fp, #-12]
    1da0:	mvn	r1, #0
    1da4:	add	r0, r0, r1
    1da8:	str	r0, [fp, #-12]
    1dac:	b	1d44 <dim_leave_array+0x204>
    1db0:	b	1db4 <dim_leave_array+0x274>
    1db4:	mov	sp, fp
    1db8:	pop	{fp, pc}

00001dbc <dim_record_field_available>:
    1dbc:	push	{fp, lr}
    1dc0:	mov	fp, sp
    1dc4:	sub	sp, sp, #8
    1dc8:	movw	r0, #0
    1dcc:	str	r0, [sp, #4]
    1dd0:	ldr	r1, [sp, #4]
    1dd4:	ldr	r2, [sp, #4]
    1dd8:	bl	1de4 <get_record_field_available_status>
    1ddc:	mov	sp, fp
    1de0:	pop	{fp, pc}

00001de4 <get_record_field_available_status>:
    1de4:	push	{fp, lr}
    1de8:	mov	fp, sp
    1dec:	sub	sp, sp, #80	; 0x50
    1df0:	movw	r3, #0
    1df4:	movt	r3, #0
    1df8:	add	r3, r3, #144	; 0x90
    1dfc:	str	r0, [fp, #-8]
    1e00:	str	r1, [fp, #-12]
    1e04:	str	r2, [fp, #-16]
    1e08:	mov	r0, r3
    1e0c:	sub	r1, fp, #20
    1e10:	bl	0 <coda_cursor_get_type_class>
    1e14:	cmp	r0, #0
    1e18:	beq	1e28 <get_record_field_available_status+0x44>
    1e1c:	movw	r0, #0
    1e20:	movt	r0, #0
    1e24:	blx	r0
    1e28:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e2c:	cmp	r0, #0
    1e30:	str	r0, [sp, #32]
    1e34:	beq	2104 <get_record_field_available_status+0x320>
    1e38:	b	1e3c <get_record_field_available_status+0x58>
    1e3c:	ldr	r0, [sp, #32]
    1e40:	cmp	r0, #1
    1e44:	bne	223c <get_record_field_available_status+0x458>
    1e48:	b	1e4c <get_record_field_available_status+0x68>
    1e4c:	movw	r0, #0
    1e50:	movt	r0, #0
    1e54:	add	r1, r0, #800	; 0x320
    1e58:	ldr	r2, [fp, #-12]
    1e5c:	movw	r3, #80	; 0x50
    1e60:	mul	r2, r2, r3
    1e64:	add	r1, r1, r2
    1e68:	str	r1, [fp, #-24]	; 0xffffffe8
    1e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e70:	ldr	r1, [r1]
    1e74:	str	r1, [fp, #-32]	; 0xffffffe0
    1e78:	ldr	r1, [fp, #-12]
    1e7c:	ldr	r0, [r0, #3360]	; 0xd20
    1e80:	cmp	r1, r0
    1e84:	bge	1e8c <get_record_field_available_status+0xa8>
    1e88:	b	1eac <get_record_field_available_status+0xc8>
    1e8c:	movw	r0, #0
    1e90:	movt	r0, #0
    1e94:	movw	r1, #0
    1e98:	movt	r1, #0
    1e9c:	movw	r2, #638	; 0x27e
    1ea0:	movw	r3, #0
    1ea4:	movt	r3, #0
    1ea8:	bl	0 <__assert_fail>
    1eac:	ldr	r0, [fp, #-12]
    1eb0:	cmp	r0, #0
    1eb4:	bne	1ec4 <get_record_field_available_status+0xe0>
    1eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ebc:	movw	r1, #0
    1ec0:	str	r1, [r0, #44]	; 0x2c
    1ec4:	ldr	r0, [fp, #-12]
    1ec8:	movw	r1, #0
    1ecc:	movt	r1, #0
    1ed0:	ldr	r1, [r1, #3360]	; 0xd20
    1ed4:	cmp	r0, r1
    1ed8:	bge	1f14 <get_record_field_available_status+0x130>
    1edc:	movw	r0, #0
    1ee0:	movt	r0, #0
    1ee4:	add	r0, r0, #800	; 0x320
    1ee8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1eec:	ldr	r1, [r1, #44]	; 0x2c
    1ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1ef4:	ldr	r2, [r2, #40]	; 0x28
    1ef8:	mul	r1, r1, r2
    1efc:	ldr	r2, [fp, #-12]
    1f00:	add	r2, r2, #1
    1f04:	movw	r3, #80	; 0x50
    1f08:	mul	r2, r2, r3
    1f0c:	add	r0, r0, r2
    1f10:	str	r1, [r0, #44]	; 0x2c
    1f14:	movw	r0, #1
    1f18:	str	r0, [fp, #-28]	; 0xffffffe4
    1f1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1f20:	str	r0, [fp, #-36]	; 0xffffffdc
    1f24:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f28:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1f2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f30:	ldr	r2, [r2, #4]
    1f34:	add	r1, r1, r2
    1f38:	cmp	r0, r1
    1f3c:	bge	1fec <get_record_field_available_status+0x208>
    1f40:	movw	r0, #0
    1f44:	movt	r0, #0
    1f48:	add	r0, r0, #72	; 0x48
    1f4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1f50:	movw	r2, #0
    1f54:	movt	r2, #0
    1f58:	add	r1, r2, r1, lsl #2
    1f5c:	add	r1, r1, #72	; 0x48
    1f60:	ldr	r1, [r1]
    1f64:	cmp	r1, #0
    1f68:	str	r0, [sp, #28]
    1f6c:	beq	1fa4 <get_record_field_available_status+0x1c0>
    1f70:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f74:	movw	r1, #0
    1f78:	movt	r1, #0
    1f7c:	add	r0, r1, r0, lsl #2
    1f80:	ldr	r0, [r0, #108]	; 0x6c
    1f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f88:	ldr	r1, [r1, #44]	; 0x2c
    1f8c:	add	r0, r0, r1, lsl #2
    1f90:	ldr	r0, [r0]
    1f94:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1f98:	mul	r0, r1, r0
    1f9c:	str	r0, [fp, #-28]	; 0xffffffe4
    1fa0:	b	1fd8 <get_record_field_available_status+0x1f4>
    1fa4:	movw	r0, #0
    1fa8:	movt	r0, #0
    1fac:	add	r0, r0, #4
    1fb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1fb4:	movw	r2, #0
    1fb8:	movt	r2, #0
    1fbc:	add	r1, r2, r1, lsl #2
    1fc0:	add	r1, r1, #4
    1fc4:	ldr	r1, [r1]
    1fc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1fcc:	mul	r1, r2, r1
    1fd0:	str	r1, [fp, #-28]	; 0xffffffe4
    1fd4:	str	r0, [sp, #24]
    1fd8:	b	1fdc <get_record_field_available_status+0x1f8>
    1fdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1fe0:	add	r0, r0, #1
    1fe4:	str	r0, [fp, #-36]	; 0xffffffdc
    1fe8:	b	1f24 <get_record_field_available_status+0x140>
    1fec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ff0:	cmp	r0, #0
    1ff4:	ble	2100 <get_record_field_available_status+0x31c>
    1ff8:	movw	r0, #0
    1ffc:	movt	r0, #0
    2000:	add	r0, r0, #144	; 0x90
    2004:	bl	0 <coda_cursor_goto_first_array_element>
    2008:	cmp	r0, #0
    200c:	beq	201c <get_record_field_available_status+0x238>
    2010:	movw	r0, #0
    2014:	movt	r0, #0
    2018:	blx	r0
    201c:	movw	r0, #0
    2020:	str	r0, [sp, #40]	; 0x28
    2024:	ldr	r0, [sp, #40]	; 0x28
    2028:	ldr	r1, [fp, #-28]	; 0xffffffe4
    202c:	cmp	r0, r1
    2030:	bge	20ec <get_record_field_available_status+0x308>
    2034:	ldr	r0, [fp, #-8]
    2038:	add	r0, r0, #1
    203c:	ldr	r1, [fp, #-12]
    2040:	add	r1, r1, #1
    2044:	ldr	r2, [fp, #-16]
    2048:	bl	1de4 <get_record_field_available_status>
    204c:	cmp	r0, #0
    2050:	beq	2074 <get_record_field_available_status+0x290>
    2054:	movw	r0, #0
    2058:	movt	r0, #0
    205c:	add	r0, r0, #144	; 0x90
    2060:	bl	0 <coda_cursor_goto_parent>
    2064:	movw	lr, #1
    2068:	str	lr, [fp, #-4]
    206c:	str	r0, [sp, #20]
    2070:	b	2264 <get_record_field_available_status+0x480>
    2074:	ldr	r0, [sp, #40]	; 0x28
    2078:	ldr	r1, [fp, #-28]	; 0xffffffe4
    207c:	sub	r1, r1, #1
    2080:	cmp	r0, r1
    2084:	bge	20d8 <get_record_field_available_status+0x2f4>
    2088:	movw	r0, #0
    208c:	movt	r0, #0
    2090:	add	r0, r0, #144	; 0x90
    2094:	bl	0 <coda_cursor_goto_next_array_element>
    2098:	cmp	r0, #0
    209c:	beq	20ac <get_record_field_available_status+0x2c8>
    20a0:	movw	r0, #0
    20a4:	movt	r0, #0
    20a8:	blx	r0
    20ac:	movw	r0, #0
    20b0:	movt	r0, #0
    20b4:	add	r0, r0, #800	; 0x320
    20b8:	ldr	r1, [fp, #-12]
    20bc:	add	r1, r1, #1
    20c0:	movw	r2, #80	; 0x50
    20c4:	mul	r1, r1, r2
    20c8:	add	r0, r0, r1
    20cc:	ldr	r1, [r0, #44]	; 0x2c
    20d0:	add	r1, r1, #1
    20d4:	str	r1, [r0, #44]	; 0x2c
    20d8:	b	20dc <get_record_field_available_status+0x2f8>
    20dc:	ldr	r0, [sp, #40]	; 0x28
    20e0:	add	r0, r0, #1
    20e4:	str	r0, [sp, #40]	; 0x28
    20e8:	b	2024 <get_record_field_available_status+0x240>
    20ec:	movw	r0, #0
    20f0:	movt	r0, #0
    20f4:	add	r0, r0, #144	; 0x90
    20f8:	bl	0 <coda_cursor_goto_parent>
    20fc:	str	r0, [sp, #16]
    2100:	b	225c <get_record_field_available_status+0x478>
    2104:	movw	r0, #0
    2108:	movt	r0, #0
    210c:	add	r1, r0, #144	; 0x90
    2110:	movw	r2, #3492	; 0xda4
    2114:	add	r0, r0, r2
    2118:	ldr	r2, [fp, #-16]
    211c:	movw	r3, #0
    2120:	movt	r3, #0
    2124:	add	r2, r3, r2, lsl #2
    2128:	movw	r3, #3492	; 0xda4
    212c:	add	r2, r2, r3
    2130:	ldr	r2, [r2]
    2134:	str	r0, [sp, #12]
    2138:	mov	r0, r1
    213c:	mov	r1, r2
    2140:	add	r2, sp, #36	; 0x24
    2144:	bl	0 <coda_cursor_get_record_field_available_status>
    2148:	cmp	r0, #0
    214c:	beq	215c <get_record_field_available_status+0x378>
    2150:	movw	r0, #0
    2154:	movt	r0, #0
    2158:	blx	r0
    215c:	ldr	r0, [sp, #36]	; 0x24
    2160:	cmp	r0, #0
    2164:	beq	2238 <get_record_field_available_status+0x454>
    2168:	ldr	r0, [fp, #-16]
    216c:	movw	r1, #0
    2170:	movt	r1, #0
    2174:	ldr	r1, [r1, #3748]	; 0xea4
    2178:	sub	r1, r1, #1
    217c:	cmp	r0, r1
    2180:	bne	2190 <get_record_field_available_status+0x3ac>
    2184:	movw	r0, #1
    2188:	str	r0, [fp, #-4]
    218c:	b	2264 <get_record_field_available_status+0x480>
    2190:	movw	r0, #0
    2194:	movt	r0, #0
    2198:	add	r1, r0, #144	; 0x90
    219c:	movw	r2, #3492	; 0xda4
    21a0:	add	r0, r0, r2
    21a4:	ldr	r2, [fp, #-16]
    21a8:	movw	r3, #0
    21ac:	movt	r3, #0
    21b0:	add	r2, r3, r2, lsl #2
    21b4:	movw	r3, #3492	; 0xda4
    21b8:	add	r2, r2, r3
    21bc:	ldr	r2, [r2]
    21c0:	str	r0, [sp, #8]
    21c4:	mov	r0, r1
    21c8:	mov	r1, r2
    21cc:	bl	0 <coda_cursor_goto_record_field_by_index>
    21d0:	cmp	r0, #0
    21d4:	beq	21e4 <get_record_field_available_status+0x400>
    21d8:	movw	r0, #0
    21dc:	movt	r0, #0
    21e0:	blx	r0
    21e4:	ldr	r0, [fp, #-8]
    21e8:	add	r0, r0, #1
    21ec:	ldr	r1, [fp, #-12]
    21f0:	ldr	r2, [fp, #-16]
    21f4:	add	r2, r2, #1
    21f8:	bl	1de4 <get_record_field_available_status>
    21fc:	movw	r1, #0
    2200:	movt	r1, #0
    2204:	add	r1, r1, #144	; 0x90
    2208:	str	r0, [sp, #36]	; 0x24
    220c:	mov	r0, r1
    2210:	bl	0 <coda_cursor_goto_parent>
    2214:	ldr	r1, [sp, #36]	; 0x24
    2218:	cmp	r1, #0
    221c:	str	r0, [sp, #4]
    2220:	beq	2230 <get_record_field_available_status+0x44c>
    2224:	movw	r0, #1
    2228:	str	r0, [fp, #-4]
    222c:	b	2264 <get_record_field_available_status+0x480>
    2230:	b	2234 <get_record_field_available_status+0x450>
    2234:	b	2238 <get_record_field_available_status+0x454>
    2238:	b	225c <get_record_field_available_status+0x478>
    223c:	movw	r0, #0
    2240:	movt	r0, #0
    2244:	movw	r1, #0
    2248:	movt	r1, #0
    224c:	movw	r2, #729	; 0x2d9
    2250:	movw	r3, #0
    2254:	movt	r3, #0
    2258:	bl	0 <__assert_fail>
    225c:	movw	r0, #0
    2260:	str	r0, [fp, #-4]
    2264:	ldr	r0, [fp, #-4]
    2268:	mov	sp, fp
    226c:	pop	{fp, pc}
