
../repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <checkmem>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	cmp	r0, #0
      14:	bne	30 <checkmem+0x30>
      18:	ldr	r0, [pc, #32]	; 40 <checkmem+0x40>
      1c:	ldr	r0, [r0]
      20:	ldr	r1, [pc, #20]	; 3c <checkmem+0x3c>
      24:	bl	0 <fprintf>
      28:	mov	r0, #1
      2c:	bl	0 <exit>
      30:	ldr	lr, [sp, #4]
      34:	add	sp, sp, #8
      38:	bx	lr
      3c:	.word	0x000001cb
      40:	.word	0x00000000

00000044 <new_elem>:
      44:	mov	ip, sp
      48:	sub	sp, sp, #24
      4c:	str	ip, [sp]
      50:	str	lr, [sp, #4]
      54:	str	r4, [sp, #8]
      58:	str	r5, [sp, #12]
      5c:	str	r6, [sp, #16]
      60:	mov	r5, r0
      64:	add	r1, r1, #15
      68:	bic	r6, r1, #15
      6c:	ldr	r0, [r5, #52]	; 0x34
      70:	add	r2, r0, r6
      74:	ldr	r3, [r5, #44]	; 0x2c
      78:	cmp	r2, r3
      7c:	bls	b4 <new_elem+0x70>
      80:	mov	r0, #65536	; 0x10000
      84:	mov	r1, #1
      88:	bl	0 <calloc>
      8c:	mov	r4, r0
      90:	mov	r0, r4
      94:	bl	0 <checkmem>
      98:	ldr	r2, [r5, #48]	; 0x30
      9c:	str	r2, [r4]
      a0:	str	r4, [r5, #48]	; 0x30
      a4:	add	r0, r4, #16
      a8:	str	r0, [r5, #52]	; 0x34
      ac:	add	r1, r4, #65536	; 0x10000
      b0:	str	r1, [r5, #44]	; 0x2c
      b4:	ldr	r3, [r5, #52]	; 0x34
      b8:	add	r1, r3, r6
      bc:	str	r1, [r5, #52]	; 0x34
      c0:	ldr	r4, [sp, #8]
      c4:	ldr	r5, [sp, #12]
      c8:	ldr	r6, [sp, #16]
      cc:	ldr	lr, [sp, #4]
      d0:	add	sp, sp, #24
      d4:	bx	lr

000000d8 <error_tok_2>:
      d8:	mov	ip, sp
      dc:	sub	sp, sp, #24
      e0:	str	ip, [sp, #8]
      e4:	str	lr, [sp, #12]
      e8:	str	r4, [sp, #16]
      ec:	str	r5, [sp, #20]
      f0:	mov	r4, #0
      f4:	mov	r5, #0
      f8:	str	r5, [sp, #4]
      fc:	str	r4, [sp]
     100:	bl	844 <__flatcc_error_report>
     104:	ldr	r4, [sp, #16]
     108:	ldr	r5, [sp, #20]
     10c:	ldr	lr, [sp, #12]
     110:	add	sp, sp, #24
     114:	bx	lr

00000118 <error_tok>:
     118:	mov	ip, sp
     11c:	sub	sp, sp, #8
     120:	str	ip, [sp]
     124:	str	lr, [sp, #4]
     128:	mov	r3, #0
     12c:	bl	d8 <error_tok_2>
     130:	ldr	lr, [sp, #4]
     134:	add	sp, sp, #8
     138:	bx	lr

0000013c <error_tok_as_string>:
     13c:	mov	ip, sp
     140:	sub	sp, sp, #24
     144:	str	ip, [sp, #8]
     148:	str	lr, [sp, #12]
     14c:	str	r4, [sp, #16]
     150:	str	r5, [sp, #20]
     154:	ldr	r5, [ip]
     158:	mov	r4, r3
     15c:	mov	r3, #0
     160:	str	r5, [sp, #4]
     164:	str	r4, [sp]
     168:	bl	844 <__flatcc_error_report>
     16c:	ldr	r4, [sp, #16]
     170:	ldr	r5, [sp, #20]
     174:	ldr	lr, [sp, #12]
     178:	add	sp, sp, #24
     17c:	bx	lr

00000180 <error>:
     180:	mov	ip, sp
     184:	sub	sp, sp, #8
     188:	str	ip, [sp]
     18c:	str	lr, [sp, #4]
     190:	mov	r2, r1
     194:	mov	r1, #0
     198:	bl	118 <error_tok>
     19c:	ldr	lr, [sp, #4]
     1a0:	add	sp, sp, #8
     1a4:	bx	lr

000001a8 <pstrntoupper>:
     1a8:	mov	ip, sp
     1ac:	sub	sp, sp, #24
     1b0:	str	ip, [sp]
     1b4:	str	lr, [sp, #4]
     1b8:	str	r4, [sp, #8]
     1bc:	str	r5, [sp, #12]
     1c0:	str	r6, [sp, #16]
     1c4:	mov	r4, r1
     1c8:	mov	r5, r0
     1cc:	mov	r6, #0
     1d0:	cmp	r6, r4
     1d4:	bcs	1ec <pstrntoupper+0x44>
     1d8:	ldrb	r1, [r5, r6]
     1dc:	cmp	r1, #0
     1e0:	movne	r3, #1
     1e4:	moveq	r3, #0
     1e8:	b	1f0 <pstrntoupper+0x48>
     1ec:	mov	r3, #0
     1f0:	cmp	r3, #0
     1f4:	beq	210 <pstrntoupper+0x68>
     1f8:	ldrb	r0, [r5, r6]
     1fc:	bl	0 <toupper>
     200:	and	r0, r0, #255	; 0xff
     204:	strb	r0, [r5, r6]
     208:	add	r6, r6, #1
     20c:	b	1d0 <pstrntoupper+0x28>
     210:	mov	r0, r5
     214:	ldr	r4, [sp, #8]
     218:	ldr	r5, [sp, #12]
     21c:	ldr	r6, [sp, #16]
     220:	ldr	lr, [sp, #4]
     224:	add	sp, sp, #24
     228:	bx	lr

0000022c <parse_integer>:
     22c:	mov	ip, sp
     230:	sub	sp, sp, #48	; 0x30
     234:	str	ip, [sp]
     238:	str	lr, [sp, #4]
     23c:	str	r4, [sp, #8]
     240:	str	r5, [sp, #12]
     244:	str	r6, [sp, #16]
     248:	str	r7, [sp, #20]
     24c:	str	r8, [sp, #24]
     250:	str	r9, [sp, #28]
     254:	str	sl, [sp, #32]
     258:	mov	r4, #0
     25c:	mov	ip, #0
     260:	add	r5, r0, r1
     264:	cmp	r3, #0
     268:	bne	270 <parse_integer+0x44>
     26c:	add	r3, sp, #40	; 0x28
     270:	cmp	r0, r5
     274:	bne	284 <parse_integer+0x58>
     278:	mvn	ip, #4
     27c:	str	ip, [r3]
     280:	b	3f8 <parse_integer+0x1cc>
     284:	mov	r7, r0
     288:	ldrb	r1, [r0]
     28c:	cmp	r1, #45	; 0x2d
     290:	moveq	r8, #1
     294:	movne	r8, #0
     298:	add	r0, r0, r8
     29c:	cmp	r0, r5
     2a0:	beq	2b8 <parse_integer+0x8c>
     2a4:	ldrb	r1, [r0]
     2a8:	cmp	r1, #48	; 0x30
     2ac:	movge	r1, #1
     2b0:	movlt	r1, #0
     2b4:	b	2bc <parse_integer+0x90>
     2b8:	mov	r1, #0
     2bc:	cmp	r1, #0
     2c0:	beq	2d8 <parse_integer+0xac>
     2c4:	ldrb	r1, [r0]
     2c8:	cmp	r1, #57	; 0x39
     2cc:	movle	r1, #1
     2d0:	movgt	r1, #0
     2d4:	b	2dc <parse_integer+0xb0>
     2d8:	mov	r1, #0
     2dc:	cmp	r1, #0
     2e0:	beq	36c <parse_integer+0x140>
     2e4:	mov	r9, r4
     2e8:	mov	r6, ip
     2ec:	mov	r1, #10
     2f0:	umull	ip, r1, ip, r1
     2f4:	lsl	sl, r4, #3
     2f8:	add	r4, sl, r4, lsl #1
     2fc:	add	r4, r1, r4
     300:	mov	sl, #0
     304:	ldrb	r1, [r0]
     308:	adds	r1, ip, r1
     30c:	adc	r4, r4, sl
     310:	mov	sl, #0
     314:	mov	ip, #48	; 0x30
     318:	subs	ip, r1, ip
     31c:	sbc	r4, r4, sl
     320:	mov	r1, r4
     324:	cmp	r9, r1
     328:	bne	33c <parse_integer+0x110>
     32c:	mov	r1, ip
     330:	cmp	r6, r1
     334:	bhi	344 <parse_integer+0x118>
     338:	b	364 <parse_integer+0x138>
     33c:	cmp	r9, r1
     340:	bls	364 <parse_integer+0x138>
     344:	cmp	r8, #0
     348:	bne	354 <parse_integer+0x128>
     34c:	mvn	r2, #0
     350:	b	358 <parse_integer+0x12c>
     354:	mvn	r2, #1
     358:	str	r2, [r3]
     35c:	mov	r0, #0
     360:	b	3f8 <parse_integer+0x1cc>
     364:	add	r0, r0, #1
     368:	b	29c <parse_integer+0x70>
     36c:	cmp	r0, r7
     370:	bne	380 <parse_integer+0x154>
     374:	mvn	ip, #3
     378:	str	ip, [r3]
     37c:	b	3f8 <parse_integer+0x1cc>
     380:	add	r1, r7, r8
     384:	cmp	r0, r1
     388:	bne	39c <parse_integer+0x170>
     38c:	mvn	r1, #2
     390:	str	r1, [r3]
     394:	mov	r0, #0
     398:	b	3f8 <parse_integer+0x1cc>
     39c:	cmp	r0, r5
     3a0:	beq	3ec <parse_integer+0x1c0>
     3a4:	ldrb	r1, [r0]
     3a8:	cmp	r1, #80	; 0x50
     3ac:	bcs	3c4 <parse_integer+0x198>
     3b0:	cmp	r1, #46	; 0x2e
     3b4:	beq	3dc <parse_integer+0x1b0>
     3b8:	cmp	r1, #69	; 0x45
     3bc:	beq	3dc <parse_integer+0x1b0>
     3c0:	b	3ec <parse_integer+0x1c0>
     3c4:	cmp	r1, #80	; 0x50
     3c8:	beq	3dc <parse_integer+0x1b0>
     3cc:	cmp	r1, #101	; 0x65
     3d0:	beq	3dc <parse_integer+0x1b0>
     3d4:	cmp	r1, #112	; 0x70
     3d8:	bne	3ec <parse_integer+0x1c0>
     3dc:	mvn	ip, #2
     3e0:	str	ip, [r3]
     3e4:	mov	r0, #0
     3e8:	b	3f8 <parse_integer+0x1cc>
     3ec:	str	ip, [r2]
     3f0:	str	r4, [r2, #4]
     3f4:	str	r8, [r3]
     3f8:	ldr	r4, [sp, #8]
     3fc:	ldr	r5, [sp, #12]
     400:	ldr	r6, [sp, #16]
     404:	ldr	r7, [sp, #20]
     408:	ldr	r8, [sp, #24]
     40c:	ldr	r9, [sp, #28]
     410:	ldr	sl, [sp, #32]
     414:	ldr	lr, [sp, #4]
     418:	add	sp, sp, #48	; 0x30
     41c:	bx	lr

00000420 <parse_hex_integer>:
     420:	mov	ip, sp
     424:	sub	sp, sp, #40	; 0x28
     428:	str	ip, [sp]
     42c:	str	lr, [sp, #4]
     430:	str	r4, [sp, #8]
     434:	str	r5, [sp, #12]
     438:	str	r6, [sp, #16]
     43c:	str	r7, [sp, #20]
     440:	str	r8, [sp, #24]
     444:	str	r9, [sp, #28]
     448:	mov	r4, #0
     44c:	mov	ip, #0
     450:	add	r6, r0, r1
     454:	cmp	r3, #0
     458:	bne	460 <parse_hex_integer+0x40>
     45c:	add	r3, sp, #32
     460:	cmp	r0, r6
     464:	bne	474 <parse_hex_integer+0x54>
     468:	mvn	r1, #4
     46c:	str	r1, [r3]
     470:	b	6e8 <parse_hex_integer+0x2c8>
     474:	ldrb	r1, [r0]
     478:	cmp	r1, #45	; 0x2d
     47c:	moveq	r5, #1
     480:	movne	r5, #0
     484:	add	r1, r0, r5
     488:	sub	r0, r6, r1
     48c:	cmp	r0, #2
     490:	blt	4a8 <parse_hex_integer+0x88>
     494:	ldrb	r0, [r1]
     498:	cmp	r0, #48	; 0x30
     49c:	movne	r0, #1
     4a0:	moveq	r0, #0
     4a4:	b	4ac <parse_hex_integer+0x8c>
     4a8:	mov	r0, #1
     4ac:	cmp	r0, #0
     4b0:	bne	4cc <parse_hex_integer+0xac>
     4b4:	ldrb	r0, [r1, #1]
     4b8:	orr	r0, r0, #32
     4bc:	cmp	r0, #120	; 0x78
     4c0:	movne	r0, #1
     4c4:	moveq	r0, #0
     4c8:	b	4d0 <parse_hex_integer+0xb0>
     4cc:	mov	r0, #1
     4d0:	cmp	r0, #0
     4d4:	beq	4e8 <parse_hex_integer+0xc8>
     4d8:	mvn	ip, #3
     4dc:	str	ip, [r3]
     4e0:	sub	r0, r1, r5
     4e4:	b	6e8 <parse_hex_integer+0x2c8>
     4e8:	add	r0, r1, #2
     4ec:	mov	r7, r0
     4f0:	mov	r8, r6
     4f4:	sub	r1, r6, r0
     4f8:	cmp	r1, #16
     4fc:	ble	504 <parse_hex_integer+0xe4>
     500:	add	r8, r0, #16
     504:	cmp	r0, r8
     508:	beq	5e0 <parse_hex_integer+0x1c0>
     50c:	ldrb	r1, [r0]
     510:	and	r1, r1, #255	; 0xff
     514:	cmp	r1, #48	; 0x30
     518:	bge	524 <parse_hex_integer+0x104>
     51c:	mov	r9, #0
     520:	b	530 <parse_hex_integer+0x110>
     524:	cmp	r1, #57	; 0x39
     528:	movle	r9, #1
     52c:	movgt	r9, #0
     530:	cmp	r9, #0
     534:	bne	5a8 <parse_hex_integer+0x188>
     538:	orr	r1, r1, #32
     53c:	and	r1, r1, #255	; 0xff
     540:	cmp	r1, #97	; 0x61
     544:	bge	550 <parse_hex_integer+0x130>
     548:	mov	r9, #0
     54c:	b	55c <parse_hex_integer+0x13c>
     550:	cmp	r1, #102	; 0x66
     554:	movle	r9, #1
     558:	movgt	r9, #0
     55c:	cmp	r9, #0
     560:	beq	5e0 <parse_hex_integer+0x1c0>
     564:	lsl	r4, r4, #4
     568:	orr	r4, r4, ip, lsr #28
     56c:	lsl	ip, ip, #4
     570:	mov	r9, #0
     574:	adds	lr, ip, r1
     578:	adc	r4, r4, r9
     57c:	mov	r9, lr
     580:	mov	r1, #0
     584:	mov	ip, #97	; 0x61
     588:	subs	r9, r9, ip
     58c:	sbc	r4, r4, r1
     590:	mov	ip, #0
     594:	mov	r1, #10
     598:	adds	lr, r9, r1
     59c:	adc	r4, r4, ip
     5a0:	mov	ip, lr
     5a4:	b	5d8 <parse_hex_integer+0x1b8>
     5a8:	lsl	r4, r4, #4
     5ac:	orr	r4, r4, ip, lsr #28
     5b0:	lsl	r9, ip, #4
     5b4:	mov	ip, #0
     5b8:	adds	lr, r9, r1
     5bc:	adc	r9, r4, ip
     5c0:	mov	r4, lr
     5c4:	mov	ip, #0
     5c8:	mov	r1, #48	; 0x30
     5cc:	subs	lr, r4, r1
     5d0:	sbc	r4, r9, ip
     5d4:	mov	ip, lr
     5d8:	add	r0, r0, #1
     5dc:	b	504 <parse_hex_integer+0xe4>
     5e0:	cmp	r0, r7
     5e4:	bne	60c <parse_hex_integer+0x1ec>
     5e8:	cmp	r5, #0
     5ec:	beq	600 <parse_hex_integer+0x1e0>
     5f0:	mvn	r0, #2
     5f4:	str	r0, [r3]
     5f8:	mov	r0, #0
     5fc:	b	6e8 <parse_hex_integer+0x2c8>
     600:	mvn	ip, #3
     604:	str	ip, [r3]
     608:	b	6e8 <parse_hex_integer+0x2c8>
     60c:	cmp	r0, r6
     610:	beq	6dc <parse_hex_integer+0x2bc>
     614:	ldrb	r1, [r0]
     618:	and	r1, r1, #255	; 0xff
     61c:	cmp	r0, r8
     620:	bne	6b4 <parse_hex_integer+0x294>
     624:	cmp	r1, #48	; 0x30
     628:	bge	634 <parse_hex_integer+0x214>
     62c:	mov	r6, #0
     630:	b	640 <parse_hex_integer+0x220>
     634:	cmp	r1, #57	; 0x39
     638:	movle	r6, #1
     63c:	movgt	r6, #0
     640:	cmp	r6, #0
     644:	beq	668 <parse_hex_integer+0x248>
     648:	cmp	r5, #0
     64c:	bne	658 <parse_hex_integer+0x238>
     650:	mvn	r1, #0
     654:	b	65c <parse_hex_integer+0x23c>
     658:	mvn	r1, #1
     65c:	str	r1, [r3]
     660:	mov	r0, #0
     664:	b	6e8 <parse_hex_integer+0x2c8>
     668:	orr	r1, r1, #32
     66c:	and	r1, r1, #255	; 0xff
     670:	cmp	r1, #97	; 0x61
     674:	bge	680 <parse_hex_integer+0x260>
     678:	mov	r6, #0
     67c:	b	68c <parse_hex_integer+0x26c>
     680:	cmp	r1, #102	; 0x66
     684:	movle	r6, #1
     688:	movgt	r6, #0
     68c:	cmp	r6, #0
     690:	beq	6b4 <parse_hex_integer+0x294>
     694:	cmp	r5, #0
     698:	bne	6a4 <parse_hex_integer+0x284>
     69c:	mvn	ip, #0
     6a0:	b	6a8 <parse_hex_integer+0x288>
     6a4:	mvn	ip, #1
     6a8:	str	ip, [r3]
     6ac:	mov	r0, #0
     6b0:	b	6e8 <parse_hex_integer+0x2c8>
     6b4:	cmp	r1, #46	; 0x2e
     6b8:	beq	6cc <parse_hex_integer+0x2ac>
     6bc:	cmp	r1, #80	; 0x50
     6c0:	beq	6cc <parse_hex_integer+0x2ac>
     6c4:	cmp	r1, #112	; 0x70
     6c8:	bne	6dc <parse_hex_integer+0x2bc>
     6cc:	mvn	ip, #2
     6d0:	str	ip, [r3]
     6d4:	mov	r0, #0
     6d8:	b	6e8 <parse_hex_integer+0x2c8>
     6dc:	str	ip, [r2]
     6e0:	str	r4, [r2, #4]
     6e4:	str	r5, [r3]
     6e8:	ldr	r4, [sp, #8]
     6ec:	ldr	r5, [sp, #12]
     6f0:	ldr	r6, [sp, #16]
     6f4:	ldr	r7, [sp, #20]
     6f8:	ldr	r8, [sp, #24]
     6fc:	ldr	r9, [sp, #28]
     700:	ldr	lr, [sp, #4]
     704:	add	sp, sp, #40	; 0x28
     708:	bx	lr

0000070c <__flatcc_fb_default_error_out>:
     70c:	mov	ip, sp
     710:	sub	sp, sp, #8
     714:	str	ip, [sp]
     718:	str	lr, [sp, #4]
     71c:	mov	r0, #1
     720:	ldr	r3, [pc, #28]	; 744 <__flatcc_fb_default_error_out+0x38>
     724:	ldr	r3, [r3]
     728:	mov	ip, r0
     72c:	mov	r0, r1
     730:	mov	r1, ip
     734:	bl	0 <fwrite>
     738:	ldr	lr, [sp, #4]
     73c:	add	sp, sp, #8
     740:	bx	lr
     744:	.word	0x00000000

00000748 <__flatcc_fb_print_error>:
     748:	mov	ip, sp
     74c:	push	{r0, r1, r2, r3}
     750:	sub	sp, sp, #224	; 0xe0
     754:	str	ip, [sp]
     758:	str	lr, [sp, #4]
     75c:	str	r4, [sp, #8]
     760:	str	r5, [sp, #12]
     764:	mov	r5, r0
     768:	add	r2, sp, #16
     76c:	add	lr, sp, #232	; 0xe8
     770:	str	lr, [r2]
     774:	add	r0, sp, #24
     778:	mov	r2, #200	; 0xc8
     77c:	ldr	r3, [sp, #16]
     780:	mov	ip, r1
     784:	mov	r1, r2
     788:	mov	r2, ip
     78c:	bl	0 <vsnprintf>
     790:	mov	r4, r0
     794:	cmp	r4, #200	; 0xc8
     798:	blt	7ac <__flatcc_fb_print_error+0x64>
     79c:	add	r0, sp, #219	; 0xdb
     7a0:	ldr	r1, [pc, #48]	; 7d8 <__flatcc_fb_print_error+0x90>
     7a4:	bl	0 <strcpy>
     7a8:	mov	r4, #199	; 0xc7
     7ac:	ldr	ip, [r5, #8]
     7b0:	ldr	r0, [r5, #12]
     7b4:	add	r1, sp, #24
     7b8:	mov	r2, r4
     7bc:	blx	ip
     7c0:	mov	r0, r4
     7c4:	ldr	r4, [sp, #8]
     7c8:	ldr	r5, [sp, #12]
     7cc:	ldr	lr, [sp, #4]
     7d0:	add	sp, sp, #240	; 0xf0
     7d4:	bx	lr
     7d8:	.word	0x0000066f

000007dc <__flatcc_error_find_file_of_token>:
     7dc:	mov	ip, sp
     7e0:	sub	sp, sp, #8
     7e4:	str	ip, [sp]
     7e8:	str	lr, [sp, #4]
     7ec:	cmp	r0, #0
     7f0:	beq	830 <__flatcc_error_find_file_of_token+0x54>
     7f4:	ldr	r2, [r0, #20]
     7f8:	cmp	r2, r1
     7fc:	bhi	814 <__flatcc_error_find_file_of_token+0x38>
     800:	ldr	r2, [r0, #24]
     804:	cmp	r2, r1
     808:	movhi	r3, #1
     80c:	movls	r3, #0
     810:	b	818 <__flatcc_error_find_file_of_token+0x3c>
     814:	mov	r3, #0
     818:	cmp	r3, #0
     81c:	beq	828 <__flatcc_error_find_file_of_token+0x4c>
     820:	ldr	r0, [r0, #520]	; 0x208
     824:	b	834 <__flatcc_error_find_file_of_token+0x58>
     828:	ldr	r0, [r0]
     82c:	b	7ec <__flatcc_error_find_file_of_token+0x10>
     830:	ldr	r0, [pc, #8]	; 840 <__flatcc_error_find_file_of_token+0x64>
     834:	ldr	lr, [sp, #4]
     838:	add	sp, sp, #8
     83c:	bx	lr
     840:	.word	0x00000c3c

00000844 <__flatcc_error_report>:
     844:	mov	ip, sp
     848:	sub	sp, sp, #88	; 0x58
     84c:	str	ip, [sp, #36]	; 0x24
     850:	str	lr, [sp, #40]	; 0x28
     854:	str	r4, [sp, #52]	; 0x34
     858:	str	r5, [sp, #56]	; 0x38
     85c:	str	r6, [sp, #60]	; 0x3c
     860:	str	r7, [sp, #64]	; 0x40
     864:	str	r8, [sp, #68]	; 0x44
     868:	str	r9, [sp, #72]	; 0x48
     86c:	str	sl, [sp, #76]	; 0x4c
     870:	str	fp, [sp, #80]	; 0x50
     874:	ldr	r6, [ip, #4]
     878:	ldr	r4, [ip]
     87c:	mov	r5, r3
     880:	mov	r8, r2
     884:	mov	r9, r1
     888:	mov	r7, r0
     88c:	cmp	r9, #0
     890:	bne	89c <__flatcc_error_report+0x58>
     894:	mov	r1, #0
     898:	b	8a8 <__flatcc_error_report+0x64>
     89c:	cmp	r4, #0
     8a0:	moveq	r1, #1
     8a4:	movne	r1, #0
     8a8:	cmp	r1, #0
     8ac:	beq	8b8 <__flatcc_error_report+0x74>
     8b0:	ldr	r4, [r9]
     8b4:	ldr	r6, [r9, #4]
     8b8:	cmp	r8, #0
     8bc:	bne	8c4 <__flatcc_error_report+0x80>
     8c0:	ldr	r8, [pc, #468]	; a9c <__flatcc_error_report+0x258>
     8c4:	cmp	r4, #0
     8c8:	bne	8d4 <__flatcc_error_report+0x90>
     8cc:	ldr	r4, [pc, #456]	; a9c <__flatcc_error_report+0x258>
     8d0:	mov	r6, #0
     8d4:	cmp	r9, #0
     8d8:	bne	8e4 <__flatcc_error_report+0xa0>
     8dc:	mov	r3, #0
     8e0:	b	8f0 <__flatcc_error_report+0xac>
     8e4:	cmp	r5, #0
     8e8:	moveq	r3, #1
     8ec:	movne	r3, #0
     8f0:	cmp	r3, #0
     8f4:	bne	a1c <__flatcc_error_report+0x1d8>
     8f8:	cmp	r9, #0
     8fc:	bne	908 <__flatcc_error_report+0xc4>
     900:	mov	ip, #0
     904:	b	914 <__flatcc_error_report+0xd0>
     908:	cmp	r5, #0
     90c:	movne	ip, #1
     910:	moveq	ip, #0
     914:	cmp	ip, #0
     918:	beq	988 <__flatcc_error_report+0x144>
     91c:	mov	r1, r9
     920:	mov	r0, r7
     924:	bl	7dc <__flatcc_error_find_file_of_token>
     928:	str	r0, [sp, #48]	; 0x30
     92c:	mov	r1, r5
     930:	mov	r0, r7
     934:	bl	7dc <__flatcc_error_find_file_of_token>
     938:	ldr	r1, [pc, #328]	; a88 <__flatcc_error_report+0x244>
     93c:	ldr	r3, [r9, #8]
     940:	ldr	r2, [r9, #12]
     944:	ldr	r9, [r5, #8]
     948:	ldr	fp, [r5, #12]
     94c:	ldr	sl, [r5, #4]
     950:	ldr	r5, [r5]
     954:	str	r5, [sp, #32]
     958:	str	sl, [sp, #28]
     95c:	str	fp, [sp, #24]
     960:	str	r9, [sp, #20]
     964:	str	r0, [sp, #16]
     968:	str	r8, [sp, #12]
     96c:	str	r4, [sp, #8]
     970:	str	r6, [sp, #4]
     974:	str	r2, [sp]
     978:	ldr	r2, [sp, #48]	; 0x30
     97c:	mov	r0, r7
     980:	bl	748 <__flatcc_fb_print_error>
     984:	b	a50 <__flatcc_error_report+0x20c>
     988:	cmp	r9, #0
     98c:	beq	998 <__flatcc_error_report+0x154>
     990:	mov	ip, #0
     994:	b	9a4 <__flatcc_error_report+0x160>
     998:	cmp	r5, #0
     99c:	moveq	ip, #1
     9a0:	movne	ip, #0
     9a4:	cmp	ip, #0
     9a8:	bne	a08 <__flatcc_error_report+0x1c4>
     9ac:	cmp	r5, #0
     9b0:	beq	9f8 <__flatcc_error_report+0x1b4>
     9b4:	mov	r1, r5
     9b8:	mov	r0, r7
     9bc:	bl	7dc <__flatcc_error_find_file_of_token>
     9c0:	mov	r3, r0
     9c4:	ldr	r1, [pc, #204]	; a98 <__flatcc_error_report+0x254>
     9c8:	ldr	r2, [r5, #8]
     9cc:	ldr	r4, [r5, #12]
     9d0:	ldr	r0, [r5, #4]
     9d4:	ldr	r5, [r5]
     9d8:	str	r5, [sp, #12]
     9dc:	str	r0, [sp, #8]
     9e0:	str	r4, [sp, #4]
     9e4:	str	r2, [sp]
     9e8:	mov	r2, r8
     9ec:	mov	r0, r7
     9f0:	bl	748 <__flatcc_fb_print_error>
     9f4:	b	a50 <__flatcc_error_report+0x20c>
     9f8:	ldr	r1, [pc, #144]	; a90 <__flatcc_error_report+0x24c>
     9fc:	mov	r0, r7
     a00:	bl	748 <__flatcc_fb_print_error>
     a04:	b	a50 <__flatcc_error_report+0x20c>
     a08:	ldr	r1, [pc, #132]	; a94 <__flatcc_error_report+0x250>
     a0c:	mov	r2, r8
     a10:	mov	r0, r7
     a14:	bl	748 <__flatcc_fb_print_error>
     a18:	b	a50 <__flatcc_error_report+0x20c>
     a1c:	mov	r1, r9
     a20:	mov	r0, r7
     a24:	bl	7dc <__flatcc_error_find_file_of_token>
     a28:	mov	r2, r0
     a2c:	ldr	r1, [pc, #88]	; a8c <__flatcc_error_report+0x248>
     a30:	ldr	r3, [r9, #8]
     a34:	ldr	r0, [r9, #12]
     a38:	str	r8, [sp, #12]
     a3c:	str	r4, [sp, #8]
     a40:	str	r6, [sp, #4]
     a44:	str	r0, [sp]
     a48:	mov	r0, r7
     a4c:	bl	748 <__flatcc_fb_print_error>
     a50:	ldr	r3, [r7, #108]	; 0x6c
     a54:	add	r3, r3, #1
     a58:	str	r3, [r7, #108]	; 0x6c
     a5c:	ldr	r4, [sp, #52]	; 0x34
     a60:	ldr	r5, [sp, #56]	; 0x38
     a64:	ldr	r6, [sp, #60]	; 0x3c
     a68:	ldr	r7, [sp, #64]	; 0x40
     a6c:	ldr	r8, [sp, #68]	; 0x44
     a70:	ldr	r9, [sp, #72]	; 0x48
     a74:	ldr	sl, [sp, #76]	; 0x4c
     a78:	ldr	fp, [sp, #80]	; 0x50
     a7c:	ldr	lr, [sp, #40]	; 0x28
     a80:	add	sp, sp, #88	; 0x58
     a84:	bx	lr
     a88:	.word	0x0000059f
     a8c:	.word	0x000002a2
     a90:	.word	0x000004a6
     a94:	.word	0x00000159
     a98:	.word	0x000001ee
     a9c:	.word	0x00000c3c

00000aa0 <error_ref_sym>:
     aa0:	mov	ip, sp
     aa4:	sub	sp, sp, #104	; 0x68
     aa8:	str	ip, [sp, #8]
     aac:	str	lr, [sp, #12]
     ab0:	str	r4, [sp, #16]
     ab4:	str	r5, [sp, #20]
     ab8:	str	r6, [sp, #24]
     abc:	str	r7, [sp, #28]
     ac0:	str	r8, [sp, #32]
     ac4:	str	r9, [sp, #36]	; 0x24
     ac8:	str	sl, [sp, #40]	; 0x28
     acc:	str	fp, [sp, #44]	; 0x2c
     ad0:	mov	r5, r3
     ad4:	mov	r6, r2
     ad8:	mov	sl, r1
     adc:	mov	r7, r0
     ae0:	mov	r8, #50	; 0x32
     ae4:	mov	fp, #0
     ae8:	mov	r9, sl
     aec:	cmp	r9, #0
     af0:	bne	afc <error_ref_sym+0x5c>
     af4:	mov	r3, #0
     af8:	b	b08 <error_ref_sym+0x68>
     afc:	cmp	r8, #0
     b00:	movgt	r3, #1
     b04:	movle	r3, #0
     b08:	cmp	r3, #0
     b0c:	beq	b60 <error_ref_sym+0xc0>
     b10:	ldr	r0, [r9, #4]
     b14:	ldr	r4, [r0, #4]
     b18:	cmp	r8, r4
     b1c:	bge	b24 <error_ref_sym+0x84>
     b20:	mov	r4, r8
     b24:	add	r2, sp, #48	; 0x30
     b28:	add	r0, r2, fp
     b2c:	ldr	r1, [r9, #4]
     b30:	ldr	r1, [r1]
     b34:	mov	r2, r4
     b38:	bl	0 <memcpy>
     b3c:	sub	r1, r8, r4
     b40:	add	ip, fp, r4
     b44:	add	r2, sp, #48	; 0x30
     b48:	mov	r3, #46	; 0x2e
     b4c:	strb	r3, [r2, ip]
     b50:	sub	r8, r1, #1
     b54:	add	fp, ip, #1
     b58:	ldr	r9, [r9]
     b5c:	b	aec <error_ref_sym+0x4c>
     b60:	add	r0, sp, #48	; 0x30
     b64:	mov	ip, #0
     b68:	strb	ip, [r0, fp]
     b6c:	cmp	fp, #0
     b70:	ble	b78 <error_ref_sym+0xd8>
     b74:	sub	fp, fp, #1
     b78:	cmp	r8, #0
     b7c:	bgt	b94 <error_ref_sym+0xf4>
     b80:	add	r0, sp, #95	; 0x5f
     b84:	ldr	r1, [pc, #100]	; bf0 <error_ref_sym+0x150>
     b88:	mov	r2, #4
     b8c:	bl	0 <memcpy>
     b90:	mov	fp, #50	; 0x32
     b94:	cmp	r5, #0
     b98:	bne	ba4 <error_ref_sym+0x104>
     b9c:	mov	r3, #0
     ba0:	b	ba8 <error_ref_sym+0x108>
     ba4:	ldr	r3, [r5, #4]
     ba8:	ldr	r1, [sl, #4]
     bac:	add	r2, sp, #48	; 0x30
     bb0:	str	fp, [sp, #4]
     bb4:	str	r2, [sp]
     bb8:	mov	r2, r6
     bbc:	mov	r0, r7
     bc0:	bl	844 <__flatcc_error_report>
     bc4:	ldr	r4, [sp, #16]
     bc8:	ldr	r5, [sp, #20]
     bcc:	ldr	r6, [sp, #24]
     bd0:	ldr	r7, [sp, #28]
     bd4:	ldr	r8, [sp, #32]
     bd8:	ldr	r9, [sp, #36]	; 0x24
     bdc:	ldr	sl, [sp, #40]	; 0x28
     be0:	ldr	fp, [sp, #44]	; 0x2c
     be4:	ldr	lr, [sp, #12]
     be8:	add	sp, sp, #104	; 0x68
     bec:	bx	lr
     bf0:	.word	0x00000786

00000bf4 <revert_metadata>:
     bf4:	mov	ip, sp
     bf8:	sub	sp, sp, #8
     bfc:	str	ip, [sp]
     c00:	str	lr, [sp, #4]
     c04:	mov	r3, #0
     c08:	ldr	r2, [r0]
     c0c:	cmp	r2, #0
     c10:	beq	c28 <revert_metadata+0x34>
     c14:	ldr	r1, [r2]
     c18:	str	r3, [r2]
     c1c:	mov	r3, r2
     c20:	mov	r2, r1
     c24:	b	c0c <revert_metadata+0x18>
     c28:	str	r3, [r0]
     c2c:	ldr	lr, [sp, #4]
     c30:	add	sp, sp, #8
     c34:	bx	lr

00000c38 <revert_symbols>:
     c38:	mov	ip, sp
     c3c:	sub	sp, sp, #8
     c40:	str	ip, [sp]
     c44:	str	lr, [sp, #4]
     c48:	mov	r3, #0
     c4c:	ldr	r2, [r0]
     c50:	cmp	r2, #0
     c54:	beq	c6c <revert_symbols+0x34>
     c58:	ldr	r1, [r2]
     c5c:	str	r3, [r2]
     c60:	mov	r3, r2
     c64:	mov	r2, r1
     c68:	b	c50 <revert_symbols+0x18>
     c6c:	str	r3, [r0]
     c70:	ldr	lr, [sp, #4]
     c74:	add	sp, sp, #8
     c78:	bx	lr

00000c7c <revert_names>:
     c7c:	mov	ip, sp
     c80:	sub	sp, sp, #8
     c84:	str	ip, [sp]
     c88:	str	lr, [sp, #4]
     c8c:	mov	r3, #0
     c90:	ldr	r2, [r0]
     c94:	cmp	r2, #0
     c98:	beq	cb0 <revert_names+0x34>
     c9c:	ldr	r1, [r2]
     ca0:	str	r3, [r2]
     ca4:	mov	r3, r2
     ca8:	mov	r2, r1
     cac:	b	c94 <revert_names+0x18>
     cb0:	str	r3, [r0]
     cb4:	ldr	lr, [sp, #4]
     cb8:	add	sp, sp, #8
     cbc:	bx	lr

00000cc0 <fb_add_doc>:
     cc0:	mov	ip, sp
     cc4:	sub	sp, sp, #16
     cc8:	str	ip, [sp]
     ccc:	str	lr, [sp, #4]
     cd0:	str	r4, [sp, #8]
     cd4:	str	r5, [sp, #12]
     cd8:	mov	r5, r1
     cdc:	mov	r4, r0
     ce0:	mov	r1, #12
     ce4:	mov	r0, r4
     ce8:	bl	44 <new_elem>
     cec:	str	r5, [r0, #4]
     cf0:	ldr	r2, [r4, #36]	; 0x24
     cf4:	str	r2, [r0]
     cf8:	str	r0, [r4, #36]	; 0x24
     cfc:	ldr	r4, [sp, #8]
     d00:	ldr	r5, [sp, #12]
     d04:	ldr	lr, [sp, #4]
     d08:	add	sp, sp, #16
     d0c:	bx	lr

00000d10 <fb_add_table>:
     d10:	mov	ip, sp
     d14:	sub	sp, sp, #16
     d18:	str	ip, [sp]
     d1c:	str	lr, [sp, #4]
     d20:	str	r4, [sp, #8]
     d24:	str	r5, [sp, #12]
     d28:	mov	r5, r0
     d2c:	mov	r1, #128	; 0x80
     d30:	mov	r0, r5
     d34:	bl	44 <new_elem>
     d38:	mov	r4, r0
     d3c:	ldr	ip, [r5, #392]	; 0x188
     d40:	str	ip, [r4]
     d44:	mov	r2, #0
     d48:	strh	r2, [r4, #8]
     d4c:	str	r4, [r5, #392]	; 0x188
     d50:	ldr	r0, [r5, #544]	; 0x220
     d54:	str	r0, [r4, #12]
     d58:	add	r0, r5, #36	; 0x24
     d5c:	bl	c38 <revert_symbols>
     d60:	ldr	r3, [r5, #36]	; 0x24
     d64:	str	r3, [r4, #32]
     d68:	mov	r0, #0
     d6c:	str	r0, [r5, #36]	; 0x24
     d70:	mov	r0, r4
     d74:	ldr	r4, [sp, #8]
     d78:	ldr	r5, [sp, #12]
     d7c:	ldr	lr, [sp, #4]
     d80:	add	sp, sp, #16
     d84:	bx	lr

00000d88 <fb_add_struct>:
     d88:	mov	ip, sp
     d8c:	sub	sp, sp, #16
     d90:	str	ip, [sp]
     d94:	str	lr, [sp, #4]
     d98:	str	r4, [sp, #8]
     d9c:	str	r5, [sp, #12]
     da0:	mov	r5, r0
     da4:	mov	r1, #128	; 0x80
     da8:	mov	r0, r5
     dac:	bl	44 <new_elem>
     db0:	mov	r4, r0
     db4:	ldr	ip, [r5, #392]	; 0x188
     db8:	str	ip, [r4]
     dbc:	mov	r2, #1
     dc0:	strh	r2, [r4, #8]
     dc4:	str	r4, [r5, #392]	; 0x188
     dc8:	ldr	r0, [r5, #544]	; 0x220
     dcc:	str	r0, [r4, #12]
     dd0:	add	r0, r5, #36	; 0x24
     dd4:	bl	c38 <revert_symbols>
     dd8:	ldr	r3, [r5, #36]	; 0x24
     ddc:	str	r3, [r4, #32]
     de0:	mov	r0, #0
     de4:	str	r0, [r5, #36]	; 0x24
     de8:	mov	r0, r4
     dec:	ldr	r4, [sp, #8]
     df0:	ldr	r5, [sp, #12]
     df4:	ldr	lr, [sp, #4]
     df8:	add	sp, sp, #16
     dfc:	bx	lr

00000e00 <fb_add_rpc_service>:
     e00:	mov	ip, sp
     e04:	sub	sp, sp, #16
     e08:	str	ip, [sp]
     e0c:	str	lr, [sp, #4]
     e10:	str	r4, [sp, #8]
     e14:	str	r5, [sp, #12]
     e18:	mov	r5, r0
     e1c:	mov	r1, #128	; 0x80
     e20:	mov	r0, r5
     e24:	bl	44 <new_elem>
     e28:	mov	r4, r0
     e2c:	ldr	ip, [r5, #392]	; 0x188
     e30:	str	ip, [r4]
     e34:	mov	r2, #2
     e38:	strh	r2, [r4, #8]
     e3c:	str	r4, [r5, #392]	; 0x188
     e40:	ldr	r0, [r5, #544]	; 0x220
     e44:	str	r0, [r4, #12]
     e48:	add	r0, r5, #36	; 0x24
     e4c:	bl	c38 <revert_symbols>
     e50:	ldr	r3, [r5, #36]	; 0x24
     e54:	str	r3, [r4, #32]
     e58:	mov	r0, #0
     e5c:	str	r0, [r5, #36]	; 0x24
     e60:	mov	r0, r4
     e64:	ldr	r4, [sp, #8]
     e68:	ldr	r5, [sp, #12]
     e6c:	ldr	lr, [sp, #4]
     e70:	add	sp, sp, #16
     e74:	bx	lr

00000e78 <fb_add_enum>:
     e78:	mov	ip, sp
     e7c:	sub	sp, sp, #16
     e80:	str	ip, [sp]
     e84:	str	lr, [sp, #4]
     e88:	str	r4, [sp, #8]
     e8c:	str	r5, [sp, #12]
     e90:	mov	r5, r0
     e94:	mov	r1, #128	; 0x80
     e98:	mov	r0, r5
     e9c:	bl	44 <new_elem>
     ea0:	mov	r4, r0
     ea4:	ldr	ip, [r5, #392]	; 0x188
     ea8:	str	ip, [r4]
     eac:	mov	r2, #3
     eb0:	strh	r2, [r4, #8]
     eb4:	str	r4, [r5, #392]	; 0x188
     eb8:	ldr	r0, [r5, #544]	; 0x220
     ebc:	str	r0, [r4, #12]
     ec0:	add	r0, r5, #36	; 0x24
     ec4:	bl	c38 <revert_symbols>
     ec8:	ldr	r3, [r5, #36]	; 0x24
     ecc:	str	r3, [r4, #32]
     ed0:	mov	r0, #0
     ed4:	str	r0, [r5, #36]	; 0x24
     ed8:	mov	r0, r4
     edc:	ldr	r4, [sp, #8]
     ee0:	ldr	r5, [sp, #12]
     ee4:	ldr	lr, [sp, #4]
     ee8:	add	sp, sp, #16
     eec:	bx	lr

00000ef0 <fb_add_union>:
     ef0:	mov	ip, sp
     ef4:	sub	sp, sp, #16
     ef8:	str	ip, [sp]
     efc:	str	lr, [sp, #4]
     f00:	str	r4, [sp, #8]
     f04:	str	r5, [sp, #12]
     f08:	mov	r5, r0
     f0c:	mov	r1, #128	; 0x80
     f10:	mov	r0, r5
     f14:	bl	44 <new_elem>
     f18:	mov	r4, r0
     f1c:	ldr	ip, [r5, #392]	; 0x188
     f20:	str	ip, [r4]
     f24:	mov	r2, #4
     f28:	strh	r2, [r4, #8]
     f2c:	str	r4, [r5, #392]	; 0x188
     f30:	ldr	r0, [r5, #544]	; 0x220
     f34:	str	r0, [r4, #12]
     f38:	add	r0, r5, #36	; 0x24
     f3c:	bl	c38 <revert_symbols>
     f40:	ldr	r3, [r5, #36]	; 0x24
     f44:	str	r3, [r4, #32]
     f48:	mov	r0, #0
     f4c:	str	r0, [r5, #36]	; 0x24
     f50:	mov	r0, r4
     f54:	ldr	r4, [sp, #8]
     f58:	ldr	r5, [sp, #12]
     f5c:	ldr	lr, [sp, #4]
     f60:	add	sp, sp, #16
     f64:	bx	lr

00000f68 <fb_add_ref>:
     f68:	mov	ip, sp
     f6c:	sub	sp, sp, #16
     f70:	str	ip, [sp]
     f74:	str	lr, [sp, #4]
     f78:	str	r4, [sp, #8]
     f7c:	mov	r4, r1
     f80:	mov	r1, #12
     f84:	bl	44 <new_elem>
     f88:	str	r4, [r0, #4]
     f8c:	ldr	r4, [sp, #8]
     f90:	ldr	lr, [sp, #4]
     f94:	add	sp, sp, #16
     f98:	bx	lr

00000f9c <fb_add_attribute>:
     f9c:	mov	ip, sp
     fa0:	sub	sp, sp, #16
     fa4:	str	ip, [sp]
     fa8:	str	lr, [sp, #4]
     fac:	str	r4, [sp, #8]
     fb0:	mov	r4, r0
     fb4:	mov	r1, #32
     fb8:	mov	r0, r4
     fbc:	bl	44 <new_elem>
     fc0:	ldr	r1, [r4, #356]	; 0x164
     fc4:	str	r1, [r0]
     fc8:	str	r0, [r4, #356]	; 0x164
     fcc:	ldr	r4, [sp, #8]
     fd0:	ldr	lr, [sp, #4]
     fd4:	add	sp, sp, #16
     fd8:	bx	lr

00000fdc <fb_add_include>:
     fdc:	mov	ip, sp
     fe0:	sub	sp, sp, #16
     fe4:	str	ip, [sp]
     fe8:	str	lr, [sp, #4]
     fec:	str	r4, [sp, #8]
     ff0:	mov	r4, r0
     ff4:	mov	r1, #24
     ff8:	mov	r0, r4
     ffc:	bl	44 <new_elem>
    1000:	ldr	r1, [r4, #352]	; 0x160
    1004:	str	r1, [r0]
    1008:	str	r0, [r4, #352]	; 0x160
    100c:	ldr	r4, [sp, #8]
    1010:	ldr	lr, [sp, #4]
    1014:	add	sp, sp, #16
    1018:	bx	lr

0000101c <fb_add_scope>:
    101c:	mov	ip, sp
    1020:	sub	sp, sp, #24
    1024:	str	ip, [sp]
    1028:	str	lr, [sp, #4]
    102c:	str	r4, [sp, #8]
    1030:	str	r5, [sp, #12]
    1034:	str	r6, [sp, #16]
    1038:	mov	r4, r1
    103c:	mov	r6, r0
    1040:	ldr	r0, [r6, #412]	; 0x19c
    1044:	mov	r2, #0
    1048:	mov	r1, r4
    104c:	bl	0 <fb_scope_table_find>
    1050:	cmp	r0, #0
    1054:	bne	1090 <fb_add_scope+0x74>
    1058:	mov	r1, #28
    105c:	mov	r0, r6
    1060:	bl	44 <new_elem>
    1064:	mov	r5, r0
    1068:	str	r4, [r5]
    106c:	add	r0, r5, #20
    1070:	add	r2, r6, #476	; 0x1dc
    1074:	vldr	d7, [r2]
    1078:	vstr	d7, [r0]
    107c:	ldr	r0, [r6, #412]	; 0x19c
    1080:	mov	r2, #1
    1084:	mov	r1, r5
    1088:	bl	0 <fb_scope_table_insert_item>
    108c:	mov	r0, r5
    1090:	ldr	r4, [sp, #8]
    1094:	ldr	r5, [sp, #12]
    1098:	ldr	r6, [sp, #16]
    109c:	ldr	lr, [sp, #4]
    10a0:	add	sp, sp, #24
    10a4:	bx	lr

000010a8 <fb_add_metadata>:
    10a8:	mov	ip, sp
    10ac:	sub	sp, sp, #16
    10b0:	str	ip, [sp]
    10b4:	str	lr, [sp, #4]
    10b8:	str	r4, [sp, #8]
    10bc:	mov	r4, r1
    10c0:	mov	r1, #24
    10c4:	bl	44 <new_elem>
    10c8:	ldr	r1, [r4]
    10cc:	str	r1, [r0]
    10d0:	str	r0, [r4]
    10d4:	ldr	r4, [sp, #8]
    10d8:	ldr	lr, [sp, #4]
    10dc:	add	sp, sp, #16
    10e0:	bx	lr

000010e4 <fb_add_member>:
    10e4:	mov	ip, sp
    10e8:	sub	sp, sp, #24
    10ec:	str	ip, [sp]
    10f0:	str	lr, [sp, #4]
    10f4:	str	r4, [sp, #8]
    10f8:	str	r5, [sp, #12]
    10fc:	str	r6, [sp, #16]
    1100:	mov	r5, r1
    1104:	mov	r6, r0
    1108:	mov	r1, #120	; 0x78
    110c:	mov	r0, r6
    1110:	bl	44 <new_elem>
    1114:	mov	r4, r0
    1118:	ldr	r2, [r5]
    111c:	str	r2, [r4]
    1120:	mov	r0, #5
    1124:	strh	r0, [r4, #8]
    1128:	str	r4, [r5]
    112c:	add	r0, r6, #36	; 0x24
    1130:	bl	c38 <revert_symbols>
    1134:	ldr	ip, [r6, #36]	; 0x24
    1138:	str	ip, [r4, #68]	; 0x44
    113c:	mov	r1, #0
    1140:	str	r1, [r6, #36]	; 0x24
    1144:	mov	r0, r4
    1148:	ldr	r4, [sp, #8]
    114c:	ldr	r5, [sp, #12]
    1150:	ldr	r6, [sp, #16]
    1154:	ldr	lr, [sp, #4]
    1158:	add	sp, sp, #24
    115c:	bx	lr

00001160 <is_end>:
    1160:	mov	ip, sp
    1164:	sub	sp, sp, #8
    1168:	str	ip, [sp]
    116c:	str	lr, [sp, #4]
    1170:	ldr	r0, [r0, #16]
    1174:	cmp	r0, #0
    1178:	moveq	r0, #1
    117c:	movne	r0, #0
    1180:	ldr	lr, [sp, #4]
    1184:	add	sp, sp, #8
    1188:	bx	lr

0000118c <next>:
    118c:	mov	ip, sp
    1190:	sub	sp, sp, #16
    1194:	str	ip, [sp]
    1198:	str	lr, [sp, #4]
    119c:	str	r4, [sp, #8]
    11a0:	mov	r4, r0
    11a4:	ldr	ip, [r4, #40]	; 0x28
    11a8:	add	r2, ip, #20
    11ac:	str	r2, [r4, #40]	; 0x28
    11b0:	ldr	ip, [r4, #40]	; 0x28
    11b4:	ldr	r0, [r4, #24]
    11b8:	cmp	ip, r0
    11bc:	bne	1228 <next+0x9c>
    11c0:	ldr	r3, [r4, #40]	; 0x28
    11c4:	sub	r1, r3, #20
    11c8:	str	r1, [r4, #40]	; 0x28
    11cc:	ldr	r0, [pc, #144]	; 1264 <next+0xd8>
    11d0:	ldr	r1, [pc, #136]	; 1260 <next+0xd4>
    11d4:	movw	r2, #341	; 0x155
    11d8:	ldr	r3, [pc, #136]	; 1268 <next+0xdc>
    11dc:	bl	0 <__assert_fail>
    11e0:	ldr	r2, [r4, #40]	; 0x28
    11e4:	ldr	r3, [r2, #16]
    11e8:	cmp	r3, #0
    11ec:	beq	1214 <next+0x88>
    11f0:	cmp	r3, #1
    11f4:	beq	1214 <next+0x88>
    11f8:	cmp	r3, #2
    11fc:	beq	1214 <next+0x88>
    1200:	ldr	r1, [r4, #40]	; 0x28
    1204:	ldr	r2, [pc, #80]	; 125c <next+0xd0>
    1208:	mov	r0, r4
    120c:	bl	118 <error_tok>
    1210:	b	1228 <next+0x9c>
    1214:	ldr	r3, [r4, #40]	; 0x28
    1218:	mov	r0, #0
    121c:	str	r0, [r3, #16]
    1220:	ldr	r0, [r4, #40]	; 0x28
    1224:	b	124c <next+0xc0>
    1228:	ldr	r2, [r4, #40]	; 0x28
    122c:	ldr	r1, [r2, #16]
    1230:	cmn	r1, #964	; 0x3c4
    1234:	bne	1248 <next+0xbc>
    1238:	ldr	r1, [r4, #40]	; 0x28
    123c:	mov	r0, r4
    1240:	bl	cc0 <fb_add_doc>
    1244:	b	11a4 <next+0x18>
    1248:	ldr	r0, [r4, #40]	; 0x28
    124c:	ldr	r4, [sp, #8]
    1250:	ldr	lr, [sp, #4]
    1254:	add	sp, sp, #16
    1258:	bx	lr
    125c:	.word	0x00000141
    1260:	.word	0x00000a85
    1264:	.word	0x00000ae5
    1268:	.word	0x00000c75

0000126c <recover>:
    126c:	mov	ip, sp
    1270:	sub	sp, sp, #24
    1274:	str	ip, [sp]
    1278:	str	lr, [sp, #4]
    127c:	str	r4, [sp, #8]
    1280:	str	r5, [sp, #12]
    1284:	str	r6, [sp, #16]
    1288:	mov	r5, r2
    128c:	mov	r6, r1
    1290:	mov	r4, r0
    1294:	ldr	r0, [r4, #40]	; 0x28
    1298:	bl	1160 <is_end>
    129c:	cmp	r0, #0
    12a0:	bne	12dc <recover+0x70>
    12a4:	ldr	r1, [r4, #40]	; 0x28
    12a8:	ldr	r0, [r1, #16]
    12ac:	cmp	r0, r6
    12b0:	bne	12d0 <recover+0x64>
    12b4:	cmp	r5, #0
    12b8:	beq	12c4 <recover+0x58>
    12bc:	mov	r0, r4
    12c0:	bl	118c <next>
    12c4:	mov	r3, #0
    12c8:	str	r3, [r4, #36]	; 0x24
    12cc:	b	12dc <recover+0x70>
    12d0:	mov	r0, r4
    12d4:	bl	118c <next>
    12d8:	b	1294 <recover+0x28>
    12dc:	ldr	r4, [sp, #8]
    12e0:	ldr	r5, [sp, #12]
    12e4:	ldr	r6, [sp, #16]
    12e8:	ldr	lr, [sp, #4]
    12ec:	add	sp, sp, #24
    12f0:	bx	lr

000012f4 <recover2>:
    12f4:	mov	ip, sp
    12f8:	sub	sp, sp, #32
    12fc:	str	ip, [sp]
    1300:	str	lr, [sp, #4]
    1304:	str	r4, [sp, #8]
    1308:	str	r5, [sp, #12]
    130c:	str	r6, [sp, #16]
    1310:	str	r7, [sp, #20]
    1314:	str	r8, [sp, #24]
    1318:	ldr	r8, [ip]
    131c:	mov	r5, r3
    1320:	mov	r6, r2
    1324:	mov	r7, r1
    1328:	mov	r4, r0
    132c:	ldr	r0, [r4, #40]	; 0x28
    1330:	bl	1160 <is_end>
    1334:	cmp	r0, #0
    1338:	bne	13a0 <recover2+0xac>
    133c:	ldr	r0, [r4, #40]	; 0x28
    1340:	ldr	r0, [r0, #16]
    1344:	cmp	r0, r7
    1348:	bne	1368 <recover2+0x74>
    134c:	cmp	r6, #0
    1350:	beq	135c <recover2+0x68>
    1354:	mov	r0, r4
    1358:	bl	118c <next>
    135c:	mov	r3, #0
    1360:	str	r3, [r4, #36]	; 0x24
    1364:	b	13a0 <recover2+0xac>
    1368:	ldr	r1, [r4, #40]	; 0x28
    136c:	ldr	r1, [r1, #16]
    1370:	cmp	r1, r5
    1374:	bne	1394 <recover2+0xa0>
    1378:	cmp	r8, #0
    137c:	beq	1388 <recover2+0x94>
    1380:	mov	r0, r4
    1384:	bl	118c <next>
    1388:	mov	ip, #0
    138c:	str	ip, [r4, #36]	; 0x24
    1390:	b	13a0 <recover2+0xac>
    1394:	mov	r0, r4
    1398:	bl	118c <next>
    139c:	b	132c <recover2+0x38>
    13a0:	ldr	r4, [sp, #8]
    13a4:	ldr	r5, [sp, #12]
    13a8:	ldr	r6, [sp, #16]
    13ac:	ldr	r7, [sp, #20]
    13b0:	ldr	r8, [sp, #24]
    13b4:	ldr	lr, [sp, #4]
    13b8:	add	sp, sp, #32
    13bc:	bx	lr

000013c0 <optional>:
    13c0:	mov	ip, sp
    13c4:	sub	sp, sp, #16
    13c8:	str	ip, [sp]
    13cc:	str	lr, [sp, #4]
    13d0:	str	r4, [sp, #8]
    13d4:	mov	r4, #0
    13d8:	ldr	r2, [r0, #40]	; 0x28
    13dc:	ldr	r2, [r2, #16]
    13e0:	cmp	r2, r1
    13e4:	bne	13f0 <optional+0x30>
    13e8:	ldr	r4, [r0, #40]	; 0x28
    13ec:	bl	118c <next>
    13f0:	mov	r0, r4
    13f4:	ldr	r4, [sp, #8]
    13f8:	ldr	lr, [sp, #4]
    13fc:	add	sp, sp, #16
    1400:	bx	lr

00001404 <match>:
    1404:	mov	ip, sp
    1408:	sub	sp, sp, #16
    140c:	str	ip, [sp]
    1410:	str	lr, [sp, #4]
    1414:	str	r4, [sp, #8]
    1418:	mov	r4, #0
    141c:	ldr	r3, [r0, #40]	; 0x28
    1420:	ldr	r3, [r3, #16]
    1424:	cmp	r3, r1
    1428:	beq	1438 <match+0x34>
    142c:	ldr	r1, [r0, #40]	; 0x28
    1430:	bl	118 <error_tok>
    1434:	b	1440 <match+0x3c>
    1438:	ldr	r4, [r0, #40]	; 0x28
    143c:	bl	118c <next>
    1440:	mov	r0, r4
    1444:	ldr	r4, [sp, #8]
    1448:	ldr	lr, [sp, #4]
    144c:	add	sp, sp, #16
    1450:	bx	lr

00001454 <advance>:
    1454:	mov	ip, sp
    1458:	sub	sp, sp, #16
    145c:	str	ip, [sp]
    1460:	str	lr, [sp, #4]
    1464:	str	r4, [sp, #8]
    1468:	mov	r4, r0
    146c:	mov	ip, #0
    1470:	str	ip, [r4, #36]	; 0x24
    1474:	ldr	ip, [r4, #40]	; 0x28
    1478:	ldr	ip, [ip, #16]
    147c:	cmp	ip, r1
    1480:	beq	1498 <advance+0x44>
    1484:	ldr	r1, [r4, #40]	; 0x28
    1488:	mov	r0, r4
    148c:	bl	d8 <error_tok_2>
    1490:	ldr	r0, [r4, #40]	; 0x28
    1494:	b	14a0 <advance+0x4c>
    1498:	mov	r0, r4
    149c:	bl	118c <next>
    14a0:	ldr	r4, [sp, #8]
    14a4:	ldr	lr, [sp, #4]
    14a8:	add	sp, sp, #16
    14ac:	bx	lr

000014b0 <read_integer_value>:
    14b0:	mov	ip, sp
    14b4:	sub	sp, sp, #32
    14b8:	str	ip, [sp]
    14bc:	str	lr, [sp, #4]
    14c0:	str	r4, [sp, #8]
    14c4:	str	r5, [sp, #12]
    14c8:	str	r6, [sp, #16]
    14cc:	str	r7, [sp, #20]
    14d0:	mov	r6, r3
    14d4:	mov	r7, r2
    14d8:	mov	r4, r1
    14dc:	mov	r5, r0
    14e0:	mov	ip, #5
    14e4:	strh	ip, [r7, #8]
    14e8:	ldr	r0, [r4]
    14ec:	ldr	r1, [r4, #4]
    14f0:	add	r3, sp, #24
    14f4:	mov	r2, r7
    14f8:	bl	22c <parse_integer>
    14fc:	ldr	r0, [sp, #24]
    1500:	cmp	r0, #0
    1504:	beq	1520 <read_integer_value+0x70>
    1508:	mov	r1, #1
    150c:	strh	r1, [r7, #8]
    1510:	ldr	r2, [pc, #76]	; 1564 <read_integer_value+0xb4>
    1514:	mov	r1, r4
    1518:	mov	r0, r5
    151c:	bl	118 <error_tok>
    1520:	cmp	r6, #0
    1524:	beq	1548 <read_integer_value+0x98>
    1528:	ldr	r3, [r7]
    152c:	ldr	r2, [r7, #4]
    1530:	rsbs	r3, r3, #0
    1534:	rsc	r1, r2, #0
    1538:	str	r3, [r7]
    153c:	str	r1, [r7, #4]
    1540:	mov	ip, #4
    1544:	strh	ip, [r7, #8]
    1548:	ldr	r4, [sp, #8]
    154c:	ldr	r5, [sp, #12]
    1550:	ldr	r6, [sp, #16]
    1554:	ldr	r7, [sp, #20]
    1558:	ldr	lr, [sp, #4]
    155c:	add	sp, sp, #32
    1560:	bx	lr
    1564:	.word	0x000003f7

00001568 <read_hex_value>:
    1568:	mov	ip, sp
    156c:	sub	sp, sp, #32
    1570:	str	ip, [sp]
    1574:	str	lr, [sp, #4]
    1578:	str	r4, [sp, #8]
    157c:	str	r5, [sp, #12]
    1580:	str	r6, [sp, #16]
    1584:	str	r7, [sp, #20]
    1588:	mov	r6, r3
    158c:	mov	r7, r2
    1590:	mov	r4, r1
    1594:	mov	r5, r0
    1598:	mov	ip, #5
    159c:	strh	ip, [r7, #8]
    15a0:	ldr	r0, [r4]
    15a4:	ldr	r1, [r4, #4]
    15a8:	add	r3, sp, #24
    15ac:	mov	r2, r7
    15b0:	bl	420 <parse_hex_integer>
    15b4:	ldr	r0, [sp, #24]
    15b8:	cmp	r0, #0
    15bc:	beq	15d8 <read_hex_value+0x70>
    15c0:	mov	r1, #1
    15c4:	strh	r1, [r7, #8]
    15c8:	ldr	r2, [pc, #76]	; 161c <read_hex_value+0xb4>
    15cc:	mov	r1, r4
    15d0:	mov	r0, r5
    15d4:	bl	118 <error_tok>
    15d8:	cmp	r6, #0
    15dc:	beq	1600 <read_hex_value+0x98>
    15e0:	ldr	r3, [r7]
    15e4:	ldr	r2, [r7, #4]
    15e8:	rsbs	r3, r3, #0
    15ec:	rsc	r1, r2, #0
    15f0:	str	r3, [r7]
    15f4:	str	r1, [r7, #4]
    15f8:	mov	ip, #4
    15fc:	strh	ip, [r7, #8]
    1600:	ldr	r4, [sp, #8]
    1604:	ldr	r5, [sp, #12]
    1608:	ldr	r6, [sp, #16]
    160c:	ldr	r7, [sp, #20]
    1610:	ldr	lr, [sp, #4]
    1614:	add	sp, sp, #32
    1618:	bx	lr
    161c:	.word	0x000007ae

00001620 <read_float_value>:
    1620:	mov	ip, sp
    1624:	sub	sp, sp, #32
    1628:	str	ip, [sp]
    162c:	str	lr, [sp, #4]
    1630:	str	r4, [sp, #8]
    1634:	str	r5, [sp, #12]
    1638:	str	r6, [sp, #16]
    163c:	str	r7, [sp, #20]
    1640:	mov	r4, r3
    1644:	mov	r5, r2
    1648:	mov	r6, r1
    164c:	mov	r7, r0
    1650:	mov	ip, #3
    1654:	strh	ip, [r5, #8]
    1658:	ldr	r0, [r6]
    165c:	add	r1, sp, #24
    1660:	bl	0 <strtod>
    1664:	vstr	d0, [r5]
    1668:	ldr	r0, [sp, #24]
    166c:	ldr	r3, [r6]
    1670:	ldr	r1, [r6, #4]
    1674:	add	r3, r3, r1
    1678:	cmp	r0, r3
    167c:	bne	16c4 <read_float_value+0xa4>
    1680:	ldr	r1, [r6]
    1684:	ldrb	ip, [r1]
    1688:	cmp	ip, #46	; 0x2e
    168c:	bne	16ac <read_float_value+0x8c>
    1690:	mov	r2, #1
    1694:	strh	r2, [r5, #8]
    1698:	ldr	r2, [pc, #92]	; 16fc <read_float_value+0xdc>
    169c:	mov	r1, r6
    16a0:	mov	r0, r7
    16a4:	bl	118 <error_tok>
    16a8:	b	16dc <read_float_value+0xbc>
    16ac:	cmp	r4, #0
    16b0:	beq	16dc <read_float_value+0xbc>
    16b4:	vldr	d2, [r5]
    16b8:	vneg.f64	d4, d2
    16bc:	vstr	d4, [r5]
    16c0:	b	16dc <read_float_value+0xbc>
    16c4:	mov	r1, #1
    16c8:	strh	r1, [r5, #8]
    16cc:	ldr	r2, [pc, #36]	; 16f8 <read_float_value+0xd8>
    16d0:	mov	r1, r6
    16d4:	mov	r0, r7
    16d8:	bl	118 <error_tok>
    16dc:	ldr	r4, [sp, #8]
    16e0:	ldr	r5, [sp, #12]
    16e4:	ldr	r6, [sp, #16]
    16e8:	ldr	r7, [sp, #20]
    16ec:	ldr	lr, [sp, #4]
    16f0:	add	sp, sp, #32
    16f4:	bx	lr
    16f8:	.word	0x000007e2
    16fc:	.word	0x00000312

00001700 <parse_string_literal>:
    1700:	mov	ip, sp
    1704:	sub	sp, sp, #24
    1708:	str	ip, [sp, #4]
    170c:	str	lr, [sp, #8]
    1710:	str	r4, [sp, #16]
    1714:	str	r5, [sp, #20]
    1718:	mov	r5, r1
    171c:	mov	r4, r0
    1720:	mov	r3, #2
    1724:	strh	r3, [r5, #8]
    1728:	mov	r2, #0
    172c:	str	r2, [r5]
    1730:	mov	r2, #0
    1734:	str	r2, [r5, #4]
    1738:	ldr	r1, [r4, #40]	; 0x28
    173c:	ldr	r3, [r1, #16]
    1740:	cmp	r3, #21
    1744:	bcs	17b4 <parse_string_literal+0xb4>
    1748:	cmp	r3, #6
    174c:	beq	1790 <parse_string_literal+0x90>
    1750:	cmp	r3, #18
    1754:	beq	1778 <parse_string_literal+0x78>
    1758:	cmp	r3, #20
    175c:	bne	17cc <parse_string_literal+0xcc>
    1760:	ldr	r3, [r5]
    1764:	cmp	r3, #0
    1768:	bne	1848 <parse_string_literal+0x148>
    176c:	ldr	r1, [r1]
    1770:	str	r1, [r5]
    1774:	b	1848 <parse_string_literal+0x148>
    1778:	mov	r0, #1
    177c:	strh	r0, [r5, #8]
    1780:	ldr	r2, [pc, #224]	; 1868 <parse_string_literal+0x168>
    1784:	mov	r0, r4
    1788:	bl	118 <error_tok>
    178c:	b	1848 <parse_string_literal+0x148>
    1790:	mov	r2, #1
    1794:	strh	r2, [r5, #8]
    1798:	ldr	r2, [pc, #180]	; 1854 <parse_string_literal+0x154>
    179c:	ldr	r3, [pc, #188]	; 1860 <parse_string_literal+0x160>
    17a0:	mov	r0, #1
    17a4:	str	r0, [sp]
    17a8:	mov	r0, r4
    17ac:	bl	13c <error_tok_as_string>
    17b0:	b	1848 <parse_string_literal+0x148>
    17b4:	cmp	r3, #21
    17b8:	beq	1834 <parse_string_literal+0x134>
    17bc:	cmp	r3, #22
    17c0:	beq	17e0 <parse_string_literal+0xe0>
    17c4:	cmp	r3, #23
    17c8:	beq	17e0 <parse_string_literal+0xe0>
    17cc:	ldr	r2, [pc, #144]	; 1864 <parse_string_literal+0x164>
    17d0:	mov	r0, r4
    17d4:	bl	118 <error_tok>
    17d8:	mov	r0, #1
    17dc:	strh	r0, [r5, #8]
    17e0:	ldr	r3, [r5]
    17e4:	cmp	r3, #0
    17e8:	beq	1800 <parse_string_literal+0x100>
    17ec:	ldr	r1, [r4, #40]	; 0x28
    17f0:	ldr	r2, [r1]
    17f4:	ldr	ip, [r5]
    17f8:	sub	r0, r2, ip
    17fc:	str	r0, [r5, #4]
    1800:	mov	r1, #22
    1804:	ldr	r2, [pc, #76]	; 1858 <parse_string_literal+0x158>
    1808:	mov	r0, r4
    180c:	bl	1404 <match>
    1810:	cmp	r0, #0
    1814:	bne	1820 <parse_string_literal+0x120>
    1818:	mov	ip, #1
    181c:	strh	ip, [r5, #8]
    1820:	ldr	r4, [sp, #16]
    1824:	ldr	r5, [sp, #20]
    1828:	ldr	lr, [sp, #8]
    182c:	add	sp, sp, #24
    1830:	bx	lr
    1834:	mov	r2, #1
    1838:	strh	r2, [r5, #8]
    183c:	ldr	r2, [pc, #24]	; 185c <parse_string_literal+0x15c>
    1840:	mov	r0, r4
    1844:	bl	118 <error_tok>
    1848:	mov	r0, r4
    184c:	bl	118c <next>
    1850:	b	1738 <parse_string_literal+0x38>
    1854:	.word	0x000006f9
    1858:	.word	0x00000977
    185c:	.word	0x000005d2
    1860:	.word	0x000007e0
    1864:	.word	0x00000ae7
    1868:	.word	0x00000a37

0000186c <parse_ref>:
    186c:	mov	ip, sp
    1870:	sub	sp, sp, #16
    1874:	str	ip, [sp]
    1878:	str	lr, [sp, #4]
    187c:	str	r4, [sp, #8]
    1880:	str	r5, [sp, #12]
    1884:	mov	r5, r1
    1888:	mov	r4, r0
    188c:	ldr	r1, [r4, #40]	; 0x28
    1890:	mov	r0, r4
    1894:	bl	f68 <fb_add_ref>
    1898:	str	r0, [r5]
    189c:	mov	r0, r4
    18a0:	bl	118c <next>
    18a4:	ldr	r5, [r5]
    18a8:	mov	r1, #46	; 0x2e
    18ac:	mov	r0, r4
    18b0:	bl	13c0 <optional>
    18b4:	cmp	r0, #0
    18b8:	beq	1900 <parse_ref+0x94>
    18bc:	ldr	r1, [r4, #40]	; 0x28
    18c0:	ldr	ip, [r1, #16]
    18c4:	cmp	ip, #9
    18c8:	beq	18e0 <parse_ref+0x74>
    18cc:	ldr	r1, [r4, #40]	; 0x28
    18d0:	ldr	r2, [pc, #60]	; 1914 <parse_ref+0xa8>
    18d4:	mov	r0, r4
    18d8:	bl	118 <error_tok>
    18dc:	b	1900 <parse_ref+0x94>
    18e0:	ldr	r1, [r4, #40]	; 0x28
    18e4:	mov	r0, r4
    18e8:	bl	f68 <fb_add_ref>
    18ec:	str	r0, [r5]
    18f0:	ldr	r5, [r5]
    18f4:	mov	r0, r4
    18f8:	bl	118c <next>
    18fc:	b	18a8 <parse_ref+0x3c>
    1900:	ldr	r4, [sp, #8]
    1904:	ldr	r5, [sp, #12]
    1908:	ldr	lr, [sp, #4]
    190c:	add	sp, sp, #16
    1910:	bx	lr
    1914:	.word	0x00000339

00001918 <parse_value>:
    1918:	mov	ip, sp
    191c:	sub	sp, sp, #32
    1920:	str	ip, [sp]
    1924:	str	lr, [sp, #4]
    1928:	str	r4, [sp, #8]
    192c:	str	r5, [sp, #12]
    1930:	str	r6, [sp, #16]
    1934:	str	r7, [sp, #20]
    1938:	str	r8, [sp, #24]
    193c:	str	r9, [sp, #28]
    1940:	mov	r4, r3
    1944:	mov	r9, r2
    1948:	mov	r7, r1
    194c:	mov	r6, r0
    1950:	mov	r1, #45	; 0x2d
    1954:	mov	r0, r6
    1958:	bl	13c0 <optional>
    195c:	mov	r8, r0
    1960:	ldr	r5, [r6, #40]	; 0x28
    1964:	ldr	r1, [r5, #16]
    1968:	cmp	r1, #14
    196c:	bcs	1a00 <parse_value+0xe8>
    1970:	cmp	r1, #9
    1974:	beq	19c8 <parse_value+0xb0>
    1978:	cmp	r1, #10
    197c:	beq	19a8 <parse_value+0x90>
    1980:	cmp	r1, #11
    1984:	bne	1ac4 <parse_value+0x1ac>
    1988:	cmp	r8, #0
    198c:	movne	r3, #1
    1990:	moveq	r3, #0
    1994:	mov	r2, r7
    1998:	mov	r1, r5
    199c:	mov	r0, r6
    19a0:	bl	1620 <read_float_value>
    19a4:	b	1ae8 <parse_value+0x1d0>
    19a8:	cmp	r8, #0
    19ac:	movne	r3, #1
    19b0:	moveq	r3, #0
    19b4:	mov	r2, r7
    19b8:	mov	r1, r5
    19bc:	mov	r0, r6
    19c0:	bl	14b0 <read_integer_value>
    19c4:	b	1ae8 <parse_value+0x1d0>
    19c8:	mov	r1, r7
    19cc:	mov	r0, r6
    19d0:	bl	186c <parse_ref>
    19d4:	mov	ip, #13
    19d8:	strh	ip, [r7, #8]
    19dc:	cmp	r8, #0
    19e0:	beq	1b30 <parse_value+0x218>
    19e4:	mov	r1, #1
    19e8:	strh	r1, [r7, #8]
    19ec:	ldr	r2, [pc, #352]	; 1b54 <parse_value+0x23c>
    19f0:	mov	r1, r5
    19f4:	mov	r0, r6
    19f8:	bl	118 <error_tok>
    19fc:	b	1b30 <parse_value+0x218>
    1a00:	cmn	r1, #988	; 0x3dc
    1a04:	bcs	1a98 <parse_value+0x180>
    1a08:	cmp	r1, #14
    1a0c:	beq	1a78 <parse_value+0x160>
    1a10:	cmp	r1, #19
    1a14:	bne	1ac4 <parse_value+0x1ac>
    1a18:	mov	r0, r6
    1a1c:	bl	118c <next>
    1a20:	mov	r1, r7
    1a24:	mov	r0, r6
    1a28:	bl	1700 <parse_string_literal>
    1a2c:	and	ip, r9, #1
    1a30:	cmp	ip, #0
    1a34:	bne	1a54 <parse_value+0x13c>
    1a38:	mov	r3, #1
    1a3c:	strh	r3, [r7, #8]
    1a40:	mov	r2, r4
    1a44:	mov	r1, r5
    1a48:	mov	r0, r6
    1a4c:	bl	118 <error_tok>
    1a50:	b	1b30 <parse_value+0x218>
    1a54:	cmp	r8, #0
    1a58:	beq	1b30 <parse_value+0x218>
    1a5c:	mov	r0, #1
    1a60:	strh	r0, [r7, #8]
    1a64:	ldr	r2, [pc, #236]	; 1b58 <parse_value+0x240>
    1a68:	mov	r1, r5
    1a6c:	mov	r0, r6
    1a70:	bl	118 <error_tok>
    1a74:	b	1b30 <parse_value+0x218>
    1a78:	cmp	r8, #0
    1a7c:	movne	r3, #1
    1a80:	moveq	r3, #0
    1a84:	mov	r2, r7
    1a88:	mov	r1, r5
    1a8c:	mov	r0, r6
    1a90:	bl	1568 <read_hex_value>
    1a94:	b	1ae8 <parse_value+0x1d0>
    1a98:	cmn	r1, #988	; 0x3dc
    1a9c:	beq	1ad8 <parse_value+0x1c0>
    1aa0:	movw	lr, #64550	; 0xfc26
    1aa4:	movt	lr, #65535	; 0xffff
    1aa8:	cmp	r1, lr
    1aac:	bne	1ac4 <parse_value+0x1ac>
    1ab0:	mov	ip, #0
    1ab4:	strb	ip, [r7]
    1ab8:	mov	r1, #6
    1abc:	strh	r1, [r7, #8]
    1ac0:	b	1ae8 <parse_value+0x1d0>
    1ac4:	mov	r2, r4
    1ac8:	mov	r1, r5
    1acc:	mov	r0, r6
    1ad0:	bl	118 <error_tok>
    1ad4:	b	1b30 <parse_value+0x218>
    1ad8:	mov	r3, #1
    1adc:	strb	r3, [r7]
    1ae0:	mov	r2, #6
    1ae4:	strh	r2, [r7, #8]
    1ae8:	cmp	r8, #0
    1aec:	beq	1b04 <parse_value+0x1ec>
    1af0:	ldrh	r3, [r7, #8]
    1af4:	cmp	r3, #6
    1af8:	moveq	r2, #1
    1afc:	movne	r2, #0
    1b00:	b	1b08 <parse_value+0x1f0>
    1b04:	mov	r2, #0
    1b08:	cmp	r2, #0
    1b0c:	beq	1b28 <parse_value+0x210>
    1b10:	mov	r2, #1
    1b14:	strh	r2, [r7, #8]
    1b18:	ldr	r2, [pc, #60]	; 1b5c <parse_value+0x244>
    1b1c:	mov	r1, r5
    1b20:	mov	r0, r6
    1b24:	bl	118 <error_tok>
    1b28:	mov	r0, r6
    1b2c:	bl	118c <next>
    1b30:	ldr	r4, [sp, #8]
    1b34:	ldr	r5, [sp, #12]
    1b38:	ldr	r6, [sp, #16]
    1b3c:	ldr	r7, [sp, #20]
    1b40:	ldr	r8, [sp, #24]
    1b44:	ldr	r9, [sp, #28]
    1b48:	ldr	lr, [sp, #4]
    1b4c:	add	sp, sp, #32
    1b50:	bx	lr
    1b54:	.word	0x000000e3
    1b58:	.word	0x000005f0
    1b5c:	.word	0x0000025d

00001b60 <parse_type>:
    1b60:	mov	ip, sp
    1b64:	sub	sp, sp, #32
    1b68:	str	ip, [sp]
    1b6c:	str	lr, [sp, #4]
    1b70:	str	r4, [sp, #8]
    1b74:	str	r5, [sp, #12]
    1b78:	str	r6, [sp, #16]
    1b7c:	str	r7, [sp, #20]
    1b80:	str	r8, [sp, #24]
    1b84:	mov	r5, r1
    1b88:	mov	r4, r0
    1b8c:	ldr	r6, [r4, #40]	; 0x28
    1b90:	mov	r8, #0
    1b94:	mov	r3, #1
    1b98:	strh	r3, [r5, #8]
    1b9c:	mov	r1, #91	; 0x5b
    1ba0:	mov	r0, r4
    1ba4:	bl	13c0 <optional>
    1ba8:	mov	r7, r0
    1bac:	cmp	r7, #0
    1bb0:	beq	1bbc <parse_type+0x5c>
    1bb4:	add	r8, r8, #1
    1bb8:	b	1b9c <parse_type+0x3c>
    1bbc:	cmp	r8, #1
    1bc0:	ble	1bd4 <parse_type+0x74>
    1bc4:	ldr	r2, [pc, #760]	; 1ec4 <parse_type+0x364>
    1bc8:	mov	r1, r6
    1bcc:	mov	r0, r4
    1bd0:	bl	118 <error_tok>
    1bd4:	ldr	r1, [r4, #40]	; 0x28
    1bd8:	ldr	ip, [r1, #16]
    1bdc:	movw	lr, #64549	; 0xfc25
    1be0:	movt	lr, #65535	; 0xffff
    1be4:	cmp	ip, lr
    1be8:	bcs	1ce0 <parse_type+0x180>
    1bec:	movw	lr, #64542	; 0xfc1e
    1bf0:	movt	lr, #65535	; 0xffff
    1bf4:	cmp	ip, lr
    1bf8:	bcs	1ca0 <parse_type+0x140>
    1bfc:	movw	lr, #64538	; 0xfc1a
    1c00:	movt	lr, #65535	; 0xffff
    1c04:	cmp	ip, lr
    1c08:	bcs	1c74 <parse_type+0x114>
    1c0c:	cmp	ip, #9
    1c10:	beq	1c44 <parse_type+0xe4>
    1c14:	cmp	ip, #93	; 0x5d
    1c18:	beq	1c30 <parse_type+0xd0>
    1c1c:	movw	lr, #64537	; 0xfc19
    1c20:	movt	lr, #65535	; 0xffff
    1c24:	cmp	ip, lr
    1c28:	beq	1dd8 <parse_type+0x278>
    1c2c:	b	1d90 <parse_type+0x230>
    1c30:	ldr	r2, [pc, #656]	; 1ec8 <parse_type+0x368>
    1c34:	mov	r1, r7
    1c38:	mov	r0, r4
    1c3c:	bl	118 <error_tok>
    1c40:	b	1e08 <parse_type+0x2a8>
    1c44:	mov	r1, r5
    1c48:	mov	r0, r4
    1c4c:	bl	186c <parse_ref>
    1c50:	cmp	r8, #0
    1c54:	bne	1c60 <parse_type+0x100>
    1c58:	mov	r1, #12
    1c5c:	b	1c64 <parse_type+0x104>
    1c60:	mov	r1, #11
    1c64:	bic	r3, r1, #16711680	; 0xff0000
    1c68:	bic	r3, r3, #-16777216	; 0xff000000
    1c6c:	strh	r3, [r5, #8]
    1c70:	b	1e08 <parse_type+0x2a8>
    1c74:	movw	lr, #64538	; 0xfc1a
    1c78:	movt	lr, #65535	; 0xffff
    1c7c:	cmp	ip, lr
    1c80:	beq	1dd8 <parse_type+0x278>
    1c84:	cmn	ip, #996	; 0x3e4
    1c88:	beq	1dd8 <parse_type+0x278>
    1c8c:	movw	lr, #64541	; 0xfc1d
    1c90:	movt	lr, #65535	; 0xffff
    1c94:	cmp	ip, lr
    1c98:	beq	1dd8 <parse_type+0x278>
    1c9c:	b	1d90 <parse_type+0x230>
    1ca0:	movw	lr, #64545	; 0xfc21
    1ca4:	movt	lr, #65535	; 0xffff
    1ca8:	cmp	ip, lr
    1cac:	bcc	1dd8 <parse_type+0x278>
    1cb0:	movw	lr, #64545	; 0xfc21
    1cb4:	movt	lr, #65535	; 0xffff
    1cb8:	cmp	ip, lr
    1cbc:	beq	1dd8 <parse_type+0x278>
    1cc0:	movw	lr, #64546	; 0xfc22
    1cc4:	movt	lr, #65535	; 0xffff
    1cc8:	cmp	ip, lr
    1ccc:	beq	1dd8 <parse_type+0x278>
    1cd0:	mvn	lr, #988	; 0x3dc
    1cd4:	cmp	ip, lr
    1cd8:	beq	1dd8 <parse_type+0x278>
    1cdc:	b	1d90 <parse_type+0x230>
    1ce0:	movw	lr, #64557	; 0xfc2d
    1ce4:	movt	lr, #65535	; 0xffff
    1ce8:	cmp	ip, lr
    1cec:	bcs	1d28 <parse_type+0x1c8>
    1cf0:	movw	lr, #64554	; 0xfc2a
    1cf4:	movt	lr, #65535	; 0xffff
    1cf8:	cmp	ip, lr
    1cfc:	bcs	1dd8 <parse_type+0x278>
    1d00:	movw	lr, #64549	; 0xfc25
    1d04:	movt	lr, #65535	; 0xffff
    1d08:	cmp	ip, lr
    1d0c:	beq	1dd8 <parse_type+0x278>
    1d10:	mvn	lr, #984	; 0x3d8
    1d14:	cmp	ip, lr
    1d18:	beq	1dd8 <parse_type+0x278>
    1d1c:	cmn	ip, #984	; 0x3d8
    1d20:	beq	1dd8 <parse_type+0x278>
    1d24:	b	1d90 <parse_type+0x230>
    1d28:	movw	lr, #64561	; 0xfc31
    1d2c:	movt	lr, #65535	; 0xffff
    1d30:	cmp	ip, lr
    1d34:	bcs	1d68 <parse_type+0x208>
    1d38:	movw	lr, #64557	; 0xfc2d
    1d3c:	movt	lr, #65535	; 0xffff
    1d40:	cmp	ip, lr
    1d44:	beq	1dd8 <parse_type+0x278>
    1d48:	movw	lr, #64558	; 0xfc2e
    1d4c:	movt	lr, #65535	; 0xffff
    1d50:	cmp	ip, lr
    1d54:	beq	1dd8 <parse_type+0x278>
    1d58:	mvn	lr, #976	; 0x3d0
    1d5c:	cmp	ip, lr
    1d60:	beq	1dd8 <parse_type+0x278>
    1d64:	b	1d90 <parse_type+0x230>
    1d68:	movw	lr, #64561	; 0xfc31
    1d6c:	movt	lr, #65535	; 0xffff
    1d70:	cmp	ip, lr
    1d74:	beq	1dd8 <parse_type+0x278>
    1d78:	movw	lr, #64562	; 0xfc32
    1d7c:	movt	lr, #65535	; 0xffff
    1d80:	cmp	ip, lr
    1d84:	beq	1da4 <parse_type+0x244>
    1d88:	cmn	ip, #972	; 0x3cc
    1d8c:	beq	1dd8 <parse_type+0x278>
    1d90:	ldr	r2, [pc, #292]	; 1ebc <parse_type+0x35c>
    1d94:	mov	r1, r7
    1d98:	mov	r0, r4
    1d9c:	bl	118 <error_tok>
    1da0:	b	1e08 <parse_type+0x2a8>
    1da4:	ldr	ip, [r4, #40]	; 0x28
    1da8:	str	ip, [r5]
    1dac:	cmp	r8, #0
    1db0:	bne	1dbc <parse_type+0x25c>
    1db4:	mov	r3, #10
    1db8:	b	1dc0 <parse_type+0x260>
    1dbc:	mov	r3, #9
    1dc0:	bic	r0, r3, #16711680	; 0xff0000
    1dc4:	bic	r0, r0, #-16777216	; 0xff000000
    1dc8:	strh	r0, [r5, #8]
    1dcc:	mov	r0, r4
    1dd0:	bl	118c <next>
    1dd4:	b	1e08 <parse_type+0x2a8>
    1dd8:	ldr	r2, [r4, #40]	; 0x28
    1ddc:	str	r2, [r5]
    1de0:	cmp	r8, #0
    1de4:	bne	1df0 <parse_type+0x290>
    1de8:	mov	r3, #8
    1dec:	b	1df4 <parse_type+0x294>
    1df0:	mov	r3, #7
    1df4:	bic	r2, r3, #16711680	; 0xff0000
    1df8:	bic	r2, r2, #-16777216	; 0xff000000
    1dfc:	strh	r2, [r5, #8]
    1e00:	mov	r0, r4
    1e04:	bl	118c <next>
    1e08:	mov	r1, #93	; 0x5d
    1e0c:	mov	r0, r4
    1e10:	bl	13c0 <optional>
    1e14:	cmp	r0, #0
    1e18:	beq	1e34 <parse_type+0x2d4>
    1e1c:	mov	r0, r8
    1e20:	sub	r8, r0, #1
    1e24:	cmp	r0, #0
    1e28:	movne	r0, #1
    1e2c:	moveq	r0, #0
    1e30:	b	1e38 <parse_type+0x2d8>
    1e34:	mov	r0, #0
    1e38:	cmp	r0, #0
    1e3c:	bne	1e08 <parse_type+0x2a8>
    1e40:	cmp	r8, #0
    1e44:	beq	1e5c <parse_type+0x2fc>
    1e48:	ldr	r2, [pc, #112]	; 1ec0 <parse_type+0x360>
    1e4c:	mov	r3, r6
    1e50:	mov	r1, r7
    1e54:	mov	r0, r4
    1e58:	bl	d8 <error_tok_2>
    1e5c:	mov	r1, #93	; 0x5d
    1e60:	mov	r0, r4
    1e64:	bl	13c0 <optional>
    1e68:	mov	r1, r0
    1e6c:	cmp	r1, #0
    1e70:	beq	1e98 <parse_type+0x338>
    1e74:	ldr	r2, [pc, #60]	; 1eb8 <parse_type+0x358>
    1e78:	mov	r3, r6
    1e7c:	mov	r0, r4
    1e80:	bl	d8 <error_tok_2>
    1e84:	mov	r1, #93	; 0x5d
    1e88:	mov	r0, r4
    1e8c:	bl	13c0 <optional>
    1e90:	cmp	r0, #0
    1e94:	bne	1e84 <parse_type+0x324>
    1e98:	ldr	r4, [sp, #8]
    1e9c:	ldr	r5, [sp, #12]
    1ea0:	ldr	r6, [sp, #16]
    1ea4:	ldr	r7, [sp, #20]
    1ea8:	ldr	r8, [sp, #24]
    1eac:	ldr	lr, [sp, #4]
    1eb0:	add	sp, sp, #32
    1eb4:	bx	lr
    1eb8:	.word	0x00000000
    1ebc:	.word	0x000007c9
    1ec0:	.word	0x0000092a
    1ec4:	.word	0x000002e5
    1ec8:	.word	0x000003b9

00001ecc <parse_metadata>:
    1ecc:	mov	ip, sp
    1ed0:	sub	sp, sp, #32
    1ed4:	str	ip, [sp]
    1ed8:	str	lr, [sp, #4]
    1edc:	str	r4, [sp, #8]
    1ee0:	str	r5, [sp, #12]
    1ee4:	str	r6, [sp, #16]
    1ee8:	mov	r4, r0
    1eec:	mov	r1, #0
    1ef0:	str	r1, [sp, #24]
    1ef4:	mov	r1, #40	; 0x28
    1ef8:	mov	r0, r4
    1efc:	bl	13c0 <optional>
    1f00:	mov	r6, r0
    1f04:	cmp	r6, #0
    1f08:	bne	1f14 <parse_metadata+0x48>
    1f0c:	mov	r0, #0
    1f10:	b	1fd0 <parse_metadata+0x104>
    1f14:	mov	r1, #9
    1f18:	mov	r0, r4
    1f1c:	bl	13c0 <optional>
    1f20:	mov	r5, r0
    1f24:	cmp	r5, #0
    1f28:	beq	1fb0 <parse_metadata+0xe4>
    1f2c:	add	r1, sp, #24
    1f30:	mov	r0, r4
    1f34:	bl	10a8 <fb_add_metadata>
    1f38:	ldr	ip, [sp, #24]
    1f3c:	str	r5, [ip, #4]
    1f40:	mov	r1, #58	; 0x3a
    1f44:	mov	r0, r4
    1f48:	bl	13c0 <optional>
    1f4c:	cmp	r0, #0
    1f50:	beq	1f6c <parse_metadata+0xa0>
    1f54:	ldr	r0, [sp, #24]
    1f58:	add	r1, r0, #8
    1f5c:	mov	r2, #1
    1f60:	ldr	r3, [pc, #132]	; 1fec <parse_metadata+0x120>
    1f64:	mov	r0, r4
    1f68:	bl	1918 <parse_value>
    1f6c:	ldr	r0, [r4, #108]	; 0x6c
    1f70:	cmp	r0, #10
    1f74:	blt	1f80 <parse_metadata+0xb4>
    1f78:	ldr	r0, [sp, #24]
    1f7c:	b	1fd0 <parse_metadata+0x104>
    1f80:	mov	r1, #44	; 0x2c
    1f84:	mov	r0, r4
    1f88:	bl	13c0 <optional>
    1f8c:	cmp	r0, #0
    1f90:	beq	1fb0 <parse_metadata+0xe4>
    1f94:	mov	r1, #9
    1f98:	ldr	r2, [pc, #80]	; 1ff0 <parse_metadata+0x124>
    1f9c:	mov	r0, r4
    1fa0:	bl	1404 <match>
    1fa4:	mov	r5, r0
    1fa8:	cmp	r5, #0
    1fac:	bne	1f2c <parse_metadata+0x60>
    1fb0:	mov	r1, #41	; 0x29
    1fb4:	ldr	r2, [pc, #44]	; 1fe8 <parse_metadata+0x11c>
    1fb8:	mov	r3, r6
    1fbc:	mov	r0, r4
    1fc0:	bl	1454 <advance>
    1fc4:	add	r0, sp, #24
    1fc8:	bl	bf4 <revert_metadata>
    1fcc:	ldr	r0, [sp, #24]
    1fd0:	ldr	r4, [sp, #8]
    1fd4:	ldr	r5, [sp, #12]
    1fd8:	ldr	r6, [sp, #16]
    1fdc:	ldr	lr, [sp, #4]
    1fe0:	add	sp, sp, #32
    1fe4:	bx	lr
    1fe8:	.word	0x000002c1
    1fec:	.word	0x0000057f
    1ff0:	.word	0x00000548

00001ff4 <parse_field>:
    1ff4:	mov	ip, sp
    1ff8:	sub	sp, sp, #24
    1ffc:	str	ip, [sp, #4]
    2000:	str	lr, [sp, #8]
    2004:	str	r4, [sp, #16]
    2008:	str	r5, [sp, #20]
    200c:	mov	r5, r1
    2010:	mov	r4, r0
    2014:	mov	r1, #9
    2018:	ldr	r2, [pc, #184]	; 20d8 <parse_field+0xe4>
    201c:	mov	r0, r4
    2020:	bl	1404 <match>
    2024:	cmp	r0, #0
    2028:	beq	20a0 <parse_field+0xac>
    202c:	str	r0, [r5, #4]
    2030:	mov	r1, #58	; 0x3a
    2034:	ldr	r2, [pc, #148]	; 20d0 <parse_field+0xdc>
    2038:	mov	r0, r4
    203c:	bl	1404 <match>
    2040:	cmp	r0, #0
    2044:	beq	20a0 <parse_field+0xac>
    2048:	add	r1, r5, #16
    204c:	mov	r0, r4
    2050:	bl	1b60 <parse_type>
    2054:	mov	r1, #61	; 0x3d
    2058:	mov	r0, r4
    205c:	bl	13c0 <optional>
    2060:	cmp	r0, #0
    2064:	beq	207c <parse_field+0x88>
    2068:	add	r1, r5, #48	; 0x30
    206c:	mov	r2, #2
    2070:	ldr	r3, [pc, #92]	; 20d4 <parse_field+0xe0>
    2074:	mov	r0, r4
    2078:	bl	1918 <parse_value>
    207c:	mov	r0, r4
    2080:	bl	1ecc <parse_metadata>
    2084:	str	r0, [r5, #64]	; 0x40
    2088:	mov	r1, #59	; 0x3b
    208c:	ldr	r2, [pc, #72]	; 20dc <parse_field+0xe8>
    2090:	mov	r3, #0
    2094:	mov	r0, r4
    2098:	bl	1454 <advance>
    209c:	b	20bc <parse_field+0xc8>
    20a0:	mov	r1, #59	; 0x3b
    20a4:	mov	r2, #1
    20a8:	mov	r3, #125	; 0x7d
    20ac:	mov	r0, #0
    20b0:	str	r0, [sp]
    20b4:	mov	r0, r4
    20b8:	bl	12f4 <recover2>
    20bc:	ldr	r4, [sp, #16]
    20c0:	ldr	r5, [sp, #20]
    20c4:	ldr	lr, [sp, #8]
    20c8:	add	sp, sp, #24
    20cc:	bx	lr
    20d0:	.word	0x0000051f
    20d4:	.word	0x00000214
    20d8:	.word	0x000004c8
    20dc:	.word	0x00000280

000020e0 <parse_method>:
    20e0:	mov	ip, sp
    20e4:	sub	sp, sp, #24
    20e8:	str	ip, [sp, #4]
    20ec:	str	lr, [sp, #8]
    20f0:	str	r4, [sp, #16]
    20f4:	str	r5, [sp, #20]
    20f8:	mov	r5, r1
    20fc:	mov	r4, r0
    2100:	mov	r1, #9
    2104:	ldr	r2, [pc, #240]	; 21fc <parse_method+0x11c>
    2108:	mov	r0, r4
    210c:	bl	1404 <match>
    2110:	cmp	r0, #0
    2114:	beq	21c8 <parse_method+0xe8>
    2118:	str	r0, [r5, #4]
    211c:	mov	r1, #40	; 0x28
    2120:	ldr	r2, [pc, #224]	; 2208 <parse_method+0x128>
    2124:	mov	r0, r4
    2128:	bl	1404 <match>
    212c:	cmp	r0, #0
    2130:	beq	21c8 <parse_method+0xe8>
    2134:	add	r1, r5, #32
    2138:	mov	r0, r4
    213c:	bl	1b60 <parse_type>
    2140:	mov	r1, #41	; 0x29
    2144:	ldr	r2, [pc, #172]	; 21f8 <parse_method+0x118>
    2148:	mov	r0, r4
    214c:	bl	1404 <match>
    2150:	cmp	r0, #0
    2154:	beq	21c8 <parse_method+0xe8>
    2158:	mov	r1, #58	; 0x3a
    215c:	ldr	r2, [pc, #156]	; 2200 <parse_method+0x120>
    2160:	mov	r0, r4
    2164:	bl	1404 <match>
    2168:	cmp	r0, #0
    216c:	beq	21c8 <parse_method+0xe8>
    2170:	add	r1, r5, #16
    2174:	mov	r0, r4
    2178:	bl	1b60 <parse_type>
    217c:	mov	r1, #61	; 0x3d
    2180:	mov	r0, r4
    2184:	bl	13c0 <optional>
    2188:	mov	r1, r0
    218c:	cmp	r1, #0
    2190:	beq	21a4 <parse_method+0xc4>
    2194:	ldr	r2, [pc, #112]	; 220c <parse_method+0x12c>
    2198:	mov	r0, r4
    219c:	bl	118 <error_tok>
    21a0:	b	21c8 <parse_method+0xe8>
    21a4:	mov	r0, r4
    21a8:	bl	1ecc <parse_metadata>
    21ac:	str	r0, [r5, #64]	; 0x40
    21b0:	mov	r1, #59	; 0x3b
    21b4:	ldr	r2, [pc, #72]	; 2204 <parse_method+0x124>
    21b8:	mov	r3, #0
    21bc:	mov	r0, r4
    21c0:	bl	1454 <advance>
    21c4:	b	21e4 <parse_method+0x104>
    21c8:	mov	r1, #59	; 0x3b
    21cc:	mov	r2, #1
    21d0:	mov	r3, #125	; 0x7d
    21d4:	mov	r0, #0
    21d8:	str	r0, [sp]
    21dc:	mov	r0, r4
    21e0:	bl	12f4 <recover2>
    21e4:	ldr	r4, [sp, #16]
    21e8:	ldr	r5, [sp, #20]
    21ec:	ldr	lr, [sp, #8]
    21f0:	add	sp, sp, #24
    21f4:	bx	lr
    21f8:	.word	0x00000bd4
    21fc:	.word	0x00000237
    2200:	.word	0x00000b85
    2204:	.word	0x00000164
    2208:	.word	0x0000094b
    220c:	.word	0x00000458

00002210 <parse_enum_decl>:
    2210:	mov	ip, sp
    2214:	sub	sp, sp, #32
    2218:	str	ip, [sp]
    221c:	str	lr, [sp, #4]
    2220:	str	r4, [sp, #8]
    2224:	str	r5, [sp, #12]
    2228:	str	r6, [sp, #16]
    222c:	str	r7, [sp, #20]
    2230:	str	r8, [sp, #24]
    2234:	mov	r8, r1
    2238:	mov	r6, r0
    223c:	mov	r1, #9
    2240:	ldr	r2, [pc, #472]	; 2420 <parse_enum_decl+0x210>
    2244:	mov	r0, r6
    2248:	bl	1404 <match>
    224c:	str	r0, [r8, #4]
    2250:	cmp	r0, #0
    2254:	beq	23ec <parse_enum_decl+0x1dc>
    2258:	mov	r1, #58	; 0x3a
    225c:	mov	r0, r6
    2260:	bl	13c0 <optional>
    2264:	cmp	r0, #0
    2268:	beq	22f4 <parse_enum_decl+0xe4>
    226c:	add	r1, r8, #40	; 0x28
    2270:	mov	r0, r6
    2274:	bl	1b60 <parse_type>
    2278:	ldrh	r3, [r8, #48]	; 0x30
    227c:	cmp	r3, #8
    2280:	bne	22e4 <parse_enum_decl+0xd4>
    2284:	ldr	r1, [r8, #40]	; 0x28
    2288:	ldr	r0, [r1, #16]
    228c:	mvn	lr, #984	; 0x3d8
    2290:	cmp	r0, lr
    2294:	bcs	22b4 <parse_enum_decl+0xa4>
    2298:	cmn	r0, #996	; 0x3e4
    229c:	beq	22d0 <parse_enum_decl+0xc0>
    22a0:	movw	lr, #64541	; 0xfc1d
    22a4:	movt	lr, #65535	; 0xffff
    22a8:	cmp	r0, lr
    22ac:	beq	22d0 <parse_enum_decl+0xc0>
    22b0:	b	22f4 <parse_enum_decl+0xe4>
    22b4:	mvn	lr, #984	; 0x3d8
    22b8:	cmp	r0, lr
    22bc:	beq	22d0 <parse_enum_decl+0xc0>
    22c0:	movw	lr, #64561	; 0xfc31
    22c4:	movt	lr, #65535	; 0xffff
    22c8:	cmp	r0, lr
    22cc:	bne	22f4 <parse_enum_decl+0xe4>
    22d0:	ldr	r1, [r8, #40]	; 0x28
    22d4:	ldr	r2, [pc, #320]	; 241c <parse_enum_decl+0x20c>
    22d8:	mov	r0, r6
    22dc:	bl	118 <error_tok>
    22e0:	b	22f4 <parse_enum_decl+0xe4>
    22e4:	ldr	r1, [r8, #40]	; 0x28
    22e8:	ldr	r2, [pc, #300]	; 241c <parse_enum_decl+0x20c>
    22ec:	mov	r0, r6
    22f0:	bl	118 <error_tok>
    22f4:	mov	r0, r6
    22f8:	bl	1ecc <parse_metadata>
    22fc:	str	r0, [r8, #28]
    2300:	mov	r1, #123	; 0x7b
    2304:	ldr	r2, [pc, #292]	; 2430 <parse_enum_decl+0x220>
    2308:	mov	r0, r6
    230c:	bl	1404 <match>
    2310:	mov	r5, r0
    2314:	cmp	r5, #0
    2318:	beq	23ec <parse_enum_decl+0x1dc>
    231c:	mov	r1, #9
    2320:	ldr	r2, [pc, #256]	; 2428 <parse_enum_decl+0x218>
    2324:	mov	r0, r6
    2328:	bl	1404 <match>
    232c:	mov	r7, r0
    2330:	cmp	r7, #0
    2334:	beq	23ec <parse_enum_decl+0x1dc>
    2338:	ldr	ip, [r6, #108]	; 0x6c
    233c:	cmp	ip, #10
    2340:	bge	23ec <parse_enum_decl+0x1dc>
    2344:	add	r1, r8, #20
    2348:	mov	r0, r6
    234c:	bl	10e4 <fb_add_member>
    2350:	mov	r4, r0
    2354:	str	r7, [r4, #4]
    2358:	mov	r1, #61	; 0x3d
    235c:	mov	r0, r6
    2360:	bl	13c0 <optional>
    2364:	cmp	r0, #0
    2368:	beq	2380 <parse_enum_decl+0x170>
    236c:	add	r1, r4, #48	; 0x30
    2370:	mov	r2, #0
    2374:	ldr	r3, [pc, #168]	; 2424 <parse_enum_decl+0x214>
    2378:	mov	r0, r6
    237c:	bl	1918 <parse_value>
    2380:	mov	r1, #44	; 0x2c
    2384:	mov	r0, r6
    2388:	bl	13c0 <optional>
    238c:	cmp	r0, #0
    2390:	beq	23ac <parse_enum_decl+0x19c>
    2394:	ldr	r1, [r6, #40]	; 0x28
    2398:	ldr	r2, [r1, #16]
    239c:	cmp	r2, #125	; 0x7d
    23a0:	moveq	r1, #1
    23a4:	movne	r1, #0
    23a8:	b	23b0 <parse_enum_decl+0x1a0>
    23ac:	mov	r1, #1
    23b0:	cmp	r1, #0
    23b4:	bne	23c4 <parse_enum_decl+0x1b4>
    23b8:	mov	ip, #0
    23bc:	str	ip, [r6, #36]	; 0x24
    23c0:	b	231c <parse_enum_decl+0x10c>
    23c4:	cmp	r5, #0
    23c8:	beq	23e0 <parse_enum_decl+0x1d0>
    23cc:	mov	r1, #125	; 0x7d
    23d0:	ldr	r2, [pc, #84]	; 242c <parse_enum_decl+0x21c>
    23d4:	mov	r3, r5
    23d8:	mov	r0, r6
    23dc:	bl	1454 <advance>
    23e0:	add	r0, r8, #20
    23e4:	bl	c38 <revert_symbols>
    23e8:	b	23fc <parse_enum_decl+0x1ec>
    23ec:	mov	r1, #125	; 0x7d
    23f0:	mov	r2, #1
    23f4:	mov	r0, r6
    23f8:	bl	126c <recover>
    23fc:	ldr	r4, [sp, #8]
    2400:	ldr	r5, [sp, #12]
    2404:	ldr	r6, [sp, #16]
    2408:	ldr	r7, [sp, #20]
    240c:	ldr	r8, [sp, #24]
    2410:	ldr	lr, [sp, #4]
    2414:	add	sp, sp, #32
    2418:	bx	lr
    241c:	.word	0x00000076
    2420:	.word	0x00000894
    2424:	.word	0x00000017
    2428:	.word	0x00000187
    242c:	.word	0x000008ca
    2430:	.word	0x000004e2

00002434 <parse_union_decl>:
    2434:	mov	ip, sp
    2438:	sub	sp, sp, #48	; 0x30
    243c:	str	ip, [sp, #4]
    2440:	str	lr, [sp, #8]
    2444:	str	r4, [sp, #16]
    2448:	str	r5, [sp, #20]
    244c:	str	r6, [sp, #24]
    2450:	str	r7, [sp, #28]
    2454:	str	r8, [sp, #32]
    2458:	mov	r7, r1
    245c:	mov	r5, r0
    2460:	mov	r1, #9
    2464:	ldr	r2, [pc, #492]	; 2658 <parse_union_decl+0x224>
    2468:	mov	r0, r5
    246c:	bl	1404 <match>
    2470:	str	r0, [r7, #4]
    2474:	cmp	r0, #0
    2478:	beq	2610 <parse_union_decl+0x1dc>
    247c:	mov	r0, r5
    2480:	bl	1ecc <parse_metadata>
    2484:	str	r0, [r7, #28]
    2488:	mov	r1, #123	; 0x7b
    248c:	ldr	r2, [pc, #444]	; 2650 <parse_union_decl+0x21c>
    2490:	mov	r0, r5
    2494:	bl	1404 <match>
    2498:	mov	r6, r0
    249c:	cmp	r6, #0
    24a0:	beq	2610 <parse_union_decl+0x1dc>
    24a4:	ldr	ip, [r5, #40]	; 0x28
    24a8:	ldr	r3, [ip, #16]
    24ac:	cmp	r3, #9
    24b0:	beq	24c8 <parse_union_decl+0x94>
    24b4:	ldr	r1, [r5, #40]	; 0x28
    24b8:	ldr	r2, [pc, #404]	; 2654 <parse_union_decl+0x220>
    24bc:	mov	r0, r5
    24c0:	bl	118 <error_tok>
    24c4:	b	2610 <parse_union_decl+0x1dc>
    24c8:	ldr	r0, [r5, #108]	; 0x6c
    24cc:	cmp	r0, #10
    24d0:	bge	2610 <parse_union_decl+0x1dc>
    24d4:	ldr	r8, [r5, #40]	; 0x28
    24d8:	add	r1, r7, #20
    24dc:	mov	r0, r5
    24e0:	bl	10e4 <fb_add_member>
    24e4:	mov	r4, r0
    24e8:	add	r1, sp, #40	; 0x28
    24ec:	mov	r0, r5
    24f0:	bl	186c <parse_ref>
    24f4:	ldr	ip, [sp, #40]	; 0x28
    24f8:	str	ip, [r4, #16]
    24fc:	mov	r0, #12
    2500:	strh	r0, [r4, #24]
    2504:	ldr	r1, [sp, #40]	; 0x28
    2508:	ldr	r2, [r1]
    250c:	cmp	r2, #0
    2510:	beq	2524 <parse_union_decl+0xf0>
    2514:	ldr	r1, [sp, #40]	; 0x28
    2518:	ldr	r3, [r1]
    251c:	str	r3, [sp, #40]	; 0x28
    2520:	b	2504 <parse_union_decl+0xd0>
    2524:	ldr	r0, [sp, #40]	; 0x28
    2528:	ldr	r3, [r0, #4]
    252c:	str	r3, [r4, #4]
    2530:	mov	r1, #58	; 0x3a
    2534:	mov	r0, r5
    2538:	bl	13c0 <optional>
    253c:	cmp	r0, #0
    2540:	beq	2570 <parse_union_decl+0x13c>
    2544:	ldr	r2, [r4, #16]
    2548:	ldr	r0, [r2]
    254c:	cmp	r0, #0
    2550:	beq	2564 <parse_union_decl+0x130>
    2554:	ldr	r2, [pc, #256]	; 265c <parse_union_decl+0x228>
    2558:	mov	r1, r8
    255c:	mov	r0, r5
    2560:	bl	118 <error_tok>
    2564:	add	r1, r4, #16
    2568:	mov	r0, r5
    256c:	bl	1b60 <parse_type>
    2570:	mov	r1, #61	; 0x3d
    2574:	mov	r0, r5
    2578:	bl	13c0 <optional>
    257c:	cmp	r0, #0
    2580:	beq	2598 <parse_union_decl+0x164>
    2584:	add	r1, r4, #48	; 0x30
    2588:	mov	r2, #0
    258c:	ldr	r3, [pc, #184]	; 264c <parse_union_decl+0x218>
    2590:	mov	r0, r5
    2594:	bl	1918 <parse_value>
    2598:	mov	r1, #44	; 0x2c
    259c:	mov	r0, r5
    25a0:	bl	13c0 <optional>
    25a4:	cmp	r0, #0
    25a8:	beq	25c4 <parse_union_decl+0x190>
    25ac:	ldr	r1, [r5, #40]	; 0x28
    25b0:	ldr	ip, [r1, #16]
    25b4:	cmp	ip, #125	; 0x7d
    25b8:	moveq	r2, #1
    25bc:	movne	r2, #0
    25c0:	b	25c8 <parse_union_decl+0x194>
    25c4:	mov	r2, #1
    25c8:	cmp	r2, #0
    25cc:	bne	25dc <parse_union_decl+0x1a8>
    25d0:	mov	ip, #0
    25d4:	str	ip, [r5, #36]	; 0x24
    25d8:	b	24a4 <parse_union_decl+0x70>
    25dc:	mov	r1, #125	; 0x7d
    25e0:	ldr	r2, [pc, #120]	; 2660 <parse_union_decl+0x22c>
    25e4:	mov	r3, r6
    25e8:	mov	r0, r5
    25ec:	bl	1454 <advance>
    25f0:	add	r0, r7, #20
    25f4:	bl	c38 <revert_symbols>
    25f8:	add	r1, r7, #20
    25fc:	mov	r0, r5
    2600:	bl	10e4 <fb_add_member>
    2604:	add	r3, r5, #68	; 0x44
    2608:	str	r3, [r0, #4]
    260c:	b	262c <parse_union_decl+0x1f8>
    2610:	mov	r1, #59	; 0x3b
    2614:	mov	r2, #1
    2618:	mov	r3, #125	; 0x7d
    261c:	mov	ip, #0
    2620:	str	ip, [sp]
    2624:	mov	r0, r5
    2628:	bl	12f4 <recover2>
    262c:	ldr	r4, [sp, #16]
    2630:	ldr	r5, [sp, #20]
    2634:	ldr	r6, [sp, #24]
    2638:	ldr	r7, [sp, #28]
    263c:	ldr	r8, [sp, #32]
    2640:	ldr	lr, [sp, #8]
    2644:	add	sp, sp, #48	; 0x30
    2648:	bx	lr
    264c:	.word	0x00000017
    2650:	.word	0x0000040e
    2654:	.word	0x00000bb8
    2658:	.word	0x00000bfb
    265c:	.word	0x00000101
    2660:	.word	0x00000674

00002664 <parse_compound_type>:
    2664:	mov	ip, sp
    2668:	sub	sp, sp, #24
    266c:	str	ip, [sp]
    2670:	str	lr, [sp, #4]
    2674:	str	r4, [sp, #8]
    2678:	str	r5, [sp, #12]
    267c:	str	r6, [sp, #16]
    2680:	str	r7, [sp, #20]
    2684:	mov	r7, r2
    2688:	mov	r6, r1
    268c:	mov	r5, r0
    2690:	mov	r1, #9
    2694:	ldr	r2, [pc, #284]	; 27b8 <parse_compound_type+0x154>
    2698:	mov	r0, r5
    269c:	bl	1404 <match>
    26a0:	cmp	r0, #0
    26a4:	beq	2788 <parse_compound_type+0x124>
    26a8:	str	r0, [r6, #4]
    26ac:	mov	r0, r5
    26b0:	bl	1ecc <parse_metadata>
    26b4:	str	r0, [r6, #28]
    26b8:	mov	r1, #123	; 0x7b
    26bc:	ldr	r2, [pc, #240]	; 27b4 <parse_compound_type+0x150>
    26c0:	mov	r0, r5
    26c4:	bl	1404 <match>
    26c8:	cmp	r0, #0
    26cc:	beq	2788 <parse_compound_type+0x124>
    26d0:	ldr	r4, [r5, #40]	; 0x28
    26d4:	ldr	r2, [r5, #40]	; 0x28
    26d8:	ldr	r3, [r2, #16]
    26dc:	cmp	r3, #125	; 0x7d
    26e0:	beq	2738 <parse_compound_type+0xd4>
    26e4:	movw	lr, #64569	; 0xfc39
    26e8:	movt	lr, #65535	; 0xffff
    26ec:	cmp	r7, lr
    26f0:	beq	2710 <parse_compound_type+0xac>
    26f4:	add	r1, r6, #20
    26f8:	mov	r0, r5
    26fc:	bl	10e4 <fb_add_member>
    2700:	mov	r1, r0
    2704:	mov	r0, r5
    2708:	bl	1ff4 <parse_field>
    270c:	b	2728 <parse_compound_type+0xc4>
    2710:	add	r1, r6, #20
    2714:	mov	r0, r5
    2718:	bl	10e4 <fb_add_member>
    271c:	mov	r1, r0
    2720:	mov	r0, r5
    2724:	bl	20e0 <parse_method>
    2728:	ldr	r3, [r5, #108]	; 0x6c
    272c:	cmp	r3, #10
    2730:	bge	2788 <parse_compound_type+0x124>
    2734:	b	26d4 <parse_compound_type+0x70>
    2738:	mov	r1, #125	; 0x7d
    273c:	mov	r0, r5
    2740:	bl	13c0 <optional>
    2744:	cmp	r0, #0
    2748:	beq	2754 <parse_compound_type+0xf0>
    274c:	mov	ip, #0
    2750:	b	2760 <parse_compound_type+0xfc>
    2754:	cmp	r4, #0
    2758:	movne	ip, #1
    275c:	moveq	ip, #0
    2760:	cmp	ip, #0
    2764:	beq	277c <parse_compound_type+0x118>
    2768:	ldr	r1, [r5, #40]	; 0x28
    276c:	ldr	r2, [pc, #72]	; 27bc <parse_compound_type+0x158>
    2770:	mov	r3, r4
    2774:	mov	r0, r5
    2778:	bl	d8 <error_tok_2>
    277c:	add	r0, r6, #20
    2780:	bl	c38 <revert_symbols>
    2784:	b	2798 <parse_compound_type+0x134>
    2788:	mov	r1, #125	; 0x7d
    278c:	mov	r2, #1
    2790:	mov	r0, r5
    2794:	bl	126c <recover>
    2798:	ldr	r4, [sp, #8]
    279c:	ldr	r5, [sp, #12]
    27a0:	ldr	r6, [sp, #16]
    27a4:	ldr	r7, [sp, #20]
    27a8:	ldr	lr, [sp, #4]
    27ac:	add	sp, sp, #24
    27b0:	bx	lr
    27b4:	.word	0x00000612
    27b8:	.word	0x0000078b
    27bc:	.word	0x0000035e

000027c0 <parse_namespace>:
    27c0:	mov	ip, sp
    27c4:	sub	sp, sp, #24
    27c8:	str	ip, [sp]
    27cc:	str	lr, [sp, #4]
    27d0:	str	r4, [sp, #8]
    27d4:	str	r5, [sp, #12]
    27d8:	mov	r4, r0
    27dc:	mov	r2, #0
    27e0:	str	r2, [sp, #16]
    27e4:	ldr	r5, [r4, #40]	; 0x28
    27e8:	mov	r1, #59	; 0x3b
    27ec:	mov	r0, r4
    27f0:	bl	13c0 <optional>
    27f4:	cmp	r0, #0
    27f8:	bne	2804 <parse_namespace+0x44>
    27fc:	mov	ip, #0
    2800:	b	2810 <parse_namespace+0x50>
    2804:	cmp	r5, #0
    2808:	movne	ip, #1
    280c:	moveq	ip, #0
    2810:	cmp	ip, #0
    2814:	beq	2824 <parse_namespace+0x64>
    2818:	mov	r0, #0
    281c:	str	r0, [r4, #544]	; 0x220
    2820:	b	2888 <parse_namespace+0xc8>
    2824:	ldr	ip, [r4, #40]	; 0x28
    2828:	ldr	r1, [ip, #16]
    282c:	cmp	r1, #9
    2830:	beq	2858 <parse_namespace+0x98>
    2834:	ldr	r1, [r4, #40]	; 0x28
    2838:	ldr	r2, [pc, #96]	; 28a0 <parse_namespace+0xe0>
    283c:	mov	r0, r4
    2840:	bl	118 <error_tok>
    2844:	mov	r1, #59	; 0x3b
    2848:	mov	r2, #1
    284c:	mov	r0, r4
    2850:	bl	126c <recover>
    2854:	b	2888 <parse_namespace+0xc8>
    2858:	add	r1, sp, #16
    285c:	mov	r0, r4
    2860:	bl	186c <parse_ref>
    2864:	mov	r1, #59	; 0x3b
    2868:	ldr	r2, [pc, #44]	; 289c <parse_namespace+0xdc>
    286c:	mov	r3, r5
    2870:	mov	r0, r4
    2874:	bl	1454 <advance>
    2878:	ldr	r1, [sp, #16]
    287c:	mov	r0, r4
    2880:	bl	101c <fb_add_scope>
    2884:	str	r0, [r4, #544]	; 0x220
    2888:	ldr	r4, [sp, #8]
    288c:	ldr	r5, [sp, #12]
    2890:	ldr	lr, [sp, #4]
    2894:	add	sp, sp, #24
    2898:	bx	lr
    289c:	.word	0x00000b43
    28a0:	.word	0x0000008d

000028a4 <parse_root_type>:
    28a4:	mov	ip, sp
    28a8:	sub	sp, sp, #24
    28ac:	str	ip, [sp]
    28b0:	str	lr, [sp, #4]
    28b4:	str	r4, [sp, #8]
    28b8:	str	r5, [sp, #12]
    28bc:	str	r6, [sp, #16]
    28c0:	mov	r6, r1
    28c4:	mov	r4, r0
    28c8:	ldr	r5, [r4, #40]	; 0x28
    28cc:	ldr	r0, [r6]
    28d0:	cmp	r0, #0
    28d4:	beq	28e8 <parse_root_type+0x44>
    28d8:	ldr	r1, [r4, #40]	; 0x28
    28dc:	ldr	r2, [pc, #72]	; 292c <parse_root_type+0x88>
    28e0:	mov	r0, r4
    28e4:	bl	118 <error_tok>
    28e8:	mov	r1, r6
    28ec:	mov	r0, r4
    28f0:	bl	186c <parse_ref>
    28f4:	ldr	r2, [r4, #544]	; 0x220
    28f8:	str	r2, [r6, #8]
    28fc:	mov	r1, #59	; 0x3b
    2900:	ldr	r2, [pc, #32]	; 2928 <parse_root_type+0x84>
    2904:	mov	r3, r5
    2908:	mov	r0, r4
    290c:	bl	1454 <advance>
    2910:	ldr	r4, [sp, #8]
    2914:	ldr	r5, [sp, #12]
    2918:	ldr	r6, [sp, #16]
    291c:	ldr	lr, [sp, #4]
    2920:	add	sp, sp, #24
    2924:	bx	lr
    2928:	.word	0x00000b12
    292c:	.word	0x000008ec

00002930 <parse_include>:
    2930:	mov	ip, sp
    2934:	sub	sp, sp, #16
    2938:	str	ip, [sp]
    293c:	str	lr, [sp, #4]
    2940:	str	r4, [sp, #8]
    2944:	str	r5, [sp, #12]
    2948:	mov	r4, r0
    294c:	ldr	r5, [r4, #40]	; 0x28
    2950:	movw	r1, #64565	; 0xfc35
    2954:	movt	r1, #65535	; 0xffff
    2958:	mov	r0, r4
    295c:	bl	13c0 <optional>
    2960:	cmp	r0, #0
    2964:	beq	29e0 <parse_include+0xb0>
    2968:	ldr	r0, [r4, #140]	; 0x8c
    296c:	cmp	r0, #0
    2970:	beq	2984 <parse_include+0x54>
    2974:	ldr	r2, [pc, #128]	; 29fc <parse_include+0xcc>
    2978:	mov	r1, r5
    297c:	mov	r0, r4
    2980:	bl	118 <error_tok>
    2984:	ldr	ip, [r4, #108]	; 0x6c
    2988:	cmp	ip, #10
    298c:	bge	29e0 <parse_include+0xb0>
    2990:	mov	r1, #19
    2994:	ldr	r2, [pc, #92]	; 29f8 <parse_include+0xc8>
    2998:	mov	r0, r4
    299c:	bl	1404 <match>
    29a0:	cmp	r0, #0
    29a4:	bne	29b8 <parse_include+0x88>
    29a8:	mov	r1, #59	; 0x3b
    29ac:	mov	r2, #1
    29b0:	mov	r0, r4
    29b4:	bl	126c <recover>
    29b8:	mov	r0, r4
    29bc:	bl	fdc <fb_add_include>
    29c0:	add	r1, r0, #8
    29c4:	mov	r0, r4
    29c8:	bl	1700 <parse_string_literal>
    29cc:	mov	r1, #59	; 0x3b
    29d0:	ldr	r2, [pc, #28]	; 29f4 <parse_include+0xc4>
    29d4:	mov	r0, r4
    29d8:	bl	1404 <match>
    29dc:	b	2950 <parse_include+0x20>
    29e0:	ldr	r4, [sp, #8]
    29e4:	ldr	r5, [sp, #12]
    29e8:	ldr	lr, [sp, #4]
    29ec:	add	sp, sp, #16
    29f0:	bx	lr
    29f4:	.word	0x00000500
    29f8:	.word	0x000007f7
    29fc:	.word	0x00000032

00002a00 <parse_attribute>:
    2a00:	mov	ip, sp
    2a04:	sub	sp, sp, #32
    2a08:	str	ip, [sp, #4]
    2a0c:	str	lr, [sp, #8]
    2a10:	str	r4, [sp, #16]
    2a14:	str	r5, [sp, #20]
    2a18:	str	r6, [sp, #24]
    2a1c:	mov	r5, r1
    2a20:	mov	r4, r0
    2a24:	ldr	r6, [r4, #40]	; 0x28
    2a28:	mov	r1, #19
    2a2c:	ldr	r2, [pc, #104]	; 2a9c <parse_attribute+0x9c>
    2a30:	mov	r0, r4
    2a34:	bl	1404 <match>
    2a38:	cmp	r0, #0
    2a3c:	beq	2a74 <parse_attribute+0x74>
    2a40:	add	r1, r5, #8
    2a44:	mov	r0, r4
    2a48:	bl	1700 <parse_string_literal>
    2a4c:	ldr	r1, [r5, #12]
    2a50:	cmp	r1, #0
    2a54:	bne	2a74 <parse_attribute+0x74>
    2a58:	ldr	r2, [pc, #64]	; 2aa0 <parse_attribute+0xa0>
    2a5c:	mov	r3, #0
    2a60:	mov	r0, #0
    2a64:	str	r0, [sp]
    2a68:	mov	r1, r6
    2a6c:	mov	r0, r4
    2a70:	bl	13c <error_tok_as_string>
    2a74:	mov	r1, #59	; 0x3b
    2a78:	ldr	r2, [pc, #36]	; 2aa4 <parse_attribute+0xa4>
    2a7c:	mov	r0, r4
    2a80:	bl	1404 <match>
    2a84:	ldr	r4, [sp, #16]
    2a88:	ldr	r5, [sp, #20]
    2a8c:	ldr	r6, [sp, #24]
    2a90:	ldr	lr, [sp, #8]
    2a94:	add	sp, sp, #32
    2a98:	bx	lr
    2a9c:	.word	0x000003d5
    2aa0:	.word	0x0000042d
    2aa4:	.word	0x000009a6

00002aa8 <parse_file_extension>:
    2aa8:	mov	ip, sp
    2aac:	sub	sp, sp, #24
    2ab0:	str	ip, [sp, #4]
    2ab4:	str	lr, [sp, #8]
    2ab8:	str	r4, [sp, #16]
    2abc:	str	r5, [sp, #20]
    2ac0:	mov	r5, r1
    2ac4:	mov	r4, r0
    2ac8:	ldrh	r1, [r5, #8]
    2acc:	cmp	r1, #2
    2ad0:	bne	2af0 <parse_file_extension+0x48>
    2ad4:	ldr	r1, [r4, #40]	; 0x28
    2ad8:	ldr	r2, [pc, #112]	; 2b50 <parse_file_extension+0xa8>
    2adc:	ldr	r3, [r5]
    2ae0:	ldr	r0, [r5, #4]
    2ae4:	str	r0, [sp]
    2ae8:	mov	r0, r4
    2aec:	bl	13c <error_tok_as_string>
    2af0:	mov	r1, #19
    2af4:	ldr	r2, [pc, #88]	; 2b54 <parse_file_extension+0xac>
    2af8:	mov	r0, r4
    2afc:	bl	1404 <match>
    2b00:	cmp	r0, #0
    2b04:	beq	2b28 <parse_file_extension+0x80>
    2b08:	mov	r1, r5
    2b0c:	mov	r0, r4
    2b10:	bl	1700 <parse_string_literal>
    2b14:	mov	r1, #59	; 0x3b
    2b18:	ldr	r2, [pc, #44]	; 2b4c <parse_file_extension+0xa4>
    2b1c:	mov	r0, r4
    2b20:	bl	1404 <match>
    2b24:	b	2b38 <parse_file_extension+0x90>
    2b28:	mov	r1, #59	; 0x3b
    2b2c:	mov	r2, #1
    2b30:	mov	r0, r4
    2b34:	bl	126c <recover>
    2b38:	ldr	r4, [sp, #16]
    2b3c:	ldr	r5, [sp, #20]
    2b40:	ldr	lr, [sp, #8]
    2b44:	add	sp, sp, #24
    2b48:	bx	lr
    2b4c:	.word	0x0000062b
    2b50:	.word	0x00000c21
    2b54:	.word	0x000009bd

00002b58 <parse_file_identifier>:
    2b58:	mov	ip, sp
    2b5c:	sub	sp, sp, #32
    2b60:	str	ip, [sp, #4]
    2b64:	str	lr, [sp, #8]
    2b68:	str	r4, [sp, #16]
    2b6c:	str	r5, [sp, #20]
    2b70:	str	r6, [sp, #24]
    2b74:	mov	r4, r1
    2b78:	mov	r5, r0
    2b7c:	ldrh	r3, [r4, #8]
    2b80:	cmp	r3, #0
    2b84:	beq	2ba4 <parse_file_identifier+0x4c>
    2b88:	ldr	r1, [r5, #40]	; 0x28
    2b8c:	ldr	r2, [pc, #184]	; 2c4c <parse_file_identifier+0xf4>
    2b90:	ldr	r3, [r4]
    2b94:	ldr	ip, [r4, #4]
    2b98:	str	ip, [sp]
    2b9c:	mov	r0, r5
    2ba0:	bl	13c <error_tok_as_string>
    2ba4:	mov	r1, #19
    2ba8:	ldr	r2, [pc, #168]	; 2c58 <parse_file_identifier+0x100>
    2bac:	mov	r0, r5
    2bb0:	bl	1404 <match>
    2bb4:	cmp	r0, #0
    2bb8:	beq	2c24 <parse_file_identifier+0xcc>
    2bbc:	ldr	r6, [r5, #40]	; 0x28
    2bc0:	mov	r1, r4
    2bc4:	mov	r0, r5
    2bc8:	bl	1700 <parse_string_literal>
    2bcc:	ldr	r0, [r4]
    2bd0:	cmp	r0, #0
    2bd4:	beq	2bec <parse_file_identifier+0x94>
    2bd8:	ldr	r2, [r4, #4]
    2bdc:	cmp	r2, #4
    2be0:	movne	r0, #1
    2be4:	moveq	r0, #0
    2be8:	b	2bf0 <parse_file_identifier+0x98>
    2bec:	mov	r0, #0
    2bf0:	cmp	r0, #0
    2bf4:	beq	2c10 <parse_file_identifier+0xb8>
    2bf8:	mov	r2, #1
    2bfc:	strh	r2, [r4, #8]
    2c00:	ldr	r2, [pc, #72]	; 2c50 <parse_file_identifier+0xf8>
    2c04:	mov	r1, r6
    2c08:	mov	r0, r5
    2c0c:	bl	118 <error_tok>
    2c10:	mov	r1, #59	; 0x3b
    2c14:	ldr	r2, [pc, #56]	; 2c54 <parse_file_identifier+0xfc>
    2c18:	mov	r0, r5
    2c1c:	bl	1404 <match>
    2c20:	b	2c34 <parse_file_identifier+0xdc>
    2c24:	mov	r1, #59	; 0x3b
    2c28:	mov	r2, #1
    2c2c:	mov	r0, r5
    2c30:	bl	126c <recover>
    2c34:	ldr	r4, [sp, #16]
    2c38:	ldr	r5, [sp, #20]
    2c3c:	ldr	r6, [sp, #24]
    2c40:	ldr	lr, [sp, #8]
    2c44:	add	sp, sp, #32
    2c48:	bx	lr
    2c4c:	.word	0x00000843
    2c50:	.word	0x000001a2
    2c54:	.word	0x00000a56
    2c58:	.word	0x00000902

00002c5c <parse_schema_decl>:
    2c5c:	mov	ip, sp
    2c60:	sub	sp, sp, #24
    2c64:	str	ip, [sp, #4]
    2c68:	str	lr, [sp, #8]
    2c6c:	str	r4, [sp, #16]
    2c70:	mov	r4, r0
    2c74:	ldr	ip, [r4, #40]	; 0x28
    2c78:	ldr	r3, [ip, #16]
    2c7c:	mvn	lr, #972	; 0x3cc
    2c80:	cmp	r3, lr
    2c84:	bcs	2dc0 <parse_schema_decl+0x164>
    2c88:	cmp	r3, #123	; 0x7b
    2c8c:	bcs	2d08 <parse_schema_decl+0xac>
    2c90:	cmp	r3, #5
    2c94:	beq	2ce8 <parse_schema_decl+0x8c>
    2c98:	cmp	r3, #7
    2c9c:	beq	2cc8 <parse_schema_decl+0x6c>
    2ca0:	cmp	r3, #27
    2ca4:	bne	2efc <parse_schema_decl+0x2a0>
    2ca8:	ldr	r1, [r4, #40]	; 0x28
    2cac:	ldr	r2, [pc, #648]	; 2f3c <parse_schema_decl+0x2e0>
    2cb0:	ldr	r3, [pc, #656]	; 2f48 <parse_schema_decl+0x2ec>
    2cb4:	mov	r0, #5
    2cb8:	str	r0, [sp]
    2cbc:	mov	r0, r4
    2cc0:	bl	13c <error_tok_as_string>
    2cc4:	b	2f24 <parse_schema_decl+0x2c8>
    2cc8:	ldr	r1, [r4, #40]	; 0x28
    2ccc:	ldr	r2, [pc, #636]	; 2f50 <parse_schema_decl+0x2f4>
    2cd0:	ldr	r3, [pc, #620]	; 2f44 <parse_schema_decl+0x2e8>
    2cd4:	mov	r0, #1
    2cd8:	str	r0, [sp]
    2cdc:	mov	r0, r4
    2ce0:	bl	13c <error_tok_as_string>
    2ce4:	b	2f24 <parse_schema_decl+0x2c8>
    2ce8:	ldr	r1, [r4, #40]	; 0x28
    2cec:	ldr	r2, [pc, #576]	; 2f34 <parse_schema_decl+0x2d8>
    2cf0:	ldr	r3, [pc, #588]	; 2f44 <parse_schema_decl+0x2e8>
    2cf4:	mov	r0, #1
    2cf8:	str	r0, [sp]
    2cfc:	mov	r0, r4
    2d00:	bl	13c <error_tok_as_string>
    2d04:	b	2f24 <parse_schema_decl+0x2c8>
    2d08:	movw	lr, #64553	; 0xfc29
    2d0c:	movt	lr, #65535	; 0xffff
    2d10:	cmp	r3, lr
    2d14:	bcs	2d60 <parse_schema_decl+0x104>
    2d18:	cmp	r3, #123	; 0x7b
    2d1c:	beq	2d4c <parse_schema_decl+0xf0>
    2d20:	mvn	lr, #996	; 0x3e4
    2d24:	cmp	r3, lr
    2d28:	bne	2efc <parse_schema_decl+0x2a0>
    2d2c:	mov	r0, r4
    2d30:	bl	118c <next>
    2d34:	mov	r0, r4
    2d38:	bl	e78 <fb_add_enum>
    2d3c:	mov	r1, r0
    2d40:	mov	r0, r4
    2d44:	bl	2210 <parse_enum_decl>
    2d48:	b	2f24 <parse_schema_decl+0x2c8>
    2d4c:	ldr	r1, [r4, #40]	; 0x28
    2d50:	ldr	r2, [pc, #500]	; 2f4c <parse_schema_decl+0x2f0>
    2d54:	mov	r0, r4
    2d58:	bl	118 <error_tok>
    2d5c:	b	2f24 <parse_schema_decl+0x2c8>
    2d60:	movw	lr, #64553	; 0xfc29
    2d64:	movt	lr, #65535	; 0xffff
    2d68:	cmp	r3, lr
    2d6c:	beq	2d98 <parse_schema_decl+0x13c>
    2d70:	cmn	r3, #976	; 0x3d0
    2d74:	bne	2efc <parse_schema_decl+0x2a0>
    2d78:	mov	r0, r4
    2d7c:	bl	118c <next>
    2d80:	mov	r0, r4
    2d84:	bl	ef0 <fb_add_union>
    2d88:	mov	r1, r0
    2d8c:	mov	r0, r4
    2d90:	bl	2434 <parse_union_decl>
    2d94:	b	2f24 <parse_schema_decl+0x2c8>
    2d98:	mov	r0, r4
    2d9c:	bl	118c <next>
    2da0:	mov	r0, r4
    2da4:	bl	d10 <fb_add_table>
    2da8:	mov	r1, r0
    2dac:	movw	r2, #64553	; 0xfc29
    2db0:	movt	r2, #65535	; 0xffff
    2db4:	mov	r0, r4
    2db8:	bl	2664 <parse_compound_type>
    2dbc:	b	2f24 <parse_schema_decl+0x2c8>
    2dc0:	cmn	r3, #968	; 0x3c8
    2dc4:	bcs	2e70 <parse_schema_decl+0x214>
    2dc8:	movw	lr, #64566	; 0xfc36
    2dcc:	movt	lr, #65535	; 0xffff
    2dd0:	cmp	r3, lr
    2dd4:	bcs	2e2c <parse_schema_decl+0x1d0>
    2dd8:	mvn	lr, #972	; 0x3cc
    2ddc:	cmp	r3, lr
    2de0:	beq	2e08 <parse_schema_decl+0x1ac>
    2de4:	movw	lr, #64565	; 0xfc35
    2de8:	movt	lr, #65535	; 0xffff
    2dec:	cmp	r3, lr
    2df0:	bne	2efc <parse_schema_decl+0x2a0>
    2df4:	ldr	r1, [r4, #40]	; 0x28
    2df8:	ldr	r2, [pc, #320]	; 2f40 <parse_schema_decl+0x2e4>
    2dfc:	mov	r0, r4
    2e00:	bl	118 <error_tok>
    2e04:	b	2f24 <parse_schema_decl+0x2c8>
    2e08:	mov	r0, r4
    2e0c:	bl	118c <next>
    2e10:	mov	r0, r4
    2e14:	bl	d88 <fb_add_struct>
    2e18:	mvn	r2, #972	; 0x3cc
    2e1c:	mov	r1, r0
    2e20:	mov	r0, r4
    2e24:	bl	2664 <parse_compound_type>
    2e28:	b	2f24 <parse_schema_decl+0x2c8>
    2e2c:	movw	lr, #64566	; 0xfc36
    2e30:	movt	lr, #65535	; 0xffff
    2e34:	cmp	r3, lr
    2e38:	beq	2e50 <parse_schema_decl+0x1f4>
    2e3c:	mov	r0, r4
    2e40:	bl	118c <next>
    2e44:	mov	r0, r4
    2e48:	bl	27c0 <parse_namespace>
    2e4c:	b	2f24 <parse_schema_decl+0x2c8>
    2e50:	mov	r0, r4
    2e54:	bl	118c <next>
    2e58:	mov	r0, r4
    2e5c:	bl	f9c <fb_add_attribute>
    2e60:	mov	r1, r0
    2e64:	mov	r0, r4
    2e68:	bl	2a00 <parse_attribute>
    2e6c:	b	2f24 <parse_schema_decl+0x2c8>
    2e70:	movw	lr, #64570	; 0xfc3a
    2e74:	movt	lr, #65535	; 0xffff
    2e78:	cmp	r3, lr
    2e7c:	bcs	2ec8 <parse_schema_decl+0x26c>
    2e80:	cmn	r3, #968	; 0x3c8
    2e84:	bne	2ea0 <parse_schema_decl+0x244>
    2e88:	mov	r0, r4
    2e8c:	bl	118c <next>
    2e90:	add	r1, r4, #400	; 0x190
    2e94:	mov	r0, r4
    2e98:	bl	28a4 <parse_root_type>
    2e9c:	b	2f24 <parse_schema_decl+0x2c8>
    2ea0:	mov	r0, r4
    2ea4:	bl	118c <next>
    2ea8:	mov	r0, r4
    2eac:	bl	e00 <fb_add_rpc_service>
    2eb0:	movw	r2, #64569	; 0xfc39
    2eb4:	movt	r2, #65535	; 0xffff
    2eb8:	mov	r1, r0
    2ebc:	mov	r0, r4
    2ec0:	bl	2664 <parse_compound_type>
    2ec4:	b	2f24 <parse_schema_decl+0x2c8>
    2ec8:	movw	lr, #64570	; 0xfc3a
    2ecc:	movt	lr, #65535	; 0xffff
    2ed0:	cmp	r3, lr
    2ed4:	beq	2f10 <parse_schema_decl+0x2b4>
    2ed8:	mvn	lr, #964	; 0x3c4
    2edc:	cmp	r3, lr
    2ee0:	bne	2efc <parse_schema_decl+0x2a0>
    2ee4:	mov	r0, r4
    2ee8:	bl	118c <next>
    2eec:	add	r1, r4, #360	; 0x168
    2ef0:	mov	r0, r4
    2ef4:	bl	2b58 <parse_file_identifier>
    2ef8:	b	2f24 <parse_schema_decl+0x2c8>
    2efc:	ldr	r1, [r4, #40]	; 0x28
    2f00:	ldr	r2, [pc, #48]	; 2f38 <parse_schema_decl+0x2dc>
    2f04:	mov	r0, r4
    2f08:	bl	118 <error_tok>
    2f0c:	b	2f24 <parse_schema_decl+0x2c8>
    2f10:	mov	r0, r4
    2f14:	bl	118c <next>
    2f18:	add	r1, r4, #376	; 0x178
    2f1c:	mov	r0, r4
    2f20:	bl	2aa8 <parse_file_extension>
    2f24:	ldr	r4, [sp, #16]
    2f28:	ldr	lr, [sp, #8]
    2f2c:	add	sp, sp, #24
    2f30:	bx	lr
    2f34:	.word	0x00000387
    2f38:	.word	0x0000085f
    2f3c:	.word	0x0000098b
    2f40:	.word	0x000000ad
    2f44:	.word	0x000007e0
    2f48:	.word	0x00000a73
    2f4c:	.word	0x00000697
    2f50:	.word	0x0000047e

00002f54 <parse_schema>:
    2f54:	mov	ip, sp
    2f58:	sub	sp, sp, #24
    2f5c:	str	ip, [sp]
    2f60:	str	lr, [sp, #4]
    2f64:	str	r4, [sp, #8]
    2f68:	str	r5, [sp, #12]
    2f6c:	str	r6, [sp, #16]
    2f70:	mov	r4, r0
    2f74:	mov	r0, r4
    2f78:	bl	2930 <parse_include>
    2f7c:	ldr	r5, [r4, #40]	; 0x28
    2f80:	mov	r0, r5
    2f84:	bl	1160 <is_end>
    2f88:	cmp	r0, #0
    2f8c:	bne	2fe8 <parse_schema+0x94>
    2f90:	ldr	r2, [r4, #108]	; 0x6c
    2f94:	cmp	r2, #10
    2f98:	blt	2fa4 <parse_schema+0x50>
    2f9c:	mvn	r0, #0
    2fa0:	b	2ffc <parse_schema+0xa8>
    2fa4:	mov	r6, r5
    2fa8:	mov	r0, r4
    2fac:	bl	2c5c <parse_schema_decl>
    2fb0:	ldr	r5, [r4, #40]	; 0x28
    2fb4:	cmp	r5, r6
    2fb8:	bne	2f80 <parse_schema+0x2c>
    2fbc:	ldr	r0, [r4, #108]	; 0x6c
    2fc0:	cmp	r0, #0
    2fc4:	beq	2fd0 <parse_schema+0x7c>
    2fc8:	mvn	r0, #0
    2fcc:	b	2ffc <parse_schema+0xa8>
    2fd0:	ldr	r2, [pc, #60]	; 3014 <parse_schema+0xc0>
    2fd4:	mov	r1, r5
    2fd8:	mov	r0, r4
    2fdc:	bl	118 <error_tok>
    2fe0:	mvn	r0, #0
    2fe4:	b	2ffc <parse_schema+0xa8>
    2fe8:	add	r0, r4, #356	; 0x164
    2fec:	bl	c7c <revert_names>
    2ff0:	add	r0, r4, #392	; 0x188
    2ff4:	bl	c38 <revert_symbols>
    2ff8:	mov	r0, #0
    2ffc:	ldr	r4, [sp, #8]
    3000:	ldr	r5, [sp, #12]
    3004:	ldr	r6, [sp, #16]
    3008:	ldr	lr, [sp, #4]
    300c:	add	sp, sp, #24
    3010:	bx	lr
    3014:	.word	0x00000825

00003018 <clear_elem_buffers>:
    3018:	mov	ip, sp
    301c:	sub	sp, sp, #16
    3020:	str	ip, [sp]
    3024:	str	lr, [sp, #4]
    3028:	str	r4, [sp, #8]
    302c:	ldr	r0, [r0, #48]	; 0x30
    3030:	cmp	r0, #0
    3034:	beq	3048 <clear_elem_buffers+0x30>
    3038:	ldr	r4, [r0]
    303c:	bl	0 <free>
    3040:	mov	r0, r4
    3044:	b	3030 <clear_elem_buffers+0x18>
    3048:	ldr	r4, [sp, #8]
    304c:	ldr	lr, [sp, #4]
    3050:	add	sp, sp, #16
    3054:	bx	lr

00003058 <push_token>:
    3058:	mov	ip, sp
    305c:	sub	sp, sp, #32
    3060:	str	ip, [sp]
    3064:	str	lr, [sp, #4]
    3068:	str	r4, [sp, #8]
    306c:	str	r5, [sp, #12]
    3070:	str	r6, [sp, #16]
    3074:	str	r7, [sp, #20]
    3078:	str	r8, [sp, #24]
    307c:	mov	r5, r3
    3080:	mov	r6, r2
    3084:	mov	r7, r1
    3088:	mov	r8, r0
    308c:	ldr	r3, [r8, #20]
    3090:	ldr	r0, [r8, #28]
    3094:	lsl	ip, r0, #4
    3098:	add	r0, ip, r0, lsl #2
    309c:	add	ip, r3, r0
    30a0:	str	ip, [r8, #24]
    30a4:	ldr	r2, [r8, #40]	; 0x28
    30a8:	ldr	r3, [r8, #24]
    30ac:	cmp	r2, r3
    30b0:	bne	3140 <push_token+0xe8>
    30b4:	ldr	r1, [r8, #40]	; 0x28
    30b8:	ldr	r2, [r8, #20]
    30bc:	sub	r2, r1, r2
    30c0:	lsr	r0, r2, #31
    30c4:	movw	r1, #26215	; 0x6667
    30c8:	movt	r1, #26214	; 0x6666
    30cc:	smull	lr, r3, r2, r1
    30d0:	add	r4, r0, r3, asr #3
    30d4:	ldr	r1, [r8, #28]
    30d8:	cmp	r1, #0
    30dc:	beq	30ec <push_token+0x94>
    30e0:	ldr	r0, [r8, #28]
    30e4:	lsl	ip, r0, #1
    30e8:	b	30f0 <push_token+0x98>
    30ec:	mov	ip, #1024	; 0x400
    30f0:	str	ip, [r8, #28]
    30f4:	ldr	r0, [r8, #20]
    30f8:	ldr	r1, [r8, #28]
    30fc:	lsl	r2, r1, #4
    3100:	add	r1, r2, r1, lsl #2
    3104:	bl	0 <realloc>
    3108:	str	r0, [r8, #20]
    310c:	ldr	r0, [r8, #20]
    3110:	bl	0 <checkmem>
    3114:	ldr	r3, [r8, #20]
    3118:	ldr	r1, [r8, #28]
    311c:	lsl	r0, r1, #4
    3120:	add	ip, r0, r1, lsl #2
    3124:	add	r0, r3, ip
    3128:	str	r0, [r8, #24]
    312c:	ldr	r0, [r8, #20]
    3130:	lsl	r3, r4, #4
    3134:	add	r3, r3, r4, lsl #2
    3138:	add	r0, r0, r3
    313c:	str	r0, [r8, #40]	; 0x28
    3140:	ldr	r0, [r8, #40]	; 0x28
    3144:	str	r7, [r0, #16]
    3148:	str	r6, [r0]
    314c:	sub	r1, r5, r6
    3150:	str	r1, [r0, #4]
    3154:	ldr	r3, [r8, #64]	; 0x40
    3158:	str	r3, [r0, #8]
    315c:	ldr	r1, [r8, #60]	; 0x3c
    3160:	sub	r2, r6, r1
    3164:	add	ip, r2, #1
    3168:	str	ip, [r0, #12]
    316c:	ldr	r1, [r8, #40]	; 0x28
    3170:	add	r1, r1, #20
    3174:	str	r1, [r8, #40]	; 0x28
    3178:	ldr	r4, [sp, #8]
    317c:	ldr	r5, [sp, #12]
    3180:	ldr	r6, [sp, #16]
    3184:	ldr	r7, [sp, #20]
    3188:	ldr	r8, [sp, #24]
    318c:	ldr	lr, [sp, #4]
    3190:	add	sp, sp, #32
    3194:	bx	lr

00003198 <push_comment>:
    3198:	mov	ip, sp
    319c:	sub	sp, sp, #8
    31a0:	str	ip, [sp]
    31a4:	str	lr, [sp, #4]
    31a8:	ldr	r3, [r0, #32]
    31ac:	cmp	r3, #0
    31b0:	beq	31d0 <push_comment+0x38>
    31b4:	movw	r3, #64572	; 0xfc3c
    31b8:	movt	r3, #65535	; 0xffff
    31bc:	mov	ip, r2
    31c0:	mov	r2, r1
    31c4:	mov	r1, r3
    31c8:	mov	r3, ip
    31cc:	bl	3058 <push_token>
    31d0:	ldr	lr, [sp, #4]
    31d4:	add	sp, sp, #8
    31d8:	bx	lr

000031dc <inject_token>:
    31dc:	mov	ip, sp
    31e0:	sub	sp, sp, #16
    31e4:	str	ip, [sp]
    31e8:	str	lr, [sp, #4]
    31ec:	str	r4, [sp, #8]
    31f0:	mov	r4, r0
    31f4:	mov	r0, r1
    31f8:	str	r2, [r4, #16]
    31fc:	str	r0, [r4]
    3200:	bl	0 <strlen>
    3204:	str	r0, [r4, #4]
    3208:	mov	r2, #0
    320c:	str	r2, [r4, #12]
    3210:	mov	r1, #0
    3214:	str	r1, [r4, #8]
    3218:	ldr	r4, [sp, #8]
    321c:	ldr	lr, [sp, #4]
    3220:	add	sp, sp, #16
    3224:	bx	lr

00003228 <lex>:
    3228:	mov	ip, sp
    322c:	sub	sp, sp, #32
    3230:	str	ip, [sp]
    3234:	str	lr, [sp, #4]
    3238:	str	r4, [sp, #8]
    323c:	str	r5, [sp, #12]
    3240:	str	r6, [sp, #16]
    3244:	str	r7, [sp, #20]
    3248:	str	r8, [sp, #24]
    324c:	mov	r5, r3
    3250:	mov	r6, r2
    3254:	mov	r4, r0
    3258:	add	r8, r4, r1
    325c:	mov	r7, r4
    3260:	and	r2, r6, #15
    3264:	cmp	r2, #3
    3268:	bcs	32f0 <lex+0xc8>
    326c:	cmp	r2, #0
    3270:	beq	35d0 <lex+0x3a8>
    3274:	cmp	r2, #2
    3278:	bne	4908 <lex+0x16e0>
    327c:	add	ip, r4, #3
    3280:	cmp	ip, r8
    3284:	bcs	329c <lex+0x74>
    3288:	ldrb	r1, [r4]
    328c:	cmp	r1, #239	; 0xef
    3290:	moveq	ip, #1
    3294:	movne	ip, #0
    3298:	b	32a0 <lex+0x78>
    329c:	mov	ip, #0
    32a0:	cmp	ip, #0
    32a4:	beq	32bc <lex+0x94>
    32a8:	ldrb	r2, [r4, #1]
    32ac:	cmp	r2, #187	; 0xbb
    32b0:	moveq	r2, #1
    32b4:	movne	r2, #0
    32b8:	b	32c0 <lex+0x98>
    32bc:	mov	r2, #0
    32c0:	cmp	r2, #0
    32c4:	beq	32dc <lex+0xb4>
    32c8:	ldrb	ip, [r4, #2]
    32cc:	cmp	ip, #191	; 0xbf
    32d0:	moveq	r2, #1
    32d4:	movne	r2, #0
    32d8:	b	32e0 <lex+0xb8>
    32dc:	mov	r2, #0
    32e0:	cmp	r2, #0
    32e4:	beq	35d0 <lex+0x3a8>
    32e8:	add	r4, r4, #3
    32ec:	b	35d0 <lex+0x3a8>
    32f0:	cmp	r2, #3
    32f4:	beq	330c <lex+0xe4>
    32f8:	cmp	r2, #7
    32fc:	beq	3b70 <lex+0x948>
    3300:	cmp	r2, #8
    3304:	beq	39b8 <lex+0x790>
    3308:	b	4908 <lex+0x16e0>
    330c:	sub	r4, r4, #1
    3310:	add	r4, r4, #1
    3314:	cmp	r4, r8
    3318:	beq	3330 <lex+0x108>
    331c:	ldrb	r1, [r4]
    3320:	cmp	r1, #92	; 0x5c
    3324:	movne	r2, #1
    3328:	moveq	r2, #0
    332c:	b	3334 <lex+0x10c>
    3330:	mov	r2, #0
    3334:	cmp	r2, #0
    3338:	beq	3350 <lex+0x128>
    333c:	ldrb	r1, [r4]
    3340:	cmp	r1, #34	; 0x22
    3344:	movne	ip, #1
    3348:	moveq	ip, #0
    334c:	b	3354 <lex+0x12c>
    3350:	mov	ip, #0
    3354:	cmp	ip, #0
    3358:	beq	3390 <lex+0x168>
    335c:	ldrb	r3, [r4]
    3360:	cmp	r3, #32
    3364:	blt	337c <lex+0x154>
    3368:	ldrb	ip, [r4]
    336c:	cmp	ip, #127	; 0x7f
    3370:	moveq	r3, #1
    3374:	movne	r3, #0
    3378:	b	3380 <lex+0x158>
    337c:	mov	r3, #1
    3380:	cmp	r3, #0
    3384:	moveq	r1, #1
    3388:	movne	r1, #0
    338c:	b	3394 <lex+0x16c>
    3390:	mov	r1, #0
    3394:	cmp	r1, #0
    3398:	bne	3310 <lex+0xe8>
    339c:	cmp	r7, r4
    33a0:	beq	33bc <lex+0x194>
    33a4:	mov	r1, #20
    33a8:	mov	r3, r4
    33ac:	mov	r2, r7
    33b0:	mov	r0, r5
    33b4:	bl	3058 <push_token>
    33b8:	mov	r7, r4
    33bc:	ldrb	r1, [r4]
    33c0:	cmp	r1, #34	; 0x22
    33c4:	bne	33e4 <lex+0x1bc>
    33c8:	add	r4, r4, #1
    33cc:	mov	r1, #22
    33d0:	mov	r3, r4
    33d4:	mov	r2, r7
    33d8:	mov	r0, r5
    33dc:	bl	3058 <push_token>
    33e0:	b	35d0 <lex+0x3a8>
    33e4:	cmp	r4, r8
    33e8:	beq	3400 <lex+0x1d8>
    33ec:	ldrb	r3, [r4]
    33f0:	cmp	r3, #0
    33f4:	moveq	r2, #1
    33f8:	movne	r2, #0
    33fc:	b	3404 <lex+0x1dc>
    3400:	mov	r2, #1
    3404:	cmp	r2, #0
    3408:	beq	3424 <lex+0x1fc>
    340c:	mov	r1, #23
    3410:	mov	r3, r4
    3414:	mov	r2, r4
    3418:	mov	r0, r5
    341c:	bl	3058 <push_token>
    3420:	b	35d0 <lex+0x3a8>
    3424:	ldrb	r1, [r4]
    3428:	cmp	r1, #92	; 0x5c
    342c:	bne	3590 <lex+0x368>
    3430:	add	r4, r4, #1
    3434:	mov	r1, #21
    3438:	mov	r3, r4
    343c:	mov	r2, r7
    3440:	mov	r0, r5
    3444:	bl	3058 <push_token>
    3448:	mov	r7, r4
    344c:	cmp	r4, r8
    3450:	beq	3468 <lex+0x240>
    3454:	ldrb	r1, [r4]
    3458:	cmp	r1, #0
    345c:	moveq	ip, #1
    3460:	movne	ip, #0
    3464:	b	346c <lex+0x244>
    3468:	mov	ip, #1
    346c:	cmp	ip, #0
    3470:	beq	348c <lex+0x264>
    3474:	mov	r1, #23
    3478:	mov	r3, r4
    347c:	mov	r2, r4
    3480:	mov	r0, r5
    3484:	bl	3058 <push_token>
    3488:	b	35d0 <lex+0x3a8>
    348c:	ldrb	r2, [r4]
    3490:	cmp	r2, #92	; 0x5c
    3494:	beq	34ac <lex+0x284>
    3498:	ldrb	r0, [r4]
    349c:	cmp	r0, #34	; 0x22
    34a0:	moveq	r0, #1
    34a4:	movne	r0, #0
    34a8:	b	34b0 <lex+0x288>
    34ac:	mov	r0, #1
    34b0:	cmp	r0, #0
    34b4:	beq	34c0 <lex+0x298>
    34b8:	add	r4, r4, #1
    34bc:	b	330c <lex+0xe4>
    34c0:	ldrb	ip, [r4]
    34c4:	cmp	ip, #10
    34c8:	bne	3528 <lex+0x300>
    34cc:	add	r4, r4, #1
    34d0:	cmp	r4, r8
    34d4:	beq	34ec <lex+0x2c4>
    34d8:	ldrb	r2, [r4]
    34dc:	cmp	r2, #13
    34e0:	moveq	r2, #1
    34e4:	movne	r2, #0
    34e8:	b	34f0 <lex+0x2c8>
    34ec:	mov	r2, #0
    34f0:	cmp	r2, #0
    34f4:	beq	34fc <lex+0x2d4>
    34f8:	add	r4, r4, #1
    34fc:	ldr	r0, [r5, #64]	; 0x40
    3500:	add	r3, r0, #1
    3504:	str	r3, [r5, #64]	; 0x40
    3508:	str	r4, [r5, #60]	; 0x3c
    350c:	mov	r1, #18
    3510:	mov	r3, r4
    3514:	mov	r2, r7
    3518:	mov	r0, r5
    351c:	bl	3058 <push_token>
    3520:	mov	r7, r4
    3524:	b	330c <lex+0xe4>
    3528:	ldrb	r1, [r4]
    352c:	cmp	r1, #13
    3530:	bne	3590 <lex+0x368>
    3534:	add	r4, r4, #1
    3538:	cmp	r4, r8
    353c:	beq	3554 <lex+0x32c>
    3540:	ldrb	r1, [r4]
    3544:	cmp	r1, #10
    3548:	moveq	r1, #1
    354c:	movne	r1, #0
    3550:	b	3558 <lex+0x330>
    3554:	mov	r1, #0
    3558:	cmp	r1, #0
    355c:	beq	3564 <lex+0x33c>
    3560:	add	r4, r4, #1
    3564:	ldr	r0, [r5, #64]	; 0x40
    3568:	add	r1, r0, #1
    356c:	str	r1, [r5, #64]	; 0x40
    3570:	str	r4, [r5, #60]	; 0x3c
    3574:	mov	r1, #18
    3578:	mov	r3, r4
    357c:	mov	r2, r7
    3580:	mov	r0, r5
    3584:	bl	3058 <push_token>
    3588:	mov	r7, r4
    358c:	b	330c <lex+0xe4>
    3590:	ldrb	r3, [r4]
    3594:	cmp	r3, #10
    3598:	beq	35b0 <lex+0x388>
    359c:	ldrb	r1, [r4]
    35a0:	cmp	r1, #13
    35a4:	moveq	r3, #1
    35a8:	movne	r3, #0
    35ac:	b	35b4 <lex+0x38c>
    35b0:	mov	r3, #1
    35b4:	cmp	r3, #0
    35b8:	beq	4994 <lex+0x176c>
    35bc:	mov	r1, #23
    35c0:	mov	r3, r4
    35c4:	mov	r2, r4
    35c8:	mov	r0, r5
    35cc:	bl	3058 <push_token>
    35d0:	mov	r6, #0
    35d4:	cmp	r4, r8
    35d8:	beq	4908 <lex+0x16e0>
    35dc:	mov	r7, r4
    35e0:	ldrb	r1, [r4]
    35e4:	cmp	r1, #127	; 0x7f
    35e8:	bcs	4868 <lex+0x1640>
    35ec:	add	pc, pc, r1, lsl #2
    35f0:	nop	{0}
    35f4:	b	37f0 <lex+0x5c8>
    35f8:	b	4868 <lex+0x1640>
    35fc:	b	4868 <lex+0x1640>
    3600:	b	4868 <lex+0x1640>
    3604:	b	4868 <lex+0x1640>
    3608:	b	4868 <lex+0x1640>
    360c:	b	4868 <lex+0x1640>
    3610:	b	4868 <lex+0x1640>
    3614:	b	4868 <lex+0x1640>
    3618:	b	380c <lex+0x5e4>
    361c:	b	385c <lex+0x634>
    3620:	b	4868 <lex+0x1640>
    3624:	b	4868 <lex+0x1640>
    3628:	b	38a0 <lex+0x678>
    362c:	b	4868 <lex+0x1640>
    3630:	b	4868 <lex+0x1640>
    3634:	b	4868 <lex+0x1640>
    3638:	b	4868 <lex+0x1640>
    363c:	b	4868 <lex+0x1640>
    3640:	b	4868 <lex+0x1640>
    3644:	b	4868 <lex+0x1640>
    3648:	b	4868 <lex+0x1640>
    364c:	b	4868 <lex+0x1640>
    3650:	b	4868 <lex+0x1640>
    3654:	b	4868 <lex+0x1640>
    3658:	b	4868 <lex+0x1640>
    365c:	b	4868 <lex+0x1640>
    3660:	b	4868 <lex+0x1640>
    3664:	b	4868 <lex+0x1640>
    3668:	b	4868 <lex+0x1640>
    366c:	b	4868 <lex+0x1640>
    3670:	b	4868 <lex+0x1640>
    3674:	b	380c <lex+0x5e4>
    3678:	b	3dd0 <lex+0xba8>
    367c:	b	38e4 <lex+0x6bc>
    3680:	b	4868 <lex+0x1640>
    3684:	b	4868 <lex+0x1640>
    3688:	b	3dd0 <lex+0xba8>
    368c:	b	3ea4 <lex+0xc7c>
    3690:	b	4868 <lex+0x1640>
    3694:	b	3db4 <lex+0xb8c>
    3698:	b	3db4 <lex+0xb8c>
    369c:	b	407c <lex+0xe54>
    36a0:	b	43c4 <lex+0x119c>
    36a4:	b	3db4 <lex+0xb8c>
    36a8:	b	4330 <lex+0x1108>
    36ac:	b	4434 <lex+0x120c>
    36b0:	b	3904 <lex+0x6dc>
    36b4:	b	450c <lex+0x12e4>
    36b8:	b	45e8 <lex+0x13c0>
    36bc:	b	45e8 <lex+0x13c0>
    36c0:	b	45e8 <lex+0x13c0>
    36c4:	b	45e8 <lex+0x13c0>
    36c8:	b	45e8 <lex+0x13c0>
    36cc:	b	45e8 <lex+0x13c0>
    36d0:	b	45e8 <lex+0x13c0>
    36d4:	b	45e8 <lex+0x13c0>
    36d8:	b	45e8 <lex+0x13c0>
    36dc:	b	3fc4 <lex+0xd9c>
    36e0:	b	3db4 <lex+0xb8c>
    36e4:	b	40e4 <lex+0xebc>
    36e8:	b	3f10 <lex+0xce8>
    36ec:	b	421c <lex+0xff4>
    36f0:	b	3db4 <lex+0xb8c>
    36f4:	b	4868 <lex+0x1640>
    36f8:	b	47ac <lex+0x1584>
    36fc:	b	47ac <lex+0x1584>
    3700:	b	47ac <lex+0x1584>
    3704:	b	47ac <lex+0x1584>
    3708:	b	47ac <lex+0x1584>
    370c:	b	47ac <lex+0x1584>
    3710:	b	47ac <lex+0x1584>
    3714:	b	47ac <lex+0x1584>
    3718:	b	47ac <lex+0x1584>
    371c:	b	47ac <lex+0x1584>
    3720:	b	47ac <lex+0x1584>
    3724:	b	47ac <lex+0x1584>
    3728:	b	47ac <lex+0x1584>
    372c:	b	47ac <lex+0x1584>
    3730:	b	47ac <lex+0x1584>
    3734:	b	47ac <lex+0x1584>
    3738:	b	47ac <lex+0x1584>
    373c:	b	47ac <lex+0x1584>
    3740:	b	47ac <lex+0x1584>
    3744:	b	47ac <lex+0x1584>
    3748:	b	47ac <lex+0x1584>
    374c:	b	47ac <lex+0x1584>
    3750:	b	47ac <lex+0x1584>
    3754:	b	47ac <lex+0x1584>
    3758:	b	47ac <lex+0x1584>
    375c:	b	47ac <lex+0x1584>
    3760:	b	3db4 <lex+0xb8c>
    3764:	b	3db4 <lex+0xb8c>
    3768:	b	3db4 <lex+0xb8c>
    376c:	b	3dd0 <lex+0xba8>
    3770:	b	47ac <lex+0x1584>
    3774:	b	4868 <lex+0x1640>
    3778:	b	47ac <lex+0x1584>
    377c:	b	47ac <lex+0x1584>
    3780:	b	47ac <lex+0x1584>
    3784:	b	47ac <lex+0x1584>
    3788:	b	47ac <lex+0x1584>
    378c:	b	47ac <lex+0x1584>
    3790:	b	47ac <lex+0x1584>
    3794:	b	47ac <lex+0x1584>
    3798:	b	47ac <lex+0x1584>
    379c:	b	47ac <lex+0x1584>
    37a0:	b	47ac <lex+0x1584>
    37a4:	b	47ac <lex+0x1584>
    37a8:	b	47ac <lex+0x1584>
    37ac:	b	47ac <lex+0x1584>
    37b0:	b	47ac <lex+0x1584>
    37b4:	b	47ac <lex+0x1584>
    37b8:	b	47ac <lex+0x1584>
    37bc:	b	47ac <lex+0x1584>
    37c0:	b	47ac <lex+0x1584>
    37c4:	b	47ac <lex+0x1584>
    37c8:	b	47ac <lex+0x1584>
    37cc:	b	47ac <lex+0x1584>
    37d0:	b	47ac <lex+0x1584>
    37d4:	b	47ac <lex+0x1584>
    37d8:	b	47ac <lex+0x1584>
    37dc:	b	47ac <lex+0x1584>
    37e0:	b	3db4 <lex+0xb8c>
    37e4:	b	3e34 <lex+0xc0c>
    37e8:	b	3db4 <lex+0xb8c>
    37ec:	b	3dd0 <lex+0xba8>
    37f0:	mov	r1, #0
    37f4:	mov	r3, r4
    37f8:	mov	r2, r7
    37fc:	mov	r0, r5
    3800:	bl	3058 <push_token>
    3804:	mov	r0, r6
    3808:	b	4974 <lex+0x174c>
    380c:	add	r4, r4, #1
    3810:	cmp	r4, r8
    3814:	beq	384c <lex+0x624>
    3818:	ldrb	r2, [r4]
    381c:	cmp	r2, #32
    3820:	beq	3844 <lex+0x61c>
    3824:	ldrb	r3, [r4]
    3828:	cmp	r3, #9
    382c:	moveq	ip, #1
    3830:	movne	ip, #0
    3834:	cmp	ip, #0
    3838:	movne	r0, #1
    383c:	moveq	r0, #0
    3840:	b	3850 <lex+0x628>
    3844:	mov	r0, #1
    3848:	b	3850 <lex+0x628>
    384c:	mov	r0, #0
    3850:	cmp	r0, #0
    3854:	bne	380c <lex+0x5e4>
    3858:	b	35d4 <lex+0x3ac>
    385c:	add	r4, r4, #1
    3860:	cmp	r4, r8
    3864:	beq	387c <lex+0x654>
    3868:	ldrb	r3, [r4]
    386c:	cmp	r3, #13
    3870:	moveq	r3, #1
    3874:	movne	r3, #0
    3878:	b	3880 <lex+0x658>
    387c:	mov	r3, #0
    3880:	cmp	r3, #0
    3884:	beq	388c <lex+0x664>
    3888:	add	r4, r4, #1
    388c:	ldr	ip, [r5, #64]	; 0x40
    3890:	add	ip, ip, #1
    3894:	str	ip, [r5, #64]	; 0x40
    3898:	str	r4, [r5, #60]	; 0x3c
    389c:	b	35d4 <lex+0x3ac>
    38a0:	add	r4, r4, #1
    38a4:	cmp	r4, r8
    38a8:	beq	38c0 <lex+0x698>
    38ac:	ldrb	r0, [r4]
    38b0:	cmp	r0, #10
    38b4:	moveq	ip, #1
    38b8:	movne	ip, #0
    38bc:	b	38c4 <lex+0x69c>
    38c0:	mov	ip, #0
    38c4:	cmp	ip, #0
    38c8:	beq	38d0 <lex+0x6a8>
    38cc:	add	r4, r4, #1
    38d0:	ldr	r2, [r5, #64]	; 0x40
    38d4:	add	r0, r2, #1
    38d8:	str	r0, [r5, #64]	; 0x40
    38dc:	str	r4, [r5, #60]	; 0x3c
    38e0:	b	35d4 <lex+0x3ac>
    38e4:	add	r4, r4, #1
    38e8:	mov	r1, #19
    38ec:	mov	r3, r4
    38f0:	mov	r2, r7
    38f4:	mov	r0, r5
    38f8:	bl	3058 <push_token>
    38fc:	mov	r7, r4
    3900:	b	330c <lex+0xe4>
    3904:	add	r4, r4, #1
    3908:	cmp	r4, r8
    390c:	beq	3d9c <lex+0xb74>
    3910:	ldrb	r3, [r4]
    3914:	cmp	r3, #42	; 0x2a
    3918:	beq	3b00 <lex+0x8d8>
    391c:	cmp	r3, #47	; 0x2f
    3920:	beq	3948 <lex+0x720>
    3924:	cmp	r3, #61	; 0x3d
    3928:	bne	3d9c <lex+0xb74>
    392c:	add	r4, r4, #1
    3930:	movw	r1, #15663	; 0x3d2f
    3934:	mov	r3, r4
    3938:	mov	r2, r7
    393c:	mov	r0, r5
    3940:	bl	3058 <push_token>
    3944:	b	35d4 <lex+0x3ac>
    3948:	add	r1, r4, #1
    394c:	cmp	r1, r8
    3950:	beq	3988 <lex+0x760>
    3954:	ldrb	r2, [r1]
    3958:	cmp	r2, #47	; 0x2f
    395c:	beq	3980 <lex+0x758>
    3960:	ldrb	ip, [r1]
    3964:	cmp	ip, #33	; 0x21
    3968:	moveq	r3, #1
    396c:	movne	r3, #0
    3970:	cmp	r3, #0
    3974:	movne	r0, #1
    3978:	moveq	r0, #0
    397c:	b	398c <lex+0x764>
    3980:	mov	r0, #1
    3984:	b	398c <lex+0x764>
    3988:	mov	r0, #0
    398c:	add	r4, r1, r0
    3990:	sub	r0, r4, r7
    3994:	cmp	r0, #3
    3998:	moveq	ip, #1
    399c:	movne	ip, #0
    39a0:	str	ip, [r5, #32]
    39a4:	mov	r2, r4
    39a8:	mov	r1, r4
    39ac:	mov	r0, r5
    39b0:	bl	3198 <push_comment>
    39b4:	mov	r7, r4
    39b8:	mov	r6, #8
    39bc:	sub	r4, r4, #1
    39c0:	add	r4, r4, #1
    39c4:	cmp	r4, r8
    39c8:	beq	3a00 <lex+0x7d8>
    39cc:	ldrb	ip, [r4]
    39d0:	cmp	ip, #32
    39d4:	blt	39ec <lex+0x7c4>
    39d8:	ldrb	r0, [r4]
    39dc:	cmp	r0, #127	; 0x7f
    39e0:	moveq	r0, #1
    39e4:	movne	r0, #0
    39e8:	b	39f0 <lex+0x7c8>
    39ec:	mov	r0, #1
    39f0:	cmp	r0, #0
    39f4:	moveq	r3, #1
    39f8:	movne	r3, #0
    39fc:	b	3a04 <lex+0x7dc>
    3a00:	mov	r3, #0
    3a04:	cmp	r3, #0
    3a08:	bne	39c0 <lex+0x798>
    3a0c:	cmp	r7, r4
    3a10:	beq	3a28 <lex+0x800>
    3a14:	mov	r2, r4
    3a18:	mov	r1, r7
    3a1c:	mov	r0, r5
    3a20:	bl	3198 <push_comment>
    3a24:	mov	r7, r4
    3a28:	cmp	r4, r8
    3a2c:	beq	3a44 <lex+0x81c>
    3a30:	ldrb	ip, [r4]
    3a34:	cmp	ip, #0
    3a38:	moveq	ip, #1
    3a3c:	movne	ip, #0
    3a40:	b	3a48 <lex+0x820>
    3a44:	mov	ip, #1
    3a48:	cmp	ip, #0
    3a4c:	beq	3a68 <lex+0x840>
    3a50:	mov	r1, #27
    3a54:	mov	r3, r4
    3a58:	mov	r2, r4
    3a5c:	mov	r0, r5
    3a60:	bl	3058 <push_token>
    3a64:	b	4908 <lex+0x16e0>
    3a68:	ldrb	r0, [r4]
    3a6c:	cmp	r0, #10
    3a70:	beq	3a88 <lex+0x860>
    3a74:	ldrb	r0, [r4]
    3a78:	cmp	r0, #13
    3a7c:	moveq	r3, #1
    3a80:	movne	r3, #0
    3a84:	b	3a8c <lex+0x864>
    3a88:	mov	r3, #1
    3a8c:	cmp	r3, #0
    3a90:	beq	3aa0 <lex+0x878>
    3a94:	mov	r1, #0
    3a98:	str	r1, [r5, #32]
    3a9c:	b	35d0 <lex+0x3a8>
    3aa0:	add	r4, r4, #1
    3aa4:	ldrb	r1, [r7]
    3aa8:	cmp	r1, #32
    3aac:	beq	3ac4 <lex+0x89c>
    3ab0:	ldrb	ip, [r7]
    3ab4:	cmp	ip, #9
    3ab8:	moveq	r2, #1
    3abc:	movne	r2, #0
    3ac0:	b	3ac8 <lex+0x8a0>
    3ac4:	mov	r2, #1
    3ac8:	cmp	r2, #0
    3acc:	bne	3ae8 <lex+0x8c0>
    3ad0:	mov	r1, #7
    3ad4:	add	r3, r7, #1
    3ad8:	mov	r2, r7
    3adc:	mov	r0, r5
    3ae0:	bl	3058 <push_token>
    3ae4:	b	3af8 <lex+0x8d0>
    3ae8:	add	r2, r7, #1
    3aec:	mov	r1, r7
    3af0:	mov	r0, r5
    3af4:	bl	3198 <push_comment>
    3af8:	mov	r7, r4
    3afc:	b	39bc <lex+0x794>
    3b00:	add	r2, r4, #1
    3b04:	cmp	r2, r8
    3b08:	beq	3b40 <lex+0x918>
    3b0c:	ldrb	r1, [r2]
    3b10:	cmp	r1, #42	; 0x2a
    3b14:	beq	3b38 <lex+0x910>
    3b18:	ldrb	r1, [r2]
    3b1c:	cmp	r1, #33	; 0x21
    3b20:	moveq	r1, #1
    3b24:	movne	r1, #0
    3b28:	cmp	r1, #0
    3b2c:	movne	r1, #1
    3b30:	moveq	r1, #0
    3b34:	b	3b44 <lex+0x91c>
    3b38:	mov	r1, #1
    3b3c:	b	3b44 <lex+0x91c>
    3b40:	mov	r1, #0
    3b44:	add	r4, r2, r1
    3b48:	sub	r1, r4, r7
    3b4c:	cmp	r1, #3
    3b50:	moveq	r2, #1
    3b54:	movne	r2, #0
    3b58:	str	r2, [r5, #32]
    3b5c:	mov	r2, r4
    3b60:	mov	r1, r4
    3b64:	mov	r0, r5
    3b68:	bl	3198 <push_comment>
    3b6c:	mov	r7, r4
    3b70:	mov	r6, #7
    3b74:	sub	r4, r4, #1
    3b78:	add	r4, r4, #1
    3b7c:	cmp	r4, r8
    3b80:	beq	3bb8 <lex+0x990>
    3b84:	ldrb	ip, [r4]
    3b88:	cmp	ip, #32
    3b8c:	blt	3ba4 <lex+0x97c>
    3b90:	ldrb	r2, [r4]
    3b94:	cmp	r2, #127	; 0x7f
    3b98:	moveq	r2, #1
    3b9c:	movne	r2, #0
    3ba0:	b	3ba8 <lex+0x980>
    3ba4:	mov	r2, #1
    3ba8:	cmp	r2, #0
    3bac:	moveq	r2, #1
    3bb0:	movne	r2, #0
    3bb4:	b	3bbc <lex+0x994>
    3bb8:	mov	r2, #0
    3bbc:	cmp	r2, #0
    3bc0:	beq	3bf8 <lex+0x9d0>
    3bc4:	ldrb	r3, [r4]
    3bc8:	cmp	r3, #47	; 0x2f
    3bcc:	bne	3be8 <lex+0x9c0>
    3bd0:	sub	lr, r4, #4096	; 0x1000
    3bd4:	ldrb	r2, [lr, #4095]	; 0xfff
    3bd8:	cmp	r2, #42	; 0x2a
    3bdc:	moveq	r3, #1
    3be0:	movne	r3, #0
    3be4:	b	3bec <lex+0x9c4>
    3be8:	mov	r3, #0
    3bec:	cmp	r3, #0
    3bf0:	beq	3b78 <lex+0x950>
    3bf4:	sub	r4, r4, #1
    3bf8:	cmp	r7, r4
    3bfc:	beq	3c14 <lex+0x9ec>
    3c00:	mov	r2, r4
    3c04:	mov	r1, r7
    3c08:	mov	r0, r5
    3c0c:	bl	3198 <push_comment>
    3c10:	mov	r7, r4
    3c14:	cmp	r4, r8
    3c18:	beq	3c30 <lex+0xa08>
    3c1c:	ldrb	r2, [r4]
    3c20:	cmp	r2, #0
    3c24:	moveq	r0, #1
    3c28:	movne	r0, #0
    3c2c:	b	3c34 <lex+0xa0c>
    3c30:	mov	r0, #1
    3c34:	cmp	r0, #0
    3c38:	beq	3c54 <lex+0xa2c>
    3c3c:	mov	r1, #27
    3c40:	mov	r3, r4
    3c44:	mov	r2, r4
    3c48:	mov	r0, r5
    3c4c:	bl	3058 <push_token>
    3c50:	b	4908 <lex+0x16e0>
    3c54:	ldrb	r0, [r4]
    3c58:	cmp	r0, #10
    3c5c:	bne	3ca8 <lex+0xa80>
    3c60:	add	r4, r4, #1
    3c64:	cmp	r4, r8
    3c68:	beq	3c80 <lex+0xa58>
    3c6c:	ldrb	r0, [r4]
    3c70:	cmp	r0, #13
    3c74:	moveq	r2, #1
    3c78:	movne	r2, #0
    3c7c:	b	3c84 <lex+0xa5c>
    3c80:	mov	r2, #0
    3c84:	cmp	r2, #0
    3c88:	beq	3c90 <lex+0xa68>
    3c8c:	add	r4, r4, #1
    3c90:	ldr	r3, [r5, #64]	; 0x40
    3c94:	add	r2, r3, #1
    3c98:	str	r2, [r5, #64]	; 0x40
    3c9c:	str	r4, [r5, #60]	; 0x3c
    3ca0:	mov	r7, r4
    3ca4:	b	3b74 <lex+0x94c>
    3ca8:	ldrb	ip, [r4]
    3cac:	cmp	ip, #13
    3cb0:	bne	3cfc <lex+0xad4>
    3cb4:	add	r4, r4, #1
    3cb8:	cmp	r4, r8
    3cbc:	beq	3cd4 <lex+0xaac>
    3cc0:	ldrb	ip, [r4]
    3cc4:	cmp	ip, #10
    3cc8:	moveq	ip, #1
    3ccc:	movne	ip, #0
    3cd0:	b	3cd8 <lex+0xab0>
    3cd4:	mov	ip, #0
    3cd8:	cmp	ip, #0
    3cdc:	beq	3ce4 <lex+0xabc>
    3ce0:	add	r4, r4, #1
    3ce4:	ldr	ip, [r5, #64]	; 0x40
    3ce8:	add	r3, ip, #1
    3cec:	str	r3, [r5, #64]	; 0x40
    3cf0:	str	r4, [r5, #60]	; 0x3c
    3cf4:	mov	r7, r4
    3cf8:	b	3b74 <lex+0x94c>
    3cfc:	ldrb	ip, [r4]
    3d00:	cmp	ip, #32
    3d04:	blt	3d1c <lex+0xaf4>
    3d08:	ldrb	r2, [r4]
    3d0c:	cmp	r2, #127	; 0x7f
    3d10:	moveq	r3, #1
    3d14:	movne	r3, #0
    3d18:	b	3d20 <lex+0xaf8>
    3d1c:	mov	r3, #1
    3d20:	cmp	r3, #0
    3d24:	beq	3d88 <lex+0xb60>
    3d28:	add	r4, r4, #1
    3d2c:	ldrb	r0, [r7]
    3d30:	cmp	r0, #32
    3d34:	beq	3d4c <lex+0xb24>
    3d38:	ldrb	ip, [r7]
    3d3c:	cmp	ip, #9
    3d40:	moveq	r2, #1
    3d44:	movne	r2, #0
    3d48:	b	3d50 <lex+0xb28>
    3d4c:	mov	r2, #1
    3d50:	cmp	r2, #0
    3d54:	bne	3d70 <lex+0xb48>
    3d58:	mov	r1, #7
    3d5c:	add	r3, r7, #1
    3d60:	mov	r2, r7
    3d64:	mov	r0, r5
    3d68:	bl	3058 <push_token>
    3d6c:	b	3d80 <lex+0xb58>
    3d70:	add	r2, r7, #1
    3d74:	mov	r1, r7
    3d78:	mov	r0, r5
    3d7c:	bl	3198 <push_comment>
    3d80:	mov	r7, r4
    3d84:	b	3b74 <lex+0x94c>
    3d88:	add	r4, r4, #2
    3d8c:	mov	r3, #0
    3d90:	str	r3, [r5, #32]
    3d94:	mov	r7, r4
    3d98:	b	35d0 <lex+0x3a8>
    3d9c:	mov	r1, #47	; 0x2f
    3da0:	mov	r3, r4
    3da4:	mov	r2, r7
    3da8:	mov	r0, r5
    3dac:	bl	3058 <push_token>
    3db0:	b	35d4 <lex+0x3ac>
    3db4:	add	r4, r4, #1
    3db8:	ldrb	r1, [r7]
    3dbc:	mov	r3, r4
    3dc0:	mov	r2, r7
    3dc4:	mov	r0, r5
    3dc8:	bl	3058 <push_token>
    3dcc:	b	35d4 <lex+0x3ac>
    3dd0:	add	r4, r4, #1
    3dd4:	cmp	r4, r8
    3dd8:	beq	3df0 <lex+0xbc8>
    3ddc:	ldrb	r0, [r4]
    3de0:	cmp	r0, #61	; 0x3d
    3de4:	moveq	r2, #1
    3de8:	movne	r2, #0
    3dec:	b	3df4 <lex+0xbcc>
    3df0:	mov	r2, #0
    3df4:	cmp	r2, #0
    3df8:	beq	3e1c <lex+0xbf4>
    3dfc:	add	r4, r4, #1
    3e00:	ldrb	r3, [r7]
    3e04:	orr	r1, r3, #15616	; 0x3d00
    3e08:	mov	r3, r4
    3e0c:	mov	r2, r7
    3e10:	mov	r0, r5
    3e14:	bl	3058 <push_token>
    3e18:	b	35d4 <lex+0x3ac>
    3e1c:	ldrb	r1, [r7]
    3e20:	mov	r3, r4
    3e24:	mov	r2, r7
    3e28:	mov	r0, r5
    3e2c:	bl	3058 <push_token>
    3e30:	b	35d4 <lex+0x3ac>
    3e34:	add	r4, r4, #1
    3e38:	cmp	r4, r8
    3e3c:	beq	3e8c <lex+0xc64>
    3e40:	ldrb	r0, [r4]
    3e44:	cmp	r0, #61	; 0x3d
    3e48:	beq	3e70 <lex+0xc48>
    3e4c:	cmp	r0, #124	; 0x7c
    3e50:	bne	3e8c <lex+0xc64>
    3e54:	add	r4, r4, #1
    3e58:	movw	r1, #31868	; 0x7c7c
    3e5c:	mov	r3, r4
    3e60:	mov	r2, r7
    3e64:	mov	r0, r5
    3e68:	bl	3058 <push_token>
    3e6c:	b	3e8c <lex+0xc64>
    3e70:	add	r4, r4, #1
    3e74:	movw	r1, #15740	; 0x3d7c
    3e78:	mov	r3, r4
    3e7c:	mov	r2, r7
    3e80:	mov	r0, r5
    3e84:	bl	3058 <push_token>
    3e88:	b	35d4 <lex+0x3ac>
    3e8c:	mov	r1, #124	; 0x7c
    3e90:	mov	r3, r4
    3e94:	mov	r2, r7
    3e98:	mov	r0, r5
    3e9c:	bl	3058 <push_token>
    3ea0:	b	35d4 <lex+0x3ac>
    3ea4:	add	r4, r4, #1
    3ea8:	cmp	r4, r8
    3eac:	beq	3ef8 <lex+0xcd0>
    3eb0:	ldrb	r3, [r4]
    3eb4:	cmp	r3, #38	; 0x26
    3eb8:	beq	3ee0 <lex+0xcb8>
    3ebc:	cmp	r3, #61	; 0x3d
    3ec0:	bne	3ef8 <lex+0xcd0>
    3ec4:	add	r4, r4, #1
    3ec8:	movw	r1, #15654	; 0x3d26
    3ecc:	mov	r3, r4
    3ed0:	mov	r2, r7
    3ed4:	mov	r0, r5
    3ed8:	bl	3058 <push_token>
    3edc:	b	35d4 <lex+0x3ac>
    3ee0:	add	r4, r4, #1
    3ee4:	movw	r1, #9766	; 0x2626
    3ee8:	mov	r3, r4
    3eec:	mov	r2, r7
    3ef0:	mov	r0, r5
    3ef4:	bl	3058 <push_token>
    3ef8:	mov	r1, #38	; 0x26
    3efc:	mov	r3, r4
    3f00:	mov	r2, r7
    3f04:	mov	r0, r5
    3f08:	bl	3058 <push_token>
    3f0c:	b	35d4 <lex+0x3ac>
    3f10:	add	r4, r4, #1
    3f14:	cmp	r4, r8
    3f18:	beq	3fac <lex+0xd84>
    3f1c:	ldrb	r0, [r4]
    3f20:	cmp	r0, #61	; 0x3d
    3f24:	beq	3f4c <lex+0xd24>
    3f28:	cmp	r0, #62	; 0x3e
    3f2c:	bne	3fac <lex+0xd84>
    3f30:	add	r4, r4, #1
    3f34:	movw	r1, #15933	; 0x3e3d
    3f38:	mov	r3, r4
    3f3c:	mov	r2, r7
    3f40:	mov	r0, r5
    3f44:	bl	3058 <push_token>
    3f48:	b	35d4 <lex+0x3ac>
    3f4c:	add	r4, r4, #1
    3f50:	cmp	r4, r8
    3f54:	beq	3f6c <lex+0xd44>
    3f58:	ldrb	r3, [r4]
    3f5c:	cmp	r3, #61	; 0x3d
    3f60:	moveq	r1, #1
    3f64:	movne	r1, #0
    3f68:	b	3f70 <lex+0xd48>
    3f6c:	mov	r1, #0
    3f70:	cmp	r1, #0
    3f74:	beq	3f98 <lex+0xd70>
    3f78:	add	r4, r4, #1
    3f7c:	movw	r1, #15677	; 0x3d3d
    3f80:	movt	r1, #61	; 0x3d
    3f84:	mov	r3, r4
    3f88:	mov	r2, r7
    3f8c:	mov	r0, r5
    3f90:	bl	3058 <push_token>
    3f94:	b	35d4 <lex+0x3ac>
    3f98:	movw	r1, #15677	; 0x3d3d
    3f9c:	mov	r3, r4
    3fa0:	mov	r2, r7
    3fa4:	mov	r0, r5
    3fa8:	bl	3058 <push_token>
    3fac:	mov	r1, #61	; 0x3d
    3fb0:	mov	r3, r4
    3fb4:	mov	r2, r7
    3fb8:	mov	r0, r5
    3fbc:	bl	3058 <push_token>
    3fc0:	b	35d4 <lex+0x3ac>
    3fc4:	add	r4, r4, #1
    3fc8:	cmp	r4, r8
    3fcc:	beq	4064 <lex+0xe3c>
    3fd0:	ldrb	r1, [r4]
    3fd4:	cmp	r1, #58	; 0x3a
    3fd8:	beq	4000 <lex+0xdd8>
    3fdc:	cmp	r1, #61	; 0x3d
    3fe0:	bne	4064 <lex+0xe3c>
    3fe4:	add	r4, r4, #1
    3fe8:	movw	r1, #15674	; 0x3d3a
    3fec:	mov	r3, r4
    3ff0:	mov	r2, r7
    3ff4:	mov	r0, r5
    3ff8:	bl	3058 <push_token>
    3ffc:	b	35d4 <lex+0x3ac>
    4000:	add	r4, r4, #1
    4004:	cmp	r4, r8
    4008:	beq	4020 <lex+0xdf8>
    400c:	ldrb	r1, [r4]
    4010:	cmp	r1, #61	; 0x3d
    4014:	moveq	ip, #1
    4018:	movne	ip, #0
    401c:	b	4024 <lex+0xdfc>
    4020:	mov	ip, #0
    4024:	cmp	ip, #0
    4028:	beq	404c <lex+0xe24>
    402c:	add	r4, r4, #1
    4030:	movw	r1, #14906	; 0x3a3a
    4034:	movt	r1, #61	; 0x3d
    4038:	mov	r3, r4
    403c:	mov	r2, r7
    4040:	mov	r0, r5
    4044:	bl	3058 <push_token>
    4048:	b	35d4 <lex+0x3ac>
    404c:	movw	r1, #14906	; 0x3a3a
    4050:	mov	r3, r4
    4054:	mov	r2, r7
    4058:	mov	r0, r5
    405c:	bl	3058 <push_token>
    4060:	b	35d4 <lex+0x3ac>
    4064:	mov	r1, #58	; 0x3a
    4068:	mov	r3, r4
    406c:	mov	r2, r7
    4070:	mov	r0, r5
    4074:	bl	3058 <push_token>
    4078:	b	35d4 <lex+0x3ac>
    407c:	add	r4, r4, #1
    4080:	cmp	r4, r8
    4084:	beq	40cc <lex+0xea4>
    4088:	ldrb	r1, [r4]
    408c:	cmp	r1, #42	; 0x2a
    4090:	beq	40b4 <lex+0xe8c>
    4094:	cmp	r1, #61	; 0x3d
    4098:	bne	40cc <lex+0xea4>
    409c:	movw	r1, #15658	; 0x3d2a
    40a0:	mov	r3, r4
    40a4:	mov	r2, r7
    40a8:	mov	r0, r5
    40ac:	bl	3058 <push_token>
    40b0:	b	35d4 <lex+0x3ac>
    40b4:	movw	r1, #10794	; 0x2a2a
    40b8:	mov	r3, r4
    40bc:	mov	r2, r7
    40c0:	mov	r0, r5
    40c4:	bl	3058 <push_token>
    40c8:	b	35d4 <lex+0x3ac>
    40cc:	mov	r1, #42	; 0x2a
    40d0:	mov	r3, r4
    40d4:	mov	r2, r7
    40d8:	mov	r0, r5
    40dc:	bl	3058 <push_token>
    40e0:	b	35d4 <lex+0x3ac>
    40e4:	add	r4, r4, #1
    40e8:	cmp	r4, r8
    40ec:	beq	4204 <lex+0xfdc>
    40f0:	ldrb	r1, [r4]
    40f4:	cmp	r1, #45	; 0x2d
    40f8:	beq	41e8 <lex+0xfc0>
    40fc:	cmp	r1, #60	; 0x3c
    4100:	beq	4128 <lex+0xf00>
    4104:	cmp	r1, #61	; 0x3d
    4108:	bne	4204 <lex+0xfdc>
    410c:	add	r4, r4, #1
    4110:	movw	r1, #15676	; 0x3d3c
    4114:	mov	r3, r4
    4118:	mov	r2, r7
    411c:	mov	r0, r5
    4120:	bl	3058 <push_token>
    4124:	b	35d4 <lex+0x3ac>
    4128:	add	r4, r4, #1
    412c:	cmp	r4, r8
    4130:	beq	41d0 <lex+0xfa8>
    4134:	ldrb	ip, [r4]
    4138:	cmp	ip, #60	; 0x3c
    413c:	beq	4168 <lex+0xf40>
    4140:	cmp	ip, #61	; 0x3d
    4144:	bne	41d0 <lex+0xfa8>
    4148:	add	r4, r4, #1
    414c:	movw	r1, #15420	; 0x3c3c
    4150:	movt	r1, #61	; 0x3d
    4154:	mov	r3, r4
    4158:	mov	r2, r7
    415c:	mov	r0, r5
    4160:	bl	3058 <push_token>
    4164:	b	35d4 <lex+0x3ac>
    4168:	add	r4, r4, #1
    416c:	cmp	r4, r8
    4170:	beq	4188 <lex+0xf60>
    4174:	ldrb	r2, [r4]
    4178:	cmp	r2, #61	; 0x3d
    417c:	moveq	r3, #1
    4180:	movne	r3, #0
    4184:	b	418c <lex+0xf64>
    4188:	mov	r3, #0
    418c:	cmp	r3, #0
    4190:	beq	41b4 <lex+0xf8c>
    4194:	add	r4, r4, #1
    4198:	movw	r1, #15420	; 0x3c3c
    419c:	movt	r1, #15676	; 0x3d3c
    41a0:	mov	r3, r4
    41a4:	mov	r2, r7
    41a8:	mov	r0, r5
    41ac:	bl	3058 <push_token>
    41b0:	b	35d4 <lex+0x3ac>
    41b4:	movw	r1, #15420	; 0x3c3c
    41b8:	movt	r1, #60	; 0x3c
    41bc:	mov	r3, r4
    41c0:	mov	r2, r7
    41c4:	mov	r0, r5
    41c8:	bl	3058 <push_token>
    41cc:	b	35d4 <lex+0x3ac>
    41d0:	movw	r1, #15420	; 0x3c3c
    41d4:	mov	r3, r4
    41d8:	mov	r2, r7
    41dc:	mov	r0, r5
    41e0:	bl	3058 <push_token>
    41e4:	b	35d4 <lex+0x3ac>
    41e8:	add	r4, r4, #1
    41ec:	movw	r1, #11580	; 0x2d3c
    41f0:	mov	r3, r4
    41f4:	mov	r2, r7
    41f8:	mov	r0, r5
    41fc:	bl	3058 <push_token>
    4200:	b	35d4 <lex+0x3ac>
    4204:	mov	r1, #60	; 0x3c
    4208:	mov	r3, r4
    420c:	mov	r2, r7
    4210:	mov	r0, r5
    4214:	bl	3058 <push_token>
    4218:	b	35d4 <lex+0x3ac>
    421c:	add	r4, r4, #1
    4220:	cmp	r4, r8
    4224:	beq	4318 <lex+0x10f0>
    4228:	ldrb	r1, [r4]
    422c:	cmp	r1, #61	; 0x3d
    4230:	beq	42fc <lex+0x10d4>
    4234:	cmp	r1, #62	; 0x3e
    4238:	bne	4318 <lex+0x10f0>
    423c:	add	r4, r4, #1
    4240:	cmp	r4, r8
    4244:	beq	42e4 <lex+0x10bc>
    4248:	ldrb	r3, [r4]
    424c:	cmp	r3, #61	; 0x3d
    4250:	beq	42c4 <lex+0x109c>
    4254:	cmp	r3, #62	; 0x3e
    4258:	bne	42e4 <lex+0x10bc>
    425c:	add	r4, r4, #1
    4260:	cmp	r4, r8
    4264:	beq	427c <lex+0x1054>
    4268:	ldrb	r1, [r4]
    426c:	cmp	r1, #61	; 0x3d
    4270:	moveq	r2, #1
    4274:	movne	r2, #0
    4278:	b	4280 <lex+0x1058>
    427c:	mov	r2, #0
    4280:	cmp	r2, #0
    4284:	beq	42a8 <lex+0x1080>
    4288:	add	r4, r4, #1
    428c:	movw	r1, #15934	; 0x3e3e
    4290:	movt	r1, #15678	; 0x3d3e
    4294:	mov	r3, r4
    4298:	mov	r2, r7
    429c:	mov	r0, r5
    42a0:	bl	3058 <push_token>
    42a4:	b	35d4 <lex+0x3ac>
    42a8:	movw	r1, #15934	; 0x3e3e
    42ac:	movt	r1, #62	; 0x3e
    42b0:	mov	r3, r4
    42b4:	mov	r2, r7
    42b8:	mov	r0, r5
    42bc:	bl	3058 <push_token>
    42c0:	b	35d4 <lex+0x3ac>
    42c4:	add	r4, r4, #1
    42c8:	movw	r1, #15934	; 0x3e3e
    42cc:	movt	r1, #61	; 0x3d
    42d0:	mov	r3, r4
    42d4:	mov	r2, r7
    42d8:	mov	r0, r5
    42dc:	bl	3058 <push_token>
    42e0:	b	35d4 <lex+0x3ac>
    42e4:	movw	r1, #15934	; 0x3e3e
    42e8:	mov	r3, r4
    42ec:	mov	r2, r7
    42f0:	mov	r0, r5
    42f4:	bl	3058 <push_token>
    42f8:	b	35d4 <lex+0x3ac>
    42fc:	add	r4, r4, #1
    4300:	movw	r1, #15678	; 0x3d3e
    4304:	mov	r3, r4
    4308:	mov	r2, r7
    430c:	mov	r0, r5
    4310:	bl	3058 <push_token>
    4314:	b	35d4 <lex+0x3ac>
    4318:	mov	r1, #62	; 0x3e
    431c:	mov	r3, r4
    4320:	mov	r2, r7
    4324:	mov	r0, r5
    4328:	bl	3058 <push_token>
    432c:	b	35d4 <lex+0x3ac>
    4330:	add	r4, r4, #1
    4334:	cmp	r4, r8
    4338:	beq	43ac <lex+0x1184>
    433c:	ldrb	r2, [r4]
    4340:	cmp	r2, #45	; 0x2d
    4344:	beq	4390 <lex+0x1168>
    4348:	cmp	r2, #61	; 0x3d
    434c:	beq	4374 <lex+0x114c>
    4350:	cmp	r2, #62	; 0x3e
    4354:	bne	43ac <lex+0x1184>
    4358:	add	r4, r4, #1
    435c:	movw	r1, #15917	; 0x3e2d
    4360:	mov	r3, r4
    4364:	mov	r2, r7
    4368:	mov	r0, r5
    436c:	bl	3058 <push_token>
    4370:	b	35d4 <lex+0x3ac>
    4374:	add	r4, r4, #1
    4378:	movw	r1, #15661	; 0x3d2d
    437c:	mov	r3, r4
    4380:	mov	r2, r7
    4384:	mov	r0, r5
    4388:	bl	3058 <push_token>
    438c:	b	35d4 <lex+0x3ac>
    4390:	add	r4, r4, #1
    4394:	movw	r1, #11565	; 0x2d2d
    4398:	mov	r3, r4
    439c:	mov	r2, r7
    43a0:	mov	r0, r5
    43a4:	bl	3058 <push_token>
    43a8:	b	35d4 <lex+0x3ac>
    43ac:	mov	r1, #45	; 0x2d
    43b0:	mov	r3, r4
    43b4:	mov	r2, r7
    43b8:	mov	r0, r5
    43bc:	bl	3058 <push_token>
    43c0:	b	35d4 <lex+0x3ac>
    43c4:	add	r4, r4, #1
    43c8:	cmp	r4, r8
    43cc:	beq	441c <lex+0x11f4>
    43d0:	ldrb	r0, [r4]
    43d4:	cmp	r0, #43	; 0x2b
    43d8:	beq	4400 <lex+0x11d8>
    43dc:	cmp	r0, #61	; 0x3d
    43e0:	bne	441c <lex+0x11f4>
    43e4:	add	r4, r4, #1
    43e8:	movw	r1, #15659	; 0x3d2b
    43ec:	mov	r3, r4
    43f0:	mov	r2, r7
    43f4:	mov	r0, r5
    43f8:	bl	3058 <push_token>
    43fc:	b	35d4 <lex+0x3ac>
    4400:	add	r4, r4, #1
    4404:	movw	r1, #11051	; 0x2b2b
    4408:	mov	r3, r4
    440c:	mov	r2, r7
    4410:	mov	r0, r5
    4414:	bl	3058 <push_token>
    4418:	b	35d4 <lex+0x3ac>
    441c:	mov	r1, #43	; 0x2b
    4420:	mov	r3, r4
    4424:	mov	r2, r7
    4428:	mov	r0, r5
    442c:	bl	3058 <push_token>
    4430:	b	35d4 <lex+0x3ac>
    4434:	add	r4, r4, #1
    4438:	cmp	r4, r8
    443c:	beq	44f4 <lex+0x12cc>
    4440:	ldrb	r0, [r4]
    4444:	sub	r3, r0, #46	; 0x2e
    4448:	cmp	r3, #12
    444c:	bcs	44f4 <lex+0x12cc>
    4450:	add	pc, pc, r3, lsl #2
    4454:	nop	{0}
    4458:	b	4490 <lex+0x1268>
    445c:	b	44f4 <lex+0x12cc>
    4460:	b	4488 <lex+0x1260>
    4464:	b	4488 <lex+0x1260>
    4468:	b	4488 <lex+0x1260>
    446c:	b	4488 <lex+0x1260>
    4470:	b	4488 <lex+0x1260>
    4474:	b	4488 <lex+0x1260>
    4478:	b	4488 <lex+0x1260>
    447c:	b	4488 <lex+0x1260>
    4480:	b	4488 <lex+0x1260>
    4484:	b	4488 <lex+0x1260>
    4488:	mov	r0, r7
    448c:	b	4644 <lex+0x141c>
    4490:	add	r4, r4, #1
    4494:	cmp	r4, r8
    4498:	beq	44b0 <lex+0x1288>
    449c:	ldrb	ip, [r4]
    44a0:	cmp	ip, #46	; 0x2e
    44a4:	moveq	r3, #1
    44a8:	movne	r3, #0
    44ac:	b	44b4 <lex+0x128c>
    44b0:	mov	r3, #0
    44b4:	cmp	r3, #0
    44b8:	beq	44dc <lex+0x12b4>
    44bc:	add	r4, r4, #1
    44c0:	movw	r1, #11822	; 0x2e2e
    44c4:	movt	r1, #46	; 0x2e
    44c8:	mov	r3, r4
    44cc:	mov	r2, r7
    44d0:	mov	r0, r5
    44d4:	bl	3058 <push_token>
    44d8:	b	35d4 <lex+0x3ac>
    44dc:	movw	r1, #11822	; 0x2e2e
    44e0:	mov	r3, r4
    44e4:	mov	r2, r7
    44e8:	mov	r0, r5
    44ec:	bl	3058 <push_token>
    44f0:	b	35d4 <lex+0x3ac>
    44f4:	mov	r1, #46	; 0x2e
    44f8:	mov	r3, r4
    44fc:	mov	r2, r7
    4500:	mov	r0, r5
    4504:	bl	3058 <push_token>
    4508:	b	35d4 <lex+0x3ac>
    450c:	add	r4, r4, #1
    4510:	cmp	r4, r8
    4514:	beq	45e4 <lex+0x13bc>
    4518:	ldrb	r0, [r4]
    451c:	cmp	r0, #88	; 0x58
    4520:	beq	452c <lex+0x1304>
    4524:	cmp	r0, #120	; 0x78
    4528:	bne	45e4 <lex+0x13bc>
    452c:	add	r4, r4, #1
    4530:	cmp	r4, r8
    4534:	beq	45c0 <lex+0x1398>
    4538:	ldrb	r3, [r4]
    453c:	cmp	r3, #48	; 0x30
    4540:	blt	4558 <lex+0x1330>
    4544:	ldrb	r1, [r4]
    4548:	cmp	r1, #57	; 0x39
    454c:	movle	r3, #1
    4550:	movgt	r3, #0
    4554:	b	455c <lex+0x1334>
    4558:	mov	r3, #0
    455c:	cmp	r3, #0
    4560:	bne	45b8 <lex+0x1390>
    4564:	ldrb	r1, [r4]
    4568:	orr	r2, r1, #32
    456c:	cmp	r2, #97	; 0x61
    4570:	blt	45a4 <lex+0x137c>
    4574:	ldrb	r3, [r4]
    4578:	orr	r0, r3, #32
    457c:	cmp	r0, #102	; 0x66
    4580:	movle	r2, #1
    4584:	movgt	r2, #0
    4588:	cmp	r2, #0
    458c:	movne	r2, #1
    4590:	moveq	r2, #0
    4594:	cmp	r2, #0
    4598:	movne	r0, #1
    459c:	moveq	r0, #0
    45a0:	b	45c4 <lex+0x139c>
    45a4:	mov	ip, #0
    45a8:	cmp	ip, #0
    45ac:	movne	r0, #1
    45b0:	moveq	r0, #0
    45b4:	b	45c4 <lex+0x139c>
    45b8:	mov	r0, #1
    45bc:	b	45c4 <lex+0x139c>
    45c0:	mov	r0, #0
    45c4:	cmp	r0, #0
    45c8:	bne	452c <lex+0x1304>
    45cc:	mov	r1, #14
    45d0:	mov	r3, r4
    45d4:	mov	r2, r7
    45d8:	mov	r0, r5
    45dc:	bl	3058 <push_token>
    45e0:	b	35d4 <lex+0x3ac>
    45e4:	sub	r4, r4, #1
    45e8:	add	r4, r4, #1
    45ec:	cmp	r4, #0
    45f0:	beq	4628 <lex+0x1400>
    45f4:	ldrb	ip, [r4]
    45f8:	cmp	ip, #48	; 0x30
    45fc:	blt	4620 <lex+0x13f8>
    4600:	ldrb	r1, [r4]
    4604:	cmp	r1, #57	; 0x39
    4608:	movle	r3, #1
    460c:	movgt	r3, #0
    4610:	cmp	r3, #0
    4614:	movne	r0, #1
    4618:	moveq	r0, #0
    461c:	b	462c <lex+0x1404>
    4620:	mov	r0, #0
    4624:	b	462c <lex+0x1404>
    4628:	mov	r0, #0
    462c:	cmp	r0, #0
    4630:	bne	45e8 <lex+0x13c0>
    4634:	mov	r0, r4
    4638:	ldrb	r3, [r4]
    463c:	cmp	r3, #46	; 0x2e
    4640:	bne	4690 <lex+0x1468>
    4644:	add	r4, r4, #1
    4648:	cmp	r4, r8
    464c:	beq	4684 <lex+0x145c>
    4650:	ldrb	r2, [r4]
    4654:	cmp	r2, #48	; 0x30
    4658:	blt	467c <lex+0x1454>
    465c:	ldrb	r3, [r4]
    4660:	cmp	r3, #57	; 0x39
    4664:	movle	r3, #1
    4668:	movgt	r3, #0
    466c:	cmp	r3, #0
    4670:	movne	r1, #1
    4674:	moveq	r1, #0
    4678:	b	4688 <lex+0x1460>
    467c:	mov	r1, #0
    4680:	b	4688 <lex+0x1460>
    4684:	mov	r1, #0
    4688:	cmp	r1, #0
    468c:	bne	4644 <lex+0x141c>
    4690:	cmp	r4, r8
    4694:	beq	46cc <lex+0x14a4>
    4698:	ldrb	r2, [r4]
    469c:	cmp	r2, #101	; 0x65
    46a0:	beq	46c4 <lex+0x149c>
    46a4:	ldrb	r3, [r4]
    46a8:	cmp	r3, #69	; 0x45
    46ac:	moveq	r3, #1
    46b0:	movne	r3, #0
    46b4:	cmp	r3, #0
    46b8:	movne	r2, #1
    46bc:	moveq	r2, #0
    46c0:	b	46d0 <lex+0x14a8>
    46c4:	mov	r2, #1
    46c8:	b	46d0 <lex+0x14a8>
    46cc:	mov	r2, #0
    46d0:	cmp	r2, #0
    46d4:	beq	4774 <lex+0x154c>
    46d8:	add	r4, r4, #1
    46dc:	cmp	r4, r8
    46e0:	beq	46f8 <lex+0x14d0>
    46e4:	ldrb	r2, [r4]
    46e8:	cmp	r2, #43	; 0x2b
    46ec:	movne	r3, #1
    46f0:	moveq	r3, #0
    46f4:	b	46fc <lex+0x14d4>
    46f8:	mov	r3, #0
    46fc:	cmp	r3, #0
    4700:	beq	4718 <lex+0x14f0>
    4704:	ldrb	ip, [r4]
    4708:	cmp	ip, #45	; 0x2d
    470c:	movne	r3, #1
    4710:	moveq	r3, #0
    4714:	b	471c <lex+0x14f4>
    4718:	mov	r3, #0
    471c:	cmp	r3, #0
    4720:	beq	4728 <lex+0x1500>
    4724:	sub	r4, r4, #1
    4728:	add	r4, r4, #1
    472c:	cmp	r4, r8
    4730:	beq	4768 <lex+0x1540>
    4734:	ldrb	ip, [r4]
    4738:	cmp	ip, #48	; 0x30
    473c:	blt	4760 <lex+0x1538>
    4740:	ldrb	r1, [r4]
    4744:	cmp	r1, #57	; 0x39
    4748:	movle	r3, #1
    474c:	movgt	r3, #0
    4750:	cmp	r3, #0
    4754:	movne	r1, #1
    4758:	moveq	r1, #0
    475c:	b	476c <lex+0x1544>
    4760:	mov	r1, #0
    4764:	b	476c <lex+0x1544>
    4768:	mov	r1, #0
    476c:	cmp	r1, #0
    4770:	bne	4728 <lex+0x1500>
    4774:	cmp	r0, r4
    4778:	bne	4794 <lex+0x156c>
    477c:	mov	r1, #10
    4780:	mov	r3, r4
    4784:	mov	r2, r7
    4788:	mov	r0, r5
    478c:	bl	3058 <push_token>
    4790:	b	35d4 <lex+0x3ac>
    4794:	mov	r1, #11
    4798:	mov	r3, r4
    479c:	mov	r2, r7
    47a0:	mov	r0, r5
    47a4:	bl	3058 <push_token>
    47a8:	b	35d4 <lex+0x3ac>
    47ac:	ldrb	r0, [r4]
    47b0:	lsl	r3, r0, #8
    47b4:	add	r4, r4, #1
    47b8:	cmp	r4, r8
    47bc:	beq	47e0 <lex+0x15b8>
    47c0:	ldr	r0, [pc, #492]	; 49b4 <lex+0x178c>
    47c4:	ldrb	r2, [r4]
    47c8:	and	ip, r2, #255	; 0xff
    47cc:	ldrb	r2, [r0, ip]
    47d0:	cmp	r2, #0
    47d4:	movne	r0, #1
    47d8:	moveq	r0, #0
    47dc:	b	47e4 <lex+0x15bc>
    47e0:	mov	r0, #0
    47e4:	cmp	r0, #0
    47e8:	beq	482c <lex+0x1604>
    47ec:	ldrb	r1, [r4]
    47f0:	orr	r3, r3, r1, lsl #16
    47f4:	add	r4, r4, #1
    47f8:	cmp	r4, r8
    47fc:	beq	4820 <lex+0x15f8>
    4800:	ldr	r1, [pc, #428]	; 49b4 <lex+0x178c>
    4804:	ldrb	ip, [r4]
    4808:	and	ip, ip, #255	; 0xff
    480c:	ldrb	ip, [r1, ip]
    4810:	cmp	ip, #0
    4814:	movne	r1, #1
    4818:	moveq	r1, #0
    481c:	b	4824 <lex+0x15fc>
    4820:	mov	r1, #0
    4824:	cmp	r1, #0
    4828:	bne	47f4 <lex+0x15cc>
    482c:	sub	lr, r4, #4096	; 0x1000
    4830:	ldrb	ip, [lr, #4095]	; 0xfff
    4834:	orr	r2, r3, ip, lsl #24
    4838:	sub	ip, r4, r7
    483c:	and	ip, ip, #255	; 0xff
    4840:	add	r3, ip, #48	; 0x30
    4844:	orr	r0, r2, r3
    4848:	mov	r1, r7
    484c:	bl	49b8 <lex_match_kw>
    4850:	mov	r3, r4
    4854:	mov	r2, r7
    4858:	mov	r1, r0
    485c:	mov	r0, r5
    4860:	bl	3058 <push_token>
    4864:	b	35d4 <lex+0x3ac>
    4868:	add	r4, r4, #1
    486c:	ldrb	r0, [r7]
    4870:	cmp	r0, #32
    4874:	blt	488c <lex+0x1664>
    4878:	ldrb	r0, [r7]
    487c:	cmp	r0, #127	; 0x7f
    4880:	moveq	r2, #1
    4884:	movne	r2, #0
    4888:	b	4890 <lex+0x1668>
    488c:	mov	r2, #1
    4890:	cmp	r2, #0
    4894:	beq	48cc <lex+0x16a4>
    4898:	ldrb	r1, [r7]
    489c:	cmp	r1, #32
    48a0:	beq	48b8 <lex+0x1690>
    48a4:	ldrb	r0, [r7]
    48a8:	cmp	r0, #9
    48ac:	moveq	r2, #1
    48b0:	movne	r2, #0
    48b4:	b	48bc <lex+0x1694>
    48b8:	mov	r2, #1
    48bc:	cmp	r2, #0
    48c0:	moveq	r1, #1
    48c4:	movne	r1, #0
    48c8:	b	48d0 <lex+0x16a8>
    48cc:	mov	r1, #0
    48d0:	cmp	r1, #0
    48d4:	beq	48f0 <lex+0x16c8>
    48d8:	mov	r1, #5
    48dc:	add	r3, r7, #1
    48e0:	mov	r2, r7
    48e4:	mov	r0, r5
    48e8:	bl	3058 <push_token>
    48ec:	b	35d4 <lex+0x3ac>
    48f0:	mov	r1, #8
    48f4:	mov	r3, r4
    48f8:	mov	r2, r7
    48fc:	mov	r0, r5
    4900:	bl	3058 <push_token>
    4904:	b	35d4 <lex+0x3ac>
    4908:	cmp	r6, #1
    490c:	bne	4918 <lex+0x16f0>
    4910:	mov	r0, r6
    4914:	b	4974 <lex+0x174c>
    4918:	cmp	r4, r8
    491c:	beq	4934 <lex+0x170c>
    4920:	ldrb	r3, [r4]
    4924:	cmp	r3, #0
    4928:	moveq	r2, #1
    492c:	movne	r2, #0
    4930:	b	4938 <lex+0x1710>
    4934:	mov	r2, #0
    4938:	cmp	r2, #0
    493c:	beq	495c <lex+0x1734>
    4940:	mov	r1, #0
    4944:	mov	r3, r4
    4948:	mov	r2, r7
    494c:	mov	r0, r5
    4950:	bl	3058 <push_token>
    4954:	mov	r0, r6
    4958:	b	4974 <lex+0x174c>
    495c:	mov	r1, #0
    4960:	mov	r3, r4
    4964:	mov	r2, r4
    4968:	mov	r0, r5
    496c:	bl	3058 <push_token>
    4970:	mov	r0, r6
    4974:	ldr	r4, [sp, #8]
    4978:	ldr	r5, [sp, #12]
    497c:	ldr	r6, [sp, #16]
    4980:	ldr	r7, [sp, #20]
    4984:	ldr	r8, [sp, #24]
    4988:	ldr	lr, [sp, #4]
    498c:	add	sp, sp, #32
    4990:	bx	lr
    4994:	add	r4, r4, #1
    4998:	mov	r1, #6
    499c:	add	r3, r7, #1
    49a0:	mov	r2, r7
    49a4:	mov	r0, r5
    49a8:	bl	3058 <push_token>
    49ac:	mov	r7, r4
    49b0:	b	330c <lex+0xe4>
    49b4:	.word	0x00000c7a

000049b8 <lex_match_kw>:
    49b8:	mov	ip, sp
    49bc:	sub	sp, sp, #8
    49c0:	str	ip, [sp]
    49c4:	str	lr, [sp, #4]
    49c8:	movw	lr, #29243	; 0x723b
    49cc:	movt	lr, #25968	; 0x6570
    49d0:	cmp	r0, lr
    49d4:	bcs	4d6c <lex_match_kw+0x3b4>
    49d8:	movw	lr, #30005	; 0x7535
    49dc:	movt	lr, #14441	; 0x3869
    49e0:	cmp	r0, lr
    49e4:	bcs	4b98 <lex_match_kw+0x1e0>
    49e8:	movw	lr, #26167	; 0x6637
    49ec:	movt	lr, #13420	; 0x346c
    49f0:	cmp	r0, lr
    49f4:	bcs	4ac8 <lex_match_kw+0x110>
    49f8:	movw	lr, #26933	; 0x6935
    49fc:	movt	lr, #12910	; 0x326e
    4a00:	cmp	r0, lr
    4a04:	bcs	4a68 <lex_match_kw+0xb0>
    4a08:	movw	lr, #30006	; 0x7536
    4a0c:	movt	lr, #12905	; 0x3269
    4a10:	cmp	r0, lr
    4a14:	beq	4a48 <lex_match_kw+0x90>
    4a18:	movw	lr, #26167	; 0x6637
    4a1c:	movt	lr, #12908	; 0x326c
    4a20:	cmp	r0, lr
    4a24:	bne	5124 <lex_match_kw+0x76c>
    4a28:	ldr	r0, [pc, #1852]	; 516c <lex_match_kw+0x7b4>
    4a2c:	mov	r2, #7
    4a30:	bl	0 <memcmp>
    4a34:	cmp	r0, #0
    4a38:	bne	5124 <lex_match_kw+0x76c>
    4a3c:	movw	r0, #64540	; 0xfc1c
    4a40:	movt	r0, #65535	; 0xffff
    4a44:	b	5128 <lex_match_kw+0x770>
    4a48:	ldr	r0, [pc, #1828]	; 5174 <lex_match_kw+0x7bc>
    4a4c:	mov	r2, #6
    4a50:	bl	0 <memcmp>
    4a54:	cmp	r0, #0
    4a58:	bne	5124 <lex_match_kw+0x76c>
    4a5c:	movw	r0, #64557	; 0xfc2d
    4a60:	movt	r0, #65535	; 0xffff
    4a64:	b	5128 <lex_match_kw+0x770>
    4a68:	movw	lr, #26933	; 0x6935
    4a6c:	movt	lr, #12910	; 0x326e
    4a70:	cmp	r0, lr
    4a74:	beq	4aa8 <lex_match_kw+0xf0>
    4a78:	movw	lr, #30006	; 0x7536
    4a7c:	movt	lr, #13417	; 0x3469
    4a80:	cmp	r0, lr
    4a84:	bne	5124 <lex_match_kw+0x76c>
    4a88:	ldr	r0, [pc, #1820]	; 51ac <lex_match_kw+0x7f4>
    4a8c:	mov	r2, #6
    4a90:	bl	0 <memcmp>
    4a94:	cmp	r0, #0
    4a98:	bne	5124 <lex_match_kw+0x76c>
    4a9c:	movw	r0, #64558	; 0xfc2e
    4aa0:	movt	r0, #65535	; 0xffff
    4aa4:	b	5128 <lex_match_kw+0x770>
    4aa8:	ldr	r0, [pc, #1748]	; 5184 <lex_match_kw+0x7cc>
    4aac:	mov	r2, #5
    4ab0:	bl	0 <memcmp>
    4ab4:	cmp	r0, #0
    4ab8:	bne	5124 <lex_match_kw+0x76c>
    4abc:	movw	r0, #64545	; 0xfc21
    4ac0:	movt	r0, #65535	; 0xffff
    4ac4:	b	5128 <lex_match_kw+0x770>
    4ac8:	movw	lr, #30006	; 0x7536
    4acc:	movt	lr, #13929	; 0x3669
    4ad0:	cmp	r0, lr
    4ad4:	bcs	4b38 <lex_match_kw+0x180>
    4ad8:	movw	lr, #26167	; 0x6637
    4adc:	movt	lr, #13420	; 0x346c
    4ae0:	cmp	r0, lr
    4ae4:	beq	4b18 <lex_match_kw+0x160>
    4ae8:	movw	lr, #26933	; 0x6935
    4aec:	movt	lr, #13422	; 0x346e
    4af0:	cmp	r0, lr
    4af4:	bne	5124 <lex_match_kw+0x76c>
    4af8:	ldr	r0, [pc, #1712]	; 51b0 <lex_match_kw+0x7f8>
    4afc:	mov	r2, #5
    4b00:	bl	0 <memcmp>
    4b04:	cmp	r0, #0
    4b08:	bne	5124 <lex_match_kw+0x76c>
    4b0c:	movw	r0, #64546	; 0xfc22
    4b10:	movt	r0, #65535	; 0xffff
    4b14:	b	5128 <lex_match_kw+0x770>
    4b18:	ldr	r0, [pc, #1556]	; 5134 <lex_match_kw+0x77c>
    4b1c:	mov	r2, #7
    4b20:	bl	0 <memcmp>
    4b24:	cmp	r0, #0
    4b28:	bne	5124 <lex_match_kw+0x76c>
    4b2c:	movw	r0, #64541	; 0xfc1d
    4b30:	movt	r0, #65535	; 0xffff
    4b34:	b	5128 <lex_match_kw+0x770>
    4b38:	movw	lr, #30006	; 0x7536
    4b3c:	movt	lr, #13929	; 0x3669
    4b40:	cmp	r0, lr
    4b44:	beq	4b78 <lex_match_kw+0x1c0>
    4b48:	movw	lr, #26933	; 0x6935
    4b4c:	movt	lr, #13934	; 0x366e
    4b50:	cmp	r0, lr
    4b54:	bne	5124 <lex_match_kw+0x76c>
    4b58:	ldr	r0, [pc, #1628]	; 51bc <lex_match_kw+0x804>
    4b5c:	mov	r2, #5
    4b60:	bl	0 <memcmp>
    4b64:	cmp	r0, #0
    4b68:	bne	5124 <lex_match_kw+0x76c>
    4b6c:	movw	r0, #64544	; 0xfc20
    4b70:	movt	r0, #65535	; 0xffff
    4b74:	b	5128 <lex_match_kw+0x770>
    4b78:	ldr	r0, [pc, #1484]	; 514c <lex_match_kw+0x794>
    4b7c:	mov	r2, #6
    4b80:	bl	0 <memcmp>
    4b84:	cmp	r0, #0
    4b88:	bne	5124 <lex_match_kw+0x76c>
    4b8c:	movw	r0, #64556	; 0xfc2c
    4b90:	movt	r0, #65535	; 0xffff
    4b94:	b	5128 <lex_match_kw+0x770>
    4b98:	movw	lr, #29749	; 0x7435
    4b9c:	movt	lr, #25953	; 0x6561
    4ba0:	cmp	r0, lr
    4ba4:	bcs	4c6c <lex_match_kw+0x2b4>
    4ba8:	movw	lr, #26165	; 0x6635
    4bac:	movt	lr, #25953	; 0x6561
    4bb0:	cmp	r0, lr
    4bb4:	bcs	4c10 <lex_match_kw+0x258>
    4bb8:	movw	lr, #30005	; 0x7535
    4bbc:	movt	lr, #14441	; 0x3869
    4bc0:	cmp	r0, lr
    4bc4:	beq	4bf4 <lex_match_kw+0x23c>
    4bc8:	movw	lr, #26932	; 0x6934
    4bcc:	movt	lr, #14446	; 0x386e
    4bd0:	cmp	r0, lr
    4bd4:	bne	5124 <lex_match_kw+0x76c>
    4bd8:	ldr	r0, [pc, #1496]	; 51b8 <lex_match_kw+0x800>
    4bdc:	mov	r2, #4
    4be0:	bl	0 <memcmp>
    4be4:	cmp	r0, #0
    4be8:	bne	5124 <lex_match_kw+0x76c>
    4bec:	mvn	r0, #992	; 0x3e0
    4bf0:	b	5128 <lex_match_kw+0x770>
    4bf4:	ldr	r0, [pc, #1444]	; 51a0 <lex_match_kw+0x7e8>
    4bf8:	mov	r2, #5
    4bfc:	bl	0 <memcmp>
    4c00:	cmp	r0, #0
    4c04:	bne	5124 <lex_match_kw+0x76c>
    4c08:	mvn	r0, #980	; 0x3d4
    4c0c:	b	5128 <lex_match_kw+0x770>
    4c10:	movw	lr, #26165	; 0x6635
    4c14:	movt	lr, #25953	; 0x6561
    4c18:	cmp	r0, lr
    4c1c:	beq	4c4c <lex_match_kw+0x294>
    4c20:	movw	lr, #28217	; 0x6e39
    4c24:	movt	lr, #25953	; 0x6561
    4c28:	cmp	r0, lr
    4c2c:	bne	5124 <lex_match_kw+0x76c>
    4c30:	ldr	r0, [pc, #1388]	; 51a4 <lex_match_kw+0x7ec>
    4c34:	mov	r2, #9
    4c38:	bl	0 <memcmp>
    4c3c:	cmp	r0, #0
    4c40:	bne	5124 <lex_match_kw+0x76c>
    4c44:	mvn	r0, #968	; 0x3c8
    4c48:	b	5128 <lex_match_kw+0x770>
    4c4c:	ldr	r0, [pc, #1320]	; 517c <lex_match_kw+0x7c4>
    4c50:	mov	r2, #5
    4c54:	bl	0 <memcmp>
    4c58:	cmp	r0, #0
    4c5c:	bne	5124 <lex_match_kw+0x76c>
    4c60:	movw	r0, #64550	; 0xfc26
    4c64:	movt	r0, #65535	; 0xffff
    4c68:	b	5128 <lex_match_kw+0x770>
    4c6c:	movw	lr, #26935	; 0x6937
    4c70:	movt	lr, #25966	; 0x656e
    4c74:	cmp	r0, lr
    4c78:	bcs	4cdc <lex_match_kw+0x324>
    4c7c:	movw	lr, #29749	; 0x7435
    4c80:	movt	lr, #25953	; 0x6561
    4c84:	cmp	r0, lr
    4c88:	beq	4cbc <lex_match_kw+0x304>
    4c8c:	movw	lr, #30005	; 0x7535
    4c90:	movt	lr, #25954	; 0x6562
    4c94:	cmp	r0, lr
    4c98:	bne	5124 <lex_match_kw+0x76c>
    4c9c:	ldr	r0, [pc, #1264]	; 5194 <lex_match_kw+0x7dc>
    4ca0:	mov	r2, #5
    4ca4:	bl	0 <memcmp>
    4ca8:	cmp	r0, #0
    4cac:	bne	5124 <lex_match_kw+0x76c>
    4cb0:	movw	r0, #64554	; 0xfc2a
    4cb4:	movt	r0, #65535	; 0xffff
    4cb8:	b	5128 <lex_match_kw+0x770>
    4cbc:	ldr	r0, [pc, #1152]	; 5144 <lex_match_kw+0x78c>
    4cc0:	mov	r2, #5
    4cc4:	bl	0 <memcmp>
    4cc8:	cmp	r0, #0
    4ccc:	bne	5124 <lex_match_kw+0x76c>
    4cd0:	movw	r0, #64553	; 0xfc29
    4cd4:	movt	r0, #65535	; 0xffff
    4cd8:	b	5128 <lex_match_kw+0x770>
    4cdc:	movw	lr, #26935	; 0x6937
    4ce0:	movt	lr, #25966	; 0x656e
    4ce4:	cmp	r0, lr
    4ce8:	beq	4d4c <lex_match_kw+0x394>
    4cec:	movw	lr, #25654	; 0x6436
    4cf0:	movt	lr, #25967	; 0x656f
    4cf4:	cmp	r0, lr
    4cf8:	beq	4d2c <lex_match_kw+0x374>
    4cfc:	movw	lr, #29241	; 0x7239
    4d00:	movt	lr, #25967	; 0x656f
    4d04:	cmp	r0, lr
    4d08:	bne	5124 <lex_match_kw+0x76c>
    4d0c:	ldr	r0, [pc, #1064]	; 513c <lex_match_kw+0x784>
    4d10:	mov	r2, #9
    4d14:	bl	0 <memcmp>
    4d18:	cmp	r0, #0
    4d1c:	bne	5124 <lex_match_kw+0x76c>
    4d20:	movw	r0, #64568	; 0xfc38
    4d24:	movt	r0, #65535	; 0xffff
    4d28:	b	5128 <lex_match_kw+0x770>
    4d2c:	ldr	r0, [pc, #1028]	; 5138 <lex_match_kw+0x780>
    4d30:	mov	r2, #6
    4d34:	bl	0 <memcmp>
    4d38:	cmp	r0, #0
    4d3c:	bne	5124 <lex_match_kw+0x76c>
    4d40:	movw	r0, #64561	; 0xfc31
    4d44:	movt	r0, #65535	; 0xffff
    4d48:	b	5128 <lex_match_kw+0x770>
    4d4c:	ldr	r0, [pc, #1120]	; 51b4 <lex_match_kw+0x7fc>
    4d50:	mov	r2, #7
    4d54:	bl	0 <memcmp>
    4d58:	cmp	r0, #0
    4d5c:	bne	5124 <lex_match_kw+0x76c>
    4d60:	movw	r0, #64565	; 0xfc35
    4d64:	movt	r0, #65535	; 0xffff
    4d68:	b	5128 <lex_match_kw+0x770>
    4d6c:	movw	lr, #26174	; 0x663e
    4d70:	movt	lr, #28265	; 0x6e69
    4d74:	cmp	r0, lr
    4d78:	bcs	4f50 <lex_match_kw+0x598>
    4d7c:	movw	lr, #30005	; 0x7535
    4d80:	movt	lr, #26476	; 0x676c
    4d84:	cmp	r0, lr
    4d88:	bcs	4e5c <lex_match_kw+0x4a4>
    4d8c:	movw	lr, #24889	; 0x6139
    4d90:	movt	lr, #25972	; 0x6574
    4d94:	cmp	r0, lr
    4d98:	bcs	4dfc <lex_match_kw+0x444>
    4d9c:	movw	lr, #29243	; 0x723b
    4da0:	movt	lr, #25968	; 0x6570
    4da4:	cmp	r0, lr
    4da8:	beq	4ddc <lex_match_kw+0x424>
    4dac:	movw	lr, #29748	; 0x7434
    4db0:	movt	lr, #25970	; 0x6572
    4db4:	cmp	r0, lr
    4db8:	bne	5124 <lex_match_kw+0x76c>
    4dbc:	ldr	r0, [pc, #980]	; 5198 <lex_match_kw+0x7e0>
    4dc0:	mov	r2, #4
    4dc4:	bl	0 <memcmp>
    4dc8:	cmp	r0, #0
    4dcc:	bne	5124 <lex_match_kw+0x76c>
    4dd0:	movw	r0, #64548	; 0xfc24
    4dd4:	movt	r0, #65535	; 0xffff
    4dd8:	b	5128 <lex_match_kw+0x770>
    4ddc:	ldr	r0, [pc, #916]	; 5178 <lex_match_kw+0x7c0>
    4de0:	mov	r2, #11
    4de4:	bl	0 <memcmp>
    4de8:	cmp	r0, #0
    4dec:	bne	5124 <lex_match_kw+0x76c>
    4df0:	movw	r0, #64569	; 0xfc39
    4df4:	movt	r0, #65535	; 0xffff
    4df8:	b	5128 <lex_match_kw+0x770>
    4dfc:	movw	lr, #24889	; 0x6139
    4e00:	movt	lr, #25972	; 0x6574
    4e04:	cmp	r0, lr
    4e08:	beq	4e3c <lex_match_kw+0x484>
    4e0c:	movw	lr, #25140	; 0x6234
    4e10:	movt	lr, #25977	; 0x6579
    4e14:	cmp	r0, lr
    4e18:	bne	5124 <lex_match_kw+0x76c>
    4e1c:	ldr	r0, [pc, #900]	; 51a8 <lex_match_kw+0x7f0>
    4e20:	mov	r2, #4
    4e24:	bl	0 <memcmp>
    4e28:	cmp	r0, #0
    4e2c:	bne	5124 <lex_match_kw+0x76c>
    4e30:	movw	r0, #64538	; 0xfc1a
    4e34:	movt	r0, #65535	; 0xffff
    4e38:	b	5128 <lex_match_kw+0x770>
    4e3c:	ldr	r0, [pc, #772]	; 5148 <lex_match_kw+0x790>
    4e40:	mov	r2, #9
    4e44:	bl	0 <memcmp>
    4e48:	cmp	r0, #0
    4e4c:	bne	5124 <lex_match_kw+0x76c>
    4e50:	movw	r0, #64566	; 0xfc36
    4e54:	movt	r0, #65535	; 0xffff
    4e58:	b	5128 <lex_match_kw+0x770>
    4e5c:	movw	lr, #29494	; 0x7336
    4e60:	movt	lr, #26484	; 0x6774
    4e64:	cmp	r0, lr
    4e68:	bcs	4ec4 <lex_match_kw+0x50c>
    4e6c:	movw	lr, #30005	; 0x7535
    4e70:	movt	lr, #26476	; 0x676c
    4e74:	cmp	r0, lr
    4e78:	beq	4ea8 <lex_match_kw+0x4f0>
    4e7c:	movw	lr, #27700	; 0x6c34
    4e80:	movt	lr, #26479	; 0x676f
    4e84:	cmp	r0, lr
    4e88:	bne	5124 <lex_match_kw+0x76c>
    4e8c:	ldr	r0, [pc, #704]	; 5154 <lex_match_kw+0x79c>
    4e90:	mov	r2, #4
    4e94:	bl	0 <memcmp>
    4e98:	cmp	r0, #0
    4e9c:	bne	5124 <lex_match_kw+0x76c>
    4ea0:	mvn	r0, #988	; 0x3dc
    4ea4:	b	5128 <lex_match_kw+0x770>
    4ea8:	ldr	r0, [pc, #680]	; 5158 <lex_match_kw+0x7a0>
    4eac:	mov	r2, #5
    4eb0:	bl	0 <memcmp>
    4eb4:	cmp	r0, #0
    4eb8:	bne	5124 <lex_match_kw+0x76c>
    4ebc:	mvn	r0, #976	; 0x3d0
    4ec0:	b	5128 <lex_match_kw+0x770>
    4ec4:	movw	lr, #29494	; 0x7336
    4ec8:	movt	lr, #26484	; 0x6774
    4ecc:	cmp	r0, lr
    4ed0:	beq	4f30 <lex_match_kw+0x578>
    4ed4:	movw	lr, #25140	; 0x6234
    4ed8:	movt	lr, #27759	; 0x6c6f
    4edc:	cmp	r0, lr
    4ee0:	beq	4f10 <lex_match_kw+0x558>
    4ee4:	movw	lr, #25908	; 0x6534
    4ee8:	movt	lr, #28014	; 0x6d6e
    4eec:	cmp	r0, lr
    4ef0:	bne	5124 <lex_match_kw+0x76c>
    4ef4:	ldr	r0, [pc, #628]	; 5170 <lex_match_kw+0x7b8>
    4ef8:	mov	r2, #4
    4efc:	bl	0 <memcmp>
    4f00:	cmp	r0, #0
    4f04:	bne	5124 <lex_match_kw+0x76c>
    4f08:	mvn	r0, #996	; 0x3e4
    4f0c:	b	5128 <lex_match_kw+0x770>
    4f10:	ldr	r0, [pc, #584]	; 5160 <lex_match_kw+0x7a8>
    4f14:	mov	r2, #4
    4f18:	bl	0 <memcmp>
    4f1c:	cmp	r0, #0
    4f20:	bne	5124 <lex_match_kw+0x76c>
    4f24:	movw	r0, #64537	; 0xfc19
    4f28:	movt	r0, #65535	; 0xffff
    4f2c:	b	5128 <lex_match_kw+0x770>
    4f30:	ldr	r0, [pc, #520]	; 5140 <lex_match_kw+0x788>
    4f34:	mov	r2, #6
    4f38:	bl	0 <memcmp>
    4f3c:	cmp	r0, #0
    4f40:	bne	5124 <lex_match_kw+0x76c>
    4f44:	movw	r0, #64562	; 0xfc32
    4f48:	movt	r0, #65535	; 0xffff
    4f4c:	b	5128 <lex_match_kw+0x770>
    4f50:	movw	lr, #30004	; 0x7534
    4f54:	movt	lr, #29801	; 0x7469
    4f58:	cmp	r0, lr
    4f5c:	bcs	502c <lex_match_kw+0x674>
    4f60:	movw	lr, #26175	; 0x663f
    4f64:	movt	lr, #29289	; 0x7269
    4f68:	cmp	r0, lr
    4f6c:	bcs	4fd0 <lex_match_kw+0x618>
    4f70:	movw	lr, #26174	; 0x663e
    4f74:	movt	lr, #28265	; 0x6e69
    4f78:	cmp	r0, lr
    4f7c:	beq	4fb0 <lex_match_kw+0x5f8>
    4f80:	movw	lr, #30005	; 0x7535
    4f84:	movt	lr, #28270	; 0x6e6e
    4f88:	cmp	r0, lr
    4f8c:	bne	5124 <lex_match_kw+0x76c>
    4f90:	ldr	r0, [pc, #496]	; 5188 <lex_match_kw+0x7d0>
    4f94:	mov	r2, #5
    4f98:	bl	0 <memcmp>
    4f9c:	cmp	r0, #0
    4fa0:	bne	5124 <lex_match_kw+0x76c>
    4fa4:	movw	r0, #64560	; 0xfc30
    4fa8:	movt	r0, #65535	; 0xffff
    4fac:	b	5128 <lex_match_kw+0x770>
    4fb0:	ldr	r0, [pc, #472]	; 5190 <lex_match_kw+0x7d8>
    4fb4:	mov	r2, #14
    4fb8:	bl	0 <memcmp>
    4fbc:	cmp	r0, #0
    4fc0:	bne	5124 <lex_match_kw+0x76c>
    4fc4:	movw	r0, #64570	; 0xfc3a
    4fc8:	movt	r0, #65535	; 0xffff
    4fcc:	b	5128 <lex_match_kw+0x770>
    4fd0:	movw	lr, #26175	; 0x663f
    4fd4:	movt	lr, #29289	; 0x7269
    4fd8:	cmp	r0, lr
    4fdc:	beq	5010 <lex_match_kw+0x658>
    4fe0:	movw	lr, #29493	; 0x7335
    4fe4:	movt	lr, #29800	; 0x7468
    4fe8:	cmp	r0, lr
    4fec:	bne	5124 <lex_match_kw+0x76c>
    4ff0:	ldr	r0, [pc, #392]	; 5180 <lex_match_kw+0x7c8>
    4ff4:	mov	r2, #5
    4ff8:	bl	0 <memcmp>
    4ffc:	cmp	r0, #0
    5000:	bne	5124 <lex_match_kw+0x76c>
    5004:	movw	r0, #64552	; 0xfc28
    5008:	movt	r0, #65535	; 0xffff
    500c:	b	5128 <lex_match_kw+0x770>
    5010:	ldr	r0, [pc, #332]	; 5164 <lex_match_kw+0x7ac>
    5014:	mov	r2, #15
    5018:	bl	0 <memcmp>
    501c:	cmp	r0, #0
    5020:	bne	5124 <lex_match_kw+0x76c>
    5024:	mvn	r0, #964	; 0x3c4
    5028:	b	5128 <lex_match_kw+0x770>
    502c:	movw	lr, #26931	; 0x6933
    5030:	movt	lr, #29806	; 0x746e
    5034:	cmp	r0, lr
    5038:	bcs	5098 <lex_match_kw+0x6e0>
    503c:	movw	lr, #30004	; 0x7534
    5040:	movt	lr, #29801	; 0x7469
    5044:	cmp	r0, lr
    5048:	beq	5078 <lex_match_kw+0x6c0>
    504c:	movw	lr, #26165	; 0x6635
    5050:	movt	lr, #29804	; 0x746c
    5054:	cmp	r0, lr
    5058:	bne	5124 <lex_match_kw+0x76c>
    505c:	ldr	r0, [pc, #248]	; 515c <lex_match_kw+0x7a4>
    5060:	mov	r2, #5
    5064:	bl	0 <memcmp>
    5068:	cmp	r0, #0
    506c:	bne	5124 <lex_match_kw+0x76c>
    5070:	mvn	r0, #984	; 0x3d8
    5074:	b	5128 <lex_match_kw+0x770>
    5078:	ldr	r0, [pc, #232]	; 5168 <lex_match_kw+0x7b0>
    507c:	mov	r2, #4
    5080:	bl	0 <memcmp>
    5084:	cmp	r0, #0
    5088:	bne	5124 <lex_match_kw+0x76c>
    508c:	movw	r0, #64549	; 0xfc25
    5090:	movt	r0, #65535	; 0xffff
    5094:	b	5128 <lex_match_kw+0x770>
    5098:	movw	lr, #26931	; 0x6933
    509c:	movt	lr, #29806	; 0x746e
    50a0:	cmp	r0, lr
    50a4:	beq	5104 <lex_match_kw+0x74c>
    50a8:	movw	lr, #30006	; 0x7536
    50ac:	movt	lr, #29811	; 0x7473
    50b0:	cmp	r0, lr
    50b4:	beq	50e4 <lex_match_kw+0x72c>
    50b8:	movw	lr, #29494	; 0x7336
    50bc:	movt	lr, #29812	; 0x7474
    50c0:	cmp	r0, lr
    50c4:	bne	5124 <lex_match_kw+0x76c>
    50c8:	ldr	r0, [pc, #204]	; 519c <lex_match_kw+0x7e4>
    50cc:	mov	r2, #6
    50d0:	bl	0 <memcmp>
    50d4:	cmp	r0, #0
    50d8:	bne	5124 <lex_match_kw+0x76c>
    50dc:	mvn	r0, #972	; 0x3cc
    50e0:	b	5128 <lex_match_kw+0x770>
    50e4:	ldr	r0, [pc, #100]	; 5150 <lex_match_kw+0x798>
    50e8:	mov	r2, #6
    50ec:	bl	0 <memcmp>
    50f0:	cmp	r0, #0
    50f4:	bne	5124 <lex_match_kw+0x76c>
    50f8:	movw	r0, #64564	; 0xfc34
    50fc:	movt	r0, #65535	; 0xffff
    5100:	b	5128 <lex_match_kw+0x770>
    5104:	ldr	r0, [pc, #128]	; 518c <lex_match_kw+0x7d4>
    5108:	mov	r2, #3
    510c:	bl	0 <memcmp>
    5110:	cmp	r0, #0
    5114:	bne	5124 <lex_match_kw+0x76c>
    5118:	movw	r0, #64542	; 0xfc1e
    511c:	movt	r0, #65535	; 0xffff
    5120:	b	5128 <lex_match_kw+0x770>
    5124:	mov	r0, #9
    5128:	ldr	lr, [sp, #4]
    512c:	add	sp, sp, #8
    5130:	bx	lr
    5134:	.word	0x00000647
    5138:	.word	0x00000970
    513c:	.word	0x00000575
    5140:	.word	0x00000723
    5144:	.word	0x00000070
    5148:	.word	0x00000885
    514c:	.word	0x000008b9
    5150:	.word	0x00000b37
    5154:	.word	0x000002e0
    5158:	.word	0x000009a0
    515c:	.word	0x00000730
    5160:	.word	0x00000b3e
    5164:	.word	0x00000659
    5168:	.word	0x00000b68
    516c:	.word	0x0000077e
    5170:	.word	0x00000b79
    5174:	.word	0x0000013a
    5178:	.word	0x0000044c
    517c:	.word	0x00000a7f
    5180:	.word	0x0000006a
    5184:	.word	0x00000669
    5188:	.word	0x0000072a
    518c:	.word	0x000001c7
    5190:	.word	0x0000076f
    5194:	.word	0x00000252
    5198:	.word	0x00000258
    519c:	.word	0x0000020d
    51a0:	.word	0x00000b6d
    51a4:	.word	0x0000064f
    51a8:	.word	0x0000088f
    51ac:	.word	0x00000b7e
    51b0:	.word	0x00000b73
    51b4:	.word	0x0000083b
    51b8:	.word	0x000008c0
    51bc:	.word	0x00000a79

000051c0 <__flatcc_fb_init_parser>:
    51c0:	mov	ip, sp
    51c4:	sub	sp, sp, #32
    51c8:	str	ip, [sp]
    51cc:	str	lr, [sp, #4]
    51d0:	str	r4, [sp, #8]
    51d4:	str	r5, [sp, #12]
    51d8:	str	r6, [sp, #16]
    51dc:	str	r7, [sp, #20]
    51e0:	str	r8, [sp, #24]
    51e4:	str	r9, [sp, #28]
    51e8:	ldr	r5, [ip, #4]
    51ec:	ldr	r9, [ip]
    51f0:	mov	r4, r3
    51f4:	mov	r8, r2
    51f8:	mov	r6, r1
    51fc:	mov	r7, r0
    5200:	mov	r1, #0
    5204:	mov	r2, #560	; 0x230
    5208:	mov	r0, r7
    520c:	bl	0 <memset>
    5210:	cmp	r4, #0
    5214:	bne	5224 <__flatcc_fb_init_parser+0x64>
    5218:	ldr	r3, [pc, #456]	; 53e8 <__flatcc_fb_init_parser+0x228>
    521c:	str	r3, [r7, #8]
    5220:	b	522c <__flatcc_fb_init_parser+0x6c>
    5224:	str	r4, [r7, #8]
    5228:	str	r9, [r7, #12]
    522c:	cmp	r6, #0
    5230:	beq	5248 <__flatcc_fb_init_parser+0x88>
    5234:	add	r0, r7, #128	; 0x80
    5238:	mov	r2, #224	; 0xe0
    523c:	mov	r1, r6
    5240:	bl	0 <memcpy>
    5244:	b	5250 <__flatcc_fb_init_parser+0x90>
    5248:	add	r0, r7, #128	; 0x80
    524c:	bl	0 <flatcc_init_options>
    5250:	cmp	r5, #0
    5254:	bne	525c <__flatcc_fb_init_parser+0x9c>
    5258:	add	r5, r7, #416	; 0x1a0
    525c:	str	r5, [r7, #412]	; 0x19c
    5260:	ldr	r1, [r7, #192]	; 0xc0
    5264:	cmp	r1, #2
    5268:	beq	5290 <__flatcc_fb_init_parser+0xd0>
    526c:	cmp	r1, #4
    5270:	beq	5290 <__flatcc_fb_init_parser+0xd0>
    5274:	cmp	r1, #8
    5278:	beq	5290 <__flatcc_fb_init_parser+0xd0>
    527c:	ldr	r1, [pc, #344]	; 53dc <__flatcc_fb_init_parser+0x21c>
    5280:	mov	r0, r7
    5284:	bl	180 <error>
    5288:	mvn	r0, #0
    528c:	b	53b0 <__flatcc_fb_init_parser+0x1f0>
    5290:	ldr	r0, [r7, #196]	; 0xc4
    5294:	cmp	r0, #2
    5298:	beq	52c0 <__flatcc_fb_init_parser+0x100>
    529c:	cmp	r0, #4
    52a0:	beq	52c0 <__flatcc_fb_init_parser+0x100>
    52a4:	cmp	r0, #8
    52a8:	beq	52c0 <__flatcc_fb_init_parser+0x100>
    52ac:	ldr	r1, [pc, #300]	; 53e0 <__flatcc_fb_init_parser+0x220>
    52b0:	mov	r0, r7
    52b4:	bl	180 <error>
    52b8:	mvn	r0, #0
    52bc:	b	53b0 <__flatcc_fb_init_parser+0x1f0>
    52c0:	cmp	r8, #0
    52c4:	bne	52cc <__flatcc_fb_init_parser+0x10c>
    52c8:	ldr	r8, [pc, #264]	; 53d8 <__flatcc_fb_init_parser+0x218>
    52cc:	cmp	r8, #0
    52d0:	bne	52d8 <__flatcc_fb_init_parser+0x118>
    52d4:	ldr	r8, [pc, #276]	; 53f0 <__flatcc_fb_init_parser+0x230>
    52d8:	mov	r0, r8
    52dc:	bl	0 <strlen>
    52e0:	mov	r9, r0
    52e4:	ldr	r2, [r6, #96]	; 0x60
    52e8:	mov	r1, r9
    52ec:	mov	r0, r8
    52f0:	bl	0 <__flatcc_fb_create_basename>
    52f4:	str	r0, [r7, #512]	; 0x200
    52f8:	bl	0 <checkmem>
    52fc:	ldr	r0, [r7, #512]	; 0x200
    5300:	bl	0 <strlen>
    5304:	mov	r4, r0
    5308:	ldr	r0, [r7, #512]	; 0x200
    530c:	mov	r1, r4
    5310:	bl	0 <__flatcc_fb_copy_path_n>
    5314:	mov	r5, r0
    5318:	bl	0 <checkmem>
    531c:	mov	r1, r4
    5320:	mov	r0, r5
    5324:	bl	1a8 <pstrntoupper>
    5328:	str	r5, [r7, #516]	; 0x204
    532c:	str	r5, [r7, #496]	; 0x1f0
    5330:	str	r4, [r7, #500]	; 0x1f4
    5334:	ldr	r2, [pc, #180]	; 53f0 <__flatcc_fb_init_parser+0x230>
    5338:	mov	r1, r9
    533c:	mov	r0, r8
    5340:	bl	0 <__flatcc_fb_create_basename>
    5344:	str	r0, [r7, #520]	; 0x208
    5348:	bl	0 <checkmem>
    534c:	ldr	r0, [r6, #192]	; 0xc0
    5350:	cmp	r0, #0
    5354:	beq	536c <__flatcc_fb_init_parser+0x1ac>
    5358:	ldr	r0, [r6, #192]	; 0xc0
    535c:	str	r0, [r7, #476]	; 0x1dc
    5360:	ldr	r0, [r6, #192]	; 0xc0
    5364:	bl	0 <strlen>
    5368:	str	r0, [r7, #480]	; 0x1e0
    536c:	mov	r1, #0
    5370:	mov	r0, r7
    5374:	bl	101c <fb_add_scope>
    5378:	str	r0, [r7, #544]	; 0x220
    537c:	ldr	r0, [r7, #412]	; 0x19c
    5380:	mov	r1, #0
    5384:	mov	r2, #0
    5388:	bl	0 <fb_scope_table_find>
    538c:	ldr	r3, [r7, #544]	; 0x220
    5390:	cmp	r3, r0
    5394:	beq	53ac <__flatcc_fb_init_parser+0x1ec>
    5398:	ldr	r0, [pc, #52]	; 53d4 <__flatcc_fb_init_parser+0x214>
    539c:	ldr	r1, [pc, #64]	; 53e4 <__flatcc_fb_init_parser+0x224>
    53a0:	movw	r2, #1331	; 0x533
    53a4:	ldr	r3, [pc, #64]	; 53ec <__flatcc_fb_init_parser+0x22c>
    53a8:	bl	0 <__assert_fail>
    53ac:	mov	r0, #0
    53b0:	ldr	r4, [sp, #8]
    53b4:	ldr	r5, [sp, #12]
    53b8:	ldr	r6, [sp, #16]
    53bc:	ldr	r7, [sp, #20]
    53c0:	ldr	r8, [sp, #24]
    53c4:	ldr	r9, [sp, #28]
    53c8:	ldr	lr, [sp, #4]
    53cc:	add	sp, sp, #32
    53d0:	bx	lr
    53d4:	.word	0x000009e4
    53d8:	.word	0x000008c5
    53dc:	.word	0x00000c3d
    53e0:	.word	0x00000736
    53e4:	.word	0x00000a85
    53e8:	.word	0x00000000
    53ec:	.word	0x00000d7a
    53f0:	.word	0x00000c3c

000053f4 <__flatcc_fb_parse>:
    53f4:	mov	ip, sp
    53f8:	sub	sp, sp, #24
    53fc:	str	ip, [sp]
    5400:	str	lr, [sp, #4]
    5404:	str	r4, [sp, #8]
    5408:	str	r5, [sp, #12]
    540c:	str	r6, [sp, #16]
    5410:	str	r7, [sp, #20]
    5414:	mov	r7, r3
    5418:	mov	r5, r2
    541c:	mov	r6, r1
    5420:	mov	r4, r0
    5424:	str	r6, [r4, #60]	; 0x3c
    5428:	mov	r0, #1
    542c:	str	r0, [r4, #64]	; 0x40
    5430:	add	r0, r4, #68	; 0x44
    5434:	ldr	r2, [pc, #164]	; 54e0 <__flatcc_fb_parse+0xec>
    5438:	ldr	r1, [r2]
    543c:	mov	r2, #9
    5440:	bl	31dc <inject_token>
    5444:	add	r0, r4, #88	; 0x58
    5448:	ldr	r2, [pc, #140]	; 54dc <__flatcc_fb_parse+0xe8>
    544c:	ldr	r1, [r2]
    5450:	movw	r2, #64554	; 0xfc2a
    5454:	movt	r2, #65535	; 0xffff
    5458:	bl	31dc <inject_token>
    545c:	cmp	r7, #0
    5460:	beq	5468 <__flatcc_fb_parse+0x74>
    5464:	str	r6, [r4, #16]
    5468:	mov	r2, #0
    546c:	mov	r3, r4
    5470:	mov	r1, r5
    5474:	mov	r0, r6
    5478:	bl	3228 <lex>
    547c:	ldr	r0, [r4, #40]	; 0x28
    5480:	str	r0, [r4, #24]
    5484:	ldr	r1, [r4, #20]
    5488:	str	r1, [r4, #40]	; 0x28
    548c:	ldr	r0, [r4, #216]	; 0xd8
    5490:	bl	0 <malloc>
    5494:	str	r0, [r4, #112]	; 0x70
    5498:	bl	0 <checkmem>
    549c:	ldr	r3, [r4, #40]	; 0x28
    54a0:	ldr	r3, [r3, #16]
    54a4:	cmn	r3, #964	; 0x3c4
    54a8:	bne	54b4 <__flatcc_fb_parse+0xc0>
    54ac:	mov	r0, r4
    54b0:	bl	118c <next>
    54b4:	mov	r0, r4
    54b8:	bl	2f54 <parse_schema>
    54bc:	ldr	r0, [r4, #108]	; 0x6c
    54c0:	ldr	r4, [sp, #8]
    54c4:	ldr	r5, [sp, #12]
    54c8:	ldr	r6, [sp, #16]
    54cc:	ldr	r7, [sp, #20]
    54d0:	ldr	lr, [sp, #4]
    54d4:	add	sp, sp, #24
    54d8:	bx	lr
    54dc:	.word	0x00000004
    54e0:	.word	0x00000000

000054e4 <__destroy_scope_item>:
    54e4:	mov	ip, sp
    54e8:	sub	sp, sp, #8
    54ec:	str	ip, [sp]
    54f0:	str	lr, [sp, #4]
    54f4:	add	r0, r1, #4
    54f8:	bl	0 <fb_symbol_table_clear>
    54fc:	ldr	lr, [sp, #4]
    5500:	add	sp, sp, #8
    5504:	bx	lr

00005508 <__flatcc_fb_clear_parser>:
    5508:	mov	ip, sp
    550c:	sub	sp, sp, #16
    5510:	str	ip, [sp]
    5514:	str	lr, [sp, #4]
    5518:	str	r4, [sp, #8]
    551c:	str	r5, [sp, #12]
    5520:	mov	r4, r0
    5524:	ldr	r5, [r4, #392]	; 0x188
    5528:	cmp	r5, #0
    552c:	beq	556c <__flatcc_fb_clear_parser+0x64>
    5530:	ldrh	r1, [r5, #8]
    5534:	cmp	r1, #2
    5538:	bcc	5554 <__flatcc_fb_clear_parser+0x4c>
    553c:	cmp	r1, #2
    5540:	beq	5554 <__flatcc_fb_clear_parser+0x4c>
    5544:	cmp	r1, #3
    5548:	beq	5554 <__flatcc_fb_clear_parser+0x4c>
    554c:	cmp	r1, #4
    5550:	bne	5564 <__flatcc_fb_clear_parser+0x5c>
    5554:	add	r0, r5, #56	; 0x38
    5558:	bl	0 <fb_symbol_table_clear>
    555c:	add	r0, r5, #72	; 0x48
    5560:	bl	0 <fb_value_set_clear>
    5564:	ldr	r5, [r5]
    5568:	b	5528 <__flatcc_fb_clear_parser+0x20>
    556c:	add	r0, r4, #448	; 0x1c0
    5570:	bl	0 <fb_schema_table_clear>
    5574:	add	r0, r4, #432	; 0x1b0
    5578:	bl	0 <fb_name_table_clear>
    557c:	add	r0, r4, #524	; 0x20c
    5580:	bl	0 <ptr_set_clear>
    5584:	ldr	r1, [r4, #112]	; 0x70
    5588:	cmp	r1, #0
    558c:	beq	5598 <__flatcc_fb_clear_parser+0x90>
    5590:	ldr	r0, [r4, #112]	; 0x70
    5594:	bl	0 <free>
    5598:	ldr	r0, [r4, #20]
    559c:	cmp	r0, #0
    55a0:	beq	55ac <__flatcc_fb_clear_parser+0xa4>
    55a4:	ldr	r0, [r4, #20]
    55a8:	bl	0 <free>
    55ac:	ldr	r3, [r4, #512]	; 0x200
    55b0:	cmp	r3, #0
    55b4:	beq	55c0 <__flatcc_fb_clear_parser+0xb8>
    55b8:	ldr	r0, [r4, #512]	; 0x200
    55bc:	bl	0 <free>
    55c0:	ldr	r3, [r4, #516]	; 0x204
    55c4:	cmp	r3, #0
    55c8:	beq	55d4 <__flatcc_fb_clear_parser+0xcc>
    55cc:	ldr	r0, [r4, #516]	; 0x204
    55d0:	bl	0 <free>
    55d4:	ldr	r2, [r4, #520]	; 0x208
    55d8:	cmp	r2, #0
    55dc:	beq	55e8 <__flatcc_fb_clear_parser+0xe0>
    55e0:	ldr	r0, [r4, #520]	; 0x208
    55e4:	bl	0 <free>
    55e8:	ldr	ip, [r4, #548]	; 0x224
    55ec:	cmp	ip, #0
    55f0:	beq	55fc <__flatcc_fb_clear_parser+0xf4>
    55f4:	ldr	r0, [r4, #548]	; 0x224
    55f8:	bl	0 <free>
    55fc:	add	r0, r4, #416	; 0x1a0
    5600:	ldr	r1, [pc, #68]	; 564c <__flatcc_fb_clear_parser+0x144>
    5604:	mov	r2, #0
    5608:	bl	0 <fb_scope_table_destroy>
    560c:	mov	r0, r4
    5610:	bl	3018 <clear_elem_buffers>
    5614:	ldr	r0, [r4, #16]
    5618:	cmp	r0, #0
    561c:	beq	5628 <__flatcc_fb_clear_parser+0x120>
    5620:	ldr	r0, [r4, #16]
    5624:	bl	0 <free>
    5628:	mov	r1, #0
    562c:	mov	r2, #560	; 0x230
    5630:	mov	r0, r4
    5634:	bl	0 <memset>
    5638:	ldr	r4, [sp, #8]
    563c:	ldr	r5, [sp, #12]
    5640:	ldr	lr, [sp, #4]
    5644:	add	sp, sp, #16
    5648:	bx	lr
    564c:	.word	0x00000000
