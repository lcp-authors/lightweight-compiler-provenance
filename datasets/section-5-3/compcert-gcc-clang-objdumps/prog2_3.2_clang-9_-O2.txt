
../compcert-repos/prog2/3.2:     file format elf32-littlearm


Disassembly of section .init:

0001075c <.init>:
   1075c:	push	{r3, lr}
   10760:	bl	1080c <_start@@Base+0x3c>
   10764:	pop	{r3, pc}

Disassembly of section .plt:

00010768 <printf@plt-0x14>:
   10768:	push	{lr}		; (str lr, [sp, #-4]!)
   1076c:	ldr	lr, [pc, #4]	; 10778 <printf@plt-0x4>
   10770:	add	lr, pc, lr
   10774:	ldr	pc, [lr, #8]!
   10778:	andeq	r1, r1, r8, lsl #17

0001077c <printf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2184]!	; 0x888

00010788 <puts@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2176]!	; 0x880

00010794 <__libc_start_main@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2168]!	; 0x878

000107a0 <__gmon_start__@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2160]!	; 0x870

000107ac <strlen@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2152]!	; 0x868

000107b8 <putchar@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2144]!	; 0x860

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

000107d0 <_start@@Base>:
   107d0:	mov	fp, #0
   107d4:	mov	lr, #0
   107d8:	pop	{r1}		; (ldr r1, [sp], #4)
   107dc:	mov	r2, sp
   107e0:	push	{r2}		; (str r2, [sp, #-4]!)
   107e4:	push	{r0}		; (str r0, [sp, #-4]!)
   107e8:	ldr	ip, [pc, #16]	; 10800 <_start@@Base+0x30>
   107ec:	push	{ip}		; (str ip, [sp, #-4]!)
   107f0:	ldr	r0, [pc, #12]	; 10804 <_start@@Base+0x34>
   107f4:	ldr	r3, [pc, #12]	; 10808 <_start@@Base+0x38>
   107f8:	bl	10794 <__libc_start_main@plt>
   107fc:	bl	107c4 <abort@plt>
   10800:	andeq	r1, r1, r8, asr #16
   10804:	ldrdeq	r0, [r1], -r8
   10808:	andeq	r1, r1, r8, ror #15
   1080c:	ldr	r3, [pc, #20]	; 10828 <_start@@Base+0x58>
   10810:	ldr	r2, [pc, #20]	; 1082c <_start@@Base+0x5c>
   10814:	add	r3, pc, r3
   10818:	ldr	r2, [r3, r2]
   1081c:	cmp	r2, #0
   10820:	bxeq	lr
   10824:	b	107a0 <__gmon_start__@plt>
   10828:	andeq	r1, r1, r4, ror #15
   1082c:	andeq	r0, r0, r8, lsr #32
   10830:	ldr	r0, [pc, #24]	; 10850 <_start@@Base+0x80>
   10834:	ldr	r3, [pc, #24]	; 10854 <_start@@Base+0x84>
   10838:	cmp	r3, r0
   1083c:	bxeq	lr
   10840:	ldr	r3, [pc, #16]	; 10858 <_start@@Base+0x88>
   10844:	cmp	r3, #0
   10848:	bxeq	lr
   1084c:	bx	r3
   10850:	andeq	r2, r2, r4, lsr r0
   10854:	andeq	r2, r2, r4, lsr r0
   10858:	andeq	r0, r0, r0
   1085c:	ldr	r0, [pc, #36]	; 10888 <_start@@Base+0xb8>
   10860:	ldr	r1, [pc, #36]	; 1088c <_start@@Base+0xbc>
   10864:	sub	r1, r1, r0
   10868:	asr	r1, r1, #2
   1086c:	add	r1, r1, r1, lsr #31
   10870:	asrs	r1, r1, #1
   10874:	bxeq	lr
   10878:	ldr	r3, [pc, #16]	; 10890 <_start@@Base+0xc0>
   1087c:	cmp	r3, #0
   10880:	bxeq	lr
   10884:	bx	r3
   10888:	andeq	r2, r2, r4, lsr r0
   1088c:	andeq	r2, r2, r4, lsr r0
   10890:	andeq	r0, r0, r0
   10894:	push	{r4, lr}
   10898:	ldr	r4, [pc, #24]	; 108b8 <_start@@Base+0xe8>
   1089c:	ldrb	r3, [r4]
   108a0:	cmp	r3, #0
   108a4:	popne	{r4, pc}
   108a8:	bl	10830 <_start@@Base+0x60>
   108ac:	mov	r3, #1
   108b0:	strb	r3, [r4]
   108b4:	pop	{r4, pc}
   108b8:	andeq	r2, r2, r4, lsr r0
   108bc:	b	1085c <_start@@Base+0x8c>

000108c0 <comp_int_asc@@Base>:
   108c0:	ldr	r2, [r0]
   108c4:	ldr	r1, [r1]
   108c8:	mov	r0, #0
   108cc:	cmp	r2, r1
   108d0:	movwgt	r0, #1
   108d4:	cmp	r1, r2
   108d8:	mvngt	r0, #0
   108dc:	bx	lr

000108e0 <get_elem@@Base>:
   108e0:	mla	r0, r2, r1, r0
   108e4:	bx	lr

000108e8 <swap@@Base>:
   108e8:	push	{r4, r5, r6, sl, fp, lr}
   108ec:	add	fp, sp, #16
   108f0:	cmp	r2, #1
   108f4:	blt	109fc <swap@@Base+0x114>
   108f8:	mov	lr, #0
   108fc:	cmp	r2, #16
   10900:	bcc	10994 <swap@@Base+0xac>
   10904:	add	r3, r1, r2
   10908:	cmp	r3, r0
   1090c:	addhi	r3, r0, r2
   10910:	cmphi	r3, r1
   10914:	bhi	10994 <swap@@Base+0xac>
   10918:	bic	lr, r2, #15
   1091c:	mov	r4, #1
   10920:	subs	r3, lr, #16
   10924:	add	r3, r4, r3, lsr #4
   10928:	and	ip, r3, #1
   1092c:	beq	10a00 <swap@@Base+0x118>
   10930:	sub	r4, r3, ip
   10934:	mov	r3, #0
   10938:	add	r5, r0, r3
   1093c:	add	r6, r1, r3
   10940:	subs	r4, r4, #2
   10944:	add	r3, r3, #32
   10948:	vld1.8	{d16-d17}, [r6]
   1094c:	vld1.8	{d18-d19}, [r5]
   10950:	vst1.8	{d16-d17}, [r5]!
   10954:	vst1.8	{d18-d19}, [r6]!
   10958:	vld1.8	{d16-d17}, [r6]
   1095c:	vld1.8	{d18-d19}, [r5]
   10960:	vst1.8	{d16-d17}, [r5]
   10964:	vst1.8	{d18-d19}, [r6]
   10968:	bne	10938 <swap@@Base+0x50>
   1096c:	cmp	ip, #0
   10970:	beq	1098c <swap@@Base+0xa4>
   10974:	add	r6, r0, r3
   10978:	add	r3, r1, r3
   1097c:	vld1.8	{d16-d17}, [r3]
   10980:	vld1.8	{d18-d19}, [r6]
   10984:	vst1.8	{d16-d17}, [r6]
   10988:	vst1.8	{d18-d19}, [r3]
   1098c:	cmp	lr, r2
   10990:	beq	109fc <swap@@Base+0x114>
   10994:	mvn	r3, lr
   10998:	tst	r2, #1
   1099c:	beq	109b4 <swap@@Base+0xcc>
   109a0:	ldrb	r6, [r0, lr]
   109a4:	ldrb	r5, [r1, lr]
   109a8:	strb	r5, [r0, lr]
   109ac:	strb	r6, [r1, lr]
   109b0:	orr	lr, lr, #1
   109b4:	cmn	r3, r2
   109b8:	popeq	{r4, r5, r6, sl, fp, pc}
   109bc:	add	r3, lr, #1
   109c0:	sub	r2, r2, lr
   109c4:	add	r0, r0, r3
   109c8:	add	r1, r1, r3
   109cc:	ldrb	r3, [r0, #-1]
   109d0:	ldrb	r6, [r1, #-1]
   109d4:	subs	r2, r2, #2
   109d8:	strb	r6, [r0, #-1]
   109dc:	strb	r3, [r1, #-1]
   109e0:	ldrb	r3, [r0]
   109e4:	ldrb	r6, [r1]
   109e8:	strb	r6, [r0]
   109ec:	strb	r3, [r1]
   109f0:	add	r0, r0, #2
   109f4:	add	r1, r1, #2
   109f8:	bne	109cc <swap@@Base+0xe4>
   109fc:	pop	{r4, r5, r6, sl, fp, pc}
   10a00:	mov	r3, #0
   10a04:	cmp	ip, #0
   10a08:	bne	10974 <swap@@Base+0x8c>
   10a0c:	b	1098c <swap@@Base+0xa4>

00010a10 <sort@@Base>:
   10a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a14:	add	fp, sp, #28
   10a18:	sub	sp, sp, #52	; 0x34
   10a1c:	cmp	r1, #1
   10a20:	str	r0, [sp, #32]
   10a24:	blt	10c28 <sort@@Base+0x218>
   10a28:	mov	r5, r2
   10a2c:	sub	r0, r2, #16
   10a30:	mov	r2, #1
   10a34:	ldr	r9, [sp, #32]
   10a38:	mov	r4, r3
   10a3c:	mov	sl, #0
   10a40:	str	r1, [sp, #28]
   10a44:	add	r2, r2, r0, lsr #4
   10a48:	lsr	r0, r0, #4
   10a4c:	str	r0, [sp, #8]
   10a50:	and	r3, r2, #1
   10a54:	sub	r2, r2, r3
   10a58:	str	r3, [sp, #16]
   10a5c:	str	r2, [sp, #4]
   10a60:	add	r2, r9, r5
   10a64:	str	r2, [fp, #-32]	; 0xffffffe0
   10a68:	sub	r2, r1, #1
   10a6c:	str	r2, [fp, #-36]	; 0xffffffdc
   10a70:	rsb	r2, r5, #0
   10a74:	str	r2, [sp, #24]
   10a78:	and	r2, r5, #1
   10a7c:	str	r2, [sp, #20]
   10a80:	bic	r2, r5, #15
   10a84:	str	r2, [sp, #12]
   10a88:	b	10ab8 <sort@@Base+0xa8>
   10a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a90:	ldr	r1, [sp, #28]
   10a94:	ldr	sl, [sp, #36]	; 0x24
   10a98:	add	r9, r9, r5
   10a9c:	add	r0, r0, r5
   10aa0:	cmp	sl, r1
   10aa4:	str	r0, [fp, #-32]	; 0xffffffe0
   10aa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10aac:	sub	r0, r0, #1
   10ab0:	str	r0, [fp, #-36]	; 0xffffffdc
   10ab4:	beq	10c28 <sort@@Base+0x218>
   10ab8:	ldr	r0, [sp, #32]
   10abc:	mla	r7, sl, r5, r0
   10ac0:	add	r0, sl, #1
   10ac4:	cmp	r0, r1
   10ac8:	str	r0, [sp, #36]	; 0x24
   10acc:	str	r7, [sp, #40]	; 0x28
   10ad0:	bge	10b00 <sort@@Base+0xf0>
   10ad4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   10ad8:	ldr	r8, [fp, #-36]	; 0xffffffdc
   10adc:	ldr	r7, [sp, #40]	; 0x28
   10ae0:	mov	r0, r6
   10ae4:	mov	r1, r7
   10ae8:	blx	r4
   10aec:	cmp	r0, #0
   10af0:	movmi	r7, r6
   10af4:	add	r6, r6, r5
   10af8:	subs	r8, r8, #1
   10afc:	bne	10ae0 <sort@@Base+0xd0>
   10b00:	cmp	r5, #1
   10b04:	blt	10a8c <sort@@Base+0x7c>
   10b08:	mov	r0, #0
   10b0c:	cmp	r5, #16
   10b10:	bcc	10bb8 <sort@@Base+0x1a8>
   10b14:	ldr	r2, [sp, #32]
   10b18:	mla	r1, sl, r5, r5
   10b1c:	add	r1, r2, r1
   10b20:	cmp	r7, r1
   10b24:	ldrcc	r2, [sp, #40]	; 0x28
   10b28:	addcc	r1, r7, r5
   10b2c:	cmpcc	r2, r1
   10b30:	bcc	10bb8 <sort@@Base+0x1a8>
   10b34:	ldr	r0, [sp, #8]
   10b38:	cmp	r0, #0
   10b3c:	beq	10b80 <sort@@Base+0x170>
   10b40:	ldr	r1, [sp, #4]
   10b44:	mov	r0, #0
   10b48:	add	r2, r7, r0
   10b4c:	add	r3, r9, r0
   10b50:	subs	r1, r1, #2
   10b54:	add	r0, r0, #32
   10b58:	vld1.8	{d16-d17}, [r3]
   10b5c:	vld1.8	{d18-d19}, [r2]
   10b60:	vst1.8	{d16-d17}, [r2]!
   10b64:	vst1.8	{d18-d19}, [r3]!
   10b68:	vld1.8	{d16-d17}, [r3]
   10b6c:	vld1.8	{d18-d19}, [r2]
   10b70:	vst1.8	{d16-d17}, [r2]
   10b74:	vst1.8	{d18-d19}, [r3]
   10b78:	bne	10b48 <sort@@Base+0x138>
   10b7c:	b	10b84 <sort@@Base+0x174>
   10b80:	mov	r0, #0
   10b84:	ldr	r1, [sp, #16]
   10b88:	cmp	r1, #0
   10b8c:	beq	10bac <sort@@Base+0x19c>
   10b90:	ldr	r2, [sp, #40]	; 0x28
   10b94:	add	r1, r7, r0
   10b98:	vld1.8	{d18-d19}, [r1]
   10b9c:	add	r0, r2, r0
   10ba0:	vld1.8	{d16-d17}, [r0]
   10ba4:	vst1.8	{d16-d17}, [r1]
   10ba8:	vst1.8	{d18-d19}, [r0]
   10bac:	ldr	r0, [sp, #12]
   10bb0:	cmp	r0, r5
   10bb4:	beq	10a8c <sort@@Base+0x7c>
   10bb8:	ldr	r2, [sp, #20]
   10bbc:	mvn	r1, r0
   10bc0:	cmp	r2, #0
   10bc4:	beq	10be0 <sort@@Base+0x1d0>
   10bc8:	ldr	r6, [sp, #40]	; 0x28
   10bcc:	ldrb	r2, [r7, r0]
   10bd0:	ldrb	r3, [r6, r0]
   10bd4:	strb	r3, [r7, r0]
   10bd8:	strb	r2, [r6, r0]
   10bdc:	orr	r0, r0, #1
   10be0:	ldr	r2, [sp, #24]
   10be4:	cmp	r1, r2
   10be8:	beq	10a8c <sort@@Base+0x7c>
   10bec:	add	r1, r7, #1
   10bf0:	mov	r7, r9
   10bf4:	add	r2, r1, r0
   10bf8:	ldrb	r3, [r2, #-1]
   10bfc:	ldrb	r6, [r7, r0]!
   10c00:	strb	r6, [r2, #-1]
   10c04:	strb	r3, [r7]
   10c08:	ldrb	r3, [r7, #1]
   10c0c:	ldrb	r2, [r1, r0]
   10c10:	strb	r3, [r1, r0]
   10c14:	add	r0, r0, #2
   10c18:	strb	r2, [r7, #1]
   10c1c:	cmp	r5, r0
   10c20:	bne	10bf0 <sort@@Base+0x1e0>
   10c24:	b	10a8c <sort@@Base+0x7c>
   10c28:	sub	sp, fp, #28
   10c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010c30 <linear_search@@Base>:
   10c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c34:	add	fp, sp, #28
   10c38:	sub	sp, sp, #4
   10c3c:	mov	r4, r0
   10c40:	mov	r0, #0
   10c44:	cmp	r2, #1
   10c48:	blt	10c8c <linear_search@@Base+0x5c>
   10c4c:	ldr	r9, [fp, #8]
   10c50:	mov	sl, r3
   10c54:	mov	r8, r2
   10c58:	mov	r7, r1
   10c5c:	mov	r6, r2
   10c60:	mov	r5, r1
   10c64:	mov	r0, r7
   10c68:	mov	r1, r4
   10c6c:	blx	r9
   10c70:	cmp	r0, #0
   10c74:	beq	10c94 <linear_search@@Base+0x64>
   10c78:	add	r7, r7, r8
   10c7c:	add	r5, r5, sl
   10c80:	subs	r6, r6, #1
   10c84:	bne	10c64 <linear_search@@Base+0x34>
   10c88:	mov	r0, #0
   10c8c:	sub	sp, fp, #28
   10c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c94:	mov	r0, r5
   10c98:	sub	sp, fp, #28
   10c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010ca0 <binary_search@@Base>:
   10ca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ca4:	add	fp, sp, #28
   10ca8:	push	{r3}		; (str r3, [sp, #-4]!)
   10cac:	cmp	r2, #1
   10cb0:	blt	10d10 <binary_search@@Base+0x70>
   10cb4:	ldr	r9, [fp, #8]
   10cb8:	mov	sl, r1
   10cbc:	mov	r6, r0
   10cc0:	sub	r4, r2, #1
   10cc4:	mov	r5, #0
   10cc8:	add	r0, r4, r5
   10ccc:	add	r0, r0, r0, lsr #31
   10cd0:	asr	r8, r0, #1
   10cd4:	ldr	r0, [sp]
   10cd8:	mla	r7, r8, r0, sl
   10cdc:	mov	r0, r6
   10ce0:	mov	r1, r7
   10ce4:	blx	r9
   10ce8:	cmp	r0, #0
   10cec:	bne	10d14 <binary_search@@Base+0x74>
   10cf0:	mov	r0, r6
   10cf4:	mov	r1, r7
   10cf8:	blx	r9
   10cfc:	cmn	r0, #1
   10d00:	subeq	r4, r8, #1
   10d04:	addne	r5, r8, #1
   10d08:	cmp	r5, r4
   10d0c:	ble	10cc8 <binary_search@@Base+0x28>
   10d10:	mov	r7, #0
   10d14:	mov	r0, r7
   10d18:	sub	sp, fp, #28
   10d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010d20 <insertion_sort@@Base>:
   10d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d24:	add	fp, sp, #28
   10d28:	sub	sp, sp, #44	; 0x2c
   10d2c:	cmp	r1, #2
   10d30:	str	r3, [sp, #32]
   10d34:	str	r0, [sp, #36]	; 0x24
   10d38:	str	r1, [sp]
   10d3c:	blt	10eb4 <insertion_sort@@Base+0x194>
   10d40:	sub	r0, r2, #16
   10d44:	mov	r6, #1
   10d48:	ldr	sl, [sp, #36]	; 0x24
   10d4c:	mov	r5, r2
   10d50:	add	r1, r6, r0, lsr #4
   10d54:	lsr	r0, r0, #4
   10d58:	str	r0, [sp, #16]
   10d5c:	and	r2, r1, #1
   10d60:	sub	r1, r1, r2
   10d64:	str	r2, [sp, #24]
   10d68:	rsb	r2, r5, #0
   10d6c:	add	r7, sl, r5
   10d70:	str	r2, [sp, #28]
   10d74:	bic	r2, r5, #15
   10d78:	str	r1, [sp, #12]
   10d7c:	str	r2, [sp, #20]
   10d80:	b	10da4 <insertion_sort@@Base+0x84>
   10d84:	ldr	sl, [sp, #4]
   10d88:	ldr	r7, [sp, #8]
   10d8c:	ldr	r0, [sp]
   10d90:	add	r6, r6, #1
   10d94:	add	sl, sl, r5
   10d98:	add	r7, r7, r5
   10d9c:	cmp	r6, r0
   10da0:	beq	10eb4 <insertion_sort@@Base+0x194>
   10da4:	mov	r9, #0
   10da8:	mov	r8, r6
   10dac:	str	sl, [sp, #4]
   10db0:	str	r7, [sp, #8]
   10db4:	b	10dd0 <insertion_sort@@Base+0xb0>
   10db8:	ldr	r0, [sp, #28]
   10dbc:	add	r9, r9, #1
   10dc0:	cmp	r9, r6
   10dc4:	add	sl, sl, r0
   10dc8:	add	r7, r7, r0
   10dcc:	beq	10d84 <insertion_sort@@Base+0x64>
   10dd0:	ldr	r1, [sp, #36]	; 0x24
   10dd4:	ldr	r2, [sp, #32]
   10dd8:	mla	r0, r8, r5, r1
   10ddc:	sub	r8, r8, #1
   10de0:	mla	r4, r8, r5, r1
   10de4:	str	r0, [fp, #-32]	; 0xffffffe0
   10de8:	mov	r1, r4
   10dec:	blx	r2
   10df0:	cmn	r0, #1
   10df4:	bne	10d84 <insertion_sort@@Base+0x64>
   10df8:	cmp	r5, #1
   10dfc:	blt	10db8 <insertion_sort@@Base+0x98>
   10e00:	mov	r0, #0
   10e04:	cmp	r5, #16
   10e08:	bcc	10e90 <insertion_sort@@Base+0x170>
   10e0c:	ldr	r0, [sp, #16]
   10e10:	cmp	r0, #0
   10e14:	beq	10e58 <insertion_sort@@Base+0x138>
   10e18:	ldr	r1, [sp, #12]
   10e1c:	mov	r0, #0
   10e20:	add	r2, r7, r0
   10e24:	add	r3, sl, r0
   10e28:	subs	r1, r1, #2
   10e2c:	add	r0, r0, #32
   10e30:	vld1.8	{d16-d17}, [r3]
   10e34:	vld1.8	{d18-d19}, [r2]
   10e38:	vst1.8	{d16-d17}, [r2]!
   10e3c:	vst1.8	{d18-d19}, [r3]!
   10e40:	vld1.8	{d16-d17}, [r3]
   10e44:	vld1.8	{d18-d19}, [r2]
   10e48:	vst1.8	{d16-d17}, [r2]
   10e4c:	vst1.8	{d18-d19}, [r3]
   10e50:	bne	10e20 <insertion_sort@@Base+0x100>
   10e54:	b	10e5c <insertion_sort@@Base+0x13c>
   10e58:	mov	r0, #0
   10e5c:	ldr	r1, [sp, #24]
   10e60:	cmp	r1, #0
   10e64:	beq	10e84 <insertion_sort@@Base+0x164>
   10e68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10e6c:	add	r1, r1, r0
   10e70:	add	r0, r4, r0
   10e74:	vld1.8	{d16-d17}, [r0]
   10e78:	vld1.8	{d18-d19}, [r1]
   10e7c:	vst1.8	{d16-d17}, [r1]
   10e80:	vst1.8	{d18-d19}, [r0]
   10e84:	ldr	r0, [sp, #20]
   10e88:	cmp	r0, r5
   10e8c:	beq	10db8 <insertion_sort@@Base+0x98>
   10e90:	add	r1, sl, r5
   10e94:	ldrb	r2, [r1, r0]
   10e98:	ldrb	r3, [sl, r0]
   10e9c:	strb	r3, [r1, r0]
   10ea0:	strb	r2, [sl, r0]
   10ea4:	add	r0, r0, #1
   10ea8:	cmp	r5, r0
   10eac:	bne	10e94 <insertion_sort@@Base+0x174>
   10eb0:	b	10db8 <insertion_sort@@Base+0x98>
   10eb4:	sub	sp, fp, #28
   10eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010ebc <comp_char_desc@@Base>:
   10ebc:	ldrb	r2, [r0]
   10ec0:	ldrb	r1, [r1]
   10ec4:	mov	r0, #0
   10ec8:	cmp	r2, r1
   10ecc:	mvnhi	r0, #0
   10ed0:	movwcc	r0, #1
   10ed4:	bx	lr

00010ed8 <main@@Base>:
   10ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10edc:	add	fp, sp, #28
   10ee0:	sub	sp, sp, #4
   10ee4:	vpush	{d8-d10}
   10ee8:	sub	sp, sp, #32
   10eec:	movw	r0, #6240	; 0x1860
   10ef0:	add	r9, sp, #8
   10ef4:	movt	r0, #1
   10ef8:	vld1.64	{d8-d9}, [r0]!
   10efc:	vldr	d10, [r0]
   10f00:	mov	r0, r9
   10f04:	vst1.64	{d8-d9}, [r0]!
   10f08:	vstr	d10, [r0]
   10f0c:	movw	r0, #6264	; 0x1878
   10f10:	movt	r0, #1
   10f14:	bl	10788 <puts@plt>
   10f18:	movw	r0, #6278	; 0x1886
   10f1c:	movt	r0, #1
   10f20:	bl	1077c <printf@plt>
   10f24:	movw	r4, #6285	; 0x188d
   10f28:	mov	r1, #3
   10f2c:	movt	r4, #1
   10f30:	mov	r0, r4
   10f34:	bl	1077c <printf@plt>
   10f38:	mov	r0, r4
   10f3c:	mvn	r1, #1
   10f40:	bl	1077c <printf@plt>
   10f44:	mov	r0, r4
   10f48:	mov	r1, #4
   10f4c:	bl	1077c <printf@plt>
   10f50:	mov	r0, r4
   10f54:	mov	r1, #5
   10f58:	bl	1077c <printf@plt>
   10f5c:	mov	r0, r4
   10f60:	mov	r1, #9
   10f64:	bl	1077c <printf@plt>
   10f68:	mov	r0, r4
   10f6c:	mov	r1, #1
   10f70:	bl	1077c <printf@plt>
   10f74:	mov	r0, #10
   10f78:	bl	107b8 <putchar@plt>
   10f7c:	orr	r8, r9, #4
   10f80:	mov	ip, #0
   10f84:	b	10fd4 <main@@Base+0xfc>
   10f88:	mov	r2, r1
   10f8c:	ldrb	r0, [r2]
   10f90:	ldrb	r3, [r1]
   10f94:	cmp	ip, #6
   10f98:	strb	r3, [r2]
   10f9c:	strb	r0, [r1]
   10fa0:	ldrb	r0, [r2, #1]
   10fa4:	ldrb	r3, [r1, #1]
   10fa8:	strb	r3, [r2, #1]
   10fac:	strb	r0, [r1, #1]
   10fb0:	ldrb	r0, [r2, #2]
   10fb4:	ldrb	r3, [r1, #2]
   10fb8:	strb	r3, [r2, #2]
   10fbc:	strb	r0, [r1, #2]
   10fc0:	ldrb	r0, [r2, #3]
   10fc4:	ldrb	r3, [r1, #3]
   10fc8:	strb	r3, [r2, #3]
   10fcc:	strb	r0, [r1, #3]
   10fd0:	beq	11064 <main@@Base+0x18c>
   10fd4:	mov	r3, ip
   10fd8:	add	r1, r9, ip, lsl #2
   10fdc:	add	ip, ip, #1
   10fe0:	cmp	ip, #5
   10fe4:	bhi	10f88 <main@@Base+0xb0>
   10fe8:	rsb	r2, r3, #1
   10fec:	mov	r7, ip
   10ff0:	tst	r2, #1
   10ff4:	mov	r2, r1
   10ff8:	beq	11014 <main@@Base+0x13c>
   10ffc:	ldr	r2, [r9, ip, lsl #2]
   11000:	ldr	r7, [r9, r3, lsl #2]
   11004:	cmp	r7, r2
   11008:	mov	r2, r1
   1100c:	add	r7, r3, #2
   11010:	addgt	r2, r9, ip, lsl #2
   11014:	cmp	r3, #4
   11018:	beq	10f8c <main@@Base+0xb4>
   1101c:	add	r4, r8, r7, lsl #2
   11020:	sub	r3, r7, #6
   11024:	mov	r6, r2
   11028:	mov	r7, r4
   1102c:	mov	r2, r4
   11030:	ldr	r5, [r6]
   11034:	ldr	r0, [r2, #-4]!
   11038:	cmp	r5, r0
   1103c:	movle	r2, r6
   11040:	ldr	r6, [r7], #8
   11044:	ldr	r0, [r2]
   11048:	cmp	r0, r6
   1104c:	movgt	r2, r4
   11050:	adds	r3, r3, #2
   11054:	mov	r4, r7
   11058:	mov	r6, r2
   1105c:	bne	1102c <main@@Base+0x154>
   11060:	b	10f8c <main@@Base+0xb4>
   11064:	movw	r0, #6289	; 0x1891
   11068:	movt	r0, #1
   1106c:	bl	1077c <printf@plt>
   11070:	movw	r4, #6285	; 0x188d
   11074:	ldr	r1, [sp, #8]
   11078:	movt	r4, #1
   1107c:	mov	r0, r4
   11080:	bl	1077c <printf@plt>
   11084:	ldr	r1, [sp, #12]
   11088:	mov	r0, r4
   1108c:	bl	1077c <printf@plt>
   11090:	ldr	r1, [sp, #16]
   11094:	mov	r0, r4
   11098:	bl	1077c <printf@plt>
   1109c:	ldr	r1, [sp, #20]
   110a0:	mov	r0, r4
   110a4:	bl	1077c <printf@plt>
   110a8:	ldr	r1, [sp, #24]
   110ac:	mov	r0, r4
   110b0:	bl	1077c <printf@plt>
   110b4:	ldr	r1, [sp, #28]
   110b8:	mov	r0, r4
   110bc:	bl	1077c <printf@plt>
   110c0:	mov	r0, #10
   110c4:	bl	107b8 <putchar@plt>
   110c8:	mov	r0, #24
   110cc:	mov	r4, r9
   110d0:	vstr	d10, [sp, #24]
   110d4:	vst1.64	{d8-d9}, [r4], r0
   110d8:	movw	r0, #6297	; 0x1899
   110dc:	movt	r0, #1
   110e0:	bl	10788 <puts@plt>
   110e4:	ldr	r0, [r4]
   110e8:	mov	r2, #4
   110ec:	cmp	r0, #4
   110f0:	beq	11104 <main@@Base+0x22c>
   110f4:	ldr	r0, [sp, #38]	; 0x26
   110f8:	mov	r2, #5
   110fc:	cmp	r0, #4
   11100:	bne	11118 <main@@Base+0x240>
   11104:	movw	r0, #6307	; 0x18a3
   11108:	mov	r1, #4
   1110c:	movt	r0, #1
   11110:	bl	1077c <printf@plt>
   11114:	b	11128 <main@@Base+0x250>
   11118:	movw	r0, #6352	; 0x18d0
   1111c:	mov	r1, #4
   11120:	movt	r0, #1
   11124:	bl	1077c <printf@plt>
   11128:	mov	r0, r9
   1112c:	mov	ip, #0
   11130:	vst1.64	{d8-d9}, [r0]!
   11134:	vstr	d10, [r0]
   11138:	b	11188 <main@@Base+0x2b0>
   1113c:	mov	r2, r1
   11140:	ldrb	r0, [r2]
   11144:	ldrb	r3, [r1]
   11148:	cmp	ip, #6
   1114c:	strb	r3, [r2]
   11150:	strb	r0, [r1]
   11154:	ldrb	r0, [r2, #1]
   11158:	ldrb	r3, [r1, #1]
   1115c:	strb	r3, [r2, #1]
   11160:	strb	r0, [r1, #1]
   11164:	ldrb	r0, [r2, #2]
   11168:	ldrb	r3, [r1, #2]
   1116c:	strb	r3, [r2, #2]
   11170:	strb	r0, [r1, #2]
   11174:	ldrb	r0, [r2, #3]
   11178:	ldrb	r3, [r1, #3]
   1117c:	strb	r3, [r2, #3]
   11180:	strb	r0, [r1, #3]
   11184:	beq	11218 <main@@Base+0x340>
   11188:	mov	r3, ip
   1118c:	add	r1, r9, ip, lsl #2
   11190:	add	ip, ip, #1
   11194:	cmp	ip, #5
   11198:	bhi	1113c <main@@Base+0x264>
   1119c:	rsb	r2, r3, #1
   111a0:	mov	r7, ip
   111a4:	tst	r2, #1
   111a8:	mov	r2, r1
   111ac:	beq	111c8 <main@@Base+0x2f0>
   111b0:	ldr	r2, [r9, ip, lsl #2]
   111b4:	ldr	r7, [r9, r3, lsl #2]
   111b8:	cmp	r7, r2
   111bc:	mov	r2, r1
   111c0:	add	r7, r3, #2
   111c4:	addgt	r2, r9, ip, lsl #2
   111c8:	cmp	r3, #4
   111cc:	beq	11140 <main@@Base+0x268>
   111d0:	add	r4, r8, r7, lsl #2
   111d4:	sub	r3, r7, #6
   111d8:	mov	r6, r2
   111dc:	mov	r7, r4
   111e0:	mov	r2, r4
   111e4:	ldr	r5, [r6]
   111e8:	ldr	r0, [r2, #-4]!
   111ec:	cmp	r5, r0
   111f0:	movle	r2, r6
   111f4:	ldr	r6, [r7], #8
   111f8:	ldr	r0, [r2]
   111fc:	cmp	r0, r6
   11200:	movgt	r2, r4
   11204:	adds	r3, r3, #2
   11208:	mov	r4, r7
   1120c:	mov	r6, r2
   11210:	bne	111e0 <main@@Base+0x308>
   11214:	b	11140 <main@@Base+0x268>
   11218:	movw	r0, #6386	; 0x18f2
   1121c:	movt	r0, #1
   11220:	bl	10788 <puts@plt>
   11224:	mov	r0, #0
   11228:	mov	r1, #5
   1122c:	add	r2, r0, r1
   11230:	mov	r7, #0
   11234:	mov	r6, #0
   11238:	add	r2, r2, r2, lsr #31
   1123c:	asr	r2, r2, #1
   11240:	ldr	r3, [r9, r2, lsl #2]
   11244:	cmp	r3, #3
   11248:	movwgt	r7, #1
   1124c:	cmp	r3, #4
   11250:	movwgt	r6, #1
   11254:	cmp	r6, r7
   11258:	beq	11284 <main@@Base+0x3ac>
   1125c:	cmp	r3, #4
   11260:	subgt	r1, r2, #1
   11264:	addle	r0, r2, #1
   11268:	cmp	r0, r1
   1126c:	ble	1122c <main@@Base+0x354>
   11270:	movw	r0, #6352	; 0x18d0
   11274:	mov	r1, #4
   11278:	movt	r0, #1
   1127c:	bl	1077c <printf@plt>
   11280:	b	11298 <main@@Base+0x3c0>
   11284:	movw	r0, #6307	; 0x18a3
   11288:	sbfx	r2, r2, #0, #30
   1128c:	mov	r1, #4
   11290:	movt	r0, #1
   11294:	bl	1077c <printf@plt>
   11298:	movw	r0, #6396	; 0x18fc
   1129c:	vst1.64	{d8-d9}, [r9]!
   112a0:	movt	r0, #1
   112a4:	vstr	d10, [r9]
   112a8:	bl	10788 <puts@plt>
   112ac:	movw	r0, #6278	; 0x1886
   112b0:	movt	r0, #1
   112b4:	bl	1077c <printf@plt>
   112b8:	movw	r4, #6285	; 0x188d
   112bc:	mov	r1, #3
   112c0:	movt	r4, #1
   112c4:	mov	r0, r4
   112c8:	bl	1077c <printf@plt>
   112cc:	mov	r0, r4
   112d0:	mvn	r1, #1
   112d4:	bl	1077c <printf@plt>
   112d8:	mov	r0, r4
   112dc:	mov	r1, #4
   112e0:	bl	1077c <printf@plt>
   112e4:	mov	r0, r4
   112e8:	mov	r1, #5
   112ec:	bl	1077c <printf@plt>
   112f0:	mov	r0, r4
   112f4:	mov	r1, #9
   112f8:	bl	1077c <printf@plt>
   112fc:	mov	r0, r4
   11300:	mov	r1, #1
   11304:	bl	1077c <printf@plt>
   11308:	mov	r0, #10
   1130c:	bl	107b8 <putchar@plt>
   11310:	ldr	r0, [sp, #8]
   11314:	cmn	r0, #1
   11318:	blt	11348 <main@@Base+0x470>
   1131c:	ldrb	r1, [sp, #9]
   11320:	ldrb	r2, [sp, #12]
   11324:	ldrb	r3, [sp, #13]
   11328:	strb	r0, [sp, #12]
   1132c:	strb	r2, [sp, #8]
   11330:	strb	r1, [sp, #13]
   11334:	strb	r3, [sp, #9]
   11338:	ldrh	r0, [sp, #14]
   1133c:	ldrh	r1, [sp, #10]
   11340:	strh	r1, [sp, #14]
   11344:	strh	r0, [sp, #10]
   11348:	ldr	r0, [sp, #12]
   1134c:	ldr	r1, [sp, #16]
   11350:	cmp	r0, r1
   11354:	ble	113b8 <main@@Base+0x4e0>
   11358:	strb	r1, [sp, #12]
   1135c:	ldrb	r2, [sp, #17]
   11360:	ldrb	r1, [sp, #13]
   11364:	strb	r2, [sp, #13]
   11368:	ldrh	r2, [sp, #14]
   1136c:	ldrh	r3, [sp, #18]
   11370:	strh	r3, [sp, #14]
   11374:	strb	r0, [sp, #16]
   11378:	strb	r1, [sp, #17]
   1137c:	strh	r2, [sp, #18]
   11380:	ldr	r0, [sp, #8]
   11384:	ldr	r1, [sp, #12]
   11388:	cmp	r0, r1
   1138c:	ble	113b8 <main@@Base+0x4e0>
   11390:	strb	r1, [sp, #8]
   11394:	strb	r0, [sp, #12]
   11398:	ldrb	r0, [sp, #9]
   1139c:	ldrb	r1, [sp, #13]
   113a0:	strb	r0, [sp, #13]
   113a4:	strb	r1, [sp, #9]
   113a8:	ldrh	r0, [sp, #14]
   113ac:	ldrh	r1, [sp, #10]
   113b0:	strh	r1, [sp, #14]
   113b4:	strh	r0, [sp, #10]
   113b8:	ldr	r0, [sp, #16]
   113bc:	ldr	r1, [sp, #20]
   113c0:	cmp	r0, r1
   113c4:	ble	11460 <main@@Base+0x588>
   113c8:	strb	r1, [sp, #16]
   113cc:	ldrb	r2, [sp, #21]
   113d0:	ldrb	r1, [sp, #17]
   113d4:	strb	r2, [sp, #17]
   113d8:	ldrh	r2, [sp, #18]
   113dc:	ldrh	r3, [sp, #22]
   113e0:	strh	r3, [sp, #18]
   113e4:	strb	r0, [sp, #20]
   113e8:	strb	r1, [sp, #21]
   113ec:	strh	r2, [sp, #22]
   113f0:	ldr	r0, [sp, #12]
   113f4:	ldr	r1, [sp, #16]
   113f8:	cmp	r0, r1
   113fc:	ble	11460 <main@@Base+0x588>
   11400:	strb	r1, [sp, #12]
   11404:	ldrb	r2, [sp, #17]
   11408:	ldrb	r1, [sp, #13]
   1140c:	strb	r2, [sp, #13]
   11410:	ldrh	r2, [sp, #14]
   11414:	ldrh	r3, [sp, #18]
   11418:	strh	r3, [sp, #14]
   1141c:	strb	r0, [sp, #16]
   11420:	strb	r1, [sp, #17]
   11424:	strh	r2, [sp, #18]
   11428:	ldr	r0, [sp, #8]
   1142c:	ldr	r1, [sp, #12]
   11430:	cmp	r0, r1
   11434:	ble	11460 <main@@Base+0x588>
   11438:	strb	r1, [sp, #8]
   1143c:	strb	r0, [sp, #12]
   11440:	ldrb	r0, [sp, #9]
   11444:	ldrb	r1, [sp, #13]
   11448:	strb	r0, [sp, #13]
   1144c:	strb	r1, [sp, #9]
   11450:	ldrh	r0, [sp, #14]
   11454:	ldrh	r1, [sp, #10]
   11458:	strh	r1, [sp, #14]
   1145c:	strh	r0, [sp, #10]
   11460:	ldr	r0, [sp, #20]
   11464:	ldr	r1, [sp, #24]
   11468:	cmp	r0, r1
   1146c:	ble	11540 <main@@Base+0x668>
   11470:	strb	r1, [sp, #20]
   11474:	ldrb	r2, [sp, #25]
   11478:	ldrb	r1, [sp, #21]
   1147c:	strb	r2, [sp, #21]
   11480:	ldrh	r2, [sp, #22]
   11484:	ldrh	r3, [sp, #26]
   11488:	strh	r3, [sp, #22]
   1148c:	strb	r0, [sp, #24]
   11490:	strb	r1, [sp, #25]
   11494:	strh	r2, [sp, #26]
   11498:	ldr	r0, [sp, #16]
   1149c:	ldr	r1, [sp, #20]
   114a0:	cmp	r0, r1
   114a4:	ble	11540 <main@@Base+0x668>
   114a8:	strb	r1, [sp, #16]
   114ac:	ldrb	r2, [sp, #21]
   114b0:	ldrb	r1, [sp, #17]
   114b4:	strb	r2, [sp, #17]
   114b8:	ldrh	r2, [sp, #18]
   114bc:	ldrh	r3, [sp, #22]
   114c0:	strh	r3, [sp, #18]
   114c4:	strb	r0, [sp, #20]
   114c8:	strb	r1, [sp, #21]
   114cc:	strh	r2, [sp, #22]
   114d0:	ldr	r0, [sp, #12]
   114d4:	ldr	r1, [sp, #16]
   114d8:	cmp	r0, r1
   114dc:	ble	11540 <main@@Base+0x668>
   114e0:	strb	r1, [sp, #12]
   114e4:	ldrb	r2, [sp, #17]
   114e8:	ldrb	r1, [sp, #13]
   114ec:	strb	r2, [sp, #13]
   114f0:	ldrh	r2, [sp, #14]
   114f4:	ldrh	r3, [sp, #18]
   114f8:	strh	r3, [sp, #14]
   114fc:	strb	r0, [sp, #16]
   11500:	strb	r1, [sp, #17]
   11504:	strh	r2, [sp, #18]
   11508:	ldr	r0, [sp, #8]
   1150c:	ldr	r1, [sp, #12]
   11510:	cmp	r0, r1
   11514:	ble	11540 <main@@Base+0x668>
   11518:	strb	r1, [sp, #8]
   1151c:	strb	r0, [sp, #12]
   11520:	ldrb	r0, [sp, #9]
   11524:	ldrb	r1, [sp, #13]
   11528:	strb	r0, [sp, #13]
   1152c:	strb	r1, [sp, #9]
   11530:	ldrh	r0, [sp, #14]
   11534:	ldrh	r1, [sp, #10]
   11538:	strh	r1, [sp, #14]
   1153c:	strh	r0, [sp, #10]
   11540:	ldr	r0, [sp, #24]
   11544:	ldr	r1, [sp, #28]
   11548:	cmp	r0, r1
   1154c:	ble	11658 <main@@Base+0x780>
   11550:	strb	r1, [sp, #24]
   11554:	ldrb	r2, [sp, #29]
   11558:	ldrb	r1, [sp, #25]
   1155c:	strb	r2, [sp, #25]
   11560:	ldrh	r2, [sp, #26]
   11564:	ldrh	r3, [sp, #30]
   11568:	strh	r3, [sp, #26]
   1156c:	strb	r0, [sp, #28]
   11570:	strb	r1, [sp, #29]
   11574:	strh	r2, [sp, #30]
   11578:	ldr	r0, [sp, #20]
   1157c:	ldr	r1, [sp, #24]
   11580:	cmp	r0, r1
   11584:	ble	11658 <main@@Base+0x780>
   11588:	strb	r1, [sp, #20]
   1158c:	ldrb	r2, [sp, #25]
   11590:	ldrb	r1, [sp, #21]
   11594:	strb	r2, [sp, #21]
   11598:	ldrh	r2, [sp, #22]
   1159c:	ldrh	r3, [sp, #26]
   115a0:	strh	r3, [sp, #22]
   115a4:	strb	r0, [sp, #24]
   115a8:	strb	r1, [sp, #25]
   115ac:	strh	r2, [sp, #26]
   115b0:	ldr	r0, [sp, #16]
   115b4:	ldr	r1, [sp, #20]
   115b8:	cmp	r0, r1
   115bc:	ble	11658 <main@@Base+0x780>
   115c0:	strb	r1, [sp, #16]
   115c4:	ldrb	r2, [sp, #21]
   115c8:	ldrb	r1, [sp, #17]
   115cc:	strb	r2, [sp, #17]
   115d0:	ldrh	r2, [sp, #18]
   115d4:	ldrh	r3, [sp, #22]
   115d8:	strh	r3, [sp, #18]
   115dc:	strb	r0, [sp, #20]
   115e0:	strb	r1, [sp, #21]
   115e4:	strh	r2, [sp, #22]
   115e8:	ldr	r0, [sp, #12]
   115ec:	ldr	r1, [sp, #16]
   115f0:	cmp	r0, r1
   115f4:	ble	11658 <main@@Base+0x780>
   115f8:	strb	r1, [sp, #12]
   115fc:	ldrb	r2, [sp, #17]
   11600:	ldrb	r1, [sp, #13]
   11604:	strb	r2, [sp, #13]
   11608:	ldrh	r2, [sp, #14]
   1160c:	ldrh	r3, [sp, #18]
   11610:	strh	r3, [sp, #14]
   11614:	strb	r0, [sp, #16]
   11618:	strb	r1, [sp, #17]
   1161c:	strh	r2, [sp, #18]
   11620:	ldr	r0, [sp, #8]
   11624:	ldr	r1, [sp, #12]
   11628:	cmp	r0, r1
   1162c:	ble	11658 <main@@Base+0x780>
   11630:	strb	r1, [sp, #8]
   11634:	strb	r0, [sp, #12]
   11638:	ldrb	r0, [sp, #9]
   1163c:	ldrb	r1, [sp, #13]
   11640:	strb	r0, [sp, #13]
   11644:	strb	r1, [sp, #9]
   11648:	ldrh	r0, [sp, #14]
   1164c:	ldrh	r1, [sp, #10]
   11650:	strh	r1, [sp, #14]
   11654:	strh	r0, [sp, #10]
   11658:	movw	r0, #6289	; 0x1891
   1165c:	movt	r0, #1
   11660:	bl	1077c <printf@plt>
   11664:	movw	r4, #6285	; 0x188d
   11668:	ldr	r1, [sp, #8]
   1166c:	movt	r4, #1
   11670:	mov	r0, r4
   11674:	bl	1077c <printf@plt>
   11678:	ldr	r1, [sp, #12]
   1167c:	mov	r0, r4
   11680:	bl	1077c <printf@plt>
   11684:	ldr	r1, [sp, #16]
   11688:	mov	r0, r4
   1168c:	bl	1077c <printf@plt>
   11690:	ldr	r1, [sp, #20]
   11694:	mov	r0, r4
   11698:	bl	1077c <printf@plt>
   1169c:	ldr	r1, [sp, #24]
   116a0:	mov	r0, r4
   116a4:	bl	1077c <printf@plt>
   116a8:	ldr	r1, [sp, #28]
   116ac:	mov	r0, r4
   116b0:	bl	1077c <printf@plt>
   116b4:	mov	r0, #10
   116b8:	bl	107b8 <putchar@plt>
   116bc:	movw	r0, #6406	; 0x1906
   116c0:	movt	r0, #1
   116c4:	bl	10788 <puts@plt>
   116c8:	movw	r0, #25153	; 0x6241
   116cc:	mov	r9, #0
   116d0:	movt	r0, #24922	; 0x615a
   116d4:	strb	r9, [sp, #4]
   116d8:	str	r0, [sp]
   116dc:	movw	r0, #6278	; 0x1886
   116e0:	movt	r0, #1
   116e4:	bl	1077c <printf@plt>
   116e8:	mov	r8, sp
   116ec:	mov	r0, r8
   116f0:	bl	10788 <puts@plt>
   116f4:	mov	r0, r8
   116f8:	bl	107ac <strlen@plt>
   116fc:	cmp	r0, #1
   11700:	blt	117c0 <main@@Base+0x8e8>
   11704:	orr	ip, r8, #1
   11708:	sub	lr, r0, #2
   1170c:	b	11728 <main@@Base+0x850>
   11710:	ldrb	r1, [r3]
   11714:	ldrb	r2, [sl]
   11718:	cmp	r9, r0
   1171c:	strb	r2, [r3]
   11720:	strb	r1, [sl]
   11724:	beq	117c0 <main@@Base+0x8e8>
   11728:	add	sl, r8, r9
   1172c:	mov	r5, r9
   11730:	add	r9, r9, #1
   11734:	cmp	r9, r0
   11738:	mov	r3, sl
   1173c:	bge	11710 <main@@Base+0x838>
   11740:	mvn	r1, r5
   11744:	mov	r3, sl
   11748:	add	r1, r0, r1
   1174c:	tst	r1, #1
   11750:	mov	r1, r9
   11754:	beq	11770 <main@@Base+0x898>
   11758:	ldrb	r1, [r8, r5]
   1175c:	ldrb	r2, [r8, r9]
   11760:	mov	r3, sl
   11764:	cmp	r2, r1
   11768:	add	r1, r5, #2
   1176c:	addhi	r3, r8, r9
   11770:	cmp	lr, r5
   11774:	beq	11710 <main@@Base+0x838>
   11778:	add	r2, ip, r1
   1177c:	sub	r5, r0, r1
   11780:	mov	r4, r3
   11784:	mov	r1, r2
   11788:	mov	r3, r2
   1178c:	ldrb	r7, [r4]
   11790:	ldrb	r6, [r3, #-1]!
   11794:	cmp	r6, r7
   11798:	ldrb	r6, [r1], #2
   1179c:	movls	r3, r4
   117a0:	ldrb	r4, [r3]
   117a4:	cmp	r6, r4
   117a8:	movhi	r3, r2
   117ac:	subs	r5, r5, #2
   117b0:	mov	r2, r1
   117b4:	mov	r4, r3
   117b8:	bne	11788 <main@@Base+0x8b0>
   117bc:	b	11710 <main@@Base+0x838>
   117c0:	movw	r0, #6289	; 0x1891
   117c4:	movt	r0, #1
   117c8:	bl	1077c <printf@plt>
   117cc:	mov	r0, sp
   117d0:	bl	10788 <puts@plt>
   117d4:	mov	r0, #0
   117d8:	sub	sp, fp, #56	; 0x38
   117dc:	vpop	{d8-d10}
   117e0:	add	sp, sp, #4
   117e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000117e8 <__libc_csu_init@@Base>:
   117e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117ec:	mov	r7, r0
   117f0:	ldr	r6, [pc, #72]	; 11840 <__libc_csu_init@@Base+0x58>
   117f4:	ldr	r5, [pc, #72]	; 11844 <__libc_csu_init@@Base+0x5c>
   117f8:	add	r6, pc, r6
   117fc:	add	r5, pc, r5
   11800:	sub	r6, r6, r5
   11804:	mov	r8, r1
   11808:	mov	r9, r2
   1180c:	bl	1075c <printf@plt-0x20>
   11810:	asrs	r6, r6, #2
   11814:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11818:	mov	r4, #0
   1181c:	add	r4, r4, #1
   11820:	ldr	r3, [r5], #4
   11824:	mov	r2, r9
   11828:	mov	r1, r8
   1182c:	mov	r0, r7
   11830:	blx	r3
   11834:	cmp	r6, r4
   11838:	bne	1181c <__libc_csu_init@@Base+0x34>
   1183c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11840:	andeq	r0, r1, ip, lsl #14
   11844:	andeq	r0, r1, r4, lsl #14

00011848 <__libc_csu_fini@@Base>:
   11848:	bx	lr

Disassembly of section .fini:

0001184c <.fini>:
   1184c:	push	{r3, lr}
   11850:	pop	{r3, pc}
