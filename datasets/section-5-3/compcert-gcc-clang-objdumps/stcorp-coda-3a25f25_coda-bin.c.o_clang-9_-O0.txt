
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-bin.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_bin_product_open>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #64	; 0x40
   c:	str	r0, [fp, #-8]
  10:	ldr	r0, [fp, #-8]
  14:	mov	r1, #0
  18:	str	r1, [r0, #52]	; 0x34
  1c:	ldr	r0, [fp, #-8]
  20:	mvn	r1, #0
  24:	str	r1, [r0, #56]	; 0x38
  28:	ldr	r0, [pc, #508]	; 22c <coda_bin_product_open+0x22c>
  2c:	ldr	r0, [pc, r0]
  30:	str	r0, [fp, #-20]	; 0xffffffec
  34:	bl	0 <__aeabi_read_tp>
  38:	ldr	r1, [fp, #-20]	; 0xffffffec
  3c:	ldr	r0, [r0, r1]
  40:	cmp	r0, #0
  44:	beq	1a0 <coda_bin_product_open+0x1a0>
  48:	ldr	r0, [fp, #-8]
  4c:	ldr	r1, [r0, #8]
  50:	ldr	r0, [r0, #12]
  54:	subs	r1, r1, #1
  58:	sbcs	r0, r0, #0
  5c:	blt	1a0 <coda_bin_product_open+0x1a0>
  60:	b	64 <coda_bin_product_open+0x64>
  64:	ldr	r0, [fp, #-8]
  68:	movw	r1, #1
  6c:	str	r1, [r0, #52]	; 0x34
  70:	ldr	r0, [fp, #-8]
  74:	ldr	r0, [r0]
  78:	movw	r1, #0
  7c:	bl	0 <open>
  80:	str	r0, [fp, #-12]
  84:	ldr	r0, [fp, #-12]
  88:	cmp	r0, #0
  8c:	bge	d4 <coda_bin_product_open+0xd4>
  90:	ldr	r0, [fp, #-8]
  94:	ldr	r2, [r0]
  98:	str	r2, [fp, #-24]	; 0xffffffe8
  9c:	bl	0 <__errno_location>
  a0:	ldr	r0, [r0]
  a4:	bl	0 <strerror>
  a8:	mvn	r1, #20
  ac:	str	r0, [fp, #-28]	; 0xffffffe4
  b0:	mov	r0, r1
  b4:	movw	r1, #0
  b8:	movt	r1, #0
  bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
  c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
  c4:	bl	0 <coda_set_error>
  c8:	mvn	r0, #0
  cc:	str	r0, [fp, #-4]
  d0:	b	220 <coda_bin_product_open+0x220>
  d4:	ldr	r0, [fp, #-8]
  d8:	ldr	r1, [r0, #8]
  dc:	ldr	r0, [fp, #-12]
  e0:	movw	r2, #0
  e4:	str	r0, [sp, #32]
  e8:	mov	r0, r2
  ec:	movw	r3, #1
  f0:	str	r2, [sp, #28]
  f4:	mov	r2, r3
  f8:	ldr	ip, [sp, #32]
  fc:	str	ip, [sp]
 100:	ldr	lr, [sp, #28]
 104:	str	lr, [sp, #4]
 108:	bl	0 <mmap>
 10c:	ldr	r1, [fp, #-8]
 110:	str	r0, [r1, #48]	; 0x30
 114:	ldr	r0, [fp, #-8]
 118:	ldr	r0, [r0, #48]	; 0x30
 11c:	mvn	r1, #0
 120:	cmp	r0, r1
 124:	bne	180 <coda_bin_product_open+0x180>
 128:	ldr	r0, [fp, #-8]
 12c:	ldr	r2, [r0]
 130:	str	r2, [sp, #24]
 134:	bl	0 <__errno_location>
 138:	ldr	r0, [r0]
 13c:	bl	0 <strerror>
 140:	mvn	r1, #20
 144:	str	r0, [sp, #20]
 148:	mov	r0, r1
 14c:	movw	r1, #0
 150:	movt	r1, #0
 154:	ldr	r2, [sp, #24]
 158:	ldr	r3, [sp, #20]
 15c:	bl	0 <coda_set_error>
 160:	ldr	r0, [fp, #-8]
 164:	movw	r1, #0
 168:	str	r1, [r0, #48]	; 0x30
 16c:	ldr	r0, [fp, #-12]
 170:	bl	0 <close>
 174:	mvn	r1, #0
 178:	str	r1, [fp, #-4]
 17c:	b	220 <coda_bin_product_open+0x220>
 180:	ldr	r0, [fp, #-12]
 184:	bl	0 <close>
 188:	ldr	r1, [fp, #-8]
 18c:	ldr	r2, [r1, #8]
 190:	ldr	r3, [r1, #12]
 194:	str	r3, [r1, #44]	; 0x2c
 198:	str	r2, [r1, #40]	; 0x28
 19c:	b	218 <coda_bin_product_open+0x218>
 1a0:	movw	r0, #0
 1a4:	str	r0, [fp, #-16]
 1a8:	ldr	r0, [fp, #-8]
 1ac:	ldr	r0, [r0]
 1b0:	ldr	r1, [fp, #-16]
 1b4:	bl	0 <open>
 1b8:	ldr	r1, [fp, #-8]
 1bc:	str	r0, [r1, #56]	; 0x38
 1c0:	ldr	r0, [fp, #-8]
 1c4:	ldr	r0, [r0, #56]	; 0x38
 1c8:	cmp	r0, #0
 1cc:	bge	214 <coda_bin_product_open+0x214>
 1d0:	ldr	r0, [fp, #-8]
 1d4:	ldr	r2, [r0]
 1d8:	str	r2, [sp, #16]
 1dc:	bl	0 <__errno_location>
 1e0:	ldr	r0, [r0]
 1e4:	bl	0 <strerror>
 1e8:	mvn	r1, #20
 1ec:	str	r0, [sp, #12]
 1f0:	mov	r0, r1
 1f4:	movw	r1, #0
 1f8:	movt	r1, #0
 1fc:	ldr	r2, [sp, #16]
 200:	ldr	r3, [sp, #12]
 204:	bl	0 <coda_set_error>
 208:	mvn	r0, #0
 20c:	str	r0, [fp, #-4]
 210:	b	220 <coda_bin_product_open+0x220>
 214:	b	218 <coda_bin_product_open+0x218>
 218:	movw	r0, #0
 21c:	str	r0, [fp, #-4]
 220:	ldr	r0, [fp, #-4]
 224:	mov	sp, fp
 228:	pop	{fp, pc}
 22c:	.word	0x000001f8

00000230 <coda_bin_product_close>:
 230:	push	{fp, lr}
 234:	mov	fp, sp
 238:	sub	sp, sp, #8
 23c:	str	r0, [sp, #4]
 240:	ldr	r0, [sp, #4]
 244:	ldr	r0, [r0, #52]	; 0x34
 248:	cmp	r0, #0
 24c:	beq	290 <coda_bin_product_close+0x60>
 250:	ldr	r0, [sp, #4]
 254:	ldr	r0, [r0, #48]	; 0x30
 258:	movw	r1, #0
 25c:	cmp	r0, r1
 260:	beq	280 <coda_bin_product_close+0x50>
 264:	ldr	r0, [sp, #4]
 268:	ldr	r1, [r0, #8]
 26c:	ldr	r0, [r0, #48]	; 0x30
 270:	bl	0 <munmap>
 274:	ldr	r1, [sp, #4]
 278:	movw	r2, #0
 27c:	str	r2, [r1, #48]	; 0x30
 280:	ldr	r0, [sp, #4]
 284:	movw	r1, #0
 288:	str	r1, [r0, #52]	; 0x34
 28c:	b	2bc <coda_bin_product_close+0x8c>
 290:	ldr	r0, [sp, #4]
 294:	ldr	r0, [r0, #56]	; 0x38
 298:	cmp	r0, #0
 29c:	blt	2b8 <coda_bin_product_close+0x88>
 2a0:	ldr	r0, [sp, #4]
 2a4:	ldr	r0, [r0, #56]	; 0x38
 2a8:	bl	0 <close>
 2ac:	ldr	r1, [sp, #4]
 2b0:	mvn	r2, #0
 2b4:	str	r2, [r1, #56]	; 0x38
 2b8:	b	2bc <coda_bin_product_close+0x8c>
 2bc:	movw	r0, #0
 2c0:	mov	sp, fp
 2c4:	pop	{fp, pc}

000002c8 <coda_bin_open>:
 2c8:	push	{fp, lr}
 2cc:	mov	fp, sp
 2d0:	sub	sp, sp, #32
 2d4:	ldr	r1, [fp, #8]
 2d8:	str	r0, [fp, #-8]
 2dc:	str	r3, [sp, #20]
 2e0:	str	r2, [sp, #16]
 2e4:	movw	r0, #64	; 0x40
 2e8:	str	r1, [sp, #8]
 2ec:	bl	0 <malloc>
 2f0:	str	r0, [sp, #12]
 2f4:	ldr	r0, [sp, #12]
 2f8:	movw	r1, #0
 2fc:	cmp	r0, r1
 300:	bne	334 <coda_bin_open+0x6c>
 304:	mvn	r0, #0
 308:	movw	r1, #0
 30c:	movt	r1, #0
 310:	movw	r2, #64	; 0x40
 314:	movw	r3, #0
 318:	movt	r3, #0
 31c:	movw	ip, #241	; 0xf1
 320:	str	ip, [sp]
 324:	bl	0 <coda_set_error>
 328:	mvn	r0, #0
 32c:	str	r0, [fp, #-4]
 330:	b	46c <coda_bin_open+0x1a4>
 334:	ldr	r0, [sp, #12]
 338:	mov	r1, #0
 33c:	str	r1, [r0]
 340:	ldr	r0, [sp, #16]
 344:	ldr	r2, [sp, #20]
 348:	ldr	r3, [sp, #12]
 34c:	str	r2, [r3, #12]
 350:	str	r0, [r3, #8]
 354:	ldr	r0, [sp, #12]
 358:	mov	r2, #1
 35c:	str	r2, [r0, #16]
 360:	ldr	r0, [sp, #12]
 364:	str	r1, [r0, #20]
 368:	ldr	r0, [sp, #12]
 36c:	str	r1, [r0, #24]
 370:	ldr	r0, [sp, #12]
 374:	str	r1, [r0, #28]
 378:	ldr	r0, [sp, #12]
 37c:	str	r1, [r0, #32]
 380:	ldr	r0, [sp, #12]
 384:	str	r1, [r0, #44]	; 0x2c
 388:	str	r1, [r0, #40]	; 0x28
 38c:	ldr	r0, [sp, #12]
 390:	movw	r1, #0
 394:	str	r1, [r0, #48]	; 0x30
 398:	ldr	r0, [sp, #12]
 39c:	str	r1, [r0, #52]	; 0x34
 3a0:	ldr	r0, [sp, #12]
 3a4:	mvn	r1, #0
 3a8:	str	r1, [r0, #56]	; 0x38
 3ac:	bl	0 <coda_type_raw_file_singleton>
 3b0:	ldr	r1, [sp, #12]
 3b4:	str	r0, [r1, #20]
 3b8:	ldr	r0, [sp, #12]
 3bc:	ldr	r0, [r0, #20]
 3c0:	movw	r1, #0
 3c4:	cmp	r0, r1
 3c8:	bne	3e0 <coda_bin_open+0x118>
 3cc:	ldr	r0, [sp, #12]
 3d0:	bl	478 <coda_bin_close>
 3d4:	mvn	r1, #0
 3d8:	str	r1, [fp, #-4]
 3dc:	b	46c <coda_bin_open+0x1a4>
 3e0:	ldr	r0, [fp, #-8]
 3e4:	bl	0 <strdup>
 3e8:	ldr	r1, [sp, #12]
 3ec:	str	r0, [r1]
 3f0:	ldr	r0, [sp, #12]
 3f4:	ldr	r0, [r0]
 3f8:	movw	r1, #0
 3fc:	cmp	r0, r1
 400:	bne	434 <coda_bin_open+0x16c>
 404:	mvn	r0, #0
 408:	movw	r1, #0
 40c:	movt	r1, #0
 410:	movw	r2, #0
 414:	movt	r2, #0
 418:	movw	r3, #268	; 0x10c
 41c:	bl	0 <coda_set_error>
 420:	ldr	r0, [sp, #12]
 424:	bl	478 <coda_bin_close>
 428:	mvn	r1, #0
 42c:	str	r1, [fp, #-4]
 430:	b	46c <coda_bin_open+0x1a4>
 434:	ldr	r0, [sp, #12]
 438:	bl	0 <coda_bin_product_open>
 43c:	cmp	r0, #0
 440:	beq	458 <coda_bin_open+0x190>
 444:	ldr	r0, [sp, #12]
 448:	bl	478 <coda_bin_close>
 44c:	mvn	r1, #0
 450:	str	r1, [fp, #-4]
 454:	b	46c <coda_bin_open+0x1a4>
 458:	ldr	r0, [sp, #12]
 45c:	ldr	r1, [fp, #8]
 460:	str	r0, [r1]
 464:	movw	r0, #0
 468:	str	r0, [fp, #-4]
 46c:	ldr	r0, [fp, #-4]
 470:	mov	sp, fp
 474:	pop	{fp, pc}

00000478 <coda_bin_close>:
 478:	push	{fp, lr}
 47c:	mov	fp, sp
 480:	sub	sp, sp, #16
 484:	str	r0, [sp, #8]
 488:	ldr	r0, [sp, #8]
 48c:	str	r0, [sp, #4]
 490:	ldr	r0, [sp, #4]
 494:	bl	230 <coda_bin_product_close>
 498:	cmp	r0, #0
 49c:	beq	4ac <coda_bin_close+0x34>
 4a0:	mvn	r0, #0
 4a4:	str	r0, [fp, #-4]
 4a8:	b	4dc <coda_bin_close+0x64>
 4ac:	ldr	r0, [sp, #4]
 4b0:	ldr	r0, [r0]
 4b4:	movw	r1, #0
 4b8:	cmp	r0, r1
 4bc:	beq	4cc <coda_bin_close+0x54>
 4c0:	ldr	r0, [sp, #4]
 4c4:	ldr	r0, [r0]
 4c8:	bl	0 <free>
 4cc:	ldr	r0, [sp, #4]
 4d0:	bl	0 <free>
 4d4:	movw	r0, #0
 4d8:	str	r0, [fp, #-4]
 4dc:	ldr	r0, [fp, #-4]
 4e0:	mov	sp, fp
 4e4:	pop	{fp, pc}

000004e8 <coda_bin_reopen_with_definition>:
 4e8:	push	{fp, lr}
 4ec:	mov	fp, sp
 4f0:	sub	sp, sp, #16
 4f4:	str	r0, [fp, #-4]
 4f8:	str	r1, [sp, #8]
 4fc:	ldr	r0, [fp, #-4]
 500:	ldr	r0, [r0]
 504:	str	r0, [sp, #4]
 508:	ldr	r0, [sp, #8]
 50c:	movw	r1, #0
 510:	cmp	r0, r1
 514:	beq	51c <coda_bin_reopen_with_definition+0x34>
 518:	b	53c <coda_bin_reopen_with_definition+0x54>
 51c:	movw	r0, #0
 520:	movt	r0, #0
 524:	movw	r1, #0
 528:	movt	r1, #0
 52c:	movw	r2, #288	; 0x120
 530:	movw	r3, #0
 534:	movt	r3, #0
 538:	bl	0 <__assert_fail>
 53c:	ldr	r0, [sp, #4]
 540:	ldr	r0, [r0, #16]
 544:	cmp	r0, #1
 548:	bne	550 <coda_bin_reopen_with_definition+0x68>
 54c:	b	570 <coda_bin_reopen_with_definition+0x88>
 550:	movw	r0, #0
 554:	movt	r0, #0
 558:	movw	r1, #0
 55c:	movt	r1, #0
 560:	movw	r2, #289	; 0x121
 564:	movw	r3, #0
 568:	movt	r3, #0
 56c:	bl	0 <__assert_fail>
 570:	ldr	r0, [sp, #8]
 574:	ldr	r0, [r0]
 578:	cmp	r0, #1
 57c:	bne	584 <coda_bin_reopen_with_definition+0x9c>
 580:	b	5a4 <coda_bin_reopen_with_definition+0xbc>
 584:	movw	r0, #0
 588:	movt	r0, #0
 58c:	movw	r1, #0
 590:	movt	r1, #0
 594:	movw	r2, #290	; 0x122
 598:	movw	r3, #0
 59c:	movt	r3, #0
 5a0:	bl	0 <__assert_fail>
 5a4:	ldr	r0, [sp, #8]
 5a8:	ldr	r0, [r0, #28]
 5ac:	ldr	r1, [sp, #4]
 5b0:	str	r0, [r1, #20]
 5b4:	ldr	r0, [sp, #8]
 5b8:	ldr	r1, [sp, #4]
 5bc:	str	r0, [r1, #24]
 5c0:	movw	r0, #0
 5c4:	mov	sp, fp
 5c8:	pop	{fp, pc}
