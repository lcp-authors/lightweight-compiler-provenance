
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-xml.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_xml_reopen>:
   0:	strd	r4, [sp, #-20]!	; 0xffffffec
   4:	mov	r5, r0
   8:	mov	r0, #56	; 0x38
   c:	strd	r6, [sp, #8]
  10:	str	lr, [sp, #16]
  14:	sub	sp, sp, #12
  18:	bl	0 <malloc>
  1c:	subs	r4, r0, #0
  20:	beq	dc <coda_xml_reopen+0xdc>
  24:	ldr	r2, [r5]
  28:	mov	r3, #0
  2c:	mov	ip, #2
  30:	mov	r6, #0
  34:	mov	r7, #0
  38:	ldrd	r0, [r2, #8]
  3c:	str	r3, [r4]
  40:	strd	r0, [r4, #8]
  44:	str	ip, [r4, #16]
  48:	str	r3, [r4, #20]
  4c:	str	r3, [r4, #24]
  50:	str	r3, [r4, #28]
  54:	str	r3, [r4, #32]
  58:	strd	r6, [r4, #40]	; 0x28
  5c:	str	r3, [r4, #48]	; 0x30
  60:	str	r2, [r4, #52]	; 0x34
  64:	ldr	r0, [r2]
  68:	bl	0 <strdup>
  6c:	cmp	r0, #0
  70:	str	r0, [r4]
  74:	beq	b0 <coda_xml_reopen+0xb0>
  78:	mov	r0, r4
  7c:	bl	0 <coda_xml_parse>
  80:	cmp	r0, #0
  84:	streq	r4, [r5]
  88:	bne	a0 <coda_xml_reopen+0xa0>
  8c:	add	sp, sp, #12
  90:	ldrd	r4, [sp]
  94:	ldrd	r6, [sp, #8]
  98:	add	sp, sp, #16
  9c:	pop	{pc}		; (ldr pc, [sp], #4)
  a0:	mov	r0, r4
  a4:	bl	0 <coda_close>
  a8:	mvn	r0, #0
  ac:	b	8c <coda_xml_reopen+0x8c>
  b0:	mov	r3, #72	; 0x48
  b4:	mvn	r0, #0
  b8:	movw	r2, #0
  bc:	movt	r2, #0
  c0:	movw	r1, #0
  c4:	movt	r1, #0
  c8:	bl	0 <coda_set_error>
  cc:	mov	r0, r4
  d0:	bl	0 <coda_close>
  d4:	mvn	r0, #0
  d8:	b	8c <coda_xml_reopen+0x8c>
  dc:	mov	r0, #53	; 0x35
  e0:	mov	r2, #56	; 0x38
  e4:	movw	r3, #0
  e8:	movt	r3, #0
  ec:	movw	r1, #0
  f0:	movt	r1, #0
  f4:	str	r0, [sp]
  f8:	mvn	r0, #0
  fc:	bl	0 <coda_set_error>
 100:	ldr	r0, [r5]
 104:	bl	0 <coda_close>
 108:	mvn	r0, #0
 10c:	b	8c <coda_xml_reopen+0x8c>

00000110 <coda_xml_reopen_with_definition>:
 110:	strd	r4, [sp, #-16]!
 114:	subs	r5, r1, #0
 118:	ldr	r4, [r0]
 11c:	str	r6, [sp, #8]
 120:	str	lr, [sp, #12]
 124:	beq	198 <coda_xml_reopen_with_definition+0x88>
 128:	ldr	r3, [r4, #16]
 12c:	cmp	r3, #2
 130:	bne	1d8 <coda_xml_reopen_with_definition+0xc8>
 134:	ldr	r3, [r5]
 138:	cmp	r3, #2
 13c:	bne	1b8 <coda_xml_reopen_with_definition+0xa8>
 140:	ldr	r0, [r4, #20]
 144:	mov	r6, #0
 148:	bl	0 <coda_dynamic_type_delete>
 14c:	ldr	r0, [r4, #48]	; 0x30
 150:	mov	r2, #0
 154:	mov	r3, #0
 158:	str	r6, [r4, #20]
 15c:	strd	r2, [r4, #40]	; 0x28
 160:	cmp	r0, r6
 164:	beq	170 <coda_xml_reopen_with_definition+0x60>
 168:	bl	0 <free>
 16c:	str	r6, [r4, #48]	; 0x30
 170:	mov	r0, r4
 174:	str	r5, [r4, #24]
 178:	bl	0 <coda_xml_parse>
 17c:	adds	r0, r0, #0
 180:	ldrd	r4, [sp]
 184:	movne	r0, #1
 188:	ldr	r6, [sp, #8]
 18c:	add	sp, sp, #12
 190:	rsb	r0, r0, #0
 194:	pop	{pc}		; (ldr pc, [sp], #4)
 198:	movw	r3, #0
 19c:	movt	r3, #0
 1a0:	movw	r1, #0
 1a4:	movt	r1, #0
 1a8:	movw	r0, #0
 1ac:	movt	r0, #0
 1b0:	mov	r2, #92	; 0x5c
 1b4:	bl	0 <__assert_fail>
 1b8:	movw	r3, #0
 1bc:	movt	r3, #0
 1c0:	movw	r1, #0
 1c4:	movt	r1, #0
 1c8:	movw	r0, #0
 1cc:	movt	r0, #0
 1d0:	mov	r2, #94	; 0x5e
 1d4:	bl	0 <__assert_fail>
 1d8:	movw	r3, #0
 1dc:	movt	r3, #0
 1e0:	movw	r1, #0
 1e4:	movt	r1, #0
 1e8:	movw	r0, #0
 1ec:	movt	r0, #0
 1f0:	mov	r2, #93	; 0x5d
 1f4:	bl	0 <__assert_fail>

000001f8 <coda_xml_close>:
 1f8:	str	r4, [sp, #-8]!
 1fc:	mov	r4, r0
 200:	ldr	r0, [r0]
 204:	str	lr, [sp, #4]
 208:	cmp	r0, #0
 20c:	beq	214 <coda_xml_close+0x1c>
 210:	bl	0 <free>
 214:	ldr	r0, [r4, #20]
 218:	cmp	r0, #0
 21c:	beq	224 <coda_xml_close+0x2c>
 220:	bl	0 <coda_dynamic_type_delete>
 224:	ldr	r0, [r4, #48]	; 0x30
 228:	cmp	r0, #0
 22c:	beq	234 <coda_xml_close+0x3c>
 230:	bl	0 <free>
 234:	ldr	r0, [r4, #52]	; 0x34
 238:	cmp	r0, #0
 23c:	beq	244 <coda_xml_close+0x4c>
 240:	bl	0 <coda_bin_close>
 244:	mov	r0, r4
 248:	bl	0 <free>
 24c:	ldr	r4, [sp]
 250:	add	sp, sp, #4
 254:	mov	r0, #0
 258:	pop	{pc}		; (ldr pc, [sp], #4)

0000025c <coda_xml_cursor_set_product>:
 25c:	ldr	r2, [r1, #20]
 260:	mov	r3, r0
 264:	mvn	ip, #0
 268:	mov	r0, #1
 26c:	strd	r4, [sp, #-8]!
 270:	mov	r4, #0
 274:	mov	r5, #0
 278:	str	r1, [r3]
 27c:	stmib	r3, {r0, r2, ip}
 280:	mov	r0, #0
 284:	strd	r4, [r3, #16]
 288:	ldrd	r4, [sp]
 28c:	add	sp, sp, #8
 290:	bx	lr
