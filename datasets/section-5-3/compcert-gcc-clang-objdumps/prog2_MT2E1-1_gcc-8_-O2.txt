
../compcert-repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010c88 <.init>:
   10c88:	push	{r3, lr}
   10c8c:	bl	10f4c <_start@@Base+0x3c>
   10c90:	pop	{r3, pc}

Disassembly of section .plt:

00010c94 <calloc@plt-0x14>:
   10c94:	push	{lr}		; (str lr, [sp, #-4]!)
   10c98:	ldr	lr, [pc, #4]	; 10ca4 <calloc@plt-0x4>
   10c9c:	add	lr, pc, lr
   10ca0:	ldr	pc, [lr, #8]!
   10ca4:	andeq	r2, r1, ip, asr r3

00010ca8 <calloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #860]!	; 0x35c

00010cb4 <strcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #852]!	; 0x354

00010cc0 <printf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #844]!	; 0x34c

00010ccc <__isoc99_fscanf@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #836]!	; 0x344

00010cd8 <fopen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #828]!	; 0x33c

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #820]!	; 0x334

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #812]!	; 0x32c

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #804]!	; 0x324

00010d08 <strcpy@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #796]!	; 0x31c

00010d14 <puts@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #788]!	; 0x314

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #780]!	; 0x30c

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #772]!	; 0x304

00010d38 <__gmon_start__@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #764]!	; 0x2fc

00010d44 <strlen@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d50 <setvbuf@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #748]!	; 0x2ec

00010d5c <putchar@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #740]!	; 0x2e4

00010d68 <fclose@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #732]!	; 0x2dc

00010d74 <abort@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #724]!	; 0x2d4

Disassembly of section .text:

00010d80 <main@@Base>:
   10d80:	mov	r3, #0
   10d84:	movw	r1, #12384	; 0x3060
   10d88:	movt	r1, #2
   10d8c:	mov	r2, #2
   10d90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10d94:	ldr	r0, [r1]
   10d98:	mov	r1, r3
   10d9c:	movw	r5, #8416	; 0x20e0
   10da0:	movt	r5, #1
   10da4:	strd	r6, [sp, #8]
   10da8:	str	r8, [sp, #16]
   10dac:	str	lr, [sp, #20]
   10db0:	sub	sp, sp, #504	; 0x1f8
   10db4:	bl	10d50 <setvbuf@plt>
   10db8:	movw	r1, #8420	; 0x20e4
   10dbc:	movt	r1, #1
   10dc0:	movw	r0, #8424	; 0x20e8
   10dc4:	movt	r0, #1
   10dc8:	bl	10cd8 <fopen@plt>
   10dcc:	mov	r8, r0
   10dd0:	movw	r1, #8420	; 0x20e4
   10dd4:	movt	r1, #1
   10dd8:	movw	r0, #8436	; 0x20f4
   10ddc:	movt	r0, #1
   10de0:	bl	10cd8 <fopen@plt>
   10de4:	mov	r7, r0
   10de8:	movw	r0, #8448	; 0x2100
   10dec:	movt	r0, #1
   10df0:	bl	10d14 <puts@plt>
   10df4:	bl	110e8 <avl_nova@@Base>
   10df8:	mov	r4, r0
   10dfc:	b	10e04 <main@@Base+0x84>
   10e00:	bl	11554 <avl_insere@@Base>
   10e04:	mov	r1, r5
   10e08:	add	r2, sp, #4
   10e0c:	mov	r0, r8
   10e10:	bl	10ccc <__isoc99_fscanf@plt>
   10e14:	cmp	r0, #1
   10e18:	add	r1, sp, #4
   10e1c:	mov	r0, r4
   10e20:	beq	10e00 <main@@Base+0x80>
   10e24:	movw	r0, #8468	; 0x2114
   10e28:	movt	r0, #1
   10e2c:	bl	10cc0 <printf@plt>
   10e30:	mov	r0, r4
   10e34:	movw	r6, #8416	; 0x20e0
   10e38:	movt	r6, #1
   10e3c:	movw	r5, #8464	; 0x2110
   10e40:	movt	r5, #1
   10e44:	bl	11994 <avl_imprime@@Base>
   10e48:	movw	r0, #8488	; 0x2128
   10e4c:	movt	r0, #1
   10e50:	bl	10cc0 <printf@plt>
   10e54:	mov	r0, r4
   10e58:	movw	r1, #8512	; 0x2140
   10e5c:	movt	r1, #1
   10e60:	bl	11000 <avl_max_subarvore@@Base>
   10e64:	mov	r0, r4
   10e68:	bl	1189c <avl_apaga@@Base>
   10e6c:	movw	r0, #8516	; 0x2144
   10e70:	movt	r0, #1
   10e74:	bl	10d14 <puts@plt>
   10e78:	movw	r1, #8032	; 0x1f60
   10e7c:	movt	r1, #1
   10e80:	movw	r0, #601	; 0x259
   10e84:	bl	11a08 <tabela_nova@@Base>
   10e88:	mov	r4, r0
   10e8c:	b	10e94 <main@@Base+0x114>
   10e90:	bl	11b24 <tabela_adiciona@@Base>
   10e94:	add	r2, sp, #4
   10e98:	mov	r1, r6
   10e9c:	mov	r0, r7
   10ea0:	bl	10ccc <__isoc99_fscanf@plt>
   10ea4:	cmp	r0, #1
   10ea8:	mov	r2, r5
   10eac:	add	r1, sp, #4
   10eb0:	mov	r0, r4
   10eb4:	beq	10e90 <main@@Base+0x110>
   10eb8:	bl	11f90 <mostraTabela@@Base>
   10ebc:	movw	r1, #619	; 0x26b
   10ec0:	mov	r0, r4
   10ec4:	bl	1105c <tabela_copia@@Base>
   10ec8:	subs	r5, r0, #0
   10ecc:	beq	10ed4 <main@@Base+0x154>
   10ed0:	bl	11f90 <mostraTabela@@Base>
   10ed4:	mov	r0, r4
   10ed8:	bl	11a94 <tabela_apaga@@Base>
   10edc:	mov	r0, r5
   10ee0:	bl	11a94 <tabela_apaga@@Base>
   10ee4:	mov	r0, r8
   10ee8:	bl	10d68 <fclose@plt>
   10eec:	mov	r0, r7
   10ef0:	bl	10d68 <fclose@plt>
   10ef4:	mov	r0, #0
   10ef8:	add	sp, sp, #504	; 0x1f8
   10efc:	ldrd	r4, [sp]
   10f00:	ldrd	r6, [sp, #8]
   10f04:	ldr	r8, [sp, #16]
   10f08:	add	sp, sp, #20
   10f0c:	pop	{pc}		; (ldr pc, [sp], #4)

00010f10 <_start@@Base>:
   10f10:	mov	fp, #0
   10f14:	mov	lr, #0
   10f18:	pop	{r1}		; (ldr r1, [sp], #4)
   10f1c:	mov	r2, sp
   10f20:	push	{r2}		; (str r2, [sp, #-4]!)
   10f24:	push	{r0}		; (str r0, [sp, #-4]!)
   10f28:	ldr	ip, [pc, #16]	; 10f40 <_start@@Base+0x30>
   10f2c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f30:	ldr	r0, [pc, #12]	; 10f44 <_start@@Base+0x34>
   10f34:	ldr	r3, [pc, #12]	; 10f48 <_start@@Base+0x38>
   10f38:	bl	10d2c <__libc_start_main@plt>
   10f3c:	bl	10d74 <abort@plt>
   10f40:	ldrdeq	r2, [r1], -r0
   10f44:	andeq	r0, r1, r0, lsl #27
   10f48:	andeq	r2, r1, r0, ror r0
   10f4c:	ldr	r3, [pc, #20]	; 10f68 <_start@@Base+0x58>
   10f50:	ldr	r2, [pc, #20]	; 10f6c <_start@@Base+0x5c>
   10f54:	add	r3, pc, r3
   10f58:	ldr	r2, [r3, r2]
   10f5c:	cmp	r2, #0
   10f60:	bxeq	lr
   10f64:	b	10d38 <__gmon_start__@plt>
   10f68:	andeq	r2, r1, r4, lsr #1
   10f6c:	andeq	r0, r0, r4, asr r0
   10f70:	ldr	r0, [pc, #24]	; 10f90 <_start@@Base+0x80>
   10f74:	ldr	r3, [pc, #24]	; 10f94 <_start@@Base+0x84>
   10f78:	cmp	r3, r0
   10f7c:	bxeq	lr
   10f80:	ldr	r3, [pc, #16]	; 10f98 <_start@@Base+0x88>
   10f84:	cmp	r3, #0
   10f88:	bxeq	lr
   10f8c:	bx	r3
   10f90:	andeq	r3, r2, r0, rrx
   10f94:	andeq	r3, r2, r0, rrx
   10f98:	andeq	r0, r0, r0
   10f9c:	ldr	r0, [pc, #36]	; 10fc8 <_start@@Base+0xb8>
   10fa0:	ldr	r1, [pc, #36]	; 10fcc <_start@@Base+0xbc>
   10fa4:	sub	r1, r1, r0
   10fa8:	asr	r1, r1, #2
   10fac:	add	r1, r1, r1, lsr #31
   10fb0:	asrs	r1, r1, #1
   10fb4:	bxeq	lr
   10fb8:	ldr	r3, [pc, #16]	; 10fd0 <_start@@Base+0xc0>
   10fbc:	cmp	r3, #0
   10fc0:	bxeq	lr
   10fc4:	bx	r3
   10fc8:	andeq	r3, r2, r0, rrx
   10fcc:	andeq	r3, r2, r0, rrx
   10fd0:	andeq	r0, r0, r0
   10fd4:	push	{r4, lr}
   10fd8:	ldr	r4, [pc, #24]	; 10ff8 <_start@@Base+0xe8>
   10fdc:	ldrb	r3, [r4]
   10fe0:	cmp	r3, #0
   10fe4:	popne	{r4, pc}
   10fe8:	bl	10f70 <_start@@Base+0x60>
   10fec:	mov	r3, #1
   10ff0:	strb	r3, [r4]
   10ff4:	pop	{r4, pc}
   10ff8:	andeq	r3, r2, r4, rrx
   10ffc:	b	10f9c <_start@@Base+0x8c>

00011000 <avl_max_subarvore@@Base>:
   11000:	strd	r4, [sp, #-16]!
   11004:	mov	r5, r0
   11008:	str	r6, [sp, #8]
   1100c:	mov	r6, r1
   11010:	str	lr, [sp, #12]
   11014:	bl	110e8 <avl_nova@@Base>
   11018:	mov	r4, r0
   1101c:	mov	r1, r6
   11020:	mov	r0, r5
   11024:	bl	11338 <avl_pesquisa@@Base>
   11028:	str	r0, [r4]
   1102c:	mov	r0, r4
   11030:	bl	11138 <avl_max@@Base>
   11034:	mov	r1, r0
   11038:	movw	r0, #8416	; 0x20e0
   1103c:	movt	r0, #1
   11040:	bl	10cc0 <printf@plt>
   11044:	mov	r0, r4
   11048:	ldrd	r4, [sp]
   1104c:	ldr	r6, [sp, #8]
   11050:	ldr	lr, [sp, #12]
   11054:	add	sp, sp, #16
   11058:	b	10ce4 <free@plt>

0001105c <tabela_copia@@Base>:
   1105c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11060:	mov	r4, r0
   11064:	mov	r0, r1
   11068:	ldr	r1, [r4]
   1106c:	strd	r6, [sp, #8]
   11070:	str	lr, [sp, #16]
   11074:	sub	sp, sp, #12
   11078:	bl	11a08 <tabela_nova@@Base>
   1107c:	mov	r6, r0
   11080:	add	r1, sp, #4
   11084:	mov	r0, r4
   11088:	bl	11e60 <tabela_elementos@@Base>
   1108c:	ldr	r3, [sp, #4]
   11090:	mov	r7, r0
   11094:	cmp	r3, #0
   11098:	ble	110c8 <tabela_copia@@Base+0x6c>
   1109c:	mov	r4, r0
   110a0:	mov	r5, #0
   110a4:	add	r2, r4, #50	; 0x32
   110a8:	mov	r1, r4
   110ac:	mov	r0, r6
   110b0:	add	r5, r5, #1
   110b4:	bl	11b24 <tabela_adiciona@@Base>
   110b8:	ldr	r3, [sp, #4]
   110bc:	add	r4, r4, #150	; 0x96
   110c0:	cmp	r3, r5
   110c4:	bgt	110a4 <tabela_copia@@Base+0x48>
   110c8:	mov	r0, r7
   110cc:	bl	10ce4 <free@plt>
   110d0:	mov	r0, r6
   110d4:	add	sp, sp, #12
   110d8:	ldrd	r4, [sp]
   110dc:	ldrd	r6, [sp, #8]
   110e0:	add	sp, sp, #16
   110e4:	pop	{pc}		; (ldr pc, [sp], #4)

000110e8 <avl_nova@@Base>:
   110e8:	mov	r0, #4
   110ec:	str	r4, [sp, #-8]!
   110f0:	str	lr, [sp, #4]
   110f4:	bl	10d20 <malloc@plt>
   110f8:	cmp	r0, #0
   110fc:	ldr	r4, [sp]
   11100:	add	sp, sp, #4
   11104:	movne	r3, #0
   11108:	strne	r3, [r0]
   1110c:	pop	{pc}		; (ldr pc, [sp], #4)

00011110 <avl_min@@Base>:
   11110:	cmp	r0, #0
   11114:	beq	11134 <avl_min@@Base+0x24>
   11118:	ldr	r2, [r0]
   1111c:	b	11124 <avl_min@@Base+0x14>
   11120:	mov	r2, r3
   11124:	ldr	r3, [r2, #4]
   11128:	cmp	r3, #0
   1112c:	bne	11120 <avl_min@@Base+0x10>
   11130:	ldr	r0, [r2]
   11134:	bx	lr

00011138 <avl_max@@Base>:
   11138:	cmp	r0, #0
   1113c:	beq	1115c <avl_max@@Base+0x24>
   11140:	ldr	r2, [r0]
   11144:	b	1114c <avl_max@@Base+0x14>
   11148:	mov	r2, r3
   1114c:	ldr	r3, [r2, #8]
   11150:	cmp	r3, #0
   11154:	bne	11148 <avl_max@@Base+0x10>
   11158:	ldr	r0, [r2]
   1115c:	bx	lr

00011160 <avl_altura@@Base>:
   11160:	cmp	r0, #0
   11164:	ldrne	r0, [r0, #12]
   11168:	mvneq	r0, #0
   1116c:	bx	lr

00011170 <max@@Base>:
   11170:	cmp	r1, r0
   11174:	movge	r0, r1
   11178:	bx	lr

0001117c <avl_novo_no@@Base>:
   1117c:	strd	r4, [sp, #-16]!
   11180:	mov	r5, r0
   11184:	mov	r0, #16
   11188:	str	r6, [sp, #8]
   1118c:	str	lr, [sp, #12]
   11190:	bl	10d20 <malloc@plt>
   11194:	mov	r4, r0
   11198:	mov	r0, r5
   1119c:	bl	10d44 <strlen@plt>
   111a0:	add	r6, r0, #1
   111a4:	mov	r0, r6
   111a8:	bl	10d20 <malloc@plt>
   111ac:	mov	r2, r6
   111b0:	mov	r1, r5
   111b4:	str	r0, [r4]
   111b8:	bl	10cf0 <memcpy@plt>
   111bc:	mov	r3, #0
   111c0:	mov	r0, r4
   111c4:	ldr	r6, [sp, #8]
   111c8:	str	r3, [r4, #4]
   111cc:	str	r3, [r4, #8]
   111d0:	str	r3, [r4, #12]
   111d4:	ldrd	r4, [sp]
   111d8:	add	sp, sp, #12
   111dc:	pop	{pc}		; (ldr pc, [sp], #4)

000111e0 <roda_direita@@Base>:
   111e0:	ldr	r2, [r0, #4]
   111e4:	ldr	r3, [r2, #8]
   111e8:	str	r0, [r2, #8]
   111ec:	cmp	r3, #0
   111f0:	str	r3, [r0, #4]
   111f4:	ldrne	r1, [r3, #12]
   111f8:	mvneq	r1, #0
   111fc:	ldr	r3, [r0, #8]
   11200:	ldr	ip, [r2, #4]
   11204:	cmp	r3, #0
   11208:	ldrne	r3, [r3, #12]
   1120c:	mvneq	r3, #0
   11210:	cmp	r3, r1
   11214:	movlt	r3, r1
   11218:	cmp	ip, #0
   1121c:	add	r3, r3, #1
   11220:	mvneq	r1, #0
   11224:	str	r3, [r0, #12]
   11228:	mov	r0, r2
   1122c:	ldrne	r1, [ip, #12]
   11230:	cmp	r3, r1
   11234:	movlt	r3, r1
   11238:	add	r3, r3, #1
   1123c:	str	r3, [r2, #12]
   11240:	bx	lr

00011244 <roda_esquerda@@Base>:
   11244:	ldr	r2, [r0, #8]
   11248:	ldr	r1, [r2, #4]
   1124c:	str	r0, [r2, #4]
   11250:	ldr	r3, [r0, #4]
   11254:	str	r1, [r0, #8]
   11258:	cmp	r3, #0
   1125c:	ldrne	ip, [r3, #12]
   11260:	mvneq	ip, #0
   11264:	cmp	r1, #0
   11268:	mvneq	r3, #0
   1126c:	ldrne	r3, [r1, #12]
   11270:	ldr	r1, [r2, #8]
   11274:	cmp	r3, ip
   11278:	movlt	r3, ip
   1127c:	add	r3, r3, #1
   11280:	cmp	r1, #0
   11284:	mvneq	r1, #0
   11288:	str	r3, [r0, #12]
   1128c:	mov	r0, r2
   11290:	ldrne	r1, [r1, #12]
   11294:	cmp	r3, r1
   11298:	movlt	r3, r1
   1129c:	add	r3, r3, #1
   112a0:	str	r3, [r2, #12]
   112a4:	bx	lr

000112a8 <calc_balanceamento@@Base>:
   112a8:	cmp	r0, #0
   112ac:	beq	112d4 <calc_balanceamento@@Base+0x2c>
   112b0:	ldr	r3, [r0, #8]
   112b4:	cmp	r3, #0
   112b8:	ldrne	r2, [r3, #12]
   112bc:	mvneq	r2, #0
   112c0:	ldr	r3, [r0, #4]
   112c4:	cmp	r3, #0
   112c8:	ldrne	r0, [r3, #12]
   112cc:	mvneq	r0, #0
   112d0:	sub	r0, r2, r0
   112d4:	bx	lr

000112d8 <avl_pesquisa_impl@@Base>:
   112d8:	strd	r4, [sp, #-16]!
   112dc:	subs	r4, r0, #0
   112e0:	movne	r5, r1
   112e4:	str	r6, [sp, #8]
   112e8:	str	lr, [sp, #12]
   112ec:	bne	11304 <avl_pesquisa_impl@@Base+0x2c>
   112f0:	b	11324 <avl_pesquisa_impl@@Base+0x4c>
   112f4:	beq	11324 <avl_pesquisa_impl@@Base+0x4c>
   112f8:	ldr	r4, [r4, #8]
   112fc:	cmp	r4, #0
   11300:	beq	11324 <avl_pesquisa_impl@@Base+0x4c>
   11304:	mov	r0, r5
   11308:	ldr	r1, [r4]
   1130c:	bl	10cb4 <strcmp@plt>
   11310:	cmp	r0, #0
   11314:	bge	112f4 <avl_pesquisa_impl@@Base+0x1c>
   11318:	ldr	r4, [r4, #4]
   1131c:	cmp	r4, #0
   11320:	bne	11304 <avl_pesquisa_impl@@Base+0x2c>
   11324:	mov	r0, r4
   11328:	ldrd	r4, [sp]
   1132c:	ldr	r6, [sp, #8]
   11330:	add	sp, sp, #12
   11334:	pop	{pc}		; (ldr pc, [sp], #4)

00011338 <avl_pesquisa@@Base>:
   11338:	cmp	r1, #0
   1133c:	cmpne	r0, #0
   11340:	beq	1134c <avl_pesquisa@@Base+0x14>
   11344:	ldr	r0, [r0]
   11348:	b	112d8 <avl_pesquisa_impl@@Base>
   1134c:	mov	r0, #0
   11350:	bx	lr

00011354 <avl_insere_impl@@Base>:
   11354:	strd	r4, [sp, #-16]!
   11358:	subs	r4, r0, #0
   1135c:	str	r6, [sp, #8]
   11360:	str	lr, [sp, #12]
   11364:	beq	11494 <avl_insere_impl@@Base+0x140>
   11368:	mov	r0, r1
   1136c:	mov	r5, r1
   11370:	ldr	r1, [r4]
   11374:	bl	10cb4 <strcmp@plt>
   11378:	cmp	r0, #0
   1137c:	blt	11430 <avl_insere_impl@@Base+0xdc>
   11380:	beq	113dc <avl_insere_impl@@Base+0x88>
   11384:	mov	r1, r5
   11388:	ldr	r0, [r4, #8]
   1138c:	bl	11354 <avl_insere_impl@@Base>
   11390:	ldr	r2, [r4, #4]
   11394:	str	r0, [r4, #8]
   11398:	cmp	r2, #0
   1139c:	beq	114c8 <avl_insere_impl@@Base+0x174>
   113a0:	cmp	r0, #0
   113a4:	ldr	r3, [r2, #12]
   113a8:	beq	114fc <avl_insere_impl@@Base+0x1a8>
   113ac:	ldr	r1, [r0, #12]
   113b0:	cmp	r3, r1
   113b4:	movlt	r3, r1
   113b8:	add	r3, r3, #1
   113bc:	str	r3, [r4, #12]
   113c0:	ldr	r3, [r0, #12]
   113c4:	ldr	r1, [r2, #12]
   113c8:	sub	r3, r3, r1
   113cc:	cmp	r3, #1
   113d0:	bgt	113f0 <avl_insere_impl@@Base+0x9c>
   113d4:	cmn	r3, #1
   113d8:	blt	1144c <avl_insere_impl@@Base+0xf8>
   113dc:	mov	r0, r4
   113e0:	ldrd	r4, [sp]
   113e4:	ldr	r6, [sp, #8]
   113e8:	add	sp, sp, #12
   113ec:	pop	{pc}		; (ldr pc, [sp], #4)
   113f0:	ldrd	r2, [r0, #4]
   113f4:	cmp	r3, #0
   113f8:	beq	1151c <avl_insere_impl@@Base+0x1c8>
   113fc:	cmp	r2, #0
   11400:	ldr	r3, [r3, #12]
   11404:	beq	1152c <avl_insere_impl@@Base+0x1d8>
   11408:	ldr	r2, [r2, #12]
   1140c:	sub	r3, r3, r2
   11410:	cmp	r3, #0
   11414:	blt	114ac <avl_insere_impl@@Base+0x158>
   11418:	mov	r0, r4
   1141c:	ldrd	r4, [sp]
   11420:	ldr	r6, [sp, #8]
   11424:	ldr	lr, [sp, #12]
   11428:	add	sp, sp, #16
   1142c:	b	11244 <roda_esquerda@@Base>
   11430:	mov	r1, r5
   11434:	ldr	r0, [r4, #4]
   11438:	bl	11354 <avl_insere_impl@@Base>
   1143c:	mov	r2, r0
   11440:	ldr	r0, [r4, #8]
   11444:	str	r2, [r4, #4]
   11448:	b	11398 <avl_insere_impl@@Base+0x44>
   1144c:	cmp	r2, #0
   11450:	beq	1147c <avl_insere_impl@@Base+0x128>
   11454:	ldmib	r2, {r1, r3}
   11458:	cmp	r3, #0
   1145c:	beq	1153c <avl_insere_impl@@Base+0x1e8>
   11460:	cmp	r1, #0
   11464:	ldr	r3, [r3, #12]
   11468:	beq	11534 <avl_insere_impl@@Base+0x1e0>
   1146c:	ldr	r1, [r1, #12]
   11470:	sub	r3, r3, r1
   11474:	cmp	r3, #0
   11478:	bgt	114b8 <avl_insere_impl@@Base+0x164>
   1147c:	mov	r0, r4
   11480:	ldrd	r4, [sp]
   11484:	ldr	r6, [sp, #8]
   11488:	ldr	lr, [sp, #12]
   1148c:	add	sp, sp, #16
   11490:	b	111e0 <roda_direita@@Base>
   11494:	mov	r0, r1
   11498:	ldrd	r4, [sp]
   1149c:	ldr	r6, [sp, #8]
   114a0:	ldr	lr, [sp, #12]
   114a4:	add	sp, sp, #16
   114a8:	b	1117c <avl_novo_no@@Base>
   114ac:	bl	111e0 <roda_direita@@Base>
   114b0:	str	r0, [r4, #8]
   114b4:	b	11418 <avl_insere_impl@@Base+0xc4>
   114b8:	mov	r0, r2
   114bc:	bl	11244 <roda_esquerda@@Base>
   114c0:	str	r0, [r4, #4]
   114c4:	b	1147c <avl_insere_impl@@Base+0x128>
   114c8:	cmp	r0, #0
   114cc:	beq	1154c <avl_insere_impl@@Base+0x1f8>
   114d0:	ldr	r3, [r0, #12]
   114d4:	orr	r3, r3, r3, asr #31
   114d8:	add	r3, r3, #1
   114dc:	str	r3, [r4, #12]
   114e0:	ldr	r3, [r0, #12]
   114e4:	add	r3, r3, #1
   114e8:	cmp	r3, #1
   114ec:	bgt	113f0 <avl_insere_impl@@Base+0x9c>
   114f0:	cmn	r3, #1
   114f4:	bge	113dc <avl_insere_impl@@Base+0x88>
   114f8:	b	1147c <avl_insere_impl@@Base+0x128>
   114fc:	orr	r3, r3, r3, asr #31
   11500:	add	r3, r3, #1
   11504:	str	r3, [r4, #12]
   11508:	ldr	r3, [r2, #12]
   1150c:	mvn	r3, r3
   11510:	cmp	r3, #1
   11514:	bgt	11418 <avl_insere_impl@@Base+0xc4>
   11518:	b	113d4 <avl_insere_impl@@Base+0x80>
   1151c:	cmp	r2, #0
   11520:	beq	11418 <avl_insere_impl@@Base+0xc4>
   11524:	mvn	r3, #0
   11528:	b	11408 <avl_insere_impl@@Base+0xb4>
   1152c:	mvn	r2, #0
   11530:	b	1140c <avl_insere_impl@@Base+0xb8>
   11534:	mvn	r1, #0
   11538:	b	11470 <avl_insere_impl@@Base+0x11c>
   1153c:	cmp	r1, #0
   11540:	beq	1147c <avl_insere_impl@@Base+0x128>
   11544:	mvn	r3, #0
   11548:	b	1146c <avl_insere_impl@@Base+0x118>
   1154c:	str	r0, [r4, #12]
   11550:	b	113dc <avl_insere_impl@@Base+0x88>

00011554 <avl_insere@@Base>:
   11554:	clz	r3, r1
   11558:	cmp	r0, #0
   1155c:	strd	r4, [sp, #-16]!
   11560:	lsr	r3, r3, #5
   11564:	moveq	r4, #1
   11568:	str	r6, [sp, #8]
   1156c:	str	lr, [sp, #12]
   11570:	movne	r4, r3
   11574:	cmp	r4, #0
   11578:	bne	115a0 <avl_insere@@Base+0x4c>
   1157c:	mov	r5, r0
   11580:	ldr	r0, [r0]
   11584:	bl	11354 <avl_insere_impl@@Base>
   11588:	str	r0, [r5]
   1158c:	mov	r0, r4
   11590:	ldrd	r4, [sp]
   11594:	ldr	r6, [sp, #8]
   11598:	add	sp, sp, #12
   1159c:	pop	{pc}		; (ldr pc, [sp], #4)
   115a0:	mvn	r4, #0
   115a4:	b	1158c <avl_insere@@Base+0x38>

000115a8 <avl_no_valormin@@Base>:
   115a8:	b	115b0 <avl_no_valormin@@Base+0x8>
   115ac:	mov	r0, r3
   115b0:	ldr	r3, [r0, #4]
   115b4:	cmp	r3, #0
   115b8:	bne	115ac <avl_no_valormin@@Base+0x4>
   115bc:	bx	lr

000115c0 <avl_no_valormax@@Base>:
   115c0:	b	115c8 <avl_no_valormax@@Base+0x8>
   115c4:	mov	r0, r3
   115c8:	ldr	r3, [r0, #8]
   115cc:	cmp	r3, #0
   115d0:	bne	115c4 <avl_no_valormax@@Base+0x4>
   115d4:	bx	lr

000115d8 <avl_remove_impl@@Base>:
   115d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   115dc:	subs	r5, r0, #0
   115e0:	strd	r6, [sp, #8]
   115e4:	str	r8, [sp, #16]
   115e8:	str	lr, [sp, #20]
   115ec:	beq	1170c <avl_remove_impl@@Base+0x134>
   115f0:	ldr	r7, [r5]
   115f4:	mov	r0, r1
   115f8:	mov	r6, r1
   115fc:	mov	r1, r7
   11600:	bl	10cb4 <strcmp@plt>
   11604:	cmp	r0, #0
   11608:	blt	1176c <avl_remove_impl@@Base+0x194>
   1160c:	ldr	r4, [r5, #8]
   11610:	bne	116b4 <avl_remove_impl@@Base+0xdc>
   11614:	ldr	r6, [r5, #4]
   11618:	cmp	r6, #0
   1161c:	beq	117ec <avl_remove_impl@@Base+0x214>
   11620:	cmp	r4, #0
   11624:	bne	11670 <avl_remove_impl@@Base+0x98>
   11628:	ldr	r0, [r6]
   1162c:	bl	10d44 <strlen@plt>
   11630:	add	r1, r0, #1
   11634:	mov	r0, r7
   11638:	bl	10cfc <realloc@plt>
   1163c:	str	r0, [r5]
   11640:	ldr	r1, [r6]
   11644:	bl	10d08 <strcpy@plt>
   11648:	ldrd	r0, [r6]
   1164c:	ldrd	r2, [r6, #8]
   11650:	stmib	r5, {r1, r2, r3}
   11654:	bl	10ce4 <free@plt>
   11658:	mov	r0, r6
   1165c:	bl	10ce4 <free@plt>
   11660:	ldr	r2, [r5, #4]
   11664:	ldr	r0, [r5, #8]
   11668:	b	116c8 <avl_remove_impl@@Base+0xf0>
   1166c:	mov	r4, r3
   11670:	ldr	r3, [r4, #4]
   11674:	cmp	r3, #0
   11678:	bne	1166c <avl_remove_impl@@Base+0x94>
   1167c:	ldr	r0, [r4]
   11680:	bl	10d44 <strlen@plt>
   11684:	add	r1, r0, #1
   11688:	mov	r0, r7
   1168c:	bl	10cfc <realloc@plt>
   11690:	str	r0, [r5]
   11694:	ldr	r1, [r4]
   11698:	bl	10d08 <strcpy@plt>
   1169c:	ldr	r1, [r4]
   116a0:	ldr	r0, [r5, #8]
   116a4:	bl	115d8 <avl_remove_impl@@Base>
   116a8:	str	r0, [r5, #8]
   116ac:	ldr	r2, [r5, #4]
   116b0:	b	116c8 <avl_remove_impl@@Base+0xf0>
   116b4:	mov	r1, r6
   116b8:	mov	r0, r4
   116bc:	bl	115d8 <avl_remove_impl@@Base>
   116c0:	ldr	r2, [r5, #4]
   116c4:	str	r0, [r5, #8]
   116c8:	cmp	r2, #0
   116cc:	beq	11828 <avl_remove_impl@@Base+0x250>
   116d0:	cmp	r0, #0
   116d4:	ldr	r3, [r2, #12]
   116d8:	beq	11808 <avl_remove_impl@@Base+0x230>
   116dc:	ldr	r1, [r0, #12]
   116e0:	cmp	r3, r1
   116e4:	movlt	r3, r1
   116e8:	add	r3, r3, #1
   116ec:	str	r3, [r5, #12]
   116f0:	ldr	r3, [r0, #12]
   116f4:	ldr	r1, [r2, #12]
   116f8:	sub	r3, r3, r1
   116fc:	cmp	r3, #1
   11700:	bgt	11728 <avl_remove_impl@@Base+0x150>
   11704:	cmn	r3, #1
   11708:	blt	11788 <avl_remove_impl@@Base+0x1b0>
   1170c:	mov	r4, r5
   11710:	mov	r0, r4
   11714:	ldrd	r4, [sp]
   11718:	ldrd	r6, [sp, #8]
   1171c:	ldr	r8, [sp, #16]
   11720:	add	sp, sp, #20
   11724:	pop	{pc}		; (ldr pc, [sp], #4)
   11728:	ldrd	r2, [r0, #4]
   1172c:	cmp	r3, #0
   11730:	beq	11864 <avl_remove_impl@@Base+0x28c>
   11734:	cmp	r2, #0
   11738:	ldr	r3, [r3, #12]
   1173c:	beq	1185c <avl_remove_impl@@Base+0x284>
   11740:	ldr	r2, [r2, #12]
   11744:	sub	r3, r3, r2
   11748:	cmp	r3, #0
   1174c:	blt	117e0 <avl_remove_impl@@Base+0x208>
   11750:	mov	r0, r5
   11754:	ldrd	r4, [sp]
   11758:	ldrd	r6, [sp, #8]
   1175c:	ldr	r8, [sp, #16]
   11760:	ldr	lr, [sp, #20]
   11764:	add	sp, sp, #24
   11768:	b	11244 <roda_esquerda@@Base>
   1176c:	mov	r1, r6
   11770:	ldr	r0, [r5, #4]
   11774:	bl	115d8 <avl_remove_impl@@Base>
   11778:	mov	r2, r0
   1177c:	ldr	r0, [r5, #8]
   11780:	str	r2, [r5, #4]
   11784:	b	116c8 <avl_remove_impl@@Base+0xf0>
   11788:	cmp	r2, #0
   1178c:	beq	117c4 <avl_remove_impl@@Base+0x1ec>
   11790:	ldmib	r2, {r1, r3}
   11794:	cmp	r3, #0
   11798:	beq	1187c <avl_remove_impl@@Base+0x2a4>
   1179c:	cmp	r1, #0
   117a0:	ldr	r3, [r3, #12]
   117a4:	beq	11874 <avl_remove_impl@@Base+0x29c>
   117a8:	ldr	r1, [r1, #12]
   117ac:	sub	r3, r3, r1
   117b0:	cmp	r3, #0
   117b4:	ble	117c4 <avl_remove_impl@@Base+0x1ec>
   117b8:	mov	r0, r2
   117bc:	bl	11244 <roda_esquerda@@Base>
   117c0:	str	r0, [r5, #4]
   117c4:	mov	r0, r5
   117c8:	ldrd	r4, [sp]
   117cc:	ldrd	r6, [sp, #8]
   117d0:	ldr	r8, [sp, #16]
   117d4:	ldr	lr, [sp, #20]
   117d8:	add	sp, sp, #24
   117dc:	b	111e0 <roda_direita@@Base>
   117e0:	bl	111e0 <roda_direita@@Base>
   117e4:	str	r0, [r5, #8]
   117e8:	b	11750 <avl_remove_impl@@Base+0x178>
   117ec:	cmp	r4, #0
   117f0:	bne	11894 <avl_remove_impl@@Base+0x2bc>
   117f4:	mov	r0, r7
   117f8:	bl	10ce4 <free@plt>
   117fc:	mov	r0, r5
   11800:	bl	10ce4 <free@plt>
   11804:	b	11710 <avl_remove_impl@@Base+0x138>
   11808:	orr	r3, r3, r3, asr #31
   1180c:	add	r3, r3, #1
   11810:	str	r3, [r5, #12]
   11814:	ldr	r3, [r2, #12]
   11818:	mvn	r3, r3
   1181c:	cmp	r3, #1
   11820:	bgt	11750 <avl_remove_impl@@Base+0x178>
   11824:	b	11704 <avl_remove_impl@@Base+0x12c>
   11828:	cmp	r0, #0
   1182c:	beq	1188c <avl_remove_impl@@Base+0x2b4>
   11830:	ldr	r3, [r0, #12]
   11834:	orr	r3, r3, r3, asr #31
   11838:	add	r3, r3, #1
   1183c:	str	r3, [r5, #12]
   11840:	ldr	r3, [r0, #12]
   11844:	add	r3, r3, #1
   11848:	cmp	r3, #1
   1184c:	bgt	11728 <avl_remove_impl@@Base+0x150>
   11850:	cmn	r3, #1
   11854:	bge	1170c <avl_remove_impl@@Base+0x134>
   11858:	b	117c4 <avl_remove_impl@@Base+0x1ec>
   1185c:	mvn	r2, #0
   11860:	b	11744 <avl_remove_impl@@Base+0x16c>
   11864:	cmp	r2, #0
   11868:	beq	11750 <avl_remove_impl@@Base+0x178>
   1186c:	mvn	r3, #0
   11870:	b	11740 <avl_remove_impl@@Base+0x168>
   11874:	mvn	r1, #0
   11878:	b	117ac <avl_remove_impl@@Base+0x1d4>
   1187c:	cmp	r1, #0
   11880:	beq	117c4 <avl_remove_impl@@Base+0x1ec>
   11884:	mvn	r3, #0
   11888:	b	117a8 <avl_remove_impl@@Base+0x1d0>
   1188c:	str	r0, [r5, #12]
   11890:	b	1170c <avl_remove_impl@@Base+0x134>
   11894:	mov	r6, r4
   11898:	b	11628 <avl_remove_impl@@Base+0x50>

0001189c <avl_apaga@@Base>:
   1189c:	str	r4, [sp, #-8]!
   118a0:	subs	r4, r0, #0
   118a4:	str	lr, [sp, #4]
   118a8:	beq	118e8 <avl_apaga@@Base+0x4c>
   118ac:	ldr	r3, [r4]
   118b0:	cmp	r3, #0
   118b4:	beq	118d4 <avl_apaga@@Base+0x38>
   118b8:	mov	r0, r3
   118bc:	ldr	r1, [r3]
   118c0:	bl	115d8 <avl_remove_impl@@Base>
   118c4:	cmp	r0, #0
   118c8:	mov	r3, r0
   118cc:	str	r0, [r4]
   118d0:	bne	118b8 <avl_apaga@@Base+0x1c>
   118d4:	mov	r0, r4
   118d8:	ldr	r4, [sp]
   118dc:	ldr	lr, [sp, #4]
   118e0:	add	sp, sp, #8
   118e4:	b	10ce4 <free@plt>
   118e8:	ldr	r4, [sp]
   118ec:	add	sp, sp, #4
   118f0:	pop	{pc}		; (ldr pc, [sp], #4)

000118f4 <avl_remove@@Base>:
   118f4:	clz	r3, r1
   118f8:	cmp	r0, #0
   118fc:	strd	r4, [sp, #-16]!
   11900:	lsr	r3, r3, #5
   11904:	moveq	r4, #1
   11908:	str	r6, [sp, #8]
   1190c:	str	lr, [sp, #12]
   11910:	movne	r4, r3
   11914:	cmp	r4, #0
   11918:	bne	11940 <avl_remove@@Base+0x4c>
   1191c:	mov	r5, r0
   11920:	ldr	r0, [r0]
   11924:	bl	115d8 <avl_remove_impl@@Base>
   11928:	str	r0, [r5]
   1192c:	mov	r0, r4
   11930:	ldrd	r4, [sp]
   11934:	ldr	r6, [sp, #8]
   11938:	add	sp, sp, #12
   1193c:	pop	{pc}		; (ldr pc, [sp], #4)
   11940:	mvn	r4, #0
   11944:	b	1192c <avl_remove@@Base+0x38>

00011948 <avl_preordem_impl@@Base>:
   11948:	strd	r4, [sp, #-16]!
   1194c:	subs	r4, r0, #0
   11950:	str	r6, [sp, #8]
   11954:	str	lr, [sp, #12]
   11958:	beq	11984 <avl_preordem_impl@@Base+0x3c>
   1195c:	movw	r5, #8536	; 0x2158
   11960:	movt	r5, #1
   11964:	mov	r0, r5
   11968:	ldr	r1, [r4]
   1196c:	bl	10cc0 <printf@plt>
   11970:	ldr	r0, [r4, #4]
   11974:	bl	11948 <avl_preordem_impl@@Base>
   11978:	ldr	r4, [r4, #8]
   1197c:	cmp	r4, #0
   11980:	bne	11964 <avl_preordem_impl@@Base+0x1c>
   11984:	ldrd	r4, [sp]
   11988:	ldr	r6, [sp, #8]
   1198c:	add	sp, sp, #12
   11990:	pop	{pc}		; (ldr pc, [sp], #4)

00011994 <avl_imprime@@Base>:
   11994:	cmp	r0, #0
   11998:	bxeq	lr
   1199c:	str	r4, [sp, #-8]!
   119a0:	ldr	r0, [r0]
   119a4:	str	lr, [sp, #4]
   119a8:	bl	11948 <avl_preordem_impl@@Base>
   119ac:	mov	r0, #10
   119b0:	ldr	r4, [sp]
   119b4:	ldr	lr, [sp, #4]
   119b8:	add	sp, sp, #8
   119bc:	b	10d5c <putchar@plt>
   119c0:	ldr	r1, [r0, #8]
   119c4:	cmp	r1, #0
   119c8:	ble	11a00 <avl_imprime@@Base+0x6c>
   119cc:	ldr	r2, [r0, #4]
   119d0:	mov	r0, #0
   119d4:	add	r1, r2, r1, lsl #2
   119d8:	ldr	r3, [r2], #4
   119dc:	cmp	r3, #0
   119e0:	beq	119f4 <avl_imprime@@Base+0x60>
   119e4:	ldr	r3, [r3, #4]
   119e8:	add	r0, r0, #1
   119ec:	cmp	r3, #0
   119f0:	bne	119e4 <avl_imprime@@Base+0x50>
   119f4:	cmp	r2, r1
   119f8:	bne	119d8 <avl_imprime@@Base+0x44>
   119fc:	bx	lr
   11a00:	mov	r0, #0
   11a04:	bx	lr

00011a08 <tabela_nova@@Base>:
   11a08:	strd	r4, [sp, #-16]!
   11a0c:	str	r6, [sp, #8]
   11a10:	subs	r6, r0, #0
   11a14:	movle	r3, #1
   11a18:	movgt	r3, #0
   11a1c:	str	lr, [sp, #12]
   11a20:	cmp	r1, #0
   11a24:	moveq	r3, #1
   11a28:	cmp	r3, #0
   11a2c:	bne	11a7c <tabela_nova@@Base+0x74>
   11a30:	mov	r0, #12
   11a34:	mov	r4, r1
   11a38:	bl	10d20 <malloc@plt>
   11a3c:	subs	r5, r0, #0
   11a40:	beq	11a7c <tabela_nova@@Base+0x74>
   11a44:	mov	r1, #4
   11a48:	mov	r0, r6
   11a4c:	bl	10ca8 <calloc@plt>
   11a50:	cmp	r0, #0
   11a54:	mov	r3, r0
   11a58:	str	r0, [r5, #4]
   11a5c:	strne	r4, [r5]
   11a60:	strne	r6, [r5, #8]
   11a64:	beq	11a84 <tabela_nova@@Base+0x7c>
   11a68:	mov	r0, r5
   11a6c:	ldrd	r4, [sp]
   11a70:	ldr	r6, [sp, #8]
   11a74:	add	sp, sp, #12
   11a78:	pop	{pc}		; (ldr pc, [sp], #4)
   11a7c:	mov	r5, #0
   11a80:	b	11a68 <tabela_nova@@Base+0x60>
   11a84:	mov	r0, r5
   11a88:	mov	r5, r3
   11a8c:	bl	10ce4 <free@plt>
   11a90:	b	11a68 <tabela_nova@@Base+0x60>

00011a94 <tabela_apaga@@Base>:
   11a94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a98:	strd	r6, [sp, #8]
   11a9c:	subs	r7, r0, #0
   11aa0:	str	r8, [sp, #16]
   11aa4:	str	lr, [sp, #20]
   11aa8:	beq	11b10 <tabela_apaga@@Base+0x7c>
   11aac:	ldmib	r7, {r0, r3}
   11ab0:	cmp	r3, #0
   11ab4:	ble	11af0 <tabela_apaga@@Base+0x5c>
   11ab8:	mov	r6, #0
   11abc:	ldr	r4, [r0, r6, lsl #2]
   11ac0:	cmp	r4, #0
   11ac4:	beq	11ae4 <tabela_apaga@@Base+0x50>
   11ac8:	ldm	r4, {r0, r5}
   11acc:	bl	10ce4 <free@plt>
   11ad0:	mov	r0, r4
   11ad4:	bl	10ce4 <free@plt>
   11ad8:	subs	r4, r5, #0
   11adc:	bne	11ac8 <tabela_apaga@@Base+0x34>
   11ae0:	ldmib	r7, {r0, r3}
   11ae4:	add	r6, r6, #1
   11ae8:	cmp	r3, r6
   11aec:	bgt	11abc <tabela_apaga@@Base+0x28>
   11af0:	bl	10ce4 <free@plt>
   11af4:	mov	r0, r7
   11af8:	ldrd	r4, [sp]
   11afc:	ldrd	r6, [sp, #8]
   11b00:	ldr	r8, [sp, #16]
   11b04:	ldr	lr, [sp, #20]
   11b08:	add	sp, sp, #24
   11b0c:	b	10ce4 <free@plt>
   11b10:	ldrd	r4, [sp]
   11b14:	ldrd	r6, [sp, #8]
   11b18:	ldr	r8, [sp, #16]
   11b1c:	add	sp, sp, #20
   11b20:	pop	{pc}		; (ldr pc, [sp], #4)

00011b24 <tabela_adiciona@@Base>:
   11b24:	cmp	r1, #0
   11b28:	clz	r3, r2
   11b2c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b30:	lsr	r3, r3, #5
   11b34:	moveq	r3, #1
   11b38:	cmp	r0, #0
   11b3c:	moveq	r3, #1
   11b40:	strd	r6, [sp, #8]
   11b44:	cmp	r3, #0
   11b48:	strd	r8, [sp, #16]
   11b4c:	str	sl, [sp, #24]
   11b50:	str	lr, [sp, #28]
   11b54:	bne	11c28 <tabela_adiciona@@Base+0x104>
   11b58:	mov	r4, r0
   11b5c:	mov	r6, r1
   11b60:	mov	r0, r1
   11b64:	ldr	r3, [r4]
   11b68:	mov	r8, r2
   11b6c:	ldr	r1, [r4, #8]
   11b70:	blx	r3
   11b74:	ldr	sl, [r4, #4]
   11b78:	mov	r9, r0
   11b7c:	ldr	r4, [sl, r0, lsl #2]
   11b80:	cmp	r4, #0
   11b84:	bne	11b98 <tabela_adiciona@@Base+0x74>
   11b88:	b	11bd8 <tabela_adiciona@@Base+0xb4>
   11b8c:	ldr	r4, [r4, #4]
   11b90:	cmp	r4, #0
   11b94:	beq	11bd8 <tabela_adiciona@@Base+0xb4>
   11b98:	ldr	r5, [r4]
   11b9c:	mov	r1, r6
   11ba0:	mov	r0, r5
   11ba4:	bl	10cb4 <strcmp@plt>
   11ba8:	subs	r7, r0, #0
   11bac:	bne	11b8c <tabela_adiciona@@Base+0x68>
   11bb0:	mov	r1, r8
   11bb4:	add	r0, r5, #50	; 0x32
   11bb8:	bl	10d08 <strcpy@plt>
   11bbc:	mov	r0, r7
   11bc0:	ldrd	r4, [sp]
   11bc4:	ldrd	r6, [sp, #8]
   11bc8:	ldrd	r8, [sp, #16]
   11bcc:	ldr	sl, [sp, #24]
   11bd0:	add	sp, sp, #28
   11bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd8:	mov	r0, #8
   11bdc:	bl	10d20 <malloc@plt>
   11be0:	subs	r4, r0, #0
   11be4:	beq	11c28 <tabela_adiciona@@Base+0x104>
   11be8:	mov	r0, #150	; 0x96
   11bec:	bl	10d20 <malloc@plt>
   11bf0:	cmp	r0, #0
   11bf4:	mov	r5, r0
   11bf8:	str	r0, [r4]
   11bfc:	beq	11c28 <tabela_adiciona@@Base+0x104>
   11c00:	mov	r1, r6
   11c04:	mov	r7, #0
   11c08:	bl	10d08 <strcpy@plt>
   11c0c:	mov	r1, r8
   11c10:	add	r0, r5, #50	; 0x32
   11c14:	bl	10d08 <strcpy@plt>
   11c18:	ldr	r3, [sl, r9, lsl #2]
   11c1c:	str	r3, [r4, #4]
   11c20:	str	r4, [sl, r9, lsl #2]
   11c24:	b	11bbc <tabela_adiciona@@Base+0x98>
   11c28:	mvn	r7, #1
   11c2c:	b	11bbc <tabela_adiciona@@Base+0x98>

00011c30 <tabela_remove@@Base>:
   11c30:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11c34:	subs	r4, r0, #0
   11c38:	strd	r6, [sp, #8]
   11c3c:	strd	r8, [sp, #16]
   11c40:	str	sl, [sp, #24]
   11c44:	str	lr, [sp, #28]
   11c48:	beq	11ce4 <tabela_remove@@Base+0xb4>
   11c4c:	mov	r0, r1
   11c50:	mov	r6, r1
   11c54:	ldr	r3, [r4]
   11c58:	ldr	r1, [r4, #8]
   11c5c:	blx	r3
   11c60:	ldr	sl, [r4, #4]
   11c64:	mov	r9, r0
   11c68:	ldr	r4, [sl, r0, lsl #2]
   11c6c:	cmp	r4, #0
   11c70:	beq	11cc4 <tabela_remove@@Base+0x94>
   11c74:	mov	r8, #0
   11c78:	b	11c88 <tabela_remove@@Base+0x58>
   11c7c:	mov	r8, r4
   11c80:	subs	r4, r3, #0
   11c84:	beq	11cc4 <tabela_remove@@Base+0x94>
   11c88:	ldr	r5, [r4]
   11c8c:	mov	r1, r6
   11c90:	mov	r0, r5
   11c94:	bl	10cb4 <strcmp@plt>
   11c98:	subs	r7, r0, #0
   11c9c:	ldr	r3, [r4, #4]
   11ca0:	bne	11c7c <tabela_remove@@Base+0x4c>
   11ca4:	cmp	r8, #0
   11ca8:	mov	r0, r5
   11cac:	strne	r3, [r8, #4]
   11cb0:	streq	r3, [sl, r9, lsl #2]
   11cb4:	bl	10ce4 <free@plt>
   11cb8:	mov	r0, r4
   11cbc:	bl	10ce4 <free@plt>
   11cc0:	b	11cc8 <tabela_remove@@Base+0x98>
   11cc4:	mvn	r7, #2
   11cc8:	mov	r0, r7
   11ccc:	ldrd	r4, [sp]
   11cd0:	ldrd	r6, [sp, #8]
   11cd4:	ldrd	r8, [sp, #16]
   11cd8:	ldr	sl, [sp, #24]
   11cdc:	add	sp, sp, #28
   11ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce4:	mvn	r7, #1
   11ce8:	b	11cc8 <tabela_remove@@Base+0x98>

00011cec <tabela_valor@@Base>:
   11cec:	strd	r4, [sp, #-16]!
   11cf0:	subs	r4, r0, #0
   11cf4:	str	r6, [sp, #8]
   11cf8:	str	lr, [sp, #12]
   11cfc:	beq	11d60 <tabela_valor@@Base+0x74>
   11d00:	mov	r0, r1
   11d04:	mov	r6, r1
   11d08:	ldr	r3, [r4]
   11d0c:	ldr	r1, [r4, #8]
   11d10:	blx	r3
   11d14:	ldr	r3, [r4, #4]
   11d18:	ldr	r4, [r3, r0, lsl #2]
   11d1c:	cmp	r4, #0
   11d20:	bne	11d34 <tabela_valor@@Base+0x48>
   11d24:	b	11d60 <tabela_valor@@Base+0x74>
   11d28:	ldr	r4, [r4, #4]
   11d2c:	cmp	r4, #0
   11d30:	beq	11d60 <tabela_valor@@Base+0x74>
   11d34:	ldr	r5, [r4]
   11d38:	mov	r1, r6
   11d3c:	mov	r0, r5
   11d40:	bl	10cb4 <strcmp@plt>
   11d44:	cmp	r0, #0
   11d48:	bne	11d28 <tabela_valor@@Base+0x3c>
   11d4c:	add	r0, r5, #50	; 0x32
   11d50:	ldrd	r4, [sp]
   11d54:	ldr	r6, [sp, #8]
   11d58:	add	sp, sp, #12
   11d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d60:	ldrd	r4, [sp]
   11d64:	mov	r0, #0
   11d68:	ldr	r6, [sp, #8]
   11d6c:	add	sp, sp, #12
   11d70:	pop	{pc}		; (ldr pc, [sp], #4)

00011d74 <tabela_existe@@Base>:
   11d74:	cmp	r0, #0
   11d78:	cmpne	r1, #0
   11d7c:	beq	11da4 <tabela_existe@@Base+0x30>
   11d80:	str	r4, [sp, #-8]!
   11d84:	str	lr, [sp, #4]
   11d88:	bl	11cec <tabela_valor@@Base>
   11d8c:	cmp	r0, #0
   11d90:	ldr	r4, [sp]
   11d94:	add	sp, sp, #4
   11d98:	movne	r0, #1
   11d9c:	mvneq	r0, #2
   11da0:	pop	{pc}		; (ldr pc, [sp], #4)
   11da4:	mvn	r0, #1
   11da8:	bx	lr

00011dac <tabela_esvazia@@Base>:
   11dac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11db0:	strd	r6, [sp, #8]
   11db4:	strd	r8, [sp, #16]
   11db8:	subs	r8, r0, #0
   11dbc:	str	sl, [sp, #24]
   11dc0:	str	lr, [sp, #28]
   11dc4:	beq	11e44 <tabela_esvazia@@Base+0x98>
   11dc8:	ldr	r1, [r8, #8]
   11dcc:	cmp	r1, #0
   11dd0:	ble	11e28 <tabela_esvazia@@Base+0x7c>
   11dd4:	ldr	r3, [r8, #4]
   11dd8:	mov	r6, #0
   11ddc:	mov	r9, r6
   11de0:	ldr	r4, [r3, r6, lsl #2]
   11de4:	lsl	r7, r6, #2
   11de8:	add	r2, r3, r7
   11dec:	cmp	r4, #0
   11df0:	beq	11e18 <tabela_esvazia@@Base+0x6c>
   11df4:	ldm	r4, {r0, r5}
   11df8:	bl	10ce4 <free@plt>
   11dfc:	mov	r0, r4
   11e00:	bl	10ce4 <free@plt>
   11e04:	subs	r4, r5, #0
   11e08:	bne	11df4 <tabela_esvazia@@Base+0x48>
   11e0c:	ldr	r3, [r8, #4]
   11e10:	ldr	r1, [r8, #8]
   11e14:	add	r2, r3, r7
   11e18:	add	r6, r6, #1
   11e1c:	str	r9, [r2]
   11e20:	cmp	r1, r6
   11e24:	bgt	11de0 <tabela_esvazia@@Base+0x34>
   11e28:	mov	r0, #0
   11e2c:	ldrd	r4, [sp]
   11e30:	ldrd	r6, [sp, #8]
   11e34:	ldrd	r8, [sp, #16]
   11e38:	ldr	sl, [sp, #24]
   11e3c:	add	sp, sp, #28
   11e40:	pop	{pc}		; (ldr pc, [sp], #4)
   11e44:	mvn	r0, #1
   11e48:	b	11e2c <tabela_esvazia@@Base+0x80>

00011e4c <tabela_numelementos@@Base>:
   11e4c:	cmp	r0, #0
   11e50:	beq	11e58 <tabela_numelementos@@Base+0xc>
   11e54:	b	119c0 <avl_imprime@@Base+0x2c>
   11e58:	mvn	r0, #1
   11e5c:	bx	lr

00011e60 <tabela_elementos@@Base>:
   11e60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e64:	subs	r4, r0, #0
   11e68:	mvneq	r3, #1
   11e6c:	strd	r6, [sp, #8]
   11e70:	strd	r8, [sp, #16]
   11e74:	moveq	r9, r4
   11e78:	str	sl, [sp, #24]
   11e7c:	str	lr, [sp, #28]
   11e80:	streq	r3, [r1]
   11e84:	beq	11f10 <tabela_elementos@@Base+0xb0>
   11e88:	mov	r5, r1
   11e8c:	bl	119c0 <avl_imprime@@Base+0x2c>
   11e90:	cmp	r0, #0
   11e94:	str	r0, [r5]
   11e98:	ble	11f2c <tabela_elementos@@Base+0xcc>
   11e9c:	mov	r8, #150	; 0x96
   11ea0:	mul	r0, r8, r0
   11ea4:	bl	10d20 <malloc@plt>
   11ea8:	subs	r9, r0, #0
   11eac:	beq	11f2c <tabela_elementos@@Base+0xcc>
   11eb0:	ldr	r7, [r4, #8]
   11eb4:	cmp	r7, #0
   11eb8:	ble	11f10 <tabela_elementos@@Base+0xb0>
   11ebc:	ldr	r6, [r4, #4]
   11ec0:	mov	r5, #0
   11ec4:	add	r7, r6, r7, lsl #2
   11ec8:	b	11ed4 <tabela_elementos@@Base+0x74>
   11ecc:	cmp	r6, r7
   11ed0:	beq	11f10 <tabela_elementos@@Base+0xb0>
   11ed4:	ldr	r4, [r6], #4
   11ed8:	cmp	r4, #0
   11edc:	beq	11ecc <tabela_elementos@@Base+0x6c>
   11ee0:	mla	r3, r8, r5, r9
   11ee4:	mov	r0, r3
   11ee8:	mov	r2, #150	; 0x96
   11eec:	ldr	r1, [r4]
   11ef0:	bl	10cf0 <memcpy@plt>
   11ef4:	ldr	r4, [r4, #4]
   11ef8:	add	r5, r5, #1
   11efc:	add	r3, r0, #150	; 0x96
   11f00:	cmp	r4, #0
   11f04:	bne	11ee4 <tabela_elementos@@Base+0x84>
   11f08:	cmp	r6, r7
   11f0c:	bne	11ed4 <tabela_elementos@@Base+0x74>
   11f10:	mov	r0, r9
   11f14:	ldrd	r4, [sp]
   11f18:	ldrd	r6, [sp, #8]
   11f1c:	ldrd	r8, [sp, #16]
   11f20:	ldr	sl, [sp, #24]
   11f24:	add	sp, sp, #28
   11f28:	pop	{pc}		; (ldr pc, [sp], #4)
   11f2c:	mov	r9, #0
   11f30:	b	11f10 <tabela_elementos@@Base+0xb0>

00011f34 <hash_krm@@Base>:
   11f34:	ldrb	r3, [r0]
   11f38:	mov	r2, #7
   11f3c:	cmp	r3, #0
   11f40:	beq	11f54 <hash_krm@@Base+0x20>
   11f44:	add	r2, r2, r3
   11f48:	ldrb	r3, [r0, #1]!
   11f4c:	cmp	r3, #0
   11f50:	bne	11f44 <hash_krm@@Base+0x10>
   11f54:	udiv	r0, r2, r1
   11f58:	mls	r0, r1, r0, r2
   11f5c:	bx	lr

00011f60 <hash_djbm@@Base>:
   11f60:	ldrb	r2, [r0]
   11f64:	movw	r3, #5347	; 0x14e3
   11f68:	cmp	r2, #0
   11f6c:	beq	11f84 <hash_djbm@@Base+0x24>
   11f70:	rsb	r3, r3, r3, lsl #5
   11f74:	eor	r3, r3, r2
   11f78:	ldrb	r2, [r0, #1]!
   11f7c:	cmp	r2, #0
   11f80:	bne	11f70 <hash_djbm@@Base+0x10>
   11f84:	udiv	r0, r3, r1
   11f88:	mls	r0, r1, r0, r3
   11f8c:	bx	lr

00011f90 <mostraTabela@@Base>:
   11f90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f94:	strd	r6, [sp, #8]
   11f98:	subs	r7, r0, #0
   11f9c:	str	r8, [sp, #16]
   11fa0:	str	lr, [sp, #20]
   11fa4:	beq	12068 <mostraTabela@@Base+0xd8>
   11fa8:	bl	119c0 <avl_imprime@@Base+0x2c>
   11fac:	mov	r1, r0
   11fb0:	movw	r0, #8540	; 0x215c
   11fb4:	movt	r0, #1
   11fb8:	bl	10cc0 <printf@plt>
   11fbc:	ldr	r2, [r7, #8]
   11fc0:	cmp	r2, #0
   11fc4:	ble	1204c <mostraTabela@@Base+0xbc>
   11fc8:	movw	r8, #8576	; 0x2180
   11fcc:	movt	r8, #1
   11fd0:	movw	r6, #8584	; 0x2188
   11fd4:	movt	r6, #1
   11fd8:	mov	r5, #0
   11fdc:	b	11fec <mostraTabela@@Base+0x5c>
   11fe0:	add	r5, r5, #1
   11fe4:	cmp	r2, r5
   11fe8:	ble	1204c <mostraTabela@@Base+0xbc>
   11fec:	ldr	r3, [r7, #4]
   11ff0:	ldr	r3, [r3, r5, lsl #2]
   11ff4:	cmp	r3, #0
   11ff8:	beq	11fe0 <mostraTabela@@Base+0x50>
   11ffc:	mov	r1, r5
   12000:	mov	r0, r8
   12004:	bl	10cc0 <printf@plt>
   12008:	ldr	r3, [r7, #4]
   1200c:	ldr	r4, [r3, r5, lsl #2]
   12010:	cmp	r4, #0
   12014:	beq	12034 <mostraTabela@@Base+0xa4>
   12018:	ldr	r1, [r4]
   1201c:	mov	r0, r6
   12020:	add	r2, r1, #50	; 0x32
   12024:	bl	10cc0 <printf@plt>
   12028:	ldr	r4, [r4, #4]
   1202c:	cmp	r4, #0
   12030:	bne	12018 <mostraTabela@@Base+0x88>
   12034:	mov	r0, #10
   12038:	add	r5, r5, #1
   1203c:	bl	10d5c <putchar@plt>
   12040:	ldr	r2, [r7, #8]
   12044:	cmp	r2, r5
   12048:	bgt	11fec <mostraTabela@@Base+0x5c>
   1204c:	mov	r0, #10
   12050:	ldrd	r4, [sp]
   12054:	ldrd	r6, [sp, #8]
   12058:	ldr	r8, [sp, #16]
   1205c:	ldr	lr, [sp, #20]
   12060:	add	sp, sp, #24
   12064:	b	10d5c <putchar@plt>
   12068:	mvn	r1, #1
   1206c:	b	11fb0 <mostraTabela@@Base+0x20>

00012070 <__libc_csu_init@@Base>:
   12070:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12074:	mov	r7, r0
   12078:	ldr	r6, [pc, #72]	; 120c8 <__libc_csu_init@@Base+0x58>
   1207c:	ldr	r5, [pc, #72]	; 120cc <__libc_csu_init@@Base+0x5c>
   12080:	add	r6, pc, r6
   12084:	add	r5, pc, r5
   12088:	sub	r6, r6, r5
   1208c:	mov	r8, r1
   12090:	mov	r9, r2
   12094:	bl	10c88 <calloc@plt-0x20>
   12098:	asrs	r6, r6, #2
   1209c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   120a0:	mov	r4, #0
   120a4:	add	r4, r4, #1
   120a8:	ldr	r3, [r5], #4
   120ac:	mov	r2, r9
   120b0:	mov	r1, r8
   120b4:	mov	r0, r7
   120b8:	blx	r3
   120bc:	cmp	r6, r4
   120c0:	bne	120a4 <__libc_csu_init@@Base+0x34>
   120c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120c8:	andeq	r0, r1, ip, lsl #29
   120cc:	andeq	r0, r1, r4, lsl #29

000120d0 <__libc_csu_fini@@Base>:
   120d0:	bx	lr

Disassembly of section .fini:

000120d4 <.fini>:
   120d4:	push	{r3, lr}
   120d8:	pop	{r3, pc}
