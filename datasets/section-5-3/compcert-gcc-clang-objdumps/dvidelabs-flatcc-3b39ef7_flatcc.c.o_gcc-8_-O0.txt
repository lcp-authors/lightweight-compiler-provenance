
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/flatcc.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <checkmem>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #8
      10:	str	r0, [fp, #-8]
      14:	ldr	r3, [fp, #-8]
      18:	cmp	r3, #0
      1c:	bne	48 <checkmem+0x48>
      20:	movw	r3, #0
      24:	movt	r3, #0
      28:	ldr	r3, [r3]
      2c:	mov	r2, #34	; 0x22
      30:	mov	r1, #1
      34:	movw	r0, #0
      38:	movt	r0, #0
      3c:	bl	0 <fwrite>
      40:	mov	r0, #1
      44:	bl	0 <exit>
      48:	nop	{0}
      4c:	sub	sp, fp, #4
      50:	ldr	fp, [sp]
      54:	add	sp, sp, #4
      58:	pop	{pc}		; (ldr pc, [sp], #4)

0000005c <error_tok_2>:
      5c:	str	fp, [sp, #-8]!
      60:	str	lr, [sp, #4]
      64:	add	fp, sp, #4
      68:	sub	sp, sp, #24
      6c:	str	r0, [fp, #-8]
      70:	str	r1, [fp, #-12]
      74:	str	r2, [fp, #-16]
      78:	str	r3, [fp, #-20]	; 0xffffffec
      7c:	mov	r3, #0
      80:	str	r3, [sp, #4]
      84:	mov	r3, #0
      88:	str	r3, [sp]
      8c:	ldr	r3, [fp, #-20]	; 0xffffffec
      90:	ldr	r2, [fp, #-16]
      94:	ldr	r1, [fp, #-12]
      98:	ldr	r0, [fp, #-8]
      9c:	bl	0 <__flatcc_error_report>
      a0:	nop	{0}
      a4:	sub	sp, fp, #4
      a8:	ldr	fp, [sp]
      ac:	add	sp, sp, #4
      b0:	pop	{pc}		; (ldr pc, [sp], #4)

000000b4 <flatcc_init_options>:
      b4:	str	fp, [sp, #-8]!
      b8:	str	lr, [sp, #4]
      bc:	add	fp, sp, #4
      c0:	sub	sp, sp, #8
      c4:	str	r0, [fp, #-8]
      c8:	mov	r2, #224	; 0xe0
      cc:	mov	r1, #0
      d0:	ldr	r0, [fp, #-8]
      d4:	bl	0 <memset>
      d8:	ldr	r3, [fp, #-8]
      dc:	mov	r2, #65536	; 0x10000
      e0:	str	r2, [r3]
      e4:	ldr	r3, [fp, #-8]
      e8:	mov	r2, #100	; 0x64
      ec:	str	r2, [r3, #4]
      f0:	ldr	r3, [fp, #-8]
      f4:	mov	r2, #100	; 0x64
      f8:	str	r2, [r3, #8]
      fc:	ldr	r3, [fp, #-8]
     100:	mov	r2, #1
     104:	str	r2, [r3, #16]
     108:	ldr	r3, [fp, #-8]
     10c:	mov	r2, #1
     110:	str	r2, [r3, #20]
     114:	ldr	r3, [fp, #-8]
     118:	mov	r2, #1
     11c:	str	r2, [r3, #24]
     120:	ldr	r3, [fp, #-8]
     124:	mov	r2, #1
     128:	str	r2, [r3, #28]
     12c:	ldr	r3, [fp, #-8]
     130:	mov	r2, #1
     134:	str	r2, [r3, #32]
     138:	ldr	r3, [fp, #-8]
     13c:	mov	r2, #1
     140:	str	r2, [r3, #36]	; 0x24
     144:	ldr	r3, [fp, #-8]
     148:	mov	r2, #1
     14c:	str	r2, [r3, #40]	; 0x28
     150:	ldr	r3, [fp, #-8]
     154:	mov	r2, #1
     158:	str	r2, [r3, #44]	; 0x2c
     15c:	ldr	r3, [fp, #-8]
     160:	mov	r2, #1
     164:	str	r2, [r3, #48]	; 0x30
     168:	ldr	r3, [fp, #-8]
     16c:	mov	r2, #1
     170:	str	r2, [r3, #52]	; 0x34
     174:	ldr	r3, [fp, #-8]
     178:	mov	r2, #0
     17c:	str	r2, [r3, #56]	; 0x38
     180:	ldr	r3, [fp, #-8]
     184:	mov	r2, #0
     188:	str	r2, [r3, #60]	; 0x3c
     18c:	ldr	r3, [fp, #-8]
     190:	mov	r2, #4
     194:	str	r2, [r3, #64]	; 0x40
     198:	ldr	r3, [fp, #-8]
     19c:	mov	r2, #2
     1a0:	str	r2, [r3, #68]	; 0x44
     1a4:	ldr	r3, [fp, #-8]
     1a8:	mov	r2, #1
     1ac:	str	r2, [r3, #72]	; 0x48
     1b0:	ldr	r3, [fp, #-8]
     1b4:	mov	r2, #1
     1b8:	str	r2, [r3, #76]	; 0x4c
     1bc:	ldr	r3, [fp, #-8]
     1c0:	mov	r2, #0
     1c4:	str	r2, [r3, #80]	; 0x50
     1c8:	ldr	r3, [fp, #-8]
     1cc:	mov	r2, #1
     1d0:	str	r2, [r3, #84]	; 0x54
     1d4:	ldr	r1, [fp, #-8]
     1d8:	movw	r2, #65534	; 0xfffe
     1dc:	mov	r3, #0
     1e0:	strd	r2, [r1, #88]	; 0x58
     1e4:	ldr	r2, [fp, #-8]
     1e8:	movw	r3, #0
     1ec:	movt	r3, #0
     1f0:	str	r3, [r2, #96]	; 0x60
     1f4:	ldr	r2, [fp, #-8]
     1f8:	movw	r3, #0
     1fc:	movt	r3, #0
     200:	str	r3, [r2, #100]	; 0x64
     204:	ldr	r2, [fp, #-8]
     208:	movw	r3, #0
     20c:	movt	r3, #0
     210:	str	r3, [r2, #104]	; 0x68
     214:	ldr	r3, [fp, #-8]
     218:	mov	r2, #0
     21c:	str	r2, [r3, #132]	; 0x84
     220:	ldr	r3, [fp, #-8]
     224:	mov	r2, #1
     228:	str	r2, [r3, #136]	; 0x88
     22c:	ldr	r3, [fp, #-8]
     230:	mov	r2, #1
     234:	str	r2, [r3, #140]	; 0x8c
     238:	ldr	r3, [fp, #-8]
     23c:	mov	r2, #0
     240:	str	r2, [r3, #144]	; 0x90
     244:	ldr	r3, [fp, #-8]
     248:	mov	r2, #0
     24c:	str	r2, [r3, #148]	; 0x94
     250:	ldr	r3, [fp, #-8]
     254:	mov	r2, #0
     258:	str	r2, [r3, #152]	; 0x98
     25c:	ldr	r3, [fp, #-8]
     260:	mov	r2, #0
     264:	str	r2, [r3, #156]	; 0x9c
     268:	ldr	r3, [fp, #-8]
     26c:	mov	r2, #0
     270:	str	r2, [r3, #164]	; 0xa4
     274:	ldr	r3, [fp, #-8]
     278:	mov	r2, #4
     27c:	str	r2, [r3, #176]	; 0xb0
     280:	ldr	r3, [fp, #-8]
     284:	mov	r2, #0
     288:	str	r2, [r3, #180]	; 0xb4
     28c:	ldr	r3, [fp, #-8]
     290:	mov	r2, #1
     294:	str	r2, [r3, #184]	; 0xb8
     298:	ldr	r3, [fp, #-8]
     29c:	mov	r2, #0
     2a0:	str	r2, [r3, #188]	; 0xbc
     2a4:	nop	{0}
     2a8:	sub	sp, fp, #4
     2ac:	ldr	fp, [sp]
     2b0:	add	sp, sp, #4
     2b4:	pop	{pc}		; (ldr pc, [sp], #4)

000002b8 <flatcc_create_context>:
     2b8:	str	fp, [sp, #-8]!
     2bc:	str	lr, [sp, #4]
     2c0:	add	fp, sp, #4
     2c4:	sub	sp, sp, #32
     2c8:	str	r0, [fp, #-16]
     2cc:	str	r1, [fp, #-20]	; 0xffffffec
     2d0:	str	r2, [fp, #-24]	; 0xffffffe8
     2d4:	str	r3, [fp, #-28]	; 0xffffffe4
     2d8:	mov	r0, #560	; 0x230
     2dc:	bl	0 <malloc>
     2e0:	mov	r3, r0
     2e4:	str	r3, [fp, #-8]
     2e8:	ldr	r3, [fp, #-8]
     2ec:	cmp	r3, #0
     2f0:	bne	2fc <flatcc_create_context+0x44>
     2f4:	mov	r3, #0
     2f8:	b	340 <flatcc_create_context+0x88>
     2fc:	mov	r3, #0
     300:	str	r3, [sp, #4]
     304:	ldr	r3, [fp, #-28]	; 0xffffffe4
     308:	str	r3, [sp]
     30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     310:	ldr	r2, [fp, #-20]	; 0xffffffec
     314:	ldr	r1, [fp, #-16]
     318:	ldr	r0, [fp, #-8]
     31c:	bl	0 <__flatcc_fb_init_parser>
     320:	mov	r3, r0
     324:	cmp	r3, #0
     328:	beq	33c <flatcc_create_context+0x84>
     32c:	ldr	r0, [fp, #-8]
     330:	bl	0 <free>
     334:	mov	r3, #0
     338:	b	340 <flatcc_create_context+0x88>
     33c:	ldr	r3, [fp, #-8]
     340:	mov	r0, r3
     344:	sub	sp, fp, #4
     348:	ldr	fp, [sp]
     34c:	add	sp, sp, #4
     350:	pop	{pc}		; (ldr pc, [sp], #4)

00000354 <__flatcc_create_child_context>:
     354:	str	fp, [sp, #-8]!
     358:	str	lr, [sp, #4]
     35c:	add	fp, sp, #4
     360:	sub	sp, sp, #32
     364:	str	r0, [fp, #-16]
     368:	str	r1, [fp, #-20]	; 0xffffffec
     36c:	str	r2, [fp, #-24]	; 0xffffffe8
     370:	mov	r0, #560	; 0x230
     374:	bl	0 <malloc>
     378:	mov	r3, r0
     37c:	str	r3, [fp, #-8]
     380:	ldr	r3, [fp, #-8]
     384:	cmp	r3, #0
     388:	bne	394 <__flatcc_create_child_context+0x40>
     38c:	mov	r3, #0
     390:	b	3e8 <__flatcc_create_child_context+0x94>
     394:	ldr	r3, [fp, #-24]	; 0xffffffe8
     398:	ldr	r1, [r3, #8]
     39c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3a0:	ldr	r3, [r3, #12]
     3a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     3a8:	ldr	r2, [r2, #412]	; 0x19c
     3ac:	str	r2, [sp, #4]
     3b0:	str	r3, [sp]
     3b4:	mov	r3, r1
     3b8:	ldr	r2, [fp, #-20]	; 0xffffffec
     3bc:	ldr	r1, [fp, #-16]
     3c0:	ldr	r0, [fp, #-8]
     3c4:	bl	0 <__flatcc_fb_init_parser>
     3c8:	mov	r3, r0
     3cc:	cmp	r3, #0
     3d0:	beq	3e4 <__flatcc_create_child_context+0x90>
     3d4:	ldr	r0, [fp, #-8]
     3d8:	bl	0 <free>
     3dc:	mov	r3, #0
     3e0:	b	3e8 <__flatcc_create_child_context+0x94>
     3e4:	ldr	r3, [fp, #-8]
     3e8:	mov	r0, r3
     3ec:	sub	sp, fp, #4
     3f0:	ldr	fp, [sp]
     3f4:	add	sp, sp, #4
     3f8:	pop	{pc}		; (ldr pc, [sp], #4)

000003fc <flatcc_parse_buffer>:
     3fc:	str	fp, [sp, #-8]!
     400:	str	lr, [sp, #4]
     404:	add	fp, sp, #4
     408:	sub	sp, sp, #24
     40c:	str	r0, [fp, #-16]
     410:	str	r1, [fp, #-20]	; 0xffffffec
     414:	str	r2, [fp, #-24]	; 0xffffffe8
     418:	ldr	r3, [fp, #-16]
     41c:	str	r3, [fp, #-8]
     420:	ldr	r3, [fp, #-8]
     424:	mov	r2, #1
     428:	str	r2, [r3, #140]	; 0x8c
     42c:	ldr	r3, [fp, #-8]
     430:	ldr	r3, [r3, #128]	; 0x80
     434:	ldr	r2, [fp, #-24]	; 0xffffffe8
     438:	cmp	r2, r3
     43c:	bls	468 <flatcc_parse_buffer+0x6c>
     440:	ldr	r3, [fp, #-8]
     444:	ldr	r3, [r3, #128]	; 0x80
     448:	cmp	r3, #0
     44c:	beq	468 <flatcc_parse_buffer+0x6c>
     450:	movw	r1, #0
     454:	movt	r1, #0
     458:	ldr	r0, [fp, #-8]
     45c:	bl	0 <__flatcc_fb_print_error>
     460:	mvn	r3, #0
     464:	b	4c4 <flatcc_parse_buffer+0xc8>
     468:	ldr	r3, [fp, #-8]
     46c:	add	r0, r3, #524	; 0x20c
     470:	ldr	r3, [fp, #-8]
     474:	add	r3, r3, #352	; 0x160
     478:	mov	r2, #1
     47c:	mov	r1, r3
     480:	bl	0 <ptr_set_insert_item>
     484:	mov	r3, #0
     488:	ldr	r2, [fp, #-24]	; 0xffffffe8
     48c:	ldr	r1, [fp, #-20]	; 0xffffffec
     490:	ldr	r0, [fp, #-8]
     494:	bl	0 <__flatcc_fb_parse>
     498:	mov	r3, r0
     49c:	cmp	r3, #0
     4a0:	bne	4b8 <flatcc_parse_buffer+0xbc>
     4a4:	ldr	r0, [fp, #-8]
     4a8:	bl	0 <__flatcc_fb_build_schema>
     4ac:	mov	r3, r0
     4b0:	cmp	r3, #0
     4b4:	beq	4c0 <flatcc_parse_buffer+0xc4>
     4b8:	mvn	r3, #0
     4bc:	b	4c4 <flatcc_parse_buffer+0xc8>
     4c0:	mov	r3, #0
     4c4:	mov	r0, r3
     4c8:	sub	sp, fp, #4
     4cc:	ldr	fp, [sp]
     4d0:	add	sp, sp, #4
     4d4:	pop	{pc}		; (ldr pc, [sp], #4)

000004d8 <visit_dep>:
     4d8:	str	fp, [sp, #-8]!
     4dc:	str	lr, [sp, #4]
     4e0:	add	fp, sp, #4
     4e4:	sub	sp, sp, #16
     4e8:	str	r0, [fp, #-16]
     4ec:	str	r1, [fp, #-20]	; 0xffffffec
     4f0:	ldr	r3, [fp, #-16]
     4f4:	str	r3, [fp, #-8]
     4f8:	ldr	r3, [fp, #-20]	; 0xffffffec
     4fc:	str	r3, [fp, #-12]
     500:	ldr	r3, [fp, #-8]
     504:	add	r3, r3, #172	; 0xac
     508:	mov	r2, #1
     50c:	ldr	r1, [fp, #-12]
     510:	mov	r0, r3
     514:	bl	0 <ptr_set_insert_item>
     518:	nop	{0}
     51c:	sub	sp, fp, #4
     520:	ldr	fp, [sp]
     524:	add	sp, sp, #4
     528:	pop	{pc}		; (ldr pc, [sp], #4)

0000052c <add_visible_schema>:
     52c:	str	fp, [sp, #-8]!
     530:	str	lr, [sp, #4]
     534:	add	fp, sp, #4
     538:	sub	sp, sp, #8
     53c:	str	r0, [fp, #-8]
     540:	str	r1, [fp, #-12]
     544:	ldr	r3, [fp, #-12]
     548:	add	r3, r3, #172	; 0xac
     54c:	ldr	r2, [fp, #-8]
     550:	movw	r1, #0
     554:	movt	r1, #0
     558:	mov	r0, r3
     55c:	bl	0 <ptr_set_visit>
     560:	nop	{0}
     564:	sub	sp, fp, #4
     568:	ldr	fp, [sp]
     56c:	add	sp, sp, #4
     570:	pop	{pc}		; (ldr pc, [sp], #4)

00000574 <__parse_include_file>:
     574:	str	fp, [sp, #-8]!
     578:	str	lr, [sp, #4]
     57c:	add	fp, sp, #4
     580:	sub	sp, sp, #32
     584:	str	r0, [fp, #-32]	; 0xffffffe0
     588:	str	r1, [fp, #-36]	; 0xffffffdc
     58c:	mov	r3, #0
     590:	str	r3, [fp, #-8]
     594:	mov	r3, #0
     598:	str	r3, [fp, #-12]
     59c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     5a0:	add	r3, r3, #128	; 0x80
     5a4:	str	r3, [fp, #-16]
     5a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     5ac:	ldr	r3, [r3, #412]	; 0x19c
     5b0:	str	r3, [fp, #-20]	; 0xffffffec
     5b4:	ldr	r3, [fp, #-20]	; 0xffffffec
     5b8:	ldr	r2, [r3, #52]	; 0x34
     5bc:	ldr	r3, [fp, #-16]
     5c0:	ldr	r3, [r3, #4]
     5c4:	cmp	r2, r3
     5c8:	blt	5f4 <__parse_include_file+0x80>
     5cc:	ldr	r3, [fp, #-16]
     5d0:	ldr	r3, [r3, #4]
     5d4:	cmp	r3, #0
     5d8:	ble	5f4 <__parse_include_file+0x80>
     5dc:	movw	r1, #0
     5e0:	movt	r1, #0
     5e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     5e8:	bl	0 <__flatcc_fb_print_error>
     5ec:	mvn	r3, #0
     5f0:	b	748 <__parse_include_file+0x1d4>
     5f4:	ldr	r3, [fp, #-20]	; 0xffffffec
     5f8:	ldr	r2, [r3, #48]	; 0x30
     5fc:	ldr	r3, [fp, #-16]
     600:	ldr	r3, [r3, #8]
     604:	cmp	r2, r3
     608:	blt	634 <__parse_include_file+0xc0>
     60c:	ldr	r3, [fp, #-16]
     610:	ldr	r3, [r3, #8]
     614:	cmp	r3, #0
     618:	ble	634 <__parse_include_file+0xc0>
     61c:	movw	r1, #0
     620:	movt	r1, #0
     624:	ldr	r0, [fp, #-32]	; 0xffffffe0
     628:	bl	0 <__flatcc_fb_print_error>
     62c:	mvn	r3, #0
     630:	b	748 <__parse_include_file+0x1d4>
     634:	ldr	r2, [fp, #-32]	; 0xffffffe0
     638:	ldr	r1, [fp, #-36]	; 0xffffffdc
     63c:	ldr	r0, [fp, #-16]
     640:	bl	354 <__flatcc_create_child_context>
     644:	str	r0, [fp, #-8]
     648:	ldr	r3, [fp, #-8]
     64c:	cmp	r3, #0
     650:	bne	65c <__parse_include_file+0xe8>
     654:	mvn	r3, #0
     658:	b	748 <__parse_include_file+0x1d4>
     65c:	ldr	r3, [fp, #-8]
     660:	str	r3, [fp, #-12]
     664:	ldr	r3, [fp, #-20]	; 0xffffffec
     668:	add	r2, r3, #32
     66c:	ldr	r3, [fp, #-12]
     670:	add	r3, r3, #352	; 0x160
     674:	mov	r1, r3
     678:	mov	r0, r2
     67c:	bl	0 <fb_schema_table_find_item>
     680:	str	r0, [fp, #-24]	; 0xffffffe8
     684:	ldr	r3, [fp, #-24]	; 0xffffffe8
     688:	cmp	r3, #0
     68c:	beq	6b4 <__parse_include_file+0x140>
     690:	ldr	r3, [fp, #-32]	; 0xffffffe0
     694:	add	r3, r3, #352	; 0x160
     698:	ldr	r1, [fp, #-24]	; 0xffffffe8
     69c:	mov	r0, r3
     6a0:	bl	52c <add_visible_schema>
     6a4:	ldr	r0, [fp, #-8]
     6a8:	bl	1260 <flatcc_destroy_context>
     6ac:	mov	r3, #0
     6b0:	b	748 <__parse_include_file+0x1d4>
     6b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6b8:	ldr	r2, [r3]
     6bc:	ldr	r3, [fp, #-12]
     6c0:	str	r2, [r3]
     6c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6c8:	ldr	r2, [fp, #-12]
     6cc:	str	r2, [r3]
     6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6d4:	ldr	r2, [r3, #548]	; 0x224
     6d8:	ldr	r3, [fp, #-12]
     6dc:	str	r2, [r3, #552]	; 0x228
     6e0:	ldr	r3, [fp, #-20]	; 0xffffffec
     6e4:	ldr	r3, [r3, #52]	; 0x34
     6e8:	add	r2, r3, #1
     6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
     6f0:	str	r2, [r3, #52]	; 0x34
     6f4:	ldr	r3, [fp, #-20]	; 0xffffffec
     6f8:	ldr	r3, [r3, #48]	; 0x30
     6fc:	add	r2, r3, #1
     700:	ldr	r3, [fp, #-20]	; 0xffffffec
     704:	str	r2, [r3, #48]	; 0x30
     708:	ldr	r1, [fp, #-36]	; 0xffffffdc
     70c:	ldr	r0, [fp, #-8]
     710:	bl	aa4 <flatcc_parse_file>
     714:	mov	r3, r0
     718:	cmp	r3, #0
     71c:	beq	728 <__parse_include_file+0x1b4>
     720:	mvn	r3, #0
     724:	b	748 <__parse_include_file+0x1d4>
     728:	ldr	r3, [fp, #-32]	; 0xffffffe0
     72c:	add	r2, r3, #352	; 0x160
     730:	ldr	r3, [fp, #-12]
     734:	add	r3, r3, #352	; 0x160
     738:	mov	r1, r3
     73c:	mov	r0, r2
     740:	bl	52c <add_visible_schema>
     744:	mov	r3, #0
     748:	mov	r0, r3
     74c:	sub	sp, fp, #4
     750:	ldr	fp, [sp]
     754:	add	sp, sp, #4
     758:	pop	{pc}		; (ldr pc, [sp], #4)

0000075c <__flatcc_gen_depends_file>:
     75c:	str	fp, [sp, #-8]!
     760:	str	lr, [sp, #4]
     764:	add	fp, sp, #4
     768:	sub	sp, sp, #64	; 0x40
     76c:	str	r0, [fp, #-64]	; 0xffffffc0
     770:	mov	r3, #0
     774:	str	r3, [fp, #-44]	; 0xffffffd4
     778:	mov	r3, #0
     77c:	str	r3, [fp, #-48]	; 0xffffffd0
     780:	mov	r3, #0
     784:	str	r3, [fp, #-32]	; 0xffffffe0
     788:	mov	r3, #0
     78c:	str	r3, [fp, #-36]	; 0xffffffdc
     790:	mov	r3, #0
     794:	str	r3, [fp, #-52]	; 0xffffffcc
     798:	mvn	r3, #0
     79c:	str	r3, [fp, #-40]	; 0xffffffd8
     7a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     7a4:	ldr	r3, [r3, #552]	; 0x228
     7a8:	cmp	r3, #0
     7ac:	beq	7d0 <__flatcc_gen_depends_file+0x74>
     7b0:	movw	r3, #0
     7b4:	movt	r3, #0
     7b8:	mov	r2, #220	; 0xdc
     7bc:	movw	r1, #0
     7c0:	movt	r1, #0
     7c4:	movw	r0, #0
     7c8:	movt	r0, #0
     7cc:	bl	0 <__assert_fail>
     7d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     7d4:	ldr	r3, [r3, #344]	; 0x158
     7d8:	cmp	r3, #0
     7dc:	beq	7ec <__flatcc_gen_depends_file+0x90>
     7e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     7e4:	ldr	r3, [r3, #344]	; 0x158
     7e8:	b	7f4 <__flatcc_gen_depends_file+0x98>
     7ec:	movw	r3, #0
     7f0:	movt	r3, #0
     7f4:	str	r3, [fp, #-56]	; 0xffffffc8
     7f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
     7fc:	ldr	r3, [r3, #512]	; 0x200
     800:	str	r3, [fp, #-60]	; 0xffffffc4
     804:	ldr	r3, [fp, #-64]	; 0xffffffc0
     808:	ldr	r3, [r3, #248]	; 0xf8
     80c:	str	r3, [fp, #-20]	; 0xffffffec
     810:	ldr	r3, [fp, #-64]	; 0xffffffc0
     814:	ldr	r3, [r3, #244]	; 0xf4
     818:	cmp	r3, #0
     81c:	beq	848 <__flatcc_gen_depends_file+0xec>
     820:	ldr	r3, [fp, #-64]	; 0xffffffc0
     824:	ldr	r3, [r3, #244]	; 0xf4
     828:	str	r3, [fp, #-8]
     82c:	movw	r3, #0
     830:	movt	r3, #0
     834:	str	r3, [fp, #-12]
     838:	movw	r3, #0
     83c:	movt	r3, #0
     840:	str	r3, [fp, #-16]
     844:	b	864 <__flatcc_gen_depends_file+0x108>
     848:	ldr	r3, [fp, #-60]	; 0xffffffc4
     84c:	str	r3, [fp, #-8]
     850:	ldr	r3, [fp, #-56]	; 0xffffffc8
     854:	str	r3, [fp, #-12]
     858:	movw	r3, #0
     85c:	movt	r3, #0
     860:	str	r3, [fp, #-16]
     864:	ldr	r3, [fp, #-20]	; 0xffffffec
     868:	cmp	r3, #0
     86c:	beq	88c <__flatcc_gen_depends_file+0x130>
     870:	movw	r3, #0
     874:	movt	r3, #0
     878:	str	r3, [fp, #-24]	; 0xffffffe8
     87c:	movw	r3, #0
     880:	movt	r3, #0
     884:	str	r3, [fp, #-28]	; 0xffffffe4
     888:	b	8c4 <__flatcc_gen_depends_file+0x168>
     88c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     890:	ldr	r3, [r3, #308]	; 0x134
     894:	cmp	r3, #0
     898:	beq	8a8 <__flatcc_gen_depends_file+0x14c>
     89c:	movw	r3, #0
     8a0:	movt	r3, #0
     8a4:	b	8b0 <__flatcc_gen_depends_file+0x154>
     8a8:	movw	r3, #0
     8ac:	movt	r3, #0
     8b0:	str	r3, [fp, #-24]	; 0xffffffe8
     8b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
     8b8:	str	r3, [fp, #-20]	; 0xffffffec
     8bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8c0:	str	r3, [fp, #-28]	; 0xffffffe4
     8c4:	mov	r3, #1
     8c8:	ldr	r2, [fp, #-16]
     8cc:	ldr	r1, [fp, #-8]
     8d0:	ldr	r0, [fp, #-12]
     8d4:	bl	0 <__flatcc_fb_create_join_path>
     8d8:	str	r0, [fp, #-48]	; 0xffffffd0
     8dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8e0:	bl	0 <checkmem>
     8e4:	mov	r3, #1
     8e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8ec:	ldr	r1, [fp, #-20]	; 0xffffffec
     8f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     8f4:	bl	0 <__flatcc_fb_create_join_path>
     8f8:	str	r0, [fp, #-36]	; 0xffffffdc
     8fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     900:	bl	0 <checkmem>
     904:	ldr	r0, [fp, #-36]	; 0xffffffdc
     908:	bl	0 <__flatcc_fb_create_make_path>
     90c:	str	r0, [fp, #-52]	; 0xffffffcc
     910:	ldr	r0, [fp, #-52]	; 0xffffffcc
     914:	bl	0 <checkmem>
     918:	ldr	r3, [fp, #-36]	; 0xffffffdc
     91c:	cmp	r3, #0
     920:	beq	934 <__flatcc_gen_depends_file+0x1d8>
     924:	ldr	r0, [fp, #-36]	; 0xffffffdc
     928:	bl	0 <free>
     92c:	mov	r3, #0
     930:	str	r3, [fp, #-36]	; 0xffffffdc
     934:	movw	r1, #0
     938:	movt	r1, #0
     93c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     940:	bl	0 <fopen>
     944:	str	r0, [fp, #-44]	; 0xffffffd4
     948:	ldr	r3, [fp, #-44]	; 0xffffffd4
     94c:	cmp	r3, #0
     950:	bne	96c <__flatcc_gen_depends_file+0x210>
     954:	ldr	r2, [fp, #-48]	; 0xffffffd0
     958:	movw	r1, #0
     95c:	movt	r1, #0
     960:	ldr	r0, [fp, #-64]	; 0xffffffc0
     964:	bl	0 <__flatcc_fb_print_error>
     968:	b	a08 <__flatcc_gen_depends_file+0x2ac>
     96c:	ldr	r2, [fp, #-52]	; 0xffffffcc
     970:	movw	r1, #0
     974:	movt	r1, #0
     978:	ldr	r0, [fp, #-44]	; 0xffffffd4
     97c:	bl	0 <fprintf>
     980:	ldr	r3, [fp, #-64]	; 0xffffffc0
     984:	ldr	r3, [r3]
     988:	str	r3, [fp, #-64]	; 0xffffffc0
     98c:	b	9e8 <__flatcc_gen_depends_file+0x28c>
     990:	ldr	r3, [fp, #-64]	; 0xffffffc0
     994:	ldr	r3, [r3, #548]	; 0x224
     998:	mov	r0, r3
     99c:	bl	0 <__flatcc_fb_create_make_path>
     9a0:	str	r0, [fp, #-32]	; 0xffffffe0
     9a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     9a8:	bl	0 <checkmem>
     9ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
     9b0:	movw	r1, #0
     9b4:	movt	r1, #0
     9b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     9bc:	bl	0 <fprintf>
     9c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     9c4:	ldr	r3, [r3]
     9c8:	str	r3, [fp, #-64]	; 0xffffffc0
     9cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9d0:	cmp	r3, #0
     9d4:	beq	9e8 <__flatcc_gen_depends_file+0x28c>
     9d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     9dc:	bl	0 <free>
     9e0:	mov	r3, #0
     9e4:	str	r3, [fp, #-32]	; 0xffffffe0
     9e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
     9ec:	cmp	r3, #0
     9f0:	bne	990 <__flatcc_gen_depends_file+0x234>
     9f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     9f8:	mov	r0, #10
     9fc:	bl	0 <fputc>
     a00:	mov	r3, #0
     a04:	str	r3, [fp, #-40]	; 0xffffffd8
     a08:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a0c:	cmp	r3, #0
     a10:	beq	a24 <__flatcc_gen_depends_file+0x2c8>
     a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
     a18:	bl	0 <free>
     a1c:	mov	r3, #0
     a20:	str	r3, [fp, #-48]	; 0xffffffd0
     a24:	ldr	r3, [fp, #-36]	; 0xffffffdc
     a28:	cmp	r3, #0
     a2c:	beq	a40 <__flatcc_gen_depends_file+0x2e4>
     a30:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a34:	bl	0 <free>
     a38:	mov	r3, #0
     a3c:	str	r3, [fp, #-36]	; 0xffffffdc
     a40:	ldr	r3, [fp, #-52]	; 0xffffffcc
     a44:	cmp	r3, #0
     a48:	beq	a5c <__flatcc_gen_depends_file+0x300>
     a4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
     a50:	bl	0 <free>
     a54:	mov	r3, #0
     a58:	str	r3, [fp, #-52]	; 0xffffffcc
     a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a60:	cmp	r3, #0
     a64:	beq	a78 <__flatcc_gen_depends_file+0x31c>
     a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
     a6c:	bl	0 <free>
     a70:	mov	r3, #0
     a74:	str	r3, [fp, #-32]	; 0xffffffe0
     a78:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a7c:	cmp	r3, #0
     a80:	beq	a8c <__flatcc_gen_depends_file+0x330>
     a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a88:	bl	0 <fclose>
     a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a90:	mov	r0, r3
     a94:	sub	sp, fp, #4
     a98:	ldr	fp, [sp]
     a9c:	add	sp, sp, #4
     aa0:	pop	{pc}		; (ldr pc, [sp], #4)

00000aa4 <flatcc_parse_file>:
     aa4:	str	fp, [sp, #-8]!
     aa8:	str	lr, [sp, #4]
     aac:	add	fp, sp, #4
     ab0:	sub	sp, sp, #64	; 0x40
     ab4:	str	r0, [fp, #-56]	; 0xffffffc8
     ab8:	str	r1, [fp, #-60]	; 0xffffffc4
     abc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     ac0:	str	r3, [fp, #-32]	; 0xffffffe0
     ac4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     ac8:	bl	0 <strlen>
     acc:	str	r0, [fp, #-36]	; 0xffffffdc
     ad0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ad4:	ldr	r3, [r3, #412]	; 0x19c
     ad8:	add	r0, r3, #32
     adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ae0:	add	r3, r3, #352	; 0x160
     ae4:	mov	r2, #1
     ae8:	mov	r1, r3
     aec:	bl	0 <fb_schema_table_insert_item>
     af0:	mov	r3, r0
     af4:	cmp	r3, #0
     af8:	beq	b04 <flatcc_parse_file+0x60>
     afc:	mov	r3, #0
     b00:	b	f88 <flatcc_parse_file+0x4e4>
     b04:	mov	r3, #0
     b08:	str	r3, [fp, #-8]
     b0c:	mov	r3, #0
     b10:	str	r3, [fp, #-12]
     b14:	mov	r3, #0
     b18:	str	r3, [fp, #-16]
     b1c:	mvn	r3, #0
     b20:	str	r3, [fp, #-28]	; 0xffffffe4
     b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b28:	ldr	r3, [r3, #552]	; 0x228
     b2c:	cmp	r3, #0
     b30:	moveq	r3, #1
     b34:	movne	r3, #0
     b38:	uxtb	r3, r3
     b3c:	str	r3, [fp, #-40]	; 0xffffffd8
     b40:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b44:	cmp	r3, #0
     b48:	beq	bd8 <flatcc_parse_file+0x134>
     b4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b50:	ldr	r3, [r3, #128]	; 0x80
     b54:	sub	r2, fp, #52	; 0x34
     b58:	mov	r1, r3
     b5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
     b60:	bl	0 <__flatcc_fb_read_file>
     b64:	str	r0, [fp, #-8]
     b68:	ldr	r3, [fp, #-8]
     b6c:	cmp	r3, #0
     b70:	bne	bc4 <flatcc_parse_file+0x120>
     b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b78:	ldr	r3, [r3, #412]	; 0x19c
     b7c:	ldr	r2, [r3, #56]	; 0x38
     b80:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b84:	add	r2, r2, r3
     b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b8c:	ldr	r3, [r3, #128]	; 0x80
     b90:	cmp	r2, r3
     b94:	bls	bd8 <flatcc_parse_file+0x134>
     b98:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b9c:	ldr	r3, [r3, #128]	; 0x80
     ba0:	cmp	r3, #0
     ba4:	beq	bd8 <flatcc_parse_file+0x134>
     ba8:	movw	r1, #0
     bac:	movt	r1, #0
     bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bb4:	bl	0 <__flatcc_fb_print_error>
     bb8:	mvn	r3, #0
     bbc:	str	r3, [fp, #-28]	; 0xffffffe4
     bc0:	b	f4c <flatcc_parse_file+0x4a8>
     bc4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     bc8:	bl	0 <__flatcc_fb_copy_path>
     bcc:	str	r0, [fp, #-12]
     bd0:	ldr	r0, [fp, #-12]
     bd4:	bl	0 <checkmem>
     bd8:	mov	r3, #0
     bdc:	str	r3, [fp, #-24]	; 0xffffffe8
     be0:	b	cc4 <flatcc_parse_file+0x220>
     be4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     be8:	ldr	r2, [r3, #328]	; 0x148
     bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bf0:	lsl	r3, r3, #2
     bf4:	add	r3, r2, r3
     bf8:	ldr	r3, [r3]
     bfc:	str	r3, [fp, #-44]	; 0xffffffd4
     c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c04:	bl	0 <strlen>
     c08:	str	r0, [fp, #-48]	; 0xffffffd0
     c0c:	mov	r3, #1
     c10:	str	r3, [sp, #4]
     c14:	movw	r3, #0
     c18:	movt	r3, #0
     c1c:	str	r3, [sp]
     c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
     c24:	ldr	r2, [fp, #-60]	; 0xffffffc4
     c28:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c30:	bl	0 <__flatcc_fb_create_join_path_n>
     c34:	str	r0, [fp, #-12]
     c38:	ldr	r0, [fp, #-12]
     c3c:	bl	0 <checkmem>
     c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c44:	ldr	r3, [r3, #128]	; 0x80
     c48:	sub	r2, fp, #52	; 0x34
     c4c:	mov	r1, r3
     c50:	ldr	r0, [fp, #-12]
     c54:	bl	0 <__flatcc_fb_read_file>
     c58:	str	r0, [fp, #-8]
     c5c:	ldr	r3, [fp, #-8]
     c60:	cmp	r3, #0
     c64:	bne	cb8 <flatcc_parse_file+0x214>
     c68:	ldr	r0, [fp, #-12]
     c6c:	bl	0 <free>
     c70:	mov	r3, #0
     c74:	str	r3, [fp, #-12]
     c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c7c:	ldr	r2, [r3, #128]	; 0x80
     c80:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c84:	cmp	r2, r3
     c88:	bcs	cb8 <flatcc_parse_file+0x214>
     c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c90:	ldr	r3, [r3, #128]	; 0x80
     c94:	cmp	r3, #0
     c98:	beq	cb8 <flatcc_parse_file+0x214>
     c9c:	movw	r1, #0
     ca0:	movt	r1, #0
     ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ca8:	bl	0 <__flatcc_fb_print_error>
     cac:	mvn	r3, #0
     cb0:	str	r3, [fp, #-28]	; 0xffffffe4
     cb4:	b	f4c <flatcc_parse_file+0x4a8>
     cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     cbc:	add	r3, r3, #1
     cc0:	str	r3, [fp, #-24]	; 0xffffffe8
     cc4:	ldr	r3, [fp, #-8]
     cc8:	cmp	r3, #0
     ccc:	bne	ce4 <flatcc_parse_file+0x240>
     cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     cd4:	ldr	r3, [r3, #336]	; 0x150
     cd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     cdc:	cmp	r2, r3
     ce0:	blt	be4 <flatcc_parse_file+0x140>
     ce4:	ldr	r3, [fp, #-8]
     ce8:	cmp	r3, #0
     cec:	bne	dd0 <flatcc_parse_file+0x32c>
     cf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     cf4:	cmp	r3, #0
     cf8:	bne	dd0 <flatcc_parse_file+0x32c>
     cfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d00:	ldr	r3, [r3, #552]	; 0x228
     d04:	str	r3, [fp, #-44]	; 0xffffffd4
     d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d0c:	bl	0 <strlen>
     d10:	mov	r3, r0
     d14:	mov	r1, r3
     d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d1c:	bl	0 <__flatcc_fb_find_basename>
     d20:	str	r0, [fp, #-48]	; 0xffffffd0
     d24:	mov	r3, #1
     d28:	str	r3, [sp, #4]
     d2c:	movw	r3, #0
     d30:	movt	r3, #0
     d34:	str	r3, [sp]
     d38:	ldr	r3, [fp, #-36]	; 0xffffffdc
     d3c:	ldr	r2, [fp, #-60]	; 0xffffffc4
     d40:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d48:	bl	0 <__flatcc_fb_create_join_path_n>
     d4c:	str	r0, [fp, #-12]
     d50:	ldr	r0, [fp, #-12]
     d54:	bl	0 <checkmem>
     d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d5c:	ldr	r3, [r3, #128]	; 0x80
     d60:	sub	r2, fp, #52	; 0x34
     d64:	mov	r1, r3
     d68:	ldr	r0, [fp, #-12]
     d6c:	bl	0 <__flatcc_fb_read_file>
     d70:	str	r0, [fp, #-8]
     d74:	ldr	r3, [fp, #-8]
     d78:	cmp	r3, #0
     d7c:	bne	dd0 <flatcc_parse_file+0x32c>
     d80:	ldr	r0, [fp, #-12]
     d84:	bl	0 <free>
     d88:	mov	r3, #0
     d8c:	str	r3, [fp, #-12]
     d90:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d94:	ldr	r2, [r3, #128]	; 0x80
     d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d9c:	cmp	r2, r3
     da0:	bcs	dd0 <flatcc_parse_file+0x32c>
     da4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     da8:	ldr	r3, [r3, #128]	; 0x80
     dac:	cmp	r3, #0
     db0:	beq	dd0 <flatcc_parse_file+0x32c>
     db4:	movw	r1, #0
     db8:	movt	r1, #0
     dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dc0:	bl	0 <__flatcc_fb_print_error>
     dc4:	mvn	r3, #0
     dc8:	str	r3, [fp, #-28]	; 0xffffffe4
     dcc:	b	f4c <flatcc_parse_file+0x4a8>
     dd0:	ldr	r3, [fp, #-8]
     dd4:	cmp	r3, #0
     dd8:	bne	df4 <flatcc_parse_file+0x350>
     ddc:	ldr	r2, [fp, #-60]	; 0xffffffc4
     de0:	movw	r1, #0
     de4:	movt	r1, #0
     de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dec:	bl	0 <__flatcc_fb_print_error>
     df0:	b	f4c <flatcc_parse_file+0x4a8>
     df4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     df8:	ldr	r3, [r3, #412]	; 0x19c
     dfc:	ldr	r1, [r3, #56]	; 0x38
     e00:	ldr	r2, [fp, #-52]	; 0xffffffcc
     e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e08:	ldr	r3, [r3, #412]	; 0x19c
     e0c:	add	r2, r1, r2
     e10:	str	r2, [r3, #56]	; 0x38
     e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e18:	ldr	r2, [fp, #-12]
     e1c:	str	r2, [r3, #548]	; 0x224
     e20:	mov	r3, #0
     e24:	str	r3, [fp, #-12]
     e28:	ldr	r2, [fp, #-52]	; 0xffffffcc
     e2c:	mov	r3, #1
     e30:	ldr	r1, [fp, #-8]
     e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e38:	bl	0 <__flatcc_fb_parse>
     e3c:	str	r0, [fp, #-28]	; 0xffffffe4
     e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e44:	cmp	r3, #0
     e48:	bne	f2c <flatcc_parse_file+0x488>
     e4c:	mov	r3, #0
     e50:	str	r3, [fp, #-8]
     e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e58:	ldr	r3, [r3, #352]	; 0x160
     e5c:	str	r3, [fp, #-20]	; 0xffffffec
     e60:	b	ec0 <flatcc_parse_file+0x41c>
     e64:	ldr	r3, [fp, #-20]	; 0xffffffec
     e68:	ldr	r2, [r3, #8]
     e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
     e70:	ldr	r3, [r3, #12]
     e74:	mov	r1, r3
     e78:	mov	r0, r2
     e7c:	bl	0 <__flatcc_fb_copy_path_n>
     e80:	str	r0, [fp, #-16]
     e84:	ldr	r0, [fp, #-16]
     e88:	bl	0 <checkmem>
     e8c:	ldr	r1, [fp, #-16]
     e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e94:	bl	574 <__parse_include_file>
     e98:	mov	r3, r0
     e9c:	cmp	r3, #0
     ea0:	bne	f38 <flatcc_parse_file+0x494>
     ea4:	ldr	r0, [fp, #-16]
     ea8:	bl	0 <free>
     eac:	mov	r3, #0
     eb0:	str	r3, [fp, #-16]
     eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
     eb8:	ldr	r3, [r3]
     ebc:	str	r3, [fp, #-20]	; 0xffffffec
     ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
     ec4:	cmp	r3, #0
     ec8:	bne	e64 <flatcc_parse_file+0x3c0>
     ecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ed0:	add	r0, r3, #524	; 0x20c
     ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ed8:	add	r3, r3, #352	; 0x160
     edc:	mov	r2, #1
     ee0:	mov	r1, r3
     ee4:	bl	0 <ptr_set_insert_item>
     ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     eec:	bl	0 <__flatcc_fb_build_schema>
     ef0:	mov	r3, r0
     ef4:	cmp	r3, #0
     ef8:	bne	f40 <flatcc_parse_file+0x49c>
     efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f00:	ldr	r3, [r3, #240]	; 0xf0
     f04:	cmp	r3, #0
     f08:	beq	f2c <flatcc_parse_file+0x488>
     f0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     f10:	cmp	r3, #0
     f14:	beq	f2c <flatcc_parse_file+0x488>
     f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f1c:	bl	75c <__flatcc_gen_depends_file>
     f20:	mov	r3, r0
     f24:	cmp	r3, #0
     f28:	bne	f48 <flatcc_parse_file+0x4a4>
     f2c:	mov	r3, #0
     f30:	str	r3, [fp, #-28]	; 0xffffffe4
     f34:	b	f4c <flatcc_parse_file+0x4a8>
     f38:	nop	{0}
     f3c:	b	f4c <flatcc_parse_file+0x4a8>
     f40:	nop	{0}
     f44:	b	f4c <flatcc_parse_file+0x4a8>
     f48:	nop	{0}
     f4c:	ldr	r3, [fp, #-12]
     f50:	cmp	r3, #0
     f54:	beq	f68 <flatcc_parse_file+0x4c4>
     f58:	ldr	r0, [fp, #-12]
     f5c:	bl	0 <free>
     f60:	mov	r3, #0
     f64:	str	r3, [fp, #-12]
     f68:	ldr	r3, [fp, #-16]
     f6c:	cmp	r3, #0
     f70:	beq	f84 <flatcc_parse_file+0x4e0>
     f74:	ldr	r0, [fp, #-16]
     f78:	bl	0 <free>
     f7c:	mov	r3, #0
     f80:	str	r3, [fp, #-16]
     f84:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f88:	mov	r0, r3
     f8c:	sub	sp, fp, #4
     f90:	ldr	fp, [sp]
     f94:	add	sp, sp, #4
     f98:	pop	{pc}		; (ldr pc, [sp], #4)

00000f9c <flatcc_generate_binary_schema_to_buffer>:
     f9c:	str	fp, [sp, #-8]!
     fa0:	str	lr, [sp, #4]
     fa4:	add	fp, sp, #4
     fa8:	sub	sp, sp, #24
     fac:	str	r0, [fp, #-16]
     fb0:	str	r1, [fp, #-20]	; 0xffffffec
     fb4:	str	r2, [fp, #-24]	; 0xffffffe8
     fb8:	ldr	r3, [fp, #-16]
     fbc:	str	r3, [fp, #-8]
     fc0:	ldr	r3, [fp, #-8]
     fc4:	add	r0, r3, #128	; 0x80
     fc8:	ldr	r3, [fp, #-8]
     fcc:	add	r1, r3, #352	; 0x160
     fd0:	sub	r3, fp, #24
     fd4:	ldr	r2, [fp, #-20]	; 0xffffffec
     fd8:	bl	0 <__flatcc_fb_codegen_bfbs_to_buffer>
     fdc:	mov	r3, r0
     fe0:	cmp	r3, #0
     fe4:	beq	ff0 <flatcc_generate_binary_schema_to_buffer+0x54>
     fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fec:	b	ff4 <flatcc_generate_binary_schema_to_buffer+0x58>
     ff0:	mvn	r3, #0
     ff4:	mov	r0, r3
     ff8:	sub	sp, fp, #4
     ffc:	ldr	fp, [sp]
    1000:	add	sp, sp, #4
    1004:	pop	{pc}		; (ldr pc, [sp], #4)

00001008 <flatcc_generate_binary_schema>:
    1008:	str	fp, [sp, #-8]!
    100c:	str	lr, [sp, #4]
    1010:	add	fp, sp, #4
    1014:	sub	sp, sp, #16
    1018:	str	r0, [fp, #-16]
    101c:	str	r1, [fp, #-20]	; 0xffffffec
    1020:	ldr	r3, [fp, #-16]
    1024:	str	r3, [fp, #-8]
    1028:	ldr	r3, [fp, #-8]
    102c:	add	r0, r3, #128	; 0x80
    1030:	ldr	r3, [fp, #-8]
    1034:	add	r3, r3, #352	; 0x160
    1038:	ldr	r2, [fp, #-20]	; 0xffffffec
    103c:	mov	r1, r3
    1040:	bl	0 <__flatcc_fb_codegen_bfbs_alloc_buffer>
    1044:	mov	r3, r0
    1048:	mov	r0, r3
    104c:	sub	sp, fp, #4
    1050:	ldr	fp, [sp]
    1054:	add	sp, sp, #4
    1058:	pop	{pc}		; (ldr pc, [sp], #4)

0000105c <flatcc_generate_files>:
    105c:	str	fp, [sp, #-8]!
    1060:	str	lr, [sp, #4]
    1064:	add	fp, sp, #4
    1068:	sub	sp, sp, #256	; 0x100
    106c:	str	r0, [fp, #-256]	; 0xffffff00
    1070:	ldr	r3, [fp, #-256]	; 0xffffff00
    1074:	str	r3, [fp, #-8]
    1078:	mov	r3, #0
    107c:	str	r3, [fp, #-16]
    1080:	sub	r3, fp, #252	; 0xfc
    1084:	str	r3, [fp, #-20]	; 0xffffffec
    1088:	ldr	r3, [fp, #-8]
    108c:	cmp	r3, #0
    1090:	beq	10a4 <flatcc_generate_files+0x48>
    1094:	ldr	r3, [fp, #-8]
    1098:	ldr	r3, [r3, #108]	; 0x6c
    109c:	cmp	r3, #0
    10a0:	beq	10ac <flatcc_generate_files+0x50>
    10a4:	mvn	r3, #0
    10a8:	b	124c <flatcc_generate_files+0x1f0>
    10ac:	mov	r3, #0
    10b0:	str	r3, [fp, #-12]
    10b4:	b	10d8 <flatcc_generate_files+0x7c>
    10b8:	ldr	r3, [fp, #-8]
    10bc:	ldr	r2, [fp, #-12]
    10c0:	str	r2, [r3, #4]
    10c4:	ldr	r3, [fp, #-8]
    10c8:	str	r3, [fp, #-12]
    10cc:	ldr	r3, [fp, #-8]
    10d0:	ldr	r3, [r3]
    10d4:	str	r3, [fp, #-8]
    10d8:	ldr	r3, [fp, #-8]
    10dc:	cmp	r3, #0
    10e0:	bne	10b8 <flatcc_generate_files+0x5c>
    10e4:	ldr	r3, [fp, #-256]	; 0xffffff00
    10e8:	str	r3, [fp, #-8]
    10ec:	ldr	r3, [fp, #-8]
    10f0:	ldr	r3, [r3, #308]	; 0x134
    10f4:	cmp	r3, #0
    10f8:	beq	112c <flatcc_generate_files+0xd0>
    10fc:	ldr	r3, [fp, #-8]
    1100:	add	r2, r3, #128	; 0x80
    1104:	ldr	r3, [fp, #-8]
    1108:	add	r3, r3, #352	; 0x160
    110c:	mov	r1, r3
    1110:	mov	r0, r2
    1114:	bl	0 <__flatcc_fb_codegen_bfbs_to_file>
    1118:	mov	r3, r0
    111c:	cmp	r3, #0
    1120:	beq	112c <flatcc_generate_files+0xd0>
    1124:	mvn	r3, #0
    1128:	b	124c <flatcc_generate_files+0x1f0>
    112c:	ldr	r3, [fp, #-8]
    1130:	add	r3, r3, #128	; 0x80
    1134:	mov	r1, r3
    1138:	ldr	r0, [fp, #-20]	; 0xffffffec
    113c:	bl	0 <__flatcc_fb_init_output_c>
    1140:	mov	r3, r0
    1144:	cmp	r3, #0
    1148:	beq	1154 <flatcc_generate_files+0xf8>
    114c:	mvn	r3, #0
    1150:	b	124c <flatcc_generate_files+0x1f0>
    1154:	ldr	r3, [fp, #-8]
    1158:	ldr	r3, [r3, #256]	; 0x100
    115c:	cmp	r3, #0
    1160:	bne	117c <flatcc_generate_files+0x120>
    1164:	ldr	r0, [fp, #-20]	; 0xffffffec
    1168:	bl	0 <__flatcc_fb_codegen_common_c>
    116c:	str	r0, [fp, #-16]
    1170:	ldr	r3, [fp, #-16]
    1174:	cmp	r3, #0
    1178:	bne	122c <flatcc_generate_files+0x1d0>
    117c:	ldr	r3, [fp, #-8]
    1180:	ldr	r3, [r3, #120]	; 0x78
    1184:	cmp	r3, #0
    1188:	beq	1234 <flatcc_generate_files+0x1d8>
    118c:	ldr	r3, [fp, #-8]
    1190:	ldr	r3, [r3, #300]	; 0x12c
    1194:	cmp	r3, #0
    1198:	bne	11b8 <flatcc_generate_files+0x15c>
    119c:	ldr	r3, [fp, #-8]
    11a0:	add	r3, r3, #352	; 0x160
    11a4:	mov	r1, r3
    11a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    11ac:	bl	0 <__flatcc_fb_codegen_c>
    11b0:	str	r0, [fp, #-16]
    11b4:	b	1240 <flatcc_generate_files+0x1e4>
    11b8:	ldr	r3, [fp, #-12]
    11bc:	str	r3, [fp, #-8]
    11c0:	b	1210 <flatcc_generate_files+0x1b4>
    11c4:	ldr	r3, [fp, #-8]
    11c8:	ldr	r3, [r3, #108]	; 0x6c
    11cc:	cmp	r3, #0
    11d0:	bne	11f4 <flatcc_generate_files+0x198>
    11d4:	ldr	r3, [fp, #-8]
    11d8:	add	r3, r3, #352	; 0x160
    11dc:	mov	r1, r3
    11e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    11e4:	bl	0 <__flatcc_fb_codegen_c>
    11e8:	mov	r3, r0
    11ec:	cmp	r3, #0
    11f0:	beq	11fc <flatcc_generate_files+0x1a0>
    11f4:	mov	r3, #1
    11f8:	b	1200 <flatcc_generate_files+0x1a4>
    11fc:	mov	r3, #0
    1200:	str	r3, [fp, #-16]
    1204:	ldr	r3, [fp, #-8]
    1208:	ldr	r3, [r3, #4]
    120c:	str	r3, [fp, #-8]
    1210:	ldr	r3, [fp, #-16]
    1214:	cmp	r3, #0
    1218:	bne	123c <flatcc_generate_files+0x1e0>
    121c:	ldr	r3, [fp, #-8]
    1220:	cmp	r3, #0
    1224:	bne	11c4 <flatcc_generate_files+0x168>
    1228:	b	123c <flatcc_generate_files+0x1e0>
    122c:	nop	{0}
    1230:	b	1240 <flatcc_generate_files+0x1e4>
    1234:	nop	{0}
    1238:	b	1240 <flatcc_generate_files+0x1e4>
    123c:	nop	{0}
    1240:	ldr	r0, [fp, #-20]	; 0xffffffec
    1244:	bl	0 <__flatcc_fb_end_output_c>
    1248:	ldr	r3, [fp, #-16]
    124c:	mov	r0, r3
    1250:	sub	sp, fp, #4
    1254:	ldr	fp, [sp]
    1258:	add	sp, sp, #4
    125c:	pop	{pc}		; (ldr pc, [sp], #4)

00001260 <flatcc_destroy_context>:
    1260:	str	fp, [sp, #-8]!
    1264:	str	lr, [sp, #4]
    1268:	add	fp, sp, #4
    126c:	sub	sp, sp, #16
    1270:	str	r0, [fp, #-16]
    1274:	ldr	r3, [fp, #-16]
    1278:	str	r3, [fp, #-8]
    127c:	mov	r3, #0
    1280:	str	r3, [fp, #-12]
    1284:	b	12ac <flatcc_destroy_context+0x4c>
    1288:	ldr	r3, [fp, #-8]
    128c:	ldr	r3, [r3]
    1290:	str	r3, [fp, #-12]
    1294:	ldr	r0, [fp, #-8]
    1298:	bl	0 <__flatcc_fb_clear_parser>
    129c:	ldr	r0, [fp, #-8]
    12a0:	bl	0 <free>
    12a4:	ldr	r3, [fp, #-12]
    12a8:	str	r3, [fp, #-8]
    12ac:	ldr	r3, [fp, #-8]
    12b0:	cmp	r3, #0
    12b4:	bne	1288 <flatcc_destroy_context+0x28>
    12b8:	nop	{0}
    12bc:	sub	sp, fp, #4
    12c0:	ldr	fp, [sp]
    12c4:	add	sp, sp, #4
    12c8:	pop	{pc}		; (ldr pc, [sp], #4)
