
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_parser.dir/test_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatbuffers_uint8_cast_to_pe>:
       0:	push	{fp}		; (str fp, [sp, #-4]!)
       4:	add	fp, sp, #0
       8:	sub	sp, sp, #12
       c:	mov	r3, r0
      10:	strb	r3, [fp, #-5]
      14:	ldrb	r3, [fp, #-5]
      18:	mov	r0, r3
      1c:	add	sp, fp, #0
      20:	pop	{fp}		; (ldr fp, [sp], #4)
      24:	bx	lr

00000028 <flatbuffers_uint8_write_to_pe>:
      28:	push	{fp, lr}
      2c:	add	fp, sp, #4
      30:	sub	sp, sp, #8
      34:	str	r0, [fp, #-8]
      38:	mov	r3, r1
      3c:	strb	r3, [fp, #-9]
      40:	ldrb	r3, [fp, #-9]
      44:	mov	r0, r3
      48:	bl	0 <flatbuffers_uint8_cast_to_pe>
      4c:	mov	r3, r0
      50:	mov	r2, r3
      54:	ldr	r3, [fp, #-8]
      58:	strb	r2, [r3]
      5c:	nop			; (mov r0, r0)
      60:	sub	sp, fp, #4
      64:	pop	{fp, pc}

00000068 <flatbuffers_uint16_cast_to_pe>:
      68:	push	{fp}		; (str fp, [sp, #-4]!)
      6c:	add	fp, sp, #0
      70:	sub	sp, sp, #12
      74:	mov	r3, r0
      78:	strh	r3, [fp, #-6]
      7c:	ldrh	r3, [fp, #-6]
      80:	mov	r0, r3
      84:	add	sp, fp, #0
      88:	pop	{fp}		; (ldr fp, [sp], #4)
      8c:	bx	lr

00000090 <flatbuffers_uint16_write_to_pe>:
      90:	push	{fp, lr}
      94:	add	fp, sp, #4
      98:	sub	sp, sp, #8
      9c:	str	r0, [fp, #-8]
      a0:	mov	r3, r1
      a4:	strh	r3, [fp, #-10]
      a8:	ldrh	r3, [fp, #-10]
      ac:	mov	r0, r3
      b0:	bl	68 <flatbuffers_uint16_cast_to_pe>
      b4:	mov	r3, r0
      b8:	mov	r2, r3
      bc:	ldr	r3, [fp, #-8]
      c0:	strh	r2, [r3]
      c4:	nop			; (mov r0, r0)
      c8:	sub	sp, fp, #4
      cc:	pop	{fp, pc}

000000d0 <flatbuffers_uint32_cast_to_pe>:
      d0:	push	{fp}		; (str fp, [sp, #-4]!)
      d4:	add	fp, sp, #0
      d8:	sub	sp, sp, #12
      dc:	str	r0, [fp, #-8]
      e0:	ldr	r3, [fp, #-8]
      e4:	mov	r0, r3
      e8:	add	sp, fp, #0
      ec:	pop	{fp}		; (ldr fp, [sp], #4)
      f0:	bx	lr

000000f4 <flatbuffers_uint32_write_to_pe>:
      f4:	push	{fp, lr}
      f8:	add	fp, sp, #4
      fc:	sub	sp, sp, #8
     100:	str	r0, [fp, #-8]
     104:	str	r1, [fp, #-12]
     108:	ldr	r0, [fp, #-12]
     10c:	bl	d0 <flatbuffers_uint32_cast_to_pe>
     110:	mov	r2, r0
     114:	ldr	r3, [fp, #-8]
     118:	str	r2, [r3]
     11c:	nop			; (mov r0, r0)
     120:	sub	sp, fp, #4
     124:	pop	{fp, pc}

00000128 <flatbuffers_uint64_cast_to_pe>:
     128:	push	{fp}		; (str fp, [sp, #-4]!)
     12c:	add	fp, sp, #0
     130:	sub	sp, sp, #12
     134:	strd	r0, [fp, #-12]
     138:	ldrd	r2, [fp, #-12]
     13c:	mov	r0, r2
     140:	mov	r1, r3
     144:	add	sp, fp, #0
     148:	pop	{fp}		; (ldr fp, [sp], #4)
     14c:	bx	lr

00000150 <flatbuffers_uint64_write_to_pe>:
     150:	push	{fp, lr}
     154:	add	fp, sp, #4
     158:	sub	sp, sp, #16
     15c:	str	r0, [fp, #-8]
     160:	strd	r2, [fp, #-20]	; 0xffffffec
     164:	ldrd	r0, [fp, #-20]	; 0xffffffec
     168:	bl	128 <flatbuffers_uint64_cast_to_pe>
     16c:	mov	r2, r0
     170:	mov	r3, r1
     174:	ldr	r1, [fp, #-8]
     178:	strd	r2, [r1]
     17c:	nop			; (mov r0, r0)
     180:	sub	sp, fp, #4
     184:	pop	{fp, pc}

00000188 <flatbuffers_int8_cast_from_pe>:
     188:	push	{fp}		; (str fp, [sp, #-4]!)
     18c:	add	fp, sp, #0
     190:	sub	sp, sp, #12
     194:	mov	r3, r0
     198:	strb	r3, [fp, #-5]
     19c:	ldrsb	r3, [fp, #-5]
     1a0:	mov	r0, r3
     1a4:	add	sp, fp, #0
     1a8:	pop	{fp}		; (ldr fp, [sp], #4)
     1ac:	bx	lr

000001b0 <flatbuffers_int8_cast_to_pe>:
     1b0:	push	{fp}		; (str fp, [sp, #-4]!)
     1b4:	add	fp, sp, #0
     1b8:	sub	sp, sp, #12
     1bc:	mov	r3, r0
     1c0:	strb	r3, [fp, #-5]
     1c4:	ldrsb	r3, [fp, #-5]
     1c8:	mov	r0, r3
     1cc:	add	sp, fp, #0
     1d0:	pop	{fp}		; (ldr fp, [sp], #4)
     1d4:	bx	lr

000001d8 <flatbuffers_int8_read_from_pe>:
     1d8:	push	{fp, lr}
     1dc:	add	fp, sp, #4
     1e0:	sub	sp, sp, #8
     1e4:	str	r0, [fp, #-8]
     1e8:	ldr	r3, [fp, #-8]
     1ec:	ldrsb	r3, [r3]
     1f0:	mov	r0, r3
     1f4:	bl	188 <flatbuffers_int8_cast_from_pe>
     1f8:	mov	r3, r0
     1fc:	mov	r0, r3
     200:	sub	sp, fp, #4
     204:	pop	{fp, pc}

00000208 <flatbuffers_int8_write_to_pe>:
     208:	push	{fp, lr}
     20c:	add	fp, sp, #4
     210:	sub	sp, sp, #8
     214:	str	r0, [fp, #-8]
     218:	mov	r3, r1
     21c:	strb	r3, [fp, #-9]
     220:	ldrsb	r3, [fp, #-9]
     224:	mov	r0, r3
     228:	bl	1b0 <flatbuffers_int8_cast_to_pe>
     22c:	mov	r3, r0
     230:	mov	r2, r3
     234:	ldr	r3, [fp, #-8]
     238:	strb	r2, [r3]
     23c:	nop			; (mov r0, r0)
     240:	sub	sp, fp, #4
     244:	pop	{fp, pc}

00000248 <flatbuffers_int16_cast_from_pe>:
     248:	push	{fp}		; (str fp, [sp, #-4]!)
     24c:	add	fp, sp, #0
     250:	sub	sp, sp, #12
     254:	mov	r3, r0
     258:	strh	r3, [fp, #-6]
     25c:	ldrsh	r3, [fp, #-6]
     260:	mov	r0, r3
     264:	add	sp, fp, #0
     268:	pop	{fp}		; (ldr fp, [sp], #4)
     26c:	bx	lr

00000270 <flatbuffers_int16_cast_to_pe>:
     270:	push	{fp}		; (str fp, [sp, #-4]!)
     274:	add	fp, sp, #0
     278:	sub	sp, sp, #12
     27c:	mov	r3, r0
     280:	strh	r3, [fp, #-6]
     284:	ldrsh	r3, [fp, #-6]
     288:	mov	r0, r3
     28c:	add	sp, fp, #0
     290:	pop	{fp}		; (ldr fp, [sp], #4)
     294:	bx	lr

00000298 <flatbuffers_int16_read_from_pe>:
     298:	push	{fp, lr}
     29c:	add	fp, sp, #4
     2a0:	sub	sp, sp, #8
     2a4:	str	r0, [fp, #-8]
     2a8:	ldr	r3, [fp, #-8]
     2ac:	ldrsh	r3, [r3]
     2b0:	mov	r0, r3
     2b4:	bl	248 <flatbuffers_int16_cast_from_pe>
     2b8:	mov	r3, r0
     2bc:	mov	r0, r3
     2c0:	sub	sp, fp, #4
     2c4:	pop	{fp, pc}

000002c8 <flatbuffers_int16_write_to_pe>:
     2c8:	push	{fp, lr}
     2cc:	add	fp, sp, #4
     2d0:	sub	sp, sp, #8
     2d4:	str	r0, [fp, #-8]
     2d8:	mov	r3, r1
     2dc:	strh	r3, [fp, #-10]
     2e0:	ldrsh	r3, [fp, #-10]
     2e4:	mov	r0, r3
     2e8:	bl	270 <flatbuffers_int16_cast_to_pe>
     2ec:	mov	r3, r0
     2f0:	mov	r2, r3
     2f4:	ldr	r3, [fp, #-8]
     2f8:	strh	r2, [r3]
     2fc:	nop			; (mov r0, r0)
     300:	sub	sp, fp, #4
     304:	pop	{fp, pc}

00000308 <flatbuffers_int32_cast_to_pe>:
     308:	push	{fp}		; (str fp, [sp, #-4]!)
     30c:	add	fp, sp, #0
     310:	sub	sp, sp, #12
     314:	str	r0, [fp, #-8]
     318:	ldr	r3, [fp, #-8]
     31c:	mov	r0, r3
     320:	add	sp, fp, #0
     324:	pop	{fp}		; (ldr fp, [sp], #4)
     328:	bx	lr

0000032c <flatbuffers_int32_write_to_pe>:
     32c:	push	{fp, lr}
     330:	add	fp, sp, #4
     334:	sub	sp, sp, #8
     338:	str	r0, [fp, #-8]
     33c:	str	r1, [fp, #-12]
     340:	ldr	r0, [fp, #-12]
     344:	bl	308 <flatbuffers_int32_cast_to_pe>
     348:	mov	r2, r0
     34c:	ldr	r3, [fp, #-8]
     350:	str	r2, [r3]
     354:	nop			; (mov r0, r0)
     358:	sub	sp, fp, #4
     35c:	pop	{fp, pc}

00000360 <flatbuffers_int64_cast_to_pe>:
     360:	push	{fp}		; (str fp, [sp, #-4]!)
     364:	add	fp, sp, #0
     368:	sub	sp, sp, #12
     36c:	strd	r0, [fp, #-12]
     370:	ldrd	r2, [fp, #-12]
     374:	mov	r0, r2
     378:	mov	r1, r3
     37c:	add	sp, fp, #0
     380:	pop	{fp}		; (ldr fp, [sp], #4)
     384:	bx	lr

00000388 <flatbuffers_int64_write_to_pe>:
     388:	push	{fp, lr}
     38c:	add	fp, sp, #4
     390:	sub	sp, sp, #16
     394:	str	r0, [fp, #-8]
     398:	strd	r2, [fp, #-20]	; 0xffffffec
     39c:	ldrd	r0, [fp, #-20]	; 0xffffffec
     3a0:	bl	360 <flatbuffers_int64_cast_to_pe>
     3a4:	mov	r2, r0
     3a8:	mov	r3, r1
     3ac:	ldr	r1, [fp, #-8]
     3b0:	strd	r2, [r1]
     3b4:	nop			; (mov r0, r0)
     3b8:	sub	sp, fp, #4
     3bc:	pop	{fp, pc}

000003c0 <flatbuffers_float_cast_from_pe>:
     3c0:	push	{fp}		; (str fp, [sp, #-4]!)
     3c4:	add	fp, sp, #0
     3c8:	sub	sp, sp, #20
     3cc:	vstr	s0, [fp, #-16]
     3d0:	ldr	r3, [fp, #-16]
     3d4:	str	r3, [fp, #-8]
     3d8:	ldr	r3, [fp, #-8]
     3dc:	str	r3, [fp, #-8]
     3e0:	ldr	r3, [fp, #-8]
     3e4:	vmov	s15, r3
     3e8:	vmov.f32	s0, s15
     3ec:	add	sp, fp, #0
     3f0:	pop	{fp}		; (ldr fp, [sp], #4)
     3f4:	bx	lr

000003f8 <flatbuffers_float_cast_to_pe>:
     3f8:	push	{fp}		; (str fp, [sp, #-4]!)
     3fc:	add	fp, sp, #0
     400:	sub	sp, sp, #20
     404:	vstr	s0, [fp, #-16]
     408:	ldr	r3, [fp, #-16]
     40c:	str	r3, [fp, #-8]
     410:	ldr	r3, [fp, #-8]
     414:	str	r3, [fp, #-8]
     418:	ldr	r3, [fp, #-8]
     41c:	vmov	s15, r3
     420:	vmov.f32	s0, s15
     424:	add	sp, fp, #0
     428:	pop	{fp}		; (ldr fp, [sp], #4)
     42c:	bx	lr

00000430 <flatbuffers_float_read_from_pe>:
     430:	push	{fp, lr}
     434:	add	fp, sp, #4
     438:	sub	sp, sp, #8
     43c:	str	r0, [fp, #-8]
     440:	ldr	r3, [fp, #-8]
     444:	vldr	s15, [r3]
     448:	vmov.f32	s0, s15
     44c:	bl	3c0 <flatbuffers_float_cast_from_pe>
     450:	vmov.f32	s15, s0
     454:	vmov.f32	s0, s15
     458:	sub	sp, fp, #4
     45c:	pop	{fp, pc}

00000460 <flatbuffers_float_write_to_pe>:
     460:	push	{fp, lr}
     464:	add	fp, sp, #4
     468:	sub	sp, sp, #8
     46c:	str	r0, [fp, #-8]
     470:	vstr	s0, [fp, #-12]
     474:	vldr	s0, [fp, #-12]
     478:	bl	3f8 <flatbuffers_float_cast_to_pe>
     47c:	vmov.f32	s15, s0
     480:	ldr	r3, [fp, #-8]
     484:	vstr	s15, [r3]
     488:	nop			; (mov r0, r0)
     48c:	sub	sp, fp, #4
     490:	pop	{fp, pc}

00000494 <flatbuffers_double_cast_from_pe>:
     494:	push	{fp}		; (str fp, [sp, #-4]!)
     498:	add	fp, sp, #0
     49c:	sub	sp, sp, #20
     4a0:	vstr	d0, [fp, #-20]	; 0xffffffec
     4a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
     4a8:	strd	r2, [fp, #-12]
     4ac:	ldrd	r2, [fp, #-12]
     4b0:	strd	r2, [fp, #-12]
     4b4:	ldrd	r2, [fp, #-12]
     4b8:	vmov	d7, r2, r3
     4bc:	vmov.f64	d0, d7
     4c0:	add	sp, fp, #0
     4c4:	pop	{fp}		; (ldr fp, [sp], #4)
     4c8:	bx	lr

000004cc <flatbuffers_double_cast_to_pe>:
     4cc:	push	{fp}		; (str fp, [sp, #-4]!)
     4d0:	add	fp, sp, #0
     4d4:	sub	sp, sp, #20
     4d8:	vstr	d0, [fp, #-20]	; 0xffffffec
     4dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
     4e0:	strd	r2, [fp, #-12]
     4e4:	ldrd	r2, [fp, #-12]
     4e8:	strd	r2, [fp, #-12]
     4ec:	ldrd	r2, [fp, #-12]
     4f0:	vmov	d7, r2, r3
     4f4:	vmov.f64	d0, d7
     4f8:	add	sp, fp, #0
     4fc:	pop	{fp}		; (ldr fp, [sp], #4)
     500:	bx	lr

00000504 <flatbuffers_double_read_from_pe>:
     504:	push	{fp, lr}
     508:	add	fp, sp, #4
     50c:	sub	sp, sp, #8
     510:	str	r0, [fp, #-8]
     514:	ldr	r3, [fp, #-8]
     518:	vldr	d7, [r3]
     51c:	vmov.f64	d0, d7
     520:	bl	494 <flatbuffers_double_cast_from_pe>
     524:	vmov.f64	d7, d0
     528:	vmov.f64	d0, d7
     52c:	sub	sp, fp, #4
     530:	pop	{fp, pc}

00000534 <flatbuffers_double_write_to_pe>:
     534:	push	{fp, lr}
     538:	add	fp, sp, #4
     53c:	sub	sp, sp, #16
     540:	str	r0, [fp, #-8]
     544:	vstr	d0, [fp, #-20]	; 0xffffffec
     548:	vldr	d0, [fp, #-20]	; 0xffffffec
     54c:	bl	4cc <flatbuffers_double_cast_to_pe>
     550:	vmov.f64	d7, d0
     554:	ldr	r3, [fp, #-8]
     558:	vstr	d7, [r3]
     55c:	nop			; (mov r0, r0)
     560:	sub	sp, fp, #4
     564:	pop	{fp, pc}

00000568 <flatbuffers_bool_cast_to_pe>:
     568:	push	{fp}		; (str fp, [sp, #-4]!)
     56c:	add	fp, sp, #0
     570:	sub	sp, sp, #12
     574:	mov	r3, r0
     578:	strb	r3, [fp, #-5]
     57c:	ldrb	r3, [fp, #-5]
     580:	mov	r0, r3
     584:	add	sp, fp, #0
     588:	pop	{fp}		; (ldr fp, [sp], #4)
     58c:	bx	lr

00000590 <flatbuffers_bool_write_to_pe>:
     590:	push	{fp, lr}
     594:	add	fp, sp, #4
     598:	sub	sp, sp, #8
     59c:	str	r0, [fp, #-8]
     5a0:	mov	r3, r1
     5a4:	strb	r3, [fp, #-9]
     5a8:	ldrb	r3, [fp, #-9]
     5ac:	mov	r0, r3
     5b0:	bl	568 <flatbuffers_bool_cast_to_pe>
     5b4:	mov	r3, r0
     5b8:	mov	r2, r3
     5bc:	ldr	r3, [fp, #-8]
     5c0:	strb	r2, [r3]
     5c4:	nop			; (mov r0, r0)
     5c8:	sub	sp, fp, #4
     5cc:	pop	{fp, pc}

000005d0 <__flatbuffers_uoffset_cast_from_pe>:
     5d0:	push	{fp}		; (str fp, [sp, #-4]!)
     5d4:	add	fp, sp, #0
     5d8:	sub	sp, sp, #12
     5dc:	str	r0, [fp, #-8]
     5e0:	ldr	r3, [fp, #-8]
     5e4:	mov	r0, r3
     5e8:	add	sp, fp, #0
     5ec:	pop	{fp}		; (ldr fp, [sp], #4)
     5f0:	bx	lr

000005f4 <__flatbuffers_uoffset_read_from_pe>:
     5f4:	push	{fp, lr}
     5f8:	add	fp, sp, #4
     5fc:	sub	sp, sp, #8
     600:	str	r0, [fp, #-8]
     604:	ldr	r3, [fp, #-8]
     608:	ldr	r3, [r3]
     60c:	mov	r0, r3
     610:	bl	5d0 <__flatbuffers_uoffset_cast_from_pe>
     614:	mov	r3, r0
     618:	mov	r0, r3
     61c:	sub	sp, fp, #4
     620:	pop	{fp, pc}

00000624 <__flatbuffers_soffset_cast_from_pe>:
     624:	push	{fp}		; (str fp, [sp, #-4]!)
     628:	add	fp, sp, #0
     62c:	sub	sp, sp, #12
     630:	str	r0, [fp, #-8]
     634:	ldr	r3, [fp, #-8]
     638:	mov	r0, r3
     63c:	add	sp, fp, #0
     640:	pop	{fp}		; (ldr fp, [sp], #4)
     644:	bx	lr

00000648 <__flatbuffers_soffset_read_from_pe>:
     648:	push	{fp, lr}
     64c:	add	fp, sp, #4
     650:	sub	sp, sp, #8
     654:	str	r0, [fp, #-8]
     658:	ldr	r3, [fp, #-8]
     65c:	ldr	r3, [r3]
     660:	mov	r0, r3
     664:	bl	624 <__flatbuffers_soffset_cast_from_pe>
     668:	mov	r3, r0
     66c:	mov	r0, r3
     670:	sub	sp, fp, #4
     674:	pop	{fp, pc}

00000678 <__flatbuffers_voffset_cast_from_pe>:
     678:	push	{fp}		; (str fp, [sp, #-4]!)
     67c:	add	fp, sp, #0
     680:	sub	sp, sp, #12
     684:	mov	r3, r0
     688:	strh	r3, [fp, #-6]
     68c:	ldrh	r3, [fp, #-6]
     690:	mov	r0, r3
     694:	add	sp, fp, #0
     698:	pop	{fp}		; (ldr fp, [sp], #4)
     69c:	bx	lr

000006a0 <__flatbuffers_voffset_read_from_pe>:
     6a0:	push	{fp, lr}
     6a4:	add	fp, sp, #4
     6a8:	sub	sp, sp, #8
     6ac:	str	r0, [fp, #-8]
     6b0:	ldr	r3, [fp, #-8]
     6b4:	ldrh	r3, [r3]
     6b8:	mov	r0, r3
     6bc:	bl	678 <__flatbuffers_voffset_cast_from_pe>
     6c0:	mov	r3, r0
     6c4:	mov	r0, r3
     6c8:	sub	sp, fp, #4
     6cc:	pop	{fp, pc}

000006d0 <__flatbuffers_thash_cast_from_pe>:
     6d0:	push	{fp}		; (str fp, [sp, #-4]!)
     6d4:	add	fp, sp, #0
     6d8:	sub	sp, sp, #12
     6dc:	str	r0, [fp, #-8]
     6e0:	ldr	r3, [fp, #-8]
     6e4:	mov	r0, r3
     6e8:	add	sp, fp, #0
     6ec:	pop	{fp}		; (ldr fp, [sp], #4)
     6f0:	bx	lr

000006f4 <__flatbuffers_thash_cast_from_le>:
     6f4:	push	{fp}		; (str fp, [sp, #-4]!)
     6f8:	add	fp, sp, #0
     6fc:	sub	sp, sp, #12
     700:	str	r0, [fp, #-8]
     704:	ldr	r3, [fp, #-8]
     708:	mov	r0, r3
     70c:	add	sp, fp, #0
     710:	pop	{fp}		; (ldr fp, [sp], #4)
     714:	bx	lr

00000718 <__flatbuffers_thash_read_from_pe>:
     718:	push	{fp, lr}
     71c:	add	fp, sp, #4
     720:	sub	sp, sp, #8
     724:	str	r0, [fp, #-8]
     728:	ldr	r3, [fp, #-8]
     72c:	ldr	r3, [r3]
     730:	mov	r0, r3
     734:	bl	6d0 <__flatbuffers_thash_cast_from_pe>
     738:	mov	r3, r0
     73c:	mov	r0, r3
     740:	sub	sp, fp, #4
     744:	pop	{fp, pc}

00000748 <flatbuffers_has_identifier>:
     748:	push	{fp, lr}
     74c:	add	fp, sp, #4
     750:	sub	sp, sp, #16
     754:	str	r0, [fp, #-16]
     758:	str	r1, [fp, #-20]	; 0xffffffec
     75c:	mov	r3, #0
     760:	str	r3, [fp, #-12]
     764:	ldr	r3, [fp, #-20]	; 0xffffffec
     768:	cmp	r3, #0
     76c:	bne	778 <flatbuffers_has_identifier+0x30>
     770:	mov	r3, #1
     774:	b	7dc <flatbuffers_has_identifier+0x94>
     778:	sub	r3, fp, #12
     77c:	mov	r2, #4
     780:	ldr	r1, [fp, #-20]	; 0xffffffec
     784:	mov	r0, r3
     788:	bl	0 <strncpy>
     78c:	ldr	r3, [fp, #-12]
     790:	mov	r0, r3
     794:	bl	6f4 <__flatbuffers_thash_cast_from_le>
     798:	mov	r3, r0
     79c:	str	r3, [fp, #-12]
     7a0:	ldr	r3, [fp, #-16]
     7a4:	add	r3, r3, #4
     7a8:	mov	r0, r3
     7ac:	bl	718 <__flatbuffers_thash_read_from_pe>
     7b0:	str	r0, [fp, #-8]
     7b4:	ldr	r3, [fp, #-12]
     7b8:	cmp	r3, #0
     7bc:	beq	7d0 <flatbuffers_has_identifier+0x88>
     7c0:	ldr	r3, [fp, #-12]
     7c4:	ldr	r2, [fp, #-8]
     7c8:	cmp	r2, r3
     7cc:	bne	7d8 <flatbuffers_has_identifier+0x90>
     7d0:	mov	r3, #1
     7d4:	b	7dc <flatbuffers_has_identifier+0x94>
     7d8:	mov	r3, #0
     7dc:	mov	r0, r3
     7e0:	sub	sp, fp, #4
     7e4:	pop	{fp, pc}

000007e8 <MyGame_Example_Color_cast_from_pe>:
     7e8:	push	{fp}		; (str fp, [sp, #-4]!)
     7ec:	add	fp, sp, #0
     7f0:	sub	sp, sp, #12
     7f4:	mov	r3, r0
     7f8:	strb	r3, [fp, #-5]
     7fc:	ldrsb	r3, [fp, #-5]
     800:	mov	r0, r3
     804:	add	sp, fp, #0
     808:	pop	{fp}		; (ldr fp, [sp], #4)
     80c:	bx	lr

00000810 <MyGame_Example_Color_read_from_pe>:
     810:	push	{fp, lr}
     814:	add	fp, sp, #4
     818:	sub	sp, sp, #8
     81c:	str	r0, [fp, #-8]
     820:	ldr	r3, [fp, #-8]
     824:	ldrsb	r3, [r3]
     828:	mov	r0, r3
     82c:	bl	7e8 <MyGame_Example_Color_cast_from_pe>
     830:	mov	r3, r0
     834:	mov	r0, r3
     838:	sub	sp, fp, #4
     83c:	pop	{fp, pc}

00000840 <MyGame_Example_Test_a>:
     840:	push	{fp, lr}
     844:	add	fp, sp, #4
     848:	sub	sp, sp, #8
     84c:	str	r0, [fp, #-8]
     850:	ldr	r3, [fp, #-8]
     854:	cmp	r3, #0
     858:	beq	870 <MyGame_Example_Test_a+0x30>
     85c:	ldr	r3, [fp, #-8]
     860:	mov	r0, r3
     864:	bl	298 <flatbuffers_int16_read_from_pe>
     868:	mov	r3, r0
     86c:	b	874 <MyGame_Example_Test_a+0x34>
     870:	mov	r3, #0
     874:	mov	r0, r3
     878:	sub	sp, fp, #4
     87c:	pop	{fp, pc}

00000880 <MyGame_Example_Test_b>:
     880:	push	{fp, lr}
     884:	add	fp, sp, #4
     888:	sub	sp, sp, #8
     88c:	str	r0, [fp, #-8]
     890:	ldr	r3, [fp, #-8]
     894:	cmp	r3, #0
     898:	beq	8b4 <MyGame_Example_Test_b+0x34>
     89c:	ldr	r3, [fp, #-8]
     8a0:	add	r3, r3, #2
     8a4:	mov	r0, r3
     8a8:	bl	1d8 <flatbuffers_int8_read_from_pe>
     8ac:	mov	r3, r0
     8b0:	b	8b8 <MyGame_Example_Test_b+0x38>
     8b4:	mov	r3, #0
     8b8:	mov	r0, r3
     8bc:	sub	sp, fp, #4
     8c0:	pop	{fp, pc}

000008c4 <MyGame_Example_Vec3_x>:
     8c4:	push	{fp, lr}
     8c8:	add	fp, sp, #4
     8cc:	sub	sp, sp, #8
     8d0:	str	r0, [fp, #-8]
     8d4:	ldr	r3, [fp, #-8]
     8d8:	cmp	r3, #0
     8dc:	beq	8f4 <MyGame_Example_Vec3_x+0x30>
     8e0:	ldr	r3, [fp, #-8]
     8e4:	mov	r0, r3
     8e8:	bl	430 <flatbuffers_float_read_from_pe>
     8ec:	vmov.f32	s15, s0
     8f0:	b	8f8 <MyGame_Example_Vec3_x+0x34>
     8f4:	vldr	s15, [pc, #8]	; 904 <MyGame_Example_Vec3_x+0x40>
     8f8:	vmov.f32	s0, s15
     8fc:	sub	sp, fp, #4
     900:	pop	{fp, pc}
     904:	.word	0x00000000

00000908 <MyGame_Example_Vec3_y>:
     908:	push	{fp, lr}
     90c:	add	fp, sp, #4
     910:	sub	sp, sp, #8
     914:	str	r0, [fp, #-8]
     918:	ldr	r3, [fp, #-8]
     91c:	cmp	r3, #0
     920:	beq	93c <MyGame_Example_Vec3_y+0x34>
     924:	ldr	r3, [fp, #-8]
     928:	add	r3, r3, #4
     92c:	mov	r0, r3
     930:	bl	430 <flatbuffers_float_read_from_pe>
     934:	vmov.f32	s15, s0
     938:	b	940 <MyGame_Example_Vec3_y+0x38>
     93c:	vldr	s15, [pc, #8]	; 94c <MyGame_Example_Vec3_y+0x44>
     940:	vmov.f32	s0, s15
     944:	sub	sp, fp, #4
     948:	pop	{fp, pc}
     94c:	.word	0x00000000

00000950 <MyGame_Example_Vec3_z>:
     950:	push	{fp, lr}
     954:	add	fp, sp, #4
     958:	sub	sp, sp, #8
     95c:	str	r0, [fp, #-8]
     960:	ldr	r3, [fp, #-8]
     964:	cmp	r3, #0
     968:	beq	984 <MyGame_Example_Vec3_z+0x34>
     96c:	ldr	r3, [fp, #-8]
     970:	add	r3, r3, #8
     974:	mov	r0, r3
     978:	bl	430 <flatbuffers_float_read_from_pe>
     97c:	vmov.f32	s15, s0
     980:	b	988 <MyGame_Example_Vec3_z+0x38>
     984:	vldr	s15, [pc, #8]	; 994 <MyGame_Example_Vec3_z+0x44>
     988:	vmov.f32	s0, s15
     98c:	sub	sp, fp, #4
     990:	pop	{fp, pc}
     994:	.word	0x00000000

00000998 <MyGame_Example_Vec3_test1>:
     998:	push	{fp, lr}
     99c:	add	fp, sp, #4
     9a0:	sub	sp, sp, #8
     9a4:	str	r0, [fp, #-8]
     9a8:	ldr	r3, [fp, #-8]
     9ac:	cmp	r3, #0
     9b0:	beq	9cc <MyGame_Example_Vec3_test1+0x34>
     9b4:	ldr	r3, [fp, #-8]
     9b8:	add	r3, r3, #16
     9bc:	mov	r0, r3
     9c0:	bl	504 <flatbuffers_double_read_from_pe>
     9c4:	vmov.f64	d7, d0
     9c8:	b	9d0 <MyGame_Example_Vec3_test1+0x38>
     9cc:	vldr	d7, [pc, #12]	; 9e0 <MyGame_Example_Vec3_test1+0x48>
     9d0:	vmov.f64	d0, d7
     9d4:	sub	sp, fp, #4
     9d8:	pop	{fp, pc}
     9dc:	nop			; (mov r0, r0)
	...

000009e8 <MyGame_Example_Vec3_test2>:
     9e8:	push	{fp, lr}
     9ec:	add	fp, sp, #4
     9f0:	sub	sp, sp, #8
     9f4:	str	r0, [fp, #-8]
     9f8:	ldr	r3, [fp, #-8]
     9fc:	cmp	r3, #0
     a00:	beq	a1c <MyGame_Example_Vec3_test2+0x34>
     a04:	ldr	r3, [fp, #-8]
     a08:	add	r3, r3, #24
     a0c:	mov	r0, r3
     a10:	bl	810 <MyGame_Example_Color_read_from_pe>
     a14:	mov	r3, r0
     a18:	b	a20 <MyGame_Example_Vec3_test2+0x38>
     a1c:	mov	r3, #0
     a20:	mov	r0, r3
     a24:	sub	sp, fp, #4
     a28:	pop	{fp, pc}

00000a2c <MyGame_Example_Vec3_test3>:
     a2c:	push	{fp}		; (str fp, [sp, #-4]!)
     a30:	add	fp, sp, #0
     a34:	sub	sp, sp, #12
     a38:	str	r0, [fp, #-8]
     a3c:	ldr	r3, [fp, #-8]
     a40:	cmp	r3, #0
     a44:	beq	a54 <MyGame_Example_Vec3_test3+0x28>
     a48:	ldr	r3, [fp, #-8]
     a4c:	add	r3, r3, #26
     a50:	b	a58 <MyGame_Example_Vec3_test3+0x2c>
     a54:	mov	r3, #0
     a58:	mov	r0, r3
     a5c:	add	sp, fp, #0
     a60:	pop	{fp}		; (ldr fp, [sp], #4)
     a64:	bx	lr

00000a68 <MyGame_Example_Monster_as_root_with_identifier>:
     a68:	push	{fp, lr}
     a6c:	add	fp, sp, #4
     a70:	sub	sp, sp, #8
     a74:	str	r0, [fp, #-8]
     a78:	str	r1, [fp, #-12]
     a7c:	ldr	r3, [fp, #-8]
     a80:	cmp	r3, #0
     a84:	beq	ab8 <MyGame_Example_Monster_as_root_with_identifier+0x50>
     a88:	ldr	r1, [fp, #-12]
     a8c:	ldr	r0, [fp, #-8]
     a90:	bl	748 <flatbuffers_has_identifier>
     a94:	mov	r3, r0
     a98:	cmp	r3, #0
     a9c:	beq	ab8 <MyGame_Example_Monster_as_root_with_identifier+0x50>
     aa0:	ldr	r0, [fp, #-8]
     aa4:	bl	5f4 <__flatbuffers_uoffset_read_from_pe>
     aa8:	mov	r2, r0
     aac:	ldr	r3, [fp, #-8]
     ab0:	add	r3, r3, r2
     ab4:	b	abc <MyGame_Example_Monster_as_root_with_identifier+0x54>
     ab8:	mov	r3, #0
     abc:	mov	r0, r3
     ac0:	sub	sp, fp, #4
     ac4:	pop	{fp, pc}

00000ac8 <MyGame_Example_Monster_pos>:
     ac8:	push	{fp, lr}
     acc:	add	fp, sp, #4
     ad0:	sub	sp, sp, #16
     ad4:	str	r0, [fp, #-16]
     ad8:	mov	r3, #0
     adc:	strh	r3, [fp, #-6]
     ae0:	ldr	r3, [fp, #-16]
     ae4:	cmp	r3, #0
     ae8:	bne	b00 <MyGame_Example_Monster_pos+0x38>
     aec:	ldr	r3, [pc, #164]	; b98 <MyGame_Example_Monster_pos+0xd0>
     af0:	mov	r2, #696	; 0x2b8
     af4:	ldr	r1, [pc, #160]	; b9c <MyGame_Example_Monster_pos+0xd4>
     af8:	ldr	r0, [pc, #160]	; ba0 <MyGame_Example_Monster_pos+0xd8>
     afc:	bl	0 <__assert_fail>
     b00:	mov	r3, #0
     b04:	strh	r3, [fp, #-8]
     b08:	ldr	r0, [fp, #-16]
     b0c:	bl	648 <__flatbuffers_soffset_read_from_pe>
     b10:	mov	r3, r0
     b14:	rsb	r3, r3, #0
     b18:	ldr	r2, [fp, #-16]
     b1c:	add	r3, r2, r3
     b20:	str	r3, [fp, #-12]
     b24:	ldr	r0, [fp, #-12]
     b28:	bl	6a0 <__flatbuffers_voffset_read_from_pe>
     b2c:	mov	r3, r0
     b30:	mov	r2, r3
     b34:	ldrh	r3, [fp, #-8]
     b38:	add	r3, r3, #3
     b3c:	lsl	r3, r3, #1
     b40:	cmp	r2, r3
     b44:	bcc	b6c <MyGame_Example_Monster_pos+0xa4>
     b48:	ldrh	r3, [fp, #-8]
     b4c:	add	r3, r3, #2
     b50:	lsl	r3, r3, #1
     b54:	ldr	r2, [fp, #-12]
     b58:	add	r3, r2, r3
     b5c:	mov	r0, r3
     b60:	bl	6a0 <__flatbuffers_voffset_read_from_pe>
     b64:	mov	r3, r0
     b68:	strh	r3, [fp, #-6]
     b6c:	ldrh	r3, [fp, #-6]
     b70:	cmp	r3, #0
     b74:	beq	b88 <MyGame_Example_Monster_pos+0xc0>
     b78:	ldrh	r3, [fp, #-6]
     b7c:	ldr	r2, [fp, #-16]
     b80:	add	r3, r2, r3
     b84:	b	b8c <MyGame_Example_Monster_pos+0xc4>
     b88:	mov	r3, #0
     b8c:	mov	r0, r3
     b90:	sub	sp, fp, #4
     b94:	pop	{fp, pc}
     b98:	.word	0x000002a0
     b9c:	.word	0x00000004
     ba0:	.word	0x0000006c

00000ba4 <flatcc_json_parser_init>:
     ba4:	push	{fp, lr}
     ba8:	add	fp, sp, #4
     bac:	sub	sp, sp, #16
     bb0:	str	r0, [fp, #-8]
     bb4:	str	r1, [fp, #-12]
     bb8:	str	r2, [fp, #-16]
     bbc:	str	r3, [fp, #-20]	; 0xffffffec
     bc0:	mov	r2, #44	; 0x2c
     bc4:	mov	r1, #0
     bc8:	ldr	r0, [fp, #-8]
     bcc:	bl	0 <memset>
     bd0:	ldr	r3, [fp, #-8]
     bd4:	ldr	r2, [fp, #-12]
     bd8:	str	r2, [r3]
     bdc:	ldr	r3, [fp, #-8]
     be0:	ldr	r2, [fp, #-16]
     be4:	str	r2, [r3, #4]
     be8:	ldr	r3, [fp, #-8]
     bec:	mov	r2, #1
     bf0:	str	r2, [r3, #16]
     bf4:	ldr	r3, [fp, #-8]
     bf8:	ldr	r2, [fp, #4]
     bfc:	str	r2, [r3, #8]
     c00:	ldr	r3, [fp, #-8]
     c04:	ldr	r2, [fp, #-16]
     c08:	str	r2, [r3, #28]
     c0c:	ldr	r3, [fp, #-8]
     c10:	ldr	r2, [fp, #-20]	; 0xffffffec
     c14:	str	r2, [r3, #32]
     c18:	ldr	r3, [fp, #-8]
     c1c:	ldr	r2, [fp, #-16]
     c20:	str	r2, [r3, #36]	; 0x24
     c24:	nop			; (mov r0, r0)
     c28:	sub	sp, fp, #4
     c2c:	pop	{fp, pc}

00000c30 <flatcc_json_parser_space>:
     c30:	push	{fp, lr}
     c34:	add	fp, sp, #4
     c38:	sub	sp, sp, #16
     c3c:	str	r0, [fp, #-8]
     c40:	str	r1, [fp, #-12]
     c44:	str	r2, [fp, #-16]
     c48:	ldr	r2, [fp, #-16]
     c4c:	ldr	r3, [fp, #-12]
     c50:	sub	r3, r2, r3
     c54:	cmp	r3, #1
     c58:	ble	ca4 <flatcc_json_parser_space+0x74>
     c5c:	ldr	r3, [fp, #-12]
     c60:	ldrb	r3, [r3]
     c64:	cmp	r3, #32
     c68:	bls	c74 <flatcc_json_parser_space+0x44>
     c6c:	ldr	r3, [fp, #-12]
     c70:	b	cb8 <flatcc_json_parser_space+0x88>
     c74:	ldr	r3, [fp, #-12]
     c78:	ldrb	r3, [r3]
     c7c:	cmp	r3, #32
     c80:	bne	ca4 <flatcc_json_parser_space+0x74>
     c84:	ldr	r3, [fp, #-12]
     c88:	add	r3, r3, #1
     c8c:	ldrb	r3, [r3]
     c90:	cmp	r3, #32
     c94:	bls	ca4 <flatcc_json_parser_space+0x74>
     c98:	ldr	r3, [fp, #-12]
     c9c:	add	r3, r3, #1
     ca0:	b	cb8 <flatcc_json_parser_space+0x88>
     ca4:	ldr	r2, [fp, #-16]
     ca8:	ldr	r1, [fp, #-12]
     cac:	ldr	r0, [fp, #-8]
     cb0:	bl	0 <flatcc_json_parser_space_ext>
     cb4:	mov	r3, r0
     cb8:	mov	r0, r3
     cbc:	sub	sp, fp, #4
     cc0:	pop	{fp, pc}

00000cc4 <flatcc_json_parser_symbol_start>:
     cc4:	push	{fp, lr}
     cc8:	add	fp, sp, #4
     ccc:	sub	sp, sp, #16
     cd0:	str	r0, [fp, #-8]
     cd4:	str	r1, [fp, #-12]
     cd8:	str	r2, [fp, #-16]
     cdc:	ldr	r2, [fp, #-12]
     ce0:	ldr	r3, [fp, #-16]
     ce4:	cmp	r2, r3
     ce8:	bne	cf4 <flatcc_json_parser_symbol_start+0x30>
     cec:	ldr	r3, [fp, #-12]
     cf0:	b	d5c <flatcc_json_parser_symbol_start+0x98>
     cf4:	ldr	r3, [fp, #-12]
     cf8:	ldrb	r3, [r3]
     cfc:	cmp	r3, #34	; 0x22
     d00:	bne	d20 <flatcc_json_parser_symbol_start+0x5c>
     d04:	ldr	r3, [fp, #-12]
     d08:	add	r3, r3, #1
     d0c:	str	r3, [fp, #-12]
     d10:	ldr	r3, [fp, #-8]
     d14:	mov	r2, #0
     d18:	str	r2, [r3, #12]
     d1c:	b	d58 <flatcc_json_parser_symbol_start+0x94>
     d20:	ldr	r3, [fp, #-12]
     d24:	ldrb	r3, [r3]
     d28:	cmp	r3, #46	; 0x2e
     d2c:	bne	d4c <flatcc_json_parser_symbol_start+0x88>
     d30:	mov	r3, #5
     d34:	ldr	r2, [fp, #-16]
     d38:	ldr	r1, [fp, #-12]
     d3c:	ldr	r0, [fp, #-8]
     d40:	bl	0 <flatcc_json_parser_set_error>
     d44:	mov	r3, r0
     d48:	b	d5c <flatcc_json_parser_symbol_start+0x98>
     d4c:	ldr	r3, [fp, #-8]
     d50:	mov	r2, #1
     d54:	str	r2, [r3, #12]
     d58:	ldr	r3, [fp, #-12]
     d5c:	mov	r0, r3
     d60:	sub	sp, fp, #4
     d64:	pop	{fp, pc}

00000d68 <flatcc_json_parser_symbol_part_ext>:
     d68:	push	{r4, r5, r6, r7, r8, r9, fp}
     d6c:	add	fp, sp, #24
     d70:	sub	sp, sp, #60	; 0x3c
     d74:	str	r0, [fp, #-48]	; 0xffffffd0
     d78:	str	r1, [fp, #-52]	; 0xffffffcc
     d7c:	mov	r2, #0
     d80:	mov	r3, #0
     d84:	strd	r2, [fp, #-36]	; 0xffffffdc
     d88:	ldr	r2, [fp, #-52]	; 0xffffffcc
     d8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     d90:	sub	r3, r2, r3
     d94:	str	r3, [fp, #-40]	; 0xffffffd8
     d98:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d9c:	cmp	r3, #8
     da0:	bls	dac <flatcc_json_parser_symbol_part_ext+0x44>
     da4:	mov	r3, #8
     da8:	str	r3, [fp, #-40]	; 0xffffffd8
     dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
     db0:	cmp	r3, #8
     db4:	ldrls	pc, [pc, r3, lsl #2]
     db8:	b	f90 <flatcc_json_parser_symbol_part_ext+0x228>
     dbc:	.word	0x00000f90
     dc0:	.word	0x00000f50
     dc4:	.word	0x00000f10
     dc8:	.word	0x00000ed0
     dcc:	.word	0x00000e90
     dd0:	.word	0x00000e64
     dd4:	.word	0x00000e34
     dd8:	.word	0x00000e04
     ddc:	.word	0x00000de0
     de0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     de4:	add	r3, r3, #7
     de8:	ldrb	r3, [r3]
     dec:	uxtb	r0, r3
     df0:	mov	r1, #0
     df4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     df8:	orr	r2, r2, r0
     dfc:	orr	r3, r3, r1
     e00:	strd	r2, [fp, #-36]	; 0xffffffdc
     e04:	ldr	r3, [fp, #-48]	; 0xffffffd0
     e08:	add	r3, r3, #6
     e0c:	ldrb	r3, [r3]
     e10:	uxtb	r2, r3
     e14:	mov	r3, #0
     e18:	lsl	r5, r3, #8
     e1c:	orr	r5, r5, r2, lsr #24
     e20:	lsl	r4, r2, #8
     e24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     e28:	orr	r2, r2, r4
     e2c:	orr	r3, r3, r5
     e30:	strd	r2, [fp, #-36]	; 0xffffffdc
     e34:	ldr	r3, [fp, #-48]	; 0xffffffd0
     e38:	add	r3, r3, #5
     e3c:	ldrb	r3, [r3]
     e40:	uxtb	r2, r3
     e44:	mov	r3, #0
     e48:	lsl	r7, r3, #16
     e4c:	orr	r7, r7, r2, lsr #16
     e50:	lsl	r6, r2, #16
     e54:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     e58:	orr	r2, r2, r6
     e5c:	orr	r3, r3, r7
     e60:	strd	r2, [fp, #-36]	; 0xffffffdc
     e64:	ldr	r3, [fp, #-48]	; 0xffffffd0
     e68:	add	r3, r3, #4
     e6c:	ldrb	r3, [r3]
     e70:	uxtb	r2, r3
     e74:	mov	r3, #0
     e78:	lsr	r9, r2, #8
     e7c:	lsl	r8, r2, #24
     e80:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     e84:	orr	r2, r2, r8
     e88:	orr	r3, r3, r9
     e8c:	strd	r2, [fp, #-36]	; 0xffffffdc
     e90:	ldr	r3, [fp, #-48]	; 0xffffffd0
     e94:	add	r3, r3, #3
     e98:	ldrb	r3, [r3]
     e9c:	uxtb	r2, r3
     ea0:	mov	r3, #0
     ea4:	mov	r3, r2
     ea8:	str	r3, [fp, #-56]	; 0xffffffc8
     eac:	mov	r3, #0
     eb0:	str	r3, [fp, #-60]	; 0xffffffc4
     eb4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     eb8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
     ebc:	orr	r0, r0, r2
     ec0:	orr	r1, r1, r3
     ec4:	mov	r2, r0
     ec8:	mov	r3, r1
     ecc:	strd	r2, [fp, #-36]	; 0xffffffdc
     ed0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     ed4:	add	r3, r3, #2
     ed8:	ldrb	r3, [r3]
     edc:	uxtb	r2, r3
     ee0:	mov	r3, #0
     ee4:	lsl	r3, r2, #8
     ee8:	str	r3, [fp, #-64]	; 0xffffffc0
     eec:	mov	r3, #0
     ef0:	str	r3, [fp, #-68]	; 0xffffffbc
     ef4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     ef8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
     efc:	orr	r0, r0, r2
     f00:	orr	r1, r1, r3
     f04:	mov	r2, r0
     f08:	mov	r3, r1
     f0c:	strd	r2, [fp, #-36]	; 0xffffffdc
     f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f14:	add	r3, r3, #1
     f18:	ldrb	r3, [r3]
     f1c:	uxtb	r2, r3
     f20:	mov	r3, #0
     f24:	lsl	r3, r2, #16
     f28:	str	r3, [fp, #-72]	; 0xffffffb8
     f2c:	mov	r3, #0
     f30:	str	r3, [fp, #-76]	; 0xffffffb4
     f34:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     f38:	ldrd	r0, [fp, #-76]	; 0xffffffb4
     f3c:	orr	r0, r0, r2
     f40:	orr	r1, r1, r3
     f44:	mov	r2, r0
     f48:	mov	r3, r1
     f4c:	strd	r2, [fp, #-36]	; 0xffffffdc
     f50:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f54:	ldrb	r3, [r3]
     f58:	uxtb	r2, r3
     f5c:	mov	r3, #0
     f60:	lsl	r3, r2, #24
     f64:	str	r3, [fp, #-80]	; 0xffffffb0
     f68:	mov	r3, #0
     f6c:	str	r3, [fp, #-84]	; 0xffffffac
     f70:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     f74:	ldrd	r0, [fp, #-84]	; 0xffffffac
     f78:	orr	r0, r0, r2
     f7c:	orr	r1, r1, r3
     f80:	mov	r2, r0
     f84:	mov	r3, r1
     f88:	strd	r2, [fp, #-36]	; 0xffffffdc
     f8c:	nop			; (mov r0, r0)
     f90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     f94:	mov	r0, r2
     f98:	mov	r1, r3
     f9c:	sub	sp, fp, #24
     fa0:	pop	{r4, r5, r6, r7, r8, r9, fp}
     fa4:	bx	lr

00000fa8 <flatcc_json_parser_symbol_part>:
     fa8:	push	{fp, lr}
     fac:	add	fp, sp, #4
     fb0:	sub	sp, sp, #16
     fb4:	str	r0, [fp, #-16]
     fb8:	str	r1, [fp, #-20]	; 0xffffffec
     fbc:	ldr	r2, [fp, #-20]	; 0xffffffec
     fc0:	ldr	r3, [fp, #-16]
     fc4:	sub	r3, r2, r3
     fc8:	str	r3, [fp, #-8]
     fcc:	ldr	r1, [fp, #-20]	; 0xffffffec
     fd0:	ldr	r0, [fp, #-16]
     fd4:	bl	d68 <flatcc_json_parser_symbol_part_ext>
     fd8:	mov	r2, r0
     fdc:	mov	r3, r1
     fe0:	mov	r0, r2
     fe4:	mov	r1, r3
     fe8:	sub	sp, fp, #4
     fec:	pop	{fp, pc}

00000ff0 <flatcc_json_parser_match_scope>:
     ff0:	push	{fp}		; (str fp, [sp, #-4]!)
     ff4:	add	fp, sp, #0
     ff8:	sub	sp, sp, #28
     ffc:	str	r0, [fp, #-16]
    1000:	str	r1, [fp, #-20]	; 0xffffffec
    1004:	str	r2, [fp, #-24]	; 0xffffffe8
    1008:	str	r3, [fp, #-28]	; 0xffffffe4
    100c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1010:	str	r3, [fp, #-8]
    1014:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1018:	ldr	r3, [fp, #-20]	; 0xffffffec
    101c:	sub	r2, r2, r3
    1020:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1024:	cmp	r2, r3
    1028:	bgt	1034 <flatcc_json_parser_match_scope+0x44>
    102c:	ldr	r3, [fp, #-8]
    1030:	b	1064 <flatcc_json_parser_match_scope+0x74>
    1034:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1038:	ldr	r2, [fp, #-20]	; 0xffffffec
    103c:	add	r3, r2, r3
    1040:	ldrb	r3, [r3]
    1044:	cmp	r3, #46	; 0x2e
    1048:	beq	1054 <flatcc_json_parser_match_scope+0x64>
    104c:	ldr	r3, [fp, #-8]
    1050:	b	1064 <flatcc_json_parser_match_scope+0x74>
    1054:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1058:	add	r3, r3, #1
    105c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1060:	add	r3, r2, r3
    1064:	mov	r0, r3
    1068:	add	sp, fp, #0
    106c:	pop	{fp}		; (ldr fp, [sp], #4)
    1070:	bx	lr

00001074 <flatcc_json_parser_constant_start>:
    1074:	push	{fp, lr}
    1078:	add	fp, sp, #4
    107c:	sub	sp, sp, #16
    1080:	str	r0, [fp, #-8]
    1084:	str	r1, [fp, #-12]
    1088:	str	r2, [fp, #-16]
    108c:	ldr	r2, [fp, #-16]
    1090:	ldr	r1, [fp, #-12]
    1094:	ldr	r0, [fp, #-8]
    1098:	bl	cc4 <flatcc_json_parser_symbol_start>
    109c:	str	r0, [fp, #-12]
    10a0:	ldr	r3, [fp, #-8]
    10a4:	ldr	r3, [r3, #12]
    10a8:	cmp	r3, #0
    10ac:	bne	10c4 <flatcc_json_parser_constant_start+0x50>
    10b0:	ldr	r2, [fp, #-16]
    10b4:	ldr	r1, [fp, #-12]
    10b8:	ldr	r0, [fp, #-8]
    10bc:	bl	c30 <flatcc_json_parser_space>
    10c0:	str	r0, [fp, #-12]
    10c4:	ldr	r3, [fp, #-12]
    10c8:	mov	r0, r3
    10cc:	sub	sp, fp, #4
    10d0:	pop	{fp, pc}

000010d4 <flatcc_json_parser_object_start>:
    10d4:	push	{fp, lr}
    10d8:	add	fp, sp, #4
    10dc:	sub	sp, sp, #16
    10e0:	str	r0, [fp, #-8]
    10e4:	str	r1, [fp, #-12]
    10e8:	str	r2, [fp, #-16]
    10ec:	str	r3, [fp, #-20]	; 0xffffffec
    10f0:	ldr	r2, [fp, #-12]
    10f4:	ldr	r3, [fp, #-16]
    10f8:	cmp	r2, r3
    10fc:	beq	1110 <flatcc_json_parser_object_start+0x3c>
    1100:	ldr	r3, [fp, #-12]
    1104:	ldrb	r3, [r3]
    1108:	cmp	r3, #123	; 0x7b
    110c:	beq	1138 <flatcc_json_parser_object_start+0x64>
    1110:	ldr	r3, [fp, #-20]	; 0xffffffec
    1114:	mov	r2, #0
    1118:	str	r2, [r3]
    111c:	mov	r3, #21
    1120:	ldr	r2, [fp, #-16]
    1124:	ldr	r1, [fp, #-12]
    1128:	ldr	r0, [fp, #-8]
    112c:	bl	0 <flatcc_json_parser_set_error>
    1130:	mov	r3, r0
    1134:	b	11b0 <flatcc_json_parser_object_start+0xdc>
    1138:	ldr	r3, [fp, #-12]
    113c:	add	r3, r3, #1
    1140:	ldr	r2, [fp, #-16]
    1144:	mov	r1, r3
    1148:	ldr	r0, [fp, #-8]
    114c:	bl	c30 <flatcc_json_parser_space>
    1150:	str	r0, [fp, #-12]
    1154:	ldr	r2, [fp, #-12]
    1158:	ldr	r3, [fp, #-16]
    115c:	cmp	r2, r3
    1160:	beq	11a0 <flatcc_json_parser_object_start+0xcc>
    1164:	ldr	r3, [fp, #-12]
    1168:	ldrb	r3, [r3]
    116c:	cmp	r3, #125	; 0x7d
    1170:	bne	11a0 <flatcc_json_parser_object_start+0xcc>
    1174:	ldr	r3, [fp, #-20]	; 0xffffffec
    1178:	mov	r2, #0
    117c:	str	r2, [r3]
    1180:	ldr	r3, [fp, #-12]
    1184:	add	r3, r3, #1
    1188:	ldr	r2, [fp, #-16]
    118c:	mov	r1, r3
    1190:	ldr	r0, [fp, #-8]
    1194:	bl	c30 <flatcc_json_parser_space>
    1198:	mov	r3, r0
    119c:	b	11b0 <flatcc_json_parser_object_start+0xdc>
    11a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    11a4:	mov	r2, #1
    11a8:	str	r2, [r3]
    11ac:	ldr	r3, [fp, #-12]
    11b0:	mov	r0, r3
    11b4:	sub	sp, fp, #4
    11b8:	pop	{fp, pc}

000011bc <flatcc_json_parser_object_end>:
    11bc:	push	{fp, lr}
    11c0:	add	fp, sp, #4
    11c4:	sub	sp, sp, #16
    11c8:	str	r0, [fp, #-8]
    11cc:	str	r1, [fp, #-12]
    11d0:	str	r2, [fp, #-16]
    11d4:	str	r3, [fp, #-20]	; 0xffffffec
    11d8:	ldr	r2, [fp, #-16]
    11dc:	ldr	r1, [fp, #-12]
    11e0:	ldr	r0, [fp, #-8]
    11e4:	bl	c30 <flatcc_json_parser_space>
    11e8:	str	r0, [fp, #-12]
    11ec:	ldr	r2, [fp, #-12]
    11f0:	ldr	r3, [fp, #-16]
    11f4:	cmp	r2, r3
    11f8:	bne	1210 <flatcc_json_parser_object_end+0x54>
    11fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1200:	mov	r2, #0
    1204:	str	r2, [r3]
    1208:	ldr	r3, [fp, #-12]
    120c:	b	1318 <flatcc_json_parser_object_end+0x15c>
    1210:	ldr	r3, [fp, #-12]
    1214:	ldrb	r3, [r3]
    1218:	cmp	r3, #44	; 0x2c
    121c:	beq	1278 <flatcc_json_parser_object_end+0xbc>
    1220:	ldr	r3, [fp, #-20]	; 0xffffffec
    1224:	mov	r2, #0
    1228:	str	r2, [r3]
    122c:	ldr	r3, [fp, #-12]
    1230:	ldrb	r3, [r3]
    1234:	cmp	r3, #125	; 0x7d
    1238:	beq	1258 <flatcc_json_parser_object_end+0x9c>
    123c:	mov	r3, #10
    1240:	ldr	r2, [fp, #-16]
    1244:	ldr	r1, [fp, #-12]
    1248:	ldr	r0, [fp, #-8]
    124c:	bl	0 <flatcc_json_parser_set_error>
    1250:	mov	r3, r0
    1254:	b	1318 <flatcc_json_parser_object_end+0x15c>
    1258:	ldr	r3, [fp, #-12]
    125c:	add	r3, r3, #1
    1260:	ldr	r2, [fp, #-16]
    1264:	mov	r1, r3
    1268:	ldr	r0, [fp, #-8]
    126c:	bl	c30 <flatcc_json_parser_space>
    1270:	mov	r3, r0
    1274:	b	1318 <flatcc_json_parser_object_end+0x15c>
    1278:	ldr	r3, [fp, #-12]
    127c:	add	r3, r3, #1
    1280:	ldr	r2, [fp, #-16]
    1284:	mov	r1, r3
    1288:	ldr	r0, [fp, #-8]
    128c:	bl	c30 <flatcc_json_parser_space>
    1290:	str	r0, [fp, #-12]
    1294:	ldr	r2, [fp, #-12]
    1298:	ldr	r3, [fp, #-16]
    129c:	cmp	r2, r3
    12a0:	bne	12cc <flatcc_json_parser_object_end+0x110>
    12a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    12a8:	mov	r2, #0
    12ac:	str	r2, [r3]
    12b0:	mov	r3, #10
    12b4:	ldr	r2, [fp, #-16]
    12b8:	ldr	r1, [fp, #-12]
    12bc:	ldr	r0, [fp, #-8]
    12c0:	bl	0 <flatcc_json_parser_set_error>
    12c4:	mov	r3, r0
    12c8:	b	1318 <flatcc_json_parser_object_end+0x15c>
    12cc:	ldr	r3, [fp, #-12]
    12d0:	ldrb	r3, [r3]
    12d4:	cmp	r3, #125	; 0x7d
    12d8:	bne	1308 <flatcc_json_parser_object_end+0x14c>
    12dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    12e0:	mov	r2, #0
    12e4:	str	r2, [r3]
    12e8:	ldr	r3, [fp, #-12]
    12ec:	add	r3, r3, #1
    12f0:	ldr	r2, [fp, #-16]
    12f4:	mov	r1, r3
    12f8:	ldr	r0, [fp, #-8]
    12fc:	bl	c30 <flatcc_json_parser_space>
    1300:	mov	r3, r0
    1304:	b	1318 <flatcc_json_parser_object_end+0x15c>
    1308:	ldr	r3, [fp, #-20]	; 0xffffffec
    130c:	mov	r2, #1
    1310:	str	r2, [r3]
    1314:	ldr	r3, [fp, #-12]
    1318:	mov	r0, r3
    131c:	sub	sp, fp, #4
    1320:	pop	{fp, pc}

00001324 <flatcc_json_parser_array_start>:
    1324:	push	{fp, lr}
    1328:	add	fp, sp, #4
    132c:	sub	sp, sp, #16
    1330:	str	r0, [fp, #-8]
    1334:	str	r1, [fp, #-12]
    1338:	str	r2, [fp, #-16]
    133c:	str	r3, [fp, #-20]	; 0xffffffec
    1340:	ldr	r2, [fp, #-12]
    1344:	ldr	r3, [fp, #-16]
    1348:	cmp	r2, r3
    134c:	beq	1360 <flatcc_json_parser_array_start+0x3c>
    1350:	ldr	r3, [fp, #-12]
    1354:	ldrb	r3, [r3]
    1358:	cmp	r3, #91	; 0x5b
    135c:	beq	1388 <flatcc_json_parser_array_start+0x64>
    1360:	ldr	r3, [fp, #-20]	; 0xffffffec
    1364:	mov	r2, #0
    1368:	str	r2, [r3]
    136c:	mov	r3, #22
    1370:	ldr	r2, [fp, #-16]
    1374:	ldr	r1, [fp, #-12]
    1378:	ldr	r0, [fp, #-8]
    137c:	bl	0 <flatcc_json_parser_set_error>
    1380:	mov	r3, r0
    1384:	b	1400 <flatcc_json_parser_array_start+0xdc>
    1388:	ldr	r3, [fp, #-12]
    138c:	add	r3, r3, #1
    1390:	ldr	r2, [fp, #-16]
    1394:	mov	r1, r3
    1398:	ldr	r0, [fp, #-8]
    139c:	bl	c30 <flatcc_json_parser_space>
    13a0:	str	r0, [fp, #-12]
    13a4:	ldr	r2, [fp, #-12]
    13a8:	ldr	r3, [fp, #-16]
    13ac:	cmp	r2, r3
    13b0:	beq	13f0 <flatcc_json_parser_array_start+0xcc>
    13b4:	ldr	r3, [fp, #-12]
    13b8:	ldrb	r3, [r3]
    13bc:	cmp	r3, #93	; 0x5d
    13c0:	bne	13f0 <flatcc_json_parser_array_start+0xcc>
    13c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    13c8:	mov	r2, #0
    13cc:	str	r2, [r3]
    13d0:	ldr	r3, [fp, #-12]
    13d4:	add	r3, r3, #1
    13d8:	ldr	r2, [fp, #-16]
    13dc:	mov	r1, r3
    13e0:	ldr	r0, [fp, #-8]
    13e4:	bl	c30 <flatcc_json_parser_space>
    13e8:	mov	r3, r0
    13ec:	b	1400 <flatcc_json_parser_array_start+0xdc>
    13f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    13f4:	mov	r2, #1
    13f8:	str	r2, [r3]
    13fc:	ldr	r3, [fp, #-12]
    1400:	mov	r0, r3
    1404:	sub	sp, fp, #4
    1408:	pop	{fp, pc}

0000140c <flatcc_json_parser_array_end>:
    140c:	push	{fp, lr}
    1410:	add	fp, sp, #4
    1414:	sub	sp, sp, #16
    1418:	str	r0, [fp, #-8]
    141c:	str	r1, [fp, #-12]
    1420:	str	r2, [fp, #-16]
    1424:	str	r3, [fp, #-20]	; 0xffffffec
    1428:	ldr	r2, [fp, #-16]
    142c:	ldr	r1, [fp, #-12]
    1430:	ldr	r0, [fp, #-8]
    1434:	bl	c30 <flatcc_json_parser_space>
    1438:	str	r0, [fp, #-12]
    143c:	ldr	r2, [fp, #-12]
    1440:	ldr	r3, [fp, #-16]
    1444:	cmp	r2, r3
    1448:	bne	1460 <flatcc_json_parser_array_end+0x54>
    144c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1450:	mov	r2, #0
    1454:	str	r2, [r3]
    1458:	ldr	r3, [fp, #-12]
    145c:	b	1568 <flatcc_json_parser_array_end+0x15c>
    1460:	ldr	r3, [fp, #-12]
    1464:	ldrb	r3, [r3]
    1468:	cmp	r3, #44	; 0x2c
    146c:	beq	14c8 <flatcc_json_parser_array_end+0xbc>
    1470:	ldr	r3, [fp, #-20]	; 0xffffffec
    1474:	mov	r2, #0
    1478:	str	r2, [r3]
    147c:	ldr	r3, [fp, #-12]
    1480:	ldrb	r3, [r3]
    1484:	cmp	r3, #93	; 0x5d
    1488:	beq	14a8 <flatcc_json_parser_array_end+0x9c>
    148c:	mov	r3, #9
    1490:	ldr	r2, [fp, #-16]
    1494:	ldr	r1, [fp, #-12]
    1498:	ldr	r0, [fp, #-8]
    149c:	bl	0 <flatcc_json_parser_set_error>
    14a0:	mov	r3, r0
    14a4:	b	1568 <flatcc_json_parser_array_end+0x15c>
    14a8:	ldr	r3, [fp, #-12]
    14ac:	add	r3, r3, #1
    14b0:	ldr	r2, [fp, #-16]
    14b4:	mov	r1, r3
    14b8:	ldr	r0, [fp, #-8]
    14bc:	bl	c30 <flatcc_json_parser_space>
    14c0:	mov	r3, r0
    14c4:	b	1568 <flatcc_json_parser_array_end+0x15c>
    14c8:	ldr	r3, [fp, #-12]
    14cc:	add	r3, r3, #1
    14d0:	ldr	r2, [fp, #-16]
    14d4:	mov	r1, r3
    14d8:	ldr	r0, [fp, #-8]
    14dc:	bl	c30 <flatcc_json_parser_space>
    14e0:	str	r0, [fp, #-12]
    14e4:	ldr	r2, [fp, #-12]
    14e8:	ldr	r3, [fp, #-16]
    14ec:	cmp	r2, r3
    14f0:	bne	151c <flatcc_json_parser_array_end+0x110>
    14f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    14f8:	mov	r2, #0
    14fc:	str	r2, [r3]
    1500:	mov	r3, #9
    1504:	ldr	r2, [fp, #-16]
    1508:	ldr	r1, [fp, #-12]
    150c:	ldr	r0, [fp, #-8]
    1510:	bl	0 <flatcc_json_parser_set_error>
    1514:	mov	r3, r0
    1518:	b	1568 <flatcc_json_parser_array_end+0x15c>
    151c:	ldr	r3, [fp, #-12]
    1520:	ldrb	r3, [r3]
    1524:	cmp	r3, #93	; 0x5d
    1528:	bne	1558 <flatcc_json_parser_array_end+0x14c>
    152c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1530:	mov	r2, #0
    1534:	str	r2, [r3]
    1538:	ldr	r3, [fp, #-12]
    153c:	add	r3, r3, #1
    1540:	ldr	r2, [fp, #-16]
    1544:	mov	r1, r3
    1548:	ldr	r0, [fp, #-8]
    154c:	bl	c30 <flatcc_json_parser_space>
    1550:	mov	r3, r0
    1554:	b	1568 <flatcc_json_parser_array_end+0x15c>
    1558:	ldr	r3, [fp, #-20]	; 0xffffffec
    155c:	mov	r2, #1
    1560:	str	r2, [r3]
    1564:	ldr	r3, [fp, #-12]
    1568:	mov	r0, r3
    156c:	sub	sp, fp, #4
    1570:	pop	{fp, pc}

00001574 <flatcc_json_parser_match_symbol>:
    1574:	push	{fp, lr}
    1578:	add	fp, sp, #4
    157c:	sub	sp, sp, #24
    1580:	str	r0, [fp, #-16]
    1584:	str	r1, [fp, #-20]	; 0xffffffec
    1588:	str	r2, [fp, #-24]	; 0xffffffe8
    158c:	str	r3, [fp, #-28]	; 0xffffffe4
    1590:	ldr	r3, [fp, #-20]	; 0xffffffec
    1594:	str	r3, [fp, #-8]
    1598:	ldr	r2, [fp, #-24]	; 0xffffffe8
    159c:	ldr	r3, [fp, #-20]	; 0xffffffec
    15a0:	sub	r2, r2, r3
    15a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15a8:	cmp	r2, r3
    15ac:	bgt	15b8 <flatcc_json_parser_match_symbol+0x44>
    15b0:	ldr	r3, [fp, #-8]
    15b4:	b	16c4 <flatcc_json_parser_match_symbol+0x150>
    15b8:	ldr	r3, [fp, #-16]
    15bc:	ldr	r3, [r3, #12]
    15c0:	cmp	r3, #0
    15c4:	beq	1620 <flatcc_json_parser_match_symbol+0xac>
    15c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15cc:	ldr	r2, [fp, #-20]	; 0xffffffec
    15d0:	add	r3, r2, r3
    15d4:	ldrb	r3, [r3]
    15d8:	cmp	r3, #32
    15dc:	bls	1600 <flatcc_json_parser_match_symbol+0x8c>
    15e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15e4:	ldr	r2, [fp, #-20]	; 0xffffffec
    15e8:	add	r3, r2, r3
    15ec:	ldrb	r3, [r3]
    15f0:	cmp	r3, #58	; 0x3a
    15f4:	beq	1600 <flatcc_json_parser_match_symbol+0x8c>
    15f8:	ldr	r3, [fp, #-8]
    15fc:	b	16c4 <flatcc_json_parser_match_symbol+0x150>
    1600:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1604:	ldr	r2, [fp, #-20]	; 0xffffffec
    1608:	add	r3, r2, r3
    160c:	str	r3, [fp, #-20]	; 0xffffffec
    1610:	ldr	r3, [fp, #-16]
    1614:	mov	r2, #0
    1618:	str	r2, [r3, #12]
    161c:	b	1654 <flatcc_json_parser_match_symbol+0xe0>
    1620:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1624:	ldr	r2, [fp, #-20]	; 0xffffffec
    1628:	add	r3, r2, r3
    162c:	ldrb	r3, [r3]
    1630:	cmp	r3, #34	; 0x22
    1634:	beq	1640 <flatcc_json_parser_match_symbol+0xcc>
    1638:	ldr	r3, [fp, #-8]
    163c:	b	16c4 <flatcc_json_parser_match_symbol+0x150>
    1640:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1644:	add	r3, r3, #1
    1648:	ldr	r2, [fp, #-20]	; 0xffffffec
    164c:	add	r3, r2, r3
    1650:	str	r3, [fp, #-20]	; 0xffffffec
    1654:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1658:	ldr	r1, [fp, #-20]	; 0xffffffec
    165c:	ldr	r0, [fp, #-16]
    1660:	bl	c30 <flatcc_json_parser_space>
    1664:	str	r0, [fp, #-20]	; 0xffffffec
    1668:	ldr	r2, [fp, #-20]	; 0xffffffec
    166c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1670:	cmp	r2, r3
    1674:	beq	16ac <flatcc_json_parser_match_symbol+0x138>
    1678:	ldr	r3, [fp, #-20]	; 0xffffffec
    167c:	ldrb	r3, [r3]
    1680:	cmp	r3, #58	; 0x3a
    1684:	bne	16ac <flatcc_json_parser_match_symbol+0x138>
    1688:	ldr	r3, [fp, #-20]	; 0xffffffec
    168c:	add	r3, r3, #1
    1690:	str	r3, [fp, #-20]	; 0xffffffec
    1694:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1698:	ldr	r1, [fp, #-20]	; 0xffffffec
    169c:	ldr	r0, [fp, #-16]
    16a0:	bl	c30 <flatcc_json_parser_space>
    16a4:	mov	r3, r0
    16a8:	b	16c4 <flatcc_json_parser_match_symbol+0x150>
    16ac:	mov	r3, #4
    16b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    16b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    16b8:	ldr	r0, [fp, #-16]
    16bc:	bl	0 <flatcc_json_parser_set_error>
    16c0:	mov	r3, r0
    16c4:	mov	r0, r3
    16c8:	sub	sp, fp, #4
    16cc:	pop	{fp, pc}

000016d0 <flatcc_json_parser_coerce_uint64>:
    16d0:	push	{fp, lr}
    16d4:	add	fp, sp, #4
    16d8:	sub	sp, sp, #16
    16dc:	str	r0, [fp, #-8]
    16e0:	str	r1, [fp, #-12]
    16e4:	str	r2, [fp, #-16]
    16e8:	str	r3, [fp, #-20]	; 0xffffffec
    16ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    16f0:	cmp	r3, #0
    16f4:	beq	1714 <flatcc_json_parser_coerce_uint64+0x44>
    16f8:	mov	r3, #8
    16fc:	ldr	r2, [fp, #-16]
    1700:	ldr	r1, [fp, #-12]
    1704:	ldr	r0, [fp, #-8]
    1708:	bl	0 <flatcc_json_parser_set_error>
    170c:	mov	r3, r0
    1710:	b	1724 <flatcc_json_parser_coerce_uint64+0x54>
    1714:	ldr	r1, [fp, #12]
    1718:	ldrd	r2, [fp, #4]
    171c:	strd	r2, [r1]
    1720:	ldr	r3, [fp, #-12]
    1724:	mov	r0, r3
    1728:	sub	sp, fp, #4
    172c:	pop	{fp, pc}

00001730 <flatcc_json_parser_coerce_bool>:
    1730:	push	{fp, lr}
    1734:	add	fp, sp, #4
    1738:	sub	sp, sp, #16
    173c:	str	r0, [fp, #-8]
    1740:	str	r1, [fp, #-12]
    1744:	str	r2, [fp, #-16]
    1748:	str	r3, [fp, #-20]	; 0xffffffec
    174c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1750:	cmp	r3, #0
    1754:	beq	1774 <flatcc_json_parser_coerce_bool+0x44>
    1758:	mov	r3, #8
    175c:	ldr	r2, [fp, #-16]
    1760:	ldr	r1, [fp, #-12]
    1764:	ldr	r0, [fp, #-8]
    1768:	bl	0 <flatcc_json_parser_set_error>
    176c:	mov	r3, r0
    1770:	b	17a0 <flatcc_json_parser_coerce_bool+0x70>
    1774:	ldr	r2, [fp, #4]
    1778:	ldr	r3, [fp, #8]
    177c:	orr	r3, r2, r3
    1780:	cmp	r3, #0
    1784:	movne	r3, #1
    1788:	moveq	r3, #0
    178c:	uxtb	r3, r3
    1790:	mov	r2, r3
    1794:	ldr	r3, [fp, #12]
    1798:	strb	r2, [r3]
    179c:	ldr	r3, [fp, #-12]
    17a0:	mov	r0, r3
    17a4:	sub	sp, fp, #4
    17a8:	pop	{fp, pc}

000017ac <flatcc_json_parser_coerce_uint32>:
    17ac:	push	{fp, lr}
    17b0:	add	fp, sp, #4
    17b4:	sub	sp, sp, #16
    17b8:	str	r0, [fp, #-8]
    17bc:	str	r1, [fp, #-12]
    17c0:	str	r2, [fp, #-16]
    17c4:	str	r3, [fp, #-20]	; 0xffffffec
    17c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    17cc:	cmp	r3, #0
    17d0:	beq	17f0 <flatcc_json_parser_coerce_uint32+0x44>
    17d4:	mov	r3, #8
    17d8:	ldr	r2, [fp, #-16]
    17dc:	ldr	r1, [fp, #-12]
    17e0:	ldr	r0, [fp, #-8]
    17e4:	bl	0 <flatcc_json_parser_set_error>
    17e8:	mov	r3, r0
    17ec:	b	1834 <flatcc_json_parser_coerce_uint32+0x88>
    17f0:	ldrd	r2, [fp, #4]
    17f4:	mvn	r0, #0
    17f8:	mov	r1, #0
    17fc:	cmp	r3, r1
    1800:	cmpeq	r2, r0
    1804:	bls	1824 <flatcc_json_parser_coerce_uint32+0x78>
    1808:	mov	r3, #7
    180c:	ldr	r2, [fp, #-16]
    1810:	ldr	r1, [fp, #-12]
    1814:	ldr	r0, [fp, #-8]
    1818:	bl	0 <flatcc_json_parser_set_error>
    181c:	mov	r3, r0
    1820:	b	1834 <flatcc_json_parser_coerce_uint32+0x88>
    1824:	ldr	r2, [fp, #4]
    1828:	ldr	r3, [fp, #12]
    182c:	str	r2, [r3]
    1830:	ldr	r3, [fp, #-12]
    1834:	mov	r0, r3
    1838:	sub	sp, fp, #4
    183c:	pop	{fp, pc}

00001840 <flatcc_json_parser_coerce_uint16>:
    1840:	push	{fp, lr}
    1844:	add	fp, sp, #4
    1848:	sub	sp, sp, #16
    184c:	str	r0, [fp, #-8]
    1850:	str	r1, [fp, #-12]
    1854:	str	r2, [fp, #-16]
    1858:	str	r3, [fp, #-20]	; 0xffffffec
    185c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1860:	cmp	r3, #0
    1864:	beq	1884 <flatcc_json_parser_coerce_uint16+0x44>
    1868:	mov	r3, #8
    186c:	ldr	r2, [fp, #-16]
    1870:	ldr	r1, [fp, #-12]
    1874:	ldr	r0, [fp, #-8]
    1878:	bl	0 <flatcc_json_parser_set_error>
    187c:	mov	r3, r0
    1880:	b	18c8 <flatcc_json_parser_coerce_uint16+0x88>
    1884:	ldrd	r2, [fp, #4]
    1888:	ldr	r0, [pc, #68]	; 18d4 <flatcc_json_parser_coerce_uint16+0x94>
    188c:	mov	r1, #0
    1890:	cmp	r3, r1
    1894:	cmpeq	r2, r0
    1898:	bls	18b8 <flatcc_json_parser_coerce_uint16+0x78>
    189c:	mov	r3, #7
    18a0:	ldr	r2, [fp, #-16]
    18a4:	ldr	r1, [fp, #-12]
    18a8:	ldr	r0, [fp, #-8]
    18ac:	bl	0 <flatcc_json_parser_set_error>
    18b0:	mov	r3, r0
    18b4:	b	18c8 <flatcc_json_parser_coerce_uint16+0x88>
    18b8:	ldrh	r2, [fp, #4]
    18bc:	ldr	r3, [fp, #12]
    18c0:	strh	r2, [r3]
    18c4:	ldr	r3, [fp, #-12]
    18c8:	mov	r0, r3
    18cc:	sub	sp, fp, #4
    18d0:	pop	{fp, pc}
    18d4:	.word	0x0000ffff

000018d8 <flatcc_json_parser_coerce_uint8>:
    18d8:	push	{fp, lr}
    18dc:	add	fp, sp, #4
    18e0:	sub	sp, sp, #16
    18e4:	str	r0, [fp, #-8]
    18e8:	str	r1, [fp, #-12]
    18ec:	str	r2, [fp, #-16]
    18f0:	str	r3, [fp, #-20]	; 0xffffffec
    18f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    18f8:	cmp	r3, #0
    18fc:	beq	191c <flatcc_json_parser_coerce_uint8+0x44>
    1900:	mov	r3, #8
    1904:	ldr	r2, [fp, #-16]
    1908:	ldr	r1, [fp, #-12]
    190c:	ldr	r0, [fp, #-8]
    1910:	bl	0 <flatcc_json_parser_set_error>
    1914:	mov	r3, r0
    1918:	b	1958 <flatcc_json_parser_coerce_uint8+0x80>
    191c:	ldrd	r2, [fp, #4]
    1920:	cmp	r3, #0
    1924:	cmpeq	r2, #255	; 0xff
    1928:	bls	1948 <flatcc_json_parser_coerce_uint8+0x70>
    192c:	mov	r3, #7
    1930:	ldr	r2, [fp, #-16]
    1934:	ldr	r1, [fp, #-12]
    1938:	ldr	r0, [fp, #-8]
    193c:	bl	0 <flatcc_json_parser_set_error>
    1940:	mov	r3, r0
    1944:	b	1958 <flatcc_json_parser_coerce_uint8+0x80>
    1948:	ldrb	r2, [fp, #4]
    194c:	ldr	r3, [fp, #12]
    1950:	strb	r2, [r3]
    1954:	ldr	r3, [fp, #-12]
    1958:	mov	r0, r3
    195c:	sub	sp, fp, #4
    1960:	pop	{fp, pc}

00001964 <flatcc_json_parser_coerce_int64>:
    1964:	push	{fp, lr}
    1968:	add	fp, sp, #4
    196c:	sub	sp, sp, #16
    1970:	str	r0, [fp, #-8]
    1974:	str	r1, [fp, #-12]
    1978:	str	r2, [fp, #-16]
    197c:	str	r3, [fp, #-20]	; 0xffffffec
    1980:	ldr	r3, [fp, #-20]	; 0xffffffec
    1984:	cmp	r3, #0
    1988:	beq	19d0 <flatcc_json_parser_coerce_int64+0x6c>
    198c:	ldrd	r2, [fp, #4]
    1990:	cmp	r3, #-2147483648	; 0x80000000
    1994:	cmpeq	r2, #0
    1998:	bls	19b8 <flatcc_json_parser_coerce_int64+0x54>
    199c:	mov	r3, #8
    19a0:	ldr	r2, [fp, #-16]
    19a4:	ldr	r1, [fp, #-12]
    19a8:	ldr	r0, [fp, #-8]
    19ac:	bl	0 <flatcc_json_parser_set_error>
    19b0:	mov	r3, r0
    19b4:	b	1a0c <flatcc_json_parser_coerce_int64+0xa8>
    19b8:	ldrd	r2, [fp, #4]
    19bc:	rsbs	r2, r2, #0
    19c0:	rsc	r3, r3, #0
    19c4:	ldr	r1, [fp, #12]
    19c8:	strd	r2, [r1]
    19cc:	b	1a08 <flatcc_json_parser_coerce_int64+0xa4>
    19d0:	ldrd	r2, [fp, #4]
    19d4:	cmp	r2, #0
    19d8:	sbcs	r3, r3, #0
    19dc:	bge	19fc <flatcc_json_parser_coerce_int64+0x98>
    19e0:	mov	r3, #7
    19e4:	ldr	r2, [fp, #-16]
    19e8:	ldr	r1, [fp, #-12]
    19ec:	ldr	r0, [fp, #-8]
    19f0:	bl	0 <flatcc_json_parser_set_error>
    19f4:	mov	r3, r0
    19f8:	b	1a0c <flatcc_json_parser_coerce_int64+0xa8>
    19fc:	ldrd	r2, [fp, #4]
    1a00:	ldr	r1, [fp, #12]
    1a04:	strd	r2, [r1]
    1a08:	ldr	r3, [fp, #-12]
    1a0c:	mov	r0, r3
    1a10:	sub	sp, fp, #4
    1a14:	pop	{fp, pc}

00001a18 <flatcc_json_parser_coerce_int32>:
    1a18:	push	{fp, lr}
    1a1c:	add	fp, sp, #4
    1a20:	sub	sp, sp, #16
    1a24:	str	r0, [fp, #-8]
    1a28:	str	r1, [fp, #-12]
    1a2c:	str	r2, [fp, #-16]
    1a30:	str	r3, [fp, #-20]	; 0xffffffec
    1a34:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a38:	cmp	r3, #0
    1a3c:	beq	1a84 <flatcc_json_parser_coerce_int32+0x6c>
    1a40:	ldrd	r2, [fp, #4]
    1a44:	cmp	r3, #0
    1a48:	cmpeq	r2, #-2147483648	; 0x80000000
    1a4c:	bls	1a6c <flatcc_json_parser_coerce_int32+0x54>
    1a50:	mov	r3, #8
    1a54:	ldr	r2, [fp, #-16]
    1a58:	ldr	r1, [fp, #-12]
    1a5c:	ldr	r0, [fp, #-8]
    1a60:	bl	0 <flatcc_json_parser_set_error>
    1a64:	mov	r3, r0
    1a68:	b	1ac8 <flatcc_json_parser_coerce_int32+0xb0>
    1a6c:	ldr	r3, [fp, #4]
    1a70:	rsb	r3, r3, #0
    1a74:	mov	r2, r3
    1a78:	ldr	r3, [fp, #12]
    1a7c:	str	r2, [r3]
    1a80:	b	1ac4 <flatcc_json_parser_coerce_int32+0xac>
    1a84:	ldrd	r2, [fp, #4]
    1a88:	mvn	r0, #-2147483648	; 0x80000000
    1a8c:	mov	r1, #0
    1a90:	cmp	r3, r1
    1a94:	cmpeq	r2, r0
    1a98:	bls	1ab8 <flatcc_json_parser_coerce_int32+0xa0>
    1a9c:	mov	r3, #7
    1aa0:	ldr	r2, [fp, #-16]
    1aa4:	ldr	r1, [fp, #-12]
    1aa8:	ldr	r0, [fp, #-8]
    1aac:	bl	0 <flatcc_json_parser_set_error>
    1ab0:	mov	r3, r0
    1ab4:	b	1ac8 <flatcc_json_parser_coerce_int32+0xb0>
    1ab8:	ldr	r2, [fp, #4]
    1abc:	ldr	r3, [fp, #12]
    1ac0:	str	r2, [r3]
    1ac4:	ldr	r3, [fp, #-12]
    1ac8:	mov	r0, r3
    1acc:	sub	sp, fp, #4
    1ad0:	pop	{fp, pc}

00001ad4 <flatcc_json_parser_coerce_int16>:
    1ad4:	push	{fp, lr}
    1ad8:	add	fp, sp, #4
    1adc:	sub	sp, sp, #16
    1ae0:	str	r0, [fp, #-8]
    1ae4:	str	r1, [fp, #-12]
    1ae8:	str	r2, [fp, #-16]
    1aec:	str	r3, [fp, #-20]	; 0xffffffec
    1af0:	ldr	r3, [fp, #-20]	; 0xffffffec
    1af4:	cmp	r3, #0
    1af8:	beq	1b44 <flatcc_json_parser_coerce_int16+0x70>
    1afc:	ldrd	r2, [fp, #4]
    1b00:	cmp	r3, #0
    1b04:	cmpeq	r2, #32768	; 0x8000
    1b08:	bls	1b28 <flatcc_json_parser_coerce_int16+0x54>
    1b0c:	mov	r3, #8
    1b10:	ldr	r2, [fp, #-16]
    1b14:	ldr	r1, [fp, #-12]
    1b18:	ldr	r0, [fp, #-8]
    1b1c:	bl	0 <flatcc_json_parser_set_error>
    1b20:	mov	r3, r0
    1b24:	b	1b88 <flatcc_json_parser_coerce_int16+0xb4>
    1b28:	ldrh	r3, [fp, #4]
    1b2c:	rsb	r3, r3, #0
    1b30:	uxth	r3, r3
    1b34:	sxth	r2, r3
    1b38:	ldr	r3, [fp, #12]
    1b3c:	strh	r2, [r3]
    1b40:	b	1b84 <flatcc_json_parser_coerce_int16+0xb0>
    1b44:	ldrd	r2, [fp, #4]
    1b48:	ldr	r0, [pc, #68]	; 1b94 <flatcc_json_parser_coerce_int16+0xc0>
    1b4c:	mov	r1, #0
    1b50:	cmp	r3, r1
    1b54:	cmpeq	r2, r0
    1b58:	bls	1b78 <flatcc_json_parser_coerce_int16+0xa4>
    1b5c:	mov	r3, #7
    1b60:	ldr	r2, [fp, #-16]
    1b64:	ldr	r1, [fp, #-12]
    1b68:	ldr	r0, [fp, #-8]
    1b6c:	bl	0 <flatcc_json_parser_set_error>
    1b70:	mov	r3, r0
    1b74:	b	1b88 <flatcc_json_parser_coerce_int16+0xb4>
    1b78:	ldrsh	r2, [fp, #4]
    1b7c:	ldr	r3, [fp, #12]
    1b80:	strh	r2, [r3]
    1b84:	ldr	r3, [fp, #-12]
    1b88:	mov	r0, r3
    1b8c:	sub	sp, fp, #4
    1b90:	pop	{fp, pc}
    1b94:	.word	0x00007fff

00001b98 <flatcc_json_parser_coerce_int8>:
    1b98:	push	{fp, lr}
    1b9c:	add	fp, sp, #4
    1ba0:	sub	sp, sp, #16
    1ba4:	str	r0, [fp, #-8]
    1ba8:	str	r1, [fp, #-12]
    1bac:	str	r2, [fp, #-16]
    1bb0:	str	r3, [fp, #-20]	; 0xffffffec
    1bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bb8:	cmp	r3, #0
    1bbc:	beq	1c08 <flatcc_json_parser_coerce_int8+0x70>
    1bc0:	ldrd	r2, [fp, #4]
    1bc4:	cmp	r3, #0
    1bc8:	cmpeq	r2, #128	; 0x80
    1bcc:	bls	1bec <flatcc_json_parser_coerce_int8+0x54>
    1bd0:	mov	r3, #8
    1bd4:	ldr	r2, [fp, #-16]
    1bd8:	ldr	r1, [fp, #-12]
    1bdc:	ldr	r0, [fp, #-8]
    1be0:	bl	0 <flatcc_json_parser_set_error>
    1be4:	mov	r3, r0
    1be8:	b	1c44 <flatcc_json_parser_coerce_int8+0xac>
    1bec:	ldrb	r3, [fp, #4]
    1bf0:	rsb	r3, r3, #0
    1bf4:	uxtb	r3, r3
    1bf8:	sxtb	r2, r3
    1bfc:	ldr	r3, [fp, #12]
    1c00:	strb	r2, [r3]
    1c04:	b	1c40 <flatcc_json_parser_coerce_int8+0xa8>
    1c08:	ldrd	r2, [fp, #4]
    1c0c:	cmp	r3, #0
    1c10:	cmpeq	r2, #127	; 0x7f
    1c14:	bls	1c34 <flatcc_json_parser_coerce_int8+0x9c>
    1c18:	mov	r3, #7
    1c1c:	ldr	r2, [fp, #-16]
    1c20:	ldr	r1, [fp, #-12]
    1c24:	ldr	r0, [fp, #-8]
    1c28:	bl	0 <flatcc_json_parser_set_error>
    1c2c:	mov	r3, r0
    1c30:	b	1c44 <flatcc_json_parser_coerce_int8+0xac>
    1c34:	ldrsb	r2, [fp, #4]
    1c38:	ldr	r3, [fp, #12]
    1c3c:	strb	r2, [r3]
    1c40:	ldr	r3, [fp, #-12]
    1c44:	mov	r0, r3
    1c48:	sub	sp, fp, #4
    1c4c:	pop	{fp, pc}

00001c50 <flatcc_json_parser_coerce_float>:
    1c50:	push	{fp, lr}
    1c54:	add	fp, sp, #4
    1c58:	sub	sp, sp, #16
    1c5c:	str	r0, [fp, #-8]
    1c60:	str	r1, [fp, #-12]
    1c64:	str	r2, [fp, #-16]
    1c68:	str	r3, [fp, #-20]	; 0xffffffec
    1c6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c70:	cmp	r3, #0
    1c74:	beq	1c8c <flatcc_json_parser_coerce_float+0x3c>
    1c78:	ldrd	r0, [fp, #4]
    1c7c:	bl	0 <__aeabi_ul2f>
    1c80:	mov	r3, r0
    1c84:	eor	r2, r3, #-2147483648	; 0x80000000
    1c88:	b	1c98 <flatcc_json_parser_coerce_float+0x48>
    1c8c:	ldrd	r0, [fp, #4]
    1c90:	bl	0 <__aeabi_ul2f>
    1c94:	mov	r2, r0
    1c98:	ldr	r3, [fp, #12]
    1c9c:	str	r2, [r3]
    1ca0:	ldr	r3, [fp, #-12]
    1ca4:	mov	r0, r3
    1ca8:	sub	sp, fp, #4
    1cac:	pop	{fp, pc}

00001cb0 <flatcc_json_parser_coerce_double>:
    1cb0:	push	{fp, lr}
    1cb4:	add	fp, sp, #4
    1cb8:	sub	sp, sp, #16
    1cbc:	str	r0, [fp, #-8]
    1cc0:	str	r1, [fp, #-12]
    1cc4:	str	r2, [fp, #-16]
    1cc8:	str	r3, [fp, #-20]	; 0xffffffec
    1ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1cd0:	cmp	r3, #0
    1cd4:	beq	1cf0 <flatcc_json_parser_coerce_double+0x40>
    1cd8:	ldrd	r0, [fp, #4]
    1cdc:	bl	0 <__aeabi_ul2d>
    1ce0:	mov	r2, r0
    1ce4:	mov	r3, r1
    1ce8:	eor	r3, r3, #-2147483648	; 0x80000000
    1cec:	b	1d00 <flatcc_json_parser_coerce_double+0x50>
    1cf0:	ldrd	r0, [fp, #4]
    1cf4:	bl	0 <__aeabi_ul2d>
    1cf8:	mov	r2, r0
    1cfc:	mov	r3, r1
    1d00:	ldr	r1, [fp, #12]
    1d04:	strd	r2, [r1]
    1d08:	ldr	r3, [fp, #-12]
    1d0c:	mov	r0, r3
    1d10:	sub	sp, fp, #4
    1d14:	pop	{fp, pc}

00001d18 <flatcc_json_parser_none>:
    1d18:	push	{fp, lr}
    1d1c:	add	fp, sp, #4
    1d20:	sub	sp, sp, #16
    1d24:	str	r0, [fp, #-8]
    1d28:	str	r1, [fp, #-12]
    1d2c:	str	r2, [fp, #-16]
    1d30:	ldr	r2, [fp, #-16]
    1d34:	ldr	r3, [fp, #-12]
    1d38:	sub	r3, r2, r3
    1d3c:	cmp	r3, #3
    1d40:	ble	1d6c <flatcc_json_parser_none+0x54>
    1d44:	mov	r2, #4
    1d48:	ldr	r1, [pc, #64]	; 1d90 <flatcc_json_parser_none+0x78>
    1d4c:	ldr	r0, [fp, #-12]
    1d50:	bl	0 <memcmp>
    1d54:	mov	r3, r0
    1d58:	cmp	r3, #0
    1d5c:	bne	1d6c <flatcc_json_parser_none+0x54>
    1d60:	ldr	r3, [fp, #-12]
    1d64:	add	r3, r3, #4
    1d68:	b	1d84 <flatcc_json_parser_none+0x6c>
    1d6c:	mov	r3, #26
    1d70:	ldr	r2, [fp, #-16]
    1d74:	ldr	r1, [fp, #-12]
    1d78:	ldr	r0, [fp, #-8]
    1d7c:	bl	0 <flatcc_json_parser_set_error>
    1d80:	mov	r3, r0
    1d84:	mov	r0, r3
    1d88:	sub	sp, fp, #4
    1d8c:	pop	{fp, pc}
    1d90:	.word	0x00000094

00001d94 <flatcc_json_parser_uint64>:
    1d94:	push	{fp, lr}
    1d98:	add	fp, sp, #4
    1d9c:	sub	sp, sp, #56	; 0x38
    1da0:	str	r0, [fp, #-32]	; 0xffffffe0
    1da4:	str	r1, [fp, #-36]	; 0xffffffdc
    1da8:	str	r2, [fp, #-40]	; 0xffffffd8
    1dac:	str	r3, [fp, #-44]	; 0xffffffd4
    1db0:	mov	r2, #0
    1db4:	mov	r3, #0
    1db8:	strd	r2, [fp, #-20]	; 0xffffffec
    1dbc:	mov	r3, #0
    1dc0:	str	r3, [fp, #-24]	; 0xffffffe8
    1dc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1dc8:	str	r3, [fp, #-8]
    1dcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1dd0:	mov	r2, #0
    1dd4:	mov	r3, #0
    1dd8:	strd	r2, [r1]
    1ddc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1de0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1de4:	cmp	r2, r3
    1de8:	bne	1df4 <flatcc_json_parser_uint64+0x60>
    1dec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1df0:	b	1e5c <flatcc_json_parser_uint64+0xc8>
    1df4:	sub	r2, fp, #24
    1df8:	sub	r3, fp, #20
    1dfc:	str	r3, [sp]
    1e00:	mov	r3, r2
    1e04:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1e08:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1e10:	bl	0 <flatcc_json_parser_integer>
    1e14:	str	r0, [fp, #-36]	; 0xffffffdc
    1e18:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1e1c:	ldr	r3, [fp, #-8]
    1e20:	cmp	r2, r3
    1e24:	beq	1e58 <flatcc_json_parser_uint64+0xc4>
    1e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e2c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1e30:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1e34:	str	r1, [sp, #8]
    1e38:	strd	r2, [sp]
    1e3c:	mov	r3, r0
    1e40:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1e44:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1e48:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1e4c:	bl	16d0 <flatcc_json_parser_coerce_uint64>
    1e50:	mov	r3, r0
    1e54:	b	1e5c <flatcc_json_parser_uint64+0xc8>
    1e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e5c:	mov	r0, r3
    1e60:	sub	sp, fp, #4
    1e64:	pop	{fp, pc}

00001e68 <flatcc_json_parser_uint32>:
    1e68:	push	{fp, lr}
    1e6c:	add	fp, sp, #4
    1e70:	sub	sp, sp, #56	; 0x38
    1e74:	str	r0, [fp, #-32]	; 0xffffffe0
    1e78:	str	r1, [fp, #-36]	; 0xffffffdc
    1e7c:	str	r2, [fp, #-40]	; 0xffffffd8
    1e80:	str	r3, [fp, #-44]	; 0xffffffd4
    1e84:	mov	r2, #0
    1e88:	mov	r3, #0
    1e8c:	strd	r2, [fp, #-20]	; 0xffffffec
    1e90:	mov	r3, #0
    1e94:	str	r3, [fp, #-24]	; 0xffffffe8
    1e98:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e9c:	str	r3, [fp, #-8]
    1ea0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1ea4:	mov	r2, #0
    1ea8:	str	r2, [r3]
    1eac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1eb4:	cmp	r2, r3
    1eb8:	bne	1ec4 <flatcc_json_parser_uint32+0x5c>
    1ebc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ec0:	b	1f2c <flatcc_json_parser_uint32+0xc4>
    1ec4:	sub	r2, fp, #24
    1ec8:	sub	r3, fp, #20
    1ecc:	str	r3, [sp]
    1ed0:	mov	r3, r2
    1ed4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1ed8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ee0:	bl	0 <flatcc_json_parser_integer>
    1ee4:	str	r0, [fp, #-36]	; 0xffffffdc
    1ee8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1eec:	ldr	r3, [fp, #-8]
    1ef0:	cmp	r2, r3
    1ef4:	beq	1f28 <flatcc_json_parser_uint32+0xc0>
    1ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1efc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1f00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1f04:	str	r1, [sp, #8]
    1f08:	strd	r2, [sp]
    1f0c:	mov	r3, r0
    1f10:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1f14:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1f1c:	bl	17ac <flatcc_json_parser_coerce_uint32>
    1f20:	mov	r3, r0
    1f24:	b	1f2c <flatcc_json_parser_uint32+0xc4>
    1f28:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1f2c:	mov	r0, r3
    1f30:	sub	sp, fp, #4
    1f34:	pop	{fp, pc}

00001f38 <flatcc_json_parser_uint16>:
    1f38:	push	{fp, lr}
    1f3c:	add	fp, sp, #4
    1f40:	sub	sp, sp, #56	; 0x38
    1f44:	str	r0, [fp, #-32]	; 0xffffffe0
    1f48:	str	r1, [fp, #-36]	; 0xffffffdc
    1f4c:	str	r2, [fp, #-40]	; 0xffffffd8
    1f50:	str	r3, [fp, #-44]	; 0xffffffd4
    1f54:	mov	r2, #0
    1f58:	mov	r3, #0
    1f5c:	strd	r2, [fp, #-20]	; 0xffffffec
    1f60:	mov	r3, #0
    1f64:	str	r3, [fp, #-24]	; 0xffffffe8
    1f68:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1f6c:	str	r3, [fp, #-8]
    1f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1f74:	mov	r2, #0
    1f78:	strh	r2, [r3]
    1f7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1f80:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1f84:	cmp	r2, r3
    1f88:	bne	1f94 <flatcc_json_parser_uint16+0x5c>
    1f8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1f90:	b	1ffc <flatcc_json_parser_uint16+0xc4>
    1f94:	sub	r2, fp, #24
    1f98:	sub	r3, fp, #20
    1f9c:	str	r3, [sp]
    1fa0:	mov	r3, r2
    1fa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1fa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1fb0:	bl	0 <flatcc_json_parser_integer>
    1fb4:	str	r0, [fp, #-36]	; 0xffffffdc
    1fb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1fbc:	ldr	r3, [fp, #-8]
    1fc0:	cmp	r2, r3
    1fc4:	beq	1ff8 <flatcc_json_parser_uint16+0xc0>
    1fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fcc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1fd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1fd4:	str	r1, [sp, #8]
    1fd8:	strd	r2, [sp]
    1fdc:	mov	r3, r0
    1fe0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1fe4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1fe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1fec:	bl	1840 <flatcc_json_parser_coerce_uint16>
    1ff0:	mov	r3, r0
    1ff4:	b	1ffc <flatcc_json_parser_uint16+0xc4>
    1ff8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ffc:	mov	r0, r3
    2000:	sub	sp, fp, #4
    2004:	pop	{fp, pc}

00002008 <flatcc_json_parser_uint8>:
    2008:	push	{fp, lr}
    200c:	add	fp, sp, #4
    2010:	sub	sp, sp, #56	; 0x38
    2014:	str	r0, [fp, #-32]	; 0xffffffe0
    2018:	str	r1, [fp, #-36]	; 0xffffffdc
    201c:	str	r2, [fp, #-40]	; 0xffffffd8
    2020:	str	r3, [fp, #-44]	; 0xffffffd4
    2024:	mov	r2, #0
    2028:	mov	r3, #0
    202c:	strd	r2, [fp, #-20]	; 0xffffffec
    2030:	mov	r3, #0
    2034:	str	r3, [fp, #-24]	; 0xffffffe8
    2038:	ldr	r3, [fp, #-36]	; 0xffffffdc
    203c:	str	r3, [fp, #-8]
    2040:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2044:	mov	r2, #0
    2048:	strb	r2, [r3]
    204c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2050:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2054:	cmp	r2, r3
    2058:	bne	2064 <flatcc_json_parser_uint8+0x5c>
    205c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2060:	b	20cc <flatcc_json_parser_uint8+0xc4>
    2064:	sub	r2, fp, #24
    2068:	sub	r3, fp, #20
    206c:	str	r3, [sp]
    2070:	mov	r3, r2
    2074:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2078:	ldr	r1, [fp, #-36]	; 0xffffffdc
    207c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2080:	bl	0 <flatcc_json_parser_integer>
    2084:	str	r0, [fp, #-36]	; 0xffffffdc
    2088:	ldr	r2, [fp, #-36]	; 0xffffffdc
    208c:	ldr	r3, [fp, #-8]
    2090:	cmp	r2, r3
    2094:	beq	20c8 <flatcc_json_parser_uint8+0xc0>
    2098:	ldr	r0, [fp, #-24]	; 0xffffffe8
    209c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    20a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    20a4:	str	r1, [sp, #8]
    20a8:	strd	r2, [sp]
    20ac:	mov	r3, r0
    20b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    20b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    20b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    20bc:	bl	18d8 <flatcc_json_parser_coerce_uint8>
    20c0:	mov	r3, r0
    20c4:	b	20cc <flatcc_json_parser_uint8+0xc4>
    20c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    20cc:	mov	r0, r3
    20d0:	sub	sp, fp, #4
    20d4:	pop	{fp, pc}

000020d8 <flatcc_json_parser_int64>:
    20d8:	push	{fp, lr}
    20dc:	add	fp, sp, #4
    20e0:	sub	sp, sp, #56	; 0x38
    20e4:	str	r0, [fp, #-32]	; 0xffffffe0
    20e8:	str	r1, [fp, #-36]	; 0xffffffdc
    20ec:	str	r2, [fp, #-40]	; 0xffffffd8
    20f0:	str	r3, [fp, #-44]	; 0xffffffd4
    20f4:	mov	r2, #0
    20f8:	mov	r3, #0
    20fc:	strd	r2, [fp, #-20]	; 0xffffffec
    2100:	mov	r3, #0
    2104:	str	r3, [fp, #-24]	; 0xffffffe8
    2108:	ldr	r3, [fp, #-36]	; 0xffffffdc
    210c:	str	r3, [fp, #-8]
    2110:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2114:	mov	r2, #0
    2118:	mov	r3, #0
    211c:	strd	r2, [r1]
    2120:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2124:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2128:	cmp	r2, r3
    212c:	bne	2138 <flatcc_json_parser_int64+0x60>
    2130:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2134:	b	21a0 <flatcc_json_parser_int64+0xc8>
    2138:	sub	r2, fp, #24
    213c:	sub	r3, fp, #20
    2140:	str	r3, [sp]
    2144:	mov	r3, r2
    2148:	ldr	r2, [fp, #-40]	; 0xffffffd8
    214c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2150:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2154:	bl	0 <flatcc_json_parser_integer>
    2158:	str	r0, [fp, #-36]	; 0xffffffdc
    215c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2160:	ldr	r3, [fp, #-8]
    2164:	cmp	r2, r3
    2168:	beq	219c <flatcc_json_parser_int64+0xc4>
    216c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2170:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2174:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2178:	str	r1, [sp, #8]
    217c:	strd	r2, [sp]
    2180:	mov	r3, r0
    2184:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2188:	ldr	r1, [fp, #-36]	; 0xffffffdc
    218c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2190:	bl	1964 <flatcc_json_parser_coerce_int64>
    2194:	mov	r3, r0
    2198:	b	21a0 <flatcc_json_parser_int64+0xc8>
    219c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    21a0:	mov	r0, r3
    21a4:	sub	sp, fp, #4
    21a8:	pop	{fp, pc}

000021ac <flatcc_json_parser_int32>:
    21ac:	push	{fp, lr}
    21b0:	add	fp, sp, #4
    21b4:	sub	sp, sp, #56	; 0x38
    21b8:	str	r0, [fp, #-32]	; 0xffffffe0
    21bc:	str	r1, [fp, #-36]	; 0xffffffdc
    21c0:	str	r2, [fp, #-40]	; 0xffffffd8
    21c4:	str	r3, [fp, #-44]	; 0xffffffd4
    21c8:	mov	r2, #0
    21cc:	mov	r3, #0
    21d0:	strd	r2, [fp, #-20]	; 0xffffffec
    21d4:	mov	r3, #0
    21d8:	str	r3, [fp, #-24]	; 0xffffffe8
    21dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    21e0:	str	r3, [fp, #-8]
    21e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    21e8:	mov	r2, #0
    21ec:	str	r2, [r3]
    21f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    21f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    21f8:	cmp	r2, r3
    21fc:	bne	2208 <flatcc_json_parser_int32+0x5c>
    2200:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2204:	b	2270 <flatcc_json_parser_int32+0xc4>
    2208:	sub	r2, fp, #24
    220c:	sub	r3, fp, #20
    2210:	str	r3, [sp]
    2214:	mov	r3, r2
    2218:	ldr	r2, [fp, #-40]	; 0xffffffd8
    221c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2220:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2224:	bl	0 <flatcc_json_parser_integer>
    2228:	str	r0, [fp, #-36]	; 0xffffffdc
    222c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2230:	ldr	r3, [fp, #-8]
    2234:	cmp	r2, r3
    2238:	beq	226c <flatcc_json_parser_int32+0xc0>
    223c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2240:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2244:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2248:	str	r1, [sp, #8]
    224c:	strd	r2, [sp]
    2250:	mov	r3, r0
    2254:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2258:	ldr	r1, [fp, #-36]	; 0xffffffdc
    225c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2260:	bl	1a18 <flatcc_json_parser_coerce_int32>
    2264:	mov	r3, r0
    2268:	b	2270 <flatcc_json_parser_int32+0xc4>
    226c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2270:	mov	r0, r3
    2274:	sub	sp, fp, #4
    2278:	pop	{fp, pc}

0000227c <flatcc_json_parser_int16>:
    227c:	push	{fp, lr}
    2280:	add	fp, sp, #4
    2284:	sub	sp, sp, #56	; 0x38
    2288:	str	r0, [fp, #-32]	; 0xffffffe0
    228c:	str	r1, [fp, #-36]	; 0xffffffdc
    2290:	str	r2, [fp, #-40]	; 0xffffffd8
    2294:	str	r3, [fp, #-44]	; 0xffffffd4
    2298:	mov	r2, #0
    229c:	mov	r3, #0
    22a0:	strd	r2, [fp, #-20]	; 0xffffffec
    22a4:	mov	r3, #0
    22a8:	str	r3, [fp, #-24]	; 0xffffffe8
    22ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    22b0:	str	r3, [fp, #-8]
    22b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    22b8:	mov	r2, #0
    22bc:	strh	r2, [r3]
    22c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    22c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    22c8:	cmp	r2, r3
    22cc:	bne	22d8 <flatcc_json_parser_int16+0x5c>
    22d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    22d4:	b	2340 <flatcc_json_parser_int16+0xc4>
    22d8:	sub	r2, fp, #24
    22dc:	sub	r3, fp, #20
    22e0:	str	r3, [sp]
    22e4:	mov	r3, r2
    22e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    22ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    22f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    22f4:	bl	0 <flatcc_json_parser_integer>
    22f8:	str	r0, [fp, #-36]	; 0xffffffdc
    22fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2300:	ldr	r3, [fp, #-8]
    2304:	cmp	r2, r3
    2308:	beq	233c <flatcc_json_parser_int16+0xc0>
    230c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2310:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2314:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2318:	str	r1, [sp, #8]
    231c:	strd	r2, [sp]
    2320:	mov	r3, r0
    2324:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2328:	ldr	r1, [fp, #-36]	; 0xffffffdc
    232c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2330:	bl	1ad4 <flatcc_json_parser_coerce_int16>
    2334:	mov	r3, r0
    2338:	b	2340 <flatcc_json_parser_int16+0xc4>
    233c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2340:	mov	r0, r3
    2344:	sub	sp, fp, #4
    2348:	pop	{fp, pc}

0000234c <flatcc_json_parser_int8>:
    234c:	push	{fp, lr}
    2350:	add	fp, sp, #4
    2354:	sub	sp, sp, #56	; 0x38
    2358:	str	r0, [fp, #-32]	; 0xffffffe0
    235c:	str	r1, [fp, #-36]	; 0xffffffdc
    2360:	str	r2, [fp, #-40]	; 0xffffffd8
    2364:	str	r3, [fp, #-44]	; 0xffffffd4
    2368:	mov	r2, #0
    236c:	mov	r3, #0
    2370:	strd	r2, [fp, #-20]	; 0xffffffec
    2374:	mov	r3, #0
    2378:	str	r3, [fp, #-24]	; 0xffffffe8
    237c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2380:	str	r3, [fp, #-8]
    2384:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2388:	mov	r2, #0
    238c:	strb	r2, [r3]
    2390:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2394:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2398:	cmp	r2, r3
    239c:	bne	23a8 <flatcc_json_parser_int8+0x5c>
    23a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    23a4:	b	2410 <flatcc_json_parser_int8+0xc4>
    23a8:	sub	r2, fp, #24
    23ac:	sub	r3, fp, #20
    23b0:	str	r3, [sp]
    23b4:	mov	r3, r2
    23b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    23bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    23c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    23c4:	bl	0 <flatcc_json_parser_integer>
    23c8:	str	r0, [fp, #-36]	; 0xffffffdc
    23cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    23d0:	ldr	r3, [fp, #-8]
    23d4:	cmp	r2, r3
    23d8:	beq	240c <flatcc_json_parser_int8+0xc0>
    23dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    23e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    23e8:	str	r1, [sp, #8]
    23ec:	strd	r2, [sp]
    23f0:	mov	r3, r0
    23f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    23f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    23fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2400:	bl	1b98 <flatcc_json_parser_coerce_int8>
    2404:	mov	r3, r0
    2408:	b	2410 <flatcc_json_parser_int8+0xc4>
    240c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2410:	mov	r0, r3
    2414:	sub	sp, fp, #4
    2418:	pop	{fp, pc}

0000241c <flatcc_json_parser_bool>:
    241c:	push	{fp, lr}
    2420:	add	fp, sp, #4
    2424:	sub	sp, sp, #24
    2428:	str	r0, [fp, #-16]
    242c:	str	r1, [fp, #-20]	; 0xffffffec
    2430:	str	r2, [fp, #-24]	; 0xffffffe8
    2434:	str	r3, [fp, #-28]	; 0xffffffe4
    2438:	ldr	r3, [fp, #-20]	; 0xffffffec
    243c:	str	r3, [fp, #-8]
    2440:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2444:	ldr	r3, [fp, #-20]	; 0xffffffec
    2448:	sub	r3, r2, r3
    244c:	cmp	r3, #3
    2450:	ble	2488 <flatcc_json_parser_bool+0x6c>
    2454:	mov	r2, #4
    2458:	ldr	r1, [pc, #184]	; 2518 <flatcc_json_parser_bool+0xfc>
    245c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2460:	bl	0 <memcmp>
    2464:	mov	r3, r0
    2468:	cmp	r3, #0
    246c:	bne	2488 <flatcc_json_parser_bool+0x6c>
    2470:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2474:	mov	r2, #1
    2478:	strb	r2, [r3]
    247c:	ldr	r3, [fp, #-8]
    2480:	add	r3, r3, #4
    2484:	b	250c <flatcc_json_parser_bool+0xf0>
    2488:	ldr	r2, [fp, #-24]	; 0xffffffe8
    248c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2490:	sub	r3, r2, r3
    2494:	cmp	r3, #4
    2498:	ble	24d0 <flatcc_json_parser_bool+0xb4>
    249c:	mov	r2, #5
    24a0:	ldr	r1, [pc, #116]	; 251c <flatcc_json_parser_bool+0x100>
    24a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    24a8:	bl	0 <memcmp>
    24ac:	mov	r3, r0
    24b0:	cmp	r3, #0
    24b4:	bne	24d0 <flatcc_json_parser_bool+0xb4>
    24b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    24bc:	mov	r2, #0
    24c0:	strb	r2, [r3]
    24c4:	ldr	r3, [fp, #-8]
    24c8:	add	r3, r3, #5
    24cc:	b	250c <flatcc_json_parser_bool+0xf0>
    24d0:	sub	r3, fp, #9
    24d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    24d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    24dc:	ldr	r0, [fp, #-16]
    24e0:	bl	2008 <flatcc_json_parser_uint8>
    24e4:	str	r0, [fp, #-20]	; 0xffffffec
    24e8:	ldrb	r3, [fp, #-9]
    24ec:	cmp	r3, #0
    24f0:	movne	r3, #1
    24f4:	moveq	r3, #0
    24f8:	uxtb	r3, r3
    24fc:	mov	r2, r3
    2500:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2504:	strb	r2, [r3]
    2508:	ldr	r3, [fp, #-20]	; 0xffffffec
    250c:	mov	r0, r3
    2510:	sub	sp, fp, #4
    2514:	pop	{fp, pc}
    2518:	.word	0x0000009c
    251c:	.word	0x000000a4

00002520 <flatcc_json_parser_symbolic_uint64>:
    2520:	push	{r4, fp, lr}
    2524:	add	fp, sp, #8
    2528:	sub	sp, sp, #76	; 0x4c
    252c:	str	r0, [fp, #-56]	; 0xffffffc8
    2530:	str	r1, [fp, #-60]	; 0xffffffc4
    2534:	str	r2, [fp, #-64]	; 0xffffffc0
    2538:	str	r3, [fp, #-68]	; 0xffffffbc
    253c:	mov	r2, #0
    2540:	mov	r3, #0
    2544:	strd	r2, [fp, #-36]	; 0xffffffdc
    2548:	mov	r3, #0
    254c:	str	r3, [fp, #-20]	; 0xffffffec
    2550:	ldr	r1, [fp, #4]
    2554:	mov	r2, #0
    2558:	mov	r3, #0
    255c:	strd	r2, [r1]
    2560:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2564:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2568:	ldr	r0, [fp, #-56]	; 0xffffffc8
    256c:	bl	1074 <flatcc_json_parser_constant_start>
    2570:	str	r0, [fp, #-60]	; 0xffffffc4
    2574:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2578:	ldr	r3, [fp, #-64]	; 0xffffffc0
    257c:	cmp	r2, r3
    2580:	bne	258c <flatcc_json_parser_symbolic_uint64+0x6c>
    2584:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2588:	b	26ec <flatcc_json_parser_symbolic_uint64+0x1cc>
    258c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2590:	str	r3, [fp, #-16]
    2594:	ldr	r3, [fp, #-16]
    2598:	ldr	r4, [r3]
    259c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    25a0:	str	r3, [fp, #-24]	; 0xffffffe8
    25a4:	sub	r2, fp, #48	; 0x30
    25a8:	sub	r3, fp, #52	; 0x34
    25ac:	str	r3, [sp, #4]
    25b0:	sub	r3, fp, #44	; 0x2c
    25b4:	str	r3, [sp]
    25b8:	mov	r3, r2
    25bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    25c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    25c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    25c8:	blx	r4
    25cc:	str	r0, [fp, #-60]	; 0xffffffc4
    25d0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    25d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    25d8:	cmp	r2, r3
    25dc:	bne	25e8 <flatcc_json_parser_symbolic_uint64+0xc8>
    25e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    25e4:	b	26ec <flatcc_json_parser_symbolic_uint64+0x1cc>
    25e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    25ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25f0:	cmp	r2, r3
    25f4:	bne	2614 <flatcc_json_parser_symbolic_uint64+0xf4>
    25f8:	ldr	r3, [fp, #-16]
    25fc:	add	r3, r3, #4
    2600:	str	r3, [fp, #-16]
    2604:	ldr	r3, [fp, #-16]
    2608:	ldr	r3, [r3]
    260c:	cmp	r3, #0
    2610:	bne	2594 <flatcc_json_parser_symbolic_uint64+0x74>
    2614:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2618:	ldr	r3, [fp, #-60]	; 0xffffffc4
    261c:	cmp	r2, r3
    2620:	bne	2640 <flatcc_json_parser_symbolic_uint64+0x120>
    2624:	mov	r3, #23
    2628:	ldr	r2, [fp, #-64]	; 0xffffffc0
    262c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2630:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2634:	bl	0 <flatcc_json_parser_set_error>
    2638:	mov	r3, r0
    263c:	b	26ec <flatcc_json_parser_symbolic_uint64+0x1cc>
    2640:	ldr	r3, [fp, #-20]	; 0xffffffec
    2644:	add	r2, r3, #1
    2648:	str	r2, [fp, #-20]	; 0xffffffec
    264c:	cmp	r3, #0
    2650:	beq	2680 <flatcc_json_parser_symbolic_uint64+0x160>
    2654:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2658:	ldr	r3, [r3, #12]
    265c:	cmp	r3, #0
    2660:	beq	2680 <flatcc_json_parser_symbolic_uint64+0x160>
    2664:	mov	r3, #14
    2668:	ldr	r2, [fp, #-64]	; 0xffffffc0
    266c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2670:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2674:	bl	0 <flatcc_json_parser_set_error>
    2678:	mov	r3, r0
    267c:	b	26ec <flatcc_json_parser_symbolic_uint64+0x1cc>
    2680:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2684:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2688:	sub	r1, fp, #36	; 0x24
    268c:	str	r1, [sp, #8]
    2690:	strd	r2, [sp]
    2694:	mov	r3, r0
    2698:	ldr	r2, [fp, #-64]	; 0xffffffc0
    269c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    26a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    26a4:	bl	16d0 <flatcc_json_parser_coerce_uint64>
    26a8:	mov	r2, r0
    26ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
    26b0:	cmp	r2, r3
    26b4:	bne	26c0 <flatcc_json_parser_symbolic_uint64+0x1a0>
    26b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    26bc:	b	26ec <flatcc_json_parser_symbolic_uint64+0x1cc>
    26c0:	ldr	r3, [fp, #4]
    26c4:	ldrd	r0, [r3]
    26c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    26cc:	adds	r2, r2, r0
    26d0:	adc	r3, r3, r1
    26d4:	ldr	r1, [fp, #4]
    26d8:	strd	r2, [r1]
    26dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    26e0:	cmp	r3, #0
    26e4:	bne	258c <flatcc_json_parser_symbolic_uint64+0x6c>
    26e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    26ec:	mov	r0, r3
    26f0:	sub	sp, fp, #8
    26f4:	pop	{r4, fp, pc}

000026f8 <flatcc_json_parser_symbolic_uint32>:
    26f8:	push	{r4, fp, lr}
    26fc:	add	fp, sp, #8
    2700:	sub	sp, sp, #68	; 0x44
    2704:	str	r0, [fp, #-48]	; 0xffffffd0
    2708:	str	r1, [fp, #-52]	; 0xffffffcc
    270c:	str	r2, [fp, #-56]	; 0xffffffc8
    2710:	str	r3, [fp, #-60]	; 0xffffffc4
    2714:	mov	r3, #0
    2718:	str	r3, [fp, #-28]	; 0xffffffe4
    271c:	mov	r3, #0
    2720:	str	r3, [fp, #-20]	; 0xffffffec
    2724:	ldr	r3, [fp, #4]
    2728:	mov	r2, #0
    272c:	str	r2, [r3]
    2730:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2734:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2738:	ldr	r0, [fp, #-48]	; 0xffffffd0
    273c:	bl	1074 <flatcc_json_parser_constant_start>
    2740:	str	r0, [fp, #-52]	; 0xffffffcc
    2744:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2748:	ldr	r3, [fp, #-56]	; 0xffffffc8
    274c:	cmp	r2, r3
    2750:	bne	275c <flatcc_json_parser_symbolic_uint32+0x64>
    2754:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2758:	b	28b8 <flatcc_json_parser_symbolic_uint32+0x1c0>
    275c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2760:	str	r3, [fp, #-16]
    2764:	ldr	r3, [fp, #-16]
    2768:	ldr	r4, [r3]
    276c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2770:	str	r3, [fp, #-24]	; 0xffffffe8
    2774:	sub	r2, fp, #40	; 0x28
    2778:	sub	r3, fp, #44	; 0x2c
    277c:	str	r3, [sp, #4]
    2780:	sub	r3, fp, #36	; 0x24
    2784:	str	r3, [sp]
    2788:	mov	r3, r2
    278c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2790:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2794:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2798:	blx	r4
    279c:	str	r0, [fp, #-52]	; 0xffffffcc
    27a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    27a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    27a8:	cmp	r2, r3
    27ac:	bne	27b8 <flatcc_json_parser_symbolic_uint32+0xc0>
    27b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27b4:	b	28b8 <flatcc_json_parser_symbolic_uint32+0x1c0>
    27b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    27bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    27c0:	cmp	r2, r3
    27c4:	bne	27e4 <flatcc_json_parser_symbolic_uint32+0xec>
    27c8:	ldr	r3, [fp, #-16]
    27cc:	add	r3, r3, #4
    27d0:	str	r3, [fp, #-16]
    27d4:	ldr	r3, [fp, #-16]
    27d8:	ldr	r3, [r3]
    27dc:	cmp	r3, #0
    27e0:	bne	2764 <flatcc_json_parser_symbolic_uint32+0x6c>
    27e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    27e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27ec:	cmp	r2, r3
    27f0:	bne	2810 <flatcc_json_parser_symbolic_uint32+0x118>
    27f4:	mov	r3, #23
    27f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    27fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2800:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2804:	bl	0 <flatcc_json_parser_set_error>
    2808:	mov	r3, r0
    280c:	b	28b8 <flatcc_json_parser_symbolic_uint32+0x1c0>
    2810:	ldr	r3, [fp, #-20]	; 0xffffffec
    2814:	add	r2, r3, #1
    2818:	str	r2, [fp, #-20]	; 0xffffffec
    281c:	cmp	r3, #0
    2820:	beq	2850 <flatcc_json_parser_symbolic_uint32+0x158>
    2824:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2828:	ldr	r3, [r3, #12]
    282c:	cmp	r3, #0
    2830:	beq	2850 <flatcc_json_parser_symbolic_uint32+0x158>
    2834:	mov	r3, #14
    2838:	ldr	r2, [fp, #-56]	; 0xffffffc8
    283c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2840:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2844:	bl	0 <flatcc_json_parser_set_error>
    2848:	mov	r3, r0
    284c:	b	28b8 <flatcc_json_parser_symbolic_uint32+0x1c0>
    2850:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2854:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2858:	sub	r1, fp, #28
    285c:	str	r1, [sp, #8]
    2860:	strd	r2, [sp]
    2864:	mov	r3, r0
    2868:	ldr	r2, [fp, #-56]	; 0xffffffc8
    286c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2870:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2874:	bl	17ac <flatcc_json_parser_coerce_uint32>
    2878:	mov	r2, r0
    287c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2880:	cmp	r2, r3
    2884:	bne	2890 <flatcc_json_parser_symbolic_uint32+0x198>
    2888:	ldr	r3, [fp, #-56]	; 0xffffffc8
    288c:	b	28b8 <flatcc_json_parser_symbolic_uint32+0x1c0>
    2890:	ldr	r3, [fp, #4]
    2894:	ldr	r2, [r3]
    2898:	ldr	r3, [fp, #-28]	; 0xffffffe4
    289c:	add	r2, r2, r3
    28a0:	ldr	r3, [fp, #4]
    28a4:	str	r2, [r3]
    28a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    28ac:	cmp	r3, #0
    28b0:	bne	275c <flatcc_json_parser_symbolic_uint32+0x64>
    28b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28b8:	mov	r0, r3
    28bc:	sub	sp, fp, #8
    28c0:	pop	{r4, fp, pc}

000028c4 <flatcc_json_parser_symbolic_uint16>:
    28c4:	push	{r4, fp, lr}
    28c8:	add	fp, sp, #8
    28cc:	sub	sp, sp, #68	; 0x44
    28d0:	str	r0, [fp, #-48]	; 0xffffffd0
    28d4:	str	r1, [fp, #-52]	; 0xffffffcc
    28d8:	str	r2, [fp, #-56]	; 0xffffffc8
    28dc:	str	r3, [fp, #-60]	; 0xffffffc4
    28e0:	mov	r3, #0
    28e4:	strh	r3, [fp, #-26]	; 0xffffffe6
    28e8:	mov	r3, #0
    28ec:	str	r3, [fp, #-20]	; 0xffffffec
    28f0:	ldr	r3, [fp, #4]
    28f4:	mov	r2, #0
    28f8:	strh	r2, [r3]
    28fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2900:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2904:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2908:	bl	1074 <flatcc_json_parser_constant_start>
    290c:	str	r0, [fp, #-52]	; 0xffffffcc
    2910:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2914:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2918:	cmp	r2, r3
    291c:	bne	2928 <flatcc_json_parser_symbolic_uint16+0x64>
    2920:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2924:	b	2a88 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2928:	ldr	r3, [fp, #-60]	; 0xffffffc4
    292c:	str	r3, [fp, #-16]
    2930:	ldr	r3, [fp, #-16]
    2934:	ldr	r4, [r3]
    2938:	ldr	r3, [fp, #-52]	; 0xffffffcc
    293c:	str	r3, [fp, #-24]	; 0xffffffe8
    2940:	sub	r2, fp, #40	; 0x28
    2944:	sub	r3, fp, #44	; 0x2c
    2948:	str	r3, [sp, #4]
    294c:	sub	r3, fp, #36	; 0x24
    2950:	str	r3, [sp]
    2954:	mov	r3, r2
    2958:	ldr	r2, [fp, #-56]	; 0xffffffc8
    295c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2960:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2964:	blx	r4
    2968:	str	r0, [fp, #-52]	; 0xffffffcc
    296c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2970:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2974:	cmp	r2, r3
    2978:	bne	2984 <flatcc_json_parser_symbolic_uint16+0xc0>
    297c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2980:	b	2a88 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2984:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2988:	ldr	r3, [fp, #-24]	; 0xffffffe8
    298c:	cmp	r2, r3
    2990:	bne	29b0 <flatcc_json_parser_symbolic_uint16+0xec>
    2994:	ldr	r3, [fp, #-16]
    2998:	add	r3, r3, #4
    299c:	str	r3, [fp, #-16]
    29a0:	ldr	r3, [fp, #-16]
    29a4:	ldr	r3, [r3]
    29a8:	cmp	r3, #0
    29ac:	bne	2930 <flatcc_json_parser_symbolic_uint16+0x6c>
    29b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    29b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29b8:	cmp	r2, r3
    29bc:	bne	29dc <flatcc_json_parser_symbolic_uint16+0x118>
    29c0:	mov	r3, #23
    29c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    29cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29d0:	bl	0 <flatcc_json_parser_set_error>
    29d4:	mov	r3, r0
    29d8:	b	2a88 <flatcc_json_parser_symbolic_uint16+0x1c4>
    29dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    29e0:	add	r2, r3, #1
    29e4:	str	r2, [fp, #-20]	; 0xffffffec
    29e8:	cmp	r3, #0
    29ec:	beq	2a1c <flatcc_json_parser_symbolic_uint16+0x158>
    29f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    29f4:	ldr	r3, [r3, #12]
    29f8:	cmp	r3, #0
    29fc:	beq	2a1c <flatcc_json_parser_symbolic_uint16+0x158>
    2a00:	mov	r3, #14
    2a04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a08:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2a0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a10:	bl	0 <flatcc_json_parser_set_error>
    2a14:	mov	r3, r0
    2a18:	b	2a88 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2a1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a20:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2a24:	sub	r1, fp, #26
    2a28:	str	r1, [sp, #8]
    2a2c:	strd	r2, [sp]
    2a30:	mov	r3, r0
    2a34:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a38:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a40:	bl	1840 <flatcc_json_parser_coerce_uint16>
    2a44:	mov	r2, r0
    2a48:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2a4c:	cmp	r2, r3
    2a50:	bne	2a5c <flatcc_json_parser_symbolic_uint16+0x198>
    2a54:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2a58:	b	2a88 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2a5c:	ldr	r3, [fp, #4]
    2a60:	ldrh	r2, [r3]
    2a64:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    2a68:	add	r3, r2, r3
    2a6c:	uxth	r2, r3
    2a70:	ldr	r3, [fp, #4]
    2a74:	strh	r2, [r3]
    2a78:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2a7c:	cmp	r3, #0
    2a80:	bne	2928 <flatcc_json_parser_symbolic_uint16+0x64>
    2a84:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2a88:	mov	r0, r3
    2a8c:	sub	sp, fp, #8
    2a90:	pop	{r4, fp, pc}

00002a94 <flatcc_json_parser_symbolic_uint8>:
    2a94:	push	{r4, fp, lr}
    2a98:	add	fp, sp, #8
    2a9c:	sub	sp, sp, #68	; 0x44
    2aa0:	str	r0, [fp, #-48]	; 0xffffffd0
    2aa4:	str	r1, [fp, #-52]	; 0xffffffcc
    2aa8:	str	r2, [fp, #-56]	; 0xffffffc8
    2aac:	str	r3, [fp, #-60]	; 0xffffffc4
    2ab0:	mov	r3, #0
    2ab4:	strb	r3, [fp, #-25]	; 0xffffffe7
    2ab8:	mov	r3, #0
    2abc:	str	r3, [fp, #-20]	; 0xffffffec
    2ac0:	ldr	r3, [fp, #4]
    2ac4:	mov	r2, #0
    2ac8:	strb	r2, [r3]
    2acc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ad0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2ad4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ad8:	bl	1074 <flatcc_json_parser_constant_start>
    2adc:	str	r0, [fp, #-52]	; 0xffffffcc
    2ae0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2ae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2ae8:	cmp	r2, r3
    2aec:	bne	2af8 <flatcc_json_parser_symbolic_uint8+0x64>
    2af0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2af4:	b	2c58 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2af8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2afc:	str	r3, [fp, #-16]
    2b00:	ldr	r3, [fp, #-16]
    2b04:	ldr	r4, [r3]
    2b08:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b0c:	str	r3, [fp, #-24]	; 0xffffffe8
    2b10:	sub	r2, fp, #40	; 0x28
    2b14:	sub	r3, fp, #44	; 0x2c
    2b18:	str	r3, [sp, #4]
    2b1c:	sub	r3, fp, #36	; 0x24
    2b20:	str	r3, [sp]
    2b24:	mov	r3, r2
    2b28:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b30:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b34:	blx	r4
    2b38:	str	r0, [fp, #-52]	; 0xffffffcc
    2b3c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2b40:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2b44:	cmp	r2, r3
    2b48:	bne	2b54 <flatcc_json_parser_symbolic_uint8+0xc0>
    2b4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b50:	b	2c58 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2b54:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2b58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b5c:	cmp	r2, r3
    2b60:	bne	2b80 <flatcc_json_parser_symbolic_uint8+0xec>
    2b64:	ldr	r3, [fp, #-16]
    2b68:	add	r3, r3, #4
    2b6c:	str	r3, [fp, #-16]
    2b70:	ldr	r3, [fp, #-16]
    2b74:	ldr	r3, [r3]
    2b78:	cmp	r3, #0
    2b7c:	bne	2b00 <flatcc_json_parser_symbolic_uint8+0x6c>
    2b80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b84:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b88:	cmp	r2, r3
    2b8c:	bne	2bac <flatcc_json_parser_symbolic_uint8+0x118>
    2b90:	mov	r3, #23
    2b94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b98:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2b9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ba0:	bl	0 <flatcc_json_parser_set_error>
    2ba4:	mov	r3, r0
    2ba8:	b	2c58 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2bac:	ldr	r3, [fp, #-20]	; 0xffffffec
    2bb0:	add	r2, r3, #1
    2bb4:	str	r2, [fp, #-20]	; 0xffffffec
    2bb8:	cmp	r3, #0
    2bbc:	beq	2bec <flatcc_json_parser_symbolic_uint8+0x158>
    2bc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2bc4:	ldr	r3, [r3, #12]
    2bc8:	cmp	r3, #0
    2bcc:	beq	2bec <flatcc_json_parser_symbolic_uint8+0x158>
    2bd0:	mov	r3, #14
    2bd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2bd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2bdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2be0:	bl	0 <flatcc_json_parser_set_error>
    2be4:	mov	r3, r0
    2be8:	b	2c58 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2bec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2bf0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2bf4:	sub	r1, fp, #25
    2bf8:	str	r1, [sp, #8]
    2bfc:	strd	r2, [sp]
    2c00:	mov	r3, r0
    2c04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c08:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2c0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c10:	bl	18d8 <flatcc_json_parser_coerce_uint8>
    2c14:	mov	r2, r0
    2c18:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2c1c:	cmp	r2, r3
    2c20:	bne	2c2c <flatcc_json_parser_symbolic_uint8+0x198>
    2c24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2c28:	b	2c58 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2c2c:	ldr	r3, [fp, #4]
    2c30:	ldrb	r2, [r3]
    2c34:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    2c38:	add	r3, r2, r3
    2c3c:	uxtb	r2, r3
    2c40:	ldr	r3, [fp, #4]
    2c44:	strb	r2, [r3]
    2c48:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2c4c:	cmp	r3, #0
    2c50:	bne	2af8 <flatcc_json_parser_symbolic_uint8+0x64>
    2c54:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c58:	mov	r0, r3
    2c5c:	sub	sp, fp, #8
    2c60:	pop	{r4, fp, pc}

00002c64 <flatcc_json_parser_symbolic_int64>:
    2c64:	push	{r4, fp, lr}
    2c68:	add	fp, sp, #8
    2c6c:	sub	sp, sp, #76	; 0x4c
    2c70:	str	r0, [fp, #-56]	; 0xffffffc8
    2c74:	str	r1, [fp, #-60]	; 0xffffffc4
    2c78:	str	r2, [fp, #-64]	; 0xffffffc0
    2c7c:	str	r3, [fp, #-68]	; 0xffffffbc
    2c80:	mov	r2, #0
    2c84:	mov	r3, #0
    2c88:	strd	r2, [fp, #-36]	; 0xffffffdc
    2c8c:	mov	r3, #0
    2c90:	str	r3, [fp, #-20]	; 0xffffffec
    2c94:	ldr	r1, [fp, #4]
    2c98:	mov	r2, #0
    2c9c:	mov	r3, #0
    2ca0:	strd	r2, [r1]
    2ca4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2ca8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2cac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2cb0:	bl	1074 <flatcc_json_parser_constant_start>
    2cb4:	str	r0, [fp, #-60]	; 0xffffffc4
    2cb8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2cbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2cc0:	cmp	r2, r3
    2cc4:	bne	2cd0 <flatcc_json_parser_symbolic_int64+0x6c>
    2cc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2ccc:	b	2e30 <flatcc_json_parser_symbolic_int64+0x1cc>
    2cd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2cd4:	str	r3, [fp, #-16]
    2cd8:	ldr	r3, [fp, #-16]
    2cdc:	ldr	r4, [r3]
    2ce0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2ce4:	str	r3, [fp, #-24]	; 0xffffffe8
    2ce8:	sub	r2, fp, #48	; 0x30
    2cec:	sub	r3, fp, #52	; 0x34
    2cf0:	str	r3, [sp, #4]
    2cf4:	sub	r3, fp, #44	; 0x2c
    2cf8:	str	r3, [sp]
    2cfc:	mov	r3, r2
    2d00:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2d0c:	blx	r4
    2d10:	str	r0, [fp, #-60]	; 0xffffffc4
    2d14:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2d18:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2d1c:	cmp	r2, r3
    2d20:	bne	2d2c <flatcc_json_parser_symbolic_int64+0xc8>
    2d24:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2d28:	b	2e30 <flatcc_json_parser_symbolic_int64+0x1cc>
    2d2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2d30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2d34:	cmp	r2, r3
    2d38:	bne	2d58 <flatcc_json_parser_symbolic_int64+0xf4>
    2d3c:	ldr	r3, [fp, #-16]
    2d40:	add	r3, r3, #4
    2d44:	str	r3, [fp, #-16]
    2d48:	ldr	r3, [fp, #-16]
    2d4c:	ldr	r3, [r3]
    2d50:	cmp	r3, #0
    2d54:	bne	2cd8 <flatcc_json_parser_symbolic_int64+0x74>
    2d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2d60:	cmp	r2, r3
    2d64:	bne	2d84 <flatcc_json_parser_symbolic_int64+0x120>
    2d68:	mov	r3, #23
    2d6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2d70:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d74:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2d78:	bl	0 <flatcc_json_parser_set_error>
    2d7c:	mov	r3, r0
    2d80:	b	2e30 <flatcc_json_parser_symbolic_int64+0x1cc>
    2d84:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d88:	add	r2, r3, #1
    2d8c:	str	r2, [fp, #-20]	; 0xffffffec
    2d90:	cmp	r3, #0
    2d94:	beq	2dc4 <flatcc_json_parser_symbolic_int64+0x160>
    2d98:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2d9c:	ldr	r3, [r3, #12]
    2da0:	cmp	r3, #0
    2da4:	beq	2dc4 <flatcc_json_parser_symbolic_int64+0x160>
    2da8:	mov	r3, #14
    2dac:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2db0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2db4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2db8:	bl	0 <flatcc_json_parser_set_error>
    2dbc:	mov	r3, r0
    2dc0:	b	2e30 <flatcc_json_parser_symbolic_int64+0x1cc>
    2dc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2dc8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2dcc:	sub	r1, fp, #36	; 0x24
    2dd0:	str	r1, [sp, #8]
    2dd4:	strd	r2, [sp]
    2dd8:	mov	r3, r0
    2ddc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2de0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2de4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2de8:	bl	1964 <flatcc_json_parser_coerce_int64>
    2dec:	mov	r2, r0
    2df0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2df4:	cmp	r2, r3
    2df8:	bne	2e04 <flatcc_json_parser_symbolic_int64+0x1a0>
    2dfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2e00:	b	2e30 <flatcc_json_parser_symbolic_int64+0x1cc>
    2e04:	ldr	r3, [fp, #4]
    2e08:	ldrd	r0, [r3]
    2e0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2e10:	adds	r2, r2, r0
    2e14:	adc	r3, r3, r1
    2e18:	ldr	r1, [fp, #4]
    2e1c:	strd	r2, [r1]
    2e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e24:	cmp	r3, #0
    2e28:	bne	2cd0 <flatcc_json_parser_symbolic_int64+0x6c>
    2e2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2e30:	mov	r0, r3
    2e34:	sub	sp, fp, #8
    2e38:	pop	{r4, fp, pc}

00002e3c <flatcc_json_parser_symbolic_int32>:
    2e3c:	push	{r4, fp, lr}
    2e40:	add	fp, sp, #8
    2e44:	sub	sp, sp, #68	; 0x44
    2e48:	str	r0, [fp, #-48]	; 0xffffffd0
    2e4c:	str	r1, [fp, #-52]	; 0xffffffcc
    2e50:	str	r2, [fp, #-56]	; 0xffffffc8
    2e54:	str	r3, [fp, #-60]	; 0xffffffc4
    2e58:	mov	r3, #0
    2e5c:	str	r3, [fp, #-28]	; 0xffffffe4
    2e60:	mov	r3, #0
    2e64:	str	r3, [fp, #-20]	; 0xffffffec
    2e68:	ldr	r3, [fp, #4]
    2e6c:	mov	r2, #0
    2e70:	str	r2, [r3]
    2e74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e78:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2e7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e80:	bl	1074 <flatcc_json_parser_constant_start>
    2e84:	str	r0, [fp, #-52]	; 0xffffffcc
    2e88:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2e8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2e90:	cmp	r2, r3
    2e94:	bne	2ea0 <flatcc_json_parser_symbolic_int32+0x64>
    2e98:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e9c:	b	2ffc <flatcc_json_parser_symbolic_int32+0x1c0>
    2ea0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2ea4:	str	r3, [fp, #-16]
    2ea8:	ldr	r3, [fp, #-16]
    2eac:	ldr	r4, [r3]
    2eb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2eb4:	str	r3, [fp, #-24]	; 0xffffffe8
    2eb8:	sub	r2, fp, #40	; 0x28
    2ebc:	sub	r3, fp, #44	; 0x2c
    2ec0:	str	r3, [sp, #4]
    2ec4:	sub	r3, fp, #36	; 0x24
    2ec8:	str	r3, [sp]
    2ecc:	mov	r3, r2
    2ed0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ed8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2edc:	blx	r4
    2ee0:	str	r0, [fp, #-52]	; 0xffffffcc
    2ee4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2ee8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2eec:	cmp	r2, r3
    2ef0:	bne	2efc <flatcc_json_parser_symbolic_int32+0xc0>
    2ef4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ef8:	b	2ffc <flatcc_json_parser_symbolic_int32+0x1c0>
    2efc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f04:	cmp	r2, r3
    2f08:	bne	2f28 <flatcc_json_parser_symbolic_int32+0xec>
    2f0c:	ldr	r3, [fp, #-16]
    2f10:	add	r3, r3, #4
    2f14:	str	r3, [fp, #-16]
    2f18:	ldr	r3, [fp, #-16]
    2f1c:	ldr	r3, [r3]
    2f20:	cmp	r3, #0
    2f24:	bne	2ea8 <flatcc_json_parser_symbolic_int32+0x6c>
    2f28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f30:	cmp	r2, r3
    2f34:	bne	2f54 <flatcc_json_parser_symbolic_int32+0x118>
    2f38:	mov	r3, #23
    2f3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f40:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2f44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f48:	bl	0 <flatcc_json_parser_set_error>
    2f4c:	mov	r3, r0
    2f50:	b	2ffc <flatcc_json_parser_symbolic_int32+0x1c0>
    2f54:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f58:	add	r2, r3, #1
    2f5c:	str	r2, [fp, #-20]	; 0xffffffec
    2f60:	cmp	r3, #0
    2f64:	beq	2f94 <flatcc_json_parser_symbolic_int32+0x158>
    2f68:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2f6c:	ldr	r3, [r3, #12]
    2f70:	cmp	r3, #0
    2f74:	beq	2f94 <flatcc_json_parser_symbolic_int32+0x158>
    2f78:	mov	r3, #14
    2f7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2f84:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f88:	bl	0 <flatcc_json_parser_set_error>
    2f8c:	mov	r3, r0
    2f90:	b	2ffc <flatcc_json_parser_symbolic_int32+0x1c0>
    2f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f98:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2f9c:	sub	r1, fp, #28
    2fa0:	str	r1, [sp, #8]
    2fa4:	strd	r2, [sp]
    2fa8:	mov	r3, r0
    2fac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2fb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2fb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2fb8:	bl	1a18 <flatcc_json_parser_coerce_int32>
    2fbc:	mov	r2, r0
    2fc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2fc4:	cmp	r2, r3
    2fc8:	bne	2fd4 <flatcc_json_parser_symbolic_int32+0x198>
    2fcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2fd0:	b	2ffc <flatcc_json_parser_symbolic_int32+0x1c0>
    2fd4:	ldr	r3, [fp, #4]
    2fd8:	ldr	r2, [r3]
    2fdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2fe0:	add	r2, r2, r3
    2fe4:	ldr	r3, [fp, #4]
    2fe8:	str	r2, [r3]
    2fec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2ff0:	cmp	r3, #0
    2ff4:	bne	2ea0 <flatcc_json_parser_symbolic_int32+0x64>
    2ff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ffc:	mov	r0, r3
    3000:	sub	sp, fp, #8
    3004:	pop	{r4, fp, pc}

00003008 <flatcc_json_parser_symbolic_int16>:
    3008:	push	{r4, fp, lr}
    300c:	add	fp, sp, #8
    3010:	sub	sp, sp, #68	; 0x44
    3014:	str	r0, [fp, #-48]	; 0xffffffd0
    3018:	str	r1, [fp, #-52]	; 0xffffffcc
    301c:	str	r2, [fp, #-56]	; 0xffffffc8
    3020:	str	r3, [fp, #-60]	; 0xffffffc4
    3024:	mov	r3, #0
    3028:	strh	r3, [fp, #-26]	; 0xffffffe6
    302c:	mov	r3, #0
    3030:	str	r3, [fp, #-20]	; 0xffffffec
    3034:	ldr	r3, [fp, #4]
    3038:	mov	r2, #0
    303c:	strh	r2, [r3]
    3040:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3044:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3048:	ldr	r0, [fp, #-48]	; 0xffffffd0
    304c:	bl	1074 <flatcc_json_parser_constant_start>
    3050:	str	r0, [fp, #-52]	; 0xffffffcc
    3054:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3058:	ldr	r3, [fp, #-56]	; 0xffffffc8
    305c:	cmp	r2, r3
    3060:	bne	306c <flatcc_json_parser_symbolic_int16+0x64>
    3064:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3068:	b	31d8 <flatcc_json_parser_symbolic_int16+0x1d0>
    306c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3070:	str	r3, [fp, #-16]
    3074:	ldr	r3, [fp, #-16]
    3078:	ldr	r4, [r3]
    307c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3080:	str	r3, [fp, #-24]	; 0xffffffe8
    3084:	sub	r2, fp, #40	; 0x28
    3088:	sub	r3, fp, #44	; 0x2c
    308c:	str	r3, [sp, #4]
    3090:	sub	r3, fp, #36	; 0x24
    3094:	str	r3, [sp]
    3098:	mov	r3, r2
    309c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30a8:	blx	r4
    30ac:	str	r0, [fp, #-52]	; 0xffffffcc
    30b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    30b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    30b8:	cmp	r2, r3
    30bc:	bne	30c8 <flatcc_json_parser_symbolic_int16+0xc0>
    30c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    30c4:	b	31d8 <flatcc_json_parser_symbolic_int16+0x1d0>
    30c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    30cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30d0:	cmp	r2, r3
    30d4:	bne	30f4 <flatcc_json_parser_symbolic_int16+0xec>
    30d8:	ldr	r3, [fp, #-16]
    30dc:	add	r3, r3, #4
    30e0:	str	r3, [fp, #-16]
    30e4:	ldr	r3, [fp, #-16]
    30e8:	ldr	r3, [r3]
    30ec:	cmp	r3, #0
    30f0:	bne	3074 <flatcc_json_parser_symbolic_int16+0x6c>
    30f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    30f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    30fc:	cmp	r2, r3
    3100:	bne	3120 <flatcc_json_parser_symbolic_int16+0x118>
    3104:	mov	r3, #23
    3108:	ldr	r2, [fp, #-56]	; 0xffffffc8
    310c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3110:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3114:	bl	0 <flatcc_json_parser_set_error>
    3118:	mov	r3, r0
    311c:	b	31d8 <flatcc_json_parser_symbolic_int16+0x1d0>
    3120:	ldr	r3, [fp, #-20]	; 0xffffffec
    3124:	add	r2, r3, #1
    3128:	str	r2, [fp, #-20]	; 0xffffffec
    312c:	cmp	r3, #0
    3130:	beq	3160 <flatcc_json_parser_symbolic_int16+0x158>
    3134:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3138:	ldr	r3, [r3, #12]
    313c:	cmp	r3, #0
    3140:	beq	3160 <flatcc_json_parser_symbolic_int16+0x158>
    3144:	mov	r3, #14
    3148:	ldr	r2, [fp, #-56]	; 0xffffffc8
    314c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3150:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3154:	bl	0 <flatcc_json_parser_set_error>
    3158:	mov	r3, r0
    315c:	b	31d8 <flatcc_json_parser_symbolic_int16+0x1d0>
    3160:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3164:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3168:	sub	r1, fp, #26
    316c:	str	r1, [sp, #8]
    3170:	strd	r2, [sp]
    3174:	mov	r3, r0
    3178:	ldr	r2, [fp, #-56]	; 0xffffffc8
    317c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3180:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3184:	bl	1ad4 <flatcc_json_parser_coerce_int16>
    3188:	mov	r2, r0
    318c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3190:	cmp	r2, r3
    3194:	bne	31a0 <flatcc_json_parser_symbolic_int16+0x198>
    3198:	ldr	r3, [fp, #-56]	; 0xffffffc8
    319c:	b	31d8 <flatcc_json_parser_symbolic_int16+0x1d0>
    31a0:	ldr	r3, [fp, #4]
    31a4:	ldrsh	r3, [r3]
    31a8:	uxth	r2, r3
    31ac:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
    31b0:	uxth	r3, r3
    31b4:	add	r3, r2, r3
    31b8:	uxth	r3, r3
    31bc:	sxth	r2, r3
    31c0:	ldr	r3, [fp, #4]
    31c4:	strh	r2, [r3]
    31c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    31cc:	cmp	r3, #0
    31d0:	bne	306c <flatcc_json_parser_symbolic_int16+0x64>
    31d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31d8:	mov	r0, r3
    31dc:	sub	sp, fp, #8
    31e0:	pop	{r4, fp, pc}

000031e4 <flatcc_json_parser_symbolic_int8>:
    31e4:	push	{r4, fp, lr}
    31e8:	add	fp, sp, #8
    31ec:	sub	sp, sp, #68	; 0x44
    31f0:	str	r0, [fp, #-48]	; 0xffffffd0
    31f4:	str	r1, [fp, #-52]	; 0xffffffcc
    31f8:	str	r2, [fp, #-56]	; 0xffffffc8
    31fc:	str	r3, [fp, #-60]	; 0xffffffc4
    3200:	mov	r3, #0
    3204:	strb	r3, [fp, #-25]	; 0xffffffe7
    3208:	mov	r3, #0
    320c:	str	r3, [fp, #-20]	; 0xffffffec
    3210:	ldr	r3, [fp, #4]
    3214:	mov	r2, #0
    3218:	strb	r2, [r3]
    321c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3220:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3224:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3228:	bl	1074 <flatcc_json_parser_constant_start>
    322c:	str	r0, [fp, #-52]	; 0xffffffcc
    3230:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3234:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3238:	cmp	r2, r3
    323c:	bne	3248 <flatcc_json_parser_symbolic_int8+0x64>
    3240:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3244:	b	33b4 <flatcc_json_parser_symbolic_int8+0x1d0>
    3248:	ldr	r3, [fp, #-60]	; 0xffffffc4
    324c:	str	r3, [fp, #-16]
    3250:	ldr	r3, [fp, #-16]
    3254:	ldr	r4, [r3]
    3258:	ldr	r3, [fp, #-52]	; 0xffffffcc
    325c:	str	r3, [fp, #-24]	; 0xffffffe8
    3260:	sub	r2, fp, #40	; 0x28
    3264:	sub	r3, fp, #44	; 0x2c
    3268:	str	r3, [sp, #4]
    326c:	sub	r3, fp, #36	; 0x24
    3270:	str	r3, [sp]
    3274:	mov	r3, r2
    3278:	ldr	r2, [fp, #-56]	; 0xffffffc8
    327c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3280:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3284:	blx	r4
    3288:	str	r0, [fp, #-52]	; 0xffffffcc
    328c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3290:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3294:	cmp	r2, r3
    3298:	bne	32a4 <flatcc_json_parser_symbolic_int8+0xc0>
    329c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    32a0:	b	33b4 <flatcc_json_parser_symbolic_int8+0x1d0>
    32a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    32a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32ac:	cmp	r2, r3
    32b0:	bne	32d0 <flatcc_json_parser_symbolic_int8+0xec>
    32b4:	ldr	r3, [fp, #-16]
    32b8:	add	r3, r3, #4
    32bc:	str	r3, [fp, #-16]
    32c0:	ldr	r3, [fp, #-16]
    32c4:	ldr	r3, [r3]
    32c8:	cmp	r3, #0
    32cc:	bne	3250 <flatcc_json_parser_symbolic_int8+0x6c>
    32d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    32d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    32d8:	cmp	r2, r3
    32dc:	bne	32fc <flatcc_json_parser_symbolic_int8+0x118>
    32e0:	mov	r3, #23
    32e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    32ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    32f0:	bl	0 <flatcc_json_parser_set_error>
    32f4:	mov	r3, r0
    32f8:	b	33b4 <flatcc_json_parser_symbolic_int8+0x1d0>
    32fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    3300:	add	r2, r3, #1
    3304:	str	r2, [fp, #-20]	; 0xffffffec
    3308:	cmp	r3, #0
    330c:	beq	333c <flatcc_json_parser_symbolic_int8+0x158>
    3310:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3314:	ldr	r3, [r3, #12]
    3318:	cmp	r3, #0
    331c:	beq	333c <flatcc_json_parser_symbolic_int8+0x158>
    3320:	mov	r3, #14
    3324:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3328:	ldr	r1, [fp, #-52]	; 0xffffffcc
    332c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3330:	bl	0 <flatcc_json_parser_set_error>
    3334:	mov	r3, r0
    3338:	b	33b4 <flatcc_json_parser_symbolic_int8+0x1d0>
    333c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3340:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3344:	sub	r1, fp, #25
    3348:	str	r1, [sp, #8]
    334c:	strd	r2, [sp]
    3350:	mov	r3, r0
    3354:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3358:	ldr	r1, [fp, #-52]	; 0xffffffcc
    335c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3360:	bl	1b98 <flatcc_json_parser_coerce_int8>
    3364:	mov	r2, r0
    3368:	ldr	r3, [fp, #-56]	; 0xffffffc8
    336c:	cmp	r2, r3
    3370:	bne	337c <flatcc_json_parser_symbolic_int8+0x198>
    3374:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3378:	b	33b4 <flatcc_json_parser_symbolic_int8+0x1d0>
    337c:	ldr	r3, [fp, #4]
    3380:	ldrsb	r3, [r3]
    3384:	uxtb	r2, r3
    3388:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    338c:	uxtb	r3, r3
    3390:	add	r3, r2, r3
    3394:	uxtb	r3, r3
    3398:	sxtb	r2, r3
    339c:	ldr	r3, [fp, #4]
    33a0:	strb	r2, [r3]
    33a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    33a8:	cmp	r3, #0
    33ac:	bne	3248 <flatcc_json_parser_symbolic_int8+0x64>
    33b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    33b4:	mov	r0, r3
    33b8:	sub	sp, fp, #8
    33bc:	pop	{r4, fp, pc}

000033c0 <flatcc_json_parser_symbolic_bool>:
    33c0:	push	{r4, fp, lr}
    33c4:	add	fp, sp, #8
    33c8:	sub	sp, sp, #68	; 0x44
    33cc:	str	r0, [fp, #-48]	; 0xffffffd0
    33d0:	str	r1, [fp, #-52]	; 0xffffffcc
    33d4:	str	r2, [fp, #-56]	; 0xffffffc8
    33d8:	str	r3, [fp, #-60]	; 0xffffffc4
    33dc:	mov	r3, #0
    33e0:	strb	r3, [fp, #-25]	; 0xffffffe7
    33e4:	mov	r3, #0
    33e8:	str	r3, [fp, #-20]	; 0xffffffec
    33ec:	ldr	r3, [fp, #4]
    33f0:	mov	r2, #0
    33f4:	strb	r2, [r3]
    33f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3400:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3404:	bl	1074 <flatcc_json_parser_constant_start>
    3408:	str	r0, [fp, #-52]	; 0xffffffcc
    340c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3410:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3414:	cmp	r2, r3
    3418:	bne	3424 <flatcc_json_parser_symbolic_bool+0x64>
    341c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3420:	b	3584 <flatcc_json_parser_symbolic_bool+0x1c4>
    3424:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3428:	str	r3, [fp, #-16]
    342c:	ldr	r3, [fp, #-16]
    3430:	ldr	r4, [r3]
    3434:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3438:	str	r3, [fp, #-24]	; 0xffffffe8
    343c:	sub	r2, fp, #40	; 0x28
    3440:	sub	r3, fp, #44	; 0x2c
    3444:	str	r3, [sp, #4]
    3448:	sub	r3, fp, #36	; 0x24
    344c:	str	r3, [sp]
    3450:	mov	r3, r2
    3454:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3458:	ldr	r1, [fp, #-24]	; 0xffffffe8
    345c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3460:	blx	r4
    3464:	str	r0, [fp, #-52]	; 0xffffffcc
    3468:	ldr	r2, [fp, #-52]	; 0xffffffcc
    346c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3470:	cmp	r2, r3
    3474:	bne	3480 <flatcc_json_parser_symbolic_bool+0xc0>
    3478:	ldr	r3, [fp, #-52]	; 0xffffffcc
    347c:	b	3584 <flatcc_json_parser_symbolic_bool+0x1c4>
    3480:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3484:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3488:	cmp	r2, r3
    348c:	bne	34ac <flatcc_json_parser_symbolic_bool+0xec>
    3490:	ldr	r3, [fp, #-16]
    3494:	add	r3, r3, #4
    3498:	str	r3, [fp, #-16]
    349c:	ldr	r3, [fp, #-16]
    34a0:	ldr	r3, [r3]
    34a4:	cmp	r3, #0
    34a8:	bne	342c <flatcc_json_parser_symbolic_bool+0x6c>
    34ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    34b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34b4:	cmp	r2, r3
    34b8:	bne	34d8 <flatcc_json_parser_symbolic_bool+0x118>
    34bc:	mov	r3, #23
    34c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    34c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    34c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    34cc:	bl	0 <flatcc_json_parser_set_error>
    34d0:	mov	r3, r0
    34d4:	b	3584 <flatcc_json_parser_symbolic_bool+0x1c4>
    34d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    34dc:	add	r2, r3, #1
    34e0:	str	r2, [fp, #-20]	; 0xffffffec
    34e4:	cmp	r3, #0
    34e8:	beq	3518 <flatcc_json_parser_symbolic_bool+0x158>
    34ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    34f0:	ldr	r3, [r3, #12]
    34f4:	cmp	r3, #0
    34f8:	beq	3518 <flatcc_json_parser_symbolic_bool+0x158>
    34fc:	mov	r3, #14
    3500:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3504:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3508:	ldr	r0, [fp, #-48]	; 0xffffffd0
    350c:	bl	0 <flatcc_json_parser_set_error>
    3510:	mov	r3, r0
    3514:	b	3584 <flatcc_json_parser_symbolic_bool+0x1c4>
    3518:	ldr	r0, [fp, #-40]	; 0xffffffd8
    351c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3520:	sub	r1, fp, #25
    3524:	str	r1, [sp, #8]
    3528:	strd	r2, [sp]
    352c:	mov	r3, r0
    3530:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3534:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3538:	ldr	r0, [fp, #-48]	; 0xffffffd0
    353c:	bl	1730 <flatcc_json_parser_coerce_bool>
    3540:	mov	r2, r0
    3544:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3548:	cmp	r2, r3
    354c:	bne	3558 <flatcc_json_parser_symbolic_bool+0x198>
    3550:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3554:	b	3584 <flatcc_json_parser_symbolic_bool+0x1c4>
    3558:	ldr	r3, [fp, #4]
    355c:	ldrb	r2, [r3]
    3560:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    3564:	add	r3, r2, r3
    3568:	uxtb	r2, r3
    356c:	ldr	r3, [fp, #4]
    3570:	strb	r2, [r3]
    3574:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3578:	cmp	r3, #0
    357c:	bne	3424 <flatcc_json_parser_symbolic_bool+0x64>
    3580:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3584:	mov	r0, r3
    3588:	sub	sp, fp, #8
    358c:	pop	{r4, fp, pc}

00003590 <flatcc_json_parser_symbolic_float>:
    3590:	push	{r4, fp, lr}
    3594:	add	fp, sp, #8
    3598:	sub	sp, sp, #68	; 0x44
    359c:	str	r0, [fp, #-48]	; 0xffffffd0
    35a0:	str	r1, [fp, #-52]	; 0xffffffcc
    35a4:	str	r2, [fp, #-56]	; 0xffffffc8
    35a8:	str	r3, [fp, #-60]	; 0xffffffc4
    35ac:	mov	r3, #0
    35b0:	str	r3, [fp, #-28]	; 0xffffffe4
    35b4:	mov	r3, #0
    35b8:	str	r3, [fp, #-20]	; 0xffffffec
    35bc:	ldr	r3, [fp, #4]
    35c0:	mov	r2, #0
    35c4:	str	r2, [r3]
    35c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    35cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    35d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    35d4:	bl	1074 <flatcc_json_parser_constant_start>
    35d8:	str	r0, [fp, #-52]	; 0xffffffcc
    35dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    35e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    35e4:	cmp	r2, r3
    35e8:	bne	35f4 <flatcc_json_parser_symbolic_float+0x64>
    35ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    35f0:	b	3750 <flatcc_json_parser_symbolic_float+0x1c0>
    35f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    35f8:	str	r3, [fp, #-16]
    35fc:	ldr	r3, [fp, #-16]
    3600:	ldr	r4, [r3]
    3604:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3608:	str	r3, [fp, #-24]	; 0xffffffe8
    360c:	sub	r2, fp, #40	; 0x28
    3610:	sub	r3, fp, #44	; 0x2c
    3614:	str	r3, [sp, #4]
    3618:	sub	r3, fp, #36	; 0x24
    361c:	str	r3, [sp]
    3620:	mov	r3, r2
    3624:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3628:	ldr	r1, [fp, #-24]	; 0xffffffe8
    362c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3630:	blx	r4
    3634:	str	r0, [fp, #-52]	; 0xffffffcc
    3638:	ldr	r2, [fp, #-52]	; 0xffffffcc
    363c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3640:	cmp	r2, r3
    3644:	bne	3650 <flatcc_json_parser_symbolic_float+0xc0>
    3648:	ldr	r3, [fp, #-52]	; 0xffffffcc
    364c:	b	3750 <flatcc_json_parser_symbolic_float+0x1c0>
    3650:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3654:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3658:	cmp	r2, r3
    365c:	bne	367c <flatcc_json_parser_symbolic_float+0xec>
    3660:	ldr	r3, [fp, #-16]
    3664:	add	r3, r3, #4
    3668:	str	r3, [fp, #-16]
    366c:	ldr	r3, [fp, #-16]
    3670:	ldr	r3, [r3]
    3674:	cmp	r3, #0
    3678:	bne	35fc <flatcc_json_parser_symbolic_float+0x6c>
    367c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3680:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3684:	cmp	r2, r3
    3688:	bne	36a8 <flatcc_json_parser_symbolic_float+0x118>
    368c:	mov	r3, #23
    3690:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3694:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3698:	ldr	r0, [fp, #-48]	; 0xffffffd0
    369c:	bl	0 <flatcc_json_parser_set_error>
    36a0:	mov	r3, r0
    36a4:	b	3750 <flatcc_json_parser_symbolic_float+0x1c0>
    36a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    36ac:	add	r2, r3, #1
    36b0:	str	r2, [fp, #-20]	; 0xffffffec
    36b4:	cmp	r3, #0
    36b8:	beq	36e8 <flatcc_json_parser_symbolic_float+0x158>
    36bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    36c0:	ldr	r3, [r3, #12]
    36c4:	cmp	r3, #0
    36c8:	beq	36e8 <flatcc_json_parser_symbolic_float+0x158>
    36cc:	mov	r3, #14
    36d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    36d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    36dc:	bl	0 <flatcc_json_parser_set_error>
    36e0:	mov	r3, r0
    36e4:	b	3750 <flatcc_json_parser_symbolic_float+0x1c0>
    36e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    36ec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    36f0:	sub	r1, fp, #28
    36f4:	str	r1, [sp, #8]
    36f8:	strd	r2, [sp]
    36fc:	mov	r3, r0
    3700:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3704:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3708:	ldr	r0, [fp, #-48]	; 0xffffffd0
    370c:	bl	1c50 <flatcc_json_parser_coerce_float>
    3710:	mov	r2, r0
    3714:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3718:	cmp	r2, r3
    371c:	bne	3728 <flatcc_json_parser_symbolic_float+0x198>
    3720:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3724:	b	3750 <flatcc_json_parser_symbolic_float+0x1c0>
    3728:	ldr	r3, [fp, #4]
    372c:	vldr	s14, [r3]
    3730:	vldr	s15, [fp, #-28]	; 0xffffffe4
    3734:	vadd.f32	s15, s14, s15
    3738:	ldr	r3, [fp, #4]
    373c:	vstr	s15, [r3]
    3740:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3744:	cmp	r3, #0
    3748:	bne	35f4 <flatcc_json_parser_symbolic_float+0x64>
    374c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3750:	mov	r0, r3
    3754:	sub	sp, fp, #8
    3758:	pop	{r4, fp, pc}

0000375c <flatcc_json_parser_symbolic_double>:
    375c:	push	{r4, fp, lr}
    3760:	add	fp, sp, #8
    3764:	sub	sp, sp, #76	; 0x4c
    3768:	str	r0, [fp, #-56]	; 0xffffffc8
    376c:	str	r1, [fp, #-60]	; 0xffffffc4
    3770:	str	r2, [fp, #-64]	; 0xffffffc0
    3774:	str	r3, [fp, #-68]	; 0xffffffbc
    3778:	mov	r2, #0
    377c:	mov	r3, #0
    3780:	strd	r2, [fp, #-36]	; 0xffffffdc
    3784:	mov	r3, #0
    3788:	str	r3, [fp, #-20]	; 0xffffffec
    378c:	ldr	r1, [fp, #4]
    3790:	mov	r2, #0
    3794:	mov	r3, #0
    3798:	strd	r2, [r1]
    379c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    37a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    37a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    37a8:	bl	1074 <flatcc_json_parser_constant_start>
    37ac:	str	r0, [fp, #-60]	; 0xffffffc4
    37b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    37b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    37b8:	cmp	r2, r3
    37bc:	bne	37c8 <flatcc_json_parser_symbolic_double+0x6c>
    37c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    37c4:	b	3924 <flatcc_json_parser_symbolic_double+0x1c8>
    37c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    37cc:	str	r3, [fp, #-16]
    37d0:	ldr	r3, [fp, #-16]
    37d4:	ldr	r4, [r3]
    37d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    37dc:	str	r3, [fp, #-24]	; 0xffffffe8
    37e0:	sub	r2, fp, #48	; 0x30
    37e4:	sub	r3, fp, #52	; 0x34
    37e8:	str	r3, [sp, #4]
    37ec:	sub	r3, fp, #44	; 0x2c
    37f0:	str	r3, [sp]
    37f4:	mov	r3, r2
    37f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    37fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3800:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3804:	blx	r4
    3808:	str	r0, [fp, #-60]	; 0xffffffc4
    380c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    3810:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3814:	cmp	r2, r3
    3818:	bne	3824 <flatcc_json_parser_symbolic_double+0xc8>
    381c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3820:	b	3924 <flatcc_json_parser_symbolic_double+0x1c8>
    3824:	ldr	r2, [fp, #-60]	; 0xffffffc4
    3828:	ldr	r3, [fp, #-24]	; 0xffffffe8
    382c:	cmp	r2, r3
    3830:	bne	3850 <flatcc_json_parser_symbolic_double+0xf4>
    3834:	ldr	r3, [fp, #-16]
    3838:	add	r3, r3, #4
    383c:	str	r3, [fp, #-16]
    3840:	ldr	r3, [fp, #-16]
    3844:	ldr	r3, [r3]
    3848:	cmp	r3, #0
    384c:	bne	37d0 <flatcc_json_parser_symbolic_double+0x74>
    3850:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3854:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3858:	cmp	r2, r3
    385c:	bne	387c <flatcc_json_parser_symbolic_double+0x120>
    3860:	mov	r3, #23
    3864:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3868:	ldr	r1, [fp, #-60]	; 0xffffffc4
    386c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3870:	bl	0 <flatcc_json_parser_set_error>
    3874:	mov	r3, r0
    3878:	b	3924 <flatcc_json_parser_symbolic_double+0x1c8>
    387c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3880:	add	r2, r3, #1
    3884:	str	r2, [fp, #-20]	; 0xffffffec
    3888:	cmp	r3, #0
    388c:	beq	38bc <flatcc_json_parser_symbolic_double+0x160>
    3890:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3894:	ldr	r3, [r3, #12]
    3898:	cmp	r3, #0
    389c:	beq	38bc <flatcc_json_parser_symbolic_double+0x160>
    38a0:	mov	r3, #14
    38a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    38a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    38b0:	bl	0 <flatcc_json_parser_set_error>
    38b4:	mov	r3, r0
    38b8:	b	3924 <flatcc_json_parser_symbolic_double+0x1c8>
    38bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    38c0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    38c4:	sub	r1, fp, #36	; 0x24
    38c8:	str	r1, [sp, #8]
    38cc:	strd	r2, [sp]
    38d0:	mov	r3, r0
    38d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    38d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    38e0:	bl	1cb0 <flatcc_json_parser_coerce_double>
    38e4:	mov	r2, r0
    38e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    38ec:	cmp	r2, r3
    38f0:	bne	38fc <flatcc_json_parser_symbolic_double+0x1a0>
    38f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    38f8:	b	3924 <flatcc_json_parser_symbolic_double+0x1c8>
    38fc:	ldr	r3, [fp, #4]
    3900:	vldr	d6, [r3]
    3904:	vldr	d7, [fp, #-36]	; 0xffffffdc
    3908:	vadd.f64	d7, d6, d7
    390c:	ldr	r3, [fp, #4]
    3910:	vstr	d7, [r3]
    3914:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3918:	cmp	r3, #0
    391c:	bne	37c8 <flatcc_json_parser_symbolic_double+0x6c>
    3920:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3924:	mov	r0, r3
    3928:	sub	sp, fp, #8
    392c:	pop	{r4, fp, pc}

00003930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    3930:	push	{fp, lr}
    3934:	add	fp, sp, #4
    3938:	sub	sp, sp, #48	; 0x30
    393c:	str	r0, [fp, #-32]	; 0xffffffe0
    3940:	str	r1, [fp, #-36]	; 0xffffffdc
    3944:	str	r2, [fp, #-40]	; 0xffffffd8
    3948:	str	r3, [fp, #-44]	; 0xffffffd4
    394c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3950:	str	r3, [fp, #-8]
    3954:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3958:	ldr	r0, [fp, #-36]	; 0xffffffdc
    395c:	bl	fa8 <flatcc_json_parser_symbol_part>
    3960:	strd	r0, [fp, #-20]	; 0xffffffec
    3964:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3968:	mov	r0, #0
    396c:	mvn	r1, #255	; 0xff
    3970:	and	r2, r2, r0
    3974:	and	r3, r3, r1
    3978:	add	r1, pc, #336	; 0x150
    397c:	ldrd	r0, [r1]
    3980:	cmp	r3, r1
    3984:	cmpeq	r2, r0
    3988:	bne	39e4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xb4>
    398c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3990:	str	r3, [fp, #-24]	; 0xffffffe8
    3994:	ldr	r3, [fp, #8]
    3998:	str	r3, [sp]
    399c:	mov	r3, #3
    39a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    39a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    39a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    39ac:	bl	0 <flatcc_json_parser_match_constant>
    39b0:	str	r0, [fp, #-36]	; 0xffffffdc
    39b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    39b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39bc:	cmp	r2, r3
    39c0:	beq	39ec <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xbc>
    39c4:	ldr	r1, [fp, #4]
    39c8:	mov	r2, #17
    39cc:	mov	r3, #0
    39d0:	strd	r2, [r1]
    39d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    39d8:	mov	r2, #0
    39dc:	str	r2, [r3]
    39e0:	b	3abc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    39e4:	nop			; (mov r0, r0)
    39e8:	b	39f0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc0>
    39ec:	nop			; (mov r0, r0)
    39f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    39f4:	add	r1, pc, #220	; 0xdc
    39f8:	ldrd	r0, [r1]
    39fc:	cmp	r3, r1
    3a00:	cmpeq	r2, r0
    3a04:	bne	3ab4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x184>
    3a08:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3a0c:	add	r3, r3, #8
    3a10:	str	r3, [fp, #-36]	; 0xffffffdc
    3a14:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3a18:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3a1c:	bl	fa8 <flatcc_json_parser_symbol_part>
    3a20:	strd	r0, [fp, #-20]	; 0xffffffec
    3a24:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3a28:	mov	r0, #0
    3a2c:	ldr	r1, [pc, #172]	; 3ae0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b0>
    3a30:	and	r2, r2, r0
    3a34:	and	r3, r3, r1
    3a38:	mov	r0, #0
    3a3c:	ldr	r1, [pc, #160]	; 3ae4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b4>
    3a40:	cmp	r3, r1
    3a44:	cmpeq	r2, r0
    3a48:	bne	3aac <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x17c>
    3a4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3a50:	str	r3, [fp, #-24]	; 0xffffffe8
    3a54:	ldr	r3, [fp, #8]
    3a58:	str	r3, [sp]
    3a5c:	mov	r3, #2
    3a60:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3a6c:	bl	0 <flatcc_json_parser_match_constant>
    3a70:	str	r0, [fp, #-36]	; 0xffffffdc
    3a74:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3a78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a7c:	cmp	r2, r3
    3a80:	beq	3aa4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x174>
    3a84:	ldr	r1, [fp, #4]
    3a88:	mov	r2, #0
    3a8c:	mov	r3, #0
    3a90:	strd	r2, [r1]
    3a94:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3a98:	mov	r2, #0
    3a9c:	str	r2, [r3]
    3aa0:	b	3abc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    3aa4:	ldr	r3, [fp, #-8]
    3aa8:	b	3ac0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    3aac:	ldr	r3, [fp, #-8]
    3ab0:	b	3ac0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    3ab4:	ldr	r3, [fp, #-8]
    3ab8:	b	3ac0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    3abc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3ac0:	mov	r0, r3
    3ac4:	sub	sp, fp, #4
    3ac8:	pop	{fp, pc}
    3acc:	nop			; (mov r0, r0)
    3ad0:	.word	0x00000000
    3ad4:	.word	0x466f6f00
    3ad8:	.word	0x75646556
    3adc:	.word	0x496e636c
    3ae0:	.word	0xffff0000
    3ae4:	.word	0x616c0000

00003ae8 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline>:
    3ae8:	push	{fp, lr}
    3aec:	add	fp, sp, #4
    3af0:	sub	sp, sp, #24
    3af4:	str	r0, [fp, #-16]
    3af8:	str	r1, [fp, #-20]	; 0xffffffec
    3afc:	str	r2, [fp, #-24]	; 0xffffffe8
    3b00:	str	r3, [fp, #-28]	; 0xffffffe4
    3b04:	sub	r3, fp, #8
    3b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b10:	ldr	r0, [fp, #-16]
    3b14:	bl	10d4 <flatcc_json_parser_object_start>
    3b18:	str	r0, [fp, #-20]	; 0xffffffec
    3b1c:	b	3b4c <MyGame_OtherNameSpace_Unused_parse_json_struct_inline+0x64>
    3b20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b24:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b28:	ldr	r0, [fp, #-16]
    3b2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3b30:	str	r0, [fp, #-20]	; 0xffffffec
    3b34:	sub	r3, fp, #8
    3b38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b40:	ldr	r0, [fp, #-16]
    3b44:	bl	11bc <flatcc_json_parser_object_end>
    3b48:	str	r0, [fp, #-20]	; 0xffffffec
    3b4c:	ldr	r3, [fp, #-8]
    3b50:	cmp	r3, #0
    3b54:	bne	3b20 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline+0x38>
    3b58:	ldr	r3, [fp, #-20]	; 0xffffffec
    3b5c:	mov	r0, r3
    3b60:	sub	sp, fp, #4
    3b64:	pop	{fp, pc}

00003b68 <MyGame_OtherNameSpace_Unused_parse_json_struct>:
    3b68:	push	{fp, lr}
    3b6c:	add	fp, sp, #4
    3b70:	sub	sp, sp, #24
    3b74:	str	r0, [fp, #-16]
    3b78:	str	r1, [fp, #-20]	; 0xffffffec
    3b7c:	str	r2, [fp, #-24]	; 0xffffffe8
    3b80:	str	r3, [fp, #-28]	; 0xffffffe4
    3b84:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3b88:	mov	r2, #0
    3b8c:	str	r2, [r3]
    3b90:	ldr	r3, [fp, #-16]
    3b94:	ldr	r3, [r3]
    3b98:	mov	r2, #1
    3b9c:	mov	r1, #0
    3ba0:	mov	r0, r3
    3ba4:	bl	0 <flatcc_builder_start_struct>
    3ba8:	str	r0, [fp, #-8]
    3bac:	ldr	r3, [fp, #-8]
    3bb0:	cmp	r3, #0
    3bb4:	beq	3c14 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xac>
    3bb8:	ldr	r3, [fp, #-8]
    3bbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3bc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3bc4:	ldr	r0, [fp, #-16]
    3bc8:	bl	3ae8 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline>
    3bcc:	str	r0, [fp, #-20]	; 0xffffffec
    3bd0:	ldr	r2, [fp, #-20]	; 0xffffffec
    3bd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3bd8:	cmp	r2, r3
    3bdc:	beq	3c18 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb0>
    3be0:	ldr	r3, [fp, #-16]
    3be4:	ldr	r3, [r3]
    3be8:	mov	r0, r3
    3bec:	bl	0 <flatcc_builder_end_struct>
    3bf0:	mov	r2, r0
    3bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3bf8:	str	r2, [r3]
    3bfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3c00:	ldr	r3, [r3]
    3c04:	cmp	r3, #0
    3c08:	beq	3c18 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb0>
    3c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3c10:	b	3c30 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xc8>
    3c14:	nop			; (mov r0, r0)
    3c18:	mov	r3, #33	; 0x21
    3c1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3c20:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c24:	ldr	r0, [fp, #-16]
    3c28:	bl	0 <flatcc_json_parser_set_error>
    3c2c:	mov	r3, r0
    3c30:	mov	r0, r3
    3c34:	sub	sp, fp, #4
    3c38:	pop	{fp, pc}

00003c3c <include_test2_local_json_parser_enum>:
    3c3c:	push	{fp}		; (str fp, [sp, #-4]!)
    3c40:	add	fp, sp, #0
    3c44:	sub	sp, sp, #20
    3c48:	str	r0, [fp, #-8]
    3c4c:	str	r1, [fp, #-12]
    3c50:	str	r2, [fp, #-16]
    3c54:	str	r3, [fp, #-20]	; 0xffffffec
    3c58:	ldr	r3, [fp, #-12]
    3c5c:	mov	r0, r3
    3c60:	add	sp, fp, #0
    3c64:	pop	{fp}		; (ldr fp, [sp], #4)
    3c68:	bx	lr

00003c6c <include_test2_local_MyGame_Example_json_parser_enum>:
    3c6c:	push	{fp}		; (str fp, [sp, #-4]!)
    3c70:	add	fp, sp, #0
    3c74:	sub	sp, sp, #20
    3c78:	str	r0, [fp, #-8]
    3c7c:	str	r1, [fp, #-12]
    3c80:	str	r2, [fp, #-16]
    3c84:	str	r3, [fp, #-20]	; 0xffffffec
    3c88:	ldr	r3, [fp, #-12]
    3c8c:	mov	r0, r3
    3c90:	add	sp, fp, #0
    3c94:	pop	{fp}		; (ldr fp, [sp], #4)
    3c98:	bx	lr

00003c9c <include_test2_local_MyGame_Example2_json_parser_enum>:
    3c9c:	push	{fp}		; (str fp, [sp, #-4]!)
    3ca0:	add	fp, sp, #0
    3ca4:	sub	sp, sp, #20
    3ca8:	str	r0, [fp, #-8]
    3cac:	str	r1, [fp, #-12]
    3cb0:	str	r2, [fp, #-16]
    3cb4:	str	r3, [fp, #-20]	; 0xffffffec
    3cb8:	ldr	r3, [fp, #-12]
    3cbc:	mov	r0, r3
    3cc0:	add	sp, fp, #0
    3cc4:	pop	{fp}		; (ldr fp, [sp], #4)
    3cc8:	bx	lr

00003ccc <include_test2_local_MyGame_json_parser_enum>:
    3ccc:	push	{fp}		; (str fp, [sp, #-4]!)
    3cd0:	add	fp, sp, #0
    3cd4:	sub	sp, sp, #20
    3cd8:	str	r0, [fp, #-8]
    3cdc:	str	r1, [fp, #-12]
    3ce0:	str	r2, [fp, #-16]
    3ce4:	str	r3, [fp, #-20]	; 0xffffffec
    3ce8:	ldr	r3, [fp, #-12]
    3cec:	mov	r0, r3
    3cf0:	add	sp, fp, #0
    3cf4:	pop	{fp}		; (ldr fp, [sp], #4)
    3cf8:	bx	lr

00003cfc <include_test2_local_Fantasy_json_parser_enum>:
    3cfc:	push	{fp}		; (str fp, [sp, #-4]!)
    3d00:	add	fp, sp, #0
    3d04:	sub	sp, sp, #20
    3d08:	str	r0, [fp, #-8]
    3d0c:	str	r1, [fp, #-12]
    3d10:	str	r2, [fp, #-16]
    3d14:	str	r3, [fp, #-20]	; 0xffffffec
    3d18:	ldr	r3, [fp, #-12]
    3d1c:	mov	r0, r3
    3d20:	add	sp, fp, #0
    3d24:	pop	{fp}		; (ldr fp, [sp], #4)
    3d28:	bx	lr

00003d2c <include_test2_local_MyGame_OtherNameSpace_json_parser_enum>:
    3d2c:	push	{fp, lr}
    3d30:	add	fp, sp, #4
    3d34:	sub	sp, sp, #48	; 0x30
    3d38:	str	r0, [fp, #-32]	; 0xffffffe0
    3d3c:	str	r1, [fp, #-36]	; 0xffffffdc
    3d40:	str	r2, [fp, #-40]	; 0xffffffd8
    3d44:	str	r3, [fp, #-44]	; 0xffffffd4
    3d48:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3d4c:	str	r3, [fp, #-8]
    3d50:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3d58:	bl	fa8 <flatcc_json_parser_symbol_part>
    3d5c:	strd	r0, [fp, #-20]	; 0xffffffec
    3d60:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3d64:	add	r1, pc, #212	; 0xd4
    3d68:	ldrd	r0, [r1]
    3d6c:	cmp	r3, r1
    3d70:	cmpeq	r2, r0
    3d74:	bne	3e2c <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
    3d78:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3d7c:	add	r3, r3, #8
    3d80:	str	r3, [fp, #-36]	; 0xffffffdc
    3d84:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3d88:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3d8c:	bl	fa8 <flatcc_json_parser_symbol_part>
    3d90:	strd	r0, [fp, #-20]	; 0xffffffec
    3d94:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3d98:	mov	r0, #0
    3d9c:	mvn	r1, #255	; 0xff
    3da0:	and	r2, r2, r0
    3da4:	and	r3, r3, r1
    3da8:	add	r1, pc, #152	; 0x98
    3dac:	ldrd	r0, [r1]
    3db0:	cmp	r3, r1
    3db4:	cmpeq	r2, r0
    3db8:	bne	3e24 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
    3dbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3dc0:	str	r3, [fp, #-24]	; 0xffffffe8
    3dc4:	mov	r3, #3
    3dc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3dd4:	bl	ff0 <flatcc_json_parser_match_scope>
    3dd8:	str	r0, [fp, #-36]	; 0xffffffdc
    3ddc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3de4:	cmp	r2, r3
    3de8:	beq	3e1c <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0xf0>
    3dec:	ldr	r3, [fp, #8]
    3df0:	str	r3, [sp, #4]
    3df4:	ldr	r3, [fp, #4]
    3df8:	str	r3, [sp]
    3dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3e00:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3e04:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3e0c:	bl	3930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3e10:	str	r0, [fp, #-36]	; 0xffffffdc
    3e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3e18:	b	3e30 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    3e1c:	ldr	r3, [fp, #-8]
    3e20:	b	3e30 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    3e24:	ldr	r3, [fp, #-8]
    3e28:	b	3e30 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    3e2c:	ldr	r3, [fp, #-8]
    3e30:	mov	r0, r3
    3e34:	sub	sp, fp, #4
    3e38:	pop	{fp, pc}
    3e3c:	nop			; (mov r0, r0)
    3e40:	.word	0x496e636c
    3e44:	.word	0x46726f6d
    3e48:	.word	0x00000000
    3e4c:	.word	0x75646500

00003e50 <include_test2_global_json_parser_enum>:
    3e50:	push	{fp, lr}
    3e54:	add	fp, sp, #4
    3e58:	sub	sp, sp, #48	; 0x30
    3e5c:	str	r0, [fp, #-32]	; 0xffffffe0
    3e60:	str	r1, [fp, #-36]	; 0xffffffdc
    3e64:	str	r2, [fp, #-40]	; 0xffffffd8
    3e68:	str	r3, [fp, #-44]	; 0xffffffd4
    3e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3e70:	str	r3, [fp, #-8]
    3e74:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3e78:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3e7c:	bl	fa8 <flatcc_json_parser_symbol_part>
    3e80:	strd	r0, [fp, #-20]	; 0xffffffec
    3e84:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3e88:	add	r1, pc, #384	; 0x180
    3e8c:	ldrd	r0, [r1]
    3e90:	cmp	r3, r1
    3e94:	cmpeq	r2, r0
    3e98:	bne	3ffc <include_test2_global_json_parser_enum+0x1ac>
    3e9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3ea0:	add	r3, r3, #8
    3ea4:	str	r3, [fp, #-36]	; 0xffffffdc
    3ea8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3eac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3eb0:	bl	fa8 <flatcc_json_parser_symbol_part>
    3eb4:	strd	r0, [fp, #-20]	; 0xffffffec
    3eb8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3ebc:	add	r1, pc, #340	; 0x154
    3ec0:	ldrd	r0, [r1]
    3ec4:	cmp	r3, r1
    3ec8:	cmpeq	r2, r0
    3ecc:	bne	3ff4 <include_test2_global_json_parser_enum+0x1a4>
    3ed0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3ed4:	add	r3, r3, #8
    3ed8:	str	r3, [fp, #-36]	; 0xffffffdc
    3edc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3ee0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3ee4:	bl	fa8 <flatcc_json_parser_symbol_part>
    3ee8:	strd	r0, [fp, #-20]	; 0xffffffec
    3eec:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3ef0:	add	r1, pc, #296	; 0x128
    3ef4:	ldrd	r0, [r1]
    3ef8:	cmp	r3, r1
    3efc:	cmpeq	r2, r0
    3f00:	bne	3fec <include_test2_global_json_parser_enum+0x19c>
    3f04:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3f08:	add	r3, r3, #8
    3f0c:	str	r3, [fp, #-36]	; 0xffffffdc
    3f10:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3f14:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3f18:	bl	fa8 <flatcc_json_parser_symbol_part>
    3f1c:	strd	r0, [fp, #-20]	; 0xffffffec
    3f20:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3f24:	add	r1, pc, #252	; 0xfc
    3f28:	ldrd	r0, [r1]
    3f2c:	cmp	r3, r1
    3f30:	cmpeq	r2, r0
    3f34:	bne	3fe4 <include_test2_global_json_parser_enum+0x194>
    3f38:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3f3c:	add	r3, r3, #8
    3f40:	str	r3, [fp, #-36]	; 0xffffffdc
    3f44:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3f48:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3f4c:	bl	fa8 <flatcc_json_parser_symbol_part>
    3f50:	strd	r0, [fp, #-20]	; 0xffffffec
    3f54:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3f58:	mov	r0, #0
    3f5c:	mov	r1, #-16777216	; 0xff000000
    3f60:	and	r2, r2, r0
    3f64:	and	r3, r3, r1
    3f68:	cmp	r3, #1694498816	; 0x65000000
    3f6c:	cmpeq	r2, #0
    3f70:	bne	3fdc <include_test2_global_json_parser_enum+0x18c>
    3f74:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3f78:	str	r3, [fp, #-24]	; 0xffffffe8
    3f7c:	mov	r3, #1
    3f80:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3f8c:	bl	ff0 <flatcc_json_parser_match_scope>
    3f90:	str	r0, [fp, #-36]	; 0xffffffdc
    3f94:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3f9c:	cmp	r2, r3
    3fa0:	beq	3fd4 <include_test2_global_json_parser_enum+0x184>
    3fa4:	ldr	r3, [fp, #8]
    3fa8:	str	r3, [sp, #4]
    3fac:	ldr	r3, [fp, #4]
    3fb0:	str	r3, [sp]
    3fb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3fb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3fbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3fc4:	bl	3930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3fc8:	str	r0, [fp, #-36]	; 0xffffffdc
    3fcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3fd0:	b	4000 <include_test2_global_json_parser_enum+0x1b0>
    3fd4:	ldr	r3, [fp, #-8]
    3fd8:	b	4000 <include_test2_global_json_parser_enum+0x1b0>
    3fdc:	ldr	r3, [fp, #-8]
    3fe0:	b	4000 <include_test2_global_json_parser_enum+0x1b0>
    3fe4:	ldr	r3, [fp, #-8]
    3fe8:	b	4000 <include_test2_global_json_parser_enum+0x1b0>
    3fec:	ldr	r3, [fp, #-8]
    3ff0:	b	4000 <include_test2_global_json_parser_enum+0x1b0>
    3ff4:	ldr	r3, [fp, #-8]
    3ff8:	b	4000 <include_test2_global_json_parser_enum+0x1b0>
    3ffc:	ldr	r3, [fp, #-8]
    4000:	mov	r0, r3
    4004:	sub	sp, fp, #4
    4008:	pop	{fp, pc}
    400c:	nop			; (mov r0, r0)
    4010:	.word	0x6d652e4f
    4014:	.word	0x4d794761
    4018:	.word	0x4e616d65
    401c:	.word	0x74686572
    4020:	.word	0x652e4672
    4024:	.word	0x53706163
    4028:	.word	0x636c7564
    402c:	.word	0x6f6d496e

00004030 <include_test1_local_json_parser_enum>:
    4030:	push	{fp}		; (str fp, [sp, #-4]!)
    4034:	add	fp, sp, #0
    4038:	sub	sp, sp, #20
    403c:	str	r0, [fp, #-8]
    4040:	str	r1, [fp, #-12]
    4044:	str	r2, [fp, #-16]
    4048:	str	r3, [fp, #-20]	; 0xffffffec
    404c:	ldr	r3, [fp, #-12]
    4050:	mov	r0, r3
    4054:	add	sp, fp, #0
    4058:	pop	{fp}		; (ldr fp, [sp], #4)
    405c:	bx	lr

00004060 <include_test1_local_MyGame_Example_json_parser_enum>:
    4060:	push	{fp}		; (str fp, [sp, #-4]!)
    4064:	add	fp, sp, #0
    4068:	sub	sp, sp, #20
    406c:	str	r0, [fp, #-8]
    4070:	str	r1, [fp, #-12]
    4074:	str	r2, [fp, #-16]
    4078:	str	r3, [fp, #-20]	; 0xffffffec
    407c:	ldr	r3, [fp, #-12]
    4080:	mov	r0, r3
    4084:	add	sp, fp, #0
    4088:	pop	{fp}		; (ldr fp, [sp], #4)
    408c:	bx	lr

00004090 <include_test1_local_MyGame_Example2_json_parser_enum>:
    4090:	push	{fp}		; (str fp, [sp, #-4]!)
    4094:	add	fp, sp, #0
    4098:	sub	sp, sp, #20
    409c:	str	r0, [fp, #-8]
    40a0:	str	r1, [fp, #-12]
    40a4:	str	r2, [fp, #-16]
    40a8:	str	r3, [fp, #-20]	; 0xffffffec
    40ac:	ldr	r3, [fp, #-12]
    40b0:	mov	r0, r3
    40b4:	add	sp, fp, #0
    40b8:	pop	{fp}		; (ldr fp, [sp], #4)
    40bc:	bx	lr

000040c0 <include_test1_local_MyGame_json_parser_enum>:
    40c0:	push	{fp}		; (str fp, [sp, #-4]!)
    40c4:	add	fp, sp, #0
    40c8:	sub	sp, sp, #20
    40cc:	str	r0, [fp, #-8]
    40d0:	str	r1, [fp, #-12]
    40d4:	str	r2, [fp, #-16]
    40d8:	str	r3, [fp, #-20]	; 0xffffffec
    40dc:	ldr	r3, [fp, #-12]
    40e0:	mov	r0, r3
    40e4:	add	sp, fp, #0
    40e8:	pop	{fp}		; (ldr fp, [sp], #4)
    40ec:	bx	lr

000040f0 <include_test1_local_Fantasy_json_parser_enum>:
    40f0:	push	{fp}		; (str fp, [sp, #-4]!)
    40f4:	add	fp, sp, #0
    40f8:	sub	sp, sp, #20
    40fc:	str	r0, [fp, #-8]
    4100:	str	r1, [fp, #-12]
    4104:	str	r2, [fp, #-16]
    4108:	str	r3, [fp, #-20]	; 0xffffffec
    410c:	ldr	r3, [fp, #-12]
    4110:	mov	r0, r3
    4114:	add	sp, fp, #0
    4118:	pop	{fp}		; (ldr fp, [sp], #4)
    411c:	bx	lr

00004120 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum>:
    4120:	push	{fp, lr}
    4124:	add	fp, sp, #4
    4128:	sub	sp, sp, #48	; 0x30
    412c:	str	r0, [fp, #-32]	; 0xffffffe0
    4130:	str	r1, [fp, #-36]	; 0xffffffdc
    4134:	str	r2, [fp, #-40]	; 0xffffffd8
    4138:	str	r3, [fp, #-44]	; 0xffffffd4
    413c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4140:	str	r3, [fp, #-8]
    4144:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4148:	ldr	r0, [fp, #-36]	; 0xffffffdc
    414c:	bl	fa8 <flatcc_json_parser_symbol_part>
    4150:	strd	r0, [fp, #-20]	; 0xffffffec
    4154:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4158:	add	r1, pc, #208	; 0xd0
    415c:	ldrd	r0, [r1]
    4160:	cmp	r3, r1
    4164:	cmpeq	r2, r0
    4168:	bne	4220 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
    416c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4170:	add	r3, r3, #8
    4174:	str	r3, [fp, #-36]	; 0xffffffdc
    4178:	ldr	r1, [fp, #-40]	; 0xffffffd8
    417c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4180:	bl	fa8 <flatcc_json_parser_symbol_part>
    4184:	strd	r0, [fp, #-20]	; 0xffffffec
    4188:	ldrd	r2, [fp, #-20]	; 0xffffffec
    418c:	mov	r0, #0
    4190:	mvn	r1, #255	; 0xff
    4194:	and	r2, r2, r0
    4198:	and	r3, r3, r1
    419c:	add	r1, pc, #148	; 0x94
    41a0:	ldrd	r0, [r1]
    41a4:	cmp	r3, r1
    41a8:	cmpeq	r2, r0
    41ac:	bne	4218 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
    41b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    41b4:	str	r3, [fp, #-24]	; 0xffffffe8
    41b8:	mov	r3, #3
    41bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    41c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    41c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    41c8:	bl	ff0 <flatcc_json_parser_match_scope>
    41cc:	str	r0, [fp, #-36]	; 0xffffffdc
    41d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    41d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    41d8:	cmp	r2, r3
    41dc:	beq	4210 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0xf0>
    41e0:	ldr	r3, [fp, #8]
    41e4:	str	r3, [sp, #4]
    41e8:	ldr	r3, [fp, #4]
    41ec:	str	r3, [sp]
    41f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    41f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    41f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    41fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4200:	bl	3930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    4204:	str	r0, [fp, #-36]	; 0xffffffdc
    4208:	ldr	r3, [fp, #-36]	; 0xffffffdc
    420c:	b	4224 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    4210:	ldr	r3, [fp, #-8]
    4214:	b	4224 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    4218:	ldr	r3, [fp, #-8]
    421c:	b	4224 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    4220:	ldr	r3, [fp, #-8]
    4224:	mov	r0, r3
    4228:	sub	sp, fp, #4
    422c:	pop	{fp, pc}
    4230:	.word	0x496e636c
    4234:	.word	0x46726f6d
    4238:	.word	0x00000000
    423c:	.word	0x75646500

00004240 <include_test1_global_json_parser_enum>:
    4240:	push	{fp, lr}
    4244:	add	fp, sp, #4
    4248:	sub	sp, sp, #48	; 0x30
    424c:	str	r0, [fp, #-32]	; 0xffffffe0
    4250:	str	r1, [fp, #-36]	; 0xffffffdc
    4254:	str	r2, [fp, #-40]	; 0xffffffd8
    4258:	str	r3, [fp, #-44]	; 0xffffffd4
    425c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4260:	str	r3, [fp, #-8]
    4264:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4268:	ldr	r0, [fp, #-36]	; 0xffffffdc
    426c:	bl	fa8 <flatcc_json_parser_symbol_part>
    4270:	strd	r0, [fp, #-20]	; 0xffffffec
    4274:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4278:	add	r1, pc, #384	; 0x180
    427c:	ldrd	r0, [r1]
    4280:	cmp	r3, r1
    4284:	cmpeq	r2, r0
    4288:	bne	43ec <include_test1_global_json_parser_enum+0x1ac>
    428c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4290:	add	r3, r3, #8
    4294:	str	r3, [fp, #-36]	; 0xffffffdc
    4298:	ldr	r1, [fp, #-40]	; 0xffffffd8
    429c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    42a0:	bl	fa8 <flatcc_json_parser_symbol_part>
    42a4:	strd	r0, [fp, #-20]	; 0xffffffec
    42a8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    42ac:	add	r1, pc, #340	; 0x154
    42b0:	ldrd	r0, [r1]
    42b4:	cmp	r3, r1
    42b8:	cmpeq	r2, r0
    42bc:	bne	43e4 <include_test1_global_json_parser_enum+0x1a4>
    42c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    42c4:	add	r3, r3, #8
    42c8:	str	r3, [fp, #-36]	; 0xffffffdc
    42cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    42d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    42d4:	bl	fa8 <flatcc_json_parser_symbol_part>
    42d8:	strd	r0, [fp, #-20]	; 0xffffffec
    42dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    42e0:	add	r1, pc, #296	; 0x128
    42e4:	ldrd	r0, [r1]
    42e8:	cmp	r3, r1
    42ec:	cmpeq	r2, r0
    42f0:	bne	43dc <include_test1_global_json_parser_enum+0x19c>
    42f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    42f8:	add	r3, r3, #8
    42fc:	str	r3, [fp, #-36]	; 0xffffffdc
    4300:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4304:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4308:	bl	fa8 <flatcc_json_parser_symbol_part>
    430c:	strd	r0, [fp, #-20]	; 0xffffffec
    4310:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4314:	add	r1, pc, #252	; 0xfc
    4318:	ldrd	r0, [r1]
    431c:	cmp	r3, r1
    4320:	cmpeq	r2, r0
    4324:	bne	43d4 <include_test1_global_json_parser_enum+0x194>
    4328:	ldr	r3, [fp, #-36]	; 0xffffffdc
    432c:	add	r3, r3, #8
    4330:	str	r3, [fp, #-36]	; 0xffffffdc
    4334:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4338:	ldr	r0, [fp, #-36]	; 0xffffffdc
    433c:	bl	fa8 <flatcc_json_parser_symbol_part>
    4340:	strd	r0, [fp, #-20]	; 0xffffffec
    4344:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4348:	mov	r0, #0
    434c:	mov	r1, #-16777216	; 0xff000000
    4350:	and	r2, r2, r0
    4354:	and	r3, r3, r1
    4358:	cmp	r3, #1694498816	; 0x65000000
    435c:	cmpeq	r2, #0
    4360:	bne	43cc <include_test1_global_json_parser_enum+0x18c>
    4364:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4368:	str	r3, [fp, #-24]	; 0xffffffe8
    436c:	mov	r3, #1
    4370:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4374:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4378:	ldr	r0, [fp, #-32]	; 0xffffffe0
    437c:	bl	ff0 <flatcc_json_parser_match_scope>
    4380:	str	r0, [fp, #-36]	; 0xffffffdc
    4384:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4388:	ldr	r3, [fp, #-24]	; 0xffffffe8
    438c:	cmp	r2, r3
    4390:	beq	43c4 <include_test1_global_json_parser_enum+0x184>
    4394:	ldr	r3, [fp, #8]
    4398:	str	r3, [sp, #4]
    439c:	ldr	r3, [fp, #4]
    43a0:	str	r3, [sp]
    43a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    43a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    43ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    43b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    43b4:	bl	3930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    43b8:	str	r0, [fp, #-36]	; 0xffffffdc
    43bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    43c0:	b	43f0 <include_test1_global_json_parser_enum+0x1b0>
    43c4:	ldr	r3, [fp, #-8]
    43c8:	b	43f0 <include_test1_global_json_parser_enum+0x1b0>
    43cc:	ldr	r3, [fp, #-8]
    43d0:	b	43f0 <include_test1_global_json_parser_enum+0x1b0>
    43d4:	ldr	r3, [fp, #-8]
    43d8:	b	43f0 <include_test1_global_json_parser_enum+0x1b0>
    43dc:	ldr	r3, [fp, #-8]
    43e0:	b	43f0 <include_test1_global_json_parser_enum+0x1b0>
    43e4:	ldr	r3, [fp, #-8]
    43e8:	b	43f0 <include_test1_global_json_parser_enum+0x1b0>
    43ec:	ldr	r3, [fp, #-8]
    43f0:	mov	r0, r3
    43f4:	sub	sp, fp, #4
    43f8:	pop	{fp, pc}
    43fc:	nop			; (mov r0, r0)
    4400:	.word	0x6d652e4f
    4404:	.word	0x4d794761
    4408:	.word	0x4e616d65
    440c:	.word	0x74686572
    4410:	.word	0x652e4672
    4414:	.word	0x53706163
    4418:	.word	0x636c7564
    441c:	.word	0x6f6d496e

00004420 <attributes_local_json_parser_enum>:
    4420:	push	{fp}		; (str fp, [sp, #-4]!)
    4424:	add	fp, sp, #0
    4428:	sub	sp, sp, #20
    442c:	str	r0, [fp, #-8]
    4430:	str	r1, [fp, #-12]
    4434:	str	r2, [fp, #-16]
    4438:	str	r3, [fp, #-20]	; 0xffffffec
    443c:	ldr	r3, [fp, #-12]
    4440:	mov	r0, r3
    4444:	add	sp, fp, #0
    4448:	pop	{fp}		; (ldr fp, [sp], #4)
    444c:	bx	lr

00004450 <attributes_local_MyGame_Example_json_parser_enum>:
    4450:	push	{fp}		; (str fp, [sp, #-4]!)
    4454:	add	fp, sp, #0
    4458:	sub	sp, sp, #20
    445c:	str	r0, [fp, #-8]
    4460:	str	r1, [fp, #-12]
    4464:	str	r2, [fp, #-16]
    4468:	str	r3, [fp, #-20]	; 0xffffffec
    446c:	ldr	r3, [fp, #-12]
    4470:	mov	r0, r3
    4474:	add	sp, fp, #0
    4478:	pop	{fp}		; (ldr fp, [sp], #4)
    447c:	bx	lr

00004480 <attributes_local_MyGame_Example2_json_parser_enum>:
    4480:	push	{fp}		; (str fp, [sp, #-4]!)
    4484:	add	fp, sp, #0
    4488:	sub	sp, sp, #20
    448c:	str	r0, [fp, #-8]
    4490:	str	r1, [fp, #-12]
    4494:	str	r2, [fp, #-16]
    4498:	str	r3, [fp, #-20]	; 0xffffffec
    449c:	ldr	r3, [fp, #-12]
    44a0:	mov	r0, r3
    44a4:	add	sp, fp, #0
    44a8:	pop	{fp}		; (ldr fp, [sp], #4)
    44ac:	bx	lr

000044b0 <attributes_local_MyGame_json_parser_enum>:
    44b0:	push	{fp}		; (str fp, [sp, #-4]!)
    44b4:	add	fp, sp, #0
    44b8:	sub	sp, sp, #20
    44bc:	str	r0, [fp, #-8]
    44c0:	str	r1, [fp, #-12]
    44c4:	str	r2, [fp, #-16]
    44c8:	str	r3, [fp, #-20]	; 0xffffffec
    44cc:	ldr	r3, [fp, #-12]
    44d0:	mov	r0, r3
    44d4:	add	sp, fp, #0
    44d8:	pop	{fp}		; (ldr fp, [sp], #4)
    44dc:	bx	lr

000044e0 <attributes_local_Fantasy_json_parser_enum>:
    44e0:	push	{fp}		; (str fp, [sp, #-4]!)
    44e4:	add	fp, sp, #0
    44e8:	sub	sp, sp, #20
    44ec:	str	r0, [fp, #-8]
    44f0:	str	r1, [fp, #-12]
    44f4:	str	r2, [fp, #-16]
    44f8:	str	r3, [fp, #-20]	; 0xffffffec
    44fc:	ldr	r3, [fp, #-12]
    4500:	mov	r0, r3
    4504:	add	sp, fp, #0
    4508:	pop	{fp}		; (ldr fp, [sp], #4)
    450c:	bx	lr

00004510 <attributes_local_MyGame_OtherNameSpace_json_parser_enum>:
    4510:	push	{fp}		; (str fp, [sp, #-4]!)
    4514:	add	fp, sp, #0
    4518:	sub	sp, sp, #20
    451c:	str	r0, [fp, #-8]
    4520:	str	r1, [fp, #-12]
    4524:	str	r2, [fp, #-16]
    4528:	str	r3, [fp, #-20]	; 0xffffffec
    452c:	ldr	r3, [fp, #-12]
    4530:	mov	r0, r3
    4534:	add	sp, fp, #0
    4538:	pop	{fp}		; (ldr fp, [sp], #4)
    453c:	bx	lr

00004540 <attributes_global_json_parser_enum>:
    4540:	push	{fp}		; (str fp, [sp, #-4]!)
    4544:	add	fp, sp, #0
    4548:	sub	sp, sp, #20
    454c:	str	r0, [fp, #-8]
    4550:	str	r1, [fp, #-12]
    4554:	str	r2, [fp, #-16]
    4558:	str	r3, [fp, #-20]	; 0xffffffec
    455c:	ldr	r3, [fp, #-12]
    4560:	mov	r0, r3
    4564:	add	sp, fp, #0
    4568:	pop	{fp}		; (ldr fp, [sp], #4)
    456c:	bx	lr

00004570 <InGlobalNamespace_parse_json_struct_inline>:
    4570:	push	{fp, lr}
    4574:	add	fp, sp, #4
    4578:	sub	sp, sp, #24
    457c:	str	r0, [fp, #-16]
    4580:	str	r1, [fp, #-20]	; 0xffffffec
    4584:	str	r2, [fp, #-24]	; 0xffffffe8
    4588:	str	r3, [fp, #-28]	; 0xffffffe4
    458c:	sub	r3, fp, #8
    4590:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4594:	ldr	r1, [fp, #-20]	; 0xffffffec
    4598:	ldr	r0, [fp, #-16]
    459c:	bl	10d4 <flatcc_json_parser_object_start>
    45a0:	str	r0, [fp, #-20]	; 0xffffffec
    45a4:	b	45d4 <InGlobalNamespace_parse_json_struct_inline+0x64>
    45a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    45ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    45b0:	ldr	r0, [fp, #-16]
    45b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    45b8:	str	r0, [fp, #-20]	; 0xffffffec
    45bc:	sub	r3, fp, #8
    45c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    45c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    45c8:	ldr	r0, [fp, #-16]
    45cc:	bl	11bc <flatcc_json_parser_object_end>
    45d0:	str	r0, [fp, #-20]	; 0xffffffec
    45d4:	ldr	r3, [fp, #-8]
    45d8:	cmp	r3, #0
    45dc:	bne	45a8 <InGlobalNamespace_parse_json_struct_inline+0x38>
    45e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    45e4:	mov	r0, r3
    45e8:	sub	sp, fp, #4
    45ec:	pop	{fp, pc}

000045f0 <InGlobalNamespace_parse_json_struct>:
    45f0:	push	{fp, lr}
    45f4:	add	fp, sp, #4
    45f8:	sub	sp, sp, #24
    45fc:	str	r0, [fp, #-16]
    4600:	str	r1, [fp, #-20]	; 0xffffffec
    4604:	str	r2, [fp, #-24]	; 0xffffffe8
    4608:	str	r3, [fp, #-28]	; 0xffffffe4
    460c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4610:	mov	r2, #0
    4614:	str	r2, [r3]
    4618:	ldr	r3, [fp, #-16]
    461c:	ldr	r3, [r3]
    4620:	mov	r2, #1
    4624:	mov	r1, #0
    4628:	mov	r0, r3
    462c:	bl	0 <flatcc_builder_start_struct>
    4630:	str	r0, [fp, #-8]
    4634:	ldr	r3, [fp, #-8]
    4638:	cmp	r3, #0
    463c:	beq	469c <InGlobalNamespace_parse_json_struct+0xac>
    4640:	ldr	r3, [fp, #-8]
    4644:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4648:	ldr	r1, [fp, #-20]	; 0xffffffec
    464c:	ldr	r0, [fp, #-16]
    4650:	bl	4570 <InGlobalNamespace_parse_json_struct_inline>
    4654:	str	r0, [fp, #-20]	; 0xffffffec
    4658:	ldr	r2, [fp, #-20]	; 0xffffffec
    465c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4660:	cmp	r2, r3
    4664:	beq	46a0 <InGlobalNamespace_parse_json_struct+0xb0>
    4668:	ldr	r3, [fp, #-16]
    466c:	ldr	r3, [r3]
    4670:	mov	r0, r3
    4674:	bl	0 <flatcc_builder_end_struct>
    4678:	mov	r2, r0
    467c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4680:	str	r2, [r3]
    4684:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4688:	ldr	r3, [r3]
    468c:	cmp	r3, #0
    4690:	beq	46a0 <InGlobalNamespace_parse_json_struct+0xb0>
    4694:	ldr	r3, [fp, #-20]	; 0xffffffec
    4698:	b	46b8 <InGlobalNamespace_parse_json_struct+0xc8>
    469c:	nop			; (mov r0, r0)
    46a0:	mov	r3, #33	; 0x21
    46a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    46a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    46ac:	ldr	r0, [fp, #-16]
    46b0:	bl	0 <flatcc_json_parser_set_error>
    46b4:	mov	r3, r0
    46b8:	mov	r0, r3
    46bc:	sub	sp, fp, #4
    46c0:	pop	{fp, pc}

000046c4 <MyGame_InParentNamespace_parse_json_table>:
    46c4:	push	{fp, lr}
    46c8:	add	fp, sp, #4
    46cc:	sub	sp, sp, #24
    46d0:	str	r0, [fp, #-16]
    46d4:	str	r1, [fp, #-20]	; 0xffffffec
    46d8:	str	r2, [fp, #-24]	; 0xffffffe8
    46dc:	str	r3, [fp, #-28]	; 0xffffffe4
    46e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    46e4:	mov	r2, #0
    46e8:	str	r2, [r3]
    46ec:	ldr	r3, [fp, #-16]
    46f0:	ldr	r3, [r3]
    46f4:	mov	r1, #0
    46f8:	mov	r0, r3
    46fc:	bl	0 <flatcc_builder_start_table>
    4700:	mov	r3, r0
    4704:	cmp	r3, #0
    4708:	bne	47b8 <MyGame_InParentNamespace_parse_json_table+0xf4>
    470c:	sub	r3, fp, #8
    4710:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4714:	ldr	r1, [fp, #-20]	; 0xffffffec
    4718:	ldr	r0, [fp, #-16]
    471c:	bl	10d4 <flatcc_json_parser_object_start>
    4720:	str	r0, [fp, #-20]	; 0xffffffec
    4724:	b	4768 <MyGame_InParentNamespace_parse_json_table+0xa4>
    4728:	ldr	r2, [fp, #-24]	; 0xffffffe8
    472c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4730:	ldr	r0, [fp, #-16]
    4734:	bl	cc4 <flatcc_json_parser_symbol_start>
    4738:	str	r0, [fp, #-20]	; 0xffffffec
    473c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4740:	ldr	r1, [fp, #-20]	; 0xffffffec
    4744:	ldr	r0, [fp, #-16]
    4748:	bl	0 <flatcc_json_parser_unmatched_symbol>
    474c:	str	r0, [fp, #-20]	; 0xffffffec
    4750:	sub	r3, fp, #8
    4754:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4758:	ldr	r1, [fp, #-20]	; 0xffffffec
    475c:	ldr	r0, [fp, #-16]
    4760:	bl	11bc <flatcc_json_parser_object_end>
    4764:	str	r0, [fp, #-20]	; 0xffffffec
    4768:	ldr	r3, [fp, #-8]
    476c:	cmp	r3, #0
    4770:	bne	4728 <MyGame_InParentNamespace_parse_json_table+0x64>
    4774:	ldr	r3, [fp, #-16]
    4778:	ldr	r3, [r3, #24]
    477c:	cmp	r3, #0
    4780:	bne	47c0 <MyGame_InParentNamespace_parse_json_table+0xfc>
    4784:	ldr	r3, [fp, #-16]
    4788:	ldr	r3, [r3]
    478c:	mov	r0, r3
    4790:	bl	0 <flatcc_builder_end_table>
    4794:	mov	r2, r0
    4798:	ldr	r3, [fp, #-28]	; 0xffffffe4
    479c:	str	r2, [r3]
    47a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    47a4:	ldr	r3, [r3]
    47a8:	cmp	r3, #0
    47ac:	beq	47c8 <MyGame_InParentNamespace_parse_json_table+0x104>
    47b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    47b4:	b	47e4 <MyGame_InParentNamespace_parse_json_table+0x120>
    47b8:	nop			; (mov r0, r0)
    47bc:	b	47cc <MyGame_InParentNamespace_parse_json_table+0x108>
    47c0:	nop			; (mov r0, r0)
    47c4:	b	47cc <MyGame_InParentNamespace_parse_json_table+0x108>
    47c8:	nop			; (mov r0, r0)
    47cc:	mov	r3, #33	; 0x21
    47d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    47d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    47d8:	ldr	r0, [fp, #-16]
    47dc:	bl	0 <flatcc_json_parser_set_error>
    47e0:	mov	r3, r0
    47e4:	mov	r0, r3
    47e8:	sub	sp, fp, #4
    47ec:	pop	{fp, pc}

000047f0 <MyGame_Example2_Monster_parse_json_table>:
    47f0:	push	{fp, lr}
    47f4:	add	fp, sp, #4
    47f8:	sub	sp, sp, #24
    47fc:	str	r0, [fp, #-16]
    4800:	str	r1, [fp, #-20]	; 0xffffffec
    4804:	str	r2, [fp, #-24]	; 0xffffffe8
    4808:	str	r3, [fp, #-28]	; 0xffffffe4
    480c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4810:	mov	r2, #0
    4814:	str	r2, [r3]
    4818:	ldr	r3, [fp, #-16]
    481c:	ldr	r3, [r3]
    4820:	mov	r1, #0
    4824:	mov	r0, r3
    4828:	bl	0 <flatcc_builder_start_table>
    482c:	mov	r3, r0
    4830:	cmp	r3, #0
    4834:	bne	48e4 <MyGame_Example2_Monster_parse_json_table+0xf4>
    4838:	sub	r3, fp, #8
    483c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4840:	ldr	r1, [fp, #-20]	; 0xffffffec
    4844:	ldr	r0, [fp, #-16]
    4848:	bl	10d4 <flatcc_json_parser_object_start>
    484c:	str	r0, [fp, #-20]	; 0xffffffec
    4850:	b	4894 <MyGame_Example2_Monster_parse_json_table+0xa4>
    4854:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4858:	ldr	r1, [fp, #-20]	; 0xffffffec
    485c:	ldr	r0, [fp, #-16]
    4860:	bl	cc4 <flatcc_json_parser_symbol_start>
    4864:	str	r0, [fp, #-20]	; 0xffffffec
    4868:	ldr	r2, [fp, #-24]	; 0xffffffe8
    486c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4870:	ldr	r0, [fp, #-16]
    4874:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4878:	str	r0, [fp, #-20]	; 0xffffffec
    487c:	sub	r3, fp, #8
    4880:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4884:	ldr	r1, [fp, #-20]	; 0xffffffec
    4888:	ldr	r0, [fp, #-16]
    488c:	bl	11bc <flatcc_json_parser_object_end>
    4890:	str	r0, [fp, #-20]	; 0xffffffec
    4894:	ldr	r3, [fp, #-8]
    4898:	cmp	r3, #0
    489c:	bne	4854 <MyGame_Example2_Monster_parse_json_table+0x64>
    48a0:	ldr	r3, [fp, #-16]
    48a4:	ldr	r3, [r3, #24]
    48a8:	cmp	r3, #0
    48ac:	bne	48ec <MyGame_Example2_Monster_parse_json_table+0xfc>
    48b0:	ldr	r3, [fp, #-16]
    48b4:	ldr	r3, [r3]
    48b8:	mov	r0, r3
    48bc:	bl	0 <flatcc_builder_end_table>
    48c0:	mov	r2, r0
    48c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    48c8:	str	r2, [r3]
    48cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    48d0:	ldr	r3, [r3]
    48d4:	cmp	r3, #0
    48d8:	beq	48f4 <MyGame_Example2_Monster_parse_json_table+0x104>
    48dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    48e0:	b	4910 <MyGame_Example2_Monster_parse_json_table+0x120>
    48e4:	nop			; (mov r0, r0)
    48e8:	b	48f8 <MyGame_Example2_Monster_parse_json_table+0x108>
    48ec:	nop			; (mov r0, r0)
    48f0:	b	48f8 <MyGame_Example2_Monster_parse_json_table+0x108>
    48f4:	nop			; (mov r0, r0)
    48f8:	mov	r3, #33	; 0x21
    48fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4900:	ldr	r1, [fp, #-20]	; 0xffffffec
    4904:	ldr	r0, [fp, #-16]
    4908:	bl	0 <flatcc_json_parser_set_error>
    490c:	mov	r3, r0
    4910:	mov	r0, r3
    4914:	sub	sp, fp, #4
    4918:	pop	{fp, pc}

0000491c <MyGame_Example_Foo_parse_json_union>:
    491c:	push	{fp, lr}
    4920:	add	fp, sp, #4
    4924:	sub	sp, sp, #16
    4928:	str	r0, [fp, #-8]
    492c:	str	r1, [fp, #-12]
    4930:	str	r2, [fp, #-16]
    4934:	strb	r3, [fp, #-17]	; 0xffffffef
    4938:	ldr	r3, [fp, #4]
    493c:	mov	r2, #0
    4940:	str	r2, [r3]
    4944:	ldrb	r3, [fp, #-17]	; 0xffffffef
    4948:	cmp	r3, #0
    494c:	beq	495c <MyGame_Example_Foo_parse_json_union+0x40>
    4950:	cmp	r3, #1
    4954:	beq	4974 <MyGame_Example_Foo_parse_json_union+0x58>
    4958:	b	49a4 <MyGame_Example_Foo_parse_json_union+0x88>
    495c:	ldr	r2, [fp, #-16]
    4960:	ldr	r1, [fp, #-12]
    4964:	ldr	r0, [fp, #-8]
    4968:	bl	1d18 <flatcc_json_parser_none>
    496c:	mov	r3, r0
    4970:	b	4a24 <MyGame_Example_Foo_parse_json_union+0x108>
    4974:	ldr	r3, [fp, #4]
    4978:	ldr	r2, [fp, #-16]
    497c:	ldr	r1, [fp, #-12]
    4980:	ldr	r0, [fp, #-8]
    4984:	bl	46c4 <MyGame_InParentNamespace_parse_json_table>
    4988:	str	r0, [fp, #-12]
    498c:	nop			; (mov r0, r0)
    4990:	ldr	r3, [fp, #-8]
    4994:	ldr	r3, [r3, #24]
    4998:	cmp	r3, #0
    499c:	beq	49f4 <MyGame_Example_Foo_parse_json_union+0xd8>
    49a0:	b	49ec <MyGame_Example_Foo_parse_json_union+0xd0>
    49a4:	ldr	r3, [fp, #-8]
    49a8:	ldr	r3, [r3, #8]
    49ac:	and	r3, r3, #1
    49b0:	cmp	r3, #0
    49b4:	bne	49d4 <MyGame_Example_Foo_parse_json_union+0xb8>
    49b8:	mov	r3, #15
    49bc:	ldr	r2, [fp, #-16]
    49c0:	ldr	r1, [fp, #-12]
    49c4:	ldr	r0, [fp, #-8]
    49c8:	bl	0 <flatcc_json_parser_set_error>
    49cc:	mov	r3, r0
    49d0:	b	4a24 <MyGame_Example_Foo_parse_json_union+0x108>
    49d4:	ldr	r2, [fp, #-16]
    49d8:	ldr	r1, [fp, #-12]
    49dc:	ldr	r0, [fp, #-8]
    49e0:	bl	0 <flatcc_json_parser_generic_json>
    49e4:	mov	r3, r0
    49e8:	b	4a24 <MyGame_Example_Foo_parse_json_union+0x108>
    49ec:	ldr	r3, [fp, #-12]
    49f0:	b	4a24 <MyGame_Example_Foo_parse_json_union+0x108>
    49f4:	ldr	r3, [fp, #4]
    49f8:	ldr	r3, [r3]
    49fc:	cmp	r3, #0
    4a00:	bne	4a20 <MyGame_Example_Foo_parse_json_union+0x104>
    4a04:	mov	r3, #33	; 0x21
    4a08:	ldr	r2, [fp, #-16]
    4a0c:	ldr	r1, [fp, #-12]
    4a10:	ldr	r0, [fp, #-8]
    4a14:	bl	0 <flatcc_json_parser_set_error>
    4a18:	mov	r3, r0
    4a1c:	b	4a24 <MyGame_Example_Foo_parse_json_union+0x108>
    4a20:	ldr	r3, [fp, #-12]
    4a24:	mov	r0, r3
    4a28:	sub	sp, fp, #4
    4a2c:	pop	{fp, pc}

00004a30 <MyGame_Example_Foo_json_union_accept_type>:
    4a30:	push	{fp}		; (str fp, [sp, #-4]!)
    4a34:	add	fp, sp, #0
    4a38:	sub	sp, sp, #12
    4a3c:	mov	r3, r0
    4a40:	strb	r3, [fp, #-5]
    4a44:	ldrb	r3, [fp, #-5]
    4a48:	cmp	r3, #0
    4a4c:	beq	4a5c <MyGame_Example_Foo_json_union_accept_type+0x2c>
    4a50:	cmp	r3, #1
    4a54:	beq	4a64 <MyGame_Example_Foo_json_union_accept_type+0x34>
    4a58:	b	4a6c <MyGame_Example_Foo_json_union_accept_type+0x3c>
    4a5c:	mov	r3, #1
    4a60:	b	4a70 <MyGame_Example_Foo_json_union_accept_type+0x40>
    4a64:	mov	r3, #1
    4a68:	b	4a70 <MyGame_Example_Foo_json_union_accept_type+0x40>
    4a6c:	mov	r3, #0
    4a70:	mov	r0, r3
    4a74:	add	sp, fp, #0
    4a78:	pop	{fp}		; (ldr fp, [sp], #4)
    4a7c:	bx	lr

00004a80 <MyGame_Example_Foo_parse_json_enum>:
    4a80:	push	{fp, lr}
    4a84:	add	fp, sp, #4
    4a88:	sub	sp, sp, #48	; 0x30
    4a8c:	str	r0, [fp, #-32]	; 0xffffffe0
    4a90:	str	r1, [fp, #-36]	; 0xffffffdc
    4a94:	str	r2, [fp, #-40]	; 0xffffffd8
    4a98:	str	r3, [fp, #-44]	; 0xffffffd4
    4a9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4aa0:	str	r3, [fp, #-8]
    4aa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4aa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4aac:	bl	fa8 <flatcc_json_parser_symbol_part>
    4ab0:	strd	r0, [fp, #-20]	; 0xffffffec
    4ab4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4ab8:	add	r1, pc, #400	; 0x190
    4abc:	ldrd	r0, [r1]
    4ac0:	cmp	r3, r1
    4ac4:	cmpeq	r2, r0
    4ac8:	bne	4bac <MyGame_Example_Foo_parse_json_enum+0x12c>
    4acc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4ad0:	add	r3, r3, #8
    4ad4:	str	r3, [fp, #-36]	; 0xffffffdc
    4ad8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4adc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4ae0:	bl	fa8 <flatcc_json_parser_symbol_part>
    4ae4:	strd	r0, [fp, #-20]	; 0xffffffec
    4ae8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4aec:	add	r1, pc, #356	; 0x164
    4af0:	ldrd	r0, [r1]
    4af4:	cmp	r3, r1
    4af8:	cmpeq	r2, r0
    4afc:	bne	4ba4 <MyGame_Example_Foo_parse_json_enum+0x124>
    4b00:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4b04:	add	r3, r3, #8
    4b08:	str	r3, [fp, #-36]	; 0xffffffdc
    4b0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4b10:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4b14:	bl	fa8 <flatcc_json_parser_symbol_part>
    4b18:	strd	r0, [fp, #-20]	; 0xffffffec
    4b1c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4b20:	mov	r0, #0
    4b24:	mov	r1, #-16777216	; 0xff000000
    4b28:	and	r2, r2, r0
    4b2c:	and	r3, r3, r1
    4b30:	cmp	r3, #1694498816	; 0x65000000
    4b34:	cmpeq	r2, #0
    4b38:	bne	4b9c <MyGame_Example_Foo_parse_json_enum+0x11c>
    4b3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4b40:	str	r3, [fp, #-24]	; 0xffffffe8
    4b44:	ldr	r3, [fp, #8]
    4b48:	str	r3, [sp]
    4b4c:	mov	r3, #1
    4b50:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4b5c:	bl	0 <flatcc_json_parser_match_constant>
    4b60:	str	r0, [fp, #-36]	; 0xffffffdc
    4b64:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4b6c:	cmp	r2, r3
    4b70:	beq	4b94 <MyGame_Example_Foo_parse_json_enum+0x114>
    4b74:	ldr	r1, [fp, #4]
    4b78:	mov	r2, #1
    4b7c:	mov	r3, #0
    4b80:	strd	r2, [r1]
    4b84:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4b88:	mov	r2, #0
    4b8c:	str	r2, [r3]
    4b90:	b	4c3c <MyGame_Example_Foo_parse_json_enum+0x1bc>
    4b94:	ldr	r3, [fp, #-8]
    4b98:	b	4c40 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4b9c:	ldr	r3, [fp, #-8]
    4ba0:	b	4c40 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4ba4:	ldr	r3, [fp, #-8]
    4ba8:	b	4c40 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4bac:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4bb0:	mov	r0, #0
    4bb4:	mvn	r1, #0
    4bb8:	and	r2, r2, r0
    4bbc:	and	r3, r3, r1
    4bc0:	add	r1, pc, #152	; 0x98
    4bc4:	ldrd	r0, [r1]
    4bc8:	cmp	r3, r1
    4bcc:	cmpeq	r2, r0
    4bd0:	bne	4c34 <MyGame_Example_Foo_parse_json_enum+0x1b4>
    4bd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4bd8:	str	r3, [fp, #-24]	; 0xffffffe8
    4bdc:	ldr	r3, [fp, #8]
    4be0:	str	r3, [sp]
    4be4:	mov	r3, #4
    4be8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4bf4:	bl	0 <flatcc_json_parser_match_constant>
    4bf8:	str	r0, [fp, #-36]	; 0xffffffdc
    4bfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4c04:	cmp	r2, r3
    4c08:	beq	4c2c <MyGame_Example_Foo_parse_json_enum+0x1ac>
    4c0c:	ldr	r1, [fp, #4]
    4c10:	mov	r2, #0
    4c14:	mov	r3, #0
    4c18:	strd	r2, [r1]
    4c1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4c20:	mov	r2, #0
    4c24:	str	r2, [r3]
    4c28:	b	4c3c <MyGame_Example_Foo_parse_json_enum+0x1bc>
    4c2c:	ldr	r3, [fp, #-8]
    4c30:	b	4c40 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4c34:	ldr	r3, [fp, #-8]
    4c38:	b	4c40 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4c3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4c40:	mov	r0, r3
    4c44:	sub	sp, fp, #4
    4c48:	pop	{fp, pc}
    4c4c:	nop			; (mov r0, r0)
    4c50:	.word	0x72656e74
    4c54:	.word	0x496e5061
    4c58:	.word	0x73706163
    4c5c:	.word	0x4e616d65
    4c60:	.word	0x00000000
    4c64:	.word	0x4e4f4e45

00004c68 <MyGame_Example_neg_enum_parse_json_enum>:
    4c68:	push	{fp, lr}
    4c6c:	add	fp, sp, #4
    4c70:	sub	sp, sp, #48	; 0x30
    4c74:	str	r0, [fp, #-32]	; 0xffffffe0
    4c78:	str	r1, [fp, #-36]	; 0xffffffdc
    4c7c:	str	r2, [fp, #-40]	; 0xffffffd8
    4c80:	str	r3, [fp, #-44]	; 0xffffffd4
    4c84:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4c88:	str	r3, [fp, #-8]
    4c8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4c90:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4c94:	bl	fa8 <flatcc_json_parser_symbol_part>
    4c98:	strd	r0, [fp, #-20]	; 0xffffffec
    4c9c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4ca0:	add	r1, pc, #456	; 0x1c8
    4ca4:	ldrd	r0, [r1]
    4ca8:	cmp	r3, r1
    4cac:	cmpeq	r2, r0
    4cb0:	bhi	4d44 <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    4cb4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4cb8:	mov	r0, #0
    4cbc:	mvn	r1, #0
    4cc0:	and	r2, r2, r0
    4cc4:	and	r3, r3, r1
    4cc8:	add	r1, pc, #424	; 0x1a8
    4ccc:	ldrd	r0, [r1]
    4cd0:	cmp	r3, r1
    4cd4:	cmpeq	r2, r0
    4cd8:	bne	4d3c <MyGame_Example_neg_enum_parse_json_enum+0xd4>
    4cdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4ce0:	str	r3, [fp, #-24]	; 0xffffffe8
    4ce4:	ldr	r3, [fp, #8]
    4ce8:	str	r3, [sp]
    4cec:	mov	r3, #4
    4cf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4cfc:	bl	0 <flatcc_json_parser_match_constant>
    4d00:	str	r0, [fp, #-36]	; 0xffffffdc
    4d04:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4d0c:	cmp	r2, r3
    4d10:	beq	4d34 <MyGame_Example_neg_enum_parse_json_enum+0xcc>
    4d14:	ldr	r1, [fp, #4]
    4d18:	mvn	r2, #11
    4d1c:	mvn	r3, #0
    4d20:	strd	r2, [r1]
    4d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4d28:	mov	r2, #1
    4d2c:	str	r2, [r3]
    4d30:	b	4e5c <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    4d34:	ldr	r3, [fp, #-8]
    4d38:	b	4e60 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4d3c:	ldr	r3, [fp, #-8]
    4d40:	b	4e60 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4d44:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4d48:	mov	r0, #0
    4d4c:	mvn	r1, #0
    4d50:	and	r2, r2, r0
    4d54:	and	r3, r3, r1
    4d58:	add	r1, pc, #288	; 0x120
    4d5c:	ldrd	r0, [r1]
    4d60:	cmp	r3, r1
    4d64:	cmpeq	r2, r0
    4d68:	bne	4dcc <MyGame_Example_neg_enum_parse_json_enum+0x164>
    4d6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4d70:	str	r3, [fp, #-24]	; 0xffffffe8
    4d74:	ldr	r3, [fp, #8]
    4d78:	str	r3, [sp]
    4d7c:	mov	r3, #4
    4d80:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4d88:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4d8c:	bl	0 <flatcc_json_parser_match_constant>
    4d90:	str	r0, [fp, #-36]	; 0xffffffdc
    4d94:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4d98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4d9c:	cmp	r2, r3
    4da0:	beq	4dc4 <MyGame_Example_neg_enum_parse_json_enum+0x15c>
    4da4:	ldr	r1, [fp, #4]
    4da8:	mvn	r2, #9
    4dac:	mvn	r3, #0
    4db0:	strd	r2, [r1]
    4db4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4db8:	mov	r2, #1
    4dbc:	str	r2, [r3]
    4dc0:	b	4e5c <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    4dc4:	ldr	r3, [fp, #-8]
    4dc8:	b	4e60 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4dcc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4dd0:	mov	r0, #0
    4dd4:	mvn	r1, #0
    4dd8:	and	r2, r2, r0
    4ddc:	and	r3, r3, r1
    4de0:	add	r1, pc, #160	; 0xa0
    4de4:	ldrd	r0, [r1]
    4de8:	cmp	r3, r1
    4dec:	cmpeq	r2, r0
    4df0:	bne	4e54 <MyGame_Example_neg_enum_parse_json_enum+0x1ec>
    4df4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4df8:	str	r3, [fp, #-24]	; 0xffffffe8
    4dfc:	ldr	r3, [fp, #8]
    4e00:	str	r3, [sp]
    4e04:	mov	r3, #4
    4e08:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4e0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4e10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4e14:	bl	0 <flatcc_json_parser_match_constant>
    4e18:	str	r0, [fp, #-36]	; 0xffffffdc
    4e1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4e24:	cmp	r2, r3
    4e28:	beq	4e4c <MyGame_Example_neg_enum_parse_json_enum+0x1e4>
    4e2c:	ldr	r1, [fp, #4]
    4e30:	mvn	r2, #10
    4e34:	mvn	r3, #0
    4e38:	strd	r2, [r1]
    4e3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4e40:	mov	r2, #1
    4e44:	str	r2, [r3]
    4e48:	b	4e5c <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    4e4c:	ldr	r3, [fp, #-8]
    4e50:	b	4e60 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4e54:	ldr	r3, [fp, #-8]
    4e58:	b	4e60 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4e5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4e60:	mov	r0, r3
    4e64:	sub	sp, fp, #4
    4e68:	pop	{fp, pc}
    4e6c:	nop			; (mov r0, r0)
    4e70:	.word	0xffffffff
    4e74:	.word	0x6e656731
    4e78:	.word	0x00000000
    4e7c:	.word	0x6e656731
    4e80:	.word	0x00000000
    4e84:	.word	0x6e656733
    4e88:	.word	0x00000000
    4e8c:	.word	0x6e656732

00004e90 <MyGame_Example_int_enum_parse_json_enum>:
    4e90:	push	{fp, lr}
    4e94:	add	fp, sp, #4
    4e98:	sub	sp, sp, #48	; 0x30
    4e9c:	str	r0, [fp, #-32]	; 0xffffffe0
    4ea0:	str	r1, [fp, #-36]	; 0xffffffdc
    4ea4:	str	r2, [fp, #-40]	; 0xffffffd8
    4ea8:	str	r3, [fp, #-44]	; 0xffffffd4
    4eac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4eb0:	str	r3, [fp, #-8]
    4eb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4ebc:	bl	fa8 <flatcc_json_parser_symbol_part>
    4ec0:	strd	r0, [fp, #-20]	; 0xffffffec
    4ec4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4ec8:	add	r1, pc, #624	; 0x270
    4ecc:	ldrd	r0, [r1]
    4ed0:	cmp	r3, r1
    4ed4:	cmpeq	r2, r0
    4ed8:	bhi	4f6c <MyGame_Example_int_enum_parse_json_enum+0xdc>
    4edc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4ee0:	mov	r0, #0
    4ee4:	mvn	r1, #0
    4ee8:	and	r2, r2, r0
    4eec:	and	r3, r3, r1
    4ef0:	add	r1, pc, #592	; 0x250
    4ef4:	ldrd	r0, [r1]
    4ef8:	cmp	r3, r1
    4efc:	cmpeq	r2, r0
    4f00:	bne	4f64 <MyGame_Example_int_enum_parse_json_enum+0xd4>
    4f04:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4f08:	str	r3, [fp, #-24]	; 0xffffffe8
    4f0c:	ldr	r3, [fp, #8]
    4f10:	str	r3, [sp]
    4f14:	mov	r3, #4
    4f18:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4f1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4f20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4f24:	bl	0 <flatcc_json_parser_match_constant>
    4f28:	str	r0, [fp, #-36]	; 0xffffffdc
    4f2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4f34:	cmp	r2, r3
    4f38:	beq	4f5c <MyGame_Example_int_enum_parse_json_enum+0xcc>
    4f3c:	ldr	r1, [fp, #4]
    4f40:	mov	r2, #2
    4f44:	mov	r3, #0
    4f48:	strd	r2, [r1]
    4f4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4f50:	mov	r2, #0
    4f54:	str	r2, [r3]
    4f58:	b	512c <MyGame_Example_int_enum_parse_json_enum+0x29c>
    4f5c:	ldr	r3, [fp, #-8]
    4f60:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    4f64:	ldr	r3, [fp, #-8]
    4f68:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    4f6c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4f70:	add	r1, pc, #472	; 0x1d8
    4f74:	ldrd	r0, [r1]
    4f78:	cmp	r3, r1
    4f7c:	cmpeq	r2, r0
    4f80:	bhi	5014 <MyGame_Example_int_enum_parse_json_enum+0x184>
    4f84:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4f88:	mov	r0, #0
    4f8c:	mvn	r1, #0
    4f90:	and	r2, r2, r0
    4f94:	and	r3, r3, r1
    4f98:	add	r1, pc, #440	; 0x1b8
    4f9c:	ldrd	r0, [r1]
    4fa0:	cmp	r3, r1
    4fa4:	cmpeq	r2, r0
    4fa8:	bne	500c <MyGame_Example_int_enum_parse_json_enum+0x17c>
    4fac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4fb0:	str	r3, [fp, #-24]	; 0xffffffe8
    4fb4:	ldr	r3, [fp, #8]
    4fb8:	str	r3, [sp]
    4fbc:	mov	r3, #4
    4fc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4fcc:	bl	0 <flatcc_json_parser_match_constant>
    4fd0:	str	r0, [fp, #-36]	; 0xffffffdc
    4fd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4fdc:	cmp	r2, r3
    4fe0:	beq	5004 <MyGame_Example_int_enum_parse_json_enum+0x174>
    4fe4:	ldr	r1, [fp, #4]
    4fe8:	mov	r2, #42	; 0x2a
    4fec:	mov	r3, #0
    4ff0:	strd	r2, [r1]
    4ff4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4ff8:	mov	r2, #0
    4ffc:	str	r2, [r3]
    5000:	b	512c <MyGame_Example_int_enum_parse_json_enum+0x29c>
    5004:	ldr	r3, [fp, #-8]
    5008:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    500c:	ldr	r3, [fp, #-8]
    5010:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    5014:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5018:	mvn	r0, #255	; 0xff
    501c:	mvn	r1, #0
    5020:	and	r2, r2, r0
    5024:	and	r3, r3, r1
    5028:	add	r1, pc, #304	; 0x130
    502c:	ldrd	r0, [r1]
    5030:	cmp	r3, r1
    5034:	cmpeq	r2, r0
    5038:	bne	509c <MyGame_Example_int_enum_parse_json_enum+0x20c>
    503c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5040:	str	r3, [fp, #-24]	; 0xffffffe8
    5044:	ldr	r3, [fp, #8]
    5048:	str	r3, [sp]
    504c:	mov	r3, #7
    5050:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5054:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5058:	ldr	r0, [fp, #-32]	; 0xffffffe0
    505c:	bl	0 <flatcc_json_parser_match_constant>
    5060:	str	r0, [fp, #-36]	; 0xffffffdc
    5064:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5068:	ldr	r3, [fp, #-24]	; 0xffffffe8
    506c:	cmp	r2, r3
    5070:	beq	5094 <MyGame_Example_int_enum_parse_json_enum+0x204>
    5074:	ldr	r1, [fp, #4]
    5078:	mvn	r2, #0
    507c:	mvn	r3, #0
    5080:	strd	r2, [r1]
    5084:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5088:	mov	r2, #1
    508c:	str	r2, [r3]
    5090:	b	512c <MyGame_Example_int_enum_parse_json_enum+0x29c>
    5094:	ldr	r3, [fp, #-8]
    5098:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    509c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    50a0:	ldr	r0, [pc, #200]	; 5170 <MyGame_Example_int_enum_parse_json_enum+0x2e0>
    50a4:	mvn	r1, #0
    50a8:	and	r2, r2, r0
    50ac:	and	r3, r3, r1
    50b0:	add	r1, pc, #176	; 0xb0
    50b4:	ldrd	r0, [r1]
    50b8:	cmp	r3, r1
    50bc:	cmpeq	r2, r0
    50c0:	bne	5124 <MyGame_Example_int_enum_parse_json_enum+0x294>
    50c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    50c8:	str	r3, [fp, #-24]	; 0xffffffe8
    50cc:	ldr	r3, [fp, #8]
    50d0:	str	r3, [sp]
    50d4:	mov	r3, #6
    50d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    50dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    50e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    50e4:	bl	0 <flatcc_json_parser_match_constant>
    50e8:	str	r0, [fp, #-36]	; 0xffffffdc
    50ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
    50f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    50f4:	cmp	r2, r3
    50f8:	beq	511c <MyGame_Example_int_enum_parse_json_enum+0x28c>
    50fc:	ldr	r1, [fp, #4]
    5100:	mvn	r2, #1
    5104:	mvn	r3, #0
    5108:	strd	r2, [r1]
    510c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5110:	mov	r2, #1
    5114:	str	r2, [r3]
    5118:	b	512c <MyGame_Example_int_enum_parse_json_enum+0x29c>
    511c:	ldr	r3, [fp, #-8]
    5120:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    5124:	ldr	r3, [fp, #-8]
    5128:	b	5130 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    512c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5130:	mov	r0, r3
    5134:	sub	sp, fp, #4
    5138:	pop	{fp, pc}
    513c:	nop			; (mov r0, r0)
    5140:	.word	0xffffffff
    5144:	.word	0x696e7431
    5148:	.word	0x00000000
    514c:	.word	0x696e7431
    5150:	.word	0x6566ffff
    5154:	.word	0x696e746e
    5158:	.word	0x00000000
    515c:	.word	0x696e7432
    5160:	.word	0x65673200
    5164:	.word	0x696e746e
    5168:	.word	0x65670000
    516c:	.word	0x696e746e
    5170:	.word	0xffff0000

00005174 <MyGame_Example_hex_enum_parse_json_enum>:
    5174:	push	{fp, lr}
    5178:	add	fp, sp, #4
    517c:	sub	sp, sp, #48	; 0x30
    5180:	str	r0, [fp, #-32]	; 0xffffffe0
    5184:	str	r1, [fp, #-36]	; 0xffffffdc
    5188:	str	r2, [fp, #-40]	; 0xffffffd8
    518c:	str	r3, [fp, #-44]	; 0xffffffd4
    5190:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5194:	str	r3, [fp, #-8]
    5198:	ldr	r1, [fp, #-40]	; 0xffffffd8
    519c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    51a0:	bl	fa8 <flatcc_json_parser_symbol_part>
    51a4:	strd	r0, [fp, #-20]	; 0xffffffec
    51a8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    51ac:	add	r1, pc, #452	; 0x1c4
    51b0:	ldrd	r0, [r1]
    51b4:	cmp	r3, r1
    51b8:	cmpeq	r2, r0
    51bc:	bhi	5250 <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    51c0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    51c4:	mov	r0, #0
    51c8:	mvn	r1, #0
    51cc:	and	r2, r2, r0
    51d0:	and	r3, r3, r1
    51d4:	add	r1, pc, #420	; 0x1a4
    51d8:	ldrd	r0, [r1]
    51dc:	cmp	r3, r1
    51e0:	cmpeq	r2, r0
    51e4:	bne	5248 <MyGame_Example_hex_enum_parse_json_enum+0xd4>
    51e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    51ec:	str	r3, [fp, #-24]	; 0xffffffe8
    51f0:	ldr	r3, [fp, #8]
    51f4:	str	r3, [sp]
    51f8:	mov	r3, #4
    51fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5200:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5204:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5208:	bl	0 <flatcc_json_parser_match_constant>
    520c:	str	r0, [fp, #-36]	; 0xffffffdc
    5210:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5214:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5218:	cmp	r2, r3
    521c:	beq	5240 <MyGame_Example_hex_enum_parse_json_enum+0xcc>
    5220:	ldr	r1, [fp, #4]
    5224:	mov	r2, #3
    5228:	mov	r3, #0
    522c:	strd	r2, [r1]
    5230:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5234:	mov	r2, #0
    5238:	str	r2, [r3]
    523c:	b	5368 <MyGame_Example_hex_enum_parse_json_enum+0x1f4>
    5240:	ldr	r3, [fp, #-8]
    5244:	b	536c <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    5248:	ldr	r3, [fp, #-8]
    524c:	b	536c <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    5250:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5254:	ldr	r0, [pc, #324]	; 53a0 <MyGame_Example_hex_enum_parse_json_enum+0x22c>
    5258:	mvn	r1, #0
    525c:	and	r2, r2, r0
    5260:	and	r3, r3, r1
    5264:	add	r1, pc, #284	; 0x11c
    5268:	ldrd	r0, [r1]
    526c:	cmp	r3, r1
    5270:	cmpeq	r2, r0
    5274:	bne	52d8 <MyGame_Example_hex_enum_parse_json_enum+0x164>
    5278:	ldr	r3, [fp, #-36]	; 0xffffffdc
    527c:	str	r3, [fp, #-24]	; 0xffffffe8
    5280:	ldr	r3, [fp, #8]
    5284:	str	r3, [sp]
    5288:	mov	r3, #6
    528c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5290:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5294:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5298:	bl	0 <flatcc_json_parser_match_constant>
    529c:	str	r0, [fp, #-36]	; 0xffffffdc
    52a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    52a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    52a8:	cmp	r2, r3
    52ac:	beq	52d0 <MyGame_Example_hex_enum_parse_json_enum+0x15c>
    52b0:	ldr	r1, [fp, #4]
    52b4:	mvn	r2, #1
    52b8:	mvn	r3, #0
    52bc:	strd	r2, [r1]
    52c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    52c4:	mov	r2, #1
    52c8:	str	r2, [r3]
    52cc:	b	5368 <MyGame_Example_hex_enum_parse_json_enum+0x1f4>
    52d0:	ldr	r3, [fp, #-8]
    52d4:	b	536c <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    52d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    52dc:	mov	r0, #0
    52e0:	mvn	r1, #0
    52e4:	and	r2, r2, r0
    52e8:	and	r3, r3, r1
    52ec:	add	r1, pc, #156	; 0x9c
    52f0:	ldrd	r0, [r1]
    52f4:	cmp	r3, r1
    52f8:	cmpeq	r2, r0
    52fc:	bne	5360 <MyGame_Example_hex_enum_parse_json_enum+0x1ec>
    5300:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5304:	str	r3, [fp, #-24]	; 0xffffffe8
    5308:	ldr	r3, [fp, #8]
    530c:	str	r3, [sp]
    5310:	mov	r3, #4
    5314:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5318:	ldr	r1, [fp, #-24]	; 0xffffffe8
    531c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5320:	bl	0 <flatcc_json_parser_match_constant>
    5324:	str	r0, [fp, #-36]	; 0xffffffdc
    5328:	ldr	r2, [fp, #-36]	; 0xffffffdc
    532c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5330:	cmp	r2, r3
    5334:	beq	5358 <MyGame_Example_hex_enum_parse_json_enum+0x1e4>
    5338:	ldr	r1, [fp, #4]
    533c:	add	r3, pc, #84	; 0x54
    5340:	ldrd	r2, [r3]
    5344:	strd	r2, [r1]
    5348:	ldr	r3, [fp, #-44]	; 0xffffffd4
    534c:	mov	r2, #0
    5350:	str	r2, [r3]
    5354:	b	5368 <MyGame_Example_hex_enum_parse_json_enum+0x1f4>
    5358:	ldr	r3, [fp, #-8]
    535c:	b	536c <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    5360:	ldr	r3, [fp, #-8]
    5364:	b	536c <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    5368:	ldr	r3, [fp, #-36]	; 0xffffffdc
    536c:	mov	r0, r3
    5370:	sub	sp, fp, #4
    5374:	pop	{fp, pc}
    5378:	.word	0xffffffff
    537c:	.word	0x68657831
    5380:	.word	0x00000000
    5384:	.word	0x68657831
    5388:	.word	0x65670000
    538c:	.word	0x6865786e
    5390:	.word	0x00000000
    5394:	.word	0x68657832
    5398:	.word	0x7eafbeaf
    539c:	.word	0x00000000
    53a0:	.word	0xffff0000

000053a4 <MyGame_Example_Color_parse_json_enum>:
    53a4:	push	{fp, lr}
    53a8:	add	fp, sp, #4
    53ac:	sub	sp, sp, #48	; 0x30
    53b0:	str	r0, [fp, #-32]	; 0xffffffe0
    53b4:	str	r1, [fp, #-36]	; 0xffffffdc
    53b8:	str	r2, [fp, #-40]	; 0xffffffd8
    53bc:	str	r3, [fp, #-44]	; 0xffffffd4
    53c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    53c4:	str	r3, [fp, #-8]
    53c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    53cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    53d0:	bl	fa8 <flatcc_json_parser_symbol_part>
    53d4:	strd	r0, [fp, #-20]	; 0xffffffec
    53d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    53dc:	add	r1, pc, #452	; 0x1c4
    53e0:	ldrd	r0, [r1]
    53e4:	cmp	r3, r1
    53e8:	cmpeq	r2, r0
    53ec:	bhi	5480 <MyGame_Example_Color_parse_json_enum+0xdc>
    53f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    53f4:	mov	r0, #0
    53f8:	mvn	r1, #0
    53fc:	and	r2, r2, r0
    5400:	and	r3, r3, r1
    5404:	add	r1, pc, #420	; 0x1a4
    5408:	ldrd	r0, [r1]
    540c:	cmp	r3, r1
    5410:	cmpeq	r2, r0
    5414:	bne	5478 <MyGame_Example_Color_parse_json_enum+0xd4>
    5418:	ldr	r3, [fp, #-36]	; 0xffffffdc
    541c:	str	r3, [fp, #-24]	; 0xffffffe8
    5420:	ldr	r3, [fp, #8]
    5424:	str	r3, [sp]
    5428:	mov	r3, #4
    542c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5430:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5434:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5438:	bl	0 <flatcc_json_parser_match_constant>
    543c:	str	r0, [fp, #-36]	; 0xffffffdc
    5440:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5444:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5448:	cmp	r2, r3
    544c:	beq	5470 <MyGame_Example_Color_parse_json_enum+0xcc>
    5450:	ldr	r1, [fp, #4]
    5454:	mov	r2, #8
    5458:	mov	r3, #0
    545c:	strd	r2, [r1]
    5460:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5464:	mov	r2, #0
    5468:	str	r2, [r3]
    546c:	b	5598 <MyGame_Example_Color_parse_json_enum+0x1f4>
    5470:	ldr	r3, [fp, #-8]
    5474:	b	559c <MyGame_Example_Color_parse_json_enum+0x1f8>
    5478:	ldr	r3, [fp, #-8]
    547c:	b	559c <MyGame_Example_Color_parse_json_enum+0x1f8>
    5480:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5484:	mov	r0, #0
    5488:	mvn	r1, #255	; 0xff
    548c:	and	r2, r2, r0
    5490:	and	r3, r3, r1
    5494:	add	r1, pc, #284	; 0x11c
    5498:	ldrd	r0, [r1]
    549c:	cmp	r3, r1
    54a0:	cmpeq	r2, r0
    54a4:	bne	5508 <MyGame_Example_Color_parse_json_enum+0x164>
    54a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    54ac:	str	r3, [fp, #-24]	; 0xffffffe8
    54b0:	ldr	r3, [fp, #8]
    54b4:	str	r3, [sp]
    54b8:	mov	r3, #3
    54bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    54c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    54c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    54c8:	bl	0 <flatcc_json_parser_match_constant>
    54cc:	str	r0, [fp, #-36]	; 0xffffffdc
    54d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    54d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    54d8:	cmp	r2, r3
    54dc:	beq	5500 <MyGame_Example_Color_parse_json_enum+0x15c>
    54e0:	ldr	r1, [fp, #4]
    54e4:	mov	r2, #1
    54e8:	mov	r3, #0
    54ec:	strd	r2, [r1]
    54f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    54f4:	mov	r2, #0
    54f8:	str	r2, [r3]
    54fc:	b	5598 <MyGame_Example_Color_parse_json_enum+0x1f4>
    5500:	ldr	r3, [fp, #-8]
    5504:	b	559c <MyGame_Example_Color_parse_json_enum+0x1f8>
    5508:	ldrd	r2, [fp, #-20]	; 0xffffffec
    550c:	mov	r0, #-16777216	; 0xff000000
    5510:	mvn	r1, #0
    5514:	and	r2, r2, r0
    5518:	and	r3, r3, r1
    551c:	add	r1, pc, #156	; 0x9c
    5520:	ldrd	r0, [r1]
    5524:	cmp	r3, r1
    5528:	cmpeq	r2, r0
    552c:	bne	5590 <MyGame_Example_Color_parse_json_enum+0x1ec>
    5530:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5534:	str	r3, [fp, #-24]	; 0xffffffe8
    5538:	ldr	r3, [fp, #8]
    553c:	str	r3, [sp]
    5540:	mov	r3, #5
    5544:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5548:	ldr	r1, [fp, #-24]	; 0xffffffe8
    554c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5550:	bl	0 <flatcc_json_parser_match_constant>
    5554:	str	r0, [fp, #-36]	; 0xffffffdc
    5558:	ldr	r2, [fp, #-36]	; 0xffffffdc
    555c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5560:	cmp	r2, r3
    5564:	beq	5588 <MyGame_Example_Color_parse_json_enum+0x1e4>
    5568:	ldr	r1, [fp, #4]
    556c:	mov	r2, #2
    5570:	mov	r3, #0
    5574:	strd	r2, [r1]
    5578:	ldr	r3, [fp, #-44]	; 0xffffffd4
    557c:	mov	r2, #0
    5580:	str	r2, [r3]
    5584:	b	5598 <MyGame_Example_Color_parse_json_enum+0x1f4>
    5588:	ldr	r3, [fp, #-8]
    558c:	b	559c <MyGame_Example_Color_parse_json_enum+0x1f8>
    5590:	ldr	r3, [fp, #-8]
    5594:	b	559c <MyGame_Example_Color_parse_json_enum+0x1f8>
    5598:	ldr	r3, [fp, #-36]	; 0xffffffdc
    559c:	mov	r0, r3
    55a0:	sub	sp, fp, #4
    55a4:	pop	{fp, pc}
    55a8:	.word	0x6dffffff
    55ac:	.word	0x47726565
    55b0:	.word	0x00000000
    55b4:	.word	0x426c7565
    55b8:	.word	0x00000000
    55bc:	.word	0x52656400
    55c0:	.word	0x6e000000
    55c4:	.word	0x47726565

000055c8 <MyGame_Example_Any_parse_json_union>:
    55c8:	push	{fp, lr}
    55cc:	add	fp, sp, #4
    55d0:	sub	sp, sp, #16
    55d4:	str	r0, [fp, #-8]
    55d8:	str	r1, [fp, #-12]
    55dc:	str	r2, [fp, #-16]
    55e0:	strb	r3, [fp, #-17]	; 0xffffffef
    55e4:	ldr	r3, [fp, #4]
    55e8:	mov	r2, #0
    55ec:	str	r2, [r3]
    55f0:	ldrb	r3, [fp, #-17]	; 0xffffffef
    55f4:	cmp	r3, #4
    55f8:	ldrls	pc, [pc, r3, lsl #2]
    55fc:	b	569c <MyGame_Example_Any_parse_json_union+0xd4>
    5600:	.word	0x00005614
    5604:	.word	0x0000562c
    5608:	.word	0x00005648
    560c:	.word	0x00005664
    5610:	.word	0x00005680
    5614:	ldr	r2, [fp, #-16]
    5618:	ldr	r1, [fp, #-12]
    561c:	ldr	r0, [fp, #-8]
    5620:	bl	1d18 <flatcc_json_parser_none>
    5624:	mov	r3, r0
    5628:	b	572c <MyGame_Example_Any_parse_json_union+0x164>
    562c:	ldr	r3, [fp, #4]
    5630:	ldr	r2, [fp, #-16]
    5634:	ldr	r1, [fp, #-12]
    5638:	ldr	r0, [fp, #-8]
    563c:	bl	a7e4 <MyGame_Example_Monster_parse_json_table>
    5640:	str	r0, [fp, #-12]
    5644:	b	56e4 <MyGame_Example_Any_parse_json_union+0x11c>
    5648:	ldr	r3, [fp, #4]
    564c:	ldr	r2, [fp, #-16]
    5650:	ldr	r1, [fp, #-12]
    5654:	ldr	r0, [fp, #-8]
    5658:	bl	6460 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    565c:	str	r0, [fp, #-12]
    5660:	b	56e4 <MyGame_Example_Any_parse_json_union+0x11c>
    5664:	ldr	r3, [fp, #4]
    5668:	ldr	r2, [fp, #-16]
    566c:	ldr	r1, [fp, #-12]
    5670:	ldr	r0, [fp, #-8]
    5674:	bl	47f0 <MyGame_Example2_Monster_parse_json_table>
    5678:	str	r0, [fp, #-12]
    567c:	b	56e4 <MyGame_Example_Any_parse_json_union+0x11c>
    5680:	ldr	r3, [fp, #4]
    5684:	ldr	r2, [fp, #-16]
    5688:	ldr	r1, [fp, #-12]
    568c:	ldr	r0, [fp, #-8]
    5690:	bl	8584 <MyGame_Example_Alt_parse_json_table>
    5694:	str	r0, [fp, #-12]
    5698:	b	56e4 <MyGame_Example_Any_parse_json_union+0x11c>
    569c:	ldr	r3, [fp, #-8]
    56a0:	ldr	r3, [r3, #8]
    56a4:	and	r3, r3, #1
    56a8:	cmp	r3, #0
    56ac:	bne	56cc <MyGame_Example_Any_parse_json_union+0x104>
    56b0:	mov	r3, #15
    56b4:	ldr	r2, [fp, #-16]
    56b8:	ldr	r1, [fp, #-12]
    56bc:	ldr	r0, [fp, #-8]
    56c0:	bl	0 <flatcc_json_parser_set_error>
    56c4:	mov	r3, r0
    56c8:	b	572c <MyGame_Example_Any_parse_json_union+0x164>
    56cc:	ldr	r2, [fp, #-16]
    56d0:	ldr	r1, [fp, #-12]
    56d4:	ldr	r0, [fp, #-8]
    56d8:	bl	0 <flatcc_json_parser_generic_json>
    56dc:	mov	r3, r0
    56e0:	b	572c <MyGame_Example_Any_parse_json_union+0x164>
    56e4:	ldr	r3, [fp, #-8]
    56e8:	ldr	r3, [r3, #24]
    56ec:	cmp	r3, #0
    56f0:	beq	56fc <MyGame_Example_Any_parse_json_union+0x134>
    56f4:	ldr	r3, [fp, #-12]
    56f8:	b	572c <MyGame_Example_Any_parse_json_union+0x164>
    56fc:	ldr	r3, [fp, #4]
    5700:	ldr	r3, [r3]
    5704:	cmp	r3, #0
    5708:	bne	5728 <MyGame_Example_Any_parse_json_union+0x160>
    570c:	mov	r3, #33	; 0x21
    5710:	ldr	r2, [fp, #-16]
    5714:	ldr	r1, [fp, #-12]
    5718:	ldr	r0, [fp, #-8]
    571c:	bl	0 <flatcc_json_parser_set_error>
    5720:	mov	r3, r0
    5724:	b	572c <MyGame_Example_Any_parse_json_union+0x164>
    5728:	ldr	r3, [fp, #-12]
    572c:	mov	r0, r3
    5730:	sub	sp, fp, #4
    5734:	pop	{fp, pc}

00005738 <MyGame_Example_Any_json_union_accept_type>:
    5738:	push	{fp}		; (str fp, [sp, #-4]!)
    573c:	add	fp, sp, #0
    5740:	sub	sp, sp, #12
    5744:	mov	r3, r0
    5748:	strb	r3, [fp, #-5]
    574c:	ldrb	r3, [fp, #-5]
    5750:	cmp	r3, #4
    5754:	ldrls	pc, [pc, r3, lsl #2]
    5758:	b	5798 <MyGame_Example_Any_json_union_accept_type+0x60>
    575c:	.word	0x00005770
    5760:	.word	0x00005778
    5764:	.word	0x00005780
    5768:	.word	0x00005788
    576c:	.word	0x00005790
    5770:	mov	r3, #1
    5774:	b	579c <MyGame_Example_Any_json_union_accept_type+0x64>
    5778:	mov	r3, #1
    577c:	b	579c <MyGame_Example_Any_json_union_accept_type+0x64>
    5780:	mov	r3, #1
    5784:	b	579c <MyGame_Example_Any_json_union_accept_type+0x64>
    5788:	mov	r3, #1
    578c:	b	579c <MyGame_Example_Any_json_union_accept_type+0x64>
    5790:	mov	r3, #1
    5794:	b	579c <MyGame_Example_Any_json_union_accept_type+0x64>
    5798:	mov	r3, #0
    579c:	mov	r0, r3
    57a0:	add	sp, fp, #0
    57a4:	pop	{fp}		; (ldr fp, [sp], #4)
    57a8:	bx	lr

000057ac <MyGame_Example_Any_parse_json_enum>:
    57ac:	push	{fp, lr}
    57b0:	add	fp, sp, #4
    57b4:	sub	sp, sp, #48	; 0x30
    57b8:	str	r0, [fp, #-32]	; 0xffffffe0
    57bc:	str	r1, [fp, #-36]	; 0xffffffdc
    57c0:	str	r2, [fp, #-40]	; 0xffffffd8
    57c4:	str	r3, [fp, #-44]	; 0xffffffd4
    57c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    57cc:	str	r3, [fp, #-8]
    57d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    57d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    57d8:	bl	fa8 <flatcc_json_parser_symbol_part>
    57dc:	strd	r0, [fp, #-20]	; 0xffffffec
    57e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    57e4:	add	r1, pc, #836	; 0x344
    57e8:	ldrd	r0, [r1]
    57ec:	cmp	r3, r1
    57f0:	cmpeq	r2, r0
    57f4:	bhi	5888 <MyGame_Example_Any_parse_json_enum+0xdc>
    57f8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    57fc:	mov	r0, #0
    5800:	mvn	r1, #255	; 0xff
    5804:	and	r2, r2, r0
    5808:	and	r3, r3, r1
    580c:	add	r1, pc, #804	; 0x324
    5810:	ldrd	r0, [r1]
    5814:	cmp	r3, r1
    5818:	cmpeq	r2, r0
    581c:	bne	5880 <MyGame_Example_Any_parse_json_enum+0xd4>
    5820:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5824:	str	r3, [fp, #-24]	; 0xffffffe8
    5828:	ldr	r3, [fp, #8]
    582c:	str	r3, [sp]
    5830:	mov	r3, #3
    5834:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5838:	ldr	r1, [fp, #-24]	; 0xffffffe8
    583c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5840:	bl	0 <flatcc_json_parser_match_constant>
    5844:	str	r0, [fp, #-36]	; 0xffffffdc
    5848:	ldr	r2, [fp, #-36]	; 0xffffffdc
    584c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5850:	cmp	r2, r3
    5854:	beq	5878 <MyGame_Example_Any_parse_json_enum+0xcc>
    5858:	ldr	r1, [fp, #4]
    585c:	mov	r2, #4
    5860:	mov	r3, #0
    5864:	strd	r2, [r1]
    5868:	ldr	r3, [fp, #-44]	; 0xffffffd4
    586c:	mov	r2, #0
    5870:	str	r2, [r3]
    5874:	b	5b20 <MyGame_Example_Any_parse_json_enum+0x374>
    5878:	ldr	r3, [fp, #-8]
    587c:	b	5b24 <MyGame_Example_Any_parse_json_enum+0x378>
    5880:	ldr	r3, [fp, #-8]
    5884:	b	5b24 <MyGame_Example_Any_parse_json_enum+0x378>
    5888:	ldrd	r2, [fp, #-20]	; 0xffffffec
    588c:	add	r1, pc, #684	; 0x2ac
    5890:	ldrd	r0, [r1]
    5894:	cmp	r3, r1
    5898:	cmpeq	r2, r0
    589c:	bne	58f8 <MyGame_Example_Any_parse_json_enum+0x14c>
    58a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    58a4:	str	r3, [fp, #-24]	; 0xffffffe8
    58a8:	ldr	r3, [fp, #8]
    58ac:	str	r3, [sp]
    58b0:	mov	r3, #8
    58b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    58b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    58bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    58c0:	bl	0 <flatcc_json_parser_match_constant>
    58c4:	str	r0, [fp, #-36]	; 0xffffffdc
    58c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    58cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    58d0:	cmp	r2, r3
    58d4:	beq	5978 <MyGame_Example_Any_parse_json_enum+0x1cc>
    58d8:	ldr	r1, [fp, #4]
    58dc:	mov	r2, #3
    58e0:	mov	r3, #0
    58e4:	strd	r2, [r1]
    58e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    58ec:	mov	r2, #0
    58f0:	str	r2, [r3]
    58f4:	b	5b20 <MyGame_Example_Any_parse_json_enum+0x374>
    58f8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    58fc:	mvn	r0, #255	; 0xff
    5900:	mvn	r1, #0
    5904:	and	r2, r2, r0
    5908:	and	r3, r3, r1
    590c:	add	r1, pc, #564	; 0x234
    5910:	ldrd	r0, [r1]
    5914:	cmp	r3, r1
    5918:	cmpeq	r2, r0
    591c:	bne	5980 <MyGame_Example_Any_parse_json_enum+0x1d4>
    5920:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5924:	str	r3, [fp, #-24]	; 0xffffffe8
    5928:	ldr	r3, [fp, #8]
    592c:	str	r3, [sp]
    5930:	mov	r3, #7
    5934:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5938:	ldr	r1, [fp, #-24]	; 0xffffffe8
    593c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5940:	bl	0 <flatcc_json_parser_match_constant>
    5944:	str	r0, [fp, #-36]	; 0xffffffdc
    5948:	ldr	r2, [fp, #-36]	; 0xffffffdc
    594c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5950:	cmp	r2, r3
    5954:	beq	5988 <MyGame_Example_Any_parse_json_enum+0x1dc>
    5958:	ldr	r1, [fp, #4]
    595c:	mov	r2, #1
    5960:	mov	r3, #0
    5964:	strd	r2, [r1]
    5968:	ldr	r3, [fp, #-44]	; 0xffffffd4
    596c:	mov	r2, #0
    5970:	str	r2, [r3]
    5974:	b	5b20 <MyGame_Example_Any_parse_json_enum+0x374>
    5978:	nop			; (mov r0, r0)
    597c:	b	598c <MyGame_Example_Any_parse_json_enum+0x1e0>
    5980:	nop			; (mov r0, r0)
    5984:	b	598c <MyGame_Example_Any_parse_json_enum+0x1e0>
    5988:	nop			; (mov r0, r0)
    598c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5990:	mov	r0, #0
    5994:	mvn	r1, #0
    5998:	and	r2, r2, r0
    599c:	and	r3, r3, r1
    59a0:	add	r1, pc, #424	; 0x1a8
    59a4:	ldrd	r0, [r1]
    59a8:	cmp	r3, r1
    59ac:	cmpeq	r2, r0
    59b0:	bne	5a0c <MyGame_Example_Any_parse_json_enum+0x260>
    59b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    59b8:	str	r3, [fp, #-24]	; 0xffffffe8
    59bc:	ldr	r3, [fp, #8]
    59c0:	str	r3, [sp]
    59c4:	mov	r3, #4
    59c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    59cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    59d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    59d4:	bl	0 <flatcc_json_parser_match_constant>
    59d8:	str	r0, [fp, #-36]	; 0xffffffdc
    59dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    59e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    59e4:	cmp	r2, r3
    59e8:	beq	5a14 <MyGame_Example_Any_parse_json_enum+0x268>
    59ec:	ldr	r1, [fp, #4]
    59f0:	mov	r2, #0
    59f4:	mov	r3, #0
    59f8:	strd	r2, [r1]
    59fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5a00:	mov	r2, #0
    5a04:	str	r2, [r3]
    5a08:	b	5b20 <MyGame_Example_Any_parse_json_enum+0x374>
    5a0c:	nop			; (mov r0, r0)
    5a10:	b	5a18 <MyGame_Example_Any_parse_json_enum+0x26c>
    5a14:	nop			; (mov r0, r0)
    5a18:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5a1c:	add	r1, pc, #308	; 0x134
    5a20:	ldrd	r0, [r1]
    5a24:	cmp	r3, r1
    5a28:	cmpeq	r2, r0
    5a2c:	bne	5b18 <MyGame_Example_Any_parse_json_enum+0x36c>
    5a30:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5a34:	add	r3, r3, #8
    5a38:	str	r3, [fp, #-36]	; 0xffffffdc
    5a3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5a40:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5a44:	bl	fa8 <flatcc_json_parser_symbol_part>
    5a48:	strd	r0, [fp, #-20]	; 0xffffffec
    5a4c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5a50:	add	r1, pc, #264	; 0x108
    5a54:	ldrd	r0, [r1]
    5a58:	cmp	r3, r1
    5a5c:	cmpeq	r2, r0
    5a60:	bne	5b10 <MyGame_Example_Any_parse_json_enum+0x364>
    5a64:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5a68:	add	r3, r3, #8
    5a6c:	str	r3, [fp, #-36]	; 0xffffffdc
    5a70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5a74:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5a78:	bl	fa8 <flatcc_json_parser_symbol_part>
    5a7c:	strd	r0, [fp, #-20]	; 0xffffffec
    5a80:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5a84:	mvn	r0, #255	; 0xff
    5a88:	mvn	r1, #0
    5a8c:	and	r2, r2, r0
    5a90:	and	r3, r3, r1
    5a94:	add	r1, pc, #204	; 0xcc
    5a98:	ldrd	r0, [r1]
    5a9c:	cmp	r3, r1
    5aa0:	cmpeq	r2, r0
    5aa4:	bne	5b08 <MyGame_Example_Any_parse_json_enum+0x35c>
    5aa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5aac:	str	r3, [fp, #-24]	; 0xffffffe8
    5ab0:	ldr	r3, [fp, #8]
    5ab4:	str	r3, [sp]
    5ab8:	mov	r3, #7
    5abc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5ac8:	bl	0 <flatcc_json_parser_match_constant>
    5acc:	str	r0, [fp, #-36]	; 0xffffffdc
    5ad0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ad8:	cmp	r2, r3
    5adc:	beq	5b00 <MyGame_Example_Any_parse_json_enum+0x354>
    5ae0:	ldr	r1, [fp, #4]
    5ae4:	mov	r2, #2
    5ae8:	mov	r3, #0
    5aec:	strd	r2, [r1]
    5af0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5af4:	mov	r2, #0
    5af8:	str	r2, [r3]
    5afc:	b	5b20 <MyGame_Example_Any_parse_json_enum+0x374>
    5b00:	ldr	r3, [fp, #-8]
    5b04:	b	5b24 <MyGame_Example_Any_parse_json_enum+0x378>
    5b08:	ldr	r3, [fp, #-8]
    5b0c:	b	5b24 <MyGame_Example_Any_parse_json_enum+0x378>
    5b10:	ldr	r3, [fp, #-8]
    5b14:	b	5b24 <MyGame_Example_Any_parse_json_enum+0x378>
    5b18:	ldr	r3, [fp, #-8]
    5b1c:	b	5b24 <MyGame_Example_Any_parse_json_enum+0x378>
    5b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5b24:	mov	r0, r3
    5b28:	sub	sp, fp, #4
    5b2c:	pop	{fp, pc}
    5b30:	.word	0x746571ff
    5b34:	.word	0x4d6f6e73
    5b38:	.word	0x00000000
    5b3c:	.word	0x416c7400
    5b40:	.word	0x74657232
    5b44:	.word	0x4d6f6e73
    5b48:	.word	0x74657200
    5b4c:	.word	0x4d6f6e73
    5b50:	.word	0x00000000
    5b54:	.word	0x4e4f4e45
    5b58:	.word	0x53696d70
    5b5c:	.word	0x54657374
    5b60:	.word	0x626c6557
    5b64:	.word	0x6c655461
    5b68:	.word	0x6e756d00
    5b6c:	.word	0x69746845

00005b70 <MyGame_Example_Test_parse_json_struct_inline>:
    5b70:	push	{fp, lr}
    5b74:	add	fp, sp, #4
    5b78:	sub	sp, sp, #48	; 0x30
    5b7c:	str	r0, [fp, #-32]	; 0xffffffe0
    5b80:	str	r1, [fp, #-36]	; 0xffffffdc
    5b84:	str	r2, [fp, #-40]	; 0xffffffd8
    5b88:	str	r3, [fp, #-44]	; 0xffffffd4
    5b8c:	sub	r3, fp, #24
    5b90:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5b94:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5b98:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b9c:	bl	10d4 <flatcc_json_parser_object_start>
    5ba0:	str	r0, [fp, #-36]	; 0xffffffdc
    5ba4:	b	5e04 <MyGame_Example_Test_parse_json_struct_inline+0x294>
    5ba8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5bac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5bb4:	bl	cc4 <flatcc_json_parser_symbol_start>
    5bb8:	str	r0, [fp, #-36]	; 0xffffffdc
    5bbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5bc4:	bl	fa8 <flatcc_json_parser_symbol_part>
    5bc8:	strd	r0, [fp, #-12]
    5bcc:	ldrd	r2, [fp, #-12]
    5bd0:	mov	r0, #0
    5bd4:	mov	r1, #-16777216	; 0xff000000
    5bd8:	and	r2, r2, r0
    5bdc:	and	r3, r3, r1
    5be0:	cmp	r3, #1644167168	; 0x62000000
    5be4:	cmpeq	r2, #0
    5be8:	bne	5cd4 <MyGame_Example_Test_parse_json_struct_inline+0x164>
    5bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5bf0:	str	r3, [fp, #-16]
    5bf4:	mov	r3, #1
    5bf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5bfc:	ldr	r1, [fp, #-16]
    5c00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5c04:	bl	1574 <flatcc_json_parser_match_symbol>
    5c08:	str	r0, [fp, #-36]	; 0xffffffdc
    5c0c:	ldr	r2, [fp, #-16]
    5c10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5c14:	cmp	r2, r3
    5c18:	beq	5cbc <MyGame_Example_Test_parse_json_struct_inline+0x14c>
    5c1c:	mov	r3, #0
    5c20:	strb	r3, [fp, #-25]	; 0xffffffe7
    5c24:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c28:	add	r3, r3, #2
    5c2c:	str	r3, [fp, #-20]	; 0xffffffec
    5c30:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5c34:	str	r3, [fp, #-16]
    5c38:	sub	r3, fp, #25
    5c3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5c40:	ldr	r1, [fp, #-16]
    5c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5c48:	bl	234c <flatcc_json_parser_int8>
    5c4c:	str	r0, [fp, #-36]	; 0xffffffdc
    5c50:	ldr	r2, [fp, #-16]
    5c54:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5c58:	cmp	r2, r3
    5c5c:	bne	5ca8 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    5c60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5c64:	str	r3, [fp, #-16]
    5c68:	sub	r3, fp, #25
    5c6c:	str	r3, [sp]
    5c70:	ldr	r3, [pc, #452]	; 5e3c <MyGame_Example_Test_parse_json_struct_inline+0x2cc>
    5c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5c78:	ldr	r1, [fp, #-16]
    5c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5c80:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    5c84:	str	r0, [fp, #-36]	; 0xffffffdc
    5c88:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5c8c:	ldr	r3, [fp, #-16]
    5c90:	cmp	r2, r3
    5c94:	beq	5e18 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5c98:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5c9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5ca0:	cmp	r2, r3
    5ca4:	beq	5e18 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5ca8:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    5cac:	mov	r1, r3
    5cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
    5cb4:	bl	208 <flatbuffers_int8_write_to_pe>
    5cb8:	b	5dec <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5cbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5cc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5cc8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5ccc:	str	r0, [fp, #-36]	; 0xffffffdc
    5cd0:	b	5dec <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5cd4:	ldrd	r2, [fp, #-12]
    5cd8:	mov	r0, #0
    5cdc:	mov	r1, #-16777216	; 0xff000000
    5ce0:	and	r2, r2, r0
    5ce4:	and	r3, r3, r1
    5ce8:	cmp	r3, #1627389952	; 0x61000000
    5cec:	cmpeq	r2, #0
    5cf0:	bne	5dd8 <MyGame_Example_Test_parse_json_struct_inline+0x268>
    5cf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5cf8:	str	r3, [fp, #-16]
    5cfc:	mov	r3, #1
    5d00:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5d04:	ldr	r1, [fp, #-16]
    5d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d0c:	bl	1574 <flatcc_json_parser_match_symbol>
    5d10:	str	r0, [fp, #-36]	; 0xffffffdc
    5d14:	ldr	r2, [fp, #-16]
    5d18:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5d1c:	cmp	r2, r3
    5d20:	beq	5dc0 <MyGame_Example_Test_parse_json_struct_inline+0x250>
    5d24:	mov	r3, #0
    5d28:	strh	r3, [fp, #-28]	; 0xffffffe4
    5d2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5d30:	str	r3, [fp, #-20]	; 0xffffffec
    5d34:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5d38:	str	r3, [fp, #-16]
    5d3c:	sub	r3, fp, #28
    5d40:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5d44:	ldr	r1, [fp, #-16]
    5d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d4c:	bl	227c <flatcc_json_parser_int16>
    5d50:	str	r0, [fp, #-36]	; 0xffffffdc
    5d54:	ldr	r2, [fp, #-16]
    5d58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5d5c:	cmp	r2, r3
    5d60:	bne	5dac <MyGame_Example_Test_parse_json_struct_inline+0x23c>
    5d64:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5d68:	str	r3, [fp, #-16]
    5d6c:	sub	r3, fp, #28
    5d70:	str	r3, [sp]
    5d74:	ldr	r3, [pc, #196]	; 5e40 <MyGame_Example_Test_parse_json_struct_inline+0x2d0>
    5d78:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5d7c:	ldr	r1, [fp, #-16]
    5d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d84:	bl	3008 <flatcc_json_parser_symbolic_int16>
    5d88:	str	r0, [fp, #-36]	; 0xffffffdc
    5d8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5d90:	ldr	r3, [fp, #-16]
    5d94:	cmp	r2, r3
    5d98:	beq	5e18 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5d9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5da4:	cmp	r2, r3
    5da8:	beq	5e18 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5dac:	ldrsh	r3, [fp, #-28]	; 0xffffffe4
    5db0:	mov	r1, r3
    5db4:	ldr	r0, [fp, #-20]	; 0xffffffec
    5db8:	bl	2c8 <flatbuffers_int16_write_to_pe>
    5dbc:	b	5dec <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5dc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5dc4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5dcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5dd0:	str	r0, [fp, #-36]	; 0xffffffdc
    5dd4:	b	5dec <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5dd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5ddc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5de4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5de8:	str	r0, [fp, #-36]	; 0xffffffdc
    5dec:	sub	r3, fp, #24
    5df0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5df4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5dfc:	bl	11bc <flatcc_json_parser_object_end>
    5e00:	str	r0, [fp, #-36]	; 0xffffffdc
    5e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5e08:	cmp	r3, #0
    5e0c:	bne	5ba8 <MyGame_Example_Test_parse_json_struct_inline+0x38>
    5e10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5e14:	b	5e30 <MyGame_Example_Test_parse_json_struct_inline+0x2c0>
    5e18:	mov	r3, #33	; 0x21
    5e1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5e20:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5e28:	bl	0 <flatcc_json_parser_set_error>
    5e2c:	mov	r3, r0
    5e30:	mov	r0, r3
    5e34:	sub	sp, fp, #4
    5e38:	pop	{fp, pc}
    5e3c:	.word	0x0000000c
    5e40:	.word	0x00000018

00005e44 <MyGame_Example_Test_parse_json_struct>:
    5e44:	push	{fp, lr}
    5e48:	add	fp, sp, #4
    5e4c:	sub	sp, sp, #24
    5e50:	str	r0, [fp, #-16]
    5e54:	str	r1, [fp, #-20]	; 0xffffffec
    5e58:	str	r2, [fp, #-24]	; 0xffffffe8
    5e5c:	str	r3, [fp, #-28]	; 0xffffffe4
    5e60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5e64:	mov	r2, #0
    5e68:	str	r2, [r3]
    5e6c:	ldr	r3, [fp, #-16]
    5e70:	ldr	r3, [r3]
    5e74:	mov	r2, #2
    5e78:	mov	r1, #4
    5e7c:	mov	r0, r3
    5e80:	bl	0 <flatcc_builder_start_struct>
    5e84:	str	r0, [fp, #-8]
    5e88:	ldr	r3, [fp, #-8]
    5e8c:	cmp	r3, #0
    5e90:	beq	5ef0 <MyGame_Example_Test_parse_json_struct+0xac>
    5e94:	ldr	r3, [fp, #-8]
    5e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ea0:	ldr	r0, [fp, #-16]
    5ea4:	bl	5b70 <MyGame_Example_Test_parse_json_struct_inline>
    5ea8:	str	r0, [fp, #-20]	; 0xffffffec
    5eac:	ldr	r2, [fp, #-20]	; 0xffffffec
    5eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5eb4:	cmp	r2, r3
    5eb8:	beq	5ef4 <MyGame_Example_Test_parse_json_struct+0xb0>
    5ebc:	ldr	r3, [fp, #-16]
    5ec0:	ldr	r3, [r3]
    5ec4:	mov	r0, r3
    5ec8:	bl	0 <flatcc_builder_end_struct>
    5ecc:	mov	r2, r0
    5ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ed4:	str	r2, [r3]
    5ed8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5edc:	ldr	r3, [r3]
    5ee0:	cmp	r3, #0
    5ee4:	beq	5ef4 <MyGame_Example_Test_parse_json_struct+0xb0>
    5ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
    5eec:	b	5f0c <MyGame_Example_Test_parse_json_struct+0xc8>
    5ef0:	nop			; (mov r0, r0)
    5ef4:	mov	r3, #33	; 0x21
    5ef8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5efc:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f00:	ldr	r0, [fp, #-16]
    5f04:	bl	0 <flatcc_json_parser_set_error>
    5f08:	mov	r3, r0
    5f0c:	mov	r0, r3
    5f10:	sub	sp, fp, #4
    5f14:	pop	{fp, pc}

00005f18 <MyGame_Example_emptystruct_parse_json_struct_inline>:
    5f18:	push	{fp, lr}
    5f1c:	add	fp, sp, #4
    5f20:	sub	sp, sp, #24
    5f24:	str	r0, [fp, #-16]
    5f28:	str	r1, [fp, #-20]	; 0xffffffec
    5f2c:	str	r2, [fp, #-24]	; 0xffffffe8
    5f30:	str	r3, [fp, #-28]	; 0xffffffe4
    5f34:	sub	r3, fp, #8
    5f38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f40:	ldr	r0, [fp, #-16]
    5f44:	bl	10d4 <flatcc_json_parser_object_start>
    5f48:	str	r0, [fp, #-20]	; 0xffffffec
    5f4c:	b	5f7c <MyGame_Example_emptystruct_parse_json_struct_inline+0x64>
    5f50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f54:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f58:	ldr	r0, [fp, #-16]
    5f5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5f60:	str	r0, [fp, #-20]	; 0xffffffec
    5f64:	sub	r3, fp, #8
    5f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f70:	ldr	r0, [fp, #-16]
    5f74:	bl	11bc <flatcc_json_parser_object_end>
    5f78:	str	r0, [fp, #-20]	; 0xffffffec
    5f7c:	ldr	r3, [fp, #-8]
    5f80:	cmp	r3, #0
    5f84:	bne	5f50 <MyGame_Example_emptystruct_parse_json_struct_inline+0x38>
    5f88:	ldr	r3, [fp, #-20]	; 0xffffffec
    5f8c:	mov	r0, r3
    5f90:	sub	sp, fp, #4
    5f94:	pop	{fp, pc}

00005f98 <MyGame_Example_emptystruct_parse_json_struct>:
    5f98:	push	{fp, lr}
    5f9c:	add	fp, sp, #4
    5fa0:	sub	sp, sp, #24
    5fa4:	str	r0, [fp, #-16]
    5fa8:	str	r1, [fp, #-20]	; 0xffffffec
    5fac:	str	r2, [fp, #-24]	; 0xffffffe8
    5fb0:	str	r3, [fp, #-28]	; 0xffffffe4
    5fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5fb8:	mov	r2, #0
    5fbc:	str	r2, [r3]
    5fc0:	ldr	r3, [fp, #-16]
    5fc4:	ldr	r3, [r3]
    5fc8:	mov	r2, #1
    5fcc:	mov	r1, #0
    5fd0:	mov	r0, r3
    5fd4:	bl	0 <flatcc_builder_start_struct>
    5fd8:	str	r0, [fp, #-8]
    5fdc:	ldr	r3, [fp, #-8]
    5fe0:	cmp	r3, #0
    5fe4:	beq	6044 <MyGame_Example_emptystruct_parse_json_struct+0xac>
    5fe8:	ldr	r3, [fp, #-8]
    5fec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ff0:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ff4:	ldr	r0, [fp, #-16]
    5ff8:	bl	5f18 <MyGame_Example_emptystruct_parse_json_struct_inline>
    5ffc:	str	r0, [fp, #-20]	; 0xffffffec
    6000:	ldr	r2, [fp, #-20]	; 0xffffffec
    6004:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6008:	cmp	r2, r3
    600c:	beq	6048 <MyGame_Example_emptystruct_parse_json_struct+0xb0>
    6010:	ldr	r3, [fp, #-16]
    6014:	ldr	r3, [r3]
    6018:	mov	r0, r3
    601c:	bl	0 <flatcc_builder_end_struct>
    6020:	mov	r2, r0
    6024:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6028:	str	r2, [r3]
    602c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6030:	ldr	r3, [r3]
    6034:	cmp	r3, #0
    6038:	beq	6048 <MyGame_Example_emptystruct_parse_json_struct+0xb0>
    603c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6040:	b	6060 <MyGame_Example_emptystruct_parse_json_struct+0xc8>
    6044:	nop			; (mov r0, r0)
    6048:	mov	r3, #33	; 0x21
    604c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6050:	ldr	r1, [fp, #-20]	; 0xffffffec
    6054:	ldr	r0, [fp, #-16]
    6058:	bl	0 <flatcc_json_parser_set_error>
    605c:	mov	r3, r0
    6060:	mov	r0, r3
    6064:	sub	sp, fp, #4
    6068:	pop	{fp, pc}

0000606c <MyGame_Example_emptytable_parse_json_table>:
    606c:	push	{fp, lr}
    6070:	add	fp, sp, #4
    6074:	sub	sp, sp, #24
    6078:	str	r0, [fp, #-16]
    607c:	str	r1, [fp, #-20]	; 0xffffffec
    6080:	str	r2, [fp, #-24]	; 0xffffffe8
    6084:	str	r3, [fp, #-28]	; 0xffffffe4
    6088:	ldr	r3, [fp, #-28]	; 0xffffffe4
    608c:	mov	r2, #0
    6090:	str	r2, [r3]
    6094:	ldr	r3, [fp, #-16]
    6098:	ldr	r3, [r3]
    609c:	mov	r1, #0
    60a0:	mov	r0, r3
    60a4:	bl	0 <flatcc_builder_start_table>
    60a8:	mov	r3, r0
    60ac:	cmp	r3, #0
    60b0:	bne	6160 <MyGame_Example_emptytable_parse_json_table+0xf4>
    60b4:	sub	r3, fp, #8
    60b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    60bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    60c0:	ldr	r0, [fp, #-16]
    60c4:	bl	10d4 <flatcc_json_parser_object_start>
    60c8:	str	r0, [fp, #-20]	; 0xffffffec
    60cc:	b	6110 <MyGame_Example_emptytable_parse_json_table+0xa4>
    60d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    60d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    60d8:	ldr	r0, [fp, #-16]
    60dc:	bl	cc4 <flatcc_json_parser_symbol_start>
    60e0:	str	r0, [fp, #-20]	; 0xffffffec
    60e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    60e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    60ec:	ldr	r0, [fp, #-16]
    60f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60f4:	str	r0, [fp, #-20]	; 0xffffffec
    60f8:	sub	r3, fp, #8
    60fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6100:	ldr	r1, [fp, #-20]	; 0xffffffec
    6104:	ldr	r0, [fp, #-16]
    6108:	bl	11bc <flatcc_json_parser_object_end>
    610c:	str	r0, [fp, #-20]	; 0xffffffec
    6110:	ldr	r3, [fp, #-8]
    6114:	cmp	r3, #0
    6118:	bne	60d0 <MyGame_Example_emptytable_parse_json_table+0x64>
    611c:	ldr	r3, [fp, #-16]
    6120:	ldr	r3, [r3, #24]
    6124:	cmp	r3, #0
    6128:	bne	6168 <MyGame_Example_emptytable_parse_json_table+0xfc>
    612c:	ldr	r3, [fp, #-16]
    6130:	ldr	r3, [r3]
    6134:	mov	r0, r3
    6138:	bl	0 <flatcc_builder_end_table>
    613c:	mov	r2, r0
    6140:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6144:	str	r2, [r3]
    6148:	ldr	r3, [fp, #-28]	; 0xffffffe4
    614c:	ldr	r3, [r3]
    6150:	cmp	r3, #0
    6154:	beq	6170 <MyGame_Example_emptytable_parse_json_table+0x104>
    6158:	ldr	r3, [fp, #-20]	; 0xffffffec
    615c:	b	618c <MyGame_Example_emptytable_parse_json_table+0x120>
    6160:	nop			; (mov r0, r0)
    6164:	b	6174 <MyGame_Example_emptytable_parse_json_table+0x108>
    6168:	nop			; (mov r0, r0)
    616c:	b	6174 <MyGame_Example_emptytable_parse_json_table+0x108>
    6170:	nop			; (mov r0, r0)
    6174:	mov	r3, #33	; 0x21
    6178:	ldr	r2, [fp, #-24]	; 0xffffffe8
    617c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6180:	ldr	r0, [fp, #-16]
    6184:	bl	0 <flatcc_json_parser_set_error>
    6188:	mov	r3, r0
    618c:	mov	r0, r3
    6190:	sub	sp, fp, #4
    6194:	pop	{fp, pc}

00006198 <MyGame_Example_with_emptystruct_parse_json_table>:
    6198:	push	{fp, lr}
    619c:	add	fp, sp, #4
    61a0:	sub	sp, sp, #40	; 0x28
    61a4:	str	r0, [fp, #-32]	; 0xffffffe0
    61a8:	str	r1, [fp, #-36]	; 0xffffffdc
    61ac:	str	r2, [fp, #-40]	; 0xffffffd8
    61b0:	str	r3, [fp, #-44]	; 0xffffffd4
    61b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    61b8:	mov	r2, #0
    61bc:	str	r2, [r3]
    61c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    61c4:	ldr	r3, [r3]
    61c8:	mov	r1, #1
    61cc:	mov	r0, r3
    61d0:	bl	0 <flatcc_builder_start_table>
    61d4:	mov	r3, r0
    61d8:	cmp	r3, #0
    61dc:	bne	6350 <MyGame_Example_with_emptystruct_parse_json_table+0x1b8>
    61e0:	sub	r3, fp, #24
    61e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    61e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    61ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    61f0:	bl	10d4 <flatcc_json_parser_object_start>
    61f4:	str	r0, [fp, #-36]	; 0xffffffdc
    61f8:	b	6300 <MyGame_Example_with_emptystruct_parse_json_table+0x168>
    61fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6200:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6204:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6208:	bl	cc4 <flatcc_json_parser_symbol_start>
    620c:	str	r0, [fp, #-36]	; 0xffffffdc
    6210:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6214:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6218:	bl	fa8 <flatcc_json_parser_symbol_part>
    621c:	strd	r0, [fp, #-12]
    6220:	ldrd	r2, [fp, #-12]
    6224:	mov	r0, #-16777216	; 0xff000000
    6228:	mvn	r1, #0
    622c:	and	r2, r2, r0
    6230:	and	r3, r3, r1
    6234:	add	r1, pc, #340	; 0x154
    6238:	ldrd	r0, [r1]
    623c:	cmp	r3, r1
    6240:	cmpeq	r2, r0
    6244:	bne	62d4 <MyGame_Example_with_emptystruct_parse_json_table+0x13c>
    6248:	ldr	r3, [fp, #-36]	; 0xffffffdc
    624c:	str	r3, [fp, #-16]
    6250:	mov	r3, #5
    6254:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6258:	ldr	r1, [fp, #-16]
    625c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6260:	bl	1574 <flatcc_json_parser_match_symbol>
    6264:	str	r0, [fp, #-36]	; 0xffffffdc
    6268:	ldr	r2, [fp, #-16]
    626c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6270:	cmp	r2, r3
    6274:	beq	62bc <MyGame_Example_with_emptystruct_parse_json_table+0x124>
    6278:	ldr	r3, [fp, #-32]	; 0xffffffe0
    627c:	ldr	r0, [r3]
    6280:	mov	r3, #1
    6284:	mov	r2, #0
    6288:	mov	r1, #0
    628c:	bl	0 <flatcc_builder_table_add>
    6290:	str	r0, [fp, #-20]	; 0xffffffec
    6294:	ldr	r3, [fp, #-20]	; 0xffffffec
    6298:	cmp	r3, #0
    629c:	beq	6358 <MyGame_Example_with_emptystruct_parse_json_table+0x1c0>
    62a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    62a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    62b0:	bl	5f18 <MyGame_Example_emptystruct_parse_json_struct_inline>
    62b4:	str	r0, [fp, #-36]	; 0xffffffdc
    62b8:	b	62e8 <MyGame_Example_with_emptystruct_parse_json_table+0x150>
    62bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    62c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    62cc:	str	r0, [fp, #-36]	; 0xffffffdc
    62d0:	b	62e8 <MyGame_Example_with_emptystruct_parse_json_table+0x150>
    62d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    62e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    62e4:	str	r0, [fp, #-36]	; 0xffffffdc
    62e8:	sub	r3, fp, #24
    62ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    62f8:	bl	11bc <flatcc_json_parser_object_end>
    62fc:	str	r0, [fp, #-36]	; 0xffffffdc
    6300:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6304:	cmp	r3, #0
    6308:	bne	61fc <MyGame_Example_with_emptystruct_parse_json_table+0x64>
    630c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6310:	ldr	r3, [r3, #24]
    6314:	cmp	r3, #0
    6318:	bne	6360 <MyGame_Example_with_emptystruct_parse_json_table+0x1c8>
    631c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6320:	ldr	r3, [r3]
    6324:	mov	r0, r3
    6328:	bl	0 <flatcc_builder_end_table>
    632c:	mov	r2, r0
    6330:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6334:	str	r2, [r3]
    6338:	ldr	r3, [fp, #-44]	; 0xffffffd4
    633c:	ldr	r3, [r3]
    6340:	cmp	r3, #0
    6344:	beq	6368 <MyGame_Example_with_emptystruct_parse_json_table+0x1d0>
    6348:	ldr	r3, [fp, #-36]	; 0xffffffdc
    634c:	b	6384 <MyGame_Example_with_emptystruct_parse_json_table+0x1ec>
    6350:	nop			; (mov r0, r0)
    6354:	b	636c <MyGame_Example_with_emptystruct_parse_json_table+0x1d4>
    6358:	nop			; (mov r0, r0)
    635c:	b	636c <MyGame_Example_with_emptystruct_parse_json_table+0x1d4>
    6360:	nop			; (mov r0, r0)
    6364:	b	636c <MyGame_Example_with_emptystruct_parse_json_table+0x1d4>
    6368:	nop			; (mov r0, r0)
    636c:	mov	r3, #33	; 0x21
    6370:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6374:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6378:	ldr	r0, [fp, #-32]	; 0xffffffe0
    637c:	bl	0 <flatcc_json_parser_set_error>
    6380:	mov	r3, r0
    6384:	mov	r0, r3
    6388:	sub	sp, fp, #4
    638c:	pop	{fp, pc}
    6390:	.word	0x79000000
    6394:	.word	0x656d7074

00006398 <MyGame_Example_notemptyenum_parse_json_enum>:
    6398:	push	{fp, lr}
    639c:	add	fp, sp, #4
    63a0:	sub	sp, sp, #48	; 0x30
    63a4:	str	r0, [fp, #-32]	; 0xffffffe0
    63a8:	str	r1, [fp, #-36]	; 0xffffffdc
    63ac:	str	r2, [fp, #-40]	; 0xffffffd8
    63b0:	str	r3, [fp, #-44]	; 0xffffffd4
    63b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63b8:	str	r3, [fp, #-8]
    63bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    63c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    63c4:	bl	fa8 <flatcc_json_parser_symbol_part>
    63c8:	strd	r0, [fp, #-20]	; 0xffffffec
    63cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    63d0:	mov	r0, #0
    63d4:	mov	r1, #-16777216	; 0xff000000
    63d8:	and	r2, r2, r0
    63dc:	and	r3, r3, r1
    63e0:	cmp	r3, #2013265920	; 0x78000000
    63e4:	cmpeq	r2, #0
    63e8:	bne	6450 <MyGame_Example_notemptyenum_parse_json_enum+0xb8>
    63ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63f0:	str	r3, [fp, #-24]	; 0xffffffe8
    63f4:	ldr	r3, [fp, #8]
    63f8:	str	r3, [sp]
    63fc:	mov	r3, #1
    6400:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6404:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6408:	ldr	r0, [fp, #-32]	; 0xffffffe0
    640c:	bl	0 <flatcc_json_parser_match_constant>
    6410:	str	r0, [fp, #-36]	; 0xffffffdc
    6414:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6418:	ldr	r3, [fp, #-24]	; 0xffffffe8
    641c:	cmp	r2, r3
    6420:	beq	6448 <MyGame_Example_notemptyenum_parse_json_enum+0xb0>
    6424:	ldr	r1, [fp, #4]
    6428:	mov	r2, #0
    642c:	mov	r3, #0
    6430:	strd	r2, [r1]
    6434:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6438:	mov	r2, #0
    643c:	str	r2, [r3]
    6440:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6444:	b	6454 <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    6448:	ldr	r3, [fp, #-8]
    644c:	b	6454 <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    6450:	ldr	r3, [fp, #-8]
    6454:	mov	r0, r3
    6458:	sub	sp, fp, #4
    645c:	pop	{fp, pc}

00006460 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    6460:	push	{fp, lr}
    6464:	add	fp, sp, #4
    6468:	sub	sp, sp, #48	; 0x30
    646c:	str	r0, [fp, #-32]	; 0xffffffe0
    6470:	str	r1, [fp, #-36]	; 0xffffffdc
    6474:	str	r2, [fp, #-40]	; 0xffffffd8
    6478:	str	r3, [fp, #-44]	; 0xffffffd4
    647c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6480:	mov	r2, #0
    6484:	str	r2, [r3]
    6488:	ldr	r3, [fp, #-32]	; 0xffffffe0
    648c:	ldr	r3, [r3]
    6490:	mov	r1, #4
    6494:	mov	r0, r3
    6498:	bl	0 <flatcc_builder_start_table>
    649c:	mov	r3, r0
    64a0:	cmp	r3, #0
    64a4:	bne	6ab0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x650>
    64a8:	sub	r3, fp, #24
    64ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    64b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    64b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    64b8:	bl	10d4 <flatcc_json_parser_object_start>
    64bc:	str	r0, [fp, #-36]	; 0xffffffdc
    64c0:	b	6a60 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x600>
    64c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    64c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    64cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    64d0:	bl	cc4 <flatcc_json_parser_symbol_start>
    64d4:	str	r0, [fp, #-36]	; 0xffffffdc
    64d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    64dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    64e0:	bl	fa8 <flatcc_json_parser_symbol_part>
    64e4:	strd	r0, [fp, #-12]
    64e8:	ldrd	r2, [fp, #-12]
    64ec:	ldr	r0, [pc, #992]	; 68d4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x474>
    64f0:	mvn	r1, #0
    64f4:	and	r2, r2, r0
    64f8:	and	r3, r3, r1
    64fc:	add	r1, pc, #940	; 0x3ac
    6500:	ldrd	r0, [r1]
    6504:	cmp	r3, r1
    6508:	cmpeq	r2, r0
    650c:	bne	661c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1bc>
    6510:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6514:	str	r3, [fp, #-16]
    6518:	mov	r3, #6
    651c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6520:	ldr	r1, [fp, #-16]
    6524:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6528:	bl	1574 <flatcc_json_parser_match_symbol>
    652c:	str	r0, [fp, #-36]	; 0xffffffdc
    6530:	ldr	r2, [fp, #-16]
    6534:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6538:	cmp	r2, r3
    653c:	beq	6750 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2f0>
    6540:	mov	r3, #0
    6544:	strb	r3, [fp, #-25]	; 0xffffffe7
    6548:	ldr	r3, [fp, #-36]	; 0xffffffdc
    654c:	str	r3, [fp, #-16]
    6550:	sub	r3, fp, #25
    6554:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6558:	ldr	r1, [fp, #-16]
    655c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6560:	bl	234c <flatcc_json_parser_int8>
    6564:	str	r0, [fp, #-36]	; 0xffffffdc
    6568:	ldr	r2, [fp, #-16]
    656c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6570:	cmp	r2, r3
    6574:	bne	65c0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x160>
    6578:	ldr	r3, [fp, #-36]	; 0xffffffdc
    657c:	str	r3, [fp, #-16]
    6580:	sub	r3, fp, #25
    6584:	str	r3, [sp]
    6588:	ldr	r3, [pc, #824]	; 68c8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x468>
    658c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6590:	ldr	r1, [fp, #-16]
    6594:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6598:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    659c:	str	r0, [fp, #-36]	; 0xffffffdc
    65a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    65a4:	ldr	r3, [fp, #-16]
    65a8:	cmp	r2, r3
    65ac:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    65b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    65b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    65b8:	cmp	r2, r3
    65bc:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    65c0:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    65c4:	cmp	r3, #2
    65c8:	bne	65e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x180>
    65cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    65d0:	ldr	r3, [r3, #8]
    65d4:	and	r3, r3, #2
    65d8:	cmp	r3, #0
    65dc:	beq	6a44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    65e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    65e4:	ldr	r0, [r3]
    65e8:	mov	r3, #1
    65ec:	mov	r2, #1
    65f0:	mov	r1, #1
    65f4:	bl	0 <flatcc_builder_table_add>
    65f8:	str	r0, [fp, #-20]	; 0xffffffec
    65fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    6600:	cmp	r3, #0
    6604:	beq	6ab8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x658>
    6608:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    660c:	mov	r1, r3
    6610:	ldr	r0, [fp, #-20]	; 0xffffffec
    6614:	bl	208 <flatbuffers_int8_write_to_pe>
    6618:	b	6a44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    661c:	ldrd	r2, [fp, #-12]
    6620:	mov	r0, #-16777216	; 0xff000000
    6624:	mvn	r1, #0
    6628:	and	r2, r2, r0
    662c:	and	r3, r3, r1
    6630:	add	r1, pc, #640	; 0x280
    6634:	ldrd	r0, [r1]
    6638:	cmp	r3, r1
    663c:	cmpeq	r2, r0
    6640:	bne	6758 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2f8>
    6644:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6648:	str	r3, [fp, #-16]
    664c:	mov	r3, #5
    6650:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6654:	ldr	r1, [fp, #-16]
    6658:	ldr	r0, [fp, #-32]	; 0xffffffe0
    665c:	bl	1574 <flatcc_json_parser_match_symbol>
    6660:	str	r0, [fp, #-36]	; 0xffffffdc
    6664:	ldr	r2, [fp, #-16]
    6668:	ldr	r3, [fp, #-36]	; 0xffffffdc
    666c:	cmp	r2, r3
    6670:	beq	6760 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x300>
    6674:	mov	r3, #0
    6678:	strb	r3, [fp, #-26]	; 0xffffffe6
    667c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6680:	str	r3, [fp, #-16]
    6684:	sub	r3, fp, #26
    6688:	ldr	r2, [fp, #-40]	; 0xffffffd8
    668c:	ldr	r1, [fp, #-16]
    6690:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6694:	bl	234c <flatcc_json_parser_int8>
    6698:	str	r0, [fp, #-36]	; 0xffffffdc
    669c:	ldr	r2, [fp, #-16]
    66a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    66a4:	cmp	r2, r3
    66a8:	bne	66f4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x294>
    66ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    66b0:	str	r3, [fp, #-16]
    66b4:	sub	r3, fp, #26
    66b8:	str	r3, [sp]
    66bc:	ldr	r3, [pc, #520]	; 68cc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x46c>
    66c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    66c4:	ldr	r1, [fp, #-16]
    66c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    66cc:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    66d0:	str	r0, [fp, #-36]	; 0xffffffdc
    66d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    66d8:	ldr	r3, [fp, #-16]
    66dc:	cmp	r2, r3
    66e0:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    66e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    66e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    66ec:	cmp	r2, r3
    66f0:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    66f4:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
    66f8:	cmp	r3, #2
    66fc:	bne	6714 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    6700:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6704:	ldr	r3, [r3, #8]
    6708:	and	r3, r3, #2
    670c:	cmp	r3, #0
    6710:	beq	6a44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    6714:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6718:	ldr	r0, [r3]
    671c:	mov	r3, #1
    6720:	mov	r2, #1
    6724:	mov	r1, #0
    6728:	bl	0 <flatcc_builder_table_add>
    672c:	str	r0, [fp, #-20]	; 0xffffffec
    6730:	ldr	r3, [fp, #-20]	; 0xffffffec
    6734:	cmp	r3, #0
    6738:	beq	6ac0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x660>
    673c:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
    6740:	mov	r1, r3
    6744:	ldr	r0, [fp, #-20]	; 0xffffffec
    6748:	bl	208 <flatbuffers_int8_write_to_pe>
    674c:	b	6a44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    6750:	nop			; (mov r0, r0)
    6754:	b	6764 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x304>
    6758:	nop			; (mov r0, r0)
    675c:	b	6764 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x304>
    6760:	nop			; (mov r0, r0)
    6764:	ldrd	r2, [fp, #-12]
    6768:	mov	r0, #0
    676c:	mvn	r1, #255	; 0xff
    6770:	and	r2, r2, r0
    6774:	and	r3, r3, r1
    6778:	add	r1, pc, #320	; 0x140
    677c:	ldrd	r0, [r1]
    6780:	cmp	r3, r1
    6784:	cmpeq	r2, r0
    6788:	bne	68e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x480>
    678c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6790:	str	r3, [fp, #-16]
    6794:	mov	r3, #3
    6798:	ldr	r2, [fp, #-40]	; 0xffffffd8
    679c:	ldr	r1, [fp, #-16]
    67a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    67a4:	bl	1574 <flatcc_json_parser_match_symbol>
    67a8:	str	r0, [fp, #-36]	; 0xffffffdc
    67ac:	ldr	r2, [fp, #-16]
    67b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    67b4:	cmp	r2, r3
    67b8:	beq	6898 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x438>
    67bc:	mov	r3, #0
    67c0:	strb	r3, [fp, #-27]	; 0xffffffe5
    67c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    67c8:	str	r3, [fp, #-16]
    67cc:	sub	r3, fp, #27
    67d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    67d4:	ldr	r1, [fp, #-16]
    67d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    67dc:	bl	2008 <flatcc_json_parser_uint8>
    67e0:	str	r0, [fp, #-36]	; 0xffffffdc
    67e4:	ldr	r2, [fp, #-16]
    67e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    67ec:	cmp	r2, r3
    67f0:	bne	683c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3dc>
    67f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    67f8:	str	r3, [fp, #-16]
    67fc:	sub	r3, fp, #27
    6800:	str	r3, [sp]
    6804:	ldr	r3, [pc, #196]	; 68d0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x470>
    6808:	ldr	r2, [fp, #-40]	; 0xffffffd8
    680c:	ldr	r1, [fp, #-16]
    6810:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6814:	bl	2a94 <flatcc_json_parser_symbolic_uint8>
    6818:	str	r0, [fp, #-36]	; 0xffffffdc
    681c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6820:	ldr	r3, [fp, #-16]
    6824:	cmp	r2, r3
    6828:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    682c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6830:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6834:	cmp	r2, r3
    6838:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    683c:	ldrb	r3, [fp, #-27]	; 0xffffffe5
    6840:	cmp	r3, #2
    6844:	bne	685c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3fc>
    6848:	ldr	r3, [fp, #-32]	; 0xffffffe0
    684c:	ldr	r3, [r3, #8]
    6850:	and	r3, r3, #2
    6854:	cmp	r3, #0
    6858:	beq	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    685c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6860:	ldr	r0, [r3]
    6864:	mov	r3, #1
    6868:	mov	r2, #1
    686c:	mov	r1, #3
    6870:	bl	0 <flatcc_builder_table_add>
    6874:	str	r0, [fp, #-20]	; 0xffffffec
    6878:	ldr	r3, [fp, #-20]	; 0xffffffec
    687c:	cmp	r3, #0
    6880:	beq	6ac8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x668>
    6884:	ldrb	r3, [fp, #-27]	; 0xffffffe5
    6888:	mov	r1, r3
    688c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6890:	bl	28 <flatbuffers_uint8_write_to_pe>
    6894:	b	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6898:	ldr	r2, [fp, #-40]	; 0xffffffd8
    689c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    68a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    68a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    68a8:	str	r0, [fp, #-36]	; 0xffffffdc
    68ac:	b	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    68b0:	.word	0x72320000
    68b4:	.word	0x636f6c6f
    68b8:	.word	0x72000000
    68bc:	.word	0x636f6c6f
    68c0:	.word	0x00000000
    68c4:	.word	0x75633200
    68c8:	.word	0x00000024
    68cc:	.word	0x00000034
    68d0:	.word	0x00000044
    68d4:	.word	0xffff0000
    68d8:	.word	0x75630000
    68dc:	.word	0x00000050
    68e0:	ldrd	r2, [fp, #-12]
    68e4:	mov	r0, #0
    68e8:	ldr	r1, [pc, #-28]	; 68d4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x474>
    68ec:	and	r2, r2, r0
    68f0:	and	r3, r3, r1
    68f4:	mov	r0, #0
    68f8:	ldr	r1, [pc, #-40]	; 68d8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x478>
    68fc:	cmp	r3, r1
    6900:	cmpeq	r2, r0
    6904:	bne	6a2c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5cc>
    6908:	ldr	r3, [fp, #-36]	; 0xffffffdc
    690c:	str	r3, [fp, #-16]
    6910:	mov	r3, #2
    6914:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6918:	ldr	r1, [fp, #-16]
    691c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6920:	bl	1574 <flatcc_json_parser_match_symbol>
    6924:	str	r0, [fp, #-36]	; 0xffffffdc
    6928:	ldr	r2, [fp, #-16]
    692c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6930:	cmp	r2, r3
    6934:	beq	6a14 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b4>
    6938:	mov	r3, #0
    693c:	strb	r3, [fp, #-28]	; 0xffffffe4
    6940:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6944:	str	r3, [fp, #-16]
    6948:	sub	r3, fp, #28
    694c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6950:	ldr	r1, [fp, #-16]
    6954:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6958:	bl	2008 <flatcc_json_parser_uint8>
    695c:	str	r0, [fp, #-36]	; 0xffffffdc
    6960:	ldr	r2, [fp, #-16]
    6964:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6968:	cmp	r2, r3
    696c:	bne	69b8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x558>
    6970:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6974:	str	r3, [fp, #-16]
    6978:	sub	r3, fp, #28
    697c:	str	r3, [sp]
    6980:	ldr	r3, [pc, #-172]	; 68dc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x47c>
    6984:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6988:	ldr	r1, [fp, #-16]
    698c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6990:	bl	2a94 <flatcc_json_parser_symbolic_uint8>
    6994:	str	r0, [fp, #-36]	; 0xffffffdc
    6998:	ldr	r2, [fp, #-36]	; 0xffffffdc
    699c:	ldr	r3, [fp, #-16]
    69a0:	cmp	r2, r3
    69a4:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    69a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    69ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    69b0:	cmp	r2, r3
    69b4:	beq	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    69b8:	ldrb	r3, [fp, #-28]	; 0xffffffe4
    69bc:	cmp	r3, #2
    69c0:	bne	69d8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x578>
    69c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    69c8:	ldr	r3, [r3, #8]
    69cc:	and	r3, r3, #2
    69d0:	cmp	r3, #0
    69d4:	beq	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    69d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    69dc:	ldr	r0, [r3]
    69e0:	mov	r3, #1
    69e4:	mov	r2, #1
    69e8:	mov	r1, #2
    69ec:	bl	0 <flatcc_builder_table_add>
    69f0:	str	r0, [fp, #-20]	; 0xffffffec
    69f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    69f8:	cmp	r3, #0
    69fc:	beq	6ad0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x670>
    6a00:	ldrb	r3, [fp, #-28]	; 0xffffffe4
    6a04:	mov	r1, r3
    6a08:	ldr	r0, [fp, #-20]	; 0xffffffec
    6a0c:	bl	28 <flatbuffers_uint8_write_to_pe>
    6a10:	b	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6a18:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6a24:	str	r0, [fp, #-36]	; 0xffffffdc
    6a28:	b	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6a2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6a30:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6a34:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6a3c:	str	r0, [fp, #-36]	; 0xffffffdc
    6a40:	b	6a48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6a44:	nop			; (mov r0, r0)
    6a48:	sub	r3, fp, #24
    6a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6a50:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a58:	bl	11bc <flatcc_json_parser_object_end>
    6a5c:	str	r0, [fp, #-36]	; 0xffffffdc
    6a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6a64:	cmp	r3, #0
    6a68:	bne	64c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x64>
    6a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6a70:	ldr	r3, [r3, #24]
    6a74:	cmp	r3, #0
    6a78:	bne	6ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x678>
    6a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6a80:	ldr	r3, [r3]
    6a84:	mov	r0, r3
    6a88:	bl	0 <flatcc_builder_end_table>
    6a8c:	mov	r2, r0
    6a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a94:	str	r2, [r3]
    6a98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a9c:	ldr	r3, [r3]
    6aa0:	cmp	r3, #0
    6aa4:	beq	6ae0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x680>
    6aa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6aac:	b	6afc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x69c>
    6ab0:	nop			; (mov r0, r0)
    6ab4:	b	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6ab8:	nop			; (mov r0, r0)
    6abc:	b	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6ac0:	nop			; (mov r0, r0)
    6ac4:	b	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6ac8:	nop			; (mov r0, r0)
    6acc:	b	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6ad0:	nop			; (mov r0, r0)
    6ad4:	b	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6ad8:	nop			; (mov r0, r0)
    6adc:	b	6ae4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6ae0:	nop			; (mov r0, r0)
    6ae4:	mov	r3, #33	; 0x21
    6ae8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6aec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6af4:	bl	0 <flatcc_json_parser_set_error>
    6af8:	mov	r3, r0
    6afc:	mov	r0, r3
    6b00:	sub	sp, fp, #4
    6b04:	pop	{fp, pc}

00006b08 <MyGame_Example_TestInclude_parse_json_table>:
    6b08:	push	{fp, lr}
    6b0c:	add	fp, sp, #4
    6b10:	sub	sp, sp, #88	; 0x58
    6b14:	str	r0, [fp, #-72]	; 0xffffffb8
    6b18:	str	r1, [fp, #-76]	; 0xffffffb4
    6b1c:	str	r2, [fp, #-80]	; 0xffffffb0
    6b20:	str	r3, [fp, #-84]	; 0xffffffac
    6b24:	ldr	r3, [fp, #-84]	; 0xffffffac
    6b28:	mov	r2, #0
    6b2c:	str	r2, [r3]
    6b30:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6b34:	ldr	r3, [r3]
    6b38:	mov	r1, #6
    6b3c:	mov	r0, r3
    6b40:	bl	0 <flatcc_builder_start_table>
    6b44:	mov	r3, r0
    6b48:	cmp	r3, #0
    6b4c:	bne	7428 <MyGame_Example_TestInclude_parse_json_table+0x920>
    6b50:	sub	r3, fp, #24
    6b54:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6b58:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6b5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6b60:	bl	10d4 <flatcc_json_parser_object_start>
    6b64:	str	r0, [fp, #-76]	; 0xffffffb4
    6b68:	b	73d8 <MyGame_Example_TestInclude_parse_json_table+0x8d0>
    6b6c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6b70:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6b74:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6b78:	bl	cc4 <flatcc_json_parser_symbol_start>
    6b7c:	str	r0, [fp, #-76]	; 0xffffffb4
    6b80:	ldr	r1, [fp, #-80]	; 0xffffffb0
    6b84:	ldr	r0, [fp, #-76]	; 0xffffffb4
    6b88:	bl	fa8 <flatcc_json_parser_symbol_part>
    6b8c:	strd	r0, [fp, #-12]
    6b90:	ldrd	r2, [fp, #-12]
    6b94:	add	r1, pc, #932	; 0x3a4
    6b98:	ldrd	r0, [r1]
    6b9c:	cmp	r3, r1
    6ba0:	cmpeq	r2, r0
    6ba4:	bhi	6c74 <MyGame_Example_TestInclude_parse_json_table+0x16c>
    6ba8:	ldrd	r2, [fp, #-12]
    6bac:	ldr	r0, [pc, #948]	; 6f68 <MyGame_Example_TestInclude_parse_json_table+0x460>
    6bb0:	mvn	r1, #0
    6bb4:	and	r2, r2, r0
    6bb8:	and	r3, r3, r1
    6bbc:	add	r1, pc, #900	; 0x384
    6bc0:	ldrd	r0, [r1]
    6bc4:	cmp	r3, r1
    6bc8:	cmpeq	r2, r0
    6bcc:	bne	6c5c <MyGame_Example_TestInclude_parse_json_table+0x154>
    6bd0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6bd4:	str	r3, [fp, #-16]
    6bd8:	mov	r3, #6
    6bdc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6be0:	ldr	r1, [fp, #-16]
    6be4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6be8:	bl	1574 <flatcc_json_parser_match_symbol>
    6bec:	str	r0, [fp, #-76]	; 0xffffffb4
    6bf0:	ldr	r2, [fp, #-16]
    6bf4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6bf8:	cmp	r2, r3
    6bfc:	beq	6c44 <MyGame_Example_TestInclude_parse_json_table+0x13c>
    6c00:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6c04:	ldr	r0, [r3]
    6c08:	mov	r3, #1
    6c0c:	mov	r2, #0
    6c10:	mov	r1, #0
    6c14:	bl	0 <flatcc_builder_table_add>
    6c18:	str	r0, [fp, #-20]	; 0xffffffec
    6c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6c20:	cmp	r3, #0
    6c24:	beq	7430 <MyGame_Example_TestInclude_parse_json_table+0x928>
    6c28:	ldr	r3, [fp, #-20]	; 0xffffffec
    6c2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6c30:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6c34:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6c38:	bl	4570 <InGlobalNamespace_parse_json_struct_inline>
    6c3c:	str	r0, [fp, #-76]	; 0xffffffb4
    6c40:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6c44:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6c48:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6c4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6c50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6c54:	str	r0, [fp, #-76]	; 0xffffffb4
    6c58:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6c5c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6c60:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6c64:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6c68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6c6c:	str	r0, [fp, #-76]	; 0xffffffb4
    6c70:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6c74:	ldrd	r2, [fp, #-12]
    6c78:	add	r1, pc, #720	; 0x2d0
    6c7c:	ldrd	r0, [r1]
    6c80:	cmp	r3, r1
    6c84:	cmpeq	r2, r0
    6c88:	bhi	6f74 <MyGame_Example_TestInclude_parse_json_table+0x46c>
    6c8c:	ldrd	r2, [fp, #-12]
    6c90:	mvn	r0, #255	; 0xff
    6c94:	mvn	r1, #0
    6c98:	and	r2, r2, r0
    6c9c:	and	r3, r3, r1
    6ca0:	add	r1, pc, #688	; 0x2b0
    6ca4:	ldrd	r0, [r1]
    6ca8:	cmp	r3, r1
    6cac:	cmpeq	r2, r0
    6cb0:	bne	6dd8 <MyGame_Example_TestInclude_parse_json_table+0x2d0>
    6cb4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6cb8:	str	r3, [fp, #-16]
    6cbc:	mov	r3, #7
    6cc0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6cc4:	ldr	r1, [fp, #-16]
    6cc8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6ccc:	bl	1574 <flatcc_json_parser_match_symbol>
    6cd0:	str	r0, [fp, #-76]	; 0xffffffb4
    6cd4:	ldr	r2, [fp, #-16]
    6cd8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6cdc:	cmp	r2, r3
    6ce0:	beq	6dc0 <MyGame_Example_TestInclude_parse_json_table+0x2b8>
    6ce4:	mov	r2, #0
    6ce8:	mov	r3, #0
    6cec:	strd	r2, [fp, #-36]	; 0xffffffdc
    6cf0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6cf4:	str	r3, [fp, #-16]
    6cf8:	sub	r3, fp, #36	; 0x24
    6cfc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6d00:	ldr	r1, [fp, #-16]
    6d04:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6d08:	bl	20d8 <flatcc_json_parser_int64>
    6d0c:	str	r0, [fp, #-76]	; 0xffffffb4
    6d10:	ldr	r2, [fp, #-16]
    6d14:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6d18:	cmp	r2, r3
    6d1c:	bne	6d68 <MyGame_Example_TestInclude_parse_json_table+0x260>
    6d20:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6d24:	str	r3, [fp, #-16]
    6d28:	sub	r3, fp, #36	; 0x24
    6d2c:	str	r3, [sp]
    6d30:	ldr	r3, [pc, #564]	; 6f6c <MyGame_Example_TestInclude_parse_json_table+0x464>
    6d34:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6d38:	ldr	r1, [fp, #-16]
    6d3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6d40:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    6d44:	str	r0, [fp, #-76]	; 0xffffffb4
    6d48:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6d4c:	ldr	r3, [fp, #-16]
    6d50:	cmp	r2, r3
    6d54:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    6d58:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6d5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6d60:	cmp	r2, r3
    6d64:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    6d68:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    6d6c:	orrs	r3, r2, r3
    6d70:	bne	6d88 <MyGame_Example_TestInclude_parse_json_table+0x280>
    6d74:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6d78:	ldr	r3, [r3, #8]
    6d7c:	and	r3, r3, #2
    6d80:	cmp	r3, #0
    6d84:	beq	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6d88:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6d8c:	ldr	r0, [r3]
    6d90:	mov	r3, #8
    6d94:	mov	r2, #8
    6d98:	mov	r1, #2
    6d9c:	bl	0 <flatcc_builder_table_add>
    6da0:	str	r0, [fp, #-20]	; 0xffffffec
    6da4:	ldr	r3, [fp, #-20]	; 0xffffffec
    6da8:	cmp	r3, #0
    6dac:	beq	7438 <MyGame_Example_TestInclude_parse_json_table+0x930>
    6db0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    6db4:	ldr	r0, [fp, #-20]	; 0xffffffec
    6db8:	bl	388 <flatbuffers_int64_write_to_pe>
    6dbc:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6dc0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6dc4:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6dc8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6dcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6dd0:	str	r0, [fp, #-76]	; 0xffffffb4
    6dd4:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6dd8:	ldrd	r2, [fp, #-12]
    6ddc:	ldr	r0, [pc, #388]	; 6f68 <MyGame_Example_TestInclude_parse_json_table+0x460>
    6de0:	mvn	r1, #0
    6de4:	and	r2, r2, r0
    6de8:	and	r3, r3, r1
    6dec:	add	r1, pc, #364	; 0x16c
    6df0:	ldrd	r0, [r1]
    6df4:	cmp	r3, r1
    6df8:	cmpeq	r2, r0
    6dfc:	bne	6f24 <MyGame_Example_TestInclude_parse_json_table+0x41c>
    6e00:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6e04:	str	r3, [fp, #-16]
    6e08:	mov	r3, #6
    6e0c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6e10:	ldr	r1, [fp, #-16]
    6e14:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6e18:	bl	1574 <flatcc_json_parser_match_symbol>
    6e1c:	str	r0, [fp, #-76]	; 0xffffffb4
    6e20:	ldr	r2, [fp, #-16]
    6e24:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6e28:	cmp	r2, r3
    6e2c:	beq	6f0c <MyGame_Example_TestInclude_parse_json_table+0x404>
    6e30:	mov	r2, #0
    6e34:	mov	r3, #0
    6e38:	strd	r2, [fp, #-44]	; 0xffffffd4
    6e3c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6e40:	str	r3, [fp, #-16]
    6e44:	sub	r3, fp, #44	; 0x2c
    6e48:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6e4c:	ldr	r1, [fp, #-16]
    6e50:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6e54:	bl	20d8 <flatcc_json_parser_int64>
    6e58:	str	r0, [fp, #-76]	; 0xffffffb4
    6e5c:	ldr	r2, [fp, #-16]
    6e60:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6e64:	cmp	r2, r3
    6e68:	bne	6eb4 <MyGame_Example_TestInclude_parse_json_table+0x3ac>
    6e6c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6e70:	str	r3, [fp, #-16]
    6e74:	sub	r3, fp, #44	; 0x2c
    6e78:	str	r3, [sp]
    6e7c:	ldr	r3, [pc, #236]	; 6f70 <MyGame_Example_TestInclude_parse_json_table+0x468>
    6e80:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6e84:	ldr	r1, [fp, #-16]
    6e88:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6e8c:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    6e90:	str	r0, [fp, #-76]	; 0xffffffb4
    6e94:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6e98:	ldr	r3, [fp, #-16]
    6e9c:	cmp	r2, r3
    6ea0:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    6ea4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6ea8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6eac:	cmp	r2, r3
    6eb0:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    6eb4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    6eb8:	orrs	r3, r2, r3
    6ebc:	bne	6ed4 <MyGame_Example_TestInclude_parse_json_table+0x3cc>
    6ec0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6ec4:	ldr	r3, [r3, #8]
    6ec8:	and	r3, r3, #2
    6ecc:	cmp	r3, #0
    6ed0:	beq	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6ed4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6ed8:	ldr	r0, [r3]
    6edc:	mov	r3, #8
    6ee0:	mov	r2, #8
    6ee4:	mov	r1, #1
    6ee8:	bl	0 <flatcc_builder_table_add>
    6eec:	str	r0, [fp, #-20]	; 0xffffffec
    6ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
    6ef4:	cmp	r3, #0
    6ef8:	beq	7440 <MyGame_Example_TestInclude_parse_json_table+0x938>
    6efc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    6f00:	ldr	r0, [fp, #-20]	; 0xffffffec
    6f04:	bl	388 <flatbuffers_int64_write_to_pe>
    6f08:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6f0c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6f10:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6f14:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6f18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f1c:	str	r0, [fp, #-76]	; 0xffffffb4
    6f20:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6f24:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6f28:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6f2c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6f30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f34:	str	r0, [fp, #-76]	; 0xffffffb4
    6f38:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6f3c:	nop			; (mov r0, r0)
    6f40:	.word	0x616bffff
    6f44:	.word	0x696e6376
    6f48:	.word	0x616c0000
    6f4c:	.word	0x676c6f62
    6f50:	.word	0x616c32ff
    6f54:	.word	0x696e6376
    6f58:	.word	0x616c3200
    6f5c:	.word	0x696e6376
    6f60:	.word	0x616c0000
    6f64:	.word	0x696e6376
    6f68:	.word	0xffff0000
    6f6c:	.word	0x0000005c
    6f70:	.word	0x0000006c
    6f74:	ldrd	r2, [fp, #-12]
    6f78:	add	r1, pc, #704	; 0x2c0
    6f7c:	ldrd	r0, [r1]
    6f80:	cmp	r3, r1
    6f84:	cmpeq	r2, r0
    6f88:	bhi	70f0 <MyGame_Example_TestInclude_parse_json_table+0x5e8>
    6f8c:	ldrd	r2, [fp, #-12]
    6f90:	mvn	r0, #255	; 0xff
    6f94:	mvn	r1, #0
    6f98:	and	r2, r2, r0
    6f9c:	and	r3, r3, r1
    6fa0:	add	r1, pc, #672	; 0x2a0
    6fa4:	ldrd	r0, [r1]
    6fa8:	cmp	r3, r1
    6fac:	cmpeq	r2, r0
    6fb0:	bne	70d8 <MyGame_Example_TestInclude_parse_json_table+0x5d0>
    6fb4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6fb8:	str	r3, [fp, #-16]
    6fbc:	mov	r3, #7
    6fc0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6fc4:	ldr	r1, [fp, #-16]
    6fc8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6fcc:	bl	1574 <flatcc_json_parser_match_symbol>
    6fd0:	str	r0, [fp, #-76]	; 0xffffffb4
    6fd4:	ldr	r2, [fp, #-16]
    6fd8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6fdc:	cmp	r2, r3
    6fe0:	beq	70c0 <MyGame_Example_TestInclude_parse_json_table+0x5b8>
    6fe4:	mov	r3, #0
    6fe8:	str	r3, [fp, #-48]	; 0xffffffd0
    6fec:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6ff0:	str	r3, [fp, #-16]
    6ff4:	sub	r3, fp, #48	; 0x30
    6ff8:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6ffc:	ldr	r1, [fp, #-16]
    7000:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7004:	bl	21ac <flatcc_json_parser_int32>
    7008:	str	r0, [fp, #-76]	; 0xffffffb4
    700c:	ldr	r2, [fp, #-16]
    7010:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7014:	cmp	r2, r3
    7018:	bne	7064 <MyGame_Example_TestInclude_parse_json_table+0x55c>
    701c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7020:	str	r3, [fp, #-16]
    7024:	sub	r3, fp, #48	; 0x30
    7028:	str	r3, [sp]
    702c:	ldr	r3, [pc, #548]	; 7258 <MyGame_Example_TestInclude_parse_json_table+0x750>
    7030:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7034:	ldr	r1, [fp, #-16]
    7038:	ldr	r0, [fp, #-72]	; 0xffffffb8
    703c:	bl	2e3c <flatcc_json_parser_symbolic_int32>
    7040:	str	r0, [fp, #-76]	; 0xffffffb4
    7044:	ldr	r2, [fp, #-76]	; 0xffffffb4
    7048:	ldr	r3, [fp, #-16]
    704c:	cmp	r2, r3
    7050:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7054:	ldr	r2, [fp, #-76]	; 0xffffffb4
    7058:	ldr	r3, [fp, #-80]	; 0xffffffb0
    705c:	cmp	r2, r3
    7060:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7064:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7068:	cmp	r3, #0
    706c:	bne	7084 <MyGame_Example_TestInclude_parse_json_table+0x57c>
    7070:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7074:	ldr	r3, [r3, #8]
    7078:	and	r3, r3, #2
    707c:	cmp	r3, #0
    7080:	beq	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    7084:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7088:	ldr	r0, [r3]
    708c:	mov	r3, #4
    7090:	mov	r2, #4
    7094:	mov	r1, #3
    7098:	bl	0 <flatcc_builder_table_add>
    709c:	str	r0, [fp, #-20]	; 0xffffffec
    70a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    70a4:	cmp	r3, #0
    70a8:	beq	7448 <MyGame_Example_TestInclude_parse_json_table+0x940>
    70ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    70b0:	mov	r1, r3
    70b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    70b8:	bl	32c <flatbuffers_int32_write_to_pe>
    70bc:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    70c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    70c4:	ldr	r1, [fp, #-76]	; 0xffffffb4
    70c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    70cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    70d0:	str	r0, [fp, #-76]	; 0xffffffb4
    70d4:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    70d8:	ldr	r2, [fp, #-80]	; 0xffffffb0
    70dc:	ldr	r1, [fp, #-76]	; 0xffffffb4
    70e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    70e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    70e8:	str	r0, [fp, #-76]	; 0xffffffb4
    70ec:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    70f0:	ldrd	r2, [fp, #-12]
    70f4:	mvn	r0, #255	; 0xff
    70f8:	mvn	r1, #0
    70fc:	and	r2, r2, r0
    7100:	and	r3, r3, r1
    7104:	add	r1, pc, #324	; 0x144
    7108:	ldrd	r0, [r1]
    710c:	cmp	r3, r1
    7110:	cmpeq	r2, r0
    7114:	bne	7260 <MyGame_Example_TestInclude_parse_json_table+0x758>
    7118:	ldr	r3, [fp, #-76]	; 0xffffffb4
    711c:	str	r3, [fp, #-16]
    7120:	mov	r3, #7
    7124:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7128:	ldr	r1, [fp, #-16]
    712c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7130:	bl	1574 <flatcc_json_parser_match_symbol>
    7134:	str	r0, [fp, #-76]	; 0xffffffb4
    7138:	ldr	r2, [fp, #-16]
    713c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7140:	cmp	r2, r3
    7144:	beq	7224 <MyGame_Example_TestInclude_parse_json_table+0x71c>
    7148:	mov	r2, #0
    714c:	mov	r3, #0
    7150:	strd	r2, [fp, #-60]	; 0xffffffc4
    7154:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7158:	str	r3, [fp, #-16]
    715c:	sub	r3, fp, #60	; 0x3c
    7160:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7164:	ldr	r1, [fp, #-16]
    7168:	ldr	r0, [fp, #-72]	; 0xffffffb8
    716c:	bl	20d8 <flatcc_json_parser_int64>
    7170:	str	r0, [fp, #-76]	; 0xffffffb4
    7174:	ldr	r2, [fp, #-16]
    7178:	ldr	r3, [fp, #-76]	; 0xffffffb4
    717c:	cmp	r2, r3
    7180:	bne	71cc <MyGame_Example_TestInclude_parse_json_table+0x6c4>
    7184:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7188:	str	r3, [fp, #-16]
    718c:	sub	r3, fp, #60	; 0x3c
    7190:	str	r3, [sp]
    7194:	ldr	r3, [pc, #192]	; 725c <MyGame_Example_TestInclude_parse_json_table+0x754>
    7198:	ldr	r2, [fp, #-80]	; 0xffffffb0
    719c:	ldr	r1, [fp, #-16]
    71a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    71a4:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    71a8:	str	r0, [fp, #-76]	; 0xffffffb4
    71ac:	ldr	r2, [fp, #-76]	; 0xffffffb4
    71b0:	ldr	r3, [fp, #-16]
    71b4:	cmp	r2, r3
    71b8:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    71bc:	ldr	r2, [fp, #-76]	; 0xffffffb4
    71c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    71c4:	cmp	r2, r3
    71c8:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    71cc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    71d0:	orrs	r3, r2, r3
    71d4:	bne	71ec <MyGame_Example_TestInclude_parse_json_table+0x6e4>
    71d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    71dc:	ldr	r3, [r3, #8]
    71e0:	and	r3, r3, #2
    71e4:	cmp	r3, #0
    71e8:	beq	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    71ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
    71f0:	ldr	r0, [r3]
    71f4:	mov	r3, #8
    71f8:	mov	r2, #8
    71fc:	mov	r1, #5
    7200:	bl	0 <flatcc_builder_table_add>
    7204:	str	r0, [fp, #-20]	; 0xffffffec
    7208:	ldr	r3, [fp, #-20]	; 0xffffffec
    720c:	cmp	r3, #0
    7210:	beq	7450 <MyGame_Example_TestInclude_parse_json_table+0x948>
    7214:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    7218:	ldr	r0, [fp, #-20]	; 0xffffffec
    721c:	bl	388 <flatbuffers_int64_write_to_pe>
    7220:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    7224:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7228:	ldr	r1, [fp, #-76]	; 0xffffffb4
    722c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7230:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7234:	str	r0, [fp, #-76]	; 0xffffffb4
    7238:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    723c:	nop			; (mov r0, r0)
    7240:	.word	0x616c33ff
    7244:	.word	0x696e6376
    7248:	.word	0x616c3300
    724c:	.word	0x696e6376
    7250:	.word	0x616c3500
    7254:	.word	0x696e6376
    7258:	.word	0x0000007c
    725c:	.word	0x00000088
    7260:	ldrd	r2, [fp, #-12]
    7264:	mvn	r0, #255	; 0xff
    7268:	mvn	r1, #0
    726c:	and	r2, r2, r0
    7270:	and	r3, r3, r1
    7274:	add	r1, pc, #532	; 0x214
    7278:	ldrd	r0, [r1]
    727c:	cmp	r3, r1
    7280:	cmpeq	r2, r0
    7284:	bne	73ac <MyGame_Example_TestInclude_parse_json_table+0x8a4>
    7288:	ldr	r3, [fp, #-76]	; 0xffffffb4
    728c:	str	r3, [fp, #-16]
    7290:	mov	r3, #7
    7294:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7298:	ldr	r1, [fp, #-16]
    729c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    72a0:	bl	1574 <flatcc_json_parser_match_symbol>
    72a4:	str	r0, [fp, #-76]	; 0xffffffb4
    72a8:	ldr	r2, [fp, #-16]
    72ac:	ldr	r3, [fp, #-76]	; 0xffffffb4
    72b0:	cmp	r2, r3
    72b4:	beq	7394 <MyGame_Example_TestInclude_parse_json_table+0x88c>
    72b8:	mov	r2, #0
    72bc:	mov	r3, #0
    72c0:	strd	r2, [fp, #-68]	; 0xffffffbc
    72c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    72c8:	str	r3, [fp, #-16]
    72cc:	sub	r3, fp, #68	; 0x44
    72d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    72d4:	ldr	r1, [fp, #-16]
    72d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    72dc:	bl	20d8 <flatcc_json_parser_int64>
    72e0:	str	r0, [fp, #-76]	; 0xffffffb4
    72e4:	ldr	r2, [fp, #-16]
    72e8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    72ec:	cmp	r2, r3
    72f0:	bne	733c <MyGame_Example_TestInclude_parse_json_table+0x834>
    72f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    72f8:	str	r3, [fp, #-16]
    72fc:	sub	r3, fp, #68	; 0x44
    7300:	str	r3, [sp]
    7304:	ldr	r3, [pc, #396]	; 7498 <MyGame_Example_TestInclude_parse_json_table+0x990>
    7308:	ldr	r2, [fp, #-80]	; 0xffffffb0
    730c:	ldr	r1, [fp, #-16]
    7310:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7314:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    7318:	str	r0, [fp, #-76]	; 0xffffffb4
    731c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    7320:	ldr	r3, [fp, #-16]
    7324:	cmp	r2, r3
    7328:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    732c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    7330:	ldr	r3, [fp, #-80]	; 0xffffffb0
    7334:	cmp	r2, r3
    7338:	beq	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    733c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    7340:	orrs	r3, r2, r3
    7344:	bne	735c <MyGame_Example_TestInclude_parse_json_table+0x854>
    7348:	ldr	r3, [fp, #-72]	; 0xffffffb8
    734c:	ldr	r3, [r3, #8]
    7350:	and	r3, r3, #2
    7354:	cmp	r3, #0
    7358:	beq	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    735c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7360:	ldr	r0, [r3]
    7364:	mov	r3, #8
    7368:	mov	r2, #8
    736c:	mov	r1, #4
    7370:	bl	0 <flatcc_builder_table_add>
    7374:	str	r0, [fp, #-20]	; 0xffffffec
    7378:	ldr	r3, [fp, #-20]	; 0xffffffec
    737c:	cmp	r3, #0
    7380:	beq	7458 <MyGame_Example_TestInclude_parse_json_table+0x950>
    7384:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    7388:	ldr	r0, [fp, #-20]	; 0xffffffec
    738c:	bl	388 <flatbuffers_int64_write_to_pe>
    7390:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    7394:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7398:	ldr	r1, [fp, #-76]	; 0xffffffb4
    739c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    73a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    73a4:	str	r0, [fp, #-76]	; 0xffffffb4
    73a8:	b	73c0 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    73ac:	ldr	r2, [fp, #-80]	; 0xffffffb0
    73b0:	ldr	r1, [fp, #-76]	; 0xffffffb4
    73b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    73b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    73bc:	str	r0, [fp, #-76]	; 0xffffffb4
    73c0:	sub	r3, fp, #24
    73c4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    73c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
    73cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    73d0:	bl	11bc <flatcc_json_parser_object_end>
    73d4:	str	r0, [fp, #-76]	; 0xffffffb4
    73d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73dc:	cmp	r3, #0
    73e0:	bne	6b6c <MyGame_Example_TestInclude_parse_json_table+0x64>
    73e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    73e8:	ldr	r3, [r3, #24]
    73ec:	cmp	r3, #0
    73f0:	bne	7460 <MyGame_Example_TestInclude_parse_json_table+0x958>
    73f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    73f8:	ldr	r3, [r3]
    73fc:	mov	r0, r3
    7400:	bl	0 <flatcc_builder_end_table>
    7404:	mov	r2, r0
    7408:	ldr	r3, [fp, #-84]	; 0xffffffac
    740c:	str	r2, [r3]
    7410:	ldr	r3, [fp, #-84]	; 0xffffffac
    7414:	ldr	r3, [r3]
    7418:	cmp	r3, #0
    741c:	beq	7468 <MyGame_Example_TestInclude_parse_json_table+0x960>
    7420:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7424:	b	7484 <MyGame_Example_TestInclude_parse_json_table+0x97c>
    7428:	nop			; (mov r0, r0)
    742c:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7430:	nop			; (mov r0, r0)
    7434:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7438:	nop			; (mov r0, r0)
    743c:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7440:	nop			; (mov r0, r0)
    7444:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7448:	nop			; (mov r0, r0)
    744c:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7450:	nop			; (mov r0, r0)
    7454:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7458:	nop			; (mov r0, r0)
    745c:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7460:	nop			; (mov r0, r0)
    7464:	b	746c <MyGame_Example_TestInclude_parse_json_table+0x964>
    7468:	nop			; (mov r0, r0)
    746c:	mov	r3, #33	; 0x21
    7470:	ldr	r2, [fp, #-80]	; 0xffffffb0
    7474:	ldr	r1, [fp, #-76]	; 0xffffffb4
    7478:	ldr	r0, [fp, #-72]	; 0xffffffb8
    747c:	bl	0 <flatcc_json_parser_set_error>
    7480:	mov	r3, r0
    7484:	mov	r0, r3
    7488:	sub	sp, fp, #4
    748c:	pop	{fp, pc}
    7490:	.word	0x616c3400
    7494:	.word	0x696e6376
    7498:	.word	0x00000094

0000749c <MyGame_Example_Vec3_parse_json_struct_inline>:
    749c:	push	{fp, lr}
    74a0:	add	fp, sp, #4
    74a4:	sub	sp, sp, #72	; 0x48
    74a8:	str	r0, [fp, #-56]	; 0xffffffc8
    74ac:	str	r1, [fp, #-60]	; 0xffffffc4
    74b0:	str	r2, [fp, #-64]	; 0xffffffc0
    74b4:	str	r3, [fp, #-68]	; 0xffffffbc
    74b8:	sub	r3, fp, #24
    74bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    74c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    74c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    74c8:	bl	10d4 <flatcc_json_parser_object_start>
    74cc:	str	r0, [fp, #-60]	; 0xffffffc4
    74d0:	b	7bbc <MyGame_Example_Vec3_parse_json_struct_inline+0x720>
    74d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    74d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    74dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    74e0:	bl	cc4 <flatcc_json_parser_symbol_start>
    74e4:	str	r0, [fp, #-60]	; 0xffffffc4
    74e8:	ldr	r1, [fp, #-64]	; 0xffffffc0
    74ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
    74f0:	bl	fa8 <flatcc_json_parser_symbol_part>
    74f4:	strd	r0, [fp, #-12]
    74f8:	ldrd	r2, [fp, #-12]
    74fc:	add	r1, pc, #788	; 0x314
    7500:	ldrd	r0, [r1]
    7504:	cmp	r3, r1
    7508:	cmpeq	r2, r0
    750c:	bhi	774c <MyGame_Example_Vec3_parse_json_struct_inline+0x2b0>
    7510:	ldrd	r2, [fp, #-12]
    7514:	mov	r0, #-16777216	; 0xff000000
    7518:	mvn	r1, #0
    751c:	and	r2, r2, r0
    7520:	and	r3, r3, r1
    7524:	add	r1, pc, #756	; 0x2f4
    7528:	ldrd	r0, [r1]
    752c:	cmp	r3, r1
    7530:	cmpeq	r2, r0
    7534:	bne	7620 <MyGame_Example_Vec3_parse_json_struct_inline+0x184>
    7538:	ldr	r3, [fp, #-60]	; 0xffffffc4
    753c:	str	r3, [fp, #-16]
    7540:	mov	r3, #5
    7544:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7548:	ldr	r1, [fp, #-16]
    754c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7550:	bl	1574 <flatcc_json_parser_match_symbol>
    7554:	str	r0, [fp, #-60]	; 0xffffffc4
    7558:	ldr	r2, [fp, #-16]
    755c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7560:	cmp	r2, r3
    7564:	beq	7608 <MyGame_Example_Vec3_parse_json_struct_inline+0x16c>
    7568:	mov	r3, #0
    756c:	strb	r3, [fp, #-25]	; 0xffffffe7
    7570:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7574:	add	r3, r3, #24
    7578:	str	r3, [fp, #-20]	; 0xffffffec
    757c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7580:	str	r3, [fp, #-16]
    7584:	sub	r3, fp, #25
    7588:	ldr	r2, [fp, #-64]	; 0xffffffc0
    758c:	ldr	r1, [fp, #-16]
    7590:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7594:	bl	234c <flatcc_json_parser_int8>
    7598:	str	r0, [fp, #-60]	; 0xffffffc4
    759c:	ldr	r2, [fp, #-16]
    75a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    75a4:	cmp	r2, r3
    75a8:	bne	75f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x158>
    75ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    75b0:	str	r3, [fp, #-16]
    75b4:	sub	r3, fp, #25
    75b8:	str	r3, [sp]
    75bc:	ldr	r3, [pc, #628]	; 7838 <MyGame_Example_Vec3_parse_json_struct_inline+0x39c>
    75c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    75c4:	ldr	r1, [fp, #-16]
    75c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    75cc:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    75d0:	str	r0, [fp, #-60]	; 0xffffffc4
    75d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    75d8:	ldr	r3, [fp, #-16]
    75dc:	cmp	r2, r3
    75e0:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    75e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    75e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    75ec:	cmp	r2, r3
    75f0:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    75f4:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    75f8:	mov	r1, r3
    75fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    7600:	bl	208 <flatbuffers_int8_write_to_pe>
    7604:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7608:	ldr	r2, [fp, #-64]	; 0xffffffc0
    760c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7610:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7614:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7618:	str	r0, [fp, #-60]	; 0xffffffc4
    761c:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7620:	ldrd	r2, [fp, #-12]
    7624:	mov	r0, #-16777216	; 0xff000000
    7628:	mvn	r1, #0
    762c:	and	r2, r2, r0
    7630:	and	r3, r3, r1
    7634:	add	r1, pc, #492	; 0x1ec
    7638:	ldrd	r0, [r1]
    763c:	cmp	r3, r1
    7640:	cmpeq	r2, r0
    7644:	bne	7734 <MyGame_Example_Vec3_parse_json_struct_inline+0x298>
    7648:	ldr	r3, [fp, #-60]	; 0xffffffc4
    764c:	str	r3, [fp, #-16]
    7650:	mov	r3, #5
    7654:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7658:	ldr	r1, [fp, #-16]
    765c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7660:	bl	1574 <flatcc_json_parser_match_symbol>
    7664:	str	r0, [fp, #-60]	; 0xffffffc4
    7668:	ldr	r2, [fp, #-16]
    766c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7670:	cmp	r2, r3
    7674:	beq	771c <MyGame_Example_Vec3_parse_json_struct_inline+0x280>
    7678:	mov	r2, #0
    767c:	mov	r3, #0
    7680:	strd	r2, [fp, #-36]	; 0xffffffdc
    7684:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7688:	add	r3, r3, #16
    768c:	str	r3, [fp, #-20]	; 0xffffffec
    7690:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7694:	str	r3, [fp, #-16]
    7698:	sub	r3, fp, #36	; 0x24
    769c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    76a0:	ldr	r1, [fp, #-16]
    76a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    76a8:	bl	0 <flatcc_json_parser_double>
    76ac:	str	r0, [fp, #-60]	; 0xffffffc4
    76b0:	ldr	r2, [fp, #-16]
    76b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    76b8:	cmp	r2, r3
    76bc:	bne	7708 <MyGame_Example_Vec3_parse_json_struct_inline+0x26c>
    76c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    76c4:	str	r3, [fp, #-16]
    76c8:	sub	r3, fp, #36	; 0x24
    76cc:	str	r3, [sp]
    76d0:	ldr	r3, [pc, #356]	; 783c <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    76d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    76d8:	ldr	r1, [fp, #-16]
    76dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    76e0:	bl	375c <flatcc_json_parser_symbolic_double>
    76e4:	str	r0, [fp, #-60]	; 0xffffffc4
    76e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    76ec:	ldr	r3, [fp, #-16]
    76f0:	cmp	r2, r3
    76f4:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    76f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    76fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7700:	cmp	r2, r3
    7704:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    7708:	vldr	d7, [fp, #-36]	; 0xffffffdc
    770c:	vmov.f64	d0, d7
    7710:	ldr	r0, [fp, #-20]	; 0xffffffec
    7714:	bl	534 <flatbuffers_double_write_to_pe>
    7718:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    771c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7720:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7724:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7728:	bl	0 <flatcc_json_parser_unmatched_symbol>
    772c:	str	r0, [fp, #-60]	; 0xffffffc4
    7730:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7734:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7738:	ldr	r1, [fp, #-60]	; 0xffffffc4
    773c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7740:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7744:	str	r0, [fp, #-60]	; 0xffffffc4
    7748:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    774c:	ldrd	r2, [fp, #-12]
    7750:	mvn	r0, #0
    7754:	mvn	r1, #-2013265920	; 0x88000000
    7758:	cmp	r3, r1
    775c:	cmpeq	r2, r0
    7760:	bhi	784c <MyGame_Example_Vec3_parse_json_struct_inline+0x3b0>
    7764:	ldrd	r2, [fp, #-12]
    7768:	mov	r0, #-16777216	; 0xff000000
    776c:	mvn	r1, #0
    7770:	and	r2, r2, r0
    7774:	and	r3, r3, r1
    7778:	add	r1, pc, #176	; 0xb0
    777c:	ldrd	r0, [r1]
    7780:	cmp	r3, r1
    7784:	cmpeq	r2, r0
    7788:	bne	77fc <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    778c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7790:	str	r3, [fp, #-16]
    7794:	mov	r3, #5
    7798:	ldr	r2, [fp, #-64]	; 0xffffffc0
    779c:	ldr	r1, [fp, #-16]
    77a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    77a4:	bl	1574 <flatcc_json_parser_match_symbol>
    77a8:	str	r0, [fp, #-60]	; 0xffffffc4
    77ac:	ldr	r2, [fp, #-16]
    77b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    77b4:	cmp	r2, r3
    77b8:	beq	77e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x348>
    77bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    77c0:	add	r3, r3, #26
    77c4:	str	r3, [fp, #-20]	; 0xffffffec
    77c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    77cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    77d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    77d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    77d8:	bl	5b70 <MyGame_Example_Test_parse_json_struct_inline>
    77dc:	str	r0, [fp, #-60]	; 0xffffffc4
    77e0:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    77e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    77e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    77ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    77f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77f4:	str	r0, [fp, #-60]	; 0xffffffc4
    77f8:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    77fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7800:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7804:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7808:	bl	0 <flatcc_json_parser_unmatched_symbol>
    780c:	str	r0, [fp, #-60]	; 0xffffffc4
    7810:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7814:	nop			; (mov r0, r0)
    7818:	.word	0x32ffffff
    781c:	.word	0x74657374
    7820:	.word	0x32000000
    7824:	.word	0x74657374
    7828:	.word	0x31000000
    782c:	.word	0x74657374
    7830:	.word	0x33000000
    7834:	.word	0x74657374
    7838:	.word	0x000000a4
    783c:	.word	0x000000b4
    7840:	.word	0x000000c0
    7844:	.word	0x000000cc
    7848:	.word	0x000000d8
    784c:	ldrd	r2, [fp, #-12]
    7850:	mvn	r0, #0
    7854:	mvn	r1, #-2030043136	; 0x87000000
    7858:	cmp	r3, r1
    785c:	cmpeq	r2, r0
    7860:	bhi	7980 <MyGame_Example_Vec3_parse_json_struct_inline+0x4e4>
    7864:	ldrd	r2, [fp, #-12]
    7868:	mov	r0, #0
    786c:	mov	r1, #-16777216	; 0xff000000
    7870:	and	r2, r2, r0
    7874:	and	r3, r3, r1
    7878:	cmp	r3, #2013265920	; 0x78000000
    787c:	cmpeq	r2, #0
    7880:	bne	7968 <MyGame_Example_Vec3_parse_json_struct_inline+0x4cc>
    7884:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7888:	str	r3, [fp, #-16]
    788c:	mov	r3, #1
    7890:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7894:	ldr	r1, [fp, #-16]
    7898:	ldr	r0, [fp, #-56]	; 0xffffffc8
    789c:	bl	1574 <flatcc_json_parser_match_symbol>
    78a0:	str	r0, [fp, #-60]	; 0xffffffc4
    78a4:	ldr	r2, [fp, #-16]
    78a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    78ac:	cmp	r2, r3
    78b0:	beq	7950 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b4>
    78b4:	mov	r3, #0
    78b8:	str	r3, [fp, #-40]	; 0xffffffd8
    78bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    78c0:	str	r3, [fp, #-20]	; 0xffffffec
    78c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    78c8:	str	r3, [fp, #-16]
    78cc:	sub	r3, fp, #40	; 0x28
    78d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    78d4:	ldr	r1, [fp, #-16]
    78d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    78dc:	bl	0 <flatcc_json_parser_float>
    78e0:	str	r0, [fp, #-60]	; 0xffffffc4
    78e4:	ldr	r2, [fp, #-16]
    78e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    78ec:	cmp	r2, r3
    78f0:	bne	793c <MyGame_Example_Vec3_parse_json_struct_inline+0x4a0>
    78f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    78f8:	str	r3, [fp, #-16]
    78fc:	sub	r3, fp, #40	; 0x28
    7900:	str	r3, [sp]
    7904:	ldr	r3, [pc, #-204]	; 7840 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a4>
    7908:	ldr	r2, [fp, #-64]	; 0xffffffc0
    790c:	ldr	r1, [fp, #-16]
    7910:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7914:	bl	3590 <flatcc_json_parser_symbolic_float>
    7918:	str	r0, [fp, #-60]	; 0xffffffc4
    791c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7920:	ldr	r3, [fp, #-16]
    7924:	cmp	r2, r3
    7928:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    792c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7930:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7934:	cmp	r2, r3
    7938:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    793c:	vldr	s15, [fp, #-40]	; 0xffffffd8
    7940:	vmov.f32	s0, s15
    7944:	ldr	r0, [fp, #-20]	; 0xffffffec
    7948:	bl	460 <flatbuffers_float_write_to_pe>
    794c:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7950:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7954:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7958:	ldr	r0, [fp, #-56]	; 0xffffffc8
    795c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7960:	str	r0, [fp, #-60]	; 0xffffffc4
    7964:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7968:	ldr	r2, [fp, #-64]	; 0xffffffc0
    796c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7970:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7974:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7978:	str	r0, [fp, #-60]	; 0xffffffc4
    797c:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7980:	ldrd	r2, [fp, #-12]
    7984:	mov	r0, #0
    7988:	mov	r1, #-16777216	; 0xff000000
    798c:	and	r2, r2, r0
    7990:	and	r3, r3, r1
    7994:	cmp	r3, #2046820352	; 0x7a000000
    7998:	cmpeq	r2, #0
    799c:	bne	7a88 <MyGame_Example_Vec3_parse_json_struct_inline+0x5ec>
    79a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    79a4:	str	r3, [fp, #-16]
    79a8:	mov	r3, #1
    79ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
    79b0:	ldr	r1, [fp, #-16]
    79b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    79b8:	bl	1574 <flatcc_json_parser_match_symbol>
    79bc:	str	r0, [fp, #-60]	; 0xffffffc4
    79c0:	ldr	r2, [fp, #-16]
    79c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    79c8:	cmp	r2, r3
    79cc:	beq	7a70 <MyGame_Example_Vec3_parse_json_struct_inline+0x5d4>
    79d0:	mov	r3, #0
    79d4:	str	r3, [fp, #-44]	; 0xffffffd4
    79d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    79dc:	add	r3, r3, #8
    79e0:	str	r3, [fp, #-20]	; 0xffffffec
    79e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    79e8:	str	r3, [fp, #-16]
    79ec:	sub	r3, fp, #44	; 0x2c
    79f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    79f4:	ldr	r1, [fp, #-16]
    79f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    79fc:	bl	0 <flatcc_json_parser_float>
    7a00:	str	r0, [fp, #-60]	; 0xffffffc4
    7a04:	ldr	r2, [fp, #-16]
    7a08:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7a0c:	cmp	r2, r3
    7a10:	bne	7a5c <MyGame_Example_Vec3_parse_json_struct_inline+0x5c0>
    7a14:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7a18:	str	r3, [fp, #-16]
    7a1c:	sub	r3, fp, #44	; 0x2c
    7a20:	str	r3, [sp]
    7a24:	ldr	r3, [pc, #-488]	; 7844 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a8>
    7a28:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7a2c:	ldr	r1, [fp, #-16]
    7a30:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7a34:	bl	3590 <flatcc_json_parser_symbolic_float>
    7a38:	str	r0, [fp, #-60]	; 0xffffffc4
    7a3c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7a40:	ldr	r3, [fp, #-16]
    7a44:	cmp	r2, r3
    7a48:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    7a4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7a50:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7a54:	cmp	r2, r3
    7a58:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    7a5c:	vldr	s15, [fp, #-44]	; 0xffffffd4
    7a60:	vmov.f32	s0, s15
    7a64:	ldr	r0, [fp, #-20]	; 0xffffffec
    7a68:	bl	460 <flatbuffers_float_write_to_pe>
    7a6c:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7a70:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7a74:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7a78:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7a7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a80:	str	r0, [fp, #-60]	; 0xffffffc4
    7a84:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7a88:	ldrd	r2, [fp, #-12]
    7a8c:	mov	r0, #0
    7a90:	mov	r1, #-16777216	; 0xff000000
    7a94:	and	r2, r2, r0
    7a98:	and	r3, r3, r1
    7a9c:	cmp	r3, #2030043136	; 0x79000000
    7aa0:	cmpeq	r2, #0
    7aa4:	bne	7b90 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f4>
    7aa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7aac:	str	r3, [fp, #-16]
    7ab0:	mov	r3, #1
    7ab4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7ab8:	ldr	r1, [fp, #-16]
    7abc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7ac0:	bl	1574 <flatcc_json_parser_match_symbol>
    7ac4:	str	r0, [fp, #-60]	; 0xffffffc4
    7ac8:	ldr	r2, [fp, #-16]
    7acc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7ad0:	cmp	r2, r3
    7ad4:	beq	7b78 <MyGame_Example_Vec3_parse_json_struct_inline+0x6dc>
    7ad8:	mov	r3, #0
    7adc:	str	r3, [fp, #-48]	; 0xffffffd0
    7ae0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7ae4:	add	r3, r3, #4
    7ae8:	str	r3, [fp, #-20]	; 0xffffffec
    7aec:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7af0:	str	r3, [fp, #-16]
    7af4:	sub	r3, fp, #48	; 0x30
    7af8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7afc:	ldr	r1, [fp, #-16]
    7b00:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7b04:	bl	0 <flatcc_json_parser_float>
    7b08:	str	r0, [fp, #-60]	; 0xffffffc4
    7b0c:	ldr	r2, [fp, #-16]
    7b10:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7b14:	cmp	r2, r3
    7b18:	bne	7b64 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c8>
    7b1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7b20:	str	r3, [fp, #-16]
    7b24:	sub	r3, fp, #48	; 0x30
    7b28:	str	r3, [sp]
    7b2c:	ldr	r3, [pc, #-748]	; 7848 <MyGame_Example_Vec3_parse_json_struct_inline+0x3ac>
    7b30:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7b34:	ldr	r1, [fp, #-16]
    7b38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7b3c:	bl	3590 <flatcc_json_parser_symbolic_float>
    7b40:	str	r0, [fp, #-60]	; 0xffffffc4
    7b44:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7b48:	ldr	r3, [fp, #-16]
    7b4c:	cmp	r2, r3
    7b50:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    7b54:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7b58:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7b5c:	cmp	r2, r3
    7b60:	beq	7bd0 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    7b64:	vldr	s15, [fp, #-48]	; 0xffffffd0
    7b68:	vmov.f32	s0, s15
    7b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7b70:	bl	460 <flatbuffers_float_write_to_pe>
    7b74:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7b78:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7b7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7b80:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7b84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b88:	str	r0, [fp, #-60]	; 0xffffffc4
    7b8c:	b	7ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7b90:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7b94:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7b98:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7b9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7ba0:	str	r0, [fp, #-60]	; 0xffffffc4
    7ba4:	sub	r3, fp, #24
    7ba8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7bac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7bb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7bb4:	bl	11bc <flatcc_json_parser_object_end>
    7bb8:	str	r0, [fp, #-60]	; 0xffffffc4
    7bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7bc0:	cmp	r3, #0
    7bc4:	bne	74d4 <MyGame_Example_Vec3_parse_json_struct_inline+0x38>
    7bc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7bcc:	b	7be8 <MyGame_Example_Vec3_parse_json_struct_inline+0x74c>
    7bd0:	mov	r3, #33	; 0x21
    7bd4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7bd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7bdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7be0:	bl	0 <flatcc_json_parser_set_error>
    7be4:	mov	r3, r0
    7be8:	mov	r0, r3
    7bec:	sub	sp, fp, #4
    7bf0:	pop	{fp, pc}

00007bf4 <MyGame_Example_Vec3_parse_json_struct>:
    7bf4:	push	{fp, lr}
    7bf8:	add	fp, sp, #4
    7bfc:	sub	sp, sp, #24
    7c00:	str	r0, [fp, #-16]
    7c04:	str	r1, [fp, #-20]	; 0xffffffec
    7c08:	str	r2, [fp, #-24]	; 0xffffffe8
    7c0c:	str	r3, [fp, #-28]	; 0xffffffe4
    7c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7c14:	mov	r2, #0
    7c18:	str	r2, [r3]
    7c1c:	ldr	r3, [fp, #-16]
    7c20:	ldr	r3, [r3]
    7c24:	mov	r2, #16
    7c28:	mov	r1, #32
    7c2c:	mov	r0, r3
    7c30:	bl	0 <flatcc_builder_start_struct>
    7c34:	str	r0, [fp, #-8]
    7c38:	ldr	r3, [fp, #-8]
    7c3c:	cmp	r3, #0
    7c40:	beq	7ca0 <MyGame_Example_Vec3_parse_json_struct+0xac>
    7c44:	ldr	r3, [fp, #-8]
    7c48:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    7c50:	ldr	r0, [fp, #-16]
    7c54:	bl	749c <MyGame_Example_Vec3_parse_json_struct_inline>
    7c58:	str	r0, [fp, #-20]	; 0xffffffec
    7c5c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7c64:	cmp	r2, r3
    7c68:	beq	7ca4 <MyGame_Example_Vec3_parse_json_struct+0xb0>
    7c6c:	ldr	r3, [fp, #-16]
    7c70:	ldr	r3, [r3]
    7c74:	mov	r0, r3
    7c78:	bl	0 <flatcc_builder_end_struct>
    7c7c:	mov	r2, r0
    7c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7c84:	str	r2, [r3]
    7c88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7c8c:	ldr	r3, [r3]
    7c90:	cmp	r3, #0
    7c94:	beq	7ca4 <MyGame_Example_Vec3_parse_json_struct+0xb0>
    7c98:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c9c:	b	7cbc <MyGame_Example_Vec3_parse_json_struct+0xc8>
    7ca0:	nop			; (mov r0, r0)
    7ca4:	mov	r3, #33	; 0x21
    7ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7cac:	ldr	r1, [fp, #-20]	; 0xffffffec
    7cb0:	ldr	r0, [fp, #-16]
    7cb4:	bl	0 <flatcc_json_parser_set_error>
    7cb8:	mov	r3, r0
    7cbc:	mov	r0, r3
    7cc0:	sub	sp, fp, #4
    7cc4:	pop	{fp, pc}

00007cc8 <MyGame_Example_Ability_parse_json_struct_inline>:
    7cc8:	push	{fp, lr}
    7ccc:	add	fp, sp, #4
    7cd0:	sub	sp, sp, #56	; 0x38
    7cd4:	str	r0, [fp, #-40]	; 0xffffffd8
    7cd8:	str	r1, [fp, #-44]	; 0xffffffd4
    7cdc:	str	r2, [fp, #-48]	; 0xffffffd0
    7ce0:	str	r3, [fp, #-52]	; 0xffffffcc
    7ce4:	sub	r3, fp, #24
    7ce8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7cec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7cf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7cf4:	bl	10d4 <flatcc_json_parser_object_start>
    7cf8:	str	r0, [fp, #-44]	; 0xffffffd4
    7cfc:	b	7f5c <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    7d00:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7d04:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7d0c:	bl	cc4 <flatcc_json_parser_symbol_start>
    7d10:	str	r0, [fp, #-44]	; 0xffffffd4
    7d14:	ldr	r1, [fp, #-48]	; 0xffffffd0
    7d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    7d1c:	bl	fa8 <flatcc_json_parser_symbol_part>
    7d20:	strd	r0, [fp, #-12]
    7d24:	ldrd	r2, [fp, #-12]
    7d28:	mov	r0, #0
    7d2c:	ldr	r1, [pc, #620]	; 7fa0 <MyGame_Example_Ability_parse_json_struct_inline+0x2d8>
    7d30:	and	r2, r2, r0
    7d34:	and	r3, r3, r1
    7d38:	mov	r0, #0
    7d3c:	ldr	r1, [pc, #608]	; 7fa4 <MyGame_Example_Ability_parse_json_struct_inline+0x2dc>
    7d40:	cmp	r3, r1
    7d44:	cmpeq	r2, r0
    7d48:	bne	7e30 <MyGame_Example_Ability_parse_json_struct_inline+0x168>
    7d4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7d50:	str	r3, [fp, #-16]
    7d54:	mov	r3, #2
    7d58:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7d5c:	ldr	r1, [fp, #-16]
    7d60:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7d64:	bl	1574 <flatcc_json_parser_match_symbol>
    7d68:	str	r0, [fp, #-44]	; 0xffffffd4
    7d6c:	ldr	r2, [fp, #-16]
    7d70:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7d74:	cmp	r2, r3
    7d78:	beq	7e18 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    7d7c:	mov	r3, #0
    7d80:	str	r3, [fp, #-28]	; 0xffffffe4
    7d84:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7d88:	str	r3, [fp, #-20]	; 0xffffffec
    7d8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7d90:	str	r3, [fp, #-16]
    7d94:	sub	r3, fp, #28
    7d98:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7d9c:	ldr	r1, [fp, #-16]
    7da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7da4:	bl	1e68 <flatcc_json_parser_uint32>
    7da8:	str	r0, [fp, #-44]	; 0xffffffd4
    7dac:	ldr	r2, [fp, #-16]
    7db0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7db4:	cmp	r2, r3
    7db8:	bne	7e04 <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    7dbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7dc0:	str	r3, [fp, #-16]
    7dc4:	sub	r3, fp, #28
    7dc8:	str	r3, [sp]
    7dcc:	ldr	r3, [pc, #468]	; 7fa8 <MyGame_Example_Ability_parse_json_struct_inline+0x2e0>
    7dd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7dd4:	ldr	r1, [fp, #-16]
    7dd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7ddc:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    7de0:	str	r0, [fp, #-44]	; 0xffffffd4
    7de4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7de8:	ldr	r3, [fp, #-16]
    7dec:	cmp	r2, r3
    7df0:	beq	7f70 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    7df4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7df8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7dfc:	cmp	r2, r3
    7e00:	beq	7f70 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    7e04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7e08:	mov	r1, r3
    7e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7e10:	bl	f4 <flatbuffers_uint32_write_to_pe>
    7e14:	b	7f44 <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    7e18:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7e1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7e20:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7e24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7e28:	str	r0, [fp, #-44]	; 0xffffffd4
    7e2c:	b	7f44 <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    7e30:	ldrd	r2, [fp, #-12]
    7e34:	add	r1, pc, #348	; 0x15c
    7e38:	ldrd	r0, [r1]
    7e3c:	cmp	r3, r1
    7e40:	cmpeq	r2, r0
    7e44:	bne	7f30 <MyGame_Example_Ability_parse_json_struct_inline+0x268>
    7e48:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7e4c:	str	r3, [fp, #-16]
    7e50:	mov	r3, #8
    7e54:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7e58:	ldr	r1, [fp, #-16]
    7e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7e60:	bl	1574 <flatcc_json_parser_match_symbol>
    7e64:	str	r0, [fp, #-44]	; 0xffffffd4
    7e68:	ldr	r2, [fp, #-16]
    7e6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7e70:	cmp	r2, r3
    7e74:	beq	7f18 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    7e78:	mov	r3, #0
    7e7c:	str	r3, [fp, #-32]	; 0xffffffe0
    7e80:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7e84:	add	r3, r3, #4
    7e88:	str	r3, [fp, #-20]	; 0xffffffec
    7e8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7e90:	str	r3, [fp, #-16]
    7e94:	sub	r3, fp, #32
    7e98:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7e9c:	ldr	r1, [fp, #-16]
    7ea0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7ea4:	bl	1e68 <flatcc_json_parser_uint32>
    7ea8:	str	r0, [fp, #-44]	; 0xffffffd4
    7eac:	ldr	r2, [fp, #-16]
    7eb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7eb4:	cmp	r2, r3
    7eb8:	bne	7f04 <MyGame_Example_Ability_parse_json_struct_inline+0x23c>
    7ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7ec0:	str	r3, [fp, #-16]
    7ec4:	sub	r3, fp, #32
    7ec8:	str	r3, [sp]
    7ecc:	ldr	r3, [pc, #216]	; 7fac <MyGame_Example_Ability_parse_json_struct_inline+0x2e4>
    7ed0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7ed4:	ldr	r1, [fp, #-16]
    7ed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7edc:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    7ee0:	str	r0, [fp, #-44]	; 0xffffffd4
    7ee4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7ee8:	ldr	r3, [fp, #-16]
    7eec:	cmp	r2, r3
    7ef0:	beq	7f70 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    7ef4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7ef8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7efc:	cmp	r2, r3
    7f00:	beq	7f70 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    7f04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7f08:	mov	r1, r3
    7f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7f10:	bl	f4 <flatbuffers_uint32_write_to_pe>
    7f14:	b	7f44 <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    7f18:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7f1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7f20:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7f24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f28:	str	r0, [fp, #-44]	; 0xffffffd4
    7f2c:	b	7f44 <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    7f30:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7f34:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7f38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7f3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f40:	str	r0, [fp, #-44]	; 0xffffffd4
    7f44:	sub	r3, fp, #24
    7f48:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7f4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7f54:	bl	11bc <flatcc_json_parser_object_end>
    7f58:	str	r0, [fp, #-44]	; 0xffffffd4
    7f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7f60:	cmp	r3, #0
    7f64:	bne	7d00 <MyGame_Example_Ability_parse_json_struct_inline+0x38>
    7f68:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7f6c:	b	7f88 <MyGame_Example_Ability_parse_json_struct_inline+0x2c0>
    7f70:	mov	r3, #33	; 0x21
    7f74:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7f7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7f80:	bl	0 <flatcc_json_parser_set_error>
    7f84:	mov	r3, r0
    7f88:	mov	r0, r3
    7f8c:	sub	sp, fp, #4
    7f90:	pop	{fp, pc}
    7f94:	nop			; (mov r0, r0)
    7f98:	.word	0x616e6365
    7f9c:	.word	0x64697374
    7fa0:	.word	0xffff0000
    7fa4:	.word	0x69640000
    7fa8:	.word	0x000000e4
    7fac:	.word	0x000000f0

00007fb0 <MyGame_Example_Ability_parse_json_struct>:
    7fb0:	push	{fp, lr}
    7fb4:	add	fp, sp, #4
    7fb8:	sub	sp, sp, #24
    7fbc:	str	r0, [fp, #-16]
    7fc0:	str	r1, [fp, #-20]	; 0xffffffec
    7fc4:	str	r2, [fp, #-24]	; 0xffffffe8
    7fc8:	str	r3, [fp, #-28]	; 0xffffffe4
    7fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7fd0:	mov	r2, #0
    7fd4:	str	r2, [r3]
    7fd8:	ldr	r3, [fp, #-16]
    7fdc:	ldr	r3, [r3]
    7fe0:	mov	r2, #4
    7fe4:	mov	r1, #8
    7fe8:	mov	r0, r3
    7fec:	bl	0 <flatcc_builder_start_struct>
    7ff0:	str	r0, [fp, #-8]
    7ff4:	ldr	r3, [fp, #-8]
    7ff8:	cmp	r3, #0
    7ffc:	beq	805c <MyGame_Example_Ability_parse_json_struct+0xac>
    8000:	ldr	r3, [fp, #-8]
    8004:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8008:	ldr	r1, [fp, #-20]	; 0xffffffec
    800c:	ldr	r0, [fp, #-16]
    8010:	bl	7cc8 <MyGame_Example_Ability_parse_json_struct_inline>
    8014:	str	r0, [fp, #-20]	; 0xffffffec
    8018:	ldr	r2, [fp, #-20]	; 0xffffffec
    801c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8020:	cmp	r2, r3
    8024:	beq	8060 <MyGame_Example_Ability_parse_json_struct+0xb0>
    8028:	ldr	r3, [fp, #-16]
    802c:	ldr	r3, [r3]
    8030:	mov	r0, r3
    8034:	bl	0 <flatcc_builder_end_struct>
    8038:	mov	r2, r0
    803c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8040:	str	r2, [r3]
    8044:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8048:	ldr	r3, [r3]
    804c:	cmp	r3, #0
    8050:	beq	8060 <MyGame_Example_Ability_parse_json_struct+0xb0>
    8054:	ldr	r3, [fp, #-20]	; 0xffffffec
    8058:	b	8078 <MyGame_Example_Ability_parse_json_struct+0xc8>
    805c:	nop			; (mov r0, r0)
    8060:	mov	r3, #33	; 0x21
    8064:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8068:	ldr	r1, [fp, #-20]	; 0xffffffec
    806c:	ldr	r0, [fp, #-16]
    8070:	bl	0 <flatcc_json_parser_set_error>
    8074:	mov	r3, r0
    8078:	mov	r0, r3
    807c:	sub	sp, fp, #4
    8080:	pop	{fp, pc}

00008084 <MyGame_Example_Stat_parse_json_table>:
    8084:	push	{fp, lr}
    8088:	add	fp, sp, #4
    808c:	sub	sp, sp, #64	; 0x40
    8090:	str	r0, [fp, #-48]	; 0xffffffd0
    8094:	str	r1, [fp, #-52]	; 0xffffffcc
    8098:	str	r2, [fp, #-56]	; 0xffffffc8
    809c:	str	r3, [fp, #-60]	; 0xffffffc4
    80a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    80a4:	mov	r2, #0
    80a8:	str	r2, [r3]
    80ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    80b0:	ldr	r3, [r3]
    80b4:	mov	r1, #3
    80b8:	mov	r0, r3
    80bc:	bl	0 <flatcc_builder_start_table>
    80c0:	mov	r3, r0
    80c4:	cmp	r3, #0
    80c8:	bne	853c <MyGame_Example_Stat_parse_json_table+0x4b8>
    80cc:	sub	r3, fp, #28
    80d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    80d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    80d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    80dc:	bl	10d4 <flatcc_json_parser_object_start>
    80e0:	str	r0, [fp, #-52]	; 0xffffffcc
    80e4:	b	84c8 <MyGame_Example_Stat_parse_json_table+0x444>
    80e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    80ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    80f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    80f4:	bl	cc4 <flatcc_json_parser_symbol_start>
    80f8:	str	r0, [fp, #-52]	; 0xffffffcc
    80fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8100:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8104:	bl	fa8 <flatcc_json_parser_symbol_part>
    8108:	strd	r0, [fp, #-12]
    810c:	ldrd	r2, [fp, #-12]
    8110:	mvn	r0, #0
    8114:	ldr	r1, [pc, #1036]	; 8528 <MyGame_Example_Stat_parse_json_table+0x4a4>
    8118:	cmp	r3, r1
    811c:	cmpeq	r2, r0
    8120:	bhi	8288 <MyGame_Example_Stat_parse_json_table+0x204>
    8124:	ldrd	r2, [fp, #-12]
    8128:	mov	r0, #-16777216	; 0xff000000
    812c:	mvn	r1, #0
    8130:	and	r2, r2, r0
    8134:	and	r3, r3, r1
    8138:	add	r1, pc, #984	; 0x3d8
    813c:	ldrd	r0, [r1]
    8140:	cmp	r3, r1
    8144:	cmpeq	r2, r0
    8148:	bne	8270 <MyGame_Example_Stat_parse_json_table+0x1ec>
    814c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8150:	str	r3, [fp, #-16]
    8154:	mov	r3, #5
    8158:	ldr	r2, [fp, #-56]	; 0xffffffc8
    815c:	ldr	r1, [fp, #-16]
    8160:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8164:	bl	1574 <flatcc_json_parser_match_symbol>
    8168:	str	r0, [fp, #-52]	; 0xffffffcc
    816c:	ldr	r2, [fp, #-16]
    8170:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8174:	cmp	r2, r3
    8178:	beq	8258 <MyGame_Example_Stat_parse_json_table+0x1d4>
    817c:	mov	r3, #0
    8180:	strh	r3, [fp, #-34]	; 0xffffffde
    8184:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8188:	str	r3, [fp, #-16]
    818c:	sub	r3, fp, #34	; 0x22
    8190:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8194:	ldr	r1, [fp, #-16]
    8198:	ldr	r0, [fp, #-48]	; 0xffffffd0
    819c:	bl	1f38 <flatcc_json_parser_uint16>
    81a0:	str	r0, [fp, #-52]	; 0xffffffcc
    81a4:	ldr	r2, [fp, #-16]
    81a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    81ac:	cmp	r2, r3
    81b0:	bne	81fc <MyGame_Example_Stat_parse_json_table+0x178>
    81b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    81b8:	str	r3, [fp, #-16]
    81bc:	sub	r3, fp, #34	; 0x22
    81c0:	str	r3, [sp]
    81c4:	ldr	r3, [pc, #864]	; 852c <MyGame_Example_Stat_parse_json_table+0x4a8>
    81c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    81cc:	ldr	r1, [fp, #-16]
    81d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    81d4:	bl	28c4 <flatcc_json_parser_symbolic_uint16>
    81d8:	str	r0, [fp, #-52]	; 0xffffffcc
    81dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    81e0:	ldr	r3, [fp, #-16]
    81e4:	cmp	r2, r3
    81e8:	beq	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    81ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
    81f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    81f4:	cmp	r2, r3
    81f8:	beq	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    81fc:	ldrh	r3, [fp, #-34]	; 0xffffffde
    8200:	cmp	r3, #0
    8204:	bne	821c <MyGame_Example_Stat_parse_json_table+0x198>
    8208:	ldr	r3, [fp, #-48]	; 0xffffffd0
    820c:	ldr	r3, [r3, #8]
    8210:	and	r3, r3, #2
    8214:	cmp	r3, #0
    8218:	beq	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    821c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8220:	ldr	r0, [r3]
    8224:	mov	r3, #2
    8228:	mov	r2, #2
    822c:	mov	r1, #2
    8230:	bl	0 <flatcc_builder_table_add>
    8234:	str	r0, [fp, #-20]	; 0xffffffec
    8238:	ldr	r3, [fp, #-20]	; 0xffffffec
    823c:	cmp	r3, #0
    8240:	beq	8544 <MyGame_Example_Stat_parse_json_table+0x4c0>
    8244:	ldrh	r3, [fp, #-34]	; 0xffffffde
    8248:	mov	r1, r3
    824c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8250:	bl	90 <flatbuffers_uint16_write_to_pe>
    8254:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    8258:	ldr	r2, [fp, #-56]	; 0xffffffc8
    825c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8260:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8264:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8268:	str	r0, [fp, #-52]	; 0xffffffcc
    826c:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    8270:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8274:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8278:	ldr	r0, [fp, #-48]	; 0xffffffd0
    827c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8280:	str	r0, [fp, #-52]	; 0xffffffcc
    8284:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    8288:	ldrd	r2, [fp, #-12]
    828c:	mov	r0, #0
    8290:	mvn	r1, #255	; 0xff
    8294:	and	r2, r2, r0
    8298:	and	r3, r3, r1
    829c:	add	r1, pc, #636	; 0x27c
    82a0:	ldrd	r0, [r1]
    82a4:	cmp	r3, r1
    82a8:	cmpeq	r2, r0
    82ac:	bne	83d4 <MyGame_Example_Stat_parse_json_table+0x350>
    82b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    82b4:	str	r3, [fp, #-16]
    82b8:	mov	r3, #3
    82bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    82c0:	ldr	r1, [fp, #-16]
    82c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    82c8:	bl	1574 <flatcc_json_parser_match_symbol>
    82cc:	str	r0, [fp, #-52]	; 0xffffffcc
    82d0:	ldr	r2, [fp, #-16]
    82d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    82d8:	cmp	r2, r3
    82dc:	beq	83bc <MyGame_Example_Stat_parse_json_table+0x338>
    82e0:	mov	r2, #0
    82e4:	mov	r3, #0
    82e8:	strd	r2, [fp, #-44]	; 0xffffffd4
    82ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    82f0:	str	r3, [fp, #-16]
    82f4:	sub	r3, fp, #44	; 0x2c
    82f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    82fc:	ldr	r1, [fp, #-16]
    8300:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8304:	bl	20d8 <flatcc_json_parser_int64>
    8308:	str	r0, [fp, #-52]	; 0xffffffcc
    830c:	ldr	r2, [fp, #-16]
    8310:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8314:	cmp	r2, r3
    8318:	bne	8364 <MyGame_Example_Stat_parse_json_table+0x2e0>
    831c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8320:	str	r3, [fp, #-16]
    8324:	sub	r3, fp, #44	; 0x2c
    8328:	str	r3, [sp]
    832c:	ldr	r3, [pc, #508]	; 8530 <MyGame_Example_Stat_parse_json_table+0x4ac>
    8330:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8334:	ldr	r1, [fp, #-16]
    8338:	ldr	r0, [fp, #-48]	; 0xffffffd0
    833c:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    8340:	str	r0, [fp, #-52]	; 0xffffffcc
    8344:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8348:	ldr	r3, [fp, #-16]
    834c:	cmp	r2, r3
    8350:	beq	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    8354:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8358:	ldr	r3, [fp, #-56]	; 0xffffffc8
    835c:	cmp	r2, r3
    8360:	beq	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    8364:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    8368:	orrs	r3, r2, r3
    836c:	bne	8384 <MyGame_Example_Stat_parse_json_table+0x300>
    8370:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8374:	ldr	r3, [r3, #8]
    8378:	and	r3, r3, #2
    837c:	cmp	r3, #0
    8380:	beq	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    8384:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8388:	ldr	r0, [r3]
    838c:	mov	r3, #8
    8390:	mov	r2, #8
    8394:	mov	r1, #1
    8398:	bl	0 <flatcc_builder_table_add>
    839c:	str	r0, [fp, #-20]	; 0xffffffec
    83a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    83a4:	cmp	r3, #0
    83a8:	beq	854c <MyGame_Example_Stat_parse_json_table+0x4c8>
    83ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    83b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    83b4:	bl	388 <flatbuffers_int64_write_to_pe>
    83b8:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    83bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    83c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    83c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    83c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    83cc:	str	r0, [fp, #-52]	; 0xffffffcc
    83d0:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    83d4:	ldrd	r2, [fp, #-12]
    83d8:	mov	r0, #0
    83dc:	ldr	r1, [pc, #336]	; 8534 <MyGame_Example_Stat_parse_json_table+0x4b0>
    83e0:	and	r2, r2, r0
    83e4:	and	r3, r3, r1
    83e8:	mov	r0, #0
    83ec:	ldr	r1, [pc, #324]	; 8538 <MyGame_Example_Stat_parse_json_table+0x4b4>
    83f0:	cmp	r3, r1
    83f4:	cmpeq	r2, r0
    83f8:	bne	849c <MyGame_Example_Stat_parse_json_table+0x418>
    83fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8400:	str	r3, [fp, #-16]
    8404:	mov	r3, #2
    8408:	ldr	r2, [fp, #-56]	; 0xffffffc8
    840c:	ldr	r1, [fp, #-16]
    8410:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8414:	bl	1574 <flatcc_json_parser_match_symbol>
    8418:	str	r0, [fp, #-52]	; 0xffffffcc
    841c:	ldr	r2, [fp, #-16]
    8420:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8424:	cmp	r2, r3
    8428:	beq	8484 <MyGame_Example_Stat_parse_json_table+0x400>
    842c:	sub	r3, fp, #32
    8430:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8434:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8438:	ldr	r0, [fp, #-48]	; 0xffffffd0
    843c:	bl	0 <flatcc_json_parser_build_string>
    8440:	str	r0, [fp, #-52]	; 0xffffffcc
    8444:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8448:	cmp	r3, #0
    844c:	beq	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    8450:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8454:	ldr	r3, [r3]
    8458:	mov	r1, #0
    845c:	mov	r0, r3
    8460:	bl	0 <flatcc_builder_table_add_offset>
    8464:	str	r0, [fp, #-24]	; 0xffffffe8
    8468:	ldr	r3, [fp, #-24]	; 0xffffffe8
    846c:	cmp	r3, #0
    8470:	beq	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    8474:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8478:	ldr	r3, [fp, #-24]	; 0xffffffe8
    847c:	str	r2, [r3]
    8480:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    8484:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8488:	ldr	r1, [fp, #-52]	; 0xffffffcc
    848c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8490:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8494:	str	r0, [fp, #-52]	; 0xffffffcc
    8498:	b	84b0 <MyGame_Example_Stat_parse_json_table+0x42c>
    849c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    84a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    84a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    84a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    84ac:	str	r0, [fp, #-52]	; 0xffffffcc
    84b0:	sub	r3, fp, #28
    84b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    84b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    84bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    84c0:	bl	11bc <flatcc_json_parser_object_end>
    84c4:	str	r0, [fp, #-52]	; 0xffffffcc
    84c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    84cc:	cmp	r3, #0
    84d0:	bne	80e8 <MyGame_Example_Stat_parse_json_table+0x64>
    84d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    84d8:	ldr	r3, [r3, #24]
    84dc:	cmp	r3, #0
    84e0:	bne	8554 <MyGame_Example_Stat_parse_json_table+0x4d0>
    84e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    84e8:	ldr	r3, [r3]
    84ec:	mov	r0, r3
    84f0:	bl	0 <flatcc_builder_end_table>
    84f4:	mov	r2, r0
    84f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    84fc:	str	r2, [r3]
    8500:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8504:	ldr	r3, [r3]
    8508:	cmp	r3, #0
    850c:	beq	855c <MyGame_Example_Stat_parse_json_table+0x4d8>
    8510:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8514:	b	8578 <MyGame_Example_Stat_parse_json_table+0x4f4>
    8518:	.word	0x74000000
    851c:	.word	0x636f756e
    8520:	.word	0x00000000
    8524:	.word	0x76616c00
    8528:	.word	0x6963ffff
    852c:	.word	0x000000fc
    8530:	.word	0x00000108
    8534:	.word	0xffff0000
    8538:	.word	0x69640000
    853c:	nop			; (mov r0, r0)
    8540:	b	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    8544:	nop			; (mov r0, r0)
    8548:	b	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    854c:	nop			; (mov r0, r0)
    8550:	b	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    8554:	nop			; (mov r0, r0)
    8558:	b	8560 <MyGame_Example_Stat_parse_json_table+0x4dc>
    855c:	nop			; (mov r0, r0)
    8560:	mov	r3, #33	; 0x21
    8564:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8568:	ldr	r1, [fp, #-52]	; 0xffffffcc
    856c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8570:	bl	0 <flatcc_json_parser_set_error>
    8574:	mov	r3, r0
    8578:	mov	r0, r3
    857c:	sub	sp, fp, #4
    8580:	pop	{fp, pc}

00008584 <MyGame_Example_Alt_parse_json_table>:
    8584:	push	{fp, lr}
    8588:	add	fp, sp, #4
    858c:	sub	sp, sp, #72	; 0x48
    8590:	str	r0, [fp, #-40]	; 0xffffffd8
    8594:	str	r1, [fp, #-44]	; 0xffffffd4
    8598:	str	r2, [fp, #-48]	; 0xffffffd0
    859c:	str	r3, [fp, #-52]	; 0xffffffcc
    85a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    85a4:	mov	r2, #0
    85a8:	str	r2, [r3]
    85ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    85b0:	ldr	r3, [r3]
    85b4:	mov	r1, #4
    85b8:	mov	r0, r3
    85bc:	bl	0 <flatcc_builder_start_table>
    85c0:	mov	r3, r0
    85c4:	cmp	r3, #0
    85c8:	bne	89f4 <MyGame_Example_Alt_parse_json_table+0x470>
    85cc:	sub	r3, fp, #32
    85d0:	str	r3, [sp]
    85d4:	mov	r3, #1
    85d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    85dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    85e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    85e4:	bl	0 <flatcc_json_parser_prepare_unions>
    85e8:	mov	r2, r0
    85ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    85f0:	cmp	r2, r3
    85f4:	beq	89fc <MyGame_Example_Alt_parse_json_table+0x478>
    85f8:	sub	r3, fp, #24
    85fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8600:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8604:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8608:	bl	10d4 <flatcc_json_parser_object_start>
    860c:	str	r0, [fp, #-44]	; 0xffffffd4
    8610:	b	898c <MyGame_Example_Alt_parse_json_table+0x408>
    8614:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8618:	ldr	r1, [fp, #-44]	; 0xffffffd4
    861c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8620:	bl	cc4 <flatcc_json_parser_symbol_start>
    8624:	str	r0, [fp, #-44]	; 0xffffffd4
    8628:	ldr	r1, [fp, #-48]	; 0xffffffd0
    862c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8630:	bl	fa8 <flatcc_json_parser_symbol_part>
    8634:	strd	r0, [fp, #-12]
    8638:	ldrd	r2, [fp, #-12]
    863c:	add	r1, pc, #972	; 0x3cc
    8640:	ldrd	r0, [r1]
    8644:	cmp	r3, r1
    8648:	cmpeq	r2, r0
    864c:	bne	8738 <MyGame_Example_Alt_parse_json_table+0x1b4>
    8650:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8654:	add	r3, r3, #8
    8658:	str	r3, [fp, #-44]	; 0xffffffd4
    865c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8660:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8664:	bl	fa8 <flatcc_json_parser_symbol_part>
    8668:	strd	r0, [fp, #-12]
    866c:	ldrd	r2, [fp, #-12]
    8670:	mov	r0, #0
    8674:	mvn	r1, #0
    8678:	and	r2, r2, r0
    867c:	and	r3, r3, r1
    8680:	add	r1, pc, #912	; 0x390
    8684:	ldrd	r0, [r1]
    8688:	cmp	r3, r1
    868c:	cmpeq	r2, r0
    8690:	bne	8720 <MyGame_Example_Alt_parse_json_table+0x19c>
    8694:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8698:	str	r3, [fp, #-16]
    869c:	mov	r3, #4
    86a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    86a4:	ldr	r1, [fp, #-16]
    86a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    86ac:	bl	1574 <flatcc_json_parser_match_symbol>
    86b0:	str	r0, [fp, #-44]	; 0xffffffd4
    86b4:	ldr	r2, [fp, #-16]
    86b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    86bc:	cmp	r2, r3
    86c0:	beq	8708 <MyGame_Example_Alt_parse_json_table+0x184>
    86c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    86c8:	ldr	r2, [pc, #872]	; 8a38 <MyGame_Example_Alt_parse_json_table+0x4b4>
    86cc:	str	r2, [sp, #16]
    86d0:	ldr	r2, [pc, #868]	; 8a3c <MyGame_Example_Alt_parse_json_table+0x4b8>
    86d4:	str	r2, [sp, #12]
    86d8:	ldr	r2, [pc, #864]	; 8a40 <MyGame_Example_Alt_parse_json_table+0x4bc>
    86dc:	str	r2, [sp, #8]
    86e0:	str	r3, [sp, #4]
    86e4:	mov	r3, #3
    86e8:	str	r3, [sp]
    86ec:	mov	r3, #0
    86f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    86f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    86f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    86fc:	bl	0 <flatcc_json_parser_union_type_vector>
    8700:	str	r0, [fp, #-44]	; 0xffffffd4
    8704:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8708:	ldr	r2, [fp, #-48]	; 0xffffffd0
    870c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8710:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8714:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8718:	str	r0, [fp, #-44]	; 0xffffffd4
    871c:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8720:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8724:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8728:	ldr	r0, [fp, #-40]	; 0xffffffd8
    872c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8730:	str	r0, [fp, #-44]	; 0xffffffd4
    8734:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8738:	ldrd	r2, [fp, #-12]
    873c:	mvn	r0, #255	; 0xff
    8740:	mvn	r1, #0
    8744:	and	r2, r2, r0
    8748:	and	r3, r3, r1
    874c:	add	r1, pc, #716	; 0x2cc
    8750:	ldrd	r0, [r1]
    8754:	cmp	r3, r1
    8758:	cmpeq	r2, r0
    875c:	bne	87c4 <MyGame_Example_Alt_parse_json_table+0x240>
    8760:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8764:	str	r3, [fp, #-16]
    8768:	mov	r3, #7
    876c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8770:	ldr	r1, [fp, #-16]
    8774:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8778:	bl	1574 <flatcc_json_parser_match_symbol>
    877c:	str	r0, [fp, #-44]	; 0xffffffd4
    8780:	ldr	r2, [fp, #-16]
    8784:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8788:	cmp	r2, r3
    878c:	beq	87cc <MyGame_Example_Alt_parse_json_table+0x248>
    8790:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8794:	ldr	r2, [pc, #672]	; 8a3c <MyGame_Example_Alt_parse_json_table+0x4b8>
    8798:	str	r2, [sp, #8]
    879c:	str	r3, [sp, #4]
    87a0:	mov	r3, #3
    87a4:	str	r3, [sp]
    87a8:	mov	r3, #0
    87ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
    87b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    87b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    87b8:	bl	0 <flatcc_json_parser_union_vector>
    87bc:	str	r0, [fp, #-44]	; 0xffffffd4
    87c0:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    87c4:	nop			; (mov r0, r0)
    87c8:	b	87d0 <MyGame_Example_Alt_parse_json_table+0x24c>
    87cc:	nop			; (mov r0, r0)
    87d0:	ldrd	r2, [fp, #-12]
    87d4:	ldr	r0, [pc, #616]	; 8a44 <MyGame_Example_Alt_parse_json_table+0x4c0>
    87d8:	mvn	r1, #0
    87dc:	and	r2, r2, r0
    87e0:	and	r3, r3, r1
    87e4:	add	r1, pc, #572	; 0x23c
    87e8:	ldrd	r0, [r1]
    87ec:	cmp	r3, r1
    87f0:	cmpeq	r2, r0
    87f4:	bne	8898 <MyGame_Example_Alt_parse_json_table+0x314>
    87f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    87fc:	str	r3, [fp, #-16]
    8800:	mov	r3, #6
    8804:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8808:	ldr	r1, [fp, #-16]
    880c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8810:	bl	1574 <flatcc_json_parser_match_symbol>
    8814:	str	r0, [fp, #-44]	; 0xffffffd4
    8818:	ldr	r2, [fp, #-16]
    881c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8820:	cmp	r2, r3
    8824:	beq	8880 <MyGame_Example_Alt_parse_json_table+0x2fc>
    8828:	sub	r3, fp, #28
    882c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8830:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8834:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8838:	bl	8a70 <MyGame_Example_TestJSONPrefix_parse_json_table>
    883c:	str	r0, [fp, #-44]	; 0xffffffd4
    8840:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8844:	cmp	r3, #0
    8848:	beq	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    884c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8850:	ldr	r3, [r3]
    8854:	mov	r1, #0
    8858:	mov	r0, r3
    885c:	bl	0 <flatcc_builder_table_add_offset>
    8860:	str	r0, [fp, #-20]	; 0xffffffec
    8864:	ldr	r3, [fp, #-20]	; 0xffffffec
    8868:	cmp	r3, #0
    886c:	beq	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    8870:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8874:	ldr	r3, [fp, #-20]	; 0xffffffec
    8878:	str	r2, [r3]
    887c:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8880:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8884:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8888:	ldr	r0, [fp, #-40]	; 0xffffffd8
    888c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8890:	str	r0, [fp, #-44]	; 0xffffffd4
    8894:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8898:	ldrd	r2, [fp, #-12]
    889c:	mov	r0, #-16777216	; 0xff000000
    88a0:	mvn	r1, #0
    88a4:	and	r2, r2, r0
    88a8:	and	r3, r3, r1
    88ac:	add	r1, pc, #380	; 0x17c
    88b0:	ldrd	r0, [r1]
    88b4:	cmp	r3, r1
    88b8:	cmpeq	r2, r0
    88bc:	bne	8960 <MyGame_Example_Alt_parse_json_table+0x3dc>
    88c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    88c4:	str	r3, [fp, #-16]
    88c8:	mov	r3, #5
    88cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    88d0:	ldr	r1, [fp, #-16]
    88d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    88d8:	bl	1574 <flatcc_json_parser_match_symbol>
    88dc:	str	r0, [fp, #-44]	; 0xffffffd4
    88e0:	ldr	r2, [fp, #-16]
    88e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    88e8:	cmp	r2, r3
    88ec:	beq	8948 <MyGame_Example_Alt_parse_json_table+0x3c4>
    88f0:	sub	r3, fp, #28
    88f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    88f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    88fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8900:	bl	106f0 <Fantasy_Movie_parse_json_table>
    8904:	str	r0, [fp, #-44]	; 0xffffffd4
    8908:	ldr	r3, [fp, #-28]	; 0xffffffe4
    890c:	cmp	r3, #0
    8910:	beq	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    8914:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8918:	ldr	r3, [r3]
    891c:	mov	r1, #1
    8920:	mov	r0, r3
    8924:	bl	0 <flatcc_builder_table_add_offset>
    8928:	str	r0, [fp, #-20]	; 0xffffffec
    892c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8930:	cmp	r3, #0
    8934:	beq	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    8938:	ldr	r2, [fp, #-28]	; 0xffffffe4
    893c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8940:	str	r2, [r3]
    8944:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8948:	ldr	r2, [fp, #-48]	; 0xffffffd0
    894c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8950:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8954:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8958:	str	r0, [fp, #-44]	; 0xffffffd4
    895c:	b	8974 <MyGame_Example_Alt_parse_json_table+0x3f0>
    8960:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8964:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8968:	ldr	r0, [fp, #-40]	; 0xffffffd8
    896c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8970:	str	r0, [fp, #-44]	; 0xffffffd4
    8974:	sub	r3, fp, #24
    8978:	ldr	r2, [fp, #-48]	; 0xffffffd0
    897c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8980:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8984:	bl	11bc <flatcc_json_parser_object_end>
    8988:	str	r0, [fp, #-44]	; 0xffffffd4
    898c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8990:	cmp	r3, #0
    8994:	bne	8614 <MyGame_Example_Alt_parse_json_table+0x90>
    8998:	ldr	r3, [fp, #-40]	; 0xffffffd8
    899c:	ldr	r3, [r3, #24]
    89a0:	cmp	r3, #0
    89a4:	bne	8a04 <MyGame_Example_Alt_parse_json_table+0x480>
    89a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    89ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
    89b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    89b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    89b8:	bl	0 <flatcc_json_parser_finalize_unions>
    89bc:	str	r0, [fp, #-44]	; 0xffffffd4
    89c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    89c4:	ldr	r3, [r3]
    89c8:	mov	r0, r3
    89cc:	bl	0 <flatcc_builder_end_table>
    89d0:	mov	r2, r0
    89d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    89d8:	str	r2, [r3]
    89dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    89e0:	ldr	r3, [r3]
    89e4:	cmp	r3, #0
    89e8:	beq	8a48 <MyGame_Example_Alt_parse_json_table+0x4c4>
    89ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    89f0:	b	8a64 <MyGame_Example_Alt_parse_json_table+0x4e0>
    89f4:	nop			; (mov r0, r0)
    89f8:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    89fc:	nop			; (mov r0, r0)
    8a00:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    8a04:	nop			; (mov r0, r0)
    8a08:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4c8>
    8a0c:	nop			; (mov r0, r0)
    8a10:	.word	0x616e795f
    8a14:	.word	0x6d616e79
    8a18:	.word	0x00000000
    8a1c:	.word	0x74797065
    8a20:	.word	0x616e7900
    8a24:	.word	0x6d616e79
    8a28:	.word	0x69780000
    8a2c:	.word	0x70726566
    8a30:	.word	0x65000000
    8a34:	.word	0x6d6f7669
	...
    8a40:	.word	0x00000114
    8a44:	.word	0xffff0000
    8a48:	nop			; (mov r0, r0)
    8a4c:	mov	r3, #33	; 0x21
    8a50:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8a54:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8a58:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8a5c:	bl	0 <flatcc_json_parser_set_error>
    8a60:	mov	r3, r0
    8a64:	mov	r0, r3
    8a68:	sub	sp, fp, #4
    8a6c:	pop	{fp, pc}

00008a70 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    8a70:	push	{fp, lr}
    8a74:	add	fp, sp, #4
    8a78:	sub	sp, sp, #40	; 0x28
    8a7c:	str	r0, [fp, #-32]	; 0xffffffe0
    8a80:	str	r1, [fp, #-36]	; 0xffffffdc
    8a84:	str	r2, [fp, #-40]	; 0xffffffd8
    8a88:	str	r3, [fp, #-44]	; 0xffffffd4
    8a8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8a90:	mov	r2, #0
    8a94:	str	r2, [r3]
    8a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8a9c:	ldr	r3, [r3]
    8aa0:	mov	r1, #3
    8aa4:	mov	r0, r3
    8aa8:	bl	0 <flatcc_builder_start_table>
    8aac:	mov	r3, r0
    8ab0:	cmp	r3, #0
    8ab4:	bne	8e48 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3d8>
    8ab8:	sub	r3, fp, #24
    8abc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8ac0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8ac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8ac8:	bl	10d4 <flatcc_json_parser_object_start>
    8acc:	str	r0, [fp, #-36]	; 0xffffffdc
    8ad0:	b	8df8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8ad4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8ad8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8ae0:	bl	cc4 <flatcc_json_parser_symbol_start>
    8ae4:	str	r0, [fp, #-36]	; 0xffffffdc
    8ae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8aec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8af0:	bl	fa8 <flatcc_json_parser_symbol_part>
    8af4:	strd	r0, [fp, #-12]
    8af8:	ldrd	r2, [fp, #-12]
    8afc:	add	r1, pc, #892	; 0x37c
    8b00:	ldrd	r0, [r1]
    8b04:	cmp	r3, r1
    8b08:	cmpeq	r2, r0
    8b0c:	bne	8dcc <MyGame_Example_TestJSONPrefix_parse_json_table+0x35c>
    8b10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8b14:	add	r3, r3, #8
    8b18:	str	r3, [fp, #-36]	; 0xffffffdc
    8b1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8b20:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8b24:	bl	fa8 <flatcc_json_parser_symbol_part>
    8b28:	strd	r0, [fp, #-12]
    8b2c:	ldrd	r2, [fp, #-12]
    8b30:	add	r1, pc, #848	; 0x350
    8b34:	ldrd	r0, [r1]
    8b38:	cmp	r3, r1
    8b3c:	cmpeq	r2, r0
    8b40:	bne	8db4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x344>
    8b44:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8b48:	add	r3, r3, #8
    8b4c:	str	r3, [fp, #-36]	; 0xffffffdc
    8b50:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8b54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8b58:	bl	fa8 <flatcc_json_parser_symbol_part>
    8b5c:	strd	r0, [fp, #-12]
    8b60:	ldrd	r2, [fp, #-12]
    8b64:	ldr	r0, [pc, #828]	; 8ea8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x438>
    8b68:	mvn	r1, #0
    8b6c:	and	r2, r2, r0
    8b70:	and	r3, r3, r1
    8b74:	add	r1, pc, #788	; 0x314
    8b78:	ldrd	r0, [r1]
    8b7c:	cmp	r3, r1
    8b80:	cmpeq	r2, r0
    8b84:	bne	8c10 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1a0>
    8b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8b8c:	str	r3, [fp, #-16]
    8b90:	mov	r3, #6
    8b94:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8b98:	ldr	r1, [fp, #-16]
    8b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8ba0:	bl	1574 <flatcc_json_parser_match_symbol>
    8ba4:	str	r0, [fp, #-36]	; 0xffffffdc
    8ba8:	ldr	r2, [fp, #-16]
    8bac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8bb0:	cmp	r2, r3
    8bb4:	beq	8cc0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x250>
    8bb8:	sub	r3, fp, #28
    8bbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8bc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8bc8:	bl	9af0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    8bcc:	str	r0, [fp, #-36]	; 0xffffffdc
    8bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8bd4:	cmp	r3, #0
    8bd8:	beq	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8be0:	ldr	r3, [r3]
    8be4:	mov	r1, #1
    8be8:	mov	r0, r3
    8bec:	bl	0 <flatcc_builder_table_add_offset>
    8bf0:	str	r0, [fp, #-20]	; 0xffffffec
    8bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
    8bf8:	cmp	r3, #0
    8bfc:	beq	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8c00:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8c04:	ldr	r3, [fp, #-20]	; 0xffffffec
    8c08:	str	r2, [r3]
    8c0c:	b	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8c10:	ldrd	r2, [fp, #-12]
    8c14:	mov	r0, #-16777216	; 0xff000000
    8c18:	mvn	r1, #0
    8c1c:	and	r2, r2, r0
    8c20:	and	r3, r3, r1
    8c24:	add	r1, pc, #620	; 0x26c
    8c28:	ldrd	r0, [r1]
    8c2c:	cmp	r3, r1
    8c30:	cmpeq	r2, r0
    8c34:	bne	8cc8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x258>
    8c38:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8c3c:	str	r3, [fp, #-16]
    8c40:	mov	r3, #5
    8c44:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8c48:	ldr	r1, [fp, #-16]
    8c4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8c50:	bl	1574 <flatcc_json_parser_match_symbol>
    8c54:	str	r0, [fp, #-36]	; 0xffffffdc
    8c58:	ldr	r2, [fp, #-16]
    8c5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8c60:	cmp	r2, r3
    8c64:	beq	8cd0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x260>
    8c68:	sub	r3, fp, #28
    8c6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8c70:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8c74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8c78:	bl	8eac <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    8c7c:	str	r0, [fp, #-36]	; 0xffffffdc
    8c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8c84:	cmp	r3, #0
    8c88:	beq	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8c90:	ldr	r3, [r3]
    8c94:	mov	r1, #0
    8c98:	mov	r0, r3
    8c9c:	bl	0 <flatcc_builder_table_add_offset>
    8ca0:	str	r0, [fp, #-20]	; 0xffffffec
    8ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
    8ca8:	cmp	r3, #0
    8cac:	beq	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8cb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    8cb8:	str	r2, [r3]
    8cbc:	b	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8cc0:	nop			; (mov r0, r0)
    8cc4:	b	8cd4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x264>
    8cc8:	nop			; (mov r0, r0)
    8ccc:	b	8cd4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x264>
    8cd0:	nop			; (mov r0, r0)
    8cd4:	ldrd	r2, [fp, #-12]
    8cd8:	ldr	r0, [pc, #456]	; 8ea8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x438>
    8cdc:	mvn	r1, #0
    8ce0:	and	r2, r2, r0
    8ce4:	and	r3, r3, r1
    8ce8:	add	r1, pc, #432	; 0x1b0
    8cec:	ldrd	r0, [r1]
    8cf0:	cmp	r3, r1
    8cf4:	cmpeq	r2, r0
    8cf8:	bne	8d9c <MyGame_Example_TestJSONPrefix_parse_json_table+0x32c>
    8cfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d00:	str	r3, [fp, #-16]
    8d04:	mov	r3, #6
    8d08:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8d0c:	ldr	r1, [fp, #-16]
    8d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8d14:	bl	1574 <flatcc_json_parser_match_symbol>
    8d18:	str	r0, [fp, #-36]	; 0xffffffdc
    8d1c:	ldr	r2, [fp, #-16]
    8d20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d24:	cmp	r2, r3
    8d28:	beq	8d84 <MyGame_Example_TestJSONPrefix_parse_json_table+0x314>
    8d2c:	sub	r3, fp, #28
    8d30:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8d34:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8d38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8d3c:	bl	9f30 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    8d40:	str	r0, [fp, #-36]	; 0xffffffdc
    8d44:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8d48:	cmp	r3, #0
    8d4c:	beq	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8d54:	ldr	r3, [r3]
    8d58:	mov	r1, #2
    8d5c:	mov	r0, r3
    8d60:	bl	0 <flatcc_builder_table_add_offset>
    8d64:	str	r0, [fp, #-20]	; 0xffffffec
    8d68:	ldr	r3, [fp, #-20]	; 0xffffffec
    8d6c:	cmp	r3, #0
    8d70:	beq	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8d74:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8d78:	ldr	r3, [fp, #-20]	; 0xffffffec
    8d7c:	str	r2, [r3]
    8d80:	b	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8d84:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8d88:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8d90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d94:	str	r0, [fp, #-36]	; 0xffffffdc
    8d98:	b	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8d9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8da0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8da4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8da8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8dac:	str	r0, [fp, #-36]	; 0xffffffdc
    8db0:	b	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8db4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8db8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8dc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8dc4:	str	r0, [fp, #-36]	; 0xffffffdc
    8dc8:	b	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8dcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8dd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8dd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8ddc:	str	r0, [fp, #-36]	; 0xffffffdc
    8de0:	sub	r3, fp, #24
    8de4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8df0:	bl	11bc <flatcc_json_parser_object_end>
    8df4:	str	r0, [fp, #-36]	; 0xffffffdc
    8df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8dfc:	cmp	r3, #0
    8e00:	bne	8ad4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x64>
    8e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8e08:	ldr	r3, [r3, #24]
    8e0c:	cmp	r3, #0
    8e10:	bne	8e50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3e0>
    8e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8e18:	ldr	r3, [r3]
    8e1c:	mov	r0, r3
    8e20:	bl	0 <flatcc_builder_end_table>
    8e24:	mov	r2, r0
    8e28:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8e2c:	str	r2, [r3]
    8e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8e34:	ldr	r3, [r3]
    8e38:	cmp	r3, #0
    8e3c:	beq	8e58 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3e8>
    8e40:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8e44:	b	8e74 <MyGame_Example_TestJSONPrefix_parse_json_table+0x404>
    8e48:	nop			; (mov r0, r0)
    8e4c:	b	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8e50:	nop			; (mov r0, r0)
    8e54:	b	8e5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8e58:	nop			; (mov r0, r0)
    8e5c:	mov	r3, #33	; 0x21
    8e60:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8e64:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8e6c:	bl	0 <flatcc_json_parser_set_error>
    8e70:	mov	r3, r0
    8e74:	mov	r0, r3
    8e78:	sub	sp, fp, #4
    8e7c:	pop	{fp, pc}
    8e80:	.word	0x6a736f6e
    8e84:	.word	0x74657374
    8e88:	.word	0x69787061
    8e8c:	.word	0x70726566
    8e90:	.word	0x67320000
    8e94:	.word	0x7273696e
    8e98:	.word	0x67000000
    8e9c:	.word	0x7273696e
    8ea0:	.word	0x67330000
    8ea4:	.word	0x7273696e
    8ea8:	.word	0xffff0000

00008eac <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    8eac:	push	{fp, lr}
    8eb0:	add	fp, sp, #4
    8eb4:	sub	sp, sp, #96	; 0x60
    8eb8:	str	r0, [fp, #-80]	; 0xffffffb0
    8ebc:	str	r1, [fp, #-84]	; 0xffffffac
    8ec0:	str	r2, [fp, #-88]	; 0xffffffa8
    8ec4:	str	r3, [fp, #-92]	; 0xffffffa4
    8ec8:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8ecc:	mov	r2, #0
    8ed0:	str	r2, [r3]
    8ed4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8ed8:	ldr	r3, [r3]
    8edc:	mov	r1, #9
    8ee0:	mov	r0, r3
    8ee4:	bl	0 <flatcc_builder_start_table>
    8ee8:	mov	r3, r0
    8eec:	cmp	r3, #0
    8ef0:	bne	9a6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbc0>
    8ef4:	sub	r3, fp, #28
    8ef8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8efc:	ldr	r1, [fp, #-84]	; 0xffffffac
    8f00:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8f04:	bl	10d4 <flatcc_json_parser_object_start>
    8f08:	str	r0, [fp, #-84]	; 0xffffffac
    8f0c:	b	9a1c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb70>
    8f10:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8f14:	ldr	r1, [fp, #-84]	; 0xffffffac
    8f18:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8f1c:	bl	cc4 <flatcc_json_parser_symbol_start>
    8f20:	str	r0, [fp, #-84]	; 0xffffffac
    8f24:	ldr	r1, [fp, #-88]	; 0xffffffa8
    8f28:	ldr	r0, [fp, #-84]	; 0xffffffac
    8f2c:	bl	fa8 <flatcc_json_parser_symbol_part>
    8f30:	strd	r0, [fp, #-12]
    8f34:	ldrd	r2, [fp, #-12]
    8f38:	add	r1, pc, #920	; 0x398
    8f3c:	ldrd	r0, [r1]
    8f40:	cmp	r3, r1
    8f44:	cmpeq	r2, r0
    8f48:	bhi	93e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    8f4c:	ldrd	r2, [fp, #-12]
    8f50:	add	r1, pc, #904	; 0x388
    8f54:	ldrd	r0, [r1]
    8f58:	cmp	r3, r1
    8f5c:	cmpeq	r2, r0
    8f60:	bne	90dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x230>
    8f64:	ldr	r3, [fp, #-84]	; 0xffffffac
    8f68:	add	r3, r3, #8
    8f6c:	str	r3, [fp, #-84]	; 0xffffffac
    8f70:	ldr	r1, [fp, #-88]	; 0xffffffa8
    8f74:	ldr	r0, [fp, #-84]	; 0xffffffac
    8f78:	bl	fa8 <flatcc_json_parser_symbol_part>
    8f7c:	strd	r0, [fp, #-12]
    8f80:	ldrd	r2, [fp, #-12]
    8f84:	mov	r0, #0
    8f88:	mov	r1, #-16777216	; 0xff000000
    8f8c:	and	r2, r2, r0
    8f90:	and	r3, r3, r1
    8f94:	cmp	r3, #889192448	; 0x35000000
    8f98:	cmpeq	r2, #0
    8f9c:	bne	90c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x218>
    8fa0:	ldr	r3, [fp, #-84]	; 0xffffffac
    8fa4:	str	r3, [fp, #-16]
    8fa8:	mov	r3, #1
    8fac:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8fb0:	ldr	r1, [fp, #-16]
    8fb4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8fb8:	bl	1574 <flatcc_json_parser_match_symbol>
    8fbc:	str	r0, [fp, #-84]	; 0xffffffac
    8fc0:	ldr	r2, [fp, #-16]
    8fc4:	ldr	r3, [fp, #-84]	; 0xffffffac
    8fc8:	cmp	r2, r3
    8fcc:	beq	90ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x200>
    8fd0:	mov	r3, #0
    8fd4:	str	r3, [fp, #-36]	; 0xffffffdc
    8fd8:	ldr	r3, [fp, #-84]	; 0xffffffac
    8fdc:	str	r3, [fp, #-16]
    8fe0:	sub	r3, fp, #36	; 0x24
    8fe4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8fe8:	ldr	r1, [fp, #-16]
    8fec:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8ff0:	bl	1e68 <flatcc_json_parser_uint32>
    8ff4:	str	r0, [fp, #-84]	; 0xffffffac
    8ff8:	ldr	r2, [fp, #-16]
    8ffc:	ldr	r3, [fp, #-84]	; 0xffffffac
    9000:	cmp	r2, r3
    9004:	bne	9050 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1a4>
    9008:	ldr	r3, [fp, #-84]	; 0xffffffac
    900c:	str	r3, [fp, #-16]
    9010:	sub	r3, fp, #36	; 0x24
    9014:	str	r3, [sp]
    9018:	ldr	r3, [pc, #728]	; 92f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
    901c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9020:	ldr	r1, [fp, #-16]
    9024:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9028:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    902c:	str	r0, [fp, #-84]	; 0xffffffac
    9030:	ldr	r2, [fp, #-84]	; 0xffffffac
    9034:	ldr	r3, [fp, #-16]
    9038:	cmp	r2, r3
    903c:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9040:	ldr	r2, [fp, #-84]	; 0xffffffac
    9044:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9048:	cmp	r2, r3
    904c:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9050:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9054:	cmp	r3, #0
    9058:	bne	9070 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1c4>
    905c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9060:	ldr	r3, [r3, #8]
    9064:	and	r3, r3, #2
    9068:	cmp	r3, #0
    906c:	beq	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9070:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9074:	ldr	r0, [r3]
    9078:	mov	r3, #4
    907c:	mov	r2, #4
    9080:	mov	r1, #1
    9084:	bl	0 <flatcc_builder_table_add>
    9088:	str	r0, [fp, #-20]	; 0xffffffec
    908c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9090:	cmp	r3, #0
    9094:	beq	9a74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbc8>
    9098:	ldr	r3, [fp, #-36]	; 0xffffffdc
    909c:	mov	r1, r3
    90a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    90a4:	bl	f4 <flatbuffers_uint32_write_to_pe>
    90a8:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    90ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
    90b0:	ldr	r1, [fp, #-84]	; 0xffffffac
    90b4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    90b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    90bc:	str	r0, [fp, #-84]	; 0xffffffac
    90c0:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    90c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    90c8:	ldr	r1, [fp, #-84]	; 0xffffffac
    90cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    90d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    90d4:	str	r0, [fp, #-84]	; 0xffffffac
    90d8:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    90dc:	ldrd	r2, [fp, #-12]
    90e0:	mov	r0, #0
    90e4:	mvn	r1, #0
    90e8:	and	r2, r2, r0
    90ec:	and	r3, r3, r1
    90f0:	add	r1, pc, #496	; 0x1f0
    90f4:	ldrd	r0, [r1]
    90f8:	cmp	r3, r1
    90fc:	cmpeq	r2, r0
    9100:	bne	918c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e0>
    9104:	ldr	r3, [fp, #-84]	; 0xffffffac
    9108:	str	r3, [fp, #-16]
    910c:	mov	r3, #4
    9110:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9114:	ldr	r1, [fp, #-16]
    9118:	ldr	r0, [fp, #-80]	; 0xffffffb0
    911c:	bl	1574 <flatcc_json_parser_match_symbol>
    9120:	str	r0, [fp, #-84]	; 0xffffffac
    9124:	ldr	r2, [fp, #-16]
    9128:	ldr	r3, [fp, #-84]	; 0xffffffac
    912c:	cmp	r2, r3
    9130:	beq	9194 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e8>
    9134:	sub	r3, fp, #32
    9138:	ldr	r2, [fp, #-88]	; 0xffffffa8
    913c:	ldr	r1, [fp, #-84]	; 0xffffffac
    9140:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9144:	bl	0 <flatcc_json_parser_build_string>
    9148:	str	r0, [fp, #-84]	; 0xffffffac
    914c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9150:	cmp	r3, #0
    9154:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9158:	ldr	r3, [fp, #-80]	; 0xffffffb0
    915c:	ldr	r3, [r3]
    9160:	mov	r1, #0
    9164:	mov	r0, r3
    9168:	bl	0 <flatcc_builder_table_add_offset>
    916c:	str	r0, [fp, #-24]	; 0xffffffe8
    9170:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9174:	cmp	r3, #0
    9178:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    917c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9180:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9184:	str	r2, [r3]
    9188:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    918c:	nop			; (mov r0, r0)
    9190:	b	9198 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2ec>
    9194:	nop			; (mov r0, r0)
    9198:	ldrd	r2, [fp, #-12]
    919c:	add	r1, pc, #332	; 0x14c
    91a0:	ldrd	r0, [r1]
    91a4:	cmp	r3, r1
    91a8:	cmpeq	r2, r0
    91ac:	bne	9300 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x454>
    91b0:	ldr	r3, [fp, #-84]	; 0xffffffac
    91b4:	str	r3, [fp, #-16]
    91b8:	mov	r3, #8
    91bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    91c0:	ldr	r1, [fp, #-16]
    91c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    91c8:	bl	1574 <flatcc_json_parser_match_symbol>
    91cc:	str	r0, [fp, #-84]	; 0xffffffac
    91d0:	ldr	r2, [fp, #-16]
    91d4:	ldr	r3, [fp, #-84]	; 0xffffffac
    91d8:	cmp	r2, r3
    91dc:	beq	92bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x410>
    91e0:	mov	r2, #0
    91e4:	mov	r3, #0
    91e8:	strd	r2, [fp, #-44]	; 0xffffffd4
    91ec:	ldr	r3, [fp, #-84]	; 0xffffffac
    91f0:	str	r3, [fp, #-16]
    91f4:	sub	r3, fp, #44	; 0x2c
    91f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    91fc:	ldr	r1, [fp, #-16]
    9200:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9204:	bl	20d8 <flatcc_json_parser_int64>
    9208:	str	r0, [fp, #-84]	; 0xffffffac
    920c:	ldr	r2, [fp, #-16]
    9210:	ldr	r3, [fp, #-84]	; 0xffffffac
    9214:	cmp	r2, r3
    9218:	bne	9264 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3b8>
    921c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9220:	str	r3, [fp, #-16]
    9224:	sub	r3, fp, #44	; 0x2c
    9228:	str	r3, [sp]
    922c:	ldr	r3, [pc, #200]	; 92fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x450>
    9230:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9234:	ldr	r1, [fp, #-16]
    9238:	ldr	r0, [fp, #-80]	; 0xffffffb0
    923c:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    9240:	str	r0, [fp, #-84]	; 0xffffffac
    9244:	ldr	r2, [fp, #-84]	; 0xffffffac
    9248:	ldr	r3, [fp, #-16]
    924c:	cmp	r2, r3
    9250:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9254:	ldr	r2, [fp, #-84]	; 0xffffffac
    9258:	ldr	r3, [fp, #-88]	; 0xffffffa8
    925c:	cmp	r2, r3
    9260:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9264:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    9268:	orrs	r3, r2, r3
    926c:	bne	9284 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d8>
    9270:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9274:	ldr	r3, [r3, #8]
    9278:	and	r3, r3, #2
    927c:	cmp	r3, #0
    9280:	beq	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9284:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9288:	ldr	r0, [r3]
    928c:	mov	r3, #8
    9290:	mov	r2, #8
    9294:	mov	r1, #3
    9298:	bl	0 <flatcc_builder_table_add>
    929c:	str	r0, [fp, #-20]	; 0xffffffec
    92a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    92a4:	cmp	r3, #0
    92a8:	beq	9a7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbd0>
    92ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    92b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    92b4:	bl	388 <flatbuffers_int64_write_to_pe>
    92b8:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    92bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    92c0:	ldr	r1, [fp, #-84]	; 0xffffffac
    92c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    92c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    92cc:	str	r0, [fp, #-84]	; 0xffffffac
    92d0:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    92d4:	nop			; (mov r0, r0)
    92d8:	.word	0xffffffff
    92dc:	.word	0x63636362
    92e0:	.word	0x31323334
    92e4:	.word	0x61616161
    92e8:	.word	0x00000000
    92ec:	.word	0x61616161
    92f0:	.word	0x31323334
    92f4:	.word	0x62626262
    92f8:	.word	0x00000124
    92fc:	.word	0x00000130
    9300:	ldrd	r2, [fp, #-12]
    9304:	mov	r0, #0
    9308:	mvn	r1, #0
    930c:	and	r2, r2, r0
    9310:	and	r3, r3, r1
    9314:	add	r1, pc, #868	; 0x364
    9318:	ldrd	r0, [r1]
    931c:	cmp	r3, r1
    9320:	cmpeq	r2, r0
    9324:	bne	93c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x51c>
    9328:	ldr	r3, [fp, #-84]	; 0xffffffac
    932c:	str	r3, [fp, #-16]
    9330:	mov	r3, #4
    9334:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9338:	ldr	r1, [fp, #-16]
    933c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9340:	bl	1574 <flatcc_json_parser_match_symbol>
    9344:	str	r0, [fp, #-84]	; 0xffffffac
    9348:	ldr	r2, [fp, #-16]
    934c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9350:	cmp	r2, r3
    9354:	beq	93b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x504>
    9358:	sub	r3, fp, #32
    935c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9360:	ldr	r1, [fp, #-84]	; 0xffffffac
    9364:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9368:	bl	0 <flatcc_json_parser_build_string>
    936c:	str	r0, [fp, #-84]	; 0xffffffac
    9370:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9374:	cmp	r3, #0
    9378:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    937c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9380:	ldr	r3, [r3]
    9384:	mov	r1, #2
    9388:	mov	r0, r3
    938c:	bl	0 <flatcc_builder_table_add_offset>
    9390:	str	r0, [fp, #-24]	; 0xffffffe8
    9394:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9398:	cmp	r3, #0
    939c:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    93a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    93a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    93a8:	str	r2, [r3]
    93ac:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    93b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    93b4:	ldr	r1, [fp, #-84]	; 0xffffffac
    93b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    93bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    93c0:	str	r0, [fp, #-84]	; 0xffffffac
    93c4:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    93c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    93cc:	ldr	r1, [fp, #-84]	; 0xffffffac
    93d0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    93d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    93d8:	str	r0, [fp, #-84]	; 0xffffffac
    93dc:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    93e0:	ldrd	r2, [fp, #-12]
    93e4:	add	r1, pc, #668	; 0x29c
    93e8:	ldrd	r0, [r1]
    93ec:	cmp	r3, r1
    93f0:	cmpeq	r2, r0
    93f4:	bne	9698 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7ec>
    93f8:	ldr	r3, [fp, #-84]	; 0xffffffac
    93fc:	str	r3, [fp, #-16]
    9400:	mov	r3, #8
    9404:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9408:	ldr	r1, [fp, #-16]
    940c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9410:	bl	1574 <flatcc_json_parser_match_symbol>
    9414:	str	r0, [fp, #-84]	; 0xffffffac
    9418:	ldr	r2, [fp, #-16]
    941c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9420:	cmp	r2, r3
    9424:	beq	9504 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x658>
    9428:	mov	r2, #0
    942c:	mov	r3, #0
    9430:	strd	r2, [fp, #-52]	; 0xffffffcc
    9434:	ldr	r3, [fp, #-84]	; 0xffffffac
    9438:	str	r3, [fp, #-16]
    943c:	sub	r3, fp, #52	; 0x34
    9440:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9444:	ldr	r1, [fp, #-16]
    9448:	ldr	r0, [fp, #-80]	; 0xffffffb0
    944c:	bl	20d8 <flatcc_json_parser_int64>
    9450:	str	r0, [fp, #-84]	; 0xffffffac
    9454:	ldr	r2, [fp, #-16]
    9458:	ldr	r3, [fp, #-84]	; 0xffffffac
    945c:	cmp	r2, r3
    9460:	bne	94ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x600>
    9464:	ldr	r3, [fp, #-84]	; 0xffffffac
    9468:	str	r3, [fp, #-16]
    946c:	sub	r3, fp, #52	; 0x34
    9470:	str	r3, [sp]
    9474:	ldr	r3, [pc, #532]	; 9690 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e4>
    9478:	ldr	r2, [fp, #-88]	; 0xffffffa8
    947c:	ldr	r1, [fp, #-16]
    9480:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9484:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    9488:	str	r0, [fp, #-84]	; 0xffffffac
    948c:	ldr	r2, [fp, #-84]	; 0xffffffac
    9490:	ldr	r3, [fp, #-16]
    9494:	cmp	r2, r3
    9498:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    949c:	ldr	r2, [fp, #-84]	; 0xffffffac
    94a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    94a4:	cmp	r2, r3
    94a8:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    94ac:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    94b0:	orrs	r3, r2, r3
    94b4:	bne	94cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
    94b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    94bc:	ldr	r3, [r3, #8]
    94c0:	and	r3, r3, #2
    94c4:	cmp	r3, #0
    94c8:	beq	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    94cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
    94d0:	ldr	r0, [r3]
    94d4:	mov	r3, #8
    94d8:	mov	r2, #8
    94dc:	mov	r1, #5
    94e0:	bl	0 <flatcc_builder_table_add>
    94e4:	str	r0, [fp, #-20]	; 0xffffffec
    94e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    94ec:	cmp	r3, #0
    94f0:	beq	9aa0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf4>
    94f4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    94f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    94fc:	bl	388 <flatbuffers_int64_write_to_pe>
    9500:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9504:	ldr	r3, [fp, #-84]	; 0xffffffac
    9508:	add	r3, r3, #8
    950c:	str	r3, [fp, #-84]	; 0xffffffac
    9510:	ldr	r1, [fp, #-88]	; 0xffffffa8
    9514:	ldr	r0, [fp, #-84]	; 0xffffffac
    9518:	bl	fa8 <flatcc_json_parser_symbol_part>
    951c:	strd	r0, [fp, #-12]
    9520:	ldrd	r2, [fp, #-12]
    9524:	mov	r0, #0
    9528:	mov	r1, #-16777216	; 0xff000000
    952c:	and	r2, r2, r0
    9530:	and	r3, r3, r1
    9534:	cmp	r3, #889192448	; 0x35000000
    9538:	cmpeq	r2, #0
    953c:	bne	9664 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7b8>
    9540:	ldr	r3, [fp, #-84]	; 0xffffffac
    9544:	str	r3, [fp, #-16]
    9548:	mov	r3, #1
    954c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9550:	ldr	r1, [fp, #-16]
    9554:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9558:	bl	1574 <flatcc_json_parser_match_symbol>
    955c:	str	r0, [fp, #-84]	; 0xffffffac
    9560:	ldr	r2, [fp, #-16]
    9564:	ldr	r3, [fp, #-84]	; 0xffffffac
    9568:	cmp	r2, r3
    956c:	beq	964c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7a0>
    9570:	mov	r3, #0
    9574:	str	r3, [fp, #-56]	; 0xffffffc8
    9578:	ldr	r3, [fp, #-84]	; 0xffffffac
    957c:	str	r3, [fp, #-16]
    9580:	sub	r3, fp, #56	; 0x38
    9584:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9588:	ldr	r1, [fp, #-16]
    958c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9590:	bl	1e68 <flatcc_json_parser_uint32>
    9594:	str	r0, [fp, #-84]	; 0xffffffac
    9598:	ldr	r2, [fp, #-16]
    959c:	ldr	r3, [fp, #-84]	; 0xffffffac
    95a0:	cmp	r2, r3
    95a4:	bne	95f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x744>
    95a8:	ldr	r3, [fp, #-84]	; 0xffffffac
    95ac:	str	r3, [fp, #-16]
    95b0:	sub	r3, fp, #56	; 0x38
    95b4:	str	r3, [sp]
    95b8:	ldr	r3, [pc, #212]	; 9694 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e8>
    95bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    95c0:	ldr	r1, [fp, #-16]
    95c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    95c8:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    95cc:	str	r0, [fp, #-84]	; 0xffffffac
    95d0:	ldr	r2, [fp, #-84]	; 0xffffffac
    95d4:	ldr	r3, [fp, #-16]
    95d8:	cmp	r2, r3
    95dc:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    95e0:	ldr	r2, [fp, #-84]	; 0xffffffac
    95e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    95e8:	cmp	r2, r3
    95ec:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    95f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    95f4:	cmp	r3, #0
    95f8:	bne	9610 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x764>
    95fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9600:	ldr	r3, [r3, #8]
    9604:	and	r3, r3, #2
    9608:	cmp	r3, #0
    960c:	beq	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9610:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9614:	ldr	r0, [r3]
    9618:	mov	r3, #4
    961c:	mov	r2, #4
    9620:	mov	r1, #6
    9624:	bl	0 <flatcc_builder_table_add>
    9628:	str	r0, [fp, #-20]	; 0xffffffec
    962c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9630:	cmp	r3, #0
    9634:	beq	9aa8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    9638:	ldr	r3, [fp, #-56]	; 0xffffffc8
    963c:	mov	r1, r3
    9640:	ldr	r0, [fp, #-20]	; 0xffffffec
    9644:	bl	f4 <flatbuffers_uint32_write_to_pe>
    9648:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    964c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9650:	ldr	r1, [fp, #-84]	; 0xffffffac
    9654:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9658:	bl	0 <flatcc_json_parser_unmatched_symbol>
    965c:	str	r0, [fp, #-84]	; 0xffffffac
    9660:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9664:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9668:	ldr	r1, [fp, #-84]	; 0xffffffac
    966c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9670:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9674:	str	r0, [fp, #-84]	; 0xffffffac
    9678:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    967c:	nop			; (mov r0, r0)
    9680:	.word	0x00000000
    9684:	.word	0x62626262
    9688:	.word	0x31323334
    968c:	.word	0x63636363
    9690:	.word	0x0000013c
    9694:	.word	0x00000148
    9698:	ldrd	r2, [fp, #-12]
    969c:	mov	r0, #0
    96a0:	mvn	r1, #0
    96a4:	and	r2, r2, r0
    96a8:	and	r3, r3, r1
    96ac:	add	r1, pc, #980	; 0x3d4
    96b0:	ldrd	r0, [r1]
    96b4:	cmp	r3, r1
    96b8:	cmpeq	r2, r0
    96bc:	bne	9748 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x89c>
    96c0:	ldr	r3, [fp, #-84]	; 0xffffffac
    96c4:	str	r3, [fp, #-16]
    96c8:	mov	r3, #4
    96cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    96d0:	ldr	r1, [fp, #-16]
    96d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    96d8:	bl	1574 <flatcc_json_parser_match_symbol>
    96dc:	str	r0, [fp, #-84]	; 0xffffffac
    96e0:	ldr	r2, [fp, #-16]
    96e4:	ldr	r3, [fp, #-84]	; 0xffffffac
    96e8:	cmp	r2, r3
    96ec:	beq	9750 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a4>
    96f0:	sub	r3, fp, #32
    96f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    96f8:	ldr	r1, [fp, #-84]	; 0xffffffac
    96fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9700:	bl	0 <flatcc_json_parser_build_string>
    9704:	str	r0, [fp, #-84]	; 0xffffffac
    9708:	ldr	r3, [fp, #-32]	; 0xffffffe0
    970c:	cmp	r3, #0
    9710:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9714:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9718:	ldr	r3, [r3]
    971c:	mov	r1, #4
    9720:	mov	r0, r3
    9724:	bl	0 <flatcc_builder_table_add_offset>
    9728:	str	r0, [fp, #-24]	; 0xffffffe8
    972c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9730:	cmp	r3, #0
    9734:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9738:	ldr	r2, [fp, #-32]	; 0xffffffe0
    973c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9740:	str	r2, [r3]
    9744:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9748:	nop			; (mov r0, r0)
    974c:	b	9754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
    9750:	nop			; (mov r0, r0)
    9754:	ldrd	r2, [fp, #-12]
    9758:	add	r1, pc, #816	; 0x330
    975c:	ldrd	r0, [r1]
    9760:	cmp	r3, r1
    9764:	cmpeq	r2, r0
    9768:	bne	99f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb44>
    976c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9770:	str	r3, [fp, #-16]
    9774:	mov	r3, #8
    9778:	ldr	r2, [fp, #-88]	; 0xffffffa8
    977c:	ldr	r1, [fp, #-16]
    9780:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9784:	bl	1574 <flatcc_json_parser_match_symbol>
    9788:	str	r0, [fp, #-84]	; 0xffffffac
    978c:	ldr	r2, [fp, #-16]
    9790:	ldr	r3, [fp, #-84]	; 0xffffffac
    9794:	cmp	r2, r3
    9798:	beq	9878 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9cc>
    979c:	mov	r2, #0
    97a0:	mov	r3, #0
    97a4:	strd	r2, [fp, #-68]	; 0xffffffbc
    97a8:	ldr	r3, [fp, #-84]	; 0xffffffac
    97ac:	str	r3, [fp, #-16]
    97b0:	sub	r3, fp, #68	; 0x44
    97b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    97b8:	ldr	r1, [fp, #-16]
    97bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    97c0:	bl	20d8 <flatcc_json_parser_int64>
    97c4:	str	r0, [fp, #-84]	; 0xffffffac
    97c8:	ldr	r2, [fp, #-16]
    97cc:	ldr	r3, [fp, #-84]	; 0xffffffac
    97d0:	cmp	r2, r3
    97d4:	bne	9820 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x974>
    97d8:	ldr	r3, [fp, #-84]	; 0xffffffac
    97dc:	str	r3, [fp, #-16]
    97e0:	sub	r3, fp, #68	; 0x44
    97e4:	str	r3, [sp]
    97e8:	ldr	r3, [pc, #680]	; 9a98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbec>
    97ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
    97f0:	ldr	r1, [fp, #-16]
    97f4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    97f8:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    97fc:	str	r0, [fp, #-84]	; 0xffffffac
    9800:	ldr	r2, [fp, #-84]	; 0xffffffac
    9804:	ldr	r3, [fp, #-16]
    9808:	cmp	r2, r3
    980c:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9810:	ldr	r2, [fp, #-84]	; 0xffffffac
    9814:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9818:	cmp	r2, r3
    981c:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9820:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    9824:	orrs	r3, r2, r3
    9828:	bne	9840 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x994>
    982c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9830:	ldr	r3, [r3, #8]
    9834:	and	r3, r3, #2
    9838:	cmp	r3, #0
    983c:	beq	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9840:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9844:	ldr	r0, [r3]
    9848:	mov	r3, #8
    984c:	mov	r2, #8
    9850:	mov	r1, #7
    9854:	bl	0 <flatcc_builder_table_add>
    9858:	str	r0, [fp, #-20]	; 0xffffffec
    985c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9860:	cmp	r3, #0
    9864:	beq	9ab0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc04>
    9868:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    986c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9870:	bl	388 <flatbuffers_int64_write_to_pe>
    9874:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9878:	ldr	r3, [fp, #-84]	; 0xffffffac
    987c:	add	r3, r3, #8
    9880:	str	r3, [fp, #-84]	; 0xffffffac
    9884:	ldr	r1, [fp, #-88]	; 0xffffffa8
    9888:	ldr	r0, [fp, #-84]	; 0xffffffac
    988c:	bl	fa8 <flatcc_json_parser_symbol_part>
    9890:	strd	r0, [fp, #-12]
    9894:	ldrd	r2, [fp, #-12]
    9898:	mov	r0, #0
    989c:	mov	r1, #-16777216	; 0xff000000
    98a0:	and	r2, r2, r0
    98a4:	and	r3, r3, r1
    98a8:	cmp	r3, #889192448	; 0x35000000
    98ac:	cmpeq	r2, #0
    98b0:	bne	99d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb2c>
    98b4:	ldr	r3, [fp, #-84]	; 0xffffffac
    98b8:	str	r3, [fp, #-16]
    98bc:	mov	r3, #1
    98c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    98c4:	ldr	r1, [fp, #-16]
    98c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    98cc:	bl	1574 <flatcc_json_parser_match_symbol>
    98d0:	str	r0, [fp, #-84]	; 0xffffffac
    98d4:	ldr	r2, [fp, #-16]
    98d8:	ldr	r3, [fp, #-84]	; 0xffffffac
    98dc:	cmp	r2, r3
    98e0:	beq	99c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb14>
    98e4:	mov	r3, #0
    98e8:	str	r3, [fp, #-72]	; 0xffffffb8
    98ec:	ldr	r3, [fp, #-84]	; 0xffffffac
    98f0:	str	r3, [fp, #-16]
    98f4:	sub	r3, fp, #72	; 0x48
    98f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    98fc:	ldr	r1, [fp, #-16]
    9900:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9904:	bl	1e68 <flatcc_json_parser_uint32>
    9908:	str	r0, [fp, #-84]	; 0xffffffac
    990c:	ldr	r2, [fp, #-16]
    9910:	ldr	r3, [fp, #-84]	; 0xffffffac
    9914:	cmp	r2, r3
    9918:	bne	9964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xab8>
    991c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9920:	str	r3, [fp, #-16]
    9924:	sub	r3, fp, #72	; 0x48
    9928:	str	r3, [sp]
    992c:	ldr	r3, [pc, #360]	; 9a9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf0>
    9930:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9934:	ldr	r1, [fp, #-16]
    9938:	ldr	r0, [fp, #-80]	; 0xffffffb0
    993c:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    9940:	str	r0, [fp, #-84]	; 0xffffffac
    9944:	ldr	r2, [fp, #-84]	; 0xffffffac
    9948:	ldr	r3, [fp, #-16]
    994c:	cmp	r2, r3
    9950:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9954:	ldr	r2, [fp, #-84]	; 0xffffffac
    9958:	ldr	r3, [fp, #-88]	; 0xffffffa8
    995c:	cmp	r2, r3
    9960:	beq	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9964:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9968:	cmp	r3, #0
    996c:	bne	9984 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad8>
    9970:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9974:	ldr	r3, [r3, #8]
    9978:	and	r3, r3, #2
    997c:	cmp	r3, #0
    9980:	beq	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9984:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9988:	ldr	r0, [r3]
    998c:	mov	r3, #4
    9990:	mov	r2, #4
    9994:	mov	r1, #8
    9998:	bl	0 <flatcc_builder_table_add>
    999c:	str	r0, [fp, #-20]	; 0xffffffec
    99a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    99a4:	cmp	r3, #0
    99a8:	beq	9ab8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc0c>
    99ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    99b0:	mov	r1, r3
    99b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    99b8:	bl	f4 <flatbuffers_uint32_write_to_pe>
    99bc:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    99c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    99c4:	ldr	r1, [fp, #-84]	; 0xffffffac
    99c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    99cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99d0:	str	r0, [fp, #-84]	; 0xffffffac
    99d4:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    99d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    99dc:	ldr	r1, [fp, #-84]	; 0xffffffac
    99e0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    99e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99e8:	str	r0, [fp, #-84]	; 0xffffffac
    99ec:	b	9a04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    99f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    99f4:	ldr	r1, [fp, #-84]	; 0xffffffac
    99f8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    99fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a00:	str	r0, [fp, #-84]	; 0xffffffac
    9a04:	sub	r3, fp, #28
    9a08:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9a0c:	ldr	r1, [fp, #-84]	; 0xffffffac
    9a10:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9a14:	bl	11bc <flatcc_json_parser_object_end>
    9a18:	str	r0, [fp, #-84]	; 0xffffffac
    9a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9a20:	cmp	r3, #0
    9a24:	bne	8f10 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x64>
    9a28:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9a2c:	ldr	r3, [r3, #24]
    9a30:	cmp	r3, #0
    9a34:	bne	9ac0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
    9a38:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9a3c:	ldr	r3, [r3]
    9a40:	mov	r0, r3
    9a44:	bl	0 <flatcc_builder_end_table>
    9a48:	mov	r2, r0
    9a4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
    9a50:	str	r2, [r3]
    9a54:	ldr	r3, [fp, #-92]	; 0xffffffa4
    9a58:	ldr	r3, [r3]
    9a5c:	cmp	r3, #0
    9a60:	beq	9ac8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc1c>
    9a64:	ldr	r3, [fp, #-84]	; 0xffffffac
    9a68:	b	9ae4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc38>
    9a6c:	nop			; (mov r0, r0)
    9a70:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9a74:	nop			; (mov r0, r0)
    9a78:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9a7c:	nop			; (mov r0, r0)
    9a80:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9a84:	nop			; (mov r0, r0)
    9a88:	.word	0x00000000
    9a8c:	.word	0x63636363
    9a90:	.word	0x31323334
    9a94:	.word	0x64646464
    9a98:	.word	0x00000154
    9a9c:	.word	0x00000160
    9aa0:	nop			; (mov r0, r0)
    9aa4:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9aa8:	nop			; (mov r0, r0)
    9aac:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9ab0:	nop			; (mov r0, r0)
    9ab4:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9ab8:	nop			; (mov r0, r0)
    9abc:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9ac0:	nop			; (mov r0, r0)
    9ac4:	b	9acc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9ac8:	nop			; (mov r0, r0)
    9acc:	mov	r3, #33	; 0x21
    9ad0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9ad4:	ldr	r1, [fp, #-84]	; 0xffffffac
    9ad8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9adc:	bl	0 <flatcc_json_parser_set_error>
    9ae0:	mov	r3, r0
    9ae4:	mov	r0, r3
    9ae8:	sub	sp, fp, #4
    9aec:	pop	{fp, pc}

00009af0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    9af0:	push	{fp, lr}
    9af4:	add	fp, sp, #4
    9af8:	sub	sp, sp, #64	; 0x40
    9afc:	str	r0, [fp, #-48]	; 0xffffffd0
    9b00:	str	r1, [fp, #-52]	; 0xffffffcc
    9b04:	str	r2, [fp, #-56]	; 0xffffffc8
    9b08:	str	r3, [fp, #-60]	; 0xffffffc4
    9b0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9b10:	mov	r2, #0
    9b14:	str	r2, [r3]
    9b18:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9b1c:	ldr	r3, [r3]
    9b20:	mov	r1, #2
    9b24:	mov	r0, r3
    9b28:	bl	0 <flatcc_builder_start_table>
    9b2c:	mov	r3, r0
    9b30:	cmp	r3, #0
    9b34:	bne	9ec8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3d8>
    9b38:	sub	r3, fp, #24
    9b3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9b40:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9b44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9b48:	bl	10d4 <flatcc_json_parser_object_start>
    9b4c:	str	r0, [fp, #-52]	; 0xffffffcc
    9b50:	b	9e78 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x388>
    9b54:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9b58:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9b5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9b60:	bl	cc4 <flatcc_json_parser_symbol_start>
    9b64:	str	r0, [fp, #-52]	; 0xffffffcc
    9b68:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9b6c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9b70:	bl	fa8 <flatcc_json_parser_symbol_part>
    9b74:	strd	r0, [fp, #-12]
    9b78:	ldrd	r2, [fp, #-12]
    9b7c:	add	r1, pc, #908	; 0x38c
    9b80:	ldrd	r0, [r1]
    9b84:	cmp	r3, r1
    9b88:	cmpeq	r2, r0
    9b8c:	bne	9e4c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x35c>
    9b90:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b94:	add	r3, r3, #8
    9b98:	str	r3, [fp, #-52]	; 0xffffffcc
    9b9c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9ba0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9ba4:	bl	fa8 <flatcc_json_parser_symbol_part>
    9ba8:	strd	r0, [fp, #-12]
    9bac:	ldrd	r2, [fp, #-12]
    9bb0:	mvn	r0, #255	; 0xff
    9bb4:	mvn	r1, #0
    9bb8:	and	r2, r2, r0
    9bbc:	and	r3, r3, r1
    9bc0:	add	r1, pc, #848	; 0x350
    9bc4:	ldrd	r0, [r1]
    9bc8:	cmp	r3, r1
    9bcc:	cmpeq	r2, r0
    9bd0:	bne	9cf8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x208>
    9bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9bd8:	str	r3, [fp, #-16]
    9bdc:	mov	r3, #7
    9be0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9be4:	ldr	r1, [fp, #-16]
    9be8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9bec:	bl	1574 <flatcc_json_parser_match_symbol>
    9bf0:	str	r0, [fp, #-52]	; 0xffffffcc
    9bf4:	ldr	r2, [fp, #-16]
    9bf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9bfc:	cmp	r2, r3
    9c00:	beq	9ce0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1f0>
    9c04:	mov	r2, #0
    9c08:	mov	r3, #0
    9c0c:	strd	r2, [fp, #-36]	; 0xffffffdc
    9c10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9c14:	str	r3, [fp, #-16]
    9c18:	sub	r3, fp, #36	; 0x24
    9c1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9c20:	ldr	r1, [fp, #-16]
    9c24:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9c28:	bl	20d8 <flatcc_json_parser_int64>
    9c2c:	str	r0, [fp, #-52]	; 0xffffffcc
    9c30:	ldr	r2, [fp, #-16]
    9c34:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9c38:	cmp	r2, r3
    9c3c:	bne	9c88 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x198>
    9c40:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9c44:	str	r3, [fp, #-16]
    9c48:	sub	r3, fp, #36	; 0x24
    9c4c:	str	r3, [sp]
    9c50:	ldr	r3, [pc, #720]	; 9f28 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    9c54:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9c58:	ldr	r1, [fp, #-16]
    9c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9c60:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    9c64:	str	r0, [fp, #-52]	; 0xffffffcc
    9c68:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9c6c:	ldr	r3, [fp, #-16]
    9c70:	cmp	r2, r3
    9c74:	beq	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9c78:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9c7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9c80:	cmp	r2, r3
    9c84:	beq	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9c88:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    9c8c:	orrs	r3, r2, r3
    9c90:	bne	9ca8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1b8>
    9c94:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9c98:	ldr	r3, [r3, #8]
    9c9c:	and	r3, r3, #2
    9ca0:	cmp	r3, #0
    9ca4:	beq	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9ca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9cac:	ldr	r0, [r3]
    9cb0:	mov	r3, #8
    9cb4:	mov	r2, #8
    9cb8:	mov	r1, #0
    9cbc:	bl	0 <flatcc_builder_table_add>
    9cc0:	str	r0, [fp, #-20]	; 0xffffffec
    9cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
    9cc8:	cmp	r3, #0
    9ccc:	beq	9ed0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3e0>
    9cd0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    9cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
    9cd8:	bl	388 <flatbuffers_int64_write_to_pe>
    9cdc:	b	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9ce0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9ce4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9ce8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9cec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9cf0:	str	r0, [fp, #-52]	; 0xffffffcc
    9cf4:	b	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9cf8:	ldrd	r2, [fp, #-12]
    9cfc:	add	r1, pc, #540	; 0x21c
    9d00:	ldrd	r0, [r1]
    9d04:	cmp	r3, r1
    9d08:	cmpeq	r2, r0
    9d0c:	bne	9e34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x344>
    9d10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9d14:	str	r3, [fp, #-16]
    9d18:	mov	r3, #8
    9d1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9d20:	ldr	r1, [fp, #-16]
    9d24:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9d28:	bl	1574 <flatcc_json_parser_match_symbol>
    9d2c:	str	r0, [fp, #-52]	; 0xffffffcc
    9d30:	ldr	r2, [fp, #-16]
    9d34:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9d38:	cmp	r2, r3
    9d3c:	beq	9e1c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x32c>
    9d40:	mov	r3, #0
    9d44:	str	r3, [fp, #-40]	; 0xffffffd8
    9d48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9d4c:	str	r3, [fp, #-16]
    9d50:	sub	r3, fp, #40	; 0x28
    9d54:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9d58:	ldr	r1, [fp, #-16]
    9d5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9d60:	bl	1e68 <flatcc_json_parser_uint32>
    9d64:	str	r0, [fp, #-52]	; 0xffffffcc
    9d68:	ldr	r2, [fp, #-16]
    9d6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9d70:	cmp	r2, r3
    9d74:	bne	9dc0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2d0>
    9d78:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9d7c:	str	r3, [fp, #-16]
    9d80:	sub	r3, fp, #40	; 0x28
    9d84:	str	r3, [sp]
    9d88:	ldr	r3, [pc, #412]	; 9f2c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x43c>
    9d8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9d90:	ldr	r1, [fp, #-16]
    9d94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9d98:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    9d9c:	str	r0, [fp, #-52]	; 0xffffffcc
    9da0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9da4:	ldr	r3, [fp, #-16]
    9da8:	cmp	r2, r3
    9dac:	beq	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9db0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9db4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9db8:	cmp	r2, r3
    9dbc:	beq	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9dc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9dc4:	cmp	r3, #0
    9dc8:	bne	9de0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2f0>
    9dcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9dd0:	ldr	r3, [r3, #8]
    9dd4:	and	r3, r3, #2
    9dd8:	cmp	r3, #0
    9ddc:	beq	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9de0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9de4:	ldr	r0, [r3]
    9de8:	mov	r3, #4
    9dec:	mov	r2, #4
    9df0:	mov	r1, #1
    9df4:	bl	0 <flatcc_builder_table_add>
    9df8:	str	r0, [fp, #-20]	; 0xffffffec
    9dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
    9e00:	cmp	r3, #0
    9e04:	beq	9ed8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3e8>
    9e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9e0c:	mov	r1, r3
    9e10:	ldr	r0, [fp, #-20]	; 0xffffffec
    9e14:	bl	f4 <flatbuffers_uint32_write_to_pe>
    9e18:	b	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9e1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9e20:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9e24:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9e28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e2c:	str	r0, [fp, #-52]	; 0xffffffcc
    9e30:	b	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9e34:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9e38:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9e3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9e40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e44:	str	r0, [fp, #-52]	; 0xffffffcc
    9e48:	b	9e60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9e4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9e50:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9e58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e5c:	str	r0, [fp, #-52]	; 0xffffffcc
    9e60:	sub	r3, fp, #24
    9e64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9e68:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9e6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9e70:	bl	11bc <flatcc_json_parser_object_end>
    9e74:	str	r0, [fp, #-52]	; 0xffffffcc
    9e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9e7c:	cmp	r3, #0
    9e80:	bne	9b54 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x64>
    9e84:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9e88:	ldr	r3, [r3, #24]
    9e8c:	cmp	r3, #0
    9e90:	bne	9ee0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f0>
    9e94:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9e98:	ldr	r3, [r3]
    9e9c:	mov	r0, r3
    9ea0:	bl	0 <flatcc_builder_end_table>
    9ea4:	mov	r2, r0
    9ea8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9eac:	str	r2, [r3]
    9eb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9eb4:	ldr	r3, [r3]
    9eb8:	cmp	r3, #0
    9ebc:	beq	9ee8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    9ec0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9ec4:	b	9f04 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x414>
    9ec8:	nop			; (mov r0, r0)
    9ecc:	b	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9ed0:	nop			; (mov r0, r0)
    9ed4:	b	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9ed8:	nop			; (mov r0, r0)
    9edc:	b	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9ee0:	nop			; (mov r0, r0)
    9ee4:	b	9eec <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9ee8:	nop			; (mov r0, r0)
    9eec:	mov	r3, #33	; 0x21
    9ef0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9ef4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9ef8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9efc:	bl	0 <flatcc_json_parser_set_error>
    9f00:	mov	r3, r0
    9f04:	mov	r0, r3
    9f08:	sub	sp, fp, #4
    9f0c:	pop	{fp, pc}
    9f10:	.word	0x5f626262
    9f14:	.word	0x61616161
    9f18:	.word	0x65707300
    9f1c:	.word	0x625f7374
    9f20:	.word	0x6172745f
    9f24:	.word	0x625f7374
    9f28:	.word	0x0000016c
    9f2c:	.word	0x00000178

00009f30 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    9f30:	push	{fp, lr}
    9f34:	add	fp, sp, #4
    9f38:	sub	sp, sp, #56	; 0x38
    9f3c:	str	r0, [fp, #-40]	; 0xffffffd8
    9f40:	str	r1, [fp, #-44]	; 0xffffffd4
    9f44:	str	r2, [fp, #-48]	; 0xffffffd0
    9f48:	str	r3, [fp, #-52]	; 0xffffffcc
    9f4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9f50:	mov	r2, #0
    9f54:	str	r2, [r3]
    9f58:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9f5c:	ldr	r3, [r3]
    9f60:	mov	r1, #2
    9f64:	mov	r0, r3
    9f68:	bl	0 <flatcc_builder_start_table>
    9f6c:	mov	r3, r0
    9f70:	cmp	r3, #0
    9f74:	bne	a364 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x434>
    9f78:	sub	r3, fp, #24
    9f7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9f80:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9f84:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9f88:	bl	10d4 <flatcc_json_parser_object_start>
    9f8c:	str	r0, [fp, #-44]	; 0xffffffd4
    9f90:	b	a314 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e4>
    9f94:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9f98:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9fa0:	bl	cc4 <flatcc_json_parser_symbol_start>
    9fa4:	str	r0, [fp, #-44]	; 0xffffffd4
    9fa8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9fac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9fb0:	bl	fa8 <flatcc_json_parser_symbol_part>
    9fb4:	strd	r0, [fp, #-12]
    9fb8:	ldrd	r2, [fp, #-12]
    9fbc:	add	r1, pc, #964	; 0x3c4
    9fc0:	ldrd	r0, [r1]
    9fc4:	cmp	r3, r1
    9fc8:	cmpeq	r2, r0
    9fcc:	bne	a2e8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b8>
    9fd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9fd4:	add	r3, r3, #8
    9fd8:	str	r3, [fp, #-44]	; 0xffffffd4
    9fdc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9fe4:	bl	fa8 <flatcc_json_parser_symbol_part>
    9fe8:	strd	r0, [fp, #-12]
    9fec:	ldrd	r2, [fp, #-12]
    9ff0:	add	r1, pc, #920	; 0x398
    9ff4:	ldrd	r0, [r1]
    9ff8:	cmp	r3, r1
    9ffc:	cmpeq	r2, r0
    a000:	bne	a184 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x254>
    a004:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a008:	add	r3, r3, #8
    a00c:	str	r3, [fp, #-44]	; 0xffffffd4
    a010:	ldr	r1, [fp, #-48]	; 0xffffffd0
    a014:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a018:	bl	fa8 <flatcc_json_parser_symbol_part>
    a01c:	strd	r0, [fp, #-12]
    a020:	ldrd	r2, [fp, #-12]
    a024:	mov	r0, #-16777216	; 0xff000000
    a028:	mvn	r1, #0
    a02c:	and	r2, r2, r0
    a030:	and	r3, r3, r1
    a034:	add	r1, pc, #860	; 0x35c
    a038:	ldrd	r0, [r1]
    a03c:	cmp	r3, r1
    a040:	cmpeq	r2, r0
    a044:	bne	a16c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x23c>
    a048:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a04c:	str	r3, [fp, #-16]
    a050:	mov	r3, #5
    a054:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a058:	ldr	r1, [fp, #-16]
    a05c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a060:	bl	1574 <flatcc_json_parser_match_symbol>
    a064:	str	r0, [fp, #-44]	; 0xffffffd4
    a068:	ldr	r2, [fp, #-16]
    a06c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a070:	cmp	r2, r3
    a074:	beq	a154 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x224>
    a078:	mov	r3, #0
    a07c:	str	r3, [fp, #-28]	; 0xffffffe4
    a080:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a084:	str	r3, [fp, #-16]
    a088:	sub	r3, fp, #28
    a08c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a090:	ldr	r1, [fp, #-16]
    a094:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a098:	bl	1e68 <flatcc_json_parser_uint32>
    a09c:	str	r0, [fp, #-44]	; 0xffffffd4
    a0a0:	ldr	r2, [fp, #-16]
    a0a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a0a8:	cmp	r2, r3
    a0ac:	bne	a0f8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1c8>
    a0b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a0b4:	str	r3, [fp, #-16]
    a0b8:	sub	r3, fp, #28
    a0bc:	str	r3, [sp]
    a0c0:	ldr	r3, [pc, #736]	; a3a8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x478>
    a0c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a0c8:	ldr	r1, [fp, #-16]
    a0cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a0d0:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    a0d4:	str	r0, [fp, #-44]	; 0xffffffd4
    a0d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a0dc:	ldr	r3, [fp, #-16]
    a0e0:	cmp	r2, r3
    a0e4:	beq	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a0e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a0ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a0f0:	cmp	r2, r3
    a0f4:	beq	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a0f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a0fc:	cmp	r3, #0
    a100:	bne	a118 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1e8>
    a104:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a108:	ldr	r3, [r3, #8]
    a10c:	and	r3, r3, #2
    a110:	cmp	r3, #0
    a114:	beq	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a118:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a11c:	ldr	r0, [r3]
    a120:	mov	r3, #4
    a124:	mov	r2, #4
    a128:	mov	r1, #1
    a12c:	bl	0 <flatcc_builder_table_add>
    a130:	str	r0, [fp, #-20]	; 0xffffffec
    a134:	ldr	r3, [fp, #-20]	; 0xffffffec
    a138:	cmp	r3, #0
    a13c:	beq	a36c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x43c>
    a140:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a144:	mov	r1, r3
    a148:	ldr	r0, [fp, #-20]	; 0xffffffec
    a14c:	bl	f4 <flatbuffers_uint32_write_to_pe>
    a150:	b	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a154:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a158:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a15c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a160:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a164:	str	r0, [fp, #-44]	; 0xffffffd4
    a168:	b	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a16c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a170:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a174:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a178:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a17c:	str	r0, [fp, #-44]	; 0xffffffd4
    a180:	b	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a184:	ldrd	r2, [fp, #-12]
    a188:	mvn	r0, #255	; 0xff
    a18c:	mvn	r1, #0
    a190:	and	r2, r2, r0
    a194:	and	r3, r3, r1
    a198:	add	r1, pc, #512	; 0x200
    a19c:	ldrd	r0, [r1]
    a1a0:	cmp	r3, r1
    a1a4:	cmpeq	r2, r0
    a1a8:	bne	a2d0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3a0>
    a1ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a1b0:	str	r3, [fp, #-16]
    a1b4:	mov	r3, #7
    a1b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a1bc:	ldr	r1, [fp, #-16]
    a1c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a1c4:	bl	1574 <flatcc_json_parser_match_symbol>
    a1c8:	str	r0, [fp, #-44]	; 0xffffffd4
    a1cc:	ldr	r2, [fp, #-16]
    a1d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a1d4:	cmp	r2, r3
    a1d8:	beq	a2b8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x388>
    a1dc:	mov	r2, #0
    a1e0:	mov	r3, #0
    a1e4:	strd	r2, [fp, #-36]	; 0xffffffdc
    a1e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a1ec:	str	r3, [fp, #-16]
    a1f0:	sub	r3, fp, #36	; 0x24
    a1f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a1f8:	ldr	r1, [fp, #-16]
    a1fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a200:	bl	20d8 <flatcc_json_parser_int64>
    a204:	str	r0, [fp, #-44]	; 0xffffffd4
    a208:	ldr	r2, [fp, #-16]
    a20c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a210:	cmp	r2, r3
    a214:	bne	a260 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x330>
    a218:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a21c:	str	r3, [fp, #-16]
    a220:	sub	r3, fp, #36	; 0x24
    a224:	str	r3, [sp]
    a228:	ldr	r3, [pc, #380]	; a3ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x47c>
    a22c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a230:	ldr	r1, [fp, #-16]
    a234:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a238:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    a23c:	str	r0, [fp, #-44]	; 0xffffffd4
    a240:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a244:	ldr	r3, [fp, #-16]
    a248:	cmp	r2, r3
    a24c:	beq	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a250:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a254:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a258:	cmp	r2, r3
    a25c:	beq	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a260:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    a264:	orrs	r3, r2, r3
    a268:	bne	a280 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x350>
    a26c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a270:	ldr	r3, [r3, #8]
    a274:	and	r3, r3, #2
    a278:	cmp	r3, #0
    a27c:	beq	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a280:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a284:	ldr	r0, [r3]
    a288:	mov	r3, #8
    a28c:	mov	r2, #8
    a290:	mov	r1, #0
    a294:	bl	0 <flatcc_builder_table_add>
    a298:	str	r0, [fp, #-20]	; 0xffffffec
    a29c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a2a0:	cmp	r3, #0
    a2a4:	beq	a374 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x444>
    a2a8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    a2ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    a2b0:	bl	388 <flatbuffers_int64_write_to_pe>
    a2b4:	b	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a2b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a2bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a2c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a2c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a2c8:	str	r0, [fp, #-44]	; 0xffffffd4
    a2cc:	b	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a2d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a2d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a2d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a2dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a2e0:	str	r0, [fp, #-44]	; 0xffffffd4
    a2e4:	b	a2fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a2e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a2ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a2f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a2f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a2f8:	str	r0, [fp, #-44]	; 0xffffffd4
    a2fc:	sub	r3, fp, #24
    a300:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a304:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a308:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a30c:	bl	11bc <flatcc_json_parser_object_end>
    a310:	str	r0, [fp, #-44]	; 0xffffffd4
    a314:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a318:	cmp	r3, #0
    a31c:	bne	9f94 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x64>
    a320:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a324:	ldr	r3, [r3, #24]
    a328:	cmp	r3, #0
    a32c:	bne	a37c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x44c>
    a330:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a334:	ldr	r3, [r3]
    a338:	mov	r0, r3
    a33c:	bl	0 <flatcc_builder_end_table>
    a340:	mov	r2, r0
    a344:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a348:	str	r2, [r3]
    a34c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a350:	ldr	r3, [r3]
    a354:	cmp	r3, #0
    a358:	beq	a3b0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x480>
    a35c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a360:	b	a3cc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a364:	nop			; (mov r0, r0)
    a368:	b	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a36c:	nop			; (mov r0, r0)
    a370:	b	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a374:	nop			; (mov r0, r0)
    a378:	b	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a37c:	nop			; (mov r0, r0)
    a380:	b	a3b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    a384:	nop			; (mov r0, r0)
    a388:	.word	0x5f626262
    a38c:	.word	0x61616161
    a390:	.word	0x6172745f
    a394:	.word	0x625f7374
    a398:	.word	0x73000000
    a39c:	.word	0x73746570
    a3a0:	.word	0x65707300
    a3a4:	.word	0x625f7374
    a3a8:	.word	0x00000184
    a3ac:	.word	0x00000190
    a3b0:	nop			; (mov r0, r0)
    a3b4:	mov	r3, #33	; 0x21
    a3b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a3bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a3c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a3c4:	bl	0 <flatcc_json_parser_set_error>
    a3c8:	mov	r3, r0
    a3cc:	mov	r0, r3
    a3d0:	sub	sp, fp, #4
    a3d4:	pop	{fp, pc}

0000a3d8 <MyGame_Example_TestBase64_parse_json_table>:
    a3d8:	push	{fp, lr}
    a3dc:	add	fp, sp, #4
    a3e0:	sub	sp, sp, #48	; 0x30
    a3e4:	str	r0, [fp, #-32]	; 0xffffffe0
    a3e8:	str	r1, [fp, #-36]	; 0xffffffdc
    a3ec:	str	r2, [fp, #-40]	; 0xffffffd8
    a3f0:	str	r3, [fp, #-44]	; 0xffffffd4
    a3f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a3f8:	mov	r2, #0
    a3fc:	str	r2, [r3]
    a400:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a404:	ldr	r3, [r3]
    a408:	mov	r1, #3
    a40c:	mov	r0, r3
    a410:	bl	0 <flatcc_builder_start_table>
    a414:	mov	r3, r0
    a418:	cmp	r3, #0
    a41c:	bne	a788 <MyGame_Example_TestBase64_parse_json_table+0x3b0>
    a420:	sub	r3, fp, #24
    a424:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a428:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a42c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a430:	bl	10d4 <flatcc_json_parser_object_start>
    a434:	str	r0, [fp, #-36]	; 0xffffffdc
    a438:	b	a738 <MyGame_Example_TestBase64_parse_json_table+0x360>
    a43c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a440:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a444:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a448:	bl	cc4 <flatcc_json_parser_symbol_start>
    a44c:	str	r0, [fp, #-36]	; 0xffffffdc
    a450:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a454:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a458:	bl	fa8 <flatcc_json_parser_symbol_part>
    a45c:	strd	r0, [fp, #-12]
    a460:	ldrd	r2, [fp, #-12]
    a464:	add	r1, pc, #852	; 0x354
    a468:	ldrd	r0, [r1]
    a46c:	cmp	r3, r1
    a470:	cmpeq	r2, r0
    a474:	bhi	a564 <MyGame_Example_TestBase64_parse_json_table+0x18c>
    a478:	ldrd	r2, [fp, #-12]
    a47c:	mov	r0, #0
    a480:	mvn	r1, #0
    a484:	and	r2, r2, r0
    a488:	and	r3, r3, r1
    a48c:	add	r1, pc, #820	; 0x334
    a490:	ldrd	r0, [r1]
    a494:	cmp	r3, r1
    a498:	cmpeq	r2, r0
    a49c:	bne	a54c <MyGame_Example_TestBase64_parse_json_table+0x174>
    a4a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a4a4:	str	r3, [fp, #-16]
    a4a8:	mov	r3, #4
    a4ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a4b0:	ldr	r1, [fp, #-16]
    a4b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a4b8:	bl	1574 <flatcc_json_parser_match_symbol>
    a4bc:	str	r0, [fp, #-36]	; 0xffffffdc
    a4c0:	ldr	r2, [fp, #-16]
    a4c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a4c8:	cmp	r2, r3
    a4cc:	beq	a534 <MyGame_Example_TestBase64_parse_json_table+0x15c>
    a4d0:	sub	r2, fp, #28
    a4d4:	mov	r3, #0
    a4d8:	str	r3, [sp]
    a4dc:	mov	r3, r2
    a4e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a4e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a4e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a4ec:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    a4f0:	str	r0, [fp, #-36]	; 0xffffffdc
    a4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a4f8:	cmp	r3, #0
    a4fc:	beq	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a500:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a504:	ldr	r3, [r3]
    a508:	mov	r1, #0
    a50c:	mov	r0, r3
    a510:	bl	0 <flatcc_builder_table_add_offset>
    a514:	str	r0, [fp, #-20]	; 0xffffffec
    a518:	ldr	r3, [fp, #-20]	; 0xffffffec
    a51c:	cmp	r3, #0
    a520:	beq	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a524:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a528:	ldr	r3, [fp, #-20]	; 0xffffffec
    a52c:	str	r2, [r3]
    a530:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a534:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a538:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a53c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a540:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a544:	str	r0, [fp, #-36]	; 0xffffffdc
    a548:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a54c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a550:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a554:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a558:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a55c:	str	r0, [fp, #-36]	; 0xffffffdc
    a560:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a564:	ldrd	r2, [fp, #-12]
    a568:	mvn	r0, #255	; 0xff
    a56c:	mvn	r1, #0
    a570:	and	r2, r2, r0
    a574:	and	r3, r3, r1
    a578:	add	r1, pc, #592	; 0x250
    a57c:	ldrd	r0, [r1]
    a580:	cmp	r3, r1
    a584:	cmpeq	r2, r0
    a588:	bne	a638 <MyGame_Example_TestBase64_parse_json_table+0x260>
    a58c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a590:	str	r3, [fp, #-16]
    a594:	mov	r3, #7
    a598:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a59c:	ldr	r1, [fp, #-16]
    a5a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a5a4:	bl	1574 <flatcc_json_parser_match_symbol>
    a5a8:	str	r0, [fp, #-36]	; 0xffffffdc
    a5ac:	ldr	r2, [fp, #-16]
    a5b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a5b4:	cmp	r2, r3
    a5b8:	beq	a620 <MyGame_Example_TestBase64_parse_json_table+0x248>
    a5bc:	sub	r2, fp, #28
    a5c0:	mov	r3, #1
    a5c4:	str	r3, [sp]
    a5c8:	mov	r3, r2
    a5cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a5d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a5d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a5d8:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    a5dc:	str	r0, [fp, #-36]	; 0xffffffdc
    a5e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a5e4:	cmp	r3, #0
    a5e8:	beq	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a5ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a5f0:	ldr	r3, [r3]
    a5f4:	mov	r1, #1
    a5f8:	mov	r0, r3
    a5fc:	bl	0 <flatcc_builder_table_add_offset>
    a600:	str	r0, [fp, #-20]	; 0xffffffec
    a604:	ldr	r3, [fp, #-20]	; 0xffffffec
    a608:	cmp	r3, #0
    a60c:	beq	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a610:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a614:	ldr	r3, [fp, #-20]	; 0xffffffec
    a618:	str	r2, [r3]
    a61c:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a620:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a624:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a628:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a62c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a630:	str	r0, [fp, #-36]	; 0xffffffdc
    a634:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a638:	ldrd	r2, [fp, #-12]
    a63c:	ldr	r0, [pc, #412]	; a7e0 <MyGame_Example_TestBase64_parse_json_table+0x408>
    a640:	mvn	r1, #0
    a644:	and	r2, r2, r0
    a648:	and	r3, r3, r1
    a64c:	add	r1, pc, #388	; 0x184
    a650:	ldrd	r0, [r1]
    a654:	cmp	r3, r1
    a658:	cmpeq	r2, r0
    a65c:	bne	a70c <MyGame_Example_TestBase64_parse_json_table+0x334>
    a660:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a664:	str	r3, [fp, #-16]
    a668:	mov	r3, #6
    a66c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a670:	ldr	r1, [fp, #-16]
    a674:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a678:	bl	1574 <flatcc_json_parser_match_symbol>
    a67c:	str	r0, [fp, #-36]	; 0xffffffdc
    a680:	ldr	r2, [fp, #-16]
    a684:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a688:	cmp	r2, r3
    a68c:	beq	a6f4 <MyGame_Example_TestBase64_parse_json_table+0x31c>
    a690:	sub	r2, fp, #28
    a694:	mov	r3, #0
    a698:	str	r3, [sp]
    a69c:	mov	r3, r2
    a6a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a6a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a6a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a6ac:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    a6b0:	str	r0, [fp, #-36]	; 0xffffffdc
    a6b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a6b8:	cmp	r3, #0
    a6bc:	beq	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a6c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a6c4:	ldr	r3, [r3]
    a6c8:	mov	r1, #2
    a6cc:	mov	r0, r3
    a6d0:	bl	0 <flatcc_builder_table_add_offset>
    a6d4:	str	r0, [fp, #-20]	; 0xffffffec
    a6d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    a6dc:	cmp	r3, #0
    a6e0:	beq	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a6e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    a6ec:	str	r2, [r3]
    a6f0:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a6f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a6f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a6fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a700:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a704:	str	r0, [fp, #-36]	; 0xffffffdc
    a708:	b	a720 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a70c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a710:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a714:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a718:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a71c:	str	r0, [fp, #-36]	; 0xffffffdc
    a720:	sub	r3, fp, #24
    a724:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a728:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a72c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a730:	bl	11bc <flatcc_json_parser_object_end>
    a734:	str	r0, [fp, #-36]	; 0xffffffdc
    a738:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a73c:	cmp	r3, #0
    a740:	bne	a43c <MyGame_Example_TestBase64_parse_json_table+0x64>
    a744:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a748:	ldr	r3, [r3, #24]
    a74c:	cmp	r3, #0
    a750:	bne	a790 <MyGame_Example_TestBase64_parse_json_table+0x3b8>
    a754:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a758:	ldr	r3, [r3]
    a75c:	mov	r0, r3
    a760:	bl	0 <flatcc_builder_end_table>
    a764:	mov	r2, r0
    a768:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a76c:	str	r2, [r3]
    a770:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a774:	ldr	r3, [r3]
    a778:	cmp	r3, #0
    a77c:	beq	a798 <MyGame_Example_TestBase64_parse_json_table+0x3c0>
    a780:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a784:	b	a7b4 <MyGame_Example_TestBase64_parse_json_table+0x3dc>
    a788:	nop			; (mov r0, r0)
    a78c:	b	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a790:	nop			; (mov r0, r0)
    a794:	b	a79c <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a798:	nop			; (mov r0, r0)
    a79c:	mov	r3, #33	; 0x21
    a7a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a7a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a7a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a7ac:	bl	0 <flatcc_json_parser_set_error>
    a7b0:	mov	r3, r0
    a7b4:	mov	r0, r3
    a7b8:	sub	sp, fp, #4
    a7bc:	pop	{fp, pc}
    a7c0:	.word	0x6563ffff
    a7c4:	.word	0x6e657374
    a7c8:	.word	0x00000000
    a7cc:	.word	0x64617461
    a7d0:	.word	0x61746100
    a7d4:	.word	0x75726c64
    a7d8:	.word	0x65640000
    a7dc:	.word	0x6e657374
    a7e0:	.word	0xffff0000

0000a7e4 <MyGame_Example_Monster_parse_json_table>:
    a7e4:	push	{fp, lr}
    a7e8:	add	fp, sp, #4
    a7ec:	sub	sp, sp, #160	; 0xa0
    a7f0:	str	r0, [fp, #-136]	; 0xffffff78
    a7f4:	str	r1, [fp, #-140]	; 0xffffff74
    a7f8:	str	r2, [fp, #-144]	; 0xffffff70
    a7fc:	str	r3, [fp, #-148]	; 0xffffff6c
    a800:	ldr	r3, [fp, #-148]	; 0xffffff6c
    a804:	mov	r2, #0
    a808:	str	r2, [r3]
    a80c:	ldr	r3, [fp, #-136]	; 0xffffff78
    a810:	ldr	r3, [r3]
    a814:	mov	r1, #36	; 0x24
    a818:	mov	r0, r3
    a81c:	bl	0 <flatcc_builder_start_table>
    a820:	mov	r3, r0
    a824:	cmp	r3, #0
    a828:	bne	e060 <MyGame_Example_Monster_parse_json_table+0x387c>
    a82c:	sub	r3, fp, #36	; 0x24
    a830:	str	r3, [sp]
    a834:	mov	r3, #1
    a838:	ldr	r2, [fp, #-144]	; 0xffffff70
    a83c:	ldr	r1, [fp, #-140]	; 0xffffff74
    a840:	ldr	r0, [fp, #-136]	; 0xffffff78
    a844:	bl	0 <flatcc_json_parser_prepare_unions>
    a848:	mov	r2, r0
    a84c:	ldr	r3, [fp, #-144]	; 0xffffff70
    a850:	cmp	r2, r3
    a854:	beq	e068 <MyGame_Example_Monster_parse_json_table+0x3884>
    a858:	sub	r3, fp, #28
    a85c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a860:	ldr	r1, [fp, #-140]	; 0xffffff74
    a864:	ldr	r0, [fp, #-136]	; 0xffffff78
    a868:	bl	10d4 <flatcc_json_parser_object_start>
    a86c:	str	r0, [fp, #-140]	; 0xffffff74
    a870:	b	dfbc <MyGame_Example_Monster_parse_json_table+0x37d8>
    a874:	ldr	r2, [fp, #-144]	; 0xffffff70
    a878:	ldr	r1, [fp, #-140]	; 0xffffff74
    a87c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a880:	bl	cc4 <flatcc_json_parser_symbol_start>
    a884:	str	r0, [fp, #-140]	; 0xffffff74
    a888:	ldr	r1, [fp, #-144]	; 0xffffff70
    a88c:	ldr	r0, [fp, #-140]	; 0xffffff74
    a890:	bl	fa8 <flatcc_json_parser_symbol_part>
    a894:	strd	r0, [fp, #-12]
    a898:	ldrd	r2, [fp, #-12]
    a89c:	add	r1, pc, #796	; 0x31c
    a8a0:	ldrd	r0, [r1]
    a8a4:	cmp	r3, r1
    a8a8:	cmpeq	r2, r0
    a8ac:	bhi	ba78 <MyGame_Example_Monster_parse_json_table+0x1294>
    a8b0:	ldrd	r2, [fp, #-12]
    a8b4:	add	r1, pc, #780	; 0x30c
    a8b8:	ldrd	r0, [r1]
    a8bc:	cmp	r3, r1
    a8c0:	cmpeq	r2, r0
    a8c4:	bhi	b284 <MyGame_Example_Monster_parse_json_table+0xaa0>
    a8c8:	ldrd	r2, [fp, #-12]
    a8cc:	add	r1, pc, #764	; 0x2fc
    a8d0:	ldrd	r0, [r1]
    a8d4:	cmp	r3, r1
    a8d8:	cmpeq	r2, r0
    a8dc:	bhi	ab0c <MyGame_Example_Monster_parse_json_table+0x328>
    a8e0:	ldrd	r2, [fp, #-12]
    a8e4:	mov	r0, #-16777216	; 0xff000000
    a8e8:	mvn	r1, #0
    a8ec:	and	r2, r2, r0
    a8f0:	and	r3, r3, r1
    a8f4:	add	r1, pc, #732	; 0x2dc
    a8f8:	ldrd	r0, [r1]
    a8fc:	cmp	r3, r1
    a900:	cmpeq	r2, r0
    a904:	bne	a9a8 <MyGame_Example_Monster_parse_json_table+0x1c4>
    a908:	ldr	r3, [fp, #-140]	; 0xffffff74
    a90c:	str	r3, [fp, #-16]
    a910:	mov	r3, #5
    a914:	ldr	r2, [fp, #-144]	; 0xffffff70
    a918:	ldr	r1, [fp, #-16]
    a91c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a920:	bl	1574 <flatcc_json_parser_match_symbol>
    a924:	str	r0, [fp, #-140]	; 0xffffff74
    a928:	ldr	r2, [fp, #-16]
    a92c:	ldr	r3, [fp, #-140]	; 0xffffff74
    a930:	cmp	r2, r3
    a934:	beq	a990 <MyGame_Example_Monster_parse_json_table+0x1ac>
    a938:	sub	r3, fp, #32
    a93c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a940:	ldr	r1, [fp, #-140]	; 0xffffff74
    a944:	ldr	r0, [fp, #-136]	; 0xffffff78
    a948:	bl	a7e4 <MyGame_Example_Monster_parse_json_table>
    a94c:	str	r0, [fp, #-140]	; 0xffffff74
    a950:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a954:	cmp	r3, #0
    a958:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    a95c:	ldr	r3, [fp, #-136]	; 0xffffff78
    a960:	ldr	r3, [r3]
    a964:	mov	r1, #12
    a968:	mov	r0, r3
    a96c:	bl	0 <flatcc_builder_table_add_offset>
    a970:	str	r0, [fp, #-20]	; 0xffffffec
    a974:	ldr	r3, [fp, #-20]	; 0xffffffec
    a978:	cmp	r3, #0
    a97c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    a980:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a984:	ldr	r3, [fp, #-20]	; 0xffffffec
    a988:	str	r2, [r3]
    a98c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    a990:	ldr	r2, [fp, #-144]	; 0xffffff70
    a994:	ldr	r1, [fp, #-140]	; 0xffffff74
    a998:	ldr	r0, [fp, #-136]	; 0xffffff78
    a99c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a9a0:	str	r0, [fp, #-140]	; 0xffffff74
    a9a4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    a9a8:	ldrd	r2, [fp, #-12]
    a9ac:	mov	r0, #-16777216	; 0xff000000
    a9b0:	mvn	r1, #0
    a9b4:	and	r2, r2, r0
    a9b8:	and	r3, r3, r1
    a9bc:	add	r1, pc, #540	; 0x21c
    a9c0:	ldrd	r0, [r1]
    a9c4:	cmp	r3, r1
    a9c8:	cmpeq	r2, r0
    a9cc:	bne	aaf4 <MyGame_Example_Monster_parse_json_table+0x310>
    a9d0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a9d4:	str	r3, [fp, #-16]
    a9d8:	mov	r3, #5
    a9dc:	ldr	r2, [fp, #-144]	; 0xffffff70
    a9e0:	ldr	r1, [fp, #-16]
    a9e4:	ldr	r0, [fp, #-136]	; 0xffffff78
    a9e8:	bl	1574 <flatcc_json_parser_match_symbol>
    a9ec:	str	r0, [fp, #-140]	; 0xffffff74
    a9f0:	ldr	r2, [fp, #-16]
    a9f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    a9f8:	cmp	r2, r3
    a9fc:	beq	aadc <MyGame_Example_Monster_parse_json_table+0x2f8>
    aa00:	mov	r3, #0
    aa04:	strb	r3, [fp, #-37]	; 0xffffffdb
    aa08:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa0c:	str	r3, [fp, #-16]
    aa10:	sub	r3, fp, #37	; 0x25
    aa14:	ldr	r2, [fp, #-144]	; 0xffffff70
    aa18:	ldr	r1, [fp, #-16]
    aa1c:	ldr	r0, [fp, #-136]	; 0xffffff78
    aa20:	bl	234c <flatcc_json_parser_int8>
    aa24:	str	r0, [fp, #-140]	; 0xffffff74
    aa28:	ldr	r2, [fp, #-16]
    aa2c:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa30:	cmp	r2, r3
    aa34:	bne	aa80 <MyGame_Example_Monster_parse_json_table+0x29c>
    aa38:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa3c:	str	r3, [fp, #-16]
    aa40:	sub	r3, fp, #37	; 0x25
    aa44:	str	r3, [sp]
    aa48:	ldr	r3, [pc, #416]	; abf0 <MyGame_Example_Monster_parse_json_table+0x40c>
    aa4c:	ldr	r2, [fp, #-144]	; 0xffffff70
    aa50:	ldr	r1, [fp, #-16]
    aa54:	ldr	r0, [fp, #-136]	; 0xffffff78
    aa58:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    aa5c:	str	r0, [fp, #-140]	; 0xffffff74
    aa60:	ldr	r2, [fp, #-140]	; 0xffffff74
    aa64:	ldr	r3, [fp, #-16]
    aa68:	cmp	r2, r3
    aa6c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    aa70:	ldr	r2, [fp, #-140]	; 0xffffff74
    aa74:	ldr	r3, [fp, #-144]	; 0xffffff70
    aa78:	cmp	r2, r3
    aa7c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    aa80:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
    aa84:	cmp	r3, #8
    aa88:	bne	aaa0 <MyGame_Example_Monster_parse_json_table+0x2bc>
    aa8c:	ldr	r3, [fp, #-136]	; 0xffffff78
    aa90:	ldr	r3, [r3, #8]
    aa94:	and	r3, r3, #2
    aa98:	cmp	r3, #0
    aa9c:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    aaa0:	ldr	r3, [fp, #-136]	; 0xffffff78
    aaa4:	ldr	r0, [r3]
    aaa8:	mov	r3, #1
    aaac:	mov	r2, #1
    aab0:	mov	r1, #6
    aab4:	bl	0 <flatcc_builder_table_add>
    aab8:	str	r0, [fp, #-24]	; 0xffffffe8
    aabc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    aac0:	cmp	r3, #0
    aac4:	beq	e070 <MyGame_Example_Monster_parse_json_table+0x388c>
    aac8:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
    aacc:	mov	r1, r3
    aad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aad4:	bl	208 <flatbuffers_int8_write_to_pe>
    aad8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    aadc:	ldr	r2, [fp, #-144]	; 0xffffff70
    aae0:	ldr	r1, [fp, #-140]	; 0xffffff74
    aae4:	ldr	r0, [fp, #-136]	; 0xffffff78
    aae8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aaec:	str	r0, [fp, #-140]	; 0xffffff74
    aaf0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    aaf4:	ldr	r2, [fp, #-144]	; 0xffffff70
    aaf8:	ldr	r1, [fp, #-140]	; 0xffffff74
    aafc:	ldr	r0, [fp, #-136]	; 0xffffff78
    ab00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab04:	str	r0, [fp, #-140]	; 0xffffff74
    ab08:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ab0c:	ldrd	r2, [fp, #-12]
    ab10:	mvn	r0, #0
    ab14:	ldr	r1, [pc, #216]	; abf4 <MyGame_Example_Monster_parse_json_table+0x410>
    ab18:	cmp	r3, r1
    ab1c:	cmpeq	r2, r0
    ab20:	bhi	ad5c <MyGame_Example_Monster_parse_json_table+0x578>
    ab24:	ldrd	r2, [fp, #-12]
    ab28:	mov	r0, #0
    ab2c:	mvn	r1, #0
    ab30:	and	r2, r2, r0
    ab34:	and	r3, r3, r1
    ab38:	add	r1, pc, #168	; 0xa8
    ab3c:	ldrd	r0, [r1]
    ab40:	cmp	r3, r1
    ab44:	cmpeq	r2, r0
    ab48:	bne	ad44 <MyGame_Example_Monster_parse_json_table+0x560>
    ab4c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ab50:	str	r3, [fp, #-16]
    ab54:	mov	r3, #4
    ab58:	ldr	r2, [fp, #-144]	; 0xffffff70
    ab5c:	ldr	r1, [fp, #-16]
    ab60:	ldr	r0, [fp, #-136]	; 0xffffff78
    ab64:	bl	1574 <flatcc_json_parser_match_symbol>
    ab68:	str	r0, [fp, #-140]	; 0xffffff74
    ab6c:	ldr	r2, [fp, #-16]
    ab70:	ldr	r3, [fp, #-140]	; 0xffffff74
    ab74:	cmp	r2, r3
    ab78:	beq	ad2c <MyGame_Example_Monster_parse_json_table+0x548>
    ab7c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ab80:	ldr	r0, [r3]
    ab84:	mvn	r3, #0
    ab88:	mov	r2, #1
    ab8c:	mov	r1, #1
    ab90:	bl	0 <flatcc_builder_start_vector>
    ab94:	mov	r3, r0
    ab98:	cmp	r3, #0
    ab9c:	bne	e078 <MyGame_Example_Monster_parse_json_table+0x3894>
    aba0:	sub	r3, fp, #28
    aba4:	ldr	r2, [fp, #-144]	; 0xffffff70
    aba8:	ldr	r1, [fp, #-140]	; 0xffffff74
    abac:	ldr	r0, [fp, #-136]	; 0xffffff78
    abb0:	bl	1324 <flatcc_json_parser_array_start>
    abb4:	str	r0, [fp, #-140]	; 0xffffff74
    abb8:	b	acc8 <MyGame_Example_Monster_parse_json_table+0x4e4>
    abbc:	nop			; (mov r0, r0)
    abc0:	.word	0x61727260
    abc4:	.word	0x74657374
    abc8:	.word	0xffffffff
    abcc:	.word	0x6e616d64
    abd0:	.word	0xffffffff
    abd4:	.word	0x666c6577
    abd8:	.word	0x79000000
    abdc:	.word	0x656e656d
    abe0:	.word	0x72000000
    abe4:	.word	0x636f6c6f
    abe8:	.word	0x00000000
    abec:	.word	0x666c6578
    abf0:	.word	0x0000019c
    abf4:	.word	0x686fffff
    abf8:	.word	0x000001ac
    abfc:	mov	r3, #0
    ac00:	strb	r3, [fp, #-38]	; 0xffffffda
    ac04:	ldr	r3, [fp, #-136]	; 0xffffff78
    ac08:	ldr	r3, [r3]
    ac0c:	mov	r1, #1
    ac10:	mov	r0, r3
    ac14:	bl	0 <flatcc_builder_extend_vector>
    ac18:	str	r0, [fp, #-24]	; 0xffffffe8
    ac1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ac20:	cmp	r3, #0
    ac24:	beq	e080 <MyGame_Example_Monster_parse_json_table+0x389c>
    ac28:	ldr	r3, [fp, #-140]	; 0xffffff74
    ac2c:	str	r3, [fp, #-16]
    ac30:	sub	r3, fp, #38	; 0x26
    ac34:	ldr	r2, [fp, #-144]	; 0xffffff70
    ac38:	ldr	r1, [fp, #-16]
    ac3c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ac40:	bl	2008 <flatcc_json_parser_uint8>
    ac44:	str	r0, [fp, #-140]	; 0xffffff74
    ac48:	ldr	r2, [fp, #-16]
    ac4c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ac50:	cmp	r2, r3
    ac54:	bne	aca0 <MyGame_Example_Monster_parse_json_table+0x4bc>
    ac58:	ldr	r3, [fp, #-140]	; 0xffffff74
    ac5c:	str	r3, [fp, #-16]
    ac60:	sub	r3, fp, #38	; 0x26
    ac64:	str	r3, [sp]
    ac68:	ldr	r3, [pc, #-120]	; abf8 <MyGame_Example_Monster_parse_json_table+0x414>
    ac6c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ac70:	ldr	r1, [fp, #-16]
    ac74:	ldr	r0, [fp, #-136]	; 0xffffff78
    ac78:	bl	2a94 <flatcc_json_parser_symbolic_uint8>
    ac7c:	str	r0, [fp, #-140]	; 0xffffff74
    ac80:	ldr	r2, [fp, #-140]	; 0xffffff74
    ac84:	ldr	r3, [fp, #-16]
    ac88:	cmp	r2, r3
    ac8c:	beq	e080 <MyGame_Example_Monster_parse_json_table+0x389c>
    ac90:	ldr	r2, [fp, #-140]	; 0xffffff74
    ac94:	ldr	r3, [fp, #-144]	; 0xffffff70
    ac98:	cmp	r2, r3
    ac9c:	beq	e080 <MyGame_Example_Monster_parse_json_table+0x389c>
    aca0:	ldrb	r3, [fp, #-38]	; 0xffffffda
    aca4:	mov	r1, r3
    aca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    acac:	bl	28 <flatbuffers_uint8_write_to_pe>
    acb0:	sub	r3, fp, #28
    acb4:	ldr	r2, [fp, #-144]	; 0xffffff70
    acb8:	ldr	r1, [fp, #-140]	; 0xffffff74
    acbc:	ldr	r0, [fp, #-136]	; 0xffffff78
    acc0:	bl	140c <flatcc_json_parser_array_end>
    acc4:	str	r0, [fp, #-140]	; 0xffffff74
    acc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    accc:	cmp	r3, #0
    acd0:	bne	abfc <MyGame_Example_Monster_parse_json_table+0x418>
    acd4:	ldr	r3, [fp, #-136]	; 0xffffff78
    acd8:	ldr	r3, [r3]
    acdc:	mov	r0, r3
    ace0:	bl	0 <flatcc_builder_end_vector>
    ace4:	mov	r3, r0
    ace8:	str	r3, [fp, #-32]	; 0xffffffe0
    acec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    acf0:	cmp	r3, #0
    acf4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    acf8:	ldr	r3, [fp, #-136]	; 0xffffff78
    acfc:	ldr	r3, [r3]
    ad00:	mov	r1, #30
    ad04:	mov	r0, r3
    ad08:	bl	0 <flatcc_builder_table_add_offset>
    ad0c:	str	r0, [fp, #-20]	; 0xffffffec
    ad10:	ldr	r3, [fp, #-20]	; 0xffffffec
    ad14:	cmp	r3, #0
    ad18:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    ad1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ad20:	ldr	r3, [fp, #-20]	; 0xffffffec
    ad24:	str	r2, [r3]
    ad28:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad2c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ad30:	ldr	r1, [fp, #-140]	; 0xffffff74
    ad34:	ldr	r0, [fp, #-136]	; 0xffffff78
    ad38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad3c:	str	r0, [fp, #-140]	; 0xffffff74
    ad40:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad44:	ldr	r2, [fp, #-144]	; 0xffffff70
    ad48:	ldr	r1, [fp, #-140]	; 0xffffff74
    ad4c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ad50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad54:	str	r0, [fp, #-140]	; 0xffffff74
    ad58:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad5c:	ldrd	r2, [fp, #-12]
    ad60:	add	r1, pc, #920	; 0x398
    ad64:	ldrd	r0, [r1]
    ad68:	cmp	r3, r1
    ad6c:	cmpeq	r2, r0
    ad70:	bhi	aed8 <MyGame_Example_Monster_parse_json_table+0x6f4>
    ad74:	ldrd	r2, [fp, #-12]
    ad78:	mov	r0, #0
    ad7c:	ldr	r1, [pc, #908]	; b110 <MyGame_Example_Monster_parse_json_table+0x92c>
    ad80:	and	r2, r2, r0
    ad84:	and	r3, r3, r1
    ad88:	mov	r0, #0
    ad8c:	ldr	r1, [pc, #896]	; b114 <MyGame_Example_Monster_parse_json_table+0x930>
    ad90:	cmp	r3, r1
    ad94:	cmpeq	r2, r0
    ad98:	bne	aec0 <MyGame_Example_Monster_parse_json_table+0x6dc>
    ad9c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ada0:	str	r3, [fp, #-16]
    ada4:	mov	r3, #2
    ada8:	ldr	r2, [fp, #-144]	; 0xffffff70
    adac:	ldr	r1, [fp, #-16]
    adb0:	ldr	r0, [fp, #-136]	; 0xffffff78
    adb4:	bl	1574 <flatcc_json_parser_match_symbol>
    adb8:	str	r0, [fp, #-140]	; 0xffffff74
    adbc:	ldr	r2, [fp, #-16]
    adc0:	ldr	r3, [fp, #-140]	; 0xffffff74
    adc4:	cmp	r2, r3
    adc8:	beq	aea8 <MyGame_Example_Monster_parse_json_table+0x6c4>
    adcc:	mov	r3, #0
    add0:	strh	r3, [fp, #-40]	; 0xffffffd8
    add4:	ldr	r3, [fp, #-140]	; 0xffffff74
    add8:	str	r3, [fp, #-16]
    addc:	sub	r3, fp, #40	; 0x28
    ade0:	ldr	r2, [fp, #-144]	; 0xffffff70
    ade4:	ldr	r1, [fp, #-16]
    ade8:	ldr	r0, [fp, #-136]	; 0xffffff78
    adec:	bl	227c <flatcc_json_parser_int16>
    adf0:	str	r0, [fp, #-140]	; 0xffffff74
    adf4:	ldr	r2, [fp, #-16]
    adf8:	ldr	r3, [fp, #-140]	; 0xffffff74
    adfc:	cmp	r2, r3
    ae00:	bne	ae4c <MyGame_Example_Monster_parse_json_table+0x668>
    ae04:	ldr	r3, [fp, #-140]	; 0xffffff74
    ae08:	str	r3, [fp, #-16]
    ae0c:	sub	r3, fp, #40	; 0x28
    ae10:	str	r3, [sp]
    ae14:	ldr	r3, [pc, #764]	; b118 <MyGame_Example_Monster_parse_json_table+0x934>
    ae18:	ldr	r2, [fp, #-144]	; 0xffffff70
    ae1c:	ldr	r1, [fp, #-16]
    ae20:	ldr	r0, [fp, #-136]	; 0xffffff78
    ae24:	bl	3008 <flatcc_json_parser_symbolic_int16>
    ae28:	str	r0, [fp, #-140]	; 0xffffff74
    ae2c:	ldr	r2, [fp, #-140]	; 0xffffff74
    ae30:	ldr	r3, [fp, #-16]
    ae34:	cmp	r2, r3
    ae38:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    ae3c:	ldr	r2, [fp, #-140]	; 0xffffff74
    ae40:	ldr	r3, [fp, #-144]	; 0xffffff70
    ae44:	cmp	r2, r3
    ae48:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    ae4c:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
    ae50:	cmp	r3, #100	; 0x64
    ae54:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x688>
    ae58:	ldr	r3, [fp, #-136]	; 0xffffff78
    ae5c:	ldr	r3, [r3, #8]
    ae60:	and	r3, r3, #2
    ae64:	cmp	r3, #0
    ae68:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ae6c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ae70:	ldr	r0, [r3]
    ae74:	mov	r3, #2
    ae78:	mov	r2, #2
    ae7c:	mov	r1, #2
    ae80:	bl	0 <flatcc_builder_table_add>
    ae84:	str	r0, [fp, #-24]	; 0xffffffe8
    ae88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ae8c:	cmp	r3, #0
    ae90:	beq	e088 <MyGame_Example_Monster_parse_json_table+0x38a4>
    ae94:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
    ae98:	mov	r1, r3
    ae9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aea0:	bl	2c8 <flatbuffers_int16_write_to_pe>
    aea4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    aea8:	ldr	r2, [fp, #-144]	; 0xffffff70
    aeac:	ldr	r1, [fp, #-140]	; 0xffffff74
    aeb0:	ldr	r0, [fp, #-136]	; 0xffffff78
    aeb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aeb8:	str	r0, [fp, #-140]	; 0xffffff74
    aebc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    aec0:	ldr	r2, [fp, #-144]	; 0xffffff70
    aec4:	ldr	r1, [fp, #-140]	; 0xffffff74
    aec8:	ldr	r0, [fp, #-136]	; 0xffffff78
    aecc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aed0:	str	r0, [fp, #-140]	; 0xffffff74
    aed4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    aed8:	ldrd	r2, [fp, #-12]
    aedc:	add	r1, pc, #548	; 0x224
    aee0:	ldrd	r0, [r1]
    aee4:	cmp	r3, r1
    aee8:	cmpeq	r2, r0
    aeec:	bne	b120 <MyGame_Example_Monster_parse_json_table+0x93c>
    aef0:	ldr	r3, [fp, #-140]	; 0xffffff74
    aef4:	add	r3, r3, #8
    aef8:	str	r3, [fp, #-140]	; 0xffffff74
    aefc:	ldr	r1, [fp, #-144]	; 0xffffff70
    af00:	ldr	r0, [fp, #-140]	; 0xffffff74
    af04:	bl	fa8 <flatcc_json_parser_symbol_part>
    af08:	strd	r0, [fp, #-12]
    af0c:	ldrd	r2, [fp, #-12]
    af10:	mov	r0, #0
    af14:	mov	r1, #-16777216	; 0xff000000
    af18:	and	r2, r2, r0
    af1c:	and	r3, r3, r1
    af20:	cmp	r3, #2030043136	; 0x79000000
    af24:	cmpeq	r2, #0
    af28:	bne	b0e4 <MyGame_Example_Monster_parse_json_table+0x900>
    af2c:	ldr	r3, [fp, #-140]	; 0xffffff74
    af30:	str	r3, [fp, #-16]
    af34:	mov	r3, #1
    af38:	ldr	r2, [fp, #-144]	; 0xffffff70
    af3c:	ldr	r1, [fp, #-16]
    af40:	ldr	r0, [fp, #-136]	; 0xffffff78
    af44:	bl	1574 <flatcc_json_parser_match_symbol>
    af48:	str	r0, [fp, #-140]	; 0xffffff74
    af4c:	ldr	r2, [fp, #-16]
    af50:	ldr	r3, [fp, #-140]	; 0xffffff74
    af54:	cmp	r2, r3
    af58:	beq	b0cc <MyGame_Example_Monster_parse_json_table+0x8e8>
    af5c:	ldr	r3, [fp, #-136]	; 0xffffff78
    af60:	ldr	r0, [r3]
    af64:	mvn	r3, #0
    af68:	mov	r2, #1
    af6c:	mov	r1, #1
    af70:	bl	0 <flatcc_builder_start_vector>
    af74:	mov	r3, r0
    af78:	cmp	r3, #0
    af7c:	bne	e090 <MyGame_Example_Monster_parse_json_table+0x38ac>
    af80:	sub	r3, fp, #28
    af84:	ldr	r2, [fp, #-144]	; 0xffffff70
    af88:	ldr	r1, [fp, #-140]	; 0xffffff74
    af8c:	ldr	r0, [fp, #-136]	; 0xffffff78
    af90:	bl	1324 <flatcc_json_parser_array_start>
    af94:	str	r0, [fp, #-140]	; 0xffffff74
    af98:	b	b068 <MyGame_Example_Monster_parse_json_table+0x884>
    af9c:	mov	r3, #0
    afa0:	strb	r3, [fp, #-41]	; 0xffffffd7
    afa4:	ldr	r3, [fp, #-136]	; 0xffffff78
    afa8:	ldr	r3, [r3]
    afac:	mov	r1, #1
    afb0:	mov	r0, r3
    afb4:	bl	0 <flatcc_builder_extend_vector>
    afb8:	str	r0, [fp, #-24]	; 0xffffffe8
    afbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    afc0:	cmp	r3, #0
    afc4:	beq	e098 <MyGame_Example_Monster_parse_json_table+0x38b4>
    afc8:	ldr	r3, [fp, #-140]	; 0xffffff74
    afcc:	str	r3, [fp, #-16]
    afd0:	sub	r3, fp, #41	; 0x29
    afd4:	ldr	r2, [fp, #-144]	; 0xffffff70
    afd8:	ldr	r1, [fp, #-16]
    afdc:	ldr	r0, [fp, #-136]	; 0xffffff78
    afe0:	bl	2008 <flatcc_json_parser_uint8>
    afe4:	str	r0, [fp, #-140]	; 0xffffff74
    afe8:	ldr	r2, [fp, #-16]
    afec:	ldr	r3, [fp, #-140]	; 0xffffff74
    aff0:	cmp	r2, r3
    aff4:	bne	b040 <MyGame_Example_Monster_parse_json_table+0x85c>
    aff8:	ldr	r3, [fp, #-140]	; 0xffffff74
    affc:	str	r3, [fp, #-16]
    b000:	sub	r3, fp, #41	; 0x29
    b004:	str	r3, [sp]
    b008:	ldr	r3, [pc, #268]	; b11c <MyGame_Example_Monster_parse_json_table+0x938>
    b00c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b010:	ldr	r1, [fp, #-16]
    b014:	ldr	r0, [fp, #-136]	; 0xffffff78
    b018:	bl	2a94 <flatcc_json_parser_symbolic_uint8>
    b01c:	str	r0, [fp, #-140]	; 0xffffff74
    b020:	ldr	r2, [fp, #-140]	; 0xffffff74
    b024:	ldr	r3, [fp, #-16]
    b028:	cmp	r2, r3
    b02c:	beq	e098 <MyGame_Example_Monster_parse_json_table+0x38b4>
    b030:	ldr	r2, [fp, #-140]	; 0xffffff74
    b034:	ldr	r3, [fp, #-144]	; 0xffffff70
    b038:	cmp	r2, r3
    b03c:	beq	e098 <MyGame_Example_Monster_parse_json_table+0x38b4>
    b040:	ldrb	r3, [fp, #-41]	; 0xffffffd7
    b044:	mov	r1, r3
    b048:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b04c:	bl	28 <flatbuffers_uint8_write_to_pe>
    b050:	sub	r3, fp, #28
    b054:	ldr	r2, [fp, #-144]	; 0xffffff70
    b058:	ldr	r1, [fp, #-140]	; 0xffffff74
    b05c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b060:	bl	140c <flatcc_json_parser_array_end>
    b064:	str	r0, [fp, #-140]	; 0xffffff74
    b068:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b06c:	cmp	r3, #0
    b070:	bne	af9c <MyGame_Example_Monster_parse_json_table+0x7b8>
    b074:	ldr	r3, [fp, #-136]	; 0xffffff78
    b078:	ldr	r3, [r3]
    b07c:	mov	r0, r3
    b080:	bl	0 <flatcc_builder_end_vector>
    b084:	mov	r3, r0
    b088:	str	r3, [fp, #-32]	; 0xffffffe0
    b08c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b090:	cmp	r3, #0
    b094:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b098:	ldr	r3, [fp, #-136]	; 0xffffff78
    b09c:	ldr	r3, [r3]
    b0a0:	mov	r1, #5
    b0a4:	mov	r0, r3
    b0a8:	bl	0 <flatcc_builder_table_add_offset>
    b0ac:	str	r0, [fp, #-20]	; 0xffffffec
    b0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    b0b4:	cmp	r3, #0
    b0b8:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b0bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    b0c4:	str	r2, [r3]
    b0c8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b0cc:	ldr	r2, [fp, #-144]	; 0xffffff70
    b0d0:	ldr	r1, [fp, #-140]	; 0xffffff74
    b0d4:	ldr	r0, [fp, #-136]	; 0xffffff78
    b0d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b0dc:	str	r0, [fp, #-140]	; 0xffffff74
    b0e0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b0e4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b0e8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b0ec:	ldr	r0, [fp, #-136]	; 0xffffff78
    b0f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b0f4:	str	r0, [fp, #-140]	; 0xffffff74
    b0f8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b0fc:	nop			; (mov r0, r0)
    b100:	.word	0x6e746f71
    b104:	.word	0x696e7665
    b108:	.word	0x6e746f72
    b10c:	.word	0x696e7665
    b110:	.word	0xffff0000
    b114:	.word	0x68700000
    b118:	.word	0x000001b8
    b11c:	.word	0x000001c4
    b120:	ldrd	r2, [fp, #-12]
    b124:	mov	r0, #0
    b128:	mvn	r1, #0
    b12c:	and	r2, r2, r0
    b130:	and	r3, r3, r1
    b134:	add	r1, pc, #956	; 0x3bc
    b138:	ldrd	r0, [r1]
    b13c:	cmp	r3, r1
    b140:	cmpeq	r2, r0
    b144:	bne	b26c <MyGame_Example_Monster_parse_json_table+0xa88>
    b148:	ldr	r3, [fp, #-140]	; 0xffffff74
    b14c:	str	r3, [fp, #-16]
    b150:	mov	r3, #4
    b154:	ldr	r2, [fp, #-144]	; 0xffffff70
    b158:	ldr	r1, [fp, #-16]
    b15c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b160:	bl	1574 <flatcc_json_parser_match_symbol>
    b164:	str	r0, [fp, #-140]	; 0xffffff74
    b168:	ldr	r2, [fp, #-16]
    b16c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b170:	cmp	r2, r3
    b174:	beq	b254 <MyGame_Example_Monster_parse_json_table+0xa70>
    b178:	mov	r3, #0
    b17c:	strh	r3, [fp, #-44]	; 0xffffffd4
    b180:	ldr	r3, [fp, #-140]	; 0xffffff74
    b184:	str	r3, [fp, #-16]
    b188:	sub	r3, fp, #44	; 0x2c
    b18c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b190:	ldr	r1, [fp, #-16]
    b194:	ldr	r0, [fp, #-136]	; 0xffffff78
    b198:	bl	227c <flatcc_json_parser_int16>
    b19c:	str	r0, [fp, #-140]	; 0xffffff74
    b1a0:	ldr	r2, [fp, #-16]
    b1a4:	ldr	r3, [fp, #-140]	; 0xffffff74
    b1a8:	cmp	r2, r3
    b1ac:	bne	b1f8 <MyGame_Example_Monster_parse_json_table+0xa14>
    b1b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    b1b4:	str	r3, [fp, #-16]
    b1b8:	sub	r3, fp, #44	; 0x2c
    b1bc:	str	r3, [sp]
    b1c0:	ldr	r3, [pc, #872]	; b530 <MyGame_Example_Monster_parse_json_table+0xd4c>
    b1c4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b1c8:	ldr	r1, [fp, #-16]
    b1cc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b1d0:	bl	3008 <flatcc_json_parser_symbolic_int16>
    b1d4:	str	r0, [fp, #-140]	; 0xffffff74
    b1d8:	ldr	r2, [fp, #-140]	; 0xffffff74
    b1dc:	ldr	r3, [fp, #-16]
    b1e0:	cmp	r2, r3
    b1e4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b1e8:	ldr	r2, [fp, #-140]	; 0xffffff74
    b1ec:	ldr	r3, [fp, #-144]	; 0xffffff70
    b1f0:	cmp	r2, r3
    b1f4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b1f8:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
    b1fc:	cmp	r3, #150	; 0x96
    b200:	bne	b218 <MyGame_Example_Monster_parse_json_table+0xa34>
    b204:	ldr	r3, [fp, #-136]	; 0xffffff78
    b208:	ldr	r3, [r3, #8]
    b20c:	and	r3, r3, #2
    b210:	cmp	r3, #0
    b214:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b218:	ldr	r3, [fp, #-136]	; 0xffffff78
    b21c:	ldr	r0, [r3]
    b220:	mov	r3, #2
    b224:	mov	r2, #2
    b228:	mov	r1, #1
    b22c:	bl	0 <flatcc_builder_table_add>
    b230:	str	r0, [fp, #-24]	; 0xffffffe8
    b234:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b238:	cmp	r3, #0
    b23c:	beq	e0a0 <MyGame_Example_Monster_parse_json_table+0x38bc>
    b240:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
    b244:	mov	r1, r3
    b248:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b24c:	bl	2c8 <flatbuffers_int16_write_to_pe>
    b250:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b254:	ldr	r2, [fp, #-144]	; 0xffffff70
    b258:	ldr	r1, [fp, #-140]	; 0xffffff74
    b25c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b260:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b264:	str	r0, [fp, #-140]	; 0xffffff74
    b268:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b26c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b270:	ldr	r1, [fp, #-140]	; 0xffffff74
    b274:	ldr	r0, [fp, #-136]	; 0xffffff78
    b278:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b27c:	str	r0, [fp, #-140]	; 0xffffff74
    b280:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b284:	ldrd	r2, [fp, #-12]
    b288:	add	r1, pc, #624	; 0x270
    b28c:	ldrd	r0, [r1]
    b290:	cmp	r3, r1
    b294:	cmpeq	r2, r0
    b298:	bhi	b600 <MyGame_Example_Monster_parse_json_table+0xe1c>
    b29c:	ldrd	r2, [fp, #-12]
    b2a0:	add	r1, pc, #608	; 0x260
    b2a4:	ldrd	r0, [r1]
    b2a8:	cmp	r3, r1
    b2ac:	cmpeq	r2, r0
    b2b0:	bhi	b394 <MyGame_Example_Monster_parse_json_table+0xbb0>
    b2b4:	ldrd	r2, [fp, #-12]
    b2b8:	mov	r0, #0
    b2bc:	mvn	r1, #0
    b2c0:	and	r2, r2, r0
    b2c4:	and	r3, r3, r1
    b2c8:	add	r1, pc, #576	; 0x240
    b2cc:	ldrd	r0, [r1]
    b2d0:	cmp	r3, r1
    b2d4:	cmpeq	r2, r0
    b2d8:	bne	b37c <MyGame_Example_Monster_parse_json_table+0xb98>
    b2dc:	ldr	r3, [fp, #-140]	; 0xffffff74
    b2e0:	str	r3, [fp, #-16]
    b2e4:	mov	r3, #4
    b2e8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b2ec:	ldr	r1, [fp, #-16]
    b2f0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b2f4:	bl	1574 <flatcc_json_parser_match_symbol>
    b2f8:	str	r0, [fp, #-140]	; 0xffffff74
    b2fc:	ldr	r2, [fp, #-16]
    b300:	ldr	r3, [fp, #-140]	; 0xffffff74
    b304:	cmp	r2, r3
    b308:	beq	b364 <MyGame_Example_Monster_parse_json_table+0xb80>
    b30c:	sub	r3, fp, #32
    b310:	ldr	r2, [fp, #-144]	; 0xffffff70
    b314:	ldr	r1, [fp, #-140]	; 0xffffff74
    b318:	ldr	r0, [fp, #-136]	; 0xffffff78
    b31c:	bl	0 <flatcc_json_parser_build_string>
    b320:	str	r0, [fp, #-140]	; 0xffffff74
    b324:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b328:	cmp	r3, #0
    b32c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b330:	ldr	r3, [fp, #-136]	; 0xffffff78
    b334:	ldr	r3, [r3]
    b338:	mov	r1, #3
    b33c:	mov	r0, r3
    b340:	bl	0 <flatcc_builder_table_add_offset>
    b344:	str	r0, [fp, #-20]	; 0xffffffec
    b348:	ldr	r3, [fp, #-20]	; 0xffffffec
    b34c:	cmp	r3, #0
    b350:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b354:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b358:	ldr	r3, [fp, #-20]	; 0xffffffec
    b35c:	str	r2, [r3]
    b360:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b364:	ldr	r2, [fp, #-144]	; 0xffffff70
    b368:	ldr	r1, [fp, #-140]	; 0xffffff74
    b36c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b370:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b374:	str	r0, [fp, #-140]	; 0xffffff74
    b378:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b37c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b380:	ldr	r1, [fp, #-140]	; 0xffffff74
    b384:	ldr	r0, [fp, #-136]	; 0xffffff78
    b388:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b38c:	str	r0, [fp, #-140]	; 0xffffff74
    b390:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b394:	ldrd	r2, [fp, #-12]
    b398:	add	r1, pc, #376	; 0x178
    b39c:	ldrd	r0, [r1]
    b3a0:	cmp	r3, r1
    b3a4:	cmpeq	r2, r0
    b3a8:	bne	b534 <MyGame_Example_Monster_parse_json_table+0xd50>
    b3ac:	ldr	r3, [fp, #-140]	; 0xffffff74
    b3b0:	add	r3, r3, #8
    b3b4:	str	r3, [fp, #-140]	; 0xffffff74
    b3b8:	ldr	r1, [fp, #-144]	; 0xffffff70
    b3bc:	ldr	r0, [fp, #-140]	; 0xffffff74
    b3c0:	bl	fa8 <flatcc_json_parser_symbol_part>
    b3c4:	strd	r0, [fp, #-12]
    b3c8:	ldrd	r2, [fp, #-12]
    b3cc:	add	r1, pc, #332	; 0x14c
    b3d0:	ldrd	r0, [r1]
    b3d4:	cmp	r3, r1
    b3d8:	cmpeq	r2, r0
    b3dc:	bne	b4dc <MyGame_Example_Monster_parse_json_table+0xcf8>
    b3e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    b3e4:	add	r3, r3, #8
    b3e8:	str	r3, [fp, #-140]	; 0xffffff74
    b3ec:	ldr	r1, [fp, #-144]	; 0xffffff70
    b3f0:	ldr	r0, [fp, #-140]	; 0xffffff74
    b3f4:	bl	fa8 <flatcc_json_parser_symbol_part>
    b3f8:	strd	r0, [fp, #-12]
    b3fc:	ldrd	r2, [fp, #-12]
    b400:	mov	r0, #-16777216	; 0xff000000
    b404:	mvn	r1, #0
    b408:	and	r2, r2, r0
    b40c:	and	r3, r3, r1
    b410:	add	r1, pc, #272	; 0x110
    b414:	ldrd	r0, [r1]
    b418:	cmp	r3, r1
    b41c:	cmpeq	r2, r0
    b420:	bne	b4c4 <MyGame_Example_Monster_parse_json_table+0xce0>
    b424:	ldr	r3, [fp, #-140]	; 0xffffff74
    b428:	str	r3, [fp, #-16]
    b42c:	mov	r3, #5
    b430:	ldr	r2, [fp, #-144]	; 0xffffff70
    b434:	ldr	r1, [fp, #-16]
    b438:	ldr	r0, [fp, #-136]	; 0xffffff78
    b43c:	bl	1574 <flatcc_json_parser_match_symbol>
    b440:	str	r0, [fp, #-140]	; 0xffffff74
    b444:	ldr	r2, [fp, #-16]
    b448:	ldr	r3, [fp, #-140]	; 0xffffff74
    b44c:	cmp	r2, r3
    b450:	beq	b4ac <MyGame_Example_Monster_parse_json_table+0xcc8>
    b454:	sub	r3, fp, #32
    b458:	ldr	r2, [fp, #-144]	; 0xffffff70
    b45c:	ldr	r1, [fp, #-140]	; 0xffffff74
    b460:	ldr	r0, [fp, #-136]	; 0xffffff78
    b464:	bl	46c4 <MyGame_InParentNamespace_parse_json_table>
    b468:	str	r0, [fp, #-140]	; 0xffffff74
    b46c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b470:	cmp	r3, #0
    b474:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b478:	ldr	r3, [fp, #-136]	; 0xffffff78
    b47c:	ldr	r3, [r3]
    b480:	mov	r1, #34	; 0x22
    b484:	mov	r0, r3
    b488:	bl	0 <flatcc_builder_table_add_offset>
    b48c:	str	r0, [fp, #-20]	; 0xffffffec
    b490:	ldr	r3, [fp, #-20]	; 0xffffffec
    b494:	cmp	r3, #0
    b498:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b49c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b4a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    b4a4:	str	r2, [r3]
    b4a8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b4ac:	ldr	r2, [fp, #-144]	; 0xffffff70
    b4b0:	ldr	r1, [fp, #-140]	; 0xffffff74
    b4b4:	ldr	r0, [fp, #-136]	; 0xffffff78
    b4b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b4bc:	str	r0, [fp, #-140]	; 0xffffff74
    b4c0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b4c4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b4c8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b4cc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b4d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b4d4:	str	r0, [fp, #-140]	; 0xffffff74
    b4d8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b4dc:	ldr	r2, [fp, #-144]	; 0xffffff70
    b4e0:	ldr	r1, [fp, #-140]	; 0xffffff74
    b4e4:	ldr	r0, [fp, #-136]	; 0xffffff78
    b4e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b4ec:	str	r0, [fp, #-140]	; 0xffffff74
    b4f0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b4f4:	nop			; (mov r0, r0)
    b4f8:	.word	0x00000000
    b4fc:	.word	0x6d616e61
    b500:	.word	0xffffffff
    b504:	.word	0x74657373
    b508:	.word	0x6e745f6d
    b50c:	.word	0x70617265
    b510:	.word	0x00000000
    b514:	.word	0x6e616d65
    b518:	.word	0x6e745f6e
    b51c:	.word	0x70617265
    b520:	.word	0x70616365
    b524:	.word	0x616d6573
    b528:	.word	0x74000000
    b52c:	.word	0x5f746573
    b530:	.word	0x000001d0
    b534:	ldrd	r2, [fp, #-12]
    b538:	mov	r0, #0
    b53c:	mvn	r1, #255	; 0xff
    b540:	and	r2, r2, r0
    b544:	and	r3, r3, r1
    b548:	add	r1, pc, #824	; 0x338
    b54c:	ldrd	r0, [r1]
    b550:	cmp	r3, r1
    b554:	cmpeq	r2, r0
    b558:	bne	b5e8 <MyGame_Example_Monster_parse_json_table+0xe04>
    b55c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b560:	str	r3, [fp, #-16]
    b564:	mov	r3, #3
    b568:	ldr	r2, [fp, #-144]	; 0xffffff70
    b56c:	ldr	r1, [fp, #-16]
    b570:	ldr	r0, [fp, #-136]	; 0xffffff78
    b574:	bl	1574 <flatcc_json_parser_match_symbol>
    b578:	str	r0, [fp, #-140]	; 0xffffff74
    b57c:	ldr	r2, [fp, #-16]
    b580:	ldr	r3, [fp, #-140]	; 0xffffff74
    b584:	cmp	r2, r3
    b588:	beq	b5d0 <MyGame_Example_Monster_parse_json_table+0xdec>
    b58c:	ldr	r3, [fp, #-136]	; 0xffffff78
    b590:	ldr	r0, [r3]
    b594:	mov	r3, #16
    b598:	mov	r2, #32
    b59c:	mov	r1, #0
    b5a0:	bl	0 <flatcc_builder_table_add>
    b5a4:	str	r0, [fp, #-24]	; 0xffffffe8
    b5a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b5ac:	cmp	r3, #0
    b5b0:	beq	e0a8 <MyGame_Example_Monster_parse_json_table+0x38c4>
    b5b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b5b8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b5bc:	ldr	r1, [fp, #-140]	; 0xffffff74
    b5c0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b5c4:	bl	749c <MyGame_Example_Vec3_parse_json_struct_inline>
    b5c8:	str	r0, [fp, #-140]	; 0xffffff74
    b5cc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b5d0:	ldr	r2, [fp, #-144]	; 0xffffff70
    b5d4:	ldr	r1, [fp, #-140]	; 0xffffff74
    b5d8:	ldr	r0, [fp, #-136]	; 0xffffff78
    b5dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b5e0:	str	r0, [fp, #-140]	; 0xffffff74
    b5e4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b5e8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b5ec:	ldr	r1, [fp, #-140]	; 0xffffff74
    b5f0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b5f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b5f8:	str	r0, [fp, #-140]	; 0xffffff74
    b5fc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b600:	ldrd	r2, [fp, #-12]
    b604:	mov	r0, #-16777216	; 0xff000000
    b608:	mvn	r1, #0
    b60c:	and	r2, r2, r0
    b610:	and	r3, r3, r1
    b614:	add	r1, pc, #628	; 0x274
    b618:	ldrd	r0, [r1]
    b61c:	cmp	r3, r1
    b620:	cmpeq	r2, r0
    b624:	bne	b750 <MyGame_Example_Monster_parse_json_table+0xf6c>
    b628:	ldr	r3, [fp, #-140]	; 0xffffff74
    b62c:	str	r3, [fp, #-16]
    b630:	mov	r3, #5
    b634:	ldr	r2, [fp, #-144]	; 0xffffff70
    b638:	ldr	r1, [fp, #-16]
    b63c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b640:	bl	1574 <flatcc_json_parser_match_symbol>
    b644:	str	r0, [fp, #-140]	; 0xffffff74
    b648:	ldr	r2, [fp, #-16]
    b64c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b650:	cmp	r2, r3
    b654:	beq	b7dc <MyGame_Example_Monster_parse_json_table+0xff8>
    b658:	ldr	r3, [fp, #-136]	; 0xffffff78
    b65c:	ldr	r0, [r3]
    b660:	mvn	r3, #-1073741824	; 0xc0000000
    b664:	mov	r2, #2
    b668:	mov	r1, #4
    b66c:	bl	0 <flatcc_builder_start_vector>
    b670:	mov	r3, r0
    b674:	cmp	r3, #0
    b678:	bne	e0b0 <MyGame_Example_Monster_parse_json_table+0x38cc>
    b67c:	sub	r3, fp, #28
    b680:	ldr	r2, [fp, #-144]	; 0xffffff70
    b684:	ldr	r1, [fp, #-140]	; 0xffffff74
    b688:	ldr	r0, [fp, #-136]	; 0xffffff78
    b68c:	bl	1324 <flatcc_json_parser_array_start>
    b690:	str	r0, [fp, #-140]	; 0xffffff74
    b694:	b	b6ec <MyGame_Example_Monster_parse_json_table+0xf08>
    b698:	ldr	r3, [fp, #-136]	; 0xffffff78
    b69c:	ldr	r3, [r3]
    b6a0:	mov	r1, #1
    b6a4:	mov	r0, r3
    b6a8:	bl	0 <flatcc_builder_extend_vector>
    b6ac:	str	r0, [fp, #-24]	; 0xffffffe8
    b6b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b6b4:	cmp	r3, #0
    b6b8:	beq	e0b8 <MyGame_Example_Monster_parse_json_table+0x38d4>
    b6bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b6c0:	ldr	r2, [fp, #-144]	; 0xffffff70
    b6c4:	ldr	r1, [fp, #-140]	; 0xffffff74
    b6c8:	ldr	r0, [fp, #-136]	; 0xffffff78
    b6cc:	bl	5b70 <MyGame_Example_Test_parse_json_struct_inline>
    b6d0:	str	r0, [fp, #-140]	; 0xffffff74
    b6d4:	sub	r3, fp, #28
    b6d8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b6dc:	ldr	r1, [fp, #-140]	; 0xffffff74
    b6e0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b6e4:	bl	140c <flatcc_json_parser_array_end>
    b6e8:	str	r0, [fp, #-140]	; 0xffffff74
    b6ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b6f0:	cmp	r3, #0
    b6f4:	bne	b698 <MyGame_Example_Monster_parse_json_table+0xeb4>
    b6f8:	ldr	r3, [fp, #-136]	; 0xffffff78
    b6fc:	ldr	r3, [r3]
    b700:	mov	r0, r3
    b704:	bl	0 <flatcc_builder_end_vector>
    b708:	mov	r3, r0
    b70c:	str	r3, [fp, #-32]	; 0xffffffe0
    b710:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b714:	cmp	r3, #0
    b718:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b71c:	ldr	r3, [fp, #-136]	; 0xffffff78
    b720:	ldr	r3, [r3]
    b724:	mov	r1, #9
    b728:	mov	r0, r3
    b72c:	bl	0 <flatcc_builder_table_add_offset>
    b730:	str	r0, [fp, #-20]	; 0xffffffec
    b734:	ldr	r3, [fp, #-20]	; 0xffffffec
    b738:	cmp	r3, #0
    b73c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b740:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b744:	ldr	r3, [fp, #-20]	; 0xffffffec
    b748:	str	r2, [r3]
    b74c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b750:	ldrd	r2, [fp, #-12]
    b754:	mov	r0, #0
    b758:	mvn	r1, #0
    b75c:	and	r2, r2, r0
    b760:	and	r3, r3, r1
    b764:	add	r1, pc, #300	; 0x12c
    b768:	ldrd	r0, [r1]
    b76c:	cmp	r3, r1
    b770:	cmpeq	r2, r0
    b774:	bne	b7e4 <MyGame_Example_Monster_parse_json_table+0x1000>
    b778:	ldr	r3, [fp, #-140]	; 0xffffff74
    b77c:	str	r3, [fp, #-16]
    b780:	mov	r3, #4
    b784:	ldr	r2, [fp, #-144]	; 0xffffff70
    b788:	ldr	r1, [fp, #-16]
    b78c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b790:	bl	1574 <flatcc_json_parser_match_symbol>
    b794:	str	r0, [fp, #-140]	; 0xffffff74
    b798:	ldr	r2, [fp, #-16]
    b79c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b7a0:	cmp	r2, r3
    b7a4:	beq	b7ec <MyGame_Example_Monster_parse_json_table+0x1008>
    b7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b7ac:	ldr	r2, [pc, #244]	; b8a8 <MyGame_Example_Monster_parse_json_table+0x10c4>
    b7b0:	str	r2, [sp, #8]
    b7b4:	str	r3, [sp, #4]
    b7b8:	mov	r3, #8
    b7bc:	str	r3, [sp]
    b7c0:	mov	r3, #0
    b7c4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b7c8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b7cc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b7d0:	bl	0 <flatcc_json_parser_union>
    b7d4:	str	r0, [fp, #-140]	; 0xffffff74
    b7d8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b7dc:	nop			; (mov r0, r0)
    b7e0:	b	b7f0 <MyGame_Example_Monster_parse_json_table+0x100c>
    b7e4:	nop			; (mov r0, r0)
    b7e8:	b	b7f0 <MyGame_Example_Monster_parse_json_table+0x100c>
    b7ec:	nop			; (mov r0, r0)
    b7f0:	ldrd	r2, [fp, #-12]
    b7f4:	mov	r0, #-16777216	; 0xff000000
    b7f8:	mvn	r1, #0
    b7fc:	and	r2, r2, r0
    b800:	and	r3, r3, r1
    b804:	add	r1, pc, #148	; 0x94
    b808:	ldrd	r0, [r1]
    b80c:	cmp	r3, r1
    b810:	cmpeq	r2, r0
    b814:	bne	b964 <MyGame_Example_Monster_parse_json_table+0x1180>
    b818:	ldr	r3, [fp, #-140]	; 0xffffff74
    b81c:	str	r3, [fp, #-16]
    b820:	mov	r3, #5
    b824:	ldr	r2, [fp, #-144]	; 0xffffff70
    b828:	ldr	r1, [fp, #-16]
    b82c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b830:	bl	1574 <flatcc_json_parser_match_symbol>
    b834:	str	r0, [fp, #-140]	; 0xffffff74
    b838:	ldr	r2, [fp, #-16]
    b83c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b840:	cmp	r2, r3
    b844:	beq	b96c <MyGame_Example_Monster_parse_json_table+0x1188>
    b848:	ldr	r3, [fp, #-136]	; 0xffffff78
    b84c:	ldr	r0, [r3]
    b850:	mvn	r3, #-1073741824	; 0xc0000000
    b854:	mov	r2, #2
    b858:	mov	r1, #4
    b85c:	bl	0 <flatcc_builder_start_vector>
    b860:	mov	r3, r0
    b864:	cmp	r3, #0
    b868:	bne	e0c0 <MyGame_Example_Monster_parse_json_table+0x38dc>
    b86c:	sub	r3, fp, #28
    b870:	ldr	r2, [fp, #-144]	; 0xffffff70
    b874:	ldr	r1, [fp, #-140]	; 0xffffff74
    b878:	ldr	r0, [fp, #-136]	; 0xffffff78
    b87c:	bl	1324 <flatcc_json_parser_array_start>
    b880:	str	r0, [fp, #-140]	; 0xffffff74
    b884:	b	b900 <MyGame_Example_Monster_parse_json_table+0x111c>
    b888:	.word	0x00000000
    b88c:	.word	0x706f7300
    b890:	.word	0x34000000
    b894:	.word	0x74657374
    b898:	.word	0x00000000
    b89c:	.word	0x74657374
    b8a0:	.word	0x35000000
    b8a4:	.word	0x74657374
    b8a8:	.word	0x00000000
    b8ac:	ldr	r3, [fp, #-136]	; 0xffffff78
    b8b0:	ldr	r3, [r3]
    b8b4:	mov	r1, #1
    b8b8:	mov	r0, r3
    b8bc:	bl	0 <flatcc_builder_extend_vector>
    b8c0:	str	r0, [fp, #-24]	; 0xffffffe8
    b8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b8c8:	cmp	r3, #0
    b8cc:	beq	e0c8 <MyGame_Example_Monster_parse_json_table+0x38e4>
    b8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b8d4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b8d8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b8dc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b8e0:	bl	5b70 <MyGame_Example_Test_parse_json_struct_inline>
    b8e4:	str	r0, [fp, #-140]	; 0xffffff74
    b8e8:	sub	r3, fp, #28
    b8ec:	ldr	r2, [fp, #-144]	; 0xffffff70
    b8f0:	ldr	r1, [fp, #-140]	; 0xffffff74
    b8f4:	ldr	r0, [fp, #-136]	; 0xffffff78
    b8f8:	bl	140c <flatcc_json_parser_array_end>
    b8fc:	str	r0, [fp, #-140]	; 0xffffff74
    b900:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b904:	cmp	r3, #0
    b908:	bne	b8ac <MyGame_Example_Monster_parse_json_table+0x10c8>
    b90c:	ldr	r3, [fp, #-136]	; 0xffffff78
    b910:	ldr	r3, [r3]
    b914:	mov	r0, r3
    b918:	bl	0 <flatcc_builder_end_vector>
    b91c:	mov	r3, r0
    b920:	str	r3, [fp, #-32]	; 0xffffffe0
    b924:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b928:	cmp	r3, #0
    b92c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b930:	ldr	r3, [fp, #-136]	; 0xffffff78
    b934:	ldr	r3, [r3]
    b938:	mov	r1, #31
    b93c:	mov	r0, r3
    b940:	bl	0 <flatcc_builder_table_add_offset>
    b944:	str	r0, [fp, #-20]	; 0xffffffec
    b948:	ldr	r3, [fp, #-20]	; 0xffffffec
    b94c:	cmp	r3, #0
    b950:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    b954:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b958:	ldr	r3, [fp, #-20]	; 0xffffffec
    b95c:	str	r2, [r3]
    b960:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    b964:	nop			; (mov r0, r0)
    b968:	b	b970 <MyGame_Example_Monster_parse_json_table+0x118c>
    b96c:	nop			; (mov r0, r0)
    b970:	ldrd	r2, [fp, #-12]
    b974:	add	r1, pc, #804	; 0x324
    b978:	ldrd	r0, [r1]
    b97c:	cmp	r3, r1
    b980:	cmpeq	r2, r0
    b984:	bne	ba60 <MyGame_Example_Monster_parse_json_table+0x127c>
    b988:	ldr	r3, [fp, #-140]	; 0xffffff74
    b98c:	add	r3, r3, #8
    b990:	str	r3, [fp, #-140]	; 0xffffff74
    b994:	ldr	r1, [fp, #-144]	; 0xffffff70
    b998:	ldr	r0, [fp, #-140]	; 0xffffff74
    b99c:	bl	fa8 <flatcc_json_parser_symbol_part>
    b9a0:	strd	r0, [fp, #-12]
    b9a4:	ldrd	r2, [fp, #-12]
    b9a8:	mov	r0, #0
    b9ac:	mov	r1, #-16777216	; 0xff000000
    b9b0:	and	r2, r2, r0
    b9b4:	and	r3, r3, r1
    b9b8:	cmp	r3, #1694498816	; 0x65000000
    b9bc:	cmpeq	r2, #0
    b9c0:	bne	ba48 <MyGame_Example_Monster_parse_json_table+0x1264>
    b9c4:	ldr	r3, [fp, #-140]	; 0xffffff74
    b9c8:	str	r3, [fp, #-16]
    b9cc:	mov	r3, #1
    b9d0:	ldr	r2, [fp, #-144]	; 0xffffff70
    b9d4:	ldr	r1, [fp, #-16]
    b9d8:	ldr	r0, [fp, #-136]	; 0xffffff78
    b9dc:	bl	1574 <flatcc_json_parser_match_symbol>
    b9e0:	str	r0, [fp, #-140]	; 0xffffff74
    b9e4:	ldr	r2, [fp, #-16]
    b9e8:	ldr	r3, [fp, #-140]	; 0xffffff74
    b9ec:	cmp	r2, r3
    b9f0:	beq	ba30 <MyGame_Example_Monster_parse_json_table+0x124c>
    b9f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b9f8:	ldr	r2, [pc, #712]	; bcc8 <MyGame_Example_Monster_parse_json_table+0x14e4>
    b9fc:	str	r2, [sp, #12]
    ba00:	ldr	r2, [pc, #708]	; bccc <MyGame_Example_Monster_parse_json_table+0x14e8>
    ba04:	str	r2, [sp, #8]
    ba08:	str	r3, [sp, #4]
    ba0c:	mov	r3, #8
    ba10:	str	r3, [sp]
    ba14:	mov	r3, #0
    ba18:	ldr	r2, [fp, #-144]	; 0xffffff70
    ba1c:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba20:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba24:	bl	0 <flatcc_json_parser_union_type>
    ba28:	str	r0, [fp, #-140]	; 0xffffff74
    ba2c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ba30:	ldr	r2, [fp, #-144]	; 0xffffff70
    ba34:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba38:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ba40:	str	r0, [fp, #-140]	; 0xffffff74
    ba44:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ba48:	ldr	r2, [fp, #-144]	; 0xffffff70
    ba4c:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba50:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ba58:	str	r0, [fp, #-140]	; 0xffffff74
    ba5c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ba60:	ldr	r2, [fp, #-144]	; 0xffffff70
    ba64:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba68:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ba70:	str	r0, [fp, #-140]	; 0xffffff74
    ba74:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ba78:	ldrd	r2, [fp, #-12]
    ba7c:	add	r1, pc, #548	; 0x224
    ba80:	ldrd	r0, [r1]
    ba84:	cmp	r3, r1
    ba88:	cmpeq	r2, r0
    ba8c:	bhi	ca9c <MyGame_Example_Monster_parse_json_table+0x22b8>
    ba90:	ldrd	r2, [fp, #-12]
    ba94:	add	r1, pc, #532	; 0x214
    ba98:	ldrd	r0, [r1]
    ba9c:	cmp	r3, r1
    baa0:	cmpeq	r2, r0
    baa4:	bne	c3cc <MyGame_Example_Monster_parse_json_table+0x1be8>
    baa8:	ldr	r3, [fp, #-140]	; 0xffffff74
    baac:	add	r3, r3, #8
    bab0:	str	r3, [fp, #-140]	; 0xffffff74
    bab4:	ldr	r1, [fp, #-144]	; 0xffffff70
    bab8:	ldr	r0, [fp, #-140]	; 0xffffff74
    babc:	bl	fa8 <flatcc_json_parser_symbol_part>
    bac0:	strd	r0, [fp, #-12]
    bac4:	ldrd	r2, [fp, #-12]
    bac8:	add	r1, pc, #488	; 0x1e8
    bacc:	ldrd	r0, [r1]
    bad0:	cmp	r3, r1
    bad4:	cmpeq	r2, r0
    bad8:	bhi	bea4 <MyGame_Example_Monster_parse_json_table+0x16c0>
    badc:	ldrd	r2, [fp, #-12]
    bae0:	add	r1, pc, #472	; 0x1d8
    bae4:	ldrd	r0, [r1]
    bae8:	cmp	r3, r1
    baec:	cmpeq	r2, r0
    baf0:	bne	bc94 <MyGame_Example_Monster_parse_json_table+0x14b0>
    baf4:	ldr	r3, [fp, #-140]	; 0xffffff74
    baf8:	str	r3, [fp, #-16]
    bafc:	mov	r3, #8
    bb00:	ldr	r2, [fp, #-144]	; 0xffffff70
    bb04:	ldr	r1, [fp, #-16]
    bb08:	ldr	r0, [fp, #-136]	; 0xffffff78
    bb0c:	bl	1574 <flatcc_json_parser_match_symbol>
    bb10:	str	r0, [fp, #-140]	; 0xffffff74
    bb14:	ldr	r2, [fp, #-16]
    bb18:	ldr	r3, [fp, #-140]	; 0xffffff74
    bb1c:	cmp	r2, r3
    bb20:	beq	bcd4 <MyGame_Example_Monster_parse_json_table+0x14f0>
    bb24:	ldr	r3, [fp, #-136]	; 0xffffff78
    bb28:	ldr	r0, [r3]
    bb2c:	mvn	r3, #0
    bb30:	mov	r2, #1
    bb34:	mov	r1, #1
    bb38:	bl	0 <flatcc_builder_start_vector>
    bb3c:	mov	r3, r0
    bb40:	cmp	r3, #0
    bb44:	bne	e0d0 <MyGame_Example_Monster_parse_json_table+0x38ec>
    bb48:	sub	r3, fp, #28
    bb4c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bb50:	ldr	r1, [fp, #-140]	; 0xffffff74
    bb54:	ldr	r0, [fp, #-136]	; 0xffffff78
    bb58:	bl	1324 <flatcc_json_parser_array_start>
    bb5c:	str	r0, [fp, #-140]	; 0xffffff74
    bb60:	b	bc30 <MyGame_Example_Monster_parse_json_table+0x144c>
    bb64:	mov	r3, #0
    bb68:	strb	r3, [fp, #-45]	; 0xffffffd3
    bb6c:	ldr	r3, [fp, #-136]	; 0xffffff78
    bb70:	ldr	r3, [r3]
    bb74:	mov	r1, #1
    bb78:	mov	r0, r3
    bb7c:	bl	0 <flatcc_builder_extend_vector>
    bb80:	str	r0, [fp, #-24]	; 0xffffffe8
    bb84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bb88:	cmp	r3, #0
    bb8c:	beq	e0d8 <MyGame_Example_Monster_parse_json_table+0x38f4>
    bb90:	ldr	r3, [fp, #-140]	; 0xffffff74
    bb94:	str	r3, [fp, #-16]
    bb98:	sub	r3, fp, #45	; 0x2d
    bb9c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bba0:	ldr	r1, [fp, #-16]
    bba4:	ldr	r0, [fp, #-136]	; 0xffffff78
    bba8:	bl	241c <flatcc_json_parser_bool>
    bbac:	str	r0, [fp, #-140]	; 0xffffff74
    bbb0:	ldr	r2, [fp, #-16]
    bbb4:	ldr	r3, [fp, #-140]	; 0xffffff74
    bbb8:	cmp	r2, r3
    bbbc:	bne	bc08 <MyGame_Example_Monster_parse_json_table+0x1424>
    bbc0:	ldr	r3, [fp, #-140]	; 0xffffff74
    bbc4:	str	r3, [fp, #-16]
    bbc8:	sub	r3, fp, #45	; 0x2d
    bbcc:	str	r3, [sp]
    bbd0:	ldr	r3, [pc, #248]	; bcd0 <MyGame_Example_Monster_parse_json_table+0x14ec>
    bbd4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bbd8:	ldr	r1, [fp, #-16]
    bbdc:	ldr	r0, [fp, #-136]	; 0xffffff78
    bbe0:	bl	33c0 <flatcc_json_parser_symbolic_bool>
    bbe4:	str	r0, [fp, #-140]	; 0xffffff74
    bbe8:	ldr	r2, [fp, #-140]	; 0xffffff74
    bbec:	ldr	r3, [fp, #-16]
    bbf0:	cmp	r2, r3
    bbf4:	beq	e0d8 <MyGame_Example_Monster_parse_json_table+0x38f4>
    bbf8:	ldr	r2, [fp, #-140]	; 0xffffff74
    bbfc:	ldr	r3, [fp, #-144]	; 0xffffff70
    bc00:	cmp	r2, r3
    bc04:	beq	e0d8 <MyGame_Example_Monster_parse_json_table+0x38f4>
    bc08:	ldrb	r3, [fp, #-45]	; 0xffffffd3
    bc0c:	mov	r1, r3
    bc10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bc14:	bl	590 <flatbuffers_bool_write_to_pe>
    bc18:	sub	r3, fp, #28
    bc1c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bc20:	ldr	r1, [fp, #-140]	; 0xffffff74
    bc24:	ldr	r0, [fp, #-136]	; 0xffffff78
    bc28:	bl	140c <flatcc_json_parser_array_end>
    bc2c:	str	r0, [fp, #-140]	; 0xffffff74
    bc30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bc34:	cmp	r3, #0
    bc38:	bne	bb64 <MyGame_Example_Monster_parse_json_table+0x1380>
    bc3c:	ldr	r3, [fp, #-136]	; 0xffffff78
    bc40:	ldr	r3, [r3]
    bc44:	mov	r0, r3
    bc48:	bl	0 <flatcc_builder_end_vector>
    bc4c:	mov	r3, r0
    bc50:	str	r3, [fp, #-32]	; 0xffffffe0
    bc54:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bc58:	cmp	r3, #0
    bc5c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    bc60:	ldr	r3, [fp, #-136]	; 0xffffff78
    bc64:	ldr	r3, [r3]
    bc68:	mov	r1, #24
    bc6c:	mov	r0, r3
    bc70:	bl	0 <flatcc_builder_table_add_offset>
    bc74:	str	r0, [fp, #-20]	; 0xffffffec
    bc78:	ldr	r3, [fp, #-20]	; 0xffffffec
    bc7c:	cmp	r3, #0
    bc80:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    bc84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc88:	ldr	r3, [fp, #-20]	; 0xffffffec
    bc8c:	str	r2, [r3]
    bc90:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    bc94:	nop			; (mov r0, r0)
    bc98:	b	bcd8 <MyGame_Example_Monster_parse_json_table+0x14f4>
    bc9c:	nop			; (mov r0, r0)
    bca0:	.word	0x5f747970
    bca4:	.word	0x74657374
    bca8:	.word	0x6632ffff
    bcac:	.word	0x74657374
    bcb0:	.word	0x61727261
    bcb4:	.word	0x74657374
    bcb8:	.word	0x7472696d
    bcbc:	.word	0x796f6673
    bcc0:	.word	0x6f6f6c73
    bcc4:	.word	0x796f6662
    bcc8:	.word	0x00000000
    bccc:	.word	0x000001dc
    bcd0:	.word	0x000001ec
    bcd4:	nop			; (mov r0, r0)
    bcd8:	ldrd	r2, [fp, #-12]
    bcdc:	add	r1, pc, #876	; 0x36c
    bce0:	ldrd	r0, [r1]
    bce4:	cmp	r3, r1
    bce8:	cmpeq	r2, r0
    bcec:	bne	be8c <MyGame_Example_Monster_parse_json_table+0x16a8>
    bcf0:	ldr	r3, [fp, #-140]	; 0xffffff74
    bcf4:	add	r3, r3, #8
    bcf8:	str	r3, [fp, #-140]	; 0xffffff74
    bcfc:	ldr	r1, [fp, #-144]	; 0xffffff70
    bd00:	ldr	r0, [fp, #-140]	; 0xffffff74
    bd04:	bl	fa8 <flatcc_json_parser_symbol_part>
    bd08:	strd	r0, [fp, #-12]
    bd0c:	ldrd	r2, [fp, #-12]
    bd10:	mvn	r0, #255	; 0xff
    bd14:	mvn	r1, #0
    bd18:	and	r2, r2, r0
    bd1c:	and	r3, r3, r1
    bd20:	add	r1, pc, #816	; 0x330
    bd24:	ldrd	r0, [r1]
    bd28:	cmp	r3, r1
    bd2c:	cmpeq	r2, r0
    bd30:	bne	be74 <MyGame_Example_Monster_parse_json_table+0x1690>
    bd34:	ldr	r3, [fp, #-140]	; 0xffffff74
    bd38:	str	r3, [fp, #-16]
    bd3c:	mov	r3, #7
    bd40:	ldr	r2, [fp, #-144]	; 0xffffff70
    bd44:	ldr	r1, [fp, #-16]
    bd48:	ldr	r0, [fp, #-136]	; 0xffffff78
    bd4c:	bl	1574 <flatcc_json_parser_match_symbol>
    bd50:	str	r0, [fp, #-140]	; 0xffffff74
    bd54:	ldr	r2, [fp, #-16]
    bd58:	ldr	r3, [fp, #-140]	; 0xffffff74
    bd5c:	cmp	r2, r3
    bd60:	beq	be5c <MyGame_Example_Monster_parse_json_table+0x1678>
    bd64:	ldr	r3, [fp, #-136]	; 0xffffff78
    bd68:	ldr	r0, [r3]
    bd6c:	mvn	r3, #-536870912	; 0xe0000000
    bd70:	mov	r2, #4
    bd74:	mov	r1, #8
    bd78:	bl	0 <flatcc_builder_start_vector>
    bd7c:	mov	r3, r0
    bd80:	cmp	r3, #0
    bd84:	bne	e0e0 <MyGame_Example_Monster_parse_json_table+0x38fc>
    bd88:	sub	r3, fp, #28
    bd8c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bd90:	ldr	r1, [fp, #-140]	; 0xffffff74
    bd94:	ldr	r0, [fp, #-136]	; 0xffffff78
    bd98:	bl	1324 <flatcc_json_parser_array_start>
    bd9c:	str	r0, [fp, #-140]	; 0xffffff74
    bda0:	b	bdf8 <MyGame_Example_Monster_parse_json_table+0x1614>
    bda4:	ldr	r3, [fp, #-136]	; 0xffffff78
    bda8:	ldr	r3, [r3]
    bdac:	mov	r1, #1
    bdb0:	mov	r0, r3
    bdb4:	bl	0 <flatcc_builder_extend_vector>
    bdb8:	str	r0, [fp, #-24]	; 0xffffffe8
    bdbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bdc0:	cmp	r3, #0
    bdc4:	beq	e0e8 <MyGame_Example_Monster_parse_json_table+0x3904>
    bdc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bdcc:	ldr	r2, [fp, #-144]	; 0xffffff70
    bdd0:	ldr	r1, [fp, #-140]	; 0xffffff74
    bdd4:	ldr	r0, [fp, #-136]	; 0xffffff78
    bdd8:	bl	7cc8 <MyGame_Example_Ability_parse_json_struct_inline>
    bddc:	str	r0, [fp, #-140]	; 0xffffff74
    bde0:	sub	r3, fp, #28
    bde4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bde8:	ldr	r1, [fp, #-140]	; 0xffffff74
    bdec:	ldr	r0, [fp, #-136]	; 0xffffff78
    bdf0:	bl	140c <flatcc_json_parser_array_end>
    bdf4:	str	r0, [fp, #-140]	; 0xffffff74
    bdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bdfc:	cmp	r3, #0
    be00:	bne	bda4 <MyGame_Example_Monster_parse_json_table+0x15c0>
    be04:	ldr	r3, [fp, #-136]	; 0xffffff78
    be08:	ldr	r3, [r3]
    be0c:	mov	r0, r3
    be10:	bl	0 <flatcc_builder_end_vector>
    be14:	mov	r3, r0
    be18:	str	r3, [fp, #-32]	; 0xffffffe0
    be1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be20:	cmp	r3, #0
    be24:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    be28:	ldr	r3, [fp, #-136]	; 0xffffff78
    be2c:	ldr	r3, [r3]
    be30:	mov	r1, #29
    be34:	mov	r0, r3
    be38:	bl	0 <flatcc_builder_table_add_offset>
    be3c:	str	r0, [fp, #-20]	; 0xffffffec
    be40:	ldr	r3, [fp, #-20]	; 0xffffffec
    be44:	cmp	r3, #0
    be48:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    be4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    be50:	ldr	r3, [fp, #-20]	; 0xffffffec
    be54:	str	r2, [r3]
    be58:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    be5c:	ldr	r2, [fp, #-144]	; 0xffffff70
    be60:	ldr	r1, [fp, #-140]	; 0xffffff74
    be64:	ldr	r0, [fp, #-136]	; 0xffffff78
    be68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be6c:	str	r0, [fp, #-140]	; 0xffffff74
    be70:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    be74:	ldr	r2, [fp, #-144]	; 0xffffff70
    be78:	ldr	r1, [fp, #-140]	; 0xffffff74
    be7c:	ldr	r0, [fp, #-136]	; 0xffffff78
    be80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be84:	str	r0, [fp, #-140]	; 0xffffff74
    be88:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    be8c:	ldr	r2, [fp, #-144]	; 0xffffff70
    be90:	ldr	r1, [fp, #-140]	; 0xffffff74
    be94:	ldr	r0, [fp, #-136]	; 0xffffff78
    be98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be9c:	str	r0, [fp, #-140]	; 0xffffff74
    bea0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    bea4:	ldrd	r2, [fp, #-12]
    bea8:	add	r1, pc, #432	; 0x1b0
    beac:	ldrd	r0, [r1]
    beb0:	cmp	r3, r1
    beb4:	cmpeq	r2, r0
    beb8:	bne	c1f8 <MyGame_Example_Monster_parse_json_table+0x1a14>
    bebc:	ldr	r3, [fp, #-140]	; 0xffffff74
    bec0:	add	r3, r3, #8
    bec4:	str	r3, [fp, #-140]	; 0xffffff74
    bec8:	ldr	r1, [fp, #-144]	; 0xffffff70
    becc:	ldr	r0, [fp, #-140]	; 0xffffff74
    bed0:	bl	fa8 <flatcc_json_parser_symbol_part>
    bed4:	strd	r0, [fp, #-12]
    bed8:	ldrd	r2, [fp, #-12]
    bedc:	mov	r0, #0
    bee0:	ldr	r1, [pc, #384]	; c068 <MyGame_Example_Monster_parse_json_table+0x1884>
    bee4:	and	r2, r2, r0
    bee8:	and	r3, r3, r1
    beec:	mov	r0, #0
    bef0:	ldr	r1, [pc, #372]	; c06c <MyGame_Example_Monster_parse_json_table+0x1888>
    bef4:	cmp	r3, r1
    bef8:	cmpeq	r2, r0
    befc:	bne	c070 <MyGame_Example_Monster_parse_json_table+0x188c>
    bf00:	ldr	r3, [fp, #-140]	; 0xffffff74
    bf04:	str	r3, [fp, #-16]
    bf08:	mov	r3, #2
    bf0c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bf10:	ldr	r1, [fp, #-16]
    bf14:	ldr	r0, [fp, #-136]	; 0xffffff78
    bf18:	bl	1574 <flatcc_json_parser_match_symbol>
    bf1c:	str	r0, [fp, #-140]	; 0xffffff74
    bf20:	ldr	r2, [fp, #-16]
    bf24:	ldr	r3, [fp, #-140]	; 0xffffff74
    bf28:	cmp	r2, r3
    bf2c:	beq	c038 <MyGame_Example_Monster_parse_json_table+0x1854>
    bf30:	ldr	r3, [fp, #-136]	; 0xffffff78
    bf34:	ldr	r3, [r3]
    bf38:	mov	r0, r3
    bf3c:	bl	0 <flatcc_builder_start_offset_vector>
    bf40:	mov	r3, r0
    bf44:	cmp	r3, #0
    bf48:	bne	e0f0 <MyGame_Example_Monster_parse_json_table+0x390c>
    bf4c:	sub	r3, fp, #28
    bf50:	ldr	r2, [fp, #-144]	; 0xffffff70
    bf54:	ldr	r1, [fp, #-140]	; 0xffffff74
    bf58:	ldr	r0, [fp, #-136]	; 0xffffff78
    bf5c:	bl	1324 <flatcc_json_parser_array_start>
    bf60:	str	r0, [fp, #-140]	; 0xffffff74
    bf64:	b	bfd4 <MyGame_Example_Monster_parse_json_table+0x17f0>
    bf68:	sub	r3, fp, #32
    bf6c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bf70:	ldr	r1, [fp, #-140]	; 0xffffff74
    bf74:	ldr	r0, [fp, #-136]	; 0xffffff78
    bf78:	bl	0 <flatcc_json_parser_build_string>
    bf7c:	str	r0, [fp, #-140]	; 0xffffff74
    bf80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bf84:	cmp	r3, #0
    bf88:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    bf8c:	ldr	r3, [fp, #-136]	; 0xffffff78
    bf90:	ldr	r3, [r3]
    bf94:	mov	r1, #1
    bf98:	mov	r0, r3
    bf9c:	bl	0 <flatcc_builder_extend_offset_vector>
    bfa0:	str	r0, [fp, #-20]	; 0xffffffec
    bfa4:	ldr	r3, [fp, #-20]	; 0xffffffec
    bfa8:	cmp	r3, #0
    bfac:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    bfb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bfb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    bfb8:	str	r2, [r3]
    bfbc:	sub	r3, fp, #28
    bfc0:	ldr	r2, [fp, #-144]	; 0xffffff70
    bfc4:	ldr	r1, [fp, #-140]	; 0xffffff74
    bfc8:	ldr	r0, [fp, #-136]	; 0xffffff78
    bfcc:	bl	140c <flatcc_json_parser_array_end>
    bfd0:	str	r0, [fp, #-140]	; 0xffffff74
    bfd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bfd8:	cmp	r3, #0
    bfdc:	bne	bf68 <MyGame_Example_Monster_parse_json_table+0x1784>
    bfe0:	ldr	r3, [fp, #-136]	; 0xffffff78
    bfe4:	ldr	r3, [r3]
    bfe8:	mov	r0, r3
    bfec:	bl	0 <flatcc_builder_end_offset_vector>
    bff0:	mov	r3, r0
    bff4:	str	r3, [fp, #-32]	; 0xffffffe0
    bff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bffc:	cmp	r3, #0
    c000:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c004:	ldr	r3, [fp, #-136]	; 0xffffff78
    c008:	ldr	r3, [r3]
    c00c:	mov	r1, #28
    c010:	mov	r0, r3
    c014:	bl	0 <flatcc_builder_table_add_offset>
    c018:	str	r0, [fp, #-20]	; 0xffffffec
    c01c:	ldr	r3, [fp, #-20]	; 0xffffffec
    c020:	cmp	r3, #0
    c024:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c028:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c02c:	ldr	r3, [fp, #-20]	; 0xffffffec
    c030:	str	r2, [r3]
    c034:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c038:	ldr	r2, [fp, #-144]	; 0xffffff70
    c03c:	ldr	r1, [fp, #-140]	; 0xffffff74
    c040:	ldr	r0, [fp, #-136]	; 0xffffff78
    c044:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c048:	str	r0, [fp, #-140]	; 0xffffff74
    c04c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c050:	.word	0x6f727465
    c054:	.word	0x796f6673
    c058:	.word	0x75637400
    c05c:	.word	0x64737472
    c060:	.word	0x7472696e
    c064:	.word	0x796f6673
    c068:	.word	0xffff0000
    c06c:	.word	0x67320000
    c070:	ldrd	r2, [fp, #-12]
    c074:	mov	r0, #0
    c078:	mov	r1, #-16777216	; 0xff000000
    c07c:	and	r2, r2, r0
    c080:	and	r3, r3, r1
    c084:	cmp	r3, #1728053248	; 0x67000000
    c088:	cmpeq	r2, #0
    c08c:	bne	c1e0 <MyGame_Example_Monster_parse_json_table+0x19fc>
    c090:	ldr	r3, [fp, #-140]	; 0xffffff74
    c094:	str	r3, [fp, #-16]
    c098:	mov	r3, #1
    c09c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c0a0:	ldr	r1, [fp, #-16]
    c0a4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c0a8:	bl	1574 <flatcc_json_parser_match_symbol>
    c0ac:	str	r0, [fp, #-140]	; 0xffffff74
    c0b0:	ldr	r2, [fp, #-16]
    c0b4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c0b8:	cmp	r2, r3
    c0bc:	beq	c1c8 <MyGame_Example_Monster_parse_json_table+0x19e4>
    c0c0:	ldr	r3, [fp, #-136]	; 0xffffff78
    c0c4:	ldr	r3, [r3]
    c0c8:	mov	r0, r3
    c0cc:	bl	0 <flatcc_builder_start_offset_vector>
    c0d0:	mov	r3, r0
    c0d4:	cmp	r3, #0
    c0d8:	bne	e0f8 <MyGame_Example_Monster_parse_json_table+0x3914>
    c0dc:	sub	r3, fp, #28
    c0e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c0e4:	ldr	r1, [fp, #-140]	; 0xffffff74
    c0e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c0ec:	bl	1324 <flatcc_json_parser_array_start>
    c0f0:	str	r0, [fp, #-140]	; 0xffffff74
    c0f4:	b	c164 <MyGame_Example_Monster_parse_json_table+0x1980>
    c0f8:	sub	r3, fp, #32
    c0fc:	ldr	r2, [fp, #-144]	; 0xffffff70
    c100:	ldr	r1, [fp, #-140]	; 0xffffff74
    c104:	ldr	r0, [fp, #-136]	; 0xffffff78
    c108:	bl	0 <flatcc_json_parser_build_string>
    c10c:	str	r0, [fp, #-140]	; 0xffffff74
    c110:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c114:	cmp	r3, #0
    c118:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c11c:	ldr	r3, [fp, #-136]	; 0xffffff78
    c120:	ldr	r3, [r3]
    c124:	mov	r1, #1
    c128:	mov	r0, r3
    c12c:	bl	0 <flatcc_builder_extend_offset_vector>
    c130:	str	r0, [fp, #-20]	; 0xffffffec
    c134:	ldr	r3, [fp, #-20]	; 0xffffffec
    c138:	cmp	r3, #0
    c13c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c140:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c144:	ldr	r3, [fp, #-20]	; 0xffffffec
    c148:	str	r2, [r3]
    c14c:	sub	r3, fp, #28
    c150:	ldr	r2, [fp, #-144]	; 0xffffff70
    c154:	ldr	r1, [fp, #-140]	; 0xffffff74
    c158:	ldr	r0, [fp, #-136]	; 0xffffff78
    c15c:	bl	140c <flatcc_json_parser_array_end>
    c160:	str	r0, [fp, #-140]	; 0xffffff74
    c164:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c168:	cmp	r3, #0
    c16c:	bne	c0f8 <MyGame_Example_Monster_parse_json_table+0x1914>
    c170:	ldr	r3, [fp, #-136]	; 0xffffff78
    c174:	ldr	r3, [r3]
    c178:	mov	r0, r3
    c17c:	bl	0 <flatcc_builder_end_offset_vector>
    c180:	mov	r3, r0
    c184:	str	r3, [fp, #-32]	; 0xffffffe0
    c188:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c18c:	cmp	r3, #0
    c190:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c194:	ldr	r3, [fp, #-136]	; 0xffffff78
    c198:	ldr	r3, [r3]
    c19c:	mov	r1, #10
    c1a0:	mov	r0, r3
    c1a4:	bl	0 <flatcc_builder_table_add_offset>
    c1a8:	str	r0, [fp, #-20]	; 0xffffffec
    c1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    c1b0:	cmp	r3, #0
    c1b4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c1b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    c1c0:	str	r2, [r3]
    c1c4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c1c8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c1cc:	ldr	r1, [fp, #-140]	; 0xffffff74
    c1d0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c1d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c1d8:	str	r0, [fp, #-140]	; 0xffffff74
    c1dc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c1e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c1e4:	ldr	r1, [fp, #-140]	; 0xffffff74
    c1e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c1ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c1f0:	str	r0, [fp, #-140]	; 0xffffff74
    c1f4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c1f8:	ldrd	r2, [fp, #-12]
    c1fc:	add	r1, pc, #756	; 0x2f4
    c200:	ldrd	r0, [r1]
    c204:	cmp	r3, r1
    c208:	cmpeq	r2, r0
    c20c:	bne	c3b4 <MyGame_Example_Monster_parse_json_table+0x1bd0>
    c210:	ldr	r3, [fp, #-140]	; 0xffffff74
    c214:	add	r3, r3, #8
    c218:	str	r3, [fp, #-140]	; 0xffffff74
    c21c:	ldr	r1, [fp, #-144]	; 0xffffff70
    c220:	ldr	r0, [fp, #-140]	; 0xffffff74
    c224:	bl	fa8 <flatcc_json_parser_symbol_part>
    c228:	strd	r0, [fp, #-12]
    c22c:	ldrd	r2, [fp, #-12]
    c230:	mov	r0, #0
    c234:	mov	r1, #-16777216	; 0xff000000
    c238:	and	r2, r2, r0
    c23c:	and	r3, r3, r1
    c240:	cmp	r3, #1929379840	; 0x73000000
    c244:	cmpeq	r2, #0
    c248:	bne	c39c <MyGame_Example_Monster_parse_json_table+0x1bb8>
    c24c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c250:	str	r3, [fp, #-16]
    c254:	mov	r3, #1
    c258:	ldr	r2, [fp, #-144]	; 0xffffff70
    c25c:	ldr	r1, [fp, #-16]
    c260:	ldr	r0, [fp, #-136]	; 0xffffff78
    c264:	bl	1574 <flatcc_json_parser_match_symbol>
    c268:	str	r0, [fp, #-140]	; 0xffffff74
    c26c:	ldr	r2, [fp, #-16]
    c270:	ldr	r3, [fp, #-140]	; 0xffffff74
    c274:	cmp	r2, r3
    c278:	beq	c384 <MyGame_Example_Monster_parse_json_table+0x1ba0>
    c27c:	ldr	r3, [fp, #-136]	; 0xffffff78
    c280:	ldr	r3, [r3]
    c284:	mov	r0, r3
    c288:	bl	0 <flatcc_builder_start_offset_vector>
    c28c:	mov	r3, r0
    c290:	cmp	r3, #0
    c294:	bne	e100 <MyGame_Example_Monster_parse_json_table+0x391c>
    c298:	sub	r3, fp, #28
    c29c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c2a0:	ldr	r1, [fp, #-140]	; 0xffffff74
    c2a4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c2a8:	bl	1324 <flatcc_json_parser_array_start>
    c2ac:	str	r0, [fp, #-140]	; 0xffffff74
    c2b0:	b	c320 <MyGame_Example_Monster_parse_json_table+0x1b3c>
    c2b4:	sub	r3, fp, #32
    c2b8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c2bc:	ldr	r1, [fp, #-140]	; 0xffffff74
    c2c0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c2c4:	bl	a7e4 <MyGame_Example_Monster_parse_json_table>
    c2c8:	str	r0, [fp, #-140]	; 0xffffff74
    c2cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c2d0:	cmp	r3, #0
    c2d4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c2d8:	ldr	r3, [fp, #-136]	; 0xffffff78
    c2dc:	ldr	r3, [r3]
    c2e0:	mov	r1, #1
    c2e4:	mov	r0, r3
    c2e8:	bl	0 <flatcc_builder_extend_offset_vector>
    c2ec:	str	r0, [fp, #-20]	; 0xffffffec
    c2f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    c2f4:	cmp	r3, #0
    c2f8:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c2fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c300:	ldr	r3, [fp, #-20]	; 0xffffffec
    c304:	str	r2, [r3]
    c308:	sub	r3, fp, #28
    c30c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c310:	ldr	r1, [fp, #-140]	; 0xffffff74
    c314:	ldr	r0, [fp, #-136]	; 0xffffff78
    c318:	bl	140c <flatcc_json_parser_array_end>
    c31c:	str	r0, [fp, #-140]	; 0xffffff74
    c320:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c324:	cmp	r3, #0
    c328:	bne	c2b4 <MyGame_Example_Monster_parse_json_table+0x1ad0>
    c32c:	ldr	r3, [fp, #-136]	; 0xffffff78
    c330:	ldr	r3, [r3]
    c334:	mov	r0, r3
    c338:	bl	0 <flatcc_builder_end_offset_vector>
    c33c:	mov	r3, r0
    c340:	str	r3, [fp, #-32]	; 0xffffffe0
    c344:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c348:	cmp	r3, #0
    c34c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c350:	ldr	r3, [fp, #-136]	; 0xffffff78
    c354:	ldr	r3, [r3]
    c358:	mov	r1, #11
    c35c:	mov	r0, r3
    c360:	bl	0 <flatcc_builder_table_add_offset>
    c364:	str	r0, [fp, #-20]	; 0xffffffec
    c368:	ldr	r3, [fp, #-20]	; 0xffffffec
    c36c:	cmp	r3, #0
    c370:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c374:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c378:	ldr	r3, [fp, #-20]	; 0xffffffec
    c37c:	str	r2, [r3]
    c380:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c384:	ldr	r2, [fp, #-144]	; 0xffffff70
    c388:	ldr	r1, [fp, #-140]	; 0xffffff74
    c38c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c390:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c394:	str	r0, [fp, #-140]	; 0xffffff74
    c398:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c39c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c3a0:	ldr	r1, [fp, #-140]	; 0xffffff74
    c3a4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c3a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c3ac:	str	r0, [fp, #-140]	; 0xffffff74
    c3b0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c3b4:	ldr	r2, [fp, #-144]	; 0xffffff70
    c3b8:	ldr	r1, [fp, #-140]	; 0xffffff74
    c3bc:	ldr	r0, [fp, #-136]	; 0xffffff78
    c3c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c3c4:	str	r0, [fp, #-140]	; 0xffffff74
    c3c8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c3cc:	ldrd	r2, [fp, #-12]
    c3d0:	add	r1, pc, #296	; 0x128
    c3d4:	ldrd	r0, [r1]
    c3d8:	cmp	r3, r1
    c3dc:	cmpeq	r2, r0
    c3e0:	bhi	c66c <MyGame_Example_Monster_parse_json_table+0x1e88>
    c3e4:	ldrd	r2, [fp, #-12]
    c3e8:	add	r1, pc, #280	; 0x118
    c3ec:	ldrd	r0, [r1]
    c3f0:	cmp	r3, r1
    c3f4:	cmpeq	r2, r0
    c3f8:	bne	c518 <MyGame_Example_Monster_parse_json_table+0x1d34>
    c3fc:	ldr	r3, [fp, #-140]	; 0xffffff74
    c400:	add	r3, r3, #8
    c404:	str	r3, [fp, #-140]	; 0xffffff74
    c408:	ldr	r1, [fp, #-144]	; 0xffffff70
    c40c:	ldr	r0, [fp, #-140]	; 0xffffff74
    c410:	bl	fa8 <flatcc_json_parser_symbol_part>
    c414:	strd	r0, [fp, #-12]
    c418:	ldrd	r2, [fp, #-12]
    c41c:	mov	r0, #0
    c420:	ldr	r1, [pc, #232]	; c510 <MyGame_Example_Monster_parse_json_table+0x1d2c>
    c424:	and	r2, r2, r0
    c428:	and	r3, r3, r1
    c42c:	mov	r0, #0
    c430:	ldr	r1, [pc, #220]	; c514 <MyGame_Example_Monster_parse_json_table+0x1d30>
    c434:	cmp	r3, r1
    c438:	cmpeq	r2, r0
    c43c:	bne	c4e0 <MyGame_Example_Monster_parse_json_table+0x1cfc>
    c440:	ldr	r3, [fp, #-140]	; 0xffffff74
    c444:	str	r3, [fp, #-16]
    c448:	mov	r3, #2
    c44c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c450:	ldr	r1, [fp, #-16]
    c454:	ldr	r0, [fp, #-136]	; 0xffffff78
    c458:	bl	1574 <flatcc_json_parser_match_symbol>
    c45c:	str	r0, [fp, #-140]	; 0xffffff74
    c460:	ldr	r2, [fp, #-16]
    c464:	ldr	r3, [fp, #-140]	; 0xffffff74
    c468:	cmp	r2, r3
    c46c:	beq	c4c8 <MyGame_Example_Monster_parse_json_table+0x1ce4>
    c470:	sub	r3, fp, #32
    c474:	ldr	r2, [fp, #-144]	; 0xffffff70
    c478:	ldr	r1, [fp, #-140]	; 0xffffff74
    c47c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c480:	bl	a3d8 <MyGame_Example_TestBase64_parse_json_table>
    c484:	str	r0, [fp, #-140]	; 0xffffff74
    c488:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c48c:	cmp	r3, #0
    c490:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c494:	ldr	r3, [fp, #-136]	; 0xffffff78
    c498:	ldr	r3, [r3]
    c49c:	mov	r1, #35	; 0x23
    c4a0:	mov	r0, r3
    c4a4:	bl	0 <flatcc_builder_table_add_offset>
    c4a8:	str	r0, [fp, #-20]	; 0xffffffec
    c4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    c4b0:	cmp	r3, #0
    c4b4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c4b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c4bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    c4c0:	str	r2, [r3]
    c4c4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c4c8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c4cc:	ldr	r1, [fp, #-140]	; 0xffffff74
    c4d0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c4d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c4d8:	str	r0, [fp, #-140]	; 0xffffff74
    c4dc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c4e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c4e4:	ldr	r1, [fp, #-140]	; 0xffffff74
    c4e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c4ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c4f0:	str	r0, [fp, #-140]	; 0xffffff74
    c4f4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c4f8:	.word	0x61626c65
    c4fc:	.word	0x796f6674
    c500:	.word	0x656d7073
    c504:	.word	0x74657374
    c508:	.word	0x62617365
    c50c:	.word	0x74657374
    c510:	.word	0xffff0000
    c514:	.word	0x36340000
    c518:	ldrd	r2, [fp, #-12]
    c51c:	add	r1, pc, #988	; 0x3dc
    c520:	ldrd	r0, [r1]
    c524:	cmp	r3, r1
    c528:	cmpeq	r2, r0
    c52c:	bne	c654 <MyGame_Example_Monster_parse_json_table+0x1e70>
    c530:	ldr	r3, [fp, #-140]	; 0xffffff74
    c534:	str	r3, [fp, #-16]
    c538:	mov	r3, #8
    c53c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c540:	ldr	r1, [fp, #-16]
    c544:	ldr	r0, [fp, #-136]	; 0xffffff78
    c548:	bl	1574 <flatcc_json_parser_match_symbol>
    c54c:	str	r0, [fp, #-140]	; 0xffffff74
    c550:	ldr	r2, [fp, #-16]
    c554:	ldr	r3, [fp, #-140]	; 0xffffff74
    c558:	cmp	r2, r3
    c55c:	beq	c63c <MyGame_Example_Monster_parse_json_table+0x1e58>
    c560:	mov	r3, #0
    c564:	strb	r3, [fp, #-46]	; 0xffffffd2
    c568:	ldr	r3, [fp, #-140]	; 0xffffff74
    c56c:	str	r3, [fp, #-16]
    c570:	sub	r3, fp, #46	; 0x2e
    c574:	ldr	r2, [fp, #-144]	; 0xffffff70
    c578:	ldr	r1, [fp, #-16]
    c57c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c580:	bl	241c <flatcc_json_parser_bool>
    c584:	str	r0, [fp, #-140]	; 0xffffff74
    c588:	ldr	r2, [fp, #-16]
    c58c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c590:	cmp	r2, r3
    c594:	bne	c5e0 <MyGame_Example_Monster_parse_json_table+0x1dfc>
    c598:	ldr	r3, [fp, #-140]	; 0xffffff74
    c59c:	str	r3, [fp, #-16]
    c5a0:	sub	r3, fp, #46	; 0x2e
    c5a4:	str	r3, [sp]
    c5a8:	ldr	r3, [pc, #884]	; c924 <MyGame_Example_Monster_parse_json_table+0x2140>
    c5ac:	ldr	r2, [fp, #-144]	; 0xffffff70
    c5b0:	ldr	r1, [fp, #-16]
    c5b4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c5b8:	bl	33c0 <flatcc_json_parser_symbolic_bool>
    c5bc:	str	r0, [fp, #-140]	; 0xffffff74
    c5c0:	ldr	r2, [fp, #-140]	; 0xffffff74
    c5c4:	ldr	r3, [fp, #-16]
    c5c8:	cmp	r2, r3
    c5cc:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c5d0:	ldr	r2, [fp, #-140]	; 0xffffff74
    c5d4:	ldr	r3, [fp, #-144]	; 0xffffff70
    c5d8:	cmp	r2, r3
    c5dc:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c5e0:	ldrb	r3, [fp, #-46]	; 0xffffffd2
    c5e4:	cmp	r3, #1
    c5e8:	bne	c600 <MyGame_Example_Monster_parse_json_table+0x1e1c>
    c5ec:	ldr	r3, [fp, #-136]	; 0xffffff78
    c5f0:	ldr	r3, [r3, #8]
    c5f4:	and	r3, r3, #2
    c5f8:	cmp	r3, #0
    c5fc:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c600:	ldr	r3, [fp, #-136]	; 0xffffff78
    c604:	ldr	r0, [r3]
    c608:	mov	r3, #1
    c60c:	mov	r2, #1
    c610:	mov	r1, #15
    c614:	bl	0 <flatcc_builder_table_add>
    c618:	str	r0, [fp, #-24]	; 0xffffffe8
    c61c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c620:	cmp	r3, #0
    c624:	beq	e108 <MyGame_Example_Monster_parse_json_table+0x3924>
    c628:	ldrb	r3, [fp, #-46]	; 0xffffffd2
    c62c:	mov	r1, r3
    c630:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c634:	bl	590 <flatbuffers_bool_write_to_pe>
    c638:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c63c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c640:	ldr	r1, [fp, #-140]	; 0xffffff74
    c644:	ldr	r0, [fp, #-136]	; 0xffffff78
    c648:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c64c:	str	r0, [fp, #-140]	; 0xffffff74
    c650:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c654:	ldr	r2, [fp, #-144]	; 0xffffff70
    c658:	ldr	r1, [fp, #-140]	; 0xffffff74
    c65c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c660:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c664:	str	r0, [fp, #-140]	; 0xffffff74
    c668:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c66c:	ldrd	r2, [fp, #-12]
    c670:	add	r1, pc, #656	; 0x290
    c674:	ldrd	r0, [r1]
    c678:	cmp	r3, r1
    c67c:	cmpeq	r2, r0
    c680:	bhi	c7a8 <MyGame_Example_Monster_parse_json_table+0x1fc4>
    c684:	ldrd	r2, [fp, #-12]
    c688:	add	r1, pc, #640	; 0x280
    c68c:	ldrd	r0, [r1]
    c690:	cmp	r3, r1
    c694:	cmpeq	r2, r0
    c698:	bne	c790 <MyGame_Example_Monster_parse_json_table+0x1fac>
    c69c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c6a0:	add	r3, r3, #8
    c6a4:	str	r3, [fp, #-140]	; 0xffffff74
    c6a8:	ldr	r1, [fp, #-144]	; 0xffffff70
    c6ac:	ldr	r0, [fp, #-140]	; 0xffffff74
    c6b0:	bl	fa8 <flatcc_json_parser_symbol_part>
    c6b4:	strd	r0, [fp, #-12]
    c6b8:	ldrd	r2, [fp, #-12]
    c6bc:	mov	r0, #0
    c6c0:	mov	r1, #-16777216	; 0xff000000
    c6c4:	and	r2, r2, r0
    c6c8:	and	r3, r3, r1
    c6cc:	cmp	r3, #2030043136	; 0x79000000
    c6d0:	cmpeq	r2, #0
    c6d4:	bne	c778 <MyGame_Example_Monster_parse_json_table+0x1f94>
    c6d8:	ldr	r3, [fp, #-140]	; 0xffffff74
    c6dc:	str	r3, [fp, #-16]
    c6e0:	mov	r3, #1
    c6e4:	ldr	r2, [fp, #-144]	; 0xffffff70
    c6e8:	ldr	r1, [fp, #-16]
    c6ec:	ldr	r0, [fp, #-136]	; 0xffffff78
    c6f0:	bl	1574 <flatcc_json_parser_match_symbol>
    c6f4:	str	r0, [fp, #-140]	; 0xffffff74
    c6f8:	ldr	r2, [fp, #-16]
    c6fc:	ldr	r3, [fp, #-140]	; 0xffffff74
    c700:	cmp	r2, r3
    c704:	beq	c760 <MyGame_Example_Monster_parse_json_table+0x1f7c>
    c708:	sub	r3, fp, #32
    c70c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c710:	ldr	r1, [fp, #-140]	; 0xffffff74
    c714:	ldr	r0, [fp, #-136]	; 0xffffff78
    c718:	bl	8084 <MyGame_Example_Stat_parse_json_table>
    c71c:	str	r0, [fp, #-140]	; 0xffffff74
    c720:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c724:	cmp	r3, #0
    c728:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c72c:	ldr	r3, [fp, #-136]	; 0xffffff78
    c730:	ldr	r3, [r3]
    c734:	mov	r1, #14
    c738:	mov	r0, r3
    c73c:	bl	0 <flatcc_builder_table_add_offset>
    c740:	str	r0, [fp, #-20]	; 0xffffffec
    c744:	ldr	r3, [fp, #-20]	; 0xffffffec
    c748:	cmp	r3, #0
    c74c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c750:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c754:	ldr	r3, [fp, #-20]	; 0xffffffec
    c758:	str	r2, [r3]
    c75c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c760:	ldr	r2, [fp, #-144]	; 0xffffff70
    c764:	ldr	r1, [fp, #-140]	; 0xffffff74
    c768:	ldr	r0, [fp, #-136]	; 0xffffff78
    c76c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c770:	str	r0, [fp, #-140]	; 0xffffff74
    c774:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c778:	ldr	r2, [fp, #-144]	; 0xffffff70
    c77c:	ldr	r1, [fp, #-140]	; 0xffffff74
    c780:	ldr	r0, [fp, #-136]	; 0xffffff78
    c784:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c788:	str	r0, [fp, #-140]	; 0xffffff74
    c78c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c790:	ldr	r2, [fp, #-144]	; 0xffffff70
    c794:	ldr	r1, [fp, #-140]	; 0xffffff74
    c798:	ldr	r0, [fp, #-136]	; 0xffffff78
    c79c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7a0:	str	r0, [fp, #-140]	; 0xffffff74
    c7a4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c7a8:	ldrd	r2, [fp, #-12]
    c7ac:	ldr	r0, [pc, #372]	; c928 <MyGame_Example_Monster_parse_json_table+0x2144>
    c7b0:	mvn	r1, #0
    c7b4:	and	r2, r2, r0
    c7b8:	and	r3, r3, r1
    c7bc:	add	r1, pc, #340	; 0x154
    c7c0:	ldrd	r0, [r1]
    c7c4:	cmp	r3, r1
    c7c8:	cmpeq	r2, r0
    c7cc:	bne	c930 <MyGame_Example_Monster_parse_json_table+0x214c>
    c7d0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c7d4:	str	r3, [fp, #-16]
    c7d8:	mov	r3, #6
    c7dc:	ldr	r2, [fp, #-144]	; 0xffffff70
    c7e0:	ldr	r1, [fp, #-16]
    c7e4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c7e8:	bl	1574 <flatcc_json_parser_match_symbol>
    c7ec:	str	r0, [fp, #-140]	; 0xffffff74
    c7f0:	ldr	r2, [fp, #-16]
    c7f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c7f8:	cmp	r2, r3
    c7fc:	beq	c8e4 <MyGame_Example_Monster_parse_json_table+0x2100>
    c800:	mov	r3, #0
    c804:	str	r3, [fp, #-52]	; 0xffffffcc
    c808:	ldr	r3, [fp, #-140]	; 0xffffff74
    c80c:	str	r3, [fp, #-16]
    c810:	sub	r3, fp, #52	; 0x34
    c814:	ldr	r2, [fp, #-144]	; 0xffffff70
    c818:	ldr	r1, [fp, #-16]
    c81c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c820:	bl	0 <flatcc_json_parser_float>
    c824:	str	r0, [fp, #-140]	; 0xffffff74
    c828:	ldr	r2, [fp, #-16]
    c82c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c830:	cmp	r2, r3
    c834:	bne	c880 <MyGame_Example_Monster_parse_json_table+0x209c>
    c838:	ldr	r3, [fp, #-140]	; 0xffffff74
    c83c:	str	r3, [fp, #-16]
    c840:	sub	r3, fp, #52	; 0x34
    c844:	str	r3, [sp]
    c848:	ldr	r3, [pc, #220]	; c92c <MyGame_Example_Monster_parse_json_table+0x2148>
    c84c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c850:	ldr	r1, [fp, #-16]
    c854:	ldr	r0, [fp, #-136]	; 0xffffff78
    c858:	bl	3590 <flatcc_json_parser_symbolic_float>
    c85c:	str	r0, [fp, #-140]	; 0xffffff74
    c860:	ldr	r2, [fp, #-140]	; 0xffffff74
    c864:	ldr	r3, [fp, #-16]
    c868:	cmp	r2, r3
    c86c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c870:	ldr	r2, [fp, #-140]	; 0xffffff74
    c874:	ldr	r3, [fp, #-144]	; 0xffffff70
    c878:	cmp	r2, r3
    c87c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c880:	vldr	s15, [fp, #-52]	; 0xffffffcc
    c884:	vldr	s14, [pc, #148]	; c920 <MyGame_Example_Monster_parse_json_table+0x213c>
    c888:	vcmp.f32	s15, s14
    c88c:	vmrs	APSR_nzcv, fpscr
    c890:	bne	c8a8 <MyGame_Example_Monster_parse_json_table+0x20c4>
    c894:	ldr	r3, [fp, #-136]	; 0xffffff78
    c898:	ldr	r3, [r3, #8]
    c89c:	and	r3, r3, #2
    c8a0:	cmp	r3, #0
    c8a4:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c8a8:	ldr	r3, [fp, #-136]	; 0xffffff78
    c8ac:	ldr	r0, [r3]
    c8b0:	mov	r3, #4
    c8b4:	mov	r2, #4
    c8b8:	mov	r1, #26
    c8bc:	bl	0 <flatcc_builder_table_add>
    c8c0:	str	r0, [fp, #-24]	; 0xffffffe8
    c8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8c8:	cmp	r3, #0
    c8cc:	beq	e110 <MyGame_Example_Monster_parse_json_table+0x392c>
    c8d0:	vldr	s15, [fp, #-52]	; 0xffffffcc
    c8d4:	vmov.f32	s0, s15
    c8d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c8dc:	bl	460 <flatbuffers_float_write_to_pe>
    c8e0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c8e4:	ldr	r2, [fp, #-144]	; 0xffffff70
    c8e8:	ldr	r1, [fp, #-140]	; 0xffffff74
    c8ec:	ldr	r0, [fp, #-136]	; 0xffffff78
    c8f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c8f4:	str	r0, [fp, #-140]	; 0xffffff74
    c8f8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    c8fc:	nop			; (mov r0, r0)
    c900:	.word	0x626f6f6c
    c904:	.word	0x74657374
    c908:	.word	0x65ffffff
    c90c:	.word	0x74657374
    c910:	.word	0x656d7074
    c914:	.word	0x74657374
    c918:	.word	0x66320000
    c91c:	.word	0x74657374
    c920:	.word	0x40400000
    c924:	.word	0x000001f8
    c928:	.word	0xffff0000
    c92c:	.word	0x00000204
    c930:	ldrd	r2, [fp, #-12]
    c934:	mov	r0, #-16777216	; 0xff000000
    c938:	mvn	r1, #0
    c93c:	and	r2, r2, r0
    c940:	and	r3, r3, r1
    c944:	add	r1, pc, #724	; 0x2d4
    c948:	ldrd	r0, [r1]
    c94c:	cmp	r3, r1
    c950:	cmpeq	r2, r0
    c954:	bne	ca84 <MyGame_Example_Monster_parse_json_table+0x22a0>
    c958:	ldr	r3, [fp, #-140]	; 0xffffff74
    c95c:	str	r3, [fp, #-16]
    c960:	mov	r3, #5
    c964:	ldr	r2, [fp, #-144]	; 0xffffff70
    c968:	ldr	r1, [fp, #-16]
    c96c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c970:	bl	1574 <flatcc_json_parser_match_symbol>
    c974:	str	r0, [fp, #-140]	; 0xffffff74
    c978:	ldr	r2, [fp, #-16]
    c97c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c980:	cmp	r2, r3
    c984:	beq	ca6c <MyGame_Example_Monster_parse_json_table+0x2288>
    c988:	mov	r3, #0
    c98c:	str	r3, [fp, #-56]	; 0xffffffc8
    c990:	ldr	r3, [fp, #-140]	; 0xffffff74
    c994:	str	r3, [fp, #-16]
    c998:	sub	r3, fp, #56	; 0x38
    c99c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c9a0:	ldr	r1, [fp, #-16]
    c9a4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c9a8:	bl	0 <flatcc_json_parser_float>
    c9ac:	str	r0, [fp, #-140]	; 0xffffff74
    c9b0:	ldr	r2, [fp, #-16]
    c9b4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c9b8:	cmp	r2, r3
    c9bc:	bne	ca08 <MyGame_Example_Monster_parse_json_table+0x2224>
    c9c0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c9c4:	str	r3, [fp, #-16]
    c9c8:	sub	r3, fp, #56	; 0x38
    c9cc:	str	r3, [sp]
    c9d0:	ldr	r3, [pc, #612]	; cc3c <MyGame_Example_Monster_parse_json_table+0x2458>
    c9d4:	ldr	r2, [fp, #-144]	; 0xffffff70
    c9d8:	ldr	r1, [fp, #-16]
    c9dc:	ldr	r0, [fp, #-136]	; 0xffffff78
    c9e0:	bl	3590 <flatcc_json_parser_symbolic_float>
    c9e4:	str	r0, [fp, #-140]	; 0xffffff74
    c9e8:	ldr	r2, [fp, #-140]	; 0xffffff74
    c9ec:	ldr	r3, [fp, #-16]
    c9f0:	cmp	r2, r3
    c9f4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    c9f8:	ldr	r2, [fp, #-140]	; 0xffffff74
    c9fc:	ldr	r3, [fp, #-144]	; 0xffffff70
    ca00:	cmp	r2, r3
    ca04:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    ca08:	vldr	s15, [fp, #-56]	; 0xffffffc8
    ca0c:	vldr	s14, [pc, #548]	; cc38 <MyGame_Example_Monster_parse_json_table+0x2454>
    ca10:	vcmp.f32	s15, s14
    ca14:	vmrs	APSR_nzcv, fpscr
    ca18:	bne	ca30 <MyGame_Example_Monster_parse_json_table+0x224c>
    ca1c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ca20:	ldr	r3, [r3, #8]
    ca24:	and	r3, r3, #2
    ca28:	cmp	r3, #0
    ca2c:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ca30:	ldr	r3, [fp, #-136]	; 0xffffff78
    ca34:	ldr	r0, [r3]
    ca38:	mov	r3, #4
    ca3c:	mov	r2, #4
    ca40:	mov	r1, #25
    ca44:	bl	0 <flatcc_builder_table_add>
    ca48:	str	r0, [fp, #-24]	; 0xffffffe8
    ca4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca50:	cmp	r3, #0
    ca54:	beq	e118 <MyGame_Example_Monster_parse_json_table+0x3934>
    ca58:	vldr	s15, [fp, #-56]	; 0xffffffc8
    ca5c:	vmov.f32	s0, s15
    ca60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ca64:	bl	460 <flatbuffers_float_write_to_pe>
    ca68:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ca6c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ca70:	ldr	r1, [fp, #-140]	; 0xffffff74
    ca74:	ldr	r0, [fp, #-136]	; 0xffffff78
    ca78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca7c:	str	r0, [fp, #-140]	; 0xffffff74
    ca80:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ca84:	ldr	r2, [fp, #-144]	; 0xffffff70
    ca88:	ldr	r1, [fp, #-140]	; 0xffffff74
    ca8c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ca90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca94:	str	r0, [fp, #-140]	; 0xffffff74
    ca98:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    ca9c:	ldrd	r2, [fp, #-12]
    caa0:	add	r1, pc, #384	; 0x180
    caa4:	ldrd	r0, [r1]
    caa8:	cmp	r3, r1
    caac:	cmpeq	r2, r0
    cab0:	bhi	cc48 <MyGame_Example_Monster_parse_json_table+0x2464>
    cab4:	ldrd	r2, [fp, #-12]
    cab8:	ldr	r0, [pc, #384]	; cc40 <MyGame_Example_Monster_parse_json_table+0x245c>
    cabc:	mvn	r1, #0
    cac0:	and	r2, r2, r0
    cac4:	and	r3, r3, r1
    cac8:	add	r1, pc, #352	; 0x160
    cacc:	ldrd	r0, [r1]
    cad0:	cmp	r3, r1
    cad4:	cmpeq	r2, r0
    cad8:	bne	cc04 <MyGame_Example_Monster_parse_json_table+0x2420>
    cadc:	ldr	r3, [fp, #-140]	; 0xffffff74
    cae0:	str	r3, [fp, #-16]
    cae4:	mov	r3, #6
    cae8:	ldr	r2, [fp, #-144]	; 0xffffff70
    caec:	ldr	r1, [fp, #-16]
    caf0:	ldr	r0, [fp, #-136]	; 0xffffff78
    caf4:	bl	1574 <flatcc_json_parser_match_symbol>
    caf8:	str	r0, [fp, #-140]	; 0xffffff74
    cafc:	ldr	r2, [fp, #-16]
    cb00:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb04:	cmp	r2, r3
    cb08:	beq	cbec <MyGame_Example_Monster_parse_json_table+0x2408>
    cb0c:	mov	r3, #0
    cb10:	str	r3, [fp, #-60]	; 0xffffffc4
    cb14:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb18:	str	r3, [fp, #-16]
    cb1c:	sub	r3, fp, #60	; 0x3c
    cb20:	ldr	r2, [fp, #-144]	; 0xffffff70
    cb24:	ldr	r1, [fp, #-16]
    cb28:	ldr	r0, [fp, #-136]	; 0xffffff78
    cb2c:	bl	0 <flatcc_json_parser_float>
    cb30:	str	r0, [fp, #-140]	; 0xffffff74
    cb34:	ldr	r2, [fp, #-16]
    cb38:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb3c:	cmp	r2, r3
    cb40:	bne	cb8c <MyGame_Example_Monster_parse_json_table+0x23a8>
    cb44:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb48:	str	r3, [fp, #-16]
    cb4c:	sub	r3, fp, #60	; 0x3c
    cb50:	str	r3, [sp]
    cb54:	ldr	r3, [pc, #232]	; cc44 <MyGame_Example_Monster_parse_json_table+0x2460>
    cb58:	ldr	r2, [fp, #-144]	; 0xffffff70
    cb5c:	ldr	r1, [fp, #-16]
    cb60:	ldr	r0, [fp, #-136]	; 0xffffff78
    cb64:	bl	3590 <flatcc_json_parser_symbolic_float>
    cb68:	str	r0, [fp, #-140]	; 0xffffff74
    cb6c:	ldr	r2, [fp, #-140]	; 0xffffff74
    cb70:	ldr	r3, [fp, #-16]
    cb74:	cmp	r2, r3
    cb78:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    cb7c:	ldr	r2, [fp, #-140]	; 0xffffff74
    cb80:	ldr	r3, [fp, #-144]	; 0xffffff70
    cb84:	cmp	r2, r3
    cb88:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    cb8c:	vldr	s15, [fp, #-60]	; 0xffffffc4
    cb90:	vcmp.f32	s15, #0.0
    cb94:	vmrs	APSR_nzcv, fpscr
    cb98:	bne	cbb0 <MyGame_Example_Monster_parse_json_table+0x23cc>
    cb9c:	ldr	r3, [fp, #-136]	; 0xffffff78
    cba0:	ldr	r3, [r3, #8]
    cba4:	and	r3, r3, #2
    cba8:	cmp	r3, #0
    cbac:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cbb0:	ldr	r3, [fp, #-136]	; 0xffffff78
    cbb4:	ldr	r0, [r3]
    cbb8:	mov	r3, #4
    cbbc:	mov	r2, #4
    cbc0:	mov	r1, #27
    cbc4:	bl	0 <flatcc_builder_table_add>
    cbc8:	str	r0, [fp, #-24]	; 0xffffffe8
    cbcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbd0:	cmp	r3, #0
    cbd4:	beq	e120 <MyGame_Example_Monster_parse_json_table+0x393c>
    cbd8:	vldr	s15, [fp, #-60]	; 0xffffffc4
    cbdc:	vmov.f32	s0, s15
    cbe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cbe4:	bl	460 <flatbuffers_float_write_to_pe>
    cbe8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cbec:	ldr	r2, [fp, #-144]	; 0xffffff70
    cbf0:	ldr	r1, [fp, #-140]	; 0xffffff74
    cbf4:	ldr	r0, [fp, #-136]	; 0xffffff78
    cbf8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cbfc:	str	r0, [fp, #-140]	; 0xffffff74
    cc00:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cc04:	ldr	r2, [fp, #-144]	; 0xffffff70
    cc08:	ldr	r1, [fp, #-140]	; 0xffffff74
    cc0c:	ldr	r0, [fp, #-136]	; 0xffffff78
    cc10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc14:	str	r0, [fp, #-140]	; 0xffffff74
    cc18:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cc1c:	nop			; (mov r0, r0)
    cc20:	.word	0x66000000
    cc24:	.word	0x74657374
    cc28:	.word	0x68617367
    cc2c:	.word	0x74657374
    cc30:	.word	0x66330000
    cc34:	.word	0x74657374
    cc38:	.word	0x489965e0
    cc3c:	.word	0x00000210
    cc40:	.word	0xffff0000
    cc44:	.word	0x0000021c
    cc48:	ldrd	r2, [fp, #-12]
    cc4c:	add	r1, pc, #756	; 0x2f4
    cc50:	ldrd	r0, [r1]
    cc54:	cmp	r3, r1
    cc58:	cmpeq	r2, r0
    cc5c:	bne	d7c0 <MyGame_Example_Monster_parse_json_table+0x2fdc>
    cc60:	ldr	r3, [fp, #-140]	; 0xffffff74
    cc64:	add	r3, r3, #8
    cc68:	str	r3, [fp, #-140]	; 0xffffff74
    cc6c:	ldr	r1, [fp, #-144]	; 0xffffff70
    cc70:	ldr	r0, [fp, #-140]	; 0xffffff74
    cc74:	bl	fa8 <flatcc_json_parser_symbol_part>
    cc78:	strd	r0, [fp, #-12]
    cc7c:	ldrd	r2, [fp, #-12]
    cc80:	add	r1, pc, #712	; 0x2c8
    cc84:	ldrd	r0, [r1]
    cc88:	cmp	r3, r1
    cc8c:	cmpeq	r2, r0
    cc90:	bhi	cf68 <MyGame_Example_Monster_parse_json_table+0x2784>
    cc94:	ldrd	r2, [fp, #-12]
    cc98:	add	r1, pc, #696	; 0x2b8
    cc9c:	ldrd	r0, [r1]
    cca0:	cmp	r3, r1
    cca4:	cmpeq	r2, r0
    cca8:	bne	cf30 <MyGame_Example_Monster_parse_json_table+0x274c>
    ccac:	ldr	r3, [fp, #-140]	; 0xffffff74
    ccb0:	str	r3, [fp, #-16]
    ccb4:	mov	r3, #8
    ccb8:	ldr	r2, [fp, #-144]	; 0xffffff70
    ccbc:	ldr	r1, [fp, #-16]
    ccc0:	ldr	r0, [fp, #-136]	; 0xffffff78
    ccc4:	bl	1574 <flatcc_json_parser_match_symbol>
    ccc8:	str	r0, [fp, #-140]	; 0xffffff74
    cccc:	ldr	r2, [fp, #-16]
    ccd0:	ldr	r3, [fp, #-140]	; 0xffffff74
    ccd4:	cmp	r2, r3
    ccd8:	beq	cdb8 <MyGame_Example_Monster_parse_json_table+0x25d4>
    ccdc:	mov	r3, #0
    cce0:	str	r3, [fp, #-64]	; 0xffffffc0
    cce4:	ldr	r3, [fp, #-140]	; 0xffffff74
    cce8:	str	r3, [fp, #-16]
    ccec:	sub	r3, fp, #64	; 0x40
    ccf0:	ldr	r2, [fp, #-144]	; 0xffffff70
    ccf4:	ldr	r1, [fp, #-16]
    ccf8:	ldr	r0, [fp, #-136]	; 0xffffff78
    ccfc:	bl	21ac <flatcc_json_parser_int32>
    cd00:	str	r0, [fp, #-140]	; 0xffffff74
    cd04:	ldr	r2, [fp, #-16]
    cd08:	ldr	r3, [fp, #-140]	; 0xffffff74
    cd0c:	cmp	r2, r3
    cd10:	bne	cd5c <MyGame_Example_Monster_parse_json_table+0x2578>
    cd14:	ldr	r3, [fp, #-140]	; 0xffffff74
    cd18:	str	r3, [fp, #-16]
    cd1c:	sub	r3, fp, #64	; 0x40
    cd20:	str	r3, [sp]
    cd24:	ldr	r3, [pc, #564]	; cf60 <MyGame_Example_Monster_parse_json_table+0x277c>
    cd28:	ldr	r2, [fp, #-144]	; 0xffffff70
    cd2c:	ldr	r1, [fp, #-16]
    cd30:	ldr	r0, [fp, #-136]	; 0xffffff78
    cd34:	bl	2e3c <flatcc_json_parser_symbolic_int32>
    cd38:	str	r0, [fp, #-140]	; 0xffffff74
    cd3c:	ldr	r2, [fp, #-140]	; 0xffffff74
    cd40:	ldr	r3, [fp, #-16]
    cd44:	cmp	r2, r3
    cd48:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    cd4c:	ldr	r2, [fp, #-140]	; 0xffffff74
    cd50:	ldr	r3, [fp, #-144]	; 0xffffff70
    cd54:	cmp	r2, r3
    cd58:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    cd5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    cd60:	cmp	r3, #0
    cd64:	bne	cd7c <MyGame_Example_Monster_parse_json_table+0x2598>
    cd68:	ldr	r3, [fp, #-136]	; 0xffffff78
    cd6c:	ldr	r3, [r3, #8]
    cd70:	and	r3, r3, #2
    cd74:	cmp	r3, #0
    cd78:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cd7c:	ldr	r3, [fp, #-136]	; 0xffffff78
    cd80:	ldr	r0, [r3]
    cd84:	mov	r3, #4
    cd88:	mov	r2, #4
    cd8c:	mov	r1, #16
    cd90:	bl	0 <flatcc_builder_table_add>
    cd94:	str	r0, [fp, #-24]	; 0xffffffe8
    cd98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cd9c:	cmp	r3, #0
    cda0:	beq	e128 <MyGame_Example_Monster_parse_json_table+0x3944>
    cda4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    cda8:	mov	r1, r3
    cdac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cdb0:	bl	32c <flatbuffers_int32_write_to_pe>
    cdb4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cdb8:	ldr	r3, [fp, #-140]	; 0xffffff74
    cdbc:	add	r3, r3, #8
    cdc0:	str	r3, [fp, #-140]	; 0xffffff74
    cdc4:	ldr	r1, [fp, #-144]	; 0xffffff70
    cdc8:	ldr	r0, [fp, #-140]	; 0xffffff74
    cdcc:	bl	fa8 <flatcc_json_parser_symbol_part>
    cdd0:	strd	r0, [fp, #-12]
    cdd4:	ldrd	r2, [fp, #-12]
    cdd8:	mov	r0, #0
    cddc:	mov	r1, #-16777216	; 0xff000000
    cde0:	and	r2, r2, r0
    cde4:	and	r3, r3, r1
    cde8:	cmp	r3, #1627389952	; 0x61000000
    cdec:	cmpeq	r2, #0
    cdf0:	bne	cf18 <MyGame_Example_Monster_parse_json_table+0x2734>
    cdf4:	ldr	r3, [fp, #-140]	; 0xffffff74
    cdf8:	str	r3, [fp, #-16]
    cdfc:	mov	r3, #1
    ce00:	ldr	r2, [fp, #-144]	; 0xffffff70
    ce04:	ldr	r1, [fp, #-16]
    ce08:	ldr	r0, [fp, #-136]	; 0xffffff78
    ce0c:	bl	1574 <flatcc_json_parser_match_symbol>
    ce10:	str	r0, [fp, #-140]	; 0xffffff74
    ce14:	ldr	r2, [fp, #-16]
    ce18:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce1c:	cmp	r2, r3
    ce20:	beq	cf00 <MyGame_Example_Monster_parse_json_table+0x271c>
    ce24:	mov	r3, #0
    ce28:	str	r3, [fp, #-68]	; 0xffffffbc
    ce2c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce30:	str	r3, [fp, #-16]
    ce34:	sub	r3, fp, #68	; 0x44
    ce38:	ldr	r2, [fp, #-144]	; 0xffffff70
    ce3c:	ldr	r1, [fp, #-16]
    ce40:	ldr	r0, [fp, #-136]	; 0xffffff78
    ce44:	bl	21ac <flatcc_json_parser_int32>
    ce48:	str	r0, [fp, #-140]	; 0xffffff74
    ce4c:	ldr	r2, [fp, #-16]
    ce50:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce54:	cmp	r2, r3
    ce58:	bne	cea4 <MyGame_Example_Monster_parse_json_table+0x26c0>
    ce5c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce60:	str	r3, [fp, #-16]
    ce64:	sub	r3, fp, #68	; 0x44
    ce68:	str	r3, [sp]
    ce6c:	ldr	r3, [pc, #240]	; cf64 <MyGame_Example_Monster_parse_json_table+0x2780>
    ce70:	ldr	r2, [fp, #-144]	; 0xffffff70
    ce74:	ldr	r1, [fp, #-16]
    ce78:	ldr	r0, [fp, #-136]	; 0xffffff78
    ce7c:	bl	2e3c <flatcc_json_parser_symbolic_int32>
    ce80:	str	r0, [fp, #-140]	; 0xffffff74
    ce84:	ldr	r2, [fp, #-140]	; 0xffffff74
    ce88:	ldr	r3, [fp, #-16]
    ce8c:	cmp	r2, r3
    ce90:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    ce94:	ldr	r2, [fp, #-140]	; 0xffffff74
    ce98:	ldr	r3, [fp, #-144]	; 0xffffff70
    ce9c:	cmp	r2, r3
    cea0:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    cea4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    cea8:	cmp	r3, #0
    ceac:	bne	cec4 <MyGame_Example_Monster_parse_json_table+0x26e0>
    ceb0:	ldr	r3, [fp, #-136]	; 0xffffff78
    ceb4:	ldr	r3, [r3, #8]
    ceb8:	and	r3, r3, #2
    cebc:	cmp	r3, #0
    cec0:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cec4:	ldr	r3, [fp, #-136]	; 0xffffff78
    cec8:	ldr	r0, [r3]
    cecc:	mov	r3, #4
    ced0:	mov	r2, #4
    ced4:	mov	r1, #20
    ced8:	bl	0 <flatcc_builder_table_add>
    cedc:	str	r0, [fp, #-24]	; 0xffffffe8
    cee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cee4:	cmp	r3, #0
    cee8:	beq	e130 <MyGame_Example_Monster_parse_json_table+0x394c>
    ceec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    cef0:	mov	r1, r3
    cef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cef8:	bl	32c <flatbuffers_int32_write_to_pe>
    cefc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cf00:	ldr	r2, [fp, #-144]	; 0xffffff70
    cf04:	ldr	r1, [fp, #-140]	; 0xffffff74
    cf08:	ldr	r0, [fp, #-136]	; 0xffffff78
    cf0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf10:	str	r0, [fp, #-140]	; 0xffffff74
    cf14:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cf18:	ldr	r2, [fp, #-144]	; 0xffffff70
    cf1c:	ldr	r1, [fp, #-140]	; 0xffffff74
    cf20:	ldr	r0, [fp, #-136]	; 0xffffff78
    cf24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf28:	str	r0, [fp, #-140]	; 0xffffff74
    cf2c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cf30:	ldr	r2, [fp, #-144]	; 0xffffff70
    cf34:	ldr	r1, [fp, #-140]	; 0xffffff74
    cf38:	ldr	r0, [fp, #-136]	; 0xffffff78
    cf3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf40:	str	r0, [fp, #-140]	; 0xffffff74
    cf44:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    cf48:	.word	0x68617368
    cf4c:	.word	0x74657374
    cf50:	.word	0x666e7630
    cf54:	.word	0x7336345f
    cf58:	.word	0x666e7631
    cf5c:	.word	0x7333325f
    cf60:	.word	0x00000228
    cf64:	.word	0x00000234
    cf68:	ldrd	r2, [fp, #-12]
    cf6c:	add	r1, pc, #708	; 0x2c4
    cf70:	ldrd	r0, [r1]
    cf74:	cmp	r3, r1
    cf78:	cmpeq	r2, r0
    cf7c:	bhi	d250 <MyGame_Example_Monster_parse_json_table+0x2a6c>
    cf80:	ldrd	r2, [fp, #-12]
    cf84:	add	r1, pc, #692	; 0x2b4
    cf88:	ldrd	r0, [r1]
    cf8c:	cmp	r3, r1
    cf90:	cmpeq	r2, r0
    cf94:	bne	d21c <MyGame_Example_Monster_parse_json_table+0x2a38>
    cf98:	ldr	r3, [fp, #-140]	; 0xffffff74
    cf9c:	str	r3, [fp, #-16]
    cfa0:	mov	r3, #8
    cfa4:	ldr	r2, [fp, #-144]	; 0xffffff70
    cfa8:	ldr	r1, [fp, #-16]
    cfac:	ldr	r0, [fp, #-136]	; 0xffffff78
    cfb0:	bl	1574 <flatcc_json_parser_match_symbol>
    cfb4:	str	r0, [fp, #-140]	; 0xffffff74
    cfb8:	ldr	r2, [fp, #-16]
    cfbc:	ldr	r3, [fp, #-140]	; 0xffffff74
    cfc0:	cmp	r2, r3
    cfc4:	beq	d0a4 <MyGame_Example_Monster_parse_json_table+0x28c0>
    cfc8:	mov	r2, #0
    cfcc:	mov	r3, #0
    cfd0:	strd	r2, [fp, #-76]	; 0xffffffb4
    cfd4:	ldr	r3, [fp, #-140]	; 0xffffff74
    cfd8:	str	r3, [fp, #-16]
    cfdc:	sub	r3, fp, #76	; 0x4c
    cfe0:	ldr	r2, [fp, #-144]	; 0xffffff70
    cfe4:	ldr	r1, [fp, #-16]
    cfe8:	ldr	r0, [fp, #-136]	; 0xffffff78
    cfec:	bl	20d8 <flatcc_json_parser_int64>
    cff0:	str	r0, [fp, #-140]	; 0xffffff74
    cff4:	ldr	r2, [fp, #-16]
    cff8:	ldr	r3, [fp, #-140]	; 0xffffff74
    cffc:	cmp	r2, r3
    d000:	bne	d04c <MyGame_Example_Monster_parse_json_table+0x2868>
    d004:	ldr	r3, [fp, #-140]	; 0xffffff74
    d008:	str	r3, [fp, #-16]
    d00c:	sub	r3, fp, #76	; 0x4c
    d010:	str	r3, [sp]
    d014:	ldr	r3, [pc, #556]	; d248 <MyGame_Example_Monster_parse_json_table+0x2a64>
    d018:	ldr	r2, [fp, #-144]	; 0xffffff70
    d01c:	ldr	r1, [fp, #-16]
    d020:	ldr	r0, [fp, #-136]	; 0xffffff78
    d024:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    d028:	str	r0, [fp, #-140]	; 0xffffff74
    d02c:	ldr	r2, [fp, #-140]	; 0xffffff74
    d030:	ldr	r3, [fp, #-16]
    d034:	cmp	r2, r3
    d038:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d03c:	ldr	r2, [fp, #-140]	; 0xffffff74
    d040:	ldr	r3, [fp, #-144]	; 0xffffff70
    d044:	cmp	r2, r3
    d048:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d04c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    d050:	orrs	r3, r2, r3
    d054:	bne	d06c <MyGame_Example_Monster_parse_json_table+0x2888>
    d058:	ldr	r3, [fp, #-136]	; 0xffffff78
    d05c:	ldr	r3, [r3, #8]
    d060:	and	r3, r3, #2
    d064:	cmp	r3, #0
    d068:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d06c:	ldr	r3, [fp, #-136]	; 0xffffff78
    d070:	ldr	r0, [r3]
    d074:	mov	r3, #8
    d078:	mov	r2, #8
    d07c:	mov	r1, #18
    d080:	bl	0 <flatcc_builder_table_add>
    d084:	str	r0, [fp, #-24]	; 0xffffffe8
    d088:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d08c:	cmp	r3, #0
    d090:	beq	e138 <MyGame_Example_Monster_parse_json_table+0x3954>
    d094:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    d098:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d09c:	bl	388 <flatbuffers_int64_write_to_pe>
    d0a0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d0a4:	ldr	r3, [fp, #-140]	; 0xffffff74
    d0a8:	add	r3, r3, #8
    d0ac:	str	r3, [fp, #-140]	; 0xffffff74
    d0b0:	ldr	r1, [fp, #-144]	; 0xffffff70
    d0b4:	ldr	r0, [fp, #-140]	; 0xffffff74
    d0b8:	bl	fa8 <flatcc_json_parser_symbol_part>
    d0bc:	strd	r0, [fp, #-12]
    d0c0:	ldrd	r2, [fp, #-12]
    d0c4:	mov	r0, #0
    d0c8:	mov	r1, #-16777216	; 0xff000000
    d0cc:	and	r2, r2, r0
    d0d0:	and	r3, r3, r1
    d0d4:	cmp	r3, #1627389952	; 0x61000000
    d0d8:	cmpeq	r2, #0
    d0dc:	bne	d204 <MyGame_Example_Monster_parse_json_table+0x2a20>
    d0e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    d0e4:	str	r3, [fp, #-16]
    d0e8:	mov	r3, #1
    d0ec:	ldr	r2, [fp, #-144]	; 0xffffff70
    d0f0:	ldr	r1, [fp, #-16]
    d0f4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d0f8:	bl	1574 <flatcc_json_parser_match_symbol>
    d0fc:	str	r0, [fp, #-140]	; 0xffffff74
    d100:	ldr	r2, [fp, #-16]
    d104:	ldr	r3, [fp, #-140]	; 0xffffff74
    d108:	cmp	r2, r3
    d10c:	beq	d1ec <MyGame_Example_Monster_parse_json_table+0x2a08>
    d110:	mov	r2, #0
    d114:	mov	r3, #0
    d118:	strd	r2, [fp, #-84]	; 0xffffffac
    d11c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d120:	str	r3, [fp, #-16]
    d124:	sub	r3, fp, #84	; 0x54
    d128:	ldr	r2, [fp, #-144]	; 0xffffff70
    d12c:	ldr	r1, [fp, #-16]
    d130:	ldr	r0, [fp, #-136]	; 0xffffff78
    d134:	bl	20d8 <flatcc_json_parser_int64>
    d138:	str	r0, [fp, #-140]	; 0xffffff74
    d13c:	ldr	r2, [fp, #-16]
    d140:	ldr	r3, [fp, #-140]	; 0xffffff74
    d144:	cmp	r2, r3
    d148:	bne	d194 <MyGame_Example_Monster_parse_json_table+0x29b0>
    d14c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d150:	str	r3, [fp, #-16]
    d154:	sub	r3, fp, #84	; 0x54
    d158:	str	r3, [sp]
    d15c:	ldr	r3, [pc, #232]	; d24c <MyGame_Example_Monster_parse_json_table+0x2a68>
    d160:	ldr	r2, [fp, #-144]	; 0xffffff70
    d164:	ldr	r1, [fp, #-16]
    d168:	ldr	r0, [fp, #-136]	; 0xffffff78
    d16c:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    d170:	str	r0, [fp, #-140]	; 0xffffff74
    d174:	ldr	r2, [fp, #-140]	; 0xffffff74
    d178:	ldr	r3, [fp, #-16]
    d17c:	cmp	r2, r3
    d180:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d184:	ldr	r2, [fp, #-140]	; 0xffffff74
    d188:	ldr	r3, [fp, #-144]	; 0xffffff70
    d18c:	cmp	r2, r3
    d190:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d194:	ldrd	r2, [fp, #-84]	; 0xffffffac
    d198:	orrs	r3, r2, r3
    d19c:	bne	d1b4 <MyGame_Example_Monster_parse_json_table+0x29d0>
    d1a0:	ldr	r3, [fp, #-136]	; 0xffffff78
    d1a4:	ldr	r3, [r3, #8]
    d1a8:	and	r3, r3, #2
    d1ac:	cmp	r3, #0
    d1b0:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d1b4:	ldr	r3, [fp, #-136]	; 0xffffff78
    d1b8:	ldr	r0, [r3]
    d1bc:	mov	r3, #8
    d1c0:	mov	r2, #8
    d1c4:	mov	r1, #22
    d1c8:	bl	0 <flatcc_builder_table_add>
    d1cc:	str	r0, [fp, #-24]	; 0xffffffe8
    d1d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d1d4:	cmp	r3, #0
    d1d8:	beq	e140 <MyGame_Example_Monster_parse_json_table+0x395c>
    d1dc:	ldrd	r2, [fp, #-84]	; 0xffffffac
    d1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1e4:	bl	388 <flatbuffers_int64_write_to_pe>
    d1e8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d1ec:	ldr	r2, [fp, #-144]	; 0xffffff70
    d1f0:	ldr	r1, [fp, #-140]	; 0xffffff74
    d1f4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d1f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1fc:	str	r0, [fp, #-140]	; 0xffffff74
    d200:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d204:	ldr	r2, [fp, #-144]	; 0xffffff70
    d208:	ldr	r1, [fp, #-140]	; 0xffffff74
    d20c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d210:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d214:	str	r0, [fp, #-140]	; 0xffffff74
    d218:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d21c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d220:	ldr	r1, [fp, #-140]	; 0xffffff74
    d224:	ldr	r0, [fp, #-136]	; 0xffffff78
    d228:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d22c:	str	r0, [fp, #-140]	; 0xffffff74
    d230:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d234:	nop			; (mov r0, r0)
    d238:	.word	0x666e7630
    d23c:	.word	0x7533325f
    d240:	.word	0x666e7631
    d244:	.word	0x7336345f
    d248:	.word	0x00000240
    d24c:	.word	0x0000024c
    d250:	ldrd	r2, [fp, #-12]
    d254:	add	r1, pc, #948	; 0x3b4
    d258:	ldrd	r0, [r1]
    d25c:	cmp	r3, r1
    d260:	cmpeq	r2, r0
    d264:	bne	d4ec <MyGame_Example_Monster_parse_json_table+0x2d08>
    d268:	ldr	r3, [fp, #-140]	; 0xffffff74
    d26c:	str	r3, [fp, #-16]
    d270:	mov	r3, #8
    d274:	ldr	r2, [fp, #-144]	; 0xffffff70
    d278:	ldr	r1, [fp, #-16]
    d27c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d280:	bl	1574 <flatcc_json_parser_match_symbol>
    d284:	str	r0, [fp, #-140]	; 0xffffff74
    d288:	ldr	r2, [fp, #-16]
    d28c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d290:	cmp	r2, r3
    d294:	beq	d374 <MyGame_Example_Monster_parse_json_table+0x2b90>
    d298:	mov	r3, #0
    d29c:	str	r3, [fp, #-88]	; 0xffffffa8
    d2a0:	ldr	r3, [fp, #-140]	; 0xffffff74
    d2a4:	str	r3, [fp, #-16]
    d2a8:	sub	r3, fp, #88	; 0x58
    d2ac:	ldr	r2, [fp, #-144]	; 0xffffff70
    d2b0:	ldr	r1, [fp, #-16]
    d2b4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d2b8:	bl	1e68 <flatcc_json_parser_uint32>
    d2bc:	str	r0, [fp, #-140]	; 0xffffff74
    d2c0:	ldr	r2, [fp, #-16]
    d2c4:	ldr	r3, [fp, #-140]	; 0xffffff74
    d2c8:	cmp	r2, r3
    d2cc:	bne	d318 <MyGame_Example_Monster_parse_json_table+0x2b34>
    d2d0:	ldr	r3, [fp, #-140]	; 0xffffff74
    d2d4:	str	r3, [fp, #-16]
    d2d8:	sub	r3, fp, #88	; 0x58
    d2dc:	str	r3, [sp]
    d2e0:	ldr	r3, [pc, #824]	; d620 <MyGame_Example_Monster_parse_json_table+0x2e3c>
    d2e4:	ldr	r2, [fp, #-144]	; 0xffffff70
    d2e8:	ldr	r1, [fp, #-16]
    d2ec:	ldr	r0, [fp, #-136]	; 0xffffff78
    d2f0:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    d2f4:	str	r0, [fp, #-140]	; 0xffffff74
    d2f8:	ldr	r2, [fp, #-140]	; 0xffffff74
    d2fc:	ldr	r3, [fp, #-16]
    d300:	cmp	r2, r3
    d304:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d308:	ldr	r2, [fp, #-140]	; 0xffffff74
    d30c:	ldr	r3, [fp, #-144]	; 0xffffff70
    d310:	cmp	r2, r3
    d314:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d318:	ldr	r3, [fp, #-88]	; 0xffffffa8
    d31c:	cmp	r3, #0
    d320:	bne	d338 <MyGame_Example_Monster_parse_json_table+0x2b54>
    d324:	ldr	r3, [fp, #-136]	; 0xffffff78
    d328:	ldr	r3, [r3, #8]
    d32c:	and	r3, r3, #2
    d330:	cmp	r3, #0
    d334:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d338:	ldr	r3, [fp, #-136]	; 0xffffff78
    d33c:	ldr	r0, [r3]
    d340:	mov	r3, #4
    d344:	mov	r2, #4
    d348:	mov	r1, #17
    d34c:	bl	0 <flatcc_builder_table_add>
    d350:	str	r0, [fp, #-24]	; 0xffffffe8
    d354:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d358:	cmp	r3, #0
    d35c:	beq	e148 <MyGame_Example_Monster_parse_json_table+0x3964>
    d360:	ldr	r3, [fp, #-88]	; 0xffffffa8
    d364:	mov	r1, r3
    d368:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d36c:	bl	f4 <flatbuffers_uint32_write_to_pe>
    d370:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d374:	ldr	r3, [fp, #-140]	; 0xffffff74
    d378:	add	r3, r3, #8
    d37c:	str	r3, [fp, #-140]	; 0xffffff74
    d380:	ldr	r1, [fp, #-144]	; 0xffffff70
    d384:	ldr	r0, [fp, #-140]	; 0xffffff74
    d388:	bl	fa8 <flatcc_json_parser_symbol_part>
    d38c:	strd	r0, [fp, #-12]
    d390:	ldrd	r2, [fp, #-12]
    d394:	mov	r0, #0
    d398:	mov	r1, #-16777216	; 0xff000000
    d39c:	and	r2, r2, r0
    d3a0:	and	r3, r3, r1
    d3a4:	cmp	r3, #1627389952	; 0x61000000
    d3a8:	cmpeq	r2, #0
    d3ac:	bne	d4d4 <MyGame_Example_Monster_parse_json_table+0x2cf0>
    d3b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    d3b4:	str	r3, [fp, #-16]
    d3b8:	mov	r3, #1
    d3bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    d3c0:	ldr	r1, [fp, #-16]
    d3c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d3c8:	bl	1574 <flatcc_json_parser_match_symbol>
    d3cc:	str	r0, [fp, #-140]	; 0xffffff74
    d3d0:	ldr	r2, [fp, #-16]
    d3d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    d3d8:	cmp	r2, r3
    d3dc:	beq	d4bc <MyGame_Example_Monster_parse_json_table+0x2cd8>
    d3e0:	mov	r3, #0
    d3e4:	str	r3, [fp, #-92]	; 0xffffffa4
    d3e8:	ldr	r3, [fp, #-140]	; 0xffffff74
    d3ec:	str	r3, [fp, #-16]
    d3f0:	sub	r3, fp, #92	; 0x5c
    d3f4:	ldr	r2, [fp, #-144]	; 0xffffff70
    d3f8:	ldr	r1, [fp, #-16]
    d3fc:	ldr	r0, [fp, #-136]	; 0xffffff78
    d400:	bl	1e68 <flatcc_json_parser_uint32>
    d404:	str	r0, [fp, #-140]	; 0xffffff74
    d408:	ldr	r2, [fp, #-16]
    d40c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d410:	cmp	r2, r3
    d414:	bne	d460 <MyGame_Example_Monster_parse_json_table+0x2c7c>
    d418:	ldr	r3, [fp, #-140]	; 0xffffff74
    d41c:	str	r3, [fp, #-16]
    d420:	sub	r3, fp, #92	; 0x5c
    d424:	str	r3, [sp]
    d428:	ldr	r3, [pc, #500]	; d624 <MyGame_Example_Monster_parse_json_table+0x2e40>
    d42c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d430:	ldr	r1, [fp, #-16]
    d434:	ldr	r0, [fp, #-136]	; 0xffffff78
    d438:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    d43c:	str	r0, [fp, #-140]	; 0xffffff74
    d440:	ldr	r2, [fp, #-140]	; 0xffffff74
    d444:	ldr	r3, [fp, #-16]
    d448:	cmp	r2, r3
    d44c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d450:	ldr	r2, [fp, #-140]	; 0xffffff74
    d454:	ldr	r3, [fp, #-144]	; 0xffffff70
    d458:	cmp	r2, r3
    d45c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d460:	ldr	r3, [fp, #-92]	; 0xffffffa4
    d464:	cmp	r3, #0
    d468:	bne	d480 <MyGame_Example_Monster_parse_json_table+0x2c9c>
    d46c:	ldr	r3, [fp, #-136]	; 0xffffff78
    d470:	ldr	r3, [r3, #8]
    d474:	and	r3, r3, #2
    d478:	cmp	r3, #0
    d47c:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d480:	ldr	r3, [fp, #-136]	; 0xffffff78
    d484:	ldr	r0, [r3]
    d488:	mov	r3, #4
    d48c:	mov	r2, #4
    d490:	mov	r1, #21
    d494:	bl	0 <flatcc_builder_table_add>
    d498:	str	r0, [fp, #-24]	; 0xffffffe8
    d49c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d4a0:	cmp	r3, #0
    d4a4:	beq	e150 <MyGame_Example_Monster_parse_json_table+0x396c>
    d4a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
    d4ac:	mov	r1, r3
    d4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d4b4:	bl	f4 <flatbuffers_uint32_write_to_pe>
    d4b8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d4bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    d4c0:	ldr	r1, [fp, #-140]	; 0xffffff74
    d4c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d4c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d4cc:	str	r0, [fp, #-140]	; 0xffffff74
    d4d0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d4d4:	ldr	r2, [fp, #-144]	; 0xffffff70
    d4d8:	ldr	r1, [fp, #-140]	; 0xffffff74
    d4dc:	ldr	r0, [fp, #-136]	; 0xffffff78
    d4e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d4e4:	str	r0, [fp, #-140]	; 0xffffff74
    d4e8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d4ec:	ldrd	r2, [fp, #-12]
    d4f0:	add	r1, pc, #288	; 0x120
    d4f4:	ldrd	r0, [r1]
    d4f8:	cmp	r3, r1
    d4fc:	cmpeq	r2, r0
    d500:	bne	d7a8 <MyGame_Example_Monster_parse_json_table+0x2fc4>
    d504:	ldr	r3, [fp, #-140]	; 0xffffff74
    d508:	str	r3, [fp, #-16]
    d50c:	mov	r3, #8
    d510:	ldr	r2, [fp, #-144]	; 0xffffff70
    d514:	ldr	r1, [fp, #-16]
    d518:	ldr	r0, [fp, #-136]	; 0xffffff78
    d51c:	bl	1574 <flatcc_json_parser_match_symbol>
    d520:	str	r0, [fp, #-140]	; 0xffffff74
    d524:	ldr	r2, [fp, #-16]
    d528:	ldr	r3, [fp, #-140]	; 0xffffff74
    d52c:	cmp	r2, r3
    d530:	beq	d630 <MyGame_Example_Monster_parse_json_table+0x2e4c>
    d534:	mov	r2, #0
    d538:	mov	r3, #0
    d53c:	strd	r2, [fp, #-100]	; 0xffffff9c
    d540:	ldr	r3, [fp, #-140]	; 0xffffff74
    d544:	str	r3, [fp, #-16]
    d548:	sub	r3, fp, #100	; 0x64
    d54c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d550:	ldr	r1, [fp, #-16]
    d554:	ldr	r0, [fp, #-136]	; 0xffffff78
    d558:	bl	1d94 <flatcc_json_parser_uint64>
    d55c:	str	r0, [fp, #-140]	; 0xffffff74
    d560:	ldr	r2, [fp, #-16]
    d564:	ldr	r3, [fp, #-140]	; 0xffffff74
    d568:	cmp	r2, r3
    d56c:	bne	d5b8 <MyGame_Example_Monster_parse_json_table+0x2dd4>
    d570:	ldr	r3, [fp, #-140]	; 0xffffff74
    d574:	str	r3, [fp, #-16]
    d578:	sub	r3, fp, #100	; 0x64
    d57c:	str	r3, [sp]
    d580:	ldr	r3, [pc, #160]	; d628 <MyGame_Example_Monster_parse_json_table+0x2e44>
    d584:	ldr	r2, [fp, #-144]	; 0xffffff70
    d588:	ldr	r1, [fp, #-16]
    d58c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d590:	bl	2520 <flatcc_json_parser_symbolic_uint64>
    d594:	str	r0, [fp, #-140]	; 0xffffff74
    d598:	ldr	r2, [fp, #-140]	; 0xffffff74
    d59c:	ldr	r3, [fp, #-16]
    d5a0:	cmp	r2, r3
    d5a4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d5a8:	ldr	r2, [fp, #-140]	; 0xffffff74
    d5ac:	ldr	r3, [fp, #-144]	; 0xffffff70
    d5b0:	cmp	r2, r3
    d5b4:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d5b8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    d5bc:	orrs	r3, r2, r3
    d5c0:	bne	d5d8 <MyGame_Example_Monster_parse_json_table+0x2df4>
    d5c4:	ldr	r3, [fp, #-136]	; 0xffffff78
    d5c8:	ldr	r3, [r3, #8]
    d5cc:	and	r3, r3, #2
    d5d0:	cmp	r3, #0
    d5d4:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d5d8:	ldr	r3, [fp, #-136]	; 0xffffff78
    d5dc:	ldr	r0, [r3]
    d5e0:	mov	r3, #8
    d5e4:	mov	r2, #8
    d5e8:	mov	r1, #19
    d5ec:	bl	0 <flatcc_builder_table_add>
    d5f0:	str	r0, [fp, #-24]	; 0xffffffe8
    d5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d5f8:	cmp	r3, #0
    d5fc:	beq	e158 <MyGame_Example_Monster_parse_json_table+0x3974>
    d600:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    d604:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d608:	bl	150 <flatbuffers_uint64_write_to_pe>
    d60c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d610:	.word	0x666e7631
    d614:	.word	0x7533325f
    d618:	.word	0x666e7631
    d61c:	.word	0x7536345f
    d620:	.word	0x00000258
    d624:	.word	0x00000264
    d628:	.word	0x00000270
    d62c:	.word	0x0000027c
    d630:	ldr	r3, [fp, #-140]	; 0xffffff74
    d634:	add	r3, r3, #8
    d638:	str	r3, [fp, #-140]	; 0xffffff74
    d63c:	ldr	r1, [fp, #-144]	; 0xffffff70
    d640:	ldr	r0, [fp, #-140]	; 0xffffff74
    d644:	bl	fa8 <flatcc_json_parser_symbol_part>
    d648:	strd	r0, [fp, #-12]
    d64c:	ldrd	r2, [fp, #-12]
    d650:	mov	r0, #0
    d654:	mov	r1, #-16777216	; 0xff000000
    d658:	and	r2, r2, r0
    d65c:	and	r3, r3, r1
    d660:	cmp	r3, #1627389952	; 0x61000000
    d664:	cmpeq	r2, #0
    d668:	bne	d790 <MyGame_Example_Monster_parse_json_table+0x2fac>
    d66c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d670:	str	r3, [fp, #-16]
    d674:	mov	r3, #1
    d678:	ldr	r2, [fp, #-144]	; 0xffffff70
    d67c:	ldr	r1, [fp, #-16]
    d680:	ldr	r0, [fp, #-136]	; 0xffffff78
    d684:	bl	1574 <flatcc_json_parser_match_symbol>
    d688:	str	r0, [fp, #-140]	; 0xffffff74
    d68c:	ldr	r2, [fp, #-16]
    d690:	ldr	r3, [fp, #-140]	; 0xffffff74
    d694:	cmp	r2, r3
    d698:	beq	d778 <MyGame_Example_Monster_parse_json_table+0x2f94>
    d69c:	mov	r2, #0
    d6a0:	mov	r3, #0
    d6a4:	strd	r2, [fp, #-108]	; 0xffffff94
    d6a8:	ldr	r3, [fp, #-140]	; 0xffffff74
    d6ac:	str	r3, [fp, #-16]
    d6b0:	sub	r3, fp, #108	; 0x6c
    d6b4:	ldr	r2, [fp, #-144]	; 0xffffff70
    d6b8:	ldr	r1, [fp, #-16]
    d6bc:	ldr	r0, [fp, #-136]	; 0xffffff78
    d6c0:	bl	1d94 <flatcc_json_parser_uint64>
    d6c4:	str	r0, [fp, #-140]	; 0xffffff74
    d6c8:	ldr	r2, [fp, #-16]
    d6cc:	ldr	r3, [fp, #-140]	; 0xffffff74
    d6d0:	cmp	r2, r3
    d6d4:	bne	d720 <MyGame_Example_Monster_parse_json_table+0x2f3c>
    d6d8:	ldr	r3, [fp, #-140]	; 0xffffff74
    d6dc:	str	r3, [fp, #-16]
    d6e0:	sub	r3, fp, #108	; 0x6c
    d6e4:	str	r3, [sp]
    d6e8:	ldr	r3, [pc, #-196]	; d62c <MyGame_Example_Monster_parse_json_table+0x2e48>
    d6ec:	ldr	r2, [fp, #-144]	; 0xffffff70
    d6f0:	ldr	r1, [fp, #-16]
    d6f4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d6f8:	bl	2520 <flatcc_json_parser_symbolic_uint64>
    d6fc:	str	r0, [fp, #-140]	; 0xffffff74
    d700:	ldr	r2, [fp, #-140]	; 0xffffff74
    d704:	ldr	r3, [fp, #-16]
    d708:	cmp	r2, r3
    d70c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d710:	ldr	r2, [fp, #-140]	; 0xffffff74
    d714:	ldr	r3, [fp, #-144]	; 0xffffff70
    d718:	cmp	r2, r3
    d71c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    d720:	ldrd	r2, [fp, #-108]	; 0xffffff94
    d724:	orrs	r3, r2, r3
    d728:	bne	d740 <MyGame_Example_Monster_parse_json_table+0x2f5c>
    d72c:	ldr	r3, [fp, #-136]	; 0xffffff78
    d730:	ldr	r3, [r3, #8]
    d734:	and	r3, r3, #2
    d738:	cmp	r3, #0
    d73c:	beq	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d740:	ldr	r3, [fp, #-136]	; 0xffffff78
    d744:	ldr	r0, [r3]
    d748:	mov	r3, #8
    d74c:	mov	r2, #8
    d750:	mov	r1, #23
    d754:	bl	0 <flatcc_builder_table_add>
    d758:	str	r0, [fp, #-24]	; 0xffffffe8
    d75c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d760:	cmp	r3, #0
    d764:	beq	e160 <MyGame_Example_Monster_parse_json_table+0x397c>
    d768:	ldrd	r2, [fp, #-108]	; 0xffffff94
    d76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d770:	bl	150 <flatbuffers_uint64_write_to_pe>
    d774:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d778:	ldr	r2, [fp, #-144]	; 0xffffff70
    d77c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d780:	ldr	r0, [fp, #-136]	; 0xffffff78
    d784:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d788:	str	r0, [fp, #-140]	; 0xffffff74
    d78c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d790:	ldr	r2, [fp, #-144]	; 0xffffff70
    d794:	ldr	r1, [fp, #-140]	; 0xffffff74
    d798:	ldr	r0, [fp, #-136]	; 0xffffff78
    d79c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d7a0:	str	r0, [fp, #-140]	; 0xffffff74
    d7a4:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d7a8:	ldr	r2, [fp, #-144]	; 0xffffff70
    d7ac:	ldr	r1, [fp, #-140]	; 0xffffff74
    d7b0:	ldr	r0, [fp, #-136]	; 0xffffff78
    d7b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d7b8:	str	r0, [fp, #-140]	; 0xffffff74
    d7bc:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    d7c0:	ldrd	r2, [fp, #-12]
    d7c4:	add	r1, pc, #812	; 0x32c
    d7c8:	ldrd	r0, [r1]
    d7cc:	cmp	r3, r1
    d7d0:	cmpeq	r2, r0
    d7d4:	bhi	db1c <MyGame_Example_Monster_parse_json_table+0x3338>
    d7d8:	ldrd	r2, [fp, #-12]
    d7dc:	add	r1, pc, #796	; 0x31c
    d7e0:	ldrd	r0, [r1]
    d7e4:	cmp	r3, r1
    d7e8:	cmpeq	r2, r0
    d7ec:	bne	dadc <MyGame_Example_Monster_parse_json_table+0x32f8>
    d7f0:	ldr	r3, [fp, #-140]	; 0xffffff74
    d7f4:	add	r3, r3, #8
    d7f8:	str	r3, [fp, #-140]	; 0xffffff74
    d7fc:	ldr	r1, [fp, #-144]	; 0xffffff70
    d800:	ldr	r0, [fp, #-140]	; 0xffffff74
    d804:	bl	fa8 <flatcc_json_parser_symbol_part>
    d808:	strd	r0, [fp, #-12]
    d80c:	ldrd	r2, [fp, #-12]
    d810:	add	r1, pc, #752	; 0x2f0
    d814:	ldrd	r0, [r1]
    d818:	cmp	r3, r1
    d81c:	cmpeq	r2, r0
    d820:	bne	dac4 <MyGame_Example_Monster_parse_json_table+0x32e0>
    d824:	ldr	r3, [fp, #-140]	; 0xffffff74
    d828:	add	r3, r3, #8
    d82c:	str	r3, [fp, #-140]	; 0xffffff74
    d830:	ldr	r1, [fp, #-144]	; 0xffffff70
    d834:	ldr	r0, [fp, #-140]	; 0xffffff74
    d838:	bl	fa8 <flatcc_json_parser_symbol_part>
    d83c:	strd	r0, [fp, #-12]
    d840:	ldrd	r2, [fp, #-12]
    d844:	mov	r0, #0
    d848:	mvn	r1, #0
    d84c:	and	r2, r2, r0
    d850:	and	r3, r3, r1
    d854:	add	r1, pc, #692	; 0x2b4
    d858:	ldrd	r0, [r1]
    d85c:	cmp	r3, r1
    d860:	cmpeq	r2, r0
    d864:	bne	daac <MyGame_Example_Monster_parse_json_table+0x32c8>
    d868:	ldr	r3, [fp, #-140]	; 0xffffff74
    d86c:	str	r3, [fp, #-16]
    d870:	mov	r3, #4
    d874:	ldr	r2, [fp, #-144]	; 0xffffff70
    d878:	ldr	r1, [fp, #-16]
    d87c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d880:	bl	1574 <flatcc_json_parser_match_symbol>
    d884:	str	r0, [fp, #-140]	; 0xffffff74
    d888:	ldr	r2, [fp, #-16]
    d88c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d890:	cmp	r2, r3
    d894:	beq	da94 <MyGame_Example_Monster_parse_json_table+0x32b0>
    d898:	ldr	r2, [fp, #-140]	; 0xffffff74
    d89c:	ldr	r3, [fp, #-144]	; 0xffffff70
    d8a0:	cmp	r2, r3
    d8a4:	beq	d9ec <MyGame_Example_Monster_parse_json_table+0x3208>
    d8a8:	ldr	r3, [fp, #-140]	; 0xffffff74
    d8ac:	ldrb	r3, [r3]
    d8b0:	cmp	r3, #91	; 0x5b
    d8b4:	bne	d9ec <MyGame_Example_Monster_parse_json_table+0x3208>
    d8b8:	ldr	r3, [fp, #-136]	; 0xffffff78
    d8bc:	ldr	r0, [r3]
    d8c0:	mvn	r3, #0
    d8c4:	mov	r2, #1
    d8c8:	mov	r1, #1
    d8cc:	bl	0 <flatcc_builder_start_vector>
    d8d0:	mov	r3, r0
    d8d4:	cmp	r3, #0
    d8d8:	bne	e168 <MyGame_Example_Monster_parse_json_table+0x3984>
    d8dc:	sub	r3, fp, #28
    d8e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    d8e4:	ldr	r1, [fp, #-140]	; 0xffffff74
    d8e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    d8ec:	bl	1324 <flatcc_json_parser_array_start>
    d8f0:	str	r0, [fp, #-140]	; 0xffffff74
    d8f4:	b	d9c4 <MyGame_Example_Monster_parse_json_table+0x31e0>
    d8f8:	mov	r3, #0
    d8fc:	strb	r3, [fp, #-109]	; 0xffffff93
    d900:	ldr	r3, [fp, #-136]	; 0xffffff78
    d904:	ldr	r3, [r3]
    d908:	mov	r1, #1
    d90c:	mov	r0, r3
    d910:	bl	0 <flatcc_builder_extend_vector>
    d914:	str	r0, [fp, #-24]	; 0xffffffe8
    d918:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d91c:	cmp	r3, #0
    d920:	beq	e170 <MyGame_Example_Monster_parse_json_table+0x398c>
    d924:	ldr	r3, [fp, #-140]	; 0xffffff74
    d928:	str	r3, [fp, #-16]
    d92c:	sub	r3, fp, #109	; 0x6d
    d930:	ldr	r2, [fp, #-144]	; 0xffffff70
    d934:	ldr	r1, [fp, #-16]
    d938:	ldr	r0, [fp, #-136]	; 0xffffff78
    d93c:	bl	2008 <flatcc_json_parser_uint8>
    d940:	str	r0, [fp, #-140]	; 0xffffff74
    d944:	ldr	r2, [fp, #-16]
    d948:	ldr	r3, [fp, #-140]	; 0xffffff74
    d94c:	cmp	r2, r3
    d950:	bne	d99c <MyGame_Example_Monster_parse_json_table+0x31b8>
    d954:	ldr	r3, [fp, #-140]	; 0xffffff74
    d958:	str	r3, [fp, #-16]
    d95c:	sub	r3, fp, #109	; 0x6d
    d960:	str	r3, [sp]
    d964:	ldr	r3, [pc, #428]	; db18 <MyGame_Example_Monster_parse_json_table+0x3334>
    d968:	ldr	r2, [fp, #-144]	; 0xffffff70
    d96c:	ldr	r1, [fp, #-16]
    d970:	ldr	r0, [fp, #-136]	; 0xffffff78
    d974:	bl	2a94 <flatcc_json_parser_symbolic_uint8>
    d978:	str	r0, [fp, #-140]	; 0xffffff74
    d97c:	ldr	r2, [fp, #-140]	; 0xffffff74
    d980:	ldr	r3, [fp, #-16]
    d984:	cmp	r2, r3
    d988:	beq	e170 <MyGame_Example_Monster_parse_json_table+0x398c>
    d98c:	ldr	r2, [fp, #-140]	; 0xffffff74
    d990:	ldr	r3, [fp, #-144]	; 0xffffff70
    d994:	cmp	r2, r3
    d998:	beq	e170 <MyGame_Example_Monster_parse_json_table+0x398c>
    d99c:	ldrb	r3, [fp, #-109]	; 0xffffff93
    d9a0:	mov	r1, r3
    d9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d9a8:	bl	28 <flatbuffers_uint8_write_to_pe>
    d9ac:	sub	r3, fp, #28
    d9b0:	ldr	r2, [fp, #-144]	; 0xffffff70
    d9b4:	ldr	r1, [fp, #-140]	; 0xffffff74
    d9b8:	ldr	r0, [fp, #-136]	; 0xffffff78
    d9bc:	bl	140c <flatcc_json_parser_array_end>
    d9c0:	str	r0, [fp, #-140]	; 0xffffff74
    d9c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d9c8:	cmp	r3, #0
    d9cc:	bne	d8f8 <MyGame_Example_Monster_parse_json_table+0x3114>
    d9d0:	ldr	r3, [fp, #-136]	; 0xffffff78
    d9d4:	ldr	r3, [r3]
    d9d8:	mov	r0, r3
    d9dc:	bl	0 <flatcc_builder_end_vector>
    d9e0:	mov	r3, r0
    d9e4:	str	r3, [fp, #-32]	; 0xffffffe0
    d9e8:	b	da54 <MyGame_Example_Monster_parse_json_table+0x3270>
    d9ec:	ldr	r3, [fp, #-136]	; 0xffffff78
    d9f0:	ldr	r0, [r3]
    d9f4:	mov	r3, #0
    d9f8:	mov	r2, #0
    d9fc:	mov	r1, #0
    da00:	bl	0 <flatcc_builder_start_buffer>
    da04:	mov	r3, r0
    da08:	cmp	r3, #0
    da0c:	bne	e178 <MyGame_Example_Monster_parse_json_table+0x3994>
    da10:	sub	r3, fp, #32
    da14:	ldr	r2, [fp, #-144]	; 0xffffff70
    da18:	ldr	r1, [fp, #-140]	; 0xffffff74
    da1c:	ldr	r0, [fp, #-136]	; 0xffffff78
    da20:	bl	a7e4 <MyGame_Example_Monster_parse_json_table>
    da24:	str	r0, [fp, #-140]	; 0xffffff74
    da28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    da2c:	cmp	r3, #0
    da30:	beq	e180 <MyGame_Example_Monster_parse_json_table+0x399c>
    da34:	ldr	r3, [fp, #-136]	; 0xffffff78
    da38:	ldr	r3, [r3]
    da3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    da40:	mov	r1, r2
    da44:	mov	r0, r3
    da48:	bl	0 <flatcc_builder_end_buffer>
    da4c:	mov	r3, r0
    da50:	str	r3, [fp, #-32]	; 0xffffffe0
    da54:	ldr	r3, [fp, #-32]	; 0xffffffe0
    da58:	cmp	r3, #0
    da5c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    da60:	ldr	r3, [fp, #-136]	; 0xffffff78
    da64:	ldr	r3, [r3]
    da68:	mov	r1, #13
    da6c:	mov	r0, r3
    da70:	bl	0 <flatcc_builder_table_add_offset>
    da74:	str	r0, [fp, #-20]	; 0xffffffec
    da78:	ldr	r3, [fp, #-20]	; 0xffffffec
    da7c:	cmp	r3, #0
    da80:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    da84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    da88:	ldr	r3, [fp, #-20]	; 0xffffffec
    da8c:	str	r2, [r3]
    da90:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    da94:	ldr	r2, [fp, #-144]	; 0xffffff70
    da98:	ldr	r1, [fp, #-140]	; 0xffffff74
    da9c:	ldr	r0, [fp, #-136]	; 0xffffff78
    daa0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    daa4:	str	r0, [fp, #-140]	; 0xffffff74
    daa8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    daac:	ldr	r2, [fp, #-144]	; 0xffffff70
    dab0:	ldr	r1, [fp, #-140]	; 0xffffff74
    dab4:	ldr	r0, [fp, #-136]	; 0xffffff78
    dab8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dabc:	str	r0, [fp, #-140]	; 0xffffff74
    dac0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    dac4:	ldr	r2, [fp, #-144]	; 0xffffff70
    dac8:	ldr	r1, [fp, #-140]	; 0xffffff74
    dacc:	ldr	r0, [fp, #-136]	; 0xffffff78
    dad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dad4:	str	r0, [fp, #-140]	; 0xffffff74
    dad8:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    dadc:	ldr	r2, [fp, #-144]	; 0xffffff70
    dae0:	ldr	r1, [fp, #-140]	; 0xffffff74
    dae4:	ldr	r0, [fp, #-136]	; 0xffffff78
    dae8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    daec:	str	r0, [fp, #-140]	; 0xffffff74
    daf0:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    daf4:	nop			; (mov r0, r0)
    daf8:	.word	0x6f725f6e
    dafc:	.word	0x76656374
    db00:	.word	0x6e657374
    db04:	.word	0x74657374
    db08:	.word	0x61746275
    db0c:	.word	0x6564666c
    db10:	.word	0x00000000
    db14:	.word	0x66666572
    db18:	.word	0x00000288
    db1c:	ldrd	r2, [fp, #-12]
    db20:	add	r1, pc, #744	; 0x2e8
    db24:	ldrd	r0, [r1]
    db28:	cmp	r3, r1
    db2c:	cmpeq	r2, r0
    db30:	bne	df90 <MyGame_Example_Monster_parse_json_table+0x37ac>
    db34:	ldr	r3, [fp, #-140]	; 0xffffff74
    db38:	add	r3, r3, #8
    db3c:	str	r3, [fp, #-140]	; 0xffffff74
    db40:	ldr	r1, [fp, #-144]	; 0xffffff70
    db44:	ldr	r0, [fp, #-140]	; 0xffffff74
    db48:	bl	fa8 <flatcc_json_parser_symbol_part>
    db4c:	strd	r0, [fp, #-12]
    db50:	ldrd	r2, [fp, #-12]
    db54:	add	r1, pc, #700	; 0x2bc
    db58:	ldrd	r0, [r1]
    db5c:	cmp	r3, r1
    db60:	cmpeq	r2, r0
    db64:	bne	dd78 <MyGame_Example_Monster_parse_json_table+0x3594>
    db68:	ldr	r3, [fp, #-140]	; 0xffffff74
    db6c:	add	r3, r3, #8
    db70:	str	r3, [fp, #-140]	; 0xffffff74
    db74:	ldr	r1, [fp, #-144]	; 0xffffff70
    db78:	ldr	r0, [fp, #-140]	; 0xffffff74
    db7c:	bl	fa8 <flatcc_json_parser_symbol_part>
    db80:	strd	r0, [fp, #-12]
    db84:	ldrd	r2, [fp, #-12]
    db88:	mov	r0, #0
    db8c:	mov	r1, #-16777216	; 0xff000000
    db90:	and	r2, r2, r0
    db94:	and	r3, r3, r1
    db98:	cmp	r3, #1929379840	; 0x73000000
    db9c:	cmpeq	r2, #0
    dba0:	bne	dd60 <MyGame_Example_Monster_parse_json_table+0x357c>
    dba4:	ldr	r3, [fp, #-140]	; 0xffffff74
    dba8:	str	r3, [fp, #-16]
    dbac:	mov	r3, #1
    dbb0:	ldr	r2, [fp, #-144]	; 0xffffff70
    dbb4:	ldr	r1, [fp, #-16]
    dbb8:	ldr	r0, [fp, #-136]	; 0xffffff78
    dbbc:	bl	1574 <flatcc_json_parser_match_symbol>
    dbc0:	str	r0, [fp, #-140]	; 0xffffff74
    dbc4:	ldr	r2, [fp, #-16]
    dbc8:	ldr	r3, [fp, #-140]	; 0xffffff74
    dbcc:	cmp	r2, r3
    dbd0:	beq	dd48 <MyGame_Example_Monster_parse_json_table+0x3564>
    dbd4:	ldr	r3, [fp, #-136]	; 0xffffff78
    dbd8:	ldr	r0, [r3]
    dbdc:	mvn	r3, #-536870912	; 0xe0000000
    dbe0:	mov	r2, #8
    dbe4:	mov	r1, #8
    dbe8:	bl	0 <flatcc_builder_start_vector>
    dbec:	mov	r3, r0
    dbf0:	cmp	r3, #0
    dbf4:	bne	e188 <MyGame_Example_Monster_parse_json_table+0x39a4>
    dbf8:	sub	r3, fp, #28
    dbfc:	ldr	r2, [fp, #-144]	; 0xffffff70
    dc00:	ldr	r1, [fp, #-140]	; 0xffffff74
    dc04:	ldr	r0, [fp, #-136]	; 0xffffff78
    dc08:	bl	1324 <flatcc_json_parser_array_start>
    dc0c:	str	r0, [fp, #-140]	; 0xffffff74
    dc10:	b	dce4 <MyGame_Example_Monster_parse_json_table+0x3500>
    dc14:	mov	r2, #0
    dc18:	mov	r3, #0
    dc1c:	strd	r2, [fp, #-124]	; 0xffffff84
    dc20:	ldr	r3, [fp, #-136]	; 0xffffff78
    dc24:	ldr	r3, [r3]
    dc28:	mov	r1, #1
    dc2c:	mov	r0, r3
    dc30:	bl	0 <flatcc_builder_extend_vector>
    dc34:	str	r0, [fp, #-24]	; 0xffffffe8
    dc38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dc3c:	cmp	r3, #0
    dc40:	beq	e190 <MyGame_Example_Monster_parse_json_table+0x39ac>
    dc44:	ldr	r3, [fp, #-140]	; 0xffffff74
    dc48:	str	r3, [fp, #-16]
    dc4c:	sub	r3, fp, #124	; 0x7c
    dc50:	ldr	r2, [fp, #-144]	; 0xffffff70
    dc54:	ldr	r1, [fp, #-16]
    dc58:	ldr	r0, [fp, #-136]	; 0xffffff78
    dc5c:	bl	0 <flatcc_json_parser_double>
    dc60:	str	r0, [fp, #-140]	; 0xffffff74
    dc64:	ldr	r2, [fp, #-16]
    dc68:	ldr	r3, [fp, #-140]	; 0xffffff74
    dc6c:	cmp	r2, r3
    dc70:	bne	dcbc <MyGame_Example_Monster_parse_json_table+0x34d8>
    dc74:	ldr	r3, [fp, #-140]	; 0xffffff74
    dc78:	str	r3, [fp, #-16]
    dc7c:	sub	r3, fp, #124	; 0x7c
    dc80:	str	r3, [sp]
    dc84:	ldr	r3, [pc, #412]	; de28 <MyGame_Example_Monster_parse_json_table+0x3644>
    dc88:	ldr	r2, [fp, #-144]	; 0xffffff70
    dc8c:	ldr	r1, [fp, #-16]
    dc90:	ldr	r0, [fp, #-136]	; 0xffffff78
    dc94:	bl	375c <flatcc_json_parser_symbolic_double>
    dc98:	str	r0, [fp, #-140]	; 0xffffff74
    dc9c:	ldr	r2, [fp, #-140]	; 0xffffff74
    dca0:	ldr	r3, [fp, #-16]
    dca4:	cmp	r2, r3
    dca8:	beq	e190 <MyGame_Example_Monster_parse_json_table+0x39ac>
    dcac:	ldr	r2, [fp, #-140]	; 0xffffff74
    dcb0:	ldr	r3, [fp, #-144]	; 0xffffff70
    dcb4:	cmp	r2, r3
    dcb8:	beq	e190 <MyGame_Example_Monster_parse_json_table+0x39ac>
    dcbc:	vldr	d7, [fp, #-124]	; 0xffffff84
    dcc0:	vmov.f64	d0, d7
    dcc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dcc8:	bl	534 <flatbuffers_double_write_to_pe>
    dccc:	sub	r3, fp, #28
    dcd0:	ldr	r2, [fp, #-144]	; 0xffffff70
    dcd4:	ldr	r1, [fp, #-140]	; 0xffffff74
    dcd8:	ldr	r0, [fp, #-136]	; 0xffffff78
    dcdc:	bl	140c <flatcc_json_parser_array_end>
    dce0:	str	r0, [fp, #-140]	; 0xffffff74
    dce4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dce8:	cmp	r3, #0
    dcec:	bne	dc14 <MyGame_Example_Monster_parse_json_table+0x3430>
    dcf0:	ldr	r3, [fp, #-136]	; 0xffffff78
    dcf4:	ldr	r3, [r3]
    dcf8:	mov	r0, r3
    dcfc:	bl	0 <flatcc_builder_end_vector>
    dd00:	mov	r3, r0
    dd04:	str	r3, [fp, #-32]	; 0xffffffe0
    dd08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    dd0c:	cmp	r3, #0
    dd10:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    dd14:	ldr	r3, [fp, #-136]	; 0xffffff78
    dd18:	ldr	r3, [r3]
    dd1c:	mov	r1, #33	; 0x21
    dd20:	mov	r0, r3
    dd24:	bl	0 <flatcc_builder_table_add_offset>
    dd28:	str	r0, [fp, #-20]	; 0xffffffec
    dd2c:	ldr	r3, [fp, #-20]	; 0xffffffec
    dd30:	cmp	r3, #0
    dd34:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    dd38:	ldr	r2, [fp, #-32]	; 0xffffffe0
    dd3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    dd40:	str	r2, [r3]
    dd44:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    dd48:	ldr	r2, [fp, #-144]	; 0xffffff70
    dd4c:	ldr	r1, [fp, #-140]	; 0xffffff74
    dd50:	ldr	r0, [fp, #-136]	; 0xffffff78
    dd54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dd58:	str	r0, [fp, #-140]	; 0xffffff74
    dd5c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    dd60:	ldr	r2, [fp, #-144]	; 0xffffff70
    dd64:	ldr	r1, [fp, #-140]	; 0xffffff74
    dd68:	ldr	r0, [fp, #-136]	; 0xffffff78
    dd6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dd70:	str	r0, [fp, #-140]	; 0xffffff74
    dd74:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    dd78:	ldrd	r2, [fp, #-12]
    dd7c:	mvn	r0, #255	; 0xff
    dd80:	mvn	r1, #0
    dd84:	and	r2, r2, r0
    dd88:	and	r3, r3, r1
    dd8c:	add	r1, pc, #140	; 0x8c
    dd90:	ldrd	r0, [r1]
    dd94:	cmp	r3, r1
    dd98:	cmpeq	r2, r0
    dd9c:	bne	df78 <MyGame_Example_Monster_parse_json_table+0x3794>
    dda0:	ldr	r3, [fp, #-140]	; 0xffffff74
    dda4:	str	r3, [fp, #-16]
    dda8:	mov	r3, #7
    ddac:	ldr	r2, [fp, #-144]	; 0xffffff70
    ddb0:	ldr	r1, [fp, #-16]
    ddb4:	ldr	r0, [fp, #-136]	; 0xffffff78
    ddb8:	bl	1574 <flatcc_json_parser_match_symbol>
    ddbc:	str	r0, [fp, #-140]	; 0xffffff74
    ddc0:	ldr	r2, [fp, #-16]
    ddc4:	ldr	r3, [fp, #-140]	; 0xffffff74
    ddc8:	cmp	r2, r3
    ddcc:	beq	df60 <MyGame_Example_Monster_parse_json_table+0x377c>
    ddd0:	ldr	r3, [fp, #-136]	; 0xffffff78
    ddd4:	ldr	r0, [r3]
    ddd8:	mvn	r3, #-536870912	; 0xe0000000
    dddc:	mov	r2, #8
    dde0:	mov	r1, #8
    dde4:	bl	0 <flatcc_builder_start_vector>
    dde8:	mov	r3, r0
    ddec:	cmp	r3, #0
    ddf0:	bne	e198 <MyGame_Example_Monster_parse_json_table+0x39b4>
    ddf4:	sub	r3, fp, #28
    ddf8:	ldr	r2, [fp, #-144]	; 0xffffff70
    ddfc:	ldr	r1, [fp, #-140]	; 0xffffff74
    de00:	ldr	r0, [fp, #-136]	; 0xffffff78
    de04:	bl	1324 <flatcc_json_parser_array_start>
    de08:	str	r0, [fp, #-140]	; 0xffffff74
    de0c:	b	defc <MyGame_Example_Monster_parse_json_table+0x3718>
    de10:	.word	0x6f725f6f
    de14:	.word	0x76656374
    de18:	.word	0x75626c65
    de1c:	.word	0x665f646f
    de20:	.word	0x6e677300
    de24:	.word	0x665f6c6f
    de28:	.word	0x00000294
    de2c:	.word	0x000002a0
    de30:	mov	r2, #0
    de34:	mov	r3, #0
    de38:	strd	r2, [fp, #-132]	; 0xffffff7c
    de3c:	ldr	r3, [fp, #-136]	; 0xffffff78
    de40:	ldr	r3, [r3]
    de44:	mov	r1, #1
    de48:	mov	r0, r3
    de4c:	bl	0 <flatcc_builder_extend_vector>
    de50:	str	r0, [fp, #-24]	; 0xffffffe8
    de54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    de58:	cmp	r3, #0
    de5c:	beq	e1a0 <MyGame_Example_Monster_parse_json_table+0x39bc>
    de60:	ldr	r3, [fp, #-140]	; 0xffffff74
    de64:	str	r3, [fp, #-16]
    de68:	sub	r3, fp, #132	; 0x84
    de6c:	ldr	r2, [fp, #-144]	; 0xffffff70
    de70:	ldr	r1, [fp, #-16]
    de74:	ldr	r0, [fp, #-136]	; 0xffffff78
    de78:	bl	20d8 <flatcc_json_parser_int64>
    de7c:	str	r0, [fp, #-140]	; 0xffffff74
    de80:	ldr	r2, [fp, #-16]
    de84:	ldr	r3, [fp, #-140]	; 0xffffff74
    de88:	cmp	r2, r3
    de8c:	bne	ded8 <MyGame_Example_Monster_parse_json_table+0x36f4>
    de90:	ldr	r3, [fp, #-140]	; 0xffffff74
    de94:	str	r3, [fp, #-16]
    de98:	sub	r3, fp, #132	; 0x84
    de9c:	str	r3, [sp]
    dea0:	ldr	r3, [pc, #-124]	; de2c <MyGame_Example_Monster_parse_json_table+0x3648>
    dea4:	ldr	r2, [fp, #-144]	; 0xffffff70
    dea8:	ldr	r1, [fp, #-16]
    deac:	ldr	r0, [fp, #-136]	; 0xffffff78
    deb0:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    deb4:	str	r0, [fp, #-140]	; 0xffffff74
    deb8:	ldr	r2, [fp, #-140]	; 0xffffff74
    debc:	ldr	r3, [fp, #-16]
    dec0:	cmp	r2, r3
    dec4:	beq	e1a0 <MyGame_Example_Monster_parse_json_table+0x39bc>
    dec8:	ldr	r2, [fp, #-140]	; 0xffffff74
    decc:	ldr	r3, [fp, #-144]	; 0xffffff70
    ded0:	cmp	r2, r3
    ded4:	beq	e1a0 <MyGame_Example_Monster_parse_json_table+0x39bc>
    ded8:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    dedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dee0:	bl	388 <flatbuffers_int64_write_to_pe>
    dee4:	sub	r3, fp, #28
    dee8:	ldr	r2, [fp, #-144]	; 0xffffff70
    deec:	ldr	r1, [fp, #-140]	; 0xffffff74
    def0:	ldr	r0, [fp, #-136]	; 0xffffff78
    def4:	bl	140c <flatcc_json_parser_array_end>
    def8:	str	r0, [fp, #-140]	; 0xffffff74
    defc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    df00:	cmp	r3, #0
    df04:	bne	de30 <MyGame_Example_Monster_parse_json_table+0x364c>
    df08:	ldr	r3, [fp, #-136]	; 0xffffff78
    df0c:	ldr	r3, [r3]
    df10:	mov	r0, r3
    df14:	bl	0 <flatcc_builder_end_vector>
    df18:	mov	r3, r0
    df1c:	str	r3, [fp, #-32]	; 0xffffffe0
    df20:	ldr	r3, [fp, #-32]	; 0xffffffe0
    df24:	cmp	r3, #0
    df28:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    df2c:	ldr	r3, [fp, #-136]	; 0xffffff78
    df30:	ldr	r3, [r3]
    df34:	mov	r1, #32
    df38:	mov	r0, r3
    df3c:	bl	0 <flatcc_builder_table_add_offset>
    df40:	str	r0, [fp, #-20]	; 0xffffffec
    df44:	ldr	r3, [fp, #-20]	; 0xffffffec
    df48:	cmp	r3, #0
    df4c:	beq	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    df50:	ldr	r2, [fp, #-32]	; 0xffffffe0
    df54:	ldr	r3, [fp, #-20]	; 0xffffffec
    df58:	str	r2, [r3]
    df5c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    df60:	ldr	r2, [fp, #-144]	; 0xffffff70
    df64:	ldr	r1, [fp, #-140]	; 0xffffff74
    df68:	ldr	r0, [fp, #-136]	; 0xffffff78
    df6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    df70:	str	r0, [fp, #-140]	; 0xffffff74
    df74:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    df78:	ldr	r2, [fp, #-144]	; 0xffffff70
    df7c:	ldr	r1, [fp, #-140]	; 0xffffff74
    df80:	ldr	r0, [fp, #-136]	; 0xffffff78
    df84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    df88:	str	r0, [fp, #-140]	; 0xffffff74
    df8c:	b	dfa4 <MyGame_Example_Monster_parse_json_table+0x37c0>
    df90:	ldr	r2, [fp, #-144]	; 0xffffff70
    df94:	ldr	r1, [fp, #-140]	; 0xffffff74
    df98:	ldr	r0, [fp, #-136]	; 0xffffff78
    df9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dfa0:	str	r0, [fp, #-140]	; 0xffffff74
    dfa4:	sub	r3, fp, #28
    dfa8:	ldr	r2, [fp, #-144]	; 0xffffff70
    dfac:	ldr	r1, [fp, #-140]	; 0xffffff74
    dfb0:	ldr	r0, [fp, #-136]	; 0xffffff78
    dfb4:	bl	11bc <flatcc_json_parser_object_end>
    dfb8:	str	r0, [fp, #-140]	; 0xffffff74
    dfbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dfc0:	cmp	r3, #0
    dfc4:	bne	a874 <MyGame_Example_Monster_parse_json_table+0x90>
    dfc8:	ldr	r3, [fp, #-136]	; 0xffffff78
    dfcc:	ldr	r3, [r3, #24]
    dfd0:	cmp	r3, #0
    dfd4:	bne	e1a8 <MyGame_Example_Monster_parse_json_table+0x39c4>
    dfd8:	ldr	r3, [fp, #-136]	; 0xffffff78
    dfdc:	ldr	r3, [r3]
    dfe0:	mov	r1, #3
    dfe4:	mov	r0, r3
    dfe8:	bl	0 <flatcc_builder_check_required_field>
    dfec:	mov	r3, r0
    dff0:	cmp	r3, #0
    dff4:	bne	e014 <MyGame_Example_Monster_parse_json_table+0x3830>
    dff8:	mov	r3, #29
    dffc:	ldr	r2, [fp, #-144]	; 0xffffff70
    e000:	ldr	r1, [fp, #-140]	; 0xffffff74
    e004:	ldr	r0, [fp, #-136]	; 0xffffff78
    e008:	bl	0 <flatcc_json_parser_set_error>
    e00c:	str	r0, [fp, #-140]	; 0xffffff74
    e010:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e014:	ldr	r3, [fp, #-36]	; 0xffffffdc
    e018:	ldr	r2, [fp, #-144]	; 0xffffff70
    e01c:	ldr	r1, [fp, #-140]	; 0xffffff74
    e020:	ldr	r0, [fp, #-136]	; 0xffffff78
    e024:	bl	0 <flatcc_json_parser_finalize_unions>
    e028:	str	r0, [fp, #-140]	; 0xffffff74
    e02c:	ldr	r3, [fp, #-136]	; 0xffffff78
    e030:	ldr	r3, [r3]
    e034:	mov	r0, r3
    e038:	bl	0 <flatcc_builder_end_table>
    e03c:	mov	r2, r0
    e040:	ldr	r3, [fp, #-148]	; 0xffffff6c
    e044:	str	r2, [r3]
    e048:	ldr	r3, [fp, #-148]	; 0xffffff6c
    e04c:	ldr	r3, [r3]
    e050:	cmp	r3, #0
    e054:	beq	e1b0 <MyGame_Example_Monster_parse_json_table+0x39cc>
    e058:	ldr	r3, [fp, #-140]	; 0xffffff74
    e05c:	b	e1cc <MyGame_Example_Monster_parse_json_table+0x39e8>
    e060:	nop			; (mov r0, r0)
    e064:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e068:	nop			; (mov r0, r0)
    e06c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e070:	nop			; (mov r0, r0)
    e074:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e078:	nop			; (mov r0, r0)
    e07c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e080:	nop			; (mov r0, r0)
    e084:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e088:	nop			; (mov r0, r0)
    e08c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e090:	nop			; (mov r0, r0)
    e094:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e098:	nop			; (mov r0, r0)
    e09c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0a0:	nop			; (mov r0, r0)
    e0a4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0a8:	nop			; (mov r0, r0)
    e0ac:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0b0:	nop			; (mov r0, r0)
    e0b4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0b8:	nop			; (mov r0, r0)
    e0bc:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0c0:	nop			; (mov r0, r0)
    e0c4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0c8:	nop			; (mov r0, r0)
    e0cc:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0d0:	nop			; (mov r0, r0)
    e0d4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0d8:	nop			; (mov r0, r0)
    e0dc:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0e0:	nop			; (mov r0, r0)
    e0e4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0e8:	nop			; (mov r0, r0)
    e0ec:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0f0:	nop			; (mov r0, r0)
    e0f4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e0f8:	nop			; (mov r0, r0)
    e0fc:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e100:	nop			; (mov r0, r0)
    e104:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e108:	nop			; (mov r0, r0)
    e10c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e110:	nop			; (mov r0, r0)
    e114:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e118:	nop			; (mov r0, r0)
    e11c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e120:	nop			; (mov r0, r0)
    e124:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e128:	nop			; (mov r0, r0)
    e12c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e130:	nop			; (mov r0, r0)
    e134:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e138:	nop			; (mov r0, r0)
    e13c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e140:	nop			; (mov r0, r0)
    e144:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e148:	nop			; (mov r0, r0)
    e14c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e150:	nop			; (mov r0, r0)
    e154:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e158:	nop			; (mov r0, r0)
    e15c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e160:	nop			; (mov r0, r0)
    e164:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e168:	nop			; (mov r0, r0)
    e16c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e170:	nop			; (mov r0, r0)
    e174:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e178:	nop			; (mov r0, r0)
    e17c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e180:	nop			; (mov r0, r0)
    e184:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e188:	nop			; (mov r0, r0)
    e18c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e190:	nop			; (mov r0, r0)
    e194:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e198:	nop			; (mov r0, r0)
    e19c:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e1a0:	nop			; (mov r0, r0)
    e1a4:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e1a8:	nop			; (mov r0, r0)
    e1ac:	b	e1b4 <MyGame_Example_Monster_parse_json_table+0x39d0>
    e1b0:	nop			; (mov r0, r0)
    e1b4:	mov	r3, #33	; 0x21
    e1b8:	ldr	r2, [fp, #-144]	; 0xffffff70
    e1bc:	ldr	r1, [fp, #-140]	; 0xffffff74
    e1c0:	ldr	r0, [fp, #-136]	; 0xffffff78
    e1c4:	bl	0 <flatcc_json_parser_set_error>
    e1c8:	mov	r3, r0
    e1cc:	mov	r0, r3
    e1d0:	sub	sp, fp, #4
    e1d4:	pop	{fp, pc}

0000e1d8 <MyGame_Example_TypeAliases_parse_json_table>:
    e1d8:	push	{fp, lr}
    e1dc:	add	fp, sp, #4
    e1e0:	sub	sp, sp, #128	; 0x80
    e1e4:	str	r0, [fp, #-112]	; 0xffffff90
    e1e8:	str	r1, [fp, #-116]	; 0xffffff8c
    e1ec:	str	r2, [fp, #-120]	; 0xffffff88
    e1f0:	str	r3, [fp, #-124]	; 0xffffff84
    e1f4:	ldr	r3, [fp, #-124]	; 0xffffff84
    e1f8:	mov	r2, #0
    e1fc:	str	r2, [r3]
    e200:	ldr	r3, [fp, #-112]	; 0xffffff90
    e204:	ldr	r3, [r3]
    e208:	mov	r1, #12
    e20c:	mov	r0, r3
    e210:	bl	0 <flatcc_builder_start_table>
    e214:	mov	r3, r0
    e218:	cmp	r3, #0
    e21c:	bne	f5b0 <MyGame_Example_TypeAliases_parse_json_table+0x13d8>
    e220:	sub	r3, fp, #32
    e224:	ldr	r2, [fp, #-120]	; 0xffffff88
    e228:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e22c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e230:	bl	10d4 <flatcc_json_parser_object_start>
    e234:	str	r0, [fp, #-116]	; 0xffffff8c
    e238:	b	f560 <MyGame_Example_TypeAliases_parse_json_table+0x1388>
    e23c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e240:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e244:	ldr	r0, [fp, #-112]	; 0xffffff90
    e248:	bl	cc4 <flatcc_json_parser_symbol_start>
    e24c:	str	r0, [fp, #-116]	; 0xffffff8c
    e250:	ldr	r1, [fp, #-120]	; 0xffffff88
    e254:	ldr	r0, [fp, #-116]	; 0xffffff8c
    e258:	bl	fa8 <flatcc_json_parser_symbol_part>
    e25c:	strd	r0, [fp, #-12]
    e260:	ldrd	r2, [fp, #-12]
    e264:	mvn	r0, #0
    e268:	ldr	r1, [pc, #760]	; e568 <MyGame_Example_TypeAliases_parse_json_table+0x390>
    e26c:	cmp	r3, r1
    e270:	cmpeq	r2, r0
    e274:	bhi	e9c4 <MyGame_Example_TypeAliases_parse_json_table+0x7ec>
    e278:	ldrd	r2, [fp, #-12]
    e27c:	add	r1, pc, #716	; 0x2cc
    e280:	ldrd	r0, [r1]
    e284:	cmp	r3, r1
    e288:	cmpeq	r2, r0
    e28c:	bhi	e574 <MyGame_Example_TypeAliases_parse_json_table+0x39c>
    e290:	ldrd	r2, [fp, #-12]
    e294:	mov	r0, #0
    e298:	mvn	r1, #255	; 0xff
    e29c:	and	r2, r2, r0
    e2a0:	and	r3, r3, r1
    e2a4:	add	r1, pc, #684	; 0x2ac
    e2a8:	ldrd	r0, [r1]
    e2ac:	cmp	r3, r1
    e2b0:	cmpeq	r2, r0
    e2b4:	bne	e3e4 <MyGame_Example_TypeAliases_parse_json_table+0x20c>
    e2b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e2bc:	str	r3, [fp, #-16]
    e2c0:	mov	r3, #3
    e2c4:	ldr	r2, [fp, #-120]	; 0xffffff88
    e2c8:	ldr	r1, [fp, #-16]
    e2cc:	ldr	r0, [fp, #-112]	; 0xffffff90
    e2d0:	bl	1574 <flatcc_json_parser_match_symbol>
    e2d4:	str	r0, [fp, #-116]	; 0xffffff8c
    e2d8:	ldr	r2, [fp, #-16]
    e2dc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e2e0:	cmp	r2, r3
    e2e4:	beq	e3cc <MyGame_Example_TypeAliases_parse_json_table+0x1f4>
    e2e8:	mov	r2, #0
    e2ec:	mov	r3, #0
    e2f0:	strd	r2, [fp, #-44]	; 0xffffffd4
    e2f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e2f8:	str	r3, [fp, #-16]
    e2fc:	sub	r3, fp, #44	; 0x2c
    e300:	ldr	r2, [fp, #-120]	; 0xffffff88
    e304:	ldr	r1, [fp, #-16]
    e308:	ldr	r0, [fp, #-112]	; 0xffffff90
    e30c:	bl	0 <flatcc_json_parser_double>
    e310:	str	r0, [fp, #-116]	; 0xffffff8c
    e314:	ldr	r2, [fp, #-16]
    e318:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e31c:	cmp	r2, r3
    e320:	bne	e36c <MyGame_Example_TypeAliases_parse_json_table+0x194>
    e324:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e328:	str	r3, [fp, #-16]
    e32c:	sub	r3, fp, #44	; 0x2c
    e330:	str	r3, [sp]
    e334:	ldr	r3, [pc, #560]	; e56c <MyGame_Example_TypeAliases_parse_json_table+0x394>
    e338:	ldr	r2, [fp, #-120]	; 0xffffff88
    e33c:	ldr	r1, [fp, #-16]
    e340:	ldr	r0, [fp, #-112]	; 0xffffff90
    e344:	bl	375c <flatcc_json_parser_symbolic_double>
    e348:	str	r0, [fp, #-116]	; 0xffffff8c
    e34c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e350:	ldr	r3, [fp, #-16]
    e354:	cmp	r2, r3
    e358:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e35c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e360:	ldr	r3, [fp, #-120]	; 0xffffff88
    e364:	cmp	r2, r3
    e368:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e36c:	vldr	d7, [fp, #-44]	; 0xffffffd4
    e370:	vcmp.f64	d7, #0.0
    e374:	vmrs	APSR_nzcv, fpscr
    e378:	bne	e390 <MyGame_Example_TypeAliases_parse_json_table+0x1b8>
    e37c:	ldr	r3, [fp, #-112]	; 0xffffff90
    e380:	ldr	r3, [r3, #8]
    e384:	and	r3, r3, #2
    e388:	cmp	r3, #0
    e38c:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e390:	ldr	r3, [fp, #-112]	; 0xffffff90
    e394:	ldr	r0, [r3]
    e398:	mov	r3, #8
    e39c:	mov	r2, #8
    e3a0:	mov	r1, #9
    e3a4:	bl	0 <flatcc_builder_table_add>
    e3a8:	str	r0, [fp, #-20]	; 0xffffffec
    e3ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    e3b0:	cmp	r3, #0
    e3b4:	beq	f5b8 <MyGame_Example_TypeAliases_parse_json_table+0x13e0>
    e3b8:	vldr	d7, [fp, #-44]	; 0xffffffd4
    e3bc:	vmov.f64	d0, d7
    e3c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e3c4:	bl	534 <flatbuffers_double_write_to_pe>
    e3c8:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e3cc:	ldr	r2, [fp, #-120]	; 0xffffff88
    e3d0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e3d4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e3d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e3dc:	str	r0, [fp, #-116]	; 0xffffff8c
    e3e0:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e3e4:	ldrd	r2, [fp, #-12]
    e3e8:	mov	r0, #0
    e3ec:	mvn	r1, #255	; 0xff
    e3f0:	and	r2, r2, r0
    e3f4:	and	r3, r3, r1
    e3f8:	add	r1, pc, #352	; 0x160
    e3fc:	ldrd	r0, [r1]
    e400:	cmp	r3, r1
    e404:	cmpeq	r2, r0
    e408:	bne	e534 <MyGame_Example_TypeAliases_parse_json_table+0x35c>
    e40c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e410:	str	r3, [fp, #-16]
    e414:	mov	r3, #3
    e418:	ldr	r2, [fp, #-120]	; 0xffffff88
    e41c:	ldr	r1, [fp, #-16]
    e420:	ldr	r0, [fp, #-112]	; 0xffffff90
    e424:	bl	1574 <flatcc_json_parser_match_symbol>
    e428:	str	r0, [fp, #-116]	; 0xffffff8c
    e42c:	ldr	r2, [fp, #-16]
    e430:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e434:	cmp	r2, r3
    e438:	beq	e51c <MyGame_Example_TypeAliases_parse_json_table+0x344>
    e43c:	mov	r3, #0
    e440:	str	r3, [fp, #-48]	; 0xffffffd0
    e444:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e448:	str	r3, [fp, #-16]
    e44c:	sub	r3, fp, #48	; 0x30
    e450:	ldr	r2, [fp, #-120]	; 0xffffff88
    e454:	ldr	r1, [fp, #-16]
    e458:	ldr	r0, [fp, #-112]	; 0xffffff90
    e45c:	bl	0 <flatcc_json_parser_float>
    e460:	str	r0, [fp, #-116]	; 0xffffff8c
    e464:	ldr	r2, [fp, #-16]
    e468:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e46c:	cmp	r2, r3
    e470:	bne	e4bc <MyGame_Example_TypeAliases_parse_json_table+0x2e4>
    e474:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e478:	str	r3, [fp, #-16]
    e47c:	sub	r3, fp, #48	; 0x30
    e480:	str	r3, [sp]
    e484:	ldr	r3, [pc, #228]	; e570 <MyGame_Example_TypeAliases_parse_json_table+0x398>
    e488:	ldr	r2, [fp, #-120]	; 0xffffff88
    e48c:	ldr	r1, [fp, #-16]
    e490:	ldr	r0, [fp, #-112]	; 0xffffff90
    e494:	bl	3590 <flatcc_json_parser_symbolic_float>
    e498:	str	r0, [fp, #-116]	; 0xffffff8c
    e49c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e4a0:	ldr	r3, [fp, #-16]
    e4a4:	cmp	r2, r3
    e4a8:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e4ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e4b0:	ldr	r3, [fp, #-120]	; 0xffffff88
    e4b4:	cmp	r2, r3
    e4b8:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e4bc:	vldr	s15, [fp, #-48]	; 0xffffffd0
    e4c0:	vcmp.f32	s15, #0.0
    e4c4:	vmrs	APSR_nzcv, fpscr
    e4c8:	bne	e4e0 <MyGame_Example_TypeAliases_parse_json_table+0x308>
    e4cc:	ldr	r3, [fp, #-112]	; 0xffffff90
    e4d0:	ldr	r3, [r3, #8]
    e4d4:	and	r3, r3, #2
    e4d8:	cmp	r3, #0
    e4dc:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e4e0:	ldr	r3, [fp, #-112]	; 0xffffff90
    e4e4:	ldr	r0, [r3]
    e4e8:	mov	r3, #4
    e4ec:	mov	r2, #4
    e4f0:	mov	r1, #8
    e4f4:	bl	0 <flatcc_builder_table_add>
    e4f8:	str	r0, [fp, #-20]	; 0xffffffec
    e4fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    e500:	cmp	r3, #0
    e504:	beq	f5c0 <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e508:	vldr	s15, [fp, #-48]	; 0xffffffd0
    e50c:	vmov.f32	s0, s15
    e510:	ldr	r0, [fp, #-20]	; 0xffffffec
    e514:	bl	460 <flatbuffers_float_write_to_pe>
    e518:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e51c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e520:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e524:	ldr	r0, [fp, #-112]	; 0xffffff90
    e528:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e52c:	str	r0, [fp, #-116]	; 0xffffff8c
    e530:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e534:	ldr	r2, [fp, #-120]	; 0xffffff88
    e538:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e53c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e540:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e544:	str	r0, [fp, #-116]	; 0xffffff8c
    e548:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e54c:	nop			; (mov r0, r0)
    e550:	.word	0xffffffff
    e554:	.word	0x693135ff
    e558:	.word	0x00000000
    e55c:	.word	0x66363400
    e560:	.word	0x00000000
    e564:	.word	0x66333200
    e568:	.word	0x6937ffff
    e56c:	.word	0x000002ac
    e570:	.word	0x000002b8
    e574:	ldrd	r2, [fp, #-12]
    e578:	add	r1, pc, #704	; 0x2c0
    e57c:	ldrd	r0, [r1]
    e580:	cmp	r3, r1
    e584:	cmpeq	r2, r0
    e588:	bhi	e6f0 <MyGame_Example_TypeAliases_parse_json_table+0x518>
    e58c:	ldrd	r2, [fp, #-12]
    e590:	mov	r0, #0
    e594:	mvn	r1, #255	; 0xff
    e598:	and	r2, r2, r0
    e59c:	and	r3, r3, r1
    e5a0:	add	r1, pc, #672	; 0x2a0
    e5a4:	ldrd	r0, [r1]
    e5a8:	cmp	r3, r1
    e5ac:	cmpeq	r2, r0
    e5b0:	bne	e6d8 <MyGame_Example_TypeAliases_parse_json_table+0x500>
    e5b4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5b8:	str	r3, [fp, #-16]
    e5bc:	mov	r3, #3
    e5c0:	ldr	r2, [fp, #-120]	; 0xffffff88
    e5c4:	ldr	r1, [fp, #-16]
    e5c8:	ldr	r0, [fp, #-112]	; 0xffffff90
    e5cc:	bl	1574 <flatcc_json_parser_match_symbol>
    e5d0:	str	r0, [fp, #-116]	; 0xffffff8c
    e5d4:	ldr	r2, [fp, #-16]
    e5d8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5dc:	cmp	r2, r3
    e5e0:	beq	e6c0 <MyGame_Example_TypeAliases_parse_json_table+0x4e8>
    e5e4:	mov	r3, #0
    e5e8:	strh	r3, [fp, #-50]	; 0xffffffce
    e5ec:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5f0:	str	r3, [fp, #-16]
    e5f4:	sub	r3, fp, #50	; 0x32
    e5f8:	ldr	r2, [fp, #-120]	; 0xffffff88
    e5fc:	ldr	r1, [fp, #-16]
    e600:	ldr	r0, [fp, #-112]	; 0xffffff90
    e604:	bl	227c <flatcc_json_parser_int16>
    e608:	str	r0, [fp, #-116]	; 0xffffff8c
    e60c:	ldr	r2, [fp, #-16]
    e610:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e614:	cmp	r2, r3
    e618:	bne	e664 <MyGame_Example_TypeAliases_parse_json_table+0x48c>
    e61c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e620:	str	r3, [fp, #-16]
    e624:	sub	r3, fp, #50	; 0x32
    e628:	str	r3, [sp]
    e62c:	ldr	r3, [pc, #548]	; e858 <MyGame_Example_TypeAliases_parse_json_table+0x680>
    e630:	ldr	r2, [fp, #-120]	; 0xffffff88
    e634:	ldr	r1, [fp, #-16]
    e638:	ldr	r0, [fp, #-112]	; 0xffffff90
    e63c:	bl	3008 <flatcc_json_parser_symbolic_int16>
    e640:	str	r0, [fp, #-116]	; 0xffffff8c
    e644:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e648:	ldr	r3, [fp, #-16]
    e64c:	cmp	r2, r3
    e650:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e654:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e658:	ldr	r3, [fp, #-120]	; 0xffffff88
    e65c:	cmp	r2, r3
    e660:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e664:	ldrsh	r3, [fp, #-50]	; 0xffffffce
    e668:	cmp	r3, #0
    e66c:	bne	e684 <MyGame_Example_TypeAliases_parse_json_table+0x4ac>
    e670:	ldr	r3, [fp, #-112]	; 0xffffff90
    e674:	ldr	r3, [r3, #8]
    e678:	and	r3, r3, #2
    e67c:	cmp	r3, #0
    e680:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e684:	ldr	r3, [fp, #-112]	; 0xffffff90
    e688:	ldr	r0, [r3]
    e68c:	mov	r3, #2
    e690:	mov	r2, #2
    e694:	mov	r1, #2
    e698:	bl	0 <flatcc_builder_table_add>
    e69c:	str	r0, [fp, #-20]	; 0xffffffec
    e6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    e6a4:	cmp	r3, #0
    e6a8:	beq	f5c8 <MyGame_Example_TypeAliases_parse_json_table+0x13f0>
    e6ac:	ldrsh	r3, [fp, #-50]	; 0xffffffce
    e6b0:	mov	r1, r3
    e6b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    e6b8:	bl	2c8 <flatbuffers_int16_write_to_pe>
    e6bc:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e6c0:	ldr	r2, [fp, #-120]	; 0xffffff88
    e6c4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e6c8:	ldr	r0, [fp, #-112]	; 0xffffff90
    e6cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6d0:	str	r0, [fp, #-116]	; 0xffffff8c
    e6d4:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e6d8:	ldr	r2, [fp, #-120]	; 0xffffff88
    e6dc:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e6e0:	ldr	r0, [fp, #-112]	; 0xffffff90
    e6e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6e8:	str	r0, [fp, #-116]	; 0xffffff8c
    e6ec:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e6f0:	ldrd	r2, [fp, #-12]
    e6f4:	mov	r0, #0
    e6f8:	mvn	r1, #255	; 0xff
    e6fc:	and	r2, r2, r0
    e700:	and	r3, r3, r1
    e704:	add	r1, pc, #324	; 0x144
    e708:	ldrd	r0, [r1]
    e70c:	cmp	r3, r1
    e710:	cmpeq	r2, r0
    e714:	bne	e860 <MyGame_Example_TypeAliases_parse_json_table+0x688>
    e718:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e71c:	str	r3, [fp, #-16]
    e720:	mov	r3, #3
    e724:	ldr	r2, [fp, #-120]	; 0xffffff88
    e728:	ldr	r1, [fp, #-16]
    e72c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e730:	bl	1574 <flatcc_json_parser_match_symbol>
    e734:	str	r0, [fp, #-116]	; 0xffffff8c
    e738:	ldr	r2, [fp, #-16]
    e73c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e740:	cmp	r2, r3
    e744:	beq	e824 <MyGame_Example_TypeAliases_parse_json_table+0x64c>
    e748:	mov	r2, #0
    e74c:	mov	r3, #0
    e750:	strd	r2, [fp, #-60]	; 0xffffffc4
    e754:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e758:	str	r3, [fp, #-16]
    e75c:	sub	r3, fp, #60	; 0x3c
    e760:	ldr	r2, [fp, #-120]	; 0xffffff88
    e764:	ldr	r1, [fp, #-16]
    e768:	ldr	r0, [fp, #-112]	; 0xffffff90
    e76c:	bl	20d8 <flatcc_json_parser_int64>
    e770:	str	r0, [fp, #-116]	; 0xffffff8c
    e774:	ldr	r2, [fp, #-16]
    e778:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e77c:	cmp	r2, r3
    e780:	bne	e7cc <MyGame_Example_TypeAliases_parse_json_table+0x5f4>
    e784:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e788:	str	r3, [fp, #-16]
    e78c:	sub	r3, fp, #60	; 0x3c
    e790:	str	r3, [sp]
    e794:	ldr	r3, [pc, #192]	; e85c <MyGame_Example_TypeAliases_parse_json_table+0x684>
    e798:	ldr	r2, [fp, #-120]	; 0xffffff88
    e79c:	ldr	r1, [fp, #-16]
    e7a0:	ldr	r0, [fp, #-112]	; 0xffffff90
    e7a4:	bl	2c64 <flatcc_json_parser_symbolic_int64>
    e7a8:	str	r0, [fp, #-116]	; 0xffffff8c
    e7ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e7b0:	ldr	r3, [fp, #-16]
    e7b4:	cmp	r2, r3
    e7b8:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e7bc:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e7c0:	ldr	r3, [fp, #-120]	; 0xffffff88
    e7c4:	cmp	r2, r3
    e7c8:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e7cc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    e7d0:	orrs	r3, r2, r3
    e7d4:	bne	e7ec <MyGame_Example_TypeAliases_parse_json_table+0x614>
    e7d8:	ldr	r3, [fp, #-112]	; 0xffffff90
    e7dc:	ldr	r3, [r3, #8]
    e7e0:	and	r3, r3, #2
    e7e4:	cmp	r3, #0
    e7e8:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e7ec:	ldr	r3, [fp, #-112]	; 0xffffff90
    e7f0:	ldr	r0, [r3]
    e7f4:	mov	r3, #8
    e7f8:	mov	r2, #8
    e7fc:	mov	r1, #6
    e800:	bl	0 <flatcc_builder_table_add>
    e804:	str	r0, [fp, #-20]	; 0xffffffec
    e808:	ldr	r3, [fp, #-20]	; 0xffffffec
    e80c:	cmp	r3, #0
    e810:	beq	f5d0 <MyGame_Example_TypeAliases_parse_json_table+0x13f8>
    e814:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    e818:	ldr	r0, [fp, #-20]	; 0xffffffec
    e81c:	bl	388 <flatbuffers_int64_write_to_pe>
    e820:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e824:	ldr	r2, [fp, #-120]	; 0xffffff88
    e828:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e82c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e830:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e834:	str	r0, [fp, #-116]	; 0xffffff8c
    e838:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e83c:	nop			; (mov r0, r0)
    e840:	.word	0xffffffff
    e844:	.word	0x693331ff
    e848:	.word	0x00000000
    e84c:	.word	0x69313600
    e850:	.word	0x00000000
    e854:	.word	0x69363400
    e858:	.word	0x000002c4
    e85c:	.word	0x000002d0
    e860:	ldrd	r2, [fp, #-12]
    e864:	mov	r0, #0
    e868:	mvn	r1, #255	; 0xff
    e86c:	and	r2, r2, r0
    e870:	and	r3, r3, r1
    e874:	add	r1, pc, #732	; 0x2dc
    e878:	ldrd	r0, [r1]
    e87c:	cmp	r3, r1
    e880:	cmpeq	r2, r0
    e884:	bne	e9ac <MyGame_Example_TypeAliases_parse_json_table+0x7d4>
    e888:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e88c:	str	r3, [fp, #-16]
    e890:	mov	r3, #3
    e894:	ldr	r2, [fp, #-120]	; 0xffffff88
    e898:	ldr	r1, [fp, #-16]
    e89c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e8a0:	bl	1574 <flatcc_json_parser_match_symbol>
    e8a4:	str	r0, [fp, #-116]	; 0xffffff8c
    e8a8:	ldr	r2, [fp, #-16]
    e8ac:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8b0:	cmp	r2, r3
    e8b4:	beq	e994 <MyGame_Example_TypeAliases_parse_json_table+0x7bc>
    e8b8:	mov	r3, #0
    e8bc:	str	r3, [fp, #-64]	; 0xffffffc0
    e8c0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8c4:	str	r3, [fp, #-16]
    e8c8:	sub	r3, fp, #64	; 0x40
    e8cc:	ldr	r2, [fp, #-120]	; 0xffffff88
    e8d0:	ldr	r1, [fp, #-16]
    e8d4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e8d8:	bl	21ac <flatcc_json_parser_int32>
    e8dc:	str	r0, [fp, #-116]	; 0xffffff8c
    e8e0:	ldr	r2, [fp, #-16]
    e8e4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8e8:	cmp	r2, r3
    e8ec:	bne	e938 <MyGame_Example_TypeAliases_parse_json_table+0x760>
    e8f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8f4:	str	r3, [fp, #-16]
    e8f8:	sub	r3, fp, #64	; 0x40
    e8fc:	str	r3, [sp]
    e900:	ldr	r3, [pc, #616]	; eb70 <MyGame_Example_TypeAliases_parse_json_table+0x998>
    e904:	ldr	r2, [fp, #-120]	; 0xffffff88
    e908:	ldr	r1, [fp, #-16]
    e90c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e910:	bl	2e3c <flatcc_json_parser_symbolic_int32>
    e914:	str	r0, [fp, #-116]	; 0xffffff8c
    e918:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e91c:	ldr	r3, [fp, #-16]
    e920:	cmp	r2, r3
    e924:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e928:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e92c:	ldr	r3, [fp, #-120]	; 0xffffff88
    e930:	cmp	r2, r3
    e934:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e938:	ldr	r3, [fp, #-64]	; 0xffffffc0
    e93c:	cmp	r3, #0
    e940:	bne	e958 <MyGame_Example_TypeAliases_parse_json_table+0x780>
    e944:	ldr	r3, [fp, #-112]	; 0xffffff90
    e948:	ldr	r3, [r3, #8]
    e94c:	and	r3, r3, #2
    e950:	cmp	r3, #0
    e954:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e958:	ldr	r3, [fp, #-112]	; 0xffffff90
    e95c:	ldr	r0, [r3]
    e960:	mov	r3, #4
    e964:	mov	r2, #4
    e968:	mov	r1, #4
    e96c:	bl	0 <flatcc_builder_table_add>
    e970:	str	r0, [fp, #-20]	; 0xffffffec
    e974:	ldr	r3, [fp, #-20]	; 0xffffffec
    e978:	cmp	r3, #0
    e97c:	beq	f5d8 <MyGame_Example_TypeAliases_parse_json_table+0x1400>
    e980:	ldr	r3, [fp, #-64]	; 0xffffffc0
    e984:	mov	r1, r3
    e988:	ldr	r0, [fp, #-20]	; 0xffffffec
    e98c:	bl	32c <flatbuffers_int32_write_to_pe>
    e990:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e994:	ldr	r2, [fp, #-120]	; 0xffffff88
    e998:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e99c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e9a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e9a4:	str	r0, [fp, #-116]	; 0xffffff8c
    e9a8:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e9ac:	ldr	r2, [fp, #-120]	; 0xffffff88
    e9b0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e9b4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e9b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e9bc:	str	r0, [fp, #-116]	; 0xffffff8c
    e9c0:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e9c4:	ldrd	r2, [fp, #-12]
    e9c8:	add	r1, pc, #400	; 0x190
    e9cc:	ldrd	r0, [r1]
    e9d0:	cmp	r3, r1
    e9d4:	cmpeq	r2, r0
    e9d8:	bhi	ee4c <MyGame_Example_TypeAliases_parse_json_table+0xc74>
    e9dc:	ldrd	r2, [fp, #-12]
    e9e0:	add	r1, pc, #384	; 0x180
    e9e4:	ldrd	r0, [r1]
    e9e8:	cmp	r3, r1
    e9ec:	cmpeq	r2, r0
    e9f0:	bhi	eb80 <MyGame_Example_TypeAliases_parse_json_table+0x9a8>
    e9f4:	ldrd	r2, [fp, #-12]
    e9f8:	mov	r0, #0
    e9fc:	ldr	r1, [pc, #368]	; eb74 <MyGame_Example_TypeAliases_parse_json_table+0x99c>
    ea00:	and	r2, r2, r0
    ea04:	and	r3, r3, r1
    ea08:	mov	r0, #0
    ea0c:	ldr	r1, [pc, #356]	; eb78 <MyGame_Example_TypeAliases_parse_json_table+0x9a0>
    ea10:	cmp	r3, r1
    ea14:	cmpeq	r2, r0
    ea18:	bne	eb40 <MyGame_Example_TypeAliases_parse_json_table+0x968>
    ea1c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea20:	str	r3, [fp, #-16]
    ea24:	mov	r3, #2
    ea28:	ldr	r2, [fp, #-120]	; 0xffffff88
    ea2c:	ldr	r1, [fp, #-16]
    ea30:	ldr	r0, [fp, #-112]	; 0xffffff90
    ea34:	bl	1574 <flatcc_json_parser_match_symbol>
    ea38:	str	r0, [fp, #-116]	; 0xffffff8c
    ea3c:	ldr	r2, [fp, #-16]
    ea40:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea44:	cmp	r2, r3
    ea48:	beq	eb28 <MyGame_Example_TypeAliases_parse_json_table+0x950>
    ea4c:	mov	r3, #0
    ea50:	strb	r3, [fp, #-65]	; 0xffffffbf
    ea54:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea58:	str	r3, [fp, #-16]
    ea5c:	sub	r3, fp, #65	; 0x41
    ea60:	ldr	r2, [fp, #-120]	; 0xffffff88
    ea64:	ldr	r1, [fp, #-16]
    ea68:	ldr	r0, [fp, #-112]	; 0xffffff90
    ea6c:	bl	234c <flatcc_json_parser_int8>
    ea70:	str	r0, [fp, #-116]	; 0xffffff8c
    ea74:	ldr	r2, [fp, #-16]
    ea78:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea7c:	cmp	r2, r3
    ea80:	bne	eacc <MyGame_Example_TypeAliases_parse_json_table+0x8f4>
    ea84:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea88:	str	r3, [fp, #-16]
    ea8c:	sub	r3, fp, #65	; 0x41
    ea90:	str	r3, [sp]
    ea94:	ldr	r3, [pc, #224]	; eb7c <MyGame_Example_TypeAliases_parse_json_table+0x9a4>
    ea98:	ldr	r2, [fp, #-120]	; 0xffffff88
    ea9c:	ldr	r1, [fp, #-16]
    eaa0:	ldr	r0, [fp, #-112]	; 0xffffff90
    eaa4:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    eaa8:	str	r0, [fp, #-116]	; 0xffffff8c
    eaac:	ldr	r2, [fp, #-116]	; 0xffffff8c
    eab0:	ldr	r3, [fp, #-16]
    eab4:	cmp	r2, r3
    eab8:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eabc:	ldr	r2, [fp, #-116]	; 0xffffff8c
    eac0:	ldr	r3, [fp, #-120]	; 0xffffff88
    eac4:	cmp	r2, r3
    eac8:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eacc:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
    ead0:	cmp	r3, #0
    ead4:	bne	eaec <MyGame_Example_TypeAliases_parse_json_table+0x914>
    ead8:	ldr	r3, [fp, #-112]	; 0xffffff90
    eadc:	ldr	r3, [r3, #8]
    eae0:	and	r3, r3, #2
    eae4:	cmp	r3, #0
    eae8:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    eaec:	ldr	r3, [fp, #-112]	; 0xffffff90
    eaf0:	ldr	r0, [r3]
    eaf4:	mov	r3, #1
    eaf8:	mov	r2, #1
    eafc:	mov	r1, #0
    eb00:	bl	0 <flatcc_builder_table_add>
    eb04:	str	r0, [fp, #-20]	; 0xffffffec
    eb08:	ldr	r3, [fp, #-20]	; 0xffffffec
    eb0c:	cmp	r3, #0
    eb10:	beq	f5e0 <MyGame_Example_TypeAliases_parse_json_table+0x1408>
    eb14:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
    eb18:	mov	r1, r3
    eb1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    eb20:	bl	208 <flatbuffers_int8_write_to_pe>
    eb24:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    eb28:	ldr	r2, [fp, #-120]	; 0xffffff88
    eb2c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    eb30:	ldr	r0, [fp, #-112]	; 0xffffff90
    eb34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb38:	str	r0, [fp, #-116]	; 0xffffff8c
    eb3c:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    eb40:	ldr	r2, [fp, #-120]	; 0xffffff88
    eb44:	ldr	r1, [fp, #-116]	; 0xffffff8c
    eb48:	ldr	r0, [fp, #-112]	; 0xffffff90
    eb4c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb50:	str	r0, [fp, #-116]	; 0xffffff8c
    eb54:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    eb58:	.word	0x00000000
    eb5c:	.word	0x69333200
    eb60:	.word	0xffffffff
    eb64:	.word	0x753633ff
    eb68:	.word	0xffffffff
    eb6c:	.word	0x753135ff
    eb70:	.word	0x000002dc
    eb74:	.word	0xffff0000
    eb78:	.word	0x69380000
    eb7c:	.word	0x000002e8
    eb80:	ldrd	r2, [fp, #-12]
    eb84:	mov	r0, #0
    eb88:	mvn	r1, #255	; 0xff
    eb8c:	and	r2, r2, r0
    eb90:	and	r3, r3, r1
    eb94:	add	r1, pc, #660	; 0x294
    eb98:	ldrd	r0, [r1]
    eb9c:	cmp	r3, r1
    eba0:	cmpeq	r2, r0
    eba4:	bne	eccc <MyGame_Example_TypeAliases_parse_json_table+0xaf4>
    eba8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ebac:	str	r3, [fp, #-16]
    ebb0:	mov	r3, #3
    ebb4:	ldr	r2, [fp, #-120]	; 0xffffff88
    ebb8:	ldr	r1, [fp, #-16]
    ebbc:	ldr	r0, [fp, #-112]	; 0xffffff90
    ebc0:	bl	1574 <flatcc_json_parser_match_symbol>
    ebc4:	str	r0, [fp, #-116]	; 0xffffff8c
    ebc8:	ldr	r2, [fp, #-16]
    ebcc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ebd0:	cmp	r2, r3
    ebd4:	beq	ecb4 <MyGame_Example_TypeAliases_parse_json_table+0xadc>
    ebd8:	mov	r3, #0
    ebdc:	str	r3, [fp, #-72]	; 0xffffffb8
    ebe0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ebe4:	str	r3, [fp, #-16]
    ebe8:	sub	r3, fp, #72	; 0x48
    ebec:	ldr	r2, [fp, #-120]	; 0xffffff88
    ebf0:	ldr	r1, [fp, #-16]
    ebf4:	ldr	r0, [fp, #-112]	; 0xffffff90
    ebf8:	bl	1e68 <flatcc_json_parser_uint32>
    ebfc:	str	r0, [fp, #-116]	; 0xffffff8c
    ec00:	ldr	r2, [fp, #-16]
    ec04:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ec08:	cmp	r2, r3
    ec0c:	bne	ec58 <MyGame_Example_TypeAliases_parse_json_table+0xa80>
    ec10:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ec14:	str	r3, [fp, #-16]
    ec18:	sub	r3, fp, #72	; 0x48
    ec1c:	str	r3, [sp]
    ec20:	ldr	r3, [pc, #536]	; ee40 <MyGame_Example_TypeAliases_parse_json_table+0xc68>
    ec24:	ldr	r2, [fp, #-120]	; 0xffffff88
    ec28:	ldr	r1, [fp, #-16]
    ec2c:	ldr	r0, [fp, #-112]	; 0xffffff90
    ec30:	bl	26f8 <flatcc_json_parser_symbolic_uint32>
    ec34:	str	r0, [fp, #-116]	; 0xffffff8c
    ec38:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ec3c:	ldr	r3, [fp, #-16]
    ec40:	cmp	r2, r3
    ec44:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ec48:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ec4c:	ldr	r3, [fp, #-120]	; 0xffffff88
    ec50:	cmp	r2, r3
    ec54:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ec58:	ldr	r3, [fp, #-72]	; 0xffffffb8
    ec5c:	cmp	r3, #0
    ec60:	bne	ec78 <MyGame_Example_TypeAliases_parse_json_table+0xaa0>
    ec64:	ldr	r3, [fp, #-112]	; 0xffffff90
    ec68:	ldr	r3, [r3, #8]
    ec6c:	and	r3, r3, #2
    ec70:	cmp	r3, #0
    ec74:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ec78:	ldr	r3, [fp, #-112]	; 0xffffff90
    ec7c:	ldr	r0, [r3]
    ec80:	mov	r3, #4
    ec84:	mov	r2, #4
    ec88:	mov	r1, #5
    ec8c:	bl	0 <flatcc_builder_table_add>
    ec90:	str	r0, [fp, #-20]	; 0xffffffec
    ec94:	ldr	r3, [fp, #-20]	; 0xffffffec
    ec98:	cmp	r3, #0
    ec9c:	beq	f5e8 <MyGame_Example_TypeAliases_parse_json_table+0x1410>
    eca0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    eca4:	mov	r1, r3
    eca8:	ldr	r0, [fp, #-20]	; 0xffffffec
    ecac:	bl	f4 <flatbuffers_uint32_write_to_pe>
    ecb0:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ecb4:	ldr	r2, [fp, #-120]	; 0xffffff88
    ecb8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ecbc:	ldr	r0, [fp, #-112]	; 0xffffff90
    ecc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ecc4:	str	r0, [fp, #-116]	; 0xffffff8c
    ecc8:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    eccc:	ldrd	r2, [fp, #-12]
    ecd0:	mov	r0, #0
    ecd4:	mvn	r1, #255	; 0xff
    ecd8:	and	r2, r2, r0
    ecdc:	and	r3, r3, r1
    ece0:	add	r1, pc, #336	; 0x150
    ece4:	ldrd	r0, [r1]
    ece8:	cmp	r3, r1
    ecec:	cmpeq	r2, r0
    ecf0:	bne	ee18 <MyGame_Example_TypeAliases_parse_json_table+0xc40>
    ecf4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ecf8:	str	r3, [fp, #-16]
    ecfc:	mov	r3, #3
    ed00:	ldr	r2, [fp, #-120]	; 0xffffff88
    ed04:	ldr	r1, [fp, #-16]
    ed08:	ldr	r0, [fp, #-112]	; 0xffffff90
    ed0c:	bl	1574 <flatcc_json_parser_match_symbol>
    ed10:	str	r0, [fp, #-116]	; 0xffffff8c
    ed14:	ldr	r2, [fp, #-16]
    ed18:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ed1c:	cmp	r2, r3
    ed20:	beq	ee00 <MyGame_Example_TypeAliases_parse_json_table+0xc28>
    ed24:	mov	r3, #0
    ed28:	strh	r3, [fp, #-74]	; 0xffffffb6
    ed2c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ed30:	str	r3, [fp, #-16]
    ed34:	sub	r3, fp, #74	; 0x4a
    ed38:	ldr	r2, [fp, #-120]	; 0xffffff88
    ed3c:	ldr	r1, [fp, #-16]
    ed40:	ldr	r0, [fp, #-112]	; 0xffffff90
    ed44:	bl	1f38 <flatcc_json_parser_uint16>
    ed48:	str	r0, [fp, #-116]	; 0xffffff8c
    ed4c:	ldr	r2, [fp, #-16]
    ed50:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ed54:	cmp	r2, r3
    ed58:	bne	eda4 <MyGame_Example_TypeAliases_parse_json_table+0xbcc>
    ed5c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ed60:	str	r3, [fp, #-16]
    ed64:	sub	r3, fp, #74	; 0x4a
    ed68:	str	r3, [sp]
    ed6c:	ldr	r3, [pc, #208]	; ee44 <MyGame_Example_TypeAliases_parse_json_table+0xc6c>
    ed70:	ldr	r2, [fp, #-120]	; 0xffffff88
    ed74:	ldr	r1, [fp, #-16]
    ed78:	ldr	r0, [fp, #-112]	; 0xffffff90
    ed7c:	bl	28c4 <flatcc_json_parser_symbolic_uint16>
    ed80:	str	r0, [fp, #-116]	; 0xffffff8c
    ed84:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ed88:	ldr	r3, [fp, #-16]
    ed8c:	cmp	r2, r3
    ed90:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ed94:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ed98:	ldr	r3, [fp, #-120]	; 0xffffff88
    ed9c:	cmp	r2, r3
    eda0:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eda4:	ldrh	r3, [fp, #-74]	; 0xffffffb6
    eda8:	cmp	r3, #0
    edac:	bne	edc4 <MyGame_Example_TypeAliases_parse_json_table+0xbec>
    edb0:	ldr	r3, [fp, #-112]	; 0xffffff90
    edb4:	ldr	r3, [r3, #8]
    edb8:	and	r3, r3, #2
    edbc:	cmp	r3, #0
    edc0:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    edc4:	ldr	r3, [fp, #-112]	; 0xffffff90
    edc8:	ldr	r0, [r3]
    edcc:	mov	r3, #2
    edd0:	mov	r2, #2
    edd4:	mov	r1, #3
    edd8:	bl	0 <flatcc_builder_table_add>
    eddc:	str	r0, [fp, #-20]	; 0xffffffec
    ede0:	ldr	r3, [fp, #-20]	; 0xffffffec
    ede4:	cmp	r3, #0
    ede8:	beq	f5f0 <MyGame_Example_TypeAliases_parse_json_table+0x1418>
    edec:	ldrh	r3, [fp, #-74]	; 0xffffffb6
    edf0:	mov	r1, r3
    edf4:	ldr	r0, [fp, #-20]	; 0xffffffec
    edf8:	bl	90 <flatbuffers_uint16_write_to_pe>
    edfc:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ee00:	ldr	r2, [fp, #-120]	; 0xffffff88
    ee04:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ee08:	ldr	r0, [fp, #-112]	; 0xffffff90
    ee0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee10:	str	r0, [fp, #-116]	; 0xffffff8c
    ee14:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ee18:	ldr	r2, [fp, #-120]	; 0xffffff88
    ee1c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ee20:	ldr	r0, [fp, #-112]	; 0xffffff90
    ee24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee28:	str	r0, [fp, #-116]	; 0xffffff8c
    ee2c:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ee30:	.word	0x00000000
    ee34:	.word	0x75333200
    ee38:	.word	0x00000000
    ee3c:	.word	0x75313600
    ee40:	.word	0x000002f4
    ee44:	.word	0x00000300
    ee48:	.word	0x7537ffff
    ee4c:	ldrd	r2, [fp, #-12]
    ee50:	mvn	r0, #0
    ee54:	ldr	r1, [pc, #-20]	; ee48 <MyGame_Example_TypeAliases_parse_json_table+0xc70>
    ee58:	cmp	r3, r1
    ee5c:	cmpeq	r2, r0
    ee60:	bhi	efc8 <MyGame_Example_TypeAliases_parse_json_table+0xdf0>
    ee64:	ldrd	r2, [fp, #-12]
    ee68:	mov	r0, #0
    ee6c:	mvn	r1, #255	; 0xff
    ee70:	and	r2, r2, r0
    ee74:	and	r3, r3, r1
    ee78:	add	r1, pc, #864	; 0x360
    ee7c:	ldrd	r0, [r1]
    ee80:	cmp	r3, r1
    ee84:	cmpeq	r2, r0
    ee88:	bne	efb0 <MyGame_Example_TypeAliases_parse_json_table+0xdd8>
    ee8c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ee90:	str	r3, [fp, #-16]
    ee94:	mov	r3, #3
    ee98:	ldr	r2, [fp, #-120]	; 0xffffff88
    ee9c:	ldr	r1, [fp, #-16]
    eea0:	ldr	r0, [fp, #-112]	; 0xffffff90
    eea4:	bl	1574 <flatcc_json_parser_match_symbol>
    eea8:	str	r0, [fp, #-116]	; 0xffffff8c
    eeac:	ldr	r2, [fp, #-16]
    eeb0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eeb4:	cmp	r2, r3
    eeb8:	beq	ef98 <MyGame_Example_TypeAliases_parse_json_table+0xdc0>
    eebc:	mov	r2, #0
    eec0:	mov	r3, #0
    eec4:	strd	r2, [fp, #-84]	; 0xffffffac
    eec8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eecc:	str	r3, [fp, #-16]
    eed0:	sub	r3, fp, #84	; 0x54
    eed4:	ldr	r2, [fp, #-120]	; 0xffffff88
    eed8:	ldr	r1, [fp, #-16]
    eedc:	ldr	r0, [fp, #-112]	; 0xffffff90
    eee0:	bl	1d94 <flatcc_json_parser_uint64>
    eee4:	str	r0, [fp, #-116]	; 0xffffff8c
    eee8:	ldr	r2, [fp, #-16]
    eeec:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eef0:	cmp	r2, r3
    eef4:	bne	ef40 <MyGame_Example_TypeAliases_parse_json_table+0xd68>
    eef8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eefc:	str	r3, [fp, #-16]
    ef00:	sub	r3, fp, #84	; 0x54
    ef04:	str	r3, [sp]
    ef08:	ldr	r3, [pc, #736]	; f1f0 <MyGame_Example_TypeAliases_parse_json_table+0x1018>
    ef0c:	ldr	r2, [fp, #-120]	; 0xffffff88
    ef10:	ldr	r1, [fp, #-16]
    ef14:	ldr	r0, [fp, #-112]	; 0xffffff90
    ef18:	bl	2520 <flatcc_json_parser_symbolic_uint64>
    ef1c:	str	r0, [fp, #-116]	; 0xffffff8c
    ef20:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ef24:	ldr	r3, [fp, #-16]
    ef28:	cmp	r2, r3
    ef2c:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ef30:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ef34:	ldr	r3, [fp, #-120]	; 0xffffff88
    ef38:	cmp	r2, r3
    ef3c:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ef40:	ldrd	r2, [fp, #-84]	; 0xffffffac
    ef44:	orrs	r3, r2, r3
    ef48:	bne	ef60 <MyGame_Example_TypeAliases_parse_json_table+0xd88>
    ef4c:	ldr	r3, [fp, #-112]	; 0xffffff90
    ef50:	ldr	r3, [r3, #8]
    ef54:	and	r3, r3, #2
    ef58:	cmp	r3, #0
    ef5c:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ef60:	ldr	r3, [fp, #-112]	; 0xffffff90
    ef64:	ldr	r0, [r3]
    ef68:	mov	r3, #8
    ef6c:	mov	r2, #8
    ef70:	mov	r1, #7
    ef74:	bl	0 <flatcc_builder_table_add>
    ef78:	str	r0, [fp, #-20]	; 0xffffffec
    ef7c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef80:	cmp	r3, #0
    ef84:	beq	f5f8 <MyGame_Example_TypeAliases_parse_json_table+0x1420>
    ef88:	ldrd	r2, [fp, #-84]	; 0xffffffac
    ef8c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ef90:	bl	150 <flatbuffers_uint64_write_to_pe>
    ef94:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ef98:	ldr	r2, [fp, #-120]	; 0xffffff88
    ef9c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    efa0:	ldr	r0, [fp, #-112]	; 0xffffff90
    efa4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    efa8:	str	r0, [fp, #-116]	; 0xffffff8c
    efac:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    efb0:	ldr	r2, [fp, #-120]	; 0xffffff88
    efb4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    efb8:	ldr	r0, [fp, #-112]	; 0xffffff90
    efbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    efc0:	str	r0, [fp, #-116]	; 0xffffff8c
    efc4:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    efc8:	ldrd	r2, [fp, #-12]
    efcc:	mvn	r0, #0
    efd0:	ldr	r1, [pc, #540]	; f1f4 <MyGame_Example_TypeAliases_parse_json_table+0x101c>
    efd4:	cmp	r3, r1
    efd8:	cmpeq	r2, r0
    efdc:	bhi	f144 <MyGame_Example_TypeAliases_parse_json_table+0xf6c>
    efe0:	ldrd	r2, [fp, #-12]
    efe4:	mov	r0, #0
    efe8:	ldr	r1, [pc, #532]	; f204 <MyGame_Example_TypeAliases_parse_json_table+0x102c>
    efec:	and	r2, r2, r0
    eff0:	and	r3, r3, r1
    eff4:	mov	r0, #0
    eff8:	ldr	r1, [pc, #504]	; f1f8 <MyGame_Example_TypeAliases_parse_json_table+0x1020>
    effc:	cmp	r3, r1
    f000:	cmpeq	r2, r0
    f004:	bne	f12c <MyGame_Example_TypeAliases_parse_json_table+0xf54>
    f008:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f00c:	str	r3, [fp, #-16]
    f010:	mov	r3, #2
    f014:	ldr	r2, [fp, #-120]	; 0xffffff88
    f018:	ldr	r1, [fp, #-16]
    f01c:	ldr	r0, [fp, #-112]	; 0xffffff90
    f020:	bl	1574 <flatcc_json_parser_match_symbol>
    f024:	str	r0, [fp, #-116]	; 0xffffff8c
    f028:	ldr	r2, [fp, #-16]
    f02c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f030:	cmp	r2, r3
    f034:	beq	f114 <MyGame_Example_TypeAliases_parse_json_table+0xf3c>
    f038:	mov	r3, #0
    f03c:	strb	r3, [fp, #-85]	; 0xffffffab
    f040:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f044:	str	r3, [fp, #-16]
    f048:	sub	r3, fp, #85	; 0x55
    f04c:	ldr	r2, [fp, #-120]	; 0xffffff88
    f050:	ldr	r1, [fp, #-16]
    f054:	ldr	r0, [fp, #-112]	; 0xffffff90
    f058:	bl	2008 <flatcc_json_parser_uint8>
    f05c:	str	r0, [fp, #-116]	; 0xffffff8c
    f060:	ldr	r2, [fp, #-16]
    f064:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f068:	cmp	r2, r3
    f06c:	bne	f0b8 <MyGame_Example_TypeAliases_parse_json_table+0xee0>
    f070:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f074:	str	r3, [fp, #-16]
    f078:	sub	r3, fp, #85	; 0x55
    f07c:	str	r3, [sp]
    f080:	ldr	r3, [pc, #372]	; f1fc <MyGame_Example_TypeAliases_parse_json_table+0x1024>
    f084:	ldr	r2, [fp, #-120]	; 0xffffff88
    f088:	ldr	r1, [fp, #-16]
    f08c:	ldr	r0, [fp, #-112]	; 0xffffff90
    f090:	bl	2a94 <flatcc_json_parser_symbolic_uint8>
    f094:	str	r0, [fp, #-116]	; 0xffffff8c
    f098:	ldr	r2, [fp, #-116]	; 0xffffff8c
    f09c:	ldr	r3, [fp, #-16]
    f0a0:	cmp	r2, r3
    f0a4:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f0a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
    f0ac:	ldr	r3, [fp, #-120]	; 0xffffff88
    f0b0:	cmp	r2, r3
    f0b4:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f0b8:	ldrb	r3, [fp, #-85]	; 0xffffffab
    f0bc:	cmp	r3, #0
    f0c0:	bne	f0d8 <MyGame_Example_TypeAliases_parse_json_table+0xf00>
    f0c4:	ldr	r3, [fp, #-112]	; 0xffffff90
    f0c8:	ldr	r3, [r3, #8]
    f0cc:	and	r3, r3, #2
    f0d0:	cmp	r3, #0
    f0d4:	beq	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f0d8:	ldr	r3, [fp, #-112]	; 0xffffff90
    f0dc:	ldr	r0, [r3]
    f0e0:	mov	r3, #1
    f0e4:	mov	r2, #1
    f0e8:	mov	r1, #1
    f0ec:	bl	0 <flatcc_builder_table_add>
    f0f0:	str	r0, [fp, #-20]	; 0xffffffec
    f0f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f0f8:	cmp	r3, #0
    f0fc:	beq	f600 <MyGame_Example_TypeAliases_parse_json_table+0x1428>
    f100:	ldrb	r3, [fp, #-85]	; 0xffffffab
    f104:	mov	r1, r3
    f108:	ldr	r0, [fp, #-20]	; 0xffffffec
    f10c:	bl	28 <flatbuffers_uint8_write_to_pe>
    f110:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f114:	ldr	r2, [fp, #-120]	; 0xffffff88
    f118:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f11c:	ldr	r0, [fp, #-112]	; 0xffffff90
    f120:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f124:	str	r0, [fp, #-116]	; 0xffffff8c
    f128:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f12c:	ldr	r2, [fp, #-120]	; 0xffffff88
    f130:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f134:	ldr	r0, [fp, #-112]	; 0xffffff90
    f138:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f13c:	str	r0, [fp, #-116]	; 0xffffff8c
    f140:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f144:	ldrd	r2, [fp, #-12]
    f148:	mov	r0, #0
    f14c:	mvn	r1, #0
    f150:	and	r2, r2, r0
    f154:	and	r3, r3, r1
    f158:	add	r1, pc, #136	; 0x88
    f15c:	ldrd	r0, [r1]
    f160:	cmp	r3, r1
    f164:	cmpeq	r2, r0
    f168:	bne	f358 <MyGame_Example_TypeAliases_parse_json_table+0x1180>
    f16c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f170:	str	r3, [fp, #-16]
    f174:	mov	r3, #4
    f178:	ldr	r2, [fp, #-120]	; 0xffffff88
    f17c:	ldr	r1, [fp, #-16]
    f180:	ldr	r0, [fp, #-112]	; 0xffffff90
    f184:	bl	1574 <flatcc_json_parser_match_symbol>
    f188:	str	r0, [fp, #-116]	; 0xffffff8c
    f18c:	ldr	r2, [fp, #-16]
    f190:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f194:	cmp	r2, r3
    f198:	beq	f340 <MyGame_Example_TypeAliases_parse_json_table+0x1168>
    f19c:	ldr	r3, [fp, #-112]	; 0xffffff90
    f1a0:	ldr	r0, [r3]
    f1a4:	mvn	r3, #-536870912	; 0xe0000000
    f1a8:	mov	r2, #8
    f1ac:	mov	r1, #8
    f1b0:	bl	0 <flatcc_builder_start_vector>
    f1b4:	mov	r3, r0
    f1b8:	cmp	r3, #0
    f1bc:	bne	f608 <MyGame_Example_TypeAliases_parse_json_table+0x1430>
    f1c0:	sub	r3, fp, #32
    f1c4:	ldr	r2, [fp, #-120]	; 0xffffff88
    f1c8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f1cc:	ldr	r0, [fp, #-112]	; 0xffffff90
    f1d0:	bl	1324 <flatcc_json_parser_array_start>
    f1d4:	str	r0, [fp, #-116]	; 0xffffff8c
    f1d8:	b	f2e0 <MyGame_Example_TypeAliases_parse_json_table+0x1108>
    f1dc:	nop			; (mov r0, r0)
    f1e0:	.word	0x00000000
    f1e4:	.word	0x75363400
    f1e8:	.word	0x00000000
    f1ec:	.word	0x76663634
    f1f0:	.word	0x0000030c
    f1f4:	.word	0x7637ffff
    f1f8:	.word	0x75380000
    f1fc:	.word	0x00000318
    f200:	.word	0x00000324
    f204:	.word	0xffff0000
    f208:	.word	0x76380000
    f20c:	.word	0x00000330
    f210:	mov	r2, #0
    f214:	mov	r3, #0
    f218:	strd	r2, [fp, #-100]	; 0xffffff9c
    f21c:	ldr	r3, [fp, #-112]	; 0xffffff90
    f220:	ldr	r3, [r3]
    f224:	mov	r1, #1
    f228:	mov	r0, r3
    f22c:	bl	0 <flatcc_builder_extend_vector>
    f230:	str	r0, [fp, #-20]	; 0xffffffec
    f234:	ldr	r3, [fp, #-20]	; 0xffffffec
    f238:	cmp	r3, #0
    f23c:	beq	f610 <MyGame_Example_TypeAliases_parse_json_table+0x1438>
    f240:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f244:	str	r3, [fp, #-16]
    f248:	sub	r3, fp, #100	; 0x64
    f24c:	ldr	r2, [fp, #-120]	; 0xffffff88
    f250:	ldr	r1, [fp, #-16]
    f254:	ldr	r0, [fp, #-112]	; 0xffffff90
    f258:	bl	0 <flatcc_json_parser_double>
    f25c:	str	r0, [fp, #-116]	; 0xffffff8c
    f260:	ldr	r2, [fp, #-16]
    f264:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f268:	cmp	r2, r3
    f26c:	bne	f2b8 <MyGame_Example_TypeAliases_parse_json_table+0x10e0>
    f270:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f274:	str	r3, [fp, #-16]
    f278:	sub	r3, fp, #100	; 0x64
    f27c:	str	r3, [sp]
    f280:	ldr	r3, [pc, #-136]	; f200 <MyGame_Example_TypeAliases_parse_json_table+0x1028>
    f284:	ldr	r2, [fp, #-120]	; 0xffffff88
    f288:	ldr	r1, [fp, #-16]
    f28c:	ldr	r0, [fp, #-112]	; 0xffffff90
    f290:	bl	375c <flatcc_json_parser_symbolic_double>
    f294:	str	r0, [fp, #-116]	; 0xffffff8c
    f298:	ldr	r2, [fp, #-116]	; 0xffffff8c
    f29c:	ldr	r3, [fp, #-16]
    f2a0:	cmp	r2, r3
    f2a4:	beq	f610 <MyGame_Example_TypeAliases_parse_json_table+0x1438>
    f2a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
    f2ac:	ldr	r3, [fp, #-120]	; 0xffffff88
    f2b0:	cmp	r2, r3
    f2b4:	beq	f610 <MyGame_Example_TypeAliases_parse_json_table+0x1438>
    f2b8:	vldr	d7, [fp, #-100]	; 0xffffff9c
    f2bc:	vmov.f64	d0, d7
    f2c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    f2c4:	bl	534 <flatbuffers_double_write_to_pe>
    f2c8:	sub	r3, fp, #32
    f2cc:	ldr	r2, [fp, #-120]	; 0xffffff88
    f2d0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f2d4:	ldr	r0, [fp, #-112]	; 0xffffff90
    f2d8:	bl	140c <flatcc_json_parser_array_end>
    f2dc:	str	r0, [fp, #-116]	; 0xffffff8c
    f2e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f2e4:	cmp	r3, #0
    f2e8:	bne	f210 <MyGame_Example_TypeAliases_parse_json_table+0x1038>
    f2ec:	ldr	r3, [fp, #-112]	; 0xffffff90
    f2f0:	ldr	r3, [r3]
    f2f4:	mov	r0, r3
    f2f8:	bl	0 <flatcc_builder_end_vector>
    f2fc:	str	r0, [fp, #-24]	; 0xffffffe8
    f300:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f304:	cmp	r3, #0
    f308:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f30c:	ldr	r3, [fp, #-112]	; 0xffffff90
    f310:	ldr	r3, [r3]
    f314:	mov	r1, #11
    f318:	mov	r0, r3
    f31c:	bl	0 <flatcc_builder_table_add_offset>
    f320:	str	r0, [fp, #-28]	; 0xffffffe4
    f324:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f328:	cmp	r3, #0
    f32c:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f330:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f334:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f338:	str	r2, [r3]
    f33c:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f340:	ldr	r2, [fp, #-120]	; 0xffffff88
    f344:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f348:	ldr	r0, [fp, #-112]	; 0xffffff90
    f34c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f350:	str	r0, [fp, #-116]	; 0xffffff8c
    f354:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f358:	ldrd	r2, [fp, #-12]
    f35c:	mov	r0, #0
    f360:	ldr	r1, [pc, #-356]	; f204 <MyGame_Example_TypeAliases_parse_json_table+0x102c>
    f364:	and	r2, r2, r0
    f368:	and	r3, r3, r1
    f36c:	mov	r0, #0
    f370:	ldr	r1, [pc, #-368]	; f208 <MyGame_Example_TypeAliases_parse_json_table+0x1030>
    f374:	cmp	r3, r1
    f378:	cmpeq	r2, r0
    f37c:	bne	f534 <MyGame_Example_TypeAliases_parse_json_table+0x135c>
    f380:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f384:	str	r3, [fp, #-16]
    f388:	mov	r3, #2
    f38c:	ldr	r2, [fp, #-120]	; 0xffffff88
    f390:	ldr	r1, [fp, #-16]
    f394:	ldr	r0, [fp, #-112]	; 0xffffff90
    f398:	bl	1574 <flatcc_json_parser_match_symbol>
    f39c:	str	r0, [fp, #-116]	; 0xffffff8c
    f3a0:	ldr	r2, [fp, #-16]
    f3a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f3a8:	cmp	r2, r3
    f3ac:	beq	f51c <MyGame_Example_TypeAliases_parse_json_table+0x1344>
    f3b0:	ldr	r3, [fp, #-112]	; 0xffffff90
    f3b4:	ldr	r0, [r3]
    f3b8:	mvn	r3, #0
    f3bc:	mov	r2, #1
    f3c0:	mov	r1, #1
    f3c4:	bl	0 <flatcc_builder_start_vector>
    f3c8:	mov	r3, r0
    f3cc:	cmp	r3, #0
    f3d0:	bne	f618 <MyGame_Example_TypeAliases_parse_json_table+0x1440>
    f3d4:	sub	r3, fp, #32
    f3d8:	ldr	r2, [fp, #-120]	; 0xffffff88
    f3dc:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f3e0:	ldr	r0, [fp, #-112]	; 0xffffff90
    f3e4:	bl	1324 <flatcc_json_parser_array_start>
    f3e8:	str	r0, [fp, #-116]	; 0xffffff8c
    f3ec:	b	f4bc <MyGame_Example_TypeAliases_parse_json_table+0x12e4>
    f3f0:	mov	r3, #0
    f3f4:	strb	r3, [fp, #-101]	; 0xffffff9b
    f3f8:	ldr	r3, [fp, #-112]	; 0xffffff90
    f3fc:	ldr	r3, [r3]
    f400:	mov	r1, #1
    f404:	mov	r0, r3
    f408:	bl	0 <flatcc_builder_extend_vector>
    f40c:	str	r0, [fp, #-20]	; 0xffffffec
    f410:	ldr	r3, [fp, #-20]	; 0xffffffec
    f414:	cmp	r3, #0
    f418:	beq	f620 <MyGame_Example_TypeAliases_parse_json_table+0x1448>
    f41c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f420:	str	r3, [fp, #-16]
    f424:	sub	r3, fp, #101	; 0x65
    f428:	ldr	r2, [fp, #-120]	; 0xffffff88
    f42c:	ldr	r1, [fp, #-16]
    f430:	ldr	r0, [fp, #-112]	; 0xffffff90
    f434:	bl	234c <flatcc_json_parser_int8>
    f438:	str	r0, [fp, #-116]	; 0xffffff8c
    f43c:	ldr	r2, [fp, #-16]
    f440:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f444:	cmp	r2, r3
    f448:	bne	f494 <MyGame_Example_TypeAliases_parse_json_table+0x12bc>
    f44c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f450:	str	r3, [fp, #-16]
    f454:	sub	r3, fp, #101	; 0x65
    f458:	str	r3, [sp]
    f45c:	ldr	r3, [pc, #-600]	; f20c <MyGame_Example_TypeAliases_parse_json_table+0x1034>
    f460:	ldr	r2, [fp, #-120]	; 0xffffff88
    f464:	ldr	r1, [fp, #-16]
    f468:	ldr	r0, [fp, #-112]	; 0xffffff90
    f46c:	bl	31e4 <flatcc_json_parser_symbolic_int8>
    f470:	str	r0, [fp, #-116]	; 0xffffff8c
    f474:	ldr	r2, [fp, #-116]	; 0xffffff8c
    f478:	ldr	r3, [fp, #-16]
    f47c:	cmp	r2, r3
    f480:	beq	f620 <MyGame_Example_TypeAliases_parse_json_table+0x1448>
    f484:	ldr	r2, [fp, #-116]	; 0xffffff8c
    f488:	ldr	r3, [fp, #-120]	; 0xffffff88
    f48c:	cmp	r2, r3
    f490:	beq	f620 <MyGame_Example_TypeAliases_parse_json_table+0x1448>
    f494:	ldrsb	r3, [fp, #-101]	; 0xffffff9b
    f498:	mov	r1, r3
    f49c:	ldr	r0, [fp, #-20]	; 0xffffffec
    f4a0:	bl	208 <flatbuffers_int8_write_to_pe>
    f4a4:	sub	r3, fp, #32
    f4a8:	ldr	r2, [fp, #-120]	; 0xffffff88
    f4ac:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f4b0:	ldr	r0, [fp, #-112]	; 0xffffff90
    f4b4:	bl	140c <flatcc_json_parser_array_end>
    f4b8:	str	r0, [fp, #-116]	; 0xffffff8c
    f4bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f4c0:	cmp	r3, #0
    f4c4:	bne	f3f0 <MyGame_Example_TypeAliases_parse_json_table+0x1218>
    f4c8:	ldr	r3, [fp, #-112]	; 0xffffff90
    f4cc:	ldr	r3, [r3]
    f4d0:	mov	r0, r3
    f4d4:	bl	0 <flatcc_builder_end_vector>
    f4d8:	str	r0, [fp, #-24]	; 0xffffffe8
    f4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f4e0:	cmp	r3, #0
    f4e4:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f4e8:	ldr	r3, [fp, #-112]	; 0xffffff90
    f4ec:	ldr	r3, [r3]
    f4f0:	mov	r1, #10
    f4f4:	mov	r0, r3
    f4f8:	bl	0 <flatcc_builder_table_add_offset>
    f4fc:	str	r0, [fp, #-28]	; 0xffffffe4
    f500:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f504:	cmp	r3, #0
    f508:	beq	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f510:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f514:	str	r2, [r3]
    f518:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f51c:	ldr	r2, [fp, #-120]	; 0xffffff88
    f520:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f524:	ldr	r0, [fp, #-112]	; 0xffffff90
    f528:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f52c:	str	r0, [fp, #-116]	; 0xffffff8c
    f530:	b	f548 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    f534:	ldr	r2, [fp, #-120]	; 0xffffff88
    f538:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f53c:	ldr	r0, [fp, #-112]	; 0xffffff90
    f540:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f544:	str	r0, [fp, #-116]	; 0xffffff8c
    f548:	sub	r3, fp, #32
    f54c:	ldr	r2, [fp, #-120]	; 0xffffff88
    f550:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f554:	ldr	r0, [fp, #-112]	; 0xffffff90
    f558:	bl	11bc <flatcc_json_parser_object_end>
    f55c:	str	r0, [fp, #-116]	; 0xffffff8c
    f560:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f564:	cmp	r3, #0
    f568:	bne	e23c <MyGame_Example_TypeAliases_parse_json_table+0x64>
    f56c:	ldr	r3, [fp, #-112]	; 0xffffff90
    f570:	ldr	r3, [r3, #24]
    f574:	cmp	r3, #0
    f578:	bne	f628 <MyGame_Example_TypeAliases_parse_json_table+0x1450>
    f57c:	ldr	r3, [fp, #-112]	; 0xffffff90
    f580:	ldr	r3, [r3]
    f584:	mov	r0, r3
    f588:	bl	0 <flatcc_builder_end_table>
    f58c:	mov	r2, r0
    f590:	ldr	r3, [fp, #-124]	; 0xffffff84
    f594:	str	r2, [r3]
    f598:	ldr	r3, [fp, #-124]	; 0xffffff84
    f59c:	ldr	r3, [r3]
    f5a0:	cmp	r3, #0
    f5a4:	beq	f630 <MyGame_Example_TypeAliases_parse_json_table+0x1458>
    f5a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    f5ac:	b	f64c <MyGame_Example_TypeAliases_parse_json_table+0x1474>
    f5b0:	nop			; (mov r0, r0)
    f5b4:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5b8:	nop			; (mov r0, r0)
    f5bc:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5c0:	nop			; (mov r0, r0)
    f5c4:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5c8:	nop			; (mov r0, r0)
    f5cc:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5d0:	nop			; (mov r0, r0)
    f5d4:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5d8:	nop			; (mov r0, r0)
    f5dc:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5e0:	nop			; (mov r0, r0)
    f5e4:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5e8:	nop			; (mov r0, r0)
    f5ec:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5f0:	nop			; (mov r0, r0)
    f5f4:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f5f8:	nop			; (mov r0, r0)
    f5fc:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f600:	nop			; (mov r0, r0)
    f604:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f608:	nop			; (mov r0, r0)
    f60c:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f610:	nop			; (mov r0, r0)
    f614:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f618:	nop			; (mov r0, r0)
    f61c:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f620:	nop			; (mov r0, r0)
    f624:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f628:	nop			; (mov r0, r0)
    f62c:	b	f634 <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    f630:	nop			; (mov r0, r0)
    f634:	mov	r3, #33	; 0x21
    f638:	ldr	r2, [fp, #-120]	; 0xffffff88
    f63c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    f640:	ldr	r0, [fp, #-112]	; 0xffffff90
    f644:	bl	0 <flatcc_json_parser_set_error>
    f648:	mov	r3, r0
    f64c:	mov	r0, r3
    f650:	sub	sp, fp, #4
    f654:	pop	{fp, pc}

0000f658 <Fantasy_Attacker_parse_json_table>:
    f658:	push	{fp, lr}
    f65c:	add	fp, sp, #4
    f660:	sub	sp, sp, #48	; 0x30
    f664:	str	r0, [fp, #-32]	; 0xffffffe0
    f668:	str	r1, [fp, #-36]	; 0xffffffdc
    f66c:	str	r2, [fp, #-40]	; 0xffffffd8
    f670:	str	r3, [fp, #-44]	; 0xffffffd4
    f674:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f678:	mov	r2, #0
    f67c:	str	r2, [r3]
    f680:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f684:	ldr	r3, [r3]
    f688:	mov	r1, #1
    f68c:	mov	r0, r3
    f690:	bl	0 <flatcc_builder_start_table>
    f694:	mov	r3, r0
    f698:	cmp	r3, #0
    f69c:	bne	f940 <Fantasy_Attacker_parse_json_table+0x2e8>
    f6a0:	sub	r3, fp, #24
    f6a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f6a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f6ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f6b0:	bl	10d4 <flatcc_json_parser_object_start>
    f6b4:	str	r0, [fp, #-36]	; 0xffffffdc
    f6b8:	b	f8f0 <Fantasy_Attacker_parse_json_table+0x298>
    f6bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f6c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f6c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f6c8:	bl	cc4 <flatcc_json_parser_symbol_start>
    f6cc:	str	r0, [fp, #-36]	; 0xffffffdc
    f6d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f6d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f6d8:	bl	fa8 <flatcc_json_parser_symbol_part>
    f6dc:	strd	r0, [fp, #-12]
    f6e0:	ldrd	r2, [fp, #-12]
    f6e4:	add	r1, pc, #660	; 0x294
    f6e8:	ldrd	r0, [r1]
    f6ec:	cmp	r3, r1
    f6f0:	cmpeq	r2, r0
    f6f4:	bne	f8c4 <Fantasy_Attacker_parse_json_table+0x26c>
    f6f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f6fc:	add	r3, r3, #8
    f700:	str	r3, [fp, #-36]	; 0xffffffdc
    f704:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f708:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f70c:	bl	fa8 <flatcc_json_parser_symbol_part>
    f710:	strd	r0, [fp, #-12]
    f714:	ldrd	r2, [fp, #-12]
    f718:	add	r1, pc, #616	; 0x268
    f71c:	ldrd	r0, [r1]
    f720:	cmp	r3, r1
    f724:	cmpeq	r2, r0
    f728:	bne	f8ac <Fantasy_Attacker_parse_json_table+0x254>
    f72c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f730:	add	r3, r3, #8
    f734:	str	r3, [fp, #-36]	; 0xffffffdc
    f738:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f73c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f740:	bl	fa8 <flatcc_json_parser_symbol_part>
    f744:	strd	r0, [fp, #-12]
    f748:	ldrd	r2, [fp, #-12]
    f74c:	mov	r0, #0
    f750:	mvn	r1, #255	; 0xff
    f754:	and	r2, r2, r0
    f758:	and	r3, r3, r1
    f75c:	add	r1, pc, #556	; 0x22c
    f760:	ldrd	r0, [r1]
    f764:	cmp	r3, r1
    f768:	cmpeq	r2, r0
    f76c:	bne	f894 <Fantasy_Attacker_parse_json_table+0x23c>
    f770:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f774:	str	r3, [fp, #-16]
    f778:	mov	r3, #3
    f77c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f780:	ldr	r1, [fp, #-16]
    f784:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f788:	bl	1574 <flatcc_json_parser_match_symbol>
    f78c:	str	r0, [fp, #-36]	; 0xffffffdc
    f790:	ldr	r2, [fp, #-16]
    f794:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f798:	cmp	r2, r3
    f79c:	beq	f87c <Fantasy_Attacker_parse_json_table+0x224>
    f7a0:	mov	r3, #0
    f7a4:	str	r3, [fp, #-28]	; 0xffffffe4
    f7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f7ac:	str	r3, [fp, #-16]
    f7b0:	sub	r3, fp, #28
    f7b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f7b8:	ldr	r1, [fp, #-16]
    f7bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f7c0:	bl	21ac <flatcc_json_parser_int32>
    f7c4:	str	r0, [fp, #-36]	; 0xffffffdc
    f7c8:	ldr	r2, [fp, #-16]
    f7cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f7d0:	cmp	r2, r3
    f7d4:	bne	f820 <Fantasy_Attacker_parse_json_table+0x1c8>
    f7d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f7dc:	str	r3, [fp, #-16]
    f7e0:	sub	r3, fp, #28
    f7e4:	str	r3, [sp]
    f7e8:	ldr	r3, [pc, #424]	; f998 <Fantasy_Attacker_parse_json_table+0x340>
    f7ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f7f0:	ldr	r1, [fp, #-16]
    f7f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f7f8:	bl	2e3c <flatcc_json_parser_symbolic_int32>
    f7fc:	str	r0, [fp, #-36]	; 0xffffffdc
    f800:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f804:	ldr	r3, [fp, #-16]
    f808:	cmp	r2, r3
    f80c:	beq	f95c <Fantasy_Attacker_parse_json_table+0x304>
    f810:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f814:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f818:	cmp	r2, r3
    f81c:	beq	f95c <Fantasy_Attacker_parse_json_table+0x304>
    f820:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f824:	cmp	r3, #0
    f828:	bne	f840 <Fantasy_Attacker_parse_json_table+0x1e8>
    f82c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f830:	ldr	r3, [r3, #8]
    f834:	and	r3, r3, #2
    f838:	cmp	r3, #0
    f83c:	beq	f8d8 <Fantasy_Attacker_parse_json_table+0x280>
    f840:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f844:	ldr	r0, [r3]
    f848:	mov	r3, #4
    f84c:	mov	r2, #4
    f850:	mov	r1, #0
    f854:	bl	0 <flatcc_builder_table_add>
    f858:	str	r0, [fp, #-20]	; 0xffffffec
    f85c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f860:	cmp	r3, #0
    f864:	beq	f948 <Fantasy_Attacker_parse_json_table+0x2f0>
    f868:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f86c:	mov	r1, r3
    f870:	ldr	r0, [fp, #-20]	; 0xffffffec
    f874:	bl	32c <flatbuffers_int32_write_to_pe>
    f878:	b	f8d8 <Fantasy_Attacker_parse_json_table+0x280>
    f87c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f880:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f884:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f888:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f88c:	str	r0, [fp, #-36]	; 0xffffffdc
    f890:	b	f8d8 <Fantasy_Attacker_parse_json_table+0x280>
    f894:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f898:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f89c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f8a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f8a4:	str	r0, [fp, #-36]	; 0xffffffdc
    f8a8:	b	f8d8 <Fantasy_Attacker_parse_json_table+0x280>
    f8ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f8b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f8b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f8b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f8bc:	str	r0, [fp, #-36]	; 0xffffffdc
    f8c0:	b	f8d8 <Fantasy_Attacker_parse_json_table+0x280>
    f8c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f8c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f8cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f8d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f8d4:	str	r0, [fp, #-36]	; 0xffffffdc
    f8d8:	sub	r3, fp, #24
    f8dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f8e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f8e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f8e8:	bl	11bc <flatcc_json_parser_object_end>
    f8ec:	str	r0, [fp, #-36]	; 0xffffffdc
    f8f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f8f4:	cmp	r3, #0
    f8f8:	bne	f6bc <Fantasy_Attacker_parse_json_table+0x64>
    f8fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f900:	ldr	r3, [r3, #24]
    f904:	cmp	r3, #0
    f908:	bne	f950 <Fantasy_Attacker_parse_json_table+0x2f8>
    f90c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f910:	ldr	r3, [r3]
    f914:	mov	r0, r3
    f918:	bl	0 <flatcc_builder_end_table>
    f91c:	mov	r2, r0
    f920:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f924:	str	r2, [r3]
    f928:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f92c:	ldr	r3, [r3]
    f930:	cmp	r3, #0
    f934:	beq	f958 <Fantasy_Attacker_parse_json_table+0x300>
    f938:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f93c:	b	f974 <Fantasy_Attacker_parse_json_table+0x31c>
    f940:	nop			; (mov r0, r0)
    f944:	b	f95c <Fantasy_Attacker_parse_json_table+0x304>
    f948:	nop			; (mov r0, r0)
    f94c:	b	f95c <Fantasy_Attacker_parse_json_table+0x304>
    f950:	nop			; (mov r0, r0)
    f954:	b	f95c <Fantasy_Attacker_parse_json_table+0x304>
    f958:	nop			; (mov r0, r0)
    f95c:	mov	r3, #33	; 0x21
    f960:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f964:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f968:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f96c:	bl	0 <flatcc_json_parser_set_error>
    f970:	mov	r3, r0
    f974:	mov	r0, r3
    f978:	sub	sp, fp, #4
    f97c:	pop	{fp, pc}
    f980:	.word	0x645f6174
    f984:	.word	0x73776f72
    f988:	.word	0x5f64616d
    f98c:	.word	0x7461636b
    f990:	.word	0x00000000
    f994:	.word	0x61676500
    f998:	.word	0x0000033c

0000f99c <Fantasy_Rapunzel_parse_json_struct_inline>:
    f99c:	push	{fp, lr}
    f9a0:	add	fp, sp, #4
    f9a4:	sub	sp, sp, #48	; 0x30
    f9a8:	str	r0, [fp, #-32]	; 0xffffffe0
    f9ac:	str	r1, [fp, #-36]	; 0xffffffdc
    f9b0:	str	r2, [fp, #-40]	; 0xffffffd8
    f9b4:	str	r3, [fp, #-44]	; 0xffffffd4
    f9b8:	sub	r3, fp, #24
    f9bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f9c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f9c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f9c8:	bl	10d4 <flatcc_json_parser_object_start>
    f9cc:	str	r0, [fp, #-36]	; 0xffffffdc
    f9d0:	b	fb7c <Fantasy_Rapunzel_parse_json_struct_inline+0x1e0>
    f9d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f9d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f9dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f9e0:	bl	cc4 <flatcc_json_parser_symbol_start>
    f9e4:	str	r0, [fp, #-36]	; 0xffffffdc
    f9e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f9ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f9f0:	bl	fa8 <flatcc_json_parser_symbol_part>
    f9f4:	strd	r0, [fp, #-12]
    f9f8:	ldrd	r2, [fp, #-12]
    f9fc:	add	r1, pc, #436	; 0x1b4
    fa00:	ldrd	r0, [r1]
    fa04:	cmp	r3, r1
    fa08:	cmpeq	r2, r0
    fa0c:	bne	fb50 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b4>
    fa10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fa14:	add	r3, r3, #8
    fa18:	str	r3, [fp, #-36]	; 0xffffffdc
    fa1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    fa20:	ldr	r0, [fp, #-36]	; 0xffffffdc
    fa24:	bl	fa8 <flatcc_json_parser_symbol_part>
    fa28:	strd	r0, [fp, #-12]
    fa2c:	ldrd	r2, [fp, #-12]
    fa30:	mov	r0, #0
    fa34:	mvn	r1, #255	; 0xff
    fa38:	and	r2, r2, r0
    fa3c:	and	r3, r3, r1
    fa40:	add	r1, pc, #376	; 0x178
    fa44:	ldrd	r0, [r1]
    fa48:	cmp	r3, r1
    fa4c:	cmpeq	r2, r0
    fa50:	bne	fb38 <Fantasy_Rapunzel_parse_json_struct_inline+0x19c>
    fa54:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fa58:	str	r3, [fp, #-16]
    fa5c:	mov	r3, #3
    fa60:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fa64:	ldr	r1, [fp, #-16]
    fa68:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fa6c:	bl	1574 <flatcc_json_parser_match_symbol>
    fa70:	str	r0, [fp, #-36]	; 0xffffffdc
    fa74:	ldr	r2, [fp, #-16]
    fa78:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fa7c:	cmp	r2, r3
    fa80:	beq	fb20 <Fantasy_Rapunzel_parse_json_struct_inline+0x184>
    fa84:	mov	r3, #0
    fa88:	strh	r3, [fp, #-26]	; 0xffffffe6
    fa8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fa90:	str	r3, [fp, #-20]	; 0xffffffec
    fa94:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fa98:	str	r3, [fp, #-16]
    fa9c:	sub	r3, fp, #26
    faa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    faa4:	ldr	r1, [fp, #-16]
    faa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    faac:	bl	1f38 <flatcc_json_parser_uint16>
    fab0:	str	r0, [fp, #-36]	; 0xffffffdc
    fab4:	ldr	r2, [fp, #-16]
    fab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fabc:	cmp	r2, r3
    fac0:	bne	fb0c <Fantasy_Rapunzel_parse_json_struct_inline+0x170>
    fac4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fac8:	str	r3, [fp, #-16]
    facc:	sub	r3, fp, #26
    fad0:	str	r3, [sp]
    fad4:	ldr	r3, [pc, #236]	; fbc8 <Fantasy_Rapunzel_parse_json_struct_inline+0x22c>
    fad8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fadc:	ldr	r1, [fp, #-16]
    fae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fae4:	bl	28c4 <flatcc_json_parser_symbolic_uint16>
    fae8:	str	r0, [fp, #-36]	; 0xffffffdc
    faec:	ldr	r2, [fp, #-36]	; 0xffffffdc
    faf0:	ldr	r3, [fp, #-16]
    faf4:	cmp	r2, r3
    faf8:	beq	fb90 <Fantasy_Rapunzel_parse_json_struct_inline+0x1f4>
    fafc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fb00:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fb04:	cmp	r2, r3
    fb08:	beq	fb90 <Fantasy_Rapunzel_parse_json_struct_inline+0x1f4>
    fb0c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    fb10:	mov	r1, r3
    fb14:	ldr	r0, [fp, #-20]	; 0xffffffec
    fb18:	bl	90 <flatbuffers_uint16_write_to_pe>
    fb1c:	b	fb64 <Fantasy_Rapunzel_parse_json_struct_inline+0x1c8>
    fb20:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fb24:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fb28:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fb2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fb30:	str	r0, [fp, #-36]	; 0xffffffdc
    fb34:	b	fb64 <Fantasy_Rapunzel_parse_json_struct_inline+0x1c8>
    fb38:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fb3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fb40:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fb44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fb48:	str	r0, [fp, #-36]	; 0xffffffdc
    fb4c:	b	fb64 <Fantasy_Rapunzel_parse_json_struct_inline+0x1c8>
    fb50:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fb54:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fb58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fb5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fb60:	str	r0, [fp, #-36]	; 0xffffffdc
    fb64:	sub	r3, fp, #24
    fb68:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fb6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fb70:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fb74:	bl	11bc <flatcc_json_parser_object_end>
    fb78:	str	r0, [fp, #-36]	; 0xffffffdc
    fb7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fb80:	cmp	r3, #0
    fb84:	bne	f9d4 <Fantasy_Rapunzel_parse_json_struct_inline+0x38>
    fb88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fb8c:	b	fba8 <Fantasy_Rapunzel_parse_json_struct_inline+0x20c>
    fb90:	mov	r3, #33	; 0x21
    fb94:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fb98:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fb9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fba0:	bl	0 <flatcc_json_parser_set_error>
    fba4:	mov	r3, r0
    fba8:	mov	r0, r3
    fbac:	sub	sp, fp, #4
    fbb0:	pop	{fp, pc}
    fbb4:	nop			; (mov r0, r0)
    fbb8:	.word	0x5f6c656e
    fbbc:	.word	0x68616972
    fbc0:	.word	0x00000000
    fbc4:	.word	0x67746800
    fbc8:	.word	0x00000348

0000fbcc <Fantasy_Rapunzel_parse_json_struct>:
    fbcc:	push	{fp, lr}
    fbd0:	add	fp, sp, #4
    fbd4:	sub	sp, sp, #24
    fbd8:	str	r0, [fp, #-16]
    fbdc:	str	r1, [fp, #-20]	; 0xffffffec
    fbe0:	str	r2, [fp, #-24]	; 0xffffffe8
    fbe4:	str	r3, [fp, #-28]	; 0xffffffe4
    fbe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fbec:	mov	r2, #0
    fbf0:	str	r2, [r3]
    fbf4:	ldr	r3, [fp, #-16]
    fbf8:	ldr	r3, [r3]
    fbfc:	mov	r2, #2
    fc00:	mov	r1, #2
    fc04:	mov	r0, r3
    fc08:	bl	0 <flatcc_builder_start_struct>
    fc0c:	str	r0, [fp, #-8]
    fc10:	ldr	r3, [fp, #-8]
    fc14:	cmp	r3, #0
    fc18:	beq	fc78 <Fantasy_Rapunzel_parse_json_struct+0xac>
    fc1c:	ldr	r3, [fp, #-8]
    fc20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fc24:	ldr	r1, [fp, #-20]	; 0xffffffec
    fc28:	ldr	r0, [fp, #-16]
    fc2c:	bl	f99c <Fantasy_Rapunzel_parse_json_struct_inline>
    fc30:	str	r0, [fp, #-20]	; 0xffffffec
    fc34:	ldr	r2, [fp, #-20]	; 0xffffffec
    fc38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fc3c:	cmp	r2, r3
    fc40:	beq	fc7c <Fantasy_Rapunzel_parse_json_struct+0xb0>
    fc44:	ldr	r3, [fp, #-16]
    fc48:	ldr	r3, [r3]
    fc4c:	mov	r0, r3
    fc50:	bl	0 <flatcc_builder_end_struct>
    fc54:	mov	r2, r0
    fc58:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fc5c:	str	r2, [r3]
    fc60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fc64:	ldr	r3, [r3]
    fc68:	cmp	r3, #0
    fc6c:	beq	fc7c <Fantasy_Rapunzel_parse_json_struct+0xb0>
    fc70:	ldr	r3, [fp, #-20]	; 0xffffffec
    fc74:	b	fc94 <Fantasy_Rapunzel_parse_json_struct+0xc8>
    fc78:	nop			; (mov r0, r0)
    fc7c:	mov	r3, #33	; 0x21
    fc80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fc84:	ldr	r1, [fp, #-20]	; 0xffffffec
    fc88:	ldr	r0, [fp, #-16]
    fc8c:	bl	0 <flatcc_json_parser_set_error>
    fc90:	mov	r3, r0
    fc94:	mov	r0, r3
    fc98:	sub	sp, fp, #4
    fc9c:	pop	{fp, pc}

0000fca0 <Fantasy_BookReader_parse_json_struct_inline>:
    fca0:	push	{fp, lr}
    fca4:	add	fp, sp, #4
    fca8:	sub	sp, sp, #48	; 0x30
    fcac:	str	r0, [fp, #-32]	; 0xffffffe0
    fcb0:	str	r1, [fp, #-36]	; 0xffffffdc
    fcb4:	str	r2, [fp, #-40]	; 0xffffffd8
    fcb8:	str	r3, [fp, #-44]	; 0xffffffd4
    fcbc:	sub	r3, fp, #24
    fcc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fcc4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fcc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fccc:	bl	10d4 <flatcc_json_parser_object_start>
    fcd0:	str	r0, [fp, #-36]	; 0xffffffdc
    fcd4:	b	fe80 <Fantasy_BookReader_parse_json_struct_inline+0x1e0>
    fcd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fcdc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fce4:	bl	cc4 <flatcc_json_parser_symbol_start>
    fce8:	str	r0, [fp, #-36]	; 0xffffffdc
    fcec:	ldr	r1, [fp, #-40]	; 0xffffffd8
    fcf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    fcf4:	bl	fa8 <flatcc_json_parser_symbol_part>
    fcf8:	strd	r0, [fp, #-12]
    fcfc:	ldrd	r2, [fp, #-12]
    fd00:	add	r1, pc, #432	; 0x1b0
    fd04:	ldrd	r0, [r1]
    fd08:	cmp	r3, r1
    fd0c:	cmpeq	r2, r0
    fd10:	bne	fe54 <Fantasy_BookReader_parse_json_struct_inline+0x1b4>
    fd14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fd18:	add	r3, r3, #8
    fd1c:	str	r3, [fp, #-36]	; 0xffffffdc
    fd20:	ldr	r1, [fp, #-40]	; 0xffffffd8
    fd24:	ldr	r0, [fp, #-36]	; 0xffffffdc
    fd28:	bl	fa8 <flatcc_json_parser_symbol_part>
    fd2c:	strd	r0, [fp, #-12]
    fd30:	ldrd	r2, [fp, #-12]
    fd34:	mov	r0, #0
    fd38:	ldr	r1, [pc, #384]	; fec0 <Fantasy_BookReader_parse_json_struct_inline+0x220>
    fd3c:	and	r2, r2, r0
    fd40:	and	r3, r3, r1
    fd44:	mov	r0, #0
    fd48:	ldr	r1, [pc, #372]	; fec4 <Fantasy_BookReader_parse_json_struct_inline+0x224>
    fd4c:	cmp	r3, r1
    fd50:	cmpeq	r2, r0
    fd54:	bne	fe3c <Fantasy_BookReader_parse_json_struct_inline+0x19c>
    fd58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fd5c:	str	r3, [fp, #-16]
    fd60:	mov	r3, #2
    fd64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fd68:	ldr	r1, [fp, #-16]
    fd6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fd70:	bl	1574 <flatcc_json_parser_match_symbol>
    fd74:	str	r0, [fp, #-36]	; 0xffffffdc
    fd78:	ldr	r2, [fp, #-16]
    fd7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fd80:	cmp	r2, r3
    fd84:	beq	fe24 <Fantasy_BookReader_parse_json_struct_inline+0x184>
    fd88:	mov	r3, #0
    fd8c:	str	r3, [fp, #-28]	; 0xffffffe4
    fd90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fd94:	str	r3, [fp, #-20]	; 0xffffffec
    fd98:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fd9c:	str	r3, [fp, #-16]
    fda0:	sub	r3, fp, #28
    fda4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fda8:	ldr	r1, [fp, #-16]
    fdac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fdb0:	bl	21ac <flatcc_json_parser_int32>
    fdb4:	str	r0, [fp, #-36]	; 0xffffffdc
    fdb8:	ldr	r2, [fp, #-16]
    fdbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fdc0:	cmp	r2, r3
    fdc4:	bne	fe10 <Fantasy_BookReader_parse_json_struct_inline+0x170>
    fdc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fdcc:	str	r3, [fp, #-16]
    fdd0:	sub	r3, fp, #28
    fdd4:	str	r3, [sp]
    fdd8:	ldr	r3, [pc, #232]	; fec8 <Fantasy_BookReader_parse_json_struct_inline+0x228>
    fddc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fde0:	ldr	r1, [fp, #-16]
    fde4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fde8:	bl	2e3c <flatcc_json_parser_symbolic_int32>
    fdec:	str	r0, [fp, #-36]	; 0xffffffdc
    fdf0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fdf4:	ldr	r3, [fp, #-16]
    fdf8:	cmp	r2, r3
    fdfc:	beq	fe94 <Fantasy_BookReader_parse_json_struct_inline+0x1f4>
    fe00:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fe04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fe08:	cmp	r2, r3
    fe0c:	beq	fe94 <Fantasy_BookReader_parse_json_struct_inline+0x1f4>
    fe10:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fe14:	mov	r1, r3
    fe18:	ldr	r0, [fp, #-20]	; 0xffffffec
    fe1c:	bl	32c <flatbuffers_int32_write_to_pe>
    fe20:	b	fe68 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    fe24:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fe28:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fe2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fe30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe34:	str	r0, [fp, #-36]	; 0xffffffdc
    fe38:	b	fe68 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    fe3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fe40:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fe44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fe48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe4c:	str	r0, [fp, #-36]	; 0xffffffdc
    fe50:	b	fe68 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    fe54:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fe58:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fe5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fe60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe64:	str	r0, [fp, #-36]	; 0xffffffdc
    fe68:	sub	r3, fp, #24
    fe6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fe70:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fe74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fe78:	bl	11bc <flatcc_json_parser_object_end>
    fe7c:	str	r0, [fp, #-36]	; 0xffffffdc
    fe80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fe84:	cmp	r3, #0
    fe88:	bne	fcd8 <Fantasy_BookReader_parse_json_struct_inline+0x38>
    fe8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fe90:	b	feac <Fantasy_BookReader_parse_json_struct_inline+0x20c>
    fe94:	mov	r3, #33	; 0x21
    fe98:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fe9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fea4:	bl	0 <flatcc_json_parser_set_error>
    fea8:	mov	r3, r0
    feac:	mov	r0, r3
    feb0:	sub	sp, fp, #4
    feb4:	pop	{fp, pc}
    feb8:	.word	0x735f7265
    febc:	.word	0x626f6f6b
    fec0:	.word	0xffff0000
    fec4:	.word	0x61640000
    fec8:	.word	0x00000354

0000fecc <Fantasy_BookReader_parse_json_struct>:
    fecc:	push	{fp, lr}
    fed0:	add	fp, sp, #4
    fed4:	sub	sp, sp, #24
    fed8:	str	r0, [fp, #-16]
    fedc:	str	r1, [fp, #-20]	; 0xffffffec
    fee0:	str	r2, [fp, #-24]	; 0xffffffe8
    fee4:	str	r3, [fp, #-28]	; 0xffffffe4
    fee8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    feec:	mov	r2, #0
    fef0:	str	r2, [r3]
    fef4:	ldr	r3, [fp, #-16]
    fef8:	ldr	r3, [r3]
    fefc:	mov	r2, #4
    ff00:	mov	r1, #4
    ff04:	mov	r0, r3
    ff08:	bl	0 <flatcc_builder_start_struct>
    ff0c:	str	r0, [fp, #-8]
    ff10:	ldr	r3, [fp, #-8]
    ff14:	cmp	r3, #0
    ff18:	beq	ff78 <Fantasy_BookReader_parse_json_struct+0xac>
    ff1c:	ldr	r3, [fp, #-8]
    ff20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ff24:	ldr	r1, [fp, #-20]	; 0xffffffec
    ff28:	ldr	r0, [fp, #-16]
    ff2c:	bl	fca0 <Fantasy_BookReader_parse_json_struct_inline>
    ff30:	str	r0, [fp, #-20]	; 0xffffffec
    ff34:	ldr	r2, [fp, #-20]	; 0xffffffec
    ff38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ff3c:	cmp	r2, r3
    ff40:	beq	ff7c <Fantasy_BookReader_parse_json_struct+0xb0>
    ff44:	ldr	r3, [fp, #-16]
    ff48:	ldr	r3, [r3]
    ff4c:	mov	r0, r3
    ff50:	bl	0 <flatcc_builder_end_struct>
    ff54:	mov	r2, r0
    ff58:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ff5c:	str	r2, [r3]
    ff60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ff64:	ldr	r3, [r3]
    ff68:	cmp	r3, #0
    ff6c:	beq	ff7c <Fantasy_BookReader_parse_json_struct+0xb0>
    ff70:	ldr	r3, [fp, #-20]	; 0xffffffec
    ff74:	b	ff94 <Fantasy_BookReader_parse_json_struct+0xc8>
    ff78:	nop			; (mov r0, r0)
    ff7c:	mov	r3, #33	; 0x21
    ff80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ff84:	ldr	r1, [fp, #-20]	; 0xffffffec
    ff88:	ldr	r0, [fp, #-16]
    ff8c:	bl	0 <flatcc_json_parser_set_error>
    ff90:	mov	r3, r0
    ff94:	mov	r0, r3
    ff98:	sub	sp, fp, #4
    ff9c:	pop	{fp, pc}

0000ffa0 <Fantasy_Character_parse_json_union>:
    ffa0:	push	{fp, lr}
    ffa4:	add	fp, sp, #4
    ffa8:	sub	sp, sp, #16
    ffac:	str	r0, [fp, #-8]
    ffb0:	str	r1, [fp, #-12]
    ffb4:	str	r2, [fp, #-16]
    ffb8:	strb	r3, [fp, #-17]	; 0xffffffef
    ffbc:	ldr	r3, [fp, #4]
    ffc0:	mov	r2, #0
    ffc4:	str	r2, [r3]
    ffc8:	ldrb	r3, [fp, #-17]	; 0xffffffef
    ffcc:	cmp	r3, #9
    ffd0:	beq	10064 <Fantasy_Character_parse_json_union+0xc4>
    ffd4:	cmp	r3, #9
    ffd8:	bgt	fff8 <Fantasy_Character_parse_json_union+0x58>
    ffdc:	cmp	r3, #2
    ffe0:	beq	1002c <Fantasy_Character_parse_json_union+0x8c>
    ffe4:	cmp	r3, #8
    ffe8:	beq	10048 <Fantasy_Character_parse_json_union+0xa8>
    ffec:	cmp	r3, #0
    fff0:	beq	10014 <Fantasy_Character_parse_json_union+0x74>
    fff4:	b	100d4 <Fantasy_Character_parse_json_union+0x134>
    fff8:	cmp	r3, #11
    fffc:	beq	1009c <Fantasy_Character_parse_json_union+0xfc>
   10000:	cmp	r3, #11
   10004:	blt	10080 <Fantasy_Character_parse_json_union+0xe0>
   10008:	cmp	r3, #255	; 0xff
   1000c:	beq	100b8 <Fantasy_Character_parse_json_union+0x118>
   10010:	b	100d4 <Fantasy_Character_parse_json_union+0x134>
   10014:	ldr	r2, [fp, #-16]
   10018:	ldr	r1, [fp, #-12]
   1001c:	ldr	r0, [fp, #-8]
   10020:	bl	1d18 <flatcc_json_parser_none>
   10024:	mov	r3, r0
   10028:	b	10164 <Fantasy_Character_parse_json_union+0x1c4>
   1002c:	ldr	r3, [fp, #4]
   10030:	ldr	r2, [fp, #-16]
   10034:	ldr	r1, [fp, #-12]
   10038:	ldr	r0, [fp, #-8]
   1003c:	bl	f658 <Fantasy_Attacker_parse_json_table>
   10040:	str	r0, [fp, #-12]
   10044:	b	1011c <Fantasy_Character_parse_json_union+0x17c>
   10048:	ldr	r3, [fp, #4]
   1004c:	ldr	r2, [fp, #-16]
   10050:	ldr	r1, [fp, #-12]
   10054:	ldr	r0, [fp, #-8]
   10058:	bl	fbcc <Fantasy_Rapunzel_parse_json_struct>
   1005c:	str	r0, [fp, #-12]
   10060:	b	1011c <Fantasy_Character_parse_json_union+0x17c>
   10064:	ldr	r3, [fp, #4]
   10068:	ldr	r2, [fp, #-16]
   1006c:	ldr	r1, [fp, #-12]
   10070:	ldr	r0, [fp, #-8]
   10074:	bl	fecc <Fantasy_BookReader_parse_json_struct>
   10078:	str	r0, [fp, #-12]
   1007c:	b	1011c <Fantasy_Character_parse_json_union+0x17c>
   10080:	ldr	r3, [fp, #4]
   10084:	ldr	r2, [fp, #-16]
   10088:	ldr	r1, [fp, #-12]
   1008c:	ldr	r0, [fp, #-8]
   10090:	bl	fecc <Fantasy_BookReader_parse_json_struct>
   10094:	str	r0, [fp, #-12]
   10098:	b	1011c <Fantasy_Character_parse_json_union+0x17c>
   1009c:	ldr	r3, [fp, #4]
   100a0:	ldr	r2, [fp, #-16]
   100a4:	ldr	r1, [fp, #-12]
   100a8:	ldr	r0, [fp, #-8]
   100ac:	bl	0 <flatcc_json_parser_build_string>
   100b0:	str	r0, [fp, #-12]
   100b4:	b	1011c <Fantasy_Character_parse_json_union+0x17c>
   100b8:	ldr	r3, [fp, #4]
   100bc:	ldr	r2, [fp, #-16]
   100c0:	ldr	r1, [fp, #-12]
   100c4:	ldr	r0, [fp, #-8]
   100c8:	bl	0 <flatcc_json_parser_build_string>
   100cc:	str	r0, [fp, #-12]
   100d0:	b	1011c <Fantasy_Character_parse_json_union+0x17c>
   100d4:	ldr	r3, [fp, #-8]
   100d8:	ldr	r3, [r3, #8]
   100dc:	and	r3, r3, #1
   100e0:	cmp	r3, #0
   100e4:	bne	10104 <Fantasy_Character_parse_json_union+0x164>
   100e8:	mov	r3, #15
   100ec:	ldr	r2, [fp, #-16]
   100f0:	ldr	r1, [fp, #-12]
   100f4:	ldr	r0, [fp, #-8]
   100f8:	bl	0 <flatcc_json_parser_set_error>
   100fc:	mov	r3, r0
   10100:	b	10164 <Fantasy_Character_parse_json_union+0x1c4>
   10104:	ldr	r2, [fp, #-16]
   10108:	ldr	r1, [fp, #-12]
   1010c:	ldr	r0, [fp, #-8]
   10110:	bl	0 <flatcc_json_parser_generic_json>
   10114:	mov	r3, r0
   10118:	b	10164 <Fantasy_Character_parse_json_union+0x1c4>
   1011c:	ldr	r3, [fp, #-8]
   10120:	ldr	r3, [r3, #24]
   10124:	cmp	r3, #0
   10128:	beq	10134 <Fantasy_Character_parse_json_union+0x194>
   1012c:	ldr	r3, [fp, #-12]
   10130:	b	10164 <Fantasy_Character_parse_json_union+0x1c4>
   10134:	ldr	r3, [fp, #4]
   10138:	ldr	r3, [r3]
   1013c:	cmp	r3, #0
   10140:	bne	10160 <Fantasy_Character_parse_json_union+0x1c0>
   10144:	mov	r3, #33	; 0x21
   10148:	ldr	r2, [fp, #-16]
   1014c:	ldr	r1, [fp, #-12]
   10150:	ldr	r0, [fp, #-8]
   10154:	bl	0 <flatcc_json_parser_set_error>
   10158:	mov	r3, r0
   1015c:	b	10164 <Fantasy_Character_parse_json_union+0x1c4>
   10160:	ldr	r3, [fp, #-12]
   10164:	mov	r0, r3
   10168:	sub	sp, fp, #4
   1016c:	pop	{fp, pc}

00010170 <Fantasy_Character_json_union_accept_type>:
   10170:	push	{fp}		; (str fp, [sp, #-4]!)
   10174:	add	fp, sp, #0
   10178:	sub	sp, sp, #12
   1017c:	mov	r3, r0
   10180:	strb	r3, [fp, #-5]
   10184:	ldrb	r3, [fp, #-5]
   10188:	cmp	r3, #9
   1018c:	beq	101e8 <Fantasy_Character_json_union_accept_type+0x78>
   10190:	cmp	r3, #9
   10194:	bgt	101b4 <Fantasy_Character_json_union_accept_type+0x44>
   10198:	cmp	r3, #2
   1019c:	beq	101d8 <Fantasy_Character_json_union_accept_type+0x68>
   101a0:	cmp	r3, #8
   101a4:	beq	101e0 <Fantasy_Character_json_union_accept_type+0x70>
   101a8:	cmp	r3, #0
   101ac:	beq	101d0 <Fantasy_Character_json_union_accept_type+0x60>
   101b0:	b	10208 <Fantasy_Character_json_union_accept_type+0x98>
   101b4:	cmp	r3, #11
   101b8:	beq	101f8 <Fantasy_Character_json_union_accept_type+0x88>
   101bc:	cmp	r3, #11
   101c0:	blt	101f0 <Fantasy_Character_json_union_accept_type+0x80>
   101c4:	cmp	r3, #255	; 0xff
   101c8:	beq	10200 <Fantasy_Character_json_union_accept_type+0x90>
   101cc:	b	10208 <Fantasy_Character_json_union_accept_type+0x98>
   101d0:	mov	r3, #1
   101d4:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   101d8:	mov	r3, #1
   101dc:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   101e0:	mov	r3, #1
   101e4:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   101e8:	mov	r3, #1
   101ec:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   101f0:	mov	r3, #1
   101f4:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   101f8:	mov	r3, #1
   101fc:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   10200:	mov	r3, #1
   10204:	b	1020c <Fantasy_Character_json_union_accept_type+0x9c>
   10208:	mov	r3, #0
   1020c:	mov	r0, r3
   10210:	add	sp, fp, #0
   10214:	pop	{fp}		; (ldr fp, [sp], #4)
   10218:	bx	lr

0001021c <Fantasy_Character_parse_json_enum>:
   1021c:	push	{fp, lr}
   10220:	add	fp, sp, #4
   10224:	sub	sp, sp, #48	; 0x30
   10228:	str	r0, [fp, #-32]	; 0xffffffe0
   1022c:	str	r1, [fp, #-36]	; 0xffffffdc
   10230:	str	r2, [fp, #-40]	; 0xffffffd8
   10234:	str	r3, [fp, #-44]	; 0xffffffd4
   10238:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1023c:	str	r3, [fp, #-8]
   10240:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10244:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10248:	bl	fa8 <flatcc_json_parser_symbol_part>
   1024c:	strd	r0, [fp, #-20]	; 0xffffffec
   10250:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10254:	add	r1, pc, #932	; 0x3a4
   10258:	ldrd	r0, [r1]
   1025c:	cmp	r3, r1
   10260:	cmpeq	r2, r0
   10264:	bhi	10428 <Fantasy_Character_parse_json_enum+0x20c>
   10268:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1026c:	add	r1, pc, #916	; 0x394
   10270:	ldrd	r0, [r1]
   10274:	cmp	r3, r1
   10278:	cmpeq	r2, r0
   1027c:	bhi	10310 <Fantasy_Character_parse_json_enum+0xf4>
   10280:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10284:	mov	r0, #-16777216	; 0xff000000
   10288:	mvn	r1, #0
   1028c:	and	r2, r2, r0
   10290:	and	r3, r3, r1
   10294:	add	r1, pc, #884	; 0x374
   10298:	ldrd	r0, [r1]
   1029c:	cmp	r3, r1
   102a0:	cmpeq	r2, r0
   102a4:	bne	10308 <Fantasy_Character_parse_json_enum+0xec>
   102a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   102ac:	str	r3, [fp, #-24]	; 0xffffffe8
   102b0:	ldr	r3, [fp, #8]
   102b4:	str	r3, [sp]
   102b8:	mov	r3, #5
   102bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   102c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   102c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   102c8:	bl	0 <flatcc_json_parser_match_constant>
   102cc:	str	r0, [fp, #-36]	; 0xffffffdc
   102d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   102d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   102d8:	cmp	r2, r3
   102dc:	beq	10300 <Fantasy_Character_parse_json_enum+0xe4>
   102e0:	ldr	r1, [fp, #4]
   102e4:	mov	r2, #9
   102e8:	mov	r3, #0
   102ec:	strd	r2, [r1]
   102f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   102f4:	mov	r2, #0
   102f8:	str	r2, [r3]
   102fc:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   10300:	ldr	r3, [fp, #-8]
   10304:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10308:	ldr	r3, [fp, #-8]
   1030c:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10310:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10314:	mov	r0, #-16777216	; 0xff000000
   10318:	mvn	r1, #0
   1031c:	and	r2, r2, r0
   10320:	and	r3, r3, r1
   10324:	add	r1, pc, #748	; 0x2ec
   10328:	ldrd	r0, [r1]
   1032c:	cmp	r3, r1
   10330:	cmpeq	r2, r0
   10334:	bne	10398 <Fantasy_Character_parse_json_enum+0x17c>
   10338:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1033c:	str	r3, [fp, #-24]	; 0xffffffe8
   10340:	ldr	r3, [fp, #8]
   10344:	str	r3, [sp]
   10348:	mov	r3, #5
   1034c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10358:	bl	0 <flatcc_json_parser_match_constant>
   1035c:	str	r0, [fp, #-36]	; 0xffffffdc
   10360:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10368:	cmp	r2, r3
   1036c:	beq	10390 <Fantasy_Character_parse_json_enum+0x174>
   10370:	ldr	r1, [fp, #4]
   10374:	mov	r2, #2
   10378:	mov	r3, #0
   1037c:	strd	r2, [r1]
   10380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10384:	mov	r2, #0
   10388:	str	r2, [r3]
   1038c:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   10390:	ldr	r3, [fp, #-8]
   10394:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10398:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1039c:	mvn	r0, #255	; 0xff
   103a0:	mvn	r1, #0
   103a4:	and	r2, r2, r0
   103a8:	and	r3, r3, r1
   103ac:	add	r1, pc, #620	; 0x26c
   103b0:	ldrd	r0, [r1]
   103b4:	cmp	r3, r1
   103b8:	cmpeq	r2, r0
   103bc:	bne	10420 <Fantasy_Character_parse_json_enum+0x204>
   103c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   103c4:	str	r3, [fp, #-24]	; 0xffffffe8
   103c8:	ldr	r3, [fp, #8]
   103cc:	str	r3, [sp]
   103d0:	mov	r3, #7
   103d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   103d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   103dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   103e0:	bl	0 <flatcc_json_parser_match_constant>
   103e4:	str	r0, [fp, #-36]	; 0xffffffdc
   103e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   103ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   103f0:	cmp	r2, r3
   103f4:	beq	10418 <Fantasy_Character_parse_json_enum+0x1fc>
   103f8:	ldr	r1, [fp, #4]
   103fc:	mov	r2, #10
   10400:	mov	r3, #0
   10404:	strd	r2, [r1]
   10408:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1040c:	mov	r2, #0
   10410:	str	r2, [r3]
   10414:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   10418:	ldr	r3, [fp, #-8]
   1041c:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10420:	ldr	r3, [fp, #-8]
   10424:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10428:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1042c:	add	r1, pc, #500	; 0x1f4
   10430:	ldrd	r0, [r1]
   10434:	cmp	r3, r1
   10438:	cmpeq	r2, r0
   1043c:	bhi	104d0 <Fantasy_Character_parse_json_enum+0x2b4>
   10440:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10444:	mov	r0, #0
   10448:	mvn	r1, #0
   1044c:	and	r2, r2, r0
   10450:	and	r3, r3, r1
   10454:	add	r1, pc, #468	; 0x1d4
   10458:	ldrd	r0, [r1]
   1045c:	cmp	r3, r1
   10460:	cmpeq	r2, r0
   10464:	bne	104c8 <Fantasy_Character_parse_json_enum+0x2ac>
   10468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1046c:	str	r3, [fp, #-24]	; 0xffffffe8
   10470:	ldr	r3, [fp, #8]
   10474:	str	r3, [sp]
   10478:	mov	r3, #4
   1047c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10484:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10488:	bl	0 <flatcc_json_parser_match_constant>
   1048c:	str	r0, [fp, #-36]	; 0xffffffdc
   10490:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10498:	cmp	r2, r3
   1049c:	beq	104c0 <Fantasy_Character_parse_json_enum+0x2a4>
   104a0:	ldr	r1, [fp, #4]
   104a4:	mov	r2, #0
   104a8:	mov	r3, #0
   104ac:	strd	r2, [r1]
   104b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   104b4:	mov	r2, #0
   104b8:	str	r2, [r3]
   104bc:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   104c0:	ldr	r3, [fp, #-8]
   104c4:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   104c8:	ldr	r3, [fp, #-8]
   104cc:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   104d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   104d4:	add	r1, pc, #348	; 0x15c
   104d8:	ldrd	r0, [r1]
   104dc:	cmp	r3, r1
   104e0:	cmpeq	r2, r0
   104e4:	bhi	10578 <Fantasy_Character_parse_json_enum+0x35c>
   104e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   104ec:	mov	r0, #-16777216	; 0xff000000
   104f0:	mvn	r1, #0
   104f4:	and	r2, r2, r0
   104f8:	and	r3, r3, r1
   104fc:	add	r1, pc, #316	; 0x13c
   10500:	ldrd	r0, [r1]
   10504:	cmp	r3, r1
   10508:	cmpeq	r2, r0
   1050c:	bne	10570 <Fantasy_Character_parse_json_enum+0x354>
   10510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10514:	str	r3, [fp, #-24]	; 0xffffffe8
   10518:	ldr	r3, [fp, #8]
   1051c:	str	r3, [sp]
   10520:	mov	r3, #5
   10524:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1052c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10530:	bl	0 <flatcc_json_parser_match_constant>
   10534:	str	r0, [fp, #-36]	; 0xffffffdc
   10538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1053c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10540:	cmp	r2, r3
   10544:	beq	10568 <Fantasy_Character_parse_json_enum+0x34c>
   10548:	ldr	r1, [fp, #4]
   1054c:	mov	r2, #11
   10550:	mov	r3, #0
   10554:	strd	r2, [r1]
   10558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1055c:	mov	r2, #0
   10560:	str	r2, [r3]
   10564:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   10568:	ldr	r3, [fp, #-8]
   1056c:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10570:	ldr	r3, [fp, #-8]
   10574:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10578:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1057c:	ldr	r0, [pc, #204]	; 10650 <Fantasy_Character_parse_json_enum+0x434>
   10580:	mvn	r1, #0
   10584:	and	r2, r2, r0
   10588:	and	r3, r3, r1
   1058c:	add	r1, pc, #180	; 0xb4
   10590:	ldrd	r0, [r1]
   10594:	cmp	r3, r1
   10598:	cmpeq	r2, r0
   1059c:	bne	10654 <Fantasy_Character_parse_json_enum+0x438>
   105a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   105a4:	str	r3, [fp, #-24]	; 0xffffffe8
   105a8:	ldr	r3, [fp, #8]
   105ac:	str	r3, [sp]
   105b0:	mov	r3, #6
   105b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   105b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   105bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   105c0:	bl	0 <flatcc_json_parser_match_constant>
   105c4:	str	r0, [fp, #-36]	; 0xffffffdc
   105c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   105cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   105d0:	cmp	r2, r3
   105d4:	beq	105f8 <Fantasy_Character_parse_json_enum+0x3dc>
   105d8:	ldr	r1, [fp, #4]
   105dc:	mov	r2, #255	; 0xff
   105e0:	mov	r3, #0
   105e4:	strd	r2, [r1]
   105e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   105ec:	mov	r2, #0
   105f0:	str	r2, [r3]
   105f4:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   105f8:	ldr	r3, [fp, #-8]
   105fc:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   10600:	.word	0xffffffff
   10604:	.word	0x4e4f4e44
   10608:	.word	0x46616dff
   1060c:	.word	0x426f6f6b
   10610:	.word	0x65000000
   10614:	.word	0x42656c6c
   10618:	.word	0x6e000000
   1061c:	.word	0x4d754c61
   10620:	.word	0x46616e00
   10624:	.word	0x426f6f6b
   10628:	.word	0x71ffffff
   1062c:	.word	0x4f746865
   10630:	.word	0x00000000
   10634:	.word	0x4e4f4e45
   10638:	.word	0x6e7a656b
   1063c:	.word	0x52617075
   10640:	.word	0x72000000
   10644:	.word	0x4f746865
   10648:	.word	0x65640000
   1064c:	.word	0x556e7573
   10650:	.word	0xffff0000
   10654:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10658:	add	r1, pc, #136	; 0x88
   1065c:	ldrd	r0, [r1]
   10660:	cmp	r3, r1
   10664:	cmpeq	r2, r0
   10668:	bne	106cc <Fantasy_Character_parse_json_enum+0x4b0>
   1066c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10670:	str	r3, [fp, #-24]	; 0xffffffe8
   10674:	ldr	r3, [fp, #8]
   10678:	str	r3, [sp]
   1067c:	mov	r3, #8
   10680:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1068c:	bl	0 <flatcc_json_parser_match_constant>
   10690:	str	r0, [fp, #-36]	; 0xffffffdc
   10694:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1069c:	cmp	r2, r3
   106a0:	beq	106c4 <Fantasy_Character_parse_json_enum+0x4a8>
   106a4:	ldr	r1, [fp, #4]
   106a8:	mov	r2, #8
   106ac:	mov	r3, #0
   106b0:	strd	r2, [r1]
   106b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   106b8:	mov	r2, #0
   106bc:	str	r2, [r3]
   106c0:	b	106d4 <Fantasy_Character_parse_json_enum+0x4b8>
   106c4:	ldr	r3, [fp, #-8]
   106c8:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   106cc:	ldr	r3, [fp, #-8]
   106d0:	b	106d8 <Fantasy_Character_parse_json_enum+0x4bc>
   106d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   106d8:	mov	r0, r3
   106dc:	sub	sp, fp, #4
   106e0:	pop	{fp, pc}
   106e4:	nop			; (mov r0, r0)
   106e8:	.word	0x6e7a656c
   106ec:	.word	0x52617075

000106f0 <Fantasy_Movie_parse_json_table>:
   106f0:	push	{fp, lr}
   106f4:	add	fp, sp, #4
   106f8:	sub	sp, sp, #64	; 0x40
   106fc:	str	r0, [fp, #-32]	; 0xffffffe0
   10700:	str	r1, [fp, #-36]	; 0xffffffdc
   10704:	str	r2, [fp, #-40]	; 0xffffffd8
   10708:	str	r3, [fp, #-44]	; 0xffffffd4
   1070c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10710:	mov	r2, #0
   10714:	str	r2, [r3]
   10718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1071c:	ldr	r3, [r3]
   10720:	mov	r1, #10
   10724:	mov	r0, r3
   10728:	bl	0 <flatcc_builder_start_table>
   1072c:	mov	r3, r0
   10730:	cmp	r3, #0
   10734:	bne	11188 <Fantasy_Movie_parse_json_table+0xa98>
   10738:	sub	r3, fp, #24
   1073c:	str	r3, [sp]
   10740:	mov	r3, #5
   10744:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10748:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1074c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10750:	bl	0 <flatcc_json_parser_prepare_unions>
   10754:	mov	r2, r0
   10758:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1075c:	cmp	r2, r3
   10760:	beq	11190 <Fantasy_Movie_parse_json_table+0xaa0>
   10764:	sub	r3, fp, #20
   10768:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1076c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10770:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10774:	bl	10d4 <flatcc_json_parser_object_start>
   10778:	str	r0, [fp, #-36]	; 0xffffffdc
   1077c:	b	11120 <Fantasy_Movie_parse_json_table+0xa30>
   10780:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10784:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1078c:	bl	cc4 <flatcc_json_parser_symbol_start>
   10790:	str	r0, [fp, #-36]	; 0xffffffdc
   10794:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10798:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1079c:	bl	fa8 <flatcc_json_parser_symbol_part>
   107a0:	strd	r0, [fp, #-12]
   107a4:	ldrd	r2, [fp, #-12]
   107a8:	add	r1, pc, #864	; 0x360
   107ac:	ldrd	r0, [r1]
   107b0:	cmp	r3, r1
   107b4:	cmpeq	r2, r0
   107b8:	bhi	10b50 <Fantasy_Movie_parse_json_table+0x460>
   107bc:	ldrd	r2, [fp, #-12]
   107c0:	add	r1, pc, #848	; 0x350
   107c4:	ldrd	r0, [r1]
   107c8:	cmp	r3, r1
   107cc:	cmpeq	r2, r0
   107d0:	bne	10958 <Fantasy_Movie_parse_json_table+0x268>
   107d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   107d8:	add	r3, r3, #8
   107dc:	str	r3, [fp, #-36]	; 0xffffffdc
   107e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   107e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   107e8:	bl	fa8 <flatcc_json_parser_symbol_part>
   107ec:	strd	r0, [fp, #-12]
   107f0:	ldrd	r2, [fp, #-12]
   107f4:	mvn	r0, #255	; 0xff
   107f8:	mvn	r1, #0
   107fc:	and	r2, r2, r0
   10800:	and	r3, r3, r1
   10804:	add	r1, pc, #788	; 0x314
   10808:	ldrd	r0, [r1]
   1080c:	cmp	r3, r1
   10810:	cmpeq	r2, r0
   10814:	bne	1089c <Fantasy_Movie_parse_json_table+0x1ac>
   10818:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1081c:	str	r3, [fp, #-16]
   10820:	mov	r3, #7
   10824:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10828:	ldr	r1, [fp, #-16]
   1082c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10830:	bl	1574 <flatcc_json_parser_match_symbol>
   10834:	str	r0, [fp, #-36]	; 0xffffffdc
   10838:	ldr	r2, [fp, #-16]
   1083c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10840:	cmp	r2, r3
   10844:	beq	10884 <Fantasy_Movie_parse_json_table+0x194>
   10848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1084c:	ldr	r2, [pc, #740]	; 10b38 <Fantasy_Movie_parse_json_table+0x448>
   10850:	str	r2, [sp, #12]
   10854:	ldr	r2, [pc, #736]	; 10b3c <Fantasy_Movie_parse_json_table+0x44c>
   10858:	str	r2, [sp, #8]
   1085c:	str	r3, [sp, #4]
   10860:	mov	r3, #3
   10864:	str	r3, [sp]
   10868:	mov	r3, #1
   1086c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10870:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10878:	bl	0 <flatcc_json_parser_union_type>
   1087c:	str	r0, [fp, #-36]	; 0xffffffdc
   10880:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10884:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10888:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1088c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10890:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10894:	str	r0, [fp, #-36]	; 0xffffffdc
   10898:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   1089c:	ldrd	r2, [fp, #-12]
   108a0:	mov	r0, #0
   108a4:	ldr	r1, [pc, #660]	; 10b40 <Fantasy_Movie_parse_json_table+0x450>
   108a8:	and	r2, r2, r0
   108ac:	and	r3, r3, r1
   108b0:	mov	r0, #0
   108b4:	ldr	r1, [pc, #648]	; 10b44 <Fantasy_Movie_parse_json_table+0x454>
   108b8:	cmp	r3, r1
   108bc:	cmpeq	r2, r0
   108c0:	bne	10940 <Fantasy_Movie_parse_json_table+0x250>
   108c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   108c8:	str	r3, [fp, #-16]
   108cc:	mov	r3, #2
   108d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108d4:	ldr	r1, [fp, #-16]
   108d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   108dc:	bl	1574 <flatcc_json_parser_match_symbol>
   108e0:	str	r0, [fp, #-36]	; 0xffffffdc
   108e4:	ldr	r2, [fp, #-16]
   108e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   108ec:	cmp	r2, r3
   108f0:	beq	10928 <Fantasy_Movie_parse_json_table+0x238>
   108f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108f8:	ldr	r2, [pc, #568]	; 10b38 <Fantasy_Movie_parse_json_table+0x448>
   108fc:	str	r2, [sp, #8]
   10900:	str	r3, [sp, #4]
   10904:	mov	r3, #3
   10908:	str	r3, [sp]
   1090c:	mov	r3, #1
   10910:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10914:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1091c:	bl	0 <flatcc_json_parser_union>
   10920:	str	r0, [fp, #-36]	; 0xffffffdc
   10924:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10928:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1092c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10930:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10934:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10938:	str	r0, [fp, #-36]	; 0xffffffdc
   1093c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10940:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10944:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1094c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10950:	str	r0, [fp, #-36]	; 0xffffffdc
   10954:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10958:	ldrd	r2, [fp, #-12]
   1095c:	add	r1, pc, #452	; 0x1c4
   10960:	ldrd	r0, [r1]
   10964:	cmp	r3, r1
   10968:	cmpeq	r2, r0
   1096c:	bne	10a50 <Fantasy_Movie_parse_json_table+0x360>
   10970:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10974:	add	r3, r3, #8
   10978:	str	r3, [fp, #-36]	; 0xffffffdc
   1097c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10984:	bl	fa8 <flatcc_json_parser_symbol_part>
   10988:	strd	r0, [fp, #-12]
   1098c:	ldrd	r2, [fp, #-12]
   10990:	mov	r0, #0
   10994:	ldr	r1, [pc, #420]	; 10b40 <Fantasy_Movie_parse_json_table+0x450>
   10998:	and	r2, r2, r0
   1099c:	and	r3, r3, r1
   109a0:	mov	r0, #0
   109a4:	ldr	r1, [pc, #412]	; 10b48 <Fantasy_Movie_parse_json_table+0x458>
   109a8:	cmp	r3, r1
   109ac:	cmpeq	r2, r0
   109b0:	bne	10a38 <Fantasy_Movie_parse_json_table+0x348>
   109b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   109b8:	str	r3, [fp, #-16]
   109bc:	mov	r3, #2
   109c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   109c4:	ldr	r1, [fp, #-16]
   109c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   109cc:	bl	1574 <flatcc_json_parser_match_symbol>
   109d0:	str	r0, [fp, #-36]	; 0xffffffdc
   109d4:	ldr	r2, [fp, #-16]
   109d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   109dc:	cmp	r2, r3
   109e0:	beq	10a20 <Fantasy_Movie_parse_json_table+0x330>
   109e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   109e8:	ldr	r2, [pc, #328]	; 10b38 <Fantasy_Movie_parse_json_table+0x448>
   109ec:	str	r2, [sp, #12]
   109f0:	ldr	r2, [pc, #340]	; 10b4c <Fantasy_Movie_parse_json_table+0x45c>
   109f4:	str	r2, [sp, #8]
   109f8:	str	r3, [sp, #4]
   109fc:	mov	r3, #7
   10a00:	str	r3, [sp]
   10a04:	mov	r3, #3
   10a08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10a0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a14:	bl	0 <flatcc_json_parser_union_type>
   10a18:	str	r0, [fp, #-36]	; 0xffffffdc
   10a1c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10a20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10a24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10a30:	str	r0, [fp, #-36]	; 0xffffffdc
   10a34:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10a38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10a3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a44:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10a48:	str	r0, [fp, #-36]	; 0xffffffdc
   10a4c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10a50:	ldrd	r2, [fp, #-12]
   10a54:	mov	r0, #-16777216	; 0xff000000
   10a58:	mvn	r1, #0
   10a5c:	and	r2, r2, r0
   10a60:	and	r3, r3, r1
   10a64:	add	r1, pc, #196	; 0xc4
   10a68:	ldrd	r0, [r1]
   10a6c:	cmp	r3, r1
   10a70:	cmpeq	r2, r0
   10a74:	bne	10af4 <Fantasy_Movie_parse_json_table+0x404>
   10a78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10a7c:	str	r3, [fp, #-16]
   10a80:	mov	r3, #5
   10a84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10a88:	ldr	r1, [fp, #-16]
   10a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a90:	bl	1574 <flatcc_json_parser_match_symbol>
   10a94:	str	r0, [fp, #-36]	; 0xffffffdc
   10a98:	ldr	r2, [fp, #-16]
   10a9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10aa0:	cmp	r2, r3
   10aa4:	beq	10adc <Fantasy_Movie_parse_json_table+0x3ec>
   10aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10aac:	ldr	r2, [pc, #132]	; 10b38 <Fantasy_Movie_parse_json_table+0x448>
   10ab0:	str	r2, [sp, #8]
   10ab4:	str	r3, [sp, #4]
   10ab8:	mov	r3, #7
   10abc:	str	r3, [sp]
   10ac0:	mov	r3, #3
   10ac4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10ac8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ad0:	bl	0 <flatcc_json_parser_union>
   10ad4:	str	r0, [fp, #-36]	; 0xffffffdc
   10ad8:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10adc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10ae0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ae8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10aec:	str	r0, [fp, #-36]	; 0xffffffdc
   10af0:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10af4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10af8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10b00:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10b04:	str	r0, [fp, #-36]	; 0xffffffdc
   10b08:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10b0c:	nop			; (mov r0, r0)
   10b10:	.word	0x61637464
   10b14:	.word	0x63686172
   10b18:	.word	0x676f6e69
   10b1c:	.word	0x616e7461
   10b20:	.word	0x79706500
   10b24:	.word	0x73745f74
   10b28:	.word	0x6f5f7479
   10b2c:	.word	0x63616d65
   10b30:	.word	0x6f000000
   10b34:	.word	0x63616d65
   10b38:	.word	0x00000000
   10b3c:	.word	0x00000360
   10b40:	.word	0xffff0000
   10b44:	.word	0x73740000
   10b48:	.word	0x70650000
   10b4c:	.word	0x00000370
   10b50:	ldrd	r2, [fp, #-12]
   10b54:	add	r1, pc, #948	; 0x3b4
   10b58:	ldrd	r0, [r1]
   10b5c:	cmp	r3, r1
   10b60:	cmpeq	r2, r0
   10b64:	bhi	10d24 <Fantasy_Movie_parse_json_table+0x634>
   10b68:	ldrd	r2, [fp, #-12]
   10b6c:	add	r1, pc, #932	; 0x3a4
   10b70:	ldrd	r0, [r1]
   10b74:	cmp	r3, r1
   10b78:	cmpeq	r2, r0
   10b7c:	bne	10d0c <Fantasy_Movie_parse_json_table+0x61c>
   10b80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10b84:	add	r3, r3, #8
   10b88:	str	r3, [fp, #-36]	; 0xffffffdc
   10b8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10b90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10b94:	bl	fa8 <flatcc_json_parser_symbol_part>
   10b98:	strd	r0, [fp, #-12]
   10b9c:	ldrd	r2, [fp, #-12]
   10ba0:	mvn	r0, #255	; 0xff
   10ba4:	mvn	r1, #0
   10ba8:	and	r2, r2, r0
   10bac:	and	r3, r3, r1
   10bb0:	add	r1, pc, #872	; 0x368
   10bb4:	ldrd	r0, [r1]
   10bb8:	cmp	r3, r1
   10bbc:	cmpeq	r2, r0
   10bc0:	bne	10c50 <Fantasy_Movie_parse_json_table+0x560>
   10bc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10bc8:	str	r3, [fp, #-16]
   10bcc:	mov	r3, #7
   10bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10bd4:	ldr	r1, [fp, #-16]
   10bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10bdc:	bl	1574 <flatcc_json_parser_match_symbol>
   10be0:	str	r0, [fp, #-36]	; 0xffffffdc
   10be4:	ldr	r2, [fp, #-16]
   10be8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10bec:	cmp	r2, r3
   10bf0:	beq	10c38 <Fantasy_Movie_parse_json_table+0x548>
   10bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bf8:	ldr	r2, [pc, #840]	; 10f48 <Fantasy_Movie_parse_json_table+0x858>
   10bfc:	str	r2, [sp, #16]
   10c00:	ldr	r2, [pc, #836]	; 10f4c <Fantasy_Movie_parse_json_table+0x85c>
   10c04:	str	r2, [sp, #12]
   10c08:	ldr	r2, [pc, #832]	; 10f50 <Fantasy_Movie_parse_json_table+0x860>
   10c0c:	str	r2, [sp, #8]
   10c10:	str	r3, [sp, #4]
   10c14:	mov	r3, #9
   10c18:	str	r3, [sp]
   10c1c:	mov	r3, #4
   10c20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10c24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c2c:	bl	0 <flatcc_json_parser_union_type_vector>
   10c30:	str	r0, [fp, #-36]	; 0xffffffdc
   10c34:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10c38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10c3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c44:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10c48:	str	r0, [fp, #-36]	; 0xffffffdc
   10c4c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10c50:	ldrd	r2, [fp, #-12]
   10c54:	mov	r0, #0
   10c58:	ldr	r1, [pc, #756]	; 10f54 <Fantasy_Movie_parse_json_table+0x864>
   10c5c:	and	r2, r2, r0
   10c60:	and	r3, r3, r1
   10c64:	mov	r0, #0
   10c68:	ldr	r1, [pc, #744]	; 10f58 <Fantasy_Movie_parse_json_table+0x868>
   10c6c:	cmp	r3, r1
   10c70:	cmpeq	r2, r0
   10c74:	bne	10cf4 <Fantasy_Movie_parse_json_table+0x604>
   10c78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c7c:	str	r3, [fp, #-16]
   10c80:	mov	r3, #2
   10c84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10c88:	ldr	r1, [fp, #-16]
   10c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c90:	bl	1574 <flatcc_json_parser_match_symbol>
   10c94:	str	r0, [fp, #-36]	; 0xffffffdc
   10c98:	ldr	r2, [fp, #-16]
   10c9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ca0:	cmp	r2, r3
   10ca4:	beq	10cdc <Fantasy_Movie_parse_json_table+0x5ec>
   10ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cac:	ldr	r2, [pc, #664]	; 10f4c <Fantasy_Movie_parse_json_table+0x85c>
   10cb0:	str	r2, [sp, #8]
   10cb4:	str	r3, [sp, #4]
   10cb8:	mov	r3, #9
   10cbc:	str	r3, [sp]
   10cc0:	mov	r3, #4
   10cc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10cc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10cd0:	bl	0 <flatcc_json_parser_union_vector>
   10cd4:	str	r0, [fp, #-36]	; 0xffffffdc
   10cd8:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10cdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10ce0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ce4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ce8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10cec:	str	r0, [fp, #-36]	; 0xffffffdc
   10cf0:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10cf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10cf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10cfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d00:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10d04:	str	r0, [fp, #-36]	; 0xffffffdc
   10d08:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10d0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10d10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d18:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10d1c:	str	r0, [fp, #-36]	; 0xffffffdc
   10d20:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10d24:	ldrd	r2, [fp, #-12]
   10d28:	add	r1, pc, #504	; 0x1f8
   10d2c:	ldrd	r0, [r1]
   10d30:	cmp	r3, r1
   10d34:	cmpeq	r2, r0
   10d38:	bne	10f60 <Fantasy_Movie_parse_json_table+0x870>
   10d3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10d40:	add	r3, r3, #8
   10d44:	str	r3, [fp, #-36]	; 0xffffffdc
   10d48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10d4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10d50:	bl	fa8 <flatcc_json_parser_symbol_part>
   10d54:	strd	r0, [fp, #-12]
   10d58:	ldrd	r2, [fp, #-12]
   10d5c:	add	r1, pc, #460	; 0x1cc
   10d60:	ldrd	r0, [r1]
   10d64:	cmp	r3, r1
   10d68:	cmpeq	r2, r0
   10d6c:	bne	10e50 <Fantasy_Movie_parse_json_table+0x760>
   10d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10d74:	add	r3, r3, #8
   10d78:	str	r3, [fp, #-36]	; 0xffffffdc
   10d7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10d84:	bl	fa8 <flatcc_json_parser_symbol_part>
   10d88:	strd	r0, [fp, #-12]
   10d8c:	ldrd	r2, [fp, #-12]
   10d90:	mov	r0, #0
   10d94:	mvn	r1, #255	; 0xff
   10d98:	and	r2, r2, r0
   10d9c:	and	r3, r3, r1
   10da0:	add	r1, pc, #400	; 0x190
   10da4:	ldrd	r0, [r1]
   10da8:	cmp	r3, r1
   10dac:	cmpeq	r2, r0
   10db0:	bne	10e38 <Fantasy_Movie_parse_json_table+0x748>
   10db4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10db8:	str	r3, [fp, #-16]
   10dbc:	mov	r3, #3
   10dc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10dc4:	ldr	r1, [fp, #-16]
   10dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10dcc:	bl	1574 <flatcc_json_parser_match_symbol>
   10dd0:	str	r0, [fp, #-36]	; 0xffffffdc
   10dd4:	ldr	r2, [fp, #-16]
   10dd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ddc:	cmp	r2, r3
   10de0:	beq	10e20 <Fantasy_Movie_parse_json_table+0x730>
   10de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10de8:	ldr	r2, [pc, #348]	; 10f4c <Fantasy_Movie_parse_json_table+0x85c>
   10dec:	str	r2, [sp, #12]
   10df0:	ldr	r2, [pc, #356]	; 10f5c <Fantasy_Movie_parse_json_table+0x86c>
   10df4:	str	r2, [sp, #8]
   10df8:	str	r3, [sp, #4]
   10dfc:	mov	r3, #1
   10e00:	str	r3, [sp]
   10e04:	mov	r3, #0
   10e08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10e10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10e14:	bl	0 <flatcc_json_parser_union_type>
   10e18:	str	r0, [fp, #-36]	; 0xffffffdc
   10e1c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10e20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10e28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10e2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10e30:	str	r0, [fp, #-36]	; 0xffffffdc
   10e34:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10e38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10e44:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10e48:	str	r0, [fp, #-36]	; 0xffffffdc
   10e4c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10e50:	ldrd	r2, [fp, #-12]
   10e54:	ldr	r0, [pc, #248]	; 10f54 <Fantasy_Movie_parse_json_table+0x864>
   10e58:	mvn	r1, #0
   10e5c:	and	r2, r2, r0
   10e60:	and	r3, r3, r1
   10e64:	add	r1, pc, #212	; 0xd4
   10e68:	ldrd	r0, [r1]
   10e6c:	cmp	r3, r1
   10e70:	cmpeq	r2, r0
   10e74:	bne	10ef4 <Fantasy_Movie_parse_json_table+0x804>
   10e78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10e7c:	str	r3, [fp, #-16]
   10e80:	mov	r3, #6
   10e84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e88:	ldr	r1, [fp, #-16]
   10e8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10e90:	bl	1574 <flatcc_json_parser_match_symbol>
   10e94:	str	r0, [fp, #-36]	; 0xffffffdc
   10e98:	ldr	r2, [fp, #-16]
   10e9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ea0:	cmp	r2, r3
   10ea4:	beq	10edc <Fantasy_Movie_parse_json_table+0x7ec>
   10ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10eac:	ldr	r2, [pc, #152]	; 10f4c <Fantasy_Movie_parse_json_table+0x85c>
   10eb0:	str	r2, [sp, #8]
   10eb4:	str	r3, [sp, #4]
   10eb8:	mov	r3, #1
   10ebc:	str	r3, [sp]
   10ec0:	mov	r3, #0
   10ec4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10ec8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ed0:	bl	0 <flatcc_json_parser_union>
   10ed4:	str	r0, [fp, #-36]	; 0xffffffdc
   10ed8:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10edc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ee8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10eec:	str	r0, [fp, #-36]	; 0xffffffdc
   10ef0:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10ef4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10ef8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10f00:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f04:	str	r0, [fp, #-36]	; 0xffffffdc
   10f08:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   10f0c:	nop			; (mov r0, r0)
   10f10:	.word	0x5f636860
   10f14:	.word	0x6d61696e
   10f18:	.word	0x61637465
   10f1c:	.word	0x63686172
   10f20:	.word	0x79706500
   10f24:	.word	0x72735f74
   10f28:	.word	0x5f636861
   10f2c:	.word	0x6d61696e
   10f30:	.word	0x65725f74
   10f34:	.word	0x72616374
   10f38:	.word	0x00000000
   10f3c:	.word	0x79706500
   10f40:	.word	0x65720000
   10f44:	.word	0x72616374
	...
   10f50:	.word	0x00000380
   10f54:	.word	0xffff0000
   10f58:	.word	0x72730000
   10f5c:	.word	0x00000390
   10f60:	ldrd	r2, [fp, #-12]
   10f64:	add	r1, pc, #604	; 0x25c
   10f68:	ldrd	r0, [r1]
   10f6c:	cmp	r3, r1
   10f70:	cmpeq	r2, r0
   10f74:	bne	110f4 <Fantasy_Movie_parse_json_table+0xa04>
   10f78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10f7c:	add	r3, r3, #8
   10f80:	str	r3, [fp, #-36]	; 0xffffffdc
   10f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10f88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10f8c:	bl	fa8 <flatcc_json_parser_symbol_part>
   10f90:	strd	r0, [fp, #-12]
   10f94:	ldrd	r2, [fp, #-12]
   10f98:	ldr	r0, [pc, #568]	; 111d8 <Fantasy_Movie_parse_json_table+0xae8>
   10f9c:	mvn	r1, #0
   10fa0:	and	r2, r2, r0
   10fa4:	and	r3, r3, r1
   10fa8:	add	r1, pc, #544	; 0x220
   10fac:	ldrd	r0, [r1]
   10fb0:	cmp	r3, r1
   10fb4:	cmpeq	r2, r0
   10fb8:	bne	11040 <Fantasy_Movie_parse_json_table+0x950>
   10fbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10fc0:	str	r3, [fp, #-16]
   10fc4:	mov	r3, #6
   10fc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10fcc:	ldr	r1, [fp, #-16]
   10fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10fd4:	bl	1574 <flatcc_json_parser_match_symbol>
   10fd8:	str	r0, [fp, #-36]	; 0xffffffdc
   10fdc:	ldr	r2, [fp, #-16]
   10fe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10fe4:	cmp	r2, r3
   10fe8:	beq	11028 <Fantasy_Movie_parse_json_table+0x938>
   10fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ff0:	ldr	r2, [pc, #484]	; 111dc <Fantasy_Movie_parse_json_table+0xaec>
   10ff4:	str	r2, [sp, #12]
   10ff8:	ldr	r2, [pc, #480]	; 111e0 <Fantasy_Movie_parse_json_table+0xaf0>
   10ffc:	str	r2, [sp, #8]
   11000:	str	r3, [sp, #4]
   11004:	mov	r3, #5
   11008:	str	r3, [sp]
   1100c:	mov	r3, #2
   11010:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11014:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11018:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1101c:	bl	0 <flatcc_json_parser_union_type>
   11020:	str	r0, [fp, #-36]	; 0xffffffdc
   11024:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   11028:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1102c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11034:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11038:	str	r0, [fp, #-36]	; 0xffffffdc
   1103c:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   11040:	ldrd	r2, [fp, #-12]
   11044:	mov	r0, #0
   11048:	mov	r1, #-16777216	; 0xff000000
   1104c:	and	r2, r2, r0
   11050:	and	r3, r3, r1
   11054:	cmp	r3, #1795162112	; 0x6b000000
   11058:	cmpeq	r2, #0
   1105c:	bne	110dc <Fantasy_Movie_parse_json_table+0x9ec>
   11060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11064:	str	r3, [fp, #-16]
   11068:	mov	r3, #1
   1106c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11070:	ldr	r1, [fp, #-16]
   11074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11078:	bl	1574 <flatcc_json_parser_match_symbol>
   1107c:	str	r0, [fp, #-36]	; 0xffffffdc
   11080:	ldr	r2, [fp, #-16]
   11084:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11088:	cmp	r2, r3
   1108c:	beq	110c4 <Fantasy_Movie_parse_json_table+0x9d4>
   11090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11094:	ldr	r2, [pc, #320]	; 111dc <Fantasy_Movie_parse_json_table+0xaec>
   11098:	str	r2, [sp, #8]
   1109c:	str	r3, [sp, #4]
   110a0:	mov	r3, #5
   110a4:	str	r3, [sp]
   110a8:	mov	r3, #2
   110ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   110b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110b8:	bl	0 <flatcc_json_parser_union>
   110bc:	str	r0, [fp, #-36]	; 0xffffffdc
   110c0:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   110c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   110cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   110d4:	str	r0, [fp, #-36]	; 0xffffffdc
   110d8:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   110dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   110e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   110ec:	str	r0, [fp, #-36]	; 0xffffffdc
   110f0:	b	11108 <Fantasy_Movie_parse_json_table+0xa18>
   110f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   110fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11100:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11104:	str	r0, [fp, #-36]	; 0xffffffdc
   11108:	sub	r3, fp, #20
   1110c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11110:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11118:	bl	11bc <flatcc_json_parser_object_end>
   1111c:	str	r0, [fp, #-36]	; 0xffffffdc
   11120:	ldr	r3, [fp, #-20]	; 0xffffffec
   11124:	cmp	r3, #0
   11128:	bne	10780 <Fantasy_Movie_parse_json_table+0x90>
   1112c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11130:	ldr	r3, [r3, #24]
   11134:	cmp	r3, #0
   11138:	bne	11198 <Fantasy_Movie_parse_json_table+0xaa8>
   1113c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11140:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11144:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11148:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1114c:	bl	0 <flatcc_json_parser_finalize_unions>
   11150:	str	r0, [fp, #-36]	; 0xffffffdc
   11154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11158:	ldr	r3, [r3]
   1115c:	mov	r0, r3
   11160:	bl	0 <flatcc_builder_end_table>
   11164:	mov	r2, r0
   11168:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1116c:	str	r2, [r3]
   11170:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11174:	ldr	r3, [r3]
   11178:	cmp	r3, #0
   1117c:	beq	111a0 <Fantasy_Movie_parse_json_table+0xab0>
   11180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11184:	b	111bc <Fantasy_Movie_parse_json_table+0xacc>
   11188:	nop			; (mov r0, r0)
   1118c:	b	111a4 <Fantasy_Movie_parse_json_table+0xab4>
   11190:	nop			; (mov r0, r0)
   11194:	b	111a4 <Fantasy_Movie_parse_json_table+0xab4>
   11198:	nop			; (mov r0, r0)
   1119c:	b	111a4 <Fantasy_Movie_parse_json_table+0xab4>
   111a0:	nop			; (mov r0, r0)
   111a4:	mov	r3, #33	; 0x21
   111a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   111ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   111b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   111b4:	bl	0 <flatcc_json_parser_set_error>
   111b8:	mov	r3, r0
   111bc:	mov	r0, r3
   111c0:	sub	sp, fp, #4
   111c4:	pop	{fp, pc}
   111c8:	.word	0x5f6b6963
   111cc:	.word	0x73696465
   111d0:	.word	0x70650000
   111d4:	.word	0x6b5f7479
   111d8:	.word	0xffff0000
   111dc:	.word	0x00000000
   111e0:	.word	0x000003a0

000111e4 <monster_test_local_json_parser_enum>:
   111e4:	push	{fp}		; (str fp, [sp, #-4]!)
   111e8:	add	fp, sp, #0
   111ec:	sub	sp, sp, #20
   111f0:	str	r0, [fp, #-8]
   111f4:	str	r1, [fp, #-12]
   111f8:	str	r2, [fp, #-16]
   111fc:	str	r3, [fp, #-20]	; 0xffffffec
   11200:	ldr	r3, [fp, #-12]
   11204:	mov	r0, r3
   11208:	add	sp, fp, #0
   1120c:	pop	{fp}		; (ldr fp, [sp], #4)
   11210:	bx	lr

00011214 <monster_test_local_MyGame_Example_json_parser_enum>:
   11214:	push	{fp, lr}
   11218:	add	fp, sp, #4
   1121c:	sub	sp, sp, #48	; 0x30
   11220:	str	r0, [fp, #-32]	; 0xffffffe0
   11224:	str	r1, [fp, #-36]	; 0xffffffdc
   11228:	str	r2, [fp, #-40]	; 0xffffffd8
   1122c:	str	r3, [fp, #-44]	; 0xffffffd4
   11230:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11234:	str	r3, [fp, #-8]
   11238:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1123c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11240:	bl	fa8 <flatcc_json_parser_symbol_part>
   11244:	strd	r0, [fp, #-20]	; 0xffffffec
   11248:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1124c:	add	r1, pc, #908	; 0x38c
   11250:	ldrd	r0, [r1]
   11254:	cmp	r3, r1
   11258:	cmpeq	r2, r0
   1125c:	bhi	1142c <monster_test_local_MyGame_Example_json_parser_enum+0x218>
   11260:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11264:	add	r1, pc, #892	; 0x37c
   11268:	ldrd	r0, [r1]
   1126c:	cmp	r3, r1
   11270:	cmpeq	r2, r0
   11274:	bhi	1130c <monster_test_local_MyGame_Example_json_parser_enum+0xf8>
   11278:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1127c:	mov	r0, #0
   11280:	mvn	r1, #255	; 0xff
   11284:	and	r2, r2, r0
   11288:	and	r3, r3, r1
   1128c:	add	r1, pc, #860	; 0x35c
   11290:	ldrd	r0, [r1]
   11294:	cmp	r3, r1
   11298:	cmpeq	r2, r0
   1129c:	bne	11304 <monster_test_local_MyGame_Example_json_parser_enum+0xf0>
   112a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   112a4:	str	r3, [fp, #-24]	; 0xffffffe8
   112a8:	mov	r3, #3
   112ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   112b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   112b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   112b8:	bl	ff0 <flatcc_json_parser_match_scope>
   112bc:	str	r0, [fp, #-36]	; 0xffffffdc
   112c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   112c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112c8:	cmp	r2, r3
   112cc:	beq	112fc <monster_test_local_MyGame_Example_json_parser_enum+0xe8>
   112d0:	ldr	r3, [fp, #8]
   112d4:	str	r3, [sp, #4]
   112d8:	ldr	r3, [fp, #4]
   112dc:	str	r3, [sp]
   112e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   112e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   112e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   112ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   112f0:	bl	57ac <MyGame_Example_Any_parse_json_enum>
   112f4:	str	r0, [fp, #-36]	; 0xffffffdc
   112f8:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   112fc:	ldr	r3, [fp, #-8]
   11300:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11304:	ldr	r3, [fp, #-8]
   11308:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   1130c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11310:	mov	r0, #0
   11314:	mvn	r1, #255	; 0xff
   11318:	and	r2, r2, r0
   1131c:	and	r3, r3, r1
   11320:	add	r1, pc, #720	; 0x2d0
   11324:	ldrd	r0, [r1]
   11328:	cmp	r3, r1
   1132c:	cmpeq	r2, r0
   11330:	bne	11398 <monster_test_local_MyGame_Example_json_parser_enum+0x184>
   11334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11338:	str	r3, [fp, #-24]	; 0xffffffe8
   1133c:	mov	r3, #3
   11340:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11344:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1134c:	bl	ff0 <flatcc_json_parser_match_scope>
   11350:	str	r0, [fp, #-36]	; 0xffffffdc
   11354:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1135c:	cmp	r2, r3
   11360:	beq	11390 <monster_test_local_MyGame_Example_json_parser_enum+0x17c>
   11364:	ldr	r3, [fp, #8]
   11368:	str	r3, [sp, #4]
   1136c:	ldr	r3, [fp, #4]
   11370:	str	r3, [sp]
   11374:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11378:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1137c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11384:	bl	4a80 <MyGame_Example_Foo_parse_json_enum>
   11388:	str	r0, [fp, #-36]	; 0xffffffdc
   1138c:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   11390:	ldr	r3, [fp, #-8]
   11394:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11398:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1139c:	mov	r0, #-16777216	; 0xff000000
   113a0:	mvn	r1, #0
   113a4:	and	r2, r2, r0
   113a8:	and	r3, r3, r1
   113ac:	add	r1, pc, #588	; 0x24c
   113b0:	ldrd	r0, [r1]
   113b4:	cmp	r3, r1
   113b8:	cmpeq	r2, r0
   113bc:	bne	11424 <monster_test_local_MyGame_Example_json_parser_enum+0x210>
   113c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   113c4:	str	r3, [fp, #-24]	; 0xffffffe8
   113c8:	mov	r3, #5
   113cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   113d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   113d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   113d8:	bl	ff0 <flatcc_json_parser_match_scope>
   113dc:	str	r0, [fp, #-36]	; 0xffffffdc
   113e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   113e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113e8:	cmp	r2, r3
   113ec:	beq	1141c <monster_test_local_MyGame_Example_json_parser_enum+0x208>
   113f0:	ldr	r3, [fp, #8]
   113f4:	str	r3, [sp, #4]
   113f8:	ldr	r3, [fp, #4]
   113fc:	str	r3, [sp]
   11400:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11404:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11408:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1140c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11410:	bl	53a4 <MyGame_Example_Color_parse_json_enum>
   11414:	str	r0, [fp, #-36]	; 0xffffffdc
   11418:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   1141c:	ldr	r3, [fp, #-8]
   11420:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11424:	ldr	r3, [fp, #-8]
   11428:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   1142c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11430:	add	r1, pc, #464	; 0x1d0
   11434:	ldrd	r0, [r1]
   11438:	cmp	r3, r1
   1143c:	cmpeq	r2, r0
   11440:	bhi	114c8 <monster_test_local_MyGame_Example_json_parser_enum+0x2b4>
   11444:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11448:	add	r1, pc, #448	; 0x1c0
   1144c:	ldrd	r0, [r1]
   11450:	cmp	r3, r1
   11454:	cmpeq	r2, r0
   11458:	bne	114c0 <monster_test_local_MyGame_Example_json_parser_enum+0x2ac>
   1145c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11460:	str	r3, [fp, #-24]	; 0xffffffe8
   11464:	mov	r3, #8
   11468:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1146c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11474:	bl	ff0 <flatcc_json_parser_match_scope>
   11478:	str	r0, [fp, #-36]	; 0xffffffdc
   1147c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11484:	cmp	r2, r3
   11488:	beq	114b8 <monster_test_local_MyGame_Example_json_parser_enum+0x2a4>
   1148c:	ldr	r3, [fp, #8]
   11490:	str	r3, [sp, #4]
   11494:	ldr	r3, [fp, #4]
   11498:	str	r3, [sp]
   1149c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   114a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   114a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   114a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   114ac:	bl	5174 <MyGame_Example_hex_enum_parse_json_enum>
   114b0:	str	r0, [fp, #-36]	; 0xffffffdc
   114b4:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   114b8:	ldr	r3, [fp, #-8]
   114bc:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   114c0:	ldr	r3, [fp, #-8]
   114c4:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   114c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   114cc:	add	r1, pc, #324	; 0x144
   114d0:	ldrd	r0, [r1]
   114d4:	cmp	r3, r1
   114d8:	cmpeq	r2, r0
   114dc:	bhi	11564 <monster_test_local_MyGame_Example_json_parser_enum+0x350>
   114e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   114e4:	add	r1, pc, #308	; 0x134
   114e8:	ldrd	r0, [r1]
   114ec:	cmp	r3, r1
   114f0:	cmpeq	r2, r0
   114f4:	bne	1155c <monster_test_local_MyGame_Example_json_parser_enum+0x348>
   114f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114fc:	str	r3, [fp, #-24]	; 0xffffffe8
   11500:	mov	r3, #8
   11504:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1150c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11510:	bl	ff0 <flatcc_json_parser_match_scope>
   11514:	str	r0, [fp, #-36]	; 0xffffffdc
   11518:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1151c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11520:	cmp	r2, r3
   11524:	beq	11554 <monster_test_local_MyGame_Example_json_parser_enum+0x340>
   11528:	ldr	r3, [fp, #8]
   1152c:	str	r3, [sp, #4]
   11530:	ldr	r3, [fp, #4]
   11534:	str	r3, [sp]
   11538:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1153c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11540:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11548:	bl	4e90 <MyGame_Example_int_enum_parse_json_enum>
   1154c:	str	r0, [fp, #-36]	; 0xffffffdc
   11550:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   11554:	ldr	r3, [fp, #-8]
   11558:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   1155c:	ldr	r3, [fp, #-8]
   11560:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11564:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11568:	add	r1, pc, #184	; 0xb8
   1156c:	ldrd	r0, [r1]
   11570:	cmp	r3, r1
   11574:	cmpeq	r2, r0
   11578:	bne	115d8 <monster_test_local_MyGame_Example_json_parser_enum+0x3c4>
   1157c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11580:	str	r3, [fp, #-24]	; 0xffffffe8
   11584:	mov	r3, #8
   11588:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1158c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11590:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11594:	bl	ff0 <flatcc_json_parser_match_scope>
   11598:	str	r0, [fp, #-36]	; 0xffffffdc
   1159c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   115a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115a4:	cmp	r2, r3
   115a8:	beq	11640 <monster_test_local_MyGame_Example_json_parser_enum+0x42c>
   115ac:	ldr	r3, [fp, #8]
   115b0:	str	r3, [sp, #4]
   115b4:	ldr	r3, [fp, #4]
   115b8:	str	r3, [sp]
   115bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   115c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   115c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   115c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   115cc:	bl	4c68 <MyGame_Example_neg_enum_parse_json_enum>
   115d0:	str	r0, [fp, #-36]	; 0xffffffdc
   115d4:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   115d8:	nop			; (mov r0, r0)
   115dc:	b	11644 <monster_test_local_MyGame_Example_json_parser_enum+0x430>
   115e0:	.word	0x656e756c
   115e4:	.word	0x6865785f
   115e8:	.word	0x71ffffff
   115ec:	.word	0x436f6c6f
   115f0:	.word	0x00000000
   115f4:	.word	0x416e7900
   115f8:	.word	0x00000000
   115fc:	.word	0x466f6f00
   11600:	.word	0x72000000
   11604:	.word	0x436f6c6f
   11608:	.word	0x656e756c
   1160c:	.word	0x696e745f
   11610:	.word	0x656e756d
   11614:	.word	0x6865785f
   11618:	.word	0x656e756c
   1161c:	.word	0x6e65675f
   11620:	.word	0x656e756d
   11624:	.word	0x696e745f
   11628:	.word	0x656e756d
   1162c:	.word	0x6e65675f
   11630:	.word	0x6d707479
   11634:	.word	0x6e6f7465
   11638:	.word	0x00000000
   1163c:	.word	0x656e756d
   11640:	nop			; (mov r0, r0)
   11644:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11648:	sub	r1, pc, #32
   1164c:	ldrd	r0, [r1]
   11650:	cmp	r3, r1
   11654:	cmpeq	r2, r0
   11658:	bne	1170c <monster_test_local_MyGame_Example_json_parser_enum+0x4f8>
   1165c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11660:	add	r3, r3, #8
   11664:	str	r3, [fp, #-36]	; 0xffffffdc
   11668:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1166c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11670:	bl	fa8 <flatcc_json_parser_symbol_part>
   11674:	strd	r0, [fp, #-20]	; 0xffffffec
   11678:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1167c:	mov	r0, #0
   11680:	mvn	r1, #0
   11684:	and	r2, r2, r0
   11688:	and	r3, r3, r1
   1168c:	sub	r1, pc, #92	; 0x5c
   11690:	ldrd	r0, [r1]
   11694:	cmp	r3, r1
   11698:	cmpeq	r2, r0
   1169c:	bne	11704 <monster_test_local_MyGame_Example_json_parser_enum+0x4f0>
   116a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   116a4:	str	r3, [fp, #-24]	; 0xffffffe8
   116a8:	mov	r3, #4
   116ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   116b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   116b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   116b8:	bl	ff0 <flatcc_json_parser_match_scope>
   116bc:	str	r0, [fp, #-36]	; 0xffffffdc
   116c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   116c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116c8:	cmp	r2, r3
   116cc:	beq	116fc <monster_test_local_MyGame_Example_json_parser_enum+0x4e8>
   116d0:	ldr	r3, [fp, #8]
   116d4:	str	r3, [sp, #4]
   116d8:	ldr	r3, [fp, #4]
   116dc:	str	r3, [sp]
   116e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   116e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   116e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   116ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   116f0:	bl	6398 <MyGame_Example_notemptyenum_parse_json_enum>
   116f4:	str	r0, [fp, #-36]	; 0xffffffdc
   116f8:	b	11714 <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   116fc:	ldr	r3, [fp, #-8]
   11700:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11704:	ldr	r3, [fp, #-8]
   11708:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   1170c:	ldr	r3, [fp, #-8]
   11710:	b	11718 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11714:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11718:	mov	r0, r3
   1171c:	sub	sp, fp, #4
   11720:	pop	{fp, pc}

00011724 <monster_test_local_MyGame_Example2_json_parser_enum>:
   11724:	push	{fp}		; (str fp, [sp, #-4]!)
   11728:	add	fp, sp, #0
   1172c:	sub	sp, sp, #20
   11730:	str	r0, [fp, #-8]
   11734:	str	r1, [fp, #-12]
   11738:	str	r2, [fp, #-16]
   1173c:	str	r3, [fp, #-20]	; 0xffffffec
   11740:	ldr	r3, [fp, #-12]
   11744:	mov	r0, r3
   11748:	add	sp, fp, #0
   1174c:	pop	{fp}		; (ldr fp, [sp], #4)
   11750:	bx	lr

00011754 <monster_test_local_MyGame_json_parser_enum>:
   11754:	push	{fp}		; (str fp, [sp, #-4]!)
   11758:	add	fp, sp, #0
   1175c:	sub	sp, sp, #20
   11760:	str	r0, [fp, #-8]
   11764:	str	r1, [fp, #-12]
   11768:	str	r2, [fp, #-16]
   1176c:	str	r3, [fp, #-20]	; 0xffffffec
   11770:	ldr	r3, [fp, #-12]
   11774:	mov	r0, r3
   11778:	add	sp, fp, #0
   1177c:	pop	{fp}		; (ldr fp, [sp], #4)
   11780:	bx	lr

00011784 <monster_test_local_Fantasy_json_parser_enum>:
   11784:	push	{fp, lr}
   11788:	add	fp, sp, #4
   1178c:	sub	sp, sp, #48	; 0x30
   11790:	str	r0, [fp, #-32]	; 0xffffffe0
   11794:	str	r1, [fp, #-36]	; 0xffffffdc
   11798:	str	r2, [fp, #-40]	; 0xffffffd8
   1179c:	str	r3, [fp, #-44]	; 0xffffffd4
   117a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   117a4:	str	r3, [fp, #-8]
   117a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   117ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   117b0:	bl	fa8 <flatcc_json_parser_symbol_part>
   117b4:	strd	r0, [fp, #-20]	; 0xffffffec
   117b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   117bc:	add	r1, pc, #204	; 0xcc
   117c0:	ldrd	r0, [r1]
   117c4:	cmp	r3, r1
   117c8:	cmpeq	r2, r0
   117cc:	bne	1187c <monster_test_local_Fantasy_json_parser_enum+0xf8>
   117d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   117d4:	add	r3, r3, #8
   117d8:	str	r3, [fp, #-36]	; 0xffffffdc
   117dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   117e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   117e4:	bl	fa8 <flatcc_json_parser_symbol_part>
   117e8:	strd	r0, [fp, #-20]	; 0xffffffec
   117ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   117f0:	mov	r0, #0
   117f4:	mov	r1, #-16777216	; 0xff000000
   117f8:	and	r2, r2, r0
   117fc:	and	r3, r3, r1
   11800:	cmp	r3, #1912602624	; 0x72000000
   11804:	cmpeq	r2, #0
   11808:	bne	11874 <monster_test_local_Fantasy_json_parser_enum+0xf0>
   1180c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11810:	str	r3, [fp, #-24]	; 0xffffffe8
   11814:	mov	r3, #1
   11818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1181c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11820:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11824:	bl	ff0 <flatcc_json_parser_match_scope>
   11828:	str	r0, [fp, #-36]	; 0xffffffdc
   1182c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11834:	cmp	r2, r3
   11838:	beq	1186c <monster_test_local_Fantasy_json_parser_enum+0xe8>
   1183c:	ldr	r3, [fp, #8]
   11840:	str	r3, [sp, #4]
   11844:	ldr	r3, [fp, #4]
   11848:	str	r3, [sp]
   1184c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11850:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11854:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1185c:	bl	1021c <Fantasy_Character_parse_json_enum>
   11860:	str	r0, [fp, #-36]	; 0xffffffdc
   11864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11868:	b	11880 <monster_test_local_Fantasy_json_parser_enum+0xfc>
   1186c:	ldr	r3, [fp, #-8]
   11870:	b	11880 <monster_test_local_Fantasy_json_parser_enum+0xfc>
   11874:	ldr	r3, [fp, #-8]
   11878:	b	11880 <monster_test_local_Fantasy_json_parser_enum+0xfc>
   1187c:	ldr	r3, [fp, #-8]
   11880:	mov	r0, r3
   11884:	sub	sp, fp, #4
   11888:	pop	{fp, pc}
   1188c:	nop			; (mov r0, r0)
   11890:	.word	0x61637465
   11894:	.word	0x43686172

00011898 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum>:
   11898:	push	{fp, lr}
   1189c:	add	fp, sp, #4
   118a0:	sub	sp, sp, #48	; 0x30
   118a4:	str	r0, [fp, #-32]	; 0xffffffe0
   118a8:	str	r1, [fp, #-36]	; 0xffffffdc
   118ac:	str	r2, [fp, #-40]	; 0xffffffd8
   118b0:	str	r3, [fp, #-44]	; 0xffffffd4
   118b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118b8:	str	r3, [fp, #-8]
   118bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   118c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   118c4:	bl	fa8 <flatcc_json_parser_symbol_part>
   118c8:	strd	r0, [fp, #-20]	; 0xffffffec
   118cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   118d0:	add	r1, pc, #208	; 0xd0
   118d4:	ldrd	r0, [r1]
   118d8:	cmp	r3, r1
   118dc:	cmpeq	r2, r0
   118e0:	bne	11998 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
   118e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118e8:	add	r3, r3, #8
   118ec:	str	r3, [fp, #-36]	; 0xffffffdc
   118f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   118f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   118f8:	bl	fa8 <flatcc_json_parser_symbol_part>
   118fc:	strd	r0, [fp, #-20]	; 0xffffffec
   11900:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11904:	mov	r0, #0
   11908:	mvn	r1, #255	; 0xff
   1190c:	and	r2, r2, r0
   11910:	and	r3, r3, r1
   11914:	add	r1, pc, #148	; 0x94
   11918:	ldrd	r0, [r1]
   1191c:	cmp	r3, r1
   11920:	cmpeq	r2, r0
   11924:	bne	11990 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
   11928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1192c:	str	r3, [fp, #-24]	; 0xffffffe8
   11930:	mov	r3, #3
   11934:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1193c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11940:	bl	ff0 <flatcc_json_parser_match_scope>
   11944:	str	r0, [fp, #-36]	; 0xffffffdc
   11948:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1194c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11950:	cmp	r2, r3
   11954:	beq	11988 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0xf0>
   11958:	ldr	r3, [fp, #8]
   1195c:	str	r3, [sp, #4]
   11960:	ldr	r3, [fp, #4]
   11964:	str	r3, [sp]
   11968:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1196c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11978:	bl	3930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
   1197c:	str	r0, [fp, #-36]	; 0xffffffdc
   11980:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11984:	b	1199c <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
   11988:	ldr	r3, [fp, #-8]
   1198c:	b	1199c <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
   11990:	ldr	r3, [fp, #-8]
   11994:	b	1199c <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
   11998:	ldr	r3, [fp, #-8]
   1199c:	mov	r0, r3
   119a0:	sub	sp, fp, #4
   119a4:	pop	{fp, pc}
   119a8:	.word	0x496e636c
   119ac:	.word	0x46726f6d
   119b0:	.word	0x00000000
   119b4:	.word	0x75646500

000119b8 <monster_test_global_json_parser_enum>:
   119b8:	push	{fp, lr}
   119bc:	add	fp, sp, #4
   119c0:	sub	sp, sp, #48	; 0x30
   119c4:	str	r0, [fp, #-32]	; 0xffffffe0
   119c8:	str	r1, [fp, #-36]	; 0xffffffdc
   119cc:	str	r2, [fp, #-40]	; 0xffffffd8
   119d0:	str	r3, [fp, #-44]	; 0xffffffd4
   119d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119d8:	str	r3, [fp, #-8]
   119dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   119e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   119e4:	bl	fa8 <flatcc_json_parser_symbol_part>
   119e8:	strd	r0, [fp, #-20]	; 0xffffffec
   119ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   119f0:	add	r1, pc, #784	; 0x310
   119f4:	ldrd	r0, [r1]
   119f8:	cmp	r3, r1
   119fc:	cmpeq	r2, r0
   11a00:	bhi	11b08 <monster_test_global_json_parser_enum+0x150>
   11a04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11a08:	add	r1, pc, #768	; 0x300
   11a0c:	ldrd	r0, [r1]
   11a10:	cmp	r3, r1
   11a14:	cmpeq	r2, r0
   11a18:	bne	11b00 <monster_test_global_json_parser_enum+0x148>
   11a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a20:	add	r3, r3, #8
   11a24:	str	r3, [fp, #-36]	; 0xffffffdc
   11a28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11a2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a30:	bl	fa8 <flatcc_json_parser_symbol_part>
   11a34:	strd	r0, [fp, #-20]	; 0xffffffec
   11a38:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11a3c:	add	r1, pc, #724	; 0x2d4
   11a40:	ldrd	r0, [r1]
   11a44:	cmp	r3, r1
   11a48:	cmpeq	r2, r0
   11a4c:	bne	11af8 <monster_test_global_json_parser_enum+0x140>
   11a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a54:	add	r3, r3, #8
   11a58:	str	r3, [fp, #-36]	; 0xffffffdc
   11a5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a64:	bl	fa8 <flatcc_json_parser_symbol_part>
   11a68:	strd	r0, [fp, #-20]	; 0xffffffec
   11a6c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11a70:	mov	r0, #0
   11a74:	mov	r1, #-16777216	; 0xff000000
   11a78:	and	r2, r2, r0
   11a7c:	and	r3, r3, r1
   11a80:	cmp	r3, #1912602624	; 0x72000000
   11a84:	cmpeq	r2, #0
   11a88:	bne	11af0 <monster_test_global_json_parser_enum+0x138>
   11a8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a90:	str	r3, [fp, #-24]	; 0xffffffe8
   11a94:	mov	r3, #1
   11a98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11a9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11aa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11aa4:	bl	ff0 <flatcc_json_parser_match_scope>
   11aa8:	str	r0, [fp, #-36]	; 0xffffffdc
   11aac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ab4:	cmp	r2, r3
   11ab8:	beq	11ae8 <monster_test_global_json_parser_enum+0x130>
   11abc:	ldr	r3, [fp, #8]
   11ac0:	str	r3, [sp, #4]
   11ac4:	ldr	r3, [fp, #4]
   11ac8:	str	r3, [sp]
   11acc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ad0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11ad4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11adc:	bl	1021c <Fantasy_Character_parse_json_enum>
   11ae0:	str	r0, [fp, #-36]	; 0xffffffdc
   11ae4:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   11ae8:	ldr	r3, [fp, #-8]
   11aec:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11af0:	ldr	r3, [fp, #-8]
   11af4:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11af8:	ldr	r3, [fp, #-8]
   11afc:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11b00:	ldr	r3, [fp, #-8]
   11b04:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11b08:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11b0c:	add	r1, pc, #524	; 0x20c
   11b10:	ldrd	r0, [r1]
   11b14:	cmp	r3, r1
   11b18:	cmpeq	r2, r0
   11b1c:	bne	121dc <monster_test_global_json_parser_enum+0x824>
   11b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b24:	add	r3, r3, #8
   11b28:	str	r3, [fp, #-36]	; 0xffffffdc
   11b2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b34:	bl	fa8 <flatcc_json_parser_symbol_part>
   11b38:	strd	r0, [fp, #-20]	; 0xffffffec
   11b3c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11b40:	add	r1, pc, #480	; 0x1e0
   11b44:	ldrd	r0, [r1]
   11b48:	cmp	r3, r1
   11b4c:	cmpeq	r2, r0
   11b50:	bhi	11e28 <monster_test_global_json_parser_enum+0x470>
   11b54:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11b58:	add	r1, pc, #464	; 0x1d0
   11b5c:	ldrd	r0, [r1]
   11b60:	cmp	r3, r1
   11b64:	cmpeq	r2, r0
   11b68:	bhi	11c3c <monster_test_global_json_parser_enum+0x284>
   11b6c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11b70:	add	r1, pc, #448	; 0x1c0
   11b74:	ldrd	r0, [r1]
   11b78:	cmp	r3, r1
   11b7c:	cmpeq	r2, r0
   11b80:	bne	11c34 <monster_test_global_json_parser_enum+0x27c>
   11b84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b88:	add	r3, r3, #8
   11b8c:	str	r3, [fp, #-36]	; 0xffffffdc
   11b90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11b94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b98:	bl	fa8 <flatcc_json_parser_symbol_part>
   11b9c:	strd	r0, [fp, #-20]	; 0xffffffec
   11ba0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11ba4:	mov	r0, #0
   11ba8:	ldr	r1, [pc, #416]	; 11d50 <monster_test_global_json_parser_enum+0x398>
   11bac:	and	r2, r2, r0
   11bb0:	and	r3, r3, r1
   11bb4:	mov	r0, #0
   11bb8:	ldr	r1, [pc, #404]	; 11d54 <monster_test_global_json_parser_enum+0x39c>
   11bbc:	cmp	r3, r1
   11bc0:	cmpeq	r2, r0
   11bc4:	bne	11c2c <monster_test_global_json_parser_enum+0x274>
   11bc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bcc:	str	r3, [fp, #-24]	; 0xffffffe8
   11bd0:	mov	r3, #2
   11bd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11be0:	bl	ff0 <flatcc_json_parser_match_scope>
   11be4:	str	r0, [fp, #-36]	; 0xffffffdc
   11be8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bf0:	cmp	r2, r3
   11bf4:	beq	11c24 <monster_test_global_json_parser_enum+0x26c>
   11bf8:	ldr	r3, [fp, #8]
   11bfc:	str	r3, [sp, #4]
   11c00:	ldr	r3, [fp, #4]
   11c04:	str	r3, [sp]
   11c08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11c0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11c10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11c14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c18:	bl	57ac <MyGame_Example_Any_parse_json_enum>
   11c1c:	str	r0, [fp, #-36]	; 0xffffffdc
   11c20:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   11c24:	ldr	r3, [fp, #-8]
   11c28:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11c2c:	ldr	r3, [fp, #-8]
   11c30:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11c34:	ldr	r3, [fp, #-8]
   11c38:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11c3c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11c40:	add	r1, pc, #248	; 0xf8
   11c44:	ldrd	r0, [r1]
   11c48:	cmp	r3, r1
   11c4c:	cmpeq	r2, r0
   11c50:	bne	11d58 <monster_test_global_json_parser_enum+0x3a0>
   11c54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c58:	add	r3, r3, #8
   11c5c:	str	r3, [fp, #-36]	; 0xffffffdc
   11c60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11c64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11c68:	bl	fa8 <flatcc_json_parser_symbol_part>
   11c6c:	strd	r0, [fp, #-20]	; 0xffffffec
   11c70:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11c74:	mov	r0, #0
   11c78:	mvn	r1, #0
   11c7c:	and	r2, r2, r0
   11c80:	and	r3, r3, r1
   11c84:	add	r1, pc, #188	; 0xbc
   11c88:	ldrd	r0, [r1]
   11c8c:	cmp	r3, r1
   11c90:	cmpeq	r2, r0
   11c94:	bne	11cfc <monster_test_global_json_parser_enum+0x344>
   11c98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c9c:	str	r3, [fp, #-24]	; 0xffffffe8
   11ca0:	mov	r3, #4
   11ca4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11cb0:	bl	ff0 <flatcc_json_parser_match_scope>
   11cb4:	str	r0, [fp, #-36]	; 0xffffffdc
   11cb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cc0:	cmp	r2, r3
   11cc4:	beq	11cf4 <monster_test_global_json_parser_enum+0x33c>
   11cc8:	ldr	r3, [fp, #8]
   11ccc:	str	r3, [sp, #4]
   11cd0:	ldr	r3, [fp, #4]
   11cd4:	str	r3, [sp]
   11cd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11cdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11ce0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11ce4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ce8:	bl	53a4 <MyGame_Example_Color_parse_json_enum>
   11cec:	str	r0, [fp, #-36]	; 0xffffffdc
   11cf0:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   11cf4:	ldr	r3, [fp, #-8]
   11cf8:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11cfc:	ldr	r3, [fp, #-8]
   11d00:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11d04:	nop			; (mov r0, r0)
   11d08:	.word	0x6d652e44
   11d0c:	.word	0x4d794761
   11d10:	.word	0x6173792e
   11d14:	.word	0x46616e74
   11d18:	.word	0x61637465
   11d1c:	.word	0x43686172
   11d20:	.word	0x6d652e45
   11d24:	.word	0x4d794761
   11d28:	.word	0x6c652e67
   11d2c:	.word	0x78616d70
   11d30:	.word	0x6c652e42
   11d34:	.word	0x78616d70
   11d38:	.word	0x6c652e41
   11d3c:	.word	0x78616d70
   11d40:	.word	0x6c652e43
   11d44:	.word	0x78616d70
   11d48:	.word	0x00000000
   11d4c:	.word	0x6f6c6f72
   11d50:	.word	0xffff0000
   11d54:	.word	0x6e790000
   11d58:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11d5c:	add	r1, pc, #852	; 0x354
   11d60:	ldrd	r0, [r1]
   11d64:	cmp	r3, r1
   11d68:	cmpeq	r2, r0
   11d6c:	bne	11e20 <monster_test_global_json_parser_enum+0x468>
   11d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11d74:	add	r3, r3, #8
   11d78:	str	r3, [fp, #-36]	; 0xffffffdc
   11d7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11d84:	bl	fa8 <flatcc_json_parser_symbol_part>
   11d88:	strd	r0, [fp, #-20]	; 0xffffffec
   11d8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11d90:	mov	r0, #0
   11d94:	ldr	r1, [pc, #860]	; 120f8 <monster_test_global_json_parser_enum+0x740>
   11d98:	and	r2, r2, r0
   11d9c:	and	r3, r3, r1
   11da0:	mov	r0, #0
   11da4:	ldr	r1, [pc, #848]	; 120fc <monster_test_global_json_parser_enum+0x744>
   11da8:	cmp	r3, r1
   11dac:	cmpeq	r2, r0
   11db0:	bne	11e18 <monster_test_global_json_parser_enum+0x460>
   11db4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11db8:	str	r3, [fp, #-24]	; 0xffffffe8
   11dbc:	mov	r3, #2
   11dc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11dc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dcc:	bl	ff0 <flatcc_json_parser_match_scope>
   11dd0:	str	r0, [fp, #-36]	; 0xffffffdc
   11dd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ddc:	cmp	r2, r3
   11de0:	beq	11e10 <monster_test_global_json_parser_enum+0x458>
   11de4:	ldr	r3, [fp, #8]
   11de8:	str	r3, [sp, #4]
   11dec:	ldr	r3, [fp, #4]
   11df0:	str	r3, [sp]
   11df4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11df8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11dfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e04:	bl	4a80 <MyGame_Example_Foo_parse_json_enum>
   11e08:	str	r0, [fp, #-36]	; 0xffffffdc
   11e0c:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   11e10:	ldr	r3, [fp, #-8]
   11e14:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11e18:	ldr	r3, [fp, #-8]
   11e1c:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11e20:	ldr	r3, [fp, #-8]
   11e24:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11e28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11e2c:	add	r1, pc, #652	; 0x28c
   11e30:	ldrd	r0, [r1]
   11e34:	cmp	r3, r1
   11e38:	cmpeq	r2, r0
   11e3c:	bhi	11f10 <monster_test_global_json_parser_enum+0x558>
   11e40:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11e44:	add	r1, pc, #628	; 0x274
   11e48:	ldrd	r0, [r1]
   11e4c:	cmp	r3, r1
   11e50:	cmpeq	r2, r0
   11e54:	bne	11f08 <monster_test_global_json_parser_enum+0x550>
   11e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e5c:	add	r3, r3, #8
   11e60:	str	r3, [fp, #-36]	; 0xffffffdc
   11e64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11e68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e6c:	bl	fa8 <flatcc_json_parser_symbol_part>
   11e70:	strd	r0, [fp, #-20]	; 0xffffffec
   11e74:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11e78:	mvn	r0, #255	; 0xff
   11e7c:	mvn	r1, #0
   11e80:	and	r2, r2, r0
   11e84:	and	r3, r3, r1
   11e88:	add	r1, pc, #568	; 0x238
   11e8c:	ldrd	r0, [r1]
   11e90:	cmp	r3, r1
   11e94:	cmpeq	r2, r0
   11e98:	bne	11f00 <monster_test_global_json_parser_enum+0x548>
   11e9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ea0:	str	r3, [fp, #-24]	; 0xffffffe8
   11ea4:	mov	r3, #7
   11ea8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11eac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11eb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11eb4:	bl	ff0 <flatcc_json_parser_match_scope>
   11eb8:	str	r0, [fp, #-36]	; 0xffffffdc
   11ebc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ec4:	cmp	r2, r3
   11ec8:	beq	11ef8 <monster_test_global_json_parser_enum+0x540>
   11ecc:	ldr	r3, [fp, #8]
   11ed0:	str	r3, [sp, #4]
   11ed4:	ldr	r3, [fp, #4]
   11ed8:	str	r3, [sp]
   11edc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ee0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11ee4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11eec:	bl	5174 <MyGame_Example_hex_enum_parse_json_enum>
   11ef0:	str	r0, [fp, #-36]	; 0xffffffdc
   11ef4:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   11ef8:	ldr	r3, [fp, #-8]
   11efc:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11f00:	ldr	r3, [fp, #-8]
   11f04:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11f08:	ldr	r3, [fp, #-8]
   11f0c:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11f10:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11f14:	add	r1, pc, #436	; 0x1b4
   11f18:	ldrd	r0, [r1]
   11f1c:	cmp	r3, r1
   11f20:	cmpeq	r2, r0
   11f24:	bhi	11ff8 <monster_test_global_json_parser_enum+0x640>
   11f28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11f2c:	add	r1, pc, #420	; 0x1a4
   11f30:	ldrd	r0, [r1]
   11f34:	cmp	r3, r1
   11f38:	cmpeq	r2, r0
   11f3c:	bne	11ff0 <monster_test_global_json_parser_enum+0x638>
   11f40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f44:	add	r3, r3, #8
   11f48:	str	r3, [fp, #-36]	; 0xffffffdc
   11f4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11f50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11f54:	bl	fa8 <flatcc_json_parser_symbol_part>
   11f58:	strd	r0, [fp, #-20]	; 0xffffffec
   11f5c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11f60:	mvn	r0, #255	; 0xff
   11f64:	mvn	r1, #0
   11f68:	and	r2, r2, r0
   11f6c:	and	r3, r3, r1
   11f70:	add	r1, pc, #360	; 0x168
   11f74:	ldrd	r0, [r1]
   11f78:	cmp	r3, r1
   11f7c:	cmpeq	r2, r0
   11f80:	bne	11fe8 <monster_test_global_json_parser_enum+0x630>
   11f84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f88:	str	r3, [fp, #-24]	; 0xffffffe8
   11f8c:	mov	r3, #7
   11f90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11f98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f9c:	bl	ff0 <flatcc_json_parser_match_scope>
   11fa0:	str	r0, [fp, #-36]	; 0xffffffdc
   11fa4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fac:	cmp	r2, r3
   11fb0:	beq	11fe0 <monster_test_global_json_parser_enum+0x628>
   11fb4:	ldr	r3, [fp, #8]
   11fb8:	str	r3, [sp, #4]
   11fbc:	ldr	r3, [fp, #4]
   11fc0:	str	r3, [sp]
   11fc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11fc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11fcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11fd4:	bl	4e90 <MyGame_Example_int_enum_parse_json_enum>
   11fd8:	str	r0, [fp, #-36]	; 0xffffffdc
   11fdc:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   11fe0:	ldr	r3, [fp, #-8]
   11fe4:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11fe8:	ldr	r3, [fp, #-8]
   11fec:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11ff0:	ldr	r3, [fp, #-8]
   11ff4:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   11ff8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11ffc:	add	r1, pc, #228	; 0xe4
   12000:	ldrd	r0, [r1]
   12004:	cmp	r3, r1
   12008:	cmpeq	r2, r0
   1200c:	bne	121d4 <monster_test_global_json_parser_enum+0x81c>
   12010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12014:	add	r3, r3, #8
   12018:	str	r3, [fp, #-36]	; 0xffffffdc
   1201c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12020:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12024:	bl	fa8 <flatcc_json_parser_symbol_part>
   12028:	strd	r0, [fp, #-20]	; 0xffffffec
   1202c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12030:	mvn	r0, #255	; 0xff
   12034:	mvn	r1, #0
   12038:	and	r2, r2, r0
   1203c:	and	r3, r3, r1
   12040:	add	r1, pc, #168	; 0xa8
   12044:	ldrd	r0, [r1]
   12048:	cmp	r3, r1
   1204c:	cmpeq	r2, r0
   12050:	bne	120b0 <monster_test_global_json_parser_enum+0x6f8>
   12054:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12058:	str	r3, [fp, #-24]	; 0xffffffe8
   1205c:	mov	r3, #7
   12060:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1206c:	bl	ff0 <flatcc_json_parser_match_scope>
   12070:	str	r0, [fp, #-36]	; 0xffffffdc
   12074:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1207c:	cmp	r2, r3
   12080:	beq	12100 <monster_test_global_json_parser_enum+0x748>
   12084:	ldr	r3, [fp, #8]
   12088:	str	r3, [sp, #4]
   1208c:	ldr	r3, [fp, #4]
   12090:	str	r3, [sp]
   12094:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12098:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1209c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   120a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120a4:	bl	4c68 <MyGame_Example_neg_enum_parse_json_enum>
   120a8:	str	r0, [fp, #-36]	; 0xffffffdc
   120ac:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   120b0:	nop			; (mov r0, r0)
   120b4:	b	12104 <monster_test_global_json_parser_enum+0x74c>
   120b8:	.word	0x6c652e46
   120bc:	.word	0x78616d70
   120c0:	.word	0x6c652e68
   120c4:	.word	0x78616d70
   120c8:	.word	0x6e756d00
   120cc:	.word	0x65785f65
   120d0:	.word	0x6c652e6d
   120d4:	.word	0x78616d70
   120d8:	.word	0x6c652e69
   120dc:	.word	0x78616d70
   120e0:	.word	0x6e756d00
   120e4:	.word	0x6e745f65
   120e8:	.word	0x6c652e6e
   120ec:	.word	0x78616d70
   120f0:	.word	0x6e756d00
   120f4:	.word	0x65675f65
   120f8:	.word	0xffff0000
   120fc:	.word	0x6f6f0000
   12100:	nop			; (mov r0, r0)
   12104:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12108:	add	r1, pc, #600	; 0x258
   1210c:	ldrd	r0, [r1]
   12110:	cmp	r3, r1
   12114:	cmpeq	r2, r0
   12118:	bne	121cc <monster_test_global_json_parser_enum+0x814>
   1211c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12120:	add	r3, r3, #8
   12124:	str	r3, [fp, #-36]	; 0xffffffdc
   12128:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1212c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12130:	bl	fa8 <flatcc_json_parser_symbol_part>
   12134:	strd	r0, [fp, #-20]	; 0xffffffec
   12138:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1213c:	mov	r0, #0
   12140:	mvn	r1, #255	; 0xff
   12144:	and	r2, r2, r0
   12148:	and	r3, r3, r1
   1214c:	add	r1, pc, #540	; 0x21c
   12150:	ldrd	r0, [r1]
   12154:	cmp	r3, r1
   12158:	cmpeq	r2, r0
   1215c:	bne	121c4 <monster_test_global_json_parser_enum+0x80c>
   12160:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12164:	str	r3, [fp, #-24]	; 0xffffffe8
   12168:	mov	r3, #3
   1216c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12178:	bl	ff0 <flatcc_json_parser_match_scope>
   1217c:	str	r0, [fp, #-36]	; 0xffffffdc
   12180:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12184:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12188:	cmp	r2, r3
   1218c:	beq	121bc <monster_test_global_json_parser_enum+0x804>
   12190:	ldr	r3, [fp, #8]
   12194:	str	r3, [sp, #4]
   12198:	ldr	r3, [fp, #4]
   1219c:	str	r3, [sp]
   121a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   121a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   121a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   121ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   121b0:	bl	6398 <MyGame_Example_notemptyenum_parse_json_enum>
   121b4:	str	r0, [fp, #-36]	; 0xffffffdc
   121b8:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   121bc:	ldr	r3, [fp, #-8]
   121c0:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   121c4:	ldr	r3, [fp, #-8]
   121c8:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   121cc:	ldr	r3, [fp, #-8]
   121d0:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   121d4:	ldr	r3, [fp, #-8]
   121d8:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   121dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   121e0:	add	r1, pc, #400	; 0x190
   121e4:	ldrd	r0, [r1]
   121e8:	cmp	r3, r1
   121ec:	cmpeq	r2, r0
   121f0:	bne	12350 <monster_test_global_json_parser_enum+0x998>
   121f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121f8:	add	r3, r3, #8
   121fc:	str	r3, [fp, #-36]	; 0xffffffdc
   12200:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12204:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12208:	bl	fa8 <flatcc_json_parser_symbol_part>
   1220c:	strd	r0, [fp, #-20]	; 0xffffffec
   12210:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12214:	add	r1, pc, #356	; 0x164
   12218:	ldrd	r0, [r1]
   1221c:	cmp	r3, r1
   12220:	cmpeq	r2, r0
   12224:	bne	12348 <monster_test_global_json_parser_enum+0x990>
   12228:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1222c:	add	r3, r3, #8
   12230:	str	r3, [fp, #-36]	; 0xffffffdc
   12234:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12238:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1223c:	bl	fa8 <flatcc_json_parser_symbol_part>
   12240:	strd	r0, [fp, #-20]	; 0xffffffec
   12244:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12248:	add	r1, pc, #312	; 0x138
   1224c:	ldrd	r0, [r1]
   12250:	cmp	r3, r1
   12254:	cmpeq	r2, r0
   12258:	bne	12340 <monster_test_global_json_parser_enum+0x988>
   1225c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12260:	add	r3, r3, #8
   12264:	str	r3, [fp, #-36]	; 0xffffffdc
   12268:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1226c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12270:	bl	fa8 <flatcc_json_parser_symbol_part>
   12274:	strd	r0, [fp, #-20]	; 0xffffffec
   12278:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1227c:	add	r1, pc, #268	; 0x10c
   12280:	ldrd	r0, [r1]
   12284:	cmp	r3, r1
   12288:	cmpeq	r2, r0
   1228c:	bne	12338 <monster_test_global_json_parser_enum+0x980>
   12290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12294:	add	r3, r3, #8
   12298:	str	r3, [fp, #-36]	; 0xffffffdc
   1229c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   122a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122a4:	bl	fa8 <flatcc_json_parser_symbol_part>
   122a8:	strd	r0, [fp, #-20]	; 0xffffffec
   122ac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   122b0:	mov	r0, #0
   122b4:	mov	r1, #-16777216	; 0xff000000
   122b8:	and	r2, r2, r0
   122bc:	and	r3, r3, r1
   122c0:	cmp	r3, #1694498816	; 0x65000000
   122c4:	cmpeq	r2, #0
   122c8:	bne	12330 <monster_test_global_json_parser_enum+0x978>
   122cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   122d0:	str	r3, [fp, #-24]	; 0xffffffe8
   122d4:	mov	r3, #1
   122d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   122dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   122e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   122e4:	bl	ff0 <flatcc_json_parser_match_scope>
   122e8:	str	r0, [fp, #-36]	; 0xffffffdc
   122ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   122f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122f4:	cmp	r2, r3
   122f8:	beq	12328 <monster_test_global_json_parser_enum+0x970>
   122fc:	ldr	r3, [fp, #8]
   12300:	str	r3, [sp, #4]
   12304:	ldr	r3, [fp, #4]
   12308:	str	r3, [sp]
   1230c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12310:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12318:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1231c:	bl	3930 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
   12320:	str	r0, [fp, #-36]	; 0xffffffdc
   12324:	b	12358 <monster_test_global_json_parser_enum+0x9a0>
   12328:	ldr	r3, [fp, #-8]
   1232c:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   12330:	ldr	r3, [fp, #-8]
   12334:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   12338:	ldr	r3, [fp, #-8]
   1233c:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   12340:	ldr	r3, [fp, #-8]
   12344:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   12348:	ldr	r3, [fp, #-8]
   1234c:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   12350:	ldr	r3, [fp, #-8]
   12354:	b	1235c <monster_test_global_json_parser_enum+0x9a4>
   12358:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1235c:	mov	r0, r3
   12360:	sub	sp, fp, #4
   12364:	pop	{fp, pc}
   12368:	.word	0x70747965
   1236c:	.word	0x6f74656d
   12370:	.word	0x00000000
   12374:	.word	0x6e756d00
   12378:	.word	0x6d652e4f
   1237c:	.word	0x4d794761
   12380:	.word	0x4e616d65
   12384:	.word	0x74686572
   12388:	.word	0x652e4672
   1238c:	.word	0x53706163
   12390:	.word	0x636c7564
   12394:	.word	0x6f6d496e

00012398 <monster_test_parse_json>:
   12398:	push	{fp, lr}
   1239c:	add	fp, sp, #4
   123a0:	sub	sp, sp, #72	; 0x48
   123a4:	str	r0, [fp, #-56]	; 0xffffffc8
   123a8:	str	r1, [fp, #-60]	; 0xffffffc4
   123ac:	str	r2, [fp, #-64]	; 0xffffffc0
   123b0:	str	r3, [fp, #-68]	; 0xffffffbc
   123b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   123b8:	cmp	r3, #0
   123bc:	bne	123c8 <monster_test_parse_json+0x30>
   123c0:	sub	r3, fp, #48	; 0x30
   123c4:	b	123cc <monster_test_parse_json+0x34>
   123c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   123cc:	str	r3, [fp, #-60]	; 0xffffffc4
   123d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   123d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   123d8:	add	r2, r2, r3
   123dc:	ldr	r3, [fp, #4]
   123e0:	str	r3, [sp]
   123e4:	mov	r3, r2
   123e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   123ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   123f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   123f4:	bl	ba4 <flatcc_json_parser_init>
   123f8:	mov	r3, #0
   123fc:	mov	r2, #0
   12400:	ldr	r1, [pc, #144]	; 12498 <monster_test_parse_json+0x100>
   12404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12408:	bl	0 <flatcc_builder_start_buffer>
   1240c:	mov	r3, r0
   12410:	cmp	r3, #0
   12414:	beq	12420 <monster_test_parse_json+0x88>
   12418:	mvn	r3, #0
   1241c:	b	1248c <monster_test_parse_json+0xf4>
   12420:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12424:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12428:	add	r2, r2, r3
   1242c:	sub	r3, fp, #52	; 0x34
   12430:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12434:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12438:	bl	a7e4 <MyGame_Example_Monster_parse_json_table>
   1243c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12440:	ldr	r3, [r3, #24]
   12444:	cmp	r3, #0
   12448:	beq	12458 <monster_test_parse_json+0xc0>
   1244c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12450:	ldr	r3, [r3, #24]
   12454:	b	1248c <monster_test_parse_json+0xf4>
   12458:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1245c:	mov	r1, r3
   12460:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12464:	bl	0 <flatcc_builder_end_buffer>
   12468:	mov	r3, r0
   1246c:	cmp	r3, #0
   12470:	bne	1247c <monster_test_parse_json+0xe4>
   12474:	mvn	r3, #0
   12478:	b	1248c <monster_test_parse_json+0xf4>
   1247c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12480:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12484:	str	r2, [r3, #40]	; 0x28
   12488:	mov	r3, #0
   1248c:	mov	r0, r3
   12490:	sub	sp, fp, #4
   12494:	pop	{fp, pc}
   12498:	.word	0x000000ac

0001249c <hexdump>:
   1249c:	push	{fp, lr}
   124a0:	add	fp, sp, #4
   124a4:	sub	sp, sp, #48	; 0x30
   124a8:	str	r0, [fp, #-40]	; 0xffffffd8
   124ac:	str	r1, [fp, #-44]	; 0xffffffd4
   124b0:	str	r2, [fp, #-48]	; 0xffffffd0
   124b4:	str	r3, [fp, #-52]	; 0xffffffcc
   124b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124bc:	str	r3, [fp, #-12]
   124c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124c4:	cmp	r3, #0
   124c8:	beq	124dc <hexdump+0x40>
   124cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124d0:	ldr	r1, [pc, #396]	; 12664 <hexdump+0x1c8>
   124d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   124d8:	bl	0 <fprintf>
   124dc:	mov	r3, #0
   124e0:	str	r3, [fp, #-8]
   124e4:	b	12600 <hexdump+0x164>
   124e8:	ldr	r3, [fp, #-8]
   124ec:	and	r3, r3, #15
   124f0:	cmp	r3, #0
   124f4:	bne	1252c <hexdump+0x90>
   124f8:	ldr	r3, [fp, #-8]
   124fc:	cmp	r3, #0
   12500:	beq	12518 <hexdump+0x7c>
   12504:	sub	r3, fp, #32
   12508:	mov	r2, r3
   1250c:	ldr	r1, [pc, #340]	; 12668 <hexdump+0x1cc>
   12510:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12514:	bl	0 <fprintf>
   12518:	ldr	r2, [fp, #-8]
   1251c:	ldr	r1, [pc, #328]	; 1266c <hexdump+0x1d0>
   12520:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12524:	bl	0 <fprintf>
   12528:	b	12548 <hexdump+0xac>
   1252c:	ldr	r3, [fp, #-8]
   12530:	and	r3, r3, #7
   12534:	cmp	r3, #0
   12538:	bne	12548 <hexdump+0xac>
   1253c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12540:	mov	r0, #32
   12544:	bl	0 <fputc>
   12548:	ldr	r2, [fp, #-12]
   1254c:	ldr	r3, [fp, #-8]
   12550:	add	r3, r2, r3
   12554:	ldrb	r3, [r3]
   12558:	mov	r2, r3
   1255c:	ldr	r1, [pc, #268]	; 12670 <hexdump+0x1d4>
   12560:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12564:	bl	0 <fprintf>
   12568:	ldr	r2, [fp, #-12]
   1256c:	ldr	r3, [fp, #-8]
   12570:	add	r3, r2, r3
   12574:	ldrb	r3, [r3]
   12578:	cmp	r3, #31
   1257c:	bls	12598 <hexdump+0xfc>
   12580:	ldr	r2, [fp, #-12]
   12584:	ldr	r3, [fp, #-8]
   12588:	add	r3, r2, r3
   1258c:	ldrb	r3, [r3]
   12590:	cmp	r3, #126	; 0x7e
   12594:	bls	125b4 <hexdump+0x118>
   12598:	ldr	r3, [fp, #-8]
   1259c:	and	r3, r3, #15
   125a0:	sub	r2, fp, #4
   125a4:	add	r3, r2, r3
   125a8:	mov	r2, #46	; 0x2e
   125ac:	strb	r2, [r3, #-28]	; 0xffffffe4
   125b0:	b	125d8 <hexdump+0x13c>
   125b4:	ldr	r3, [fp, #-8]
   125b8:	and	r3, r3, #15
   125bc:	ldr	r1, [fp, #-12]
   125c0:	ldr	r2, [fp, #-8]
   125c4:	add	r2, r1, r2
   125c8:	ldrb	r2, [r2]
   125cc:	sub	r1, fp, #4
   125d0:	add	r3, r1, r3
   125d4:	strb	r2, [r3, #-28]	; 0xffffffe4
   125d8:	ldr	r3, [fp, #-8]
   125dc:	and	r3, r3, #15
   125e0:	add	r3, r3, #1
   125e4:	sub	r2, fp, #4
   125e8:	add	r3, r2, r3
   125ec:	mov	r2, #0
   125f0:	strb	r2, [r3, #-28]	; 0xffffffe4
   125f4:	ldr	r3, [fp, #-8]
   125f8:	add	r3, r3, #1
   125fc:	str	r3, [fp, #-8]
   12600:	ldr	r2, [fp, #-8]
   12604:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12608:	cmp	r2, r3
   1260c:	bcc	124e8 <hexdump+0x4c>
   12610:	b	12634 <hexdump+0x198>
   12614:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12618:	mov	r2, #3
   1261c:	mov	r1, #1
   12620:	ldr	r0, [pc, #76]	; 12674 <hexdump+0x1d8>
   12624:	bl	0 <fwrite>
   12628:	ldr	r3, [fp, #-8]
   1262c:	add	r3, r3, #1
   12630:	str	r3, [fp, #-8]
   12634:	ldr	r3, [fp, #-8]
   12638:	and	r3, r3, #15
   1263c:	cmp	r3, #0
   12640:	bne	12614 <hexdump+0x178>
   12644:	sub	r3, fp, #32
   12648:	mov	r2, r3
   1264c:	ldr	r1, [pc, #20]	; 12668 <hexdump+0x1cc>
   12650:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12654:	bl	0 <fprintf>
   12658:	nop			; (mov r0, r0)
   1265c:	sub	sp, fp, #4
   12660:	pop	{fp, pc}
   12664:	.word	0x000000b4
   12668:	.word	0x000000bc
   1266c:	.word	0x000000c4
   12670:	.word	0x000000cc
   12674:	.word	0x000000d4

00012678 <cdump>:
   12678:	push	{fp, lr}
   1267c:	add	fp, sp, #4
   12680:	sub	sp, sp, #48	; 0x30
   12684:	str	r0, [fp, #-40]	; 0xffffffd8
   12688:	str	r1, [fp, #-44]	; 0xffffffd4
   1268c:	str	r2, [fp, #-48]	; 0xffffffd0
   12690:	str	r3, [fp, #-52]	; 0xffffffcc
   12694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12698:	str	r3, [fp, #-12]
   1269c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   126a0:	cmp	r3, #0
   126a4:	beq	126b0 <cdump+0x38>
   126a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   126ac:	b	126b4 <cdump+0x3c>
   126b0:	ldr	r3, [pc, #196]	; 1277c <cdump+0x104>
   126b4:	str	r3, [fp, #-40]	; 0xffffffd8
   126b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   126bc:	ldr	r1, [pc, #188]	; 12780 <cdump+0x108>
   126c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   126c4:	bl	0 <fprintf>
   126c8:	mov	r3, #0
   126cc:	str	r3, [fp, #-8]
   126d0:	b	1274c <cdump+0xd4>
   126d4:	ldr	r3, [fp, #-8]
   126d8:	and	r3, r3, #15
   126dc:	cmp	r3, #0
   126e0:	bne	126fc <cdump+0x84>
   126e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126e8:	mov	r2, #4
   126ec:	mov	r1, #1
   126f0:	ldr	r0, [pc, #140]	; 12784 <cdump+0x10c>
   126f4:	bl	0 <fwrite>
   126f8:	b	12720 <cdump+0xa8>
   126fc:	ldr	r3, [fp, #-8]
   12700:	and	r3, r3, #7
   12704:	cmp	r3, #0
   12708:	bne	12720 <cdump+0xa8>
   1270c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12710:	mov	r2, #3
   12714:	mov	r1, #1
   12718:	ldr	r0, [pc, #104]	; 12788 <cdump+0x110>
   1271c:	bl	0 <fwrite>
   12720:	ldr	r2, [fp, #-12]
   12724:	ldr	r3, [fp, #-8]
   12728:	add	r3, r2, r3
   1272c:	ldrb	r3, [r3]
   12730:	mov	r2, r3
   12734:	ldr	r1, [pc, #80]	; 1278c <cdump+0x114>
   12738:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1273c:	bl	0 <fprintf>
   12740:	ldr	r3, [fp, #-8]
   12744:	add	r3, r3, #1
   12748:	str	r3, [fp, #-8]
   1274c:	ldr	r2, [fp, #-8]
   12750:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12754:	cmp	r2, r3
   12758:	bcc	126d4 <cdump+0x5c>
   1275c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12760:	mov	r2, #4
   12764:	mov	r1, #1
   12768:	ldr	r0, [pc, #32]	; 12790 <cdump+0x118>
   1276c:	bl	0 <fwrite>
   12770:	nop			; (mov r0, r0)
   12774:	sub	sp, fp, #4
   12778:	pop	{fp, pc}
   1277c:	.word	0x000000d8
   12780:	.word	0x000000e0
   12784:	.word	0x00000100
   12788:	.word	0x000000d4
   1278c:	.word	0x00000108
   12790:	.word	0x00000114

00012794 <readfile>:
   12794:	push	{fp, lr}
   12798:	add	fp, sp, #4
   1279c:	sub	sp, sp, #40	; 0x28
   127a0:	str	r0, [fp, #-32]	; 0xffffffe0
   127a4:	str	r1, [fp, #-36]	; 0xffffffdc
   127a8:	str	r2, [fp, #-40]	; 0xffffffd8
   127ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   127b0:	cmp	r3, #0
   127b4:	bne	127c0 <readfile+0x2c>
   127b8:	sub	r3, fp, #28
   127bc:	b	127c4 <readfile+0x30>
   127c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   127c4:	str	r3, [fp, #-40]	; 0xffffffd8
   127c8:	ldr	r1, [pc, #388]	; 12954 <readfile+0x1c0>
   127cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127d0:	bl	0 <fopen>
   127d4:	str	r0, [fp, #-20]	; 0xffffffec
   127d8:	mov	r3, #0
   127dc:	str	r3, [fp, #-8]
   127e0:	mov	r3, #0
   127e4:	str	r3, [fp, #-16]
   127e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   127ec:	cmp	r3, #0
   127f0:	beq	128f4 <readfile+0x160>
   127f4:	mov	r2, #2
   127f8:	mov	r1, #0
   127fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12800:	bl	0 <fseek>
   12804:	ldr	r0, [fp, #-20]	; 0xffffffec
   12808:	bl	0 <ftell>
   1280c:	mov	r3, r0
   12810:	str	r3, [fp, #-8]
   12814:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12818:	ldr	r2, [fp, #-8]
   1281c:	str	r2, [r3]
   12820:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12824:	cmp	r3, #0
   12828:	beq	1283c <readfile+0xa8>
   1282c:	ldr	r2, [fp, #-8]
   12830:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12834:	cmp	r2, r3
   12838:	bhi	128fc <readfile+0x168>
   1283c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12840:	bl	0 <rewind>
   12844:	ldr	r3, [fp, #-8]
   12848:	cmp	r3, #0
   1284c:	beq	12858 <readfile+0xc4>
   12850:	ldr	r3, [fp, #-8]
   12854:	b	1285c <readfile+0xc8>
   12858:	mov	r3, #1
   1285c:	mov	r0, r3
   12860:	bl	0 <malloc>
   12864:	mov	r3, r0
   12868:	str	r3, [fp, #-16]
   1286c:	ldr	r3, [fp, #-16]
   12870:	cmp	r3, #0
   12874:	beq	12904 <readfile+0x170>
   12878:	mov	r3, #0
   1287c:	str	r3, [fp, #-12]
   12880:	b	12894 <readfile+0x100>
   12884:	ldr	r2, [fp, #-12]
   12888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1288c:	add	r3, r2, r3
   12890:	str	r3, [fp, #-12]
   12894:	ldr	r2, [fp, #-16]
   12898:	ldr	r3, [fp, #-12]
   1289c:	add	r0, r2, r3
   128a0:	ldr	r2, [fp, #-8]
   128a4:	ldr	r3, [fp, #-12]
   128a8:	sub	r2, r2, r3
   128ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   128b0:	mov	r1, #1
   128b4:	bl	0 <fread>
   128b8:	str	r0, [fp, #-24]	; 0xffffffe8
   128bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128c0:	cmp	r3, #0
   128c4:	bne	12884 <readfile+0xf0>
   128c8:	ldr	r2, [fp, #-12]
   128cc:	ldr	r3, [fp, #-8]
   128d0:	cmp	r2, r3
   128d4:	bne	1290c <readfile+0x178>
   128d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   128dc:	bl	0 <fclose>
   128e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   128e4:	ldr	r2, [fp, #-8]
   128e8:	str	r2, [r3]
   128ec:	ldr	r3, [fp, #-16]
   128f0:	b	12948 <readfile+0x1b4>
   128f4:	nop			; (mov r0, r0)
   128f8:	b	12910 <readfile+0x17c>
   128fc:	nop			; (mov r0, r0)
   12900:	b	12910 <readfile+0x17c>
   12904:	nop			; (mov r0, r0)
   12908:	b	12910 <readfile+0x17c>
   1290c:	nop			; (mov r0, r0)
   12910:	ldr	r3, [fp, #-20]	; 0xffffffec
   12914:	cmp	r3, #0
   12918:	beq	12924 <readfile+0x190>
   1291c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12920:	bl	0 <fclose>
   12924:	ldr	r3, [fp, #-16]
   12928:	cmp	r3, #0
   1292c:	beq	12938 <readfile+0x1a4>
   12930:	ldr	r0, [fp, #-16]
   12934:	bl	0 <free>
   12938:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1293c:	ldr	r2, [fp, #-8]
   12940:	str	r2, [r3]
   12944:	mov	r3, #0
   12948:	mov	r0, r3
   1294c:	sub	sp, fp, #4
   12950:	pop	{fp, pc}
   12954:	.word	0x0000011c

00012958 <verify_parse>:
   12958:	push	{fp, lr}
   1295c:	add	fp, sp, #4
   12960:	sub	sp, sp, #24
   12964:	str	r0, [fp, #-24]	; 0xffffffe8
   12968:	ldr	r1, [pc, #444]	; 12b2c <verify_parse+0x1d4>
   1296c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12970:	bl	a68 <MyGame_Example_Monster_as_root_with_identifier>
   12974:	str	r0, [fp, #-8]
   12978:	ldr	r0, [fp, #-8]
   1297c:	bl	ac8 <MyGame_Example_Monster_pos>
   12980:	str	r0, [fp, #-12]
   12984:	ldr	r3, [fp, #-12]
   12988:	cmp	r3, #0
   1298c:	bne	129a4 <verify_parse+0x4c>
   12990:	ldr	r3, [pc, #408]	; 12b30 <verify_parse+0x1d8>
   12994:	mov	r2, #45	; 0x2d
   12998:	ldr	r1, [pc, #404]	; 12b34 <verify_parse+0x1dc>
   1299c:	ldr	r0, [pc, #404]	; 12b38 <verify_parse+0x1e0>
   129a0:	bl	0 <__assert_fail>
   129a4:	ldr	r0, [fp, #-12]
   129a8:	bl	8c4 <MyGame_Example_Vec3_x>
   129ac:	vmov.f32	s14, s0
   129b0:	vldr	s15, [pc, #360]	; 12b20 <verify_parse+0x1c8>
   129b4:	vcmp.f32	s14, s15
   129b8:	vmrs	APSR_nzcv, fpscr
   129bc:	beq	129d4 <verify_parse+0x7c>
   129c0:	ldr	r3, [pc, #360]	; 12b30 <verify_parse+0x1d8>
   129c4:	mov	r2, #46	; 0x2e
   129c8:	ldr	r1, [pc, #356]	; 12b34 <verify_parse+0x1dc>
   129cc:	ldr	r0, [pc, #356]	; 12b38 <verify_parse+0x1e0>
   129d0:	bl	0 <__assert_fail>
   129d4:	ldr	r0, [fp, #-12]
   129d8:	bl	908 <MyGame_Example_Vec3_y>
   129dc:	vmov.f32	s14, s0
   129e0:	vldr	s15, [pc, #316]	; 12b24 <verify_parse+0x1cc>
   129e4:	vcmp.f32	s14, s15
   129e8:	vmrs	APSR_nzcv, fpscr
   129ec:	beq	12a04 <verify_parse+0xac>
   129f0:	ldr	r3, [pc, #312]	; 12b30 <verify_parse+0x1d8>
   129f4:	mov	r2, #47	; 0x2f
   129f8:	ldr	r1, [pc, #308]	; 12b34 <verify_parse+0x1dc>
   129fc:	ldr	r0, [pc, #308]	; 12b38 <verify_parse+0x1e0>
   12a00:	bl	0 <__assert_fail>
   12a04:	ldr	r0, [fp, #-12]
   12a08:	bl	950 <MyGame_Example_Vec3_z>
   12a0c:	vmov.f32	s14, s0
   12a10:	vldr	s15, [pc, #272]	; 12b28 <verify_parse+0x1d0>
   12a14:	vcmp.f32	s14, s15
   12a18:	vmrs	APSR_nzcv, fpscr
   12a1c:	beq	12a34 <verify_parse+0xdc>
   12a20:	ldr	r3, [pc, #264]	; 12b30 <verify_parse+0x1d8>
   12a24:	mov	r2, #48	; 0x30
   12a28:	ldr	r1, [pc, #260]	; 12b34 <verify_parse+0x1dc>
   12a2c:	ldr	r0, [pc, #260]	; 12b38 <verify_parse+0x1e0>
   12a30:	bl	0 <__assert_fail>
   12a34:	ldr	r0, [fp, #-12]
   12a38:	bl	998 <MyGame_Example_Vec3_test1>
   12a3c:	vmov.f64	d6, d0
   12a40:	vldr	d7, [pc, #208]	; 12b18 <verify_parse+0x1c0>
   12a44:	vcmp.f64	d6, d7
   12a48:	vmrs	APSR_nzcv, fpscr
   12a4c:	beq	12a64 <verify_parse+0x10c>
   12a50:	ldr	r3, [pc, #216]	; 12b30 <verify_parse+0x1d8>
   12a54:	mov	r2, #49	; 0x31
   12a58:	ldr	r1, [pc, #212]	; 12b34 <verify_parse+0x1dc>
   12a5c:	ldr	r0, [pc, #212]	; 12b38 <verify_parse+0x1e0>
   12a60:	bl	0 <__assert_fail>
   12a64:	ldr	r0, [fp, #-12]
   12a68:	bl	9e8 <MyGame_Example_Vec3_test2>
   12a6c:	mov	r3, r0
   12a70:	cmp	r3, #2
   12a74:	beq	12a8c <verify_parse+0x134>
   12a78:	ldr	r3, [pc, #176]	; 12b30 <verify_parse+0x1d8>
   12a7c:	mov	r2, #50	; 0x32
   12a80:	ldr	r1, [pc, #172]	; 12b34 <verify_parse+0x1dc>
   12a84:	ldr	r0, [pc, #172]	; 12b38 <verify_parse+0x1e0>
   12a88:	bl	0 <__assert_fail>
   12a8c:	ldr	r0, [fp, #-12]
   12a90:	bl	a2c <MyGame_Example_Vec3_test3>
   12a94:	str	r0, [fp, #-16]
   12a98:	ldr	r3, [fp, #-16]
   12a9c:	cmp	r3, #0
   12aa0:	bne	12ab8 <verify_parse+0x160>
   12aa4:	ldr	r3, [pc, #132]	; 12b30 <verify_parse+0x1d8>
   12aa8:	mov	r2, #52	; 0x34
   12aac:	ldr	r1, [pc, #128]	; 12b34 <verify_parse+0x1dc>
   12ab0:	ldr	r0, [pc, #128]	; 12b38 <verify_parse+0x1e0>
   12ab4:	bl	0 <__assert_fail>
   12ab8:	ldr	r0, [fp, #-16]
   12abc:	bl	840 <MyGame_Example_Test_a>
   12ac0:	mov	r3, r0
   12ac4:	cmp	r3, #5
   12ac8:	beq	12ae0 <verify_parse+0x188>
   12acc:	ldr	r3, [pc, #92]	; 12b30 <verify_parse+0x1d8>
   12ad0:	mov	r2, #53	; 0x35
   12ad4:	ldr	r1, [pc, #88]	; 12b34 <verify_parse+0x1dc>
   12ad8:	ldr	r0, [pc, #88]	; 12b38 <verify_parse+0x1e0>
   12adc:	bl	0 <__assert_fail>
   12ae0:	ldr	r0, [fp, #-16]
   12ae4:	bl	880 <MyGame_Example_Test_b>
   12ae8:	mov	r3, r0
   12aec:	cmp	r3, #6
   12af0:	beq	12b08 <verify_parse+0x1b0>
   12af4:	ldr	r3, [pc, #52]	; 12b30 <verify_parse+0x1d8>
   12af8:	mov	r2, #54	; 0x36
   12afc:	ldr	r1, [pc, #48]	; 12b34 <verify_parse+0x1dc>
   12b00:	ldr	r0, [pc, #48]	; 12b38 <verify_parse+0x1e0>
   12b04:	bl	0 <__assert_fail>
   12b08:	mov	r3, #0
   12b0c:	mov	r0, r3
   12b10:	sub	sp, fp, #4
   12b14:	pop	{fp, pc}
   12b18:	.word	0x00000000
   12b1c:	.word	0x40080000
   12b20:	.word	0x3f800000
   12b24:	.word	0x40000000
   12b28:	.word	0x40400000
   12b2c:	.word	0x000000ac
   12b30:	.word	0x00000290
   12b34:	.word	0x00000138
   12b38:	.word	0x00000194

00012b3c <test_parse>:
   12b3c:	push	{r4, r5, r6, r7, fp, lr}
   12b40:	add	fp, sp, #20
   12b44:	sub	sp, sp, #312	; 0x138
   12b48:	mov	r3, #0
   12b4c:	str	r3, [fp, #-24]	; 0xffffffe8
   12b50:	sub	r3, fp, #324	; 0x144
   12b54:	str	r3, [fp, #-32]	; 0xffffffe0
   12b58:	mvn	r3, #0
   12b5c:	str	r3, [fp, #-28]	; 0xffffffe4
   12b60:	mov	r3, #0
   12b64:	str	r3, [fp, #-36]	; 0xffffffdc
   12b68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b6c:	bl	0 <flatcc_builder_init>
   12b70:	ldr	r3, [pc, #416]	; 12d18 <test_parse+0x1dc>
   12b74:	ldr	r3, [r3]
   12b78:	sub	r2, fp, #44	; 0x2c
   12b7c:	mov	r1, #10240	; 0x2800
   12b80:	mov	r0, r3
   12b84:	bl	12794 <readfile>
   12b88:	str	r0, [fp, #-40]	; 0xffffffd8
   12b8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12b90:	cmp	r3, #0
   12b94:	bne	12bbc <test_parse+0x80>
   12b98:	ldr	r3, [pc, #380]	; 12d1c <test_parse+0x1e0>
   12b9c:	ldr	r0, [r3]
   12ba0:	ldr	r3, [pc, #368]	; 12d18 <test_parse+0x1dc>
   12ba4:	ldr	r3, [r3]
   12ba8:	mov	r2, r3
   12bac:	ldr	r1, [pc, #364]	; 12d20 <test_parse+0x1e4>
   12bb0:	bl	0 <fprintf>
   12bb4:	mvn	r3, #0
   12bb8:	b	12d0c <test_parse+0x1d0>
   12bbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12bc0:	sub	r1, fp, #92	; 0x5c
   12bc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12bc8:	str	r3, [sp]
   12bcc:	mov	r3, r2
   12bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bd8:	bl	12398 <monster_test_parse_json>
   12bdc:	mov	r3, r0
   12be0:	cmp	r3, #0
   12be4:	bne	12cb0 <test_parse+0x174>
   12be8:	ldr	r3, [pc, #300]	; 12d1c <test_parse+0x1e0>
   12bec:	ldr	r0, [r3]
   12bf0:	ldr	r3, [pc, #288]	; 12d18 <test_parse+0x1dc>
   12bf4:	ldr	r2, [r3]
   12bf8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12bfc:	ldr	r1, [pc, #288]	; 12d24 <test_parse+0x1e8>
   12c00:	bl	0 <fprintf>
   12c04:	sub	r3, fp, #48	; 0x30
   12c08:	mov	r1, r3
   12c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c10:	bl	0 <flatcc_builder_finalize_aligned_buffer>
   12c14:	str	r0, [fp, #-24]	; 0xffffffe8
   12c18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c1c:	ldr	r3, [pc, #260]	; 12d28 <test_parse+0x1ec>
   12c20:	ldr	r3, [r3]
   12c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12c28:	ldr	r0, [pc, #252]	; 12d2c <test_parse+0x1f0>
   12c2c:	bl	1249c <hexdump>
   12c30:	ldr	r3, [pc, #228]	; 12d1c <test_parse+0x1e0>
   12c34:	ldr	r0, [r3]
   12c38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12c3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c40:	ldr	r1, [pc, #232]	; 12d30 <test_parse+0x1f4>
   12c44:	bl	0 <fprintf>
   12c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c4c:	bl	12958 <verify_parse>
   12c50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c54:	ldr	r3, [pc, #204]	; 12d28 <test_parse+0x1ec>
   12c58:	ldr	r3, [r3]
   12c5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12c60:	ldr	r0, [pc, #204]	; 12d34 <test_parse+0x1f8>
   12c64:	bl	12678 <cdump>
   12c68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c6c:	bl	0 <flatcc_builder_reset>
   12c70:	mov	r3, #0
   12c74:	str	r3, [fp, #-28]	; 0xffffffe4
   12c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c7c:	cmp	r3, #0
   12c80:	beq	12c8c <test_parse+0x150>
   12c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c88:	bl	0 <flatcc_builder_aligned_free>
   12c8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12c90:	cmp	r3, #0
   12c94:	beq	12ca0 <test_parse+0x164>
   12c98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c9c:	bl	0 <free>
   12ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ca4:	bl	0 <flatcc_builder_clear>
   12ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12cac:	b	12d0c <test_parse+0x1d0>
   12cb0:	nop			; (mov r0, r0)
   12cb4:	ldr	r3, [pc, #96]	; 12d1c <test_parse+0x1e0>
   12cb8:	ldr	r5, [r3]
   12cbc:	ldr	r3, [pc, #84]	; 12d18 <test_parse+0x1dc>
   12cc0:	ldr	r6, [r3]
   12cc4:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12cc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12ccc:	mov	r2, r3
   12cd0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12cd4:	sub	r3, r2, r3
   12cd8:	add	r4, r3, #1
   12cdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12ce0:	mov	r0, r3
   12ce4:	bl	0 <flatcc_json_parser_error_string>
   12ce8:	mov	r3, r0
   12cec:	str	r3, [sp, #4]
   12cf0:	str	r4, [sp]
   12cf4:	mov	r3, r7
   12cf8:	mov	r2, r6
   12cfc:	ldr	r1, [pc, #52]	; 12d38 <test_parse+0x1fc>
   12d00:	mov	r0, r5
   12d04:	bl	0 <fprintf>
   12d08:	b	12c78 <test_parse+0x13c>
   12d0c:	mov	r0, r3
   12d10:	sub	sp, fp, #20
   12d14:	pop	{r4, r5, r6, r7, fp, pc}
	...
   12d20:	.word	0x00000198
   12d24:	.word	0x000001bc
   12d28:	.word	0x00000000
   12d2c:	.word	0x000001e0
   12d30:	.word	0x00000200
   12d34:	.word	0x00000224
   12d38:	.word	0x0000022c

00012d3c <main>:
   12d3c:	push	{fp, lr}
   12d40:	add	fp, sp, #4
   12d44:	sub	sp, sp, #8
   12d48:	str	r0, [fp, #-8]
   12d4c:	str	r1, [fp, #-12]
   12d50:	ldr	r3, [pc, #120]	; 12dd0 <main+0x94>
   12d54:	ldr	r3, [r3]
   12d58:	mov	r2, #16
   12d5c:	mov	r1, #1
   12d60:	ldr	r0, [pc, #108]	; 12dd4 <main+0x98>
   12d64:	bl	0 <fwrite>
   12d68:	ldr	r3, [fp, #-8]
   12d6c:	cmp	r3, #1
   12d70:	beq	12da0 <main+0x64>
   12d74:	ldr	r3, [fp, #-8]
   12d78:	cmp	r3, #2
   12d7c:	beq	12da0 <main+0x64>
   12d80:	ldr	r3, [pc, #72]	; 12dd0 <main+0x94>
   12d84:	ldr	r3, [r3]
   12d88:	mov	r2, #63	; 0x3f
   12d8c:	mov	r1, #1
   12d90:	ldr	r0, [pc, #64]	; 12dd8 <main+0x9c>
   12d94:	bl	0 <fwrite>
   12d98:	mov	r0, #1
   12d9c:	bl	0 <exit>
   12da0:	ldr	r3, [fp, #-8]
   12da4:	cmp	r3, #2
   12da8:	bne	12dbc <main+0x80>
   12dac:	ldr	r3, [fp, #-12]
   12db0:	ldr	r3, [r3, #4]
   12db4:	ldr	r2, [pc, #32]	; 12ddc <main+0xa0>
   12db8:	str	r3, [r2]
   12dbc:	bl	12b3c <test_parse>
   12dc0:	mov	r3, r0
   12dc4:	mov	r0, r3
   12dc8:	sub	sp, fp, #4
   12dcc:	pop	{fp, pc}
   12dd0:	.word	0x00000000
   12dd4:	.word	0x0000023c
   12dd8:	.word	0x00000250
   12ddc:	.word	0x00000000
