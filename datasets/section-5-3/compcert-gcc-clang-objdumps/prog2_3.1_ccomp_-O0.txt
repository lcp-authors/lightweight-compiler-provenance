
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

0001056c <.init>:
   1056c:	push	{r3, lr}
   10570:	bl	106b0 <abort@plt+0x40>
   10574:	pop	{r3, pc}

Disassembly of section .plt:

00010578 <calloc@plt-0x14>:
   10578:	push	{lr}		; (str lr, [sp, #-4]!)
   1057c:	ldr	lr, [pc, #4]	; 10588 <calloc@plt-0x4>
   10580:	add	lr, pc, lr
   10584:	ldr	pc, [lr, #8]!
   10588:	andeq	r1, r1, r8, ror sl

0001058c <calloc@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2680]!	; 0xa78

00010598 <strstr@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2672]!	; 0xa70

000105a4 <raise@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2664]!	; 0xa68

000105b0 <strcmp@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2656]!	; 0xa60

000105bc <printf@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2648]!	; 0xa58

000105c8 <fopen@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2640]!	; 0xa50

000105d4 <free@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2632]!	; 0xa48

000105e0 <fgets@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2624]!	; 0xa40

000105ec <time@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2616]!	; 0xa38

000105f8 <realloc@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2608]!	; 0xa30

00010604 <strcat@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2600]!	; 0xa28

00010610 <strcpy@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2592]!	; 0xa20

0001061c <malloc@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2584]!	; 0xa18

00010628 <__libc_start_main@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2576]!	; 0xa10

00010634 <__gmon_start__@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2568]!	; 0xa08

00010640 <strlen@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2560]!	; 0xa00

0001064c <srand@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2552]!	; 0x9f8

00010658 <rand@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2544]!	; 0x9f0

00010664 <fclose@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #69632	; 0x11000
   1066c:	ldr	pc, [ip, #2536]!	; 0x9e8

00010670 <abort@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #69632	; 0x11000
   10678:	ldr	pc, [ip, #2528]!	; 0x9e0

Disassembly of section .text:

00010680 <.text>:
   10680:	bleq	4c7c4 <abort@plt+0x3c154>
   10684:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10688:	strbtmi	fp, [sl], -r2, lsl #24
   1068c:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10690:			; <UNDEFINED> instruction: 0xc010f8df
   10694:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10698:	blmi	1226ac <abort@plt+0x11203c>
   1069c:	svc	0x00c4f7ff
   106a0:	svc	0x00e6f7ff
   106a4:			; <UNDEFINED> instruction: 0x000116b5
   106a8:	andeq	r0, r1, r0, asr #14
   106ac:	andeq	r1, r1, r5, ror r6
   106b0:	ldr	r3, [pc, #20]	; 106cc <abort@plt+0x5c>
   106b4:	ldr	r2, [pc, #20]	; 106d0 <abort@plt+0x60>
   106b8:	add	r3, pc, r3
   106bc:	ldr	r2, [r3, r2]
   106c0:	cmp	r2, #0
   106c4:	bxeq	lr
   106c8:	b	10634 <__gmon_start__@plt>
   106cc:	andeq	r1, r1, r0, asr #18
   106d0:	andeq	r0, r0, ip, asr r0
   106d4:	rsbeq	pc, r8, r2, asr #4
   106d8:	andeq	pc, r2, r0, asr #5
   106dc:	msreq	SPSR_f, #536870916	; 0x20000004
   106e0:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   106e4:	andle	r4, r5, r3, lsl #5
   106e8:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   106ec:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   106f0:	ldrmi	fp, [r8, -r3, lsl #2]
   106f4:	svclt	0x00004770
   106f8:	rsbeq	pc, r8, r2, asr #4
   106fc:	andeq	pc, r2, r0, asr #5
   10700:	msreq	(UNDEF: 104), r2
   10704:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   10708:	svceq	0x00d91a0b
   1070c:			; <UNDEFINED> instruction: 0x01a3eb01
   10710:	andle	r1, r5, r9, asr #32
   10714:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10718:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1071c:	ldrmi	fp, [r8, -r3, lsl #2]
   10720:	svclt	0x00004770
   10724:	vqrshl.s8	d27, d0, d2
   10728:	vmls.i<illegal width 8>	d16, d0, d0[6]
   1072c:	stmdavc	r3!, {r1, sl}
   10730:			; <UNDEFINED> instruction: 0xf7ffb91b
   10734:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10738:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   1073c:	svclt	0x0000e7dc
   10740:	mov	ip, sp
   10744:	sub	sp, sp, #128	; 0x80
   10748:	str	ip, [sp]
   1074c:	str	lr, [sp, #4]
   10750:	str	r4, [sp, #8]
   10754:	str	r5, [sp, #12]
   10758:	str	r6, [sp, #16]
   1075c:	mov	r4, #0
   10760:	bl	10b70 <abort@plt+0x500>
   10764:	mov	r5, r0
   10768:	ldr	r0, [pc, #348]	; 108cc <abort@plt+0x25c>
   1076c:	ldr	r1, [pc, #356]	; 108d8 <abort@plt+0x268>
   10770:	bl	105c8 <fopen@plt>
   10774:	mov	r6, r0
   10778:	add	r0, sp, #24
   1077c:	mov	r1, #100	; 0x64
   10780:	mov	r2, r6
   10784:	bl	105e0 <fgets@plt>
   10788:	cmp	r0, #0
   1078c:	beq	107dc <abort@plt+0x16c>
   10790:	add	r0, sp, #24
   10794:	bl	10640 <strlen@plt>
   10798:	add	r1, sp, #24
   1079c:	add	r1, r1, r0
   107a0:	mov	ip, #0
   107a4:	sub	lr, r1, #4096	; 0x1000
   107a8:	strb	ip, [lr, #4095]	; 0xfff
   107ac:	add	r1, sp, #24
   107b0:	mov	r2, r4
   107b4:	mov	r0, r5
   107b8:	bl	10dc0 <abort@plt+0x750>
   107bc:	cmn	r0, #1
   107c0:	bne	107d4 <abort@plt+0x164>
   107c4:	ldr	r0, [pc, #236]	; 108b8 <abort@plt+0x248>
   107c8:	bl	105bc <printf@plt>
   107cc:	mvn	r0, #0
   107d0:	b	10898 <abort@plt+0x228>
   107d4:	add	r4, r4, #1
   107d8:	b	10778 <abort@plt+0x108>
   107dc:	ldr	r0, [pc, #216]	; 108bc <abort@plt+0x24c>
   107e0:	mov	r1, r4
   107e4:	bl	105bc <printf@plt>
   107e8:	mov	r0, r5
   107ec:	bl	108dc <abort@plt+0x26c>
   107f0:	ldr	r1, [pc, #184]	; 108b0 <abort@plt+0x240>
   107f4:	mov	r0, r5
   107f8:	bl	11010 <abort@plt+0x9a0>
   107fc:	ldr	r1, [pc, #204]	; 108d0 <abort@plt+0x260>
   10800:	mov	ip, r0
   10804:	mov	r0, r1
   10808:	mov	r1, ip
   1080c:	bl	105bc <printf@plt>
   10810:	mov	r0, r5
   10814:	bl	11094 <abort@plt+0xa24>
   10818:	cmp	r0, #0
   1081c:	beq	1082c <abort@plt+0x1bc>
   10820:	ldr	r0, [pc, #156]	; 108c4 <abort@plt+0x254>
   10824:	bl	105bc <printf@plt>
   10828:	b	10834 <abort@plt+0x1c4>
   1082c:	mov	r0, r5
   10830:	bl	108dc <abort@plt+0x26c>
   10834:	ldr	r1, [pc, #120]	; 108b4 <abort@plt+0x244>
   10838:	mov	r0, r5
   1083c:	bl	10950 <abort@plt+0x2e0>
   10840:	mov	r1, r0
   10844:	ldr	r0, [pc, #116]	; 108c0 <abort@plt+0x250>
   10848:	bl	105bc <printf@plt>
   1084c:	mov	r0, r5
   10850:	bl	109e0 <abort@plt+0x370>
   10854:	ldr	r0, [pc, #108]	; 108c8 <abort@plt+0x258>
   10858:	ldr	r1, [r5]
   1085c:	sub	r1, r1, #1
   10860:	bl	105bc <printf@plt>
   10864:	ldr	r1, [pc, #104]	; 108d4 <abort@plt+0x264>
   10868:	mov	r0, r5
   1086c:	bl	10ab0 <abort@plt+0x440>
   10870:	mov	r4, r0
   10874:	mov	r0, r4
   10878:	bl	108dc <abort@plt+0x26c>
   1087c:	mov	r0, r4
   10880:	bl	10bbc <abort@plt+0x54c>
   10884:	mov	r0, r5
   10888:	bl	10bbc <abort@plt+0x54c>
   1088c:	mov	r0, r6
   10890:	bl	10664 <fclose@plt>
   10894:	mov	r0, #0
   10898:	ldr	r4, [sp, #8]
   1089c:	ldr	r5, [sp, #12]
   108a0:	ldr	r6, [sp, #16]
   108a4:	ldr	lr, [sp, #4]
   108a8:	add	sp, sp, #128	; 0x80
   108ac:	bx	lr
   108b0:	andeq	r1, r1, r9, lsl #16
   108b4:	andeq	r1, r1, ip, lsr #16
   108b8:	andeq	r1, r1, r1, lsl r9
   108bc:			; <UNDEFINED> instruction: 0x000117b5
   108c0:	andeq	r1, r1, sp, ror r7
   108c4:	andeq	r1, r1, r4, asr r7
   108c8:	ldrdeq	r1, [r1], -r4
   108cc:			; <UNDEFINED> instruction: 0x000118be
   108d0:	andeq	r1, r1, r7, ror r8
   108d4:	andeq	r1, r1, pc, lsr r9
   108d8:	andeq	r1, r1, fp, ror r7
   108dc:	mov	ip, sp
   108e0:	sub	sp, sp, #24
   108e4:	str	ip, [sp]
   108e8:	str	lr, [sp, #4]
   108ec:	str	r4, [sp, #8]
   108f0:	str	r5, [sp, #12]
   108f4:	str	r6, [sp, #16]
   108f8:	mov	r5, r0
   108fc:	ldr	r6, [r5]
   10900:	mov	r4, #0
   10904:	cmp	r4, r6
   10908:	bge	10934 <abort@plt+0x2c4>
   1090c:	mov	r1, r4
   10910:	mov	r0, r5
   10914:	bl	10d50 <abort@plt+0x6e0>
   10918:	ldr	r1, [pc, #44]	; 1094c <abort@plt+0x2dc>
   1091c:	mov	r2, r0
   10920:	mov	r0, r1
   10924:	mov	r1, r4
   10928:	bl	105bc <printf@plt>
   1092c:	add	r4, r4, #1
   10930:	b	10904 <abort@plt+0x294>
   10934:	ldr	r4, [sp, #8]
   10938:	ldr	r5, [sp, #12]
   1093c:	ldr	r6, [sp, #16]
   10940:	ldr	lr, [sp, #4]
   10944:	add	sp, sp, #24
   10948:	bx	lr
   1094c:	andeq	r1, r1, sl, ror #16
   10950:	mov	ip, sp
   10954:	sub	sp, sp, #32
   10958:	str	ip, [sp]
   1095c:	str	lr, [sp, #4]
   10960:	str	r4, [sp, #8]
   10964:	str	r5, [sp, #12]
   10968:	str	r6, [sp, #16]
   1096c:	str	r7, [sp, #20]
   10970:	str	r8, [sp, #24]
   10974:	mov	r7, r1
   10978:	mov	r5, r0
   1097c:	mov	r6, #0
   10980:	ldr	r8, [r5]
   10984:	mov	r4, #0
   10988:	cmp	r4, r8
   1098c:	bge	109bc <abort@plt+0x34c>
   10990:	mov	r1, r4
   10994:	mov	r0, r5
   10998:	bl	10d50 <abort@plt+0x6e0>
   1099c:	mov	r1, r0
   109a0:	mov	r0, r7
   109a4:	bl	105b0 <strcmp@plt>
   109a8:	cmp	r0, #0
   109ac:	bne	109b4 <abort@plt+0x344>
   109b0:	add	r6, r6, #1
   109b4:	add	r4, r4, #1
   109b8:	b	10988 <abort@plt+0x318>
   109bc:	mov	r0, r6
   109c0:	ldr	r4, [sp, #8]
   109c4:	ldr	r5, [sp, #12]
   109c8:	ldr	r6, [sp, #16]
   109cc:	ldr	r7, [sp, #20]
   109d0:	ldr	r8, [sp, #24]
   109d4:	ldr	lr, [sp, #4]
   109d8:	add	sp, sp, #32
   109dc:	bx	lr
   109e0:	mov	ip, sp
   109e4:	sub	sp, sp, #128	; 0x80
   109e8:	str	ip, [sp]
   109ec:	str	lr, [sp, #4]
   109f0:	str	r4, [sp, #8]
   109f4:	str	r5, [sp, #12]
   109f8:	str	r6, [sp, #16]
   109fc:	mov	r5, r0
   10a00:	mov	r6, #0
   10a04:	ldr	r0, [r5]
   10a08:	cmp	r6, r0
   10a0c:	bge	10a94 <abort@plt+0x424>
   10a10:	mov	r1, r6
   10a14:	mov	r0, r5
   10a18:	bl	10d50 <abort@plt+0x6e0>
   10a1c:	mov	r1, r0
   10a20:	add	r0, sp, #24
   10a24:	bl	10610 <strcpy@plt>
   10a28:	add	r4, r6, #1
   10a2c:	ldr	r3, [r5]
   10a30:	cmp	r4, r3
   10a34:	bge	10a8c <abort@plt+0x41c>
   10a38:	mov	r1, r4
   10a3c:	mov	r0, r5
   10a40:	bl	10d50 <abort@plt+0x6e0>
   10a44:	add	r1, sp, #24
   10a48:	mov	ip, r0
   10a4c:	mov	r0, r1
   10a50:	mov	r1, ip
   10a54:	bl	105b0 <strcmp@plt>
   10a58:	cmp	r0, #0
   10a5c:	bne	10a84 <abort@plt+0x414>
   10a60:	mov	r1, r4
   10a64:	mov	r0, r5
   10a68:	bl	10f3c <abort@plt+0x8cc>
   10a6c:	cmn	r0, #1
   10a70:	bne	10a80 <abort@plt+0x410>
   10a74:	ldr	r0, [pc, #48]	; 10aac <abort@plt+0x43c>
   10a78:	bl	105bc <printf@plt>
   10a7c:	b	10a84 <abort@plt+0x414>
   10a80:	sub	r4, r4, #1
   10a84:	add	r4, r4, #1
   10a88:	b	10a2c <abort@plt+0x3bc>
   10a8c:	add	r6, r6, #1
   10a90:	b	10a04 <abort@plt+0x394>
   10a94:	ldr	r4, [sp, #8]
   10a98:	ldr	r5, [sp, #12]
   10a9c:	ldr	r6, [sp, #16]
   10aa0:	ldr	lr, [sp, #4]
   10aa4:	add	sp, sp, #128	; 0x80
   10aa8:	bx	lr
   10aac:	andeq	r1, r1, pc, lsr r8
   10ab0:	mov	ip, sp
   10ab4:	sub	sp, sp, #32
   10ab8:	str	ip, [sp]
   10abc:	str	lr, [sp, #4]
   10ac0:	str	r4, [sp, #8]
   10ac4:	str	r5, [sp, #12]
   10ac8:	str	r6, [sp, #16]
   10acc:	str	r7, [sp, #20]
   10ad0:	str	r8, [sp, #24]
   10ad4:	mov	r6, r1
   10ad8:	mov	r7, r0
   10adc:	bl	10b70 <abort@plt+0x500>
   10ae0:	mov	r5, r0
   10ae4:	mov	r4, #0
   10ae8:	mov	r8, #0
   10aec:	ldr	r1, [r7]
   10af0:	cmp	r8, r1
   10af4:	bge	10b48 <abort@plt+0x4d8>
   10af8:	mov	r1, r8
   10afc:	mov	r0, r7
   10b00:	bl	10d50 <abort@plt+0x6e0>
   10b04:	mov	r1, r6
   10b08:	bl	10598 <strstr@plt>
   10b0c:	cmp	r0, #0
   10b10:	beq	10b40 <abort@plt+0x4d0>
   10b14:	mov	r1, r8
   10b18:	mov	r0, r7
   10b1c:	bl	10d50 <abort@plt+0x6e0>
   10b20:	mov	r2, r4
   10b24:	mov	r1, r0
   10b28:	mov	r0, r5
   10b2c:	bl	10dc0 <abort@plt+0x750>
   10b30:	cmn	r0, #1
   10b34:	bne	10b40 <abort@plt+0x4d0>
   10b38:	ldr	r0, [pc, #44]	; 10b6c <abort@plt+0x4fc>
   10b3c:	bl	105bc <printf@plt>
   10b40:	add	r8, r8, #1
   10b44:	b	10aec <abort@plt+0x47c>
   10b48:	mov	r0, r5
   10b4c:	ldr	r4, [sp, #8]
   10b50:	ldr	r5, [sp, #12]
   10b54:	ldr	r6, [sp, #16]
   10b58:	ldr	r7, [sp, #20]
   10b5c:	ldr	r8, [sp, #24]
   10b60:	ldr	lr, [sp, #4]
   10b64:	add	sp, sp, #32
   10b68:	bx	lr
   10b6c:	andeq	r1, r1, lr, asr #15
   10b70:	mov	ip, sp
   10b74:	sub	sp, sp, #8
   10b78:	str	ip, [sp]
   10b7c:	str	lr, [sp, #4]
   10b80:	mov	r0, #12
   10b84:	bl	1061c <malloc@plt>
   10b88:	cmp	r0, #0
   10b8c:	bne	10b98 <abort@plt+0x528>
   10b90:	mov	r0, #0
   10b94:	b	10bb0 <abort@plt+0x540>
   10b98:	mov	r1, #0
   10b9c:	str	r1, [r0]
   10ba0:	mov	r2, #0
   10ba4:	str	r2, [r0, #4]
   10ba8:	mov	r1, #0
   10bac:	str	r1, [r0, #8]
   10bb0:	ldr	lr, [sp, #4]
   10bb4:	add	sp, sp, #8
   10bb8:	bx	lr
   10bbc:	mov	ip, sp
   10bc0:	sub	sp, sp, #16
   10bc4:	str	ip, [sp]
   10bc8:	str	lr, [sp, #4]
   10bcc:	str	r4, [sp, #8]
   10bd0:	str	r5, [sp, #12]
   10bd4:	mov	r4, r0
   10bd8:	cmp	r4, #0
   10bdc:	beq	10c14 <abort@plt+0x5a4>
   10be0:	mov	r5, #0
   10be4:	ldr	r1, [r4]
   10be8:	cmp	r5, r1
   10bec:	bge	10c04 <abort@plt+0x594>
   10bf0:	ldr	r0, [r4, #8]
   10bf4:	ldr	r0, [r0, r5, lsl #2]
   10bf8:	bl	105d4 <free@plt>
   10bfc:	add	r5, r5, #1
   10c00:	b	10be4 <abort@plt+0x574>
   10c04:	ldr	r0, [r4, #8]
   10c08:	bl	105d4 <free@plt>
   10c0c:	mov	r0, r4
   10c10:	bl	105d4 <free@plt>
   10c14:	ldr	r4, [sp, #8]
   10c18:	ldr	r5, [sp, #12]
   10c1c:	ldr	lr, [sp, #4]
   10c20:	add	sp, sp, #16
   10c24:	bx	lr
   10c28:	mov	ip, sp
   10c2c:	sub	sp, sp, #24
   10c30:	str	ip, [sp]
   10c34:	str	lr, [sp, #4]
   10c38:	str	r4, [sp, #8]
   10c3c:	str	r5, [sp, #12]
   10c40:	str	r6, [sp, #16]
   10c44:	str	r7, [sp, #20]
   10c48:	mov	r6, r2
   10c4c:	mov	r5, r1
   10c50:	mov	r7, r0
   10c54:	cmp	r7, #0
   10c58:	beq	10c6c <abort@plt+0x5fc>
   10c5c:	cmp	r5, #0
   10c60:	movlt	r3, #1
   10c64:	movge	r3, #0
   10c68:	b	10c70 <abort@plt+0x600>
   10c6c:	mov	r3, #1
   10c70:	cmp	r3, #0
   10c74:	bne	10c8c <abort@plt+0x61c>
   10c78:	ldr	r2, [r7]
   10c7c:	cmp	r5, r2
   10c80:	movge	r0, #1
   10c84:	movlt	r0, #0
   10c88:	b	10c90 <abort@plt+0x620>
   10c8c:	mov	r0, #1
   10c90:	cmp	r0, #0
   10c94:	beq	10ca0 <abort@plt+0x630>
   10c98:	mvn	r0, #0
   10c9c:	b	10d04 <abort@plt+0x694>
   10ca0:	mov	r0, r6
   10ca4:	bl	10640 <strlen@plt>
   10ca8:	mov	r4, r0
   10cac:	ldr	r1, [r7, #8]
   10cb0:	ldr	r0, [r1, r5, lsl #2]
   10cb4:	bl	10640 <strlen@plt>
   10cb8:	cmp	r4, r0
   10cbc:	bls	10cf0 <abort@plt+0x680>
   10cc0:	ldr	ip, [r7, #8]
   10cc4:	ldr	r0, [ip, r5, lsl #2]
   10cc8:	add	r1, r4, #1
   10ccc:	bl	105f8 <realloc@plt>
   10cd0:	ldr	r1, [r7, #8]
   10cd4:	str	r0, [r1, r5, lsl #2]
   10cd8:	ldr	r1, [r7, #8]
   10cdc:	ldr	r3, [r1, r5, lsl #2]
   10ce0:	cmp	r3, #0
   10ce4:	bne	10cf0 <abort@plt+0x680>
   10ce8:	mvn	r0, #0
   10cec:	b	10d04 <abort@plt+0x694>
   10cf0:	ldr	r0, [r7, #8]
   10cf4:	ldr	r0, [r0, r5, lsl #2]
   10cf8:	mov	r1, r6
   10cfc:	bl	10610 <strcpy@plt>
   10d00:	mov	r0, r5
   10d04:	ldr	r4, [sp, #8]
   10d08:	ldr	r5, [sp, #12]
   10d0c:	ldr	r6, [sp, #16]
   10d10:	ldr	r7, [sp, #20]
   10d14:	ldr	lr, [sp, #4]
   10d18:	add	sp, sp, #24
   10d1c:	bx	lr
   10d20:	mov	ip, sp
   10d24:	sub	sp, sp, #8
   10d28:	str	ip, [sp]
   10d2c:	str	lr, [sp, #4]
   10d30:	cmp	r0, #0
   10d34:	bne	10d40 <abort@plt+0x6d0>
   10d38:	mvn	r0, #0
   10d3c:	b	10d44 <abort@plt+0x6d4>
   10d40:	ldr	r0, [r0]
   10d44:	ldr	lr, [sp, #4]
   10d48:	add	sp, sp, #8
   10d4c:	bx	lr
   10d50:	mov	ip, sp
   10d54:	sub	sp, sp, #8
   10d58:	str	ip, [sp]
   10d5c:	str	lr, [sp, #4]
   10d60:	cmp	r0, #0
   10d64:	beq	10d78 <abort@plt+0x708>
   10d68:	cmp	r1, #0
   10d6c:	movlt	r3, #1
   10d70:	movge	r3, #0
   10d74:	b	10d7c <abort@plt+0x70c>
   10d78:	mov	r3, #1
   10d7c:	cmp	r3, #0
   10d80:	bne	10d98 <abort@plt+0x728>
   10d84:	ldr	r2, [r0]
   10d88:	cmp	r1, r2
   10d8c:	movge	ip, #1
   10d90:	movlt	ip, #0
   10d94:	b	10d9c <abort@plt+0x72c>
   10d98:	mov	ip, #1
   10d9c:	cmp	ip, #0
   10da0:	beq	10dac <abort@plt+0x73c>
   10da4:	mov	r0, #0
   10da8:	b	10db4 <abort@plt+0x744>
   10dac:	ldr	r2, [r0, #8]
   10db0:	ldr	r0, [r2, r1, lsl #2]
   10db4:	ldr	lr, [sp, #4]
   10db8:	add	sp, sp, #8
   10dbc:	bx	lr
   10dc0:	mov	ip, sp
   10dc4:	sub	sp, sp, #24
   10dc8:	str	ip, [sp]
   10dcc:	str	lr, [sp, #4]
   10dd0:	str	r4, [sp, #8]
   10dd4:	str	r5, [sp, #12]
   10dd8:	str	r6, [sp, #16]
   10ddc:	str	r7, [sp, #20]
   10de0:	mov	r4, r2
   10de4:	mov	r5, r1
   10de8:	mov	r6, r0
   10dec:	cmp	r6, #0
   10df0:	beq	10e04 <abort@plt+0x794>
   10df4:	cmp	r4, #0
   10df8:	movlt	r2, #1
   10dfc:	movge	r2, #0
   10e00:	b	10e08 <abort@plt+0x798>
   10e04:	mov	r2, #1
   10e08:	cmp	r2, #0
   10e0c:	bne	10e24 <abort@plt+0x7b4>
   10e10:	ldr	r0, [r6]
   10e14:	cmp	r4, r0
   10e18:	movgt	r3, #1
   10e1c:	movle	r3, #0
   10e20:	b	10e28 <abort@plt+0x7b8>
   10e24:	mov	r3, #1
   10e28:	cmp	r3, #0
   10e2c:	beq	10e38 <abort@plt+0x7c8>
   10e30:	mvn	r0, #0
   10e34:	b	10f20 <abort@plt+0x8b0>
   10e38:	ldr	r2, [r6]
   10e3c:	ldr	r3, [r6, #4]
   10e40:	cmp	r2, r3
   10e44:	bne	10e94 <abort@plt+0x824>
   10e48:	ldr	r3, [r6, #4]
   10e4c:	cmp	r3, #0
   10e50:	beq	10e64 <abort@plt+0x7f4>
   10e54:	ldr	ip, [r6, #4]
   10e58:	lsl	r3, ip, #1
   10e5c:	str	r3, [r6, #4]
   10e60:	b	10e6c <abort@plt+0x7fc>
   10e64:	mov	r0, #1
   10e68:	str	r0, [r6, #4]
   10e6c:	ldr	r0, [r6, #8]
   10e70:	ldr	r2, [r6, #4]
   10e74:	lsl	r1, r2, #2
   10e78:	bl	105f8 <realloc@plt>
   10e7c:	str	r0, [r6, #8]
   10e80:	ldr	r2, [r6, #8]
   10e84:	cmp	r2, #0
   10e88:	bne	10e94 <abort@plt+0x824>
   10e8c:	mvn	r0, #0
   10e90:	b	10f20 <abort@plt+0x8b0>
   10e94:	ldr	ip, [r6]
   10e98:	sub	r7, ip, #1
   10e9c:	cmp	r7, r4
   10ea0:	blt	10ecc <abort@plt+0x85c>
   10ea4:	ldr	r2, [r6, #8]
   10ea8:	lsl	r0, r7, #2
   10eac:	add	r1, r2, r0
   10eb0:	add	r0, r1, #4
   10eb4:	ldr	r1, [r6, #8]
   10eb8:	add	ip, r1, r7, lsl #2
   10ebc:	ldr	lr, [ip]
   10ec0:	str	lr, [r0]
   10ec4:	sub	r7, r7, #1
   10ec8:	b	10e9c <abort@plt+0x82c>
   10ecc:	mov	r0, r5
   10ed0:	bl	10640 <strlen@plt>
   10ed4:	add	r0, r0, #1
   10ed8:	mov	r1, #1
   10edc:	bl	1058c <calloc@plt>
   10ee0:	ldr	ip, [r6, #8]
   10ee4:	str	r0, [ip, r4, lsl #2]
   10ee8:	ldr	r2, [r6, #8]
   10eec:	ldr	r3, [r2, r4, lsl #2]
   10ef0:	cmp	r3, #0
   10ef4:	bne	10f00 <abort@plt+0x890>
   10ef8:	mvn	r0, #0
   10efc:	b	10f20 <abort@plt+0x8b0>
   10f00:	ldr	r1, [r6, #8]
   10f04:	ldr	r0, [r1, r4, lsl #2]
   10f08:	mov	r1, r5
   10f0c:	bl	10610 <strcpy@plt>
   10f10:	ldr	r1, [r6]
   10f14:	add	r1, r1, #1
   10f18:	str	r1, [r6]
   10f1c:	mov	r0, r4
   10f20:	ldr	r4, [sp, #8]
   10f24:	ldr	r5, [sp, #12]
   10f28:	ldr	r6, [sp, #16]
   10f2c:	ldr	r7, [sp, #20]
   10f30:	ldr	lr, [sp, #4]
   10f34:	add	sp, sp, #24
   10f38:	bx	lr
   10f3c:	mov	ip, sp
   10f40:	sub	sp, sp, #16
   10f44:	str	ip, [sp]
   10f48:	str	lr, [sp, #4]
   10f4c:	str	r4, [sp, #8]
   10f50:	str	r5, [sp, #12]
   10f54:	mov	r4, r1
   10f58:	mov	r5, r0
   10f5c:	cmp	r5, #0
   10f60:	beq	10f74 <abort@plt+0x904>
   10f64:	cmp	r4, #0
   10f68:	movlt	r0, #1
   10f6c:	movge	r0, #0
   10f70:	b	10f78 <abort@plt+0x908>
   10f74:	mov	r0, #1
   10f78:	cmp	r0, #0
   10f7c:	bne	10f94 <abort@plt+0x924>
   10f80:	ldr	r2, [r5]
   10f84:	cmp	r4, r2
   10f88:	movge	r2, #1
   10f8c:	movlt	r2, #0
   10f90:	b	10f98 <abort@plt+0x928>
   10f94:	mov	r2, #1
   10f98:	cmp	r2, #0
   10f9c:	beq	10fa8 <abort@plt+0x938>
   10fa0:	mvn	r0, #0
   10fa4:	b	10ffc <abort@plt+0x98c>
   10fa8:	ldr	ip, [r5, #8]
   10fac:	ldr	r0, [ip, r4, lsl #2]
   10fb0:	bl	105d4 <free@plt>
   10fb4:	add	r4, r4, #1
   10fb8:	ldr	r1, [r5]
   10fbc:	cmp	r4, r1
   10fc0:	bge	10fec <abort@plt+0x97c>
   10fc4:	ldr	r3, [r5, #8]
   10fc8:	lsl	r1, r4, #2
   10fcc:	add	r2, r3, r1
   10fd0:	sub	r0, r2, #4
   10fd4:	ldr	r3, [r5, #8]
   10fd8:	add	ip, r3, r4, lsl #2
   10fdc:	ldr	lr, [ip]
   10fe0:	str	lr, [r0]
   10fe4:	add	r4, r4, #1
   10fe8:	b	10fb8 <abort@plt+0x948>
   10fec:	ldr	r1, [r5]
   10ff0:	sub	r0, r1, #1
   10ff4:	str	r0, [r5]
   10ff8:	mov	r0, #0
   10ffc:	ldr	r4, [sp, #8]
   11000:	ldr	r5, [sp, #12]
   11004:	ldr	lr, [sp, #4]
   11008:	add	sp, sp, #16
   1100c:	bx	lr
   11010:	mov	ip, sp
   11014:	sub	sp, sp, #24
   11018:	str	ip, [sp]
   1101c:	str	lr, [sp, #4]
   11020:	str	r4, [sp, #8]
   11024:	str	r5, [sp, #12]
   11028:	str	r6, [sp, #16]
   1102c:	mov	r4, r1
   11030:	mov	r5, r0
   11034:	cmp	r5, #0
   11038:	bne	11044 <abort@plt+0x9d4>
   1103c:	mvn	r6, #0
   11040:	b	11078 <abort@plt+0xa08>
   11044:	mov	r6, #0
   11048:	ldr	r1, [r5]
   1104c:	cmp	r6, r1
   11050:	bge	11074 <abort@plt+0xa04>
   11054:	ldr	r0, [r5, #8]
   11058:	ldr	r0, [r0, r6, lsl #2]
   1105c:	mov	r1, r4
   11060:	bl	105b0 <strcmp@plt>
   11064:	cmp	r0, #0
   11068:	beq	11078 <abort@plt+0xa08>
   1106c:	add	r6, r6, #1
   11070:	b	11048 <abort@plt+0x9d8>
   11074:	mvn	r6, #0
   11078:	mov	r0, r6
   1107c:	ldr	r4, [sp, #8]
   11080:	ldr	r5, [sp, #12]
   11084:	ldr	r6, [sp, #16]
   11088:	ldr	lr, [sp, #4]
   1108c:	add	sp, sp, #24
   11090:	bx	lr
   11094:	mov	ip, sp
   11098:	sub	sp, sp, #24
   1109c:	str	ip, [sp]
   110a0:	str	lr, [sp, #4]
   110a4:	str	r4, [sp, #8]
   110a8:	str	r5, [sp, #12]
   110ac:	str	r6, [sp, #16]
   110b0:	str	r7, [sp, #20]
   110b4:	mov	r6, r0
   110b8:	cmp	r6, #0
   110bc:	bne	110c8 <abort@plt+0xa58>
   110c0:	mvn	r0, #0
   110c4:	b	11160 <abort@plt+0xaf0>
   110c8:	mov	r4, #1
   110cc:	ldr	r2, [r6]
   110d0:	cmp	r4, r2
   110d4:	bge	1115c <abort@plt+0xaec>
   110d8:	ldr	r2, [r6, #8]
   110dc:	ldr	r7, [r2, r4, lsl #2]
   110e0:	mov	r5, r4
   110e4:	cmp	r5, #0
   110e8:	ble	11118 <abort@plt+0xaa8>
   110ec:	ldr	r3, [r6, #8]
   110f0:	lsl	r1, r5, #2
   110f4:	add	ip, r3, r1
   110f8:	sub	lr, ip, #4096	; 0x1000
   110fc:	ldr	r1, [lr, #4092]	; 0xffc
   11100:	mov	r0, r7
   11104:	bl	105b0 <strcmp@plt>
   11108:	cmp	r0, #0
   1110c:	movlt	r3, #1
   11110:	movge	r3, #0
   11114:	b	1111c <abort@plt+0xaac>
   11118:	mov	r3, #0
   1111c:	cmp	r3, #0
   11120:	beq	1114c <abort@plt+0xadc>
   11124:	ldr	r1, [r6, #8]
   11128:	add	ip, r1, r5, lsl #2
   1112c:	ldr	r1, [r6, #8]
   11130:	lsl	r0, r5, #2
   11134:	add	r3, r1, r0
   11138:	sub	r0, r3, #4
   1113c:	ldr	lr, [r0]
   11140:	str	lr, [ip]
   11144:	sub	r5, r5, #1
   11148:	b	110e4 <abort@plt+0xa74>
   1114c:	ldr	r2, [r6, #8]
   11150:	str	r7, [r2, r5, lsl #2]
   11154:	add	r4, r4, #1
   11158:	b	110cc <abort@plt+0xa5c>
   1115c:	mov	r0, #0
   11160:	ldr	r4, [sp, #8]
   11164:	ldr	r5, [sp, #12]
   11168:	ldr	r6, [sp, #16]
   1116c:	ldr	r7, [sp, #20]
   11170:	ldr	lr, [sp, #4]
   11174:	add	sp, sp, #24
   11178:	bx	lr
   1117c:	mov	ip, sp
   11180:	sub	sp, sp, #24
   11184:	str	ip, [sp]
   11188:	str	lr, [sp, #4]
   1118c:	str	r4, [sp, #8]
   11190:	str	r5, [sp, #12]
   11194:	str	r6, [sp, #16]
   11198:	mov	r4, r1
   1119c:	mov	r5, r0
   111a0:	cmp	r5, #0
   111a4:	beq	111b8 <abort@plt+0xb48>
   111a8:	cmp	r4, #0
   111ac:	moveq	r3, #1
   111b0:	movne	r3, #0
   111b4:	b	111bc <abort@plt+0xb4c>
   111b8:	mov	r3, #1
   111bc:	cmp	r3, #0
   111c0:	beq	111cc <abort@plt+0xb5c>
   111c4:	mov	r0, #0
   111c8:	b	11220 <abort@plt+0xbb0>
   111cc:	bl	10b70 <abort@plt+0x500>
   111d0:	mov	r6, r0
   111d4:	ldr	ip, [r5]
   111d8:	ldr	r0, [r4]
   111dc:	add	r3, ip, r0, lsl #2
   111e0:	str	r3, [r6, #8]
   111e4:	ldr	r2, [r5, #4]
   111e8:	ldr	r1, [r4, #4]
   111ec:	add	r3, r2, r1
   111f0:	str	r3, [r6, #4]
   111f4:	ldr	r0, [r6, #8]
   111f8:	ldr	r0, [r0]
   111fc:	ldr	ip, [r5, #8]
   11200:	ldr	r1, [ip]
   11204:	bl	10610 <strcpy@plt>
   11208:	ldr	r0, [r6, #8]
   1120c:	ldr	r0, [r0]
   11210:	ldr	r1, [r4, #8]
   11214:	ldr	r1, [r1]
   11218:	bl	10604 <strcat@plt>
   1121c:	mov	r0, r6
   11220:	ldr	r4, [sp, #8]
   11224:	ldr	r5, [sp, #12]
   11228:	ldr	r6, [sp, #16]
   1122c:	ldr	lr, [sp, #4]
   11230:	add	sp, sp, #24
   11234:	bx	lr
   11238:	mov	ip, sp
   1123c:	sub	sp, sp, #24
   11240:	str	ip, [sp]
   11244:	str	lr, [sp, #4]
   11248:	str	r4, [sp, #8]
   1124c:	str	r5, [sp, #12]
   11250:	mov	r4, r0
   11254:	mov	r0, r4
   11258:	bl	10d20 <abort@plt+0x6b0>
   1125c:	mov	r1, r0
   11260:	cmp	r0, #0
   11264:	ble	112d4 <abort@plt+0xc64>
   11268:	mov	r5, #0
   1126c:	cmp	r5, r0
   11270:	blt	1127c <abort@plt+0xc0c>
   11274:	mov	r3, #0
   11278:	b	11288 <abort@plt+0xc18>
   1127c:	cmp	r5, r1
   11280:	movlt	r3, #1
   11284:	movge	r3, #0
   11288:	cmp	r3, #0
   1128c:	beq	112d4 <abort@plt+0xc64>
   11290:	ldr	r2, [r4, #8]
   11294:	add	r2, r2, r5, lsl #2
   11298:	ldr	lr, [r2]
   1129c:	str	lr, [sp, #16]
   112a0:	ldr	r2, [r4, #8]
   112a4:	add	r3, r2, r5, lsl #2
   112a8:	ldr	ip, [r4, #8]
   112ac:	add	r2, ip, r1, lsl #2
   112b0:	ldr	lr, [r2]
   112b4:	str	lr, [r3]
   112b8:	ldr	ip, [r4, #8]
   112bc:	add	ip, ip, r1, lsl #2
   112c0:	ldr	lr, [sp, #16]
   112c4:	str	lr, [ip]
   112c8:	sub	r1, r1, #1
   112cc:	add	r5, r5, #1
   112d0:	b	1126c <abort@plt+0xbfc>
   112d4:	mov	r0, #0
   112d8:	ldr	r4, [sp, #8]
   112dc:	ldr	r5, [sp, #12]
   112e0:	ldr	lr, [sp, #4]
   112e4:	add	sp, sp, #24
   112e8:	bx	lr
   112ec:	mov	ip, sp
   112f0:	sub	sp, sp, #40	; 0x28
   112f4:	str	ip, [sp]
   112f8:	str	lr, [sp, #4]
   112fc:	str	r4, [sp, #8]
   11300:	str	r5, [sp, #12]
   11304:	str	r6, [sp, #16]
   11308:	str	r7, [sp, #20]
   1130c:	str	r8, [sp, #24]
   11310:	ldr	r7, [r0]
   11314:	bl	10b70 <abort@plt+0x500>
   11318:	mov	r5, r0
   1131c:	add	r0, sp, #32
   11320:	bl	105ec <time@plt>
   11324:	bl	1064c <srand@plt>
   11328:	mov	r8, #0
   1132c:	cmp	r8, r7
   11330:	bge	11394 <abort@plt+0xd24>
   11334:	bl	10658 <rand@plt>
   11338:	mov	r4, r0
   1133c:	add	r6, r7, #1
   11340:	mov	r0, r4
   11344:	mov	r1, r6
   11348:	blx	113b8 <abort@plt+0xd48>
   1134c:	mul	r3, r0, r6
   11350:	sub	r4, r4, r3
   11354:	ldr	r1, [r5, #8]
   11358:	add	r2, r1, r8, lsl #2
   1135c:	ldr	lr, [r2]
   11360:	str	lr, [sp, #36]	; 0x24
   11364:	ldr	r2, [r5, #8]
   11368:	add	r1, r2, r8, lsl #2
   1136c:	ldr	ip, [r5, #8]
   11370:	add	r0, ip, r4, lsl #2
   11374:	ldr	lr, [r0]
   11378:	str	lr, [r1]
   1137c:	ldr	r3, [r5, #8]
   11380:	add	r0, r3, r4, lsl #2
   11384:	ldr	lr, [sp, #36]	; 0x24
   11388:	str	lr, [r0]
   1138c:	add	r8, r8, #1
   11390:	b	1132c <abort@plt+0xcbc>
   11394:	mov	r0, r5
   11398:	ldr	r4, [sp, #8]
   1139c:	ldr	r5, [sp, #12]
   113a0:	ldr	r6, [sp, #16]
   113a4:	ldr	r7, [sp, #20]
   113a8:	ldr	r8, [sp, #24]
   113ac:	ldr	lr, [sp, #4]
   113b0:	add	sp, sp, #40	; 0x28
   113b4:	bx	lr
   113b8:			; <UNDEFINED> instruction: 0xf0002900
   113bc:	b	fe0318bc <abort@plt+0xfe02124c>
   113c0:	svclt	0x00480c01
   113c4:	cdpne	2, 4, cr4, cr10, cr9, {2}
   113c8:	tsthi	pc, r0	; <UNPREDICTABLE>
   113cc:	svclt	0x00480003
   113d0:	addmi	r4, fp, #805306372	; 0x30000004
   113d4:	tsthi	lr, r0, asr #4	; <UNPREDICTABLE>
   113d8:			; <UNDEFINED> instruction: 0xf0004211
   113dc:	blx	fecf1870 <abort@plt+0xfece1200>
   113e0:	blx	fec8ddf4 <abort@plt+0xfec7d784>
   113e4:	bl	fe84d5f0 <abort@plt+0xfe83cf80>
   113e8:			; <UNDEFINED> instruction: 0xf1c20202
   113ec:	andge	r0, r4, pc, lsl r2
   113f0:	andne	lr, r2, #0, 22
   113f4:	andeq	pc, r0, pc, asr #32
   113f8:	svclt	0x00004697
   113fc:	andhi	pc, r0, pc, lsr #7
   11400:	svcvc	0x00c1ebb3
   11404:	bl	104100c <abort@plt+0x103099c>
   11408:	svclt	0x00280000
   1140c:	bicvc	lr, r1, #166912	; 0x28c00
   11410:	svcvc	0x0081ebb3
   11414:	bl	104101c <abort@plt+0x10309ac>
   11418:	svclt	0x00280000
   1141c:	orrvc	lr, r1, #166912	; 0x28c00
   11420:	svcvc	0x0041ebb3
   11424:	bl	104102c <abort@plt+0x10309bc>
   11428:	svclt	0x00280000
   1142c:	movtvc	lr, #7075	; 0x1ba3
   11430:	svcvc	0x0001ebb3
   11434:	bl	104103c <abort@plt+0x10309cc>
   11438:	svclt	0x00280000
   1143c:	movwvc	lr, #7075	; 0x1ba3
   11440:	svcvs	0x00c1ebb3
   11444:	bl	104104c <abort@plt+0x10309dc>
   11448:	svclt	0x00280000
   1144c:	bicvs	lr, r1, #166912	; 0x28c00
   11450:	svcvs	0x0081ebb3
   11454:	bl	104105c <abort@plt+0x10309ec>
   11458:	svclt	0x00280000
   1145c:	orrvs	lr, r1, #166912	; 0x28c00
   11460:	svcvs	0x0041ebb3
   11464:	bl	104106c <abort@plt+0x10309fc>
   11468:	svclt	0x00280000
   1146c:	movtvs	lr, #7075	; 0x1ba3
   11470:	svcvs	0x0001ebb3
   11474:	bl	104107c <abort@plt+0x1030a0c>
   11478:	svclt	0x00280000
   1147c:	movwvs	lr, #7075	; 0x1ba3
   11480:	svcpl	0x00c1ebb3
   11484:	bl	104108c <abort@plt+0x1030a1c>
   11488:	svclt	0x00280000
   1148c:	bicpl	lr, r1, #166912	; 0x28c00
   11490:	svcpl	0x0081ebb3
   11494:	bl	104109c <abort@plt+0x1030a2c>
   11498:	svclt	0x00280000
   1149c:	orrpl	lr, r1, #166912	; 0x28c00
   114a0:	svcpl	0x0041ebb3
   114a4:	bl	10410ac <abort@plt+0x1030a3c>
   114a8:	svclt	0x00280000
   114ac:	movtpl	lr, #7075	; 0x1ba3
   114b0:	svcpl	0x0001ebb3
   114b4:	bl	10410bc <abort@plt+0x1030a4c>
   114b8:	svclt	0x00280000
   114bc:	movwpl	lr, #7075	; 0x1ba3
   114c0:	svcmi	0x00c1ebb3
   114c4:	bl	10410cc <abort@plt+0x1030a5c>
   114c8:	svclt	0x00280000
   114cc:	bicmi	lr, r1, #166912	; 0x28c00
   114d0:	svcmi	0x0081ebb3
   114d4:	bl	10410dc <abort@plt+0x1030a6c>
   114d8:	svclt	0x00280000
   114dc:	orrmi	lr, r1, #166912	; 0x28c00
   114e0:	svcmi	0x0041ebb3
   114e4:	bl	10410ec <abort@plt+0x1030a7c>
   114e8:	svclt	0x00280000
   114ec:	movtmi	lr, #7075	; 0x1ba3
   114f0:	svcmi	0x0001ebb3
   114f4:	bl	10410fc <abort@plt+0x1030a8c>
   114f8:	svclt	0x00280000
   114fc:	movwmi	lr, #7075	; 0x1ba3
   11500:	svccc	0x00c1ebb3
   11504:	bl	104110c <abort@plt+0x1030a9c>
   11508:	svclt	0x00280000
   1150c:	biccc	lr, r1, #166912	; 0x28c00
   11510:	svccc	0x0081ebb3
   11514:	bl	104111c <abort@plt+0x1030aac>
   11518:	svclt	0x00280000
   1151c:	orrcc	lr, r1, #166912	; 0x28c00
   11520:	svccc	0x0041ebb3
   11524:	bl	104112c <abort@plt+0x1030abc>
   11528:	svclt	0x00280000
   1152c:	movtcc	lr, #7075	; 0x1ba3
   11530:	svccc	0x0001ebb3
   11534:	bl	104113c <abort@plt+0x1030acc>
   11538:	svclt	0x00280000
   1153c:	movwcc	lr, #7075	; 0x1ba3
   11540:	svccs	0x00c1ebb3
   11544:	bl	104114c <abort@plt+0x1030adc>
   11548:	svclt	0x00280000
   1154c:	biccs	lr, r1, #166912	; 0x28c00
   11550:	svccs	0x0081ebb3
   11554:	bl	104115c <abort@plt+0x1030aec>
   11558:	svclt	0x00280000
   1155c:	orrcs	lr, r1, #166912	; 0x28c00
   11560:	svccs	0x0041ebb3
   11564:	bl	104116c <abort@plt+0x1030afc>
   11568:	svclt	0x00280000
   1156c:	movtcs	lr, #7075	; 0x1ba3
   11570:	svccs	0x0001ebb3
   11574:	bl	104117c <abort@plt+0x1030b0c>
   11578:	svclt	0x00280000
   1157c:	movwcs	lr, #7075	; 0x1ba3
   11580:	svcne	0x00c1ebb3
   11584:	bl	104118c <abort@plt+0x1030b1c>
   11588:	svclt	0x00280000
   1158c:	bicne	lr, r1, #166912	; 0x28c00
   11590:	svcne	0x0081ebb3
   11594:	bl	104119c <abort@plt+0x1030b2c>
   11598:	svclt	0x00280000
   1159c:	orrne	lr, r1, #166912	; 0x28c00
   115a0:	svcne	0x0041ebb3
   115a4:	bl	10411ac <abort@plt+0x1030b3c>
   115a8:	svclt	0x00280000
   115ac:	movtne	lr, #7075	; 0x1ba3
   115b0:	svcne	0x0001ebb3
   115b4:	bl	10411bc <abort@plt+0x1030b4c>
   115b8:	svclt	0x00280000
   115bc:	movwne	lr, #7075	; 0x1ba3
   115c0:	svceq	0x00c1ebb3
   115c4:	bl	10411cc <abort@plt+0x1030b5c>
   115c8:	svclt	0x00280000
   115cc:	biceq	lr, r1, #166912	; 0x28c00
   115d0:	svceq	0x0081ebb3
   115d4:	bl	10411dc <abort@plt+0x1030b6c>
   115d8:	svclt	0x00280000
   115dc:	orreq	lr, r1, #166912	; 0x28c00
   115e0:	svceq	0x0041ebb3
   115e4:	bl	10411ec <abort@plt+0x1030b7c>
   115e8:	svclt	0x00280000
   115ec:	movteq	lr, #7075	; 0x1ba3
   115f0:	svceq	0x0001ebb3
   115f4:	bl	10411fc <abort@plt+0x1030b8c>
   115f8:	svclt	0x00280000
   115fc:	movweq	lr, #7075	; 0x1ba3
   11600:	svceq	0x0000f1bc
   11604:	submi	fp, r0, #72, 30	; 0x120
   11608:	b	fe7233d0 <abort@plt+0xfe712d60>
   1160c:	svclt	0x00480f00
   11610:	ldrbmi	r4, [r0, -r0, asr #4]!
   11614:	andcs	fp, r0, r8, lsr pc
   11618:	b	1401230 <abort@plt+0x13f0bc0>
   1161c:			; <UNDEFINED> instruction: 0xf04070ec
   11620:	ldrbmi	r0, [r0, -r1]!
   11624:			; <UNDEFINED> instruction: 0xf281fab1
   11628:	andseq	pc, pc, #-2147483600	; 0x80000030
   1162c:	svceq	0x0000f1bc
   11630:			; <UNDEFINED> instruction: 0xf002fa23
   11634:	submi	fp, r0, #72, 30	; 0x120
   11638:	stmdacs	r0, {r4, r5, r6, r8, r9, sl, lr}
   1163c:			; <UNDEFINED> instruction: 0xf06fbfc8
   11640:	svclt	0x00b84000
   11644:	andmi	pc, r0, pc, asr #32
   11648:	stmdalt	lr, {ip, sp, lr, pc}
   1164c:	rscsle	r2, r4, r0, lsl #18
   11650:	andmi	lr, r3, sp, lsr #18
   11654:	mrc2	7, 5, pc, cr3, cr15, {7}
   11658:			; <UNDEFINED> instruction: 0x4006e8bd
   1165c:	vqrdmulh.s<illegal width 8>	d15, d0, d2
   11660:	smlatbeq	r3, r1, fp, lr
   11664:	svclt	0x00004770
   11668:			; <UNDEFINED> instruction: 0xf04fb502
   1166c:			; <UNDEFINED> instruction: 0xf7fe0008
   11670:	stclt	15, cr14, [r2, #-616]	; 0xfffffd98
   11674:	mvnsmi	lr, #737280	; 0xb4000
   11678:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   1167c:	strmi	r4, [r8], ip, lsl #26
   11680:			; <UNDEFINED> instruction: 0x4691447e
   11684:			; <UNDEFINED> instruction: 0xf7fe447d
   11688:	blne	1dcd458 <abort@plt+0x1dbcde8>
   1168c:	strhle	r1, [sl], -r6
   11690:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   11694:	svccc	0x0004f855
   11698:	strbmi	r4, [r1], -sl, asr #12
   1169c:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   116a0:	adcmi	r4, r6, #152, 14	; 0x2600000
   116a4:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   116a8:	svclt	0x000083f8
   116ac:	muleq	r1, r0, r8
   116b0:	andeq	r0, r1, r8, lsl #17
   116b4:	svclt	0x00004770

Disassembly of section .fini:

000116b8 <.fini>:
   116b8:	push	{r3, lr}
   116bc:	pop	{r3, pc}
