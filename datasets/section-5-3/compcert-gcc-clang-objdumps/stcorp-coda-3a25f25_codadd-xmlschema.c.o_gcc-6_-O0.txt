
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_attributes>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #40	; 0x28
   c:	str	r0, [fp, #-40]	; 0xffffffd8
  10:	str	r1, [fp, #-44]	; 0xffffffd4
  14:	sub	r3, fp, #12
  18:	mov	r1, r3
  1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
  20:	bl	0 <coda_type_get_attributes>
  24:	ldr	r3, [fp, #-12]
  28:	sub	r2, fp, #16
  2c:	mov	r1, r2
  30:	mov	r0, r3
  34:	bl	0 <coda_type_get_num_record_fields>
  38:	mov	r3, #0
  3c:	str	r3, [fp, #-8]
  40:	b	160 <print_attributes+0x160>
  44:	ldr	r3, [fp, #-12]
  48:	sub	r2, fp, #28
  4c:	ldr	r1, [fp, #-8]
  50:	mov	r0, r3
  54:	bl	0 <coda_type_get_record_field_real_name>
  58:	ldr	r3, [fp, #-12]
  5c:	sub	r2, fp, #32
  60:	ldr	r1, [fp, #-8]
  64:	mov	r0, r3
  68:	bl	0 <coda_type_get_record_field_available_status>
  6c:	ldr	r3, [fp, #-12]
  70:	sub	r2, fp, #24
  74:	ldr	r1, [fp, #-8]
  78:	mov	r0, r3
  7c:	bl	0 <coda_type_get_record_field_type>
  80:	ldr	r3, [fp, #-24]	; 0xffffffe8
  84:	sub	r2, fp, #20
  88:	mov	r1, r2
  8c:	mov	r0, r3
  90:	bl	0 <coda_type_get_class>
  94:	ldr	r3, [fp, #-28]	; 0xffffffe4
  98:	mov	r2, r3
  9c:	ldr	r1, [pc, #216]	; 17c <print_attributes+0x17c>
  a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
  a4:	bl	0 <fprintf>
  a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
  ac:	cmp	r3, #1
  b0:	bne	c8 <print_attributes+0xc8>
  b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
  b8:	mov	r2, #15
  bc:	mov	r1, #1
  c0:	ldr	r0, [pc, #184]	; 180 <print_attributes+0x180>
  c4:	bl	0 <fwrite>
  c8:	ldr	r3, [fp, #-20]	; 0xffffffec
  cc:	cmp	r3, #3
  d0:	beq	fc <print_attributes+0xfc>
  d4:	cmp	r3, #4
  d8:	beq	114 <print_attributes+0x114>
  dc:	cmp	r3, #2
  e0:	bne	12c <print_attributes+0x12c>
  e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
  e8:	mov	r2, #18
  ec:	mov	r1, #1
  f0:	ldr	r0, [pc, #140]	; 184 <print_attributes+0x184>
  f4:	bl	0 <fwrite>
  f8:	b	140 <print_attributes+0x140>
  fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 100:	mov	r2, #16
 104:	mov	r1, #1
 108:	ldr	r0, [pc, #120]	; 188 <print_attributes+0x188>
 10c:	bl	0 <fwrite>
 110:	b	140 <print_attributes+0x140>
 114:	ldr	r3, [fp, #-40]	; 0xffffffd8
 118:	mov	r2, #17
 11c:	mov	r1, #1
 120:	ldr	r0, [pc, #100]	; 18c <print_attributes+0x18c>
 124:	bl	0 <fwrite>
 128:	b	140 <print_attributes+0x140>
 12c:	ldr	r3, [pc, #92]	; 190 <print_attributes+0x190>
 130:	mov	r2, #82	; 0x52
 134:	ldr	r1, [pc, #88]	; 194 <print_attributes+0x194>
 138:	ldr	r0, [pc, #88]	; 198 <print_attributes+0x198>
 13c:	bl	0 <__assert_fail>
 140:	ldr	r3, [fp, #-40]	; 0xffffffd8
 144:	mov	r2, #2
 148:	mov	r1, #1
 14c:	ldr	r0, [pc, #72]	; 19c <print_attributes+0x19c>
 150:	bl	0 <fwrite>
 154:	ldr	r3, [fp, #-8]
 158:	add	r3, r3, #1
 15c:	str	r3, [fp, #-8]
 160:	ldr	r3, [fp, #-16]
 164:	ldr	r2, [fp, #-8]
 168:	cmp	r2, r3
 16c:	blt	44 <print_attributes+0x44>
 170:	nop			; (mov r0, r0)
 174:	sub	sp, fp, #4
 178:	pop	{fp, pc}
 17c:	.word	0x00000000
 180:	.word	0x00000018
 184:	.word	0x00000028
 188:	.word	0x0000003c
 18c:	.word	0x00000050
 190:	.word	0x000003b0
 194:	.word	0x00000064
 198:	.word	0x000000b8
 19c:	.word	0x000000bc

000001a0 <print_xml_element>:
 1a0:	push	{fp, lr}
 1a4:	add	fp, sp, #4
 1a8:	sub	sp, sp, #48	; 0x30
 1ac:	str	r0, [fp, #-48]	; 0xffffffd0
 1b0:	str	r1, [fp, #-52]	; 0xffffffcc
 1b4:	sub	r3, fp, #16
 1b8:	mov	r1, r3
 1bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
 1c0:	bl	0 <coda_type_get_class>
 1c4:	ldr	r3, [fp, #-16]
 1c8:	cmp	r3, #0
 1cc:	beq	1e4 <print_xml_element+0x44>
 1d0:	ldr	r3, [pc, #824]	; 510 <print_xml_element+0x370>
 1d4:	mov	r2, #96	; 0x60
 1d8:	ldr	r1, [pc, #820]	; 514 <print_xml_element+0x374>
 1dc:	ldr	r0, [pc, #820]	; 518 <print_xml_element+0x378>
 1e0:	bl	0 <__assert_fail>
 1e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
 1e8:	mov	r2, #29
 1ec:	mov	r1, #1
 1f0:	ldr	r0, [pc, #804]	; 51c <print_xml_element+0x37c>
 1f4:	bl	0 <fwrite>
 1f8:	sub	r3, fp, #20
 1fc:	mov	r1, r3
 200:	ldr	r0, [fp, #-52]	; 0xffffffcc
 204:	bl	0 <coda_type_get_num_record_fields>
 208:	mov	r3, #0
 20c:	str	r3, [fp, #-8]
 210:	b	4c0 <print_xml_element+0x320>
 214:	sub	r3, fp, #32
 218:	mov	r2, r3
 21c:	ldr	r1, [fp, #-8]
 220:	ldr	r0, [fp, #-52]	; 0xffffffcc
 224:	bl	0 <coda_type_get_record_field_real_name>
 228:	sub	r3, fp, #28
 22c:	mov	r2, r3
 230:	ldr	r1, [fp, #-8]
 234:	ldr	r0, [fp, #-52]	; 0xffffffcc
 238:	bl	0 <coda_type_get_record_field_type>
 23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 240:	sub	r2, fp, #24
 244:	mov	r1, r2
 248:	mov	r0, r3
 24c:	bl	0 <coda_type_get_class>
 250:	ldr	r3, [fp, #-28]	; 0xffffffe4
 254:	sub	r2, fp, #36	; 0x24
 258:	mov	r1, r2
 25c:	mov	r0, r3
 260:	bl	0 <coda_type_get_format>
 264:	ldr	r3, [fp, #-32]	; 0xffffffe0
 268:	mov	r2, r3
 26c:	ldr	r1, [pc, #684]	; 520 <print_xml_element+0x380>
 270:	ldr	r0, [fp, #-48]	; 0xffffffd0
 274:	bl	0 <fprintf>
 278:	ldr	r3, [fp, #-24]	; 0xffffffe8
 27c:	cmp	r3, #1
 280:	bne	2e0 <print_xml_element+0x140>
 284:	ldr	r3, [fp, #-36]	; 0xffffffdc
 288:	cmp	r3, #2
 28c:	bne	2e0 <print_xml_element+0x140>
 290:	ldr	r3, [fp, #-48]	; 0xffffffd0
 294:	mov	r2, #36	; 0x24
 298:	mov	r1, #1
 29c:	ldr	r0, [pc, #640]	; 524 <print_xml_element+0x384>
 2a0:	bl	0 <fwrite>
 2a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2a8:	sub	r2, fp, #28
 2ac:	mov	r1, r2
 2b0:	mov	r0, r3
 2b4:	bl	0 <coda_type_get_array_base_type>
 2b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2bc:	sub	r2, fp, #24
 2c0:	mov	r1, r2
 2c4:	mov	r0, r3
 2c8:	bl	0 <coda_type_get_class>
 2cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2d0:	sub	r2, fp, #36	; 0x24
 2d4:	mov	r1, r2
 2d8:	mov	r0, r3
 2dc:	bl	0 <coda_type_get_format>
 2e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2e4:	cmp	r3, #6
 2e8:	bne	328 <print_xml_element+0x188>
 2ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2f0:	sub	r2, fp, #28
 2f4:	mov	r1, r2
 2f8:	mov	r0, r3
 2fc:	bl	0 <coda_type_get_special_base_type>
 300:	ldr	r3, [fp, #-28]	; 0xffffffe4
 304:	sub	r2, fp, #24
 308:	mov	r1, r2
 30c:	mov	r0, r3
 310:	bl	0 <coda_type_get_class>
 314:	ldr	r3, [fp, #-28]	; 0xffffffe4
 318:	sub	r2, fp, #36	; 0x24
 31c:	mov	r1, r2
 320:	mov	r0, r3
 324:	bl	0 <coda_type_get_format>
 328:	ldr	r3, [fp, #-24]	; 0xffffffe8
 32c:	cmp	r3, #0
 330:	bne	354 <print_xml_element+0x1b4>
 334:	ldr	r1, [fp, #-48]	; 0xffffffd0
 338:	mov	r0, #62	; 0x3e
 33c:	bl	0 <fputc>
 340:	ldr	r3, [fp, #-28]	; 0xffffffe4
 344:	mov	r1, r3
 348:	ldr	r0, [fp, #-48]	; 0xffffffd0
 34c:	bl	1a0 <print_xml_element>
 350:	b	4a0 <print_xml_element+0x300>
 354:	ldr	r3, [fp, #-24]	; 0xffffffe8
 358:	sub	r3, r3, #1
 35c:	cmp	r3, #3
 360:	ldrls	pc, [pc, r3, lsl #2]
 364:	b	3c8 <print_xml_element+0x228>
 368:	.word	0x00000378
 36c:	.word	0x000003a4
 370:	.word	0x000003b0
 374:	.word	0x000003bc
 378:	ldr	r3, [fp, #-36]	; 0xffffffdc
 37c:	cmp	r3, #2
 380:	bne	398 <print_xml_element+0x1f8>
 384:	ldr	r3, [pc, #388]	; 510 <print_xml_element+0x370>
 388:	mov	r2, #138	; 0x8a
 38c:	ldr	r1, [pc, #384]	; 514 <print_xml_element+0x374>
 390:	ldr	r0, [pc, #400]	; 528 <print_xml_element+0x388>
 394:	bl	0 <__assert_fail>
 398:	ldr	r3, [pc, #396]	; 52c <print_xml_element+0x38c>
 39c:	str	r3, [fp, #-12]
 3a0:	b	3dc <print_xml_element+0x23c>
 3a4:	ldr	r3, [pc, #388]	; 530 <print_xml_element+0x390>
 3a8:	str	r3, [fp, #-12]
 3ac:	b	3dc <print_xml_element+0x23c>
 3b0:	ldr	r3, [pc, #380]	; 534 <print_xml_element+0x394>
 3b4:	str	r3, [fp, #-12]
 3b8:	b	3dc <print_xml_element+0x23c>
 3bc:	ldr	r3, [pc, #360]	; 52c <print_xml_element+0x38c>
 3c0:	str	r3, [fp, #-12]
 3c4:	b	3dc <print_xml_element+0x23c>
 3c8:	ldr	r3, [pc, #320]	; 510 <print_xml_element+0x370>
 3cc:	mov	r2, #151	; 0x97
 3d0:	ldr	r1, [pc, #316]	; 514 <print_xml_element+0x374>
 3d4:	ldr	r0, [pc, #348]	; 538 <print_xml_element+0x398>
 3d8:	bl	0 <__assert_fail>
 3dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 3e0:	sub	r2, fp, #40	; 0x28
 3e4:	mov	r1, r2
 3e8:	mov	r0, r3
 3ec:	bl	0 <coda_type_has_attributes>
 3f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 3f4:	cmp	r3, #0
 3f8:	beq	490 <print_xml_element+0x2f0>
 3fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
 400:	mov	r0, #62	; 0x3e
 404:	bl	0 <fputc>
 408:	ldr	r3, [fp, #-48]	; 0xffffffd0
 40c:	mov	r2, #16
 410:	mov	r1, #1
 414:	ldr	r0, [pc, #288]	; 53c <print_xml_element+0x39c>
 418:	bl	0 <fwrite>
 41c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 420:	mov	r2, #18
 424:	mov	r1, #1
 428:	ldr	r0, [pc, #272]	; 540 <print_xml_element+0x3a0>
 42c:	bl	0 <fwrite>
 430:	ldr	r2, [fp, #-12]
 434:	ldr	r1, [pc, #264]	; 544 <print_xml_element+0x3a4>
 438:	ldr	r0, [fp, #-48]	; 0xffffffd0
 43c:	bl	0 <fprintf>
 440:	ldr	r3, [fp, #-28]	; 0xffffffe4
 444:	mov	r1, r3
 448:	ldr	r0, [fp, #-48]	; 0xffffffd0
 44c:	bl	0 <print_attributes>
 450:	ldr	r3, [fp, #-48]	; 0xffffffd0
 454:	mov	r2, #15
 458:	mov	r1, #1
 45c:	ldr	r0, [pc, #228]	; 548 <print_xml_element+0x3a8>
 460:	bl	0 <fwrite>
 464:	ldr	r3, [fp, #-48]	; 0xffffffd0
 468:	mov	r2, #19
 46c:	mov	r1, #1
 470:	ldr	r0, [pc, #212]	; 54c <print_xml_element+0x3ac>
 474:	bl	0 <fwrite>
 478:	ldr	r3, [fp, #-48]	; 0xffffffd0
 47c:	mov	r2, #17
 480:	mov	r1, #1
 484:	ldr	r0, [pc, #196]	; 550 <print_xml_element+0x3b0>
 488:	bl	0 <fwrite>
 48c:	b	4a0 <print_xml_element+0x300>
 490:	ldr	r2, [fp, #-12]
 494:	ldr	r1, [pc, #184]	; 554 <print_xml_element+0x3b4>
 498:	ldr	r0, [fp, #-48]	; 0xffffffd0
 49c:	bl	0 <fprintf>
 4a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
 4a4:	mov	r2, #13
 4a8:	mov	r1, #1
 4ac:	ldr	r0, [pc, #164]	; 558 <print_xml_element+0x3b8>
 4b0:	bl	0 <fwrite>
 4b4:	ldr	r3, [fp, #-8]
 4b8:	add	r3, r3, #1
 4bc:	str	r3, [fp, #-8]
 4c0:	ldr	r3, [fp, #-20]	; 0xffffffec
 4c4:	ldr	r2, [fp, #-8]
 4c8:	cmp	r2, r3
 4cc:	blt	214 <print_xml_element+0x74>
 4d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
 4d4:	mov	r2, #14
 4d8:	mov	r1, #1
 4dc:	ldr	r0, [pc, #120]	; 55c <print_xml_element+0x3bc>
 4e0:	bl	0 <fwrite>
 4e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
 4e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
 4ec:	bl	0 <print_attributes>
 4f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
 4f4:	mov	r2, #17
 4f8:	mov	r1, #1
 4fc:	ldr	r0, [pc, #76]	; 550 <print_xml_element+0x3b0>
 500:	bl	0 <fwrite>
 504:	nop			; (mov r0, r0)
 508:	sub	sp, fp, #4
 50c:	pop	{fp, pc}
 510:	.word	0x000003c4
 514:	.word	0x00000064
 518:	.word	0x000000c0
 51c:	.word	0x000000e0
 520:	.word	0x00000100
 524:	.word	0x00000118
 528:	.word	0x00000140
 52c:	.word	0x0000015c
 530:	.word	0x00000164
 534:	.word	0x0000016c
 538:	.word	0x000000b8
 53c:	.word	0x00000174
 540:	.word	0x00000188
 544:	.word	0x0000019c
 548:	.word	0x000001b8
 54c:	.word	0x000001c8
 550:	.word	0x000001dc
 554:	.word	0x000001f0
 558:	.word	0x00000200
 55c:	.word	0x00000210

00000560 <generate_xmlschema>:
 560:	push	{r4, fp, lr}
 564:	add	fp, sp, #8
 568:	sub	sp, sp, #44	; 0x2c
 56c:	str	r0, [fp, #-40]	; 0xffffffd8
 570:	str	r1, [fp, #-44]	; 0xffffffd4
 574:	str	r2, [fp, #-48]	; 0xffffffd0
 578:	str	r3, [fp, #-52]	; 0xffffffcc
 57c:	ldr	r3, [pc, #704]	; 844 <generate_xmlschema+0x2e4>
 580:	ldr	r3, [r3]
 584:	str	r3, [fp, #-16]
 588:	ldr	r0, [fp, #-44]	; 0xffffffd4
 58c:	bl	0 <coda_data_dictionary_get_product_class>
 590:	str	r0, [fp, #-20]	; 0xffffffec
 594:	ldr	r3, [fp, #-20]	; 0xffffffec
 598:	cmp	r3, #0
 59c:	bne	5e0 <generate_xmlschema+0x80>
 5a0:	ldr	r3, [pc, #672]	; 848 <generate_xmlschema+0x2e8>
 5a4:	ldr	r4, [r3]
 5a8:	ldr	r3, [pc, #668]	; 84c <generate_xmlschema+0x2ec>
 5ac:	ldr	r3, [pc, r3]
 5b0:	bl	0 <__aeabi_read_tp>
 5b4:	mov	r2, r0
 5b8:	ldr	r3, [r2, r3]
 5bc:	mov	r0, r3
 5c0:	bl	0 <coda_errno_to_string>
 5c4:	mov	r3, r0
 5c8:	mov	r2, r3
 5cc:	ldr	r1, [pc, #636]	; 850 <generate_xmlschema+0x2f0>
 5d0:	mov	r0, r4
 5d4:	bl	0 <fprintf>
 5d8:	mov	r0, #1
 5dc:	bl	0 <exit>
 5e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
 5e4:	ldr	r0, [fp, #-20]	; 0xffffffec
 5e8:	bl	0 <coda_product_class_get_product_type>
 5ec:	str	r0, [fp, #-24]	; 0xffffffe8
 5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5f4:	cmp	r3, #0
 5f8:	bne	63c <generate_xmlschema+0xdc>
 5fc:	ldr	r3, [pc, #580]	; 848 <generate_xmlschema+0x2e8>
 600:	ldr	r4, [r3]
 604:	ldr	r3, [pc, #584]	; 854 <generate_xmlschema+0x2f4>
 608:	ldr	r3, [pc, r3]
 60c:	bl	0 <__aeabi_read_tp>
 610:	mov	r2, r0
 614:	ldr	r3, [r2, r3]
 618:	mov	r0, r3
 61c:	bl	0 <coda_errno_to_string>
 620:	mov	r3, r0
 624:	mov	r2, r3
 628:	ldr	r1, [pc, #544]	; 850 <generate_xmlschema+0x2f0>
 62c:	mov	r0, r4
 630:	bl	0 <fprintf>
 634:	mov	r0, #1
 638:	bl	0 <exit>
 63c:	ldr	r1, [fp, #-52]	; 0xffffffcc
 640:	ldr	r0, [fp, #-24]	; 0xffffffe8
 644:	bl	0 <coda_product_type_get_product_definition_by_version>
 648:	str	r0, [fp, #-28]	; 0xffffffe4
 64c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 650:	cmp	r3, #0
 654:	bne	698 <generate_xmlschema+0x138>
 658:	ldr	r3, [pc, #488]	; 848 <generate_xmlschema+0x2e8>
 65c:	ldr	r4, [r3]
 660:	ldr	r3, [pc, #496]	; 858 <generate_xmlschema+0x2f8>
 664:	ldr	r3, [pc, r3]
 668:	bl	0 <__aeabi_read_tp>
 66c:	mov	r2, r0
 670:	ldr	r3, [r2, r3]
 674:	mov	r0, r3
 678:	bl	0 <coda_errno_to_string>
 67c:	mov	r3, r0
 680:	mov	r2, r3
 684:	ldr	r1, [pc, #452]	; 850 <generate_xmlschema+0x2f0>
 688:	mov	r0, r4
 68c:	bl	0 <fprintf>
 690:	mov	r0, #1
 694:	bl	0 <exit>
 698:	ldr	r3, [fp, #-28]	; 0xffffffe4
 69c:	ldr	r3, [r3]
 6a0:	cmp	r3, #2
 6a4:	beq	6c8 <generate_xmlschema+0x168>
 6a8:	ldr	r3, [pc, #408]	; 848 <generate_xmlschema+0x2e8>
 6ac:	ldr	r3, [r3]
 6b0:	mov	r2, #36	; 0x24
 6b4:	mov	r1, #1
 6b8:	ldr	r0, [pc, #412]	; 85c <generate_xmlschema+0x2fc>
 6bc:	bl	0 <fwrite>
 6c0:	mov	r0, #1
 6c4:	bl	0 <exit>
 6c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 6cc:	ldr	r3, [r3, #28]
 6d0:	cmp	r3, #0
 6d4:	bne	6f8 <generate_xmlschema+0x198>
 6d8:	ldr	r3, [pc, #360]	; 848 <generate_xmlschema+0x2e8>
 6dc:	ldr	r3, [r3]
 6e0:	mov	r2, #49	; 0x31
 6e4:	mov	r1, #1
 6e8:	ldr	r0, [pc, #368]	; 860 <generate_xmlschema+0x300>
 6ec:	bl	0 <fwrite>
 6f0:	mov	r0, #1
 6f4:	bl	0 <exit>
 6f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6fc:	cmp	r3, #0
 700:	beq	740 <generate_xmlschema+0x1e0>
 704:	ldr	r1, [pc, #344]	; 864 <generate_xmlschema+0x304>
 708:	ldr	r0, [fp, #-40]	; 0xffffffd8
 70c:	bl	0 <fopen>
 710:	str	r0, [fp, #-16]
 714:	ldr	r3, [fp, #-16]
 718:	cmp	r3, #0
 71c:	bne	740 <generate_xmlschema+0x1e0>
 720:	ldr	r3, [pc, #288]	; 848 <generate_xmlschema+0x2e8>
 724:	ldr	r3, [r3]
 728:	ldr	r2, [fp, #-40]	; 0xffffffd8
 72c:	ldr	r1, [pc, #308]	; 868 <generate_xmlschema+0x308>
 730:	mov	r0, r3
 734:	bl	0 <fprintf>
 738:	mov	r0, #1
 73c:	bl	0 <exit>
 740:	ldr	r3, [fp, #-28]	; 0xffffffe4
 744:	ldr	r3, [r3, #28]
 748:	ldr	r3, [r3, #8]
 74c:	cmp	r3, #0
 750:	beq	768 <generate_xmlschema+0x208>
 754:	ldr	r3, [pc, #272]	; 86c <generate_xmlschema+0x30c>
 758:	mov	r2, #229	; 0xe5
 75c:	ldr	r1, [pc, #268]	; 870 <generate_xmlschema+0x310>
 760:	ldr	r0, [pc, #268]	; 874 <generate_xmlschema+0x314>
 764:	bl	0 <__assert_fail>
 768:	ldr	r3, [fp, #-28]	; 0xffffffe4
 76c:	ldr	r3, [r3, #28]
 770:	str	r3, [fp, #-32]	; 0xffffffe0
 774:	ldr	r3, [fp, #-32]	; 0xffffffe0
 778:	ldr	r3, [r3, #48]	; 0x30
 77c:	cmp	r3, #1
 780:	beq	798 <generate_xmlschema+0x238>
 784:	ldr	r3, [pc, #224]	; 86c <generate_xmlschema+0x30c>
 788:	mov	r2, #231	; 0xe7
 78c:	ldr	r1, [pc, #220]	; 870 <generate_xmlschema+0x310>
 790:	ldr	r0, [pc, #224]	; 878 <generate_xmlschema+0x318>
 794:	bl	0 <__assert_fail>
 798:	ldr	r3, [fp, #-16]
 79c:	mov	r2, #39	; 0x27
 7a0:	mov	r1, #1
 7a4:	ldr	r0, [pc, #208]	; 87c <generate_xmlschema+0x31c>
 7a8:	bl	0 <fwrite>
 7ac:	ldr	r3, [fp, #-16]
 7b0:	mov	r2, #56	; 0x38
 7b4:	mov	r1, #1
 7b8:	ldr	r0, [pc, #192]	; 880 <generate_xmlschema+0x320>
 7bc:	bl	0 <fwrite>
 7c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7c4:	ldr	r3, [r3, #52]	; 0x34
 7c8:	ldr	r3, [r3]
 7cc:	ldr	r3, [r3, #4]
 7d0:	mov	r2, r3
 7d4:	ldr	r1, [pc, #168]	; 884 <generate_xmlschema+0x324>
 7d8:	ldr	r0, [fp, #-16]
 7dc:	bl	0 <fprintf>
 7e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7e4:	ldr	r3, [r3, #52]	; 0x34
 7e8:	ldr	r3, [r3]
 7ec:	ldr	r3, [r3, #8]
 7f0:	mov	r1, r3
 7f4:	ldr	r0, [fp, #-16]
 7f8:	bl	1a0 <print_xml_element>
 7fc:	ldr	r3, [fp, #-16]
 800:	mov	r2, #14
 804:	mov	r1, #1
 808:	ldr	r0, [pc, #120]	; 888 <generate_xmlschema+0x328>
 80c:	bl	0 <fwrite>
 810:	ldr	r3, [fp, #-16]
 814:	mov	r2, #13
 818:	mov	r1, #1
 81c:	ldr	r0, [pc, #104]	; 88c <generate_xmlschema+0x32c>
 820:	bl	0 <fwrite>
 824:	ldr	r3, [fp, #-40]	; 0xffffffd8
 828:	cmp	r3, #0
 82c:	beq	838 <generate_xmlschema+0x2d8>
 830:	ldr	r0, [fp, #-16]
 834:	bl	0 <fclose>
 838:	nop			; (mov r0, r0)
 83c:	sub	sp, fp, #8
 840:	pop	{r4, fp, pc}
	...
 84c:	.word	0x00000298
 850:	.word	0x00000220
 854:	.word	0x00000244
 858:	.word	0x000001ec
 85c:	.word	0x0000022c
 860:	.word	0x00000254
 864:	.word	0x00000288
 868:	.word	0x0000028c
 86c:	.word	0x000003d8
 870:	.word	0x00000064
 874:	.word	0x000002b8
 878:	.word	0x000002f8
 87c:	.word	0x00000314
 880:	.word	0x0000033c
 884:	.word	0x00000378
 888:	.word	0x00000390
 88c:	.word	0x000003a0
