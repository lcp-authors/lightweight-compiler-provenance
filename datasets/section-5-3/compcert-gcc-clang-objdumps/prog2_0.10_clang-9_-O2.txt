
../compcert-repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

000106c0 <.init>:
   106c0:	push	{r3, lr}
   106c4:	bl	10764 <_start@@Base+0x3c>
   106c8:	pop	{r3, pc}

Disassembly of section .plt:

000106cc <printf@plt-0x14>:
   106cc:	push	{lr}		; (str lr, [sp, #-4]!)
   106d0:	ldr	lr, [pc, #4]	; 106dc <printf@plt-0x4>
   106d4:	add	lr, pc, lr
   106d8:	ldr	pc, [lr, #8]!
   106dc:	andeq	r0, r1, r4, lsr #18

000106e0 <printf@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2340]!	; 0x924

000106ec <memcpy@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2332]!	; 0x91c

000106f8 <__libc_start_main@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2324]!	; 0x914

00010704 <__gmon_start__@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2316]!	; 0x90c

00010710 <__isoc99_scanf@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #16, 20	; 0x10000
   10718:	ldr	pc, [ip, #2308]!	; 0x904

0001071c <abort@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2300]!	; 0x8fc

Disassembly of section .text:

00010728 <_start@@Base>:
   10728:	mov	fp, #0
   1072c:	mov	lr, #0
   10730:	pop	{r1}		; (ldr r1, [sp], #4)
   10734:	mov	r2, sp
   10738:	push	{r2}		; (str r2, [sp, #-4]!)
   1073c:	push	{r0}		; (str r0, [sp, #-4]!)
   10740:	ldr	ip, [pc, #16]	; 10758 <_start@@Base+0x30>
   10744:	push	{ip}		; (str ip, [sp, #-4]!)
   10748:	ldr	r0, [pc, #12]	; 1075c <_start@@Base+0x34>
   1074c:	ldr	r3, [pc, #12]	; 10760 <_start@@Base+0x38>
   10750:	bl	106f8 <__libc_start_main@plt>
   10754:	bl	1071c <abort@plt>
   10758:	andeq	r0, r1, r8, asr #22
   1075c:	muleq	r1, r0, r9
   10760:	andeq	r0, r1, r8, ror #21
   10764:	ldr	r3, [pc, #20]	; 10780 <_start@@Base+0x58>
   10768:	ldr	r2, [pc, #20]	; 10784 <_start@@Base+0x5c>
   1076c:	add	r3, pc, r3
   10770:	ldr	r2, [r3, r2]
   10774:	cmp	r2, #0
   10778:	bxeq	lr
   1077c:	b	10704 <__gmon_start__@plt>
   10780:	andeq	r0, r1, ip, lsl #17
   10784:	andeq	r0, r0, r4, lsr #32
   10788:	ldr	r0, [pc, #24]	; 107a8 <_start@@Base+0x80>
   1078c:	ldr	r3, [pc, #24]	; 107ac <_start@@Base+0x84>
   10790:	cmp	r3, r0
   10794:	bxeq	lr
   10798:	ldr	r3, [pc, #16]	; 107b0 <_start@@Base+0x88>
   1079c:	cmp	r3, #0
   107a0:	bxeq	lr
   107a4:	bx	r3
   107a8:	andeq	r1, r2, r0, lsr r0
   107ac:	andeq	r1, r2, r0, lsr r0
   107b0:	andeq	r0, r0, r0
   107b4:	ldr	r0, [pc, #36]	; 107e0 <_start@@Base+0xb8>
   107b8:	ldr	r1, [pc, #36]	; 107e4 <_start@@Base+0xbc>
   107bc:	sub	r1, r1, r0
   107c0:	asr	r1, r1, #2
   107c4:	add	r1, r1, r1, lsr #31
   107c8:	asrs	r1, r1, #1
   107cc:	bxeq	lr
   107d0:	ldr	r3, [pc, #16]	; 107e8 <_start@@Base+0xc0>
   107d4:	cmp	r3, #0
   107d8:	bxeq	lr
   107dc:	bx	r3
   107e0:	andeq	r1, r2, r0, lsr r0
   107e4:	andeq	r1, r2, r0, lsr r0
   107e8:	andeq	r0, r0, r0
   107ec:	push	{r4, lr}
   107f0:	ldr	r4, [pc, #24]	; 10810 <_start@@Base+0xe8>
   107f4:	ldrb	r3, [r4]
   107f8:	cmp	r3, #0
   107fc:	popne	{r4, pc}
   10800:	bl	10788 <_start@@Base+0x60>
   10804:	mov	r3, #1
   10808:	strb	r3, [r4]
   1080c:	pop	{r4, pc}
   10810:	andeq	r1, r2, r0, lsr r0
   10814:	b	107b4 <_start@@Base+0x8c>

00010818 <nova_tarefa@@Base>:
   10818:	push	{fp, lr}
   1081c:	mov	fp, sp
   10820:	sub	sp, sp, #8
   10824:	mov	r1, r0
   10828:	add	r0, r0, #64	; 0x40
   1082c:	str	r0, [sp]
   10830:	movw	r0, #2904	; 0xb58
   10834:	add	r2, r1, #30
   10838:	add	r3, r1, #60	; 0x3c
   1083c:	movt	r0, #1
   10840:	bl	10710 <__isoc99_scanf@plt>
   10844:	sub	r0, r0, #4
   10848:	clz	r0, r0
   1084c:	lsr	r0, r0, #5
   10850:	mov	sp, fp
   10854:	pop	{fp, pc}

00010858 <ler_tarefas@@Base>:
   10858:	push	{r4, r5, r6, sl, fp, lr}
   1085c:	add	fp, sp, #16
   10860:	sub	sp, sp, #8
   10864:	movw	r6, #2904	; 0xb58
   10868:	mov	r5, r0
   1086c:	mvn	r4, #0
   10870:	movt	r6, #1
   10874:	add	r0, r5, #64	; 0x40
   10878:	add	r2, r5, #30
   1087c:	add	r3, r5, #60	; 0x3c
   10880:	mov	r1, r5
   10884:	str	r0, [sp]
   10888:	mov	r0, r6
   1088c:	bl	10710 <__isoc99_scanf@plt>
   10890:	add	r4, r4, #1
   10894:	cmp	r4, #99	; 0x63
   10898:	bhi	108a8 <ler_tarefas@@Base+0x50>
   1089c:	add	r5, r5, #68	; 0x44
   108a0:	cmp	r0, #4
   108a4:	beq	10874 <ler_tarefas@@Base+0x1c>
   108a8:	mov	r0, r4
   108ac:	sub	sp, fp, #16
   108b0:	pop	{r4, r5, r6, sl, fp, pc}

000108b4 <lista_tarefas@@Base>:
   108b4:	push	{r4, r5, r6, sl, fp, lr}
   108b8:	add	fp, sp, #16
   108bc:	sub	sp, sp, #8
   108c0:	cmp	r1, #1
   108c4:	blt	10900 <lista_tarefas@@Base+0x4c>
   108c8:	movw	r6, #2916	; 0xb64
   108cc:	mov	r4, r1
   108d0:	mov	r5, r0
   108d4:	movt	r6, #1
   108d8:	ldr	r0, [r5, #64]	; 0x40
   108dc:	ldr	r3, [r5, #60]	; 0x3c
   108e0:	add	r2, r5, #30
   108e4:	mov	r1, r5
   108e8:	str	r0, [sp]
   108ec:	mov	r0, r6
   108f0:	bl	106e0 <printf@plt>
   108f4:	add	r5, r5, #68	; 0x44
   108f8:	subs	r4, r4, #1
   108fc:	bne	108d8 <lista_tarefas@@Base+0x24>
   10900:	sub	sp, fp, #16
   10904:	pop	{r4, r5, r6, sl, fp, pc}

00010908 <analisa_tarefas@@Base>:
   10908:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1090c:	add	fp, sp, #24
   10910:	cmp	r1, #1
   10914:	blt	10980 <analisa_tarefas@@Base+0x78>
   10918:	add	r6, r0, #60	; 0x3c
   1091c:	mov	r9, r2
   10920:	mov	r8, r1
   10924:	mov	r0, #0
   10928:	mov	r4, r1
   1092c:	mov	r7, #0
   10930:	b	10944 <analisa_tarefas@@Base+0x3c>
   10934:	add	r7, r5, r7
   10938:	add	r6, r6, #68	; 0x44
   1093c:	subs	r4, r4, #1
   10940:	beq	10968 <analisa_tarefas@@Base+0x60>
   10944:	ldr	r5, [r6]
   10948:	cmp	r5, r0
   1094c:	ble	10934 <analisa_tarefas@@Base+0x2c>
   10950:	sub	r1, r6, #60	; 0x3c
   10954:	mov	r0, r9
   10958:	mov	r2, #68	; 0x44
   1095c:	bl	106ec <memcpy@plt>
   10960:	mov	r0, r5
   10964:	b	10934 <analisa_tarefas@@Base+0x2c>
   10968:	vmov	s0, r8
   1096c:	vmov	s2, r7
   10970:	vcvt.f32.s32	s0, s0
   10974:	vcvt.f32.s32	s2, s2
   10978:	vdiv.f32	s0, s2, s0
   1097c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10980:	vldr	s0, [pc, #4]	; 1098c <analisa_tarefas@@Base+0x84>
   10984:	vdiv.f32	s0, s0, s0
   10988:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1098c:	andeq	r0, r0, r0

00010990 <main@@Base>:
   10990:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10994:	add	fp, sp, #24
   10998:	sub	sp, sp, #2784	; 0xae0
   1099c:	sub	sp, sp, #4096	; 0x1000
   109a0:	movw	r6, #2904	; 0xb58
   109a4:	mvn	r4, #0
   109a8:	mov	r7, #0
   109ac:	add	r5, sp, #76	; 0x4c
   109b0:	movt	r6, #1
   109b4:	add	r1, r5, r7
   109b8:	add	r0, r1, #64	; 0x40
   109bc:	add	r2, r1, #30
   109c0:	add	r3, r1, #60	; 0x3c
   109c4:	str	r0, [sp]
   109c8:	mov	r0, r6
   109cc:	bl	10710 <__isoc99_scanf@plt>
   109d0:	add	r4, r4, #1
   109d4:	add	r7, r7, #68	; 0x44
   109d8:	cmp	r4, #99	; 0x63
   109dc:	bhi	109e8 <main@@Base+0x58>
   109e0:	cmp	r0, #4
   109e4:	beq	109b4 <main@@Base+0x24>
   109e8:	cmp	r7, #68	; 0x44
   109ec:	bne	10a0c <main@@Base+0x7c>
   109f0:	movw	r0, #2929	; 0xb71
   109f4:	mov	r1, #0
   109f8:	movt	r0, #1
   109fc:	bl	106e0 <printf@plt>
   10a00:	vldr	s0, [pc, #220]	; 10ae4 <main@@Base+0x154>
   10a04:	vmov.f32	s2, s0
   10a08:	b	10ab0 <main@@Base+0x120>
   10a0c:	movw	r6, #2916	; 0xb64
   10a10:	mov	r7, r4
   10a14:	movt	r6, #1
   10a18:	ldr	r0, [r5, #64]	; 0x40
   10a1c:	ldr	r3, [r5, #60]	; 0x3c
   10a20:	add	r2, r5, #30
   10a24:	mov	r1, r5
   10a28:	str	r0, [sp]
   10a2c:	mov	r0, r6
   10a30:	bl	106e0 <printf@plt>
   10a34:	subs	r7, r7, #1
   10a38:	add	r5, r5, #68	; 0x44
   10a3c:	bne	10a18 <main@@Base+0x88>
   10a40:	movw	r0, #2929	; 0xb71
   10a44:	mov	r1, r4
   10a48:	movt	r0, #1
   10a4c:	bl	106e0 <printf@plt>
   10a50:	add	r0, sp, #76	; 0x4c
   10a54:	add	r8, sp, #8
   10a58:	mov	r5, r4
   10a5c:	mov	r7, #0
   10a60:	add	r6, r0, #60	; 0x3c
   10a64:	mov	r0, #0
   10a68:	b	10a7c <main@@Base+0xec>
   10a6c:	add	r7, r9, r7
   10a70:	subs	r5, r5, #1
   10a74:	add	r6, r6, #68	; 0x44
   10a78:	beq	10aa0 <main@@Base+0x110>
   10a7c:	ldr	r9, [r6]
   10a80:	cmp	r9, r0
   10a84:	ble	10a6c <main@@Base+0xdc>
   10a88:	sub	r1, r6, #60	; 0x3c
   10a8c:	mov	r0, r8
   10a90:	mov	r2, #68	; 0x44
   10a94:	bl	106ec <memcpy@plt>
   10a98:	mov	r0, r9
   10a9c:	b	10a6c <main@@Base+0xdc>
   10aa0:	vmov	s0, r4
   10aa4:	vmov	s2, r7
   10aa8:	vcvt.f32.s32	s0, s0
   10aac:	vcvt.f32.s32	s2, s2
   10ab0:	vdiv.f32	s0, s2, s0
   10ab4:	movw	r0, #2959	; 0xb8f
   10ab8:	movt	r0, #1
   10abc:	vcvt.f64.f32	d16, s0
   10ac0:	vmov	r2, r3, d16
   10ac4:	bl	106e0 <printf@plt>
   10ac8:	movw	r0, #2993	; 0xbb1
   10acc:	add	r1, sp, #8
   10ad0:	movt	r0, #1
   10ad4:	bl	106e0 <printf@plt>
   10ad8:	mov	r0, #0
   10adc:	sub	sp, fp, #24
   10ae0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10ae4:	andeq	r0, r0, r0

00010ae8 <__libc_csu_init@@Base>:
   10ae8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10aec:	mov	r7, r0
   10af0:	ldr	r6, [pc, #72]	; 10b40 <__libc_csu_init@@Base+0x58>
   10af4:	ldr	r5, [pc, #72]	; 10b44 <__libc_csu_init@@Base+0x5c>
   10af8:	add	r6, pc, r6
   10afc:	add	r5, pc, r5
   10b00:	sub	r6, r6, r5
   10b04:	mov	r8, r1
   10b08:	mov	r9, r2
   10b0c:	bl	106c0 <printf@plt-0x20>
   10b10:	asrs	r6, r6, #2
   10b14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b18:	mov	r4, #0
   10b1c:	add	r4, r4, #1
   10b20:	ldr	r3, [r5], #4
   10b24:	mov	r2, r9
   10b28:	mov	r1, r8
   10b2c:	mov	r0, r7
   10b30:	blx	r3
   10b34:	cmp	r6, r4
   10b38:	bne	10b1c <__libc_csu_init@@Base+0x34>
   10b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b40:	andeq	r0, r1, ip, lsl #8
   10b44:	andeq	r0, r1, r4, lsl #8

00010b48 <__libc_csu_fini@@Base>:
   10b48:	bx	lr

Disassembly of section .fini:

00010b4c <.fini>:
   10b4c:	push	{r3, lr}
   10b50:	pop	{r3, pc}
