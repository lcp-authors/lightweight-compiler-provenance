
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012568 <.init>:
   12568:	push	{r3, lr}
   1256c:	bl	12a44 <_start@@Base+0x3c>
   12570:	pop	{r3, pc}

Disassembly of section .plt:

00012574 <coda_cursor_get_byte_size@plt-0x14>:
   12574:	push	{lr}		; (str lr, [sp, #-4]!)
   12578:	ldr	lr, [pc, #4]	; 12584 <coda_cursor_get_byte_size@plt-0x4>
   1257c:	add	lr, pc, lr
   12580:	ldr	pc, [lr, #8]!
   12584:	andeq	sp, r1, ip, ror sl

00012588 <coda_cursor_get_byte_size@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #118784	; 0x1d000
   12590:	ldr	pc, [ip, #2684]!	; 0xa7c

00012594 <coda_type_get_special_type_name@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #118784	; 0x1d000
   1259c:	ldr	pc, [ip, #2676]!	; 0xa74

000125a0 <coda_set_option_use_fast_size_expressions@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #118784	; 0x1d000
   125a8:	ldr	pc, [ip, #2668]!	; 0xa6c

000125ac <raise@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #118784	; 0x1d000
   125b4:	ldr	pc, [ip, #2660]!	; 0xa64

000125b8 <coda_get_option_bypass_special_types@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #118784	; 0x1d000
   125c0:	ldr	pc, [ip, #2652]!	; 0xa5c

000125c4 <coda_set_option_perform_boundary_checks@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #118784	; 0x1d000
   125cc:	ldr	pc, [ip, #2644]!	; 0xa54

000125d0 <strcmp@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #118784	; 0x1d000
   125d8:	ldr	pc, [ip, #2636]!	; 0xa4c

000125dc <coda_type_get_record_field_hidden_status@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #118784	; 0x1d000
   125e4:	ldr	pc, [ip, #2628]!	; 0xa44

000125e8 <printf@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #118784	; 0x1d000
   125f0:	ldr	pc, [ip, #2620]!	; 0xa3c

000125f4 <coda_cursor_get_record_field_available_status@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #118784	; 0x1d000
   125fc:	ldr	pc, [ip, #2612]!	; 0xa34

00012600 <fopen@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #118784	; 0x1d000
   12608:	ldr	pc, [ip, #2604]!	; 0xa2c

0001260c <coda_set_error@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #118784	; 0x1d000
   12614:	ldr	pc, [ip, #2596]!	; 0xa24

00012618 <coda_open@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #118784	; 0x1d000
   12620:	ldr	pc, [ip, #2588]!	; 0xa1c

00012624 <fflush@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #118784	; 0x1d000
   1262c:	ldr	pc, [ip, #2580]!	; 0xa14

00012630 <coda_time_double_to_string@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #118784	; 0x1d000
   12638:	ldr	pc, [ip, #2572]!	; 0xa0c

0001263c <coda_cursor_get_num_elements@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #118784	; 0x1d000
   12644:	ldr	pc, [ip, #2564]!	; 0xa04

00012648 <coda_str64u@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #118784	; 0x1d000
   12650:	ldr	pc, [ip, #2556]!	; 0x9fc

00012654 <free@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #118784	; 0x1d000
   1265c:	ldr	pc, [ip, #2548]!	; 0x9f4

00012660 <coda_set_option_use_mmap@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #118784	; 0x1d000
   12668:	ldr	pc, [ip, #2540]!	; 0x9ec

0001266c <coda_set_definition_path_conditional@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #118784	; 0x1d000
   12674:	ldr	pc, [ip, #2532]!	; 0x9e4

00012678 <coda_cursor_read_uint32@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #118784	; 0x1d000
   12680:	ldr	pc, [ip, #2524]!	; 0x9dc

00012684 <coda_set_option_bypass_special_types@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #118784	; 0x1d000
   1268c:	ldr	pc, [ip, #2516]!	; 0x9d4

00012690 <coda_type_get_record_field_type@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #118784	; 0x1d000
   12698:	ldr	pc, [ip, #2508]!	; 0x9cc

0001269c <coda_cursor_get_type@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #118784	; 0x1d000
   126a4:	ldr	pc, [ip, #2500]!	; 0x9c4

000126a8 <memcpy@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #118784	; 0x1d000
   126b0:	ldr	pc, [ip, #2492]!	; 0x9bc

000126b4 <coda_isInf@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #118784	; 0x1d000
   126bc:	ldr	pc, [ip, #2484]!	; 0x9b4

000126c0 <coda_type_get_bit_size@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #118784	; 0x1d000
   126c8:	ldr	pc, [ip, #2476]!	; 0x9ac

000126cc <coda_type_get_record_field_available_status@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #118784	; 0x1d000
   126d4:	ldr	pc, [ip, #2468]!	; 0x9a4

000126d8 <coda_cursor_has_attributes@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #118784	; 0x1d000
   126e0:	ldr	pc, [ip, #2460]!	; 0x99c

000126e4 <coda_cursor_get_type_class@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #118784	; 0x1d000
   126ec:	ldr	pc, [ip, #2452]!	; 0x994

000126f0 <coda_set_definition_path@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #118784	; 0x1d000
   126f8:	ldr	pc, [ip, #2444]!	; 0x98c

000126fc <coda_get_product_format@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #118784	; 0x1d000
   12704:	ldr	pc, [ip, #2436]!	; 0x984

00012708 <coda_type_get_unit@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #118784	; 0x1d000
   12710:	ldr	pc, [ip, #2428]!	; 0x97c

00012714 <coda_type_get_description@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #118784	; 0x1d000
   1271c:	ldr	pc, [ip, #2420]!	; 0x974

00012720 <coda_cursor_get_special_type@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #118784	; 0x1d000
   12728:	ldr	pc, [ip, #2412]!	; 0x96c

0001272c <coda_cursor_goto_first_array_element@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #118784	; 0x1d000
   12734:	ldr	pc, [ip, #2404]!	; 0x964

00012738 <coda_cursor_set_product@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #118784	; 0x1d000
   12740:	ldr	pc, [ip, #2396]!	; 0x95c

00012744 <strcpy@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #118784	; 0x1d000
   1274c:	ldr	pc, [ip, #2388]!	; 0x954

00012750 <coda_cursor_goto_first_record_field@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #118784	; 0x1d000
   12758:	ldr	pc, [ip, #2380]!	; 0x94c

0001275c <coda_cursor_goto_record_field_by_index@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #118784	; 0x1d000
   12764:	ldr	pc, [ip, #2372]!	; 0x944

00012768 <coda_done@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #118784	; 0x1d000
   12770:	ldr	pc, [ip, #2364]!	; 0x93c

00012774 <coda_cursor_get_read_type@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #118784	; 0x1d000
   1277c:	ldr	pc, [ip, #2356]!	; 0x934

00012780 <malloc@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #118784	; 0x1d000
   12788:	ldr	pc, [ip, #2348]!	; 0x92c

0001278c <__libc_start_main@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #118784	; 0x1d000
   12794:	ldr	pc, [ip, #2340]!	; 0x924

00012798 <__gmon_start__@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #118784	; 0x1d000
   127a0:	ldr	pc, [ip, #2332]!	; 0x91c

000127a4 <coda_cursor_read_string@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #118784	; 0x1d000
   127ac:	ldr	pc, [ip, #2324]!	; 0x914

000127b0 <coda_cursor_goto_parent@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #118784	; 0x1d000
   127b8:	ldr	pc, [ip, #2316]!	; 0x90c

000127bc <coda_type_get_num_record_fields@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #118784	; 0x1d000
   127c4:	ldr	pc, [ip, #2308]!	; 0x904

000127c8 <exit@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #118784	; 0x1d000
   127d0:	ldr	pc, [ip, #2300]!	; 0x8fc

000127d4 <coda_type_get_read_type@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #118784	; 0x1d000
   127dc:	ldr	pc, [ip, #2292]!	; 0x8f4

000127e0 <coda_cursor_get_string_length@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #118784	; 0x1d000
   127e8:	ldr	pc, [ip, #2284]!	; 0x8ec

000127ec <coda_cursor_read_uint64@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #118784	; 0x1d000
   127f4:	ldr	pc, [ip, #2276]!	; 0x8e4

000127f8 <coda_cursor_read_double@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #118784	; 0x1d000
   12800:	ldr	pc, [ip, #2268]!	; 0x8dc

00012804 <coda_isNaN@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #118784	; 0x1d000
   1280c:	ldr	pc, [ip, #2260]!	; 0x8d4

00012810 <fprintf@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #118784	; 0x1d000
   12818:	ldr	pc, [ip, #2252]!	; 0x8cc

0001281c <coda_cursor_goto_next_array_element@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #118784	; 0x1d000
   12824:	ldr	pc, [ip, #2244]!	; 0x8c4

00012828 <coda_open_as@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #118784	; 0x1d000
   12830:	ldr	pc, [ip, #2236]!	; 0x8bc

00012834 <coda_init@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #118784	; 0x1d000
   1283c:	ldr	pc, [ip, #2228]!	; 0x8b4

00012840 <coda_set_option_perform_conversions@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #118784	; 0x1d000
   12848:	ldr	pc, [ip, #2220]!	; 0x8ac

0001284c <coda_cursor_goto_attributes@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #118784	; 0x1d000
   12854:	ldr	pc, [ip, #2212]!	; 0x8a4

00012858 <coda_cursor_read_char@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #118784	; 0x1d000
   12860:	ldr	pc, [ip, #2204]!	; 0x89c

00012864 <memset@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #118784	; 0x1d000
   1286c:	ldr	pc, [ip, #2196]!	; 0x894

00012870 <strncpy@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #118784	; 0x1d000
   12878:	ldr	pc, [ip, #2188]!	; 0x88c

0001287c <coda_type_get_special_type@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #118784	; 0x1d000
   12884:	ldr	pc, [ip, #2180]!	; 0x884

00012888 <coda_type_get_record_union_status@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #118784	; 0x1d000
   12890:	ldr	pc, [ip, #2172]!	; 0x87c

00012894 <coda_cursor_read_complex_double_split@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #118784	; 0x1d000
   1289c:	ldr	pc, [ip, #2164]!	; 0x874

000128a0 <coda_type_get_array_base_type@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #118784	; 0x1d000
   128a8:	ldr	pc, [ip, #2156]!	; 0x86c

000128ac <fclose@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #118784	; 0x1d000
   128b4:	ldr	pc, [ip, #2148]!	; 0x864

000128b8 <coda_type_get_string_length@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #118784	; 0x1d000
   128c0:	ldr	pc, [ip, #2140]!	; 0x85c

000128c4 <coda_type_get_native_type_name@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #118784	; 0x1d000
   128cc:	ldr	pc, [ip, #2132]!	; 0x854

000128d0 <coda_cursor_get_array_dim@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #118784	; 0x1d000
   128d8:	ldr	pc, [ip, #2124]!	; 0x84c

000128dc <coda_cursor_has_ascii_content@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #118784	; 0x1d000
   128e4:	ldr	pc, [ip, #2116]!	; 0x844

000128e8 <coda_close@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #118784	; 0x1d000
   128f0:	ldr	pc, [ip, #2108]!	; 0x83c

000128f4 <coda_cursor_read_int64@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #118784	; 0x1d000
   128fc:	ldr	pc, [ip, #2100]!	; 0x834

00012900 <vfprintf@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #118784	; 0x1d000
   12908:	ldr	pc, [ip, #2092]!	; 0x82c

0001290c <coda_cursor_goto@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #118784	; 0x1d000
   12914:	ldr	pc, [ip, #2084]!	; 0x824

00012918 <coda_type_get_record_field_index_from_name@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #118784	; 0x1d000
   12920:	ldr	pc, [ip, #2076]!	; 0x81c

00012924 <coda_cursor_read_complex_double_pair@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #118784	; 0x1d000
   1292c:	ldr	pc, [ip, #2068]!	; 0x814

00012930 <coda_cursor_goto_next_record_field@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #118784	; 0x1d000
   12938:	ldr	pc, [ip, #2060]!	; 0x80c

0001293c <coda_type_get_array_dim@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #118784	; 0x1d000
   12944:	ldr	pc, [ip, #2052]!	; 0x804

00012948 <coda_cursor_get_bit_size@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #118784	; 0x1d000
   12950:	ldr	pc, [ip, #2044]!	; 0x7fc

00012954 <atoi@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #118784	; 0x1d000
   1295c:	ldr	pc, [ip, #2036]!	; 0x7f4

00012960 <coda_errno_to_string@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #118784	; 0x1d000
   12968:	ldr	pc, [ip, #2028]!	; 0x7ec

0001296c <coda_cursor_use_base_type_of_special_type@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #118784	; 0x1d000
   12974:	ldr	pc, [ip, #2020]!	; 0x7e4

00012978 <coda_cursor_get_available_union_field_index@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #118784	; 0x1d000
   12980:	ldr	pc, [ip, #2012]!	; 0x7dc

00012984 <coda_cursor_read_int32@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #118784	; 0x1d000
   1298c:	ldr	pc, [ip, #2004]!	; 0x7d4

00012990 <coda_cursor_get_file_bit_offset@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #118784	; 0x1d000
   12998:	ldr	pc, [ip, #1996]!	; 0x7cc

0001299c <coda_get_libcoda_version@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #118784	; 0x1d000
   129a4:	ldr	pc, [ip, #1988]!	; 0x7c4

000129a8 <coda_get_errno@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #118784	; 0x1d000
   129b0:	ldr	pc, [ip, #1980]!	; 0x7bc

000129b4 <coda_type_get_special_base_type@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #118784	; 0x1d000
   129bc:	ldr	pc, [ip, #1972]!	; 0x7b4

000129c0 <coda_type_get_record_field_name@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #118784	; 0x1d000
   129c8:	ldr	pc, [ip, #1964]!	; 0x7ac

000129cc <abort@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #118784	; 0x1d000
   129d4:	ldr	pc, [ip, #1956]!	; 0x7a4

000129d8 <coda_cursor_read_bits@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #118784	; 0x1d000
   129e0:	ldr	pc, [ip, #1948]!	; 0x79c

000129e4 <coda_str64@plt>:
   129e4:	add	ip, pc, #0, 12
   129e8:	add	ip, ip, #118784	; 0x1d000
   129ec:	ldr	pc, [ip, #1940]!	; 0x794

000129f0 <__assert_fail@plt>:
   129f0:	add	ip, pc, #0, 12
   129f4:	add	ip, ip, #118784	; 0x1d000
   129f8:	ldr	pc, [ip, #1932]!	; 0x78c

000129fc <coda_type_get_class@plt>:
   129fc:	add	ip, pc, #0, 12
   12a00:	add	ip, ip, #118784	; 0x1d000
   12a04:	ldr	pc, [ip, #1924]!	; 0x784

Disassembly of section .text:

00012a08 <_start@@Base>:
   12a08:	mov	fp, #0
   12a0c:	mov	lr, #0
   12a10:	pop	{r1}		; (ldr r1, [sp], #4)
   12a14:	mov	r2, sp
   12a18:	push	{r2}		; (str r2, [sp, #-4]!)
   12a1c:	push	{r0}		; (str r0, [sp, #-4]!)
   12a20:	ldr	ip, [pc, #16]	; 12a38 <_start@@Base+0x30>
   12a24:	push	{ip}		; (str ip, [sp, #-4]!)
   12a28:	ldr	r0, [pc, #12]	; 12a3c <_start@@Base+0x34>
   12a2c:	ldr	r3, [pc, #12]	; 12a40 <_start@@Base+0x38>
   12a30:	bl	1278c <__libc_start_main@plt>
   12a34:	bl	129cc <abort@plt>
   12a38:	andeq	sp, r1, r8, asr #15
   12a3c:	muleq	r1, r0, fp
   12a40:	andeq	sp, r1, r8, ror #14
   12a44:	ldr	r3, [pc, #20]	; 12a60 <_start@@Base+0x58>
   12a48:	ldr	r2, [pc, #20]	; 12a64 <_start@@Base+0x5c>
   12a4c:	add	r3, pc, r3
   12a50:	ldr	r2, [r3, r2]
   12a54:	cmp	r2, #0
   12a58:	bxeq	lr
   12a5c:	b	12798 <__gmon_start__@plt>
   12a60:	andeq	sp, r1, ip, lsr #11
   12a64:	andeq	r0, r0, ip, lsl #3
   12a68:	ldr	r0, [pc, #24]	; 12a88 <_start@@Base+0x80>
   12a6c:	ldr	r3, [pc, #24]	; 12a8c <_start@@Base+0x84>
   12a70:	cmp	r3, r0
   12a74:	bxeq	lr
   12a78:	ldr	r3, [pc, #16]	; 12a90 <_start@@Base+0x88>
   12a7c:	cmp	r3, #0
   12a80:	bxeq	lr
   12a84:	bx	r3
   12a88:	andeq	r0, r3, r4, lsr #3
   12a8c:	andeq	r0, r3, r4, lsr #3
   12a90:	andeq	r0, r0, r0
   12a94:	ldr	r0, [pc, #36]	; 12ac0 <_start@@Base+0xb8>
   12a98:	ldr	r1, [pc, #36]	; 12ac4 <_start@@Base+0xbc>
   12a9c:	sub	r1, r1, r0
   12aa0:	asr	r1, r1, #2
   12aa4:	add	r1, r1, r1, lsr #31
   12aa8:	asrs	r1, r1, #1
   12aac:	bxeq	lr
   12ab0:	ldr	r3, [pc, #16]	; 12ac8 <_start@@Base+0xc0>
   12ab4:	cmp	r3, #0
   12ab8:	bxeq	lr
   12abc:	bx	r3
   12ac0:	andeq	r0, r3, r4, lsr #3
   12ac4:	andeq	r0, r3, r4, lsr #3
   12ac8:	andeq	r0, r0, r0
   12acc:	push	{r4, lr}
   12ad0:	ldr	r4, [pc, #24]	; 12af0 <_start@@Base+0xe8>
   12ad4:	ldrb	r3, [r4]
   12ad8:	cmp	r3, #0
   12adc:	popne	{r4, pc}
   12ae0:	bl	12a68 <_start@@Base+0x60>
   12ae4:	mov	r3, #1
   12ae8:	strb	r3, [r4]
   12aec:	pop	{r4, pc}
   12af0:			; <UNDEFINED> instruction: 0x000301b0
   12af4:	b	12a94 <_start@@Base+0x8c>

00012af8 <export_data_element_to_ascii@@Base>:
   12af8:	push	{fp, lr}
   12afc:	mov	fp, sp
   12b00:	sub	sp, sp, #8
   12b04:	movw	r0, #408	; 0x198
   12b08:	movt	r0, #3
   12b0c:	ldr	r0, [r0]
   12b10:	cmp	r0, #0
   12b14:	beq	12b2c <export_data_element_to_ascii@@Base+0x34>
   12b18:	movw	r0, #408	; 0x198
   12b1c:	movt	r0, #3
   12b20:	movw	r1, #0
   12b24:	str	r1, [r0]
   12b28:	b	12b44 <export_data_element_to_ascii@@Base+0x4c>
   12b2c:	movw	r0, #4232	; 0x1088
   12b30:	movt	r0, #3
   12b34:	ldr	r0, [r0]
   12b38:	movw	r1, #61913	; 0xf1d9
   12b3c:	movt	r1, #1
   12b40:	bl	12810 <fprintf@plt>
   12b44:	movw	r0, #4632	; 0x1218
   12b48:	movt	r0, #3
   12b4c:	ldr	r0, [r0]
   12b50:	cmp	r0, #0
   12b54:	beq	12b88 <export_data_element_to_ascii@@Base+0x90>
   12b58:	movw	r0, #4232	; 0x1088
   12b5c:	movt	r0, #3
   12b60:	ldr	r0, [r0]
   12b64:	movw	r1, #2
   12b68:	movw	r2, #0
   12b6c:	bl	1874c <print_full_field_name@@Base>
   12b70:	movw	r0, #4232	; 0x1088
   12b74:	movt	r0, #3
   12b78:	ldr	r0, [r0]
   12b7c:	movw	r1, #61913	; 0xf1d9
   12b80:	movt	r1, #1
   12b84:	bl	12810 <fprintf@plt>
   12b88:	movw	r0, #4264	; 0x10a8
   12b8c:	movt	r0, #3
   12b90:	ldr	r0, [r0]
   12b94:	cmp	r0, #0
   12b98:	ble	12bc8 <export_data_element_to_ascii@@Base+0xd0>
   12b9c:	movw	r0, #4264	; 0x10a8
   12ba0:	movt	r0, #3
   12ba4:	ldr	r1, [r0]
   12ba8:	add	r0, r0, r1, lsl #3
   12bac:	ldr	r1, [r0, #296]	; 0x128
   12bb0:	ldr	r0, [r0, #300]	; 0x12c
   12bb4:	orr	r0, r1, r0
   12bb8:	cmp	r0, #0
   12bbc:	bne	12bc8 <export_data_element_to_ascii@@Base+0xd0>
   12bc0:	b	12bc4 <export_data_element_to_ascii@@Base+0xcc>
   12bc4:	b	12be8 <export_data_element_to_ascii@@Base+0xf0>
   12bc8:	movw	r0, #4232	; 0x1088
   12bcc:	movt	r0, #3
   12bd0:	ldr	r0, [r0]
   12bd4:	movw	r1, #0
   12bd8:	str	r1, [sp, #4]
   12bdc:	ldr	r2, [sp, #4]
   12be0:	ldr	r3, [sp, #4]
   12be4:	bl	12bf0 <export_data_element_to_ascii@@Base+0xf8>
   12be8:	mov	sp, fp
   12bec:	pop	{fp, pc}
   12bf0:	push	{fp, lr}
   12bf4:	mov	fp, sp
   12bf8:	sub	sp, sp, #96	; 0x60
   12bfc:	movw	ip, #480	; 0x1e0
   12c00:	movt	ip, #3
   12c04:	add	ip, ip, #8
   12c08:	str	r0, [fp, #-4]
   12c0c:	str	r1, [fp, #-8]
   12c10:	str	r2, [fp, #-12]
   12c14:	str	r3, [fp, #-16]
   12c18:	ldr	r0, [fp, #-8]
   12c1c:	movw	r1, #480	; 0x1e0
   12c20:	movt	r1, #3
   12c24:	add	r0, r1, r0, lsl #2
   12c28:	add	r0, r0, #8
   12c2c:	ldr	r0, [r0]
   12c30:	sub	r1, fp, #20
   12c34:	str	ip, [sp, #12]
   12c38:	bl	129fc <coda_type_get_class@plt>
   12c3c:	cmp	r0, #0
   12c40:	beq	12c50 <export_data_element_to_ascii@@Base+0x158>
   12c44:	movw	r0, #43812	; 0xab24
   12c48:	movt	r0, #1
   12c4c:	blx	r0
   12c50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c54:	cmp	r0, #0
   12c58:	str	r0, [sp, #8]
   12c5c:	beq	12ffc <export_data_element_to_ascii@@Base+0x504>
   12c60:	b	12c64 <export_data_element_to_ascii@@Base+0x16c>
   12c64:	ldr	r0, [sp, #8]
   12c68:	cmp	r0, #1
   12c6c:	bne	130e4 <export_data_element_to_ascii@@Base+0x5ec>
   12c70:	b	12c74 <export_data_element_to_ascii@@Base+0x17c>
   12c74:	movw	r0, #480	; 0x1e0
   12c78:	movt	r0, #3
   12c7c:	add	r0, r0, #800	; 0x320
   12c80:	ldr	r1, [fp, #-12]
   12c84:	movw	r2, #80	; 0x50
   12c88:	mul	r1, r1, r2
   12c8c:	add	r0, r0, r1
   12c90:	str	r0, [fp, #-24]	; 0xffffffe8
   12c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c98:	ldr	r0, [r0]
   12c9c:	str	r0, [sp, #28]
   12ca0:	ldr	r0, [fp, #-12]
   12ca4:	cmp	r0, #0
   12ca8:	bne	12cb8 <export_data_element_to_ascii@@Base+0x1c0>
   12cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cb0:	movw	r1, #0
   12cb4:	str	r1, [r0, #44]	; 0x2c
   12cb8:	movw	r0, #4264	; 0x10a8
   12cbc:	movt	r0, #3
   12cc0:	ldr	r0, [r0, #104]	; 0x68
   12cc4:	ldr	r1, [sp, #28]
   12cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12ccc:	ldr	r2, [r2, #4]
   12cd0:	add	r1, r1, r2
   12cd4:	cmp	r0, r1
   12cd8:	movw	r0, #0
   12cdc:	movge	r0, #1
   12ce0:	and	r0, r0, #1
   12ce4:	str	r0, [fp, #-32]	; 0xffffffe0
   12ce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cec:	cmp	r0, #0
   12cf0:	beq	12d48 <export_data_element_to_ascii@@Base+0x250>
   12cf4:	ldr	r0, [fp, #-12]
   12cf8:	movw	r1, #480	; 0x1e0
   12cfc:	movt	r1, #3
   12d00:	ldr	r1, [r1, #3360]	; 0xd20
   12d04:	sub	r1, r1, #1
   12d08:	cmp	r0, r1
   12d0c:	bge	12d48 <export_data_element_to_ascii@@Base+0x250>
   12d10:	movw	r0, #480	; 0x1e0
   12d14:	movt	r0, #3
   12d18:	add	r0, r0, #800	; 0x320
   12d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d20:	ldr	r1, [r1, #44]	; 0x2c
   12d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d28:	ldr	r2, [r2, #40]	; 0x28
   12d2c:	mul	r1, r1, r2
   12d30:	ldr	r2, [fp, #-12]
   12d34:	add	r2, r2, #1
   12d38:	movw	r3, #80	; 0x50
   12d3c:	mul	r2, r2, r3
   12d40:	add	r0, r0, r2
   12d44:	str	r1, [r0, #44]	; 0x2c
   12d48:	movw	r0, #1
   12d4c:	str	r0, [fp, #-28]	; 0xffffffe4
   12d50:	movw	r0, #0
   12d54:	str	r0, [sp, #24]
   12d58:	ldr	r0, [sp, #24]
   12d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d60:	ldr	r1, [r1, #4]
   12d64:	cmp	r0, r1
   12d68:	bge	12e40 <export_data_element_to_ascii@@Base+0x348>
   12d6c:	movw	r0, #4264	; 0x10a8
   12d70:	movt	r0, #3
   12d74:	add	r0, r0, #72	; 0x48
   12d78:	ldr	r1, [sp, #28]
   12d7c:	ldr	r2, [sp, #24]
   12d80:	add	r1, r1, r2
   12d84:	movw	r2, #4264	; 0x10a8
   12d88:	movt	r2, #3
   12d8c:	add	r1, r2, r1, lsl #2
   12d90:	add	r1, r1, #72	; 0x48
   12d94:	ldr	r1, [r1]
   12d98:	cmp	r1, #0
   12d9c:	beq	12dd8 <export_data_element_to_ascii@@Base+0x2e0>
   12da0:	ldr	r0, [sp, #28]
   12da4:	ldr	r1, [sp, #24]
   12da8:	add	r0, r0, r1
   12dac:	movw	r2, #4264	; 0x10a8
   12db0:	movt	r2, #3
   12db4:	add	r0, r2, r0, lsl #2
   12db8:	ldr	r0, [r0, #108]	; 0x6c
   12dbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dc0:	ldr	r2, [r2, #44]	; 0x2c
   12dc4:	ldr	r0, [r0, r2, lsl #2]
   12dc8:	add	r2, sp, #32
   12dcc:	add	r1, r2, r1, lsl #2
   12dd0:	str	r0, [r1]
   12dd4:	b	12e00 <export_data_element_to_ascii@@Base+0x308>
   12dd8:	ldr	r0, [sp, #28]
   12ddc:	ldr	r1, [sp, #24]
   12de0:	add	r0, r0, r1
   12de4:	movw	r2, #4264	; 0x10a8
   12de8:	movt	r2, #3
   12dec:	add	r0, r2, r0, lsl #2
   12df0:	ldr	r0, [r0, #4]
   12df4:	add	r2, sp, #32
   12df8:	add	r1, r2, r1, lsl #2
   12dfc:	str	r0, [r1]
   12e00:	ldr	r0, [sp, #24]
   12e04:	add	r1, sp, #32
   12e08:	ldr	r0, [r1, r0, lsl #2]
   12e0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e10:	mul	r0, r1, r0
   12e14:	str	r0, [fp, #-28]	; 0xffffffe4
   12e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e1c:	add	r0, r0, #48	; 0x30
   12e20:	ldr	r1, [sp, #24]
   12e24:	add	r0, r0, r1, lsl #2
   12e28:	movw	r1, #0
   12e2c:	str	r1, [r0]
   12e30:	ldr	r0, [sp, #24]
   12e34:	add	r0, r0, #1
   12e38:	str	r0, [sp, #24]
   12e3c:	b	12d58 <export_data_element_to_ascii@@Base+0x260>
   12e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e44:	cmp	r0, #0
   12e48:	bne	12e50 <export_data_element_to_ascii@@Base+0x358>
   12e4c:	b	130f0 <export_data_element_to_ascii@@Base+0x5f8>
   12e50:	movw	r0, #480	; 0x1e0
   12e54:	movt	r0, #3
   12e58:	add	r0, r0, #144	; 0x90
   12e5c:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   12e60:	cmp	r0, #0
   12e64:	beq	12e74 <export_data_element_to_ascii@@Base+0x37c>
   12e68:	movw	r0, #43812	; 0xab24
   12e6c:	movt	r0, #1
   12e70:	blx	r0
   12e74:	movw	r0, #0
   12e78:	str	r0, [sp, #24]
   12e7c:	ldr	r0, [sp, #24]
   12e80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e84:	cmp	r0, r1
   12e88:	bge	12fe8 <export_data_element_to_ascii@@Base+0x4f0>
   12e8c:	ldr	r0, [fp, #-4]
   12e90:	ldr	r1, [fp, #-8]
   12e94:	add	r1, r1, #1
   12e98:	ldr	r2, [fp, #-12]
   12e9c:	add	r2, r2, #1
   12ea0:	ldr	r3, [fp, #-16]
   12ea4:	bl	12bf0 <export_data_element_to_ascii@@Base+0xf8>
   12ea8:	ldr	r0, [sp, #24]
   12eac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12eb0:	sub	r1, r1, #1
   12eb4:	cmp	r0, r1
   12eb8:	bge	12fd4 <export_data_element_to_ascii@@Base+0x4dc>
   12ebc:	movw	r0, #480	; 0x1e0
   12ec0:	movt	r0, #3
   12ec4:	add	r0, r0, #144	; 0x90
   12ec8:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   12ecc:	cmp	r0, #0
   12ed0:	beq	12ee0 <export_data_element_to_ascii@@Base+0x3e8>
   12ed4:	movw	r0, #43812	; 0xab24
   12ed8:	movt	r0, #1
   12edc:	blx	r0
   12ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f34 <export_data_element_to_ascii@@Base+0x43c>
   12eec:	ldr	r0, [fp, #-12]
   12ef0:	movw	r1, #480	; 0x1e0
   12ef4:	movt	r1, #3
   12ef8:	ldr	r1, [r1, #3360]	; 0xd20
   12efc:	sub	r1, r1, #1
   12f00:	cmp	r0, r1
   12f04:	bge	12f34 <export_data_element_to_ascii@@Base+0x43c>
   12f08:	movw	r0, #480	; 0x1e0
   12f0c:	movt	r0, #3
   12f10:	add	r0, r0, #800	; 0x320
   12f14:	ldr	r1, [fp, #-12]
   12f18:	add	r1, r1, #1
   12f1c:	movw	r2, #80	; 0x50
   12f20:	mul	r1, r1, r2
   12f24:	add	r0, r0, r1
   12f28:	ldr	r1, [r0, #44]	; 0x2c
   12f2c:	add	r1, r1, #1
   12f30:	str	r1, [r0, #44]	; 0x2c
   12f34:	movw	r0, #4248	; 0x1098
   12f38:	movt	r0, #3
   12f3c:	ldr	r0, [r0]
   12f40:	cmp	r0, #0
   12f44:	beq	12fd0 <export_data_element_to_ascii@@Base+0x4d8>
   12f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f4c:	ldr	r0, [r0, #4]
   12f50:	sub	r0, r0, #1
   12f54:	str	r0, [sp, #20]
   12f58:	ldr	r0, [sp, #20]
   12f5c:	cmp	r0, #0
   12f60:	blt	12fcc <export_data_element_to_ascii@@Base+0x4d4>
   12f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f68:	ldr	r1, [sp, #20]
   12f6c:	add	r0, r0, r1, lsl #2
   12f70:	ldr	r1, [r0, #48]	; 0x30
   12f74:	add	r1, r1, #1
   12f78:	str	r1, [r0, #48]	; 0x30
   12f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f80:	ldr	r1, [sp, #20]
   12f84:	add	r0, r0, r1, lsl #2
   12f88:	ldr	r0, [r0, #48]	; 0x30
   12f8c:	add	r2, sp, #32
   12f90:	add	r1, r2, r1, lsl #2
   12f94:	ldr	r1, [r1]
   12f98:	cmp	r0, r1
   12f9c:	bne	12fc4 <export_data_element_to_ascii@@Base+0x4cc>
   12fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fa4:	add	r0, r0, #48	; 0x30
   12fa8:	ldr	r1, [sp, #20]
   12fac:	sub	r2, r1, #1
   12fb0:	str	r2, [sp, #20]
   12fb4:	add	r0, r0, r1, lsl #2
   12fb8:	movw	r1, #0
   12fbc:	str	r1, [r0]
   12fc0:	b	12fc8 <export_data_element_to_ascii@@Base+0x4d0>
   12fc4:	b	12fcc <export_data_element_to_ascii@@Base+0x4d4>
   12fc8:	b	12f58 <export_data_element_to_ascii@@Base+0x460>
   12fcc:	b	12fd0 <export_data_element_to_ascii@@Base+0x4d8>
   12fd0:	b	12fd4 <export_data_element_to_ascii@@Base+0x4dc>
   12fd4:	b	12fd8 <export_data_element_to_ascii@@Base+0x4e0>
   12fd8:	ldr	r0, [sp, #24]
   12fdc:	add	r0, r0, #1
   12fe0:	str	r0, [sp, #24]
   12fe4:	b	12e7c <export_data_element_to_ascii@@Base+0x384>
   12fe8:	movw	r0, #480	; 0x1e0
   12fec:	movt	r0, #3
   12ff0:	add	r0, r0, #144	; 0x90
   12ff4:	bl	127b0 <coda_cursor_goto_parent@plt>
   12ff8:	b	130f0 <export_data_element_to_ascii@@Base+0x5f8>
   12ffc:	movw	r0, #480	; 0x1e0
   13000:	movt	r0, #3
   13004:	add	r1, r0, #144	; 0x90
   13008:	movw	r2, #3492	; 0xda4
   1300c:	add	r0, r0, r2
   13010:	ldr	r2, [fp, #-16]
   13014:	movw	r3, #480	; 0x1e0
   13018:	movt	r3, #3
   1301c:	add	r2, r3, r2, lsl #2
   13020:	movw	r3, #3492	; 0xda4
   13024:	add	r2, r2, r3
   13028:	ldr	r2, [r2]
   1302c:	str	r0, [sp, #4]
   13030:	mov	r0, r1
   13034:	mov	r1, r2
   13038:	add	r2, sp, #16
   1303c:	bl	125f4 <coda_cursor_get_record_field_available_status@plt>
   13040:	cmp	r0, #0
   13044:	beq	13054 <export_data_element_to_ascii@@Base+0x55c>
   13048:	movw	r0, #43812	; 0xab24
   1304c:	movt	r0, #1
   13050:	blx	r0
   13054:	ldr	r0, [sp, #16]
   13058:	cmp	r0, #0
   1305c:	beq	130e0 <export_data_element_to_ascii@@Base+0x5e8>
   13060:	movw	r0, #480	; 0x1e0
   13064:	movt	r0, #3
   13068:	add	r1, r0, #144	; 0x90
   1306c:	movw	r2, #3492	; 0xda4
   13070:	add	r0, r0, r2
   13074:	ldr	r2, [fp, #-16]
   13078:	movw	r3, #480	; 0x1e0
   1307c:	movt	r3, #3
   13080:	add	r2, r3, r2, lsl #2
   13084:	movw	r3, #3492	; 0xda4
   13088:	add	r2, r2, r3
   1308c:	ldr	r2, [r2]
   13090:	str	r0, [sp]
   13094:	mov	r0, r1
   13098:	mov	r1, r2
   1309c:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   130a0:	cmp	r0, #0
   130a4:	beq	130b4 <export_data_element_to_ascii@@Base+0x5bc>
   130a8:	movw	r0, #43812	; 0xab24
   130ac:	movt	r0, #1
   130b0:	blx	r0
   130b4:	ldr	r0, [fp, #-4]
   130b8:	ldr	r1, [fp, #-8]
   130bc:	add	r1, r1, #1
   130c0:	ldr	r2, [fp, #-12]
   130c4:	ldr	r3, [fp, #-16]
   130c8:	add	r3, r3, #1
   130cc:	bl	12bf0 <export_data_element_to_ascii@@Base+0xf8>
   130d0:	movw	r0, #480	; 0x1e0
   130d4:	movt	r0, #3
   130d8:	add	r0, r0, #144	; 0x90
   130dc:	bl	127b0 <coda_cursor_goto_parent@plt>
   130e0:	b	130f0 <export_data_element_to_ascii@@Base+0x5f8>
   130e4:	ldr	r0, [fp, #-4]
   130e8:	ldr	r1, [fp, #-8]
   130ec:	bl	130f8 <export_data_element_to_ascii@@Base+0x600>
   130f0:	mov	sp, fp
   130f4:	pop	{fp, pc}
   130f8:	push	{r4, r5, fp, lr}
   130fc:	add	fp, sp, #8
   13100:	sub	sp, sp, #264	; 0x108
   13104:	str	r0, [fp, #-12]
   13108:	str	r1, [fp, #-16]
   1310c:	movw	r0, #4248	; 0x1098
   13110:	movt	r0, #3
   13114:	ldr	r0, [r0]
   13118:	cmp	r0, #0
   1311c:	beq	13128 <export_data_element_to_ascii@@Base+0x630>
   13120:	ldr	r0, [fp, #-12]
   13124:	bl	13a54 <export_data_element_to_ascii@@Base+0xf5c>
   13128:	movw	r0, #480	; 0x1e0
   1312c:	movt	r0, #3
   13130:	add	r0, r0, #8
   13134:	ldr	r1, [fp, #-16]
   13138:	movw	r2, #480	; 0x1e0
   1313c:	movt	r2, #3
   13140:	add	r1, r2, r1, lsl #2
   13144:	add	r1, r1, #8
   13148:	ldr	r1, [r1]
   1314c:	str	r0, [sp, #52]	; 0x34
   13150:	mov	r0, r1
   13154:	sub	r1, fp, #20
   13158:	bl	129fc <coda_type_get_class@plt>
   1315c:	cmp	r0, #0
   13160:	beq	13170 <export_data_element_to_ascii@@Base+0x678>
   13164:	movw	r0, #43812	; 0xab24
   13168:	movt	r0, #1
   1316c:	blx	r0
   13170:	ldr	r0, [fp, #-20]	; 0xffffffec
   13174:	cmp	r0, #2
   13178:	str	r0, [sp, #48]	; 0x30
   1317c:	bcc	13a1c <export_data_element_to_ascii@@Base+0xf24>
   13180:	b	13184 <export_data_element_to_ascii@@Base+0x68c>
   13184:	ldr	r0, [sp, #48]	; 0x30
   13188:	sub	r1, r0, #2
   1318c:	cmp	r1, #4
   13190:	bcc	131a8 <export_data_element_to_ascii@@Base+0x6b0>
   13194:	b	13198 <export_data_element_to_ascii@@Base+0x6a0>
   13198:	ldr	r0, [sp, #48]	; 0x30
   1319c:	cmp	r0, #6
   131a0:	beq	13828 <export_data_element_to_ascii@@Base+0xd30>
   131a4:	b	13a3c <export_data_element_to_ascii@@Base+0xf44>
   131a8:	movw	r0, #480	; 0x1e0
   131ac:	movt	r0, #3
   131b0:	add	r0, r0, #8
   131b4:	ldr	r1, [fp, #-16]
   131b8:	movw	r2, #480	; 0x1e0
   131bc:	movt	r2, #3
   131c0:	add	r1, r2, r1, lsl #2
   131c4:	add	r1, r1, #8
   131c8:	ldr	r1, [r1]
   131cc:	str	r0, [sp, #44]	; 0x2c
   131d0:	mov	r0, r1
   131d4:	sub	r1, fp, #24
   131d8:	bl	127d4 <coda_type_get_read_type@plt>
   131dc:	cmp	r0, #0
   131e0:	beq	131f0 <export_data_element_to_ascii@@Base+0x6f8>
   131e4:	movw	r0, #43812	; 0xab24
   131e8:	movt	r0, #1
   131ec:	blx	r0
   131f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131f4:	add	r0, r0, #1
   131f8:	cmp	r0, #13
   131fc:	str	r0, [sp, #40]	; 0x28
   13200:	bhi	13824 <export_data_element_to_ascii@@Base+0xd2c>
   13204:	add	r0, pc, #8
   13208:	ldr	r1, [sp, #40]	; 0x28
   1320c:	ldr	r0, [r0, r1, lsl #2]
   13210:	mov	pc, r0
   13214:	andeq	r3, r1, r4, lsl #16
   13218:	andeq	r3, r1, r8, ror r6
   1321c:			; <UNDEFINED> instruction: 0x000136b8
   13220:	andeq	r3, r1, r8, ror r6
   13224:			; <UNDEFINED> instruction: 0x000136b8
   13228:	andeq	r3, r1, r8, ror r6
   1322c:			; <UNDEFINED> instruction: 0x000136b8
   13230:	strdeq	r3, [r1], -r8
   13234:	andeq	r3, r1, r8, asr #14
   13238:	muleq	r1, r8, r7
   1323c:	muleq	r1, r8, r7
   13240:	andeq	r3, r1, ip, asr #4
   13244:			; <UNDEFINED> instruction: 0x000132b8
   13248:			; <UNDEFINED> instruction: 0x000133b0
   1324c:	movw	r0, #480	; 0x1e0
   13250:	movt	r0, #3
   13254:	add	r0, r0, #144	; 0x90
   13258:	sub	r1, fp, #25
   1325c:	bl	12858 <coda_cursor_read_char@plt>
   13260:	cmp	r0, #0
   13264:	beq	13274 <export_data_element_to_ascii@@Base+0x77c>
   13268:	movw	r0, #43812	; 0xab24
   1326c:	movt	r0, #1
   13270:	blx	r0
   13274:	movw	r0, #4636	; 0x121c
   13278:	movt	r0, #3
   1327c:	ldr	r0, [r0]
   13280:	cmp	r0, #0
   13284:	beq	132a0 <export_data_element_to_ascii@@Base+0x7a8>
   13288:	ldr	r0, [fp, #-12]
   1328c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   13290:	movw	r1, #55256	; 0xd7d8
   13294:	movt	r1, #1
   13298:	bl	12810 <fprintf@plt>
   1329c:	b	132b4 <export_data_element_to_ascii@@Base+0x7bc>
   132a0:	ldr	r0, [fp, #-12]
   132a4:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   132a8:	movw	r1, #55261	; 0xd7dd
   132ac:	movt	r1, #1
   132b0:	bl	12810 <fprintf@plt>
   132b4:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   132b8:	movw	r0, #480	; 0x1e0
   132bc:	movt	r0, #3
   132c0:	add	r0, r0, #144	; 0x90
   132c4:	sub	r1, fp, #32
   132c8:	bl	127e0 <coda_cursor_get_string_length@plt>
   132cc:	cmp	r0, #0
   132d0:	beq	132e0 <export_data_element_to_ascii@@Base+0x7e8>
   132d4:	movw	r0, #43812	; 0xab24
   132d8:	movt	r0, #1
   132dc:	blx	r0
   132e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132e4:	add	r0, r0, #1
   132e8:	bl	12780 <malloc@plt>
   132ec:	str	r0, [fp, #-36]	; 0xffffffdc
   132f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132f4:	movw	r1, #0
   132f8:	cmp	r0, r1
   132fc:	bne	13334 <export_data_element_to_ascii@@Base+0x83c>
   13300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13304:	add	r2, r0, #1
   13308:	mvn	r0, #0
   1330c:	movw	r1, #55264	; 0xd7e0
   13310:	movt	r1, #1
   13314:	movw	r3, #55317	; 0xd815
   13318:	movt	r3, #1
   1331c:	movw	ip, #126	; 0x7e
   13320:	str	ip, [sp]
   13324:	bl	1260c <coda_set_error@plt>
   13328:	movw	r0, #43812	; 0xab24
   1332c:	movt	r0, #1
   13330:	blx	r0
   13334:	movw	r0, #480	; 0x1e0
   13338:	movt	r0, #3
   1333c:	add	r0, r0, #144	; 0x90
   13340:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13344:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13348:	add	r2, r2, #1
   1334c:	bl	127a4 <coda_cursor_read_string@plt>
   13350:	cmp	r0, #0
   13354:	beq	13364 <export_data_element_to_ascii@@Base+0x86c>
   13358:	movw	r0, #43812	; 0xab24
   1335c:	movt	r0, #1
   13360:	blx	r0
   13364:	movw	r0, #4636	; 0x121c
   13368:	movt	r0, #3
   1336c:	ldr	r0, [r0]
   13370:	cmp	r0, #0
   13374:	beq	13390 <export_data_element_to_ascii@@Base+0x898>
   13378:	ldr	r0, [fp, #-12]
   1337c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13380:	movw	r1, #57348	; 0xe004
   13384:	movt	r1, #1
   13388:	bl	12810 <fprintf@plt>
   1338c:	b	133a4 <export_data_element_to_ascii@@Base+0x8ac>
   13390:	ldr	r0, [fp, #-12]
   13394:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13398:	movw	r1, #57282	; 0xdfc2
   1339c:	movt	r1, #1
   133a0:	bl	12810 <fprintf@plt>
   133a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133a8:	bl	12654 <free@plt>
   133ac:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   133b0:	movw	r0, #480	; 0x1e0
   133b4:	movt	r0, #3
   133b8:	add	r0, r0, #144	; 0x90
   133bc:	sub	r1, fp, #48	; 0x30
   133c0:	bl	12948 <coda_cursor_get_bit_size@plt>
   133c4:	cmp	r0, #0
   133c8:	beq	133d8 <export_data_element_to_ascii@@Base+0x8e0>
   133cc:	movw	r0, #43812	; 0xab24
   133d0:	movt	r0, #1
   133d4:	blx	r0
   133d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   133dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133e0:	lsr	r2, r0, #3
   133e4:	orr	r2, r2, r1, lsl #29
   133e8:	asr	r1, r1, #3
   133ec:	and	r0, r0, #7
   133f0:	adds	r3, r2, #1
   133f4:	adc	ip, r1, #0
   133f8:	cmp	r0, #0
   133fc:	movne	r2, r3
   13400:	cmp	r0, #0
   13404:	movne	r1, ip
   13408:	str	r2, [fp, #-56]	; 0xffffffc8
   1340c:	str	r1, [fp, #-52]	; 0xffffffcc
   13410:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13414:	bl	12780 <malloc@plt>
   13418:	str	r0, [fp, #-60]	; 0xffffffc4
   1341c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13420:	movw	r1, #0
   13424:	cmp	r0, r1
   13428:	bne	1345c <export_data_element_to_ascii@@Base+0x964>
   1342c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13430:	mvn	r0, #0
   13434:	movw	r1, #55264	; 0xd7e0
   13438:	movt	r1, #1
   1343c:	movw	r3, #55317	; 0xd815
   13440:	movt	r3, #1
   13444:	movw	ip, #163	; 0xa3
   13448:	str	ip, [sp]
   1344c:	bl	1260c <coda_set_error@plt>
   13450:	movw	r0, #43812	; 0xab24
   13454:	movt	r0, #1
   13458:	blx	r0
   1345c:	movw	r0, #480	; 0x1e0
   13460:	movt	r0, #3
   13464:	add	r0, r0, #144	; 0x90
   13468:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1346c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13470:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13474:	mov	ip, sp
   13478:	str	r3, [ip, #4]
   1347c:	str	r2, [ip]
   13480:	movw	r2, #480	; 0x1e0
   13484:	movt	r2, #3
   13488:	add	r2, r2, #144	; 0x90
   1348c:	mov	r3, #0
   13490:	str	r0, [sp, #36]	; 0x24
   13494:	mov	r0, r2
   13498:	mov	r2, r3
   1349c:	bl	129d8 <coda_cursor_read_bits@plt>
   134a0:	cmp	r0, #0
   134a4:	beq	134b4 <export_data_element_to_ascii@@Base+0x9bc>
   134a8:	movw	r0, #43812	; 0xab24
   134ac:	movt	r0, #1
   134b0:	blx	r0
   134b4:	movw	r0, #0
   134b8:	str	r0, [fp, #-64]	; 0xffffffc0
   134bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   134c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   134c8:	subs	r1, r0, r1
   134cc:	rscs	r0, r2, r0, asr #31
   134d0:	bge	1366c <export_data_element_to_ascii@@Base+0xb74>
   134d4:	b	134d8 <export_data_element_to_ascii@@Base+0x9e0>
   134d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134dc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   134e0:	ldrb	r0, [r0, r1]
   134e4:	strb	r0, [fp, #-65]	; 0xffffffbf
   134e8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   134ec:	mov	r1, r0
   134f0:	cmp	r0, #7
   134f4:	str	r1, [sp, #32]
   134f8:	beq	13570 <export_data_element_to_ascii@@Base+0xa78>
   134fc:	b	13500 <export_data_element_to_ascii@@Base+0xa08>
   13500:	ldr	r0, [sp, #32]
   13504:	cmp	r0, #8
   13508:	beq	13584 <export_data_element_to_ascii@@Base+0xa8c>
   1350c:	b	13510 <export_data_element_to_ascii@@Base+0xa18>
   13510:	ldr	r0, [sp, #32]
   13514:	cmp	r0, #9
   13518:	beq	13598 <export_data_element_to_ascii@@Base+0xaa0>
   1351c:	b	13520 <export_data_element_to_ascii@@Base+0xa28>
   13520:	ldr	r0, [sp, #32]
   13524:	cmp	r0, #10
   13528:	beq	135ac <export_data_element_to_ascii@@Base+0xab4>
   1352c:	b	13530 <export_data_element_to_ascii@@Base+0xa38>
   13530:	ldr	r0, [sp, #32]
   13534:	cmp	r0, #11
   13538:	beq	135c0 <export_data_element_to_ascii@@Base+0xac8>
   1353c:	b	13540 <export_data_element_to_ascii@@Base+0xa48>
   13540:	ldr	r0, [sp, #32]
   13544:	cmp	r0, #12
   13548:	beq	135d4 <export_data_element_to_ascii@@Base+0xadc>
   1354c:	b	13550 <export_data_element_to_ascii@@Base+0xa58>
   13550:	ldr	r0, [sp, #32]
   13554:	cmp	r0, #13
   13558:	beq	135e8 <export_data_element_to_ascii@@Base+0xaf0>
   1355c:	b	13560 <export_data_element_to_ascii@@Base+0xa68>
   13560:	ldr	r0, [sp, #32]
   13564:	cmp	r0, #92	; 0x5c
   13568:	beq	135fc <export_data_element_to_ascii@@Base+0xb04>
   1356c:	b	13610 <export_data_element_to_ascii@@Base+0xb18>
   13570:	ldr	r0, [fp, #-12]
   13574:	movw	r1, #55401	; 0xd869
   13578:	movt	r1, #1
   1357c:	bl	12810 <fprintf@plt>
   13580:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   13584:	ldr	r0, [fp, #-12]
   13588:	movw	r1, #55404	; 0xd86c
   1358c:	movt	r1, #1
   13590:	bl	12810 <fprintf@plt>
   13594:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   13598:	ldr	r0, [fp, #-12]
   1359c:	movw	r1, #55407	; 0xd86f
   135a0:	movt	r1, #1
   135a4:	bl	12810 <fprintf@plt>
   135a8:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   135ac:	ldr	r0, [fp, #-12]
   135b0:	movw	r1, #55410	; 0xd872
   135b4:	movt	r1, #1
   135b8:	bl	12810 <fprintf@plt>
   135bc:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   135c0:	ldr	r0, [fp, #-12]
   135c4:	movw	r1, #55413	; 0xd875
   135c8:	movt	r1, #1
   135cc:	bl	12810 <fprintf@plt>
   135d0:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   135d4:	ldr	r0, [fp, #-12]
   135d8:	movw	r1, #55416	; 0xd878
   135dc:	movt	r1, #1
   135e0:	bl	12810 <fprintf@plt>
   135e4:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   135e8:	ldr	r0, [fp, #-12]
   135ec:	movw	r1, #55419	; 0xd87b
   135f0:	movt	r1, #1
   135f4:	bl	12810 <fprintf@plt>
   135f8:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   135fc:	ldr	r0, [fp, #-12]
   13600:	movw	r1, #55422	; 0xd87e
   13604:	movt	r1, #1
   13608:	bl	12810 <fprintf@plt>
   1360c:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   13610:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13614:	cmp	r0, #32
   13618:	blt	13640 <export_data_element_to_ascii@@Base+0xb48>
   1361c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13620:	cmp	r0, #126	; 0x7e
   13624:	bgt	13640 <export_data_element_to_ascii@@Base+0xb48>
   13628:	ldr	r0, [fp, #-12]
   1362c:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   13630:	movw	r1, #55261	; 0xd7dd
   13634:	movt	r1, #1
   13638:	bl	12810 <fprintf@plt>
   1363c:	b	13654 <export_data_element_to_ascii@@Base+0xb5c>
   13640:	ldr	r0, [fp, #-12]
   13644:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   13648:	movw	r1, #55425	; 0xd881
   1364c:	movt	r1, #1
   13650:	bl	12810 <fprintf@plt>
   13654:	b	13658 <export_data_element_to_ascii@@Base+0xb60>
   13658:	b	1365c <export_data_element_to_ascii@@Base+0xb64>
   1365c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13660:	add	r0, r0, #1
   13664:	str	r0, [fp, #-64]	; 0xffffffc0
   13668:	b	134bc <export_data_element_to_ascii@@Base+0x9c4>
   1366c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13670:	bl	12654 <free@plt>
   13674:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   13678:	movw	r0, #480	; 0x1e0
   1367c:	movt	r0, #3
   13680:	add	r0, r0, #144	; 0x90
   13684:	sub	r1, fp, #72	; 0x48
   13688:	bl	12984 <coda_cursor_read_int32@plt>
   1368c:	cmp	r0, #0
   13690:	beq	136a0 <export_data_element_to_ascii@@Base+0xba8>
   13694:	movw	r0, #43812	; 0xab24
   13698:	movt	r0, #1
   1369c:	blx	r0
   136a0:	ldr	r0, [fp, #-12]
   136a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   136a8:	movw	r1, #57102	; 0xdf0e
   136ac:	movt	r1, #1
   136b0:	bl	12810 <fprintf@plt>
   136b4:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   136b8:	movw	r0, #480	; 0x1e0
   136bc:	movt	r0, #3
   136c0:	add	r0, r0, #144	; 0x90
   136c4:	sub	r1, fp, #76	; 0x4c
   136c8:	bl	12678 <coda_cursor_read_uint32@plt>
   136cc:	cmp	r0, #0
   136d0:	beq	136e0 <export_data_element_to_ascii@@Base+0xbe8>
   136d4:	movw	r0, #43812	; 0xab24
   136d8:	movt	r0, #1
   136dc:	blx	r0
   136e0:	ldr	r0, [fp, #-12]
   136e4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   136e8:	movw	r1, #55431	; 0xd887
   136ec:	movt	r1, #1
   136f0:	bl	12810 <fprintf@plt>
   136f4:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   136f8:	movw	r0, #480	; 0x1e0
   136fc:	movt	r0, #3
   13700:	add	r0, r0, #144	; 0x90
   13704:	sub	r1, fp, #88	; 0x58
   13708:	bl	128f4 <coda_cursor_read_int64@plt>
   1370c:	cmp	r0, #0
   13710:	beq	13720 <export_data_element_to_ascii@@Base+0xc28>
   13714:	movw	r0, #43812	; 0xab24
   13718:	movt	r0, #1
   1371c:	blx	r0
   13720:	sub	r2, fp, #109	; 0x6d
   13724:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13728:	ldr	r1, [fp, #-84]	; 0xffffffac
   1372c:	bl	129e4 <coda_str64@plt>
   13730:	sub	r2, fp, #109	; 0x6d
   13734:	ldr	r0, [fp, #-12]
   13738:	movw	r1, #57282	; 0xdfc2
   1373c:	movt	r1, #1
   13740:	bl	12810 <fprintf@plt>
   13744:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   13748:	movw	r0, #480	; 0x1e0
   1374c:	movt	r0, #3
   13750:	add	r0, r0, #144	; 0x90
   13754:	sub	r1, fp, #120	; 0x78
   13758:	bl	127ec <coda_cursor_read_uint64@plt>
   1375c:	cmp	r0, #0
   13760:	beq	13770 <export_data_element_to_ascii@@Base+0xc78>
   13764:	movw	r0, #43812	; 0xab24
   13768:	movt	r0, #1
   1376c:	blx	r0
   13770:	add	r2, sp, #131	; 0x83
   13774:	ldr	r0, [fp, #-120]	; 0xffffff88
   13778:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1377c:	bl	12648 <coda_str64u@plt>
   13780:	add	r2, sp, #131	; 0x83
   13784:	ldr	r0, [fp, #-12]
   13788:	movw	r1, #57282	; 0xdfc2
   1378c:	movt	r1, #1
   13790:	bl	12810 <fprintf@plt>
   13794:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   13798:	movw	r0, #480	; 0x1e0
   1379c:	movt	r0, #3
   137a0:	add	r0, r0, #144	; 0x90
   137a4:	add	r1, sp, #120	; 0x78
   137a8:	bl	127f8 <coda_cursor_read_double@plt>
   137ac:	cmp	r0, #0
   137b0:	beq	137c0 <export_data_element_to_ascii@@Base+0xcc8>
   137b4:	movw	r0, #43812	; 0xab24
   137b8:	movt	r0, #1
   137bc:	blx	r0
   137c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137c4:	cmp	r0, #8
   137c8:	bne	137e8 <export_data_element_to_ascii@@Base+0xcf0>
   137cc:	ldr	r0, [fp, #-12]
   137d0:	vldr	d16, [sp, #120]	; 0x78
   137d4:	movw	r1, #55435	; 0xd88b
   137d8:	movt	r1, #1
   137dc:	vmov	r2, r3, d16
   137e0:	bl	12810 <fprintf@plt>
   137e4:	b	13800 <export_data_element_to_ascii@@Base+0xd08>
   137e8:	ldr	r0, [fp, #-12]
   137ec:	vldr	d16, [sp, #120]	; 0x78
   137f0:	movw	r1, #55440	; 0xd890
   137f4:	movt	r1, #1
   137f8:	vmov	r2, r3, d16
   137fc:	bl	12810 <fprintf@plt>
   13800:	b	13824 <export_data_element_to_ascii@@Base+0xd2c>
   13804:	movw	r0, #55815	; 0xda07
   13808:	movt	r0, #1
   1380c:	movw	r1, #55317	; 0xd815
   13810:	movt	r1, #1
   13814:	movw	r2, #294	; 0x126
   13818:	movw	r3, #55446	; 0xd896
   1381c:	movt	r3, #1
   13820:	bl	129f0 <__assert_fail@plt>
   13824:	b	13a3c <export_data_element_to_ascii@@Base+0xf44>
   13828:	movw	r0, #480	; 0x1e0
   1382c:	movt	r0, #3
   13830:	add	r0, r0, #8
   13834:	ldr	r1, [fp, #-16]
   13838:	movw	r2, #480	; 0x1e0
   1383c:	movt	r2, #3
   13840:	add	r1, r2, r1, lsl #2
   13844:	add	r1, r1, #8
   13848:	ldr	r1, [r1]
   1384c:	str	r0, [sp, #28]
   13850:	mov	r0, r1
   13854:	add	r1, sp, #116	; 0x74
   13858:	bl	1287c <coda_type_get_special_type@plt>
   1385c:	cmp	r0, #0
   13860:	beq	13870 <export_data_element_to_ascii@@Base+0xd78>
   13864:	movw	r0, #43812	; 0xab24
   13868:	movt	r0, #1
   1386c:	blx	r0
   13870:	ldr	r0, [sp, #116]	; 0x74
   13874:	cmp	r0, #0
   13878:	str	r0, [sp, #24]
   1387c:	beq	138a8 <export_data_element_to_ascii@@Base+0xdb0>
   13880:	b	13884 <export_data_element_to_ascii@@Base+0xd8c>
   13884:	ldr	r0, [sp, #24]
   13888:	sub	r1, r0, #1
   1388c:	cmp	r1, #2
   13890:	bcc	138ac <export_data_element_to_ascii@@Base+0xdb4>
   13894:	b	13898 <export_data_element_to_ascii@@Base+0xda0>
   13898:	ldr	r0, [sp, #24]
   1389c:	cmp	r0, #3
   138a0:	beq	139b4 <export_data_element_to_ascii@@Base+0xebc>
   138a4:	b	13a18 <export_data_element_to_ascii@@Base+0xf20>
   138a8:	b	13a18 <export_data_element_to_ascii@@Base+0xf20>
   138ac:	movw	r0, #480	; 0x1e0
   138b0:	movt	r0, #3
   138b4:	add	r0, r0, #144	; 0x90
   138b8:	add	r1, sp, #104	; 0x68
   138bc:	bl	127f8 <coda_cursor_read_double@plt>
   138c0:	cmp	r0, #0
   138c4:	beq	138d4 <export_data_element_to_ascii@@Base+0xddc>
   138c8:	movw	r0, #43812	; 0xab24
   138cc:	movt	r0, #1
   138d0:	blx	r0
   138d4:	ldr	r0, [sp, #116]	; 0x74
   138d8:	cmp	r0, #2
   138dc:	bne	13998 <export_data_element_to_ascii@@Base+0xea0>
   138e0:	movw	r0, #468	; 0x1d4
   138e4:	movt	r0, #3
   138e8:	ldr	r0, [r0]
   138ec:	cmp	r0, #0
   138f0:	beq	13998 <export_data_element_to_ascii@@Base+0xea0>
   138f4:	vldr	d0, [sp, #104]	; 0x68
   138f8:	bl	12804 <coda_isNaN@plt>
   138fc:	cmp	r0, #0
   13900:	bne	13914 <export_data_element_to_ascii@@Base+0xe1c>
   13904:	vldr	d0, [sp, #104]	; 0x68
   13908:	bl	126b4 <coda_isInf@plt>
   1390c:	cmp	r0, #0
   13910:	beq	13928 <export_data_element_to_ascii@@Base+0xe30>
   13914:	add	r0, sp, #77	; 0x4d
   13918:	movw	r1, #55481	; 0xd8b9
   1391c:	movt	r1, #1
   13920:	bl	12744 <strcpy@plt>
   13924:	b	13954 <export_data_element_to_ascii@@Base+0xe5c>
   13928:	add	r1, sp, #77	; 0x4d
   1392c:	vldr	d0, [sp, #104]	; 0x68
   13930:	movw	r0, #55508	; 0xd8d4
   13934:	movt	r0, #1
   13938:	bl	12630 <coda_time_double_to_string@plt>
   1393c:	cmp	r0, #0
   13940:	beq	13950 <export_data_element_to_ascii@@Base+0xe58>
   13944:	movw	r0, #43812	; 0xab24
   13948:	movt	r0, #1
   1394c:	blx	r0
   13950:	b	13954 <export_data_element_to_ascii@@Base+0xe5c>
   13954:	movw	r0, #4636	; 0x121c
   13958:	movt	r0, #3
   1395c:	ldr	r0, [r0]
   13960:	cmp	r0, #0
   13964:	beq	13980 <export_data_element_to_ascii@@Base+0xe88>
   13968:	add	r2, sp, #77	; 0x4d
   1396c:	ldr	r0, [fp, #-12]
   13970:	movw	r1, #57348	; 0xe004
   13974:	movt	r1, #1
   13978:	bl	12810 <fprintf@plt>
   1397c:	b	13994 <export_data_element_to_ascii@@Base+0xe9c>
   13980:	add	r2, sp, #77	; 0x4d
   13984:	ldr	r0, [fp, #-12]
   13988:	movw	r1, #57282	; 0xdfc2
   1398c:	movt	r1, #1
   13990:	bl	12810 <fprintf@plt>
   13994:	b	139b0 <export_data_element_to_ascii@@Base+0xeb8>
   13998:	ldr	r0, [fp, #-12]
   1399c:	vldr	d16, [sp, #104]	; 0x68
   139a0:	movw	r1, #55440	; 0xd890
   139a4:	movt	r1, #1
   139a8:	vmov	r2, r3, d16
   139ac:	bl	12810 <fprintf@plt>
   139b0:	b	13a18 <export_data_element_to_ascii@@Base+0xf20>
   139b4:	movw	r0, #480	; 0x1e0
   139b8:	movt	r0, #3
   139bc:	add	r0, r0, #144	; 0x90
   139c0:	add	r1, sp, #56	; 0x38
   139c4:	bl	12924 <coda_cursor_read_complex_double_pair@plt>
   139c8:	cmp	r0, #0
   139cc:	beq	139dc <export_data_element_to_ascii@@Base+0xee4>
   139d0:	movw	r0, #43812	; 0xab24
   139d4:	movt	r0, #1
   139d8:	blx	r0
   139dc:	ldr	r0, [fp, #-12]
   139e0:	vldr	d16, [sp, #56]	; 0x38
   139e4:	movw	r1, #4236	; 0x108c
   139e8:	movt	r1, #3
   139ec:	ldr	r1, [r1]
   139f0:	vldr	d17, [sp, #64]	; 0x40
   139f4:	movw	r2, #55535	; 0xd8ef
   139f8:	movt	r2, #1
   139fc:	str	r1, [sp, #20]
   13a00:	mov	r1, r2
   13a04:	vmov	r2, r3, d16
   13a08:	ldr	ip, [sp, #20]
   13a0c:	str	ip, [sp]
   13a10:	vstr	d17, [sp, #8]
   13a14:	bl	12810 <fprintf@plt>
   13a18:	b	13a3c <export_data_element_to_ascii@@Base+0xf44>
   13a1c:	movw	r0, #55815	; 0xda07
   13a20:	movt	r0, #1
   13a24:	movw	r1, #55317	; 0xd815
   13a28:	movt	r1, #1
   13a2c:	movw	r2, #368	; 0x170
   13a30:	movw	r3, #55446	; 0xd896
   13a34:	movt	r3, #1
   13a38:	bl	129f0 <__assert_fail@plt>
   13a3c:	ldr	r0, [fp, #-12]
   13a40:	movw	r1, #61913	; 0xf1d9
   13a44:	movt	r1, #1
   13a48:	bl	12810 <fprintf@plt>
   13a4c:	sub	sp, fp, #8
   13a50:	pop	{r4, r5, fp, pc}
   13a54:	push	{fp, lr}
   13a58:	mov	fp, sp
   13a5c:	sub	sp, sp, #24
   13a60:	str	r0, [fp, #-4]
   13a64:	movw	r0, #0
   13a68:	str	r0, [fp, #-8]
   13a6c:	str	r0, [sp, #12]
   13a70:	ldr	r0, [sp, #12]
   13a74:	movw	r1, #480	; 0x1e0
   13a78:	movt	r1, #3
   13a7c:	ldr	r1, [r1, #136]	; 0x88
   13a80:	cmp	r0, r1
   13a84:	bge	13b80 <export_data_element_to_ascii@@Base+0x1088>
   13a88:	movw	r0, #480	; 0x1e0
   13a8c:	movt	r0, #3
   13a90:	add	r0, r0, #8
   13a94:	ldr	r1, [sp, #12]
   13a98:	movw	r2, #480	; 0x1e0
   13a9c:	movt	r2, #3
   13aa0:	add	r1, r2, r1, lsl #2
   13aa4:	add	r1, r1, #8
   13aa8:	ldr	r1, [r1]
   13aac:	str	r0, [sp]
   13ab0:	mov	r0, r1
   13ab4:	add	r1, sp, #8
   13ab8:	bl	129fc <coda_type_get_class@plt>
   13abc:	cmp	r0, #0
   13ac0:	beq	13ad0 <export_data_element_to_ascii@@Base+0xfd8>
   13ac4:	movw	r0, #43812	; 0xab24
   13ac8:	movt	r0, #1
   13acc:	blx	r0
   13ad0:	ldr	r0, [sp, #8]
   13ad4:	cmp	r0, #1
   13ad8:	bne	13b6c <export_data_element_to_ascii@@Base+0x1074>
   13adc:	movw	r0, #0
   13ae0:	str	r0, [sp, #4]
   13ae4:	movw	r0, #480	; 0x1e0
   13ae8:	movt	r0, #3
   13aec:	add	r0, r0, #800	; 0x320
   13af0:	ldr	r1, [sp, #4]
   13af4:	ldr	r2, [fp, #-8]
   13af8:	movw	r3, #80	; 0x50
   13afc:	mul	r2, r2, r3
   13b00:	add	r0, r0, r2
   13b04:	ldr	r0, [r0, #4]
   13b08:	cmp	r1, r0
   13b0c:	bge	13b60 <export_data_element_to_ascii@@Base+0x1068>
   13b10:	ldr	r0, [fp, #-4]
   13b14:	ldr	r1, [fp, #-8]
   13b18:	add	r1, r1, r1, lsl #2
   13b1c:	movw	r2, #480	; 0x1e0
   13b20:	movt	r2, #3
   13b24:	add	r1, r2, r1, lsl #4
   13b28:	add	r1, r1, #848	; 0x350
   13b2c:	ldr	r2, [sp, #4]
   13b30:	add	r1, r1, r2, lsl #2
   13b34:	ldr	r2, [r1]
   13b38:	movw	r1, #4236	; 0x108c
   13b3c:	movt	r1, #3
   13b40:	ldr	r3, [r1]
   13b44:	movw	r1, #55542	; 0xd8f6
   13b48:	movt	r1, #1
   13b4c:	bl	12810 <fprintf@plt>
   13b50:	ldr	r0, [sp, #4]
   13b54:	add	r0, r0, #1
   13b58:	str	r0, [sp, #4]
   13b5c:	b	13ae4 <export_data_element_to_ascii@@Base+0xfec>
   13b60:	ldr	r0, [fp, #-8]
   13b64:	add	r0, r0, #1
   13b68:	str	r0, [fp, #-8]
   13b6c:	b	13b70 <export_data_element_to_ascii@@Base+0x1078>
   13b70:	ldr	r0, [sp, #12]
   13b74:	add	r0, r0, #1
   13b78:	str	r0, [sp, #12]
   13b7c:	b	13a70 <export_data_element_to_ascii@@Base+0xf78>
   13b80:	mov	sp, fp
   13b84:	pop	{fp, pc}

00013b88 <print_debug_data@@Base>:
   13b88:	push	{r4, r5, fp, lr}
   13b8c:	add	fp, sp, #8
   13b90:	sub	sp, sp, #560	; 0x230
   13b94:	str	r0, [fp, #-12]
   13b98:	str	r1, [fp, #-16]
   13b9c:	str	r2, [fp, #-20]	; 0xffffffec
   13ba0:	ldr	r0, [fp, #-12]
   13ba4:	movw	r1, #0
   13ba8:	cmp	r0, r1
   13bac:	bne	13bcc <print_debug_data@@Base+0x44>
   13bb0:	movw	r0, #480	; 0x1e0
   13bb4:	movt	r0, #3
   13bb8:	ldr	r0, [r0]
   13bbc:	sub	r1, fp, #24
   13bc0:	bl	12618 <coda_open@plt>
   13bc4:	str	r0, [sp, #16]
   13bc8:	b	13bf4 <print_debug_data@@Base+0x6c>
   13bcc:	movw	r0, #480	; 0x1e0
   13bd0:	movt	r0, #3
   13bd4:	ldr	r0, [r0]
   13bd8:	ldr	r1, [fp, #-12]
   13bdc:	ldr	r2, [fp, #-16]
   13be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13be4:	sub	ip, fp, #24
   13be8:	str	ip, [sp]
   13bec:	bl	12828 <coda_open_as@plt>
   13bf0:	str	r0, [sp, #16]
   13bf4:	ldr	r0, [sp, #16]
   13bf8:	cmp	r0, #0
   13bfc:	beq	13c74 <print_debug_data@@Base+0xec>
   13c00:	bl	129a8 <coda_get_errno@plt>
   13c04:	ldr	r0, [r0]
   13c08:	cmn	r0, #21
   13c0c:	bne	13c74 <print_debug_data@@Base+0xec>
   13c10:	movw	r0, #0
   13c14:	bl	12660 <coda_set_option_use_mmap@plt>
   13c18:	ldr	r1, [fp, #-12]
   13c1c:	movw	r2, #0
   13c20:	cmp	r1, r2
   13c24:	bne	13c44 <print_debug_data@@Base+0xbc>
   13c28:	movw	r0, #480	; 0x1e0
   13c2c:	movt	r0, #3
   13c30:	ldr	r0, [r0]
   13c34:	sub	r1, fp, #24
   13c38:	bl	12618 <coda_open@plt>
   13c3c:	str	r0, [sp, #16]
   13c40:	b	13c6c <print_debug_data@@Base+0xe4>
   13c44:	movw	r0, #480	; 0x1e0
   13c48:	movt	r0, #3
   13c4c:	ldr	r0, [r0]
   13c50:	ldr	r1, [fp, #-12]
   13c54:	ldr	r2, [fp, #-16]
   13c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c5c:	sub	ip, fp, #24
   13c60:	str	ip, [sp]
   13c64:	bl	12828 <coda_open_as@plt>
   13c68:	str	r0, [sp, #16]
   13c6c:	movw	r0, #1
   13c70:	bl	12660 <coda_set_option_use_mmap@plt>
   13c74:	ldr	r0, [sp, #16]
   13c78:	cmp	r0, #0
   13c7c:	beq	13c8c <print_debug_data@@Base+0x104>
   13c80:	movw	r0, #43812	; 0xab24
   13c84:	movt	r0, #1
   13c88:	blx	r0
   13c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c90:	add	r1, sp, #20
   13c94:	bl	126fc <coda_get_product_format@plt>
   13c98:	cmp	r0, #0
   13c9c:	beq	13cac <print_debug_data@@Base+0x124>
   13ca0:	movw	r0, #43812	; 0xab24
   13ca4:	movt	r0, #1
   13ca8:	blx	r0
   13cac:	ldr	r0, [sp, #20]
   13cb0:	cmp	r0, #0
   13cb4:	movw	r0, #1
   13cb8:	str	r0, [sp, #12]
   13cbc:	beq	13ce8 <print_debug_data@@Base+0x160>
   13cc0:	ldr	r0, [sp, #20]
   13cc4:	cmp	r0, #1
   13cc8:	movw	r0, #1
   13ccc:	str	r0, [sp, #12]
   13cd0:	beq	13ce8 <print_debug_data@@Base+0x160>
   13cd4:	ldr	r0, [sp, #20]
   13cd8:	cmp	r0, #2
   13cdc:	movw	r0, #0
   13ce0:	moveq	r0, #1
   13ce4:	str	r0, [sp, #12]
   13ce8:	ldr	r0, [sp, #12]
   13cec:	and	r0, r0, #1
   13cf0:	movw	r1, #412	; 0x19c
   13cf4:	movt	r1, #3
   13cf8:	str	r0, [r1]
   13cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d00:	add	r0, sp, #24
   13d04:	bl	12738 <coda_cursor_set_product@plt>
   13d08:	cmp	r0, #0
   13d0c:	beq	13d1c <print_debug_data@@Base+0x194>
   13d10:	movw	r0, #43812	; 0xab24
   13d14:	movt	r0, #1
   13d18:	blx	r0
   13d1c:	movw	r0, #4256	; 0x10a0
   13d20:	movt	r0, #3
   13d24:	ldr	r0, [r0]
   13d28:	movw	r1, #0
   13d2c:	cmp	r0, r1
   13d30:	beq	13d68 <print_debug_data@@Base+0x1e0>
   13d34:	movw	r0, #4256	; 0x10a0
   13d38:	movt	r0, #3
   13d3c:	ldr	r1, [r0]
   13d40:	add	r0, sp, #24
   13d44:	bl	1290c <coda_cursor_goto@plt>
   13d48:	str	r0, [sp, #16]
   13d4c:	ldr	r0, [sp, #16]
   13d50:	cmp	r0, #0
   13d54:	beq	13d64 <print_debug_data@@Base+0x1dc>
   13d58:	movw	r0, #43812	; 0xab24
   13d5c:	movt	r0, #1
   13d60:	blx	r0
   13d64:	b	13d68 <print_debug_data@@Base+0x1e0>
   13d68:	movw	r0, #0
   13d6c:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   13d70:	add	r1, sp, #24
   13d74:	str	r0, [sp, #8]
   13d78:	mov	r0, r1
   13d7c:	movw	r1, #0
   13d80:	bl	13d94 <print_debug_data@@Base+0x20c>
   13d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d88:	bl	128e8 <coda_close@plt>
   13d8c:	sub	sp, fp, #8
   13d90:	pop	{r4, r5, fp, pc}
   13d94:	push	{r4, r5, fp, lr}
   13d98:	add	fp, sp, #8
   13d9c:	sub	sp, sp, #1040	; 0x410
   13da0:	str	r0, [fp, #-12]
   13da4:	str	r1, [fp, #-16]
   13da8:	ldr	r0, [fp, #-12]
   13dac:	sub	r1, fp, #24
   13db0:	bl	126d8 <coda_cursor_has_attributes@plt>
   13db4:	cmp	r0, #0
   13db8:	beq	13dc8 <print_debug_data@@Base+0x240>
   13dbc:	movw	r0, #43812	; 0xab24
   13dc0:	movt	r0, #1
   13dc4:	blx	r0
   13dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dcc:	cmp	r0, #0
   13dd0:	beq	13e48 <print_debug_data@@Base+0x2c0>
   13dd4:	ldr	r0, [fp, #-12]
   13dd8:	bl	1284c <coda_cursor_goto_attributes@plt>
   13ddc:	cmp	r0, #0
   13de0:	beq	13df0 <print_debug_data@@Base+0x268>
   13de4:	movw	r0, #43812	; 0xab24
   13de8:	movt	r0, #1
   13dec:	blx	r0
   13df0:	movw	r0, #55548	; 0xd8fc
   13df4:	movt	r0, #1
   13df8:	bl	14c90 <print_debug_data@@Base+0x1108>
   13dfc:	movw	r1, #436	; 0x1b4
   13e00:	movt	r1, #3
   13e04:	ldr	r2, [r1]
   13e08:	add	r2, r2, #1
   13e0c:	str	r2, [r1]
   13e10:	ldr	r1, [fp, #-12]
   13e14:	ldr	r2, [fp, #-16]
   13e18:	str	r0, [sp, #76]	; 0x4c
   13e1c:	mov	r0, r1
   13e20:	mov	r1, r2
   13e24:	bl	13d94 <print_debug_data@@Base+0x20c>
   13e28:	movw	r0, #436	; 0x1b4
   13e2c:	movt	r0, #3
   13e30:	ldr	r1, [r0]
   13e34:	mvn	r2, #0
   13e38:	add	r1, r1, r2
   13e3c:	str	r1, [r0]
   13e40:	ldr	r0, [fp, #-12]
   13e44:	bl	127b0 <coda_cursor_goto_parent@plt>
   13e48:	ldr	r0, [fp, #-12]
   13e4c:	sub	r1, fp, #20
   13e50:	bl	126e4 <coda_cursor_get_type_class@plt>
   13e54:	cmp	r0, #0
   13e58:	beq	13e68 <print_debug_data@@Base+0x2e0>
   13e5c:	movw	r0, #43812	; 0xab24
   13e60:	movt	r0, #1
   13e64:	blx	r0
   13e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e6c:	cmp	r0, #6
   13e70:	str	r0, [sp, #72]	; 0x48
   13e74:	bhi	14c88 <print_debug_data@@Base+0x1100>
   13e78:	add	r0, pc, #8
   13e7c:	ldr	r1, [sp, #72]	; 0x48
   13e80:	ldr	r0, [r0, r1, lsl #2]
   13e84:	mov	pc, r0
   13e88:	andeq	r3, r1, r4, lsr #29
   13e8c:	andeq	r4, r1, r4, lsr #5
   13e90:	ldrdeq	r4, [r1], -ip
   13e94:	ldrdeq	r4, [r1], -ip
   13e98:	ldrdeq	r4, [r1], -ip
   13e9c:	ldrdeq	r4, [r1], -ip
   13ea0:	muleq	r1, r4, sl
   13ea4:	ldr	r0, [fp, #-12]
   13ea8:	sub	r1, fp, #28
   13eac:	bl	1263c <coda_cursor_get_num_elements@plt>
   13eb0:	cmp	r0, #0
   13eb4:	beq	13ec4 <print_debug_data@@Base+0x33c>
   13eb8:	movw	r0, #43812	; 0xab24
   13ebc:	movt	r0, #1
   13ec0:	blx	r0
   13ec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ec8:	cmp	r0, #0
   13ecc:	ble	142a0 <print_debug_data@@Base+0x718>
   13ed0:	ldr	r0, [fp, #-12]
   13ed4:	sub	r1, fp, #32
   13ed8:	bl	1269c <coda_cursor_get_type@plt>
   13edc:	cmp	r0, #0
   13ee0:	beq	13ef0 <print_debug_data@@Base+0x368>
   13ee4:	movw	r0, #43812	; 0xab24
   13ee8:	movt	r0, #1
   13eec:	blx	r0
   13ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ef4:	sub	r1, fp, #36	; 0x24
   13ef8:	bl	12888 <coda_type_get_record_union_status@plt>
   13efc:	cmp	r0, #0
   13f00:	beq	13f10 <print_debug_data@@Base+0x388>
   13f04:	movw	r0, #43812	; 0xab24
   13f08:	movt	r0, #1
   13f0c:	blx	r0
   13f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f14:	cmp	r0, #0
   13f18:	beq	140c0 <print_debug_data@@Base+0x538>
   13f1c:	ldr	r0, [fp, #-12]
   13f20:	sub	r1, fp, #40	; 0x28
   13f24:	bl	12978 <coda_cursor_get_available_union_field_index@plt>
   13f28:	cmp	r0, #0
   13f2c:	beq	13f3c <print_debug_data@@Base+0x3b4>
   13f30:	movw	r0, #43812	; 0xab24
   13f34:	movt	r0, #1
   13f38:	blx	r0
   13f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f44:	sub	r2, fp, #44	; 0x2c
   13f48:	bl	129c0 <coda_type_get_record_field_name@plt>
   13f4c:	cmp	r0, #0
   13f50:	beq	13f60 <print_debug_data@@Base+0x3d8>
   13f54:	movw	r0, #43812	; 0xab24
   13f58:	movt	r0, #1
   13f5c:	blx	r0
   13f60:	ldr	r0, [fp, #-12]
   13f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f68:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   13f6c:	cmp	r0, #0
   13f70:	beq	13f80 <print_debug_data@@Base+0x3f8>
   13f74:	movw	r0, #43812	; 0xab24
   13f78:	movt	r0, #1
   13f7c:	blx	r0
   13f80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f84:	movw	r0, #57342	; 0xdffe
   13f88:	movt	r0, #1
   13f8c:	bl	14c90 <print_debug_data@@Base+0x1108>
   13f90:	movw	r1, #412	; 0x19c
   13f94:	movt	r1, #3
   13f98:	ldr	r1, [r1]
   13f9c:	cmp	r1, #0
   13fa0:	beq	14030 <print_debug_data@@Base+0x4a8>
   13fa4:	ldr	r0, [fp, #-12]
   13fa8:	sub	r1, fp, #56	; 0x38
   13fac:	bl	12990 <coda_cursor_get_file_bit_offset@plt>
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fc4 <print_debug_data@@Base+0x43c>
   13fb8:	movw	r0, #43812	; 0xab24
   13fbc:	movt	r0, #1
   13fc0:	blx	r0
   13fc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13fc8:	cmp	r0, #0
   13fcc:	bmi	1402c <print_debug_data@@Base+0x4a4>
   13fd0:	b	13fd4 <print_debug_data@@Base+0x44c>
   13fd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13fd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13fdc:	lsr	r0, r0, #3
   13fe0:	orr	r0, r0, r1, lsl #29
   13fe4:	asr	r1, r1, #3
   13fe8:	sub	r2, fp, #77	; 0x4d
   13fec:	str	r2, [sp, #68]	; 0x44
   13ff0:	bl	129e4 <coda_str64@plt>
   13ff4:	movw	r0, #55562	; 0xd90a
   13ff8:	movt	r0, #1
   13ffc:	ldr	r1, [sp, #68]	; 0x44
   14000:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14004:	ldrb	r1, [fp, #-56]	; 0xffffffc8
   14008:	tst	r1, #7
   1400c:	beq	14028 <print_debug_data@@Base+0x4a0>
   14010:	b	14014 <print_debug_data@@Base+0x48c>
   14014:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14018:	and	r1, r0, #7
   1401c:	movw	r0, #55566	; 0xd90e
   14020:	movt	r0, #1
   14024:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14028:	b	1402c <print_debug_data@@Base+0x4a4>
   1402c:	b	14030 <print_debug_data@@Base+0x4a8>
   14030:	movw	r0, #61913	; 0xf1d9
   14034:	movt	r0, #1
   14038:	bl	14cf8 <print_debug_data@@Base+0x1170>
   1403c:	movw	r1, #436	; 0x1b4
   14040:	movt	r1, #3
   14044:	ldr	r2, [r1]
   14048:	add	r2, r2, #1
   1404c:	str	r2, [r1]
   14050:	movw	r1, #416	; 0x1a0
   14054:	movt	r1, #3
   14058:	ldr	r1, [r1]
   1405c:	cmp	r1, #0
   14060:	blt	1407c <print_debug_data@@Base+0x4f4>
   14064:	ldr	r0, [fp, #-16]
   14068:	movw	r1, #416	; 0x1a0
   1406c:	movt	r1, #3
   14070:	ldr	r1, [r1]
   14074:	cmp	r0, r1
   14078:	bge	14090 <print_debug_data@@Base+0x508>
   1407c:	ldr	r0, [fp, #-12]
   14080:	ldr	r1, [fp, #-16]
   14084:	add	r1, r1, #1
   14088:	bl	13d94 <print_debug_data@@Base+0x20c>
   1408c:	b	1409c <print_debug_data@@Base+0x514>
   14090:	movw	r0, #55570	; 0xd912
   14094:	movt	r0, #1
   14098:	bl	14c90 <print_debug_data@@Base+0x1108>
   1409c:	movw	r0, #436	; 0x1b4
   140a0:	movt	r0, #3
   140a4:	ldr	r1, [r0]
   140a8:	mvn	r2, #0
   140ac:	add	r1, r1, r2
   140b0:	str	r1, [r0]
   140b4:	ldr	r0, [fp, #-12]
   140b8:	bl	127b0 <coda_cursor_goto_parent@plt>
   140bc:	b	1429c <print_debug_data@@Base+0x714>
   140c0:	ldr	r0, [fp, #-12]
   140c4:	bl	12750 <coda_cursor_goto_first_record_field@plt>
   140c8:	cmp	r0, #0
   140cc:	beq	140dc <print_debug_data@@Base+0x554>
   140d0:	movw	r0, #43812	; 0xab24
   140d4:	movt	r0, #1
   140d8:	blx	r0
   140dc:	movw	r0, #0
   140e0:	str	r0, [fp, #-40]	; 0xffffffd8
   140e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   140e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140ec:	cmp	r0, r1
   140f0:	bge	14294 <print_debug_data@@Base+0x70c>
   140f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   140fc:	sub	r2, fp, #84	; 0x54
   14100:	bl	129c0 <coda_type_get_record_field_name@plt>
   14104:	cmp	r0, #0
   14108:	beq	14118 <print_debug_data@@Base+0x590>
   1410c:	movw	r0, #43812	; 0xab24
   14110:	movt	r0, #1
   14114:	blx	r0
   14118:	ldr	r1, [fp, #-84]	; 0xffffffac
   1411c:	movw	r0, #57342	; 0xdffe
   14120:	movt	r0, #1
   14124:	bl	14c90 <print_debug_data@@Base+0x1108>
   14128:	movw	r1, #412	; 0x19c
   1412c:	movt	r1, #3
   14130:	ldr	r1, [r1]
   14134:	cmp	r1, #0
   14138:	beq	141c8 <print_debug_data@@Base+0x640>
   1413c:	ldr	r0, [fp, #-12]
   14140:	sub	r1, fp, #96	; 0x60
   14144:	bl	12990 <coda_cursor_get_file_bit_offset@plt>
   14148:	cmp	r0, #0
   1414c:	beq	1415c <print_debug_data@@Base+0x5d4>
   14150:	movw	r0, #43812	; 0xab24
   14154:	movt	r0, #1
   14158:	blx	r0
   1415c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14160:	cmp	r0, #0
   14164:	bmi	141c4 <print_debug_data@@Base+0x63c>
   14168:	b	1416c <print_debug_data@@Base+0x5e4>
   1416c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14170:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14174:	lsr	r0, r0, #3
   14178:	orr	r0, r0, r1, lsl #29
   1417c:	asr	r1, r1, #3
   14180:	sub	r2, fp, #117	; 0x75
   14184:	str	r2, [sp, #64]	; 0x40
   14188:	bl	129e4 <coda_str64@plt>
   1418c:	movw	r0, #55562	; 0xd90a
   14190:	movt	r0, #1
   14194:	ldr	r1, [sp, #64]	; 0x40
   14198:	bl	14cf8 <print_debug_data@@Base+0x1170>
   1419c:	ldrb	r1, [fp, #-96]	; 0xffffffa0
   141a0:	tst	r1, #7
   141a4:	beq	141c0 <print_debug_data@@Base+0x638>
   141a8:	b	141ac <print_debug_data@@Base+0x624>
   141ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   141b0:	and	r1, r0, #7
   141b4:	movw	r0, #55566	; 0xd90e
   141b8:	movt	r0, #1
   141bc:	bl	14cf8 <print_debug_data@@Base+0x1170>
   141c0:	b	141c4 <print_debug_data@@Base+0x63c>
   141c4:	b	141c8 <print_debug_data@@Base+0x640>
   141c8:	movw	r0, #61913	; 0xf1d9
   141cc:	movt	r0, #1
   141d0:	bl	14cf8 <print_debug_data@@Base+0x1170>
   141d4:	movw	r1, #436	; 0x1b4
   141d8:	movt	r1, #3
   141dc:	ldr	r2, [r1]
   141e0:	add	r2, r2, #1
   141e4:	str	r2, [r1]
   141e8:	movw	r1, #416	; 0x1a0
   141ec:	movt	r1, #3
   141f0:	ldr	r1, [r1]
   141f4:	cmp	r1, #0
   141f8:	blt	14214 <print_debug_data@@Base+0x68c>
   141fc:	ldr	r0, [fp, #-16]
   14200:	movw	r1, #416	; 0x1a0
   14204:	movt	r1, #3
   14208:	ldr	r1, [r1]
   1420c:	cmp	r0, r1
   14210:	bge	14228 <print_debug_data@@Base+0x6a0>
   14214:	ldr	r0, [fp, #-12]
   14218:	ldr	r1, [fp, #-16]
   1421c:	add	r1, r1, #1
   14220:	bl	13d94 <print_debug_data@@Base+0x20c>
   14224:	b	14234 <print_debug_data@@Base+0x6ac>
   14228:	movw	r0, #55570	; 0xd912
   1422c:	movt	r0, #1
   14230:	bl	14c90 <print_debug_data@@Base+0x1108>
   14234:	movw	r0, #436	; 0x1b4
   14238:	movt	r0, #3
   1423c:	ldr	r1, [r0]
   14240:	mvn	r2, #0
   14244:	add	r1, r1, r2
   14248:	str	r1, [r0]
   1424c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14250:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14254:	sub	r1, r1, #1
   14258:	cmp	r0, r1
   1425c:	bge	14280 <print_debug_data@@Base+0x6f8>
   14260:	ldr	r0, [fp, #-12]
   14264:	bl	12930 <coda_cursor_goto_next_record_field@plt>
   14268:	cmp	r0, #0
   1426c:	beq	1427c <print_debug_data@@Base+0x6f4>
   14270:	movw	r0, #43812	; 0xab24
   14274:	movt	r0, #1
   14278:	blx	r0
   1427c:	b	14280 <print_debug_data@@Base+0x6f8>
   14280:	b	14284 <print_debug_data@@Base+0x6fc>
   14284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14288:	add	r0, r0, #1
   1428c:	str	r0, [fp, #-40]	; 0xffffffd8
   14290:	b	140e4 <print_debug_data@@Base+0x55c>
   14294:	ldr	r0, [fp, #-12]
   14298:	bl	127b0 <coda_cursor_goto_parent@plt>
   1429c:	b	142a0 <print_debug_data@@Base+0x718>
   142a0:	b	14c88 <print_debug_data@@Base+0x1100>
   142a4:	sub	r2, fp, #152	; 0x98
   142a8:	ldr	r0, [fp, #-12]
   142ac:	sub	r1, fp, #156	; 0x9c
   142b0:	bl	128d0 <coda_cursor_get_array_dim@plt>
   142b4:	cmp	r0, #0
   142b8:	beq	142c8 <print_debug_data@@Base+0x740>
   142bc:	movw	r0, #43812	; 0xab24
   142c0:	movt	r0, #1
   142c4:	blx	r0
   142c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   142cc:	cmp	r0, #0
   142d0:	blt	145d8 <print_debug_data@@Base+0xa50>
   142d4:	movw	r0, #1
   142d8:	str	r0, [fp, #-160]	; 0xffffff60
   142dc:	movw	r0, #0
   142e0:	str	r0, [fp, #-196]	; 0xffffff3c
   142e4:	ldr	r0, [fp, #-196]	; 0xffffff3c
   142e8:	ldr	r1, [fp, #-156]	; 0xffffff64
   142ec:	cmp	r0, r1
   142f0:	bge	14330 <print_debug_data@@Base+0x7a8>
   142f4:	ldr	r0, [fp, #-196]	; 0xffffff3c
   142f8:	sub	r1, fp, #152	; 0x98
   142fc:	ldr	r0, [r1, r0, lsl #2]
   14300:	ldr	r1, [fp, #-160]	; 0xffffff60
   14304:	mul	r0, r1, r0
   14308:	str	r0, [fp, #-160]	; 0xffffff60
   1430c:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14310:	sub	r1, fp, #192	; 0xc0
   14314:	add	r0, r1, r0, lsl #2
   14318:	movw	r1, #0
   1431c:	str	r1, [r0]
   14320:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14324:	add	r0, r0, #1
   14328:	str	r0, [fp, #-196]	; 0xffffff3c
   1432c:	b	142e4 <print_debug_data@@Base+0x75c>
   14330:	ldr	r0, [fp, #-160]	; 0xffffff60
   14334:	cmp	r0, #0
   14338:	ble	145d4 <print_debug_data@@Base+0xa4c>
   1433c:	ldr	r0, [fp, #-12]
   14340:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   14344:	cmp	r0, #0
   14348:	beq	14358 <print_debug_data@@Base+0x7d0>
   1434c:	movw	r0, #43812	; 0xab24
   14350:	movt	r0, #1
   14354:	blx	r0
   14358:	movw	r0, #0
   1435c:	str	r0, [fp, #-196]	; 0xffffff3c
   14360:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14364:	ldr	r1, [fp, #-160]	; 0xffffff60
   14368:	cmp	r0, r1
   1436c:	bge	145cc <print_debug_data@@Base+0xa44>
   14370:	movw	r0, #56004	; 0xdac4
   14374:	movt	r0, #1
   14378:	bl	14c90 <print_debug_data@@Base+0x1108>
   1437c:	movw	r1, #0
   14380:	str	r1, [fp, #-200]	; 0xffffff38
   14384:	ldr	r0, [fp, #-200]	; 0xffffff38
   14388:	ldr	r1, [fp, #-156]	; 0xffffff64
   1438c:	cmp	r0, r1
   14390:	bge	143e4 <print_debug_data@@Base+0x85c>
   14394:	ldr	r0, [fp, #-200]	; 0xffffff38
   14398:	sub	r1, fp, #192	; 0xc0
   1439c:	add	r0, r1, r0, lsl #2
   143a0:	ldr	r1, [r0]
   143a4:	movw	r0, #55567	; 0xd90f
   143a8:	movt	r0, #1
   143ac:	bl	14cf8 <print_debug_data@@Base+0x1170>
   143b0:	ldr	r1, [fp, #-200]	; 0xffffff38
   143b4:	ldr	r2, [fp, #-156]	; 0xffffff64
   143b8:	sub	r2, r2, #1
   143bc:	cmp	r1, r2
   143c0:	bge	143d0 <print_debug_data@@Base+0x848>
   143c4:	movw	r0, #55992	; 0xdab8
   143c8:	movt	r0, #1
   143cc:	bl	14cf8 <print_debug_data@@Base+0x1170>
   143d0:	b	143d4 <print_debug_data@@Base+0x84c>
   143d4:	ldr	r0, [fp, #-200]	; 0xffffff38
   143d8:	add	r0, r0, #1
   143dc:	str	r0, [fp, #-200]	; 0xffffff38
   143e0:	b	14384 <print_debug_data@@Base+0x7fc>
   143e4:	movw	r0, #57227	; 0xdf8b
   143e8:	movt	r0, #1
   143ec:	bl	14cf8 <print_debug_data@@Base+0x1170>
   143f0:	movw	r1, #412	; 0x19c
   143f4:	movt	r1, #3
   143f8:	ldr	r1, [r1]
   143fc:	cmp	r1, #0
   14400:	beq	14490 <print_debug_data@@Base+0x908>
   14404:	ldr	r0, [fp, #-12]
   14408:	sub	r1, fp, #208	; 0xd0
   1440c:	bl	12990 <coda_cursor_get_file_bit_offset@plt>
   14410:	cmp	r0, #0
   14414:	beq	14424 <print_debug_data@@Base+0x89c>
   14418:	movw	r0, #43812	; 0xab24
   1441c:	movt	r0, #1
   14420:	blx	r0
   14424:	ldr	r0, [fp, #-204]	; 0xffffff34
   14428:	cmp	r0, #0
   1442c:	bmi	1448c <print_debug_data@@Base+0x904>
   14430:	b	14434 <print_debug_data@@Base+0x8ac>
   14434:	ldr	r0, [fp, #-208]	; 0xffffff30
   14438:	ldr	r1, [fp, #-204]	; 0xffffff34
   1443c:	lsr	r0, r0, #3
   14440:	orr	r0, r0, r1, lsl #29
   14444:	asr	r1, r1, #3
   14448:	sub	r2, fp, #229	; 0xe5
   1444c:	str	r2, [sp, #60]	; 0x3c
   14450:	bl	129e4 <coda_str64@plt>
   14454:	movw	r0, #55562	; 0xd90a
   14458:	movt	r0, #1
   1445c:	ldr	r1, [sp, #60]	; 0x3c
   14460:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14464:	ldrb	r1, [fp, #-208]	; 0xffffff30
   14468:	tst	r1, #7
   1446c:	beq	14488 <print_debug_data@@Base+0x900>
   14470:	b	14474 <print_debug_data@@Base+0x8ec>
   14474:	ldr	r0, [fp, #-208]	; 0xffffff30
   14478:	and	r1, r0, #7
   1447c:	movw	r0, #55566	; 0xd90e
   14480:	movt	r0, #1
   14484:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14488:	b	1448c <print_debug_data@@Base+0x904>
   1448c:	b	14490 <print_debug_data@@Base+0x908>
   14490:	movw	r0, #61913	; 0xf1d9
   14494:	movt	r0, #1
   14498:	bl	14cf8 <print_debug_data@@Base+0x1170>
   1449c:	movw	r1, #436	; 0x1b4
   144a0:	movt	r1, #3
   144a4:	ldr	r2, [r1]
   144a8:	add	r2, r2, #1
   144ac:	str	r2, [r1]
   144b0:	movw	r1, #416	; 0x1a0
   144b4:	movt	r1, #3
   144b8:	ldr	r1, [r1]
   144bc:	cmp	r1, #0
   144c0:	blt	144dc <print_debug_data@@Base+0x954>
   144c4:	ldr	r0, [fp, #-16]
   144c8:	movw	r1, #416	; 0x1a0
   144cc:	movt	r1, #3
   144d0:	ldr	r1, [r1]
   144d4:	cmp	r0, r1
   144d8:	bge	144f0 <print_debug_data@@Base+0x968>
   144dc:	ldr	r0, [fp, #-12]
   144e0:	ldr	r1, [fp, #-16]
   144e4:	add	r1, r1, #1
   144e8:	bl	13d94 <print_debug_data@@Base+0x20c>
   144ec:	b	144fc <print_debug_data@@Base+0x974>
   144f0:	movw	r0, #55570	; 0xd912
   144f4:	movt	r0, #1
   144f8:	bl	14c90 <print_debug_data@@Base+0x1108>
   144fc:	movw	r0, #436	; 0x1b4
   14500:	movt	r0, #3
   14504:	ldr	r1, [r0]
   14508:	mvn	r2, #0
   1450c:	add	r1, r1, r2
   14510:	str	r1, [r0]
   14514:	ldr	r0, [fp, #-156]	; 0xffffff64
   14518:	sub	r0, r0, #1
   1451c:	str	r0, [fp, #-200]	; 0xffffff38
   14520:	ldr	r0, [fp, #-200]	; 0xffffff38
   14524:	cmp	r0, #0
   14528:	blt	14584 <print_debug_data@@Base+0x9fc>
   1452c:	ldr	r0, [fp, #-200]	; 0xffffff38
   14530:	sub	r1, fp, #192	; 0xc0
   14534:	ldr	r2, [r1, r0, lsl #2]
   14538:	add	r2, r2, #1
   1453c:	str	r2, [r1, r0, lsl #2]
   14540:	ldr	r0, [fp, #-200]	; 0xffffff38
   14544:	ldr	r1, [r1, r0, lsl #2]
   14548:	sub	r2, fp, #152	; 0x98
   1454c:	add	r0, r2, r0, lsl #2
   14550:	ldr	r0, [r0]
   14554:	cmp	r1, r0
   14558:	bne	1457c <print_debug_data@@Base+0x9f4>
   1455c:	ldr	r0, [fp, #-200]	; 0xffffff38
   14560:	sub	r1, r0, #1
   14564:	str	r1, [fp, #-200]	; 0xffffff38
   14568:	sub	r1, fp, #192	; 0xc0
   1456c:	add	r0, r1, r0, lsl #2
   14570:	movw	r1, #0
   14574:	str	r1, [r0]
   14578:	b	14580 <print_debug_data@@Base+0x9f8>
   1457c:	b	14584 <print_debug_data@@Base+0x9fc>
   14580:	b	14520 <print_debug_data@@Base+0x998>
   14584:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14588:	ldr	r1, [fp, #-160]	; 0xffffff60
   1458c:	sub	r1, r1, #1
   14590:	cmp	r0, r1
   14594:	bge	145b8 <print_debug_data@@Base+0xa30>
   14598:	ldr	r0, [fp, #-12]
   1459c:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   145a0:	cmp	r0, #0
   145a4:	beq	145b4 <print_debug_data@@Base+0xa2c>
   145a8:	movw	r0, #43812	; 0xab24
   145ac:	movt	r0, #1
   145b0:	blx	r0
   145b4:	b	145b8 <print_debug_data@@Base+0xa30>
   145b8:	b	145bc <print_debug_data@@Base+0xa34>
   145bc:	ldr	r0, [fp, #-196]	; 0xffffff3c
   145c0:	add	r0, r0, #1
   145c4:	str	r0, [fp, #-196]	; 0xffffff3c
   145c8:	b	14360 <print_debug_data@@Base+0x7d8>
   145cc:	ldr	r0, [fp, #-12]
   145d0:	bl	127b0 <coda_cursor_goto_parent@plt>
   145d4:	b	145d8 <print_debug_data@@Base+0xa50>
   145d8:	b	14c88 <print_debug_data@@Base+0x1100>
   145dc:	ldr	r0, [fp, #-12]
   145e0:	sub	r1, fp, #240	; 0xf0
   145e4:	bl	128dc <coda_cursor_has_ascii_content@plt>
   145e8:	cmp	r0, #0
   145ec:	beq	145fc <print_debug_data@@Base+0xa74>
   145f0:	movw	r0, #43812	; 0xab24
   145f4:	movt	r0, #1
   145f8:	blx	r0
   145fc:	ldr	r0, [fp, #-240]	; 0xffffff10
   14600:	cmp	r0, #0
   14604:	beq	146e8 <print_debug_data@@Base+0xb60>
   14608:	ldr	r0, [fp, #-12]
   1460c:	sub	r1, fp, #244	; 0xf4
   14610:	bl	127e0 <coda_cursor_get_string_length@plt>
   14614:	cmp	r0, #0
   14618:	beq	14628 <print_debug_data@@Base+0xaa0>
   1461c:	movw	r0, #43812	; 0xab24
   14620:	movt	r0, #1
   14624:	blx	r0
   14628:	ldr	r0, [fp, #-244]	; 0xffffff0c
   1462c:	add	r0, r0, #1
   14630:	bl	12780 <malloc@plt>
   14634:	str	r0, [fp, #-248]	; 0xffffff08
   14638:	ldr	r0, [fp, #-248]	; 0xffffff08
   1463c:	movw	r1, #0
   14640:	cmp	r0, r1
   14644:	bne	1467c <print_debug_data@@Base+0xaf4>
   14648:	ldr	r0, [fp, #-244]	; 0xffffff0c
   1464c:	add	r2, r0, #1
   14650:	mvn	r0, #0
   14654:	movw	r1, #55264	; 0xd7e0
   14658:	movt	r1, #1
   1465c:	movw	r3, #55575	; 0xd917
   14660:	movt	r3, #1
   14664:	movw	ip, #410	; 0x19a
   14668:	str	ip, [sp]
   1466c:	bl	1260c <coda_set_error@plt>
   14670:	movw	r0, #43812	; 0xab24
   14674:	movt	r0, #1
   14678:	blx	r0
   1467c:	ldr	r0, [fp, #-12]
   14680:	ldr	r1, [fp, #-248]	; 0xffffff08
   14684:	ldr	r2, [fp, #-244]	; 0xffffff0c
   14688:	add	r2, r2, #1
   1468c:	bl	127a4 <coda_cursor_read_string@plt>
   14690:	cmp	r0, #0
   14694:	beq	146a4 <print_debug_data@@Base+0xb1c>
   14698:	movw	r0, #43812	; 0xab24
   1469c:	movt	r0, #1
   146a0:	blx	r0
   146a4:	movw	r0, #57078	; 0xdef6
   146a8:	movt	r0, #1
   146ac:	bl	14c90 <print_debug_data@@Base+0x1108>
   146b0:	ldr	r1, [fp, #-248]	; 0xffffff08
   146b4:	ldr	r2, [fp, #-244]	; 0xffffff0c
   146b8:	str	r0, [sp, #56]	; 0x38
   146bc:	mov	r0, r1
   146c0:	mov	r1, r2
   146c4:	bl	14d5c <print_debug_data@@Base+0x11d4>
   146c8:	ldr	r1, [fp, #-244]	; 0xffffff0c
   146cc:	movw	r0, #55659	; 0xd96b
   146d0:	movt	r0, #1
   146d4:	bl	14cf8 <print_debug_data@@Base+0x1170>
   146d8:	ldr	r1, [fp, #-248]	; 0xffffff08
   146dc:	str	r0, [sp, #52]	; 0x34
   146e0:	mov	r0, r1
   146e4:	bl	12654 <free@plt>
   146e8:	ldr	r0, [fp, #-12]
   146ec:	sub	r1, fp, #236	; 0xec
   146f0:	bl	12774 <coda_cursor_get_read_type@plt>
   146f4:	cmp	r0, #0
   146f8:	beq	14708 <print_debug_data@@Base+0xb80>
   146fc:	movw	r0, #43812	; 0xab24
   14700:	movt	r0, #1
   14704:	blx	r0
   14708:	ldr	r0, [fp, #-236]	; 0xffffff14
   1470c:	add	r0, r0, #1
   14710:	cmp	r0, #13
   14714:	str	r0, [sp, #48]	; 0x30
   14718:	bhi	14a90 <print_debug_data@@Base+0xf08>
   1471c:	add	r0, pc, #8
   14720:	ldr	r1, [sp, #48]	; 0x30
   14724:	ldr	r0, [r0, r1, lsl #2]
   14728:	mov	pc, r0
   1472c:	andeq	r4, r1, ip, asr sl
   14730:	andeq	r4, r1, r0, lsl #18
   14734:	andeq	r4, r1, r4, lsr r9
   14738:	andeq	r4, r1, r0, lsl #18
   1473c:	andeq	r4, r1, r4, lsr r9
   14740:	andeq	r4, r1, r0, lsl #18
   14744:	andeq	r4, r1, r4, lsr r9
   14748:	andeq	r4, r1, r8, ror #18
   1474c:			; <UNDEFINED> instruction: 0x000149b4
   14750:	andeq	r4, r1, r0, lsl #20
   14754:	andeq	r4, r1, r0, lsl #20
   14758:	andeq	r4, r1, ip, asr sl
   1475c:	andeq	r4, r1, ip, asr sl
   14760:	andeq	r4, r1, r4, ror #14
   14764:	ldr	r0, [fp, #-12]
   14768:	sub	r1, fp, #256	; 0x100
   1476c:	bl	12948 <coda_cursor_get_bit_size@plt>
   14770:	cmp	r0, #0
   14774:	beq	14784 <print_debug_data@@Base+0xbfc>
   14778:	movw	r0, #43812	; 0xab24
   1477c:	movt	r0, #1
   14780:	blx	r0
   14784:	ldr	r0, [fp, #-256]	; 0xffffff00
   14788:	ldr	r1, [fp, #-252]	; 0xffffff04
   1478c:	lsr	r2, r0, #3
   14790:	orr	r2, r2, r1, lsl #29
   14794:	asr	r1, r1, #3
   14798:	and	r0, r0, #7
   1479c:	adds	r3, r2, #1
   147a0:	adc	ip, r1, #0
   147a4:	cmp	r0, #0
   147a8:	movne	r2, r3
   147ac:	cmp	r0, #0
   147b0:	movne	r1, ip
   147b4:	str	r2, [fp, #-264]	; 0xfffffef8
   147b8:	str	r1, [fp, #-260]	; 0xfffffefc
   147bc:	ldr	r0, [fp, #-264]	; 0xfffffef8
   147c0:	bl	12780 <malloc@plt>
   147c4:	str	r0, [fp, #-268]	; 0xfffffef4
   147c8:	ldr	r0, [fp, #-268]	; 0xfffffef4
   147cc:	movw	r1, #0
   147d0:	cmp	r0, r1
   147d4:	bne	14808 <print_debug_data@@Base+0xc80>
   147d8:	ldr	r2, [fp, #-264]	; 0xfffffef8
   147dc:	mvn	r0, #0
   147e0:	movw	r1, #55264	; 0xd7e0
   147e4:	movt	r1, #1
   147e8:	movw	r3, #55575	; 0xd917
   147ec:	movt	r3, #1
   147f0:	movw	ip, #447	; 0x1bf
   147f4:	str	ip, [sp]
   147f8:	bl	1260c <coda_set_error@plt>
   147fc:	movw	r0, #43812	; 0xab24
   14800:	movt	r0, #1
   14804:	blx	r0
   14808:	ldr	r0, [fp, #-12]
   1480c:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14810:	ldr	r2, [fp, #-256]	; 0xffffff00
   14814:	ldr	r3, [fp, #-252]	; 0xffffff04
   14818:	mov	ip, sp
   1481c:	str	r3, [ip, #4]
   14820:	str	r2, [ip]
   14824:	mov	r2, #0
   14828:	str	r2, [sp, #44]	; 0x2c
   1482c:	ldr	r3, [sp, #44]	; 0x2c
   14830:	bl	129d8 <coda_cursor_read_bits@plt>
   14834:	cmp	r0, #0
   14838:	beq	14848 <print_debug_data@@Base+0xcc0>
   1483c:	movw	r0, #43812	; 0xab24
   14840:	movt	r0, #1
   14844:	blx	r0
   14848:	movw	r0, #57078	; 0xdef6
   1484c:	movt	r0, #1
   14850:	bl	14c90 <print_debug_data@@Base+0x1108>
   14854:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14858:	ldr	r2, [fp, #-264]	; 0xfffffef8
   1485c:	str	r0, [sp, #40]	; 0x28
   14860:	mov	r0, r1
   14864:	mov	r1, r2
   14868:	bl	14d5c <print_debug_data@@Base+0x11d4>
   1486c:	movw	r0, #55675	; 0xd97b
   14870:	movt	r0, #1
   14874:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14878:	ldr	r1, [fp, #-256]	; 0xffffff00
   1487c:	ldr	r2, [fp, #-252]	; 0xffffff04
   14880:	lsr	r1, r1, #3
   14884:	orr	r1, r1, r2, lsl #29
   14888:	asr	r2, r2, #3
   1488c:	sub	lr, fp, #256	; 0x100
   14890:	sub	r3, lr, #33	; 0x21
   14894:	str	r0, [sp, #36]	; 0x24
   14898:	mov	r0, r1
   1489c:	mov	r1, r2
   148a0:	mov	r2, r3
   148a4:	str	r3, [sp, #32]
   148a8:	bl	129e4 <coda_str64@plt>
   148ac:	movw	r0, #57282	; 0xdfc2
   148b0:	movt	r0, #1
   148b4:	ldr	r1, [sp, #32]
   148b8:	bl	14cf8 <print_debug_data@@Base+0x1170>
   148bc:	ldrb	r1, [fp, #-256]	; 0xffffff00
   148c0:	tst	r1, #7
   148c4:	beq	148e0 <print_debug_data@@Base+0xd58>
   148c8:	b	148cc <print_debug_data@@Base+0xd44>
   148cc:	ldr	r0, [fp, #-256]	; 0xffffff00
   148d0:	and	r1, r0, #7
   148d4:	movw	r0, #55566	; 0xd90e
   148d8:	movt	r0, #1
   148dc:	bl	14cf8 <print_debug_data@@Base+0x1170>
   148e0:	movw	r0, #59265	; 0xe781
   148e4:	movt	r0, #1
   148e8:	bl	14cf8 <print_debug_data@@Base+0x1170>
   148ec:	ldr	r1, [fp, #-268]	; 0xfffffef4
   148f0:	str	r0, [sp, #28]
   148f4:	mov	r0, r1
   148f8:	bl	12654 <free@plt>
   148fc:	b	14a90 <print_debug_data@@Base+0xf08>
   14900:	ldr	r0, [fp, #-12]
   14904:	sub	r1, fp, #296	; 0x128
   14908:	bl	12984 <coda_cursor_read_int32@plt>
   1490c:	cmp	r0, #0
   14910:	beq	14920 <print_debug_data@@Base+0xd98>
   14914:	movw	r0, #43812	; 0xab24
   14918:	movt	r0, #1
   1491c:	blx	r0
   14920:	ldr	r1, [fp, #-296]	; 0xfffffed8
   14924:	movw	r0, #55684	; 0xd984
   14928:	movt	r0, #1
   1492c:	bl	14c90 <print_debug_data@@Base+0x1108>
   14930:	b	14a90 <print_debug_data@@Base+0xf08>
   14934:	ldr	r0, [fp, #-12]
   14938:	sub	r1, fp, #300	; 0x12c
   1493c:	bl	12678 <coda_cursor_read_uint32@plt>
   14940:	cmp	r0, #0
   14944:	beq	14954 <print_debug_data@@Base+0xdcc>
   14948:	movw	r0, #43812	; 0xab24
   1494c:	movt	r0, #1
   14950:	blx	r0
   14954:	ldr	r1, [fp, #-300]	; 0xfffffed4
   14958:	movw	r0, #55689	; 0xd989
   1495c:	movt	r0, #1
   14960:	bl	14c90 <print_debug_data@@Base+0x1108>
   14964:	b	14a90 <print_debug_data@@Base+0xf08>
   14968:	ldr	r0, [fp, #-12]
   1496c:	sub	r1, fp, #312	; 0x138
   14970:	bl	128f4 <coda_cursor_read_int64@plt>
   14974:	cmp	r0, #0
   14978:	beq	14988 <print_debug_data@@Base+0xe00>
   1497c:	movw	r0, #43812	; 0xab24
   14980:	movt	r0, #1
   14984:	blx	r0
   14988:	sub	lr, fp, #256	; 0x100
   1498c:	sub	r2, lr, #77	; 0x4d
   14990:	ldr	r0, [fp, #-312]	; 0xfffffec8
   14994:	ldr	r1, [fp, #-308]	; 0xfffffecc
   14998:	bl	129e4 <coda_str64@plt>
   1499c:	sub	lr, fp, #256	; 0x100
   149a0:	sub	r1, lr, #77	; 0x4d
   149a4:	movw	r0, #57479	; 0xe087
   149a8:	movt	r0, #1
   149ac:	bl	14c90 <print_debug_data@@Base+0x1108>
   149b0:	b	14a90 <print_debug_data@@Base+0xf08>
   149b4:	ldr	r0, [fp, #-12]
   149b8:	sub	r1, fp, #344	; 0x158
   149bc:	bl	127ec <coda_cursor_read_uint64@plt>
   149c0:	cmp	r0, #0
   149c4:	beq	149d4 <print_debug_data@@Base+0xe4c>
   149c8:	movw	r0, #43812	; 0xab24
   149cc:	movt	r0, #1
   149d0:	blx	r0
   149d4:	sub	lr, fp, #256	; 0x100
   149d8:	sub	r2, lr, #109	; 0x6d
   149dc:	ldr	r0, [fp, #-344]	; 0xfffffea8
   149e0:	ldr	r1, [fp, #-340]	; 0xfffffeac
   149e4:	bl	12648 <coda_str64u@plt>
   149e8:	sub	lr, fp, #256	; 0x100
   149ec:	sub	r1, lr, #109	; 0x6d
   149f0:	movw	r0, #57479	; 0xe087
   149f4:	movt	r0, #1
   149f8:	bl	14c90 <print_debug_data@@Base+0x1108>
   149fc:	b	14a90 <print_debug_data@@Base+0xf08>
   14a00:	ldr	r0, [fp, #-12]
   14a04:	sub	r1, fp, #376	; 0x178
   14a08:	bl	127f8 <coda_cursor_read_double@plt>
   14a0c:	cmp	r0, #0
   14a10:	beq	14a20 <print_debug_data@@Base+0xe98>
   14a14:	movw	r0, #43812	; 0xab24
   14a18:	movt	r0, #1
   14a1c:	blx	r0
   14a20:	ldr	r0, [fp, #-236]	; 0xffffff14
   14a24:	cmp	r0, #8
   14a28:	bne	14a44 <print_debug_data@@Base+0xebc>
   14a2c:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14a30:	movw	r0, #55694	; 0xd98e
   14a34:	movt	r0, #1
   14a38:	vmov	r2, r3, d16
   14a3c:	bl	14c90 <print_debug_data@@Base+0x1108>
   14a40:	b	14a58 <print_debug_data@@Base+0xed0>
   14a44:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14a48:	movw	r0, #55760	; 0xd9d0
   14a4c:	movt	r0, #1
   14a50:	vmov	r2, r3, d16
   14a54:	bl	14c90 <print_debug_data@@Base+0x1108>
   14a58:	b	14a90 <print_debug_data@@Base+0xf08>
   14a5c:	ldr	r0, [fp, #-240]	; 0xffffff10
   14a60:	cmp	r0, #0
   14a64:	beq	14a6c <print_debug_data@@Base+0xee4>
   14a68:	b	14a8c <print_debug_data@@Base+0xf04>
   14a6c:	movw	r0, #55700	; 0xd994
   14a70:	movt	r0, #1
   14a74:	movw	r1, #55575	; 0xd917
   14a78:	movt	r1, #1
   14a7c:	movw	r2, #548	; 0x224
   14a80:	movw	r3, #55718	; 0xd9a6
   14a84:	movt	r3, #1
   14a88:	bl	129f0 <__assert_fail@plt>
   14a8c:	b	14a90 <print_debug_data@@Base+0xf08>
   14a90:	b	14c88 <print_debug_data@@Base+0x1100>
   14a94:	ldr	r0, [fp, #-12]
   14a98:	sub	r1, fp, #380	; 0x17c
   14a9c:	bl	12720 <coda_cursor_get_special_type@plt>
   14aa0:	cmp	r0, #0
   14aa4:	beq	14ab4 <print_debug_data@@Base+0xf2c>
   14aa8:	movw	r0, #43812	; 0xab24
   14aac:	movt	r0, #1
   14ab0:	blx	r0
   14ab4:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14ab8:	cmp	r0, #0
   14abc:	beq	14b10 <print_debug_data@@Base+0xf88>
   14ac0:	ldr	r0, [fp, #-12]
   14ac4:	add	r1, sp, #144	; 0x90
   14ac8:	mov	r2, r1
   14acc:	str	r0, [sp, #24]
   14ad0:	mov	r0, r2
   14ad4:	ldr	r2, [sp, #24]
   14ad8:	str	r1, [sp, #20]
   14adc:	mov	r1, r2
   14ae0:	movw	r2, #520	; 0x208
   14ae4:	bl	126a8 <memcpy@plt>
   14ae8:	ldr	r0, [sp, #20]
   14aec:	bl	1296c <coda_cursor_use_base_type_of_special_type@plt>
   14af0:	cmp	r0, #0
   14af4:	beq	14b04 <print_debug_data@@Base+0xf7c>
   14af8:	movw	r0, #43812	; 0xab24
   14afc:	movt	r0, #1
   14b00:	blx	r0
   14b04:	ldr	r1, [fp, #-16]
   14b08:	add	r0, sp, #144	; 0x90
   14b0c:	bl	13d94 <print_debug_data@@Base+0x20c>
   14b10:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14b14:	bl	12594 <coda_type_get_special_type_name@plt>
   14b18:	movw	r1, #55754	; 0xd9ca
   14b1c:	movt	r1, #1
   14b20:	str	r0, [sp, #16]
   14b24:	mov	r0, r1
   14b28:	ldr	r1, [sp, #16]
   14b2c:	bl	14c90 <print_debug_data@@Base+0x1108>
   14b30:	ldr	r1, [fp, #-380]	; 0xfffffe84
   14b34:	cmp	r1, #3
   14b38:	str	r1, [sp, #12]
   14b3c:	bhi	14c84 <print_debug_data@@Base+0x10fc>
   14b40:	add	r0, pc, #8
   14b44:	ldr	r1, [sp, #12]
   14b48:	ldr	r0, [r0, r1, lsl #2]
   14b4c:	mov	pc, r0
   14b50:	andeq	r4, r1, r0, ror #22
   14b54:	andeq	r4, r1, r0, ror fp
   14b58:	andeq	r4, r1, r8, lsr #23
   14b5c:	andeq	r4, r1, r4, asr #24
   14b60:	movw	r0, #61913	; 0xf1d9
   14b64:	movt	r0, #1
   14b68:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14b6c:	b	14c84 <print_debug_data@@Base+0x10fc>
   14b70:	ldr	r0, [fp, #-12]
   14b74:	add	r1, sp, #136	; 0x88
   14b78:	bl	127f8 <coda_cursor_read_double@plt>
   14b7c:	cmp	r0, #0
   14b80:	beq	14b90 <print_debug_data@@Base+0x1008>
   14b84:	movw	r0, #43812	; 0xab24
   14b88:	movt	r0, #1
   14b8c:	blx	r0
   14b90:	vldr	d16, [sp, #136]	; 0x88
   14b94:	movw	r0, #55760	; 0xd9d0
   14b98:	movt	r0, #1
   14b9c:	vmov	r2, r3, d16
   14ba0:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14ba4:	b	14c84 <print_debug_data@@Base+0x10fc>
   14ba8:	ldr	r0, [fp, #-12]
   14bac:	add	r1, sp, #128	; 0x80
   14bb0:	bl	127f8 <coda_cursor_read_double@plt>
   14bb4:	cmp	r0, #0
   14bb8:	beq	14bc8 <print_debug_data@@Base+0x1040>
   14bbc:	movw	r0, #43812	; 0xab24
   14bc0:	movt	r0, #1
   14bc4:	blx	r0
   14bc8:	vldr	d0, [sp, #128]	; 0x80
   14bcc:	bl	12804 <coda_isNaN@plt>
   14bd0:	cmp	r0, #0
   14bd4:	bne	14be8 <print_debug_data@@Base+0x1060>
   14bd8:	vldr	d0, [sp, #128]	; 0x80
   14bdc:	bl	126b4 <coda_isInf@plt>
   14be0:	cmp	r0, #0
   14be4:	beq	14c00 <print_debug_data@@Base+0x1078>
   14be8:	vldr	d16, [sp, #128]	; 0x80
   14bec:	movw	r0, #55759	; 0xd9cf
   14bf0:	movt	r0, #1
   14bf4:	vmov	r2, r3, d16
   14bf8:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14bfc:	b	14c40 <print_debug_data@@Base+0x10b8>
   14c00:	add	r1, sp, #101	; 0x65
   14c04:	vldr	d0, [sp, #128]	; 0x80
   14c08:	movw	r0, #55508	; 0xd8d4
   14c0c:	movt	r0, #1
   14c10:	bl	12630 <coda_time_double_to_string@plt>
   14c14:	cmp	r0, #0
   14c18:	beq	14c2c <print_debug_data@@Base+0x10a4>
   14c1c:	movw	r0, #55767	; 0xd9d7
   14c20:	movt	r0, #1
   14c24:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14c28:	b	14c3c <print_debug_data@@Base+0x10b4>
   14c2c:	add	r1, sp, #101	; 0x65
   14c30:	movw	r0, #57478	; 0xe086
   14c34:	movt	r0, #1
   14c38:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14c3c:	b	14c40 <print_debug_data@@Base+0x10b8>
   14c40:	b	14c84 <print_debug_data@@Base+0x10fc>
   14c44:	ldr	r0, [fp, #-12]
   14c48:	add	r1, sp, #88	; 0x58
   14c4c:	add	r2, sp, #80	; 0x50
   14c50:	bl	12894 <coda_cursor_read_complex_double_split@plt>
   14c54:	cmp	r0, #0
   14c58:	beq	14c68 <print_debug_data@@Base+0x10e0>
   14c5c:	movw	r0, #43812	; 0xab24
   14c60:	movt	r0, #1
   14c64:	blx	r0
   14c68:	vldr	d16, [sp, #88]	; 0x58
   14c6c:	vldr	d17, [sp, #80]	; 0x50
   14c70:	movw	r0, #55794	; 0xd9f2
   14c74:	movt	r0, #1
   14c78:	vmov	r2, r3, d16
   14c7c:	vstr	d17, [sp]
   14c80:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14c84:	b	14c88 <print_debug_data@@Base+0x1100>
   14c88:	sub	sp, fp, #8
   14c8c:	pop	{r4, r5, fp, pc}
   14c90:	sub	sp, sp, #12
   14c94:	push	{fp, lr}
   14c98:	mov	fp, sp
   14c9c:	sub	sp, sp, #20
   14ca0:	str	r3, [fp, #16]
   14ca4:	str	r2, [fp, #12]
   14ca8:	str	r1, [fp, #8]
   14cac:	str	r0, [fp, #-4]
   14cb0:	bl	14efc <print_debug_data@@Base+0x1374>
   14cb4:	add	r0, fp, #8
   14cb8:	str	r0, [sp, #8]
   14cbc:	movw	r0, #4232	; 0x1088
   14cc0:	movt	r0, #3
   14cc4:	ldr	r0, [r0]
   14cc8:	ldr	r1, [fp, #-4]
   14ccc:	ldr	r2, [sp, #8]
   14cd0:	bl	12900 <vfprintf@plt>
   14cd4:	str	r0, [fp, #-8]
   14cd8:	add	r0, sp, #8
   14cdc:	ldr	r1, [fp, #-8]
   14ce0:	str	r0, [sp, #4]
   14ce4:	mov	r0, r1
   14ce8:	mov	sp, fp
   14cec:	pop	{fp, lr}
   14cf0:	add	sp, sp, #12
   14cf4:	bx	lr
   14cf8:	sub	sp, sp, #12
   14cfc:	push	{fp, lr}
   14d00:	mov	fp, sp
   14d04:	sub	sp, sp, #20
   14d08:	str	r3, [fp, #16]
   14d0c:	str	r2, [fp, #12]
   14d10:	str	r1, [fp, #8]
   14d14:	str	r0, [fp, #-4]
   14d18:	add	r0, fp, #8
   14d1c:	str	r0, [sp, #8]
   14d20:	movw	r0, #4232	; 0x1088
   14d24:	movt	r0, #3
   14d28:	ldr	r0, [r0]
   14d2c:	ldr	r1, [fp, #-4]
   14d30:	ldr	r2, [sp, #8]
   14d34:	bl	12900 <vfprintf@plt>
   14d38:	str	r0, [fp, #-8]
   14d3c:	add	r0, sp, #8
   14d40:	ldr	r1, [fp, #-8]
   14d44:	str	r0, [sp, #4]
   14d48:	mov	r0, r1
   14d4c:	mov	sp, fp
   14d50:	pop	{fp, lr}
   14d54:	add	sp, sp, #12
   14d58:	bx	lr
   14d5c:	push	{fp, lr}
   14d60:	mov	fp, sp
   14d64:	sub	sp, sp, #24
   14d68:	str	r0, [fp, #-4]
   14d6c:	str	r1, [fp, #-8]
   14d70:	movw	r0, #0
   14d74:	str	r0, [sp, #12]
   14d78:	ldr	r0, [sp, #12]
   14d7c:	ldr	r1, [fp, #-8]
   14d80:	cmp	r0, r1
   14d84:	bge	14ef4 <print_debug_data@@Base+0x136c>
   14d88:	ldr	r0, [fp, #-4]
   14d8c:	ldr	r1, [sp, #12]
   14d90:	ldrb	r0, [r0, r1]
   14d94:	strb	r0, [sp, #11]
   14d98:	ldrb	r0, [sp, #11]
   14d9c:	mov	r1, r0
   14da0:	cmp	r0, #7
   14da4:	str	r1, [sp, #4]
   14da8:	beq	14e20 <print_debug_data@@Base+0x1298>
   14dac:	b	14db0 <print_debug_data@@Base+0x1228>
   14db0:	ldr	r0, [sp, #4]
   14db4:	cmp	r0, #8
   14db8:	beq	14e30 <print_debug_data@@Base+0x12a8>
   14dbc:	b	14dc0 <print_debug_data@@Base+0x1238>
   14dc0:	ldr	r0, [sp, #4]
   14dc4:	cmp	r0, #9
   14dc8:	beq	14e40 <print_debug_data@@Base+0x12b8>
   14dcc:	b	14dd0 <print_debug_data@@Base+0x1248>
   14dd0:	ldr	r0, [sp, #4]
   14dd4:	cmp	r0, #10
   14dd8:	beq	14e50 <print_debug_data@@Base+0x12c8>
   14ddc:	b	14de0 <print_debug_data@@Base+0x1258>
   14de0:	ldr	r0, [sp, #4]
   14de4:	cmp	r0, #11
   14de8:	beq	14e60 <print_debug_data@@Base+0x12d8>
   14dec:	b	14df0 <print_debug_data@@Base+0x1268>
   14df0:	ldr	r0, [sp, #4]
   14df4:	cmp	r0, #12
   14df8:	beq	14e70 <print_debug_data@@Base+0x12e8>
   14dfc:	b	14e00 <print_debug_data@@Base+0x1278>
   14e00:	ldr	r0, [sp, #4]
   14e04:	cmp	r0, #13
   14e08:	beq	14e80 <print_debug_data@@Base+0x12f8>
   14e0c:	b	14e10 <print_debug_data@@Base+0x1288>
   14e10:	ldr	r0, [sp, #4]
   14e14:	cmp	r0, #92	; 0x5c
   14e18:	beq	14e90 <print_debug_data@@Base+0x1308>
   14e1c:	b	14ea0 <print_debug_data@@Base+0x1318>
   14e20:	movw	r0, #55401	; 0xd869
   14e24:	movt	r0, #1
   14e28:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e2c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e30:	movw	r0, #55404	; 0xd86c
   14e34:	movt	r0, #1
   14e38:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e3c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e40:	movw	r0, #55407	; 0xd86f
   14e44:	movt	r0, #1
   14e48:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e4c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e50:	movw	r0, #55410	; 0xd872
   14e54:	movt	r0, #1
   14e58:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e5c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e60:	movw	r0, #55413	; 0xd875
   14e64:	movt	r0, #1
   14e68:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e6c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e70:	movw	r0, #55416	; 0xd878
   14e74:	movt	r0, #1
   14e78:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e7c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e80:	movw	r0, #55419	; 0xd87b
   14e84:	movt	r0, #1
   14e88:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e8c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14e90:	movw	r0, #55422	; 0xd87e
   14e94:	movt	r0, #1
   14e98:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14e9c:	b	14ee0 <print_debug_data@@Base+0x1358>
   14ea0:	ldrb	r0, [sp, #11]
   14ea4:	cmp	r0, #32
   14ea8:	blt	14ecc <print_debug_data@@Base+0x1344>
   14eac:	ldrb	r0, [sp, #11]
   14eb0:	cmp	r0, #126	; 0x7e
   14eb4:	bgt	14ecc <print_debug_data@@Base+0x1344>
   14eb8:	ldrb	r1, [sp, #11]
   14ebc:	movw	r0, #55261	; 0xd7dd
   14ec0:	movt	r0, #1
   14ec4:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14ec8:	b	14edc <print_debug_data@@Base+0x1354>
   14ecc:	ldrb	r1, [sp, #11]
   14ed0:	movw	r0, #55425	; 0xd881
   14ed4:	movt	r0, #1
   14ed8:	bl	14cf8 <print_debug_data@@Base+0x1170>
   14edc:	b	14ee0 <print_debug_data@@Base+0x1358>
   14ee0:	b	14ee4 <print_debug_data@@Base+0x135c>
   14ee4:	ldr	r0, [sp, #12]
   14ee8:	add	r0, r0, #1
   14eec:	str	r0, [sp, #12]
   14ef0:	b	14d78 <print_debug_data@@Base+0x11f0>
   14ef4:	mov	sp, fp
   14ef8:	pop	{fp, pc}
   14efc:	push	{fp, lr}
   14f00:	mov	fp, sp
   14f04:	sub	sp, sp, #8
   14f08:	movw	r0, #436	; 0x1b4
   14f0c:	movt	r0, #3
   14f10:	ldr	r0, [r0]
   14f14:	cmp	r0, #0
   14f18:	blt	14f20 <print_debug_data@@Base+0x1398>
   14f1c:	b	14f40 <print_debug_data@@Base+0x13b8>
   14f20:	movw	r0, #55805	; 0xd9fd
   14f24:	movt	r0, #1
   14f28:	movw	r1, #55575	; 0xd917
   14f2c:	movt	r1, #1
   14f30:	movw	r2, #44	; 0x2c
   14f34:	movw	r3, #55817	; 0xda09
   14f38:	movt	r3, #1
   14f3c:	bl	129f0 <__assert_fail@plt>
   14f40:	movw	r0, #436	; 0x1b4
   14f44:	movt	r0, #3
   14f48:	ldr	r0, [r0]
   14f4c:	str	r0, [sp, #4]
   14f50:	ldr	r0, [sp, #4]
   14f54:	cmp	r0, #0
   14f58:	ble	14f88 <print_debug_data@@Base+0x1400>
   14f5c:	movw	r0, #4232	; 0x1088
   14f60:	movt	r0, #3
   14f64:	ldr	r0, [r0]
   14f68:	movw	r1, #55505	; 0xd8d1
   14f6c:	movt	r1, #1
   14f70:	bl	12810 <fprintf@plt>
   14f74:	ldr	r0, [sp, #4]
   14f78:	mvn	r1, #0
   14f7c:	add	r0, r0, r1
   14f80:	str	r0, [sp, #4]
   14f84:	b	14f50 <print_debug_data@@Base+0x13c8>
   14f88:	mov	sp, fp
   14f8c:	pop	{fp, pc}

00014f90 <dim_info_init@@Base>:
   14f90:	movw	r0, #0
   14f94:	movw	r1, #4264	; 0x10a8
   14f98:	movt	r1, #3
   14f9c:	str	r0, [r1]
   14fa0:	str	r0, [r1, #68]	; 0x44
   14fa4:	mvn	r0, #0
   14fa8:	str	r0, [r1, #104]	; 0x68
   14fac:	bx	lr

00014fb0 <dim_info_done@@Base>:
   14fb0:	bx	lr

00014fb4 <print_all_distinct_dims@@Base>:
   14fb4:	push	{fp, lr}
   14fb8:	mov	fp, sp
   14fbc:	sub	sp, sp, #40	; 0x28
   14fc0:	str	r0, [fp, #-4]
   14fc4:	ldr	r0, [fp, #-4]
   14fc8:	movw	r1, #4264	; 0x10a8
   14fcc:	movt	r1, #3
   14fd0:	ldr	r1, [r1]
   14fd4:	cmp	r0, r1
   14fd8:	bge	14fe0 <print_all_distinct_dims@@Base+0x2c>
   14fdc:	b	15000 <print_all_distinct_dims@@Base+0x4c>
   14fe0:	movw	r0, #55835	; 0xda1b
   14fe4:	movt	r0, #1
   14fe8:	movw	r1, #55862	; 0xda36
   14fec:	movt	r1, #1
   14ff0:	movw	r2, #50	; 0x32
   14ff4:	movw	r3, #55944	; 0xda88
   14ff8:	movt	r3, #1
   14ffc:	bl	129f0 <__assert_fail@plt>
   15000:	movw	r0, #4264	; 0x10a8
   15004:	movt	r0, #3
   15008:	add	r0, r0, #72	; 0x48
   1500c:	ldr	r1, [fp, #-4]
   15010:	movw	r2, #4264	; 0x10a8
   15014:	movt	r2, #3
   15018:	add	r1, r2, r1, lsl #2
   1501c:	add	r1, r1, #72	; 0x48
   15020:	ldr	r1, [r1]
   15024:	cmp	r1, #0
   15028:	bne	15030 <print_all_distinct_dims@@Base+0x7c>
   1502c:	b	1535c <print_all_distinct_dims@@Base+0x3a8>
   15030:	ldr	r0, [fp, #-4]
   15034:	movw	r1, #4264	; 0x10a8
   15038:	movt	r1, #3
   1503c:	add	r0, r1, r0, lsl #2
   15040:	ldr	r0, [r0, #4]
   15044:	add	r0, r0, #1
   15048:	lsl	r0, r0, #2
   1504c:	bl	12780 <malloc@plt>
   15050:	str	r0, [fp, #-8]
   15054:	ldr	r0, [fp, #-8]
   15058:	movw	r1, #0
   1505c:	cmp	r0, r1
   15060:	bne	150ac <print_all_distinct_dims@@Base+0xf8>
   15064:	ldr	r0, [fp, #-4]
   15068:	movw	r1, #4264	; 0x10a8
   1506c:	movt	r1, #3
   15070:	add	r0, r1, r0, lsl #2
   15074:	ldr	r0, [r0, #4]
   15078:	add	r0, r0, #1
   1507c:	lsl	r2, r0, #2
   15080:	mvn	r0, #0
   15084:	movw	r1, #55264	; 0xd7e0
   15088:	movt	r1, #1
   1508c:	movw	r3, #55862	; 0xda36
   15090:	movt	r3, #1
   15094:	movw	ip, #61	; 0x3d
   15098:	str	ip, [sp]
   1509c:	bl	1260c <coda_set_error@plt>
   150a0:	movw	r0, #43812	; 0xab24
   150a4:	movt	r0, #1
   150a8:	blx	r0
   150ac:	ldr	r0, [fp, #-8]
   150b0:	ldr	r1, [fp, #-4]
   150b4:	movw	r2, #4264	; 0x10a8
   150b8:	movt	r2, #3
   150bc:	add	r1, r2, r1, lsl #2
   150c0:	ldr	r1, [r1, #4]
   150c4:	add	r1, r1, #1
   150c8:	lsl	r2, r1, #2
   150cc:	movw	r1, #0
   150d0:	and	r1, r1, #255	; 0xff
   150d4:	bl	12864 <memset@plt>
   150d8:	movw	r0, #0
   150dc:	str	r0, [fp, #-12]
   150e0:	ldr	r0, [fp, #-12]
   150e4:	ldr	r1, [fp, #-4]
   150e8:	movw	r2, #4264	; 0x10a8
   150ec:	movt	r2, #3
   150f0:	add	r1, r2, r1, lsl #2
   150f4:	ldr	r1, [r1, #140]	; 0x8c
   150f8:	add	r1, r2, r1, lsl #3
   150fc:	ldr	r2, [r1, #232]	; 0xe8
   15100:	ldr	r1, [r1, #236]	; 0xec
   15104:	subs	r2, r0, r2
   15108:	rscs	r0, r1, r0, asr #31
   1510c:	bge	15180 <print_all_distinct_dims@@Base+0x1cc>
   15110:	b	15114 <print_all_distinct_dims@@Base+0x160>
   15114:	ldr	r0, [fp, #-4]
   15118:	movw	r1, #4264	; 0x10a8
   1511c:	movt	r1, #3
   15120:	add	r0, r1, r0, lsl #2
   15124:	ldr	r0, [r0, #108]	; 0x6c
   15128:	ldr	r1, [fp, #-12]
   1512c:	add	r0, r0, r1, lsl #2
   15130:	ldr	r0, [r0]
   15134:	cmp	r0, #0
   15138:	blt	1516c <print_all_distinct_dims@@Base+0x1b8>
   1513c:	ldr	r0, [fp, #-8]
   15140:	ldr	r1, [fp, #-4]
   15144:	movw	r2, #4264	; 0x10a8
   15148:	movt	r2, #3
   1514c:	add	r1, r2, r1, lsl #2
   15150:	ldr	r1, [r1, #108]	; 0x6c
   15154:	ldr	r2, [fp, #-12]
   15158:	ldr	r1, [r1, r2, lsl #2]
   1515c:	add	r0, r0, r1, lsl #2
   15160:	ldr	r1, [r0]
   15164:	add	r1, r1, #1
   15168:	str	r1, [r0]
   1516c:	b	15170 <print_all_distinct_dims@@Base+0x1bc>
   15170:	ldr	r0, [fp, #-12]
   15174:	add	r0, r0, #1
   15178:	str	r0, [fp, #-12]
   1517c:	b	150e0 <print_all_distinct_dims@@Base+0x12c>
   15180:	movw	r0, #4264	; 0x10a8
   15184:	movt	r0, #3
   15188:	add	r0, r0, #36	; 0x24
   1518c:	ldr	r1, [fp, #-4]
   15190:	add	r1, r1, #1
   15194:	movw	r2, #55978	; 0xdaaa
   15198:	movt	r2, #1
   1519c:	str	r0, [fp, #-16]
   151a0:	mov	r0, r2
   151a4:	bl	125e8 <printf@plt>
   151a8:	ldr	r1, [fp, #-4]
   151ac:	movw	r2, #4264	; 0x10a8
   151b0:	movt	r2, #3
   151b4:	add	r1, r2, r1, lsl #2
   151b8:	add	r1, r1, #36	; 0x24
   151bc:	ldr	r1, [r1]
   151c0:	str	r1, [fp, #-12]
   151c4:	movw	r0, #4264	; 0x10a8
   151c8:	movt	r0, #3
   151cc:	add	r0, r0, #4
   151d0:	ldr	r1, [fp, #-12]
   151d4:	ldr	r2, [fp, #-4]
   151d8:	movw	r3, #4264	; 0x10a8
   151dc:	movt	r3, #3
   151e0:	add	r2, r3, r2, lsl #2
   151e4:	add	r2, r2, #4
   151e8:	ldr	r2, [r2]
   151ec:	cmp	r1, r2
   151f0:	bge	15230 <print_all_distinct_dims@@Base+0x27c>
   151f4:	ldr	r0, [fp, #-8]
   151f8:	ldr	r1, [fp, #-12]
   151fc:	add	r0, r0, r1, lsl #2
   15200:	ldr	r0, [r0]
   15204:	cmp	r0, #0
   15208:	ble	1521c <print_all_distinct_dims@@Base+0x268>
   1520c:	ldr	r1, [fp, #-12]
   15210:	movw	r0, #55990	; 0xdab6
   15214:	movt	r0, #1
   15218:	bl	125e8 <printf@plt>
   1521c:	b	15220 <print_all_distinct_dims@@Base+0x26c>
   15220:	ldr	r0, [fp, #-12]
   15224:	add	r0, r0, #1
   15228:	str	r0, [fp, #-12]
   1522c:	b	151c4 <print_all_distinct_dims@@Base+0x210>
   15230:	movw	r0, #4264	; 0x10a8
   15234:	movt	r0, #3
   15238:	add	r0, r0, #36	; 0x24
   1523c:	ldr	r1, [fp, #-4]
   15240:	movw	r2, #4264	; 0x10a8
   15244:	movt	r2, #3
   15248:	add	r1, r2, r1, lsl #2
   1524c:	ldr	r1, [r1, #4]
   15250:	movw	r3, #55994	; 0xdaba
   15254:	movt	r3, #1
   15258:	str	r0, [sp, #20]
   1525c:	mov	r0, r3
   15260:	str	r2, [sp, #16]
   15264:	bl	125e8 <printf@plt>
   15268:	movw	r1, #55998	; 0xdabe
   1526c:	movt	r1, #1
   15270:	str	r0, [sp, #12]
   15274:	mov	r0, r1
   15278:	bl	125e8 <printf@plt>
   1527c:	ldr	r1, [fp, #-4]
   15280:	ldr	r2, [sp, #16]
   15284:	add	r1, r2, r1, lsl #2
   15288:	add	r1, r1, #36	; 0x24
   1528c:	ldr	r1, [r1]
   15290:	str	r1, [fp, #-12]
   15294:	movw	r0, #4264	; 0x10a8
   15298:	movt	r0, #3
   1529c:	add	r0, r0, #4
   152a0:	ldr	r1, [fp, #-12]
   152a4:	ldr	r2, [fp, #-4]
   152a8:	movw	r3, #4264	; 0x10a8
   152ac:	movt	r3, #3
   152b0:	add	r2, r3, r2, lsl #2
   152b4:	add	r2, r2, #4
   152b8:	ldr	r2, [r2]
   152bc:	cmp	r1, r2
   152c0:	bge	1530c <print_all_distinct_dims@@Base+0x358>
   152c4:	ldr	r0, [fp, #-8]
   152c8:	ldr	r1, [fp, #-12]
   152cc:	add	r0, r0, r1, lsl #2
   152d0:	ldr	r0, [r0]
   152d4:	cmp	r0, #0
   152d8:	ble	152f8 <print_all_distinct_dims@@Base+0x344>
   152dc:	ldr	r0, [fp, #-8]
   152e0:	ldr	r1, [fp, #-12]
   152e4:	add	r0, r0, r1, lsl #2
   152e8:	ldr	r1, [r0]
   152ec:	movw	r0, #55990	; 0xdab6
   152f0:	movt	r0, #1
   152f4:	bl	125e8 <printf@plt>
   152f8:	b	152fc <print_all_distinct_dims@@Base+0x348>
   152fc:	ldr	r0, [fp, #-12]
   15300:	add	r0, r0, #1
   15304:	str	r0, [fp, #-12]
   15308:	b	15294 <print_all_distinct_dims@@Base+0x2e0>
   1530c:	ldr	r0, [fp, #-8]
   15310:	ldr	r1, [fp, #-4]
   15314:	movw	r2, #4264	; 0x10a8
   15318:	movt	r2, #3
   1531c:	add	r1, r2, r1, lsl #2
   15320:	ldr	r1, [r1, #4]
   15324:	add	r0, r0, r1, lsl #2
   15328:	ldr	r1, [r0]
   1532c:	movw	r0, #55994	; 0xdaba
   15330:	movt	r0, #1
   15334:	bl	125e8 <printf@plt>
   15338:	movw	r1, #61913	; 0xf1d9
   1533c:	movt	r1, #1
   15340:	str	r0, [sp, #8]
   15344:	mov	r0, r1
   15348:	bl	125e8 <printf@plt>
   1534c:	ldr	r1, [fp, #-8]
   15350:	str	r0, [sp, #4]
   15354:	mov	r0, r1
   15358:	bl	12654 <free@plt>
   1535c:	mov	sp, fp
   15360:	pop	{fp, pc}

00015364 <dim_enter_array@@Base>:
   15364:	push	{r4, r5, fp, lr}
   15368:	add	fp, sp, #8
   1536c:	sub	sp, sp, #168	; 0xa8
   15370:	movw	r0, #480	; 0x1e0
   15374:	movt	r0, #3
   15378:	add	r0, r0, #8
   1537c:	movw	r1, #480	; 0x1e0
   15380:	movt	r1, #3
   15384:	ldr	r2, [r1, #3360]	; 0xd20
   15388:	add	r2, r2, r2, lsl #2
   1538c:	add	r2, r1, r2, lsl #4
   15390:	add	r2, r2, #800	; 0x320
   15394:	str	r2, [fp, #-16]
   15398:	ldr	r2, [r1, #136]	; 0x88
   1539c:	add	r1, r1, r2, lsl #2
   153a0:	add	r1, r1, #8
   153a4:	ldr	r1, [r1]
   153a8:	str	r0, [sp, #56]	; 0x38
   153ac:	mov	r0, r1
   153b0:	sub	r1, fp, #12
   153b4:	bl	129fc <coda_type_get_class@plt>
   153b8:	cmp	r0, #0
   153bc:	beq	153cc <dim_enter_array@@Base+0x68>
   153c0:	movw	r0, #43812	; 0xab24
   153c4:	movt	r0, #1
   153c8:	blx	r0
   153cc:	ldr	r0, [fp, #-12]
   153d0:	sub	r0, r0, #1
   153d4:	cmp	r0, #5
   153d8:	str	r0, [sp, #52]	; 0x34
   153dc:	bhi	15640 <dim_enter_array@@Base+0x2dc>
   153e0:	add	r0, pc, #8
   153e4:	ldr	r1, [sp, #52]	; 0x34
   153e8:	ldr	r0, [r0, r1, lsl #2]
   153ec:	mov	pc, r0
   153f0:	andeq	r5, r1, r8, lsl #8
   153f4:	andeq	r5, r1, r0, asr #12
   153f8:	andeq	r5, r1, r0, asr #12
   153fc:	andeq	r5, r1, r0, asr #10
   15400:	andeq	r5, r1, r4, lsr #11
   15404:	andeq	r5, r1, r8, lsr #9
   15408:	sub	r2, fp, #80	; 0x50
   1540c:	movw	r0, #480	; 0x1e0
   15410:	movt	r0, #3
   15414:	add	r0, r0, #8
   15418:	movw	r1, #480	; 0x1e0
   1541c:	movt	r1, #3
   15420:	ldr	r3, [r1, #136]	; 0x88
   15424:	add	r1, r1, r3, lsl #2
   15428:	add	r1, r1, #8
   1542c:	ldr	r1, [r1]
   15430:	str	r0, [sp, #48]	; 0x30
   15434:	mov	r0, r1
   15438:	sub	r1, fp, #84	; 0x54
   1543c:	bl	1293c <coda_type_get_array_dim@plt>
   15440:	cmp	r0, #0
   15444:	beq	15454 <dim_enter_array@@Base+0xf0>
   15448:	movw	r0, #43812	; 0xab24
   1544c:	movt	r0, #1
   15450:	blx	r0
   15454:	ldr	r0, [fp, #-84]	; 0xffffffac
   15458:	ldr	r1, [fp, #-16]
   1545c:	str	r0, [r1, #4]
   15460:	movw	r0, #0
   15464:	str	r0, [fp, #-48]	; 0xffffffd0
   15468:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1546c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15470:	cmp	r0, r1
   15474:	bge	154a4 <dim_enter_array@@Base+0x140>
   15478:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1547c:	sub	r1, fp, #80	; 0x50
   15480:	ldr	r1, [r1, r0, lsl #2]
   15484:	ldr	r2, [fp, #-16]
   15488:	add	r2, r2, #8
   1548c:	add	r0, r2, r0, lsl #2
   15490:	str	r1, [r0]
   15494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15498:	add	r0, r0, #1
   1549c:	str	r0, [fp, #-48]	; 0xffffffd0
   154a0:	b	15468 <dim_enter_array@@Base+0x104>
   154a4:	b	15660 <dim_enter_array@@Base+0x2fc>
   154a8:	movw	r0, #480	; 0x1e0
   154ac:	movt	r0, #3
   154b0:	add	r0, r0, #8
   154b4:	movw	r1, #480	; 0x1e0
   154b8:	movt	r1, #3
   154bc:	ldr	r2, [r1, #136]	; 0x88
   154c0:	add	r1, r1, r2, lsl #2
   154c4:	add	r1, r1, #8
   154c8:	ldr	r1, [r1]
   154cc:	str	r0, [sp, #44]	; 0x2c
   154d0:	mov	r0, r1
   154d4:	add	r1, sp, #88	; 0x58
   154d8:	bl	1287c <coda_type_get_special_type@plt>
   154dc:	cmp	r0, #0
   154e0:	beq	154f0 <dim_enter_array@@Base+0x18c>
   154e4:	movw	r0, #43812	; 0xab24
   154e8:	movt	r0, #1
   154ec:	blx	r0
   154f0:	ldr	r0, [sp, #88]	; 0x58
   154f4:	cmp	r0, #3
   154f8:	bne	1551c <dim_enter_array@@Base+0x1b8>
   154fc:	b	15500 <dim_enter_array@@Base+0x19c>
   15500:	ldr	r0, [fp, #-16]
   15504:	movw	r1, #1
   15508:	str	r1, [r0, #4]
   1550c:	ldr	r0, [fp, #-16]
   15510:	movw	r1, #2
   15514:	str	r1, [r0, #8]
   15518:	b	1553c <dim_enter_array@@Base+0x1d8>
   1551c:	movw	r0, #55815	; 0xda07
   15520:	movt	r0, #1
   15524:	movw	r1, #55862	; 0xda36
   15528:	movt	r1, #1
   1552c:	movw	r2, #349	; 0x15d
   15530:	movw	r3, #56006	; 0xdac6
   15534:	movt	r3, #1
   15538:	bl	129f0 <__assert_fail@plt>
   1553c:	b	15660 <dim_enter_array@@Base+0x2fc>
   15540:	movw	r0, #480	; 0x1e0
   15544:	movt	r0, #3
   15548:	add	r0, r0, #8
   1554c:	movw	r1, #480	; 0x1e0
   15550:	movt	r1, #3
   15554:	ldr	r2, [r1, #136]	; 0x88
   15558:	add	r1, r1, r2, lsl #2
   1555c:	add	r1, r1, #8
   15560:	ldr	r1, [r1]
   15564:	str	r0, [sp, #40]	; 0x28
   15568:	mov	r0, r1
   1556c:	add	r1, sp, #84	; 0x54
   15570:	bl	128b8 <coda_type_get_string_length@plt>
   15574:	cmp	r0, #0
   15578:	beq	15588 <dim_enter_array@@Base+0x224>
   1557c:	movw	r0, #43812	; 0xab24
   15580:	movt	r0, #1
   15584:	blx	r0
   15588:	ldr	r0, [fp, #-16]
   1558c:	movw	r1, #1
   15590:	str	r1, [r0, #4]
   15594:	ldr	r0, [sp, #84]	; 0x54
   15598:	ldr	r1, [fp, #-16]
   1559c:	str	r0, [r1, #8]
   155a0:	b	15660 <dim_enter_array@@Base+0x2fc>
   155a4:	movw	r0, #480	; 0x1e0
   155a8:	movt	r0, #3
   155ac:	add	r0, r0, #8
   155b0:	movw	r1, #480	; 0x1e0
   155b4:	movt	r1, #3
   155b8:	ldr	r2, [r1, #136]	; 0x88
   155bc:	add	r1, r1, r2, lsl #2
   155c0:	add	r1, r1, #8
   155c4:	ldr	r1, [r1]
   155c8:	str	r0, [sp, #36]	; 0x24
   155cc:	mov	r0, r1
   155d0:	add	r1, sp, #72	; 0x48
   155d4:	bl	126c0 <coda_type_get_bit_size@plt>
   155d8:	cmp	r0, #0
   155dc:	beq	155ec <dim_enter_array@@Base+0x288>
   155e0:	movw	r0, #43812	; 0xab24
   155e4:	movt	r0, #1
   155e8:	blx	r0
   155ec:	ldr	r0, [fp, #-16]
   155f0:	mov	r1, #1
   155f4:	str	r1, [r0, #4]
   155f8:	ldr	r0, [sp, #76]	; 0x4c
   155fc:	cmp	r0, #0
   15600:	bmi	15630 <dim_enter_array@@Base+0x2cc>
   15604:	b	15608 <dim_enter_array@@Base+0x2a4>
   15608:	ldr	r0, [sp, #72]	; 0x48
   1560c:	ldr	r1, [sp, #76]	; 0x4c
   15610:	lsr	r2, r0, #3
   15614:	orr	r1, r2, r1, lsl #29
   15618:	add	r2, r1, #1
   1561c:	tst	r0, #7
   15620:	movne	r1, r2
   15624:	ldr	r0, [fp, #-16]
   15628:	str	r1, [r0, #8]
   1562c:	b	1563c <dim_enter_array@@Base+0x2d8>
   15630:	ldr	r0, [fp, #-16]
   15634:	mvn	r1, #0
   15638:	str	r1, [r0, #8]
   1563c:	b	15660 <dim_enter_array@@Base+0x2fc>
   15640:	movw	r0, #55815	; 0xda07
   15644:	movt	r0, #1
   15648:	movw	r1, #55862	; 0xda36
   1564c:	movt	r1, #1
   15650:	movw	r2, #386	; 0x182
   15654:	movw	r3, #56006	; 0xdac6
   15658:	movt	r3, #1
   1565c:	bl	129f0 <__assert_fail@plt>
   15660:	movw	r0, #476	; 0x1dc
   15664:	movt	r0, #3
   15668:	ldr	r0, [r0]
   1566c:	cmp	r0, #0
   15670:	bne	15698 <dim_enter_array@@Base+0x334>
   15674:	ldr	r0, [fp, #-16]
   15678:	mvn	r1, #0
   1567c:	str	r1, [r0]
   15680:	ldr	r0, [fp, #-16]
   15684:	movw	r1, #0
   15688:	str	r1, [r0, #40]	; 0x28
   1568c:	ldr	r0, [fp, #-16]
   15690:	str	r1, [r0, #44]	; 0x2c
   15694:	b	160d0 <dim_enter_array@@Base+0xd6c>
   15698:	movw	r0, #4264	; 0x10a8
   1569c:	movt	r0, #3
   156a0:	ldr	r1, [r0]
   156a4:	str	r1, [fp, #-44]	; 0xffffffd4
   156a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156ac:	ldr	r2, [fp, #-16]
   156b0:	str	r1, [r2]
   156b4:	ldr	r0, [r0]
   156b8:	ldr	r1, [fp, #-16]
   156bc:	ldr	r1, [r1, #4]
   156c0:	add	r0, r0, r1
   156c4:	cmp	r0, #8
   156c8:	bgt	156d0 <dim_enter_array@@Base+0x36c>
   156cc:	b	156f0 <dim_enter_array@@Base+0x38c>
   156d0:	movw	r0, #56029	; 0xdadd
   156d4:	movt	r0, #1
   156d8:	movw	r1, #55862	; 0xda36
   156dc:	movt	r1, #1
   156e0:	movw	r2, #402	; 0x192
   156e4:	movw	r3, #56006	; 0xdac6
   156e8:	movt	r3, #1
   156ec:	bl	129f0 <__assert_fail@plt>
   156f0:	ldr	r0, [fp, #-16]
   156f4:	ldr	r0, [r0, #4]
   156f8:	movw	r1, #4264	; 0x10a8
   156fc:	movt	r1, #3
   15700:	ldr	r2, [r1]
   15704:	add	r0, r2, r0
   15708:	str	r0, [r1]
   1570c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15710:	cmp	r0, #0
   15714:	ble	15754 <dim_enter_array@@Base+0x3f0>
   15718:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1571c:	movw	r1, #4264	; 0x10a8
   15720:	movt	r1, #3
   15724:	add	r0, r1, r0, lsl #3
   15728:	ldr	r2, [r0, #232]	; 0xe8
   1572c:	ldr	r0, [r0, #236]	; 0xec
   15730:	str	r0, [fp, #-20]	; 0xffffffec
   15734:	str	r2, [fp, #-24]	; 0xffffffe8
   15738:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1573c:	add	r0, r1, r0, lsl #3
   15740:	ldr	r1, [r0, #296]	; 0x128
   15744:	ldr	r0, [r0, #300]	; 0x12c
   15748:	str	r0, [fp, #-28]	; 0xffffffe4
   1574c:	str	r1, [fp, #-32]	; 0xffffffe0
   15750:	b	1576c <dim_enter_array@@Base+0x408>
   15754:	mov	r0, #0
   15758:	str	r0, [fp, #-20]	; 0xffffffec
   1575c:	mov	r1, #1
   15760:	str	r1, [fp, #-24]	; 0xffffffe8
   15764:	str	r0, [fp, #-28]	; 0xffffffe4
   15768:	str	r1, [fp, #-32]	; 0xffffffe0
   1576c:	mov	r0, #0
   15770:	str	r0, [fp, #-36]	; 0xffffffdc
   15774:	str	r0, [fp, #-40]	; 0xffffffd8
   15778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1577c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15780:	subs	r0, r0, #1
   15784:	sbcs	r1, r1, #0
   15788:	blt	15828 <dim_enter_array@@Base+0x4c4>
   1578c:	b	15790 <dim_enter_array@@Base+0x42c>
   15790:	movw	r0, #0
   15794:	str	r0, [fp, #-48]	; 0xffffffd0
   15798:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1579c:	ldr	r1, [fp, #-16]
   157a0:	ldr	r1, [r1, #4]
   157a4:	cmp	r0, r1
   157a8:	bge	15824 <dim_enter_array@@Base+0x4c0>
   157ac:	ldr	r0, [fp, #-16]
   157b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   157b4:	add	r0, r0, r1, lsl #2
   157b8:	ldr	r0, [r0, #8]
   157bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   157c0:	add	r1, r2, r1
   157c4:	movw	r2, #4264	; 0x10a8
   157c8:	movt	r2, #3
   157cc:	add	r1, r2, r1, lsl #2
   157d0:	str	r0, [r1, #4]
   157d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   157dc:	add	r0, r0, r1
   157e0:	add	r0, r2, r0, lsl #2
   157e4:	mov	r1, #0
   157e8:	str	r1, [r0, #72]	; 0x48
   157ec:	ldr	r0, [fp, #-16]
   157f0:	add	r0, r0, #8
   157f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   157f8:	add	r0, r0, r1, lsl #2
   157fc:	ldr	r0, [r0]
   15800:	cmn	r0, #1
   15804:	bne	15810 <dim_enter_array@@Base+0x4ac>
   15808:	movw	r0, #1
   1580c:	str	r0, [fp, #-36]	; 0xffffffdc
   15810:	b	15814 <dim_enter_array@@Base+0x4b0>
   15814:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15818:	add	r0, r0, #1
   1581c:	str	r0, [fp, #-48]	; 0xffffffd0
   15820:	b	15798 <dim_enter_array@@Base+0x434>
   15824:	b	158a0 <dim_enter_array@@Base+0x53c>
   15828:	movw	r0, #0
   1582c:	str	r0, [fp, #-48]	; 0xffffffd0
   15830:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15834:	ldr	r1, [fp, #-16]
   15838:	ldr	r1, [r1, #4]
   1583c:	cmp	r0, r1
   15840:	bge	1589c <dim_enter_array@@Base+0x538>
   15844:	movw	r0, #4264	; 0x10a8
   15848:	movt	r0, #3
   1584c:	add	r0, r0, #72	; 0x48
   15850:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15854:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15858:	add	r1, r1, r2
   1585c:	movw	r2, #4264	; 0x10a8
   15860:	movt	r2, #3
   15864:	add	r1, r2, r1, lsl #2
   15868:	mov	r3, #0
   1586c:	str	r3, [r1, #4]
   15870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15874:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15878:	add	r1, r1, r3
   1587c:	add	r1, r2, r1, lsl #2
   15880:	add	r1, r1, #72	; 0x48
   15884:	movw	r2, #0
   15888:	str	r2, [r1]
   1588c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15890:	add	r0, r0, #1
   15894:	str	r0, [fp, #-48]	; 0xffffffd0
   15898:	b	15830 <dim_enter_array@@Base+0x4cc>
   1589c:	b	158a0 <dim_enter_array@@Base+0x53c>
   158a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   158a4:	cmp	r0, #0
   158a8:	beq	15bc0 <dim_enter_array@@Base+0x85c>
   158ac:	movw	r0, #0
   158b0:	str	r0, [fp, #-48]	; 0xffffffd0
   158b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   158b8:	ldr	r1, [fp, #-16]
   158bc:	ldr	r1, [r1, #4]
   158c0:	cmp	r0, r1
   158c4:	bge	15a50 <dim_enter_array@@Base+0x6ec>
   158c8:	ldr	r0, [fp, #-16]
   158cc:	add	r0, r0, #8
   158d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   158d4:	add	r0, r0, r1, lsl #2
   158d8:	ldr	r0, [r0]
   158dc:	cmn	r0, #1
   158e0:	bne	159f4 <dim_enter_array@@Base+0x690>
   158e4:	movw	r0, #4264	; 0x10a8
   158e8:	movt	r0, #3
   158ec:	add	r0, r0, #108	; 0x6c
   158f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   158f8:	add	r2, r1, r2
   158fc:	movw	r3, #4264	; 0x10a8
   15900:	movt	r3, #3
   15904:	add	r2, r3, r2, lsl #2
   15908:	str	r1, [r2, #140]	; 0x8c
   1590c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15910:	lsl	r1, r1, #2
   15914:	str	r0, [sp, #32]
   15918:	mov	r0, r1
   1591c:	str	r3, [sp, #28]
   15920:	bl	12780 <malloc@plt>
   15924:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15928:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1592c:	add	r1, r1, r2
   15930:	ldr	r2, [sp, #28]
   15934:	add	r3, r2, #108	; 0x6c
   15938:	str	r0, [r3, r1, lsl #2]
   1593c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15940:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15944:	add	r0, r0, r1
   15948:	add	r0, r3, r0, lsl #2
   1594c:	ldr	r0, [r0]
   15950:	movw	r1, #0
   15954:	cmp	r0, r1
   15958:	bne	15990 <dim_enter_array@@Base+0x62c>
   1595c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15960:	lsl	r2, r0, #2
   15964:	mvn	r0, #0
   15968:	movw	r1, #55264	; 0xd7e0
   1596c:	movt	r1, #1
   15970:	movw	r3, #55862	; 0xda36
   15974:	movt	r3, #1
   15978:	movw	ip, #456	; 0x1c8
   1597c:	str	ip, [sp]
   15980:	bl	1260c <coda_set_error@plt>
   15984:	movw	r0, #43812	; 0xab24
   15988:	movt	r0, #1
   1598c:	blx	r0
   15990:	movw	r0, #0
   15994:	str	r0, [sp, #68]	; 0x44
   15998:	ldr	r0, [sp, #68]	; 0x44
   1599c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   159a4:	subs	r1, r0, r1
   159a8:	rscs	r0, r2, r0, asr #31
   159ac:	bge	159f0 <dim_enter_array@@Base+0x68c>
   159b0:	b	159b4 <dim_enter_array@@Base+0x650>
   159b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   159bc:	add	r0, r0, r1
   159c0:	movw	r1, #4264	; 0x10a8
   159c4:	movt	r1, #3
   159c8:	add	r0, r1, r0, lsl #2
   159cc:	ldr	r0, [r0, #108]	; 0x6c
   159d0:	ldr	r1, [sp, #68]	; 0x44
   159d4:	add	r0, r0, r1, lsl #2
   159d8:	mvn	r1, #0
   159dc:	str	r1, [r0]
   159e0:	ldr	r0, [sp, #68]	; 0x44
   159e4:	add	r0, r0, #1
   159e8:	str	r0, [sp, #68]	; 0x44
   159ec:	b	15998 <dim_enter_array@@Base+0x634>
   159f0:	b	15a3c <dim_enter_array@@Base+0x6d8>
   159f4:	movw	r0, #4264	; 0x10a8
   159f8:	movt	r0, #3
   159fc:	add	r0, r0, #108	; 0x6c
   15a00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15a08:	add	r1, r1, r2
   15a0c:	movw	r2, #4264	; 0x10a8
   15a10:	movt	r2, #3
   15a14:	add	r1, r2, r1, lsl #2
   15a18:	mov	r3, #0
   15a1c:	str	r3, [r1, #140]	; 0x8c
   15a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15a28:	add	r1, r1, r3
   15a2c:	add	r1, r2, r1, lsl #2
   15a30:	add	r1, r1, #108	; 0x6c
   15a34:	movw	r2, #0
   15a38:	str	r2, [r1]
   15a3c:	b	15a40 <dim_enter_array@@Base+0x6dc>
   15a40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a44:	add	r0, r0, #1
   15a48:	str	r0, [fp, #-48]	; 0xffffffd0
   15a4c:	b	158b4 <dim_enter_array@@Base+0x550>
   15a50:	ldr	r0, [fp, #-16]
   15a54:	movw	r1, #0
   15a58:	str	r1, [r0, #44]	; 0x2c
   15a5c:	mov	r0, r1
   15a60:	str	r1, [sp, #24]
   15a64:	ldr	r2, [sp, #24]
   15a68:	bl	160d8 <dim_enter_array@@Base+0xd74>
   15a6c:	movw	r0, #0
   15a70:	str	r0, [fp, #-48]	; 0xffffffd0
   15a74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a78:	ldr	r1, [fp, #-16]
   15a7c:	ldr	r1, [r1, #4]
   15a80:	cmp	r0, r1
   15a84:	bge	15bbc <dim_enter_array@@Base+0x858>
   15a88:	ldr	r0, [fp, #-16]
   15a8c:	add	r0, r0, #8
   15a90:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15a94:	add	r0, r0, r1, lsl #2
   15a98:	ldr	r0, [r0]
   15a9c:	cmn	r0, #1
   15aa0:	bne	15ba8 <dim_enter_array@@Base+0x844>
   15aa4:	movw	r0, #4264	; 0x10a8
   15aa8:	movt	r0, #3
   15aac:	add	r0, r0, #36	; 0x24
   15ab0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ab4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ab8:	add	r1, r1, r2
   15abc:	movw	r2, #4264	; 0x10a8
   15ac0:	movt	r2, #3
   15ac4:	add	r1, r2, r1, lsl #2
   15ac8:	ldr	r2, [r1, #4]
   15acc:	add	r1, r1, #36	; 0x24
   15ad0:	ldr	r1, [r1]
   15ad4:	cmp	r2, r1
   15ad8:	beq	15b14 <dim_enter_array@@Base+0x7b0>
   15adc:	movw	r0, #4264	; 0x10a8
   15ae0:	movt	r0, #3
   15ae4:	add	r0, r0, #72	; 0x48
   15ae8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15aec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15af0:	add	r1, r1, r2
   15af4:	movw	r2, #4264	; 0x10a8
   15af8:	movt	r2, #3
   15afc:	add	r1, r2, r1, lsl #2
   15b00:	add	r1, r1, #72	; 0x48
   15b04:	movw	r2, #1
   15b08:	str	r2, [r1]
   15b0c:	str	r2, [fp, #-40]	; 0xffffffd8
   15b10:	b	15ba4 <dim_enter_array@@Base+0x840>
   15b14:	movw	r0, #4264	; 0x10a8
   15b18:	movt	r0, #3
   15b1c:	add	r0, r0, #140	; 0x8c
   15b20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b28:	add	r1, r1, r2
   15b2c:	movw	r2, #4264	; 0x10a8
   15b30:	movt	r2, #3
   15b34:	add	r1, r2, r1, lsl #2
   15b38:	mov	r3, #0
   15b3c:	str	r3, [r1, #72]	; 0x48
   15b40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b44:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15b48:	add	r1, r1, ip
   15b4c:	add	ip, r2, #108	; 0x6c
   15b50:	ldr	r1, [ip, r1, lsl #2]
   15b54:	str	r0, [sp, #20]
   15b58:	mov	r0, r1
   15b5c:	str	r2, [sp, #16]
   15b60:	str	r3, [sp, #12]
   15b64:	str	ip, [sp, #8]
   15b68:	bl	12654 <free@plt>
   15b6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15b74:	add	r0, r0, r1
   15b78:	ldr	r1, [sp, #12]
   15b7c:	ldr	r2, [sp, #8]
   15b80:	str	r1, [r2, r0, lsl #2]
   15b84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15b8c:	add	r0, r0, r3
   15b90:	ldr	r3, [sp, #16]
   15b94:	add	r0, r3, r0, lsl #2
   15b98:	add	r0, r0, #140	; 0x8c
   15b9c:	movw	ip, #0
   15ba0:	str	ip, [r0]
   15ba4:	b	15ba8 <dim_enter_array@@Base+0x844>
   15ba8:	b	15bac <dim_enter_array@@Base+0x848>
   15bac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15bb0:	add	r0, r0, #1
   15bb4:	str	r0, [fp, #-48]	; 0xffffffd0
   15bb8:	b	15a74 <dim_enter_array@@Base+0x710>
   15bbc:	b	15bc0 <dim_enter_array@@Base+0x85c>
   15bc0:	movw	r0, #4264	; 0x10a8
   15bc4:	movt	r0, #3
   15bc8:	movw	r1, #0
   15bcc:	str	r1, [r0, #68]	; 0x44
   15bd0:	mvn	r2, #0
   15bd4:	str	r2, [r0, #104]	; 0x68
   15bd8:	str	r1, [fp, #-48]	; 0xffffffd0
   15bdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15be0:	movw	r1, #4264	; 0x10a8
   15be4:	movt	r1, #3
   15be8:	ldr	r1, [r1]
   15bec:	cmp	r0, r1
   15bf0:	bge	15c4c <dim_enter_array@@Base+0x8e8>
   15bf4:	movw	r0, #4264	; 0x10a8
   15bf8:	movt	r0, #3
   15bfc:	add	r0, r0, #72	; 0x48
   15c00:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c04:	movw	r2, #4264	; 0x10a8
   15c08:	movt	r2, #3
   15c0c:	add	r1, r2, r1, lsl #2
   15c10:	add	r1, r1, #72	; 0x48
   15c14:	ldr	r1, [r1]
   15c18:	cmp	r1, #0
   15c1c:	beq	15c38 <dim_enter_array@@Base+0x8d4>
   15c20:	movw	r0, #1
   15c24:	movw	r1, #4264	; 0x10a8
   15c28:	movt	r1, #3
   15c2c:	str	r0, [r1, #68]	; 0x44
   15c30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c34:	str	r0, [r1, #104]	; 0x68
   15c38:	b	15c3c <dim_enter_array@@Base+0x8d8>
   15c3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c40:	add	r0, r0, #1
   15c44:	str	r0, [fp, #-48]	; 0xffffffd0
   15c48:	b	15bdc <dim_enter_array@@Base+0x878>
   15c4c:	ldr	r0, [fp, #-16]
   15c50:	movw	r1, #1
   15c54:	str	r1, [r0, #40]	; 0x28
   15c58:	movw	r0, #0
   15c5c:	str	r0, [fp, #-48]	; 0xffffffd0
   15c60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c64:	ldr	r1, [fp, #-16]
   15c68:	ldr	r1, [r1, #4]
   15c6c:	cmp	r0, r1
   15c70:	bge	15d4c <dim_enter_array@@Base+0x9e8>
   15c74:	movw	r0, #4264	; 0x10a8
   15c78:	movt	r0, #3
   15c7c:	add	r0, r0, #4
   15c80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15c88:	add	r1, r1, r2
   15c8c:	movw	r2, #4264	; 0x10a8
   15c90:	movt	r2, #3
   15c94:	add	r1, r2, r1, lsl #2
   15c98:	add	r1, r1, #4
   15c9c:	ldr	r1, [r1]
   15ca0:	ldr	r2, [fp, #-16]
   15ca4:	ldr	r3, [r2, #40]	; 0x28
   15ca8:	mul	r1, r3, r1
   15cac:	str	r1, [r2, #40]	; 0x28
   15cb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15cb4:	cmp	r1, #0
   15cb8:	bne	15cf8 <dim_enter_array@@Base+0x994>
   15cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15cc4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15cc8:	movw	r3, #4264	; 0x10a8
   15ccc:	movt	r3, #3
   15cd0:	add	ip, r3, r2, lsl #2
   15cd4:	ldr	ip, [ip, #4]
   15cd8:	asr	lr, ip, #31
   15cdc:	umull	r4, r5, r0, ip
   15ce0:	mla	r0, r0, lr, r5
   15ce4:	mla	r0, r1, ip, r0
   15ce8:	add	r1, r3, r2, lsl #3
   15cec:	str	r4, [r1, #240]	; 0xf0
   15cf0:	str	r0, [r1, #244]	; 0xf4
   15cf4:	b	15d38 <dim_enter_array@@Base+0x9d4>
   15cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cfc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d00:	add	r0, r0, r1
   15d04:	movw	r1, #4264	; 0x10a8
   15d08:	movt	r1, #3
   15d0c:	add	r2, r1, r0, lsl #3
   15d10:	ldr	r3, [r2, #232]	; 0xe8
   15d14:	ldr	ip, [r2, #236]	; 0xec
   15d18:	add	r0, r1, r0, lsl #2
   15d1c:	ldr	r0, [r0, #4]
   15d20:	asr	r1, r0, #31
   15d24:	umull	lr, r4, r3, r0
   15d28:	mla	r1, r3, r1, r4
   15d2c:	mla	r0, ip, r0, r1
   15d30:	str	lr, [r2, #240]	; 0xf0
   15d34:	str	r0, [r2, #244]	; 0xf4
   15d38:	b	15d3c <dim_enter_array@@Base+0x9d8>
   15d3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d40:	add	r0, r0, #1
   15d44:	str	r0, [fp, #-48]	; 0xffffffd0
   15d48:	b	15c60 <dim_enter_array@@Base+0x8fc>
   15d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d50:	cmp	r0, #0
   15d54:	beq	15ef0 <dim_enter_array@@Base+0xb8c>
   15d58:	movw	r0, #0
   15d5c:	str	r0, [fp, #-48]	; 0xffffffd0
   15d60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d64:	ldr	r1, [fp, #-16]
   15d68:	ldr	r1, [r1, #4]
   15d6c:	cmp	r0, r1
   15d70:	bge	15da8 <dim_enter_array@@Base+0xa44>
   15d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d78:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d7c:	add	r0, r0, r1
   15d80:	movw	r1, #4264	; 0x10a8
   15d84:	movt	r1, #3
   15d88:	add	r0, r1, r0, lsl #3
   15d8c:	mov	r1, #0
   15d90:	str	r1, [r0, #308]	; 0x134
   15d94:	str	r1, [r0, #304]	; 0x130
   15d98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d9c:	add	r0, r0, #1
   15da0:	str	r0, [fp, #-48]	; 0xffffffd0
   15da4:	b	15d60 <dim_enter_array@@Base+0x9fc>
   15da8:	movw	r0, #0
   15dac:	str	r0, [sp, #64]	; 0x40
   15db0:	ldr	r0, [sp, #64]	; 0x40
   15db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15db8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15dbc:	subs	r1, r0, r1
   15dc0:	rscs	r0, r2, r0, asr #31
   15dc4:	bge	15eec <dim_enter_array@@Base+0xb88>
   15dc8:	b	15dcc <dim_enter_array@@Base+0xa68>
   15dcc:	movw	r0, #1
   15dd0:	str	r0, [sp, #60]	; 0x3c
   15dd4:	movw	r0, #0
   15dd8:	str	r0, [fp, #-48]	; 0xffffffd0
   15ddc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15de0:	ldr	r1, [fp, #-16]
   15de4:	ldr	r1, [r1, #4]
   15de8:	cmp	r0, r1
   15dec:	bge	15ed8 <dim_enter_array@@Base+0xb74>
   15df0:	movw	r0, #4264	; 0x10a8
   15df4:	movt	r0, #3
   15df8:	add	r0, r0, #72	; 0x48
   15dfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e00:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e04:	add	r1, r1, r2
   15e08:	movw	r2, #4264	; 0x10a8
   15e0c:	movt	r2, #3
   15e10:	add	r1, r2, r1, lsl #2
   15e14:	add	r1, r1, #72	; 0x48
   15e18:	ldr	r1, [r1]
   15e1c:	cmp	r1, #0
   15e20:	beq	15e5c <dim_enter_array@@Base+0xaf8>
   15e24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e28:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e2c:	add	r0, r0, r1
   15e30:	movw	r1, #4264	; 0x10a8
   15e34:	movt	r1, #3
   15e38:	add	r0, r1, r0, lsl #2
   15e3c:	ldr	r0, [r0, #108]	; 0x6c
   15e40:	ldr	r1, [sp, #64]	; 0x40
   15e44:	add	r0, r0, r1, lsl #2
   15e48:	ldr	r0, [r0]
   15e4c:	ldr	r1, [sp, #60]	; 0x3c
   15e50:	mul	r0, r1, r0
   15e54:	str	r0, [sp, #60]	; 0x3c
   15e58:	b	15e94 <dim_enter_array@@Base+0xb30>
   15e5c:	movw	r0, #4264	; 0x10a8
   15e60:	movt	r0, #3
   15e64:	add	r0, r0, #4
   15e68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e70:	add	r1, r1, r2
   15e74:	movw	r2, #4264	; 0x10a8
   15e78:	movt	r2, #3
   15e7c:	add	r1, r2, r1, lsl #2
   15e80:	add	r1, r1, #4
   15e84:	ldr	r1, [r1]
   15e88:	ldr	r2, [sp, #60]	; 0x3c
   15e8c:	mul	r1, r2, r1
   15e90:	str	r1, [sp, #60]	; 0x3c
   15e94:	ldr	r0, [sp, #60]	; 0x3c
   15e98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ea0:	add	r1, r1, r2
   15ea4:	movw	r2, #4264	; 0x10a8
   15ea8:	movt	r2, #3
   15eac:	add	r1, r2, r1, lsl #3
   15eb0:	ldr	r2, [r1, #304]	; 0x130
   15eb4:	ldr	r3, [r1, #308]	; 0x134
   15eb8:	adds	r2, r2, r0
   15ebc:	adc	r0, r3, r0, asr #31
   15ec0:	str	r2, [r1, #304]	; 0x130
   15ec4:	str	r0, [r1, #308]	; 0x134
   15ec8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ecc:	add	r0, r0, #1
   15ed0:	str	r0, [fp, #-48]	; 0xffffffd0
   15ed4:	b	15ddc <dim_enter_array@@Base+0xa78>
   15ed8:	b	15edc <dim_enter_array@@Base+0xb78>
   15edc:	ldr	r0, [sp, #64]	; 0x40
   15ee0:	add	r0, r0, #1
   15ee4:	str	r0, [sp, #64]	; 0x40
   15ee8:	b	15db0 <dim_enter_array@@Base+0xa4c>
   15eec:	b	15f98 <dim_enter_array@@Base+0xc34>
   15ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ef8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15efc:	movw	r3, #4264	; 0x10a8
   15f00:	movt	r3, #3
   15f04:	add	ip, r3, r2, lsl #2
   15f08:	ldr	ip, [ip, #4]
   15f0c:	asr	lr, ip, #31
   15f10:	umull	r4, r5, r0, ip
   15f14:	mla	r0, r0, lr, r5
   15f18:	mla	r0, r1, ip, r0
   15f1c:	add	r1, r3, r2, lsl #3
   15f20:	str	r4, [r1, #304]	; 0x130
   15f24:	str	r0, [r1, #308]	; 0x134
   15f28:	movw	r0, #1
   15f2c:	str	r0, [fp, #-48]	; 0xffffffd0
   15f30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f34:	ldr	r1, [fp, #-16]
   15f38:	ldr	r1, [r1, #4]
   15f3c:	cmp	r0, r1
   15f40:	bge	15f94 <dim_enter_array@@Base+0xc30>
   15f44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15f4c:	add	r0, r0, r1
   15f50:	movw	r1, #4264	; 0x10a8
   15f54:	movt	r1, #3
   15f58:	add	r2, r1, r0, lsl #3
   15f5c:	ldr	r3, [r2, #296]	; 0x128
   15f60:	ldr	ip, [r2, #300]	; 0x12c
   15f64:	add	r0, r1, r0, lsl #2
   15f68:	ldr	r0, [r0, #4]
   15f6c:	asr	r1, r0, #31
   15f70:	umull	lr, r4, r3, r0
   15f74:	mla	r1, r3, r1, r4
   15f78:	mla	r0, ip, r0, r1
   15f7c:	str	lr, [r2, #304]	; 0x130
   15f80:	str	r0, [r2, #308]	; 0x134
   15f84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f88:	add	r0, r0, #1
   15f8c:	str	r0, [fp, #-48]	; 0xffffffd0
   15f90:	b	15f30 <dim_enter_array@@Base+0xbcc>
   15f94:	b	15f98 <dim_enter_array@@Base+0xc34>
   15f98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f9c:	ldr	r1, [fp, #-16]
   15fa0:	ldr	r1, [r1, #4]
   15fa4:	add	r0, r0, r1
   15fa8:	movw	r1, #4264	; 0x10a8
   15fac:	movt	r1, #3
   15fb0:	add	r0, r1, r0, lsl #3
   15fb4:	ldr	r1, [r0, #296]	; 0x128
   15fb8:	ldr	r0, [r0, #300]	; 0x12c
   15fbc:	subs	r1, r1, #1
   15fc0:	sbcs	r0, r0, #0
   15fc4:	blt	160d0 <dim_enter_array@@Base+0xd6c>
   15fc8:	b	15fcc <dim_enter_array@@Base+0xc68>
   15fcc:	movw	r0, #4264	; 0x10a8
   15fd0:	movt	r0, #3
   15fd4:	ldr	r1, [r0]
   15fd8:	sub	r1, r1, #1
   15fdc:	add	r2, r0, r1, lsl #2
   15fe0:	ldr	r2, [r2, #4]
   15fe4:	asr	r3, r2, #31
   15fe8:	add	r0, r0, r1, lsl #3
   15fec:	str	r2, [r0, #176]	; 0xb0
   15ff0:	str	r3, [r0, #180]	; 0xb4
   15ff4:	ldr	r0, [fp, #-16]
   15ff8:	ldr	r0, [r0, #4]
   15ffc:	sub	r0, r0, #2
   16000:	str	r0, [fp, #-48]	; 0xffffffd0
   16004:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16008:	cmp	r0, #0
   1600c:	blt	16064 <dim_enter_array@@Base+0xd00>
   16010:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16014:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16018:	add	r0, r0, r1
   1601c:	movw	r1, #4264	; 0x10a8
   16020:	movt	r1, #3
   16024:	add	r2, r1, r0, lsl #2
   16028:	ldr	r2, [r2, #4]
   1602c:	asr	r3, r2, #31
   16030:	add	r0, r1, r0, lsl #3
   16034:	ldr	r1, [r0, #184]	; 0xb8
   16038:	ldr	ip, [r0, #188]	; 0xbc
   1603c:	umull	lr, r4, r2, r1
   16040:	mla	r2, r2, ip, r4
   16044:	mla	r1, r3, r1, r2
   16048:	str	lr, [r0, #176]	; 0xb0
   1604c:	str	r1, [r0, #180]	; 0xb4
   16050:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16054:	mvn	r1, #0
   16058:	add	r0, r0, r1
   1605c:	str	r0, [fp, #-48]	; 0xffffffd0
   16060:	b	16004 <dim_enter_array@@Base+0xca0>
   16064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16068:	sub	r0, r0, #1
   1606c:	str	r0, [fp, #-48]	; 0xffffffd0
   16070:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16074:	cmp	r0, #0
   16078:	blt	160cc <dim_enter_array@@Base+0xd68>
   1607c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16080:	movw	r1, #4264	; 0x10a8
   16084:	movt	r1, #3
   16088:	add	r1, r1, #176	; 0xb0
   1608c:	mov	r2, r1
   16090:	ldr	r0, [r2, r0, lsl #3]!
   16094:	ldr	r2, [r2, #4]
   16098:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1609c:	ldr	r3, [r1, r3, lsl #3]!
   160a0:	ldr	ip, [r1, #4]
   160a4:	umull	lr, r4, r3, r0
   160a8:	mla	r2, r3, r2, r4
   160ac:	mla	r0, ip, r0, r2
   160b0:	str	lr, [r1]
   160b4:	str	r0, [r1, #4]
   160b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160bc:	mvn	r1, #0
   160c0:	add	r0, r0, r1
   160c4:	str	r0, [fp, #-48]	; 0xffffffd0
   160c8:	b	16070 <dim_enter_array@@Base+0xd0c>
   160cc:	b	160d0 <dim_enter_array@@Base+0xd6c>
   160d0:	sub	sp, fp, #8
   160d4:	pop	{r4, r5, fp, pc}
   160d8:	push	{fp, lr}
   160dc:	mov	fp, sp
   160e0:	sub	sp, sp, #128	; 0x80
   160e4:	movw	r3, #480	; 0x1e0
   160e8:	movt	r3, #3
   160ec:	add	r3, r3, #144	; 0x90
   160f0:	str	r0, [fp, #-4]
   160f4:	str	r1, [fp, #-8]
   160f8:	str	r2, [fp, #-12]
   160fc:	mov	r0, r3
   16100:	sub	r1, fp, #16
   16104:	bl	126e4 <coda_cursor_get_type_class@plt>
   16108:	cmp	r0, #0
   1610c:	beq	1611c <dim_enter_array@@Base+0xdb8>
   16110:	movw	r0, #43812	; 0xab24
   16114:	movt	r0, #1
   16118:	blx	r0
   1611c:	ldr	r0, [fp, #-16]
   16120:	cmp	r0, #0
   16124:	str	r0, [sp, #8]
   16128:	beq	165d0 <dim_enter_array@@Base+0x126c>
   1612c:	b	16130 <dim_enter_array@@Base+0xdcc>
   16130:	ldr	r0, [sp, #8]
   16134:	cmp	r0, #1
   16138:	beq	16154 <dim_enter_array@@Base+0xdf0>
   1613c:	b	16140 <dim_enter_array@@Base+0xddc>
   16140:	ldr	r0, [sp, #8]
   16144:	sub	r1, r0, #4
   16148:	cmp	r1, #2
   1614c:	bcc	167ec <dim_enter_array@@Base+0x1488>
   16150:	b	169f8 <dim_enter_array@@Base+0x1694>
   16154:	movw	r0, #480	; 0x1e0
   16158:	movt	r0, #3
   1615c:	add	r1, r0, #800	; 0x320
   16160:	ldr	r2, [fp, #-8]
   16164:	movw	r3, #80	; 0x50
   16168:	mul	r2, r2, r3
   1616c:	add	r1, r1, r2
   16170:	str	r1, [fp, #-20]	; 0xffffffec
   16174:	ldr	r1, [fp, #-20]	; 0xffffffec
   16178:	ldr	r1, [r1]
   1617c:	str	r1, [fp, #-24]	; 0xffffffe8
   16180:	ldr	r1, [fp, #-8]
   16184:	ldr	r0, [r0, #3360]	; 0xd20
   16188:	cmp	r1, r0
   1618c:	bne	163c0 <dim_enter_array@@Base+0x105c>
   16190:	movw	r0, #480	; 0x1e0
   16194:	movt	r0, #3
   16198:	add	r0, r0, #144	; 0x90
   1619c:	sub	r2, fp, #56	; 0x38
   161a0:	sub	r1, fp, #60	; 0x3c
   161a4:	bl	128d0 <coda_cursor_get_array_dim@plt>
   161a8:	cmp	r0, #0
   161ac:	beq	161bc <dim_enter_array@@Base+0xe58>
   161b0:	movw	r0, #43812	; 0xab24
   161b4:	movt	r0, #1
   161b8:	blx	r0
   161bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   161c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   161c4:	ldr	r1, [r1, #4]
   161c8:	cmp	r0, r1
   161cc:	bne	161d4 <dim_enter_array@@Base+0xe70>
   161d0:	b	161f4 <dim_enter_array@@Base+0xe90>
   161d4:	movw	r0, #56139	; 0xdb4b
   161d8:	movt	r0, #1
   161dc:	movw	r1, #55862	; 0xda36
   161e0:	movt	r1, #1
   161e4:	movw	r2, #125	; 0x7d
   161e8:	movw	r3, #56172	; 0xdb6c
   161ec:	movt	r3, #1
   161f0:	bl	129f0 <__assert_fail@plt>
   161f4:	movw	r0, #0
   161f8:	str	r0, [sp, #64]	; 0x40
   161fc:	ldr	r0, [sp, #64]	; 0x40
   16200:	ldr	r1, [fp, #-20]	; 0xffffffec
   16204:	ldr	r1, [r1, #4]
   16208:	cmp	r0, r1
   1620c:	bge	163bc <dim_enter_array@@Base+0x1058>
   16210:	ldr	r0, [fp, #-20]	; 0xffffffec
   16214:	add	r0, r0, #8
   16218:	ldr	r1, [sp, #64]	; 0x40
   1621c:	add	r0, r0, r1, lsl #2
   16220:	ldr	r0, [r0]
   16224:	cmn	r0, #1
   16228:	bne	163a8 <dim_enter_array@@Base+0x1044>
   1622c:	movw	r0, #4264	; 0x10a8
   16230:	movt	r0, #3
   16234:	add	r0, r0, #4
   16238:	ldr	r1, [sp, #64]	; 0x40
   1623c:	sub	r2, fp, #56	; 0x38
   16240:	ldr	r2, [r2, r1, lsl #2]
   16244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16248:	add	r1, r3, r1
   1624c:	movw	r3, #4264	; 0x10a8
   16250:	movt	r3, #3
   16254:	add	r1, r3, r1, lsl #2
   16258:	ldr	r1, [r1, #108]	; 0x6c
   1625c:	ldr	ip, [fp, #-20]	; 0xffffffec
   16260:	ldr	ip, [ip, #44]	; 0x2c
   16264:	str	r2, [r1, ip, lsl #2]
   16268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1626c:	ldr	r2, [sp, #64]	; 0x40
   16270:	add	r1, r1, r2
   16274:	add	r1, r3, r1, lsl #2
   16278:	add	r1, r1, #4
   1627c:	ldr	r1, [r1]
   16280:	cmn	r1, #1
   16284:	bne	162d8 <dim_enter_array@@Base+0xf74>
   16288:	movw	r0, #4264	; 0x10a8
   1628c:	movt	r0, #3
   16290:	add	r0, r0, #36	; 0x24
   16294:	ldr	r1, [sp, #64]	; 0x40
   16298:	sub	r2, fp, #56	; 0x38
   1629c:	ldr	r3, [r2, r1, lsl #2]
   162a0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   162a4:	add	r1, ip, r1
   162a8:	movw	ip, #4264	; 0x10a8
   162ac:	movt	ip, #3
   162b0:	add	r1, ip, r1, lsl #2
   162b4:	str	r3, [r1, #4]
   162b8:	ldr	r1, [sp, #64]	; 0x40
   162bc:	ldr	r2, [r2, r1, lsl #2]
   162c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162c4:	add	r1, r3, r1
   162c8:	add	r1, ip, r1, lsl #2
   162cc:	add	r1, r1, #36	; 0x24
   162d0:	str	r2, [r1]
   162d4:	b	163a4 <dim_enter_array@@Base+0x1040>
   162d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162dc:	ldr	r1, [sp, #64]	; 0x40
   162e0:	add	r0, r0, r1
   162e4:	movw	r2, #4264	; 0x10a8
   162e8:	movt	r2, #3
   162ec:	add	r0, r2, r0, lsl #2
   162f0:	ldr	r0, [r0, #4]
   162f4:	sub	r2, fp, #56	; 0x38
   162f8:	add	r1, r2, r1, lsl #2
   162fc:	ldr	r1, [r1]
   16300:	cmp	r0, r1
   16304:	bge	1633c <dim_enter_array@@Base+0xfd8>
   16308:	movw	r0, #4264	; 0x10a8
   1630c:	movt	r0, #3
   16310:	add	r0, r0, #4
   16314:	ldr	r1, [sp, #64]	; 0x40
   16318:	sub	r2, fp, #56	; 0x38
   1631c:	ldr	r2, [r2, r1, lsl #2]
   16320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16324:	add	r1, r3, r1
   16328:	movw	r3, #4264	; 0x10a8
   1632c:	movt	r3, #3
   16330:	add	r1, r3, r1, lsl #2
   16334:	add	r1, r1, #4
   16338:	str	r2, [r1]
   1633c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16340:	ldr	r1, [sp, #64]	; 0x40
   16344:	add	r0, r0, r1
   16348:	movw	r2, #4264	; 0x10a8
   1634c:	movt	r2, #3
   16350:	add	r0, r2, r0, lsl #2
   16354:	ldr	r0, [r0, #36]	; 0x24
   16358:	sub	r2, fp, #56	; 0x38
   1635c:	add	r1, r2, r1, lsl #2
   16360:	ldr	r1, [r1]
   16364:	cmp	r0, r1
   16368:	ble	163a0 <dim_enter_array@@Base+0x103c>
   1636c:	movw	r0, #4264	; 0x10a8
   16370:	movt	r0, #3
   16374:	add	r0, r0, #36	; 0x24
   16378:	ldr	r1, [sp, #64]	; 0x40
   1637c:	sub	r2, fp, #56	; 0x38
   16380:	ldr	r2, [r2, r1, lsl #2]
   16384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16388:	add	r1, r3, r1
   1638c:	movw	r3, #4264	; 0x10a8
   16390:	movt	r3, #3
   16394:	add	r1, r3, r1, lsl #2
   16398:	add	r1, r1, #36	; 0x24
   1639c:	str	r2, [r1]
   163a0:	b	163a4 <dim_enter_array@@Base+0x1040>
   163a4:	b	163a8 <dim_enter_array@@Base+0x1044>
   163a8:	b	163ac <dim_enter_array@@Base+0x1048>
   163ac:	ldr	r0, [sp, #64]	; 0x40
   163b0:	add	r0, r0, #1
   163b4:	str	r0, [sp, #64]	; 0x40
   163b8:	b	161fc <dim_enter_array@@Base+0xe98>
   163bc:	b	165cc <dim_enter_array@@Base+0x1268>
   163c0:	ldr	r0, [fp, #-8]
   163c4:	cmp	r0, #0
   163c8:	bne	163d8 <dim_enter_array@@Base+0x1074>
   163cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   163d0:	movw	r1, #0
   163d4:	str	r1, [r0, #44]	; 0x2c
   163d8:	movw	r0, #480	; 0x1e0
   163dc:	movt	r0, #3
   163e0:	add	r0, r0, #800	; 0x320
   163e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   163e8:	ldr	r1, [r1, #44]	; 0x2c
   163ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   163f0:	ldr	r2, [r2, #40]	; 0x28
   163f4:	mul	r1, r1, r2
   163f8:	ldr	r2, [fp, #-8]
   163fc:	add	r2, r2, #1
   16400:	movw	r3, #80	; 0x50
   16404:	mul	r2, r2, r3
   16408:	add	r0, r0, r2
   1640c:	str	r1, [r0, #44]	; 0x2c
   16410:	movw	r0, #1
   16414:	str	r0, [sp, #60]	; 0x3c
   16418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1641c:	str	r0, [sp, #56]	; 0x38
   16420:	ldr	r0, [sp, #56]	; 0x38
   16424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16428:	ldr	r2, [fp, #-20]	; 0xffffffec
   1642c:	ldr	r2, [r2, #4]
   16430:	add	r1, r1, r2
   16434:	cmp	r0, r1
   16438:	bge	164e0 <dim_enter_array@@Base+0x117c>
   1643c:	movw	r0, #4264	; 0x10a8
   16440:	movt	r0, #3
   16444:	add	r0, r0, #72	; 0x48
   16448:	ldr	r1, [sp, #56]	; 0x38
   1644c:	movw	r2, #4264	; 0x10a8
   16450:	movt	r2, #3
   16454:	add	r1, r2, r1, lsl #2
   16458:	add	r1, r1, #72	; 0x48
   1645c:	ldr	r1, [r1]
   16460:	cmp	r1, #0
   16464:	beq	1649c <dim_enter_array@@Base+0x1138>
   16468:	ldr	r0, [sp, #56]	; 0x38
   1646c:	movw	r1, #4264	; 0x10a8
   16470:	movt	r1, #3
   16474:	add	r0, r1, r0, lsl #2
   16478:	ldr	r0, [r0, #108]	; 0x6c
   1647c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16480:	ldr	r1, [r1, #44]	; 0x2c
   16484:	add	r0, r0, r1, lsl #2
   16488:	ldr	r0, [r0]
   1648c:	ldr	r1, [sp, #60]	; 0x3c
   16490:	mul	r0, r1, r0
   16494:	str	r0, [sp, #60]	; 0x3c
   16498:	b	164cc <dim_enter_array@@Base+0x1168>
   1649c:	movw	r0, #4264	; 0x10a8
   164a0:	movt	r0, #3
   164a4:	add	r0, r0, #4
   164a8:	ldr	r1, [sp, #56]	; 0x38
   164ac:	movw	r2, #4264	; 0x10a8
   164b0:	movt	r2, #3
   164b4:	add	r1, r2, r1, lsl #2
   164b8:	add	r1, r1, #4
   164bc:	ldr	r1, [r1]
   164c0:	ldr	r2, [sp, #60]	; 0x3c
   164c4:	mul	r1, r2, r1
   164c8:	str	r1, [sp, #60]	; 0x3c
   164cc:	b	164d0 <dim_enter_array@@Base+0x116c>
   164d0:	ldr	r0, [sp, #56]	; 0x38
   164d4:	add	r0, r0, #1
   164d8:	str	r0, [sp, #56]	; 0x38
   164dc:	b	16420 <dim_enter_array@@Base+0x10bc>
   164e0:	ldr	r0, [sp, #60]	; 0x3c
   164e4:	cmp	r0, #0
   164e8:	ble	165c8 <dim_enter_array@@Base+0x1264>
   164ec:	movw	r0, #480	; 0x1e0
   164f0:	movt	r0, #3
   164f4:	add	r0, r0, #144	; 0x90
   164f8:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   164fc:	cmp	r0, #0
   16500:	beq	16510 <dim_enter_array@@Base+0x11ac>
   16504:	movw	r0, #43812	; 0xab24
   16508:	movt	r0, #1
   1650c:	blx	r0
   16510:	movw	r0, #0
   16514:	str	r0, [sp, #52]	; 0x34
   16518:	ldr	r0, [sp, #52]	; 0x34
   1651c:	ldr	r1, [sp, #60]	; 0x3c
   16520:	cmp	r0, r1
   16524:	bge	165b8 <dim_enter_array@@Base+0x1254>
   16528:	ldr	r0, [fp, #-4]
   1652c:	add	r0, r0, #1
   16530:	ldr	r1, [fp, #-8]
   16534:	add	r1, r1, #1
   16538:	ldr	r2, [fp, #-12]
   1653c:	bl	160d8 <dim_enter_array@@Base+0xd74>
   16540:	ldr	r0, [sp, #52]	; 0x34
   16544:	ldr	r1, [sp, #60]	; 0x3c
   16548:	sub	r1, r1, #1
   1654c:	cmp	r0, r1
   16550:	bge	165a4 <dim_enter_array@@Base+0x1240>
   16554:	movw	r0, #480	; 0x1e0
   16558:	movt	r0, #3
   1655c:	add	r0, r0, #144	; 0x90
   16560:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   16564:	cmp	r0, #0
   16568:	beq	16578 <dim_enter_array@@Base+0x1214>
   1656c:	movw	r0, #43812	; 0xab24
   16570:	movt	r0, #1
   16574:	blx	r0
   16578:	movw	r0, #480	; 0x1e0
   1657c:	movt	r0, #3
   16580:	add	r0, r0, #800	; 0x320
   16584:	ldr	r1, [fp, #-8]
   16588:	add	r1, r1, #1
   1658c:	movw	r2, #80	; 0x50
   16590:	mul	r1, r1, r2
   16594:	add	r0, r0, r1
   16598:	ldr	r1, [r0, #44]	; 0x2c
   1659c:	add	r1, r1, #1
   165a0:	str	r1, [r0, #44]	; 0x2c
   165a4:	b	165a8 <dim_enter_array@@Base+0x1244>
   165a8:	ldr	r0, [sp, #52]	; 0x34
   165ac:	add	r0, r0, #1
   165b0:	str	r0, [sp, #52]	; 0x34
   165b4:	b	16518 <dim_enter_array@@Base+0x11b4>
   165b8:	movw	r0, #480	; 0x1e0
   165bc:	movt	r0, #3
   165c0:	add	r0, r0, #144	; 0x90
   165c4:	bl	127b0 <coda_cursor_goto_parent@plt>
   165c8:	b	165cc <dim_enter_array@@Base+0x1268>
   165cc:	b	16a18 <dim_enter_array@@Base+0x16b4>
   165d0:	movw	r0, #480	; 0x1e0
   165d4:	movt	r0, #3
   165d8:	add	r1, r0, #144	; 0x90
   165dc:	movw	r2, #3492	; 0xda4
   165e0:	add	r0, r0, r2
   165e4:	ldr	r2, [fp, #-12]
   165e8:	movw	r3, #480	; 0x1e0
   165ec:	movt	r3, #3
   165f0:	add	r2, r3, r2, lsl #2
   165f4:	movw	r3, #3492	; 0xda4
   165f8:	add	r2, r2, r3
   165fc:	ldr	r2, [r2]
   16600:	str	r0, [sp, #4]
   16604:	mov	r0, r1
   16608:	mov	r1, r2
   1660c:	add	r2, sp, #48	; 0x30
   16610:	bl	125f4 <coda_cursor_get_record_field_available_status@plt>
   16614:	cmp	r0, #0
   16618:	beq	16628 <dim_enter_array@@Base+0x12c4>
   1661c:	movw	r0, #43812	; 0xab24
   16620:	movt	r0, #1
   16624:	blx	r0
   16628:	ldr	r0, [sp, #48]	; 0x30
   1662c:	cmp	r0, #0
   16630:	beq	166b4 <dim_enter_array@@Base+0x1350>
   16634:	movw	r0, #480	; 0x1e0
   16638:	movt	r0, #3
   1663c:	add	r1, r0, #144	; 0x90
   16640:	movw	r2, #3492	; 0xda4
   16644:	add	r0, r0, r2
   16648:	ldr	r2, [fp, #-12]
   1664c:	movw	r3, #480	; 0x1e0
   16650:	movt	r3, #3
   16654:	add	r2, r3, r2, lsl #2
   16658:	movw	r3, #3492	; 0xda4
   1665c:	add	r2, r2, r3
   16660:	ldr	r2, [r2]
   16664:	str	r0, [sp]
   16668:	mov	r0, r1
   1666c:	mov	r1, r2
   16670:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   16674:	cmp	r0, #0
   16678:	beq	16688 <dim_enter_array@@Base+0x1324>
   1667c:	movw	r0, #43812	; 0xab24
   16680:	movt	r0, #1
   16684:	blx	r0
   16688:	ldr	r0, [fp, #-4]
   1668c:	add	r0, r0, #1
   16690:	ldr	r1, [fp, #-8]
   16694:	ldr	r2, [fp, #-12]
   16698:	add	r2, r2, #1
   1669c:	bl	160d8 <dim_enter_array@@Base+0xd74>
   166a0:	movw	r0, #480	; 0x1e0
   166a4:	movt	r0, #3
   166a8:	add	r0, r0, #144	; 0x90
   166ac:	bl	127b0 <coda_cursor_goto_parent@plt>
   166b0:	b	167e8 <dim_enter_array@@Base+0x1484>
   166b4:	movw	r0, #480	; 0x1e0
   166b8:	movt	r0, #3
   166bc:	add	r1, r0, #800	; 0x320
   166c0:	ldr	r0, [r0, #3360]	; 0xd20
   166c4:	movw	r2, #80	; 0x50
   166c8:	mul	r0, r0, r2
   166cc:	add	r0, r1, r0
   166d0:	str	r0, [sp, #44]	; 0x2c
   166d4:	ldr	r0, [sp, #44]	; 0x2c
   166d8:	ldr	r0, [r0]
   166dc:	str	r0, [sp, #40]	; 0x28
   166e0:	movw	r0, #0
   166e4:	str	r0, [sp, #36]	; 0x24
   166e8:	ldr	r0, [sp, #36]	; 0x24
   166ec:	ldr	r1, [sp, #44]	; 0x2c
   166f0:	ldr	r1, [r1, #4]
   166f4:	cmp	r0, r1
   166f8:	bge	167e4 <dim_enter_array@@Base+0x1480>
   166fc:	ldr	r0, [sp, #44]	; 0x2c
   16700:	add	r0, r0, #8
   16704:	ldr	r1, [sp, #36]	; 0x24
   16708:	add	r0, r0, r1, lsl #2
   1670c:	ldr	r0, [r0]
   16710:	cmn	r0, #1
   16714:	bne	167d0 <dim_enter_array@@Base+0x146c>
   16718:	movw	r0, #4264	; 0x10a8
   1671c:	movt	r0, #3
   16720:	add	r0, r0, #4
   16724:	ldr	r1, [sp, #40]	; 0x28
   16728:	ldr	r2, [sp, #36]	; 0x24
   1672c:	add	r1, r1, r2
   16730:	movw	r2, #4264	; 0x10a8
   16734:	movt	r2, #3
   16738:	add	r1, r2, r1, lsl #2
   1673c:	ldr	r1, [r1, #108]	; 0x6c
   16740:	ldr	r3, [sp, #44]	; 0x2c
   16744:	ldr	r3, [r3, #44]	; 0x2c
   16748:	mov	ip, #0
   1674c:	str	ip, [r1, r3, lsl #2]
   16750:	ldr	r1, [sp, #40]	; 0x28
   16754:	ldr	r3, [sp, #36]	; 0x24
   16758:	add	r1, r1, r3
   1675c:	add	r1, r2, r1, lsl #2
   16760:	add	r1, r1, #4
   16764:	ldr	r1, [r1]
   16768:	cmn	r1, #1
   1676c:	bne	167a0 <dim_enter_array@@Base+0x143c>
   16770:	movw	r0, #4264	; 0x10a8
   16774:	movt	r0, #3
   16778:	add	r0, r0, #4
   1677c:	ldr	r1, [sp, #40]	; 0x28
   16780:	ldr	r2, [sp, #36]	; 0x24
   16784:	add	r1, r1, r2
   16788:	movw	r2, #4264	; 0x10a8
   1678c:	movt	r2, #3
   16790:	add	r1, r2, r1, lsl #2
   16794:	add	r1, r1, #4
   16798:	movw	r2, #0
   1679c:	str	r2, [r1]
   167a0:	movw	r0, #4264	; 0x10a8
   167a4:	movt	r0, #3
   167a8:	add	r0, r0, #36	; 0x24
   167ac:	ldr	r1, [sp, #40]	; 0x28
   167b0:	ldr	r2, [sp, #36]	; 0x24
   167b4:	add	r1, r1, r2
   167b8:	movw	r2, #4264	; 0x10a8
   167bc:	movt	r2, #3
   167c0:	add	r1, r2, r1, lsl #2
   167c4:	add	r1, r1, #36	; 0x24
   167c8:	movw	r2, #0
   167cc:	str	r2, [r1]
   167d0:	b	167d4 <dim_enter_array@@Base+0x1470>
   167d4:	ldr	r0, [sp, #36]	; 0x24
   167d8:	add	r0, r0, #1
   167dc:	str	r0, [sp, #36]	; 0x24
   167e0:	b	166e8 <dim_enter_array@@Base+0x1384>
   167e4:	b	167e8 <dim_enter_array@@Base+0x1484>
   167e8:	b	16a18 <dim_enter_array@@Base+0x16b4>
   167ec:	ldr	r0, [fp, #-8]
   167f0:	movw	r1, #480	; 0x1e0
   167f4:	movt	r1, #3
   167f8:	ldr	r1, [r1, #3360]	; 0xd20
   167fc:	cmp	r0, r1
   16800:	bne	16808 <dim_enter_array@@Base+0x14a4>
   16804:	b	16828 <dim_enter_array@@Base+0x14c4>
   16808:	movw	r0, #56215	; 0xdb97
   1680c:	movt	r0, #1
   16810:	movw	r1, #55862	; 0xda36
   16814:	movt	r1, #1
   16818:	movw	r2, #252	; 0xfc
   1681c:	movw	r3, #56172	; 0xdb6c
   16820:	movt	r3, #1
   16824:	bl	129f0 <__assert_fail@plt>
   16828:	ldr	r0, [fp, #-16]
   1682c:	cmp	r0, #4
   16830:	bne	16870 <dim_enter_array@@Base+0x150c>
   16834:	movw	r0, #480	; 0x1e0
   16838:	movt	r0, #3
   1683c:	add	r0, r0, #144	; 0x90
   16840:	add	r1, sp, #12
   16844:	bl	127e0 <coda_cursor_get_string_length@plt>
   16848:	cmp	r0, #0
   1684c:	beq	1685c <dim_enter_array@@Base+0x14f8>
   16850:	movw	r0, #43812	; 0xab24
   16854:	movt	r0, #1
   16858:	blx	r0
   1685c:	ldr	r0, [sp, #12]
   16860:	asr	r1, r0, #31
   16864:	str	r0, [sp, #16]
   16868:	str	r1, [sp, #20]
   1686c:	b	1689c <dim_enter_array@@Base+0x1538>
   16870:	movw	r0, #480	; 0x1e0
   16874:	movt	r0, #3
   16878:	add	r0, r0, #144	; 0x90
   1687c:	add	r1, sp, #16
   16880:	bl	12588 <coda_cursor_get_byte_size@plt>
   16884:	cmp	r0, #0
   16888:	beq	16898 <dim_enter_array@@Base+0x1534>
   1688c:	movw	r0, #43812	; 0xab24
   16890:	movt	r0, #1
   16894:	blx	r0
   16898:	b	1689c <dim_enter_array@@Base+0x1538>
   1689c:	movw	r0, #4264	; 0x10a8
   168a0:	movt	r0, #3
   168a4:	add	r0, r0, #4
   168a8:	ldr	r1, [fp, #-8]
   168ac:	add	r1, r1, r1, lsl #2
   168b0:	movw	r2, #480	; 0x1e0
   168b4:	movt	r2, #3
   168b8:	add	r1, r2, r1, lsl #4
   168bc:	add	r1, r1, #800	; 0x320
   168c0:	str	r1, [sp, #32]
   168c4:	ldr	r1, [sp, #32]
   168c8:	ldr	r1, [r1]
   168cc:	str	r1, [sp, #28]
   168d0:	ldr	r1, [sp, #16]
   168d4:	ldr	r2, [sp, #28]
   168d8:	movw	r3, #4264	; 0x10a8
   168dc:	movt	r3, #3
   168e0:	add	r2, r3, r2, lsl #2
   168e4:	ldr	r2, [r2, #108]	; 0x6c
   168e8:	ldr	ip, [sp, #32]
   168ec:	ldr	ip, [ip, #44]	; 0x2c
   168f0:	str	r1, [r2, ip, lsl #2]
   168f4:	ldr	r1, [sp, #28]
   168f8:	add	r1, r3, r1, lsl #2
   168fc:	add	r1, r1, #4
   16900:	ldr	r1, [r1]
   16904:	cmn	r1, #1
   16908:	bne	16948 <dim_enter_array@@Base+0x15e4>
   1690c:	movw	r0, #4264	; 0x10a8
   16910:	movt	r0, #3
   16914:	add	r0, r0, #36	; 0x24
   16918:	ldr	r1, [sp, #16]
   1691c:	ldr	r2, [sp, #28]
   16920:	movw	r3, #4264	; 0x10a8
   16924:	movt	r3, #3
   16928:	add	r2, r3, r2, lsl #2
   1692c:	str	r1, [r2, #4]
   16930:	ldr	r1, [sp, #16]
   16934:	ldr	r2, [sp, #28]
   16938:	add	r2, r3, r2, lsl #2
   1693c:	add	r2, r2, #36	; 0x24
   16940:	str	r1, [r2]
   16944:	b	169f4 <dim_enter_array@@Base+0x1690>
   16948:	ldr	r0, [sp, #28]
   1694c:	movw	r1, #4264	; 0x10a8
   16950:	movt	r1, #3
   16954:	add	r0, r1, r0, lsl #2
   16958:	ldr	r0, [r0, #4]
   1695c:	ldr	r1, [sp, #16]
   16960:	ldr	r2, [sp, #20]
   16964:	subs	r1, r0, r1
   16968:	rscs	r0, r2, r0, asr #31
   1696c:	bge	1699c <dim_enter_array@@Base+0x1638>
   16970:	b	16974 <dim_enter_array@@Base+0x1610>
   16974:	movw	r0, #4264	; 0x10a8
   16978:	movt	r0, #3
   1697c:	add	r0, r0, #4
   16980:	ldr	r1, [sp, #16]
   16984:	ldr	r2, [sp, #28]
   16988:	movw	r3, #4264	; 0x10a8
   1698c:	movt	r3, #3
   16990:	add	r2, r3, r2, lsl #2
   16994:	add	r2, r2, #4
   16998:	str	r1, [r2]
   1699c:	ldr	r0, [sp, #28]
   169a0:	movw	r1, #4264	; 0x10a8
   169a4:	movt	r1, #3
   169a8:	add	r0, r1, r0, lsl #2
   169ac:	ldr	r0, [r0, #36]	; 0x24
   169b0:	ldr	r1, [sp, #16]
   169b4:	ldr	r2, [sp, #20]
   169b8:	subs	r1, r1, r0
   169bc:	sbcs	r0, r2, r0, asr #31
   169c0:	bge	169f0 <dim_enter_array@@Base+0x168c>
   169c4:	b	169c8 <dim_enter_array@@Base+0x1664>
   169c8:	movw	r0, #4264	; 0x10a8
   169cc:	movt	r0, #3
   169d0:	add	r0, r0, #36	; 0x24
   169d4:	ldr	r1, [sp, #16]
   169d8:	ldr	r2, [sp, #28]
   169dc:	movw	r3, #4264	; 0x10a8
   169e0:	movt	r3, #3
   169e4:	add	r2, r3, r2, lsl #2
   169e8:	add	r2, r2, #36	; 0x24
   169ec:	str	r1, [r2]
   169f0:	b	169f4 <dim_enter_array@@Base+0x1690>
   169f4:	b	16a18 <dim_enter_array@@Base+0x16b4>
   169f8:	movw	r0, #55815	; 0xda07
   169fc:	movt	r0, #1
   16a00:	movw	r1, #55862	; 0xda36
   16a04:	movt	r1, #1
   16a08:	movw	r2, #294	; 0x126
   16a0c:	movw	r3, #56172	; 0xdb6c
   16a10:	movt	r3, #1
   16a14:	bl	129f0 <__assert_fail@plt>
   16a18:	mov	sp, fp
   16a1c:	pop	{fp, pc}

00016a20 <dim_leave_array@@Base>:
   16a20:	push	{fp, lr}
   16a24:	mov	fp, sp
   16a28:	sub	sp, sp, #24
   16a2c:	movw	r0, #480	; 0x1e0
   16a30:	movt	r0, #3
   16a34:	ldr	r0, [r0, #3360]	; 0xd20
   16a38:	cmp	r0, #0
   16a3c:	blt	16a44 <dim_leave_array@@Base+0x24>
   16a40:	b	16a64 <dim_leave_array@@Base+0x44>
   16a44:	movw	r0, #56086	; 0xdb16
   16a48:	movt	r0, #1
   16a4c:	movw	r1, #55862	; 0xda36
   16a50:	movt	r1, #1
   16a54:	movw	r2, #579	; 0x243
   16a58:	movw	r3, #56116	; 0xdb34
   16a5c:	movt	r3, #1
   16a60:	bl	129f0 <__assert_fail@plt>
   16a64:	movw	r0, #480	; 0x1e0
   16a68:	movt	r0, #3
   16a6c:	add	r1, r0, #800	; 0x320
   16a70:	ldr	r0, [r0, #3360]	; 0xd20
   16a74:	movw	r2, #80	; 0x50
   16a78:	mul	r0, r0, r2
   16a7c:	add	r0, r1, r0
   16a80:	str	r0, [fp, #-4]
   16a84:	ldr	r0, [fp, #-4]
   16a88:	ldr	r0, [r0]
   16a8c:	str	r0, [fp, #-8]
   16a90:	ldr	r0, [fp, #-4]
   16a94:	ldr	r0, [r0, #4]
   16a98:	movw	r1, #4264	; 0x10a8
   16a9c:	movt	r1, #3
   16aa0:	ldr	r2, [r1]
   16aa4:	sub	r0, r2, r0
   16aa8:	str	r0, [r1]
   16aac:	movw	r0, #0
   16ab0:	str	r0, [sp, #12]
   16ab4:	ldr	r0, [sp, #12]
   16ab8:	ldr	r1, [fp, #-4]
   16abc:	ldr	r1, [r1, #4]
   16ac0:	cmp	r0, r1
   16ac4:	bge	16b48 <dim_leave_array@@Base+0x128>
   16ac8:	movw	r0, #4264	; 0x10a8
   16acc:	movt	r0, #3
   16ad0:	add	r0, r0, #72	; 0x48
   16ad4:	ldr	r1, [fp, #-8]
   16ad8:	ldr	r2, [sp, #12]
   16adc:	add	r1, r1, r2
   16ae0:	movw	r2, #4264	; 0x10a8
   16ae4:	movt	r2, #3
   16ae8:	add	r1, r2, r1, lsl #2
   16aec:	add	r1, r1, #72	; 0x48
   16af0:	ldr	r1, [r1]
   16af4:	cmp	r1, #0
   16af8:	beq	16b34 <dim_leave_array@@Base+0x114>
   16afc:	movw	r0, #4264	; 0x10a8
   16b00:	movt	r0, #3
   16b04:	add	r0, r0, #108	; 0x6c
   16b08:	ldr	r1, [fp, #-8]
   16b0c:	ldr	r2, [sp, #12]
   16b10:	add	r1, r1, r2
   16b14:	movw	r2, #4264	; 0x10a8
   16b18:	movt	r2, #3
   16b1c:	add	r1, r2, r1, lsl #2
   16b20:	add	r1, r1, #108	; 0x6c
   16b24:	ldr	r1, [r1]
   16b28:	str	r0, [sp, #8]
   16b2c:	mov	r0, r1
   16b30:	bl	12654 <free@plt>
   16b34:	b	16b38 <dim_leave_array@@Base+0x118>
   16b38:	ldr	r0, [sp, #12]
   16b3c:	add	r0, r0, #1
   16b40:	str	r0, [sp, #12]
   16b44:	b	16ab4 <dim_leave_array@@Base+0x94>
   16b48:	movw	r0, #4264	; 0x10a8
   16b4c:	movt	r0, #3
   16b50:	movw	r1, #0
   16b54:	str	r1, [r0, #68]	; 0x44
   16b58:	mvn	r2, #0
   16b5c:	str	r2, [r0, #104]	; 0x68
   16b60:	str	r1, [sp, #12]
   16b64:	ldr	r0, [sp, #12]
   16b68:	movw	r1, #4264	; 0x10a8
   16b6c:	movt	r1, #3
   16b70:	ldr	r1, [r1]
   16b74:	cmp	r0, r1
   16b78:	bge	16bd4 <dim_leave_array@@Base+0x1b4>
   16b7c:	movw	r0, #4264	; 0x10a8
   16b80:	movt	r0, #3
   16b84:	add	r0, r0, #72	; 0x48
   16b88:	ldr	r1, [sp, #12]
   16b8c:	movw	r2, #4264	; 0x10a8
   16b90:	movt	r2, #3
   16b94:	add	r1, r2, r1, lsl #2
   16b98:	add	r1, r1, #72	; 0x48
   16b9c:	ldr	r1, [r1]
   16ba0:	cmp	r1, #0
   16ba4:	beq	16bc0 <dim_leave_array@@Base+0x1a0>
   16ba8:	movw	r0, #1
   16bac:	movw	r1, #4264	; 0x10a8
   16bb0:	movt	r1, #3
   16bb4:	str	r0, [r1, #68]	; 0x44
   16bb8:	ldr	r0, [sp, #12]
   16bbc:	str	r0, [r1, #104]	; 0x68
   16bc0:	b	16bc4 <dim_leave_array@@Base+0x1a4>
   16bc4:	ldr	r0, [sp, #12]
   16bc8:	add	r0, r0, #1
   16bcc:	str	r0, [sp, #12]
   16bd0:	b	16b64 <dim_leave_array@@Base+0x144>
   16bd4:	ldr	r0, [fp, #-8]
   16bd8:	ldr	r1, [fp, #-4]
   16bdc:	ldr	r1, [r1, #4]
   16be0:	add	r0, r0, r1
   16be4:	movw	r1, #4264	; 0x10a8
   16be8:	movt	r1, #3
   16bec:	add	r0, r1, r0, lsl #3
   16bf0:	ldr	r1, [r0, #296]	; 0x128
   16bf4:	ldr	r0, [r0, #300]	; 0x12c
   16bf8:	subs	r1, r1, #1
   16bfc:	sbcs	r0, r0, #0
   16c00:	blt	16c84 <dim_leave_array@@Base+0x264>
   16c04:	b	16c08 <dim_leave_array@@Base+0x1e8>
   16c08:	ldr	r0, [fp, #-8]
   16c0c:	sub	r0, r0, #1
   16c10:	str	r0, [sp, #12]
   16c14:	ldr	r0, [sp, #12]
   16c18:	cmp	r0, #0
   16c1c:	blt	16c80 <dim_leave_array@@Base+0x260>
   16c20:	ldr	r0, [fp, #-8]
   16c24:	movw	r1, #4264	; 0x10a8
   16c28:	movt	r1, #3
   16c2c:	add	r1, r1, #176	; 0xb0
   16c30:	mov	r2, r1
   16c34:	ldr	r0, [r2, r0, lsl #3]!
   16c38:	ldr	r3, [r2, #4]
   16c3c:	ldr	r2, [sp, #12]
   16c40:	ldr	r2, [r1, r2, lsl #3]!
   16c44:	ldr	ip, [r1, #4]
   16c48:	str	r0, [sp, #4]
   16c4c:	mov	r0, r2
   16c50:	str	r1, [sp]
   16c54:	mov	r1, ip
   16c58:	ldr	r2, [sp, #4]
   16c5c:	bl	1d55c <main@@Base+0x29cc>
   16c60:	ldr	r2, [sp]
   16c64:	str	r1, [r2, #4]
   16c68:	str	r0, [r2]
   16c6c:	ldr	r0, [sp, #12]
   16c70:	mvn	r1, #0
   16c74:	add	r0, r0, r1
   16c78:	str	r0, [sp, #12]
   16c7c:	b	16c14 <dim_leave_array@@Base+0x1f4>
   16c80:	b	16c84 <dim_leave_array@@Base+0x264>
   16c84:	mov	sp, fp
   16c88:	pop	{fp, pc}

00016c8c <dim_record_field_available@@Base>:
   16c8c:	push	{fp, lr}
   16c90:	mov	fp, sp
   16c94:	sub	sp, sp, #8
   16c98:	movw	r0, #0
   16c9c:	str	r0, [sp, #4]
   16ca0:	ldr	r1, [sp, #4]
   16ca4:	ldr	r2, [sp, #4]
   16ca8:	bl	16cb4 <dim_record_field_available@@Base+0x28>
   16cac:	mov	sp, fp
   16cb0:	pop	{fp, pc}
   16cb4:	push	{fp, lr}
   16cb8:	mov	fp, sp
   16cbc:	sub	sp, sp, #56	; 0x38
   16cc0:	movw	r3, #480	; 0x1e0
   16cc4:	movt	r3, #3
   16cc8:	add	r3, r3, #144	; 0x90
   16ccc:	str	r0, [fp, #-8]
   16cd0:	str	r1, [fp, #-12]
   16cd4:	str	r2, [fp, #-16]
   16cd8:	mov	r0, r3
   16cdc:	sub	r1, fp, #20
   16ce0:	bl	126e4 <coda_cursor_get_type_class@plt>
   16ce4:	cmp	r0, #0
   16ce8:	beq	16cf8 <dim_record_field_available@@Base+0x6c>
   16cec:	movw	r0, #43812	; 0xab24
   16cf0:	movt	r0, #1
   16cf4:	blx	r0
   16cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cfc:	cmp	r0, #0
   16d00:	str	r0, [sp, #8]
   16d04:	beq	16fc4 <dim_record_field_available@@Base+0x338>
   16d08:	b	16d0c <dim_record_field_available@@Base+0x80>
   16d0c:	ldr	r0, [sp, #8]
   16d10:	cmp	r0, #1
   16d14:	bne	170f8 <dim_record_field_available@@Base+0x46c>
   16d18:	b	16d1c <dim_record_field_available@@Base+0x90>
   16d1c:	movw	r0, #480	; 0x1e0
   16d20:	movt	r0, #3
   16d24:	add	r1, r0, #800	; 0x320
   16d28:	ldr	r2, [fp, #-12]
   16d2c:	movw	r3, #80	; 0x50
   16d30:	mul	r2, r2, r3
   16d34:	add	r1, r1, r2
   16d38:	str	r1, [fp, #-24]	; 0xffffffe8
   16d3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d40:	ldr	r1, [r1]
   16d44:	str	r1, [sp, #24]
   16d48:	ldr	r1, [fp, #-12]
   16d4c:	ldr	r0, [r0, #3360]	; 0xd20
   16d50:	cmp	r1, r0
   16d54:	bge	16d5c <dim_record_field_available@@Base+0xd0>
   16d58:	b	16d7c <dim_record_field_available@@Base+0xf0>
   16d5c:	movw	r0, #56255	; 0xdbbf
   16d60:	movt	r0, #1
   16d64:	movw	r1, #55862	; 0xda36
   16d68:	movt	r1, #1
   16d6c:	movw	r2, #638	; 0x27e
   16d70:	movw	r3, #56294	; 0xdbe6
   16d74:	movt	r3, #1
   16d78:	bl	129f0 <__assert_fail@plt>
   16d7c:	ldr	r0, [fp, #-12]
   16d80:	cmp	r0, #0
   16d84:	bne	16d94 <dim_record_field_available@@Base+0x108>
   16d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d8c:	movw	r1, #0
   16d90:	str	r1, [r0, #44]	; 0x2c
   16d94:	ldr	r0, [fp, #-12]
   16d98:	movw	r1, #480	; 0x1e0
   16d9c:	movt	r1, #3
   16da0:	ldr	r1, [r1, #3360]	; 0xd20
   16da4:	cmp	r0, r1
   16da8:	bge	16de4 <dim_record_field_available@@Base+0x158>
   16dac:	movw	r0, #480	; 0x1e0
   16db0:	movt	r0, #3
   16db4:	add	r0, r0, #800	; 0x320
   16db8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dbc:	ldr	r1, [r1, #44]	; 0x2c
   16dc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16dc4:	ldr	r2, [r2, #40]	; 0x28
   16dc8:	mul	r1, r1, r2
   16dcc:	ldr	r2, [fp, #-12]
   16dd0:	add	r2, r2, #1
   16dd4:	movw	r3, #80	; 0x50
   16dd8:	mul	r2, r2, r3
   16ddc:	add	r0, r0, r2
   16de0:	str	r1, [r0, #44]	; 0x2c
   16de4:	movw	r0, #1
   16de8:	str	r0, [sp, #28]
   16dec:	ldr	r0, [sp, #24]
   16df0:	str	r0, [sp, #20]
   16df4:	ldr	r0, [sp, #20]
   16df8:	ldr	r1, [sp, #24]
   16dfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e00:	ldr	r2, [r2, #4]
   16e04:	add	r1, r1, r2
   16e08:	cmp	r0, r1
   16e0c:	bge	16eb4 <dim_record_field_available@@Base+0x228>
   16e10:	movw	r0, #4264	; 0x10a8
   16e14:	movt	r0, #3
   16e18:	add	r0, r0, #72	; 0x48
   16e1c:	ldr	r1, [sp, #20]
   16e20:	movw	r2, #4264	; 0x10a8
   16e24:	movt	r2, #3
   16e28:	add	r1, r2, r1, lsl #2
   16e2c:	add	r1, r1, #72	; 0x48
   16e30:	ldr	r1, [r1]
   16e34:	cmp	r1, #0
   16e38:	beq	16e70 <dim_record_field_available@@Base+0x1e4>
   16e3c:	ldr	r0, [sp, #20]
   16e40:	movw	r1, #4264	; 0x10a8
   16e44:	movt	r1, #3
   16e48:	add	r0, r1, r0, lsl #2
   16e4c:	ldr	r0, [r0, #108]	; 0x6c
   16e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e54:	ldr	r1, [r1, #44]	; 0x2c
   16e58:	add	r0, r0, r1, lsl #2
   16e5c:	ldr	r0, [r0]
   16e60:	ldr	r1, [sp, #28]
   16e64:	mul	r0, r1, r0
   16e68:	str	r0, [sp, #28]
   16e6c:	b	16ea0 <dim_record_field_available@@Base+0x214>
   16e70:	movw	r0, #4264	; 0x10a8
   16e74:	movt	r0, #3
   16e78:	add	r0, r0, #4
   16e7c:	ldr	r1, [sp, #20]
   16e80:	movw	r2, #4264	; 0x10a8
   16e84:	movt	r2, #3
   16e88:	add	r1, r2, r1, lsl #2
   16e8c:	add	r1, r1, #4
   16e90:	ldr	r1, [r1]
   16e94:	ldr	r2, [sp, #28]
   16e98:	mul	r1, r2, r1
   16e9c:	str	r1, [sp, #28]
   16ea0:	b	16ea4 <dim_record_field_available@@Base+0x218>
   16ea4:	ldr	r0, [sp, #20]
   16ea8:	add	r0, r0, #1
   16eac:	str	r0, [sp, #20]
   16eb0:	b	16df4 <dim_record_field_available@@Base+0x168>
   16eb4:	ldr	r0, [sp, #28]
   16eb8:	cmp	r0, #0
   16ebc:	ble	16fc0 <dim_record_field_available@@Base+0x334>
   16ec0:	movw	r0, #480	; 0x1e0
   16ec4:	movt	r0, #3
   16ec8:	add	r0, r0, #144	; 0x90
   16ecc:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   16ed0:	cmp	r0, #0
   16ed4:	beq	16ee4 <dim_record_field_available@@Base+0x258>
   16ed8:	movw	r0, #43812	; 0xab24
   16edc:	movt	r0, #1
   16ee0:	blx	r0
   16ee4:	movw	r0, #0
   16ee8:	str	r0, [sp, #16]
   16eec:	ldr	r0, [sp, #16]
   16ef0:	ldr	r1, [sp, #28]
   16ef4:	cmp	r0, r1
   16ef8:	bge	16fb0 <dim_record_field_available@@Base+0x324>
   16efc:	ldr	r0, [fp, #-8]
   16f00:	add	r0, r0, #1
   16f04:	ldr	r1, [fp, #-12]
   16f08:	add	r1, r1, #1
   16f0c:	ldr	r2, [fp, #-16]
   16f10:	bl	16cb4 <dim_record_field_available@@Base+0x28>
   16f14:	cmp	r0, #0
   16f18:	beq	16f38 <dim_record_field_available@@Base+0x2ac>
   16f1c:	movw	r0, #480	; 0x1e0
   16f20:	movt	r0, #3
   16f24:	add	r0, r0, #144	; 0x90
   16f28:	bl	127b0 <coda_cursor_goto_parent@plt>
   16f2c:	movw	r1, #1
   16f30:	str	r1, [fp, #-4]
   16f34:	b	17120 <dim_record_field_available@@Base+0x494>
   16f38:	ldr	r0, [sp, #16]
   16f3c:	ldr	r1, [sp, #28]
   16f40:	sub	r1, r1, #1
   16f44:	cmp	r0, r1
   16f48:	bge	16f9c <dim_record_field_available@@Base+0x310>
   16f4c:	movw	r0, #480	; 0x1e0
   16f50:	movt	r0, #3
   16f54:	add	r0, r0, #144	; 0x90
   16f58:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   16f5c:	cmp	r0, #0
   16f60:	beq	16f70 <dim_record_field_available@@Base+0x2e4>
   16f64:	movw	r0, #43812	; 0xab24
   16f68:	movt	r0, #1
   16f6c:	blx	r0
   16f70:	movw	r0, #480	; 0x1e0
   16f74:	movt	r0, #3
   16f78:	add	r0, r0, #800	; 0x320
   16f7c:	ldr	r1, [fp, #-12]
   16f80:	add	r1, r1, #1
   16f84:	movw	r2, #80	; 0x50
   16f88:	mul	r1, r1, r2
   16f8c:	add	r0, r0, r1
   16f90:	ldr	r1, [r0, #44]	; 0x2c
   16f94:	add	r1, r1, #1
   16f98:	str	r1, [r0, #44]	; 0x2c
   16f9c:	b	16fa0 <dim_record_field_available@@Base+0x314>
   16fa0:	ldr	r0, [sp, #16]
   16fa4:	add	r0, r0, #1
   16fa8:	str	r0, [sp, #16]
   16fac:	b	16eec <dim_record_field_available@@Base+0x260>
   16fb0:	movw	r0, #480	; 0x1e0
   16fb4:	movt	r0, #3
   16fb8:	add	r0, r0, #144	; 0x90
   16fbc:	bl	127b0 <coda_cursor_goto_parent@plt>
   16fc0:	b	17118 <dim_record_field_available@@Base+0x48c>
   16fc4:	movw	r0, #480	; 0x1e0
   16fc8:	movt	r0, #3
   16fcc:	add	r1, r0, #144	; 0x90
   16fd0:	movw	r2, #3492	; 0xda4
   16fd4:	add	r0, r0, r2
   16fd8:	ldr	r2, [fp, #-16]
   16fdc:	movw	r3, #480	; 0x1e0
   16fe0:	movt	r3, #3
   16fe4:	add	r2, r3, r2, lsl #2
   16fe8:	movw	r3, #3492	; 0xda4
   16fec:	add	r2, r2, r3
   16ff0:	ldr	r2, [r2]
   16ff4:	str	r0, [sp, #4]
   16ff8:	mov	r0, r1
   16ffc:	mov	r1, r2
   17000:	add	r2, sp, #12
   17004:	bl	125f4 <coda_cursor_get_record_field_available_status@plt>
   17008:	cmp	r0, #0
   1700c:	beq	1701c <dim_record_field_available@@Base+0x390>
   17010:	movw	r0, #43812	; 0xab24
   17014:	movt	r0, #1
   17018:	blx	r0
   1701c:	ldr	r0, [sp, #12]
   17020:	cmp	r0, #0
   17024:	beq	170f4 <dim_record_field_available@@Base+0x468>
   17028:	ldr	r0, [fp, #-16]
   1702c:	movw	r1, #480	; 0x1e0
   17030:	movt	r1, #3
   17034:	ldr	r1, [r1, #3748]	; 0xea4
   17038:	sub	r1, r1, #1
   1703c:	cmp	r0, r1
   17040:	bne	17050 <dim_record_field_available@@Base+0x3c4>
   17044:	movw	r0, #1
   17048:	str	r0, [fp, #-4]
   1704c:	b	17120 <dim_record_field_available@@Base+0x494>
   17050:	movw	r0, #480	; 0x1e0
   17054:	movt	r0, #3
   17058:	add	r1, r0, #144	; 0x90
   1705c:	movw	r2, #3492	; 0xda4
   17060:	add	r0, r0, r2
   17064:	ldr	r2, [fp, #-16]
   17068:	movw	r3, #480	; 0x1e0
   1706c:	movt	r3, #3
   17070:	add	r2, r3, r2, lsl #2
   17074:	movw	r3, #3492	; 0xda4
   17078:	add	r2, r2, r3
   1707c:	ldr	r2, [r2]
   17080:	str	r0, [sp]
   17084:	mov	r0, r1
   17088:	mov	r1, r2
   1708c:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   17090:	cmp	r0, #0
   17094:	beq	170a4 <dim_record_field_available@@Base+0x418>
   17098:	movw	r0, #43812	; 0xab24
   1709c:	movt	r0, #1
   170a0:	blx	r0
   170a4:	ldr	r0, [fp, #-8]
   170a8:	add	r0, r0, #1
   170ac:	ldr	r1, [fp, #-12]
   170b0:	ldr	r2, [fp, #-16]
   170b4:	add	r2, r2, #1
   170b8:	bl	16cb4 <dim_record_field_available@@Base+0x28>
   170bc:	movw	r1, #480	; 0x1e0
   170c0:	movt	r1, #3
   170c4:	add	r1, r1, #144	; 0x90
   170c8:	str	r0, [sp, #12]
   170cc:	mov	r0, r1
   170d0:	bl	127b0 <coda_cursor_goto_parent@plt>
   170d4:	ldr	r1, [sp, #12]
   170d8:	cmp	r1, #0
   170dc:	beq	170ec <dim_record_field_available@@Base+0x460>
   170e0:	movw	r0, #1
   170e4:	str	r0, [fp, #-4]
   170e8:	b	17120 <dim_record_field_available@@Base+0x494>
   170ec:	b	170f0 <dim_record_field_available@@Base+0x464>
   170f0:	b	170f4 <dim_record_field_available@@Base+0x468>
   170f4:	b	17118 <dim_record_field_available@@Base+0x48c>
   170f8:	movw	r0, #55815	; 0xda07
   170fc:	movt	r0, #1
   17100:	movw	r1, #55862	; 0xda36
   17104:	movt	r1, #1
   17108:	movw	r2, #729	; 0x2d9
   1710c:	movw	r3, #56294	; 0xdbe6
   17110:	movt	r3, #1
   17114:	bl	129f0 <__assert_fail@plt>
   17118:	movw	r0, #0
   1711c:	str	r0, [fp, #-4]
   17120:	ldr	r0, [fp, #-4]
   17124:	mov	sp, fp
   17128:	pop	{fp, pc}

0001712c <codadump_filter_create@@Base>:
   1712c:	push	{fp, lr}
   17130:	mov	fp, sp
   17134:	sub	sp, sp, #8
   17138:	str	r0, [sp, #4]
   1713c:	movw	r0, #0
   17140:	str	r0, [sp]
   17144:	ldr	r0, [sp, #4]
   17148:	mov	r1, sp
   1714c:	bl	1715c <codadump_filter_create@@Base+0x30>
   17150:	ldr	r0, [sp]
   17154:	mov	sp, fp
   17158:	pop	{fp, pc}
   1715c:	push	{fp, lr}
   17160:	mov	fp, sp
   17164:	sub	sp, sp, #16
   17168:	str	r0, [fp, #-4]
   1716c:	str	r1, [sp, #8]
   17170:	movw	r0, #0
   17174:	str	r0, [sp, #4]
   17178:	ldr	r1, [fp, #-4]
   1717c:	str	r1, [sp]
   17180:	ldr	r1, [fp, #-4]
   17184:	cmp	r1, r0
   17188:	bne	17190 <codadump_filter_create@@Base+0x64>
   1718c:	b	171e8 <codadump_filter_create@@Base+0xbc>
   17190:	b	17194 <codadump_filter_create@@Base+0x68>
   17194:	ldr	r0, [sp]
   17198:	ldrb	r0, [r0]
   1719c:	cmp	r0, #0
   171a0:	beq	171e8 <codadump_filter_create@@Base+0xbc>
   171a4:	ldr	r0, [sp]
   171a8:	add	r1, sp, #4
   171ac:	mov	r2, sp
   171b0:	bl	173ec <codadump_filter_get_next_filter@@Base+0x54>
   171b4:	ldr	r0, [sp, #4]
   171b8:	movw	r1, #0
   171bc:	cmp	r0, r1
   171c0:	bne	171d0 <codadump_filter_create@@Base+0xa4>
   171c4:	ldr	r0, [sp, #8]
   171c8:	bl	171f0 <codadump_filter_remove@@Base>
   171cc:	b	171e8 <codadump_filter_create@@Base+0xbc>
   171d0:	ldr	r0, [sp, #8]
   171d4:	ldr	r1, [sp, #4]
   171d8:	bl	17848 <codadump_filter_get_next_filter@@Base+0x4b0>
   171dc:	movw	r0, #0
   171e0:	str	r0, [sp, #4]
   171e4:	b	17194 <codadump_filter_create@@Base+0x68>
   171e8:	mov	sp, fp
   171ec:	pop	{fp, pc}

000171f0 <codadump_filter_remove@@Base>:
   171f0:	push	{fp, lr}
   171f4:	mov	fp, sp
   171f8:	sub	sp, sp, #8
   171fc:	str	r0, [sp, #4]
   17200:	ldr	r0, [sp, #4]
   17204:	movw	r1, #0
   17208:	cmp	r0, r1
   1720c:	beq	17214 <codadump_filter_remove@@Base+0x24>
   17210:	b	17234 <codadump_filter_remove@@Base+0x44>
   17214:	movw	r0, #56347	; 0xdc1b
   17218:	movt	r0, #1
   1721c:	movw	r1, #56362	; 0xdc2a
   17220:	movt	r1, #1
   17224:	movw	r2, #192	; 0xc0
   17228:	movw	r3, #56447	; 0xdc7f
   1722c:	movt	r3, #1
   17230:	bl	129f0 <__assert_fail@plt>
   17234:	ldr	r0, [sp, #4]
   17238:	ldr	r0, [r0]
   1723c:	movw	r1, #0
   17240:	cmp	r0, r1
   17244:	beq	172e8 <codadump_filter_remove@@Base+0xf8>
   17248:	ldr	r0, [sp, #4]
   1724c:	ldr	r0, [r0]
   17250:	ldr	r0, [r0, #8]
   17254:	movw	r1, #0
   17258:	cmp	r0, r1
   1725c:	beq	17270 <codadump_filter_remove@@Base+0x80>
   17260:	ldr	r0, [sp, #4]
   17264:	ldr	r0, [r0]
   17268:	add	r0, r0, #8
   1726c:	bl	171f0 <codadump_filter_remove@@Base>
   17270:	ldr	r0, [sp, #4]
   17274:	ldr	r0, [r0]
   17278:	ldr	r0, [r0, #4]
   1727c:	movw	r1, #0
   17280:	cmp	r0, r1
   17284:	beq	17298 <codadump_filter_remove@@Base+0xa8>
   17288:	ldr	r0, [sp, #4]
   1728c:	ldr	r0, [r0]
   17290:	add	r0, r0, #4
   17294:	bl	171f0 <codadump_filter_remove@@Base>
   17298:	ldr	r0, [sp, #4]
   1729c:	ldr	r0, [r0]
   172a0:	ldr	r0, [r0]
   172a4:	movw	r1, #0
   172a8:	cmp	r0, r1
   172ac:	beq	172d0 <codadump_filter_remove@@Base+0xe0>
   172b0:	ldr	r0, [sp, #4]
   172b4:	ldr	r0, [r0]
   172b8:	ldr	r0, [r0]
   172bc:	bl	12654 <free@plt>
   172c0:	ldr	r0, [sp, #4]
   172c4:	ldr	r0, [r0]
   172c8:	movw	r1, #0
   172cc:	str	r1, [r0]
   172d0:	ldr	r0, [sp, #4]
   172d4:	ldr	r0, [r0]
   172d8:	bl	12654 <free@plt>
   172dc:	ldr	r0, [sp, #4]
   172e0:	movw	r1, #0
   172e4:	str	r1, [r0]
   172e8:	mov	sp, fp
   172ec:	pop	{fp, pc}

000172f0 <codadump_filter_get_fieldname@@Base>:
   172f0:	push	{fp, lr}
   172f4:	mov	fp, sp
   172f8:	sub	sp, sp, #8
   172fc:	str	r0, [sp, #4]
   17300:	ldr	r0, [sp, #4]
   17304:	movw	r1, #0
   17308:	cmp	r0, r1
   1730c:	beq	17314 <codadump_filter_get_fieldname@@Base+0x24>
   17310:	b	17334 <codadump_filter_get_fieldname@@Base+0x44>
   17314:	movw	r0, #56347	; 0xdc1b
   17318:	movt	r0, #1
   1731c:	movw	r1, #56362	; 0xdc2a
   17320:	movt	r1, #1
   17324:	movw	r2, #216	; 0xd8
   17328:	movw	r3, #56495	; 0xdcaf
   1732c:	movt	r3, #1
   17330:	bl	129f0 <__assert_fail@plt>
   17334:	ldr	r0, [sp, #4]
   17338:	ldr	r0, [r0]
   1733c:	mov	sp, fp
   17340:	pop	{fp, pc}

00017344 <codadump_filter_get_subfilter@@Base>:
   17344:	push	{fp, lr}
   17348:	mov	fp, sp
   1734c:	sub	sp, sp, #8
   17350:	str	r0, [sp, #4]
   17354:	ldr	r0, [sp, #4]
   17358:	movw	r1, #0
   1735c:	cmp	r0, r1
   17360:	beq	17368 <codadump_filter_get_subfilter@@Base+0x24>
   17364:	b	17388 <codadump_filter_get_subfilter@@Base+0x44>
   17368:	movw	r0, #56347	; 0xdc1b
   1736c:	movt	r0, #1
   17370:	movw	r1, #56362	; 0xdc2a
   17374:	movt	r1, #1
   17378:	movw	r2, #223	; 0xdf
   1737c:	movw	r3, #56556	; 0xdcec
   17380:	movt	r3, #1
   17384:	bl	129f0 <__assert_fail@plt>
   17388:	ldr	r0, [sp, #4]
   1738c:	ldr	r0, [r0, #4]
   17390:	mov	sp, fp
   17394:	pop	{fp, pc}

00017398 <codadump_filter_get_next_filter@@Base>:
   17398:	push	{fp, lr}
   1739c:	mov	fp, sp
   173a0:	sub	sp, sp, #8
   173a4:	str	r0, [sp, #4]
   173a8:	ldr	r0, [sp, #4]
   173ac:	movw	r1, #0
   173b0:	cmp	r0, r1
   173b4:	beq	173bc <codadump_filter_get_next_filter@@Base+0x24>
   173b8:	b	173dc <codadump_filter_get_next_filter@@Base+0x44>
   173bc:	movw	r0, #56347	; 0xdc1b
   173c0:	movt	r0, #1
   173c4:	movw	r1, #56362	; 0xdc2a
   173c8:	movt	r1, #1
   173cc:	movw	r2, #230	; 0xe6
   173d0:	movw	r3, #56622	; 0xdd2e
   173d4:	movt	r3, #1
   173d8:	bl	129f0 <__assert_fail@plt>
   173dc:	ldr	r0, [sp, #4]
   173e0:	ldr	r0, [r0, #8]
   173e4:	mov	sp, fp
   173e8:	pop	{fp, pc}
   173ec:	push	{fp, lr}
   173f0:	mov	fp, sp
   173f4:	sub	sp, sp, #40	; 0x28
   173f8:	str	r0, [fp, #-4]
   173fc:	str	r1, [fp, #-8]
   17400:	str	r2, [fp, #-12]
   17404:	movw	r0, #0
   17408:	str	r0, [fp, #-16]
   1740c:	ldr	r1, [fp, #-4]
   17410:	cmp	r1, r0
   17414:	beq	1741c <codadump_filter_get_next_filter@@Base+0x84>
   17418:	b	1743c <codadump_filter_get_next_filter@@Base+0xa4>
   1741c:	movw	r0, #56690	; 0xdd72
   17420:	movt	r0, #1
   17424:	movw	r1, #56362	; 0xdc2a
   17428:	movt	r1, #1
   1742c:	movw	r2, #44	; 0x2c
   17430:	movw	r3, #56710	; 0xdd86
   17434:	movt	r3, #1
   17438:	bl	129f0 <__assert_fail@plt>
   1743c:	ldr	r0, [fp, #-8]
   17440:	movw	r1, #0
   17444:	cmp	r0, r1
   17448:	beq	17450 <codadump_filter_get_next_filter@@Base+0xb8>
   1744c:	b	17470 <codadump_filter_get_next_filter@@Base+0xd8>
   17450:	movw	r0, #56347	; 0xdc1b
   17454:	movt	r0, #1
   17458:	movw	r1, #56362	; 0xdc2a
   1745c:	movt	r1, #1
   17460:	movw	r2, #45	; 0x2d
   17464:	movw	r3, #56710	; 0xdd86
   17468:	movt	r3, #1
   1746c:	bl	129f0 <__assert_fail@plt>
   17470:	ldr	r0, [fp, #-12]
   17474:	movw	r1, #0
   17478:	cmp	r0, r1
   1747c:	beq	17484 <codadump_filter_get_next_filter@@Base+0xec>
   17480:	b	174a4 <codadump_filter_get_next_filter@@Base+0x10c>
   17484:	movw	r0, #56774	; 0xddc6
   17488:	movt	r0, #1
   1748c:	movw	r1, #56362	; 0xdc2a
   17490:	movt	r1, #1
   17494:	movw	r2, #46	; 0x2e
   17498:	movw	r3, #56710	; 0xdd86
   1749c:	movt	r3, #1
   174a0:	bl	129f0 <__assert_fail@plt>
   174a4:	b	174a8 <codadump_filter_get_next_filter@@Base+0x110>
   174a8:	ldr	r0, [fp, #-4]
   174ac:	ldrb	r0, [r0]
   174b0:	cmp	r0, #32
   174b4:	movw	r0, #1
   174b8:	str	r0, [sp, #16]
   174bc:	beq	174f0 <codadump_filter_get_next_filter@@Base+0x158>
   174c0:	ldr	r0, [fp, #-4]
   174c4:	ldrb	r0, [r0]
   174c8:	cmp	r0, #9
   174cc:	movw	r0, #1
   174d0:	str	r0, [sp, #16]
   174d4:	beq	174f0 <codadump_filter_get_next_filter@@Base+0x158>
   174d8:	ldr	r0, [fp, #-4]
   174dc:	ldrb	r0, [r0]
   174e0:	cmp	r0, #10
   174e4:	movw	r0, #0
   174e8:	moveq	r0, #1
   174ec:	str	r0, [sp, #16]
   174f0:	ldr	r0, [sp, #16]
   174f4:	tst	r0, #1
   174f8:	beq	1750c <codadump_filter_get_next_filter@@Base+0x174>
   174fc:	ldr	r0, [fp, #-4]
   17500:	add	r0, r0, #1
   17504:	str	r0, [fp, #-4]
   17508:	b	174a8 <codadump_filter_get_next_filter@@Base+0x110>
   1750c:	b	17510 <codadump_filter_get_next_filter@@Base+0x178>
   17510:	ldr	r0, [fp, #-4]
   17514:	ldr	r1, [fp, #-16]
   17518:	add	r0, r0, r1
   1751c:	ldrb	r0, [r0]
   17520:	cmp	r0, #0
   17524:	movw	r0, #0
   17528:	str	r0, [sp, #12]
   1752c:	beq	17590 <codadump_filter_get_next_filter@@Base+0x1f8>
   17530:	ldr	r0, [fp, #-4]
   17534:	ldr	r1, [fp, #-16]
   17538:	add	r0, r0, r1
   1753c:	ldrb	r0, [r0]
   17540:	cmp	r0, #46	; 0x2e
   17544:	movw	r0, #0
   17548:	str	r0, [sp, #12]
   1754c:	beq	17590 <codadump_filter_get_next_filter@@Base+0x1f8>
   17550:	ldr	r0, [fp, #-4]
   17554:	ldr	r1, [fp, #-16]
   17558:	add	r0, r0, r1
   1755c:	ldrb	r0, [r0]
   17560:	cmp	r0, #59	; 0x3b
   17564:	movw	r0, #0
   17568:	str	r0, [sp, #12]
   1756c:	beq	17590 <codadump_filter_get_next_filter@@Base+0x1f8>
   17570:	ldr	r0, [fp, #-4]
   17574:	ldr	r1, [fp, #-16]
   17578:	add	r0, r0, r1
   1757c:	ldrb	r0, [r0]
   17580:	cmp	r0, #44	; 0x2c
   17584:	movw	r0, #0
   17588:	movne	r0, #1
   1758c:	str	r0, [sp, #12]
   17590:	ldr	r0, [sp, #12]
   17594:	tst	r0, #1
   17598:	beq	175ac <codadump_filter_get_next_filter@@Base+0x214>
   1759c:	ldr	r0, [fp, #-16]
   175a0:	add	r0, r0, #1
   175a4:	str	r0, [fp, #-16]
   175a8:	b	17510 <codadump_filter_get_next_filter@@Base+0x178>
   175ac:	ldr	r0, [fp, #-16]
   175b0:	cmp	r0, #0
   175b4:	ble	17834 <codadump_filter_get_next_filter@@Base+0x49c>
   175b8:	ldr	r0, [fp, #-16]
   175bc:	str	r0, [sp, #20]
   175c0:	movw	r0, #12
   175c4:	bl	12780 <malloc@plt>
   175c8:	ldr	r1, [fp, #-8]
   175cc:	str	r0, [r1]
   175d0:	ldr	r0, [fp, #-8]
   175d4:	ldr	r0, [r0]
   175d8:	movw	r1, #0
   175dc:	cmp	r0, r1
   175e0:	bne	17614 <codadump_filter_get_next_filter@@Base+0x27c>
   175e4:	mvn	r0, #0
   175e8:	movw	r1, #55264	; 0xd7e0
   175ec:	movt	r1, #1
   175f0:	movw	r2, #12
   175f4:	movw	r3, #56362	; 0xdc2a
   175f8:	movt	r3, #1
   175fc:	movw	ip, #69	; 0x45
   17600:	str	ip, [sp]
   17604:	bl	1260c <coda_set_error@plt>
   17608:	movw	r0, #43812	; 0xab24
   1760c:	movt	r0, #1
   17610:	blx	r0
   17614:	ldr	r0, [fp, #-16]
   17618:	add	r0, r0, #1
   1761c:	bl	12780 <malloc@plt>
   17620:	ldr	r1, [fp, #-8]
   17624:	ldr	r1, [r1]
   17628:	str	r0, [r1]
   1762c:	ldr	r0, [fp, #-8]
   17630:	ldr	r0, [r0]
   17634:	ldr	r0, [r0]
   17638:	movw	r1, #0
   1763c:	cmp	r0, r1
   17640:	bne	17678 <codadump_filter_get_next_filter@@Base+0x2e0>
   17644:	ldr	r0, [fp, #-16]
   17648:	add	r2, r0, #1
   1764c:	mvn	r0, #0
   17650:	movw	r1, #56787	; 0xddd3
   17654:	movt	r1, #1
   17658:	movw	r3, #56362	; 0xdc2a
   1765c:	movt	r3, #1
   17660:	movw	ip, #76	; 0x4c
   17664:	str	ip, [sp]
   17668:	bl	1260c <coda_set_error@plt>
   1766c:	movw	r0, #43812	; 0xab24
   17670:	movt	r0, #1
   17674:	blx	r0
   17678:	ldr	r0, [fp, #-8]
   1767c:	ldr	r0, [r0]
   17680:	ldr	r0, [r0]
   17684:	ldr	r1, [fp, #-4]
   17688:	ldr	r2, [fp, #-16]
   1768c:	bl	12870 <strncpy@plt>
   17690:	ldr	r1, [fp, #-8]
   17694:	ldr	r1, [r1]
   17698:	movw	r2, #0
   1769c:	str	r2, [r1, #4]
   176a0:	ldr	r1, [fp, #-8]
   176a4:	ldr	r1, [r1]
   176a8:	str	r2, [r1, #8]
   176ac:	ldr	r0, [fp, #-8]
   176b0:	ldr	r0, [r0]
   176b4:	ldr	r0, [r0]
   176b8:	ldr	r1, [fp, #-16]
   176bc:	sub	r1, r1, #1
   176c0:	add	r0, r0, r1
   176c4:	ldrb	r0, [r0]
   176c8:	cmp	r0, #32
   176cc:	movw	r0, #1
   176d0:	str	r0, [sp, #8]
   176d4:	beq	17730 <codadump_filter_get_next_filter@@Base+0x398>
   176d8:	ldr	r0, [fp, #-8]
   176dc:	ldr	r0, [r0]
   176e0:	ldr	r0, [r0]
   176e4:	ldr	r1, [fp, #-16]
   176e8:	sub	r1, r1, #1
   176ec:	add	r0, r0, r1
   176f0:	ldrb	r0, [r0]
   176f4:	cmp	r0, #9
   176f8:	movw	r0, #1
   176fc:	str	r0, [sp, #8]
   17700:	beq	17730 <codadump_filter_get_next_filter@@Base+0x398>
   17704:	ldr	r0, [fp, #-8]
   17708:	ldr	r0, [r0]
   1770c:	ldr	r0, [r0]
   17710:	ldr	r1, [fp, #-16]
   17714:	sub	r1, r1, #1
   17718:	add	r0, r0, r1
   1771c:	ldrb	r0, [r0]
   17720:	cmp	r0, #10
   17724:	movw	r0, #0
   17728:	moveq	r0, #1
   1772c:	str	r0, [sp, #8]
   17730:	ldr	r0, [sp, #8]
   17734:	tst	r0, #1
   17738:	beq	17750 <codadump_filter_get_next_filter@@Base+0x3b8>
   1773c:	ldr	r0, [fp, #-16]
   17740:	mvn	r1, #0
   17744:	add	r0, r0, r1
   17748:	str	r0, [fp, #-16]
   1774c:	b	176ac <codadump_filter_get_next_filter@@Base+0x314>
   17750:	ldr	r0, [fp, #-8]
   17754:	ldr	r0, [r0]
   17758:	ldr	r0, [r0]
   1775c:	ldr	r1, [fp, #-16]
   17760:	add	r0, r0, r1
   17764:	movw	r1, #0
   17768:	strb	r1, [r0]
   1776c:	ldr	r0, [fp, #-4]
   17770:	ldr	r1, [sp, #20]
   17774:	add	r0, r0, r1
   17778:	ldrb	r0, [r0]
   1777c:	cmp	r0, #46	; 0x2e
   17780:	bne	177cc <codadump_filter_get_next_filter@@Base+0x434>
   17784:	ldr	r0, [fp, #-4]
   17788:	ldr	r1, [sp, #20]
   1778c:	add	r1, r1, #1
   17790:	add	r0, r0, r1
   17794:	ldr	r1, [fp, #-8]
   17798:	ldr	r1, [r1]
   1779c:	add	r1, r1, #4
   177a0:	ldr	r2, [fp, #-12]
   177a4:	bl	173ec <codadump_filter_get_next_filter@@Base+0x54>
   177a8:	ldr	r0, [fp, #-8]
   177ac:	ldr	r0, [r0]
   177b0:	ldr	r0, [r0, #4]
   177b4:	movw	r1, #0
   177b8:	cmp	r0, r1
   177bc:	bne	177c8 <codadump_filter_get_next_filter@@Base+0x430>
   177c0:	ldr	r0, [fp, #-8]
   177c4:	bl	171f0 <codadump_filter_remove@@Base>
   177c8:	b	17830 <codadump_filter_get_next_filter@@Base+0x498>
   177cc:	ldr	r0, [fp, #-4]
   177d0:	ldr	r1, [sp, #20]
   177d4:	add	r0, r0, r1
   177d8:	ldrb	r0, [r0]
   177dc:	cmp	r0, #59	; 0x3b
   177e0:	beq	177fc <codadump_filter_get_next_filter@@Base+0x464>
   177e4:	ldr	r0, [fp, #-4]
   177e8:	ldr	r1, [sp, #20]
   177ec:	add	r0, r0, r1
   177f0:	ldrb	r0, [r0]
   177f4:	cmp	r0, #44	; 0x2c
   177f8:	bne	17818 <codadump_filter_get_next_filter@@Base+0x480>
   177fc:	ldr	r0, [fp, #-4]
   17800:	ldr	r1, [sp, #20]
   17804:	add	r1, r1, #1
   17808:	add	r0, r0, r1
   1780c:	ldr	r1, [fp, #-12]
   17810:	str	r0, [r1]
   17814:	b	1782c <codadump_filter_get_next_filter@@Base+0x494>
   17818:	ldr	r0, [fp, #-4]
   1781c:	ldr	r1, [sp, #20]
   17820:	add	r0, r0, r1
   17824:	ldr	r1, [fp, #-12]
   17828:	str	r0, [r1]
   1782c:	b	17830 <codadump_filter_get_next_filter@@Base+0x498>
   17830:	b	17840 <codadump_filter_get_next_filter@@Base+0x4a8>
   17834:	ldr	r0, [fp, #-8]
   17838:	movw	r1, #0
   1783c:	str	r1, [r0]
   17840:	mov	sp, fp
   17844:	pop	{fp, pc}
   17848:	push	{fp, lr}
   1784c:	mov	fp, sp
   17850:	sub	sp, sp, #8
   17854:	str	r0, [sp, #4]
   17858:	str	r1, [sp]
   1785c:	ldr	r0, [sp, #4]
   17860:	movw	r1, #0
   17864:	cmp	r0, r1
   17868:	beq	17870 <codadump_filter_get_next_filter@@Base+0x4d8>
   1786c:	b	17890 <codadump_filter_get_next_filter@@Base+0x4f8>
   17870:	movw	r0, #56347	; 0xdc1b
   17874:	movt	r0, #1
   17878:	movw	r1, #56362	; 0xdc2a
   1787c:	movt	r1, #1
   17880:	movw	r2, #117	; 0x75
   17884:	movw	r3, #56839	; 0xde07
   17888:	movt	r3, #1
   1788c:	bl	129f0 <__assert_fail@plt>
   17890:	ldr	r0, [sp]
   17894:	movw	r1, #0
   17898:	cmp	r0, r1
   1789c:	bne	178a4 <codadump_filter_get_next_filter@@Base+0x50c>
   178a0:	b	179a0 <codadump_filter_get_next_filter@@Base+0x608>
   178a4:	ldr	r0, [sp, #4]
   178a8:	ldr	r0, [r0]
   178ac:	movw	r1, #0
   178b0:	cmp	r0, r1
   178b4:	bne	178c8 <codadump_filter_get_next_filter@@Base+0x530>
   178b8:	ldr	r0, [sp]
   178bc:	ldr	r1, [sp, #4]
   178c0:	str	r0, [r1]
   178c4:	b	179a0 <codadump_filter_get_next_filter@@Base+0x608>
   178c8:	ldr	r0, [sp, #4]
   178cc:	ldr	r0, [r0]
   178d0:	ldr	r0, [r0]
   178d4:	ldr	r1, [sp]
   178d8:	ldr	r1, [r1]
   178dc:	bl	125d0 <strcmp@plt>
   178e0:	cmp	r0, #0
   178e4:	bne	1795c <codadump_filter_get_next_filter@@Base+0x5c4>
   178e8:	ldr	r0, [sp, #4]
   178ec:	ldr	r0, [r0]
   178f0:	ldr	r0, [r0, #4]
   178f4:	movw	r1, #0
   178f8:	cmp	r0, r1
   178fc:	beq	17950 <codadump_filter_get_next_filter@@Base+0x5b8>
   17900:	ldr	r0, [sp]
   17904:	ldr	r0, [r0, #4]
   17908:	movw	r1, #0
   1790c:	cmp	r0, r1
   17910:	beq	1793c <codadump_filter_get_next_filter@@Base+0x5a4>
   17914:	ldr	r0, [sp, #4]
   17918:	ldr	r0, [r0]
   1791c:	add	r0, r0, #4
   17920:	ldr	r1, [sp]
   17924:	ldr	r1, [r1, #4]
   17928:	bl	17848 <codadump_filter_get_next_filter@@Base+0x4b0>
   1792c:	ldr	r0, [sp]
   17930:	movw	r1, #0
   17934:	str	r1, [r0, #4]
   17938:	b	1794c <codadump_filter_get_next_filter@@Base+0x5b4>
   1793c:	ldr	r0, [sp, #4]
   17940:	ldr	r0, [r0]
   17944:	add	r0, r0, #4
   17948:	bl	171f0 <codadump_filter_remove@@Base>
   1794c:	b	17950 <codadump_filter_get_next_filter@@Base+0x5b8>
   17950:	mov	r0, sp
   17954:	bl	171f0 <codadump_filter_remove@@Base>
   17958:	b	179a0 <codadump_filter_get_next_filter@@Base+0x608>
   1795c:	ldr	r0, [sp, #4]
   17960:	ldr	r0, [r0]
   17964:	ldr	r0, [r0, #8]
   17968:	movw	r1, #0
   1796c:	cmp	r0, r1
   17970:	beq	1798c <codadump_filter_get_next_filter@@Base+0x5f4>
   17974:	ldr	r0, [sp, #4]
   17978:	ldr	r0, [r0]
   1797c:	add	r0, r0, #8
   17980:	ldr	r1, [sp]
   17984:	bl	17848 <codadump_filter_get_next_filter@@Base+0x4b0>
   17988:	b	1799c <codadump_filter_get_next_filter@@Base+0x604>
   1798c:	ldr	r0, [sp]
   17990:	ldr	r1, [sp, #4]
   17994:	ldr	r1, [r1]
   17998:	str	r0, [r1, #8]
   1799c:	b	179a0 <codadump_filter_get_next_filter@@Base+0x608>
   179a0:	mov	sp, fp
   179a4:	pop	{fp, pc}

000179a8 <print_json_data@@Base>:
   179a8:	push	{r4, r5, fp, lr}
   179ac:	add	fp, sp, #8
   179b0:	sub	sp, sp, #544	; 0x220
   179b4:	str	r0, [fp, #-12]
   179b8:	ldr	r0, [fp, #-12]
   179bc:	movw	r1, #440	; 0x1b8
   179c0:	movt	r1, #3
   179c4:	str	r0, [r1]
   179c8:	movw	r0, #480	; 0x1e0
   179cc:	movt	r0, #3
   179d0:	ldr	r0, [r0]
   179d4:	sub	r1, fp, #16
   179d8:	bl	12618 <coda_open@plt>
   179dc:	str	r0, [sp, #12]
   179e0:	ldr	r0, [sp, #12]
   179e4:	cmp	r0, #0
   179e8:	beq	17a2c <print_json_data@@Base+0x84>
   179ec:	bl	129a8 <coda_get_errno@plt>
   179f0:	ldr	r0, [r0]
   179f4:	cmn	r0, #21
   179f8:	bne	17a2c <print_json_data@@Base+0x84>
   179fc:	movw	r0, #0
   17a00:	bl	12660 <coda_set_option_use_mmap@plt>
   17a04:	movw	r1, #480	; 0x1e0
   17a08:	movt	r1, #3
   17a0c:	ldr	r1, [r1]
   17a10:	str	r0, [sp, #8]
   17a14:	mov	r0, r1
   17a18:	sub	r1, fp, #16
   17a1c:	bl	12618 <coda_open@plt>
   17a20:	str	r0, [sp, #12]
   17a24:	movw	r0, #1
   17a28:	bl	12660 <coda_set_option_use_mmap@plt>
   17a2c:	ldr	r0, [sp, #12]
   17a30:	cmp	r0, #0
   17a34:	beq	17a44 <print_json_data@@Base+0x9c>
   17a38:	movw	r0, #43812	; 0xab24
   17a3c:	movt	r0, #1
   17a40:	blx	r0
   17a44:	ldr	r1, [fp, #-16]
   17a48:	add	r0, sp, #16
   17a4c:	bl	12738 <coda_cursor_set_product@plt>
   17a50:	cmp	r0, #0
   17a54:	beq	17a64 <print_json_data@@Base+0xbc>
   17a58:	movw	r0, #43812	; 0xab24
   17a5c:	movt	r0, #1
   17a60:	blx	r0
   17a64:	movw	r0, #4256	; 0x10a0
   17a68:	movt	r0, #3
   17a6c:	ldr	r0, [r0]
   17a70:	movw	r1, #0
   17a74:	cmp	r0, r1
   17a78:	beq	17ab0 <print_json_data@@Base+0x108>
   17a7c:	movw	r0, #4256	; 0x10a0
   17a80:	movt	r0, #3
   17a84:	ldr	r1, [r0]
   17a88:	add	r0, sp, #16
   17a8c:	bl	1290c <coda_cursor_goto@plt>
   17a90:	str	r0, [sp, #12]
   17a94:	ldr	r0, [sp, #12]
   17a98:	cmp	r0, #0
   17a9c:	beq	17aac <print_json_data@@Base+0x104>
   17aa0:	movw	r0, #43812	; 0xab24
   17aa4:	movt	r0, #1
   17aa8:	blx	r0
   17aac:	b	17ab0 <print_json_data@@Base+0x108>
   17ab0:	movw	r0, #0
   17ab4:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   17ab8:	add	r1, sp, #16
   17abc:	str	r0, [sp, #4]
   17ac0:	mov	r0, r1
   17ac4:	bl	17aec <print_json_data@@Base+0x144>
   17ac8:	movw	r0, #61913	; 0xf1d9
   17acc:	movt	r0, #1
   17ad0:	bl	18568 <print_json_data@@Base+0xbc0>
   17ad4:	ldr	r1, [fp, #-16]
   17ad8:	str	r0, [sp]
   17adc:	mov	r0, r1
   17ae0:	bl	128e8 <coda_close@plt>
   17ae4:	sub	sp, fp, #8
   17ae8:	pop	{r4, r5, fp, pc}
   17aec:	push	{r4, r5, fp, lr}
   17af0:	add	fp, sp, #8
   17af4:	sub	sp, sp, #352	; 0x160
   17af8:	str	r0, [fp, #-12]
   17afc:	movw	r0, #0
   17b00:	str	r0, [fp, #-20]	; 0xffffffec
   17b04:	movw	r0, #440	; 0x1b8
   17b08:	movt	r0, #3
   17b0c:	ldr	r0, [r0]
   17b10:	cmp	r0, #0
   17b14:	beq	17b9c <print_json_data@@Base+0x1f4>
   17b18:	ldr	r0, [fp, #-12]
   17b1c:	sub	r1, fp, #20
   17b20:	bl	126d8 <coda_cursor_has_attributes@plt>
   17b24:	cmp	r0, #0
   17b28:	beq	17b38 <print_json_data@@Base+0x190>
   17b2c:	movw	r0, #43812	; 0xab24
   17b30:	movt	r0, #1
   17b34:	blx	r0
   17b38:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b3c:	cmp	r0, #0
   17b40:	beq	17b98 <print_json_data@@Base+0x1f0>
   17b44:	movw	r0, #56894	; 0xde3e
   17b48:	movt	r0, #1
   17b4c:	bl	18568 <print_json_data@@Base+0xbc0>
   17b50:	ldr	r1, [fp, #-12]
   17b54:	str	r0, [sp, #68]	; 0x44
   17b58:	mov	r0, r1
   17b5c:	bl	1284c <coda_cursor_goto_attributes@plt>
   17b60:	cmp	r0, #0
   17b64:	beq	17b74 <print_json_data@@Base+0x1cc>
   17b68:	movw	r0, #43812	; 0xab24
   17b6c:	movt	r0, #1
   17b70:	blx	r0
   17b74:	ldr	r0, [fp, #-12]
   17b78:	bl	17aec <print_json_data@@Base+0x144>
   17b7c:	ldr	r0, [fp, #-12]
   17b80:	bl	127b0 <coda_cursor_goto_parent@plt>
   17b84:	movw	r1, #56903	; 0xde47
   17b88:	movt	r1, #1
   17b8c:	str	r0, [sp, #64]	; 0x40
   17b90:	mov	r0, r1
   17b94:	bl	18568 <print_json_data@@Base+0xbc0>
   17b98:	b	17b9c <print_json_data@@Base+0x1f4>
   17b9c:	ldr	r0, [fp, #-12]
   17ba0:	sub	r1, fp, #16
   17ba4:	bl	126e4 <coda_cursor_get_type_class@plt>
   17ba8:	cmp	r0, #0
   17bac:	beq	17bbc <print_json_data@@Base+0x214>
   17bb0:	movw	r0, #43812	; 0xab24
   17bb4:	movt	r0, #1
   17bb8:	blx	r0
   17bbc:	ldr	r0, [fp, #-16]
   17bc0:	cmp	r0, #6
   17bc4:	str	r0, [sp, #60]	; 0x3c
   17bc8:	bhi	18548 <print_json_data@@Base+0xba0>
   17bcc:	add	r0, pc, #8
   17bd0:	ldr	r1, [sp, #60]	; 0x3c
   17bd4:	ldr	r0, [r0, r1, lsl #2]
   17bd8:	mov	pc, r0
   17bdc:	strdeq	r7, [r1], -r8
   17be0:	andeq	r7, r1, ip, asr #28
   17be4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17be8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17bec:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17bf0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17bf4:	ldrdeq	r8, [r1], -r0
   17bf8:	movw	r0, #56912	; 0xde50
   17bfc:	movt	r0, #1
   17c00:	bl	18568 <print_json_data@@Base+0xbc0>
   17c04:	ldr	r1, [fp, #-12]
   17c08:	str	r0, [sp, #56]	; 0x38
   17c0c:	mov	r0, r1
   17c10:	sub	r1, fp, #24
   17c14:	bl	1263c <coda_cursor_get_num_elements@plt>
   17c18:	cmp	r0, #0
   17c1c:	beq	17c2c <print_json_data@@Base+0x284>
   17c20:	movw	r0, #43812	; 0xab24
   17c24:	movt	r0, #1
   17c28:	blx	r0
   17c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c30:	cmp	r0, #0
   17c34:	ble	17e3c <print_json_data@@Base+0x494>
   17c38:	ldr	r0, [fp, #-12]
   17c3c:	sub	r1, fp, #28
   17c40:	bl	1269c <coda_cursor_get_type@plt>
   17c44:	cmp	r0, #0
   17c48:	beq	17c58 <print_json_data@@Base+0x2b0>
   17c4c:	movw	r0, #43812	; 0xab24
   17c50:	movt	r0, #1
   17c54:	blx	r0
   17c58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c5c:	sub	r1, fp, #32
   17c60:	bl	12888 <coda_type_get_record_union_status@plt>
   17c64:	cmp	r0, #0
   17c68:	beq	17c78 <print_json_data@@Base+0x2d0>
   17c6c:	movw	r0, #43812	; 0xab24
   17c70:	movt	r0, #1
   17c74:	blx	r0
   17c78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c7c:	cmp	r0, #0
   17c80:	beq	17d14 <print_json_data@@Base+0x36c>
   17c84:	ldr	r0, [fp, #-12]
   17c88:	sub	r1, fp, #36	; 0x24
   17c8c:	bl	12978 <coda_cursor_get_available_union_field_index@plt>
   17c90:	cmp	r0, #0
   17c94:	beq	17ca4 <print_json_data@@Base+0x2fc>
   17c98:	movw	r0, #43812	; 0xab24
   17c9c:	movt	r0, #1
   17ca0:	blx	r0
   17ca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ca8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17cac:	sub	r2, fp, #40	; 0x28
   17cb0:	bl	129c0 <coda_type_get_record_field_name@plt>
   17cb4:	cmp	r0, #0
   17cb8:	beq	17cc8 <print_json_data@@Base+0x320>
   17cbc:	movw	r0, #43812	; 0xab24
   17cc0:	movt	r0, #1
   17cc4:	blx	r0
   17cc8:	ldr	r0, [fp, #-12]
   17ccc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17cd0:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   17cd4:	cmp	r0, #0
   17cd8:	beq	17ce8 <print_json_data@@Base+0x340>
   17cdc:	movw	r0, #43812	; 0xab24
   17ce0:	movt	r0, #1
   17ce4:	blx	r0
   17ce8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17cec:	movw	r0, #56914	; 0xde52
   17cf0:	movt	r0, #1
   17cf4:	bl	18568 <print_json_data@@Base+0xbc0>
   17cf8:	ldr	r1, [fp, #-12]
   17cfc:	str	r0, [sp, #52]	; 0x34
   17d00:	mov	r0, r1
   17d04:	bl	17aec <print_json_data@@Base+0x144>
   17d08:	ldr	r0, [fp, #-12]
   17d0c:	bl	127b0 <coda_cursor_goto_parent@plt>
   17d10:	b	17e38 <print_json_data@@Base+0x490>
   17d14:	movw	r0, #1
   17d18:	str	r0, [fp, #-44]	; 0xffffffd4
   17d1c:	ldr	r0, [fp, #-12]
   17d20:	bl	12750 <coda_cursor_goto_first_record_field@plt>
   17d24:	cmp	r0, #0
   17d28:	beq	17d38 <print_json_data@@Base+0x390>
   17d2c:	movw	r0, #43812	; 0xab24
   17d30:	movt	r0, #1
   17d34:	blx	r0
   17d38:	movw	r0, #0
   17d3c:	str	r0, [fp, #-36]	; 0xffffffdc
   17d40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d48:	cmp	r0, r1
   17d4c:	bge	17e30 <print_json_data@@Base+0x488>
   17d50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17d54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17d58:	sub	r2, fp, #52	; 0x34
   17d5c:	bl	125dc <coda_type_get_record_field_hidden_status@plt>
   17d60:	cmp	r0, #0
   17d64:	beq	17d74 <print_json_data@@Base+0x3cc>
   17d68:	movw	r0, #43812	; 0xab24
   17d6c:	movt	r0, #1
   17d70:	blx	r0
   17d74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17d78:	cmp	r0, #0
   17d7c:	bne	17de8 <print_json_data@@Base+0x440>
   17d80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17d84:	cmp	r0, #0
   17d88:	bne	17d9c <print_json_data@@Base+0x3f4>
   17d8c:	movw	r0, #55992	; 0xdab8
   17d90:	movt	r0, #1
   17d94:	bl	18568 <print_json_data@@Base+0xbc0>
   17d98:	b	17da4 <print_json_data@@Base+0x3fc>
   17d9c:	movw	r0, #0
   17da0:	str	r0, [fp, #-44]	; 0xffffffd4
   17da4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17da8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17dac:	sub	r2, fp, #48	; 0x30
   17db0:	bl	129c0 <coda_type_get_record_field_name@plt>
   17db4:	cmp	r0, #0
   17db8:	beq	17dc8 <print_json_data@@Base+0x420>
   17dbc:	movw	r0, #43812	; 0xab24
   17dc0:	movt	r0, #1
   17dc4:	blx	r0
   17dc8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17dcc:	movw	r0, #56914	; 0xde52
   17dd0:	movt	r0, #1
   17dd4:	bl	18568 <print_json_data@@Base+0xbc0>
   17dd8:	ldr	r1, [fp, #-12]
   17ddc:	str	r0, [sp, #48]	; 0x30
   17de0:	mov	r0, r1
   17de4:	bl	17aec <print_json_data@@Base+0x144>
   17de8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17dec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17df0:	sub	r1, r1, #1
   17df4:	cmp	r0, r1
   17df8:	bge	17e1c <print_json_data@@Base+0x474>
   17dfc:	ldr	r0, [fp, #-12]
   17e00:	bl	12930 <coda_cursor_goto_next_record_field@plt>
   17e04:	cmp	r0, #0
   17e08:	beq	17e18 <print_json_data@@Base+0x470>
   17e0c:	movw	r0, #43812	; 0xab24
   17e10:	movt	r0, #1
   17e14:	blx	r0
   17e18:	b	17e1c <print_json_data@@Base+0x474>
   17e1c:	b	17e20 <print_json_data@@Base+0x478>
   17e20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e24:	add	r0, r0, #1
   17e28:	str	r0, [fp, #-36]	; 0xffffffdc
   17e2c:	b	17d40 <print_json_data@@Base+0x398>
   17e30:	ldr	r0, [fp, #-12]
   17e34:	bl	127b0 <coda_cursor_goto_parent@plt>
   17e38:	b	17e3c <print_json_data@@Base+0x494>
   17e3c:	movw	r0, #56920	; 0xde58
   17e40:	movt	r0, #1
   17e44:	bl	18568 <print_json_data@@Base+0xbc0>
   17e48:	b	18548 <print_json_data@@Base+0xba0>
   17e4c:	movw	r0, #57096	; 0xdf08
   17e50:	movt	r0, #1
   17e54:	bl	18568 <print_json_data@@Base+0xbc0>
   17e58:	sub	r2, fp, #84	; 0x54
   17e5c:	ldr	r1, [fp, #-12]
   17e60:	str	r0, [sp, #44]	; 0x2c
   17e64:	mov	r0, r1
   17e68:	sub	r1, fp, #88	; 0x58
   17e6c:	bl	128d0 <coda_cursor_get_array_dim@plt>
   17e70:	cmp	r0, #0
   17e74:	beq	17e84 <print_json_data@@Base+0x4dc>
   17e78:	movw	r0, #43812	; 0xab24
   17e7c:	movt	r0, #1
   17e80:	blx	r0
   17e84:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17e88:	cmp	r0, #0
   17e8c:	blt	17f8c <print_json_data@@Base+0x5e4>
   17e90:	movw	r0, #1
   17e94:	str	r0, [fp, #-92]	; 0xffffffa4
   17e98:	movw	r0, #0
   17e9c:	str	r0, [fp, #-96]	; 0xffffffa0
   17ea0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17ea4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17ea8:	cmp	r0, r1
   17eac:	bge	17edc <print_json_data@@Base+0x534>
   17eb0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17eb4:	sub	r1, fp, #84	; 0x54
   17eb8:	add	r0, r1, r0, lsl #2
   17ebc:	ldr	r0, [r0]
   17ec0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17ec4:	mul	r0, r1, r0
   17ec8:	str	r0, [fp, #-92]	; 0xffffffa4
   17ecc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17ed0:	add	r0, r0, #1
   17ed4:	str	r0, [fp, #-96]	; 0xffffffa0
   17ed8:	b	17ea0 <print_json_data@@Base+0x4f8>
   17edc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17ee0:	cmp	r0, #0
   17ee4:	ble	17f88 <print_json_data@@Base+0x5e0>
   17ee8:	ldr	r0, [fp, #-12]
   17eec:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   17ef0:	cmp	r0, #0
   17ef4:	beq	17f04 <print_json_data@@Base+0x55c>
   17ef8:	movw	r0, #43812	; 0xab24
   17efc:	movt	r0, #1
   17f00:	blx	r0
   17f04:	movw	r0, #0
   17f08:	str	r0, [fp, #-96]	; 0xffffffa0
   17f0c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17f10:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17f14:	cmp	r0, r1
   17f18:	bge	17f80 <print_json_data@@Base+0x5d8>
   17f1c:	ldr	r0, [fp, #-12]
   17f20:	bl	17aec <print_json_data@@Base+0x144>
   17f24:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17f28:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17f2c:	sub	r1, r1, #1
   17f30:	cmp	r0, r1
   17f34:	bge	17f6c <print_json_data@@Base+0x5c4>
   17f38:	movw	r0, #55992	; 0xdab8
   17f3c:	movt	r0, #1
   17f40:	bl	18568 <print_json_data@@Base+0xbc0>
   17f44:	ldr	r1, [fp, #-12]
   17f48:	str	r0, [sp, #40]	; 0x28
   17f4c:	mov	r0, r1
   17f50:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   17f54:	cmp	r0, #0
   17f58:	beq	17f68 <print_json_data@@Base+0x5c0>
   17f5c:	movw	r0, #43812	; 0xab24
   17f60:	movt	r0, #1
   17f64:	blx	r0
   17f68:	b	17f6c <print_json_data@@Base+0x5c4>
   17f6c:	b	17f70 <print_json_data@@Base+0x5c8>
   17f70:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17f74:	add	r0, r0, #1
   17f78:	str	r0, [fp, #-96]	; 0xffffffa0
   17f7c:	b	17f0c <print_json_data@@Base+0x564>
   17f80:	ldr	r0, [fp, #-12]
   17f84:	bl	127b0 <coda_cursor_goto_parent@plt>
   17f88:	b	17f8c <print_json_data@@Base+0x5e4>
   17f8c:	movw	r0, #57345	; 0xe001
   17f90:	movt	r0, #1
   17f94:	bl	18568 <print_json_data@@Base+0xbc0>
   17f98:	b	18548 <print_json_data@@Base+0xba0>
   17f9c:	ldr	r0, [fp, #-12]
   17fa0:	sub	r1, fp, #100	; 0x64
   17fa4:	bl	12774 <coda_cursor_get_read_type@plt>
   17fa8:	cmp	r0, #0
   17fac:	beq	17fbc <print_json_data@@Base+0x614>
   17fb0:	movw	r0, #43812	; 0xab24
   17fb4:	movt	r0, #1
   17fb8:	blx	r0
   17fbc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17fc0:	add	r0, r0, #1
   17fc4:	cmp	r0, #13
   17fc8:	str	r0, [sp, #36]	; 0x24
   17fcc:	bhi	183cc <print_json_data@@Base+0xa24>
   17fd0:	add	r0, pc, #8
   17fd4:	ldr	r1, [sp, #36]	; 0x24
   17fd8:	ldr	r0, [r0, r1, lsl #2]
   17fdc:	mov	pc, r0
   17fe0:	andeq	r8, r1, r0, asr #7
   17fe4:	andeq	r8, r1, r4, ror r2
   17fe8:	andeq	r8, r1, r8, lsr #5
   17fec:	andeq	r8, r1, r4, ror r2
   17ff0:	andeq	r8, r1, r8, lsr #5
   17ff4:	andeq	r8, r1, r4, ror r2
   17ff8:	andeq	r8, r1, r8, lsr #5
   17ffc:	ldrdeq	r8, [r1], -ip
   18000:	andeq	r8, r1, r0, lsr #6
   18004:	andeq	r8, r1, r4, ror #6
   18008:	andeq	r8, r1, r4, ror #6
   1800c:	andeq	r8, r1, r8, lsl r0
   18010:	andeq	r8, r1, r8, rrx
   18014:	andeq	r8, r1, ip, asr #2
   18018:	ldr	r0, [fp, #-12]
   1801c:	sub	r1, fp, #101	; 0x65
   18020:	bl	12858 <coda_cursor_read_char@plt>
   18024:	cmp	r0, #0
   18028:	beq	18038 <print_json_data@@Base+0x690>
   1802c:	movw	r0, #43812	; 0xab24
   18030:	movt	r0, #1
   18034:	blx	r0
   18038:	movw	r0, #57078	; 0xdef6
   1803c:	movt	r0, #1
   18040:	bl	18568 <print_json_data@@Base+0xbc0>
   18044:	sub	r1, fp, #101	; 0x65
   18048:	str	r0, [sp, #32]
   1804c:	mov	r0, r1
   18050:	movw	r1, #1
   18054:	bl	185cc <print_json_data@@Base+0xc24>
   18058:	movw	r0, #57078	; 0xdef6
   1805c:	movt	r0, #1
   18060:	bl	18568 <print_json_data@@Base+0xbc0>
   18064:	b	183cc <print_json_data@@Base+0xa24>
   18068:	ldr	r0, [fp, #-12]
   1806c:	sub	r1, fp, #108	; 0x6c
   18070:	bl	127e0 <coda_cursor_get_string_length@plt>
   18074:	cmp	r0, #0
   18078:	beq	18088 <print_json_data@@Base+0x6e0>
   1807c:	movw	r0, #43812	; 0xab24
   18080:	movt	r0, #1
   18084:	blx	r0
   18088:	ldr	r0, [fp, #-108]	; 0xffffff94
   1808c:	add	r0, r0, #1
   18090:	bl	12780 <malloc@plt>
   18094:	str	r0, [fp, #-112]	; 0xffffff90
   18098:	ldr	r0, [fp, #-112]	; 0xffffff90
   1809c:	movw	r1, #0
   180a0:	cmp	r0, r1
   180a4:	bne	180dc <print_json_data@@Base+0x734>
   180a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   180ac:	add	r2, r0, #1
   180b0:	mvn	r0, #0
   180b4:	movw	r1, #55264	; 0xd7e0
   180b8:	movt	r1, #1
   180bc:	movw	r3, #56922	; 0xde5a
   180c0:	movt	r3, #1
   180c4:	movw	ip, #303	; 0x12f
   180c8:	str	ip, [sp]
   180cc:	bl	1260c <coda_set_error@plt>
   180d0:	movw	r0, #43812	; 0xab24
   180d4:	movt	r0, #1
   180d8:	blx	r0
   180dc:	ldr	r0, [fp, #-12]
   180e0:	ldr	r1, [fp, #-112]	; 0xffffff90
   180e4:	ldr	r2, [fp, #-108]	; 0xffffff94
   180e8:	add	r2, r2, #1
   180ec:	bl	127a4 <coda_cursor_read_string@plt>
   180f0:	cmp	r0, #0
   180f4:	beq	18104 <print_json_data@@Base+0x75c>
   180f8:	movw	r0, #43812	; 0xab24
   180fc:	movt	r0, #1
   18100:	blx	r0
   18104:	movw	r0, #57078	; 0xdef6
   18108:	movt	r0, #1
   1810c:	bl	18568 <print_json_data@@Base+0xbc0>
   18110:	ldr	r1, [fp, #-112]	; 0xffffff90
   18114:	ldr	r2, [fp, #-108]	; 0xffffff94
   18118:	str	r0, [sp, #28]
   1811c:	mov	r0, r1
   18120:	mov	r1, r2
   18124:	bl	185cc <print_json_data@@Base+0xc24>
   18128:	ldr	r1, [fp, #-108]	; 0xffffff94
   1812c:	movw	r0, #57078	; 0xdef6
   18130:	movt	r0, #1
   18134:	bl	18568 <print_json_data@@Base+0xbc0>
   18138:	ldr	r1, [fp, #-112]	; 0xffffff90
   1813c:	str	r0, [sp, #24]
   18140:	mov	r0, r1
   18144:	bl	12654 <free@plt>
   18148:	b	183cc <print_json_data@@Base+0xa24>
   1814c:	ldr	r0, [fp, #-12]
   18150:	sub	r1, fp, #120	; 0x78
   18154:	bl	12948 <coda_cursor_get_bit_size@plt>
   18158:	cmp	r0, #0
   1815c:	beq	1816c <print_json_data@@Base+0x7c4>
   18160:	movw	r0, #43812	; 0xab24
   18164:	movt	r0, #1
   18168:	blx	r0
   1816c:	ldr	r0, [fp, #-120]	; 0xffffff88
   18170:	ldr	r1, [fp, #-116]	; 0xffffff8c
   18174:	lsr	r2, r0, #3
   18178:	orr	r2, r2, r1, lsl #29
   1817c:	asr	r1, r1, #3
   18180:	and	r0, r0, #7
   18184:	adds	r3, r2, #1
   18188:	adc	ip, r1, #0
   1818c:	cmp	r0, #0
   18190:	movne	r2, r3
   18194:	cmp	r0, #0
   18198:	movne	r1, ip
   1819c:	str	r2, [fp, #-128]	; 0xffffff80
   181a0:	str	r1, [fp, #-124]	; 0xffffff84
   181a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   181a8:	bl	12780 <malloc@plt>
   181ac:	str	r0, [fp, #-132]	; 0xffffff7c
   181b0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   181b4:	movw	r1, #0
   181b8:	cmp	r0, r1
   181bc:	bne	181f0 <print_json_data@@Base+0x848>
   181c0:	ldr	r2, [fp, #-128]	; 0xffffff80
   181c4:	mvn	r0, #0
   181c8:	movw	r1, #55264	; 0xd7e0
   181cc:	movt	r1, #1
   181d0:	movw	r3, #56922	; 0xde5a
   181d4:	movt	r3, #1
   181d8:	movw	ip, #334	; 0x14e
   181dc:	str	ip, [sp]
   181e0:	bl	1260c <coda_set_error@plt>
   181e4:	movw	r0, #43812	; 0xab24
   181e8:	movt	r0, #1
   181ec:	blx	r0
   181f0:	ldr	r0, [fp, #-12]
   181f4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   181f8:	ldr	r2, [fp, #-120]	; 0xffffff88
   181fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18200:	mov	ip, sp
   18204:	str	r3, [ip, #4]
   18208:	str	r2, [ip]
   1820c:	mov	r2, #0
   18210:	str	r2, [sp, #20]
   18214:	ldr	r3, [sp, #20]
   18218:	bl	129d8 <coda_cursor_read_bits@plt>
   1821c:	cmp	r0, #0
   18220:	beq	18230 <print_json_data@@Base+0x888>
   18224:	movw	r0, #43812	; 0xab24
   18228:	movt	r0, #1
   1822c:	blx	r0
   18230:	movw	r0, #57078	; 0xdef6
   18234:	movt	r0, #1
   18238:	bl	18568 <print_json_data@@Base+0xbc0>
   1823c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18240:	ldr	r2, [fp, #-128]	; 0xffffff80
   18244:	str	r0, [sp, #16]
   18248:	mov	r0, r1
   1824c:	mov	r1, r2
   18250:	bl	185cc <print_json_data@@Base+0xc24>
   18254:	movw	r0, #57078	; 0xdef6
   18258:	movt	r0, #1
   1825c:	bl	18568 <print_json_data@@Base+0xbc0>
   18260:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18264:	str	r0, [sp, #12]
   18268:	mov	r0, r1
   1826c:	bl	12654 <free@plt>
   18270:	b	183cc <print_json_data@@Base+0xa24>
   18274:	ldr	r0, [fp, #-12]
   18278:	sub	r1, fp, #136	; 0x88
   1827c:	bl	12984 <coda_cursor_read_int32@plt>
   18280:	cmp	r0, #0
   18284:	beq	18294 <print_json_data@@Base+0x8ec>
   18288:	movw	r0, #43812	; 0xab24
   1828c:	movt	r0, #1
   18290:	blx	r0
   18294:	ldr	r1, [fp, #-136]	; 0xffffff78
   18298:	movw	r0, #57102	; 0xdf0e
   1829c:	movt	r0, #1
   182a0:	bl	18568 <print_json_data@@Base+0xbc0>
   182a4:	b	183cc <print_json_data@@Base+0xa24>
   182a8:	ldr	r0, [fp, #-12]
   182ac:	sub	r1, fp, #140	; 0x8c
   182b0:	bl	12678 <coda_cursor_read_uint32@plt>
   182b4:	cmp	r0, #0
   182b8:	beq	182c8 <print_json_data@@Base+0x920>
   182bc:	movw	r0, #43812	; 0xab24
   182c0:	movt	r0, #1
   182c4:	blx	r0
   182c8:	ldr	r1, [fp, #-140]	; 0xffffff74
   182cc:	movw	r0, #55431	; 0xd887
   182d0:	movt	r0, #1
   182d4:	bl	18568 <print_json_data@@Base+0xbc0>
   182d8:	b	183cc <print_json_data@@Base+0xa24>
   182dc:	ldr	r0, [fp, #-12]
   182e0:	sub	r1, fp, #152	; 0x98
   182e4:	bl	128f4 <coda_cursor_read_int64@plt>
   182e8:	cmp	r0, #0
   182ec:	beq	182fc <print_json_data@@Base+0x954>
   182f0:	movw	r0, #43812	; 0xab24
   182f4:	movt	r0, #1
   182f8:	blx	r0
   182fc:	sub	r2, fp, #173	; 0xad
   18300:	ldr	r0, [fp, #-152]	; 0xffffff68
   18304:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18308:	bl	129e4 <coda_str64@plt>
   1830c:	sub	r1, fp, #173	; 0xad
   18310:	movw	r0, #57282	; 0xdfc2
   18314:	movt	r0, #1
   18318:	bl	18568 <print_json_data@@Base+0xbc0>
   1831c:	b	183cc <print_json_data@@Base+0xa24>
   18320:	ldr	r0, [fp, #-12]
   18324:	add	r1, sp, #176	; 0xb0
   18328:	bl	127ec <coda_cursor_read_uint64@plt>
   1832c:	cmp	r0, #0
   18330:	beq	18340 <print_json_data@@Base+0x998>
   18334:	movw	r0, #43812	; 0xab24
   18338:	movt	r0, #1
   1833c:	blx	r0
   18340:	add	r2, sp, #155	; 0x9b
   18344:	ldr	r0, [sp, #176]	; 0xb0
   18348:	ldr	r1, [sp, #180]	; 0xb4
   1834c:	bl	12648 <coda_str64u@plt>
   18350:	add	r1, sp, #155	; 0x9b
   18354:	movw	r0, #57282	; 0xdfc2
   18358:	movt	r0, #1
   1835c:	bl	18568 <print_json_data@@Base+0xbc0>
   18360:	b	183cc <print_json_data@@Base+0xa24>
   18364:	ldr	r0, [fp, #-12]
   18368:	add	r1, sp, #144	; 0x90
   1836c:	bl	127f8 <coda_cursor_read_double@plt>
   18370:	cmp	r0, #0
   18374:	beq	18384 <print_json_data@@Base+0x9dc>
   18378:	movw	r0, #43812	; 0xab24
   1837c:	movt	r0, #1
   18380:	blx	r0
   18384:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18388:	cmp	r0, #8
   1838c:	bne	183a8 <print_json_data@@Base+0xa00>
   18390:	vldr	d16, [sp, #144]	; 0x90
   18394:	movw	r0, #55435	; 0xd88b
   18398:	movt	r0, #1
   1839c:	vmov	r2, r3, d16
   183a0:	bl	18568 <print_json_data@@Base+0xbc0>
   183a4:	b	183bc <print_json_data@@Base+0xa14>
   183a8:	vldr	d16, [sp, #144]	; 0x90
   183ac:	movw	r0, #55440	; 0xd890
   183b0:	movt	r0, #1
   183b4:	vmov	r2, r3, d16
   183b8:	bl	18568 <print_json_data@@Base+0xbc0>
   183bc:	b	183cc <print_json_data@@Base+0xa24>
   183c0:	movw	r0, #57005	; 0xdead
   183c4:	movt	r0, #1
   183c8:	bl	18568 <print_json_data@@Base+0xbc0>
   183cc:	b	18548 <print_json_data@@Base+0xba0>
   183d0:	ldr	r0, [fp, #-12]
   183d4:	add	r1, sp, #140	; 0x8c
   183d8:	bl	12720 <coda_cursor_get_special_type@plt>
   183dc:	cmp	r0, #0
   183e0:	beq	183f0 <print_json_data@@Base+0xa48>
   183e4:	movw	r0, #43812	; 0xab24
   183e8:	movt	r0, #1
   183ec:	blx	r0
   183f0:	ldr	r0, [sp, #140]	; 0x8c
   183f4:	cmp	r0, #3
   183f8:	str	r0, [sp, #8]
   183fc:	bhi	18544 <print_json_data@@Base+0xb9c>
   18400:	add	r0, pc, #8
   18404:	ldr	r1, [sp, #8]
   18408:	ldr	r0, [r0, r1, lsl #2]
   1840c:	mov	pc, r0
   18410:	andeq	r8, r1, r0, lsr #8
   18414:	andeq	r8, r1, r0, lsr r4
   18418:	andeq	r8, r1, r8, ror #8
   1841c:	andeq	r8, r1, r4, lsl #10
   18420:	movw	r0, #57005	; 0xdead
   18424:	movt	r0, #1
   18428:	bl	18568 <print_json_data@@Base+0xbc0>
   1842c:	b	18544 <print_json_data@@Base+0xb9c>
   18430:	ldr	r0, [fp, #-12]
   18434:	add	r1, sp, #128	; 0x80
   18438:	bl	127f8 <coda_cursor_read_double@plt>
   1843c:	cmp	r0, #0
   18440:	beq	18450 <print_json_data@@Base+0xaa8>
   18444:	movw	r0, #43812	; 0xab24
   18448:	movt	r0, #1
   1844c:	blx	r0
   18450:	vldr	d16, [sp, #128]	; 0x80
   18454:	movw	r0, #55440	; 0xd890
   18458:	movt	r0, #1
   1845c:	vmov	r2, r3, d16
   18460:	bl	18568 <print_json_data@@Base+0xbc0>
   18464:	b	18544 <print_json_data@@Base+0xb9c>
   18468:	ldr	r0, [fp, #-12]
   1846c:	add	r1, sp, #120	; 0x78
   18470:	bl	127f8 <coda_cursor_read_double@plt>
   18474:	cmp	r0, #0
   18478:	beq	18488 <print_json_data@@Base+0xae0>
   1847c:	movw	r0, #43812	; 0xab24
   18480:	movt	r0, #1
   18484:	blx	r0
   18488:	vldr	d0, [sp, #120]	; 0x78
   1848c:	bl	12804 <coda_isNaN@plt>
   18490:	cmp	r0, #0
   18494:	bne	184a8 <print_json_data@@Base+0xb00>
   18498:	vldr	d0, [sp, #120]	; 0x78
   1849c:	bl	126b4 <coda_isInf@plt>
   184a0:	cmp	r0, #0
   184a4:	beq	184c0 <print_json_data@@Base+0xb18>
   184a8:	vldr	d16, [sp, #120]	; 0x78
   184ac:	movw	r0, #55440	; 0xd890
   184b0:	movt	r0, #1
   184b4:	vmov	r2, r3, d16
   184b8:	bl	18568 <print_json_data@@Base+0xbc0>
   184bc:	b	18500 <print_json_data@@Base+0xb58>
   184c0:	add	r1, sp, #93	; 0x5d
   184c4:	vldr	d0, [sp, #120]	; 0x78
   184c8:	movw	r0, #57010	; 0xdeb2
   184cc:	movt	r0, #1
   184d0:	bl	12630 <coda_time_double_to_string@plt>
   184d4:	cmp	r0, #0
   184d8:	beq	184ec <print_json_data@@Base+0xb44>
   184dc:	movw	r0, #57039	; 0xdecf
   184e0:	movt	r0, #1
   184e4:	bl	18568 <print_json_data@@Base+0xbc0>
   184e8:	b	184fc <print_json_data@@Base+0xb54>
   184ec:	add	r1, sp, #93	; 0x5d
   184f0:	movw	r0, #57348	; 0xe004
   184f4:	movt	r0, #1
   184f8:	bl	18568 <print_json_data@@Base+0xbc0>
   184fc:	b	18500 <print_json_data@@Base+0xb58>
   18500:	b	18544 <print_json_data@@Base+0xb9c>
   18504:	ldr	r0, [fp, #-12]
   18508:	add	r1, sp, #80	; 0x50
   1850c:	add	r2, sp, #72	; 0x48
   18510:	bl	12894 <coda_cursor_read_complex_double_split@plt>
   18514:	cmp	r0, #0
   18518:	beq	18528 <print_json_data@@Base+0xb80>
   1851c:	movw	r0, #43812	; 0xab24
   18520:	movt	r0, #1
   18524:	blx	r0
   18528:	vldr	d16, [sp, #80]	; 0x50
   1852c:	vldr	d17, [sp, #72]	; 0x48
   18530:	movw	r0, #57066	; 0xdeea
   18534:	movt	r0, #1
   18538:	vmov	r2, r3, d16
   1853c:	vstr	d17, [sp]
   18540:	bl	18568 <print_json_data@@Base+0xbc0>
   18544:	b	18548 <print_json_data@@Base+0xba0>
   18548:	ldr	r0, [fp, #-20]	; 0xffffffec
   1854c:	cmp	r0, #0
   18550:	beq	18560 <print_json_data@@Base+0xbb8>
   18554:	movw	r0, #56920	; 0xde58
   18558:	movt	r0, #1
   1855c:	bl	18568 <print_json_data@@Base+0xbc0>
   18560:	sub	sp, fp, #8
   18564:	pop	{r4, r5, fp, pc}
   18568:	sub	sp, sp, #12
   1856c:	push	{fp, lr}
   18570:	mov	fp, sp
   18574:	sub	sp, sp, #20
   18578:	str	r3, [fp, #16]
   1857c:	str	r2, [fp, #12]
   18580:	str	r1, [fp, #8]
   18584:	str	r0, [fp, #-4]
   18588:	add	r0, fp, #8
   1858c:	str	r0, [sp, #8]
   18590:	movw	r0, #4232	; 0x1088
   18594:	movt	r0, #3
   18598:	ldr	r0, [r0]
   1859c:	ldr	r1, [fp, #-4]
   185a0:	ldr	r2, [sp, #8]
   185a4:	bl	12900 <vfprintf@plt>
   185a8:	str	r0, [fp, #-8]
   185ac:	add	r0, sp, #8
   185b0:	ldr	r1, [fp, #-8]
   185b4:	str	r0, [sp, #4]
   185b8:	mov	r0, r1
   185bc:	mov	sp, fp
   185c0:	pop	{fp, lr}
   185c4:	add	sp, sp, #12
   185c8:	bx	lr
   185cc:	push	{fp, lr}
   185d0:	mov	fp, sp
   185d4:	sub	sp, sp, #24
   185d8:	str	r0, [fp, #-4]
   185dc:	str	r1, [fp, #-8]
   185e0:	movw	r0, #0
   185e4:	str	r0, [sp, #12]
   185e8:	ldr	r0, [sp, #12]
   185ec:	ldr	r1, [fp, #-8]
   185f0:	cmp	r0, r1
   185f4:	bge	18744 <print_json_data@@Base+0xd9c>
   185f8:	ldr	r0, [fp, #-4]
   185fc:	ldr	r1, [sp, #12]
   18600:	ldrb	r0, [r0, r1]
   18604:	strb	r0, [sp, #11]
   18608:	ldrb	r0, [sp, #11]
   1860c:	mov	r1, r0
   18610:	cmp	r0, #8
   18614:	str	r1, [sp, #4]
   18618:	beq	18680 <print_json_data@@Base+0xcd8>
   1861c:	b	18620 <print_json_data@@Base+0xc78>
   18620:	ldr	r0, [sp, #4]
   18624:	cmp	r0, #9
   18628:	beq	186c0 <print_json_data@@Base+0xd18>
   1862c:	b	18630 <print_json_data@@Base+0xc88>
   18630:	ldr	r0, [sp, #4]
   18634:	cmp	r0, #10
   18638:	beq	186a0 <print_json_data@@Base+0xcf8>
   1863c:	b	18640 <print_json_data@@Base+0xc98>
   18640:	ldr	r0, [sp, #4]
   18644:	cmp	r0, #12
   18648:	beq	18690 <print_json_data@@Base+0xce8>
   1864c:	b	18650 <print_json_data@@Base+0xca8>
   18650:	ldr	r0, [sp, #4]
   18654:	cmp	r0, #13
   18658:	beq	186b0 <print_json_data@@Base+0xd08>
   1865c:	b	18660 <print_json_data@@Base+0xcb8>
   18660:	ldr	r0, [sp, #4]
   18664:	cmp	r0, #34	; 0x22
   18668:	beq	186d0 <print_json_data@@Base+0xd28>
   1866c:	b	18670 <print_json_data@@Base+0xcc8>
   18670:	ldr	r0, [sp, #4]
   18674:	cmp	r0, #92	; 0x5c
   18678:	beq	186e0 <print_json_data@@Base+0xd38>
   1867c:	b	186f0 <print_json_data@@Base+0xd48>
   18680:	movw	r0, #55404	; 0xd86c
   18684:	movt	r0, #1
   18688:	bl	18568 <print_json_data@@Base+0xbc0>
   1868c:	b	18730 <print_json_data@@Base+0xd88>
   18690:	movw	r0, #55416	; 0xd878
   18694:	movt	r0, #1
   18698:	bl	18568 <print_json_data@@Base+0xbc0>
   1869c:	b	18730 <print_json_data@@Base+0xd88>
   186a0:	movw	r0, #55410	; 0xd872
   186a4:	movt	r0, #1
   186a8:	bl	18568 <print_json_data@@Base+0xbc0>
   186ac:	b	18730 <print_json_data@@Base+0xd88>
   186b0:	movw	r0, #55419	; 0xd87b
   186b4:	movt	r0, #1
   186b8:	bl	18568 <print_json_data@@Base+0xbc0>
   186bc:	b	18730 <print_json_data@@Base+0xd88>
   186c0:	movw	r0, #55407	; 0xd86f
   186c4:	movt	r0, #1
   186c8:	bl	18568 <print_json_data@@Base+0xbc0>
   186cc:	b	18730 <print_json_data@@Base+0xd88>
   186d0:	movw	r0, #57077	; 0xdef5
   186d4:	movt	r0, #1
   186d8:	bl	18568 <print_json_data@@Base+0xbc0>
   186dc:	b	18730 <print_json_data@@Base+0xd88>
   186e0:	movw	r0, #55422	; 0xd87e
   186e4:	movt	r0, #1
   186e8:	bl	18568 <print_json_data@@Base+0xbc0>
   186ec:	b	18730 <print_json_data@@Base+0xd88>
   186f0:	ldrb	r0, [sp, #11]
   186f4:	cmp	r0, #32
   186f8:	blt	1871c <print_json_data@@Base+0xd74>
   186fc:	ldrb	r0, [sp, #11]
   18700:	cmp	r0, #126	; 0x7e
   18704:	bgt	1871c <print_json_data@@Base+0xd74>
   18708:	ldrb	r1, [sp, #11]
   1870c:	movw	r0, #55261	; 0xd7dd
   18710:	movt	r0, #1
   18714:	bl	18568 <print_json_data@@Base+0xbc0>
   18718:	b	1872c <print_json_data@@Base+0xd84>
   1871c:	ldrb	r1, [sp, #11]
   18720:	movw	r0, #57080	; 0xdef8
   18724:	movt	r0, #1
   18728:	bl	18568 <print_json_data@@Base+0xbc0>
   1872c:	b	18730 <print_json_data@@Base+0xd88>
   18730:	b	18734 <print_json_data@@Base+0xd8c>
   18734:	ldr	r0, [sp, #12]
   18738:	add	r0, r0, #1
   1873c:	str	r0, [sp, #12]
   18740:	b	185e8 <print_json_data@@Base+0xc40>
   18744:	mov	sp, fp
   18748:	pop	{fp, pc}

0001874c <print_full_field_name@@Base>:
   1874c:	push	{fp, lr}
   18750:	mov	fp, sp
   18754:	sub	sp, sp, #64	; 0x40
   18758:	str	r0, [fp, #-4]
   1875c:	str	r1, [fp, #-8]
   18760:	str	r2, [fp, #-12]
   18764:	ldr	r0, [fp, #-8]
   18768:	cmp	r0, #1
   1876c:	bne	1895c <print_full_field_name@@Base+0x210>
   18770:	movw	r0, #0
   18774:	str	r0, [fp, #-20]	; 0xffffffec
   18778:	str	r0, [fp, #-24]	; 0xffffffe8
   1877c:	str	r0, [fp, #-16]
   18780:	ldr	r0, [fp, #-16]
   18784:	movw	r1, #480	; 0x1e0
   18788:	movt	r1, #3
   1878c:	ldr	r1, [r1, #136]	; 0x88
   18790:	cmp	r0, r1
   18794:	bge	188fc <print_full_field_name@@Base+0x1b0>
   18798:	movw	r0, #480	; 0x1e0
   1879c:	movt	r0, #3
   187a0:	add	r0, r0, #8
   187a4:	ldr	r1, [fp, #-16]
   187a8:	movw	r2, #480	; 0x1e0
   187ac:	movt	r2, #3
   187b0:	add	r1, r2, r1, lsl #2
   187b4:	add	r1, r1, #8
   187b8:	ldr	r1, [r1]
   187bc:	str	r0, [sp, #24]
   187c0:	mov	r0, r1
   187c4:	sub	r1, fp, #28
   187c8:	bl	129fc <coda_type_get_class@plt>
   187cc:	cmp	r0, #0
   187d0:	beq	187e0 <print_full_field_name@@Base+0x94>
   187d4:	movw	r0, #43812	; 0xab24
   187d8:	movt	r0, #1
   187dc:	blx	r0
   187e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   187e4:	cmp	r0, #0
   187e8:	str	r0, [sp, #20]
   187ec:	beq	18804 <print_full_field_name@@Base+0xb8>
   187f0:	b	187f4 <print_full_field_name@@Base+0xa8>
   187f4:	ldr	r0, [sp, #20]
   187f8:	cmp	r0, #1
   187fc:	beq	18858 <print_full_field_name@@Base+0x10c>
   18800:	b	188e4 <print_full_field_name@@Base+0x198>
   18804:	movw	r0, #3620	; 0xe24
   18808:	movw	r1, #480	; 0x1e0
   1880c:	movt	r1, #3
   18810:	add	r0, r1, r0
   18814:	ldr	r1, [fp, #-4]
   18818:	ldr	r2, [fp, #-20]	; 0xffffffec
   1881c:	movw	r3, #480	; 0x1e0
   18820:	movt	r3, #3
   18824:	add	r2, r3, r2, lsl #2
   18828:	movw	r3, #3620	; 0xe24
   1882c:	add	r2, r2, r3
   18830:	ldr	r2, [r2]
   18834:	str	r0, [sp, #16]
   18838:	mov	r0, r1
   1883c:	movw	r1, #57087	; 0xdeff
   18840:	movt	r1, #1
   18844:	bl	12810 <fprintf@plt>
   18848:	ldr	r1, [fp, #-20]	; 0xffffffec
   1884c:	add	r1, r1, #1
   18850:	str	r1, [fp, #-20]	; 0xffffffec
   18854:	b	188e8 <print_full_field_name@@Base+0x19c>
   18858:	ldr	r0, [fp, #-16]
   1885c:	cmp	r0, #0
   18860:	bne	18874 <print_full_field_name@@Base+0x128>
   18864:	ldr	r0, [fp, #-4]
   18868:	movw	r1, #57091	; 0xdf03
   1886c:	movt	r1, #1
   18870:	bl	12810 <fprintf@plt>
   18874:	movw	r0, #480	; 0x1e0
   18878:	movt	r0, #3
   1887c:	add	r0, r0, #800	; 0x320
   18880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18884:	movw	r2, #80	; 0x50
   18888:	mul	r1, r1, r2
   1888c:	add	r0, r0, r1
   18890:	ldr	r0, [r0, #4]
   18894:	cmp	r0, #0
   18898:	ble	188d4 <print_full_field_name@@Base+0x188>
   1889c:	ldr	r0, [fp, #-4]
   188a0:	movw	r1, #57096	; 0xdf08
   188a4:	movt	r1, #1
   188a8:	bl	12810 <fprintf@plt>
   188ac:	ldr	r1, [fp, #-4]
   188b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188b4:	str	r0, [sp, #12]
   188b8:	mov	r0, r1
   188bc:	mov	r1, r2
   188c0:	bl	18bc8 <print_full_field_name@@Base+0x47c>
   188c4:	ldr	r0, [fp, #-4]
   188c8:	movw	r1, #57345	; 0xe001
   188cc:	movt	r1, #1
   188d0:	bl	12810 <fprintf@plt>
   188d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d8:	add	r0, r0, #1
   188dc:	str	r0, [fp, #-24]	; 0xffffffe8
   188e0:	b	188e8 <print_full_field_name@@Base+0x19c>
   188e4:	b	188e8 <print_full_field_name@@Base+0x19c>
   188e8:	b	188ec <print_full_field_name@@Base+0x1a0>
   188ec:	ldr	r0, [fp, #-16]
   188f0:	add	r0, r0, #1
   188f4:	str	r0, [fp, #-16]
   188f8:	b	18780 <print_full_field_name@@Base+0x34>
   188fc:	ldr	r0, [fp, #-12]
   18900:	cmp	r0, #0
   18904:	beq	18958 <print_full_field_name@@Base+0x20c>
   18908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1890c:	movw	r1, #480	; 0x1e0
   18910:	movt	r1, #3
   18914:	ldr	r1, [r1, #3360]	; 0xd20
   18918:	cmp	r0, r1
   1891c:	bge	18958 <print_full_field_name@@Base+0x20c>
   18920:	ldr	r0, [fp, #-4]
   18924:	movw	r1, #57096	; 0xdf08
   18928:	movt	r1, #1
   1892c:	bl	12810 <fprintf@plt>
   18930:	ldr	r1, [fp, #-4]
   18934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18938:	str	r0, [sp, #8]
   1893c:	mov	r0, r1
   18940:	mov	r1, r2
   18944:	bl	18bc8 <print_full_field_name@@Base+0x47c>
   18948:	ldr	r0, [fp, #-4]
   1894c:	movw	r1, #57345	; 0xe001
   18950:	movt	r1, #1
   18954:	bl	12810 <fprintf@plt>
   18958:	b	18bc0 <print_full_field_name@@Base+0x474>
   1895c:	movw	r0, #0
   18960:	str	r0, [fp, #-16]
   18964:	ldr	r0, [fp, #-16]
   18968:	movw	r1, #480	; 0x1e0
   1896c:	movt	r1, #3
   18970:	ldr	r1, [r1, #3748]	; 0xea4
   18974:	cmp	r0, r1
   18978:	bge	189ec <print_full_field_name@@Base+0x2a0>
   1897c:	ldr	r0, [fp, #-16]
   18980:	cmp	r0, #0
   18984:	ble	18998 <print_full_field_name@@Base+0x24c>
   18988:	ldr	r0, [fp, #-4]
   1898c:	movw	r1, #57093	; 0xdf05
   18990:	movt	r1, #1
   18994:	bl	12810 <fprintf@plt>
   18998:	movw	r0, #3620	; 0xe24
   1899c:	movw	r1, #480	; 0x1e0
   189a0:	movt	r1, #3
   189a4:	add	r0, r1, r0
   189a8:	ldr	r1, [fp, #-4]
   189ac:	ldr	r2, [fp, #-16]
   189b0:	movw	r3, #480	; 0x1e0
   189b4:	movt	r3, #3
   189b8:	add	r2, r3, r2, lsl #2
   189bc:	movw	r3, #3620	; 0xe24
   189c0:	add	r2, r2, r3
   189c4:	ldr	r2, [r2]
   189c8:	str	r0, [sp, #4]
   189cc:	mov	r0, r1
   189d0:	movw	r1, #57282	; 0xdfc2
   189d4:	movt	r1, #1
   189d8:	bl	12810 <fprintf@plt>
   189dc:	ldr	r0, [fp, #-16]
   189e0:	add	r0, r0, #1
   189e4:	str	r0, [fp, #-16]
   189e8:	b	18964 <print_full_field_name@@Base+0x218>
   189ec:	ldr	r0, [fp, #-8]
   189f0:	cmp	r0, #2
   189f4:	bne	18bbc <print_full_field_name@@Base+0x470>
   189f8:	movw	r0, #0
   189fc:	str	r0, [sp, #32]
   18a00:	str	r0, [fp, #-16]
   18a04:	ldr	r0, [fp, #-16]
   18a08:	movw	r1, #480	; 0x1e0
   18a0c:	movt	r1, #3
   18a10:	ldr	r1, [r1, #136]	; 0x88
   18a14:	cmp	r0, r1
   18a18:	bge	18b14 <print_full_field_name@@Base+0x3c8>
   18a1c:	movw	r0, #480	; 0x1e0
   18a20:	movt	r0, #3
   18a24:	add	r0, r0, #8
   18a28:	ldr	r1, [fp, #-16]
   18a2c:	movw	r2, #480	; 0x1e0
   18a30:	movt	r2, #3
   18a34:	add	r1, r2, r1, lsl #2
   18a38:	add	r1, r1, #8
   18a3c:	ldr	r1, [r1]
   18a40:	str	r0, [sp]
   18a44:	mov	r0, r1
   18a48:	add	r1, sp, #28
   18a4c:	bl	129fc <coda_type_get_class@plt>
   18a50:	cmp	r0, #0
   18a54:	beq	18a64 <print_full_field_name@@Base+0x318>
   18a58:	movw	r0, #43812	; 0xab24
   18a5c:	movt	r0, #1
   18a60:	blx	r0
   18a64:	ldr	r0, [sp, #28]
   18a68:	cmp	r0, #1
   18a6c:	bne	18b00 <print_full_field_name@@Base+0x3b4>
   18a70:	movw	r0, #480	; 0x1e0
   18a74:	movt	r0, #3
   18a78:	add	r0, r0, #800	; 0x320
   18a7c:	ldr	r1, [sp, #32]
   18a80:	movw	r2, #80	; 0x50
   18a84:	mul	r1, r1, r2
   18a88:	add	r0, r0, r1
   18a8c:	ldr	r0, [r0, #4]
   18a90:	cmp	r0, #0
   18a94:	ble	18afc <print_full_field_name@@Base+0x3b0>
   18a98:	movw	r0, #480	; 0x1e0
   18a9c:	movt	r0, #3
   18aa0:	add	r0, r0, #800	; 0x320
   18aa4:	ldr	r1, [sp, #32]
   18aa8:	movw	r2, #80	; 0x50
   18aac:	mul	r1, r1, r2
   18ab0:	add	r0, r0, r1
   18ab4:	ldr	r0, [r0]
   18ab8:	cmp	r0, #0
   18abc:	bne	18ad4 <print_full_field_name@@Base+0x388>
   18ac0:	ldr	r0, [fp, #-4]
   18ac4:	movw	r1, #57095	; 0xdf07
   18ac8:	movt	r1, #1
   18acc:	bl	12810 <fprintf@plt>
   18ad0:	b	18ae4 <print_full_field_name@@Base+0x398>
   18ad4:	ldr	r0, [fp, #-4]
   18ad8:	movw	r1, #55992	; 0xdab8
   18adc:	movt	r1, #1
   18ae0:	bl	12810 <fprintf@plt>
   18ae4:	ldr	r0, [fp, #-4]
   18ae8:	ldr	r1, [sp, #32]
   18aec:	bl	18bc8 <print_full_field_name@@Base+0x47c>
   18af0:	ldr	r0, [sp, #32]
   18af4:	add	r0, r0, #1
   18af8:	str	r0, [sp, #32]
   18afc:	b	18b00 <print_full_field_name@@Base+0x3b4>
   18b00:	b	18b04 <print_full_field_name@@Base+0x3b8>
   18b04:	ldr	r0, [fp, #-16]
   18b08:	add	r0, r0, #1
   18b0c:	str	r0, [fp, #-16]
   18b10:	b	18a04 <print_full_field_name@@Base+0x2b8>
   18b14:	ldr	r0, [fp, #-12]
   18b18:	cmp	r0, #0
   18b1c:	beq	18b9c <print_full_field_name@@Base+0x450>
   18b20:	ldr	r0, [sp, #32]
   18b24:	movw	r1, #480	; 0x1e0
   18b28:	movt	r1, #3
   18b2c:	ldr	r1, [r1, #3360]	; 0xd20
   18b30:	cmp	r0, r1
   18b34:	bge	18b9c <print_full_field_name@@Base+0x450>
   18b38:	movw	r0, #480	; 0x1e0
   18b3c:	movt	r0, #3
   18b40:	add	r0, r0, #800	; 0x320
   18b44:	ldr	r1, [sp, #32]
   18b48:	movw	r2, #80	; 0x50
   18b4c:	mul	r1, r1, r2
   18b50:	add	r0, r0, r1
   18b54:	ldr	r0, [r0]
   18b58:	cmp	r0, #0
   18b5c:	bne	18b74 <print_full_field_name@@Base+0x428>
   18b60:	ldr	r0, [fp, #-4]
   18b64:	movw	r1, #57095	; 0xdf07
   18b68:	movt	r1, #1
   18b6c:	bl	12810 <fprintf@plt>
   18b70:	b	18b84 <print_full_field_name@@Base+0x438>
   18b74:	ldr	r0, [fp, #-4]
   18b78:	movw	r1, #55992	; 0xdab8
   18b7c:	movt	r1, #1
   18b80:	bl	12810 <fprintf@plt>
   18b84:	ldr	r0, [fp, #-4]
   18b88:	ldr	r1, [sp, #32]
   18b8c:	bl	18bc8 <print_full_field_name@@Base+0x47c>
   18b90:	ldr	r0, [sp, #32]
   18b94:	add	r0, r0, #1
   18b98:	str	r0, [sp, #32]
   18b9c:	ldr	r0, [sp, #32]
   18ba0:	cmp	r0, #0
   18ba4:	ble	18bb8 <print_full_field_name@@Base+0x46c>
   18ba8:	ldr	r0, [fp, #-4]
   18bac:	movw	r1, #57345	; 0xe001
   18bb0:	movt	r1, #1
   18bb4:	bl	12810 <fprintf@plt>
   18bb8:	b	18bbc <print_full_field_name@@Base+0x470>
   18bbc:	b	18bc0 <print_full_field_name@@Base+0x474>
   18bc0:	mov	sp, fp
   18bc4:	pop	{fp, pc}
   18bc8:	push	{fp, lr}
   18bcc:	mov	fp, sp
   18bd0:	sub	sp, sp, #32
   18bd4:	movw	r2, #480	; 0x1e0
   18bd8:	movt	r2, #3
   18bdc:	add	r2, r2, #800	; 0x320
   18be0:	str	r0, [fp, #-4]
   18be4:	str	r1, [fp, #-8]
   18be8:	ldr	r0, [fp, #-8]
   18bec:	movw	r1, #80	; 0x50
   18bf0:	mul	r0, r0, r1
   18bf4:	add	r0, r2, r0
   18bf8:	str	r0, [fp, #-12]
   18bfc:	movw	r0, #0
   18c00:	str	r0, [sp, #16]
   18c04:	ldr	r0, [sp, #16]
   18c08:	ldr	r1, [fp, #-12]
   18c0c:	ldr	r1, [r1, #4]
   18c10:	cmp	r0, r1
   18c14:	bge	18d94 <print_full_field_name@@Base+0x648>
   18c18:	ldr	r0, [sp, #16]
   18c1c:	cmp	r0, #0
   18c20:	ble	18c34 <print_full_field_name@@Base+0x4e8>
   18c24:	ldr	r0, [fp, #-4]
   18c28:	movw	r1, #55992	; 0xdab8
   18c2c:	movt	r1, #1
   18c30:	bl	12810 <fprintf@plt>
   18c34:	movw	r0, #476	; 0x1dc
   18c38:	movt	r0, #3
   18c3c:	ldr	r0, [r0]
   18c40:	cmp	r0, #0
   18c44:	beq	18d28 <print_full_field_name@@Base+0x5dc>
   18c48:	movw	r0, #4264	; 0x10a8
   18c4c:	movt	r0, #3
   18c50:	add	r0, r0, #72	; 0x48
   18c54:	ldr	r1, [fp, #-12]
   18c58:	ldr	r1, [r1]
   18c5c:	ldr	r2, [sp, #16]
   18c60:	add	r1, r1, r2
   18c64:	movw	r2, #4264	; 0x10a8
   18c68:	movt	r2, #3
   18c6c:	add	r1, r2, r1, lsl #2
   18c70:	add	r1, r1, #72	; 0x48
   18c74:	ldr	r1, [r1]
   18c78:	cmp	r1, #0
   18c7c:	beq	18cdc <print_full_field_name@@Base+0x590>
   18c80:	movw	r0, #4264	; 0x10a8
   18c84:	movt	r0, #3
   18c88:	add	r0, r0, #4
   18c8c:	ldr	r1, [fp, #-4]
   18c90:	ldr	r2, [fp, #-12]
   18c94:	ldr	r2, [r2]
   18c98:	ldr	r3, [sp, #16]
   18c9c:	add	r2, r2, r3
   18ca0:	movw	r3, #4264	; 0x10a8
   18ca4:	movt	r3, #3
   18ca8:	add	r2, r3, r2, lsl #2
   18cac:	ldr	r3, [r2, #36]	; 0x24
   18cb0:	add	r2, r2, #4
   18cb4:	ldr	r2, [r2]
   18cb8:	str	r0, [sp, #12]
   18cbc:	mov	r0, r1
   18cc0:	movw	r1, #57098	; 0xdf0a
   18cc4:	movt	r1, #1
   18cc8:	str	r2, [sp, #8]
   18ccc:	mov	r2, r3
   18cd0:	ldr	r3, [sp, #8]
   18cd4:	bl	12810 <fprintf@plt>
   18cd8:	b	18d24 <print_full_field_name@@Base+0x5d8>
   18cdc:	movw	r0, #4264	; 0x10a8
   18ce0:	movt	r0, #3
   18ce4:	add	r0, r0, #4
   18ce8:	ldr	r1, [fp, #-4]
   18cec:	ldr	r2, [fp, #-12]
   18cf0:	ldr	r2, [r2]
   18cf4:	ldr	r3, [sp, #16]
   18cf8:	add	r2, r2, r3
   18cfc:	movw	r3, #4264	; 0x10a8
   18d00:	movt	r3, #3
   18d04:	add	r2, r3, r2, lsl #2
   18d08:	add	r2, r2, #4
   18d0c:	ldr	r2, [r2]
   18d10:	str	r0, [sp, #4]
   18d14:	mov	r0, r1
   18d18:	movw	r1, #57102	; 0xdf0e
   18d1c:	movt	r1, #1
   18d20:	bl	12810 <fprintf@plt>
   18d24:	b	18d80 <print_full_field_name@@Base+0x634>
   18d28:	ldr	r0, [fp, #-12]
   18d2c:	add	r0, r0, #8
   18d30:	ldr	r1, [sp, #16]
   18d34:	add	r0, r0, r1, lsl #2
   18d38:	ldr	r0, [r0]
   18d3c:	cmn	r0, #1
   18d40:	bne	18d58 <print_full_field_name@@Base+0x60c>
   18d44:	ldr	r0, [fp, #-4]
   18d48:	movw	r1, #57106	; 0xdf12
   18d4c:	movt	r1, #1
   18d50:	bl	12810 <fprintf@plt>
   18d54:	b	18d7c <print_full_field_name@@Base+0x630>
   18d58:	ldr	r0, [fp, #-4]
   18d5c:	ldr	r1, [fp, #-12]
   18d60:	add	r1, r1, #8
   18d64:	ldr	r2, [sp, #16]
   18d68:	add	r1, r1, r2, lsl #2
   18d6c:	ldr	r2, [r1]
   18d70:	movw	r1, #57102	; 0xdf0e
   18d74:	movt	r1, #1
   18d78:	bl	12810 <fprintf@plt>
   18d7c:	b	18d80 <print_full_field_name@@Base+0x634>
   18d80:	b	18d84 <print_full_field_name@@Base+0x638>
   18d84:	ldr	r0, [sp, #16]
   18d88:	add	r0, r0, #1
   18d8c:	str	r0, [sp, #16]
   18d90:	b	18c04 <print_full_field_name@@Base+0x4b8>
   18d94:	mov	sp, fp
   18d98:	pop	{fp, pc}

00018d9c <traverse_info_init@@Base>:
   18d9c:	movw	r0, #480	; 0x1e0
   18da0:	movt	r0, #3
   18da4:	movw	r1, #0
   18da8:	str	r1, [r0, #4]
   18dac:	str	r1, [r0, #136]	; 0x88
   18db0:	str	r1, [r0, #3360]	; 0xd20
   18db4:	str	r1, [r0, #3748]	; 0xea4
   18db8:	bx	lr

00018dbc <traverse_info_done@@Base>:
   18dbc:	push	{fp, lr}
   18dc0:	mov	fp, sp
   18dc4:	movw	r0, #480	; 0x1e0
   18dc8:	movt	r0, #3
   18dcc:	ldr	r0, [r0, #4]
   18dd0:	movw	r1, #0
   18dd4:	cmp	r0, r1
   18dd8:	beq	18dec <traverse_info_done@@Base+0x30>
   18ddc:	movw	r0, #480	; 0x1e0
   18de0:	movt	r0, #3
   18de4:	ldr	r0, [r0, #4]
   18de8:	bl	128e8 <coda_close@plt>
   18dec:	movw	r0, #480	; 0x1e0
   18df0:	movt	r0, #3
   18df4:	ldr	r0, [r0, #664]	; 0x298
   18df8:	movw	r1, #0
   18dfc:	cmp	r0, r1
   18e00:	beq	18e14 <traverse_info_done@@Base+0x58>
   18e04:	movw	r0, #480	; 0x1e0
   18e08:	movt	r0, #3
   18e0c:	add	r0, r0, #664	; 0x298
   18e10:	bl	171f0 <codadump_filter_remove@@Base>
   18e14:	pop	{fp, pc}

00018e18 <traverse_product@@Base>:
   18e18:	push	{fp, lr}
   18e1c:	mov	fp, sp
   18e20:	sub	sp, sp, #16
   18e24:	movw	r0, #480	; 0x1e0
   18e28:	movt	r0, #3
   18e2c:	add	r1, r0, #4
   18e30:	ldr	r0, [r0]
   18e34:	bl	12618 <coda_open@plt>
   18e38:	str	r0, [fp, #-4]
   18e3c:	ldr	r0, [fp, #-4]
   18e40:	cmp	r0, #0
   18e44:	beq	18e8c <traverse_product@@Base+0x74>
   18e48:	bl	129a8 <coda_get_errno@plt>
   18e4c:	ldr	r0, [r0]
   18e50:	cmn	r0, #21
   18e54:	bne	18e8c <traverse_product@@Base+0x74>
   18e58:	movw	r0, #0
   18e5c:	bl	12660 <coda_set_option_use_mmap@plt>
   18e60:	movw	r1, #480	; 0x1e0
   18e64:	movt	r1, #3
   18e68:	add	r2, r1, #4
   18e6c:	ldr	r1, [r1]
   18e70:	str	r0, [sp, #8]
   18e74:	mov	r0, r1
   18e78:	mov	r1, r2
   18e7c:	bl	12618 <coda_open@plt>
   18e80:	str	r0, [fp, #-4]
   18e84:	movw	r0, #1
   18e88:	bl	12660 <coda_set_option_use_mmap@plt>
   18e8c:	ldr	r0, [fp, #-4]
   18e90:	cmp	r0, #0
   18e94:	beq	18ea4 <traverse_product@@Base+0x8c>
   18e98:	movw	r0, #43812	; 0xab24
   18e9c:	movt	r0, #1
   18ea0:	blx	r0
   18ea4:	movw	r0, #480	; 0x1e0
   18ea8:	movt	r0, #3
   18eac:	add	r1, r0, #144	; 0x90
   18eb0:	ldr	r0, [r0, #4]
   18eb4:	str	r0, [sp, #4]
   18eb8:	mov	r0, r1
   18ebc:	ldr	r1, [sp, #4]
   18ec0:	bl	12738 <coda_cursor_set_product@plt>
   18ec4:	cmp	r0, #0
   18ec8:	beq	18ed8 <traverse_product@@Base+0xc0>
   18ecc:	movw	r0, #43812	; 0xab24
   18ed0:	movt	r0, #1
   18ed4:	blx	r0
   18ed8:	movw	r0, #480	; 0x1e0
   18edc:	movt	r0, #3
   18ee0:	add	r1, r0, #144	; 0x90
   18ee4:	add	r0, r0, #8
   18ee8:	movw	r2, #480	; 0x1e0
   18eec:	movt	r2, #3
   18ef0:	ldr	r3, [r2, #136]	; 0x88
   18ef4:	add	r2, r2, r3, lsl #2
   18ef8:	add	r2, r2, #8
   18efc:	str	r0, [sp]
   18f00:	mov	r0, r1
   18f04:	mov	r1, r2
   18f08:	bl	1269c <coda_cursor_get_type@plt>
   18f0c:	cmp	r0, #0
   18f10:	beq	18f20 <traverse_product@@Base+0x108>
   18f14:	movw	r0, #43812	; 0xab24
   18f18:	movt	r0, #1
   18f1c:	blx	r0
   18f20:	bl	18f4c <traverse_product@@Base+0x134>
   18f24:	movw	r0, #480	; 0x1e0
   18f28:	movt	r0, #3
   18f2c:	ldr	r0, [r0, #4]
   18f30:	bl	128e8 <coda_close@plt>
   18f34:	movw	r1, #480	; 0x1e0
   18f38:	movt	r1, #3
   18f3c:	movw	r2, #0
   18f40:	str	r2, [r1, #4]
   18f44:	mov	sp, fp
   18f48:	pop	{fp, pc}
   18f4c:	push	{fp, lr}
   18f50:	mov	fp, sp
   18f54:	sub	sp, sp, #88	; 0x58
   18f58:	movw	r0, #480	; 0x1e0
   18f5c:	movt	r0, #3
   18f60:	add	r0, r0, #8
   18f64:	movw	r1, #480	; 0x1e0
   18f68:	movt	r1, #3
   18f6c:	ldr	r2, [r1, #136]	; 0x88
   18f70:	add	r1, r1, r2, lsl #2
   18f74:	add	r1, r1, #8
   18f78:	ldr	r1, [r1]
   18f7c:	str	r0, [fp, #-32]	; 0xffffffe0
   18f80:	mov	r0, r1
   18f84:	sub	r1, fp, #4
   18f88:	bl	129fc <coda_type_get_class@plt>
   18f8c:	cmp	r0, #0
   18f90:	beq	18fa0 <traverse_product@@Base+0x188>
   18f94:	movw	r0, #43812	; 0xab24
   18f98:	movt	r0, #1
   18f9c:	blx	r0
   18fa0:	ldr	r0, [fp, #-4]
   18fa4:	cmp	r0, #6
   18fa8:	str	r0, [fp, #-36]	; 0xffffffdc
   18fac:	bhi	1958c <traverse_product@@Base+0x774>
   18fb0:	add	r0, pc, #8
   18fb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18fb8:	ldr	r0, [r0, r1, lsl #2]
   18fbc:	mov	pc, r0
   18fc0:	ldrdeq	r8, [r1], -ip
   18fc4:	strdeq	r9, [r1], -r8
   18fc8:			; <UNDEFINED> instruction: 0x000193b0
   18fcc:			; <UNDEFINED> instruction: 0x000193b0
   18fd0:			; <UNDEFINED> instruction: 0x000193b0
   18fd4:			; <UNDEFINED> instruction: 0x000193b0
   18fd8:	andeq	r9, r1, r0, ror #8
   18fdc:	movw	r0, #480	; 0x1e0
   18fe0:	movt	r0, #3
   18fe4:	ldr	r0, [r0, #136]	; 0x88
   18fe8:	cmp	r0, #31
   18fec:	blt	18ff4 <traverse_product@@Base+0x1dc>
   18ff0:	b	1958c <traverse_product@@Base+0x774>
   18ff4:	movw	r0, #480	; 0x1e0
   18ff8:	movt	r0, #3
   18ffc:	add	r0, r0, #8
   19000:	movw	r1, #480	; 0x1e0
   19004:	movt	r1, #3
   19008:	ldr	r2, [r1, #3748]	; 0xea4
   1900c:	add	r2, r2, #1
   19010:	str	r2, [r1, #3748]	; 0xea4
   19014:	ldr	r2, [r1, #136]	; 0x88
   19018:	add	r1, r1, r2, lsl #2
   1901c:	add	r1, r1, #8
   19020:	ldr	r1, [r1]
   19024:	str	r0, [fp, #-40]	; 0xffffffd8
   19028:	mov	r0, r1
   1902c:	sub	r1, fp, #8
   19030:	bl	127bc <coda_type_get_num_record_fields@plt>
   19034:	cmp	r0, #0
   19038:	beq	19048 <traverse_product@@Base+0x230>
   1903c:	movw	r0, #43812	; 0xab24
   19040:	movt	r0, #1
   19044:	blx	r0
   19048:	movw	r0, #480	; 0x1e0
   1904c:	movt	r0, #3
   19050:	add	r0, r0, #664	; 0x298
   19054:	movw	r1, #480	; 0x1e0
   19058:	movt	r1, #3
   1905c:	ldr	r2, [r1, #136]	; 0x88
   19060:	add	r2, r2, #1
   19064:	str	r2, [r1, #136]	; 0x88
   19068:	ldr	r2, [r1, #796]	; 0x31c
   1906c:	add	r1, r1, r2, lsl #2
   19070:	add	r1, r1, #664	; 0x298
   19074:	ldr	r1, [r1]
   19078:	movw	r2, #0
   1907c:	cmp	r1, r2
   19080:	beq	19298 <traverse_product@@Base+0x480>
   19084:	movw	r0, #480	; 0x1e0
   19088:	movt	r0, #3
   1908c:	add	r0, r0, #664	; 0x298
   19090:	movw	r1, #480	; 0x1e0
   19094:	movt	r1, #3
   19098:	ldr	r2, [r1, #796]	; 0x31c
   1909c:	add	r1, r1, r2, lsl #2
   190a0:	add	r1, r1, #664	; 0x298
   190a4:	ldr	r1, [r1]
   190a8:	str	r1, [fp, #-16]
   190ac:	movw	r0, #480	; 0x1e0
   190b0:	movt	r0, #3
   190b4:	add	r0, r0, #664	; 0x298
   190b8:	movw	r1, #480	; 0x1e0
   190bc:	movt	r1, #3
   190c0:	ldr	r2, [r1, #796]	; 0x31c
   190c4:	add	r1, r1, r2, lsl #2
   190c8:	add	r1, r1, #664	; 0x298
   190cc:	ldr	r1, [r1]
   190d0:	movw	r2, #0
   190d4:	cmp	r1, r2
   190d8:	beq	1926c <traverse_product@@Base+0x454>
   190dc:	movw	r0, #480	; 0x1e0
   190e0:	movt	r0, #3
   190e4:	add	r0, r0, #664	; 0x298
   190e8:	movw	r1, #480	; 0x1e0
   190ec:	movt	r1, #3
   190f0:	ldr	r2, [r1, #796]	; 0x31c
   190f4:	add	r1, r1, r2, lsl #2
   190f8:	add	r1, r1, #664	; 0x298
   190fc:	ldr	r1, [r1]
   19100:	str	r0, [sp, #44]	; 0x2c
   19104:	mov	r0, r1
   19108:	bl	172f0 <codadump_filter_get_fieldname@@Base>
   1910c:	str	r0, [fp, #-20]	; 0xffffffec
   19110:	ldr	r0, [fp, #-20]	; 0xffffffec
   19114:	movw	r1, #0
   19118:	cmp	r0, r1
   1911c:	beq	19124 <traverse_product@@Base+0x30c>
   19120:	b	19144 <traverse_product@@Base+0x32c>
   19124:	movw	r0, #57108	; 0xdf14
   19128:	movt	r0, #1
   1912c:	movw	r1, #57121	; 0xdf21
   19130:	movt	r1, #1
   19134:	movw	r2, #393	; 0x189
   19138:	movw	r3, #57208	; 0xdf78
   1913c:	movt	r3, #1
   19140:	bl	129f0 <__assert_fail@plt>
   19144:	movw	r0, #480	; 0x1e0
   19148:	movt	r0, #3
   1914c:	add	r0, r0, #8
   19150:	movw	r1, #480	; 0x1e0
   19154:	movt	r1, #3
   19158:	ldr	r2, [r1, #136]	; 0x88
   1915c:	sub	r2, r2, #1
   19160:	add	r1, r1, r2, lsl #2
   19164:	add	r1, r1, #8
   19168:	ldr	r1, [r1]
   1916c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19170:	str	r0, [sp, #40]	; 0x28
   19174:	mov	r0, r1
   19178:	mov	r1, r2
   1917c:	sub	r2, fp, #12
   19180:	bl	12918 <coda_type_get_record_field_index_from_name@plt>
   19184:	cmp	r0, #0
   19188:	beq	191d4 <traverse_product@@Base+0x3bc>
   1918c:	bl	129a8 <coda_get_errno@plt>
   19190:	ldr	r0, [r0]
   19194:	cmn	r0, #102	; 0x66
   19198:	bne	191c8 <traverse_product@@Base+0x3b0>
   1919c:	movw	r0, #424	; 0x1a8
   191a0:	movt	r0, #3
   191a4:	ldr	r0, [r0]
   191a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   191ac:	movw	r1, #57229	; 0xdf8d
   191b0:	movt	r1, #1
   191b4:	bl	12810 <fprintf@plt>
   191b8:	movw	r1, #1
   191bc:	str	r0, [sp, #36]	; 0x24
   191c0:	mov	r0, r1
   191c4:	bl	127c8 <exit@plt>
   191c8:	movw	r0, #43812	; 0xab24
   191cc:	movt	r0, #1
   191d0:	blx	r0
   191d4:	movw	r0, #480	; 0x1e0
   191d8:	movt	r0, #3
   191dc:	add	r0, r0, #664	; 0x298
   191e0:	movw	r1, #480	; 0x1e0
   191e4:	movt	r1, #3
   191e8:	ldr	r2, [r1, #796]	; 0x31c
   191ec:	add	r3, r1, #664	; 0x298
   191f0:	ldr	r2, [r3, r2, lsl #2]
   191f4:	str	r0, [sp, #32]
   191f8:	mov	r0, r2
   191fc:	str	r1, [sp, #28]
   19200:	str	r3, [sp, #24]
   19204:	bl	17344 <codadump_filter_get_subfilter@@Base>
   19208:	ldr	r1, [sp, #28]
   1920c:	ldr	r2, [r1, #796]	; 0x31c
   19210:	ldr	r3, [sp, #24]
   19214:	add	r2, r3, r2, lsl #2
   19218:	str	r0, [r2, #4]
   1921c:	ldr	r0, [r1, #796]	; 0x31c
   19220:	add	r0, r0, #1
   19224:	str	r0, [r1, #796]	; 0x31c
   19228:	ldr	r0, [fp, #-12]
   1922c:	mov	r1, #1
   19230:	bl	19594 <traverse_product@@Base+0x77c>
   19234:	ldr	r0, [sp, #28]
   19238:	ldr	r1, [r0, #796]	; 0x31c
   1923c:	sub	r1, r1, #1
   19240:	str	r1, [r0, #796]	; 0x31c
   19244:	ldr	r1, [r0, #796]	; 0x31c
   19248:	ldr	r2, [sp, #24]
   1924c:	ldr	r0, [r2, r1, lsl #2]
   19250:	bl	17398 <codadump_filter_get_next_filter@@Base>
   19254:	ldr	r1, [sp, #28]
   19258:	ldr	r2, [r1, #796]	; 0x31c
   1925c:	ldr	r3, [sp, #24]
   19260:	add	r2, r3, r2, lsl #2
   19264:	str	r0, [r2]
   19268:	b	190ac <traverse_product@@Base+0x294>
   1926c:	movw	r0, #480	; 0x1e0
   19270:	movt	r0, #3
   19274:	add	r0, r0, #664	; 0x298
   19278:	ldr	r1, [fp, #-16]
   1927c:	movw	r2, #480	; 0x1e0
   19280:	movt	r2, #3
   19284:	ldr	r3, [r2, #796]	; 0x31c
   19288:	add	r2, r2, r3, lsl #2
   1928c:	add	r2, r2, #664	; 0x298
   19290:	str	r1, [r2]
   19294:	b	192d0 <traverse_product@@Base+0x4b8>
   19298:	movw	r0, #0
   1929c:	str	r0, [fp, #-12]
   192a0:	ldr	r0, [fp, #-12]
   192a4:	ldr	r1, [fp, #-8]
   192a8:	cmp	r0, r1
   192ac:	bge	192cc <traverse_product@@Base+0x4b4>
   192b0:	ldr	r0, [fp, #-12]
   192b4:	movw	r1, #0
   192b8:	bl	19594 <traverse_product@@Base+0x77c>
   192bc:	ldr	r0, [fp, #-12]
   192c0:	add	r0, r0, #1
   192c4:	str	r0, [fp, #-12]
   192c8:	b	192a0 <traverse_product@@Base+0x488>
   192cc:	b	192d0 <traverse_product@@Base+0x4b8>
   192d0:	movw	r0, #480	; 0x1e0
   192d4:	movt	r0, #3
   192d8:	ldr	r1, [r0, #136]	; 0x88
   192dc:	mvn	r2, #0
   192e0:	add	r1, r1, r2
   192e4:	str	r1, [r0, #136]	; 0x88
   192e8:	ldr	r1, [r0, #3748]	; 0xea4
   192ec:	add	r1, r1, r2
   192f0:	str	r1, [r0, #3748]	; 0xea4
   192f4:	b	1958c <traverse_product@@Base+0x774>
   192f8:	movw	r0, #480	; 0x1e0
   192fc:	movt	r0, #3
   19300:	ldr	r0, [r0, #136]	; 0x88
   19304:	cmp	r0, #31
   19308:	blt	19310 <traverse_product@@Base+0x4f8>
   1930c:	b	1958c <traverse_product@@Base+0x774>
   19310:	movw	r0, #480	; 0x1e0
   19314:	movt	r0, #3
   19318:	add	r0, r0, #8
   1931c:	str	r0, [sp, #20]
   19320:	bl	15364 <dim_enter_array@@Base>
   19324:	movw	r0, #480	; 0x1e0
   19328:	movt	r0, #3
   1932c:	ldr	r1, [r0, #3360]	; 0xd20
   19330:	add	r1, r1, #1
   19334:	str	r1, [r0, #3360]	; 0xd20
   19338:	ldr	r1, [r0, #136]	; 0x88
   1933c:	add	r1, r1, #1
   19340:	str	r1, [r0, #136]	; 0x88
   19344:	ldr	r1, [r0, #136]	; 0x88
   19348:	add	r0, r0, r1, lsl #2
   1934c:	ldr	r1, [r0, #4]
   19350:	add	r0, r0, #8
   19354:	str	r0, [sp, #16]
   19358:	mov	r0, r1
   1935c:	ldr	r1, [sp, #16]
   19360:	bl	128a0 <coda_type_get_array_base_type@plt>
   19364:	cmp	r0, #0
   19368:	beq	19378 <traverse_product@@Base+0x560>
   1936c:	movw	r0, #43812	; 0xab24
   19370:	movt	r0, #1
   19374:	blx	r0
   19378:	bl	18f4c <traverse_product@@Base+0x134>
   1937c:	movw	r0, #27168	; 0x6a20
   19380:	movt	r0, #1
   19384:	movw	r1, #480	; 0x1e0
   19388:	movt	r1, #3
   1938c:	ldr	r2, [r1, #136]	; 0x88
   19390:	mvn	r3, #0
   19394:	add	r2, r2, r3
   19398:	str	r2, [r1, #136]	; 0x88
   1939c:	ldr	r2, [r1, #3360]	; 0xd20
   193a0:	add	r2, r2, r3
   193a4:	str	r2, [r1, #3360]	; 0xd20
   193a8:	blx	r0
   193ac:	b	1958c <traverse_product@@Base+0x774>
   193b0:	movw	r0, #480	; 0x1e0
   193b4:	movt	r0, #3
   193b8:	add	r0, r0, #8
   193bc:	movw	r1, #480	; 0x1e0
   193c0:	movt	r1, #3
   193c4:	ldr	r2, [r1, #136]	; 0x88
   193c8:	add	r1, r1, r2, lsl #2
   193cc:	add	r1, r1, #8
   193d0:	ldr	r1, [r1]
   193d4:	str	r0, [sp, #12]
   193d8:	mov	r0, r1
   193dc:	sub	r1, fp, #24
   193e0:	bl	127d4 <coda_type_get_read_type@plt>
   193e4:	cmp	r0, #0
   193e8:	beq	193f8 <traverse_product@@Base+0x5e0>
   193ec:	movw	r0, #43812	; 0xab24
   193f0:	movt	r0, #1
   193f4:	blx	r0
   193f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193fc:	sub	r0, r0, #11
   19400:	cmp	r0, #1
   19404:	bhi	19458 <traverse_product@@Base+0x640>
   19408:	b	1940c <traverse_product@@Base+0x5f4>
   1940c:	movw	r0, #21348	; 0x5364
   19410:	movt	r0, #1
   19414:	blx	r0
   19418:	movw	r0, #480	; 0x1e0
   1941c:	movt	r0, #3
   19420:	ldr	r1, [r0, #3360]	; 0xd20
   19424:	add	r1, r1, #1
   19428:	str	r1, [r0, #3360]	; 0xd20
   1942c:	bl	197b0 <traverse_product@@Base+0x998>
   19430:	movw	r0, #27168	; 0x6a20
   19434:	movt	r0, #1
   19438:	movw	r1, #480	; 0x1e0
   1943c:	movt	r1, #3
   19440:	ldr	r2, [r1, #3360]	; 0xd20
   19444:	mvn	r3, #0
   19448:	add	r2, r2, r3
   1944c:	str	r2, [r1, #3360]	; 0xd20
   19450:	blx	r0
   19454:	b	1945c <traverse_product@@Base+0x644>
   19458:	bl	197b0 <traverse_product@@Base+0x998>
   1945c:	b	1958c <traverse_product@@Base+0x774>
   19460:	bl	125b8 <coda_get_option_bypass_special_types@plt>
   19464:	cmp	r0, #0
   19468:	beq	194b4 <traverse_product@@Base+0x69c>
   1946c:	movw	r0, #480	; 0x1e0
   19470:	movt	r0, #3
   19474:	add	r0, r0, #8
   19478:	movw	r1, #480	; 0x1e0
   1947c:	movt	r1, #3
   19480:	ldr	r2, [r1, #136]	; 0x88
   19484:	add	r1, r1, r2, lsl #2
   19488:	ldr	r2, [r1, #8]!
   1948c:	str	r0, [sp, #8]
   19490:	mov	r0, r2
   19494:	bl	129b4 <coda_type_get_special_base_type@plt>
   19498:	cmp	r0, #0
   1949c:	beq	194ac <traverse_product@@Base+0x694>
   194a0:	movw	r0, #43812	; 0xab24
   194a4:	movt	r0, #1
   194a8:	blx	r0
   194ac:	bl	18f4c <traverse_product@@Base+0x134>
   194b0:	b	1958c <traverse_product@@Base+0x774>
   194b4:	movw	r0, #480	; 0x1e0
   194b8:	movt	r0, #3
   194bc:	add	r0, r0, #8
   194c0:	movw	r1, #480	; 0x1e0
   194c4:	movt	r1, #3
   194c8:	ldr	r2, [r1, #136]	; 0x88
   194cc:	add	r1, r1, r2, lsl #2
   194d0:	add	r1, r1, #8
   194d4:	ldr	r1, [r1]
   194d8:	str	r0, [sp, #4]
   194dc:	mov	r0, r1
   194e0:	sub	r1, fp, #28
   194e4:	bl	1287c <coda_type_get_special_type@plt>
   194e8:	cmp	r0, #0
   194ec:	beq	194fc <traverse_product@@Base+0x6e4>
   194f0:	movw	r0, #43812	; 0xab24
   194f4:	movt	r0, #1
   194f8:	blx	r0
   194fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19500:	cmp	r0, #0
   19504:	str	r0, [sp]
   19508:	beq	19534 <traverse_product@@Base+0x71c>
   1950c:	b	19510 <traverse_product@@Base+0x6f8>
   19510:	ldr	r0, [sp]
   19514:	sub	r1, r0, #1
   19518:	cmp	r1, #2
   1951c:	bcc	19538 <traverse_product@@Base+0x720>
   19520:	b	19524 <traverse_product@@Base+0x70c>
   19524:	ldr	r0, [sp]
   19528:	cmp	r0, #3
   1952c:	beq	19540 <traverse_product@@Base+0x728>
   19530:	b	19588 <traverse_product@@Base+0x770>
   19534:	b	1958c <traverse_product@@Base+0x774>
   19538:	bl	197b0 <traverse_product@@Base+0x998>
   1953c:	b	19588 <traverse_product@@Base+0x770>
   19540:	movw	r0, #21348	; 0x5364
   19544:	movt	r0, #1
   19548:	blx	r0
   1954c:	movw	r0, #480	; 0x1e0
   19550:	movt	r0, #3
   19554:	ldr	r1, [r0, #3360]	; 0xd20
   19558:	add	r1, r1, #1
   1955c:	str	r1, [r0, #3360]	; 0xd20
   19560:	bl	197b0 <traverse_product@@Base+0x998>
   19564:	movw	r0, #27168	; 0x6a20
   19568:	movt	r0, #1
   1956c:	movw	r1, #480	; 0x1e0
   19570:	movt	r1, #3
   19574:	ldr	r2, [r1, #3360]	; 0xd20
   19578:	mvn	r3, #0
   1957c:	add	r2, r2, r3
   19580:	str	r2, [r1, #3360]	; 0xd20
   19584:	blx	r0
   19588:	b	1958c <traverse_product@@Base+0x774>
   1958c:	mov	sp, fp
   19590:	pop	{fp, pc}
   19594:	push	{fp, lr}
   19598:	mov	fp, sp
   1959c:	sub	sp, sp, #40	; 0x28
   195a0:	movw	r2, #480	; 0x1e0
   195a4:	movt	r2, #3
   195a8:	add	r2, r2, #8
   195ac:	str	r0, [fp, #-4]
   195b0:	str	r1, [fp, #-8]
   195b4:	ldr	r0, [fp, #-4]
   195b8:	movw	r1, #480	; 0x1e0
   195bc:	movt	r1, #3
   195c0:	ldr	r3, [r1, #3748]	; 0xea4
   195c4:	add	r3, r1, r3, lsl #2
   195c8:	str	r0, [r3, #3488]	; 0xda0
   195cc:	ldr	r0, [r1, #136]	; 0x88
   195d0:	sub	r0, r0, #1
   195d4:	add	r0, r1, r0, lsl #2
   195d8:	add	r0, r0, #8
   195dc:	ldr	r0, [r0]
   195e0:	ldr	r1, [fp, #-4]
   195e4:	sub	r3, fp, #12
   195e8:	str	r2, [sp, #20]
   195ec:	mov	r2, r3
   195f0:	bl	125dc <coda_type_get_record_field_hidden_status@plt>
   195f4:	cmp	r0, #0
   195f8:	beq	19608 <traverse_product@@Base+0x7f0>
   195fc:	movw	r0, #43812	; 0xab24
   19600:	movt	r0, #1
   19604:	blx	r0
   19608:	ldr	r0, [fp, #-12]
   1960c:	cmp	r0, #0
   19610:	beq	19624 <traverse_product@@Base+0x80c>
   19614:	ldr	r0, [fp, #-8]
   19618:	cmp	r0, #0
   1961c:	bne	19624 <traverse_product@@Base+0x80c>
   19620:	b	197a8 <traverse_product@@Base+0x990>
   19624:	movw	r0, #476	; 0x1dc
   19628:	movt	r0, #3
   1962c:	ldr	r0, [r0]
   19630:	cmp	r0, #0
   19634:	beq	196e8 <traverse_product@@Base+0x8d0>
   19638:	movw	r0, #480	; 0x1e0
   1963c:	movt	r0, #3
   19640:	add	r0, r0, #8
   19644:	movw	r1, #480	; 0x1e0
   19648:	movt	r1, #3
   1964c:	ldr	r2, [r1, #136]	; 0x88
   19650:	sub	r2, r2, #1
   19654:	add	r1, r1, r2, lsl #2
   19658:	add	r1, r1, #8
   1965c:	ldr	r1, [r1]
   19660:	ldr	r2, [fp, #-4]
   19664:	str	r0, [sp, #16]
   19668:	mov	r0, r1
   1966c:	mov	r1, r2
   19670:	sub	r2, fp, #16
   19674:	bl	126cc <coda_type_get_record_field_available_status@plt>
   19678:	cmp	r0, #0
   1967c:	beq	1968c <traverse_product@@Base+0x874>
   19680:	movw	r0, #43812	; 0xab24
   19684:	movt	r0, #1
   19688:	blx	r0
   1968c:	ldr	r0, [fp, #-16]
   19690:	cmn	r0, #1
   19694:	bne	196b4 <traverse_product@@Base+0x89c>
   19698:	movw	r0, #27788	; 0x6c8c
   1969c:	movt	r0, #1
   196a0:	blx	r0
   196a4:	cmp	r0, #0
   196a8:	bne	196b0 <traverse_product@@Base+0x898>
   196ac:	b	197a8 <traverse_product@@Base+0x990>
   196b0:	b	196b4 <traverse_product@@Base+0x89c>
   196b4:	movw	r0, #3364	; 0xd24
   196b8:	movw	r1, #480	; 0x1e0
   196bc:	movt	r1, #3
   196c0:	add	r0, r1, r0
   196c4:	ldr	r1, [fp, #-16]
   196c8:	movw	r2, #480	; 0x1e0
   196cc:	movt	r2, #3
   196d0:	ldr	r3, [r2, #136]	; 0x88
   196d4:	sub	r3, r3, #1
   196d8:	add	r2, r2, r3, lsl #2
   196dc:	movw	r3, #3364	; 0xd24
   196e0:	add	r2, r2, r3
   196e4:	str	r1, [r2]
   196e8:	movw	r0, #3620	; 0xe24
   196ec:	movw	r1, #480	; 0x1e0
   196f0:	movt	r1, #3
   196f4:	add	r0, r1, r0
   196f8:	movw	r1, #480	; 0x1e0
   196fc:	movt	r1, #3
   19700:	ldr	r2, [r1, #136]	; 0x88
   19704:	add	r2, r1, r2, lsl #2
   19708:	ldr	r2, [r2, #4]
   1970c:	ldr	r3, [fp, #-4]
   19710:	ldr	ip, [r1, #3748]	; 0xea4
   19714:	sub	ip, ip, #1
   19718:	add	r1, r1, ip, lsl #2
   1971c:	movw	ip, #3620	; 0xe24
   19720:	add	r1, r1, ip
   19724:	str	r0, [sp, #12]
   19728:	mov	r0, r2
   1972c:	str	r1, [sp, #8]
   19730:	mov	r1, r3
   19734:	ldr	r2, [sp, #8]
   19738:	bl	129c0 <coda_type_get_record_field_name@plt>
   1973c:	cmp	r0, #0
   19740:	beq	19750 <traverse_product@@Base+0x938>
   19744:	movw	r0, #43812	; 0xab24
   19748:	movt	r0, #1
   1974c:	blx	r0
   19750:	movw	r0, #480	; 0x1e0
   19754:	movt	r0, #3
   19758:	add	r0, r0, #8
   1975c:	movw	r1, #480	; 0x1e0
   19760:	movt	r1, #3
   19764:	ldr	r2, [r1, #136]	; 0x88
   19768:	add	r1, r1, r2, lsl #2
   1976c:	ldr	r2, [r1, #4]
   19770:	ldr	r3, [fp, #-4]
   19774:	add	r1, r1, #8
   19778:	str	r0, [sp, #4]
   1977c:	mov	r0, r2
   19780:	str	r1, [sp]
   19784:	mov	r1, r3
   19788:	ldr	r2, [sp]
   1978c:	bl	12690 <coda_type_get_record_field_type@plt>
   19790:	cmp	r0, #0
   19794:	beq	197a4 <traverse_product@@Base+0x98c>
   19798:	movw	r0, #43812	; 0xab24
   1979c:	movt	r0, #1
   197a0:	blx	r0
   197a4:	bl	18f4c <traverse_product@@Base+0x134>
   197a8:	mov	sp, fp
   197ac:	pop	{fp, pc}
   197b0:	push	{fp, lr}
   197b4:	mov	fp, sp
   197b8:	sub	sp, sp, #56	; 0x38
   197bc:	movw	r0, #4252	; 0x109c
   197c0:	movt	r0, #3
   197c4:	ldr	r0, [r0]
   197c8:	cmp	r0, #0
   197cc:	bne	19b34 <traverse_product@@Base+0xd1c>
   197d0:	movw	r0, #428	; 0x1ac
   197d4:	movt	r0, #3
   197d8:	ldr	r0, [r0]
   197dc:	movw	r1, #1
   197e0:	movw	r2, #0
   197e4:	bl	1874c <print_full_field_name@@Base>
   197e8:	movw	r0, #4240	; 0x1090
   197ec:	movt	r0, #3
   197f0:	ldr	r0, [r0]
   197f4:	cmp	r0, #0
   197f8:	beq	199b4 <traverse_product@@Base+0xb9c>
   197fc:	movw	r0, #480	; 0x1e0
   19800:	movt	r0, #3
   19804:	add	r0, r0, #8
   19808:	movw	r1, #480	; 0x1e0
   1980c:	movt	r1, #3
   19810:	ldr	r2, [r1, #136]	; 0x88
   19814:	add	r1, r1, r2, lsl #2
   19818:	add	r1, r1, #8
   1981c:	ldr	r1, [r1]
   19820:	str	r0, [sp, #28]
   19824:	mov	r0, r1
   19828:	sub	r1, fp, #4
   1982c:	bl	129fc <coda_type_get_class@plt>
   19830:	cmp	r0, #0
   19834:	beq	19844 <traverse_product@@Base+0xa2c>
   19838:	movw	r0, #43812	; 0xab24
   1983c:	movt	r0, #1
   19840:	blx	r0
   19844:	ldr	r0, [fp, #-4]
   19848:	cmp	r0, #6
   1984c:	bne	198bc <traverse_product@@Base+0xaa4>
   19850:	movw	r0, #480	; 0x1e0
   19854:	movt	r0, #3
   19858:	add	r0, r0, #8
   1985c:	movw	r1, #480	; 0x1e0
   19860:	movt	r1, #3
   19864:	ldr	r2, [r1, #136]	; 0x88
   19868:	add	r1, r1, r2, lsl #2
   1986c:	add	r1, r1, #8
   19870:	ldr	r1, [r1]
   19874:	str	r0, [sp, #24]
   19878:	mov	r0, r1
   1987c:	sub	r1, fp, #8
   19880:	bl	1287c <coda_type_get_special_type@plt>
   19884:	cmp	r0, #0
   19888:	beq	19898 <traverse_product@@Base+0xa80>
   1988c:	movw	r0, #43812	; 0xab24
   19890:	movt	r0, #1
   19894:	blx	r0
   19898:	ldr	r0, [fp, #-8]
   1989c:	bl	12594 <coda_type_get_special_type_name@plt>
   198a0:	movw	r1, #57281	; 0xdfc1
   198a4:	movt	r1, #1
   198a8:	str	r0, [sp, #20]
   198ac:	mov	r0, r1
   198b0:	ldr	r1, [sp, #20]
   198b4:	bl	125e8 <printf@plt>
   198b8:	b	199b0 <traverse_product@@Base+0xb98>
   198bc:	movw	r0, #480	; 0x1e0
   198c0:	movt	r0, #3
   198c4:	add	r0, r0, #8
   198c8:	movw	r1, #480	; 0x1e0
   198cc:	movt	r1, #3
   198d0:	ldr	r2, [r1, #136]	; 0x88
   198d4:	add	r1, r1, r2, lsl #2
   198d8:	add	r1, r1, #8
   198dc:	ldr	r1, [r1]
   198e0:	str	r0, [sp, #16]
   198e4:	mov	r0, r1
   198e8:	sub	r1, fp, #12
   198ec:	bl	127d4 <coda_type_get_read_type@plt>
   198f0:	cmp	r0, #0
   198f4:	beq	19904 <traverse_product@@Base+0xaec>
   198f8:	movw	r0, #43812	; 0xab24
   198fc:	movt	r0, #1
   19900:	blx	r0
   19904:	ldr	r0, [fp, #-12]
   19908:	bl	128c4 <coda_type_get_native_type_name@plt>
   1990c:	movw	r1, #57281	; 0xdfc1
   19910:	movt	r1, #1
   19914:	str	r0, [sp, #12]
   19918:	mov	r0, r1
   1991c:	ldr	r1, [sp, #12]
   19920:	bl	125e8 <printf@plt>
   19924:	ldr	r1, [fp, #-12]
   19928:	cmp	r1, #11
   1992c:	beq	1993c <traverse_product@@Base+0xb24>
   19930:	ldr	r0, [fp, #-12]
   19934:	cmp	r0, #12
   19938:	bne	199ac <traverse_product@@Base+0xb94>
   1993c:	movw	r0, #56004	; 0xdac4
   19940:	movt	r0, #1
   19944:	bl	125e8 <printf@plt>
   19948:	movw	r1, #480	; 0x1e0
   1994c:	movt	r1, #3
   19950:	ldr	r1, [r1, #3360]	; 0xd20
   19954:	cmp	r1, #0
   19958:	ble	19960 <traverse_product@@Base+0xb48>
   1995c:	b	19980 <traverse_product@@Base+0xb68>
   19960:	movw	r0, #57285	; 0xdfc5
   19964:	movt	r0, #1
   19968:	movw	r1, #57121	; 0xdf21
   1996c:	movt	r1, #1
   19970:	movw	r2, #238	; 0xee
   19974:	movw	r3, #57314	; 0xdfe2
   19978:	movt	r3, #1
   1997c:	bl	129f0 <__assert_fail@plt>
   19980:	movw	r0, #428	; 0x1ac
   19984:	movt	r0, #3
   19988:	ldr	r0, [r0]
   1998c:	movw	r1, #480	; 0x1e0
   19990:	movt	r1, #3
   19994:	ldr	r1, [r1, #3360]	; 0xd20
   19998:	sub	r1, r1, #1
   1999c:	bl	18bc8 <print_full_field_name@@Base+0x47c>
   199a0:	movw	r0, #57227	; 0xdf8b
   199a4:	movt	r0, #1
   199a8:	bl	125e8 <printf@plt>
   199ac:	b	199b0 <traverse_product@@Base+0xb98>
   199b0:	b	199b4 <traverse_product@@Base+0xb9c>
   199b4:	movw	r0, #472	; 0x1d8
   199b8:	movt	r0, #3
   199bc:	ldr	r0, [r0]
   199c0:	cmp	r0, #0
   199c4:	beq	19a44 <traverse_product@@Base+0xc2c>
   199c8:	movw	r0, #480	; 0x1e0
   199cc:	movt	r0, #3
   199d0:	add	r0, r0, #8
   199d4:	movw	r1, #480	; 0x1e0
   199d8:	movt	r1, #3
   199dc:	ldr	r2, [r1, #136]	; 0x88
   199e0:	add	r1, r1, r2, lsl #2
   199e4:	add	r1, r1, #8
   199e8:	ldr	r1, [r1]
   199ec:	str	r0, [sp, #8]
   199f0:	mov	r0, r1
   199f4:	sub	r1, fp, #16
   199f8:	bl	12708 <coda_type_get_unit@plt>
   199fc:	cmp	r0, #0
   19a00:	beq	19a10 <traverse_product@@Base+0xbf8>
   19a04:	movw	r0, #43812	; 0xab24
   19a08:	movt	r0, #1
   19a0c:	blx	r0
   19a10:	ldr	r0, [fp, #-16]
   19a14:	movw	r1, #0
   19a18:	cmp	r0, r1
   19a1c:	beq	19a40 <traverse_product@@Base+0xc28>
   19a20:	ldr	r0, [fp, #-16]
   19a24:	ldrb	r0, [r0]
   19a28:	cmp	r0, #0
   19a2c:	beq	19a40 <traverse_product@@Base+0xc28>
   19a30:	ldr	r1, [fp, #-16]
   19a34:	movw	r0, #57341	; 0xdffd
   19a38:	movt	r0, #1
   19a3c:	bl	125e8 <printf@plt>
   19a40:	b	19a44 <traverse_product@@Base+0xc2c>
   19a44:	movw	r0, #4244	; 0x1094
   19a48:	movt	r0, #3
   19a4c:	ldr	r0, [r0]
   19a50:	cmp	r0, #0
   19a54:	beq	19ad4 <traverse_product@@Base+0xcbc>
   19a58:	movw	r0, #480	; 0x1e0
   19a5c:	movt	r0, #3
   19a60:	add	r0, r0, #8
   19a64:	movw	r1, #480	; 0x1e0
   19a68:	movt	r1, #3
   19a6c:	ldr	r2, [r1, #136]	; 0x88
   19a70:	add	r1, r1, r2, lsl #2
   19a74:	add	r1, r1, #8
   19a78:	ldr	r1, [r1]
   19a7c:	str	r0, [sp, #4]
   19a80:	mov	r0, r1
   19a84:	sub	r1, fp, #20
   19a88:	bl	12714 <coda_type_get_description@plt>
   19a8c:	cmp	r0, #0
   19a90:	beq	19aa0 <traverse_product@@Base+0xc88>
   19a94:	movw	r0, #43812	; 0xab24
   19a98:	movt	r0, #1
   19a9c:	blx	r0
   19aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19aa4:	movw	r1, #0
   19aa8:	cmp	r0, r1
   19aac:	beq	19ad0 <traverse_product@@Base+0xcb8>
   19ab0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ab4:	ldrb	r0, [r0]
   19ab8:	cmp	r0, #0
   19abc:	beq	19ad0 <traverse_product@@Base+0xcb8>
   19ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ac4:	movw	r0, #57347	; 0xe003
   19ac8:	movt	r0, #1
   19acc:	bl	125e8 <printf@plt>
   19ad0:	b	19ad4 <traverse_product@@Base+0xcbc>
   19ad4:	movw	r0, #61913	; 0xf1d9
   19ad8:	movt	r0, #1
   19adc:	bl	125e8 <printf@plt>
   19ae0:	movw	r1, #460	; 0x1cc
   19ae4:	movt	r1, #3
   19ae8:	ldr	r1, [r1]
   19aec:	cmp	r1, #0
   19af0:	beq	19b30 <traverse_product@@Base+0xd18>
   19af4:	movw	r0, #0
   19af8:	str	r0, [fp, #-24]	; 0xffffffe8
   19afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b00:	movw	r1, #4264	; 0x10a8
   19b04:	movt	r1, #3
   19b08:	ldr	r1, [r1]
   19b0c:	cmp	r0, r1
   19b10:	bge	19b2c <traverse_product@@Base+0xd14>
   19b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b18:	bl	14fb4 <print_all_distinct_dims@@Base>
   19b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b20:	add	r0, r0, #1
   19b24:	str	r0, [fp, #-24]	; 0xffffffe8
   19b28:	b	19afc <traverse_product@@Base+0xce4>
   19b2c:	b	19b30 <traverse_product@@Base+0xd18>
   19b30:	b	19b58 <traverse_product@@Base+0xd40>
   19b34:	movw	r0, #4252	; 0x109c
   19b38:	movt	r0, #3
   19b3c:	ldr	r0, [r0]
   19b40:	cmp	r0, #1
   19b44:	bne	19b54 <traverse_product@@Base+0xd3c>
   19b48:	movw	r0, #11000	; 0x2af8
   19b4c:	movt	r0, #1
   19b50:	blx	r0
   19b54:	b	19b58 <traverse_product@@Base+0xd40>
   19b58:	mov	sp, fp
   19b5c:	pop	{fp, pc}

00019b60 <print_yaml_data@@Base>:
   19b60:	push	{r4, r5, fp, lr}
   19b64:	add	fp, sp, #8
   19b68:	sub	sp, sp, #544	; 0x220
   19b6c:	str	r0, [fp, #-12]
   19b70:	ldr	r0, [fp, #-12]
   19b74:	movw	r1, #444	; 0x1bc
   19b78:	movt	r1, #3
   19b7c:	str	r0, [r1]
   19b80:	movw	r0, #480	; 0x1e0
   19b84:	movt	r0, #3
   19b88:	ldr	r0, [r0]
   19b8c:	sub	r1, fp, #16
   19b90:	bl	12618 <coda_open@plt>
   19b94:	str	r0, [sp, #12]
   19b98:	ldr	r0, [sp, #12]
   19b9c:	cmp	r0, #0
   19ba0:	beq	19be4 <print_yaml_data@@Base+0x84>
   19ba4:	bl	129a8 <coda_get_errno@plt>
   19ba8:	ldr	r0, [r0]
   19bac:	cmn	r0, #21
   19bb0:	bne	19be4 <print_yaml_data@@Base+0x84>
   19bb4:	movw	r0, #0
   19bb8:	bl	12660 <coda_set_option_use_mmap@plt>
   19bbc:	movw	r1, #480	; 0x1e0
   19bc0:	movt	r1, #3
   19bc4:	ldr	r1, [r1]
   19bc8:	str	r0, [sp, #8]
   19bcc:	mov	r0, r1
   19bd0:	sub	r1, fp, #16
   19bd4:	bl	12618 <coda_open@plt>
   19bd8:	str	r0, [sp, #12]
   19bdc:	movw	r0, #1
   19be0:	bl	12660 <coda_set_option_use_mmap@plt>
   19be4:	ldr	r0, [sp, #12]
   19be8:	cmp	r0, #0
   19bec:	beq	19bfc <print_yaml_data@@Base+0x9c>
   19bf0:	movw	r0, #43812	; 0xab24
   19bf4:	movt	r0, #1
   19bf8:	blx	r0
   19bfc:	ldr	r1, [fp, #-16]
   19c00:	add	r0, sp, #16
   19c04:	bl	12738 <coda_cursor_set_product@plt>
   19c08:	cmp	r0, #0
   19c0c:	beq	19c1c <print_yaml_data@@Base+0xbc>
   19c10:	movw	r0, #43812	; 0xab24
   19c14:	movt	r0, #1
   19c18:	blx	r0
   19c1c:	movw	r0, #4256	; 0x10a0
   19c20:	movt	r0, #3
   19c24:	ldr	r0, [r0]
   19c28:	movw	r1, #0
   19c2c:	cmp	r0, r1
   19c30:	beq	19c68 <print_yaml_data@@Base+0x108>
   19c34:	movw	r0, #4256	; 0x10a0
   19c38:	movt	r0, #3
   19c3c:	ldr	r1, [r0]
   19c40:	add	r0, sp, #16
   19c44:	bl	1290c <coda_cursor_goto@plt>
   19c48:	str	r0, [sp, #12]
   19c4c:	ldr	r0, [sp, #12]
   19c50:	cmp	r0, #0
   19c54:	beq	19c64 <print_yaml_data@@Base+0x104>
   19c58:	movw	r0, #43812	; 0xab24
   19c5c:	movt	r0, #1
   19c60:	blx	r0
   19c64:	b	19c68 <print_yaml_data@@Base+0x108>
   19c68:	movw	r0, #0
   19c6c:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   19c70:	add	r1, sp, #16
   19c74:	str	r0, [sp, #4]
   19c78:	mov	r0, r1
   19c7c:	movw	r1, #0
   19c80:	bl	19c94 <print_yaml_data@@Base+0x134>
   19c84:	ldr	r0, [fp, #-16]
   19c88:	bl	128e8 <coda_close@plt>
   19c8c:	sub	sp, fp, #8
   19c90:	pop	{r4, r5, fp, pc}
   19c94:	push	{r4, r5, fp, lr}
   19c98:	add	fp, sp, #8
   19c9c:	sub	sp, sp, #360	; 0x168
   19ca0:	str	r0, [fp, #-12]
   19ca4:	str	r1, [fp, #-16]
   19ca8:	movw	r0, #0
   19cac:	str	r0, [fp, #-24]	; 0xffffffe8
   19cb0:	movw	r0, #444	; 0x1bc
   19cb4:	movt	r0, #3
   19cb8:	ldr	r0, [r0]
   19cbc:	cmp	r0, #0
   19cc0:	beq	19dac <print_yaml_data@@Base+0x24c>
   19cc4:	ldr	r0, [fp, #-12]
   19cc8:	sub	r1, fp, #24
   19ccc:	bl	126d8 <coda_cursor_has_attributes@plt>
   19cd0:	cmp	r0, #0
   19cd4:	beq	19ce4 <print_yaml_data@@Base+0x184>
   19cd8:	movw	r0, #43812	; 0xab24
   19cdc:	movt	r0, #1
   19ce0:	blx	r0
   19ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ce8:	cmp	r0, #0
   19cec:	beq	19da8 <print_yaml_data@@Base+0x248>
   19cf0:	ldr	r0, [fp, #-16]
   19cf4:	cmp	r0, #0
   19cf8:	beq	19d10 <print_yaml_data@@Base+0x1b0>
   19cfc:	movw	r0, #61913	; 0xf1d9
   19d00:	movt	r0, #1
   19d04:	bl	1a844 <print_yaml_data@@Base+0xce4>
   19d08:	str	r0, [sp, #68]	; 0x44
   19d0c:	bl	1a8a8 <print_yaml_data@@Base+0xd48>
   19d10:	movw	r0, #57353	; 0xe009
   19d14:	movt	r0, #1
   19d18:	bl	1a844 <print_yaml_data@@Base+0xce4>
   19d1c:	ldr	r1, [fp, #-12]
   19d20:	str	r0, [sp, #64]	; 0x40
   19d24:	mov	r0, r1
   19d28:	bl	1284c <coda_cursor_goto_attributes@plt>
   19d2c:	cmp	r0, #0
   19d30:	beq	19d40 <print_yaml_data@@Base+0x1e0>
   19d34:	movw	r0, #43812	; 0xab24
   19d38:	movt	r0, #1
   19d3c:	blx	r0
   19d40:	movw	r0, #448	; 0x1c0
   19d44:	movt	r0, #3
   19d48:	ldr	r1, [r0]
   19d4c:	add	r1, r1, #1
   19d50:	str	r1, [r0]
   19d54:	ldr	r0, [fp, #-12]
   19d58:	movw	r1, #1
   19d5c:	bl	19c94 <print_yaml_data@@Base+0x134>
   19d60:	movw	r0, #448	; 0x1c0
   19d64:	movt	r0, #3
   19d68:	ldr	r1, [r0]
   19d6c:	mvn	r2, #0
   19d70:	add	r1, r1, r2
   19d74:	str	r1, [r0]
   19d78:	ldr	r0, [fp, #-12]
   19d7c:	bl	127b0 <coda_cursor_goto_parent@plt>
   19d80:	movw	r1, #57360	; 0xe010
   19d84:	movt	r1, #1
   19d88:	str	r0, [sp, #60]	; 0x3c
   19d8c:	mov	r0, r1
   19d90:	bl	1a93c <print_yaml_data@@Base+0xddc>
   19d94:	movw	r1, #448	; 0x1c0
   19d98:	movt	r1, #3
   19d9c:	ldr	r2, [r1]
   19da0:	add	r2, r2, #1
   19da4:	str	r2, [r1]
   19da8:	b	19dac <print_yaml_data@@Base+0x24c>
   19dac:	ldr	r0, [fp, #-12]
   19db0:	sub	r1, fp, #20
   19db4:	bl	126e4 <coda_cursor_get_type_class@plt>
   19db8:	cmp	r0, #0
   19dbc:	beq	19dcc <print_yaml_data@@Base+0x26c>
   19dc0:	movw	r0, #43812	; 0xab24
   19dc4:	movt	r0, #1
   19dc8:	blx	r0
   19dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   19dd0:	cmp	r0, #6
   19dd4:	str	r0, [sp, #56]	; 0x38
   19dd8:	bhi	1a818 <print_yaml_data@@Base+0xcb8>
   19ddc:	add	r0, pc, #8
   19de0:	ldr	r1, [sp, #56]	; 0x38
   19de4:	ldr	r0, [r0, r1, lsl #2]
   19de8:	mov	pc, r0
   19dec:	andeq	r9, r1, r8, lsl #28
   19df0:	ldrdeq	sl, [r1], -ip
   19df4:	andeq	sl, r1, ip, ror #4
   19df8:	andeq	sl, r1, ip, ror #4
   19dfc:	andeq	sl, r1, ip, ror #4
   19e00:	andeq	sl, r1, ip, ror #4
   19e04:	andeq	sl, r1, r0, lsr #13
   19e08:	ldr	r0, [fp, #-12]
   19e0c:	sub	r1, fp, #28
   19e10:	bl	1263c <coda_cursor_get_num_elements@plt>
   19e14:	cmp	r0, #0
   19e18:	beq	19e28 <print_yaml_data@@Base+0x2c8>
   19e1c:	movw	r0, #43812	; 0xab24
   19e20:	movt	r0, #1
   19e24:	blx	r0
   19e28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e2c:	cmp	r0, #0
   19e30:	ble	1a0cc <print_yaml_data@@Base+0x56c>
   19e34:	ldr	r0, [fp, #-16]
   19e38:	cmp	r0, #0
   19e3c:	beq	19e4c <print_yaml_data@@Base+0x2ec>
   19e40:	movw	r0, #61913	; 0xf1d9
   19e44:	movt	r0, #1
   19e48:	bl	1a844 <print_yaml_data@@Base+0xce4>
   19e4c:	ldr	r0, [fp, #-12]
   19e50:	sub	r1, fp, #32
   19e54:	bl	1269c <coda_cursor_get_type@plt>
   19e58:	cmp	r0, #0
   19e5c:	beq	19e6c <print_yaml_data@@Base+0x30c>
   19e60:	movw	r0, #43812	; 0xab24
   19e64:	movt	r0, #1
   19e68:	blx	r0
   19e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e70:	sub	r1, fp, #36	; 0x24
   19e74:	bl	12888 <coda_type_get_record_union_status@plt>
   19e78:	cmp	r0, #0
   19e7c:	beq	19e8c <print_yaml_data@@Base+0x32c>
   19e80:	movw	r0, #43812	; 0xab24
   19e84:	movt	r0, #1
   19e88:	blx	r0
   19e8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e90:	cmp	r0, #0
   19e94:	beq	19f68 <print_yaml_data@@Base+0x408>
   19e98:	ldr	r0, [fp, #-12]
   19e9c:	sub	r1, fp, #40	; 0x28
   19ea0:	bl	12978 <coda_cursor_get_available_union_field_index@plt>
   19ea4:	cmp	r0, #0
   19ea8:	beq	19eb8 <print_yaml_data@@Base+0x358>
   19eac:	movw	r0, #43812	; 0xab24
   19eb0:	movt	r0, #1
   19eb4:	blx	r0
   19eb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ebc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19ec0:	sub	r2, fp, #44	; 0x2c
   19ec4:	bl	129c0 <coda_type_get_record_field_name@plt>
   19ec8:	cmp	r0, #0
   19ecc:	beq	19edc <print_yaml_data@@Base+0x37c>
   19ed0:	movw	r0, #43812	; 0xab24
   19ed4:	movt	r0, #1
   19ed8:	blx	r0
   19edc:	ldr	r0, [fp, #-12]
   19ee0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19ee4:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   19ee8:	cmp	r0, #0
   19eec:	beq	19efc <print_yaml_data@@Base+0x39c>
   19ef0:	movw	r0, #43812	; 0xab24
   19ef4:	movt	r0, #1
   19ef8:	blx	r0
   19efc:	ldr	r0, [fp, #-16]
   19f00:	cmp	r0, #0
   19f04:	beq	19f0c <print_yaml_data@@Base+0x3ac>
   19f08:	bl	1a8a8 <print_yaml_data@@Base+0xd48>
   19f0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f10:	movw	r0, #57367	; 0xe017
   19f14:	movt	r0, #1
   19f18:	bl	1a844 <print_yaml_data@@Base+0xce4>
   19f1c:	movw	r1, #448	; 0x1c0
   19f20:	movt	r1, #3
   19f24:	ldr	r2, [r1]
   19f28:	add	r2, r2, #1
   19f2c:	str	r2, [r1]
   19f30:	ldr	r1, [fp, #-12]
   19f34:	str	r0, [sp, #52]	; 0x34
   19f38:	mov	r0, r1
   19f3c:	movw	r1, #1
   19f40:	bl	19c94 <print_yaml_data@@Base+0x134>
   19f44:	movw	r0, #448	; 0x1c0
   19f48:	movt	r0, #3
   19f4c:	ldr	r1, [r0]
   19f50:	mvn	r2, #0
   19f54:	add	r1, r1, r2
   19f58:	str	r1, [r0]
   19f5c:	ldr	r0, [fp, #-12]
   19f60:	bl	127b0 <coda_cursor_goto_parent@plt>
   19f64:	b	1a0c8 <print_yaml_data@@Base+0x568>
   19f68:	movw	r0, #1
   19f6c:	str	r0, [fp, #-48]	; 0xffffffd0
   19f70:	ldr	r0, [fp, #-12]
   19f74:	bl	12750 <coda_cursor_goto_first_record_field@plt>
   19f78:	cmp	r0, #0
   19f7c:	beq	19f8c <print_yaml_data@@Base+0x42c>
   19f80:	movw	r0, #43812	; 0xab24
   19f84:	movt	r0, #1
   19f88:	blx	r0
   19f8c:	movw	r0, #0
   19f90:	str	r0, [fp, #-40]	; 0xffffffd8
   19f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f9c:	cmp	r0, r1
   19fa0:	bge	1a0c0 <print_yaml_data@@Base+0x560>
   19fa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fac:	sub	r2, fp, #56	; 0x38
   19fb0:	bl	125dc <coda_type_get_record_field_hidden_status@plt>
   19fb4:	cmp	r0, #0
   19fb8:	beq	19fc8 <print_yaml_data@@Base+0x468>
   19fbc:	movw	r0, #43812	; 0xab24
   19fc0:	movt	r0, #1
   19fc4:	blx	r0
   19fc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19fcc:	cmp	r0, #0
   19fd0:	bne	1a078 <print_yaml_data@@Base+0x518>
   19fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fdc:	sub	r2, fp, #52	; 0x34
   19fe0:	bl	129c0 <coda_type_get_record_field_name@plt>
   19fe4:	cmp	r0, #0
   19fe8:	beq	19ff8 <print_yaml_data@@Base+0x498>
   19fec:	movw	r0, #43812	; 0xab24
   19ff0:	movt	r0, #1
   19ff4:	blx	r0
   19ff8:	ldr	r0, [fp, #-16]
   19ffc:	cmp	r0, #0
   1a000:	bne	1a010 <print_yaml_data@@Base+0x4b0>
   1a004:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a008:	cmp	r0, #0
   1a00c:	bne	1a014 <print_yaml_data@@Base+0x4b4>
   1a010:	bl	1a8a8 <print_yaml_data@@Base+0xd48>
   1a014:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a018:	cmp	r0, #0
   1a01c:	beq	1a028 <print_yaml_data@@Base+0x4c8>
   1a020:	movw	r0, #0
   1a024:	str	r0, [fp, #-48]	; 0xffffffd0
   1a028:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a02c:	movw	r0, #57367	; 0xe017
   1a030:	movt	r0, #1
   1a034:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a038:	movw	r1, #448	; 0x1c0
   1a03c:	movt	r1, #3
   1a040:	ldr	r2, [r1]
   1a044:	add	r2, r2, #1
   1a048:	str	r2, [r1]
   1a04c:	ldr	r1, [fp, #-12]
   1a050:	str	r0, [sp, #48]	; 0x30
   1a054:	mov	r0, r1
   1a058:	movw	r1, #1
   1a05c:	bl	19c94 <print_yaml_data@@Base+0x134>
   1a060:	movw	r0, #448	; 0x1c0
   1a064:	movt	r0, #3
   1a068:	ldr	r1, [r0]
   1a06c:	mvn	r2, #0
   1a070:	add	r1, r1, r2
   1a074:	str	r1, [r0]
   1a078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a07c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a080:	sub	r1, r1, #1
   1a084:	cmp	r0, r1
   1a088:	bge	1a0ac <print_yaml_data@@Base+0x54c>
   1a08c:	ldr	r0, [fp, #-12]
   1a090:	bl	12930 <coda_cursor_goto_next_record_field@plt>
   1a094:	cmp	r0, #0
   1a098:	beq	1a0a8 <print_yaml_data@@Base+0x548>
   1a09c:	movw	r0, #43812	; 0xab24
   1a0a0:	movt	r0, #1
   1a0a4:	blx	r0
   1a0a8:	b	1a0ac <print_yaml_data@@Base+0x54c>
   1a0ac:	b	1a0b0 <print_yaml_data@@Base+0x550>
   1a0b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0b4:	add	r0, r0, #1
   1a0b8:	str	r0, [fp, #-40]	; 0xffffffd8
   1a0bc:	b	19f94 <print_yaml_data@@Base+0x434>
   1a0c0:	ldr	r0, [fp, #-12]
   1a0c4:	bl	127b0 <coda_cursor_goto_parent@plt>
   1a0c8:	b	1a0d8 <print_yaml_data@@Base+0x578>
   1a0cc:	movw	r0, #57372	; 0xe01c
   1a0d0:	movt	r0, #1
   1a0d4:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a0d8:	b	1a818 <print_yaml_data@@Base+0xcb8>
   1a0dc:	sub	r2, fp, #88	; 0x58
   1a0e0:	ldr	r0, [fp, #-12]
   1a0e4:	sub	r1, fp, #92	; 0x5c
   1a0e8:	bl	128d0 <coda_cursor_get_array_dim@plt>
   1a0ec:	cmp	r0, #0
   1a0f0:	beq	1a100 <print_yaml_data@@Base+0x5a0>
   1a0f4:	movw	r0, #43812	; 0xab24
   1a0f8:	movt	r0, #1
   1a0fc:	blx	r0
   1a100:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a104:	cmp	r0, #0
   1a108:	blt	1a25c <print_yaml_data@@Base+0x6fc>
   1a10c:	movw	r0, #1
   1a110:	str	r0, [fp, #-96]	; 0xffffffa0
   1a114:	movw	r0, #0
   1a118:	str	r0, [fp, #-100]	; 0xffffff9c
   1a11c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a120:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a124:	cmp	r0, r1
   1a128:	bge	1a158 <print_yaml_data@@Base+0x5f8>
   1a12c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a130:	sub	r1, fp, #88	; 0x58
   1a134:	add	r0, r1, r0, lsl #2
   1a138:	ldr	r0, [r0]
   1a13c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a140:	mul	r0, r1, r0
   1a144:	str	r0, [fp, #-96]	; 0xffffffa0
   1a148:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a14c:	add	r0, r0, #1
   1a150:	str	r0, [fp, #-100]	; 0xffffff9c
   1a154:	b	1a11c <print_yaml_data@@Base+0x5bc>
   1a158:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a15c:	cmp	r0, #0
   1a160:	ble	1a24c <print_yaml_data@@Base+0x6ec>
   1a164:	movw	r0, #61913	; 0xf1d9
   1a168:	movt	r0, #1
   1a16c:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a170:	ldr	r1, [fp, #-12]
   1a174:	str	r0, [sp, #44]	; 0x2c
   1a178:	mov	r0, r1
   1a17c:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   1a180:	cmp	r0, #0
   1a184:	beq	1a194 <print_yaml_data@@Base+0x634>
   1a188:	movw	r0, #43812	; 0xab24
   1a18c:	movt	r0, #1
   1a190:	blx	r0
   1a194:	movw	r0, #0
   1a198:	str	r0, [fp, #-100]	; 0xffffff9c
   1a19c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a1a0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a1a4:	cmp	r0, r1
   1a1a8:	bge	1a240 <print_yaml_data@@Base+0x6e0>
   1a1ac:	movw	r0, #57376	; 0xe020
   1a1b0:	movt	r0, #1
   1a1b4:	bl	1a93c <print_yaml_data@@Base+0xddc>
   1a1b8:	movw	r1, #448	; 0x1c0
   1a1bc:	movt	r1, #3
   1a1c0:	ldr	r2, [r1]
   1a1c4:	add	r2, r2, #1
   1a1c8:	str	r2, [r1]
   1a1cc:	ldr	r1, [fp, #-12]
   1a1d0:	str	r0, [sp, #40]	; 0x28
   1a1d4:	mov	r0, r1
   1a1d8:	movw	r1, #0
   1a1dc:	bl	19c94 <print_yaml_data@@Base+0x134>
   1a1e0:	movw	r0, #448	; 0x1c0
   1a1e4:	movt	r0, #3
   1a1e8:	ldr	r1, [r0]
   1a1ec:	mvn	r2, #0
   1a1f0:	add	r1, r1, r2
   1a1f4:	str	r1, [r0]
   1a1f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a1fc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a200:	sub	r1, r1, #1
   1a204:	cmp	r0, r1
   1a208:	bge	1a22c <print_yaml_data@@Base+0x6cc>
   1a20c:	ldr	r0, [fp, #-12]
   1a210:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   1a214:	cmp	r0, #0
   1a218:	beq	1a228 <print_yaml_data@@Base+0x6c8>
   1a21c:	movw	r0, #43812	; 0xab24
   1a220:	movt	r0, #1
   1a224:	blx	r0
   1a228:	b	1a22c <print_yaml_data@@Base+0x6cc>
   1a22c:	b	1a230 <print_yaml_data@@Base+0x6d0>
   1a230:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a234:	add	r0, r0, #1
   1a238:	str	r0, [fp, #-100]	; 0xffffff9c
   1a23c:	b	1a19c <print_yaml_data@@Base+0x63c>
   1a240:	ldr	r0, [fp, #-12]
   1a244:	bl	127b0 <coda_cursor_goto_parent@plt>
   1a248:	b	1a258 <print_yaml_data@@Base+0x6f8>
   1a24c:	movw	r0, #57379	; 0xe023
   1a250:	movt	r0, #1
   1a254:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a258:	b	1a268 <print_yaml_data@@Base+0x708>
   1a25c:	movw	r0, #57379	; 0xe023
   1a260:	movt	r0, #1
   1a264:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a268:	b	1a818 <print_yaml_data@@Base+0xcb8>
   1a26c:	ldr	r0, [fp, #-12]
   1a270:	sub	r1, fp, #104	; 0x68
   1a274:	bl	12774 <coda_cursor_get_read_type@plt>
   1a278:	cmp	r0, #0
   1a27c:	beq	1a28c <print_yaml_data@@Base+0x72c>
   1a280:	movw	r0, #43812	; 0xab24
   1a284:	movt	r0, #1
   1a288:	blx	r0
   1a28c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a290:	add	r0, r0, #1
   1a294:	cmp	r0, #13
   1a298:	str	r0, [sp, #36]	; 0x24
   1a29c:	bhi	1a69c <print_yaml_data@@Base+0xb3c>
   1a2a0:	add	r0, pc, #8
   1a2a4:	ldr	r1, [sp, #36]	; 0x24
   1a2a8:	ldr	r0, [r0, r1, lsl #2]
   1a2ac:	mov	pc, r0
   1a2b0:	muleq	r1, r0, r6
   1a2b4:	andeq	sl, r1, r4, asr #10
   1a2b8:	andeq	sl, r1, r8, ror r5
   1a2bc:	andeq	sl, r1, r4, asr #10
   1a2c0:	andeq	sl, r1, r8, ror r5
   1a2c4:	andeq	sl, r1, r4, asr #10
   1a2c8:	andeq	sl, r1, r8, ror r5
   1a2cc:	andeq	sl, r1, ip, lsr #11
   1a2d0:	strdeq	sl, [r1], -r0
   1a2d4:	andeq	sl, r1, r4, lsr r6
   1a2d8:	andeq	sl, r1, r4, lsr r6
   1a2dc:	andeq	sl, r1, r8, ror #5
   1a2e0:	andeq	sl, r1, r8, lsr r3
   1a2e4:	andeq	sl, r1, ip, lsl r4
   1a2e8:	ldr	r0, [fp, #-12]
   1a2ec:	sub	r1, fp, #105	; 0x69
   1a2f0:	bl	12858 <coda_cursor_read_char@plt>
   1a2f4:	cmp	r0, #0
   1a2f8:	beq	1a308 <print_yaml_data@@Base+0x7a8>
   1a2fc:	movw	r0, #43812	; 0xab24
   1a300:	movt	r0, #1
   1a304:	blx	r0
   1a308:	movw	r0, #57078	; 0xdef6
   1a30c:	movt	r0, #1
   1a310:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a314:	sub	r1, fp, #105	; 0x69
   1a318:	str	r0, [sp, #32]
   1a31c:	mov	r0, r1
   1a320:	movw	r1, #1
   1a324:	bl	1a9a4 <print_yaml_data@@Base+0xe44>
   1a328:	movw	r0, #61912	; 0xf1d8
   1a32c:	movt	r0, #1
   1a330:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a334:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a338:	ldr	r0, [fp, #-12]
   1a33c:	sub	r1, fp, #112	; 0x70
   1a340:	bl	127e0 <coda_cursor_get_string_length@plt>
   1a344:	cmp	r0, #0
   1a348:	beq	1a358 <print_yaml_data@@Base+0x7f8>
   1a34c:	movw	r0, #43812	; 0xab24
   1a350:	movt	r0, #1
   1a354:	blx	r0
   1a358:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a35c:	add	r0, r0, #1
   1a360:	bl	12780 <malloc@plt>
   1a364:	str	r0, [fp, #-116]	; 0xffffff8c
   1a368:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1a36c:	movw	r1, #0
   1a370:	cmp	r0, r1
   1a374:	bne	1a3ac <print_yaml_data@@Base+0x84c>
   1a378:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a37c:	add	r2, r0, #1
   1a380:	mvn	r0, #0
   1a384:	movw	r1, #55264	; 0xd7e0
   1a388:	movt	r1, #1
   1a38c:	movw	r3, #57383	; 0xe027
   1a390:	movt	r3, #1
   1a394:	movw	ip, #361	; 0x169
   1a398:	str	ip, [sp]
   1a39c:	bl	1260c <coda_set_error@plt>
   1a3a0:	movw	r0, #43812	; 0xab24
   1a3a4:	movt	r0, #1
   1a3a8:	blx	r0
   1a3ac:	ldr	r0, [fp, #-12]
   1a3b0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1a3b4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a3b8:	add	r2, r2, #1
   1a3bc:	bl	127a4 <coda_cursor_read_string@plt>
   1a3c0:	cmp	r0, #0
   1a3c4:	beq	1a3d4 <print_yaml_data@@Base+0x874>
   1a3c8:	movw	r0, #43812	; 0xab24
   1a3cc:	movt	r0, #1
   1a3d0:	blx	r0
   1a3d4:	movw	r0, #57078	; 0xdef6
   1a3d8:	movt	r0, #1
   1a3dc:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a3e0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1a3e4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a3e8:	str	r0, [sp, #28]
   1a3ec:	mov	r0, r1
   1a3f0:	mov	r1, r2
   1a3f4:	bl	1a9a4 <print_yaml_data@@Base+0xe44>
   1a3f8:	ldr	r1, [fp, #-112]	; 0xffffff90
   1a3fc:	movw	r0, #61912	; 0xf1d8
   1a400:	movt	r0, #1
   1a404:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a408:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1a40c:	str	r0, [sp, #24]
   1a410:	mov	r0, r1
   1a414:	bl	12654 <free@plt>
   1a418:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a41c:	ldr	r0, [fp, #-12]
   1a420:	sub	r1, fp, #128	; 0x80
   1a424:	bl	12948 <coda_cursor_get_bit_size@plt>
   1a428:	cmp	r0, #0
   1a42c:	beq	1a43c <print_yaml_data@@Base+0x8dc>
   1a430:	movw	r0, #43812	; 0xab24
   1a434:	movt	r0, #1
   1a438:	blx	r0
   1a43c:	ldr	r0, [fp, #-128]	; 0xffffff80
   1a440:	ldr	r1, [fp, #-124]	; 0xffffff84
   1a444:	lsr	r2, r0, #3
   1a448:	orr	r2, r2, r1, lsl #29
   1a44c:	asr	r1, r1, #3
   1a450:	and	r0, r0, #7
   1a454:	adds	r3, r2, #1
   1a458:	adc	ip, r1, #0
   1a45c:	cmp	r0, #0
   1a460:	movne	r2, r3
   1a464:	cmp	r0, #0
   1a468:	movne	r1, ip
   1a46c:	str	r2, [fp, #-136]	; 0xffffff78
   1a470:	str	r1, [fp, #-132]	; 0xffffff7c
   1a474:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a478:	bl	12780 <malloc@plt>
   1a47c:	str	r0, [fp, #-140]	; 0xffffff74
   1a480:	ldr	r0, [fp, #-140]	; 0xffffff74
   1a484:	movw	r1, #0
   1a488:	cmp	r0, r1
   1a48c:	bne	1a4c0 <print_yaml_data@@Base+0x960>
   1a490:	ldr	r2, [fp, #-136]	; 0xffffff78
   1a494:	mvn	r0, #0
   1a498:	movw	r1, #55264	; 0xd7e0
   1a49c:	movt	r1, #1
   1a4a0:	movw	r3, #57383	; 0xe027
   1a4a4:	movt	r3, #1
   1a4a8:	movw	ip, #392	; 0x188
   1a4ac:	str	ip, [sp]
   1a4b0:	bl	1260c <coda_set_error@plt>
   1a4b4:	movw	r0, #43812	; 0xab24
   1a4b8:	movt	r0, #1
   1a4bc:	blx	r0
   1a4c0:	ldr	r0, [fp, #-12]
   1a4c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1a4c8:	ldr	r2, [fp, #-128]	; 0xffffff80
   1a4cc:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a4d0:	mov	ip, sp
   1a4d4:	str	r3, [ip, #4]
   1a4d8:	str	r2, [ip]
   1a4dc:	mov	r2, #0
   1a4e0:	str	r2, [sp, #20]
   1a4e4:	ldr	r3, [sp, #20]
   1a4e8:	bl	129d8 <coda_cursor_read_bits@plt>
   1a4ec:	cmp	r0, #0
   1a4f0:	beq	1a500 <print_yaml_data@@Base+0x9a0>
   1a4f4:	movw	r0, #43812	; 0xab24
   1a4f8:	movt	r0, #1
   1a4fc:	blx	r0
   1a500:	movw	r0, #57078	; 0xdef6
   1a504:	movt	r0, #1
   1a508:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a50c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1a510:	ldr	r2, [fp, #-136]	; 0xffffff78
   1a514:	str	r0, [sp, #16]
   1a518:	mov	r0, r1
   1a51c:	mov	r1, r2
   1a520:	bl	1a9a4 <print_yaml_data@@Base+0xe44>
   1a524:	movw	r0, #61912	; 0xf1d8
   1a528:	movt	r0, #1
   1a52c:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a530:	ldr	r1, [fp, #-140]	; 0xffffff74
   1a534:	str	r0, [sp, #12]
   1a538:	mov	r0, r1
   1a53c:	bl	12654 <free@plt>
   1a540:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a544:	ldr	r0, [fp, #-12]
   1a548:	sub	r1, fp, #144	; 0x90
   1a54c:	bl	12984 <coda_cursor_read_int32@plt>
   1a550:	cmp	r0, #0
   1a554:	beq	1a564 <print_yaml_data@@Base+0xa04>
   1a558:	movw	r0, #43812	; 0xab24
   1a55c:	movt	r0, #1
   1a560:	blx	r0
   1a564:	ldr	r1, [fp, #-144]	; 0xffffff70
   1a568:	movw	r0, #55684	; 0xd984
   1a56c:	movt	r0, #1
   1a570:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a574:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a578:	ldr	r0, [fp, #-12]
   1a57c:	sub	r1, fp, #148	; 0x94
   1a580:	bl	12678 <coda_cursor_read_uint32@plt>
   1a584:	cmp	r0, #0
   1a588:	beq	1a598 <print_yaml_data@@Base+0xa38>
   1a58c:	movw	r0, #43812	; 0xab24
   1a590:	movt	r0, #1
   1a594:	blx	r0
   1a598:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a59c:	movw	r0, #55689	; 0xd989
   1a5a0:	movt	r0, #1
   1a5a4:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a5a8:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	sub	r1, fp, #160	; 0xa0
   1a5b4:	bl	128f4 <coda_cursor_read_int64@plt>
   1a5b8:	cmp	r0, #0
   1a5bc:	beq	1a5cc <print_yaml_data@@Base+0xa6c>
   1a5c0:	movw	r0, #43812	; 0xab24
   1a5c4:	movt	r0, #1
   1a5c8:	blx	r0
   1a5cc:	sub	r2, fp, #181	; 0xb5
   1a5d0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1a5d4:	ldr	r1, [fp, #-156]	; 0xffffff64
   1a5d8:	bl	129e4 <coda_str64@plt>
   1a5dc:	sub	r1, fp, #181	; 0xb5
   1a5e0:	movw	r0, #57479	; 0xe087
   1a5e4:	movt	r0, #1
   1a5e8:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a5ec:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a5f0:	ldr	r0, [fp, #-12]
   1a5f4:	add	r1, sp, #176	; 0xb0
   1a5f8:	bl	127ec <coda_cursor_read_uint64@plt>
   1a5fc:	cmp	r0, #0
   1a600:	beq	1a610 <print_yaml_data@@Base+0xab0>
   1a604:	movw	r0, #43812	; 0xab24
   1a608:	movt	r0, #1
   1a60c:	blx	r0
   1a610:	add	r2, sp, #155	; 0x9b
   1a614:	ldr	r0, [sp, #176]	; 0xb0
   1a618:	ldr	r1, [sp, #180]	; 0xb4
   1a61c:	bl	12648 <coda_str64u@plt>
   1a620:	add	r1, sp, #155	; 0x9b
   1a624:	movw	r0, #57479	; 0xe087
   1a628:	movt	r0, #1
   1a62c:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a630:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a634:	ldr	r0, [fp, #-12]
   1a638:	add	r1, sp, #144	; 0x90
   1a63c:	bl	127f8 <coda_cursor_read_double@plt>
   1a640:	cmp	r0, #0
   1a644:	beq	1a654 <print_yaml_data@@Base+0xaf4>
   1a648:	movw	r0, #43812	; 0xab24
   1a64c:	movt	r0, #1
   1a650:	blx	r0
   1a654:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a658:	cmp	r0, #8
   1a65c:	bne	1a678 <print_yaml_data@@Base+0xb18>
   1a660:	vldr	d16, [sp, #144]	; 0x90
   1a664:	movw	r0, #55694	; 0xd98e
   1a668:	movt	r0, #1
   1a66c:	vmov	r2, r3, d16
   1a670:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a674:	b	1a68c <print_yaml_data@@Base+0xb2c>
   1a678:	vldr	d16, [sp, #144]	; 0x90
   1a67c:	movw	r0, #55760	; 0xd9d0
   1a680:	movt	r0, #1
   1a684:	vmov	r2, r3, d16
   1a688:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a68c:	b	1a69c <print_yaml_data@@Base+0xb3c>
   1a690:	movw	r0, #57466	; 0xe07a
   1a694:	movt	r0, #1
   1a698:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a69c:	b	1a818 <print_yaml_data@@Base+0xcb8>
   1a6a0:	ldr	r0, [fp, #-12]
   1a6a4:	add	r1, sp, #140	; 0x8c
   1a6a8:	bl	12720 <coda_cursor_get_special_type@plt>
   1a6ac:	cmp	r0, #0
   1a6b0:	beq	1a6c0 <print_yaml_data@@Base+0xb60>
   1a6b4:	movw	r0, #43812	; 0xab24
   1a6b8:	movt	r0, #1
   1a6bc:	blx	r0
   1a6c0:	ldr	r0, [sp, #140]	; 0x8c
   1a6c4:	cmp	r0, #3
   1a6c8:	str	r0, [sp, #8]
   1a6cc:	bhi	1a814 <print_yaml_data@@Base+0xcb4>
   1a6d0:	add	r0, pc, #8
   1a6d4:	ldr	r1, [sp, #8]
   1a6d8:	ldr	r0, [r0, r1, lsl #2]
   1a6dc:	mov	pc, r0
   1a6e0:	strdeq	sl, [r1], -r0
   1a6e4:	andeq	sl, r1, r0, lsl #14
   1a6e8:	andeq	sl, r1, r8, lsr r7
   1a6ec:	ldrdeq	sl, [r1], -r4
   1a6f0:	movw	r0, #57466	; 0xe07a
   1a6f4:	movt	r0, #1
   1a6f8:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a6fc:	b	1a814 <print_yaml_data@@Base+0xcb4>
   1a700:	ldr	r0, [fp, #-12]
   1a704:	add	r1, sp, #128	; 0x80
   1a708:	bl	127f8 <coda_cursor_read_double@plt>
   1a70c:	cmp	r0, #0
   1a710:	beq	1a720 <print_yaml_data@@Base+0xbc0>
   1a714:	movw	r0, #43812	; 0xab24
   1a718:	movt	r0, #1
   1a71c:	blx	r0
   1a720:	vldr	d16, [sp, #128]	; 0x80
   1a724:	movw	r0, #55760	; 0xd9d0
   1a728:	movt	r0, #1
   1a72c:	vmov	r2, r3, d16
   1a730:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a734:	b	1a814 <print_yaml_data@@Base+0xcb4>
   1a738:	ldr	r0, [fp, #-12]
   1a73c:	add	r1, sp, #120	; 0x78
   1a740:	bl	127f8 <coda_cursor_read_double@plt>
   1a744:	cmp	r0, #0
   1a748:	beq	1a758 <print_yaml_data@@Base+0xbf8>
   1a74c:	movw	r0, #43812	; 0xab24
   1a750:	movt	r0, #1
   1a754:	blx	r0
   1a758:	vldr	d0, [sp, #120]	; 0x78
   1a75c:	bl	12804 <coda_isNaN@plt>
   1a760:	cmp	r0, #0
   1a764:	bne	1a778 <print_yaml_data@@Base+0xc18>
   1a768:	vldr	d0, [sp, #120]	; 0x78
   1a76c:	bl	126b4 <coda_isInf@plt>
   1a770:	cmp	r0, #0
   1a774:	beq	1a790 <print_yaml_data@@Base+0xc30>
   1a778:	vldr	d16, [sp, #120]	; 0x78
   1a77c:	movw	r0, #55760	; 0xd9d0
   1a780:	movt	r0, #1
   1a784:	vmov	r2, r3, d16
   1a788:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a78c:	b	1a7d0 <print_yaml_data@@Base+0xc70>
   1a790:	add	r1, sp, #93	; 0x5d
   1a794:	vldr	d0, [sp, #120]	; 0x78
   1a798:	movw	r0, #57010	; 0xdeb2
   1a79c:	movt	r0, #1
   1a7a0:	bl	12630 <coda_time_double_to_string@plt>
   1a7a4:	cmp	r0, #0
   1a7a8:	beq	1a7bc <print_yaml_data@@Base+0xc5c>
   1a7ac:	movw	r0, #57039	; 0xdecf
   1a7b0:	movt	r0, #1
   1a7b4:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a7b8:	b	1a7cc <print_yaml_data@@Base+0xc6c>
   1a7bc:	add	r1, sp, #93	; 0x5d
   1a7c0:	movw	r0, #57479	; 0xe087
   1a7c4:	movt	r0, #1
   1a7c8:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a7cc:	b	1a7d0 <print_yaml_data@@Base+0xc70>
   1a7d0:	b	1a814 <print_yaml_data@@Base+0xcb4>
   1a7d4:	ldr	r0, [fp, #-12]
   1a7d8:	add	r1, sp, #80	; 0x50
   1a7dc:	add	r2, sp, #72	; 0x48
   1a7e0:	bl	12894 <coda_cursor_read_complex_double_split@plt>
   1a7e4:	cmp	r0, #0
   1a7e8:	beq	1a7f8 <print_yaml_data@@Base+0xc98>
   1a7ec:	movw	r0, #43812	; 0xab24
   1a7f0:	movt	r0, #1
   1a7f4:	blx	r0
   1a7f8:	vldr	d16, [sp, #80]	; 0x50
   1a7fc:	vldr	d17, [sp, #72]	; 0x48
   1a800:	movw	r0, #55795	; 0xd9f3
   1a804:	movt	r0, #1
   1a808:	vmov	r2, r3, d16
   1a80c:	vstr	d17, [sp]
   1a810:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1a814:	b	1a818 <print_yaml_data@@Base+0xcb8>
   1a818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a81c:	cmp	r0, #0
   1a820:	beq	1a83c <print_yaml_data@@Base+0xcdc>
   1a824:	movw	r0, #448	; 0x1c0
   1a828:	movt	r0, #3
   1a82c:	ldr	r1, [r0]
   1a830:	mvn	r2, #0
   1a834:	add	r1, r1, r2
   1a838:	str	r1, [r0]
   1a83c:	sub	sp, fp, #8
   1a840:	pop	{r4, r5, fp, pc}
   1a844:	sub	sp, sp, #12
   1a848:	push	{fp, lr}
   1a84c:	mov	fp, sp
   1a850:	sub	sp, sp, #20
   1a854:	str	r3, [fp, #16]
   1a858:	str	r2, [fp, #12]
   1a85c:	str	r1, [fp, #8]
   1a860:	str	r0, [fp, #-4]
   1a864:	add	r0, fp, #8
   1a868:	str	r0, [sp, #8]
   1a86c:	movw	r0, #4232	; 0x1088
   1a870:	movt	r0, #3
   1a874:	ldr	r0, [r0]
   1a878:	ldr	r1, [fp, #-4]
   1a87c:	ldr	r2, [sp, #8]
   1a880:	bl	12900 <vfprintf@plt>
   1a884:	str	r0, [fp, #-8]
   1a888:	add	r0, sp, #8
   1a88c:	ldr	r1, [fp, #-8]
   1a890:	str	r0, [sp, #4]
   1a894:	mov	r0, r1
   1a898:	mov	sp, fp
   1a89c:	pop	{fp, lr}
   1a8a0:	add	sp, sp, #12
   1a8a4:	bx	lr
   1a8a8:	push	{fp, lr}
   1a8ac:	mov	fp, sp
   1a8b0:	sub	sp, sp, #8
   1a8b4:	movw	r0, #448	; 0x1c0
   1a8b8:	movt	r0, #3
   1a8bc:	ldr	r0, [r0]
   1a8c0:	cmp	r0, #0
   1a8c4:	blt	1a8cc <print_yaml_data@@Base+0xd6c>
   1a8c8:	b	1a8ec <print_yaml_data@@Base+0xd8c>
   1a8cc:	movw	r0, #55805	; 0xd9fd
   1a8d0:	movt	r0, #1
   1a8d4:	movw	r1, #57383	; 0xe027
   1a8d8:	movt	r1, #1
   1a8dc:	movw	r2, #44	; 0x2c
   1a8e0:	movw	r3, #55817	; 0xda09
   1a8e4:	movt	r3, #1
   1a8e8:	bl	129f0 <__assert_fail@plt>
   1a8ec:	movw	r0, #448	; 0x1c0
   1a8f0:	movt	r0, #3
   1a8f4:	ldr	r0, [r0]
   1a8f8:	str	r0, [sp, #4]
   1a8fc:	ldr	r0, [sp, #4]
   1a900:	cmp	r0, #0
   1a904:	ble	1a934 <print_yaml_data@@Base+0xdd4>
   1a908:	movw	r0, #4232	; 0x1088
   1a90c:	movt	r0, #3
   1a910:	ldr	r0, [r0]
   1a914:	movw	r1, #55505	; 0xd8d1
   1a918:	movt	r1, #1
   1a91c:	bl	12810 <fprintf@plt>
   1a920:	ldr	r0, [sp, #4]
   1a924:	mvn	r1, #0
   1a928:	add	r0, r0, r1
   1a92c:	str	r0, [sp, #4]
   1a930:	b	1a8fc <print_yaml_data@@Base+0xd9c>
   1a934:	mov	sp, fp
   1a938:	pop	{fp, pc}
   1a93c:	sub	sp, sp, #12
   1a940:	push	{fp, lr}
   1a944:	mov	fp, sp
   1a948:	sub	sp, sp, #20
   1a94c:	str	r3, [fp, #16]
   1a950:	str	r2, [fp, #12]
   1a954:	str	r1, [fp, #8]
   1a958:	str	r0, [fp, #-4]
   1a95c:	bl	1a8a8 <print_yaml_data@@Base+0xd48>
   1a960:	add	r0, fp, #8
   1a964:	str	r0, [sp, #8]
   1a968:	movw	r0, #4232	; 0x1088
   1a96c:	movt	r0, #3
   1a970:	ldr	r0, [r0]
   1a974:	ldr	r1, [fp, #-4]
   1a978:	ldr	r2, [sp, #8]
   1a97c:	bl	12900 <vfprintf@plt>
   1a980:	str	r0, [fp, #-8]
   1a984:	add	r0, sp, #8
   1a988:	ldr	r1, [fp, #-8]
   1a98c:	str	r0, [sp, #4]
   1a990:	mov	r0, r1
   1a994:	mov	sp, fp
   1a998:	pop	{fp, lr}
   1a99c:	add	sp, sp, #12
   1a9a0:	bx	lr
   1a9a4:	push	{fp, lr}
   1a9a8:	mov	fp, sp
   1a9ac:	sub	sp, sp, #24
   1a9b0:	str	r0, [fp, #-4]
   1a9b4:	str	r1, [fp, #-8]
   1a9b8:	movw	r0, #0
   1a9bc:	str	r0, [sp, #12]
   1a9c0:	ldr	r0, [sp, #12]
   1a9c4:	ldr	r1, [fp, #-8]
   1a9c8:	cmp	r0, r1
   1a9cc:	bge	1ab1c <print_yaml_data@@Base+0xfbc>
   1a9d0:	ldr	r0, [fp, #-4]
   1a9d4:	ldr	r1, [sp, #12]
   1a9d8:	ldrb	r0, [r0, r1]
   1a9dc:	strb	r0, [sp, #11]
   1a9e0:	ldrb	r0, [sp, #11]
   1a9e4:	mov	r1, r0
   1a9e8:	cmp	r0, #8
   1a9ec:	str	r1, [sp, #4]
   1a9f0:	beq	1aa58 <print_yaml_data@@Base+0xef8>
   1a9f4:	b	1a9f8 <print_yaml_data@@Base+0xe98>
   1a9f8:	ldr	r0, [sp, #4]
   1a9fc:	cmp	r0, #9
   1aa00:	beq	1aa98 <print_yaml_data@@Base+0xf38>
   1aa04:	b	1aa08 <print_yaml_data@@Base+0xea8>
   1aa08:	ldr	r0, [sp, #4]
   1aa0c:	cmp	r0, #10
   1aa10:	beq	1aa78 <print_yaml_data@@Base+0xf18>
   1aa14:	b	1aa18 <print_yaml_data@@Base+0xeb8>
   1aa18:	ldr	r0, [sp, #4]
   1aa1c:	cmp	r0, #12
   1aa20:	beq	1aa68 <print_yaml_data@@Base+0xf08>
   1aa24:	b	1aa28 <print_yaml_data@@Base+0xec8>
   1aa28:	ldr	r0, [sp, #4]
   1aa2c:	cmp	r0, #13
   1aa30:	beq	1aa88 <print_yaml_data@@Base+0xf28>
   1aa34:	b	1aa38 <print_yaml_data@@Base+0xed8>
   1aa38:	ldr	r0, [sp, #4]
   1aa3c:	cmp	r0, #34	; 0x22
   1aa40:	beq	1aaa8 <print_yaml_data@@Base+0xf48>
   1aa44:	b	1aa48 <print_yaml_data@@Base+0xee8>
   1aa48:	ldr	r0, [sp, #4]
   1aa4c:	cmp	r0, #92	; 0x5c
   1aa50:	beq	1aab8 <print_yaml_data@@Base+0xf58>
   1aa54:	b	1aac8 <print_yaml_data@@Base+0xf68>
   1aa58:	movw	r0, #55404	; 0xd86c
   1aa5c:	movt	r0, #1
   1aa60:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aa64:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aa68:	movw	r0, #55416	; 0xd878
   1aa6c:	movt	r0, #1
   1aa70:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aa74:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aa78:	movw	r0, #55410	; 0xd872
   1aa7c:	movt	r0, #1
   1aa80:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aa84:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aa88:	movw	r0, #55419	; 0xd87b
   1aa8c:	movt	r0, #1
   1aa90:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aa94:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aa98:	movw	r0, #55407	; 0xd86f
   1aa9c:	movt	r0, #1
   1aaa0:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aaa4:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aaa8:	movw	r0, #57077	; 0xdef5
   1aaac:	movt	r0, #1
   1aab0:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aab4:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aab8:	movw	r0, #55422	; 0xd87e
   1aabc:	movt	r0, #1
   1aac0:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aac4:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1aac8:	ldrb	r0, [sp, #11]
   1aacc:	cmp	r0, #32
   1aad0:	blt	1aaf4 <print_yaml_data@@Base+0xf94>
   1aad4:	ldrb	r0, [sp, #11]
   1aad8:	cmp	r0, #126	; 0x7e
   1aadc:	bgt	1aaf4 <print_yaml_data@@Base+0xf94>
   1aae0:	ldrb	r1, [sp, #11]
   1aae4:	movw	r0, #55261	; 0xd7dd
   1aae8:	movt	r0, #1
   1aaec:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1aaf0:	b	1ab04 <print_yaml_data@@Base+0xfa4>
   1aaf4:	ldrb	r1, [sp, #11]
   1aaf8:	movw	r0, #57080	; 0xdef8
   1aafc:	movt	r0, #1
   1ab00:	bl	1a844 <print_yaml_data@@Base+0xce4>
   1ab04:	b	1ab08 <print_yaml_data@@Base+0xfa8>
   1ab08:	b	1ab0c <print_yaml_data@@Base+0xfac>
   1ab0c:	ldr	r0, [sp, #12]
   1ab10:	add	r0, r0, #1
   1ab14:	str	r0, [sp, #12]
   1ab18:	b	1a9c0 <print_yaml_data@@Base+0xe60>
   1ab1c:	mov	sp, fp
   1ab20:	pop	{fp, pc}

0001ab24 <handle_coda_error@@Base>:
   1ab24:	push	{fp, lr}
   1ab28:	mov	fp, sp
   1ab2c:	sub	sp, sp, #16
   1ab30:	movw	r0, #424	; 0x1a8
   1ab34:	movt	r0, #3
   1ab38:	ldr	r0, [r0]
   1ab3c:	str	r0, [fp, #-4]
   1ab40:	bl	129a8 <coda_get_errno@plt>
   1ab44:	ldr	r0, [r0]
   1ab48:	bl	12960 <coda_errno_to_string@plt>
   1ab4c:	ldr	r1, [fp, #-4]
   1ab50:	str	r0, [sp, #8]
   1ab54:	mov	r0, r1
   1ab58:	movw	r1, #57472	; 0xe080
   1ab5c:	movt	r1, #1
   1ab60:	ldr	r2, [sp, #8]
   1ab64:	bl	12810 <fprintf@plt>
   1ab68:	movw	r1, #424	; 0x1a8
   1ab6c:	movt	r1, #3
   1ab70:	ldr	r1, [r1]
   1ab74:	str	r0, [sp, #4]
   1ab78:	mov	r0, r1
   1ab7c:	bl	12624 <fflush@plt>
   1ab80:	movw	r1, #1
   1ab84:	str	r0, [sp]
   1ab88:	mov	r0, r1
   1ab8c:	bl	127c8 <exit@plt>

0001ab90 <main@@Base>:
   1ab90:	push	{fp, lr}
   1ab94:	mov	fp, sp
   1ab98:	sub	sp, sp, #40	; 0x28
   1ab9c:	movw	r2, #0
   1aba0:	str	r2, [fp, #-4]
   1aba4:	str	r0, [fp, #-8]
   1aba8:	str	r1, [fp, #-12]
   1abac:	ldr	r0, [fp, #-8]
   1abb0:	cmp	r0, #1
   1abb4:	beq	1abf0 <main@@Base+0x60>
   1abb8:	ldr	r0, [fp, #-12]
   1abbc:	ldr	r0, [r0, #4]
   1abc0:	movw	r1, #57483	; 0xe08b
   1abc4:	movt	r1, #1
   1abc8:	bl	125d0 <strcmp@plt>
   1abcc:	cmp	r0, #0
   1abd0:	beq	1abf0 <main@@Base+0x60>
   1abd4:	ldr	r0, [fp, #-12]
   1abd8:	ldr	r0, [r0, #4]
   1abdc:	movw	r1, #57486	; 0xe08e
   1abe0:	movt	r1, #1
   1abe4:	bl	125d0 <strcmp@plt>
   1abe8:	cmp	r0, #0
   1abec:	bne	1abfc <main@@Base+0x6c>
   1abf0:	bl	1cbc0 <main@@Base+0x2030>
   1abf4:	movw	r0, #0
   1abf8:	bl	127c8 <exit@plt>
   1abfc:	ldr	r0, [fp, #-12]
   1ac00:	ldr	r0, [r0, #4]
   1ac04:	movw	r1, #57493	; 0xe095
   1ac08:	movt	r1, #1
   1ac0c:	bl	125d0 <strcmp@plt>
   1ac10:	cmp	r0, #0
   1ac14:	beq	1ac34 <main@@Base+0xa4>
   1ac18:	ldr	r0, [fp, #-12]
   1ac1c:	ldr	r0, [r0, #4]
   1ac20:	movw	r1, #57496	; 0xe098
   1ac24:	movt	r1, #1
   1ac28:	bl	125d0 <strcmp@plt>
   1ac2c:	cmp	r0, #0
   1ac30:	bne	1ac40 <main@@Base+0xb0>
   1ac34:	bl	1d504 <main@@Base+0x2974>
   1ac38:	movw	r0, #0
   1ac3c:	bl	127c8 <exit@plt>
   1ac40:	movw	r0, #1
   1ac44:	str	r0, [fp, #-16]
   1ac48:	ldr	r0, [fp, #-16]
   1ac4c:	add	r0, r0, #1
   1ac50:	ldr	r1, [fp, #-8]
   1ac54:	cmp	r0, r1
   1ac58:	bge	1aca8 <main@@Base+0x118>
   1ac5c:	ldr	r0, [fp, #-12]
   1ac60:	ldr	r1, [fp, #-16]
   1ac64:	add	r0, r0, r1, lsl #2
   1ac68:	ldr	r0, [r0]
   1ac6c:	movw	r1, #57506	; 0xe0a2
   1ac70:	movt	r1, #1
   1ac74:	bl	125d0 <strcmp@plt>
   1ac78:	cmp	r0, #0
   1ac7c:	bne	1aca8 <main@@Base+0x118>
   1ac80:	ldr	r0, [fp, #-12]
   1ac84:	ldr	r1, [fp, #-16]
   1ac88:	add	r1, r1, #1
   1ac8c:	add	r0, r0, r1, lsl #2
   1ac90:	ldr	r0, [r0]
   1ac94:	bl	126f0 <coda_set_definition_path@plt>
   1ac98:	ldr	r1, [fp, #-16]
   1ac9c:	add	r1, r1, #2
   1aca0:	str	r1, [fp, #-16]
   1aca4:	b	1ad1c <main@@Base+0x18c>
   1aca8:	movw	r0, #57509	; 0xe0a5
   1acac:	movt	r0, #1
   1acb0:	str	r0, [sp, #20]
   1acb4:	ldr	r0, [fp, #-12]
   1acb8:	ldr	r0, [r0]
   1acbc:	ldr	r2, [sp, #20]
   1acc0:	movw	r1, #0
   1acc4:	bl	1266c <coda_set_definition_path_conditional@plt>
   1acc8:	cmp	r0, #0
   1accc:	beq	1ad18 <main@@Base+0x188>
   1acd0:	movw	r0, #424	; 0x1a8
   1acd4:	movt	r0, #3
   1acd8:	ldr	r0, [r0]
   1acdc:	str	r0, [sp, #16]
   1ace0:	bl	129a8 <coda_get_errno@plt>
   1ace4:	ldr	r0, [r0]
   1ace8:	bl	12960 <coda_errno_to_string@plt>
   1acec:	ldr	r1, [sp, #16]
   1acf0:	str	r0, [sp, #12]
   1acf4:	mov	r0, r1
   1acf8:	movw	r1, #57472	; 0xe080
   1acfc:	movt	r1, #1
   1ad00:	ldr	r2, [sp, #12]
   1ad04:	bl	12810 <fprintf@plt>
   1ad08:	movw	r1, #1
   1ad0c:	str	r0, [sp, #8]
   1ad10:	mov	r0, r1
   1ad14:	bl	127c8 <exit@plt>
   1ad18:	b	1ad1c <main@@Base+0x18c>
   1ad1c:	ldr	r0, [fp, #-12]
   1ad20:	ldr	r1, [fp, #-16]
   1ad24:	add	r0, r0, r1, lsl #2
   1ad28:	ldr	r0, [r0]
   1ad2c:	movw	r1, #57535	; 0xe0bf
   1ad30:	movt	r1, #1
   1ad34:	bl	125d0 <strcmp@plt>
   1ad38:	cmp	r0, #0
   1ad3c:	bne	1ad78 <main@@Base+0x1e8>
   1ad40:	movw	r0, #4252	; 0x109c
   1ad44:	movt	r0, #3
   1ad48:	mov	r1, #0
   1ad4c:	str	r1, [r0]
   1ad50:	ldr	r0, [fp, #-16]
   1ad54:	add	r0, r0, #1
   1ad58:	str	r0, [fp, #-16]
   1ad5c:	ldr	r0, [fp, #-8]
   1ad60:	ldr	r1, [fp, #-16]
   1ad64:	sub	r0, r0, r1
   1ad68:	ldr	r2, [fp, #-12]
   1ad6c:	add	r1, r2, r1, lsl #2
   1ad70:	bl	1af2c <main@@Base+0x39c>
   1ad74:	b	1af20 <main@@Base+0x390>
   1ad78:	ldr	r0, [fp, #-12]
   1ad7c:	ldr	r1, [fp, #-16]
   1ad80:	add	r0, r0, r1, lsl #2
   1ad84:	ldr	r0, [r0]
   1ad88:	movw	r1, #57540	; 0xe0c4
   1ad8c:	movt	r1, #1
   1ad90:	bl	125d0 <strcmp@plt>
   1ad94:	cmp	r0, #0
   1ad98:	bne	1add4 <main@@Base+0x244>
   1ad9c:	movw	r0, #4252	; 0x109c
   1ada0:	movt	r0, #3
   1ada4:	mov	r1, #1
   1ada8:	str	r1, [r0]
   1adac:	ldr	r0, [fp, #-16]
   1adb0:	add	r0, r0, #1
   1adb4:	str	r0, [fp, #-16]
   1adb8:	ldr	r0, [fp, #-8]
   1adbc:	ldr	r1, [fp, #-16]
   1adc0:	sub	r0, r0, r1
   1adc4:	ldr	r2, [fp, #-12]
   1adc8:	add	r1, r2, r1, lsl #2
   1adcc:	bl	1b49c <main@@Base+0x90c>
   1add0:	b	1af1c <main@@Base+0x38c>
   1add4:	ldr	r0, [fp, #-12]
   1add8:	ldr	r1, [fp, #-16]
   1addc:	add	r0, r0, r1, lsl #2
   1ade0:	ldr	r0, [r0]
   1ade4:	movw	r1, #57546	; 0xe0ca
   1ade8:	movt	r1, #1
   1adec:	bl	125d0 <strcmp@plt>
   1adf0:	cmp	r0, #0
   1adf4:	bne	1ae30 <main@@Base+0x2a0>
   1adf8:	movw	r0, #4252	; 0x109c
   1adfc:	movt	r0, #3
   1ae00:	mov	r1, #3
   1ae04:	str	r1, [r0]
   1ae08:	ldr	r0, [fp, #-16]
   1ae0c:	add	r0, r0, #1
   1ae10:	str	r0, [fp, #-16]
   1ae14:	ldr	r0, [fp, #-8]
   1ae18:	ldr	r1, [fp, #-16]
   1ae1c:	sub	r0, r0, r1
   1ae20:	ldr	r2, [fp, #-12]
   1ae24:	add	r1, r2, r1, lsl #2
   1ae28:	bl	1bc2c <main@@Base+0x109c>
   1ae2c:	b	1af18 <main@@Base+0x388>
   1ae30:	ldr	r0, [fp, #-12]
   1ae34:	ldr	r1, [fp, #-16]
   1ae38:	add	r0, r0, r1, lsl #2
   1ae3c:	ldr	r0, [r0]
   1ae40:	movw	r1, #57551	; 0xe0cf
   1ae44:	movt	r1, #1
   1ae48:	bl	125d0 <strcmp@plt>
   1ae4c:	cmp	r0, #0
   1ae50:	bne	1ae8c <main@@Base+0x2fc>
   1ae54:	movw	r0, #4252	; 0x109c
   1ae58:	movt	r0, #3
   1ae5c:	mov	r1, #4
   1ae60:	str	r1, [r0]
   1ae64:	ldr	r0, [fp, #-16]
   1ae68:	add	r0, r0, #1
   1ae6c:	str	r0, [fp, #-16]
   1ae70:	ldr	r0, [fp, #-8]
   1ae74:	ldr	r1, [fp, #-16]
   1ae78:	sub	r0, r0, r1
   1ae7c:	ldr	r2, [fp, #-12]
   1ae80:	add	r1, r2, r1, lsl #2
   1ae84:	bl	1c110 <main@@Base+0x1580>
   1ae88:	b	1af14 <main@@Base+0x384>
   1ae8c:	ldr	r0, [fp, #-12]
   1ae90:	ldr	r1, [fp, #-16]
   1ae94:	add	r0, r0, r1, lsl #2
   1ae98:	ldr	r0, [r0]
   1ae9c:	movw	r1, #57556	; 0xe0d4
   1aea0:	movt	r1, #1
   1aea4:	bl	125d0 <strcmp@plt>
   1aea8:	cmp	r0, #0
   1aeac:	bne	1aee8 <main@@Base+0x358>
   1aeb0:	movw	r0, #4252	; 0x109c
   1aeb4:	movt	r0, #3
   1aeb8:	mov	r1, #5
   1aebc:	str	r1, [r0]
   1aec0:	ldr	r0, [fp, #-16]
   1aec4:	add	r0, r0, #1
   1aec8:	str	r0, [fp, #-16]
   1aecc:	ldr	r0, [fp, #-8]
   1aed0:	ldr	r1, [fp, #-16]
   1aed4:	sub	r0, r0, r1
   1aed8:	ldr	r2, [fp, #-12]
   1aedc:	add	r1, r2, r1, lsl #2
   1aee0:	bl	1c5f4 <main@@Base+0x1a64>
   1aee4:	b	1af10 <main@@Base+0x380>
   1aee8:	movw	r0, #424	; 0x1a8
   1aeec:	movt	r0, #3
   1aef0:	ldr	r0, [r0]
   1aef4:	movw	r1, #57562	; 0xe0da
   1aef8:	movt	r1, #1
   1aefc:	bl	12810 <fprintf@plt>
   1af00:	str	r0, [sp, #4]
   1af04:	bl	1cbc0 <main@@Base+0x2030>
   1af08:	movw	r0, #1
   1af0c:	bl	127c8 <exit@plt>
   1af10:	b	1af14 <main@@Base+0x384>
   1af14:	b	1af18 <main@@Base+0x388>
   1af18:	b	1af1c <main@@Base+0x38c>
   1af1c:	b	1af20 <main@@Base+0x390>
   1af20:	movw	r0, #0
   1af24:	mov	sp, fp
   1af28:	pop	{fp, pc}
   1af2c:	push	{fp, lr}
   1af30:	mov	fp, sp
   1af34:	sub	sp, sp, #56	; 0x38
   1af38:	str	r0, [fp, #-4]
   1af3c:	str	r1, [fp, #-8]
   1af40:	movw	r0, #480	; 0x1e0
   1af44:	movt	r0, #3
   1af48:	movw	r1, #0
   1af4c:	str	r1, [r0]
   1af50:	str	r1, [r0, #664]	; 0x298
   1af54:	movw	r0, #456	; 0x1c8
   1af58:	movt	r0, #3
   1af5c:	movw	r2, #1
   1af60:	str	r2, [r0]
   1af64:	movw	r0, #476	; 0x1dc
   1af68:	movt	r0, #3
   1af6c:	str	r1, [r0]
   1af70:	str	r2, [fp, #-12]
   1af74:	str	r2, [fp, #-16]
   1af78:	movw	r0, #460	; 0x1cc
   1af7c:	movt	r0, #3
   1af80:	str	r1, [r0]
   1af84:	movw	r0, #4240	; 0x1090
   1af88:	movt	r0, #3
   1af8c:	str	r1, [r0]
   1af90:	movw	r0, #472	; 0x1d8
   1af94:	movt	r0, #3
   1af98:	str	r1, [r0]
   1af9c:	movw	r0, #4244	; 0x1094
   1afa0:	movt	r0, #3
   1afa4:	str	r1, [r0]
   1afa8:	str	r1, [fp, #-20]	; 0xffffffec
   1afac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1afb0:	ldr	r1, [fp, #-4]
   1afb4:	cmp	r0, r1
   1afb8:	bge	1b364 <main@@Base+0x7d4>
   1afbc:	ldr	r0, [fp, #-8]
   1afc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1afc4:	add	r0, r0, r1, lsl #2
   1afc8:	ldr	r0, [r0]
   1afcc:	movw	r1, #61621	; 0xf0b5
   1afd0:	movt	r1, #1
   1afd4:	bl	125d0 <strcmp@plt>
   1afd8:	cmp	r0, #0
   1afdc:	beq	1b004 <main@@Base+0x474>
   1afe0:	ldr	r0, [fp, #-8]
   1afe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1afe8:	add	r0, r0, r1, lsl #2
   1afec:	ldr	r0, [r0]
   1aff0:	movw	r1, #61624	; 0xf0b8
   1aff4:	movt	r1, #1
   1aff8:	bl	125d0 <strcmp@plt>
   1affc:	cmp	r0, #0
   1b000:	bne	1b018 <main@@Base+0x488>
   1b004:	movw	r0, #476	; 0x1dc
   1b008:	movt	r0, #3
   1b00c:	movw	r1, #1
   1b010:	str	r1, [r0]
   1b014:	b	1b350 <main@@Base+0x7c0>
   1b018:	ldr	r0, [fp, #-8]
   1b01c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b020:	add	r0, r0, r1, lsl #2
   1b024:	ldr	r0, [r0]
   1b028:	movw	r1, #61635	; 0xf0c3
   1b02c:	movt	r1, #1
   1b030:	bl	125d0 <strcmp@plt>
   1b034:	cmp	r0, #0
   1b038:	beq	1b060 <main@@Base+0x4d0>
   1b03c:	ldr	r0, [fp, #-8]
   1b040:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b044:	add	r0, r0, r1, lsl #2
   1b048:	ldr	r0, [r0]
   1b04c:	movw	r1, #61638	; 0xf0c6
   1b050:	movt	r1, #1
   1b054:	bl	125d0 <strcmp@plt>
   1b058:	cmp	r0, #0
   1b05c:	bne	1b06c <main@@Base+0x4dc>
   1b060:	movw	r0, #0
   1b064:	str	r0, [fp, #-16]
   1b068:	b	1b34c <main@@Base+0x7bc>
   1b06c:	ldr	r0, [fp, #-8]
   1b070:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b074:	add	r0, r0, r1, lsl #2
   1b078:	ldr	r0, [r0]
   1b07c:	movw	r1, #61660	; 0xf0dc
   1b080:	movt	r1, #1
   1b084:	bl	125d0 <strcmp@plt>
   1b088:	cmp	r0, #0
   1b08c:	beq	1b0b4 <main@@Base+0x524>
   1b090:	ldr	r0, [fp, #-8]
   1b094:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b098:	add	r0, r0, r1, lsl #2
   1b09c:	ldr	r0, [r0]
   1b0a0:	movw	r1, #61663	; 0xf0df
   1b0a4:	movt	r1, #1
   1b0a8:	bl	125d0 <strcmp@plt>
   1b0ac:	cmp	r0, #0
   1b0b0:	bne	1b154 <main@@Base+0x5c4>
   1b0b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b0b8:	add	r0, r0, #1
   1b0bc:	ldr	r1, [fp, #-4]
   1b0c0:	cmp	r0, r1
   1b0c4:	bge	1b154 <main@@Base+0x5c4>
   1b0c8:	ldr	r0, [fp, #-8]
   1b0cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b0d0:	add	r1, r1, #1
   1b0d4:	add	r0, r0, r1, lsl #2
   1b0d8:	ldr	r0, [r0]
   1b0dc:	ldrb	r0, [r0]
   1b0e0:	cmp	r0, #45	; 0x2d
   1b0e4:	beq	1b154 <main@@Base+0x5c4>
   1b0e8:	ldr	r0, [fp, #-8]
   1b0ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b0f0:	add	r1, r1, #1
   1b0f4:	add	r0, r0, r1, lsl #2
   1b0f8:	ldr	r0, [r0]
   1b0fc:	bl	1712c <codadump_filter_create@@Base>
   1b100:	movw	r1, #480	; 0x1e0
   1b104:	movt	r1, #3
   1b108:	str	r0, [r1, #664]	; 0x298
   1b10c:	ldr	r0, [r1, #664]	; 0x298
   1b110:	movw	r1, #0
   1b114:	cmp	r0, r1
   1b118:	bne	1b144 <main@@Base+0x5b4>
   1b11c:	movw	r0, #424	; 0x1a8
   1b120:	movt	r0, #3
   1b124:	ldr	r0, [r0]
   1b128:	movw	r1, #61672	; 0xf0e8
   1b12c:	movt	r1, #1
   1b130:	bl	12810 <fprintf@plt>
   1b134:	str	r0, [fp, #-24]	; 0xffffffe8
   1b138:	bl	1cbc0 <main@@Base+0x2030>
   1b13c:	movw	r0, #1
   1b140:	bl	127c8 <exit@plt>
   1b144:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b148:	add	r0, r0, #1
   1b14c:	str	r0, [fp, #-20]	; 0xffffffec
   1b150:	b	1b348 <main@@Base+0x7b8>
   1b154:	ldr	r0, [fp, #-8]
   1b158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b15c:	add	r0, r0, r1, lsl #2
   1b160:	ldr	r0, [r0]
   1b164:	movw	r1, #61713	; 0xf111
   1b168:	movt	r1, #1
   1b16c:	bl	125d0 <strcmp@plt>
   1b170:	cmp	r0, #0
   1b174:	beq	1b19c <main@@Base+0x60c>
   1b178:	ldr	r0, [fp, #-8]
   1b17c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b180:	add	r0, r0, r1, lsl #2
   1b184:	ldr	r0, [r0]
   1b188:	movw	r1, #61716	; 0xf114
   1b18c:	movt	r1, #1
   1b190:	bl	125d0 <strcmp@plt>
   1b194:	cmp	r0, #0
   1b198:	bne	1b1b0 <main@@Base+0x620>
   1b19c:	movw	r0, #4240	; 0x1090
   1b1a0:	movt	r0, #3
   1b1a4:	movw	r1, #1
   1b1a8:	str	r1, [r0]
   1b1ac:	b	1b344 <main@@Base+0x7b4>
   1b1b0:	ldr	r0, [fp, #-8]
   1b1b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b1b8:	add	r0, r0, r1, lsl #2
   1b1bc:	ldr	r0, [r0]
   1b1c0:	movw	r1, #61723	; 0xf11b
   1b1c4:	movt	r1, #1
   1b1c8:	bl	125d0 <strcmp@plt>
   1b1cc:	cmp	r0, #0
   1b1d0:	beq	1b1f8 <main@@Base+0x668>
   1b1d4:	ldr	r0, [fp, #-8]
   1b1d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b1dc:	add	r0, r0, r1, lsl #2
   1b1e0:	ldr	r0, [r0]
   1b1e4:	movw	r1, #61726	; 0xf11e
   1b1e8:	movt	r1, #1
   1b1ec:	bl	125d0 <strcmp@plt>
   1b1f0:	cmp	r0, #0
   1b1f4:	bne	1b20c <main@@Base+0x67c>
   1b1f8:	movw	r0, #472	; 0x1d8
   1b1fc:	movt	r0, #3
   1b200:	movw	r1, #1
   1b204:	str	r1, [r0]
   1b208:	b	1b340 <main@@Base+0x7b0>
   1b20c:	ldr	r0, [fp, #-8]
   1b210:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b214:	add	r0, r0, r1, lsl #2
   1b218:	ldr	r0, [r0]
   1b21c:	movw	r1, #61733	; 0xf125
   1b220:	movt	r1, #1
   1b224:	bl	125d0 <strcmp@plt>
   1b228:	cmp	r0, #0
   1b22c:	bne	1b244 <main@@Base+0x6b4>
   1b230:	movw	r0, #4244	; 0x1094
   1b234:	movt	r0, #3
   1b238:	movw	r1, #1
   1b23c:	str	r1, [r0]
   1b240:	b	1b33c <main@@Base+0x7ac>
   1b244:	ldr	r0, [fp, #-8]
   1b248:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b24c:	add	r0, r0, r1, lsl #2
   1b250:	ldr	r0, [r0]
   1b254:	movw	r1, #61747	; 0xf133
   1b258:	movt	r1, #1
   1b25c:	bl	125d0 <strcmp@plt>
   1b260:	cmp	r0, #0
   1b264:	bne	1b288 <main@@Base+0x6f8>
   1b268:	movw	r0, #476	; 0x1dc
   1b26c:	movt	r0, #3
   1b270:	movw	r1, #1
   1b274:	str	r1, [r0]
   1b278:	movw	r0, #460	; 0x1cc
   1b27c:	movt	r0, #3
   1b280:	str	r1, [r0]
   1b284:	b	1b338 <main@@Base+0x7a8>
   1b288:	ldr	r0, [fp, #-8]
   1b28c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b290:	add	r0, r0, r1, lsl #2
   1b294:	ldr	r0, [r0]
   1b298:	movw	r1, #61760	; 0xf140
   1b29c:	movt	r1, #1
   1b2a0:	bl	125d0 <strcmp@plt>
   1b2a4:	cmp	r0, #0
   1b2a8:	bne	1b2b8 <main@@Base+0x728>
   1b2ac:	movw	r0, #0
   1b2b0:	str	r0, [fp, #-12]
   1b2b4:	b	1b334 <main@@Base+0x7a4>
   1b2b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b2bc:	ldr	r1, [fp, #-4]
   1b2c0:	sub	r1, r1, #1
   1b2c4:	cmp	r0, r1
   1b2c8:	bne	1b308 <main@@Base+0x778>
   1b2cc:	ldr	r0, [fp, #-8]
   1b2d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b2d4:	add	r0, r0, r1, lsl #2
   1b2d8:	ldr	r0, [r0]
   1b2dc:	ldrb	r0, [r0]
   1b2e0:	cmp	r0, #45	; 0x2d
   1b2e4:	beq	1b308 <main@@Base+0x778>
   1b2e8:	ldr	r0, [fp, #-8]
   1b2ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b2f0:	add	r0, r0, r1, lsl #2
   1b2f4:	ldr	r0, [r0]
   1b2f8:	movw	r1, #480	; 0x1e0
   1b2fc:	movt	r1, #3
   1b300:	str	r0, [r1]
   1b304:	b	1b330 <main@@Base+0x7a0>
   1b308:	movw	r0, #424	; 0x1a8
   1b30c:	movt	r0, #3
   1b310:	ldr	r0, [r0]
   1b314:	movw	r1, #57562	; 0xe0da
   1b318:	movt	r1, #1
   1b31c:	bl	12810 <fprintf@plt>
   1b320:	str	r0, [sp, #28]
   1b324:	bl	1cbc0 <main@@Base+0x2030>
   1b328:	movw	r0, #1
   1b32c:	bl	127c8 <exit@plt>
   1b330:	b	1b334 <main@@Base+0x7a4>
   1b334:	b	1b338 <main@@Base+0x7a8>
   1b338:	b	1b33c <main@@Base+0x7ac>
   1b33c:	b	1b340 <main@@Base+0x7b0>
   1b340:	b	1b344 <main@@Base+0x7b4>
   1b344:	b	1b348 <main@@Base+0x7b8>
   1b348:	b	1b34c <main@@Base+0x7bc>
   1b34c:	b	1b350 <main@@Base+0x7c0>
   1b350:	b	1b354 <main@@Base+0x7c4>
   1b354:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b358:	add	r0, r0, #1
   1b35c:	str	r0, [fp, #-20]	; 0xffffffec
   1b360:	b	1afac <main@@Base+0x41c>
   1b364:	movw	r0, #480	; 0x1e0
   1b368:	movt	r0, #3
   1b36c:	ldr	r0, [r0]
   1b370:	movw	r1, #0
   1b374:	cmp	r0, r1
   1b378:	beq	1b394 <main@@Base+0x804>
   1b37c:	movw	r0, #480	; 0x1e0
   1b380:	movt	r0, #3
   1b384:	ldr	r0, [r0]
   1b388:	ldrb	r0, [r0]
   1b38c:	cmp	r0, #0
   1b390:	bne	1b3bc <main@@Base+0x82c>
   1b394:	movw	r0, #424	; 0x1a8
   1b398:	movt	r0, #3
   1b39c:	ldr	r0, [r0]
   1b3a0:	movw	r1, #57562	; 0xe0da
   1b3a4:	movt	r1, #1
   1b3a8:	bl	12810 <fprintf@plt>
   1b3ac:	str	r0, [sp, #24]
   1b3b0:	bl	1cbc0 <main@@Base+0x2030>
   1b3b4:	movw	r0, #1
   1b3b8:	bl	127c8 <exit@plt>
   1b3bc:	bl	12834 <coda_init@plt>
   1b3c0:	cmp	r0, #0
   1b3c4:	beq	1b410 <main@@Base+0x880>
   1b3c8:	movw	r0, #424	; 0x1a8
   1b3cc:	movt	r0, #3
   1b3d0:	ldr	r0, [r0]
   1b3d4:	str	r0, [sp, #20]
   1b3d8:	bl	129a8 <coda_get_errno@plt>
   1b3dc:	ldr	r0, [r0]
   1b3e0:	bl	12960 <coda_errno_to_string@plt>
   1b3e4:	ldr	r1, [sp, #20]
   1b3e8:	str	r0, [sp, #16]
   1b3ec:	mov	r0, r1
   1b3f0:	movw	r1, #57472	; 0xe080
   1b3f4:	movt	r1, #1
   1b3f8:	ldr	r2, [sp, #16]
   1b3fc:	bl	12810 <fprintf@plt>
   1b400:	movw	r1, #1
   1b404:	str	r0, [sp, #12]
   1b408:	mov	r0, r1
   1b40c:	bl	127c8 <exit@plt>
   1b410:	ldr	r0, [fp, #-12]
   1b414:	cmp	r0, #0
   1b418:	movw	r0, #0
   1b41c:	movne	r0, #1
   1b420:	mvn	r1, #0
   1b424:	eor	r0, r0, r1
   1b428:	and	r0, r0, #1
   1b42c:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1b430:	movw	r1, #0
   1b434:	str	r0, [sp, #8]
   1b438:	mov	r0, r1
   1b43c:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   1b440:	ldr	r1, [fp, #-16]
   1b444:	str	r0, [sp, #4]
   1b448:	mov	r0, r1
   1b44c:	bl	12840 <coda_set_option_perform_conversions@plt>
   1b450:	movw	r1, #36252	; 0x8d9c
   1b454:	movt	r1, #1
   1b458:	str	r0, [sp]
   1b45c:	blx	r1
   1b460:	movw	r0, #20368	; 0x4f90
   1b464:	movt	r0, #1
   1b468:	blx	r0
   1b46c:	movw	r0, #36376	; 0x8e18
   1b470:	movt	r0, #1
   1b474:	blx	r0
   1b478:	movw	r0, #20400	; 0x4fb0
   1b47c:	movt	r0, #1
   1b480:	blx	r0
   1b484:	movw	r0, #36284	; 0x8dbc
   1b488:	movt	r0, #1
   1b48c:	blx	r0
   1b490:	bl	12768 <coda_done@plt>
   1b494:	mov	sp, fp
   1b498:	pop	{fp, pc}
   1b49c:	push	{fp, lr}
   1b4a0:	mov	fp, sp
   1b4a4:	sub	sp, sp, #64	; 0x40
   1b4a8:	str	r0, [fp, #-4]
   1b4ac:	str	r1, [fp, #-8]
   1b4b0:	movw	r0, #480	; 0x1e0
   1b4b4:	movt	r0, #3
   1b4b8:	movw	r1, #0
   1b4bc:	str	r1, [r0]
   1b4c0:	str	r1, [r0, #664]	; 0x298
   1b4c4:	movw	r0, #464	; 0x1d0
   1b4c8:	movt	r0, #3
   1b4cc:	str	r1, [r0]
   1b4d0:	movw	r0, #4236	; 0x108c
   1b4d4:	movt	r0, #3
   1b4d8:	movw	r2, #55506	; 0xd8d2
   1b4dc:	movt	r2, #1
   1b4e0:	str	r2, [r0]
   1b4e4:	movw	r0, #428	; 0x1ac
   1b4e8:	movt	r0, #3
   1b4ec:	ldr	r0, [r0]
   1b4f0:	movw	r2, #4232	; 0x1088
   1b4f4:	movt	r2, #3
   1b4f8:	str	r0, [r2]
   1b4fc:	movw	r0, #456	; 0x1c8
   1b500:	movt	r0, #3
   1b504:	movw	r2, #1
   1b508:	str	r2, [r0]
   1b50c:	movw	r0, #476	; 0x1dc
   1b510:	movt	r0, #3
   1b514:	str	r2, [r0]
   1b518:	str	r2, [fp, #-12]
   1b51c:	str	r2, [fp, #-16]
   1b520:	movw	r0, #4248	; 0x1098
   1b524:	movt	r0, #3
   1b528:	str	r1, [r0]
   1b52c:	movw	r0, #4632	; 0x1218
   1b530:	movt	r0, #3
   1b534:	str	r1, [r0]
   1b538:	movw	r0, #4636	; 0x121c
   1b53c:	movt	r0, #3
   1b540:	str	r1, [r0]
   1b544:	movw	r0, #468	; 0x1d4
   1b548:	movt	r0, #3
   1b54c:	str	r1, [r0]
   1b550:	str	r1, [fp, #-20]	; 0xffffffec
   1b554:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b558:	ldr	r1, [fp, #-4]
   1b55c:	cmp	r0, r1
   1b560:	bge	1ba48 <main@@Base+0xeb8>
   1b564:	ldr	r0, [fp, #-8]
   1b568:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b56c:	add	r0, r0, r1, lsl #2
   1b570:	ldr	r0, [r0]
   1b574:	movw	r1, #61635	; 0xf0c3
   1b578:	movt	r1, #1
   1b57c:	bl	125d0 <strcmp@plt>
   1b580:	cmp	r0, #0
   1b584:	beq	1b5ac <main@@Base+0xa1c>
   1b588:	ldr	r0, [fp, #-8]
   1b58c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b590:	add	r0, r0, r1, lsl #2
   1b594:	ldr	r0, [r0]
   1b598:	movw	r1, #61638	; 0xf0c6
   1b59c:	movt	r1, #1
   1b5a0:	bl	125d0 <strcmp@plt>
   1b5a4:	cmp	r0, #0
   1b5a8:	bne	1b5b8 <main@@Base+0xa28>
   1b5ac:	movw	r0, #0
   1b5b0:	str	r0, [fp, #-16]
   1b5b4:	b	1ba34 <main@@Base+0xea4>
   1b5b8:	ldr	r0, [fp, #-8]
   1b5bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b5c0:	add	r0, r0, r1, lsl #2
   1b5c4:	ldr	r0, [r0]
   1b5c8:	movw	r1, #61660	; 0xf0dc
   1b5cc:	movt	r1, #1
   1b5d0:	bl	125d0 <strcmp@plt>
   1b5d4:	cmp	r0, #0
   1b5d8:	beq	1b600 <main@@Base+0xa70>
   1b5dc:	ldr	r0, [fp, #-8]
   1b5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b5e4:	add	r0, r0, r1, lsl #2
   1b5e8:	ldr	r0, [r0]
   1b5ec:	movw	r1, #61663	; 0xf0df
   1b5f0:	movt	r1, #1
   1b5f4:	bl	125d0 <strcmp@plt>
   1b5f8:	cmp	r0, #0
   1b5fc:	bne	1b6a0 <main@@Base+0xb10>
   1b600:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b604:	add	r0, r0, #1
   1b608:	ldr	r1, [fp, #-4]
   1b60c:	cmp	r0, r1
   1b610:	bge	1b6a0 <main@@Base+0xb10>
   1b614:	ldr	r0, [fp, #-8]
   1b618:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b61c:	add	r1, r1, #1
   1b620:	add	r0, r0, r1, lsl #2
   1b624:	ldr	r0, [r0]
   1b628:	ldrb	r0, [r0]
   1b62c:	cmp	r0, #45	; 0x2d
   1b630:	beq	1b6a0 <main@@Base+0xb10>
   1b634:	ldr	r0, [fp, #-8]
   1b638:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b63c:	add	r1, r1, #1
   1b640:	add	r0, r0, r1, lsl #2
   1b644:	ldr	r0, [r0]
   1b648:	bl	1712c <codadump_filter_create@@Base>
   1b64c:	movw	r1, #480	; 0x1e0
   1b650:	movt	r1, #3
   1b654:	str	r0, [r1, #664]	; 0x298
   1b658:	ldr	r0, [r1, #664]	; 0x298
   1b65c:	movw	r1, #0
   1b660:	cmp	r0, r1
   1b664:	bne	1b690 <main@@Base+0xb00>
   1b668:	movw	r0, #424	; 0x1a8
   1b66c:	movt	r0, #3
   1b670:	ldr	r0, [r0]
   1b674:	movw	r1, #61672	; 0xf0e8
   1b678:	movt	r1, #1
   1b67c:	bl	12810 <fprintf@plt>
   1b680:	str	r0, [fp, #-24]	; 0xffffffe8
   1b684:	bl	1cbc0 <main@@Base+0x2030>
   1b688:	movw	r0, #1
   1b68c:	bl	127c8 <exit@plt>
   1b690:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b694:	add	r0, r0, #1
   1b698:	str	r0, [fp, #-20]	; 0xffffffec
   1b69c:	b	1ba30 <main@@Base+0xea0>
   1b6a0:	ldr	r0, [fp, #-8]
   1b6a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b6a8:	add	r0, r0, r1, lsl #2
   1b6ac:	ldr	r0, [r0]
   1b6b0:	movw	r1, #61779	; 0xf153
   1b6b4:	movt	r1, #1
   1b6b8:	bl	125d0 <strcmp@plt>
   1b6bc:	cmp	r0, #0
   1b6c0:	beq	1b6e8 <main@@Base+0xb58>
   1b6c4:	ldr	r0, [fp, #-8]
   1b6c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b6cc:	add	r0, r0, r1, lsl #2
   1b6d0:	ldr	r0, [r0]
   1b6d4:	movw	r1, #61782	; 0xf156
   1b6d8:	movt	r1, #1
   1b6dc:	bl	125d0 <strcmp@plt>
   1b6e0:	cmp	r0, #0
   1b6e4:	bne	1b6fc <main@@Base+0xb6c>
   1b6e8:	movw	r0, #4248	; 0x1098
   1b6ec:	movt	r0, #3
   1b6f0:	movw	r1, #1
   1b6f4:	str	r1, [r0]
   1b6f8:	b	1ba2c <main@@Base+0xe9c>
   1b6fc:	ldr	r0, [fp, #-8]
   1b700:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b704:	add	r0, r0, r1, lsl #2
   1b708:	ldr	r0, [r0]
   1b70c:	movw	r1, #61790	; 0xf15e
   1b710:	movt	r1, #1
   1b714:	bl	125d0 <strcmp@plt>
   1b718:	cmp	r0, #0
   1b71c:	beq	1b744 <main@@Base+0xbb4>
   1b720:	ldr	r0, [fp, #-8]
   1b724:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b728:	add	r0, r0, r1, lsl #2
   1b72c:	ldr	r0, [r0]
   1b730:	movw	r1, #61793	; 0xf161
   1b734:	movt	r1, #1
   1b738:	bl	125d0 <strcmp@plt>
   1b73c:	cmp	r0, #0
   1b740:	bne	1b758 <main@@Base+0xbc8>
   1b744:	movw	r0, #4632	; 0x1218
   1b748:	movt	r0, #3
   1b74c:	movw	r1, #1
   1b750:	str	r1, [r0]
   1b754:	b	1ba28 <main@@Base+0xe98>
   1b758:	ldr	r0, [fp, #-8]
   1b75c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b760:	add	r0, r0, r1, lsl #2
   1b764:	ldr	r0, [r0]
   1b768:	movw	r1, #61801	; 0xf169
   1b76c:	movt	r1, #1
   1b770:	bl	125d0 <strcmp@plt>
   1b774:	cmp	r0, #0
   1b778:	beq	1b7a0 <main@@Base+0xc10>
   1b77c:	ldr	r0, [fp, #-8]
   1b780:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b784:	add	r0, r0, r1, lsl #2
   1b788:	ldr	r0, [r0]
   1b78c:	movw	r1, #61804	; 0xf16c
   1b790:	movt	r1, #1
   1b794:	bl	125d0 <strcmp@plt>
   1b798:	cmp	r0, #0
   1b79c:	bne	1b804 <main@@Base+0xc74>
   1b7a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b7a4:	add	r0, r0, #1
   1b7a8:	ldr	r1, [fp, #-4]
   1b7ac:	cmp	r0, r1
   1b7b0:	bge	1b804 <main@@Base+0xc74>
   1b7b4:	ldr	r0, [fp, #-8]
   1b7b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b7bc:	add	r1, r1, #1
   1b7c0:	add	r0, r0, r1, lsl #2
   1b7c4:	ldr	r0, [r0]
   1b7c8:	ldrb	r0, [r0]
   1b7cc:	cmp	r0, #45	; 0x2d
   1b7d0:	beq	1b804 <main@@Base+0xc74>
   1b7d4:	ldr	r0, [fp, #-8]
   1b7d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b7dc:	add	r1, r1, #1
   1b7e0:	add	r0, r0, r1, lsl #2
   1b7e4:	ldr	r0, [r0]
   1b7e8:	movw	r1, #464	; 0x1d0
   1b7ec:	movt	r1, #3
   1b7f0:	str	r0, [r1]
   1b7f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b7f8:	add	r0, r0, #1
   1b7fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b800:	b	1ba24 <main@@Base+0xe94>
   1b804:	ldr	r0, [fp, #-8]
   1b808:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b80c:	add	r0, r0, r1, lsl #2
   1b810:	ldr	r0, [r0]
   1b814:	movw	r1, #61813	; 0xf175
   1b818:	movt	r1, #1
   1b81c:	bl	125d0 <strcmp@plt>
   1b820:	cmp	r0, #0
   1b824:	beq	1b84c <main@@Base+0xcbc>
   1b828:	ldr	r0, [fp, #-8]
   1b82c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b830:	add	r0, r0, r1, lsl #2
   1b834:	ldr	r0, [r0]
   1b838:	movw	r1, #61816	; 0xf178
   1b83c:	movt	r1, #1
   1b840:	bl	125d0 <strcmp@plt>
   1b844:	cmp	r0, #0
   1b848:	bne	1b860 <main@@Base+0xcd0>
   1b84c:	movw	r0, #4636	; 0x121c
   1b850:	movt	r0, #3
   1b854:	movw	r1, #1
   1b858:	str	r1, [r0]
   1b85c:	b	1ba20 <main@@Base+0xe90>
   1b860:	ldr	r0, [fp, #-8]
   1b864:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b868:	add	r0, r0, r1, lsl #2
   1b86c:	ldr	r0, [r0]
   1b870:	movw	r1, #61832	; 0xf188
   1b874:	movt	r1, #1
   1b878:	bl	125d0 <strcmp@plt>
   1b87c:	cmp	r0, #0
   1b880:	beq	1b8a8 <main@@Base+0xd18>
   1b884:	ldr	r0, [fp, #-8]
   1b888:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b88c:	add	r0, r0, r1, lsl #2
   1b890:	ldr	r0, [r0]
   1b894:	movw	r1, #61835	; 0xf18b
   1b898:	movt	r1, #1
   1b89c:	bl	125d0 <strcmp@plt>
   1b8a0:	cmp	r0, #0
   1b8a4:	bne	1b90c <main@@Base+0xd7c>
   1b8a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b8ac:	add	r0, r0, #1
   1b8b0:	ldr	r1, [fp, #-4]
   1b8b4:	cmp	r0, r1
   1b8b8:	bge	1b90c <main@@Base+0xd7c>
   1b8bc:	ldr	r0, [fp, #-8]
   1b8c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b8c4:	add	r1, r1, #1
   1b8c8:	add	r0, r0, r1, lsl #2
   1b8cc:	ldr	r0, [r0]
   1b8d0:	ldrb	r0, [r0]
   1b8d4:	cmp	r0, #45	; 0x2d
   1b8d8:	beq	1b90c <main@@Base+0xd7c>
   1b8dc:	ldr	r0, [fp, #-8]
   1b8e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b8e4:	add	r1, r1, #1
   1b8e8:	add	r0, r0, r1, lsl #2
   1b8ec:	ldr	r0, [r0]
   1b8f0:	movw	r1, #4236	; 0x108c
   1b8f4:	movt	r1, #3
   1b8f8:	str	r0, [r1]
   1b8fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b900:	add	r0, r0, #1
   1b904:	str	r0, [fp, #-20]	; 0xffffffec
   1b908:	b	1ba1c <main@@Base+0xe8c>
   1b90c:	ldr	r0, [fp, #-8]
   1b910:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b914:	add	r0, r0, r1, lsl #2
   1b918:	ldr	r0, [r0]
   1b91c:	movw	r1, #61713	; 0xf111
   1b920:	movt	r1, #1
   1b924:	bl	125d0 <strcmp@plt>
   1b928:	cmp	r0, #0
   1b92c:	beq	1b954 <main@@Base+0xdc4>
   1b930:	ldr	r0, [fp, #-8]
   1b934:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b938:	add	r0, r0, r1, lsl #2
   1b93c:	ldr	r0, [r0]
   1b940:	movw	r1, #61854	; 0xf19e
   1b944:	movt	r1, #1
   1b948:	bl	125d0 <strcmp@plt>
   1b94c:	cmp	r0, #0
   1b950:	bne	1b968 <main@@Base+0xdd8>
   1b954:	movw	r0, #468	; 0x1d4
   1b958:	movt	r0, #3
   1b95c:	movw	r1, #1
   1b960:	str	r1, [r0]
   1b964:	b	1ba18 <main@@Base+0xe88>
   1b968:	ldr	r0, [fp, #-8]
   1b96c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b970:	add	r0, r0, r1, lsl #2
   1b974:	ldr	r0, [r0]
   1b978:	movw	r1, #61760	; 0xf140
   1b97c:	movt	r1, #1
   1b980:	bl	125d0 <strcmp@plt>
   1b984:	cmp	r0, #0
   1b988:	bne	1b998 <main@@Base+0xe08>
   1b98c:	movw	r0, #0
   1b990:	str	r0, [fp, #-12]
   1b994:	b	1ba14 <main@@Base+0xe84>
   1b998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b99c:	ldr	r1, [fp, #-4]
   1b9a0:	sub	r1, r1, #1
   1b9a4:	cmp	r0, r1
   1b9a8:	bne	1b9e8 <main@@Base+0xe58>
   1b9ac:	ldr	r0, [fp, #-8]
   1b9b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9b4:	add	r0, r0, r1, lsl #2
   1b9b8:	ldr	r0, [r0]
   1b9bc:	ldrb	r0, [r0]
   1b9c0:	cmp	r0, #45	; 0x2d
   1b9c4:	beq	1b9e8 <main@@Base+0xe58>
   1b9c8:	ldr	r0, [fp, #-8]
   1b9cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9d0:	add	r0, r0, r1, lsl #2
   1b9d4:	ldr	r0, [r0]
   1b9d8:	movw	r1, #480	; 0x1e0
   1b9dc:	movt	r1, #3
   1b9e0:	str	r0, [r1]
   1b9e4:	b	1ba10 <main@@Base+0xe80>
   1b9e8:	movw	r0, #424	; 0x1a8
   1b9ec:	movt	r0, #3
   1b9f0:	ldr	r0, [r0]
   1b9f4:	movw	r1, #57562	; 0xe0da
   1b9f8:	movt	r1, #1
   1b9fc:	bl	12810 <fprintf@plt>
   1ba00:	str	r0, [fp, #-28]	; 0xffffffe4
   1ba04:	bl	1cbc0 <main@@Base+0x2030>
   1ba08:	movw	r0, #1
   1ba0c:	bl	127c8 <exit@plt>
   1ba10:	b	1ba14 <main@@Base+0xe84>
   1ba14:	b	1ba18 <main@@Base+0xe88>
   1ba18:	b	1ba1c <main@@Base+0xe8c>
   1ba1c:	b	1ba20 <main@@Base+0xe90>
   1ba20:	b	1ba24 <main@@Base+0xe94>
   1ba24:	b	1ba28 <main@@Base+0xe98>
   1ba28:	b	1ba2c <main@@Base+0xe9c>
   1ba2c:	b	1ba30 <main@@Base+0xea0>
   1ba30:	b	1ba34 <main@@Base+0xea4>
   1ba34:	b	1ba38 <main@@Base+0xea8>
   1ba38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba3c:	add	r0, r0, #1
   1ba40:	str	r0, [fp, #-20]	; 0xffffffec
   1ba44:	b	1b554 <main@@Base+0x9c4>
   1ba48:	movw	r0, #480	; 0x1e0
   1ba4c:	movt	r0, #3
   1ba50:	ldr	r0, [r0]
   1ba54:	movw	r1, #0
   1ba58:	cmp	r0, r1
   1ba5c:	beq	1ba78 <main@@Base+0xee8>
   1ba60:	movw	r0, #480	; 0x1e0
   1ba64:	movt	r0, #3
   1ba68:	ldr	r0, [r0]
   1ba6c:	ldrb	r0, [r0]
   1ba70:	cmp	r0, #0
   1ba74:	bne	1baa0 <main@@Base+0xf10>
   1ba78:	movw	r0, #424	; 0x1a8
   1ba7c:	movt	r0, #3
   1ba80:	ldr	r0, [r0]
   1ba84:	movw	r1, #57562	; 0xe0da
   1ba88:	movt	r1, #1
   1ba8c:	bl	12810 <fprintf@plt>
   1ba90:	str	r0, [sp, #32]
   1ba94:	bl	1cbc0 <main@@Base+0x2030>
   1ba98:	movw	r0, #1
   1ba9c:	bl	127c8 <exit@plt>
   1baa0:	bl	12834 <coda_init@plt>
   1baa4:	cmp	r0, #0
   1baa8:	beq	1baf4 <main@@Base+0xf64>
   1baac:	movw	r0, #424	; 0x1a8
   1bab0:	movt	r0, #3
   1bab4:	ldr	r0, [r0]
   1bab8:	str	r0, [sp, #28]
   1babc:	bl	129a8 <coda_get_errno@plt>
   1bac0:	ldr	r0, [r0]
   1bac4:	bl	12960 <coda_errno_to_string@plt>
   1bac8:	ldr	r1, [sp, #28]
   1bacc:	str	r0, [sp, #24]
   1bad0:	mov	r0, r1
   1bad4:	movw	r1, #57472	; 0xe080
   1bad8:	movt	r1, #1
   1badc:	ldr	r2, [sp, #24]
   1bae0:	bl	12810 <fprintf@plt>
   1bae4:	movw	r1, #1
   1bae8:	str	r0, [sp, #20]
   1baec:	mov	r0, r1
   1baf0:	bl	127c8 <exit@plt>
   1baf4:	ldr	r0, [fp, #-12]
   1baf8:	cmp	r0, #0
   1bafc:	movw	r0, #0
   1bb00:	movne	r0, #1
   1bb04:	mvn	r1, #0
   1bb08:	eor	r0, r0, r1
   1bb0c:	and	r0, r0, #1
   1bb10:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1bb14:	movw	r1, #0
   1bb18:	str	r0, [sp, #16]
   1bb1c:	mov	r0, r1
   1bb20:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   1bb24:	ldr	r1, [fp, #-16]
   1bb28:	str	r0, [sp, #12]
   1bb2c:	mov	r0, r1
   1bb30:	bl	12840 <coda_set_option_perform_conversions@plt>
   1bb34:	movw	r1, #36252	; 0x8d9c
   1bb38:	movt	r1, #1
   1bb3c:	str	r0, [sp, #8]
   1bb40:	blx	r1
   1bb44:	movw	r0, #20368	; 0x4f90
   1bb48:	movt	r0, #1
   1bb4c:	blx	r0
   1bb50:	movw	r0, #464	; 0x1d0
   1bb54:	movt	r0, #3
   1bb58:	ldr	r0, [r0]
   1bb5c:	movw	r1, #0
   1bb60:	cmp	r0, r1
   1bb64:	beq	1bbd4 <main@@Base+0x1044>
   1bb68:	movw	r0, #464	; 0x1d0
   1bb6c:	movt	r0, #3
   1bb70:	ldr	r0, [r0]
   1bb74:	movw	r1, #61871	; 0xf1af
   1bb78:	movt	r1, #1
   1bb7c:	bl	12600 <fopen@plt>
   1bb80:	movw	r1, #4232	; 0x1088
   1bb84:	movt	r1, #3
   1bb88:	str	r0, [r1]
   1bb8c:	ldr	r0, [r1]
   1bb90:	movw	r1, #0
   1bb94:	cmp	r0, r1
   1bb98:	bne	1bbd0 <main@@Base+0x1040>
   1bb9c:	movw	r0, #424	; 0x1a8
   1bba0:	movt	r0, #3
   1bba4:	ldr	r0, [r0]
   1bba8:	movw	r1, #464	; 0x1d0
   1bbac:	movt	r1, #3
   1bbb0:	ldr	r2, [r1]
   1bbb4:	movw	r1, #61873	; 0xf1b1
   1bbb8:	movt	r1, #1
   1bbbc:	bl	12810 <fprintf@plt>
   1bbc0:	movw	r1, #1
   1bbc4:	str	r0, [sp, #4]
   1bbc8:	mov	r0, r1
   1bbcc:	bl	127c8 <exit@plt>
   1bbd0:	b	1bbd4 <main@@Base+0x1044>
   1bbd4:	movw	r0, #36376	; 0x8e18
   1bbd8:	movt	r0, #1
   1bbdc:	blx	r0
   1bbe0:	movw	r0, #464	; 0x1d0
   1bbe4:	movt	r0, #3
   1bbe8:	ldr	r0, [r0]
   1bbec:	movw	r1, #0
   1bbf0:	cmp	r0, r1
   1bbf4:	beq	1bc08 <main@@Base+0x1078>
   1bbf8:	movw	r0, #4232	; 0x1088
   1bbfc:	movt	r0, #3
   1bc00:	ldr	r0, [r0]
   1bc04:	bl	128ac <fclose@plt>
   1bc08:	movw	r0, #20400	; 0x4fb0
   1bc0c:	movt	r0, #1
   1bc10:	blx	r0
   1bc14:	movw	r0, #36284	; 0x8dbc
   1bc18:	movt	r0, #1
   1bc1c:	blx	r0
   1bc20:	bl	12768 <coda_done@plt>
   1bc24:	mov	sp, fp
   1bc28:	pop	{fp, pc}
   1bc2c:	push	{fp, lr}
   1bc30:	mov	fp, sp
   1bc34:	sub	sp, sp, #56	; 0x38
   1bc38:	str	r0, [fp, #-4]
   1bc3c:	str	r1, [fp, #-8]
   1bc40:	movw	r0, #480	; 0x1e0
   1bc44:	movt	r0, #3
   1bc48:	movw	r1, #0
   1bc4c:	str	r1, [r0]
   1bc50:	movw	r0, #464	; 0x1d0
   1bc54:	movt	r0, #3
   1bc58:	str	r1, [r0]
   1bc5c:	movw	r0, #4256	; 0x10a0
   1bc60:	movt	r0, #3
   1bc64:	str	r1, [r0]
   1bc68:	movw	r0, #428	; 0x1ac
   1bc6c:	movt	r0, #3
   1bc70:	ldr	r0, [r0]
   1bc74:	movw	r2, #4232	; 0x1088
   1bc78:	movt	r2, #3
   1bc7c:	str	r0, [r2]
   1bc80:	movw	r0, #1
   1bc84:	str	r0, [fp, #-12]
   1bc88:	str	r0, [fp, #-16]
   1bc8c:	str	r1, [fp, #-20]	; 0xffffffec
   1bc90:	str	r1, [fp, #-24]	; 0xffffffe8
   1bc94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc98:	ldr	r1, [fp, #-4]
   1bc9c:	cmp	r0, r1
   1bca0:	bge	1bf74 <main@@Base+0x13e4>
   1bca4:	ldr	r0, [fp, #-8]
   1bca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bcac:	add	r0, r0, r1, lsl #2
   1bcb0:	ldr	r0, [r0]
   1bcb4:	movw	r1, #61915	; 0xf1db
   1bcb8:	movt	r1, #1
   1bcbc:	bl	125d0 <strcmp@plt>
   1bcc0:	cmp	r0, #0
   1bcc4:	beq	1bcec <main@@Base+0x115c>
   1bcc8:	ldr	r0, [fp, #-8]
   1bccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bcd0:	add	r0, r0, r1, lsl #2
   1bcd4:	ldr	r0, [r0]
   1bcd8:	movw	r1, #61918	; 0xf1de
   1bcdc:	movt	r1, #1
   1bce0:	bl	125d0 <strcmp@plt>
   1bce4:	cmp	r0, #0
   1bce8:	bne	1bcf8 <main@@Base+0x1168>
   1bcec:	movw	r0, #1
   1bcf0:	str	r0, [fp, #-20]	; 0xffffffec
   1bcf4:	b	1bf60 <main@@Base+0x13d0>
   1bcf8:	ldr	r0, [fp, #-8]
   1bcfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd00:	add	r0, r0, r1, lsl #2
   1bd04:	ldr	r0, [r0]
   1bd08:	movw	r1, #61635	; 0xf0c3
   1bd0c:	movt	r1, #1
   1bd10:	bl	125d0 <strcmp@plt>
   1bd14:	cmp	r0, #0
   1bd18:	beq	1bd40 <main@@Base+0x11b0>
   1bd1c:	ldr	r0, [fp, #-8]
   1bd20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd24:	add	r0, r0, r1, lsl #2
   1bd28:	ldr	r0, [r0]
   1bd2c:	movw	r1, #61638	; 0xf0c6
   1bd30:	movt	r1, #1
   1bd34:	bl	125d0 <strcmp@plt>
   1bd38:	cmp	r0, #0
   1bd3c:	bne	1bd4c <main@@Base+0x11bc>
   1bd40:	movw	r0, #0
   1bd44:	str	r0, [fp, #-16]
   1bd48:	b	1bf5c <main@@Base+0x13cc>
   1bd4c:	ldr	r0, [fp, #-8]
   1bd50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd54:	add	r0, r0, r1, lsl #2
   1bd58:	ldr	r0, [r0]
   1bd5c:	movw	r1, #61801	; 0xf169
   1bd60:	movt	r1, #1
   1bd64:	bl	125d0 <strcmp@plt>
   1bd68:	cmp	r0, #0
   1bd6c:	beq	1bd94 <main@@Base+0x1204>
   1bd70:	ldr	r0, [fp, #-8]
   1bd74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd78:	add	r0, r0, r1, lsl #2
   1bd7c:	ldr	r0, [r0]
   1bd80:	movw	r1, #61804	; 0xf16c
   1bd84:	movt	r1, #1
   1bd88:	bl	125d0 <strcmp@plt>
   1bd8c:	cmp	r0, #0
   1bd90:	bne	1bdf8 <main@@Base+0x1268>
   1bd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd98:	add	r0, r0, #1
   1bd9c:	ldr	r1, [fp, #-4]
   1bda0:	cmp	r0, r1
   1bda4:	bge	1bdf8 <main@@Base+0x1268>
   1bda8:	ldr	r0, [fp, #-8]
   1bdac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdb0:	add	r1, r1, #1
   1bdb4:	add	r0, r0, r1, lsl #2
   1bdb8:	ldr	r0, [r0]
   1bdbc:	ldrb	r0, [r0]
   1bdc0:	cmp	r0, #45	; 0x2d
   1bdc4:	beq	1bdf8 <main@@Base+0x1268>
   1bdc8:	ldr	r0, [fp, #-8]
   1bdcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdd0:	add	r1, r1, #1
   1bdd4:	add	r0, r0, r1, lsl #2
   1bdd8:	ldr	r0, [r0]
   1bddc:	movw	r1, #464	; 0x1d0
   1bde0:	movt	r1, #3
   1bde4:	str	r0, [r1]
   1bde8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdec:	add	r0, r0, #1
   1bdf0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bdf4:	b	1bf58 <main@@Base+0x13c8>
   1bdf8:	ldr	r0, [fp, #-8]
   1bdfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be00:	add	r0, r0, r1, lsl #2
   1be04:	ldr	r0, [r0]
   1be08:	movw	r1, #61931	; 0xf1eb
   1be0c:	movt	r1, #1
   1be10:	bl	125d0 <strcmp@plt>
   1be14:	cmp	r0, #0
   1be18:	beq	1be40 <main@@Base+0x12b0>
   1be1c:	ldr	r0, [fp, #-8]
   1be20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be24:	add	r0, r0, r1, lsl #2
   1be28:	ldr	r0, [r0]
   1be2c:	movw	r1, #61934	; 0xf1ee
   1be30:	movt	r1, #1
   1be34:	bl	125d0 <strcmp@plt>
   1be38:	cmp	r0, #0
   1be3c:	bne	1bea4 <main@@Base+0x1314>
   1be40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be44:	add	r0, r0, #1
   1be48:	ldr	r1, [fp, #-4]
   1be4c:	cmp	r0, r1
   1be50:	bge	1bea4 <main@@Base+0x1314>
   1be54:	ldr	r0, [fp, #-8]
   1be58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be5c:	add	r1, r1, #1
   1be60:	add	r0, r0, r1, lsl #2
   1be64:	ldr	r0, [r0]
   1be68:	ldrb	r0, [r0]
   1be6c:	cmp	r0, #45	; 0x2d
   1be70:	beq	1bea4 <main@@Base+0x1314>
   1be74:	ldr	r0, [fp, #-8]
   1be78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be7c:	add	r1, r1, #1
   1be80:	add	r0, r0, r1, lsl #2
   1be84:	ldr	r0, [r0]
   1be88:	movw	r1, #4256	; 0x10a0
   1be8c:	movt	r1, #3
   1be90:	str	r0, [r1]
   1be94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be98:	add	r0, r0, #1
   1be9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bea0:	b	1bf54 <main@@Base+0x13c4>
   1bea4:	ldr	r0, [fp, #-8]
   1bea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1beac:	add	r0, r0, r1, lsl #2
   1beb0:	ldr	r0, [r0]
   1beb4:	movw	r1, #61760	; 0xf140
   1beb8:	movt	r1, #1
   1bebc:	bl	125d0 <strcmp@plt>
   1bec0:	cmp	r0, #0
   1bec4:	bne	1bed4 <main@@Base+0x1344>
   1bec8:	movw	r0, #0
   1becc:	str	r0, [fp, #-12]
   1bed0:	b	1bf50 <main@@Base+0x13c0>
   1bed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bed8:	ldr	r1, [fp, #-4]
   1bedc:	sub	r1, r1, #1
   1bee0:	cmp	r0, r1
   1bee4:	bne	1bf24 <main@@Base+0x1394>
   1bee8:	ldr	r0, [fp, #-8]
   1beec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bef0:	add	r0, r0, r1, lsl #2
   1bef4:	ldr	r0, [r0]
   1bef8:	ldrb	r0, [r0]
   1befc:	cmp	r0, #45	; 0x2d
   1bf00:	beq	1bf24 <main@@Base+0x1394>
   1bf04:	ldr	r0, [fp, #-8]
   1bf08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf0c:	add	r0, r0, r1, lsl #2
   1bf10:	ldr	r0, [r0]
   1bf14:	movw	r1, #480	; 0x1e0
   1bf18:	movt	r1, #3
   1bf1c:	str	r0, [r1]
   1bf20:	b	1bf4c <main@@Base+0x13bc>
   1bf24:	movw	r0, #424	; 0x1a8
   1bf28:	movt	r0, #3
   1bf2c:	ldr	r0, [r0]
   1bf30:	movw	r1, #57562	; 0xe0da
   1bf34:	movt	r1, #1
   1bf38:	bl	12810 <fprintf@plt>
   1bf3c:	str	r0, [sp, #28]
   1bf40:	bl	1cbc0 <main@@Base+0x2030>
   1bf44:	movw	r0, #1
   1bf48:	bl	127c8 <exit@plt>
   1bf4c:	b	1bf50 <main@@Base+0x13c0>
   1bf50:	b	1bf54 <main@@Base+0x13c4>
   1bf54:	b	1bf58 <main@@Base+0x13c8>
   1bf58:	b	1bf5c <main@@Base+0x13cc>
   1bf5c:	b	1bf60 <main@@Base+0x13d0>
   1bf60:	b	1bf64 <main@@Base+0x13d4>
   1bf64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf68:	add	r0, r0, #1
   1bf6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf70:	b	1bc94 <main@@Base+0x1104>
   1bf74:	movw	r0, #480	; 0x1e0
   1bf78:	movt	r0, #3
   1bf7c:	ldr	r0, [r0]
   1bf80:	movw	r1, #0
   1bf84:	cmp	r0, r1
   1bf88:	beq	1bfa4 <main@@Base+0x1414>
   1bf8c:	movw	r0, #480	; 0x1e0
   1bf90:	movt	r0, #3
   1bf94:	ldr	r0, [r0]
   1bf98:	ldrb	r0, [r0]
   1bf9c:	cmp	r0, #0
   1bfa0:	bne	1bfcc <main@@Base+0x143c>
   1bfa4:	movw	r0, #424	; 0x1a8
   1bfa8:	movt	r0, #3
   1bfac:	ldr	r0, [r0]
   1bfb0:	movw	r1, #57562	; 0xe0da
   1bfb4:	movt	r1, #1
   1bfb8:	bl	12810 <fprintf@plt>
   1bfbc:	str	r0, [sp, #24]
   1bfc0:	bl	1cbc0 <main@@Base+0x2030>
   1bfc4:	movw	r0, #1
   1bfc8:	bl	127c8 <exit@plt>
   1bfcc:	bl	12834 <coda_init@plt>
   1bfd0:	cmp	r0, #0
   1bfd4:	beq	1c020 <main@@Base+0x1490>
   1bfd8:	movw	r0, #424	; 0x1a8
   1bfdc:	movt	r0, #3
   1bfe0:	ldr	r0, [r0]
   1bfe4:	str	r0, [sp, #20]
   1bfe8:	bl	129a8 <coda_get_errno@plt>
   1bfec:	ldr	r0, [r0]
   1bff0:	bl	12960 <coda_errno_to_string@plt>
   1bff4:	ldr	r1, [sp, #20]
   1bff8:	str	r0, [sp, #16]
   1bffc:	mov	r0, r1
   1c000:	movw	r1, #57472	; 0xe080
   1c004:	movt	r1, #1
   1c008:	ldr	r2, [sp, #16]
   1c00c:	bl	12810 <fprintf@plt>
   1c010:	movw	r1, #1
   1c014:	str	r0, [sp, #12]
   1c018:	mov	r0, r1
   1c01c:	bl	127c8 <exit@plt>
   1c020:	ldr	r0, [fp, #-12]
   1c024:	cmp	r0, #0
   1c028:	movw	r0, #0
   1c02c:	movne	r0, #1
   1c030:	mvn	r1, #0
   1c034:	eor	r0, r0, r1
   1c038:	and	r0, r0, #1
   1c03c:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1c040:	ldr	r1, [fp, #-16]
   1c044:	str	r0, [sp, #8]
   1c048:	mov	r0, r1
   1c04c:	bl	12840 <coda_set_option_perform_conversions@plt>
   1c050:	movw	r1, #464	; 0x1d0
   1c054:	movt	r1, #3
   1c058:	ldr	r1, [r1]
   1c05c:	movw	r2, #0
   1c060:	cmp	r1, r2
   1c064:	beq	1c0d4 <main@@Base+0x1544>
   1c068:	movw	r0, #464	; 0x1d0
   1c06c:	movt	r0, #3
   1c070:	ldr	r0, [r0]
   1c074:	movw	r1, #61871	; 0xf1af
   1c078:	movt	r1, #1
   1c07c:	bl	12600 <fopen@plt>
   1c080:	movw	r1, #4232	; 0x1088
   1c084:	movt	r1, #3
   1c088:	str	r0, [r1]
   1c08c:	ldr	r0, [r1]
   1c090:	movw	r1, #0
   1c094:	cmp	r0, r1
   1c098:	bne	1c0d0 <main@@Base+0x1540>
   1c09c:	movw	r0, #424	; 0x1a8
   1c0a0:	movt	r0, #3
   1c0a4:	ldr	r0, [r0]
   1c0a8:	movw	r1, #464	; 0x1d0
   1c0ac:	movt	r1, #3
   1c0b0:	ldr	r2, [r1]
   1c0b4:	movw	r1, #61873	; 0xf1b1
   1c0b8:	movt	r1, #1
   1c0bc:	bl	12810 <fprintf@plt>
   1c0c0:	movw	r1, #1
   1c0c4:	str	r0, [sp, #4]
   1c0c8:	mov	r0, r1
   1c0cc:	bl	127c8 <exit@plt>
   1c0d0:	b	1c0d4 <main@@Base+0x1544>
   1c0d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c0d8:	bl	179a8 <print_json_data@@Base>
   1c0dc:	movw	r0, #464	; 0x1d0
   1c0e0:	movt	r0, #3
   1c0e4:	ldr	r0, [r0]
   1c0e8:	movw	r1, #0
   1c0ec:	cmp	r0, r1
   1c0f0:	beq	1c104 <main@@Base+0x1574>
   1c0f4:	movw	r0, #4232	; 0x1088
   1c0f8:	movt	r0, #3
   1c0fc:	ldr	r0, [r0]
   1c100:	bl	128ac <fclose@plt>
   1c104:	bl	12768 <coda_done@plt>
   1c108:	mov	sp, fp
   1c10c:	pop	{fp, pc}
   1c110:	push	{fp, lr}
   1c114:	mov	fp, sp
   1c118:	sub	sp, sp, #56	; 0x38
   1c11c:	str	r0, [fp, #-4]
   1c120:	str	r1, [fp, #-8]
   1c124:	movw	r0, #480	; 0x1e0
   1c128:	movt	r0, #3
   1c12c:	movw	r1, #0
   1c130:	str	r1, [r0]
   1c134:	movw	r0, #464	; 0x1d0
   1c138:	movt	r0, #3
   1c13c:	str	r1, [r0]
   1c140:	movw	r0, #4256	; 0x10a0
   1c144:	movt	r0, #3
   1c148:	str	r1, [r0]
   1c14c:	movw	r0, #428	; 0x1ac
   1c150:	movt	r0, #3
   1c154:	ldr	r0, [r0]
   1c158:	movw	r2, #4232	; 0x1088
   1c15c:	movt	r2, #3
   1c160:	str	r0, [r2]
   1c164:	movw	r0, #1
   1c168:	str	r0, [fp, #-12]
   1c16c:	str	r0, [fp, #-16]
   1c170:	str	r1, [fp, #-20]	; 0xffffffec
   1c174:	str	r1, [fp, #-24]	; 0xffffffe8
   1c178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c17c:	ldr	r1, [fp, #-4]
   1c180:	cmp	r0, r1
   1c184:	bge	1c458 <main@@Base+0x18c8>
   1c188:	ldr	r0, [fp, #-8]
   1c18c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c190:	add	r0, r0, r1, lsl #2
   1c194:	ldr	r0, [r0]
   1c198:	movw	r1, #61915	; 0xf1db
   1c19c:	movt	r1, #1
   1c1a0:	bl	125d0 <strcmp@plt>
   1c1a4:	cmp	r0, #0
   1c1a8:	beq	1c1d0 <main@@Base+0x1640>
   1c1ac:	ldr	r0, [fp, #-8]
   1c1b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1b4:	add	r0, r0, r1, lsl #2
   1c1b8:	ldr	r0, [r0]
   1c1bc:	movw	r1, #61918	; 0xf1de
   1c1c0:	movt	r1, #1
   1c1c4:	bl	125d0 <strcmp@plt>
   1c1c8:	cmp	r0, #0
   1c1cc:	bne	1c1dc <main@@Base+0x164c>
   1c1d0:	movw	r0, #1
   1c1d4:	str	r0, [fp, #-20]	; 0xffffffec
   1c1d8:	b	1c444 <main@@Base+0x18b4>
   1c1dc:	ldr	r0, [fp, #-8]
   1c1e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1e4:	add	r0, r0, r1, lsl #2
   1c1e8:	ldr	r0, [r0]
   1c1ec:	movw	r1, #61635	; 0xf0c3
   1c1f0:	movt	r1, #1
   1c1f4:	bl	125d0 <strcmp@plt>
   1c1f8:	cmp	r0, #0
   1c1fc:	beq	1c224 <main@@Base+0x1694>
   1c200:	ldr	r0, [fp, #-8]
   1c204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c208:	add	r0, r0, r1, lsl #2
   1c20c:	ldr	r0, [r0]
   1c210:	movw	r1, #61638	; 0xf0c6
   1c214:	movt	r1, #1
   1c218:	bl	125d0 <strcmp@plt>
   1c21c:	cmp	r0, #0
   1c220:	bne	1c230 <main@@Base+0x16a0>
   1c224:	movw	r0, #0
   1c228:	str	r0, [fp, #-16]
   1c22c:	b	1c440 <main@@Base+0x18b0>
   1c230:	ldr	r0, [fp, #-8]
   1c234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c238:	add	r0, r0, r1, lsl #2
   1c23c:	ldr	r0, [r0]
   1c240:	movw	r1, #61801	; 0xf169
   1c244:	movt	r1, #1
   1c248:	bl	125d0 <strcmp@plt>
   1c24c:	cmp	r0, #0
   1c250:	beq	1c278 <main@@Base+0x16e8>
   1c254:	ldr	r0, [fp, #-8]
   1c258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c25c:	add	r0, r0, r1, lsl #2
   1c260:	ldr	r0, [r0]
   1c264:	movw	r1, #61804	; 0xf16c
   1c268:	movt	r1, #1
   1c26c:	bl	125d0 <strcmp@plt>
   1c270:	cmp	r0, #0
   1c274:	bne	1c2dc <main@@Base+0x174c>
   1c278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c27c:	add	r0, r0, #1
   1c280:	ldr	r1, [fp, #-4]
   1c284:	cmp	r0, r1
   1c288:	bge	1c2dc <main@@Base+0x174c>
   1c28c:	ldr	r0, [fp, #-8]
   1c290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c294:	add	r1, r1, #1
   1c298:	add	r0, r0, r1, lsl #2
   1c29c:	ldr	r0, [r0]
   1c2a0:	ldrb	r0, [r0]
   1c2a4:	cmp	r0, #45	; 0x2d
   1c2a8:	beq	1c2dc <main@@Base+0x174c>
   1c2ac:	ldr	r0, [fp, #-8]
   1c2b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2b4:	add	r1, r1, #1
   1c2b8:	add	r0, r0, r1, lsl #2
   1c2bc:	ldr	r0, [r0]
   1c2c0:	movw	r1, #464	; 0x1d0
   1c2c4:	movt	r1, #3
   1c2c8:	str	r0, [r1]
   1c2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2d0:	add	r0, r0, #1
   1c2d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c2d8:	b	1c43c <main@@Base+0x18ac>
   1c2dc:	ldr	r0, [fp, #-8]
   1c2e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2e4:	add	r0, r0, r1, lsl #2
   1c2e8:	ldr	r0, [r0]
   1c2ec:	movw	r1, #61931	; 0xf1eb
   1c2f0:	movt	r1, #1
   1c2f4:	bl	125d0 <strcmp@plt>
   1c2f8:	cmp	r0, #0
   1c2fc:	beq	1c324 <main@@Base+0x1794>
   1c300:	ldr	r0, [fp, #-8]
   1c304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c308:	add	r0, r0, r1, lsl #2
   1c30c:	ldr	r0, [r0]
   1c310:	movw	r1, #61934	; 0xf1ee
   1c314:	movt	r1, #1
   1c318:	bl	125d0 <strcmp@plt>
   1c31c:	cmp	r0, #0
   1c320:	bne	1c388 <main@@Base+0x17f8>
   1c324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c328:	add	r0, r0, #1
   1c32c:	ldr	r1, [fp, #-4]
   1c330:	cmp	r0, r1
   1c334:	bge	1c388 <main@@Base+0x17f8>
   1c338:	ldr	r0, [fp, #-8]
   1c33c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c340:	add	r1, r1, #1
   1c344:	add	r0, r0, r1, lsl #2
   1c348:	ldr	r0, [r0]
   1c34c:	ldrb	r0, [r0]
   1c350:	cmp	r0, #45	; 0x2d
   1c354:	beq	1c388 <main@@Base+0x17f8>
   1c358:	ldr	r0, [fp, #-8]
   1c35c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c360:	add	r1, r1, #1
   1c364:	add	r0, r0, r1, lsl #2
   1c368:	ldr	r0, [r0]
   1c36c:	movw	r1, #4256	; 0x10a0
   1c370:	movt	r1, #3
   1c374:	str	r0, [r1]
   1c378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c37c:	add	r0, r0, #1
   1c380:	str	r0, [fp, #-24]	; 0xffffffe8
   1c384:	b	1c438 <main@@Base+0x18a8>
   1c388:	ldr	r0, [fp, #-8]
   1c38c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c390:	add	r0, r0, r1, lsl #2
   1c394:	ldr	r0, [r0]
   1c398:	movw	r1, #61760	; 0xf140
   1c39c:	movt	r1, #1
   1c3a0:	bl	125d0 <strcmp@plt>
   1c3a4:	cmp	r0, #0
   1c3a8:	bne	1c3b8 <main@@Base+0x1828>
   1c3ac:	movw	r0, #0
   1c3b0:	str	r0, [fp, #-12]
   1c3b4:	b	1c434 <main@@Base+0x18a4>
   1c3b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3bc:	ldr	r1, [fp, #-4]
   1c3c0:	sub	r1, r1, #1
   1c3c4:	cmp	r0, r1
   1c3c8:	bne	1c408 <main@@Base+0x1878>
   1c3cc:	ldr	r0, [fp, #-8]
   1c3d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c3d4:	add	r0, r0, r1, lsl #2
   1c3d8:	ldr	r0, [r0]
   1c3dc:	ldrb	r0, [r0]
   1c3e0:	cmp	r0, #45	; 0x2d
   1c3e4:	beq	1c408 <main@@Base+0x1878>
   1c3e8:	ldr	r0, [fp, #-8]
   1c3ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c3f0:	add	r0, r0, r1, lsl #2
   1c3f4:	ldr	r0, [r0]
   1c3f8:	movw	r1, #480	; 0x1e0
   1c3fc:	movt	r1, #3
   1c400:	str	r0, [r1]
   1c404:	b	1c430 <main@@Base+0x18a0>
   1c408:	movw	r0, #424	; 0x1a8
   1c40c:	movt	r0, #3
   1c410:	ldr	r0, [r0]
   1c414:	movw	r1, #57562	; 0xe0da
   1c418:	movt	r1, #1
   1c41c:	bl	12810 <fprintf@plt>
   1c420:	str	r0, [sp, #28]
   1c424:	bl	1cbc0 <main@@Base+0x2030>
   1c428:	movw	r0, #1
   1c42c:	bl	127c8 <exit@plt>
   1c430:	b	1c434 <main@@Base+0x18a4>
   1c434:	b	1c438 <main@@Base+0x18a8>
   1c438:	b	1c43c <main@@Base+0x18ac>
   1c43c:	b	1c440 <main@@Base+0x18b0>
   1c440:	b	1c444 <main@@Base+0x18b4>
   1c444:	b	1c448 <main@@Base+0x18b8>
   1c448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c44c:	add	r0, r0, #1
   1c450:	str	r0, [fp, #-24]	; 0xffffffe8
   1c454:	b	1c178 <main@@Base+0x15e8>
   1c458:	movw	r0, #480	; 0x1e0
   1c45c:	movt	r0, #3
   1c460:	ldr	r0, [r0]
   1c464:	movw	r1, #0
   1c468:	cmp	r0, r1
   1c46c:	beq	1c488 <main@@Base+0x18f8>
   1c470:	movw	r0, #480	; 0x1e0
   1c474:	movt	r0, #3
   1c478:	ldr	r0, [r0]
   1c47c:	ldrb	r0, [r0]
   1c480:	cmp	r0, #0
   1c484:	bne	1c4b0 <main@@Base+0x1920>
   1c488:	movw	r0, #424	; 0x1a8
   1c48c:	movt	r0, #3
   1c490:	ldr	r0, [r0]
   1c494:	movw	r1, #57562	; 0xe0da
   1c498:	movt	r1, #1
   1c49c:	bl	12810 <fprintf@plt>
   1c4a0:	str	r0, [sp, #24]
   1c4a4:	bl	1cbc0 <main@@Base+0x2030>
   1c4a8:	movw	r0, #1
   1c4ac:	bl	127c8 <exit@plt>
   1c4b0:	bl	12834 <coda_init@plt>
   1c4b4:	cmp	r0, #0
   1c4b8:	beq	1c504 <main@@Base+0x1974>
   1c4bc:	movw	r0, #424	; 0x1a8
   1c4c0:	movt	r0, #3
   1c4c4:	ldr	r0, [r0]
   1c4c8:	str	r0, [sp, #20]
   1c4cc:	bl	129a8 <coda_get_errno@plt>
   1c4d0:	ldr	r0, [r0]
   1c4d4:	bl	12960 <coda_errno_to_string@plt>
   1c4d8:	ldr	r1, [sp, #20]
   1c4dc:	str	r0, [sp, #16]
   1c4e0:	mov	r0, r1
   1c4e4:	movw	r1, #57472	; 0xe080
   1c4e8:	movt	r1, #1
   1c4ec:	ldr	r2, [sp, #16]
   1c4f0:	bl	12810 <fprintf@plt>
   1c4f4:	movw	r1, #1
   1c4f8:	str	r0, [sp, #12]
   1c4fc:	mov	r0, r1
   1c500:	bl	127c8 <exit@plt>
   1c504:	ldr	r0, [fp, #-12]
   1c508:	cmp	r0, #0
   1c50c:	movw	r0, #0
   1c510:	movne	r0, #1
   1c514:	mvn	r1, #0
   1c518:	eor	r0, r0, r1
   1c51c:	and	r0, r0, #1
   1c520:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1c524:	ldr	r1, [fp, #-16]
   1c528:	str	r0, [sp, #8]
   1c52c:	mov	r0, r1
   1c530:	bl	12840 <coda_set_option_perform_conversions@plt>
   1c534:	movw	r1, #464	; 0x1d0
   1c538:	movt	r1, #3
   1c53c:	ldr	r1, [r1]
   1c540:	movw	r2, #0
   1c544:	cmp	r1, r2
   1c548:	beq	1c5b8 <main@@Base+0x1a28>
   1c54c:	movw	r0, #464	; 0x1d0
   1c550:	movt	r0, #3
   1c554:	ldr	r0, [r0]
   1c558:	movw	r1, #61871	; 0xf1af
   1c55c:	movt	r1, #1
   1c560:	bl	12600 <fopen@plt>
   1c564:	movw	r1, #4232	; 0x1088
   1c568:	movt	r1, #3
   1c56c:	str	r0, [r1]
   1c570:	ldr	r0, [r1]
   1c574:	movw	r1, #0
   1c578:	cmp	r0, r1
   1c57c:	bne	1c5b4 <main@@Base+0x1a24>
   1c580:	movw	r0, #424	; 0x1a8
   1c584:	movt	r0, #3
   1c588:	ldr	r0, [r0]
   1c58c:	movw	r1, #464	; 0x1d0
   1c590:	movt	r1, #3
   1c594:	ldr	r2, [r1]
   1c598:	movw	r1, #61873	; 0xf1b1
   1c59c:	movt	r1, #1
   1c5a0:	bl	12810 <fprintf@plt>
   1c5a4:	movw	r1, #1
   1c5a8:	str	r0, [sp, #4]
   1c5ac:	mov	r0, r1
   1c5b0:	bl	127c8 <exit@plt>
   1c5b4:	b	1c5b8 <main@@Base+0x1a28>
   1c5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c5bc:	bl	19b60 <print_yaml_data@@Base>
   1c5c0:	movw	r0, #464	; 0x1d0
   1c5c4:	movt	r0, #3
   1c5c8:	ldr	r0, [r0]
   1c5cc:	movw	r1, #0
   1c5d0:	cmp	r0, r1
   1c5d4:	beq	1c5e8 <main@@Base+0x1a58>
   1c5d8:	movw	r0, #4232	; 0x1088
   1c5dc:	movt	r0, #3
   1c5e0:	ldr	r0, [r0]
   1c5e4:	bl	128ac <fclose@plt>
   1c5e8:	bl	12768 <coda_done@plt>
   1c5ec:	mov	sp, fp
   1c5f0:	pop	{fp, pc}
   1c5f4:	push	{fp, lr}
   1c5f8:	mov	fp, sp
   1c5fc:	sub	sp, sp, #56	; 0x38
   1c600:	str	r0, [fp, #-4]
   1c604:	str	r1, [fp, #-8]
   1c608:	movw	r0, #0
   1c60c:	str	r0, [fp, #-12]
   1c610:	str	r0, [fp, #-16]
   1c614:	str	r0, [fp, #-20]	; 0xffffffec
   1c618:	movw	r1, #480	; 0x1e0
   1c61c:	movt	r1, #3
   1c620:	str	r0, [r1]
   1c624:	movw	r1, #464	; 0x1d0
   1c628:	movt	r1, #3
   1c62c:	str	r0, [r1]
   1c630:	movw	r1, #4256	; 0x10a0
   1c634:	movt	r1, #3
   1c638:	str	r0, [r1]
   1c63c:	movw	r1, #428	; 0x1ac
   1c640:	movt	r1, #3
   1c644:	ldr	r1, [r1]
   1c648:	movw	r2, #4232	; 0x1088
   1c64c:	movt	r2, #3
   1c650:	str	r1, [r2]
   1c654:	movw	r1, #1
   1c658:	str	r1, [fp, #-24]	; 0xffffffe8
   1c65c:	str	r0, [sp, #28]
   1c660:	ldr	r0, [sp, #28]
   1c664:	ldr	r1, [fp, #-4]
   1c668:	cmp	r0, r1
   1c66c:	bge	1ca34 <main@@Base+0x1ea4>
   1c670:	ldr	r0, [fp, #-8]
   1c674:	ldr	r1, [sp, #28]
   1c678:	add	r0, r0, r1, lsl #2
   1c67c:	ldr	r0, [r0]
   1c680:	movw	r1, #61635	; 0xf0c3
   1c684:	movt	r1, #1
   1c688:	bl	125d0 <strcmp@plt>
   1c68c:	cmp	r0, #0
   1c690:	beq	1c6b8 <main@@Base+0x1b28>
   1c694:	ldr	r0, [fp, #-8]
   1c698:	ldr	r1, [sp, #28]
   1c69c:	add	r0, r0, r1, lsl #2
   1c6a0:	ldr	r0, [r0]
   1c6a4:	movw	r1, #61941	; 0xf1f5
   1c6a8:	movt	r1, #1
   1c6ac:	bl	125d0 <strcmp@plt>
   1c6b0:	cmp	r0, #0
   1c6b4:	bne	1c6c4 <main@@Base+0x1b34>
   1c6b8:	movw	r0, #0
   1c6bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c6c0:	b	1ca20 <main@@Base+0x1e90>
   1c6c4:	ldr	r0, [fp, #-8]
   1c6c8:	ldr	r1, [sp, #28]
   1c6cc:	add	r0, r0, r1, lsl #2
   1c6d0:	ldr	r0, [r0]
   1c6d4:	movw	r1, #61801	; 0xf169
   1c6d8:	movt	r1, #1
   1c6dc:	bl	125d0 <strcmp@plt>
   1c6e0:	cmp	r0, #0
   1c6e4:	beq	1c70c <main@@Base+0x1b7c>
   1c6e8:	ldr	r0, [fp, #-8]
   1c6ec:	ldr	r1, [sp, #28]
   1c6f0:	add	r0, r0, r1, lsl #2
   1c6f4:	ldr	r0, [r0]
   1c6f8:	movw	r1, #61804	; 0xf16c
   1c6fc:	movt	r1, #1
   1c700:	bl	125d0 <strcmp@plt>
   1c704:	cmp	r0, #0
   1c708:	bne	1c770 <main@@Base+0x1be0>
   1c70c:	ldr	r0, [sp, #28]
   1c710:	add	r0, r0, #1
   1c714:	ldr	r1, [fp, #-4]
   1c718:	cmp	r0, r1
   1c71c:	bge	1c770 <main@@Base+0x1be0>
   1c720:	ldr	r0, [fp, #-8]
   1c724:	ldr	r1, [sp, #28]
   1c728:	add	r1, r1, #1
   1c72c:	add	r0, r0, r1, lsl #2
   1c730:	ldr	r0, [r0]
   1c734:	ldrb	r0, [r0]
   1c738:	cmp	r0, #45	; 0x2d
   1c73c:	beq	1c770 <main@@Base+0x1be0>
   1c740:	ldr	r0, [fp, #-8]
   1c744:	ldr	r1, [sp, #28]
   1c748:	add	r1, r1, #1
   1c74c:	add	r0, r0, r1, lsl #2
   1c750:	ldr	r0, [r0]
   1c754:	movw	r1, #464	; 0x1d0
   1c758:	movt	r1, #3
   1c75c:	str	r0, [r1]
   1c760:	ldr	r0, [sp, #28]
   1c764:	add	r0, r0, #1
   1c768:	str	r0, [sp, #28]
   1c76c:	b	1ca1c <main@@Base+0x1e8c>
   1c770:	ldr	r0, [fp, #-8]
   1c774:	ldr	r1, [sp, #28]
   1c778:	add	r0, r0, r1, lsl #2
   1c77c:	ldr	r0, [r0]
   1c780:	movw	r1, #61931	; 0xf1eb
   1c784:	movt	r1, #1
   1c788:	bl	125d0 <strcmp@plt>
   1c78c:	cmp	r0, #0
   1c790:	beq	1c7b8 <main@@Base+0x1c28>
   1c794:	ldr	r0, [fp, #-8]
   1c798:	ldr	r1, [sp, #28]
   1c79c:	add	r0, r0, r1, lsl #2
   1c7a0:	ldr	r0, [r0]
   1c7a4:	movw	r1, #61934	; 0xf1ee
   1c7a8:	movt	r1, #1
   1c7ac:	bl	125d0 <strcmp@plt>
   1c7b0:	cmp	r0, #0
   1c7b4:	bne	1c81c <main@@Base+0x1c8c>
   1c7b8:	ldr	r0, [sp, #28]
   1c7bc:	add	r0, r0, #1
   1c7c0:	ldr	r1, [fp, #-4]
   1c7c4:	cmp	r0, r1
   1c7c8:	bge	1c81c <main@@Base+0x1c8c>
   1c7cc:	ldr	r0, [fp, #-8]
   1c7d0:	ldr	r1, [sp, #28]
   1c7d4:	add	r1, r1, #1
   1c7d8:	add	r0, r0, r1, lsl #2
   1c7dc:	ldr	r0, [r0]
   1c7e0:	ldrb	r0, [r0]
   1c7e4:	cmp	r0, #45	; 0x2d
   1c7e8:	beq	1c81c <main@@Base+0x1c8c>
   1c7ec:	ldr	r0, [fp, #-8]
   1c7f0:	ldr	r1, [sp, #28]
   1c7f4:	add	r1, r1, #1
   1c7f8:	add	r0, r0, r1, lsl #2
   1c7fc:	ldr	r0, [r0]
   1c800:	movw	r1, #4256	; 0x10a0
   1c804:	movt	r1, #3
   1c808:	str	r0, [r1]
   1c80c:	ldr	r0, [sp, #28]
   1c810:	add	r0, r0, #1
   1c814:	str	r0, [sp, #28]
   1c818:	b	1ca18 <main@@Base+0x1e88>
   1c81c:	ldr	r0, [fp, #-8]
   1c820:	ldr	r1, [sp, #28]
   1c824:	add	r0, r0, r1, lsl #2
   1c828:	ldr	r0, [r0]
   1c82c:	movw	r1, #61973	; 0xf215
   1c830:	movt	r1, #1
   1c834:	bl	125d0 <strcmp@plt>
   1c838:	cmp	r0, #0
   1c83c:	bne	1c8a8 <main@@Base+0x1d18>
   1c840:	ldr	r0, [sp, #28]
   1c844:	add	r0, r0, #1
   1c848:	ldr	r1, [fp, #-4]
   1c84c:	cmp	r0, r1
   1c850:	bge	1c8a8 <main@@Base+0x1d18>
   1c854:	ldr	r0, [fp, #-8]
   1c858:	ldr	r1, [sp, #28]
   1c85c:	add	r1, r1, #1
   1c860:	add	r0, r0, r1, lsl #2
   1c864:	ldr	r0, [r0]
   1c868:	ldrb	r0, [r0]
   1c86c:	cmp	r0, #45	; 0x2d
   1c870:	beq	1c8a8 <main@@Base+0x1d18>
   1c874:	ldr	r0, [fp, #-8]
   1c878:	ldr	r1, [sp, #28]
   1c87c:	add	r1, r1, #1
   1c880:	add	r0, r0, r1, lsl #2
   1c884:	ldr	r0, [r0]
   1c888:	bl	12954 <atoi@plt>
   1c88c:	movw	r1, #416	; 0x1a0
   1c890:	movt	r1, #3
   1c894:	str	r0, [r1]
   1c898:	ldr	r0, [sp, #28]
   1c89c:	add	r0, r0, #1
   1c8a0:	str	r0, [sp, #28]
   1c8a4:	b	1ca14 <main@@Base+0x1e84>
   1c8a8:	ldr	r0, [fp, #-8]
   1c8ac:	ldr	r1, [sp, #28]
   1c8b0:	add	r0, r0, r1, lsl #2
   1c8b4:	ldr	r0, [r0]
   1c8b8:	movw	r1, #61985	; 0xf221
   1c8bc:	movt	r1, #1
   1c8c0:	bl	125d0 <strcmp@plt>
   1c8c4:	cmp	r0, #0
   1c8c8:	bne	1c994 <main@@Base+0x1e04>
   1c8cc:	ldr	r0, [sp, #28]
   1c8d0:	add	r0, r0, #3
   1c8d4:	ldr	r1, [fp, #-4]
   1c8d8:	cmp	r0, r1
   1c8dc:	bge	1c994 <main@@Base+0x1e04>
   1c8e0:	ldr	r0, [fp, #-8]
   1c8e4:	ldr	r1, [sp, #28]
   1c8e8:	add	r1, r1, #1
   1c8ec:	add	r0, r0, r1, lsl #2
   1c8f0:	ldr	r0, [r0]
   1c8f4:	ldrb	r0, [r0]
   1c8f8:	cmp	r0, #45	; 0x2d
   1c8fc:	beq	1c994 <main@@Base+0x1e04>
   1c900:	ldr	r0, [fp, #-8]
   1c904:	ldr	r1, [sp, #28]
   1c908:	add	r1, r1, #2
   1c90c:	add	r0, r0, r1, lsl #2
   1c910:	ldr	r0, [r0]
   1c914:	ldrb	r0, [r0]
   1c918:	cmp	r0, #45	; 0x2d
   1c91c:	beq	1c994 <main@@Base+0x1e04>
   1c920:	ldr	r0, [fp, #-8]
   1c924:	ldr	r1, [sp, #28]
   1c928:	add	r1, r1, #3
   1c92c:	add	r0, r0, r1, lsl #2
   1c930:	ldr	r0, [r0]
   1c934:	ldrb	r0, [r0]
   1c938:	cmp	r0, #45	; 0x2d
   1c93c:	beq	1c994 <main@@Base+0x1e04>
   1c940:	ldr	r0, [fp, #-8]
   1c944:	ldr	r1, [sp, #28]
   1c948:	add	r0, r0, r1, lsl #2
   1c94c:	ldr	r0, [r0, #4]
   1c950:	str	r0, [fp, #-12]
   1c954:	ldr	r0, [fp, #-8]
   1c958:	ldr	r1, [sp, #28]
   1c95c:	add	r0, r0, r1, lsl #2
   1c960:	ldr	r0, [r0, #8]
   1c964:	str	r0, [fp, #-16]
   1c968:	ldr	r0, [fp, #-8]
   1c96c:	ldr	r1, [sp, #28]
   1c970:	add	r1, r1, #3
   1c974:	add	r0, r0, r1, lsl #2
   1c978:	ldr	r0, [r0]
   1c97c:	bl	12954 <atoi@plt>
   1c980:	str	r0, [fp, #-20]	; 0xffffffec
   1c984:	ldr	r0, [sp, #28]
   1c988:	add	r0, r0, #3
   1c98c:	str	r0, [sp, #28]
   1c990:	b	1ca10 <main@@Base+0x1e80>
   1c994:	ldr	r0, [sp, #28]
   1c998:	ldr	r1, [fp, #-4]
   1c99c:	sub	r1, r1, #1
   1c9a0:	cmp	r0, r1
   1c9a4:	bne	1c9e4 <main@@Base+0x1e54>
   1c9a8:	ldr	r0, [fp, #-8]
   1c9ac:	ldr	r1, [sp, #28]
   1c9b0:	add	r0, r0, r1, lsl #2
   1c9b4:	ldr	r0, [r0]
   1c9b8:	ldrb	r0, [r0]
   1c9bc:	cmp	r0, #45	; 0x2d
   1c9c0:	beq	1c9e4 <main@@Base+0x1e54>
   1c9c4:	ldr	r0, [fp, #-8]
   1c9c8:	ldr	r1, [sp, #28]
   1c9cc:	add	r0, r0, r1, lsl #2
   1c9d0:	ldr	r0, [r0]
   1c9d4:	movw	r1, #480	; 0x1e0
   1c9d8:	movt	r1, #3
   1c9dc:	str	r0, [r1]
   1c9e0:	b	1ca0c <main@@Base+0x1e7c>
   1c9e4:	movw	r0, #424	; 0x1a8
   1c9e8:	movt	r0, #3
   1c9ec:	ldr	r0, [r0]
   1c9f0:	movw	r1, #57562	; 0xe0da
   1c9f4:	movt	r1, #1
   1c9f8:	bl	12810 <fprintf@plt>
   1c9fc:	str	r0, [sp, #24]
   1ca00:	bl	1cbc0 <main@@Base+0x2030>
   1ca04:	movw	r0, #1
   1ca08:	bl	127c8 <exit@plt>
   1ca0c:	b	1ca10 <main@@Base+0x1e80>
   1ca10:	b	1ca14 <main@@Base+0x1e84>
   1ca14:	b	1ca18 <main@@Base+0x1e88>
   1ca18:	b	1ca1c <main@@Base+0x1e8c>
   1ca1c:	b	1ca20 <main@@Base+0x1e90>
   1ca20:	b	1ca24 <main@@Base+0x1e94>
   1ca24:	ldr	r0, [sp, #28]
   1ca28:	add	r0, r0, #1
   1ca2c:	str	r0, [sp, #28]
   1ca30:	b	1c660 <main@@Base+0x1ad0>
   1ca34:	movw	r0, #480	; 0x1e0
   1ca38:	movt	r0, #3
   1ca3c:	ldr	r0, [r0]
   1ca40:	movw	r1, #0
   1ca44:	cmp	r0, r1
   1ca48:	beq	1ca64 <main@@Base+0x1ed4>
   1ca4c:	movw	r0, #480	; 0x1e0
   1ca50:	movt	r0, #3
   1ca54:	ldr	r0, [r0]
   1ca58:	ldrb	r0, [r0]
   1ca5c:	cmp	r0, #0
   1ca60:	bne	1ca8c <main@@Base+0x1efc>
   1ca64:	movw	r0, #424	; 0x1a8
   1ca68:	movt	r0, #3
   1ca6c:	ldr	r0, [r0]
   1ca70:	movw	r1, #57562	; 0xe0da
   1ca74:	movt	r1, #1
   1ca78:	bl	12810 <fprintf@plt>
   1ca7c:	str	r0, [sp, #20]
   1ca80:	bl	1cbc0 <main@@Base+0x2030>
   1ca84:	movw	r0, #1
   1ca88:	bl	127c8 <exit@plt>
   1ca8c:	bl	12834 <coda_init@plt>
   1ca90:	cmp	r0, #0
   1ca94:	beq	1cae0 <main@@Base+0x1f50>
   1ca98:	movw	r0, #424	; 0x1a8
   1ca9c:	movt	r0, #3
   1caa0:	ldr	r0, [r0]
   1caa4:	str	r0, [sp, #16]
   1caa8:	bl	129a8 <coda_get_errno@plt>
   1caac:	ldr	r0, [r0]
   1cab0:	bl	12960 <coda_errno_to_string@plt>
   1cab4:	ldr	r1, [sp, #16]
   1cab8:	str	r0, [sp, #12]
   1cabc:	mov	r0, r1
   1cac0:	movw	r1, #57472	; 0xe080
   1cac4:	movt	r1, #1
   1cac8:	ldr	r2, [sp, #12]
   1cacc:	bl	12810 <fprintf@plt>
   1cad0:	movw	r1, #1
   1cad4:	str	r0, [sp, #8]
   1cad8:	mov	r0, r1
   1cadc:	bl	127c8 <exit@plt>
   1cae0:	movw	r0, #0
   1cae4:	bl	12840 <coda_set_option_perform_conversions@plt>
   1cae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1caec:	str	r0, [sp, #4]
   1caf0:	mov	r0, r1
   1caf4:	bl	125a0 <coda_set_option_use_fast_size_expressions@plt>
   1caf8:	movw	r1, #464	; 0x1d0
   1cafc:	movt	r1, #3
   1cb00:	ldr	r1, [r1]
   1cb04:	movw	r2, #0
   1cb08:	cmp	r1, r2
   1cb0c:	beq	1cb7c <main@@Base+0x1fec>
   1cb10:	movw	r0, #464	; 0x1d0
   1cb14:	movt	r0, #3
   1cb18:	ldr	r0, [r0]
   1cb1c:	movw	r1, #61871	; 0xf1af
   1cb20:	movt	r1, #1
   1cb24:	bl	12600 <fopen@plt>
   1cb28:	movw	r1, #4232	; 0x1088
   1cb2c:	movt	r1, #3
   1cb30:	str	r0, [r1]
   1cb34:	ldr	r0, [r1]
   1cb38:	movw	r1, #0
   1cb3c:	cmp	r0, r1
   1cb40:	bne	1cb78 <main@@Base+0x1fe8>
   1cb44:	movw	r0, #424	; 0x1a8
   1cb48:	movt	r0, #3
   1cb4c:	ldr	r0, [r0]
   1cb50:	movw	r1, #464	; 0x1d0
   1cb54:	movt	r1, #3
   1cb58:	ldr	r2, [r1]
   1cb5c:	movw	r1, #61873	; 0xf1b1
   1cb60:	movt	r1, #1
   1cb64:	bl	12810 <fprintf@plt>
   1cb68:	movw	r1, #1
   1cb6c:	str	r0, [sp]
   1cb70:	mov	r0, r1
   1cb74:	bl	127c8 <exit@plt>
   1cb78:	b	1cb7c <main@@Base+0x1fec>
   1cb7c:	ldr	r0, [fp, #-12]
   1cb80:	ldr	r1, [fp, #-16]
   1cb84:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cb88:	bl	13b88 <print_debug_data@@Base>
   1cb8c:	movw	r0, #464	; 0x1d0
   1cb90:	movt	r0, #3
   1cb94:	ldr	r0, [r0]
   1cb98:	movw	r1, #0
   1cb9c:	cmp	r0, r1
   1cba0:	beq	1cbb4 <main@@Base+0x2024>
   1cba4:	movw	r0, #4232	; 0x1088
   1cba8:	movt	r0, #3
   1cbac:	ldr	r0, [r0]
   1cbb0:	bl	128ac <fclose@plt>
   1cbb4:	bl	12768 <coda_done@plt>
   1cbb8:	mov	sp, fp
   1cbbc:	pop	{fp, pc}
   1cbc0:	push	{fp, lr}
   1cbc4:	mov	fp, sp
   1cbc8:	sub	sp, sp, #472	; 0x1d8
   1cbcc:	movw	r0, #57588	; 0xe0f4
   1cbd0:	movt	r0, #1
   1cbd4:	bl	125e8 <printf@plt>
   1cbd8:	movw	r1, #57596	; 0xe0fc
   1cbdc:	movt	r1, #1
   1cbe0:	str	r0, [fp, #-4]
   1cbe4:	mov	r0, r1
   1cbe8:	bl	125e8 <printf@plt>
   1cbec:	movw	r1, #57667	; 0xe143
   1cbf0:	movt	r1, #1
   1cbf4:	str	r0, [fp, #-8]
   1cbf8:	mov	r0, r1
   1cbfc:	bl	125e8 <printf@plt>
   1cc00:	movw	r1, #57712	; 0xe170
   1cc04:	movt	r1, #1
   1cc08:	str	r0, [fp, #-12]
   1cc0c:	mov	r0, r1
   1cc10:	bl	125e8 <printf@plt>
   1cc14:	movw	r1, #57735	; 0xe187
   1cc18:	movt	r1, #1
   1cc1c:	str	r0, [fp, #-16]
   1cc20:	mov	r0, r1
   1cc24:	bl	125e8 <printf@plt>
   1cc28:	movw	r1, #57763	; 0xe1a3
   1cc2c:	movt	r1, #1
   1cc30:	str	r0, [fp, #-20]	; 0xffffffec
   1cc34:	mov	r0, r1
   1cc38:	bl	125e8 <printf@plt>
   1cc3c:	movw	r1, #57819	; 0xe1db
   1cc40:	movt	r1, #1
   1cc44:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc48:	mov	r0, r1
   1cc4c:	bl	125e8 <printf@plt>
   1cc50:	movw	r1, #57858	; 0xe202
   1cc54:	movt	r1, #1
   1cc58:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc5c:	mov	r0, r1
   1cc60:	bl	125e8 <printf@plt>
   1cc64:	movw	r1, #57917	; 0xe23d
   1cc68:	movt	r1, #1
   1cc6c:	str	r0, [fp, #-32]	; 0xffffffe0
   1cc70:	mov	r0, r1
   1cc74:	bl	125e8 <printf@plt>
   1cc78:	movw	r1, #57965	; 0xe26d
   1cc7c:	movt	r1, #1
   1cc80:	str	r0, [fp, #-36]	; 0xffffffdc
   1cc84:	mov	r0, r1
   1cc88:	bl	125e8 <printf@plt>
   1cc8c:	movw	r1, #58038	; 0xe2b6
   1cc90:	movt	r1, #1
   1cc94:	str	r0, [fp, #-40]	; 0xffffffd8
   1cc98:	mov	r0, r1
   1cc9c:	bl	125e8 <printf@plt>
   1cca0:	movw	r1, #58062	; 0xe2ce
   1cca4:	movt	r1, #1
   1cca8:	str	r0, [fp, #-44]	; 0xffffffd4
   1ccac:	mov	r0, r1
   1ccb0:	bl	125e8 <printf@plt>
   1ccb4:	movw	r1, #58104	; 0xe2f8
   1ccb8:	movt	r1, #1
   1ccbc:	str	r0, [fp, #-48]	; 0xffffffd0
   1ccc0:	mov	r0, r1
   1ccc4:	bl	125e8 <printf@plt>
   1ccc8:	movw	r1, #58128	; 0xe310
   1cccc:	movt	r1, #1
   1ccd0:	str	r0, [fp, #-52]	; 0xffffffcc
   1ccd4:	mov	r0, r1
   1ccd8:	bl	125e8 <printf@plt>
   1ccdc:	movw	r1, #58171	; 0xe33b
   1cce0:	movt	r1, #1
   1cce4:	str	r0, [fp, #-56]	; 0xffffffc8
   1cce8:	mov	r0, r1
   1ccec:	bl	125e8 <printf@plt>
   1ccf0:	movw	r1, #58198	; 0xe356
   1ccf4:	movt	r1, #1
   1ccf8:	str	r0, [fp, #-60]	; 0xffffffc4
   1ccfc:	mov	r0, r1
   1cd00:	bl	125e8 <printf@plt>
   1cd04:	movw	r1, #58248	; 0xe388
   1cd08:	movt	r1, #1
   1cd0c:	str	r0, [fp, #-64]	; 0xffffffc0
   1cd10:	mov	r0, r1
   1cd14:	bl	125e8 <printf@plt>
   1cd18:	movw	r1, #58274	; 0xe3a2
   1cd1c:	movt	r1, #1
   1cd20:	str	r0, [fp, #-68]	; 0xffffffbc
   1cd24:	mov	r0, r1
   1cd28:	bl	125e8 <printf@plt>
   1cd2c:	movw	r1, #58345	; 0xe3e9
   1cd30:	movt	r1, #1
   1cd34:	str	r0, [fp, #-72]	; 0xffffffb8
   1cd38:	mov	r0, r1
   1cd3c:	bl	125e8 <printf@plt>
   1cd40:	movw	r1, #58387	; 0xe413
   1cd44:	movt	r1, #1
   1cd48:	str	r0, [fp, #-76]	; 0xffffffb4
   1cd4c:	mov	r0, r1
   1cd50:	bl	125e8 <printf@plt>
   1cd54:	movw	r1, #58419	; 0xe433
   1cd58:	movt	r1, #1
   1cd5c:	str	r0, [fp, #-80]	; 0xffffffb0
   1cd60:	mov	r0, r1
   1cd64:	bl	125e8 <printf@plt>
   1cd68:	movw	r1, #58500	; 0xe484
   1cd6c:	movt	r1, #1
   1cd70:	str	r0, [fp, #-84]	; 0xffffffac
   1cd74:	mov	r0, r1
   1cd78:	bl	125e8 <printf@plt>
   1cd7c:	movw	r1, #58579	; 0xe4d3
   1cd80:	movt	r1, #1
   1cd84:	str	r0, [fp, #-88]	; 0xffffffa8
   1cd88:	mov	r0, r1
   1cd8c:	bl	125e8 <printf@plt>
   1cd90:	movw	r1, #61913	; 0xf1d9
   1cd94:	movt	r1, #1
   1cd98:	str	r0, [fp, #-92]	; 0xffffffa4
   1cd9c:	mov	r0, r1
   1cda0:	bl	125e8 <printf@plt>
   1cda4:	movw	r1, #58610	; 0xe4f2
   1cda8:	movt	r1, #1
   1cdac:	str	r0, [fp, #-96]	; 0xffffffa0
   1cdb0:	mov	r0, r1
   1cdb4:	bl	125e8 <printf@plt>
   1cdb8:	movw	r1, #58683	; 0xe53b
   1cdbc:	movt	r1, #1
   1cdc0:	str	r0, [fp, #-100]	; 0xffffff9c
   1cdc4:	mov	r0, r1
   1cdc8:	bl	125e8 <printf@plt>
   1cdcc:	movw	r1, #57712	; 0xe170
   1cdd0:	movt	r1, #1
   1cdd4:	str	r0, [fp, #-104]	; 0xffffff98
   1cdd8:	mov	r0, r1
   1cddc:	bl	125e8 <printf@plt>
   1cde0:	movw	r1, #57819	; 0xe1db
   1cde4:	movt	r1, #1
   1cde8:	str	r0, [fp, #-108]	; 0xffffff94
   1cdec:	mov	r0, r1
   1cdf0:	bl	125e8 <printf@plt>
   1cdf4:	movw	r1, #57858	; 0xe202
   1cdf8:	movt	r1, #1
   1cdfc:	str	r0, [fp, #-112]	; 0xffffff90
   1ce00:	mov	r0, r1
   1ce04:	bl	125e8 <printf@plt>
   1ce08:	movw	r1, #57917	; 0xe23d
   1ce0c:	movt	r1, #1
   1ce10:	str	r0, [fp, #-116]	; 0xffffff8c
   1ce14:	mov	r0, r1
   1ce18:	bl	125e8 <printf@plt>
   1ce1c:	movw	r1, #57965	; 0xe26d
   1ce20:	movt	r1, #1
   1ce24:	str	r0, [fp, #-120]	; 0xffffff88
   1ce28:	mov	r0, r1
   1ce2c:	bl	125e8 <printf@plt>
   1ce30:	movw	r1, #58744	; 0xe578
   1ce34:	movt	r1, #1
   1ce38:	str	r0, [fp, #-124]	; 0xffffff84
   1ce3c:	mov	r0, r1
   1ce40:	bl	125e8 <printf@plt>
   1ce44:	movw	r1, #58769	; 0xe591
   1ce48:	movt	r1, #1
   1ce4c:	str	r0, [fp, #-128]	; 0xffffff80
   1ce50:	mov	r0, r1
   1ce54:	bl	125e8 <printf@plt>
   1ce58:	movw	r1, #58835	; 0xe5d3
   1ce5c:	movt	r1, #1
   1ce60:	str	r0, [fp, #-132]	; 0xffffff7c
   1ce64:	mov	r0, r1
   1ce68:	bl	125e8 <printf@plt>
   1ce6c:	movw	r1, #58860	; 0xe5ec
   1ce70:	movt	r1, #1
   1ce74:	str	r0, [fp, #-136]	; 0xffffff78
   1ce78:	mov	r0, r1
   1ce7c:	bl	125e8 <printf@plt>
   1ce80:	movw	r1, #58936	; 0xe638
   1ce84:	movt	r1, #1
   1ce88:	str	r0, [fp, #-140]	; 0xffffff74
   1ce8c:	mov	r0, r1
   1ce90:	bl	125e8 <printf@plt>
   1ce94:	movw	r1, #58973	; 0xe65d
   1ce98:	movt	r1, #1
   1ce9c:	str	r0, [fp, #-144]	; 0xffffff70
   1cea0:	mov	r0, r1
   1cea4:	bl	125e8 <printf@plt>
   1cea8:	movw	r1, #59025	; 0xe691
   1ceac:	movt	r1, #1
   1ceb0:	str	r0, [fp, #-148]	; 0xffffff6c
   1ceb4:	mov	r0, r1
   1ceb8:	bl	125e8 <printf@plt>
   1cebc:	movw	r1, #59058	; 0xe6b2
   1cec0:	movt	r1, #1
   1cec4:	str	r0, [fp, #-152]	; 0xffffff68
   1cec8:	mov	r0, r1
   1cecc:	bl	125e8 <printf@plt>
   1ced0:	movw	r1, #59134	; 0xe6fe
   1ced4:	movt	r1, #1
   1ced8:	str	r0, [fp, #-156]	; 0xffffff64
   1cedc:	mov	r0, r1
   1cee0:	bl	125e8 <printf@plt>
   1cee4:	movw	r1, #59191	; 0xe737
   1cee8:	movt	r1, #1
   1ceec:	str	r0, [fp, #-160]	; 0xffffff60
   1cef0:	mov	r0, r1
   1cef4:	bl	125e8 <printf@plt>
   1cef8:	movw	r1, #59268	; 0xe784
   1cefc:	movt	r1, #1
   1cf00:	str	r0, [fp, #-164]	; 0xffffff5c
   1cf04:	mov	r0, r1
   1cf08:	bl	125e8 <printf@plt>
   1cf0c:	movw	r1, #59302	; 0xe7a6
   1cf10:	movt	r1, #1
   1cf14:	str	r0, [fp, #-168]	; 0xffffff58
   1cf18:	mov	r0, r1
   1cf1c:	bl	125e8 <printf@plt>
   1cf20:	movw	r1, #58387	; 0xe413
   1cf24:	movt	r1, #1
   1cf28:	str	r0, [fp, #-172]	; 0xffffff54
   1cf2c:	mov	r0, r1
   1cf30:	bl	125e8 <printf@plt>
   1cf34:	movw	r1, #58419	; 0xe433
   1cf38:	movt	r1, #1
   1cf3c:	str	r0, [fp, #-176]	; 0xffffff50
   1cf40:	mov	r0, r1
   1cf44:	bl	125e8 <printf@plt>
   1cf48:	movw	r1, #58500	; 0xe484
   1cf4c:	movt	r1, #1
   1cf50:	str	r0, [fp, #-180]	; 0xffffff4c
   1cf54:	mov	r0, r1
   1cf58:	bl	125e8 <printf@plt>
   1cf5c:	movw	r1, #58579	; 0xe4d3
   1cf60:	movt	r1, #1
   1cf64:	str	r0, [fp, #-184]	; 0xffffff48
   1cf68:	mov	r0, r1
   1cf6c:	bl	125e8 <printf@plt>
   1cf70:	movw	r1, #61913	; 0xf1d9
   1cf74:	movt	r1, #1
   1cf78:	str	r0, [fp, #-188]	; 0xffffff44
   1cf7c:	mov	r0, r1
   1cf80:	bl	125e8 <printf@plt>
   1cf84:	movw	r1, #59382	; 0xe7f6
   1cf88:	movt	r1, #1
   1cf8c:	str	r0, [fp, #-192]	; 0xffffff40
   1cf90:	mov	r0, r1
   1cf94:	bl	125e8 <printf@plt>
   1cf98:	movw	r1, #59453	; 0xe83d
   1cf9c:	movt	r1, #1
   1cfa0:	str	r0, [fp, #-196]	; 0xffffff3c
   1cfa4:	mov	r0, r1
   1cfa8:	bl	125e8 <printf@plt>
   1cfac:	movw	r1, #59514	; 0xe87a
   1cfb0:	movt	r1, #1
   1cfb4:	str	r0, [fp, #-200]	; 0xffffff38
   1cfb8:	mov	r0, r1
   1cfbc:	bl	125e8 <printf@plt>
   1cfc0:	movw	r1, #59537	; 0xe891
   1cfc4:	movt	r1, #1
   1cfc8:	str	r0, [fp, #-204]	; 0xffffff34
   1cfcc:	mov	r0, r1
   1cfd0:	bl	125e8 <printf@plt>
   1cfd4:	movw	r1, #59567	; 0xe8af
   1cfd8:	movt	r1, #1
   1cfdc:	str	r0, [fp, #-208]	; 0xffffff30
   1cfe0:	mov	r0, r1
   1cfe4:	bl	125e8 <printf@plt>
   1cfe8:	movw	r1, #59639	; 0xe8f7
   1cfec:	movt	r1, #1
   1cff0:	str	r0, [fp, #-212]	; 0xffffff2c
   1cff4:	mov	r0, r1
   1cff8:	bl	125e8 <printf@plt>
   1cffc:	movw	r1, #57819	; 0xe1db
   1d000:	movt	r1, #1
   1d004:	str	r0, [fp, #-216]	; 0xffffff28
   1d008:	mov	r0, r1
   1d00c:	bl	125e8 <printf@plt>
   1d010:	movw	r1, #57858	; 0xe202
   1d014:	movt	r1, #1
   1d018:	str	r0, [fp, #-220]	; 0xffffff24
   1d01c:	mov	r0, r1
   1d020:	bl	125e8 <printf@plt>
   1d024:	movw	r1, #58936	; 0xe638
   1d028:	movt	r1, #1
   1d02c:	str	r0, [fp, #-224]	; 0xffffff20
   1d030:	mov	r0, r1
   1d034:	bl	125e8 <printf@plt>
   1d038:	movw	r1, #58973	; 0xe65d
   1d03c:	movt	r1, #1
   1d040:	str	r0, [fp, #-228]	; 0xffffff1c
   1d044:	mov	r0, r1
   1d048:	bl	125e8 <printf@plt>
   1d04c:	movw	r1, #59715	; 0xe943
   1d050:	movt	r1, #1
   1d054:	str	r0, [fp, #-232]	; 0xffffff18
   1d058:	mov	r0, r1
   1d05c:	bl	125e8 <printf@plt>
   1d060:	movw	r1, #59746	; 0xe962
   1d064:	movt	r1, #1
   1d068:	str	r0, [sp, #236]	; 0xec
   1d06c:	mov	r0, r1
   1d070:	bl	125e8 <printf@plt>
   1d074:	movw	r1, #59819	; 0xe9ab
   1d078:	movt	r1, #1
   1d07c:	str	r0, [sp, #232]	; 0xe8
   1d080:	mov	r0, r1
   1d084:	bl	125e8 <printf@plt>
   1d088:	movw	r1, #58387	; 0xe413
   1d08c:	movt	r1, #1
   1d090:	str	r0, [sp, #228]	; 0xe4
   1d094:	mov	r0, r1
   1d098:	bl	125e8 <printf@plt>
   1d09c:	movw	r1, #58419	; 0xe433
   1d0a0:	movt	r1, #1
   1d0a4:	str	r0, [sp, #224]	; 0xe0
   1d0a8:	mov	r0, r1
   1d0ac:	bl	125e8 <printf@plt>
   1d0b0:	movw	r1, #58500	; 0xe484
   1d0b4:	movt	r1, #1
   1d0b8:	str	r0, [sp, #220]	; 0xdc
   1d0bc:	mov	r0, r1
   1d0c0:	bl	125e8 <printf@plt>
   1d0c4:	movw	r1, #58579	; 0xe4d3
   1d0c8:	movt	r1, #1
   1d0cc:	str	r0, [sp, #216]	; 0xd8
   1d0d0:	mov	r0, r1
   1d0d4:	bl	125e8 <printf@plt>
   1d0d8:	movw	r1, #61913	; 0xf1d9
   1d0dc:	movt	r1, #1
   1d0e0:	str	r0, [sp, #212]	; 0xd4
   1d0e4:	mov	r0, r1
   1d0e8:	bl	125e8 <printf@plt>
   1d0ec:	movw	r1, #59897	; 0xe9f9
   1d0f0:	movt	r1, #1
   1d0f4:	str	r0, [sp, #208]	; 0xd0
   1d0f8:	mov	r0, r1
   1d0fc:	bl	125e8 <printf@plt>
   1d100:	movw	r1, #59968	; 0xea40
   1d104:	movt	r1, #1
   1d108:	str	r0, [sp, #204]	; 0xcc
   1d10c:	mov	r0, r1
   1d110:	bl	125e8 <printf@plt>
   1d114:	movw	r1, #60029	; 0xea7d
   1d118:	movt	r1, #1
   1d11c:	str	r0, [sp, #200]	; 0xc8
   1d120:	mov	r0, r1
   1d124:	bl	125e8 <printf@plt>
   1d128:	movw	r1, #59537	; 0xe891
   1d12c:	movt	r1, #1
   1d130:	str	r0, [sp, #196]	; 0xc4
   1d134:	mov	r0, r1
   1d138:	bl	125e8 <printf@plt>
   1d13c:	movw	r1, #59567	; 0xe8af
   1d140:	movt	r1, #1
   1d144:	str	r0, [sp, #192]	; 0xc0
   1d148:	mov	r0, r1
   1d14c:	bl	125e8 <printf@plt>
   1d150:	movw	r1, #60052	; 0xea94
   1d154:	movt	r1, #1
   1d158:	str	r0, [sp, #188]	; 0xbc
   1d15c:	mov	r0, r1
   1d160:	bl	125e8 <printf@plt>
   1d164:	movw	r1, #60129	; 0xeae1
   1d168:	movt	r1, #1
   1d16c:	str	r0, [sp, #184]	; 0xb8
   1d170:	mov	r0, r1
   1d174:	bl	125e8 <printf@plt>
   1d178:	movw	r1, #57819	; 0xe1db
   1d17c:	movt	r1, #1
   1d180:	str	r0, [sp, #180]	; 0xb4
   1d184:	mov	r0, r1
   1d188:	bl	125e8 <printf@plt>
   1d18c:	movw	r1, #57858	; 0xe202
   1d190:	movt	r1, #1
   1d194:	str	r0, [sp, #176]	; 0xb0
   1d198:	mov	r0, r1
   1d19c:	bl	125e8 <printf@plt>
   1d1a0:	movw	r1, #58936	; 0xe638
   1d1a4:	movt	r1, #1
   1d1a8:	str	r0, [sp, #172]	; 0xac
   1d1ac:	mov	r0, r1
   1d1b0:	bl	125e8 <printf@plt>
   1d1b4:	movw	r1, #58973	; 0xe65d
   1d1b8:	movt	r1, #1
   1d1bc:	str	r0, [sp, #168]	; 0xa8
   1d1c0:	mov	r0, r1
   1d1c4:	bl	125e8 <printf@plt>
   1d1c8:	movw	r1, #59715	; 0xe943
   1d1cc:	movt	r1, #1
   1d1d0:	str	r0, [sp, #164]	; 0xa4
   1d1d4:	mov	r0, r1
   1d1d8:	bl	125e8 <printf@plt>
   1d1dc:	movw	r1, #59746	; 0xe962
   1d1e0:	movt	r1, #1
   1d1e4:	str	r0, [sp, #160]	; 0xa0
   1d1e8:	mov	r0, r1
   1d1ec:	bl	125e8 <printf@plt>
   1d1f0:	movw	r1, #59819	; 0xe9ab
   1d1f4:	movt	r1, #1
   1d1f8:	str	r0, [sp, #156]	; 0x9c
   1d1fc:	mov	r0, r1
   1d200:	bl	125e8 <printf@plt>
   1d204:	movw	r1, #58387	; 0xe413
   1d208:	movt	r1, #1
   1d20c:	str	r0, [sp, #152]	; 0x98
   1d210:	mov	r0, r1
   1d214:	bl	125e8 <printf@plt>
   1d218:	movw	r1, #58419	; 0xe433
   1d21c:	movt	r1, #1
   1d220:	str	r0, [sp, #148]	; 0x94
   1d224:	mov	r0, r1
   1d228:	bl	125e8 <printf@plt>
   1d22c:	movw	r1, #58500	; 0xe484
   1d230:	movt	r1, #1
   1d234:	str	r0, [sp, #144]	; 0x90
   1d238:	mov	r0, r1
   1d23c:	bl	125e8 <printf@plt>
   1d240:	movw	r1, #58579	; 0xe4d3
   1d244:	movt	r1, #1
   1d248:	str	r0, [sp, #140]	; 0x8c
   1d24c:	mov	r0, r1
   1d250:	bl	125e8 <printf@plt>
   1d254:	movw	r1, #61913	; 0xf1d9
   1d258:	movt	r1, #1
   1d25c:	str	r0, [sp, #136]	; 0x88
   1d260:	mov	r0, r1
   1d264:	bl	125e8 <printf@plt>
   1d268:	movw	r1, #60161	; 0xeb01
   1d26c:	movt	r1, #1
   1d270:	str	r0, [sp, #132]	; 0x84
   1d274:	mov	r0, r1
   1d278:	bl	125e8 <printf@plt>
   1d27c:	movw	r1, #60234	; 0xeb4a
   1d280:	movt	r1, #1
   1d284:	str	r0, [sp, #128]	; 0x80
   1d288:	mov	r0, r1
   1d28c:	bl	125e8 <printf@plt>
   1d290:	movw	r1, #60309	; 0xeb95
   1d294:	movt	r1, #1
   1d298:	str	r0, [sp, #124]	; 0x7c
   1d29c:	mov	r0, r1
   1d2a0:	bl	125e8 <printf@plt>
   1d2a4:	movw	r1, #60384	; 0xebe0
   1d2a8:	movt	r1, #1
   1d2ac:	str	r0, [sp, #120]	; 0x78
   1d2b0:	mov	r0, r1
   1d2b4:	bl	125e8 <printf@plt>
   1d2b8:	movw	r1, #60431	; 0xec0f
   1d2bc:	movt	r1, #1
   1d2c0:	str	r0, [sp, #116]	; 0x74
   1d2c4:	mov	r0, r1
   1d2c8:	bl	125e8 <printf@plt>
   1d2cc:	movw	r1, #60455	; 0xec27
   1d2d0:	movt	r1, #1
   1d2d4:	str	r0, [sp, #112]	; 0x70
   1d2d8:	mov	r0, r1
   1d2dc:	bl	125e8 <printf@plt>
   1d2e0:	movw	r1, #60504	; 0xec58
   1d2e4:	movt	r1, #1
   1d2e8:	str	r0, [sp, #108]	; 0x6c
   1d2ec:	mov	r0, r1
   1d2f0:	bl	125e8 <printf@plt>
   1d2f4:	movw	r1, #58936	; 0xe638
   1d2f8:	movt	r1, #1
   1d2fc:	str	r0, [sp, #104]	; 0x68
   1d300:	mov	r0, r1
   1d304:	bl	125e8 <printf@plt>
   1d308:	movw	r1, #58973	; 0xe65d
   1d30c:	movt	r1, #1
   1d310:	str	r0, [sp, #100]	; 0x64
   1d314:	mov	r0, r1
   1d318:	bl	125e8 <printf@plt>
   1d31c:	movw	r1, #59715	; 0xe943
   1d320:	movt	r1, #1
   1d324:	str	r0, [sp, #96]	; 0x60
   1d328:	mov	r0, r1
   1d32c:	bl	125e8 <printf@plt>
   1d330:	movw	r1, #59746	; 0xe962
   1d334:	movt	r1, #1
   1d338:	str	r0, [sp, #92]	; 0x5c
   1d33c:	mov	r0, r1
   1d340:	bl	125e8 <printf@plt>
   1d344:	movw	r1, #59819	; 0xe9ab
   1d348:	movt	r1, #1
   1d34c:	str	r0, [sp, #88]	; 0x58
   1d350:	mov	r0, r1
   1d354:	bl	125e8 <printf@plt>
   1d358:	movw	r1, #60558	; 0xec8e
   1d35c:	movt	r1, #1
   1d360:	str	r0, [sp, #84]	; 0x54
   1d364:	mov	r0, r1
   1d368:	bl	125e8 <printf@plt>
   1d36c:	movw	r1, #60591	; 0xecaf
   1d370:	movt	r1, #1
   1d374:	str	r0, [sp, #80]	; 0x50
   1d378:	mov	r0, r1
   1d37c:	bl	125e8 <printf@plt>
   1d380:	movw	r1, #60670	; 0xecfe
   1d384:	movt	r1, #1
   1d388:	str	r0, [sp, #76]	; 0x4c
   1d38c:	mov	r0, r1
   1d390:	bl	125e8 <printf@plt>
   1d394:	movw	r1, #60746	; 0xed4a
   1d398:	movt	r1, #1
   1d39c:	str	r0, [sp, #72]	; 0x48
   1d3a0:	mov	r0, r1
   1d3a4:	bl	125e8 <printf@plt>
   1d3a8:	movw	r1, #60810	; 0xed8a
   1d3ac:	movt	r1, #1
   1d3b0:	str	r0, [sp, #68]	; 0x44
   1d3b4:	mov	r0, r1
   1d3b8:	bl	125e8 <printf@plt>
   1d3bc:	movw	r1, #60888	; 0xedd8
   1d3c0:	movt	r1, #1
   1d3c4:	str	r0, [sp, #64]	; 0x40
   1d3c8:	mov	r0, r1
   1d3cc:	bl	125e8 <printf@plt>
   1d3d0:	movw	r1, #61913	; 0xf1d9
   1d3d4:	movt	r1, #1
   1d3d8:	str	r0, [sp, #60]	; 0x3c
   1d3dc:	mov	r0, r1
   1d3e0:	bl	125e8 <printf@plt>
   1d3e4:	movw	r1, #60942	; 0xee0e
   1d3e8:	movt	r1, #1
   1d3ec:	str	r0, [sp, #56]	; 0x38
   1d3f0:	mov	r0, r1
   1d3f4:	bl	125e8 <printf@plt>
   1d3f8:	movw	r1, #60967	; 0xee27
   1d3fc:	movt	r1, #1
   1d400:	str	r0, [sp, #52]	; 0x34
   1d404:	mov	r0, r1
   1d408:	bl	125e8 <printf@plt>
   1d40c:	movw	r1, #61913	; 0xf1d9
   1d410:	movt	r1, #1
   1d414:	str	r0, [sp, #48]	; 0x30
   1d418:	mov	r0, r1
   1d41c:	bl	125e8 <printf@plt>
   1d420:	movw	r1, #60998	; 0xee46
   1d424:	movt	r1, #1
   1d428:	str	r0, [sp, #44]	; 0x2c
   1d42c:	mov	r0, r1
   1d430:	bl	125e8 <printf@plt>
   1d434:	movw	r1, #61026	; 0xee62
   1d438:	movt	r1, #1
   1d43c:	str	r0, [sp, #40]	; 0x28
   1d440:	mov	r0, r1
   1d444:	bl	125e8 <printf@plt>
   1d448:	movw	r1, #61913	; 0xf1d9
   1d44c:	movt	r1, #1
   1d450:	str	r0, [sp, #36]	; 0x24
   1d454:	mov	r0, r1
   1d458:	bl	125e8 <printf@plt>
   1d45c:	movw	r1, #61077	; 0xee95
   1d460:	movt	r1, #1
   1d464:	str	r0, [sp, #32]
   1d468:	mov	r0, r1
   1d46c:	bl	125e8 <printf@plt>
   1d470:	movw	r1, #61156	; 0xeee4
   1d474:	movt	r1, #1
   1d478:	str	r0, [sp, #28]
   1d47c:	mov	r0, r1
   1d480:	bl	125e8 <printf@plt>
   1d484:	movw	r1, #61230	; 0xef2e
   1d488:	movt	r1, #1
   1d48c:	str	r0, [sp, #24]
   1d490:	mov	r0, r1
   1d494:	bl	125e8 <printf@plt>
   1d498:	movw	r1, #61274	; 0xef5a
   1d49c:	movt	r1, #1
   1d4a0:	str	r0, [sp, #20]
   1d4a4:	mov	r0, r1
   1d4a8:	bl	125e8 <printf@plt>
   1d4ac:	movw	r1, #61351	; 0xefa7
   1d4b0:	movt	r1, #1
   1d4b4:	str	r0, [sp, #16]
   1d4b8:	mov	r0, r1
   1d4bc:	bl	125e8 <printf@plt>
   1d4c0:	movw	r1, #61422	; 0xefee
   1d4c4:	movt	r1, #1
   1d4c8:	str	r0, [sp, #12]
   1d4cc:	mov	r0, r1
   1d4d0:	bl	125e8 <printf@plt>
   1d4d4:	movw	r1, #61486	; 0xf02e
   1d4d8:	movt	r1, #1
   1d4dc:	str	r0, [sp, #8]
   1d4e0:	mov	r0, r1
   1d4e4:	bl	125e8 <printf@plt>
   1d4e8:	movw	r1, #61913	; 0xf1d9
   1d4ec:	movt	r1, #1
   1d4f0:	str	r0, [sp, #4]
   1d4f4:	mov	r0, r1
   1d4f8:	bl	125e8 <printf@plt>
   1d4fc:	mov	sp, fp
   1d500:	pop	{fp, pc}
   1d504:	push	{fp, lr}
   1d508:	mov	fp, sp
   1d50c:	sub	sp, sp, #16
   1d510:	bl	1299c <coda_get_libcoda_version@plt>
   1d514:	movw	r1, #61551	; 0xf06f
   1d518:	movt	r1, #1
   1d51c:	str	r0, [fp, #-4]
   1d520:	mov	r0, r1
   1d524:	ldr	r1, [fp, #-4]
   1d528:	bl	125e8 <printf@plt>
   1d52c:	movw	r1, #61572	; 0xf084
   1d530:	movt	r1, #1
   1d534:	str	r0, [sp, #8]
   1d538:	mov	r0, r1
   1d53c:	bl	125e8 <printf@plt>
   1d540:	movw	r1, #61913	; 0xf1d9
   1d544:	movt	r1, #1
   1d548:	str	r0, [sp, #4]
   1d54c:	mov	r0, r1
   1d550:	bl	125e8 <printf@plt>
   1d554:	mov	sp, fp
   1d558:	pop	{fp, pc}
   1d55c:	cmp	r3, #0
   1d560:	cmpeq	r2, #0
   1d564:	bne	1d588 <main@@Base+0x29f8>
   1d568:	cmp	r1, #0
   1d56c:	movlt	r1, #-2147483648	; 0x80000000
   1d570:	movlt	r0, #0
   1d574:	blt	1d584 <main@@Base+0x29f4>
   1d578:	cmpeq	r0, #0
   1d57c:	mvnne	r1, #-2147483648	; 0x80000000
   1d580:	mvnne	r0, #0
   1d584:	b	1d630 <main@@Base+0x2aa0>
   1d588:	sub	sp, sp, #8
   1d58c:	push	{sp, lr}
   1d590:	cmp	r1, #0
   1d594:	blt	1d5b4 <main@@Base+0x2a24>
   1d598:	cmp	r3, #0
   1d59c:	blt	1d5e8 <main@@Base+0x2a58>
   1d5a0:	bl	1d640 <main@@Base+0x2ab0>
   1d5a4:	ldr	lr, [sp, #4]
   1d5a8:	add	sp, sp, #8
   1d5ac:	pop	{r2, r3}
   1d5b0:	bx	lr
   1d5b4:	rsbs	r0, r0, #0
   1d5b8:	sbc	r1, r1, r1, lsl #1
   1d5bc:	cmp	r3, #0
   1d5c0:	blt	1d60c <main@@Base+0x2a7c>
   1d5c4:	bl	1d640 <main@@Base+0x2ab0>
   1d5c8:	ldr	lr, [sp, #4]
   1d5cc:	add	sp, sp, #8
   1d5d0:	pop	{r2, r3}
   1d5d4:	rsbs	r0, r0, #0
   1d5d8:	sbc	r1, r1, r1, lsl #1
   1d5dc:	rsbs	r2, r2, #0
   1d5e0:	sbc	r3, r3, r3, lsl #1
   1d5e4:	bx	lr
   1d5e8:	rsbs	r2, r2, #0
   1d5ec:	sbc	r3, r3, r3, lsl #1
   1d5f0:	bl	1d640 <main@@Base+0x2ab0>
   1d5f4:	ldr	lr, [sp, #4]
   1d5f8:	add	sp, sp, #8
   1d5fc:	pop	{r2, r3}
   1d600:	rsbs	r0, r0, #0
   1d604:	sbc	r1, r1, r1, lsl #1
   1d608:	bx	lr
   1d60c:	rsbs	r2, r2, #0
   1d610:	sbc	r3, r3, r3, lsl #1
   1d614:	bl	1d640 <main@@Base+0x2ab0>
   1d618:	ldr	lr, [sp, #4]
   1d61c:	add	sp, sp, #8
   1d620:	pop	{r2, r3}
   1d624:	rsbs	r2, r2, #0
   1d628:	sbc	r3, r3, r3, lsl #1
   1d62c:	bx	lr
   1d630:	push	{r1, lr}
   1d634:	mov	r0, #8
   1d638:	bl	125ac <raise@plt>
   1d63c:	pop	{r1, pc}
   1d640:	cmp	r1, r3
   1d644:	cmpeq	r0, r2
   1d648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d64c:	mov	r4, r0
   1d650:	movcc	r0, #0
   1d654:	mov	r5, r1
   1d658:	ldr	lr, [sp, #36]	; 0x24
   1d65c:	movcc	r1, r0
   1d660:	bcc	1d75c <main@@Base+0x2bcc>
   1d664:	cmp	r3, #0
   1d668:	clzeq	ip, r2
   1d66c:	clzne	ip, r3
   1d670:	addeq	ip, ip, #32
   1d674:	cmp	r5, #0
   1d678:	clzeq	r1, r4
   1d67c:	addeq	r1, r1, #32
   1d680:	clzne	r1, r5
   1d684:	sub	ip, ip, r1
   1d688:	sub	sl, ip, #32
   1d68c:	lsl	r9, r3, ip
   1d690:	rsb	fp, ip, #32
   1d694:	orr	r9, r9, r2, lsl sl
   1d698:	orr	r9, r9, r2, lsr fp
   1d69c:	lsl	r8, r2, ip
   1d6a0:	cmp	r5, r9
   1d6a4:	cmpeq	r4, r8
   1d6a8:	movcc	r0, #0
   1d6ac:	movcc	r1, r0
   1d6b0:	bcc	1d6cc <main@@Base+0x2b3c>
   1d6b4:	mov	r0, #1
   1d6b8:	subs	r4, r4, r8
   1d6bc:	lsl	r1, r0, sl
   1d6c0:	orr	r1, r1, r0, lsr fp
   1d6c4:	lsl	r0, r0, ip
   1d6c8:	sbc	r5, r5, r9
   1d6cc:	cmp	ip, #0
   1d6d0:	beq	1d75c <main@@Base+0x2bcc>
   1d6d4:	lsr	r6, r8, #1
   1d6d8:	orr	r6, r6, r9, lsl #31
   1d6dc:	lsr	r7, r9, #1
   1d6e0:	mov	r2, ip
   1d6e4:	b	1d708 <main@@Base+0x2b78>
   1d6e8:	subs	r3, r4, r6
   1d6ec:	sbc	r8, r5, r7
   1d6f0:	adds	r3, r3, r3
   1d6f4:	adc	r8, r8, r8
   1d6f8:	adds	r4, r3, #1
   1d6fc:	adc	r5, r8, #0
   1d700:	subs	r2, r2, #1
   1d704:	beq	1d724 <main@@Base+0x2b94>
   1d708:	cmp	r5, r7
   1d70c:	cmpeq	r4, r6
   1d710:	bcs	1d6e8 <main@@Base+0x2b58>
   1d714:	adds	r4, r4, r4
   1d718:	adc	r5, r5, r5
   1d71c:	subs	r2, r2, #1
   1d720:	bne	1d708 <main@@Base+0x2b78>
   1d724:	lsr	r3, r4, ip
   1d728:	orr	r3, r3, r5, lsl fp
   1d72c:	lsr	r2, r5, ip
   1d730:	orr	r3, r3, r5, lsr sl
   1d734:	adds	r0, r0, r4
   1d738:	mov	r4, r3
   1d73c:	lsl	r3, r2, ip
   1d740:	orr	r3, r3, r4, lsl sl
   1d744:	lsl	ip, r4, ip
   1d748:	orr	r3, r3, r4, lsr fp
   1d74c:	adc	r1, r1, r5
   1d750:	subs	r0, r0, ip
   1d754:	mov	r5, r2
   1d758:	sbc	r1, r1, r3
   1d75c:	cmp	lr, #0
   1d760:	strdne	r4, [lr]
   1d764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d768 <__libc_csu_init@@Base>:
   1d768:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d76c:	mov	r7, r0
   1d770:	ldr	r6, [pc, #72]	; 1d7c0 <__libc_csu_init@@Base+0x58>
   1d774:	ldr	r5, [pc, #72]	; 1d7c4 <__libc_csu_init@@Base+0x5c>
   1d778:	add	r6, pc, r6
   1d77c:	add	r5, pc, r5
   1d780:	sub	r6, r6, r5
   1d784:	mov	r8, r1
   1d788:	mov	r9, r2
   1d78c:	bl	12568 <coda_cursor_get_byte_size@plt-0x20>
   1d790:	asrs	r6, r6, #2
   1d794:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d798:	mov	r4, #0
   1d79c:	add	r4, r4, #1
   1d7a0:	ldr	r3, [r5], #4
   1d7a4:	mov	r2, r9
   1d7a8:	mov	r1, r8
   1d7ac:	mov	r0, r7
   1d7b0:	blx	r3
   1d7b4:	cmp	r6, r4
   1d7b8:	bne	1d79c <__libc_csu_init@@Base+0x34>
   1d7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7c0:	andeq	r2, r1, r4, ror r7
   1d7c4:	andeq	r2, r1, ip, ror #14

0001d7c8 <__libc_csu_fini@@Base>:
   1d7c8:	bx	lr

Disassembly of section .fini:

0001d7cc <.fini>:
   1d7cc:	push	{r3, lr}
   1d7d0:	pop	{r3, pc}
