
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-bin.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_bin_product_open>:
   0:	ldr	r3, [pc, #296]	; 130 <coda_bin_product_open+0x130>
   4:	push	{r4, r5, r6, r7, r8, lr}
   8:	mov	r5, #0
   c:	mvn	r6, #0
  10:	str	r5, [r0, #52]	; 0x34
  14:	str	r6, [r0, #56]	; 0x38
  18:	ldr	r3, [pc, r3]
  1c:	mov	r4, r0
  20:	bl	0 <__aeabi_read_tp>
  24:	ldr	r3, [r0, r3]
  28:	sub	sp, sp, #8
  2c:	cmp	r3, r5
  30:	beq	a8 <coda_bin_product_open+0xa8>
  34:	ldrd	r2, [r4, #8]
  38:	cmp	r2, #1
  3c:	sbcs	r3, r3, #0
  40:	blt	a8 <coda_bin_product_open+0xa8>
  44:	mov	r7, #1
  48:	str	r7, [r4, #52]	; 0x34
  4c:	mov	r1, r5
  50:	ldr	r0, [r4]
  54:	bl	0 <open>
  58:	subs	r8, r0, #0
  5c:	blt	cc <coda_bin_product_open+0xcc>
  60:	ldr	r1, [r4, #8]
  64:	mov	r3, r7
  68:	str	r5, [sp, #4]
  6c:	str	r8, [sp]
  70:	mov	r2, r7
  74:	mov	r0, r5
  78:	bl	0 <mmap>
  7c:	cmn	r0, #1
  80:	mov	r6, r0
  84:	str	r0, [r4, #48]	; 0x30
  88:	beq	f8 <coda_bin_product_open+0xf8>
  8c:	mov	r0, r8
  90:	bl	0 <close>
  94:	ldrd	r2, [r4, #8]
  98:	mov	r0, r5
  9c:	strd	r2, [r4, #40]	; 0x28
  a0:	add	sp, sp, #8
  a4:	pop	{r4, r5, r6, r7, r8, pc}
  a8:	mov	r1, #0
  ac:	ldr	r0, [r4]
  b0:	bl	0 <open>
  b4:	cmp	r0, #0
  b8:	str	r0, [r4, #56]	; 0x38
  bc:	movge	r0, #0
  c0:	blt	cc <coda_bin_product_open+0xcc>
  c4:	add	sp, sp, #8
  c8:	pop	{r4, r5, r6, r7, r8, pc}
  cc:	bl	0 <__errno_location>
  d0:	ldr	r4, [r4]
  d4:	ldr	r0, [r0]
  d8:	bl	0 <strerror>
  dc:	mov	r2, r4
  e0:	ldr	r1, [pc, #76]	; 134 <coda_bin_product_open+0x134>
  e4:	mov	r3, r0
  e8:	mvn	r0, #20
  ec:	bl	0 <coda_set_error>
  f0:	mvn	r0, #0
  f4:	b	c4 <coda_bin_product_open+0xc4>
  f8:	bl	0 <__errno_location>
  fc:	ldr	r7, [r4]
 100:	ldr	r0, [r0]
 104:	bl	0 <strerror>
 108:	mov	r2, r7
 10c:	ldr	r1, [pc, #36]	; 138 <coda_bin_product_open+0x138>
 110:	mov	r3, r0
 114:	mvn	r0, #20
 118:	bl	0 <coda_set_error>
 11c:	str	r5, [r4, #48]	; 0x30
 120:	mov	r0, r8
 124:	bl	0 <close>
 128:	mov	r0, r6
 12c:	b	c4 <coda_bin_product_open+0xc4>
 130:	.word	0x00000110
 134:	.word	0x00000000
 138:	.word	0x0000001c

0000013c <coda_bin_product_close>:
 13c:	ldr	r3, [r0, #52]	; 0x34
 140:	push	{r4, lr}
 144:	cmp	r3, #0
 148:	mov	r4, r0
 14c:	beq	17c <coda_bin_product_close+0x40>
 150:	ldr	r0, [r0, #48]	; 0x30
 154:	cmp	r0, #0
 158:	beq	16c <coda_bin_product_close+0x30>
 15c:	ldr	r1, [r4, #8]
 160:	bl	0 <munmap>
 164:	mov	r3, #0
 168:	str	r3, [r4, #48]	; 0x30
 16c:	mov	r3, #0
 170:	str	r3, [r4, #52]	; 0x34
 174:	mov	r0, #0
 178:	pop	{r4, pc}
 17c:	ldr	r0, [r0, #56]	; 0x38
 180:	cmp	r0, #0
 184:	blt	174 <coda_bin_product_close+0x38>
 188:	bl	0 <close>
 18c:	mvn	r3, #0
 190:	str	r3, [r4, #56]	; 0x38
 194:	mov	r0, #0
 198:	pop	{r4, pc}

0000019c <coda_bin_reopen_with_definition>:
 19c:	cmp	r1, #0
 1a0:	push	{r4, lr}
 1a4:	ldr	r3, [r0]
 1a8:	beq	1d8 <coda_bin_reopen_with_definition+0x3c>
 1ac:	ldr	r2, [r3, #16]
 1b0:	cmp	r2, #1
 1b4:	bne	200 <coda_bin_reopen_with_definition+0x64>
 1b8:	ldr	r2, [r1]
 1bc:	cmp	r2, #1
 1c0:	bne	1ec <coda_bin_reopen_with_definition+0x50>
 1c4:	ldr	r2, [r1, #28]
 1c8:	mov	r0, #0
 1cc:	str	r2, [r3, #20]
 1d0:	str	r1, [r3, #24]
 1d4:	pop	{r4, pc}
 1d8:	ldr	r3, [pc, #52]	; 214 <coda_bin_reopen_with_definition+0x78>
 1dc:	mov	r2, #288	; 0x120
 1e0:	ldr	r1, [pc, #48]	; 218 <coda_bin_reopen_with_definition+0x7c>
 1e4:	ldr	r0, [pc, #48]	; 21c <coda_bin_reopen_with_definition+0x80>
 1e8:	bl	0 <__assert_fail>
 1ec:	ldr	r3, [pc, #32]	; 214 <coda_bin_reopen_with_definition+0x78>
 1f0:	ldr	r2, [pc, #40]	; 220 <coda_bin_reopen_with_definition+0x84>
 1f4:	ldr	r1, [pc, #28]	; 218 <coda_bin_reopen_with_definition+0x7c>
 1f8:	ldr	r0, [pc, #36]	; 224 <coda_bin_reopen_with_definition+0x88>
 1fc:	bl	0 <__assert_fail>
 200:	ldr	r3, [pc, #12]	; 214 <coda_bin_reopen_with_definition+0x78>
 204:	ldr	r2, [pc, #28]	; 228 <coda_bin_reopen_with_definition+0x8c>
 208:	ldr	r1, [pc, #8]	; 218 <coda_bin_reopen_with_definition+0x7c>
 20c:	ldr	r0, [pc, #24]	; 22c <coda_bin_reopen_with_definition+0x90>
 210:	bl	0 <__assert_fail>
 214:	.word	0x00000000
 218:	.word	0x00000044
 21c:	.word	0x0000008c
 220:	.word	0x00000122
 224:	.word	0x000000cc
 228:	.word	0x00000121
 22c:	.word	0x000000a0

00000230 <coda_bin_close>:
 230:	push	{r4, r5, r6, lr}
 234:	mov	r4, r0
 238:	bl	13c <coda_bin_product_close>
 23c:	subs	r5, r0, #0
 240:	bne	264 <coda_bin_close+0x34>
 244:	ldr	r0, [r4]
 248:	cmp	r0, #0
 24c:	beq	254 <coda_bin_close+0x24>
 250:	bl	0 <free>
 254:	mov	r0, r4
 258:	bl	0 <free>
 25c:	mov	r0, r5
 260:	pop	{r4, r5, r6, pc}
 264:	mvn	r5, #0
 268:	b	25c <coda_bin_close+0x2c>

0000026c <coda_bin_open>:
 26c:	push	{r4, r5, r6, r7, r8, lr}
 270:	mov	r8, r0
 274:	sub	sp, sp, #8
 278:	mov	r0, #64	; 0x40
 27c:	mov	r6, r2
 280:	mov	r7, r3
 284:	bl	0 <malloc>
 288:	subs	r4, r0, #0
 28c:	beq	338 <coda_bin_open+0xcc>
 290:	mov	r0, #0
 294:	mov	r1, #0
 298:	mov	r3, #0
 29c:	mov	r2, #1
 2a0:	mvn	r5, #0
 2a4:	strd	r6, [r4, #8]
 2a8:	strd	r0, [r4, #40]	; 0x28
 2ac:	str	r3, [r4]
 2b0:	str	r3, [r4, #20]
 2b4:	str	r3, [r4, #24]
 2b8:	str	r3, [r4, #28]
 2bc:	str	r3, [r4, #32]
 2c0:	str	r3, [r4, #48]	; 0x30
 2c4:	str	r3, [r4, #52]	; 0x34
 2c8:	str	r2, [r4, #16]
 2cc:	str	r5, [r4, #56]	; 0x38
 2d0:	bl	0 <coda_type_raw_file_singleton>
 2d4:	cmp	r0, #0
 2d8:	str	r0, [r4, #20]
 2dc:	beq	328 <coda_bin_open+0xbc>
 2e0:	mov	r0, r8
 2e4:	bl	0 <strdup>
 2e8:	cmp	r0, #0
 2ec:	str	r0, [r4]
 2f0:	beq	314 <coda_bin_open+0xa8>
 2f4:	mov	r0, r4
 2f8:	bl	0 <coda_bin_product_open>
 2fc:	cmp	r0, #0
 300:	bne	328 <coda_bin_open+0xbc>
 304:	ldr	r3, [sp, #32]
 308:	str	r4, [r3]
 30c:	add	sp, sp, #8
 310:	pop	{r4, r5, r6, r7, r8, pc}
 314:	mov	r3, #268	; 0x10c
 318:	ldr	r2, [pc, #60]	; 35c <coda_bin_open+0xf0>
 31c:	ldr	r1, [pc, #60]	; 360 <coda_bin_open+0xf4>
 320:	mov	r0, r5
 324:	bl	0 <coda_set_error>
 328:	mov	r0, r4
 32c:	bl	230 <coda_bin_close>
 330:	mov	r0, r5
 334:	b	30c <coda_bin_open+0xa0>
 338:	mov	r3, #241	; 0xf1
 33c:	str	r3, [sp]
 340:	mvn	r0, #0
 344:	ldr	r3, [pc, #16]	; 35c <coda_bin_open+0xf0>
 348:	mov	r2, #64	; 0x40
 34c:	ldr	r1, [pc, #16]	; 364 <coda_bin_open+0xf8>
 350:	bl	0 <coda_set_error>
 354:	mvn	r0, #0
 358:	b	30c <coda_bin_open+0xa0>
 35c:	.word	0x00000044
 360:	.word	0x00000130
 364:	.word	0x000000f8
