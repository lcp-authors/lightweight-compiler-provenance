
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <init_product_variable>:
       0:	push	{r4, r5, r6, r7, lr}
       4:	mov	r2, #1
       8:	sub	sp, sp, #540	; 0x21c
       c:	mov	r3, #0
      10:	mov	r4, r0
      14:	mov	r5, r1
      18:	mov	r1, r0
      1c:	add	r0, sp, #16
      20:	strd	r2, [sp, #8]
      24:	bl	0 <coda_cursor_set_product>
      28:	cmp	r0, #0
      2c:	bne	b8 <init_product_variable+0xb8>
      30:	ldr	r3, [r4, #24]
      34:	ldr	r3, [r3, #36]	; 0x24
      38:	ldr	r3, [r3, r5, lsl #2]
      3c:	ldr	r0, [r3, #4]
      40:	cmp	r0, #0
      44:	beq	5c <init_product_variable+0x5c>
      48:	add	r2, sp, #8
      4c:	add	r1, sp, #16
      50:	bl	0 <coda_expression_eval_integer>
      54:	cmp	r0, #0
      58:	bne	e0 <init_product_variable+0xe0>
      5c:	ldr	r3, [sp, #8]
      60:	ldr	r2, [r4, #28]
      64:	ldr	r7, [r4, #32]
      68:	lsl	r6, r3, #3
      6c:	str	r3, [r2, r5, lsl #2]
      70:	mov	r0, r6
      74:	bl	0 <malloc>
      78:	cmp	r0, #0
      7c:	str	r0, [r7, r5, lsl #2]
      80:	beq	ec <init_product_variable+0xec>
      84:	mov	r2, r6
      88:	mov	r1, #0
      8c:	bl	0 <memset>
      90:	ldr	r3, [r4, #24]
      94:	add	r1, sp, #16
      98:	ldr	r3, [r3, #36]	; 0x24
      9c:	ldr	r3, [r3, r5, lsl #2]
      a0:	ldr	r0, [r3, #8]
      a4:	bl	0 <coda_expression_eval_void>
      a8:	cmp	r0, #0
      ac:	bne	c0 <init_product_variable+0xc0>
      b0:	add	sp, sp, #540	; 0x21c
      b4:	pop	{r4, r5, r6, r7, pc}
      b8:	mvn	r0, #0
      bc:	b	b0 <init_product_variable+0xb0>
      c0:	ldr	r3, [r4, #24]
      c4:	ldr	r0, [pc, #68]	; 110 <init_product_variable+0x110>
      c8:	ldr	r3, [r3, #36]	; 0x24
      cc:	ldr	r3, [r3, r5, lsl #2]
      d0:	ldr	r1, [r3]
      d4:	bl	0 <coda_add_error_message>
      d8:	mvn	r0, #0
      dc:	b	b0 <init_product_variable+0xb0>
      e0:	ldr	r3, [r4, #24]
      e4:	ldr	r0, [pc, #40]	; 114 <init_product_variable+0x114>
      e8:	b	c8 <init_product_variable+0xc8>
      ec:	mov	r3, #162	; 0xa2
      f0:	str	r3, [sp]
      f4:	mvn	r0, #0
      f8:	mov	r2, r6
      fc:	ldr	r3, [pc, #20]	; 118 <init_product_variable+0x118>
     100:	ldr	r1, [pc, #20]	; 11c <init_product_variable+0x11c>
     104:	bl	0 <coda_set_error>
     108:	mvn	r0, #0
     10c:	b	b0 <init_product_variable+0xb0>
     110:	.word	0x000000bc
     114:	.word	0x00000000
     118:	.word	0x00000034
     11c:	.word	0x00000084

00000120 <data_dictionary_rebuild_product_class_hash_data>:
     120:	push	{r4, r5, r6, lr}
     124:	bl	0 <__aeabi_read_tp>
     128:	ldr	r5, [pc, #172]	; 1dc <data_dictionary_rebuild_product_class_hash_data+0xbc>
     12c:	mov	r4, r0
     130:	ldr	r3, [r5, r0]
     134:	ldr	r0, [r3, #8]
     138:	bl	0 <coda_hashtable_delete>
     13c:	mov	r0, #1
     140:	ldr	r6, [r5, r4]
     144:	bl	0 <coda_hashtable_new>
     148:	ldr	r3, [r5, r4]
     14c:	str	r0, [r6, #8]
     150:	ldr	r0, [r3, #8]
     154:	cmp	r0, #0
     158:	beq	1c0 <data_dictionary_rebuild_product_class_hash_data+0xa0>
     15c:	ldr	r2, [r3]
     160:	cmp	r2, #0
     164:	ble	1a4 <data_dictionary_rebuild_product_class_hash_data+0x84>
     168:	mov	r4, #0
     16c:	b	174 <data_dictionary_rebuild_product_class_hash_data+0x54>
     170:	ldr	r0, [r3, #8]
     174:	ldr	r3, [r3, #4]
     178:	ldr	r3, [r3, r4, lsl #2]
     17c:	ldr	r1, [r3]
     180:	bl	0 <coda_hashtable_add_name>
     184:	cmp	r0, #0
     188:	bne	1ac <data_dictionary_rebuild_product_class_hash_data+0x8c>
     18c:	bl	0 <__aeabi_read_tp>
     190:	ldr	r3, [r5, r0]
     194:	add	r4, r4, #1
     198:	ldr	r2, [r3]
     19c:	cmp	r2, r4
     1a0:	bgt	170 <data_dictionary_rebuild_product_class_hash_data+0x50>
     1a4:	mov	r0, #0
     1a8:	pop	{r4, r5, r6, pc}
     1ac:	ldr	r3, [pc, #44]	; 1e0 <data_dictionary_rebuild_product_class_hash_data+0xc0>
     1b0:	mov	r2, #960	; 0x3c0
     1b4:	ldr	r1, [pc, #40]	; 1e4 <data_dictionary_rebuild_product_class_hash_data+0xc4>
     1b8:	ldr	r0, [pc, #40]	; 1e8 <data_dictionary_rebuild_product_class_hash_data+0xc8>
     1bc:	bl	0 <__assert_fail>
     1c0:	mov	r3, #952	; 0x3b8
     1c4:	ldr	r2, [pc, #24]	; 1e4 <data_dictionary_rebuild_product_class_hash_data+0xc4>
     1c8:	ldr	r1, [pc, #28]	; 1ec <data_dictionary_rebuild_product_class_hash_data+0xcc>
     1cc:	mvn	r0, #0
     1d0:	bl	0 <coda_set_error>
     1d4:	mvn	r0, #0
     1d8:	pop	{r4, r5, r6, pc}
	...
     1e4:	.word	0x00000034
     1e8:	.word	0x00000118
     1ec:	.word	0x000000e4

000001f0 <coda_product_variable_delete>:
     1f0:	push	{r4, lr}
     1f4:	subs	r4, r0, #0
     1f8:	beq	238 <coda_product_variable_delete+0x48>
     1fc:	ldr	r0, [r4]
     200:	cmp	r0, #0
     204:	beq	20c <coda_product_variable_delete+0x1c>
     208:	bl	0 <free>
     20c:	ldr	r0, [r4, #4]
     210:	cmp	r0, #0
     214:	beq	21c <coda_product_variable_delete+0x2c>
     218:	bl	0 <coda_expression_delete>
     21c:	ldr	r0, [r4, #8]
     220:	cmp	r0, #0
     224:	beq	22c <coda_product_variable_delete+0x3c>
     228:	bl	0 <coda_expression_delete>
     22c:	mov	r0, r4
     230:	pop	{r4, lr}
     234:	b	0 <free>
     238:	ldr	r3, [pc, #12]	; 24c <coda_product_variable_delete+0x5c>
     23c:	mov	r2, #49	; 0x31
     240:	ldr	r1, [pc, #8]	; 250 <coda_product_variable_delete+0x60>
     244:	ldr	r0, [pc, #8]	; 254 <coda_product_variable_delete+0x64>
     248:	bl	0 <__assert_fail>
     24c:	.word	0x00000030
     250:	.word	0x00000034
     254:	.word	0x0000011c

00000258 <coda_product_variable_new>:
     258:	push	{r4, r5, lr}
     25c:	sub	sp, sp, #12
     260:	mov	r5, r0
     264:	bl	0 <coda_is_identifier>
     268:	subs	r4, r0, #0
     26c:	beq	2b0 <coda_product_variable_new+0x58>
     270:	mov	r0, #12
     274:	bl	0 <malloc>
     278:	subs	r4, r0, #0
     27c:	beq	2cc <coda_product_variable_new+0x74>
     280:	mov	r3, #0
     284:	mov	r0, r5
     288:	str	r3, [r4, #4]
     28c:	str	r3, [r4, #8]
     290:	bl	0 <strdup>
     294:	cmp	r0, #0
     298:	mov	r5, r0
     29c:	str	r0, [r4]
     2a0:	beq	2ec <coda_product_variable_new+0x94>
     2a4:	mov	r0, r4
     2a8:	add	sp, sp, #12
     2ac:	pop	{r4, r5, pc}
     2b0:	mov	r2, r5
     2b4:	ldr	r1, [pc, #84]	; 310 <coda_product_variable_new+0xb8>
     2b8:	sub	r0, r0, #400	; 0x190
     2bc:	bl	0 <coda_set_error>
     2c0:	mov	r0, r4
     2c4:	add	sp, sp, #12
     2c8:	pop	{r4, r5, pc}
     2cc:	mov	r3, #82	; 0x52
     2d0:	str	r3, [sp]
     2d4:	mov	r2, #12
     2d8:	ldr	r3, [pc, #52]	; 314 <coda_product_variable_new+0xbc>
     2dc:	ldr	r1, [pc, #52]	; 318 <coda_product_variable_new+0xc0>
     2e0:	mvn	r0, #0
     2e4:	bl	0 <coda_set_error>
     2e8:	b	2a4 <coda_product_variable_new+0x4c>
     2ec:	mov	r3, #93	; 0x5d
     2f0:	ldr	r2, [pc, #28]	; 314 <coda_product_variable_new+0xbc>
     2f4:	ldr	r1, [pc, #32]	; 31c <coda_product_variable_new+0xc4>
     2f8:	mvn	r0, #0
     2fc:	bl	0 <coda_set_error>
     300:	mov	r0, r4
     304:	bl	1f0 <coda_product_variable_delete>
     308:	mov	r4, r5
     30c:	b	2a4 <coda_product_variable_new+0x4c>
     310:	.word	0x00000138
     314:	.word	0x00000034
     318:	.word	0x00000084
     31c:	.word	0x0000017c

00000320 <coda_product_variable_set_size_expression>:
     320:	cmp	r1, #0
     324:	push	{r4, lr}
     328:	beq	358 <coda_product_variable_set_size_expression+0x38>
     32c:	ldr	r3, [r0, #4]
     330:	cmp	r3, #0
     334:	streq	r1, [r0, #4]
     338:	bne	344 <coda_product_variable_set_size_expression+0x24>
     33c:	mov	r0, r3
     340:	pop	{r4, pc}
     344:	ldr	r1, [pc, #32]	; 36c <coda_product_variable_set_size_expression+0x4c>
     348:	ldr	r0, [pc, #32]	; 370 <coda_product_variable_set_size_expression+0x50>
     34c:	bl	0 <coda_set_error>
     350:	mvn	r3, #0
     354:	b	33c <coda_product_variable_set_size_expression+0x1c>
     358:	ldr	r3, [pc, #20]	; 374 <coda_product_variable_set_size_expression+0x54>
     35c:	mov	r2, #103	; 0x67
     360:	ldr	r1, [pc, #16]	; 378 <coda_product_variable_set_size_expression+0x58>
     364:	ldr	r0, [pc, #16]	; 37c <coda_product_variable_set_size_expression+0x5c>
     368:	bl	0 <__assert_fail>
     36c:	.word	0x000001c4
     370:	.word	0xfffffe70
     374:	.word	0x00000050
     378:	.word	0x00000034
     37c:	.word	0x000001b0

00000380 <coda_product_variable_set_init_expression>:
     380:	cmp	r1, #0
     384:	push	{r4, lr}
     388:	beq	3b8 <coda_product_variable_set_init_expression+0x38>
     38c:	ldr	r3, [r0, #8]
     390:	cmp	r3, #0
     394:	streq	r1, [r0, #8]
     398:	bne	3a4 <coda_product_variable_set_init_expression+0x24>
     39c:	mov	r0, r3
     3a0:	pop	{r4, pc}
     3a4:	ldr	r1, [pc, #32]	; 3cc <coda_product_variable_set_init_expression+0x4c>
     3a8:	ldr	r0, [pc, #32]	; 3d0 <coda_product_variable_set_init_expression+0x50>
     3ac:	bl	0 <coda_set_error>
     3b0:	mvn	r3, #0
     3b4:	b	39c <coda_product_variable_set_init_expression+0x1c>
     3b8:	ldr	r3, [pc, #20]	; 3d4 <coda_product_variable_set_init_expression+0x54>
     3bc:	mov	r2, #115	; 0x73
     3c0:	ldr	r1, [pc, #16]	; 3d8 <coda_product_variable_set_init_expression+0x58>
     3c4:	ldr	r0, [pc, #16]	; 3dc <coda_product_variable_set_init_expression+0x5c>
     3c8:	bl	0 <__assert_fail>
     3cc:	.word	0x00000208
     3d0:	.word	0xfffffe70
     3d4:	.word	0x0000007c
     3d8:	.word	0x00000034
     3dc:	.word	0x000001f4

000003e0 <coda_product_variable_validate>:
     3e0:	ldr	r3, [r0, #8]
     3e4:	cmp	r3, #0
     3e8:	beq	3f4 <coda_product_variable_validate+0x14>
     3ec:	mov	r0, #0
     3f0:	bx	lr
     3f4:	push	{r4, lr}
     3f8:	ldr	r1, [pc, #12]	; 40c <coda_product_variable_validate+0x2c>
     3fc:	ldr	r0, [pc, #12]	; 410 <coda_product_variable_validate+0x30>
     400:	bl	0 <coda_set_error>
     404:	mvn	r0, #0
     408:	pop	{r4, pc}
     40c:	.word	0x00000238
     410:	.word	0xfffffe70

00000414 <coda_product_variable_get_size>:
     414:	cmp	r1, #0
     418:	cmpne	r2, #0
     41c:	movne	r3, #1
     420:	moveq	r3, #0
     424:	cmp	r0, #0
     428:	moveq	r3, #0
     42c:	andne	r3, r3, #1
     430:	cmp	r3, #0
     434:	push	{r4, r5, r6, r7, lr}
     438:	sub	sp, sp, #12
     43c:	beq	4dc <coda_product_variable_get_size+0xc8>
     440:	ldr	r3, [r0, #32]
     444:	mov	r4, r0
     448:	cmp	r3, #0
     44c:	beq	4f0 <coda_product_variable_get_size+0xdc>
     450:	ldr	r3, [r0, #24]
     454:	mov	r6, r2
     458:	mov	r7, r1
     45c:	ldr	r0, [r3, #40]	; 0x28
     460:	bl	0 <coda_hashtable_get_index_from_name>
     464:	cmn	r0, #1
     468:	mov	r5, r0
     46c:	beq	4b4 <coda_product_variable_get_size+0xa0>
     470:	ldr	r3, [r4, #32]
     474:	ldr	r3, [r3, r0, lsl #2]
     478:	cmp	r3, #0
     47c:	beq	498 <coda_product_variable_get_size+0x84>
     480:	ldr	r3, [r4, #28]
     484:	mov	r0, #0
     488:	ldr	r3, [r3, r5, lsl #2]
     48c:	str	r3, [r6]
     490:	add	sp, sp, #12
     494:	pop	{r4, r5, r6, r7, pc}
     498:	mov	r1, r0
     49c:	mov	r0, r4
     4a0:	bl	0 <init_product_variable>
     4a4:	cmp	r0, #0
     4a8:	beq	480 <coda_product_variable_get_size+0x6c>
     4ac:	mvn	r0, #0
     4b0:	b	490 <coda_product_variable_get_size+0x7c>
     4b4:	ldr	r3, [r4, #24]
     4b8:	ldr	r0, [pc, #68]	; 504 <coda_product_variable_get_size+0xf0>
     4bc:	ldr	r1, [pc, #68]	; 508 <coda_product_variable_get_size+0xf4>
     4c0:	ldr	r2, [r3, #44]	; 0x2c
     4c4:	ldr	r3, [r3, #4]
     4c8:	ldr	r2, [r2]
     4cc:	str	r7, [sp]
     4d0:	bl	0 <coda_set_error>
     4d4:	mov	r0, r5
     4d8:	b	490 <coda_product_variable_get_size+0x7c>
     4dc:	ldr	r3, [pc, #40]	; 50c <coda_product_variable_get_size+0xf8>
     4e0:	mov	r2, #180	; 0xb4
     4e4:	ldr	r1, [pc, #36]	; 510 <coda_product_variable_get_size+0xfc>
     4e8:	ldr	r0, [pc, #36]	; 514 <coda_product_variable_get_size+0x100>
     4ec:	bl	0 <__assert_fail>
     4f0:	ldr	r3, [pc, #20]	; 50c <coda_product_variable_get_size+0xf8>
     4f4:	mov	r2, #181	; 0xb5
     4f8:	ldr	r1, [pc, #16]	; 510 <coda_product_variable_get_size+0xfc>
     4fc:	ldr	r0, [pc, #20]	; 518 <coda_product_variable_get_size+0x104>
     500:	bl	0 <__assert_fail>
     504:	.word	0xfffffe70
     508:	.word	0x000002c4
     50c:	.word	0x000000a8
     510:	.word	0x00000034
     514:	.word	0x00000270
     518:	.word	0x000002a0

0000051c <coda_product_variable_get_pointer>:
     51c:	cmp	r1, #0
     520:	cmpne	r3, #0
     524:	movne	ip, #1
     528:	moveq	ip, #0
     52c:	cmp	r0, #0
     530:	moveq	ip, #0
     534:	andne	ip, ip, #1
     538:	cmp	ip, #0
     53c:	push	{r4, r5, r6, r7, r8, lr}
     540:	sub	sp, sp, #8
     544:	beq	614 <coda_product_variable_get_pointer+0xf8>
     548:	mov	r6, r2
     54c:	ldr	r2, [r0, #24]
     550:	mov	r4, r0
     554:	mov	r7, r3
     558:	ldr	r0, [r2, #40]	; 0x28
     55c:	mov	r8, r1
     560:	bl	0 <coda_hashtable_get_index_from_name>
     564:	cmn	r0, #1
     568:	mov	r5, r0
     56c:	beq	5ec <coda_product_variable_get_pointer+0xd0>
     570:	ldr	r3, [r4, #32]
     574:	ldr	r2, [r3, r0, lsl #2]
     578:	cmp	r2, #0
     57c:	beq	5b4 <coda_product_variable_get_pointer+0x98>
     580:	cmp	r6, #0
     584:	blt	5d0 <coda_product_variable_get_pointer+0xb4>
     588:	ldr	r3, [r4, #28]
     58c:	ldr	r3, [r3, r5, lsl #2]
     590:	cmp	r6, r3
     594:	bge	5d0 <coda_product_variable_get_pointer+0xb4>
     598:	ldr	r3, [r4, #32]
     59c:	mov	r0, #0
     5a0:	ldr	r2, [r3, r5, lsl #2]
     5a4:	add	r6, r2, r6, lsl #3
     5a8:	str	r6, [r7]
     5ac:	add	sp, sp, #8
     5b0:	pop	{r4, r5, r6, r7, r8, pc}
     5b4:	mov	r1, r0
     5b8:	mov	r0, r4
     5bc:	bl	0 <init_product_variable>
     5c0:	cmp	r0, #0
     5c4:	beq	580 <coda_product_variable_get_pointer+0x64>
     5c8:	mvn	r0, #0
     5cc:	b	5ac <coda_product_variable_get_pointer+0x90>
     5d0:	ldr	r0, [pc, #80]	; 628 <coda_product_variable_get_pointer+0x10c>
     5d4:	mov	r3, r8
     5d8:	mov	r2, r6
     5dc:	ldr	r1, [pc, #72]	; 62c <coda_product_variable_get_pointer+0x110>
     5e0:	bl	0 <coda_set_error>
     5e4:	mvn	r0, #0
     5e8:	b	5ac <coda_product_variable_get_pointer+0x90>
     5ec:	ldr	r3, [r4, #24]
     5f0:	ldr	r0, [pc, #48]	; 628 <coda_product_variable_get_pointer+0x10c>
     5f4:	ldr	r1, [pc, #52]	; 630 <coda_product_variable_get_pointer+0x114>
     5f8:	ldr	r2, [r3, #44]	; 0x2c
     5fc:	ldr	r3, [r3, #4]
     600:	ldr	r2, [r2]
     604:	str	r8, [sp]
     608:	bl	0 <coda_set_error>
     60c:	mov	r0, r5
     610:	b	5ac <coda_product_variable_get_pointer+0x90>
     614:	ldr	r3, [pc, #24]	; 634 <coda_product_variable_get_pointer+0x118>
     618:	mov	r2, #208	; 0xd0
     61c:	ldr	r1, [pc, #20]	; 638 <coda_product_variable_get_pointer+0x11c>
     620:	ldr	r0, [pc, #20]	; 63c <coda_product_variable_get_pointer+0x120>
     624:	bl	0 <__assert_fail>
     628:	.word	0xfffffe70
     62c:	.word	0x00000344
     630:	.word	0x000002c4
     634:	.word	0x000000c8
     638:	.word	0x00000034
     63c:	.word	0x00000314

00000640 <coda_product_definition_delete>:
     640:	push	{r4, r5, r6, lr}
     644:	mov	r4, r0
     648:	ldr	r0, [r0, #20]
     64c:	cmp	r0, #0
     650:	beq	684 <coda_product_definition_delete+0x44>
     654:	ldr	r3, [r4, #16]
     658:	cmp	r3, #0
     65c:	ble	680 <coda_product_definition_delete+0x40>
     660:	mov	r5, #0
     664:	ldr	r0, [r0, r5, lsl #2]
     668:	bl	0 <coda_detection_rule_delete>
     66c:	ldr	r3, [r4, #16]
     670:	add	r5, r5, #1
     674:	cmp	r3, r5
     678:	ldr	r0, [r4, #20]
     67c:	bgt	664 <coda_product_definition_delete+0x24>
     680:	bl	0 <free>
     684:	ldr	r0, [r4, #8]
     688:	cmp	r0, #0
     68c:	beq	694 <coda_product_definition_delete+0x54>
     690:	bl	0 <free>
     694:	ldr	r0, [r4, #12]
     698:	cmp	r0, #0
     69c:	beq	6a4 <coda_product_definition_delete+0x64>
     6a0:	bl	0 <free>
     6a4:	ldr	r0, [r4, #28]
     6a8:	cmp	r0, #0
     6ac:	beq	6b4 <coda_product_definition_delete+0x74>
     6b0:	bl	0 <coda_type_release>
     6b4:	ldr	r0, [r4, #40]	; 0x28
     6b8:	cmp	r0, #0
     6bc:	beq	6c4 <coda_product_definition_delete+0x84>
     6c0:	bl	0 <coda_hashtable_delete>
     6c4:	ldr	r0, [r4, #36]	; 0x24
     6c8:	cmp	r0, #0
     6cc:	beq	700 <coda_product_definition_delete+0xc0>
     6d0:	ldr	r3, [r4, #32]
     6d4:	cmp	r3, #0
     6d8:	ble	6fc <coda_product_definition_delete+0xbc>
     6dc:	mov	r5, #0
     6e0:	ldr	r0, [r0, r5, lsl #2]
     6e4:	bl	1f0 <coda_product_variable_delete>
     6e8:	ldr	r3, [r4, #32]
     6ec:	add	r5, r5, #1
     6f0:	cmp	r3, r5
     6f4:	ldr	r0, [r4, #36]	; 0x24
     6f8:	bgt	6e0 <coda_product_definition_delete+0xa0>
     6fc:	bl	0 <free>
     700:	mov	r0, r4
     704:	pop	{r4, r5, r6, lr}
     708:	b	0 <free>

0000070c <coda_product_definition_new>:
     70c:	push	{r4, r5, r6, r7, lr}
     710:	sub	sp, sp, #12
     714:	mov	r7, r1
     718:	mov	r6, r2
     71c:	mov	r5, r0
     720:	bl	0 <coda_is_identifier>
     724:	subs	r4, r0, #0
     728:	beq	7a8 <coda_product_definition_new+0x9c>
     72c:	mov	r0, #48	; 0x30
     730:	bl	0 <malloc>
     734:	subs	r4, r0, #0
     738:	beq	7c4 <coda_product_definition_new+0xb8>
     73c:	mov	r3, #0
     740:	mov	r0, r5
     744:	str	r7, [r4]
     748:	str	r6, [r4, #4]
     74c:	str	r3, [r4, #12]
     750:	str	r3, [r4, #16]
     754:	str	r3, [r4, #20]
     758:	str	r3, [r4, #24]
     75c:	str	r3, [r4, #28]
     760:	str	r3, [r4, #40]	; 0x28
     764:	str	r3, [r4, #32]
     768:	str	r3, [r4, #36]	; 0x24
     76c:	str	r3, [r4, #44]	; 0x2c
     770:	bl	0 <strdup>
     774:	cmp	r0, #0
     778:	mov	r5, r0
     77c:	str	r0, [r4, #8]
     780:	beq	7e4 <coda_product_definition_new+0xd8>
     784:	mov	r0, #1
     788:	bl	0 <coda_hashtable_new>
     78c:	cmp	r0, #0
     790:	mov	r5, r0
     794:	str	r0, [r4, #40]	; 0x28
     798:	beq	808 <coda_product_definition_new+0xfc>
     79c:	mov	r0, r4
     7a0:	add	sp, sp, #12
     7a4:	pop	{r4, r5, r6, r7, pc}
     7a8:	mov	r2, r5
     7ac:	ldr	r1, [pc, #100]	; 818 <coda_product_definition_new+0x10c>
     7b0:	sub	r0, r0, #400	; 0x190
     7b4:	bl	0 <coda_set_error>
     7b8:	mov	r0, r4
     7bc:	add	sp, sp, #12
     7c0:	pop	{r4, r5, r6, r7, pc}
     7c4:	ldr	r2, [pc, #80]	; 81c <coda_product_definition_new+0x110>
     7c8:	ldr	r3, [pc, #80]	; 820 <coda_product_definition_new+0x114>
     7cc:	str	r2, [sp]
     7d0:	ldr	r1, [pc, #76]	; 824 <coda_product_definition_new+0x118>
     7d4:	mov	r2, #48	; 0x30
     7d8:	mvn	r0, #0
     7dc:	bl	0 <coda_set_error>
     7e0:	b	79c <coda_product_definition_new+0x90>
     7e4:	ldr	r3, [pc, #60]	; 828 <coda_product_definition_new+0x11c>
     7e8:	ldr	r2, [pc, #48]	; 820 <coda_product_definition_new+0x114>
     7ec:	ldr	r1, [pc, #56]	; 82c <coda_product_definition_new+0x120>
     7f0:	mvn	r0, #0
     7f4:	bl	0 <coda_set_error>
     7f8:	mov	r0, r4
     7fc:	bl	640 <coda_product_definition_delete>
     800:	mov	r4, r5
     804:	b	79c <coda_product_definition_new+0x90>
     808:	mov	r3, #320	; 0x140
     80c:	ldr	r2, [pc, #12]	; 820 <coda_product_definition_new+0x114>
     810:	ldr	r1, [pc, #24]	; 830 <coda_product_definition_new+0x124>
     814:	b	7f0 <coda_product_definition_new+0xe4>
     818:	.word	0x00000380
     81c:	.word	0x00000123
     820:	.word	0x00000034
     824:	.word	0x00000084
     828:	.word	0x00000137
     82c:	.word	0x0000017c
     830:	.word	0x000000e4

00000834 <coda_product_definition_set_description>:
     834:	ldr	r3, [r0, #12]
     838:	push	{r4, lr}
     83c:	cmp	r3, #0
     840:	bne	86c <coda_product_definition_set_description+0x38>
     844:	cmp	r1, #0
     848:	mov	r4, r0
     84c:	beq	860 <coda_product_definition_set_description+0x2c>
     850:	mov	r0, r1
     854:	bl	0 <strdup>
     858:	subs	r3, r0, #0
     85c:	beq	880 <coda_product_definition_set_description+0x4c>
     860:	mov	r0, #0
     864:	str	r3, [r4, #12]
     868:	pop	{r4, pc}
     86c:	ldr	r1, [pc, #40]	; 89c <coda_product_definition_set_description+0x68>
     870:	ldr	r0, [pc, #40]	; 8a0 <coda_product_definition_set_description+0x6c>
     874:	bl	0 <coda_set_error>
     878:	mvn	r0, #0
     87c:	pop	{r4, pc}
     880:	ldr	r3, [pc, #28]	; 8a4 <coda_product_definition_set_description+0x70>
     884:	ldr	r2, [pc, #28]	; 8a8 <coda_product_definition_set_description+0x74>
     888:	ldr	r1, [pc, #28]	; 8ac <coda_product_definition_set_description+0x78>
     88c:	mvn	r0, #0
     890:	bl	0 <coda_set_error>
     894:	mvn	r0, #0
     898:	pop	{r4, pc}
     89c:	.word	0x000003bc
     8a0:	.word	0xfffffe70
     8a4:	.word	0x00000157
     8a8:	.word	0x00000034
     8ac:	.word	0x0000017c

000008b0 <coda_product_definition_set_root_type>:
     8b0:	cmp	r1, #0
     8b4:	push	{r4, lr}
     8b8:	beq	8f4 <coda_product_definition_set_root_type+0x44>
     8bc:	ldr	r3, [r0, #28]
     8c0:	cmp	r3, #0
     8c4:	bne	8e0 <coda_product_definition_set_root_type+0x30>
     8c8:	ldr	r2, [r1, #4]
     8cc:	str	r1, [r0, #28]
     8d0:	add	r2, r2, #1
     8d4:	str	r2, [r1, #4]
     8d8:	mov	r0, r3
     8dc:	pop	{r4, pc}
     8e0:	ldr	r1, [pc, #32]	; 908 <coda_product_definition_set_root_type+0x58>
     8e4:	ldr	r0, [pc, #32]	; 90c <coda_product_definition_set_root_type+0x5c>
     8e8:	bl	0 <coda_set_error>
     8ec:	mvn	r3, #0
     8f0:	b	8d8 <coda_product_definition_set_root_type+0x28>
     8f4:	ldr	r3, [pc, #20]	; 910 <coda_product_definition_set_root_type+0x60>
     8f8:	ldr	r2, [pc, #20]	; 914 <coda_product_definition_set_root_type+0x64>
     8fc:	ldr	r1, [pc, #20]	; 918 <coda_product_definition_set_root_type+0x68>
     900:	ldr	r0, [pc, #20]	; 91c <coda_product_definition_set_root_type+0x6c>
     904:	bl	0 <__assert_fail>
     908:	.word	0x00000400
     90c:	.word	0xfffffe70
     910:	.word	0x000000ec
     914:	.word	0x00000162
     918:	.word	0x00000034
     91c:	.word	0x000003ec

00000920 <coda_product_definition_add_detection_rule>:
     920:	ldr	r3, [r1]
     924:	push	{r4, r5, r6, lr}
     928:	cmp	r3, #0
     92c:	sub	sp, sp, #8
     930:	mov	r4, r0
     934:	beq	9b4 <coda_product_definition_add_detection_rule+0x94>
     938:	ldr	r3, [r0]
     93c:	ldr	r2, [pc, #180]	; 9f8 <coda_product_definition_add_detection_rule+0xd8>
     940:	cmp	r3, #0
     944:	addne	r3, r3, #3
     948:	mov	r5, r1
     94c:	lslne	r3, r3, #2
     950:	moveq	r3, #16
     954:	str	r0, [r5, #8]
     958:	bl	0 <__aeabi_read_tp>
     95c:	ldr	r0, [r2, r0]
     960:	add	r0, r0, r3
     964:	bl	0 <coda_detection_tree_add_rule>
     968:	subs	r6, r0, #0
     96c:	bne	9ac <coda_product_definition_add_detection_rule+0x8c>
     970:	ldr	r1, [r4, #16]
     974:	ldr	r0, [r4, #20]
     978:	add	r1, r1, #1
     97c:	lsl	r1, r1, #2
     980:	bl	0 <realloc>
     984:	cmp	r0, #0
     988:	beq	9cc <coda_product_definition_add_detection_rule+0xac>
     98c:	ldr	r3, [r4, #16]
     990:	str	r0, [r4, #20]
     994:	add	r2, r3, #1
     998:	str	r2, [r4, #16]
     99c:	str	r5, [r0, r3, lsl #2]
     9a0:	mov	r0, r6
     9a4:	add	sp, sp, #8
     9a8:	pop	{r4, r5, r6, pc}
     9ac:	mvn	r6, #0
     9b0:	b	9a0 <coda_product_definition_add_detection_rule+0x80>
     9b4:	ldr	r2, [r0, #8]
     9b8:	ldr	r1, [pc, #60]	; 9fc <coda_product_definition_add_detection_rule+0xdc>
     9bc:	ldr	r0, [pc, #60]	; a00 <coda_product_definition_add_detection_rule+0xe0>
     9c0:	bl	0 <coda_set_error>
     9c4:	mvn	r6, #0
     9c8:	b	9a0 <coda_product_definition_add_detection_rule+0x80>
     9cc:	ldr	r2, [r4, #16]
     9d0:	ldr	r3, [pc, #44]	; a04 <coda_product_definition_add_detection_rule+0xe4>
     9d4:	add	r2, r2, #1
     9d8:	str	r3, [sp]
     9dc:	lsl	r2, r2, #2
     9e0:	ldr	r3, [pc, #32]	; a08 <coda_product_definition_add_detection_rule+0xe8>
     9e4:	ldr	r1, [pc, #32]	; a0c <coda_product_definition_add_detection_rule+0xec>
     9e8:	mvn	r0, #0
     9ec:	bl	0 <coda_set_error>
     9f0:	mvn	r6, #0
     9f4:	b	9a0 <coda_product_definition_add_detection_rule+0x80>
     9f8:	.word	0x00000000
     9fc:	.word	0x0000042c
     a00:	.word	0xfffffe70
     a04:	.word	0x00000186
     a08:	.word	0x00000034
     a0c:	.word	0x00000084

00000a10 <coda_product_definition_add_product_variable>:
     a10:	push	{r4, r5, r6, lr}
     a14:	mov	r4, r0
     a18:	sub	sp, sp, #8
     a1c:	mov	r5, r1
     a20:	ldr	r0, [r0, #40]	; 0x28
     a24:	ldr	r1, [r1]
     a28:	bl	0 <coda_hashtable_add_name>
     a2c:	subs	r6, r0, #0
     a30:	bne	aa8 <coda_product_definition_add_product_variable+0x98>
     a34:	ldr	r1, [r4, #32]
     a38:	tst	r1, #15
     a3c:	beq	a5c <coda_product_definition_add_product_variable+0x4c>
     a40:	ldr	r0, [r4, #36]	; 0x24
     a44:	add	r3, r1, #1
     a48:	str	r3, [r4, #32]
     a4c:	str	r5, [r0, r1, lsl #2]
     a50:	mov	r0, r6
     a54:	add	sp, sp, #8
     a58:	pop	{r4, r5, r6, pc}
     a5c:	add	r1, r1, #16
     a60:	ldr	r0, [r4, #36]	; 0x24
     a64:	lsl	r1, r1, #2
     a68:	bl	0 <realloc>
     a6c:	cmp	r0, #0
     a70:	strne	r0, [r4, #36]	; 0x24
     a74:	ldrne	r1, [r4, #32]
     a78:	bne	a44 <coda_product_definition_add_product_variable+0x34>
     a7c:	ldr	r2, [r4, #32]
     a80:	mov	r3, #420	; 0x1a4
     a84:	add	r2, r2, #16
     a88:	str	r3, [sp]
     a8c:	lsl	r2, r2, #2
     a90:	ldr	r3, [pc, #44]	; ac4 <coda_product_definition_add_product_variable+0xb4>
     a94:	ldr	r1, [pc, #44]	; ac8 <coda_product_definition_add_product_variable+0xb8>
     a98:	mvn	r0, #0
     a9c:	bl	0 <coda_set_error>
     aa0:	mvn	r6, #0
     aa4:	b	a50 <coda_product_definition_add_product_variable+0x40>
     aa8:	ldr	r3, [r4, #8]
     aac:	ldr	r2, [r5]
     ab0:	ldr	r1, [pc, #20]	; acc <coda_product_definition_add_product_variable+0xbc>
     ab4:	ldr	r0, [pc, #20]	; ad0 <coda_product_definition_add_product_variable+0xc0>
     ab8:	bl	0 <coda_set_error>
     abc:	mvn	r6, #0
     ac0:	b	a50 <coda_product_definition_add_product_variable+0x40>
     ac4:	.word	0x00000034
     ac8:	.word	0x00000084
     acc:	.word	0x00000464
     ad0:	.word	0xfffffe70

00000ad4 <coda_product_definition_validate>:
     ad4:	ldr	r2, [r0]
     ad8:	mov	r3, r0
     adc:	cmp	r2, #1
     ae0:	bls	af4 <coda_product_definition_validate+0x20>
     ae4:	mov	r2, #1
     ae8:	mov	r0, #0
     aec:	str	r2, [r3, #24]
     af0:	bx	lr
     af4:	ldr	r2, [r0, #28]
     af8:	cmp	r2, #0
     afc:	bne	ae4 <coda_product_definition_validate+0x10>
     b00:	push	{r4, lr}
     b04:	ldr	r1, [pc, #12]	; b18 <coda_product_definition_validate+0x44>
     b08:	ldr	r0, [pc, #12]	; b1c <coda_product_definition_validate+0x48>
     b0c:	bl	0 <coda_set_error>
     b10:	mvn	r0, #0
     b14:	pop	{r4, pc}
     b18:	.word	0x0000049c
     b1c:	.word	0xfffffe70

00000b20 <coda_product_type_delete>:
     b20:	push	{r4, r5, r6, lr}
     b24:	mov	r5, r0
     b28:	ldr	r0, [r0]
     b2c:	cmp	r0, #0
     b30:	beq	b38 <coda_product_type_delete+0x18>
     b34:	bl	0 <free>
     b38:	ldr	r0, [r5, #4]
     b3c:	cmp	r0, #0
     b40:	beq	b48 <coda_product_type_delete+0x28>
     b44:	bl	0 <free>
     b48:	ldr	r0, [r5, #16]
     b4c:	cmp	r0, #0
     b50:	beq	b58 <coda_product_type_delete+0x38>
     b54:	bl	0 <coda_hashtable_delete>
     b58:	ldr	r0, [r5, #12]
     b5c:	cmp	r0, #0
     b60:	beq	b94 <coda_product_type_delete+0x74>
     b64:	ldr	r3, [r5, #8]
     b68:	cmp	r3, #0
     b6c:	ble	b90 <coda_product_type_delete+0x70>
     b70:	mov	r4, #0
     b74:	ldr	r0, [r0, r4, lsl #2]
     b78:	bl	640 <coda_product_definition_delete>
     b7c:	ldr	r3, [r5, #8]
     b80:	add	r4, r4, #1
     b84:	cmp	r3, r4
     b88:	ldr	r0, [r5, #12]
     b8c:	bgt	b74 <coda_product_type_delete+0x54>
     b90:	bl	0 <free>
     b94:	mov	r0, r5
     b98:	pop	{r4, r5, r6, lr}
     b9c:	b	0 <free>

00000ba0 <coda_product_type_new>:
     ba0:	push	{r4, r5, lr}
     ba4:	mov	r5, r0
     ba8:	sub	sp, sp, #12
     bac:	mov	r0, #24
     bb0:	bl	0 <malloc>
     bb4:	subs	r4, r0, #0
     bb8:	beq	c0c <coda_product_type_new+0x6c>
     bbc:	mov	r3, #0
     bc0:	mov	r0, r5
     bc4:	str	r3, [r4, #4]
     bc8:	str	r3, [r4, #8]
     bcc:	str	r3, [r4, #16]
     bd0:	str	r3, [r4, #12]
     bd4:	bl	0 <strdup>
     bd8:	cmp	r0, #0
     bdc:	mov	r5, r0
     be0:	str	r0, [r4]
     be4:	beq	c2c <coda_product_type_new+0x8c>
     be8:	mov	r0, #1
     bec:	bl	0 <coda_hashtable_new>
     bf0:	cmp	r0, #0
     bf4:	mov	r5, r0
     bf8:	str	r0, [r4, #16]
     bfc:	beq	c50 <coda_product_type_new+0xb0>
     c00:	mov	r0, r4
     c04:	add	sp, sp, #12
     c08:	pop	{r4, r5, pc}
     c0c:	ldr	r2, [pc, #76]	; c60 <coda_product_type_new+0xc0>
     c10:	ldr	r3, [pc, #76]	; c64 <coda_product_type_new+0xc4>
     c14:	str	r2, [sp]
     c18:	ldr	r1, [pc, #72]	; c68 <coda_product_type_new+0xc8>
     c1c:	mov	r2, #24
     c20:	mvn	r0, #0
     c24:	bl	0 <coda_set_error>
     c28:	b	c00 <coda_product_type_new+0x60>
     c2c:	ldr	r3, [pc, #56]	; c6c <coda_product_type_new+0xcc>
     c30:	ldr	r2, [pc, #44]	; c64 <coda_product_type_new+0xc4>
     c34:	ldr	r1, [pc, #52]	; c70 <coda_product_type_new+0xd0>
     c38:	mvn	r0, #0
     c3c:	bl	0 <coda_set_error>
     c40:	mov	r0, r4
     c44:	bl	b20 <coda_product_type_delete>
     c48:	mov	r4, r5
     c4c:	b	c00 <coda_product_type_new+0x60>
     c50:	mov	r3, #504	; 0x1f8
     c54:	ldr	r2, [pc, #8]	; c64 <coda_product_type_new+0xc4>
     c58:	ldr	r1, [pc, #20]	; c74 <coda_product_type_new+0xd4>
     c5c:	b	c38 <coda_product_type_new+0x98>
     c60:	.word	0x000001e2
     c64:	.word	0x00000034
     c68:	.word	0x00000084
     c6c:	.word	0x000001ef
     c70:	.word	0x0000017c
     c74:	.word	0x000000e4

00000c78 <coda_product_type_set_description>:
     c78:	ldr	r3, [r0, #4]
     c7c:	push	{r4, lr}
     c80:	cmp	r3, #0
     c84:	bne	cb0 <coda_product_type_set_description+0x38>
     c88:	cmp	r1, #0
     c8c:	mov	r4, r0
     c90:	beq	ca4 <coda_product_type_set_description+0x2c>
     c94:	mov	r0, r1
     c98:	bl	0 <strdup>
     c9c:	subs	r3, r0, #0
     ca0:	beq	cc4 <coda_product_type_set_description+0x4c>
     ca4:	mov	r0, #0
     ca8:	str	r3, [r4, #4]
     cac:	pop	{r4, pc}
     cb0:	ldr	r1, [pc, #40]	; ce0 <coda_product_type_set_description+0x68>
     cb4:	ldr	r0, [pc, #40]	; ce4 <coda_product_type_set_description+0x6c>
     cb8:	bl	0 <coda_set_error>
     cbc:	mvn	r0, #0
     cc0:	pop	{r4, pc}
     cc4:	ldr	r3, [pc, #28]	; ce8 <coda_product_type_set_description+0x70>
     cc8:	ldr	r2, [pc, #28]	; cec <coda_product_type_set_description+0x74>
     ccc:	ldr	r1, [pc, #28]	; cf0 <coda_product_type_set_description+0x78>
     cd0:	mvn	r0, #0
     cd4:	bl	0 <coda_set_error>
     cd8:	mvn	r0, #0
     cdc:	pop	{r4, pc}
     ce0:	.word	0x000004d4
     ce4:	.word	0xfffffe70
     ce8:	.word	0x0000020f
     cec:	.word	0x00000034
     cf0:	.word	0x0000017c

00000cf4 <coda_product_type_add_product_definition>:
     cf4:	ldr	r3, [r1, #44]	; 0x2c
     cf8:	push	{r4, r5, r6, lr}
     cfc:	cmp	r3, #0
     d00:	sub	sp, sp, #8
     d04:	mov	r4, r1
     d08:	mov	r5, r0
     d0c:	bne	e00 <coda_product_type_add_product_definition+0x10c>
     d10:	ldr	ip, [r0, #8]
     d14:	cmp	ip, #0
     d18:	ble	d54 <coda_product_type_add_product_definition+0x60>
     d1c:	ldr	r1, [r0, #12]
     d20:	ldr	r2, [r4, #4]
     d24:	ldr	r0, [r1]
     d28:	ldr	r0, [r0, #4]
     d2c:	cmp	r0, r2
     d30:	bne	d48 <coda_product_type_add_product_definition+0x54>
     d34:	b	d94 <coda_product_type_add_product_definition+0xa0>
     d38:	ldr	r0, [r1, #4]!
     d3c:	ldr	r0, [r0, #4]
     d40:	cmp	r0, r2
     d44:	beq	d94 <coda_product_type_add_product_definition+0xa0>
     d48:	add	r3, r3, #1
     d4c:	cmp	r3, ip
     d50:	bne	d38 <coda_product_type_add_product_definition+0x44>
     d54:	ldr	r1, [r4, #8]
     d58:	ldr	r0, [r5, #16]
     d5c:	bl	0 <coda_hashtable_add_name>
     d60:	subs	r6, r0, #0
     d64:	bne	e24 <coda_product_type_add_product_definition+0x130>
     d68:	ldr	r3, [r5, #8]
     d6c:	tst	r3, #15
     d70:	beq	db4 <coda_product_type_add_product_definition+0xc0>
     d74:	ldr	r0, [r5, #12]
     d78:	add	r2, r3, #1
     d7c:	str	r2, [r5, #8]
     d80:	str	r4, [r0, r3, lsl #2]
     d84:	str	r5, [r4, #44]	; 0x2c
     d88:	mov	r0, r6
     d8c:	add	sp, sp, #8
     d90:	pop	{r4, r5, r6, pc}
     d94:	ldr	r3, [r5]
     d98:	ldr	r1, [pc, #160]	; e40 <coda_product_type_add_product_definition+0x14c>
     d9c:	ldr	r0, [pc, #160]	; e44 <coda_product_type_add_product_definition+0x150>
     da0:	bl	0 <coda_set_error>
     da4:	mvn	r6, #0
     da8:	mov	r0, r6
     dac:	add	sp, sp, #8
     db0:	pop	{r4, r5, r6, pc}
     db4:	add	r3, r3, #16
     db8:	ldr	r0, [r5, #12]
     dbc:	lsl	r1, r3, #2
     dc0:	bl	0 <realloc>
     dc4:	cmp	r0, #0
     dc8:	strne	r0, [r5, #12]
     dcc:	ldrne	r3, [r5, #8]
     dd0:	bne	d78 <coda_product_type_add_product_definition+0x84>
     dd4:	ldr	r2, [r5, #8]
     dd8:	ldr	r3, [pc, #104]	; e48 <coda_product_type_add_product_definition+0x154>
     ddc:	add	r2, r2, #16
     de0:	str	r3, [sp]
     de4:	lsl	r2, r2, #2
     de8:	ldr	r3, [pc, #92]	; e4c <coda_product_type_add_product_definition+0x158>
     dec:	ldr	r1, [pc, #92]	; e50 <coda_product_type_add_product_definition+0x15c>
     df0:	mvn	r0, #0
     df4:	bl	0 <coda_set_error>
     df8:	mvn	r6, #0
     dfc:	b	d88 <coda_product_type_add_product_definition+0x94>
     e00:	ldr	r2, [r1, #8]
     e04:	ldr	r1, [r0]
     e08:	ldr	r3, [r3]
     e0c:	ldr	r0, [pc, #48]	; e44 <coda_product_type_add_product_definition+0x150>
     e10:	str	r1, [sp]
     e14:	ldr	r1, [pc, #56]	; e54 <coda_product_type_add_product_definition+0x160>
     e18:	bl	0 <coda_set_error>
     e1c:	mvn	r6, #0
     e20:	b	d88 <coda_product_type_add_product_definition+0x94>
     e24:	ldr	r3, [r5]
     e28:	ldr	r2, [r4, #8]
     e2c:	ldr	r1, [pc, #36]	; e58 <coda_product_type_add_product_definition+0x164>
     e30:	ldr	r0, [pc, #12]	; e44 <coda_product_type_add_product_definition+0x150>
     e34:	bl	0 <coda_set_error>
     e38:	mvn	r6, #0
     e3c:	b	d88 <coda_product_type_add_product_definition+0x94>
     e40:	.word	0x0000054c
     e44:	.word	0xfffffe70
     e48:	.word	0x0000023e
     e4c:	.word	0x00000034
     e50:	.word	0x00000084
     e54:	.word	0x000004fc
     e58:	.word	0x00000594

00000e5c <coda_product_type_get_product_definition_by_version>:
     e5c:	ldr	r3, [r0, #8]
     e60:	push	{r4, lr}
     e64:	cmp	r3, #0
     e68:	mov	r4, r0
     e6c:	ble	ea8 <coda_product_type_get_product_definition_by_version+0x4c>
     e70:	ldr	ip, [r0, #12]
     e74:	ldr	r0, [ip]
     e78:	ldr	r2, [r0, #4]
     e7c:	cmp	r1, r2
     e80:	popeq	{r4, pc}
     e84:	mov	r2, #0
     e88:	b	e9c <coda_product_type_get_product_definition_by_version+0x40>
     e8c:	ldr	r0, [ip, #4]!
     e90:	ldr	lr, [r0, #4]
     e94:	cmp	lr, r1
     e98:	popeq	{r4, pc}
     e9c:	add	r2, r2, #1
     ea0:	cmp	r2, r3
     ea4:	bne	e8c <coda_product_type_get_product_definition_by_version+0x30>
     ea8:	mov	r3, r1
     eac:	ldr	r2, [r4]
     eb0:	ldr	r1, [pc, #12]	; ec4 <coda_product_type_get_product_definition_by_version+0x68>
     eb4:	ldr	r0, [pc, #12]	; ec8 <coda_product_type_get_product_definition_by_version+0x6c>
     eb8:	bl	0 <coda_set_error>
     ebc:	mov	r0, #0
     ec0:	pop	{r4, pc}
     ec4:	.word	0x000005c8
     ec8:	.word	0xfffffe70

00000ecc <coda_product_type_get_latest_product_definition>:
     ecc:	push	{r4, lr}
     ed0:	ldr	r4, [r0, #8]
     ed4:	cmp	r4, #0
     ed8:	beq	f30 <coda_product_type_get_latest_product_definition+0x64>
     edc:	ldr	r0, [r0, #12]
     ee0:	cmp	r4, #1
     ee4:	ldr	r3, [r0]
     ee8:	ldr	r2, [r3, #4]
     eec:	ble	f28 <coda_product_type_get_latest_product_definition+0x5c>
     ef0:	mov	lr, r0
     ef4:	mov	r3, #1
     ef8:	mov	ip, #0
     efc:	ldr	r1, [lr, #4]!
     f00:	ldr	r1, [r1, #4]
     f04:	cmp	r1, r2
     f08:	movgt	ip, r3
     f0c:	add	r3, r3, #1
     f10:	movgt	r2, r1
     f14:	cmp	r4, r3
     f18:	bne	efc <coda_product_type_get_latest_product_definition+0x30>
     f1c:	lsl	ip, ip, #2
     f20:	ldr	r0, [r0, ip]
     f24:	pop	{r4, pc}
     f28:	mov	ip, #0
     f2c:	b	f20 <coda_product_type_get_latest_product_definition+0x54>
     f30:	ldr	r2, [r0]
     f34:	ldr	r1, [pc, #12]	; f48 <coda_product_type_get_latest_product_definition+0x7c>
     f38:	ldr	r0, [pc, #12]	; f4c <coda_product_type_get_latest_product_definition+0x80>
     f3c:	bl	0 <coda_set_error>
     f40:	mov	r0, r4
     f44:	pop	{r4, pc}
     f48:	.word	0x00000608
     f4c:	.word	0xfffffe70

00000f50 <coda_product_class_delete>:
     f50:	push	{r4, r5, r6, lr}
     f54:	mov	r4, r0
     f58:	ldr	r0, [r0]
     f5c:	cmp	r0, #0
     f60:	beq	f68 <coda_product_class_delete+0x18>
     f64:	bl	0 <free>
     f68:	ldr	r0, [r4, #4]
     f6c:	cmp	r0, #0
     f70:	beq	f78 <coda_product_class_delete+0x28>
     f74:	bl	0 <free>
     f78:	ldr	r0, [r4, #8]
     f7c:	cmp	r0, #0
     f80:	beq	f88 <coda_product_class_delete+0x38>
     f84:	bl	0 <free>
     f88:	ldr	r0, [r4, #24]
     f8c:	cmp	r0, #0
     f90:	beq	f98 <coda_product_class_delete+0x48>
     f94:	bl	0 <coda_hashtable_delete>
     f98:	ldr	r0, [r4, #36]	; 0x24
     f9c:	cmp	r0, #0
     fa0:	beq	fa8 <coda_product_class_delete+0x58>
     fa4:	bl	0 <coda_hashtable_delete>
     fa8:	ldr	r0, [r4, #20]
     fac:	cmp	r0, #0
     fb0:	beq	fe4 <coda_product_class_delete+0x94>
     fb4:	ldr	r3, [r4, #16]
     fb8:	cmp	r3, #0
     fbc:	ble	fe0 <coda_product_class_delete+0x90>
     fc0:	mov	r5, #0
     fc4:	ldr	r0, [r0, r5, lsl #2]
     fc8:	bl	0 <coda_type_release>
     fcc:	ldr	r3, [r4, #16]
     fd0:	add	r5, r5, #1
     fd4:	cmp	r3, r5
     fd8:	ldr	r0, [r4, #20]
     fdc:	bgt	fc4 <coda_product_class_delete+0x74>
     fe0:	bl	0 <free>
     fe4:	ldr	r0, [r4, #32]
     fe8:	cmp	r0, #0
     fec:	beq	1020 <coda_product_class_delete+0xd0>
     ff0:	ldr	r3, [r4, #28]
     ff4:	cmp	r3, #0
     ff8:	ble	101c <coda_product_class_delete+0xcc>
     ffc:	mov	r5, #0
    1000:	ldr	r0, [r0, r5, lsl #2]
    1004:	bl	b20 <coda_product_type_delete>
    1008:	ldr	r3, [r4, #28]
    100c:	add	r5, r5, #1
    1010:	cmp	r3, r5
    1014:	ldr	r0, [r4, #32]
    1018:	bgt	1000 <coda_product_class_delete+0xb0>
    101c:	bl	0 <free>
    1020:	mov	r0, r4
    1024:	pop	{r4, r5, r6, lr}
    1028:	b	0 <free>

0000102c <delete_data_dictionary>:
    102c:	push	{r4, r5, r6, lr}
    1030:	subs	r5, r0, #0
    1034:	beq	10b0 <delete_data_dictionary+0x84>
    1038:	ldr	r0, [r5, #8]
    103c:	cmp	r0, #0
    1040:	beq	1048 <delete_data_dictionary+0x1c>
    1044:	bl	0 <coda_hashtable_delete>
    1048:	ldr	r0, [r5, #4]
    104c:	cmp	r0, #0
    1050:	beq	1084 <delete_data_dictionary+0x58>
    1054:	ldr	r3, [r5]
    1058:	cmp	r3, #0
    105c:	ble	1080 <delete_data_dictionary+0x54>
    1060:	mov	r4, #0
    1064:	ldr	r0, [r0, r4, lsl #2]
    1068:	bl	f50 <coda_product_class_delete>
    106c:	ldr	r3, [r5]
    1070:	add	r4, r4, #1
    1074:	cmp	r3, r4
    1078:	ldr	r0, [r5, #4]
    107c:	bgt	1064 <delete_data_dictionary+0x38>
    1080:	bl	0 <free>
    1084:	add	r4, r5, #8
    1088:	add	r6, r5, #48	; 0x30
    108c:	ldr	r0, [r4, #4]!
    1090:	cmp	r0, #0
    1094:	beq	109c <delete_data_dictionary+0x70>
    1098:	bl	0 <coda_detection_tree_delete>
    109c:	cmp	r4, r6
    10a0:	bne	108c <delete_data_dictionary+0x60>
    10a4:	mov	r0, r5
    10a8:	pop	{r4, r5, r6, lr}
    10ac:	b	0 <free>
    10b0:	ldr	r3, [pc, #12]	; 10c4 <delete_data_dictionary+0x98>
    10b4:	ldr	r2, [pc, #12]	; 10c8 <delete_data_dictionary+0x9c>
    10b8:	ldr	r1, [pc, #12]	; 10cc <delete_data_dictionary+0xa0>
    10bc:	ldr	r0, [pc, #12]	; 10d0 <delete_data_dictionary+0xa4>
    10c0:	bl	0 <__assert_fail>
    10c4:	.word	0x00000114
    10c8:	.word	0x00000377
    10cc:	.word	0x00000034
    10d0:	.word	0x0000063c

000010d4 <coda_product_class_new>:
    10d4:	push	{r4, r5, r6, lr}
    10d8:	mov	r5, r0
    10dc:	bl	0 <coda_is_identifier>
    10e0:	subs	r4, r0, #0
    10e4:	beq	1174 <coda_product_class_new+0xa0>
    10e8:	mov	r0, #40	; 0x28
    10ec:	bl	0 <malloc>
    10f0:	subs	r4, r0, #0
    10f4:	beq	11c0 <coda_product_class_new+0xec>
    10f8:	mov	r3, #0
    10fc:	mov	r0, r5
    1100:	str	r3, [r4, #4]
    1104:	str	r3, [r4, #8]
    1108:	str	r3, [r4, #12]
    110c:	str	r3, [r4, #16]
    1110:	str	r3, [r4, #20]
    1114:	str	r3, [r4, #24]
    1118:	str	r3, [r4, #28]
    111c:	str	r3, [r4, #32]
    1120:	str	r3, [r4, #36]	; 0x24
    1124:	bl	0 <strdup>
    1128:	cmp	r0, #0
    112c:	mov	r5, r0
    1130:	str	r0, [r4]
    1134:	beq	11b0 <coda_product_class_new+0xdc>
    1138:	mov	r0, #1
    113c:	bl	0 <coda_hashtable_new>
    1140:	cmp	r0, #0
    1144:	mov	r5, r0
    1148:	str	r0, [r4, #24]
    114c:	ldreq	r3, [pc, #128]	; 11d4 <coda_product_class_new+0x100>
    1150:	beq	1190 <coda_product_class_new+0xbc>
    1154:	mov	r0, #1
    1158:	bl	0 <coda_hashtable_new>
    115c:	cmp	r0, #0
    1160:	mov	r5, r0
    1164:	str	r0, [r4, #36]	; 0x24
    1168:	beq	118c <coda_product_class_new+0xb8>
    116c:	mov	r0, r4
    1170:	pop	{r4, r5, r6, pc}
    1174:	mov	r2, r5
    1178:	ldr	r1, [pc, #88]	; 11d8 <coda_product_class_new+0x104>
    117c:	sub	r0, r0, #400	; 0x190
    1180:	bl	0 <coda_set_error>
    1184:	mov	r0, r4
    1188:	pop	{r4, r5, r6, pc}
    118c:	mov	r3, #720	; 0x2d0
    1190:	ldr	r2, [pc, #68]	; 11dc <coda_product_class_new+0x108>
    1194:	ldr	r1, [pc, #68]	; 11e0 <coda_product_class_new+0x10c>
    1198:	mvn	r0, #0
    119c:	bl	0 <coda_set_error>
    11a0:	mov	r0, r4
    11a4:	bl	f50 <coda_product_class_delete>
    11a8:	mov	r4, r5
    11ac:	b	116c <coda_product_class_new+0x98>
    11b0:	ldr	r3, [pc, #44]	; 11e4 <coda_product_class_new+0x110>
    11b4:	ldr	r2, [pc, #32]	; 11dc <coda_product_class_new+0x108>
    11b8:	ldr	r1, [pc, #40]	; 11e8 <coda_product_class_new+0x114>
    11bc:	b	1198 <coda_product_class_new+0xc4>
    11c0:	ldr	r3, [pc, #36]	; 11ec <coda_product_class_new+0x118>
    11c4:	ldr	r2, [pc, #36]	; 11f0 <coda_product_class_new+0x11c>
    11c8:	ldr	r1, [pc, #12]	; 11dc <coda_product_class_new+0x108>
    11cc:	ldr	r0, [pc, #32]	; 11f4 <coda_product_class_new+0x120>
    11d0:	bl	0 <__assert_fail>
    11d4:	.word	0x000002c7
    11d8:	.word	0x00000654
    11dc:	.word	0x00000034
    11e0:	.word	0x000000e4
    11e4:	.word	0x000002be
    11e8:	.word	0x0000017c
    11ec:	.word	0x0000012c
    11f0:	.word	0x000002ae
    11f4:	.word	0x00000698

000011f8 <coda_product_class_set_description>:
    11f8:	ldr	r3, [r0, #4]
    11fc:	push	{r4, lr}
    1200:	cmp	r3, #0
    1204:	bne	1230 <coda_product_class_set_description+0x38>
    1208:	cmp	r1, #0
    120c:	mov	r4, r0
    1210:	beq	1224 <coda_product_class_set_description+0x2c>
    1214:	mov	r0, r1
    1218:	bl	0 <strdup>
    121c:	subs	r3, r0, #0
    1220:	beq	1244 <coda_product_class_set_description+0x4c>
    1224:	mov	r0, #0
    1228:	str	r3, [r4, #4]
    122c:	pop	{r4, pc}
    1230:	ldr	r1, [pc, #40]	; 1260 <coda_product_class_set_description+0x68>
    1234:	ldr	r0, [pc, #40]	; 1264 <coda_product_class_set_description+0x6c>
    1238:	bl	0 <coda_set_error>
    123c:	mvn	r0, #0
    1240:	pop	{r4, pc}
    1244:	ldr	r3, [pc, #28]	; 1268 <coda_product_class_set_description+0x70>
    1248:	ldr	r2, [pc, #28]	; 126c <coda_product_class_set_description+0x74>
    124c:	ldr	r1, [pc, #28]	; 1270 <coda_product_class_set_description+0x78>
    1250:	mvn	r0, #0
    1254:	bl	0 <coda_set_error>
    1258:	mvn	r0, #0
    125c:	pop	{r4, pc}
    1260:	.word	0x000006b0
    1264:	.word	0xfffffe70
    1268:	.word	0x000002e7
    126c:	.word	0x00000034
    1270:	.word	0x0000017c

00001274 <coda_product_class_set_definition_file>:
    1274:	ldr	r3, [r0, #8]
    1278:	push	{r4, lr}
    127c:	cmp	r3, #0
    1280:	bne	12ac <coda_product_class_set_definition_file+0x38>
    1284:	cmp	r1, #0
    1288:	mov	r4, r0
    128c:	beq	12a0 <coda_product_class_set_definition_file+0x2c>
    1290:	mov	r0, r1
    1294:	bl	0 <strdup>
    1298:	subs	r3, r0, #0
    129c:	beq	12c0 <coda_product_class_set_definition_file+0x4c>
    12a0:	mov	r0, #0
    12a4:	str	r3, [r4, #8]
    12a8:	pop	{r4, pc}
    12ac:	ldr	r1, [pc, #40]	; 12dc <coda_product_class_set_definition_file+0x68>
    12b0:	ldr	r0, [pc, #40]	; 12e0 <coda_product_class_set_definition_file+0x6c>
    12b4:	bl	0 <coda_set_error>
    12b8:	mvn	r0, #0
    12bc:	pop	{r4, pc}
    12c0:	ldr	r3, [pc, #28]	; 12e4 <coda_product_class_set_definition_file+0x70>
    12c4:	ldr	r2, [pc, #28]	; 12e8 <coda_product_class_set_definition_file+0x74>
    12c8:	ldr	r1, [pc, #28]	; 12ec <coda_product_class_set_definition_file+0x78>
    12cc:	mvn	r0, #0
    12d0:	bl	0 <coda_set_error>
    12d4:	mvn	r0, #0
    12d8:	pop	{r4, pc}
    12dc:	.word	0x000006d8
    12e0:	.word	0xfffffe70
    12e4:	.word	0x000002ff
    12e8:	.word	0x00000034
    12ec:	.word	0x0000017c

000012f0 <coda_product_class_set_revision>:
    12f0:	str	r1, [r0, #12]
    12f4:	mov	r0, #0
    12f8:	bx	lr

000012fc <coda_product_class_add_product_type>:
    12fc:	push	{r4, r5, r6, lr}
    1300:	mov	r4, r0
    1304:	sub	sp, sp, #8
    1308:	mov	r5, r1
    130c:	ldr	r0, [r0, #36]	; 0x24
    1310:	ldr	r1, [r1]
    1314:	bl	0 <coda_hashtable_add_name>
    1318:	subs	r6, r0, #0
    131c:	bne	1398 <coda_product_class_add_product_type+0x9c>
    1320:	ldr	r1, [r4, #28]
    1324:	tst	r1, #15
    1328:	beq	134c <coda_product_class_add_product_type+0x50>
    132c:	ldr	r0, [r4, #32]
    1330:	add	r3, r1, #1
    1334:	str	r3, [r4, #28]
    1338:	str	r5, [r0, r1, lsl #2]
    133c:	str	r4, [r5, #20]
    1340:	mov	r0, r6
    1344:	add	sp, sp, #8
    1348:	pop	{r4, r5, r6, pc}
    134c:	add	r1, r1, #16
    1350:	ldr	r0, [r4, #32]
    1354:	lsl	r1, r1, #2
    1358:	bl	0 <realloc>
    135c:	cmp	r0, #0
    1360:	strne	r0, [r4, #32]
    1364:	ldrne	r1, [r4, #28]
    1368:	bne	1330 <coda_product_class_add_product_type+0x34>
    136c:	ldr	r2, [r4, #28]
    1370:	mov	r3, #800	; 0x320
    1374:	add	r2, r2, #16
    1378:	str	r3, [sp]
    137c:	lsl	r2, r2, #2
    1380:	ldr	r3, [pc, #44]	; 13b4 <coda_product_class_add_product_type+0xb8>
    1384:	ldr	r1, [pc, #44]	; 13b8 <coda_product_class_add_product_type+0xbc>
    1388:	mvn	r0, #0
    138c:	bl	0 <coda_set_error>
    1390:	mvn	r6, #0
    1394:	b	1340 <coda_product_class_add_product_type+0x44>
    1398:	ldr	r3, [r4]
    139c:	ldr	r2, [r5]
    13a0:	ldr	r1, [pc, #20]	; 13bc <coda_product_class_add_product_type+0xc0>
    13a4:	ldr	r0, [pc, #20]	; 13c0 <coda_product_class_add_product_type+0xc4>
    13a8:	bl	0 <coda_set_error>
    13ac:	mvn	r6, #0
    13b0:	b	1340 <coda_product_class_add_product_type+0x44>
    13b4:	.word	0x00000034
    13b8:	.word	0x00000084
    13bc:	.word	0x00000704
    13c0:	.word	0xfffffe70

000013c4 <coda_product_class_get_product_type>:
    13c4:	push	{r4, r5, r6, lr}
    13c8:	mov	r4, r0
    13cc:	ldr	r0, [r0, #36]	; 0x24
    13d0:	mov	r5, r1
    13d4:	bl	0 <coda_hashtable_get_index_from_name>
    13d8:	cmn	r0, #1
    13dc:	beq	13ec <coda_product_class_get_product_type+0x28>
    13e0:	ldr	r3, [r4, #32]
    13e4:	ldr	r0, [r3, r0, lsl #2]
    13e8:	pop	{r4, r5, r6, pc}
    13ec:	mov	r3, r5
    13f0:	ldr	r2, [r4]
    13f4:	ldr	r1, [pc, #12]	; 1408 <coda_product_class_get_product_type+0x44>
    13f8:	ldr	r0, [pc, #12]	; 140c <coda_product_class_get_product_type+0x48>
    13fc:	bl	0 <coda_set_error>
    1400:	mov	r0, #0
    1404:	pop	{r4, r5, r6, pc}
    1408:	.word	0x00000734
    140c:	.word	0xfffffe70

00001410 <coda_product_class_has_product_type>:
    1410:	push	{r4, lr}
    1414:	ldr	r0, [r0, #36]	; 0x24
    1418:	bl	0 <coda_hashtable_get_index_from_name>
    141c:	adds	r0, r0, #1
    1420:	movne	r0, #1
    1424:	pop	{r4, pc}

00001428 <coda_product_class_add_named_type>:
    1428:	push	{r4, r5, r6, lr}
    142c:	mov	r4, r0
    1430:	mov	r5, r1
    1434:	ldr	r0, [r0, #24]
    1438:	ldr	r1, [r1, #16]
    143c:	bl	0 <coda_hashtable_add_name>
    1440:	subs	r6, r0, #0
    1444:	bne	14ac <coda_product_class_add_named_type+0x84>
    1448:	ldr	r1, [r4, #16]
    144c:	tst	r1, #15
    1450:	beq	1478 <coda_product_class_add_named_type+0x50>
    1454:	ldr	r0, [r4, #20]
    1458:	ldr	r3, [r5, #4]
    145c:	add	r2, r1, #1
    1460:	add	r3, r3, #1
    1464:	str	r2, [r4, #16]
    1468:	str	r5, [r0, r1, lsl #2]
    146c:	str	r3, [r5, #4]
    1470:	mov	r0, r6
    1474:	pop	{r4, r5, r6, pc}
    1478:	add	r1, r1, #16
    147c:	ldr	r0, [r4, #20]
    1480:	lsl	r1, r1, #2
    1484:	bl	0 <realloc>
    1488:	cmp	r0, #0
    148c:	strne	r0, [r4, #20]
    1490:	ldrne	r1, [r4, #16]
    1494:	bne	1458 <coda_product_class_add_named_type+0x30>
    1498:	ldr	r3, [pc, #40]	; 14c8 <coda_product_class_add_named_type+0xa0>
    149c:	mov	r2, #848	; 0x350
    14a0:	ldr	r1, [pc, #36]	; 14cc <coda_product_class_add_named_type+0xa4>
    14a4:	ldr	r0, [pc, #36]	; 14d0 <coda_product_class_add_named_type+0xa8>
    14a8:	bl	0 <__assert_fail>
    14ac:	ldr	r3, [r4]
    14b0:	ldr	r2, [r5, #16]
    14b4:	ldr	r1, [pc, #24]	; 14d4 <coda_product_class_add_named_type+0xac>
    14b8:	ldr	r0, [pc, #24]	; 14d8 <coda_product_class_add_named_type+0xb0>
    14bc:	bl	0 <coda_set_error>
    14c0:	mvn	r6, #0
    14c4:	b	1470 <coda_product_class_add_named_type+0x48>
    14c8:	.word	0x00000144
    14cc:	.word	0x00000034
    14d0:	.word	0x000007a4
    14d4:	.word	0x00000774
    14d8:	.word	0xfffffe70

000014dc <coda_product_class_get_named_type>:
    14dc:	push	{r4, r5, r6, lr}
    14e0:	mov	r4, r0
    14e4:	ldr	r0, [r0, #24]
    14e8:	mov	r5, r1
    14ec:	bl	0 <coda_hashtable_get_index_from_name>
    14f0:	cmn	r0, #1
    14f4:	beq	1504 <coda_product_class_get_named_type+0x28>
    14f8:	ldr	r3, [r4, #20]
    14fc:	ldr	r0, [r3, r0, lsl #2]
    1500:	pop	{r4, r5, r6, pc}
    1504:	mov	r3, r5
    1508:	ldr	r2, [r4]
    150c:	ldr	r1, [pc, #12]	; 1520 <coda_product_class_get_named_type+0x44>
    1510:	ldr	r0, [pc, #12]	; 1524 <coda_product_class_get_named_type+0x48>
    1514:	bl	0 <coda_set_error>
    1518:	mov	r0, #0
    151c:	pop	{r4, r5, r6, pc}
    1520:	.word	0x000007bc
    1524:	.word	0xfffffe70

00001528 <coda_product_class_has_named_type>:
    1528:	push	{r4, lr}
    152c:	ldr	r0, [r0, #24]
    1530:	bl	0 <coda_hashtable_get_index_from_name>
    1534:	adds	r0, r0, #1
    1538:	movne	r0, #1
    153c:	pop	{r4, pc}

00001540 <coda_product_class_get_revision>:
    1540:	ldr	r0, [r0, #12]
    1544:	bx	lr

00001548 <coda_data_dictionary_add_product_class>:
    1548:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    154c:	mov	r6, r0
    1550:	ldr	r4, [pc, #280]	; 1670 <coda_data_dictionary_add_product_class+0x128>
    1554:	bl	0 <__aeabi_read_tp>
    1558:	sub	sp, sp, #8
    155c:	ldr	r3, [r0, r4]
    1560:	cmp	r3, #0
    1564:	beq	162c <coda_data_dictionary_add_product_class+0xe4>
    1568:	mov	r5, r0
    156c:	ldr	r1, [r6]
    1570:	ldr	r0, [r3, #8]
    1574:	bl	0 <coda_hashtable_add_name>
    1578:	cmp	r0, #0
    157c:	bne	1614 <coda_data_dictionary_add_product_class+0xcc>
    1580:	ldr	r9, [r5, r4]
    1584:	ldr	r8, [r9]
    1588:	tst	r8, #15
    158c:	beq	15ec <coda_data_dictionary_add_product_class+0xa4>
    1590:	ldr	sl, [r9, #4]
    1594:	cmp	r8, #0
    1598:	ble	15cc <coda_data_dictionary_add_product_class+0x84>
    159c:	mov	r4, sl
    15a0:	add	r7, sl, r8, lsl #2
    15a4:	ldr	r5, [r4]
    15a8:	ldr	r0, [r6]
    15ac:	add	r4, r4, #4
    15b0:	ldr	r1, [r5]
    15b4:	bl	0 <strcmp>
    15b8:	cmp	r0, #0
    15bc:	strlt	r6, [r4, #-4]
    15c0:	movlt	r6, r5
    15c4:	cmp	r7, r4
    15c8:	bne	15a4 <coda_data_dictionary_add_product_class+0x5c>
    15cc:	add	r3, r8, #1
    15d0:	str	r3, [r9]
    15d4:	str	r6, [sl, r8, lsl #2]
    15d8:	bl	120 <data_dictionary_rebuild_product_class_hash_data>
    15dc:	adds	r0, r0, #0
    15e0:	mvnne	r0, #0
    15e4:	add	sp, sp, #8
    15e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    15ec:	add	r1, r8, #16
    15f0:	ldr	r0, [r9, #4]
    15f4:	lsl	r1, r1, #2
    15f8:	bl	0 <realloc>
    15fc:	subs	sl, r0, #0
    1600:	beq	1640 <coda_data_dictionary_add_product_class+0xf8>
    1604:	ldr	r9, [r5, r4]
    1608:	ldr	r8, [r9]
    160c:	str	sl, [r9, #4]
    1610:	b	1594 <coda_data_dictionary_add_product_class+0x4c>
    1614:	ldr	r0, [pc, #88]	; 1674 <coda_data_dictionary_add_product_class+0x12c>
    1618:	ldr	r2, [r6]
    161c:	ldr	r1, [pc, #84]	; 1678 <coda_data_dictionary_add_product_class+0x130>
    1620:	bl	0 <coda_set_error>
    1624:	mvn	r0, #0
    1628:	b	15e4 <coda_data_dictionary_add_product_class+0x9c>
    162c:	ldr	r0, [pc, #64]	; 1674 <coda_data_dictionary_add_product_class+0x12c>
    1630:	ldr	r1, [pc, #68]	; 167c <coda_data_dictionary_add_product_class+0x134>
    1634:	bl	0 <coda_set_error>
    1638:	mvn	r0, #0
    163c:	b	15e4 <coda_data_dictionary_add_product_class+0x9c>
    1640:	ldr	r2, [r5, r4]
    1644:	ldr	r0, [pc, #52]	; 1680 <coda_data_dictionary_add_product_class+0x138>
    1648:	ldr	r3, [pc, #52]	; 1684 <coda_data_dictionary_add_product_class+0x13c>
    164c:	ldr	r2, [r2]
    1650:	ldr	r1, [pc, #48]	; 1688 <coda_data_dictionary_add_product_class+0x140>
    1654:	add	r2, r2, #16
    1658:	str	r0, [sp]
    165c:	lsl	r2, r2, #2
    1660:	mvn	r0, #0
    1664:	bl	0 <coda_set_error>
    1668:	mvn	r0, #0
    166c:	b	15e4 <coda_data_dictionary_add_product_class+0x9c>
    1670:	.word	0x00000000
    1674:	.word	0xfffffe70
    1678:	.word	0x00000818
    167c:	.word	0x000007f8
    1680:	.word	0x000003e2
    1684:	.word	0x00000034
    1688:	.word	0x00000084

0000168c <coda_data_dictionary_get_product_class>:
    168c:	push	{r4, r5, r6, r7, r8, lr}
    1690:	mov	r7, r0
    1694:	ldr	r5, [pc, #96]	; 16fc <coda_data_dictionary_get_product_class+0x70>
    1698:	bl	0 <__aeabi_read_tp>
    169c:	ldr	r4, [r0, r5]
    16a0:	cmp	r4, #0
    16a4:	beq	16d0 <coda_data_dictionary_get_product_class+0x44>
    16a8:	mov	r6, r0
    16ac:	mov	r1, r7
    16b0:	ldr	r0, [r4, #8]
    16b4:	bl	0 <coda_hashtable_get_index_from_name>
    16b8:	cmn	r0, #1
    16bc:	beq	16e4 <coda_data_dictionary_get_product_class+0x58>
    16c0:	ldr	r3, [r6, r5]
    16c4:	ldr	r3, [r3, #4]
    16c8:	ldr	r0, [r3, r0, lsl #2]
    16cc:	pop	{r4, r5, r6, r7, r8, pc}
    16d0:	ldr	r1, [pc, #40]	; 1700 <coda_data_dictionary_get_product_class+0x74>
    16d4:	ldr	r0, [pc, #40]	; 1704 <coda_data_dictionary_get_product_class+0x78>
    16d8:	bl	0 <coda_set_error>
    16dc:	mov	r0, r4
    16e0:	pop	{r4, r5, r6, r7, r8, pc}
    16e4:	mov	r2, r7
    16e8:	ldr	r1, [pc, #24]	; 1708 <coda_data_dictionary_get_product_class+0x7c>
    16ec:	ldr	r0, [pc, #16]	; 1704 <coda_data_dictionary_get_product_class+0x78>
    16f0:	bl	0 <coda_set_error>
    16f4:	mov	r0, #0
    16f8:	pop	{r4, r5, r6, r7, r8, pc}
    16fc:	.word	0x00000000
    1700:	.word	0x000007f8
    1704:	.word	0xfffffe70
    1708:	.word	0x00000834

0000170c <coda_data_dictionary_has_product_class>:
    170c:	ldr	r3, [pc, #48]	; 1744 <coda_data_dictionary_has_product_class+0x38>
    1710:	push	{r4, lr}
    1714:	mov	r1, r0
    1718:	bl	0 <__aeabi_read_tp>
    171c:	ldr	r3, [r3, r0]
    1720:	cmp	r3, #0
    1724:	beq	173c <coda_data_dictionary_has_product_class+0x30>
    1728:	ldr	r0, [r3, #8]
    172c:	bl	0 <coda_hashtable_get_index_from_name>
    1730:	adds	r0, r0, #1
    1734:	movne	r0, #1
    1738:	pop	{r4, pc}
    173c:	mov	r0, r3
    1740:	pop	{r4, pc}
    1744:	.word	0x00000000

00001748 <coda_data_dictionary_remove_product_class>:
    1748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    174c:	mov	r4, r0
    1750:	ldr	r6, [pc, #500]	; 194c <coda_data_dictionary_remove_product_class+0x204>
    1754:	bl	0 <__aeabi_read_tp>
    1758:	sub	sp, sp, #12
    175c:	ldr	r3, [r6, r0]
    1760:	cmp	r3, #0
    1764:	beq	1924 <coda_data_dictionary_remove_product_class+0x1dc>
    1768:	mov	r7, r0
    176c:	ldr	r1, [r4]
    1770:	ldr	r0, [r3, #8]
    1774:	bl	0 <coda_hashtable_get_index_from_name>
    1778:	cmn	r0, #1
    177c:	mov	r5, r0
    1780:	beq	1938 <coda_data_dictionary_remove_product_class+0x1f0>
    1784:	ldr	r0, [r6, r7]
    1788:	add	r3, r5, #1
    178c:	ldr	r1, [r0]
    1790:	cmp	r3, r1
    1794:	bge	17b8 <coda_data_dictionary_remove_product_class+0x70>
    1798:	ldr	r3, [r0, #4]
    179c:	sub	r2, r1, #-1073741823	; 0xc0000001
    17a0:	add	r5, r3, r5, lsl #2
    17a4:	add	r2, r3, r2, lsl #2
    17a8:	ldr	r3, [r5, #4]
    17ac:	str	r3, [r5], #4
    17b0:	cmp	r2, r5
    17b4:	bne	17a8 <coda_data_dictionary_remove_product_class+0x60>
    17b8:	sub	r1, r1, #1
    17bc:	str	r1, [r0]
    17c0:	mov	r0, r4
    17c4:	bl	f50 <coda_product_class_delete>
    17c8:	bl	120 <data_dictionary_rebuild_product_class_hash_data>
    17cc:	subs	r5, r0, #0
    17d0:	bne	18cc <coda_data_dictionary_remove_product_class+0x184>
    17d4:	bl	0 <__aeabi_read_tp>
    17d8:	ldr	r3, [r6, r0]
    17dc:	mov	r8, r5
    17e0:	mov	r7, r5
    17e4:	add	r4, r8, #2
    17e8:	add	r8, r8, #1
    17ec:	lsl	r4, r4, #2
    17f0:	add	r2, r3, r4
    17f4:	ldr	r2, [r2, #4]
    17f8:	subs	r0, r2, #0
    17fc:	beq	1814 <coda_data_dictionary_remove_product_class+0xcc>
    1800:	bl	0 <coda_detection_tree_delete>
    1804:	bl	0 <__aeabi_read_tp>
    1808:	ldr	r3, [r6, r0]
    180c:	add	r4, r3, r4
    1810:	str	r7, [r4, #4]
    1814:	cmp	r8, #10
    1818:	bne	17e4 <coda_data_dictionary_remove_product_class+0x9c>
    181c:	ldr	r2, [r3]
    1820:	cmp	r2, #0
    1824:	ble	18d0 <coda_data_dictionary_remove_product_class+0x188>
    1828:	mov	r7, #16
    182c:	str	r5, [sp, #4]
    1830:	ldr	r2, [r3, #4]
    1834:	ldr	r1, [sp, #4]
    1838:	ldr	sl, [r2, r1, lsl #2]
    183c:	ldr	r2, [sl, #28]
    1840:	cmp	r2, #0
    1844:	ble	1908 <coda_data_dictionary_remove_product_class+0x1c0>
    1848:	str	r5, [sp]
    184c:	ldr	r1, [sl, #32]
    1850:	ldr	r0, [sp]
    1854:	ldr	r9, [r1, r0, lsl #2]
    1858:	ldr	r1, [r9, #8]
    185c:	cmp	r1, #0
    1860:	ble	18f4 <coda_data_dictionary_remove_product_class+0x1ac>
    1864:	mov	r8, r5
    1868:	ldr	r2, [r9, #12]
    186c:	ldr	fp, [r2, r8, lsl #2]
    1870:	ldr	r2, [fp, #16]
    1874:	cmp	r2, #0
    1878:	ble	18e4 <coda_data_dictionary_remove_product_class+0x19c>
    187c:	mov	r4, r5
    1880:	b	1898 <coda_data_dictionary_remove_product_class+0x150>
    1884:	ldr	r3, [fp, #16]
    1888:	bl	0 <__aeabi_read_tp>
    188c:	cmp	r4, r3
    1890:	bge	18dc <coda_data_dictionary_remove_product_class+0x194>
    1894:	ldr	r3, [r6, r0]
    1898:	ldr	r2, [fp, #20]
    189c:	mov	r0, r7
    18a0:	ldr	r1, [r2, r4, lsl #2]
    18a4:	add	r4, r4, #1
    18a8:	ldr	r2, [r1, #8]
    18ac:	ldr	r2, [r2]
    18b0:	add	ip, r2, #3
    18b4:	cmp	r2, #0
    18b8:	lslne	r0, ip, #2
    18bc:	add	r0, r3, r0
    18c0:	bl	0 <coda_detection_tree_add_rule>
    18c4:	cmp	r0, #0
    18c8:	beq	1884 <coda_data_dictionary_remove_product_class+0x13c>
    18cc:	mvn	r5, #0
    18d0:	mov	r0, r5
    18d4:	add	sp, sp, #12
    18d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18dc:	ldr	r1, [r9, #8]
    18e0:	ldr	r3, [r6, r0]
    18e4:	add	r8, r8, #1
    18e8:	cmp	r8, r1
    18ec:	blt	1868 <coda_data_dictionary_remove_product_class+0x120>
    18f0:	ldr	r2, [sl, #28]
    18f4:	ldr	r1, [sp]
    18f8:	add	r1, r1, #1
    18fc:	cmp	r1, r2
    1900:	str	r1, [sp]
    1904:	blt	184c <coda_data_dictionary_remove_product_class+0x104>
    1908:	ldr	r1, [sp, #4]
    190c:	ldr	r2, [r3]
    1910:	add	r1, r1, #1
    1914:	cmp	r1, r2
    1918:	str	r1, [sp, #4]
    191c:	blt	1830 <coda_data_dictionary_remove_product_class+0xe8>
    1920:	b	18d0 <coda_data_dictionary_remove_product_class+0x188>
    1924:	ldr	r1, [pc, #36]	; 1950 <coda_data_dictionary_remove_product_class+0x208>
    1928:	ldr	r0, [pc, #36]	; 1954 <coda_data_dictionary_remove_product_class+0x20c>
    192c:	bl	0 <coda_set_error>
    1930:	mvn	r5, #0
    1934:	b	18d0 <coda_data_dictionary_remove_product_class+0x188>
    1938:	ldr	r2, [r4]
    193c:	ldr	r1, [pc, #20]	; 1958 <coda_data_dictionary_remove_product_class+0x210>
    1940:	ldr	r0, [pc, #12]	; 1954 <coda_data_dictionary_remove_product_class+0x20c>
    1944:	bl	0 <coda_set_error>
    1948:	b	18d0 <coda_data_dictionary_remove_product_class+0x188>
    194c:	.word	0x00000000
    1950:	.word	0x000007f8
    1954:	.word	0xfffffe70
    1958:	.word	0x00000834

0000195c <coda_data_dictionary_get_definition>:
    195c:	push	{r4, r5, r6, lr}
    1960:	mov	r5, r1
    1964:	mov	r4, r2
    1968:	mov	r6, r3
    196c:	bl	168c <coda_data_dictionary_get_product_class>
    1970:	cmp	r0, #0
    1974:	beq	19bc <coda_data_dictionary_get_definition+0x60>
    1978:	mov	r1, r5
    197c:	bl	13c4 <coda_product_class_get_product_type>
    1980:	cmp	r0, #0
    1984:	beq	19bc <coda_data_dictionary_get_definition+0x60>
    1988:	cmp	r4, #0
    198c:	blt	19b0 <coda_data_dictionary_get_definition+0x54>
    1990:	mov	r1, r4
    1994:	bl	e5c <coda_product_type_get_product_definition_by_version>
    1998:	mov	r3, r0
    199c:	cmp	r3, #0
    19a0:	beq	19bc <coda_data_dictionary_get_definition+0x60>
    19a4:	mov	r0, #0
    19a8:	str	r3, [r6]
    19ac:	pop	{r4, r5, r6, pc}
    19b0:	bl	ecc <coda_product_type_get_latest_product_definition>
    19b4:	mov	r3, r0
    19b8:	b	199c <coda_data_dictionary_get_definition+0x40>
    19bc:	mvn	r0, #0
    19c0:	pop	{r4, r5, r6, pc}

000019c4 <coda_data_dictionary_get_detection_tree>:
    19c4:	ldr	r2, [pc, #32]	; 19ec <coda_data_dictionary_get_detection_tree+0x28>
    19c8:	cmp	r0, #0
    19cc:	movne	r3, r0
    19d0:	moveq	r3, #1
    19d4:	push	{lr}		; (str lr, [sp, #-4]!)
    19d8:	bl	0 <__aeabi_read_tp>
    19dc:	ldr	r0, [r2, r0]
    19e0:	add	r0, r0, r3, lsl #2
    19e4:	ldr	r0, [r0, #12]
    19e8:	pop	{pc}		; (ldr pc, [sp], #4)
    19ec:	.word	0x00000000

000019f0 <coda_data_dictionary_find_definition_for_product>:
    19f0:	push	{r4, r5, lr}
    19f4:	mov	r4, r0
    19f8:	sub	sp, sp, #524	; 0x20c
    19fc:	mov	r5, r1
    1a00:	mov	r0, sp
    1a04:	mov	r1, r4
    1a08:	bl	0 <coda_cursor_set_product>
    1a0c:	cmp	r0, #0
    1a10:	bne	1a48 <coda_data_dictionary_find_definition_for_product+0x58>
    1a14:	ldr	r3, [r4, #16]
    1a18:	ldr	r2, [pc, #48]	; 1a50 <coda_data_dictionary_find_definition_for_product+0x60>
    1a1c:	bl	0 <__aeabi_read_tp>
    1a20:	cmp	r3, #0
    1a24:	ldr	r1, [r2, r0]
    1a28:	moveq	r3, #1
    1a2c:	mov	r2, r5
    1a30:	add	r3, r1, r3, lsl #2
    1a34:	mov	r1, sp
    1a38:	ldr	r0, [r3, #12]
    1a3c:	bl	0 <coda_evaluate_detection_node>
    1a40:	add	sp, sp, #524	; 0x20c
    1a44:	pop	{r4, r5, pc}
    1a48:	mvn	r0, #0
    1a4c:	b	1a40 <coda_data_dictionary_find_definition_for_product+0x50>
    1a50:	.word	0x00000000

00001a54 <coda_data_dictionary_init>:
    1a54:	push	{r4, r5, r6, lr}
    1a58:	bl	0 <__aeabi_read_tp>
    1a5c:	ldr	r6, [pc, #208]	; 1b34 <coda_data_dictionary_init+0xe0>
    1a60:	sub	sp, sp, #8
    1a64:	ldr	r5, [r6, r0]
    1a68:	cmp	r5, #0
    1a6c:	bne	1b20 <coda_data_dictionary_init+0xcc>
    1a70:	mov	r0, #52	; 0x34
    1a74:	bl	0 <malloc>
    1a78:	subs	r4, r0, #0
    1a7c:	beq	1ad0 <coda_data_dictionary_init+0x7c>
    1a80:	mov	r3, r4
    1a84:	mov	r1, r5
    1a88:	add	r2, r4, #48	; 0x30
    1a8c:	str	r5, [r4]
    1a90:	str	r5, [r4, #4]
    1a94:	str	r5, [r3, #8]!
    1a98:	str	r1, [r3, #4]!
    1a9c:	cmp	r2, r3
    1aa0:	bne	1a98 <coda_data_dictionary_init+0x44>
    1aa4:	mov	r0, #1
    1aa8:	bl	0 <coda_hashtable_new>
    1aac:	cmp	r0, #0
    1ab0:	str	r0, [r4, #8]
    1ab4:	beq	1b00 <coda_data_dictionary_init+0xac>
    1ab8:	mov	r3, #0
    1abc:	bl	0 <__aeabi_read_tp>
    1ac0:	str	r4, [r6, r0]
    1ac4:	mov	r0, r3
    1ac8:	add	sp, sp, #8
    1acc:	pop	{r4, r5, r6, pc}
    1ad0:	mov	r3, #920	; 0x398
    1ad4:	str	r3, [sp]
    1ad8:	mov	r2, #52	; 0x34
    1adc:	ldr	r3, [pc, #84]	; 1b38 <coda_data_dictionary_init+0xe4>
    1ae0:	ldr	r1, [pc, #84]	; 1b3c <coda_data_dictionary_init+0xe8>
    1ae4:	mvn	r0, #0
    1ae8:	bl	0 <coda_set_error>
    1aec:	mov	r2, #0
    1af0:	bl	0 <__aeabi_read_tp>
    1af4:	mvn	r3, #0
    1af8:	str	r2, [r6, r0]
    1afc:	b	1ac4 <coda_data_dictionary_init+0x70>
    1b00:	ldr	r3, [pc, #56]	; 1b40 <coda_data_dictionary_init+0xec>
    1b04:	ldr	r2, [pc, #44]	; 1b38 <coda_data_dictionary_init+0xe4>
    1b08:	ldr	r1, [pc, #52]	; 1b44 <coda_data_dictionary_init+0xf0>
    1b0c:	mvn	r0, #0
    1b10:	bl	0 <coda_set_error>
    1b14:	mov	r0, r4
    1b18:	bl	102c <delete_data_dictionary>
    1b1c:	b	1aec <coda_data_dictionary_init+0x98>
    1b20:	ldr	r3, [pc, #32]	; 1b48 <coda_data_dictionary_init+0xf4>
    1b24:	mov	r2, #1200	; 0x4b0
    1b28:	ldr	r1, [pc, #8]	; 1b38 <coda_data_dictionary_init+0xe4>
    1b2c:	ldr	r0, [pc, #24]	; 1b4c <coda_data_dictionary_init+0xf8>
    1b30:	bl	0 <__assert_fail>
    1b34:	.word	0x00000000
    1b38:	.word	0x00000034
    1b3c:	.word	0x00000084
    1b40:	.word	0x000003a7
    1b44:	.word	0x000000e4
    1b48:	.word	0x00000168
    1b4c:	.word	0x00000874

00001b50 <coda_data_dictionary_done>:
    1b50:	push	{r4, r5, r6, lr}
    1b54:	bl	0 <__aeabi_read_tp>
    1b58:	ldr	r4, [pc, #48]	; 1b90 <coda_data_dictionary_done+0x40>
    1b5c:	mov	r5, r0
    1b60:	ldr	r0, [r0, r4]
    1b64:	cmp	r0, #0
    1b68:	beq	1b7c <coda_data_dictionary_done+0x2c>
    1b6c:	bl	102c <delete_data_dictionary>
    1b70:	mov	r3, #0
    1b74:	str	r3, [r5, r4]
    1b78:	pop	{r4, r5, r6, pc}
    1b7c:	ldr	r3, [pc, #16]	; 1b94 <coda_data_dictionary_done+0x44>
    1b80:	ldr	r2, [pc, #16]	; 1b98 <coda_data_dictionary_done+0x48>
    1b84:	ldr	r1, [pc, #16]	; 1b9c <coda_data_dictionary_done+0x4c>
    1b88:	ldr	r0, [pc, #16]	; 1ba0 <coda_data_dictionary_done+0x50>
    1b8c:	bl	0 <__assert_fail>
    1b90:	.word	0x00000000
    1b94:	.word	0x00000184
    1b98:	.word	0x000004bd
    1b9c:	.word	0x00000034
    1ba0:	.word	0x00000898
