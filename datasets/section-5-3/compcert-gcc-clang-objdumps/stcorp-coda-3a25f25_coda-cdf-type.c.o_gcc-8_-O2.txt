
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <basic_type_init.isra.0>:
   0:	sub	r3, r1, #1
   4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   8:	mov	r4, r1
   c:	mov	r5, r0
  10:	strd	r6, [sp, #8]
  14:	str	r8, [sp, #16]
  18:	str	lr, [sp, #20]
  1c:	cmp	r3, #51	; 0x33
  20:	ldrls	pc, [pc, r3, lsl #2]
  24:	b	218 <basic_type_init.isra.0+0x218>
  28:	.word	0x000000f8
  2c:	.word	0x0000015c
  30:	.word	0x00000218
  34:	.word	0x0000016c
  38:	.word	0x00000218
  3c:	.word	0x00000218
  40:	.word	0x00000218
  44:	.word	0x0000017c
  48:	.word	0x00000218
  4c:	.word	0x00000218
  50:	.word	0x00000190
  54:	.word	0x000001a4
  58:	.word	0x00000218
  5c:	.word	0x000001b8
  60:	.word	0x00000218
  64:	.word	0x00000218
  68:	.word	0x00000218
  6c:	.word	0x00000218
  70:	.word	0x00000218
  74:	.word	0x00000218
  78:	.word	0x000001cc
  7c:	.word	0x000001e0
  80:	.word	0x00000218
  84:	.word	0x00000218
  88:	.word	0x00000218
  8c:	.word	0x00000218
  90:	.word	0x00000218
  94:	.word	0x00000218
  98:	.word	0x00000218
  9c:	.word	0x00000218
  a0:	.word	0x00000218
  a4:	.word	0x00000218
  a8:	.word	0x00000218
  ac:	.word	0x00000218
  b0:	.word	0x00000218
  b4:	.word	0x00000218
  b8:	.word	0x00000218
  bc:	.word	0x00000218
  c0:	.word	0x00000218
  c4:	.word	0x00000218
  c8:	.word	0x000000f8
  cc:	.word	0x00000218
  d0:	.word	0x00000218
  d4:	.word	0x000001cc
  d8:	.word	0x000001e0
  dc:	.word	0x00000218
  e0:	.word	0x00000218
  e4:	.word	0x00000218
  e8:	.word	0x00000218
  ec:	.word	0x00000218
  f0:	.word	0x000001f4
  f4:	.word	0x000001f4
  f8:	mov	r6, #1
  fc:	mov	r7, #0
 100:	mov	r4, #0
 104:	mov	r1, #2
 108:	mov	r0, #5
 10c:	bl	0 <coda_type_number_new>
 110:	str	r0, [r5]
 114:	cmp	r0, #0
 118:	beq	234 <basic_type_init.isra.0+0x234>
 11c:	mov	r1, r4
 120:	bl	0 <coda_type_set_read_type>
 124:	cmp	r0, #0
 128:	bne	234 <basic_type_init.isra.0+0x234>
 12c:	mov	r2, r6
 130:	mov	r3, r7
 134:	ldr	r0, [r5]
 138:	bl	0 <coda_type_set_byte_size>
 13c:	adds	r0, r0, #0
 140:	movne	r0, #1
 144:	rsb	r0, r0, #0
 148:	ldrd	r4, [sp]
 14c:	ldrd	r6, [sp, #8]
 150:	ldr	r8, [sp, #16]
 154:	add	sp, sp, #20
 158:	pop	{pc}		; (ldr pc, [sp], #4)
 15c:	mov	r6, #2
 160:	mov	r7, #0
 164:	mov	r1, #2
 168:	b	108 <basic_type_init.isra.0+0x108>
 16c:	mov	r6, #4
 170:	mov	r7, #0
 174:	mov	r1, #2
 178:	b	108 <basic_type_init.isra.0+0x108>
 17c:	mov	r6, #8
 180:	mov	r7, #0
 184:	mov	r4, #6
 188:	mov	r1, #2
 18c:	b	108 <basic_type_init.isra.0+0x108>
 190:	mov	r6, #1
 194:	mov	r7, #0
 198:	mov	r4, #1
 19c:	mov	r1, #2
 1a0:	b	108 <basic_type_init.isra.0+0x108>
 1a4:	mov	r6, #2
 1a8:	mov	r7, #0
 1ac:	mov	r4, #3
 1b0:	mov	r1, #2
 1b4:	b	108 <basic_type_init.isra.0+0x108>
 1b8:	mov	r6, #4
 1bc:	mov	r7, #0
 1c0:	mov	r4, #5
 1c4:	mov	r1, #2
 1c8:	b	108 <basic_type_init.isra.0+0x108>
 1cc:	mov	r6, #4
 1d0:	mov	r7, #0
 1d4:	mov	r4, #8
 1d8:	mov	r1, #3
 1dc:	b	108 <basic_type_init.isra.0+0x108>
 1e0:	mov	r6, #8
 1e4:	mov	r7, #0
 1e8:	mov	r4, #9
 1ec:	mov	r1, #3
 1f0:	b	108 <basic_type_init.isra.0+0x108>
 1f4:	cmp	r2, #1
 1f8:	mov	r0, #5
 1fc:	asr	r7, r2, #31
 200:	moveq	r4, #10
 204:	movne	r4, #11
 208:	mov	r6, r2
 20c:	bl	0 <coda_type_text_new>
 210:	str	r0, [r5]
 214:	b	114 <basic_type_init.isra.0+0x114>
 218:	mov	r2, r1
 21c:	mvn	r0, #99	; 0x63
 220:	movw	r1, #0
 224:	movt	r1, #0
 228:	bl	0 <coda_set_error>
 22c:	mvn	r0, #0
 230:	b	148 <basic_type_init.isra.0+0x148>
 234:	mvn	r0, #0
 238:	b	148 <basic_type_init.isra.0+0x148>

0000023c <coda_cdf_type_delete>:
 23c:	str	r4, [sp, #-8]!
 240:	subs	r4, r0, #0
 244:	str	lr, [sp, #4]
 248:	beq	2e8 <coda_cdf_type_delete+0xac>
 24c:	ldr	r3, [r4]
 250:	cmp	r3, #103	; 0x67
 254:	bne	308 <coda_cdf_type_delete+0xcc>
 258:	ldr	r3, [r4, #8]
 25c:	cmp	r3, #1
 260:	beq	2d4 <coda_cdf_type_delete+0x98>
 264:	cmp	r3, #2
 268:	beq	290 <coda_cdf_type_delete+0x54>
 26c:	ldr	r0, [r4, #4]
 270:	cmp	r0, #0
 274:	beq	27c <coda_cdf_type_delete+0x40>
 278:	bl	0 <coda_type_release>
 27c:	mov	r0, r4
 280:	ldr	r4, [sp]
 284:	ldr	lr, [sp, #4]
 288:	add	sp, sp, #8
 28c:	b	0 <free>
 290:	ldr	r0, [r4, #12]
 294:	cmp	r0, #0
 298:	beq	2a0 <coda_cdf_type_delete+0x64>
 29c:	bl	0 <coda_dynamic_type_delete>
 2a0:	ldr	r0, [r4, #16]
 2a4:	cmp	r0, #0
 2a8:	beq	2b0 <coda_cdf_type_delete+0x74>
 2ac:	bl	0 <coda_dynamic_type_delete>
 2b0:	ldr	r0, [r4, #36]	; 0x24
 2b4:	cmp	r0, #0
 2b8:	beq	2c0 <coda_cdf_type_delete+0x84>
 2bc:	bl	0 <free>
 2c0:	ldr	r0, [r4, #40]	; 0x28
 2c4:	cmp	r0, #0
 2c8:	beq	26c <coda_cdf_type_delete+0x30>
 2cc:	bl	0 <free>
 2d0:	b	26c <coda_cdf_type_delete+0x30>
 2d4:	ldr	r0, [r4, #12]
 2d8:	cmp	r0, #0
 2dc:	beq	26c <coda_cdf_type_delete+0x30>
 2e0:	bl	0 <coda_dynamic_type_delete>
 2e4:	b	26c <coda_cdf_type_delete+0x30>
 2e8:	movw	r3, #0
 2ec:	movt	r3, #0
 2f0:	movw	r1, #0
 2f4:	movt	r1, #0
 2f8:	movw	r0, #0
 2fc:	movt	r0, #0
 300:	mov	r2, #39	; 0x27
 304:	bl	0 <__assert_fail>
 308:	movw	r3, #0
 30c:	movt	r3, #0
 310:	movw	r1, #0
 314:	movt	r1, #0
 318:	movw	r0, #0
 31c:	movt	r0, #0
 320:	mov	r2, #40	; 0x28
 324:	bl	0 <__assert_fail>

00000328 <time_type_new>:
 328:	strd	r4, [sp, #-20]!	; 0xffffffec
 32c:	sub	r5, r0, #31
 330:	bics	r5, r5, #2
 334:	strd	r6, [sp, #8]
 338:	str	lr, [sp, #16]
 33c:	sub	sp, sp, #20
 340:	bne	434 <time_type_new+0x10c>
 344:	mov	r6, r0
 348:	mov	r0, #20
 34c:	mov	r7, r1
 350:	bl	0 <malloc>
 354:	subs	r4, r0, #0
 358:	beq	40c <time_type_new+0xe4>
 35c:	mov	r2, #103	; 0x67
 360:	cmp	r6, #31
 364:	movw	r3, #0
 368:	movt	r3, #0
 36c:	stm	r4, {r2, r5}
 370:	mov	r2, #1
 374:	movw	r0, #0
 378:	movt	r0, #0
 37c:	add	r1, sp, #12
 380:	movne	r0, r3
 384:	str	r2, [r4, #8]
 388:	str	r5, [r4, #12]
 38c:	str	r6, [r4, #16]
 390:	bl	0 <coda_expression_from_string>
 394:	subs	r6, r0, #0
 398:	bne	3ec <time_type_new+0xc4>
 39c:	mov	r0, #5
 3a0:	ldr	r1, [sp, #12]
 3a4:	bl	0 <coda_type_time_new>
 3a8:	cmp	r0, #0
 3ac:	mov	r5, r0
 3b0:	str	r0, [r4, #4]
 3b4:	beq	3e4 <time_type_new+0xbc>
 3b8:	ldr	r1, [r7, #4]
 3bc:	bl	0 <coda_type_time_set_base_type>
 3c0:	cmp	r0, #0
 3c4:	streq	r7, [r4, #12]
 3c8:	bne	3fc <time_type_new+0xd4>
 3cc:	mov	r0, r4
 3d0:	add	sp, sp, #20
 3d4:	ldrd	r4, [sp]
 3d8:	ldrd	r6, [sp, #8]
 3dc:	add	sp, sp, #16
 3e0:	pop	{pc}		; (ldr pc, [sp], #4)
 3e4:	ldr	r0, [sp, #12]
 3e8:	bl	0 <coda_expression_delete>
 3ec:	mov	r0, r4
 3f0:	mov	r4, r5
 3f4:	bl	23c <coda_cdf_type_delete>
 3f8:	b	3cc <time_type_new+0xa4>
 3fc:	mov	r0, r4
 400:	mov	r4, r6
 404:	bl	23c <coda_cdf_type_delete>
 408:	b	3cc <time_type_new+0xa4>
 40c:	mov	r0, #217	; 0xd9
 410:	movw	r3, #0
 414:	movt	r3, #0
 418:	movw	r1, #0
 41c:	movt	r1, #0
 420:	mov	r2, #20
 424:	str	r0, [sp]
 428:	mvn	r0, #0
 42c:	bl	0 <coda_set_error>
 430:	b	3cc <time_type_new+0xa4>
 434:	movw	r1, #0
 438:	movt	r1, #0
 43c:	ldr	r3, [pc, #12]	; 450 <time_type_new+0x128>
 440:	movw	r0, #0
 444:	movt	r0, #0
 448:	mov	r2, #211	; 0xd3
 44c:	bl	0 <__assert_fail>
 450:	.word	0x00000018

00000454 <coda_cdf_variable_new>:
 454:	clz	ip, r1
 458:	cmp	r2, #0
 45c:	strd	r4, [sp, #-36]!	; 0xffffffdc
 460:	lsr	ip, ip, #5
 464:	movne	ip, #1
 468:	strd	r6, [sp, #8]
 46c:	strd	r8, [sp, #16]
 470:	strd	sl, [sp, #24]
 474:	cmp	ip, #0
 478:	str	lr, [sp, #32]
 47c:	sub	sp, sp, #20
 480:	ldr	r5, [sp, #60]	; 0x3c
 484:	str	r1, [sp, #12]
 488:	ldr	r6, [sp, #64]	; 0x40
 48c:	beq	84c <coda_cdf_variable_new+0x3f8>
 490:	mov	r7, r0
 494:	mov	r0, #44	; 0x2c
 498:	mov	r8, r3
 49c:	mov	r9, r2
 4a0:	bl	0 <malloc>
 4a4:	subs	r4, r0, #0
 4a8:	beq	7b0 <coda_cdf_variable_new+0x35c>
 4ac:	ldr	r3, [sp, #72]	; 0x48
 4b0:	mov	r2, #0
 4b4:	mov	r1, #103	; 0x67
 4b8:	mov	ip, #2
 4bc:	mvn	r0, #0
 4c0:	cmp	r9, r2
 4c4:	stm	r4, {r1, r2, ip}
 4c8:	mov	r1, #1
 4cc:	str	r2, [r4, #12]
 4d0:	str	r2, [r4, #16]
 4d4:	str	r1, [r4, #20]
 4d8:	str	r1, [r4, #24]
 4dc:	str	r0, [r4, #28]
 4e0:	str	r3, [r4, #32]
 4e4:	str	r2, [r4, #36]	; 0x24
 4e8:	str	r2, [r4, #40]	; 0x28
 4ec:	bne	5f0 <coda_cdf_variable_new+0x19c>
 4f0:	cmp	r8, r2
 4f4:	ble	524 <coda_cdf_variable_new+0xd0>
 4f8:	ldr	r2, [r5]
 4fc:	cmp	r2, #0
 500:	bne	5f0 <coda_cdf_variable_new+0x19c>
 504:	mov	r1, r5
 508:	b	518 <coda_cdf_variable_new+0xc4>
 50c:	ldr	r3, [r1, #4]!
 510:	cmp	r3, #0
 514:	bne	5f0 <coda_cdf_variable_new+0x19c>
 518:	add	r2, r2, #1
 51c:	cmp	r8, r2
 520:	bne	50c <coda_cdf_variable_new+0xb8>
 524:	sub	r3, r7, #31
 528:	bics	r3, r3, #2
 52c:	mvnne	fp, #0
 530:	beq	778 <coda_cdf_variable_new+0x324>
 534:	mov	r1, r7
 538:	add	r0, r4, #4
 53c:	ldr	r2, [sp, #68]	; 0x44
 540:	bl	0 <basic_type_init.isra.0>
 544:	cmp	r0, #0
 548:	bne	738 <coda_cdf_variable_new+0x2e4>
 54c:	ldr	r3, [r4, #4]
 550:	mov	r7, #1
 554:	ldr	r1, [r3, #24]
 558:	ldr	r2, [r3, #28]
 55c:	asr	r3, r2, #31
 560:	and	r3, r3, #7
 564:	adds	r3, r3, r1
 568:	lsr	r3, r3, #3
 56c:	adc	r0, r0, r2
 570:	orr	r3, r3, r0, lsl #29
 574:	str	r3, [r4, #28]
 578:	ldr	r8, [r4, #20]
 57c:	lsl	r6, r8, #3
 580:	mov	r0, r6
 584:	bl	0 <malloc>
 588:	cmp	r0, #0
 58c:	mov	r5, r0
 590:	str	r0, [r4, #36]	; 0x24
 594:	beq	818 <coda_cdf_variable_new+0x3c4>
 598:	cmp	r8, #0
 59c:	mvngt	r8, #0
 5a0:	mvngt	r9, #0
 5a4:	addgt	r2, r0, r6
 5a8:	ble	5b8 <coda_cdf_variable_new+0x164>
 5ac:	strd	r8, [r0], #8
 5b0:	cmp	r0, r2
 5b4:	bne	5ac <coda_cdf_variable_new+0x158>
 5b8:	ldr	r2, [sp, #76]	; 0x4c
 5bc:	adds	r3, fp, #1
 5c0:	movne	r3, #1
 5c4:	tst	r7, r3
 5c8:	str	r4, [r2]
 5cc:	bne	75c <coda_cdf_variable_new+0x308>
 5d0:	mov	r0, r4
 5d4:	add	sp, sp, #20
 5d8:	ldrd	r4, [sp]
 5dc:	ldrd	r6, [sp, #8]
 5e0:	ldrd	r8, [sp, #16]
 5e4:	ldrd	sl, [sp, #24]
 5e8:	add	sp, sp, #32
 5ec:	pop	{pc}		; (ldr pc, [sp], #4)
 5f0:	sub	r2, r7, #31
 5f4:	bics	r3, r2, #2
 5f8:	mvnne	fp, #0
 5fc:	beq	748 <coda_cdf_variable_new+0x2f4>
 600:	mov	r0, #12
 604:	bl	0 <malloc>
 608:	subs	sl, r0, #0
 60c:	beq	7ec <coda_cdf_variable_new+0x398>
 610:	mov	r3, #0
 614:	mov	r0, #103	; 0x67
 618:	ldr	r2, [sp, #68]	; 0x44
 61c:	mov	r1, r7
 620:	stm	sl, {r0, r3}
 624:	add	r0, sl, #4
 628:	str	r3, [sl, #8]
 62c:	bl	0 <basic_type_init.isra.0>
 630:	cmp	r0, #0
 634:	bne	7d8 <coda_cdf_variable_new+0x384>
 638:	cmn	fp, #1
 63c:	str	sl, [r4, #16]
 640:	beq	65c <coda_cdf_variable_new+0x208>
 644:	mov	r1, sl
 648:	mov	r0, fp
 64c:	bl	328 <time_type_new>
 650:	subs	r2, r0, #0
 654:	strne	r2, [r4, #16]
 658:	beq	738 <coda_cdf_variable_new+0x2e4>
 65c:	mov	r0, #5
 660:	bl	0 <coda_type_array_new>
 664:	cmp	r0, #0
 668:	str	r0, [r4, #4]
 66c:	beq	738 <coda_cdf_variable_new+0x2e4>
 670:	ldr	r2, [r4, #16]
 674:	ldr	r1, [r2, #4]
 678:	bl	0 <coda_type_array_set_base_type>
 67c:	subs	r7, r0, #0
 680:	bne	738 <coda_cdf_variable_new+0x2e4>
 684:	cmp	r9, #0
 688:	ldr	r0, [r4, #4]
 68c:	bne	78c <coda_cdf_variable_new+0x338>
 690:	ldr	r2, [r4, #16]
 694:	mov	r1, #0
 698:	ldr	r2, [r2, #4]
 69c:	ldr	lr, [r2, #24]
 6a0:	ldr	ip, [r2, #28]
 6a4:	asr	r2, ip, #31
 6a8:	and	r2, r2, #7
 6ac:	adds	r2, r2, lr
 6b0:	lsr	r2, r2, #3
 6b4:	adc	r1, r1, ip
 6b8:	cmp	r8, #0
 6bc:	orr	r2, r2, r1, lsl #29
 6c0:	str	r2, [r4, #28]
 6c4:	ble	72c <coda_cdf_variable_new+0x2d8>
 6c8:	mov	r7, #1
 6cc:	ldr	r9, [sp, #56]	; 0x38
 6d0:	b	6e0 <coda_cdf_variable_new+0x28c>
 6d4:	cmp	r8, r7
 6d8:	add	r7, r7, #1
 6dc:	beq	72c <coda_cdf_variable_new+0x2d8>
 6e0:	cmp	r6, #0
 6e4:	sub	r3, r7, #1
 6e8:	subne	r3, r8, r7
 6ec:	ldr	r2, [r5, r3, lsl #2]
 6f0:	lsl	sl, r3, #2
 6f4:	cmp	r2, #0
 6f8:	beq	6d4 <coda_cdf_variable_new+0x280>
 6fc:	ldr	r1, [r9, r3, lsl #2]
 700:	bl	0 <coda_type_array_add_fixed_dimension>
 704:	cmp	r0, #0
 708:	bne	738 <coda_cdf_variable_new+0x2e4>
 70c:	ldr	r3, [r9, sl]
 710:	cmp	r8, r7
 714:	add	r7, r7, #1
 718:	ldr	r0, [r4, #4]
 71c:	ldr	r2, [r4, #24]
 720:	mul	r3, r3, r2
 724:	str	r3, [r4, #24]
 728:	bne	6e0 <coda_cdf_variable_new+0x28c>
 72c:	bl	0 <coda_type_array_validate>
 730:	subs	r7, r0, #0
 734:	beq	578 <coda_cdf_variable_new+0x124>
 738:	mov	r0, r4
 73c:	mov	r4, #0
 740:	bl	23c <coda_cdf_type_delete>
 744:	b	5d0 <coda_cdf_variable_new+0x17c>
 748:	cmp	r7, #31
 74c:	mov	fp, r7
 750:	moveq	r7, #45	; 0x2d
 754:	movne	r7, #8
 758:	b	600 <coda_cdf_variable_new+0x1ac>
 75c:	mov	r1, r4
 760:	mov	r0, fp
 764:	bl	328 <time_type_new>
 768:	subs	r3, r0, #0
 76c:	movne	r4, r3
 770:	bne	5d0 <coda_cdf_variable_new+0x17c>
 774:	b	738 <coda_cdf_variable_new+0x2e4>
 778:	cmp	r7, #31
 77c:	mov	fp, r7
 780:	moveq	r7, #45	; 0x2d
 784:	movne	r7, #8
 788:	b	534 <coda_cdf_variable_new+0xe0>
 78c:	ldr	r3, [sp, #12]
 790:	add	r9, r3, #1
 794:	mov	r1, r9
 798:	bl	0 <coda_type_array_add_fixed_dimension>
 79c:	cmp	r0, #0
 7a0:	bne	738 <coda_cdf_variable_new+0x2e4>
 7a4:	str	r9, [r4, #20]
 7a8:	ldr	r0, [r4, #4]
 7ac:	b	690 <coda_cdf_variable_new+0x23c>
 7b0:	movw	r0, #274	; 0x112
 7b4:	movw	r3, #0
 7b8:	movt	r3, #0
 7bc:	movw	r1, #0
 7c0:	movt	r1, #0
 7c4:	mov	r2, #44	; 0x2c
 7c8:	str	r0, [sp]
 7cc:	mvn	r0, #0
 7d0:	bl	0 <coda_set_error>
 7d4:	b	5d0 <coda_cdf_variable_new+0x17c>
 7d8:	mov	r0, sl
 7dc:	bl	23c <coda_cdf_type_delete>
 7e0:	mov	r3, #0
 7e4:	str	r3, [r4, #16]
 7e8:	b	738 <coda_cdf_variable_new+0x2e4>
 7ec:	mov	r0, #191	; 0xbf
 7f0:	movw	r3, #0
 7f4:	movt	r3, #0
 7f8:	movw	r1, #0
 7fc:	movt	r1, #0
 800:	mov	r2, #12
 804:	str	r0, [sp]
 808:	mvn	r0, #0
 80c:	bl	0 <coda_set_error>
 810:	str	sl, [r4, #16]
 814:	b	738 <coda_cdf_variable_new+0x2e4>
 818:	mov	r0, #392	; 0x188
 81c:	mov	r2, r6
 820:	movw	r3, #0
 824:	movt	r3, #0
 828:	movw	r1, #0
 82c:	movt	r1, #0
 830:	str	r0, [sp]
 834:	mvn	r0, #0
 838:	bl	0 <coda_set_error>
 83c:	mov	r0, r4
 840:	mov	r4, r5
 844:	bl	23c <coda_cdf_type_delete>
 848:	b	5d0 <coda_cdf_variable_new+0x17c>
 84c:	movw	r1, #0
 850:	movt	r1, #0
 854:	ldr	r3, [pc, #12]	; 868 <coda_cdf_variable_new+0x414>
 858:	movw	r0, #0
 85c:	movt	r0, #0
 860:	mov	r2, #268	; 0x10c
 864:	bl	0 <__assert_fail>
 868:	.word	0x00000028

0000086c <coda_cdf_variable_add_attribute>:
 86c:	strd	r4, [sp, #-24]!	; 0xffffffe8
 870:	subs	r5, r0, #0
 874:	strd	r6, [sp, #8]
 878:	str	r8, [sp, #16]
 87c:	str	lr, [sp, #20]
 880:	sub	sp, sp, #8
 884:	beq	b10 <coda_cdf_variable_add_attribute+0x2a4>
 888:	cmp	r1, #0
 88c:	mov	r7, r1
 890:	beq	aec <coda_cdf_variable_add_attribute+0x280>
 894:	cmp	r2, #0
 898:	mov	r6, r2
 89c:	beq	ac8 <coda_cdf_variable_add_attribute+0x25c>
 8a0:	ldr	r4, [r5, #12]
 8a4:	mov	r8, r3
 8a8:	cmp	r4, #0
 8ac:	beq	93c <coda_cdf_variable_add_attribute+0xd0>
 8b0:	ldr	r3, [r4]
 8b4:	cmp	r3, #100	; 0x64
 8b8:	bne	a50 <coda_cdf_variable_add_attribute+0x1e4>
 8bc:	ldr	r2, [r5, #4]
 8c0:	ldr	r3, [r4, #4]
 8c4:	ldr	r2, [r2, #36]	; 0x24
 8c8:	cmp	r2, r3
 8cc:	bne	b98 <coda_cdf_variable_add_attribute+0x32c>
 8d0:	ldr	r0, [r2, #44]	; 0x2c
 8d4:	bl	0 <coda_hashtable_get_index_from_name>
 8d8:	cmp	r8, #0
 8dc:	mov	r5, r0
 8e0:	bne	980 <coda_cdf_variable_add_attribute+0x114>
 8e4:	cmp	r0, #0
 8e8:	blt	b34 <coda_cdf_variable_add_attribute+0x2c8>
 8ec:	ldr	r3, [r4, #20]
 8f0:	ldr	r2, [r3, r0, lsl #2]
 8f4:	add	r3, r3, r0, lsl #2
 8f8:	cmp	r2, #0
 8fc:	bne	a74 <coda_cdf_variable_add_attribute+0x208>
 900:	ldr	r1, [r4, #4]
 904:	ldr	r2, [r6, #4]
 908:	ldr	r1, [r1, #52]	; 0x34
 90c:	ldr	r1, [r1, r0, lsl #2]
 910:	ldr	r1, [r1, #8]
 914:	cmp	r1, r2
 918:	bne	aa0 <coda_cdf_variable_add_attribute+0x234>
 91c:	mov	r0, #0
 920:	str	r6, [r3]
 924:	add	sp, sp, #8
 928:	ldrd	r4, [sp]
 92c:	ldrd	r6, [sp, #8]
 930:	ldr	r8, [sp, #16]
 934:	add	sp, sp, #20
 938:	pop	{pc}		; (ldr pc, [sp], #4)
 93c:	cmp	r3, #0
 940:	beq	b60 <coda_cdf_variable_add_attribute+0x2f4>
 944:	ldr	r4, [r5, #4]
 948:	ldr	r0, [r4, #36]	; 0x24
 94c:	cmp	r0, #0
 950:	beq	a2c <coda_cdf_variable_add_attribute+0x1c0>
 954:	mov	r1, #0
 958:	bl	0 <coda_mem_record_new>
 95c:	cmp	r0, #0
 960:	mov	r4, r0
 964:	str	r0, [r5, #12]
 968:	beq	a48 <coda_cdf_variable_add_attribute+0x1dc>
 96c:	ldr	r3, [r0, #4]
 970:	mov	r1, r7
 974:	ldr	r0, [r3, #44]	; 0x2c
 978:	bl	0 <coda_hashtable_get_index_from_name>
 97c:	mov	r5, r0
 980:	cmp	r5, #0
 984:	ldr	r0, [r4, #4]
 988:	blt	a04 <coda_cdf_variable_add_attribute+0x198>
 98c:	ldrd	r2, [r4, #16]
 990:	cmp	r2, r5
 994:	bgt	9f8 <coda_cdf_variable_add_attribute+0x18c>
 998:	ldr	r1, [r0, #48]	; 0x30
 99c:	cmp	r2, r1
 9a0:	addge	r3, r3, r5, lsl #2
 9a4:	bge	91c <coda_cdf_variable_add_attribute+0xb0>
 9a8:	lsl	r1, r1, #2
 9ac:	mov	r0, r3
 9b0:	bl	0 <realloc>
 9b4:	cmp	r0, #0
 9b8:	ldr	r2, [r4, #4]
 9bc:	beq	b68 <coda_cdf_variable_add_attribute+0x2fc>
 9c0:	ldr	r3, [r4, #16]
 9c4:	ldr	ip, [r2, #48]	; 0x30
 9c8:	str	r0, [r4, #20]
 9cc:	cmp	r3, ip
 9d0:	bge	9ec <coda_cdf_variable_add_attribute+0x180>
 9d4:	add	r3, r0, r3, lsl #2
 9d8:	mov	r1, #0
 9dc:	add	r2, r0, ip, lsl #2
 9e0:	str	r1, [r3], #4
 9e4:	cmp	r3, r2
 9e8:	bne	9e0 <coda_cdf_variable_add_attribute+0x174>
 9ec:	add	r3, r0, r5, lsl #2
 9f0:	str	ip, [r4, #16]
 9f4:	b	91c <coda_cdf_variable_add_attribute+0xb0>
 9f8:	ldr	r1, [r3, r5, lsl #2]
 9fc:	cmp	r1, #0
 a00:	beq	998 <coda_cdf_variable_add_attribute+0x12c>
 a04:	mov	r1, r7
 a08:	ldr	r2, [r6, #4]
 a0c:	bl	0 <coda_type_record_create_field>
 a10:	cmp	r0, #0
 a14:	bne	a48 <coda_cdf_variable_add_attribute+0x1dc>
 a18:	ldr	r1, [r4, #4]
 a1c:	ldrd	r2, [r4, #16]
 a20:	ldr	r1, [r1, #48]	; 0x30
 a24:	sub	r5, r1, #1
 a28:	b	99c <coda_cdf_variable_add_attribute+0x130>
 a2c:	ldr	r0, [r4]
 a30:	bl	0 <coda_type_record_new>
 a34:	ldr	r3, [r5, #4]
 a38:	str	r0, [r4, #36]	; 0x24
 a3c:	ldr	r0, [r3, #36]	; 0x24
 a40:	cmp	r0, #0
 a44:	bne	954 <coda_cdf_variable_add_attribute+0xe8>
 a48:	mvn	r0, #0
 a4c:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 a50:	mvn	r0, #99	; 0x63
 a54:	movw	r2, #0
 a58:	movt	r2, #0
 a5c:	movw	r1, #0
 a60:	movt	r1, #0
 a64:	movw	r3, #470	; 0x1d6
 a68:	bl	0 <coda_set_error>
 a6c:	mvn	r0, #0
 a70:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 a74:	movw	r0, #522	; 0x20a
 a78:	mov	r2, r7
 a7c:	movw	r3, #0
 a80:	movt	r3, #0
 a84:	movw	r1, #0
 a88:	movt	r1, #0
 a8c:	str	r0, [sp]
 a90:	mvn	r0, #99	; 0x63
 a94:	bl	0 <coda_set_error>
 a98:	mvn	r0, #0
 a9c:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 aa0:	mov	r0, #528	; 0x210
 aa4:	mov	r2, r7
 aa8:	movw	r3, #0
 aac:	movt	r3, #0
 ab0:	movw	r1, #0
 ab4:	movt	r1, #0
 ab8:	str	r0, [sp]
 abc:	mvn	r0, #99	; 0x63
 ac0:	bl	0 <coda_set_error>
 ac4:	b	a48 <coda_cdf_variable_add_attribute+0x1dc>
 ac8:	mvn	r0, #99	; 0x63
 acc:	movw	r2, #0
 ad0:	movt	r2, #0
 ad4:	movw	r1, #0
 ad8:	movt	r1, #0
 adc:	movw	r3, #437	; 0x1b5
 ae0:	bl	0 <coda_set_error>
 ae4:	mvn	r0, #0
 ae8:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 aec:	mvn	r0, #99	; 0x63
 af0:	movw	r2, #0
 af4:	movt	r2, #0
 af8:	movw	r1, #0
 afc:	movt	r1, #0
 b00:	mov	r3, #432	; 0x1b0
 b04:	bl	0 <coda_set_error>
 b08:	mvn	r0, #0
 b0c:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 b10:	mvn	r0, #99	; 0x63
 b14:	movw	r2, #0
 b18:	movt	r2, #0
 b1c:	movw	r1, #0
 b20:	movt	r1, #0
 b24:	movw	r3, #427	; 0x1ab
 b28:	bl	0 <coda_set_error>
 b2c:	mvn	r0, #0
 b30:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 b34:	mov	r0, #516	; 0x204
 b38:	mov	r2, r7
 b3c:	movw	r3, #0
 b40:	movt	r3, #0
 b44:	movw	r1, #0
 b48:	movt	r1, #0
 b4c:	str	r0, [sp]
 b50:	mvn	r0, #101	; 0x65
 b54:	bl	0 <coda_set_error>
 b58:	mvn	r0, #0
 b5c:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 b60:	movw	r0, #462	; 0x1ce
 b64:	b	b38 <coda_cdf_variable_add_attribute+0x2cc>
 b68:	ldr	r2, [r2, #48]	; 0x30
 b6c:	movw	ip, #499	; 0x1f3
 b70:	mvn	r0, #0
 b74:	movw	r3, #0
 b78:	movt	r3, #0
 b7c:	movw	r1, #0
 b80:	movt	r1, #0
 b84:	str	ip, [sp]
 b88:	lsl	r2, r2, #2
 b8c:	bl	0 <coda_set_error>
 b90:	mvn	r0, #0
 b94:	b	924 <coda_cdf_variable_add_attribute+0xb8>
 b98:	movw	r1, #0
 b9c:	movt	r1, #0
 ba0:	ldr	r3, [pc, #12]	; bb4 <coda_cdf_variable_add_attribute+0x348>
 ba4:	movw	r0, #0
 ba8:	movt	r0, #0
 bac:	movw	r2, #473	; 0x1d9
 bb0:	bl	0 <__assert_fail>
 bb4:	.word	0x00000040
