
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-utils.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_format_from_string>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	mov	r4, r1
   c:	movw	r1, #0
  10:	mov	r5, r0
  14:	movt	r1, #0
  18:	bl	0 <strcmp>
  1c:	cmp	r0, #0
  20:	beq	11c <coda_format_from_string+0x11c>
  24:	movw	r1, #0
  28:	mov	r0, r5
  2c:	movt	r1, #0
  30:	bl	0 <strcmp>
  34:	cmp	r0, #0
  38:	beq	128 <coda_format_from_string+0x128>
  3c:	movw	r1, #0
  40:	mov	r0, r5
  44:	movt	r1, #0
  48:	bl	0 <strcmp>
  4c:	cmp	r0, #0
  50:	beq	130 <coda_format_from_string+0x130>
  54:	movw	r1, #0
  58:	mov	r0, r5
  5c:	movt	r1, #0
  60:	bl	0 <strcmp>
  64:	cmp	r0, #0
  68:	beq	138 <coda_format_from_string+0x138>
  6c:	movw	r1, #0
  70:	mov	r0, r5
  74:	movt	r1, #0
  78:	bl	0 <strcmp>
  7c:	cmp	r0, #0
  80:	beq	140 <coda_format_from_string+0x140>
  84:	movw	r1, #0
  88:	mov	r0, r5
  8c:	movt	r1, #0
  90:	bl	0 <strcmp>
  94:	cmp	r0, #0
  98:	beq	148 <coda_format_from_string+0x148>
  9c:	movw	r1, #0
  a0:	mov	r0, r5
  a4:	movt	r1, #0
  a8:	bl	0 <strcmp>
  ac:	cmp	r0, #0
  b0:	beq	150 <coda_format_from_string+0x150>
  b4:	movw	r1, #0
  b8:	mov	r0, r5
  bc:	movt	r1, #0
  c0:	bl	0 <strcmp>
  c4:	cmp	r0, #0
  c8:	beq	158 <coda_format_from_string+0x158>
  cc:	movw	r1, #0
  d0:	mov	r0, r5
  d4:	movt	r1, #0
  d8:	bl	0 <strcmp>
  dc:	cmp	r0, #0
  e0:	beq	160 <coda_format_from_string+0x160>
  e4:	movw	r1, #0
  e8:	mov	r0, r5
  ec:	movt	r1, #0
  f0:	bl	0 <strcmp>
  f4:	cmp	r0, #0
  f8:	beq	168 <coda_format_from_string+0x168>
  fc:	movw	r0, #65136	; 0xfe70
 100:	movw	r1, #0
 104:	mov	r2, r5
 108:	movt	r0, #65535	; 0xffff
 10c:	movt	r1, #0
 110:	bl	0 <coda_set_error>
 114:	mvn	r0, #0
 118:	pop	{r4, r5, fp, pc}
 11c:	mov	r0, #0
 120:	str	r0, [r4]
 124:	pop	{r4, r5, fp, pc}
 128:	mov	r0, #1
 12c:	b	16c <coda_format_from_string+0x16c>
 130:	mov	r0, #2
 134:	b	16c <coda_format_from_string+0x16c>
 138:	mov	r0, #3
 13c:	b	16c <coda_format_from_string+0x16c>
 140:	mov	r0, #4
 144:	b	16c <coda_format_from_string+0x16c>
 148:	mov	r0, #5
 14c:	b	16c <coda_format_from_string+0x16c>
 150:	mov	r0, #6
 154:	b	16c <coda_format_from_string+0x16c>
 158:	mov	r0, #7
 15c:	b	16c <coda_format_from_string+0x16c>
 160:	mov	r0, #8
 164:	b	16c <coda_format_from_string+0x16c>
 168:	mov	r0, #9
 16c:	str	r0, [r4]
 170:	mov	r0, #0
 174:	pop	{r4, r5, fp, pc}

00000178 <coda_element_name_from_xml_name>:
 178:	mov	r1, r0
 17c:	ldrb	r2, [r1], #1
 180:	tst	r2, #223	; 0xdf
 184:	bne	17c <coda_element_name_from_xml_name+0x4>
 188:	cmp	r2, #0
 18c:	moveq	r1, r0
 190:	mov	r0, r1
 194:	bx	lr

00000198 <coda_is_identifier>:
 198:	push	{r4, r5, fp, lr}
 19c:	add	fp, sp, #8
 1a0:	mov	r4, #0
 1a4:	cmp	r0, #0
 1a8:	beq	208 <coda_is_identifier+0x70>
 1ac:	mov	r5, r0
 1b0:	bl	0 <__ctype_b_loc>
 1b4:	ldrb	r1, [r5]
 1b8:	ldr	r0, [r0]
 1bc:	add	r1, r0, r1, lsl #1
 1c0:	ldrb	r1, [r1, #1]
 1c4:	tst	r1, #4
 1c8:	beq	208 <coda_is_identifier+0x70>
 1cc:	ldrb	r2, [r5, #1]
 1d0:	cmp	r2, #0
 1d4:	beq	210 <coda_is_identifier+0x78>
 1d8:	add	r1, r5, #2
 1dc:	b	1ec <coda_is_identifier+0x54>
 1e0:	ldrb	r2, [r1], #1
 1e4:	cmp	r2, #0
 1e8:	beq	210 <coda_is_identifier+0x78>
 1ec:	uxtb	r2, r2
 1f0:	cmp	r2, #95	; 0x5f
 1f4:	beq	1e0 <coda_is_identifier+0x48>
 1f8:	add	r2, r0, r2, lsl #1
 1fc:	ldrh	r2, [r2]
 200:	ands	r2, r2, #8
 204:	bne	1e0 <coda_is_identifier+0x48>
 208:	mov	r0, r4
 20c:	pop	{r4, r5, fp, pc}
 210:	mov	r4, #1
 214:	mov	r0, r4
 218:	pop	{r4, r5, fp, pc}

0000021c <coda_identifier_from_name>:
 21c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 220:	add	fp, sp, #24
 224:	sub	sp, sp, #8
 228:	movw	r6, #0
 22c:	mov	r8, r1
 230:	cmp	r0, #0
 234:	movt	r6, #0
 238:	beq	27c <coda_identifier_from_name+0x60>
 23c:	ldrb	r4, [r0]
 240:	mov	r5, r0
 244:	cmp	r4, #0
 248:	beq	27c <coda_identifier_from_name+0x60>
 24c:	bl	0 <__ctype_b_loc>
 250:	ldr	r0, [r0]
 254:	uxtb	r1, r4
 258:	add	r1, r0, r1, lsl #1
 25c:	ldrb	r1, [r1, #1]
 260:	tst	r1, #4
 264:	bne	278 <coda_identifier_from_name+0x5c>
 268:	ldrb	r4, [r5, #1]!
 26c:	cmp	r4, #0
 270:	bne	254 <coda_identifier_from_name+0x38>
 274:	b	27c <coda_identifier_from_name+0x60>
 278:	mov	r6, r5
 27c:	mov	r0, r6
 280:	bl	0 <strlen>
 284:	mov	r9, r0
 288:	add	r0, r0, #5
 28c:	bl	0 <malloc>
 290:	mov	r5, r0
 294:	cmp	r0, #0
 298:	beq	348 <coda_identifier_from_name+0x12c>
 29c:	ldrb	r0, [r6]
 2a0:	cmp	r9, #2
 2a4:	strb	r0, [r5]
 2a8:	blt	2e0 <coda_identifier_from_name+0xc4>
 2ac:	add	r4, r6, #1
 2b0:	sub	r6, r9, #1
 2b4:	add	r7, r5, #1
 2b8:	bl	0 <__ctype_b_loc>
 2bc:	ldrb	r1, [r4], #1
 2c0:	ldr	r2, [r0]
 2c4:	add	r2, r2, r1, lsl #1
 2c8:	ldrh	r2, [r2]
 2cc:	tst	r2, #8
 2d0:	movweq	r1, #95	; 0x5f
 2d4:	subs	r6, r6, #1
 2d8:	strb	r1, [r7], #1
 2dc:	bne	2bc <coda_identifier_from_name+0xa0>
 2e0:	mov	r0, #0
 2e4:	mov	r6, r5
 2e8:	cmp	r8, #0
 2ec:	strb	r0, [r6, r9]!
 2f0:	beq	36c <coda_identifier_from_name+0x150>
 2f4:	mov	r0, r8
 2f8:	mov	r1, r5
 2fc:	bl	0 <coda_hashtable_get_index_from_name>
 300:	cmp	r0, #0
 304:	bmi	36c <coda_identifier_from_name+0x150>
 308:	movw	r4, #0
 30c:	mov	r7, #1
 310:	movt	r4, #0
 314:	cmp	r7, #1000	; 0x3e8
 318:	beq	378 <coda_identifier_from_name+0x15c>
 31c:	mov	r0, r6
 320:	mov	r1, r4
 324:	mov	r2, r7
 328:	bl	0 <sprintf>
 32c:	mov	r0, r8
 330:	mov	r1, r5
 334:	bl	0 <coda_hashtable_get_index_from_name>
 338:	add	r7, r7, #1
 33c:	cmn	r0, #1
 340:	bgt	314 <coda_identifier_from_name+0xf8>
 344:	b	36c <coda_identifier_from_name+0x150>
 348:	movw	r1, #0
 34c:	movw	r3, #0
 350:	mov	r0, #172	; 0xac
 354:	add	r2, r9, #4
 358:	movt	r1, #0
 35c:	movt	r3, #0
 360:	str	r0, [sp]
 364:	mvn	r0, #0
 368:	bl	0 <coda_set_error>
 36c:	mov	r0, r5
 370:	sub	sp, fp, #24
 374:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 378:	movw	r0, #0
 37c:	movw	r1, #0
 380:	movw	r3, #0
 384:	mov	r2, #203	; 0xcb
 388:	movt	r0, #0
 38c:	movt	r1, #0
 390:	movt	r3, #0
 394:	bl	0 <__assert_fail>

00000398 <coda_c_index_to_fortran_index>:
 398:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 39c:	add	fp, sp, #24
 3a0:	sub	sp, sp, #32
 3a4:	mov	r8, r0
 3a8:	cmp	r0, #8
 3ac:	ble	3d4 <coda_c_index_to_fortran_index+0x3c>
 3b0:	movw	r1, #0
 3b4:	mvn	r0, #99	; 0x63
 3b8:	mov	r2, r8
 3bc:	mov	r3, #8
 3c0:	movt	r1, #0
 3c4:	bl	0 <coda_set_error>
 3c8:	mvn	r0, #0
 3cc:	sub	sp, fp, #24
 3d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 3d4:	mov	r0, #0
 3d8:	cmp	r8, #1
 3dc:	blt	494 <coda_c_index_to_fortran_index+0xfc>
 3e0:	mov	ip, sp
 3e4:	sub	r5, r1, #4
 3e8:	mov	r3, r8
 3ec:	sub	r4, ip, #4
 3f0:	ldr	r6, [r5, r3, lsl #2]
 3f4:	sdiv	r7, r2, r6
 3f8:	mls	r2, r7, r6, r2
 3fc:	str	r2, [r4, r3, lsl #2]
 400:	sub	r3, r3, #1
 404:	mov	r2, r7
 408:	cmp	r3, #0
 40c:	bgt	3f0 <coda_c_index_to_fortran_index+0x58>
 410:	cmp	r8, #1
 414:	blt	494 <coda_c_index_to_fortran_index+0xfc>
 418:	and	lr, r8, #1
 41c:	cmp	r8, #1
 420:	bne	43c <coda_c_index_to_fortran_index+0xa4>
 424:	mov	r0, #0
 428:	mov	r1, #1
 42c:	mov	r3, #0
 430:	cmp	lr, #0
 434:	bne	48c <coda_c_index_to_fortran_index+0xf4>
 438:	b	494 <coda_c_index_to_fortran_index+0xfc>
 43c:	add	r4, r1, #4
 440:	sub	r8, r8, lr
 444:	add	r5, ip, #4
 448:	mov	r0, #0
 44c:	mov	r1, #1
 450:	mov	r3, #0
 454:	ldmda	r5, {r6, r7}
 458:	ldr	r2, [r4]
 45c:	add	r3, r3, #2
 460:	add	r5, r5, #8
 464:	cmp	r8, r3
 468:	mla	r0, r6, r1, r0
 46c:	ldr	r6, [r4, #-4]
 470:	add	r4, r4, #8
 474:	mul	r1, r6, r1
 478:	mla	r0, r7, r1, r0
 47c:	mul	r1, r2, r1
 480:	bne	454 <coda_c_index_to_fortran_index+0xbc>
 484:	cmp	lr, #0
 488:	beq	494 <coda_c_index_to_fortran_index+0xfc>
 48c:	ldr	r2, [ip, r3, lsl #2]
 490:	mla	r0, r2, r1, r0
 494:	sub	sp, fp, #24
 498:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000049c <coda_path_find_file>:
 49c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 4a0:	add	fp, sp, #28
 4a4:	sub	sp, sp, #100	; 0x64
 4a8:	mov	r4, r0
 4ac:	mov	r0, r1
 4b0:	mov	r7, r2
 4b4:	mov	r5, r1
 4b8:	bl	0 <strlen>
 4bc:	cmp	r4, #0
 4c0:	str	r0, [sp, #4]
 4c4:	beq	634 <coda_path_find_file+0x198>
 4c8:	ldrb	r0, [r4]
 4cc:	cmp	r0, #0
 4d0:	beq	634 <coda_path_find_file+0x198>
 4d4:	mov	r0, r4
 4d8:	bl	0 <strdup>
 4dc:	cmp	r0, #0
 4e0:	beq	5f4 <coda_path_find_file+0x158>
 4e4:	mov	sl, r0
 4e8:	ldrb	r0, [r0]
 4ec:	cmp	r0, #0
 4f0:	beq	62c <coda_path_find_file+0x190>
 4f4:	mov	r6, #0
 4f8:	mov	r9, #0
 4fc:	str	sl, [sp]
 500:	b	544 <coda_path_find_file+0xa8>
 504:	movw	r1, #0
 508:	mov	r0, r6
 50c:	mov	r2, sl
 510:	mov	r3, r5
 514:	movt	r1, #0
 518:	bl	0 <sprintf>
 51c:	mov	r0, #3
 520:	mov	r1, r6
 524:	add	r2, sp, #8
 528:	bl	0 <__xstat>
 52c:	cmp	r0, #0
 530:	beq	5d4 <coda_path_find_file+0x138>
 534:	ldrb	r0, [r8]
 538:	mov	sl, r8
 53c:	cmp	r0, #0
 540:	beq	618 <coda_path_find_file+0x17c>
 544:	uxtb	r0, r0
 548:	add	r8, sl, #1
 54c:	subs	r1, r0, #58	; 0x3a
 550:	clz	r0, r0
 554:	movwne	r1, #1
 558:	lsr	r0, r0, #5
 55c:	cmp	r0, r1
 560:	beq	588 <coda_path_find_file+0xec>
 564:	ldrb	r0, [r8], #1
 568:	subs	r1, r0, #58	; 0x3a
 56c:	clz	r0, r0
 570:	movwne	r1, #1
 574:	lsr	r0, r0, #5
 578:	teq	r0, r1
 57c:	bne	564 <coda_path_find_file+0xc8>
 580:	sub	r1, r8, #1
 584:	b	58c <coda_path_find_file+0xf0>
 588:	mov	r1, sl
 58c:	cmp	r0, #0
 590:	moveq	r0, #0
 594:	movne	r8, r1
 598:	strbeq	r0, [r1]
 59c:	mov	r0, sl
 5a0:	bl	0 <strlen>
 5a4:	ldr	r1, [sp, #4]
 5a8:	add	r4, r0, r1
 5ac:	cmp	r9, r4
 5b0:	bgt	504 <coda_path_find_file+0x68>
 5b4:	add	r1, r4, #2
 5b8:	mov	r0, r6
 5bc:	bl	0 <realloc>
 5c0:	cmp	r0, #0
 5c4:	beq	648 <coda_path_find_file+0x1ac>
 5c8:	add	r9, r4, #1
 5cc:	mov	r6, r0
 5d0:	b	504 <coda_path_find_file+0x68>
 5d4:	ldrb	r0, [sp, #25]
 5d8:	tst	r0, #128	; 0x80
 5dc:	beq	534 <coda_path_find_file+0x98>
 5e0:	ldr	r0, [sp]
 5e4:	str	r6, [r7]
 5e8:	bl	0 <free>
 5ec:	mov	r4, #0
 5f0:	b	63c <coda_path_find_file+0x1a0>
 5f4:	movw	r1, #0
 5f8:	movw	r2, #0
 5fc:	mvn	r0, #0
 600:	movw	r3, #391	; 0x187
 604:	mvn	r4, #0
 608:	movt	r1, #0
 60c:	movt	r2, #0
 610:	bl	0 <coda_set_error>
 614:	b	63c <coda_path_find_file+0x1a0>
 618:	ldr	sl, [sp]
 61c:	cmp	r6, #0
 620:	beq	62c <coda_path_find_file+0x190>
 624:	mov	r0, r6
 628:	bl	0 <free>
 62c:	mov	r0, sl
 630:	bl	0 <free>
 634:	mov	r4, #0
 638:	str	r4, [r7]
 63c:	mov	r0, r4
 640:	sub	sp, fp, #28
 644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 648:	movw	r1, #0
 64c:	movw	r2, #0
 650:	mvn	r0, #0
 654:	movw	r3, #421	; 0x1a5
 658:	mvn	r4, #0
 65c:	movt	r1, #0
 660:	movt	r2, #0
 664:	bl	0 <coda_set_error>
 668:	cmp	r6, #0
 66c:	beq	63c <coda_path_find_file+0x1a0>
 670:	mov	r0, r6
 674:	bl	0 <free>
 678:	b	63c <coda_path_find_file+0x1a0>

0000067c <coda_path_from_path>:
 67c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 680:	add	fp, sp, #24
 684:	mov	r8, r3
 688:	mov	r9, r2
 68c:	mov	r5, r1
 690:	mov	r7, r0
 694:	bl	0 <strlen>
 698:	mov	r4, r0
 69c:	cmp	r9, #0
 6a0:	beq	6e8 <coda_path_from_path+0x6c>
 6a4:	mov	r0, r9
 6a8:	bl	0 <strlen>
 6ac:	mov	r6, r0
 6b0:	cmp	r5, #0
 6b4:	beq	6f4 <coda_path_from_path+0x78>
 6b8:	cmp	r4, #1
 6bc:	blt	6f4 <coda_path_from_path+0x78>
 6c0:	sub	r0, r7, #1
 6c4:	mov	r5, r4
 6c8:	cmp	r4, #1
 6cc:	blt	6f8 <coda_path_from_path+0x7c>
 6d0:	ldrb	r1, [r0, r5]
 6d4:	cmp	r1, #92	; 0x5c
 6d8:	subne	r4, r5, #1
 6dc:	cmpne	r1, #47	; 0x2f
 6e0:	bne	6c4 <coda_path_from_path+0x48>
 6e4:	b	6f8 <coda_path_from_path+0x7c>
 6e8:	mov	r6, #0
 6ec:	cmp	r5, #0
 6f0:	bne	6b8 <coda_path_from_path+0x3c>
 6f4:	mov	r5, r4
 6f8:	add	r0, r6, r5
 6fc:	add	r0, r0, #2
 700:	bl	0 <malloc>
 704:	cmp	r0, #0
 708:	str	r0, [r8]
 70c:	beq	744 <coda_path_from_path+0xc8>
 710:	mov	r4, r0
 714:	cmp	r5, #1
 718:	blt	76c <coda_path_from_path+0xf0>
 71c:	mov	r0, r4
 720:	mov	r1, r7
 724:	mov	r2, r5
 728:	bl	0 <memcpy>
 72c:	add	r7, r4, r5
 730:	cmp	r6, #1
 734:	blt	78c <coda_path_from_path+0x110>
 738:	mov	r0, #47	; 0x2f
 73c:	strb	r0, [r7], #1
 740:	b	778 <coda_path_from_path+0xfc>
 744:	movw	r1, #0
 748:	movw	r2, #0
 74c:	mvn	r0, #0
 750:	movw	r3, #481	; 0x1e1
 754:	mvn	r6, #0
 758:	movt	r1, #0
 75c:	movt	r2, #0
 760:	bl	0 <coda_set_error>
 764:	mov	r0, r6
 768:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 76c:	cmp	r6, #1
 770:	mov	r7, r4
 774:	blt	78c <coda_path_from_path+0x110>
 778:	mov	r0, r7
 77c:	mov	r1, r9
 780:	mov	r2, r6
 784:	bl	0 <memcpy>
 788:	add	r7, r7, r6
 78c:	mov	r6, #0
 790:	strb	r6, [r7]
 794:	ldrb	r0, [r4]
 798:	cmp	r0, #0
 79c:	beq	90c <coda_path_from_path+0x290>
 7a0:	cmp	r0, #46	; 0x2e
 7a4:	bne	7c8 <coda_path_from_path+0x14c>
 7a8:	mov	r6, #0
 7ac:	add	r0, r4, r6
 7b0:	ldrb	r1, [r0, #1]
 7b4:	cmp	r1, #47	; 0x2f
 7b8:	ldrbeq	r0, [r0, #2]
 7bc:	addeq	r6, r6, #2
 7c0:	cmpeq	r0, #46	; 0x2e
 7c4:	beq	7ac <coda_path_from_path+0x130>
 7c8:	sub	ip, r4, #1
 7cc:	mov	lr, #0
 7d0:	b	7dc <coda_path_from_path+0x160>
 7d4:	strb	r2, [r4, lr]
 7d8:	add	lr, lr, #1
 7dc:	mov	r5, r6
 7e0:	b	7ec <coda_path_from_path+0x170>
 7e4:	cmp	r7, #0
 7e8:	bne	860 <coda_path_from_path+0x1e4>
 7ec:	ldrb	r2, [r4, r5]
 7f0:	mov	r3, r5
 7f4:	cmp	r2, #47	; 0x2f
 7f8:	cmpne	r2, #92	; 0x5c
 7fc:	bne	850 <coda_path_from_path+0x1d4>
 800:	add	r6, r3, #1
 804:	ldrb	r0, [r4, r6]
 808:	cmp	r0, #46	; 0x2e
 80c:	beq	82c <coda_path_from_path+0x1b0>
 810:	cmp	r0, #47	; 0x2f
 814:	mov	r5, r6
 818:	beq	7ec <coda_path_from_path+0x170>
 81c:	cmp	r0, #92	; 0x5c
 820:	mov	r5, r6
 824:	beq	7ec <coda_path_from_path+0x170>
 828:	b	7d4 <coda_path_from_path+0x158>
 82c:	add	r5, r3, #2
 830:	ldrb	r7, [r4, r5]
 834:	cmp	r7, #46	; 0x2e
 838:	ble	7e4 <coda_path_from_path+0x168>
 83c:	cmp	r7, #47	; 0x2f
 840:	beq	7ec <coda_path_from_path+0x170>
 844:	cmp	r7, #92	; 0x5c
 848:	beq	7ec <coda_path_from_path+0x170>
 84c:	b	7d4 <coda_path_from_path+0x158>
 850:	cmp	r2, #0
 854:	beq	8f4 <coda_path_from_path+0x278>
 858:	add	r6, r3, #1
 85c:	b	7d4 <coda_path_from_path+0x158>
 860:	cmp	r7, #46	; 0x2e
 864:	bne	7d4 <coda_path_from_path+0x158>
 868:	add	r3, r3, #3
 86c:	ldrb	r0, [r4, r3]
 870:	cmp	r0, #0
 874:	cmpne	r0, #92	; 0x5c
 878:	bne	8e8 <coda_path_from_path+0x26c>
 87c:	cmp	lr, #2
 880:	blt	8b8 <coda_path_from_path+0x23c>
 884:	add	r0, lr, r4
 888:	ldrb	r1, [r0, #-1]
 88c:	cmp	r1, #46	; 0x2e
 890:	bne	8b8 <coda_path_from_path+0x23c>
 894:	ldrb	r1, [r0, #-2]
 898:	cmp	r1, #46	; 0x2e
 89c:	bne	8b8 <coda_path_from_path+0x23c>
 8a0:	cmp	lr, #2
 8a4:	beq	7d4 <coda_path_from_path+0x158>
 8a8:	ldrb	r0, [r0, #-3]
 8ac:	cmp	r0, #47	; 0x2f
 8b0:	cmpne	r0, #92	; 0x5c
 8b4:	beq	7d4 <coda_path_from_path+0x158>
 8b8:	mov	r0, lr
 8bc:	subs	r1, r0, #1
 8c0:	blt	7d4 <coda_path_from_path+0x158>
 8c4:	ldrb	r0, [ip, r0]
 8c8:	cmp	r0, #47	; 0x2f
 8cc:	beq	8dc <coda_path_from_path+0x260>
 8d0:	cmp	r0, #92	; 0x5c
 8d4:	mov	r0, r1
 8d8:	bne	8bc <coda_path_from_path+0x240>
 8dc:	mov	r6, r3
 8e0:	mov	lr, r1
 8e4:	b	7dc <coda_path_from_path+0x160>
 8e8:	cmp	r0, #47	; 0x2f
 8ec:	beq	87c <coda_path_from_path+0x200>
 8f0:	b	7d4 <coda_path_from_path+0x158>
 8f4:	cmp	lr, #0
 8f8:	mov	r6, #0
 8fc:	moveq	r0, #46	; 0x2e
 900:	moveq	lr, #1
 904:	strbeq	r0, [r4]
 908:	strb	r6, [r4, lr]
 90c:	mov	r0, r6
 910:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00000914 <coda_path_for_program>:
 914:	push	{r4, r5, r6, sl, fp, lr}
 918:	add	fp, sp, #16
 91c:	sub	sp, sp, #8
 920:	sub	sp, sp, #1024	; 0x400
 924:	mov	r6, #0
 928:	cmp	r0, #0
 92c:	str	r6, [r1]
 930:	beq	9ac <coda_path_for_program+0x98>
 934:	mov	r4, r1
 938:	mov	r5, r0
 93c:	b	944 <coda_path_for_program+0x30>
 940:	add	r0, r0, #1
 944:	ldrb	r1, [r0]
 948:	cmp	r1, #0
 94c:	beq	a2c <coda_path_for_program+0x118>
 950:	cmp	r1, #47	; 0x2f
 954:	cmpne	r1, #92	; 0x5c
 958:	bne	940 <coda_path_for_program+0x2c>
 95c:	mov	r0, r5
 960:	bl	0 <strdup>
 964:	mov	r5, r0
 968:	cmp	r0, #0
 96c:	str	r0, [r4]
 970:	beq	98c <coda_path_for_program+0x78>
 974:	ldrb	r6, [r5]
 978:	cmp	r6, #47	; 0x2f
 97c:	cmpne	r6, #92	; 0x5c
 980:	bne	9b8 <coda_path_for_program+0xa4>
 984:	mov	r6, #0
 988:	b	9ac <coda_path_for_program+0x98>
 98c:	movw	r1, #0
 990:	movw	r2, #0
 994:	mvn	r0, #0
 998:	movw	r3, #537	; 0x219
 99c:	mvn	r6, #0
 9a0:	movt	r1, #0
 9a4:	movt	r2, #0
 9a8:	bl	0 <coda_set_error>
 9ac:	mov	r0, r6
 9b0:	sub	sp, fp, #16
 9b4:	pop	{r4, r5, r6, sl, fp, pc}
 9b8:	bl	0 <__ctype_b_loc>
 9bc:	ldr	r0, [r0]
 9c0:	add	r0, r0, r6, lsl #1
 9c4:	ldrb	r0, [r0, #1]
 9c8:	tst	r0, #4
 9cc:	beq	9dc <coda_path_for_program+0xc8>
 9d0:	ldrb	r0, [r5, #1]
 9d4:	cmp	r0, #58	; 0x3a
 9d8:	beq	984 <coda_path_for_program+0x70>
 9dc:	add	r0, sp, #7
 9e0:	mov	r1, #1024	; 0x400
 9e4:	bl	0 <getcwd>
 9e8:	cmp	r0, #0
 9ec:	beq	984 <coda_path_for_program+0x70>
 9f0:	mov	r0, #0
 9f4:	mov	r1, #0
 9f8:	mov	r3, r4
 9fc:	strb	r0, [sp, #1031]	; 0x407
 a00:	add	r0, sp, #7
 a04:	ldr	r5, [r4]
 a08:	mov	r2, r5
 a0c:	bl	67c <coda_path_from_path>
 a10:	mov	r4, r0
 a14:	mov	r0, r5
 a18:	bl	0 <free>
 a1c:	cmp	r4, #0
 a20:	mvn	r6, #0
 a24:	moveq	r6, #0
 a28:	b	9ac <coda_path_for_program+0x98>
 a2c:	movw	r0, #0
 a30:	movt	r0, #0
 a34:	bl	0 <getenv>
 a38:	cmp	r0, #0
 a3c:	beq	a68 <coda_path_for_program+0x154>
 a40:	mov	r1, r5
 a44:	mov	r2, r4
 a48:	bl	49c <coda_path_find_file>
 a4c:	mvn	r6, #0
 a50:	cmp	r0, #0
 a54:	bne	9ac <coda_path_for_program+0x98>
 a58:	ldr	r5, [r4]
 a5c:	cmp	r5, #0
 a60:	bne	974 <coda_path_for_program+0x60>
 a64:	b	984 <coda_path_for_program+0x70>
 a68:	mov	r0, #0
 a6c:	str	r0, [r4]
 a70:	b	984 <coda_path_for_program+0x70>

00000a74 <coda_isNaN>:
 a74:	vmov	ip, r2, d0
 a78:	movw	r1, #0
 a7c:	mov	r0, #0
 a80:	movt	r1, #32752	; 0x7ff0
 a84:	mvn	r3, r2
 a88:	tst	r3, r1
 a8c:	bxne	lr
 a90:	bfc	r2, #20, #12
 a94:	orrs	r0, ip, r2
 a98:	movwne	r0, #1
 a9c:	bx	lr

00000aa0 <coda_NaN>:
 aa0:	vldr	d0, [pc]	; aa8 <coda_NaN+0x8>
 aa4:	bx	lr
 aa8:	.word	0x00000000
 aac:	.word	0x7ff80000

00000ab0 <coda_isInf>:
 ab0:	vmov	r1, r2, d0
 ab4:	mov	r0, #-2147483648	; 0x80000000
 ab8:	orr	r0, r0, #267386880	; 0xff00000
 abc:	orr	r0, r0, #1879048192	; 0x70000000
 ac0:	orr	r2, r2, #-2147483648	; 0x80000000
 ac4:	eor	r0, r2, r0
 ac8:	orr	r0, r1, r0
 acc:	clz	r0, r0
 ad0:	lsr	r0, r0, #5
 ad4:	bx	lr

00000ad8 <coda_isPlusInf>:
 ad8:	vmov	r0, r1, d0
 adc:	eor	r1, r1, #267386880	; 0xff00000
 ae0:	eor	r1, r1, #1879048192	; 0x70000000
 ae4:	orr	r0, r0, r1
 ae8:	clz	r0, r0
 aec:	lsr	r0, r0, #5
 af0:	bx	lr

00000af4 <coda_isMinInf>:
 af4:	vmov	r0, r1, d0
 af8:	eor	r1, r1, #267386880	; 0xff00000
 afc:	eor	r1, r1, #-268435456	; 0xf0000000
 b00:	orr	r0, r0, r1
 b04:	clz	r0, r0
 b08:	lsr	r0, r0, #5
 b0c:	bx	lr

00000b10 <coda_PlusInf>:
 b10:	vldr	d0, [pc]	; b18 <coda_PlusInf+0x8>
 b14:	bx	lr
 b18:	.word	0x00000000
 b1c:	.word	0x7ff00000

00000b20 <coda_MinInf>:
 b20:	vldr	d0, [pc]	; b28 <coda_MinInf+0x8>
 b24:	bx	lr
 b28:	.word	0x00000000
 b2c:	.word	0xfff00000

00000b30 <coda_str64>:
 b30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 b34:	add	fp, sp, #24
 b38:	sub	sp, sp, #8
 b3c:	mov	r4, r2
 b40:	mov	r6, r1
 b44:	mov	r5, r0
 b48:	cmn	r1, #1
 b4c:	ble	b74 <coda_str64+0x44>
 b50:	cmp	r6, #0
 b54:	bne	b88 <coda_str64+0x58>
 b58:	movw	r1, #0
 b5c:	mov	r0, r4
 b60:	mov	r2, r5
 b64:	movt	r1, #0
 b68:	sub	sp, fp, #24
 b6c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 b70:	b	0 <sprintf>
 b74:	rsbs	r5, r5, #0
 b78:	mov	r0, #45	; 0x2d
 b7c:	strb	r0, [r4], #1
 b80:	rscs	r6, r6, #0
 b84:	beq	b58 <coda_str64+0x28>
 b88:	movw	r7, #57600	; 0xe100
 b8c:	mov	r0, r5
 b90:	mov	r1, r6
 b94:	mov	r3, #0
 b98:	movt	r7, #1525	; 0x5f5
 b9c:	mov	r2, r7
 ba0:	bl	0 <__aeabi_uldivmod>
 ba4:	mov	r2, r7
 ba8:	mov	r3, #0
 bac:	mls	r8, r0, r7, r5
 bb0:	bl	0 <__aeabi_uldivmod>
 bb4:	movw	r1, #65535	; 0xffff
 bb8:	movw	r0, #34546	; 0x86f2
 bbc:	mov	r7, r2
 bc0:	movt	r1, #28608	; 0x6fc0
 bc4:	movt	r0, #35	; 0x23
 bc8:	subs	r1, r1, r5
 bcc:	sbcs	r0, r0, r6
 bd0:	bcs	c14 <coda_str64+0xe4>
 bd4:	movw	r2, #0
 bd8:	movw	r3, #34546	; 0x86f2
 bdc:	mov	r0, r5
 be0:	mov	r1, r6
 be4:	movt	r2, #28609	; 0x6fc1
 be8:	movt	r3, #35	; 0x23
 bec:	bl	0 <__aeabi_uldivmod>
 bf0:	movw	r1, #0
 bf4:	mov	r2, r0
 bf8:	mov	r0, r4
 bfc:	mov	r3, r7
 c00:	str	r8, [sp]
 c04:	movt	r1, #0
 c08:	bl	0 <sprintf>
 c0c:	sub	sp, fp, #24
 c10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 c14:	movw	r1, #0
 c18:	mov	r0, r4
 c1c:	mov	r2, r7
 c20:	mov	r3, r8
 c24:	movt	r1, #0
 c28:	sub	sp, fp, #24
 c2c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 c30:	b	0 <sprintf>

00000c34 <coda_str64u>:
 c34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 c38:	add	fp, sp, #24
 c3c:	sub	sp, sp, #8
 c40:	mov	r4, r2
 c44:	mov	r5, r0
 c48:	cmp	r1, #0
 c4c:	bne	c6c <coda_str64u+0x38>
 c50:	movw	r1, #0
 c54:	mov	r0, r4
 c58:	mov	r2, r5
 c5c:	movt	r1, #0
 c60:	sub	sp, fp, #24
 c64:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 c68:	b	0 <sprintf>
 c6c:	movw	r7, #57600	; 0xe100
 c70:	mov	r0, r5
 c74:	mov	r3, #0
 c78:	mov	r6, r1
 c7c:	movt	r7, #1525	; 0x5f5
 c80:	mov	r2, r7
 c84:	bl	0 <__aeabi_uldivmod>
 c88:	mov	r2, r7
 c8c:	mov	r3, #0
 c90:	mls	r8, r0, r7, r5
 c94:	bl	0 <__aeabi_uldivmod>
 c98:	movw	r1, #0
 c9c:	movw	r0, #34546	; 0x86f2
 ca0:	mov	r7, r2
 ca4:	movt	r1, #28609	; 0x6fc1
 ca8:	movt	r0, #35	; 0x23
 cac:	subs	r1, r5, r1
 cb0:	sbcs	r0, r6, r0
 cb4:	bcc	cf8 <coda_str64u+0xc4>
 cb8:	movw	r2, #0
 cbc:	movw	r3, #34546	; 0x86f2
 cc0:	mov	r0, r5
 cc4:	mov	r1, r6
 cc8:	movt	r2, #28609	; 0x6fc1
 ccc:	movt	r3, #35	; 0x23
 cd0:	bl	0 <__aeabi_uldivmod>
 cd4:	movw	r1, #0
 cd8:	mov	r2, r0
 cdc:	mov	r0, r4
 ce0:	mov	r3, r7
 ce4:	str	r8, [sp]
 ce8:	movt	r1, #0
 cec:	bl	0 <sprintf>
 cf0:	sub	sp, fp, #24
 cf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 cf8:	movw	r1, #0
 cfc:	mov	r0, r4
 d00:	mov	r2, r7
 d04:	mov	r3, r8
 d08:	movt	r1, #0
 d0c:	sub	sp, fp, #24
 d10:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 d14:	b	0 <sprintf>

00000d18 <coda_strfl>:
 d18:	vmov	r2, r3, d0
 d1c:	movw	ip, #0
 d20:	movt	ip, #32752	; 0x7ff0
 d24:	mvn	r1, r3
 d28:	tst	r1, ip
 d2c:	bne	d4c <coda_strfl+0x34>
 d30:	mov	r1, r3
 d34:	bfc	r1, #20, #12
 d38:	orrs	r1, r2, r1
 d3c:	movwne	r1, #24942	; 0x616e
 d40:	movtne	r1, #110	; 0x6e
 d44:	strne	r1, [r0]
 d48:	bxne	lr
 d4c:	eor	r1, r3, #267386880	; 0xff00000
 d50:	eor	r1, r1, #-268435456	; 0xf0000000
 d54:	orrs	r1, r2, r1
 d58:	beq	d78 <coda_strfl+0x60>
 d5c:	eor	r1, r3, ip
 d60:	orrs	r1, r2, r1
 d64:	bne	d90 <coda_strfl+0x78>
 d68:	mov	r1, #0
 d6c:	strb	r1, [r0, #4]
 d70:	movw	r1, #26923	; 0x692b
 d74:	b	d84 <coda_strfl+0x6c>
 d78:	mov	r1, #0
 d7c:	strb	r1, [r0, #4]
 d80:	movw	r1, #26925	; 0x692d
 d84:	movt	r1, #26222	; 0x666e
 d88:	str	r1, [r0]
 d8c:	bx	lr
 d90:	movw	r1, #0
 d94:	movt	r1, #0
 d98:	b	0 <sprintf>
