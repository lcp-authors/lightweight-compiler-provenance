
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/flatcc.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <checkmem>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #8
       c:	str	r0, [fp, #-8]
      10:	ldr	r3, [fp, #-8]
      14:	cmp	r3, #0
      18:	bne	3c <checkmem+0x3c>
      1c:	ldr	r3, [pc, #36]	; 48 <checkmem+0x48>
      20:	ldr	r3, [r3]
      24:	mov	r2, #34	; 0x22
      28:	mov	r1, #1
      2c:	ldr	r0, [pc, #24]	; 4c <checkmem+0x4c>
      30:	bl	0 <fwrite>
      34:	mov	r0, #1
      38:	bl	0 <exit>
      3c:	nop			; (mov r0, r0)
      40:	sub	sp, fp, #4
      44:	pop	{fp, pc}
	...

00000050 <error_tok_2>:
      50:	push	{fp, lr}
      54:	add	fp, sp, #4
      58:	sub	sp, sp, #24
      5c:	str	r0, [fp, #-8]
      60:	str	r1, [fp, #-12]
      64:	str	r2, [fp, #-16]
      68:	str	r3, [fp, #-20]	; 0xffffffec
      6c:	mov	r3, #0
      70:	str	r3, [sp, #4]
      74:	mov	r3, #0
      78:	str	r3, [sp]
      7c:	ldr	r3, [fp, #-20]	; 0xffffffec
      80:	ldr	r2, [fp, #-16]
      84:	ldr	r1, [fp, #-12]
      88:	ldr	r0, [fp, #-8]
      8c:	bl	0 <__flatcc_error_report>
      90:	nop			; (mov r0, r0)
      94:	sub	sp, fp, #4
      98:	pop	{fp, pc}

0000009c <flatcc_init_options>:
      9c:	push	{fp, lr}
      a0:	add	fp, sp, #4
      a4:	sub	sp, sp, #8
      a8:	str	r0, [fp, #-8]
      ac:	mov	r2, #224	; 0xe0
      b0:	mov	r1, #0
      b4:	ldr	r0, [fp, #-8]
      b8:	bl	0 <memset>
      bc:	ldr	r3, [fp, #-8]
      c0:	mov	r2, #65536	; 0x10000
      c4:	str	r2, [r3]
      c8:	ldr	r3, [fp, #-8]
      cc:	mov	r2, #100	; 0x64
      d0:	str	r2, [r3, #4]
      d4:	ldr	r3, [fp, #-8]
      d8:	mov	r2, #100	; 0x64
      dc:	str	r2, [r3, #8]
      e0:	ldr	r3, [fp, #-8]
      e4:	mov	r2, #1
      e8:	str	r2, [r3, #16]
      ec:	ldr	r3, [fp, #-8]
      f0:	mov	r2, #1
      f4:	str	r2, [r3, #20]
      f8:	ldr	r3, [fp, #-8]
      fc:	mov	r2, #1
     100:	str	r2, [r3, #24]
     104:	ldr	r3, [fp, #-8]
     108:	mov	r2, #1
     10c:	str	r2, [r3, #28]
     110:	ldr	r3, [fp, #-8]
     114:	mov	r2, #1
     118:	str	r2, [r3, #32]
     11c:	ldr	r3, [fp, #-8]
     120:	mov	r2, #1
     124:	str	r2, [r3, #36]	; 0x24
     128:	ldr	r3, [fp, #-8]
     12c:	mov	r2, #1
     130:	str	r2, [r3, #40]	; 0x28
     134:	ldr	r3, [fp, #-8]
     138:	mov	r2, #1
     13c:	str	r2, [r3, #44]	; 0x2c
     140:	ldr	r3, [fp, #-8]
     144:	mov	r2, #1
     148:	str	r2, [r3, #48]	; 0x30
     14c:	ldr	r3, [fp, #-8]
     150:	mov	r2, #1
     154:	str	r2, [r3, #52]	; 0x34
     158:	ldr	r3, [fp, #-8]
     15c:	mov	r2, #0
     160:	str	r2, [r3, #56]	; 0x38
     164:	ldr	r3, [fp, #-8]
     168:	mov	r2, #0
     16c:	str	r2, [r3, #60]	; 0x3c
     170:	ldr	r3, [fp, #-8]
     174:	mov	r2, #4
     178:	str	r2, [r3, #64]	; 0x40
     17c:	ldr	r3, [fp, #-8]
     180:	mov	r2, #2
     184:	str	r2, [r3, #68]	; 0x44
     188:	ldr	r3, [fp, #-8]
     18c:	mov	r2, #1
     190:	str	r2, [r3, #72]	; 0x48
     194:	ldr	r3, [fp, #-8]
     198:	mov	r2, #1
     19c:	str	r2, [r3, #76]	; 0x4c
     1a0:	ldr	r3, [fp, #-8]
     1a4:	mov	r2, #0
     1a8:	str	r2, [r3, #80]	; 0x50
     1ac:	ldr	r3, [fp, #-8]
     1b0:	mov	r2, #1
     1b4:	str	r2, [r3, #84]	; 0x54
     1b8:	ldr	r1, [fp, #-8]
     1bc:	ldr	r2, [pc, #196]	; 288 <flatcc_init_options+0x1ec>
     1c0:	mov	r3, #0
     1c4:	strd	r2, [r1, #88]	; 0x58
     1c8:	ldr	r3, [fp, #-8]
     1cc:	ldr	r2, [pc, #184]	; 28c <flatcc_init_options+0x1f0>
     1d0:	str	r2, [r3, #96]	; 0x60
     1d4:	ldr	r3, [fp, #-8]
     1d8:	ldr	r2, [pc, #176]	; 290 <flatcc_init_options+0x1f4>
     1dc:	str	r2, [r3, #100]	; 0x64
     1e0:	ldr	r3, [fp, #-8]
     1e4:	ldr	r2, [pc, #168]	; 294 <flatcc_init_options+0x1f8>
     1e8:	str	r2, [r3, #104]	; 0x68
     1ec:	ldr	r3, [fp, #-8]
     1f0:	mov	r2, #0
     1f4:	str	r2, [r3, #132]	; 0x84
     1f8:	ldr	r3, [fp, #-8]
     1fc:	mov	r2, #1
     200:	str	r2, [r3, #136]	; 0x88
     204:	ldr	r3, [fp, #-8]
     208:	mov	r2, #1
     20c:	str	r2, [r3, #140]	; 0x8c
     210:	ldr	r3, [fp, #-8]
     214:	mov	r2, #0
     218:	str	r2, [r3, #144]	; 0x90
     21c:	ldr	r3, [fp, #-8]
     220:	mov	r2, #0
     224:	str	r2, [r3, #148]	; 0x94
     228:	ldr	r3, [fp, #-8]
     22c:	mov	r2, #0
     230:	str	r2, [r3, #152]	; 0x98
     234:	ldr	r3, [fp, #-8]
     238:	mov	r2, #0
     23c:	str	r2, [r3, #156]	; 0x9c
     240:	ldr	r3, [fp, #-8]
     244:	mov	r2, #0
     248:	str	r2, [r3, #164]	; 0xa4
     24c:	ldr	r3, [fp, #-8]
     250:	mov	r2, #4
     254:	str	r2, [r3, #176]	; 0xb0
     258:	ldr	r3, [fp, #-8]
     25c:	mov	r2, #0
     260:	str	r2, [r3, #180]	; 0xb4
     264:	ldr	r3, [fp, #-8]
     268:	mov	r2, #1
     26c:	str	r2, [r3, #184]	; 0xb8
     270:	ldr	r3, [fp, #-8]
     274:	mov	r2, #0
     278:	str	r2, [r3, #188]	; 0xbc
     27c:	nop			; (mov r0, r0)
     280:	sub	sp, fp, #4
     284:	pop	{fp, pc}
     288:	.word	0x0000fffe
     28c:	.word	0x00000024
     290:	.word	0x0000002c
     294:	.word	0x00000034

00000298 <flatcc_create_context>:
     298:	push	{fp, lr}
     29c:	add	fp, sp, #4
     2a0:	sub	sp, sp, #32
     2a4:	str	r0, [fp, #-16]
     2a8:	str	r1, [fp, #-20]	; 0xffffffec
     2ac:	str	r2, [fp, #-24]	; 0xffffffe8
     2b0:	str	r3, [fp, #-28]	; 0xffffffe4
     2b4:	mov	r0, #560	; 0x230
     2b8:	bl	0 <malloc>
     2bc:	mov	r3, r0
     2c0:	str	r3, [fp, #-8]
     2c4:	ldr	r3, [fp, #-8]
     2c8:	cmp	r3, #0
     2cc:	bne	2d8 <flatcc_create_context+0x40>
     2d0:	mov	r3, #0
     2d4:	b	31c <flatcc_create_context+0x84>
     2d8:	mov	r3, #0
     2dc:	str	r3, [sp, #4]
     2e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     2e4:	str	r3, [sp]
     2e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     2ec:	ldr	r2, [fp, #-20]	; 0xffffffec
     2f0:	ldr	r1, [fp, #-16]
     2f4:	ldr	r0, [fp, #-8]
     2f8:	bl	0 <__flatcc_fb_init_parser>
     2fc:	mov	r3, r0
     300:	cmp	r3, #0
     304:	beq	318 <flatcc_create_context+0x80>
     308:	ldr	r0, [fp, #-8]
     30c:	bl	0 <free>
     310:	mov	r3, #0
     314:	b	31c <flatcc_create_context+0x84>
     318:	ldr	r3, [fp, #-8]
     31c:	mov	r0, r3
     320:	sub	sp, fp, #4
     324:	pop	{fp, pc}

00000328 <__flatcc_create_child_context>:
     328:	push	{fp, lr}
     32c:	add	fp, sp, #4
     330:	sub	sp, sp, #32
     334:	str	r0, [fp, #-16]
     338:	str	r1, [fp, #-20]	; 0xffffffec
     33c:	str	r2, [fp, #-24]	; 0xffffffe8
     340:	mov	r0, #560	; 0x230
     344:	bl	0 <malloc>
     348:	mov	r3, r0
     34c:	str	r3, [fp, #-8]
     350:	ldr	r3, [fp, #-8]
     354:	cmp	r3, #0
     358:	bne	364 <__flatcc_create_child_context+0x3c>
     35c:	mov	r3, #0
     360:	b	3b8 <__flatcc_create_child_context+0x90>
     364:	ldr	r3, [fp, #-24]	; 0xffffffe8
     368:	ldr	r1, [r3, #8]
     36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     370:	ldr	r3, [r3, #12]
     374:	ldr	r2, [fp, #-24]	; 0xffffffe8
     378:	ldr	r2, [r2, #412]	; 0x19c
     37c:	str	r2, [sp, #4]
     380:	str	r3, [sp]
     384:	mov	r3, r1
     388:	ldr	r2, [fp, #-20]	; 0xffffffec
     38c:	ldr	r1, [fp, #-16]
     390:	ldr	r0, [fp, #-8]
     394:	bl	0 <__flatcc_fb_init_parser>
     398:	mov	r3, r0
     39c:	cmp	r3, #0
     3a0:	beq	3b4 <__flatcc_create_child_context+0x8c>
     3a4:	ldr	r0, [fp, #-8]
     3a8:	bl	0 <free>
     3ac:	mov	r3, #0
     3b0:	b	3b8 <__flatcc_create_child_context+0x90>
     3b4:	ldr	r3, [fp, #-8]
     3b8:	mov	r0, r3
     3bc:	sub	sp, fp, #4
     3c0:	pop	{fp, pc}

000003c4 <flatcc_parse_buffer>:
     3c4:	push	{fp, lr}
     3c8:	add	fp, sp, #4
     3cc:	sub	sp, sp, #24
     3d0:	str	r0, [fp, #-16]
     3d4:	str	r1, [fp, #-20]	; 0xffffffec
     3d8:	str	r2, [fp, #-24]	; 0xffffffe8
     3dc:	ldr	r3, [fp, #-16]
     3e0:	str	r3, [fp, #-8]
     3e4:	ldr	r3, [fp, #-8]
     3e8:	mov	r2, #1
     3ec:	str	r2, [r3, #140]	; 0x8c
     3f0:	ldr	r3, [fp, #-8]
     3f4:	ldr	r2, [r3, #128]	; 0x80
     3f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3fc:	cmp	r2, r3
     400:	bcs	428 <flatcc_parse_buffer+0x64>
     404:	ldr	r3, [fp, #-8]
     408:	ldr	r3, [r3, #128]	; 0x80
     40c:	cmp	r3, #0
     410:	beq	428 <flatcc_parse_buffer+0x64>
     414:	ldr	r1, [pc, #116]	; 490 <flatcc_parse_buffer+0xcc>
     418:	ldr	r0, [fp, #-8]
     41c:	bl	0 <__flatcc_fb_print_error>
     420:	mvn	r3, #0
     424:	b	484 <flatcc_parse_buffer+0xc0>
     428:	ldr	r3, [fp, #-8]
     42c:	add	r0, r3, #524	; 0x20c
     430:	ldr	r3, [fp, #-8]
     434:	add	r3, r3, #352	; 0x160
     438:	mov	r2, #1
     43c:	mov	r1, r3
     440:	bl	0 <ptr_set_insert_item>
     444:	mov	r3, #0
     448:	ldr	r2, [fp, #-24]	; 0xffffffe8
     44c:	ldr	r1, [fp, #-20]	; 0xffffffec
     450:	ldr	r0, [fp, #-8]
     454:	bl	0 <__flatcc_fb_parse>
     458:	mov	r3, r0
     45c:	cmp	r3, #0
     460:	bne	478 <flatcc_parse_buffer+0xb4>
     464:	ldr	r0, [fp, #-8]
     468:	bl	0 <__flatcc_fb_build_schema>
     46c:	mov	r3, r0
     470:	cmp	r3, #0
     474:	beq	480 <flatcc_parse_buffer+0xbc>
     478:	mvn	r3, #0
     47c:	b	484 <flatcc_parse_buffer+0xc0>
     480:	mov	r3, #0
     484:	mov	r0, r3
     488:	sub	sp, fp, #4
     48c:	pop	{fp, pc}
     490:	.word	0x0000003c

00000494 <visit_dep>:
     494:	push	{fp, lr}
     498:	add	fp, sp, #4
     49c:	sub	sp, sp, #16
     4a0:	str	r0, [fp, #-16]
     4a4:	str	r1, [fp, #-20]	; 0xffffffec
     4a8:	ldr	r3, [fp, #-16]
     4ac:	str	r3, [fp, #-8]
     4b0:	ldr	r3, [fp, #-20]	; 0xffffffec
     4b4:	str	r3, [fp, #-12]
     4b8:	ldr	r3, [fp, #-8]
     4bc:	add	r3, r3, #172	; 0xac
     4c0:	mov	r2, #1
     4c4:	ldr	r1, [fp, #-12]
     4c8:	mov	r0, r3
     4cc:	bl	0 <ptr_set_insert_item>
     4d0:	nop			; (mov r0, r0)
     4d4:	sub	sp, fp, #4
     4d8:	pop	{fp, pc}

000004dc <add_visible_schema>:
     4dc:	push	{fp, lr}
     4e0:	add	fp, sp, #4
     4e4:	sub	sp, sp, #8
     4e8:	str	r0, [fp, #-8]
     4ec:	str	r1, [fp, #-12]
     4f0:	ldr	r3, [fp, #-12]
     4f4:	add	r3, r3, #172	; 0xac
     4f8:	ldr	r2, [fp, #-8]
     4fc:	ldr	r1, [pc, #16]	; 514 <add_visible_schema+0x38>
     500:	mov	r0, r3
     504:	bl	0 <ptr_set_visit>
     508:	nop			; (mov r0, r0)
     50c:	sub	sp, fp, #4
     510:	pop	{fp, pc}
     514:	.word	0x00000000

00000518 <__parse_include_file>:
     518:	push	{fp, lr}
     51c:	add	fp, sp, #4
     520:	sub	sp, sp, #32
     524:	str	r0, [fp, #-32]	; 0xffffffe0
     528:	str	r1, [fp, #-36]	; 0xffffffdc
     52c:	mov	r3, #0
     530:	str	r3, [fp, #-8]
     534:	mov	r3, #0
     538:	str	r3, [fp, #-12]
     53c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     540:	add	r3, r3, #128	; 0x80
     544:	str	r3, [fp, #-16]
     548:	ldr	r3, [fp, #-32]	; 0xffffffe0
     54c:	ldr	r3, [r3, #412]	; 0x19c
     550:	str	r3, [fp, #-20]	; 0xffffffec
     554:	ldr	r3, [fp, #-20]	; 0xffffffec
     558:	ldr	r2, [r3, #52]	; 0x34
     55c:	ldr	r3, [fp, #-16]
     560:	ldr	r3, [r3, #4]
     564:	cmp	r2, r3
     568:	blt	590 <__parse_include_file+0x78>
     56c:	ldr	r3, [fp, #-16]
     570:	ldr	r3, [r3, #4]
     574:	cmp	r3, #0
     578:	ble	590 <__parse_include_file+0x78>
     57c:	ldr	r1, [pc, #360]	; 6ec <__parse_include_file+0x1d4>
     580:	ldr	r0, [fp, #-32]	; 0xffffffe0
     584:	bl	0 <__flatcc_fb_print_error>
     588:	mvn	r3, #0
     58c:	b	6e0 <__parse_include_file+0x1c8>
     590:	ldr	r3, [fp, #-20]	; 0xffffffec
     594:	ldr	r2, [r3, #48]	; 0x30
     598:	ldr	r3, [fp, #-16]
     59c:	ldr	r3, [r3, #8]
     5a0:	cmp	r2, r3
     5a4:	blt	5cc <__parse_include_file+0xb4>
     5a8:	ldr	r3, [fp, #-16]
     5ac:	ldr	r3, [r3, #8]
     5b0:	cmp	r3, #0
     5b4:	ble	5cc <__parse_include_file+0xb4>
     5b8:	ldr	r1, [pc, #304]	; 6f0 <__parse_include_file+0x1d8>
     5bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     5c0:	bl	0 <__flatcc_fb_print_error>
     5c4:	mvn	r3, #0
     5c8:	b	6e0 <__parse_include_file+0x1c8>
     5cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
     5d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
     5d4:	ldr	r0, [fp, #-16]
     5d8:	bl	328 <__flatcc_create_child_context>
     5dc:	str	r0, [fp, #-8]
     5e0:	ldr	r3, [fp, #-8]
     5e4:	cmp	r3, #0
     5e8:	bne	5f4 <__parse_include_file+0xdc>
     5ec:	mvn	r3, #0
     5f0:	b	6e0 <__parse_include_file+0x1c8>
     5f4:	ldr	r3, [fp, #-8]
     5f8:	str	r3, [fp, #-12]
     5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
     600:	add	r2, r3, #32
     604:	ldr	r3, [fp, #-12]
     608:	add	r3, r3, #352	; 0x160
     60c:	mov	r1, r3
     610:	mov	r0, r2
     614:	bl	0 <fb_schema_table_find_item>
     618:	str	r0, [fp, #-24]	; 0xffffffe8
     61c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     620:	cmp	r3, #0
     624:	beq	64c <__parse_include_file+0x134>
     628:	ldr	r3, [fp, #-32]	; 0xffffffe0
     62c:	add	r3, r3, #352	; 0x160
     630:	ldr	r1, [fp, #-24]	; 0xffffffe8
     634:	mov	r0, r3
     638:	bl	4dc <add_visible_schema>
     63c:	ldr	r0, [fp, #-8]
     640:	bl	1198 <flatcc_destroy_context>
     644:	mov	r3, #0
     648:	b	6e0 <__parse_include_file+0x1c8>
     64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     650:	ldr	r2, [r3]
     654:	ldr	r3, [fp, #-12]
     658:	str	r2, [r3]
     65c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     660:	ldr	r2, [fp, #-12]
     664:	str	r2, [r3]
     668:	ldr	r3, [fp, #-32]	; 0xffffffe0
     66c:	ldr	r2, [r3, #548]	; 0x224
     670:	ldr	r3, [fp, #-12]
     674:	str	r2, [r3, #552]	; 0x228
     678:	ldr	r3, [fp, #-20]	; 0xffffffec
     67c:	ldr	r3, [r3, #52]	; 0x34
     680:	add	r2, r3, #1
     684:	ldr	r3, [fp, #-20]	; 0xffffffec
     688:	str	r2, [r3, #52]	; 0x34
     68c:	ldr	r3, [fp, #-20]	; 0xffffffec
     690:	ldr	r3, [r3, #48]	; 0x30
     694:	add	r2, r3, #1
     698:	ldr	r3, [fp, #-20]	; 0xffffffec
     69c:	str	r2, [r3, #48]	; 0x30
     6a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
     6a4:	ldr	r0, [fp, #-8]
     6a8:	bl	a20 <flatcc_parse_file>
     6ac:	mov	r3, r0
     6b0:	cmp	r3, #0
     6b4:	beq	6c0 <__parse_include_file+0x1a8>
     6b8:	mvn	r3, #0
     6bc:	b	6e0 <__parse_include_file+0x1c8>
     6c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6c4:	add	r2, r3, #352	; 0x160
     6c8:	ldr	r3, [fp, #-12]
     6cc:	add	r3, r3, #352	; 0x160
     6d0:	mov	r1, r3
     6d4:	mov	r0, r2
     6d8:	bl	4dc <add_visible_schema>
     6dc:	mov	r3, #0
     6e0:	mov	r0, r3
     6e4:	sub	sp, fp, #4
     6e8:	pop	{fp, pc}
     6ec:	.word	0x00000060
     6f0:	.word	0x00000080

000006f4 <__flatcc_gen_depends_file>:
     6f4:	push	{fp, lr}
     6f8:	add	fp, sp, #4
     6fc:	sub	sp, sp, #64	; 0x40
     700:	str	r0, [fp, #-64]	; 0xffffffc0
     704:	mov	r3, #0
     708:	str	r3, [fp, #-44]	; 0xffffffd4
     70c:	mov	r3, #0
     710:	str	r3, [fp, #-48]	; 0xffffffd0
     714:	mov	r3, #0
     718:	str	r3, [fp, #-32]	; 0xffffffe0
     71c:	mov	r3, #0
     720:	str	r3, [fp, #-36]	; 0xffffffdc
     724:	mov	r3, #0
     728:	str	r3, [fp, #-52]	; 0xffffffcc
     72c:	mvn	r3, #0
     730:	str	r3, [fp, #-40]	; 0xffffffd8
     734:	ldr	r3, [fp, #-64]	; 0xffffffc0
     738:	ldr	r3, [r3, #552]	; 0x228
     73c:	cmp	r3, #0
     740:	beq	758 <__flatcc_gen_depends_file+0x64>
     744:	ldr	r3, [pc, #680]	; 9f4 <__flatcc_gen_depends_file+0x300>
     748:	mov	r2, #220	; 0xdc
     74c:	ldr	r1, [pc, #676]	; 9f8 <__flatcc_gen_depends_file+0x304>
     750:	ldr	r0, [pc, #676]	; 9fc <__flatcc_gen_depends_file+0x308>
     754:	bl	0 <__assert_fail>
     758:	ldr	r3, [fp, #-64]	; 0xffffffc0
     75c:	ldr	r3, [r3, #344]	; 0x158
     760:	cmp	r3, #0
     764:	beq	774 <__flatcc_gen_depends_file+0x80>
     768:	ldr	r3, [fp, #-64]	; 0xffffffc0
     76c:	ldr	r3, [r3, #344]	; 0x158
     770:	b	778 <__flatcc_gen_depends_file+0x84>
     774:	ldr	r3, [pc, #644]	; a00 <__flatcc_gen_depends_file+0x30c>
     778:	str	r3, [fp, #-56]	; 0xffffffc8
     77c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     780:	ldr	r3, [r3, #512]	; 0x200
     784:	str	r3, [fp, #-60]	; 0xffffffc4
     788:	ldr	r3, [fp, #-64]	; 0xffffffc0
     78c:	ldr	r3, [r3, #248]	; 0xf8
     790:	str	r3, [fp, #-20]	; 0xffffffec
     794:	ldr	r3, [fp, #-64]	; 0xffffffc0
     798:	ldr	r3, [r3, #244]	; 0xf4
     79c:	cmp	r3, #0
     7a0:	beq	7c4 <__flatcc_gen_depends_file+0xd0>
     7a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
     7a8:	ldr	r3, [r3, #244]	; 0xf4
     7ac:	str	r3, [fp, #-8]
     7b0:	ldr	r3, [pc, #584]	; a00 <__flatcc_gen_depends_file+0x30c>
     7b4:	str	r3, [fp, #-12]
     7b8:	ldr	r3, [pc, #576]	; a00 <__flatcc_gen_depends_file+0x30c>
     7bc:	str	r3, [fp, #-16]
     7c0:	b	7dc <__flatcc_gen_depends_file+0xe8>
     7c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
     7c8:	str	r3, [fp, #-8]
     7cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7d0:	str	r3, [fp, #-12]
     7d4:	ldr	r3, [pc, #552]	; a04 <__flatcc_gen_depends_file+0x310>
     7d8:	str	r3, [fp, #-16]
     7dc:	ldr	r3, [fp, #-20]	; 0xffffffec
     7e0:	cmp	r3, #0
     7e4:	beq	7fc <__flatcc_gen_depends_file+0x108>
     7e8:	ldr	r3, [pc, #528]	; a00 <__flatcc_gen_depends_file+0x30c>
     7ec:	str	r3, [fp, #-24]	; 0xffffffe8
     7f0:	ldr	r3, [pc, #520]	; a00 <__flatcc_gen_depends_file+0x30c>
     7f4:	str	r3, [fp, #-28]	; 0xffffffe4
     7f8:	b	82c <__flatcc_gen_depends_file+0x138>
     7fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
     800:	ldr	r3, [r3, #308]	; 0x134
     804:	cmp	r3, #0
     808:	beq	814 <__flatcc_gen_depends_file+0x120>
     80c:	ldr	r3, [pc, #500]	; a08 <__flatcc_gen_depends_file+0x314>
     810:	b	818 <__flatcc_gen_depends_file+0x124>
     814:	ldr	r3, [pc, #496]	; a0c <__flatcc_gen_depends_file+0x318>
     818:	str	r3, [fp, #-24]	; 0xffffffe8
     81c:	ldr	r3, [fp, #-60]	; 0xffffffc4
     820:	str	r3, [fp, #-20]	; 0xffffffec
     824:	ldr	r3, [fp, #-56]	; 0xffffffc8
     828:	str	r3, [fp, #-28]	; 0xffffffe4
     82c:	mov	r3, #1
     830:	ldr	r2, [fp, #-16]
     834:	ldr	r1, [fp, #-8]
     838:	ldr	r0, [fp, #-12]
     83c:	bl	0 <__flatcc_fb_create_join_path>
     840:	str	r0, [fp, #-48]	; 0xffffffd0
     844:	ldr	r0, [fp, #-48]	; 0xffffffd0
     848:	bl	0 <checkmem>
     84c:	mov	r3, #1
     850:	ldr	r2, [fp, #-24]	; 0xffffffe8
     854:	ldr	r1, [fp, #-20]	; 0xffffffec
     858:	ldr	r0, [fp, #-28]	; 0xffffffe4
     85c:	bl	0 <__flatcc_fb_create_join_path>
     860:	str	r0, [fp, #-36]	; 0xffffffdc
     864:	ldr	r0, [fp, #-36]	; 0xffffffdc
     868:	bl	0 <checkmem>
     86c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     870:	bl	0 <__flatcc_fb_create_make_path>
     874:	str	r0, [fp, #-52]	; 0xffffffcc
     878:	ldr	r0, [fp, #-52]	; 0xffffffcc
     87c:	bl	0 <checkmem>
     880:	ldr	r3, [fp, #-36]	; 0xffffffdc
     884:	cmp	r3, #0
     888:	beq	89c <__flatcc_gen_depends_file+0x1a8>
     88c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     890:	bl	0 <free>
     894:	mov	r3, #0
     898:	str	r3, [fp, #-36]	; 0xffffffdc
     89c:	ldr	r1, [pc, #364]	; a10 <__flatcc_gen_depends_file+0x31c>
     8a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8a4:	bl	0 <fopen>
     8a8:	str	r0, [fp, #-44]	; 0xffffffd4
     8ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8b0:	cmp	r3, #0
     8b4:	bne	8cc <__flatcc_gen_depends_file+0x1d8>
     8b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
     8bc:	ldr	r1, [pc, #336]	; a14 <__flatcc_gen_depends_file+0x320>
     8c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8c4:	bl	0 <__flatcc_fb_print_error>
     8c8:	b	960 <__flatcc_gen_depends_file+0x26c>
     8cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
     8d0:	ldr	r1, [pc, #320]	; a18 <__flatcc_gen_depends_file+0x324>
     8d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     8d8:	bl	0 <fprintf>
     8dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
     8e0:	ldr	r3, [r3]
     8e4:	str	r3, [fp, #-64]	; 0xffffffc0
     8e8:	b	940 <__flatcc_gen_depends_file+0x24c>
     8ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
     8f0:	ldr	r3, [r3, #548]	; 0x224
     8f4:	mov	r0, r3
     8f8:	bl	0 <__flatcc_fb_create_make_path>
     8fc:	str	r0, [fp, #-32]	; 0xffffffe0
     900:	ldr	r0, [fp, #-32]	; 0xffffffe0
     904:	bl	0 <checkmem>
     908:	ldr	r2, [fp, #-32]	; 0xffffffe0
     90c:	ldr	r1, [pc, #264]	; a1c <__flatcc_gen_depends_file+0x328>
     910:	ldr	r0, [fp, #-44]	; 0xffffffd4
     914:	bl	0 <fprintf>
     918:	ldr	r3, [fp, #-64]	; 0xffffffc0
     91c:	ldr	r3, [r3]
     920:	str	r3, [fp, #-64]	; 0xffffffc0
     924:	ldr	r3, [fp, #-32]	; 0xffffffe0
     928:	cmp	r3, #0
     92c:	beq	940 <__flatcc_gen_depends_file+0x24c>
     930:	ldr	r0, [fp, #-32]	; 0xffffffe0
     934:	bl	0 <free>
     938:	mov	r3, #0
     93c:	str	r3, [fp, #-32]	; 0xffffffe0
     940:	ldr	r3, [fp, #-64]	; 0xffffffc0
     944:	cmp	r3, #0
     948:	bne	8ec <__flatcc_gen_depends_file+0x1f8>
     94c:	ldr	r1, [fp, #-44]	; 0xffffffd4
     950:	mov	r0, #10
     954:	bl	0 <fputc>
     958:	mov	r3, #0
     95c:	str	r3, [fp, #-40]	; 0xffffffd8
     960:	ldr	r3, [fp, #-48]	; 0xffffffd0
     964:	cmp	r3, #0
     968:	beq	97c <__flatcc_gen_depends_file+0x288>
     96c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     970:	bl	0 <free>
     974:	mov	r3, #0
     978:	str	r3, [fp, #-48]	; 0xffffffd0
     97c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     980:	cmp	r3, #0
     984:	beq	998 <__flatcc_gen_depends_file+0x2a4>
     988:	ldr	r0, [fp, #-36]	; 0xffffffdc
     98c:	bl	0 <free>
     990:	mov	r3, #0
     994:	str	r3, [fp, #-36]	; 0xffffffdc
     998:	ldr	r3, [fp, #-52]	; 0xffffffcc
     99c:	cmp	r3, #0
     9a0:	beq	9b4 <__flatcc_gen_depends_file+0x2c0>
     9a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     9a8:	bl	0 <free>
     9ac:	mov	r3, #0
     9b0:	str	r3, [fp, #-52]	; 0xffffffcc
     9b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9b8:	cmp	r3, #0
     9bc:	beq	9d0 <__flatcc_gen_depends_file+0x2dc>
     9c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     9c4:	bl	0 <free>
     9c8:	mov	r3, #0
     9cc:	str	r3, [fp, #-32]	; 0xffffffe0
     9d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     9d4:	cmp	r3, #0
     9d8:	beq	9e4 <__flatcc_gen_depends_file+0x2f0>
     9dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     9e0:	bl	0 <fclose>
     9e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     9e8:	mov	r0, r3
     9ec:	sub	sp, fp, #4
     9f0:	pop	{fp, pc}
     9f4:	.word	0x00000184
     9f8:	.word	0x000000a0
     9fc:	.word	0x000000f0
     a00:	.word	0x00000108
     a04:	.word	0x0000010c
     a08:	.word	0x0000002c
     a0c:	.word	0x00000114
     a10:	.word	0x00000120
     a14:	.word	0x00000124
     a18:	.word	0x00000154
     a1c:	.word	0x00000158

00000a20 <flatcc_parse_file>:
     a20:	push	{fp, lr}
     a24:	add	fp, sp, #4
     a28:	sub	sp, sp, #64	; 0x40
     a2c:	str	r0, [fp, #-56]	; 0xffffffc8
     a30:	str	r1, [fp, #-60]	; 0xffffffc4
     a34:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a38:	str	r3, [fp, #-32]	; 0xffffffe0
     a3c:	ldr	r0, [fp, #-60]	; 0xffffffc4
     a40:	bl	0 <strlen>
     a44:	str	r0, [fp, #-36]	; 0xffffffdc
     a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a4c:	ldr	r3, [r3, #412]	; 0x19c
     a50:	add	r0, r3, #32
     a54:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a58:	add	r3, r3, #352	; 0x160
     a5c:	mov	r2, #1
     a60:	mov	r1, r3
     a64:	bl	0 <fb_schema_table_insert_item>
     a68:	mov	r3, r0
     a6c:	cmp	r3, #0
     a70:	beq	a7c <flatcc_parse_file+0x5c>
     a74:	mov	r3, #0
     a78:	b	ee8 <flatcc_parse_file+0x4c8>
     a7c:	mov	r3, #0
     a80:	str	r3, [fp, #-8]
     a84:	mov	r3, #0
     a88:	str	r3, [fp, #-12]
     a8c:	mov	r3, #0
     a90:	str	r3, [fp, #-16]
     a94:	mvn	r3, #0
     a98:	str	r3, [fp, #-28]	; 0xffffffe4
     a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     aa0:	ldr	r3, [r3, #552]	; 0x228
     aa4:	cmp	r3, #0
     aa8:	moveq	r3, #1
     aac:	movne	r3, #0
     ab0:	uxtb	r3, r3
     ab4:	str	r3, [fp, #-40]	; 0xffffffd8
     ab8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     abc:	cmp	r3, #0
     ac0:	beq	b4c <flatcc_parse_file+0x12c>
     ac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ac8:	ldr	r3, [r3, #128]	; 0x80
     acc:	sub	r2, fp, #52	; 0x34
     ad0:	mov	r1, r3
     ad4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     ad8:	bl	0 <__flatcc_fb_read_file>
     adc:	str	r0, [fp, #-8]
     ae0:	ldr	r3, [fp, #-8]
     ae4:	cmp	r3, #0
     ae8:	bne	b38 <flatcc_parse_file+0x118>
     aec:	ldr	r3, [fp, #-32]	; 0xffffffe0
     af0:	ldr	r3, [r3, #412]	; 0x19c
     af4:	ldr	r2, [r3, #56]	; 0x38
     af8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     afc:	add	r2, r2, r3
     b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b04:	ldr	r3, [r3, #128]	; 0x80
     b08:	cmp	r2, r3
     b0c:	bls	b4c <flatcc_parse_file+0x12c>
     b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b14:	ldr	r3, [r3, #128]	; 0x80
     b18:	cmp	r3, #0
     b1c:	beq	b4c <flatcc_parse_file+0x12c>
     b20:	ldr	r1, [pc, #972]	; ef4 <flatcc_parse_file+0x4d4>
     b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b28:	bl	0 <__flatcc_fb_print_error>
     b2c:	mvn	r3, #0
     b30:	str	r3, [fp, #-28]	; 0xffffffe4
     b34:	b	eac <flatcc_parse_file+0x48c>
     b38:	ldr	r0, [fp, #-60]	; 0xffffffc4
     b3c:	bl	0 <__flatcc_fb_copy_path>
     b40:	str	r0, [fp, #-12]
     b44:	ldr	r0, [fp, #-12]
     b48:	bl	0 <checkmem>
     b4c:	mov	r3, #0
     b50:	str	r3, [fp, #-24]	; 0xffffffe8
     b54:	b	c30 <flatcc_parse_file+0x210>
     b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b5c:	ldr	r2, [r3, #328]	; 0x148
     b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b64:	lsl	r3, r3, #2
     b68:	add	r3, r2, r3
     b6c:	ldr	r3, [r3]
     b70:	str	r3, [fp, #-44]	; 0xffffffd4
     b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b78:	bl	0 <strlen>
     b7c:	str	r0, [fp, #-48]	; 0xffffffd0
     b80:	mov	r3, #1
     b84:	str	r3, [sp, #4]
     b88:	ldr	r3, [pc, #872]	; ef8 <flatcc_parse_file+0x4d8>
     b8c:	str	r3, [sp]
     b90:	ldr	r3, [fp, #-36]	; 0xffffffdc
     b94:	ldr	r2, [fp, #-60]	; 0xffffffc4
     b98:	ldr	r1, [fp, #-48]	; 0xffffffd0
     b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ba0:	bl	0 <__flatcc_fb_create_join_path_n>
     ba4:	str	r0, [fp, #-12]
     ba8:	ldr	r0, [fp, #-12]
     bac:	bl	0 <checkmem>
     bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     bb4:	ldr	r3, [r3, #128]	; 0x80
     bb8:	sub	r2, fp, #52	; 0x34
     bbc:	mov	r1, r3
     bc0:	ldr	r0, [fp, #-12]
     bc4:	bl	0 <__flatcc_fb_read_file>
     bc8:	str	r0, [fp, #-8]
     bcc:	ldr	r3, [fp, #-8]
     bd0:	cmp	r3, #0
     bd4:	bne	c24 <flatcc_parse_file+0x204>
     bd8:	ldr	r0, [fp, #-12]
     bdc:	bl	0 <free>
     be0:	mov	r3, #0
     be4:	str	r3, [fp, #-12]
     be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     bec:	ldr	r2, [r3, #128]	; 0x80
     bf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     bf4:	cmp	r2, r3
     bf8:	bcs	c24 <flatcc_parse_file+0x204>
     bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c00:	ldr	r3, [r3, #128]	; 0x80
     c04:	cmp	r3, #0
     c08:	beq	c24 <flatcc_parse_file+0x204>
     c0c:	ldr	r1, [pc, #736]	; ef4 <flatcc_parse_file+0x4d4>
     c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c14:	bl	0 <__flatcc_fb_print_error>
     c18:	mvn	r3, #0
     c1c:	str	r3, [fp, #-28]	; 0xffffffe4
     c20:	b	eac <flatcc_parse_file+0x48c>
     c24:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c28:	add	r3, r3, #1
     c2c:	str	r3, [fp, #-24]	; 0xffffffe8
     c30:	ldr	r3, [fp, #-8]
     c34:	cmp	r3, #0
     c38:	bne	c50 <flatcc_parse_file+0x230>
     c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c40:	ldr	r2, [r3, #336]	; 0x150
     c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c48:	cmp	r2, r3
     c4c:	bgt	b58 <flatcc_parse_file+0x138>
     c50:	ldr	r3, [fp, #-8]
     c54:	cmp	r3, #0
     c58:	bne	d34 <flatcc_parse_file+0x314>
     c5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c60:	cmp	r3, #0
     c64:	bne	d34 <flatcc_parse_file+0x314>
     c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c6c:	ldr	r3, [r3, #552]	; 0x228
     c70:	str	r3, [fp, #-44]	; 0xffffffd4
     c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c78:	bl	0 <strlen>
     c7c:	mov	r3, r0
     c80:	mov	r1, r3
     c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c88:	bl	0 <__flatcc_fb_find_basename>
     c8c:	str	r0, [fp, #-48]	; 0xffffffd0
     c90:	mov	r3, #1
     c94:	str	r3, [sp, #4]
     c98:	ldr	r3, [pc, #600]	; ef8 <flatcc_parse_file+0x4d8>
     c9c:	str	r3, [sp]
     ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
     ca4:	ldr	r2, [fp, #-60]	; 0xffffffc4
     ca8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
     cb0:	bl	0 <__flatcc_fb_create_join_path_n>
     cb4:	str	r0, [fp, #-12]
     cb8:	ldr	r0, [fp, #-12]
     cbc:	bl	0 <checkmem>
     cc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     cc4:	ldr	r3, [r3, #128]	; 0x80
     cc8:	sub	r2, fp, #52	; 0x34
     ccc:	mov	r1, r3
     cd0:	ldr	r0, [fp, #-12]
     cd4:	bl	0 <__flatcc_fb_read_file>
     cd8:	str	r0, [fp, #-8]
     cdc:	ldr	r3, [fp, #-8]
     ce0:	cmp	r3, #0
     ce4:	bne	d34 <flatcc_parse_file+0x314>
     ce8:	ldr	r0, [fp, #-12]
     cec:	bl	0 <free>
     cf0:	mov	r3, #0
     cf4:	str	r3, [fp, #-12]
     cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     cfc:	ldr	r2, [r3, #128]	; 0x80
     d00:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d04:	cmp	r2, r3
     d08:	bcs	d34 <flatcc_parse_file+0x314>
     d0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d10:	ldr	r3, [r3, #128]	; 0x80
     d14:	cmp	r3, #0
     d18:	beq	d34 <flatcc_parse_file+0x314>
     d1c:	ldr	r1, [pc, #464]	; ef4 <flatcc_parse_file+0x4d4>
     d20:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d24:	bl	0 <__flatcc_fb_print_error>
     d28:	mvn	r3, #0
     d2c:	str	r3, [fp, #-28]	; 0xffffffe4
     d30:	b	eac <flatcc_parse_file+0x48c>
     d34:	ldr	r3, [fp, #-8]
     d38:	cmp	r3, #0
     d3c:	bne	d54 <flatcc_parse_file+0x334>
     d40:	ldr	r2, [fp, #-60]	; 0xffffffc4
     d44:	ldr	r1, [pc, #432]	; efc <flatcc_parse_file+0x4dc>
     d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d4c:	bl	0 <__flatcc_fb_print_error>
     d50:	b	eac <flatcc_parse_file+0x48c>
     d54:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d58:	ldr	r3, [r3, #412]	; 0x19c
     d5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     d60:	ldr	r2, [r2, #412]	; 0x19c
     d64:	ldr	r1, [r2, #56]	; 0x38
     d68:	ldr	r2, [fp, #-52]	; 0xffffffcc
     d6c:	add	r2, r1, r2
     d70:	str	r2, [r3, #56]	; 0x38
     d74:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d78:	ldr	r2, [fp, #-12]
     d7c:	str	r2, [r3, #548]	; 0x224
     d80:	mov	r3, #0
     d84:	str	r3, [fp, #-12]
     d88:	ldr	r2, [fp, #-52]	; 0xffffffcc
     d8c:	mov	r3, #1
     d90:	ldr	r1, [fp, #-8]
     d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d98:	bl	0 <__flatcc_fb_parse>
     d9c:	str	r0, [fp, #-28]	; 0xffffffe4
     da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     da4:	cmp	r3, #0
     da8:	bne	e8c <flatcc_parse_file+0x46c>
     dac:	mov	r3, #0
     db0:	str	r3, [fp, #-8]
     db4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     db8:	ldr	r3, [r3, #352]	; 0x160
     dbc:	str	r3, [fp, #-20]	; 0xffffffec
     dc0:	b	e20 <flatcc_parse_file+0x400>
     dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     dc8:	ldr	r2, [r3, #8]
     dcc:	ldr	r3, [fp, #-20]	; 0xffffffec
     dd0:	ldr	r3, [r3, #12]
     dd4:	mov	r1, r3
     dd8:	mov	r0, r2
     ddc:	bl	0 <__flatcc_fb_copy_path_n>
     de0:	str	r0, [fp, #-16]
     de4:	ldr	r0, [fp, #-16]
     de8:	bl	0 <checkmem>
     dec:	ldr	r1, [fp, #-16]
     df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     df4:	bl	518 <__parse_include_file>
     df8:	mov	r3, r0
     dfc:	cmp	r3, #0
     e00:	bne	e98 <flatcc_parse_file+0x478>
     e04:	ldr	r0, [fp, #-16]
     e08:	bl	0 <free>
     e0c:	mov	r3, #0
     e10:	str	r3, [fp, #-16]
     e14:	ldr	r3, [fp, #-20]	; 0xffffffec
     e18:	ldr	r3, [r3]
     e1c:	str	r3, [fp, #-20]	; 0xffffffec
     e20:	ldr	r3, [fp, #-20]	; 0xffffffec
     e24:	cmp	r3, #0
     e28:	bne	dc4 <flatcc_parse_file+0x3a4>
     e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e30:	add	r0, r3, #524	; 0x20c
     e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e38:	add	r3, r3, #352	; 0x160
     e3c:	mov	r2, #1
     e40:	mov	r1, r3
     e44:	bl	0 <ptr_set_insert_item>
     e48:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e4c:	bl	0 <__flatcc_fb_build_schema>
     e50:	mov	r3, r0
     e54:	cmp	r3, #0
     e58:	bne	ea0 <flatcc_parse_file+0x480>
     e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e60:	ldr	r3, [r3, #240]	; 0xf0
     e64:	cmp	r3, #0
     e68:	beq	e8c <flatcc_parse_file+0x46c>
     e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e70:	cmp	r3, #0
     e74:	beq	e8c <flatcc_parse_file+0x46c>
     e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e7c:	bl	6f4 <__flatcc_gen_depends_file>
     e80:	mov	r3, r0
     e84:	cmp	r3, #0
     e88:	bne	ea8 <flatcc_parse_file+0x488>
     e8c:	mov	r3, #0
     e90:	str	r3, [fp, #-28]	; 0xffffffe4
     e94:	b	eac <flatcc_parse_file+0x48c>
     e98:	nop			; (mov r0, r0)
     e9c:	b	eac <flatcc_parse_file+0x48c>
     ea0:	nop			; (mov r0, r0)
     ea4:	b	eac <flatcc_parse_file+0x48c>
     ea8:	nop			; (mov r0, r0)
     eac:	ldr	r3, [fp, #-12]
     eb0:	cmp	r3, #0
     eb4:	beq	ec8 <flatcc_parse_file+0x4a8>
     eb8:	ldr	r0, [fp, #-12]
     ebc:	bl	0 <free>
     ec0:	mov	r3, #0
     ec4:	str	r3, [fp, #-12]
     ec8:	ldr	r3, [fp, #-16]
     ecc:	cmp	r3, #0
     ed0:	beq	ee4 <flatcc_parse_file+0x4c4>
     ed4:	ldr	r0, [fp, #-16]
     ed8:	bl	0 <free>
     edc:	mov	r3, #0
     ee0:	str	r3, [fp, #-16]
     ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ee8:	mov	r0, r3
     eec:	sub	sp, fp, #4
     ef0:	pop	{fp, pc}
     ef4:	.word	0x0000003c
     ef8:	.word	0x00000108
     efc:	.word	0x0000015c

00000f00 <flatcc_generate_binary_schema_to_buffer>:
     f00:	push	{fp, lr}
     f04:	add	fp, sp, #4
     f08:	sub	sp, sp, #24
     f0c:	str	r0, [fp, #-16]
     f10:	str	r1, [fp, #-20]	; 0xffffffec
     f14:	str	r2, [fp, #-24]	; 0xffffffe8
     f18:	ldr	r3, [fp, #-16]
     f1c:	str	r3, [fp, #-8]
     f20:	ldr	r3, [fp, #-8]
     f24:	add	r0, r3, #128	; 0x80
     f28:	ldr	r3, [fp, #-8]
     f2c:	add	r1, r3, #352	; 0x160
     f30:	sub	r3, fp, #24
     f34:	ldr	r2, [fp, #-20]	; 0xffffffec
     f38:	bl	0 <__flatcc_fb_codegen_bfbs_to_buffer>
     f3c:	mov	r3, r0
     f40:	cmp	r3, #0
     f44:	beq	f50 <flatcc_generate_binary_schema_to_buffer+0x50>
     f48:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f4c:	b	f54 <flatcc_generate_binary_schema_to_buffer+0x54>
     f50:	mvn	r3, #0
     f54:	mov	r0, r3
     f58:	sub	sp, fp, #4
     f5c:	pop	{fp, pc}

00000f60 <flatcc_generate_binary_schema>:
     f60:	push	{fp, lr}
     f64:	add	fp, sp, #4
     f68:	sub	sp, sp, #16
     f6c:	str	r0, [fp, #-16]
     f70:	str	r1, [fp, #-20]	; 0xffffffec
     f74:	ldr	r3, [fp, #-16]
     f78:	str	r3, [fp, #-8]
     f7c:	ldr	r3, [fp, #-8]
     f80:	add	r0, r3, #128	; 0x80
     f84:	ldr	r3, [fp, #-8]
     f88:	add	r3, r3, #352	; 0x160
     f8c:	ldr	r2, [fp, #-20]	; 0xffffffec
     f90:	mov	r1, r3
     f94:	bl	0 <__flatcc_fb_codegen_bfbs_alloc_buffer>
     f98:	mov	r3, r0
     f9c:	mov	r0, r3
     fa0:	sub	sp, fp, #4
     fa4:	pop	{fp, pc}

00000fa8 <flatcc_generate_files>:
     fa8:	push	{fp, lr}
     fac:	add	fp, sp, #4
     fb0:	sub	sp, sp, #256	; 0x100
     fb4:	str	r0, [fp, #-256]	; 0xffffff00
     fb8:	ldr	r3, [fp, #-256]	; 0xffffff00
     fbc:	str	r3, [fp, #-8]
     fc0:	mov	r3, #0
     fc4:	str	r3, [fp, #-16]
     fc8:	sub	r3, fp, #252	; 0xfc
     fcc:	str	r3, [fp, #-20]	; 0xffffffec
     fd0:	ldr	r3, [fp, #-8]
     fd4:	cmp	r3, #0
     fd8:	beq	fec <flatcc_generate_files+0x44>
     fdc:	ldr	r3, [fp, #-8]
     fe0:	ldr	r3, [r3, #108]	; 0x6c
     fe4:	cmp	r3, #0
     fe8:	beq	ff4 <flatcc_generate_files+0x4c>
     fec:	mvn	r3, #0
     ff0:	b	118c <flatcc_generate_files+0x1e4>
     ff4:	mov	r3, #0
     ff8:	str	r3, [fp, #-12]
     ffc:	b	1020 <flatcc_generate_files+0x78>
    1000:	ldr	r3, [fp, #-8]
    1004:	ldr	r2, [fp, #-12]
    1008:	str	r2, [r3, #4]
    100c:	ldr	r3, [fp, #-8]
    1010:	str	r3, [fp, #-12]
    1014:	ldr	r3, [fp, #-8]
    1018:	ldr	r3, [r3]
    101c:	str	r3, [fp, #-8]
    1020:	ldr	r3, [fp, #-8]
    1024:	cmp	r3, #0
    1028:	bne	1000 <flatcc_generate_files+0x58>
    102c:	ldr	r3, [fp, #-256]	; 0xffffff00
    1030:	str	r3, [fp, #-8]
    1034:	ldr	r3, [fp, #-8]
    1038:	ldr	r3, [r3, #308]	; 0x134
    103c:	cmp	r3, #0
    1040:	beq	1074 <flatcc_generate_files+0xcc>
    1044:	ldr	r3, [fp, #-8]
    1048:	add	r2, r3, #128	; 0x80
    104c:	ldr	r3, [fp, #-8]
    1050:	add	r3, r3, #352	; 0x160
    1054:	mov	r1, r3
    1058:	mov	r0, r2
    105c:	bl	0 <__flatcc_fb_codegen_bfbs_to_file>
    1060:	mov	r3, r0
    1064:	cmp	r3, #0
    1068:	beq	1074 <flatcc_generate_files+0xcc>
    106c:	mvn	r3, #0
    1070:	b	118c <flatcc_generate_files+0x1e4>
    1074:	ldr	r3, [fp, #-8]
    1078:	add	r3, r3, #128	; 0x80
    107c:	mov	r1, r3
    1080:	ldr	r0, [fp, #-20]	; 0xffffffec
    1084:	bl	0 <__flatcc_fb_init_output_c>
    1088:	mov	r3, r0
    108c:	cmp	r3, #0
    1090:	beq	109c <flatcc_generate_files+0xf4>
    1094:	mvn	r3, #0
    1098:	b	118c <flatcc_generate_files+0x1e4>
    109c:	ldr	r3, [fp, #-8]
    10a0:	ldr	r3, [r3, #256]	; 0x100
    10a4:	cmp	r3, #0
    10a8:	bne	10c4 <flatcc_generate_files+0x11c>
    10ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    10b0:	bl	0 <__flatcc_fb_codegen_common_c>
    10b4:	str	r0, [fp, #-16]
    10b8:	ldr	r3, [fp, #-16]
    10bc:	cmp	r3, #0
    10c0:	bne	1174 <flatcc_generate_files+0x1cc>
    10c4:	ldr	r3, [fp, #-8]
    10c8:	ldr	r3, [r3, #120]	; 0x78
    10cc:	cmp	r3, #0
    10d0:	beq	117c <flatcc_generate_files+0x1d4>
    10d4:	ldr	r3, [fp, #-8]
    10d8:	ldr	r3, [r3, #300]	; 0x12c
    10dc:	cmp	r3, #0
    10e0:	bne	1100 <flatcc_generate_files+0x158>
    10e4:	ldr	r3, [fp, #-8]
    10e8:	add	r3, r3, #352	; 0x160
    10ec:	mov	r1, r3
    10f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    10f4:	bl	0 <__flatcc_fb_codegen_c>
    10f8:	str	r0, [fp, #-16]
    10fc:	b	1180 <flatcc_generate_files+0x1d8>
    1100:	ldr	r3, [fp, #-12]
    1104:	str	r3, [fp, #-8]
    1108:	b	1158 <flatcc_generate_files+0x1b0>
    110c:	ldr	r3, [fp, #-8]
    1110:	ldr	r3, [r3, #108]	; 0x6c
    1114:	cmp	r3, #0
    1118:	bne	113c <flatcc_generate_files+0x194>
    111c:	ldr	r3, [fp, #-8]
    1120:	add	r3, r3, #352	; 0x160
    1124:	mov	r1, r3
    1128:	ldr	r0, [fp, #-20]	; 0xffffffec
    112c:	bl	0 <__flatcc_fb_codegen_c>
    1130:	mov	r3, r0
    1134:	cmp	r3, #0
    1138:	beq	1144 <flatcc_generate_files+0x19c>
    113c:	mov	r3, #1
    1140:	b	1148 <flatcc_generate_files+0x1a0>
    1144:	mov	r3, #0
    1148:	str	r3, [fp, #-16]
    114c:	ldr	r3, [fp, #-8]
    1150:	ldr	r3, [r3, #4]
    1154:	str	r3, [fp, #-8]
    1158:	ldr	r3, [fp, #-16]
    115c:	cmp	r3, #0
    1160:	bne	1180 <flatcc_generate_files+0x1d8>
    1164:	ldr	r3, [fp, #-8]
    1168:	cmp	r3, #0
    116c:	bne	110c <flatcc_generate_files+0x164>
    1170:	b	1180 <flatcc_generate_files+0x1d8>
    1174:	nop			; (mov r0, r0)
    1178:	b	1180 <flatcc_generate_files+0x1d8>
    117c:	nop			; (mov r0, r0)
    1180:	ldr	r0, [fp, #-20]	; 0xffffffec
    1184:	bl	0 <__flatcc_fb_end_output_c>
    1188:	ldr	r3, [fp, #-16]
    118c:	mov	r0, r3
    1190:	sub	sp, fp, #4
    1194:	pop	{fp, pc}

00001198 <flatcc_destroy_context>:
    1198:	push	{fp, lr}
    119c:	add	fp, sp, #4
    11a0:	sub	sp, sp, #16
    11a4:	str	r0, [fp, #-16]
    11a8:	ldr	r3, [fp, #-16]
    11ac:	str	r3, [fp, #-8]
    11b0:	mov	r3, #0
    11b4:	str	r3, [fp, #-12]
    11b8:	b	11e0 <flatcc_destroy_context+0x48>
    11bc:	ldr	r3, [fp, #-8]
    11c0:	ldr	r3, [r3]
    11c4:	str	r3, [fp, #-12]
    11c8:	ldr	r0, [fp, #-8]
    11cc:	bl	0 <__flatcc_fb_clear_parser>
    11d0:	ldr	r0, [fp, #-8]
    11d4:	bl	0 <free>
    11d8:	ldr	r3, [fp, #-12]
    11dc:	str	r3, [fp, #-8]
    11e0:	ldr	r3, [fp, #-8]
    11e4:	cmp	r3, #0
    11e8:	bne	11bc <flatcc_destroy_context+0x24>
    11ec:	nop			; (mov r0, r0)
    11f0:	sub	sp, fp, #4
    11f4:	pop	{fp, pc}
