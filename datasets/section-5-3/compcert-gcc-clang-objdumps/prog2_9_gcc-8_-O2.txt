
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000109a0 <.init>:
   109a0:	push	{r3, lr}
   109a4:	bl	10de8 <_start@@Base+0x3c>
   109a8:	pop	{r3, pc}

Disassembly of section .plt:

000109ac <calloc@plt-0x14>:
   109ac:	push	{lr}		; (str lr, [sp, #-4]!)
   109b0:	ldr	lr, [pc, #4]	; 109bc <calloc@plt-0x4>
   109b4:	add	lr, pc, lr
   109b8:	ldr	pc, [lr, #8]!
   109bc:	andeq	r1, r1, r4, asr #12

000109c0 <calloc@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #69632	; 0x11000
   109c8:	ldr	pc, [ip, #1604]!	; 0x644

000109cc <strcmp@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #69632	; 0x11000
   109d4:	ldr	pc, [ip, #1596]!	; 0x63c

000109d8 <printf@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1588]!	; 0x634

000109e4 <__isoc99_fscanf@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1580]!	; 0x62c

000109f0 <fopen@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #69632	; 0x11000
   109f8:	ldr	pc, [ip, #1572]!	; 0x624

000109fc <fflush@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #69632	; 0x11000
   10a04:	ldr	pc, [ip, #1564]!	; 0x61c

00010a08 <free@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #69632	; 0x11000
   10a10:	ldr	pc, [ip, #1556]!	; 0x614

00010a14 <fgets@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #69632	; 0x11000
   10a1c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a20 <strdup@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #69632	; 0x11000
   10a28:	ldr	pc, [ip, #1540]!	; 0x604

00010a2c <puts@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a38 <malloc@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a44 <__libc_start_main@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a50 <__gmon_start__@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a5c <feof@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a68 <strlen@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a74 <putchar@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a80 <fclose@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a8c <abort@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1468]!	; 0x5bc

Disassembly of section .text:

00010a98 <main@@Base>:
   10a98:	mov	r0, #42	; 0x2a
   10a9c:	strd	r4, [sp, #-16]!
   10aa0:	movw	r5, #8296	; 0x2068
   10aa4:	movt	r5, #2
   10aa8:	str	r6, [sp, #8]
   10aac:	str	lr, [sp, #12]
   10ab0:	bl	11270 <vetor_cria@@Base>
   10ab4:	mov	r4, r0
   10ab8:	movw	r0, #5736	; 0x1668
   10abc:	movt	r0, #1
   10ac0:	bl	10a2c <puts@plt>
   10ac4:	mov	r0, r4
   10ac8:	movw	r1, #5792	; 0x16a0
   10acc:	movt	r1, #1
   10ad0:	bl	110ac <fp_carrega@@Base>
   10ad4:	movw	r0, #5804	; 0x16ac
   10ad8:	movt	r0, #1
   10adc:	ldr	r1, [r5]
   10ae0:	bl	109d8 <printf@plt>
   10ae4:	mov	r0, r4
   10ae8:	bl	11494 <vetor_imprime@@Base>
   10aec:	ldr	r3, [r4]
   10af0:	cmp	r3, #42	; 0x2a
   10af4:	beq	10b1c <main@@Base+0x84>
   10af8:	movw	r0, #5860	; 0x16e4
   10afc:	movt	r0, #1
   10b00:	mov	r6, #1
   10b04:	bl	10a2c <puts@plt>
   10b08:	mov	r0, r6
   10b0c:	ldrd	r4, [sp]
   10b10:	ldr	r6, [sp, #8]
   10b14:	add	sp, sp, #12
   10b18:	pop	{pc}		; (ldr pc, [sp], #4)
   10b1c:	mov	r0, r4
   10b20:	bl	11058 <fp_remove@@Base>
   10b24:	mov	r1, r0
   10b28:	movw	r0, #5900	; 0x170c
   10b2c:	movt	r0, #1
   10b30:	bl	109cc <strcmp@plt>
   10b34:	subs	r6, r0, #0
   10b38:	bne	10d84 <main@@Base+0x2ec>
   10b3c:	mov	r0, r4
   10b40:	str	r6, [r5]
   10b44:	bl	11058 <fp_remove@@Base>
   10b48:	movw	r0, #5988	; 0x1764
   10b4c:	movt	r0, #1
   10b50:	ldr	r1, [r5]
   10b54:	bl	109d8 <printf@plt>
   10b58:	ldrd	r2, [r4]
   10b5c:	str	r6, [r5]
   10b60:	cmp	r2, r3
   10b64:	beq	10b7c <main@@Base+0xe4>
   10b68:	movw	r1, #6040	; 0x1798
   10b6c:	movt	r1, #1
   10b70:	mov	r2, #99	; 0x63
   10b74:	mov	r0, r4
   10b78:	bl	10e9c <_start@@Base+0xf0>
   10b7c:	movw	r0, #6056	; 0x17a8
   10b80:	movt	r0, #1
   10b84:	ldr	r1, [r5]
   10b88:	bl	109d8 <printf@plt>
   10b8c:	mov	r0, r4
   10b90:	bl	11058 <fp_remove@@Base>
   10b94:	ldm	r4, {r1, r3}
   10b98:	mov	r2, #0
   10b9c:	str	r2, [r5]
   10ba0:	cmp	r1, r3
   10ba4:	beq	10bb8 <main@@Base+0x120>
   10ba8:	movw	r1, #6040	; 0x1798
   10bac:	movt	r1, #1
   10bb0:	mov	r0, r4
   10bb4:	bl	10e9c <_start@@Base+0xf0>
   10bb8:	movw	r0, #6128	; 0x17f0
   10bbc:	movt	r0, #1
   10bc0:	ldr	r1, [r5]
   10bc4:	bl	109d8 <printf@plt>
   10bc8:	mov	r0, r4
   10bcc:	bl	11058 <fp_remove@@Base>
   10bd0:	ldr	r3, [r4]
   10bd4:	mov	r1, #0
   10bd8:	ldr	r2, [r4, #4]
   10bdc:	str	r1, [r5]
   10be0:	cmp	r2, r3
   10be4:	beq	10bfc <main@@Base+0x164>
   10be8:	movw	r1, #6040	; 0x1798
   10bec:	movt	r1, #1
   10bf0:	mov	r0, r4
   10bf4:	mov	r2, #42	; 0x2a
   10bf8:	bl	10e9c <_start@@Base+0xf0>
   10bfc:	movw	r0, #6200	; 0x1838
   10c00:	movt	r0, #1
   10c04:	ldr	r1, [r5]
   10c08:	bl	109d8 <printf@plt>
   10c0c:	movw	r0, #6272	; 0x1880
   10c10:	movt	r0, #1
   10c14:	bl	10a2c <puts@plt>
   10c18:	mov	r0, #42	; 0x2a
   10c1c:	bl	112d8 <vetor_criaHeap@@Base>
   10c20:	movw	r2, #5792	; 0x16a0
   10c24:	movt	r2, #1
   10c28:	movw	r1, #5000	; 0x1388
   10c2c:	movt	r1, #1
   10c30:	mov	r4, r0
   10c34:	bl	111a0 <heap_carrega@@Base>
   10c38:	movw	r0, #6328	; 0x18b8
   10c3c:	movt	r0, #1
   10c40:	ldr	r1, [r5]
   10c44:	bl	109d8 <printf@plt>
   10c48:	mov	r0, r4
   10c4c:	bl	11530 <vetor_imprimeHeap@@Base>
   10c50:	ldr	r3, [r4]
   10c54:	cmp	r3, #42	; 0x2a
   10c58:	bne	10d98 <main@@Base+0x300>
   10c5c:	movw	r0, #5900	; 0x170c
   10c60:	movt	r0, #1
   10c64:	mov	r1, #0
   10c68:	bl	109cc <strcmp@plt>
   10c6c:	subs	r6, r0, #0
   10c70:	bne	10d84 <main@@Base+0x2ec>
   10c74:	movw	r0, #6424	; 0x1918
   10c78:	movt	r0, #1
   10c7c:	str	r6, [r5]
   10c80:	mov	r1, r6
   10c84:	bl	109d8 <printf@plt>
   10c88:	ldrd	r2, [r4]
   10c8c:	str	r6, [r5]
   10c90:	cmp	r2, r3
   10c94:	beq	10cb4 <main@@Base+0x21c>
   10c98:	movw	r2, #6040	; 0x1798
   10c9c:	movt	r2, #1
   10ca0:	movw	r1, #5000	; 0x1388
   10ca4:	movt	r1, #1
   10ca8:	mov	r3, #99	; 0x63
   10cac:	mov	r0, r4
   10cb0:	bl	10f58 <_start@@Base+0x1ac>
   10cb4:	movw	r0, #6476	; 0x194c
   10cb8:	movt	r0, #1
   10cbc:	ldr	r1, [r5]
   10cc0:	bl	109d8 <printf@plt>
   10cc4:	ldm	r4, {r1, r2}
   10cc8:	mov	r3, #0
   10ccc:	str	r3, [r5]
   10cd0:	cmp	r1, r2
   10cd4:	beq	10cf0 <main@@Base+0x258>
   10cd8:	movw	r2, #6040	; 0x1798
   10cdc:	movt	r2, #1
   10ce0:	movw	r1, #5000	; 0x1388
   10ce4:	movt	r1, #1
   10ce8:	mov	r0, r4
   10cec:	bl	10f58 <_start@@Base+0x1ac>
   10cf0:	movw	r0, #6548	; 0x1994
   10cf4:	movt	r0, #1
   10cf8:	ldr	r1, [r5]
   10cfc:	bl	109d8 <printf@plt>
   10d00:	ldrd	r2, [r4]
   10d04:	mov	r1, #0
   10d08:	str	r1, [r5]
   10d0c:	cmp	r2, r3
   10d10:	beq	10d30 <main@@Base+0x298>
   10d14:	movw	r2, #6040	; 0x1798
   10d18:	movt	r2, #1
   10d1c:	movw	r1, #5000	; 0x1388
   10d20:	movt	r1, #1
   10d24:	mov	r0, r4
   10d28:	mov	r3, #42	; 0x2a
   10d2c:	bl	10f58 <_start@@Base+0x1ac>
   10d30:	movw	r0, #6200	; 0x1838
   10d34:	movt	r0, #1
   10d38:	ldr	r1, [r5]
   10d3c:	bl	109d8 <printf@plt>
   10d40:	mov	r0, #42	; 0x2a
   10d44:	mov	r4, r0
   10d48:	bl	112d8 <vetor_criaHeap@@Base>
   10d4c:	movw	r2, #5792	; 0x16a0
   10d50:	movt	r2, #1
   10d54:	movw	r1, #5136	; 0x1410
   10d58:	movt	r1, #1
   10d5c:	bl	111a0 <heap_carrega@@Base>
   10d60:	movw	r0, #6328	; 0x18b8
   10d64:	movt	r0, #1
   10d68:	ldr	r1, [r5]
   10d6c:	bl	109d8 <printf@plt>
   10d70:	mov	r0, #0
   10d74:	bl	10a2c <puts@plt>
   10d78:	subs	r4, r4, #1
   10d7c:	bne	10d70 <main@@Base+0x2d8>
   10d80:	b	10b08 <main@@Base+0x70>
   10d84:	movw	r0, #5920	; 0x1720
   10d88:	movt	r0, #1
   10d8c:	bl	10a2c <puts@plt>
   10d90:	mov	r6, #1
   10d94:	b	10b08 <main@@Base+0x70>
   10d98:	movw	r0, #6384	; 0x18f0
   10d9c:	movt	r0, #1
   10da0:	bl	10a2c <puts@plt>
   10da4:	mov	r6, #1
   10da8:	b	10b08 <main@@Base+0x70>

00010dac <_start@@Base>:
   10dac:	mov	fp, #0
   10db0:	mov	lr, #0
   10db4:	pop	{r1}		; (ldr r1, [sp], #4)
   10db8:	mov	r2, sp
   10dbc:	push	{r2}		; (str r2, [sp, #-4]!)
   10dc0:	push	{r0}		; (str r0, [sp, #-4]!)
   10dc4:	ldr	ip, [pc, #16]	; 10ddc <_start@@Base+0x30>
   10dc8:	push	{ip}		; (str ip, [sp, #-4]!)
   10dcc:	ldr	r0, [pc, #12]	; 10de0 <_start@@Base+0x34>
   10dd0:	ldr	r3, [pc, #12]	; 10de4 <_start@@Base+0x38>
   10dd4:	bl	10a44 <__libc_start_main@plt>
   10dd8:	bl	10a8c <abort@plt>
   10ddc:	andeq	r1, r1, ip, lsr #12
   10de0:	muleq	r1, r8, sl
   10de4:	andeq	r1, r1, ip, asr #11
   10de8:	ldr	r3, [pc, #20]	; 10e04 <_start@@Base+0x58>
   10dec:	ldr	r2, [pc, #20]	; 10e08 <_start@@Base+0x5c>
   10df0:	add	r3, pc, r3
   10df4:	ldr	r2, [r3, r2]
   10df8:	cmp	r2, #0
   10dfc:	bxeq	lr
   10e00:	b	10a50 <__gmon_start__@plt>
   10e04:	andeq	r1, r1, r8, lsl #4
   10e08:	andeq	r0, r0, r4, asr r0
   10e0c:	ldr	r0, [pc, #24]	; 10e2c <_start@@Base+0x80>
   10e10:	ldr	r3, [pc, #24]	; 10e30 <_start@@Base+0x84>
   10e14:	cmp	r3, r0
   10e18:	bxeq	lr
   10e1c:	ldr	r3, [pc, #16]	; 10e34 <_start@@Base+0x88>
   10e20:	cmp	r3, #0
   10e24:	bxeq	lr
   10e28:	bx	r3
   10e2c:	andeq	r2, r2, r0, rrx
   10e30:	andeq	r2, r2, r0, rrx
   10e34:	andeq	r0, r0, r0
   10e38:	ldr	r0, [pc, #36]	; 10e64 <_start@@Base+0xb8>
   10e3c:	ldr	r1, [pc, #36]	; 10e68 <_start@@Base+0xbc>
   10e40:	sub	r1, r1, r0
   10e44:	asr	r1, r1, #2
   10e48:	add	r1, r1, r1, lsr #31
   10e4c:	asrs	r1, r1, #1
   10e50:	bxeq	lr
   10e54:	ldr	r3, [pc, #16]	; 10e6c <_start@@Base+0xc0>
   10e58:	cmp	r3, #0
   10e5c:	bxeq	lr
   10e60:	bx	r3
   10e64:	andeq	r2, r2, r0, rrx
   10e68:	andeq	r2, r2, r0, rrx
   10e6c:	andeq	r0, r0, r0
   10e70:	push	{r4, lr}
   10e74:	ldr	r4, [pc, #24]	; 10e94 <_start@@Base+0xe8>
   10e78:	ldrb	r3, [r4]
   10e7c:	cmp	r3, #0
   10e80:	popne	{r4, pc}
   10e84:	bl	10e0c <_start@@Base+0x60>
   10e88:	mov	r3, #1
   10e8c:	strb	r3, [r4]
   10e90:	pop	{r4, pc}
   10e94:	andeq	r2, r2, r4, rrx
   10e98:	b	10e38 <_start@@Base+0x8c>
   10e9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10ea0:	mov	r5, r0
   10ea4:	mov	r0, r2
   10ea8:	strd	r6, [sp, #8]
   10eac:	str	r8, [sp, #16]
   10eb0:	str	lr, [sp, #20]
   10eb4:	bl	11340 <elemento_cria@@Base>
   10eb8:	ldr	r3, [r5]
   10ebc:	mov	r6, r0
   10ec0:	cmp	r3, #0
   10ec4:	ble	10f4c <_start@@Base+0x1a0>
   10ec8:	mov	r4, #0
   10ecc:	b	10edc <_start@@Base+0x130>
   10ed0:	add	r4, r4, #1
   10ed4:	cmp	r4, r3
   10ed8:	bge	10f44 <_start@@Base+0x198>
   10edc:	ldr	r3, [r5, #8]
   10ee0:	mov	r1, r6
   10ee4:	lsl	r7, r4, #2
   10ee8:	ldr	r0, [r3, r4, lsl #2]
   10eec:	bl	11388 <maior_que@@Base>
   10ef0:	cmp	r0, #0
   10ef4:	ldr	r3, [r5]
   10ef8:	bne	10ed0 <_start@@Base+0x124>
   10efc:	ldr	r0, [r5, #8]
   10f00:	cmp	r4, r3
   10f04:	add	r2, r3, #1
   10f08:	addle	r4, r0, r4, lsl #2
   10f0c:	addle	r3, r0, r2, lsl #2
   10f10:	bgt	10f24 <_start@@Base+0x178>
   10f14:	ldr	r1, [r3, #-4]!
   10f18:	cmp	r4, r3
   10f1c:	str	r1, [r3, #4]
   10f20:	bne	10f14 <_start@@Base+0x168>
   10f24:	str	r6, [r0, r7]
   10f28:	mov	r0, #1
   10f2c:	ldrd	r6, [sp, #8]
   10f30:	ldr	r8, [sp, #16]
   10f34:	str	r2, [r5]
   10f38:	ldrd	r4, [sp]
   10f3c:	add	sp, sp, #20
   10f40:	pop	{pc}		; (ldr pc, [sp], #4)
   10f44:	lsl	r7, r4, #2
   10f48:	b	10efc <_start@@Base+0x150>
   10f4c:	mov	r7, #0
   10f50:	mov	r4, r7
   10f54:	b	10efc <_start@@Base+0x150>
   10f58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f5c:	mov	r5, r0
   10f60:	mov	r0, r3
   10f64:	strd	r6, [sp, #8]
   10f68:	str	r8, [sp, #16]
   10f6c:	mov	r8, r1
   10f70:	mov	r1, r2
   10f74:	str	lr, [sp, #20]
   10f78:	bl	11340 <elemento_cria@@Base>
   10f7c:	mov	r6, r0
   10f80:	ldr	r0, [r5]
   10f84:	cmp	r0, #0
   10f88:	movgt	r4, #0
   10f8c:	bgt	10fa4 <_start@@Base+0x1f8>
   10f90:	b	11020 <_start@@Base+0x274>
   10f94:	ldr	r0, [r5]
   10f98:	add	r4, r4, #1
   10f9c:	cmp	r4, r0
   10fa0:	bge	11014 <_start@@Base+0x268>
   10fa4:	ldr	r3, [r5, #8]
   10fa8:	mov	r1, r6
   10fac:	lsl	r7, r4, #2
   10fb0:	ldr	r0, [r3, r4, lsl #2]
   10fb4:	blx	r8
   10fb8:	cmp	r0, #1
   10fbc:	bne	10f94 <_start@@Base+0x1e8>
   10fc0:	cmp	r4, #0
   10fc4:	ldr	r0, [r5]
   10fc8:	ldr	r2, [r5, #8]
   10fcc:	add	r7, r2, r7
   10fd0:	beq	10ff0 <_start@@Base+0x244>
   10fd4:	add	r3, r4, #1
   10fd8:	mov	r1, r4
   10fdc:	add	r3, r2, r3, lsl #2
   10fe0:	ldr	r2, [r3, #-4]!
   10fe4:	subs	r1, r1, #1
   10fe8:	str	r2, [r3, #4]
   10fec:	bne	10fe0 <_start@@Base+0x234>
   10ff0:	add	r3, r0, #1
   10ff4:	mov	r0, r4
   10ff8:	ldr	r8, [sp, #16]
   10ffc:	str	r6, [r7]
   11000:	str	r3, [r5]
   11004:	ldrd	r4, [sp]
   11008:	ldrd	r6, [sp, #8]
   1100c:	add	sp, sp, #20
   11010:	pop	{pc}		; (ldr pc, [sp], #4)
   11014:	ldr	r2, [r5, #8]
   11018:	add	r7, r2, r4, lsl #2
   1101c:	b	10fd4 <_start@@Base+0x228>
   11020:	mov	r4, #0
   11024:	ldr	r7, [r5, #8]
   11028:	b	10ff0 <_start@@Base+0x244>

0001102c <fp_insere@@Base>:
   1102c:	subs	r3, r0, #0
   11030:	beq	11050 <fp_insere@@Base+0x24>
   11034:	ldr	ip, [r3]
   11038:	ldr	r3, [r3, #4]
   1103c:	cmp	ip, r3
   11040:	beq	11048 <fp_insere@@Base+0x1c>
   11044:	b	10e9c <_start@@Base+0xf0>
   11048:	mov	r0, #0
   1104c:	bx	lr
   11050:	mvn	r0, #0
   11054:	bx	lr

00011058 <fp_remove@@Base>:
   11058:	push	{lr}		; (str lr, [sp, #-4]!)
   1105c:	subs	lr, r0, #0
   11060:	beq	110a4 <fp_remove@@Base+0x4c>
   11064:	ldr	ip, [lr]
   11068:	cmp	ip, #0
   1106c:	moveq	r0, ip
   11070:	beq	110a0 <fp_remove@@Base+0x48>
   11074:	ldr	r3, [lr, #8]
   11078:	ldr	r0, [r3]
   1107c:	ble	11094 <fp_remove@@Base+0x3c>
   11080:	add	r1, r3, ip, lsl #2
   11084:	ldr	r2, [r3, #4]
   11088:	str	r2, [r3], #4
   1108c:	cmp	r3, r1
   11090:	bne	11084 <fp_remove@@Base+0x2c>
   11094:	sub	ip, ip, #1
   11098:	ldr	r0, [r0, #4]
   1109c:	str	ip, [lr]
   110a0:	pop	{pc}		; (ldr pc, [sp], #4)
   110a4:	mov	r0, lr
   110a8:	b	110a0 <fp_remove@@Base+0x48>

000110ac <fp_carrega@@Base>:
   110ac:	mov	r3, r1
   110b0:	movw	r1, #5692	; 0x163c
   110b4:	movt	r1, #1
   110b8:	strd	r4, [sp, #-20]!	; 0xffffffec
   110bc:	mov	r4, r0
   110c0:	mov	r0, r3
   110c4:	strd	r6, [sp, #8]
   110c8:	str	lr, [sp, #16]
   110cc:	sub	sp, sp, #268	; 0x10c
   110d0:	bl	109f0 <fopen@plt>
   110d4:	subs	r5, r0, #0
   110d8:	beq	11164 <fp_carrega@@Base+0xb8>
   110dc:	movw	r7, #5732	; 0x1664
   110e0:	movt	r7, #1
   110e4:	mov	r0, r5
   110e8:	bl	10a5c <feof@plt>
   110ec:	subs	r6, r0, #0
   110f0:	mov	r1, r7
   110f4:	add	r2, sp, #4
   110f8:	mov	r0, r5
   110fc:	bne	1114c <fp_carrega@@Base+0xa0>
   11100:	bl	109e4 <__isoc99_fscanf@plt>
   11104:	mov	r1, #256	; 0x100
   11108:	mov	r2, r5
   1110c:	add	r0, sp, #8
   11110:	bl	10a14 <fgets@plt>
   11114:	add	r0, sp, #8
   11118:	bl	10a68 <strlen@plt>
   1111c:	add	r3, sp, #264	; 0x108
   11120:	add	r1, sp, #8
   11124:	add	r3, r3, r0
   11128:	subs	r0, r4, #0
   1112c:	strb	r6, [r3, #-257]	; 0xfffffeff
   11130:	beq	110e4 <fp_carrega@@Base+0x38>
   11134:	ldrd	r2, [r4]
   11138:	cmp	r2, r3
   1113c:	beq	110e4 <fp_carrega@@Base+0x38>
   11140:	ldr	r2, [sp, #4]
   11144:	bl	10e9c <_start@@Base+0xf0>
   11148:	b	110e4 <fp_carrega@@Base+0x38>
   1114c:	bl	10a80 <fclose@plt>
   11150:	add	sp, sp, #268	; 0x10c
   11154:	ldrd	r4, [sp]
   11158:	ldrd	r6, [sp, #8]
   1115c:	add	sp, sp, #16
   11160:	pop	{pc}		; (ldr pc, [sp], #4)
   11164:	movw	r0, #5696	; 0x1640
   11168:	movt	r0, #1
   1116c:	bl	10a2c <puts@plt>
   11170:	b	11150 <fp_carrega@@Base+0xa4>

00011174 <heap_insere@@Base>:
   11174:	push	{lr}		; (str lr, [sp, #-4]!)
   11178:	ldr	lr, [r0]
   1117c:	ldr	ip, [r0, #4]
   11180:	cmp	lr, ip
   11184:	beq	11190 <heap_insere@@Base+0x1c>
   11188:	pop	{lr}		; (ldr lr, [sp], #4)
   1118c:	b	10f58 <_start@@Base+0x1ac>
   11190:	mov	r0, #0
   11194:	pop	{pc}		; (ldr pc, [sp], #4)

00011198 <heap_remove@@Base>:
   11198:	mov	r0, #0
   1119c:	bx	lr

000111a0 <heap_carrega@@Base>:
   111a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   111a4:	mov	r5, r0
   111a8:	mov	r0, r2
   111ac:	strd	r6, [sp, #8]
   111b0:	str	r8, [sp, #16]
   111b4:	mov	r8, r1
   111b8:	movw	r1, #5692	; 0x163c
   111bc:	movt	r1, #1
   111c0:	str	lr, [sp, #20]
   111c4:	sub	sp, sp, #264	; 0x108
   111c8:	bl	109f0 <fopen@plt>
   111cc:	subs	r4, r0, #0
   111d0:	beq	11260 <heap_carrega@@Base+0xc0>
   111d4:	movw	r7, #5732	; 0x1664
   111d8:	movt	r7, #1
   111dc:	mov	r0, r4
   111e0:	bl	10a5c <feof@plt>
   111e4:	subs	r6, r0, #0
   111e8:	mov	r1, r7
   111ec:	add	r2, sp, #4
   111f0:	mov	r0, r4
   111f4:	bne	11244 <heap_carrega@@Base+0xa4>
   111f8:	bl	109e4 <__isoc99_fscanf@plt>
   111fc:	mov	r2, r4
   11200:	mov	r1, #256	; 0x100
   11204:	add	r0, sp, #8
   11208:	bl	10a14 <fgets@plt>
   1120c:	add	r0, sp, #8
   11210:	bl	10a68 <strlen@plt>
   11214:	add	r3, sp, #264	; 0x108
   11218:	add	r0, r3, r0
   1121c:	ldrd	r2, [r5]
   11220:	strb	r6, [r0, #-257]	; 0xfffffeff
   11224:	cmp	r2, r3
   11228:	beq	111dc <heap_carrega@@Base+0x3c>
   1122c:	add	r2, sp, #8
   11230:	mov	r1, r8
   11234:	ldr	r3, [sp, #4]
   11238:	mov	r0, r5
   1123c:	bl	10f58 <_start@@Base+0x1ac>
   11240:	b	111dc <heap_carrega@@Base+0x3c>
   11244:	bl	10a80 <fclose@plt>
   11248:	add	sp, sp, #264	; 0x108
   1124c:	ldrd	r4, [sp]
   11250:	ldrd	r6, [sp, #8]
   11254:	ldr	r8, [sp, #16]
   11258:	add	sp, sp, #20
   1125c:	pop	{pc}		; (ldr pc, [sp], #4)
   11260:	movw	r0, #5696	; 0x1640
   11264:	movt	r0, #1
   11268:	bl	10a2c <puts@plt>
   1126c:	b	11248 <heap_carrega@@Base+0xa8>

00011270 <vetor_cria@@Base>:
   11270:	strd	r4, [sp, #-16]!
   11274:	mov	r5, r0
   11278:	mov	r0, #12
   1127c:	str	r6, [sp, #8]
   11280:	str	lr, [sp, #12]
   11284:	bl	10a38 <malloc@plt>
   11288:	subs	r4, r0, #0
   1128c:	beq	112b4 <vetor_cria@@Base+0x44>
   11290:	mov	r3, #0
   11294:	mov	r0, r5
   11298:	mov	r1, #4
   1129c:	stm	r4, {r3, r5}
   112a0:	bl	109c0 <calloc@plt>
   112a4:	cmp	r0, #0
   112a8:	mov	r3, r0
   112ac:	str	r0, [r4, #8]
   112b0:	beq	112c8 <vetor_cria@@Base+0x58>
   112b4:	mov	r0, r4
   112b8:	ldrd	r4, [sp]
   112bc:	ldr	r6, [sp, #8]
   112c0:	add	sp, sp, #12
   112c4:	pop	{pc}		; (ldr pc, [sp], #4)
   112c8:	mov	r0, r4
   112cc:	mov	r4, r3
   112d0:	bl	10a08 <free@plt>
   112d4:	b	112b4 <vetor_cria@@Base+0x44>

000112d8 <vetor_criaHeap@@Base>:
   112d8:	strd	r4, [sp, #-16]!
   112dc:	mov	r5, r0
   112e0:	mov	r0, #12
   112e4:	str	r6, [sp, #8]
   112e8:	str	lr, [sp, #12]
   112ec:	bl	10a38 <malloc@plt>
   112f0:	subs	r4, r0, #0
   112f4:	beq	1131c <vetor_criaHeap@@Base+0x44>
   112f8:	mov	r3, #0
   112fc:	add	r0, r5, #1
   11300:	mov	r1, #4
   11304:	stm	r4, {r3, r5}
   11308:	bl	109c0 <calloc@plt>
   1130c:	cmp	r0, #0
   11310:	mov	r3, r0
   11314:	str	r0, [r4, #8]
   11318:	beq	11330 <vetor_criaHeap@@Base+0x58>
   1131c:	mov	r0, r4
   11320:	ldrd	r4, [sp]
   11324:	ldr	r6, [sp, #8]
   11328:	add	sp, sp, #12
   1132c:	pop	{pc}		; (ldr pc, [sp], #4)
   11330:	mov	r0, r4
   11334:	mov	r4, r3
   11338:	bl	10a08 <free@plt>
   1133c:	b	1131c <vetor_criaHeap@@Base+0x44>

00011340 <elemento_cria@@Base>:
   11340:	strd	r4, [sp, #-16]!
   11344:	mov	r5, r0
   11348:	mov	r0, #8
   1134c:	str	r6, [sp, #8]
   11350:	mov	r6, r1
   11354:	str	lr, [sp, #12]
   11358:	bl	10a38 <malloc@plt>
   1135c:	subs	r4, r0, #0
   11360:	beq	11374 <elemento_cria@@Base+0x34>
   11364:	mov	r0, r6
   11368:	bl	10a20 <strdup@plt>
   1136c:	str	r5, [r4]
   11370:	str	r0, [r4, #4]
   11374:	mov	r0, r4
   11378:	ldrd	r4, [sp]
   1137c:	ldr	r6, [sp, #8]
   11380:	add	sp, sp, #12
   11384:	pop	{pc}		; (ldr pc, [sp], #4)

00011388 <maior_que@@Base>:
   11388:	cmp	r1, #0
   1138c:	cmpne	r0, #0
   11390:	strd	r4, [sp, #-16]!
   11394:	str	r6, [sp, #8]
   11398:	str	lr, [sp, #12]
   1139c:	beq	113f0 <maior_que@@Base+0x68>
   113a0:	movw	r3, #8288	; 0x2060
   113a4:	movt	r3, #2
   113a8:	mov	r5, r0
   113ac:	ldr	r0, [r3]
   113b0:	mov	r4, r1
   113b4:	bl	109fc <fflush@plt>
   113b8:	movw	r3, #8296	; 0x2068
   113bc:	movt	r3, #2
   113c0:	ldr	r0, [r5]
   113c4:	ldr	r2, [r3]
   113c8:	ldr	r1, [r4]
   113cc:	ldrd	r4, [sp]
   113d0:	add	r2, r2, #1
   113d4:	ldr	r6, [sp, #8]
   113d8:	add	sp, sp, #12
   113dc:	cmp	r0, r1
   113e0:	str	r2, [r3]
   113e4:	movle	r0, #0
   113e8:	movgt	r0, #1
   113ec:	pop	{pc}		; (ldr pc, [sp], #4)
   113f0:	movw	r0, #6620	; 0x19dc
   113f4:	movt	r0, #1
   113f8:	bl	10a2c <puts@plt>
   113fc:	ldrd	r4, [sp]
   11400:	mov	r0, #0
   11404:	ldr	r6, [sp, #8]
   11408:	add	sp, sp, #12
   1140c:	pop	{pc}		; (ldr pc, [sp], #4)

00011410 <maior_que_HeapSort@@Base>:
   11410:	cmp	r1, #0
   11414:	cmpne	r0, #0
   11418:	strd	r4, [sp, #-16]!
   1141c:	str	r6, [sp, #8]
   11420:	str	lr, [sp, #12]
   11424:	beq	11474 <maior_que_HeapSort@@Base+0x64>
   11428:	movw	r3, #8288	; 0x2060
   1142c:	movt	r3, #2
   11430:	mov	r4, r0
   11434:	ldr	r0, [r3]
   11438:	mov	r5, r1
   1143c:	bl	109fc <fflush@plt>
   11440:	movw	r3, #8296	; 0x2068
   11444:	movt	r3, #2
   11448:	ldr	r0, [r4, #4]
   1144c:	ldr	r2, [r3]
   11450:	ldr	r1, [r5, #4]
   11454:	add	r2, r2, #1
   11458:	str	r2, [r3]
   1145c:	bl	109cc <strcmp@plt>
   11460:	ldrd	r4, [sp]
   11464:	lsr	r0, r0, #31
   11468:	ldr	r6, [sp, #8]
   1146c:	add	sp, sp, #12
   11470:	pop	{pc}		; (ldr pc, [sp], #4)
   11474:	movw	r0, #6620	; 0x19dc
   11478:	movt	r0, #1
   1147c:	bl	10a2c <puts@plt>
   11480:	ldrd	r4, [sp]
   11484:	mov	r0, #0
   11488:	ldr	r6, [sp, #8]
   1148c:	add	sp, sp, #12
   11490:	pop	{pc}		; (ldr pc, [sp], #4)

00011494 <vetor_imprime@@Base>:
   11494:	ldr	r3, [r0]
   11498:	cmp	r3, #0
   1149c:	ble	11524 <vetor_imprime@@Base+0x90>
   114a0:	strd	r4, [sp, #-16]!
   114a4:	mov	r5, r0
   114a8:	movw	r0, #6632	; 0x19e8
   114ac:	movt	r0, #1
   114b0:	ldr	r3, [r5, #8]
   114b4:	ldr	r3, [r3]
   114b8:	ldr	r2, [r3]
   114bc:	ldr	r1, [r3, #4]
   114c0:	str	r6, [sp, #8]
   114c4:	str	lr, [sp, #12]
   114c8:	bl	109d8 <printf@plt>
   114cc:	ldr	r3, [r5]
   114d0:	cmp	r3, #1
   114d4:	movwgt	r6, #6688	; 0x1a20
   114d8:	movgt	r4, #1
   114dc:	movtgt	r6, #1
   114e0:	ble	1150c <vetor_imprime@@Base+0x78>
   114e4:	ldr	r3, [r5, #8]
   114e8:	mov	r0, r6
   114ec:	ldr	r3, [r3, r4, lsl #2]
   114f0:	add	r4, r4, #1
   114f4:	ldr	r2, [r3]
   114f8:	ldr	r1, [r3, #4]
   114fc:	bl	109d8 <printf@plt>
   11500:	ldr	r3, [r5]
   11504:	cmp	r3, r4
   11508:	bgt	114e4 <vetor_imprime@@Base+0x50>
   1150c:	mov	r0, #10
   11510:	ldrd	r4, [sp]
   11514:	ldr	r6, [sp, #8]
   11518:	ldr	lr, [sp, #12]
   1151c:	add	sp, sp, #16
   11520:	b	10a74 <putchar@plt>
   11524:	movw	r0, #6664	; 0x1a08
   11528:	movt	r0, #1
   1152c:	b	10a2c <puts@plt>

00011530 <vetor_imprimeHeap@@Base>:
   11530:	ldr	r3, [r0]
   11534:	cmp	r3, #0
   11538:	ble	115c0 <vetor_imprimeHeap@@Base+0x90>
   1153c:	strd	r4, [sp, #-16]!
   11540:	mov	r5, r0
   11544:	movw	r0, #6632	; 0x19e8
   11548:	movt	r0, #1
   1154c:	ldr	r3, [r5, #8]
   11550:	ldr	r3, [r3, #4]
   11554:	ldr	r2, [r3]
   11558:	ldr	r1, [r3, #4]
   1155c:	str	r6, [sp, #8]
   11560:	str	lr, [sp, #12]
   11564:	bl	109d8 <printf@plt>
   11568:	ldr	r3, [r5]
   1156c:	cmp	r3, #2
   11570:	movwgt	r6, #6688	; 0x1a20
   11574:	movgt	r4, #2
   11578:	movtgt	r6, #1
   1157c:	ble	115a8 <vetor_imprimeHeap@@Base+0x78>
   11580:	ldr	r3, [r5, #8]
   11584:	mov	r0, r6
   11588:	ldr	r3, [r3, r4, lsl #2]
   1158c:	add	r4, r4, #1
   11590:	ldr	r2, [r3]
   11594:	ldr	r1, [r3, #4]
   11598:	bl	109d8 <printf@plt>
   1159c:	ldr	r3, [r5]
   115a0:	cmp	r3, r4
   115a4:	bgt	11580 <vetor_imprimeHeap@@Base+0x50>
   115a8:	mov	r0, #10
   115ac:	ldrd	r4, [sp]
   115b0:	ldr	r6, [sp, #8]
   115b4:	ldr	lr, [sp, #12]
   115b8:	add	sp, sp, #16
   115bc:	b	10a74 <putchar@plt>
   115c0:	movw	r0, #6664	; 0x1a08
   115c4:	movt	r0, #1
   115c8:	b	10a2c <puts@plt>

000115cc <__libc_csu_init@@Base>:
   115cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115d0:	mov	r7, r0
   115d4:	ldr	r6, [pc, #72]	; 11624 <__libc_csu_init@@Base+0x58>
   115d8:	ldr	r5, [pc, #72]	; 11628 <__libc_csu_init@@Base+0x5c>
   115dc:	add	r6, pc, r6
   115e0:	add	r5, pc, r5
   115e4:	sub	r6, r6, r5
   115e8:	mov	r8, r1
   115ec:	mov	r9, r2
   115f0:	bl	109a0 <calloc@plt-0x20>
   115f4:	asrs	r6, r6, #2
   115f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   115fc:	mov	r4, #0
   11600:	add	r4, r4, #1
   11604:	ldr	r3, [r5], #4
   11608:	mov	r2, r9
   1160c:	mov	r1, r8
   11610:	mov	r0, r7
   11614:	blx	r3
   11618:	cmp	r6, r4
   1161c:	bne	11600 <__libc_csu_init@@Base+0x34>
   11620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11624:	andeq	r0, r1, r0, lsr r9
   11628:	andeq	r0, r1, r8, lsr #18

0001162c <__libc_csu_fini@@Base>:
   1162c:	bx	lr

Disassembly of section .fini:

00011630 <.fini>:
   11630:	push	{r3, lr}
   11634:	pop	{r3, pc}
