
../compcert-repos/prog2/CMakeFiles/1.1.3.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #28
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	str	r2, [fp, #-24]	; 0xffffffe8
  18:	mov	r3, #0
  1c:	str	r3, [fp, #-8]
  20:	mov	r3, #0
  24:	str	r3, [fp, #-8]
  28:	b	60 <in_array+0x60>
  2c:	ldr	r3, [fp, #-8]
  30:	lsl	r3, r3, #2
  34:	ldr	r2, [fp, #-20]	; 0xffffffec
  38:	add	r3, r2, r3
  3c:	ldr	r3, [r3]
  40:	ldr	r2, [fp, #-16]
  44:	cmp	r2, r3
  48:	bne	54 <in_array+0x54>
  4c:	mov	r3, #1
  50:	b	74 <in_array+0x74>
  54:	ldr	r3, [fp, #-8]
  58:	add	r3, r3, #1
  5c:	str	r3, [fp, #-8]
  60:	ldr	r2, [fp, #-8]
  64:	ldr	r3, [fp, #-24]	; 0xffffffe8
  68:	cmp	r2, r3
  6c:	ble	2c <in_array+0x2c>
  70:	mov	r3, #0
  74:	mov	r0, r3
  78:	add	sp, fp, #0
  7c:	pop	{fp}		; (ldr fp, [sp], #4)
  80:	bx	lr

00000084 <main>:
  84:	str	fp, [sp, #-8]!
  88:	str	lr, [sp, #4]
  8c:	add	fp, sp, #4
  90:	sub	sp, sp, #56	; 0x38
  94:	movw	r3, #0
  98:	movt	r3, #0
  9c:	sub	r1, fp, #28
  a0:	ldrd	r2, [r3]
  a4:	strd	r2, [r1]
  a8:	movw	r3, #0
  ac:	movt	r3, #0
  b0:	sub	r1, fp, #36	; 0x24
  b4:	ldrd	r2, [r3]
  b8:	strd	r2, [r1]
  bc:	movw	r3, #0
  c0:	movt	r3, #0
  c4:	sub	r1, fp, #44	; 0x2c
  c8:	ldrd	r2, [r3]
  cc:	strd	r2, [r1]
  d0:	movw	r1, #0
  d4:	movt	r1, #0
  d8:	movw	r0, #0
  dc:	movt	r0, #0
  e0:	bl	0 <fopen>
  e4:	str	r0, [fp, #-16]
  e8:	mov	r3, #0
  ec:	str	r3, [fp, #-8]
  f0:	sub	r1, fp, #56	; 0x38
  f4:	mov	r2, #0
  f8:	mov	r3, #0
  fc:	strd	r2, [r1]
 100:	mov	r3, r2
 104:	str	r3, [r1, #8]
 108:	movw	r3, #0
 10c:	movt	r3, #0
 110:	sub	r2, fp, #60	; 0x3c
 114:	ldrh	r1, [r3]
 118:	strh	r1, [r2]
 11c:	ldrb	r3, [r3, #2]
 120:	strb	r3, [r2, #2]
 124:	b	1d8 <main+0x154>
 128:	ldr	r0, [fp, #-16]
 12c:	bl	0 <getc>
 130:	str	r0, [fp, #-8]
 134:	ldr	r3, [fp, #-8]
 138:	cmp	r3, #195	; 0xc3
 13c:	bne	1d8 <main+0x154>
 140:	ldr	r0, [fp, #-16]
 144:	bl	0 <getc>
 148:	str	r0, [fp, #-8]
 14c:	sub	r3, fp, #28
 150:	mov	r2, #2
 154:	mov	r1, r3
 158:	ldr	r0, [fp, #-8]
 15c:	bl	0 <in_array>
 160:	mov	r3, r0
 164:	cmp	r3, #0
 168:	beq	17c <main+0xf8>
 16c:	ldr	r3, [fp, #-56]	; 0xffffffc8
 170:	add	r3, r3, #1
 174:	str	r3, [fp, #-56]	; 0xffffffc8
 178:	b	1d8 <main+0x154>
 17c:	sub	r3, fp, #36	; 0x24
 180:	mov	r2, #2
 184:	mov	r1, r3
 188:	ldr	r0, [fp, #-8]
 18c:	bl	0 <in_array>
 190:	mov	r3, r0
 194:	cmp	r3, #0
 198:	beq	1ac <main+0x128>
 19c:	ldr	r3, [fp, #-52]	; 0xffffffcc
 1a0:	add	r3, r3, #1
 1a4:	str	r3, [fp, #-52]	; 0xffffffcc
 1a8:	b	1d8 <main+0x154>
 1ac:	sub	r3, fp, #44	; 0x2c
 1b0:	mov	r2, #2
 1b4:	mov	r1, r3
 1b8:	ldr	r0, [fp, #-8]
 1bc:	bl	0 <in_array>
 1c0:	mov	r3, r0
 1c4:	cmp	r3, #0
 1c8:	beq	1d8 <main+0x154>
 1cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
 1d0:	add	r3, r3, #1
 1d4:	str	r3, [fp, #-48]	; 0xffffffd0
 1d8:	ldr	r3, [fp, #-8]
 1dc:	cmn	r3, #1
 1e0:	bne	128 <main+0xa4>
 1e4:	ldr	r3, [fp, #-12]
 1e8:	str	r3, [fp, #-20]	; 0xffffffec
 1ec:	ldr	r0, [fp, #-16]
 1f0:	bl	0 <fclose>
 1f4:	mov	r3, #0
 1f8:	str	r3, [fp, #-12]
 1fc:	b	244 <main+0x1c0>
 200:	sub	r2, fp, #60	; 0x3c
 204:	ldr	r3, [fp, #-12]
 208:	add	r3, r2, r3
 20c:	ldrb	r3, [r3]
 210:	mov	r1, r3
 214:	ldr	r3, [fp, #-12]
 218:	lsl	r3, r3, #2
 21c:	sub	r2, fp, #4
 220:	add	r3, r2, r3
 224:	ldr	r3, [r3, #-52]	; 0xffffffcc
 228:	mov	r2, r3
 22c:	movw	r0, #0
 230:	movt	r0, #0
 234:	bl	0 <printf>
 238:	ldr	r3, [fp, #-12]
 23c:	add	r3, r3, #1
 240:	str	r3, [fp, #-12]
 244:	ldr	r3, [fp, #-12]
 248:	cmp	r3, #1
 24c:	ble	200 <main+0x17c>
 250:	sub	r2, fp, #60	; 0x3c
 254:	ldr	r3, [fp, #-12]
 258:	add	r3, r2, r3
 25c:	ldrb	r3, [r3]
 260:	mov	r1, r3
 264:	ldr	r3, [fp, #-48]	; 0xffffffd0
 268:	mov	r2, r3
 26c:	movw	r0, #0
 270:	movt	r0, #0
 274:	bl	0 <printf>
 278:	mov	r3, #0
 27c:	mov	r0, r3
 280:	sub	sp, fp, #4
 284:	ldr	fp, [sp]
 288:	add	sp, sp, #4
 28c:	pop	{pc}		; (ldr pc, [sp], #4)
