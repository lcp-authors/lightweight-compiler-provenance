
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/json_test_uq.dir/__/__/src/runtime/emitter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <advance_front>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-16]
  14:	mov	r3, #0
  18:	str	r3, [fp, #-8]
  1c:	ldr	r3, [fp, #-16]
  20:	ldr	r3, [r3]
  24:	cmp	r3, #0
  28:	beq	80 <advance_front+0x80>
  2c:	ldr	r3, [fp, #-16]
  30:	ldr	r3, [r3]
  34:	ldr	r2, [r3, #2948]	; 0xb84
  38:	ldr	r3, [fp, #-16]
  3c:	ldr	r3, [r3, #4]
  40:	cmp	r2, r3
  44:	beq	80 <advance_front+0x80>
  48:	ldr	r3, [fp, #-16]
  4c:	ldr	r3, [r3]
  50:	ldr	r2, [r3, #2952]	; 0xb88
  54:	ldr	r3, [fp, #-16]
  58:	ldr	r3, [r3]
  5c:	ldr	r3, [r3, #2948]	; 0xb84
  60:	sub	r2, r2, #2944	; 0xb80
  64:	str	r2, [r3, #2952]	; 0xb88
  68:	ldr	r3, [fp, #-16]
  6c:	ldr	r3, [r3]
  70:	ldr	r2, [r3, #2948]	; 0xb84
  74:	ldr	r3, [fp, #-16]
  78:	str	r2, [r3]
  7c:	b	1a8 <advance_front+0x1a8>
  80:	movw	r0, #2956	; 0xb8c
  84:	bl	0 <malloc>
  88:	mov	r3, r0
  8c:	str	r3, [fp, #-8]
  90:	ldr	r3, [fp, #-8]
  94:	cmp	r3, #0
  98:	bne	a4 <advance_front+0xa4>
  9c:	mvn	r3, #0
  a0:	b	1ec <advance_front+0x1ec>
  a4:	ldr	r3, [fp, #-16]
  a8:	ldr	r3, [r3, #28]
  ac:	add	r2, r3, #2944	; 0xb80
  b0:	ldr	r3, [fp, #-16]
  b4:	str	r2, [r3, #28]
  b8:	ldr	r3, [fp, #-16]
  bc:	ldr	r3, [r3]
  c0:	cmp	r3, #0
  c4:	beq	118 <advance_front+0x118>
  c8:	ldr	r3, [fp, #-16]
  cc:	ldr	r2, [r3, #4]
  d0:	ldr	r3, [fp, #-8]
  d4:	str	r2, [r3, #2948]	; 0xb84
  d8:	ldr	r3, [fp, #-16]
  dc:	ldr	r2, [r3]
  e0:	ldr	r3, [fp, #-8]
  e4:	str	r2, [r3, #2944]	; 0xb80
  e8:	ldr	r3, [fp, #-16]
  ec:	ldr	r3, [r3]
  f0:	ldr	r2, [fp, #-8]
  f4:	str	r2, [r3, #2948]	; 0xb84
  f8:	ldr	r3, [fp, #-16]
  fc:	ldr	r3, [r3, #4]
 100:	ldr	r2, [fp, #-8]
 104:	str	r2, [r3, #2944]	; 0xb80
 108:	ldr	r3, [fp, #-16]
 10c:	ldr	r2, [fp, #-8]
 110:	str	r2, [r3]
 114:	b	1a8 <advance_front+0x1a8>
 118:	ldr	r3, [fp, #-16]
 11c:	ldr	r2, [fp, #-8]
 120:	str	r2, [r3]
 124:	ldr	r3, [fp, #-16]
 128:	ldr	r2, [fp, #-8]
 12c:	str	r2, [r3, #4]
 130:	ldr	r3, [fp, #-8]
 134:	ldr	r2, [fp, #-8]
 138:	str	r2, [r3, #2944]	; 0xb80
 13c:	ldr	r3, [fp, #-8]
 140:	ldr	r2, [fp, #-8]
 144:	str	r2, [r3, #2948]	; 0xb84
 148:	ldr	r3, [fp, #-16]
 14c:	ldr	r3, [r3]
 150:	add	r2, r3, #1472	; 0x5c0
 154:	ldr	r3, [fp, #-16]
 158:	str	r2, [r3, #8]
 15c:	ldr	r3, [fp, #-16]
 160:	ldr	r2, [r3, #8]
 164:	ldr	r3, [fp, #-16]
 168:	str	r2, [r3, #16]
 16c:	ldr	r3, [fp, #-16]
 170:	mov	r2, #1472	; 0x5c0
 174:	str	r2, [r3, #12]
 178:	ldr	r3, [fp, #-16]
 17c:	ldr	r3, [r3, #12]
 180:	rsb	r2, r3, #2944	; 0xb80
 184:	ldr	r3, [fp, #-16]
 188:	str	r2, [r3, #20]
 18c:	ldr	r3, [fp, #-16]
 190:	ldr	r3, [r3, #12]
 194:	rsb	r2, r3, #0
 198:	ldr	r3, [fp, #-8]
 19c:	str	r2, [r3, #2952]	; 0xb88
 1a0:	mov	r3, #0
 1a4:	b	1ec <advance_front+0x1ec>
 1a8:	ldr	r3, [fp, #-16]
 1ac:	ldr	r3, [r3]
 1b0:	add	r2, r3, #2944	; 0xb80
 1b4:	ldr	r3, [fp, #-16]
 1b8:	str	r2, [r3, #8]
 1bc:	ldr	r3, [fp, #-16]
 1c0:	mov	r2, #2944	; 0xb80
 1c4:	str	r2, [r3, #12]
 1c8:	ldr	r3, [fp, #-16]
 1cc:	ldr	r3, [r3]
 1d0:	ldr	r3, [r3, #2944]	; 0xb80
 1d4:	ldr	r2, [r3, #2952]	; 0xb88
 1d8:	ldr	r3, [fp, #-16]
 1dc:	ldr	r3, [r3]
 1e0:	sub	r2, r2, #2944	; 0xb80
 1e4:	str	r2, [r3, #2952]	; 0xb88
 1e8:	mov	r3, #0
 1ec:	mov	r0, r3
 1f0:	sub	sp, fp, #4
 1f4:	ldr	fp, [sp]
 1f8:	add	sp, sp, #4
 1fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000200 <advance_back>:
 200:	str	fp, [sp, #-8]!
 204:	str	lr, [sp, #4]
 208:	add	fp, sp, #4
 20c:	sub	sp, sp, #16
 210:	str	r0, [fp, #-16]
 214:	mov	r3, #0
 218:	str	r3, [fp, #-8]
 21c:	ldr	r3, [fp, #-16]
 220:	ldr	r3, [r3, #4]
 224:	cmp	r3, #0
 228:	beq	260 <advance_back+0x60>
 22c:	ldr	r3, [fp, #-16]
 230:	ldr	r3, [r3, #4]
 234:	ldr	r2, [r3, #2944]	; 0xb80
 238:	ldr	r3, [fp, #-16]
 23c:	ldr	r3, [r3]
 240:	cmp	r2, r3
 244:	beq	260 <advance_back+0x60>
 248:	ldr	r3, [fp, #-16]
 24c:	ldr	r3, [r3, #4]
 250:	ldr	r2, [r3, #2944]	; 0xb80
 254:	ldr	r3, [fp, #-16]
 258:	str	r2, [r3, #4]
 25c:	b	388 <advance_back+0x188>
 260:	movw	r0, #2956	; 0xb8c
 264:	bl	0 <malloc>
 268:	mov	r3, r0
 26c:	str	r3, [fp, #-8]
 270:	ldr	r3, [fp, #-8]
 274:	cmp	r3, #0
 278:	bne	284 <advance_back+0x84>
 27c:	mvn	r3, #0
 280:	b	3cc <advance_back+0x1cc>
 284:	ldr	r3, [fp, #-16]
 288:	ldr	r3, [r3, #28]
 28c:	add	r2, r3, #2944	; 0xb80
 290:	ldr	r3, [fp, #-16]
 294:	str	r2, [r3, #28]
 298:	ldr	r3, [fp, #-16]
 29c:	ldr	r3, [r3, #4]
 2a0:	cmp	r3, #0
 2a4:	beq	2f8 <advance_back+0xf8>
 2a8:	ldr	r3, [fp, #-16]
 2ac:	ldr	r2, [r3, #4]
 2b0:	ldr	r3, [fp, #-8]
 2b4:	str	r2, [r3, #2948]	; 0xb84
 2b8:	ldr	r3, [fp, #-16]
 2bc:	ldr	r2, [r3]
 2c0:	ldr	r3, [fp, #-8]
 2c4:	str	r2, [r3, #2944]	; 0xb80
 2c8:	ldr	r3, [fp, #-16]
 2cc:	ldr	r3, [r3]
 2d0:	ldr	r2, [fp, #-8]
 2d4:	str	r2, [r3, #2948]	; 0xb84
 2d8:	ldr	r3, [fp, #-16]
 2dc:	ldr	r3, [r3, #4]
 2e0:	ldr	r2, [fp, #-8]
 2e4:	str	r2, [r3, #2944]	; 0xb80
 2e8:	ldr	r3, [fp, #-16]
 2ec:	ldr	r2, [fp, #-8]
 2f0:	str	r2, [r3, #4]
 2f4:	b	388 <advance_back+0x188>
 2f8:	ldr	r3, [fp, #-16]
 2fc:	ldr	r2, [fp, #-8]
 300:	str	r2, [r3]
 304:	ldr	r3, [fp, #-16]
 308:	ldr	r2, [fp, #-8]
 30c:	str	r2, [r3, #4]
 310:	ldr	r3, [fp, #-8]
 314:	ldr	r2, [fp, #-8]
 318:	str	r2, [r3, #2944]	; 0xb80
 31c:	ldr	r3, [fp, #-8]
 320:	ldr	r2, [fp, #-8]
 324:	str	r2, [r3, #2948]	; 0xb84
 328:	ldr	r3, [fp, #-16]
 32c:	ldr	r3, [r3]
 330:	add	r2, r3, #1472	; 0x5c0
 334:	ldr	r3, [fp, #-16]
 338:	str	r2, [r3, #8]
 33c:	ldr	r3, [fp, #-16]
 340:	ldr	r2, [r3, #8]
 344:	ldr	r3, [fp, #-16]
 348:	str	r2, [r3, #16]
 34c:	ldr	r3, [fp, #-16]
 350:	mov	r2, #1472	; 0x5c0
 354:	str	r2, [r3, #12]
 358:	ldr	r3, [fp, #-16]
 35c:	ldr	r3, [r3, #12]
 360:	rsb	r2, r3, #2944	; 0xb80
 364:	ldr	r3, [fp, #-16]
 368:	str	r2, [r3, #20]
 36c:	ldr	r3, [fp, #-16]
 370:	ldr	r3, [r3, #12]
 374:	rsb	r2, r3, #0
 378:	ldr	r3, [fp, #-8]
 37c:	str	r2, [r3, #2952]	; 0xb88
 380:	mov	r3, #0
 384:	b	3cc <advance_back+0x1cc>
 388:	ldr	r3, [fp, #-16]
 38c:	ldr	r3, [r3, #4]
 390:	mov	r2, r3
 394:	ldr	r3, [fp, #-16]
 398:	str	r2, [r3, #16]
 39c:	ldr	r3, [fp, #-16]
 3a0:	mov	r2, #2944	; 0xb80
 3a4:	str	r2, [r3, #20]
 3a8:	ldr	r3, [fp, #-16]
 3ac:	ldr	r3, [r3, #4]
 3b0:	ldr	r3, [r3, #2948]	; 0xb84
 3b4:	ldr	r2, [r3, #2952]	; 0xb88
 3b8:	ldr	r3, [fp, #-16]
 3bc:	ldr	r3, [r3, #4]
 3c0:	add	r2, r2, #2944	; 0xb80
 3c4:	str	r2, [r3, #2952]	; 0xb88
 3c8:	mov	r3, #0
 3cc:	mov	r0, r3
 3d0:	sub	sp, fp, #4
 3d4:	ldr	fp, [sp]
 3d8:	add	sp, sp, #4
 3dc:	pop	{pc}		; (ldr pc, [sp], #4)

000003e0 <copy_front>:
 3e0:	str	fp, [sp, #-8]!
 3e4:	str	lr, [sp, #4]
 3e8:	add	fp, sp, #4
 3ec:	sub	sp, sp, #24
 3f0:	str	r0, [fp, #-16]
 3f4:	str	r1, [fp, #-20]	; 0xffffffec
 3f8:	str	r2, [fp, #-24]	; 0xffffffe8
 3fc:	ldr	r2, [fp, #-20]	; 0xffffffec
 400:	ldr	r3, [fp, #-24]	; 0xffffffe8
 404:	add	r3, r2, r3
 408:	str	r3, [fp, #-20]	; 0xffffffec
 40c:	b	4d0 <copy_front+0xf0>
 410:	ldr	r3, [fp, #-24]	; 0xffffffe8
 414:	str	r3, [fp, #-8]
 418:	ldr	r3, [fp, #-16]
 41c:	ldr	r3, [r3, #12]
 420:	ldr	r2, [fp, #-8]
 424:	cmp	r2, r3
 428:	bls	460 <copy_front+0x80>
 42c:	ldr	r3, [fp, #-16]
 430:	ldr	r3, [r3, #12]
 434:	str	r3, [fp, #-8]
 438:	ldr	r3, [fp, #-8]
 43c:	cmp	r3, #0
 440:	bne	460 <copy_front+0x80>
 444:	ldr	r0, [fp, #-16]
 448:	bl	0 <advance_front>
 44c:	mov	r3, r0
 450:	cmp	r3, #0
 454:	beq	4d0 <copy_front+0xf0>
 458:	mvn	r3, #0
 45c:	b	4e0 <copy_front+0x100>
 460:	ldr	r3, [fp, #-16]
 464:	ldr	r2, [r3, #8]
 468:	ldr	r3, [fp, #-8]
 46c:	rsb	r3, r3, #0
 470:	add	r2, r2, r3
 474:	ldr	r3, [fp, #-16]
 478:	str	r2, [r3, #8]
 47c:	ldr	r3, [fp, #-16]
 480:	ldr	r2, [r3, #12]
 484:	ldr	r3, [fp, #-8]
 488:	sub	r2, r2, r3
 48c:	ldr	r3, [fp, #-16]
 490:	str	r2, [r3, #12]
 494:	ldr	r3, [fp, #-8]
 498:	rsb	r3, r3, #0
 49c:	ldr	r2, [fp, #-20]	; 0xffffffec
 4a0:	add	r3, r2, r3
 4a4:	str	r3, [fp, #-20]	; 0xffffffec
 4a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 4ac:	ldr	r3, [fp, #-8]
 4b0:	sub	r3, r2, r3
 4b4:	str	r3, [fp, #-24]	; 0xffffffe8
 4b8:	ldr	r3, [fp, #-16]
 4bc:	ldr	r3, [r3, #8]
 4c0:	ldr	r2, [fp, #-8]
 4c4:	ldr	r1, [fp, #-20]	; 0xffffffec
 4c8:	mov	r0, r3
 4cc:	bl	0 <memcpy>
 4d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4d4:	cmp	r3, #0
 4d8:	bne	410 <copy_front+0x30>
 4dc:	mov	r3, #0
 4e0:	mov	r0, r3
 4e4:	sub	sp, fp, #4
 4e8:	ldr	fp, [sp]
 4ec:	add	sp, sp, #4
 4f0:	pop	{pc}		; (ldr pc, [sp], #4)

000004f4 <copy_back>:
 4f4:	str	fp, [sp, #-8]!
 4f8:	str	lr, [sp, #4]
 4fc:	add	fp, sp, #4
 500:	sub	sp, sp, #24
 504:	str	r0, [fp, #-16]
 508:	str	r1, [fp, #-20]	; 0xffffffec
 50c:	str	r2, [fp, #-24]	; 0xffffffe8
 510:	b	5cc <copy_back+0xd8>
 514:	ldr	r3, [fp, #-24]	; 0xffffffe8
 518:	str	r3, [fp, #-8]
 51c:	ldr	r3, [fp, #-16]
 520:	ldr	r3, [r3, #20]
 524:	ldr	r2, [fp, #-8]
 528:	cmp	r2, r3
 52c:	bls	564 <copy_back+0x70>
 530:	ldr	r3, [fp, #-16]
 534:	ldr	r3, [r3, #20]
 538:	str	r3, [fp, #-8]
 53c:	ldr	r3, [fp, #-8]
 540:	cmp	r3, #0
 544:	bne	564 <copy_back+0x70>
 548:	ldr	r0, [fp, #-16]
 54c:	bl	200 <advance_back>
 550:	mov	r3, r0
 554:	cmp	r3, #0
 558:	beq	5cc <copy_back+0xd8>
 55c:	mvn	r3, #0
 560:	b	5dc <copy_back+0xe8>
 564:	ldr	r3, [fp, #-16]
 568:	ldr	r3, [r3, #16]
 56c:	ldr	r2, [fp, #-8]
 570:	ldr	r1, [fp, #-20]	; 0xffffffec
 574:	mov	r0, r3
 578:	bl	0 <memcpy>
 57c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 580:	ldr	r3, [fp, #-8]
 584:	sub	r3, r2, r3
 588:	str	r3, [fp, #-24]	; 0xffffffe8
 58c:	ldr	r2, [fp, #-20]	; 0xffffffec
 590:	ldr	r3, [fp, #-8]
 594:	add	r3, r2, r3
 598:	str	r3, [fp, #-20]	; 0xffffffec
 59c:	ldr	r3, [fp, #-16]
 5a0:	ldr	r2, [r3, #16]
 5a4:	ldr	r3, [fp, #-8]
 5a8:	add	r2, r2, r3
 5ac:	ldr	r3, [fp, #-16]
 5b0:	str	r2, [r3, #16]
 5b4:	ldr	r3, [fp, #-16]
 5b8:	ldr	r2, [r3, #20]
 5bc:	ldr	r3, [fp, #-8]
 5c0:	sub	r2, r2, r3
 5c4:	ldr	r3, [fp, #-16]
 5c8:	str	r2, [r3, #20]
 5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5d0:	cmp	r3, #0
 5d4:	bne	514 <copy_back+0x20>
 5d8:	mov	r3, #0
 5dc:	mov	r0, r3
 5e0:	sub	sp, fp, #4
 5e4:	ldr	fp, [sp]
 5e8:	add	sp, sp, #4
 5ec:	pop	{pc}		; (ldr pc, [sp], #4)

000005f0 <flatcc_emitter_recycle_page>:
 5f0:	push	{fp}		; (str fp, [sp, #-4]!)
 5f4:	add	fp, sp, #0
 5f8:	sub	sp, sp, #12
 5fc:	str	r0, [fp, #-8]
 600:	str	r1, [fp, #-12]
 604:	ldr	r3, [fp, #-8]
 608:	ldr	r3, [r3]
 60c:	ldr	r2, [fp, #-12]
 610:	cmp	r2, r3
 614:	beq	62c <flatcc_emitter_recycle_page+0x3c>
 618:	ldr	r3, [fp, #-8]
 61c:	ldr	r3, [r3, #4]
 620:	ldr	r2, [fp, #-12]
 624:	cmp	r2, r3
 628:	bne	634 <flatcc_emitter_recycle_page+0x44>
 62c:	mvn	r3, #0
 630:	b	6a4 <flatcc_emitter_recycle_page+0xb4>
 634:	ldr	r3, [fp, #-12]
 638:	ldr	r3, [r3, #2944]	; 0xb80
 63c:	ldr	r2, [fp, #-12]
 640:	ldr	r2, [r2, #2948]	; 0xb84
 644:	str	r2, [r3, #2948]	; 0xb84
 648:	ldr	r3, [fp, #-12]
 64c:	ldr	r3, [r3, #2948]	; 0xb84
 650:	ldr	r2, [fp, #-12]
 654:	ldr	r2, [r2, #2944]	; 0xb80
 658:	str	r2, [r3, #2944]	; 0xb80
 65c:	ldr	r3, [fp, #-8]
 660:	ldr	r3, [r3]
 664:	ldr	r2, [r3, #2948]	; 0xb84
 668:	ldr	r3, [fp, #-12]
 66c:	str	r2, [r3, #2948]	; 0xb84
 670:	ldr	r3, [fp, #-8]
 674:	ldr	r2, [r3]
 678:	ldr	r3, [fp, #-12]
 67c:	str	r2, [r3, #2944]	; 0xb80
 680:	ldr	r3, [fp, #-12]
 684:	ldr	r3, [r3, #2948]	; 0xb84
 688:	ldr	r2, [fp, #-12]
 68c:	str	r2, [r3, #2944]	; 0xb80
 690:	ldr	r3, [fp, #-12]
 694:	ldr	r3, [r3, #2944]	; 0xb80
 698:	ldr	r2, [fp, #-12]
 69c:	str	r2, [r3, #2948]	; 0xb84
 6a0:	mov	r3, #0
 6a4:	mov	r0, r3
 6a8:	add	sp, fp, #0
 6ac:	pop	{fp}		; (ldr fp, [sp], #4)
 6b0:	bx	lr

000006b4 <flatcc_emitter_reset>:
 6b4:	str	fp, [sp, #-8]!
 6b8:	str	lr, [sp, #4]
 6bc:	add	fp, sp, #4
 6c0:	sub	sp, sp, #16
 6c4:	str	r0, [fp, #-16]
 6c8:	ldr	r3, [fp, #-16]
 6cc:	ldr	r3, [r3]
 6d0:	str	r3, [fp, #-8]
 6d4:	ldr	r3, [fp, #-16]
 6d8:	ldr	r3, [r3]
 6dc:	cmp	r3, #0
 6e0:	beq	83c <flatcc_emitter_reset+0x188>
 6e4:	ldr	r3, [fp, #-16]
 6e8:	ldr	r2, [r3]
 6ec:	ldr	r3, [fp, #-16]
 6f0:	str	r2, [r3, #4]
 6f4:	ldr	r3, [fp, #-16]
 6f8:	ldr	r3, [r3]
 6fc:	add	r2, r3, #1472	; 0x5c0
 700:	ldr	r3, [fp, #-16]
 704:	str	r2, [r3, #8]
 708:	ldr	r3, [fp, #-16]
 70c:	ldr	r2, [r3, #8]
 710:	ldr	r3, [fp, #-16]
 714:	str	r2, [r3, #16]
 718:	ldr	r3, [fp, #-16]
 71c:	mov	r2, #1472	; 0x5c0
 720:	str	r2, [r3, #12]
 724:	ldr	r3, [fp, #-16]
 728:	mov	r2, #1472	; 0x5c0
 72c:	str	r2, [r3, #20]
 730:	ldr	r3, [fp, #-16]
 734:	ldr	r3, [r3, #12]
 738:	mov	r2, r3
 73c:	ldr	r3, [fp, #-16]
 740:	ldr	r3, [r3]
 744:	rsb	r2, r2, #0
 748:	str	r2, [r3, #2952]	; 0xb88
 74c:	ldr	r3, [fp, #-16]
 750:	ldr	r3, [r3, #32]
 754:	cmp	r3, #0
 758:	bne	76c <flatcc_emitter_reset+0xb8>
 75c:	ldr	r3, [fp, #-16]
 760:	ldr	r2, [r3, #24]
 764:	ldr	r3, [fp, #-16]
 768:	str	r2, [r3, #32]
 76c:	ldr	r3, [fp, #-16]
 770:	ldr	r2, [r3, #32]
 774:	mov	r3, r2
 778:	lsl	r3, r3, #1
 77c:	add	r3, r3, r2
 780:	lsr	r2, r3, #2
 784:	ldr	r3, [fp, #-16]
 788:	ldr	r3, [r3, #24]
 78c:	lsr	r3, r3, #2
 790:	add	r2, r2, r3
 794:	ldr	r3, [fp, #-16]
 798:	str	r2, [r3, #32]
 79c:	ldr	r3, [fp, #-16]
 7a0:	mov	r2, #0
 7a4:	str	r2, [r3, #24]
 7a8:	b	800 <flatcc_emitter_reset+0x14c>
 7ac:	ldr	r3, [fp, #-16]
 7b0:	ldr	r3, [r3, #4]
 7b4:	ldr	r3, [r3, #2944]	; 0xb80
 7b8:	str	r3, [fp, #-8]
 7bc:	ldr	r3, [fp, #-16]
 7c0:	ldr	r3, [r3, #4]
 7c4:	ldr	r2, [fp, #-8]
 7c8:	ldr	r2, [r2, #2944]	; 0xb80
 7cc:	str	r2, [r3, #2944]	; 0xb80
 7d0:	ldr	r3, [fp, #-8]
 7d4:	ldr	r3, [r3, #2944]	; 0xb80
 7d8:	ldr	r2, [fp, #-16]
 7dc:	ldr	r2, [r2, #4]
 7e0:	str	r2, [r3, #2948]	; 0xb84
 7e4:	ldr	r0, [fp, #-8]
 7e8:	bl	0 <free>
 7ec:	ldr	r3, [fp, #-16]
 7f0:	ldr	r3, [r3, #28]
 7f4:	sub	r2, r3, #2944	; 0xb80
 7f8:	ldr	r3, [fp, #-16]
 7fc:	str	r2, [r3, #28]
 800:	ldr	r3, [fp, #-16]
 804:	ldr	r3, [r3, #32]
 808:	lsl	r2, r3, #1
 80c:	ldr	r3, [fp, #-16]
 810:	ldr	r3, [r3, #28]
 814:	cmp	r2, r3
 818:	bcs	840 <flatcc_emitter_reset+0x18c>
 81c:	ldr	r3, [fp, #-16]
 820:	ldr	r3, [r3, #4]
 824:	ldr	r2, [r3, #2944]	; 0xb80
 828:	ldr	r3, [fp, #-16]
 82c:	ldr	r3, [r3]
 830:	cmp	r2, r3
 834:	bne	7ac <flatcc_emitter_reset+0xf8>
 838:	b	840 <flatcc_emitter_reset+0x18c>
 83c:	nop	{0}
 840:	sub	sp, fp, #4
 844:	ldr	fp, [sp]
 848:	add	sp, sp, #4
 84c:	pop	{pc}		; (ldr pc, [sp], #4)

00000850 <flatcc_emitter_clear>:
 850:	str	fp, [sp, #-8]!
 854:	str	lr, [sp, #4]
 858:	add	fp, sp, #4
 85c:	sub	sp, sp, #16
 860:	str	r0, [fp, #-16]
 864:	ldr	r3, [fp, #-16]
 868:	ldr	r3, [r3]
 86c:	str	r3, [fp, #-8]
 870:	ldr	r3, [fp, #-8]
 874:	cmp	r3, #0
 878:	beq	8d8 <flatcc_emitter_clear+0x88>
 87c:	ldr	r3, [fp, #-8]
 880:	ldr	r3, [r3, #2948]	; 0xb84
 884:	mov	r2, #0
 888:	str	r2, [r3, #2944]	; 0xb80
 88c:	b	8ac <flatcc_emitter_clear+0x5c>
 890:	ldr	r3, [fp, #-8]
 894:	ldr	r3, [r3, #2944]	; 0xb80
 898:	str	r3, [fp, #-8]
 89c:	ldr	r3, [fp, #-8]
 8a0:	ldr	r3, [r3, #2948]	; 0xb84
 8a4:	mov	r0, r3
 8a8:	bl	0 <free>
 8ac:	ldr	r3, [fp, #-8]
 8b0:	ldr	r3, [r3, #2944]	; 0xb80
 8b4:	cmp	r3, #0
 8b8:	bne	890 <flatcc_emitter_clear+0x40>
 8bc:	ldr	r0, [fp, #-8]
 8c0:	bl	0 <free>
 8c4:	mov	r2, #36	; 0x24
 8c8:	mov	r1, #0
 8cc:	ldr	r0, [fp, #-16]
 8d0:	bl	0 <memset>
 8d4:	b	8dc <flatcc_emitter_clear+0x8c>
 8d8:	nop	{0}
 8dc:	sub	sp, fp, #4
 8e0:	ldr	fp, [sp]
 8e4:	add	sp, sp, #4
 8e8:	pop	{pc}		; (ldr pc, [sp], #4)

000008ec <flatcc_emitter>:
 8ec:	str	fp, [sp, #-8]!
 8f0:	str	lr, [sp, #4]
 8f4:	add	fp, sp, #4
 8f8:	sub	sp, sp, #24
 8fc:	str	r0, [fp, #-16]
 900:	str	r1, [fp, #-20]	; 0xffffffec
 904:	str	r2, [fp, #-24]	; 0xffffffe8
 908:	str	r3, [fp, #-28]	; 0xffffffe4
 90c:	ldr	r3, [fp, #-16]
 910:	str	r3, [fp, #-12]
 914:	ldr	r3, [fp, #-12]
 918:	ldr	r2, [r3, #24]
 91c:	ldr	r3, [fp, #4]
 920:	add	r2, r2, r3
 924:	ldr	r3, [fp, #-12]
 928:	str	r2, [r3, #24]
 92c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 930:	cmp	r3, #0
 934:	bge	9fc <flatcc_emitter+0x110>
 938:	ldr	r3, [fp, #-12]
 93c:	ldr	r3, [r3, #12]
 940:	ldr	r2, [fp, #4]
 944:	cmp	r2, r3
 948:	bhi	990 <flatcc_emitter+0xa4>
 94c:	ldr	r3, [fp, #-12]
 950:	ldr	r2, [r3, #8]
 954:	ldr	r3, [fp, #4]
 958:	rsb	r3, r3, #0
 95c:	add	r2, r2, r3
 960:	ldr	r3, [fp, #-12]
 964:	str	r2, [r3, #8]
 968:	ldr	r3, [fp, #-12]
 96c:	ldr	r2, [r3, #12]
 970:	ldr	r3, [fp, #4]
 974:	sub	r2, r2, r3
 978:	ldr	r3, [fp, #-12]
 97c:	str	r2, [r3, #12]
 980:	ldr	r3, [fp, #-12]
 984:	ldr	r3, [r3, #8]
 988:	str	r3, [fp, #-8]
 98c:	b	aa8 <flatcc_emitter+0x1bc>
 990:	ldr	r3, [fp, #-24]	; 0xffffffe8
 994:	lsl	r3, r3, #3
 998:	ldr	r2, [fp, #-20]	; 0xffffffec
 99c:	add	r3, r2, r3
 9a0:	str	r3, [fp, #-20]	; 0xffffffec
 9a4:	b	9e4 <flatcc_emitter+0xf8>
 9a8:	ldr	r3, [fp, #-20]	; 0xffffffec
 9ac:	sub	r3, r3, #8
 9b0:	str	r3, [fp, #-20]	; 0xffffffec
 9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
 9b8:	ldr	r1, [r3]
 9bc:	ldr	r3, [fp, #-20]	; 0xffffffec
 9c0:	ldr	r3, [r3, #4]
 9c4:	mov	r2, r3
 9c8:	ldr	r0, [fp, #-12]
 9cc:	bl	3e0 <copy_front>
 9d0:	mov	r3, r0
 9d4:	cmp	r3, #0
 9d8:	beq	9e4 <flatcc_emitter+0xf8>
 9dc:	mvn	r3, #0
 9e0:	b	b00 <flatcc_emitter+0x214>
 9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9e8:	sub	r2, r3, #1
 9ec:	str	r2, [fp, #-24]	; 0xffffffe8
 9f0:	cmp	r3, #0
 9f4:	bne	9a8 <flatcc_emitter+0xbc>
 9f8:	b	aa0 <flatcc_emitter+0x1b4>
 9fc:	ldr	r3, [fp, #-12]
 a00:	ldr	r3, [r3, #20]
 a04:	ldr	r2, [fp, #4]
 a08:	cmp	r2, r3
 a0c:	bhi	a8c <flatcc_emitter+0x1a0>
 a10:	ldr	r3, [fp, #-12]
 a14:	ldr	r3, [r3, #16]
 a18:	str	r3, [fp, #-8]
 a1c:	ldr	r3, [fp, #-12]
 a20:	ldr	r2, [r3, #16]
 a24:	ldr	r3, [fp, #4]
 a28:	add	r2, r2, r3
 a2c:	ldr	r3, [fp, #-12]
 a30:	str	r2, [r3, #16]
 a34:	ldr	r3, [fp, #-12]
 a38:	ldr	r2, [r3, #20]
 a3c:	ldr	r3, [fp, #4]
 a40:	sub	r2, r2, r3
 a44:	ldr	r3, [fp, #-12]
 a48:	str	r2, [r3, #20]
 a4c:	b	aa8 <flatcc_emitter+0x1bc>
 a50:	ldr	r3, [fp, #-20]	; 0xffffffec
 a54:	ldr	r1, [r3]
 a58:	ldr	r3, [fp, #-20]	; 0xffffffec
 a5c:	ldr	r3, [r3, #4]
 a60:	mov	r2, r3
 a64:	ldr	r0, [fp, #-12]
 a68:	bl	4f4 <copy_back>
 a6c:	mov	r3, r0
 a70:	cmp	r3, #0
 a74:	beq	a80 <flatcc_emitter+0x194>
 a78:	mvn	r3, #0
 a7c:	b	b00 <flatcc_emitter+0x214>
 a80:	ldr	r3, [fp, #-20]	; 0xffffffec
 a84:	add	r3, r3, #8
 a88:	str	r3, [fp, #-20]	; 0xffffffec
 a8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a90:	sub	r2, r3, #1
 a94:	str	r2, [fp, #-24]	; 0xffffffe8
 a98:	cmp	r3, #0
 a9c:	bne	a50 <flatcc_emitter+0x164>
 aa0:	mov	r3, #0
 aa4:	b	b00 <flatcc_emitter+0x214>
 aa8:	b	ae8 <flatcc_emitter+0x1fc>
 aac:	ldr	r3, [fp, #-20]	; 0xffffffec
 ab0:	ldr	r1, [r3]
 ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
 ab8:	ldr	r3, [r3, #4]
 abc:	mov	r2, r3
 ac0:	ldr	r0, [fp, #-8]
 ac4:	bl	0 <memcpy>
 ac8:	ldr	r3, [fp, #-20]	; 0xffffffec
 acc:	ldr	r3, [r3, #4]
 ad0:	ldr	r2, [fp, #-8]
 ad4:	add	r3, r2, r3
 ad8:	str	r3, [fp, #-8]
 adc:	ldr	r3, [fp, #-20]	; 0xffffffec
 ae0:	add	r3, r3, #8
 ae4:	str	r3, [fp, #-20]	; 0xffffffec
 ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 aec:	sub	r2, r3, #1
 af0:	str	r2, [fp, #-24]	; 0xffffffe8
 af4:	cmp	r3, #0
 af8:	bne	aac <flatcc_emitter+0x1c0>
 afc:	mov	r3, #0
 b00:	mov	r0, r3
 b04:	sub	sp, fp, #4
 b08:	ldr	fp, [sp]
 b0c:	add	sp, sp, #4
 b10:	pop	{pc}		; (ldr pc, [sp], #4)

00000b14 <flatcc_emitter_copy_buffer>:
 b14:	str	fp, [sp, #-8]!
 b18:	str	lr, [sp, #4]
 b1c:	add	fp, sp, #4
 b20:	sub	sp, sp, #24
 b24:	str	r0, [fp, #-16]
 b28:	str	r1, [fp, #-20]	; 0xffffffec
 b2c:	str	r2, [fp, #-24]	; 0xffffffe8
 b30:	ldr	r3, [fp, #-16]
 b34:	ldr	r3, [r3, #24]
 b38:	ldr	r2, [fp, #-24]	; 0xffffffe8
 b3c:	cmp	r2, r3
 b40:	bcs	b4c <flatcc_emitter_copy_buffer+0x38>
 b44:	mov	r3, #0
 b48:	b	c4c <flatcc_emitter_copy_buffer+0x138>
 b4c:	ldr	r3, [fp, #-16]
 b50:	ldr	r3, [r3]
 b54:	cmp	r3, #0
 b58:	bne	b64 <flatcc_emitter_copy_buffer+0x50>
 b5c:	mov	r3, #0
 b60:	b	c4c <flatcc_emitter_copy_buffer+0x138>
 b64:	ldr	r3, [fp, #-16]
 b68:	ldr	r2, [r3]
 b6c:	ldr	r3, [fp, #-16]
 b70:	ldr	r3, [r3, #4]
 b74:	cmp	r2, r3
 b78:	bne	ba0 <flatcc_emitter_copy_buffer+0x8c>
 b7c:	ldr	r3, [fp, #-16]
 b80:	ldr	r1, [r3, #8]
 b84:	ldr	r3, [fp, #-16]
 b88:	ldr	r3, [r3, #24]
 b8c:	mov	r2, r3
 b90:	ldr	r0, [fp, #-20]	; 0xffffffec
 b94:	bl	0 <memcpy>
 b98:	ldr	r3, [fp, #-20]	; 0xffffffec
 b9c:	b	c4c <flatcc_emitter_copy_buffer+0x138>
 ba0:	ldr	r3, [fp, #-16]
 ba4:	ldr	r3, [r3, #12]
 ba8:	rsb	r3, r3, #2944	; 0xb80
 bac:	str	r3, [fp, #-12]
 bb0:	ldr	r3, [fp, #-16]
 bb4:	ldr	r3, [r3, #8]
 bb8:	ldr	r2, [fp, #-12]
 bbc:	mov	r1, r3
 bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
 bc4:	bl	0 <memcpy>
 bc8:	ldr	r2, [fp, #-20]	; 0xffffffec
 bcc:	ldr	r3, [fp, #-12]
 bd0:	add	r3, r2, r3
 bd4:	str	r3, [fp, #-20]	; 0xffffffec
 bd8:	ldr	r3, [fp, #-16]
 bdc:	ldr	r3, [r3]
 be0:	ldr	r3, [r3, #2944]	; 0xb80
 be4:	str	r3, [fp, #-8]
 be8:	b	c18 <flatcc_emitter_copy_buffer+0x104>
 bec:	ldr	r3, [fp, #-8]
 bf0:	mov	r2, #2944	; 0xb80
 bf4:	mov	r1, r3
 bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
 bfc:	bl	0 <memcpy>
 c00:	ldr	r3, [fp, #-20]	; 0xffffffec
 c04:	add	r3, r3, #2944	; 0xb80
 c08:	str	r3, [fp, #-20]	; 0xffffffec
 c0c:	ldr	r3, [fp, #-8]
 c10:	ldr	r3, [r3, #2944]	; 0xb80
 c14:	str	r3, [fp, #-8]
 c18:	ldr	r3, [fp, #-16]
 c1c:	ldr	r3, [r3, #4]
 c20:	ldr	r2, [fp, #-8]
 c24:	cmp	r2, r3
 c28:	bne	bec <flatcc_emitter_copy_buffer+0xd8>
 c2c:	ldr	r1, [fp, #-8]
 c30:	ldr	r3, [fp, #-16]
 c34:	ldr	r3, [r3, #20]
 c38:	rsb	r3, r3, #2944	; 0xb80
 c3c:	mov	r2, r3
 c40:	ldr	r0, [fp, #-20]	; 0xffffffec
 c44:	bl	0 <memcpy>
 c48:	ldr	r3, [fp, #-20]	; 0xffffffec
 c4c:	mov	r0, r3
 c50:	sub	sp, fp, #4
 c54:	ldr	fp, [sp]
 c58:	add	sp, sp, #4
 c5c:	pop	{pc}		; (ldr pc, [sp], #4)
