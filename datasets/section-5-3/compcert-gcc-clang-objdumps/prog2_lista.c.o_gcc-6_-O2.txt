
../compcert-repos/prog2/CMakeFiles/MT1E1-2.1.dir/Extras/Miniteste1-Exemplo2/1/lista.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <novo_str>:
   0:	push	{r4, r5, r6, r7, r8, lr}
   4:	mov	r5, r0
   8:	mov	r0, #12
   c:	bl	0 <malloc>
  10:	subs	r4, r0, #0
  14:	beq	54 <novo_str+0x54>
  18:	mov	r0, r5
  1c:	bl	0 <strlen>
  20:	add	r7, r0, #1
  24:	mov	r0, r7
  28:	bl	0 <malloc>
  2c:	cmp	r0, #0
  30:	mov	r6, r0
  34:	str	r0, [r4]
  38:	beq	5c <novo_str+0x5c>
  3c:	mov	r2, r7
  40:	mov	r1, r5
  44:	bl	0 <memcpy>
  48:	mov	r3, #0
  4c:	str	r3, [r4, #4]
  50:	str	r3, [r4, #8]
  54:	mov	r0, r4
  58:	pop	{r4, r5, r6, r7, r8, pc}
  5c:	mov	r0, r4
  60:	bl	0 <free>
  64:	mov	r4, r6
  68:	b	54 <novo_str+0x54>

0000006c <lista_nova>:
  6c:	push	{r4, lr}
  70:	mov	r0, #12
  74:	bl	0 <malloc>
  78:	cmp	r0, #0
  7c:	movne	r3, #0
  80:	strne	r3, [r0]
  84:	strne	r3, [r0, #4]
  88:	strne	r3, [r0, #8]
  8c:	pop	{r4, pc}

00000090 <lista_apaga>:
  90:	push	{r4, r5, r6, lr}
  94:	subs	r5, r0, #0
  98:	bne	b4 <lista_apaga+0x24>
  9c:	b	cc <lista_apaga+0x3c>
  a0:	ldm	r4, {r0, r3}
  a4:	str	r3, [r5]
  a8:	bl	0 <free>
  ac:	mov	r0, r4
  b0:	bl	0 <free>
  b4:	ldr	r4, [r5]
  b8:	cmp	r4, #0
  bc:	bne	a0 <lista_apaga+0x10>
  c0:	mov	r0, r5
  c4:	pop	{r4, r5, r6, lr}
  c8:	b	0 <free>
  cc:	pop	{r4, r5, r6, pc}

000000d0 <lista_tamanho>:
  d0:	cmp	r0, #0
  d4:	ldrne	r0, [r0, #8]
  d8:	mvneq	r0, #0
  dc:	bx	lr

000000e0 <lista_inicio>:
  e0:	cmp	r0, #0
  e4:	ldrne	r0, [r0]
  e8:	bx	lr

000000ec <lista_fim>:
  ec:	cmp	r0, #0
  f0:	ldrne	r0, [r0, #4]
  f4:	bx	lr

000000f8 <lista_insere>:
  f8:	cmp	r1, #0
  fc:	cmpne	r0, #0
 100:	beq	18c <lista_insere+0x94>
 104:	push	{r4, r5, r6, lr}
 108:	mov	r5, r0
 10c:	mov	r0, r1
 110:	mov	r4, r2
 114:	bl	0 <novo_str>
 118:	cmp	r0, #0
 11c:	beq	164 <lista_insere+0x6c>
 120:	ldr	r3, [r5, #8]
 124:	cmp	r4, #0
 128:	add	r3, r3, #1
 12c:	str	r3, [r5, #8]
 130:	ldr	r3, [r5]
 134:	beq	16c <lista_insere+0x74>
 138:	cmp	r4, r3
 13c:	streq	r4, [r0, #4]
 140:	ldrne	r3, [r4, #8]
 144:	streq	r0, [r4, #8]
 148:	strne	r3, [r0, #8]
 14c:	ldrne	r3, [r4, #8]
 150:	strne	r4, [r0, #4]
 154:	streq	r0, [r5]
 158:	strne	r0, [r3, #4]
 15c:	strne	r0, [r4, #8]
 160:	pop	{r4, r5, r6, pc}
 164:	mov	r0, #0
 168:	pop	{r4, r5, r6, pc}
 16c:	cmp	r3, #0
 170:	streq	r0, [r5, #4]
 174:	ldrne	r3, [r5, #4]
 178:	streq	r0, [r5]
 17c:	strne	r3, [r0, #8]
 180:	strne	r0, [r3, #4]
 184:	strne	r0, [r5, #4]
 188:	pop	{r4, r5, r6, pc}
 18c:	mov	r0, #0
 190:	bx	lr

00000194 <lista_remove>:
 194:	cmp	r1, #0
 198:	cmpne	r0, #0
 19c:	push	{r4, r5, r6, lr}
 1a0:	beq	1f4 <lista_remove+0x60>
 1a4:	ldr	r2, [r1, #8]
 1a8:	ldr	r3, [r0, #8]
 1ac:	cmp	r2, #0
 1b0:	sub	r3, r3, #1
 1b4:	str	r3, [r0, #8]
 1b8:	ldrne	r3, [r1, #4]
 1bc:	ldreq	r5, [r1, #4]
 1c0:	strne	r3, [r2, #4]
 1c4:	ldrne	r5, [r1, #4]
 1c8:	streq	r5, [r0]
 1cc:	cmp	r5, #0
 1d0:	streq	r2, [r0, #4]
 1d4:	mov	r4, r1
 1d8:	ldr	r0, [r1]
 1dc:	strne	r2, [r5, #8]
 1e0:	bl	0 <free>
 1e4:	mov	r0, r4
 1e8:	bl	0 <free>
 1ec:	mov	r0, r5
 1f0:	pop	{r4, r5, r6, pc}
 1f4:	mov	r5, #0
 1f8:	mov	r0, r5
 1fc:	pop	{r4, r5, r6, pc}

00000200 <lista_pesquisa>:
 200:	cmp	r1, #0
 204:	cmpne	r0, #0
 208:	push	{r4, r5, r6, lr}
 20c:	moveq	r4, #1
 210:	movne	r4, #0
 214:	beq	29c <lista_pesquisa+0x9c>
 218:	cmp	r2, #1
 21c:	bhi	25c <lista_pesquisa+0x5c>
 220:	cmp	r2, #0
 224:	mov	r5, r1
 228:	bne	264 <lista_pesquisa+0x64>
 22c:	ldr	r4, [r0]
 230:	cmp	r4, #0
 234:	bne	248 <lista_pesquisa+0x48>
 238:	b	25c <lista_pesquisa+0x5c>
 23c:	ldr	r4, [r4, #4]
 240:	cmp	r4, #0
 244:	beq	25c <lista_pesquisa+0x5c>
 248:	mov	r1, r5
 24c:	ldr	r0, [r4]
 250:	bl	0 <strcmp>
 254:	cmp	r0, #0
 258:	bne	23c <lista_pesquisa+0x3c>
 25c:	mov	r0, r4
 260:	pop	{r4, r5, r6, pc}
 264:	ldr	r4, [r0, #4]
 268:	cmp	r4, #0
 26c:	bne	280 <lista_pesquisa+0x80>
 270:	b	25c <lista_pesquisa+0x5c>
 274:	ldr	r4, [r4, #8]
 278:	cmp	r4, #0
 27c:	beq	25c <lista_pesquisa+0x5c>
 280:	mov	r1, r5
 284:	ldr	r0, [r4]
 288:	bl	0 <strcmp>
 28c:	cmp	r0, #0
 290:	bne	274 <lista_pesquisa+0x74>
 294:	mov	r0, r4
 298:	pop	{r4, r5, r6, pc}
 29c:	mov	r4, #0
 2a0:	mov	r0, r4
 2a4:	pop	{r4, r5, r6, pc}

000002a8 <lista_ordena>:
 2a8:	cmp	r0, #0
 2ac:	beq	318 <lista_ordena+0x70>
 2b0:	push	{r4, r5, r6, r7, r8, lr}
 2b4:	ldr	r6, [r0]
 2b8:	ldr	r7, [r6, #4]
 2bc:	cmp	r7, #0
 2c0:	beq	310 <lista_ordena+0x68>
 2c4:	mov	r5, r6
 2c8:	mov	r4, r7
 2cc:	ldr	r1, [r5]
 2d0:	ldr	r0, [r4]
 2d4:	bl	0 <strcmp>
 2d8:	cmp	r0, #0
 2dc:	movlt	r5, r4
 2e0:	ldr	r4, [r4, #4]
 2e4:	cmp	r4, #0
 2e8:	bne	2cc <lista_ordena+0x24>
 2ec:	cmp	r6, r5
 2f0:	ldrne	r2, [r5]
 2f4:	ldrne	r3, [r6]
 2f8:	strne	r2, [r6]
 2fc:	mov	r6, r7
 300:	strne	r3, [r5]
 304:	ldr	r7, [r6, #4]
 308:	cmp	r7, #0
 30c:	bne	2c4 <lista_ordena+0x1c>
 310:	mov	r0, r7
 314:	pop	{r4, r5, r6, r7, r8, pc}
 318:	mvn	r0, #0
 31c:	bx	lr

00000320 <lista_inverte>:
 320:	push	{r4, r5, lr}
 324:	subs	r5, r0, #0
 328:	beq	3c0 <lista_inverte+0xa0>
 32c:	ldr	r4, [r5, #8]
 330:	cmp	r4, #1
 334:	ble	3b0 <lista_inverte+0x90>
 338:	ldr	r2, [r5]
 33c:	cmp	r4, #2
 340:	ldr	r3, [r2, #4]
 344:	beq	3b8 <lista_inverte+0x98>
 348:	sub	r4, r4, #2
 34c:	mov	r1, #0
 350:	b	358 <lista_inverte+0x38>
 354:	mov	r3, lr
 358:	ldr	ip, [r3, #8]
 35c:	ldr	lr, [r3, #4]
 360:	add	r1, r1, #1
 364:	str	lr, [ip, #4]
 368:	ldr	lr, [r3, #4]
 36c:	cmp	r1, r4
 370:	str	ip, [lr, #8]
 374:	str	r2, [r3, #4]
 378:	str	r3, [r2, #8]
 37c:	mov	r2, r3
 380:	bne	354 <lista_inverte+0x34>
 384:	ldr	r2, [r5, #4]
 388:	mov	r1, #0
 38c:	mov	r0, r1
 390:	ldr	ip, [r2, #8]
 394:	str	ip, [r5, #4]
 398:	str	r1, [ip, #4]
 39c:	str	r1, [r2, #8]
 3a0:	str	r3, [r2, #4]
 3a4:	str	r2, [r3, #8]
 3a8:	str	r2, [r5]
 3ac:	pop	{r4, r5, pc}
 3b0:	mov	r0, #0
 3b4:	pop	{r4, r5, pc}
 3b8:	mov	r3, r2
 3bc:	b	384 <lista_inverte+0x64>
 3c0:	mvn	r0, #0
 3c4:	pop	{r4, r5, pc}
