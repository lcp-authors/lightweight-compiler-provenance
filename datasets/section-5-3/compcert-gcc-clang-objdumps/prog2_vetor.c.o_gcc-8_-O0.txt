
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/vetor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <vetor_novo>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #8
  10:	mov	r0, #12
  14:	bl	0 <malloc>
  18:	mov	r3, r0
  1c:	str	r3, [fp, #-8]
  20:	ldr	r3, [fp, #-8]
  24:	cmp	r3, #0
  28:	bne	34 <vetor_novo+0x34>
  2c:	mov	r3, #0
  30:	b	5c <vetor_novo+0x5c>
  34:	ldr	r3, [fp, #-8]
  38:	mov	r2, #0
  3c:	str	r2, [r3]
  40:	ldr	r3, [fp, #-8]
  44:	mov	r2, #0
  48:	str	r2, [r3, #4]
  4c:	ldr	r3, [fp, #-8]
  50:	mov	r2, #0
  54:	str	r2, [r3, #8]
  58:	ldr	r3, [fp, #-8]
  5c:	mov	r0, r3
  60:	sub	sp, fp, #4
  64:	ldr	fp, [sp]
  68:	add	sp, sp, #4
  6c:	pop	{pc}		; (ldr pc, [sp], #4)

00000070 <vetor_apaga>:
  70:	str	fp, [sp, #-8]!
  74:	str	lr, [sp, #4]
  78:	add	fp, sp, #4
  7c:	sub	sp, sp, #8
  80:	str	r0, [fp, #-8]
  84:	ldr	r3, [fp, #-8]
  88:	cmp	r3, #0
  8c:	beq	ac <vetor_apaga+0x3c>
  90:	ldr	r3, [fp, #-8]
  94:	ldr	r3, [r3, #8]
  98:	mov	r0, r3
  9c:	bl	0 <free>
  a0:	ldr	r0, [fp, #-8]
  a4:	bl	0 <free>
  a8:	b	b0 <vetor_apaga+0x40>
  ac:	nop	{0}
  b0:	sub	sp, fp, #4
  b4:	ldr	fp, [sp]
  b8:	add	sp, sp, #4
  bc:	pop	{pc}		; (ldr pc, [sp], #4)

000000c0 <vetor_atribui>:
  c0:	push	{fp}		; (str fp, [sp, #-4]!)
  c4:	add	fp, sp, #0
  c8:	sub	sp, sp, #20
  cc:	str	r0, [fp, #-8]
  d0:	str	r1, [fp, #-12]
  d4:	str	r2, [fp, #-16]
  d8:	ldr	r3, [fp, #-8]
  dc:	cmp	r3, #0
  e0:	beq	104 <vetor_atribui+0x44>
  e4:	ldr	r3, [fp, #-12]
  e8:	cmp	r3, #0
  ec:	blt	104 <vetor_atribui+0x44>
  f0:	ldr	r3, [fp, #-8]
  f4:	ldr	r3, [r3]
  f8:	ldr	r2, [fp, #-12]
  fc:	cmp	r2, r3
 100:	blt	10c <vetor_atribui+0x4c>
 104:	mvn	r3, #0
 108:	b	12c <vetor_atribui+0x6c>
 10c:	ldr	r3, [fp, #-8]
 110:	ldr	r2, [r3, #8]
 114:	ldr	r3, [fp, #-12]
 118:	lsl	r3, r3, #2
 11c:	add	r3, r2, r3
 120:	ldr	r2, [fp, #-16]
 124:	str	r2, [r3]
 128:	ldr	r3, [fp, #-12]
 12c:	mov	r0, r3
 130:	add	sp, fp, #0
 134:	pop	{fp}		; (ldr fp, [sp], #4)
 138:	bx	lr

0000013c <vetor_tamanho>:
 13c:	push	{fp}		; (str fp, [sp, #-4]!)
 140:	add	fp, sp, #0
 144:	sub	sp, sp, #12
 148:	str	r0, [fp, #-8]
 14c:	ldr	r3, [fp, #-8]
 150:	cmp	r3, #0
 154:	bne	160 <vetor_tamanho+0x24>
 158:	mvn	r3, #0
 15c:	b	168 <vetor_tamanho+0x2c>
 160:	ldr	r3, [fp, #-8]
 164:	ldr	r3, [r3]
 168:	mov	r0, r3
 16c:	add	sp, fp, #0
 170:	pop	{fp}		; (ldr fp, [sp], #4)
 174:	bx	lr

00000178 <vetor_elemento>:
 178:	push	{fp}		; (str fp, [sp, #-4]!)
 17c:	add	fp, sp, #0
 180:	sub	sp, sp, #12
 184:	str	r0, [fp, #-8]
 188:	str	r1, [fp, #-12]
 18c:	ldr	r3, [fp, #-8]
 190:	cmp	r3, #0
 194:	beq	1b8 <vetor_elemento+0x40>
 198:	ldr	r3, [fp, #-12]
 19c:	cmp	r3, #0
 1a0:	blt	1b8 <vetor_elemento+0x40>
 1a4:	ldr	r3, [fp, #-8]
 1a8:	ldr	r3, [r3]
 1ac:	ldr	r2, [fp, #-12]
 1b0:	cmp	r2, r3
 1b4:	blt	1c0 <vetor_elemento+0x48>
 1b8:	mov	r3, #-2147483648	; 0x80000000
 1bc:	b	1d8 <vetor_elemento+0x60>
 1c0:	ldr	r3, [fp, #-8]
 1c4:	ldr	r2, [r3, #8]
 1c8:	ldr	r3, [fp, #-12]
 1cc:	lsl	r3, r3, #2
 1d0:	add	r3, r2, r3
 1d4:	ldr	r3, [r3]
 1d8:	mov	r0, r3
 1dc:	add	sp, fp, #0
 1e0:	pop	{fp}		; (ldr fp, [sp], #4)
 1e4:	bx	lr

000001e8 <vetor_insere>:
 1e8:	str	fp, [sp, #-8]!
 1ec:	str	lr, [sp, #4]
 1f0:	add	fp, sp, #4
 1f4:	sub	sp, sp, #24
 1f8:	str	r0, [fp, #-16]
 1fc:	str	r1, [fp, #-20]	; 0xffffffec
 200:	str	r2, [fp, #-24]	; 0xffffffe8
 204:	ldr	r3, [fp, #-16]
 208:	cmp	r3, #0
 20c:	beq	230 <vetor_insere+0x48>
 210:	ldr	r3, [fp, #-24]	; 0xffffffe8
 214:	cmn	r3, #1
 218:	blt	230 <vetor_insere+0x48>
 21c:	ldr	r3, [fp, #-16]
 220:	ldr	r3, [r3]
 224:	ldr	r2, [fp, #-24]	; 0xffffffe8
 228:	cmp	r2, r3
 22c:	ble	238 <vetor_insere+0x50>
 230:	mvn	r3, #0
 234:	b	378 <vetor_insere+0x190>
 238:	ldr	r3, [fp, #-24]	; 0xffffffe8
 23c:	cmn	r3, #1
 240:	bne	250 <vetor_insere+0x68>
 244:	ldr	r3, [fp, #-16]
 248:	ldr	r3, [r3]
 24c:	str	r3, [fp, #-24]	; 0xffffffe8
 250:	ldr	r3, [fp, #-16]
 254:	ldr	r2, [r3]
 258:	ldr	r3, [fp, #-16]
 25c:	ldr	r3, [r3, #4]
 260:	cmp	r2, r3
 264:	bne	2e0 <vetor_insere+0xf8>
 268:	ldr	r3, [fp, #-16]
 26c:	ldr	r3, [r3, #4]
 270:	cmp	r3, #0
 274:	bne	288 <vetor_insere+0xa0>
 278:	ldr	r3, [fp, #-16]
 27c:	mov	r2, #1
 280:	str	r2, [r3, #4]
 284:	b	29c <vetor_insere+0xb4>
 288:	ldr	r3, [fp, #-16]
 28c:	ldr	r3, [r3, #4]
 290:	lsl	r2, r3, #1
 294:	ldr	r3, [fp, #-16]
 298:	str	r2, [r3, #4]
 29c:	ldr	r3, [fp, #-16]
 2a0:	ldr	r2, [r3, #8]
 2a4:	ldr	r3, [fp, #-16]
 2a8:	ldr	r3, [r3, #4]
 2ac:	lsl	r3, r3, #2
 2b0:	mov	r1, r3
 2b4:	mov	r0, r2
 2b8:	bl	0 <realloc>
 2bc:	mov	r2, r0
 2c0:	ldr	r3, [fp, #-16]
 2c4:	str	r2, [r3, #8]
 2c8:	ldr	r3, [fp, #-16]
 2cc:	ldr	r3, [r3, #8]
 2d0:	cmp	r3, #0
 2d4:	bne	2e0 <vetor_insere+0xf8>
 2d8:	mvn	r3, #0
 2dc:	b	378 <vetor_insere+0x190>
 2e0:	ldr	r3, [fp, #-16]
 2e4:	ldr	r3, [r3]
 2e8:	sub	r3, r3, #1
 2ec:	str	r3, [fp, #-8]
 2f0:	b	334 <vetor_insere+0x14c>
 2f4:	ldr	r3, [fp, #-16]
 2f8:	ldr	r2, [r3, #8]
 2fc:	ldr	r3, [fp, #-8]
 300:	lsl	r3, r3, #2
 304:	add	r2, r2, r3
 308:	ldr	r3, [fp, #-16]
 30c:	ldr	r1, [r3, #8]
 310:	ldr	r3, [fp, #-8]
 314:	add	r3, r3, #1
 318:	lsl	r3, r3, #2
 31c:	add	r3, r1, r3
 320:	ldr	r2, [r2]
 324:	str	r2, [r3]
 328:	ldr	r3, [fp, #-8]
 32c:	sub	r3, r3, #1
 330:	str	r3, [fp, #-8]
 334:	ldr	r2, [fp, #-8]
 338:	ldr	r3, [fp, #-24]	; 0xffffffe8
 33c:	cmp	r2, r3
 340:	bge	2f4 <vetor_insere+0x10c>
 344:	ldr	r3, [fp, #-16]
 348:	ldr	r2, [r3, #8]
 34c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 350:	lsl	r3, r3, #2
 354:	add	r3, r2, r3
 358:	ldr	r2, [fp, #-20]	; 0xffffffec
 35c:	str	r2, [r3]
 360:	ldr	r3, [fp, #-16]
 364:	ldr	r3, [r3]
 368:	add	r2, r3, #1
 36c:	ldr	r3, [fp, #-16]
 370:	str	r2, [r3]
 374:	ldr	r3, [fp, #-24]	; 0xffffffe8
 378:	mov	r0, r3
 37c:	sub	sp, fp, #4
 380:	ldr	fp, [sp]
 384:	add	sp, sp, #4
 388:	pop	{pc}		; (ldr pc, [sp], #4)

0000038c <vetor_remove>:
 38c:	push	{fp}		; (str fp, [sp, #-4]!)
 390:	add	fp, sp, #0
 394:	sub	sp, sp, #20
 398:	str	r0, [fp, #-16]
 39c:	str	r1, [fp, #-20]	; 0xffffffec
 3a0:	ldr	r3, [fp, #-16]
 3a4:	cmp	r3, #0
 3a8:	beq	3cc <vetor_remove+0x40>
 3ac:	ldr	r3, [fp, #-20]	; 0xffffffec
 3b0:	cmp	r3, #0
 3b4:	blt	3cc <vetor_remove+0x40>
 3b8:	ldr	r3, [fp, #-16]
 3bc:	ldr	r3, [r3]
 3c0:	ldr	r2, [fp, #-20]	; 0xffffffec
 3c4:	cmp	r2, r3
 3c8:	blt	3d4 <vetor_remove+0x48>
 3cc:	mvn	r3, #0
 3d0:	b	450 <vetor_remove+0xc4>
 3d4:	ldr	r3, [fp, #-20]	; 0xffffffec
 3d8:	add	r3, r3, #1
 3dc:	str	r3, [fp, #-8]
 3e0:	b	424 <vetor_remove+0x98>
 3e4:	ldr	r3, [fp, #-16]
 3e8:	ldr	r2, [r3, #8]
 3ec:	ldr	r3, [fp, #-8]
 3f0:	lsl	r3, r3, #2
 3f4:	add	r2, r2, r3
 3f8:	ldr	r3, [fp, #-16]
 3fc:	ldr	r1, [r3, #8]
 400:	ldr	r3, [fp, #-8]
 404:	sub	r3, r3, #-1073741823	; 0xc0000001
 408:	lsl	r3, r3, #2
 40c:	add	r3, r1, r3
 410:	ldr	r2, [r2]
 414:	str	r2, [r3]
 418:	ldr	r3, [fp, #-8]
 41c:	add	r3, r3, #1
 420:	str	r3, [fp, #-8]
 424:	ldr	r3, [fp, #-16]
 428:	ldr	r3, [r3]
 42c:	ldr	r2, [fp, #-8]
 430:	cmp	r2, r3
 434:	blt	3e4 <vetor_remove+0x58>
 438:	ldr	r3, [fp, #-16]
 43c:	ldr	r3, [r3]
 440:	sub	r2, r3, #1
 444:	ldr	r3, [fp, #-16]
 448:	str	r2, [r3]
 44c:	mov	r3, #0
 450:	mov	r0, r3
 454:	add	sp, fp, #0
 458:	pop	{fp}		; (ldr fp, [sp], #4)
 45c:	bx	lr

00000460 <vetor_pesquisa>:
 460:	push	{fp}		; (str fp, [sp, #-4]!)
 464:	add	fp, sp, #0
 468:	sub	sp, sp, #20
 46c:	str	r0, [fp, #-16]
 470:	str	r1, [fp, #-20]	; 0xffffffec
 474:	ldr	r3, [fp, #-16]
 478:	cmp	r3, #0
 47c:	bne	488 <vetor_pesquisa+0x28>
 480:	mvn	r3, #0
 484:	b	4e4 <vetor_pesquisa+0x84>
 488:	mov	r3, #0
 48c:	str	r3, [fp, #-8]
 490:	b	4cc <vetor_pesquisa+0x6c>
 494:	ldr	r3, [fp, #-16]
 498:	ldr	r2, [r3, #8]
 49c:	ldr	r3, [fp, #-8]
 4a0:	lsl	r3, r3, #2
 4a4:	add	r3, r2, r3
 4a8:	ldr	r3, [r3]
 4ac:	ldr	r2, [fp, #-20]	; 0xffffffec
 4b0:	cmp	r2, r3
 4b4:	bne	4c0 <vetor_pesquisa+0x60>
 4b8:	ldr	r3, [fp, #-8]
 4bc:	b	4e4 <vetor_pesquisa+0x84>
 4c0:	ldr	r3, [fp, #-8]
 4c4:	add	r3, r3, #1
 4c8:	str	r3, [fp, #-8]
 4cc:	ldr	r3, [fp, #-16]
 4d0:	ldr	r3, [r3]
 4d4:	ldr	r2, [fp, #-8]
 4d8:	cmp	r2, r3
 4dc:	blt	494 <vetor_pesquisa+0x34>
 4e0:	mvn	r3, #0
 4e4:	mov	r0, r3
 4e8:	add	sp, fp, #0
 4ec:	pop	{fp}		; (ldr fp, [sp], #4)
 4f0:	bx	lr

000004f4 <vetor_ordena>:
 4f4:	push	{fp}		; (str fp, [sp, #-4]!)
 4f8:	add	fp, sp, #0
 4fc:	sub	sp, sp, #28
 500:	str	r0, [fp, #-24]	; 0xffffffe8
 504:	ldr	r3, [fp, #-24]	; 0xffffffe8
 508:	cmp	r3, #0
 50c:	bne	518 <vetor_ordena+0x24>
 510:	mvn	r3, #0
 514:	b	600 <vetor_ordena+0x10c>
 518:	mov	r3, #1
 51c:	str	r3, [fp, #-8]
 520:	b	5e8 <vetor_ordena+0xf4>
 524:	ldr	r3, [fp, #-24]	; 0xffffffe8
 528:	ldr	r2, [r3, #8]
 52c:	ldr	r3, [fp, #-8]
 530:	lsl	r3, r3, #2
 534:	add	r3, r2, r3
 538:	ldr	r3, [r3]
 53c:	str	r3, [fp, #-16]
 540:	ldr	r3, [fp, #-8]
 544:	str	r3, [fp, #-12]
 548:	b	58c <vetor_ordena+0x98>
 54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 550:	ldr	r2, [r3, #8]
 554:	ldr	r3, [fp, #-12]
 558:	sub	r3, r3, #-1073741823	; 0xc0000001
 55c:	lsl	r3, r3, #2
 560:	add	r2, r2, r3
 564:	ldr	r3, [fp, #-24]	; 0xffffffe8
 568:	ldr	r1, [r3, #8]
 56c:	ldr	r3, [fp, #-12]
 570:	lsl	r3, r3, #2
 574:	add	r3, r1, r3
 578:	ldr	r2, [r2]
 57c:	str	r2, [r3]
 580:	ldr	r3, [fp, #-12]
 584:	sub	r3, r3, #1
 588:	str	r3, [fp, #-12]
 58c:	ldr	r3, [fp, #-12]
 590:	cmp	r3, #0
 594:	ble	5c0 <vetor_ordena+0xcc>
 598:	ldr	r3, [fp, #-24]	; 0xffffffe8
 59c:	ldr	r2, [r3, #8]
 5a0:	ldr	r3, [fp, #-12]
 5a4:	sub	r3, r3, #-1073741823	; 0xc0000001
 5a8:	lsl	r3, r3, #2
 5ac:	add	r3, r2, r3
 5b0:	ldr	r3, [r3]
 5b4:	ldr	r2, [fp, #-16]
 5b8:	cmp	r2, r3
 5bc:	blt	54c <vetor_ordena+0x58>
 5c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5c4:	ldr	r2, [r3, #8]
 5c8:	ldr	r3, [fp, #-12]
 5cc:	lsl	r3, r3, #2
 5d0:	add	r3, r2, r3
 5d4:	ldr	r2, [fp, #-16]
 5d8:	str	r2, [r3]
 5dc:	ldr	r3, [fp, #-8]
 5e0:	add	r3, r3, #1
 5e4:	str	r3, [fp, #-8]
 5e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5ec:	ldr	r3, [r3]
 5f0:	ldr	r2, [fp, #-8]
 5f4:	cmp	r2, r3
 5f8:	blt	524 <vetor_ordena+0x30>
 5fc:	mov	r3, #0
 600:	mov	r0, r3
 604:	add	sp, fp, #0
 608:	pop	{fp}		; (ldr fp, [sp], #4)
 60c:	bx	lr
