
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_parser.dir/test_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <verify_parse>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-4]
      10:	ldr	r0, [fp, #-4]
      14:	movw	r1, #0
      18:	movt	r1, #0
      1c:	bl	264 <MyGame_Example_Monster_as_root_with_identifier>
      20:	str	r0, [sp]
      24:	ldr	r0, [sp]
      28:	bl	2d4 <MyGame_Example_Monster_pos>
      2c:	str	r0, [sp, #4]
      30:	ldr	r0, [sp, #4]
      34:	movw	r1, #0
      38:	cmp	r0, r1
      3c:	bne	60 <verify_parse+0x60>
      40:	movw	r0, #0
      44:	movt	r0, #0
      48:	movw	r1, #0
      4c:	movt	r1, #0
      50:	movw	r2, #45	; 0x2d
      54:	movw	r3, #0
      58:	movt	r3, #0
      5c:	bl	0 <__assert_fail>
      60:	b	64 <verify_parse+0x64>
      64:	b	68 <verify_parse+0x68>
      68:	ldr	r0, [sp, #4]
      6c:	bl	3ac <MyGame_Example_Vec3_x>
      70:	vmov.f32	s2, #112	; 0x3f800000  1.0
      74:	vcmp.f32	s0, s2
      78:	vmrs	APSR_nzcv, fpscr
      7c:	beq	a0 <verify_parse+0xa0>
      80:	movw	r0, #0
      84:	movt	r0, #0
      88:	movw	r1, #0
      8c:	movt	r1, #0
      90:	movw	r2, #46	; 0x2e
      94:	movw	r3, #0
      98:	movt	r3, #0
      9c:	bl	0 <__assert_fail>
      a0:	b	a4 <verify_parse+0xa4>
      a4:	b	a8 <verify_parse+0xa8>
      a8:	ldr	r0, [sp, #4]
      ac:	bl	3f8 <MyGame_Example_Vec3_y>
      b0:	vmov.f32	s2, #0	; 0x40000000  2.0
      b4:	vcmp.f32	s0, s2
      b8:	vmrs	APSR_nzcv, fpscr
      bc:	beq	e0 <verify_parse+0xe0>
      c0:	movw	r0, #0
      c4:	movt	r0, #0
      c8:	movw	r1, #0
      cc:	movt	r1, #0
      d0:	movw	r2, #47	; 0x2f
      d4:	movw	r3, #0
      d8:	movt	r3, #0
      dc:	bl	0 <__assert_fail>
      e0:	b	e4 <verify_parse+0xe4>
      e4:	b	e8 <verify_parse+0xe8>
      e8:	ldr	r0, [sp, #4]
      ec:	bl	448 <MyGame_Example_Vec3_z>
      f0:	vmov.f32	s2, #8	; 0x40400000  3.0
      f4:	vcmp.f32	s0, s2
      f8:	vmrs	APSR_nzcv, fpscr
      fc:	beq	120 <verify_parse+0x120>
     100:	movw	r0, #0
     104:	movt	r0, #0
     108:	movw	r1, #0
     10c:	movt	r1, #0
     110:	movw	r2, #48	; 0x30
     114:	movw	r3, #0
     118:	movt	r3, #0
     11c:	bl	0 <__assert_fail>
     120:	b	124 <verify_parse+0x124>
     124:	b	128 <verify_parse+0x128>
     128:	ldr	r0, [sp, #4]
     12c:	bl	498 <MyGame_Example_Vec3_test1>
     130:	vmov.f64	d16, #8	; 0x40400000  3.0
     134:	vcmp.f64	d0, d16
     138:	vmrs	APSR_nzcv, fpscr
     13c:	beq	160 <verify_parse+0x160>
     140:	movw	r0, #0
     144:	movt	r0, #0
     148:	movw	r1, #0
     14c:	movt	r1, #0
     150:	movw	r2, #49	; 0x31
     154:	movw	r3, #0
     158:	movt	r3, #0
     15c:	bl	0 <__assert_fail>
     160:	b	164 <verify_parse+0x164>
     164:	b	168 <verify_parse+0x168>
     168:	ldr	r0, [sp, #4]
     16c:	bl	4f0 <MyGame_Example_Vec3_test2>
     170:	sxtb	r0, r0
     174:	cmp	r0, #2
     178:	beq	19c <verify_parse+0x19c>
     17c:	movw	r0, #0
     180:	movt	r0, #0
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	movw	r2, #50	; 0x32
     190:	movw	r3, #0
     194:	movt	r3, #0
     198:	bl	0 <__assert_fail>
     19c:	b	1a0 <verify_parse+0x1a0>
     1a0:	ldr	r0, [sp, #4]
     1a4:	bl	544 <MyGame_Example_Vec3_test3>
     1a8:	str	r0, [sp, #8]
     1ac:	ldr	r0, [sp, #8]
     1b0:	movw	r1, #0
     1b4:	cmp	r0, r1
     1b8:	bne	1dc <verify_parse+0x1dc>
     1bc:	movw	r0, #0
     1c0:	movt	r0, #0
     1c4:	movw	r1, #0
     1c8:	movt	r1, #0
     1cc:	movw	r2, #52	; 0x34
     1d0:	movw	r3, #0
     1d4:	movt	r3, #0
     1d8:	bl	0 <__assert_fail>
     1dc:	b	1e0 <verify_parse+0x1e0>
     1e0:	b	1e4 <verify_parse+0x1e4>
     1e4:	ldr	r0, [sp, #8]
     1e8:	bl	584 <MyGame_Example_Test_a>
     1ec:	sxth	r0, r0
     1f0:	cmp	r0, #5
     1f4:	beq	218 <verify_parse+0x218>
     1f8:	movw	r0, #0
     1fc:	movt	r0, #0
     200:	movw	r1, #0
     204:	movt	r1, #0
     208:	movw	r2, #53	; 0x35
     20c:	movw	r3, #0
     210:	movt	r3, #0
     214:	bl	0 <__assert_fail>
     218:	b	21c <verify_parse+0x21c>
     21c:	b	220 <verify_parse+0x220>
     220:	ldr	r0, [sp, #8]
     224:	bl	5d4 <MyGame_Example_Test_b>
     228:	sxtb	r0, r0
     22c:	cmp	r0, #6
     230:	beq	254 <verify_parse+0x254>
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	movw	r1, #0
     240:	movt	r1, #0
     244:	movw	r2, #54	; 0x36
     248:	movw	r3, #0
     24c:	movt	r3, #0
     250:	bl	0 <__assert_fail>
     254:	b	258 <verify_parse+0x258>
     258:	movw	r0, #0
     25c:	mov	sp, fp
     260:	pop	{fp, pc}

00000264 <MyGame_Example_Monster_as_root_with_identifier>:
     264:	push	{fp, lr}
     268:	mov	fp, sp
     26c:	sub	sp, sp, #16
     270:	str	r0, [fp, #-4]
     274:	str	r1, [sp, #8]
     278:	ldr	r0, [fp, #-4]
     27c:	movw	r1, #0
     280:	cmp	r0, r1
     284:	beq	29c <MyGame_Example_Monster_as_root_with_identifier+0x38>
     288:	ldr	r0, [fp, #-4]
     28c:	ldr	r1, [sp, #8]
     290:	bl	f14 <flatbuffers_has_identifier>
     294:	cmp	r0, #0
     298:	bne	2a8 <MyGame_Example_Monster_as_root_with_identifier+0x44>
     29c:	movw	r0, #0
     2a0:	str	r0, [sp, #4]
     2a4:	b	2c8 <MyGame_Example_Monster_as_root_with_identifier+0x64>
     2a8:	ldr	r0, [fp, #-4]
     2ac:	ldr	r1, [fp, #-4]
     2b0:	str	r0, [sp]
     2b4:	mov	r0, r1
     2b8:	bl	fc0 <__flatbuffers_uoffset_read_from_pe>
     2bc:	ldr	r1, [sp]
     2c0:	add	r0, r1, r0
     2c4:	str	r0, [sp, #4]
     2c8:	ldr	r0, [sp, #4]
     2cc:	mov	sp, fp
     2d0:	pop	{fp, pc}

000002d4 <MyGame_Example_Monster_pos>:
     2d4:	push	{fp, lr}
     2d8:	mov	fp, sp
     2dc:	sub	sp, sp, #24
     2e0:	str	r0, [fp, #-8]
     2e4:	movw	r0, #0
     2e8:	strh	r0, [fp, #-10]
     2ec:	ldr	r0, [fp, #-8]
     2f0:	movw	r1, #0
     2f4:	cmp	r0, r1
     2f8:	beq	304 <MyGame_Example_Monster_pos+0x30>
     2fc:	b	300 <MyGame_Example_Monster_pos+0x2c>
     300:	b	324 <MyGame_Example_Monster_pos+0x50>
     304:	movw	r0, #0
     308:	movt	r0, #0
     30c:	movw	r1, #0
     310:	movt	r1, #0
     314:	movw	r2, #696	; 0x2b8
     318:	movw	r3, #0
     31c:	movt	r3, #0
     320:	bl	0 <__assert_fail>
     324:	mov	r0, #0
     328:	strh	r0, [sp, #12]
     32c:	ldr	r0, [fp, #-8]
     330:	str	r0, [sp, #4]
     334:	bl	1044 <__flatbuffers_soffset_read_from_pe>
     338:	ldr	r1, [sp, #4]
     33c:	sub	r0, r1, r0
     340:	str	r0, [sp, #8]
     344:	ldr	r0, [sp, #8]
     348:	bl	1068 <__flatbuffers_voffset_read_from_pe>
     34c:	ldrh	r1, [sp, #12]
     350:	add	r1, r1, #3
     354:	lsl	r1, r1, #1
     358:	cmp	r0, r1
     35c:	bcc	378 <MyGame_Example_Monster_pos+0xa4>
     360:	ldr	r0, [sp, #8]
     364:	ldrh	r1, [sp, #12]
     368:	add	r0, r0, r1, lsl #1
     36c:	add	r0, r0, #4
     370:	bl	1068 <__flatbuffers_voffset_read_from_pe>
     374:	strh	r0, [fp, #-10]
     378:	ldrsh	r0, [fp, #-10]
     37c:	cmp	r0, #0
     380:	beq	398 <MyGame_Example_Monster_pos+0xc4>
     384:	ldr	r0, [fp, #-8]
     388:	ldrh	r1, [fp, #-10]
     38c:	add	r0, r0, r1
     390:	str	r0, [fp, #-4]
     394:	b	3a0 <MyGame_Example_Monster_pos+0xcc>
     398:	movw	r0, #0
     39c:	str	r0, [fp, #-4]
     3a0:	ldr	r0, [fp, #-4]
     3a4:	mov	sp, fp
     3a8:	pop	{fp, pc}

000003ac <MyGame_Example_Vec3_x>:
     3ac:	push	{fp, lr}
     3b0:	mov	fp, sp
     3b4:	sub	sp, sp, #8
     3b8:	str	r0, [sp, #4]
     3bc:	ldr	r0, [sp, #4]
     3c0:	movw	r1, #0
     3c4:	cmp	r0, r1
     3c8:	beq	3dc <MyGame_Example_Vec3_x+0x30>
     3cc:	ldr	r0, [sp, #4]
     3d0:	bl	10b8 <flatbuffers_float_read_from_pe>
     3d4:	vstr	s0, [sp]
     3d8:	b	3e8 <MyGame_Example_Vec3_x+0x3c>
     3dc:	vldr	s0, [pc, #16]	; 3f4 <MyGame_Example_Vec3_x+0x48>
     3e0:	vstr	s0, [sp]
     3e4:	b	3e8 <MyGame_Example_Vec3_x+0x3c>
     3e8:	vldr	s0, [sp]
     3ec:	mov	sp, fp
     3f0:	pop	{fp, pc}
     3f4:	.word	0x00000000

000003f8 <MyGame_Example_Vec3_y>:
     3f8:	push	{fp, lr}
     3fc:	mov	fp, sp
     400:	sub	sp, sp, #8
     404:	str	r0, [sp, #4]
     408:	ldr	r0, [sp, #4]
     40c:	movw	r1, #0
     410:	cmp	r0, r1
     414:	beq	42c <MyGame_Example_Vec3_y+0x34>
     418:	ldr	r0, [sp, #4]
     41c:	add	r0, r0, #4
     420:	bl	10b8 <flatbuffers_float_read_from_pe>
     424:	vstr	s0, [sp]
     428:	b	438 <MyGame_Example_Vec3_y+0x40>
     42c:	vldr	s0, [pc, #16]	; 444 <MyGame_Example_Vec3_y+0x4c>
     430:	vstr	s0, [sp]
     434:	b	438 <MyGame_Example_Vec3_y+0x40>
     438:	vldr	s0, [sp]
     43c:	mov	sp, fp
     440:	pop	{fp, pc}
     444:	.word	0x00000000

00000448 <MyGame_Example_Vec3_z>:
     448:	push	{fp, lr}
     44c:	mov	fp, sp
     450:	sub	sp, sp, #8
     454:	str	r0, [sp, #4]
     458:	ldr	r0, [sp, #4]
     45c:	movw	r1, #0
     460:	cmp	r0, r1
     464:	beq	47c <MyGame_Example_Vec3_z+0x34>
     468:	ldr	r0, [sp, #4]
     46c:	add	r0, r0, #8
     470:	bl	10b8 <flatbuffers_float_read_from_pe>
     474:	vstr	s0, [sp]
     478:	b	488 <MyGame_Example_Vec3_z+0x40>
     47c:	vldr	s0, [pc, #16]	; 494 <MyGame_Example_Vec3_z+0x4c>
     480:	vstr	s0, [sp]
     484:	b	488 <MyGame_Example_Vec3_z+0x40>
     488:	vldr	s0, [sp]
     48c:	mov	sp, fp
     490:	pop	{fp, pc}
     494:	.word	0x00000000

00000498 <MyGame_Example_Vec3_test1>:
     498:	push	{fp, lr}
     49c:	mov	fp, sp
     4a0:	sub	sp, sp, #16
     4a4:	str	r0, [fp, #-4]
     4a8:	ldr	r0, [fp, #-4]
     4ac:	movw	r1, #0
     4b0:	cmp	r0, r1
     4b4:	beq	4cc <MyGame_Example_Vec3_test1+0x34>
     4b8:	ldr	r0, [fp, #-4]
     4bc:	add	r0, r0, #16
     4c0:	bl	1100 <flatbuffers_double_read_from_pe>
     4c4:	vstr	d0, [sp]
     4c8:	b	4d8 <MyGame_Example_Vec3_test1+0x40>
     4cc:	vldr	d16, [pc, #20]	; 4e8 <MyGame_Example_Vec3_test1+0x50>
     4d0:	vstr	d16, [sp]
     4d4:	b	4d8 <MyGame_Example_Vec3_test1+0x40>
     4d8:	vldr	d16, [sp]
     4dc:	vmov.f64	d0, d16
     4e0:	mov	sp, fp
     4e4:	pop	{fp, pc}
	...

000004f0 <MyGame_Example_Vec3_test2>:
     4f0:	push	{fp, lr}
     4f4:	mov	fp, sp
     4f8:	sub	sp, sp, #8
     4fc:	str	r0, [sp, #4]
     500:	ldr	r0, [sp, #4]
     504:	movw	r1, #0
     508:	cmp	r0, r1
     50c:	beq	528 <MyGame_Example_Vec3_test2+0x38>
     510:	ldr	r0, [sp, #4]
     514:	add	r0, r0, #24
     518:	bl	1140 <MyGame_Example_Color_read_from_pe>
     51c:	sxtb	r0, r0
     520:	str	r0, [sp]
     524:	b	534 <MyGame_Example_Vec3_test2+0x44>
     528:	movw	r0, #0
     52c:	str	r0, [sp]
     530:	b	534 <MyGame_Example_Vec3_test2+0x44>
     534:	ldr	r0, [sp]
     538:	sxtb	r0, r0
     53c:	mov	sp, fp
     540:	pop	{fp, pc}

00000544 <MyGame_Example_Vec3_test3>:
     544:	sub	sp, sp, #8
     548:	str	r0, [sp, #4]
     54c:	ldr	r0, [sp, #4]
     550:	movw	r1, #0
     554:	cmp	r0, r1
     558:	beq	56c <MyGame_Example_Vec3_test3+0x28>
     55c:	ldr	r0, [sp, #4]
     560:	add	r0, r0, #26
     564:	str	r0, [sp]
     568:	b	578 <MyGame_Example_Vec3_test3+0x34>
     56c:	movw	r0, #0
     570:	str	r0, [sp]
     574:	b	578 <MyGame_Example_Vec3_test3+0x34>
     578:	ldr	r0, [sp]
     57c:	add	sp, sp, #8
     580:	bx	lr

00000584 <MyGame_Example_Test_a>:
     584:	push	{fp, lr}
     588:	mov	fp, sp
     58c:	sub	sp, sp, #8
     590:	str	r0, [sp, #4]
     594:	ldr	r0, [sp, #4]
     598:	movw	r1, #0
     59c:	cmp	r0, r1
     5a0:	beq	5b8 <MyGame_Example_Test_a+0x34>
     5a4:	ldr	r0, [sp, #4]
     5a8:	bl	117c <flatbuffers_int16_read_from_pe>
     5ac:	sxth	r0, r0
     5b0:	str	r0, [sp]
     5b4:	b	5c4 <MyGame_Example_Test_a+0x40>
     5b8:	movw	r0, #0
     5bc:	str	r0, [sp]
     5c0:	b	5c4 <MyGame_Example_Test_a+0x40>
     5c4:	ldr	r0, [sp]
     5c8:	sxth	r0, r0
     5cc:	mov	sp, fp
     5d0:	pop	{fp, pc}

000005d4 <MyGame_Example_Test_b>:
     5d4:	push	{fp, lr}
     5d8:	mov	fp, sp
     5dc:	sub	sp, sp, #8
     5e0:	str	r0, [sp, #4]
     5e4:	ldr	r0, [sp, #4]
     5e8:	movw	r1, #0
     5ec:	cmp	r0, r1
     5f0:	beq	60c <MyGame_Example_Test_b+0x38>
     5f4:	ldr	r0, [sp, #4]
     5f8:	add	r0, r0, #2
     5fc:	bl	11b8 <flatbuffers_int8_read_from_pe>
     600:	sxtb	r0, r0
     604:	str	r0, [sp]
     608:	b	618 <MyGame_Example_Test_b+0x44>
     60c:	movw	r0, #0
     610:	str	r0, [sp]
     614:	b	618 <MyGame_Example_Test_b+0x44>
     618:	ldr	r0, [sp]
     61c:	sxtb	r0, r0
     620:	mov	sp, fp
     624:	pop	{fp, pc}

00000628 <test_parse>:
     628:	push	{r4, r5, fp, lr}
     62c:	add	fp, sp, #8
     630:	sub	sp, sp, #360	; 0x168
     634:	movw	r0, #0
     638:	str	r0, [fp, #-20]	; 0xffffffec
     63c:	add	r1, sp, #64	; 0x40
     640:	str	r1, [sp, #60]	; 0x3c
     644:	mvn	r1, #0
     648:	str	r1, [sp, #56]	; 0x38
     64c:	str	r0, [sp, #52]	; 0x34
     650:	ldr	r0, [sp, #60]	; 0x3c
     654:	bl	0 <flatcc_builder_init>
     658:	movw	r1, #0
     65c:	movt	r1, #0
     660:	ldr	r1, [r1]
     664:	str	r0, [sp, #48]	; 0x30
     668:	mov	r0, r1
     66c:	movw	r1, #10240	; 0x2800
     670:	sub	r2, fp, #24
     674:	bl	884 <readfile>
     678:	str	r0, [fp, #-16]
     67c:	ldr	r0, [fp, #-16]
     680:	movw	r1, #0
     684:	cmp	r0, r1
     688:	bne	6bc <test_parse+0x94>
     68c:	movw	r0, #0
     690:	movt	r0, #0
     694:	ldr	r0, [r0]
     698:	movw	r1, #0
     69c:	movt	r1, #0
     6a0:	ldr	r2, [r1]
     6a4:	movw	r1, #0
     6a8:	movt	r1, #0
     6ac:	bl	0 <fprintf>
     6b0:	mvn	r1, #0
     6b4:	str	r1, [fp, #-12]
     6b8:	b	878 <test_parse+0x250>
     6bc:	ldr	r0, [sp, #60]	; 0x3c
     6c0:	ldr	r2, [fp, #-16]
     6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6c8:	ldr	r1, [sp, #52]	; 0x34
     6cc:	sub	ip, fp, #72	; 0x48
     6d0:	str	r1, [sp, #44]	; 0x2c
     6d4:	mov	r1, ip
     6d8:	ldr	ip, [sp, #44]	; 0x2c
     6dc:	str	ip, [sp]
     6e0:	bl	a68 <monster_test_parse_json>
     6e4:	cmp	r0, #0
     6e8:	beq	6f0 <test_parse+0xc8>
     6ec:	b	7fc <test_parse+0x1d4>
     6f0:	movw	r0, #0
     6f4:	movt	r0, #0
     6f8:	ldr	r0, [r0]
     6fc:	movw	r1, #0
     700:	movt	r1, #0
     704:	ldr	r2, [r1]
     708:	ldr	r3, [fp, #-56]	; 0xffffffc8
     70c:	movw	r1, #0
     710:	movt	r1, #0
     714:	bl	0 <fprintf>
     718:	ldr	r1, [sp, #60]	; 0x3c
     71c:	str	r0, [sp, #40]	; 0x28
     720:	mov	r0, r1
     724:	sub	r1, fp, #28
     728:	bl	0 <flatcc_builder_finalize_aligned_buffer>
     72c:	str	r0, [fp, #-20]	; 0xffffffec
     730:	ldr	r1, [fp, #-20]	; 0xffffffec
     734:	ldr	r2, [fp, #-28]	; 0xffffffe4
     738:	movw	r0, #0
     73c:	movt	r0, #0
     740:	ldr	r3, [r0]
     744:	movw	r0, #0
     748:	movt	r0, #0
     74c:	bl	b88 <hexdump>
     750:	movw	r0, #0
     754:	movt	r0, #0
     758:	ldr	r0, [r0]
     75c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     760:	ldr	r3, [fp, #-28]	; 0xffffffe4
     764:	movw	r1, #0
     768:	movt	r1, #0
     76c:	bl	0 <fprintf>
     770:	ldr	r1, [fp, #-20]	; 0xffffffec
     774:	str	r0, [sp, #36]	; 0x24
     778:	mov	r0, r1
     77c:	bl	0 <verify_parse>
     780:	ldr	r1, [fp, #-20]	; 0xffffffec
     784:	ldr	r2, [fp, #-28]	; 0xffffffe4
     788:	movw	r3, #0
     78c:	movt	r3, #0
     790:	ldr	r3, [r3]
     794:	movw	ip, #0
     798:	movt	ip, #0
     79c:	str	r0, [sp, #32]
     7a0:	mov	r0, ip
     7a4:	bl	d60 <cdump>
     7a8:	ldr	r0, [sp, #60]	; 0x3c
     7ac:	bl	0 <flatcc_builder_reset>
     7b0:	movw	r1, #0
     7b4:	str	r1, [sp, #56]	; 0x38
     7b8:	ldr	r0, [fp, #-20]	; 0xffffffec
     7bc:	movw	r1, #0
     7c0:	cmp	r0, r1
     7c4:	beq	7d0 <test_parse+0x1a8>
     7c8:	ldr	r0, [fp, #-20]	; 0xffffffec
     7cc:	bl	0 <flatcc_builder_aligned_free>
     7d0:	ldr	r0, [fp, #-16]
     7d4:	movw	r1, #0
     7d8:	cmp	r0, r1
     7dc:	beq	7e8 <test_parse+0x1c0>
     7e0:	ldr	r0, [fp, #-16]
     7e4:	bl	0 <free>
     7e8:	ldr	r0, [sp, #60]	; 0x3c
     7ec:	bl	0 <flatcc_builder_clear>
     7f0:	ldr	r0, [sp, #56]	; 0x38
     7f4:	str	r0, [fp, #-12]
     7f8:	b	878 <test_parse+0x250>
     7fc:	movw	r0, #0
     800:	movt	r0, #0
     804:	ldr	r0, [r0]
     808:	movw	r1, #0
     80c:	movt	r1, #0
     810:	ldr	r2, [r1]
     814:	ldr	r3, [fp, #-56]	; 0xffffffc8
     818:	ldr	r1, [fp, #-36]	; 0xffffffdc
     81c:	ldr	ip, [fp, #-68]	; 0xffffffbc
     820:	sub	r1, r1, ip
     824:	add	r1, r1, #1
     828:	ldr	ip, [fp, #-48]	; 0xffffffd0
     82c:	str	r0, [sp, #28]
     830:	mov	r0, ip
     834:	str	r2, [sp, #24]
     838:	str	r3, [sp, #20]
     83c:	str	r1, [sp, #16]
     840:	bl	0 <flatcc_json_parser_error_string>
     844:	ldr	r1, [sp, #28]
     848:	str	r0, [sp, #12]
     84c:	mov	r0, r1
     850:	movw	r1, #0
     854:	movt	r1, #0
     858:	ldr	r2, [sp, #24]
     85c:	ldr	r3, [sp, #20]
     860:	ldr	ip, [sp, #16]
     864:	str	ip, [sp]
     868:	ldr	lr, [sp, #12]
     86c:	str	lr, [sp, #4]
     870:	bl	0 <fprintf>
     874:	b	7b8 <test_parse+0x190>
     878:	ldr	r0, [fp, #-12]
     87c:	sub	sp, fp, #8
     880:	pop	{r4, r5, fp, pc}

00000884 <readfile>:
     884:	push	{fp, lr}
     888:	mov	fp, sp
     88c:	sub	sp, sp, #56	; 0x38
     890:	str	r0, [fp, #-8]
     894:	str	r1, [fp, #-12]
     898:	str	r2, [fp, #-16]
     89c:	ldr	r0, [fp, #-16]
     8a0:	movw	r1, #0
     8a4:	cmp	r0, r1
     8a8:	beq	8b8 <readfile+0x34>
     8ac:	ldr	r0, [fp, #-16]
     8b0:	str	r0, [sp, #12]
     8b4:	b	8c4 <readfile+0x40>
     8b8:	add	r0, sp, #20
     8bc:	str	r0, [sp, #12]
     8c0:	b	8c4 <readfile+0x40>
     8c4:	ldr	r0, [sp, #12]
     8c8:	str	r0, [fp, #-16]
     8cc:	ldr	r0, [fp, #-8]
     8d0:	movw	r1, #0
     8d4:	movt	r1, #0
     8d8:	bl	0 <fopen>
     8dc:	str	r0, [fp, #-20]	; 0xffffffec
     8e0:	movw	r0, #0
     8e4:	str	r0, [fp, #-24]	; 0xffffffe8
     8e8:	str	r0, [sp, #16]
     8ec:	ldr	r1, [fp, #-20]	; 0xffffffec
     8f0:	cmp	r1, r0
     8f4:	bne	8fc <readfile+0x78>
     8f8:	b	a18 <readfile+0x194>
     8fc:	ldr	r0, [fp, #-20]	; 0xffffffec
     900:	movw	r1, #0
     904:	movw	r2, #2
     908:	bl	0 <fseek>
     90c:	ldr	r1, [fp, #-20]	; 0xffffffec
     910:	str	r0, [sp, #8]
     914:	mov	r0, r1
     918:	bl	0 <ftell>
     91c:	str	r0, [fp, #-24]	; 0xffffffe8
     920:	ldr	r0, [fp, #-24]	; 0xffffffe8
     924:	ldr	r1, [fp, #-16]
     928:	str	r0, [r1]
     92c:	ldr	r0, [fp, #-12]
     930:	cmp	r0, #0
     934:	bls	94c <readfile+0xc8>
     938:	ldr	r0, [fp, #-24]	; 0xffffffe8
     93c:	ldr	r1, [fp, #-12]
     940:	cmp	r0, r1
     944:	bls	94c <readfile+0xc8>
     948:	b	a18 <readfile+0x194>
     94c:	ldr	r0, [fp, #-20]	; 0xffffffec
     950:	bl	0 <rewind>
     954:	ldr	r0, [fp, #-24]	; 0xffffffe8
     958:	cmp	r0, #0
     95c:	beq	96c <readfile+0xe8>
     960:	ldr	r0, [fp, #-24]	; 0xffffffe8
     964:	str	r0, [sp, #4]
     968:	b	978 <readfile+0xf4>
     96c:	movw	r0, #1
     970:	str	r0, [sp, #4]
     974:	b	978 <readfile+0xf4>
     978:	ldr	r0, [sp, #4]
     97c:	bl	0 <malloc>
     980:	str	r0, [sp, #16]
     984:	ldr	r0, [sp, #16]
     988:	movw	r1, #0
     98c:	cmp	r0, r1
     990:	bne	998 <readfile+0x114>
     994:	b	a18 <readfile+0x194>
     998:	movw	r0, #0
     99c:	str	r0, [sp, #28]
     9a0:	ldr	r0, [sp, #16]
     9a4:	ldr	r1, [sp, #28]
     9a8:	add	r0, r0, r1
     9ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9b0:	ldr	r2, [sp, #28]
     9b4:	sub	r2, r1, r2
     9b8:	ldr	r3, [fp, #-20]	; 0xffffffec
     9bc:	movw	r1, #1
     9c0:	bl	0 <fread>
     9c4:	str	r0, [sp, #24]
     9c8:	cmp	r0, #0
     9cc:	beq	9e4 <readfile+0x160>
     9d0:	ldr	r0, [sp, #24]
     9d4:	ldr	r1, [sp, #28]
     9d8:	add	r0, r1, r0
     9dc:	str	r0, [sp, #28]
     9e0:	b	9a0 <readfile+0x11c>
     9e4:	ldr	r0, [sp, #28]
     9e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9ec:	cmp	r0, r1
     9f0:	beq	9f8 <readfile+0x174>
     9f4:	b	a18 <readfile+0x194>
     9f8:	ldr	r0, [fp, #-20]	; 0xffffffec
     9fc:	bl	0 <fclose>
     a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a04:	ldr	r2, [fp, #-16]
     a08:	str	r1, [r2]
     a0c:	ldr	r1, [sp, #16]
     a10:	str	r1, [fp, #-4]
     a14:	b	a5c <readfile+0x1d8>
     a18:	ldr	r0, [fp, #-20]	; 0xffffffec
     a1c:	movw	r1, #0
     a20:	cmp	r0, r1
     a24:	beq	a30 <readfile+0x1ac>
     a28:	ldr	r0, [fp, #-20]	; 0xffffffec
     a2c:	bl	0 <fclose>
     a30:	ldr	r0, [sp, #16]
     a34:	movw	r1, #0
     a38:	cmp	r0, r1
     a3c:	beq	a48 <readfile+0x1c4>
     a40:	ldr	r0, [sp, #16]
     a44:	bl	0 <free>
     a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a4c:	ldr	r1, [fp, #-16]
     a50:	str	r0, [r1]
     a54:	movw	r0, #0
     a58:	str	r0, [fp, #-4]
     a5c:	ldr	r0, [fp, #-4]
     a60:	mov	sp, fp
     a64:	pop	{fp, pc}

00000a68 <monster_test_parse_json>:
     a68:	push	{fp, lr}
     a6c:	mov	fp, sp
     a70:	sub	sp, sp, #80	; 0x50
     a74:	ldr	ip, [fp, #8]
     a78:	str	r0, [fp, #-8]
     a7c:	str	r1, [fp, #-12]
     a80:	str	r2, [fp, #-16]
     a84:	str	r3, [fp, #-20]	; 0xffffffec
     a88:	ldr	r0, [fp, #-12]
     a8c:	movw	r1, #0
     a90:	cmp	r0, r1
     a94:	beq	aa4 <monster_test_parse_json+0x3c>
     a98:	ldr	r0, [fp, #-12]
     a9c:	str	r0, [sp, #8]
     aa0:	b	ab0 <monster_test_parse_json+0x48>
     aa4:	add	r0, sp, #16
     aa8:	str	r0, [sp, #8]
     aac:	b	ab0 <monster_test_parse_json+0x48>
     ab0:	ldr	r0, [sp, #8]
     ab4:	str	r0, [fp, #-12]
     ab8:	ldr	r0, [fp, #-12]
     abc:	ldr	r1, [fp, #-8]
     ac0:	ldr	r2, [fp, #-16]
     ac4:	ldr	r3, [fp, #-16]
     ac8:	ldr	ip, [fp, #-20]	; 0xffffffec
     acc:	add	r3, r3, ip
     ad0:	ldr	ip, [fp, #8]
     ad4:	str	ip, [sp]
     ad8:	bl	11f4 <flatcc_json_parser_init>
     adc:	ldr	r0, [fp, #-8]
     ae0:	movw	r1, #0
     ae4:	movt	r1, #0
     ae8:	movw	r2, #0
     aec:	uxth	r2, r2
     af0:	movw	r3, #0
     af4:	bl	0 <flatcc_builder_start_buffer>
     af8:	cmp	r0, #0
     afc:	beq	b0c <monster_test_parse_json+0xa4>
     b00:	mvn	r0, #0
     b04:	str	r0, [fp, #-4]
     b08:	b	b7c <monster_test_parse_json+0x114>
     b0c:	ldr	r0, [fp, #-12]
     b10:	ldr	r1, [fp, #-16]
     b14:	ldr	r2, [fp, #-16]
     b18:	ldr	r3, [fp, #-20]	; 0xffffffec
     b1c:	add	r2, r2, r3
     b20:	add	r3, sp, #12
     b24:	bl	1288 <MyGame_Example_Monster_parse_json_table>
     b28:	ldr	r1, [fp, #-12]
     b2c:	ldr	r1, [r1, #24]
     b30:	cmp	r1, #0
     b34:	beq	b48 <monster_test_parse_json+0xe0>
     b38:	ldr	r0, [fp, #-12]
     b3c:	ldr	r0, [r0, #24]
     b40:	str	r0, [fp, #-4]
     b44:	b	b7c <monster_test_parse_json+0x114>
     b48:	ldr	r0, [fp, #-8]
     b4c:	ldr	r1, [sp, #12]
     b50:	bl	0 <flatcc_builder_end_buffer>
     b54:	cmp	r0, #0
     b58:	bne	b68 <monster_test_parse_json+0x100>
     b5c:	mvn	r0, #0
     b60:	str	r0, [fp, #-4]
     b64:	b	b7c <monster_test_parse_json+0x114>
     b68:	ldr	r0, [fp, #-16]
     b6c:	ldr	r1, [fp, #-12]
     b70:	str	r0, [r1, #40]	; 0x28
     b74:	movw	r0, #0
     b78:	str	r0, [fp, #-4]
     b7c:	ldr	r0, [fp, #-4]
     b80:	mov	sp, fp
     b84:	pop	{fp, pc}

00000b88 <hexdump>:
     b88:	push	{fp, lr}
     b8c:	mov	fp, sp
     b90:	sub	sp, sp, #48	; 0x30
     b94:	str	r0, [fp, #-4]
     b98:	str	r1, [fp, #-8]
     b9c:	str	r2, [fp, #-12]
     ba0:	str	r3, [fp, #-16]
     ba4:	ldr	r0, [fp, #-8]
     ba8:	str	r0, [sp, #4]
     bac:	ldr	r0, [fp, #-4]
     bb0:	movw	r1, #0
     bb4:	cmp	r0, r1
     bb8:	beq	bd0 <hexdump+0x48>
     bbc:	ldr	r0, [fp, #-16]
     bc0:	ldr	r2, [fp, #-4]
     bc4:	movw	r1, #0
     bc8:	movt	r1, #0
     bcc:	bl	0 <fprintf>
     bd0:	movw	r0, #0
     bd4:	str	r0, [fp, #-20]	; 0xffffffec
     bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
     bdc:	ldr	r1, [fp, #-12]
     be0:	cmp	r0, r1
     be4:	bcs	d10 <hexdump+0x188>
     be8:	ldr	r0, [fp, #-20]	; 0xffffffec
     bec:	and	r0, r0, #15
     bf0:	cmp	r0, #0
     bf4:	bne	c30 <hexdump+0xa8>
     bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
     bfc:	cmp	r0, #0
     c00:	beq	c18 <hexdump+0x90>
     c04:	add	r2, sp, #11
     c08:	ldr	r0, [fp, #-16]
     c0c:	movw	r1, #0
     c10:	movt	r1, #0
     c14:	bl	0 <fprintf>
     c18:	ldr	r0, [fp, #-16]
     c1c:	ldr	r2, [fp, #-20]	; 0xffffffec
     c20:	movw	r1, #0
     c24:	movt	r1, #0
     c28:	bl	0 <fprintf>
     c2c:	b	c54 <hexdump+0xcc>
     c30:	ldr	r0, [fp, #-20]	; 0xffffffec
     c34:	and	r0, r0, #7
     c38:	cmp	r0, #0
     c3c:	bne	c50 <hexdump+0xc8>
     c40:	ldr	r0, [fp, #-16]
     c44:	movw	r1, #0
     c48:	movt	r1, #0
     c4c:	bl	0 <fprintf>
     c50:	b	c54 <hexdump+0xcc>
     c54:	ldr	r0, [fp, #-16]
     c58:	ldr	r1, [sp, #4]
     c5c:	ldr	r2, [fp, #-20]	; 0xffffffec
     c60:	add	r1, r1, r2
     c64:	ldrb	r2, [r1]
     c68:	movw	r1, #0
     c6c:	movt	r1, #0
     c70:	bl	0 <fprintf>
     c74:	ldr	r1, [sp, #4]
     c78:	ldr	r2, [fp, #-20]	; 0xffffffec
     c7c:	add	r1, r1, r2
     c80:	ldrb	r1, [r1]
     c84:	cmp	r1, #32
     c88:	blt	ca4 <hexdump+0x11c>
     c8c:	ldr	r0, [sp, #4]
     c90:	ldr	r1, [fp, #-20]	; 0xffffffec
     c94:	add	r0, r0, r1
     c98:	ldrb	r0, [r0]
     c9c:	cmp	r0, #126	; 0x7e
     ca0:	ble	cc0 <hexdump+0x138>
     ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ca8:	and	r0, r0, #15
     cac:	add	r1, sp, #11
     cb0:	add	r0, r1, r0
     cb4:	movw	r1, #46	; 0x2e
     cb8:	strb	r1, [r0]
     cbc:	b	ce4 <hexdump+0x15c>
     cc0:	ldr	r0, [sp, #4]
     cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
     cc8:	add	r0, r0, r1
     ccc:	ldrb	r0, [r0]
     cd0:	ldr	r1, [fp, #-20]	; 0xffffffec
     cd4:	and	r1, r1, #15
     cd8:	add	r2, sp, #11
     cdc:	add	r1, r2, r1
     ce0:	strb	r0, [r1]
     ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ce8:	and	r0, r0, #15
     cec:	add	r0, r0, #1
     cf0:	add	r1, sp, #11
     cf4:	add	r0, r1, r0
     cf8:	movw	r1, #0
     cfc:	strb	r1, [r0]
     d00:	ldr	r0, [fp, #-20]	; 0xffffffec
     d04:	add	r0, r0, #1
     d08:	str	r0, [fp, #-20]	; 0xffffffec
     d0c:	b	bd8 <hexdump+0x50>
     d10:	b	d14 <hexdump+0x18c>
     d14:	ldr	r0, [fp, #-20]	; 0xffffffec
     d18:	and	r0, r0, #15
     d1c:	cmp	r0, #0
     d20:	beq	d44 <hexdump+0x1bc>
     d24:	ldr	r0, [fp, #-16]
     d28:	movw	r1, #0
     d2c:	movt	r1, #0
     d30:	bl	0 <fprintf>
     d34:	ldr	r1, [fp, #-20]	; 0xffffffec
     d38:	add	r1, r1, #1
     d3c:	str	r1, [fp, #-20]	; 0xffffffec
     d40:	b	d14 <hexdump+0x18c>
     d44:	add	r2, sp, #11
     d48:	ldr	r0, [fp, #-16]
     d4c:	movw	r1, #0
     d50:	movt	r1, #0
     d54:	bl	0 <fprintf>
     d58:	mov	sp, fp
     d5c:	pop	{fp, pc}

00000d60 <cdump>:
     d60:	push	{fp, lr}
     d64:	mov	fp, sp
     d68:	sub	sp, sp, #48	; 0x30
     d6c:	str	r0, [fp, #-4]
     d70:	str	r1, [fp, #-8]
     d74:	str	r2, [fp, #-12]
     d78:	str	r3, [fp, #-16]
     d7c:	ldr	r0, [fp, #-8]
     d80:	str	r0, [sp, #4]
     d84:	ldr	r0, [fp, #-4]
     d88:	movw	r1, #0
     d8c:	cmp	r0, r1
     d90:	beq	da0 <cdump+0x40>
     d94:	ldr	r0, [fp, #-4]
     d98:	str	r0, [sp]
     d9c:	b	db0 <cdump+0x50>
     da0:	movw	r0, #0
     da4:	movt	r0, #0
     da8:	str	r0, [sp]
     dac:	b	db0 <cdump+0x50>
     db0:	ldr	r0, [sp]
     db4:	str	r0, [fp, #-4]
     db8:	ldr	r0, [fp, #-16]
     dbc:	ldr	r2, [fp, #-4]
     dc0:	movw	r1, #0
     dc4:	movt	r1, #0
     dc8:	bl	0 <fprintf>
     dcc:	movw	r1, #0
     dd0:	str	r1, [fp, #-20]	; 0xffffffec
     dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
     dd8:	ldr	r1, [fp, #-12]
     ddc:	cmp	r0, r1
     de0:	bcs	e5c <cdump+0xfc>
     de4:	ldr	r0, [fp, #-20]	; 0xffffffec
     de8:	and	r0, r0, #15
     dec:	cmp	r0, #0
     df0:	bne	e08 <cdump+0xa8>
     df4:	ldr	r0, [fp, #-16]
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	bl	0 <fprintf>
     e04:	b	e2c <cdump+0xcc>
     e08:	ldr	r0, [fp, #-20]	; 0xffffffec
     e0c:	and	r0, r0, #7
     e10:	cmp	r0, #0
     e14:	bne	e28 <cdump+0xc8>
     e18:	ldr	r0, [fp, #-16]
     e1c:	movw	r1, #0
     e20:	movt	r1, #0
     e24:	bl	0 <fprintf>
     e28:	b	e2c <cdump+0xcc>
     e2c:	ldr	r0, [fp, #-16]
     e30:	ldr	r1, [sp, #4]
     e34:	ldr	r2, [fp, #-20]	; 0xffffffec
     e38:	add	r1, r1, r2
     e3c:	ldrb	r2, [r1]
     e40:	movw	r1, #0
     e44:	movt	r1, #0
     e48:	bl	0 <fprintf>
     e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
     e50:	add	r0, r0, #1
     e54:	str	r0, [fp, #-20]	; 0xffffffec
     e58:	b	dd4 <cdump+0x74>
     e5c:	ldr	r0, [fp, #-16]
     e60:	movw	r1, #0
     e64:	movt	r1, #0
     e68:	bl	0 <fprintf>
     e6c:	mov	sp, fp
     e70:	pop	{fp, pc}

00000e74 <main>:
     e74:	push	{fp, lr}
     e78:	mov	fp, sp
     e7c:	sub	sp, sp, #16
     e80:	movw	r2, #0
     e84:	str	r2, [fp, #-4]
     e88:	str	r0, [sp, #8]
     e8c:	str	r1, [sp, #4]
     e90:	movw	r0, #0
     e94:	movt	r0, #0
     e98:	ldr	r0, [r0]
     e9c:	movw	r1, #0
     ea0:	movt	r1, #0
     ea4:	bl	0 <fprintf>
     ea8:	ldr	r1, [sp, #8]
     eac:	cmp	r1, #1
     eb0:	beq	ee8 <main+0x74>
     eb4:	ldr	r0, [sp, #8]
     eb8:	cmp	r0, #2
     ebc:	beq	ee8 <main+0x74>
     ec0:	movw	r0, #0
     ec4:	movt	r0, #0
     ec8:	ldr	r0, [r0]
     ecc:	movw	r1, #0
     ed0:	movt	r1, #0
     ed4:	bl	0 <fprintf>
     ed8:	movw	r1, #1
     edc:	str	r0, [sp]
     ee0:	mov	r0, r1
     ee4:	bl	0 <exit>
     ee8:	ldr	r0, [sp, #8]
     eec:	cmp	r0, #2
     ef0:	bne	f08 <main+0x94>
     ef4:	ldr	r0, [sp, #4]
     ef8:	ldr	r0, [r0, #4]
     efc:	movw	r1, #0
     f00:	movt	r1, #0
     f04:	str	r0, [r1]
     f08:	bl	628 <test_parse>
     f0c:	mov	sp, fp
     f10:	pop	{fp, pc}

00000f14 <flatbuffers_has_identifier>:
     f14:	push	{fp, lr}
     f18:	mov	fp, sp
     f1c:	sub	sp, sp, #32
     f20:	str	r0, [fp, #-8]
     f24:	str	r1, [fp, #-12]
     f28:	movw	r0, #0
     f2c:	str	r0, [sp, #12]
     f30:	ldr	r1, [fp, #-12]
     f34:	cmp	r1, r0
     f38:	bne	f48 <flatbuffers_has_identifier+0x34>
     f3c:	movw	r0, #1
     f40:	str	r0, [fp, #-4]
     f44:	b	fb4 <flatbuffers_has_identifier+0xa0>
     f48:	add	r0, sp, #12
     f4c:	ldr	r1, [fp, #-12]
     f50:	movw	r2, #4
     f54:	bl	0 <strncpy>
     f58:	ldr	r1, [sp, #12]
     f5c:	str	r0, [sp, #8]
     f60:	mov	r0, r1
     f64:	bl	fe4 <__flatbuffers_thash_cast_from_le>
     f68:	str	r0, [sp, #12]
     f6c:	ldr	r0, [fp, #-8]
     f70:	add	r0, r0, #4
     f74:	bl	ff8 <__flatbuffers_thash_read_from_pe>
     f78:	str	r0, [sp, #16]
     f7c:	ldr	r0, [sp, #12]
     f80:	cmp	r0, #0
     f84:	movw	r0, #1
     f88:	str	r0, [sp, #4]
     f8c:	beq	fa8 <flatbuffers_has_identifier+0x94>
     f90:	ldr	r0, [sp, #16]
     f94:	ldr	r1, [sp, #12]
     f98:	cmp	r0, r1
     f9c:	movw	r0, #0
     fa0:	moveq	r0, #1
     fa4:	str	r0, [sp, #4]
     fa8:	ldr	r0, [sp, #4]
     fac:	and	r0, r0, #1
     fb0:	str	r0, [fp, #-4]
     fb4:	ldr	r0, [fp, #-4]
     fb8:	mov	sp, fp
     fbc:	pop	{fp, pc}

00000fc0 <__flatbuffers_uoffset_read_from_pe>:
     fc0:	push	{fp, lr}
     fc4:	mov	fp, sp
     fc8:	sub	sp, sp, #8
     fcc:	str	r0, [sp, #4]
     fd0:	ldr	r0, [sp, #4]
     fd4:	ldr	r0, [r0]
     fd8:	bl	1030 <__flatbuffers_uoffset_cast_from_pe>
     fdc:	mov	sp, fp
     fe0:	pop	{fp, pc}

00000fe4 <__flatbuffers_thash_cast_from_le>:
     fe4:	sub	sp, sp, #4
     fe8:	str	r0, [sp]
     fec:	ldr	r0, [sp]
     ff0:	add	sp, sp, #4
     ff4:	bx	lr

00000ff8 <__flatbuffers_thash_read_from_pe>:
     ff8:	push	{fp, lr}
     ffc:	mov	fp, sp
    1000:	sub	sp, sp, #8
    1004:	str	r0, [sp, #4]
    1008:	ldr	r0, [sp, #4]
    100c:	ldr	r0, [r0]
    1010:	bl	101c <__flatbuffers_thash_cast_from_pe>
    1014:	mov	sp, fp
    1018:	pop	{fp, pc}

0000101c <__flatbuffers_thash_cast_from_pe>:
    101c:	sub	sp, sp, #4
    1020:	str	r0, [sp]
    1024:	ldr	r0, [sp]
    1028:	add	sp, sp, #4
    102c:	bx	lr

00001030 <__flatbuffers_uoffset_cast_from_pe>:
    1030:	sub	sp, sp, #4
    1034:	str	r0, [sp]
    1038:	ldr	r0, [sp]
    103c:	add	sp, sp, #4
    1040:	bx	lr

00001044 <__flatbuffers_soffset_read_from_pe>:
    1044:	push	{fp, lr}
    1048:	mov	fp, sp
    104c:	sub	sp, sp, #8
    1050:	str	r0, [sp, #4]
    1054:	ldr	r0, [sp, #4]
    1058:	ldr	r0, [r0]
    105c:	bl	1090 <__flatbuffers_soffset_cast_from_pe>
    1060:	mov	sp, fp
    1064:	pop	{fp, pc}

00001068 <__flatbuffers_voffset_read_from_pe>:
    1068:	push	{fp, lr}
    106c:	mov	fp, sp
    1070:	sub	sp, sp, #8
    1074:	str	r0, [sp, #4]
    1078:	ldr	r0, [sp, #4]
    107c:	ldrh	r0, [r0]
    1080:	bl	10a4 <__flatbuffers_voffset_cast_from_pe>
    1084:	uxth	r0, r0
    1088:	mov	sp, fp
    108c:	pop	{fp, pc}

00001090 <__flatbuffers_soffset_cast_from_pe>:
    1090:	sub	sp, sp, #4
    1094:	str	r0, [sp]
    1098:	ldr	r0, [sp]
    109c:	add	sp, sp, #4
    10a0:	bx	lr

000010a4 <__flatbuffers_voffset_cast_from_pe>:
    10a4:	sub	sp, sp, #4
    10a8:	strh	r0, [sp, #2]
    10ac:	ldrh	r0, [sp, #2]
    10b0:	add	sp, sp, #4
    10b4:	bx	lr

000010b8 <flatbuffers_float_read_from_pe>:
    10b8:	push	{fp, lr}
    10bc:	mov	fp, sp
    10c0:	sub	sp, sp, #8
    10c4:	str	r0, [sp, #4]
    10c8:	ldr	r0, [sp, #4]
    10cc:	vldr	s0, [r0]
    10d0:	bl	10dc <flatbuffers_float_cast_from_pe>
    10d4:	mov	sp, fp
    10d8:	pop	{fp, pc}

000010dc <flatbuffers_float_cast_from_pe>:
    10dc:	sub	sp, sp, #8
    10e0:	vstr	s0, [sp, #4]
    10e4:	vldr	s0, [sp, #4]
    10e8:	vstr	s0, [sp]
    10ec:	ldr	r0, [sp]
    10f0:	str	r0, [sp]
    10f4:	vldr	s0, [sp]
    10f8:	add	sp, sp, #8
    10fc:	bx	lr

00001100 <flatbuffers_double_read_from_pe>:
    1100:	push	{fp, lr}
    1104:	mov	fp, sp
    1108:	sub	sp, sp, #8
    110c:	str	r0, [sp, #4]
    1110:	ldr	r0, [sp, #4]
    1114:	vldr	d0, [r0]
    1118:	bl	1124 <flatbuffers_double_cast_from_pe>
    111c:	mov	sp, fp
    1120:	pop	{fp, pc}

00001124 <flatbuffers_double_cast_from_pe>:
    1124:	sub	sp, sp, #16
    1128:	vstr	d0, [sp, #8]
    112c:	vldr	d16, [sp, #8]
    1130:	vstr	d16, [sp]
    1134:	vldr	d0, [sp]
    1138:	add	sp, sp, #16
    113c:	bx	lr

00001140 <MyGame_Example_Color_read_from_pe>:
    1140:	push	{fp, lr}
    1144:	mov	fp, sp
    1148:	sub	sp, sp, #8
    114c:	str	r0, [sp, #4]
    1150:	ldr	r0, [sp, #4]
    1154:	ldrsb	r0, [r0]
    1158:	bl	1168 <MyGame_Example_Color_cast_from_pe>
    115c:	sxtb	r0, r0
    1160:	mov	sp, fp
    1164:	pop	{fp, pc}

00001168 <MyGame_Example_Color_cast_from_pe>:
    1168:	sub	sp, sp, #4
    116c:	strb	r0, [sp, #3]
    1170:	ldrsb	r0, [sp, #3]
    1174:	add	sp, sp, #4
    1178:	bx	lr

0000117c <flatbuffers_int16_read_from_pe>:
    117c:	push	{fp, lr}
    1180:	mov	fp, sp
    1184:	sub	sp, sp, #8
    1188:	str	r0, [sp, #4]
    118c:	ldr	r0, [sp, #4]
    1190:	ldrsh	r0, [r0]
    1194:	bl	11a4 <flatbuffers_int16_cast_from_pe>
    1198:	sxth	r0, r0
    119c:	mov	sp, fp
    11a0:	pop	{fp, pc}

000011a4 <flatbuffers_int16_cast_from_pe>:
    11a4:	sub	sp, sp, #4
    11a8:	strh	r0, [sp, #2]
    11ac:	ldrsh	r0, [sp, #2]
    11b0:	add	sp, sp, #4
    11b4:	bx	lr

000011b8 <flatbuffers_int8_read_from_pe>:
    11b8:	push	{fp, lr}
    11bc:	mov	fp, sp
    11c0:	sub	sp, sp, #8
    11c4:	str	r0, [sp, #4]
    11c8:	ldr	r0, [sp, #4]
    11cc:	ldrsb	r0, [r0]
    11d0:	bl	11e0 <flatbuffers_int8_cast_from_pe>
    11d4:	sxtb	r0, r0
    11d8:	mov	sp, fp
    11dc:	pop	{fp, pc}

000011e0 <flatbuffers_int8_cast_from_pe>:
    11e0:	sub	sp, sp, #4
    11e4:	strb	r0, [sp, #3]
    11e8:	ldrsb	r0, [sp, #3]
    11ec:	add	sp, sp, #4
    11f0:	bx	lr

000011f4 <flatcc_json_parser_init>:
    11f4:	push	{fp, lr}
    11f8:	mov	fp, sp
    11fc:	sub	sp, sp, #24
    1200:	ldr	ip, [fp, #8]
    1204:	str	r0, [fp, #-4]
    1208:	str	r1, [fp, #-8]
    120c:	str	r2, [sp, #12]
    1210:	str	r3, [sp, #8]
    1214:	ldr	r0, [fp, #-4]
    1218:	movw	r1, #0
    121c:	and	r1, r1, #255	; 0xff
    1220:	movw	r2, #44	; 0x2c
    1224:	str	ip, [sp, #4]
    1228:	bl	0 <memset>
    122c:	ldr	r0, [fp, #-8]
    1230:	ldr	r1, [fp, #-4]
    1234:	str	r0, [r1]
    1238:	ldr	r0, [sp, #12]
    123c:	ldr	r1, [fp, #-4]
    1240:	str	r0, [r1, #4]
    1244:	ldr	r0, [fp, #-4]
    1248:	movw	r1, #1
    124c:	str	r1, [r0, #16]
    1250:	ldr	r0, [fp, #8]
    1254:	ldr	r1, [fp, #-4]
    1258:	str	r0, [r1, #8]
    125c:	ldr	r0, [sp, #12]
    1260:	ldr	r1, [fp, #-4]
    1264:	str	r0, [r1, #28]
    1268:	ldr	r0, [sp, #8]
    126c:	ldr	r1, [fp, #-4]
    1270:	str	r0, [r1, #32]
    1274:	ldr	r0, [sp, #12]
    1278:	ldr	r1, [fp, #-4]
    127c:	str	r0, [r1, #36]	; 0x24
    1280:	mov	sp, fp
    1284:	pop	{fp, pc}

00001288 <MyGame_Example_Monster_parse_json_table>:
    1288:	push	{fp, lr}
    128c:	mov	fp, sp
    1290:	sub	sp, sp, #192	; 0xc0
    1294:	str	r0, [fp, #-8]
    1298:	str	r1, [fp, #-12]
    129c:	str	r2, [fp, #-16]
    12a0:	str	r3, [fp, #-20]	; 0xffffffec
    12a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    12a8:	movw	r1, #0
    12ac:	str	r1, [r0]
    12b0:	ldr	r0, [fp, #-8]
    12b4:	ldr	r0, [r0]
    12b8:	movw	r1, #36	; 0x24
    12bc:	bl	0 <flatcc_builder_start_table>
    12c0:	cmp	r0, #0
    12c4:	beq	12cc <MyGame_Example_Monster_parse_json_table+0x44>
    12c8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    12cc:	ldr	r0, [fp, #-16]
    12d0:	ldr	r1, [fp, #-8]
    12d4:	ldr	r2, [fp, #-12]
    12d8:	ldr	r3, [fp, #-16]
    12dc:	str	r0, [sp, #36]	; 0x24
    12e0:	mov	r0, r1
    12e4:	mov	r1, r2
    12e8:	mov	r2, r3
    12ec:	movw	r3, #1
    12f0:	sub	ip, fp, #52	; 0x34
    12f4:	str	ip, [sp]
    12f8:	bl	0 <flatcc_json_parser_prepare_unions>
    12fc:	ldr	r1, [sp, #36]	; 0x24
    1300:	cmp	r1, r0
    1304:	bne	130c <MyGame_Example_Monster_parse_json_table+0x84>
    1308:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    130c:	ldr	r0, [fp, #-8]
    1310:	ldr	r1, [fp, #-12]
    1314:	ldr	r2, [fp, #-16]
    1318:	sub	r3, fp, #24
    131c:	bl	4bfc <flatcc_json_parser_object_start>
    1320:	str	r0, [fp, #-12]
    1324:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1328:	cmp	r0, #0
    132c:	beq	4b3c <MyGame_Example_Monster_parse_json_table+0x38b4>
    1330:	ldr	r0, [fp, #-8]
    1334:	ldr	r1, [fp, #-12]
    1338:	ldr	r2, [fp, #-16]
    133c:	bl	4ce0 <flatcc_json_parser_symbol_start>
    1340:	str	r0, [fp, #-12]
    1344:	ldr	r0, [fp, #-12]
    1348:	ldr	r1, [fp, #-16]
    134c:	bl	4d8c <flatcc_json_parser_symbol_part>
    1350:	str	r1, [fp, #-44]	; 0xffffffd4
    1354:	str	r0, [fp, #-48]	; 0xffffffd0
    1358:	ldr	r0, [fp, #-48]	; 0xffffffd0
    135c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1360:	movw	r2, #29280	; 0x7260
    1364:	movt	r2, #24946	; 0x6172
    1368:	subs	r0, r2, r0
    136c:	movw	r2, #29556	; 0x7374
    1370:	movt	r2, #29797	; 0x7465
    1374:	sbcs	r1, r2, r1
    1378:	bcc	24e0 <MyGame_Example_Monster_parse_json_table+0x1258>
    137c:	b	1380 <MyGame_Example_Monster_parse_json_table+0xf8>
    1380:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1384:	movw	r1, #28004	; 0x6d64
    1388:	movt	r1, #28257	; 0x6e61
    138c:	cmp	r0, r1
    1390:	bhi	1cf0 <MyGame_Example_Monster_parse_json_table+0xa68>
    1394:	b	1398 <MyGame_Example_Monster_parse_json_table+0x110>
    1398:	ldr	r0, [fp, #-44]	; 0xffffffd4
    139c:	movw	r1, #25975	; 0x6577
    13a0:	movt	r1, #26220	; 0x666c
    13a4:	cmp	r0, r1
    13a8:	bhi	15e0 <MyGame_Example_Monster_parse_json_table+0x358>
    13ac:	b	13b0 <MyGame_Example_Monster_parse_json_table+0x128>
    13b0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    13b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    13b8:	movw	r2, #25965	; 0x656d
    13bc:	movt	r2, #25966	; 0x656e
    13c0:	eor	r1, r1, r2
    13c4:	eor	r0, r0, #121	; 0x79
    13c8:	orr	r0, r1, r0, lsl #24
    13cc:	cmp	r0, #0
    13d0:	bne	1474 <MyGame_Example_Monster_parse_json_table+0x1ec>
    13d4:	b	13d8 <MyGame_Example_Monster_parse_json_table+0x150>
    13d8:	ldr	r0, [fp, #-8]
    13dc:	ldr	r1, [fp, #-12]
    13e0:	str	r1, [fp, #-40]	; 0xffffffd8
    13e4:	ldr	r2, [fp, #-16]
    13e8:	movw	r3, #5
    13ec:	bl	4dc4 <flatcc_json_parser_match_symbol>
    13f0:	str	r0, [fp, #-12]
    13f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    13f8:	ldr	r1, [fp, #-12]
    13fc:	cmp	r0, r1
    1400:	beq	145c <MyGame_Example_Monster_parse_json_table+0x1d4>
    1404:	ldr	r0, [fp, #-8]
    1408:	ldr	r1, [fp, #-12]
    140c:	ldr	r2, [fp, #-16]
    1410:	sub	r3, fp, #32
    1414:	bl	1288 <MyGame_Example_Monster_parse_json_table>
    1418:	str	r0, [fp, #-12]
    141c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1420:	cmp	r0, #0
    1424:	beq	1448 <MyGame_Example_Monster_parse_json_table+0x1c0>
    1428:	ldr	r0, [fp, #-8]
    142c:	ldr	r0, [r0]
    1430:	movw	r1, #12
    1434:	bl	0 <flatcc_builder_table_add_offset>
    1438:	str	r0, [fp, #-36]	; 0xffffffdc
    143c:	movw	r1, #0
    1440:	cmp	r0, r1
    1444:	bne	144c <MyGame_Example_Monster_parse_json_table+0x1c4>
    1448:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    144c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1450:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1454:	str	r0, [r1]
    1458:	b	1470 <MyGame_Example_Monster_parse_json_table+0x1e8>
    145c:	ldr	r0, [fp, #-8]
    1460:	ldr	r1, [fp, #-12]
    1464:	ldr	r2, [fp, #-16]
    1468:	bl	0 <flatcc_json_parser_unmatched_symbol>
    146c:	str	r0, [fp, #-12]
    1470:	b	15dc <MyGame_Example_Monster_parse_json_table+0x354>
    1474:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    1478:	ldr	r1, [fp, #-44]	; 0xffffffd4
    147c:	movw	r2, #27759	; 0x6c6f
    1480:	movt	r2, #25455	; 0x636f
    1484:	eor	r1, r1, r2
    1488:	eor	r0, r0, #114	; 0x72
    148c:	orr	r0, r1, r0, lsl #24
    1490:	cmp	r0, #0
    1494:	bne	15c4 <MyGame_Example_Monster_parse_json_table+0x33c>
    1498:	b	149c <MyGame_Example_Monster_parse_json_table+0x214>
    149c:	ldr	r0, [fp, #-8]
    14a0:	ldr	r1, [fp, #-12]
    14a4:	str	r1, [fp, #-40]	; 0xffffffd8
    14a8:	ldr	r2, [fp, #-16]
    14ac:	movw	r3, #5
    14b0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    14b4:	str	r0, [fp, #-12]
    14b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    14bc:	ldr	r1, [fp, #-12]
    14c0:	cmp	r0, r1
    14c4:	beq	15ac <MyGame_Example_Monster_parse_json_table+0x324>
    14c8:	movw	r0, #0
    14cc:	strb	r0, [fp, #-53]	; 0xffffffcb
    14d0:	ldr	r0, [fp, #-8]
    14d4:	ldr	r1, [fp, #-12]
    14d8:	str	r1, [fp, #-40]	; 0xffffffd8
    14dc:	ldr	r2, [fp, #-16]
    14e0:	sub	r3, fp, #53	; 0x35
    14e4:	bl	62e0 <flatcc_json_parser_int8>
    14e8:	str	r0, [fp, #-12]
    14ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    14f0:	ldr	r1, [fp, #-12]
    14f4:	cmp	r0, r1
    14f8:	bne	154c <MyGame_Example_Monster_parse_json_table+0x2c4>
    14fc:	ldr	r0, [fp, #-8]
    1500:	ldr	r1, [fp, #-12]
    1504:	str	r1, [fp, #-40]	; 0xffffffd8
    1508:	ldr	r2, [fp, #-16]
    150c:	movw	r3, #0
    1510:	movt	r3, #0
    1514:	sub	ip, fp, #53	; 0x35
    1518:	str	ip, [sp]
    151c:	bl	63bc <flatcc_json_parser_symbolic_int8>
    1520:	str	r0, [fp, #-12]
    1524:	ldr	r0, [fp, #-12]
    1528:	ldr	r1, [fp, #-40]	; 0xffffffd8
    152c:	cmp	r0, r1
    1530:	beq	1544 <MyGame_Example_Monster_parse_json_table+0x2bc>
    1534:	ldr	r0, [fp, #-12]
    1538:	ldr	r1, [fp, #-16]
    153c:	cmp	r0, r1
    1540:	bne	1548 <MyGame_Example_Monster_parse_json_table+0x2c0>
    1544:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1548:	b	154c <MyGame_Example_Monster_parse_json_table+0x2c4>
    154c:	ldrsb	r0, [fp, #-53]	; 0xffffffcb
    1550:	cmp	r0, #8
    1554:	bne	156c <MyGame_Example_Monster_parse_json_table+0x2e4>
    1558:	ldr	r0, [fp, #-8]
    155c:	ldr	r0, [r0, #8]
    1560:	and	r0, r0, #2
    1564:	cmp	r0, #0
    1568:	beq	15a8 <MyGame_Example_Monster_parse_json_table+0x320>
    156c:	ldr	r0, [fp, #-8]
    1570:	ldr	r0, [r0]
    1574:	movw	r1, #6
    1578:	movw	r2, #1
    157c:	movw	r3, #1
    1580:	uxth	r3, r3
    1584:	bl	0 <flatcc_builder_table_add>
    1588:	str	r0, [fp, #-28]	; 0xffffffe4
    158c:	movw	r1, #0
    1590:	cmp	r0, r1
    1594:	bne	159c <MyGame_Example_Monster_parse_json_table+0x314>
    1598:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    159c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    15a0:	ldrsb	r1, [fp, #-53]	; 0xffffffcb
    15a4:	bl	65e8 <flatbuffers_int8_write_to_pe>
    15a8:	b	15c0 <MyGame_Example_Monster_parse_json_table+0x338>
    15ac:	ldr	r0, [fp, #-8]
    15b0:	ldr	r1, [fp, #-12]
    15b4:	ldr	r2, [fp, #-16]
    15b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    15bc:	str	r0, [fp, #-12]
    15c0:	b	15d8 <MyGame_Example_Monster_parse_json_table+0x350>
    15c4:	ldr	r0, [fp, #-8]
    15c8:	ldr	r1, [fp, #-12]
    15cc:	ldr	r2, [fp, #-16]
    15d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    15d4:	str	r0, [fp, #-12]
    15d8:	b	15dc <MyGame_Example_Monster_parse_json_table+0x354>
    15dc:	b	1cec <MyGame_Example_Monster_parse_json_table+0xa64>
    15e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15e4:	movw	r1, #65535	; 0xffff
    15e8:	movt	r1, #26735	; 0x686f
    15ec:	cmp	r0, r1
    15f0:	bhi	17d8 <MyGame_Example_Monster_parse_json_table+0x550>
    15f4:	b	15f8 <MyGame_Example_Monster_parse_json_table+0x370>
    15f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15fc:	movw	r1, #25976	; 0x6578
    1600:	movt	r1, #26220	; 0x666c
    1604:	teq	r0, r1
    1608:	bne	17c0 <MyGame_Example_Monster_parse_json_table+0x538>
    160c:	b	1610 <MyGame_Example_Monster_parse_json_table+0x388>
    1610:	ldr	r0, [fp, #-8]
    1614:	ldr	r1, [fp, #-12]
    1618:	str	r1, [fp, #-40]	; 0xffffffd8
    161c:	ldr	r2, [fp, #-16]
    1620:	movw	r3, #4
    1624:	bl	4dc4 <flatcc_json_parser_match_symbol>
    1628:	str	r0, [fp, #-12]
    162c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1630:	ldr	r1, [fp, #-12]
    1634:	cmp	r0, r1
    1638:	beq	17a8 <MyGame_Example_Monster_parse_json_table+0x520>
    163c:	ldr	r0, [fp, #-8]
    1640:	ldr	r0, [r0]
    1644:	movw	r1, #1
    1648:	movw	r2, #1
    164c:	uxth	r2, r2
    1650:	mvn	r3, #0
    1654:	bl	0 <flatcc_builder_start_vector>
    1658:	cmp	r0, #0
    165c:	beq	1664 <MyGame_Example_Monster_parse_json_table+0x3dc>
    1660:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1664:	ldr	r0, [fp, #-8]
    1668:	ldr	r1, [fp, #-12]
    166c:	ldr	r2, [fp, #-16]
    1670:	sub	r3, fp, #24
    1674:	bl	6614 <flatcc_json_parser_array_start>
    1678:	str	r0, [fp, #-12]
    167c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1680:	cmp	r0, #0
    1684:	beq	1758 <MyGame_Example_Monster_parse_json_table+0x4d0>
    1688:	movw	r0, #0
    168c:	strb	r0, [fp, #-54]	; 0xffffffca
    1690:	ldr	r0, [fp, #-8]
    1694:	ldr	r0, [r0]
    1698:	movw	r1, #1
    169c:	bl	0 <flatcc_builder_extend_vector>
    16a0:	str	r0, [fp, #-28]	; 0xffffffe4
    16a4:	movw	r1, #0
    16a8:	cmp	r0, r1
    16ac:	bne	16b4 <MyGame_Example_Monster_parse_json_table+0x42c>
    16b0:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    16b4:	ldr	r0, [fp, #-8]
    16b8:	ldr	r1, [fp, #-12]
    16bc:	str	r1, [fp, #-40]	; 0xffffffd8
    16c0:	ldr	r2, [fp, #-16]
    16c4:	sub	r3, fp, #54	; 0x36
    16c8:	bl	66f8 <flatcc_json_parser_uint8>
    16cc:	str	r0, [fp, #-12]
    16d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    16d4:	ldr	r1, [fp, #-12]
    16d8:	cmp	r0, r1
    16dc:	bne	1730 <MyGame_Example_Monster_parse_json_table+0x4a8>
    16e0:	ldr	r0, [fp, #-8]
    16e4:	ldr	r1, [fp, #-12]
    16e8:	str	r1, [fp, #-40]	; 0xffffffd8
    16ec:	ldr	r2, [fp, #-16]
    16f0:	movw	r3, #0
    16f4:	movt	r3, #0
    16f8:	sub	ip, fp, #54	; 0x36
    16fc:	str	ip, [sp]
    1700:	bl	67d4 <flatcc_json_parser_symbolic_uint8>
    1704:	str	r0, [fp, #-12]
    1708:	ldr	r0, [fp, #-12]
    170c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1710:	cmp	r0, r1
    1714:	beq	1728 <MyGame_Example_Monster_parse_json_table+0x4a0>
    1718:	ldr	r0, [fp, #-12]
    171c:	ldr	r1, [fp, #-16]
    1720:	cmp	r0, r1
    1724:	bne	172c <MyGame_Example_Monster_parse_json_table+0x4a4>
    1728:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    172c:	b	1730 <MyGame_Example_Monster_parse_json_table+0x4a8>
    1730:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1734:	ldrb	r1, [fp, #-54]	; 0xffffffca
    1738:	bl	6a00 <flatbuffers_uint8_write_to_pe>
    173c:	ldr	r0, [fp, #-8]
    1740:	ldr	r1, [fp, #-12]
    1744:	ldr	r2, [fp, #-16]
    1748:	sub	r3, fp, #24
    174c:	bl	6a2c <flatcc_json_parser_array_end>
    1750:	str	r0, [fp, #-12]
    1754:	b	167c <MyGame_Example_Monster_parse_json_table+0x3f4>
    1758:	ldr	r0, [fp, #-8]
    175c:	ldr	r0, [r0]
    1760:	bl	0 <flatcc_builder_end_vector>
    1764:	str	r0, [fp, #-32]	; 0xffffffe0
    1768:	ldr	r0, [fp, #-32]	; 0xffffffe0
    176c:	cmp	r0, #0
    1770:	beq	1794 <MyGame_Example_Monster_parse_json_table+0x50c>
    1774:	ldr	r0, [fp, #-8]
    1778:	ldr	r0, [r0]
    177c:	movw	r1, #30
    1780:	bl	0 <flatcc_builder_table_add_offset>
    1784:	str	r0, [fp, #-36]	; 0xffffffdc
    1788:	movw	r1, #0
    178c:	cmp	r0, r1
    1790:	bne	1798 <MyGame_Example_Monster_parse_json_table+0x510>
    1794:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1798:	ldr	r0, [fp, #-32]	; 0xffffffe0
    179c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    17a0:	str	r0, [r1]
    17a4:	b	17bc <MyGame_Example_Monster_parse_json_table+0x534>
    17a8:	ldr	r0, [fp, #-8]
    17ac:	ldr	r1, [fp, #-12]
    17b0:	ldr	r2, [fp, #-16]
    17b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    17b8:	str	r0, [fp, #-12]
    17bc:	b	17d4 <MyGame_Example_Monster_parse_json_table+0x54c>
    17c0:	ldr	r0, [fp, #-8]
    17c4:	ldr	r1, [fp, #-12]
    17c8:	ldr	r2, [fp, #-16]
    17cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    17d0:	str	r0, [fp, #-12]
    17d4:	b	1ce8 <MyGame_Example_Monster_parse_json_table+0xa60>
    17d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    17e0:	movw	r2, #28529	; 0x6f71
    17e4:	movt	r2, #28276	; 0x6e74
    17e8:	subs	r0, r2, r0
    17ec:	movw	r2, #30309	; 0x7665
    17f0:	movt	r2, #26990	; 0x696e
    17f4:	sbcs	r1, r2, r1
    17f8:	bcc	195c <MyGame_Example_Monster_parse_json_table+0x6d4>
    17fc:	b	1800 <MyGame_Example_Monster_parse_json_table+0x578>
    1800:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    1804:	movw	r1, #0
    1808:	movt	r1, #26736	; 0x6870
    180c:	teq	r1, r0, lsl #16
    1810:	bne	1944 <MyGame_Example_Monster_parse_json_table+0x6bc>
    1814:	b	1818 <MyGame_Example_Monster_parse_json_table+0x590>
    1818:	ldr	r0, [fp, #-8]
    181c:	ldr	r1, [fp, #-12]
    1820:	str	r1, [fp, #-40]	; 0xffffffd8
    1824:	ldr	r2, [fp, #-16]
    1828:	movw	r3, #2
    182c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    1830:	str	r0, [fp, #-12]
    1834:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1838:	ldr	r1, [fp, #-12]
    183c:	cmp	r0, r1
    1840:	beq	192c <MyGame_Example_Monster_parse_json_table+0x6a4>
    1844:	movw	r0, #0
    1848:	strh	r0, [fp, #-56]	; 0xffffffc8
    184c:	ldr	r0, [fp, #-8]
    1850:	ldr	r1, [fp, #-12]
    1854:	str	r1, [fp, #-40]	; 0xffffffd8
    1858:	ldr	r2, [fp, #-16]
    185c:	sub	r3, fp, #56	; 0x38
    1860:	bl	6b90 <flatcc_json_parser_int16>
    1864:	str	r0, [fp, #-12]
    1868:	ldr	r0, [fp, #-40]	; 0xffffffd8
    186c:	ldr	r1, [fp, #-12]
    1870:	cmp	r0, r1
    1874:	bne	18c8 <MyGame_Example_Monster_parse_json_table+0x640>
    1878:	ldr	r0, [fp, #-8]
    187c:	ldr	r1, [fp, #-12]
    1880:	str	r1, [fp, #-40]	; 0xffffffd8
    1884:	ldr	r2, [fp, #-16]
    1888:	movw	r3, #0
    188c:	movt	r3, #0
    1890:	sub	ip, fp, #56	; 0x38
    1894:	str	ip, [sp]
    1898:	bl	6c6c <flatcc_json_parser_symbolic_int16>
    189c:	str	r0, [fp, #-12]
    18a0:	ldr	r0, [fp, #-12]
    18a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    18a8:	cmp	r0, r1
    18ac:	beq	18c0 <MyGame_Example_Monster_parse_json_table+0x638>
    18b0:	ldr	r0, [fp, #-12]
    18b4:	ldr	r1, [fp, #-16]
    18b8:	cmp	r0, r1
    18bc:	bne	18c4 <MyGame_Example_Monster_parse_json_table+0x63c>
    18c0:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    18c4:	b	18c8 <MyGame_Example_Monster_parse_json_table+0x640>
    18c8:	ldrsh	r0, [fp, #-56]	; 0xffffffc8
    18cc:	cmp	r0, #100	; 0x64
    18d0:	bne	18e8 <MyGame_Example_Monster_parse_json_table+0x660>
    18d4:	ldr	r0, [fp, #-8]
    18d8:	ldr	r0, [r0, #8]
    18dc:	and	r0, r0, #2
    18e0:	cmp	r0, #0
    18e4:	beq	1928 <MyGame_Example_Monster_parse_json_table+0x6a0>
    18e8:	ldr	r0, [fp, #-8]
    18ec:	ldr	r0, [r0]
    18f0:	movw	r1, #2
    18f4:	str	r1, [sp, #32]
    18f8:	ldr	r2, [sp, #32]
    18fc:	movw	r3, #2
    1900:	uxth	r3, r3
    1904:	bl	0 <flatcc_builder_table_add>
    1908:	str	r0, [fp, #-28]	; 0xffffffe4
    190c:	movw	r1, #0
    1910:	cmp	r0, r1
    1914:	bne	191c <MyGame_Example_Monster_parse_json_table+0x694>
    1918:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    191c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1920:	ldrsh	r1, [fp, #-56]	; 0xffffffc8
    1924:	bl	6e98 <flatbuffers_int16_write_to_pe>
    1928:	b	1940 <MyGame_Example_Monster_parse_json_table+0x6b8>
    192c:	ldr	r0, [fp, #-8]
    1930:	ldr	r1, [fp, #-12]
    1934:	ldr	r2, [fp, #-16]
    1938:	bl	0 <flatcc_json_parser_unmatched_symbol>
    193c:	str	r0, [fp, #-12]
    1940:	b	1958 <MyGame_Example_Monster_parse_json_table+0x6d0>
    1944:	ldr	r0, [fp, #-8]
    1948:	ldr	r1, [fp, #-12]
    194c:	ldr	r2, [fp, #-16]
    1950:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1954:	str	r0, [fp, #-12]
    1958:	b	1ce4 <MyGame_Example_Monster_parse_json_table+0xa5c>
    195c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1960:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1964:	movw	r2, #30309	; 0x7665
    1968:	movt	r2, #26990	; 0x696e
    196c:	eor	r1, r1, r2
    1970:	movw	r2, #28530	; 0x6f72
    1974:	movt	r2, #28276	; 0x6e74
    1978:	eor	r0, r0, r2
    197c:	orr	r0, r0, r1
    1980:	cmp	r0, #0
    1984:	bne	1b88 <MyGame_Example_Monster_parse_json_table+0x900>
    1988:	b	198c <MyGame_Example_Monster_parse_json_table+0x704>
    198c:	ldr	r0, [fp, #-12]
    1990:	add	r0, r0, #8
    1994:	str	r0, [fp, #-12]
    1998:	ldr	r0, [fp, #-12]
    199c:	ldr	r1, [fp, #-16]
    19a0:	bl	4d8c <flatcc_json_parser_symbol_part>
    19a4:	str	r1, [fp, #-44]	; 0xffffffd4
    19a8:	str	r0, [fp, #-48]	; 0xffffffd0
    19ac:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    19b0:	mov	r1, #2030043136	; 0x79000000
    19b4:	teq	r1, r0, lsl #24
    19b8:	bne	1b70 <MyGame_Example_Monster_parse_json_table+0x8e8>
    19bc:	b	19c0 <MyGame_Example_Monster_parse_json_table+0x738>
    19c0:	ldr	r0, [fp, #-8]
    19c4:	ldr	r1, [fp, #-12]
    19c8:	str	r1, [fp, #-40]	; 0xffffffd8
    19cc:	ldr	r2, [fp, #-16]
    19d0:	movw	r3, #1
    19d4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    19d8:	str	r0, [fp, #-12]
    19dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    19e0:	ldr	r1, [fp, #-12]
    19e4:	cmp	r0, r1
    19e8:	beq	1b58 <MyGame_Example_Monster_parse_json_table+0x8d0>
    19ec:	ldr	r0, [fp, #-8]
    19f0:	ldr	r0, [r0]
    19f4:	movw	r1, #1
    19f8:	movw	r2, #1
    19fc:	uxth	r2, r2
    1a00:	mvn	r3, #0
    1a04:	bl	0 <flatcc_builder_start_vector>
    1a08:	cmp	r0, #0
    1a0c:	beq	1a14 <MyGame_Example_Monster_parse_json_table+0x78c>
    1a10:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1a14:	ldr	r0, [fp, #-8]
    1a18:	ldr	r1, [fp, #-12]
    1a1c:	ldr	r2, [fp, #-16]
    1a20:	sub	r3, fp, #24
    1a24:	bl	6614 <flatcc_json_parser_array_start>
    1a28:	str	r0, [fp, #-12]
    1a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a30:	cmp	r0, #0
    1a34:	beq	1b08 <MyGame_Example_Monster_parse_json_table+0x880>
    1a38:	movw	r0, #0
    1a3c:	strb	r0, [fp, #-57]	; 0xffffffc7
    1a40:	ldr	r0, [fp, #-8]
    1a44:	ldr	r0, [r0]
    1a48:	movw	r1, #1
    1a4c:	bl	0 <flatcc_builder_extend_vector>
    1a50:	str	r0, [fp, #-28]	; 0xffffffe4
    1a54:	movw	r1, #0
    1a58:	cmp	r0, r1
    1a5c:	bne	1a64 <MyGame_Example_Monster_parse_json_table+0x7dc>
    1a60:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1a64:	ldr	r0, [fp, #-8]
    1a68:	ldr	r1, [fp, #-12]
    1a6c:	str	r1, [fp, #-40]	; 0xffffffd8
    1a70:	ldr	r2, [fp, #-16]
    1a74:	sub	r3, fp, #57	; 0x39
    1a78:	bl	66f8 <flatcc_json_parser_uint8>
    1a7c:	str	r0, [fp, #-12]
    1a80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1a84:	ldr	r1, [fp, #-12]
    1a88:	cmp	r0, r1
    1a8c:	bne	1ae0 <MyGame_Example_Monster_parse_json_table+0x858>
    1a90:	ldr	r0, [fp, #-8]
    1a94:	ldr	r1, [fp, #-12]
    1a98:	str	r1, [fp, #-40]	; 0xffffffd8
    1a9c:	ldr	r2, [fp, #-16]
    1aa0:	movw	r3, #0
    1aa4:	movt	r3, #0
    1aa8:	sub	ip, fp, #57	; 0x39
    1aac:	str	ip, [sp]
    1ab0:	bl	67d4 <flatcc_json_parser_symbolic_uint8>
    1ab4:	str	r0, [fp, #-12]
    1ab8:	ldr	r0, [fp, #-12]
    1abc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1ac0:	cmp	r0, r1
    1ac4:	beq	1ad8 <MyGame_Example_Monster_parse_json_table+0x850>
    1ac8:	ldr	r0, [fp, #-12]
    1acc:	ldr	r1, [fp, #-16]
    1ad0:	cmp	r0, r1
    1ad4:	bne	1adc <MyGame_Example_Monster_parse_json_table+0x854>
    1ad8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1adc:	b	1ae0 <MyGame_Example_Monster_parse_json_table+0x858>
    1ae0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ae4:	ldrb	r1, [fp, #-57]	; 0xffffffc7
    1ae8:	bl	6a00 <flatbuffers_uint8_write_to_pe>
    1aec:	ldr	r0, [fp, #-8]
    1af0:	ldr	r1, [fp, #-12]
    1af4:	ldr	r2, [fp, #-16]
    1af8:	sub	r3, fp, #24
    1afc:	bl	6a2c <flatcc_json_parser_array_end>
    1b00:	str	r0, [fp, #-12]
    1b04:	b	1a2c <MyGame_Example_Monster_parse_json_table+0x7a4>
    1b08:	ldr	r0, [fp, #-8]
    1b0c:	ldr	r0, [r0]
    1b10:	bl	0 <flatcc_builder_end_vector>
    1b14:	str	r0, [fp, #-32]	; 0xffffffe0
    1b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1b1c:	cmp	r0, #0
    1b20:	beq	1b44 <MyGame_Example_Monster_parse_json_table+0x8bc>
    1b24:	ldr	r0, [fp, #-8]
    1b28:	ldr	r0, [r0]
    1b2c:	movw	r1, #5
    1b30:	bl	0 <flatcc_builder_table_add_offset>
    1b34:	str	r0, [fp, #-36]	; 0xffffffdc
    1b38:	movw	r1, #0
    1b3c:	cmp	r0, r1
    1b40:	bne	1b48 <MyGame_Example_Monster_parse_json_table+0x8c0>
    1b44:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1b4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1b50:	str	r0, [r1]
    1b54:	b	1b6c <MyGame_Example_Monster_parse_json_table+0x8e4>
    1b58:	ldr	r0, [fp, #-8]
    1b5c:	ldr	r1, [fp, #-12]
    1b60:	ldr	r2, [fp, #-16]
    1b64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1b68:	str	r0, [fp, #-12]
    1b6c:	b	1b84 <MyGame_Example_Monster_parse_json_table+0x8fc>
    1b70:	ldr	r0, [fp, #-8]
    1b74:	ldr	r1, [fp, #-12]
    1b78:	ldr	r2, [fp, #-16]
    1b7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1b80:	str	r0, [fp, #-12]
    1b84:	b	1ce0 <MyGame_Example_Monster_parse_json_table+0xa58>
    1b88:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b8c:	movw	r1, #28257	; 0x6e61
    1b90:	movt	r1, #28001	; 0x6d61
    1b94:	teq	r0, r1
    1b98:	bne	1cc8 <MyGame_Example_Monster_parse_json_table+0xa40>
    1b9c:	b	1ba0 <MyGame_Example_Monster_parse_json_table+0x918>
    1ba0:	ldr	r0, [fp, #-8]
    1ba4:	ldr	r1, [fp, #-12]
    1ba8:	str	r1, [fp, #-40]	; 0xffffffd8
    1bac:	ldr	r2, [fp, #-16]
    1bb0:	movw	r3, #4
    1bb4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    1bb8:	str	r0, [fp, #-12]
    1bbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1bc0:	ldr	r1, [fp, #-12]
    1bc4:	cmp	r0, r1
    1bc8:	beq	1cb0 <MyGame_Example_Monster_parse_json_table+0xa28>
    1bcc:	movw	r0, #0
    1bd0:	strh	r0, [fp, #-60]	; 0xffffffc4
    1bd4:	ldr	r0, [fp, #-8]
    1bd8:	ldr	r1, [fp, #-12]
    1bdc:	str	r1, [fp, #-40]	; 0xffffffd8
    1be0:	ldr	r2, [fp, #-16]
    1be4:	sub	r3, fp, #60	; 0x3c
    1be8:	bl	6b90 <flatcc_json_parser_int16>
    1bec:	str	r0, [fp, #-12]
    1bf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1bf4:	ldr	r1, [fp, #-12]
    1bf8:	cmp	r0, r1
    1bfc:	bne	1c50 <MyGame_Example_Monster_parse_json_table+0x9c8>
    1c00:	ldr	r0, [fp, #-8]
    1c04:	ldr	r1, [fp, #-12]
    1c08:	str	r1, [fp, #-40]	; 0xffffffd8
    1c0c:	ldr	r2, [fp, #-16]
    1c10:	movw	r3, #0
    1c14:	movt	r3, #0
    1c18:	sub	ip, fp, #60	; 0x3c
    1c1c:	str	ip, [sp]
    1c20:	bl	6c6c <flatcc_json_parser_symbolic_int16>
    1c24:	str	r0, [fp, #-12]
    1c28:	ldr	r0, [fp, #-12]
    1c2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1c30:	cmp	r0, r1
    1c34:	beq	1c48 <MyGame_Example_Monster_parse_json_table+0x9c0>
    1c38:	ldr	r0, [fp, #-12]
    1c3c:	ldr	r1, [fp, #-16]
    1c40:	cmp	r0, r1
    1c44:	bne	1c4c <MyGame_Example_Monster_parse_json_table+0x9c4>
    1c48:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1c4c:	b	1c50 <MyGame_Example_Monster_parse_json_table+0x9c8>
    1c50:	ldrsh	r0, [fp, #-60]	; 0xffffffc4
    1c54:	cmp	r0, #150	; 0x96
    1c58:	bne	1c70 <MyGame_Example_Monster_parse_json_table+0x9e8>
    1c5c:	ldr	r0, [fp, #-8]
    1c60:	ldr	r0, [r0, #8]
    1c64:	and	r0, r0, #2
    1c68:	cmp	r0, #0
    1c6c:	beq	1cac <MyGame_Example_Monster_parse_json_table+0xa24>
    1c70:	ldr	r0, [fp, #-8]
    1c74:	ldr	r0, [r0]
    1c78:	movw	r1, #1
    1c7c:	movw	r2, #2
    1c80:	movw	r3, #2
    1c84:	uxth	r3, r3
    1c88:	bl	0 <flatcc_builder_table_add>
    1c8c:	str	r0, [fp, #-28]	; 0xffffffe4
    1c90:	movw	r1, #0
    1c94:	cmp	r0, r1
    1c98:	bne	1ca0 <MyGame_Example_Monster_parse_json_table+0xa18>
    1c9c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1ca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ca4:	ldrsh	r1, [fp, #-60]	; 0xffffffc4
    1ca8:	bl	6e98 <flatbuffers_int16_write_to_pe>
    1cac:	b	1cc4 <MyGame_Example_Monster_parse_json_table+0xa3c>
    1cb0:	ldr	r0, [fp, #-8]
    1cb4:	ldr	r1, [fp, #-12]
    1cb8:	ldr	r2, [fp, #-16]
    1cbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1cc0:	str	r0, [fp, #-12]
    1cc4:	b	1cdc <MyGame_Example_Monster_parse_json_table+0xa54>
    1cc8:	ldr	r0, [fp, #-8]
    1ccc:	ldr	r1, [fp, #-12]
    1cd0:	ldr	r2, [fp, #-16]
    1cd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1cd8:	str	r0, [fp, #-12]
    1cdc:	b	1ce0 <MyGame_Example_Monster_parse_json_table+0xa58>
    1ce0:	b	1ce4 <MyGame_Example_Monster_parse_json_table+0xa5c>
    1ce4:	b	1ce8 <MyGame_Example_Monster_parse_json_table+0xa60>
    1ce8:	b	1cec <MyGame_Example_Monster_parse_json_table+0xa64>
    1cec:	b	24dc <MyGame_Example_Monster_parse_json_table+0x1254>
    1cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1cf4:	movw	r1, #29555	; 0x7373
    1cf8:	movt	r1, #29797	; 0x7465
    1cfc:	cmp	r0, r1
    1d00:	bhi	205c <MyGame_Example_Monster_parse_json_table+0xdd4>
    1d04:	b	1d08 <MyGame_Example_Monster_parse_json_table+0xa80>
    1d08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1d10:	movw	r2, #24429	; 0x5f6d
    1d14:	movt	r2, #28276	; 0x6e74
    1d18:	subs	r0, r2, r0
    1d1c:	movw	r2, #29285	; 0x7265
    1d20:	movt	r2, #28769	; 0x7061
    1d24:	sbcs	r1, r2, r1
    1d28:	bcc	1dfc <MyGame_Example_Monster_parse_json_table+0xb74>
    1d2c:	b	1d30 <MyGame_Example_Monster_parse_json_table+0xaa8>
    1d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1d34:	movw	r1, #28005	; 0x6d65
    1d38:	movt	r1, #28257	; 0x6e61
    1d3c:	teq	r0, r1
    1d40:	bne	1de4 <MyGame_Example_Monster_parse_json_table+0xb5c>
    1d44:	b	1d48 <MyGame_Example_Monster_parse_json_table+0xac0>
    1d48:	ldr	r0, [fp, #-8]
    1d4c:	ldr	r1, [fp, #-12]
    1d50:	str	r1, [fp, #-40]	; 0xffffffd8
    1d54:	ldr	r2, [fp, #-16]
    1d58:	movw	r3, #4
    1d5c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    1d60:	str	r0, [fp, #-12]
    1d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1d68:	ldr	r1, [fp, #-12]
    1d6c:	cmp	r0, r1
    1d70:	beq	1dcc <MyGame_Example_Monster_parse_json_table+0xb44>
    1d74:	ldr	r0, [fp, #-8]
    1d78:	ldr	r1, [fp, #-12]
    1d7c:	ldr	r2, [fp, #-16]
    1d80:	sub	r3, fp, #32
    1d84:	bl	0 <flatcc_json_parser_build_string>
    1d88:	str	r0, [fp, #-12]
    1d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1d90:	cmp	r0, #0
    1d94:	beq	1db8 <MyGame_Example_Monster_parse_json_table+0xb30>
    1d98:	ldr	r0, [fp, #-8]
    1d9c:	ldr	r0, [r0]
    1da0:	movw	r1, #3
    1da4:	bl	0 <flatcc_builder_table_add_offset>
    1da8:	str	r0, [fp, #-36]	; 0xffffffdc
    1dac:	movw	r1, #0
    1db0:	cmp	r0, r1
    1db4:	bne	1dbc <MyGame_Example_Monster_parse_json_table+0xb34>
    1db8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1dc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1dc4:	str	r0, [r1]
    1dc8:	b	1de0 <MyGame_Example_Monster_parse_json_table+0xb58>
    1dcc:	ldr	r0, [fp, #-8]
    1dd0:	ldr	r1, [fp, #-12]
    1dd4:	ldr	r2, [fp, #-16]
    1dd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1ddc:	str	r0, [fp, #-12]
    1de0:	b	1df8 <MyGame_Example_Monster_parse_json_table+0xb70>
    1de4:	ldr	r0, [fp, #-8]
    1de8:	ldr	r1, [fp, #-12]
    1dec:	ldr	r2, [fp, #-16]
    1df0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1df4:	str	r0, [fp, #-12]
    1df8:	b	2058 <MyGame_Example_Monster_parse_json_table+0xdd0>
    1dfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1e04:	movw	r2, #29285	; 0x7265
    1e08:	movt	r2, #28769	; 0x7061
    1e0c:	eor	r1, r1, r2
    1e10:	movw	r2, #24430	; 0x5f6e
    1e14:	movt	r2, #28276	; 0x6e74
    1e18:	eor	r0, r0, r2
    1e1c:	orr	r0, r0, r1
    1e20:	cmp	r0, #0
    1e24:	bne	1f90 <MyGame_Example_Monster_parse_json_table+0xd08>
    1e28:	b	1e2c <MyGame_Example_Monster_parse_json_table+0xba4>
    1e2c:	ldr	r0, [fp, #-12]
    1e30:	add	r0, r0, #8
    1e34:	str	r0, [fp, #-12]
    1e38:	ldr	r0, [fp, #-12]
    1e3c:	ldr	r1, [fp, #-16]
    1e40:	bl	4d8c <flatcc_json_parser_symbol_part>
    1e44:	str	r1, [fp, #-44]	; 0xffffffd4
    1e48:	str	r0, [fp, #-48]	; 0xffffffd0
    1e4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e50:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1e54:	movw	r2, #25971	; 0x6573
    1e58:	movt	r2, #24941	; 0x616d
    1e5c:	eor	r1, r1, r2
    1e60:	movw	r2, #25445	; 0x6365
    1e64:	movt	r2, #28769	; 0x7061
    1e68:	eor	r0, r0, r2
    1e6c:	orr	r0, r0, r1
    1e70:	cmp	r0, #0
    1e74:	bne	1f78 <MyGame_Example_Monster_parse_json_table+0xcf0>
    1e78:	b	1e7c <MyGame_Example_Monster_parse_json_table+0xbf4>
    1e7c:	ldr	r0, [fp, #-12]
    1e80:	add	r0, r0, #8
    1e84:	str	r0, [fp, #-12]
    1e88:	ldr	r0, [fp, #-12]
    1e8c:	ldr	r1, [fp, #-16]
    1e90:	bl	4d8c <flatcc_json_parser_symbol_part>
    1e94:	str	r1, [fp, #-44]	; 0xffffffd4
    1e98:	str	r0, [fp, #-48]	; 0xffffffd0
    1e9c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    1ea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1ea4:	movw	r2, #25971	; 0x6573
    1ea8:	movt	r2, #24436	; 0x5f74
    1eac:	eor	r1, r1, r2
    1eb0:	eor	r0, r0, #116	; 0x74
    1eb4:	orr	r0, r1, r0, lsl #24
    1eb8:	cmp	r0, #0
    1ebc:	bne	1f60 <MyGame_Example_Monster_parse_json_table+0xcd8>
    1ec0:	b	1ec4 <MyGame_Example_Monster_parse_json_table+0xc3c>
    1ec4:	ldr	r0, [fp, #-8]
    1ec8:	ldr	r1, [fp, #-12]
    1ecc:	str	r1, [fp, #-40]	; 0xffffffd8
    1ed0:	ldr	r2, [fp, #-16]
    1ed4:	movw	r3, #5
    1ed8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    1edc:	str	r0, [fp, #-12]
    1ee0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1ee4:	ldr	r1, [fp, #-12]
    1ee8:	cmp	r0, r1
    1eec:	beq	1f48 <MyGame_Example_Monster_parse_json_table+0xcc0>
    1ef0:	ldr	r0, [fp, #-8]
    1ef4:	ldr	r1, [fp, #-12]
    1ef8:	ldr	r2, [fp, #-16]
    1efc:	sub	r3, fp, #32
    1f00:	bl	6ec4 <MyGame_InParentNamespace_parse_json_table>
    1f04:	str	r0, [fp, #-12]
    1f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1f0c:	cmp	r0, #0
    1f10:	beq	1f34 <MyGame_Example_Monster_parse_json_table+0xcac>
    1f14:	ldr	r0, [fp, #-8]
    1f18:	ldr	r0, [r0]
    1f1c:	movw	r1, #34	; 0x22
    1f20:	bl	0 <flatcc_builder_table_add_offset>
    1f24:	str	r0, [fp, #-36]	; 0xffffffdc
    1f28:	movw	r1, #0
    1f2c:	cmp	r0, r1
    1f30:	bne	1f38 <MyGame_Example_Monster_parse_json_table+0xcb0>
    1f34:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    1f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1f3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1f40:	str	r0, [r1]
    1f44:	b	1f5c <MyGame_Example_Monster_parse_json_table+0xcd4>
    1f48:	ldr	r0, [fp, #-8]
    1f4c:	ldr	r1, [fp, #-12]
    1f50:	ldr	r2, [fp, #-16]
    1f54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1f58:	str	r0, [fp, #-12]
    1f5c:	b	1f74 <MyGame_Example_Monster_parse_json_table+0xcec>
    1f60:	ldr	r0, [fp, #-8]
    1f64:	ldr	r1, [fp, #-12]
    1f68:	ldr	r2, [fp, #-16]
    1f6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1f70:	str	r0, [fp, #-12]
    1f74:	b	1f8c <MyGame_Example_Monster_parse_json_table+0xd04>
    1f78:	ldr	r0, [fp, #-8]
    1f7c:	ldr	r1, [fp, #-12]
    1f80:	ldr	r2, [fp, #-16]
    1f84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1f88:	str	r0, [fp, #-12]
    1f8c:	b	2054 <MyGame_Example_Monster_parse_json_table+0xdcc>
    1f90:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1f94:	bic	r0, r0, #255	; 0xff
    1f98:	movw	r1, #29440	; 0x7300
    1f9c:	movt	r1, #28783	; 0x706f
    1fa0:	teq	r0, r1
    1fa4:	bne	203c <MyGame_Example_Monster_parse_json_table+0xdb4>
    1fa8:	b	1fac <MyGame_Example_Monster_parse_json_table+0xd24>
    1fac:	ldr	r0, [fp, #-8]
    1fb0:	ldr	r1, [fp, #-12]
    1fb4:	str	r1, [fp, #-40]	; 0xffffffd8
    1fb8:	ldr	r2, [fp, #-16]
    1fbc:	movw	r3, #3
    1fc0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    1fc4:	str	r0, [fp, #-12]
    1fc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1fcc:	ldr	r1, [fp, #-12]
    1fd0:	cmp	r0, r1
    1fd4:	beq	2024 <MyGame_Example_Monster_parse_json_table+0xd9c>
    1fd8:	ldr	r0, [fp, #-8]
    1fdc:	ldr	r0, [r0]
    1fe0:	movw	r1, #0
    1fe4:	movw	r2, #32
    1fe8:	movw	r3, #16
    1fec:	uxth	r3, r3
    1ff0:	bl	0 <flatcc_builder_table_add>
    1ff4:	str	r0, [fp, #-28]	; 0xffffffe4
    1ff8:	movw	r1, #0
    1ffc:	cmp	r0, r1
    2000:	bne	2008 <MyGame_Example_Monster_parse_json_table+0xd80>
    2004:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2008:	ldr	r0, [fp, #-8]
    200c:	ldr	r1, [fp, #-12]
    2010:	ldr	r2, [fp, #-16]
    2014:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2018:	bl	6fd0 <MyGame_Example_Vec3_parse_json_struct_inline>
    201c:	str	r0, [fp, #-12]
    2020:	b	2038 <MyGame_Example_Monster_parse_json_table+0xdb0>
    2024:	ldr	r0, [fp, #-8]
    2028:	ldr	r1, [fp, #-12]
    202c:	ldr	r2, [fp, #-16]
    2030:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2034:	str	r0, [fp, #-12]
    2038:	b	2050 <MyGame_Example_Monster_parse_json_table+0xdc8>
    203c:	ldr	r0, [fp, #-8]
    2040:	ldr	r1, [fp, #-12]
    2044:	ldr	r2, [fp, #-16]
    2048:	bl	0 <flatcc_json_parser_unmatched_symbol>
    204c:	str	r0, [fp, #-12]
    2050:	b	2054 <MyGame_Example_Monster_parse_json_table+0xdcc>
    2054:	b	2058 <MyGame_Example_Monster_parse_json_table+0xdd0>
    2058:	b	24d8 <MyGame_Example_Monster_parse_json_table+0x1250>
    205c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    2060:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2064:	movw	r2, #29556	; 0x7374
    2068:	movt	r2, #29797	; 0x7465
    206c:	eor	r1, r1, r2
    2070:	eor	r0, r0, #52	; 0x34
    2074:	orr	r0, r1, r0, lsl #24
    2078:	cmp	r0, #0
    207c:	bne	21ac <MyGame_Example_Monster_parse_json_table+0xf24>
    2080:	b	2084 <MyGame_Example_Monster_parse_json_table+0xdfc>
    2084:	ldr	r0, [fp, #-8]
    2088:	ldr	r1, [fp, #-12]
    208c:	str	r1, [fp, #-40]	; 0xffffffd8
    2090:	ldr	r2, [fp, #-16]
    2094:	movw	r3, #5
    2098:	bl	4dc4 <flatcc_json_parser_match_symbol>
    209c:	str	r0, [fp, #-12]
    20a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    20a4:	ldr	r1, [fp, #-12]
    20a8:	cmp	r0, r1
    20ac:	beq	21a4 <MyGame_Example_Monster_parse_json_table+0xf1c>
    20b0:	ldr	r3, [pc, #4092]	; 30b4 <MyGame_Example_Monster_parse_json_table+0x1e2c>
    20b4:	ldr	r0, [fp, #-8]
    20b8:	ldr	r0, [r0]
    20bc:	movw	r1, #4
    20c0:	movw	r2, #2
    20c4:	uxth	r2, r2
    20c8:	bl	0 <flatcc_builder_start_vector>
    20cc:	cmp	r0, #0
    20d0:	beq	20d8 <MyGame_Example_Monster_parse_json_table+0xe50>
    20d4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    20d8:	ldr	r0, [fp, #-8]
    20dc:	ldr	r1, [fp, #-12]
    20e0:	ldr	r2, [fp, #-16]
    20e4:	sub	r3, fp, #24
    20e8:	bl	6614 <flatcc_json_parser_array_start>
    20ec:	str	r0, [fp, #-12]
    20f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    20f4:	cmp	r0, #0
    20f8:	beq	2154 <MyGame_Example_Monster_parse_json_table+0xecc>
    20fc:	ldr	r0, [fp, #-8]
    2100:	ldr	r0, [r0]
    2104:	movw	r1, #1
    2108:	bl	0 <flatcc_builder_extend_vector>
    210c:	str	r0, [fp, #-28]	; 0xffffffe4
    2110:	movw	r1, #0
    2114:	cmp	r0, r1
    2118:	bne	2120 <MyGame_Example_Monster_parse_json_table+0xe98>
    211c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2120:	ldr	r0, [fp, #-8]
    2124:	ldr	r1, [fp, #-12]
    2128:	ldr	r2, [fp, #-16]
    212c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2130:	bl	76d8 <MyGame_Example_Test_parse_json_struct_inline>
    2134:	str	r0, [fp, #-12]
    2138:	ldr	r0, [fp, #-8]
    213c:	ldr	r1, [fp, #-12]
    2140:	ldr	r2, [fp, #-16]
    2144:	sub	r3, fp, #24
    2148:	bl	6a2c <flatcc_json_parser_array_end>
    214c:	str	r0, [fp, #-12]
    2150:	b	20f0 <MyGame_Example_Monster_parse_json_table+0xe68>
    2154:	ldr	r0, [fp, #-8]
    2158:	ldr	r0, [r0]
    215c:	bl	0 <flatcc_builder_end_vector>
    2160:	str	r0, [fp, #-32]	; 0xffffffe0
    2164:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2168:	cmp	r0, #0
    216c:	beq	2190 <MyGame_Example_Monster_parse_json_table+0xf08>
    2170:	ldr	r0, [fp, #-8]
    2174:	ldr	r0, [r0]
    2178:	movw	r1, #9
    217c:	bl	0 <flatcc_builder_table_add_offset>
    2180:	str	r0, [fp, #-36]	; 0xffffffdc
    2184:	movw	r1, #0
    2188:	cmp	r0, r1
    218c:	bne	2194 <MyGame_Example_Monster_parse_json_table+0xf0c>
    2190:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2194:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2198:	ldr	r1, [fp, #-36]	; 0xffffffdc
    219c:	str	r0, [r1]
    21a0:	b	21a8 <MyGame_Example_Monster_parse_json_table+0xf20>
    21a4:	b	224c <MyGame_Example_Monster_parse_json_table+0xfc4>
    21a8:	b	2248 <MyGame_Example_Monster_parse_json_table+0xfc0>
    21ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    21b0:	movw	r1, #29556	; 0x7374
    21b4:	movt	r1, #29797	; 0x7465
    21b8:	teq	r0, r1
    21bc:	bne	2240 <MyGame_Example_Monster_parse_json_table+0xfb8>
    21c0:	b	21c4 <MyGame_Example_Monster_parse_json_table+0xf3c>
    21c4:	ldr	r0, [fp, #-8]
    21c8:	ldr	r1, [fp, #-12]
    21cc:	str	r1, [fp, #-40]	; 0xffffffd8
    21d0:	ldr	r2, [fp, #-16]
    21d4:	movw	r3, #4
    21d8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    21dc:	str	r0, [fp, #-12]
    21e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    21e4:	ldr	r1, [fp, #-12]
    21e8:	cmp	r0, r1
    21ec:	beq	2238 <MyGame_Example_Monster_parse_json_table+0xfb0>
    21f0:	ldr	r0, [fp, #-8]
    21f4:	ldr	r1, [fp, #-12]
    21f8:	ldr	r2, [fp, #-16]
    21fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2200:	movw	ip, #0
    2204:	str	r3, [sp, #28]
    2208:	mov	r3, ip
    220c:	movw	ip, #8
    2210:	uxth	ip, ip
    2214:	str	ip, [sp]
    2218:	ldr	ip, [sp, #28]
    221c:	str	ip, [sp, #4]
    2220:	movw	lr, #0
    2224:	movt	lr, #0
    2228:	str	lr, [sp, #8]
    222c:	bl	0 <flatcc_json_parser_union>
    2230:	str	r0, [fp, #-12]
    2234:	b	223c <MyGame_Example_Monster_parse_json_table+0xfb4>
    2238:	b	224c <MyGame_Example_Monster_parse_json_table+0xfc4>
    223c:	b	2244 <MyGame_Example_Monster_parse_json_table+0xfbc>
    2240:	b	224c <MyGame_Example_Monster_parse_json_table+0xfc4>
    2244:	b	2248 <MyGame_Example_Monster_parse_json_table+0xfc0>
    2248:	b	24d4 <MyGame_Example_Monster_parse_json_table+0x124c>
    224c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    2250:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2254:	movw	r2, #29556	; 0x7374
    2258:	movt	r2, #29797	; 0x7465
    225c:	eor	r1, r1, r2
    2260:	eor	r0, r0, #53	; 0x35
    2264:	orr	r0, r1, r0, lsl #24
    2268:	cmp	r0, #0
    226c:	bne	239c <MyGame_Example_Monster_parse_json_table+0x1114>
    2270:	b	2274 <MyGame_Example_Monster_parse_json_table+0xfec>
    2274:	ldr	r0, [fp, #-8]
    2278:	ldr	r1, [fp, #-12]
    227c:	str	r1, [fp, #-40]	; 0xffffffd8
    2280:	ldr	r2, [fp, #-16]
    2284:	movw	r3, #5
    2288:	bl	4dc4 <flatcc_json_parser_match_symbol>
    228c:	str	r0, [fp, #-12]
    2290:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2294:	ldr	r1, [fp, #-12]
    2298:	cmp	r0, r1
    229c:	beq	2394 <MyGame_Example_Monster_parse_json_table+0x110c>
    22a0:	ldr	r3, [pc, #3596]	; 30b4 <MyGame_Example_Monster_parse_json_table+0x1e2c>
    22a4:	ldr	r0, [fp, #-8]
    22a8:	ldr	r0, [r0]
    22ac:	movw	r1, #4
    22b0:	movw	r2, #2
    22b4:	uxth	r2, r2
    22b8:	bl	0 <flatcc_builder_start_vector>
    22bc:	cmp	r0, #0
    22c0:	beq	22c8 <MyGame_Example_Monster_parse_json_table+0x1040>
    22c4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    22c8:	ldr	r0, [fp, #-8]
    22cc:	ldr	r1, [fp, #-12]
    22d0:	ldr	r2, [fp, #-16]
    22d4:	sub	r3, fp, #24
    22d8:	bl	6614 <flatcc_json_parser_array_start>
    22dc:	str	r0, [fp, #-12]
    22e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22e4:	cmp	r0, #0
    22e8:	beq	2344 <MyGame_Example_Monster_parse_json_table+0x10bc>
    22ec:	ldr	r0, [fp, #-8]
    22f0:	ldr	r0, [r0]
    22f4:	movw	r1, #1
    22f8:	bl	0 <flatcc_builder_extend_vector>
    22fc:	str	r0, [fp, #-28]	; 0xffffffe4
    2300:	movw	r1, #0
    2304:	cmp	r0, r1
    2308:	bne	2310 <MyGame_Example_Monster_parse_json_table+0x1088>
    230c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2310:	ldr	r0, [fp, #-8]
    2314:	ldr	r1, [fp, #-12]
    2318:	ldr	r2, [fp, #-16]
    231c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2320:	bl	76d8 <MyGame_Example_Test_parse_json_struct_inline>
    2324:	str	r0, [fp, #-12]
    2328:	ldr	r0, [fp, #-8]
    232c:	ldr	r1, [fp, #-12]
    2330:	ldr	r2, [fp, #-16]
    2334:	sub	r3, fp, #24
    2338:	bl	6a2c <flatcc_json_parser_array_end>
    233c:	str	r0, [fp, #-12]
    2340:	b	22e0 <MyGame_Example_Monster_parse_json_table+0x1058>
    2344:	ldr	r0, [fp, #-8]
    2348:	ldr	r0, [r0]
    234c:	bl	0 <flatcc_builder_end_vector>
    2350:	str	r0, [fp, #-32]	; 0xffffffe0
    2354:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2358:	cmp	r0, #0
    235c:	beq	2380 <MyGame_Example_Monster_parse_json_table+0x10f8>
    2360:	ldr	r0, [fp, #-8]
    2364:	ldr	r0, [r0]
    2368:	movw	r1, #31
    236c:	bl	0 <flatcc_builder_table_add_offset>
    2370:	str	r0, [fp, #-36]	; 0xffffffdc
    2374:	movw	r1, #0
    2378:	cmp	r0, r1
    237c:	bne	2384 <MyGame_Example_Monster_parse_json_table+0x10fc>
    2380:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2384:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2388:	ldr	r1, [fp, #-36]	; 0xffffffdc
    238c:	str	r0, [r1]
    2390:	b	2398 <MyGame_Example_Monster_parse_json_table+0x1110>
    2394:	b	23a4 <MyGame_Example_Monster_parse_json_table+0x111c>
    2398:	b	23a0 <MyGame_Example_Monster_parse_json_table+0x1118>
    239c:	b	23a4 <MyGame_Example_Monster_parse_json_table+0x111c>
    23a0:	b	24d0 <MyGame_Example_Monster_parse_json_table+0x1248>
    23a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    23a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    23ac:	movw	r2, #29556	; 0x7374
    23b0:	movt	r2, #29797	; 0x7465
    23b4:	eor	r1, r1, r2
    23b8:	movw	r2, #31088	; 0x7970
    23bc:	movt	r2, #24436	; 0x5f74
    23c0:	eor	r0, r0, r2
    23c4:	orr	r0, r0, r1
    23c8:	cmp	r0, #0
    23cc:	bne	24b8 <MyGame_Example_Monster_parse_json_table+0x1230>
    23d0:	b	23d4 <MyGame_Example_Monster_parse_json_table+0x114c>
    23d4:	ldr	r0, [fp, #-12]
    23d8:	add	r0, r0, #8
    23dc:	str	r0, [fp, #-12]
    23e0:	ldr	r0, [fp, #-12]
    23e4:	ldr	r1, [fp, #-16]
    23e8:	bl	4d8c <flatcc_json_parser_symbol_part>
    23ec:	str	r1, [fp, #-44]	; 0xffffffd4
    23f0:	str	r0, [fp, #-48]	; 0xffffffd0
    23f4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    23f8:	mov	r1, #1694498816	; 0x65000000
    23fc:	teq	r1, r0, lsl #24
    2400:	bne	24a0 <MyGame_Example_Monster_parse_json_table+0x1218>
    2404:	b	2408 <MyGame_Example_Monster_parse_json_table+0x1180>
    2408:	ldr	r0, [fp, #-8]
    240c:	ldr	r1, [fp, #-12]
    2410:	str	r1, [fp, #-40]	; 0xffffffd8
    2414:	ldr	r2, [fp, #-16]
    2418:	movw	r3, #1
    241c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    2420:	str	r0, [fp, #-12]
    2424:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2428:	ldr	r1, [fp, #-12]
    242c:	cmp	r0, r1
    2430:	beq	2488 <MyGame_Example_Monster_parse_json_table+0x1200>
    2434:	ldr	r0, [fp, #-8]
    2438:	ldr	r1, [fp, #-12]
    243c:	ldr	r2, [fp, #-16]
    2440:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2444:	movw	ip, #0
    2448:	str	r3, [sp, #24]
    244c:	mov	r3, ip
    2450:	movw	ip, #8
    2454:	uxth	ip, ip
    2458:	str	ip, [sp]
    245c:	ldr	ip, [sp, #24]
    2460:	str	ip, [sp, #4]
    2464:	movw	lr, #0
    2468:	movt	lr, #0
    246c:	str	lr, [sp, #8]
    2470:	movw	lr, #0
    2474:	movt	lr, #0
    2478:	str	lr, [sp, #12]
    247c:	bl	0 <flatcc_json_parser_union_type>
    2480:	str	r0, [fp, #-12]
    2484:	b	249c <MyGame_Example_Monster_parse_json_table+0x1214>
    2488:	ldr	r0, [fp, #-8]
    248c:	ldr	r1, [fp, #-12]
    2490:	ldr	r2, [fp, #-16]
    2494:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2498:	str	r0, [fp, #-12]
    249c:	b	24b4 <MyGame_Example_Monster_parse_json_table+0x122c>
    24a0:	ldr	r0, [fp, #-8]
    24a4:	ldr	r1, [fp, #-12]
    24a8:	ldr	r2, [fp, #-16]
    24ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    24b0:	str	r0, [fp, #-12]
    24b4:	b	24cc <MyGame_Example_Monster_parse_json_table+0x1244>
    24b8:	ldr	r0, [fp, #-8]
    24bc:	ldr	r1, [fp, #-12]
    24c0:	ldr	r2, [fp, #-16]
    24c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    24c8:	str	r0, [fp, #-12]
    24cc:	b	24d0 <MyGame_Example_Monster_parse_json_table+0x1248>
    24d0:	b	24d4 <MyGame_Example_Monster_parse_json_table+0x124c>
    24d4:	b	24d8 <MyGame_Example_Monster_parse_json_table+0x1250>
    24d8:	b	24dc <MyGame_Example_Monster_parse_json_table+0x1254>
    24dc:	b	4b20 <MyGame_Example_Monster_parse_json_table+0x3898>
    24e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    24e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    24e8:	movw	r2, #65535	; 0xffff
    24ec:	movt	r2, #26162	; 0x6632
    24f0:	subs	r0, r2, r0
    24f4:	movw	r2, #29556	; 0x7374
    24f8:	movt	r2, #29797	; 0x7465
    24fc:	sbcs	r1, r2, r1
    2500:	bcc	3538 <MyGame_Example_Monster_parse_json_table+0x22b0>
    2504:	b	2508 <MyGame_Example_Monster_parse_json_table+0x1280>
    2508:	ldr	r0, [fp, #-48]	; 0xffffffd0
    250c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2510:	movw	r2, #29556	; 0x7374
    2514:	movt	r2, #29797	; 0x7465
    2518:	eor	r1, r1, r2
    251c:	movw	r2, #29281	; 0x7261
    2520:	movt	r2, #24946	; 0x6172
    2524:	eor	r0, r0, r2
    2528:	orr	r0, r0, r1
    252c:	cmp	r0, #0
    2530:	bne	2e40 <MyGame_Example_Monster_parse_json_table+0x1bb8>
    2534:	b	2538 <MyGame_Example_Monster_parse_json_table+0x12b0>
    2538:	ldr	r0, [fp, #-12]
    253c:	add	r0, r0, #8
    2540:	str	r0, [fp, #-12]
    2544:	ldr	r0, [fp, #-12]
    2548:	ldr	r1, [fp, #-16]
    254c:	bl	4d8c <flatcc_json_parser_symbol_part>
    2550:	str	r1, [fp, #-44]	; 0xffffffd4
    2554:	str	r0, [fp, #-48]	; 0xffffffd0
    2558:	ldr	r0, [fp, #-48]	; 0xffffffd0
    255c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2560:	movw	r2, #26989	; 0x696d
    2564:	movt	r2, #29810	; 0x7472
    2568:	subs	r0, r2, r0
    256c:	movw	r2, #26227	; 0x6673
    2570:	movt	r2, #31087	; 0x796f
    2574:	sbcs	r1, r2, r1
    2578:	bcc	294c <MyGame_Example_Monster_parse_json_table+0x16c4>
    257c:	b	2580 <MyGame_Example_Monster_parse_json_table+0x12f8>
    2580:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2584:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2588:	movw	r2, #26210	; 0x6662
    258c:	movt	r2, #31087	; 0x796f
    2590:	eor	r1, r1, r2
    2594:	movw	r2, #27763	; 0x6c73
    2598:	movt	r2, #28527	; 0x6f6f
    259c:	eor	r0, r0, r2
    25a0:	orr	r0, r0, r1
    25a4:	cmp	r0, #0
    25a8:	bne	2750 <MyGame_Example_Monster_parse_json_table+0x14c8>
    25ac:	b	25b0 <MyGame_Example_Monster_parse_json_table+0x1328>
    25b0:	ldr	r0, [fp, #-8]
    25b4:	ldr	r1, [fp, #-12]
    25b8:	str	r1, [fp, #-40]	; 0xffffffd8
    25bc:	ldr	r2, [fp, #-16]
    25c0:	movw	r3, #8
    25c4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    25c8:	str	r0, [fp, #-12]
    25cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    25d0:	ldr	r1, [fp, #-12]
    25d4:	cmp	r0, r1
    25d8:	beq	2748 <MyGame_Example_Monster_parse_json_table+0x14c0>
    25dc:	ldr	r0, [fp, #-8]
    25e0:	ldr	r0, [r0]
    25e4:	movw	r1, #1
    25e8:	movw	r2, #1
    25ec:	uxth	r2, r2
    25f0:	mvn	r3, #0
    25f4:	bl	0 <flatcc_builder_start_vector>
    25f8:	cmp	r0, #0
    25fc:	beq	2604 <MyGame_Example_Monster_parse_json_table+0x137c>
    2600:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2604:	ldr	r0, [fp, #-8]
    2608:	ldr	r1, [fp, #-12]
    260c:	ldr	r2, [fp, #-16]
    2610:	sub	r3, fp, #24
    2614:	bl	6614 <flatcc_json_parser_array_start>
    2618:	str	r0, [fp, #-12]
    261c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2620:	cmp	r0, #0
    2624:	beq	26f8 <MyGame_Example_Monster_parse_json_table+0x1470>
    2628:	movw	r0, #0
    262c:	strb	r0, [fp, #-61]	; 0xffffffc3
    2630:	ldr	r0, [fp, #-8]
    2634:	ldr	r0, [r0]
    2638:	movw	r1, #1
    263c:	bl	0 <flatcc_builder_extend_vector>
    2640:	str	r0, [fp, #-28]	; 0xffffffe4
    2644:	movw	r1, #0
    2648:	cmp	r0, r1
    264c:	bne	2654 <MyGame_Example_Monster_parse_json_table+0x13cc>
    2650:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2654:	ldr	r0, [fp, #-8]
    2658:	ldr	r1, [fp, #-12]
    265c:	str	r1, [fp, #-40]	; 0xffffffd8
    2660:	ldr	r2, [fp, #-16]
    2664:	sub	r3, fp, #61	; 0x3d
    2668:	bl	7fa0 <flatcc_json_parser_bool>
    266c:	str	r0, [fp, #-12]
    2670:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2674:	ldr	r1, [fp, #-12]
    2678:	cmp	r0, r1
    267c:	bne	26d0 <MyGame_Example_Monster_parse_json_table+0x1448>
    2680:	ldr	r0, [fp, #-8]
    2684:	ldr	r1, [fp, #-12]
    2688:	str	r1, [fp, #-40]	; 0xffffffd8
    268c:	ldr	r2, [fp, #-16]
    2690:	movw	r3, #0
    2694:	movt	r3, #0
    2698:	sub	ip, fp, #61	; 0x3d
    269c:	str	ip, [sp]
    26a0:	bl	80b8 <flatcc_json_parser_symbolic_bool>
    26a4:	str	r0, [fp, #-12]
    26a8:	ldr	r0, [fp, #-12]
    26ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    26b0:	cmp	r0, r1
    26b4:	beq	26c8 <MyGame_Example_Monster_parse_json_table+0x1440>
    26b8:	ldr	r0, [fp, #-12]
    26bc:	ldr	r1, [fp, #-16]
    26c0:	cmp	r0, r1
    26c4:	bne	26cc <MyGame_Example_Monster_parse_json_table+0x1444>
    26c8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    26cc:	b	26d0 <MyGame_Example_Monster_parse_json_table+0x1448>
    26d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    26d4:	ldrb	r1, [fp, #-61]	; 0xffffffc3
    26d8:	bl	82e4 <flatbuffers_bool_write_to_pe>
    26dc:	ldr	r0, [fp, #-8]
    26e0:	ldr	r1, [fp, #-12]
    26e4:	ldr	r2, [fp, #-16]
    26e8:	sub	r3, fp, #24
    26ec:	bl	6a2c <flatcc_json_parser_array_end>
    26f0:	str	r0, [fp, #-12]
    26f4:	b	261c <MyGame_Example_Monster_parse_json_table+0x1394>
    26f8:	ldr	r0, [fp, #-8]
    26fc:	ldr	r0, [r0]
    2700:	bl	0 <flatcc_builder_end_vector>
    2704:	str	r0, [fp, #-32]	; 0xffffffe0
    2708:	ldr	r0, [fp, #-32]	; 0xffffffe0
    270c:	cmp	r0, #0
    2710:	beq	2734 <MyGame_Example_Monster_parse_json_table+0x14ac>
    2714:	ldr	r0, [fp, #-8]
    2718:	ldr	r0, [r0]
    271c:	movw	r1, #24
    2720:	bl	0 <flatcc_builder_table_add_offset>
    2724:	str	r0, [fp, #-36]	; 0xffffffdc
    2728:	movw	r1, #0
    272c:	cmp	r0, r1
    2730:	bne	2738 <MyGame_Example_Monster_parse_json_table+0x14b0>
    2734:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2738:	ldr	r0, [fp, #-32]	; 0xffffffe0
    273c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2740:	str	r0, [r1]
    2744:	b	274c <MyGame_Example_Monster_parse_json_table+0x14c4>
    2748:	b	2758 <MyGame_Example_Monster_parse_json_table+0x14d0>
    274c:	b	2754 <MyGame_Example_Monster_parse_json_table+0x14cc>
    2750:	b	2758 <MyGame_Example_Monster_parse_json_table+0x14d0>
    2754:	b	2948 <MyGame_Example_Monster_parse_json_table+0x16c0>
    2758:	ldr	r0, [fp, #-48]	; 0xffffffd0
    275c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2760:	movw	r2, #26227	; 0x6673
    2764:	movt	r2, #31087	; 0x796f
    2768:	eor	r1, r1, r2
    276c:	movw	r2, #29797	; 0x7465
    2770:	movt	r2, #28530	; 0x6f72
    2774:	eor	r0, r0, r2
    2778:	orr	r0, r0, r1
    277c:	cmp	r0, #0
    2780:	bne	2930 <MyGame_Example_Monster_parse_json_table+0x16a8>
    2784:	b	2788 <MyGame_Example_Monster_parse_json_table+0x1500>
    2788:	ldr	r0, [fp, #-12]
    278c:	add	r0, r0, #8
    2790:	str	r0, [fp, #-12]
    2794:	ldr	r0, [fp, #-12]
    2798:	ldr	r1, [fp, #-16]
    279c:	bl	4d8c <flatcc_json_parser_symbol_part>
    27a0:	str	r1, [fp, #-44]	; 0xffffffd4
    27a4:	str	r0, [fp, #-48]	; 0xffffffd0
    27a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    27ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    27b0:	movw	r2, #29556	; 0x7374
    27b4:	movt	r2, #100	; 0x64
    27b8:	eor	r2, r2, r1, lsr #8
    27bc:	lsr	r0, r0, #8
    27c0:	orr	r0, r0, r1, lsl #24
    27c4:	movw	r1, #25460	; 0x6374
    27c8:	movt	r1, #29301	; 0x7275
    27cc:	eor	r0, r0, r1
    27d0:	orr	r0, r0, r2
    27d4:	cmp	r0, #0
    27d8:	bne	2918 <MyGame_Example_Monster_parse_json_table+0x1690>
    27dc:	b	27e0 <MyGame_Example_Monster_parse_json_table+0x1558>
    27e0:	ldr	r0, [fp, #-8]
    27e4:	ldr	r1, [fp, #-12]
    27e8:	str	r1, [fp, #-40]	; 0xffffffd8
    27ec:	ldr	r2, [fp, #-16]
    27f0:	movw	r3, #7
    27f4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    27f8:	str	r0, [fp, #-12]
    27fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2800:	ldr	r1, [fp, #-12]
    2804:	cmp	r0, r1
    2808:	beq	2900 <MyGame_Example_Monster_parse_json_table+0x1678>
    280c:	ldr	r3, [pc, #3952]	; 3784 <MyGame_Example_Monster_parse_json_table+0x24fc>
    2810:	ldr	r0, [fp, #-8]
    2814:	ldr	r0, [r0]
    2818:	movw	r1, #8
    281c:	movw	r2, #4
    2820:	uxth	r2, r2
    2824:	bl	0 <flatcc_builder_start_vector>
    2828:	cmp	r0, #0
    282c:	beq	2834 <MyGame_Example_Monster_parse_json_table+0x15ac>
    2830:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2834:	ldr	r0, [fp, #-8]
    2838:	ldr	r1, [fp, #-12]
    283c:	ldr	r2, [fp, #-16]
    2840:	sub	r3, fp, #24
    2844:	bl	6614 <flatcc_json_parser_array_start>
    2848:	str	r0, [fp, #-12]
    284c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2850:	cmp	r0, #0
    2854:	beq	28b0 <MyGame_Example_Monster_parse_json_table+0x1628>
    2858:	ldr	r0, [fp, #-8]
    285c:	ldr	r0, [r0]
    2860:	movw	r1, #1
    2864:	bl	0 <flatcc_builder_extend_vector>
    2868:	str	r0, [fp, #-28]	; 0xffffffe4
    286c:	movw	r1, #0
    2870:	cmp	r0, r1
    2874:	bne	287c <MyGame_Example_Monster_parse_json_table+0x15f4>
    2878:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    287c:	ldr	r0, [fp, #-8]
    2880:	ldr	r1, [fp, #-12]
    2884:	ldr	r2, [fp, #-16]
    2888:	ldr	r3, [fp, #-28]	; 0xffffffe4
    288c:	bl	8310 <MyGame_Example_Ability_parse_json_struct_inline>
    2890:	str	r0, [fp, #-12]
    2894:	ldr	r0, [fp, #-8]
    2898:	ldr	r1, [fp, #-12]
    289c:	ldr	r2, [fp, #-16]
    28a0:	sub	r3, fp, #24
    28a4:	bl	6a2c <flatcc_json_parser_array_end>
    28a8:	str	r0, [fp, #-12]
    28ac:	b	284c <MyGame_Example_Monster_parse_json_table+0x15c4>
    28b0:	ldr	r0, [fp, #-8]
    28b4:	ldr	r0, [r0]
    28b8:	bl	0 <flatcc_builder_end_vector>
    28bc:	str	r0, [fp, #-32]	; 0xffffffe0
    28c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    28c4:	cmp	r0, #0
    28c8:	beq	28ec <MyGame_Example_Monster_parse_json_table+0x1664>
    28cc:	ldr	r0, [fp, #-8]
    28d0:	ldr	r0, [r0]
    28d4:	movw	r1, #29
    28d8:	bl	0 <flatcc_builder_table_add_offset>
    28dc:	str	r0, [fp, #-36]	; 0xffffffdc
    28e0:	movw	r1, #0
    28e4:	cmp	r0, r1
    28e8:	bne	28f0 <MyGame_Example_Monster_parse_json_table+0x1668>
    28ec:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    28f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    28f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    28f8:	str	r0, [r1]
    28fc:	b	2914 <MyGame_Example_Monster_parse_json_table+0x168c>
    2900:	ldr	r0, [fp, #-8]
    2904:	ldr	r1, [fp, #-12]
    2908:	ldr	r2, [fp, #-16]
    290c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2910:	str	r0, [fp, #-12]
    2914:	b	292c <MyGame_Example_Monster_parse_json_table+0x16a4>
    2918:	ldr	r0, [fp, #-8]
    291c:	ldr	r1, [fp, #-12]
    2920:	ldr	r2, [fp, #-16]
    2924:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2928:	str	r0, [fp, #-12]
    292c:	b	2944 <MyGame_Example_Monster_parse_json_table+0x16bc>
    2930:	ldr	r0, [fp, #-8]
    2934:	ldr	r1, [fp, #-12]
    2938:	ldr	r2, [fp, #-16]
    293c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2940:	str	r0, [fp, #-12]
    2944:	b	2948 <MyGame_Example_Monster_parse_json_table+0x16c0>
    2948:	b	2e3c <MyGame_Example_Monster_parse_json_table+0x1bb4>
    294c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2950:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2954:	movw	r2, #26227	; 0x6673
    2958:	movt	r2, #31087	; 0x796f
    295c:	eor	r1, r1, r2
    2960:	movw	r2, #26990	; 0x696e
    2964:	movt	r2, #29810	; 0x7472
    2968:	eor	r0, r0, r2
    296c:	orr	r0, r0, r1
    2970:	cmp	r0, #0
    2974:	bne	2c64 <MyGame_Example_Monster_parse_json_table+0x19dc>
    2978:	b	297c <MyGame_Example_Monster_parse_json_table+0x16f4>
    297c:	ldr	r0, [fp, #-12]
    2980:	add	r0, r0, #8
    2984:	str	r0, [fp, #-12]
    2988:	ldr	r0, [fp, #-12]
    298c:	ldr	r1, [fp, #-16]
    2990:	bl	4d8c <flatcc_json_parser_symbol_part>
    2994:	str	r1, [fp, #-44]	; 0xffffffd4
    2998:	str	r0, [fp, #-48]	; 0xffffffd0
    299c:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    29a0:	movw	r1, #0
    29a4:	movt	r1, #26418	; 0x6732
    29a8:	teq	r1, r0, lsl #16
    29ac:	bne	2af4 <MyGame_Example_Monster_parse_json_table+0x186c>
    29b0:	b	29b4 <MyGame_Example_Monster_parse_json_table+0x172c>
    29b4:	ldr	r0, [fp, #-8]
    29b8:	ldr	r1, [fp, #-12]
    29bc:	str	r1, [fp, #-40]	; 0xffffffd8
    29c0:	ldr	r2, [fp, #-16]
    29c4:	movw	r3, #2
    29c8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    29cc:	str	r0, [fp, #-12]
    29d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    29d4:	ldr	r1, [fp, #-12]
    29d8:	cmp	r0, r1
    29dc:	beq	2adc <MyGame_Example_Monster_parse_json_table+0x1854>
    29e0:	ldr	r0, [fp, #-8]
    29e4:	ldr	r0, [r0]
    29e8:	bl	0 <flatcc_builder_start_offset_vector>
    29ec:	cmp	r0, #0
    29f0:	beq	29f8 <MyGame_Example_Monster_parse_json_table+0x1770>
    29f4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    29f8:	ldr	r0, [fp, #-8]
    29fc:	ldr	r1, [fp, #-12]
    2a00:	ldr	r2, [fp, #-16]
    2a04:	sub	r3, fp, #24
    2a08:	bl	6614 <flatcc_json_parser_array_start>
    2a0c:	str	r0, [fp, #-12]
    2a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2a14:	cmp	r0, #0
    2a18:	beq	2a8c <MyGame_Example_Monster_parse_json_table+0x1804>
    2a1c:	ldr	r0, [fp, #-8]
    2a20:	ldr	r1, [fp, #-12]
    2a24:	ldr	r2, [fp, #-16]
    2a28:	sub	r3, fp, #32
    2a2c:	bl	0 <flatcc_json_parser_build_string>
    2a30:	str	r0, [fp, #-12]
    2a34:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2a38:	cmp	r0, #0
    2a3c:	beq	2a60 <MyGame_Example_Monster_parse_json_table+0x17d8>
    2a40:	ldr	r0, [fp, #-8]
    2a44:	ldr	r0, [r0]
    2a48:	movw	r1, #1
    2a4c:	bl	0 <flatcc_builder_extend_offset_vector>
    2a50:	str	r0, [fp, #-36]	; 0xffffffdc
    2a54:	movw	r1, #0
    2a58:	cmp	r0, r1
    2a5c:	bne	2a64 <MyGame_Example_Monster_parse_json_table+0x17dc>
    2a60:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2a68:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2a6c:	str	r0, [r1]
    2a70:	ldr	r0, [fp, #-8]
    2a74:	ldr	r1, [fp, #-12]
    2a78:	ldr	r2, [fp, #-16]
    2a7c:	sub	r3, fp, #24
    2a80:	bl	6a2c <flatcc_json_parser_array_end>
    2a84:	str	r0, [fp, #-12]
    2a88:	b	2a10 <MyGame_Example_Monster_parse_json_table+0x1788>
    2a8c:	ldr	r0, [fp, #-8]
    2a90:	ldr	r0, [r0]
    2a94:	bl	0 <flatcc_builder_end_offset_vector>
    2a98:	str	r0, [fp, #-32]	; 0xffffffe0
    2a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2aa0:	cmp	r0, #0
    2aa4:	beq	2ac8 <MyGame_Example_Monster_parse_json_table+0x1840>
    2aa8:	ldr	r0, [fp, #-8]
    2aac:	ldr	r0, [r0]
    2ab0:	movw	r1, #28
    2ab4:	bl	0 <flatcc_builder_table_add_offset>
    2ab8:	str	r0, [fp, #-36]	; 0xffffffdc
    2abc:	movw	r1, #0
    2ac0:	cmp	r0, r1
    2ac4:	bne	2acc <MyGame_Example_Monster_parse_json_table+0x1844>
    2ac8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2ad0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2ad4:	str	r0, [r1]
    2ad8:	b	2af0 <MyGame_Example_Monster_parse_json_table+0x1868>
    2adc:	ldr	r0, [fp, #-8]
    2ae0:	ldr	r1, [fp, #-12]
    2ae4:	ldr	r2, [fp, #-16]
    2ae8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2aec:	str	r0, [fp, #-12]
    2af0:	b	2c60 <MyGame_Example_Monster_parse_json_table+0x19d8>
    2af4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    2af8:	mov	r1, #1728053248	; 0x67000000
    2afc:	teq	r1, r0, lsl #24
    2b00:	bne	2c48 <MyGame_Example_Monster_parse_json_table+0x19c0>
    2b04:	b	2b08 <MyGame_Example_Monster_parse_json_table+0x1880>
    2b08:	ldr	r0, [fp, #-8]
    2b0c:	ldr	r1, [fp, #-12]
    2b10:	str	r1, [fp, #-40]	; 0xffffffd8
    2b14:	ldr	r2, [fp, #-16]
    2b18:	movw	r3, #1
    2b1c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    2b20:	str	r0, [fp, #-12]
    2b24:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2b28:	ldr	r1, [fp, #-12]
    2b2c:	cmp	r0, r1
    2b30:	beq	2c30 <MyGame_Example_Monster_parse_json_table+0x19a8>
    2b34:	ldr	r0, [fp, #-8]
    2b38:	ldr	r0, [r0]
    2b3c:	bl	0 <flatcc_builder_start_offset_vector>
    2b40:	cmp	r0, #0
    2b44:	beq	2b4c <MyGame_Example_Monster_parse_json_table+0x18c4>
    2b48:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2b4c:	ldr	r0, [fp, #-8]
    2b50:	ldr	r1, [fp, #-12]
    2b54:	ldr	r2, [fp, #-16]
    2b58:	sub	r3, fp, #24
    2b5c:	bl	6614 <flatcc_json_parser_array_start>
    2b60:	str	r0, [fp, #-12]
    2b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b68:	cmp	r0, #0
    2b6c:	beq	2be0 <MyGame_Example_Monster_parse_json_table+0x1958>
    2b70:	ldr	r0, [fp, #-8]
    2b74:	ldr	r1, [fp, #-12]
    2b78:	ldr	r2, [fp, #-16]
    2b7c:	sub	r3, fp, #32
    2b80:	bl	0 <flatcc_json_parser_build_string>
    2b84:	str	r0, [fp, #-12]
    2b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2b8c:	cmp	r0, #0
    2b90:	beq	2bb4 <MyGame_Example_Monster_parse_json_table+0x192c>
    2b94:	ldr	r0, [fp, #-8]
    2b98:	ldr	r0, [r0]
    2b9c:	movw	r1, #1
    2ba0:	bl	0 <flatcc_builder_extend_offset_vector>
    2ba4:	str	r0, [fp, #-36]	; 0xffffffdc
    2ba8:	movw	r1, #0
    2bac:	cmp	r0, r1
    2bb0:	bne	2bb8 <MyGame_Example_Monster_parse_json_table+0x1930>
    2bb4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2bbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2bc0:	str	r0, [r1]
    2bc4:	ldr	r0, [fp, #-8]
    2bc8:	ldr	r1, [fp, #-12]
    2bcc:	ldr	r2, [fp, #-16]
    2bd0:	sub	r3, fp, #24
    2bd4:	bl	6a2c <flatcc_json_parser_array_end>
    2bd8:	str	r0, [fp, #-12]
    2bdc:	b	2b64 <MyGame_Example_Monster_parse_json_table+0x18dc>
    2be0:	ldr	r0, [fp, #-8]
    2be4:	ldr	r0, [r0]
    2be8:	bl	0 <flatcc_builder_end_offset_vector>
    2bec:	str	r0, [fp, #-32]	; 0xffffffe0
    2bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2bf4:	cmp	r0, #0
    2bf8:	beq	2c1c <MyGame_Example_Monster_parse_json_table+0x1994>
    2bfc:	ldr	r0, [fp, #-8]
    2c00:	ldr	r0, [r0]
    2c04:	movw	r1, #10
    2c08:	bl	0 <flatcc_builder_table_add_offset>
    2c0c:	str	r0, [fp, #-36]	; 0xffffffdc
    2c10:	movw	r1, #0
    2c14:	cmp	r0, r1
    2c18:	bne	2c20 <MyGame_Example_Monster_parse_json_table+0x1998>
    2c1c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2c20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2c24:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2c28:	str	r0, [r1]
    2c2c:	b	2c44 <MyGame_Example_Monster_parse_json_table+0x19bc>
    2c30:	ldr	r0, [fp, #-8]
    2c34:	ldr	r1, [fp, #-12]
    2c38:	ldr	r2, [fp, #-16]
    2c3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2c40:	str	r0, [fp, #-12]
    2c44:	b	2c5c <MyGame_Example_Monster_parse_json_table+0x19d4>
    2c48:	ldr	r0, [fp, #-8]
    2c4c:	ldr	r1, [fp, #-12]
    2c50:	ldr	r2, [fp, #-16]
    2c54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2c58:	str	r0, [fp, #-12]
    2c5c:	b	2c60 <MyGame_Example_Monster_parse_json_table+0x19d8>
    2c60:	b	2e38 <MyGame_Example_Monster_parse_json_table+0x1bb0>
    2c64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c68:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c6c:	movw	r2, #26228	; 0x6674
    2c70:	movt	r2, #31087	; 0x796f
    2c74:	eor	r1, r1, r2
    2c78:	movw	r2, #27749	; 0x6c65
    2c7c:	movt	r2, #24930	; 0x6162
    2c80:	eor	r0, r0, r2
    2c84:	orr	r0, r0, r1
    2c88:	cmp	r0, #0
    2c8c:	bne	2e20 <MyGame_Example_Monster_parse_json_table+0x1b98>
    2c90:	b	2c94 <MyGame_Example_Monster_parse_json_table+0x1a0c>
    2c94:	ldr	r0, [fp, #-12]
    2c98:	add	r0, r0, #8
    2c9c:	str	r0, [fp, #-12]
    2ca0:	ldr	r0, [fp, #-12]
    2ca4:	ldr	r1, [fp, #-16]
    2ca8:	bl	4d8c <flatcc_json_parser_symbol_part>
    2cac:	str	r1, [fp, #-44]	; 0xffffffd4
    2cb0:	str	r0, [fp, #-48]	; 0xffffffd0
    2cb4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    2cb8:	mov	r1, #1929379840	; 0x73000000
    2cbc:	teq	r1, r0, lsl #24
    2cc0:	bne	2e08 <MyGame_Example_Monster_parse_json_table+0x1b80>
    2cc4:	b	2cc8 <MyGame_Example_Monster_parse_json_table+0x1a40>
    2cc8:	ldr	r0, [fp, #-8]
    2ccc:	ldr	r1, [fp, #-12]
    2cd0:	str	r1, [fp, #-40]	; 0xffffffd8
    2cd4:	ldr	r2, [fp, #-16]
    2cd8:	movw	r3, #1
    2cdc:	bl	4dc4 <flatcc_json_parser_match_symbol>
    2ce0:	str	r0, [fp, #-12]
    2ce4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2ce8:	ldr	r1, [fp, #-12]
    2cec:	cmp	r0, r1
    2cf0:	beq	2df0 <MyGame_Example_Monster_parse_json_table+0x1b68>
    2cf4:	ldr	r0, [fp, #-8]
    2cf8:	ldr	r0, [r0]
    2cfc:	bl	0 <flatcc_builder_start_offset_vector>
    2d00:	cmp	r0, #0
    2d04:	beq	2d0c <MyGame_Example_Monster_parse_json_table+0x1a84>
    2d08:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2d0c:	ldr	r0, [fp, #-8]
    2d10:	ldr	r1, [fp, #-12]
    2d14:	ldr	r2, [fp, #-16]
    2d18:	sub	r3, fp, #24
    2d1c:	bl	6614 <flatcc_json_parser_array_start>
    2d20:	str	r0, [fp, #-12]
    2d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d28:	cmp	r0, #0
    2d2c:	beq	2da0 <MyGame_Example_Monster_parse_json_table+0x1b18>
    2d30:	ldr	r0, [fp, #-8]
    2d34:	ldr	r1, [fp, #-12]
    2d38:	ldr	r2, [fp, #-16]
    2d3c:	sub	r3, fp, #32
    2d40:	bl	1288 <MyGame_Example_Monster_parse_json_table>
    2d44:	str	r0, [fp, #-12]
    2d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d4c:	cmp	r0, #0
    2d50:	beq	2d74 <MyGame_Example_Monster_parse_json_table+0x1aec>
    2d54:	ldr	r0, [fp, #-8]
    2d58:	ldr	r0, [r0]
    2d5c:	movw	r1, #1
    2d60:	bl	0 <flatcc_builder_extend_offset_vector>
    2d64:	str	r0, [fp, #-36]	; 0xffffffdc
    2d68:	movw	r1, #0
    2d6c:	cmp	r0, r1
    2d70:	bne	2d78 <MyGame_Example_Monster_parse_json_table+0x1af0>
    2d74:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2d78:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2d80:	str	r0, [r1]
    2d84:	ldr	r0, [fp, #-8]
    2d88:	ldr	r1, [fp, #-12]
    2d8c:	ldr	r2, [fp, #-16]
    2d90:	sub	r3, fp, #24
    2d94:	bl	6a2c <flatcc_json_parser_array_end>
    2d98:	str	r0, [fp, #-12]
    2d9c:	b	2d24 <MyGame_Example_Monster_parse_json_table+0x1a9c>
    2da0:	ldr	r0, [fp, #-8]
    2da4:	ldr	r0, [r0]
    2da8:	bl	0 <flatcc_builder_end_offset_vector>
    2dac:	str	r0, [fp, #-32]	; 0xffffffe0
    2db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2db4:	cmp	r0, #0
    2db8:	beq	2ddc <MyGame_Example_Monster_parse_json_table+0x1b54>
    2dbc:	ldr	r0, [fp, #-8]
    2dc0:	ldr	r0, [r0]
    2dc4:	movw	r1, #11
    2dc8:	bl	0 <flatcc_builder_table_add_offset>
    2dcc:	str	r0, [fp, #-36]	; 0xffffffdc
    2dd0:	movw	r1, #0
    2dd4:	cmp	r0, r1
    2dd8:	bne	2de0 <MyGame_Example_Monster_parse_json_table+0x1b58>
    2ddc:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2de4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2de8:	str	r0, [r1]
    2dec:	b	2e04 <MyGame_Example_Monster_parse_json_table+0x1b7c>
    2df0:	ldr	r0, [fp, #-8]
    2df4:	ldr	r1, [fp, #-12]
    2df8:	ldr	r2, [fp, #-16]
    2dfc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2e00:	str	r0, [fp, #-12]
    2e04:	b	2e1c <MyGame_Example_Monster_parse_json_table+0x1b94>
    2e08:	ldr	r0, [fp, #-8]
    2e0c:	ldr	r1, [fp, #-12]
    2e10:	ldr	r2, [fp, #-16]
    2e14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2e18:	str	r0, [fp, #-12]
    2e1c:	b	2e34 <MyGame_Example_Monster_parse_json_table+0x1bac>
    2e20:	ldr	r0, [fp, #-8]
    2e24:	ldr	r1, [fp, #-12]
    2e28:	ldr	r2, [fp, #-16]
    2e2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2e30:	str	r0, [fp, #-12]
    2e34:	b	2e38 <MyGame_Example_Monster_parse_json_table+0x1bb0>
    2e38:	b	2e3c <MyGame_Example_Monster_parse_json_table+0x1bb4>
    2e3c:	b	3534 <MyGame_Example_Monster_parse_json_table+0x22ac>
    2e40:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e44:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e48:	movw	r2, #28787	; 0x7073
    2e4c:	movt	r2, #25965	; 0x656d
    2e50:	subs	r0, r2, r0
    2e54:	movw	r2, #29556	; 0x7374
    2e58:	movt	r2, #29797	; 0x7465
    2e5c:	sbcs	r1, r2, r1
    2e60:	bcc	30fc <MyGame_Example_Monster_parse_json_table+0x1e74>
    2e64:	b	2e68 <MyGame_Example_Monster_parse_json_table+0x1be0>
    2e68:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e70:	movw	r2, #29556	; 0x7374
    2e74:	movt	r2, #29797	; 0x7465
    2e78:	eor	r1, r1, r2
    2e7c:	movw	r2, #29541	; 0x7365
    2e80:	movt	r2, #25185	; 0x6261
    2e84:	eor	r0, r0, r2
    2e88:	orr	r0, r0, r1
    2e8c:	cmp	r0, #0
    2e90:	bne	2f84 <MyGame_Example_Monster_parse_json_table+0x1cfc>
    2e94:	b	2e98 <MyGame_Example_Monster_parse_json_table+0x1c10>
    2e98:	ldr	r0, [fp, #-12]
    2e9c:	add	r0, r0, #8
    2ea0:	str	r0, [fp, #-12]
    2ea4:	ldr	r0, [fp, #-12]
    2ea8:	ldr	r1, [fp, #-16]
    2eac:	bl	4d8c <flatcc_json_parser_symbol_part>
    2eb0:	str	r1, [fp, #-44]	; 0xffffffd4
    2eb4:	str	r0, [fp, #-48]	; 0xffffffd0
    2eb8:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    2ebc:	movw	r1, #0
    2ec0:	movt	r1, #13876	; 0x3634
    2ec4:	teq	r1, r0, lsl #16
    2ec8:	bne	2f6c <MyGame_Example_Monster_parse_json_table+0x1ce4>
    2ecc:	b	2ed0 <MyGame_Example_Monster_parse_json_table+0x1c48>
    2ed0:	ldr	r0, [fp, #-8]
    2ed4:	ldr	r1, [fp, #-12]
    2ed8:	str	r1, [fp, #-40]	; 0xffffffd8
    2edc:	ldr	r2, [fp, #-16]
    2ee0:	movw	r3, #2
    2ee4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    2ee8:	str	r0, [fp, #-12]
    2eec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2ef0:	ldr	r1, [fp, #-12]
    2ef4:	cmp	r0, r1
    2ef8:	beq	2f54 <MyGame_Example_Monster_parse_json_table+0x1ccc>
    2efc:	ldr	r0, [fp, #-8]
    2f00:	ldr	r1, [fp, #-12]
    2f04:	ldr	r2, [fp, #-16]
    2f08:	sub	r3, fp, #32
    2f0c:	bl	85ec <MyGame_Example_TestBase64_parse_json_table>
    2f10:	str	r0, [fp, #-12]
    2f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2f18:	cmp	r0, #0
    2f1c:	beq	2f40 <MyGame_Example_Monster_parse_json_table+0x1cb8>
    2f20:	ldr	r0, [fp, #-8]
    2f24:	ldr	r0, [r0]
    2f28:	movw	r1, #35	; 0x23
    2f2c:	bl	0 <flatcc_builder_table_add_offset>
    2f30:	str	r0, [fp, #-36]	; 0xffffffdc
    2f34:	movw	r1, #0
    2f38:	cmp	r0, r1
    2f3c:	bne	2f44 <MyGame_Example_Monster_parse_json_table+0x1cbc>
    2f40:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    2f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2f48:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2f4c:	str	r0, [r1]
    2f50:	b	2f68 <MyGame_Example_Monster_parse_json_table+0x1ce0>
    2f54:	ldr	r0, [fp, #-8]
    2f58:	ldr	r1, [fp, #-12]
    2f5c:	ldr	r2, [fp, #-16]
    2f60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2f64:	str	r0, [fp, #-12]
    2f68:	b	2f80 <MyGame_Example_Monster_parse_json_table+0x1cf8>
    2f6c:	ldr	r0, [fp, #-8]
    2f70:	ldr	r1, [fp, #-12]
    2f74:	ldr	r2, [fp, #-16]
    2f78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2f7c:	str	r0, [fp, #-12]
    2f80:	b	30f8 <MyGame_Example_Monster_parse_json_table+0x1e70>
    2f84:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f88:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f8c:	movw	r2, #29556	; 0x7374
    2f90:	movt	r2, #29797	; 0x7465
    2f94:	eor	r1, r1, r2
    2f98:	movw	r2, #28524	; 0x6f6c
    2f9c:	movt	r2, #25199	; 0x626f
    2fa0:	eor	r0, r0, r2
    2fa4:	orr	r0, r0, r1
    2fa8:	cmp	r0, #0
    2fac:	bne	30e0 <MyGame_Example_Monster_parse_json_table+0x1e58>
    2fb0:	b	2fb4 <MyGame_Example_Monster_parse_json_table+0x1d2c>
    2fb4:	ldr	r0, [fp, #-8]
    2fb8:	ldr	r1, [fp, #-12]
    2fbc:	str	r1, [fp, #-40]	; 0xffffffd8
    2fc0:	ldr	r2, [fp, #-16]
    2fc4:	movw	r3, #8
    2fc8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    2fcc:	str	r0, [fp, #-12]
    2fd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fd4:	ldr	r1, [fp, #-12]
    2fd8:	cmp	r0, r1
    2fdc:	beq	30c8 <MyGame_Example_Monster_parse_json_table+0x1e40>
    2fe0:	movw	r0, #0
    2fe4:	strb	r0, [fp, #-62]	; 0xffffffc2
    2fe8:	ldr	r0, [fp, #-8]
    2fec:	ldr	r1, [fp, #-12]
    2ff0:	str	r1, [fp, #-40]	; 0xffffffd8
    2ff4:	ldr	r2, [fp, #-16]
    2ff8:	sub	r3, fp, #62	; 0x3e
    2ffc:	bl	7fa0 <flatcc_json_parser_bool>
    3000:	str	r0, [fp, #-12]
    3004:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3008:	ldr	r1, [fp, #-12]
    300c:	cmp	r0, r1
    3010:	bne	3064 <MyGame_Example_Monster_parse_json_table+0x1ddc>
    3014:	ldr	r0, [fp, #-8]
    3018:	ldr	r1, [fp, #-12]
    301c:	str	r1, [fp, #-40]	; 0xffffffd8
    3020:	ldr	r2, [fp, #-16]
    3024:	movw	r3, #0
    3028:	movt	r3, #0
    302c:	sub	ip, fp, #62	; 0x3e
    3030:	str	ip, [sp]
    3034:	bl	80b8 <flatcc_json_parser_symbolic_bool>
    3038:	str	r0, [fp, #-12]
    303c:	ldr	r0, [fp, #-12]
    3040:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3044:	cmp	r0, r1
    3048:	beq	305c <MyGame_Example_Monster_parse_json_table+0x1dd4>
    304c:	ldr	r0, [fp, #-12]
    3050:	ldr	r1, [fp, #-16]
    3054:	cmp	r0, r1
    3058:	bne	3060 <MyGame_Example_Monster_parse_json_table+0x1dd8>
    305c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3060:	b	3064 <MyGame_Example_Monster_parse_json_table+0x1ddc>
    3064:	ldrb	r0, [fp, #-62]	; 0xffffffc2
    3068:	cmp	r0, #1
    306c:	bne	3084 <MyGame_Example_Monster_parse_json_table+0x1dfc>
    3070:	ldr	r0, [fp, #-8]
    3074:	ldr	r0, [r0, #8]
    3078:	and	r0, r0, #2
    307c:	cmp	r0, #0
    3080:	beq	30c4 <MyGame_Example_Monster_parse_json_table+0x1e3c>
    3084:	ldr	r0, [fp, #-8]
    3088:	ldr	r0, [r0]
    308c:	movw	r1, #15
    3090:	movw	r2, #1
    3094:	movw	r3, #1
    3098:	uxth	r3, r3
    309c:	bl	0 <flatcc_builder_table_add>
    30a0:	str	r0, [fp, #-28]	; 0xffffffe4
    30a4:	movw	r1, #0
    30a8:	cmp	r0, r1
    30ac:	bne	30b8 <MyGame_Example_Monster_parse_json_table+0x1e30>
    30b0:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    30b4:	.word	0x3fffffff
    30b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    30bc:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    30c0:	bl	82e4 <flatbuffers_bool_write_to_pe>
    30c4:	b	30dc <MyGame_Example_Monster_parse_json_table+0x1e54>
    30c8:	ldr	r0, [fp, #-8]
    30cc:	ldr	r1, [fp, #-12]
    30d0:	ldr	r2, [fp, #-16]
    30d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    30d8:	str	r0, [fp, #-12]
    30dc:	b	30f4 <MyGame_Example_Monster_parse_json_table+0x1e6c>
    30e0:	ldr	r0, [fp, #-8]
    30e4:	ldr	r1, [fp, #-12]
    30e8:	ldr	r2, [fp, #-16]
    30ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    30f0:	str	r0, [fp, #-12]
    30f4:	b	30f8 <MyGame_Example_Monster_parse_json_table+0x1e70>
    30f8:	b	3530 <MyGame_Example_Monster_parse_json_table+0x22a8>
    30fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3100:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3104:	mvn	r2, #-1711276032	; 0x9a000000
    3108:	subs	r0, r2, r0
    310c:	movw	r2, #29556	; 0x7374
    3110:	movt	r2, #29797	; 0x7465
    3114:	sbcs	r1, r2, r1
    3118:	bcc	3250 <MyGame_Example_Monster_parse_json_table+0x1fc8>
    311c:	b	3120 <MyGame_Example_Monster_parse_json_table+0x1e98>
    3120:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3124:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3128:	movw	r2, #29556	; 0x7374
    312c:	movt	r2, #29797	; 0x7465
    3130:	eor	r1, r1, r2
    3134:	movw	r2, #28788	; 0x7074
    3138:	movt	r2, #25965	; 0x656d
    313c:	eor	r0, r0, r2
    3140:	orr	r0, r0, r1
    3144:	cmp	r0, #0
    3148:	bne	3238 <MyGame_Example_Monster_parse_json_table+0x1fb0>
    314c:	b	3150 <MyGame_Example_Monster_parse_json_table+0x1ec8>
    3150:	ldr	r0, [fp, #-12]
    3154:	add	r0, r0, #8
    3158:	str	r0, [fp, #-12]
    315c:	ldr	r0, [fp, #-12]
    3160:	ldr	r1, [fp, #-16]
    3164:	bl	4d8c <flatcc_json_parser_symbol_part>
    3168:	str	r1, [fp, #-44]	; 0xffffffd4
    316c:	str	r0, [fp, #-48]	; 0xffffffd0
    3170:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    3174:	mov	r1, #2030043136	; 0x79000000
    3178:	teq	r1, r0, lsl #24
    317c:	bne	3220 <MyGame_Example_Monster_parse_json_table+0x1f98>
    3180:	b	3184 <MyGame_Example_Monster_parse_json_table+0x1efc>
    3184:	ldr	r0, [fp, #-8]
    3188:	ldr	r1, [fp, #-12]
    318c:	str	r1, [fp, #-40]	; 0xffffffd8
    3190:	ldr	r2, [fp, #-16]
    3194:	movw	r3, #1
    3198:	bl	4dc4 <flatcc_json_parser_match_symbol>
    319c:	str	r0, [fp, #-12]
    31a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    31a4:	ldr	r1, [fp, #-12]
    31a8:	cmp	r0, r1
    31ac:	beq	3208 <MyGame_Example_Monster_parse_json_table+0x1f80>
    31b0:	ldr	r0, [fp, #-8]
    31b4:	ldr	r1, [fp, #-12]
    31b8:	ldr	r2, [fp, #-16]
    31bc:	sub	r3, fp, #32
    31c0:	bl	89c4 <MyGame_Example_Stat_parse_json_table>
    31c4:	str	r0, [fp, #-12]
    31c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    31cc:	cmp	r0, #0
    31d0:	beq	31f4 <MyGame_Example_Monster_parse_json_table+0x1f6c>
    31d4:	ldr	r0, [fp, #-8]
    31d8:	ldr	r0, [r0]
    31dc:	movw	r1, #14
    31e0:	bl	0 <flatcc_builder_table_add_offset>
    31e4:	str	r0, [fp, #-36]	; 0xffffffdc
    31e8:	movw	r1, #0
    31ec:	cmp	r0, r1
    31f0:	bne	31f8 <MyGame_Example_Monster_parse_json_table+0x1f70>
    31f4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    31f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    31fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3200:	str	r0, [r1]
    3204:	b	321c <MyGame_Example_Monster_parse_json_table+0x1f94>
    3208:	ldr	r0, [fp, #-8]
    320c:	ldr	r1, [fp, #-12]
    3210:	ldr	r2, [fp, #-16]
    3214:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3218:	str	r0, [fp, #-12]
    321c:	b	3234 <MyGame_Example_Monster_parse_json_table+0x1fac>
    3220:	ldr	r0, [fp, #-8]
    3224:	ldr	r1, [fp, #-12]
    3228:	ldr	r2, [fp, #-16]
    322c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3230:	str	r0, [fp, #-12]
    3234:	b	324c <MyGame_Example_Monster_parse_json_table+0x1fc4>
    3238:	ldr	r0, [fp, #-8]
    323c:	ldr	r1, [fp, #-12]
    3240:	ldr	r2, [fp, #-16]
    3244:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3248:	str	r0, [fp, #-12]
    324c:	b	352c <MyGame_Example_Monster_parse_json_table+0x22a4>
    3250:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    3254:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3258:	movw	r2, #29797	; 0x7465
    325c:	eor	r2, r2, r1, lsr #16
    3260:	orr	r0, r0, r1, lsl #16
    3264:	movw	r1, #26162	; 0x6632
    3268:	movt	r1, #29556	; 0x7374
    326c:	eor	r0, r0, r1
    3270:	orr	r0, r0, r2
    3274:	cmp	r0, #0
    3278:	bne	33b4 <MyGame_Example_Monster_parse_json_table+0x212c>
    327c:	b	3280 <MyGame_Example_Monster_parse_json_table+0x1ff8>
    3280:	ldr	r0, [fp, #-8]
    3284:	ldr	r1, [fp, #-12]
    3288:	str	r1, [fp, #-40]	; 0xffffffd8
    328c:	ldr	r2, [fp, #-16]
    3290:	movw	r3, #6
    3294:	bl	4dc4 <flatcc_json_parser_match_symbol>
    3298:	str	r0, [fp, #-12]
    329c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    32a0:	ldr	r1, [fp, #-12]
    32a4:	cmp	r0, r1
    32a8:	beq	339c <MyGame_Example_Monster_parse_json_table+0x2114>
    32ac:	vldr	s0, [pc, #1012]	; 36a8 <MyGame_Example_Monster_parse_json_table+0x2420>
    32b0:	vstr	s0, [fp, #-68]	; 0xffffffbc
    32b4:	ldr	r0, [fp, #-8]
    32b8:	ldr	r1, [fp, #-12]
    32bc:	str	r1, [fp, #-40]	; 0xffffffd8
    32c0:	ldr	r2, [fp, #-16]
    32c4:	sub	r3, fp, #68	; 0x44
    32c8:	bl	0 <flatcc_json_parser_float>
    32cc:	str	r0, [fp, #-12]
    32d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    32d4:	ldr	r1, [fp, #-12]
    32d8:	cmp	r0, r1
    32dc:	bne	3330 <MyGame_Example_Monster_parse_json_table+0x20a8>
    32e0:	ldr	r0, [fp, #-8]
    32e4:	ldr	r1, [fp, #-12]
    32e8:	str	r1, [fp, #-40]	; 0xffffffd8
    32ec:	ldr	r2, [fp, #-16]
    32f0:	movw	r3, #0
    32f4:	movt	r3, #0
    32f8:	sub	ip, fp, #68	; 0x44
    32fc:	str	ip, [sp]
    3300:	bl	8e80 <flatcc_json_parser_symbolic_float>
    3304:	str	r0, [fp, #-12]
    3308:	ldr	r0, [fp, #-12]
    330c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3310:	cmp	r0, r1
    3314:	beq	3328 <MyGame_Example_Monster_parse_json_table+0x20a0>
    3318:	ldr	r0, [fp, #-12]
    331c:	ldr	r1, [fp, #-16]
    3320:	cmp	r0, r1
    3324:	bne	332c <MyGame_Example_Monster_parse_json_table+0x20a4>
    3328:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    332c:	b	3330 <MyGame_Example_Monster_parse_json_table+0x20a8>
    3330:	vldr	s0, [fp, #-68]	; 0xffffffbc
    3334:	vcvt.f64.f32	d16, s0
    3338:	vmov.f64	d17, #8	; 0x40400000  3.0
    333c:	vcmp.f64	d16, d17
    3340:	vmrs	APSR_nzcv, fpscr
    3344:	bne	335c <MyGame_Example_Monster_parse_json_table+0x20d4>
    3348:	ldr	r0, [fp, #-8]
    334c:	ldr	r0, [r0, #8]
    3350:	and	r0, r0, #2
    3354:	cmp	r0, #0
    3358:	beq	3398 <MyGame_Example_Monster_parse_json_table+0x2110>
    335c:	ldr	r0, [fp, #-8]
    3360:	ldr	r0, [r0]
    3364:	movw	r1, #26
    3368:	movw	r2, #4
    336c:	movw	r3, #4
    3370:	uxth	r3, r3
    3374:	bl	0 <flatcc_builder_table_add>
    3378:	str	r0, [fp, #-28]	; 0xffffffe4
    337c:	movw	r1, #0
    3380:	cmp	r0, r1
    3384:	bne	338c <MyGame_Example_Monster_parse_json_table+0x2104>
    3388:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    338c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3390:	vldr	s0, [fp, #-68]	; 0xffffffbc
    3394:	bl	90b0 <flatbuffers_float_write_to_pe>
    3398:	b	33b0 <MyGame_Example_Monster_parse_json_table+0x2128>
    339c:	ldr	r0, [fp, #-8]
    33a0:	ldr	r1, [fp, #-12]
    33a4:	ldr	r2, [fp, #-16]
    33a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    33ac:	str	r0, [fp, #-12]
    33b0:	b	3528 <MyGame_Example_Monster_parse_json_table+0x22a0>
    33b4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    33b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    33bc:	movw	r2, #29556	; 0x7374
    33c0:	movt	r2, #29797	; 0x7465
    33c4:	eor	r1, r1, r2
    33c8:	eor	r0, r0, #102	; 0x66
    33cc:	orr	r0, r1, r0, lsl #24
    33d0:	cmp	r0, #0
    33d4:	bne	3510 <MyGame_Example_Monster_parse_json_table+0x2288>
    33d8:	b	33dc <MyGame_Example_Monster_parse_json_table+0x2154>
    33dc:	ldr	r0, [fp, #-8]
    33e0:	ldr	r1, [fp, #-12]
    33e4:	str	r1, [fp, #-40]	; 0xffffffd8
    33e8:	ldr	r2, [fp, #-16]
    33ec:	movw	r3, #5
    33f0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    33f4:	str	r0, [fp, #-12]
    33f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    33fc:	ldr	r1, [fp, #-12]
    3400:	cmp	r0, r1
    3404:	beq	34f8 <MyGame_Example_Monster_parse_json_table+0x2270>
    3408:	vldr	s0, [pc, #664]	; 36a8 <MyGame_Example_Monster_parse_json_table+0x2420>
    340c:	vstr	s0, [fp, #-72]	; 0xffffffb8
    3410:	ldr	r0, [fp, #-8]
    3414:	ldr	r1, [fp, #-12]
    3418:	str	r1, [fp, #-40]	; 0xffffffd8
    341c:	ldr	r2, [fp, #-16]
    3420:	sub	r3, fp, #72	; 0x48
    3424:	bl	0 <flatcc_json_parser_float>
    3428:	str	r0, [fp, #-12]
    342c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3430:	ldr	r1, [fp, #-12]
    3434:	cmp	r0, r1
    3438:	bne	348c <MyGame_Example_Monster_parse_json_table+0x2204>
    343c:	ldr	r0, [fp, #-8]
    3440:	ldr	r1, [fp, #-12]
    3444:	str	r1, [fp, #-40]	; 0xffffffd8
    3448:	ldr	r2, [fp, #-16]
    344c:	movw	r3, #0
    3450:	movt	r3, #0
    3454:	sub	ip, fp, #72	; 0x48
    3458:	str	ip, [sp]
    345c:	bl	8e80 <flatcc_json_parser_symbolic_float>
    3460:	str	r0, [fp, #-12]
    3464:	ldr	r0, [fp, #-12]
    3468:	ldr	r1, [fp, #-40]	; 0xffffffd8
    346c:	cmp	r0, r1
    3470:	beq	3484 <MyGame_Example_Monster_parse_json_table+0x21fc>
    3474:	ldr	r0, [fp, #-12]
    3478:	ldr	r1, [fp, #-16]
    347c:	cmp	r0, r1
    3480:	bne	3488 <MyGame_Example_Monster_parse_json_table+0x2200>
    3484:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3488:	b	348c <MyGame_Example_Monster_parse_json_table+0x2204>
    348c:	vldr	d16, [pc, #1012]	; 3888 <MyGame_Example_Monster_parse_json_table+0x2600>
    3490:	vldr	s0, [fp, #-72]	; 0xffffffb8
    3494:	vcvt.f64.f32	d17, s0
    3498:	vcmp.f64	d17, d16
    349c:	vmrs	APSR_nzcv, fpscr
    34a0:	bne	34b8 <MyGame_Example_Monster_parse_json_table+0x2230>
    34a4:	ldr	r0, [fp, #-8]
    34a8:	ldr	r0, [r0, #8]
    34ac:	and	r0, r0, #2
    34b0:	cmp	r0, #0
    34b4:	beq	34f4 <MyGame_Example_Monster_parse_json_table+0x226c>
    34b8:	ldr	r0, [fp, #-8]
    34bc:	ldr	r0, [r0]
    34c0:	movw	r1, #25
    34c4:	movw	r2, #4
    34c8:	movw	r3, #4
    34cc:	uxth	r3, r3
    34d0:	bl	0 <flatcc_builder_table_add>
    34d4:	str	r0, [fp, #-28]	; 0xffffffe4
    34d8:	movw	r1, #0
    34dc:	cmp	r0, r1
    34e0:	bne	34e8 <MyGame_Example_Monster_parse_json_table+0x2260>
    34e4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    34e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    34ec:	vldr	s0, [fp, #-72]	; 0xffffffb8
    34f0:	bl	90b0 <flatbuffers_float_write_to_pe>
    34f4:	b	350c <MyGame_Example_Monster_parse_json_table+0x2284>
    34f8:	ldr	r0, [fp, #-8]
    34fc:	ldr	r1, [fp, #-12]
    3500:	ldr	r2, [fp, #-16]
    3504:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3508:	str	r0, [fp, #-12]
    350c:	b	3524 <MyGame_Example_Monster_parse_json_table+0x229c>
    3510:	ldr	r0, [fp, #-8]
    3514:	ldr	r1, [fp, #-12]
    3518:	ldr	r2, [fp, #-16]
    351c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3520:	str	r0, [fp, #-12]
    3524:	b	3528 <MyGame_Example_Monster_parse_json_table+0x22a0>
    3528:	b	352c <MyGame_Example_Monster_parse_json_table+0x22a4>
    352c:	b	3530 <MyGame_Example_Monster_parse_json_table+0x22a8>
    3530:	b	3534 <MyGame_Example_Monster_parse_json_table+0x22ac>
    3534:	b	4b1c <MyGame_Example_Monster_parse_json_table+0x3894>
    3538:	ldr	r0, [fp, #-48]	; 0xffffffd0
    353c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3540:	movw	r2, #29543	; 0x7367
    3544:	movt	r2, #26721	; 0x6861
    3548:	subs	r0, r2, r0
    354c:	movw	r2, #29556	; 0x7374
    3550:	movt	r2, #29797	; 0x7465
    3554:	sbcs	r1, r2, r1
    3558:	bcc	36dc <MyGame_Example_Monster_parse_json_table+0x2454>
    355c:	b	3560 <MyGame_Example_Monster_parse_json_table+0x22d8>
    3560:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    3564:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3568:	movw	r2, #29797	; 0x7465
    356c:	eor	r2, r2, r1, lsr #16
    3570:	orr	r0, r0, r1, lsl #16
    3574:	movw	r1, #26163	; 0x6633
    3578:	movt	r1, #29556	; 0x7374
    357c:	eor	r0, r0, r1
    3580:	orr	r0, r0, r2
    3584:	cmp	r0, #0
    3588:	bne	36c4 <MyGame_Example_Monster_parse_json_table+0x243c>
    358c:	b	3590 <MyGame_Example_Monster_parse_json_table+0x2308>
    3590:	ldr	r0, [fp, #-8]
    3594:	ldr	r1, [fp, #-12]
    3598:	str	r1, [fp, #-40]	; 0xffffffd8
    359c:	ldr	r2, [fp, #-16]
    35a0:	movw	r3, #6
    35a4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    35a8:	str	r0, [fp, #-12]
    35ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    35b0:	ldr	r1, [fp, #-12]
    35b4:	cmp	r0, r1
    35b8:	beq	36ac <MyGame_Example_Monster_parse_json_table+0x2424>
    35bc:	vldr	s0, [pc, #228]	; 36a8 <MyGame_Example_Monster_parse_json_table+0x2420>
    35c0:	vstr	s0, [fp, #-76]	; 0xffffffb4
    35c4:	ldr	r0, [fp, #-8]
    35c8:	ldr	r1, [fp, #-12]
    35cc:	str	r1, [fp, #-40]	; 0xffffffd8
    35d0:	ldr	r2, [fp, #-16]
    35d4:	sub	r3, fp, #76	; 0x4c
    35d8:	bl	0 <flatcc_json_parser_float>
    35dc:	str	r0, [fp, #-12]
    35e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    35e4:	ldr	r1, [fp, #-12]
    35e8:	cmp	r0, r1
    35ec:	bne	3640 <MyGame_Example_Monster_parse_json_table+0x23b8>
    35f0:	ldr	r0, [fp, #-8]
    35f4:	ldr	r1, [fp, #-12]
    35f8:	str	r1, [fp, #-40]	; 0xffffffd8
    35fc:	ldr	r2, [fp, #-16]
    3600:	movw	r3, #0
    3604:	movt	r3, #0
    3608:	sub	ip, fp, #76	; 0x4c
    360c:	str	ip, [sp]
    3610:	bl	8e80 <flatcc_json_parser_symbolic_float>
    3614:	str	r0, [fp, #-12]
    3618:	ldr	r0, [fp, #-12]
    361c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3620:	cmp	r0, r1
    3624:	beq	3638 <MyGame_Example_Monster_parse_json_table+0x23b0>
    3628:	ldr	r0, [fp, #-12]
    362c:	ldr	r1, [fp, #-16]
    3630:	cmp	r0, r1
    3634:	bne	363c <MyGame_Example_Monster_parse_json_table+0x23b4>
    3638:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    363c:	b	3640 <MyGame_Example_Monster_parse_json_table+0x23b8>
    3640:	vldr	s0, [fp, #-76]	; 0xffffffb4
    3644:	vcvt.f64.f32	d16, s0
    3648:	vcmp.f64	d16, #0.0
    364c:	vmrs	APSR_nzcv, fpscr
    3650:	bne	3668 <MyGame_Example_Monster_parse_json_table+0x23e0>
    3654:	ldr	r0, [fp, #-8]
    3658:	ldr	r0, [r0, #8]
    365c:	and	r0, r0, #2
    3660:	cmp	r0, #0
    3664:	beq	36a4 <MyGame_Example_Monster_parse_json_table+0x241c>
    3668:	ldr	r0, [fp, #-8]
    366c:	ldr	r0, [r0]
    3670:	movw	r1, #27
    3674:	movw	r2, #4
    3678:	movw	r3, #4
    367c:	uxth	r3, r3
    3680:	bl	0 <flatcc_builder_table_add>
    3684:	str	r0, [fp, #-28]	; 0xffffffe4
    3688:	movw	r1, #0
    368c:	cmp	r0, r1
    3690:	bne	3698 <MyGame_Example_Monster_parse_json_table+0x2410>
    3694:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3698:	ldr	r0, [fp, #-28]	; 0xffffffe4
    369c:	vldr	s0, [fp, #-76]	; 0xffffffb4
    36a0:	bl	90b0 <flatbuffers_float_write_to_pe>
    36a4:	b	36c0 <MyGame_Example_Monster_parse_json_table+0x2438>
    36a8:	.word	0x00000000
    36ac:	ldr	r0, [fp, #-8]
    36b0:	ldr	r1, [fp, #-12]
    36b4:	ldr	r2, [fp, #-16]
    36b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    36bc:	str	r0, [fp, #-12]
    36c0:	b	36d8 <MyGame_Example_Monster_parse_json_table+0x2450>
    36c4:	ldr	r0, [fp, #-8]
    36c8:	ldr	r1, [fp, #-12]
    36cc:	ldr	r2, [fp, #-16]
    36d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    36d4:	str	r0, [fp, #-12]
    36d8:	b	4b18 <MyGame_Example_Monster_parse_json_table+0x3890>
    36dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    36e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    36e4:	movw	r2, #29556	; 0x7374
    36e8:	movt	r2, #29797	; 0x7465
    36ec:	eor	r1, r1, r2
    36f0:	movw	r2, #29544	; 0x7368
    36f4:	movt	r2, #26721	; 0x6861
    36f8:	eor	r0, r0, r2
    36fc:	orr	r0, r0, r1
    3700:	cmp	r0, #0
    3704:	bne	430c <MyGame_Example_Monster_parse_json_table+0x3084>
    3708:	b	370c <MyGame_Example_Monster_parse_json_table+0x2484>
    370c:	ldr	r0, [fp, #-12]
    3710:	add	r0, r0, #8
    3714:	str	r0, [fp, #-12]
    3718:	ldr	r0, [fp, #-12]
    371c:	ldr	r1, [fp, #-16]
    3720:	bl	4d8c <flatcc_json_parser_symbol_part>
    3724:	str	r1, [fp, #-44]	; 0xffffffd4
    3728:	str	r0, [fp, #-48]	; 0xffffffd0
    372c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3730:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3734:	movw	r2, #30256	; 0x7630
    3738:	movt	r2, #26222	; 0x666e
    373c:	subs	r0, r2, r0
    3740:	movw	r2, #13407	; 0x345f
    3744:	movt	r2, #29494	; 0x7336
    3748:	sbcs	r1, r2, r1
    374c:	bcc	3a30 <MyGame_Example_Monster_parse_json_table+0x27a8>
    3750:	b	3754 <MyGame_Example_Monster_parse_json_table+0x24cc>
    3754:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3758:	ldr	r1, [fp, #-44]	; 0xffffffd4
    375c:	movw	r2, #12895	; 0x325f
    3760:	movt	r2, #29491	; 0x7333
    3764:	eor	r1, r1, r2
    3768:	movw	r2, #30257	; 0x7631
    376c:	movt	r2, #26222	; 0x666e
    3770:	eor	r0, r0, r2
    3774:	orr	r0, r0, r1
    3778:	cmp	r0, #0
    377c:	bne	3a18 <MyGame_Example_Monster_parse_json_table+0x2790>
    3780:	b	3788 <MyGame_Example_Monster_parse_json_table+0x2500>
    3784:	.word	0x1fffffff
    3788:	ldr	r0, [fp, #-8]
    378c:	ldr	r1, [fp, #-12]
    3790:	str	r1, [fp, #-40]	; 0xffffffd8
    3794:	ldr	r2, [fp, #-16]
    3798:	movw	r3, #8
    379c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    37a0:	str	r0, [fp, #-12]
    37a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37a8:	ldr	r1, [fp, #-12]
    37ac:	cmp	r0, r1
    37b0:	beq	38a0 <MyGame_Example_Monster_parse_json_table+0x2618>
    37b4:	movw	r0, #0
    37b8:	str	r0, [fp, #-80]	; 0xffffffb0
    37bc:	ldr	r0, [fp, #-8]
    37c0:	ldr	r1, [fp, #-12]
    37c4:	str	r1, [fp, #-40]	; 0xffffffd8
    37c8:	ldr	r2, [fp, #-16]
    37cc:	sub	r3, fp, #80	; 0x50
    37d0:	bl	90dc <flatcc_json_parser_int32>
    37d4:	str	r0, [fp, #-12]
    37d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37dc:	ldr	r1, [fp, #-12]
    37e0:	cmp	r0, r1
    37e4:	bne	3838 <MyGame_Example_Monster_parse_json_table+0x25b0>
    37e8:	ldr	r0, [fp, #-8]
    37ec:	ldr	r1, [fp, #-12]
    37f0:	str	r1, [fp, #-40]	; 0xffffffd8
    37f4:	ldr	r2, [fp, #-16]
    37f8:	movw	r3, #0
    37fc:	movt	r3, #0
    3800:	sub	ip, fp, #80	; 0x50
    3804:	str	ip, [sp]
    3808:	bl	91b4 <flatcc_json_parser_symbolic_int32>
    380c:	str	r0, [fp, #-12]
    3810:	ldr	r0, [fp, #-12]
    3814:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3818:	cmp	r0, r1
    381c:	beq	3830 <MyGame_Example_Monster_parse_json_table+0x25a8>
    3820:	ldr	r0, [fp, #-12]
    3824:	ldr	r1, [fp, #-16]
    3828:	cmp	r0, r1
    382c:	bne	3834 <MyGame_Example_Monster_parse_json_table+0x25ac>
    3830:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3834:	b	3838 <MyGame_Example_Monster_parse_json_table+0x25b0>
    3838:	ldr	r0, [fp, #-80]	; 0xffffffb0
    383c:	cmp	r0, #0
    3840:	bne	3858 <MyGame_Example_Monster_parse_json_table+0x25d0>
    3844:	ldr	r0, [fp, #-8]
    3848:	ldr	r0, [r0, #8]
    384c:	and	r0, r0, #2
    3850:	cmp	r0, #0
    3854:	beq	389c <MyGame_Example_Monster_parse_json_table+0x2614>
    3858:	ldr	r0, [fp, #-8]
    385c:	ldr	r0, [r0]
    3860:	movw	r1, #16
    3864:	movw	r2, #4
    3868:	movw	r3, #4
    386c:	uxth	r3, r3
    3870:	bl	0 <flatcc_builder_table_add>
    3874:	str	r0, [fp, #-28]	; 0xffffffe4
    3878:	movw	r1, #0
    387c:	cmp	r0, r1
    3880:	bne	3890 <MyGame_Example_Monster_parse_json_table+0x2608>
    3884:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3888:	.word	0x00000000
    388c:	.word	0x41132cbc
    3890:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3894:	ldr	r1, [fp, #-80]	; 0xffffffb0
    3898:	bl	93dc <flatbuffers_int32_write_to_pe>
    389c:	b	3a14 <MyGame_Example_Monster_parse_json_table+0x278c>
    38a0:	ldr	r0, [fp, #-12]
    38a4:	add	r0, r0, #8
    38a8:	str	r0, [fp, #-12]
    38ac:	ldr	r0, [fp, #-12]
    38b0:	ldr	r1, [fp, #-16]
    38b4:	bl	4d8c <flatcc_json_parser_symbol_part>
    38b8:	str	r1, [fp, #-44]	; 0xffffffd4
    38bc:	str	r0, [fp, #-48]	; 0xffffffd0
    38c0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    38c4:	mov	r1, #1627389952	; 0x61000000
    38c8:	teq	r1, r0, lsl #24
    38cc:	bne	39fc <MyGame_Example_Monster_parse_json_table+0x2774>
    38d0:	b	38d4 <MyGame_Example_Monster_parse_json_table+0x264c>
    38d4:	ldr	r0, [fp, #-8]
    38d8:	ldr	r1, [fp, #-12]
    38dc:	str	r1, [fp, #-40]	; 0xffffffd8
    38e0:	ldr	r2, [fp, #-16]
    38e4:	movw	r3, #1
    38e8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    38ec:	str	r0, [fp, #-12]
    38f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    38f4:	ldr	r1, [fp, #-12]
    38f8:	cmp	r0, r1
    38fc:	beq	39e4 <MyGame_Example_Monster_parse_json_table+0x275c>
    3900:	movw	r0, #0
    3904:	str	r0, [fp, #-84]	; 0xffffffac
    3908:	ldr	r0, [fp, #-8]
    390c:	ldr	r1, [fp, #-12]
    3910:	str	r1, [fp, #-40]	; 0xffffffd8
    3914:	ldr	r2, [fp, #-16]
    3918:	sub	r3, fp, #84	; 0x54
    391c:	bl	90dc <flatcc_json_parser_int32>
    3920:	str	r0, [fp, #-12]
    3924:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3928:	ldr	r1, [fp, #-12]
    392c:	cmp	r0, r1
    3930:	bne	3984 <MyGame_Example_Monster_parse_json_table+0x26fc>
    3934:	ldr	r0, [fp, #-8]
    3938:	ldr	r1, [fp, #-12]
    393c:	str	r1, [fp, #-40]	; 0xffffffd8
    3940:	ldr	r2, [fp, #-16]
    3944:	movw	r3, #0
    3948:	movt	r3, #0
    394c:	sub	ip, fp, #84	; 0x54
    3950:	str	ip, [sp]
    3954:	bl	91b4 <flatcc_json_parser_symbolic_int32>
    3958:	str	r0, [fp, #-12]
    395c:	ldr	r0, [fp, #-12]
    3960:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3964:	cmp	r0, r1
    3968:	beq	397c <MyGame_Example_Monster_parse_json_table+0x26f4>
    396c:	ldr	r0, [fp, #-12]
    3970:	ldr	r1, [fp, #-16]
    3974:	cmp	r0, r1
    3978:	bne	3980 <MyGame_Example_Monster_parse_json_table+0x26f8>
    397c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3980:	b	3984 <MyGame_Example_Monster_parse_json_table+0x26fc>
    3984:	ldr	r0, [fp, #-84]	; 0xffffffac
    3988:	cmp	r0, #0
    398c:	bne	39a4 <MyGame_Example_Monster_parse_json_table+0x271c>
    3990:	ldr	r0, [fp, #-8]
    3994:	ldr	r0, [r0, #8]
    3998:	and	r0, r0, #2
    399c:	cmp	r0, #0
    39a0:	beq	39e0 <MyGame_Example_Monster_parse_json_table+0x2758>
    39a4:	ldr	r0, [fp, #-8]
    39a8:	ldr	r0, [r0]
    39ac:	movw	r1, #20
    39b0:	movw	r2, #4
    39b4:	movw	r3, #4
    39b8:	uxth	r3, r3
    39bc:	bl	0 <flatcc_builder_table_add>
    39c0:	str	r0, [fp, #-28]	; 0xffffffe4
    39c4:	movw	r1, #0
    39c8:	cmp	r0, r1
    39cc:	bne	39d4 <MyGame_Example_Monster_parse_json_table+0x274c>
    39d0:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    39d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    39d8:	ldr	r1, [fp, #-84]	; 0xffffffac
    39dc:	bl	93dc <flatbuffers_int32_write_to_pe>
    39e0:	b	39f8 <MyGame_Example_Monster_parse_json_table+0x2770>
    39e4:	ldr	r0, [fp, #-8]
    39e8:	ldr	r1, [fp, #-12]
    39ec:	ldr	r2, [fp, #-16]
    39f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    39f4:	str	r0, [fp, #-12]
    39f8:	b	3a10 <MyGame_Example_Monster_parse_json_table+0x2788>
    39fc:	ldr	r0, [fp, #-8]
    3a00:	ldr	r1, [fp, #-12]
    3a04:	ldr	r2, [fp, #-16]
    3a08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3a0c:	str	r0, [fp, #-12]
    3a10:	b	3a14 <MyGame_Example_Monster_parse_json_table+0x278c>
    3a14:	b	3a2c <MyGame_Example_Monster_parse_json_table+0x27a4>
    3a18:	ldr	r0, [fp, #-8]
    3a1c:	ldr	r1, [fp, #-12]
    3a20:	ldr	r2, [fp, #-16]
    3a24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3a28:	str	r0, [fp, #-12]
    3a2c:	b	4308 <MyGame_Example_Monster_parse_json_table+0x3080>
    3a30:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3a34:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3a38:	movw	r2, #30256	; 0x7630
    3a3c:	movt	r2, #26222	; 0x666e
    3a40:	subs	r0, r2, r0
    3a44:	movw	r2, #12895	; 0x325f
    3a48:	movt	r2, #30003	; 0x7533
    3a4c:	sbcs	r1, r2, r1
    3a50:	bcc	3d50 <MyGame_Example_Monster_parse_json_table+0x2ac8>
    3a54:	b	3a58 <MyGame_Example_Monster_parse_json_table+0x27d0>
    3a58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3a5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3a60:	movw	r2, #13407	; 0x345f
    3a64:	movt	r2, #29494	; 0x7336
    3a68:	eor	r1, r1, r2
    3a6c:	movw	r2, #30257	; 0x7631
    3a70:	movt	r2, #26222	; 0x666e
    3a74:	eor	r0, r0, r2
    3a78:	orr	r0, r0, r1
    3a7c:	cmp	r0, #0
    3a80:	bne	3d38 <MyGame_Example_Monster_parse_json_table+0x2ab0>
    3a84:	b	3a88 <MyGame_Example_Monster_parse_json_table+0x2800>
    3a88:	ldr	r0, [fp, #-8]
    3a8c:	ldr	r1, [fp, #-12]
    3a90:	str	r1, [fp, #-40]	; 0xffffffd8
    3a94:	ldr	r2, [fp, #-16]
    3a98:	movw	r3, #8
    3a9c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    3aa0:	str	r0, [fp, #-12]
    3aa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3aa8:	ldr	r1, [fp, #-12]
    3aac:	cmp	r0, r1
    3ab0:	beq	3bac <MyGame_Example_Monster_parse_json_table+0x2924>
    3ab4:	mov	r0, #0
    3ab8:	str	r0, [sp, #100]	; 0x64
    3abc:	str	r0, [sp, #96]	; 0x60
    3ac0:	ldr	r0, [fp, #-8]
    3ac4:	ldr	r1, [fp, #-12]
    3ac8:	str	r1, [fp, #-40]	; 0xffffffd8
    3acc:	ldr	r2, [fp, #-16]
    3ad0:	add	r3, sp, #96	; 0x60
    3ad4:	bl	9408 <flatcc_json_parser_int64>
    3ad8:	str	r0, [fp, #-12]
    3adc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3ae0:	ldr	r1, [fp, #-12]
    3ae4:	cmp	r0, r1
    3ae8:	bne	3b3c <MyGame_Example_Monster_parse_json_table+0x28b4>
    3aec:	ldr	r0, [fp, #-8]
    3af0:	ldr	r1, [fp, #-12]
    3af4:	str	r1, [fp, #-40]	; 0xffffffd8
    3af8:	ldr	r2, [fp, #-16]
    3afc:	movw	r3, #0
    3b00:	movt	r3, #0
    3b04:	add	ip, sp, #96	; 0x60
    3b08:	str	ip, [sp]
    3b0c:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    3b10:	str	r0, [fp, #-12]
    3b14:	ldr	r0, [fp, #-12]
    3b18:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3b1c:	cmp	r0, r1
    3b20:	beq	3b34 <MyGame_Example_Monster_parse_json_table+0x28ac>
    3b24:	ldr	r0, [fp, #-12]
    3b28:	ldr	r1, [fp, #-16]
    3b2c:	cmp	r0, r1
    3b30:	bne	3b38 <MyGame_Example_Monster_parse_json_table+0x28b0>
    3b34:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3b38:	b	3b3c <MyGame_Example_Monster_parse_json_table+0x28b4>
    3b3c:	ldr	r0, [sp, #96]	; 0x60
    3b40:	ldr	r1, [sp, #100]	; 0x64
    3b44:	orr	r0, r0, r1
    3b48:	cmp	r0, #0
    3b4c:	bne	3b68 <MyGame_Example_Monster_parse_json_table+0x28e0>
    3b50:	b	3b54 <MyGame_Example_Monster_parse_json_table+0x28cc>
    3b54:	ldr	r0, [fp, #-8]
    3b58:	ldr	r0, [r0, #8]
    3b5c:	and	r0, r0, #2
    3b60:	cmp	r0, #0
    3b64:	beq	3ba8 <MyGame_Example_Monster_parse_json_table+0x2920>
    3b68:	ldr	r0, [fp, #-8]
    3b6c:	ldr	r0, [r0]
    3b70:	movw	r1, #18
    3b74:	movw	r2, #8
    3b78:	movw	r3, #8
    3b7c:	uxth	r3, r3
    3b80:	bl	0 <flatcc_builder_table_add>
    3b84:	str	r0, [fp, #-28]	; 0xffffffe4
    3b88:	movw	r1, #0
    3b8c:	cmp	r0, r1
    3b90:	bne	3b98 <MyGame_Example_Monster_parse_json_table+0x2910>
    3b94:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3b98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3b9c:	ldr	r2, [sp, #96]	; 0x60
    3ba0:	ldr	r3, [sp, #100]	; 0x64
    3ba4:	bl	9720 <flatbuffers_int64_write_to_pe>
    3ba8:	b	3d34 <MyGame_Example_Monster_parse_json_table+0x2aac>
    3bac:	ldr	r0, [fp, #-12]
    3bb0:	add	r0, r0, #8
    3bb4:	str	r0, [fp, #-12]
    3bb8:	ldr	r0, [fp, #-12]
    3bbc:	ldr	r1, [fp, #-16]
    3bc0:	bl	4d8c <flatcc_json_parser_symbol_part>
    3bc4:	str	r1, [fp, #-44]	; 0xffffffd4
    3bc8:	str	r0, [fp, #-48]	; 0xffffffd0
    3bcc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    3bd0:	mov	r1, #1627389952	; 0x61000000
    3bd4:	teq	r1, r0, lsl #24
    3bd8:	bne	3d1c <MyGame_Example_Monster_parse_json_table+0x2a94>
    3bdc:	b	3be0 <MyGame_Example_Monster_parse_json_table+0x2958>
    3be0:	ldr	r0, [fp, #-8]
    3be4:	ldr	r1, [fp, #-12]
    3be8:	str	r1, [fp, #-40]	; 0xffffffd8
    3bec:	ldr	r2, [fp, #-16]
    3bf0:	movw	r3, #1
    3bf4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    3bf8:	str	r0, [fp, #-12]
    3bfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3c00:	ldr	r1, [fp, #-12]
    3c04:	cmp	r0, r1
    3c08:	beq	3d04 <MyGame_Example_Monster_parse_json_table+0x2a7c>
    3c0c:	mov	r0, #0
    3c10:	str	r0, [sp, #92]	; 0x5c
    3c14:	str	r0, [sp, #88]	; 0x58
    3c18:	ldr	r0, [fp, #-8]
    3c1c:	ldr	r1, [fp, #-12]
    3c20:	str	r1, [fp, #-40]	; 0xffffffd8
    3c24:	ldr	r2, [fp, #-16]
    3c28:	add	r3, sp, #88	; 0x58
    3c2c:	bl	9408 <flatcc_json_parser_int64>
    3c30:	str	r0, [fp, #-12]
    3c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3c38:	ldr	r1, [fp, #-12]
    3c3c:	cmp	r0, r1
    3c40:	bne	3c94 <MyGame_Example_Monster_parse_json_table+0x2a0c>
    3c44:	ldr	r0, [fp, #-8]
    3c48:	ldr	r1, [fp, #-12]
    3c4c:	str	r1, [fp, #-40]	; 0xffffffd8
    3c50:	ldr	r2, [fp, #-16]
    3c54:	movw	r3, #0
    3c58:	movt	r3, #0
    3c5c:	add	ip, sp, #88	; 0x58
    3c60:	str	ip, [sp]
    3c64:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    3c68:	str	r0, [fp, #-12]
    3c6c:	ldr	r0, [fp, #-12]
    3c70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3c74:	cmp	r0, r1
    3c78:	beq	3c8c <MyGame_Example_Monster_parse_json_table+0x2a04>
    3c7c:	ldr	r0, [fp, #-12]
    3c80:	ldr	r1, [fp, #-16]
    3c84:	cmp	r0, r1
    3c88:	bne	3c90 <MyGame_Example_Monster_parse_json_table+0x2a08>
    3c8c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3c90:	b	3c94 <MyGame_Example_Monster_parse_json_table+0x2a0c>
    3c94:	ldr	r0, [sp, #88]	; 0x58
    3c98:	ldr	r1, [sp, #92]	; 0x5c
    3c9c:	orr	r0, r0, r1
    3ca0:	cmp	r0, #0
    3ca4:	bne	3cc0 <MyGame_Example_Monster_parse_json_table+0x2a38>
    3ca8:	b	3cac <MyGame_Example_Monster_parse_json_table+0x2a24>
    3cac:	ldr	r0, [fp, #-8]
    3cb0:	ldr	r0, [r0, #8]
    3cb4:	and	r0, r0, #2
    3cb8:	cmp	r0, #0
    3cbc:	beq	3d00 <MyGame_Example_Monster_parse_json_table+0x2a78>
    3cc0:	ldr	r0, [fp, #-8]
    3cc4:	ldr	r0, [r0]
    3cc8:	movw	r1, #22
    3ccc:	movw	r2, #8
    3cd0:	movw	r3, #8
    3cd4:	uxth	r3, r3
    3cd8:	bl	0 <flatcc_builder_table_add>
    3cdc:	str	r0, [fp, #-28]	; 0xffffffe4
    3ce0:	movw	r1, #0
    3ce4:	cmp	r0, r1
    3ce8:	bne	3cf0 <MyGame_Example_Monster_parse_json_table+0x2a68>
    3cec:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3cf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3cf4:	ldr	r2, [sp, #88]	; 0x58
    3cf8:	ldr	r3, [sp, #92]	; 0x5c
    3cfc:	bl	9720 <flatbuffers_int64_write_to_pe>
    3d00:	b	3d18 <MyGame_Example_Monster_parse_json_table+0x2a90>
    3d04:	ldr	r0, [fp, #-8]
    3d08:	ldr	r1, [fp, #-12]
    3d0c:	ldr	r2, [fp, #-16]
    3d10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3d14:	str	r0, [fp, #-12]
    3d18:	b	3d30 <MyGame_Example_Monster_parse_json_table+0x2aa8>
    3d1c:	ldr	r0, [fp, #-8]
    3d20:	ldr	r1, [fp, #-12]
    3d24:	ldr	r2, [fp, #-16]
    3d28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3d2c:	str	r0, [fp, #-12]
    3d30:	b	3d34 <MyGame_Example_Monster_parse_json_table+0x2aac>
    3d34:	b	3d4c <MyGame_Example_Monster_parse_json_table+0x2ac4>
    3d38:	ldr	r0, [fp, #-8]
    3d3c:	ldr	r1, [fp, #-12]
    3d40:	ldr	r2, [fp, #-16]
    3d44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3d48:	str	r0, [fp, #-12]
    3d4c:	b	4304 <MyGame_Example_Monster_parse_json_table+0x307c>
    3d50:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3d58:	movw	r2, #12895	; 0x325f
    3d5c:	movt	r2, #30003	; 0x7533
    3d60:	eor	r1, r1, r2
    3d64:	movw	r2, #30257	; 0x7631
    3d68:	movt	r2, #26222	; 0x666e
    3d6c:	eor	r0, r0, r2
    3d70:	orr	r0, r0, r1
    3d74:	cmp	r0, #0
    3d78:	bne	4008 <MyGame_Example_Monster_parse_json_table+0x2d80>
    3d7c:	b	3d80 <MyGame_Example_Monster_parse_json_table+0x2af8>
    3d80:	ldr	r0, [fp, #-8]
    3d84:	ldr	r1, [fp, #-12]
    3d88:	str	r1, [fp, #-40]	; 0xffffffd8
    3d8c:	ldr	r2, [fp, #-16]
    3d90:	movw	r3, #8
    3d94:	bl	4dc4 <flatcc_json_parser_match_symbol>
    3d98:	str	r0, [fp, #-12]
    3d9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3da0:	ldr	r1, [fp, #-12]
    3da4:	cmp	r0, r1
    3da8:	beq	3e90 <MyGame_Example_Monster_parse_json_table+0x2c08>
    3dac:	movw	r0, #0
    3db0:	str	r0, [sp, #84]	; 0x54
    3db4:	ldr	r0, [fp, #-8]
    3db8:	ldr	r1, [fp, #-12]
    3dbc:	str	r1, [fp, #-40]	; 0xffffffd8
    3dc0:	ldr	r2, [fp, #-16]
    3dc4:	add	r3, sp, #84	; 0x54
    3dc8:	bl	9758 <flatcc_json_parser_uint32>
    3dcc:	str	r0, [fp, #-12]
    3dd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3dd4:	ldr	r1, [fp, #-12]
    3dd8:	cmp	r0, r1
    3ddc:	bne	3e30 <MyGame_Example_Monster_parse_json_table+0x2ba8>
    3de0:	ldr	r0, [fp, #-8]
    3de4:	ldr	r1, [fp, #-12]
    3de8:	str	r1, [fp, #-40]	; 0xffffffd8
    3dec:	ldr	r2, [fp, #-16]
    3df0:	movw	r3, #0
    3df4:	movt	r3, #0
    3df8:	add	ip, sp, #84	; 0x54
    3dfc:	str	ip, [sp]
    3e00:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    3e04:	str	r0, [fp, #-12]
    3e08:	ldr	r0, [fp, #-12]
    3e0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3e10:	cmp	r0, r1
    3e14:	beq	3e28 <MyGame_Example_Monster_parse_json_table+0x2ba0>
    3e18:	ldr	r0, [fp, #-12]
    3e1c:	ldr	r1, [fp, #-16]
    3e20:	cmp	r0, r1
    3e24:	bne	3e2c <MyGame_Example_Monster_parse_json_table+0x2ba4>
    3e28:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3e2c:	b	3e30 <MyGame_Example_Monster_parse_json_table+0x2ba8>
    3e30:	ldr	r0, [sp, #84]	; 0x54
    3e34:	cmp	r0, #0
    3e38:	bne	3e50 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    3e3c:	ldr	r0, [fp, #-8]
    3e40:	ldr	r0, [r0, #8]
    3e44:	and	r0, r0, #2
    3e48:	cmp	r0, #0
    3e4c:	beq	3e8c <MyGame_Example_Monster_parse_json_table+0x2c04>
    3e50:	ldr	r0, [fp, #-8]
    3e54:	ldr	r0, [r0]
    3e58:	movw	r1, #17
    3e5c:	movw	r2, #4
    3e60:	movw	r3, #4
    3e64:	uxth	r3, r3
    3e68:	bl	0 <flatcc_builder_table_add>
    3e6c:	str	r0, [fp, #-28]	; 0xffffffe4
    3e70:	movw	r1, #0
    3e74:	cmp	r0, r1
    3e78:	bne	3e80 <MyGame_Example_Monster_parse_json_table+0x2bf8>
    3e7c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3e80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e84:	ldr	r1, [sp, #84]	; 0x54
    3e88:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    3e8c:	b	4004 <MyGame_Example_Monster_parse_json_table+0x2d7c>
    3e90:	ldr	r0, [fp, #-12]
    3e94:	add	r0, r0, #8
    3e98:	str	r0, [fp, #-12]
    3e9c:	ldr	r0, [fp, #-12]
    3ea0:	ldr	r1, [fp, #-16]
    3ea4:	bl	4d8c <flatcc_json_parser_symbol_part>
    3ea8:	str	r1, [fp, #-44]	; 0xffffffd4
    3eac:	str	r0, [fp, #-48]	; 0xffffffd0
    3eb0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    3eb4:	mov	r1, #1627389952	; 0x61000000
    3eb8:	teq	r1, r0, lsl #24
    3ebc:	bne	3fec <MyGame_Example_Monster_parse_json_table+0x2d64>
    3ec0:	b	3ec4 <MyGame_Example_Monster_parse_json_table+0x2c3c>
    3ec4:	ldr	r0, [fp, #-8]
    3ec8:	ldr	r1, [fp, #-12]
    3ecc:	str	r1, [fp, #-40]	; 0xffffffd8
    3ed0:	ldr	r2, [fp, #-16]
    3ed4:	movw	r3, #1
    3ed8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    3edc:	str	r0, [fp, #-12]
    3ee0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3ee4:	ldr	r1, [fp, #-12]
    3ee8:	cmp	r0, r1
    3eec:	beq	3fd4 <MyGame_Example_Monster_parse_json_table+0x2d4c>
    3ef0:	movw	r0, #0
    3ef4:	str	r0, [sp, #80]	; 0x50
    3ef8:	ldr	r0, [fp, #-8]
    3efc:	ldr	r1, [fp, #-12]
    3f00:	str	r1, [fp, #-40]	; 0xffffffd8
    3f04:	ldr	r2, [fp, #-16]
    3f08:	add	r3, sp, #80	; 0x50
    3f0c:	bl	9758 <flatcc_json_parser_uint32>
    3f10:	str	r0, [fp, #-12]
    3f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3f18:	ldr	r1, [fp, #-12]
    3f1c:	cmp	r0, r1
    3f20:	bne	3f74 <MyGame_Example_Monster_parse_json_table+0x2cec>
    3f24:	ldr	r0, [fp, #-8]
    3f28:	ldr	r1, [fp, #-12]
    3f2c:	str	r1, [fp, #-40]	; 0xffffffd8
    3f30:	ldr	r2, [fp, #-16]
    3f34:	movw	r3, #0
    3f38:	movt	r3, #0
    3f3c:	add	ip, sp, #80	; 0x50
    3f40:	str	ip, [sp]
    3f44:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    3f48:	str	r0, [fp, #-12]
    3f4c:	ldr	r0, [fp, #-12]
    3f50:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3f54:	cmp	r0, r1
    3f58:	beq	3f6c <MyGame_Example_Monster_parse_json_table+0x2ce4>
    3f5c:	ldr	r0, [fp, #-12]
    3f60:	ldr	r1, [fp, #-16]
    3f64:	cmp	r0, r1
    3f68:	bne	3f70 <MyGame_Example_Monster_parse_json_table+0x2ce8>
    3f6c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3f70:	b	3f74 <MyGame_Example_Monster_parse_json_table+0x2cec>
    3f74:	ldr	r0, [sp, #80]	; 0x50
    3f78:	cmp	r0, #0
    3f7c:	bne	3f94 <MyGame_Example_Monster_parse_json_table+0x2d0c>
    3f80:	ldr	r0, [fp, #-8]
    3f84:	ldr	r0, [r0, #8]
    3f88:	and	r0, r0, #2
    3f8c:	cmp	r0, #0
    3f90:	beq	3fd0 <MyGame_Example_Monster_parse_json_table+0x2d48>
    3f94:	ldr	r0, [fp, #-8]
    3f98:	ldr	r0, [r0]
    3f9c:	movw	r1, #21
    3fa0:	movw	r2, #4
    3fa4:	movw	r3, #4
    3fa8:	uxth	r3, r3
    3fac:	bl	0 <flatcc_builder_table_add>
    3fb0:	str	r0, [fp, #-28]	; 0xffffffe4
    3fb4:	movw	r1, #0
    3fb8:	cmp	r0, r1
    3fbc:	bne	3fc4 <MyGame_Example_Monster_parse_json_table+0x2d3c>
    3fc0:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    3fc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3fc8:	ldr	r1, [sp, #80]	; 0x50
    3fcc:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    3fd0:	b	3fe8 <MyGame_Example_Monster_parse_json_table+0x2d60>
    3fd4:	ldr	r0, [fp, #-8]
    3fd8:	ldr	r1, [fp, #-12]
    3fdc:	ldr	r2, [fp, #-16]
    3fe0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3fe4:	str	r0, [fp, #-12]
    3fe8:	b	4000 <MyGame_Example_Monster_parse_json_table+0x2d78>
    3fec:	ldr	r0, [fp, #-8]
    3ff0:	ldr	r1, [fp, #-12]
    3ff4:	ldr	r2, [fp, #-16]
    3ff8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ffc:	str	r0, [fp, #-12]
    4000:	b	4004 <MyGame_Example_Monster_parse_json_table+0x2d7c>
    4004:	b	4300 <MyGame_Example_Monster_parse_json_table+0x3078>
    4008:	ldr	r0, [fp, #-48]	; 0xffffffd0
    400c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4010:	movw	r2, #13407	; 0x345f
    4014:	movt	r2, #30006	; 0x7536
    4018:	eor	r1, r1, r2
    401c:	movw	r2, #30257	; 0x7631
    4020:	movt	r2, #26222	; 0x666e
    4024:	eor	r0, r0, r2
    4028:	orr	r0, r0, r1
    402c:	cmp	r0, #0
    4030:	bne	42e8 <MyGame_Example_Monster_parse_json_table+0x3060>
    4034:	b	4038 <MyGame_Example_Monster_parse_json_table+0x2db0>
    4038:	ldr	r0, [fp, #-8]
    403c:	ldr	r1, [fp, #-12]
    4040:	str	r1, [fp, #-40]	; 0xffffffd8
    4044:	ldr	r2, [fp, #-16]
    4048:	movw	r3, #8
    404c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    4050:	str	r0, [fp, #-12]
    4054:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4058:	ldr	r1, [fp, #-12]
    405c:	cmp	r0, r1
    4060:	beq	415c <MyGame_Example_Monster_parse_json_table+0x2ed4>
    4064:	mov	r0, #0
    4068:	str	r0, [sp, #76]	; 0x4c
    406c:	str	r0, [sp, #72]	; 0x48
    4070:	ldr	r0, [fp, #-8]
    4074:	ldr	r1, [fp, #-12]
    4078:	str	r1, [fp, #-40]	; 0xffffffd8
    407c:	ldr	r2, [fp, #-16]
    4080:	add	r3, sp, #72	; 0x48
    4084:	bl	9a84 <flatcc_json_parser_uint64>
    4088:	str	r0, [fp, #-12]
    408c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4090:	ldr	r1, [fp, #-12]
    4094:	cmp	r0, r1
    4098:	bne	40ec <MyGame_Example_Monster_parse_json_table+0x2e64>
    409c:	ldr	r0, [fp, #-8]
    40a0:	ldr	r1, [fp, #-12]
    40a4:	str	r1, [fp, #-40]	; 0xffffffd8
    40a8:	ldr	r2, [fp, #-16]
    40ac:	movw	r3, #0
    40b0:	movt	r3, #0
    40b4:	add	ip, sp, #72	; 0x48
    40b8:	str	ip, [sp]
    40bc:	bl	9b5c <flatcc_json_parser_symbolic_uint64>
    40c0:	str	r0, [fp, #-12]
    40c4:	ldr	r0, [fp, #-12]
    40c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    40cc:	cmp	r0, r1
    40d0:	beq	40e4 <MyGame_Example_Monster_parse_json_table+0x2e5c>
    40d4:	ldr	r0, [fp, #-12]
    40d8:	ldr	r1, [fp, #-16]
    40dc:	cmp	r0, r1
    40e0:	bne	40e8 <MyGame_Example_Monster_parse_json_table+0x2e60>
    40e4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    40e8:	b	40ec <MyGame_Example_Monster_parse_json_table+0x2e64>
    40ec:	ldr	r0, [sp, #72]	; 0x48
    40f0:	ldr	r1, [sp, #76]	; 0x4c
    40f4:	orr	r0, r0, r1
    40f8:	cmp	r0, #0
    40fc:	bne	4118 <MyGame_Example_Monster_parse_json_table+0x2e90>
    4100:	b	4104 <MyGame_Example_Monster_parse_json_table+0x2e7c>
    4104:	ldr	r0, [fp, #-8]
    4108:	ldr	r0, [r0, #8]
    410c:	and	r0, r0, #2
    4110:	cmp	r0, #0
    4114:	beq	4158 <MyGame_Example_Monster_parse_json_table+0x2ed0>
    4118:	ldr	r0, [fp, #-8]
    411c:	ldr	r0, [r0]
    4120:	movw	r1, #19
    4124:	movw	r2, #8
    4128:	movw	r3, #8
    412c:	uxth	r3, r3
    4130:	bl	0 <flatcc_builder_table_add>
    4134:	str	r0, [fp, #-28]	; 0xffffffe4
    4138:	movw	r1, #0
    413c:	cmp	r0, r1
    4140:	bne	4148 <MyGame_Example_Monster_parse_json_table+0x2ec0>
    4144:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4148:	ldr	r0, [fp, #-28]	; 0xffffffe4
    414c:	ldr	r2, [sp, #72]	; 0x48
    4150:	ldr	r3, [sp, #76]	; 0x4c
    4154:	bl	9d9c <flatbuffers_uint64_write_to_pe>
    4158:	b	42e4 <MyGame_Example_Monster_parse_json_table+0x305c>
    415c:	ldr	r0, [fp, #-12]
    4160:	add	r0, r0, #8
    4164:	str	r0, [fp, #-12]
    4168:	ldr	r0, [fp, #-12]
    416c:	ldr	r1, [fp, #-16]
    4170:	bl	4d8c <flatcc_json_parser_symbol_part>
    4174:	str	r1, [fp, #-44]	; 0xffffffd4
    4178:	str	r0, [fp, #-48]	; 0xffffffd0
    417c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    4180:	mov	r1, #1627389952	; 0x61000000
    4184:	teq	r1, r0, lsl #24
    4188:	bne	42cc <MyGame_Example_Monster_parse_json_table+0x3044>
    418c:	b	4190 <MyGame_Example_Monster_parse_json_table+0x2f08>
    4190:	ldr	r0, [fp, #-8]
    4194:	ldr	r1, [fp, #-12]
    4198:	str	r1, [fp, #-40]	; 0xffffffd8
    419c:	ldr	r2, [fp, #-16]
    41a0:	movw	r3, #1
    41a4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    41a8:	str	r0, [fp, #-12]
    41ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    41b0:	ldr	r1, [fp, #-12]
    41b4:	cmp	r0, r1
    41b8:	beq	42b4 <MyGame_Example_Monster_parse_json_table+0x302c>
    41bc:	mov	r0, #0
    41c0:	str	r0, [sp, #68]	; 0x44
    41c4:	str	r0, [sp, #64]	; 0x40
    41c8:	ldr	r0, [fp, #-8]
    41cc:	ldr	r1, [fp, #-12]
    41d0:	str	r1, [fp, #-40]	; 0xffffffd8
    41d4:	ldr	r2, [fp, #-16]
    41d8:	add	r3, sp, #64	; 0x40
    41dc:	bl	9a84 <flatcc_json_parser_uint64>
    41e0:	str	r0, [fp, #-12]
    41e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    41e8:	ldr	r1, [fp, #-12]
    41ec:	cmp	r0, r1
    41f0:	bne	4244 <MyGame_Example_Monster_parse_json_table+0x2fbc>
    41f4:	ldr	r0, [fp, #-8]
    41f8:	ldr	r1, [fp, #-12]
    41fc:	str	r1, [fp, #-40]	; 0xffffffd8
    4200:	ldr	r2, [fp, #-16]
    4204:	movw	r3, #0
    4208:	movt	r3, #0
    420c:	add	ip, sp, #64	; 0x40
    4210:	str	ip, [sp]
    4214:	bl	9b5c <flatcc_json_parser_symbolic_uint64>
    4218:	str	r0, [fp, #-12]
    421c:	ldr	r0, [fp, #-12]
    4220:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4224:	cmp	r0, r1
    4228:	beq	423c <MyGame_Example_Monster_parse_json_table+0x2fb4>
    422c:	ldr	r0, [fp, #-12]
    4230:	ldr	r1, [fp, #-16]
    4234:	cmp	r0, r1
    4238:	bne	4240 <MyGame_Example_Monster_parse_json_table+0x2fb8>
    423c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4240:	b	4244 <MyGame_Example_Monster_parse_json_table+0x2fbc>
    4244:	ldr	r0, [sp, #64]	; 0x40
    4248:	ldr	r1, [sp, #68]	; 0x44
    424c:	orr	r0, r0, r1
    4250:	cmp	r0, #0
    4254:	bne	4270 <MyGame_Example_Monster_parse_json_table+0x2fe8>
    4258:	b	425c <MyGame_Example_Monster_parse_json_table+0x2fd4>
    425c:	ldr	r0, [fp, #-8]
    4260:	ldr	r0, [r0, #8]
    4264:	and	r0, r0, #2
    4268:	cmp	r0, #0
    426c:	beq	42b0 <MyGame_Example_Monster_parse_json_table+0x3028>
    4270:	ldr	r0, [fp, #-8]
    4274:	ldr	r0, [r0]
    4278:	movw	r1, #23
    427c:	movw	r2, #8
    4280:	movw	r3, #8
    4284:	uxth	r3, r3
    4288:	bl	0 <flatcc_builder_table_add>
    428c:	str	r0, [fp, #-28]	; 0xffffffe4
    4290:	movw	r1, #0
    4294:	cmp	r0, r1
    4298:	bne	42a0 <MyGame_Example_Monster_parse_json_table+0x3018>
    429c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    42a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    42a4:	ldr	r2, [sp, #64]	; 0x40
    42a8:	ldr	r3, [sp, #68]	; 0x44
    42ac:	bl	9d9c <flatbuffers_uint64_write_to_pe>
    42b0:	b	42c8 <MyGame_Example_Monster_parse_json_table+0x3040>
    42b4:	ldr	r0, [fp, #-8]
    42b8:	ldr	r1, [fp, #-12]
    42bc:	ldr	r2, [fp, #-16]
    42c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    42c4:	str	r0, [fp, #-12]
    42c8:	b	42e0 <MyGame_Example_Monster_parse_json_table+0x3058>
    42cc:	ldr	r0, [fp, #-8]
    42d0:	ldr	r1, [fp, #-12]
    42d4:	ldr	r2, [fp, #-16]
    42d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    42dc:	str	r0, [fp, #-12]
    42e0:	b	42e4 <MyGame_Example_Monster_parse_json_table+0x305c>
    42e4:	b	42fc <MyGame_Example_Monster_parse_json_table+0x3074>
    42e8:	ldr	r0, [fp, #-8]
    42ec:	ldr	r1, [fp, #-12]
    42f0:	ldr	r2, [fp, #-16]
    42f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    42f8:	str	r0, [fp, #-12]
    42fc:	b	4300 <MyGame_Example_Monster_parse_json_table+0x3078>
    4300:	b	4304 <MyGame_Example_Monster_parse_json_table+0x307c>
    4304:	b	4308 <MyGame_Example_Monster_parse_json_table+0x3080>
    4308:	b	4b14 <MyGame_Example_Monster_parse_json_table+0x388c>
    430c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4310:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4314:	movw	r2, #24430	; 0x5f6e
    4318:	movt	r2, #28530	; 0x6f72
    431c:	subs	r0, r2, r0
    4320:	movw	r2, #25460	; 0x6374
    4324:	movt	r2, #30309	; 0x7665
    4328:	sbcs	r1, r2, r1
    432c:	bcc	4670 <MyGame_Example_Monster_parse_json_table+0x33e8>
    4330:	b	4334 <MyGame_Example_Monster_parse_json_table+0x30ac>
    4334:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4338:	ldr	r1, [fp, #-44]	; 0xffffffd4
    433c:	movw	r2, #29556	; 0x7374
    4340:	movt	r2, #29797	; 0x7465
    4344:	eor	r1, r1, r2
    4348:	movw	r2, #29556	; 0x7374
    434c:	movt	r2, #28261	; 0x6e65
    4350:	eor	r0, r0, r2
    4354:	orr	r0, r0, r1
    4358:	cmp	r0, #0
    435c:	bne	4658 <MyGame_Example_Monster_parse_json_table+0x33d0>
    4360:	b	4364 <MyGame_Example_Monster_parse_json_table+0x30dc>
    4364:	ldr	r0, [fp, #-12]
    4368:	add	r0, r0, #8
    436c:	str	r0, [fp, #-12]
    4370:	ldr	r0, [fp, #-12]
    4374:	ldr	r1, [fp, #-16]
    4378:	bl	4d8c <flatcc_json_parser_symbol_part>
    437c:	str	r1, [fp, #-44]	; 0xffffffd4
    4380:	str	r0, [fp, #-48]	; 0xffffffd0
    4384:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4388:	ldr	r1, [fp, #-44]	; 0xffffffd4
    438c:	movw	r2, #26220	; 0x666c
    4390:	movt	r2, #25956	; 0x6564
    4394:	eor	r1, r1, r2
    4398:	movw	r2, #25205	; 0x6275
    439c:	movt	r2, #24948	; 0x6174
    43a0:	eor	r0, r0, r2
    43a4:	orr	r0, r0, r1
    43a8:	cmp	r0, #0
    43ac:	bne	4640 <MyGame_Example_Monster_parse_json_table+0x33b8>
    43b0:	b	43b4 <MyGame_Example_Monster_parse_json_table+0x312c>
    43b4:	ldr	r0, [fp, #-12]
    43b8:	add	r0, r0, #8
    43bc:	str	r0, [fp, #-12]
    43c0:	ldr	r0, [fp, #-12]
    43c4:	ldr	r1, [fp, #-16]
    43c8:	bl	4d8c <flatcc_json_parser_symbol_part>
    43cc:	str	r1, [fp, #-44]	; 0xffffffd4
    43d0:	str	r0, [fp, #-48]	; 0xffffffd0
    43d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    43d8:	movw	r1, #25970	; 0x6572
    43dc:	movt	r1, #26214	; 0x6666
    43e0:	teq	r0, r1
    43e4:	bne	4628 <MyGame_Example_Monster_parse_json_table+0x33a0>
    43e8:	b	43ec <MyGame_Example_Monster_parse_json_table+0x3164>
    43ec:	ldr	r0, [fp, #-8]
    43f0:	ldr	r1, [fp, #-12]
    43f4:	str	r1, [fp, #-40]	; 0xffffffd8
    43f8:	ldr	r2, [fp, #-16]
    43fc:	movw	r3, #4
    4400:	bl	4dc4 <flatcc_json_parser_match_symbol>
    4404:	str	r0, [fp, #-12]
    4408:	ldr	r0, [fp, #-40]	; 0xffffffd8
    440c:	ldr	r1, [fp, #-12]
    4410:	cmp	r0, r1
    4414:	beq	4610 <MyGame_Example_Monster_parse_json_table+0x3388>
    4418:	ldr	r0, [fp, #-12]
    441c:	ldr	r1, [fp, #-16]
    4420:	cmp	r0, r1
    4424:	beq	4568 <MyGame_Example_Monster_parse_json_table+0x32e0>
    4428:	ldr	r0, [fp, #-12]
    442c:	ldrb	r0, [r0]
    4430:	cmp	r0, #91	; 0x5b
    4434:	bne	4568 <MyGame_Example_Monster_parse_json_table+0x32e0>
    4438:	ldr	r0, [fp, #-8]
    443c:	ldr	r0, [r0]
    4440:	movw	r1, #1
    4444:	movw	r2, #1
    4448:	uxth	r2, r2
    444c:	mvn	r3, #0
    4450:	bl	0 <flatcc_builder_start_vector>
    4454:	cmp	r0, #0
    4458:	beq	4460 <MyGame_Example_Monster_parse_json_table+0x31d8>
    445c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4460:	ldr	r0, [fp, #-8]
    4464:	ldr	r1, [fp, #-12]
    4468:	ldr	r2, [fp, #-16]
    446c:	sub	r3, fp, #24
    4470:	bl	6614 <flatcc_json_parser_array_start>
    4474:	str	r0, [fp, #-12]
    4478:	ldr	r0, [fp, #-24]	; 0xffffffe8
    447c:	cmp	r0, #0
    4480:	beq	4554 <MyGame_Example_Monster_parse_json_table+0x32cc>
    4484:	movw	r0, #0
    4488:	strb	r0, [sp, #63]	; 0x3f
    448c:	ldr	r0, [fp, #-8]
    4490:	ldr	r0, [r0]
    4494:	movw	r1, #1
    4498:	bl	0 <flatcc_builder_extend_vector>
    449c:	str	r0, [fp, #-28]	; 0xffffffe4
    44a0:	movw	r1, #0
    44a4:	cmp	r0, r1
    44a8:	bne	44b0 <MyGame_Example_Monster_parse_json_table+0x3228>
    44ac:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    44b0:	ldr	r0, [fp, #-8]
    44b4:	ldr	r1, [fp, #-12]
    44b8:	str	r1, [fp, #-40]	; 0xffffffd8
    44bc:	ldr	r2, [fp, #-16]
    44c0:	add	r3, sp, #63	; 0x3f
    44c4:	bl	66f8 <flatcc_json_parser_uint8>
    44c8:	str	r0, [fp, #-12]
    44cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    44d0:	ldr	r1, [fp, #-12]
    44d4:	cmp	r0, r1
    44d8:	bne	452c <MyGame_Example_Monster_parse_json_table+0x32a4>
    44dc:	ldr	r0, [fp, #-8]
    44e0:	ldr	r1, [fp, #-12]
    44e4:	str	r1, [fp, #-40]	; 0xffffffd8
    44e8:	ldr	r2, [fp, #-16]
    44ec:	movw	r3, #0
    44f0:	movt	r3, #0
    44f4:	add	ip, sp, #63	; 0x3f
    44f8:	str	ip, [sp]
    44fc:	bl	67d4 <flatcc_json_parser_symbolic_uint8>
    4500:	str	r0, [fp, #-12]
    4504:	ldr	r0, [fp, #-12]
    4508:	ldr	r1, [fp, #-40]	; 0xffffffd8
    450c:	cmp	r0, r1
    4510:	beq	4524 <MyGame_Example_Monster_parse_json_table+0x329c>
    4514:	ldr	r0, [fp, #-12]
    4518:	ldr	r1, [fp, #-16]
    451c:	cmp	r0, r1
    4520:	bne	4528 <MyGame_Example_Monster_parse_json_table+0x32a0>
    4524:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4528:	b	452c <MyGame_Example_Monster_parse_json_table+0x32a4>
    452c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4530:	ldrb	r1, [sp, #63]	; 0x3f
    4534:	bl	6a00 <flatbuffers_uint8_write_to_pe>
    4538:	ldr	r0, [fp, #-8]
    453c:	ldr	r1, [fp, #-12]
    4540:	ldr	r2, [fp, #-16]
    4544:	sub	r3, fp, #24
    4548:	bl	6a2c <flatcc_json_parser_array_end>
    454c:	str	r0, [fp, #-12]
    4550:	b	4478 <MyGame_Example_Monster_parse_json_table+0x31f0>
    4554:	ldr	r0, [fp, #-8]
    4558:	ldr	r0, [r0]
    455c:	bl	0 <flatcc_builder_end_vector>
    4560:	str	r0, [fp, #-32]	; 0xffffffe0
    4564:	b	45d0 <MyGame_Example_Monster_parse_json_table+0x3348>
    4568:	ldr	r0, [fp, #-8]
    456c:	ldr	r0, [r0]
    4570:	movw	r1, #0
    4574:	str	r1, [sp, #20]
    4578:	movw	r2, #0
    457c:	uxth	r2, r2
    4580:	ldr	r3, [sp, #20]
    4584:	bl	0 <flatcc_builder_start_buffer>
    4588:	cmp	r0, #0
    458c:	beq	4594 <MyGame_Example_Monster_parse_json_table+0x330c>
    4590:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4594:	ldr	r0, [fp, #-8]
    4598:	ldr	r1, [fp, #-12]
    459c:	ldr	r2, [fp, #-16]
    45a0:	sub	r3, fp, #32
    45a4:	bl	1288 <MyGame_Example_Monster_parse_json_table>
    45a8:	str	r0, [fp, #-12]
    45ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    45b0:	cmp	r0, #0
    45b4:	bne	45bc <MyGame_Example_Monster_parse_json_table+0x3334>
    45b8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    45bc:	ldr	r0, [fp, #-8]
    45c0:	ldr	r0, [r0]
    45c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    45c8:	bl	0 <flatcc_builder_end_buffer>
    45cc:	str	r0, [fp, #-32]	; 0xffffffe0
    45d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    45d4:	cmp	r0, #0
    45d8:	beq	45fc <MyGame_Example_Monster_parse_json_table+0x3374>
    45dc:	ldr	r0, [fp, #-8]
    45e0:	ldr	r0, [r0]
    45e4:	movw	r1, #13
    45e8:	bl	0 <flatcc_builder_table_add_offset>
    45ec:	str	r0, [fp, #-36]	; 0xffffffdc
    45f0:	movw	r1, #0
    45f4:	cmp	r0, r1
    45f8:	bne	4600 <MyGame_Example_Monster_parse_json_table+0x3378>
    45fc:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4600:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4604:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4608:	str	r0, [r1]
    460c:	b	4624 <MyGame_Example_Monster_parse_json_table+0x339c>
    4610:	ldr	r0, [fp, #-8]
    4614:	ldr	r1, [fp, #-12]
    4618:	ldr	r2, [fp, #-16]
    461c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4620:	str	r0, [fp, #-12]
    4624:	b	463c <MyGame_Example_Monster_parse_json_table+0x33b4>
    4628:	ldr	r0, [fp, #-8]
    462c:	ldr	r1, [fp, #-12]
    4630:	ldr	r2, [fp, #-16]
    4634:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4638:	str	r0, [fp, #-12]
    463c:	b	4654 <MyGame_Example_Monster_parse_json_table+0x33cc>
    4640:	ldr	r0, [fp, #-8]
    4644:	ldr	r1, [fp, #-12]
    4648:	ldr	r2, [fp, #-16]
    464c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4650:	str	r0, [fp, #-12]
    4654:	b	466c <MyGame_Example_Monster_parse_json_table+0x33e4>
    4658:	ldr	r0, [fp, #-8]
    465c:	ldr	r1, [fp, #-12]
    4660:	ldr	r2, [fp, #-16]
    4664:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4668:	str	r0, [fp, #-12]
    466c:	b	4b10 <MyGame_Example_Monster_parse_json_table+0x3888>
    4670:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4674:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4678:	movw	r2, #25460	; 0x6374
    467c:	movt	r2, #30309	; 0x7665
    4680:	eor	r1, r1, r2
    4684:	movw	r2, #24431	; 0x5f6f
    4688:	movt	r2, #28530	; 0x6f72
    468c:	eor	r0, r0, r2
    4690:	orr	r0, r0, r1
    4694:	cmp	r0, #0
    4698:	bne	4af8 <MyGame_Example_Monster_parse_json_table+0x3870>
    469c:	b	46a0 <MyGame_Example_Monster_parse_json_table+0x3418>
    46a0:	ldr	r0, [fp, #-12]
    46a4:	add	r0, r0, #8
    46a8:	str	r0, [fp, #-12]
    46ac:	ldr	r0, [fp, #-12]
    46b0:	ldr	r1, [fp, #-16]
    46b4:	bl	4d8c <flatcc_json_parser_symbol_part>
    46b8:	str	r1, [fp, #-44]	; 0xffffffd4
    46bc:	str	r0, [fp, #-48]	; 0xffffffd0
    46c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    46c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    46c8:	movw	r2, #25711	; 0x646f
    46cc:	movt	r2, #26207	; 0x665f
    46d0:	eor	r1, r1, r2
    46d4:	movw	r2, #27749	; 0x6c65
    46d8:	movt	r2, #30050	; 0x7562
    46dc:	eor	r0, r0, r2
    46e0:	orr	r0, r0, r1
    46e4:	cmp	r0, #0
    46e8:	bne	48ec <MyGame_Example_Monster_parse_json_table+0x3664>
    46ec:	b	46f0 <MyGame_Example_Monster_parse_json_table+0x3468>
    46f0:	ldr	r0, [fp, #-12]
    46f4:	add	r0, r0, #8
    46f8:	str	r0, [fp, #-12]
    46fc:	ldr	r0, [fp, #-12]
    4700:	ldr	r1, [fp, #-16]
    4704:	bl	4d8c <flatcc_json_parser_symbol_part>
    4708:	str	r1, [fp, #-44]	; 0xffffffd4
    470c:	str	r0, [fp, #-48]	; 0xffffffd0
    4710:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    4714:	mov	r1, #1929379840	; 0x73000000
    4718:	teq	r1, r0, lsl #24
    471c:	bne	48d4 <MyGame_Example_Monster_parse_json_table+0x364c>
    4720:	b	4724 <MyGame_Example_Monster_parse_json_table+0x349c>
    4724:	ldr	r0, [fp, #-8]
    4728:	ldr	r1, [fp, #-12]
    472c:	str	r1, [fp, #-40]	; 0xffffffd8
    4730:	ldr	r2, [fp, #-16]
    4734:	movw	r3, #1
    4738:	bl	4dc4 <flatcc_json_parser_match_symbol>
    473c:	str	r0, [fp, #-12]
    4740:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4744:	ldr	r1, [fp, #-12]
    4748:	cmp	r0, r1
    474c:	beq	48bc <MyGame_Example_Monster_parse_json_table+0x3634>
    4750:	ldr	r3, [pc, #1184]	; 4bf8 <MyGame_Example_Monster_parse_json_table+0x3970>
    4754:	ldr	r0, [fp, #-8]
    4758:	ldr	r0, [r0]
    475c:	movw	r1, #8
    4760:	movw	r2, #8
    4764:	uxth	r2, r2
    4768:	bl	0 <flatcc_builder_start_vector>
    476c:	cmp	r0, #0
    4770:	beq	4778 <MyGame_Example_Monster_parse_json_table+0x34f0>
    4774:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4778:	ldr	r0, [fp, #-8]
    477c:	ldr	r1, [fp, #-12]
    4780:	ldr	r2, [fp, #-16]
    4784:	sub	r3, fp, #24
    4788:	bl	6614 <flatcc_json_parser_array_start>
    478c:	str	r0, [fp, #-12]
    4790:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4794:	cmp	r0, #0
    4798:	beq	486c <MyGame_Example_Monster_parse_json_table+0x35e4>
    479c:	vldr	d16, [pc, #996]	; 4b88 <MyGame_Example_Monster_parse_json_table+0x3900>
    47a0:	vstr	d16, [sp, #48]	; 0x30
    47a4:	ldr	r0, [fp, #-8]
    47a8:	ldr	r0, [r0]
    47ac:	movw	r1, #1
    47b0:	bl	0 <flatcc_builder_extend_vector>
    47b4:	str	r0, [fp, #-28]	; 0xffffffe4
    47b8:	movw	r1, #0
    47bc:	cmp	r0, r1
    47c0:	bne	47c8 <MyGame_Example_Monster_parse_json_table+0x3540>
    47c4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    47c8:	ldr	r0, [fp, #-8]
    47cc:	ldr	r1, [fp, #-12]
    47d0:	str	r1, [fp, #-40]	; 0xffffffd8
    47d4:	ldr	r2, [fp, #-16]
    47d8:	add	r3, sp, #48	; 0x30
    47dc:	bl	0 <flatcc_json_parser_double>
    47e0:	str	r0, [fp, #-12]
    47e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    47e8:	ldr	r1, [fp, #-12]
    47ec:	cmp	r0, r1
    47f0:	bne	4844 <MyGame_Example_Monster_parse_json_table+0x35bc>
    47f4:	ldr	r0, [fp, #-8]
    47f8:	ldr	r1, [fp, #-12]
    47fc:	str	r1, [fp, #-40]	; 0xffffffd8
    4800:	ldr	r2, [fp, #-16]
    4804:	movw	r3, #0
    4808:	movt	r3, #0
    480c:	add	ip, sp, #48	; 0x30
    4810:	str	ip, [sp]
    4814:	bl	9dd8 <flatcc_json_parser_symbolic_double>
    4818:	str	r0, [fp, #-12]
    481c:	ldr	r0, [fp, #-12]
    4820:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4824:	cmp	r0, r1
    4828:	beq	483c <MyGame_Example_Monster_parse_json_table+0x35b4>
    482c:	ldr	r0, [fp, #-12]
    4830:	ldr	r1, [fp, #-16]
    4834:	cmp	r0, r1
    4838:	bne	4840 <MyGame_Example_Monster_parse_json_table+0x35b8>
    483c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4840:	b	4844 <MyGame_Example_Monster_parse_json_table+0x35bc>
    4844:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4848:	vldr	d0, [sp, #48]	; 0x30
    484c:	bl	a010 <flatbuffers_double_write_to_pe>
    4850:	ldr	r0, [fp, #-8]
    4854:	ldr	r1, [fp, #-12]
    4858:	ldr	r2, [fp, #-16]
    485c:	sub	r3, fp, #24
    4860:	bl	6a2c <flatcc_json_parser_array_end>
    4864:	str	r0, [fp, #-12]
    4868:	b	4790 <MyGame_Example_Monster_parse_json_table+0x3508>
    486c:	ldr	r0, [fp, #-8]
    4870:	ldr	r0, [r0]
    4874:	bl	0 <flatcc_builder_end_vector>
    4878:	str	r0, [fp, #-32]	; 0xffffffe0
    487c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4880:	cmp	r0, #0
    4884:	beq	48a8 <MyGame_Example_Monster_parse_json_table+0x3620>
    4888:	ldr	r0, [fp, #-8]
    488c:	ldr	r0, [r0]
    4890:	movw	r1, #33	; 0x21
    4894:	bl	0 <flatcc_builder_table_add_offset>
    4898:	str	r0, [fp, #-36]	; 0xffffffdc
    489c:	movw	r1, #0
    48a0:	cmp	r0, r1
    48a4:	bne	48ac <MyGame_Example_Monster_parse_json_table+0x3624>
    48a8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    48ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    48b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    48b4:	str	r0, [r1]
    48b8:	b	48d0 <MyGame_Example_Monster_parse_json_table+0x3648>
    48bc:	ldr	r0, [fp, #-8]
    48c0:	ldr	r1, [fp, #-12]
    48c4:	ldr	r2, [fp, #-16]
    48c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    48cc:	str	r0, [fp, #-12]
    48d0:	b	48e8 <MyGame_Example_Monster_parse_json_table+0x3660>
    48d4:	ldr	r0, [fp, #-8]
    48d8:	ldr	r1, [fp, #-12]
    48dc:	ldr	r2, [fp, #-16]
    48e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    48e4:	str	r0, [fp, #-12]
    48e8:	b	4af4 <MyGame_Example_Monster_parse_json_table+0x386c>
    48ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    48f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    48f4:	movw	r2, #24428	; 0x5f6c
    48f8:	movt	r2, #102	; 0x66
    48fc:	eor	r2, r2, r1, lsr #8
    4900:	lsr	r0, r0, #8
    4904:	orr	r0, r0, r1, lsl #24
    4908:	movw	r1, #26483	; 0x6773
    490c:	movt	r1, #28526	; 0x6f6e
    4910:	eor	r0, r0, r1
    4914:	orr	r0, r0, r2
    4918:	cmp	r0, #0
    491c:	bne	4adc <MyGame_Example_Monster_parse_json_table+0x3854>
    4920:	b	4924 <MyGame_Example_Monster_parse_json_table+0x369c>
    4924:	ldr	r0, [fp, #-8]
    4928:	ldr	r1, [fp, #-12]
    492c:	str	r1, [fp, #-40]	; 0xffffffd8
    4930:	ldr	r2, [fp, #-16]
    4934:	movw	r3, #7
    4938:	bl	4dc4 <flatcc_json_parser_match_symbol>
    493c:	str	r0, [fp, #-12]
    4940:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4944:	ldr	r1, [fp, #-12]
    4948:	cmp	r0, r1
    494c:	beq	4ac4 <MyGame_Example_Monster_parse_json_table+0x383c>
    4950:	ldr	r3, [pc, #672]	; 4bf8 <MyGame_Example_Monster_parse_json_table+0x3970>
    4954:	ldr	r0, [fp, #-8]
    4958:	ldr	r0, [r0]
    495c:	movw	r1, #8
    4960:	movw	r2, #8
    4964:	uxth	r2, r2
    4968:	bl	0 <flatcc_builder_start_vector>
    496c:	cmp	r0, #0
    4970:	beq	4978 <MyGame_Example_Monster_parse_json_table+0x36f0>
    4974:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4978:	ldr	r0, [fp, #-8]
    497c:	ldr	r1, [fp, #-12]
    4980:	ldr	r2, [fp, #-16]
    4984:	sub	r3, fp, #24
    4988:	bl	6614 <flatcc_json_parser_array_start>
    498c:	str	r0, [fp, #-12]
    4990:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4994:	cmp	r0, #0
    4998:	beq	4a74 <MyGame_Example_Monster_parse_json_table+0x37ec>
    499c:	mov	r0, #0
    49a0:	str	r0, [sp, #44]	; 0x2c
    49a4:	str	r0, [sp, #40]	; 0x28
    49a8:	ldr	r0, [fp, #-8]
    49ac:	ldr	r0, [r0]
    49b0:	movw	r1, #1
    49b4:	bl	0 <flatcc_builder_extend_vector>
    49b8:	str	r0, [fp, #-28]	; 0xffffffe4
    49bc:	movw	r1, #0
    49c0:	cmp	r0, r1
    49c4:	bne	49cc <MyGame_Example_Monster_parse_json_table+0x3744>
    49c8:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    49cc:	ldr	r0, [fp, #-8]
    49d0:	ldr	r1, [fp, #-12]
    49d4:	str	r1, [fp, #-40]	; 0xffffffd8
    49d8:	ldr	r2, [fp, #-16]
    49dc:	add	r3, sp, #40	; 0x28
    49e0:	bl	9408 <flatcc_json_parser_int64>
    49e4:	str	r0, [fp, #-12]
    49e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    49ec:	ldr	r1, [fp, #-12]
    49f0:	cmp	r0, r1
    49f4:	bne	4a48 <MyGame_Example_Monster_parse_json_table+0x37c0>
    49f8:	ldr	r0, [fp, #-8]
    49fc:	ldr	r1, [fp, #-12]
    4a00:	str	r1, [fp, #-40]	; 0xffffffd8
    4a04:	ldr	r2, [fp, #-16]
    4a08:	movw	r3, #0
    4a0c:	movt	r3, #0
    4a10:	add	ip, sp, #40	; 0x28
    4a14:	str	ip, [sp]
    4a18:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    4a1c:	str	r0, [fp, #-12]
    4a20:	ldr	r0, [fp, #-12]
    4a24:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4a28:	cmp	r0, r1
    4a2c:	beq	4a40 <MyGame_Example_Monster_parse_json_table+0x37b8>
    4a30:	ldr	r0, [fp, #-12]
    4a34:	ldr	r1, [fp, #-16]
    4a38:	cmp	r0, r1
    4a3c:	bne	4a44 <MyGame_Example_Monster_parse_json_table+0x37bc>
    4a40:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4a44:	b	4a48 <MyGame_Example_Monster_parse_json_table+0x37c0>
    4a48:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4a4c:	ldr	r2, [sp, #40]	; 0x28
    4a50:	ldr	r3, [sp, #44]	; 0x2c
    4a54:	bl	9720 <flatbuffers_int64_write_to_pe>
    4a58:	ldr	r0, [fp, #-8]
    4a5c:	ldr	r1, [fp, #-12]
    4a60:	ldr	r2, [fp, #-16]
    4a64:	sub	r3, fp, #24
    4a68:	bl	6a2c <flatcc_json_parser_array_end>
    4a6c:	str	r0, [fp, #-12]
    4a70:	b	4990 <MyGame_Example_Monster_parse_json_table+0x3708>
    4a74:	ldr	r0, [fp, #-8]
    4a78:	ldr	r0, [r0]
    4a7c:	bl	0 <flatcc_builder_end_vector>
    4a80:	str	r0, [fp, #-32]	; 0xffffffe0
    4a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4a88:	cmp	r0, #0
    4a8c:	beq	4ab0 <MyGame_Example_Monster_parse_json_table+0x3828>
    4a90:	ldr	r0, [fp, #-8]
    4a94:	ldr	r0, [r0]
    4a98:	movw	r1, #32
    4a9c:	bl	0 <flatcc_builder_table_add_offset>
    4aa0:	str	r0, [fp, #-36]	; 0xffffffdc
    4aa4:	movw	r1, #0
    4aa8:	cmp	r0, r1
    4aac:	bne	4ab4 <MyGame_Example_Monster_parse_json_table+0x382c>
    4ab0:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4ab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4abc:	str	r0, [r1]
    4ac0:	b	4ad8 <MyGame_Example_Monster_parse_json_table+0x3850>
    4ac4:	ldr	r0, [fp, #-8]
    4ac8:	ldr	r1, [fp, #-12]
    4acc:	ldr	r2, [fp, #-16]
    4ad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4ad4:	str	r0, [fp, #-12]
    4ad8:	b	4af0 <MyGame_Example_Monster_parse_json_table+0x3868>
    4adc:	ldr	r0, [fp, #-8]
    4ae0:	ldr	r1, [fp, #-12]
    4ae4:	ldr	r2, [fp, #-16]
    4ae8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4aec:	str	r0, [fp, #-12]
    4af0:	b	4af4 <MyGame_Example_Monster_parse_json_table+0x386c>
    4af4:	b	4b0c <MyGame_Example_Monster_parse_json_table+0x3884>
    4af8:	ldr	r0, [fp, #-8]
    4afc:	ldr	r1, [fp, #-12]
    4b00:	ldr	r2, [fp, #-16]
    4b04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4b08:	str	r0, [fp, #-12]
    4b0c:	b	4b10 <MyGame_Example_Monster_parse_json_table+0x3888>
    4b10:	b	4b14 <MyGame_Example_Monster_parse_json_table+0x388c>
    4b14:	b	4b18 <MyGame_Example_Monster_parse_json_table+0x3890>
    4b18:	b	4b1c <MyGame_Example_Monster_parse_json_table+0x3894>
    4b1c:	b	4b20 <MyGame_Example_Monster_parse_json_table+0x3898>
    4b20:	ldr	r0, [fp, #-8]
    4b24:	ldr	r1, [fp, #-12]
    4b28:	ldr	r2, [fp, #-16]
    4b2c:	sub	r3, fp, #24
    4b30:	bl	a03c <flatcc_json_parser_object_end>
    4b34:	str	r0, [fp, #-12]
    4b38:	b	1324 <MyGame_Example_Monster_parse_json_table+0x9c>
    4b3c:	ldr	r0, [fp, #-8]
    4b40:	ldr	r0, [r0, #24]
    4b44:	cmp	r0, #0
    4b48:	beq	4b50 <MyGame_Example_Monster_parse_json_table+0x38c8>
    4b4c:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4b50:	ldr	r0, [fp, #-8]
    4b54:	ldr	r0, [r0]
    4b58:	movw	r1, #3
    4b5c:	uxth	r1, r1
    4b60:	bl	0 <flatcc_builder_check_required_field>
    4b64:	cmp	r0, #0
    4b68:	bne	4b90 <MyGame_Example_Monster_parse_json_table+0x3908>
    4b6c:	ldr	r0, [fp, #-8]
    4b70:	ldr	r1, [fp, #-12]
    4b74:	ldr	r2, [fp, #-16]
    4b78:	movw	r3, #29
    4b7c:	bl	0 <flatcc_json_parser_set_error>
    4b80:	str	r0, [fp, #-12]
    4b84:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
	...
    4b90:	ldr	r0, [fp, #-8]
    4b94:	ldr	r1, [fp, #-12]
    4b98:	ldr	r2, [fp, #-16]
    4b9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4ba0:	bl	0 <flatcc_json_parser_finalize_unions>
    4ba4:	str	r0, [fp, #-12]
    4ba8:	ldr	r0, [fp, #-8]
    4bac:	ldr	r0, [r0]
    4bb0:	bl	0 <flatcc_builder_end_table>
    4bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bb8:	str	r0, [r1]
    4bbc:	cmp	r0, #0
    4bc0:	bne	4bc8 <MyGame_Example_Monster_parse_json_table+0x3940>
    4bc4:	b	4bd4 <MyGame_Example_Monster_parse_json_table+0x394c>
    4bc8:	ldr	r0, [fp, #-12]
    4bcc:	str	r0, [fp, #-4]
    4bd0:	b	4bec <MyGame_Example_Monster_parse_json_table+0x3964>
    4bd4:	ldr	r0, [fp, #-8]
    4bd8:	ldr	r1, [fp, #-12]
    4bdc:	ldr	r2, [fp, #-16]
    4be0:	movw	r3, #33	; 0x21
    4be4:	bl	0 <flatcc_json_parser_set_error>
    4be8:	str	r0, [fp, #-4]
    4bec:	ldr	r0, [fp, #-4]
    4bf0:	mov	sp, fp
    4bf4:	pop	{fp, pc}
    4bf8:	.word	0x1fffffff

00004bfc <flatcc_json_parser_object_start>:
    4bfc:	push	{fp, lr}
    4c00:	mov	fp, sp
    4c04:	sub	sp, sp, #24
    4c08:	str	r0, [fp, #-8]
    4c0c:	str	r1, [sp, #12]
    4c10:	str	r2, [sp, #8]
    4c14:	str	r3, [sp, #4]
    4c18:	ldr	r0, [sp, #12]
    4c1c:	ldr	r1, [sp, #8]
    4c20:	cmp	r0, r1
    4c24:	beq	4c38 <flatcc_json_parser_object_start+0x3c>
    4c28:	ldr	r0, [sp, #12]
    4c2c:	ldrb	r0, [r0]
    4c30:	cmp	r0, #123	; 0x7b
    4c34:	beq	4c60 <flatcc_json_parser_object_start+0x64>
    4c38:	ldr	r0, [sp, #4]
    4c3c:	movw	r1, #0
    4c40:	str	r1, [r0]
    4c44:	ldr	r0, [fp, #-8]
    4c48:	ldr	r1, [sp, #12]
    4c4c:	ldr	r2, [sp, #8]
    4c50:	movw	r3, #21
    4c54:	bl	0 <flatcc_json_parser_set_error>
    4c58:	str	r0, [fp, #-4]
    4c5c:	b	4cd4 <flatcc_json_parser_object_start+0xd8>
    4c60:	ldr	r0, [fp, #-8]
    4c64:	ldr	r1, [sp, #12]
    4c68:	add	r1, r1, #1
    4c6c:	ldr	r2, [sp, #8]
    4c70:	bl	a1a0 <flatcc_json_parser_space>
    4c74:	str	r0, [sp, #12]
    4c78:	ldr	r0, [sp, #12]
    4c7c:	ldr	r1, [sp, #8]
    4c80:	cmp	r0, r1
    4c84:	beq	4cc0 <flatcc_json_parser_object_start+0xc4>
    4c88:	ldr	r0, [sp, #12]
    4c8c:	ldrb	r0, [r0]
    4c90:	cmp	r0, #125	; 0x7d
    4c94:	bne	4cc0 <flatcc_json_parser_object_start+0xc4>
    4c98:	ldr	r0, [sp, #4]
    4c9c:	movw	r1, #0
    4ca0:	str	r1, [r0]
    4ca4:	ldr	r0, [fp, #-8]
    4ca8:	ldr	r1, [sp, #12]
    4cac:	add	r1, r1, #1
    4cb0:	ldr	r2, [sp, #8]
    4cb4:	bl	a1a0 <flatcc_json_parser_space>
    4cb8:	str	r0, [fp, #-4]
    4cbc:	b	4cd4 <flatcc_json_parser_object_start+0xd8>
    4cc0:	ldr	r0, [sp, #4]
    4cc4:	movw	r1, #1
    4cc8:	str	r1, [r0]
    4ccc:	ldr	r0, [sp, #12]
    4cd0:	str	r0, [fp, #-4]
    4cd4:	ldr	r0, [fp, #-4]
    4cd8:	mov	sp, fp
    4cdc:	pop	{fp, pc}

00004ce0 <flatcc_json_parser_symbol_start>:
    4ce0:	push	{fp, lr}
    4ce4:	mov	fp, sp
    4ce8:	sub	sp, sp, #16
    4cec:	str	r0, [sp, #8]
    4cf0:	str	r1, [sp, #4]
    4cf4:	str	r2, [sp]
    4cf8:	ldr	r0, [sp, #4]
    4cfc:	ldr	r1, [sp]
    4d00:	cmp	r0, r1
    4d04:	bne	4d14 <flatcc_json_parser_symbol_start+0x34>
    4d08:	ldr	r0, [sp, #4]
    4d0c:	str	r0, [fp, #-4]
    4d10:	b	4d80 <flatcc_json_parser_symbol_start+0xa0>
    4d14:	ldr	r0, [sp, #4]
    4d18:	ldrb	r0, [r0]
    4d1c:	cmp	r0, #34	; 0x22
    4d20:	bne	4d40 <flatcc_json_parser_symbol_start+0x60>
    4d24:	ldr	r0, [sp, #4]
    4d28:	add	r0, r0, #1
    4d2c:	str	r0, [sp, #4]
    4d30:	ldr	r0, [sp, #8]
    4d34:	movw	r1, #0
    4d38:	str	r1, [r0, #12]
    4d3c:	b	4d78 <flatcc_json_parser_symbol_start+0x98>
    4d40:	ldr	r0, [sp, #4]
    4d44:	ldrb	r0, [r0]
    4d48:	cmp	r0, #46	; 0x2e
    4d4c:	bne	4d6c <flatcc_json_parser_symbol_start+0x8c>
    4d50:	ldr	r0, [sp, #8]
    4d54:	ldr	r1, [sp, #4]
    4d58:	ldr	r2, [sp]
    4d5c:	movw	r3, #5
    4d60:	bl	0 <flatcc_json_parser_set_error>
    4d64:	str	r0, [fp, #-4]
    4d68:	b	4d80 <flatcc_json_parser_symbol_start+0xa0>
    4d6c:	ldr	r0, [sp, #8]
    4d70:	movw	r1, #1
    4d74:	str	r1, [r0, #12]
    4d78:	ldr	r0, [sp, #4]
    4d7c:	str	r0, [fp, #-4]
    4d80:	ldr	r0, [fp, #-4]
    4d84:	mov	sp, fp
    4d88:	pop	{fp, pc}

00004d8c <flatcc_json_parser_symbol_part>:
    4d8c:	push	{fp, lr}
    4d90:	mov	fp, sp
    4d94:	sub	sp, sp, #16
    4d98:	str	r0, [fp, #-4]
    4d9c:	str	r1, [sp, #8]
    4da0:	ldr	r0, [sp, #8]
    4da4:	ldr	r1, [fp, #-4]
    4da8:	sub	r0, r0, r1
    4dac:	str	r0, [sp, #4]
    4db0:	ldr	r0, [fp, #-4]
    4db4:	ldr	r1, [sp, #8]
    4db8:	bl	a23c <flatcc_json_parser_symbol_part_ext>
    4dbc:	mov	sp, fp
    4dc0:	pop	{fp, pc}

00004dc4 <flatcc_json_parser_match_symbol>:
    4dc4:	push	{fp, lr}
    4dc8:	mov	fp, sp
    4dcc:	sub	sp, sp, #24
    4dd0:	str	r0, [fp, #-8]
    4dd4:	str	r1, [sp, #12]
    4dd8:	str	r2, [sp, #8]
    4ddc:	str	r3, [sp, #4]
    4de0:	ldr	r0, [sp, #12]
    4de4:	str	r0, [sp]
    4de8:	ldr	r0, [sp, #8]
    4dec:	ldr	r1, [sp, #12]
    4df0:	sub	r0, r0, r1
    4df4:	ldr	r1, [sp, #4]
    4df8:	cmp	r0, r1
    4dfc:	bgt	4e0c <flatcc_json_parser_match_symbol+0x48>
    4e00:	ldr	r0, [sp]
    4e04:	str	r0, [fp, #-4]
    4e08:	b	4f20 <flatcc_json_parser_match_symbol+0x15c>
    4e0c:	ldr	r0, [fp, #-8]
    4e10:	ldr	r0, [r0, #12]
    4e14:	cmp	r0, #0
    4e18:	beq	4e78 <flatcc_json_parser_match_symbol+0xb4>
    4e1c:	ldr	r0, [sp, #12]
    4e20:	ldr	r1, [sp, #4]
    4e24:	add	r0, r0, r1
    4e28:	ldrb	r0, [r0]
    4e2c:	cmp	r0, #32
    4e30:	ble	4e58 <flatcc_json_parser_match_symbol+0x94>
    4e34:	ldr	r0, [sp, #12]
    4e38:	ldr	r1, [sp, #4]
    4e3c:	add	r0, r0, r1
    4e40:	ldrb	r0, [r0]
    4e44:	cmp	r0, #58	; 0x3a
    4e48:	beq	4e58 <flatcc_json_parser_match_symbol+0x94>
    4e4c:	ldr	r0, [sp]
    4e50:	str	r0, [fp, #-4]
    4e54:	b	4f20 <flatcc_json_parser_match_symbol+0x15c>
    4e58:	ldr	r0, [sp, #4]
    4e5c:	ldr	r1, [sp, #12]
    4e60:	add	r0, r1, r0
    4e64:	str	r0, [sp, #12]
    4e68:	ldr	r0, [fp, #-8]
    4e6c:	movw	r1, #0
    4e70:	str	r1, [r0, #12]
    4e74:	b	4eb0 <flatcc_json_parser_match_symbol+0xec>
    4e78:	ldr	r0, [sp, #12]
    4e7c:	ldr	r1, [sp, #4]
    4e80:	add	r0, r0, r1
    4e84:	ldrb	r0, [r0]
    4e88:	cmp	r0, #34	; 0x22
    4e8c:	beq	4e9c <flatcc_json_parser_match_symbol+0xd8>
    4e90:	ldr	r0, [sp]
    4e94:	str	r0, [fp, #-4]
    4e98:	b	4f20 <flatcc_json_parser_match_symbol+0x15c>
    4e9c:	ldr	r0, [sp, #4]
    4ea0:	add	r0, r0, #1
    4ea4:	ldr	r1, [sp, #12]
    4ea8:	add	r0, r1, r0
    4eac:	str	r0, [sp, #12]
    4eb0:	ldr	r0, [fp, #-8]
    4eb4:	ldr	r1, [sp, #12]
    4eb8:	ldr	r2, [sp, #8]
    4ebc:	bl	a1a0 <flatcc_json_parser_space>
    4ec0:	str	r0, [sp, #12]
    4ec4:	ldr	r0, [sp, #12]
    4ec8:	ldr	r1, [sp, #8]
    4ecc:	cmp	r0, r1
    4ed0:	beq	4f08 <flatcc_json_parser_match_symbol+0x144>
    4ed4:	ldr	r0, [sp, #12]
    4ed8:	ldrb	r0, [r0]
    4edc:	cmp	r0, #58	; 0x3a
    4ee0:	bne	4f08 <flatcc_json_parser_match_symbol+0x144>
    4ee4:	ldr	r0, [sp, #12]
    4ee8:	add	r0, r0, #1
    4eec:	str	r0, [sp, #12]
    4ef0:	ldr	r0, [fp, #-8]
    4ef4:	ldr	r1, [sp, #12]
    4ef8:	ldr	r2, [sp, #8]
    4efc:	bl	a1a0 <flatcc_json_parser_space>
    4f00:	str	r0, [fp, #-4]
    4f04:	b	4f20 <flatcc_json_parser_match_symbol+0x15c>
    4f08:	ldr	r0, [fp, #-8]
    4f0c:	ldr	r1, [sp, #12]
    4f10:	ldr	r2, [sp, #8]
    4f14:	movw	r3, #4
    4f18:	bl	0 <flatcc_json_parser_set_error>
    4f1c:	str	r0, [fp, #-4]
    4f20:	ldr	r0, [fp, #-4]
    4f24:	mov	sp, fp
    4f28:	pop	{fp, pc}

00004f2c <MyGame_Example_Color_parse_json_enum>:
    4f2c:	push	{fp, lr}
    4f30:	mov	fp, sp
    4f34:	sub	sp, sp, #64	; 0x40
    4f38:	ldr	ip, [fp, #12]
    4f3c:	ldr	lr, [fp, #8]
    4f40:	str	r0, [fp, #-8]
    4f44:	str	r1, [fp, #-12]
    4f48:	str	r2, [fp, #-16]
    4f4c:	str	r3, [fp, #-20]	; 0xffffffec
    4f50:	ldr	r0, [fp, #-12]
    4f54:	str	r0, [fp, #-24]	; 0xffffffe8
    4f58:	ldr	r0, [fp, #-12]
    4f5c:	ldr	r1, [fp, #-16]
    4f60:	str	ip, [sp, #20]
    4f64:	str	lr, [sp, #16]
    4f68:	bl	4d8c <flatcc_json_parser_symbol_part>
    4f6c:	str	r1, [sp, #28]
    4f70:	str	r0, [sp, #24]
    4f74:	ldr	r0, [sp, #24]
    4f78:	ldr	r1, [sp, #28]
    4f7c:	mvn	r2, #-1845493760	; 0x92000000
    4f80:	subs	r0, r2, r0
    4f84:	movw	r2, #25957	; 0x6565
    4f88:	movt	r2, #18290	; 0x4772
    4f8c:	sbcs	r1, r2, r1
    4f90:	bcc	5034 <MyGame_Example_Color_parse_json_enum+0x108>
    4f94:	b	4f98 <MyGame_Example_Color_parse_json_enum+0x6c>
    4f98:	ldr	r0, [sp, #28]
    4f9c:	movw	r1, #30053	; 0x7565
    4fa0:	movt	r1, #17004	; 0x426c
    4fa4:	teq	r0, r1
    4fa8:	bne	5024 <MyGame_Example_Color_parse_json_enum+0xf8>
    4fac:	b	4fb0 <MyGame_Example_Color_parse_json_enum+0x84>
    4fb0:	ldr	r0, [fp, #-8]
    4fb4:	ldr	r1, [fp, #-12]
    4fb8:	str	r1, [fp, #-28]	; 0xffffffe4
    4fbc:	ldr	r2, [fp, #-16]
    4fc0:	ldr	r3, [fp, #12]
    4fc4:	movw	ip, #4
    4fc8:	str	r3, [sp, #12]
    4fcc:	mov	r3, ip
    4fd0:	ldr	ip, [sp, #12]
    4fd4:	str	ip, [sp]
    4fd8:	bl	0 <flatcc_json_parser_match_constant>
    4fdc:	str	r0, [fp, #-12]
    4fe0:	ldr	r0, [fp, #-12]
    4fe4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4fe8:	cmp	r0, r1
    4fec:	beq	5014 <MyGame_Example_Color_parse_json_enum+0xe8>
    4ff0:	ldr	r0, [fp, #8]
    4ff4:	mov	r1, #0
    4ff8:	str	r1, [r0, #4]
    4ffc:	mov	r1, #8
    5000:	str	r1, [r0]
    5004:	ldr	r0, [fp, #-20]	; 0xffffffec
    5008:	movw	r1, #0
    500c:	str	r1, [r0]
    5010:	b	5020 <MyGame_Example_Color_parse_json_enum+0xf4>
    5014:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5018:	str	r0, [fp, #-4]
    501c:	b	517c <MyGame_Example_Color_parse_json_enum+0x250>
    5020:	b	5030 <MyGame_Example_Color_parse_json_enum+0x104>
    5024:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5028:	str	r0, [fp, #-4]
    502c:	b	517c <MyGame_Example_Color_parse_json_enum+0x250>
    5030:	b	5174 <MyGame_Example_Color_parse_json_enum+0x248>
    5034:	ldr	r0, [sp, #28]
    5038:	bic	r0, r0, #255	; 0xff
    503c:	movw	r1, #25600	; 0x6400
    5040:	movt	r1, #21093	; 0x5265
    5044:	teq	r0, r1
    5048:	bne	50c4 <MyGame_Example_Color_parse_json_enum+0x198>
    504c:	b	5050 <MyGame_Example_Color_parse_json_enum+0x124>
    5050:	ldr	r0, [fp, #-8]
    5054:	ldr	r1, [fp, #-12]
    5058:	str	r1, [fp, #-28]	; 0xffffffe4
    505c:	ldr	r2, [fp, #-16]
    5060:	ldr	r3, [fp, #12]
    5064:	movw	ip, #3
    5068:	str	r3, [sp, #8]
    506c:	mov	r3, ip
    5070:	ldr	ip, [sp, #8]
    5074:	str	ip, [sp]
    5078:	bl	0 <flatcc_json_parser_match_constant>
    507c:	str	r0, [fp, #-12]
    5080:	ldr	r0, [fp, #-12]
    5084:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5088:	cmp	r0, r1
    508c:	beq	50b4 <MyGame_Example_Color_parse_json_enum+0x188>
    5090:	ldr	r0, [fp, #8]
    5094:	mov	r1, #0
    5098:	str	r1, [r0, #4]
    509c:	mov	r1, #1
    50a0:	str	r1, [r0]
    50a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    50a8:	movw	r1, #0
    50ac:	str	r1, [r0]
    50b0:	b	50c0 <MyGame_Example_Color_parse_json_enum+0x194>
    50b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    50b8:	str	r0, [fp, #-4]
    50bc:	b	517c <MyGame_Example_Color_parse_json_enum+0x250>
    50c0:	b	5170 <MyGame_Example_Color_parse_json_enum+0x244>
    50c4:	ldrb	r0, [sp, #27]
    50c8:	ldr	r1, [sp, #28]
    50cc:	movw	r2, #25957	; 0x6565
    50d0:	movt	r2, #18290	; 0x4772
    50d4:	eor	r1, r1, r2
    50d8:	eor	r0, r0, #110	; 0x6e
    50dc:	orr	r0, r1, r0, lsl #24
    50e0:	cmp	r0, #0
    50e4:	bne	5160 <MyGame_Example_Color_parse_json_enum+0x234>
    50e8:	b	50ec <MyGame_Example_Color_parse_json_enum+0x1c0>
    50ec:	ldr	r0, [fp, #-8]
    50f0:	ldr	r1, [fp, #-12]
    50f4:	str	r1, [fp, #-28]	; 0xffffffe4
    50f8:	ldr	r2, [fp, #-16]
    50fc:	ldr	r3, [fp, #12]
    5100:	movw	ip, #5
    5104:	str	r3, [sp, #4]
    5108:	mov	r3, ip
    510c:	ldr	ip, [sp, #4]
    5110:	str	ip, [sp]
    5114:	bl	0 <flatcc_json_parser_match_constant>
    5118:	str	r0, [fp, #-12]
    511c:	ldr	r0, [fp, #-12]
    5120:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5124:	cmp	r0, r1
    5128:	beq	5150 <MyGame_Example_Color_parse_json_enum+0x224>
    512c:	ldr	r0, [fp, #8]
    5130:	mov	r1, #0
    5134:	str	r1, [r0, #4]
    5138:	mov	r1, #2
    513c:	str	r1, [r0]
    5140:	ldr	r0, [fp, #-20]	; 0xffffffec
    5144:	movw	r1, #0
    5148:	str	r1, [r0]
    514c:	b	515c <MyGame_Example_Color_parse_json_enum+0x230>
    5150:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5154:	str	r0, [fp, #-4]
    5158:	b	517c <MyGame_Example_Color_parse_json_enum+0x250>
    515c:	b	516c <MyGame_Example_Color_parse_json_enum+0x240>
    5160:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5164:	str	r0, [fp, #-4]
    5168:	b	517c <MyGame_Example_Color_parse_json_enum+0x250>
    516c:	b	5170 <MyGame_Example_Color_parse_json_enum+0x244>
    5170:	b	5174 <MyGame_Example_Color_parse_json_enum+0x248>
    5174:	ldr	r0, [fp, #-12]
    5178:	str	r0, [fp, #-4]
    517c:	ldr	r0, [fp, #-4]
    5180:	mov	sp, fp
    5184:	pop	{fp, pc}

00005188 <monster_test_local_MyGame_Example_json_parser_enum>:
    5188:	push	{fp, lr}
    518c:	mov	fp, sp
    5190:	sub	sp, sp, #56	; 0x38
    5194:	ldr	ip, [fp, #12]
    5198:	ldr	lr, [fp, #8]
    519c:	str	r0, [fp, #-8]
    51a0:	str	r1, [fp, #-12]
    51a4:	str	r2, [fp, #-16]
    51a8:	str	r3, [fp, #-20]	; 0xffffffec
    51ac:	ldr	r0, [fp, #-12]
    51b0:	str	r0, [fp, #-24]	; 0xffffffe8
    51b4:	ldr	r0, [fp, #-12]
    51b8:	ldr	r1, [fp, #-16]
    51bc:	str	ip, [sp, #12]
    51c0:	str	lr, [sp, #8]
    51c4:	bl	4d8c <flatcc_json_parser_symbol_part>
    51c8:	str	r1, [sp, #20]
    51cc:	str	r0, [sp, #16]
    51d0:	ldr	r0, [sp, #16]
    51d4:	ldr	r1, [sp, #20]
    51d8:	movw	r2, #30060	; 0x756c
    51dc:	movt	r2, #25966	; 0x656e
    51e0:	subs	r0, r2, r0
    51e4:	movw	r2, #30815	; 0x785f
    51e8:	movt	r2, #26725	; 0x6865
    51ec:	sbcs	r1, r2, r1
    51f0:	bcc	53dc <monster_test_local_MyGame_Example_json_parser_enum+0x254>
    51f4:	b	51f8 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    51f8:	ldr	r0, [sp, #16]
    51fc:	ldr	r1, [sp, #20]
    5200:	mvn	r2, #-1912602624	; 0x8e000000
    5204:	subs	r0, r2, r0
    5208:	movw	r2, #27759	; 0x6c6f
    520c:	movt	r2, #17263	; 0x436f
    5210:	sbcs	r1, r2, r1
    5214:	bcc	52b0 <monster_test_local_MyGame_Example_json_parser_enum+0x128>
    5218:	b	521c <monster_test_local_MyGame_Example_json_parser_enum+0x94>
    521c:	ldr	r0, [sp, #20]
    5220:	bic	r0, r0, #255	; 0xff
    5224:	movw	r1, #30976	; 0x7900
    5228:	movt	r1, #16750	; 0x416e
    522c:	teq	r0, r1
    5230:	bne	52a0 <monster_test_local_MyGame_Example_json_parser_enum+0x118>
    5234:	b	5238 <monster_test_local_MyGame_Example_json_parser_enum+0xb0>
    5238:	ldr	r0, [fp, #-8]
    523c:	ldr	r1, [fp, #-12]
    5240:	str	r1, [sp, #28]
    5244:	ldr	r2, [fp, #-16]
    5248:	movw	r3, #3
    524c:	bl	a3b0 <flatcc_json_parser_match_scope>
    5250:	str	r0, [fp, #-12]
    5254:	ldr	r0, [fp, #-12]
    5258:	ldr	r1, [sp, #28]
    525c:	cmp	r0, r1
    5260:	beq	5290 <monster_test_local_MyGame_Example_json_parser_enum+0x108>
    5264:	ldr	r0, [fp, #-8]
    5268:	ldr	r1, [fp, #-12]
    526c:	ldr	r2, [fp, #-16]
    5270:	ldr	r3, [fp, #-20]	; 0xffffffec
    5274:	ldr	ip, [fp, #8]
    5278:	ldr	lr, [fp, #12]
    527c:	str	ip, [sp]
    5280:	str	lr, [sp, #4]
    5284:	bl	7b24 <MyGame_Example_Any_parse_json_enum>
    5288:	str	r0, [fp, #-12]
    528c:	b	529c <monster_test_local_MyGame_Example_json_parser_enum+0x114>
    5290:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5294:	str	r0, [fp, #-4]
    5298:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    529c:	b	52ac <monster_test_local_MyGame_Example_json_parser_enum+0x124>
    52a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    52a4:	str	r0, [fp, #-4]
    52a8:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    52ac:	b	53d8 <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    52b0:	ldr	r0, [sp, #20]
    52b4:	bic	r0, r0, #255	; 0xff
    52b8:	movw	r1, #28416	; 0x6f00
    52bc:	movt	r1, #18031	; 0x466f
    52c0:	teq	r0, r1
    52c4:	bne	5334 <monster_test_local_MyGame_Example_json_parser_enum+0x1ac>
    52c8:	b	52cc <monster_test_local_MyGame_Example_json_parser_enum+0x144>
    52cc:	ldr	r0, [fp, #-8]
    52d0:	ldr	r1, [fp, #-12]
    52d4:	str	r1, [sp, #28]
    52d8:	ldr	r2, [fp, #-16]
    52dc:	movw	r3, #3
    52e0:	bl	a3b0 <flatcc_json_parser_match_scope>
    52e4:	str	r0, [fp, #-12]
    52e8:	ldr	r0, [fp, #-12]
    52ec:	ldr	r1, [sp, #28]
    52f0:	cmp	r0, r1
    52f4:	beq	5324 <monster_test_local_MyGame_Example_json_parser_enum+0x19c>
    52f8:	ldr	r0, [fp, #-8]
    52fc:	ldr	r1, [fp, #-12]
    5300:	ldr	r2, [fp, #-16]
    5304:	ldr	r3, [fp, #-20]	; 0xffffffec
    5308:	ldr	ip, [fp, #8]
    530c:	ldr	lr, [fp, #12]
    5310:	str	ip, [sp]
    5314:	str	lr, [sp, #4]
    5318:	bl	a434 <MyGame_Example_Foo_parse_json_enum>
    531c:	str	r0, [fp, #-12]
    5320:	b	5330 <monster_test_local_MyGame_Example_json_parser_enum+0x1a8>
    5324:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5328:	str	r0, [fp, #-4]
    532c:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    5330:	b	53d4 <monster_test_local_MyGame_Example_json_parser_enum+0x24c>
    5334:	ldrb	r0, [sp, #19]
    5338:	ldr	r1, [sp, #20]
    533c:	movw	r2, #27759	; 0x6c6f
    5340:	movt	r2, #17263	; 0x436f
    5344:	eor	r1, r1, r2
    5348:	eor	r0, r0, #114	; 0x72
    534c:	orr	r0, r1, r0, lsl #24
    5350:	cmp	r0, #0
    5354:	bne	53c4 <monster_test_local_MyGame_Example_json_parser_enum+0x23c>
    5358:	b	535c <monster_test_local_MyGame_Example_json_parser_enum+0x1d4>
    535c:	ldr	r0, [fp, #-8]
    5360:	ldr	r1, [fp, #-12]
    5364:	str	r1, [sp, #28]
    5368:	ldr	r2, [fp, #-16]
    536c:	movw	r3, #5
    5370:	bl	a3b0 <flatcc_json_parser_match_scope>
    5374:	str	r0, [fp, #-12]
    5378:	ldr	r0, [fp, #-12]
    537c:	ldr	r1, [sp, #28]
    5380:	cmp	r0, r1
    5384:	beq	53b4 <monster_test_local_MyGame_Example_json_parser_enum+0x22c>
    5388:	ldr	r0, [fp, #-8]
    538c:	ldr	r1, [fp, #-12]
    5390:	ldr	r2, [fp, #-16]
    5394:	ldr	r3, [fp, #-20]	; 0xffffffec
    5398:	ldr	ip, [fp, #8]
    539c:	ldr	lr, [fp, #12]
    53a0:	str	ip, [sp]
    53a4:	str	lr, [sp, #4]
    53a8:	bl	4f2c <MyGame_Example_Color_parse_json_enum>
    53ac:	str	r0, [fp, #-12]
    53b0:	b	53c0 <monster_test_local_MyGame_Example_json_parser_enum+0x238>
    53b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    53b8:	str	r0, [fp, #-4]
    53bc:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    53c0:	b	53d0 <monster_test_local_MyGame_Example_json_parser_enum+0x248>
    53c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    53c8:	str	r0, [fp, #-4]
    53cc:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    53d0:	b	53d4 <monster_test_local_MyGame_Example_json_parser_enum+0x24c>
    53d4:	b	53d8 <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    53d8:	b	5710 <monster_test_local_MyGame_Example_json_parser_enum+0x588>
    53dc:	ldr	r0, [sp, #16]
    53e0:	ldr	r1, [sp, #20]
    53e4:	movw	r2, #30060	; 0x756c
    53e8:	movt	r2, #25966	; 0x656e
    53ec:	subs	r0, r2, r0
    53f0:	movw	r2, #29791	; 0x745f
    53f4:	movt	r2, #26990	; 0x696e
    53f8:	sbcs	r1, r2, r1
    53fc:	bcc	54ac <monster_test_local_MyGame_Example_json_parser_enum+0x324>
    5400:	b	5404 <monster_test_local_MyGame_Example_json_parser_enum+0x27c>
    5404:	ldr	r0, [sp, #16]
    5408:	ldr	r1, [sp, #20]
    540c:	movw	r2, #30815	; 0x785f
    5410:	movt	r2, #26725	; 0x6865
    5414:	eor	r1, r1, r2
    5418:	movw	r2, #30061	; 0x756d
    541c:	movt	r2, #25966	; 0x656e
    5420:	eor	r0, r0, r2
    5424:	orr	r0, r0, r1
    5428:	cmp	r0, #0
    542c:	bne	549c <monster_test_local_MyGame_Example_json_parser_enum+0x314>
    5430:	b	5434 <monster_test_local_MyGame_Example_json_parser_enum+0x2ac>
    5434:	ldr	r0, [fp, #-8]
    5438:	ldr	r1, [fp, #-12]
    543c:	str	r1, [sp, #28]
    5440:	ldr	r2, [fp, #-16]
    5444:	movw	r3, #8
    5448:	bl	a3b0 <flatcc_json_parser_match_scope>
    544c:	str	r0, [fp, #-12]
    5450:	ldr	r0, [fp, #-12]
    5454:	ldr	r1, [sp, #28]
    5458:	cmp	r0, r1
    545c:	beq	548c <monster_test_local_MyGame_Example_json_parser_enum+0x304>
    5460:	ldr	r0, [fp, #-8]
    5464:	ldr	r1, [fp, #-12]
    5468:	ldr	r2, [fp, #-16]
    546c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5470:	ldr	ip, [fp, #8]
    5474:	ldr	lr, [fp, #12]
    5478:	str	ip, [sp]
    547c:	str	lr, [sp, #4]
    5480:	bl	a670 <MyGame_Example_hex_enum_parse_json_enum>
    5484:	str	r0, [fp, #-12]
    5488:	b	5498 <monster_test_local_MyGame_Example_json_parser_enum+0x310>
    548c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5490:	str	r0, [fp, #-4]
    5494:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    5498:	b	54a8 <monster_test_local_MyGame_Example_json_parser_enum+0x320>
    549c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54a0:	str	r0, [fp, #-4]
    54a4:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    54a8:	b	570c <monster_test_local_MyGame_Example_json_parser_enum+0x584>
    54ac:	ldr	r0, [sp, #16]
    54b0:	ldr	r1, [sp, #20]
    54b4:	movw	r2, #30060	; 0x756c
    54b8:	movt	r2, #25966	; 0x656e
    54bc:	subs	r0, r2, r0
    54c0:	movw	r2, #26463	; 0x675f
    54c4:	movt	r2, #28261	; 0x6e65
    54c8:	sbcs	r1, r2, r1
    54cc:	bcc	557c <monster_test_local_MyGame_Example_json_parser_enum+0x3f4>
    54d0:	b	54d4 <monster_test_local_MyGame_Example_json_parser_enum+0x34c>
    54d4:	ldr	r0, [sp, #16]
    54d8:	ldr	r1, [sp, #20]
    54dc:	movw	r2, #29791	; 0x745f
    54e0:	movt	r2, #26990	; 0x696e
    54e4:	eor	r1, r1, r2
    54e8:	movw	r2, #30061	; 0x756d
    54ec:	movt	r2, #25966	; 0x656e
    54f0:	eor	r0, r0, r2
    54f4:	orr	r0, r0, r1
    54f8:	cmp	r0, #0
    54fc:	bne	556c <monster_test_local_MyGame_Example_json_parser_enum+0x3e4>
    5500:	b	5504 <monster_test_local_MyGame_Example_json_parser_enum+0x37c>
    5504:	ldr	r0, [fp, #-8]
    5508:	ldr	r1, [fp, #-12]
    550c:	str	r1, [sp, #28]
    5510:	ldr	r2, [fp, #-16]
    5514:	movw	r3, #8
    5518:	bl	a3b0 <flatcc_json_parser_match_scope>
    551c:	str	r0, [fp, #-12]
    5520:	ldr	r0, [fp, #-12]
    5524:	ldr	r1, [sp, #28]
    5528:	cmp	r0, r1
    552c:	beq	555c <monster_test_local_MyGame_Example_json_parser_enum+0x3d4>
    5530:	ldr	r0, [fp, #-8]
    5534:	ldr	r1, [fp, #-12]
    5538:	ldr	r2, [fp, #-16]
    553c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5540:	ldr	ip, [fp, #8]
    5544:	ldr	lr, [fp, #12]
    5548:	str	ip, [sp]
    554c:	str	lr, [sp, #4]
    5550:	bl	a8c8 <MyGame_Example_int_enum_parse_json_enum>
    5554:	str	r0, [fp, #-12]
    5558:	b	5568 <monster_test_local_MyGame_Example_json_parser_enum+0x3e0>
    555c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5560:	str	r0, [fp, #-4]
    5564:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    5568:	b	5578 <monster_test_local_MyGame_Example_json_parser_enum+0x3f0>
    556c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5570:	str	r0, [fp, #-4]
    5574:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    5578:	b	5708 <monster_test_local_MyGame_Example_json_parser_enum+0x580>
    557c:	ldr	r0, [sp, #16]
    5580:	ldr	r1, [sp, #20]
    5584:	movw	r2, #26463	; 0x675f
    5588:	movt	r2, #28261	; 0x6e65
    558c:	eor	r1, r1, r2
    5590:	movw	r2, #30061	; 0x756d
    5594:	movt	r2, #25966	; 0x656e
    5598:	eor	r0, r0, r2
    559c:	orr	r0, r0, r1
    55a0:	cmp	r0, #0
    55a4:	bne	560c <monster_test_local_MyGame_Example_json_parser_enum+0x484>
    55a8:	b	55ac <monster_test_local_MyGame_Example_json_parser_enum+0x424>
    55ac:	ldr	r0, [fp, #-8]
    55b0:	ldr	r1, [fp, #-12]
    55b4:	str	r1, [sp, #28]
    55b8:	ldr	r2, [fp, #-16]
    55bc:	movw	r3, #8
    55c0:	bl	a3b0 <flatcc_json_parser_match_scope>
    55c4:	str	r0, [fp, #-12]
    55c8:	ldr	r0, [fp, #-12]
    55cc:	ldr	r1, [sp, #28]
    55d0:	cmp	r0, r1
    55d4:	beq	5604 <monster_test_local_MyGame_Example_json_parser_enum+0x47c>
    55d8:	ldr	r0, [fp, #-8]
    55dc:	ldr	r1, [fp, #-12]
    55e0:	ldr	r2, [fp, #-16]
    55e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    55e8:	ldr	ip, [fp, #8]
    55ec:	ldr	lr, [fp, #12]
    55f0:	str	ip, [sp]
    55f4:	str	lr, [sp, #4]
    55f8:	bl	ac00 <MyGame_Example_neg_enum_parse_json_enum>
    55fc:	str	r0, [fp, #-12]
    5600:	b	5608 <monster_test_local_MyGame_Example_json_parser_enum+0x480>
    5604:	b	5614 <monster_test_local_MyGame_Example_json_parser_enum+0x48c>
    5608:	b	5610 <monster_test_local_MyGame_Example_json_parser_enum+0x488>
    560c:	b	5614 <monster_test_local_MyGame_Example_json_parser_enum+0x48c>
    5610:	b	5704 <monster_test_local_MyGame_Example_json_parser_enum+0x57c>
    5614:	ldr	r0, [sp, #16]
    5618:	ldr	r1, [sp, #20]
    561c:	movw	r2, #29797	; 0x7465
    5620:	movt	r2, #28271	; 0x6e6f
    5624:	eor	r1, r1, r2
    5628:	movw	r2, #29817	; 0x7479
    562c:	movt	r2, #28016	; 0x6d70
    5630:	eor	r0, r0, r2
    5634:	orr	r0, r0, r1
    5638:	cmp	r0, #0
    563c:	bne	56f4 <monster_test_local_MyGame_Example_json_parser_enum+0x56c>
    5640:	b	5644 <monster_test_local_MyGame_Example_json_parser_enum+0x4bc>
    5644:	ldr	r0, [fp, #-12]
    5648:	add	r0, r0, #8
    564c:	str	r0, [fp, #-12]
    5650:	ldr	r0, [fp, #-12]
    5654:	ldr	r1, [fp, #-16]
    5658:	bl	4d8c <flatcc_json_parser_symbol_part>
    565c:	str	r1, [sp, #20]
    5660:	str	r0, [sp, #16]
    5664:	ldr	r0, [sp, #20]
    5668:	movw	r1, #30061	; 0x756d
    566c:	movt	r1, #25966	; 0x656e
    5670:	teq	r0, r1
    5674:	bne	56e4 <monster_test_local_MyGame_Example_json_parser_enum+0x55c>
    5678:	b	567c <monster_test_local_MyGame_Example_json_parser_enum+0x4f4>
    567c:	ldr	r0, [fp, #-8]
    5680:	ldr	r1, [fp, #-12]
    5684:	str	r1, [sp, #28]
    5688:	ldr	r2, [fp, #-16]
    568c:	movw	r3, #4
    5690:	bl	a3b0 <flatcc_json_parser_match_scope>
    5694:	str	r0, [fp, #-12]
    5698:	ldr	r0, [fp, #-12]
    569c:	ldr	r1, [sp, #28]
    56a0:	cmp	r0, r1
    56a4:	beq	56d4 <monster_test_local_MyGame_Example_json_parser_enum+0x54c>
    56a8:	ldr	r0, [fp, #-8]
    56ac:	ldr	r1, [fp, #-12]
    56b0:	ldr	r2, [fp, #-16]
    56b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    56b8:	ldr	ip, [fp, #8]
    56bc:	ldr	lr, [fp, #12]
    56c0:	str	ip, [sp]
    56c4:	str	lr, [sp, #4]
    56c8:	bl	ae3c <MyGame_Example_notemptyenum_parse_json_enum>
    56cc:	str	r0, [fp, #-12]
    56d0:	b	56e0 <monster_test_local_MyGame_Example_json_parser_enum+0x558>
    56d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    56d8:	str	r0, [fp, #-4]
    56dc:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    56e0:	b	56f0 <monster_test_local_MyGame_Example_json_parser_enum+0x568>
    56e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    56e8:	str	r0, [fp, #-4]
    56ec:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    56f0:	b	5700 <monster_test_local_MyGame_Example_json_parser_enum+0x578>
    56f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    56f8:	str	r0, [fp, #-4]
    56fc:	b	5718 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    5700:	b	5704 <monster_test_local_MyGame_Example_json_parser_enum+0x57c>
    5704:	b	5708 <monster_test_local_MyGame_Example_json_parser_enum+0x580>
    5708:	b	570c <monster_test_local_MyGame_Example_json_parser_enum+0x584>
    570c:	b	5710 <monster_test_local_MyGame_Example_json_parser_enum+0x588>
    5710:	ldr	r0, [fp, #-12]
    5714:	str	r0, [fp, #-4]
    5718:	ldr	r0, [fp, #-4]
    571c:	mov	sp, fp
    5720:	pop	{fp, pc}

00005724 <monster_test_global_json_parser_enum>:
    5724:	push	{fp, lr}
    5728:	mov	fp, sp
    572c:	sub	sp, sp, #56	; 0x38
    5730:	ldr	ip, [fp, #12]
    5734:	ldr	lr, [fp, #8]
    5738:	str	r0, [fp, #-8]
    573c:	str	r1, [fp, #-12]
    5740:	str	r2, [fp, #-16]
    5744:	str	r3, [fp, #-20]	; 0xffffffec
    5748:	ldr	r0, [fp, #-12]
    574c:	str	r0, [fp, #-24]	; 0xffffffe8
    5750:	ldr	r0, [fp, #-12]
    5754:	ldr	r1, [fp, #-16]
    5758:	str	ip, [sp, #12]
    575c:	str	lr, [sp, #8]
    5760:	bl	4d8c <flatcc_json_parser_symbol_part>
    5764:	str	r1, [sp, #20]
    5768:	str	r0, [sp, #16]
    576c:	ldr	r0, [sp, #16]
    5770:	ldr	r1, [sp, #20]
    5774:	movw	r2, #11844	; 0x2e44
    5778:	movt	r2, #28005	; 0x6d65
    577c:	subs	r0, r2, r0
    5780:	movw	r2, #18273	; 0x4761
    5784:	movt	r2, #19833	; 0x4d79
    5788:	sbcs	r1, r2, r1
    578c:	bcc	58e0 <monster_test_global_json_parser_enum+0x1bc>
    5790:	b	5794 <monster_test_global_json_parser_enum+0x70>
    5794:	ldr	r0, [sp, #16]
    5798:	ldr	r1, [sp, #20]
    579c:	movw	r2, #28276	; 0x6e74
    57a0:	movt	r2, #18017	; 0x4661
    57a4:	eor	r1, r1, r2
    57a8:	movw	r2, #31022	; 0x792e
    57ac:	movt	r2, #24947	; 0x6173
    57b0:	eor	r0, r0, r2
    57b4:	orr	r0, r0, r1
    57b8:	cmp	r0, #0
    57bc:	bne	58d0 <monster_test_global_json_parser_enum+0x1ac>
    57c0:	b	57c4 <monster_test_global_json_parser_enum+0xa0>
    57c4:	ldr	r0, [fp, #-12]
    57c8:	add	r0, r0, #8
    57cc:	str	r0, [fp, #-12]
    57d0:	ldr	r0, [fp, #-12]
    57d4:	ldr	r1, [fp, #-16]
    57d8:	bl	4d8c <flatcc_json_parser_symbol_part>
    57dc:	str	r1, [sp, #20]
    57e0:	str	r0, [sp, #16]
    57e4:	ldr	r0, [sp, #16]
    57e8:	ldr	r1, [sp, #20]
    57ec:	movw	r2, #24946	; 0x6172
    57f0:	movt	r2, #17256	; 0x4368
    57f4:	eor	r1, r1, r2
    57f8:	movw	r2, #29797	; 0x7465
    57fc:	movt	r2, #24931	; 0x6163
    5800:	eor	r0, r0, r2
    5804:	orr	r0, r0, r1
    5808:	cmp	r0, #0
    580c:	bne	58c0 <monster_test_global_json_parser_enum+0x19c>
    5810:	b	5814 <monster_test_global_json_parser_enum+0xf0>
    5814:	ldr	r0, [fp, #-12]
    5818:	add	r0, r0, #8
    581c:	str	r0, [fp, #-12]
    5820:	ldr	r0, [fp, #-12]
    5824:	ldr	r1, [fp, #-16]
    5828:	bl	4d8c <flatcc_json_parser_symbol_part>
    582c:	str	r1, [sp, #20]
    5830:	str	r0, [sp, #16]
    5834:	ldrb	r0, [sp, #23]
    5838:	mov	r1, #1912602624	; 0x72000000
    583c:	teq	r1, r0, lsl #24
    5840:	bne	58b0 <monster_test_global_json_parser_enum+0x18c>
    5844:	b	5848 <monster_test_global_json_parser_enum+0x124>
    5848:	ldr	r0, [fp, #-8]
    584c:	ldr	r1, [fp, #-12]
    5850:	str	r1, [sp, #28]
    5854:	ldr	r2, [fp, #-16]
    5858:	movw	r3, #1
    585c:	bl	a3b0 <flatcc_json_parser_match_scope>
    5860:	str	r0, [fp, #-12]
    5864:	ldr	r0, [fp, #-12]
    5868:	ldr	r1, [sp, #28]
    586c:	cmp	r0, r1
    5870:	beq	58a0 <monster_test_global_json_parser_enum+0x17c>
    5874:	ldr	r0, [fp, #-8]
    5878:	ldr	r1, [fp, #-12]
    587c:	ldr	r2, [fp, #-16]
    5880:	ldr	r3, [fp, #-20]	; 0xffffffec
    5884:	ldr	ip, [fp, #8]
    5888:	ldr	lr, [fp, #12]
    588c:	str	ip, [sp]
    5890:	str	lr, [sp, #4]
    5894:	bl	af28 <Fantasy_Character_parse_json_enum>
    5898:	str	r0, [fp, #-12]
    589c:	b	58ac <monster_test_global_json_parser_enum+0x188>
    58a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58a4:	str	r0, [fp, #-4]
    58a8:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    58ac:	b	58bc <monster_test_global_json_parser_enum+0x198>
    58b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58b4:	str	r0, [fp, #-4]
    58b8:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    58bc:	b	58cc <monster_test_global_json_parser_enum+0x1a8>
    58c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58c4:	str	r0, [fp, #-4]
    58c8:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    58cc:	b	58dc <monster_test_global_json_parser_enum+0x1b8>
    58d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58d4:	str	r0, [fp, #-4]
    58d8:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    58dc:	b	62cc <monster_test_global_json_parser_enum+0xba8>
    58e0:	ldr	r0, [sp, #16]
    58e4:	ldr	r1, [sp, #20]
    58e8:	movw	r2, #18273	; 0x4761
    58ec:	movt	r2, #19833	; 0x4d79
    58f0:	eor	r1, r1, r2
    58f4:	movw	r2, #11845	; 0x2e45
    58f8:	movt	r2, #28005	; 0x6d65
    58fc:	eor	r0, r0, r2
    5900:	orr	r0, r0, r1
    5904:	cmp	r0, #0
    5908:	bne	60bc <monster_test_global_json_parser_enum+0x998>
    590c:	b	5910 <monster_test_global_json_parser_enum+0x1ec>
    5910:	ldr	r0, [fp, #-12]
    5914:	add	r0, r0, #8
    5918:	str	r0, [fp, #-12]
    591c:	ldr	r0, [fp, #-12]
    5920:	ldr	r1, [fp, #-16]
    5924:	bl	4d8c <flatcc_json_parser_symbol_part>
    5928:	str	r1, [sp, #20]
    592c:	str	r0, [sp, #16]
    5930:	ldr	r0, [sp, #16]
    5934:	ldr	r1, [sp, #20]
    5938:	movw	r2, #11879	; 0x2e67
    593c:	movt	r2, #27749	; 0x6c65
    5940:	subs	r0, r2, r0
    5944:	movw	r2, #28016	; 0x6d70
    5948:	movt	r2, #30817	; 0x7861
    594c:	sbcs	r1, r2, r1
    5950:	bcc	5c48 <monster_test_global_json_parser_enum+0x524>
    5954:	b	5958 <monster_test_global_json_parser_enum+0x234>
    5958:	ldr	r0, [sp, #16]
    595c:	ldr	r1, [sp, #20]
    5960:	movw	r2, #11842	; 0x2e42
    5964:	movt	r2, #27749	; 0x6c65
    5968:	subs	r0, r2, r0
    596c:	movw	r2, #28016	; 0x6d70
    5970:	movt	r2, #30817	; 0x7861
    5974:	sbcs	r1, r2, r1
    5978:	bcc	5a70 <monster_test_global_json_parser_enum+0x34c>
    597c:	b	5980 <monster_test_global_json_parser_enum+0x25c>
    5980:	ldr	r0, [sp, #16]
    5984:	ldr	r1, [sp, #20]
    5988:	movw	r2, #28016	; 0x6d70
    598c:	movt	r2, #30817	; 0x7861
    5990:	eor	r1, r1, r2
    5994:	movw	r2, #11841	; 0x2e41
    5998:	movt	r2, #27749	; 0x6c65
    599c:	eor	r0, r0, r2
    59a0:	orr	r0, r0, r1
    59a4:	cmp	r0, #0
    59a8:	bne	5a60 <monster_test_global_json_parser_enum+0x33c>
    59ac:	b	59b0 <monster_test_global_json_parser_enum+0x28c>
    59b0:	ldr	r0, [fp, #-12]
    59b4:	add	r0, r0, #8
    59b8:	str	r0, [fp, #-12]
    59bc:	ldr	r0, [fp, #-12]
    59c0:	ldr	r1, [fp, #-16]
    59c4:	bl	4d8c <flatcc_json_parser_symbol_part>
    59c8:	str	r1, [sp, #20]
    59cc:	str	r0, [sp, #16]
    59d0:	ldrh	r0, [sp, #22]
    59d4:	movw	r1, #0
    59d8:	movt	r1, #28281	; 0x6e79
    59dc:	teq	r1, r0, lsl #16
    59e0:	bne	5a50 <monster_test_global_json_parser_enum+0x32c>
    59e4:	b	59e8 <monster_test_global_json_parser_enum+0x2c4>
    59e8:	ldr	r0, [fp, #-8]
    59ec:	ldr	r1, [fp, #-12]
    59f0:	str	r1, [sp, #28]
    59f4:	ldr	r2, [fp, #-16]
    59f8:	movw	r3, #2
    59fc:	bl	a3b0 <flatcc_json_parser_match_scope>
    5a00:	str	r0, [fp, #-12]
    5a04:	ldr	r0, [fp, #-12]
    5a08:	ldr	r1, [sp, #28]
    5a0c:	cmp	r0, r1
    5a10:	beq	5a40 <monster_test_global_json_parser_enum+0x31c>
    5a14:	ldr	r0, [fp, #-8]
    5a18:	ldr	r1, [fp, #-12]
    5a1c:	ldr	r2, [fp, #-16]
    5a20:	ldr	r3, [fp, #-20]	; 0xffffffec
    5a24:	ldr	ip, [fp, #8]
    5a28:	ldr	lr, [fp, #12]
    5a2c:	str	ip, [sp]
    5a30:	str	lr, [sp, #4]
    5a34:	bl	7b24 <MyGame_Example_Any_parse_json_enum>
    5a38:	str	r0, [fp, #-12]
    5a3c:	b	5a4c <monster_test_global_json_parser_enum+0x328>
    5a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a44:	str	r0, [fp, #-4]
    5a48:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5a4c:	b	5a5c <monster_test_global_json_parser_enum+0x338>
    5a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a54:	str	r0, [fp, #-4]
    5a58:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5a5c:	b	5a6c <monster_test_global_json_parser_enum+0x348>
    5a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a64:	str	r0, [fp, #-4]
    5a68:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5a6c:	b	5c44 <monster_test_global_json_parser_enum+0x520>
    5a70:	ldr	r0, [sp, #16]
    5a74:	ldr	r1, [sp, #20]
    5a78:	movw	r2, #28016	; 0x6d70
    5a7c:	movt	r2, #30817	; 0x7861
    5a80:	eor	r1, r1, r2
    5a84:	movw	r2, #11843	; 0x2e43
    5a88:	movt	r2, #27749	; 0x6c65
    5a8c:	eor	r0, r0, r2
    5a90:	orr	r0, r0, r1
    5a94:	cmp	r0, #0
    5a98:	bne	5b50 <monster_test_global_json_parser_enum+0x42c>
    5a9c:	b	5aa0 <monster_test_global_json_parser_enum+0x37c>
    5aa0:	ldr	r0, [fp, #-12]
    5aa4:	add	r0, r0, #8
    5aa8:	str	r0, [fp, #-12]
    5aac:	ldr	r0, [fp, #-12]
    5ab0:	ldr	r1, [fp, #-16]
    5ab4:	bl	4d8c <flatcc_json_parser_symbol_part>
    5ab8:	str	r1, [sp, #20]
    5abc:	str	r0, [sp, #16]
    5ac0:	ldr	r0, [sp, #20]
    5ac4:	movw	r1, #28530	; 0x6f72
    5ac8:	movt	r1, #28524	; 0x6f6c
    5acc:	teq	r0, r1
    5ad0:	bne	5b40 <monster_test_global_json_parser_enum+0x41c>
    5ad4:	b	5ad8 <monster_test_global_json_parser_enum+0x3b4>
    5ad8:	ldr	r0, [fp, #-8]
    5adc:	ldr	r1, [fp, #-12]
    5ae0:	str	r1, [sp, #28]
    5ae4:	ldr	r2, [fp, #-16]
    5ae8:	movw	r3, #4
    5aec:	bl	a3b0 <flatcc_json_parser_match_scope>
    5af0:	str	r0, [fp, #-12]
    5af4:	ldr	r0, [fp, #-12]
    5af8:	ldr	r1, [sp, #28]
    5afc:	cmp	r0, r1
    5b00:	beq	5b30 <monster_test_global_json_parser_enum+0x40c>
    5b04:	ldr	r0, [fp, #-8]
    5b08:	ldr	r1, [fp, #-12]
    5b0c:	ldr	r2, [fp, #-16]
    5b10:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b14:	ldr	ip, [fp, #8]
    5b18:	ldr	lr, [fp, #12]
    5b1c:	str	ip, [sp]
    5b20:	str	lr, [sp, #4]
    5b24:	bl	4f2c <MyGame_Example_Color_parse_json_enum>
    5b28:	str	r0, [fp, #-12]
    5b2c:	b	5b3c <monster_test_global_json_parser_enum+0x418>
    5b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b34:	str	r0, [fp, #-4]
    5b38:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5b3c:	b	5b4c <monster_test_global_json_parser_enum+0x428>
    5b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b44:	str	r0, [fp, #-4]
    5b48:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5b4c:	b	5c40 <monster_test_global_json_parser_enum+0x51c>
    5b50:	ldr	r0, [sp, #16]
    5b54:	ldr	r1, [sp, #20]
    5b58:	movw	r2, #28016	; 0x6d70
    5b5c:	movt	r2, #30817	; 0x7861
    5b60:	eor	r1, r1, r2
    5b64:	movw	r2, #11846	; 0x2e46
    5b68:	movt	r2, #27749	; 0x6c65
    5b6c:	eor	r0, r0, r2
    5b70:	orr	r0, r0, r1
    5b74:	cmp	r0, #0
    5b78:	bne	5c30 <monster_test_global_json_parser_enum+0x50c>
    5b7c:	b	5b80 <monster_test_global_json_parser_enum+0x45c>
    5b80:	ldr	r0, [fp, #-12]
    5b84:	add	r0, r0, #8
    5b88:	str	r0, [fp, #-12]
    5b8c:	ldr	r0, [fp, #-12]
    5b90:	ldr	r1, [fp, #-16]
    5b94:	bl	4d8c <flatcc_json_parser_symbol_part>
    5b98:	str	r1, [sp, #20]
    5b9c:	str	r0, [sp, #16]
    5ba0:	ldrh	r0, [sp, #22]
    5ba4:	movw	r1, #0
    5ba8:	movt	r1, #28527	; 0x6f6f
    5bac:	teq	r1, r0, lsl #16
    5bb0:	bne	5c20 <monster_test_global_json_parser_enum+0x4fc>
    5bb4:	b	5bb8 <monster_test_global_json_parser_enum+0x494>
    5bb8:	ldr	r0, [fp, #-8]
    5bbc:	ldr	r1, [fp, #-12]
    5bc0:	str	r1, [sp, #28]
    5bc4:	ldr	r2, [fp, #-16]
    5bc8:	movw	r3, #2
    5bcc:	bl	a3b0 <flatcc_json_parser_match_scope>
    5bd0:	str	r0, [fp, #-12]
    5bd4:	ldr	r0, [fp, #-12]
    5bd8:	ldr	r1, [sp, #28]
    5bdc:	cmp	r0, r1
    5be0:	beq	5c10 <monster_test_global_json_parser_enum+0x4ec>
    5be4:	ldr	r0, [fp, #-8]
    5be8:	ldr	r1, [fp, #-12]
    5bec:	ldr	r2, [fp, #-16]
    5bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
    5bf4:	ldr	ip, [fp, #8]
    5bf8:	ldr	lr, [fp, #12]
    5bfc:	str	ip, [sp]
    5c00:	str	lr, [sp, #4]
    5c04:	bl	a434 <MyGame_Example_Foo_parse_json_enum>
    5c08:	str	r0, [fp, #-12]
    5c0c:	b	5c1c <monster_test_global_json_parser_enum+0x4f8>
    5c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c14:	str	r0, [fp, #-4]
    5c18:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5c1c:	b	5c2c <monster_test_global_json_parser_enum+0x508>
    5c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c24:	str	r0, [fp, #-4]
    5c28:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5c2c:	b	5c3c <monster_test_global_json_parser_enum+0x518>
    5c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c34:	str	r0, [fp, #-4]
    5c38:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5c3c:	b	5c40 <monster_test_global_json_parser_enum+0x51c>
    5c40:	b	5c44 <monster_test_global_json_parser_enum+0x520>
    5c44:	b	60b8 <monster_test_global_json_parser_enum+0x994>
    5c48:	ldr	r0, [sp, #16]
    5c4c:	ldr	r1, [sp, #20]
    5c50:	movw	r2, #11880	; 0x2e68
    5c54:	movt	r2, #27749	; 0x6c65
    5c58:	subs	r0, r2, r0
    5c5c:	movw	r2, #28016	; 0x6d70
    5c60:	movt	r2, #30817	; 0x7861
    5c64:	sbcs	r1, r2, r1
    5c68:	bcc	5d80 <monster_test_global_json_parser_enum+0x65c>
    5c6c:	b	5c70 <monster_test_global_json_parser_enum+0x54c>
    5c70:	ldr	r0, [sp, #16]
    5c74:	ldr	r1, [sp, #20]
    5c78:	movw	r2, #28016	; 0x6d70
    5c7c:	movt	r2, #30817	; 0x7861
    5c80:	eor	r1, r1, r2
    5c84:	movw	r2, #11880	; 0x2e68
    5c88:	movt	r2, #27749	; 0x6c65
    5c8c:	eor	r0, r0, r2
    5c90:	orr	r0, r0, r1
    5c94:	cmp	r0, #0
    5c98:	bne	5d70 <monster_test_global_json_parser_enum+0x64c>
    5c9c:	b	5ca0 <monster_test_global_json_parser_enum+0x57c>
    5ca0:	ldr	r0, [fp, #-12]
    5ca4:	add	r0, r0, #8
    5ca8:	str	r0, [fp, #-12]
    5cac:	ldr	r0, [fp, #-12]
    5cb0:	ldr	r1, [fp, #-16]
    5cb4:	bl	4d8c <flatcc_json_parser_symbol_part>
    5cb8:	str	r1, [sp, #20]
    5cbc:	str	r0, [sp, #16]
    5cc0:	ldr	r0, [sp, #16]
    5cc4:	ldr	r1, [sp, #20]
    5cc8:	movw	r2, #30815	; 0x785f
    5ccc:	movt	r2, #101	; 0x65
    5cd0:	eor	r2, r2, r1, lsr #8
    5cd4:	lsr	r0, r0, #8
    5cd8:	orr	r0, r0, r1, lsl #24
    5cdc:	movw	r1, #30061	; 0x756d
    5ce0:	movt	r1, #25966	; 0x656e
    5ce4:	eor	r0, r0, r1
    5ce8:	orr	r0, r0, r2
    5cec:	cmp	r0, #0
    5cf0:	bne	5d60 <monster_test_global_json_parser_enum+0x63c>
    5cf4:	b	5cf8 <monster_test_global_json_parser_enum+0x5d4>
    5cf8:	ldr	r0, [fp, #-8]
    5cfc:	ldr	r1, [fp, #-12]
    5d00:	str	r1, [sp, #28]
    5d04:	ldr	r2, [fp, #-16]
    5d08:	movw	r3, #7
    5d0c:	bl	a3b0 <flatcc_json_parser_match_scope>
    5d10:	str	r0, [fp, #-12]
    5d14:	ldr	r0, [fp, #-12]
    5d18:	ldr	r1, [sp, #28]
    5d1c:	cmp	r0, r1
    5d20:	beq	5d50 <monster_test_global_json_parser_enum+0x62c>
    5d24:	ldr	r0, [fp, #-8]
    5d28:	ldr	r1, [fp, #-12]
    5d2c:	ldr	r2, [fp, #-16]
    5d30:	ldr	r3, [fp, #-20]	; 0xffffffec
    5d34:	ldr	ip, [fp, #8]
    5d38:	ldr	lr, [fp, #12]
    5d3c:	str	ip, [sp]
    5d40:	str	lr, [sp, #4]
    5d44:	bl	a670 <MyGame_Example_hex_enum_parse_json_enum>
    5d48:	str	r0, [fp, #-12]
    5d4c:	b	5d5c <monster_test_global_json_parser_enum+0x638>
    5d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d54:	str	r0, [fp, #-4]
    5d58:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5d5c:	b	5d6c <monster_test_global_json_parser_enum+0x648>
    5d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d64:	str	r0, [fp, #-4]
    5d68:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5d6c:	b	5d7c <monster_test_global_json_parser_enum+0x658>
    5d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d74:	str	r0, [fp, #-4]
    5d78:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5d7c:	b	60b4 <monster_test_global_json_parser_enum+0x990>
    5d80:	ldr	r0, [sp, #16]
    5d84:	ldr	r1, [sp, #20]
    5d88:	movw	r2, #11885	; 0x2e6d
    5d8c:	movt	r2, #27749	; 0x6c65
    5d90:	subs	r0, r2, r0
    5d94:	movw	r2, #28016	; 0x6d70
    5d98:	movt	r2, #30817	; 0x7861
    5d9c:	sbcs	r1, r2, r1
    5da0:	bcc	5eb8 <monster_test_global_json_parser_enum+0x794>
    5da4:	b	5da8 <monster_test_global_json_parser_enum+0x684>
    5da8:	ldr	r0, [sp, #16]
    5dac:	ldr	r1, [sp, #20]
    5db0:	movw	r2, #28016	; 0x6d70
    5db4:	movt	r2, #30817	; 0x7861
    5db8:	eor	r1, r1, r2
    5dbc:	movw	r2, #11881	; 0x2e69
    5dc0:	movt	r2, #27749	; 0x6c65
    5dc4:	eor	r0, r0, r2
    5dc8:	orr	r0, r0, r1
    5dcc:	cmp	r0, #0
    5dd0:	bne	5ea8 <monster_test_global_json_parser_enum+0x784>
    5dd4:	b	5dd8 <monster_test_global_json_parser_enum+0x6b4>
    5dd8:	ldr	r0, [fp, #-12]
    5ddc:	add	r0, r0, #8
    5de0:	str	r0, [fp, #-12]
    5de4:	ldr	r0, [fp, #-12]
    5de8:	ldr	r1, [fp, #-16]
    5dec:	bl	4d8c <flatcc_json_parser_symbol_part>
    5df0:	str	r1, [sp, #20]
    5df4:	str	r0, [sp, #16]
    5df8:	ldr	r0, [sp, #16]
    5dfc:	ldr	r1, [sp, #20]
    5e00:	movw	r2, #29791	; 0x745f
    5e04:	movt	r2, #110	; 0x6e
    5e08:	eor	r2, r2, r1, lsr #8
    5e0c:	lsr	r0, r0, #8
    5e10:	orr	r0, r0, r1, lsl #24
    5e14:	movw	r1, #30061	; 0x756d
    5e18:	movt	r1, #25966	; 0x656e
    5e1c:	eor	r0, r0, r1
    5e20:	orr	r0, r0, r2
    5e24:	cmp	r0, #0
    5e28:	bne	5e98 <monster_test_global_json_parser_enum+0x774>
    5e2c:	b	5e30 <monster_test_global_json_parser_enum+0x70c>
    5e30:	ldr	r0, [fp, #-8]
    5e34:	ldr	r1, [fp, #-12]
    5e38:	str	r1, [sp, #28]
    5e3c:	ldr	r2, [fp, #-16]
    5e40:	movw	r3, #7
    5e44:	bl	a3b0 <flatcc_json_parser_match_scope>
    5e48:	str	r0, [fp, #-12]
    5e4c:	ldr	r0, [fp, #-12]
    5e50:	ldr	r1, [sp, #28]
    5e54:	cmp	r0, r1
    5e58:	beq	5e88 <monster_test_global_json_parser_enum+0x764>
    5e5c:	ldr	r0, [fp, #-8]
    5e60:	ldr	r1, [fp, #-12]
    5e64:	ldr	r2, [fp, #-16]
    5e68:	ldr	r3, [fp, #-20]	; 0xffffffec
    5e6c:	ldr	ip, [fp, #8]
    5e70:	ldr	lr, [fp, #12]
    5e74:	str	ip, [sp]
    5e78:	str	lr, [sp, #4]
    5e7c:	bl	a8c8 <MyGame_Example_int_enum_parse_json_enum>
    5e80:	str	r0, [fp, #-12]
    5e84:	b	5e94 <monster_test_global_json_parser_enum+0x770>
    5e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e8c:	str	r0, [fp, #-4]
    5e90:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5e94:	b	5ea4 <monster_test_global_json_parser_enum+0x780>
    5e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e9c:	str	r0, [fp, #-4]
    5ea0:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5ea4:	b	5eb4 <monster_test_global_json_parser_enum+0x790>
    5ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5eac:	str	r0, [fp, #-4]
    5eb0:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    5eb4:	b	60b0 <monster_test_global_json_parser_enum+0x98c>
    5eb8:	ldr	r0, [sp, #16]
    5ebc:	ldr	r1, [sp, #20]
    5ec0:	movw	r2, #28016	; 0x6d70
    5ec4:	movt	r2, #30817	; 0x7861
    5ec8:	eor	r1, r1, r2
    5ecc:	movw	r2, #11886	; 0x2e6e
    5ed0:	movt	r2, #27749	; 0x6c65
    5ed4:	eor	r0, r0, r2
    5ed8:	orr	r0, r0, r1
    5edc:	cmp	r0, #0
    5ee0:	bne	60a0 <monster_test_global_json_parser_enum+0x97c>
    5ee4:	b	5ee8 <monster_test_global_json_parser_enum+0x7c4>
    5ee8:	ldr	r0, [fp, #-12]
    5eec:	add	r0, r0, #8
    5ef0:	str	r0, [fp, #-12]
    5ef4:	ldr	r0, [fp, #-12]
    5ef8:	ldr	r1, [fp, #-16]
    5efc:	bl	4d8c <flatcc_json_parser_symbol_part>
    5f00:	str	r1, [sp, #20]
    5f04:	str	r0, [sp, #16]
    5f08:	ldr	r0, [sp, #16]
    5f0c:	ldr	r1, [sp, #20]
    5f10:	movw	r2, #26463	; 0x675f
    5f14:	movt	r2, #101	; 0x65
    5f18:	eor	r2, r2, r1, lsr #8
    5f1c:	lsr	r0, r0, #8
    5f20:	orr	r0, r0, r1, lsl #24
    5f24:	movw	r1, #30061	; 0x756d
    5f28:	movt	r1, #25966	; 0x656e
    5f2c:	eor	r0, r0, r1
    5f30:	orr	r0, r0, r2
    5f34:	cmp	r0, #0
    5f38:	bne	5fa0 <monster_test_global_json_parser_enum+0x87c>
    5f3c:	b	5f40 <monster_test_global_json_parser_enum+0x81c>
    5f40:	ldr	r0, [fp, #-8]
    5f44:	ldr	r1, [fp, #-12]
    5f48:	str	r1, [sp, #28]
    5f4c:	ldr	r2, [fp, #-16]
    5f50:	movw	r3, #7
    5f54:	bl	a3b0 <flatcc_json_parser_match_scope>
    5f58:	str	r0, [fp, #-12]
    5f5c:	ldr	r0, [fp, #-12]
    5f60:	ldr	r1, [sp, #28]
    5f64:	cmp	r0, r1
    5f68:	beq	5f98 <monster_test_global_json_parser_enum+0x874>
    5f6c:	ldr	r0, [fp, #-8]
    5f70:	ldr	r1, [fp, #-12]
    5f74:	ldr	r2, [fp, #-16]
    5f78:	ldr	r3, [fp, #-20]	; 0xffffffec
    5f7c:	ldr	ip, [fp, #8]
    5f80:	ldr	lr, [fp, #12]
    5f84:	str	ip, [sp]
    5f88:	str	lr, [sp, #4]
    5f8c:	bl	ac00 <MyGame_Example_neg_enum_parse_json_enum>
    5f90:	str	r0, [fp, #-12]
    5f94:	b	5f9c <monster_test_global_json_parser_enum+0x878>
    5f98:	b	5fa8 <monster_test_global_json_parser_enum+0x884>
    5f9c:	b	5fa4 <monster_test_global_json_parser_enum+0x880>
    5fa0:	b	5fa8 <monster_test_global_json_parser_enum+0x884>
    5fa4:	b	609c <monster_test_global_json_parser_enum+0x978>
    5fa8:	ldr	r0, [sp, #16]
    5fac:	ldr	r1, [sp, #20]
    5fb0:	movw	r2, #25965	; 0x656d
    5fb4:	movt	r2, #28532	; 0x6f74
    5fb8:	eor	r1, r1, r2
    5fbc:	movw	r2, #31077	; 0x7965
    5fc0:	movt	r2, #28788	; 0x7074
    5fc4:	eor	r0, r0, r2
    5fc8:	orr	r0, r0, r1
    5fcc:	cmp	r0, #0
    5fd0:	bne	608c <monster_test_global_json_parser_enum+0x968>
    5fd4:	b	5fd8 <monster_test_global_json_parser_enum+0x8b4>
    5fd8:	ldr	r0, [fp, #-12]
    5fdc:	add	r0, r0, #8
    5fe0:	str	r0, [fp, #-12]
    5fe4:	ldr	r0, [fp, #-12]
    5fe8:	ldr	r1, [fp, #-16]
    5fec:	bl	4d8c <flatcc_json_parser_symbol_part>
    5ff0:	str	r1, [sp, #20]
    5ff4:	str	r0, [sp, #16]
    5ff8:	ldr	r0, [sp, #20]
    5ffc:	bic	r0, r0, #255	; 0xff
    6000:	movw	r1, #27904	; 0x6d00
    6004:	movt	r1, #28277	; 0x6e75
    6008:	teq	r0, r1
    600c:	bne	607c <monster_test_global_json_parser_enum+0x958>
    6010:	b	6014 <monster_test_global_json_parser_enum+0x8f0>
    6014:	ldr	r0, [fp, #-8]
    6018:	ldr	r1, [fp, #-12]
    601c:	str	r1, [sp, #28]
    6020:	ldr	r2, [fp, #-16]
    6024:	movw	r3, #3
    6028:	bl	a3b0 <flatcc_json_parser_match_scope>
    602c:	str	r0, [fp, #-12]
    6030:	ldr	r0, [fp, #-12]
    6034:	ldr	r1, [sp, #28]
    6038:	cmp	r0, r1
    603c:	beq	606c <monster_test_global_json_parser_enum+0x948>
    6040:	ldr	r0, [fp, #-8]
    6044:	ldr	r1, [fp, #-12]
    6048:	ldr	r2, [fp, #-16]
    604c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6050:	ldr	ip, [fp, #8]
    6054:	ldr	lr, [fp, #12]
    6058:	str	ip, [sp]
    605c:	str	lr, [sp, #4]
    6060:	bl	ae3c <MyGame_Example_notemptyenum_parse_json_enum>
    6064:	str	r0, [fp, #-12]
    6068:	b	6078 <monster_test_global_json_parser_enum+0x954>
    606c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6070:	str	r0, [fp, #-4]
    6074:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    6078:	b	6088 <monster_test_global_json_parser_enum+0x964>
    607c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6080:	str	r0, [fp, #-4]
    6084:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    6088:	b	6098 <monster_test_global_json_parser_enum+0x974>
    608c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6090:	str	r0, [fp, #-4]
    6094:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    6098:	b	609c <monster_test_global_json_parser_enum+0x978>
    609c:	b	60ac <monster_test_global_json_parser_enum+0x988>
    60a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    60a4:	str	r0, [fp, #-4]
    60a8:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    60ac:	b	60b0 <monster_test_global_json_parser_enum+0x98c>
    60b0:	b	60b4 <monster_test_global_json_parser_enum+0x990>
    60b4:	b	60b8 <monster_test_global_json_parser_enum+0x994>
    60b8:	b	62c8 <monster_test_global_json_parser_enum+0xba4>
    60bc:	ldr	r0, [sp, #16]
    60c0:	ldr	r1, [sp, #20]
    60c4:	movw	r2, #18273	; 0x4761
    60c8:	movt	r2, #19833	; 0x4d79
    60cc:	eor	r1, r1, r2
    60d0:	movw	r2, #11855	; 0x2e4f
    60d4:	movt	r2, #28005	; 0x6d65
    60d8:	eor	r0, r0, r2
    60dc:	orr	r0, r0, r1
    60e0:	cmp	r0, #0
    60e4:	bne	62b8 <monster_test_global_json_parser_enum+0xb94>
    60e8:	b	60ec <monster_test_global_json_parser_enum+0x9c8>
    60ec:	ldr	r0, [fp, #-12]
    60f0:	add	r0, r0, #8
    60f4:	str	r0, [fp, #-12]
    60f8:	ldr	r0, [fp, #-12]
    60fc:	ldr	r1, [fp, #-16]
    6100:	bl	4d8c <flatcc_json_parser_symbol_part>
    6104:	str	r1, [sp, #20]
    6108:	str	r0, [sp, #16]
    610c:	ldr	r0, [sp, #16]
    6110:	ldr	r1, [sp, #20]
    6114:	movw	r2, #25970	; 0x6572
    6118:	movt	r2, #29800	; 0x7468
    611c:	eor	r1, r1, r2
    6120:	movw	r2, #28005	; 0x6d65
    6124:	movt	r2, #20065	; 0x4e61
    6128:	eor	r0, r0, r2
    612c:	orr	r0, r0, r1
    6130:	cmp	r0, #0
    6134:	bne	62a8 <monster_test_global_json_parser_enum+0xb84>
    6138:	b	613c <monster_test_global_json_parser_enum+0xa18>
    613c:	ldr	r0, [fp, #-12]
    6140:	add	r0, r0, #8
    6144:	str	r0, [fp, #-12]
    6148:	ldr	r0, [fp, #-12]
    614c:	ldr	r1, [fp, #-16]
    6150:	bl	4d8c <flatcc_json_parser_symbol_part>
    6154:	str	r1, [sp, #20]
    6158:	str	r0, [sp, #16]
    615c:	ldr	r0, [sp, #16]
    6160:	ldr	r1, [sp, #20]
    6164:	movw	r2, #24931	; 0x6163
    6168:	movt	r2, #21360	; 0x5370
    616c:	eor	r1, r1, r2
    6170:	movw	r2, #18034	; 0x4672
    6174:	movt	r2, #25902	; 0x652e
    6178:	eor	r0, r0, r2
    617c:	orr	r0, r0, r1
    6180:	cmp	r0, #0
    6184:	bne	6298 <monster_test_global_json_parser_enum+0xb74>
    6188:	b	618c <monster_test_global_json_parser_enum+0xa68>
    618c:	ldr	r0, [fp, #-12]
    6190:	add	r0, r0, #8
    6194:	str	r0, [fp, #-12]
    6198:	ldr	r0, [fp, #-12]
    619c:	ldr	r1, [fp, #-16]
    61a0:	bl	4d8c <flatcc_json_parser_symbol_part>
    61a4:	str	r1, [sp, #20]
    61a8:	str	r0, [sp, #16]
    61ac:	ldr	r0, [sp, #16]
    61b0:	ldr	r1, [sp, #20]
    61b4:	movw	r2, #18798	; 0x496e
    61b8:	movt	r2, #28525	; 0x6f6d
    61bc:	eor	r1, r1, r2
    61c0:	movw	r2, #30052	; 0x7564
    61c4:	movt	r2, #25452	; 0x636c
    61c8:	eor	r0, r0, r2
    61cc:	orr	r0, r0, r1
    61d0:	cmp	r0, #0
    61d4:	bne	6288 <monster_test_global_json_parser_enum+0xb64>
    61d8:	b	61dc <monster_test_global_json_parser_enum+0xab8>
    61dc:	ldr	r0, [fp, #-12]
    61e0:	add	r0, r0, #8
    61e4:	str	r0, [fp, #-12]
    61e8:	ldr	r0, [fp, #-12]
    61ec:	ldr	r1, [fp, #-16]
    61f0:	bl	4d8c <flatcc_json_parser_symbol_part>
    61f4:	str	r1, [sp, #20]
    61f8:	str	r0, [sp, #16]
    61fc:	ldrb	r0, [sp, #23]
    6200:	mov	r1, #1694498816	; 0x65000000
    6204:	teq	r1, r0, lsl #24
    6208:	bne	6278 <monster_test_global_json_parser_enum+0xb54>
    620c:	b	6210 <monster_test_global_json_parser_enum+0xaec>
    6210:	ldr	r0, [fp, #-8]
    6214:	ldr	r1, [fp, #-12]
    6218:	str	r1, [sp, #28]
    621c:	ldr	r2, [fp, #-16]
    6220:	movw	r3, #1
    6224:	bl	a3b0 <flatcc_json_parser_match_scope>
    6228:	str	r0, [fp, #-12]
    622c:	ldr	r0, [fp, #-12]
    6230:	ldr	r1, [sp, #28]
    6234:	cmp	r0, r1
    6238:	beq	6268 <monster_test_global_json_parser_enum+0xb44>
    623c:	ldr	r0, [fp, #-8]
    6240:	ldr	r1, [fp, #-12]
    6244:	ldr	r2, [fp, #-16]
    6248:	ldr	r3, [fp, #-20]	; 0xffffffec
    624c:	ldr	ip, [fp, #8]
    6250:	ldr	lr, [fp, #12]
    6254:	str	ip, [sp]
    6258:	str	lr, [sp, #4]
    625c:	bl	b4c4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    6260:	str	r0, [fp, #-12]
    6264:	b	6274 <monster_test_global_json_parser_enum+0xb50>
    6268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    626c:	str	r0, [fp, #-4]
    6270:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    6274:	b	6284 <monster_test_global_json_parser_enum+0xb60>
    6278:	ldr	r0, [fp, #-24]	; 0xffffffe8
    627c:	str	r0, [fp, #-4]
    6280:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    6284:	b	6294 <monster_test_global_json_parser_enum+0xb70>
    6288:	ldr	r0, [fp, #-24]	; 0xffffffe8
    628c:	str	r0, [fp, #-4]
    6290:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    6294:	b	62a4 <monster_test_global_json_parser_enum+0xb80>
    6298:	ldr	r0, [fp, #-24]	; 0xffffffe8
    629c:	str	r0, [fp, #-4]
    62a0:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    62a4:	b	62b4 <monster_test_global_json_parser_enum+0xb90>
    62a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    62ac:	str	r0, [fp, #-4]
    62b0:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    62b4:	b	62c4 <monster_test_global_json_parser_enum+0xba0>
    62b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    62bc:	str	r0, [fp, #-4]
    62c0:	b	62d4 <monster_test_global_json_parser_enum+0xbb0>
    62c4:	b	62c8 <monster_test_global_json_parser_enum+0xba4>
    62c8:	b	62cc <monster_test_global_json_parser_enum+0xba8>
    62cc:	ldr	r0, [fp, #-12]
    62d0:	str	r0, [fp, #-4]
    62d4:	ldr	r0, [fp, #-4]
    62d8:	mov	sp, fp
    62dc:	pop	{fp, pc}

000062e0 <flatcc_json_parser_int8>:
    62e0:	push	{r4, r5, fp, lr}
    62e4:	add	fp, sp, #8
    62e8:	sub	sp, sp, #56	; 0x38
    62ec:	str	r0, [fp, #-16]
    62f0:	str	r1, [fp, #-20]	; 0xffffffec
    62f4:	str	r2, [fp, #-24]	; 0xffffffe8
    62f8:	str	r3, [fp, #-28]	; 0xffffffe4
    62fc:	mov	r0, #0
    6300:	str	r0, [sp, #28]
    6304:	str	r0, [sp, #24]
    6308:	movw	r0, #0
    630c:	str	r0, [sp, #20]
    6310:	ldr	r0, [fp, #-20]	; 0xffffffec
    6314:	str	r0, [sp, #16]
    6318:	ldr	r0, [fp, #-28]	; 0xffffffe4
    631c:	movw	r1, #0
    6320:	strb	r1, [r0]
    6324:	ldr	r0, [fp, #-20]	; 0xffffffec
    6328:	ldr	r1, [fp, #-24]	; 0xffffffe8
    632c:	cmp	r0, r1
    6330:	bne	6340 <flatcc_json_parser_int8+0x60>
    6334:	ldr	r0, [fp, #-20]	; 0xffffffec
    6338:	str	r0, [fp, #-12]
    633c:	b	63b0 <flatcc_json_parser_int8+0xd0>
    6340:	ldr	r0, [fp, #-16]
    6344:	ldr	r1, [fp, #-20]	; 0xffffffec
    6348:	ldr	r2, [fp, #-24]	; 0xffffffe8
    634c:	add	r3, sp, #20
    6350:	add	ip, sp, #24
    6354:	str	ip, [sp]
    6358:	bl	0 <flatcc_json_parser_integer>
    635c:	str	r0, [fp, #-20]	; 0xffffffec
    6360:	ldr	r0, [fp, #-20]	; 0xffffffec
    6364:	ldr	r1, [sp, #16]
    6368:	cmp	r0, r1
    636c:	beq	63a8 <flatcc_json_parser_int8+0xc8>
    6370:	ldr	r0, [fp, #-16]
    6374:	ldr	r1, [fp, #-20]	; 0xffffffec
    6378:	ldr	r2, [fp, #-24]	; 0xffffffe8
    637c:	ldr	r3, [sp, #20]
    6380:	ldr	ip, [sp, #24]
    6384:	ldr	lr, [sp, #28]
    6388:	ldr	r4, [fp, #-28]	; 0xffffffe4
    638c:	mov	r5, sp
    6390:	str	r4, [r5, #8]
    6394:	str	lr, [r5, #4]
    6398:	str	ip, [r5]
    639c:	bl	b6a8 <flatcc_json_parser_coerce_int8>
    63a0:	str	r0, [fp, #-12]
    63a4:	b	63b0 <flatcc_json_parser_int8+0xd0>
    63a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    63ac:	str	r0, [fp, #-12]
    63b0:	ldr	r0, [fp, #-12]
    63b4:	sub	sp, fp, #8
    63b8:	pop	{r4, r5, fp, pc}

000063bc <flatcc_json_parser_symbolic_int8>:
    63bc:	push	{r4, r5, r6, sl, fp, lr}
    63c0:	add	fp, sp, #16
    63c4:	sub	sp, sp, #88	; 0x58
    63c8:	ldr	ip, [fp, #8]
    63cc:	str	r0, [fp, #-24]	; 0xffffffe8
    63d0:	str	r1, [fp, #-28]	; 0xffffffe4
    63d4:	str	r2, [fp, #-32]	; 0xffffffe0
    63d8:	str	r3, [fp, #-36]	; 0xffffffdc
    63dc:	movw	r0, #0
    63e0:	strb	r0, [fp, #-45]	; 0xffffffd3
    63e4:	movw	r1, #0
    63e8:	str	r1, [sp, #36]	; 0x24
    63ec:	ldr	r1, [fp, #8]
    63f0:	strb	r0, [r1]
    63f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    63fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6400:	str	ip, [sp, #32]
    6404:	bl	b780 <flatcc_json_parser_constant_start>
    6408:	str	r0, [fp, #-28]	; 0xffffffe4
    640c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6410:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6414:	cmp	r0, r1
    6418:	bne	6428 <flatcc_json_parser_symbolic_int8+0x6c>
    641c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6420:	str	r0, [fp, #-20]	; 0xffffffec
    6424:	b	65dc <flatcc_json_parser_symbolic_int8+0x220>
    6428:	b	642c <flatcc_json_parser_symbolic_int8+0x70>
    642c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6430:	str	r0, [fp, #-40]	; 0xffffffd8
    6434:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6438:	ldr	r0, [r0]
    643c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6440:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6444:	str	r2, [fp, #-44]	; 0xffffffd4
    6448:	ldr	r3, [fp, #-32]	; 0xffffffe0
    644c:	str	r0, [sp, #28]
    6450:	mov	r0, r1
    6454:	mov	r1, r2
    6458:	mov	r2, r3
    645c:	add	r3, sp, #44	; 0x2c
    6460:	add	ip, sp, #48	; 0x30
    6464:	str	ip, [sp]
    6468:	add	ip, sp, #40	; 0x28
    646c:	str	ip, [sp, #4]
    6470:	ldr	ip, [sp, #28]
    6474:	blx	ip
    6478:	str	r0, [fp, #-28]	; 0xffffffe4
    647c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6480:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6484:	cmp	r0, r1
    6488:	bne	6498 <flatcc_json_parser_symbolic_int8+0xdc>
    648c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6490:	str	r0, [fp, #-20]	; 0xffffffec
    6494:	b	65dc <flatcc_json_parser_symbolic_int8+0x220>
    6498:	b	649c <flatcc_json_parser_symbolic_int8+0xe0>
    649c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    64a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    64a4:	cmp	r0, r1
    64a8:	movw	r0, #0
    64ac:	str	r0, [sp, #24]
    64b0:	bne	64d8 <flatcc_json_parser_symbolic_int8+0x11c>
    64b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    64b8:	add	r1, r0, #4
    64bc:	str	r1, [fp, #-40]	; 0xffffffd8
    64c0:	ldr	r0, [r0, #4]
    64c4:	movw	r1, #0
    64c8:	cmp	r0, r1
    64cc:	movw	r0, #0
    64d0:	movne	r0, #1
    64d4:	str	r0, [sp, #24]
    64d8:	ldr	r0, [sp, #24]
    64dc:	tst	r0, #1
    64e0:	bne	6434 <flatcc_json_parser_symbolic_int8+0x78>
    64e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    64e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    64ec:	cmp	r0, r1
    64f0:	bne	6510 <flatcc_json_parser_symbolic_int8+0x154>
    64f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    64f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    64fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6500:	movw	r3, #23
    6504:	bl	0 <flatcc_json_parser_set_error>
    6508:	str	r0, [fp, #-20]	; 0xffffffec
    650c:	b	65dc <flatcc_json_parser_symbolic_int8+0x220>
    6510:	ldr	r0, [sp, #36]	; 0x24
    6514:	add	r1, r0, #1
    6518:	str	r1, [sp, #36]	; 0x24
    651c:	cmp	r0, #0
    6520:	beq	6550 <flatcc_json_parser_symbolic_int8+0x194>
    6524:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6528:	ldr	r0, [r0, #12]
    652c:	cmp	r0, #0
    6530:	beq	6550 <flatcc_json_parser_symbolic_int8+0x194>
    6534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6538:	ldr	r1, [fp, #-28]	; 0xffffffe4
    653c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6540:	movw	r3, #14
    6544:	bl	0 <flatcc_json_parser_set_error>
    6548:	str	r0, [fp, #-20]	; 0xffffffec
    654c:	b	65dc <flatcc_json_parser_symbolic_int8+0x220>
    6550:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6554:	mov	r1, r0
    6558:	ldr	r2, [fp, #-24]	; 0xffffffe8
    655c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6560:	ldr	ip, [sp, #44]	; 0x2c
    6564:	ldr	lr, [sp, #48]	; 0x30
    6568:	ldr	r4, [sp, #52]	; 0x34
    656c:	mov	r5, sp
    6570:	sub	r6, fp, #45	; 0x2d
    6574:	str	r6, [r5, #8]
    6578:	str	r4, [r5, #4]
    657c:	str	lr, [r5]
    6580:	str	r0, [sp, #20]
    6584:	mov	r0, r2
    6588:	str	r1, [sp, #16]
    658c:	mov	r1, r3
    6590:	ldr	r2, [sp, #20]
    6594:	mov	r3, ip
    6598:	bl	b6a8 <flatcc_json_parser_coerce_int8>
    659c:	ldr	r1, [sp, #16]
    65a0:	cmp	r1, r0
    65a4:	bne	65b4 <flatcc_json_parser_symbolic_int8+0x1f8>
    65a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    65ac:	str	r0, [fp, #-20]	; 0xffffffec
    65b0:	b	65dc <flatcc_json_parser_symbolic_int8+0x220>
    65b4:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
    65b8:	ldr	r1, [fp, #8]
    65bc:	ldrsb	r2, [r1]
    65c0:	add	r0, r2, r0
    65c4:	strb	r0, [r1]
    65c8:	ldr	r0, [sp, #40]	; 0x28
    65cc:	cmp	r0, #0
    65d0:	bne	642c <flatcc_json_parser_symbolic_int8+0x70>
    65d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    65d8:	str	r0, [fp, #-20]	; 0xffffffec
    65dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    65e0:	sub	sp, fp, #16
    65e4:	pop	{r4, r5, r6, sl, fp, pc}

000065e8 <flatbuffers_int8_write_to_pe>:
    65e8:	push	{fp, lr}
    65ec:	mov	fp, sp
    65f0:	sub	sp, sp, #8
    65f4:	str	r0, [sp, #4]
    65f8:	strb	r1, [sp, #3]
    65fc:	ldrsb	r0, [sp, #3]
    6600:	bl	b7dc <flatbuffers_int8_cast_to_pe>
    6604:	ldr	r1, [sp, #4]
    6608:	strb	r0, [r1]
    660c:	mov	sp, fp
    6610:	pop	{fp, pc}

00006614 <flatcc_json_parser_array_start>:
    6614:	push	{fp, lr}
    6618:	mov	fp, sp
    661c:	sub	sp, sp, #24
    6620:	str	r0, [fp, #-8]
    6624:	str	r1, [sp, #12]
    6628:	str	r2, [sp, #8]
    662c:	str	r3, [sp, #4]
    6630:	ldr	r0, [sp, #12]
    6634:	ldr	r1, [sp, #8]
    6638:	cmp	r0, r1
    663c:	beq	6650 <flatcc_json_parser_array_start+0x3c>
    6640:	ldr	r0, [sp, #12]
    6644:	ldrb	r0, [r0]
    6648:	cmp	r0, #91	; 0x5b
    664c:	beq	6678 <flatcc_json_parser_array_start+0x64>
    6650:	ldr	r0, [sp, #4]
    6654:	movw	r1, #0
    6658:	str	r1, [r0]
    665c:	ldr	r0, [fp, #-8]
    6660:	ldr	r1, [sp, #12]
    6664:	ldr	r2, [sp, #8]
    6668:	movw	r3, #22
    666c:	bl	0 <flatcc_json_parser_set_error>
    6670:	str	r0, [fp, #-4]
    6674:	b	66ec <flatcc_json_parser_array_start+0xd8>
    6678:	ldr	r0, [fp, #-8]
    667c:	ldr	r1, [sp, #12]
    6680:	add	r1, r1, #1
    6684:	ldr	r2, [sp, #8]
    6688:	bl	a1a0 <flatcc_json_parser_space>
    668c:	str	r0, [sp, #12]
    6690:	ldr	r0, [sp, #12]
    6694:	ldr	r1, [sp, #8]
    6698:	cmp	r0, r1
    669c:	beq	66d8 <flatcc_json_parser_array_start+0xc4>
    66a0:	ldr	r0, [sp, #12]
    66a4:	ldrb	r0, [r0]
    66a8:	cmp	r0, #93	; 0x5d
    66ac:	bne	66d8 <flatcc_json_parser_array_start+0xc4>
    66b0:	ldr	r0, [sp, #4]
    66b4:	movw	r1, #0
    66b8:	str	r1, [r0]
    66bc:	ldr	r0, [fp, #-8]
    66c0:	ldr	r1, [sp, #12]
    66c4:	add	r1, r1, #1
    66c8:	ldr	r2, [sp, #8]
    66cc:	bl	a1a0 <flatcc_json_parser_space>
    66d0:	str	r0, [fp, #-4]
    66d4:	b	66ec <flatcc_json_parser_array_start+0xd8>
    66d8:	ldr	r0, [sp, #4]
    66dc:	movw	r1, #1
    66e0:	str	r1, [r0]
    66e4:	ldr	r0, [sp, #12]
    66e8:	str	r0, [fp, #-4]
    66ec:	ldr	r0, [fp, #-4]
    66f0:	mov	sp, fp
    66f4:	pop	{fp, pc}

000066f8 <flatcc_json_parser_uint8>:
    66f8:	push	{r4, r5, fp, lr}
    66fc:	add	fp, sp, #8
    6700:	sub	sp, sp, #56	; 0x38
    6704:	str	r0, [fp, #-16]
    6708:	str	r1, [fp, #-20]	; 0xffffffec
    670c:	str	r2, [fp, #-24]	; 0xffffffe8
    6710:	str	r3, [fp, #-28]	; 0xffffffe4
    6714:	mov	r0, #0
    6718:	str	r0, [sp, #28]
    671c:	str	r0, [sp, #24]
    6720:	movw	r0, #0
    6724:	str	r0, [sp, #20]
    6728:	ldr	r0, [fp, #-20]	; 0xffffffec
    672c:	str	r0, [sp, #16]
    6730:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6734:	movw	r1, #0
    6738:	strb	r1, [r0]
    673c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6740:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6744:	cmp	r0, r1
    6748:	bne	6758 <flatcc_json_parser_uint8+0x60>
    674c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6750:	str	r0, [fp, #-12]
    6754:	b	67c8 <flatcc_json_parser_uint8+0xd0>
    6758:	ldr	r0, [fp, #-16]
    675c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6760:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6764:	add	r3, sp, #20
    6768:	add	ip, sp, #24
    676c:	str	ip, [sp]
    6770:	bl	0 <flatcc_json_parser_integer>
    6774:	str	r0, [fp, #-20]	; 0xffffffec
    6778:	ldr	r0, [fp, #-20]	; 0xffffffec
    677c:	ldr	r1, [sp, #16]
    6780:	cmp	r0, r1
    6784:	beq	67c0 <flatcc_json_parser_uint8+0xc8>
    6788:	ldr	r0, [fp, #-16]
    678c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6790:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6794:	ldr	r3, [sp, #20]
    6798:	ldr	ip, [sp, #24]
    679c:	ldr	lr, [sp, #28]
    67a0:	ldr	r4, [fp, #-28]	; 0xffffffe4
    67a4:	mov	r5, sp
    67a8:	str	r4, [r5, #8]
    67ac:	str	lr, [r5, #4]
    67b0:	str	ip, [r5]
    67b4:	bl	b7f0 <flatcc_json_parser_coerce_uint8>
    67b8:	str	r0, [fp, #-12]
    67bc:	b	67c8 <flatcc_json_parser_uint8+0xd0>
    67c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    67c4:	str	r0, [fp, #-12]
    67c8:	ldr	r0, [fp, #-12]
    67cc:	sub	sp, fp, #8
    67d0:	pop	{r4, r5, fp, pc}

000067d4 <flatcc_json_parser_symbolic_uint8>:
    67d4:	push	{r4, r5, r6, sl, fp, lr}
    67d8:	add	fp, sp, #16
    67dc:	sub	sp, sp, #88	; 0x58
    67e0:	ldr	ip, [fp, #8]
    67e4:	str	r0, [fp, #-24]	; 0xffffffe8
    67e8:	str	r1, [fp, #-28]	; 0xffffffe4
    67ec:	str	r2, [fp, #-32]	; 0xffffffe0
    67f0:	str	r3, [fp, #-36]	; 0xffffffdc
    67f4:	movw	r0, #0
    67f8:	strb	r0, [fp, #-45]	; 0xffffffd3
    67fc:	movw	r1, #0
    6800:	str	r1, [sp, #36]	; 0x24
    6804:	ldr	r1, [fp, #8]
    6808:	strb	r0, [r1]
    680c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6810:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6814:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6818:	str	ip, [sp, #32]
    681c:	bl	b780 <flatcc_json_parser_constant_start>
    6820:	str	r0, [fp, #-28]	; 0xffffffe4
    6824:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6828:	ldr	r1, [fp, #-32]	; 0xffffffe0
    682c:	cmp	r0, r1
    6830:	bne	6840 <flatcc_json_parser_symbolic_uint8+0x6c>
    6834:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6838:	str	r0, [fp, #-20]	; 0xffffffec
    683c:	b	69f4 <flatcc_json_parser_symbolic_uint8+0x220>
    6840:	b	6844 <flatcc_json_parser_symbolic_uint8+0x70>
    6844:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6848:	str	r0, [fp, #-40]	; 0xffffffd8
    684c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6850:	ldr	r0, [r0]
    6854:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6858:	ldr	r2, [fp, #-28]	; 0xffffffe4
    685c:	str	r2, [fp, #-44]	; 0xffffffd4
    6860:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6864:	str	r0, [sp, #28]
    6868:	mov	r0, r1
    686c:	mov	r1, r2
    6870:	mov	r2, r3
    6874:	add	r3, sp, #44	; 0x2c
    6878:	add	ip, sp, #48	; 0x30
    687c:	str	ip, [sp]
    6880:	add	ip, sp, #40	; 0x28
    6884:	str	ip, [sp, #4]
    6888:	ldr	ip, [sp, #28]
    688c:	blx	ip
    6890:	str	r0, [fp, #-28]	; 0xffffffe4
    6894:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6898:	ldr	r1, [fp, #-32]	; 0xffffffe0
    689c:	cmp	r0, r1
    68a0:	bne	68b0 <flatcc_json_parser_symbolic_uint8+0xdc>
    68a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    68a8:	str	r0, [fp, #-20]	; 0xffffffec
    68ac:	b	69f4 <flatcc_json_parser_symbolic_uint8+0x220>
    68b0:	b	68b4 <flatcc_json_parser_symbolic_uint8+0xe0>
    68b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    68b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    68bc:	cmp	r0, r1
    68c0:	movw	r0, #0
    68c4:	str	r0, [sp, #24]
    68c8:	bne	68f0 <flatcc_json_parser_symbolic_uint8+0x11c>
    68cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    68d0:	add	r1, r0, #4
    68d4:	str	r1, [fp, #-40]	; 0xffffffd8
    68d8:	ldr	r0, [r0, #4]
    68dc:	movw	r1, #0
    68e0:	cmp	r0, r1
    68e4:	movw	r0, #0
    68e8:	movne	r0, #1
    68ec:	str	r0, [sp, #24]
    68f0:	ldr	r0, [sp, #24]
    68f4:	tst	r0, #1
    68f8:	bne	684c <flatcc_json_parser_symbolic_uint8+0x78>
    68fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6900:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6904:	cmp	r0, r1
    6908:	bne	6928 <flatcc_json_parser_symbolic_uint8+0x154>
    690c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6910:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6914:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6918:	movw	r3, #23
    691c:	bl	0 <flatcc_json_parser_set_error>
    6920:	str	r0, [fp, #-20]	; 0xffffffec
    6924:	b	69f4 <flatcc_json_parser_symbolic_uint8+0x220>
    6928:	ldr	r0, [sp, #36]	; 0x24
    692c:	add	r1, r0, #1
    6930:	str	r1, [sp, #36]	; 0x24
    6934:	cmp	r0, #0
    6938:	beq	6968 <flatcc_json_parser_symbolic_uint8+0x194>
    693c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6940:	ldr	r0, [r0, #12]
    6944:	cmp	r0, #0
    6948:	beq	6968 <flatcc_json_parser_symbolic_uint8+0x194>
    694c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6950:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6954:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6958:	movw	r3, #14
    695c:	bl	0 <flatcc_json_parser_set_error>
    6960:	str	r0, [fp, #-20]	; 0xffffffec
    6964:	b	69f4 <flatcc_json_parser_symbolic_uint8+0x220>
    6968:	ldr	r0, [fp, #-32]	; 0xffffffe0
    696c:	mov	r1, r0
    6970:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6974:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6978:	ldr	ip, [sp, #44]	; 0x2c
    697c:	ldr	lr, [sp, #48]	; 0x30
    6980:	ldr	r4, [sp, #52]	; 0x34
    6984:	mov	r5, sp
    6988:	sub	r6, fp, #45	; 0x2d
    698c:	str	r6, [r5, #8]
    6990:	str	r4, [r5, #4]
    6994:	str	lr, [r5]
    6998:	str	r0, [sp, #20]
    699c:	mov	r0, r2
    69a0:	str	r1, [sp, #16]
    69a4:	mov	r1, r3
    69a8:	ldr	r2, [sp, #20]
    69ac:	mov	r3, ip
    69b0:	bl	b7f0 <flatcc_json_parser_coerce_uint8>
    69b4:	ldr	r1, [sp, #16]
    69b8:	cmp	r1, r0
    69bc:	bne	69cc <flatcc_json_parser_symbolic_uint8+0x1f8>
    69c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    69c4:	str	r0, [fp, #-20]	; 0xffffffec
    69c8:	b	69f4 <flatcc_json_parser_symbolic_uint8+0x220>
    69cc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    69d0:	ldr	r1, [fp, #8]
    69d4:	ldrb	r2, [r1]
    69d8:	add	r0, r2, r0
    69dc:	strb	r0, [r1]
    69e0:	ldr	r0, [sp, #40]	; 0x28
    69e4:	cmp	r0, #0
    69e8:	bne	6844 <flatcc_json_parser_symbolic_uint8+0x70>
    69ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69f0:	str	r0, [fp, #-20]	; 0xffffffec
    69f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    69f8:	sub	sp, fp, #16
    69fc:	pop	{r4, r5, r6, sl, fp, pc}

00006a00 <flatbuffers_uint8_write_to_pe>:
    6a00:	push	{fp, lr}
    6a04:	mov	fp, sp
    6a08:	sub	sp, sp, #8
    6a0c:	str	r0, [sp, #4]
    6a10:	strb	r1, [sp, #3]
    6a14:	ldrb	r0, [sp, #3]
    6a18:	bl	b89c <flatbuffers_uint8_cast_to_pe>
    6a1c:	ldr	r1, [sp, #4]
    6a20:	strb	r0, [r1]
    6a24:	mov	sp, fp
    6a28:	pop	{fp, pc}

00006a2c <flatcc_json_parser_array_end>:
    6a2c:	push	{fp, lr}
    6a30:	mov	fp, sp
    6a34:	sub	sp, sp, #24
    6a38:	str	r0, [fp, #-8]
    6a3c:	str	r1, [sp, #12]
    6a40:	str	r2, [sp, #8]
    6a44:	str	r3, [sp, #4]
    6a48:	ldr	r0, [fp, #-8]
    6a4c:	ldr	r1, [sp, #12]
    6a50:	ldr	r2, [sp, #8]
    6a54:	bl	a1a0 <flatcc_json_parser_space>
    6a58:	str	r0, [sp, #12]
    6a5c:	ldr	r0, [sp, #12]
    6a60:	ldr	r1, [sp, #8]
    6a64:	cmp	r0, r1
    6a68:	bne	6a84 <flatcc_json_parser_array_end+0x58>
    6a6c:	ldr	r0, [sp, #4]
    6a70:	movw	r1, #0
    6a74:	str	r1, [r0]
    6a78:	ldr	r0, [sp, #12]
    6a7c:	str	r0, [fp, #-4]
    6a80:	b	6b84 <flatcc_json_parser_array_end+0x158>
    6a84:	ldr	r0, [sp, #12]
    6a88:	ldrb	r0, [r0]
    6a8c:	cmp	r0, #44	; 0x2c
    6a90:	beq	6ae8 <flatcc_json_parser_array_end+0xbc>
    6a94:	ldr	r0, [sp, #4]
    6a98:	movw	r1, #0
    6a9c:	str	r1, [r0]
    6aa0:	ldr	r0, [sp, #12]
    6aa4:	ldrb	r0, [r0]
    6aa8:	cmp	r0, #93	; 0x5d
    6aac:	beq	6acc <flatcc_json_parser_array_end+0xa0>
    6ab0:	ldr	r0, [fp, #-8]
    6ab4:	ldr	r1, [sp, #12]
    6ab8:	ldr	r2, [sp, #8]
    6abc:	movw	r3, #9
    6ac0:	bl	0 <flatcc_json_parser_set_error>
    6ac4:	str	r0, [fp, #-4]
    6ac8:	b	6b84 <flatcc_json_parser_array_end+0x158>
    6acc:	ldr	r0, [fp, #-8]
    6ad0:	ldr	r1, [sp, #12]
    6ad4:	add	r1, r1, #1
    6ad8:	ldr	r2, [sp, #8]
    6adc:	bl	a1a0 <flatcc_json_parser_space>
    6ae0:	str	r0, [fp, #-4]
    6ae4:	b	6b84 <flatcc_json_parser_array_end+0x158>
    6ae8:	ldr	r0, [fp, #-8]
    6aec:	ldr	r1, [sp, #12]
    6af0:	add	r1, r1, #1
    6af4:	ldr	r2, [sp, #8]
    6af8:	bl	a1a0 <flatcc_json_parser_space>
    6afc:	str	r0, [sp, #12]
    6b00:	ldr	r0, [sp, #12]
    6b04:	ldr	r1, [sp, #8]
    6b08:	cmp	r0, r1
    6b0c:	bne	6b38 <flatcc_json_parser_array_end+0x10c>
    6b10:	ldr	r0, [sp, #4]
    6b14:	movw	r1, #0
    6b18:	str	r1, [r0]
    6b1c:	ldr	r0, [fp, #-8]
    6b20:	ldr	r1, [sp, #12]
    6b24:	ldr	r2, [sp, #8]
    6b28:	movw	r3, #9
    6b2c:	bl	0 <flatcc_json_parser_set_error>
    6b30:	str	r0, [fp, #-4]
    6b34:	b	6b84 <flatcc_json_parser_array_end+0x158>
    6b38:	ldr	r0, [sp, #12]
    6b3c:	ldrb	r0, [r0]
    6b40:	cmp	r0, #93	; 0x5d
    6b44:	bne	6b70 <flatcc_json_parser_array_end+0x144>
    6b48:	ldr	r0, [sp, #4]
    6b4c:	movw	r1, #0
    6b50:	str	r1, [r0]
    6b54:	ldr	r0, [fp, #-8]
    6b58:	ldr	r1, [sp, #12]
    6b5c:	add	r1, r1, #1
    6b60:	ldr	r2, [sp, #8]
    6b64:	bl	a1a0 <flatcc_json_parser_space>
    6b68:	str	r0, [fp, #-4]
    6b6c:	b	6b84 <flatcc_json_parser_array_end+0x158>
    6b70:	ldr	r0, [sp, #4]
    6b74:	movw	r1, #1
    6b78:	str	r1, [r0]
    6b7c:	ldr	r0, [sp, #12]
    6b80:	str	r0, [fp, #-4]
    6b84:	ldr	r0, [fp, #-4]
    6b88:	mov	sp, fp
    6b8c:	pop	{fp, pc}

00006b90 <flatcc_json_parser_int16>:
    6b90:	push	{r4, r5, fp, lr}
    6b94:	add	fp, sp, #8
    6b98:	sub	sp, sp, #56	; 0x38
    6b9c:	str	r0, [fp, #-16]
    6ba0:	str	r1, [fp, #-20]	; 0xffffffec
    6ba4:	str	r2, [fp, #-24]	; 0xffffffe8
    6ba8:	str	r3, [fp, #-28]	; 0xffffffe4
    6bac:	mov	r0, #0
    6bb0:	str	r0, [sp, #28]
    6bb4:	str	r0, [sp, #24]
    6bb8:	movw	r0, #0
    6bbc:	str	r0, [sp, #20]
    6bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6bc4:	str	r0, [sp, #16]
    6bc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6bcc:	movw	r1, #0
    6bd0:	strh	r1, [r0]
    6bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
    6bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6bdc:	cmp	r0, r1
    6be0:	bne	6bf0 <flatcc_json_parser_int16+0x60>
    6be4:	ldr	r0, [fp, #-20]	; 0xffffffec
    6be8:	str	r0, [fp, #-12]
    6bec:	b	6c60 <flatcc_json_parser_int16+0xd0>
    6bf0:	ldr	r0, [fp, #-16]
    6bf4:	ldr	r1, [fp, #-20]	; 0xffffffec
    6bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6bfc:	add	r3, sp, #20
    6c00:	add	ip, sp, #24
    6c04:	str	ip, [sp]
    6c08:	bl	0 <flatcc_json_parser_integer>
    6c0c:	str	r0, [fp, #-20]	; 0xffffffec
    6c10:	ldr	r0, [fp, #-20]	; 0xffffffec
    6c14:	ldr	r1, [sp, #16]
    6c18:	cmp	r0, r1
    6c1c:	beq	6c58 <flatcc_json_parser_int16+0xc8>
    6c20:	ldr	r0, [fp, #-16]
    6c24:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6c2c:	ldr	r3, [sp, #20]
    6c30:	ldr	ip, [sp, #24]
    6c34:	ldr	lr, [sp, #28]
    6c38:	ldr	r4, [fp, #-28]	; 0xffffffe4
    6c3c:	mov	r5, sp
    6c40:	str	r4, [r5, #8]
    6c44:	str	lr, [r5, #4]
    6c48:	str	ip, [r5]
    6c4c:	bl	b8b0 <flatcc_json_parser_coerce_int16>
    6c50:	str	r0, [fp, #-12]
    6c54:	b	6c60 <flatcc_json_parser_int16+0xd0>
    6c58:	ldr	r0, [fp, #-20]	; 0xffffffec
    6c5c:	str	r0, [fp, #-12]
    6c60:	ldr	r0, [fp, #-12]
    6c64:	sub	sp, fp, #8
    6c68:	pop	{r4, r5, fp, pc}

00006c6c <flatcc_json_parser_symbolic_int16>:
    6c6c:	push	{r4, r5, r6, sl, fp, lr}
    6c70:	add	fp, sp, #16
    6c74:	sub	sp, sp, #88	; 0x58
    6c78:	ldr	ip, [fp, #8]
    6c7c:	str	r0, [fp, #-24]	; 0xffffffe8
    6c80:	str	r1, [fp, #-28]	; 0xffffffe4
    6c84:	str	r2, [fp, #-32]	; 0xffffffe0
    6c88:	str	r3, [fp, #-36]	; 0xffffffdc
    6c8c:	movw	r0, #0
    6c90:	strh	r0, [fp, #-46]	; 0xffffffd2
    6c94:	movw	r1, #0
    6c98:	str	r1, [sp, #36]	; 0x24
    6c9c:	ldr	r1, [fp, #8]
    6ca0:	strh	r0, [r1]
    6ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ca8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6cac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6cb0:	str	ip, [sp, #32]
    6cb4:	bl	b780 <flatcc_json_parser_constant_start>
    6cb8:	str	r0, [fp, #-28]	; 0xffffffe4
    6cbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6cc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6cc4:	cmp	r0, r1
    6cc8:	bne	6cd8 <flatcc_json_parser_symbolic_int16+0x6c>
    6ccc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6cd0:	str	r0, [fp, #-20]	; 0xffffffec
    6cd4:	b	6e8c <flatcc_json_parser_symbolic_int16+0x220>
    6cd8:	b	6cdc <flatcc_json_parser_symbolic_int16+0x70>
    6cdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6ce0:	str	r0, [fp, #-40]	; 0xffffffd8
    6ce4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6ce8:	ldr	r0, [r0]
    6cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6cf0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6cf4:	str	r2, [fp, #-44]	; 0xffffffd4
    6cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6cfc:	str	r0, [sp, #28]
    6d00:	mov	r0, r1
    6d04:	mov	r1, r2
    6d08:	mov	r2, r3
    6d0c:	add	r3, sp, #44	; 0x2c
    6d10:	add	ip, sp, #48	; 0x30
    6d14:	str	ip, [sp]
    6d18:	add	ip, sp, #40	; 0x28
    6d1c:	str	ip, [sp, #4]
    6d20:	ldr	ip, [sp, #28]
    6d24:	blx	ip
    6d28:	str	r0, [fp, #-28]	; 0xffffffe4
    6d2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6d30:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6d34:	cmp	r0, r1
    6d38:	bne	6d48 <flatcc_json_parser_symbolic_int16+0xdc>
    6d3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6d40:	str	r0, [fp, #-20]	; 0xffffffec
    6d44:	b	6e8c <flatcc_json_parser_symbolic_int16+0x220>
    6d48:	b	6d4c <flatcc_json_parser_symbolic_int16+0xe0>
    6d4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6d50:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6d54:	cmp	r0, r1
    6d58:	movw	r0, #0
    6d5c:	str	r0, [sp, #24]
    6d60:	bne	6d88 <flatcc_json_parser_symbolic_int16+0x11c>
    6d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6d68:	add	r1, r0, #4
    6d6c:	str	r1, [fp, #-40]	; 0xffffffd8
    6d70:	ldr	r0, [r0, #4]
    6d74:	movw	r1, #0
    6d78:	cmp	r0, r1
    6d7c:	movw	r0, #0
    6d80:	movne	r0, #1
    6d84:	str	r0, [sp, #24]
    6d88:	ldr	r0, [sp, #24]
    6d8c:	tst	r0, #1
    6d90:	bne	6ce4 <flatcc_json_parser_symbolic_int16+0x78>
    6d94:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6d98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6d9c:	cmp	r0, r1
    6da0:	bne	6dc0 <flatcc_json_parser_symbolic_int16+0x154>
    6da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6da8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6dac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6db0:	movw	r3, #23
    6db4:	bl	0 <flatcc_json_parser_set_error>
    6db8:	str	r0, [fp, #-20]	; 0xffffffec
    6dbc:	b	6e8c <flatcc_json_parser_symbolic_int16+0x220>
    6dc0:	ldr	r0, [sp, #36]	; 0x24
    6dc4:	add	r1, r0, #1
    6dc8:	str	r1, [sp, #36]	; 0x24
    6dcc:	cmp	r0, #0
    6dd0:	beq	6e00 <flatcc_json_parser_symbolic_int16+0x194>
    6dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6dd8:	ldr	r0, [r0, #12]
    6ddc:	cmp	r0, #0
    6de0:	beq	6e00 <flatcc_json_parser_symbolic_int16+0x194>
    6de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6dec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6df0:	movw	r3, #14
    6df4:	bl	0 <flatcc_json_parser_set_error>
    6df8:	str	r0, [fp, #-20]	; 0xffffffec
    6dfc:	b	6e8c <flatcc_json_parser_symbolic_int16+0x220>
    6e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6e04:	mov	r1, r0
    6e08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6e10:	ldr	ip, [sp, #44]	; 0x2c
    6e14:	ldr	lr, [sp, #48]	; 0x30
    6e18:	ldr	r4, [sp, #52]	; 0x34
    6e1c:	mov	r5, sp
    6e20:	sub	r6, fp, #46	; 0x2e
    6e24:	str	r6, [r5, #8]
    6e28:	str	r4, [r5, #4]
    6e2c:	str	lr, [r5]
    6e30:	str	r0, [sp, #20]
    6e34:	mov	r0, r2
    6e38:	str	r1, [sp, #16]
    6e3c:	mov	r1, r3
    6e40:	ldr	r2, [sp, #20]
    6e44:	mov	r3, ip
    6e48:	bl	b8b0 <flatcc_json_parser_coerce_int16>
    6e4c:	ldr	r1, [sp, #16]
    6e50:	cmp	r1, r0
    6e54:	bne	6e64 <flatcc_json_parser_symbolic_int16+0x1f8>
    6e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6e5c:	str	r0, [fp, #-20]	; 0xffffffec
    6e60:	b	6e8c <flatcc_json_parser_symbolic_int16+0x220>
    6e64:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
    6e68:	ldr	r1, [fp, #8]
    6e6c:	ldrsh	r2, [r1]
    6e70:	add	r0, r2, r0
    6e74:	strh	r0, [r1]
    6e78:	ldr	r0, [sp, #40]	; 0x28
    6e7c:	cmp	r0, #0
    6e80:	bne	6cdc <flatcc_json_parser_symbolic_int16+0x70>
    6e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e88:	str	r0, [fp, #-20]	; 0xffffffec
    6e8c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6e90:	sub	sp, fp, #16
    6e94:	pop	{r4, r5, r6, sl, fp, pc}

00006e98 <flatbuffers_int16_write_to_pe>:
    6e98:	push	{fp, lr}
    6e9c:	mov	fp, sp
    6ea0:	sub	sp, sp, #8
    6ea4:	str	r0, [sp, #4]
    6ea8:	strh	r1, [sp, #2]
    6eac:	ldrsh	r0, [sp, #2]
    6eb0:	bl	b98c <flatbuffers_int16_cast_to_pe>
    6eb4:	ldr	r1, [sp, #4]
    6eb8:	strh	r0, [r1]
    6ebc:	mov	sp, fp
    6ec0:	pop	{fp, pc}

00006ec4 <MyGame_InParentNamespace_parse_json_table>:
    6ec4:	push	{fp, lr}
    6ec8:	mov	fp, sp
    6ecc:	sub	sp, sp, #24
    6ed0:	str	r0, [fp, #-8]
    6ed4:	str	r1, [sp, #12]
    6ed8:	str	r2, [sp, #8]
    6edc:	str	r3, [sp, #4]
    6ee0:	ldr	r0, [sp, #4]
    6ee4:	movw	r1, #0
    6ee8:	str	r1, [r0]
    6eec:	ldr	r0, [fp, #-8]
    6ef0:	ldr	r0, [r0]
    6ef4:	bl	0 <flatcc_builder_start_table>
    6ef8:	cmp	r0, #0
    6efc:	beq	6f04 <MyGame_InParentNamespace_parse_json_table+0x40>
    6f00:	b	6fac <MyGame_InParentNamespace_parse_json_table+0xe8>
    6f04:	ldr	r0, [fp, #-8]
    6f08:	ldr	r1, [sp, #12]
    6f0c:	ldr	r2, [sp, #8]
    6f10:	mov	r3, sp
    6f14:	bl	4bfc <flatcc_json_parser_object_start>
    6f18:	str	r0, [sp, #12]
    6f1c:	ldr	r0, [sp]
    6f20:	cmp	r0, #0
    6f24:	beq	6f6c <MyGame_InParentNamespace_parse_json_table+0xa8>
    6f28:	ldr	r0, [fp, #-8]
    6f2c:	ldr	r1, [sp, #12]
    6f30:	ldr	r2, [sp, #8]
    6f34:	bl	4ce0 <flatcc_json_parser_symbol_start>
    6f38:	str	r0, [sp, #12]
    6f3c:	ldr	r0, [fp, #-8]
    6f40:	ldr	r1, [sp, #12]
    6f44:	ldr	r2, [sp, #8]
    6f48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f4c:	str	r0, [sp, #12]
    6f50:	ldr	r0, [fp, #-8]
    6f54:	ldr	r1, [sp, #12]
    6f58:	ldr	r2, [sp, #8]
    6f5c:	mov	r3, sp
    6f60:	bl	a03c <flatcc_json_parser_object_end>
    6f64:	str	r0, [sp, #12]
    6f68:	b	6f1c <MyGame_InParentNamespace_parse_json_table+0x58>
    6f6c:	ldr	r0, [fp, #-8]
    6f70:	ldr	r0, [r0, #24]
    6f74:	cmp	r0, #0
    6f78:	beq	6f80 <MyGame_InParentNamespace_parse_json_table+0xbc>
    6f7c:	b	6fac <MyGame_InParentNamespace_parse_json_table+0xe8>
    6f80:	ldr	r0, [fp, #-8]
    6f84:	ldr	r0, [r0]
    6f88:	bl	0 <flatcc_builder_end_table>
    6f8c:	ldr	r1, [sp, #4]
    6f90:	str	r0, [r1]
    6f94:	cmp	r0, #0
    6f98:	bne	6fa0 <MyGame_InParentNamespace_parse_json_table+0xdc>
    6f9c:	b	6fac <MyGame_InParentNamespace_parse_json_table+0xe8>
    6fa0:	ldr	r0, [sp, #12]
    6fa4:	str	r0, [fp, #-4]
    6fa8:	b	6fc4 <MyGame_InParentNamespace_parse_json_table+0x100>
    6fac:	ldr	r0, [fp, #-8]
    6fb0:	ldr	r1, [sp, #12]
    6fb4:	ldr	r2, [sp, #8]
    6fb8:	movw	r3, #33	; 0x21
    6fbc:	bl	0 <flatcc_json_parser_set_error>
    6fc0:	str	r0, [fp, #-4]
    6fc4:	ldr	r0, [fp, #-4]
    6fc8:	mov	sp, fp
    6fcc:	pop	{fp, pc}

00006fd0 <MyGame_Example_Vec3_parse_json_struct_inline>:
    6fd0:	push	{fp, lr}
    6fd4:	mov	fp, sp
    6fd8:	sub	sp, sp, #80	; 0x50
    6fdc:	str	r0, [fp, #-8]
    6fe0:	str	r1, [fp, #-12]
    6fe4:	str	r2, [fp, #-16]
    6fe8:	str	r3, [fp, #-20]	; 0xffffffec
    6fec:	ldr	r0, [fp, #-8]
    6ff0:	ldr	r1, [fp, #-12]
    6ff4:	ldr	r2, [fp, #-16]
    6ff8:	sub	r3, fp, #24
    6ffc:	bl	4bfc <flatcc_json_parser_object_start>
    7000:	str	r0, [fp, #-12]
    7004:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7008:	cmp	r0, #0
    700c:	beq	76a4 <MyGame_Example_Vec3_parse_json_struct_inline+0x6d4>
    7010:	ldr	r0, [fp, #-8]
    7014:	ldr	r1, [fp, #-12]
    7018:	ldr	r2, [fp, #-16]
    701c:	bl	4ce0 <flatcc_json_parser_symbol_start>
    7020:	str	r0, [fp, #-12]
    7024:	ldr	r0, [fp, #-12]
    7028:	ldr	r1, [fp, #-16]
    702c:	bl	4d8c <flatcc_json_parser_symbol_part>
    7030:	str	r1, [sp, #36]	; 0x24
    7034:	str	r0, [sp, #32]
    7038:	ldr	r0, [sp, #32]
    703c:	ldr	r1, [sp, #36]	; 0x24
    7040:	mvn	r2, #-855638016	; 0xcd000000
    7044:	subs	r0, r2, r0
    7048:	movw	r2, #29556	; 0x7374
    704c:	movt	r2, #29797	; 0x7465
    7050:	sbcs	r1, r2, r1
    7054:	bcc	7290 <MyGame_Example_Vec3_parse_json_struct_inline+0x2c0>
    7058:	b	705c <MyGame_Example_Vec3_parse_json_struct_inline+0x8c>
    705c:	ldrb	r0, [sp, #35]	; 0x23
    7060:	ldr	r1, [sp, #36]	; 0x24
    7064:	movw	r2, #29556	; 0x7374
    7068:	movt	r2, #29797	; 0x7465
    706c:	eor	r1, r1, r2
    7070:	eor	r0, r0, #50	; 0x32
    7074:	orr	r0, r1, r0, lsl #24
    7078:	cmp	r0, #0
    707c:	bne	7168 <MyGame_Example_Vec3_parse_json_struct_inline+0x198>
    7080:	b	7084 <MyGame_Example_Vec3_parse_json_struct_inline+0xb4>
    7084:	ldr	r0, [fp, #-8]
    7088:	ldr	r1, [fp, #-12]
    708c:	str	r1, [fp, #-36]	; 0xffffffdc
    7090:	ldr	r2, [fp, #-16]
    7094:	movw	r3, #5
    7098:	bl	4dc4 <flatcc_json_parser_match_symbol>
    709c:	str	r0, [fp, #-12]
    70a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    70a4:	ldr	r1, [fp, #-12]
    70a8:	cmp	r0, r1
    70ac:	beq	7150 <MyGame_Example_Vec3_parse_json_struct_inline+0x180>
    70b0:	movw	r0, #0
    70b4:	strb	r0, [sp, #31]
    70b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    70bc:	add	r0, r0, #24
    70c0:	str	r0, [fp, #-32]	; 0xffffffe0
    70c4:	ldr	r0, [fp, #-8]
    70c8:	ldr	r1, [fp, #-12]
    70cc:	str	r1, [fp, #-36]	; 0xffffffdc
    70d0:	ldr	r2, [fp, #-16]
    70d4:	add	r3, sp, #31
    70d8:	bl	62e0 <flatcc_json_parser_int8>
    70dc:	str	r0, [fp, #-12]
    70e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    70e4:	ldr	r1, [fp, #-12]
    70e8:	cmp	r0, r1
    70ec:	bne	7140 <MyGame_Example_Vec3_parse_json_struct_inline+0x170>
    70f0:	ldr	r0, [fp, #-8]
    70f4:	ldr	r1, [fp, #-12]
    70f8:	str	r1, [fp, #-36]	; 0xffffffdc
    70fc:	ldr	r2, [fp, #-16]
    7100:	movw	r3, #0
    7104:	movt	r3, #0
    7108:	add	ip, sp, #31
    710c:	str	ip, [sp]
    7110:	bl	63bc <flatcc_json_parser_symbolic_int8>
    7114:	str	r0, [fp, #-12]
    7118:	ldr	r0, [fp, #-12]
    711c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7120:	cmp	r0, r1
    7124:	beq	7138 <MyGame_Example_Vec3_parse_json_struct_inline+0x168>
    7128:	ldr	r0, [fp, #-12]
    712c:	ldr	r1, [fp, #-16]
    7130:	cmp	r0, r1
    7134:	bne	713c <MyGame_Example_Vec3_parse_json_struct_inline+0x16c>
    7138:	b	76b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    713c:	b	7140 <MyGame_Example_Vec3_parse_json_struct_inline+0x170>
    7140:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7144:	ldrsb	r1, [sp, #31]
    7148:	bl	65e8 <flatbuffers_int8_write_to_pe>
    714c:	b	7164 <MyGame_Example_Vec3_parse_json_struct_inline+0x194>
    7150:	ldr	r0, [fp, #-8]
    7154:	ldr	r1, [fp, #-12]
    7158:	ldr	r2, [fp, #-16]
    715c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7160:	str	r0, [fp, #-12]
    7164:	b	728c <MyGame_Example_Vec3_parse_json_struct_inline+0x2bc>
    7168:	ldrb	r0, [sp, #35]	; 0x23
    716c:	ldr	r1, [sp, #36]	; 0x24
    7170:	movw	r2, #29556	; 0x7374
    7174:	movt	r2, #29797	; 0x7465
    7178:	eor	r1, r1, r2
    717c:	eor	r0, r0, #49	; 0x31
    7180:	orr	r0, r1, r0, lsl #24
    7184:	cmp	r0, #0
    7188:	bne	7274 <MyGame_Example_Vec3_parse_json_struct_inline+0x2a4>
    718c:	b	7190 <MyGame_Example_Vec3_parse_json_struct_inline+0x1c0>
    7190:	ldr	r0, [fp, #-8]
    7194:	ldr	r1, [fp, #-12]
    7198:	str	r1, [fp, #-36]	; 0xffffffdc
    719c:	ldr	r2, [fp, #-16]
    71a0:	movw	r3, #5
    71a4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    71a8:	str	r0, [fp, #-12]
    71ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    71b0:	ldr	r1, [fp, #-12]
    71b4:	cmp	r0, r1
    71b8:	beq	725c <MyGame_Example_Vec3_parse_json_struct_inline+0x28c>
    71bc:	vldr	d16, [pc, #948]	; 7578 <MyGame_Example_Vec3_parse_json_struct_inline+0x5a8>
    71c0:	vstr	d16, [sp, #16]
    71c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    71c8:	add	r0, r0, #16
    71cc:	str	r0, [fp, #-32]	; 0xffffffe0
    71d0:	ldr	r0, [fp, #-8]
    71d4:	ldr	r1, [fp, #-12]
    71d8:	str	r1, [fp, #-36]	; 0xffffffdc
    71dc:	ldr	r2, [fp, #-16]
    71e0:	add	r3, sp, #16
    71e4:	bl	0 <flatcc_json_parser_double>
    71e8:	str	r0, [fp, #-12]
    71ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    71f0:	ldr	r1, [fp, #-12]
    71f4:	cmp	r0, r1
    71f8:	bne	724c <MyGame_Example_Vec3_parse_json_struct_inline+0x27c>
    71fc:	ldr	r0, [fp, #-8]
    7200:	ldr	r1, [fp, #-12]
    7204:	str	r1, [fp, #-36]	; 0xffffffdc
    7208:	ldr	r2, [fp, #-16]
    720c:	movw	r3, #0
    7210:	movt	r3, #0
    7214:	add	ip, sp, #16
    7218:	str	ip, [sp]
    721c:	bl	9dd8 <flatcc_json_parser_symbolic_double>
    7220:	str	r0, [fp, #-12]
    7224:	ldr	r0, [fp, #-12]
    7228:	ldr	r1, [fp, #-36]	; 0xffffffdc
    722c:	cmp	r0, r1
    7230:	beq	7244 <MyGame_Example_Vec3_parse_json_struct_inline+0x274>
    7234:	ldr	r0, [fp, #-12]
    7238:	ldr	r1, [fp, #-16]
    723c:	cmp	r0, r1
    7240:	bne	7248 <MyGame_Example_Vec3_parse_json_struct_inline+0x278>
    7244:	b	76b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    7248:	b	724c <MyGame_Example_Vec3_parse_json_struct_inline+0x27c>
    724c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7250:	vldr	d0, [sp, #16]
    7254:	bl	a010 <flatbuffers_double_write_to_pe>
    7258:	b	7270 <MyGame_Example_Vec3_parse_json_struct_inline+0x2a0>
    725c:	ldr	r0, [fp, #-8]
    7260:	ldr	r1, [fp, #-12]
    7264:	ldr	r2, [fp, #-16]
    7268:	bl	0 <flatcc_json_parser_unmatched_symbol>
    726c:	str	r0, [fp, #-12]
    7270:	b	7288 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b8>
    7274:	ldr	r0, [fp, #-8]
    7278:	ldr	r1, [fp, #-12]
    727c:	ldr	r2, [fp, #-16]
    7280:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7284:	str	r0, [fp, #-12]
    7288:	b	728c <MyGame_Example_Vec3_parse_json_struct_inline+0x2bc>
    728c:	b	7688 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b8>
    7290:	ldr	r0, [sp, #36]	; 0x24
    7294:	cmn	r0, #-2013265919	; 0x88000001
    7298:	bhi	734c <MyGame_Example_Vec3_parse_json_struct_inline+0x37c>
    729c:	b	72a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x2d0>
    72a0:	ldrb	r0, [sp, #35]	; 0x23
    72a4:	ldr	r1, [sp, #36]	; 0x24
    72a8:	movw	r2, #29556	; 0x7374
    72ac:	movt	r2, #29797	; 0x7465
    72b0:	eor	r1, r1, r2
    72b4:	eor	r0, r0, #51	; 0x33
    72b8:	orr	r0, r1, r0, lsl #24
    72bc:	cmp	r0, #0
    72c0:	bne	7334 <MyGame_Example_Vec3_parse_json_struct_inline+0x364>
    72c4:	b	72c8 <MyGame_Example_Vec3_parse_json_struct_inline+0x2f8>
    72c8:	ldr	r0, [fp, #-8]
    72cc:	ldr	r1, [fp, #-12]
    72d0:	str	r1, [fp, #-36]	; 0xffffffdc
    72d4:	ldr	r2, [fp, #-16]
    72d8:	movw	r3, #5
    72dc:	bl	4dc4 <flatcc_json_parser_match_symbol>
    72e0:	str	r0, [fp, #-12]
    72e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    72e8:	ldr	r1, [fp, #-12]
    72ec:	cmp	r0, r1
    72f0:	beq	731c <MyGame_Example_Vec3_parse_json_struct_inline+0x34c>
    72f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    72f8:	add	r0, r0, #26
    72fc:	str	r0, [fp, #-32]	; 0xffffffe0
    7300:	ldr	r0, [fp, #-8]
    7304:	ldr	r1, [fp, #-12]
    7308:	ldr	r2, [fp, #-16]
    730c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7310:	bl	76d8 <MyGame_Example_Test_parse_json_struct_inline>
    7314:	str	r0, [fp, #-12]
    7318:	b	7330 <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    731c:	ldr	r0, [fp, #-8]
    7320:	ldr	r1, [fp, #-12]
    7324:	ldr	r2, [fp, #-16]
    7328:	bl	0 <flatcc_json_parser_unmatched_symbol>
    732c:	str	r0, [fp, #-12]
    7330:	b	7348 <MyGame_Example_Vec3_parse_json_struct_inline+0x378>
    7334:	ldr	r0, [fp, #-8]
    7338:	ldr	r1, [fp, #-12]
    733c:	ldr	r2, [fp, #-16]
    7340:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7344:	str	r0, [fp, #-12]
    7348:	b	7684 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b4>
    734c:	ldrb	r0, [sp, #39]	; 0x27
    7350:	cmp	r0, #120	; 0x78
    7354:	bhi	746c <MyGame_Example_Vec3_parse_json_struct_inline+0x49c>
    7358:	b	735c <MyGame_Example_Vec3_parse_json_struct_inline+0x38c>
    735c:	ldrb	r0, [sp, #39]	; 0x27
    7360:	mov	r1, #2013265920	; 0x78000000
    7364:	teq	r1, r0, lsl #24
    7368:	bne	7454 <MyGame_Example_Vec3_parse_json_struct_inline+0x484>
    736c:	b	7370 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    7370:	ldr	r0, [fp, #-8]
    7374:	ldr	r1, [fp, #-12]
    7378:	str	r1, [fp, #-36]	; 0xffffffdc
    737c:	ldr	r2, [fp, #-16]
    7380:	movw	r3, #1
    7384:	bl	4dc4 <flatcc_json_parser_match_symbol>
    7388:	str	r0, [fp, #-12]
    738c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7390:	ldr	r1, [fp, #-12]
    7394:	cmp	r0, r1
    7398:	beq	743c <MyGame_Example_Vec3_parse_json_struct_inline+0x46c>
    739c:	vldr	s0, [pc, #816]	; 76d4 <MyGame_Example_Vec3_parse_json_struct_inline+0x704>
    73a0:	vstr	s0, [sp, #12]
    73a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    73a8:	add	r0, r0, #0
    73ac:	str	r0, [fp, #-32]	; 0xffffffe0
    73b0:	ldr	r0, [fp, #-8]
    73b4:	ldr	r1, [fp, #-12]
    73b8:	str	r1, [fp, #-36]	; 0xffffffdc
    73bc:	ldr	r2, [fp, #-16]
    73c0:	add	r3, sp, #12
    73c4:	bl	0 <flatcc_json_parser_float>
    73c8:	str	r0, [fp, #-12]
    73cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    73d0:	ldr	r1, [fp, #-12]
    73d4:	cmp	r0, r1
    73d8:	bne	742c <MyGame_Example_Vec3_parse_json_struct_inline+0x45c>
    73dc:	ldr	r0, [fp, #-8]
    73e0:	ldr	r1, [fp, #-12]
    73e4:	str	r1, [fp, #-36]	; 0xffffffdc
    73e8:	ldr	r2, [fp, #-16]
    73ec:	movw	r3, #0
    73f0:	movt	r3, #0
    73f4:	add	ip, sp, #12
    73f8:	str	ip, [sp]
    73fc:	bl	8e80 <flatcc_json_parser_symbolic_float>
    7400:	str	r0, [fp, #-12]
    7404:	ldr	r0, [fp, #-12]
    7408:	ldr	r1, [fp, #-36]	; 0xffffffdc
    740c:	cmp	r0, r1
    7410:	beq	7424 <MyGame_Example_Vec3_parse_json_struct_inline+0x454>
    7414:	ldr	r0, [fp, #-12]
    7418:	ldr	r1, [fp, #-16]
    741c:	cmp	r0, r1
    7420:	bne	7428 <MyGame_Example_Vec3_parse_json_struct_inline+0x458>
    7424:	b	76b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    7428:	b	742c <MyGame_Example_Vec3_parse_json_struct_inline+0x45c>
    742c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7430:	vldr	s0, [sp, #12]
    7434:	bl	90b0 <flatbuffers_float_write_to_pe>
    7438:	b	7450 <MyGame_Example_Vec3_parse_json_struct_inline+0x480>
    743c:	ldr	r0, [fp, #-8]
    7440:	ldr	r1, [fp, #-12]
    7444:	ldr	r2, [fp, #-16]
    7448:	bl	0 <flatcc_json_parser_unmatched_symbol>
    744c:	str	r0, [fp, #-12]
    7450:	b	7468 <MyGame_Example_Vec3_parse_json_struct_inline+0x498>
    7454:	ldr	r0, [fp, #-8]
    7458:	ldr	r1, [fp, #-12]
    745c:	ldr	r2, [fp, #-16]
    7460:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7464:	str	r0, [fp, #-12]
    7468:	b	7680 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b0>
    746c:	ldrb	r0, [sp, #39]	; 0x27
    7470:	mov	r1, #2046820352	; 0x7a000000
    7474:	teq	r1, r0, lsl #24
    7478:	bne	7564 <MyGame_Example_Vec3_parse_json_struct_inline+0x594>
    747c:	b	7480 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b0>
    7480:	ldr	r0, [fp, #-8]
    7484:	ldr	r1, [fp, #-12]
    7488:	str	r1, [fp, #-36]	; 0xffffffdc
    748c:	ldr	r2, [fp, #-16]
    7490:	movw	r3, #1
    7494:	bl	4dc4 <flatcc_json_parser_match_symbol>
    7498:	str	r0, [fp, #-12]
    749c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    74a0:	ldr	r1, [fp, #-12]
    74a4:	cmp	r0, r1
    74a8:	beq	754c <MyGame_Example_Vec3_parse_json_struct_inline+0x57c>
    74ac:	vldr	s0, [pc, #544]	; 76d4 <MyGame_Example_Vec3_parse_json_struct_inline+0x704>
    74b0:	vstr	s0, [sp, #8]
    74b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    74b8:	add	r0, r0, #8
    74bc:	str	r0, [fp, #-32]	; 0xffffffe0
    74c0:	ldr	r0, [fp, #-8]
    74c4:	ldr	r1, [fp, #-12]
    74c8:	str	r1, [fp, #-36]	; 0xffffffdc
    74cc:	ldr	r2, [fp, #-16]
    74d0:	add	r3, sp, #8
    74d4:	bl	0 <flatcc_json_parser_float>
    74d8:	str	r0, [fp, #-12]
    74dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    74e0:	ldr	r1, [fp, #-12]
    74e4:	cmp	r0, r1
    74e8:	bne	753c <MyGame_Example_Vec3_parse_json_struct_inline+0x56c>
    74ec:	ldr	r0, [fp, #-8]
    74f0:	ldr	r1, [fp, #-12]
    74f4:	str	r1, [fp, #-36]	; 0xffffffdc
    74f8:	ldr	r2, [fp, #-16]
    74fc:	movw	r3, #0
    7500:	movt	r3, #0
    7504:	add	ip, sp, #8
    7508:	str	ip, [sp]
    750c:	bl	8e80 <flatcc_json_parser_symbolic_float>
    7510:	str	r0, [fp, #-12]
    7514:	ldr	r0, [fp, #-12]
    7518:	ldr	r1, [fp, #-36]	; 0xffffffdc
    751c:	cmp	r0, r1
    7520:	beq	7534 <MyGame_Example_Vec3_parse_json_struct_inline+0x564>
    7524:	ldr	r0, [fp, #-12]
    7528:	ldr	r1, [fp, #-16]
    752c:	cmp	r0, r1
    7530:	bne	7538 <MyGame_Example_Vec3_parse_json_struct_inline+0x568>
    7534:	b	76b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    7538:	b	753c <MyGame_Example_Vec3_parse_json_struct_inline+0x56c>
    753c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7540:	vldr	s0, [sp, #8]
    7544:	bl	90b0 <flatbuffers_float_write_to_pe>
    7548:	b	7560 <MyGame_Example_Vec3_parse_json_struct_inline+0x590>
    754c:	ldr	r0, [fp, #-8]
    7550:	ldr	r1, [fp, #-12]
    7554:	ldr	r2, [fp, #-16]
    7558:	bl	0 <flatcc_json_parser_unmatched_symbol>
    755c:	str	r0, [fp, #-12]
    7560:	b	767c <MyGame_Example_Vec3_parse_json_struct_inline+0x6ac>
    7564:	ldrb	r0, [sp, #39]	; 0x27
    7568:	mov	r1, #2030043136	; 0x79000000
    756c:	teq	r1, r0, lsl #24
    7570:	bne	7664 <MyGame_Example_Vec3_parse_json_struct_inline+0x694>
    7574:	b	7580 <MyGame_Example_Vec3_parse_json_struct_inline+0x5b0>
	...
    7580:	ldr	r0, [fp, #-8]
    7584:	ldr	r1, [fp, #-12]
    7588:	str	r1, [fp, #-36]	; 0xffffffdc
    758c:	ldr	r2, [fp, #-16]
    7590:	movw	r3, #1
    7594:	bl	4dc4 <flatcc_json_parser_match_symbol>
    7598:	str	r0, [fp, #-12]
    759c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    75a0:	ldr	r1, [fp, #-12]
    75a4:	cmp	r0, r1
    75a8:	beq	764c <MyGame_Example_Vec3_parse_json_struct_inline+0x67c>
    75ac:	vldr	s0, [pc, #288]	; 76d4 <MyGame_Example_Vec3_parse_json_struct_inline+0x704>
    75b0:	vstr	s0, [sp, #4]
    75b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    75b8:	add	r0, r0, #4
    75bc:	str	r0, [fp, #-32]	; 0xffffffe0
    75c0:	ldr	r0, [fp, #-8]
    75c4:	ldr	r1, [fp, #-12]
    75c8:	str	r1, [fp, #-36]	; 0xffffffdc
    75cc:	ldr	r2, [fp, #-16]
    75d0:	add	r3, sp, #4
    75d4:	bl	0 <flatcc_json_parser_float>
    75d8:	str	r0, [fp, #-12]
    75dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    75e0:	ldr	r1, [fp, #-12]
    75e4:	cmp	r0, r1
    75e8:	bne	763c <MyGame_Example_Vec3_parse_json_struct_inline+0x66c>
    75ec:	ldr	r0, [fp, #-8]
    75f0:	ldr	r1, [fp, #-12]
    75f4:	str	r1, [fp, #-36]	; 0xffffffdc
    75f8:	ldr	r2, [fp, #-16]
    75fc:	movw	r3, #0
    7600:	movt	r3, #0
    7604:	add	ip, sp, #4
    7608:	str	ip, [sp]
    760c:	bl	8e80 <flatcc_json_parser_symbolic_float>
    7610:	str	r0, [fp, #-12]
    7614:	ldr	r0, [fp, #-12]
    7618:	ldr	r1, [fp, #-36]	; 0xffffffdc
    761c:	cmp	r0, r1
    7620:	beq	7634 <MyGame_Example_Vec3_parse_json_struct_inline+0x664>
    7624:	ldr	r0, [fp, #-12]
    7628:	ldr	r1, [fp, #-16]
    762c:	cmp	r0, r1
    7630:	bne	7638 <MyGame_Example_Vec3_parse_json_struct_inline+0x668>
    7634:	b	76b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    7638:	b	763c <MyGame_Example_Vec3_parse_json_struct_inline+0x66c>
    763c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7640:	vldr	s0, [sp, #4]
    7644:	bl	90b0 <flatbuffers_float_write_to_pe>
    7648:	b	7660 <MyGame_Example_Vec3_parse_json_struct_inline+0x690>
    764c:	ldr	r0, [fp, #-8]
    7650:	ldr	r1, [fp, #-12]
    7654:	ldr	r2, [fp, #-16]
    7658:	bl	0 <flatcc_json_parser_unmatched_symbol>
    765c:	str	r0, [fp, #-12]
    7660:	b	7678 <MyGame_Example_Vec3_parse_json_struct_inline+0x6a8>
    7664:	ldr	r0, [fp, #-8]
    7668:	ldr	r1, [fp, #-12]
    766c:	ldr	r2, [fp, #-16]
    7670:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7674:	str	r0, [fp, #-12]
    7678:	b	767c <MyGame_Example_Vec3_parse_json_struct_inline+0x6ac>
    767c:	b	7680 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b0>
    7680:	b	7684 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b4>
    7684:	b	7688 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b8>
    7688:	ldr	r0, [fp, #-8]
    768c:	ldr	r1, [fp, #-12]
    7690:	ldr	r2, [fp, #-16]
    7694:	sub	r3, fp, #24
    7698:	bl	a03c <flatcc_json_parser_object_end>
    769c:	str	r0, [fp, #-12]
    76a0:	b	7004 <MyGame_Example_Vec3_parse_json_struct_inline+0x34>
    76a4:	ldr	r0, [fp, #-12]
    76a8:	str	r0, [fp, #-4]
    76ac:	b	76c8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    76b0:	ldr	r0, [fp, #-8]
    76b4:	ldr	r1, [fp, #-12]
    76b8:	ldr	r2, [fp, #-16]
    76bc:	movw	r3, #33	; 0x21
    76c0:	bl	0 <flatcc_json_parser_set_error>
    76c4:	str	r0, [fp, #-4]
    76c8:	ldr	r0, [fp, #-4]
    76cc:	mov	sp, fp
    76d0:	pop	{fp, pc}
    76d4:	.word	0x00000000

000076d8 <MyGame_Example_Test_parse_json_struct_inline>:
    76d8:	push	{fp, lr}
    76dc:	mov	fp, sp
    76e0:	sub	sp, sp, #56	; 0x38
    76e4:	str	r0, [fp, #-8]
    76e8:	str	r1, [fp, #-12]
    76ec:	str	r2, [fp, #-16]
    76f0:	str	r3, [fp, #-20]	; 0xffffffec
    76f4:	ldr	r0, [fp, #-8]
    76f8:	ldr	r1, [fp, #-12]
    76fc:	ldr	r2, [fp, #-16]
    7700:	sub	r3, fp, #24
    7704:	bl	4bfc <flatcc_json_parser_object_start>
    7708:	str	r0, [fp, #-12]
    770c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7710:	cmp	r0, #0
    7714:	beq	7964 <MyGame_Example_Test_parse_json_struct_inline+0x28c>
    7718:	ldr	r0, [fp, #-8]
    771c:	ldr	r1, [fp, #-12]
    7720:	ldr	r2, [fp, #-16]
    7724:	bl	4ce0 <flatcc_json_parser_symbol_start>
    7728:	str	r0, [fp, #-12]
    772c:	ldr	r0, [fp, #-12]
    7730:	ldr	r1, [fp, #-16]
    7734:	bl	4d8c <flatcc_json_parser_symbol_part>
    7738:	str	r1, [sp, #12]
    773c:	str	r0, [sp, #8]
    7740:	ldrb	r0, [sp, #15]
    7744:	mov	r1, #1644167168	; 0x62000000
    7748:	teq	r1, r0, lsl #24
    774c:	bne	7838 <MyGame_Example_Test_parse_json_struct_inline+0x160>
    7750:	b	7754 <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    7754:	ldr	r0, [fp, #-8]
    7758:	ldr	r1, [fp, #-12]
    775c:	str	r1, [sp, #20]
    7760:	ldr	r2, [fp, #-16]
    7764:	movw	r3, #1
    7768:	bl	4dc4 <flatcc_json_parser_match_symbol>
    776c:	str	r0, [fp, #-12]
    7770:	ldr	r0, [sp, #20]
    7774:	ldr	r1, [fp, #-12]
    7778:	cmp	r0, r1
    777c:	beq	7820 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    7780:	movw	r0, #0
    7784:	strb	r0, [sp, #7]
    7788:	ldr	r0, [fp, #-20]	; 0xffffffec
    778c:	add	r0, r0, #2
    7790:	str	r0, [sp, #24]
    7794:	ldr	r0, [fp, #-8]
    7798:	ldr	r1, [fp, #-12]
    779c:	str	r1, [sp, #20]
    77a0:	ldr	r2, [fp, #-16]
    77a4:	add	r3, sp, #7
    77a8:	bl	62e0 <flatcc_json_parser_int8>
    77ac:	str	r0, [fp, #-12]
    77b0:	ldr	r0, [sp, #20]
    77b4:	ldr	r1, [fp, #-12]
    77b8:	cmp	r0, r1
    77bc:	bne	7810 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    77c0:	ldr	r0, [fp, #-8]
    77c4:	ldr	r1, [fp, #-12]
    77c8:	str	r1, [sp, #20]
    77cc:	ldr	r2, [fp, #-16]
    77d0:	movw	r3, #0
    77d4:	movt	r3, #0
    77d8:	add	ip, sp, #7
    77dc:	str	ip, [sp]
    77e0:	bl	63bc <flatcc_json_parser_symbolic_int8>
    77e4:	str	r0, [fp, #-12]
    77e8:	ldr	r0, [fp, #-12]
    77ec:	ldr	r1, [sp, #20]
    77f0:	cmp	r0, r1
    77f4:	beq	7808 <MyGame_Example_Test_parse_json_struct_inline+0x130>
    77f8:	ldr	r0, [fp, #-12]
    77fc:	ldr	r1, [fp, #-16]
    7800:	cmp	r0, r1
    7804:	bne	780c <MyGame_Example_Test_parse_json_struct_inline+0x134>
    7808:	b	7970 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    780c:	b	7810 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    7810:	ldr	r0, [sp, #24]
    7814:	ldrsb	r1, [sp, #7]
    7818:	bl	65e8 <flatbuffers_int8_write_to_pe>
    781c:	b	7834 <MyGame_Example_Test_parse_json_struct_inline+0x15c>
    7820:	ldr	r0, [fp, #-8]
    7824:	ldr	r1, [fp, #-12]
    7828:	ldr	r2, [fp, #-16]
    782c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7830:	str	r0, [fp, #-12]
    7834:	b	7948 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    7838:	ldrb	r0, [sp, #15]
    783c:	mov	r1, #1627389952	; 0x61000000
    7840:	teq	r1, r0, lsl #24
    7844:	bne	7930 <MyGame_Example_Test_parse_json_struct_inline+0x258>
    7848:	b	784c <MyGame_Example_Test_parse_json_struct_inline+0x174>
    784c:	ldr	r0, [fp, #-8]
    7850:	ldr	r1, [fp, #-12]
    7854:	str	r1, [sp, #20]
    7858:	ldr	r2, [fp, #-16]
    785c:	movw	r3, #1
    7860:	bl	4dc4 <flatcc_json_parser_match_symbol>
    7864:	str	r0, [fp, #-12]
    7868:	ldr	r0, [sp, #20]
    786c:	ldr	r1, [fp, #-12]
    7870:	cmp	r0, r1
    7874:	beq	7918 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    7878:	movw	r0, #0
    787c:	strh	r0, [sp, #4]
    7880:	ldr	r0, [fp, #-20]	; 0xffffffec
    7884:	add	r0, r0, #0
    7888:	str	r0, [sp, #24]
    788c:	ldr	r0, [fp, #-8]
    7890:	ldr	r1, [fp, #-12]
    7894:	str	r1, [sp, #20]
    7898:	ldr	r2, [fp, #-16]
    789c:	add	r3, sp, #4
    78a0:	bl	6b90 <flatcc_json_parser_int16>
    78a4:	str	r0, [fp, #-12]
    78a8:	ldr	r0, [sp, #20]
    78ac:	ldr	r1, [fp, #-12]
    78b0:	cmp	r0, r1
    78b4:	bne	7908 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    78b8:	ldr	r0, [fp, #-8]
    78bc:	ldr	r1, [fp, #-12]
    78c0:	str	r1, [sp, #20]
    78c4:	ldr	r2, [fp, #-16]
    78c8:	movw	r3, #0
    78cc:	movt	r3, #0
    78d0:	add	ip, sp, #4
    78d4:	str	ip, [sp]
    78d8:	bl	6c6c <flatcc_json_parser_symbolic_int16>
    78dc:	str	r0, [fp, #-12]
    78e0:	ldr	r0, [fp, #-12]
    78e4:	ldr	r1, [sp, #20]
    78e8:	cmp	r0, r1
    78ec:	beq	7900 <MyGame_Example_Test_parse_json_struct_inline+0x228>
    78f0:	ldr	r0, [fp, #-12]
    78f4:	ldr	r1, [fp, #-16]
    78f8:	cmp	r0, r1
    78fc:	bne	7904 <MyGame_Example_Test_parse_json_struct_inline+0x22c>
    7900:	b	7970 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    7904:	b	7908 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    7908:	ldr	r0, [sp, #24]
    790c:	ldrsh	r1, [sp, #4]
    7910:	bl	6e98 <flatbuffers_int16_write_to_pe>
    7914:	b	792c <MyGame_Example_Test_parse_json_struct_inline+0x254>
    7918:	ldr	r0, [fp, #-8]
    791c:	ldr	r1, [fp, #-12]
    7920:	ldr	r2, [fp, #-16]
    7924:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7928:	str	r0, [fp, #-12]
    792c:	b	7944 <MyGame_Example_Test_parse_json_struct_inline+0x26c>
    7930:	ldr	r0, [fp, #-8]
    7934:	ldr	r1, [fp, #-12]
    7938:	ldr	r2, [fp, #-16]
    793c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7940:	str	r0, [fp, #-12]
    7944:	b	7948 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    7948:	ldr	r0, [fp, #-8]
    794c:	ldr	r1, [fp, #-12]
    7950:	ldr	r2, [fp, #-16]
    7954:	sub	r3, fp, #24
    7958:	bl	a03c <flatcc_json_parser_object_end>
    795c:	str	r0, [fp, #-12]
    7960:	b	770c <MyGame_Example_Test_parse_json_struct_inline+0x34>
    7964:	ldr	r0, [fp, #-12]
    7968:	str	r0, [fp, #-4]
    796c:	b	7988 <MyGame_Example_Test_parse_json_struct_inline+0x2b0>
    7970:	ldr	r0, [fp, #-8]
    7974:	ldr	r1, [fp, #-12]
    7978:	ldr	r2, [fp, #-16]
    797c:	movw	r3, #33	; 0x21
    7980:	bl	0 <flatcc_json_parser_set_error>
    7984:	str	r0, [fp, #-4]
    7988:	ldr	r0, [fp, #-4]
    798c:	mov	sp, fp
    7990:	pop	{fp, pc}

00007994 <MyGame_Example_Any_parse_json_union>:
    7994:	push	{fp, lr}
    7998:	mov	fp, sp
    799c:	sub	sp, sp, #24
    79a0:	ldr	ip, [fp, #8]
    79a4:	str	r0, [fp, #-8]
    79a8:	str	r1, [sp, #12]
    79ac:	str	r2, [sp, #8]
    79b0:	strb	r3, [sp, #7]
    79b4:	ldr	r0, [fp, #8]
    79b8:	mov	r1, #0
    79bc:	str	r1, [r0]
    79c0:	ldrb	r0, [sp, #7]
    79c4:	mov	r1, r0
    79c8:	cmp	r0, #4
    79cc:	str	r1, [sp]
    79d0:	bhi	7a80 <MyGame_Example_Any_parse_json_union+0xec>
    79d4:	add	r0, pc, #8
    79d8:	ldr	r1, [sp]
    79dc:	ldr	r0, [r0, r1, lsl #2]
    79e0:	mov	pc, r0
    79e4:	.word	0x000079f8
    79e8:	.word	0x00007a10
    79ec:	.word	0x00007a2c
    79f0:	.word	0x00007a48
    79f4:	.word	0x00007a64
    79f8:	ldr	r0, [fp, #-8]
    79fc:	ldr	r1, [sp, #12]
    7a00:	ldr	r2, [sp, #8]
    7a04:	bl	b9a0 <flatcc_json_parser_none>
    7a08:	str	r0, [fp, #-4]
    7a0c:	b	7b18 <MyGame_Example_Any_parse_json_union+0x184>
    7a10:	ldr	r0, [fp, #-8]
    7a14:	ldr	r1, [sp, #12]
    7a18:	ldr	r2, [sp, #8]
    7a1c:	ldr	r3, [fp, #8]
    7a20:	bl	1288 <MyGame_Example_Monster_parse_json_table>
    7a24:	str	r0, [sp, #12]
    7a28:	b	7ac8 <MyGame_Example_Any_parse_json_union+0x134>
    7a2c:	ldr	r0, [fp, #-8]
    7a30:	ldr	r1, [sp, #12]
    7a34:	ldr	r2, [sp, #8]
    7a38:	ldr	r3, [fp, #8]
    7a3c:	bl	ba20 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    7a40:	str	r0, [sp, #12]
    7a44:	b	7ac8 <MyGame_Example_Any_parse_json_union+0x134>
    7a48:	ldr	r0, [fp, #-8]
    7a4c:	ldr	r1, [sp, #12]
    7a50:	ldr	r2, [sp, #8]
    7a54:	ldr	r3, [fp, #8]
    7a58:	bl	c068 <MyGame_Example2_Monster_parse_json_table>
    7a5c:	str	r0, [sp, #12]
    7a60:	b	7ac8 <MyGame_Example_Any_parse_json_union+0x134>
    7a64:	ldr	r0, [fp, #-8]
    7a68:	ldr	r1, [sp, #12]
    7a6c:	ldr	r2, [sp, #8]
    7a70:	ldr	r3, [fp, #8]
    7a74:	bl	c174 <MyGame_Example_Alt_parse_json_table>
    7a78:	str	r0, [sp, #12]
    7a7c:	b	7ac8 <MyGame_Example_Any_parse_json_union+0x134>
    7a80:	ldr	r0, [fp, #-8]
    7a84:	ldr	r0, [r0, #8]
    7a88:	and	r0, r0, #1
    7a8c:	cmp	r0, #0
    7a90:	bne	7ab0 <MyGame_Example_Any_parse_json_union+0x11c>
    7a94:	ldr	r0, [fp, #-8]
    7a98:	ldr	r1, [sp, #12]
    7a9c:	ldr	r2, [sp, #8]
    7aa0:	movw	r3, #15
    7aa4:	bl	0 <flatcc_json_parser_set_error>
    7aa8:	str	r0, [fp, #-4]
    7aac:	b	7b18 <MyGame_Example_Any_parse_json_union+0x184>
    7ab0:	ldr	r0, [fp, #-8]
    7ab4:	ldr	r1, [sp, #12]
    7ab8:	ldr	r2, [sp, #8]
    7abc:	bl	0 <flatcc_json_parser_generic_json>
    7ac0:	str	r0, [fp, #-4]
    7ac4:	b	7b18 <MyGame_Example_Any_parse_json_union+0x184>
    7ac8:	ldr	r0, [fp, #-8]
    7acc:	ldr	r0, [r0, #24]
    7ad0:	cmp	r0, #0
    7ad4:	beq	7ae4 <MyGame_Example_Any_parse_json_union+0x150>
    7ad8:	ldr	r0, [sp, #12]
    7adc:	str	r0, [fp, #-4]
    7ae0:	b	7b18 <MyGame_Example_Any_parse_json_union+0x184>
    7ae4:	ldr	r0, [fp, #8]
    7ae8:	ldr	r0, [r0]
    7aec:	cmp	r0, #0
    7af0:	bne	7b10 <MyGame_Example_Any_parse_json_union+0x17c>
    7af4:	ldr	r0, [fp, #-8]
    7af8:	ldr	r1, [sp, #12]
    7afc:	ldr	r2, [sp, #8]
    7b00:	movw	r3, #33	; 0x21
    7b04:	bl	0 <flatcc_json_parser_set_error>
    7b08:	str	r0, [fp, #-4]
    7b0c:	b	7b18 <MyGame_Example_Any_parse_json_union+0x184>
    7b10:	ldr	r0, [sp, #12]
    7b14:	str	r0, [fp, #-4]
    7b18:	ldr	r0, [fp, #-4]
    7b1c:	mov	sp, fp
    7b20:	pop	{fp, pc}

00007b24 <MyGame_Example_Any_parse_json_enum>:
    7b24:	push	{fp, lr}
    7b28:	mov	fp, sp
    7b2c:	sub	sp, sp, #72	; 0x48
    7b30:	ldr	ip, [fp, #12]
    7b34:	ldr	lr, [fp, #8]
    7b38:	str	r0, [fp, #-8]
    7b3c:	str	r1, [fp, #-12]
    7b40:	str	r2, [fp, #-16]
    7b44:	str	r3, [fp, #-20]	; 0xffffffec
    7b48:	ldr	r0, [fp, #-12]
    7b4c:	str	r0, [fp, #-24]	; 0xffffffe8
    7b50:	ldr	r0, [fp, #-12]
    7b54:	ldr	r1, [fp, #-16]
    7b58:	str	ip, [sp, #28]
    7b5c:	str	lr, [sp, #24]
    7b60:	bl	4d8c <flatcc_json_parser_symbol_part>
    7b64:	str	r1, [sp, #36]	; 0x24
    7b68:	str	r0, [sp, #32]
    7b6c:	ldr	r0, [sp, #32]
    7b70:	ldr	r1, [sp, #36]	; 0x24
    7b74:	movw	r2, #29183	; 0x71ff
    7b78:	movt	r2, #29797	; 0x7465
    7b7c:	subs	r0, r2, r0
    7b80:	movw	r2, #28275	; 0x6e73
    7b84:	movt	r2, #19823	; 0x4d6f
    7b88:	sbcs	r1, r2, r1
    7b8c:	bcc	7c34 <MyGame_Example_Any_parse_json_enum+0x110>
    7b90:	b	7b94 <MyGame_Example_Any_parse_json_enum+0x70>
    7b94:	ldr	r0, [sp, #36]	; 0x24
    7b98:	bic	r0, r0, #255	; 0xff
    7b9c:	movw	r1, #29696	; 0x7400
    7ba0:	movt	r1, #16748	; 0x416c
    7ba4:	teq	r0, r1
    7ba8:	bne	7c24 <MyGame_Example_Any_parse_json_enum+0x100>
    7bac:	b	7bb0 <MyGame_Example_Any_parse_json_enum+0x8c>
    7bb0:	ldr	r0, [fp, #-8]
    7bb4:	ldr	r1, [fp, #-12]
    7bb8:	str	r1, [fp, #-28]	; 0xffffffe4
    7bbc:	ldr	r2, [fp, #-16]
    7bc0:	ldr	r3, [fp, #12]
    7bc4:	movw	ip, #3
    7bc8:	str	r3, [sp, #20]
    7bcc:	mov	r3, ip
    7bd0:	ldr	ip, [sp, #20]
    7bd4:	str	ip, [sp]
    7bd8:	bl	0 <flatcc_json_parser_match_constant>
    7bdc:	str	r0, [fp, #-12]
    7be0:	ldr	r0, [fp, #-12]
    7be4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7be8:	cmp	r0, r1
    7bec:	beq	7c14 <MyGame_Example_Any_parse_json_enum+0xf0>
    7bf0:	ldr	r0, [fp, #8]
    7bf4:	mov	r1, #0
    7bf8:	str	r1, [r0, #4]
    7bfc:	mov	r1, #4
    7c00:	str	r1, [r0]
    7c04:	ldr	r0, [fp, #-20]	; 0xffffffec
    7c08:	movw	r1, #0
    7c0c:	str	r1, [r0]
    7c10:	b	7c20 <MyGame_Example_Any_parse_json_enum+0xfc>
    7c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7c18:	str	r0, [fp, #-4]
    7c1c:	b	7f94 <MyGame_Example_Any_parse_json_enum+0x470>
    7c20:	b	7c30 <MyGame_Example_Any_parse_json_enum+0x10c>
    7c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7c28:	str	r0, [fp, #-4]
    7c2c:	b	7f94 <MyGame_Example_Any_parse_json_enum+0x470>
    7c30:	b	7f8c <MyGame_Example_Any_parse_json_enum+0x468>
    7c34:	ldr	r0, [sp, #32]
    7c38:	ldr	r1, [sp, #36]	; 0x24
    7c3c:	movw	r2, #28275	; 0x6e73
    7c40:	movt	r2, #19823	; 0x4d6f
    7c44:	eor	r1, r1, r2
    7c48:	movw	r2, #29234	; 0x7232
    7c4c:	movt	r2, #29797	; 0x7465
    7c50:	eor	r0, r0, r2
    7c54:	orr	r0, r0, r1
    7c58:	cmp	r0, #0
    7c5c:	bne	7cd0 <MyGame_Example_Any_parse_json_enum+0x1ac>
    7c60:	b	7c64 <MyGame_Example_Any_parse_json_enum+0x140>
    7c64:	ldr	r0, [fp, #-8]
    7c68:	ldr	r1, [fp, #-12]
    7c6c:	str	r1, [fp, #-28]	; 0xffffffe4
    7c70:	ldr	r2, [fp, #-16]
    7c74:	ldr	r3, [fp, #12]
    7c78:	movw	ip, #8
    7c7c:	str	r3, [sp, #16]
    7c80:	mov	r3, ip
    7c84:	ldr	ip, [sp, #16]
    7c88:	str	ip, [sp]
    7c8c:	bl	0 <flatcc_json_parser_match_constant>
    7c90:	str	r0, [fp, #-12]
    7c94:	ldr	r0, [fp, #-12]
    7c98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7c9c:	cmp	r0, r1
    7ca0:	beq	7cc8 <MyGame_Example_Any_parse_json_enum+0x1a4>
    7ca4:	ldr	r0, [fp, #8]
    7ca8:	mov	r1, #0
    7cac:	str	r1, [r0, #4]
    7cb0:	mov	r1, #3
    7cb4:	str	r1, [r0]
    7cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    7cbc:	movw	r1, #0
    7cc0:	str	r1, [r0]
    7cc4:	b	7ccc <MyGame_Example_Any_parse_json_enum+0x1a8>
    7cc8:	b	7d80 <MyGame_Example_Any_parse_json_enum+0x25c>
    7ccc:	b	7d7c <MyGame_Example_Any_parse_json_enum+0x258>
    7cd0:	ldr	r0, [sp, #32]
    7cd4:	ldr	r1, [sp, #36]	; 0x24
    7cd8:	movw	r2, #28526	; 0x6f6e
    7cdc:	movt	r2, #77	; 0x4d
    7ce0:	eor	r2, r2, r1, lsr #8
    7ce4:	lsr	r0, r0, #8
    7ce8:	orr	r0, r0, r1, lsl #24
    7cec:	movw	r1, #25970	; 0x6572
    7cf0:	movt	r1, #29556	; 0x7374
    7cf4:	eor	r0, r0, r1
    7cf8:	orr	r0, r0, r2
    7cfc:	cmp	r0, #0
    7d00:	bne	7d74 <MyGame_Example_Any_parse_json_enum+0x250>
    7d04:	b	7d08 <MyGame_Example_Any_parse_json_enum+0x1e4>
    7d08:	ldr	r0, [fp, #-8]
    7d0c:	ldr	r1, [fp, #-12]
    7d10:	str	r1, [fp, #-28]	; 0xffffffe4
    7d14:	ldr	r2, [fp, #-16]
    7d18:	ldr	r3, [fp, #12]
    7d1c:	movw	ip, #7
    7d20:	str	r3, [sp, #12]
    7d24:	mov	r3, ip
    7d28:	ldr	ip, [sp, #12]
    7d2c:	str	ip, [sp]
    7d30:	bl	0 <flatcc_json_parser_match_constant>
    7d34:	str	r0, [fp, #-12]
    7d38:	ldr	r0, [fp, #-12]
    7d3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7d40:	cmp	r0, r1
    7d44:	beq	7d6c <MyGame_Example_Any_parse_json_enum+0x248>
    7d48:	ldr	r0, [fp, #8]
    7d4c:	mov	r1, #0
    7d50:	str	r1, [r0, #4]
    7d54:	mov	r1, #1
    7d58:	str	r1, [r0]
    7d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7d60:	movw	r1, #0
    7d64:	str	r1, [r0]
    7d68:	b	7d70 <MyGame_Example_Any_parse_json_enum+0x24c>
    7d6c:	b	7d80 <MyGame_Example_Any_parse_json_enum+0x25c>
    7d70:	b	7d78 <MyGame_Example_Any_parse_json_enum+0x254>
    7d74:	b	7d80 <MyGame_Example_Any_parse_json_enum+0x25c>
    7d78:	b	7d7c <MyGame_Example_Any_parse_json_enum+0x258>
    7d7c:	b	7f88 <MyGame_Example_Any_parse_json_enum+0x464>
    7d80:	ldr	r0, [sp, #36]	; 0x24
    7d84:	movw	r1, #20037	; 0x4e45
    7d88:	movt	r1, #20047	; 0x4e4f
    7d8c:	teq	r0, r1
    7d90:	bne	7e00 <MyGame_Example_Any_parse_json_enum+0x2dc>
    7d94:	b	7d98 <MyGame_Example_Any_parse_json_enum+0x274>
    7d98:	ldr	r0, [fp, #-8]
    7d9c:	ldr	r1, [fp, #-12]
    7da0:	str	r1, [fp, #-28]	; 0xffffffe4
    7da4:	ldr	r2, [fp, #-16]
    7da8:	ldr	r3, [fp, #12]
    7dac:	movw	ip, #4
    7db0:	str	r3, [sp, #8]
    7db4:	mov	r3, ip
    7db8:	ldr	ip, [sp, #8]
    7dbc:	str	ip, [sp]
    7dc0:	bl	0 <flatcc_json_parser_match_constant>
    7dc4:	str	r0, [fp, #-12]
    7dc8:	ldr	r0, [fp, #-12]
    7dcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7dd0:	cmp	r0, r1
    7dd4:	beq	7df8 <MyGame_Example_Any_parse_json_enum+0x2d4>
    7dd8:	ldr	r0, [fp, #8]
    7ddc:	mov	r1, #0
    7de0:	str	r1, [r0, #4]
    7de4:	str	r1, [r0]
    7de8:	ldr	r0, [fp, #-20]	; 0xffffffec
    7dec:	movw	r1, #0
    7df0:	str	r1, [r0]
    7df4:	b	7dfc <MyGame_Example_Any_parse_json_enum+0x2d8>
    7df8:	b	7e08 <MyGame_Example_Any_parse_json_enum+0x2e4>
    7dfc:	b	7e04 <MyGame_Example_Any_parse_json_enum+0x2e0>
    7e00:	b	7e08 <MyGame_Example_Any_parse_json_enum+0x2e4>
    7e04:	b	7f84 <MyGame_Example_Any_parse_json_enum+0x460>
    7e08:	ldr	r0, [sp, #32]
    7e0c:	ldr	r1, [sp, #36]	; 0x24
    7e10:	movw	r2, #29556	; 0x7374
    7e14:	movt	r2, #21605	; 0x5465
    7e18:	eor	r1, r1, r2
    7e1c:	movw	r2, #28016	; 0x6d70
    7e20:	movt	r2, #21353	; 0x5369
    7e24:	eor	r0, r0, r2
    7e28:	orr	r0, r0, r1
    7e2c:	cmp	r0, #0
    7e30:	bne	7f74 <MyGame_Example_Any_parse_json_enum+0x450>
    7e34:	b	7e38 <MyGame_Example_Any_parse_json_enum+0x314>
    7e38:	ldr	r0, [fp, #-12]
    7e3c:	add	r0, r0, #8
    7e40:	str	r0, [fp, #-12]
    7e44:	ldr	r0, [fp, #-12]
    7e48:	ldr	r1, [fp, #-16]
    7e4c:	bl	4d8c <flatcc_json_parser_symbol_part>
    7e50:	str	r1, [sp, #36]	; 0x24
    7e54:	str	r0, [sp, #32]
    7e58:	ldr	r0, [sp, #32]
    7e5c:	ldr	r1, [sp, #36]	; 0x24
    7e60:	movw	r2, #21601	; 0x5461
    7e64:	movt	r2, #27749	; 0x6c65
    7e68:	eor	r1, r1, r2
    7e6c:	movw	r2, #25943	; 0x6557
    7e70:	movt	r2, #25196	; 0x626c
    7e74:	eor	r0, r0, r2
    7e78:	orr	r0, r0, r1
    7e7c:	cmp	r0, #0
    7e80:	bne	7f64 <MyGame_Example_Any_parse_json_enum+0x440>
    7e84:	b	7e88 <MyGame_Example_Any_parse_json_enum+0x364>
    7e88:	ldr	r0, [fp, #-12]
    7e8c:	add	r0, r0, #8
    7e90:	str	r0, [fp, #-12]
    7e94:	ldr	r0, [fp, #-12]
    7e98:	ldr	r1, [fp, #-16]
    7e9c:	bl	4d8c <flatcc_json_parser_symbol_part>
    7ea0:	str	r1, [sp, #36]	; 0x24
    7ea4:	str	r0, [sp, #32]
    7ea8:	ldr	r0, [sp, #32]
    7eac:	ldr	r1, [sp, #36]	; 0x24
    7eb0:	movw	r2, #29800	; 0x7468
    7eb4:	movt	r2, #105	; 0x69
    7eb8:	eor	r2, r2, r1, lsr #8
    7ebc:	lsr	r0, r0, #8
    7ec0:	orr	r0, r0, r1, lsl #24
    7ec4:	movw	r1, #30061	; 0x756d
    7ec8:	movt	r1, #17774	; 0x456e
    7ecc:	eor	r0, r0, r1
    7ed0:	orr	r0, r0, r2
    7ed4:	cmp	r0, #0
    7ed8:	bne	7f54 <MyGame_Example_Any_parse_json_enum+0x430>
    7edc:	b	7ee0 <MyGame_Example_Any_parse_json_enum+0x3bc>
    7ee0:	ldr	r0, [fp, #-8]
    7ee4:	ldr	r1, [fp, #-12]
    7ee8:	str	r1, [fp, #-28]	; 0xffffffe4
    7eec:	ldr	r2, [fp, #-16]
    7ef0:	ldr	r3, [fp, #12]
    7ef4:	movw	ip, #7
    7ef8:	str	r3, [sp, #4]
    7efc:	mov	r3, ip
    7f00:	ldr	ip, [sp, #4]
    7f04:	str	ip, [sp]
    7f08:	bl	0 <flatcc_json_parser_match_constant>
    7f0c:	str	r0, [fp, #-12]
    7f10:	ldr	r0, [fp, #-12]
    7f14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7f18:	cmp	r0, r1
    7f1c:	beq	7f44 <MyGame_Example_Any_parse_json_enum+0x420>
    7f20:	ldr	r0, [fp, #8]
    7f24:	mov	r1, #0
    7f28:	str	r1, [r0, #4]
    7f2c:	mov	r1, #2
    7f30:	str	r1, [r0]
    7f34:	ldr	r0, [fp, #-20]	; 0xffffffec
    7f38:	movw	r1, #0
    7f3c:	str	r1, [r0]
    7f40:	b	7f50 <MyGame_Example_Any_parse_json_enum+0x42c>
    7f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7f48:	str	r0, [fp, #-4]
    7f4c:	b	7f94 <MyGame_Example_Any_parse_json_enum+0x470>
    7f50:	b	7f60 <MyGame_Example_Any_parse_json_enum+0x43c>
    7f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7f58:	str	r0, [fp, #-4]
    7f5c:	b	7f94 <MyGame_Example_Any_parse_json_enum+0x470>
    7f60:	b	7f70 <MyGame_Example_Any_parse_json_enum+0x44c>
    7f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7f68:	str	r0, [fp, #-4]
    7f6c:	b	7f94 <MyGame_Example_Any_parse_json_enum+0x470>
    7f70:	b	7f80 <MyGame_Example_Any_parse_json_enum+0x45c>
    7f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7f78:	str	r0, [fp, #-4]
    7f7c:	b	7f94 <MyGame_Example_Any_parse_json_enum+0x470>
    7f80:	b	7f84 <MyGame_Example_Any_parse_json_enum+0x460>
    7f84:	b	7f88 <MyGame_Example_Any_parse_json_enum+0x464>
    7f88:	b	7f8c <MyGame_Example_Any_parse_json_enum+0x468>
    7f8c:	ldr	r0, [fp, #-12]
    7f90:	str	r0, [fp, #-4]
    7f94:	ldr	r0, [fp, #-4]
    7f98:	mov	sp, fp
    7f9c:	pop	{fp, pc}

00007fa0 <flatcc_json_parser_bool>:
    7fa0:	push	{fp, lr}
    7fa4:	mov	fp, sp
    7fa8:	sub	sp, sp, #32
    7fac:	str	r0, [fp, #-8]
    7fb0:	str	r1, [fp, #-12]
    7fb4:	str	r2, [sp, #16]
    7fb8:	str	r3, [sp, #12]
    7fbc:	ldr	r0, [fp, #-12]
    7fc0:	str	r0, [sp, #8]
    7fc4:	ldr	r0, [sp, #16]
    7fc8:	ldr	r1, [fp, #-12]
    7fcc:	sub	r0, r0, r1
    7fd0:	cmp	r0, #4
    7fd4:	blt	8014 <flatcc_json_parser_bool+0x74>
    7fd8:	ldr	r0, [fp, #-12]
    7fdc:	ldr	r0, [r0]
    7fe0:	movw	r1, #29300	; 0x7274
    7fe4:	movt	r1, #25973	; 0x6575
    7fe8:	subs	r0, r0, r1
    7fec:	movwne	r0, #1
    7ff0:	cmp	r0, #0
    7ff4:	bne	8014 <flatcc_json_parser_bool+0x74>
    7ff8:	ldr	r0, [sp, #12]
    7ffc:	movw	r1, #1
    8000:	strb	r1, [r0]
    8004:	ldr	r0, [sp, #8]
    8008:	add	r0, r0, #4
    800c:	str	r0, [fp, #-4]
    8010:	b	80ac <flatcc_json_parser_bool+0x10c>
    8014:	ldr	r0, [sp, #16]
    8018:	ldr	r1, [fp, #-12]
    801c:	sub	r0, r0, r1
    8020:	cmp	r0, #5
    8024:	blt	8060 <flatcc_json_parser_bool+0xc0>
    8028:	ldr	r0, [fp, #-12]
    802c:	movw	r1, #0
    8030:	movt	r1, #0
    8034:	mov	r2, #5
    8038:	bl	0 <memcmp>
    803c:	cmp	r0, #0
    8040:	bne	8060 <flatcc_json_parser_bool+0xc0>
    8044:	ldr	r0, [sp, #12]
    8048:	movw	r1, #0
    804c:	strb	r1, [r0]
    8050:	ldr	r0, [sp, #8]
    8054:	add	r0, r0, #5
    8058:	str	r0, [fp, #-4]
    805c:	b	80ac <flatcc_json_parser_bool+0x10c>
    8060:	b	8064 <flatcc_json_parser_bool+0xc4>
    8064:	ldr	r0, [fp, #-8]
    8068:	ldr	r1, [fp, #-12]
    806c:	ldr	r2, [sp, #16]
    8070:	add	r3, sp, #7
    8074:	bl	66f8 <flatcc_json_parser_uint8>
    8078:	str	r0, [fp, #-12]
    807c:	ldrsb	r0, [sp, #7]
    8080:	cmp	r0, #0
    8084:	movw	r0, #0
    8088:	movne	r0, #1
    808c:	mvn	r1, #0
    8090:	eor	r0, r0, r1
    8094:	eor	r0, r0, r1
    8098:	and	r0, r0, #1
    809c:	ldr	r1, [sp, #12]
    80a0:	strb	r0, [r1]
    80a4:	ldr	r0, [fp, #-12]
    80a8:	str	r0, [fp, #-4]
    80ac:	ldr	r0, [fp, #-4]
    80b0:	mov	sp, fp
    80b4:	pop	{fp, pc}

000080b8 <flatcc_json_parser_symbolic_bool>:
    80b8:	push	{r4, r5, r6, sl, fp, lr}
    80bc:	add	fp, sp, #16
    80c0:	sub	sp, sp, #88	; 0x58
    80c4:	ldr	ip, [fp, #8]
    80c8:	str	r0, [fp, #-24]	; 0xffffffe8
    80cc:	str	r1, [fp, #-28]	; 0xffffffe4
    80d0:	str	r2, [fp, #-32]	; 0xffffffe0
    80d4:	str	r3, [fp, #-36]	; 0xffffffdc
    80d8:	movw	r0, #0
    80dc:	strb	r0, [fp, #-45]	; 0xffffffd3
    80e0:	movw	r1, #0
    80e4:	str	r1, [sp, #36]	; 0x24
    80e8:	ldr	r1, [fp, #8]
    80ec:	strb	r0, [r1]
    80f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    80f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    80fc:	str	ip, [sp, #32]
    8100:	bl	b780 <flatcc_json_parser_constant_start>
    8104:	str	r0, [fp, #-28]	; 0xffffffe4
    8108:	ldr	r0, [fp, #-28]	; 0xffffffe4
    810c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8110:	cmp	r0, r1
    8114:	bne	8124 <flatcc_json_parser_symbolic_bool+0x6c>
    8118:	ldr	r0, [fp, #-28]	; 0xffffffe4
    811c:	str	r0, [fp, #-20]	; 0xffffffec
    8120:	b	82d8 <flatcc_json_parser_symbolic_bool+0x220>
    8124:	b	8128 <flatcc_json_parser_symbolic_bool+0x70>
    8128:	ldr	r0, [fp, #-36]	; 0xffffffdc
    812c:	str	r0, [fp, #-40]	; 0xffffffd8
    8130:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8134:	ldr	r0, [r0]
    8138:	ldr	r1, [fp, #-24]	; 0xffffffe8
    813c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8140:	str	r2, [fp, #-44]	; 0xffffffd4
    8144:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8148:	str	r0, [sp, #28]
    814c:	mov	r0, r1
    8150:	mov	r1, r2
    8154:	mov	r2, r3
    8158:	add	r3, sp, #44	; 0x2c
    815c:	add	ip, sp, #48	; 0x30
    8160:	str	ip, [sp]
    8164:	add	ip, sp, #40	; 0x28
    8168:	str	ip, [sp, #4]
    816c:	ldr	ip, [sp, #28]
    8170:	blx	ip
    8174:	str	r0, [fp, #-28]	; 0xffffffe4
    8178:	ldr	r0, [fp, #-28]	; 0xffffffe4
    817c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8180:	cmp	r0, r1
    8184:	bne	8194 <flatcc_json_parser_symbolic_bool+0xdc>
    8188:	ldr	r0, [fp, #-28]	; 0xffffffe4
    818c:	str	r0, [fp, #-20]	; 0xffffffec
    8190:	b	82d8 <flatcc_json_parser_symbolic_bool+0x220>
    8194:	b	8198 <flatcc_json_parser_symbolic_bool+0xe0>
    8198:	ldr	r0, [fp, #-28]	; 0xffffffe4
    819c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    81a0:	cmp	r0, r1
    81a4:	movw	r0, #0
    81a8:	str	r0, [sp, #24]
    81ac:	bne	81d4 <flatcc_json_parser_symbolic_bool+0x11c>
    81b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    81b4:	add	r1, r0, #4
    81b8:	str	r1, [fp, #-40]	; 0xffffffd8
    81bc:	ldr	r0, [r0, #4]
    81c0:	movw	r1, #0
    81c4:	cmp	r0, r1
    81c8:	movw	r0, #0
    81cc:	movne	r0, #1
    81d0:	str	r0, [sp, #24]
    81d4:	ldr	r0, [sp, #24]
    81d8:	tst	r0, #1
    81dc:	bne	8130 <flatcc_json_parser_symbolic_bool+0x78>
    81e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    81e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    81e8:	cmp	r0, r1
    81ec:	bne	820c <flatcc_json_parser_symbolic_bool+0x154>
    81f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    81f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    81f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    81fc:	movw	r3, #23
    8200:	bl	0 <flatcc_json_parser_set_error>
    8204:	str	r0, [fp, #-20]	; 0xffffffec
    8208:	b	82d8 <flatcc_json_parser_symbolic_bool+0x220>
    820c:	ldr	r0, [sp, #36]	; 0x24
    8210:	add	r1, r0, #1
    8214:	str	r1, [sp, #36]	; 0x24
    8218:	cmp	r0, #0
    821c:	beq	824c <flatcc_json_parser_symbolic_bool+0x194>
    8220:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8224:	ldr	r0, [r0, #12]
    8228:	cmp	r0, #0
    822c:	beq	824c <flatcc_json_parser_symbolic_bool+0x194>
    8230:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8234:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8238:	ldr	r2, [fp, #-32]	; 0xffffffe0
    823c:	movw	r3, #14
    8240:	bl	0 <flatcc_json_parser_set_error>
    8244:	str	r0, [fp, #-20]	; 0xffffffec
    8248:	b	82d8 <flatcc_json_parser_symbolic_bool+0x220>
    824c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8250:	mov	r1, r0
    8254:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8258:	ldr	r3, [fp, #-28]	; 0xffffffe4
    825c:	ldr	ip, [sp, #44]	; 0x2c
    8260:	ldr	lr, [sp, #48]	; 0x30
    8264:	ldr	r4, [sp, #52]	; 0x34
    8268:	mov	r5, sp
    826c:	sub	r6, fp, #45	; 0x2d
    8270:	str	r6, [r5, #8]
    8274:	str	r4, [r5, #4]
    8278:	str	lr, [r5]
    827c:	str	r0, [sp, #20]
    8280:	mov	r0, r2
    8284:	str	r1, [sp, #16]
    8288:	mov	r1, r3
    828c:	ldr	r2, [sp, #20]
    8290:	mov	r3, ip
    8294:	bl	fd88 <flatcc_json_parser_coerce_bool>
    8298:	ldr	r1, [sp, #16]
    829c:	cmp	r1, r0
    82a0:	bne	82b0 <flatcc_json_parser_symbolic_bool+0x1f8>
    82a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    82a8:	str	r0, [fp, #-20]	; 0xffffffec
    82ac:	b	82d8 <flatcc_json_parser_symbolic_bool+0x220>
    82b0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    82b4:	ldr	r1, [fp, #8]
    82b8:	ldrb	r2, [r1]
    82bc:	add	r0, r2, r0
    82c0:	strb	r0, [r1]
    82c4:	ldr	r0, [sp, #40]	; 0x28
    82c8:	cmp	r0, #0
    82cc:	bne	8128 <flatcc_json_parser_symbolic_bool+0x70>
    82d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    82d4:	str	r0, [fp, #-20]	; 0xffffffec
    82d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    82dc:	sub	sp, fp, #16
    82e0:	pop	{r4, r5, r6, sl, fp, pc}

000082e4 <flatbuffers_bool_write_to_pe>:
    82e4:	push	{fp, lr}
    82e8:	mov	fp, sp
    82ec:	sub	sp, sp, #8
    82f0:	str	r0, [sp, #4]
    82f4:	strb	r1, [sp, #3]
    82f8:	ldrb	r0, [sp, #3]
    82fc:	bl	fe20 <flatbuffers_bool_cast_to_pe>
    8300:	ldr	r1, [sp, #4]
    8304:	strb	r0, [r1]
    8308:	mov	sp, fp
    830c:	pop	{fp, pc}

00008310 <MyGame_Example_Ability_parse_json_struct_inline>:
    8310:	push	{fp, lr}
    8314:	mov	fp, sp
    8318:	sub	sp, sp, #64	; 0x40
    831c:	str	r0, [fp, #-8]
    8320:	str	r1, [fp, #-12]
    8324:	str	r2, [fp, #-16]
    8328:	str	r3, [fp, #-20]	; 0xffffffec
    832c:	ldr	r0, [fp, #-8]
    8330:	ldr	r1, [fp, #-12]
    8334:	ldr	r2, [fp, #-16]
    8338:	sub	r3, fp, #24
    833c:	bl	4bfc <flatcc_json_parser_object_start>
    8340:	str	r0, [fp, #-12]
    8344:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8348:	cmp	r0, #0
    834c:	beq	85bc <MyGame_Example_Ability_parse_json_struct_inline+0x2ac>
    8350:	ldr	r0, [fp, #-8]
    8354:	ldr	r1, [fp, #-12]
    8358:	ldr	r2, [fp, #-16]
    835c:	bl	4ce0 <flatcc_json_parser_symbol_start>
    8360:	str	r0, [fp, #-12]
    8364:	ldr	r0, [fp, #-12]
    8368:	ldr	r1, [fp, #-16]
    836c:	bl	4d8c <flatcc_json_parser_symbol_part>
    8370:	str	r1, [sp, #20]
    8374:	str	r0, [sp, #16]
    8378:	ldrh	r0, [sp, #22]
    837c:	movw	r1, #0
    8380:	movt	r1, #26980	; 0x6964
    8384:	teq	r1, r0, lsl #16
    8388:	bne	8474 <MyGame_Example_Ability_parse_json_struct_inline+0x164>
    838c:	b	8390 <MyGame_Example_Ability_parse_json_struct_inline+0x80>
    8390:	ldr	r0, [fp, #-8]
    8394:	ldr	r1, [fp, #-12]
    8398:	str	r1, [sp, #28]
    839c:	ldr	r2, [fp, #-16]
    83a0:	movw	r3, #2
    83a4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    83a8:	str	r0, [fp, #-12]
    83ac:	ldr	r0, [sp, #28]
    83b0:	ldr	r1, [fp, #-12]
    83b4:	cmp	r0, r1
    83b8:	beq	845c <MyGame_Example_Ability_parse_json_struct_inline+0x14c>
    83bc:	movw	r0, #0
    83c0:	str	r0, [sp, #12]
    83c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    83c8:	add	r0, r0, #0
    83cc:	str	r0, [sp, #32]
    83d0:	ldr	r0, [fp, #-8]
    83d4:	ldr	r1, [fp, #-12]
    83d8:	str	r1, [sp, #28]
    83dc:	ldr	r2, [fp, #-16]
    83e0:	add	r3, sp, #12
    83e4:	bl	9758 <flatcc_json_parser_uint32>
    83e8:	str	r0, [fp, #-12]
    83ec:	ldr	r0, [sp, #28]
    83f0:	ldr	r1, [fp, #-12]
    83f4:	cmp	r0, r1
    83f8:	bne	844c <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    83fc:	ldr	r0, [fp, #-8]
    8400:	ldr	r1, [fp, #-12]
    8404:	str	r1, [sp, #28]
    8408:	ldr	r2, [fp, #-16]
    840c:	movw	r3, #0
    8410:	movt	r3, #0
    8414:	add	ip, sp, #12
    8418:	str	ip, [sp]
    841c:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    8420:	str	r0, [fp, #-12]
    8424:	ldr	r0, [fp, #-12]
    8428:	ldr	r1, [sp, #28]
    842c:	cmp	r0, r1
    8430:	beq	8444 <MyGame_Example_Ability_parse_json_struct_inline+0x134>
    8434:	ldr	r0, [fp, #-12]
    8438:	ldr	r1, [fp, #-16]
    843c:	cmp	r0, r1
    8440:	bne	8448 <MyGame_Example_Ability_parse_json_struct_inline+0x138>
    8444:	b	85c8 <MyGame_Example_Ability_parse_json_struct_inline+0x2b8>
    8448:	b	844c <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    844c:	ldr	r0, [sp, #32]
    8450:	ldr	r1, [sp, #12]
    8454:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    8458:	b	8470 <MyGame_Example_Ability_parse_json_struct_inline+0x160>
    845c:	ldr	r0, [fp, #-8]
    8460:	ldr	r1, [fp, #-12]
    8464:	ldr	r2, [fp, #-16]
    8468:	bl	0 <flatcc_json_parser_unmatched_symbol>
    846c:	str	r0, [fp, #-12]
    8470:	b	85a0 <MyGame_Example_Ability_parse_json_struct_inline+0x290>
    8474:	ldr	r0, [sp, #16]
    8478:	ldr	r1, [sp, #20]
    847c:	movw	r2, #29556	; 0x7374
    8480:	movt	r2, #25705	; 0x6469
    8484:	eor	r1, r1, r2
    8488:	movw	r2, #25445	; 0x6365
    848c:	movt	r2, #24942	; 0x616e
    8490:	eor	r0, r0, r2
    8494:	orr	r0, r0, r1
    8498:	cmp	r0, #0
    849c:	bne	8588 <MyGame_Example_Ability_parse_json_struct_inline+0x278>
    84a0:	b	84a4 <MyGame_Example_Ability_parse_json_struct_inline+0x194>
    84a4:	ldr	r0, [fp, #-8]
    84a8:	ldr	r1, [fp, #-12]
    84ac:	str	r1, [sp, #28]
    84b0:	ldr	r2, [fp, #-16]
    84b4:	movw	r3, #8
    84b8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    84bc:	str	r0, [fp, #-12]
    84c0:	ldr	r0, [sp, #28]
    84c4:	ldr	r1, [fp, #-12]
    84c8:	cmp	r0, r1
    84cc:	beq	8570 <MyGame_Example_Ability_parse_json_struct_inline+0x260>
    84d0:	movw	r0, #0
    84d4:	str	r0, [sp, #8]
    84d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    84dc:	add	r0, r0, #4
    84e0:	str	r0, [sp, #32]
    84e4:	ldr	r0, [fp, #-8]
    84e8:	ldr	r1, [fp, #-12]
    84ec:	str	r1, [sp, #28]
    84f0:	ldr	r2, [fp, #-16]
    84f4:	add	r3, sp, #8
    84f8:	bl	9758 <flatcc_json_parser_uint32>
    84fc:	str	r0, [fp, #-12]
    8500:	ldr	r0, [sp, #28]
    8504:	ldr	r1, [fp, #-12]
    8508:	cmp	r0, r1
    850c:	bne	8560 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    8510:	ldr	r0, [fp, #-8]
    8514:	ldr	r1, [fp, #-12]
    8518:	str	r1, [sp, #28]
    851c:	ldr	r2, [fp, #-16]
    8520:	movw	r3, #0
    8524:	movt	r3, #0
    8528:	add	ip, sp, #8
    852c:	str	ip, [sp]
    8530:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    8534:	str	r0, [fp, #-12]
    8538:	ldr	r0, [fp, #-12]
    853c:	ldr	r1, [sp, #28]
    8540:	cmp	r0, r1
    8544:	beq	8558 <MyGame_Example_Ability_parse_json_struct_inline+0x248>
    8548:	ldr	r0, [fp, #-12]
    854c:	ldr	r1, [fp, #-16]
    8550:	cmp	r0, r1
    8554:	bne	855c <MyGame_Example_Ability_parse_json_struct_inline+0x24c>
    8558:	b	85c8 <MyGame_Example_Ability_parse_json_struct_inline+0x2b8>
    855c:	b	8560 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    8560:	ldr	r0, [sp, #32]
    8564:	ldr	r1, [sp, #8]
    8568:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    856c:	b	8584 <MyGame_Example_Ability_parse_json_struct_inline+0x274>
    8570:	ldr	r0, [fp, #-8]
    8574:	ldr	r1, [fp, #-12]
    8578:	ldr	r2, [fp, #-16]
    857c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8580:	str	r0, [fp, #-12]
    8584:	b	859c <MyGame_Example_Ability_parse_json_struct_inline+0x28c>
    8588:	ldr	r0, [fp, #-8]
    858c:	ldr	r1, [fp, #-12]
    8590:	ldr	r2, [fp, #-16]
    8594:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8598:	str	r0, [fp, #-12]
    859c:	b	85a0 <MyGame_Example_Ability_parse_json_struct_inline+0x290>
    85a0:	ldr	r0, [fp, #-8]
    85a4:	ldr	r1, [fp, #-12]
    85a8:	ldr	r2, [fp, #-16]
    85ac:	sub	r3, fp, #24
    85b0:	bl	a03c <flatcc_json_parser_object_end>
    85b4:	str	r0, [fp, #-12]
    85b8:	b	8344 <MyGame_Example_Ability_parse_json_struct_inline+0x34>
    85bc:	ldr	r0, [fp, #-12]
    85c0:	str	r0, [fp, #-4]
    85c4:	b	85e0 <MyGame_Example_Ability_parse_json_struct_inline+0x2d0>
    85c8:	ldr	r0, [fp, #-8]
    85cc:	ldr	r1, [fp, #-12]
    85d0:	ldr	r2, [fp, #-16]
    85d4:	movw	r3, #33	; 0x21
    85d8:	bl	0 <flatcc_json_parser_set_error>
    85dc:	str	r0, [fp, #-4]
    85e0:	ldr	r0, [fp, #-4]
    85e4:	mov	sp, fp
    85e8:	pop	{fp, pc}

000085ec <MyGame_Example_TestBase64_parse_json_table>:
    85ec:	push	{fp, lr}
    85f0:	mov	fp, sp
    85f4:	sub	sp, sp, #56	; 0x38
    85f8:	str	r0, [fp, #-8]
    85fc:	str	r1, [fp, #-12]
    8600:	str	r2, [fp, #-16]
    8604:	str	r3, [fp, #-20]	; 0xffffffec
    8608:	ldr	r0, [fp, #-20]	; 0xffffffec
    860c:	movw	r1, #0
    8610:	str	r1, [r0]
    8614:	ldr	r0, [fp, #-8]
    8618:	ldr	r0, [r0]
    861c:	movw	r1, #3
    8620:	bl	0 <flatcc_builder_start_table>
    8624:	cmp	r0, #0
    8628:	beq	8630 <MyGame_Example_TestBase64_parse_json_table+0x44>
    862c:	b	89a0 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    8630:	ldr	r0, [fp, #-8]
    8634:	ldr	r1, [fp, #-12]
    8638:	ldr	r2, [fp, #-16]
    863c:	sub	r3, fp, #24
    8640:	bl	4bfc <flatcc_json_parser_object_start>
    8644:	str	r0, [fp, #-12]
    8648:	ldr	r0, [fp, #-24]	; 0xffffffe8
    864c:	cmp	r0, #0
    8650:	beq	8960 <MyGame_Example_TestBase64_parse_json_table+0x374>
    8654:	ldr	r0, [fp, #-8]
    8658:	ldr	r1, [fp, #-12]
    865c:	ldr	r2, [fp, #-16]
    8660:	bl	4ce0 <flatcc_json_parser_symbol_start>
    8664:	str	r0, [fp, #-12]
    8668:	ldr	r0, [fp, #-12]
    866c:	ldr	r1, [fp, #-16]
    8670:	bl	4d8c <flatcc_json_parser_symbol_part>
    8674:	str	r1, [sp, #12]
    8678:	str	r0, [sp, #8]
    867c:	ldr	r0, [sp, #8]
    8680:	ldr	r1, [sp, #12]
    8684:	movw	r2, #65535	; 0xffff
    8688:	movt	r2, #25955	; 0x6563
    868c:	subs	r0, r2, r0
    8690:	movw	r2, #29556	; 0x7374
    8694:	movt	r2, #28261	; 0x6e65
    8698:	sbcs	r1, r2, r1
    869c:	bcc	8778 <MyGame_Example_TestBase64_parse_json_table+0x18c>
    86a0:	b	86a4 <MyGame_Example_TestBase64_parse_json_table+0xb8>
    86a4:	ldr	r0, [sp, #12]
    86a8:	movw	r1, #29793	; 0x7461
    86ac:	movt	r1, #25697	; 0x6461
    86b0:	teq	r0, r1
    86b4:	bne	8760 <MyGame_Example_TestBase64_parse_json_table+0x174>
    86b8:	b	86bc <MyGame_Example_TestBase64_parse_json_table+0xd0>
    86bc:	ldr	r0, [fp, #-8]
    86c0:	ldr	r1, [fp, #-12]
    86c4:	str	r1, [sp, #16]
    86c8:	ldr	r2, [fp, #-16]
    86cc:	movw	r3, #4
    86d0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    86d4:	str	r0, [fp, #-12]
    86d8:	ldr	r0, [sp, #16]
    86dc:	ldr	r1, [fp, #-12]
    86e0:	cmp	r0, r1
    86e4:	beq	8748 <MyGame_Example_TestBase64_parse_json_table+0x15c>
    86e8:	ldr	r0, [fp, #-8]
    86ec:	ldr	r1, [fp, #-12]
    86f0:	ldr	r2, [fp, #-16]
    86f4:	add	r3, sp, #24
    86f8:	movw	ip, #0
    86fc:	str	ip, [sp]
    8700:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8704:	str	r0, [fp, #-12]
    8708:	ldr	r0, [sp, #24]
    870c:	cmp	r0, #0
    8710:	beq	8734 <MyGame_Example_TestBase64_parse_json_table+0x148>
    8714:	ldr	r0, [fp, #-8]
    8718:	ldr	r0, [r0]
    871c:	movw	r1, #0
    8720:	bl	0 <flatcc_builder_table_add_offset>
    8724:	str	r0, [sp, #20]
    8728:	movw	r1, #0
    872c:	cmp	r0, r1
    8730:	bne	8738 <MyGame_Example_TestBase64_parse_json_table+0x14c>
    8734:	b	89a0 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    8738:	ldr	r0, [sp, #24]
    873c:	ldr	r1, [sp, #20]
    8740:	str	r0, [r1]
    8744:	b	875c <MyGame_Example_TestBase64_parse_json_table+0x170>
    8748:	ldr	r0, [fp, #-8]
    874c:	ldr	r1, [fp, #-12]
    8750:	ldr	r2, [fp, #-16]
    8754:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8758:	str	r0, [fp, #-12]
    875c:	b	8774 <MyGame_Example_TestBase64_parse_json_table+0x188>
    8760:	ldr	r0, [fp, #-8]
    8764:	ldr	r1, [fp, #-12]
    8768:	ldr	r2, [fp, #-16]
    876c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8770:	str	r0, [fp, #-12]
    8774:	b	8944 <MyGame_Example_TestBase64_parse_json_table+0x358>
    8778:	ldr	r0, [sp, #8]
    877c:	ldr	r1, [sp, #12]
    8780:	movw	r2, #29292	; 0x726c
    8784:	movt	r2, #117	; 0x75
    8788:	eor	r2, r2, r1, lsr #8
    878c:	lsr	r0, r0, #8
    8790:	orr	r0, r0, r1, lsl #24
    8794:	movw	r1, #29793	; 0x7461
    8798:	movt	r1, #25697	; 0x6461
    879c:	eor	r0, r0, r1
    87a0:	orr	r0, r0, r2
    87a4:	cmp	r0, #0
    87a8:	bne	8854 <MyGame_Example_TestBase64_parse_json_table+0x268>
    87ac:	b	87b0 <MyGame_Example_TestBase64_parse_json_table+0x1c4>
    87b0:	ldr	r0, [fp, #-8]
    87b4:	ldr	r1, [fp, #-12]
    87b8:	str	r1, [sp, #16]
    87bc:	ldr	r2, [fp, #-16]
    87c0:	movw	r3, #7
    87c4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    87c8:	str	r0, [fp, #-12]
    87cc:	ldr	r0, [sp, #16]
    87d0:	ldr	r1, [fp, #-12]
    87d4:	cmp	r0, r1
    87d8:	beq	883c <MyGame_Example_TestBase64_parse_json_table+0x250>
    87dc:	ldr	r0, [fp, #-8]
    87e0:	ldr	r1, [fp, #-12]
    87e4:	ldr	r2, [fp, #-16]
    87e8:	add	r3, sp, #24
    87ec:	movw	ip, #1
    87f0:	str	ip, [sp]
    87f4:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    87f8:	str	r0, [fp, #-12]
    87fc:	ldr	r0, [sp, #24]
    8800:	cmp	r0, #0
    8804:	beq	8828 <MyGame_Example_TestBase64_parse_json_table+0x23c>
    8808:	ldr	r0, [fp, #-8]
    880c:	ldr	r0, [r0]
    8810:	movw	r1, #1
    8814:	bl	0 <flatcc_builder_table_add_offset>
    8818:	str	r0, [sp, #20]
    881c:	movw	r1, #0
    8820:	cmp	r0, r1
    8824:	bne	882c <MyGame_Example_TestBase64_parse_json_table+0x240>
    8828:	b	89a0 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    882c:	ldr	r0, [sp, #24]
    8830:	ldr	r1, [sp, #20]
    8834:	str	r0, [r1]
    8838:	b	8850 <MyGame_Example_TestBase64_parse_json_table+0x264>
    883c:	ldr	r0, [fp, #-8]
    8840:	ldr	r1, [fp, #-12]
    8844:	ldr	r2, [fp, #-16]
    8848:	bl	0 <flatcc_json_parser_unmatched_symbol>
    884c:	str	r0, [fp, #-12]
    8850:	b	8940 <MyGame_Example_TestBase64_parse_json_table+0x354>
    8854:	ldrh	r0, [sp, #10]
    8858:	ldr	r1, [sp, #12]
    885c:	movw	r2, #28261	; 0x6e65
    8860:	eor	r2, r2, r1, lsr #16
    8864:	orr	r0, r0, r1, lsl #16
    8868:	movw	r1, #25956	; 0x6564
    886c:	movt	r1, #29556	; 0x7374
    8870:	eor	r0, r0, r1
    8874:	orr	r0, r0, r2
    8878:	cmp	r0, #0
    887c:	bne	8928 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    8880:	b	8884 <MyGame_Example_TestBase64_parse_json_table+0x298>
    8884:	ldr	r0, [fp, #-8]
    8888:	ldr	r1, [fp, #-12]
    888c:	str	r1, [sp, #16]
    8890:	ldr	r2, [fp, #-16]
    8894:	movw	r3, #6
    8898:	bl	4dc4 <flatcc_json_parser_match_symbol>
    889c:	str	r0, [fp, #-12]
    88a0:	ldr	r0, [sp, #16]
    88a4:	ldr	r1, [fp, #-12]
    88a8:	cmp	r0, r1
    88ac:	beq	8910 <MyGame_Example_TestBase64_parse_json_table+0x324>
    88b0:	ldr	r0, [fp, #-8]
    88b4:	ldr	r1, [fp, #-12]
    88b8:	ldr	r2, [fp, #-16]
    88bc:	add	r3, sp, #24
    88c0:	movw	ip, #0
    88c4:	str	ip, [sp]
    88c8:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    88cc:	str	r0, [fp, #-12]
    88d0:	ldr	r0, [sp, #24]
    88d4:	cmp	r0, #0
    88d8:	beq	88fc <MyGame_Example_TestBase64_parse_json_table+0x310>
    88dc:	ldr	r0, [fp, #-8]
    88e0:	ldr	r0, [r0]
    88e4:	movw	r1, #2
    88e8:	bl	0 <flatcc_builder_table_add_offset>
    88ec:	str	r0, [sp, #20]
    88f0:	movw	r1, #0
    88f4:	cmp	r0, r1
    88f8:	bne	8900 <MyGame_Example_TestBase64_parse_json_table+0x314>
    88fc:	b	89a0 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    8900:	ldr	r0, [sp, #24]
    8904:	ldr	r1, [sp, #20]
    8908:	str	r0, [r1]
    890c:	b	8924 <MyGame_Example_TestBase64_parse_json_table+0x338>
    8910:	ldr	r0, [fp, #-8]
    8914:	ldr	r1, [fp, #-12]
    8918:	ldr	r2, [fp, #-16]
    891c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8920:	str	r0, [fp, #-12]
    8924:	b	893c <MyGame_Example_TestBase64_parse_json_table+0x350>
    8928:	ldr	r0, [fp, #-8]
    892c:	ldr	r1, [fp, #-12]
    8930:	ldr	r2, [fp, #-16]
    8934:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8938:	str	r0, [fp, #-12]
    893c:	b	8940 <MyGame_Example_TestBase64_parse_json_table+0x354>
    8940:	b	8944 <MyGame_Example_TestBase64_parse_json_table+0x358>
    8944:	ldr	r0, [fp, #-8]
    8948:	ldr	r1, [fp, #-12]
    894c:	ldr	r2, [fp, #-16]
    8950:	sub	r3, fp, #24
    8954:	bl	a03c <flatcc_json_parser_object_end>
    8958:	str	r0, [fp, #-12]
    895c:	b	8648 <MyGame_Example_TestBase64_parse_json_table+0x5c>
    8960:	ldr	r0, [fp, #-8]
    8964:	ldr	r0, [r0, #24]
    8968:	cmp	r0, #0
    896c:	beq	8974 <MyGame_Example_TestBase64_parse_json_table+0x388>
    8970:	b	89a0 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    8974:	ldr	r0, [fp, #-8]
    8978:	ldr	r0, [r0]
    897c:	bl	0 <flatcc_builder_end_table>
    8980:	ldr	r1, [fp, #-20]	; 0xffffffec
    8984:	str	r0, [r1]
    8988:	cmp	r0, #0
    898c:	bne	8994 <MyGame_Example_TestBase64_parse_json_table+0x3a8>
    8990:	b	89a0 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    8994:	ldr	r0, [fp, #-12]
    8998:	str	r0, [fp, #-4]
    899c:	b	89b8 <MyGame_Example_TestBase64_parse_json_table+0x3cc>
    89a0:	ldr	r0, [fp, #-8]
    89a4:	ldr	r1, [fp, #-12]
    89a8:	ldr	r2, [fp, #-16]
    89ac:	movw	r3, #33	; 0x21
    89b0:	bl	0 <flatcc_json_parser_set_error>
    89b4:	str	r0, [fp, #-4]
    89b8:	ldr	r0, [fp, #-4]
    89bc:	mov	sp, fp
    89c0:	pop	{fp, pc}

000089c4 <MyGame_Example_Stat_parse_json_table>:
    89c4:	push	{fp, lr}
    89c8:	mov	fp, sp
    89cc:	sub	sp, sp, #72	; 0x48
    89d0:	str	r0, [fp, #-8]
    89d4:	str	r1, [fp, #-12]
    89d8:	str	r2, [fp, #-16]
    89dc:	str	r3, [fp, #-20]	; 0xffffffec
    89e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    89e4:	movw	r1, #0
    89e8:	str	r1, [r0]
    89ec:	ldr	r0, [fp, #-8]
    89f0:	ldr	r0, [r0]
    89f4:	movw	r1, #3
    89f8:	bl	0 <flatcc_builder_start_table>
    89fc:	cmp	r0, #0
    8a00:	beq	8a08 <MyGame_Example_Stat_parse_json_table+0x44>
    8a04:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8a08:	ldr	r0, [fp, #-8]
    8a0c:	ldr	r1, [fp, #-12]
    8a10:	ldr	r2, [fp, #-16]
    8a14:	sub	r3, fp, #24
    8a18:	bl	4bfc <flatcc_json_parser_object_start>
    8a1c:	str	r0, [fp, #-12]
    8a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8a24:	cmp	r0, #0
    8a28:	beq	8e1c <MyGame_Example_Stat_parse_json_table+0x458>
    8a2c:	ldr	r0, [fp, #-8]
    8a30:	ldr	r1, [fp, #-12]
    8a34:	ldr	r2, [fp, #-16]
    8a38:	bl	4ce0 <flatcc_json_parser_symbol_start>
    8a3c:	str	r0, [fp, #-12]
    8a40:	ldr	r0, [fp, #-12]
    8a44:	ldr	r1, [fp, #-16]
    8a48:	bl	4d8c <flatcc_json_parser_symbol_part>
    8a4c:	str	r1, [sp, #28]
    8a50:	str	r0, [sp, #24]
    8a54:	ldr	r0, [sp, #28]
    8a58:	movw	r1, #65535	; 0xffff
    8a5c:	movt	r1, #26979	; 0x6963
    8a60:	cmp	r0, r1
    8a64:	bhi	8bd8 <MyGame_Example_Stat_parse_json_table+0x214>
    8a68:	b	8a6c <MyGame_Example_Stat_parse_json_table+0xa8>
    8a6c:	ldrb	r0, [sp, #27]
    8a70:	ldr	r1, [sp, #28]
    8a74:	movw	r2, #30062	; 0x756e
    8a78:	movt	r2, #25455	; 0x636f
    8a7c:	eor	r1, r1, r2
    8a80:	eor	r0, r0, #116	; 0x74
    8a84:	orr	r0, r1, r0, lsl #24
    8a88:	cmp	r0, #0
    8a8c:	bne	8bc0 <MyGame_Example_Stat_parse_json_table+0x1fc>
    8a90:	b	8a94 <MyGame_Example_Stat_parse_json_table+0xd0>
    8a94:	ldr	r0, [fp, #-8]
    8a98:	ldr	r1, [fp, #-12]
    8a9c:	str	r1, [sp, #32]
    8aa0:	ldr	r2, [fp, #-16]
    8aa4:	movw	r3, #5
    8aa8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    8aac:	str	r0, [fp, #-12]
    8ab0:	ldr	r0, [sp, #32]
    8ab4:	ldr	r1, [fp, #-12]
    8ab8:	cmp	r0, r1
    8abc:	beq	8ba8 <MyGame_Example_Stat_parse_json_table+0x1e4>
    8ac0:	movw	r0, #0
    8ac4:	strh	r0, [sp, #22]
    8ac8:	ldr	r0, [fp, #-8]
    8acc:	ldr	r1, [fp, #-12]
    8ad0:	str	r1, [sp, #32]
    8ad4:	ldr	r2, [fp, #-16]
    8ad8:	add	r3, sp, #22
    8adc:	bl	f768 <flatcc_json_parser_uint16>
    8ae0:	str	r0, [fp, #-12]
    8ae4:	ldr	r0, [sp, #32]
    8ae8:	ldr	r1, [fp, #-12]
    8aec:	cmp	r0, r1
    8af0:	bne	8b44 <MyGame_Example_Stat_parse_json_table+0x180>
    8af4:	ldr	r0, [fp, #-8]
    8af8:	ldr	r1, [fp, #-12]
    8afc:	str	r1, [sp, #32]
    8b00:	ldr	r2, [fp, #-16]
    8b04:	movw	r3, #0
    8b08:	movt	r3, #0
    8b0c:	add	ip, sp, #22
    8b10:	str	ip, [sp]
    8b14:	bl	f844 <flatcc_json_parser_symbolic_uint16>
    8b18:	str	r0, [fp, #-12]
    8b1c:	ldr	r0, [fp, #-12]
    8b20:	ldr	r1, [sp, #32]
    8b24:	cmp	r0, r1
    8b28:	beq	8b3c <MyGame_Example_Stat_parse_json_table+0x178>
    8b2c:	ldr	r0, [fp, #-12]
    8b30:	ldr	r1, [fp, #-16]
    8b34:	cmp	r0, r1
    8b38:	bne	8b40 <MyGame_Example_Stat_parse_json_table+0x17c>
    8b3c:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8b40:	b	8b44 <MyGame_Example_Stat_parse_json_table+0x180>
    8b44:	ldrh	r0, [sp, #22]
    8b48:	cmp	r0, #0
    8b4c:	bne	8b64 <MyGame_Example_Stat_parse_json_table+0x1a0>
    8b50:	ldr	r0, [fp, #-8]
    8b54:	ldr	r0, [r0, #8]
    8b58:	and	r0, r0, #2
    8b5c:	cmp	r0, #0
    8b60:	beq	8ba4 <MyGame_Example_Stat_parse_json_table+0x1e0>
    8b64:	ldr	r0, [fp, #-8]
    8b68:	ldr	r0, [r0]
    8b6c:	movw	r1, #2
    8b70:	str	r1, [sp, #4]
    8b74:	ldr	r2, [sp, #4]
    8b78:	movw	r3, #2
    8b7c:	uxth	r3, r3
    8b80:	bl	0 <flatcc_builder_table_add>
    8b84:	str	r0, [fp, #-28]	; 0xffffffe4
    8b88:	movw	r1, #0
    8b8c:	cmp	r0, r1
    8b90:	bne	8b98 <MyGame_Example_Stat_parse_json_table+0x1d4>
    8b94:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8b98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8b9c:	ldrh	r1, [sp, #22]
    8ba0:	bl	fa70 <flatbuffers_uint16_write_to_pe>
    8ba4:	b	8bbc <MyGame_Example_Stat_parse_json_table+0x1f8>
    8ba8:	ldr	r0, [fp, #-8]
    8bac:	ldr	r1, [fp, #-12]
    8bb0:	ldr	r2, [fp, #-16]
    8bb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8bb8:	str	r0, [fp, #-12]
    8bbc:	b	8bd4 <MyGame_Example_Stat_parse_json_table+0x210>
    8bc0:	ldr	r0, [fp, #-8]
    8bc4:	ldr	r1, [fp, #-12]
    8bc8:	ldr	r2, [fp, #-16]
    8bcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8bd0:	str	r0, [fp, #-12]
    8bd4:	b	8e00 <MyGame_Example_Stat_parse_json_table+0x43c>
    8bd8:	ldr	r0, [sp, #28]
    8bdc:	bic	r0, r0, #255	; 0xff
    8be0:	movw	r1, #27648	; 0x6c00
    8be4:	movt	r1, #30305	; 0x7661
    8be8:	teq	r0, r1
    8bec:	bne	8d30 <MyGame_Example_Stat_parse_json_table+0x36c>
    8bf0:	b	8bf4 <MyGame_Example_Stat_parse_json_table+0x230>
    8bf4:	ldr	r0, [fp, #-8]
    8bf8:	ldr	r1, [fp, #-12]
    8bfc:	str	r1, [sp, #32]
    8c00:	ldr	r2, [fp, #-16]
    8c04:	movw	r3, #3
    8c08:	bl	4dc4 <flatcc_json_parser_match_symbol>
    8c0c:	str	r0, [fp, #-12]
    8c10:	ldr	r0, [sp, #32]
    8c14:	ldr	r1, [fp, #-12]
    8c18:	cmp	r0, r1
    8c1c:	beq	8d18 <MyGame_Example_Stat_parse_json_table+0x354>
    8c20:	mov	r0, #0
    8c24:	str	r0, [sp, #12]
    8c28:	str	r0, [sp, #8]
    8c2c:	ldr	r0, [fp, #-8]
    8c30:	ldr	r1, [fp, #-12]
    8c34:	str	r1, [sp, #32]
    8c38:	ldr	r2, [fp, #-16]
    8c3c:	add	r3, sp, #8
    8c40:	bl	9408 <flatcc_json_parser_int64>
    8c44:	str	r0, [fp, #-12]
    8c48:	ldr	r0, [sp, #32]
    8c4c:	ldr	r1, [fp, #-12]
    8c50:	cmp	r0, r1
    8c54:	bne	8ca8 <MyGame_Example_Stat_parse_json_table+0x2e4>
    8c58:	ldr	r0, [fp, #-8]
    8c5c:	ldr	r1, [fp, #-12]
    8c60:	str	r1, [sp, #32]
    8c64:	ldr	r2, [fp, #-16]
    8c68:	movw	r3, #0
    8c6c:	movt	r3, #0
    8c70:	add	ip, sp, #8
    8c74:	str	ip, [sp]
    8c78:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    8c7c:	str	r0, [fp, #-12]
    8c80:	ldr	r0, [fp, #-12]
    8c84:	ldr	r1, [sp, #32]
    8c88:	cmp	r0, r1
    8c8c:	beq	8ca0 <MyGame_Example_Stat_parse_json_table+0x2dc>
    8c90:	ldr	r0, [fp, #-12]
    8c94:	ldr	r1, [fp, #-16]
    8c98:	cmp	r0, r1
    8c9c:	bne	8ca4 <MyGame_Example_Stat_parse_json_table+0x2e0>
    8ca0:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8ca4:	b	8ca8 <MyGame_Example_Stat_parse_json_table+0x2e4>
    8ca8:	ldr	r0, [sp, #8]
    8cac:	ldr	r1, [sp, #12]
    8cb0:	orr	r0, r0, r1
    8cb4:	cmp	r0, #0
    8cb8:	bne	8cd4 <MyGame_Example_Stat_parse_json_table+0x310>
    8cbc:	b	8cc0 <MyGame_Example_Stat_parse_json_table+0x2fc>
    8cc0:	ldr	r0, [fp, #-8]
    8cc4:	ldr	r0, [r0, #8]
    8cc8:	and	r0, r0, #2
    8ccc:	cmp	r0, #0
    8cd0:	beq	8d14 <MyGame_Example_Stat_parse_json_table+0x350>
    8cd4:	ldr	r0, [fp, #-8]
    8cd8:	ldr	r0, [r0]
    8cdc:	movw	r1, #1
    8ce0:	movw	r2, #8
    8ce4:	movw	r3, #8
    8ce8:	uxth	r3, r3
    8cec:	bl	0 <flatcc_builder_table_add>
    8cf0:	str	r0, [fp, #-28]	; 0xffffffe4
    8cf4:	movw	r1, #0
    8cf8:	cmp	r0, r1
    8cfc:	bne	8d04 <MyGame_Example_Stat_parse_json_table+0x340>
    8d00:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8d04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d08:	ldr	r2, [sp, #8]
    8d0c:	ldr	r3, [sp, #12]
    8d10:	bl	9720 <flatbuffers_int64_write_to_pe>
    8d14:	b	8d2c <MyGame_Example_Stat_parse_json_table+0x368>
    8d18:	ldr	r0, [fp, #-8]
    8d1c:	ldr	r1, [fp, #-12]
    8d20:	ldr	r2, [fp, #-16]
    8d24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d28:	str	r0, [fp, #-12]
    8d2c:	b	8dfc <MyGame_Example_Stat_parse_json_table+0x438>
    8d30:	ldrh	r0, [sp, #30]
    8d34:	movw	r1, #0
    8d38:	movt	r1, #26980	; 0x6964
    8d3c:	teq	r1, r0, lsl #16
    8d40:	bne	8de4 <MyGame_Example_Stat_parse_json_table+0x420>
    8d44:	b	8d48 <MyGame_Example_Stat_parse_json_table+0x384>
    8d48:	ldr	r0, [fp, #-8]
    8d4c:	ldr	r1, [fp, #-12]
    8d50:	str	r1, [sp, #32]
    8d54:	ldr	r2, [fp, #-16]
    8d58:	movw	r3, #2
    8d5c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    8d60:	str	r0, [fp, #-12]
    8d64:	ldr	r0, [sp, #32]
    8d68:	ldr	r1, [fp, #-12]
    8d6c:	cmp	r0, r1
    8d70:	beq	8dcc <MyGame_Example_Stat_parse_json_table+0x408>
    8d74:	ldr	r0, [fp, #-8]
    8d78:	ldr	r1, [fp, #-12]
    8d7c:	ldr	r2, [fp, #-16]
    8d80:	sub	r3, fp, #32
    8d84:	bl	0 <flatcc_json_parser_build_string>
    8d88:	str	r0, [fp, #-12]
    8d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8d90:	cmp	r0, #0
    8d94:	beq	8db8 <MyGame_Example_Stat_parse_json_table+0x3f4>
    8d98:	ldr	r0, [fp, #-8]
    8d9c:	ldr	r0, [r0]
    8da0:	movw	r1, #0
    8da4:	bl	0 <flatcc_builder_table_add_offset>
    8da8:	str	r0, [sp, #36]	; 0x24
    8dac:	movw	r1, #0
    8db0:	cmp	r0, r1
    8db4:	bne	8dbc <MyGame_Example_Stat_parse_json_table+0x3f8>
    8db8:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8dc0:	ldr	r1, [sp, #36]	; 0x24
    8dc4:	str	r0, [r1]
    8dc8:	b	8de0 <MyGame_Example_Stat_parse_json_table+0x41c>
    8dcc:	ldr	r0, [fp, #-8]
    8dd0:	ldr	r1, [fp, #-12]
    8dd4:	ldr	r2, [fp, #-16]
    8dd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8ddc:	str	r0, [fp, #-12]
    8de0:	b	8df8 <MyGame_Example_Stat_parse_json_table+0x434>
    8de4:	ldr	r0, [fp, #-8]
    8de8:	ldr	r1, [fp, #-12]
    8dec:	ldr	r2, [fp, #-16]
    8df0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8df4:	str	r0, [fp, #-12]
    8df8:	b	8dfc <MyGame_Example_Stat_parse_json_table+0x438>
    8dfc:	b	8e00 <MyGame_Example_Stat_parse_json_table+0x43c>
    8e00:	ldr	r0, [fp, #-8]
    8e04:	ldr	r1, [fp, #-12]
    8e08:	ldr	r2, [fp, #-16]
    8e0c:	sub	r3, fp, #24
    8e10:	bl	a03c <flatcc_json_parser_object_end>
    8e14:	str	r0, [fp, #-12]
    8e18:	b	8a20 <MyGame_Example_Stat_parse_json_table+0x5c>
    8e1c:	ldr	r0, [fp, #-8]
    8e20:	ldr	r0, [r0, #24]
    8e24:	cmp	r0, #0
    8e28:	beq	8e30 <MyGame_Example_Stat_parse_json_table+0x46c>
    8e2c:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8e30:	ldr	r0, [fp, #-8]
    8e34:	ldr	r0, [r0]
    8e38:	bl	0 <flatcc_builder_end_table>
    8e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    8e40:	str	r0, [r1]
    8e44:	cmp	r0, #0
    8e48:	bne	8e50 <MyGame_Example_Stat_parse_json_table+0x48c>
    8e4c:	b	8e5c <MyGame_Example_Stat_parse_json_table+0x498>
    8e50:	ldr	r0, [fp, #-12]
    8e54:	str	r0, [fp, #-4]
    8e58:	b	8e74 <MyGame_Example_Stat_parse_json_table+0x4b0>
    8e5c:	ldr	r0, [fp, #-8]
    8e60:	ldr	r1, [fp, #-12]
    8e64:	ldr	r2, [fp, #-16]
    8e68:	movw	r3, #33	; 0x21
    8e6c:	bl	0 <flatcc_json_parser_set_error>
    8e70:	str	r0, [fp, #-4]
    8e74:	ldr	r0, [fp, #-4]
    8e78:	mov	sp, fp
    8e7c:	pop	{fp, pc}

00008e80 <flatcc_json_parser_symbolic_float>:
    8e80:	push	{r4, r5, r6, sl, fp, lr}
    8e84:	add	fp, sp, #16
    8e88:	sub	sp, sp, #88	; 0x58
    8e8c:	ldr	ip, [fp, #8]
    8e90:	vldr	s0, [pc, #532]	; 90ac <flatcc_json_parser_symbolic_float+0x22c>
    8e94:	str	r0, [fp, #-24]	; 0xffffffe8
    8e98:	str	r1, [fp, #-28]	; 0xffffffe4
    8e9c:	str	r2, [fp, #-32]	; 0xffffffe0
    8ea0:	str	r3, [fp, #-36]	; 0xffffffdc
    8ea4:	vstr	s0, [fp, #-48]	; 0xffffffd0
    8ea8:	movw	r0, #0
    8eac:	str	r0, [sp, #36]	; 0x24
    8eb0:	ldr	r0, [fp, #8]
    8eb4:	vstr	s0, [r0]
    8eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8ebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8ec0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8ec4:	str	ip, [sp, #32]
    8ec8:	bl	b780 <flatcc_json_parser_constant_start>
    8ecc:	str	r0, [fp, #-28]	; 0xffffffe4
    8ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8ed4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8ed8:	cmp	r0, r1
    8edc:	bne	8eec <flatcc_json_parser_symbolic_float+0x6c>
    8ee0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8ee4:	str	r0, [fp, #-20]	; 0xffffffec
    8ee8:	b	90a0 <flatcc_json_parser_symbolic_float+0x220>
    8eec:	b	8ef0 <flatcc_json_parser_symbolic_float+0x70>
    8ef0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8ef4:	str	r0, [fp, #-40]	; 0xffffffd8
    8ef8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8efc:	ldr	r0, [r0]
    8f00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8f04:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8f08:	str	r2, [fp, #-44]	; 0xffffffd4
    8f0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8f10:	str	r0, [sp, #28]
    8f14:	mov	r0, r1
    8f18:	mov	r1, r2
    8f1c:	mov	r2, r3
    8f20:	add	r3, sp, #44	; 0x2c
    8f24:	add	ip, sp, #48	; 0x30
    8f28:	str	ip, [sp]
    8f2c:	add	ip, sp, #40	; 0x28
    8f30:	str	ip, [sp, #4]
    8f34:	ldr	ip, [sp, #28]
    8f38:	blx	ip
    8f3c:	str	r0, [fp, #-28]	; 0xffffffe4
    8f40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8f44:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8f48:	cmp	r0, r1
    8f4c:	bne	8f5c <flatcc_json_parser_symbolic_float+0xdc>
    8f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8f54:	str	r0, [fp, #-20]	; 0xffffffec
    8f58:	b	90a0 <flatcc_json_parser_symbolic_float+0x220>
    8f5c:	b	8f60 <flatcc_json_parser_symbolic_float+0xe0>
    8f60:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8f64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8f68:	cmp	r0, r1
    8f6c:	movw	r0, #0
    8f70:	str	r0, [sp, #24]
    8f74:	bne	8f9c <flatcc_json_parser_symbolic_float+0x11c>
    8f78:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8f7c:	add	r1, r0, #4
    8f80:	str	r1, [fp, #-40]	; 0xffffffd8
    8f84:	ldr	r0, [r0, #4]
    8f88:	movw	r1, #0
    8f8c:	cmp	r0, r1
    8f90:	movw	r0, #0
    8f94:	movne	r0, #1
    8f98:	str	r0, [sp, #24]
    8f9c:	ldr	r0, [sp, #24]
    8fa0:	tst	r0, #1
    8fa4:	bne	8ef8 <flatcc_json_parser_symbolic_float+0x78>
    8fa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8fac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8fb0:	cmp	r0, r1
    8fb4:	bne	8fd4 <flatcc_json_parser_symbolic_float+0x154>
    8fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8fc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8fc4:	movw	r3, #23
    8fc8:	bl	0 <flatcc_json_parser_set_error>
    8fcc:	str	r0, [fp, #-20]	; 0xffffffec
    8fd0:	b	90a0 <flatcc_json_parser_symbolic_float+0x220>
    8fd4:	ldr	r0, [sp, #36]	; 0x24
    8fd8:	add	r1, r0, #1
    8fdc:	str	r1, [sp, #36]	; 0x24
    8fe0:	cmp	r0, #0
    8fe4:	beq	9014 <flatcc_json_parser_symbolic_float+0x194>
    8fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fec:	ldr	r0, [r0, #12]
    8ff0:	cmp	r0, #0
    8ff4:	beq	9014 <flatcc_json_parser_symbolic_float+0x194>
    8ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8ffc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9000:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9004:	movw	r3, #14
    9008:	bl	0 <flatcc_json_parser_set_error>
    900c:	str	r0, [fp, #-20]	; 0xffffffec
    9010:	b	90a0 <flatcc_json_parser_symbolic_float+0x220>
    9014:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9018:	mov	r1, r0
    901c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9020:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9024:	ldr	ip, [sp, #44]	; 0x2c
    9028:	ldr	lr, [sp, #48]	; 0x30
    902c:	ldr	r4, [sp, #52]	; 0x34
    9030:	mov	r5, sp
    9034:	sub	r6, fp, #48	; 0x30
    9038:	str	r6, [r5, #8]
    903c:	str	r4, [r5, #4]
    9040:	str	lr, [r5]
    9044:	str	r0, [sp, #20]
    9048:	mov	r0, r2
    904c:	str	r1, [sp, #16]
    9050:	mov	r1, r3
    9054:	ldr	r2, [sp, #20]
    9058:	mov	r3, ip
    905c:	bl	fe34 <flatcc_json_parser_coerce_float>
    9060:	ldr	r1, [sp, #16]
    9064:	cmp	r1, r0
    9068:	bne	9078 <flatcc_json_parser_symbolic_float+0x1f8>
    906c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9070:	str	r0, [fp, #-20]	; 0xffffffec
    9074:	b	90a0 <flatcc_json_parser_symbolic_float+0x220>
    9078:	vldr	s0, [fp, #-48]	; 0xffffffd0
    907c:	ldr	r0, [fp, #8]
    9080:	vldr	s2, [r0]
    9084:	vadd.f32	s0, s2, s0
    9088:	vstr	s0, [r0]
    908c:	ldr	r0, [sp, #40]	; 0x28
    9090:	cmp	r0, #0
    9094:	bne	8ef0 <flatcc_json_parser_symbolic_float+0x70>
    9098:	ldr	r0, [fp, #-28]	; 0xffffffe4
    909c:	str	r0, [fp, #-20]	; 0xffffffec
    90a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    90a4:	sub	sp, fp, #16
    90a8:	pop	{r4, r5, r6, sl, fp, pc}
    90ac:	.word	0x00000000

000090b0 <flatbuffers_float_write_to_pe>:
    90b0:	push	{fp, lr}
    90b4:	mov	fp, sp
    90b8:	sub	sp, sp, #8
    90bc:	str	r0, [sp, #4]
    90c0:	vstr	s0, [sp]
    90c4:	vldr	s0, [sp]
    90c8:	bl	feb8 <flatbuffers_float_cast_to_pe>
    90cc:	ldr	r0, [sp, #4]
    90d0:	vstr	s0, [r0]
    90d4:	mov	sp, fp
    90d8:	pop	{fp, pc}

000090dc <flatcc_json_parser_int32>:
    90dc:	push	{r4, r5, fp, lr}
    90e0:	add	fp, sp, #8
    90e4:	sub	sp, sp, #56	; 0x38
    90e8:	str	r0, [fp, #-16]
    90ec:	str	r1, [fp, #-20]	; 0xffffffec
    90f0:	str	r2, [fp, #-24]	; 0xffffffe8
    90f4:	str	r3, [fp, #-28]	; 0xffffffe4
    90f8:	mov	r0, #0
    90fc:	str	r0, [sp, #28]
    9100:	str	r0, [sp, #24]
    9104:	movw	r0, #0
    9108:	str	r0, [sp, #20]
    910c:	ldr	r1, [fp, #-20]	; 0xffffffec
    9110:	str	r1, [sp, #16]
    9114:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9118:	str	r0, [r1]
    911c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9120:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9124:	cmp	r0, r1
    9128:	bne	9138 <flatcc_json_parser_int32+0x5c>
    912c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9130:	str	r0, [fp, #-12]
    9134:	b	91a8 <flatcc_json_parser_int32+0xcc>
    9138:	ldr	r0, [fp, #-16]
    913c:	ldr	r1, [fp, #-20]	; 0xffffffec
    9140:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9144:	add	r3, sp, #20
    9148:	add	ip, sp, #24
    914c:	str	ip, [sp]
    9150:	bl	0 <flatcc_json_parser_integer>
    9154:	str	r0, [fp, #-20]	; 0xffffffec
    9158:	ldr	r0, [fp, #-20]	; 0xffffffec
    915c:	ldr	r1, [sp, #16]
    9160:	cmp	r0, r1
    9164:	beq	91a0 <flatcc_json_parser_int32+0xc4>
    9168:	ldr	r0, [fp, #-16]
    916c:	ldr	r1, [fp, #-20]	; 0xffffffec
    9170:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9174:	ldr	r3, [sp, #20]
    9178:	ldr	ip, [sp, #24]
    917c:	ldr	lr, [sp, #28]
    9180:	ldr	r4, [fp, #-28]	; 0xffffffe4
    9184:	mov	r5, sp
    9188:	str	r4, [r5, #8]
    918c:	str	lr, [r5, #4]
    9190:	str	ip, [r5]
    9194:	bl	fedc <flatcc_json_parser_coerce_int32>
    9198:	str	r0, [fp, #-12]
    919c:	b	91a8 <flatcc_json_parser_int32+0xcc>
    91a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    91a4:	str	r0, [fp, #-12]
    91a8:	ldr	r0, [fp, #-12]
    91ac:	sub	sp, fp, #8
    91b0:	pop	{r4, r5, fp, pc}

000091b4 <flatcc_json_parser_symbolic_int32>:
    91b4:	push	{r4, r5, r6, sl, fp, lr}
    91b8:	add	fp, sp, #16
    91bc:	sub	sp, sp, #88	; 0x58
    91c0:	ldr	ip, [fp, #8]
    91c4:	str	r0, [fp, #-24]	; 0xffffffe8
    91c8:	str	r1, [fp, #-28]	; 0xffffffe4
    91cc:	str	r2, [fp, #-32]	; 0xffffffe0
    91d0:	str	r3, [fp, #-36]	; 0xffffffdc
    91d4:	movw	r0, #0
    91d8:	str	r0, [fp, #-48]	; 0xffffffd0
    91dc:	str	r0, [sp, #36]	; 0x24
    91e0:	ldr	r1, [fp, #8]
    91e4:	str	r0, [r1]
    91e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    91ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    91f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    91f4:	str	ip, [sp, #32]
    91f8:	bl	b780 <flatcc_json_parser_constant_start>
    91fc:	str	r0, [fp, #-28]	; 0xffffffe4
    9200:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9204:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9208:	cmp	r0, r1
    920c:	bne	921c <flatcc_json_parser_symbolic_int32+0x68>
    9210:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9214:	str	r0, [fp, #-20]	; 0xffffffec
    9218:	b	93d0 <flatcc_json_parser_symbolic_int32+0x21c>
    921c:	b	9220 <flatcc_json_parser_symbolic_int32+0x6c>
    9220:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9224:	str	r0, [fp, #-40]	; 0xffffffd8
    9228:	ldr	r0, [fp, #-40]	; 0xffffffd8
    922c:	ldr	r0, [r0]
    9230:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9234:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9238:	str	r2, [fp, #-44]	; 0xffffffd4
    923c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9240:	str	r0, [sp, #28]
    9244:	mov	r0, r1
    9248:	mov	r1, r2
    924c:	mov	r2, r3
    9250:	add	r3, sp, #44	; 0x2c
    9254:	add	ip, sp, #48	; 0x30
    9258:	str	ip, [sp]
    925c:	add	ip, sp, #40	; 0x28
    9260:	str	ip, [sp, #4]
    9264:	ldr	ip, [sp, #28]
    9268:	blx	ip
    926c:	str	r0, [fp, #-28]	; 0xffffffe4
    9270:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9274:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9278:	cmp	r0, r1
    927c:	bne	928c <flatcc_json_parser_symbolic_int32+0xd8>
    9280:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9284:	str	r0, [fp, #-20]	; 0xffffffec
    9288:	b	93d0 <flatcc_json_parser_symbolic_int32+0x21c>
    928c:	b	9290 <flatcc_json_parser_symbolic_int32+0xdc>
    9290:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9294:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9298:	cmp	r0, r1
    929c:	movw	r0, #0
    92a0:	str	r0, [sp, #24]
    92a4:	bne	92cc <flatcc_json_parser_symbolic_int32+0x118>
    92a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    92ac:	add	r1, r0, #4
    92b0:	str	r1, [fp, #-40]	; 0xffffffd8
    92b4:	ldr	r0, [r0, #4]
    92b8:	movw	r1, #0
    92bc:	cmp	r0, r1
    92c0:	movw	r0, #0
    92c4:	movne	r0, #1
    92c8:	str	r0, [sp, #24]
    92cc:	ldr	r0, [sp, #24]
    92d0:	tst	r0, #1
    92d4:	bne	9228 <flatcc_json_parser_symbolic_int32+0x74>
    92d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    92dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    92e0:	cmp	r0, r1
    92e4:	bne	9304 <flatcc_json_parser_symbolic_int32+0x150>
    92e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    92ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    92f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    92f4:	movw	r3, #23
    92f8:	bl	0 <flatcc_json_parser_set_error>
    92fc:	str	r0, [fp, #-20]	; 0xffffffec
    9300:	b	93d0 <flatcc_json_parser_symbolic_int32+0x21c>
    9304:	ldr	r0, [sp, #36]	; 0x24
    9308:	add	r1, r0, #1
    930c:	str	r1, [sp, #36]	; 0x24
    9310:	cmp	r0, #0
    9314:	beq	9344 <flatcc_json_parser_symbolic_int32+0x190>
    9318:	ldr	r0, [fp, #-24]	; 0xffffffe8
    931c:	ldr	r0, [r0, #12]
    9320:	cmp	r0, #0
    9324:	beq	9344 <flatcc_json_parser_symbolic_int32+0x190>
    9328:	ldr	r0, [fp, #-24]	; 0xffffffe8
    932c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9330:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9334:	movw	r3, #14
    9338:	bl	0 <flatcc_json_parser_set_error>
    933c:	str	r0, [fp, #-20]	; 0xffffffec
    9340:	b	93d0 <flatcc_json_parser_symbolic_int32+0x21c>
    9344:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9348:	mov	r1, r0
    934c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9350:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9354:	ldr	ip, [sp, #44]	; 0x2c
    9358:	ldr	lr, [sp, #48]	; 0x30
    935c:	ldr	r4, [sp, #52]	; 0x34
    9360:	mov	r5, sp
    9364:	sub	r6, fp, #48	; 0x30
    9368:	str	r6, [r5, #8]
    936c:	str	r4, [r5, #4]
    9370:	str	lr, [r5]
    9374:	str	r0, [sp, #20]
    9378:	mov	r0, r2
    937c:	str	r1, [sp, #16]
    9380:	mov	r1, r3
    9384:	ldr	r2, [sp, #20]
    9388:	mov	r3, ip
    938c:	bl	fedc <flatcc_json_parser_coerce_int32>
    9390:	ldr	r1, [sp, #16]
    9394:	cmp	r1, r0
    9398:	bne	93a8 <flatcc_json_parser_symbolic_int32+0x1f4>
    939c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    93a0:	str	r0, [fp, #-20]	; 0xffffffec
    93a4:	b	93d0 <flatcc_json_parser_symbolic_int32+0x21c>
    93a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    93ac:	ldr	r1, [fp, #8]
    93b0:	ldr	r2, [r1]
    93b4:	add	r0, r2, r0
    93b8:	str	r0, [r1]
    93bc:	ldr	r0, [sp, #40]	; 0x28
    93c0:	cmp	r0, #0
    93c4:	bne	9220 <flatcc_json_parser_symbolic_int32+0x6c>
    93c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    93cc:	str	r0, [fp, #-20]	; 0xffffffec
    93d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    93d4:	sub	sp, fp, #16
    93d8:	pop	{r4, r5, r6, sl, fp, pc}

000093dc <flatbuffers_int32_write_to_pe>:
    93dc:	push	{fp, lr}
    93e0:	mov	fp, sp
    93e4:	sub	sp, sp, #8
    93e8:	str	r0, [sp, #4]
    93ec:	str	r1, [sp]
    93f0:	ldr	r0, [sp]
    93f4:	bl	ffb4 <flatbuffers_int32_cast_to_pe>
    93f8:	ldr	r1, [sp, #4]
    93fc:	str	r0, [r1]
    9400:	mov	sp, fp
    9404:	pop	{fp, pc}

00009408 <flatcc_json_parser_int64>:
    9408:	push	{r4, r5, fp, lr}
    940c:	add	fp, sp, #8
    9410:	sub	sp, sp, #56	; 0x38
    9414:	str	r0, [fp, #-16]
    9418:	str	r1, [fp, #-20]	; 0xffffffec
    941c:	str	r2, [fp, #-24]	; 0xffffffe8
    9420:	str	r3, [fp, #-28]	; 0xffffffe4
    9424:	mov	r0, #0
    9428:	str	r0, [sp, #28]
    942c:	str	r0, [sp, #24]
    9430:	str	r0, [sp, #20]
    9434:	ldr	r1, [fp, #-20]	; 0xffffffec
    9438:	str	r1, [sp, #16]
    943c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9440:	str	r0, [r1, #4]
    9444:	str	r0, [r1]
    9448:	ldr	r0, [fp, #-20]	; 0xffffffec
    944c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9450:	cmp	r0, r1
    9454:	bne	9464 <flatcc_json_parser_int64+0x5c>
    9458:	ldr	r0, [fp, #-20]	; 0xffffffec
    945c:	str	r0, [fp, #-12]
    9460:	b	94d4 <flatcc_json_parser_int64+0xcc>
    9464:	ldr	r0, [fp, #-16]
    9468:	ldr	r1, [fp, #-20]	; 0xffffffec
    946c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9470:	add	r3, sp, #20
    9474:	add	ip, sp, #24
    9478:	str	ip, [sp]
    947c:	bl	0 <flatcc_json_parser_integer>
    9480:	str	r0, [fp, #-20]	; 0xffffffec
    9484:	ldr	r0, [fp, #-20]	; 0xffffffec
    9488:	ldr	r1, [sp, #16]
    948c:	cmp	r0, r1
    9490:	beq	94cc <flatcc_json_parser_int64+0xc4>
    9494:	ldr	r0, [fp, #-16]
    9498:	ldr	r1, [fp, #-20]	; 0xffffffec
    949c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    94a0:	ldr	r3, [sp, #20]
    94a4:	ldr	ip, [sp, #24]
    94a8:	ldr	lr, [sp, #28]
    94ac:	ldr	r4, [fp, #-28]	; 0xffffffe4
    94b0:	mov	r5, sp
    94b4:	str	r4, [r5, #8]
    94b8:	str	lr, [r5, #4]
    94bc:	str	ip, [r5]
    94c0:	bl	ffc8 <flatcc_json_parser_coerce_int64>
    94c4:	str	r0, [fp, #-12]
    94c8:	b	94d4 <flatcc_json_parser_int64+0xcc>
    94cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    94d0:	str	r0, [fp, #-12]
    94d4:	ldr	r0, [fp, #-12]
    94d8:	sub	sp, fp, #8
    94dc:	pop	{r4, r5, fp, pc}

000094e0 <flatcc_json_parser_symbolic_int64>:
    94e0:	push	{r4, r5, r6, sl, fp, lr}
    94e4:	add	fp, sp, #16
    94e8:	sub	sp, sp, #96	; 0x60
    94ec:	ldr	ip, [fp, #8]
    94f0:	str	r0, [fp, #-24]	; 0xffffffe8
    94f4:	str	r1, [fp, #-28]	; 0xffffffe4
    94f8:	str	r2, [fp, #-32]	; 0xffffffe0
    94fc:	str	r3, [fp, #-36]	; 0xffffffdc
    9500:	mov	r0, #0
    9504:	str	r0, [sp, #60]	; 0x3c
    9508:	str	r0, [sp, #56]	; 0x38
    950c:	str	r0, [sp, #36]	; 0x24
    9510:	ldr	r1, [fp, #8]
    9514:	str	r0, [r1, #4]
    9518:	str	r0, [r1]
    951c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9520:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9524:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9528:	str	ip, [sp, #32]
    952c:	bl	b780 <flatcc_json_parser_constant_start>
    9530:	str	r0, [fp, #-28]	; 0xffffffe4
    9534:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9538:	ldr	r1, [fp, #-32]	; 0xffffffe0
    953c:	cmp	r0, r1
    9540:	bne	9550 <flatcc_json_parser_symbolic_int64+0x70>
    9544:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9548:	str	r0, [fp, #-20]	; 0xffffffec
    954c:	b	9714 <flatcc_json_parser_symbolic_int64+0x234>
    9550:	b	9554 <flatcc_json_parser_symbolic_int64+0x74>
    9554:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9558:	str	r0, [fp, #-40]	; 0xffffffd8
    955c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9560:	ldr	r0, [r0]
    9564:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9568:	ldr	r2, [fp, #-28]	; 0xffffffe4
    956c:	str	r2, [fp, #-44]	; 0xffffffd4
    9570:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9574:	str	r0, [sp, #28]
    9578:	mov	r0, r1
    957c:	mov	r1, r2
    9580:	mov	r2, r3
    9584:	add	r3, sp, #44	; 0x2c
    9588:	add	ip, sp, #48	; 0x30
    958c:	str	ip, [sp]
    9590:	add	ip, sp, #40	; 0x28
    9594:	str	ip, [sp, #4]
    9598:	ldr	ip, [sp, #28]
    959c:	blx	ip
    95a0:	str	r0, [fp, #-28]	; 0xffffffe4
    95a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    95a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    95ac:	cmp	r0, r1
    95b0:	bne	95c0 <flatcc_json_parser_symbolic_int64+0xe0>
    95b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    95b8:	str	r0, [fp, #-20]	; 0xffffffec
    95bc:	b	9714 <flatcc_json_parser_symbolic_int64+0x234>
    95c0:	b	95c4 <flatcc_json_parser_symbolic_int64+0xe4>
    95c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    95c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    95cc:	cmp	r0, r1
    95d0:	movw	r0, #0
    95d4:	str	r0, [sp, #24]
    95d8:	bne	9600 <flatcc_json_parser_symbolic_int64+0x120>
    95dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    95e0:	add	r1, r0, #4
    95e4:	str	r1, [fp, #-40]	; 0xffffffd8
    95e8:	ldr	r0, [r0, #4]
    95ec:	movw	r1, #0
    95f0:	cmp	r0, r1
    95f4:	movw	r0, #0
    95f8:	movne	r0, #1
    95fc:	str	r0, [sp, #24]
    9600:	ldr	r0, [sp, #24]
    9604:	tst	r0, #1
    9608:	bne	955c <flatcc_json_parser_symbolic_int64+0x7c>
    960c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9610:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9614:	cmp	r0, r1
    9618:	bne	9638 <flatcc_json_parser_symbolic_int64+0x158>
    961c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9620:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9624:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9628:	movw	r3, #23
    962c:	bl	0 <flatcc_json_parser_set_error>
    9630:	str	r0, [fp, #-20]	; 0xffffffec
    9634:	b	9714 <flatcc_json_parser_symbolic_int64+0x234>
    9638:	ldr	r0, [sp, #36]	; 0x24
    963c:	add	r1, r0, #1
    9640:	str	r1, [sp, #36]	; 0x24
    9644:	cmp	r0, #0
    9648:	beq	9678 <flatcc_json_parser_symbolic_int64+0x198>
    964c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9650:	ldr	r0, [r0, #12]
    9654:	cmp	r0, #0
    9658:	beq	9678 <flatcc_json_parser_symbolic_int64+0x198>
    965c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9660:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9664:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9668:	movw	r3, #14
    966c:	bl	0 <flatcc_json_parser_set_error>
    9670:	str	r0, [fp, #-20]	; 0xffffffec
    9674:	b	9714 <flatcc_json_parser_symbolic_int64+0x234>
    9678:	ldr	r0, [fp, #-32]	; 0xffffffe0
    967c:	mov	r1, r0
    9680:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9684:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9688:	ldr	ip, [sp, #44]	; 0x2c
    968c:	ldr	lr, [sp, #48]	; 0x30
    9690:	ldr	r4, [sp, #52]	; 0x34
    9694:	mov	r5, sp
    9698:	add	r6, sp, #56	; 0x38
    969c:	str	r6, [r5, #8]
    96a0:	str	r4, [r5, #4]
    96a4:	str	lr, [r5]
    96a8:	str	r0, [sp, #20]
    96ac:	mov	r0, r2
    96b0:	str	r1, [sp, #16]
    96b4:	mov	r1, r3
    96b8:	ldr	r2, [sp, #20]
    96bc:	mov	r3, ip
    96c0:	bl	ffc8 <flatcc_json_parser_coerce_int64>
    96c4:	ldr	r1, [sp, #16]
    96c8:	cmp	r1, r0
    96cc:	bne	96dc <flatcc_json_parser_symbolic_int64+0x1fc>
    96d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    96d4:	str	r0, [fp, #-20]	; 0xffffffec
    96d8:	b	9714 <flatcc_json_parser_symbolic_int64+0x234>
    96dc:	ldr	r0, [sp, #56]	; 0x38
    96e0:	ldr	r1, [sp, #60]	; 0x3c
    96e4:	ldr	r2, [fp, #8]
    96e8:	ldr	r3, [r2]
    96ec:	ldr	ip, [r2, #4]
    96f0:	adds	r0, r3, r0
    96f4:	adc	r1, ip, r1
    96f8:	str	r0, [r2]
    96fc:	str	r1, [r2, #4]
    9700:	ldr	r0, [sp, #40]	; 0x28
    9704:	cmp	r0, #0
    9708:	bne	9554 <flatcc_json_parser_symbolic_int64+0x74>
    970c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9710:	str	r0, [fp, #-20]	; 0xffffffec
    9714:	ldr	r0, [fp, #-20]	; 0xffffffec
    9718:	sub	sp, fp, #16
    971c:	pop	{r4, r5, r6, sl, fp, pc}

00009720 <flatbuffers_int64_write_to_pe>:
    9720:	push	{fp, lr}
    9724:	mov	fp, sp
    9728:	sub	sp, sp, #16
    972c:	str	r0, [fp, #-4]
    9730:	str	r3, [sp, #4]
    9734:	str	r2, [sp]
    9738:	ldr	r0, [sp]
    973c:	ldr	r1, [sp, #4]
    9740:	bl	100ac <flatbuffers_int64_cast_to_pe>
    9744:	ldr	r2, [fp, #-4]
    9748:	str	r1, [r2, #4]
    974c:	str	r0, [r2]
    9750:	mov	sp, fp
    9754:	pop	{fp, pc}

00009758 <flatcc_json_parser_uint32>:
    9758:	push	{r4, r5, fp, lr}
    975c:	add	fp, sp, #8
    9760:	sub	sp, sp, #56	; 0x38
    9764:	str	r0, [fp, #-16]
    9768:	str	r1, [fp, #-20]	; 0xffffffec
    976c:	str	r2, [fp, #-24]	; 0xffffffe8
    9770:	str	r3, [fp, #-28]	; 0xffffffe4
    9774:	mov	r0, #0
    9778:	str	r0, [sp, #28]
    977c:	str	r0, [sp, #24]
    9780:	movw	r0, #0
    9784:	str	r0, [sp, #20]
    9788:	ldr	r1, [fp, #-20]	; 0xffffffec
    978c:	str	r1, [sp, #16]
    9790:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9794:	str	r0, [r1]
    9798:	ldr	r0, [fp, #-20]	; 0xffffffec
    979c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    97a0:	cmp	r0, r1
    97a4:	bne	97b4 <flatcc_json_parser_uint32+0x5c>
    97a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    97ac:	str	r0, [fp, #-12]
    97b0:	b	9824 <flatcc_json_parser_uint32+0xcc>
    97b4:	ldr	r0, [fp, #-16]
    97b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    97bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    97c0:	add	r3, sp, #20
    97c4:	add	ip, sp, #24
    97c8:	str	ip, [sp]
    97cc:	bl	0 <flatcc_json_parser_integer>
    97d0:	str	r0, [fp, #-20]	; 0xffffffec
    97d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    97d8:	ldr	r1, [sp, #16]
    97dc:	cmp	r0, r1
    97e0:	beq	981c <flatcc_json_parser_uint32+0xc4>
    97e4:	ldr	r0, [fp, #-16]
    97e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    97ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    97f0:	ldr	r3, [sp, #20]
    97f4:	ldr	ip, [sp, #24]
    97f8:	ldr	lr, [sp, #28]
    97fc:	ldr	r4, [fp, #-28]	; 0xffffffe4
    9800:	mov	r5, sp
    9804:	str	r4, [r5, #8]
    9808:	str	lr, [r5, #4]
    980c:	str	ip, [r5]
    9810:	bl	100c8 <flatcc_json_parser_coerce_uint32>
    9814:	str	r0, [fp, #-12]
    9818:	b	9824 <flatcc_json_parser_uint32+0xcc>
    981c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9820:	str	r0, [fp, #-12]
    9824:	ldr	r0, [fp, #-12]
    9828:	sub	sp, fp, #8
    982c:	pop	{r4, r5, fp, pc}

00009830 <flatcc_json_parser_symbolic_uint32>:
    9830:	push	{r4, r5, r6, sl, fp, lr}
    9834:	add	fp, sp, #16
    9838:	sub	sp, sp, #88	; 0x58
    983c:	ldr	ip, [fp, #8]
    9840:	str	r0, [fp, #-24]	; 0xffffffe8
    9844:	str	r1, [fp, #-28]	; 0xffffffe4
    9848:	str	r2, [fp, #-32]	; 0xffffffe0
    984c:	str	r3, [fp, #-36]	; 0xffffffdc
    9850:	movw	r0, #0
    9854:	str	r0, [fp, #-48]	; 0xffffffd0
    9858:	str	r0, [sp, #36]	; 0x24
    985c:	ldr	r1, [fp, #8]
    9860:	str	r0, [r1]
    9864:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9868:	ldr	r1, [fp, #-28]	; 0xffffffe4
    986c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9870:	str	ip, [sp, #32]
    9874:	bl	b780 <flatcc_json_parser_constant_start>
    9878:	str	r0, [fp, #-28]	; 0xffffffe4
    987c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9880:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9884:	cmp	r0, r1
    9888:	bne	9898 <flatcc_json_parser_symbolic_uint32+0x68>
    988c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9890:	str	r0, [fp, #-20]	; 0xffffffec
    9894:	b	9a4c <flatcc_json_parser_symbolic_uint32+0x21c>
    9898:	b	989c <flatcc_json_parser_symbolic_uint32+0x6c>
    989c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    98a0:	str	r0, [fp, #-40]	; 0xffffffd8
    98a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    98a8:	ldr	r0, [r0]
    98ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    98b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    98b4:	str	r2, [fp, #-44]	; 0xffffffd4
    98b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    98bc:	str	r0, [sp, #28]
    98c0:	mov	r0, r1
    98c4:	mov	r1, r2
    98c8:	mov	r2, r3
    98cc:	add	r3, sp, #44	; 0x2c
    98d0:	add	ip, sp, #48	; 0x30
    98d4:	str	ip, [sp]
    98d8:	add	ip, sp, #40	; 0x28
    98dc:	str	ip, [sp, #4]
    98e0:	ldr	ip, [sp, #28]
    98e4:	blx	ip
    98e8:	str	r0, [fp, #-28]	; 0xffffffe4
    98ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    98f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    98f4:	cmp	r0, r1
    98f8:	bne	9908 <flatcc_json_parser_symbolic_uint32+0xd8>
    98fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9900:	str	r0, [fp, #-20]	; 0xffffffec
    9904:	b	9a4c <flatcc_json_parser_symbolic_uint32+0x21c>
    9908:	b	990c <flatcc_json_parser_symbolic_uint32+0xdc>
    990c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9910:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9914:	cmp	r0, r1
    9918:	movw	r0, #0
    991c:	str	r0, [sp, #24]
    9920:	bne	9948 <flatcc_json_parser_symbolic_uint32+0x118>
    9924:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9928:	add	r1, r0, #4
    992c:	str	r1, [fp, #-40]	; 0xffffffd8
    9930:	ldr	r0, [r0, #4]
    9934:	movw	r1, #0
    9938:	cmp	r0, r1
    993c:	movw	r0, #0
    9940:	movne	r0, #1
    9944:	str	r0, [sp, #24]
    9948:	ldr	r0, [sp, #24]
    994c:	tst	r0, #1
    9950:	bne	98a4 <flatcc_json_parser_symbolic_uint32+0x74>
    9954:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9958:	ldr	r1, [fp, #-28]	; 0xffffffe4
    995c:	cmp	r0, r1
    9960:	bne	9980 <flatcc_json_parser_symbolic_uint32+0x150>
    9964:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9968:	ldr	r1, [fp, #-28]	; 0xffffffe4
    996c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9970:	movw	r3, #23
    9974:	bl	0 <flatcc_json_parser_set_error>
    9978:	str	r0, [fp, #-20]	; 0xffffffec
    997c:	b	9a4c <flatcc_json_parser_symbolic_uint32+0x21c>
    9980:	ldr	r0, [sp, #36]	; 0x24
    9984:	add	r1, r0, #1
    9988:	str	r1, [sp, #36]	; 0x24
    998c:	cmp	r0, #0
    9990:	beq	99c0 <flatcc_json_parser_symbolic_uint32+0x190>
    9994:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9998:	ldr	r0, [r0, #12]
    999c:	cmp	r0, #0
    99a0:	beq	99c0 <flatcc_json_parser_symbolic_uint32+0x190>
    99a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    99a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    99ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    99b0:	movw	r3, #14
    99b4:	bl	0 <flatcc_json_parser_set_error>
    99b8:	str	r0, [fp, #-20]	; 0xffffffec
    99bc:	b	9a4c <flatcc_json_parser_symbolic_uint32+0x21c>
    99c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    99c4:	mov	r1, r0
    99c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    99cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    99d0:	ldr	ip, [sp, #44]	; 0x2c
    99d4:	ldr	lr, [sp, #48]	; 0x30
    99d8:	ldr	r4, [sp, #52]	; 0x34
    99dc:	mov	r5, sp
    99e0:	sub	r6, fp, #48	; 0x30
    99e4:	str	r6, [r5, #8]
    99e8:	str	r4, [r5, #4]
    99ec:	str	lr, [r5]
    99f0:	str	r0, [sp, #20]
    99f4:	mov	r0, r2
    99f8:	str	r1, [sp, #16]
    99fc:	mov	r1, r3
    9a00:	ldr	r2, [sp, #20]
    9a04:	mov	r3, ip
    9a08:	bl	100c8 <flatcc_json_parser_coerce_uint32>
    9a0c:	ldr	r1, [sp, #16]
    9a10:	cmp	r1, r0
    9a14:	bne	9a24 <flatcc_json_parser_symbolic_uint32+0x1f4>
    9a18:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9a1c:	str	r0, [fp, #-20]	; 0xffffffec
    9a20:	b	9a4c <flatcc_json_parser_symbolic_uint32+0x21c>
    9a24:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9a28:	ldr	r1, [fp, #8]
    9a2c:	ldr	r2, [r1]
    9a30:	add	r0, r2, r0
    9a34:	str	r0, [r1]
    9a38:	ldr	r0, [sp, #40]	; 0x28
    9a3c:	cmp	r0, #0
    9a40:	bne	989c <flatcc_json_parser_symbolic_uint32+0x6c>
    9a44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9a48:	str	r0, [fp, #-20]	; 0xffffffec
    9a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9a50:	sub	sp, fp, #16
    9a54:	pop	{r4, r5, r6, sl, fp, pc}

00009a58 <flatbuffers_uint32_write_to_pe>:
    9a58:	push	{fp, lr}
    9a5c:	mov	fp, sp
    9a60:	sub	sp, sp, #8
    9a64:	str	r0, [sp, #4]
    9a68:	str	r1, [sp]
    9a6c:	ldr	r0, [sp]
    9a70:	bl	1016c <flatbuffers_uint32_cast_to_pe>
    9a74:	ldr	r1, [sp, #4]
    9a78:	str	r0, [r1]
    9a7c:	mov	sp, fp
    9a80:	pop	{fp, pc}

00009a84 <flatcc_json_parser_uint64>:
    9a84:	push	{r4, r5, fp, lr}
    9a88:	add	fp, sp, #8
    9a8c:	sub	sp, sp, #56	; 0x38
    9a90:	str	r0, [fp, #-16]
    9a94:	str	r1, [fp, #-20]	; 0xffffffec
    9a98:	str	r2, [fp, #-24]	; 0xffffffe8
    9a9c:	str	r3, [fp, #-28]	; 0xffffffe4
    9aa0:	mov	r0, #0
    9aa4:	str	r0, [sp, #28]
    9aa8:	str	r0, [sp, #24]
    9aac:	str	r0, [sp, #20]
    9ab0:	ldr	r1, [fp, #-20]	; 0xffffffec
    9ab4:	str	r1, [sp, #16]
    9ab8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9abc:	str	r0, [r1, #4]
    9ac0:	str	r0, [r1]
    9ac4:	ldr	r0, [fp, #-20]	; 0xffffffec
    9ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9acc:	cmp	r0, r1
    9ad0:	bne	9ae0 <flatcc_json_parser_uint64+0x5c>
    9ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
    9ad8:	str	r0, [fp, #-12]
    9adc:	b	9b50 <flatcc_json_parser_uint64+0xcc>
    9ae0:	ldr	r0, [fp, #-16]
    9ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
    9ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9aec:	add	r3, sp, #20
    9af0:	add	ip, sp, #24
    9af4:	str	ip, [sp]
    9af8:	bl	0 <flatcc_json_parser_integer>
    9afc:	str	r0, [fp, #-20]	; 0xffffffec
    9b00:	ldr	r0, [fp, #-20]	; 0xffffffec
    9b04:	ldr	r1, [sp, #16]
    9b08:	cmp	r0, r1
    9b0c:	beq	9b48 <flatcc_json_parser_uint64+0xc4>
    9b10:	ldr	r0, [fp, #-16]
    9b14:	ldr	r1, [fp, #-20]	; 0xffffffec
    9b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b1c:	ldr	r3, [sp, #20]
    9b20:	ldr	ip, [sp, #24]
    9b24:	ldr	lr, [sp, #28]
    9b28:	ldr	r4, [fp, #-28]	; 0xffffffe4
    9b2c:	mov	r5, sp
    9b30:	str	r4, [r5, #8]
    9b34:	str	lr, [r5, #4]
    9b38:	str	ip, [r5]
    9b3c:	bl	10180 <flatcc_json_parser_coerce_uint64>
    9b40:	str	r0, [fp, #-12]
    9b44:	b	9b50 <flatcc_json_parser_uint64+0xcc>
    9b48:	ldr	r0, [fp, #-20]	; 0xffffffec
    9b4c:	str	r0, [fp, #-12]
    9b50:	ldr	r0, [fp, #-12]
    9b54:	sub	sp, fp, #8
    9b58:	pop	{r4, r5, fp, pc}

00009b5c <flatcc_json_parser_symbolic_uint64>:
    9b5c:	push	{r4, r5, r6, sl, fp, lr}
    9b60:	add	fp, sp, #16
    9b64:	sub	sp, sp, #96	; 0x60
    9b68:	ldr	ip, [fp, #8]
    9b6c:	str	r0, [fp, #-24]	; 0xffffffe8
    9b70:	str	r1, [fp, #-28]	; 0xffffffe4
    9b74:	str	r2, [fp, #-32]	; 0xffffffe0
    9b78:	str	r3, [fp, #-36]	; 0xffffffdc
    9b7c:	mov	r0, #0
    9b80:	str	r0, [sp, #60]	; 0x3c
    9b84:	str	r0, [sp, #56]	; 0x38
    9b88:	str	r0, [sp, #36]	; 0x24
    9b8c:	ldr	r1, [fp, #8]
    9b90:	str	r0, [r1, #4]
    9b94:	str	r0, [r1]
    9b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9b9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9ba0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9ba4:	str	ip, [sp, #32]
    9ba8:	bl	b780 <flatcc_json_parser_constant_start>
    9bac:	str	r0, [fp, #-28]	; 0xffffffe4
    9bb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9bb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9bb8:	cmp	r0, r1
    9bbc:	bne	9bcc <flatcc_json_parser_symbolic_uint64+0x70>
    9bc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9bc4:	str	r0, [fp, #-20]	; 0xffffffec
    9bc8:	b	9d90 <flatcc_json_parser_symbolic_uint64+0x234>
    9bcc:	b	9bd0 <flatcc_json_parser_symbolic_uint64+0x74>
    9bd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9bd4:	str	r0, [fp, #-40]	; 0xffffffd8
    9bd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9bdc:	ldr	r0, [r0]
    9be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9be4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9be8:	str	r2, [fp, #-44]	; 0xffffffd4
    9bec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9bf0:	str	r0, [sp, #28]
    9bf4:	mov	r0, r1
    9bf8:	mov	r1, r2
    9bfc:	mov	r2, r3
    9c00:	add	r3, sp, #44	; 0x2c
    9c04:	add	ip, sp, #48	; 0x30
    9c08:	str	ip, [sp]
    9c0c:	add	ip, sp, #40	; 0x28
    9c10:	str	ip, [sp, #4]
    9c14:	ldr	ip, [sp, #28]
    9c18:	blx	ip
    9c1c:	str	r0, [fp, #-28]	; 0xffffffe4
    9c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9c24:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9c28:	cmp	r0, r1
    9c2c:	bne	9c3c <flatcc_json_parser_symbolic_uint64+0xe0>
    9c30:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9c34:	str	r0, [fp, #-20]	; 0xffffffec
    9c38:	b	9d90 <flatcc_json_parser_symbolic_uint64+0x234>
    9c3c:	b	9c40 <flatcc_json_parser_symbolic_uint64+0xe4>
    9c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9c48:	cmp	r0, r1
    9c4c:	movw	r0, #0
    9c50:	str	r0, [sp, #24]
    9c54:	bne	9c7c <flatcc_json_parser_symbolic_uint64+0x120>
    9c58:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9c5c:	add	r1, r0, #4
    9c60:	str	r1, [fp, #-40]	; 0xffffffd8
    9c64:	ldr	r0, [r0, #4]
    9c68:	movw	r1, #0
    9c6c:	cmp	r0, r1
    9c70:	movw	r0, #0
    9c74:	movne	r0, #1
    9c78:	str	r0, [sp, #24]
    9c7c:	ldr	r0, [sp, #24]
    9c80:	tst	r0, #1
    9c84:	bne	9bd8 <flatcc_json_parser_symbolic_uint64+0x7c>
    9c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9c8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9c90:	cmp	r0, r1
    9c94:	bne	9cb4 <flatcc_json_parser_symbolic_uint64+0x158>
    9c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9c9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9ca0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9ca4:	movw	r3, #23
    9ca8:	bl	0 <flatcc_json_parser_set_error>
    9cac:	str	r0, [fp, #-20]	; 0xffffffec
    9cb0:	b	9d90 <flatcc_json_parser_symbolic_uint64+0x234>
    9cb4:	ldr	r0, [sp, #36]	; 0x24
    9cb8:	add	r1, r0, #1
    9cbc:	str	r1, [sp, #36]	; 0x24
    9cc0:	cmp	r0, #0
    9cc4:	beq	9cf4 <flatcc_json_parser_symbolic_uint64+0x198>
    9cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9ccc:	ldr	r0, [r0, #12]
    9cd0:	cmp	r0, #0
    9cd4:	beq	9cf4 <flatcc_json_parser_symbolic_uint64+0x198>
    9cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9cdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9ce0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9ce4:	movw	r3, #14
    9ce8:	bl	0 <flatcc_json_parser_set_error>
    9cec:	str	r0, [fp, #-20]	; 0xffffffec
    9cf0:	b	9d90 <flatcc_json_parser_symbolic_uint64+0x234>
    9cf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9cf8:	mov	r1, r0
    9cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d04:	ldr	ip, [sp, #44]	; 0x2c
    9d08:	ldr	lr, [sp, #48]	; 0x30
    9d0c:	ldr	r4, [sp, #52]	; 0x34
    9d10:	mov	r5, sp
    9d14:	add	r6, sp, #56	; 0x38
    9d18:	str	r6, [r5, #8]
    9d1c:	str	r4, [r5, #4]
    9d20:	str	lr, [r5]
    9d24:	str	r0, [sp, #20]
    9d28:	mov	r0, r2
    9d2c:	str	r1, [sp, #16]
    9d30:	mov	r1, r3
    9d34:	ldr	r2, [sp, #20]
    9d38:	mov	r3, ip
    9d3c:	bl	10180 <flatcc_json_parser_coerce_uint64>
    9d40:	ldr	r1, [sp, #16]
    9d44:	cmp	r1, r0
    9d48:	bne	9d58 <flatcc_json_parser_symbolic_uint64+0x1fc>
    9d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d50:	str	r0, [fp, #-20]	; 0xffffffec
    9d54:	b	9d90 <flatcc_json_parser_symbolic_uint64+0x234>
    9d58:	ldr	r0, [sp, #56]	; 0x38
    9d5c:	ldr	r1, [sp, #60]	; 0x3c
    9d60:	ldr	r2, [fp, #8]
    9d64:	ldr	r3, [r2]
    9d68:	ldr	ip, [r2, #4]
    9d6c:	adds	r0, r3, r0
    9d70:	adc	r1, ip, r1
    9d74:	str	r0, [r2]
    9d78:	str	r1, [r2, #4]
    9d7c:	ldr	r0, [sp, #40]	; 0x28
    9d80:	cmp	r0, #0
    9d84:	bne	9bd0 <flatcc_json_parser_symbolic_uint64+0x74>
    9d88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9d8c:	str	r0, [fp, #-20]	; 0xffffffec
    9d90:	ldr	r0, [fp, #-20]	; 0xffffffec
    9d94:	sub	sp, fp, #16
    9d98:	pop	{r4, r5, r6, sl, fp, pc}

00009d9c <flatbuffers_uint64_write_to_pe>:
    9d9c:	push	{fp, lr}
    9da0:	mov	fp, sp
    9da4:	sub	sp, sp, #16
    9da8:	str	r0, [fp, #-4]
    9dac:	str	r3, [sp, #4]
    9db0:	str	r2, [sp]
    9db4:	ldr	r0, [sp]
    9db8:	ldr	r1, [sp, #4]
    9dbc:	bl	10200 <flatbuffers_uint64_cast_to_pe>
    9dc0:	ldr	r2, [fp, #-4]
    9dc4:	str	r1, [r2, #4]
    9dc8:	str	r0, [r2]
    9dcc:	mov	sp, fp
    9dd0:	pop	{fp, pc}
    9dd4:	nop	{0}

00009dd8 <flatcc_json_parser_symbolic_double>:
    9dd8:	push	{r4, r5, r6, sl, fp, lr}
    9ddc:	add	fp, sp, #16
    9de0:	sub	sp, sp, #96	; 0x60
    9de4:	ldr	ip, [fp, #8]
    9de8:	vldr	d16, [pc, #536]	; a008 <flatcc_json_parser_symbolic_double+0x230>
    9dec:	str	r0, [fp, #-24]	; 0xffffffe8
    9df0:	str	r1, [fp, #-28]	; 0xffffffe4
    9df4:	str	r2, [fp, #-32]	; 0xffffffe0
    9df8:	str	r3, [fp, #-36]	; 0xffffffdc
    9dfc:	vstr	d16, [sp, #56]	; 0x38
    9e00:	movw	r0, #0
    9e04:	str	r0, [sp, #36]	; 0x24
    9e08:	ldr	r0, [fp, #8]
    9e0c:	vstr	d16, [r0]
    9e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9e14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9e18:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e1c:	str	ip, [sp, #32]
    9e20:	bl	b780 <flatcc_json_parser_constant_start>
    9e24:	str	r0, [fp, #-28]	; 0xffffffe4
    9e28:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9e2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9e30:	cmp	r0, r1
    9e34:	bne	9e44 <flatcc_json_parser_symbolic_double+0x6c>
    9e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9e3c:	str	r0, [fp, #-20]	; 0xffffffec
    9e40:	b	9ff8 <flatcc_json_parser_symbolic_double+0x220>
    9e44:	b	9e48 <flatcc_json_parser_symbolic_double+0x70>
    9e48:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9e4c:	str	r0, [fp, #-40]	; 0xffffffd8
    9e50:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9e54:	ldr	r0, [r0]
    9e58:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9e5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9e60:	str	r2, [fp, #-44]	; 0xffffffd4
    9e64:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e68:	str	r0, [sp, #28]
    9e6c:	mov	r0, r1
    9e70:	mov	r1, r2
    9e74:	mov	r2, r3
    9e78:	add	r3, sp, #44	; 0x2c
    9e7c:	add	ip, sp, #48	; 0x30
    9e80:	str	ip, [sp]
    9e84:	add	ip, sp, #40	; 0x28
    9e88:	str	ip, [sp, #4]
    9e8c:	ldr	ip, [sp, #28]
    9e90:	blx	ip
    9e94:	str	r0, [fp, #-28]	; 0xffffffe4
    9e98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9e9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9ea0:	cmp	r0, r1
    9ea4:	bne	9eb4 <flatcc_json_parser_symbolic_double+0xdc>
    9ea8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9eac:	str	r0, [fp, #-20]	; 0xffffffec
    9eb0:	b	9ff8 <flatcc_json_parser_symbolic_double+0x220>
    9eb4:	b	9eb8 <flatcc_json_parser_symbolic_double+0xe0>
    9eb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9ebc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9ec0:	cmp	r0, r1
    9ec4:	movw	r0, #0
    9ec8:	str	r0, [sp, #24]
    9ecc:	bne	9ef4 <flatcc_json_parser_symbolic_double+0x11c>
    9ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9ed4:	add	r1, r0, #4
    9ed8:	str	r1, [fp, #-40]	; 0xffffffd8
    9edc:	ldr	r0, [r0, #4]
    9ee0:	movw	r1, #0
    9ee4:	cmp	r0, r1
    9ee8:	movw	r0, #0
    9eec:	movne	r0, #1
    9ef0:	str	r0, [sp, #24]
    9ef4:	ldr	r0, [sp, #24]
    9ef8:	tst	r0, #1
    9efc:	bne	9e50 <flatcc_json_parser_symbolic_double+0x78>
    9f00:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9f04:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9f08:	cmp	r0, r1
    9f0c:	bne	9f2c <flatcc_json_parser_symbolic_double+0x154>
    9f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9f18:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9f1c:	movw	r3, #23
    9f20:	bl	0 <flatcc_json_parser_set_error>
    9f24:	str	r0, [fp, #-20]	; 0xffffffec
    9f28:	b	9ff8 <flatcc_json_parser_symbolic_double+0x220>
    9f2c:	ldr	r0, [sp, #36]	; 0x24
    9f30:	add	r1, r0, #1
    9f34:	str	r1, [sp, #36]	; 0x24
    9f38:	cmp	r0, #0
    9f3c:	beq	9f6c <flatcc_json_parser_symbolic_double+0x194>
    9f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f44:	ldr	r0, [r0, #12]
    9f48:	cmp	r0, #0
    9f4c:	beq	9f6c <flatcc_json_parser_symbolic_double+0x194>
    9f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f54:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9f58:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9f5c:	movw	r3, #14
    9f60:	bl	0 <flatcc_json_parser_set_error>
    9f64:	str	r0, [fp, #-20]	; 0xffffffec
    9f68:	b	9ff8 <flatcc_json_parser_symbolic_double+0x220>
    9f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9f70:	mov	r1, r0
    9f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9f78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9f7c:	ldr	ip, [sp, #44]	; 0x2c
    9f80:	ldr	lr, [sp, #48]	; 0x30
    9f84:	ldr	r4, [sp, #52]	; 0x34
    9f88:	mov	r5, sp
    9f8c:	add	r6, sp, #56	; 0x38
    9f90:	str	r6, [r5, #8]
    9f94:	str	r4, [r5, #4]
    9f98:	str	lr, [r5]
    9f9c:	str	r0, [sp, #20]
    9fa0:	mov	r0, r2
    9fa4:	str	r1, [sp, #16]
    9fa8:	mov	r1, r3
    9fac:	ldr	r2, [sp, #20]
    9fb0:	mov	r3, ip
    9fb4:	bl	1021c <flatcc_json_parser_coerce_double>
    9fb8:	ldr	r1, [sp, #16]
    9fbc:	cmp	r1, r0
    9fc0:	bne	9fd0 <flatcc_json_parser_symbolic_double+0x1f8>
    9fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9fc8:	str	r0, [fp, #-20]	; 0xffffffec
    9fcc:	b	9ff8 <flatcc_json_parser_symbolic_double+0x220>
    9fd0:	vldr	d16, [sp, #56]	; 0x38
    9fd4:	ldr	r0, [fp, #8]
    9fd8:	vldr	d17, [r0]
    9fdc:	vadd.f64	d16, d17, d16
    9fe0:	vstr	d16, [r0]
    9fe4:	ldr	r0, [sp, #40]	; 0x28
    9fe8:	cmp	r0, #0
    9fec:	bne	9e48 <flatcc_json_parser_symbolic_double+0x70>
    9ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9ff4:	str	r0, [fp, #-20]	; 0xffffffec
    9ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
    9ffc:	sub	sp, fp, #16
    a000:	pop	{r4, r5, r6, sl, fp, pc}
    a004:	nop	{0}
	...

0000a010 <flatbuffers_double_write_to_pe>:
    a010:	push	{fp, lr}
    a014:	mov	fp, sp
    a018:	sub	sp, sp, #16
    a01c:	str	r0, [fp, #-4]
    a020:	vstr	d0, [sp]
    a024:	vldr	d0, [sp]
    a028:	bl	102a0 <flatbuffers_double_cast_to_pe>
    a02c:	ldr	r0, [fp, #-4]
    a030:	vstr	d0, [r0]
    a034:	mov	sp, fp
    a038:	pop	{fp, pc}

0000a03c <flatcc_json_parser_object_end>:
    a03c:	push	{fp, lr}
    a040:	mov	fp, sp
    a044:	sub	sp, sp, #24
    a048:	str	r0, [fp, #-8]
    a04c:	str	r1, [sp, #12]
    a050:	str	r2, [sp, #8]
    a054:	str	r3, [sp, #4]
    a058:	ldr	r0, [fp, #-8]
    a05c:	ldr	r1, [sp, #12]
    a060:	ldr	r2, [sp, #8]
    a064:	bl	a1a0 <flatcc_json_parser_space>
    a068:	str	r0, [sp, #12]
    a06c:	ldr	r0, [sp, #12]
    a070:	ldr	r1, [sp, #8]
    a074:	cmp	r0, r1
    a078:	bne	a094 <flatcc_json_parser_object_end+0x58>
    a07c:	ldr	r0, [sp, #4]
    a080:	movw	r1, #0
    a084:	str	r1, [r0]
    a088:	ldr	r0, [sp, #12]
    a08c:	str	r0, [fp, #-4]
    a090:	b	a194 <flatcc_json_parser_object_end+0x158>
    a094:	ldr	r0, [sp, #12]
    a098:	ldrb	r0, [r0]
    a09c:	cmp	r0, #44	; 0x2c
    a0a0:	beq	a0f8 <flatcc_json_parser_object_end+0xbc>
    a0a4:	ldr	r0, [sp, #4]
    a0a8:	movw	r1, #0
    a0ac:	str	r1, [r0]
    a0b0:	ldr	r0, [sp, #12]
    a0b4:	ldrb	r0, [r0]
    a0b8:	cmp	r0, #125	; 0x7d
    a0bc:	beq	a0dc <flatcc_json_parser_object_end+0xa0>
    a0c0:	ldr	r0, [fp, #-8]
    a0c4:	ldr	r1, [sp, #12]
    a0c8:	ldr	r2, [sp, #8]
    a0cc:	movw	r3, #10
    a0d0:	bl	0 <flatcc_json_parser_set_error>
    a0d4:	str	r0, [fp, #-4]
    a0d8:	b	a194 <flatcc_json_parser_object_end+0x158>
    a0dc:	ldr	r0, [fp, #-8]
    a0e0:	ldr	r1, [sp, #12]
    a0e4:	add	r1, r1, #1
    a0e8:	ldr	r2, [sp, #8]
    a0ec:	bl	a1a0 <flatcc_json_parser_space>
    a0f0:	str	r0, [fp, #-4]
    a0f4:	b	a194 <flatcc_json_parser_object_end+0x158>
    a0f8:	ldr	r0, [fp, #-8]
    a0fc:	ldr	r1, [sp, #12]
    a100:	add	r1, r1, #1
    a104:	ldr	r2, [sp, #8]
    a108:	bl	a1a0 <flatcc_json_parser_space>
    a10c:	str	r0, [sp, #12]
    a110:	ldr	r0, [sp, #12]
    a114:	ldr	r1, [sp, #8]
    a118:	cmp	r0, r1
    a11c:	bne	a148 <flatcc_json_parser_object_end+0x10c>
    a120:	ldr	r0, [sp, #4]
    a124:	movw	r1, #0
    a128:	str	r1, [r0]
    a12c:	ldr	r0, [fp, #-8]
    a130:	ldr	r1, [sp, #12]
    a134:	ldr	r2, [sp, #8]
    a138:	movw	r3, #10
    a13c:	bl	0 <flatcc_json_parser_set_error>
    a140:	str	r0, [fp, #-4]
    a144:	b	a194 <flatcc_json_parser_object_end+0x158>
    a148:	ldr	r0, [sp, #12]
    a14c:	ldrb	r0, [r0]
    a150:	cmp	r0, #125	; 0x7d
    a154:	bne	a180 <flatcc_json_parser_object_end+0x144>
    a158:	ldr	r0, [sp, #4]
    a15c:	movw	r1, #0
    a160:	str	r1, [r0]
    a164:	ldr	r0, [fp, #-8]
    a168:	ldr	r1, [sp, #12]
    a16c:	add	r1, r1, #1
    a170:	ldr	r2, [sp, #8]
    a174:	bl	a1a0 <flatcc_json_parser_space>
    a178:	str	r0, [fp, #-4]
    a17c:	b	a194 <flatcc_json_parser_object_end+0x158>
    a180:	ldr	r0, [sp, #4]
    a184:	movw	r1, #1
    a188:	str	r1, [r0]
    a18c:	ldr	r0, [sp, #12]
    a190:	str	r0, [fp, #-4]
    a194:	ldr	r0, [fp, #-4]
    a198:	mov	sp, fp
    a19c:	pop	{fp, pc}

0000a1a0 <flatcc_json_parser_space>:
    a1a0:	push	{fp, lr}
    a1a4:	mov	fp, sp
    a1a8:	sub	sp, sp, #16
    a1ac:	str	r0, [sp, #8]
    a1b0:	str	r1, [sp, #4]
    a1b4:	str	r2, [sp]
    a1b8:	ldr	r0, [sp]
    a1bc:	ldr	r1, [sp, #4]
    a1c0:	sub	r0, r0, r1
    a1c4:	cmp	r0, #1
    a1c8:	ble	a21c <flatcc_json_parser_space+0x7c>
    a1cc:	ldr	r0, [sp, #4]
    a1d0:	ldrb	r0, [r0]
    a1d4:	cmp	r0, #32
    a1d8:	ble	a1e8 <flatcc_json_parser_space+0x48>
    a1dc:	ldr	r0, [sp, #4]
    a1e0:	str	r0, [fp, #-4]
    a1e4:	b	a230 <flatcc_json_parser_space+0x90>
    a1e8:	ldr	r0, [sp, #4]
    a1ec:	ldrb	r0, [r0]
    a1f0:	cmp	r0, #32
    a1f4:	bne	a218 <flatcc_json_parser_space+0x78>
    a1f8:	ldr	r0, [sp, #4]
    a1fc:	ldrb	r0, [r0, #1]
    a200:	cmp	r0, #32
    a204:	ble	a218 <flatcc_json_parser_space+0x78>
    a208:	ldr	r0, [sp, #4]
    a20c:	add	r0, r0, #1
    a210:	str	r0, [fp, #-4]
    a214:	b	a230 <flatcc_json_parser_space+0x90>
    a218:	b	a21c <flatcc_json_parser_space+0x7c>
    a21c:	ldr	r0, [sp, #8]
    a220:	ldr	r1, [sp, #4]
    a224:	ldr	r2, [sp]
    a228:	bl	0 <flatcc_json_parser_space_ext>
    a22c:	str	r0, [fp, #-4]
    a230:	ldr	r0, [fp, #-4]
    a234:	mov	sp, fp
    a238:	pop	{fp, pc}

0000a23c <flatcc_json_parser_symbol_part_ext>:
    a23c:	sub	sp, sp, #24
    a240:	str	r0, [sp, #20]
    a244:	str	r1, [sp, #16]
    a248:	mov	r0, #0
    a24c:	str	r0, [sp, #12]
    a250:	str	r0, [sp, #8]
    a254:	ldr	r0, [sp, #16]
    a258:	ldr	r1, [sp, #20]
    a25c:	sub	r0, r0, r1
    a260:	str	r0, [sp, #4]
    a264:	ldr	r0, [sp, #4]
    a268:	cmp	r0, #8
    a26c:	bls	a278 <flatcc_json_parser_symbol_part_ext+0x3c>
    a270:	movw	r0, #8
    a274:	str	r0, [sp, #4]
    a278:	ldr	r0, [sp, #4]
    a27c:	cmp	r0, #8
    a280:	str	r0, [sp]
    a284:	bhi	a3a0 <flatcc_json_parser_symbol_part_ext+0x164>
    a288:	add	r0, pc, #8
    a28c:	ldr	r1, [sp]
    a290:	ldr	r0, [r0, r1, lsl #2]
    a294:	mov	pc, r0
    a298:	.word	0x0000a39c
    a29c:	.word	0x0000a380
    a2a0:	.word	0x0000a364
    a2a4:	.word	0x0000a348
    a2a8:	.word	0x0000a32c
    a2ac:	.word	0x0000a310
    a2b0:	.word	0x0000a2f4
    a2b4:	.word	0x0000a2d8
    a2b8:	.word	0x0000a2bc
    a2bc:	ldr	r0, [sp, #20]
    a2c0:	ldrb	r0, [r0, #7]
    a2c4:	ldr	r1, [sp, #8]
    a2c8:	ldr	r2, [sp, #12]
    a2cc:	orr	r0, r1, r0
    a2d0:	str	r2, [sp, #12]
    a2d4:	str	r0, [sp, #8]
    a2d8:	ldr	r0, [sp, #20]
    a2dc:	ldrb	r0, [r0, #6]
    a2e0:	ldr	r1, [sp, #8]
    a2e4:	ldr	r2, [sp, #12]
    a2e8:	orr	r0, r1, r0, lsl #8
    a2ec:	str	r2, [sp, #12]
    a2f0:	str	r0, [sp, #8]
    a2f4:	ldr	r0, [sp, #20]
    a2f8:	ldrb	r0, [r0, #5]
    a2fc:	ldr	r1, [sp, #8]
    a300:	ldr	r2, [sp, #12]
    a304:	orr	r0, r1, r0, lsl #16
    a308:	str	r2, [sp, #12]
    a30c:	str	r0, [sp, #8]
    a310:	ldr	r0, [sp, #20]
    a314:	ldrb	r0, [r0, #4]
    a318:	ldr	r1, [sp, #8]
    a31c:	ldr	r2, [sp, #12]
    a320:	orr	r0, r1, r0, lsl #24
    a324:	str	r2, [sp, #12]
    a328:	str	r0, [sp, #8]
    a32c:	ldr	r0, [sp, #20]
    a330:	ldrb	r0, [r0, #3]
    a334:	ldr	r1, [sp, #8]
    a338:	ldr	r2, [sp, #12]
    a33c:	orr	r0, r2, r0
    a340:	str	r1, [sp, #8]
    a344:	str	r0, [sp, #12]
    a348:	ldr	r0, [sp, #20]
    a34c:	ldrb	r0, [r0, #2]
    a350:	ldr	r1, [sp, #8]
    a354:	ldr	r2, [sp, #12]
    a358:	orr	r0, r2, r0, lsl #8
    a35c:	str	r1, [sp, #8]
    a360:	str	r0, [sp, #12]
    a364:	ldr	r0, [sp, #20]
    a368:	ldrb	r0, [r0, #1]
    a36c:	ldr	r1, [sp, #8]
    a370:	ldr	r2, [sp, #12]
    a374:	orr	r0, r2, r0, lsl #16
    a378:	str	r1, [sp, #8]
    a37c:	str	r0, [sp, #12]
    a380:	ldr	r0, [sp, #20]
    a384:	ldrb	r0, [r0]
    a388:	ldr	r1, [sp, #8]
    a38c:	ldr	r2, [sp, #12]
    a390:	orr	r0, r2, r0, lsl #24
    a394:	str	r1, [sp, #8]
    a398:	str	r0, [sp, #12]
    a39c:	b	a3a0 <flatcc_json_parser_symbol_part_ext+0x164>
    a3a0:	ldr	r0, [sp, #8]
    a3a4:	ldr	r1, [sp, #12]
    a3a8:	add	sp, sp, #24
    a3ac:	bx	lr

0000a3b0 <flatcc_json_parser_match_scope>:
    a3b0:	sub	sp, sp, #24
    a3b4:	str	r0, [sp, #16]
    a3b8:	str	r1, [sp, #12]
    a3bc:	str	r2, [sp, #8]
    a3c0:	str	r3, [sp, #4]
    a3c4:	ldr	r0, [sp, #12]
    a3c8:	str	r0, [sp]
    a3cc:	ldr	r0, [sp, #8]
    a3d0:	ldr	r1, [sp, #12]
    a3d4:	sub	r0, r0, r1
    a3d8:	ldr	r1, [sp, #4]
    a3dc:	cmp	r0, r1
    a3e0:	bgt	a3f0 <flatcc_json_parser_match_scope+0x40>
    a3e4:	ldr	r0, [sp]
    a3e8:	str	r0, [sp, #20]
    a3ec:	b	a428 <flatcc_json_parser_match_scope+0x78>
    a3f0:	ldr	r0, [sp, #12]
    a3f4:	ldr	r1, [sp, #4]
    a3f8:	add	r0, r0, r1
    a3fc:	ldrb	r0, [r0]
    a400:	cmp	r0, #46	; 0x2e
    a404:	beq	a414 <flatcc_json_parser_match_scope+0x64>
    a408:	ldr	r0, [sp]
    a40c:	str	r0, [sp, #20]
    a410:	b	a428 <flatcc_json_parser_match_scope+0x78>
    a414:	ldr	r0, [sp, #12]
    a418:	ldr	r1, [sp, #4]
    a41c:	add	r0, r0, r1
    a420:	add	r0, r0, #1
    a424:	str	r0, [sp, #20]
    a428:	ldr	r0, [sp, #20]
    a42c:	add	sp, sp, #24
    a430:	bx	lr

0000a434 <MyGame_Example_Foo_parse_json_enum>:
    a434:	push	{fp, lr}
    a438:	mov	fp, sp
    a43c:	sub	sp, sp, #64	; 0x40
    a440:	ldr	ip, [fp, #12]
    a444:	ldr	lr, [fp, #8]
    a448:	str	r0, [fp, #-8]
    a44c:	str	r1, [fp, #-12]
    a450:	str	r2, [fp, #-16]
    a454:	str	r3, [fp, #-20]	; 0xffffffec
    a458:	ldr	r0, [fp, #-12]
    a45c:	str	r0, [fp, #-24]	; 0xffffffe8
    a460:	ldr	r0, [fp, #-12]
    a464:	ldr	r1, [fp, #-16]
    a468:	str	ip, [sp, #20]
    a46c:	str	lr, [sp, #16]
    a470:	bl	4d8c <flatcc_json_parser_symbol_part>
    a474:	str	r1, [sp, #28]
    a478:	str	r0, [sp, #24]
    a47c:	ldr	r0, [sp, #24]
    a480:	ldr	r1, [sp, #28]
    a484:	movw	r2, #20577	; 0x5061
    a488:	movt	r2, #18798	; 0x496e
    a48c:	eor	r1, r1, r2
    a490:	movw	r2, #28276	; 0x6e74
    a494:	movt	r2, #29285	; 0x7265
    a498:	eor	r0, r0, r2
    a49c:	orr	r0, r0, r1
    a4a0:	cmp	r0, #0
    a4a4:	bne	a5c4 <MyGame_Example_Foo_parse_json_enum+0x190>
    a4a8:	b	a4ac <MyGame_Example_Foo_parse_json_enum+0x78>
    a4ac:	ldr	r0, [fp, #-12]
    a4b0:	add	r0, r0, #8
    a4b4:	str	r0, [fp, #-12]
    a4b8:	ldr	r0, [fp, #-12]
    a4bc:	ldr	r1, [fp, #-16]
    a4c0:	bl	4d8c <flatcc_json_parser_symbol_part>
    a4c4:	str	r1, [sp, #28]
    a4c8:	str	r0, [sp, #24]
    a4cc:	ldr	r0, [sp, #24]
    a4d0:	ldr	r1, [sp, #28]
    a4d4:	movw	r2, #28005	; 0x6d65
    a4d8:	movt	r2, #20065	; 0x4e61
    a4dc:	eor	r1, r1, r2
    a4e0:	movw	r2, #24931	; 0x6163
    a4e4:	movt	r2, #29552	; 0x7370
    a4e8:	eor	r0, r0, r2
    a4ec:	orr	r0, r0, r1
    a4f0:	cmp	r0, #0
    a4f4:	bne	a5b4 <MyGame_Example_Foo_parse_json_enum+0x180>
    a4f8:	b	a4fc <MyGame_Example_Foo_parse_json_enum+0xc8>
    a4fc:	ldr	r0, [fp, #-12]
    a500:	add	r0, r0, #8
    a504:	str	r0, [fp, #-12]
    a508:	ldr	r0, [fp, #-12]
    a50c:	ldr	r1, [fp, #-16]
    a510:	bl	4d8c <flatcc_json_parser_symbol_part>
    a514:	str	r1, [sp, #28]
    a518:	str	r0, [sp, #24]
    a51c:	ldrb	r0, [sp, #31]
    a520:	mov	r1, #1694498816	; 0x65000000
    a524:	teq	r1, r0, lsl #24
    a528:	bne	a5a4 <MyGame_Example_Foo_parse_json_enum+0x170>
    a52c:	b	a530 <MyGame_Example_Foo_parse_json_enum+0xfc>
    a530:	ldr	r0, [fp, #-8]
    a534:	ldr	r1, [fp, #-12]
    a538:	str	r1, [fp, #-28]	; 0xffffffe4
    a53c:	ldr	r2, [fp, #-16]
    a540:	ldr	r3, [fp, #12]
    a544:	movw	ip, #1
    a548:	str	r3, [sp, #12]
    a54c:	mov	r3, ip
    a550:	ldr	ip, [sp, #12]
    a554:	str	ip, [sp]
    a558:	bl	0 <flatcc_json_parser_match_constant>
    a55c:	str	r0, [fp, #-12]
    a560:	ldr	r0, [fp, #-12]
    a564:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a568:	cmp	r0, r1
    a56c:	beq	a594 <MyGame_Example_Foo_parse_json_enum+0x160>
    a570:	ldr	r0, [fp, #8]
    a574:	mov	r1, #0
    a578:	str	r1, [r0, #4]
    a57c:	mov	r1, #1
    a580:	str	r1, [r0]
    a584:	ldr	r0, [fp, #-20]	; 0xffffffec
    a588:	movw	r1, #0
    a58c:	str	r1, [r0]
    a590:	b	a5a0 <MyGame_Example_Foo_parse_json_enum+0x16c>
    a594:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a598:	str	r0, [fp, #-4]
    a59c:	b	a664 <MyGame_Example_Foo_parse_json_enum+0x230>
    a5a0:	b	a5b0 <MyGame_Example_Foo_parse_json_enum+0x17c>
    a5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5a8:	str	r0, [fp, #-4]
    a5ac:	b	a664 <MyGame_Example_Foo_parse_json_enum+0x230>
    a5b0:	b	a5c0 <MyGame_Example_Foo_parse_json_enum+0x18c>
    a5b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5b8:	str	r0, [fp, #-4]
    a5bc:	b	a664 <MyGame_Example_Foo_parse_json_enum+0x230>
    a5c0:	b	a65c <MyGame_Example_Foo_parse_json_enum+0x228>
    a5c4:	ldr	r0, [sp, #28]
    a5c8:	movw	r1, #20037	; 0x4e45
    a5cc:	movt	r1, #20047	; 0x4e4f
    a5d0:	teq	r0, r1
    a5d4:	bne	a64c <MyGame_Example_Foo_parse_json_enum+0x218>
    a5d8:	b	a5dc <MyGame_Example_Foo_parse_json_enum+0x1a8>
    a5dc:	ldr	r0, [fp, #-8]
    a5e0:	ldr	r1, [fp, #-12]
    a5e4:	str	r1, [fp, #-28]	; 0xffffffe4
    a5e8:	ldr	r2, [fp, #-16]
    a5ec:	ldr	r3, [fp, #12]
    a5f0:	movw	ip, #4
    a5f4:	str	r3, [sp, #8]
    a5f8:	mov	r3, ip
    a5fc:	ldr	ip, [sp, #8]
    a600:	str	ip, [sp]
    a604:	bl	0 <flatcc_json_parser_match_constant>
    a608:	str	r0, [fp, #-12]
    a60c:	ldr	r0, [fp, #-12]
    a610:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a614:	cmp	r0, r1
    a618:	beq	a63c <MyGame_Example_Foo_parse_json_enum+0x208>
    a61c:	ldr	r0, [fp, #8]
    a620:	mov	r1, #0
    a624:	str	r1, [r0, #4]
    a628:	str	r1, [r0]
    a62c:	ldr	r0, [fp, #-20]	; 0xffffffec
    a630:	movw	r1, #0
    a634:	str	r1, [r0]
    a638:	b	a648 <MyGame_Example_Foo_parse_json_enum+0x214>
    a63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a640:	str	r0, [fp, #-4]
    a644:	b	a664 <MyGame_Example_Foo_parse_json_enum+0x230>
    a648:	b	a658 <MyGame_Example_Foo_parse_json_enum+0x224>
    a64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a650:	str	r0, [fp, #-4]
    a654:	b	a664 <MyGame_Example_Foo_parse_json_enum+0x230>
    a658:	b	a65c <MyGame_Example_Foo_parse_json_enum+0x228>
    a65c:	ldr	r0, [fp, #-12]
    a660:	str	r0, [fp, #-4]
    a664:	ldr	r0, [fp, #-4]
    a668:	mov	sp, fp
    a66c:	pop	{fp, pc}

0000a670 <MyGame_Example_hex_enum_parse_json_enum>:
    a670:	push	{fp, lr}
    a674:	mov	fp, sp
    a678:	sub	sp, sp, #64	; 0x40
    a67c:	ldr	ip, [fp, #12]
    a680:	ldr	lr, [fp, #8]
    a684:	str	r0, [fp, #-8]
    a688:	str	r1, [fp, #-12]
    a68c:	str	r2, [fp, #-16]
    a690:	str	r3, [fp, #-20]	; 0xffffffec
    a694:	ldr	r0, [fp, #-12]
    a698:	str	r0, [fp, #-24]	; 0xffffffe8
    a69c:	ldr	r0, [fp, #-12]
    a6a0:	ldr	r1, [fp, #-16]
    a6a4:	str	ip, [sp, #20]
    a6a8:	str	lr, [sp, #16]
    a6ac:	bl	4d8c <flatcc_json_parser_symbol_part>
    a6b0:	str	r1, [sp, #28]
    a6b4:	str	r0, [sp, #24]
    a6b8:	ldr	r0, [sp, #28]
    a6bc:	movw	r1, #30769	; 0x7831
    a6c0:	movt	r1, #26725	; 0x6865
    a6c4:	cmp	r0, r1
    a6c8:	bhi	a76c <MyGame_Example_hex_enum_parse_json_enum+0xfc>
    a6cc:	b	a6d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    a6d0:	ldr	r0, [sp, #28]
    a6d4:	movw	r1, #30769	; 0x7831
    a6d8:	movt	r1, #26725	; 0x6865
    a6dc:	teq	r0, r1
    a6e0:	bne	a75c <MyGame_Example_hex_enum_parse_json_enum+0xec>
    a6e4:	b	a6e8 <MyGame_Example_hex_enum_parse_json_enum+0x78>
    a6e8:	ldr	r0, [fp, #-8]
    a6ec:	ldr	r1, [fp, #-12]
    a6f0:	str	r1, [fp, #-28]	; 0xffffffe4
    a6f4:	ldr	r2, [fp, #-16]
    a6f8:	ldr	r3, [fp, #12]
    a6fc:	movw	ip, #4
    a700:	str	r3, [sp, #12]
    a704:	mov	r3, ip
    a708:	ldr	ip, [sp, #12]
    a70c:	str	ip, [sp]
    a710:	bl	0 <flatcc_json_parser_match_constant>
    a714:	str	r0, [fp, #-12]
    a718:	ldr	r0, [fp, #-12]
    a71c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a720:	cmp	r0, r1
    a724:	beq	a74c <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    a728:	ldr	r0, [fp, #8]
    a72c:	mov	r1, #0
    a730:	str	r1, [r0, #4]
    a734:	mov	r1, #3
    a738:	str	r1, [r0]
    a73c:	ldr	r0, [fp, #-20]	; 0xffffffec
    a740:	movw	r1, #0
    a744:	str	r1, [r0]
    a748:	b	a758 <MyGame_Example_hex_enum_parse_json_enum+0xe8>
    a74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a750:	str	r0, [fp, #-4]
    a754:	b	a8bc <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a758:	b	a768 <MyGame_Example_hex_enum_parse_json_enum+0xf8>
    a75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a760:	str	r0, [fp, #-4]
    a764:	b	a8bc <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a768:	b	a8b4 <MyGame_Example_hex_enum_parse_json_enum+0x244>
    a76c:	ldrh	r0, [sp, #26]
    a770:	ldr	r1, [sp, #28]
    a774:	movw	r2, #26725	; 0x6865
    a778:	eor	r2, r2, r1, lsr #16
    a77c:	orr	r0, r0, r1, lsl #16
    a780:	movw	r1, #25959	; 0x6567
    a784:	movt	r1, #30830	; 0x786e
    a788:	eor	r0, r0, r1
    a78c:	orr	r0, r0, r2
    a790:	cmp	r0, #0
    a794:	bne	a810 <MyGame_Example_hex_enum_parse_json_enum+0x1a0>
    a798:	b	a79c <MyGame_Example_hex_enum_parse_json_enum+0x12c>
    a79c:	ldr	r0, [fp, #-8]
    a7a0:	ldr	r1, [fp, #-12]
    a7a4:	str	r1, [fp, #-28]	; 0xffffffe4
    a7a8:	ldr	r2, [fp, #-16]
    a7ac:	ldr	r3, [fp, #12]
    a7b0:	movw	ip, #6
    a7b4:	str	r3, [sp, #8]
    a7b8:	mov	r3, ip
    a7bc:	ldr	ip, [sp, #8]
    a7c0:	str	ip, [sp]
    a7c4:	bl	0 <flatcc_json_parser_match_constant>
    a7c8:	str	r0, [fp, #-12]
    a7cc:	ldr	r0, [fp, #-12]
    a7d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a7d4:	cmp	r0, r1
    a7d8:	beq	a800 <MyGame_Example_hex_enum_parse_json_enum+0x190>
    a7dc:	ldr	r0, [fp, #8]
    a7e0:	mvn	r1, #0
    a7e4:	str	r1, [r0, #4]
    a7e8:	mvn	r1, #1
    a7ec:	str	r1, [r0]
    a7f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a7f4:	movw	r1, #1
    a7f8:	str	r1, [r0]
    a7fc:	b	a80c <MyGame_Example_hex_enum_parse_json_enum+0x19c>
    a800:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a804:	str	r0, [fp, #-4]
    a808:	b	a8bc <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a80c:	b	a8b0 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    a810:	ldr	r0, [sp, #28]
    a814:	movw	r1, #30770	; 0x7832
    a818:	movt	r1, #26725	; 0x6865
    a81c:	teq	r0, r1
    a820:	bne	a8a0 <MyGame_Example_hex_enum_parse_json_enum+0x230>
    a824:	b	a828 <MyGame_Example_hex_enum_parse_json_enum+0x1b8>
    a828:	ldr	r0, [fp, #-8]
    a82c:	ldr	r1, [fp, #-12]
    a830:	str	r1, [fp, #-28]	; 0xffffffe4
    a834:	ldr	r2, [fp, #-16]
    a838:	ldr	r3, [fp, #12]
    a83c:	movw	ip, #4
    a840:	str	r3, [sp, #4]
    a844:	mov	r3, ip
    a848:	ldr	ip, [sp, #4]
    a84c:	str	ip, [sp]
    a850:	bl	0 <flatcc_json_parser_match_constant>
    a854:	str	r0, [fp, #-12]
    a858:	ldr	r0, [fp, #-12]
    a85c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a860:	cmp	r0, r1
    a864:	beq	a890 <MyGame_Example_hex_enum_parse_json_enum+0x220>
    a868:	ldr	r0, [fp, #8]
    a86c:	mov	r1, #0
    a870:	str	r1, [r0, #4]
    a874:	movw	r1, #48815	; 0xbeaf
    a878:	movt	r1, #32431	; 0x7eaf
    a87c:	str	r1, [r0]
    a880:	ldr	r0, [fp, #-20]	; 0xffffffec
    a884:	movw	r1, #0
    a888:	str	r1, [r0]
    a88c:	b	a89c <MyGame_Example_hex_enum_parse_json_enum+0x22c>
    a890:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a894:	str	r0, [fp, #-4]
    a898:	b	a8bc <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a89c:	b	a8ac <MyGame_Example_hex_enum_parse_json_enum+0x23c>
    a8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8a4:	str	r0, [fp, #-4]
    a8a8:	b	a8bc <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a8ac:	b	a8b0 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    a8b0:	b	a8b4 <MyGame_Example_hex_enum_parse_json_enum+0x244>
    a8b4:	ldr	r0, [fp, #-12]
    a8b8:	str	r0, [fp, #-4]
    a8bc:	ldr	r0, [fp, #-4]
    a8c0:	mov	sp, fp
    a8c4:	pop	{fp, pc}

0000a8c8 <MyGame_Example_int_enum_parse_json_enum>:
    a8c8:	push	{fp, lr}
    a8cc:	mov	fp, sp
    a8d0:	sub	sp, sp, #72	; 0x48
    a8d4:	ldr	ip, [fp, #12]
    a8d8:	ldr	lr, [fp, #8]
    a8dc:	str	r0, [fp, #-8]
    a8e0:	str	r1, [fp, #-12]
    a8e4:	str	r2, [fp, #-16]
    a8e8:	str	r3, [fp, #-20]	; 0xffffffec
    a8ec:	ldr	r0, [fp, #-12]
    a8f0:	str	r0, [fp, #-24]	; 0xffffffe8
    a8f4:	ldr	r0, [fp, #-12]
    a8f8:	ldr	r1, [fp, #-16]
    a8fc:	str	ip, [sp, #28]
    a900:	str	lr, [sp, #24]
    a904:	bl	4d8c <flatcc_json_parser_symbol_part>
    a908:	str	r1, [sp, #36]	; 0x24
    a90c:	str	r0, [sp, #32]
    a910:	ldr	r0, [sp, #36]	; 0x24
    a914:	movw	r1, #29745	; 0x7431
    a918:	movt	r1, #26990	; 0x696e
    a91c:	cmp	r0, r1
    a920:	bhi	a9c4 <MyGame_Example_int_enum_parse_json_enum+0xfc>
    a924:	b	a928 <MyGame_Example_int_enum_parse_json_enum+0x60>
    a928:	ldr	r0, [sp, #36]	; 0x24
    a92c:	movw	r1, #29745	; 0x7431
    a930:	movt	r1, #26990	; 0x696e
    a934:	teq	r0, r1
    a938:	bne	a9b4 <MyGame_Example_int_enum_parse_json_enum+0xec>
    a93c:	b	a940 <MyGame_Example_int_enum_parse_json_enum+0x78>
    a940:	ldr	r0, [fp, #-8]
    a944:	ldr	r1, [fp, #-12]
    a948:	str	r1, [fp, #-28]	; 0xffffffe4
    a94c:	ldr	r2, [fp, #-16]
    a950:	ldr	r3, [fp, #12]
    a954:	movw	ip, #4
    a958:	str	r3, [sp, #20]
    a95c:	mov	r3, ip
    a960:	ldr	ip, [sp, #20]
    a964:	str	ip, [sp]
    a968:	bl	0 <flatcc_json_parser_match_constant>
    a96c:	str	r0, [fp, #-12]
    a970:	ldr	r0, [fp, #-12]
    a974:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a978:	cmp	r0, r1
    a97c:	beq	a9a4 <MyGame_Example_int_enum_parse_json_enum+0xdc>
    a980:	ldr	r0, [fp, #8]
    a984:	mov	r1, #0
    a988:	str	r1, [r0, #4]
    a98c:	mov	r1, #2
    a990:	str	r1, [r0]
    a994:	ldr	r0, [fp, #-20]	; 0xffffffec
    a998:	movw	r1, #0
    a99c:	str	r1, [r0]
    a9a0:	b	a9b0 <MyGame_Example_int_enum_parse_json_enum+0xe8>
    a9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a9a8:	str	r0, [fp, #-4]
    a9ac:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    a9b0:	b	a9c0 <MyGame_Example_int_enum_parse_json_enum+0xf8>
    a9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a9b8:	str	r0, [fp, #-4]
    a9bc:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    a9c0:	b	abec <MyGame_Example_int_enum_parse_json_enum+0x324>
    a9c4:	ldr	r0, [sp, #32]
    a9c8:	ldr	r1, [sp, #36]	; 0x24
    a9cc:	movw	r2, #65535	; 0xffff
    a9d0:	movt	r2, #25958	; 0x6566
    a9d4:	subs	r0, r2, r0
    a9d8:	movw	r2, #29806	; 0x746e
    a9dc:	movt	r2, #26990	; 0x696e
    a9e0:	sbcs	r1, r2, r1
    a9e4:	bcc	aa88 <MyGame_Example_int_enum_parse_json_enum+0x1c0>
    a9e8:	b	a9ec <MyGame_Example_int_enum_parse_json_enum+0x124>
    a9ec:	ldr	r0, [sp, #36]	; 0x24
    a9f0:	movw	r1, #29746	; 0x7432
    a9f4:	movt	r1, #26990	; 0x696e
    a9f8:	teq	r0, r1
    a9fc:	bne	aa78 <MyGame_Example_int_enum_parse_json_enum+0x1b0>
    aa00:	b	aa04 <MyGame_Example_int_enum_parse_json_enum+0x13c>
    aa04:	ldr	r0, [fp, #-8]
    aa08:	ldr	r1, [fp, #-12]
    aa0c:	str	r1, [fp, #-28]	; 0xffffffe4
    aa10:	ldr	r2, [fp, #-16]
    aa14:	ldr	r3, [fp, #12]
    aa18:	movw	ip, #4
    aa1c:	str	r3, [sp, #16]
    aa20:	mov	r3, ip
    aa24:	ldr	ip, [sp, #16]
    aa28:	str	ip, [sp]
    aa2c:	bl	0 <flatcc_json_parser_match_constant>
    aa30:	str	r0, [fp, #-12]
    aa34:	ldr	r0, [fp, #-12]
    aa38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    aa3c:	cmp	r0, r1
    aa40:	beq	aa68 <MyGame_Example_int_enum_parse_json_enum+0x1a0>
    aa44:	ldr	r0, [fp, #8]
    aa48:	mov	r1, #0
    aa4c:	str	r1, [r0, #4]
    aa50:	mov	r1, #42	; 0x2a
    aa54:	str	r1, [r0]
    aa58:	ldr	r0, [fp, #-20]	; 0xffffffec
    aa5c:	movw	r1, #0
    aa60:	str	r1, [r0]
    aa64:	b	aa74 <MyGame_Example_int_enum_parse_json_enum+0x1ac>
    aa68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa6c:	str	r0, [fp, #-4]
    aa70:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    aa74:	b	aa84 <MyGame_Example_int_enum_parse_json_enum+0x1bc>
    aa78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa7c:	str	r0, [fp, #-4]
    aa80:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    aa84:	b	abe8 <MyGame_Example_int_enum_parse_json_enum+0x320>
    aa88:	ldr	r0, [sp, #32]
    aa8c:	ldr	r1, [sp, #36]	; 0x24
    aa90:	movw	r2, #28276	; 0x6e74
    aa94:	movt	r2, #105	; 0x69
    aa98:	eor	r2, r2, r1, lsr #8
    aa9c:	lsr	r0, r0, #8
    aaa0:	orr	r0, r0, r1, lsl #24
    aaa4:	movw	r1, #26418	; 0x6732
    aaa8:	movt	r1, #28261	; 0x6e65
    aaac:	eor	r0, r0, r1
    aab0:	orr	r0, r0, r2
    aab4:	cmp	r0, #0
    aab8:	bne	ab30 <MyGame_Example_int_enum_parse_json_enum+0x268>
    aabc:	b	aac0 <MyGame_Example_int_enum_parse_json_enum+0x1f8>
    aac0:	ldr	r0, [fp, #-8]
    aac4:	ldr	r1, [fp, #-12]
    aac8:	str	r1, [fp, #-28]	; 0xffffffe4
    aacc:	ldr	r2, [fp, #-16]
    aad0:	ldr	r3, [fp, #12]
    aad4:	movw	ip, #7
    aad8:	str	r3, [sp, #12]
    aadc:	mov	r3, ip
    aae0:	ldr	ip, [sp, #12]
    aae4:	str	ip, [sp]
    aae8:	bl	0 <flatcc_json_parser_match_constant>
    aaec:	str	r0, [fp, #-12]
    aaf0:	ldr	r0, [fp, #-12]
    aaf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    aaf8:	cmp	r0, r1
    aafc:	beq	ab20 <MyGame_Example_int_enum_parse_json_enum+0x258>
    ab00:	ldr	r0, [fp, #8]
    ab04:	mvn	r1, #0
    ab08:	str	r1, [r0, #4]
    ab0c:	str	r1, [r0]
    ab10:	ldr	r0, [fp, #-20]	; 0xffffffec
    ab14:	movw	r1, #1
    ab18:	str	r1, [r0]
    ab1c:	b	ab2c <MyGame_Example_int_enum_parse_json_enum+0x264>
    ab20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab24:	str	r0, [fp, #-4]
    ab28:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    ab2c:	b	abe4 <MyGame_Example_int_enum_parse_json_enum+0x31c>
    ab30:	ldrh	r0, [sp, #34]	; 0x22
    ab34:	ldr	r1, [sp, #36]	; 0x24
    ab38:	movw	r2, #26990	; 0x696e
    ab3c:	eor	r2, r2, r1, lsr #16
    ab40:	orr	r0, r0, r1, lsl #16
    ab44:	movw	r1, #25959	; 0x6567
    ab48:	movt	r1, #29806	; 0x746e
    ab4c:	eor	r0, r0, r1
    ab50:	orr	r0, r0, r2
    ab54:	cmp	r0, #0
    ab58:	bne	abd4 <MyGame_Example_int_enum_parse_json_enum+0x30c>
    ab5c:	b	ab60 <MyGame_Example_int_enum_parse_json_enum+0x298>
    ab60:	ldr	r0, [fp, #-8]
    ab64:	ldr	r1, [fp, #-12]
    ab68:	str	r1, [fp, #-28]	; 0xffffffe4
    ab6c:	ldr	r2, [fp, #-16]
    ab70:	ldr	r3, [fp, #12]
    ab74:	movw	ip, #6
    ab78:	str	r3, [sp, #8]
    ab7c:	mov	r3, ip
    ab80:	ldr	ip, [sp, #8]
    ab84:	str	ip, [sp]
    ab88:	bl	0 <flatcc_json_parser_match_constant>
    ab8c:	str	r0, [fp, #-12]
    ab90:	ldr	r0, [fp, #-12]
    ab94:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ab98:	cmp	r0, r1
    ab9c:	beq	abc4 <MyGame_Example_int_enum_parse_json_enum+0x2fc>
    aba0:	ldr	r0, [fp, #8]
    aba4:	mvn	r1, #0
    aba8:	str	r1, [r0, #4]
    abac:	mvn	r1, #1
    abb0:	str	r1, [r0]
    abb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    abb8:	movw	r1, #1
    abbc:	str	r1, [r0]
    abc0:	b	abd0 <MyGame_Example_int_enum_parse_json_enum+0x308>
    abc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    abc8:	str	r0, [fp, #-4]
    abcc:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    abd0:	b	abe0 <MyGame_Example_int_enum_parse_json_enum+0x318>
    abd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    abd8:	str	r0, [fp, #-4]
    abdc:	b	abf4 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    abe0:	b	abe4 <MyGame_Example_int_enum_parse_json_enum+0x31c>
    abe4:	b	abe8 <MyGame_Example_int_enum_parse_json_enum+0x320>
    abe8:	b	abec <MyGame_Example_int_enum_parse_json_enum+0x324>
    abec:	ldr	r0, [fp, #-12]
    abf0:	str	r0, [fp, #-4]
    abf4:	ldr	r0, [fp, #-4]
    abf8:	mov	sp, fp
    abfc:	pop	{fp, pc}

0000ac00 <MyGame_Example_neg_enum_parse_json_enum>:
    ac00:	push	{fp, lr}
    ac04:	mov	fp, sp
    ac08:	sub	sp, sp, #64	; 0x40
    ac0c:	ldr	ip, [fp, #12]
    ac10:	ldr	lr, [fp, #8]
    ac14:	str	r0, [fp, #-8]
    ac18:	str	r1, [fp, #-12]
    ac1c:	str	r2, [fp, #-16]
    ac20:	str	r3, [fp, #-20]	; 0xffffffec
    ac24:	ldr	r0, [fp, #-12]
    ac28:	str	r0, [fp, #-24]	; 0xffffffe8
    ac2c:	ldr	r0, [fp, #-12]
    ac30:	ldr	r1, [fp, #-16]
    ac34:	str	ip, [sp, #20]
    ac38:	str	lr, [sp, #16]
    ac3c:	bl	4d8c <flatcc_json_parser_symbol_part>
    ac40:	str	r1, [sp, #28]
    ac44:	str	r0, [sp, #24]
    ac48:	ldr	r0, [sp, #28]
    ac4c:	movw	r1, #26417	; 0x6731
    ac50:	movt	r1, #28261	; 0x6e65
    ac54:	cmp	r0, r1
    ac58:	bhi	acfc <MyGame_Example_neg_enum_parse_json_enum+0xfc>
    ac5c:	b	ac60 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    ac60:	ldr	r0, [sp, #28]
    ac64:	movw	r1, #26417	; 0x6731
    ac68:	movt	r1, #28261	; 0x6e65
    ac6c:	teq	r0, r1
    ac70:	bne	acec <MyGame_Example_neg_enum_parse_json_enum+0xec>
    ac74:	b	ac78 <MyGame_Example_neg_enum_parse_json_enum+0x78>
    ac78:	ldr	r0, [fp, #-8]
    ac7c:	ldr	r1, [fp, #-12]
    ac80:	str	r1, [fp, #-28]	; 0xffffffe4
    ac84:	ldr	r2, [fp, #-16]
    ac88:	ldr	r3, [fp, #12]
    ac8c:	movw	ip, #4
    ac90:	str	r3, [sp, #12]
    ac94:	mov	r3, ip
    ac98:	ldr	ip, [sp, #12]
    ac9c:	str	ip, [sp]
    aca0:	bl	0 <flatcc_json_parser_match_constant>
    aca4:	str	r0, [fp, #-12]
    aca8:	ldr	r0, [fp, #-12]
    acac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    acb0:	cmp	r0, r1
    acb4:	beq	acdc <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    acb8:	ldr	r0, [fp, #8]
    acbc:	mvn	r1, #0
    acc0:	str	r1, [r0, #4]
    acc4:	mvn	r1, #11
    acc8:	str	r1, [r0]
    accc:	ldr	r0, [fp, #-20]	; 0xffffffec
    acd0:	movw	r1, #1
    acd4:	str	r1, [r0]
    acd8:	b	ace8 <MyGame_Example_neg_enum_parse_json_enum+0xe8>
    acdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ace0:	str	r0, [fp, #-4]
    ace4:	b	ae30 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    ace8:	b	acf8 <MyGame_Example_neg_enum_parse_json_enum+0xf8>
    acec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    acf0:	str	r0, [fp, #-4]
    acf4:	b	ae30 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    acf8:	b	ae28 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    acfc:	ldr	r0, [sp, #28]
    ad00:	movw	r1, #26419	; 0x6733
    ad04:	movt	r1, #28261	; 0x6e65
    ad08:	teq	r0, r1
    ad0c:	bne	ad88 <MyGame_Example_neg_enum_parse_json_enum+0x188>
    ad10:	b	ad14 <MyGame_Example_neg_enum_parse_json_enum+0x114>
    ad14:	ldr	r0, [fp, #-8]
    ad18:	ldr	r1, [fp, #-12]
    ad1c:	str	r1, [fp, #-28]	; 0xffffffe4
    ad20:	ldr	r2, [fp, #-16]
    ad24:	ldr	r3, [fp, #12]
    ad28:	movw	ip, #4
    ad2c:	str	r3, [sp, #8]
    ad30:	mov	r3, ip
    ad34:	ldr	ip, [sp, #8]
    ad38:	str	ip, [sp]
    ad3c:	bl	0 <flatcc_json_parser_match_constant>
    ad40:	str	r0, [fp, #-12]
    ad44:	ldr	r0, [fp, #-12]
    ad48:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ad4c:	cmp	r0, r1
    ad50:	beq	ad78 <MyGame_Example_neg_enum_parse_json_enum+0x178>
    ad54:	ldr	r0, [fp, #8]
    ad58:	mvn	r1, #0
    ad5c:	str	r1, [r0, #4]
    ad60:	mvn	r1, #9
    ad64:	str	r1, [r0]
    ad68:	ldr	r0, [fp, #-20]	; 0xffffffec
    ad6c:	movw	r1, #1
    ad70:	str	r1, [r0]
    ad74:	b	ad84 <MyGame_Example_neg_enum_parse_json_enum+0x184>
    ad78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ad7c:	str	r0, [fp, #-4]
    ad80:	b	ae30 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    ad84:	b	ae24 <MyGame_Example_neg_enum_parse_json_enum+0x224>
    ad88:	ldr	r0, [sp, #28]
    ad8c:	movw	r1, #26418	; 0x6732
    ad90:	movt	r1, #28261	; 0x6e65
    ad94:	teq	r0, r1
    ad98:	bne	ae14 <MyGame_Example_neg_enum_parse_json_enum+0x214>
    ad9c:	b	ada0 <MyGame_Example_neg_enum_parse_json_enum+0x1a0>
    ada0:	ldr	r0, [fp, #-8]
    ada4:	ldr	r1, [fp, #-12]
    ada8:	str	r1, [fp, #-28]	; 0xffffffe4
    adac:	ldr	r2, [fp, #-16]
    adb0:	ldr	r3, [fp, #12]
    adb4:	movw	ip, #4
    adb8:	str	r3, [sp, #4]
    adbc:	mov	r3, ip
    adc0:	ldr	ip, [sp, #4]
    adc4:	str	ip, [sp]
    adc8:	bl	0 <flatcc_json_parser_match_constant>
    adcc:	str	r0, [fp, #-12]
    add0:	ldr	r0, [fp, #-12]
    add4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    add8:	cmp	r0, r1
    addc:	beq	ae04 <MyGame_Example_neg_enum_parse_json_enum+0x204>
    ade0:	ldr	r0, [fp, #8]
    ade4:	mvn	r1, #0
    ade8:	str	r1, [r0, #4]
    adec:	mvn	r1, #10
    adf0:	str	r1, [r0]
    adf4:	ldr	r0, [fp, #-20]	; 0xffffffec
    adf8:	movw	r1, #1
    adfc:	str	r1, [r0]
    ae00:	b	ae10 <MyGame_Example_neg_enum_parse_json_enum+0x210>
    ae04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae08:	str	r0, [fp, #-4]
    ae0c:	b	ae30 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    ae10:	b	ae20 <MyGame_Example_neg_enum_parse_json_enum+0x220>
    ae14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae18:	str	r0, [fp, #-4]
    ae1c:	b	ae30 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    ae20:	b	ae24 <MyGame_Example_neg_enum_parse_json_enum+0x224>
    ae24:	b	ae28 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    ae28:	ldr	r0, [fp, #-12]
    ae2c:	str	r0, [fp, #-4]
    ae30:	ldr	r0, [fp, #-4]
    ae34:	mov	sp, fp
    ae38:	pop	{fp, pc}

0000ae3c <MyGame_Example_notemptyenum_parse_json_enum>:
    ae3c:	push	{fp, lr}
    ae40:	mov	fp, sp
    ae44:	sub	sp, sp, #56	; 0x38
    ae48:	ldr	ip, [fp, #12]
    ae4c:	ldr	lr, [fp, #8]
    ae50:	str	r0, [fp, #-8]
    ae54:	str	r1, [fp, #-12]
    ae58:	str	r2, [fp, #-16]
    ae5c:	str	r3, [fp, #-20]	; 0xffffffec
    ae60:	ldr	r0, [fp, #-12]
    ae64:	str	r0, [fp, #-24]	; 0xffffffe8
    ae68:	ldr	r0, [fp, #-12]
    ae6c:	ldr	r1, [fp, #-16]
    ae70:	str	ip, [sp, #12]
    ae74:	str	lr, [sp, #8]
    ae78:	bl	4d8c <flatcc_json_parser_symbol_part>
    ae7c:	str	r1, [sp, #20]
    ae80:	str	r0, [sp, #16]
    ae84:	ldrb	r0, [sp, #23]
    ae88:	mov	r1, #2013265920	; 0x78000000
    ae8c:	teq	r1, r0, lsl #24
    ae90:	bne	af08 <MyGame_Example_notemptyenum_parse_json_enum+0xcc>
    ae94:	b	ae98 <MyGame_Example_notemptyenum_parse_json_enum+0x5c>
    ae98:	ldr	r0, [fp, #-8]
    ae9c:	ldr	r1, [fp, #-12]
    aea0:	str	r1, [sp, #28]
    aea4:	ldr	r2, [fp, #-16]
    aea8:	ldr	r3, [fp, #12]
    aeac:	movw	ip, #1
    aeb0:	str	r3, [sp, #4]
    aeb4:	mov	r3, ip
    aeb8:	ldr	ip, [sp, #4]
    aebc:	str	ip, [sp]
    aec0:	bl	0 <flatcc_json_parser_match_constant>
    aec4:	str	r0, [fp, #-12]
    aec8:	ldr	r0, [fp, #-12]
    aecc:	ldr	r1, [sp, #28]
    aed0:	cmp	r0, r1
    aed4:	beq	aef8 <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    aed8:	ldr	r0, [fp, #8]
    aedc:	mov	r1, #0
    aee0:	str	r1, [r0, #4]
    aee4:	str	r1, [r0]
    aee8:	ldr	r0, [fp, #-20]	; 0xffffffec
    aeec:	movw	r1, #0
    aef0:	str	r1, [r0]
    aef4:	b	af04 <MyGame_Example_notemptyenum_parse_json_enum+0xc8>
    aef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aefc:	str	r0, [fp, #-4]
    af00:	b	af1c <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    af04:	b	af14 <MyGame_Example_notemptyenum_parse_json_enum+0xd8>
    af08:	ldr	r0, [fp, #-24]	; 0xffffffe8
    af0c:	str	r0, [fp, #-4]
    af10:	b	af1c <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    af14:	ldr	r0, [fp, #-12]
    af18:	str	r0, [fp, #-4]
    af1c:	ldr	r0, [fp, #-4]
    af20:	mov	sp, fp
    af24:	pop	{fp, pc}

0000af28 <Fantasy_Character_parse_json_enum>:
    af28:	push	{fp, lr}
    af2c:	mov	fp, sp
    af30:	sub	sp, sp, #80	; 0x50
    af34:	ldr	ip, [fp, #12]
    af38:	ldr	lr, [fp, #8]
    af3c:	str	r0, [fp, #-8]
    af40:	str	r1, [fp, #-12]
    af44:	str	r2, [fp, #-16]
    af48:	str	r3, [fp, #-20]	; 0xffffffec
    af4c:	ldr	r0, [fp, #-12]
    af50:	str	r0, [fp, #-24]	; 0xffffffe8
    af54:	ldr	r0, [fp, #-12]
    af58:	ldr	r1, [fp, #-16]
    af5c:	str	ip, [sp, #36]	; 0x24
    af60:	str	lr, [sp, #32]
    af64:	bl	4d8c <flatcc_json_parser_symbol_part>
    af68:	str	r1, [sp, #44]	; 0x2c
    af6c:	str	r0, [sp, #40]	; 0x28
    af70:	ldr	r0, [sp, #44]	; 0x2c
    af74:	movw	r1, #20036	; 0x4e44
    af78:	movt	r1, #20047	; 0x4e4f
    af7c:	cmp	r0, r1
    af80:	bhi	b1bc <Fantasy_Character_parse_json_enum+0x294>
    af84:	b	af88 <Fantasy_Character_parse_json_enum+0x60>
    af88:	ldr	r0, [sp, #40]	; 0x28
    af8c:	ldr	r1, [sp, #44]	; 0x2c
    af90:	movw	r2, #28159	; 0x6dff
    af94:	movt	r2, #18017	; 0x4661
    af98:	subs	r0, r2, r0
    af9c:	movw	r2, #28523	; 0x6f6b
    afa0:	movt	r2, #17007	; 0x426f
    afa4:	sbcs	r1, r2, r1
    afa8:	bcc	b05c <Fantasy_Character_parse_json_enum+0x134>
    afac:	b	afb0 <Fantasy_Character_parse_json_enum+0x88>
    afb0:	ldrb	r0, [sp, #43]	; 0x2b
    afb4:	ldr	r1, [sp, #44]	; 0x2c
    afb8:	movw	r2, #27756	; 0x6c6c
    afbc:	movt	r2, #16997	; 0x4265
    afc0:	eor	r1, r1, r2
    afc4:	eor	r0, r0, #101	; 0x65
    afc8:	orr	r0, r1, r0, lsl #24
    afcc:	cmp	r0, #0
    afd0:	bne	b04c <Fantasy_Character_parse_json_enum+0x124>
    afd4:	b	afd8 <Fantasy_Character_parse_json_enum+0xb0>
    afd8:	ldr	r0, [fp, #-8]
    afdc:	ldr	r1, [fp, #-12]
    afe0:	str	r1, [fp, #-28]	; 0xffffffe4
    afe4:	ldr	r2, [fp, #-16]
    afe8:	ldr	r3, [fp, #12]
    afec:	movw	ip, #5
    aff0:	str	r3, [sp, #28]
    aff4:	mov	r3, ip
    aff8:	ldr	ip, [sp, #28]
    affc:	str	ip, [sp]
    b000:	bl	0 <flatcc_json_parser_match_constant>
    b004:	str	r0, [fp, #-12]
    b008:	ldr	r0, [fp, #-12]
    b00c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b010:	cmp	r0, r1
    b014:	beq	b03c <Fantasy_Character_parse_json_enum+0x114>
    b018:	ldr	r0, [fp, #8]
    b01c:	mov	r1, #0
    b020:	str	r1, [r0, #4]
    b024:	mov	r1, #9
    b028:	str	r1, [r0]
    b02c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b030:	movw	r1, #0
    b034:	str	r1, [r0]
    b038:	b	b048 <Fantasy_Character_parse_json_enum+0x120>
    b03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b040:	str	r0, [fp, #-4]
    b044:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b048:	b	b058 <Fantasy_Character_parse_json_enum+0x130>
    b04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b050:	str	r0, [fp, #-4]
    b054:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b058:	b	b1b8 <Fantasy_Character_parse_json_enum+0x290>
    b05c:	ldrb	r0, [sp, #43]	; 0x2b
    b060:	ldr	r1, [sp, #44]	; 0x2c
    b064:	movw	r2, #19553	; 0x4c61
    b068:	movt	r2, #19829	; 0x4d75
    b06c:	eor	r1, r1, r2
    b070:	eor	r0, r0, #110	; 0x6e
    b074:	orr	r0, r1, r0, lsl #24
    b078:	cmp	r0, #0
    b07c:	bne	b0f8 <Fantasy_Character_parse_json_enum+0x1d0>
    b080:	b	b084 <Fantasy_Character_parse_json_enum+0x15c>
    b084:	ldr	r0, [fp, #-8]
    b088:	ldr	r1, [fp, #-12]
    b08c:	str	r1, [fp, #-28]	; 0xffffffe4
    b090:	ldr	r2, [fp, #-16]
    b094:	ldr	r3, [fp, #12]
    b098:	movw	ip, #5
    b09c:	str	r3, [sp, #24]
    b0a0:	mov	r3, ip
    b0a4:	ldr	ip, [sp, #24]
    b0a8:	str	ip, [sp]
    b0ac:	bl	0 <flatcc_json_parser_match_constant>
    b0b0:	str	r0, [fp, #-12]
    b0b4:	ldr	r0, [fp, #-12]
    b0b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b0bc:	cmp	r0, r1
    b0c0:	beq	b0e8 <Fantasy_Character_parse_json_enum+0x1c0>
    b0c4:	ldr	r0, [fp, #8]
    b0c8:	mov	r1, #0
    b0cc:	str	r1, [r0, #4]
    b0d0:	mov	r1, #2
    b0d4:	str	r1, [r0]
    b0d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b0dc:	movw	r1, #0
    b0e0:	str	r1, [r0]
    b0e4:	b	b0f4 <Fantasy_Character_parse_json_enum+0x1cc>
    b0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b0ec:	str	r0, [fp, #-4]
    b0f0:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b0f4:	b	b1b4 <Fantasy_Character_parse_json_enum+0x28c>
    b0f8:	ldr	r0, [sp, #40]	; 0x28
    b0fc:	ldr	r1, [sp, #44]	; 0x2c
    b100:	movw	r2, #28527	; 0x6f6f
    b104:	movt	r2, #66	; 0x42
    b108:	eor	r2, r2, r1, lsr #8
    b10c:	lsr	r0, r0, #8
    b110:	orr	r0, r0, r1, lsl #24
    b114:	movw	r1, #24942	; 0x616e
    b118:	movt	r1, #27462	; 0x6b46
    b11c:	eor	r0, r0, r1
    b120:	orr	r0, r0, r2
    b124:	cmp	r0, #0
    b128:	bne	b1a4 <Fantasy_Character_parse_json_enum+0x27c>
    b12c:	b	b130 <Fantasy_Character_parse_json_enum+0x208>
    b130:	ldr	r0, [fp, #-8]
    b134:	ldr	r1, [fp, #-12]
    b138:	str	r1, [fp, #-28]	; 0xffffffe4
    b13c:	ldr	r2, [fp, #-16]
    b140:	ldr	r3, [fp, #12]
    b144:	movw	ip, #7
    b148:	str	r3, [sp, #20]
    b14c:	mov	r3, ip
    b150:	ldr	ip, [sp, #20]
    b154:	str	ip, [sp]
    b158:	bl	0 <flatcc_json_parser_match_constant>
    b15c:	str	r0, [fp, #-12]
    b160:	ldr	r0, [fp, #-12]
    b164:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b168:	cmp	r0, r1
    b16c:	beq	b194 <Fantasy_Character_parse_json_enum+0x26c>
    b170:	ldr	r0, [fp, #8]
    b174:	mov	r1, #0
    b178:	str	r1, [r0, #4]
    b17c:	mov	r1, #10
    b180:	str	r1, [r0]
    b184:	ldr	r0, [fp, #-20]	; 0xffffffec
    b188:	movw	r1, #0
    b18c:	str	r1, [r0]
    b190:	b	b1a0 <Fantasy_Character_parse_json_enum+0x278>
    b194:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b198:	str	r0, [fp, #-4]
    b19c:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b1a0:	b	b1b0 <Fantasy_Character_parse_json_enum+0x288>
    b1a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b1a8:	str	r0, [fp, #-4]
    b1ac:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b1b0:	b	b1b4 <Fantasy_Character_parse_json_enum+0x28c>
    b1b4:	b	b1b8 <Fantasy_Character_parse_json_enum+0x290>
    b1b8:	b	b4b0 <Fantasy_Character_parse_json_enum+0x588>
    b1bc:	ldr	r0, [sp, #40]	; 0x28
    b1c0:	ldr	r1, [sp, #44]	; 0x2c
    b1c4:	mvn	r2, #-1912602624	; 0x8e000000
    b1c8:	subs	r0, r2, r0
    b1cc:	movw	r2, #26725	; 0x6865
    b1d0:	movt	r2, #20340	; 0x4f74
    b1d4:	sbcs	r1, r2, r1
    b1d8:	bcc	b278 <Fantasy_Character_parse_json_enum+0x350>
    b1dc:	b	b1e0 <Fantasy_Character_parse_json_enum+0x2b8>
    b1e0:	ldr	r0, [sp, #44]	; 0x2c
    b1e4:	movw	r1, #20037	; 0x4e45
    b1e8:	movt	r1, #20047	; 0x4e4f
    b1ec:	teq	r0, r1
    b1f0:	bne	b268 <Fantasy_Character_parse_json_enum+0x340>
    b1f4:	b	b1f8 <Fantasy_Character_parse_json_enum+0x2d0>
    b1f8:	ldr	r0, [fp, #-8]
    b1fc:	ldr	r1, [fp, #-12]
    b200:	str	r1, [fp, #-28]	; 0xffffffe4
    b204:	ldr	r2, [fp, #-16]
    b208:	ldr	r3, [fp, #12]
    b20c:	movw	ip, #4
    b210:	str	r3, [sp, #16]
    b214:	mov	r3, ip
    b218:	ldr	ip, [sp, #16]
    b21c:	str	ip, [sp]
    b220:	bl	0 <flatcc_json_parser_match_constant>
    b224:	str	r0, [fp, #-12]
    b228:	ldr	r0, [fp, #-12]
    b22c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b230:	cmp	r0, r1
    b234:	beq	b258 <Fantasy_Character_parse_json_enum+0x330>
    b238:	ldr	r0, [fp, #8]
    b23c:	mov	r1, #0
    b240:	str	r1, [r0, #4]
    b244:	str	r1, [r0]
    b248:	ldr	r0, [fp, #-20]	; 0xffffffec
    b24c:	movw	r1, #0
    b250:	str	r1, [r0]
    b254:	b	b264 <Fantasy_Character_parse_json_enum+0x33c>
    b258:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b25c:	str	r0, [fp, #-4]
    b260:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b264:	b	b274 <Fantasy_Character_parse_json_enum+0x34c>
    b268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b26c:	str	r0, [fp, #-4]
    b270:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b274:	b	b4ac <Fantasy_Character_parse_json_enum+0x584>
    b278:	ldr	r0, [sp, #40]	; 0x28
    b27c:	ldr	r1, [sp, #44]	; 0x2c
    b280:	movw	r2, #25963	; 0x656b
    b284:	movt	r2, #28282	; 0x6e7a
    b288:	subs	r0, r2, r0
    b28c:	movw	r2, #28789	; 0x7075
    b290:	movt	r2, #21089	; 0x5261
    b294:	sbcs	r1, r2, r1
    b298:	bcc	b34c <Fantasy_Character_parse_json_enum+0x424>
    b29c:	b	b2a0 <Fantasy_Character_parse_json_enum+0x378>
    b2a0:	ldrb	r0, [sp, #43]	; 0x2b
    b2a4:	ldr	r1, [sp, #44]	; 0x2c
    b2a8:	movw	r2, #26725	; 0x6865
    b2ac:	movt	r2, #20340	; 0x4f74
    b2b0:	eor	r1, r1, r2
    b2b4:	eor	r0, r0, #114	; 0x72
    b2b8:	orr	r0, r1, r0, lsl #24
    b2bc:	cmp	r0, #0
    b2c0:	bne	b33c <Fantasy_Character_parse_json_enum+0x414>
    b2c4:	b	b2c8 <Fantasy_Character_parse_json_enum+0x3a0>
    b2c8:	ldr	r0, [fp, #-8]
    b2cc:	ldr	r1, [fp, #-12]
    b2d0:	str	r1, [fp, #-28]	; 0xffffffe4
    b2d4:	ldr	r2, [fp, #-16]
    b2d8:	ldr	r3, [fp, #12]
    b2dc:	movw	ip, #5
    b2e0:	str	r3, [sp, #12]
    b2e4:	mov	r3, ip
    b2e8:	ldr	ip, [sp, #12]
    b2ec:	str	ip, [sp]
    b2f0:	bl	0 <flatcc_json_parser_match_constant>
    b2f4:	str	r0, [fp, #-12]
    b2f8:	ldr	r0, [fp, #-12]
    b2fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b300:	cmp	r0, r1
    b304:	beq	b32c <Fantasy_Character_parse_json_enum+0x404>
    b308:	ldr	r0, [fp, #8]
    b30c:	mov	r1, #0
    b310:	str	r1, [r0, #4]
    b314:	mov	r1, #11
    b318:	str	r1, [r0]
    b31c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b320:	movw	r1, #0
    b324:	str	r1, [r0]
    b328:	b	b338 <Fantasy_Character_parse_json_enum+0x410>
    b32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b330:	str	r0, [fp, #-4]
    b334:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b338:	b	b348 <Fantasy_Character_parse_json_enum+0x420>
    b33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b340:	str	r0, [fp, #-4]
    b344:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b348:	b	b4a8 <Fantasy_Character_parse_json_enum+0x580>
    b34c:	ldrh	r0, [sp, #42]	; 0x2a
    b350:	ldr	r1, [sp, #44]	; 0x2c
    b354:	movw	r2, #21870	; 0x556e
    b358:	eor	r2, r2, r1, lsr #16
    b35c:	orr	r0, r0, r1, lsl #16
    b360:	movw	r1, #25956	; 0x6564
    b364:	movt	r1, #30067	; 0x7573
    b368:	eor	r0, r0, r1
    b36c:	orr	r0, r0, r2
    b370:	cmp	r0, #0
    b374:	bne	b3f0 <Fantasy_Character_parse_json_enum+0x4c8>
    b378:	b	b37c <Fantasy_Character_parse_json_enum+0x454>
    b37c:	ldr	r0, [fp, #-8]
    b380:	ldr	r1, [fp, #-12]
    b384:	str	r1, [fp, #-28]	; 0xffffffe4
    b388:	ldr	r2, [fp, #-16]
    b38c:	ldr	r3, [fp, #12]
    b390:	movw	ip, #6
    b394:	str	r3, [sp, #8]
    b398:	mov	r3, ip
    b39c:	ldr	ip, [sp, #8]
    b3a0:	str	ip, [sp]
    b3a4:	bl	0 <flatcc_json_parser_match_constant>
    b3a8:	str	r0, [fp, #-12]
    b3ac:	ldr	r0, [fp, #-12]
    b3b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b3b4:	cmp	r0, r1
    b3b8:	beq	b3e0 <Fantasy_Character_parse_json_enum+0x4b8>
    b3bc:	ldr	r0, [fp, #8]
    b3c0:	mov	r1, #0
    b3c4:	str	r1, [r0, #4]
    b3c8:	mov	r1, #255	; 0xff
    b3cc:	str	r1, [r0]
    b3d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    b3d4:	movw	r1, #0
    b3d8:	str	r1, [r0]
    b3dc:	b	b3ec <Fantasy_Character_parse_json_enum+0x4c4>
    b3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3e4:	str	r0, [fp, #-4]
    b3e8:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b3ec:	b	b4a4 <Fantasy_Character_parse_json_enum+0x57c>
    b3f0:	ldr	r0, [sp, #40]	; 0x28
    b3f4:	ldr	r1, [sp, #44]	; 0x2c
    b3f8:	movw	r2, #28789	; 0x7075
    b3fc:	movt	r2, #21089	; 0x5261
    b400:	eor	r1, r1, r2
    b404:	movw	r2, #25964	; 0x656c
    b408:	movt	r2, #28282	; 0x6e7a
    b40c:	eor	r0, r0, r2
    b410:	orr	r0, r0, r1
    b414:	cmp	r0, #0
    b418:	bne	b494 <Fantasy_Character_parse_json_enum+0x56c>
    b41c:	b	b420 <Fantasy_Character_parse_json_enum+0x4f8>
    b420:	ldr	r0, [fp, #-8]
    b424:	ldr	r1, [fp, #-12]
    b428:	str	r1, [fp, #-28]	; 0xffffffe4
    b42c:	ldr	r2, [fp, #-16]
    b430:	ldr	r3, [fp, #12]
    b434:	movw	ip, #8
    b438:	str	r3, [sp, #4]
    b43c:	mov	r3, ip
    b440:	ldr	ip, [sp, #4]
    b444:	str	ip, [sp]
    b448:	bl	0 <flatcc_json_parser_match_constant>
    b44c:	str	r0, [fp, #-12]
    b450:	ldr	r0, [fp, #-12]
    b454:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b458:	cmp	r0, r1
    b45c:	beq	b484 <Fantasy_Character_parse_json_enum+0x55c>
    b460:	ldr	r0, [fp, #8]
    b464:	mov	r1, #0
    b468:	str	r1, [r0, #4]
    b46c:	mov	r1, #8
    b470:	str	r1, [r0]
    b474:	ldr	r0, [fp, #-20]	; 0xffffffec
    b478:	movw	r1, #0
    b47c:	str	r1, [r0]
    b480:	b	b490 <Fantasy_Character_parse_json_enum+0x568>
    b484:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b488:	str	r0, [fp, #-4]
    b48c:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b490:	b	b4a0 <Fantasy_Character_parse_json_enum+0x578>
    b494:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b498:	str	r0, [fp, #-4]
    b49c:	b	b4b8 <Fantasy_Character_parse_json_enum+0x590>
    b4a0:	b	b4a4 <Fantasy_Character_parse_json_enum+0x57c>
    b4a4:	b	b4a8 <Fantasy_Character_parse_json_enum+0x580>
    b4a8:	b	b4ac <Fantasy_Character_parse_json_enum+0x584>
    b4ac:	b	b4b0 <Fantasy_Character_parse_json_enum+0x588>
    b4b0:	ldr	r0, [fp, #-12]
    b4b4:	str	r0, [fp, #-4]
    b4b8:	ldr	r0, [fp, #-4]
    b4bc:	mov	sp, fp
    b4c0:	pop	{fp, pc}

0000b4c4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    b4c4:	push	{fp, lr}
    b4c8:	mov	fp, sp
    b4cc:	sub	sp, sp, #64	; 0x40
    b4d0:	ldr	ip, [fp, #12]
    b4d4:	ldr	lr, [fp, #8]
    b4d8:	str	r0, [fp, #-8]
    b4dc:	str	r1, [fp, #-12]
    b4e0:	str	r2, [fp, #-16]
    b4e4:	str	r3, [fp, #-20]	; 0xffffffec
    b4e8:	ldr	r0, [fp, #-12]
    b4ec:	str	r0, [fp, #-24]	; 0xffffffe8
    b4f0:	ldr	r0, [fp, #-12]
    b4f4:	ldr	r1, [fp, #-16]
    b4f8:	str	ip, [sp, #20]
    b4fc:	str	lr, [sp, #16]
    b500:	bl	4d8c <flatcc_json_parser_symbol_part>
    b504:	str	r1, [sp, #28]
    b508:	str	r0, [sp, #24]
    b50c:	ldr	r0, [sp, #28]
    b510:	bic	r0, r0, #255	; 0xff
    b514:	movw	r1, #28416	; 0x6f00
    b518:	movt	r1, #18031	; 0x466f
    b51c:	teq	r0, r1
    b520:	bne	b594 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd0>
    b524:	b	b528 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x64>
    b528:	ldr	r0, [fp, #-8]
    b52c:	ldr	r1, [fp, #-12]
    b530:	str	r1, [fp, #-28]	; 0xffffffe4
    b534:	ldr	r2, [fp, #-16]
    b538:	ldr	r3, [fp, #12]
    b53c:	movw	ip, #3
    b540:	str	r3, [sp, #12]
    b544:	mov	r3, ip
    b548:	ldr	ip, [sp, #12]
    b54c:	str	ip, [sp]
    b550:	bl	0 <flatcc_json_parser_match_constant>
    b554:	str	r0, [fp, #-12]
    b558:	ldr	r0, [fp, #-12]
    b55c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b560:	cmp	r0, r1
    b564:	beq	b58c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc8>
    b568:	ldr	r0, [fp, #8]
    b56c:	mov	r1, #0
    b570:	str	r1, [r0, #4]
    b574:	mov	r1, #17
    b578:	str	r1, [r0]
    b57c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b580:	movw	r1, #0
    b584:	str	r1, [r0]
    b588:	b	b590 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xcc>
    b58c:	b	b59c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    b590:	b	b598 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    b594:	b	b59c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    b598:	b	b694 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d0>
    b59c:	ldr	r0, [sp, #24]
    b5a0:	ldr	r1, [sp, #28]
    b5a4:	movw	r2, #25452	; 0x636c
    b5a8:	movt	r2, #18798	; 0x496e
    b5ac:	eor	r1, r1, r2
    b5b0:	movw	r2, #25942	; 0x6556
    b5b4:	movt	r2, #30052	; 0x7564
    b5b8:	eor	r0, r0, r2
    b5bc:	orr	r0, r0, r1
    b5c0:	cmp	r0, #0
    b5c4:	bne	b684 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1c0>
    b5c8:	b	b5cc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x108>
    b5cc:	ldr	r0, [fp, #-12]
    b5d0:	add	r0, r0, #8
    b5d4:	str	r0, [fp, #-12]
    b5d8:	ldr	r0, [fp, #-12]
    b5dc:	ldr	r1, [fp, #-16]
    b5e0:	bl	4d8c <flatcc_json_parser_symbol_part>
    b5e4:	str	r1, [sp, #28]
    b5e8:	str	r0, [sp, #24]
    b5ec:	ldrh	r0, [sp, #30]
    b5f0:	movw	r1, #0
    b5f4:	movt	r1, #24940	; 0x616c
    b5f8:	teq	r1, r0, lsl #16
    b5fc:	bne	b674 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b0>
    b600:	b	b604 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x140>
    b604:	ldr	r0, [fp, #-8]
    b608:	ldr	r1, [fp, #-12]
    b60c:	str	r1, [fp, #-28]	; 0xffffffe4
    b610:	ldr	r2, [fp, #-16]
    b614:	ldr	r3, [fp, #12]
    b618:	movw	ip, #2
    b61c:	str	r3, [sp, #8]
    b620:	mov	r3, ip
    b624:	ldr	ip, [sp, #8]
    b628:	str	ip, [sp]
    b62c:	bl	0 <flatcc_json_parser_match_constant>
    b630:	str	r0, [fp, #-12]
    b634:	ldr	r0, [fp, #-12]
    b638:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b63c:	cmp	r0, r1
    b640:	beq	b664 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a0>
    b644:	ldr	r0, [fp, #8]
    b648:	mov	r1, #0
    b64c:	str	r1, [r0, #4]
    b650:	str	r1, [r0]
    b654:	ldr	r0, [fp, #-20]	; 0xffffffec
    b658:	movw	r1, #0
    b65c:	str	r1, [r0]
    b660:	b	b670 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1ac>
    b664:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b668:	str	r0, [fp, #-4]
    b66c:	b	b69c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d8>
    b670:	b	b680 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1bc>
    b674:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b678:	str	r0, [fp, #-4]
    b67c:	b	b69c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d8>
    b680:	b	b690 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1cc>
    b684:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b688:	str	r0, [fp, #-4]
    b68c:	b	b69c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d8>
    b690:	b	b694 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d0>
    b694:	ldr	r0, [fp, #-12]
    b698:	str	r0, [fp, #-4]
    b69c:	ldr	r0, [fp, #-4]
    b6a0:	mov	sp, fp
    b6a4:	pop	{fp, pc}

0000b6a8 <flatcc_json_parser_coerce_int8>:
    b6a8:	push	{r4, sl, fp, lr}
    b6ac:	add	fp, sp, #8
    b6b0:	sub	sp, sp, #32
    b6b4:	ldr	ip, [fp, #12]
    b6b8:	ldr	lr, [fp, #8]
    b6bc:	ldr	r4, [fp, #16]
    b6c0:	str	r0, [fp, #-16]
    b6c4:	str	r1, [sp, #20]
    b6c8:	str	r2, [sp, #16]
    b6cc:	str	r3, [sp, #12]
    b6d0:	str	ip, [sp, #4]
    b6d4:	str	lr, [sp]
    b6d8:	ldr	r0, [sp, #12]
    b6dc:	cmp	r0, #0
    b6e0:	beq	b72c <flatcc_json_parser_coerce_int8+0x84>
    b6e4:	ldr	r0, [sp]
    b6e8:	ldr	r1, [sp, #4]
    b6ec:	subs	r0, r0, #129	; 0x81
    b6f0:	sbcs	r1, r1, #0
    b6f4:	bcc	b718 <flatcc_json_parser_coerce_int8+0x70>
    b6f8:	b	b6fc <flatcc_json_parser_coerce_int8+0x54>
    b6fc:	ldr	r0, [fp, #-16]
    b700:	ldr	r1, [sp, #20]
    b704:	ldr	r2, [sp, #16]
    b708:	movw	r3, #8
    b70c:	bl	0 <flatcc_json_parser_set_error>
    b710:	str	r0, [fp, #-12]
    b714:	b	b774 <flatcc_json_parser_coerce_int8+0xcc>
    b718:	ldr	r0, [sp]
    b71c:	rsb	r0, r0, #0
    b720:	ldr	r1, [fp, #16]
    b724:	strb	r0, [r1]
    b728:	b	b76c <flatcc_json_parser_coerce_int8+0xc4>
    b72c:	ldr	r0, [sp]
    b730:	ldr	r1, [sp, #4]
    b734:	subs	r0, r0, #128	; 0x80
    b738:	sbcs	r1, r1, #0
    b73c:	bcc	b760 <flatcc_json_parser_coerce_int8+0xb8>
    b740:	b	b744 <flatcc_json_parser_coerce_int8+0x9c>
    b744:	ldr	r0, [fp, #-16]
    b748:	ldr	r1, [sp, #20]
    b74c:	ldr	r2, [sp, #16]
    b750:	movw	r3, #7
    b754:	bl	0 <flatcc_json_parser_set_error>
    b758:	str	r0, [fp, #-12]
    b75c:	b	b774 <flatcc_json_parser_coerce_int8+0xcc>
    b760:	ldrb	r0, [sp]
    b764:	ldr	r1, [fp, #16]
    b768:	strb	r0, [r1]
    b76c:	ldr	r0, [sp, #20]
    b770:	str	r0, [fp, #-12]
    b774:	ldr	r0, [fp, #-12]
    b778:	sub	sp, fp, #8
    b77c:	pop	{r4, sl, fp, pc}

0000b780 <flatcc_json_parser_constant_start>:
    b780:	push	{fp, lr}
    b784:	mov	fp, sp
    b788:	sub	sp, sp, #16
    b78c:	str	r0, [fp, #-4]
    b790:	str	r1, [sp, #8]
    b794:	str	r2, [sp, #4]
    b798:	ldr	r0, [fp, #-4]
    b79c:	ldr	r1, [sp, #8]
    b7a0:	ldr	r2, [sp, #4]
    b7a4:	bl	4ce0 <flatcc_json_parser_symbol_start>
    b7a8:	str	r0, [sp, #8]
    b7ac:	ldr	r0, [fp, #-4]
    b7b0:	ldr	r0, [r0, #12]
    b7b4:	cmp	r0, #0
    b7b8:	bne	b7d0 <flatcc_json_parser_constant_start+0x50>
    b7bc:	ldr	r0, [fp, #-4]
    b7c0:	ldr	r1, [sp, #8]
    b7c4:	ldr	r2, [sp, #4]
    b7c8:	bl	a1a0 <flatcc_json_parser_space>
    b7cc:	str	r0, [sp, #8]
    b7d0:	ldr	r0, [sp, #8]
    b7d4:	mov	sp, fp
    b7d8:	pop	{fp, pc}

0000b7dc <flatbuffers_int8_cast_to_pe>:
    b7dc:	sub	sp, sp, #4
    b7e0:	strb	r0, [sp, #3]
    b7e4:	ldrsb	r0, [sp, #3]
    b7e8:	add	sp, sp, #4
    b7ec:	bx	lr

0000b7f0 <flatcc_json_parser_coerce_uint8>:
    b7f0:	push	{r4, sl, fp, lr}
    b7f4:	add	fp, sp, #8
    b7f8:	sub	sp, sp, #32
    b7fc:	ldr	ip, [fp, #12]
    b800:	ldr	lr, [fp, #8]
    b804:	ldr	r4, [fp, #16]
    b808:	str	r0, [fp, #-16]
    b80c:	str	r1, [sp, #20]
    b810:	str	r2, [sp, #16]
    b814:	str	r3, [sp, #12]
    b818:	str	ip, [sp, #4]
    b81c:	str	lr, [sp]
    b820:	ldr	r0, [sp, #12]
    b824:	cmp	r0, #0
    b828:	beq	b848 <flatcc_json_parser_coerce_uint8+0x58>
    b82c:	ldr	r0, [fp, #-16]
    b830:	ldr	r1, [sp, #20]
    b834:	ldr	r2, [sp, #16]
    b838:	movw	r3, #8
    b83c:	bl	0 <flatcc_json_parser_set_error>
    b840:	str	r0, [fp, #-12]
    b844:	b	b890 <flatcc_json_parser_coerce_uint8+0xa0>
    b848:	ldr	r0, [sp]
    b84c:	ldr	r1, [sp, #4]
    b850:	subs	r0, r0, #256	; 0x100
    b854:	sbcs	r1, r1, #0
    b858:	bcc	b87c <flatcc_json_parser_coerce_uint8+0x8c>
    b85c:	b	b860 <flatcc_json_parser_coerce_uint8+0x70>
    b860:	ldr	r0, [fp, #-16]
    b864:	ldr	r1, [sp, #20]
    b868:	ldr	r2, [sp, #16]
    b86c:	movw	r3, #7
    b870:	bl	0 <flatcc_json_parser_set_error>
    b874:	str	r0, [fp, #-12]
    b878:	b	b890 <flatcc_json_parser_coerce_uint8+0xa0>
    b87c:	ldrb	r0, [sp]
    b880:	ldr	r1, [fp, #16]
    b884:	strb	r0, [r1]
    b888:	ldr	r0, [sp, #20]
    b88c:	str	r0, [fp, #-12]
    b890:	ldr	r0, [fp, #-12]
    b894:	sub	sp, fp, #8
    b898:	pop	{r4, sl, fp, pc}

0000b89c <flatbuffers_uint8_cast_to_pe>:
    b89c:	sub	sp, sp, #4
    b8a0:	strb	r0, [sp, #3]
    b8a4:	ldrb	r0, [sp, #3]
    b8a8:	add	sp, sp, #4
    b8ac:	bx	lr

0000b8b0 <flatcc_json_parser_coerce_int16>:
    b8b0:	push	{r4, sl, fp, lr}
    b8b4:	add	fp, sp, #8
    b8b8:	sub	sp, sp, #32
    b8bc:	ldr	ip, [fp, #12]
    b8c0:	ldr	lr, [fp, #8]
    b8c4:	ldr	r4, [fp, #16]
    b8c8:	str	r0, [fp, #-16]
    b8cc:	str	r1, [sp, #20]
    b8d0:	str	r2, [sp, #16]
    b8d4:	str	r3, [sp, #12]
    b8d8:	str	ip, [sp, #4]
    b8dc:	str	lr, [sp]
    b8e0:	ldr	r0, [sp, #12]
    b8e4:	cmp	r0, #0
    b8e8:	beq	b938 <flatcc_json_parser_coerce_int16+0x88>
    b8ec:	ldr	r0, [sp]
    b8f0:	ldr	r1, [sp, #4]
    b8f4:	movw	r2, #32769	; 0x8001
    b8f8:	subs	r0, r0, r2
    b8fc:	sbcs	r1, r1, #0
    b900:	bcc	b924 <flatcc_json_parser_coerce_int16+0x74>
    b904:	b	b908 <flatcc_json_parser_coerce_int16+0x58>
    b908:	ldr	r0, [fp, #-16]
    b90c:	ldr	r1, [sp, #20]
    b910:	ldr	r2, [sp, #16]
    b914:	movw	r3, #8
    b918:	bl	0 <flatcc_json_parser_set_error>
    b91c:	str	r0, [fp, #-12]
    b920:	b	b980 <flatcc_json_parser_coerce_int16+0xd0>
    b924:	ldr	r0, [sp]
    b928:	rsb	r0, r0, #0
    b92c:	ldr	r1, [fp, #16]
    b930:	strh	r0, [r1]
    b934:	b	b978 <flatcc_json_parser_coerce_int16+0xc8>
    b938:	ldr	r0, [sp]
    b93c:	ldr	r1, [sp, #4]
    b940:	subs	r0, r0, #32768	; 0x8000
    b944:	sbcs	r1, r1, #0
    b948:	bcc	b96c <flatcc_json_parser_coerce_int16+0xbc>
    b94c:	b	b950 <flatcc_json_parser_coerce_int16+0xa0>
    b950:	ldr	r0, [fp, #-16]
    b954:	ldr	r1, [sp, #20]
    b958:	ldr	r2, [sp, #16]
    b95c:	movw	r3, #7
    b960:	bl	0 <flatcc_json_parser_set_error>
    b964:	str	r0, [fp, #-12]
    b968:	b	b980 <flatcc_json_parser_coerce_int16+0xd0>
    b96c:	ldrh	r0, [sp]
    b970:	ldr	r1, [fp, #16]
    b974:	strh	r0, [r1]
    b978:	ldr	r0, [sp, #20]
    b97c:	str	r0, [fp, #-12]
    b980:	ldr	r0, [fp, #-12]
    b984:	sub	sp, fp, #8
    b988:	pop	{r4, sl, fp, pc}

0000b98c <flatbuffers_int16_cast_to_pe>:
    b98c:	sub	sp, sp, #4
    b990:	strh	r0, [sp, #2]
    b994:	ldrsh	r0, [sp, #2]
    b998:	add	sp, sp, #4
    b99c:	bx	lr

0000b9a0 <flatcc_json_parser_none>:
    b9a0:	push	{fp, lr}
    b9a4:	mov	fp, sp
    b9a8:	sub	sp, sp, #16
    b9ac:	str	r0, [sp, #8]
    b9b0:	str	r1, [sp, #4]
    b9b4:	str	r2, [sp]
    b9b8:	ldr	r0, [sp]
    b9bc:	ldr	r1, [sp, #4]
    b9c0:	sub	r0, r0, r1
    b9c4:	cmp	r0, #4
    b9c8:	blt	b9fc <flatcc_json_parser_none+0x5c>
    b9cc:	ldr	r0, [sp, #4]
    b9d0:	ldr	r0, [r0]
    b9d4:	movw	r1, #30062	; 0x756e
    b9d8:	movt	r1, #27756	; 0x6c6c
    b9dc:	subs	r0, r0, r1
    b9e0:	movwne	r0, #1
    b9e4:	cmp	r0, #0
    b9e8:	bne	b9fc <flatcc_json_parser_none+0x5c>
    b9ec:	ldr	r0, [sp, #4]
    b9f0:	add	r0, r0, #4
    b9f4:	str	r0, [fp, #-4]
    b9f8:	b	ba14 <flatcc_json_parser_none+0x74>
    b9fc:	ldr	r0, [sp, #8]
    ba00:	ldr	r1, [sp, #4]
    ba04:	ldr	r2, [sp]
    ba08:	movw	r3, #26
    ba0c:	bl	0 <flatcc_json_parser_set_error>
    ba10:	str	r0, [fp, #-4]
    ba14:	ldr	r0, [fp, #-4]
    ba18:	mov	sp, fp
    ba1c:	pop	{fp, pc}

0000ba20 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    ba20:	push	{fp, lr}
    ba24:	mov	fp, sp
    ba28:	sub	sp, sp, #64	; 0x40
    ba2c:	str	r0, [fp, #-8]
    ba30:	str	r1, [fp, #-12]
    ba34:	str	r2, [fp, #-16]
    ba38:	str	r3, [fp, #-20]	; 0xffffffec
    ba3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ba40:	movw	r1, #0
    ba44:	str	r1, [r0]
    ba48:	ldr	r0, [fp, #-8]
    ba4c:	ldr	r0, [r0]
    ba50:	movw	r1, #4
    ba54:	bl	0 <flatcc_builder_start_table>
    ba58:	cmp	r0, #0
    ba5c:	beq	ba64 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x44>
    ba60:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    ba64:	ldr	r0, [fp, #-8]
    ba68:	ldr	r1, [fp, #-12]
    ba6c:	ldr	r2, [fp, #-16]
    ba70:	sub	r3, fp, #24
    ba74:	bl	4bfc <flatcc_json_parser_object_start>
    ba78:	str	r0, [fp, #-12]
    ba7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ba80:	cmp	r0, #0
    ba84:	beq	c004 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    ba88:	ldr	r0, [fp, #-8]
    ba8c:	ldr	r1, [fp, #-12]
    ba90:	ldr	r2, [fp, #-16]
    ba94:	bl	4ce0 <flatcc_json_parser_symbol_start>
    ba98:	str	r0, [fp, #-12]
    ba9c:	ldr	r0, [fp, #-12]
    baa0:	ldr	r1, [fp, #-16]
    baa4:	bl	4d8c <flatcc_json_parser_symbol_part>
    baa8:	str	r1, [sp, #20]
    baac:	str	r0, [sp, #16]
    bab0:	ldrh	r0, [sp, #18]
    bab4:	ldr	r1, [sp, #20]
    bab8:	movw	r2, #25455	; 0x636f
    babc:	eor	r2, r2, r1, lsr #16
    bac0:	orr	r0, r0, r1, lsl #16
    bac4:	movw	r1, #29234	; 0x7232
    bac8:	movt	r1, #27759	; 0x6c6f
    bacc:	eor	r0, r0, r1
    bad0:	orr	r0, r0, r2
    bad4:	cmp	r0, #0
    bad8:	bne	bbfc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1dc>
    badc:	b	bae0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0xc0>
    bae0:	ldr	r0, [fp, #-8]
    bae4:	ldr	r1, [fp, #-12]
    bae8:	str	r1, [sp, #24]
    baec:	ldr	r2, [fp, #-16]
    baf0:	movw	r3, #6
    baf4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    baf8:	str	r0, [fp, #-12]
    bafc:	ldr	r0, [sp, #24]
    bb00:	ldr	r1, [fp, #-12]
    bb04:	cmp	r0, r1
    bb08:	beq	bbf4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d4>
    bb0c:	movw	r0, #0
    bb10:	strb	r0, [sp, #15]
    bb14:	ldr	r0, [fp, #-8]
    bb18:	ldr	r1, [fp, #-12]
    bb1c:	str	r1, [sp, #24]
    bb20:	ldr	r2, [fp, #-16]
    bb24:	add	r3, sp, #15
    bb28:	bl	62e0 <flatcc_json_parser_int8>
    bb2c:	str	r0, [fp, #-12]
    bb30:	ldr	r0, [sp, #24]
    bb34:	ldr	r1, [fp, #-12]
    bb38:	cmp	r0, r1
    bb3c:	bne	bb90 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    bb40:	ldr	r0, [fp, #-8]
    bb44:	ldr	r1, [fp, #-12]
    bb48:	str	r1, [sp, #24]
    bb4c:	ldr	r2, [fp, #-16]
    bb50:	movw	r3, #0
    bb54:	movt	r3, #0
    bb58:	add	ip, sp, #15
    bb5c:	str	ip, [sp]
    bb60:	bl	63bc <flatcc_json_parser_symbolic_int8>
    bb64:	str	r0, [fp, #-12]
    bb68:	ldr	r0, [fp, #-12]
    bb6c:	ldr	r1, [sp, #24]
    bb70:	cmp	r0, r1
    bb74:	beq	bb88 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x168>
    bb78:	ldr	r0, [fp, #-12]
    bb7c:	ldr	r1, [fp, #-16]
    bb80:	cmp	r0, r1
    bb84:	bne	bb8c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x16c>
    bb88:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    bb8c:	b	bb90 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    bb90:	ldrsb	r0, [sp, #15]
    bb94:	cmp	r0, #2
    bb98:	bne	bbb0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x190>
    bb9c:	ldr	r0, [fp, #-8]
    bba0:	ldr	r0, [r0, #8]
    bba4:	and	r0, r0, #2
    bba8:	cmp	r0, #0
    bbac:	beq	bbf0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d0>
    bbb0:	ldr	r0, [fp, #-8]
    bbb4:	ldr	r0, [r0]
    bbb8:	movw	r1, #1
    bbbc:	str	r1, [sp, #8]
    bbc0:	ldr	r2, [sp, #8]
    bbc4:	movw	r3, #1
    bbc8:	uxth	r3, r3
    bbcc:	bl	0 <flatcc_builder_table_add>
    bbd0:	str	r0, [fp, #-28]	; 0xffffffe4
    bbd4:	movw	r1, #0
    bbd8:	cmp	r0, r1
    bbdc:	bne	bbe4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1c4>
    bbe0:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    bbe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bbe8:	ldrsb	r1, [sp, #15]
    bbec:	bl	65e8 <flatbuffers_int8_write_to_pe>
    bbf0:	b	bbf8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d8>
    bbf4:	b	bd48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    bbf8:	b	bd44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x324>
    bbfc:	ldrb	r0, [sp, #19]
    bc00:	ldr	r1, [sp, #20]
    bc04:	movw	r2, #27759	; 0x6c6f
    bc08:	movt	r2, #25455	; 0x636f
    bc0c:	eor	r1, r1, r2
    bc10:	eor	r0, r0, #114	; 0x72
    bc14:	orr	r0, r1, r0, lsl #24
    bc18:	cmp	r0, #0
    bc1c:	bne	bd3c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x31c>
    bc20:	b	bc24 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x204>
    bc24:	ldr	r0, [fp, #-8]
    bc28:	ldr	r1, [fp, #-12]
    bc2c:	str	r1, [sp, #24]
    bc30:	ldr	r2, [fp, #-16]
    bc34:	movw	r3, #5
    bc38:	bl	4dc4 <flatcc_json_parser_match_symbol>
    bc3c:	str	r0, [fp, #-12]
    bc40:	ldr	r0, [sp, #24]
    bc44:	ldr	r1, [fp, #-12]
    bc48:	cmp	r0, r1
    bc4c:	beq	bd34 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x314>
    bc50:	movw	r0, #0
    bc54:	strb	r0, [sp, #14]
    bc58:	ldr	r0, [fp, #-8]
    bc5c:	ldr	r1, [fp, #-12]
    bc60:	str	r1, [sp, #24]
    bc64:	ldr	r2, [fp, #-16]
    bc68:	add	r3, sp, #14
    bc6c:	bl	62e0 <flatcc_json_parser_int8>
    bc70:	str	r0, [fp, #-12]
    bc74:	ldr	r0, [sp, #24]
    bc78:	ldr	r1, [fp, #-12]
    bc7c:	cmp	r0, r1
    bc80:	bne	bcd4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    bc84:	ldr	r0, [fp, #-8]
    bc88:	ldr	r1, [fp, #-12]
    bc8c:	str	r1, [sp, #24]
    bc90:	ldr	r2, [fp, #-16]
    bc94:	movw	r3, #0
    bc98:	movt	r3, #0
    bc9c:	add	ip, sp, #14
    bca0:	str	ip, [sp]
    bca4:	bl	63bc <flatcc_json_parser_symbolic_int8>
    bca8:	str	r0, [fp, #-12]
    bcac:	ldr	r0, [fp, #-12]
    bcb0:	ldr	r1, [sp, #24]
    bcb4:	cmp	r0, r1
    bcb8:	beq	bccc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2ac>
    bcbc:	ldr	r0, [fp, #-12]
    bcc0:	ldr	r1, [fp, #-16]
    bcc4:	cmp	r0, r1
    bcc8:	bne	bcd0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b0>
    bccc:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    bcd0:	b	bcd4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    bcd4:	ldrsb	r0, [sp, #14]
    bcd8:	cmp	r0, #2
    bcdc:	bne	bcf4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d4>
    bce0:	ldr	r0, [fp, #-8]
    bce4:	ldr	r0, [r0, #8]
    bce8:	and	r0, r0, #2
    bcec:	cmp	r0, #0
    bcf0:	beq	bd30 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x310>
    bcf4:	ldr	r0, [fp, #-8]
    bcf8:	ldr	r0, [r0]
    bcfc:	movw	r1, #0
    bd00:	movw	r2, #1
    bd04:	movw	r3, #1
    bd08:	uxth	r3, r3
    bd0c:	bl	0 <flatcc_builder_table_add>
    bd10:	str	r0, [fp, #-28]	; 0xffffffe4
    bd14:	movw	r1, #0
    bd18:	cmp	r0, r1
    bd1c:	bne	bd24 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x304>
    bd20:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    bd24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bd28:	ldrsb	r1, [sp, #14]
    bd2c:	bl	65e8 <flatbuffers_int8_write_to_pe>
    bd30:	b	bd38 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x318>
    bd34:	b	bd48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    bd38:	b	bd40 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x320>
    bd3c:	b	bd48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    bd40:	b	bd44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x324>
    bd44:	b	bfe8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c8>
    bd48:	ldr	r0, [sp, #20]
    bd4c:	bic	r0, r0, #255	; 0xff
    bd50:	movw	r1, #12800	; 0x3200
    bd54:	movt	r1, #30051	; 0x7563
    bd58:	teq	r0, r1
    bd5c:	bne	be8c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x46c>
    bd60:	b	bd64 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x344>
    bd64:	ldr	r0, [fp, #-8]
    bd68:	ldr	r1, [fp, #-12]
    bd6c:	str	r1, [sp, #24]
    bd70:	ldr	r2, [fp, #-16]
    bd74:	movw	r3, #3
    bd78:	bl	4dc4 <flatcc_json_parser_match_symbol>
    bd7c:	str	r0, [fp, #-12]
    bd80:	ldr	r0, [sp, #24]
    bd84:	ldr	r1, [fp, #-12]
    bd88:	cmp	r0, r1
    bd8c:	beq	be74 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x454>
    bd90:	movw	r0, #0
    bd94:	strb	r0, [sp, #13]
    bd98:	ldr	r0, [fp, #-8]
    bd9c:	ldr	r1, [fp, #-12]
    bda0:	str	r1, [sp, #24]
    bda4:	ldr	r2, [fp, #-16]
    bda8:	add	r3, sp, #13
    bdac:	bl	66f8 <flatcc_json_parser_uint8>
    bdb0:	str	r0, [fp, #-12]
    bdb4:	ldr	r0, [sp, #24]
    bdb8:	ldr	r1, [fp, #-12]
    bdbc:	cmp	r0, r1
    bdc0:	bne	be14 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f4>
    bdc4:	ldr	r0, [fp, #-8]
    bdc8:	ldr	r1, [fp, #-12]
    bdcc:	str	r1, [sp, #24]
    bdd0:	ldr	r2, [fp, #-16]
    bdd4:	movw	r3, #0
    bdd8:	movt	r3, #0
    bddc:	add	ip, sp, #13
    bde0:	str	ip, [sp]
    bde4:	bl	67d4 <flatcc_json_parser_symbolic_uint8>
    bde8:	str	r0, [fp, #-12]
    bdec:	ldr	r0, [fp, #-12]
    bdf0:	ldr	r1, [sp, #24]
    bdf4:	cmp	r0, r1
    bdf8:	beq	be0c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3ec>
    bdfc:	ldr	r0, [fp, #-12]
    be00:	ldr	r1, [fp, #-16]
    be04:	cmp	r0, r1
    be08:	bne	be10 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f0>
    be0c:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    be10:	b	be14 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f4>
    be14:	ldrb	r0, [sp, #13]
    be18:	cmp	r0, #2
    be1c:	bne	be34 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x414>
    be20:	ldr	r0, [fp, #-8]
    be24:	ldr	r0, [r0, #8]
    be28:	and	r0, r0, #2
    be2c:	cmp	r0, #0
    be30:	beq	be70 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x450>
    be34:	ldr	r0, [fp, #-8]
    be38:	ldr	r0, [r0]
    be3c:	movw	r1, #3
    be40:	movw	r2, #1
    be44:	movw	r3, #1
    be48:	uxth	r3, r3
    be4c:	bl	0 <flatcc_builder_table_add>
    be50:	str	r0, [fp, #-28]	; 0xffffffe4
    be54:	movw	r1, #0
    be58:	cmp	r0, r1
    be5c:	bne	be64 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x444>
    be60:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    be64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    be68:	ldrb	r1, [sp, #13]
    be6c:	bl	6a00 <flatbuffers_uint8_write_to_pe>
    be70:	b	be88 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x468>
    be74:	ldr	r0, [fp, #-8]
    be78:	ldr	r1, [fp, #-12]
    be7c:	ldr	r2, [fp, #-16]
    be80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be84:	str	r0, [fp, #-12]
    be88:	b	bfe4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c4>
    be8c:	ldrh	r0, [sp, #22]
    be90:	movw	r1, #0
    be94:	movt	r1, #30051	; 0x7563
    be98:	teq	r1, r0, lsl #16
    be9c:	bne	bfcc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5ac>
    bea0:	b	bea4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x484>
    bea4:	ldr	r0, [fp, #-8]
    bea8:	ldr	r1, [fp, #-12]
    beac:	str	r1, [sp, #24]
    beb0:	ldr	r2, [fp, #-16]
    beb4:	movw	r3, #2
    beb8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    bebc:	str	r0, [fp, #-12]
    bec0:	ldr	r0, [sp, #24]
    bec4:	ldr	r1, [fp, #-12]
    bec8:	cmp	r0, r1
    becc:	beq	bfb4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x594>
    bed0:	movw	r0, #0
    bed4:	strb	r0, [sp, #12]
    bed8:	ldr	r0, [fp, #-8]
    bedc:	ldr	r1, [fp, #-12]
    bee0:	str	r1, [sp, #24]
    bee4:	ldr	r2, [fp, #-16]
    bee8:	add	r3, sp, #12
    beec:	bl	66f8 <flatcc_json_parser_uint8>
    bef0:	str	r0, [fp, #-12]
    bef4:	ldr	r0, [sp, #24]
    bef8:	ldr	r1, [fp, #-12]
    befc:	cmp	r0, r1
    bf00:	bne	bf54 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x534>
    bf04:	ldr	r0, [fp, #-8]
    bf08:	ldr	r1, [fp, #-12]
    bf0c:	str	r1, [sp, #24]
    bf10:	ldr	r2, [fp, #-16]
    bf14:	movw	r3, #0
    bf18:	movt	r3, #0
    bf1c:	add	ip, sp, #12
    bf20:	str	ip, [sp]
    bf24:	bl	67d4 <flatcc_json_parser_symbolic_uint8>
    bf28:	str	r0, [fp, #-12]
    bf2c:	ldr	r0, [fp, #-12]
    bf30:	ldr	r1, [sp, #24]
    bf34:	cmp	r0, r1
    bf38:	beq	bf4c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x52c>
    bf3c:	ldr	r0, [fp, #-12]
    bf40:	ldr	r1, [fp, #-16]
    bf44:	cmp	r0, r1
    bf48:	bne	bf50 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    bf4c:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    bf50:	b	bf54 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x534>
    bf54:	ldrb	r0, [sp, #12]
    bf58:	cmp	r0, #2
    bf5c:	bne	bf74 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x554>
    bf60:	ldr	r0, [fp, #-8]
    bf64:	ldr	r0, [r0, #8]
    bf68:	and	r0, r0, #2
    bf6c:	cmp	r0, #0
    bf70:	beq	bfb0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x590>
    bf74:	ldr	r0, [fp, #-8]
    bf78:	ldr	r0, [r0]
    bf7c:	movw	r1, #2
    bf80:	movw	r2, #1
    bf84:	movw	r3, #1
    bf88:	uxth	r3, r3
    bf8c:	bl	0 <flatcc_builder_table_add>
    bf90:	str	r0, [fp, #-28]	; 0xffffffe4
    bf94:	movw	r1, #0
    bf98:	cmp	r0, r1
    bf9c:	bne	bfa4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x584>
    bfa0:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    bfa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bfa8:	ldrb	r1, [sp, #12]
    bfac:	bl	6a00 <flatbuffers_uint8_write_to_pe>
    bfb0:	b	bfc8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5a8>
    bfb4:	ldr	r0, [fp, #-8]
    bfb8:	ldr	r1, [fp, #-12]
    bfbc:	ldr	r2, [fp, #-16]
    bfc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bfc4:	str	r0, [fp, #-12]
    bfc8:	b	bfe0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c0>
    bfcc:	ldr	r0, [fp, #-8]
    bfd0:	ldr	r1, [fp, #-12]
    bfd4:	ldr	r2, [fp, #-16]
    bfd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bfdc:	str	r0, [fp, #-12]
    bfe0:	b	bfe4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c4>
    bfe4:	b	bfe8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c8>
    bfe8:	ldr	r0, [fp, #-8]
    bfec:	ldr	r1, [fp, #-12]
    bff0:	ldr	r2, [fp, #-16]
    bff4:	sub	r3, fp, #24
    bff8:	bl	a03c <flatcc_json_parser_object_end>
    bffc:	str	r0, [fp, #-12]
    c000:	b	ba7c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c>
    c004:	ldr	r0, [fp, #-8]
    c008:	ldr	r0, [r0, #24]
    c00c:	cmp	r0, #0
    c010:	beq	c018 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5f8>
    c014:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    c018:	ldr	r0, [fp, #-8]
    c01c:	ldr	r0, [r0]
    c020:	bl	0 <flatcc_builder_end_table>
    c024:	ldr	r1, [fp, #-20]	; 0xffffffec
    c028:	str	r0, [r1]
    c02c:	cmp	r0, #0
    c030:	bne	c038 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x618>
    c034:	b	c044 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    c038:	ldr	r0, [fp, #-12]
    c03c:	str	r0, [fp, #-4]
    c040:	b	c05c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x63c>
    c044:	ldr	r0, [fp, #-8]
    c048:	ldr	r1, [fp, #-12]
    c04c:	ldr	r2, [fp, #-16]
    c050:	movw	r3, #33	; 0x21
    c054:	bl	0 <flatcc_json_parser_set_error>
    c058:	str	r0, [fp, #-4]
    c05c:	ldr	r0, [fp, #-4]
    c060:	mov	sp, fp
    c064:	pop	{fp, pc}

0000c068 <MyGame_Example2_Monster_parse_json_table>:
    c068:	push	{fp, lr}
    c06c:	mov	fp, sp
    c070:	sub	sp, sp, #24
    c074:	str	r0, [fp, #-8]
    c078:	str	r1, [sp, #12]
    c07c:	str	r2, [sp, #8]
    c080:	str	r3, [sp, #4]
    c084:	ldr	r0, [sp, #4]
    c088:	movw	r1, #0
    c08c:	str	r1, [r0]
    c090:	ldr	r0, [fp, #-8]
    c094:	ldr	r0, [r0]
    c098:	bl	0 <flatcc_builder_start_table>
    c09c:	cmp	r0, #0
    c0a0:	beq	c0a8 <MyGame_Example2_Monster_parse_json_table+0x40>
    c0a4:	b	c150 <MyGame_Example2_Monster_parse_json_table+0xe8>
    c0a8:	ldr	r0, [fp, #-8]
    c0ac:	ldr	r1, [sp, #12]
    c0b0:	ldr	r2, [sp, #8]
    c0b4:	mov	r3, sp
    c0b8:	bl	4bfc <flatcc_json_parser_object_start>
    c0bc:	str	r0, [sp, #12]
    c0c0:	ldr	r0, [sp]
    c0c4:	cmp	r0, #0
    c0c8:	beq	c110 <MyGame_Example2_Monster_parse_json_table+0xa8>
    c0cc:	ldr	r0, [fp, #-8]
    c0d0:	ldr	r1, [sp, #12]
    c0d4:	ldr	r2, [sp, #8]
    c0d8:	bl	4ce0 <flatcc_json_parser_symbol_start>
    c0dc:	str	r0, [sp, #12]
    c0e0:	ldr	r0, [fp, #-8]
    c0e4:	ldr	r1, [sp, #12]
    c0e8:	ldr	r2, [sp, #8]
    c0ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c0f0:	str	r0, [sp, #12]
    c0f4:	ldr	r0, [fp, #-8]
    c0f8:	ldr	r1, [sp, #12]
    c0fc:	ldr	r2, [sp, #8]
    c100:	mov	r3, sp
    c104:	bl	a03c <flatcc_json_parser_object_end>
    c108:	str	r0, [sp, #12]
    c10c:	b	c0c0 <MyGame_Example2_Monster_parse_json_table+0x58>
    c110:	ldr	r0, [fp, #-8]
    c114:	ldr	r0, [r0, #24]
    c118:	cmp	r0, #0
    c11c:	beq	c124 <MyGame_Example2_Monster_parse_json_table+0xbc>
    c120:	b	c150 <MyGame_Example2_Monster_parse_json_table+0xe8>
    c124:	ldr	r0, [fp, #-8]
    c128:	ldr	r0, [r0]
    c12c:	bl	0 <flatcc_builder_end_table>
    c130:	ldr	r1, [sp, #4]
    c134:	str	r0, [r1]
    c138:	cmp	r0, #0
    c13c:	bne	c144 <MyGame_Example2_Monster_parse_json_table+0xdc>
    c140:	b	c150 <MyGame_Example2_Monster_parse_json_table+0xe8>
    c144:	ldr	r0, [sp, #12]
    c148:	str	r0, [fp, #-4]
    c14c:	b	c168 <MyGame_Example2_Monster_parse_json_table+0x100>
    c150:	ldr	r0, [fp, #-8]
    c154:	ldr	r1, [sp, #12]
    c158:	ldr	r2, [sp, #8]
    c15c:	movw	r3, #33	; 0x21
    c160:	bl	0 <flatcc_json_parser_set_error>
    c164:	str	r0, [fp, #-4]
    c168:	ldr	r0, [fp, #-4]
    c16c:	mov	sp, fp
    c170:	pop	{fp, pc}

0000c174 <MyGame_Example_Alt_parse_json_table>:
    c174:	push	{fp, lr}
    c178:	mov	fp, sp
    c17c:	sub	sp, sp, #88	; 0x58
    c180:	str	r0, [fp, #-8]
    c184:	str	r1, [fp, #-12]
    c188:	str	r2, [fp, #-16]
    c18c:	str	r3, [fp, #-20]	; 0xffffffec
    c190:	ldr	r0, [fp, #-20]	; 0xffffffec
    c194:	movw	r1, #0
    c198:	str	r1, [r0]
    c19c:	ldr	r0, [fp, #-8]
    c1a0:	ldr	r0, [r0]
    c1a4:	movw	r1, #4
    c1a8:	bl	0 <flatcc_builder_start_table>
    c1ac:	cmp	r0, #0
    c1b0:	beq	c1b8 <MyGame_Example_Alt_parse_json_table+0x44>
    c1b4:	b	c648 <MyGame_Example_Alt_parse_json_table+0x4d4>
    c1b8:	ldr	r0, [fp, #-16]
    c1bc:	ldr	r1, [fp, #-8]
    c1c0:	ldr	r2, [fp, #-12]
    c1c4:	ldr	r3, [fp, #-16]
    c1c8:	str	r0, [sp, #32]
    c1cc:	mov	r0, r1
    c1d0:	mov	r1, r2
    c1d4:	mov	r2, r3
    c1d8:	movw	r3, #1
    c1dc:	add	ip, sp, #36	; 0x24
    c1e0:	str	ip, [sp]
    c1e4:	bl	0 <flatcc_json_parser_prepare_unions>
    c1e8:	ldr	r1, [sp, #32]
    c1ec:	cmp	r1, r0
    c1f0:	bne	c1f8 <MyGame_Example_Alt_parse_json_table+0x84>
    c1f4:	b	c648 <MyGame_Example_Alt_parse_json_table+0x4d4>
    c1f8:	ldr	r0, [fp, #-8]
    c1fc:	ldr	r1, [fp, #-12]
    c200:	ldr	r2, [fp, #-16]
    c204:	sub	r3, fp, #24
    c208:	bl	4bfc <flatcc_json_parser_object_start>
    c20c:	str	r0, [fp, #-12]
    c210:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c214:	cmp	r0, #0
    c218:	beq	c5f0 <MyGame_Example_Alt_parse_json_table+0x47c>
    c21c:	ldr	r0, [fp, #-8]
    c220:	ldr	r1, [fp, #-12]
    c224:	ldr	r2, [fp, #-16]
    c228:	bl	4ce0 <flatcc_json_parser_symbol_start>
    c22c:	str	r0, [fp, #-12]
    c230:	ldr	r0, [fp, #-12]
    c234:	ldr	r1, [fp, #-16]
    c238:	bl	4d8c <flatcc_json_parser_symbol_part>
    c23c:	str	r1, [sp, #44]	; 0x2c
    c240:	str	r0, [sp, #40]	; 0x28
    c244:	ldr	r0, [sp, #40]	; 0x28
    c248:	ldr	r1, [sp, #44]	; 0x2c
    c24c:	movw	r2, #28281	; 0x6e79
    c250:	movt	r2, #28001	; 0x6d61
    c254:	eor	r1, r1, r2
    c258:	movw	r2, #31071	; 0x795f
    c25c:	movt	r2, #24942	; 0x616e
    c260:	eor	r0, r0, r2
    c264:	orr	r0, r0, r1
    c268:	cmp	r0, #0
    c26c:	bne	c368 <MyGame_Example_Alt_parse_json_table+0x1f4>
    c270:	b	c274 <MyGame_Example_Alt_parse_json_table+0x100>
    c274:	ldr	r0, [fp, #-12]
    c278:	add	r0, r0, #8
    c27c:	str	r0, [fp, #-12]
    c280:	ldr	r0, [fp, #-12]
    c284:	ldr	r1, [fp, #-16]
    c288:	bl	4d8c <flatcc_json_parser_symbol_part>
    c28c:	str	r1, [sp, #44]	; 0x2c
    c290:	str	r0, [sp, #40]	; 0x28
    c294:	ldr	r0, [sp, #44]	; 0x2c
    c298:	movw	r1, #28773	; 0x7065
    c29c:	movt	r1, #29817	; 0x7479
    c2a0:	teq	r0, r1
    c2a4:	bne	c350 <MyGame_Example_Alt_parse_json_table+0x1dc>
    c2a8:	b	c2ac <MyGame_Example_Alt_parse_json_table+0x138>
    c2ac:	ldr	r0, [fp, #-8]
    c2b0:	ldr	r1, [fp, #-12]
    c2b4:	str	r1, [fp, #-40]	; 0xffffffd8
    c2b8:	ldr	r2, [fp, #-16]
    c2bc:	movw	r3, #4
    c2c0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c2c4:	str	r0, [fp, #-12]
    c2c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c2cc:	ldr	r1, [fp, #-12]
    c2d0:	cmp	r0, r1
    c2d4:	beq	c338 <MyGame_Example_Alt_parse_json_table+0x1c4>
    c2d8:	ldr	r0, [fp, #-8]
    c2dc:	ldr	r1, [fp, #-12]
    c2e0:	ldr	r2, [fp, #-16]
    c2e4:	ldr	r3, [sp, #36]	; 0x24
    c2e8:	movw	ip, #0
    c2ec:	str	r3, [sp, #28]
    c2f0:	mov	r3, ip
    c2f4:	movw	ip, #3
    c2f8:	uxth	ip, ip
    c2fc:	str	ip, [sp]
    c300:	ldr	ip, [sp, #28]
    c304:	str	ip, [sp, #4]
    c308:	movw	lr, #0
    c30c:	movt	lr, #0
    c310:	str	lr, [sp, #8]
    c314:	movw	lr, #0
    c318:	movt	lr, #0
    c31c:	str	lr, [sp, #12]
    c320:	movw	lr, #0
    c324:	movt	lr, #0
    c328:	str	lr, [sp, #16]
    c32c:	bl	0 <flatcc_json_parser_union_type_vector>
    c330:	str	r0, [fp, #-12]
    c334:	b	c34c <MyGame_Example_Alt_parse_json_table+0x1d8>
    c338:	ldr	r0, [fp, #-8]
    c33c:	ldr	r1, [fp, #-12]
    c340:	ldr	r2, [fp, #-16]
    c344:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c348:	str	r0, [fp, #-12]
    c34c:	b	c364 <MyGame_Example_Alt_parse_json_table+0x1f0>
    c350:	ldr	r0, [fp, #-8]
    c354:	ldr	r1, [fp, #-12]
    c358:	ldr	r2, [fp, #-16]
    c35c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c360:	str	r0, [fp, #-12]
    c364:	b	c5d4 <MyGame_Example_Alt_parse_json_table+0x460>
    c368:	ldr	r0, [sp, #40]	; 0x28
    c36c:	ldr	r1, [sp, #44]	; 0x2c
    c370:	movw	r2, #24942	; 0x616e
    c374:	movt	r2, #109	; 0x6d
    c378:	eor	r2, r2, r1, lsr #8
    c37c:	lsr	r0, r0, #8
    c380:	orr	r0, r0, r1, lsl #24
    c384:	movw	r1, #28281	; 0x6e79
    c388:	movt	r1, #31073	; 0x7961
    c38c:	eor	r0, r0, r1
    c390:	orr	r0, r0, r2
    c394:	cmp	r0, #0
    c398:	bne	c41c <MyGame_Example_Alt_parse_json_table+0x2a8>
    c39c:	b	c3a0 <MyGame_Example_Alt_parse_json_table+0x22c>
    c3a0:	ldr	r0, [fp, #-8]
    c3a4:	ldr	r1, [fp, #-12]
    c3a8:	str	r1, [fp, #-40]	; 0xffffffd8
    c3ac:	ldr	r2, [fp, #-16]
    c3b0:	movw	r3, #7
    c3b4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c3b8:	str	r0, [fp, #-12]
    c3bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c3c0:	ldr	r1, [fp, #-12]
    c3c4:	cmp	r0, r1
    c3c8:	beq	c414 <MyGame_Example_Alt_parse_json_table+0x2a0>
    c3cc:	ldr	r0, [fp, #-8]
    c3d0:	ldr	r1, [fp, #-12]
    c3d4:	ldr	r2, [fp, #-16]
    c3d8:	ldr	r3, [sp, #36]	; 0x24
    c3dc:	movw	ip, #0
    c3e0:	str	r3, [sp, #24]
    c3e4:	mov	r3, ip
    c3e8:	movw	ip, #3
    c3ec:	uxth	ip, ip
    c3f0:	str	ip, [sp]
    c3f4:	ldr	ip, [sp, #24]
    c3f8:	str	ip, [sp, #4]
    c3fc:	movw	lr, #0
    c400:	movt	lr, #0
    c404:	str	lr, [sp, #8]
    c408:	bl	0 <flatcc_json_parser_union_vector>
    c40c:	str	r0, [fp, #-12]
    c410:	b	c418 <MyGame_Example_Alt_parse_json_table+0x2a4>
    c414:	b	c424 <MyGame_Example_Alt_parse_json_table+0x2b0>
    c418:	b	c420 <MyGame_Example_Alt_parse_json_table+0x2ac>
    c41c:	b	c424 <MyGame_Example_Alt_parse_json_table+0x2b0>
    c420:	b	c5d0 <MyGame_Example_Alt_parse_json_table+0x45c>
    c424:	ldrh	r0, [sp, #42]	; 0x2a
    c428:	ldr	r1, [sp, #44]	; 0x2c
    c42c:	movw	r2, #28786	; 0x7072
    c430:	eor	r2, r2, r1, lsr #16
    c434:	orr	r0, r0, r1, lsl #16
    c438:	movw	r1, #27000	; 0x6978
    c43c:	movt	r1, #25958	; 0x6566
    c440:	eor	r0, r0, r1
    c444:	orr	r0, r0, r2
    c448:	cmp	r0, #0
    c44c:	bne	c4f0 <MyGame_Example_Alt_parse_json_table+0x37c>
    c450:	b	c454 <MyGame_Example_Alt_parse_json_table+0x2e0>
    c454:	ldr	r0, [fp, #-8]
    c458:	ldr	r1, [fp, #-12]
    c45c:	str	r1, [fp, #-40]	; 0xffffffd8
    c460:	ldr	r2, [fp, #-16]
    c464:	movw	r3, #6
    c468:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c46c:	str	r0, [fp, #-12]
    c470:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c474:	ldr	r1, [fp, #-12]
    c478:	cmp	r0, r1
    c47c:	beq	c4d8 <MyGame_Example_Alt_parse_json_table+0x364>
    c480:	ldr	r0, [fp, #-8]
    c484:	ldr	r1, [fp, #-12]
    c488:	ldr	r2, [fp, #-16]
    c48c:	sub	r3, fp, #32
    c490:	bl	c6fc <MyGame_Example_TestJSONPrefix_parse_json_table>
    c494:	str	r0, [fp, #-12]
    c498:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c49c:	cmp	r0, #0
    c4a0:	beq	c4c4 <MyGame_Example_Alt_parse_json_table+0x350>
    c4a4:	ldr	r0, [fp, #-8]
    c4a8:	ldr	r0, [r0]
    c4ac:	movw	r1, #0
    c4b0:	bl	0 <flatcc_builder_table_add_offset>
    c4b4:	str	r0, [fp, #-36]	; 0xffffffdc
    c4b8:	movw	r1, #0
    c4bc:	cmp	r0, r1
    c4c0:	bne	c4c8 <MyGame_Example_Alt_parse_json_table+0x354>
    c4c4:	b	c648 <MyGame_Example_Alt_parse_json_table+0x4d4>
    c4c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c4cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c4d0:	str	r0, [r1]
    c4d4:	b	c4ec <MyGame_Example_Alt_parse_json_table+0x378>
    c4d8:	ldr	r0, [fp, #-8]
    c4dc:	ldr	r1, [fp, #-12]
    c4e0:	ldr	r2, [fp, #-16]
    c4e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c4e8:	str	r0, [fp, #-12]
    c4ec:	b	c5cc <MyGame_Example_Alt_parse_json_table+0x458>
    c4f0:	ldrb	r0, [sp, #43]	; 0x2b
    c4f4:	ldr	r1, [sp, #44]	; 0x2c
    c4f8:	movw	r2, #30313	; 0x7669
    c4fc:	movt	r2, #28015	; 0x6d6f
    c500:	eor	r1, r1, r2
    c504:	eor	r0, r0, #101	; 0x65
    c508:	orr	r0, r1, r0, lsl #24
    c50c:	cmp	r0, #0
    c510:	bne	c5b4 <MyGame_Example_Alt_parse_json_table+0x440>
    c514:	b	c518 <MyGame_Example_Alt_parse_json_table+0x3a4>
    c518:	ldr	r0, [fp, #-8]
    c51c:	ldr	r1, [fp, #-12]
    c520:	str	r1, [fp, #-40]	; 0xffffffd8
    c524:	ldr	r2, [fp, #-16]
    c528:	movw	r3, #5
    c52c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c530:	str	r0, [fp, #-12]
    c534:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c538:	ldr	r1, [fp, #-12]
    c53c:	cmp	r0, r1
    c540:	beq	c59c <MyGame_Example_Alt_parse_json_table+0x428>
    c544:	ldr	r0, [fp, #-8]
    c548:	ldr	r1, [fp, #-12]
    c54c:	ldr	r2, [fp, #-16]
    c550:	sub	r3, fp, #32
    c554:	bl	cb3c <Fantasy_Movie_parse_json_table>
    c558:	str	r0, [fp, #-12]
    c55c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c560:	cmp	r0, #0
    c564:	beq	c588 <MyGame_Example_Alt_parse_json_table+0x414>
    c568:	ldr	r0, [fp, #-8]
    c56c:	ldr	r0, [r0]
    c570:	movw	r1, #1
    c574:	bl	0 <flatcc_builder_table_add_offset>
    c578:	str	r0, [fp, #-36]	; 0xffffffdc
    c57c:	movw	r1, #0
    c580:	cmp	r0, r1
    c584:	bne	c58c <MyGame_Example_Alt_parse_json_table+0x418>
    c588:	b	c648 <MyGame_Example_Alt_parse_json_table+0x4d4>
    c58c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c590:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c594:	str	r0, [r1]
    c598:	b	c5b0 <MyGame_Example_Alt_parse_json_table+0x43c>
    c59c:	ldr	r0, [fp, #-8]
    c5a0:	ldr	r1, [fp, #-12]
    c5a4:	ldr	r2, [fp, #-16]
    c5a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5ac:	str	r0, [fp, #-12]
    c5b0:	b	c5c8 <MyGame_Example_Alt_parse_json_table+0x454>
    c5b4:	ldr	r0, [fp, #-8]
    c5b8:	ldr	r1, [fp, #-12]
    c5bc:	ldr	r2, [fp, #-16]
    c5c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5c4:	str	r0, [fp, #-12]
    c5c8:	b	c5cc <MyGame_Example_Alt_parse_json_table+0x458>
    c5cc:	b	c5d0 <MyGame_Example_Alt_parse_json_table+0x45c>
    c5d0:	b	c5d4 <MyGame_Example_Alt_parse_json_table+0x460>
    c5d4:	ldr	r0, [fp, #-8]
    c5d8:	ldr	r1, [fp, #-12]
    c5dc:	ldr	r2, [fp, #-16]
    c5e0:	sub	r3, fp, #24
    c5e4:	bl	a03c <flatcc_json_parser_object_end>
    c5e8:	str	r0, [fp, #-12]
    c5ec:	b	c210 <MyGame_Example_Alt_parse_json_table+0x9c>
    c5f0:	ldr	r0, [fp, #-8]
    c5f4:	ldr	r0, [r0, #24]
    c5f8:	cmp	r0, #0
    c5fc:	beq	c604 <MyGame_Example_Alt_parse_json_table+0x490>
    c600:	b	c648 <MyGame_Example_Alt_parse_json_table+0x4d4>
    c604:	ldr	r0, [fp, #-8]
    c608:	ldr	r1, [fp, #-12]
    c60c:	ldr	r2, [fp, #-16]
    c610:	ldr	r3, [sp, #36]	; 0x24
    c614:	bl	0 <flatcc_json_parser_finalize_unions>
    c618:	str	r0, [fp, #-12]
    c61c:	ldr	r0, [fp, #-8]
    c620:	ldr	r0, [r0]
    c624:	bl	0 <flatcc_builder_end_table>
    c628:	ldr	r1, [fp, #-20]	; 0xffffffec
    c62c:	str	r0, [r1]
    c630:	cmp	r0, #0
    c634:	bne	c63c <MyGame_Example_Alt_parse_json_table+0x4c8>
    c638:	b	c648 <MyGame_Example_Alt_parse_json_table+0x4d4>
    c63c:	ldr	r0, [fp, #-12]
    c640:	str	r0, [fp, #-4]
    c644:	b	c660 <MyGame_Example_Alt_parse_json_table+0x4ec>
    c648:	ldr	r0, [fp, #-8]
    c64c:	ldr	r1, [fp, #-12]
    c650:	ldr	r2, [fp, #-16]
    c654:	movw	r3, #33	; 0x21
    c658:	bl	0 <flatcc_json_parser_set_error>
    c65c:	str	r0, [fp, #-4]
    c660:	ldr	r0, [fp, #-4]
    c664:	mov	sp, fp
    c668:	pop	{fp, pc}

0000c66c <MyGame_Example_Any_json_union_accept_type>:
    c66c:	sub	sp, sp, #12
    c670:	strb	r0, [sp, #7]
    c674:	ldrb	r0, [sp, #7]
    c678:	mov	r1, r0
    c67c:	cmp	r0, #4
    c680:	str	r1, [sp]
    c684:	bhi	c6e8 <MyGame_Example_Any_json_union_accept_type+0x7c>
    c688:	add	r0, pc, #8
    c68c:	ldr	r1, [sp]
    c690:	ldr	r0, [r0, r1, lsl #2]
    c694:	mov	pc, r0
    c698:	.word	0x0000c6ac
    c69c:	.word	0x0000c6b8
    c6a0:	.word	0x0000c6c4
    c6a4:	.word	0x0000c6d0
    c6a8:	.word	0x0000c6dc
    c6ac:	movw	r0, #1
    c6b0:	str	r0, [sp, #8]
    c6b4:	b	c6f0 <MyGame_Example_Any_json_union_accept_type+0x84>
    c6b8:	movw	r0, #1
    c6bc:	str	r0, [sp, #8]
    c6c0:	b	c6f0 <MyGame_Example_Any_json_union_accept_type+0x84>
    c6c4:	movw	r0, #1
    c6c8:	str	r0, [sp, #8]
    c6cc:	b	c6f0 <MyGame_Example_Any_json_union_accept_type+0x84>
    c6d0:	movw	r0, #1
    c6d4:	str	r0, [sp, #8]
    c6d8:	b	c6f0 <MyGame_Example_Any_json_union_accept_type+0x84>
    c6dc:	movw	r0, #1
    c6e0:	str	r0, [sp, #8]
    c6e4:	b	c6f0 <MyGame_Example_Any_json_union_accept_type+0x84>
    c6e8:	movw	r0, #0
    c6ec:	str	r0, [sp, #8]
    c6f0:	ldr	r0, [sp, #8]
    c6f4:	add	sp, sp, #12
    c6f8:	bx	lr

0000c6fc <MyGame_Example_TestJSONPrefix_parse_json_table>:
    c6fc:	push	{fp, lr}
    c700:	mov	fp, sp
    c704:	sub	sp, sp, #48	; 0x30
    c708:	str	r0, [fp, #-8]
    c70c:	str	r1, [fp, #-12]
    c710:	str	r2, [fp, #-16]
    c714:	str	r3, [fp, #-20]	; 0xffffffec
    c718:	ldr	r0, [fp, #-20]	; 0xffffffec
    c71c:	movw	r1, #0
    c720:	str	r1, [r0]
    c724:	ldr	r0, [fp, #-8]
    c728:	ldr	r0, [r0]
    c72c:	movw	r1, #3
    c730:	bl	0 <flatcc_builder_start_table>
    c734:	cmp	r0, #0
    c738:	beq	c740 <MyGame_Example_TestJSONPrefix_parse_json_table+0x44>
    c73c:	b	cb18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    c740:	ldr	r0, [fp, #-8]
    c744:	ldr	r1, [fp, #-12]
    c748:	ldr	r2, [fp, #-16]
    c74c:	add	r3, sp, #24
    c750:	bl	4bfc <flatcc_json_parser_object_start>
    c754:	str	r0, [fp, #-12]
    c758:	ldr	r0, [sp, #24]
    c75c:	cmp	r0, #0
    c760:	beq	cad8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3dc>
    c764:	ldr	r0, [fp, #-8]
    c768:	ldr	r1, [fp, #-12]
    c76c:	ldr	r2, [fp, #-16]
    c770:	bl	4ce0 <flatcc_json_parser_symbol_start>
    c774:	str	r0, [fp, #-12]
    c778:	ldr	r0, [fp, #-12]
    c77c:	ldr	r1, [fp, #-16]
    c780:	bl	4d8c <flatcc_json_parser_symbol_part>
    c784:	str	r1, [sp, #4]
    c788:	str	r0, [sp]
    c78c:	ldr	r0, [sp]
    c790:	ldr	r1, [sp, #4]
    c794:	movw	r2, #29556	; 0x7374
    c798:	movt	r2, #29797	; 0x7465
    c79c:	eor	r1, r1, r2
    c7a0:	movw	r2, #28526	; 0x6f6e
    c7a4:	movt	r2, #27251	; 0x6a73
    c7a8:	eor	r0, r0, r2
    c7ac:	orr	r0, r0, r1
    c7b0:	cmp	r0, #0
    c7b4:	bne	caa8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ac>
    c7b8:	b	c7bc <MyGame_Example_TestJSONPrefix_parse_json_table+0xc0>
    c7bc:	ldr	r0, [fp, #-12]
    c7c0:	add	r0, r0, #8
    c7c4:	str	r0, [fp, #-12]
    c7c8:	ldr	r0, [fp, #-12]
    c7cc:	ldr	r1, [fp, #-16]
    c7d0:	bl	4d8c <flatcc_json_parser_symbol_part>
    c7d4:	str	r1, [sp, #4]
    c7d8:	str	r0, [sp]
    c7dc:	ldr	r0, [sp]
    c7e0:	ldr	r1, [sp, #4]
    c7e4:	movw	r2, #25958	; 0x6566
    c7e8:	movt	r2, #28786	; 0x7072
    c7ec:	eor	r1, r1, r2
    c7f0:	movw	r2, #28769	; 0x7061
    c7f4:	movt	r2, #27000	; 0x6978
    c7f8:	eor	r0, r0, r2
    c7fc:	orr	r0, r0, r1
    c800:	cmp	r0, #0
    c804:	bne	ca90 <MyGame_Example_TestJSONPrefix_parse_json_table+0x394>
    c808:	b	c80c <MyGame_Example_TestJSONPrefix_parse_json_table+0x110>
    c80c:	ldr	r0, [fp, #-12]
    c810:	add	r0, r0, #8
    c814:	str	r0, [fp, #-12]
    c818:	ldr	r0, [fp, #-12]
    c81c:	ldr	r1, [fp, #-16]
    c820:	bl	4d8c <flatcc_json_parser_symbol_part>
    c824:	str	r1, [sp, #4]
    c828:	str	r0, [sp]
    c82c:	ldrh	r0, [sp, #2]
    c830:	ldr	r1, [sp, #4]
    c834:	movw	r2, #29299	; 0x7273
    c838:	eor	r2, r2, r1, lsr #16
    c83c:	orr	r0, r0, r1, lsl #16
    c840:	movw	r1, #26418	; 0x6732
    c844:	movt	r1, #26990	; 0x696e
    c848:	eor	r0, r0, r1
    c84c:	orr	r0, r0, r2
    c850:	cmp	r0, #0
    c854:	bne	c8e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1ec>
    c858:	b	c85c <MyGame_Example_TestJSONPrefix_parse_json_table+0x160>
    c85c:	ldr	r0, [fp, #-8]
    c860:	ldr	r1, [fp, #-12]
    c864:	str	r1, [sp, #8]
    c868:	ldr	r2, [fp, #-16]
    c86c:	movw	r3, #6
    c870:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c874:	str	r0, [fp, #-12]
    c878:	ldr	r0, [sp, #8]
    c87c:	ldr	r1, [fp, #-12]
    c880:	cmp	r0, r1
    c884:	beq	c8e0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e4>
    c888:	ldr	r0, [fp, #-8]
    c88c:	ldr	r1, [fp, #-12]
    c890:	ldr	r2, [fp, #-16]
    c894:	add	r3, sp, #16
    c898:	bl	d6fc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    c89c:	str	r0, [fp, #-12]
    c8a0:	ldr	r0, [sp, #16]
    c8a4:	cmp	r0, #0
    c8a8:	beq	c8cc <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d0>
    c8ac:	ldr	r0, [fp, #-8]
    c8b0:	ldr	r0, [r0]
    c8b4:	movw	r1, #1
    c8b8:	bl	0 <flatcc_builder_table_add_offset>
    c8bc:	str	r0, [sp, #12]
    c8c0:	movw	r1, #0
    c8c4:	cmp	r0, r1
    c8c8:	bne	c8d0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d4>
    c8cc:	b	cb18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    c8d0:	ldr	r0, [sp, #16]
    c8d4:	ldr	r1, [sp, #12]
    c8d8:	str	r0, [r1]
    c8dc:	b	c8e4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e8>
    c8e0:	b	c9a8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    c8e4:	b	c9a4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a8>
    c8e8:	ldrb	r0, [sp, #3]
    c8ec:	ldr	r1, [sp, #4]
    c8f0:	movw	r2, #26990	; 0x696e
    c8f4:	movt	r2, #29299	; 0x7273
    c8f8:	eor	r1, r1, r2
    c8fc:	eor	r0, r0, #103	; 0x67
    c900:	orr	r0, r1, r0, lsl #24
    c904:	cmp	r0, #0
    c908:	bne	c99c <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a0>
    c90c:	b	c910 <MyGame_Example_TestJSONPrefix_parse_json_table+0x214>
    c910:	ldr	r0, [fp, #-8]
    c914:	ldr	r1, [fp, #-12]
    c918:	str	r1, [sp, #8]
    c91c:	ldr	r2, [fp, #-16]
    c920:	movw	r3, #5
    c924:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c928:	str	r0, [fp, #-12]
    c92c:	ldr	r0, [sp, #8]
    c930:	ldr	r1, [fp, #-12]
    c934:	cmp	r0, r1
    c938:	beq	c994 <MyGame_Example_TestJSONPrefix_parse_json_table+0x298>
    c93c:	ldr	r0, [fp, #-8]
    c940:	ldr	r1, [fp, #-12]
    c944:	ldr	r2, [fp, #-16]
    c948:	add	r3, sp, #16
    c94c:	bl	db58 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    c950:	str	r0, [fp, #-12]
    c954:	ldr	r0, [sp, #16]
    c958:	cmp	r0, #0
    c95c:	beq	c980 <MyGame_Example_TestJSONPrefix_parse_json_table+0x284>
    c960:	ldr	r0, [fp, #-8]
    c964:	ldr	r0, [r0]
    c968:	movw	r1, #0
    c96c:	bl	0 <flatcc_builder_table_add_offset>
    c970:	str	r0, [sp, #12]
    c974:	movw	r1, #0
    c978:	cmp	r0, r1
    c97c:	bne	c984 <MyGame_Example_TestJSONPrefix_parse_json_table+0x288>
    c980:	b	cb18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    c984:	ldr	r0, [sp, #16]
    c988:	ldr	r1, [sp, #12]
    c98c:	str	r0, [r1]
    c990:	b	c998 <MyGame_Example_TestJSONPrefix_parse_json_table+0x29c>
    c994:	b	c9a8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    c998:	b	c9a0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a4>
    c99c:	b	c9a8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    c9a0:	b	c9a4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a8>
    c9a4:	b	ca8c <MyGame_Example_TestJSONPrefix_parse_json_table+0x390>
    c9a8:	ldrh	r0, [sp, #2]
    c9ac:	ldr	r1, [sp, #4]
    c9b0:	movw	r2, #29299	; 0x7273
    c9b4:	eor	r2, r2, r1, lsr #16
    c9b8:	orr	r0, r0, r1, lsl #16
    c9bc:	movw	r1, #26419	; 0x6733
    c9c0:	movt	r1, #26990	; 0x696e
    c9c4:	eor	r0, r0, r1
    c9c8:	orr	r0, r0, r2
    c9cc:	cmp	r0, #0
    c9d0:	bne	ca74 <MyGame_Example_TestJSONPrefix_parse_json_table+0x378>
    c9d4:	b	c9d8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2dc>
    c9d8:	ldr	r0, [fp, #-8]
    c9dc:	ldr	r1, [fp, #-12]
    c9e0:	str	r1, [sp, #8]
    c9e4:	ldr	r2, [fp, #-16]
    c9e8:	movw	r3, #6
    c9ec:	bl	4dc4 <flatcc_json_parser_match_symbol>
    c9f0:	str	r0, [fp, #-12]
    c9f4:	ldr	r0, [sp, #8]
    c9f8:	ldr	r1, [fp, #-12]
    c9fc:	cmp	r0, r1
    ca00:	beq	ca5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x360>
    ca04:	ldr	r0, [fp, #-8]
    ca08:	ldr	r1, [fp, #-12]
    ca0c:	ldr	r2, [fp, #-16]
    ca10:	add	r3, sp, #16
    ca14:	bl	e778 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    ca18:	str	r0, [fp, #-12]
    ca1c:	ldr	r0, [sp, #16]
    ca20:	cmp	r0, #0
    ca24:	beq	ca48 <MyGame_Example_TestJSONPrefix_parse_json_table+0x34c>
    ca28:	ldr	r0, [fp, #-8]
    ca2c:	ldr	r0, [r0]
    ca30:	movw	r1, #2
    ca34:	bl	0 <flatcc_builder_table_add_offset>
    ca38:	str	r0, [sp, #12]
    ca3c:	movw	r1, #0
    ca40:	cmp	r0, r1
    ca44:	bne	ca4c <MyGame_Example_TestJSONPrefix_parse_json_table+0x350>
    ca48:	b	cb18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    ca4c:	ldr	r0, [sp, #16]
    ca50:	ldr	r1, [sp, #12]
    ca54:	str	r0, [r1]
    ca58:	b	ca70 <MyGame_Example_TestJSONPrefix_parse_json_table+0x374>
    ca5c:	ldr	r0, [fp, #-8]
    ca60:	ldr	r1, [fp, #-12]
    ca64:	ldr	r2, [fp, #-16]
    ca68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca6c:	str	r0, [fp, #-12]
    ca70:	b	ca88 <MyGame_Example_TestJSONPrefix_parse_json_table+0x38c>
    ca74:	ldr	r0, [fp, #-8]
    ca78:	ldr	r1, [fp, #-12]
    ca7c:	ldr	r2, [fp, #-16]
    ca80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca84:	str	r0, [fp, #-12]
    ca88:	b	ca8c <MyGame_Example_TestJSONPrefix_parse_json_table+0x390>
    ca8c:	b	caa4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3a8>
    ca90:	ldr	r0, [fp, #-8]
    ca94:	ldr	r1, [fp, #-12]
    ca98:	ldr	r2, [fp, #-16]
    ca9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    caa0:	str	r0, [fp, #-12]
    caa4:	b	cabc <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c0>
    caa8:	ldr	r0, [fp, #-8]
    caac:	ldr	r1, [fp, #-12]
    cab0:	ldr	r2, [fp, #-16]
    cab4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cab8:	str	r0, [fp, #-12]
    cabc:	ldr	r0, [fp, #-8]
    cac0:	ldr	r1, [fp, #-12]
    cac4:	ldr	r2, [fp, #-16]
    cac8:	add	r3, sp, #24
    cacc:	bl	a03c <flatcc_json_parser_object_end>
    cad0:	str	r0, [fp, #-12]
    cad4:	b	c758 <MyGame_Example_TestJSONPrefix_parse_json_table+0x5c>
    cad8:	ldr	r0, [fp, #-8]
    cadc:	ldr	r0, [r0, #24]
    cae0:	cmp	r0, #0
    cae4:	beq	caec <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f0>
    cae8:	b	cb18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    caec:	ldr	r0, [fp, #-8]
    caf0:	ldr	r0, [r0]
    caf4:	bl	0 <flatcc_builder_end_table>
    caf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    cafc:	str	r0, [r1]
    cb00:	cmp	r0, #0
    cb04:	bne	cb0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x410>
    cb08:	b	cb18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    cb0c:	ldr	r0, [fp, #-12]
    cb10:	str	r0, [fp, #-4]
    cb14:	b	cb30 <MyGame_Example_TestJSONPrefix_parse_json_table+0x434>
    cb18:	ldr	r0, [fp, #-8]
    cb1c:	ldr	r1, [fp, #-12]
    cb20:	ldr	r2, [fp, #-16]
    cb24:	movw	r3, #33	; 0x21
    cb28:	bl	0 <flatcc_json_parser_set_error>
    cb2c:	str	r0, [fp, #-4]
    cb30:	ldr	r0, [fp, #-4]
    cb34:	mov	sp, fp
    cb38:	pop	{fp, pc}

0000cb3c <Fantasy_Movie_parse_json_table>:
    cb3c:	push	{fp, lr}
    cb40:	mov	fp, sp
    cb44:	sub	sp, sp, #120	; 0x78
    cb48:	str	r0, [fp, #-8]
    cb4c:	str	r1, [fp, #-12]
    cb50:	str	r2, [fp, #-16]
    cb54:	str	r3, [fp, #-20]	; 0xffffffec
    cb58:	ldr	r0, [fp, #-20]	; 0xffffffec
    cb5c:	movw	r1, #0
    cb60:	str	r1, [r0]
    cb64:	ldr	r0, [fp, #-8]
    cb68:	ldr	r0, [r0]
    cb6c:	movw	r1, #10
    cb70:	bl	0 <flatcc_builder_start_table>
    cb74:	cmp	r0, #0
    cb78:	beq	cb80 <Fantasy_Movie_parse_json_table+0x44>
    cb7c:	b	d6d8 <Fantasy_Movie_parse_json_table+0xb9c>
    cb80:	ldr	r0, [fp, #-16]
    cb84:	ldr	r1, [fp, #-8]
    cb88:	ldr	r2, [fp, #-12]
    cb8c:	ldr	r3, [fp, #-16]
    cb90:	str	r0, [fp, #-56]	; 0xffffffc8
    cb94:	mov	r0, r1
    cb98:	mov	r1, r2
    cb9c:	mov	r2, r3
    cba0:	movw	r3, #5
    cba4:	sub	ip, fp, #52	; 0x34
    cba8:	str	ip, [sp]
    cbac:	bl	0 <flatcc_json_parser_prepare_unions>
    cbb0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    cbb4:	cmp	r1, r0
    cbb8:	bne	cbc0 <Fantasy_Movie_parse_json_table+0x84>
    cbbc:	b	d6d8 <Fantasy_Movie_parse_json_table+0xb9c>
    cbc0:	ldr	r0, [fp, #-8]
    cbc4:	ldr	r1, [fp, #-12]
    cbc8:	ldr	r2, [fp, #-16]
    cbcc:	sub	r3, fp, #24
    cbd0:	bl	4bfc <flatcc_json_parser_object_start>
    cbd4:	str	r0, [fp, #-12]
    cbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cbdc:	cmp	r0, #0
    cbe0:	beq	d680 <Fantasy_Movie_parse_json_table+0xb44>
    cbe4:	ldr	r0, [fp, #-8]
    cbe8:	ldr	r1, [fp, #-12]
    cbec:	ldr	r2, [fp, #-16]
    cbf0:	bl	4ce0 <flatcc_json_parser_symbol_start>
    cbf4:	str	r0, [fp, #-12]
    cbf8:	ldr	r0, [fp, #-12]
    cbfc:	ldr	r1, [fp, #-16]
    cc00:	bl	4d8c <flatcc_json_parser_symbol_part>
    cc04:	str	r1, [fp, #-44]	; 0xffffffd4
    cc08:	str	r0, [fp, #-48]	; 0xffffffd0
    cc0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    cc10:	ldr	r1, [fp, #-44]	; 0xffffffd4
    cc14:	movw	r2, #29796	; 0x7464
    cc18:	movt	r2, #24931	; 0x6163
    cc1c:	subs	r0, r2, r0
    cc20:	movw	r2, #24946	; 0x6172
    cc24:	movt	r2, #25448	; 0x6368
    cc28:	sbcs	r1, r2, r1
    cc2c:	bcc	d000 <Fantasy_Movie_parse_json_table+0x4c4>
    cc30:	b	cc34 <Fantasy_Movie_parse_json_table+0xf8>
    cc34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    cc38:	ldr	r1, [fp, #-44]	; 0xffffffd4
    cc3c:	movw	r2, #29793	; 0x7461
    cc40:	movt	r2, #24942	; 0x616e
    cc44:	eor	r1, r1, r2
    cc48:	movw	r2, #28265	; 0x6e69
    cc4c:	movt	r2, #26479	; 0x676f
    cc50:	eor	r0, r0, r2
    cc54:	orr	r0, r0, r1
    cc58:	cmp	r0, #0
    cc5c:	bne	ce14 <Fantasy_Movie_parse_json_table+0x2d8>
    cc60:	b	cc64 <Fantasy_Movie_parse_json_table+0x128>
    cc64:	ldr	r0, [fp, #-12]
    cc68:	add	r0, r0, #8
    cc6c:	str	r0, [fp, #-12]
    cc70:	ldr	r0, [fp, #-12]
    cc74:	ldr	r1, [fp, #-16]
    cc78:	bl	4d8c <flatcc_json_parser_symbol_part>
    cc7c:	str	r1, [fp, #-44]	; 0xffffffd4
    cc80:	str	r0, [fp, #-48]	; 0xffffffd0
    cc84:	ldr	r0, [fp, #-48]	; 0xffffffd0
    cc88:	ldr	r1, [fp, #-44]	; 0xffffffd4
    cc8c:	movw	r2, #29791	; 0x745f
    cc90:	movt	r2, #115	; 0x73
    cc94:	eor	r2, r2, r1, lsr #8
    cc98:	lsr	r0, r0, #8
    cc9c:	orr	r0, r0, r1, lsl #24
    cca0:	movw	r1, #28773	; 0x7065
    cca4:	movt	r1, #29817	; 0x7479
    cca8:	eor	r0, r0, r1
    ccac:	orr	r0, r0, r2
    ccb0:	cmp	r0, #0
    ccb4:	bne	cd54 <Fantasy_Movie_parse_json_table+0x218>
    ccb8:	b	ccbc <Fantasy_Movie_parse_json_table+0x180>
    ccbc:	ldr	r0, [fp, #-8]
    ccc0:	ldr	r1, [fp, #-12]
    ccc4:	str	r1, [fp, #-40]	; 0xffffffd8
    ccc8:	ldr	r2, [fp, #-16]
    cccc:	movw	r3, #7
    ccd0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    ccd4:	str	r0, [fp, #-12]
    ccd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ccdc:	ldr	r1, [fp, #-12]
    cce0:	cmp	r0, r1
    cce4:	beq	cd3c <Fantasy_Movie_parse_json_table+0x200>
    cce8:	ldr	r0, [fp, #-8]
    ccec:	ldr	r1, [fp, #-12]
    ccf0:	ldr	r2, [fp, #-16]
    ccf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ccf8:	movw	ip, #1
    ccfc:	str	r3, [sp, #60]	; 0x3c
    cd00:	mov	r3, ip
    cd04:	movw	ip, #3
    cd08:	uxth	ip, ip
    cd0c:	str	ip, [sp]
    cd10:	ldr	ip, [sp, #60]	; 0x3c
    cd14:	str	ip, [sp, #4]
    cd18:	movw	lr, #0
    cd1c:	movt	lr, #0
    cd20:	str	lr, [sp, #8]
    cd24:	movw	lr, #0
    cd28:	movt	lr, #0
    cd2c:	str	lr, [sp, #12]
    cd30:	bl	0 <flatcc_json_parser_union_type>
    cd34:	str	r0, [fp, #-12]
    cd38:	b	cd50 <Fantasy_Movie_parse_json_table+0x214>
    cd3c:	ldr	r0, [fp, #-8]
    cd40:	ldr	r1, [fp, #-12]
    cd44:	ldr	r2, [fp, #-16]
    cd48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cd4c:	str	r0, [fp, #-12]
    cd50:	b	ce10 <Fantasy_Movie_parse_json_table+0x2d4>
    cd54:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    cd58:	movw	r1, #0
    cd5c:	movt	r1, #29556	; 0x7374
    cd60:	teq	r1, r0, lsl #16
    cd64:	bne	cdf8 <Fantasy_Movie_parse_json_table+0x2bc>
    cd68:	b	cd6c <Fantasy_Movie_parse_json_table+0x230>
    cd6c:	ldr	r0, [fp, #-8]
    cd70:	ldr	r1, [fp, #-12]
    cd74:	str	r1, [fp, #-40]	; 0xffffffd8
    cd78:	ldr	r2, [fp, #-16]
    cd7c:	movw	r3, #2
    cd80:	bl	4dc4 <flatcc_json_parser_match_symbol>
    cd84:	str	r0, [fp, #-12]
    cd88:	ldr	r0, [fp, #-40]	; 0xffffffd8
    cd8c:	ldr	r1, [fp, #-12]
    cd90:	cmp	r0, r1
    cd94:	beq	cde0 <Fantasy_Movie_parse_json_table+0x2a4>
    cd98:	ldr	r0, [fp, #-8]
    cd9c:	ldr	r1, [fp, #-12]
    cda0:	ldr	r2, [fp, #-16]
    cda4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cda8:	movw	ip, #1
    cdac:	str	r3, [sp, #56]	; 0x38
    cdb0:	mov	r3, ip
    cdb4:	movw	ip, #3
    cdb8:	uxth	ip, ip
    cdbc:	str	ip, [sp]
    cdc0:	ldr	ip, [sp, #56]	; 0x38
    cdc4:	str	ip, [sp, #4]
    cdc8:	movw	lr, #0
    cdcc:	movt	lr, #0
    cdd0:	str	lr, [sp, #8]
    cdd4:	bl	0 <flatcc_json_parser_union>
    cdd8:	str	r0, [fp, #-12]
    cddc:	b	cdf4 <Fantasy_Movie_parse_json_table+0x2b8>
    cde0:	ldr	r0, [fp, #-8]
    cde4:	ldr	r1, [fp, #-12]
    cde8:	ldr	r2, [fp, #-16]
    cdec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cdf0:	str	r0, [fp, #-12]
    cdf4:	b	ce0c <Fantasy_Movie_parse_json_table+0x2d0>
    cdf8:	ldr	r0, [fp, #-8]
    cdfc:	ldr	r1, [fp, #-12]
    ce00:	ldr	r2, [fp, #-16]
    ce04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ce08:	str	r0, [fp, #-12]
    ce0c:	b	ce10 <Fantasy_Movie_parse_json_table+0x2d4>
    ce10:	b	cffc <Fantasy_Movie_parse_json_table+0x4c0>
    ce14:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ce18:	ldr	r1, [fp, #-44]	; 0xffffffd4
    ce1c:	movw	r2, #28005	; 0x6d65
    ce20:	movt	r2, #25441	; 0x6361
    ce24:	eor	r1, r1, r2
    ce28:	movw	r2, #29817	; 0x7479
    ce2c:	movt	r2, #28511	; 0x6f5f
    ce30:	eor	r0, r0, r2
    ce34:	orr	r0, r0, r1
    ce38:	cmp	r0, #0
    ce3c:	bne	cf2c <Fantasy_Movie_parse_json_table+0x3f0>
    ce40:	b	ce44 <Fantasy_Movie_parse_json_table+0x308>
    ce44:	ldr	r0, [fp, #-12]
    ce48:	add	r0, r0, #8
    ce4c:	str	r0, [fp, #-12]
    ce50:	ldr	r0, [fp, #-12]
    ce54:	ldr	r1, [fp, #-16]
    ce58:	bl	4d8c <flatcc_json_parser_symbol_part>
    ce5c:	str	r1, [fp, #-44]	; 0xffffffd4
    ce60:	str	r0, [fp, #-48]	; 0xffffffd0
    ce64:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    ce68:	movw	r1, #0
    ce6c:	movt	r1, #28773	; 0x7065
    ce70:	teq	r1, r0, lsl #16
    ce74:	bne	cf14 <Fantasy_Movie_parse_json_table+0x3d8>
    ce78:	b	ce7c <Fantasy_Movie_parse_json_table+0x340>
    ce7c:	ldr	r0, [fp, #-8]
    ce80:	ldr	r1, [fp, #-12]
    ce84:	str	r1, [fp, #-40]	; 0xffffffd8
    ce88:	ldr	r2, [fp, #-16]
    ce8c:	movw	r3, #2
    ce90:	bl	4dc4 <flatcc_json_parser_match_symbol>
    ce94:	str	r0, [fp, #-12]
    ce98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ce9c:	ldr	r1, [fp, #-12]
    cea0:	cmp	r0, r1
    cea4:	beq	cefc <Fantasy_Movie_parse_json_table+0x3c0>
    cea8:	ldr	r0, [fp, #-8]
    ceac:	ldr	r1, [fp, #-12]
    ceb0:	ldr	r2, [fp, #-16]
    ceb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ceb8:	movw	ip, #3
    cebc:	str	r3, [sp, #52]	; 0x34
    cec0:	mov	r3, ip
    cec4:	movw	ip, #7
    cec8:	uxth	ip, ip
    cecc:	str	ip, [sp]
    ced0:	ldr	ip, [sp, #52]	; 0x34
    ced4:	str	ip, [sp, #4]
    ced8:	movw	lr, #0
    cedc:	movt	lr, #0
    cee0:	str	lr, [sp, #8]
    cee4:	movw	lr, #0
    cee8:	movt	lr, #0
    ceec:	str	lr, [sp, #12]
    cef0:	bl	0 <flatcc_json_parser_union_type>
    cef4:	str	r0, [fp, #-12]
    cef8:	b	cf10 <Fantasy_Movie_parse_json_table+0x3d4>
    cefc:	ldr	r0, [fp, #-8]
    cf00:	ldr	r1, [fp, #-12]
    cf04:	ldr	r2, [fp, #-16]
    cf08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf0c:	str	r0, [fp, #-12]
    cf10:	b	cf28 <Fantasy_Movie_parse_json_table+0x3ec>
    cf14:	ldr	r0, [fp, #-8]
    cf18:	ldr	r1, [fp, #-12]
    cf1c:	ldr	r2, [fp, #-16]
    cf20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf24:	str	r0, [fp, #-12]
    cf28:	b	cff8 <Fantasy_Movie_parse_json_table+0x4bc>
    cf2c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    cf30:	ldr	r1, [fp, #-44]	; 0xffffffd4
    cf34:	movw	r2, #28005	; 0x6d65
    cf38:	movt	r2, #25441	; 0x6361
    cf3c:	eor	r1, r1, r2
    cf40:	eor	r0, r0, #111	; 0x6f
    cf44:	orr	r0, r1, r0, lsl #24
    cf48:	cmp	r0, #0
    cf4c:	bne	cfe0 <Fantasy_Movie_parse_json_table+0x4a4>
    cf50:	b	cf54 <Fantasy_Movie_parse_json_table+0x418>
    cf54:	ldr	r0, [fp, #-8]
    cf58:	ldr	r1, [fp, #-12]
    cf5c:	str	r1, [fp, #-40]	; 0xffffffd8
    cf60:	ldr	r2, [fp, #-16]
    cf64:	movw	r3, #5
    cf68:	bl	4dc4 <flatcc_json_parser_match_symbol>
    cf6c:	str	r0, [fp, #-12]
    cf70:	ldr	r0, [fp, #-40]	; 0xffffffd8
    cf74:	ldr	r1, [fp, #-12]
    cf78:	cmp	r0, r1
    cf7c:	beq	cfc8 <Fantasy_Movie_parse_json_table+0x48c>
    cf80:	ldr	r0, [fp, #-8]
    cf84:	ldr	r1, [fp, #-12]
    cf88:	ldr	r2, [fp, #-16]
    cf8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cf90:	movw	ip, #3
    cf94:	str	r3, [sp, #48]	; 0x30
    cf98:	mov	r3, ip
    cf9c:	movw	ip, #7
    cfa0:	uxth	ip, ip
    cfa4:	str	ip, [sp]
    cfa8:	ldr	ip, [sp, #48]	; 0x30
    cfac:	str	ip, [sp, #4]
    cfb0:	movw	lr, #0
    cfb4:	movt	lr, #0
    cfb8:	str	lr, [sp, #8]
    cfbc:	bl	0 <flatcc_json_parser_union>
    cfc0:	str	r0, [fp, #-12]
    cfc4:	b	cfdc <Fantasy_Movie_parse_json_table+0x4a0>
    cfc8:	ldr	r0, [fp, #-8]
    cfcc:	ldr	r1, [fp, #-12]
    cfd0:	ldr	r2, [fp, #-16]
    cfd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cfd8:	str	r0, [fp, #-12]
    cfdc:	b	cff4 <Fantasy_Movie_parse_json_table+0x4b8>
    cfe0:	ldr	r0, [fp, #-8]
    cfe4:	ldr	r1, [fp, #-12]
    cfe8:	ldr	r2, [fp, #-16]
    cfec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cff0:	str	r0, [fp, #-12]
    cff4:	b	cff8 <Fantasy_Movie_parse_json_table+0x4bc>
    cff8:	b	cffc <Fantasy_Movie_parse_json_table+0x4c0>
    cffc:	b	d664 <Fantasy_Movie_parse_json_table+0xb28>
    d000:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d004:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d008:	movw	r2, #26720	; 0x6860
    d00c:	movt	r2, #24419	; 0x5f63
    d010:	subs	r0, r2, r0
    d014:	movw	r2, #26990	; 0x696e
    d018:	movt	r2, #28001	; 0x6d61
    d01c:	sbcs	r1, r2, r1
    d020:	bcc	d22c <Fantasy_Movie_parse_json_table+0x6f0>
    d024:	b	d028 <Fantasy_Movie_parse_json_table+0x4ec>
    d028:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d02c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d030:	movw	r2, #24946	; 0x6172
    d034:	movt	r2, #25448	; 0x6368
    d038:	eor	r1, r1, r2
    d03c:	movw	r2, #29797	; 0x7465
    d040:	movt	r2, #24931	; 0x6163
    d044:	eor	r0, r0, r2
    d048:	orr	r0, r0, r1
    d04c:	cmp	r0, #0
    d050:	bne	d214 <Fantasy_Movie_parse_json_table+0x6d8>
    d054:	b	d058 <Fantasy_Movie_parse_json_table+0x51c>
    d058:	ldr	r0, [fp, #-12]
    d05c:	add	r0, r0, #8
    d060:	str	r0, [fp, #-12]
    d064:	ldr	r0, [fp, #-12]
    d068:	ldr	r1, [fp, #-16]
    d06c:	bl	4d8c <flatcc_json_parser_symbol_part>
    d070:	str	r1, [fp, #-44]	; 0xffffffd4
    d074:	str	r0, [fp, #-48]	; 0xffffffd0
    d078:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d07c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d080:	movw	r2, #29535	; 0x735f
    d084:	movt	r2, #114	; 0x72
    d088:	eor	r2, r2, r1, lsr #8
    d08c:	lsr	r0, r0, #8
    d090:	orr	r0, r0, r1, lsl #24
    d094:	movw	r1, #28773	; 0x7065
    d098:	movt	r1, #29817	; 0x7479
    d09c:	eor	r0, r0, r1
    d0a0:	orr	r0, r0, r2
    d0a4:	cmp	r0, #0
    d0a8:	bne	d154 <Fantasy_Movie_parse_json_table+0x618>
    d0ac:	b	d0b0 <Fantasy_Movie_parse_json_table+0x574>
    d0b0:	ldr	r0, [fp, #-8]
    d0b4:	ldr	r1, [fp, #-12]
    d0b8:	str	r1, [fp, #-40]	; 0xffffffd8
    d0bc:	ldr	r2, [fp, #-16]
    d0c0:	movw	r3, #7
    d0c4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d0c8:	str	r0, [fp, #-12]
    d0cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d0d0:	ldr	r1, [fp, #-12]
    d0d4:	cmp	r0, r1
    d0d8:	beq	d13c <Fantasy_Movie_parse_json_table+0x600>
    d0dc:	ldr	r0, [fp, #-8]
    d0e0:	ldr	r1, [fp, #-12]
    d0e4:	ldr	r2, [fp, #-16]
    d0e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d0ec:	movw	ip, #4
    d0f0:	str	r3, [sp, #44]	; 0x2c
    d0f4:	mov	r3, ip
    d0f8:	movw	ip, #9
    d0fc:	uxth	ip, ip
    d100:	str	ip, [sp]
    d104:	ldr	ip, [sp, #44]	; 0x2c
    d108:	str	ip, [sp, #4]
    d10c:	movw	lr, #0
    d110:	movt	lr, #0
    d114:	str	lr, [sp, #8]
    d118:	movw	lr, #0
    d11c:	movt	lr, #0
    d120:	str	lr, [sp, #12]
    d124:	movw	lr, #0
    d128:	movt	lr, #0
    d12c:	str	lr, [sp, #16]
    d130:	bl	0 <flatcc_json_parser_union_type_vector>
    d134:	str	r0, [fp, #-12]
    d138:	b	d150 <Fantasy_Movie_parse_json_table+0x614>
    d13c:	ldr	r0, [fp, #-8]
    d140:	ldr	r1, [fp, #-12]
    d144:	ldr	r2, [fp, #-16]
    d148:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d14c:	str	r0, [fp, #-12]
    d150:	b	d210 <Fantasy_Movie_parse_json_table+0x6d4>
    d154:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    d158:	movw	r1, #0
    d15c:	movt	r1, #29299	; 0x7273
    d160:	teq	r1, r0, lsl #16
    d164:	bne	d1f8 <Fantasy_Movie_parse_json_table+0x6bc>
    d168:	b	d16c <Fantasy_Movie_parse_json_table+0x630>
    d16c:	ldr	r0, [fp, #-8]
    d170:	ldr	r1, [fp, #-12]
    d174:	str	r1, [fp, #-40]	; 0xffffffd8
    d178:	ldr	r2, [fp, #-16]
    d17c:	movw	r3, #2
    d180:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d184:	str	r0, [fp, #-12]
    d188:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d18c:	ldr	r1, [fp, #-12]
    d190:	cmp	r0, r1
    d194:	beq	d1e0 <Fantasy_Movie_parse_json_table+0x6a4>
    d198:	ldr	r0, [fp, #-8]
    d19c:	ldr	r1, [fp, #-12]
    d1a0:	ldr	r2, [fp, #-16]
    d1a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d1a8:	movw	ip, #4
    d1ac:	str	r3, [sp, #40]	; 0x28
    d1b0:	mov	r3, ip
    d1b4:	movw	ip, #9
    d1b8:	uxth	ip, ip
    d1bc:	str	ip, [sp]
    d1c0:	ldr	ip, [sp, #40]	; 0x28
    d1c4:	str	ip, [sp, #4]
    d1c8:	movw	lr, #0
    d1cc:	movt	lr, #0
    d1d0:	str	lr, [sp, #8]
    d1d4:	bl	0 <flatcc_json_parser_union_vector>
    d1d8:	str	r0, [fp, #-12]
    d1dc:	b	d1f4 <Fantasy_Movie_parse_json_table+0x6b8>
    d1e0:	ldr	r0, [fp, #-8]
    d1e4:	ldr	r1, [fp, #-12]
    d1e8:	ldr	r2, [fp, #-16]
    d1ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1f0:	str	r0, [fp, #-12]
    d1f4:	b	d20c <Fantasy_Movie_parse_json_table+0x6d0>
    d1f8:	ldr	r0, [fp, #-8]
    d1fc:	ldr	r1, [fp, #-12]
    d200:	ldr	r2, [fp, #-16]
    d204:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d208:	str	r0, [fp, #-12]
    d20c:	b	d210 <Fantasy_Movie_parse_json_table+0x6d4>
    d210:	b	d228 <Fantasy_Movie_parse_json_table+0x6ec>
    d214:	ldr	r0, [fp, #-8]
    d218:	ldr	r1, [fp, #-12]
    d21c:	ldr	r2, [fp, #-16]
    d220:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d224:	str	r0, [fp, #-12]
    d228:	b	d660 <Fantasy_Movie_parse_json_table+0xb24>
    d22c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d230:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d234:	movw	r2, #26990	; 0x696e
    d238:	movt	r2, #28001	; 0x6d61
    d23c:	eor	r1, r1, r2
    d240:	movw	r2, #26721	; 0x6861
    d244:	movt	r2, #24419	; 0x5f63
    d248:	eor	r0, r0, r2
    d24c:	orr	r0, r0, r1
    d250:	cmp	r0, #0
    d254:	bne	d470 <Fantasy_Movie_parse_json_table+0x934>
    d258:	b	d25c <Fantasy_Movie_parse_json_table+0x720>
    d25c:	ldr	r0, [fp, #-12]
    d260:	add	r0, r0, #8
    d264:	str	r0, [fp, #-12]
    d268:	ldr	r0, [fp, #-12]
    d26c:	ldr	r1, [fp, #-16]
    d270:	bl	4d8c <flatcc_json_parser_symbol_part>
    d274:	str	r1, [fp, #-44]	; 0xffffffd4
    d278:	str	r0, [fp, #-48]	; 0xffffffd0
    d27c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d280:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d284:	movw	r2, #25460	; 0x6374
    d288:	movt	r2, #29281	; 0x7261
    d28c:	eor	r1, r1, r2
    d290:	movw	r2, #24436	; 0x5f74
    d294:	movt	r2, #25970	; 0x6572
    d298:	eor	r0, r0, r2
    d29c:	orr	r0, r0, r1
    d2a0:	cmp	r0, #0
    d2a4:	bne	d398 <Fantasy_Movie_parse_json_table+0x85c>
    d2a8:	b	d2ac <Fantasy_Movie_parse_json_table+0x770>
    d2ac:	ldr	r0, [fp, #-12]
    d2b0:	add	r0, r0, #8
    d2b4:	str	r0, [fp, #-12]
    d2b8:	ldr	r0, [fp, #-12]
    d2bc:	ldr	r1, [fp, #-16]
    d2c0:	bl	4d8c <flatcc_json_parser_symbol_part>
    d2c4:	str	r1, [fp, #-44]	; 0xffffffd4
    d2c8:	str	r0, [fp, #-48]	; 0xffffffd0
    d2cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    d2d0:	bic	r0, r0, #255	; 0xff
    d2d4:	movw	r1, #25856	; 0x6500
    d2d8:	movt	r1, #31088	; 0x7970
    d2dc:	teq	r0, r1
    d2e0:	bne	d380 <Fantasy_Movie_parse_json_table+0x844>
    d2e4:	b	d2e8 <Fantasy_Movie_parse_json_table+0x7ac>
    d2e8:	ldr	r0, [fp, #-8]
    d2ec:	ldr	r1, [fp, #-12]
    d2f0:	str	r1, [fp, #-40]	; 0xffffffd8
    d2f4:	ldr	r2, [fp, #-16]
    d2f8:	movw	r3, #3
    d2fc:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d300:	str	r0, [fp, #-12]
    d304:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d308:	ldr	r1, [fp, #-12]
    d30c:	cmp	r0, r1
    d310:	beq	d368 <Fantasy_Movie_parse_json_table+0x82c>
    d314:	ldr	r0, [fp, #-8]
    d318:	ldr	r1, [fp, #-12]
    d31c:	ldr	r2, [fp, #-16]
    d320:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d324:	movw	ip, #0
    d328:	str	r3, [sp, #36]	; 0x24
    d32c:	mov	r3, ip
    d330:	movw	ip, #1
    d334:	uxth	ip, ip
    d338:	str	ip, [sp]
    d33c:	ldr	ip, [sp, #36]	; 0x24
    d340:	str	ip, [sp, #4]
    d344:	movw	lr, #0
    d348:	movt	lr, #0
    d34c:	str	lr, [sp, #8]
    d350:	movw	lr, #0
    d354:	movt	lr, #0
    d358:	str	lr, [sp, #12]
    d35c:	bl	0 <flatcc_json_parser_union_type>
    d360:	str	r0, [fp, #-12]
    d364:	b	d37c <Fantasy_Movie_parse_json_table+0x840>
    d368:	ldr	r0, [fp, #-8]
    d36c:	ldr	r1, [fp, #-12]
    d370:	ldr	r2, [fp, #-16]
    d374:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d378:	str	r0, [fp, #-12]
    d37c:	b	d394 <Fantasy_Movie_parse_json_table+0x858>
    d380:	ldr	r0, [fp, #-8]
    d384:	ldr	r1, [fp, #-12]
    d388:	ldr	r2, [fp, #-16]
    d38c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d390:	str	r0, [fp, #-12]
    d394:	b	d46c <Fantasy_Movie_parse_json_table+0x930>
    d398:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    d39c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d3a0:	movw	r2, #29281	; 0x7261
    d3a4:	eor	r2, r2, r1, lsr #16
    d3a8:	orr	r0, r0, r1, lsl #16
    d3ac:	movw	r1, #25970	; 0x6572
    d3b0:	movt	r1, #25460	; 0x6374
    d3b4:	eor	r0, r0, r1
    d3b8:	orr	r0, r0, r2
    d3bc:	cmp	r0, #0
    d3c0:	bne	d454 <Fantasy_Movie_parse_json_table+0x918>
    d3c4:	b	d3c8 <Fantasy_Movie_parse_json_table+0x88c>
    d3c8:	ldr	r0, [fp, #-8]
    d3cc:	ldr	r1, [fp, #-12]
    d3d0:	str	r1, [fp, #-40]	; 0xffffffd8
    d3d4:	ldr	r2, [fp, #-16]
    d3d8:	movw	r3, #6
    d3dc:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d3e0:	str	r0, [fp, #-12]
    d3e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d3e8:	ldr	r1, [fp, #-12]
    d3ec:	cmp	r0, r1
    d3f0:	beq	d43c <Fantasy_Movie_parse_json_table+0x900>
    d3f4:	ldr	r0, [fp, #-8]
    d3f8:	ldr	r1, [fp, #-12]
    d3fc:	ldr	r2, [fp, #-16]
    d400:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d404:	movw	ip, #0
    d408:	str	r3, [sp, #32]
    d40c:	mov	r3, ip
    d410:	movw	ip, #1
    d414:	uxth	ip, ip
    d418:	str	ip, [sp]
    d41c:	ldr	ip, [sp, #32]
    d420:	str	ip, [sp, #4]
    d424:	movw	lr, #0
    d428:	movt	lr, #0
    d42c:	str	lr, [sp, #8]
    d430:	bl	0 <flatcc_json_parser_union>
    d434:	str	r0, [fp, #-12]
    d438:	b	d450 <Fantasy_Movie_parse_json_table+0x914>
    d43c:	ldr	r0, [fp, #-8]
    d440:	ldr	r1, [fp, #-12]
    d444:	ldr	r2, [fp, #-16]
    d448:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d44c:	str	r0, [fp, #-12]
    d450:	b	d468 <Fantasy_Movie_parse_json_table+0x92c>
    d454:	ldr	r0, [fp, #-8]
    d458:	ldr	r1, [fp, #-12]
    d45c:	ldr	r2, [fp, #-16]
    d460:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d464:	str	r0, [fp, #-12]
    d468:	b	d46c <Fantasy_Movie_parse_json_table+0x930>
    d46c:	b	d65c <Fantasy_Movie_parse_json_table+0xb20>
    d470:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d474:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d478:	movw	r2, #25701	; 0x6465
    d47c:	movt	r2, #29545	; 0x7369
    d480:	eor	r1, r1, r2
    d484:	movw	r2, #26979	; 0x6963
    d488:	movt	r2, #24427	; 0x5f6b
    d48c:	eor	r0, r0, r2
    d490:	orr	r0, r0, r1
    d494:	cmp	r0, #0
    d498:	bne	d644 <Fantasy_Movie_parse_json_table+0xb08>
    d49c:	b	d4a0 <Fantasy_Movie_parse_json_table+0x964>
    d4a0:	ldr	r0, [fp, #-12]
    d4a4:	add	r0, r0, #8
    d4a8:	str	r0, [fp, #-12]
    d4ac:	ldr	r0, [fp, #-12]
    d4b0:	ldr	r1, [fp, #-16]
    d4b4:	bl	4d8c <flatcc_json_parser_symbol_part>
    d4b8:	str	r1, [fp, #-44]	; 0xffffffd4
    d4bc:	str	r0, [fp, #-48]	; 0xffffffd0
    d4c0:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    d4c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d4c8:	movw	r2, #27487	; 0x6b5f
    d4cc:	eor	r2, r2, r1, lsr #16
    d4d0:	orr	r0, r0, r1, lsl #16
    d4d4:	movw	r1, #28773	; 0x7065
    d4d8:	movt	r1, #29817	; 0x7479
    d4dc:	eor	r0, r0, r1
    d4e0:	orr	r0, r0, r2
    d4e4:	cmp	r0, #0
    d4e8:	bne	d588 <Fantasy_Movie_parse_json_table+0xa4c>
    d4ec:	b	d4f0 <Fantasy_Movie_parse_json_table+0x9b4>
    d4f0:	ldr	r0, [fp, #-8]
    d4f4:	ldr	r1, [fp, #-12]
    d4f8:	str	r1, [fp, #-40]	; 0xffffffd8
    d4fc:	ldr	r2, [fp, #-16]
    d500:	movw	r3, #6
    d504:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d508:	str	r0, [fp, #-12]
    d50c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d510:	ldr	r1, [fp, #-12]
    d514:	cmp	r0, r1
    d518:	beq	d570 <Fantasy_Movie_parse_json_table+0xa34>
    d51c:	ldr	r0, [fp, #-8]
    d520:	ldr	r1, [fp, #-12]
    d524:	ldr	r2, [fp, #-16]
    d528:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d52c:	movw	ip, #2
    d530:	str	r3, [sp, #28]
    d534:	mov	r3, ip
    d538:	movw	ip, #5
    d53c:	uxth	ip, ip
    d540:	str	ip, [sp]
    d544:	ldr	ip, [sp, #28]
    d548:	str	ip, [sp, #4]
    d54c:	movw	lr, #0
    d550:	movt	lr, #0
    d554:	str	lr, [sp, #8]
    d558:	movw	lr, #0
    d55c:	movt	lr, #0
    d560:	str	lr, [sp, #12]
    d564:	bl	0 <flatcc_json_parser_union_type>
    d568:	str	r0, [fp, #-12]
    d56c:	b	d584 <Fantasy_Movie_parse_json_table+0xa48>
    d570:	ldr	r0, [fp, #-8]
    d574:	ldr	r1, [fp, #-12]
    d578:	ldr	r2, [fp, #-16]
    d57c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d580:	str	r0, [fp, #-12]
    d584:	b	d640 <Fantasy_Movie_parse_json_table+0xb04>
    d588:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    d58c:	mov	r1, #1795162112	; 0x6b000000
    d590:	teq	r1, r0, lsl #24
    d594:	bne	d628 <Fantasy_Movie_parse_json_table+0xaec>
    d598:	b	d59c <Fantasy_Movie_parse_json_table+0xa60>
    d59c:	ldr	r0, [fp, #-8]
    d5a0:	ldr	r1, [fp, #-12]
    d5a4:	str	r1, [fp, #-40]	; 0xffffffd8
    d5a8:	ldr	r2, [fp, #-16]
    d5ac:	movw	r3, #1
    d5b0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d5b4:	str	r0, [fp, #-12]
    d5b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d5bc:	ldr	r1, [fp, #-12]
    d5c0:	cmp	r0, r1
    d5c4:	beq	d610 <Fantasy_Movie_parse_json_table+0xad4>
    d5c8:	ldr	r0, [fp, #-8]
    d5cc:	ldr	r1, [fp, #-12]
    d5d0:	ldr	r2, [fp, #-16]
    d5d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d5d8:	movw	ip, #2
    d5dc:	str	r3, [sp, #24]
    d5e0:	mov	r3, ip
    d5e4:	movw	ip, #5
    d5e8:	uxth	ip, ip
    d5ec:	str	ip, [sp]
    d5f0:	ldr	ip, [sp, #24]
    d5f4:	str	ip, [sp, #4]
    d5f8:	movw	lr, #0
    d5fc:	movt	lr, #0
    d600:	str	lr, [sp, #8]
    d604:	bl	0 <flatcc_json_parser_union>
    d608:	str	r0, [fp, #-12]
    d60c:	b	d624 <Fantasy_Movie_parse_json_table+0xae8>
    d610:	ldr	r0, [fp, #-8]
    d614:	ldr	r1, [fp, #-12]
    d618:	ldr	r2, [fp, #-16]
    d61c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d620:	str	r0, [fp, #-12]
    d624:	b	d63c <Fantasy_Movie_parse_json_table+0xb00>
    d628:	ldr	r0, [fp, #-8]
    d62c:	ldr	r1, [fp, #-12]
    d630:	ldr	r2, [fp, #-16]
    d634:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d638:	str	r0, [fp, #-12]
    d63c:	b	d640 <Fantasy_Movie_parse_json_table+0xb04>
    d640:	b	d658 <Fantasy_Movie_parse_json_table+0xb1c>
    d644:	ldr	r0, [fp, #-8]
    d648:	ldr	r1, [fp, #-12]
    d64c:	ldr	r2, [fp, #-16]
    d650:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d654:	str	r0, [fp, #-12]
    d658:	b	d65c <Fantasy_Movie_parse_json_table+0xb20>
    d65c:	b	d660 <Fantasy_Movie_parse_json_table+0xb24>
    d660:	b	d664 <Fantasy_Movie_parse_json_table+0xb28>
    d664:	ldr	r0, [fp, #-8]
    d668:	ldr	r1, [fp, #-12]
    d66c:	ldr	r2, [fp, #-16]
    d670:	sub	r3, fp, #24
    d674:	bl	a03c <flatcc_json_parser_object_end>
    d678:	str	r0, [fp, #-12]
    d67c:	b	cbd8 <Fantasy_Movie_parse_json_table+0x9c>
    d680:	ldr	r0, [fp, #-8]
    d684:	ldr	r0, [r0, #24]
    d688:	cmp	r0, #0
    d68c:	beq	d694 <Fantasy_Movie_parse_json_table+0xb58>
    d690:	b	d6d8 <Fantasy_Movie_parse_json_table+0xb9c>
    d694:	ldr	r0, [fp, #-8]
    d698:	ldr	r1, [fp, #-12]
    d69c:	ldr	r2, [fp, #-16]
    d6a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d6a4:	bl	0 <flatcc_json_parser_finalize_unions>
    d6a8:	str	r0, [fp, #-12]
    d6ac:	ldr	r0, [fp, #-8]
    d6b0:	ldr	r0, [r0]
    d6b4:	bl	0 <flatcc_builder_end_table>
    d6b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    d6bc:	str	r0, [r1]
    d6c0:	cmp	r0, #0
    d6c4:	bne	d6cc <Fantasy_Movie_parse_json_table+0xb90>
    d6c8:	b	d6d8 <Fantasy_Movie_parse_json_table+0xb9c>
    d6cc:	ldr	r0, [fp, #-12]
    d6d0:	str	r0, [fp, #-4]
    d6d4:	b	d6f0 <Fantasy_Movie_parse_json_table+0xbb4>
    d6d8:	ldr	r0, [fp, #-8]
    d6dc:	ldr	r1, [fp, #-12]
    d6e0:	ldr	r2, [fp, #-16]
    d6e4:	movw	r3, #33	; 0x21
    d6e8:	bl	0 <flatcc_json_parser_set_error>
    d6ec:	str	r0, [fp, #-4]
    d6f0:	ldr	r0, [fp, #-4]
    d6f4:	mov	sp, fp
    d6f8:	pop	{fp, pc}

0000d6fc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    d6fc:	push	{fp, lr}
    d700:	mov	fp, sp
    d704:	sub	sp, sp, #64	; 0x40
    d708:	str	r0, [fp, #-8]
    d70c:	str	r1, [fp, #-12]
    d710:	str	r2, [fp, #-16]
    d714:	str	r3, [fp, #-20]	; 0xffffffec
    d718:	ldr	r0, [fp, #-20]	; 0xffffffec
    d71c:	movw	r1, #0
    d720:	str	r1, [r0]
    d724:	ldr	r0, [fp, #-8]
    d728:	ldr	r0, [r0]
    d72c:	movw	r1, #2
    d730:	bl	0 <flatcc_builder_start_table>
    d734:	cmp	r0, #0
    d738:	beq	d740 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x44>
    d73c:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    d740:	ldr	r0, [fp, #-8]
    d744:	ldr	r1, [fp, #-12]
    d748:	ldr	r2, [fp, #-16]
    d74c:	sub	r3, fp, #24
    d750:	bl	4bfc <flatcc_json_parser_object_start>
    d754:	str	r0, [fp, #-12]
    d758:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d75c:	cmp	r0, #0
    d760:	beq	daf4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    d764:	ldr	r0, [fp, #-8]
    d768:	ldr	r1, [fp, #-12]
    d76c:	ldr	r2, [fp, #-16]
    d770:	bl	4ce0 <flatcc_json_parser_symbol_start>
    d774:	str	r0, [fp, #-12]
    d778:	ldr	r0, [fp, #-12]
    d77c:	ldr	r1, [fp, #-16]
    d780:	bl	4d8c <flatcc_json_parser_symbol_part>
    d784:	str	r1, [sp, #20]
    d788:	str	r0, [sp, #16]
    d78c:	ldr	r0, [sp, #16]
    d790:	ldr	r1, [sp, #20]
    d794:	movw	r2, #24929	; 0x6161
    d798:	movt	r2, #24929	; 0x6161
    d79c:	eor	r1, r1, r2
    d7a0:	movw	r2, #25186	; 0x6262
    d7a4:	movt	r2, #24418	; 0x5f62
    d7a8:	eor	r0, r0, r2
    d7ac:	orr	r0, r0, r1
    d7b0:	cmp	r0, #0
    d7b4:	bne	dac4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c8>
    d7b8:	b	d7bc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0xc0>
    d7bc:	ldr	r0, [fp, #-12]
    d7c0:	add	r0, r0, #8
    d7c4:	str	r0, [fp, #-12]
    d7c8:	ldr	r0, [fp, #-12]
    d7cc:	ldr	r1, [fp, #-16]
    d7d0:	bl	4d8c <flatcc_json_parser_symbol_part>
    d7d4:	str	r1, [sp, #20]
    d7d8:	str	r0, [sp, #16]
    d7dc:	ldr	r0, [sp, #16]
    d7e0:	ldr	r1, [sp, #20]
    d7e4:	movw	r2, #24435	; 0x5f73
    d7e8:	movt	r2, #98	; 0x62
    d7ec:	eor	r2, r2, r1, lsr #8
    d7f0:	lsr	r0, r0, #8
    d7f4:	orr	r0, r0, r1, lsl #24
    d7f8:	movw	r1, #28787	; 0x7073
    d7fc:	movt	r1, #29797	; 0x7465
    d800:	eor	r0, r0, r1
    d804:	orr	r0, r0, r2
    d808:	cmp	r0, #0
    d80c:	bne	d950 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x254>
    d810:	b	d814 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x118>
    d814:	ldr	r0, [fp, #-8]
    d818:	ldr	r1, [fp, #-12]
    d81c:	str	r1, [sp, #24]
    d820:	ldr	r2, [fp, #-16]
    d824:	movw	r3, #7
    d828:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d82c:	str	r0, [fp, #-12]
    d830:	ldr	r0, [sp, #24]
    d834:	ldr	r1, [fp, #-12]
    d838:	cmp	r0, r1
    d83c:	beq	d938 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x23c>
    d840:	mov	r0, #0
    d844:	str	r0, [sp, #12]
    d848:	str	r0, [sp, #8]
    d84c:	ldr	r0, [fp, #-8]
    d850:	ldr	r1, [fp, #-12]
    d854:	str	r1, [sp, #24]
    d858:	ldr	r2, [fp, #-16]
    d85c:	add	r3, sp, #8
    d860:	bl	9408 <flatcc_json_parser_int64>
    d864:	str	r0, [fp, #-12]
    d868:	ldr	r0, [sp, #24]
    d86c:	ldr	r1, [fp, #-12]
    d870:	cmp	r0, r1
    d874:	bne	d8c8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    d878:	ldr	r0, [fp, #-8]
    d87c:	ldr	r1, [fp, #-12]
    d880:	str	r1, [sp, #24]
    d884:	ldr	r2, [fp, #-16]
    d888:	movw	r3, #0
    d88c:	movt	r3, #0
    d890:	add	ip, sp, #8
    d894:	str	ip, [sp]
    d898:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    d89c:	str	r0, [fp, #-12]
    d8a0:	ldr	r0, [fp, #-12]
    d8a4:	ldr	r1, [sp, #24]
    d8a8:	cmp	r0, r1
    d8ac:	beq	d8c0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c4>
    d8b0:	ldr	r0, [fp, #-12]
    d8b4:	ldr	r1, [fp, #-16]
    d8b8:	cmp	r0, r1
    d8bc:	bne	d8c4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c8>
    d8c0:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    d8c4:	b	d8c8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    d8c8:	ldr	r0, [sp, #8]
    d8cc:	ldr	r1, [sp, #12]
    d8d0:	orr	r0, r0, r1
    d8d4:	cmp	r0, #0
    d8d8:	bne	d8f4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1f8>
    d8dc:	b	d8e0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e4>
    d8e0:	ldr	r0, [fp, #-8]
    d8e4:	ldr	r0, [r0, #8]
    d8e8:	and	r0, r0, #2
    d8ec:	cmp	r0, #0
    d8f0:	beq	d934 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x238>
    d8f4:	ldr	r0, [fp, #-8]
    d8f8:	ldr	r0, [r0]
    d8fc:	movw	r1, #0
    d900:	movw	r2, #8
    d904:	movw	r3, #8
    d908:	uxth	r3, r3
    d90c:	bl	0 <flatcc_builder_table_add>
    d910:	str	r0, [fp, #-28]	; 0xffffffe4
    d914:	movw	r1, #0
    d918:	cmp	r0, r1
    d91c:	bne	d924 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x228>
    d920:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    d924:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d928:	ldr	r2, [sp, #8]
    d92c:	ldr	r3, [sp, #12]
    d930:	bl	9720 <flatbuffers_int64_write_to_pe>
    d934:	b	d94c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x250>
    d938:	ldr	r0, [fp, #-8]
    d93c:	ldr	r1, [fp, #-12]
    d940:	ldr	r2, [fp, #-16]
    d944:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d948:	str	r0, [fp, #-12]
    d94c:	b	dac0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    d950:	ldr	r0, [sp, #16]
    d954:	ldr	r1, [sp, #20]
    d958:	movw	r2, #29556	; 0x7374
    d95c:	movt	r2, #25183	; 0x625f
    d960:	eor	r1, r1, r2
    d964:	movw	r2, #29791	; 0x745f
    d968:	movt	r2, #24946	; 0x6172
    d96c:	eor	r0, r0, r2
    d970:	orr	r0, r0, r1
    d974:	cmp	r0, #0
    d978:	bne	daa8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3ac>
    d97c:	b	d980 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x284>
    d980:	ldr	r0, [fp, #-8]
    d984:	ldr	r1, [fp, #-12]
    d988:	str	r1, [sp, #24]
    d98c:	ldr	r2, [fp, #-16]
    d990:	movw	r3, #8
    d994:	bl	4dc4 <flatcc_json_parser_match_symbol>
    d998:	str	r0, [fp, #-12]
    d99c:	ldr	r0, [sp, #24]
    d9a0:	ldr	r1, [fp, #-12]
    d9a4:	cmp	r0, r1
    d9a8:	beq	da90 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x394>
    d9ac:	movw	r0, #0
    d9b0:	str	r0, [sp, #4]
    d9b4:	ldr	r0, [fp, #-8]
    d9b8:	ldr	r1, [fp, #-12]
    d9bc:	str	r1, [sp, #24]
    d9c0:	ldr	r2, [fp, #-16]
    d9c4:	add	r3, sp, #4
    d9c8:	bl	9758 <flatcc_json_parser_uint32>
    d9cc:	str	r0, [fp, #-12]
    d9d0:	ldr	r0, [sp, #24]
    d9d4:	ldr	r1, [fp, #-12]
    d9d8:	cmp	r0, r1
    d9dc:	bne	da30 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    d9e0:	ldr	r0, [fp, #-8]
    d9e4:	ldr	r1, [fp, #-12]
    d9e8:	str	r1, [sp, #24]
    d9ec:	ldr	r2, [fp, #-16]
    d9f0:	movw	r3, #0
    d9f4:	movt	r3, #0
    d9f8:	add	ip, sp, #4
    d9fc:	str	ip, [sp]
    da00:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    da04:	str	r0, [fp, #-12]
    da08:	ldr	r0, [fp, #-12]
    da0c:	ldr	r1, [sp, #24]
    da10:	cmp	r0, r1
    da14:	beq	da28 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x32c>
    da18:	ldr	r0, [fp, #-12]
    da1c:	ldr	r1, [fp, #-16]
    da20:	cmp	r0, r1
    da24:	bne	da2c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x330>
    da28:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    da2c:	b	da30 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    da30:	ldr	r0, [sp, #4]
    da34:	cmp	r0, #0
    da38:	bne	da50 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x354>
    da3c:	ldr	r0, [fp, #-8]
    da40:	ldr	r0, [r0, #8]
    da44:	and	r0, r0, #2
    da48:	cmp	r0, #0
    da4c:	beq	da8c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x390>
    da50:	ldr	r0, [fp, #-8]
    da54:	ldr	r0, [r0]
    da58:	movw	r1, #1
    da5c:	movw	r2, #4
    da60:	movw	r3, #4
    da64:	uxth	r3, r3
    da68:	bl	0 <flatcc_builder_table_add>
    da6c:	str	r0, [fp, #-28]	; 0xffffffe4
    da70:	movw	r1, #0
    da74:	cmp	r0, r1
    da78:	bne	da80 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x384>
    da7c:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    da80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    da84:	ldr	r1, [sp, #4]
    da88:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    da8c:	b	daa4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3a8>
    da90:	ldr	r0, [fp, #-8]
    da94:	ldr	r1, [fp, #-12]
    da98:	ldr	r2, [fp, #-16]
    da9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    daa0:	str	r0, [fp, #-12]
    daa4:	b	dabc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c0>
    daa8:	ldr	r0, [fp, #-8]
    daac:	ldr	r1, [fp, #-12]
    dab0:	ldr	r2, [fp, #-16]
    dab4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dab8:	str	r0, [fp, #-12]
    dabc:	b	dac0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    dac0:	b	dad8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3dc>
    dac4:	ldr	r0, [fp, #-8]
    dac8:	ldr	r1, [fp, #-12]
    dacc:	ldr	r2, [fp, #-16]
    dad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dad4:	str	r0, [fp, #-12]
    dad8:	ldr	r0, [fp, #-8]
    dadc:	ldr	r1, [fp, #-12]
    dae0:	ldr	r2, [fp, #-16]
    dae4:	sub	r3, fp, #24
    dae8:	bl	a03c <flatcc_json_parser_object_end>
    daec:	str	r0, [fp, #-12]
    daf0:	b	d758 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x5c>
    daf4:	ldr	r0, [fp, #-8]
    daf8:	ldr	r0, [r0, #24]
    dafc:	cmp	r0, #0
    db00:	beq	db08 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x40c>
    db04:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    db08:	ldr	r0, [fp, #-8]
    db0c:	ldr	r0, [r0]
    db10:	bl	0 <flatcc_builder_end_table>
    db14:	ldr	r1, [fp, #-20]	; 0xffffffec
    db18:	str	r0, [r1]
    db1c:	cmp	r0, #0
    db20:	bne	db28 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x42c>
    db24:	b	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    db28:	ldr	r0, [fp, #-12]
    db2c:	str	r0, [fp, #-4]
    db30:	b	db4c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x450>
    db34:	ldr	r0, [fp, #-8]
    db38:	ldr	r1, [fp, #-12]
    db3c:	ldr	r2, [fp, #-16]
    db40:	movw	r3, #33	; 0x21
    db44:	bl	0 <flatcc_json_parser_set_error>
    db48:	str	r0, [fp, #-4]
    db4c:	ldr	r0, [fp, #-4]
    db50:	mov	sp, fp
    db54:	pop	{fp, pc}

0000db58 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    db58:	push	{fp, lr}
    db5c:	mov	fp, sp
    db60:	sub	sp, sp, #96	; 0x60
    db64:	str	r0, [fp, #-8]
    db68:	str	r1, [fp, #-12]
    db6c:	str	r2, [fp, #-16]
    db70:	str	r3, [fp, #-20]	; 0xffffffec
    db74:	ldr	r0, [fp, #-20]	; 0xffffffec
    db78:	movw	r1, #0
    db7c:	str	r1, [r0]
    db80:	ldr	r0, [fp, #-8]
    db84:	ldr	r0, [r0]
    db88:	movw	r1, #9
    db8c:	bl	0 <flatcc_builder_start_table>
    db90:	cmp	r0, #0
    db94:	beq	db9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44>
    db98:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    db9c:	ldr	r0, [fp, #-8]
    dba0:	ldr	r1, [fp, #-12]
    dba4:	ldr	r2, [fp, #-16]
    dba8:	sub	r3, fp, #24
    dbac:	bl	4bfc <flatcc_json_parser_object_start>
    dbb0:	str	r0, [fp, #-12]
    dbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dbb8:	cmp	r0, #0
    dbbc:	beq	e714 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbbc>
    dbc0:	ldr	r0, [fp, #-8]
    dbc4:	ldr	r1, [fp, #-12]
    dbc8:	ldr	r2, [fp, #-16]
    dbcc:	bl	4ce0 <flatcc_json_parser_symbol_start>
    dbd0:	str	r0, [fp, #-12]
    dbd4:	ldr	r0, [fp, #-12]
    dbd8:	ldr	r1, [fp, #-16]
    dbdc:	bl	4d8c <flatcc_json_parser_symbol_part>
    dbe0:	str	r1, [sp, #52]	; 0x34
    dbe4:	str	r0, [sp, #48]	; 0x30
    dbe8:	ldr	r0, [sp, #52]	; 0x34
    dbec:	movw	r1, #25442	; 0x6362
    dbf0:	movt	r1, #25443	; 0x6363
    dbf4:	cmp	r0, r1
    dbf8:	bhi	e094 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x53c>
    dbfc:	b	dc00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8>
    dc00:	ldr	r0, [sp, #48]	; 0x30
    dc04:	ldr	r1, [sp, #52]	; 0x34
    dc08:	movw	r2, #24929	; 0x6161
    dc0c:	movt	r2, #24929	; 0x6161
    dc10:	eor	r1, r1, r2
    dc14:	movw	r2, #13108	; 0x3334
    dc18:	movt	r2, #12594	; 0x3132
    dc1c:	eor	r0, r0, r2
    dc20:	orr	r0, r0, r1
    dc24:	cmp	r0, #0
    dc28:	bne	dda4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x24c>
    dc2c:	b	dc30 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xd8>
    dc30:	ldr	r0, [fp, #-12]
    dc34:	add	r0, r0, #8
    dc38:	str	r0, [fp, #-12]
    dc3c:	ldr	r0, [fp, #-12]
    dc40:	ldr	r1, [fp, #-16]
    dc44:	bl	4d8c <flatcc_json_parser_symbol_part>
    dc48:	str	r1, [sp, #52]	; 0x34
    dc4c:	str	r0, [sp, #48]	; 0x30
    dc50:	ldrb	r0, [sp, #55]	; 0x37
    dc54:	mov	r1, #889192448	; 0x35000000
    dc58:	teq	r1, r0, lsl #24
    dc5c:	bne	dd8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x234>
    dc60:	b	dc64 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x10c>
    dc64:	ldr	r0, [fp, #-8]
    dc68:	ldr	r1, [fp, #-12]
    dc6c:	str	r1, [fp, #-40]	; 0xffffffd8
    dc70:	ldr	r2, [fp, #-16]
    dc74:	movw	r3, #1
    dc78:	bl	4dc4 <flatcc_json_parser_match_symbol>
    dc7c:	str	r0, [fp, #-12]
    dc80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dc84:	ldr	r1, [fp, #-12]
    dc88:	cmp	r0, r1
    dc8c:	beq	dd74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x21c>
    dc90:	movw	r0, #0
    dc94:	str	r0, [sp, #44]	; 0x2c
    dc98:	ldr	r0, [fp, #-8]
    dc9c:	ldr	r1, [fp, #-12]
    dca0:	str	r1, [fp, #-40]	; 0xffffffd8
    dca4:	ldr	r2, [fp, #-16]
    dca8:	add	r3, sp, #44	; 0x2c
    dcac:	bl	9758 <flatcc_json_parser_uint32>
    dcb0:	str	r0, [fp, #-12]
    dcb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dcb8:	ldr	r1, [fp, #-12]
    dcbc:	cmp	r0, r1
    dcc0:	bne	dd14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
    dcc4:	ldr	r0, [fp, #-8]
    dcc8:	ldr	r1, [fp, #-12]
    dccc:	str	r1, [fp, #-40]	; 0xffffffd8
    dcd0:	ldr	r2, [fp, #-16]
    dcd4:	movw	r3, #0
    dcd8:	movt	r3, #0
    dcdc:	add	ip, sp, #44	; 0x2c
    dce0:	str	ip, [sp]
    dce4:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    dce8:	str	r0, [fp, #-12]
    dcec:	ldr	r0, [fp, #-12]
    dcf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    dcf4:	cmp	r0, r1
    dcf8:	beq	dd0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b4>
    dcfc:	ldr	r0, [fp, #-12]
    dd00:	ldr	r1, [fp, #-16]
    dd04:	cmp	r0, r1
    dd08:	bne	dd10 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    dd0c:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    dd10:	b	dd14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
    dd14:	ldr	r0, [sp, #44]	; 0x2c
    dd18:	cmp	r0, #0
    dd1c:	bne	dd34 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1dc>
    dd20:	ldr	r0, [fp, #-8]
    dd24:	ldr	r0, [r0, #8]
    dd28:	and	r0, r0, #2
    dd2c:	cmp	r0, #0
    dd30:	beq	dd70 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x218>
    dd34:	ldr	r0, [fp, #-8]
    dd38:	ldr	r0, [r0]
    dd3c:	movw	r1, #1
    dd40:	movw	r2, #4
    dd44:	movw	r3, #4
    dd48:	uxth	r3, r3
    dd4c:	bl	0 <flatcc_builder_table_add>
    dd50:	str	r0, [fp, #-28]	; 0xffffffe4
    dd54:	movw	r1, #0
    dd58:	cmp	r0, r1
    dd5c:	bne	dd64 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x20c>
    dd60:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    dd64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dd68:	ldr	r1, [sp, #44]	; 0x2c
    dd6c:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    dd70:	b	dd88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x230>
    dd74:	ldr	r0, [fp, #-8]
    dd78:	ldr	r1, [fp, #-12]
    dd7c:	ldr	r2, [fp, #-16]
    dd80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dd84:	str	r0, [fp, #-12]
    dd88:	b	dda0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x248>
    dd8c:	ldr	r0, [fp, #-8]
    dd90:	ldr	r1, [fp, #-12]
    dd94:	ldr	r2, [fp, #-16]
    dd98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dd9c:	str	r0, [fp, #-12]
    dda0:	b	e090 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
    dda4:	ldr	r0, [sp, #52]	; 0x34
    dda8:	movw	r1, #24929	; 0x6161
    ddac:	movt	r1, #24929	; 0x6161
    ddb0:	teq	r0, r1
    ddb4:	bne	de48 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f0>
    ddb8:	b	ddbc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x264>
    ddbc:	ldr	r0, [fp, #-8]
    ddc0:	ldr	r1, [fp, #-12]
    ddc4:	str	r1, [fp, #-40]	; 0xffffffd8
    ddc8:	ldr	r2, [fp, #-16]
    ddcc:	movw	r3, #4
    ddd0:	bl	4dc4 <flatcc_json_parser_match_symbol>
    ddd4:	str	r0, [fp, #-12]
    ddd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dddc:	ldr	r1, [fp, #-12]
    dde0:	cmp	r0, r1
    dde4:	beq	de40 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e8>
    dde8:	ldr	r0, [fp, #-8]
    ddec:	ldr	r1, [fp, #-12]
    ddf0:	ldr	r2, [fp, #-16]
    ddf4:	sub	r3, fp, #32
    ddf8:	bl	0 <flatcc_json_parser_build_string>
    ddfc:	str	r0, [fp, #-12]
    de00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    de04:	cmp	r0, #0
    de08:	beq	de2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d4>
    de0c:	ldr	r0, [fp, #-8]
    de10:	ldr	r0, [r0]
    de14:	movw	r1, #0
    de18:	bl	0 <flatcc_builder_table_add_offset>
    de1c:	str	r0, [fp, #-36]	; 0xffffffdc
    de20:	movw	r1, #0
    de24:	cmp	r0, r1
    de28:	bne	de30 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d8>
    de2c:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    de30:	ldr	r0, [fp, #-32]	; 0xffffffe0
    de34:	ldr	r1, [fp, #-36]	; 0xffffffdc
    de38:	str	r0, [r1]
    de3c:	b	de44 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2ec>
    de40:	b	de50 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
    de44:	b	de4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f4>
    de48:	b	de50 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
    de4c:	b	e08c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    de50:	ldr	r0, [sp, #48]	; 0x30
    de54:	ldr	r1, [sp, #52]	; 0x34
    de58:	movw	r2, #25186	; 0x6262
    de5c:	movt	r2, #25186	; 0x6262
    de60:	eor	r1, r1, r2
    de64:	movw	r2, #13108	; 0x3334
    de68:	movt	r2, #12594	; 0x3132
    de6c:	eor	r0, r0, r2
    de70:	orr	r0, r0, r1
    de74:	cmp	r0, #0
    de78:	bne	dfbc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x464>
    de7c:	b	de80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x328>
    de80:	ldr	r0, [fp, #-8]
    de84:	ldr	r1, [fp, #-12]
    de88:	str	r1, [fp, #-40]	; 0xffffffd8
    de8c:	ldr	r2, [fp, #-16]
    de90:	movw	r3, #8
    de94:	bl	4dc4 <flatcc_json_parser_match_symbol>
    de98:	str	r0, [fp, #-12]
    de9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dea0:	ldr	r1, [fp, #-12]
    dea4:	cmp	r0, r1
    dea8:	beq	dfa4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
    deac:	mov	r0, #0
    deb0:	str	r0, [sp, #36]	; 0x24
    deb4:	str	r0, [sp, #32]
    deb8:	ldr	r0, [fp, #-8]
    debc:	ldr	r1, [fp, #-12]
    dec0:	str	r1, [fp, #-40]	; 0xffffffd8
    dec4:	ldr	r2, [fp, #-16]
    dec8:	add	r3, sp, #32
    decc:	bl	9408 <flatcc_json_parser_int64>
    ded0:	str	r0, [fp, #-12]
    ded4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ded8:	ldr	r1, [fp, #-12]
    dedc:	cmp	r0, r1
    dee0:	bne	df34 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
    dee4:	ldr	r0, [fp, #-8]
    dee8:	ldr	r1, [fp, #-12]
    deec:	str	r1, [fp, #-40]	; 0xffffffd8
    def0:	ldr	r2, [fp, #-16]
    def4:	movw	r3, #0
    def8:	movt	r3, #0
    defc:	add	ip, sp, #32
    df00:	str	ip, [sp]
    df04:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    df08:	str	r0, [fp, #-12]
    df0c:	ldr	r0, [fp, #-12]
    df10:	ldr	r1, [fp, #-40]	; 0xffffffd8
    df14:	cmp	r0, r1
    df18:	beq	df2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d4>
    df1c:	ldr	r0, [fp, #-12]
    df20:	ldr	r1, [fp, #-16]
    df24:	cmp	r0, r1
    df28:	bne	df30 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d8>
    df2c:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    df30:	b	df34 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
    df34:	ldr	r0, [sp, #32]
    df38:	ldr	r1, [sp, #36]	; 0x24
    df3c:	orr	r0, r0, r1
    df40:	cmp	r0, #0
    df44:	bne	df60 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x408>
    df48:	b	df4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3f4>
    df4c:	ldr	r0, [fp, #-8]
    df50:	ldr	r0, [r0, #8]
    df54:	and	r0, r0, #2
    df58:	cmp	r0, #0
    df5c:	beq	dfa0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x448>
    df60:	ldr	r0, [fp, #-8]
    df64:	ldr	r0, [r0]
    df68:	movw	r1, #3
    df6c:	movw	r2, #8
    df70:	movw	r3, #8
    df74:	uxth	r3, r3
    df78:	bl	0 <flatcc_builder_table_add>
    df7c:	str	r0, [fp, #-28]	; 0xffffffe4
    df80:	movw	r1, #0
    df84:	cmp	r0, r1
    df88:	bne	df90 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x438>
    df8c:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    df90:	ldr	r0, [fp, #-28]	; 0xffffffe4
    df94:	ldr	r2, [sp, #32]
    df98:	ldr	r3, [sp, #36]	; 0x24
    df9c:	bl	9720 <flatbuffers_int64_write_to_pe>
    dfa0:	b	dfb8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x460>
    dfa4:	ldr	r0, [fp, #-8]
    dfa8:	ldr	r1, [fp, #-12]
    dfac:	ldr	r2, [fp, #-16]
    dfb0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dfb4:	str	r0, [fp, #-12]
    dfb8:	b	e088 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
    dfbc:	ldr	r0, [sp, #52]	; 0x34
    dfc0:	movw	r1, #25186	; 0x6262
    dfc4:	movt	r1, #25186	; 0x6262
    dfc8:	teq	r0, r1
    dfcc:	bne	e070 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x518>
    dfd0:	b	dfd4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x47c>
    dfd4:	ldr	r0, [fp, #-8]
    dfd8:	ldr	r1, [fp, #-12]
    dfdc:	str	r1, [fp, #-40]	; 0xffffffd8
    dfe0:	ldr	r2, [fp, #-16]
    dfe4:	movw	r3, #4
    dfe8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    dfec:	str	r0, [fp, #-12]
    dff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dff4:	ldr	r1, [fp, #-12]
    dff8:	cmp	r0, r1
    dffc:	beq	e058 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x500>
    e000:	ldr	r0, [fp, #-8]
    e004:	ldr	r1, [fp, #-12]
    e008:	ldr	r2, [fp, #-16]
    e00c:	sub	r3, fp, #32
    e010:	bl	0 <flatcc_json_parser_build_string>
    e014:	str	r0, [fp, #-12]
    e018:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e01c:	cmp	r0, #0
    e020:	beq	e044 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4ec>
    e024:	ldr	r0, [fp, #-8]
    e028:	ldr	r0, [r0]
    e02c:	movw	r1, #2
    e030:	bl	0 <flatcc_builder_table_add_offset>
    e034:	str	r0, [fp, #-36]	; 0xffffffdc
    e038:	movw	r1, #0
    e03c:	cmp	r0, r1
    e040:	bne	e048 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4f0>
    e044:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e048:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e04c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e050:	str	r0, [r1]
    e054:	b	e06c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x514>
    e058:	ldr	r0, [fp, #-8]
    e05c:	ldr	r1, [fp, #-12]
    e060:	ldr	r2, [fp, #-16]
    e064:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e068:	str	r0, [fp, #-12]
    e06c:	b	e084 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x52c>
    e070:	ldr	r0, [fp, #-8]
    e074:	ldr	r1, [fp, #-12]
    e078:	ldr	r2, [fp, #-16]
    e07c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e080:	str	r0, [fp, #-12]
    e084:	b	e088 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
    e088:	b	e08c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    e08c:	b	e090 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
    e090:	b	e6f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
    e094:	ldr	r0, [sp, #48]	; 0x30
    e098:	ldr	r1, [sp, #52]	; 0x34
    e09c:	movw	r2, #25443	; 0x6363
    e0a0:	movt	r2, #25443	; 0x6363
    e0a4:	eor	r1, r1, r2
    e0a8:	movw	r2, #13108	; 0x3334
    e0ac:	movt	r2, #12594	; 0x3132
    e0b0:	eor	r0, r0, r2
    e0b4:	orr	r0, r0, r1
    e0b8:	cmp	r0, #0
    e0bc:	bne	e360 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x808>
    e0c0:	b	e0c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x56c>
    e0c4:	ldr	r0, [fp, #-8]
    e0c8:	ldr	r1, [fp, #-12]
    e0cc:	str	r1, [fp, #-40]	; 0xffffffd8
    e0d0:	ldr	r2, [fp, #-16]
    e0d4:	movw	r3, #8
    e0d8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    e0dc:	str	r0, [fp, #-12]
    e0e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e0e4:	ldr	r1, [fp, #-12]
    e0e8:	cmp	r0, r1
    e0ec:	beq	e1e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x690>
    e0f0:	mov	r0, #0
    e0f4:	str	r0, [sp, #28]
    e0f8:	str	r0, [sp, #24]
    e0fc:	ldr	r0, [fp, #-8]
    e100:	ldr	r1, [fp, #-12]
    e104:	str	r1, [fp, #-40]	; 0xffffffd8
    e108:	ldr	r2, [fp, #-16]
    e10c:	add	r3, sp, #24
    e110:	bl	9408 <flatcc_json_parser_int64>
    e114:	str	r0, [fp, #-12]
    e118:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e11c:	ldr	r1, [fp, #-12]
    e120:	cmp	r0, r1
    e124:	bne	e178 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
    e128:	ldr	r0, [fp, #-8]
    e12c:	ldr	r1, [fp, #-12]
    e130:	str	r1, [fp, #-40]	; 0xffffffd8
    e134:	ldr	r2, [fp, #-16]
    e138:	movw	r3, #0
    e13c:	movt	r3, #0
    e140:	add	ip, sp, #24
    e144:	str	ip, [sp]
    e148:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    e14c:	str	r0, [fp, #-12]
    e150:	ldr	r0, [fp, #-12]
    e154:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e158:	cmp	r0, r1
    e15c:	beq	e170 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x618>
    e160:	ldr	r0, [fp, #-12]
    e164:	ldr	r1, [fp, #-16]
    e168:	cmp	r0, r1
    e16c:	bne	e174 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x61c>
    e170:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e174:	b	e178 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
    e178:	ldr	r0, [sp, #24]
    e17c:	ldr	r1, [sp, #28]
    e180:	orr	r0, r0, r1
    e184:	cmp	r0, #0
    e188:	bne	e1a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x64c>
    e18c:	b	e190 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x638>
    e190:	ldr	r0, [fp, #-8]
    e194:	ldr	r0, [r0, #8]
    e198:	and	r0, r0, #2
    e19c:	cmp	r0, #0
    e1a0:	beq	e1e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x68c>
    e1a4:	ldr	r0, [fp, #-8]
    e1a8:	ldr	r0, [r0]
    e1ac:	movw	r1, #5
    e1b0:	movw	r2, #8
    e1b4:	movw	r3, #8
    e1b8:	uxth	r3, r3
    e1bc:	bl	0 <flatcc_builder_table_add>
    e1c0:	str	r0, [fp, #-28]	; 0xffffffe4
    e1c4:	movw	r1, #0
    e1c8:	cmp	r0, r1
    e1cc:	bne	e1d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x67c>
    e1d0:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e1d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e1d8:	ldr	r2, [sp, #24]
    e1dc:	ldr	r3, [sp, #28]
    e1e0:	bl	9720 <flatbuffers_int64_write_to_pe>
    e1e4:	b	e35c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
    e1e8:	ldr	r0, [fp, #-12]
    e1ec:	add	r0, r0, #8
    e1f0:	str	r0, [fp, #-12]
    e1f4:	ldr	r0, [fp, #-12]
    e1f8:	ldr	r1, [fp, #-16]
    e1fc:	bl	4d8c <flatcc_json_parser_symbol_part>
    e200:	str	r1, [sp, #52]	; 0x34
    e204:	str	r0, [sp, #48]	; 0x30
    e208:	ldrb	r0, [sp, #55]	; 0x37
    e20c:	mov	r1, #889192448	; 0x35000000
    e210:	teq	r1, r0, lsl #24
    e214:	bne	e344 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7ec>
    e218:	b	e21c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6c4>
    e21c:	ldr	r0, [fp, #-8]
    e220:	ldr	r1, [fp, #-12]
    e224:	str	r1, [fp, #-40]	; 0xffffffd8
    e228:	ldr	r2, [fp, #-16]
    e22c:	movw	r3, #1
    e230:	bl	4dc4 <flatcc_json_parser_match_symbol>
    e234:	str	r0, [fp, #-12]
    e238:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e23c:	ldr	r1, [fp, #-12]
    e240:	cmp	r0, r1
    e244:	beq	e32c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d4>
    e248:	movw	r0, #0
    e24c:	str	r0, [sp, #20]
    e250:	ldr	r0, [fp, #-8]
    e254:	ldr	r1, [fp, #-12]
    e258:	str	r1, [fp, #-40]	; 0xffffffd8
    e25c:	ldr	r2, [fp, #-16]
    e260:	add	r3, sp, #20
    e264:	bl	9758 <flatcc_json_parser_uint32>
    e268:	str	r0, [fp, #-12]
    e26c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e270:	ldr	r1, [fp, #-12]
    e274:	cmp	r0, r1
    e278:	bne	e2cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
    e27c:	ldr	r0, [fp, #-8]
    e280:	ldr	r1, [fp, #-12]
    e284:	str	r1, [fp, #-40]	; 0xffffffd8
    e288:	ldr	r2, [fp, #-16]
    e28c:	movw	r3, #0
    e290:	movt	r3, #0
    e294:	add	ip, sp, #20
    e298:	str	ip, [sp]
    e29c:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    e2a0:	str	r0, [fp, #-12]
    e2a4:	ldr	r0, [fp, #-12]
    e2a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e2ac:	cmp	r0, r1
    e2b0:	beq	e2c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x76c>
    e2b4:	ldr	r0, [fp, #-12]
    e2b8:	ldr	r1, [fp, #-16]
    e2bc:	cmp	r0, r1
    e2c0:	bne	e2c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x770>
    e2c4:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e2c8:	b	e2cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
    e2cc:	ldr	r0, [sp, #20]
    e2d0:	cmp	r0, #0
    e2d4:	bne	e2ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x794>
    e2d8:	ldr	r0, [fp, #-8]
    e2dc:	ldr	r0, [r0, #8]
    e2e0:	and	r0, r0, #2
    e2e4:	cmp	r0, #0
    e2e8:	beq	e328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d0>
    e2ec:	ldr	r0, [fp, #-8]
    e2f0:	ldr	r0, [r0]
    e2f4:	movw	r1, #6
    e2f8:	movw	r2, #4
    e2fc:	movw	r3, #4
    e300:	uxth	r3, r3
    e304:	bl	0 <flatcc_builder_table_add>
    e308:	str	r0, [fp, #-28]	; 0xffffffe4
    e30c:	movw	r1, #0
    e310:	cmp	r0, r1
    e314:	bne	e31c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7c4>
    e318:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e31c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e320:	ldr	r1, [sp, #20]
    e324:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    e328:	b	e340 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e8>
    e32c:	ldr	r0, [fp, #-8]
    e330:	ldr	r1, [fp, #-12]
    e334:	ldr	r2, [fp, #-16]
    e338:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e33c:	str	r0, [fp, #-12]
    e340:	b	e358 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x800>
    e344:	ldr	r0, [fp, #-8]
    e348:	ldr	r1, [fp, #-12]
    e34c:	ldr	r2, [fp, #-16]
    e350:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e354:	str	r0, [fp, #-12]
    e358:	b	e35c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
    e35c:	b	e6f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
    e360:	ldr	r0, [sp, #52]	; 0x34
    e364:	movw	r1, #25443	; 0x6363
    e368:	movt	r1, #25443	; 0x6363
    e36c:	teq	r0, r1
    e370:	bne	e404 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8ac>
    e374:	b	e378 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x820>
    e378:	ldr	r0, [fp, #-8]
    e37c:	ldr	r1, [fp, #-12]
    e380:	str	r1, [fp, #-40]	; 0xffffffd8
    e384:	ldr	r2, [fp, #-16]
    e388:	movw	r3, #4
    e38c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    e390:	str	r0, [fp, #-12]
    e394:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e398:	ldr	r1, [fp, #-12]
    e39c:	cmp	r0, r1
    e3a0:	beq	e3fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a4>
    e3a4:	ldr	r0, [fp, #-8]
    e3a8:	ldr	r1, [fp, #-12]
    e3ac:	ldr	r2, [fp, #-16]
    e3b0:	sub	r3, fp, #32
    e3b4:	bl	0 <flatcc_json_parser_build_string>
    e3b8:	str	r0, [fp, #-12]
    e3bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e3c0:	cmp	r0, #0
    e3c4:	beq	e3e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x890>
    e3c8:	ldr	r0, [fp, #-8]
    e3cc:	ldr	r0, [r0]
    e3d0:	movw	r1, #4
    e3d4:	bl	0 <flatcc_builder_table_add_offset>
    e3d8:	str	r0, [fp, #-36]	; 0xffffffdc
    e3dc:	movw	r1, #0
    e3e0:	cmp	r0, r1
    e3e4:	bne	e3ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x894>
    e3e8:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e3ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e3f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e3f4:	str	r0, [r1]
    e3f8:	b	e400 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
    e3fc:	b	e40c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
    e400:	b	e408 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b0>
    e404:	b	e40c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
    e408:	b	e6f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
    e40c:	ldr	r0, [sp, #48]	; 0x30
    e410:	ldr	r1, [sp, #52]	; 0x34
    e414:	movw	r2, #25700	; 0x6464
    e418:	movt	r2, #25700	; 0x6464
    e41c:	eor	r1, r1, r2
    e420:	movw	r2, #13108	; 0x3334
    e424:	movt	r2, #12594	; 0x3132
    e428:	eor	r0, r0, r2
    e42c:	orr	r0, r0, r1
    e430:	cmp	r0, #0
    e434:	bne	e6d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb80>
    e438:	b	e43c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8e4>
    e43c:	ldr	r0, [fp, #-8]
    e440:	ldr	r1, [fp, #-12]
    e444:	str	r1, [fp, #-40]	; 0xffffffd8
    e448:	ldr	r2, [fp, #-16]
    e44c:	movw	r3, #8
    e450:	bl	4dc4 <flatcc_json_parser_match_symbol>
    e454:	str	r0, [fp, #-12]
    e458:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e45c:	ldr	r1, [fp, #-12]
    e460:	cmp	r0, r1
    e464:	beq	e560 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa08>
    e468:	mov	r0, #0
    e46c:	str	r0, [sp, #12]
    e470:	str	r0, [sp, #8]
    e474:	ldr	r0, [fp, #-8]
    e478:	ldr	r1, [fp, #-12]
    e47c:	str	r1, [fp, #-40]	; 0xffffffd8
    e480:	ldr	r2, [fp, #-16]
    e484:	add	r3, sp, #8
    e488:	bl	9408 <flatcc_json_parser_int64>
    e48c:	str	r0, [fp, #-12]
    e490:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e494:	ldr	r1, [fp, #-12]
    e498:	cmp	r0, r1
    e49c:	bne	e4f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
    e4a0:	ldr	r0, [fp, #-8]
    e4a4:	ldr	r1, [fp, #-12]
    e4a8:	str	r1, [fp, #-40]	; 0xffffffd8
    e4ac:	ldr	r2, [fp, #-16]
    e4b0:	movw	r3, #0
    e4b4:	movt	r3, #0
    e4b8:	add	ip, sp, #8
    e4bc:	str	ip, [sp]
    e4c0:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    e4c4:	str	r0, [fp, #-12]
    e4c8:	ldr	r0, [fp, #-12]
    e4cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e4d0:	cmp	r0, r1
    e4d4:	beq	e4e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x990>
    e4d8:	ldr	r0, [fp, #-12]
    e4dc:	ldr	r1, [fp, #-16]
    e4e0:	cmp	r0, r1
    e4e4:	bne	e4ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x994>
    e4e8:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e4ec:	b	e4f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
    e4f0:	ldr	r0, [sp, #8]
    e4f4:	ldr	r1, [sp, #12]
    e4f8:	orr	r0, r0, r1
    e4fc:	cmp	r0, #0
    e500:	bne	e51c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9c4>
    e504:	b	e508 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9b0>
    e508:	ldr	r0, [fp, #-8]
    e50c:	ldr	r0, [r0, #8]
    e510:	and	r0, r0, #2
    e514:	cmp	r0, #0
    e518:	beq	e55c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa04>
    e51c:	ldr	r0, [fp, #-8]
    e520:	ldr	r0, [r0]
    e524:	movw	r1, #7
    e528:	movw	r2, #8
    e52c:	movw	r3, #8
    e530:	uxth	r3, r3
    e534:	bl	0 <flatcc_builder_table_add>
    e538:	str	r0, [fp, #-28]	; 0xffffffe4
    e53c:	movw	r1, #0
    e540:	cmp	r0, r1
    e544:	bne	e54c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9f4>
    e548:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e54c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e550:	ldr	r2, [sp, #8]
    e554:	ldr	r3, [sp, #12]
    e558:	bl	9720 <flatbuffers_int64_write_to_pe>
    e55c:	b	e6d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
    e560:	ldr	r0, [fp, #-12]
    e564:	add	r0, r0, #8
    e568:	str	r0, [fp, #-12]
    e56c:	ldr	r0, [fp, #-12]
    e570:	ldr	r1, [fp, #-16]
    e574:	bl	4d8c <flatcc_json_parser_symbol_part>
    e578:	str	r1, [sp, #52]	; 0x34
    e57c:	str	r0, [sp, #48]	; 0x30
    e580:	ldrb	r0, [sp, #55]	; 0x37
    e584:	mov	r1, #889192448	; 0x35000000
    e588:	teq	r1, r0, lsl #24
    e58c:	bne	e6bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb64>
    e590:	b	e594 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa3c>
    e594:	ldr	r0, [fp, #-8]
    e598:	ldr	r1, [fp, #-12]
    e59c:	str	r1, [fp, #-40]	; 0xffffffd8
    e5a0:	ldr	r2, [fp, #-16]
    e5a4:	movw	r3, #1
    e5a8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    e5ac:	str	r0, [fp, #-12]
    e5b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e5b4:	ldr	r1, [fp, #-12]
    e5b8:	cmp	r0, r1
    e5bc:	beq	e6a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb4c>
    e5c0:	movw	r0, #0
    e5c4:	str	r0, [sp, #4]
    e5c8:	ldr	r0, [fp, #-8]
    e5cc:	ldr	r1, [fp, #-12]
    e5d0:	str	r1, [fp, #-40]	; 0xffffffd8
    e5d4:	ldr	r2, [fp, #-16]
    e5d8:	add	r3, sp, #4
    e5dc:	bl	9758 <flatcc_json_parser_uint32>
    e5e0:	str	r0, [fp, #-12]
    e5e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e5e8:	ldr	r1, [fp, #-12]
    e5ec:	cmp	r0, r1
    e5f0:	bne	e644 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
    e5f4:	ldr	r0, [fp, #-8]
    e5f8:	ldr	r1, [fp, #-12]
    e5fc:	str	r1, [fp, #-40]	; 0xffffffd8
    e600:	ldr	r2, [fp, #-16]
    e604:	movw	r3, #0
    e608:	movt	r3, #0
    e60c:	add	ip, sp, #4
    e610:	str	ip, [sp]
    e614:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    e618:	str	r0, [fp, #-12]
    e61c:	ldr	r0, [fp, #-12]
    e620:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e624:	cmp	r0, r1
    e628:	beq	e63c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae4>
    e62c:	ldr	r0, [fp, #-12]
    e630:	ldr	r1, [fp, #-16]
    e634:	cmp	r0, r1
    e638:	bne	e640 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae8>
    e63c:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e640:	b	e644 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
    e644:	ldr	r0, [sp, #4]
    e648:	cmp	r0, #0
    e64c:	bne	e664 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb0c>
    e650:	ldr	r0, [fp, #-8]
    e654:	ldr	r0, [r0, #8]
    e658:	and	r0, r0, #2
    e65c:	cmp	r0, #0
    e660:	beq	e6a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb48>
    e664:	ldr	r0, [fp, #-8]
    e668:	ldr	r0, [r0]
    e66c:	movw	r1, #8
    e670:	movw	r2, #4
    e674:	movw	r3, #4
    e678:	uxth	r3, r3
    e67c:	bl	0 <flatcc_builder_table_add>
    e680:	str	r0, [fp, #-28]	; 0xffffffe4
    e684:	movw	r1, #0
    e688:	cmp	r0, r1
    e68c:	bne	e694 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb3c>
    e690:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e694:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e698:	ldr	r1, [sp, #4]
    e69c:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    e6a0:	b	e6b8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb60>
    e6a4:	ldr	r0, [fp, #-8]
    e6a8:	ldr	r1, [fp, #-12]
    e6ac:	ldr	r2, [fp, #-16]
    e6b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6b4:	str	r0, [fp, #-12]
    e6b8:	b	e6d0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb78>
    e6bc:	ldr	r0, [fp, #-8]
    e6c0:	ldr	r1, [fp, #-12]
    e6c4:	ldr	r2, [fp, #-16]
    e6c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6cc:	str	r0, [fp, #-12]
    e6d0:	b	e6d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
    e6d4:	b	e6ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb94>
    e6d8:	ldr	r0, [fp, #-8]
    e6dc:	ldr	r1, [fp, #-12]
    e6e0:	ldr	r2, [fp, #-16]
    e6e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6e8:	str	r0, [fp, #-12]
    e6ec:	b	e6f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
    e6f0:	b	e6f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
    e6f4:	b	e6f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
    e6f8:	ldr	r0, [fp, #-8]
    e6fc:	ldr	r1, [fp, #-12]
    e700:	ldr	r2, [fp, #-16]
    e704:	sub	r3, fp, #24
    e708:	bl	a03c <flatcc_json_parser_object_end>
    e70c:	str	r0, [fp, #-12]
    e710:	b	dbb4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5c>
    e714:	ldr	r0, [fp, #-8]
    e718:	ldr	r0, [r0, #24]
    e71c:	cmp	r0, #0
    e720:	beq	e728 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbd0>
    e724:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e728:	ldr	r0, [fp, #-8]
    e72c:	ldr	r0, [r0]
    e730:	bl	0 <flatcc_builder_end_table>
    e734:	ldr	r1, [fp, #-20]	; 0xffffffec
    e738:	str	r0, [r1]
    e73c:	cmp	r0, #0
    e740:	bne	e748 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf0>
    e744:	b	e754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e748:	ldr	r0, [fp, #-12]
    e74c:	str	r0, [fp, #-4]
    e750:	b	e76c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
    e754:	ldr	r0, [fp, #-8]
    e758:	ldr	r1, [fp, #-12]
    e75c:	ldr	r2, [fp, #-16]
    e760:	movw	r3, #33	; 0x21
    e764:	bl	0 <flatcc_json_parser_set_error>
    e768:	str	r0, [fp, #-4]
    e76c:	ldr	r0, [fp, #-4]
    e770:	mov	sp, fp
    e774:	pop	{fp, pc}

0000e778 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    e778:	push	{fp, lr}
    e77c:	mov	fp, sp
    e780:	sub	sp, sp, #72	; 0x48
    e784:	str	r0, [fp, #-8]
    e788:	str	r1, [fp, #-12]
    e78c:	str	r2, [fp, #-16]
    e790:	str	r3, [fp, #-20]	; 0xffffffec
    e794:	ldr	r0, [fp, #-20]	; 0xffffffec
    e798:	movw	r1, #0
    e79c:	str	r1, [r0]
    e7a0:	ldr	r0, [fp, #-8]
    e7a4:	ldr	r0, [r0]
    e7a8:	movw	r1, #2
    e7ac:	bl	0 <flatcc_builder_start_table>
    e7b0:	cmp	r0, #0
    e7b4:	beq	e7bc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x44>
    e7b8:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    e7bc:	ldr	r0, [fp, #-8]
    e7c0:	ldr	r1, [fp, #-12]
    e7c4:	ldr	r2, [fp, #-16]
    e7c8:	sub	r3, fp, #24
    e7cc:	bl	4bfc <flatcc_json_parser_object_start>
    e7d0:	str	r0, [fp, #-12]
    e7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e7d8:	cmp	r0, #0
    e7dc:	beq	ebd0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x458>
    e7e0:	ldr	r0, [fp, #-8]
    e7e4:	ldr	r1, [fp, #-12]
    e7e8:	ldr	r2, [fp, #-16]
    e7ec:	bl	4ce0 <flatcc_json_parser_symbol_start>
    e7f0:	str	r0, [fp, #-12]
    e7f4:	ldr	r0, [fp, #-12]
    e7f8:	ldr	r1, [fp, #-16]
    e7fc:	bl	4d8c <flatcc_json_parser_symbol_part>
    e800:	str	r1, [sp, #28]
    e804:	str	r0, [sp, #24]
    e808:	ldr	r0, [sp, #24]
    e80c:	ldr	r1, [sp, #28]
    e810:	movw	r2, #24929	; 0x6161
    e814:	movt	r2, #24929	; 0x6161
    e818:	eor	r1, r1, r2
    e81c:	movw	r2, #25186	; 0x6262
    e820:	movt	r2, #24418	; 0x5f62
    e824:	eor	r0, r0, r2
    e828:	orr	r0, r0, r1
    e82c:	cmp	r0, #0
    e830:	bne	eba0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x428>
    e834:	b	e838 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0xc0>
    e838:	ldr	r0, [fp, #-12]
    e83c:	add	r0, r0, #8
    e840:	str	r0, [fp, #-12]
    e844:	ldr	r0, [fp, #-12]
    e848:	ldr	r1, [fp, #-16]
    e84c:	bl	4d8c <flatcc_json_parser_symbol_part>
    e850:	str	r1, [sp, #28]
    e854:	str	r0, [sp, #24]
    e858:	ldr	r0, [sp, #24]
    e85c:	ldr	r1, [sp, #28]
    e860:	movw	r2, #29556	; 0x7374
    e864:	movt	r2, #25183	; 0x625f
    e868:	eor	r1, r1, r2
    e86c:	movw	r2, #29791	; 0x745f
    e870:	movt	r2, #24946	; 0x6172
    e874:	eor	r0, r0, r2
    e878:	orr	r0, r0, r1
    e87c:	cmp	r0, #0
    e880:	bne	ea10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x298>
    e884:	b	e888 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x110>
    e888:	ldr	r0, [fp, #-12]
    e88c:	add	r0, r0, #8
    e890:	str	r0, [fp, #-12]
    e894:	ldr	r0, [fp, #-12]
    e898:	ldr	r1, [fp, #-16]
    e89c:	bl	4d8c <flatcc_json_parser_symbol_part>
    e8a0:	str	r1, [sp, #28]
    e8a4:	str	r0, [sp, #24]
    e8a8:	ldrb	r0, [sp, #27]
    e8ac:	ldr	r1, [sp, #28]
    e8b0:	movw	r2, #25968	; 0x6570
    e8b4:	movt	r2, #29556	; 0x7374
    e8b8:	eor	r1, r1, r2
    e8bc:	eor	r0, r0, #115	; 0x73
    e8c0:	orr	r0, r1, r0, lsl #24
    e8c4:	cmp	r0, #0
    e8c8:	bne	e9f8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x280>
    e8cc:	b	e8d0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x158>
    e8d0:	ldr	r0, [fp, #-8]
    e8d4:	ldr	r1, [fp, #-12]
    e8d8:	str	r1, [sp, #32]
    e8dc:	ldr	r2, [fp, #-16]
    e8e0:	movw	r3, #5
    e8e4:	bl	4dc4 <flatcc_json_parser_match_symbol>
    e8e8:	str	r0, [fp, #-12]
    e8ec:	ldr	r0, [sp, #32]
    e8f0:	ldr	r1, [fp, #-12]
    e8f4:	cmp	r0, r1
    e8f8:	beq	e9e0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x268>
    e8fc:	movw	r0, #0
    e900:	str	r0, [sp, #20]
    e904:	ldr	r0, [fp, #-8]
    e908:	ldr	r1, [fp, #-12]
    e90c:	str	r1, [sp, #32]
    e910:	ldr	r2, [fp, #-16]
    e914:	add	r3, sp, #20
    e918:	bl	9758 <flatcc_json_parser_uint32>
    e91c:	str	r0, [fp, #-12]
    e920:	ldr	r0, [sp, #32]
    e924:	ldr	r1, [fp, #-12]
    e928:	cmp	r0, r1
    e92c:	bne	e980 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x208>
    e930:	ldr	r0, [fp, #-8]
    e934:	ldr	r1, [fp, #-12]
    e938:	str	r1, [sp, #32]
    e93c:	ldr	r2, [fp, #-16]
    e940:	movw	r3, #0
    e944:	movt	r3, #0
    e948:	add	ip, sp, #20
    e94c:	str	ip, [sp]
    e950:	bl	9830 <flatcc_json_parser_symbolic_uint32>
    e954:	str	r0, [fp, #-12]
    e958:	ldr	r0, [fp, #-12]
    e95c:	ldr	r1, [sp, #32]
    e960:	cmp	r0, r1
    e964:	beq	e978 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x200>
    e968:	ldr	r0, [fp, #-12]
    e96c:	ldr	r1, [fp, #-16]
    e970:	cmp	r0, r1
    e974:	bne	e97c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x204>
    e978:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    e97c:	b	e980 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x208>
    e980:	ldr	r0, [sp, #20]
    e984:	cmp	r0, #0
    e988:	bne	e9a0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x228>
    e98c:	ldr	r0, [fp, #-8]
    e990:	ldr	r0, [r0, #8]
    e994:	and	r0, r0, #2
    e998:	cmp	r0, #0
    e99c:	beq	e9dc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x264>
    e9a0:	ldr	r0, [fp, #-8]
    e9a4:	ldr	r0, [r0]
    e9a8:	movw	r1, #1
    e9ac:	movw	r2, #4
    e9b0:	movw	r3, #4
    e9b4:	uxth	r3, r3
    e9b8:	bl	0 <flatcc_builder_table_add>
    e9bc:	str	r0, [fp, #-28]	; 0xffffffe4
    e9c0:	movw	r1, #0
    e9c4:	cmp	r0, r1
    e9c8:	bne	e9d0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x258>
    e9cc:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    e9d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e9d4:	ldr	r1, [sp, #20]
    e9d8:	bl	9a58 <flatbuffers_uint32_write_to_pe>
    e9dc:	b	e9f4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x27c>
    e9e0:	ldr	r0, [fp, #-8]
    e9e4:	ldr	r1, [fp, #-12]
    e9e8:	ldr	r2, [fp, #-16]
    e9ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e9f0:	str	r0, [fp, #-12]
    e9f4:	b	ea0c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x294>
    e9f8:	ldr	r0, [fp, #-8]
    e9fc:	ldr	r1, [fp, #-12]
    ea00:	ldr	r2, [fp, #-16]
    ea04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ea08:	str	r0, [fp, #-12]
    ea0c:	b	eb9c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x424>
    ea10:	ldr	r0, [sp, #24]
    ea14:	ldr	r1, [sp, #28]
    ea18:	movw	r2, #24435	; 0x5f73
    ea1c:	movt	r2, #98	; 0x62
    ea20:	eor	r2, r2, r1, lsr #8
    ea24:	lsr	r0, r0, #8
    ea28:	orr	r0, r0, r1, lsl #24
    ea2c:	movw	r1, #28787	; 0x7073
    ea30:	movt	r1, #29797	; 0x7465
    ea34:	eor	r0, r0, r1
    ea38:	orr	r0, r0, r2
    ea3c:	cmp	r0, #0
    ea40:	bne	eb84 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x40c>
    ea44:	b	ea48 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x2d0>
    ea48:	ldr	r0, [fp, #-8]
    ea4c:	ldr	r1, [fp, #-12]
    ea50:	str	r1, [sp, #32]
    ea54:	ldr	r2, [fp, #-16]
    ea58:	movw	r3, #7
    ea5c:	bl	4dc4 <flatcc_json_parser_match_symbol>
    ea60:	str	r0, [fp, #-12]
    ea64:	ldr	r0, [sp, #32]
    ea68:	ldr	r1, [fp, #-12]
    ea6c:	cmp	r0, r1
    ea70:	beq	eb6c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f4>
    ea74:	mov	r0, #0
    ea78:	str	r0, [sp, #12]
    ea7c:	str	r0, [sp, #8]
    ea80:	ldr	r0, [fp, #-8]
    ea84:	ldr	r1, [fp, #-12]
    ea88:	str	r1, [sp, #32]
    ea8c:	ldr	r2, [fp, #-16]
    ea90:	add	r3, sp, #8
    ea94:	bl	9408 <flatcc_json_parser_int64>
    ea98:	str	r0, [fp, #-12]
    ea9c:	ldr	r0, [sp, #32]
    eaa0:	ldr	r1, [fp, #-12]
    eaa4:	cmp	r0, r1
    eaa8:	bne	eafc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x384>
    eaac:	ldr	r0, [fp, #-8]
    eab0:	ldr	r1, [fp, #-12]
    eab4:	str	r1, [sp, #32]
    eab8:	ldr	r2, [fp, #-16]
    eabc:	movw	r3, #0
    eac0:	movt	r3, #0
    eac4:	add	ip, sp, #8
    eac8:	str	ip, [sp]
    eacc:	bl	94e0 <flatcc_json_parser_symbolic_int64>
    ead0:	str	r0, [fp, #-12]
    ead4:	ldr	r0, [fp, #-12]
    ead8:	ldr	r1, [sp, #32]
    eadc:	cmp	r0, r1
    eae0:	beq	eaf4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x37c>
    eae4:	ldr	r0, [fp, #-12]
    eae8:	ldr	r1, [fp, #-16]
    eaec:	cmp	r0, r1
    eaf0:	bne	eaf8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x380>
    eaf4:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    eaf8:	b	eafc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x384>
    eafc:	ldr	r0, [sp, #8]
    eb00:	ldr	r1, [sp, #12]
    eb04:	orr	r0, r0, r1
    eb08:	cmp	r0, #0
    eb0c:	bne	eb28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b0>
    eb10:	b	eb14 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x39c>
    eb14:	ldr	r0, [fp, #-8]
    eb18:	ldr	r0, [r0, #8]
    eb1c:	and	r0, r0, #2
    eb20:	cmp	r0, #0
    eb24:	beq	eb68 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f0>
    eb28:	ldr	r0, [fp, #-8]
    eb2c:	ldr	r0, [r0]
    eb30:	movw	r1, #0
    eb34:	movw	r2, #8
    eb38:	movw	r3, #8
    eb3c:	uxth	r3, r3
    eb40:	bl	0 <flatcc_builder_table_add>
    eb44:	str	r0, [fp, #-28]	; 0xffffffe4
    eb48:	movw	r1, #0
    eb4c:	cmp	r0, r1
    eb50:	bne	eb58 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    eb54:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    eb58:	ldr	r0, [fp, #-28]	; 0xffffffe4
    eb5c:	ldr	r2, [sp, #8]
    eb60:	ldr	r3, [sp, #12]
    eb64:	bl	9720 <flatbuffers_int64_write_to_pe>
    eb68:	b	eb80 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x408>
    eb6c:	ldr	r0, [fp, #-8]
    eb70:	ldr	r1, [fp, #-12]
    eb74:	ldr	r2, [fp, #-16]
    eb78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb7c:	str	r0, [fp, #-12]
    eb80:	b	eb98 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x420>
    eb84:	ldr	r0, [fp, #-8]
    eb88:	ldr	r1, [fp, #-12]
    eb8c:	ldr	r2, [fp, #-16]
    eb90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb94:	str	r0, [fp, #-12]
    eb98:	b	eb9c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x424>
    eb9c:	b	ebb4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x43c>
    eba0:	ldr	r0, [fp, #-8]
    eba4:	ldr	r1, [fp, #-12]
    eba8:	ldr	r2, [fp, #-16]
    ebac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ebb0:	str	r0, [fp, #-12]
    ebb4:	ldr	r0, [fp, #-8]
    ebb8:	ldr	r1, [fp, #-12]
    ebbc:	ldr	r2, [fp, #-16]
    ebc0:	sub	r3, fp, #24
    ebc4:	bl	a03c <flatcc_json_parser_object_end>
    ebc8:	str	r0, [fp, #-12]
    ebcc:	b	e7d4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x5c>
    ebd0:	ldr	r0, [fp, #-8]
    ebd4:	ldr	r0, [r0, #24]
    ebd8:	cmp	r0, #0
    ebdc:	beq	ebe4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x46c>
    ebe0:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    ebe4:	ldr	r0, [fp, #-8]
    ebe8:	ldr	r0, [r0]
    ebec:	bl	0 <flatcc_builder_end_table>
    ebf0:	ldr	r1, [fp, #-20]	; 0xffffffec
    ebf4:	str	r0, [r1]
    ebf8:	cmp	r0, #0
    ebfc:	bne	ec04 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x48c>
    ec00:	b	ec10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    ec04:	ldr	r0, [fp, #-12]
    ec08:	str	r0, [fp, #-4]
    ec0c:	b	ec28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x4b0>
    ec10:	ldr	r0, [fp, #-8]
    ec14:	ldr	r1, [fp, #-12]
    ec18:	ldr	r2, [fp, #-16]
    ec1c:	movw	r3, #33	; 0x21
    ec20:	bl	0 <flatcc_json_parser_set_error>
    ec24:	str	r0, [fp, #-4]
    ec28:	ldr	r0, [fp, #-4]
    ec2c:	mov	sp, fp
    ec30:	pop	{fp, pc}

0000ec34 <monster_test_local_Fantasy_json_parser_enum>:
    ec34:	push	{fp, lr}
    ec38:	mov	fp, sp
    ec3c:	sub	sp, sp, #56	; 0x38
    ec40:	ldr	ip, [fp, #12]
    ec44:	ldr	lr, [fp, #8]
    ec48:	str	r0, [fp, #-8]
    ec4c:	str	r1, [fp, #-12]
    ec50:	str	r2, [fp, #-16]
    ec54:	str	r3, [fp, #-20]	; 0xffffffec
    ec58:	ldr	r0, [fp, #-12]
    ec5c:	str	r0, [fp, #-24]	; 0xffffffe8
    ec60:	ldr	r0, [fp, #-12]
    ec64:	ldr	r1, [fp, #-16]
    ec68:	str	ip, [sp, #12]
    ec6c:	str	lr, [sp, #8]
    ec70:	bl	4d8c <flatcc_json_parser_symbol_part>
    ec74:	str	r1, [sp, #20]
    ec78:	str	r0, [sp, #16]
    ec7c:	ldr	r0, [sp, #16]
    ec80:	ldr	r1, [sp, #20]
    ec84:	movw	r2, #24946	; 0x6172
    ec88:	movt	r2, #17256	; 0x4368
    ec8c:	eor	r1, r1, r2
    ec90:	movw	r2, #29797	; 0x7465
    ec94:	movt	r2, #24931	; 0x6163
    ec98:	eor	r0, r0, r2
    ec9c:	orr	r0, r0, r1
    eca0:	cmp	r0, #0
    eca4:	bne	ed58 <monster_test_local_Fantasy_json_parser_enum+0x124>
    eca8:	b	ecac <monster_test_local_Fantasy_json_parser_enum+0x78>
    ecac:	ldr	r0, [fp, #-12]
    ecb0:	add	r0, r0, #8
    ecb4:	str	r0, [fp, #-12]
    ecb8:	ldr	r0, [fp, #-12]
    ecbc:	ldr	r1, [fp, #-16]
    ecc0:	bl	4d8c <flatcc_json_parser_symbol_part>
    ecc4:	str	r1, [sp, #20]
    ecc8:	str	r0, [sp, #16]
    eccc:	ldrb	r0, [sp, #23]
    ecd0:	mov	r1, #1912602624	; 0x72000000
    ecd4:	teq	r1, r0, lsl #24
    ecd8:	bne	ed48 <monster_test_local_Fantasy_json_parser_enum+0x114>
    ecdc:	b	ece0 <monster_test_local_Fantasy_json_parser_enum+0xac>
    ece0:	ldr	r0, [fp, #-8]
    ece4:	ldr	r1, [fp, #-12]
    ece8:	str	r1, [sp, #28]
    ecec:	ldr	r2, [fp, #-16]
    ecf0:	movw	r3, #1
    ecf4:	bl	a3b0 <flatcc_json_parser_match_scope>
    ecf8:	str	r0, [fp, #-12]
    ecfc:	ldr	r0, [fp, #-12]
    ed00:	ldr	r1, [sp, #28]
    ed04:	cmp	r0, r1
    ed08:	beq	ed38 <monster_test_local_Fantasy_json_parser_enum+0x104>
    ed0c:	ldr	r0, [fp, #-8]
    ed10:	ldr	r1, [fp, #-12]
    ed14:	ldr	r2, [fp, #-16]
    ed18:	ldr	r3, [fp, #-20]	; 0xffffffec
    ed1c:	ldr	ip, [fp, #8]
    ed20:	ldr	lr, [fp, #12]
    ed24:	str	ip, [sp]
    ed28:	str	lr, [sp, #4]
    ed2c:	bl	af28 <Fantasy_Character_parse_json_enum>
    ed30:	str	r0, [fp, #-12]
    ed34:	b	ed44 <monster_test_local_Fantasy_json_parser_enum+0x110>
    ed38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ed3c:	str	r0, [fp, #-4]
    ed40:	b	ed6c <monster_test_local_Fantasy_json_parser_enum+0x138>
    ed44:	b	ed54 <monster_test_local_Fantasy_json_parser_enum+0x120>
    ed48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ed4c:	str	r0, [fp, #-4]
    ed50:	b	ed6c <monster_test_local_Fantasy_json_parser_enum+0x138>
    ed54:	b	ed64 <monster_test_local_Fantasy_json_parser_enum+0x130>
    ed58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ed5c:	str	r0, [fp, #-4]
    ed60:	b	ed6c <monster_test_local_Fantasy_json_parser_enum+0x138>
    ed64:	ldr	r0, [fp, #-12]
    ed68:	str	r0, [fp, #-4]
    ed6c:	ldr	r0, [fp, #-4]
    ed70:	mov	sp, fp
    ed74:	pop	{fp, pc}

0000ed78 <Fantasy_Character_parse_json_union>:
    ed78:	push	{fp, lr}
    ed7c:	mov	fp, sp
    ed80:	sub	sp, sp, #24
    ed84:	ldr	ip, [fp, #8]
    ed88:	str	r0, [fp, #-8]
    ed8c:	str	r1, [sp, #12]
    ed90:	str	r2, [sp, #8]
    ed94:	strb	r3, [sp, #7]
    ed98:	ldr	r0, [fp, #8]
    ed9c:	mov	r1, #0
    eda0:	str	r1, [r0]
    eda4:	ldrb	r0, [sp, #7]
    eda8:	mov	r1, r0
    edac:	cmp	r0, #0
    edb0:	str	r1, [sp]
    edb4:	beq	ee1c <Fantasy_Character_parse_json_union+0xa4>
    edb8:	b	edbc <Fantasy_Character_parse_json_union+0x44>
    edbc:	ldr	r0, [sp]
    edc0:	cmp	r0, #2
    edc4:	beq	ee34 <Fantasy_Character_parse_json_union+0xbc>
    edc8:	b	edcc <Fantasy_Character_parse_json_union+0x54>
    edcc:	ldr	r0, [sp]
    edd0:	cmp	r0, #8
    edd4:	beq	ee50 <Fantasy_Character_parse_json_union+0xd8>
    edd8:	b	eddc <Fantasy_Character_parse_json_union+0x64>
    eddc:	ldr	r0, [sp]
    ede0:	cmp	r0, #9
    ede4:	beq	ee6c <Fantasy_Character_parse_json_union+0xf4>
    ede8:	b	edec <Fantasy_Character_parse_json_union+0x74>
    edec:	ldr	r0, [sp]
    edf0:	cmp	r0, #10
    edf4:	beq	ee88 <Fantasy_Character_parse_json_union+0x110>
    edf8:	b	edfc <Fantasy_Character_parse_json_union+0x84>
    edfc:	ldr	r0, [sp]
    ee00:	cmp	r0, #11
    ee04:	beq	eea4 <Fantasy_Character_parse_json_union+0x12c>
    ee08:	b	ee0c <Fantasy_Character_parse_json_union+0x94>
    ee0c:	ldr	r0, [sp]
    ee10:	cmp	r0, #255	; 0xff
    ee14:	beq	eec0 <Fantasy_Character_parse_json_union+0x148>
    ee18:	b	eedc <Fantasy_Character_parse_json_union+0x164>
    ee1c:	ldr	r0, [fp, #-8]
    ee20:	ldr	r1, [sp, #12]
    ee24:	ldr	r2, [sp, #8]
    ee28:	bl	b9a0 <flatcc_json_parser_none>
    ee2c:	str	r0, [fp, #-4]
    ee30:	b	ef74 <Fantasy_Character_parse_json_union+0x1fc>
    ee34:	ldr	r0, [fp, #-8]
    ee38:	ldr	r1, [sp, #12]
    ee3c:	ldr	r2, [sp, #8]
    ee40:	ldr	r3, [fp, #8]
    ee44:	bl	f068 <Fantasy_Attacker_parse_json_table>
    ee48:	str	r0, [sp, #12]
    ee4c:	b	ef24 <Fantasy_Character_parse_json_union+0x1ac>
    ee50:	ldr	r0, [fp, #-8]
    ee54:	ldr	r1, [sp, #12]
    ee58:	ldr	r2, [sp, #8]
    ee5c:	ldr	r3, [fp, #8]
    ee60:	bl	f3a0 <Fantasy_Rapunzel_parse_json_struct>
    ee64:	str	r0, [sp, #12]
    ee68:	b	ef24 <Fantasy_Character_parse_json_union+0x1ac>
    ee6c:	ldr	r0, [fp, #-8]
    ee70:	ldr	r1, [sp, #12]
    ee74:	ldr	r2, [sp, #8]
    ee78:	ldr	r3, [fp, #8]
    ee7c:	bl	f46c <Fantasy_BookReader_parse_json_struct>
    ee80:	str	r0, [sp, #12]
    ee84:	b	ef24 <Fantasy_Character_parse_json_union+0x1ac>
    ee88:	ldr	r0, [fp, #-8]
    ee8c:	ldr	r1, [sp, #12]
    ee90:	ldr	r2, [sp, #8]
    ee94:	ldr	r3, [fp, #8]
    ee98:	bl	f46c <Fantasy_BookReader_parse_json_struct>
    ee9c:	str	r0, [sp, #12]
    eea0:	b	ef24 <Fantasy_Character_parse_json_union+0x1ac>
    eea4:	ldr	r0, [fp, #-8]
    eea8:	ldr	r1, [sp, #12]
    eeac:	ldr	r2, [sp, #8]
    eeb0:	ldr	r3, [fp, #8]
    eeb4:	bl	0 <flatcc_json_parser_build_string>
    eeb8:	str	r0, [sp, #12]
    eebc:	b	ef24 <Fantasy_Character_parse_json_union+0x1ac>
    eec0:	ldr	r0, [fp, #-8]
    eec4:	ldr	r1, [sp, #12]
    eec8:	ldr	r2, [sp, #8]
    eecc:	ldr	r3, [fp, #8]
    eed0:	bl	0 <flatcc_json_parser_build_string>
    eed4:	str	r0, [sp, #12]
    eed8:	b	ef24 <Fantasy_Character_parse_json_union+0x1ac>
    eedc:	ldr	r0, [fp, #-8]
    eee0:	ldr	r0, [r0, #8]
    eee4:	and	r0, r0, #1
    eee8:	cmp	r0, #0
    eeec:	bne	ef0c <Fantasy_Character_parse_json_union+0x194>
    eef0:	ldr	r0, [fp, #-8]
    eef4:	ldr	r1, [sp, #12]
    eef8:	ldr	r2, [sp, #8]
    eefc:	movw	r3, #15
    ef00:	bl	0 <flatcc_json_parser_set_error>
    ef04:	str	r0, [fp, #-4]
    ef08:	b	ef74 <Fantasy_Character_parse_json_union+0x1fc>
    ef0c:	ldr	r0, [fp, #-8]
    ef10:	ldr	r1, [sp, #12]
    ef14:	ldr	r2, [sp, #8]
    ef18:	bl	0 <flatcc_json_parser_generic_json>
    ef1c:	str	r0, [fp, #-4]
    ef20:	b	ef74 <Fantasy_Character_parse_json_union+0x1fc>
    ef24:	ldr	r0, [fp, #-8]
    ef28:	ldr	r0, [r0, #24]
    ef2c:	cmp	r0, #0
    ef30:	beq	ef40 <Fantasy_Character_parse_json_union+0x1c8>
    ef34:	ldr	r0, [sp, #12]
    ef38:	str	r0, [fp, #-4]
    ef3c:	b	ef74 <Fantasy_Character_parse_json_union+0x1fc>
    ef40:	ldr	r0, [fp, #8]
    ef44:	ldr	r0, [r0]
    ef48:	cmp	r0, #0
    ef4c:	bne	ef6c <Fantasy_Character_parse_json_union+0x1f4>
    ef50:	ldr	r0, [fp, #-8]
    ef54:	ldr	r1, [sp, #12]
    ef58:	ldr	r2, [sp, #8]
    ef5c:	movw	r3, #33	; 0x21
    ef60:	bl	0 <flatcc_json_parser_set_error>
    ef64:	str	r0, [fp, #-4]
    ef68:	b	ef74 <Fantasy_Character_parse_json_union+0x1fc>
    ef6c:	ldr	r0, [sp, #12]
    ef70:	str	r0, [fp, #-4]
    ef74:	ldr	r0, [fp, #-4]
    ef78:	mov	sp, fp
    ef7c:	pop	{fp, pc}

0000ef80 <Fantasy_Character_json_union_accept_type>:
    ef80:	sub	sp, sp, #12
    ef84:	strb	r0, [sp, #7]
    ef88:	ldrb	r0, [sp, #7]
    ef8c:	mov	r1, r0
    ef90:	cmp	r0, #0
    ef94:	str	r1, [sp]
    ef98:	beq	f000 <Fantasy_Character_json_union_accept_type+0x80>
    ef9c:	b	efa0 <Fantasy_Character_json_union_accept_type+0x20>
    efa0:	ldr	r0, [sp]
    efa4:	cmp	r0, #2
    efa8:	beq	f00c <Fantasy_Character_json_union_accept_type+0x8c>
    efac:	b	efb0 <Fantasy_Character_json_union_accept_type+0x30>
    efb0:	ldr	r0, [sp]
    efb4:	cmp	r0, #8
    efb8:	beq	f018 <Fantasy_Character_json_union_accept_type+0x98>
    efbc:	b	efc0 <Fantasy_Character_json_union_accept_type+0x40>
    efc0:	ldr	r0, [sp]
    efc4:	cmp	r0, #9
    efc8:	beq	f024 <Fantasy_Character_json_union_accept_type+0xa4>
    efcc:	b	efd0 <Fantasy_Character_json_union_accept_type+0x50>
    efd0:	ldr	r0, [sp]
    efd4:	cmp	r0, #10
    efd8:	beq	f030 <Fantasy_Character_json_union_accept_type+0xb0>
    efdc:	b	efe0 <Fantasy_Character_json_union_accept_type+0x60>
    efe0:	ldr	r0, [sp]
    efe4:	cmp	r0, #11
    efe8:	beq	f03c <Fantasy_Character_json_union_accept_type+0xbc>
    efec:	b	eff0 <Fantasy_Character_json_union_accept_type+0x70>
    eff0:	ldr	r0, [sp]
    eff4:	cmp	r0, #255	; 0xff
    eff8:	beq	f048 <Fantasy_Character_json_union_accept_type+0xc8>
    effc:	b	f054 <Fantasy_Character_json_union_accept_type+0xd4>
    f000:	movw	r0, #1
    f004:	str	r0, [sp, #8]
    f008:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f00c:	movw	r0, #1
    f010:	str	r0, [sp, #8]
    f014:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f018:	movw	r0, #1
    f01c:	str	r0, [sp, #8]
    f020:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f024:	movw	r0, #1
    f028:	str	r0, [sp, #8]
    f02c:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f030:	movw	r0, #1
    f034:	str	r0, [sp, #8]
    f038:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f03c:	movw	r0, #1
    f040:	str	r0, [sp, #8]
    f044:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f048:	movw	r0, #1
    f04c:	str	r0, [sp, #8]
    f050:	b	f05c <Fantasy_Character_json_union_accept_type+0xdc>
    f054:	movw	r0, #0
    f058:	str	r0, [sp, #8]
    f05c:	ldr	r0, [sp, #8]
    f060:	add	sp, sp, #12
    f064:	bx	lr

0000f068 <Fantasy_Attacker_parse_json_table>:
    f068:	push	{fp, lr}
    f06c:	mov	fp, sp
    f070:	sub	sp, sp, #56	; 0x38
    f074:	str	r0, [fp, #-8]
    f078:	str	r1, [fp, #-12]
    f07c:	str	r2, [fp, #-16]
    f080:	str	r3, [fp, #-20]	; 0xffffffec
    f084:	ldr	r0, [fp, #-20]	; 0xffffffec
    f088:	movw	r1, #0
    f08c:	str	r1, [r0]
    f090:	ldr	r0, [fp, #-8]
    f094:	ldr	r0, [r0]
    f098:	movw	r1, #1
    f09c:	bl	0 <flatcc_builder_start_table>
    f0a0:	cmp	r0, #0
    f0a4:	beq	f0ac <Fantasy_Attacker_parse_json_table+0x44>
    f0a8:	b	f37c <Fantasy_Attacker_parse_json_table+0x314>
    f0ac:	ldr	r0, [fp, #-8]
    f0b0:	ldr	r1, [fp, #-12]
    f0b4:	ldr	r2, [fp, #-16]
    f0b8:	sub	r3, fp, #24
    f0bc:	bl	4bfc <flatcc_json_parser_object_start>
    f0c0:	str	r0, [fp, #-12]
    f0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f0c8:	cmp	r0, #0
    f0cc:	beq	f33c <Fantasy_Attacker_parse_json_table+0x2d4>
    f0d0:	ldr	r0, [fp, #-8]
    f0d4:	ldr	r1, [fp, #-12]
    f0d8:	ldr	r2, [fp, #-16]
    f0dc:	bl	4ce0 <flatcc_json_parser_symbol_start>
    f0e0:	str	r0, [fp, #-12]
    f0e4:	ldr	r0, [fp, #-12]
    f0e8:	ldr	r1, [fp, #-16]
    f0ec:	bl	4d8c <flatcc_json_parser_symbol_part>
    f0f0:	str	r1, [sp, #12]
    f0f4:	str	r0, [sp, #8]
    f0f8:	ldr	r0, [sp, #8]
    f0fc:	ldr	r1, [sp, #12]
    f100:	movw	r2, #28530	; 0x6f72
    f104:	movt	r2, #29559	; 0x7377
    f108:	eor	r1, r1, r2
    f10c:	movw	r2, #24948	; 0x6174
    f110:	movt	r2, #25695	; 0x645f
    f114:	eor	r0, r0, r2
    f118:	orr	r0, r0, r1
    f11c:	cmp	r0, #0
    f120:	bne	f30c <Fantasy_Attacker_parse_json_table+0x2a4>
    f124:	b	f128 <Fantasy_Attacker_parse_json_table+0xc0>
    f128:	ldr	r0, [fp, #-12]
    f12c:	add	r0, r0, #8
    f130:	str	r0, [fp, #-12]
    f134:	ldr	r0, [fp, #-12]
    f138:	ldr	r1, [fp, #-16]
    f13c:	bl	4d8c <flatcc_json_parser_symbol_part>
    f140:	str	r1, [sp, #12]
    f144:	str	r0, [sp, #8]
    f148:	ldr	r0, [sp, #8]
    f14c:	ldr	r1, [sp, #12]
    f150:	movw	r2, #25451	; 0x636b
    f154:	movt	r2, #29793	; 0x7461
    f158:	eor	r1, r1, r2
    f15c:	movw	r2, #24941	; 0x616d
    f160:	movt	r2, #24420	; 0x5f64
    f164:	eor	r0, r0, r2
    f168:	orr	r0, r0, r1
    f16c:	cmp	r0, #0
    f170:	bne	f2f4 <Fantasy_Attacker_parse_json_table+0x28c>
    f174:	b	f178 <Fantasy_Attacker_parse_json_table+0x110>
    f178:	ldr	r0, [fp, #-12]
    f17c:	add	r0, r0, #8
    f180:	str	r0, [fp, #-12]
    f184:	ldr	r0, [fp, #-12]
    f188:	ldr	r1, [fp, #-16]
    f18c:	bl	4d8c <flatcc_json_parser_symbol_part>
    f190:	str	r1, [sp, #12]
    f194:	str	r0, [sp, #8]
    f198:	ldr	r0, [sp, #12]
    f19c:	bic	r0, r0, #255	; 0xff
    f1a0:	movw	r1, #25856	; 0x6500
    f1a4:	movt	r1, #24935	; 0x6167
    f1a8:	teq	r0, r1
    f1ac:	bne	f2dc <Fantasy_Attacker_parse_json_table+0x274>
    f1b0:	b	f1b4 <Fantasy_Attacker_parse_json_table+0x14c>
    f1b4:	ldr	r0, [fp, #-8]
    f1b8:	ldr	r1, [fp, #-12]
    f1bc:	str	r1, [sp, #16]
    f1c0:	ldr	r2, [fp, #-16]
    f1c4:	movw	r3, #3
    f1c8:	bl	4dc4 <flatcc_json_parser_match_symbol>
    f1cc:	str	r0, [fp, #-12]
    f1d0:	ldr	r0, [sp, #16]
    f1d4:	ldr	r1, [fp, #-12]
    f1d8:	cmp	r0, r1
    f1dc:	beq	f2c4 <Fantasy_Attacker_parse_json_table+0x25c>
    f1e0:	movw	r0, #0
    f1e4:	str	r0, [sp, #4]
    f1e8:	ldr	r0, [fp, #-8]
    f1ec:	ldr	r1, [fp, #-12]
    f1f0:	str	r1, [sp, #16]
    f1f4:	ldr	r2, [fp, #-16]
    f1f8:	add	r3, sp, #4
    f1fc:	bl	90dc <flatcc_json_parser_int32>
    f200:	str	r0, [fp, #-12]
    f204:	ldr	r0, [sp, #16]
    f208:	ldr	r1, [fp, #-12]
    f20c:	cmp	r0, r1
    f210:	bne	f264 <Fantasy_Attacker_parse_json_table+0x1fc>
    f214:	ldr	r0, [fp, #-8]
    f218:	ldr	r1, [fp, #-12]
    f21c:	str	r1, [sp, #16]
    f220:	ldr	r2, [fp, #-16]
    f224:	movw	r3, #0
    f228:	movt	r3, #0
    f22c:	add	ip, sp, #4
    f230:	str	ip, [sp]
    f234:	bl	91b4 <flatcc_json_parser_symbolic_int32>
    f238:	str	r0, [fp, #-12]
    f23c:	ldr	r0, [fp, #-12]
    f240:	ldr	r1, [sp, #16]
    f244:	cmp	r0, r1
    f248:	beq	f25c <Fantasy_Attacker_parse_json_table+0x1f4>
    f24c:	ldr	r0, [fp, #-12]
    f250:	ldr	r1, [fp, #-16]
    f254:	cmp	r0, r1
    f258:	bne	f260 <Fantasy_Attacker_parse_json_table+0x1f8>
    f25c:	b	f37c <Fantasy_Attacker_parse_json_table+0x314>
    f260:	b	f264 <Fantasy_Attacker_parse_json_table+0x1fc>
    f264:	ldr	r0, [sp, #4]
    f268:	cmp	r0, #0
    f26c:	bne	f284 <Fantasy_Attacker_parse_json_table+0x21c>
    f270:	ldr	r0, [fp, #-8]
    f274:	ldr	r0, [r0, #8]
    f278:	and	r0, r0, #2
    f27c:	cmp	r0, #0
    f280:	beq	f2c0 <Fantasy_Attacker_parse_json_table+0x258>
    f284:	ldr	r0, [fp, #-8]
    f288:	ldr	r0, [r0]
    f28c:	movw	r1, #0
    f290:	movw	r2, #4
    f294:	movw	r3, #4
    f298:	uxth	r3, r3
    f29c:	bl	0 <flatcc_builder_table_add>
    f2a0:	str	r0, [sp, #28]
    f2a4:	movw	r1, #0
    f2a8:	cmp	r0, r1
    f2ac:	bne	f2b4 <Fantasy_Attacker_parse_json_table+0x24c>
    f2b0:	b	f37c <Fantasy_Attacker_parse_json_table+0x314>
    f2b4:	ldr	r0, [sp, #28]
    f2b8:	ldr	r1, [sp, #4]
    f2bc:	bl	93dc <flatbuffers_int32_write_to_pe>
    f2c0:	b	f2d8 <Fantasy_Attacker_parse_json_table+0x270>
    f2c4:	ldr	r0, [fp, #-8]
    f2c8:	ldr	r1, [fp, #-12]
    f2cc:	ldr	r2, [fp, #-16]
    f2d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2d4:	str	r0, [fp, #-12]
    f2d8:	b	f2f0 <Fantasy_Attacker_parse_json_table+0x288>
    f2dc:	ldr	r0, [fp, #-8]
    f2e0:	ldr	r1, [fp, #-12]
    f2e4:	ldr	r2, [fp, #-16]
    f2e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2ec:	str	r0, [fp, #-12]
    f2f0:	b	f308 <Fantasy_Attacker_parse_json_table+0x2a0>
    f2f4:	ldr	r0, [fp, #-8]
    f2f8:	ldr	r1, [fp, #-12]
    f2fc:	ldr	r2, [fp, #-16]
    f300:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f304:	str	r0, [fp, #-12]
    f308:	b	f320 <Fantasy_Attacker_parse_json_table+0x2b8>
    f30c:	ldr	r0, [fp, #-8]
    f310:	ldr	r1, [fp, #-12]
    f314:	ldr	r2, [fp, #-16]
    f318:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f31c:	str	r0, [fp, #-12]
    f320:	ldr	r0, [fp, #-8]
    f324:	ldr	r1, [fp, #-12]
    f328:	ldr	r2, [fp, #-16]
    f32c:	sub	r3, fp, #24
    f330:	bl	a03c <flatcc_json_parser_object_end>
    f334:	str	r0, [fp, #-12]
    f338:	b	f0c4 <Fantasy_Attacker_parse_json_table+0x5c>
    f33c:	ldr	r0, [fp, #-8]
    f340:	ldr	r0, [r0, #24]
    f344:	cmp	r0, #0
    f348:	beq	f350 <Fantasy_Attacker_parse_json_table+0x2e8>
    f34c:	b	f37c <Fantasy_Attacker_parse_json_table+0x314>
    f350:	ldr	r0, [fp, #-8]
    f354:	ldr	r0, [r0]
    f358:	bl	0 <flatcc_builder_end_table>
    f35c:	ldr	r1, [fp, #-20]	; 0xffffffec
    f360:	str	r0, [r1]
    f364:	cmp	r0, #0
    f368:	bne	f370 <Fantasy_Attacker_parse_json_table+0x308>
    f36c:	b	f37c <Fantasy_Attacker_parse_json_table+0x314>
    f370:	ldr	r0, [fp, #-12]
    f374:	str	r0, [fp, #-4]
    f378:	b	f394 <Fantasy_Attacker_parse_json_table+0x32c>
    f37c:	ldr	r0, [fp, #-8]
    f380:	ldr	r1, [fp, #-12]
    f384:	ldr	r2, [fp, #-16]
    f388:	movw	r3, #33	; 0x21
    f38c:	bl	0 <flatcc_json_parser_set_error>
    f390:	str	r0, [fp, #-4]
    f394:	ldr	r0, [fp, #-4]
    f398:	mov	sp, fp
    f39c:	pop	{fp, pc}

0000f3a0 <Fantasy_Rapunzel_parse_json_struct>:
    f3a0:	push	{fp, lr}
    f3a4:	mov	fp, sp
    f3a8:	sub	sp, sp, #24
    f3ac:	str	r0, [fp, #-8]
    f3b0:	str	r1, [sp, #12]
    f3b4:	str	r2, [sp, #8]
    f3b8:	str	r3, [sp, #4]
    f3bc:	ldr	r0, [sp, #4]
    f3c0:	movw	r1, #0
    f3c4:	str	r1, [r0]
    f3c8:	ldr	r0, [fp, #-8]
    f3cc:	ldr	r0, [r0]
    f3d0:	movw	r1, #2
    f3d4:	movw	r2, #2
    f3d8:	uxth	r2, r2
    f3dc:	bl	0 <flatcc_builder_start_struct>
    f3e0:	str	r0, [sp]
    f3e4:	movw	r1, #0
    f3e8:	cmp	r0, r1
    f3ec:	bne	f3f4 <Fantasy_Rapunzel_parse_json_struct+0x54>
    f3f0:	b	f448 <Fantasy_Rapunzel_parse_json_struct+0xa8>
    f3f4:	ldr	r0, [fp, #-8]
    f3f8:	ldr	r1, [sp, #12]
    f3fc:	ldr	r2, [sp, #8]
    f400:	ldr	r3, [sp]
    f404:	bl	f538 <Fantasy_Rapunzel_parse_json_struct_inline>
    f408:	str	r0, [sp, #12]
    f40c:	ldr	r0, [sp, #12]
    f410:	ldr	r1, [sp, #8]
    f414:	cmp	r0, r1
    f418:	beq	f438 <Fantasy_Rapunzel_parse_json_struct+0x98>
    f41c:	ldr	r0, [fp, #-8]
    f420:	ldr	r0, [r0]
    f424:	bl	0 <flatcc_builder_end_struct>
    f428:	ldr	r1, [sp, #4]
    f42c:	str	r0, [r1]
    f430:	cmp	r0, #0
    f434:	bne	f43c <Fantasy_Rapunzel_parse_json_struct+0x9c>
    f438:	b	f448 <Fantasy_Rapunzel_parse_json_struct+0xa8>
    f43c:	ldr	r0, [sp, #12]
    f440:	str	r0, [fp, #-4]
    f444:	b	f460 <Fantasy_Rapunzel_parse_json_struct+0xc0>
    f448:	ldr	r0, [fp, #-8]
    f44c:	ldr	r1, [sp, #12]
    f450:	ldr	r2, [sp, #8]
    f454:	movw	r3, #33	; 0x21
    f458:	bl	0 <flatcc_json_parser_set_error>
    f45c:	str	r0, [fp, #-4]
    f460:	ldr	r0, [fp, #-4]
    f464:	mov	sp, fp
    f468:	pop	{fp, pc}

0000f46c <Fantasy_BookReader_parse_json_struct>:
    f46c:	push	{fp, lr}
    f470:	mov	fp, sp
    f474:	sub	sp, sp, #24
    f478:	str	r0, [fp, #-8]
    f47c:	str	r1, [sp, #12]
    f480:	str	r2, [sp, #8]
    f484:	str	r3, [sp, #4]
    f488:	ldr	r0, [sp, #4]
    f48c:	movw	r1, #0
    f490:	str	r1, [r0]
    f494:	ldr	r0, [fp, #-8]
    f498:	ldr	r0, [r0]
    f49c:	movw	r1, #4
    f4a0:	movw	r2, #4
    f4a4:	uxth	r2, r2
    f4a8:	bl	0 <flatcc_builder_start_struct>
    f4ac:	str	r0, [sp]
    f4b0:	movw	r1, #0
    f4b4:	cmp	r0, r1
    f4b8:	bne	f4c0 <Fantasy_BookReader_parse_json_struct+0x54>
    f4bc:	b	f514 <Fantasy_BookReader_parse_json_struct+0xa8>
    f4c0:	ldr	r0, [fp, #-8]
    f4c4:	ldr	r1, [sp, #12]
    f4c8:	ldr	r2, [sp, #8]
    f4cc:	ldr	r3, [sp]
    f4d0:	bl	fb5c <Fantasy_BookReader_parse_json_struct_inline>
    f4d4:	str	r0, [sp, #12]
    f4d8:	ldr	r0, [sp, #12]
    f4dc:	ldr	r1, [sp, #8]
    f4e0:	cmp	r0, r1
    f4e4:	beq	f504 <Fantasy_BookReader_parse_json_struct+0x98>
    f4e8:	ldr	r0, [fp, #-8]
    f4ec:	ldr	r0, [r0]
    f4f0:	bl	0 <flatcc_builder_end_struct>
    f4f4:	ldr	r1, [sp, #4]
    f4f8:	str	r0, [r1]
    f4fc:	cmp	r0, #0
    f500:	bne	f508 <Fantasy_BookReader_parse_json_struct+0x9c>
    f504:	b	f514 <Fantasy_BookReader_parse_json_struct+0xa8>
    f508:	ldr	r0, [sp, #12]
    f50c:	str	r0, [fp, #-4]
    f510:	b	f52c <Fantasy_BookReader_parse_json_struct+0xc0>
    f514:	ldr	r0, [fp, #-8]
    f518:	ldr	r1, [sp, #12]
    f51c:	ldr	r2, [sp, #8]
    f520:	movw	r3, #33	; 0x21
    f524:	bl	0 <flatcc_json_parser_set_error>
    f528:	str	r0, [fp, #-4]
    f52c:	ldr	r0, [fp, #-4]
    f530:	mov	sp, fp
    f534:	pop	{fp, pc}

0000f538 <Fantasy_Rapunzel_parse_json_struct_inline>:
    f538:	push	{fp, lr}
    f53c:	mov	fp, sp
    f540:	sub	sp, sp, #56	; 0x38
    f544:	str	r0, [fp, #-8]
    f548:	str	r1, [fp, #-12]
    f54c:	str	r2, [fp, #-16]
    f550:	str	r3, [fp, #-20]	; 0xffffffec
    f554:	ldr	r0, [fp, #-8]
    f558:	ldr	r1, [fp, #-12]
    f55c:	ldr	r2, [fp, #-16]
    f560:	sub	r3, fp, #24
    f564:	bl	4bfc <flatcc_json_parser_object_start>
    f568:	str	r0, [fp, #-12]
    f56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f570:	cmp	r0, #0
    f574:	beq	f738 <Fantasy_Rapunzel_parse_json_struct_inline+0x200>
    f578:	ldr	r0, [fp, #-8]
    f57c:	ldr	r1, [fp, #-12]
    f580:	ldr	r2, [fp, #-16]
    f584:	bl	4ce0 <flatcc_json_parser_symbol_start>
    f588:	str	r0, [fp, #-12]
    f58c:	ldr	r0, [fp, #-12]
    f590:	ldr	r1, [fp, #-16]
    f594:	bl	4d8c <flatcc_json_parser_symbol_part>
    f598:	str	r1, [sp, #12]
    f59c:	str	r0, [sp, #8]
    f5a0:	ldr	r0, [sp, #8]
    f5a4:	ldr	r1, [sp, #12]
    f5a8:	movw	r2, #26994	; 0x6972
    f5ac:	movt	r2, #26721	; 0x6861
    f5b0:	eor	r1, r1, r2
    f5b4:	movw	r2, #25966	; 0x656e
    f5b8:	movt	r2, #24428	; 0x5f6c
    f5bc:	eor	r0, r0, r2
    f5c0:	orr	r0, r0, r1
    f5c4:	cmp	r0, #0
    f5c8:	bne	f708 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d0>
    f5cc:	b	f5d0 <Fantasy_Rapunzel_parse_json_struct_inline+0x98>
    f5d0:	ldr	r0, [fp, #-12]
    f5d4:	add	r0, r0, #8
    f5d8:	str	r0, [fp, #-12]
    f5dc:	ldr	r0, [fp, #-12]
    f5e0:	ldr	r1, [fp, #-16]
    f5e4:	bl	4d8c <flatcc_json_parser_symbol_part>
    f5e8:	str	r1, [sp, #12]
    f5ec:	str	r0, [sp, #8]
    f5f0:	ldr	r0, [sp, #12]
    f5f4:	bic	r0, r0, #255	; 0xff
    f5f8:	movw	r1, #26624	; 0x6800
    f5fc:	movt	r1, #26484	; 0x6774
    f600:	teq	r0, r1
    f604:	bne	f6f0 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b8>
    f608:	b	f60c <Fantasy_Rapunzel_parse_json_struct_inline+0xd4>
    f60c:	ldr	r0, [fp, #-8]
    f610:	ldr	r1, [fp, #-12]
    f614:	str	r1, [sp, #20]
    f618:	ldr	r2, [fp, #-16]
    f61c:	movw	r3, #3
    f620:	bl	4dc4 <flatcc_json_parser_match_symbol>
    f624:	str	r0, [fp, #-12]
    f628:	ldr	r0, [sp, #20]
    f62c:	ldr	r1, [fp, #-12]
    f630:	cmp	r0, r1
    f634:	beq	f6d8 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a0>
    f638:	movw	r0, #0
    f63c:	strh	r0, [sp, #6]
    f640:	ldr	r0, [fp, #-20]	; 0xffffffec
    f644:	add	r0, r0, #0
    f648:	str	r0, [sp, #24]
    f64c:	ldr	r0, [fp, #-8]
    f650:	ldr	r1, [fp, #-12]
    f654:	str	r1, [sp, #20]
    f658:	ldr	r2, [fp, #-16]
    f65c:	add	r3, sp, #6
    f660:	bl	f768 <flatcc_json_parser_uint16>
    f664:	str	r0, [fp, #-12]
    f668:	ldr	r0, [sp, #20]
    f66c:	ldr	r1, [fp, #-12]
    f670:	cmp	r0, r1
    f674:	bne	f6c8 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
    f678:	ldr	r0, [fp, #-8]
    f67c:	ldr	r1, [fp, #-12]
    f680:	str	r1, [sp, #20]
    f684:	ldr	r2, [fp, #-16]
    f688:	movw	r3, #0
    f68c:	movt	r3, #0
    f690:	add	ip, sp, #6
    f694:	str	ip, [sp]
    f698:	bl	f844 <flatcc_json_parser_symbolic_uint16>
    f69c:	str	r0, [fp, #-12]
    f6a0:	ldr	r0, [fp, #-12]
    f6a4:	ldr	r1, [sp, #20]
    f6a8:	cmp	r0, r1
    f6ac:	beq	f6c0 <Fantasy_Rapunzel_parse_json_struct_inline+0x188>
    f6b0:	ldr	r0, [fp, #-12]
    f6b4:	ldr	r1, [fp, #-16]
    f6b8:	cmp	r0, r1
    f6bc:	bne	f6c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x18c>
    f6c0:	b	f744 <Fantasy_Rapunzel_parse_json_struct_inline+0x20c>
    f6c4:	b	f6c8 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
    f6c8:	ldr	r0, [sp, #24]
    f6cc:	ldrh	r1, [sp, #6]
    f6d0:	bl	fa70 <flatbuffers_uint16_write_to_pe>
    f6d4:	b	f6ec <Fantasy_Rapunzel_parse_json_struct_inline+0x1b4>
    f6d8:	ldr	r0, [fp, #-8]
    f6dc:	ldr	r1, [fp, #-12]
    f6e0:	ldr	r2, [fp, #-16]
    f6e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f6e8:	str	r0, [fp, #-12]
    f6ec:	b	f704 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    f6f0:	ldr	r0, [fp, #-8]
    f6f4:	ldr	r1, [fp, #-12]
    f6f8:	ldr	r2, [fp, #-16]
    f6fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f700:	str	r0, [fp, #-12]
    f704:	b	f71c <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
    f708:	ldr	r0, [fp, #-8]
    f70c:	ldr	r1, [fp, #-12]
    f710:	ldr	r2, [fp, #-16]
    f714:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f718:	str	r0, [fp, #-12]
    f71c:	ldr	r0, [fp, #-8]
    f720:	ldr	r1, [fp, #-12]
    f724:	ldr	r2, [fp, #-16]
    f728:	sub	r3, fp, #24
    f72c:	bl	a03c <flatcc_json_parser_object_end>
    f730:	str	r0, [fp, #-12]
    f734:	b	f56c <Fantasy_Rapunzel_parse_json_struct_inline+0x34>
    f738:	ldr	r0, [fp, #-12]
    f73c:	str	r0, [fp, #-4]
    f740:	b	f75c <Fantasy_Rapunzel_parse_json_struct_inline+0x224>
    f744:	ldr	r0, [fp, #-8]
    f748:	ldr	r1, [fp, #-12]
    f74c:	ldr	r2, [fp, #-16]
    f750:	movw	r3, #33	; 0x21
    f754:	bl	0 <flatcc_json_parser_set_error>
    f758:	str	r0, [fp, #-4]
    f75c:	ldr	r0, [fp, #-4]
    f760:	mov	sp, fp
    f764:	pop	{fp, pc}

0000f768 <flatcc_json_parser_uint16>:
    f768:	push	{r4, r5, fp, lr}
    f76c:	add	fp, sp, #8
    f770:	sub	sp, sp, #56	; 0x38
    f774:	str	r0, [fp, #-16]
    f778:	str	r1, [fp, #-20]	; 0xffffffec
    f77c:	str	r2, [fp, #-24]	; 0xffffffe8
    f780:	str	r3, [fp, #-28]	; 0xffffffe4
    f784:	mov	r0, #0
    f788:	str	r0, [sp, #28]
    f78c:	str	r0, [sp, #24]
    f790:	movw	r0, #0
    f794:	str	r0, [sp, #20]
    f798:	ldr	r0, [fp, #-20]	; 0xffffffec
    f79c:	str	r0, [sp, #16]
    f7a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f7a4:	movw	r1, #0
    f7a8:	strh	r1, [r0]
    f7ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    f7b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    f7b4:	cmp	r0, r1
    f7b8:	bne	f7c8 <flatcc_json_parser_uint16+0x60>
    f7bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    f7c0:	str	r0, [fp, #-12]
    f7c4:	b	f838 <flatcc_json_parser_uint16+0xd0>
    f7c8:	ldr	r0, [fp, #-16]
    f7cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    f7d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f7d4:	add	r3, sp, #20
    f7d8:	add	ip, sp, #24
    f7dc:	str	ip, [sp]
    f7e0:	bl	0 <flatcc_json_parser_integer>
    f7e4:	str	r0, [fp, #-20]	; 0xffffffec
    f7e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    f7ec:	ldr	r1, [sp, #16]
    f7f0:	cmp	r0, r1
    f7f4:	beq	f830 <flatcc_json_parser_uint16+0xc8>
    f7f8:	ldr	r0, [fp, #-16]
    f7fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    f800:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f804:	ldr	r3, [sp, #20]
    f808:	ldr	ip, [sp, #24]
    f80c:	ldr	lr, [sp, #28]
    f810:	ldr	r4, [fp, #-28]	; 0xffffffe4
    f814:	mov	r5, sp
    f818:	str	r4, [r5, #8]
    f81c:	str	lr, [r5, #4]
    f820:	str	ip, [r5]
    f824:	bl	fa9c <flatcc_json_parser_coerce_uint16>
    f828:	str	r0, [fp, #-12]
    f82c:	b	f838 <flatcc_json_parser_uint16+0xd0>
    f830:	ldr	r0, [fp, #-20]	; 0xffffffec
    f834:	str	r0, [fp, #-12]
    f838:	ldr	r0, [fp, #-12]
    f83c:	sub	sp, fp, #8
    f840:	pop	{r4, r5, fp, pc}

0000f844 <flatcc_json_parser_symbolic_uint16>:
    f844:	push	{r4, r5, r6, sl, fp, lr}
    f848:	add	fp, sp, #16
    f84c:	sub	sp, sp, #88	; 0x58
    f850:	ldr	ip, [fp, #8]
    f854:	str	r0, [fp, #-24]	; 0xffffffe8
    f858:	str	r1, [fp, #-28]	; 0xffffffe4
    f85c:	str	r2, [fp, #-32]	; 0xffffffe0
    f860:	str	r3, [fp, #-36]	; 0xffffffdc
    f864:	movw	r0, #0
    f868:	strh	r0, [fp, #-46]	; 0xffffffd2
    f86c:	movw	r1, #0
    f870:	str	r1, [sp, #36]	; 0x24
    f874:	ldr	r1, [fp, #8]
    f878:	strh	r0, [r1]
    f87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f880:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f884:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f888:	str	ip, [sp, #32]
    f88c:	bl	b780 <flatcc_json_parser_constant_start>
    f890:	str	r0, [fp, #-28]	; 0xffffffe4
    f894:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f898:	ldr	r1, [fp, #-32]	; 0xffffffe0
    f89c:	cmp	r0, r1
    f8a0:	bne	f8b0 <flatcc_json_parser_symbolic_uint16+0x6c>
    f8a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f8a8:	str	r0, [fp, #-20]	; 0xffffffec
    f8ac:	b	fa64 <flatcc_json_parser_symbolic_uint16+0x220>
    f8b0:	b	f8b4 <flatcc_json_parser_symbolic_uint16+0x70>
    f8b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f8b8:	str	r0, [fp, #-40]	; 0xffffffd8
    f8bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f8c0:	ldr	r0, [r0]
    f8c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    f8c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f8cc:	str	r2, [fp, #-44]	; 0xffffffd4
    f8d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f8d4:	str	r0, [sp, #28]
    f8d8:	mov	r0, r1
    f8dc:	mov	r1, r2
    f8e0:	mov	r2, r3
    f8e4:	add	r3, sp, #44	; 0x2c
    f8e8:	add	ip, sp, #48	; 0x30
    f8ec:	str	ip, [sp]
    f8f0:	add	ip, sp, #40	; 0x28
    f8f4:	str	ip, [sp, #4]
    f8f8:	ldr	ip, [sp, #28]
    f8fc:	blx	ip
    f900:	str	r0, [fp, #-28]	; 0xffffffe4
    f904:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f908:	ldr	r1, [fp, #-32]	; 0xffffffe0
    f90c:	cmp	r0, r1
    f910:	bne	f920 <flatcc_json_parser_symbolic_uint16+0xdc>
    f914:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f918:	str	r0, [fp, #-20]	; 0xffffffec
    f91c:	b	fa64 <flatcc_json_parser_symbolic_uint16+0x220>
    f920:	b	f924 <flatcc_json_parser_symbolic_uint16+0xe0>
    f924:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f928:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f92c:	cmp	r0, r1
    f930:	movw	r0, #0
    f934:	str	r0, [sp, #24]
    f938:	bne	f960 <flatcc_json_parser_symbolic_uint16+0x11c>
    f93c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f940:	add	r1, r0, #4
    f944:	str	r1, [fp, #-40]	; 0xffffffd8
    f948:	ldr	r0, [r0, #4]
    f94c:	movw	r1, #0
    f950:	cmp	r0, r1
    f954:	movw	r0, #0
    f958:	movne	r0, #1
    f95c:	str	r0, [sp, #24]
    f960:	ldr	r0, [sp, #24]
    f964:	tst	r0, #1
    f968:	bne	f8bc <flatcc_json_parser_symbolic_uint16+0x78>
    f96c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f970:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f974:	cmp	r0, r1
    f978:	bne	f998 <flatcc_json_parser_symbolic_uint16+0x154>
    f97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f980:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f984:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f988:	movw	r3, #23
    f98c:	bl	0 <flatcc_json_parser_set_error>
    f990:	str	r0, [fp, #-20]	; 0xffffffec
    f994:	b	fa64 <flatcc_json_parser_symbolic_uint16+0x220>
    f998:	ldr	r0, [sp, #36]	; 0x24
    f99c:	add	r1, r0, #1
    f9a0:	str	r1, [sp, #36]	; 0x24
    f9a4:	cmp	r0, #0
    f9a8:	beq	f9d8 <flatcc_json_parser_symbolic_uint16+0x194>
    f9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f9b0:	ldr	r0, [r0, #12]
    f9b4:	cmp	r0, #0
    f9b8:	beq	f9d8 <flatcc_json_parser_symbolic_uint16+0x194>
    f9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f9c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f9c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f9c8:	movw	r3, #14
    f9cc:	bl	0 <flatcc_json_parser_set_error>
    f9d0:	str	r0, [fp, #-20]	; 0xffffffec
    f9d4:	b	fa64 <flatcc_json_parser_symbolic_uint16+0x220>
    f9d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f9dc:	mov	r1, r0
    f9e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f9e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f9e8:	ldr	ip, [sp, #44]	; 0x2c
    f9ec:	ldr	lr, [sp, #48]	; 0x30
    f9f0:	ldr	r4, [sp, #52]	; 0x34
    f9f4:	mov	r5, sp
    f9f8:	sub	r6, fp, #46	; 0x2e
    f9fc:	str	r6, [r5, #8]
    fa00:	str	r4, [r5, #4]
    fa04:	str	lr, [r5]
    fa08:	str	r0, [sp, #20]
    fa0c:	mov	r0, r2
    fa10:	str	r1, [sp, #16]
    fa14:	mov	r1, r3
    fa18:	ldr	r2, [sp, #20]
    fa1c:	mov	r3, ip
    fa20:	bl	fa9c <flatcc_json_parser_coerce_uint16>
    fa24:	ldr	r1, [sp, #16]
    fa28:	cmp	r1, r0
    fa2c:	bne	fa3c <flatcc_json_parser_symbolic_uint16+0x1f8>
    fa30:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fa34:	str	r0, [fp, #-20]	; 0xffffffec
    fa38:	b	fa64 <flatcc_json_parser_symbolic_uint16+0x220>
    fa3c:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    fa40:	ldr	r1, [fp, #8]
    fa44:	ldrh	r2, [r1]
    fa48:	add	r0, r2, r0
    fa4c:	strh	r0, [r1]
    fa50:	ldr	r0, [sp, #40]	; 0x28
    fa54:	cmp	r0, #0
    fa58:	bne	f8b4 <flatcc_json_parser_symbolic_uint16+0x70>
    fa5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fa60:	str	r0, [fp, #-20]	; 0xffffffec
    fa64:	ldr	r0, [fp, #-20]	; 0xffffffec
    fa68:	sub	sp, fp, #16
    fa6c:	pop	{r4, r5, r6, sl, fp, pc}

0000fa70 <flatbuffers_uint16_write_to_pe>:
    fa70:	push	{fp, lr}
    fa74:	mov	fp, sp
    fa78:	sub	sp, sp, #8
    fa7c:	str	r0, [sp, #4]
    fa80:	strh	r1, [sp, #2]
    fa84:	ldrh	r0, [sp, #2]
    fa88:	bl	fb48 <flatbuffers_uint16_cast_to_pe>
    fa8c:	ldr	r1, [sp, #4]
    fa90:	strh	r0, [r1]
    fa94:	mov	sp, fp
    fa98:	pop	{fp, pc}

0000fa9c <flatcc_json_parser_coerce_uint16>:
    fa9c:	push	{r4, sl, fp, lr}
    faa0:	add	fp, sp, #8
    faa4:	sub	sp, sp, #32
    faa8:	ldr	ip, [fp, #12]
    faac:	ldr	lr, [fp, #8]
    fab0:	ldr	r4, [fp, #16]
    fab4:	str	r0, [fp, #-16]
    fab8:	str	r1, [sp, #20]
    fabc:	str	r2, [sp, #16]
    fac0:	str	r3, [sp, #12]
    fac4:	str	ip, [sp, #4]
    fac8:	str	lr, [sp]
    facc:	ldr	r0, [sp, #12]
    fad0:	cmp	r0, #0
    fad4:	beq	faf4 <flatcc_json_parser_coerce_uint16+0x58>
    fad8:	ldr	r0, [fp, #-16]
    fadc:	ldr	r1, [sp, #20]
    fae0:	ldr	r2, [sp, #16]
    fae4:	movw	r3, #8
    fae8:	bl	0 <flatcc_json_parser_set_error>
    faec:	str	r0, [fp, #-12]
    faf0:	b	fb3c <flatcc_json_parser_coerce_uint16+0xa0>
    faf4:	ldr	r0, [sp]
    faf8:	ldr	r1, [sp, #4]
    fafc:	subs	r0, r0, #65536	; 0x10000
    fb00:	sbcs	r1, r1, #0
    fb04:	bcc	fb28 <flatcc_json_parser_coerce_uint16+0x8c>
    fb08:	b	fb0c <flatcc_json_parser_coerce_uint16+0x70>
    fb0c:	ldr	r0, [fp, #-16]
    fb10:	ldr	r1, [sp, #20]
    fb14:	ldr	r2, [sp, #16]
    fb18:	movw	r3, #7
    fb1c:	bl	0 <flatcc_json_parser_set_error>
    fb20:	str	r0, [fp, #-12]
    fb24:	b	fb3c <flatcc_json_parser_coerce_uint16+0xa0>
    fb28:	ldrh	r0, [sp]
    fb2c:	ldr	r1, [fp, #16]
    fb30:	strh	r0, [r1]
    fb34:	ldr	r0, [sp, #20]
    fb38:	str	r0, [fp, #-12]
    fb3c:	ldr	r0, [fp, #-12]
    fb40:	sub	sp, fp, #8
    fb44:	pop	{r4, sl, fp, pc}

0000fb48 <flatbuffers_uint16_cast_to_pe>:
    fb48:	sub	sp, sp, #4
    fb4c:	strh	r0, [sp, #2]
    fb50:	ldrh	r0, [sp, #2]
    fb54:	add	sp, sp, #4
    fb58:	bx	lr

0000fb5c <Fantasy_BookReader_parse_json_struct_inline>:
    fb5c:	push	{fp, lr}
    fb60:	mov	fp, sp
    fb64:	sub	sp, sp, #56	; 0x38
    fb68:	str	r0, [fp, #-8]
    fb6c:	str	r1, [fp, #-12]
    fb70:	str	r2, [fp, #-16]
    fb74:	str	r3, [fp, #-20]	; 0xffffffec
    fb78:	ldr	r0, [fp, #-8]
    fb7c:	ldr	r1, [fp, #-12]
    fb80:	ldr	r2, [fp, #-16]
    fb84:	sub	r3, fp, #24
    fb88:	bl	4bfc <flatcc_json_parser_object_start>
    fb8c:	str	r0, [fp, #-12]
    fb90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fb94:	cmp	r0, #0
    fb98:	beq	fd58 <Fantasy_BookReader_parse_json_struct_inline+0x1fc>
    fb9c:	ldr	r0, [fp, #-8]
    fba0:	ldr	r1, [fp, #-12]
    fba4:	ldr	r2, [fp, #-16]
    fba8:	bl	4ce0 <flatcc_json_parser_symbol_start>
    fbac:	str	r0, [fp, #-12]
    fbb0:	ldr	r0, [fp, #-12]
    fbb4:	ldr	r1, [fp, #-16]
    fbb8:	bl	4d8c <flatcc_json_parser_symbol_part>
    fbbc:	str	r1, [sp, #12]
    fbc0:	str	r0, [sp, #8]
    fbc4:	ldr	r0, [sp, #8]
    fbc8:	ldr	r1, [sp, #12]
    fbcc:	movw	r2, #28523	; 0x6f6b
    fbd0:	movt	r2, #25199	; 0x626f
    fbd4:	eor	r1, r1, r2
    fbd8:	movw	r2, #29285	; 0x7265
    fbdc:	movt	r2, #29535	; 0x735f
    fbe0:	eor	r0, r0, r2
    fbe4:	orr	r0, r0, r1
    fbe8:	cmp	r0, #0
    fbec:	bne	fd28 <Fantasy_BookReader_parse_json_struct_inline+0x1cc>
    fbf0:	b	fbf4 <Fantasy_BookReader_parse_json_struct_inline+0x98>
    fbf4:	ldr	r0, [fp, #-12]
    fbf8:	add	r0, r0, #8
    fbfc:	str	r0, [fp, #-12]
    fc00:	ldr	r0, [fp, #-12]
    fc04:	ldr	r1, [fp, #-16]
    fc08:	bl	4d8c <flatcc_json_parser_symbol_part>
    fc0c:	str	r1, [sp, #12]
    fc10:	str	r0, [sp, #8]
    fc14:	ldrh	r0, [sp, #14]
    fc18:	movw	r1, #0
    fc1c:	movt	r1, #24932	; 0x6164
    fc20:	teq	r1, r0, lsl #16
    fc24:	bne	fd10 <Fantasy_BookReader_parse_json_struct_inline+0x1b4>
    fc28:	b	fc2c <Fantasy_BookReader_parse_json_struct_inline+0xd0>
    fc2c:	ldr	r0, [fp, #-8]
    fc30:	ldr	r1, [fp, #-12]
    fc34:	str	r1, [sp, #20]
    fc38:	ldr	r2, [fp, #-16]
    fc3c:	movw	r3, #2
    fc40:	bl	4dc4 <flatcc_json_parser_match_symbol>
    fc44:	str	r0, [fp, #-12]
    fc48:	ldr	r0, [sp, #20]
    fc4c:	ldr	r1, [fp, #-12]
    fc50:	cmp	r0, r1
    fc54:	beq	fcf8 <Fantasy_BookReader_parse_json_struct_inline+0x19c>
    fc58:	movw	r0, #0
    fc5c:	str	r0, [sp, #4]
    fc60:	ldr	r0, [fp, #-20]	; 0xffffffec
    fc64:	add	r0, r0, #0
    fc68:	str	r0, [sp, #24]
    fc6c:	ldr	r0, [fp, #-8]
    fc70:	ldr	r1, [fp, #-12]
    fc74:	str	r1, [sp, #20]
    fc78:	ldr	r2, [fp, #-16]
    fc7c:	add	r3, sp, #4
    fc80:	bl	90dc <flatcc_json_parser_int32>
    fc84:	str	r0, [fp, #-12]
    fc88:	ldr	r0, [sp, #20]
    fc8c:	ldr	r1, [fp, #-12]
    fc90:	cmp	r0, r1
    fc94:	bne	fce8 <Fantasy_BookReader_parse_json_struct_inline+0x18c>
    fc98:	ldr	r0, [fp, #-8]
    fc9c:	ldr	r1, [fp, #-12]
    fca0:	str	r1, [sp, #20]
    fca4:	ldr	r2, [fp, #-16]
    fca8:	movw	r3, #0
    fcac:	movt	r3, #0
    fcb0:	add	ip, sp, #4
    fcb4:	str	ip, [sp]
    fcb8:	bl	91b4 <flatcc_json_parser_symbolic_int32>
    fcbc:	str	r0, [fp, #-12]
    fcc0:	ldr	r0, [fp, #-12]
    fcc4:	ldr	r1, [sp, #20]
    fcc8:	cmp	r0, r1
    fccc:	beq	fce0 <Fantasy_BookReader_parse_json_struct_inline+0x184>
    fcd0:	ldr	r0, [fp, #-12]
    fcd4:	ldr	r1, [fp, #-16]
    fcd8:	cmp	r0, r1
    fcdc:	bne	fce4 <Fantasy_BookReader_parse_json_struct_inline+0x188>
    fce0:	b	fd64 <Fantasy_BookReader_parse_json_struct_inline+0x208>
    fce4:	b	fce8 <Fantasy_BookReader_parse_json_struct_inline+0x18c>
    fce8:	ldr	r0, [sp, #24]
    fcec:	ldr	r1, [sp, #4]
    fcf0:	bl	93dc <flatbuffers_int32_write_to_pe>
    fcf4:	b	fd0c <Fantasy_BookReader_parse_json_struct_inline+0x1b0>
    fcf8:	ldr	r0, [fp, #-8]
    fcfc:	ldr	r1, [fp, #-12]
    fd00:	ldr	r2, [fp, #-16]
    fd04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fd08:	str	r0, [fp, #-12]
    fd0c:	b	fd24 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    fd10:	ldr	r0, [fp, #-8]
    fd14:	ldr	r1, [fp, #-12]
    fd18:	ldr	r2, [fp, #-16]
    fd1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fd20:	str	r0, [fp, #-12]
    fd24:	b	fd3c <Fantasy_BookReader_parse_json_struct_inline+0x1e0>
    fd28:	ldr	r0, [fp, #-8]
    fd2c:	ldr	r1, [fp, #-12]
    fd30:	ldr	r2, [fp, #-16]
    fd34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fd38:	str	r0, [fp, #-12]
    fd3c:	ldr	r0, [fp, #-8]
    fd40:	ldr	r1, [fp, #-12]
    fd44:	ldr	r2, [fp, #-16]
    fd48:	sub	r3, fp, #24
    fd4c:	bl	a03c <flatcc_json_parser_object_end>
    fd50:	str	r0, [fp, #-12]
    fd54:	b	fb90 <Fantasy_BookReader_parse_json_struct_inline+0x34>
    fd58:	ldr	r0, [fp, #-12]
    fd5c:	str	r0, [fp, #-4]
    fd60:	b	fd7c <Fantasy_BookReader_parse_json_struct_inline+0x220>
    fd64:	ldr	r0, [fp, #-8]
    fd68:	ldr	r1, [fp, #-12]
    fd6c:	ldr	r2, [fp, #-16]
    fd70:	movw	r3, #33	; 0x21
    fd74:	bl	0 <flatcc_json_parser_set_error>
    fd78:	str	r0, [fp, #-4]
    fd7c:	ldr	r0, [fp, #-4]
    fd80:	mov	sp, fp
    fd84:	pop	{fp, pc}

0000fd88 <flatcc_json_parser_coerce_bool>:
    fd88:	push	{r4, sl, fp, lr}
    fd8c:	add	fp, sp, #8
    fd90:	sub	sp, sp, #32
    fd94:	ldr	ip, [fp, #12]
    fd98:	ldr	lr, [fp, #8]
    fd9c:	ldr	r4, [fp, #16]
    fda0:	str	r0, [fp, #-16]
    fda4:	str	r1, [sp, #20]
    fda8:	str	r2, [sp, #16]
    fdac:	str	r3, [sp, #12]
    fdb0:	str	ip, [sp, #4]
    fdb4:	str	lr, [sp]
    fdb8:	ldr	r0, [sp, #12]
    fdbc:	cmp	r0, #0
    fdc0:	beq	fde0 <flatcc_json_parser_coerce_bool+0x58>
    fdc4:	ldr	r0, [fp, #-16]
    fdc8:	ldr	r1, [sp, #20]
    fdcc:	ldr	r2, [sp, #16]
    fdd0:	movw	r3, #8
    fdd4:	bl	0 <flatcc_json_parser_set_error>
    fdd8:	str	r0, [fp, #-12]
    fddc:	b	fe14 <flatcc_json_parser_coerce_bool+0x8c>
    fde0:	ldr	r0, [sp]
    fde4:	ldr	r1, [sp, #4]
    fde8:	orr	r0, r0, r1
    fdec:	cmp	r0, #0
    fdf0:	movwne	r0, #1
    fdf4:	mvn	r1, #0
    fdf8:	eor	r0, r0, r1
    fdfc:	eor	r0, r0, r1
    fe00:	and	r0, r0, #1
    fe04:	ldr	r1, [fp, #16]
    fe08:	strb	r0, [r1]
    fe0c:	ldr	r0, [sp, #20]
    fe10:	str	r0, [fp, #-12]
    fe14:	ldr	r0, [fp, #-12]
    fe18:	sub	sp, fp, #8
    fe1c:	pop	{r4, sl, fp, pc}

0000fe20 <flatbuffers_bool_cast_to_pe>:
    fe20:	sub	sp, sp, #4
    fe24:	strb	r0, [sp, #3]
    fe28:	ldrb	r0, [sp, #3]
    fe2c:	add	sp, sp, #4
    fe30:	bx	lr

0000fe34 <flatcc_json_parser_coerce_float>:
    fe34:	push	{r4, sl, fp, lr}
    fe38:	add	fp, sp, #8
    fe3c:	sub	sp, sp, #32
    fe40:	ldr	ip, [fp, #12]
    fe44:	ldr	lr, [fp, #8]
    fe48:	ldr	r4, [fp, #16]
    fe4c:	str	r0, [fp, #-12]
    fe50:	str	r1, [fp, #-16]
    fe54:	str	r2, [sp, #20]
    fe58:	str	r3, [sp, #16]
    fe5c:	str	ip, [sp, #12]
    fe60:	str	lr, [sp, #8]
    fe64:	ldr	r0, [sp, #16]
    fe68:	cmp	r0, #0
    fe6c:	beq	fe8c <flatcc_json_parser_coerce_float+0x58>
    fe70:	ldr	r0, [sp, #8]
    fe74:	ldr	r1, [sp, #12]
    fe78:	bl	0 <__aeabi_ul2f>
    fe7c:	vmov	s0, r0
    fe80:	vneg.f32	s0, s0
    fe84:	vstr	s0, [sp, #4]
    fe88:	b	fea0 <flatcc_json_parser_coerce_float+0x6c>
    fe8c:	ldr	r0, [sp, #8]
    fe90:	ldr	r1, [sp, #12]
    fe94:	bl	0 <__aeabi_ul2f>
    fe98:	vmov	s0, r0
    fe9c:	vstr	s0, [sp, #4]
    fea0:	vldr	s0, [sp, #4]
    fea4:	ldr	r0, [fp, #16]
    fea8:	vstr	s0, [r0]
    feac:	ldr	r0, [fp, #-16]
    feb0:	sub	sp, fp, #8
    feb4:	pop	{r4, sl, fp, pc}

0000feb8 <flatbuffers_float_cast_to_pe>:
    feb8:	sub	sp, sp, #8
    febc:	vstr	s0, [sp, #4]
    fec0:	vldr	s0, [sp, #4]
    fec4:	vstr	s0, [sp]
    fec8:	ldr	r0, [sp]
    fecc:	str	r0, [sp]
    fed0:	vldr	s0, [sp]
    fed4:	add	sp, sp, #8
    fed8:	bx	lr

0000fedc <flatcc_json_parser_coerce_int32>:
    fedc:	push	{r4, sl, fp, lr}
    fee0:	add	fp, sp, #8
    fee4:	sub	sp, sp, #32
    fee8:	ldr	ip, [fp, #12]
    feec:	ldr	lr, [fp, #8]
    fef0:	ldr	r4, [fp, #16]
    fef4:	str	r0, [fp, #-16]
    fef8:	str	r1, [sp, #20]
    fefc:	str	r2, [sp, #16]
    ff00:	str	r3, [sp, #12]
    ff04:	str	ip, [sp, #4]
    ff08:	str	lr, [sp]
    ff0c:	ldr	r0, [sp, #12]
    ff10:	cmp	r0, #0
    ff14:	beq	ff60 <flatcc_json_parser_coerce_int32+0x84>
    ff18:	ldr	r0, [sp]
    ff1c:	ldr	r1, [sp, #4]
    ff20:	subs	r0, r0, #-2147483647	; 0x80000001
    ff24:	sbcs	r1, r1, #0
    ff28:	bcc	ff4c <flatcc_json_parser_coerce_int32+0x70>
    ff2c:	b	ff30 <flatcc_json_parser_coerce_int32+0x54>
    ff30:	ldr	r0, [fp, #-16]
    ff34:	ldr	r1, [sp, #20]
    ff38:	ldr	r2, [sp, #16]
    ff3c:	movw	r3, #8
    ff40:	bl	0 <flatcc_json_parser_set_error>
    ff44:	str	r0, [fp, #-12]
    ff48:	b	ffa8 <flatcc_json_parser_coerce_int32+0xcc>
    ff4c:	ldr	r0, [sp]
    ff50:	rsb	r0, r0, #0
    ff54:	ldr	r1, [fp, #16]
    ff58:	str	r0, [r1]
    ff5c:	b	ffa0 <flatcc_json_parser_coerce_int32+0xc4>
    ff60:	ldr	r0, [sp]
    ff64:	ldr	r1, [sp, #4]
    ff68:	subs	r0, r0, #-2147483648	; 0x80000000
    ff6c:	sbcs	r1, r1, #0
    ff70:	bcc	ff94 <flatcc_json_parser_coerce_int32+0xb8>
    ff74:	b	ff78 <flatcc_json_parser_coerce_int32+0x9c>
    ff78:	ldr	r0, [fp, #-16]
    ff7c:	ldr	r1, [sp, #20]
    ff80:	ldr	r2, [sp, #16]
    ff84:	movw	r3, #7
    ff88:	bl	0 <flatcc_json_parser_set_error>
    ff8c:	str	r0, [fp, #-12]
    ff90:	b	ffa8 <flatcc_json_parser_coerce_int32+0xcc>
    ff94:	ldr	r0, [sp]
    ff98:	ldr	r1, [fp, #16]
    ff9c:	str	r0, [r1]
    ffa0:	ldr	r0, [sp, #20]
    ffa4:	str	r0, [fp, #-12]
    ffa8:	ldr	r0, [fp, #-12]
    ffac:	sub	sp, fp, #8
    ffb0:	pop	{r4, sl, fp, pc}

0000ffb4 <flatbuffers_int32_cast_to_pe>:
    ffb4:	sub	sp, sp, #4
    ffb8:	str	r0, [sp]
    ffbc:	ldr	r0, [sp]
    ffc0:	add	sp, sp, #4
    ffc4:	bx	lr

0000ffc8 <flatcc_json_parser_coerce_int64>:
    ffc8:	push	{r4, sl, fp, lr}
    ffcc:	add	fp, sp, #8
    ffd0:	sub	sp, sp, #32
    ffd4:	ldr	ip, [fp, #12]
    ffd8:	ldr	lr, [fp, #8]
    ffdc:	ldr	r4, [fp, #16]
    ffe0:	str	r0, [fp, #-16]
    ffe4:	str	r1, [sp, #20]
    ffe8:	str	r2, [sp, #16]
    ffec:	str	r3, [sp, #12]
    fff0:	str	ip, [sp, #4]
    fff4:	str	lr, [sp]
    fff8:	ldr	r0, [sp, #12]
    fffc:	cmp	r0, #0
   10000:	beq	10058 <flatcc_json_parser_coerce_int64+0x90>
   10004:	ldr	r0, [sp]
   10008:	ldr	r1, [sp, #4]
   1000c:	subs	r0, r0, #1
   10010:	sbcs	r1, r1, #-2147483648	; 0x80000000
   10014:	bcc	10038 <flatcc_json_parser_coerce_int64+0x70>
   10018:	b	1001c <flatcc_json_parser_coerce_int64+0x54>
   1001c:	ldr	r0, [fp, #-16]
   10020:	ldr	r1, [sp, #20]
   10024:	ldr	r2, [sp, #16]
   10028:	movw	r3, #8
   1002c:	bl	0 <flatcc_json_parser_set_error>
   10030:	str	r0, [fp, #-12]
   10034:	b	100a0 <flatcc_json_parser_coerce_int64+0xd8>
   10038:	ldr	r0, [sp]
   1003c:	ldr	r1, [sp, #4]
   10040:	rsbs	r0, r0, #0
   10044:	rsc	r1, r1, #0
   10048:	ldr	r2, [fp, #16]
   1004c:	str	r0, [r2]
   10050:	str	r1, [r2, #4]
   10054:	b	10098 <flatcc_json_parser_coerce_int64+0xd0>
   10058:	ldr	r0, [sp, #4]
   1005c:	cmn	r0, #1
   10060:	bgt	10084 <flatcc_json_parser_coerce_int64+0xbc>
   10064:	b	10068 <flatcc_json_parser_coerce_int64+0xa0>
   10068:	ldr	r0, [fp, #-16]
   1006c:	ldr	r1, [sp, #20]
   10070:	ldr	r2, [sp, #16]
   10074:	movw	r3, #7
   10078:	bl	0 <flatcc_json_parser_set_error>
   1007c:	str	r0, [fp, #-12]
   10080:	b	100a0 <flatcc_json_parser_coerce_int64+0xd8>
   10084:	ldr	r0, [sp]
   10088:	ldr	r1, [sp, #4]
   1008c:	ldr	r2, [fp, #16]
   10090:	str	r1, [r2, #4]
   10094:	str	r0, [r2]
   10098:	ldr	r0, [sp, #20]
   1009c:	str	r0, [fp, #-12]
   100a0:	ldr	r0, [fp, #-12]
   100a4:	sub	sp, fp, #8
   100a8:	pop	{r4, sl, fp, pc}

000100ac <flatbuffers_int64_cast_to_pe>:
   100ac:	sub	sp, sp, #8
   100b0:	str	r0, [sp]
   100b4:	str	r1, [sp, #4]
   100b8:	ldr	r0, [sp]
   100bc:	ldr	r1, [sp, #4]
   100c0:	add	sp, sp, #8
   100c4:	bx	lr

000100c8 <flatcc_json_parser_coerce_uint32>:
   100c8:	push	{r4, sl, fp, lr}
   100cc:	add	fp, sp, #8
   100d0:	sub	sp, sp, #32
   100d4:	ldr	ip, [fp, #12]
   100d8:	ldr	lr, [fp, #8]
   100dc:	ldr	r4, [fp, #16]
   100e0:	str	r0, [fp, #-16]
   100e4:	str	r1, [sp, #20]
   100e8:	str	r2, [sp, #16]
   100ec:	str	r3, [sp, #12]
   100f0:	str	ip, [sp, #4]
   100f4:	str	lr, [sp]
   100f8:	ldr	r0, [sp, #12]
   100fc:	cmp	r0, #0
   10100:	beq	10120 <flatcc_json_parser_coerce_uint32+0x58>
   10104:	ldr	r0, [fp, #-16]
   10108:	ldr	r1, [sp, #20]
   1010c:	ldr	r2, [sp, #16]
   10110:	movw	r3, #8
   10114:	bl	0 <flatcc_json_parser_set_error>
   10118:	str	r0, [fp, #-12]
   1011c:	b	10160 <flatcc_json_parser_coerce_uint32+0x98>
   10120:	ldr	r0, [sp, #4]
   10124:	cmp	r0, #0
   10128:	beq	1014c <flatcc_json_parser_coerce_uint32+0x84>
   1012c:	b	10130 <flatcc_json_parser_coerce_uint32+0x68>
   10130:	ldr	r0, [fp, #-16]
   10134:	ldr	r1, [sp, #20]
   10138:	ldr	r2, [sp, #16]
   1013c:	movw	r3, #7
   10140:	bl	0 <flatcc_json_parser_set_error>
   10144:	str	r0, [fp, #-12]
   10148:	b	10160 <flatcc_json_parser_coerce_uint32+0x98>
   1014c:	ldr	r0, [sp]
   10150:	ldr	r1, [fp, #16]
   10154:	str	r0, [r1]
   10158:	ldr	r0, [sp, #20]
   1015c:	str	r0, [fp, #-12]
   10160:	ldr	r0, [fp, #-12]
   10164:	sub	sp, fp, #8
   10168:	pop	{r4, sl, fp, pc}

0001016c <flatbuffers_uint32_cast_to_pe>:
   1016c:	sub	sp, sp, #4
   10170:	str	r0, [sp]
   10174:	ldr	r0, [sp]
   10178:	add	sp, sp, #4
   1017c:	bx	lr

00010180 <flatcc_json_parser_coerce_uint64>:
   10180:	push	{r4, sl, fp, lr}
   10184:	add	fp, sp, #8
   10188:	sub	sp, sp, #32
   1018c:	ldr	ip, [fp, #12]
   10190:	ldr	lr, [fp, #8]
   10194:	ldr	r4, [fp, #16]
   10198:	str	r0, [fp, #-16]
   1019c:	str	r1, [sp, #20]
   101a0:	str	r2, [sp, #16]
   101a4:	str	r3, [sp, #12]
   101a8:	str	ip, [sp, #4]
   101ac:	str	lr, [sp]
   101b0:	ldr	r0, [sp, #12]
   101b4:	cmp	r0, #0
   101b8:	beq	101d8 <flatcc_json_parser_coerce_uint64+0x58>
   101bc:	ldr	r0, [fp, #-16]
   101c0:	ldr	r1, [sp, #20]
   101c4:	ldr	r2, [sp, #16]
   101c8:	movw	r3, #8
   101cc:	bl	0 <flatcc_json_parser_set_error>
   101d0:	str	r0, [fp, #-12]
   101d4:	b	101f4 <flatcc_json_parser_coerce_uint64+0x74>
   101d8:	ldr	r0, [sp]
   101dc:	ldr	r1, [sp, #4]
   101e0:	ldr	r2, [fp, #16]
   101e4:	str	r1, [r2, #4]
   101e8:	str	r0, [r2]
   101ec:	ldr	r0, [sp, #20]
   101f0:	str	r0, [fp, #-12]
   101f4:	ldr	r0, [fp, #-12]
   101f8:	sub	sp, fp, #8
   101fc:	pop	{r4, sl, fp, pc}

00010200 <flatbuffers_uint64_cast_to_pe>:
   10200:	sub	sp, sp, #8
   10204:	str	r0, [sp]
   10208:	str	r1, [sp, #4]
   1020c:	ldr	r0, [sp]
   10210:	ldr	r1, [sp, #4]
   10214:	add	sp, sp, #8
   10218:	bx	lr

0001021c <flatcc_json_parser_coerce_double>:
   1021c:	push	{r4, sl, fp, lr}
   10220:	add	fp, sp, #8
   10224:	sub	sp, sp, #32
   10228:	ldr	ip, [fp, #12]
   1022c:	ldr	lr, [fp, #8]
   10230:	ldr	r4, [fp, #16]
   10234:	str	r0, [fp, #-12]
   10238:	str	r1, [fp, #-16]
   1023c:	str	r2, [sp, #20]
   10240:	str	r3, [sp, #16]
   10244:	str	ip, [sp, #12]
   10248:	str	lr, [sp, #8]
   1024c:	ldr	r0, [sp, #16]
   10250:	cmp	r0, #0
   10254:	beq	10274 <flatcc_json_parser_coerce_double+0x58>
   10258:	ldr	r0, [sp, #8]
   1025c:	ldr	r1, [sp, #12]
   10260:	bl	0 <__aeabi_ul2d>
   10264:	vmov	d16, r0, r1
   10268:	vneg.f64	d16, d16
   1026c:	vstr	d16, [sp]
   10270:	b	10288 <flatcc_json_parser_coerce_double+0x6c>
   10274:	ldr	r0, [sp, #8]
   10278:	ldr	r1, [sp, #12]
   1027c:	bl	0 <__aeabi_ul2d>
   10280:	vmov	d16, r0, r1
   10284:	vstr	d16, [sp]
   10288:	vldr	d16, [sp]
   1028c:	ldr	r0, [fp, #16]
   10290:	vstr	d16, [r0]
   10294:	ldr	r0, [fp, #-16]
   10298:	sub	sp, fp, #8
   1029c:	pop	{r4, sl, fp, pc}

000102a0 <flatbuffers_double_cast_to_pe>:
   102a0:	sub	sp, sp, #16
   102a4:	vstr	d0, [sp, #8]
   102a8:	vldr	d16, [sp, #8]
   102ac:	vstr	d16, [sp]
   102b0:	vldr	d0, [sp]
   102b4:	add	sp, sp, #16
   102b8:	bx	lr
