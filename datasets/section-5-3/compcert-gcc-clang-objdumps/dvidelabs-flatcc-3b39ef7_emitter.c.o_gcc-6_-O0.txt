
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/json_test_uq.dir/__/__/src/runtime/emitter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <advance_front>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #16
   c:	str	r0, [fp, #-16]
  10:	mov	r3, #0
  14:	str	r3, [fp, #-8]
  18:	ldr	r3, [fp, #-16]
  1c:	ldr	r3, [r3]
  20:	cmp	r3, #0
  24:	beq	7c <advance_front+0x7c>
  28:	ldr	r3, [fp, #-16]
  2c:	ldr	r3, [r3]
  30:	ldr	r2, [r3, #2948]	; 0xb84
  34:	ldr	r3, [fp, #-16]
  38:	ldr	r3, [r3, #4]
  3c:	cmp	r2, r3
  40:	beq	7c <advance_front+0x7c>
  44:	ldr	r3, [fp, #-16]
  48:	ldr	r3, [r3]
  4c:	ldr	r3, [r3, #2948]	; 0xb84
  50:	ldr	r2, [fp, #-16]
  54:	ldr	r2, [r2]
  58:	ldr	r2, [r2, #2952]	; 0xb88
  5c:	sub	r2, r2, #2944	; 0xb80
  60:	str	r2, [r3, #2952]	; 0xb88
  64:	ldr	r3, [fp, #-16]
  68:	ldr	r3, [r3]
  6c:	ldr	r2, [r3, #2948]	; 0xb84
  70:	ldr	r3, [fp, #-16]
  74:	str	r2, [r3]
  78:	b	1a4 <advance_front+0x1a4>
  7c:	ldr	r0, [pc, #368]	; 1f4 <advance_front+0x1f4>
  80:	bl	0 <malloc>
  84:	mov	r3, r0
  88:	str	r3, [fp, #-8]
  8c:	ldr	r3, [fp, #-8]
  90:	cmp	r3, #0
  94:	bne	a0 <advance_front+0xa0>
  98:	mvn	r3, #0
  9c:	b	1e8 <advance_front+0x1e8>
  a0:	ldr	r3, [fp, #-16]
  a4:	ldr	r3, [r3, #28]
  a8:	add	r2, r3, #2944	; 0xb80
  ac:	ldr	r3, [fp, #-16]
  b0:	str	r2, [r3, #28]
  b4:	ldr	r3, [fp, #-16]
  b8:	ldr	r3, [r3]
  bc:	cmp	r3, #0
  c0:	beq	114 <advance_front+0x114>
  c4:	ldr	r3, [fp, #-16]
  c8:	ldr	r2, [r3, #4]
  cc:	ldr	r3, [fp, #-8]
  d0:	str	r2, [r3, #2948]	; 0xb84
  d4:	ldr	r3, [fp, #-16]
  d8:	ldr	r2, [r3]
  dc:	ldr	r3, [fp, #-8]
  e0:	str	r2, [r3, #2944]	; 0xb80
  e4:	ldr	r3, [fp, #-16]
  e8:	ldr	r3, [r3]
  ec:	ldr	r2, [fp, #-8]
  f0:	str	r2, [r3, #2948]	; 0xb84
  f4:	ldr	r3, [fp, #-16]
  f8:	ldr	r3, [r3, #4]
  fc:	ldr	r2, [fp, #-8]
 100:	str	r2, [r3, #2944]	; 0xb80
 104:	ldr	r3, [fp, #-16]
 108:	ldr	r2, [fp, #-8]
 10c:	str	r2, [r3]
 110:	b	1a4 <advance_front+0x1a4>
 114:	ldr	r3, [fp, #-16]
 118:	ldr	r2, [fp, #-8]
 11c:	str	r2, [r3]
 120:	ldr	r3, [fp, #-16]
 124:	ldr	r2, [fp, #-8]
 128:	str	r2, [r3, #4]
 12c:	ldr	r3, [fp, #-8]
 130:	ldr	r2, [fp, #-8]
 134:	str	r2, [r3, #2944]	; 0xb80
 138:	ldr	r3, [fp, #-8]
 13c:	ldr	r2, [fp, #-8]
 140:	str	r2, [r3, #2948]	; 0xb84
 144:	ldr	r3, [fp, #-16]
 148:	ldr	r3, [r3]
 14c:	add	r2, r3, #1472	; 0x5c0
 150:	ldr	r3, [fp, #-16]
 154:	str	r2, [r3, #8]
 158:	ldr	r3, [fp, #-16]
 15c:	ldr	r2, [r3, #8]
 160:	ldr	r3, [fp, #-16]
 164:	str	r2, [r3, #16]
 168:	ldr	r3, [fp, #-16]
 16c:	mov	r2, #1472	; 0x5c0
 170:	str	r2, [r3, #12]
 174:	ldr	r3, [fp, #-16]
 178:	ldr	r3, [r3, #12]
 17c:	rsb	r2, r3, #2944	; 0xb80
 180:	ldr	r3, [fp, #-16]
 184:	str	r2, [r3, #20]
 188:	ldr	r3, [fp, #-16]
 18c:	ldr	r3, [r3, #12]
 190:	rsb	r2, r3, #0
 194:	ldr	r3, [fp, #-8]
 198:	str	r2, [r3, #2952]	; 0xb88
 19c:	mov	r3, #0
 1a0:	b	1e8 <advance_front+0x1e8>
 1a4:	ldr	r3, [fp, #-16]
 1a8:	ldr	r3, [r3]
 1ac:	add	r2, r3, #2944	; 0xb80
 1b0:	ldr	r3, [fp, #-16]
 1b4:	str	r2, [r3, #8]
 1b8:	ldr	r3, [fp, #-16]
 1bc:	mov	r2, #2944	; 0xb80
 1c0:	str	r2, [r3, #12]
 1c4:	ldr	r3, [fp, #-16]
 1c8:	ldr	r3, [r3]
 1cc:	ldr	r2, [fp, #-16]
 1d0:	ldr	r2, [r2]
 1d4:	ldr	r2, [r2, #2944]	; 0xb80
 1d8:	ldr	r2, [r2, #2952]	; 0xb88
 1dc:	sub	r2, r2, #2944	; 0xb80
 1e0:	str	r2, [r3, #2952]	; 0xb88
 1e4:	mov	r3, #0
 1e8:	mov	r0, r3
 1ec:	sub	sp, fp, #4
 1f0:	pop	{fp, pc}
 1f4:	.word	0x00000b8c

000001f8 <advance_back>:
 1f8:	push	{fp, lr}
 1fc:	add	fp, sp, #4
 200:	sub	sp, sp, #16
 204:	str	r0, [fp, #-16]
 208:	mov	r3, #0
 20c:	str	r3, [fp, #-8]
 210:	ldr	r3, [fp, #-16]
 214:	ldr	r3, [r3, #4]
 218:	cmp	r3, #0
 21c:	beq	254 <advance_back+0x5c>
 220:	ldr	r3, [fp, #-16]
 224:	ldr	r3, [r3, #4]
 228:	ldr	r2, [r3, #2944]	; 0xb80
 22c:	ldr	r3, [fp, #-16]
 230:	ldr	r3, [r3]
 234:	cmp	r2, r3
 238:	beq	254 <advance_back+0x5c>
 23c:	ldr	r3, [fp, #-16]
 240:	ldr	r3, [r3, #4]
 244:	ldr	r2, [r3, #2944]	; 0xb80
 248:	ldr	r3, [fp, #-16]
 24c:	str	r2, [r3, #4]
 250:	b	37c <advance_back+0x184>
 254:	ldr	r0, [pc, #368]	; 3cc <advance_back+0x1d4>
 258:	bl	0 <malloc>
 25c:	mov	r3, r0
 260:	str	r3, [fp, #-8]
 264:	ldr	r3, [fp, #-8]
 268:	cmp	r3, #0
 26c:	bne	278 <advance_back+0x80>
 270:	mvn	r3, #0
 274:	b	3c0 <advance_back+0x1c8>
 278:	ldr	r3, [fp, #-16]
 27c:	ldr	r3, [r3, #28]
 280:	add	r2, r3, #2944	; 0xb80
 284:	ldr	r3, [fp, #-16]
 288:	str	r2, [r3, #28]
 28c:	ldr	r3, [fp, #-16]
 290:	ldr	r3, [r3, #4]
 294:	cmp	r3, #0
 298:	beq	2ec <advance_back+0xf4>
 29c:	ldr	r3, [fp, #-16]
 2a0:	ldr	r2, [r3, #4]
 2a4:	ldr	r3, [fp, #-8]
 2a8:	str	r2, [r3, #2948]	; 0xb84
 2ac:	ldr	r3, [fp, #-16]
 2b0:	ldr	r2, [r3]
 2b4:	ldr	r3, [fp, #-8]
 2b8:	str	r2, [r3, #2944]	; 0xb80
 2bc:	ldr	r3, [fp, #-16]
 2c0:	ldr	r3, [r3]
 2c4:	ldr	r2, [fp, #-8]
 2c8:	str	r2, [r3, #2948]	; 0xb84
 2cc:	ldr	r3, [fp, #-16]
 2d0:	ldr	r3, [r3, #4]
 2d4:	ldr	r2, [fp, #-8]
 2d8:	str	r2, [r3, #2944]	; 0xb80
 2dc:	ldr	r3, [fp, #-16]
 2e0:	ldr	r2, [fp, #-8]
 2e4:	str	r2, [r3, #4]
 2e8:	b	37c <advance_back+0x184>
 2ec:	ldr	r3, [fp, #-16]
 2f0:	ldr	r2, [fp, #-8]
 2f4:	str	r2, [r3]
 2f8:	ldr	r3, [fp, #-16]
 2fc:	ldr	r2, [fp, #-8]
 300:	str	r2, [r3, #4]
 304:	ldr	r3, [fp, #-8]
 308:	ldr	r2, [fp, #-8]
 30c:	str	r2, [r3, #2944]	; 0xb80
 310:	ldr	r3, [fp, #-8]
 314:	ldr	r2, [fp, #-8]
 318:	str	r2, [r3, #2948]	; 0xb84
 31c:	ldr	r3, [fp, #-16]
 320:	ldr	r3, [r3]
 324:	add	r2, r3, #1472	; 0x5c0
 328:	ldr	r3, [fp, #-16]
 32c:	str	r2, [r3, #8]
 330:	ldr	r3, [fp, #-16]
 334:	ldr	r2, [r3, #8]
 338:	ldr	r3, [fp, #-16]
 33c:	str	r2, [r3, #16]
 340:	ldr	r3, [fp, #-16]
 344:	mov	r2, #1472	; 0x5c0
 348:	str	r2, [r3, #12]
 34c:	ldr	r3, [fp, #-16]
 350:	ldr	r3, [r3, #12]
 354:	rsb	r2, r3, #2944	; 0xb80
 358:	ldr	r3, [fp, #-16]
 35c:	str	r2, [r3, #20]
 360:	ldr	r3, [fp, #-16]
 364:	ldr	r3, [r3, #12]
 368:	rsb	r2, r3, #0
 36c:	ldr	r3, [fp, #-8]
 370:	str	r2, [r3, #2952]	; 0xb88
 374:	mov	r3, #0
 378:	b	3c0 <advance_back+0x1c8>
 37c:	ldr	r3, [fp, #-16]
 380:	ldr	r3, [r3, #4]
 384:	mov	r2, r3
 388:	ldr	r3, [fp, #-16]
 38c:	str	r2, [r3, #16]
 390:	ldr	r3, [fp, #-16]
 394:	mov	r2, #2944	; 0xb80
 398:	str	r2, [r3, #20]
 39c:	ldr	r3, [fp, #-16]
 3a0:	ldr	r3, [r3, #4]
 3a4:	ldr	r2, [fp, #-16]
 3a8:	ldr	r2, [r2, #4]
 3ac:	ldr	r2, [r2, #2948]	; 0xb84
 3b0:	ldr	r2, [r2, #2952]	; 0xb88
 3b4:	add	r2, r2, #2944	; 0xb80
 3b8:	str	r2, [r3, #2952]	; 0xb88
 3bc:	mov	r3, #0
 3c0:	mov	r0, r3
 3c4:	sub	sp, fp, #4
 3c8:	pop	{fp, pc}
 3cc:	.word	0x00000b8c

000003d0 <copy_front>:
 3d0:	push	{fp, lr}
 3d4:	add	fp, sp, #4
 3d8:	sub	sp, sp, #24
 3dc:	str	r0, [fp, #-16]
 3e0:	str	r1, [fp, #-20]	; 0xffffffec
 3e4:	str	r2, [fp, #-24]	; 0xffffffe8
 3e8:	ldr	r2, [fp, #-20]	; 0xffffffec
 3ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3f0:	add	r3, r2, r3
 3f4:	str	r3, [fp, #-20]	; 0xffffffec
 3f8:	b	4bc <copy_front+0xec>
 3fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 400:	str	r3, [fp, #-8]
 404:	ldr	r3, [fp, #-16]
 408:	ldr	r2, [r3, #12]
 40c:	ldr	r3, [fp, #-8]
 410:	cmp	r2, r3
 414:	bcs	44c <copy_front+0x7c>
 418:	ldr	r3, [fp, #-16]
 41c:	ldr	r3, [r3, #12]
 420:	str	r3, [fp, #-8]
 424:	ldr	r3, [fp, #-8]
 428:	cmp	r3, #0
 42c:	bne	44c <copy_front+0x7c>
 430:	ldr	r0, [fp, #-16]
 434:	bl	0 <advance_front>
 438:	mov	r3, r0
 43c:	cmp	r3, #0
 440:	beq	4bc <copy_front+0xec>
 444:	mvn	r3, #0
 448:	b	4cc <copy_front+0xfc>
 44c:	ldr	r3, [fp, #-16]
 450:	ldr	r2, [r3, #8]
 454:	ldr	r3, [fp, #-8]
 458:	rsb	r3, r3, #0
 45c:	add	r2, r2, r3
 460:	ldr	r3, [fp, #-16]
 464:	str	r2, [r3, #8]
 468:	ldr	r3, [fp, #-16]
 46c:	ldr	r2, [r3, #12]
 470:	ldr	r3, [fp, #-8]
 474:	sub	r2, r2, r3
 478:	ldr	r3, [fp, #-16]
 47c:	str	r2, [r3, #12]
 480:	ldr	r3, [fp, #-8]
 484:	rsb	r3, r3, #0
 488:	ldr	r2, [fp, #-20]	; 0xffffffec
 48c:	add	r3, r2, r3
 490:	str	r3, [fp, #-20]	; 0xffffffec
 494:	ldr	r2, [fp, #-24]	; 0xffffffe8
 498:	ldr	r3, [fp, #-8]
 49c:	sub	r3, r2, r3
 4a0:	str	r3, [fp, #-24]	; 0xffffffe8
 4a4:	ldr	r3, [fp, #-16]
 4a8:	ldr	r3, [r3, #8]
 4ac:	ldr	r2, [fp, #-8]
 4b0:	ldr	r1, [fp, #-20]	; 0xffffffec
 4b4:	mov	r0, r3
 4b8:	bl	0 <memcpy>
 4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4c0:	cmp	r3, #0
 4c4:	bne	3fc <copy_front+0x2c>
 4c8:	mov	r3, #0
 4cc:	mov	r0, r3
 4d0:	sub	sp, fp, #4
 4d4:	pop	{fp, pc}

000004d8 <copy_back>:
 4d8:	push	{fp, lr}
 4dc:	add	fp, sp, #4
 4e0:	sub	sp, sp, #24
 4e4:	str	r0, [fp, #-16]
 4e8:	str	r1, [fp, #-20]	; 0xffffffec
 4ec:	str	r2, [fp, #-24]	; 0xffffffe8
 4f0:	b	5ac <copy_back+0xd4>
 4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4f8:	str	r3, [fp, #-8]
 4fc:	ldr	r3, [fp, #-16]
 500:	ldr	r2, [r3, #20]
 504:	ldr	r3, [fp, #-8]
 508:	cmp	r2, r3
 50c:	bcs	544 <copy_back+0x6c>
 510:	ldr	r3, [fp, #-16]
 514:	ldr	r3, [r3, #20]
 518:	str	r3, [fp, #-8]
 51c:	ldr	r3, [fp, #-8]
 520:	cmp	r3, #0
 524:	bne	544 <copy_back+0x6c>
 528:	ldr	r0, [fp, #-16]
 52c:	bl	1f8 <advance_back>
 530:	mov	r3, r0
 534:	cmp	r3, #0
 538:	beq	5ac <copy_back+0xd4>
 53c:	mvn	r3, #0
 540:	b	5bc <copy_back+0xe4>
 544:	ldr	r3, [fp, #-16]
 548:	ldr	r3, [r3, #16]
 54c:	ldr	r2, [fp, #-8]
 550:	ldr	r1, [fp, #-20]	; 0xffffffec
 554:	mov	r0, r3
 558:	bl	0 <memcpy>
 55c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 560:	ldr	r3, [fp, #-8]
 564:	sub	r3, r2, r3
 568:	str	r3, [fp, #-24]	; 0xffffffe8
 56c:	ldr	r2, [fp, #-20]	; 0xffffffec
 570:	ldr	r3, [fp, #-8]
 574:	add	r3, r2, r3
 578:	str	r3, [fp, #-20]	; 0xffffffec
 57c:	ldr	r3, [fp, #-16]
 580:	ldr	r2, [r3, #16]
 584:	ldr	r3, [fp, #-8]
 588:	add	r2, r2, r3
 58c:	ldr	r3, [fp, #-16]
 590:	str	r2, [r3, #16]
 594:	ldr	r3, [fp, #-16]
 598:	ldr	r2, [r3, #20]
 59c:	ldr	r3, [fp, #-8]
 5a0:	sub	r2, r2, r3
 5a4:	ldr	r3, [fp, #-16]
 5a8:	str	r2, [r3, #20]
 5ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5b0:	cmp	r3, #0
 5b4:	bne	4f4 <copy_back+0x1c>
 5b8:	mov	r3, #0
 5bc:	mov	r0, r3
 5c0:	sub	sp, fp, #4
 5c4:	pop	{fp, pc}

000005c8 <flatcc_emitter_recycle_page>:
 5c8:	push	{fp}		; (str fp, [sp, #-4]!)
 5cc:	add	fp, sp, #0
 5d0:	sub	sp, sp, #12
 5d4:	str	r0, [fp, #-8]
 5d8:	str	r1, [fp, #-12]
 5dc:	ldr	r3, [fp, #-8]
 5e0:	ldr	r2, [r3]
 5e4:	ldr	r3, [fp, #-12]
 5e8:	cmp	r2, r3
 5ec:	beq	604 <flatcc_emitter_recycle_page+0x3c>
 5f0:	ldr	r3, [fp, #-8]
 5f4:	ldr	r2, [r3, #4]
 5f8:	ldr	r3, [fp, #-12]
 5fc:	cmp	r2, r3
 600:	bne	60c <flatcc_emitter_recycle_page+0x44>
 604:	mvn	r3, #0
 608:	b	67c <flatcc_emitter_recycle_page+0xb4>
 60c:	ldr	r3, [fp, #-12]
 610:	ldr	r3, [r3, #2944]	; 0xb80
 614:	ldr	r2, [fp, #-12]
 618:	ldr	r2, [r2, #2948]	; 0xb84
 61c:	str	r2, [r3, #2948]	; 0xb84
 620:	ldr	r3, [fp, #-12]
 624:	ldr	r3, [r3, #2948]	; 0xb84
 628:	ldr	r2, [fp, #-12]
 62c:	ldr	r2, [r2, #2944]	; 0xb80
 630:	str	r2, [r3, #2944]	; 0xb80
 634:	ldr	r3, [fp, #-8]
 638:	ldr	r3, [r3]
 63c:	ldr	r2, [r3, #2948]	; 0xb84
 640:	ldr	r3, [fp, #-12]
 644:	str	r2, [r3, #2948]	; 0xb84
 648:	ldr	r3, [fp, #-8]
 64c:	ldr	r2, [r3]
 650:	ldr	r3, [fp, #-12]
 654:	str	r2, [r3, #2944]	; 0xb80
 658:	ldr	r3, [fp, #-12]
 65c:	ldr	r3, [r3, #2948]	; 0xb84
 660:	ldr	r2, [fp, #-12]
 664:	str	r2, [r3, #2944]	; 0xb80
 668:	ldr	r3, [fp, #-12]
 66c:	ldr	r3, [r3, #2944]	; 0xb80
 670:	ldr	r2, [fp, #-12]
 674:	str	r2, [r3, #2948]	; 0xb84
 678:	mov	r3, #0
 67c:	mov	r0, r3
 680:	add	sp, fp, #0
 684:	pop	{fp}		; (ldr fp, [sp], #4)
 688:	bx	lr

0000068c <flatcc_emitter_reset>:
 68c:	push	{fp, lr}
 690:	add	fp, sp, #4
 694:	sub	sp, sp, #16
 698:	str	r0, [fp, #-16]
 69c:	ldr	r3, [fp, #-16]
 6a0:	ldr	r3, [r3]
 6a4:	str	r3, [fp, #-8]
 6a8:	ldr	r3, [fp, #-16]
 6ac:	ldr	r3, [r3]
 6b0:	cmp	r3, #0
 6b4:	beq	80c <flatcc_emitter_reset+0x180>
 6b8:	ldr	r3, [fp, #-16]
 6bc:	ldr	r2, [r3]
 6c0:	ldr	r3, [fp, #-16]
 6c4:	str	r2, [r3, #4]
 6c8:	ldr	r3, [fp, #-16]
 6cc:	ldr	r3, [r3]
 6d0:	add	r2, r3, #1472	; 0x5c0
 6d4:	ldr	r3, [fp, #-16]
 6d8:	str	r2, [r3, #8]
 6dc:	ldr	r3, [fp, #-16]
 6e0:	ldr	r2, [r3, #8]
 6e4:	ldr	r3, [fp, #-16]
 6e8:	str	r2, [r3, #16]
 6ec:	ldr	r3, [fp, #-16]
 6f0:	mov	r2, #1472	; 0x5c0
 6f4:	str	r2, [r3, #12]
 6f8:	ldr	r3, [fp, #-16]
 6fc:	mov	r2, #1472	; 0x5c0
 700:	str	r2, [r3, #20]
 704:	ldr	r3, [fp, #-16]
 708:	ldr	r3, [r3]
 70c:	ldr	r2, [fp, #-16]
 710:	ldr	r2, [r2, #12]
 714:	rsb	r2, r2, #0
 718:	str	r2, [r3, #2952]	; 0xb88
 71c:	ldr	r3, [fp, #-16]
 720:	ldr	r3, [r3, #32]
 724:	cmp	r3, #0
 728:	bne	73c <flatcc_emitter_reset+0xb0>
 72c:	ldr	r3, [fp, #-16]
 730:	ldr	r2, [r3, #24]
 734:	ldr	r3, [fp, #-16]
 738:	str	r2, [r3, #32]
 73c:	ldr	r3, [fp, #-16]
 740:	ldr	r2, [r3, #32]
 744:	mov	r3, r2
 748:	lsl	r3, r3, #1
 74c:	add	r3, r3, r2
 750:	lsr	r2, r3, #2
 754:	ldr	r3, [fp, #-16]
 758:	ldr	r3, [r3, #24]
 75c:	lsr	r3, r3, #2
 760:	add	r2, r2, r3
 764:	ldr	r3, [fp, #-16]
 768:	str	r2, [r3, #32]
 76c:	ldr	r3, [fp, #-16]
 770:	mov	r2, #0
 774:	str	r2, [r3, #24]
 778:	b	7d0 <flatcc_emitter_reset+0x144>
 77c:	ldr	r3, [fp, #-16]
 780:	ldr	r3, [r3, #4]
 784:	ldr	r3, [r3, #2944]	; 0xb80
 788:	str	r3, [fp, #-8]
 78c:	ldr	r3, [fp, #-16]
 790:	ldr	r3, [r3, #4]
 794:	ldr	r2, [fp, #-8]
 798:	ldr	r2, [r2, #2944]	; 0xb80
 79c:	str	r2, [r3, #2944]	; 0xb80
 7a0:	ldr	r3, [fp, #-8]
 7a4:	ldr	r3, [r3, #2944]	; 0xb80
 7a8:	ldr	r2, [fp, #-16]
 7ac:	ldr	r2, [r2, #4]
 7b0:	str	r2, [r3, #2948]	; 0xb84
 7b4:	ldr	r0, [fp, #-8]
 7b8:	bl	0 <free>
 7bc:	ldr	r3, [fp, #-16]
 7c0:	ldr	r3, [r3, #28]
 7c4:	sub	r2, r3, #2944	; 0xb80
 7c8:	ldr	r3, [fp, #-16]
 7cc:	str	r2, [r3, #28]
 7d0:	ldr	r3, [fp, #-16]
 7d4:	ldr	r3, [r3, #32]
 7d8:	lsl	r2, r3, #1
 7dc:	ldr	r3, [fp, #-16]
 7e0:	ldr	r3, [r3, #28]
 7e4:	cmp	r2, r3
 7e8:	bcs	810 <flatcc_emitter_reset+0x184>
 7ec:	ldr	r3, [fp, #-16]
 7f0:	ldr	r3, [r3, #4]
 7f4:	ldr	r2, [r3, #2944]	; 0xb80
 7f8:	ldr	r3, [fp, #-16]
 7fc:	ldr	r3, [r3]
 800:	cmp	r2, r3
 804:	bne	77c <flatcc_emitter_reset+0xf0>
 808:	b	810 <flatcc_emitter_reset+0x184>
 80c:	nop			; (mov r0, r0)
 810:	sub	sp, fp, #4
 814:	pop	{fp, pc}

00000818 <flatcc_emitter_clear>:
 818:	push	{fp, lr}
 81c:	add	fp, sp, #4
 820:	sub	sp, sp, #16
 824:	str	r0, [fp, #-16]
 828:	ldr	r3, [fp, #-16]
 82c:	ldr	r3, [r3]
 830:	str	r3, [fp, #-8]
 834:	ldr	r3, [fp, #-8]
 838:	cmp	r3, #0
 83c:	beq	89c <flatcc_emitter_clear+0x84>
 840:	ldr	r3, [fp, #-8]
 844:	ldr	r3, [r3, #2948]	; 0xb84
 848:	mov	r2, #0
 84c:	str	r2, [r3, #2944]	; 0xb80
 850:	b	870 <flatcc_emitter_clear+0x58>
 854:	ldr	r3, [fp, #-8]
 858:	ldr	r3, [r3, #2944]	; 0xb80
 85c:	str	r3, [fp, #-8]
 860:	ldr	r3, [fp, #-8]
 864:	ldr	r3, [r3, #2948]	; 0xb84
 868:	mov	r0, r3
 86c:	bl	0 <free>
 870:	ldr	r3, [fp, #-8]
 874:	ldr	r3, [r3, #2944]	; 0xb80
 878:	cmp	r3, #0
 87c:	bne	854 <flatcc_emitter_clear+0x3c>
 880:	ldr	r0, [fp, #-8]
 884:	bl	0 <free>
 888:	mov	r2, #36	; 0x24
 88c:	mov	r1, #0
 890:	ldr	r0, [fp, #-16]
 894:	bl	0 <memset>
 898:	b	8a0 <flatcc_emitter_clear+0x88>
 89c:	nop			; (mov r0, r0)
 8a0:	sub	sp, fp, #4
 8a4:	pop	{fp, pc}

000008a8 <flatcc_emitter>:
 8a8:	push	{fp, lr}
 8ac:	add	fp, sp, #4
 8b0:	sub	sp, sp, #24
 8b4:	str	r0, [fp, #-16]
 8b8:	str	r1, [fp, #-20]	; 0xffffffec
 8bc:	str	r2, [fp, #-24]	; 0xffffffe8
 8c0:	str	r3, [fp, #-28]	; 0xffffffe4
 8c4:	ldr	r3, [fp, #-16]
 8c8:	str	r3, [fp, #-12]
 8cc:	ldr	r3, [fp, #-12]
 8d0:	ldr	r2, [r3, #24]
 8d4:	ldr	r3, [fp, #4]
 8d8:	add	r2, r2, r3
 8dc:	ldr	r3, [fp, #-12]
 8e0:	str	r2, [r3, #24]
 8e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8e8:	cmp	r3, #0
 8ec:	bge	9b4 <flatcc_emitter+0x10c>
 8f0:	ldr	r3, [fp, #-12]
 8f4:	ldr	r2, [r3, #12]
 8f8:	ldr	r3, [fp, #4]
 8fc:	cmp	r2, r3
 900:	bcc	948 <flatcc_emitter+0xa0>
 904:	ldr	r3, [fp, #-12]
 908:	ldr	r2, [r3, #8]
 90c:	ldr	r3, [fp, #4]
 910:	rsb	r3, r3, #0
 914:	add	r2, r2, r3
 918:	ldr	r3, [fp, #-12]
 91c:	str	r2, [r3, #8]
 920:	ldr	r3, [fp, #-12]
 924:	ldr	r2, [r3, #12]
 928:	ldr	r3, [fp, #4]
 92c:	sub	r2, r2, r3
 930:	ldr	r3, [fp, #-12]
 934:	str	r2, [r3, #12]
 938:	ldr	r3, [fp, #-12]
 93c:	ldr	r3, [r3, #8]
 940:	str	r3, [fp, #-8]
 944:	b	a60 <flatcc_emitter+0x1b8>
 948:	ldr	r3, [fp, #-24]	; 0xffffffe8
 94c:	lsl	r3, r3, #3
 950:	ldr	r2, [fp, #-20]	; 0xffffffec
 954:	add	r3, r2, r3
 958:	str	r3, [fp, #-20]	; 0xffffffec
 95c:	b	99c <flatcc_emitter+0xf4>
 960:	ldr	r3, [fp, #-20]	; 0xffffffec
 964:	sub	r3, r3, #8
 968:	str	r3, [fp, #-20]	; 0xffffffec
 96c:	ldr	r3, [fp, #-20]	; 0xffffffec
 970:	ldr	r1, [r3]
 974:	ldr	r3, [fp, #-20]	; 0xffffffec
 978:	ldr	r3, [r3, #4]
 97c:	mov	r2, r3
 980:	ldr	r0, [fp, #-12]
 984:	bl	3d0 <copy_front>
 988:	mov	r3, r0
 98c:	cmp	r3, #0
 990:	beq	99c <flatcc_emitter+0xf4>
 994:	mvn	r3, #0
 998:	b	ab8 <flatcc_emitter+0x210>
 99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9a0:	sub	r2, r3, #1
 9a4:	str	r2, [fp, #-24]	; 0xffffffe8
 9a8:	cmp	r3, #0
 9ac:	bne	960 <flatcc_emitter+0xb8>
 9b0:	b	a58 <flatcc_emitter+0x1b0>
 9b4:	ldr	r3, [fp, #-12]
 9b8:	ldr	r2, [r3, #20]
 9bc:	ldr	r3, [fp, #4]
 9c0:	cmp	r2, r3
 9c4:	bcc	a44 <flatcc_emitter+0x19c>
 9c8:	ldr	r3, [fp, #-12]
 9cc:	ldr	r3, [r3, #16]
 9d0:	str	r3, [fp, #-8]
 9d4:	ldr	r3, [fp, #-12]
 9d8:	ldr	r2, [r3, #16]
 9dc:	ldr	r3, [fp, #4]
 9e0:	add	r2, r2, r3
 9e4:	ldr	r3, [fp, #-12]
 9e8:	str	r2, [r3, #16]
 9ec:	ldr	r3, [fp, #-12]
 9f0:	ldr	r2, [r3, #20]
 9f4:	ldr	r3, [fp, #4]
 9f8:	sub	r2, r2, r3
 9fc:	ldr	r3, [fp, #-12]
 a00:	str	r2, [r3, #20]
 a04:	b	a60 <flatcc_emitter+0x1b8>
 a08:	ldr	r3, [fp, #-20]	; 0xffffffec
 a0c:	ldr	r1, [r3]
 a10:	ldr	r3, [fp, #-20]	; 0xffffffec
 a14:	ldr	r3, [r3, #4]
 a18:	mov	r2, r3
 a1c:	ldr	r0, [fp, #-12]
 a20:	bl	4d8 <copy_back>
 a24:	mov	r3, r0
 a28:	cmp	r3, #0
 a2c:	beq	a38 <flatcc_emitter+0x190>
 a30:	mvn	r3, #0
 a34:	b	ab8 <flatcc_emitter+0x210>
 a38:	ldr	r3, [fp, #-20]	; 0xffffffec
 a3c:	add	r3, r3, #8
 a40:	str	r3, [fp, #-20]	; 0xffffffec
 a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a48:	sub	r2, r3, #1
 a4c:	str	r2, [fp, #-24]	; 0xffffffe8
 a50:	cmp	r3, #0
 a54:	bne	a08 <flatcc_emitter+0x160>
 a58:	mov	r3, #0
 a5c:	b	ab8 <flatcc_emitter+0x210>
 a60:	b	aa0 <flatcc_emitter+0x1f8>
 a64:	ldr	r3, [fp, #-20]	; 0xffffffec
 a68:	ldr	r1, [r3]
 a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
 a70:	ldr	r3, [r3, #4]
 a74:	mov	r2, r3
 a78:	ldr	r0, [fp, #-8]
 a7c:	bl	0 <memcpy>
 a80:	ldr	r3, [fp, #-20]	; 0xffffffec
 a84:	ldr	r3, [r3, #4]
 a88:	ldr	r2, [fp, #-8]
 a8c:	add	r3, r2, r3
 a90:	str	r3, [fp, #-8]
 a94:	ldr	r3, [fp, #-20]	; 0xffffffec
 a98:	add	r3, r3, #8
 a9c:	str	r3, [fp, #-20]	; 0xffffffec
 aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 aa4:	sub	r2, r3, #1
 aa8:	str	r2, [fp, #-24]	; 0xffffffe8
 aac:	cmp	r3, #0
 ab0:	bne	a64 <flatcc_emitter+0x1bc>
 ab4:	mov	r3, #0
 ab8:	mov	r0, r3
 abc:	sub	sp, fp, #4
 ac0:	pop	{fp, pc}

00000ac4 <flatcc_emitter_copy_buffer>:
 ac4:	push	{fp, lr}
 ac8:	add	fp, sp, #4
 acc:	sub	sp, sp, #24
 ad0:	str	r0, [fp, #-16]
 ad4:	str	r1, [fp, #-20]	; 0xffffffec
 ad8:	str	r2, [fp, #-24]	; 0xffffffe8
 adc:	ldr	r3, [fp, #-16]
 ae0:	ldr	r2, [r3, #24]
 ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 ae8:	cmp	r2, r3
 aec:	bls	af8 <flatcc_emitter_copy_buffer+0x34>
 af0:	mov	r3, #0
 af4:	b	bf8 <flatcc_emitter_copy_buffer+0x134>
 af8:	ldr	r3, [fp, #-16]
 afc:	ldr	r3, [r3]
 b00:	cmp	r3, #0
 b04:	bne	b10 <flatcc_emitter_copy_buffer+0x4c>
 b08:	mov	r3, #0
 b0c:	b	bf8 <flatcc_emitter_copy_buffer+0x134>
 b10:	ldr	r3, [fp, #-16]
 b14:	ldr	r2, [r3]
 b18:	ldr	r3, [fp, #-16]
 b1c:	ldr	r3, [r3, #4]
 b20:	cmp	r2, r3
 b24:	bne	b4c <flatcc_emitter_copy_buffer+0x88>
 b28:	ldr	r3, [fp, #-16]
 b2c:	ldr	r1, [r3, #8]
 b30:	ldr	r3, [fp, #-16]
 b34:	ldr	r3, [r3, #24]
 b38:	mov	r2, r3
 b3c:	ldr	r0, [fp, #-20]	; 0xffffffec
 b40:	bl	0 <memcpy>
 b44:	ldr	r3, [fp, #-20]	; 0xffffffec
 b48:	b	bf8 <flatcc_emitter_copy_buffer+0x134>
 b4c:	ldr	r3, [fp, #-16]
 b50:	ldr	r3, [r3, #12]
 b54:	rsb	r3, r3, #2944	; 0xb80
 b58:	str	r3, [fp, #-12]
 b5c:	ldr	r3, [fp, #-16]
 b60:	ldr	r3, [r3, #8]
 b64:	ldr	r2, [fp, #-12]
 b68:	mov	r1, r3
 b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
 b70:	bl	0 <memcpy>
 b74:	ldr	r2, [fp, #-20]	; 0xffffffec
 b78:	ldr	r3, [fp, #-12]
 b7c:	add	r3, r2, r3
 b80:	str	r3, [fp, #-20]	; 0xffffffec
 b84:	ldr	r3, [fp, #-16]
 b88:	ldr	r3, [r3]
 b8c:	ldr	r3, [r3, #2944]	; 0xb80
 b90:	str	r3, [fp, #-8]
 b94:	b	bc4 <flatcc_emitter_copy_buffer+0x100>
 b98:	ldr	r3, [fp, #-8]
 b9c:	mov	r2, #2944	; 0xb80
 ba0:	mov	r1, r3
 ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
 ba8:	bl	0 <memcpy>
 bac:	ldr	r3, [fp, #-20]	; 0xffffffec
 bb0:	add	r3, r3, #2944	; 0xb80
 bb4:	str	r3, [fp, #-20]	; 0xffffffec
 bb8:	ldr	r3, [fp, #-8]
 bbc:	ldr	r3, [r3, #2944]	; 0xb80
 bc0:	str	r3, [fp, #-8]
 bc4:	ldr	r3, [fp, #-16]
 bc8:	ldr	r2, [r3, #4]
 bcc:	ldr	r3, [fp, #-8]
 bd0:	cmp	r2, r3
 bd4:	bne	b98 <flatcc_emitter_copy_buffer+0xd4>
 bd8:	ldr	r1, [fp, #-8]
 bdc:	ldr	r3, [fp, #-16]
 be0:	ldr	r3, [r3, #20]
 be4:	rsb	r3, r3, #2944	; 0xb80
 be8:	mov	r2, r3
 bec:	ldr	r0, [fp, #-20]	; 0xffffffec
 bf0:	bl	0 <memcpy>
 bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
 bf8:	mov	r0, r3
 bfc:	sub	sp, fp, #4
 c00:	pop	{fp, pc}
