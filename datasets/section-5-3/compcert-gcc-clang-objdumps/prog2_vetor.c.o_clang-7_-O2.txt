
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/vetor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <vetor_novo>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	mov	r0, #12
   c:	bl	0 <malloc>
  10:	cmp	r0, #0
  14:	movne	r1, #0
  18:	strne	r1, [r0]
  1c:	strne	r1, [r0, #4]
  20:	strne	r1, [r0, #8]
  24:	popne	{fp, pc}
  28:	mov	r0, #0
  2c:	pop	{fp, pc}

00000030 <vetor_apaga>:
  30:	cmp	r0, #0
  34:	bxeq	lr
  38:	push	{r4, sl, fp, lr}
  3c:	add	fp, sp, #8
  40:	mov	r4, r0
  44:	ldr	r0, [r0, #8]
  48:	bl	0 <free>
  4c:	mov	r0, r4
  50:	pop	{r4, sl, fp, lr}
  54:	b	0 <free>

00000058 <vetor_atribui>:
  58:	mov	ip, r0
  5c:	mvn	r0, #0
  60:	cmp	ip, #0
  64:	bxeq	lr
  68:	cmp	r1, #0
  6c:	ldrge	r3, [ip]
  70:	cmpge	r3, r1
  74:	ldrgt	r0, [ip, #8]
  78:	strgt	r2, [r0, r1, lsl #2]
  7c:	movgt	r0, r1
  80:	bx	lr

00000084 <vetor_tamanho>:
  84:	cmp	r0, #0
  88:	ldrne	r0, [r0]
  8c:	mvneq	r0, #0
  90:	bx	lr

00000094 <vetor_elemento>:
  94:	mov	r2, r0
  98:	mov	r0, #-2147483648	; 0x80000000
  9c:	cmp	r2, #0
  a0:	bxeq	lr
  a4:	cmp	r1, #0
  a8:	ldrge	r3, [r2]
  ac:	cmpge	r3, r1
  b0:	ldrgt	r0, [r2, #8]
  b4:	ldrgt	r0, [r0, r1, lsl #2]
  b8:	bx	lr

000000bc <vetor_insere>:
  bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  c0:	add	fp, sp, #24
  c4:	mvn	r7, #0
  c8:	cmp	r0, #0
  cc:	beq	17c <vetor_insere+0xc0>
  d0:	mov	r4, r2
  d4:	cmn	r2, #1
  d8:	blt	17c <vetor_insere+0xc0>
  dc:	mov	r8, r1
  e0:	ldr	r1, [r0]
  e4:	mov	r5, r0
  e8:	cmp	r1, r4
  ec:	blt	17c <vetor_insere+0xc0>
  f0:	ldr	r0, [r5, #4]
  f4:	cmn	r4, #1
  f8:	moveq	r4, r1
  fc:	cmp	r1, r0
 100:	bne	13c <vetor_insere+0x80>
 104:	lsl	r0, r1, #1
 108:	cmp	r1, #0
 10c:	movweq	r0, #1
 110:	str	r0, [r5, #4]
 114:	lsl	r1, r0, #2
 118:	ldr	r0, [r5, #8]
 11c:	bl	0 <realloc>
 120:	cmp	r0, #0
 124:	str	r0, [r5, #8]
 128:	beq	17c <vetor_insere+0xc0>
 12c:	ldr	r1, [r5]
 130:	cmp	r1, r4
 134:	bgt	148 <vetor_insere+0x8c>
 138:	b	16c <vetor_insere+0xb0>
 13c:	ldr	r0, [r5, #8]
 140:	cmp	r1, r4
 144:	ble	16c <vetor_insere+0xb0>
 148:	add	r7, r0, r1, lsl #2
 14c:	mov	r2, r1
 150:	mov	r3, r7
 154:	ldr	r6, [r3, #-4]!
 158:	sub	r2, r2, #1
 15c:	cmp	r2, r4
 160:	str	r6, [r7]
 164:	mov	r7, r3
 168:	bgt	154 <vetor_insere+0x98>
 16c:	str	r8, [r0, r4, lsl #2]
 170:	add	r0, r1, #1
 174:	mov	r7, r4
 178:	str	r0, [r5]
 17c:	mov	r0, r7
 180:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000184 <vetor_remove>:
 184:	mvn	r2, #0
 188:	cmp	r0, #0
 18c:	beq	1a0 <vetor_remove+0x1c>
 190:	cmp	r1, #0
 194:	ldrge	ip, [r0]
 198:	cmpge	ip, r1
 19c:	bgt	1a8 <vetor_remove+0x24>
 1a0:	mov	r0, r2
 1a4:	bx	lr
 1a8:	push	{r4, r5, r6, r7, fp, lr}
 1ac:	add	fp, sp, #16
 1b0:	add	r4, r1, #1
 1b4:	cmp	r4, ip
 1b8:	bge	21c <vetor_remove+0x98>
 1bc:	mvn	r3, r1
 1c0:	add	lr, ip, r3
 1c4:	ldr	r3, [r0, #8]
 1c8:	cmp	lr, #4
 1cc:	bcc	200 <vetor_remove+0x7c>
 1d0:	bic	r2, lr, #3
 1d4:	add	r5, r3, r1, lsl #2
 1d8:	add	r1, r2, r1
 1dc:	add	r4, r4, r2
 1e0:	mov	r6, r2
 1e4:	add	r7, r5, #4
 1e8:	subs	r6, r6, #4
 1ec:	vld1.32	{d16-d17}, [r7]
 1f0:	vst1.32	{d16-d17}, [r5]!
 1f4:	bne	1e4 <vetor_remove+0x60>
 1f8:	cmp	lr, r2
 1fc:	beq	21c <vetor_remove+0x98>
 200:	ldr	r7, [r3, r4, lsl #2]
 204:	mov	r2, r4
 208:	add	r4, r4, #1
 20c:	cmp	ip, r4
 210:	str	r7, [r3, r1, lsl #2]
 214:	mov	r1, r2
 218:	bne	200 <vetor_remove+0x7c>
 21c:	sub	r1, ip, #1
 220:	mov	r2, #0
 224:	str	r1, [r0]
 228:	pop	{r4, r5, r6, r7, fp, lr}
 22c:	mov	r0, r2
 230:	bx	lr

00000234 <vetor_pesquisa>:
 234:	push	{fp, lr}
 238:	mov	fp, sp
 23c:	mov	r2, r0
 240:	mvn	r0, #0
 244:	cmp	r2, #0
 248:	beq	27c <vetor_pesquisa+0x48>
 24c:	ldr	ip, [r2]
 250:	cmp	ip, #1
 254:	poplt	{fp, pc}
 258:	ldr	lr, [r2, #8]
 25c:	mov	r2, #0
 260:	ldr	r3, [lr, r2, lsl #2]
 264:	cmp	r3, r1
 268:	moveq	r0, r2
 26c:	popeq	{fp, pc}
 270:	add	r2, r2, #1
 274:	cmp	r2, ip
 278:	blt	260 <vetor_pesquisa+0x2c>
 27c:	pop	{fp, pc}

00000280 <vetor_ordena>:
 280:	cmp	r0, #0
 284:	mvneq	r0, #0
 288:	bxeq	lr
 28c:	ldr	ip, [r0]
 290:	mov	r1, r0
 294:	mov	r0, #0
 298:	cmp	ip, #2
 29c:	bxlt	lr
 2a0:	push	{r4, r5, fp, lr}
 2a4:	add	fp, sp, #8
 2a8:	ldr	r0, [r1, #8]
 2ac:	mov	r1, #1
 2b0:	mov	lr, #0
 2b4:	ldr	r2, [r0, r1, lsl #2]
 2b8:	mov	r3, lr
 2bc:	ldr	r4, [r0, r3, lsl #2]
 2c0:	cmp	r2, r4
 2c4:	bge	2ec <vetor_ordena+0x6c>
 2c8:	add	r5, r0, r3, lsl #2
 2cc:	str	r4, [r5, #4]
 2d0:	sub	r4, r3, #1
 2d4:	add	r3, r3, #1
 2d8:	cmp	r3, #1
 2dc:	mov	r3, r4
 2e0:	bgt	2bc <vetor_ordena+0x3c>
 2e4:	add	r3, r4, #1
 2e8:	b	2f0 <vetor_ordena+0x70>
 2ec:	add	r3, r3, #1
 2f0:	add	r1, r1, #1
 2f4:	add	lr, lr, #1
 2f8:	str	r2, [r0, r3, lsl #2]
 2fc:	cmp	r1, ip
 300:	blt	2b4 <vetor_ordena+0x34>
 304:	mov	r0, #0
 308:	pop	{r4, r5, fp, lr}
 30c:	bx	lr
