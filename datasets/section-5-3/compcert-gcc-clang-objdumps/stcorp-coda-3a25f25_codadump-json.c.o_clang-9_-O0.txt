
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_json_data>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	sub	sp, sp, #544	; 0x220
   c:	str	r0, [fp, #-12]
  10:	ldr	r0, [fp, #-12]
  14:	movw	r1, #0
  18:	movt	r1, #0
  1c:	str	r0, [r1]
  20:	movw	r0, #0
  24:	movt	r0, #0
  28:	ldr	r0, [r0]
  2c:	sub	r1, fp, #16
  30:	bl	0 <coda_open>
  34:	str	r0, [sp, #12]
  38:	ldr	r0, [sp, #12]
  3c:	cmp	r0, #0
  40:	beq	84 <print_json_data+0x84>
  44:	bl	0 <coda_get_errno>
  48:	ldr	r0, [r0]
  4c:	cmn	r0, #21
  50:	bne	84 <print_json_data+0x84>
  54:	movw	r0, #0
  58:	bl	0 <coda_set_option_use_mmap>
  5c:	movw	r1, #0
  60:	movt	r1, #0
  64:	ldr	r1, [r1]
  68:	str	r0, [sp, #8]
  6c:	mov	r0, r1
  70:	sub	r1, fp, #16
  74:	bl	0 <coda_open>
  78:	str	r0, [sp, #12]
  7c:	movw	r0, #1
  80:	bl	0 <coda_set_option_use_mmap>
  84:	ldr	r0, [sp, #12]
  88:	cmp	r0, #0
  8c:	beq	9c <print_json_data+0x9c>
  90:	movw	r0, #0
  94:	movt	r0, #0
  98:	blx	r0
  9c:	ldr	r1, [fp, #-16]
  a0:	add	r0, sp, #16
  a4:	bl	0 <coda_cursor_set_product>
  a8:	cmp	r0, #0
  ac:	beq	bc <print_json_data+0xbc>
  b0:	movw	r0, #0
  b4:	movt	r0, #0
  b8:	blx	r0
  bc:	movw	r0, #0
  c0:	movt	r0, #0
  c4:	ldr	r0, [r0]
  c8:	movw	r1, #0
  cc:	cmp	r0, r1
  d0:	beq	108 <print_json_data+0x108>
  d4:	movw	r0, #0
  d8:	movt	r0, #0
  dc:	ldr	r1, [r0]
  e0:	add	r0, sp, #16
  e4:	bl	0 <coda_cursor_goto>
  e8:	str	r0, [sp, #12]
  ec:	ldr	r0, [sp, #12]
  f0:	cmp	r0, #0
  f4:	beq	104 <print_json_data+0x104>
  f8:	movw	r0, #0
  fc:	movt	r0, #0
 100:	blx	r0
 104:	b	108 <print_json_data+0x108>
 108:	movw	r0, #0
 10c:	bl	0 <coda_set_option_perform_boundary_checks>
 110:	add	r1, sp, #16
 114:	str	r0, [sp, #4]
 118:	mov	r0, r1
 11c:	bl	144 <print_data>
 120:	movw	r0, #0
 124:	movt	r0, #0
 128:	bl	bc0 <ff_printf>
 12c:	ldr	r1, [fp, #-16]
 130:	str	r0, [sp]
 134:	mov	r0, r1
 138:	bl	0 <coda_close>
 13c:	sub	sp, fp, #8
 140:	pop	{r4, r5, fp, pc}

00000144 <print_data>:
 144:	push	{r4, r5, fp, lr}
 148:	add	fp, sp, #8
 14c:	sub	sp, sp, #352	; 0x160
 150:	str	r0, [fp, #-12]
 154:	movw	r0, #0
 158:	str	r0, [fp, #-20]	; 0xffffffec
 15c:	movw	r0, #0
 160:	movt	r0, #0
 164:	ldr	r0, [r0]
 168:	cmp	r0, #0
 16c:	beq	1f4 <print_data+0xb0>
 170:	ldr	r0, [fp, #-12]
 174:	sub	r1, fp, #20
 178:	bl	0 <coda_cursor_has_attributes>
 17c:	cmp	r0, #0
 180:	beq	190 <print_data+0x4c>
 184:	movw	r0, #0
 188:	movt	r0, #0
 18c:	blx	r0
 190:	ldr	r0, [fp, #-20]	; 0xffffffec
 194:	cmp	r0, #0
 198:	beq	1f0 <print_data+0xac>
 19c:	movw	r0, #0
 1a0:	movt	r0, #0
 1a4:	bl	bc0 <ff_printf>
 1a8:	ldr	r1, [fp, #-12]
 1ac:	str	r0, [sp, #68]	; 0x44
 1b0:	mov	r0, r1
 1b4:	bl	0 <coda_cursor_goto_attributes>
 1b8:	cmp	r0, #0
 1bc:	beq	1cc <print_data+0x88>
 1c0:	movw	r0, #0
 1c4:	movt	r0, #0
 1c8:	blx	r0
 1cc:	ldr	r0, [fp, #-12]
 1d0:	bl	144 <print_data>
 1d4:	ldr	r0, [fp, #-12]
 1d8:	bl	0 <coda_cursor_goto_parent>
 1dc:	movw	r1, #0
 1e0:	movt	r1, #0
 1e4:	str	r0, [sp, #64]	; 0x40
 1e8:	mov	r0, r1
 1ec:	bl	bc0 <ff_printf>
 1f0:	b	1f4 <print_data+0xb0>
 1f4:	ldr	r0, [fp, #-12]
 1f8:	sub	r1, fp, #16
 1fc:	bl	0 <coda_cursor_get_type_class>
 200:	cmp	r0, #0
 204:	beq	214 <print_data+0xd0>
 208:	movw	r0, #0
 20c:	movt	r0, #0
 210:	blx	r0
 214:	ldr	r0, [fp, #-16]
 218:	cmp	r0, #6
 21c:	str	r0, [sp, #60]	; 0x3c
 220:	bhi	ba0 <print_data+0xa5c>
 224:	add	r0, pc, #8
 228:	ldr	r1, [sp, #60]	; 0x3c
 22c:	ldr	r0, [r0, r1, lsl #2]
 230:	mov	pc, r0
 234:	.word	0x00000250
 238:	.word	0x000004a4
 23c:	.word	0x000005f4
 240:	.word	0x000005f4
 244:	.word	0x000005f4
 248:	.word	0x000005f4
 24c:	.word	0x00000a28
 250:	movw	r0, #0
 254:	movt	r0, #0
 258:	bl	bc0 <ff_printf>
 25c:	ldr	r1, [fp, #-12]
 260:	str	r0, [sp, #56]	; 0x38
 264:	mov	r0, r1
 268:	sub	r1, fp, #24
 26c:	bl	0 <coda_cursor_get_num_elements>
 270:	cmp	r0, #0
 274:	beq	284 <print_data+0x140>
 278:	movw	r0, #0
 27c:	movt	r0, #0
 280:	blx	r0
 284:	ldr	r0, [fp, #-24]	; 0xffffffe8
 288:	cmp	r0, #0
 28c:	ble	494 <print_data+0x350>
 290:	ldr	r0, [fp, #-12]
 294:	sub	r1, fp, #28
 298:	bl	0 <coda_cursor_get_type>
 29c:	cmp	r0, #0
 2a0:	beq	2b0 <print_data+0x16c>
 2a4:	movw	r0, #0
 2a8:	movt	r0, #0
 2ac:	blx	r0
 2b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
 2b4:	sub	r1, fp, #32
 2b8:	bl	0 <coda_type_get_record_union_status>
 2bc:	cmp	r0, #0
 2c0:	beq	2d0 <print_data+0x18c>
 2c4:	movw	r0, #0
 2c8:	movt	r0, #0
 2cc:	blx	r0
 2d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
 2d4:	cmp	r0, #0
 2d8:	beq	36c <print_data+0x228>
 2dc:	ldr	r0, [fp, #-12]
 2e0:	sub	r1, fp, #36	; 0x24
 2e4:	bl	0 <coda_cursor_get_available_union_field_index>
 2e8:	cmp	r0, #0
 2ec:	beq	2fc <print_data+0x1b8>
 2f0:	movw	r0, #0
 2f4:	movt	r0, #0
 2f8:	blx	r0
 2fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
 300:	ldr	r1, [fp, #-36]	; 0xffffffdc
 304:	sub	r2, fp, #40	; 0x28
 308:	bl	0 <coda_type_get_record_field_name>
 30c:	cmp	r0, #0
 310:	beq	320 <print_data+0x1dc>
 314:	movw	r0, #0
 318:	movt	r0, #0
 31c:	blx	r0
 320:	ldr	r0, [fp, #-12]
 324:	ldr	r1, [fp, #-36]	; 0xffffffdc
 328:	bl	0 <coda_cursor_goto_record_field_by_index>
 32c:	cmp	r0, #0
 330:	beq	340 <print_data+0x1fc>
 334:	movw	r0, #0
 338:	movt	r0, #0
 33c:	blx	r0
 340:	ldr	r1, [fp, #-40]	; 0xffffffd8
 344:	movw	r0, #0
 348:	movt	r0, #0
 34c:	bl	bc0 <ff_printf>
 350:	ldr	r1, [fp, #-12]
 354:	str	r0, [sp, #52]	; 0x34
 358:	mov	r0, r1
 35c:	bl	144 <print_data>
 360:	ldr	r0, [fp, #-12]
 364:	bl	0 <coda_cursor_goto_parent>
 368:	b	490 <print_data+0x34c>
 36c:	movw	r0, #1
 370:	str	r0, [fp, #-44]	; 0xffffffd4
 374:	ldr	r0, [fp, #-12]
 378:	bl	0 <coda_cursor_goto_first_record_field>
 37c:	cmp	r0, #0
 380:	beq	390 <print_data+0x24c>
 384:	movw	r0, #0
 388:	movt	r0, #0
 38c:	blx	r0
 390:	movw	r0, #0
 394:	str	r0, [fp, #-36]	; 0xffffffdc
 398:	ldr	r0, [fp, #-36]	; 0xffffffdc
 39c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 3a0:	cmp	r0, r1
 3a4:	bge	488 <print_data+0x344>
 3a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
 3ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
 3b0:	sub	r2, fp, #52	; 0x34
 3b4:	bl	0 <coda_type_get_record_field_hidden_status>
 3b8:	cmp	r0, #0
 3bc:	beq	3cc <print_data+0x288>
 3c0:	movw	r0, #0
 3c4:	movt	r0, #0
 3c8:	blx	r0
 3cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
 3d0:	cmp	r0, #0
 3d4:	bne	440 <print_data+0x2fc>
 3d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
 3dc:	cmp	r0, #0
 3e0:	bne	3f4 <print_data+0x2b0>
 3e4:	movw	r0, #0
 3e8:	movt	r0, #0
 3ec:	bl	bc0 <ff_printf>
 3f0:	b	3fc <print_data+0x2b8>
 3f4:	movw	r0, #0
 3f8:	str	r0, [fp, #-44]	; 0xffffffd4
 3fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
 400:	ldr	r1, [fp, #-36]	; 0xffffffdc
 404:	sub	r2, fp, #48	; 0x30
 408:	bl	0 <coda_type_get_record_field_name>
 40c:	cmp	r0, #0
 410:	beq	420 <print_data+0x2dc>
 414:	movw	r0, #0
 418:	movt	r0, #0
 41c:	blx	r0
 420:	ldr	r1, [fp, #-48]	; 0xffffffd0
 424:	movw	r0, #0
 428:	movt	r0, #0
 42c:	bl	bc0 <ff_printf>
 430:	ldr	r1, [fp, #-12]
 434:	str	r0, [sp, #48]	; 0x30
 438:	mov	r0, r1
 43c:	bl	144 <print_data>
 440:	ldr	r0, [fp, #-36]	; 0xffffffdc
 444:	ldr	r1, [fp, #-24]	; 0xffffffe8
 448:	sub	r1, r1, #1
 44c:	cmp	r0, r1
 450:	bge	474 <print_data+0x330>
 454:	ldr	r0, [fp, #-12]
 458:	bl	0 <coda_cursor_goto_next_record_field>
 45c:	cmp	r0, #0
 460:	beq	470 <print_data+0x32c>
 464:	movw	r0, #0
 468:	movt	r0, #0
 46c:	blx	r0
 470:	b	474 <print_data+0x330>
 474:	b	478 <print_data+0x334>
 478:	ldr	r0, [fp, #-36]	; 0xffffffdc
 47c:	add	r0, r0, #1
 480:	str	r0, [fp, #-36]	; 0xffffffdc
 484:	b	398 <print_data+0x254>
 488:	ldr	r0, [fp, #-12]
 48c:	bl	0 <coda_cursor_goto_parent>
 490:	b	494 <print_data+0x350>
 494:	movw	r0, #0
 498:	movt	r0, #0
 49c:	bl	bc0 <ff_printf>
 4a0:	b	ba0 <print_data+0xa5c>
 4a4:	movw	r0, #0
 4a8:	movt	r0, #0
 4ac:	bl	bc0 <ff_printf>
 4b0:	sub	r2, fp, #84	; 0x54
 4b4:	ldr	r1, [fp, #-12]
 4b8:	str	r0, [sp, #44]	; 0x2c
 4bc:	mov	r0, r1
 4c0:	sub	r1, fp, #88	; 0x58
 4c4:	bl	0 <coda_cursor_get_array_dim>
 4c8:	cmp	r0, #0
 4cc:	beq	4dc <print_data+0x398>
 4d0:	movw	r0, #0
 4d4:	movt	r0, #0
 4d8:	blx	r0
 4dc:	ldr	r0, [fp, #-88]	; 0xffffffa8
 4e0:	cmp	r0, #0
 4e4:	blt	5e4 <print_data+0x4a0>
 4e8:	movw	r0, #1
 4ec:	str	r0, [fp, #-92]	; 0xffffffa4
 4f0:	movw	r0, #0
 4f4:	str	r0, [fp, #-96]	; 0xffffffa0
 4f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
 4fc:	ldr	r1, [fp, #-88]	; 0xffffffa8
 500:	cmp	r0, r1
 504:	bge	534 <print_data+0x3f0>
 508:	ldr	r0, [fp, #-96]	; 0xffffffa0
 50c:	sub	r1, fp, #84	; 0x54
 510:	add	r0, r1, r0, lsl #2
 514:	ldr	r0, [r0]
 518:	ldr	r1, [fp, #-92]	; 0xffffffa4
 51c:	mul	r0, r1, r0
 520:	str	r0, [fp, #-92]	; 0xffffffa4
 524:	ldr	r0, [fp, #-96]	; 0xffffffa0
 528:	add	r0, r0, #1
 52c:	str	r0, [fp, #-96]	; 0xffffffa0
 530:	b	4f8 <print_data+0x3b4>
 534:	ldr	r0, [fp, #-92]	; 0xffffffa4
 538:	cmp	r0, #0
 53c:	ble	5e0 <print_data+0x49c>
 540:	ldr	r0, [fp, #-12]
 544:	bl	0 <coda_cursor_goto_first_array_element>
 548:	cmp	r0, #0
 54c:	beq	55c <print_data+0x418>
 550:	movw	r0, #0
 554:	movt	r0, #0
 558:	blx	r0
 55c:	movw	r0, #0
 560:	str	r0, [fp, #-96]	; 0xffffffa0
 564:	ldr	r0, [fp, #-96]	; 0xffffffa0
 568:	ldr	r1, [fp, #-92]	; 0xffffffa4
 56c:	cmp	r0, r1
 570:	bge	5d8 <print_data+0x494>
 574:	ldr	r0, [fp, #-12]
 578:	bl	144 <print_data>
 57c:	ldr	r0, [fp, #-96]	; 0xffffffa0
 580:	ldr	r1, [fp, #-92]	; 0xffffffa4
 584:	sub	r1, r1, #1
 588:	cmp	r0, r1
 58c:	bge	5c4 <print_data+0x480>
 590:	movw	r0, #0
 594:	movt	r0, #0
 598:	bl	bc0 <ff_printf>
 59c:	ldr	r1, [fp, #-12]
 5a0:	str	r0, [sp, #40]	; 0x28
 5a4:	mov	r0, r1
 5a8:	bl	0 <coda_cursor_goto_next_array_element>
 5ac:	cmp	r0, #0
 5b0:	beq	5c0 <print_data+0x47c>
 5b4:	movw	r0, #0
 5b8:	movt	r0, #0
 5bc:	blx	r0
 5c0:	b	5c4 <print_data+0x480>
 5c4:	b	5c8 <print_data+0x484>
 5c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
 5cc:	add	r0, r0, #1
 5d0:	str	r0, [fp, #-96]	; 0xffffffa0
 5d4:	b	564 <print_data+0x420>
 5d8:	ldr	r0, [fp, #-12]
 5dc:	bl	0 <coda_cursor_goto_parent>
 5e0:	b	5e4 <print_data+0x4a0>
 5e4:	movw	r0, #0
 5e8:	movt	r0, #0
 5ec:	bl	bc0 <ff_printf>
 5f0:	b	ba0 <print_data+0xa5c>
 5f4:	ldr	r0, [fp, #-12]
 5f8:	sub	r1, fp, #100	; 0x64
 5fc:	bl	0 <coda_cursor_get_read_type>
 600:	cmp	r0, #0
 604:	beq	614 <print_data+0x4d0>
 608:	movw	r0, #0
 60c:	movt	r0, #0
 610:	blx	r0
 614:	ldr	r0, [fp, #-100]	; 0xffffff9c
 618:	add	r0, r0, #1
 61c:	cmp	r0, #13
 620:	str	r0, [sp, #36]	; 0x24
 624:	bhi	a24 <print_data+0x8e0>
 628:	add	r0, pc, #8
 62c:	ldr	r1, [sp, #36]	; 0x24
 630:	ldr	r0, [r0, r1, lsl #2]
 634:	mov	pc, r0
 638:	.word	0x00000a18
 63c:	.word	0x000008cc
 640:	.word	0x00000900
 644:	.word	0x000008cc
 648:	.word	0x00000900
 64c:	.word	0x000008cc
 650:	.word	0x00000900
 654:	.word	0x00000934
 658:	.word	0x00000978
 65c:	.word	0x000009bc
 660:	.word	0x000009bc
 664:	.word	0x00000670
 668:	.word	0x000006c0
 66c:	.word	0x000007a4
 670:	ldr	r0, [fp, #-12]
 674:	sub	r1, fp, #101	; 0x65
 678:	bl	0 <coda_cursor_read_char>
 67c:	cmp	r0, #0
 680:	beq	690 <print_data+0x54c>
 684:	movw	r0, #0
 688:	movt	r0, #0
 68c:	blx	r0
 690:	movw	r0, #0
 694:	movt	r0, #0
 698:	bl	bc0 <ff_printf>
 69c:	sub	r1, fp, #101	; 0x65
 6a0:	str	r0, [sp, #32]
 6a4:	mov	r0, r1
 6a8:	movw	r1, #1
 6ac:	bl	c24 <print_escaped>
 6b0:	movw	r0, #0
 6b4:	movt	r0, #0
 6b8:	bl	bc0 <ff_printf>
 6bc:	b	a24 <print_data+0x8e0>
 6c0:	ldr	r0, [fp, #-12]
 6c4:	sub	r1, fp, #108	; 0x6c
 6c8:	bl	0 <coda_cursor_get_string_length>
 6cc:	cmp	r0, #0
 6d0:	beq	6e0 <print_data+0x59c>
 6d4:	movw	r0, #0
 6d8:	movt	r0, #0
 6dc:	blx	r0
 6e0:	ldr	r0, [fp, #-108]	; 0xffffff94
 6e4:	add	r0, r0, #1
 6e8:	bl	0 <malloc>
 6ec:	str	r0, [fp, #-112]	; 0xffffff90
 6f0:	ldr	r0, [fp, #-112]	; 0xffffff90
 6f4:	movw	r1, #0
 6f8:	cmp	r0, r1
 6fc:	bne	734 <print_data+0x5f0>
 700:	ldr	r0, [fp, #-108]	; 0xffffff94
 704:	add	r2, r0, #1
 708:	mvn	r0, #0
 70c:	movw	r1, #0
 710:	movt	r1, #0
 714:	movw	r3, #0
 718:	movt	r3, #0
 71c:	movw	ip, #303	; 0x12f
 720:	str	ip, [sp]
 724:	bl	0 <coda_set_error>
 728:	movw	r0, #0
 72c:	movt	r0, #0
 730:	blx	r0
 734:	ldr	r0, [fp, #-12]
 738:	ldr	r1, [fp, #-112]	; 0xffffff90
 73c:	ldr	r2, [fp, #-108]	; 0xffffff94
 740:	add	r2, r2, #1
 744:	bl	0 <coda_cursor_read_string>
 748:	cmp	r0, #0
 74c:	beq	75c <print_data+0x618>
 750:	movw	r0, #0
 754:	movt	r0, #0
 758:	blx	r0
 75c:	movw	r0, #0
 760:	movt	r0, #0
 764:	bl	bc0 <ff_printf>
 768:	ldr	r1, [fp, #-112]	; 0xffffff90
 76c:	ldr	r2, [fp, #-108]	; 0xffffff94
 770:	str	r0, [sp, #28]
 774:	mov	r0, r1
 778:	mov	r1, r2
 77c:	bl	c24 <print_escaped>
 780:	ldr	r1, [fp, #-108]	; 0xffffff94
 784:	movw	r0, #0
 788:	movt	r0, #0
 78c:	bl	bc0 <ff_printf>
 790:	ldr	r1, [fp, #-112]	; 0xffffff90
 794:	str	r0, [sp, #24]
 798:	mov	r0, r1
 79c:	bl	0 <free>
 7a0:	b	a24 <print_data+0x8e0>
 7a4:	ldr	r0, [fp, #-12]
 7a8:	sub	r1, fp, #120	; 0x78
 7ac:	bl	0 <coda_cursor_get_bit_size>
 7b0:	cmp	r0, #0
 7b4:	beq	7c4 <print_data+0x680>
 7b8:	movw	r0, #0
 7bc:	movt	r0, #0
 7c0:	blx	r0
 7c4:	ldr	r0, [fp, #-120]	; 0xffffff88
 7c8:	ldr	r1, [fp, #-116]	; 0xffffff8c
 7cc:	lsr	r2, r0, #3
 7d0:	orr	r2, r2, r1, lsl #29
 7d4:	asr	r1, r1, #3
 7d8:	and	r0, r0, #7
 7dc:	adds	r3, r2, #1
 7e0:	adc	ip, r1, #0
 7e4:	cmp	r0, #0
 7e8:	movne	r2, r3
 7ec:	cmp	r0, #0
 7f0:	movne	r1, ip
 7f4:	str	r2, [fp, #-128]	; 0xffffff80
 7f8:	str	r1, [fp, #-124]	; 0xffffff84
 7fc:	ldr	r0, [fp, #-128]	; 0xffffff80
 800:	bl	0 <malloc>
 804:	str	r0, [fp, #-132]	; 0xffffff7c
 808:	ldr	r0, [fp, #-132]	; 0xffffff7c
 80c:	movw	r1, #0
 810:	cmp	r0, r1
 814:	bne	848 <print_data+0x704>
 818:	ldr	r2, [fp, #-128]	; 0xffffff80
 81c:	mvn	r0, #0
 820:	movw	r1, #0
 824:	movt	r1, #0
 828:	movw	r3, #0
 82c:	movt	r3, #0
 830:	movw	ip, #334	; 0x14e
 834:	str	ip, [sp]
 838:	bl	0 <coda_set_error>
 83c:	movw	r0, #0
 840:	movt	r0, #0
 844:	blx	r0
 848:	ldr	r0, [fp, #-12]
 84c:	ldr	r1, [fp, #-132]	; 0xffffff7c
 850:	ldr	r2, [fp, #-120]	; 0xffffff88
 854:	ldr	r3, [fp, #-116]	; 0xffffff8c
 858:	mov	ip, sp
 85c:	str	r3, [ip, #4]
 860:	str	r2, [ip]
 864:	mov	r2, #0
 868:	str	r2, [sp, #20]
 86c:	ldr	r3, [sp, #20]
 870:	bl	0 <coda_cursor_read_bits>
 874:	cmp	r0, #0
 878:	beq	888 <print_data+0x744>
 87c:	movw	r0, #0
 880:	movt	r0, #0
 884:	blx	r0
 888:	movw	r0, #0
 88c:	movt	r0, #0
 890:	bl	bc0 <ff_printf>
 894:	ldr	r1, [fp, #-132]	; 0xffffff7c
 898:	ldr	r2, [fp, #-128]	; 0xffffff80
 89c:	str	r0, [sp, #16]
 8a0:	mov	r0, r1
 8a4:	mov	r1, r2
 8a8:	bl	c24 <print_escaped>
 8ac:	movw	r0, #0
 8b0:	movt	r0, #0
 8b4:	bl	bc0 <ff_printf>
 8b8:	ldr	r1, [fp, #-132]	; 0xffffff7c
 8bc:	str	r0, [sp, #12]
 8c0:	mov	r0, r1
 8c4:	bl	0 <free>
 8c8:	b	a24 <print_data+0x8e0>
 8cc:	ldr	r0, [fp, #-12]
 8d0:	sub	r1, fp, #136	; 0x88
 8d4:	bl	0 <coda_cursor_read_int32>
 8d8:	cmp	r0, #0
 8dc:	beq	8ec <print_data+0x7a8>
 8e0:	movw	r0, #0
 8e4:	movt	r0, #0
 8e8:	blx	r0
 8ec:	ldr	r1, [fp, #-136]	; 0xffffff78
 8f0:	movw	r0, #0
 8f4:	movt	r0, #0
 8f8:	bl	bc0 <ff_printf>
 8fc:	b	a24 <print_data+0x8e0>
 900:	ldr	r0, [fp, #-12]
 904:	sub	r1, fp, #140	; 0x8c
 908:	bl	0 <coda_cursor_read_uint32>
 90c:	cmp	r0, #0
 910:	beq	920 <print_data+0x7dc>
 914:	movw	r0, #0
 918:	movt	r0, #0
 91c:	blx	r0
 920:	ldr	r1, [fp, #-140]	; 0xffffff74
 924:	movw	r0, #0
 928:	movt	r0, #0
 92c:	bl	bc0 <ff_printf>
 930:	b	a24 <print_data+0x8e0>
 934:	ldr	r0, [fp, #-12]
 938:	sub	r1, fp, #152	; 0x98
 93c:	bl	0 <coda_cursor_read_int64>
 940:	cmp	r0, #0
 944:	beq	954 <print_data+0x810>
 948:	movw	r0, #0
 94c:	movt	r0, #0
 950:	blx	r0
 954:	sub	r2, fp, #173	; 0xad
 958:	ldr	r0, [fp, #-152]	; 0xffffff68
 95c:	ldr	r1, [fp, #-148]	; 0xffffff6c
 960:	bl	0 <coda_str64>
 964:	sub	r1, fp, #173	; 0xad
 968:	movw	r0, #0
 96c:	movt	r0, #0
 970:	bl	bc0 <ff_printf>
 974:	b	a24 <print_data+0x8e0>
 978:	ldr	r0, [fp, #-12]
 97c:	add	r1, sp, #176	; 0xb0
 980:	bl	0 <coda_cursor_read_uint64>
 984:	cmp	r0, #0
 988:	beq	998 <print_data+0x854>
 98c:	movw	r0, #0
 990:	movt	r0, #0
 994:	blx	r0
 998:	add	r2, sp, #155	; 0x9b
 99c:	ldr	r0, [sp, #176]	; 0xb0
 9a0:	ldr	r1, [sp, #180]	; 0xb4
 9a4:	bl	0 <coda_str64u>
 9a8:	add	r1, sp, #155	; 0x9b
 9ac:	movw	r0, #0
 9b0:	movt	r0, #0
 9b4:	bl	bc0 <ff_printf>
 9b8:	b	a24 <print_data+0x8e0>
 9bc:	ldr	r0, [fp, #-12]
 9c0:	add	r1, sp, #144	; 0x90
 9c4:	bl	0 <coda_cursor_read_double>
 9c8:	cmp	r0, #0
 9cc:	beq	9dc <print_data+0x898>
 9d0:	movw	r0, #0
 9d4:	movt	r0, #0
 9d8:	blx	r0
 9dc:	ldr	r0, [fp, #-100]	; 0xffffff9c
 9e0:	cmp	r0, #8
 9e4:	bne	a00 <print_data+0x8bc>
 9e8:	vldr	d16, [sp, #144]	; 0x90
 9ec:	movw	r0, #0
 9f0:	movt	r0, #0
 9f4:	vmov	r2, r3, d16
 9f8:	bl	bc0 <ff_printf>
 9fc:	b	a14 <print_data+0x8d0>
 a00:	vldr	d16, [sp, #144]	; 0x90
 a04:	movw	r0, #0
 a08:	movt	r0, #0
 a0c:	vmov	r2, r3, d16
 a10:	bl	bc0 <ff_printf>
 a14:	b	a24 <print_data+0x8e0>
 a18:	movw	r0, #0
 a1c:	movt	r0, #0
 a20:	bl	bc0 <ff_printf>
 a24:	b	ba0 <print_data+0xa5c>
 a28:	ldr	r0, [fp, #-12]
 a2c:	add	r1, sp, #140	; 0x8c
 a30:	bl	0 <coda_cursor_get_special_type>
 a34:	cmp	r0, #0
 a38:	beq	a48 <print_data+0x904>
 a3c:	movw	r0, #0
 a40:	movt	r0, #0
 a44:	blx	r0
 a48:	ldr	r0, [sp, #140]	; 0x8c
 a4c:	cmp	r0, #3
 a50:	str	r0, [sp, #8]
 a54:	bhi	b9c <print_data+0xa58>
 a58:	add	r0, pc, #8
 a5c:	ldr	r1, [sp, #8]
 a60:	ldr	r0, [r0, r1, lsl #2]
 a64:	mov	pc, r0
 a68:	.word	0x00000a78
 a6c:	.word	0x00000a88
 a70:	.word	0x00000ac0
 a74:	.word	0x00000b5c
 a78:	movw	r0, #0
 a7c:	movt	r0, #0
 a80:	bl	bc0 <ff_printf>
 a84:	b	b9c <print_data+0xa58>
 a88:	ldr	r0, [fp, #-12]
 a8c:	add	r1, sp, #128	; 0x80
 a90:	bl	0 <coda_cursor_read_double>
 a94:	cmp	r0, #0
 a98:	beq	aa8 <print_data+0x964>
 a9c:	movw	r0, #0
 aa0:	movt	r0, #0
 aa4:	blx	r0
 aa8:	vldr	d16, [sp, #128]	; 0x80
 aac:	movw	r0, #0
 ab0:	movt	r0, #0
 ab4:	vmov	r2, r3, d16
 ab8:	bl	bc0 <ff_printf>
 abc:	b	b9c <print_data+0xa58>
 ac0:	ldr	r0, [fp, #-12]
 ac4:	add	r1, sp, #120	; 0x78
 ac8:	bl	0 <coda_cursor_read_double>
 acc:	cmp	r0, #0
 ad0:	beq	ae0 <print_data+0x99c>
 ad4:	movw	r0, #0
 ad8:	movt	r0, #0
 adc:	blx	r0
 ae0:	vldr	d0, [sp, #120]	; 0x78
 ae4:	bl	0 <coda_isNaN>
 ae8:	cmp	r0, #0
 aec:	bne	b00 <print_data+0x9bc>
 af0:	vldr	d0, [sp, #120]	; 0x78
 af4:	bl	0 <coda_isInf>
 af8:	cmp	r0, #0
 afc:	beq	b18 <print_data+0x9d4>
 b00:	vldr	d16, [sp, #120]	; 0x78
 b04:	movw	r0, #0
 b08:	movt	r0, #0
 b0c:	vmov	r2, r3, d16
 b10:	bl	bc0 <ff_printf>
 b14:	b	b58 <print_data+0xa14>
 b18:	add	r1, sp, #93	; 0x5d
 b1c:	vldr	d0, [sp, #120]	; 0x78
 b20:	movw	r0, #0
 b24:	movt	r0, #0
 b28:	bl	0 <coda_time_double_to_string>
 b2c:	cmp	r0, #0
 b30:	beq	b44 <print_data+0xa00>
 b34:	movw	r0, #0
 b38:	movt	r0, #0
 b3c:	bl	bc0 <ff_printf>
 b40:	b	b54 <print_data+0xa10>
 b44:	add	r1, sp, #93	; 0x5d
 b48:	movw	r0, #0
 b4c:	movt	r0, #0
 b50:	bl	bc0 <ff_printf>
 b54:	b	b58 <print_data+0xa14>
 b58:	b	b9c <print_data+0xa58>
 b5c:	ldr	r0, [fp, #-12]
 b60:	add	r1, sp, #80	; 0x50
 b64:	add	r2, sp, #72	; 0x48
 b68:	bl	0 <coda_cursor_read_complex_double_split>
 b6c:	cmp	r0, #0
 b70:	beq	b80 <print_data+0xa3c>
 b74:	movw	r0, #0
 b78:	movt	r0, #0
 b7c:	blx	r0
 b80:	vldr	d16, [sp, #80]	; 0x50
 b84:	vldr	d17, [sp, #72]	; 0x48
 b88:	movw	r0, #0
 b8c:	movt	r0, #0
 b90:	vmov	r2, r3, d16
 b94:	vstr	d17, [sp]
 b98:	bl	bc0 <ff_printf>
 b9c:	b	ba0 <print_data+0xa5c>
 ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
 ba4:	cmp	r0, #0
 ba8:	beq	bb8 <print_data+0xa74>
 bac:	movw	r0, #0
 bb0:	movt	r0, #0
 bb4:	bl	bc0 <ff_printf>
 bb8:	sub	sp, fp, #8
 bbc:	pop	{r4, r5, fp, pc}

00000bc0 <ff_printf>:
 bc0:	sub	sp, sp, #12
 bc4:	push	{fp, lr}
 bc8:	mov	fp, sp
 bcc:	sub	sp, sp, #20
 bd0:	str	r3, [fp, #16]
 bd4:	str	r2, [fp, #12]
 bd8:	str	r1, [fp, #8]
 bdc:	str	r0, [fp, #-4]
 be0:	add	r0, fp, #8
 be4:	str	r0, [sp, #8]
 be8:	movw	r0, #0
 bec:	movt	r0, #0
 bf0:	ldr	r0, [r0]
 bf4:	ldr	r1, [fp, #-4]
 bf8:	ldr	r2, [sp, #8]
 bfc:	bl	0 <vfprintf>
 c00:	str	r0, [fp, #-8]
 c04:	add	r0, sp, #8
 c08:	ldr	r1, [fp, #-8]
 c0c:	str	r0, [sp, #4]
 c10:	mov	r0, r1
 c14:	mov	sp, fp
 c18:	pop	{fp, lr}
 c1c:	add	sp, sp, #12
 c20:	bx	lr

00000c24 <print_escaped>:
 c24:	push	{fp, lr}
 c28:	mov	fp, sp
 c2c:	sub	sp, sp, #24
 c30:	str	r0, [fp, #-4]
 c34:	str	r1, [fp, #-8]
 c38:	movw	r0, #0
 c3c:	str	r0, [sp, #12]
 c40:	ldr	r0, [sp, #12]
 c44:	ldr	r1, [fp, #-8]
 c48:	cmp	r0, r1
 c4c:	bge	d9c <print_escaped+0x178>
 c50:	ldr	r0, [fp, #-4]
 c54:	ldr	r1, [sp, #12]
 c58:	ldrb	r0, [r0, r1]
 c5c:	strb	r0, [sp, #11]
 c60:	ldrb	r0, [sp, #11]
 c64:	mov	r1, r0
 c68:	cmp	r0, #8
 c6c:	str	r1, [sp, #4]
 c70:	beq	cd8 <print_escaped+0xb4>
 c74:	b	c78 <print_escaped+0x54>
 c78:	ldr	r0, [sp, #4]
 c7c:	cmp	r0, #9
 c80:	beq	d18 <print_escaped+0xf4>
 c84:	b	c88 <print_escaped+0x64>
 c88:	ldr	r0, [sp, #4]
 c8c:	cmp	r0, #10
 c90:	beq	cf8 <print_escaped+0xd4>
 c94:	b	c98 <print_escaped+0x74>
 c98:	ldr	r0, [sp, #4]
 c9c:	cmp	r0, #12
 ca0:	beq	ce8 <print_escaped+0xc4>
 ca4:	b	ca8 <print_escaped+0x84>
 ca8:	ldr	r0, [sp, #4]
 cac:	cmp	r0, #13
 cb0:	beq	d08 <print_escaped+0xe4>
 cb4:	b	cb8 <print_escaped+0x94>
 cb8:	ldr	r0, [sp, #4]
 cbc:	cmp	r0, #34	; 0x22
 cc0:	beq	d28 <print_escaped+0x104>
 cc4:	b	cc8 <print_escaped+0xa4>
 cc8:	ldr	r0, [sp, #4]
 ccc:	cmp	r0, #92	; 0x5c
 cd0:	beq	d38 <print_escaped+0x114>
 cd4:	b	d48 <print_escaped+0x124>
 cd8:	movw	r0, #0
 cdc:	movt	r0, #0
 ce0:	bl	bc0 <ff_printf>
 ce4:	b	d88 <print_escaped+0x164>
 ce8:	movw	r0, #0
 cec:	movt	r0, #0
 cf0:	bl	bc0 <ff_printf>
 cf4:	b	d88 <print_escaped+0x164>
 cf8:	movw	r0, #0
 cfc:	movt	r0, #0
 d00:	bl	bc0 <ff_printf>
 d04:	b	d88 <print_escaped+0x164>
 d08:	movw	r0, #0
 d0c:	movt	r0, #0
 d10:	bl	bc0 <ff_printf>
 d14:	b	d88 <print_escaped+0x164>
 d18:	movw	r0, #0
 d1c:	movt	r0, #0
 d20:	bl	bc0 <ff_printf>
 d24:	b	d88 <print_escaped+0x164>
 d28:	movw	r0, #0
 d2c:	movt	r0, #0
 d30:	bl	bc0 <ff_printf>
 d34:	b	d88 <print_escaped+0x164>
 d38:	movw	r0, #0
 d3c:	movt	r0, #0
 d40:	bl	bc0 <ff_printf>
 d44:	b	d88 <print_escaped+0x164>
 d48:	ldrb	r0, [sp, #11]
 d4c:	cmp	r0, #32
 d50:	blt	d74 <print_escaped+0x150>
 d54:	ldrb	r0, [sp, #11]
 d58:	cmp	r0, #126	; 0x7e
 d5c:	bgt	d74 <print_escaped+0x150>
 d60:	ldrb	r1, [sp, #11]
 d64:	movw	r0, #0
 d68:	movt	r0, #0
 d6c:	bl	bc0 <ff_printf>
 d70:	b	d84 <print_escaped+0x160>
 d74:	ldrb	r1, [sp, #11]
 d78:	movw	r0, #0
 d7c:	movt	r0, #0
 d80:	bl	bc0 <ff_printf>
 d84:	b	d88 <print_escaped+0x164>
 d88:	b	d8c <print_escaped+0x168>
 d8c:	ldr	r0, [sp, #12]
 d90:	add	r0, r0, #1
 d94:	str	r0, [sp, #12]
 d98:	b	c40 <print_escaped+0x1c>
 d9c:	mov	sp, fp
 da0:	pop	{fp, pc}
