
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-errno.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_errno>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #4
   c:	ldr	r0, [pc, #20]	; 28 <coda_get_errno+0x28>
  10:	str	r0, [sp]
  14:	bl	0 <__aeabi_read_tp>
  18:	ldr	ip, [sp]
  1c:	add	r0, r0, ip
  20:	mov	sp, fp
  24:	pop	{fp, pc}
  28:	.word	0x00000000

0000002c <coda_add_error_message_vargs>:
  2c:	push	{r4, r5, fp, lr}
  30:	add	fp, sp, #8
  34:	sub	sp, sp, #56	; 0x38
  38:	sub	sp, sp, #4096	; 0x1000
  3c:	str	r1, [fp, #-12]
  40:	str	r0, [fp, #-16]
  44:	ldr	r0, [fp, #-16]
  48:	movw	r1, #0
  4c:	cmp	r0, r1
  50:	bne	58 <coda_add_error_message_vargs+0x2c>
  54:	b	140 <coda_add_error_message_vargs+0x114>
  58:	ldr	r0, [pc, #232]	; 148 <coda_add_error_message_vargs+0x11c>
  5c:	str	r0, [sp, #36]	; 0x24
  60:	bl	0 <__aeabi_read_tp>
  64:	ldr	ip, [sp, #36]	; 0x24
  68:	add	r0, r0, ip
  6c:	bl	0 <strlen>
  70:	str	r0, [sp, #40]	; 0x28
  74:	ldr	r0, [sp, #40]	; 0x28
  78:	cmp	r0, #4096	; 0x1000
  7c:	blt	84 <coda_add_error_message_vargs+0x58>
  80:	b	140 <coda_add_error_message_vargs+0x114>
  84:	ldr	r0, [sp, #40]	; 0x28
  88:	cmp	r0, #0
  8c:	bne	e4 <coda_add_error_message_vargs+0xb8>
  90:	add	r0, sp, #47	; 0x2f
  94:	ldr	r1, [pc, #176]	; 14c <coda_add_error_message_vargs+0x120>
  98:	str	r0, [sp, #32]
  9c:	str	r1, [sp, #28]
  a0:	bl	0 <__aeabi_read_tp>
  a4:	ldr	r1, [sp, #28]
  a8:	ldr	r0, [r0, r1]
  ac:	bl	150 <coda_errno_to_string>
  b0:	add	r1, sp, #47	; 0x2f
  b4:	ldr	ip, [sp, #32]
  b8:	str	r0, [sp, #24]
  bc:	mov	r0, ip
  c0:	ldr	lr, [sp, #24]
  c4:	str	r1, [sp, #20]
  c8:	mov	r1, lr
  cc:	bl	0 <strcpy>
  d0:	ldr	r1, [sp, #20]
  d4:	str	r0, [sp, #16]
  d8:	mov	r0, r1
  dc:	bl	0 <strlen>
  e0:	str	r0, [sp, #40]	; 0x28
  e4:	add	r0, sp, #47	; 0x2f
  e8:	ldr	r1, [sp, #40]	; 0x28
  ec:	rsb	r1, r1, #4096	; 0x1000
  f0:	ldr	r2, [fp, #-16]
  f4:	ldr	r3, [fp, #-12]
  f8:	bl	0 <vsnprintf>
  fc:	add	r1, sp, #47	; 0x2f
 100:	ldr	r2, [sp, #40]	; 0x28
 104:	movw	r3, #4096	; 0x1000
 108:	sub	r2, r3, r2
 10c:	add	r2, r1, r2
 110:	movw	r3, #0
 114:	strb	r3, [r2]
 118:	ldr	r2, [pc, #40]	; 148 <coda_add_error_message_vargs+0x11c>
 11c:	str	r0, [sp, #12]
 120:	str	r1, [sp, #8]
 124:	str	r2, [sp, #4]
 128:	bl	0 <__aeabi_read_tp>
 12c:	ldr	r1, [sp, #4]
 130:	add	r0, r0, r1
 134:	ldr	r1, [sp, #8]
 138:	bl	0 <strcat>
 13c:	str	r0, [sp]
 140:	sub	sp, fp, #8
 144:	pop	{r4, r5, fp, pc}
	...

00000150 <coda_errno_to_string>:
 150:	push	{fp, lr}
 154:	mov	fp, sp
 158:	sub	sp, sp, #40	; 0x28
 15c:	str	r0, [fp, #-8]
 160:	ldr	r0, [fp, #-8]
 164:	ldr	r1, [pc, #992]	; 54c <coda_errno_to_string+0x3fc>
 168:	str	r0, [fp, #-12]
 16c:	str	r1, [fp, #-16]
 170:	bl	0 <__aeabi_read_tp>
 174:	ldr	r1, [fp, #-16]
 178:	ldr	r0, [r0, r1]
 17c:	ldr	r1, [fp, #-12]
 180:	cmp	r1, r0
 184:	bne	1c4 <coda_errno_to_string+0x74>
 188:	ldr	r0, [pc, #960]	; 550 <coda_errno_to_string+0x400>
 18c:	str	r0, [sp, #20]
 190:	bl	0 <__aeabi_read_tp>
 194:	ldr	ip, [sp, #20]
 198:	ldrb	r0, [r0, ip]
 19c:	and	r0, r0, #255	; 0xff
 1a0:	cmp	r0, #0
 1a4:	beq	1c4 <coda_errno_to_string+0x74>
 1a8:	ldr	r0, [pc, #928]	; 550 <coda_errno_to_string+0x400>
 1ac:	str	r0, [sp, #16]
 1b0:	bl	0 <__aeabi_read_tp>
 1b4:	ldr	ip, [sp, #16]
 1b8:	add	r0, r0, ip
 1bc:	str	r0, [fp, #-4]
 1c0:	b	540 <coda_errno_to_string+0x3f0>
 1c4:	ldr	r0, [fp, #-8]
 1c8:	mvn	r1, #400	; 0x190
 1cc:	cmp	r0, r1
 1d0:	str	r0, [sp, #12]
 1d4:	beq	4e0 <coda_errno_to_string+0x390>
 1d8:	b	1dc <coda_errno_to_string+0x8c>
 1dc:	ldr	r0, [sp, #12]
 1e0:	cmn	r0, #400	; 0x190
 1e4:	beq	4d0 <coda_errno_to_string+0x380>
 1e8:	b	1ec <coda_errno_to_string+0x9c>
 1ec:	mvn	r0, #300	; 0x12c
 1f0:	ldr	r1, [sp, #12]
 1f4:	cmp	r1, r0
 1f8:	beq	4c0 <coda_errno_to_string+0x370>
 1fc:	b	200 <coda_errno_to_string+0xb0>
 200:	ldr	r0, [sp, #12]
 204:	cmn	r0, #300	; 0x12c
 208:	beq	4b0 <coda_errno_to_string+0x360>
 20c:	b	210 <coda_errno_to_string+0xc0>
 210:	ldr	r0, [sp, #12]
 214:	cmn	r0, #200	; 0xc8
 218:	beq	4a0 <coda_errno_to_string+0x350>
 21c:	b	220 <coda_errno_to_string+0xd0>
 220:	ldr	r0, [sp, #12]
 224:	cmn	r0, #108	; 0x6c
 228:	beq	490 <coda_errno_to_string+0x340>
 22c:	b	230 <coda_errno_to_string+0xe0>
 230:	ldr	r0, [sp, #12]
 234:	cmn	r0, #107	; 0x6b
 238:	beq	480 <coda_errno_to_string+0x330>
 23c:	b	240 <coda_errno_to_string+0xf0>
 240:	ldr	r0, [sp, #12]
 244:	cmn	r0, #106	; 0x6a
 248:	beq	470 <coda_errno_to_string+0x320>
 24c:	b	250 <coda_errno_to_string+0x100>
 250:	ldr	r0, [sp, #12]
 254:	cmn	r0, #105	; 0x69
 258:	beq	460 <coda_errno_to_string+0x310>
 25c:	b	260 <coda_errno_to_string+0x110>
 260:	ldr	r0, [sp, #12]
 264:	cmn	r0, #104	; 0x68
 268:	beq	450 <coda_errno_to_string+0x300>
 26c:	b	270 <coda_errno_to_string+0x120>
 270:	ldr	r0, [sp, #12]
 274:	cmn	r0, #103	; 0x67
 278:	beq	440 <coda_errno_to_string+0x2f0>
 27c:	b	280 <coda_errno_to_string+0x130>
 280:	ldr	r0, [sp, #12]
 284:	cmn	r0, #102	; 0x66
 288:	beq	430 <coda_errno_to_string+0x2e0>
 28c:	b	290 <coda_errno_to_string+0x140>
 290:	ldr	r0, [sp, #12]
 294:	cmn	r0, #101	; 0x65
 298:	beq	420 <coda_errno_to_string+0x2d0>
 29c:	b	2a0 <coda_errno_to_string+0x150>
 2a0:	ldr	r0, [sp, #12]
 2a4:	cmn	r0, #100	; 0x64
 2a8:	beq	410 <coda_errno_to_string+0x2c0>
 2ac:	b	2b0 <coda_errno_to_string+0x160>
 2b0:	ldr	r0, [sp, #12]
 2b4:	cmn	r0, #23
 2b8:	beq	400 <coda_errno_to_string+0x2b0>
 2bc:	b	2c0 <coda_errno_to_string+0x170>
 2c0:	ldr	r0, [sp, #12]
 2c4:	cmn	r0, #22
 2c8:	beq	3f0 <coda_errno_to_string+0x2a0>
 2cc:	b	2d0 <coda_errno_to_string+0x180>
 2d0:	ldr	r0, [sp, #12]
 2d4:	cmn	r0, #21
 2d8:	beq	3e0 <coda_errno_to_string+0x290>
 2dc:	b	2e0 <coda_errno_to_string+0x190>
 2e0:	ldr	r0, [sp, #12]
 2e4:	cmn	r0, #20
 2e8:	beq	3d0 <coda_errno_to_string+0x280>
 2ec:	b	2f0 <coda_errno_to_string+0x1a0>
 2f0:	ldr	r0, [sp, #12]
 2f4:	cmn	r0, #14
 2f8:	beq	3c0 <coda_errno_to_string+0x270>
 2fc:	b	300 <coda_errno_to_string+0x1b0>
 300:	ldr	r0, [sp, #12]
 304:	cmn	r0, #13
 308:	beq	3b0 <coda_errno_to_string+0x260>
 30c:	b	310 <coda_errno_to_string+0x1c0>
 310:	ldr	r0, [sp, #12]
 314:	cmn	r0, #12
 318:	beq	3a0 <coda_errno_to_string+0x250>
 31c:	b	320 <coda_errno_to_string+0x1d0>
 320:	ldr	r0, [sp, #12]
 324:	cmn	r0, #11
 328:	beq	390 <coda_errno_to_string+0x240>
 32c:	b	330 <coda_errno_to_string+0x1e0>
 330:	ldr	r0, [sp, #12]
 334:	cmn	r0, #10
 338:	beq	380 <coda_errno_to_string+0x230>
 33c:	b	340 <coda_errno_to_string+0x1f0>
 340:	ldr	r0, [sp, #12]
 344:	cmn	r0, #1
 348:	beq	370 <coda_errno_to_string+0x220>
 34c:	b	350 <coda_errno_to_string+0x200>
 350:	ldr	r0, [sp, #12]
 354:	cmp	r0, #0
 358:	bne	4f0 <coda_errno_to_string+0x3a0>
 35c:	b	360 <coda_errno_to_string+0x210>
 360:	movw	r0, #0
 364:	movt	r0, #0
 368:	str	r0, [fp, #-4]
 36c:	b	540 <coda_errno_to_string+0x3f0>
 370:	movw	r0, #0
 374:	movt	r0, #0
 378:	str	r0, [fp, #-4]
 37c:	b	540 <coda_errno_to_string+0x3f0>
 380:	movw	r0, #0
 384:	movt	r0, #0
 388:	str	r0, [fp, #-4]
 38c:	b	540 <coda_errno_to_string+0x3f0>
 390:	movw	r0, #0
 394:	movt	r0, #0
 398:	str	r0, [fp, #-4]
 39c:	b	540 <coda_errno_to_string+0x3f0>
 3a0:	movw	r0, #0
 3a4:	movt	r0, #0
 3a8:	str	r0, [fp, #-4]
 3ac:	b	540 <coda_errno_to_string+0x3f0>
 3b0:	movw	r0, #0
 3b4:	movt	r0, #0
 3b8:	str	r0, [fp, #-4]
 3bc:	b	540 <coda_errno_to_string+0x3f0>
 3c0:	movw	r0, #0
 3c4:	movt	r0, #0
 3c8:	str	r0, [fp, #-4]
 3cc:	b	540 <coda_errno_to_string+0x3f0>
 3d0:	movw	r0, #0
 3d4:	movt	r0, #0
 3d8:	str	r0, [fp, #-4]
 3dc:	b	540 <coda_errno_to_string+0x3f0>
 3e0:	movw	r0, #0
 3e4:	movt	r0, #0
 3e8:	str	r0, [fp, #-4]
 3ec:	b	540 <coda_errno_to_string+0x3f0>
 3f0:	movw	r0, #0
 3f4:	movt	r0, #0
 3f8:	str	r0, [fp, #-4]
 3fc:	b	540 <coda_errno_to_string+0x3f0>
 400:	movw	r0, #0
 404:	movt	r0, #0
 408:	str	r0, [fp, #-4]
 40c:	b	540 <coda_errno_to_string+0x3f0>
 410:	movw	r0, #0
 414:	movt	r0, #0
 418:	str	r0, [fp, #-4]
 41c:	b	540 <coda_errno_to_string+0x3f0>
 420:	movw	r0, #0
 424:	movt	r0, #0
 428:	str	r0, [fp, #-4]
 42c:	b	540 <coda_errno_to_string+0x3f0>
 430:	movw	r0, #0
 434:	movt	r0, #0
 438:	str	r0, [fp, #-4]
 43c:	b	540 <coda_errno_to_string+0x3f0>
 440:	movw	r0, #0
 444:	movt	r0, #0
 448:	str	r0, [fp, #-4]
 44c:	b	540 <coda_errno_to_string+0x3f0>
 450:	movw	r0, #0
 454:	movt	r0, #0
 458:	str	r0, [fp, #-4]
 45c:	b	540 <coda_errno_to_string+0x3f0>
 460:	movw	r0, #0
 464:	movt	r0, #0
 468:	str	r0, [fp, #-4]
 46c:	b	540 <coda_errno_to_string+0x3f0>
 470:	movw	r0, #0
 474:	movt	r0, #0
 478:	str	r0, [fp, #-4]
 47c:	b	540 <coda_errno_to_string+0x3f0>
 480:	movw	r0, #0
 484:	movt	r0, #0
 488:	str	r0, [fp, #-4]
 48c:	b	540 <coda_errno_to_string+0x3f0>
 490:	movw	r0, #0
 494:	movt	r0, #0
 498:	str	r0, [fp, #-4]
 49c:	b	540 <coda_errno_to_string+0x3f0>
 4a0:	movw	r0, #0
 4a4:	movt	r0, #0
 4a8:	str	r0, [fp, #-4]
 4ac:	b	540 <coda_errno_to_string+0x3f0>
 4b0:	movw	r0, #0
 4b4:	movt	r0, #0
 4b8:	str	r0, [fp, #-4]
 4bc:	b	540 <coda_errno_to_string+0x3f0>
 4c0:	movw	r0, #0
 4c4:	movt	r0, #0
 4c8:	str	r0, [fp, #-4]
 4cc:	b	540 <coda_errno_to_string+0x3f0>
 4d0:	movw	r0, #0
 4d4:	movt	r0, #0
 4d8:	str	r0, [fp, #-4]
 4dc:	b	540 <coda_errno_to_string+0x3f0>
 4e0:	movw	r0, #0
 4e4:	movt	r0, #0
 4e8:	str	r0, [fp, #-4]
 4ec:	b	540 <coda_errno_to_string+0x3f0>
 4f0:	ldr	r0, [fp, #-8]
 4f4:	ldr	r1, [pc, #80]	; 54c <coda_errno_to_string+0x3fc>
 4f8:	str	r0, [sp, #8]
 4fc:	str	r1, [sp, #4]
 500:	bl	0 <__aeabi_read_tp>
 504:	ldr	r1, [sp, #4]
 508:	ldr	r0, [r0, r1]
 50c:	ldr	r1, [sp, #8]
 510:	cmp	r1, r0
 514:	bne	534 <coda_errno_to_string+0x3e4>
 518:	ldr	r0, [pc, #48]	; 550 <coda_errno_to_string+0x400>
 51c:	str	r0, [sp]
 520:	bl	0 <__aeabi_read_tp>
 524:	ldr	ip, [sp]
 528:	add	r0, r0, ip
 52c:	str	r0, [fp, #-4]
 530:	b	540 <coda_errno_to_string+0x3f0>
 534:	movw	r0, #0
 538:	movt	r0, #0
 53c:	str	r0, [fp, #-4]
 540:	ldr	r0, [fp, #-4]
 544:	mov	sp, fp
 548:	pop	{fp, pc}
	...

00000554 <coda_add_error_message>:
 554:	sub	sp, sp, #12
 558:	push	{fp, lr}
 55c:	mov	fp, sp
 560:	sub	sp, sp, #12
 564:	str	r3, [fp, #16]
 568:	str	r2, [fp, #12]
 56c:	str	r1, [fp, #8]
 570:	str	r0, [fp, #-4]
 574:	add	r0, fp, #8
 578:	str	r0, [sp, #4]
 57c:	ldr	r0, [fp, #-4]
 580:	ldr	r1, [sp, #4]
 584:	bl	2c <coda_add_error_message_vargs>
 588:	add	r0, sp, #4
 58c:	str	r0, [sp]
 590:	mov	sp, fp
 594:	pop	{fp, lr}
 598:	add	sp, sp, #12
 59c:	bx	lr

000005a0 <coda_set_error_message_vargs>:
 5a0:	push	{r4, r5, fp, lr}
 5a4:	add	fp, sp, #8
 5a8:	sub	sp, sp, #32
 5ac:	sub	sp, sp, #4096	; 0x1000
 5b0:	str	r1, [fp, #-12]
 5b4:	str	r0, [fp, #-16]
 5b8:	ldr	r0, [fp, #-16]
 5bc:	movw	r1, #0
 5c0:	cmp	r0, r1
 5c4:	bne	5e4 <coda_set_error_message_vargs+0x44>
 5c8:	ldr	r0, [pc, #108]	; 63c <coda_set_error_message_vargs+0x9c>
 5cc:	str	r0, [sp, #16]
 5d0:	bl	0 <__aeabi_read_tp>
 5d4:	mov	ip, #0
 5d8:	ldr	lr, [sp, #16]
 5dc:	strb	ip, [r0, lr]
 5e0:	b	634 <coda_set_error_message_vargs+0x94>
 5e4:	add	r0, sp, #23
 5e8:	ldr	r2, [fp, #-16]
 5ec:	ldr	r3, [fp, #-12]
 5f0:	mov	r1, #4096	; 0x1000
 5f4:	bl	0 <vsnprintf>
 5f8:	add	r1, sp, #23
 5fc:	add	r2, sp, #23
 600:	add	r2, r2, #4096	; 0x1000
 604:	movw	r3, #0
 608:	strb	r3, [r2]
 60c:	ldr	r2, [pc, #40]	; 63c <coda_set_error_message_vargs+0x9c>
 610:	str	r0, [sp, #12]
 614:	str	r1, [sp, #8]
 618:	str	r2, [sp, #4]
 61c:	bl	0 <__aeabi_read_tp>
 620:	ldr	r1, [sp, #4]
 624:	add	r0, r0, r1
 628:	ldr	r1, [sp, #8]
 62c:	bl	0 <strcpy>
 630:	str	r0, [sp]
 634:	sub	sp, fp, #8
 638:	pop	{r4, r5, fp, pc}
 63c:	.word	0x00000000

00000640 <coda_set_error_message>:
 640:	sub	sp, sp, #12
 644:	push	{fp, lr}
 648:	mov	fp, sp
 64c:	sub	sp, sp, #12
 650:	str	r3, [fp, #16]
 654:	str	r2, [fp, #12]
 658:	str	r1, [fp, #8]
 65c:	str	r0, [fp, #-4]
 660:	add	r0, fp, #8
 664:	str	r0, [sp, #4]
 668:	ldr	r0, [fp, #-4]
 66c:	ldr	r1, [sp, #4]
 670:	bl	5a0 <coda_set_error_message_vargs>
 674:	add	r0, sp, #4
 678:	str	r0, [sp]
 67c:	mov	sp, fp
 680:	pop	{fp, lr}
 684:	add	sp, sp, #12
 688:	bx	lr

0000068c <coda_cursor_add_to_error_message>:
 68c:	push	{fp, lr}
 690:	mov	fp, sp
 694:	sub	sp, sp, #8
 698:	str	r0, [sp, #4]
 69c:	movw	r0, #0
 6a0:	movt	r0, #0
 6a4:	bl	554 <coda_add_error_message>
 6a8:	ldr	r0, [sp, #4]
 6ac:	movw	r1, #0
 6b0:	movt	r1, #0
 6b4:	bl	0 <coda_cursor_print_path>
 6b8:	str	r0, [sp]
 6bc:	mov	sp, fp
 6c0:	pop	{fp, pc}

000006c4 <add_error_message>:
 6c4:	sub	sp, sp, #12
 6c8:	push	{fp, lr}
 6cc:	mov	fp, sp
 6d0:	sub	sp, sp, #12
 6d4:	str	r3, [fp, #16]
 6d8:	str	r2, [fp, #12]
 6dc:	str	r1, [fp, #8]
 6e0:	str	r0, [fp, #-4]
 6e4:	add	r0, fp, #8
 6e8:	str	r0, [sp, #4]
 6ec:	ldr	r0, [fp, #-4]
 6f0:	ldr	r1, [sp, #4]
 6f4:	bl	2c <coda_add_error_message_vargs>
 6f8:	add	r0, sp, #4
 6fc:	movw	r1, #0
 700:	str	r0, [sp]
 704:	mov	r0, r1
 708:	mov	sp, fp
 70c:	pop	{fp, lr}
 710:	add	sp, sp, #12
 714:	bx	lr

00000718 <coda_set_error>:
 718:	sub	sp, sp, #8
 71c:	push	{fp, lr}
 720:	mov	fp, sp
 724:	sub	sp, sp, #24
 728:	str	r3, [fp, #12]
 72c:	str	r2, [fp, #8]
 730:	str	r0, [fp, #-4]
 734:	str	r1, [fp, #-8]
 738:	ldr	r0, [fp, #-4]
 73c:	ldr	r1, [pc, #64]	; 784 <coda_set_error+0x6c>
 740:	str	r0, [sp, #8]
 744:	str	r1, [sp, #4]
 748:	bl	0 <__aeabi_read_tp>
 74c:	ldr	r1, [sp, #8]
 750:	ldr	r2, [sp, #4]
 754:	str	r1, [r0, r2]
 758:	add	r0, fp, #8
 75c:	str	r0, [sp, #12]
 760:	ldr	r0, [fp, #-8]
 764:	ldr	r1, [sp, #12]
 768:	bl	5a0 <coda_set_error_message_vargs>
 76c:	add	r0, sp, #12
 770:	str	r0, [sp]
 774:	mov	sp, fp
 778:	pop	{fp, lr}
 77c:	add	sp, sp, #8
 780:	bx	lr
 784:	.word	0x00000000
