
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inffast.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflate_fast>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #152	; 0x98
   c:	ldr	r9, [r0, #28]
  10:	mov	r8, r0
  14:	mov	r3, #1
  18:	movw	r4, #257	; 0x101
  1c:	ldr	r6, [r8, #16]
  20:	ldr	r0, [r9, #44]	; 0x2c
  24:	ldr	r7, [r9, #48]	; 0x30
  28:	ldr	r2, [r9, #40]	; 0x28
  2c:	ldr	sl, [r9, #52]	; 0x34
  30:	sub	r1, r6, r1
  34:	str	r0, [fp, #-72]	; 0xffffffb8
  38:	sub	r0, r7, #16
  3c:	str	r0, [sp, #52]	; 0x34
  40:	add	r0, r3, r0, lsr #4
  44:	and	r3, r0, #3
  48:	sub	r0, r0, r3
  4c:	str	r3, [sp, #60]	; 0x3c
  50:	str	r0, [sp, #36]	; 0x24
  54:	ldm	r8, {r0, r3}
  58:	str	r3, [fp, #-36]	; 0xffffffdc
  5c:	ldr	r3, [r8, #12]
  60:	str	r2, [fp, #-80]	; 0xffffffb0
  64:	str	sl, [sp, #64]	; 0x40
  68:	str	r9, [fp, #-48]	; 0xffffffd0
  6c:	str	r7, [fp, #-64]	; 0xffffffc0
  70:	sub	lr, r0, #1
  74:	ldr	r0, [fp, #-36]	; 0xffffffdc
  78:	sub	ip, r3, #1
  7c:	add	r5, r6, ip
  80:	sub	r3, r5, r4
  84:	ldr	r5, [r9, #88]	; 0x58
  88:	ldr	r4, [r9, #56]	; 0x38
  8c:	str	r3, [fp, #-32]	; 0xffffffe0
  90:	mvn	r3, #0
  94:	add	r0, r0, lr
  98:	sub	r0, r0, #5
  9c:	str	r0, [fp, #-36]	; 0xffffffdc
  a0:	add	r0, r9, #7104	; 0x1bc0
  a4:	mvn	r5, r3, lsl r5
  a8:	str	r0, [fp, #-76]	; 0xffffffb4
  ac:	ldr	r0, [r9, #80]	; 0x50
  b0:	str	r5, [fp, #-52]	; 0xffffffcc
  b4:	ldr	r5, [r9, #84]	; 0x54
  b8:	str	r0, [fp, #-56]	; 0xffffffc8
  bc:	ldr	r0, [r9, #76]	; 0x4c
  c0:	mvn	r3, r3, lsl r5
  c4:	str	r3, [fp, #-40]	; 0xffffffd8
  c8:	add	r3, ip, r1
  cc:	sub	r1, r2, r3
  d0:	str	r3, [fp, #-60]	; 0xffffffc4
  d4:	add	r1, sl, r1
  d8:	str	r0, [fp, #-44]	; 0xffffffd4
  dc:	add	r0, r3, #1
  e0:	str	r1, [sp, #76]	; 0x4c
  e4:	sub	r1, r7, r3
  e8:	str	r0, [sp, #88]	; 0x58
  ec:	sub	r0, r0, r7
  f0:	add	r1, sl, r1
  f4:	str	r0, [sp, #68]	; 0x44
  f8:	bic	r0, r7, #15
  fc:	str	r1, [sp, #72]	; 0x48
 100:	add	r1, r7, r2
 104:	add	r2, sl, r2
 108:	str	r0, [sp, #48]	; 0x30
 10c:	str	r1, [fp, #-84]	; 0xffffffac
 110:	sub	r1, r1, r3
 114:	sub	r3, r7, r0
 118:	str	r2, [fp, #-88]	; 0xffffffa8
 11c:	sub	r2, sl, #1
 120:	add	r1, sl, r1
 124:	str	r3, [sp, #44]	; 0x2c
 128:	add	r3, sl, r7
 12c:	add	r0, r2, r0
 130:	mov	sl, ip
 134:	str	r2, [fp, #-68]	; 0xffffffbc
 138:	str	r1, [sp, #80]	; 0x50
 13c:	ldr	r1, [r9, #60]	; 0x3c
 140:	str	r3, [sp, #84]	; 0x54
 144:	add	r3, r7, #1
 148:	str	r0, [sp, #40]	; 0x28
 14c:	str	r3, [sp, #56]	; 0x38
 150:	mov	r9, sl
 154:	cmp	r1, #14
 158:	bhi	17c <coda_inflate_fast+0x17c>
 15c:	ldrb	r0, [lr, #2]!
 160:	add	r6, r1, #8
 164:	ldrb	r7, [lr, #-1]
 168:	mov	ip, lr
 16c:	add	r7, r4, r7, lsl r1
 170:	add	r1, r1, #16
 174:	add	r4, r7, r0, lsl r6
 178:	b	180 <coda_inflate_fast+0x180>
 17c:	mov	ip, lr
 180:	ldr	r0, [fp, #-40]	; 0xffffffd8
 184:	ldr	r3, [fp, #-44]	; 0xffffffd4
 188:	mvn	sl, #0
 18c:	and	r0, r4, r0
 190:	mov	r6, r3
 194:	ldrb	r7, [r6, r0, lsl #2]!
 198:	ldrb	r0, [r6, #1]
 19c:	ldrh	r6, [r6, #2]
 1a0:	sub	r1, r1, r0
 1a4:	lsr	r4, r4, r0
 1a8:	cmp	r7, #0
 1ac:	beq	1ec <coda_inflate_fast+0x1ec>
 1b0:	uxtb	r5, r7
 1b4:	tst	r7, #16
 1b8:	bne	214 <coda_inflate_fast+0x214>
 1bc:	tst	r5, #64	; 0x40
 1c0:	bne	bbc <coda_inflate_fast+0xbbc>
 1c4:	bic	r0, r4, sl, lsl r5
 1c8:	mov	r2, r3
 1cc:	uxtah	r0, r0, r6
 1d0:	ldrb	r7, [r2, r0, lsl #2]!
 1d4:	ldrb	r0, [r2, #1]
 1d8:	ldrh	r6, [r2, #2]
 1dc:	sub	r1, r1, r0
 1e0:	lsr	r4, r4, r0
 1e4:	cmp	r7, #0
 1e8:	bne	1b0 <coda_inflate_fast+0x1b0>
 1ec:	mov	sl, r9
 1f0:	mov	lr, ip
 1f4:	strb	r6, [sl, #1]!
 1f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 1fc:	cmp	sl, r0
 200:	bcs	c04 <coda_inflate_fast+0xc04>
 204:	ldr	r0, [fp, #-36]	; 0xffffffdc
 208:	cmp	lr, r0
 20c:	bcc	150 <coda_inflate_fast+0x150>
 210:	b	c04 <coda_inflate_fast+0xc04>
 214:	uxth	r3, r6
 218:	ands	r7, r5, #15
 21c:	mov	lr, ip
 220:	beq	248 <coda_inflate_fast+0x248>
 224:	cmp	r1, r7
 228:	bcs	238 <coda_inflate_fast+0x238>
 22c:	ldrb	r0, [lr, #1]!
 230:	add	r4, r4, r0, lsl r1
 234:	add	r1, r1, #8
 238:	bic	r0, r4, sl, lsl r7
 23c:	sub	r1, r1, r7
 240:	lsr	r4, r4, r7
 244:	add	r3, r0, r3
 248:	ldr	r5, [fp, #-56]	; 0xffffffc8
 24c:	cmp	r1, #14
 250:	bhi	26c <coda_inflate_fast+0x26c>
 254:	ldrb	r0, [lr, #2]!
 258:	add	r6, r1, #8
 25c:	ldrb	r7, [lr, #-1]
 260:	add	r7, r4, r7, lsl r1
 264:	add	r1, r1, #16
 268:	add	r4, r7, r0, lsl r6
 26c:	ldr	r0, [fp, #-52]	; 0xffffffcc
 270:	mov	r6, r5
 274:	and	r0, r4, r0
 278:	ldrb	r7, [r6, r0, lsl #2]!
 27c:	ldrb	r0, [r6, #1]
 280:	ldrh	r6, [r6, #2]
 284:	sub	r1, r1, r0
 288:	lsr	r4, r4, r0
 28c:	tst	r7, #16
 290:	bne	2c4 <coda_inflate_fast+0x2c4>
 294:	tst	r7, #64	; 0x40
 298:	bne	be8 <coda_inflate_fast+0xbe8>
 29c:	bic	r0, r4, sl, lsl r7
 2a0:	mov	r2, r5
 2a4:	uxtah	r0, r0, r6
 2a8:	ldrb	r7, [r2, r0, lsl #2]!
 2ac:	ldrb	r0, [r2, #1]
 2b0:	ldrh	r6, [r2, #2]
 2b4:	sub	r1, r1, r0
 2b8:	lsr	r4, r4, r0
 2bc:	tst	r7, #16
 2c0:	beq	294 <coda_inflate_fast+0x294>
 2c4:	and	r7, r7, #15
 2c8:	cmp	r1, r7
 2cc:	bcs	300 <coda_inflate_fast+0x300>
 2d0:	mov	r0, lr
 2d4:	ldrb	r5, [r0, #1]!
 2d8:	add	r4, r4, r5, lsl r1
 2dc:	add	r5, r1, #8
 2e0:	cmp	r5, r7
 2e4:	bcs	2f8 <coda_inflate_fast+0x2f8>
 2e8:	ldrb	r0, [lr, #2]!
 2ec:	add	r1, r1, #16
 2f0:	add	r4, r4, r0, lsl r5
 2f4:	b	300 <coda_inflate_fast+0x300>
 2f8:	mov	r1, r5
 2fc:	mov	lr, r0
 300:	ldr	r0, [fp, #-60]	; 0xffffffc4
 304:	bic	r2, r4, sl, lsl r7
 308:	mov	sl, r9
 30c:	sub	r1, r1, r7
 310:	lsr	r4, r4, r7
 314:	add	r5, r2, r6
 318:	sub	r0, r9, r0
 31c:	cmp	r5, r0
 320:	bls	44c <coda_inflate_fast+0x44c>
 324:	sub	ip, r5, r0
 328:	ldr	r0, [fp, #-72]	; 0xffffffb8
 32c:	str	r2, [sp, #28]
 330:	ldr	r2, [fp, #-64]	; 0xffffffc0
 334:	cmp	ip, r0
 338:	bls	34c <coda_inflate_fast+0x34c>
 33c:	ldr	r0, [fp, #-76]	; 0xffffffb4
 340:	ldr	r0, [r0]
 344:	cmp	r0, #0
 348:	bne	c5c <coda_inflate_fast+0xc5c>
 34c:	cmp	r2, #0
 350:	str	r8, [sp, #32]
 354:	beq	4bc <coda_inflate_fast+0x4bc>
 358:	cmp	r2, ip
 35c:	bcs	590 <coda_inflate_fast+0x590>
 360:	ldr	r0, [fp, #-84]	; 0xffffffac
 364:	mov	r8, r3
 368:	ldr	r3, [fp, #-68]	; 0xffffffbc
 36c:	sub	r7, ip, r2
 370:	cmp	r8, r7
 374:	sub	r0, r0, ip
 378:	add	r9, r3, r0
 37c:	mov	r3, r8
 380:	bls	ab0 <coda_inflate_fast+0xab0>
 384:	cmp	r7, #16
 388:	str	lr, [sp, #24]
 38c:	str	r5, [sp, #16]
 390:	str	r7, [sp, #12]
 394:	bcc	3d8 <coda_inflate_fast+0x3d8>
 398:	ldr	r0, [sp, #28]
 39c:	ldr	r2, [sp, #80]	; 0x50
 3a0:	sub	r0, sl, r0
 3a4:	sub	r0, r0, r6
 3a8:	add	ip, r2, r0
 3ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
 3b0:	add	r0, sl, #1
 3b4:	cmp	r0, r2
 3b8:	bcs	718 <coda_inflate_fast+0x718>
 3bc:	ldr	r0, [sp, #68]	; 0x44
 3c0:	sub	r2, r5, sl
 3c4:	add	r0, sl, r0
 3c8:	add	r0, r0, r2
 3cc:	cmp	ip, r0
 3d0:	bcs	718 <coda_inflate_fast+0x718>
 3d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
 3d8:	mov	r6, r7
 3dc:	mov	lr, #48	; 0x30
 3e0:	ands	r5, r6, #3
 3e4:	sub	r7, r6, #1
 3e8:	beq	400 <coda_inflate_fast+0x400>
 3ec:	ldrb	r0, [r9, #1]!
 3f0:	subs	r5, r5, #1
 3f4:	sub	r6, r6, #1
 3f8:	strb	r0, [sl, #1]!
 3fc:	bne	3ec <coda_inflate_fast+0x3ec>
 400:	cmp	r7, #3
 404:	bcc	804 <coda_inflate_fast+0x804>
 408:	mov	r7, #0
 40c:	add	r2, r9, r7
 410:	add	r0, sl, r7
 414:	add	r7, r7, #4
 418:	ldrb	r5, [r2, #1]
 41c:	cmp	r6, r7
 420:	strb	r5, [r0, #1]
 424:	ldrb	r5, [r2, #2]
 428:	strb	r5, [r0, #2]
 42c:	ldrb	r5, [r2, #3]
 430:	strb	r5, [r0, #3]
 434:	ldrb	r2, [r2, #4]
 438:	strb	r2, [r0, #4]
 43c:	bne	40c <coda_inflate_fast+0x40c>
 440:	ldr	r2, [fp, #-64]	; 0xffffffc0
 444:	add	sl, sl, r7
 448:	b	804 <coda_inflate_fast+0x804>
 44c:	sub	r6, sl, r5
 450:	mov	r7, #0
 454:	sub	r2, r6, r7
 458:	sub	r0, sl, r7
 45c:	sub	r7, r7, #3
 460:	ldrb	r5, [r2, #1]
 464:	strb	r5, [r0, #1]
 468:	ldrb	r5, [r2, #2]
 46c:	strb	r5, [r0, #2]
 470:	ldrb	r2, [r2, #3]
 474:	strb	r2, [r0, #3]
 478:	add	r0, r3, r7
 47c:	cmp	r0, #2
 480:	bhi	454 <coda_inflate_fast+0x454>
 484:	cmp	r0, #0
 488:	beq	4b4 <coda_inflate_fast+0x4b4>
 48c:	sub	sl, sl, r7
 490:	sub	r7, r6, r7
 494:	subs	r0, r0, #1
 498:	ldrb	r2, [r7, #1]
 49c:	mov	r0, sl
 4a0:	strb	r2, [r0, #1]!
 4a4:	beq	5bc <coda_inflate_fast+0x5bc>
 4a8:	ldrb	r0, [r7, #2]
 4ac:	strb	r0, [sl, #2]!
 4b0:	b	1f8 <coda_inflate_fast+0x1f8>
 4b4:	sub	sl, sl, r7
 4b8:	b	1f8 <coda_inflate_fast+0x1f8>
 4bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
 4c0:	ldr	r2, [fp, #-68]	; 0xffffffbc
 4c4:	cmp	r3, ip
 4c8:	sub	r0, r0, ip
 4cc:	add	r9, r2, r0
 4d0:	bls	ab0 <coda_inflate_fast+0xab0>
 4d4:	cmp	ip, #16
 4d8:	str	lr, [sp, #24]
 4dc:	bcc	51c <coda_inflate_fast+0x51c>
 4e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
 4e4:	add	r0, sl, #1
 4e8:	cmp	r0, r2
 4ec:	bcs	60c <coda_inflate_fast+0x60c>
 4f0:	ldr	r0, [sp, #88]	; 0x58
 4f4:	ldr	r2, [sp, #28]
 4f8:	sub	r7, r5, sl
 4fc:	add	r0, sl, r0
 500:	add	r0, r0, r7
 504:	sub	r7, sl, r2
 508:	ldr	r2, [sp, #76]	; 0x4c
 50c:	sub	r7, r7, r6
 510:	add	r7, r2, r7
 514:	cmp	r7, r0
 518:	bcs	60c <coda_inflate_fast+0x60c>
 51c:	mov	r8, r5
 520:	mov	r6, ip
 524:	ands	r5, r6, #3
 528:	sub	r7, r6, #1
 52c:	beq	544 <coda_inflate_fast+0x544>
 530:	ldrb	r0, [r9, #1]!
 534:	subs	r5, r5, #1
 538:	sub	r6, r6, #1
 53c:	strb	r0, [sl, #1]!
 540:	bne	530 <coda_inflate_fast+0x530>
 544:	cmp	r7, #3
 548:	bcc	588 <coda_inflate_fast+0x588>
 54c:	mov	r7, #0
 550:	add	r2, r9, r7
 554:	add	r0, sl, r7
 558:	add	r7, r7, #4
 55c:	ldrb	r5, [r2, #1]
 560:	cmp	r6, r7
 564:	strb	r5, [r0, #1]
 568:	ldrb	r5, [r2, #2]
 56c:	strb	r5, [r0, #2]
 570:	ldrb	r5, [r2, #3]
 574:	strb	r5, [r0, #3]
 578:	ldrb	r2, [r2, #4]
 57c:	strb	r2, [r0, #4]
 580:	bne	550 <coda_inflate_fast+0x550>
 584:	add	sl, sl, r7
 588:	sub	r9, sl, r8
 58c:	b	aa8 <coda_inflate_fast+0xaa8>
 590:	sub	r0, r2, ip
 594:	ldr	r2, [fp, #-68]	; 0xffffffbc
 598:	cmp	r3, ip
 59c:	add	r9, r2, r0
 5a0:	bls	ab0 <coda_inflate_fast+0xab0>
 5a4:	cmp	ip, #16
 5a8:	str	lr, [sp, #24]
 5ac:	str	r5, [sp, #16]
 5b0:	bcs	5c4 <coda_inflate_fast+0x5c4>
 5b4:	mov	r6, ip
 5b8:	b	a3c <coda_inflate_fast+0xa3c>
 5bc:	mov	sl, r0
 5c0:	b	1f8 <coda_inflate_fast+0x1f8>
 5c4:	ldr	r2, [sp, #84]	; 0x54
 5c8:	add	r0, sl, #1
 5cc:	str	r3, [sp, #12]
 5d0:	cmp	r0, r2
 5d4:	bcs	830 <coda_inflate_fast+0x830>
 5d8:	ldr	r0, [sp, #88]	; 0x58
 5dc:	sub	r2, r5, sl
 5e0:	ldr	r3, [sp, #72]	; 0x48
 5e4:	add	r0, sl, r0
 5e8:	add	r0, r0, r2
 5ec:	ldr	r2, [sp, #28]
 5f0:	sub	r2, sl, r2
 5f4:	sub	r2, r2, r6
 5f8:	add	r2, r3, r2
 5fc:	cmp	r2, r0
 600:	bcs	830 <coda_inflate_fast+0x830>
 604:	mov	r6, ip
 608:	b	a38 <coda_inflate_fast+0xa38>
 60c:	bic	r0, ip, #15
 610:	mov	r8, r5
 614:	mov	r7, #0
 618:	mov	lr, #48	; 0x30
 61c:	str	r3, [sp, #12]
 620:	str	ip, [sp, #8]
 624:	sub	r5, r0, #16
 628:	str	r0, [sp]
 62c:	mov	r0, #1
 630:	add	r0, r0, r5, lsr #4
 634:	cmp	r5, #48	; 0x30
 638:	and	r2, r0, #3
 63c:	str	r2, [sp, #4]
 640:	bcc	6b4 <coda_inflate_fast+0x6b4>
 644:	ldr	r2, [sp, #4]
 648:	mov	r7, #0
 64c:	sub	r3, r2, r0
 650:	add	r0, r9, #1
 654:	str	r0, [sp, #20]
 658:	ldr	r0, [sp, #20]
 65c:	add	r2, sl, r7
 660:	mov	r5, sl
 664:	adds	r3, r3, #4
 668:	add	sl, r2, #1
 66c:	add	r0, r0, r7
 670:	add	r7, r7, #64	; 0x40
 674:	mov	ip, r0
 678:	vld1.8	{d16-d17}, [ip], lr
 67c:	vst1.8	{d16-d17}, [sl]
 680:	mov	sl, r5
 684:	add	r5, r0, #16
 688:	add	r0, r0, #32
 68c:	vld1.8	{d16-d17}, [r5]
 690:	add	r5, r2, #17
 694:	vst1.8	{d16-d17}, [r5]
 698:	vld1.8	{d16-d17}, [r0]
 69c:	add	r0, r2, #33	; 0x21
 6a0:	vst1.8	{d16-d17}, [r0]
 6a4:	add	r0, r2, #49	; 0x31
 6a8:	vld1.8	{d16-d17}, [ip]
 6ac:	vst1.8	{d16-d17}, [r0]
 6b0:	bne	658 <coda_inflate_fast+0x658>
 6b4:	ldr	r5, [sp, #4]
 6b8:	cmp	r5, #0
 6bc:	beq	6f0 <coda_inflate_fast+0x6f0>
 6c0:	ldr	r2, [sp, #28]
 6c4:	ldr	r3, [sp, #76]	; 0x4c
 6c8:	add	r0, r7, sl
 6cc:	rsb	r5, r5, #0
 6d0:	sub	r2, r0, r2
 6d4:	sub	r2, r2, r6
 6d8:	add	r6, r0, #1
 6dc:	add	r7, r3, r2
 6e0:	vld1.8	{d16-d17}, [r7]!
 6e4:	adds	r5, r5, #1
 6e8:	vst1.8	{d16-d17}, [r6]!
 6ec:	bcc	6e0 <coda_inflate_fast+0x6e0>
 6f0:	ldr	r2, [sp]
 6f4:	ldr	ip, [sp, #8]
 6f8:	add	sl, sl, r2
 6fc:	cmp	ip, r2
 700:	mov	r0, sl
 704:	bne	a00 <coda_inflate_fast+0xa00>
 708:	ldr	r3, [sp, #12]
 70c:	mov	sl, r0
 710:	sub	r9, r0, r8
 714:	b	aa8 <coda_inflate_fast+0xaa8>
 718:	bic	r0, r7, #15
 71c:	mov	r7, #0
 720:	sub	r2, r0, #16
 724:	str	r0, [sp, #8]
 728:	mov	r0, #1
 72c:	add	r0, r0, r2, lsr #4
 730:	cmp	r2, #48	; 0x30
 734:	and	lr, r0, #3
 738:	bcc	7a8 <coda_inflate_fast+0x7a8>
 73c:	mov	r3, ip
 740:	sub	ip, lr, r0
 744:	add	r0, r9, #1
 748:	mov	r7, #0
 74c:	str	r0, [sp, #20]
 750:	add	r0, r3, r7
 754:	adds	ip, ip, #4
 758:	vld1.8	{d16-d17}, [r0]
 75c:	add	r0, sl, r7
 760:	add	r2, r0, #1
 764:	vst1.8	{d16-d17}, [r2]
 768:	ldr	r2, [sp, #20]
 76c:	add	r2, r2, r7
 770:	add	r7, r7, #64	; 0x40
 774:	add	r5, r2, #16
 778:	vld1.8	{d16-d17}, [r5]
 77c:	add	r5, r0, #17
 780:	vst1.8	{d16-d17}, [r5]
 784:	add	r5, r2, #32
 788:	add	r2, r2, #48	; 0x30
 78c:	vld1.8	{d16-d17}, [r5]
 790:	add	r5, r0, #33	; 0x21
 794:	add	r0, r0, #49	; 0x31
 798:	vst1.8	{d16-d17}, [r5]
 79c:	vld1.8	{d16-d17}, [r2]
 7a0:	vst1.8	{d16-d17}, [r0]
 7a4:	bne	750 <coda_inflate_fast+0x750>
 7a8:	cmp	lr, #0
 7ac:	mov	r5, lr
 7b0:	mov	lr, #48	; 0x30
 7b4:	beq	7e8 <coda_inflate_fast+0x7e8>
 7b8:	ldr	r2, [sp, #28]
 7bc:	ldr	r3, [sp, #80]	; 0x50
 7c0:	add	r0, r7, sl
 7c4:	rsb	r5, r5, #0
 7c8:	sub	r2, r0, r2
 7cc:	sub	r2, r2, r6
 7d0:	add	r6, r0, #1
 7d4:	add	r7, r3, r2
 7d8:	vld1.8	{d16-d17}, [r7]!
 7dc:	adds	r5, r5, #1
 7e0:	vst1.8	{d16-d17}, [r6]!
 7e4:	bcc	7d8 <coda_inflate_fast+0x7d8>
 7e8:	ldr	r2, [sp, #8]
 7ec:	ldr	r0, [sp, #12]
 7f0:	add	sl, sl, r2
 7f4:	cmp	r0, r2
 7f8:	bne	a14 <coda_inflate_fast+0xa14>
 7fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
 800:	mov	r3, r8
 804:	ldr	r0, [sp, #12]
 808:	sub	r3, r3, r0
 80c:	cmp	r3, r2
 810:	bls	828 <coda_inflate_fast+0x828>
 814:	cmp	r2, #16
 818:	bcs	924 <coda_inflate_fast+0x924>
 81c:	ldr	r7, [fp, #-68]	; 0xffffffbc
 820:	mov	ip, r2
 824:	b	b44 <coda_inflate_fast+0xb44>
 828:	ldr	r9, [fp, #-68]	; 0xffffffbc
 82c:	b	aac <coda_inflate_fast+0xaac>
 830:	bic	r0, ip, #15
 834:	mov	r7, #0
 838:	mov	lr, #48	; 0x30
 83c:	mov	r8, sl
 840:	str	ip, [sp, #8]
 844:	sub	r2, r0, #16
 848:	str	r0, [sp, #4]
 84c:	mov	r0, #1
 850:	add	r0, r0, r2, lsr #4
 854:	cmp	r2, #48	; 0x30
 858:	and	r3, r0, #3
 85c:	str	r3, [sp, #20]
 860:	bcc	8c4 <coda_inflate_fast+0x8c4>
 864:	ldr	r2, [sp, #20]
 868:	add	ip, r9, #1
 86c:	mov	r7, #0
 870:	sub	r3, r2, r0
 874:	add	r0, ip, r7
 878:	add	r5, r8, r7
 87c:	adds	r3, r3, #4
 880:	add	r7, r7, #64	; 0x40
 884:	mov	sl, r0
 888:	add	r2, r5, #1
 88c:	vld1.8	{d16-d17}, [sl], lr
 890:	vst1.8	{d16-d17}, [r2]
 894:	add	r2, r0, #16
 898:	add	r0, r0, #32
 89c:	vld1.8	{d16-d17}, [r2]
 8a0:	add	r2, r5, #17
 8a4:	vst1.8	{d16-d17}, [r2]
 8a8:	vld1.8	{d16-d17}, [r0]
 8ac:	add	r0, r5, #33	; 0x21
 8b0:	vst1.8	{d16-d17}, [r0]
 8b4:	add	r0, r5, #49	; 0x31
 8b8:	vld1.8	{d16-d17}, [sl]
 8bc:	vst1.8	{d16-d17}, [r0]
 8c0:	bne	874 <coda_inflate_fast+0x874>
 8c4:	ldr	r5, [sp, #20]
 8c8:	cmp	r5, #0
 8cc:	beq	900 <coda_inflate_fast+0x900>
 8d0:	ldr	r2, [sp, #28]
 8d4:	ldr	r3, [sp, #72]	; 0x48
 8d8:	add	r0, r7, r8
 8dc:	rsb	r5, r5, #0
 8e0:	sub	r2, r0, r2
 8e4:	sub	r2, r2, r6
 8e8:	add	r6, r0, #1
 8ec:	add	r7, r3, r2
 8f0:	vld1.8	{d16-d17}, [r7]!
 8f4:	adds	r5, r5, #1
 8f8:	vst1.8	{d16-d17}, [r6]!
 8fc:	bcc	8f0 <coda_inflate_fast+0x8f0>
 900:	ldr	r2, [sp, #4]
 904:	ldr	ip, [sp, #8]
 908:	add	r8, r8, r2
 90c:	cmp	ip, r2
 910:	mov	r0, r8
 914:	bne	a2c <coda_inflate_fast+0xa2c>
 918:	ldr	r3, [sp, #12]
 91c:	mov	sl, r0
 920:	b	aa0 <coda_inflate_fast+0xaa0>
 924:	mov	r8, r3
 928:	ldr	r3, [sp, #84]	; 0x54
 92c:	add	r0, sl, #1
 930:	ldr	r9, [sp, #64]	; 0x40
 934:	cmp	r0, r3
 938:	ldrcc	r0, [sp, #56]	; 0x38
 93c:	addcc	r0, sl, r0
 940:	cmpcc	r9, r0
 944:	bcc	b38 <coda_inflate_fast+0xb38>
 948:	ldr	r0, [sp, #52]	; 0x34
 94c:	mov	r6, #0
 950:	cmp	r0, #48	; 0x30
 954:	bcc	9b0 <coda_inflate_fast+0x9b0>
 958:	ldr	r7, [sp, #36]	; 0x24
 95c:	mov	r6, #0
 960:	add	r0, r9, r6
 964:	add	r5, sl, r6
 968:	subs	r7, r7, #4
 96c:	add	r6, r6, #64	; 0x40
 970:	mov	ip, r0
 974:	add	r2, r5, #1
 978:	vld1.8	{d16-d17}, [ip], lr
 97c:	vst1.8	{d16-d17}, [r2]
 980:	add	r2, r0, #16
 984:	add	r0, r0, #32
 988:	vld1.8	{d16-d17}, [r2]
 98c:	add	r2, r5, #17
 990:	vst1.8	{d16-d17}, [r2]
 994:	vld1.8	{d16-d17}, [r0]
 998:	add	r0, r5, #33	; 0x21
 99c:	vst1.8	{d16-d17}, [r0]
 9a0:	add	r0, r5, #49	; 0x31
 9a4:	vld1.8	{d16-d17}, [ip]
 9a8:	vst1.8	{d16-d17}, [r0]
 9ac:	bne	960 <coda_inflate_fast+0x960>
 9b0:	ldr	r0, [sp, #60]	; 0x3c
 9b4:	mov	r3, r8
 9b8:	cmp	r0, #0
 9bc:	beq	9e0 <coda_inflate_fast+0x9e0>
 9c0:	ldr	r5, [sp, #60]	; 0x3c
 9c4:	add	r0, sl, r6
 9c8:	add	r7, r9, r6
 9cc:	add	r6, r0, #1
 9d0:	vld1.8	{d16-d17}, [r7]!
 9d4:	subs	r5, r5, #1
 9d8:	vst1.8	{d16-d17}, [r6]!
 9dc:	bne	9d0 <coda_inflate_fast+0x9d0>
 9e0:	ldr	r0, [sp, #48]	; 0x30
 9e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
 9e8:	ldr	ip, [sp, #44]	; 0x2c
 9ec:	ldr	r7, [sp, #40]	; 0x28
 9f0:	add	sl, sl, r0
 9f4:	cmp	r2, r0
 9f8:	bne	b44 <coda_inflate_fast+0xb44>
 9fc:	b	bac <coda_inflate_fast+0xbac>
 a00:	ldr	r3, [sp, #12]
 a04:	add	r9, r9, r2
 a08:	sub	r6, ip, r2
 a0c:	mov	sl, r0
 a10:	b	524 <coda_inflate_fast+0x524>
 a14:	ldr	r2, [sp, #8]
 a18:	mov	r3, r8
 a1c:	add	r9, r9, r2
 a20:	sub	r6, r0, r2
 a24:	ldr	r2, [fp, #-64]	; 0xffffffc0
 a28:	b	3e0 <coda_inflate_fast+0x3e0>
 a2c:	add	r9, r9, r2
 a30:	sub	r6, ip, r2
 a34:	mov	sl, r0
 a38:	ldr	r3, [sp, #12]
 a3c:	ands	r5, r6, #3
 a40:	sub	r7, r6, #1
 a44:	beq	a5c <coda_inflate_fast+0xa5c>
 a48:	ldrb	r0, [r9, #1]!
 a4c:	subs	r5, r5, #1
 a50:	sub	r6, r6, #1
 a54:	strb	r0, [sl, #1]!
 a58:	bne	a48 <coda_inflate_fast+0xa48>
 a5c:	cmp	r7, #3
 a60:	bcc	aa0 <coda_inflate_fast+0xaa0>
 a64:	mov	r7, #0
 a68:	add	r2, r9, r7
 a6c:	add	r0, sl, r7
 a70:	add	r7, r7, #4
 a74:	ldrb	r5, [r2, #1]
 a78:	cmp	r6, r7
 a7c:	strb	r5, [r0, #1]
 a80:	ldrb	r5, [r2, #2]
 a84:	strb	r5, [r0, #2]
 a88:	ldrb	r5, [r2, #3]
 a8c:	strb	r5, [r0, #3]
 a90:	ldrb	r2, [r2, #4]
 a94:	strb	r2, [r0, #4]
 a98:	bne	a68 <coda_inflate_fast+0xa68>
 a9c:	add	sl, sl, r7
 aa0:	ldr	r0, [sp, #16]
 aa4:	sub	r9, sl, r0
 aa8:	sub	r3, r3, ip
 aac:	ldr	lr, [sp, #24]
 ab0:	cmp	r3, #3
 ab4:	bcc	b00 <coda_inflate_fast+0xb00>
 ab8:	mov	r6, #0
 abc:	sub	r2, r9, r6
 ac0:	sub	r0, sl, r6
 ac4:	sub	r6, r6, #3
 ac8:	ldrb	r7, [r2, #1]
 acc:	strb	r7, [r0, #1]
 ad0:	ldrb	r7, [r2, #2]
 ad4:	strb	r7, [r0, #2]
 ad8:	add	r7, r3, r6
 adc:	ldrb	r2, [r2, #3]
 ae0:	cmp	r7, #2
 ae4:	strb	r2, [r0, #3]
 ae8:	bhi	abc <coda_inflate_fast+0xabc>
 aec:	sub	sl, sl, r6
 af0:	sub	r9, r9, r6
 af4:	cmp	r7, #0
 af8:	bne	b0c <coda_inflate_fast+0xb0c>
 afc:	b	b30 <coda_inflate_fast+0xb30>
 b00:	mov	r7, r3
 b04:	cmp	r7, #0
 b08:	beq	b30 <coda_inflate_fast+0xb30>
 b0c:	ldrb	r2, [r9, #1]
 b10:	mov	r0, sl
 b14:	cmp	r7, #1
 b18:	strb	r2, [r0, #1]!
 b1c:	bne	b28 <coda_inflate_fast+0xb28>
 b20:	mov	sl, r0
 b24:	b	b30 <coda_inflate_fast+0xb30>
 b28:	ldrb	r0, [r9, #2]
 b2c:	strb	r0, [sl, #2]!
 b30:	ldr	r8, [sp, #32]
 b34:	b	1f8 <coda_inflate_fast+0x1f8>
 b38:	ldr	r7, [fp, #-68]	; 0xffffffbc
 b3c:	mov	ip, r2
 b40:	mov	r3, r8
 b44:	ands	r5, ip, #3
 b48:	sub	r9, ip, #1
 b4c:	beq	b64 <coda_inflate_fast+0xb64>
 b50:	ldrb	r0, [r7, #1]!
 b54:	subs	r5, r5, #1
 b58:	sub	ip, ip, #1
 b5c:	strb	r0, [sl, #1]!
 b60:	bne	b50 <coda_inflate_fast+0xb50>
 b64:	cmp	r9, #3
 b68:	bcc	bac <coda_inflate_fast+0xbac>
 b6c:	mov	r5, #0
 b70:	add	r2, r7, r5
 b74:	add	r0, sl, r5
 b78:	add	r5, r5, #4
 b7c:	ldrb	r6, [r2, #1]
 b80:	cmp	ip, r5
 b84:	strb	r6, [r0, #1]
 b88:	ldrb	r6, [r2, #2]
 b8c:	strb	r6, [r0, #2]
 b90:	ldrb	r6, [r2, #3]
 b94:	strb	r6, [r0, #3]
 b98:	ldrb	r2, [r2, #4]
 b9c:	strb	r2, [r0, #4]
 ba0:	bne	b70 <coda_inflate_fast+0xb70>
 ba4:	ldr	r2, [fp, #-64]	; 0xffffffc0
 ba8:	add	sl, sl, r5
 bac:	ldr	r0, [sp, #16]
 bb0:	sub	r3, r3, r2
 bb4:	sub	r9, sl, r0
 bb8:	b	aac <coda_inflate_fast+0xaac>
 bbc:	mov	r7, #11
 bc0:	tst	r5, #32
 bc4:	bne	bdc <coda_inflate_fast+0xbdc>
 bc8:	movw	r0, #0
 bcc:	mov	lr, ip
 bd0:	mov	sl, r9
 bd4:	movt	r0, #0
 bd8:	b	bf4 <coda_inflate_fast+0xbf4>
 bdc:	mov	lr, ip
 be0:	mov	sl, r9
 be4:	b	bfc <coda_inflate_fast+0xbfc>
 be8:	movw	r0, #0
 bec:	mov	sl, r9
 bf0:	movt	r0, #0
 bf4:	mov	r7, #29
 bf8:	str	r0, [r8, #24]
 bfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
 c00:	str	r7, [r0]
 c04:	add	r0, sl, #1
 c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
 c0c:	sub	r2, lr, r1, lsr #3
 c10:	movw	r6, #257	; 0x101
 c14:	str	r0, [r8, #12]
 c18:	ldr	r0, [fp, #-36]	; 0xffffffdc
 c1c:	add	r7, r2, #1
 c20:	sub	r3, r3, sl
 c24:	sub	r0, r0, r2
 c28:	add	r3, r3, r6
 c2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
 c30:	add	r0, r0, #5
 c34:	str	r3, [r8, #16]
 c38:	str	r7, [r8]
 c3c:	str	r0, [r8, #4]
 c40:	and	r0, r1, #7
 c44:	mvn	r1, #0
 c48:	bic	r1, r4, r1, lsl r0
 c4c:	str	r1, [r2, #56]	; 0x38
 c50:	str	r0, [r2, #60]	; 0x3c
 c54:	sub	sp, fp, #28
 c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c5c:	movw	r0, #0
 c60:	movt	r0, #0
 c64:	b	bf4 <coda_inflate_fast+0xbf4>
