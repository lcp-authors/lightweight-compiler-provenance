
../compcert-repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	11180 <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r2, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <raise@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <strcmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <__isoc99_fscanf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <fopen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <free@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <memcpy@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <realloc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <strcpy@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <strlen@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <main@@Base>:
   10fa8:	push	{r4, r5, r6, lr}
   10fac:	sub	sp, sp, #376	; 0x178
   10fb0:	ldr	lr, [pc, #352]	; 11118 <main@@Base+0x170>
   10fb4:	add	ip, sp, #76	; 0x4c
   10fb8:	mov	r4, ip
   10fbc:	ldm	lr!, {r0, r1, r2, r3}
   10fc0:	add	r6, sp, #128	; 0x80
   10fc4:	stmia	ip!, {r0, r1, r2, r3}
   10fc8:	ldm	lr!, {r0, r1, r2, r3}
   10fcc:	stmia	ip!, {r0, r1, r2, r3}
   10fd0:	ldm	lr!, {r0, r1, r2, r3}
   10fd4:	ldr	lr, [lr]
   10fd8:	stmia	ip!, {r0, r1, r2, r3}
   10fdc:	ldr	r0, [pc, #312]	; 1111c <main@@Base+0x174>
   10fe0:	str	lr, [ip]
   10fe4:	bl	10f48 <puts@plt>
   10fe8:	bl	113dc <avl_nova@@Base>
   10fec:	mov	r5, r0
   10ff0:	mov	r1, r4
   10ff4:	mov	r0, r5
   10ff8:	add	r4, r4, #4
   10ffc:	bl	117e0 <avl_insere@@Base>
   11000:	cmp	r6, r4
   11004:	bne	10ff0 <main@@Base+0x48>
   11008:	ldr	r0, [pc, #272]	; 11120 <main@@Base+0x178>
   1100c:	bl	10ef4 <printf@plt>
   11010:	ldr	r0, [r5]
   11014:	bl	11b7c <avl_imprime@@Base>
   11018:	ldr	r0, [pc, #260]	; 11124 <main@@Base+0x17c>
   1101c:	bl	10ef4 <printf@plt>
   11020:	ldr	r0, [r5]
   11024:	bl	1126c <crescente@@Base>
   11028:	ldr	r0, [pc, #248]	; 11128 <main@@Base+0x180>
   1102c:	bl	10f48 <puts@plt>
   11030:	mov	r2, #300	; 0x12c
   11034:	ldr	r1, [pc, #240]	; 1112c <main@@Base+0x184>
   11038:	add	r0, sp, #76	; 0x4c
   1103c:	bl	10f24 <memcpy@plt>
   11040:	mov	r2, #75	; 0x4b
   11044:	ldr	r1, [pc, #228]	; 11130 <main@@Base+0x188>
   11048:	mov	r0, sp
   1104c:	bl	10f24 <memcpy@plt>
   11050:	ldr	r0, [pc, #220]	; 11134 <main@@Base+0x18c>
   11054:	bl	10f48 <puts@plt>
   11058:	ldr	r1, [pc, #216]	; 11138 <main@@Base+0x190>
   1105c:	ldr	r0, [pc, #216]	; 1113c <main@@Base+0x194>
   11060:	bl	10f0c <fopen@plt>
   11064:	subs	r6, r0, #0
   11068:	beq	11108 <main@@Base+0x160>
   1106c:	bl	11c04 <lista_nova@@Base>
   11070:	add	r1, sp, #76	; 0x4c
   11074:	mov	r2, #0
   11078:	mov	r5, r0
   1107c:	bl	11c90 <lista_insere@@Base>
   11080:	mov	r2, #0
   11084:	add	r1, sp, #176	; 0xb0
   11088:	mov	r0, r5
   1108c:	bl	11c90 <lista_insere@@Base>
   11090:	mov	r2, #0
   11094:	add	r1, sp, #276	; 0x114
   11098:	mov	r0, r5
   1109c:	bl	11c90 <lista_insere@@Base>
   110a0:	bl	11c04 <lista_nova@@Base>
   110a4:	mov	r2, #0
   110a8:	mov	r1, sp
   110ac:	mov	r4, r0
   110b0:	bl	11c90 <lista_insere@@Base>
   110b4:	mov	r2, #0
   110b8:	add	r1, sp, #25
   110bc:	mov	r0, r4
   110c0:	bl	11c90 <lista_insere@@Base>
   110c4:	add	r1, sp, #50	; 0x32
   110c8:	mov	r2, #0
   110cc:	mov	r0, r4
   110d0:	bl	11c90 <lista_insere@@Base>
   110d4:	mov	r2, r4
   110d8:	mov	r1, r5
   110dc:	mov	r0, r6
   110e0:	bl	112f0 <valida_passwds@@Base>
   110e4:	mov	r0, r5
   110e8:	bl	11c28 <lista_apaga@@Base>
   110ec:	mov	r0, r4
   110f0:	bl	11c28 <lista_apaga@@Base>
   110f4:	mov	r0, r6
   110f8:	bl	10f90 <fclose@plt>
   110fc:	mov	r0, #0
   11100:	add	sp, sp, #376	; 0x178
   11104:	pop	{r4, r5, r6, pc}
   11108:	ldr	r0, [pc, #48]	; 11140 <main@@Base+0x198>
   1110c:	bl	10f48 <puts@plt>
   11110:	mvn	r0, #0
   11114:	b	11100 <main@@Base+0x158>
   11118:	andeq	r2, r1, r8, lsr #16
   1111c:	andeq	r2, r1, ip, lsr #20
   11120:	andeq	r2, r1, r0, asr #20
   11124:	andeq	r2, r1, r4, asr sl
   11128:	andeq	r2, r1, r4, ror sl
   1112c:	andeq	r2, r1, ip, asr r8
   11130:	andeq	r2, r1, r8, lsl #19
   11134:	andeq	r2, r1, r8, ror sl
   11138:	andeq	r2, r1, ip, lsl #21
   1113c:	muleq	r1, r0, sl
   11140:	andeq	r2, r1, r0, lsr #21

00011144 <_start@@Base>:
   11144:	mov	fp, #0
   11148:	mov	lr, #0
   1114c:	pop	{r1}		; (ldr r1, [sp], #4)
   11150:	mov	r2, sp
   11154:	push	{r2}		; (str r2, [sp, #-4]!)
   11158:	push	{r0}		; (str r0, [sp, #-4]!)
   1115c:	ldr	ip, [pc, #16]	; 11174 <_start@@Base+0x30>
   11160:	push	{ip}		; (str ip, [sp, #-4]!)
   11164:	ldr	r0, [pc, #12]	; 11178 <_start@@Base+0x34>
   11168:	ldr	r3, [pc, #12]	; 1117c <_start@@Base+0x38>
   1116c:	bl	10f60 <__libc_start_main@plt>
   11170:	bl	10f9c <abort@plt>
   11174:	andeq	r2, r1, r8, lsl r8
   11178:	andeq	r0, r1, r8, lsr #31
   1117c:			; <UNDEFINED> instruction: 0x000127b8
   11180:	ldr	r3, [pc, #20]	; 1119c <_start@@Base+0x58>
   11184:	ldr	r2, [pc, #20]	; 111a0 <_start@@Base+0x5c>
   11188:	add	r3, pc, r3
   1118c:	ldr	r2, [r3, r2]
   11190:	cmp	r2, #0
   11194:	bxeq	lr
   11198:	b	10f6c <__gmon_start__@plt>
   1119c:	andeq	r1, r1, r0, ror lr
   111a0:	andeq	r0, r0, r4, asr r0
   111a4:	ldr	r3, [pc, #28]	; 111c8 <_start@@Base+0x84>
   111a8:	ldr	r0, [pc, #28]	; 111cc <_start@@Base+0x88>
   111ac:	sub	r3, r3, r0
   111b0:	cmp	r3, #6
   111b4:	bxls	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <_start@@Base+0x8c>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	andeq	r3, r2, r3, rrx
   111cc:	andeq	r3, r2, r0, rrx
   111d0:	andeq	r0, r0, r0
   111d4:	ldr	r1, [pc, #36]	; 11200 <_start@@Base+0xbc>
   111d8:	ldr	r0, [pc, #36]	; 11204 <_start@@Base+0xc0>
   111dc:	sub	r1, r1, r0
   111e0:	asr	r1, r1, #2
   111e4:	add	r1, r1, r1, lsr #31
   111e8:	asrs	r1, r1, #1
   111ec:	bxeq	lr
   111f0:	ldr	r3, [pc, #16]	; 11208 <_start@@Base+0xc4>
   111f4:	cmp	r3, #0
   111f8:	bxeq	lr
   111fc:	bx	r3
   11200:	andeq	r3, r2, r0, rrx
   11204:	andeq	r3, r2, r0, rrx
   11208:	andeq	r0, r0, r0
   1120c:	push	{r4, lr}
   11210:	ldr	r4, [pc, #24]	; 11230 <_start@@Base+0xec>
   11214:	ldrb	r3, [r4]
   11218:	cmp	r3, #0
   1121c:	popne	{r4, pc}
   11220:	bl	111a4 <_start@@Base+0x60>
   11224:	mov	r3, #1
   11228:	strb	r3, [r4]
   1122c:	pop	{r4, pc}
   11230:	andeq	r3, r2, r0, rrx
   11234:	ldr	r0, [pc, #40]	; 11264 <_start@@Base+0x120>
   11238:	ldr	r3, [r0]
   1123c:	cmp	r3, #0
   11240:	bne	11248 <_start@@Base+0x104>
   11244:	b	111d4 <_start@@Base+0x90>
   11248:	ldr	r3, [pc, #24]	; 11268 <_start@@Base+0x124>
   1124c:	cmp	r3, #0
   11250:	beq	11244 <_start@@Base+0x100>
   11254:	push	{r4, lr}
   11258:	blx	r3
   1125c:	pop	{r4, lr}
   11260:	b	111d4 <_start@@Base+0x90>
   11264:	andeq	r2, r2, r4, lsl pc
   11268:	andeq	r0, r0, r0

0001126c <crescente@@Base>:
   1126c:	push	{r4, r5, r6, lr}
   11270:	subs	r4, r0, #0
   11274:	popeq	{r4, r5, r6, pc}
   11278:	ldr	r5, [pc, #32]	; 112a0 <crescente@@Base+0x34>
   1127c:	ldr	r0, [r4, #4]
   11280:	bl	1126c <crescente@@Base>
   11284:	ldr	r1, [r4]
   11288:	mov	r0, r5
   1128c:	bl	10ef4 <printf@plt>
   11290:	ldr	r4, [r4, #8]
   11294:	cmp	r4, #0
   11298:	bne	1127c <crescente@@Base+0x10>
   1129c:	pop	{r4, r5, r6, pc}
   112a0:	ldrdeq	r2, [r1], -r4

000112a4 <decrescente@@Base>:
   112a4:	push	{r4, r5, r6, lr}
   112a8:	subs	r4, r0, #0
   112ac:	popeq	{r4, r5, r6, pc}
   112b0:	ldr	r5, [pc, #32]	; 112d8 <decrescente@@Base+0x34>
   112b4:	ldr	r0, [r4, #8]
   112b8:	bl	112a4 <decrescente@@Base>
   112bc:	ldr	r1, [r4]
   112c0:	mov	r0, r5
   112c4:	bl	10ef4 <printf@plt>
   112c8:	ldr	r4, [r4, #4]
   112cc:	cmp	r4, #0
   112d0:	bne	112b4 <decrescente@@Base+0x10>
   112d4:	pop	{r4, r5, r6, pc}
   112d8:	ldrdeq	r2, [r1], -r4

000112dc <avl_imprime_ord@@Base>:
   112dc:	cmp	r1, #0
   112e0:	ldr	r0, [r0]
   112e4:	blt	112ec <avl_imprime_ord@@Base+0x10>
   112e8:	b	1126c <crescente@@Base>
   112ec:	b	112a4 <decrescente@@Base>

000112f0 <valida_passwds@@Base>:
   112f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   112f4:	mov	r5, r0
   112f8:	sub	sp, sp, #60	; 0x3c
   112fc:	mov	r8, r1
   11300:	mov	r0, #10
   11304:	ldr	r1, [pc, #188]	; 113c8 <valida_passwds@@Base+0xd8>
   11308:	mov	r7, r2
   1130c:	bl	11f74 <tabela_nova@@Base>
   11310:	ldr	r4, [pc, #180]	; 113cc <valida_passwds@@Base+0xdc>
   11314:	mov	r6, r0
   11318:	b	11320 <valida_passwds@@Base+0x30>
   1131c:	bl	12044 <tabela_adiciona@@Base>
   11320:	mov	r2, sp
   11324:	mov	r1, r4
   11328:	add	r3, sp, #28
   1132c:	mov	r0, r5
   11330:	bl	10f00 <__isoc99_fscanf@plt>
   11334:	add	r2, sp, #28
   11338:	mov	r1, sp
   1133c:	cmp	r0, #2
   11340:	mov	r0, r6
   11344:	beq	1131c <valida_passwds@@Base+0x2c>
   11348:	ldr	r4, [r8]
   1134c:	ldr	r5, [r7]
   11350:	cmp	r4, #0
   11354:	cmpne	r5, #0
   11358:	beq	113b0 <valida_passwds@@Base+0xc0>
   1135c:	ldr	r8, [pc, #108]	; 113d0 <valida_passwds@@Base+0xe0>
   11360:	ldr	r7, [pc, #108]	; 113d4 <valida_passwds@@Base+0xe4>
   11364:	ldr	r9, [pc, #108]	; 113d8 <valida_passwds@@Base+0xe8>
   11368:	ldr	r2, [r5]
   1136c:	ldr	r1, [r4]
   11370:	mov	r0, r8
   11374:	bl	10ef4 <printf@plt>
   11378:	ldr	r1, [r4]
   1137c:	mov	r0, r6
   11380:	bl	121cc <tabela_valor@@Base>
   11384:	ldr	r1, [r5]
   11388:	bl	10ee8 <strcmp@plt>
   1138c:	cmp	r0, #0
   11390:	mov	r0, r7
   11394:	moveq	r0, r9
   11398:	bl	10f48 <puts@plt>
   1139c:	ldr	r4, [r4, #4]
   113a0:	ldr	r5, [r5, #4]
   113a4:	cmp	r4, #0
   113a8:	cmpne	r5, #0
   113ac:	bne	11368 <valida_passwds@@Base+0x78>
   113b0:	mov	r0, r6
   113b4:	bl	12260 <tabela_esvazia@@Base>
   113b8:	mov	r0, r6
   113bc:	bl	10f18 <free@plt>
   113c0:	add	sp, sp, #60	; 0x3c
   113c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   113c8:	andeq	r2, r1, r0, ror r4
   113cc:	ldrdeq	r2, [r1], -r8
   113d0:	andeq	r2, r1, r0, ror #19
   113d4:	andeq	r2, r1, r4, lsl sl
   113d8:	strdeq	r2, [r1], -r8

000113dc <avl_nova@@Base>:
   113dc:	push	{r4, lr}
   113e0:	mov	r0, #4
   113e4:	bl	10f54 <malloc@plt>
   113e8:	cmp	r0, #0
   113ec:	movne	r3, #0
   113f0:	strne	r3, [r0]
   113f4:	pop	{r4, pc}

000113f8 <avl_min@@Base>:
   113f8:	cmp	r0, #0
   113fc:	bne	11408 <avl_min@@Base+0x10>
   11400:	b	1141c <avl_min@@Base+0x24>
   11404:	mov	r0, r3
   11408:	ldr	r3, [r0, #4]
   1140c:	cmp	r3, #0
   11410:	bne	11404 <avl_min@@Base+0xc>
   11414:	ldr	r0, [r0]
   11418:	bx	lr
   1141c:	bx	lr

00011420 <avl_max@@Base>:
   11420:	cmp	r0, #0
   11424:	bne	11430 <avl_max@@Base+0x10>
   11428:	b	11444 <avl_max@@Base+0x24>
   1142c:	mov	r0, r3
   11430:	ldr	r3, [r0, #8]
   11434:	cmp	r3, #0
   11438:	bne	1142c <avl_max@@Base+0xc>
   1143c:	ldr	r0, [r0]
   11440:	bx	lr
   11444:	bx	lr

00011448 <avl_altura@@Base>:
   11448:	cmp	r0, #0
   1144c:	ldrne	r0, [r0, #12]
   11450:	mvneq	r0, #0
   11454:	bx	lr

00011458 <max@@Base>:
   11458:	cmp	r1, r0
   1145c:	movge	r0, r1
   11460:	bx	lr

00011464 <avl_novo_no@@Base>:
   11464:	push	{r4, r5, r6, lr}
   11468:	mov	r5, r0
   1146c:	mov	r0, #16
   11470:	bl	10f54 <malloc@plt>
   11474:	mov	r4, r0
   11478:	mov	r0, r5
   1147c:	bl	10f78 <strlen@plt>
   11480:	add	r6, r0, #1
   11484:	mov	r0, r6
   11488:	bl	10f54 <malloc@plt>
   1148c:	mov	r2, r6
   11490:	mov	r1, r5
   11494:	str	r0, [r4]
   11498:	bl	10f24 <memcpy@plt>
   1149c:	mov	r3, #0
   114a0:	str	r3, [r4, #4]
   114a4:	str	r3, [r4, #8]
   114a8:	str	r3, [r4, #12]
   114ac:	mov	r0, r4
   114b0:	pop	{r4, r5, r6, pc}

000114b4 <roda_direita@@Base>:
   114b4:	ldr	r2, [r0, #4]
   114b8:	ldr	r3, [r2, #8]
   114bc:	str	r0, [r2, #8]
   114c0:	cmp	r3, #0
   114c4:	ldr	r1, [r0, #8]
   114c8:	str	r3, [r0, #4]
   114cc:	ldrne	r3, [r3, #12]
   114d0:	mvneq	r3, #0
   114d4:	cmp	r1, #0
   114d8:	mvneq	r1, #0
   114dc:	ldrne	r1, [r1, #12]
   114e0:	ldr	ip, [r2, #4]
   114e4:	cmp	r3, r1
   114e8:	movlt	r3, r1
   114ec:	cmp	ip, #0
   114f0:	add	r3, r3, #1
   114f4:	str	r3, [r0, #12]
   114f8:	ldrne	r1, [ip, #12]
   114fc:	beq	11518 <roda_direita@@Base+0x64>
   11500:	cmp	r3, r1
   11504:	movlt	r3, r1
   11508:	add	r3, r3, #1
   1150c:	str	r3, [r2, #12]
   11510:	mov	r0, r2
   11514:	bx	lr
   11518:	mvn	r1, #0
   1151c:	b	11500 <roda_direita@@Base+0x4c>

00011520 <roda_esquerda@@Base>:
   11520:	ldr	r2, [r0, #8]
   11524:	ldr	r1, [r2, #4]
   11528:	str	r0, [r2, #4]
   1152c:	ldr	r3, [r0, #4]
   11530:	str	r1, [r0, #8]
   11534:	cmp	r3, #0
   11538:	mvneq	r3, #0
   1153c:	ldrne	r3, [r3, #12]
   11540:	cmp	r1, #0
   11544:	beq	11584 <roda_esquerda@@Base+0x64>
   11548:	ldr	r1, [r1, #12]
   1154c:	cmp	r3, r1
   11550:	movlt	r3, r1
   11554:	add	r3, r3, #1
   11558:	str	r3, [r0, #12]
   1155c:	ldr	r1, [r2, #8]
   11560:	mov	r0, r2
   11564:	cmp	r1, #0
   11568:	mvneq	r1, #0
   1156c:	ldrne	r1, [r1, #12]
   11570:	cmp	r3, r1
   11574:	movlt	r3, r1
   11578:	add	r3, r3, #1
   1157c:	str	r3, [r2, #12]
   11580:	bx	lr
   11584:	orr	r3, r3, r3, asr #31
   11588:	add	r3, r3, #1
   1158c:	str	r3, [r0, #12]
   11590:	b	1155c <roda_esquerda@@Base+0x3c>

00011594 <calc_balanceamento@@Base>:
   11594:	cmp	r0, #0
   11598:	bxeq	lr
   1159c:	ldr	r3, [r0, #8]
   115a0:	ldr	r2, [r0, #4]
   115a4:	cmp	r3, #0
   115a8:	mvneq	r3, #0
   115ac:	ldrne	r3, [r3, #12]
   115b0:	cmp	r2, #0
   115b4:	mvneq	r0, #0
   115b8:	ldrne	r0, [r2, #12]
   115bc:	sub	r0, r3, r0
   115c0:	bx	lr

000115c4 <avl_pesquisa_impl@@Base>:
   115c4:	push	{r4, r5, r6, lr}
   115c8:	subs	r4, r0, #0
   115cc:	beq	115fc <avl_pesquisa_impl@@Base+0x38>
   115d0:	mov	r5, r1
   115d4:	ldr	r1, [r4]
   115d8:	mov	r0, r5
   115dc:	bl	10ee8 <strcmp@plt>
   115e0:	cmp	r0, #0
   115e4:	ldrlt	r4, [r4, #4]
   115e8:	blt	115f4 <avl_pesquisa_impl@@Base+0x30>
   115ec:	beq	115fc <avl_pesquisa_impl@@Base+0x38>
   115f0:	ldr	r4, [r4, #8]
   115f4:	cmp	r4, #0
   115f8:	bne	115d4 <avl_pesquisa_impl@@Base+0x10>
   115fc:	mov	r0, r4
   11600:	pop	{r4, r5, r6, pc}

00011604 <avl_pesquisa@@Base>:
   11604:	cmp	r1, #0
   11608:	cmpne	r0, #0
   1160c:	beq	11618 <avl_pesquisa@@Base+0x14>
   11610:	ldr	r0, [r0]
   11614:	b	115c4 <avl_pesquisa_impl@@Base>
   11618:	mov	r0, #0
   1161c:	bx	lr

00011620 <avl_insere_impl@@Base>:
   11620:	push	{r4, r5, r6, lr}
   11624:	subs	r4, r0, #0
   11628:	beq	117d4 <avl_insere_impl@@Base+0x1b4>
   1162c:	mov	r5, r1
   11630:	mov	r0, r5
   11634:	ldr	r1, [r4]
   11638:	bl	10ee8 <strcmp@plt>
   1163c:	cmp	r0, #0
   11640:	blt	11790 <avl_insere_impl@@Base+0x170>
   11644:	beq	116dc <avl_insere_impl@@Base+0xbc>
   11648:	mov	r1, r5
   1164c:	ldr	r0, [r4, #8]
   11650:	bl	11620 <avl_insere_impl@@Base>
   11654:	ldr	r1, [r4, #4]
   11658:	str	r0, [r4, #8]
   1165c:	cmp	r1, #0
   11660:	beq	11700 <avl_insere_impl@@Base+0xe0>
   11664:	cmp	r0, #0
   11668:	ldr	r3, [r1, #12]
   1166c:	beq	116e4 <avl_insere_impl@@Base+0xc4>
   11670:	ldr	r2, [r0, #12]
   11674:	cmp	r3, r2
   11678:	movlt	r3, r2
   1167c:	add	r3, r3, #1
   11680:	str	r3, [r4, #12]
   11684:	ldr	r3, [r0, #12]
   11688:	ldr	r2, [r1, #12]
   1168c:	sub	r3, r3, r2
   11690:	cmp	r3, #1
   11694:	ble	11728 <avl_insere_impl@@Base+0x108>
   11698:	cmp	r0, #0
   1169c:	beq	116cc <avl_insere_impl@@Base+0xac>
   116a0:	ldmib	r0, {r2, r3}
   116a4:	cmp	r3, #0
   116a8:	beq	117ac <avl_insere_impl@@Base+0x18c>
   116ac:	cmp	r2, #0
   116b0:	ldr	r3, [r3, #12]
   116b4:	mvneq	r2, #0
   116b8:	beq	116c0 <avl_insere_impl@@Base+0xa0>
   116bc:	ldr	r2, [r2, #12]
   116c0:	sub	r3, r3, r2
   116c4:	cmp	r3, #0
   116c8:	blt	1177c <avl_insere_impl@@Base+0x15c>
   116cc:	mov	r0, r4
   116d0:	pop	{r4, r5, r6, lr}
   116d4:	b	11520 <roda_esquerda@@Base>
   116d8:	str	r0, [r4, #12]
   116dc:	mov	r0, r4
   116e0:	pop	{r4, r5, r6, pc}
   116e4:	mvn	r2, #0
   116e8:	cmp	r3, r2
   116ec:	movlt	r3, r2
   116f0:	add	r3, r3, #1
   116f4:	str	r3, [r4, #12]
   116f8:	mov	r3, r2
   116fc:	b	11688 <avl_insere_impl@@Base+0x68>
   11700:	cmp	r0, #0
   11704:	beq	116d8 <avl_insere_impl@@Base+0xb8>
   11708:	ldr	r3, [r0, #12]
   1170c:	orr	r3, r3, r3, asr #31
   11710:	add	r3, r3, #1
   11714:	str	r3, [r4, #12]
   11718:	ldr	r3, [r0, #12]
   1171c:	add	r3, r3, #1
   11720:	cmp	r3, #1
   11724:	bgt	116a0 <avl_insere_impl@@Base+0x80>
   11728:	cmn	r3, #1
   1172c:	bge	116dc <avl_insere_impl@@Base+0xbc>
   11730:	cmp	r1, #0
   11734:	beq	117c8 <avl_insere_impl@@Base+0x1a8>
   11738:	ldmib	r1, {r2, r3}
   1173c:	cmp	r3, #0
   11740:	beq	117bc <avl_insere_impl@@Base+0x19c>
   11744:	cmp	r2, #0
   11748:	ldr	r3, [r3, #12]
   1174c:	mvneq	r2, #0
   11750:	beq	11758 <avl_insere_impl@@Base+0x138>
   11754:	ldr	r2, [r2, #12]
   11758:	sub	r3, r3, r2
   1175c:	cmp	r3, #0
   11760:	ble	117c8 <avl_insere_impl@@Base+0x1a8>
   11764:	mov	r0, r1
   11768:	bl	11520 <roda_esquerda@@Base>
   1176c:	str	r0, [r4, #4]
   11770:	mov	r0, r4
   11774:	pop	{r4, r5, r6, lr}
   11778:	b	114b4 <roda_direita@@Base>
   1177c:	bl	114b4 <roda_direita@@Base>
   11780:	str	r0, [r4, #8]
   11784:	mov	r0, r4
   11788:	pop	{r4, r5, r6, lr}
   1178c:	b	11520 <roda_esquerda@@Base>
   11790:	mov	r1, r5
   11794:	ldr	r0, [r4, #4]
   11798:	bl	11620 <avl_insere_impl@@Base>
   1179c:	mov	r1, r0
   117a0:	str	r0, [r4, #4]
   117a4:	ldr	r0, [r4, #8]
   117a8:	b	1165c <avl_insere_impl@@Base+0x3c>
   117ac:	cmp	r2, #0
   117b0:	mvnne	r3, #0
   117b4:	bne	116bc <avl_insere_impl@@Base+0x9c>
   117b8:	b	116cc <avl_insere_impl@@Base+0xac>
   117bc:	cmp	r2, #0
   117c0:	mvnne	r3, #0
   117c4:	bne	11754 <avl_insere_impl@@Base+0x134>
   117c8:	mov	r0, r4
   117cc:	pop	{r4, r5, r6, lr}
   117d0:	b	114b4 <roda_direita@@Base>
   117d4:	mov	r0, r1
   117d8:	pop	{r4, r5, r6, lr}
   117dc:	b	11464 <avl_novo_no@@Base>

000117e0 <avl_insere@@Base>:
   117e0:	cmp	r1, #0
   117e4:	cmpne	r0, #0
   117e8:	push	{r4, r5, r6, lr}
   117ec:	moveq	r5, #1
   117f0:	movne	r5, #0
   117f4:	beq	11810 <avl_insere@@Base+0x30>
   117f8:	mov	r4, r0
   117fc:	ldr	r0, [r0]
   11800:	bl	11620 <avl_insere_impl@@Base>
   11804:	str	r0, [r4]
   11808:	mov	r0, r5
   1180c:	pop	{r4, r5, r6, pc}
   11810:	mvn	r5, #0
   11814:	b	11808 <avl_insere@@Base+0x28>

00011818 <avl_no_valormin@@Base>:
   11818:	b	11820 <avl_no_valormin@@Base+0x8>
   1181c:	mov	r0, r3
   11820:	ldr	r3, [r0, #4]
   11824:	cmp	r3, #0
   11828:	bne	1181c <avl_no_valormin@@Base+0x4>
   1182c:	bx	lr

00011830 <avl_no_valormax@@Base>:
   11830:	b	11838 <avl_no_valormax@@Base+0x8>
   11834:	mov	r0, r3
   11838:	ldr	r3, [r0, #8]
   1183c:	cmp	r3, #0
   11840:	bne	11834 <avl_no_valormax@@Base+0x4>
   11844:	bx	lr

00011848 <avl_remove_impl@@Base>:
   11848:	push	{r4, r5, r6, r7, r8, lr}
   1184c:	subs	r4, r0, #0
   11850:	beq	1199c <avl_remove_impl@@Base+0x154>
   11854:	ldr	r7, [r4]
   11858:	mov	r0, r1
   1185c:	mov	r5, r1
   11860:	mov	r1, r7
   11864:	bl	10ee8 <strcmp@plt>
   11868:	cmp	r0, #0
   1186c:	blt	11a08 <avl_remove_impl@@Base+0x1c0>
   11870:	beq	11904 <avl_remove_impl@@Base+0xbc>
   11874:	mov	r1, r5
   11878:	ldr	r0, [r4, #8]
   1187c:	bl	11848 <avl_remove_impl@@Base>
   11880:	ldr	r1, [r4, #4]
   11884:	str	r0, [r4, #8]
   11888:	cmp	r1, #0
   1188c:	beq	1196c <avl_remove_impl@@Base+0x124>
   11890:	cmp	r0, #0
   11894:	ldr	r3, [r1, #12]
   11898:	beq	11a24 <avl_remove_impl@@Base+0x1dc>
   1189c:	ldr	r2, [r0, #12]
   118a0:	cmp	r3, r2
   118a4:	movlt	r3, r2
   118a8:	add	r3, r3, #1
   118ac:	str	r3, [r4, #12]
   118b0:	ldr	r3, [r0, #12]
   118b4:	ldr	r2, [r1, #12]
   118b8:	sub	r3, r3, r2
   118bc:	cmp	r3, #1
   118c0:	ble	11994 <avl_remove_impl@@Base+0x14c>
   118c4:	cmp	r0, #0
   118c8:	beq	118f8 <avl_remove_impl@@Base+0xb0>
   118cc:	ldmib	r0, {r2, r3}
   118d0:	cmp	r3, #0
   118d4:	beq	11a40 <avl_remove_impl@@Base+0x1f8>
   118d8:	cmp	r2, #0
   118dc:	ldr	r3, [r3, #12]
   118e0:	mvneq	r2, #0
   118e4:	beq	118ec <avl_remove_impl@@Base+0xa4>
   118e8:	ldr	r2, [r2, #12]
   118ec:	sub	r3, r3, r2
   118f0:	cmp	r3, #0
   118f4:	blt	119f4 <avl_remove_impl@@Base+0x1ac>
   118f8:	mov	r0, r4
   118fc:	pop	{r4, r5, r6, r7, r8, lr}
   11900:	b	11520 <roda_esquerda@@Base>
   11904:	ldr	r6, [r4, #4]
   11908:	cmp	r6, #0
   1190c:	beq	11ab4 <avl_remove_impl@@Base+0x26c>
   11910:	ldr	r5, [r4, #8]
   11914:	cmp	r5, #0
   11918:	bne	11924 <avl_remove_impl@@Base+0xdc>
   1191c:	b	11a50 <avl_remove_impl@@Base+0x208>
   11920:	mov	r5, r3
   11924:	ldr	r3, [r5, #4]
   11928:	cmp	r3, #0
   1192c:	bne	11920 <avl_remove_impl@@Base+0xd8>
   11930:	ldr	r0, [r5]
   11934:	bl	10f78 <strlen@plt>
   11938:	add	r1, r0, #1
   1193c:	mov	r0, r7
   11940:	bl	10f30 <realloc@plt>
   11944:	str	r0, [r4]
   11948:	ldr	r1, [r5]
   1194c:	bl	10f3c <strcpy@plt>
   11950:	ldr	r1, [r5]
   11954:	ldr	r0, [r4, #8]
   11958:	bl	11848 <avl_remove_impl@@Base>
   1195c:	ldr	r1, [r4, #4]
   11960:	cmp	r1, #0
   11964:	str	r0, [r4, #8]
   11968:	bne	11890 <avl_remove_impl@@Base+0x48>
   1196c:	cmp	r0, #0
   11970:	beq	11aac <avl_remove_impl@@Base+0x264>
   11974:	ldr	r3, [r0, #12]
   11978:	orr	r3, r3, r3, asr #31
   1197c:	add	r3, r3, #1
   11980:	str	r3, [r4, #12]
   11984:	ldr	r3, [r0, #12]
   11988:	add	r3, r3, #1
   1198c:	cmp	r3, #1
   11990:	bgt	118cc <avl_remove_impl@@Base+0x84>
   11994:	cmn	r3, #1
   11998:	blt	119a8 <avl_remove_impl@@Base+0x160>
   1199c:	mov	r6, r4
   119a0:	mov	r0, r6
   119a4:	pop	{r4, r5, r6, r7, r8, pc}
   119a8:	cmp	r1, #0
   119ac:	beq	11aa0 <avl_remove_impl@@Base+0x258>
   119b0:	ldmib	r1, {r2, r3}
   119b4:	cmp	r3, #0
   119b8:	beq	11a94 <avl_remove_impl@@Base+0x24c>
   119bc:	cmp	r2, #0
   119c0:	ldr	r3, [r3, #12]
   119c4:	mvneq	r2, #0
   119c8:	beq	119d0 <avl_remove_impl@@Base+0x188>
   119cc:	ldr	r2, [r2, #12]
   119d0:	sub	r3, r3, r2
   119d4:	cmp	r3, #0
   119d8:	ble	11aa0 <avl_remove_impl@@Base+0x258>
   119dc:	mov	r0, r1
   119e0:	bl	11520 <roda_esquerda@@Base>
   119e4:	str	r0, [r4, #4]
   119e8:	mov	r0, r4
   119ec:	pop	{r4, r5, r6, r7, r8, lr}
   119f0:	b	114b4 <roda_direita@@Base>
   119f4:	bl	114b4 <roda_direita@@Base>
   119f8:	str	r0, [r4, #8]
   119fc:	mov	r0, r4
   11a00:	pop	{r4, r5, r6, r7, r8, lr}
   11a04:	b	11520 <roda_esquerda@@Base>
   11a08:	mov	r1, r5
   11a0c:	ldr	r0, [r4, #4]
   11a10:	bl	11848 <avl_remove_impl@@Base>
   11a14:	mov	r1, r0
   11a18:	str	r0, [r4, #4]
   11a1c:	ldr	r0, [r4, #8]
   11a20:	b	11888 <avl_remove_impl@@Base+0x40>
   11a24:	mvn	r2, #0
   11a28:	cmp	r3, r2
   11a2c:	movlt	r3, r2
   11a30:	add	r3, r3, #1
   11a34:	str	r3, [r4, #12]
   11a38:	mov	r3, r2
   11a3c:	b	118b4 <avl_remove_impl@@Base+0x6c>
   11a40:	cmp	r2, #0
   11a44:	mvnne	r3, #0
   11a48:	bne	118e8 <avl_remove_impl@@Base+0xa0>
   11a4c:	b	118f8 <avl_remove_impl@@Base+0xb0>
   11a50:	ldr	r0, [r6]
   11a54:	bl	10f78 <strlen@plt>
   11a58:	add	r1, r0, #1
   11a5c:	mov	r0, r7
   11a60:	bl	10f30 <realloc@plt>
   11a64:	str	r0, [r4]
   11a68:	ldr	r1, [r6]
   11a6c:	bl	10f3c <strcpy@plt>
   11a70:	ldmib	r6, {r1, r2, r3}
   11a74:	ldr	r0, [r6]
   11a78:	stmib	r4, {r1, r2, r3}
   11a7c:	bl	10f18 <free@plt>
   11a80:	mov	r0, r6
   11a84:	bl	10f18 <free@plt>
   11a88:	ldr	r1, [r4, #4]
   11a8c:	ldr	r0, [r4, #8]
   11a90:	b	11888 <avl_remove_impl@@Base+0x40>
   11a94:	cmp	r2, #0
   11a98:	mvnne	r3, #0
   11a9c:	bne	119cc <avl_remove_impl@@Base+0x184>
   11aa0:	mov	r0, r4
   11aa4:	pop	{r4, r5, r6, r7, r8, lr}
   11aa8:	b	114b4 <roda_direita@@Base>
   11aac:	str	r0, [r4, #12]
   11ab0:	b	1199c <avl_remove_impl@@Base+0x154>
   11ab4:	ldr	r6, [r4, #8]
   11ab8:	cmp	r6, #0
   11abc:	bne	11a50 <avl_remove_impl@@Base+0x208>
   11ac0:	mov	r0, r7
   11ac4:	bl	10f18 <free@plt>
   11ac8:	mov	r0, r4
   11acc:	bl	10f18 <free@plt>
   11ad0:	b	119a0 <avl_remove_impl@@Base+0x158>

00011ad4 <avl_apaga@@Base>:
   11ad4:	push	{r4, lr}
   11ad8:	subs	r4, r0, #0
   11adc:	popeq	{r4, pc}
   11ae0:	ldr	r0, [r4]
   11ae4:	cmp	r0, #0
   11ae8:	beq	11b00 <avl_apaga@@Base+0x2c>
   11aec:	ldr	r1, [r0]
   11af0:	bl	11848 <avl_remove_impl@@Base>
   11af4:	cmp	r0, #0
   11af8:	str	r0, [r4]
   11afc:	bne	11aec <avl_apaga@@Base+0x18>
   11b00:	mov	r0, r4
   11b04:	pop	{r4, lr}
   11b08:	b	10f18 <free@plt>

00011b0c <avl_remove@@Base>:
   11b0c:	cmp	r1, #0
   11b10:	cmpne	r0, #0
   11b14:	push	{r4, r5, r6, lr}
   11b18:	moveq	r5, #1
   11b1c:	movne	r5, #0
   11b20:	beq	11b3c <avl_remove@@Base+0x30>
   11b24:	mov	r4, r0
   11b28:	ldr	r0, [r0]
   11b2c:	bl	11848 <avl_remove_impl@@Base>
   11b30:	str	r0, [r4]
   11b34:	mov	r0, r5
   11b38:	pop	{r4, r5, r6, pc}
   11b3c:	mvn	r5, #0
   11b40:	b	11b34 <avl_remove@@Base+0x28>

00011b44 <avl_preordem_impl@@Base>:
   11b44:	push	{r4, r5, r6, lr}
   11b48:	subs	r4, r0, #0
   11b4c:	popeq	{r4, r5, r6, pc}
   11b50:	ldr	r5, [pc, #32]	; 11b78 <avl_preordem_impl@@Base+0x34>
   11b54:	ldr	r1, [r4]
   11b58:	mov	r0, r5
   11b5c:	bl	10ef4 <printf@plt>
   11b60:	ldr	r0, [r4, #4]
   11b64:	bl	11b44 <avl_preordem_impl@@Base>
   11b68:	ldr	r4, [r4, #8]
   11b6c:	cmp	r4, #0
   11b70:	bne	11b54 <avl_preordem_impl@@Base+0x10>
   11b74:	pop	{r4, r5, r6, pc}
   11b78:	ldrdeq	r2, [r1], -r4

00011b7c <avl_imprime@@Base>:
   11b7c:	cmp	r0, #0
   11b80:	bxeq	lr
   11b84:	push	{r4, lr}
   11b88:	bl	11b44 <avl_preordem_impl@@Base>
   11b8c:	mov	r0, #10
   11b90:	pop	{r4, lr}
   11b94:	b	10f84 <putchar@plt>

00011b98 <novo_str@@Base>:
   11b98:	push	{r4, r5, r6, r7, r8, lr}
   11b9c:	mov	r5, r0
   11ba0:	mov	r0, #12
   11ba4:	bl	10f54 <malloc@plt>
   11ba8:	subs	r4, r0, #0
   11bac:	beq	11bec <novo_str@@Base+0x54>
   11bb0:	mov	r0, r5
   11bb4:	bl	10f78 <strlen@plt>
   11bb8:	add	r7, r0, #1
   11bbc:	mov	r0, r7
   11bc0:	bl	10f54 <malloc@plt>
   11bc4:	cmp	r0, #0
   11bc8:	mov	r6, r0
   11bcc:	str	r0, [r4]
   11bd0:	beq	11bf4 <novo_str@@Base+0x5c>
   11bd4:	mov	r2, r7
   11bd8:	mov	r1, r5
   11bdc:	bl	10f24 <memcpy@plt>
   11be0:	mov	r3, #0
   11be4:	str	r3, [r4, #4]
   11be8:	str	r3, [r4, #8]
   11bec:	mov	r0, r4
   11bf0:	pop	{r4, r5, r6, r7, r8, pc}
   11bf4:	mov	r0, r4
   11bf8:	bl	10f18 <free@plt>
   11bfc:	mov	r4, r6
   11c00:	b	11bec <novo_str@@Base+0x54>

00011c04 <lista_nova@@Base>:
   11c04:	push	{r4, lr}
   11c08:	mov	r0, #12
   11c0c:	bl	10f54 <malloc@plt>
   11c10:	cmp	r0, #0
   11c14:	movne	r3, #0
   11c18:	strne	r3, [r0]
   11c1c:	strne	r3, [r0, #4]
   11c20:	strne	r3, [r0, #8]
   11c24:	pop	{r4, pc}

00011c28 <lista_apaga@@Base>:
   11c28:	push	{r4, r5, r6, lr}
   11c2c:	subs	r5, r0, #0
   11c30:	bne	11c4c <lista_apaga@@Base+0x24>
   11c34:	b	11c64 <lista_apaga@@Base+0x3c>
   11c38:	ldm	r4, {r0, r3}
   11c3c:	str	r3, [r5]
   11c40:	bl	10f18 <free@plt>
   11c44:	mov	r0, r4
   11c48:	bl	10f18 <free@plt>
   11c4c:	ldr	r4, [r5]
   11c50:	cmp	r4, #0
   11c54:	bne	11c38 <lista_apaga@@Base+0x10>
   11c58:	mov	r0, r5
   11c5c:	pop	{r4, r5, r6, lr}
   11c60:	b	10f18 <free@plt>
   11c64:	pop	{r4, r5, r6, pc}

00011c68 <lista_tamanho@@Base>:
   11c68:	cmp	r0, #0
   11c6c:	ldrne	r0, [r0, #8]
   11c70:	mvneq	r0, #0
   11c74:	bx	lr

00011c78 <lista_inicio@@Base>:
   11c78:	cmp	r0, #0
   11c7c:	ldrne	r0, [r0]
   11c80:	bx	lr

00011c84 <lista_fim@@Base>:
   11c84:	cmp	r0, #0
   11c88:	ldrne	r0, [r0, #4]
   11c8c:	bx	lr

00011c90 <lista_insere@@Base>:
   11c90:	cmp	r1, #0
   11c94:	cmpne	r0, #0
   11c98:	beq	11d24 <lista_insere@@Base+0x94>
   11c9c:	push	{r4, r5, r6, lr}
   11ca0:	mov	r5, r0
   11ca4:	mov	r0, r1
   11ca8:	mov	r4, r2
   11cac:	bl	11b98 <novo_str@@Base>
   11cb0:	cmp	r0, #0
   11cb4:	beq	11cfc <lista_insere@@Base+0x6c>
   11cb8:	ldr	r3, [r5, #8]
   11cbc:	cmp	r4, #0
   11cc0:	add	r3, r3, #1
   11cc4:	str	r3, [r5, #8]
   11cc8:	ldr	r3, [r5]
   11ccc:	beq	11d04 <lista_insere@@Base+0x74>
   11cd0:	cmp	r4, r3
   11cd4:	streq	r4, [r0, #4]
   11cd8:	ldrne	r3, [r4, #8]
   11cdc:	streq	r0, [r4, #8]
   11ce0:	strne	r3, [r0, #8]
   11ce4:	ldrne	r3, [r4, #8]
   11ce8:	strne	r4, [r0, #4]
   11cec:	streq	r0, [r5]
   11cf0:	strne	r0, [r3, #4]
   11cf4:	strne	r0, [r4, #8]
   11cf8:	pop	{r4, r5, r6, pc}
   11cfc:	mov	r0, #0
   11d00:	pop	{r4, r5, r6, pc}
   11d04:	cmp	r3, #0
   11d08:	streq	r0, [r5, #4]
   11d0c:	ldrne	r3, [r5, #4]
   11d10:	streq	r0, [r5]
   11d14:	strne	r3, [r0, #8]
   11d18:	strne	r0, [r3, #4]
   11d1c:	strne	r0, [r5, #4]
   11d20:	pop	{r4, r5, r6, pc}
   11d24:	mov	r0, #0
   11d28:	bx	lr

00011d2c <lista_remove@@Base>:
   11d2c:	cmp	r1, #0
   11d30:	cmpne	r0, #0
   11d34:	push	{r4, r5, r6, lr}
   11d38:	beq	11d8c <lista_remove@@Base+0x60>
   11d3c:	ldr	r2, [r1, #8]
   11d40:	ldr	r3, [r0, #8]
   11d44:	cmp	r2, #0
   11d48:	sub	r3, r3, #1
   11d4c:	str	r3, [r0, #8]
   11d50:	ldrne	r3, [r1, #4]
   11d54:	ldreq	r5, [r1, #4]
   11d58:	strne	r3, [r2, #4]
   11d5c:	ldrne	r5, [r1, #4]
   11d60:	streq	r5, [r0]
   11d64:	cmp	r5, #0
   11d68:	streq	r2, [r0, #4]
   11d6c:	mov	r4, r1
   11d70:	ldr	r0, [r1]
   11d74:	strne	r2, [r5, #8]
   11d78:	bl	10f18 <free@plt>
   11d7c:	mov	r0, r4
   11d80:	bl	10f18 <free@plt>
   11d84:	mov	r0, r5
   11d88:	pop	{r4, r5, r6, pc}
   11d8c:	mov	r5, #0
   11d90:	mov	r0, r5
   11d94:	pop	{r4, r5, r6, pc}

00011d98 <lista_pesquisa@@Base>:
   11d98:	cmp	r1, #0
   11d9c:	cmpne	r0, #0
   11da0:	push	{r4, r5, r6, lr}
   11da4:	moveq	r4, #1
   11da8:	movne	r4, #0
   11dac:	beq	11e34 <lista_pesquisa@@Base+0x9c>
   11db0:	cmp	r2, #1
   11db4:	bhi	11df4 <lista_pesquisa@@Base+0x5c>
   11db8:	cmp	r2, #0
   11dbc:	mov	r5, r1
   11dc0:	bne	11dfc <lista_pesquisa@@Base+0x64>
   11dc4:	ldr	r4, [r0]
   11dc8:	cmp	r4, #0
   11dcc:	bne	11de0 <lista_pesquisa@@Base+0x48>
   11dd0:	b	11df4 <lista_pesquisa@@Base+0x5c>
   11dd4:	ldr	r4, [r4, #4]
   11dd8:	cmp	r4, #0
   11ddc:	beq	11df4 <lista_pesquisa@@Base+0x5c>
   11de0:	mov	r1, r5
   11de4:	ldr	r0, [r4]
   11de8:	bl	10ee8 <strcmp@plt>
   11dec:	cmp	r0, #0
   11df0:	bne	11dd4 <lista_pesquisa@@Base+0x3c>
   11df4:	mov	r0, r4
   11df8:	pop	{r4, r5, r6, pc}
   11dfc:	ldr	r4, [r0, #4]
   11e00:	cmp	r4, #0
   11e04:	bne	11e18 <lista_pesquisa@@Base+0x80>
   11e08:	b	11df4 <lista_pesquisa@@Base+0x5c>
   11e0c:	ldr	r4, [r4, #8]
   11e10:	cmp	r4, #0
   11e14:	beq	11df4 <lista_pesquisa@@Base+0x5c>
   11e18:	mov	r1, r5
   11e1c:	ldr	r0, [r4]
   11e20:	bl	10ee8 <strcmp@plt>
   11e24:	cmp	r0, #0
   11e28:	bne	11e0c <lista_pesquisa@@Base+0x74>
   11e2c:	mov	r0, r4
   11e30:	pop	{r4, r5, r6, pc}
   11e34:	mov	r4, #0
   11e38:	mov	r0, r4
   11e3c:	pop	{r4, r5, r6, pc}

00011e40 <lista_ordena@@Base>:
   11e40:	cmp	r0, #0
   11e44:	beq	11ec4 <lista_ordena@@Base+0x84>
   11e48:	ldr	r3, [r0, #8]
   11e4c:	cmp	r3, #0
   11e50:	beq	11ebc <lista_ordena@@Base+0x7c>
   11e54:	push	{r4, r5, r6, r7, r8, lr}
   11e58:	ldr	r6, [r0]
   11e5c:	ldr	r7, [r6, #4]
   11e60:	cmp	r7, #0
   11e64:	beq	11eb4 <lista_ordena@@Base+0x74>
   11e68:	mov	r5, r6
   11e6c:	mov	r4, r7
   11e70:	ldr	r1, [r5]
   11e74:	ldr	r0, [r4]
   11e78:	bl	10ee8 <strcmp@plt>
   11e7c:	cmp	r0, #0
   11e80:	movlt	r5, r4
   11e84:	ldr	r4, [r4, #4]
   11e88:	cmp	r4, #0
   11e8c:	bne	11e70 <lista_ordena@@Base+0x30>
   11e90:	cmp	r6, r5
   11e94:	ldrne	r2, [r5]
   11e98:	ldrne	r3, [r6]
   11e9c:	strne	r2, [r6]
   11ea0:	mov	r6, r7
   11ea4:	strne	r3, [r5]
   11ea8:	ldr	r7, [r6, #4]
   11eac:	cmp	r7, #0
   11eb0:	bne	11e68 <lista_ordena@@Base+0x28>
   11eb4:	mov	r0, #0
   11eb8:	pop	{r4, r5, r6, r7, r8, pc}
   11ebc:	mov	r0, #0
   11ec0:	bx	lr
   11ec4:	mvn	r0, #0
   11ec8:	bx	lr

00011ecc <lista_inverte@@Base>:
   11ecc:	push	{r4, r5, lr}
   11ed0:	subs	r5, r0, #0
   11ed4:	beq	11f6c <lista_inverte@@Base+0xa0>
   11ed8:	ldr	r4, [r5, #8]
   11edc:	cmp	r4, #1
   11ee0:	ble	11f5c <lista_inverte@@Base+0x90>
   11ee4:	ldr	r2, [r5]
   11ee8:	cmp	r4, #2
   11eec:	ldr	r3, [r2, #4]
   11ef0:	beq	11f64 <lista_inverte@@Base+0x98>
   11ef4:	sub	r4, r4, #2
   11ef8:	mov	r1, #0
   11efc:	b	11f04 <lista_inverte@@Base+0x38>
   11f00:	mov	r3, lr
   11f04:	ldr	ip, [r3, #8]
   11f08:	ldr	lr, [r3, #4]
   11f0c:	add	r1, r1, #1
   11f10:	str	lr, [ip, #4]
   11f14:	ldr	lr, [r3, #4]
   11f18:	cmp	r1, r4
   11f1c:	str	ip, [lr, #8]
   11f20:	str	r2, [r3, #4]
   11f24:	str	r3, [r2, #8]
   11f28:	mov	r2, r3
   11f2c:	bne	11f00 <lista_inverte@@Base+0x34>
   11f30:	ldr	r2, [r5, #4]
   11f34:	mov	r1, #0
   11f38:	mov	r0, r1
   11f3c:	ldr	ip, [r2, #8]
   11f40:	str	ip, [r5, #4]
   11f44:	str	r1, [ip, #4]
   11f48:	str	r1, [r2, #8]
   11f4c:	str	r3, [r2, #4]
   11f50:	str	r2, [r3, #8]
   11f54:	str	r2, [r5]
   11f58:	pop	{r4, r5, pc}
   11f5c:	mov	r0, #0
   11f60:	pop	{r4, r5, pc}
   11f64:	mov	r3, r2
   11f68:	b	11f30 <lista_inverte@@Base+0x64>
   11f6c:	mvn	r0, #0
   11f70:	pop	{r4, r5, pc}

00011f74 <tabela_nova@@Base>:
   11f74:	cmp	r1, #0
   11f78:	cmpne	r0, #0
   11f7c:	push	{r4, r5, r6, r7, r8, lr}
   11f80:	ble	11fc8 <tabela_nova@@Base+0x54>
   11f84:	mov	r5, r0
   11f88:	mov	r0, #12
   11f8c:	mov	r6, r1
   11f90:	bl	10f54 <malloc@plt>
   11f94:	subs	r4, r0, #0
   11f98:	beq	11fc8 <tabela_nova@@Base+0x54>
   11f9c:	mov	r1, #4
   11fa0:	mov	r0, r5
   11fa4:	bl	10ed0 <calloc@plt>
   11fa8:	cmp	r0, #0
   11fac:	mov	r7, r0
   11fb0:	str	r0, [r4, #4]
   11fb4:	strne	r5, [r4, #8]
   11fb8:	strne	r6, [r4]
   11fbc:	beq	11fd4 <tabela_nova@@Base+0x60>
   11fc0:	mov	r0, r4
   11fc4:	pop	{r4, r5, r6, r7, r8, pc}
   11fc8:	mov	r4, #0
   11fcc:	mov	r0, r4
   11fd0:	pop	{r4, r5, r6, r7, r8, pc}
   11fd4:	mov	r0, r4
   11fd8:	bl	10f18 <free@plt>
   11fdc:	mov	r4, r7
   11fe0:	b	11fc0 <tabela_nova@@Base+0x4c>

00011fe4 <tabela_apaga@@Base>:
   11fe4:	push	{r4, r5, r6, r7, r8, lr}
   11fe8:	subs	r7, r0, #0
   11fec:	popeq	{r4, r5, r6, r7, r8, pc}
   11ff0:	ldmib	r7, {r0, r3}
   11ff4:	cmp	r3, #0
   11ff8:	ble	12034 <tabela_apaga@@Base+0x50>
   11ffc:	mov	r6, #0
   12000:	ldr	r4, [r0, r6, lsl #2]
   12004:	cmp	r4, #0
   12008:	beq	12028 <tabela_apaga@@Base+0x44>
   1200c:	ldm	r4, {r0, r5}
   12010:	bl	10f18 <free@plt>
   12014:	mov	r0, r4
   12018:	bl	10f18 <free@plt>
   1201c:	subs	r4, r5, #0
   12020:	bne	1200c <tabela_apaga@@Base+0x28>
   12024:	ldmib	r7, {r0, r3}
   12028:	add	r6, r6, #1
   1202c:	cmp	r3, r6
   12030:	bgt	12000 <tabela_apaga@@Base+0x1c>
   12034:	bl	10f18 <free@plt>
   12038:	mov	r0, r7
   1203c:	pop	{r4, r5, r6, r7, r8, lr}
   12040:	b	10f18 <free@plt>

00012044 <tabela_adiciona@@Base>:
   12044:	cmp	r2, #0
   12048:	cmpne	r1, #0
   1204c:	moveq	r3, #1
   12050:	movne	r3, #0
   12054:	cmp	r0, #0
   12058:	orreq	r3, r3, #1
   1205c:	cmp	r3, #0
   12060:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12064:	bne	12128 <tabela_adiciona@@Base+0xe4>
   12068:	mov	r6, r1
   1206c:	mov	r4, r0
   12070:	ldr	r3, [r0]
   12074:	ldr	r1, [r0, #8]
   12078:	mov	r0, r6
   1207c:	mov	r8, r2
   12080:	blx	r3
   12084:	ldr	sl, [r4, #4]
   12088:	ldr	r4, [sl, r0, lsl #2]
   1208c:	mov	r9, r0
   12090:	cmp	r4, #0
   12094:	bne	120a8 <tabela_adiciona@@Base+0x64>
   12098:	b	120d4 <tabela_adiciona@@Base+0x90>
   1209c:	ldr	r4, [r4, #4]
   120a0:	cmp	r4, #0
   120a4:	beq	120d4 <tabela_adiciona@@Base+0x90>
   120a8:	ldr	r5, [r4]
   120ac:	mov	r1, r6
   120b0:	mov	r0, r5
   120b4:	bl	10ee8 <strcmp@plt>
   120b8:	subs	r7, r0, #0
   120bc:	bne	1209c <tabela_adiciona@@Base+0x58>
   120c0:	mov	r1, r8
   120c4:	add	r0, r5, #25
   120c8:	bl	10f3c <strcpy@plt>
   120cc:	mov	r0, r7
   120d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120d4:	mov	r0, #8
   120d8:	bl	10f54 <malloc@plt>
   120dc:	subs	r4, r0, #0
   120e0:	beq	12128 <tabela_adiciona@@Base+0xe4>
   120e4:	mov	r0, #125	; 0x7d
   120e8:	bl	10f54 <malloc@plt>
   120ec:	cmp	r0, #0
   120f0:	mov	r5, r0
   120f4:	str	r0, [r4]
   120f8:	beq	12128 <tabela_adiciona@@Base+0xe4>
   120fc:	mov	r1, r6
   12100:	bl	10f3c <strcpy@plt>
   12104:	mov	r1, r8
   12108:	add	r0, r5, #25
   1210c:	bl	10f3c <strcpy@plt>
   12110:	ldr	r3, [sl, r9, lsl #2]
   12114:	mov	r7, #0
   12118:	str	r3, [r4, #4]
   1211c:	mov	r0, r7
   12120:	str	r4, [sl, r9, lsl #2]
   12124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12128:	mvn	r7, #1
   1212c:	b	120cc <tabela_adiciona@@Base+0x88>

00012130 <tabela_remove@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12134:	subs	r4, r0, #0
   12138:	beq	121c4 <tabela_remove@@Base+0x94>
   1213c:	mov	r6, r1
   12140:	ldr	r3, [r4]
   12144:	ldr	r1, [r4, #8]
   12148:	mov	r0, r6
   1214c:	blx	r3
   12150:	ldr	sl, [r4, #4]
   12154:	ldr	r4, [sl, r0, lsl #2]
   12158:	mov	r9, r0
   1215c:	cmp	r4, #0
   12160:	beq	121b8 <tabela_remove@@Base+0x88>
   12164:	mov	r8, #0
   12168:	b	12178 <tabela_remove@@Base+0x48>
   1216c:	mov	r8, r4
   12170:	subs	r4, r3, #0
   12174:	beq	121b8 <tabela_remove@@Base+0x88>
   12178:	ldr	r5, [r4]
   1217c:	mov	r1, r6
   12180:	mov	r0, r5
   12184:	bl	10ee8 <strcmp@plt>
   12188:	ldr	r3, [r4, #4]
   1218c:	subs	r7, r0, #0
   12190:	bne	1216c <tabela_remove@@Base+0x3c>
   12194:	cmp	r8, #0
   12198:	strne	r3, [r8, #4]
   1219c:	streq	r3, [sl, r9, lsl #2]
   121a0:	mov	r0, r5
   121a4:	bl	10f18 <free@plt>
   121a8:	mov	r0, r4
   121ac:	bl	10f18 <free@plt>
   121b0:	mov	r0, r7
   121b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121b8:	mvn	r7, #2
   121bc:	mov	r0, r7
   121c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121c4:	mvn	r7, #1
   121c8:	b	121bc <tabela_remove@@Base+0x8c>

000121cc <tabela_valor@@Base>:
   121cc:	push	{r4, r5, r6, lr}
   121d0:	subs	r4, r0, #0
   121d4:	beq	1222c <tabela_valor@@Base+0x60>
   121d8:	mov	r6, r1
   121dc:	ldr	r3, [r4]
   121e0:	ldr	r1, [r4, #8]
   121e4:	mov	r0, r6
   121e8:	blx	r3
   121ec:	ldr	r3, [r4, #4]
   121f0:	ldr	r4, [r3, r0, lsl #2]
   121f4:	cmp	r4, #0
   121f8:	bne	1220c <tabela_valor@@Base+0x40>
   121fc:	b	1222c <tabela_valor@@Base+0x60>
   12200:	ldr	r4, [r4, #4]
   12204:	cmp	r4, #0
   12208:	beq	1222c <tabela_valor@@Base+0x60>
   1220c:	ldr	r5, [r4]
   12210:	mov	r1, r6
   12214:	mov	r0, r5
   12218:	bl	10ee8 <strcmp@plt>
   1221c:	cmp	r0, #0
   12220:	bne	12200 <tabela_valor@@Base+0x34>
   12224:	add	r0, r5, #25
   12228:	pop	{r4, r5, r6, pc}
   1222c:	mov	r0, #0
   12230:	pop	{r4, r5, r6, pc}

00012234 <tabela_existe@@Base>:
   12234:	cmp	r0, #0
   12238:	cmpne	r1, #0
   1223c:	beq	12258 <tabela_existe@@Base+0x24>
   12240:	push	{r4, lr}
   12244:	bl	121cc <tabela_valor@@Base>
   12248:	cmp	r0, #0
   1224c:	mvneq	r0, #2
   12250:	movne	r0, #1
   12254:	pop	{r4, pc}
   12258:	mvn	r0, #1
   1225c:	bx	lr

00012260 <tabela_esvazia@@Base>:
   12260:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12264:	subs	r8, r0, #0
   12268:	beq	122d4 <tabela_esvazia@@Base+0x74>
   1226c:	ldr	r1, [r8, #8]
   12270:	cmp	r1, #0
   12274:	ble	122cc <tabela_esvazia@@Base+0x6c>
   12278:	mov	r6, #0
   1227c:	ldr	r3, [r8, #4]
   12280:	mov	r9, r6
   12284:	ldr	r4, [r3, r6, lsl #2]
   12288:	lsl	r7, r6, #2
   1228c:	cmp	r4, #0
   12290:	add	r2, r3, r7
   12294:	beq	122bc <tabela_esvazia@@Base+0x5c>
   12298:	ldm	r4, {r0, r5}
   1229c:	bl	10f18 <free@plt>
   122a0:	mov	r0, r4
   122a4:	bl	10f18 <free@plt>
   122a8:	subs	r4, r5, #0
   122ac:	bne	12298 <tabela_esvazia@@Base+0x38>
   122b0:	ldr	r3, [r8, #4]
   122b4:	ldr	r1, [r8, #8]
   122b8:	add	r2, r3, r7
   122bc:	add	r6, r6, #1
   122c0:	cmp	r1, r6
   122c4:	str	r9, [r2]
   122c8:	bgt	12284 <tabela_esvazia@@Base+0x24>
   122cc:	mov	r0, #0
   122d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122d4:	mvn	r0, #1
   122d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000122dc <tabela_numelementos@@Base>:
   122dc:	cmp	r0, #0
   122e0:	beq	1232c <tabela_numelementos@@Base+0x50>
   122e4:	ldr	r1, [r0, #8]
   122e8:	cmp	r1, #0
   122ec:	ble	12324 <tabela_numelementos@@Base+0x48>
   122f0:	ldr	r2, [r0, #4]
   122f4:	mov	r0, #0
   122f8:	add	r1, r2, r1, lsl #2
   122fc:	ldr	r3, [r2], #4
   12300:	cmp	r3, #0
   12304:	beq	12318 <tabela_numelementos@@Base+0x3c>
   12308:	ldr	r3, [r3, #4]
   1230c:	add	r0, r0, #1
   12310:	cmp	r3, #0
   12314:	bne	12308 <tabela_numelementos@@Base+0x2c>
   12318:	cmp	r2, r1
   1231c:	bne	122fc <tabela_numelementos@@Base+0x20>
   12320:	bx	lr
   12324:	mov	r0, #0
   12328:	bx	lr
   1232c:	mvn	r0, #1
   12330:	bx	lr

00012334 <tabela_elementos@@Base>:
   12334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12338:	subs	r4, r0, #0
   1233c:	beq	12408 <tabela_elementos@@Base+0xd4>
   12340:	ldr	lr, [r4, #8]
   12344:	cmp	lr, #0
   12348:	ble	1241c <tabela_elementos@@Base+0xe8>
   1234c:	ldr	r7, [r4, #4]
   12350:	mov	r2, #0
   12354:	add	lr, r7, lr, lsl #2
   12358:	mov	r6, r7
   1235c:	mov	ip, r7
   12360:	ldr	r3, [ip], #4
   12364:	cmp	r3, #0
   12368:	beq	1237c <tabela_elementos@@Base+0x48>
   1236c:	ldr	r3, [r3, #4]
   12370:	add	r2, r2, #1
   12374:	cmp	r3, #0
   12378:	bne	1236c <tabela_elementos@@Base+0x38>
   1237c:	cmp	ip, lr
   12380:	bne	12360 <tabela_elementos@@Base+0x2c>
   12384:	cmp	r2, #0
   12388:	str	r2, [r1]
   1238c:	beq	1242c <tabela_elementos@@Base+0xf8>
   12390:	rsb	r0, r2, r2, lsl #5
   12394:	add	r0, r2, r0, lsl #2
   12398:	bl	10f54 <malloc@plt>
   1239c:	subs	r8, r0, #0
   123a0:	beq	1242c <tabela_elementos@@Base+0xf8>
   123a4:	ldr	r3, [r4, #8]
   123a8:	cmp	r3, #0
   123ac:	ble	12400 <tabela_elementos@@Base+0xcc>
   123b0:	add	r7, r7, r3, lsl #2
   123b4:	mov	r9, #0
   123b8:	mov	r5, #125	; 0x7d
   123bc:	ldr	r4, [r6], #4
   123c0:	cmp	r4, #0
   123c4:	beq	123f8 <tabela_elementos@@Base+0xc4>
   123c8:	rsb	r3, r9, r9, lsl #5
   123cc:	add	r3, r9, r3, lsl #2
   123d0:	add	r3, r8, r3
   123d4:	ldr	r1, [r4]
   123d8:	mov	r0, r3
   123dc:	mov	r2, r5
   123e0:	bl	10f24 <memcpy@plt>
   123e4:	ldr	r4, [r4, #4]
   123e8:	add	r9, r9, #1
   123ec:	cmp	r4, #0
   123f0:	add	r3, r0, #125	; 0x7d
   123f4:	bne	123d4 <tabela_elementos@@Base+0xa0>
   123f8:	cmp	r7, r6
   123fc:	bne	123bc <tabela_elementos@@Base+0x88>
   12400:	mov	r0, r8
   12404:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12408:	mvn	r3, #1
   1240c:	mov	r8, r4
   12410:	str	r3, [r1]
   12414:	mov	r0, r8
   12418:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1241c:	mov	r3, #0
   12420:	mov	r8, r3
   12424:	str	r3, [r1]
   12428:	b	12400 <tabela_elementos@@Base+0xcc>
   1242c:	mov	r8, #0
   12430:	b	12400 <tabela_elementos@@Base+0xcc>

00012434 <hash_krm@@Base>:
   12434:	push	{r4, lr}
   12438:	ldrb	r3, [r0]
   1243c:	cmp	r3, #0
   12440:	beq	12468 <hash_krm@@Base+0x34>
   12444:	mov	r2, r0
   12448:	mov	r0, #7
   1244c:	add	r0, r0, r3
   12450:	ldrb	r3, [r2, #1]!
   12454:	cmp	r3, #0
   12458:	bne	1244c <hash_krm@@Base+0x18>
   1245c:	bl	12788 <mostraTabela@@Base+0x2dc>
   12460:	mov	r0, r1
   12464:	pop	{r4, pc}
   12468:	mov	r0, #7
   1246c:	b	1245c <hash_krm@@Base+0x28>

00012470 <hash_djbm@@Base>:
   12470:	push	{r4, lr}
   12474:	ldrb	r2, [r0]
   12478:	ldr	r3, [pc, #40]	; 124a8 <hash_djbm@@Base+0x38>
   1247c:	cmp	r2, #0
   12480:	beq	12498 <hash_djbm@@Base+0x28>
   12484:	rsb	r3, r3, r3, lsl #5
   12488:	eor	r3, r3, r2
   1248c:	ldrb	r2, [r0, #1]!
   12490:	cmp	r2, #0
   12494:	bne	12484 <hash_djbm@@Base+0x14>
   12498:	mov	r0, r3
   1249c:	bl	12788 <mostraTabela@@Base+0x2dc>
   124a0:	mov	r0, r1
   124a4:	pop	{r4, pc}
   124a8:	andeq	r1, r0, r3, ror #9

000124ac <mostraTabela@@Base>:
   124ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124b0:	subs	r7, r0, #0
   124b4:	mvneq	r1, #1
   124b8:	beq	124f8 <mostraTabela@@Base+0x4c>
   124bc:	ldr	r0, [r7, #8]
   124c0:	cmp	r0, #0
   124c4:	ble	12588 <mostraTabela@@Base+0xdc>
   124c8:	ldr	r2, [r7, #4]
   124cc:	mov	r1, #0
   124d0:	add	r0, r2, r0, lsl #2
   124d4:	ldr	r3, [r2], #4
   124d8:	cmp	r3, #0
   124dc:	beq	124f0 <mostraTabela@@Base+0x44>
   124e0:	ldr	r3, [r3, #4]
   124e4:	add	r1, r1, #1
   124e8:	cmp	r3, #0
   124ec:	bne	124e0 <mostraTabela@@Base+0x34>
   124f0:	cmp	r0, r2
   124f4:	bne	124d4 <mostraTabela@@Base+0x28>
   124f8:	ldr	r0, [pc, #144]	; 12590 <mostraTabela@@Base+0xe4>
   124fc:	bl	10ef4 <printf@plt>
   12500:	ldr	r2, [r7, #8]
   12504:	cmp	r2, #0
   12508:	ble	1257c <mostraTabela@@Base+0xd0>
   1250c:	ldr	r9, [pc, #128]	; 12594 <mostraTabela@@Base+0xe8>
   12510:	ldr	r5, [pc, #128]	; 12598 <mostraTabela@@Base+0xec>
   12514:	mov	r6, #0
   12518:	mov	r8, #10
   1251c:	ldr	r3, [r7, #4]
   12520:	ldr	r3, [r3, r6, lsl #2]
   12524:	cmp	r3, #0
   12528:	beq	12570 <mostraTabela@@Base+0xc4>
   1252c:	mov	r1, r6
   12530:	mov	r0, r9
   12534:	bl	10ef4 <printf@plt>
   12538:	ldr	r3, [r7, #4]
   1253c:	ldr	r4, [r3, r6, lsl #2]
   12540:	cmp	r4, #0
   12544:	beq	12564 <mostraTabela@@Base+0xb8>
   12548:	ldr	r1, [r4]
   1254c:	mov	r0, r5
   12550:	add	r2, r1, #25
   12554:	bl	10ef4 <printf@plt>
   12558:	ldr	r4, [r4, #4]
   1255c:	cmp	r4, #0
   12560:	bne	12548 <mostraTabela@@Base+0x9c>
   12564:	mov	r0, r8
   12568:	bl	10f84 <putchar@plt>
   1256c:	ldr	r2, [r7, #8]
   12570:	add	r6, r6, #1
   12574:	cmp	r2, r6
   12578:	bgt	1251c <mostraTabela@@Base+0x70>
   1257c:	mov	r0, #10
   12580:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12584:	b	10f84 <putchar@plt>
   12588:	mov	r1, #0
   1258c:	b	124f8 <mostraTabela@@Base+0x4c>
   12590:	andeq	r2, r1, r4, asr #21
   12594:	andeq	r2, r1, r8, ror #21
   12598:	strdeq	r2, [r1], -r0
   1259c:	subs	r2, r1, #1
   125a0:	bxeq	lr
   125a4:	bcc	1277c <mostraTabela@@Base+0x2d0>
   125a8:	cmp	r0, r1
   125ac:	bls	12760 <mostraTabela@@Base+0x2b4>
   125b0:	tst	r1, r2
   125b4:	beq	1276c <mostraTabela@@Base+0x2c0>
   125b8:	clz	r3, r0
   125bc:	clz	r2, r1
   125c0:	sub	r3, r2, r3
   125c4:	rsbs	r3, r3, #31
   125c8:	addne	r3, r3, r3, lsl #1
   125cc:	mov	r2, #0
   125d0:	addne	pc, pc, r3, lsl #2
   125d4:	nop			; (mov r0, r0)
   125d8:	cmp	r0, r1, lsl #31
   125dc:	adc	r2, r2, r2
   125e0:	subcs	r0, r0, r1, lsl #31
   125e4:	cmp	r0, r1, lsl #30
   125e8:	adc	r2, r2, r2
   125ec:	subcs	r0, r0, r1, lsl #30
   125f0:	cmp	r0, r1, lsl #29
   125f4:	adc	r2, r2, r2
   125f8:	subcs	r0, r0, r1, lsl #29
   125fc:	cmp	r0, r1, lsl #28
   12600:	adc	r2, r2, r2
   12604:	subcs	r0, r0, r1, lsl #28
   12608:	cmp	r0, r1, lsl #27
   1260c:	adc	r2, r2, r2
   12610:	subcs	r0, r0, r1, lsl #27
   12614:	cmp	r0, r1, lsl #26
   12618:	adc	r2, r2, r2
   1261c:	subcs	r0, r0, r1, lsl #26
   12620:	cmp	r0, r1, lsl #25
   12624:	adc	r2, r2, r2
   12628:	subcs	r0, r0, r1, lsl #25
   1262c:	cmp	r0, r1, lsl #24
   12630:	adc	r2, r2, r2
   12634:	subcs	r0, r0, r1, lsl #24
   12638:	cmp	r0, r1, lsl #23
   1263c:	adc	r2, r2, r2
   12640:	subcs	r0, r0, r1, lsl #23
   12644:	cmp	r0, r1, lsl #22
   12648:	adc	r2, r2, r2
   1264c:	subcs	r0, r0, r1, lsl #22
   12650:	cmp	r0, r1, lsl #21
   12654:	adc	r2, r2, r2
   12658:	subcs	r0, r0, r1, lsl #21
   1265c:	cmp	r0, r1, lsl #20
   12660:	adc	r2, r2, r2
   12664:	subcs	r0, r0, r1, lsl #20
   12668:	cmp	r0, r1, lsl #19
   1266c:	adc	r2, r2, r2
   12670:	subcs	r0, r0, r1, lsl #19
   12674:	cmp	r0, r1, lsl #18
   12678:	adc	r2, r2, r2
   1267c:	subcs	r0, r0, r1, lsl #18
   12680:	cmp	r0, r1, lsl #17
   12684:	adc	r2, r2, r2
   12688:	subcs	r0, r0, r1, lsl #17
   1268c:	cmp	r0, r1, lsl #16
   12690:	adc	r2, r2, r2
   12694:	subcs	r0, r0, r1, lsl #16
   12698:	cmp	r0, r1, lsl #15
   1269c:	adc	r2, r2, r2
   126a0:	subcs	r0, r0, r1, lsl #15
   126a4:	cmp	r0, r1, lsl #14
   126a8:	adc	r2, r2, r2
   126ac:	subcs	r0, r0, r1, lsl #14
   126b0:	cmp	r0, r1, lsl #13
   126b4:	adc	r2, r2, r2
   126b8:	subcs	r0, r0, r1, lsl #13
   126bc:	cmp	r0, r1, lsl #12
   126c0:	adc	r2, r2, r2
   126c4:	subcs	r0, r0, r1, lsl #12
   126c8:	cmp	r0, r1, lsl #11
   126cc:	adc	r2, r2, r2
   126d0:	subcs	r0, r0, r1, lsl #11
   126d4:	cmp	r0, r1, lsl #10
   126d8:	adc	r2, r2, r2
   126dc:	subcs	r0, r0, r1, lsl #10
   126e0:	cmp	r0, r1, lsl #9
   126e4:	adc	r2, r2, r2
   126e8:	subcs	r0, r0, r1, lsl #9
   126ec:	cmp	r0, r1, lsl #8
   126f0:	adc	r2, r2, r2
   126f4:	subcs	r0, r0, r1, lsl #8
   126f8:	cmp	r0, r1, lsl #7
   126fc:	adc	r2, r2, r2
   12700:	subcs	r0, r0, r1, lsl #7
   12704:	cmp	r0, r1, lsl #6
   12708:	adc	r2, r2, r2
   1270c:	subcs	r0, r0, r1, lsl #6
   12710:	cmp	r0, r1, lsl #5
   12714:	adc	r2, r2, r2
   12718:	subcs	r0, r0, r1, lsl #5
   1271c:	cmp	r0, r1, lsl #4
   12720:	adc	r2, r2, r2
   12724:	subcs	r0, r0, r1, lsl #4
   12728:	cmp	r0, r1, lsl #3
   1272c:	adc	r2, r2, r2
   12730:	subcs	r0, r0, r1, lsl #3
   12734:	cmp	r0, r1, lsl #2
   12738:	adc	r2, r2, r2
   1273c:	subcs	r0, r0, r1, lsl #2
   12740:	cmp	r0, r1, lsl #1
   12744:	adc	r2, r2, r2
   12748:	subcs	r0, r0, r1, lsl #1
   1274c:	cmp	r0, r1
   12750:	adc	r2, r2, r2
   12754:	subcs	r0, r0, r1
   12758:	mov	r0, r2
   1275c:	bx	lr
   12760:	moveq	r0, #1
   12764:	movne	r0, #0
   12768:	bx	lr
   1276c:	clz	r2, r1
   12770:	rsb	r2, r2, #31
   12774:	lsr	r0, r0, r2
   12778:	bx	lr
   1277c:	cmp	r0, #0
   12780:	mvnne	r0, #0
   12784:	b	127a8 <mostraTabela@@Base+0x2fc>
   12788:	cmp	r1, #0
   1278c:	beq	1277c <mostraTabela@@Base+0x2d0>
   12790:	push	{r0, r1, lr}
   12794:	bl	1259c <mostraTabela@@Base+0xf0>
   12798:	pop	{r1, r2, lr}
   1279c:	mul	r3, r2, r0
   127a0:	sub	r1, r1, r3
   127a4:	bx	lr
   127a8:	push	{r1, lr}
   127ac:	mov	r0, #8
   127b0:	bl	10edc <raise@plt>
   127b4:	pop	{r1, pc}

000127b8 <__libc_csu_init@@Base>:
   127b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127bc:	mov	r7, r0
   127c0:	ldr	r6, [pc, #72]	; 12810 <__libc_csu_init@@Base+0x58>
   127c4:	ldr	r5, [pc, #72]	; 12814 <__libc_csu_init@@Base+0x5c>
   127c8:	add	r6, pc, r6
   127cc:	add	r5, pc, r5
   127d0:	sub	r6, r6, r5
   127d4:	mov	r8, r1
   127d8:	mov	r9, r2
   127dc:	bl	10eb0 <calloc@plt-0x20>
   127e0:	asrs	r6, r6, #2
   127e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   127e8:	mov	r4, #0
   127ec:	add	r4, r4, #1
   127f0:	ldr	r3, [r5], #4
   127f4:	mov	r2, r9
   127f8:	mov	r1, r8
   127fc:	mov	r0, r7
   12800:	blx	r3
   12804:	cmp	r6, r4
   12808:	bne	127ec <__libc_csu_init@@Base+0x34>
   1280c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12810:	andeq	r0, r1, r0, asr #14
   12814:	andeq	r0, r1, r8, lsr r7

00012818 <__libc_csu_fini@@Base>:
   12818:	bx	lr

Disassembly of section .fini:

0001281c <.fini>:
   1281c:	push	{r3, lr}
   12820:	pop	{r3, pc}
