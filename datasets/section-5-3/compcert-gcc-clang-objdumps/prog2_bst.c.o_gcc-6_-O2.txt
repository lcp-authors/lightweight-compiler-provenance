
../compcert-repos/prog2/CMakeFiles/7.1.dir/Aula07_Arvores/bst.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bst_nova>:
   0:	push	{r4, lr}
   4:	mov	r0, #4
   8:	bl	0 <malloc>
   c:	cmp	r0, #0
  10:	movne	r3, #0
  14:	strne	r3, [r0]
  18:	pop	{r4, pc}

0000001c <bst_min>:
  1c:	cmp	r0, #0
  20:	bxeq	lr
  24:	ldr	r2, [r0]
  28:	b	30 <bst_min+0x14>
  2c:	mov	r2, r3
  30:	ldr	r3, [r2, #4]
  34:	cmp	r3, #0
  38:	bne	2c <bst_min+0x10>
  3c:	ldr	r0, [r2]
  40:	bx	lr

00000044 <bst_max>:
  44:	cmp	r0, #0
  48:	bxeq	lr
  4c:	ldr	r2, [r0]
  50:	b	58 <bst_max+0x14>
  54:	mov	r2, r3
  58:	ldr	r3, [r2, #8]
  5c:	cmp	r3, #0
  60:	bne	54 <bst_max+0x10>
  64:	ldr	r0, [r2]
  68:	bx	lr

0000006c <bst_novo_no>:
  6c:	push	{r4, r5, r6, lr}
  70:	mov	r5, r0
  74:	mov	r0, #12
  78:	bl	0 <malloc>
  7c:	mov	r4, r0
  80:	mov	r0, r5
  84:	bl	0 <strlen>
  88:	add	r6, r0, #1
  8c:	mov	r0, r6
  90:	bl	0 <malloc>
  94:	mov	r2, r6
  98:	mov	r1, r5
  9c:	str	r0, [r4]
  a0:	bl	0 <memcpy>
  a4:	mov	r3, #0
  a8:	str	r3, [r4, #4]
  ac:	str	r3, [r4, #8]
  b0:	mov	r0, r4
  b4:	pop	{r4, r5, r6, pc}

000000b8 <bst_no_valormin>:
  b8:	b	c0 <bst_no_valormin+0x8>
  bc:	mov	r0, r3
  c0:	ldr	r3, [r0, #4]
  c4:	cmp	r3, #0
  c8:	bne	bc <bst_no_valormin+0x4>
  cc:	bx	lr

000000d0 <bst_no_valormax>:
  d0:	b	d8 <bst_no_valormax+0x8>
  d4:	mov	r0, r3
  d8:	ldr	r3, [r0, #8]
  dc:	cmp	r3, #0
  e0:	bne	d4 <bst_no_valormax+0x4>
  e4:	bx	lr

000000e8 <bst_pesquisa_impl>:
  e8:	push	{r4, r5, r6, lr}
  ec:	subs	r4, r0, #0
  f0:	beq	120 <bst_pesquisa_impl+0x38>
  f4:	mov	r5, r1
  f8:	ldr	r1, [r4]
  fc:	mov	r0, r5
 100:	bl	0 <strcmp>
 104:	cmp	r0, #0
 108:	ldrlt	r4, [r4, #4]
 10c:	blt	118 <bst_pesquisa_impl+0x30>
 110:	beq	120 <bst_pesquisa_impl+0x38>
 114:	ldr	r4, [r4, #8]
 118:	cmp	r4, #0
 11c:	bne	f8 <bst_pesquisa_impl+0x10>
 120:	mov	r0, r4
 124:	pop	{r4, r5, r6, pc}

00000128 <bst_pesquisa>:
 128:	cmp	r1, #0
 12c:	cmpne	r0, #0
 130:	beq	13c <bst_pesquisa+0x14>
 134:	ldr	r0, [r0]
 138:	b	e8 <bst_pesquisa_impl>
 13c:	mov	r0, #0
 140:	bx	lr

00000144 <bst_insere_impl>:
 144:	push	{r4, r5, r6, lr}
 148:	subs	r4, r0, #0
 14c:	beq	198 <bst_insere_impl+0x54>
 150:	mov	r5, r1
 154:	mov	r0, r5
 158:	ldr	r1, [r4]
 15c:	bl	0 <strcmp>
 160:	cmp	r0, #0
 164:	blt	184 <bst_insere_impl+0x40>
 168:	beq	17c <bst_insere_impl+0x38>
 16c:	mov	r1, r5
 170:	ldr	r0, [r4, #8]
 174:	bl	144 <bst_insere_impl>
 178:	str	r0, [r4, #8]
 17c:	mov	r0, r4
 180:	pop	{r4, r5, r6, pc}
 184:	mov	r1, r5
 188:	ldr	r0, [r4, #4]
 18c:	bl	144 <bst_insere_impl>
 190:	str	r0, [r4, #4]
 194:	b	17c <bst_insere_impl+0x38>
 198:	mov	r0, r1
 19c:	pop	{r4, r5, r6, lr}
 1a0:	b	6c <bst_novo_no>

000001a4 <bst_insere>:
 1a4:	cmp	r1, #0
 1a8:	cmpne	r0, #0
 1ac:	push	{r4, r5, r6, lr}
 1b0:	moveq	r5, #1
 1b4:	movne	r5, #0
 1b8:	beq	1d4 <bst_insere+0x30>
 1bc:	mov	r4, r0
 1c0:	ldr	r0, [r0]
 1c4:	bl	144 <bst_insere_impl>
 1c8:	str	r0, [r4]
 1cc:	mov	r0, r5
 1d0:	pop	{r4, r5, r6, pc}
 1d4:	mvn	r5, #0
 1d8:	b	1cc <bst_insere+0x28>

000001dc <bst_remove_impl>:
 1dc:	push	{r4, r5, r6, r7, r8, lr}
 1e0:	subs	r5, r0, #0
 1e4:	beq	2e8 <bst_remove_impl+0x10c>
 1e8:	ldr	r6, [r5]
 1ec:	mov	r0, r1
 1f0:	mov	r4, r1
 1f4:	mov	r1, r6
 1f8:	bl	0 <strcmp>
 1fc:	cmp	r0, #0
 200:	blt	2f4 <bst_remove_impl+0x118>
 204:	bne	270 <bst_remove_impl+0x94>
 208:	ldr	r8, [r5, #4]
 20c:	cmp	r8, #0
 210:	beq	28c <bst_remove_impl+0xb0>
 214:	ldr	r4, [r5, #8]
 218:	cmp	r4, #0
 21c:	bne	228 <bst_remove_impl+0x4c>
 220:	b	2a0 <bst_remove_impl+0xc4>
 224:	mov	r4, r3
 228:	ldr	r3, [r4, #4]
 22c:	cmp	r3, #0
 230:	bne	224 <bst_remove_impl+0x48>
 234:	ldr	r0, [r4]
 238:	bl	0 <strlen>
 23c:	mov	r7, r5
 240:	add	r1, r0, #1
 244:	mov	r0, r6
 248:	bl	0 <realloc>
 24c:	str	r0, [r5]
 250:	ldr	r1, [r4]
 254:	bl	0 <strcpy>
 258:	ldr	r1, [r4]
 25c:	ldr	r0, [r5, #8]
 260:	bl	1dc <bst_remove_impl>
 264:	str	r0, [r5, #8]
 268:	mov	r0, r7
 26c:	pop	{r4, r5, r6, r7, r8, pc}
 270:	mov	r1, r4
 274:	ldr	r0, [r5, #8]
 278:	bl	1dc <bst_remove_impl>
 27c:	mov	r7, r5
 280:	str	r0, [r5, #8]
 284:	mov	r0, r7
 288:	pop	{r4, r5, r6, r7, r8, pc}
 28c:	ldr	r7, [r5, #8]
 290:	cmp	r7, #0
 294:	moveq	r8, r5
 298:	beq	2d0 <bst_remove_impl+0xf4>
 29c:	mov	r8, r7
 2a0:	ldr	r0, [r8]
 2a4:	bl	0 <strlen>
 2a8:	mov	r7, r5
 2ac:	add	r1, r0, #1
 2b0:	mov	r0, r6
 2b4:	bl	0 <realloc>
 2b8:	str	r0, [r5]
 2bc:	ldr	r1, [r8]
 2c0:	bl	0 <strcpy>
 2c4:	ldmib	r8, {r2, r3}
 2c8:	ldr	r6, [r8]
 2cc:	stmib	r5, {r2, r3}
 2d0:	mov	r0, r6
 2d4:	bl	0 <free>
 2d8:	mov	r0, r8
 2dc:	bl	0 <free>
 2e0:	mov	r0, r7
 2e4:	pop	{r4, r5, r6, r7, r8, pc}
 2e8:	mov	r7, r5
 2ec:	mov	r0, r7
 2f0:	pop	{r4, r5, r6, r7, r8, pc}
 2f4:	mov	r1, r4
 2f8:	ldr	r0, [r5, #4]
 2fc:	bl	1dc <bst_remove_impl>
 300:	mov	r7, r5
 304:	str	r0, [r5, #4]
 308:	b	268 <bst_remove_impl+0x8c>

0000030c <bst_apaga>:
 30c:	push	{r4, lr}
 310:	mov	r4, r0
 314:	ldr	r0, [r0]
 318:	cmp	r0, #0
 31c:	beq	334 <bst_apaga+0x28>
 320:	ldr	r1, [r0]
 324:	bl	1dc <bst_remove_impl>
 328:	cmp	r0, #0
 32c:	str	r0, [r4]
 330:	bne	320 <bst_apaga+0x14>
 334:	mov	r0, r4
 338:	pop	{r4, lr}
 33c:	b	0 <free>

00000340 <bst_remove>:
 340:	cmp	r1, #0
 344:	cmpne	r0, #0
 348:	push	{r4, r5, r6, lr}
 34c:	moveq	r5, #1
 350:	movne	r5, #0
 354:	beq	370 <bst_remove+0x30>
 358:	mov	r4, r0
 35c:	ldr	r0, [r0]
 360:	bl	1dc <bst_remove_impl>
 364:	str	r0, [r4]
 368:	mov	r0, r5
 36c:	pop	{r4, r5, r6, pc}
 370:	mvn	r5, #0
 374:	b	368 <bst_remove+0x28>

00000378 <bst_altura>:
 378:	push	{r4, r5, r6, r7, r8, lr}
 37c:	subs	r4, r0, #0
 380:	beq	3e0 <bst_altura+0x68>
 384:	mov	r5, #1
 388:	b	3b8 <bst_altura+0x40>
 38c:	mov	r0, r4
 390:	bl	378 <bst_altura>
 394:	mov	r7, r0
 398:	mov	r0, r6
 39c:	bl	378 <bst_altura>
 3a0:	mov	r3, r5
 3a4:	add	r5, r5, #1
 3a8:	cmp	r7, r0
 3ac:	movle	r4, r6
 3b0:	cmp	r4, #0
 3b4:	beq	3d8 <bst_altura+0x60>
 3b8:	ldr	r6, [r4, #8]
 3bc:	sub	r0, r5, #1
 3c0:	cmp	r6, #0
 3c4:	ldr	r4, [r4, #4]
 3c8:	bne	38c <bst_altura+0x14>
 3cc:	cmp	r4, #0
 3d0:	bne	38c <bst_altura+0x14>
 3d4:	pop	{r4, r5, r6, r7, r8, pc}
 3d8:	sub	r0, r3, #1
 3dc:	pop	{r4, r5, r6, r7, r8, pc}
 3e0:	mvn	r0, #0
 3e4:	pop	{r4, r5, r6, r7, r8, pc}

000003e8 <bst_preordem_impl>:
 3e8:	push	{r4, r5, r6, lr}
 3ec:	subs	r4, r0, #0
 3f0:	popeq	{r4, r5, r6, pc}
 3f4:	ldr	r5, [pc, #32]	; 41c <bst_preordem_impl+0x34>
 3f8:	ldr	r1, [r4]
 3fc:	mov	r0, r5
 400:	bl	0 <printf>
 404:	ldr	r0, [r4, #4]
 408:	bl	3e8 <bst_preordem_impl>
 40c:	ldr	r4, [r4, #8]
 410:	cmp	r4, #0
 414:	bne	3f8 <bst_preordem_impl+0x10>
 418:	pop	{r4, r5, r6, pc}
 41c:	.word	0x00000000

00000420 <bst_imprime>:
 420:	push	{r4, lr}
 424:	subs	r4, r0, #0
 428:	popeq	{r4, pc}
 42c:	ldr	r0, [pc, #20]	; 448 <bst_imprime+0x28>
 430:	bl	0 <printf>
 434:	ldr	r0, [r4]
 438:	bl	3e8 <bst_preordem_impl>
 43c:	mov	r0, #10
 440:	pop	{r4, lr}
 444:	b	0 <putchar>
 448:	.word	0x00000004
