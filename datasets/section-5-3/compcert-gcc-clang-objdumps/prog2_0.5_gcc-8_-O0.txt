
../compcert-repos/prog2/0.5:     file format elf32-littlearm


Disassembly of section .init:

000105e4 <.init>:
   105e4:	push	{r3, lr}
   105e8:	bl	106a0 <_start@@Base+0x3c>
   105ec:	pop	{r3, pc}

Disassembly of section .plt:

000105f0 <strcmp@plt-0x14>:
   105f0:	push	{lr}		; (str lr, [sp, #-4]!)
   105f4:	ldr	lr, [pc, #4]	; 10600 <strcmp@plt-0x4>
   105f8:	add	lr, pc, lr
   105fc:	ldr	pc, [lr, #8]!
   10600:	andeq	r0, r1, r0, lsl #20

00010604 <strcmp@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #16, 20	; 0x10000
   1060c:	ldr	pc, [ip, #2560]!	; 0xa00

00010610 <printf@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #16, 20	; 0x10000
   10618:	ldr	pc, [ip, #2552]!	; 0x9f8

0001061c <__libc_start_main@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #16, 20	; 0x10000
   10624:	ldr	pc, [ip, #2544]!	; 0x9f0

00010628 <__gmon_start__@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2536]!	; 0x9e8

00010634 <strlen@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2528]!	; 0x9e0

00010640 <memset@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2520]!	; 0x9d8

0001064c <__isoc99_scanf@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2512]!	; 0x9d0

00010658 <abort@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #16, 20	; 0x10000
   10660:	ldr	pc, [ip, #2504]!	; 0x9c8

Disassembly of section .text:

00010664 <_start@@Base>:
   10664:	mov	fp, #0
   10668:	mov	lr, #0
   1066c:	pop	{r1}		; (ldr r1, [sp], #4)
   10670:	mov	r2, sp
   10674:	push	{r2}		; (str r2, [sp, #-4]!)
   10678:	push	{r0}		; (str r0, [sp, #-4]!)
   1067c:	ldr	ip, [pc, #16]	; 10694 <_start@@Base+0x30>
   10680:	push	{ip}		; (str ip, [sp, #-4]!)
   10684:	ldr	r0, [pc, #12]	; 10698 <_start@@Base+0x34>
   10688:	ldr	r3, [pc, #12]	; 1069c <_start@@Base+0x38>
   1068c:	bl	1061c <__libc_start_main@plt>
   10690:	bl	10658 <abort@plt>
   10694:	andeq	r0, r1, ip, lsr r9
   10698:	andeq	r0, r1, r4, ror #15
   1069c:	ldrdeq	r0, [r1], -ip
   106a0:	ldr	r3, [pc, #20]	; 106bc <_start@@Base+0x58>
   106a4:	ldr	r2, [pc, #20]	; 106c0 <_start@@Base+0x5c>
   106a8:	add	r3, pc, r3
   106ac:	ldr	r2, [r3, r2]
   106b0:	cmp	r2, #0
   106b4:	bxeq	lr
   106b8:	b	10628 <__gmon_start__@plt>
   106bc:	andeq	r0, r1, r0, asr r9
   106c0:	andeq	r0, r0, ip, lsr #32
   106c4:	ldr	r0, [pc, #24]	; 106e4 <_start@@Base+0x80>
   106c8:	ldr	r3, [pc, #24]	; 106e8 <_start@@Base+0x84>
   106cc:	cmp	r3, r0
   106d0:	bxeq	lr
   106d4:	ldr	r3, [pc, #16]	; 106ec <_start@@Base+0x88>
   106d8:	cmp	r3, #0
   106dc:	bxeq	lr
   106e0:	bx	r3
   106e4:	andeq	r1, r2, r8, lsr r0
   106e8:	andeq	r1, r2, r8, lsr r0
   106ec:	andeq	r0, r0, r0
   106f0:	ldr	r0, [pc, #36]	; 1071c <_start@@Base+0xb8>
   106f4:	ldr	r1, [pc, #36]	; 10720 <_start@@Base+0xbc>
   106f8:	sub	r1, r1, r0
   106fc:	asr	r1, r1, #2
   10700:	add	r1, r1, r1, lsr #31
   10704:	asrs	r1, r1, #1
   10708:	bxeq	lr
   1070c:	ldr	r3, [pc, #16]	; 10724 <_start@@Base+0xc0>
   10710:	cmp	r3, #0
   10714:	bxeq	lr
   10718:	bx	r3
   1071c:	andeq	r1, r2, r8, lsr r0
   10720:	andeq	r1, r2, r8, lsr r0
   10724:	andeq	r0, r0, r0
   10728:	push	{r4, lr}
   1072c:	ldr	r4, [pc, #24]	; 1074c <_start@@Base+0xe8>
   10730:	ldrb	r3, [r4]
   10734:	cmp	r3, #0
   10738:	popne	{r4, pc}
   1073c:	bl	106c4 <_start@@Base+0x60>
   10740:	mov	r3, #1
   10744:	strb	r3, [r4]
   10748:	pop	{r4, pc}
   1074c:	andeq	r1, r2, r8, lsr r0
   10750:	b	106f0 <_start@@Base+0x8c>

00010754 <inverte@@Base>:
   10754:	str	fp, [sp, #-8]!
   10758:	str	lr, [sp, #4]
   1075c:	add	fp, sp, #4
   10760:	sub	sp, sp, #16
   10764:	str	r0, [fp, #-16]
   10768:	str	r1, [fp, #-20]	; 0xffffffec
   1076c:	mov	r3, #0
   10770:	str	r3, [fp, #-8]
   10774:	b	107b8 <inverte@@Base+0x64>
   10778:	ldr	r0, [fp, #-16]
   1077c:	bl	10634 <strlen@plt>
   10780:	mov	r2, r0
   10784:	ldr	r3, [fp, #-8]
   10788:	sub	r3, r2, r3
   1078c:	sub	r3, r3, #1
   10790:	ldr	r2, [fp, #-16]
   10794:	add	r2, r2, r3
   10798:	ldr	r3, [fp, #-8]
   1079c:	ldr	r1, [fp, #-20]	; 0xffffffec
   107a0:	add	r3, r1, r3
   107a4:	ldrb	r2, [r2]
   107a8:	strb	r2, [r3]
   107ac:	ldr	r3, [fp, #-8]
   107b0:	add	r3, r3, #1
   107b4:	str	r3, [fp, #-8]
   107b8:	ldr	r0, [fp, #-16]
   107bc:	bl	10634 <strlen@plt>
   107c0:	mov	r2, r0
   107c4:	ldr	r3, [fp, #-8]
   107c8:	cmp	r2, r3
   107cc:	bhi	10778 <inverte@@Base+0x24>
   107d0:	nop	{0}
   107d4:	sub	sp, fp, #4
   107d8:	ldr	fp, [sp]
   107dc:	add	sp, sp, #4
   107e0:	pop	{pc}		; (ldr pc, [sp], #4)

000107e4 <main@@Base>:
   107e4:	str	fp, [sp, #-8]!
   107e8:	str	lr, [sp, #4]
   107ec:	add	fp, sp, #4
   107f0:	sub	sp, sp, #200	; 0xc8
   107f4:	sub	r3, fp, #104	; 0x68
   107f8:	mov	r2, #100	; 0x64
   107fc:	mov	r1, #0
   10800:	mov	r0, r3
   10804:	bl	10640 <memset@plt>
   10808:	sub	r3, fp, #204	; 0xcc
   1080c:	mov	r2, #100	; 0x64
   10810:	mov	r1, #0
   10814:	mov	r0, r3
   10818:	bl	10640 <memset@plt>
   1081c:	movw	r0, #2380	; 0x94c
   10820:	movt	r0, #1
   10824:	bl	10610 <printf@plt>
   10828:	sub	r3, fp, #104	; 0x68
   1082c:	mov	r1, r3
   10830:	movw	r0, #2392	; 0x958
   10834:	movt	r0, #1
   10838:	bl	1064c <__isoc99_scanf@plt>
   1083c:	sub	r3, fp, #104	; 0x68
   10840:	movw	r1, #2396	; 0x95c
   10844:	movt	r1, #1
   10848:	mov	r0, r3
   1084c:	bl	10604 <strcmp@plt>
   10850:	mov	r3, r0
   10854:	cmp	r3, #0
   10858:	bne	10864 <main@@Base+0x80>
   1085c:	mov	r3, #0
   10860:	b	108c8 <main@@Base+0xe4>
   10864:	sub	r2, fp, #204	; 0xcc
   10868:	sub	r3, fp, #104	; 0x68
   1086c:	mov	r1, r2
   10870:	mov	r0, r3
   10874:	bl	10754 <inverte@@Base>
   10878:	sub	r2, fp, #204	; 0xcc
   1087c:	sub	r3, fp, #104	; 0x68
   10880:	mov	r1, r2
   10884:	mov	r0, r3
   10888:	bl	10604 <strcmp@plt>
   1088c:	mov	r3, r0
   10890:	cmp	r3, #0
   10894:	bne	108b0 <main@@Base+0xcc>
   10898:	sub	r3, fp, #104	; 0x68
   1089c:	mov	r1, r3
   108a0:	movw	r0, #2400	; 0x960
   108a4:	movt	r0, #1
   108a8:	bl	10610 <printf@plt>
   108ac:	b	1081c <main@@Base+0x38>
   108b0:	sub	r3, fp, #104	; 0x68
   108b4:	mov	r1, r3
   108b8:	movw	r0, #2428	; 0x97c
   108bc:	movt	r0, #1
   108c0:	bl	10610 <printf@plt>
   108c4:	b	1081c <main@@Base+0x38>
   108c8:	mov	r0, r3
   108cc:	sub	sp, fp, #4
   108d0:	ldr	fp, [sp]
   108d4:	add	sp, sp, #4
   108d8:	pop	{pc}		; (ldr pc, [sp], #4)

000108dc <__libc_csu_init@@Base>:
   108dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108e0:	mov	r7, r0
   108e4:	ldr	r6, [pc, #72]	; 10934 <__libc_csu_init@@Base+0x58>
   108e8:	ldr	r5, [pc, #72]	; 10938 <__libc_csu_init@@Base+0x5c>
   108ec:	add	r6, pc, r6
   108f0:	add	r5, pc, r5
   108f4:	sub	r6, r6, r5
   108f8:	mov	r8, r1
   108fc:	mov	r9, r2
   10900:	bl	105e4 <strcmp@plt-0x20>
   10904:	asrs	r6, r6, #2
   10908:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1090c:	mov	r4, #0
   10910:	add	r4, r4, #1
   10914:	ldr	r3, [r5], #4
   10918:	mov	r2, r9
   1091c:	mov	r1, r8
   10920:	mov	r0, r7
   10924:	blx	r3
   10928:	cmp	r6, r4
   1092c:	bne	10910 <__libc_csu_init@@Base+0x34>
   10930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10934:	andeq	r0, r1, r0, lsr #12
   10938:	andeq	r0, r1, r8, lsl r6

0001093c <__libc_csu_fini@@Base>:
   1093c:	bx	lr

Disassembly of section .fini:

00010940 <.fini>:
   10940:	push	{r3, lr}
   10944:	pop	{r3, pc}
