
../repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ff_printf>:
   0:	mov	ip, sp
   4:	push	{r0, r1, r2, r3}
   8:	sub	sp, sp, #16
   c:	str	ip, [sp]
  10:	str	lr, [sp, #4]
  14:	add	r1, sp, #8
  18:	add	lr, sp, #20
  1c:	str	lr, [r1]
  20:	ldr	r2, [pc, #32]	; 48 <ff_printf+0x48>
  24:	ldr	r1, [r2]
  28:	ldr	r2, [sp, #8]
  2c:	mov	r3, r0
  30:	mov	r0, r1
  34:	mov	r1, r3
  38:	bl	0 <vfprintf>
  3c:	ldr	lr, [sp, #4]
  40:	add	sp, sp, #32
  44:	bx	lr
  48:	.word	0x00000000

0000004c <print_escaped>:
  4c:	mov	ip, sp
  50:	sub	sp, sp, #24
  54:	str	ip, [sp]
  58:	str	lr, [sp, #4]
  5c:	str	r4, [sp, #8]
  60:	str	r5, [sp, #12]
  64:	str	r6, [sp, #16]
  68:	mov	r4, r1
  6c:	mov	r5, r0
  70:	mov	r6, #0
  74:	cmp	r6, r4
  78:	bge	164 <print_escaped+0x118>
  7c:	ldrb	r1, [r5, r6]
  80:	and	r1, r1, #255	; 0xff
  84:	cmp	r1, #12
  88:	bcs	c8 <print_escaped+0x7c>
  8c:	cmp	r1, #8
  90:	beq	bc <print_escaped+0x70>
  94:	cmp	r1, #9
  98:	beq	b0 <print_escaped+0x64>
  9c:	cmp	r1, #10
  a0:	bne	114 <print_escaped+0xc8>
  a4:	ldr	r0, [pc, #208]	; 17c <print_escaped+0x130>
  a8:	bl	0 <ff_printf>
  ac:	b	15c <print_escaped+0x110>
  b0:	ldr	r0, [pc, #200]	; 180 <print_escaped+0x134>
  b4:	bl	0 <ff_printf>
  b8:	b	15c <print_escaped+0x110>
  bc:	ldr	r0, [pc, #196]	; 188 <print_escaped+0x13c>
  c0:	bl	0 <ff_printf>
  c4:	b	15c <print_escaped+0x110>
  c8:	cmp	r1, #34	; 0x22
  cc:	bcs	f8 <print_escaped+0xac>
  d0:	cmp	r1, #12
  d4:	beq	ec <print_escaped+0xa0>
  d8:	cmp	r1, #13
  dc:	bne	114 <print_escaped+0xc8>
  e0:	ldr	r0, [pc, #156]	; 184 <print_escaped+0x138>
  e4:	bl	0 <ff_printf>
  e8:	b	15c <print_escaped+0x110>
  ec:	ldr	r0, [pc, #152]	; 18c <print_escaped+0x140>
  f0:	bl	0 <ff_printf>
  f4:	b	15c <print_escaped+0x110>
  f8:	cmp	r1, #34	; 0x22
  fc:	beq	154 <print_escaped+0x108>
 100:	cmp	r1, #92	; 0x5c
 104:	bne	114 <print_escaped+0xc8>
 108:	ldr	r0, [pc, #140]	; 19c <print_escaped+0x150>
 10c:	bl	0 <ff_printf>
 110:	b	15c <print_escaped+0x110>
 114:	cmp	r1, #32
 118:	bge	124 <print_escaped+0xd8>
 11c:	mov	r0, #0
 120:	b	130 <print_escaped+0xe4>
 124:	cmp	r1, #126	; 0x7e
 128:	movle	r0, #1
 12c:	movgt	r0, #0
 130:	cmp	r0, #0
 134:	bne	148 <print_escaped+0xfc>
 138:	ldr	r0, [pc, #84]	; 194 <print_escaped+0x148>
 13c:	and	r1, r1, #255	; 0xff
 140:	bl	0 <ff_printf>
 144:	b	15c <print_escaped+0x110>
 148:	ldr	r0, [pc, #72]	; 198 <print_escaped+0x14c>
 14c:	bl	0 <ff_printf>
 150:	b	15c <print_escaped+0x110>
 154:	ldr	r0, [pc, #52]	; 190 <print_escaped+0x144>
 158:	bl	0 <ff_printf>
 15c:	add	r6, r6, #1
 160:	b	74 <print_escaped+0x28>
 164:	ldr	r4, [sp, #8]
 168:	ldr	r5, [sp, #12]
 16c:	ldr	r6, [sp, #16]
 170:	ldr	lr, [sp, #4]
 174:	add	sp, sp, #24
 178:	bx	lr
 17c:	.word	0x000000ce
 180:	.word	0x00000030
 184:	.word	0x00000033
 188:	.word	0x00000010
 18c:	.word	0x00000036
 190:	.word	0x0000004b
 194:	.word	0x00000044
 198:	.word	0x00000019
 19c:	.word	0x0000000d

000001a0 <print_data>:
 1a0:	mov	ip, sp
 1a4:	sub	sp, sp, #272	; 0x110
 1a8:	str	ip, [sp, #8]
 1ac:	str	lr, [sp, #12]
 1b0:	str	r4, [sp, #16]
 1b4:	str	r5, [sp, #20]
 1b8:	str	r6, [sp, #24]
 1bc:	mov	r4, r0
 1c0:	mov	r2, #0
 1c4:	str	r2, [sp, #48]	; 0x30
 1c8:	ldr	ip, [pc, #2096]	; a00 <print_data+0x860>
 1cc:	ldr	r0, [ip]
 1d0:	cmp	r0, #0
 1d4:	beq	230 <print_data+0x90>
 1d8:	add	r1, sp, #48	; 0x30
 1dc:	mov	r0, r4
 1e0:	bl	0 <coda_cursor_has_attributes>
 1e4:	cmp	r0, #0
 1e8:	beq	1f0 <print_data+0x50>
 1ec:	bl	0 <handle_coda_error>
 1f0:	ldr	r1, [sp, #48]	; 0x30
 1f4:	cmp	r1, #0
 1f8:	beq	230 <print_data+0x90>
 1fc:	ldr	r0, [pc, #2060]	; a10 <print_data+0x870>
 200:	bl	0 <ff_printf>
 204:	mov	r0, r4
 208:	bl	0 <coda_cursor_goto_attributes>
 20c:	cmp	r0, #0
 210:	beq	218 <print_data+0x78>
 214:	bl	0 <handle_coda_error>
 218:	mov	r0, r4
 21c:	bl	1a0 <print_data>
 220:	mov	r0, r4
 224:	bl	0 <coda_cursor_goto_parent>
 228:	ldr	r0, [pc, #1980]	; 9ec <print_data+0x84c>
 22c:	bl	0 <ff_printf>
 230:	add	r1, sp, #44	; 0x2c
 234:	mov	r0, r4
 238:	bl	0 <coda_cursor_get_type_class>
 23c:	cmp	r0, #0
 240:	beq	248 <print_data+0xa8>
 244:	bl	0 <handle_coda_error>
 248:	ldr	r0, [sp, #44]	; 0x2c
 24c:	cmp	r0, #7
 250:	bcs	9a0 <print_data+0x800>
 254:	add	pc, pc, r0, lsl #2
 258:	nop	{0}
 25c:	b	278 <print_data+0xd8>
 260:	b	438 <print_data+0x298>
 264:	b	504 <print_data+0x364>
 268:	b	504 <print_data+0x364>
 26c:	b	504 <print_data+0x364>
 270:	b	504 <print_data+0x364>
 274:	b	864 <print_data+0x6c4>
 278:	ldr	r0, [pc, #1884]	; 9dc <print_data+0x83c>
 27c:	bl	0 <ff_printf>
 280:	add	r1, sp, #52	; 0x34
 284:	mov	r0, r4
 288:	bl	0 <coda_cursor_get_num_elements>
 28c:	cmp	r0, #0
 290:	beq	298 <print_data+0xf8>
 294:	bl	0 <handle_coda_error>
 298:	ldr	r0, [sp, #52]	; 0x34
 29c:	cmp	r0, #0
 2a0:	ble	42c <print_data+0x28c>
 2a4:	add	r1, sp, #56	; 0x38
 2a8:	mov	r0, r4
 2ac:	bl	0 <coda_cursor_get_type>
 2b0:	cmp	r0, #0
 2b4:	beq	2bc <print_data+0x11c>
 2b8:	bl	0 <handle_coda_error>
 2bc:	ldr	r0, [sp, #56]	; 0x38
 2c0:	add	r1, sp, #60	; 0x3c
 2c4:	bl	0 <coda_type_get_record_union_status>
 2c8:	cmp	r0, #0
 2cc:	beq	2d4 <print_data+0x134>
 2d0:	bl	0 <handle_coda_error>
 2d4:	ldr	r1, [sp, #60]	; 0x3c
 2d8:	cmp	r1, #0
 2dc:	bne	3c4 <print_data+0x224>
 2e0:	mov	r5, #1
 2e4:	mov	r0, r4
 2e8:	bl	0 <coda_cursor_goto_first_record_field>
 2ec:	cmp	r0, #0
 2f0:	beq	2f8 <print_data+0x158>
 2f4:	bl	0 <handle_coda_error>
 2f8:	mov	r3, #0
 2fc:	str	r3, [sp, #64]	; 0x40
 300:	ldr	r2, [sp, #64]	; 0x40
 304:	ldr	r0, [sp, #52]	; 0x34
 308:	cmp	r2, r0
 30c:	bge	3b8 <print_data+0x218>
 310:	ldr	r0, [sp, #56]	; 0x38
 314:	ldr	r1, [sp, #64]	; 0x40
 318:	add	r2, sp, #76	; 0x4c
 31c:	bl	0 <coda_type_get_record_field_hidden_status>
 320:	cmp	r0, #0
 324:	beq	32c <print_data+0x18c>
 328:	bl	0 <handle_coda_error>
 32c:	ldr	r2, [sp, #76]	; 0x4c
 330:	cmp	r2, #0
 334:	bne	380 <print_data+0x1e0>
 338:	cmp	r5, #0
 33c:	bne	34c <print_data+0x1ac>
 340:	ldr	r0, [pc, #1668]	; 9cc <print_data+0x82c>
 344:	bl	0 <ff_printf>
 348:	b	350 <print_data+0x1b0>
 34c:	mov	r5, #0
 350:	ldr	r0, [sp, #56]	; 0x38
 354:	ldr	r1, [sp, #64]	; 0x40
 358:	add	r2, sp, #72	; 0x48
 35c:	bl	0 <coda_type_get_record_field_name>
 360:	cmp	r0, #0
 364:	beq	36c <print_data+0x1cc>
 368:	bl	0 <handle_coda_error>
 36c:	ldr	r0, [pc, #1632]	; 9d4 <print_data+0x834>
 370:	ldr	r1, [sp, #72]	; 0x48
 374:	bl	0 <ff_printf>
 378:	mov	r0, r4
 37c:	bl	1a0 <print_data>
 380:	ldr	r2, [sp, #64]	; 0x40
 384:	ldr	ip, [sp, #52]	; 0x34
 388:	sub	ip, ip, #1
 38c:	cmp	r2, ip
 390:	bge	3a8 <print_data+0x208>
 394:	mov	r0, r4
 398:	bl	0 <coda_cursor_goto_next_record_field>
 39c:	cmp	r0, #0
 3a0:	beq	3a8 <print_data+0x208>
 3a4:	bl	0 <handle_coda_error>
 3a8:	ldr	r1, [sp, #64]	; 0x40
 3ac:	add	r0, r1, #1
 3b0:	str	r0, [sp, #64]	; 0x40
 3b4:	b	300 <print_data+0x160>
 3b8:	mov	r0, r4
 3bc:	bl	0 <coda_cursor_goto_parent>
 3c0:	b	42c <print_data+0x28c>
 3c4:	add	r1, sp, #64	; 0x40
 3c8:	mov	r0, r4
 3cc:	bl	0 <coda_cursor_get_available_union_field_index>
 3d0:	cmp	r0, #0
 3d4:	beq	3dc <print_data+0x23c>
 3d8:	bl	0 <handle_coda_error>
 3dc:	ldr	r0, [sp, #56]	; 0x38
 3e0:	ldr	r1, [sp, #64]	; 0x40
 3e4:	add	r2, sp, #68	; 0x44
 3e8:	bl	0 <coda_type_get_record_field_name>
 3ec:	cmp	r0, #0
 3f0:	beq	3f8 <print_data+0x258>
 3f4:	bl	0 <handle_coda_error>
 3f8:	ldr	r1, [sp, #64]	; 0x40
 3fc:	mov	r0, r4
 400:	bl	0 <coda_cursor_goto_record_field_by_index>
 404:	cmp	r0, #0
 408:	beq	410 <print_data+0x270>
 40c:	bl	0 <handle_coda_error>
 410:	ldr	r0, [pc, #1468]	; 9d4 <print_data+0x834>
 414:	ldr	r1, [sp, #68]	; 0x44
 418:	bl	0 <ff_printf>
 41c:	mov	r0, r4
 420:	bl	1a0 <print_data>
 424:	mov	r0, r4
 428:	bl	0 <coda_cursor_goto_parent>
 42c:	ldr	r0, [pc, #1508]	; a18 <print_data+0x878>
 430:	bl	0 <ff_printf>
 434:	b	9a0 <print_data+0x800>
 438:	ldr	r0, [pc, #1456]	; 9f0 <print_data+0x850>
 43c:	bl	0 <ff_printf>
 440:	add	r1, sp, #80	; 0x50
 444:	add	r2, sp, #240	; 0xf0
 448:	mov	r0, r4
 44c:	bl	0 <coda_cursor_get_array_dim>
 450:	cmp	r0, #0
 454:	beq	45c <print_data+0x2bc>
 458:	bl	0 <handle_coda_error>
 45c:	ldr	r0, [sp, #80]	; 0x50
 460:	cmp	r0, #0
 464:	blt	4f8 <print_data+0x358>
 468:	mov	r6, #1
 46c:	mov	ip, #0
 470:	ldr	r3, [sp, #80]	; 0x50
 474:	cmp	ip, r3
 478:	bge	490 <print_data+0x2f0>
 47c:	add	r0, sp, #240	; 0xf0
 480:	ldr	r1, [r0, ip, lsl #2]
 484:	mul	r6, r6, r1
 488:	add	ip, ip, #1
 48c:	b	470 <print_data+0x2d0>
 490:	cmp	r6, #0
 494:	ble	4f8 <print_data+0x358>
 498:	mov	r0, r4
 49c:	bl	0 <coda_cursor_goto_first_array_element>
 4a0:	cmp	r0, #0
 4a4:	beq	4ac <print_data+0x30c>
 4a8:	bl	0 <handle_coda_error>
 4ac:	mov	r5, #0
 4b0:	cmp	r5, r6
 4b4:	bge	4f0 <print_data+0x350>
 4b8:	mov	r0, r4
 4bc:	bl	1a0 <print_data>
 4c0:	sub	ip, r6, #1
 4c4:	cmp	r5, ip
 4c8:	bge	4e8 <print_data+0x348>
 4cc:	ldr	r0, [pc, #1272]	; 9cc <print_data+0x82c>
 4d0:	bl	0 <ff_printf>
 4d4:	mov	r0, r4
 4d8:	bl	0 <coda_cursor_goto_next_array_element>
 4dc:	cmp	r0, #0
 4e0:	beq	4e8 <print_data+0x348>
 4e4:	bl	0 <handle_coda_error>
 4e8:	add	r5, r5, #1
 4ec:	b	4b0 <print_data+0x310>
 4f0:	mov	r0, r4
 4f4:	bl	0 <coda_cursor_goto_parent>
 4f8:	ldr	r0, [pc, #1256]	; 9e8 <print_data+0x848>
 4fc:	bl	0 <ff_printf>
 500:	b	9a0 <print_data+0x800>
 504:	add	r1, sp, #84	; 0x54
 508:	mov	r0, r4
 50c:	bl	0 <coda_cursor_get_read_type>
 510:	cmp	r0, #0
 514:	beq	51c <print_data+0x37c>
 518:	bl	0 <handle_coda_error>
 51c:	ldr	r3, [sp, #84]	; 0x54
 520:	cmp	r3, #7
 524:	bcs	5e4 <print_data+0x444>
 528:	cmp	r3, #3
 52c:	bcs	544 <print_data+0x3a4>
 530:	cmp	r3, #0
 534:	beq	554 <print_data+0x3b4>
 538:	cmp	r3, #1
 53c:	beq	584 <print_data+0x3e4>
 540:	b	554 <print_data+0x3b4>
 544:	cmp	r3, #5
 548:	bcs	57c <print_data+0x3dc>
 54c:	cmp	r3, #3
 550:	beq	584 <print_data+0x3e4>
 554:	add	r1, sp, #92	; 0x5c
 558:	mov	r0, r4
 55c:	bl	0 <coda_cursor_read_int32>
 560:	cmp	r0, #0
 564:	beq	56c <print_data+0x3cc>
 568:	bl	0 <handle_coda_error>
 56c:	ldr	r0, [pc, #1152]	; 9f4 <print_data+0x854>
 570:	ldr	r1, [sp, #92]	; 0x5c
 574:	bl	0 <ff_printf>
 578:	b	9a0 <print_data+0x800>
 57c:	cmp	r3, #5
 580:	bne	5ac <print_data+0x40c>
 584:	add	r1, sp, #36	; 0x24
 588:	mov	r0, r4
 58c:	bl	0 <coda_cursor_read_uint32>
 590:	cmp	r0, #0
 594:	beq	59c <print_data+0x3fc>
 598:	bl	0 <handle_coda_error>
 59c:	ldr	r0, [pc, #1148]	; a20 <print_data+0x880>
 5a0:	ldr	r1, [sp, #36]	; 0x24
 5a4:	bl	0 <ff_printf>
 5a8:	b	9a0 <print_data+0x800>
 5ac:	add	r1, sp, #120	; 0x78
 5b0:	mov	r0, r4
 5b4:	bl	0 <coda_cursor_read_int64>
 5b8:	cmp	r0, #0
 5bc:	beq	5c4 <print_data+0x424>
 5c0:	bl	0 <handle_coda_error>
 5c4:	ldr	r0, [sp, #120]	; 0x78
 5c8:	ldr	r1, [sp, #124]	; 0x7c
 5cc:	add	r2, sp, #160	; 0xa0
 5d0:	bl	0 <coda_str64>
 5d4:	ldr	r0, [pc, #1068]	; a08 <print_data+0x868>
 5d8:	add	r1, sp, #160	; 0xa0
 5dc:	bl	0 <ff_printf>
 5e0:	b	9a0 <print_data+0x800>
 5e4:	cmp	r3, #10
 5e8:	bcs	678 <print_data+0x4d8>
 5ec:	cmp	r3, #7
 5f0:	beq	640 <print_data+0x4a0>
 5f4:	add	r1, sp, #136	; 0x88
 5f8:	mov	r0, r4
 5fc:	bl	0 <coda_cursor_read_double>
 600:	cmp	r0, #0
 604:	beq	60c <print_data+0x46c>
 608:	bl	0 <handle_coda_error>
 60c:	ldr	r0, [sp, #84]	; 0x54
 610:	cmp	r0, #8
 614:	beq	62c <print_data+0x48c>
 618:	ldr	r0, [pc, #984]	; 9f8 <print_data+0x858>
 61c:	vldr	d2, [sp, #136]	; 0x88
 620:	vmov	r2, r3, d2
 624:	bl	0 <ff_printf>
 628:	b	9a0 <print_data+0x800>
 62c:	ldr	r0, [pc, #940]	; 9e0 <print_data+0x840>
 630:	vldr	d2, [sp, #136]	; 0x88
 634:	vmov	r2, r3, d2
 638:	bl	0 <ff_printf>
 63c:	b	9a0 <print_data+0x800>
 640:	add	r1, sp, #128	; 0x80
 644:	mov	r0, r4
 648:	bl	0 <coda_cursor_read_uint64>
 64c:	cmp	r0, #0
 650:	beq	658 <print_data+0x4b8>
 654:	bl	0 <handle_coda_error>
 658:	ldr	r0, [sp, #128]	; 0x80
 65c:	ldr	r1, [sp, #132]	; 0x84
 660:	add	r2, sp, #184	; 0xb8
 664:	bl	0 <coda_str64u>
 668:	ldr	r0, [pc, #920]	; a08 <print_data+0x868>
 66c:	add	r1, sp, #184	; 0xb8
 670:	bl	0 <ff_printf>
 674:	b	9a0 <print_data+0x800>
 678:	cmp	r3, #12
 67c:	bcs	760 <print_data+0x5c0>
 680:	cmp	r3, #10
 684:	bne	6c0 <print_data+0x520>
 688:	add	r1, sp, #32
 68c:	mov	r0, r4
 690:	bl	0 <coda_cursor_read_char>
 694:	cmp	r0, #0
 698:	beq	6a0 <print_data+0x500>
 69c:	bl	0 <handle_coda_error>
 6a0:	ldr	r0, [pc, #828]	; 9e4 <print_data+0x844>
 6a4:	bl	0 <ff_printf>
 6a8:	add	r0, sp, #32
 6ac:	mov	r1, #1
 6b0:	bl	4c <print_escaped>
 6b4:	ldr	r0, [pc, #808]	; 9e4 <print_data+0x844>
 6b8:	bl	0 <ff_printf>
 6bc:	b	9a0 <print_data+0x800>
 6c0:	add	r1, sp, #88	; 0x58
 6c4:	mov	r0, r4
 6c8:	bl	0 <coda_cursor_get_string_length>
 6cc:	cmp	r0, #0
 6d0:	beq	6d8 <print_data+0x538>
 6d4:	bl	0 <handle_coda_error>
 6d8:	ldr	r1, [sp, #88]	; 0x58
 6dc:	add	r0, r1, #1
 6e0:	bl	0 <malloc>
 6e4:	mov	r5, r0
 6e8:	cmp	r5, #0
 6ec:	bne	714 <print_data+0x574>
 6f0:	mvn	r0, #0
 6f4:	ldr	r1, [pc, #776]	; a04 <print_data+0x864>
 6f8:	ldr	ip, [sp, #88]	; 0x58
 6fc:	add	r2, ip, #1
 700:	ldr	r3, [pc, #720]	; 9d8 <print_data+0x838>
 704:	movw	r6, #303	; 0x12f
 708:	str	r6, [sp]
 70c:	bl	0 <coda_set_error>
 710:	bl	0 <handle_coda_error>
 714:	ldr	r2, [sp, #88]	; 0x58
 718:	add	r2, r2, #1
 71c:	mov	r1, r5
 720:	mov	r0, r4
 724:	bl	0 <coda_cursor_read_string>
 728:	cmp	r0, #0
 72c:	beq	734 <print_data+0x594>
 730:	bl	0 <handle_coda_error>
 734:	ldr	r0, [pc, #680]	; 9e4 <print_data+0x844>
 738:	bl	0 <ff_printf>
 73c:	ldr	r1, [sp, #88]	; 0x58
 740:	mov	r0, r5
 744:	bl	4c <print_escaped>
 748:	ldr	r0, [pc, #660]	; 9e4 <print_data+0x844>
 74c:	ldr	r1, [sp, #88]	; 0x58
 750:	bl	0 <ff_printf>
 754:	mov	r0, r5
 758:	bl	0 <free>
 75c:	b	9a0 <print_data+0x800>
 760:	cmp	r3, #12
 764:	beq	77c <print_data+0x5dc>
 768:	cmn	r3, #1
 76c:	bne	9a0 <print_data+0x800>
 770:	ldr	r0, [pc, #660]	; a0c <print_data+0x86c>
 774:	bl	0 <ff_printf>
 778:	b	9a0 <print_data+0x800>
 77c:	add	r1, sp, #152	; 0x98
 780:	mov	r0, r4
 784:	bl	0 <coda_cursor_get_bit_size>
 788:	cmp	r0, #0
 78c:	beq	794 <print_data+0x5f4>
 790:	bl	0 <handle_coda_error>
 794:	ldr	ip, [sp, #152]	; 0x98
 798:	mov	r1, #0
 79c:	and	r0, ip, #7
 7a0:	orr	r0, r1, r0
 7a4:	cmp	r0, #0
 7a8:	bne	7b4 <print_data+0x614>
 7ac:	mov	r2, #0
 7b0:	b	7b8 <print_data+0x618>
 7b4:	mov	r2, #1
 7b8:	ldr	r3, [sp, #152]	; 0x98
 7bc:	ldr	r1, [sp, #156]	; 0x9c
 7c0:	asr	r0, r1, #3
 7c4:	lsr	r3, r3, #3
 7c8:	orr	ip, r3, r1, lsl #29
 7cc:	asr	r3, r2, #31
 7d0:	adds	r6, ip, r2
 7d4:	adc	r1, r0, r3
 7d8:	mov	r0, r6
 7dc:	bl	0 <malloc>
 7e0:	mov	r5, r0
 7e4:	cmp	r5, #0
 7e8:	bne	80c <print_data+0x66c>
 7ec:	mvn	r0, #0
 7f0:	ldr	r1, [pc, #524]	; a04 <print_data+0x864>
 7f4:	mov	r2, r6
 7f8:	ldr	r3, [pc, #472]	; 9d8 <print_data+0x838>
 7fc:	movw	ip, #334	; 0x14e
 800:	str	ip, [sp]
 804:	bl	0 <coda_set_error>
 808:	bl	0 <handle_coda_error>
 80c:	mov	r3, #0
 810:	mov	r2, #0
 814:	ldr	r0, [sp, #152]	; 0x98
 818:	ldr	r1, [sp, #156]	; 0x9c
 81c:	str	r1, [sp, #4]
 820:	str	r0, [sp]
 824:	mov	r1, r5
 828:	mov	r0, r4
 82c:	bl	0 <coda_cursor_read_bits>
 830:	cmp	r0, #0
 834:	beq	83c <print_data+0x69c>
 838:	bl	0 <handle_coda_error>
 83c:	ldr	r0, [pc, #416]	; 9e4 <print_data+0x844>
 840:	bl	0 <ff_printf>
 844:	mov	r1, r6
 848:	mov	r0, r5
 84c:	bl	4c <print_escaped>
 850:	ldr	r0, [pc, #396]	; 9e4 <print_data+0x844>
 854:	bl	0 <ff_printf>
 858:	mov	r0, r5
 85c:	bl	0 <free>
 860:	b	9a0 <print_data+0x800>
 864:	add	r1, sp, #40	; 0x28
 868:	mov	r0, r4
 86c:	bl	0 <coda_cursor_get_special_type>
 870:	cmp	r0, #0
 874:	beq	87c <print_data+0x6dc>
 878:	bl	0 <handle_coda_error>
 87c:	ldr	ip, [sp, #40]	; 0x28
 880:	cmp	ip, #2
 884:	bcs	8c8 <print_data+0x728>
 888:	cmp	ip, #0
 88c:	bne	89c <print_data+0x6fc>
 890:	ldr	r0, [pc, #372]	; a0c <print_data+0x86c>
 894:	bl	0 <ff_printf>
 898:	b	9a0 <print_data+0x800>
 89c:	add	r1, sp, #144	; 0x90
 8a0:	mov	r0, r4
 8a4:	bl	0 <coda_cursor_read_double>
 8a8:	cmp	r0, #0
 8ac:	beq	8b4 <print_data+0x714>
 8b0:	bl	0 <handle_coda_error>
 8b4:	ldr	r0, [pc, #316]	; 9f8 <print_data+0x858>
 8b8:	vldr	d2, [sp, #144]	; 0x90
 8bc:	vmov	r2, r3, d2
 8c0:	bl	0 <ff_printf>
 8c4:	b	9a0 <print_data+0x800>
 8c8:	cmp	ip, #2
 8cc:	beq	910 <print_data+0x770>
 8d0:	cmp	ip, #3
 8d4:	bne	9a0 <print_data+0x800>
 8d8:	add	r1, sp, #104	; 0x68
 8dc:	add	r2, sp, #112	; 0x70
 8e0:	mov	r0, r4
 8e4:	bl	0 <coda_cursor_read_complex_double_split>
 8e8:	cmp	r0, #0
 8ec:	beq	8f4 <print_data+0x754>
 8f0:	bl	0 <handle_coda_error>
 8f4:	ldr	r0, [pc, #280]	; a14 <print_data+0x874>
 8f8:	vldr	d2, [sp, #104]	; 0x68
 8fc:	vldr	d3, [sp, #112]	; 0x70
 900:	vstr	d3, [sp]
 904:	vmov	r2, r3, d2
 908:	bl	0 <ff_printf>
 90c:	b	9a0 <print_data+0x800>
 910:	add	r1, sp, #96	; 0x60
 914:	mov	r0, r4
 918:	bl	0 <coda_cursor_read_double>
 91c:	cmp	r0, #0
 920:	beq	928 <print_data+0x788>
 924:	bl	0 <handle_coda_error>
 928:	vldr	d0, [sp, #96]	; 0x60
 92c:	bl	0 <coda_isNaN>
 930:	cmp	r0, #0
 934:	bne	950 <print_data+0x7b0>
 938:	vldr	d0, [sp, #96]	; 0x60
 93c:	bl	0 <coda_isInf>
 940:	cmp	r0, #0
 944:	movne	r0, #1
 948:	moveq	r0, #0
 94c:	b	954 <print_data+0x7b4>
 950:	mov	r0, #1
 954:	cmp	r0, #0
 958:	bne	990 <print_data+0x7f0>
 95c:	vldr	d0, [sp, #96]	; 0x60
 960:	ldr	r0, [pc, #148]	; 9fc <print_data+0x85c>
 964:	add	r1, sp, #208	; 0xd0
 968:	bl	0 <coda_time_double_to_string>
 96c:	cmp	r0, #0
 970:	bne	984 <print_data+0x7e4>
 974:	ldr	r0, [pc, #84]	; 9d0 <print_data+0x830>
 978:	add	r1, sp, #208	; 0xd0
 97c:	bl	0 <ff_printf>
 980:	b	9a0 <print_data+0x800>
 984:	ldr	r0, [pc, #144]	; a1c <print_data+0x87c>
 988:	bl	0 <ff_printf>
 98c:	b	9a0 <print_data+0x800>
 990:	ldr	r0, [pc, #96]	; 9f8 <print_data+0x858>
 994:	vldr	d2, [sp, #96]	; 0x60
 998:	vmov	r2, r3, d2
 99c:	bl	0 <ff_printf>
 9a0:	ldr	r0, [sp, #48]	; 0x30
 9a4:	cmp	r0, #0
 9a8:	beq	9b4 <print_data+0x814>
 9ac:	ldr	r0, [pc, #100]	; a18 <print_data+0x878>
 9b0:	bl	0 <ff_printf>
 9b4:	ldr	r4, [sp, #16]
 9b8:	ldr	r5, [sp, #20]
 9bc:	ldr	r6, [sp, #24]
 9c0:	ldr	lr, [sp, #12]
 9c4:	add	sp, sp, #272	; 0x110
 9c8:	bx	lr
 9cc:	.word	0x000000db
 9d0:	.word	0x000000d6
 9d4:	.word	0x00000007
 9d8:	.word	0x000000dd
 9dc:	.word	0x00000015
 9e0:	.word	0x000000d1
 9e4:	.word	0x00000013
 9e8:	.word	0x00000017
 9ec:	.word	0x00000039
 9f0:	.word	0x00000071
 9f4:	.word	0x00000095
 9f8:	.word	0x0000006b
 9fc:	.word	0x00000078
 a00:	.word	0x00000000
 a04:	.word	0x00000099
 a08:	.word	0x00000000
 a0c:	.word	0x00000073
 a10:	.word	0x00000027
 a14:	.word	0x0000001c
 a18:	.word	0x00000042
 a1c:	.word	0x00000050
 a20:	.word	0x00000003

00000a24 <print_json_data>:
 a24:	mov	ip, sp
 a28:	sub	sp, sp, #544	; 0x220
 a2c:	str	ip, [sp]
 a30:	str	lr, [sp, #4]
 a34:	str	r4, [sp, #8]
 a38:	ldr	r3, [pc, #240]	; b30 <print_json_data+0x10c>
 a3c:	str	r0, [r3]
 a40:	ldr	r0, [pc, #228]	; b2c <print_json_data+0x108>
 a44:	ldr	r0, [r0]
 a48:	add	r1, sp, #16
 a4c:	bl	0 <coda_open>
 a50:	mov	r4, r0
 a54:	cmp	r4, #0
 a58:	beq	a74 <print_json_data+0x50>
 a5c:	bl	0 <coda_get_errno>
 a60:	ldr	r2, [r0]
 a64:	cmn	r2, #21
 a68:	moveq	r0, #1
 a6c:	movne	r0, #0
 a70:	b	a78 <print_json_data+0x54>
 a74:	mov	r0, #0
 a78:	cmp	r0, #0
 a7c:	beq	aa4 <print_json_data+0x80>
 a80:	mov	r0, #0
 a84:	bl	0 <coda_set_option_use_mmap>
 a88:	ldr	r0, [pc, #156]	; b2c <print_json_data+0x108>
 a8c:	ldr	r0, [r0]
 a90:	add	r1, sp, #16
 a94:	bl	0 <coda_open>
 a98:	mov	r4, r0
 a9c:	mov	r0, #1
 aa0:	bl	0 <coda_set_option_use_mmap>
 aa4:	cmp	r4, #0
 aa8:	beq	ab0 <print_json_data+0x8c>
 aac:	bl	0 <handle_coda_error>
 ab0:	add	r0, sp, #24
 ab4:	ldr	r1, [sp, #16]
 ab8:	bl	0 <coda_cursor_set_product>
 abc:	cmp	r0, #0
 ac0:	beq	ac8 <print_json_data+0xa4>
 ac4:	bl	0 <handle_coda_error>
 ac8:	ldr	r0, [pc, #88]	; b28 <print_json_data+0x104>
 acc:	ldr	r0, [r0]
 ad0:	cmp	r0, #0
 ad4:	beq	af4 <print_json_data+0xd0>
 ad8:	add	r0, sp, #24
 adc:	ldr	r1, [pc, #68]	; b28 <print_json_data+0x104>
 ae0:	ldr	r1, [r1]
 ae4:	bl	0 <coda_cursor_goto>
 ae8:	cmp	r0, #0
 aec:	beq	af4 <print_json_data+0xd0>
 af0:	bl	0 <handle_coda_error>
 af4:	mov	r0, #0
 af8:	bl	0 <coda_set_option_perform_boundary_checks>
 afc:	add	r0, sp, #24
 b00:	bl	1a0 <print_data>
 b04:	ldr	r0, [pc, #24]	; b24 <print_json_data+0x100>
 b08:	bl	0 <ff_printf>
 b0c:	ldr	r0, [sp, #16]
 b10:	bl	0 <coda_close>
 b14:	ldr	r4, [sp, #8]
 b18:	ldr	lr, [sp, #4]
 b1c:	add	sp, sp, #544	; 0x220
 b20:	bx	lr
 b24:	.word	0x0000004e
	...
