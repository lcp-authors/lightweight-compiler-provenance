
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/coerce.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_coerce_scalar_type>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #136	; 0x88
   c:	str	r0, [fp, #-8]
  10:	str	r1, [fp, #-12]
  14:	str	r2, [fp, #-16]
  18:	str	r3, [fp, #-20]	; 0xffffffec
  1c:	ldr	r0, [fp, #-20]	; 0xffffffec
  20:	ldrsh	r0, [r0, #8]
  24:	cmp	r0, #0
  28:	bne	38 <__flatcc_fb_coerce_scalar_type+0x38>
  2c:	movw	r0, #0
  30:	str	r0, [fp, #-4]
  34:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
  38:	ldr	r0, [fp, #-20]	; 0xffffffec
  3c:	ldrh	r0, [r0, #8]
  40:	cmp	r0, #4
  44:	bne	68 <__flatcc_fb_coerce_scalar_type+0x68>
  48:	ldr	r0, [fp, #-20]	; 0xffffffec
  4c:	ldr	r0, [r0, #4]
  50:	cmp	r0, #0
  54:	blt	68 <__flatcc_fb_coerce_scalar_type+0x68>
  58:	b	5c <__flatcc_fb_coerce_scalar_type+0x5c>
  5c:	ldr	r0, [fp, #-20]	; 0xffffffec
  60:	mov	r1, #5
  64:	strh	r1, [r0, #8]
  68:	ldr	r0, [fp, #-20]	; 0xffffffec
  6c:	ldrh	r0, [r0, #8]
  70:	cmp	r0, #1
  74:	bne	84 <__flatcc_fb_coerce_scalar_type+0x84>
  78:	movw	r0, #0
  7c:	str	r0, [fp, #-4]
  80:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
  84:	ldr	r0, [fp, #-20]	; 0xffffffec
  88:	ldrh	r0, [r0, #8]
  8c:	cmp	r0, #6
  90:	bne	134 <__flatcc_fb_coerce_scalar_type+0x134>
  94:	ldr	r0, [fp, #-16]
  98:	cmp	r0, #5
  9c:	beq	134 <__flatcc_fb_coerce_scalar_type+0x134>
  a0:	ldr	r0, [fp, #-8]
  a4:	ldr	r0, [r0, #144]	; 0x90
  a8:	cmp	r0, #0
  ac:	beq	134 <__flatcc_fb_coerce_scalar_type+0x134>
  b0:	ldr	r0, [fp, #-20]	; 0xffffffec
  b4:	mov	r1, #5
  b8:	strh	r1, [r0, #8]
  bc:	ldr	r0, [fp, #-20]	; 0xffffffec
  c0:	ldrb	r1, [r0]
  c4:	mov	r2, #0
  c8:	str	r2, [r0, #4]
  cc:	str	r1, [r0]
  d0:	ldr	r0, [fp, #-20]	; 0xffffffec
  d4:	ldr	r1, [r0]
  d8:	ldr	r0, [r0, #4]
  dc:	eor	r1, r1, #1
  e0:	orr	r0, r1, r0
  e4:	cmp	r0, #0
  e8:	beq	10c <__flatcc_fb_coerce_scalar_type+0x10c>
  ec:	b	f0 <__flatcc_fb_coerce_scalar_type+0xf0>
  f0:	ldr	r0, [fp, #-20]	; 0xffffffec
  f4:	ldr	r1, [r0]
  f8:	ldr	r0, [r0, #4]
  fc:	orr	r0, r1, r0
 100:	cmp	r0, #0
 104:	bne	110 <__flatcc_fb_coerce_scalar_type+0x110>
 108:	b	10c <__flatcc_fb_coerce_scalar_type+0x10c>
 10c:	b	130 <__flatcc_fb_coerce_scalar_type+0x130>
 110:	movw	r0, #0
 114:	movt	r0, #0
 118:	movw	r1, #0
 11c:	movt	r1, #0
 120:	movw	r2, #52	; 0x34
 124:	movw	r3, #0
 128:	movt	r3, #0
 12c:	bl	0 <__assert_fail>
 130:	b	134 <__flatcc_fb_coerce_scalar_type+0x134>
 134:	ldr	r0, [fp, #-16]
 138:	sub	r0, r0, #1
 13c:	cmp	r0, #10
 140:	str	r0, [fp, #-40]	; 0xffffffd8
 144:	bhi	ba4 <__flatcc_fb_coerce_scalar_type+0xba4>
 148:	add	r0, pc, #8
 14c:	ldr	r1, [fp, #-40]	; 0xffffffd8
 150:	ldr	r0, [r0, r1, lsl #2]
 154:	mov	pc, r0
 158:	.word	0x00000184
 15c:	.word	0x000001cc
 160:	.word	0x00000254
 164:	.word	0x000002ec
 168:	.word	0x0000077c
 16c:	.word	0x00000384
 170:	.word	0x00000434
 174:	.word	0x0000054c
 178:	.word	0x00000664
 17c:	.word	0x0000083c
 180:	.word	0x000009f4
 184:	ldr	r0, [fp, #-20]	; 0xffffffec
 188:	ldrh	r0, [r0, #8]
 18c:	cmp	r0, #5
 190:	beq	1c0 <__flatcc_fb_coerce_scalar_type+0x1c0>
 194:	ldr	r0, [fp, #-8]
 198:	ldr	r1, [fp, #-12]
 19c:	movw	r2, #0
 1a0:	movt	r2, #0
 1a4:	bl	bd8 <error_sym>
 1a8:	ldr	r0, [fp, #-20]	; 0xffffffec
 1ac:	movw	r1, #1
 1b0:	strh	r1, [r0, #8]
 1b4:	mvn	r0, #0
 1b8:	str	r0, [fp, #-4]
 1bc:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 1c0:	movw	r0, #0
 1c4:	str	r0, [fp, #-4]
 1c8:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 1cc:	ldr	r0, [fp, #-20]	; 0xffffffec
 1d0:	ldrh	r0, [r0, #8]
 1d4:	cmp	r0, #5
 1d8:	beq	208 <__flatcc_fb_coerce_scalar_type+0x208>
 1dc:	ldr	r0, [fp, #-8]
 1e0:	ldr	r1, [fp, #-12]
 1e4:	movw	r2, #0
 1e8:	movt	r2, #0
 1ec:	bl	bd8 <error_sym>
 1f0:	ldr	r0, [fp, #-20]	; 0xffffffec
 1f4:	movw	r1, #1
 1f8:	strh	r1, [r0, #8]
 1fc:	mvn	r0, #0
 200:	str	r0, [fp, #-4]
 204:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 208:	ldr	r0, [fp, #-20]	; 0xffffffec
 20c:	ldr	r0, [r0, #4]
 210:	cmp	r0, #0
 214:	beq	248 <__flatcc_fb_coerce_scalar_type+0x248>
 218:	b	21c <__flatcc_fb_coerce_scalar_type+0x21c>
 21c:	ldr	r0, [fp, #-8]
 220:	ldr	r1, [fp, #-12]
 224:	movw	r2, #0
 228:	movt	r2, #0
 22c:	bl	bd8 <error_sym>
 230:	ldr	r0, [fp, #-20]	; 0xffffffec
 234:	movw	r1, #1
 238:	strh	r1, [r0, #8]
 23c:	mvn	r0, #0
 240:	str	r0, [fp, #-4]
 244:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 248:	movw	r0, #0
 24c:	str	r0, [fp, #-4]
 250:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 254:	ldr	r0, [fp, #-20]	; 0xffffffec
 258:	ldrh	r0, [r0, #8]
 25c:	cmp	r0, #5
 260:	beq	290 <__flatcc_fb_coerce_scalar_type+0x290>
 264:	ldr	r0, [fp, #-8]
 268:	ldr	r1, [fp, #-12]
 26c:	movw	r2, #0
 270:	movt	r2, #0
 274:	bl	bd8 <error_sym>
 278:	ldr	r0, [fp, #-20]	; 0xffffffec
 27c:	movw	r1, #1
 280:	strh	r1, [r0, #8]
 284:	mvn	r0, #0
 288:	str	r0, [fp, #-4]
 28c:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 290:	ldr	r0, [fp, #-20]	; 0xffffffec
 294:	ldr	r1, [r0]
 298:	ldr	r0, [r0, #4]
 29c:	subs	r1, r1, #65536	; 0x10000
 2a0:	sbcs	r0, r0, #0
 2a4:	str	r1, [fp, #-44]	; 0xffffffd4
 2a8:	str	r0, [fp, #-48]	; 0xffffffd0
 2ac:	bcc	2e0 <__flatcc_fb_coerce_scalar_type+0x2e0>
 2b0:	b	2b4 <__flatcc_fb_coerce_scalar_type+0x2b4>
 2b4:	ldr	r0, [fp, #-8]
 2b8:	ldr	r1, [fp, #-12]
 2bc:	movw	r2, #0
 2c0:	movt	r2, #0
 2c4:	bl	bd8 <error_sym>
 2c8:	ldr	r0, [fp, #-20]	; 0xffffffec
 2cc:	movw	r1, #1
 2d0:	strh	r1, [r0, #8]
 2d4:	mvn	r0, #0
 2d8:	str	r0, [fp, #-4]
 2dc:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 2e0:	movw	r0, #0
 2e4:	str	r0, [fp, #-4]
 2e8:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
 2f0:	ldrh	r0, [r0, #8]
 2f4:	cmp	r0, #5
 2f8:	beq	328 <__flatcc_fb_coerce_scalar_type+0x328>
 2fc:	ldr	r0, [fp, #-8]
 300:	ldr	r1, [fp, #-12]
 304:	movw	r2, #0
 308:	movt	r2, #0
 30c:	bl	bd8 <error_sym>
 310:	ldr	r0, [fp, #-20]	; 0xffffffec
 314:	movw	r1, #1
 318:	strh	r1, [r0, #8]
 31c:	mvn	r0, #0
 320:	str	r0, [fp, #-4]
 324:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 328:	ldr	r0, [fp, #-20]	; 0xffffffec
 32c:	ldr	r1, [r0]
 330:	ldr	r0, [r0, #4]
 334:	subs	r1, r1, #256	; 0x100
 338:	sbcs	r0, r0, #0
 33c:	str	r1, [fp, #-52]	; 0xffffffcc
 340:	str	r0, [fp, #-56]	; 0xffffffc8
 344:	bcc	378 <__flatcc_fb_coerce_scalar_type+0x378>
 348:	b	34c <__flatcc_fb_coerce_scalar_type+0x34c>
 34c:	ldr	r0, [fp, #-8]
 350:	ldr	r1, [fp, #-12]
 354:	movw	r2, #0
 358:	movt	r2, #0
 35c:	bl	bd8 <error_sym>
 360:	ldr	r0, [fp, #-20]	; 0xffffffec
 364:	movw	r1, #1
 368:	strh	r1, [r0, #8]
 36c:	mvn	r0, #0
 370:	str	r0, [fp, #-4]
 374:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 378:	movw	r0, #0
 37c:	str	r0, [fp, #-4]
 380:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 384:	ldr	r0, [fp, #-20]	; 0xffffffec
 388:	ldrh	r0, [r0, #8]
 38c:	cmp	r0, #4
 390:	bne	3a0 <__flatcc_fb_coerce_scalar_type+0x3a0>
 394:	movw	r0, #0
 398:	str	r0, [fp, #-4]
 39c:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 3a0:	ldr	r0, [fp, #-20]	; 0xffffffec
 3a4:	ldrh	r0, [r0, #8]
 3a8:	cmp	r0, #5
 3ac:	bne	408 <__flatcc_fb_coerce_scalar_type+0x408>
 3b0:	ldr	r0, [fp, #-20]	; 0xffffffec
 3b4:	ldr	r0, [r0, #4]
 3b8:	cmn	r0, #1
 3bc:	bgt	3f0 <__flatcc_fb_coerce_scalar_type+0x3f0>
 3c0:	b	3c4 <__flatcc_fb_coerce_scalar_type+0x3c4>
 3c4:	ldr	r0, [fp, #-8]
 3c8:	ldr	r1, [fp, #-12]
 3cc:	movw	r2, #0
 3d0:	movt	r2, #0
 3d4:	bl	bd8 <error_sym>
 3d8:	ldr	r0, [fp, #-20]	; 0xffffffec
 3dc:	movw	r1, #1
 3e0:	strh	r1, [r0, #8]
 3e4:	mvn	r0, #0
 3e8:	str	r0, [fp, #-4]
 3ec:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 3f0:	ldr	r0, [fp, #-20]	; 0xffffffec
 3f4:	movw	r1, #4
 3f8:	strh	r1, [r0, #8]
 3fc:	movw	r0, #0
 400:	str	r0, [fp, #-4]
 404:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 408:	ldr	r0, [fp, #-8]
 40c:	ldr	r1, [fp, #-12]
 410:	movw	r2, #0
 414:	movt	r2, #0
 418:	bl	bd8 <error_sym>
 41c:	ldr	r0, [fp, #-20]	; 0xffffffec
 420:	movw	r1, #1
 424:	strh	r1, [r0, #8]
 428:	mvn	r0, #0
 42c:	str	r0, [fp, #-4]
 430:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 434:	ldr	r0, [fp, #-20]	; 0xffffffec
 438:	ldrh	r0, [r0, #8]
 43c:	cmp	r0, #4
 440:	bne	4a8 <__flatcc_fb_coerce_scalar_type+0x4a8>
 444:	ldr	r0, [fp, #-20]	; 0xffffffec
 448:	ldr	r1, [r0]
 44c:	ldr	r0, [r0, #4]
 450:	mvn	r2, #-2147483648	; 0x80000000
 454:	subs	r1, r2, r1
 458:	mvn	r2, #0
 45c:	sbcs	r0, r2, r0
 460:	str	r1, [fp, #-60]	; 0xffffffc4
 464:	str	r0, [fp, #-64]	; 0xffffffc0
 468:	blt	49c <__flatcc_fb_coerce_scalar_type+0x49c>
 46c:	b	470 <__flatcc_fb_coerce_scalar_type+0x470>
 470:	ldr	r0, [fp, #-8]
 474:	ldr	r1, [fp, #-12]
 478:	movw	r2, #0
 47c:	movt	r2, #0
 480:	bl	bd8 <error_sym>
 484:	ldr	r0, [fp, #-20]	; 0xffffffec
 488:	movw	r1, #1
 48c:	strh	r1, [r0, #8]
 490:	mvn	r0, #0
 494:	str	r0, [fp, #-4]
 498:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 49c:	movw	r0, #0
 4a0:	str	r0, [fp, #-4]
 4a4:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 4a8:	ldr	r0, [fp, #-20]	; 0xffffffec
 4ac:	ldrh	r0, [r0, #8]
 4b0:	cmp	r0, #5
 4b4:	bne	520 <__flatcc_fb_coerce_scalar_type+0x520>
 4b8:	ldr	r0, [fp, #-20]	; 0xffffffec
 4bc:	ldr	r1, [r0]
 4c0:	ldr	r0, [r0, #4]
 4c4:	subs	r1, r1, #-2147483648	; 0x80000000
 4c8:	sbcs	r0, r0, #0
 4cc:	str	r1, [sp, #68]	; 0x44
 4d0:	str	r0, [sp, #64]	; 0x40
 4d4:	blt	508 <__flatcc_fb_coerce_scalar_type+0x508>
 4d8:	b	4dc <__flatcc_fb_coerce_scalar_type+0x4dc>
 4dc:	ldr	r0, [fp, #-8]
 4e0:	ldr	r1, [fp, #-12]
 4e4:	movw	r2, #0
 4e8:	movt	r2, #0
 4ec:	bl	bd8 <error_sym>
 4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
 4f4:	movw	r1, #1
 4f8:	strh	r1, [r0, #8]
 4fc:	mvn	r0, #0
 500:	str	r0, [fp, #-4]
 504:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 508:	ldr	r0, [fp, #-20]	; 0xffffffec
 50c:	movw	r1, #4
 510:	strh	r1, [r0, #8]
 514:	movw	r0, #0
 518:	str	r0, [fp, #-4]
 51c:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 520:	ldr	r0, [fp, #-8]
 524:	ldr	r1, [fp, #-12]
 528:	movw	r2, #0
 52c:	movt	r2, #0
 530:	bl	bd8 <error_sym>
 534:	ldr	r0, [fp, #-20]	; 0xffffffec
 538:	movw	r1, #1
 53c:	strh	r1, [r0, #8]
 540:	mvn	r0, #0
 544:	str	r0, [fp, #-4]
 548:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 54c:	ldr	r0, [fp, #-20]	; 0xffffffec
 550:	ldrh	r0, [r0, #8]
 554:	cmp	r0, #4
 558:	bne	5c0 <__flatcc_fb_coerce_scalar_type+0x5c0>
 55c:	ldr	r0, [fp, #-20]	; 0xffffffec
 560:	ldr	r1, [r0]
 564:	ldr	r0, [r0, #4]
 568:	mvn	r2, #32768	; 0x8000
 56c:	subs	r1, r2, r1
 570:	mvn	r2, #0
 574:	sbcs	r0, r2, r0
 578:	str	r1, [sp, #60]	; 0x3c
 57c:	str	r0, [sp, #56]	; 0x38
 580:	blt	5b4 <__flatcc_fb_coerce_scalar_type+0x5b4>
 584:	b	588 <__flatcc_fb_coerce_scalar_type+0x588>
 588:	ldr	r0, [fp, #-8]
 58c:	ldr	r1, [fp, #-12]
 590:	movw	r2, #0
 594:	movt	r2, #0
 598:	bl	bd8 <error_sym>
 59c:	ldr	r0, [fp, #-20]	; 0xffffffec
 5a0:	movw	r1, #1
 5a4:	strh	r1, [r0, #8]
 5a8:	mvn	r0, #0
 5ac:	str	r0, [fp, #-4]
 5b0:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 5b4:	movw	r0, #0
 5b8:	str	r0, [fp, #-4]
 5bc:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 5c0:	ldr	r0, [fp, #-20]	; 0xffffffec
 5c4:	ldrh	r0, [r0, #8]
 5c8:	cmp	r0, #5
 5cc:	bne	638 <__flatcc_fb_coerce_scalar_type+0x638>
 5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
 5d4:	ldr	r1, [r0]
 5d8:	ldr	r0, [r0, #4]
 5dc:	subs	r1, r1, #32768	; 0x8000
 5e0:	sbcs	r0, r0, #0
 5e4:	str	r1, [sp, #52]	; 0x34
 5e8:	str	r0, [sp, #48]	; 0x30
 5ec:	blt	620 <__flatcc_fb_coerce_scalar_type+0x620>
 5f0:	b	5f4 <__flatcc_fb_coerce_scalar_type+0x5f4>
 5f4:	ldr	r0, [fp, #-8]
 5f8:	ldr	r1, [fp, #-12]
 5fc:	movw	r2, #0
 600:	movt	r2, #0
 604:	bl	bd8 <error_sym>
 608:	ldr	r0, [fp, #-20]	; 0xffffffec
 60c:	movw	r1, #1
 610:	strh	r1, [r0, #8]
 614:	mvn	r0, #0
 618:	str	r0, [fp, #-4]
 61c:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 620:	ldr	r0, [fp, #-20]	; 0xffffffec
 624:	movw	r1, #4
 628:	strh	r1, [r0, #8]
 62c:	movw	r0, #0
 630:	str	r0, [fp, #-4]
 634:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 638:	ldr	r0, [fp, #-8]
 63c:	ldr	r1, [fp, #-12]
 640:	movw	r2, #0
 644:	movt	r2, #0
 648:	bl	bd8 <error_sym>
 64c:	ldr	r0, [fp, #-20]	; 0xffffffec
 650:	movw	r1, #1
 654:	strh	r1, [r0, #8]
 658:	mvn	r0, #0
 65c:	str	r0, [fp, #-4]
 660:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 664:	ldr	r0, [fp, #-20]	; 0xffffffec
 668:	ldrh	r0, [r0, #8]
 66c:	cmp	r0, #4
 670:	bne	6d8 <__flatcc_fb_coerce_scalar_type+0x6d8>
 674:	ldr	r0, [fp, #-20]	; 0xffffffec
 678:	ldr	r1, [r0]
 67c:	ldr	r0, [r0, #4]
 680:	mvn	r2, #128	; 0x80
 684:	subs	r1, r2, r1
 688:	mvn	r2, #0
 68c:	sbcs	r0, r2, r0
 690:	str	r1, [sp, #44]	; 0x2c
 694:	str	r0, [sp, #40]	; 0x28
 698:	blt	6cc <__flatcc_fb_coerce_scalar_type+0x6cc>
 69c:	b	6a0 <__flatcc_fb_coerce_scalar_type+0x6a0>
 6a0:	ldr	r0, [fp, #-8]
 6a4:	ldr	r1, [fp, #-12]
 6a8:	movw	r2, #0
 6ac:	movt	r2, #0
 6b0:	bl	bd8 <error_sym>
 6b4:	ldr	r0, [fp, #-20]	; 0xffffffec
 6b8:	movw	r1, #1
 6bc:	strh	r1, [r0, #8]
 6c0:	mvn	r0, #0
 6c4:	str	r0, [fp, #-4]
 6c8:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 6cc:	movw	r0, #0
 6d0:	str	r0, [fp, #-4]
 6d4:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 6d8:	ldr	r0, [fp, #-20]	; 0xffffffec
 6dc:	ldrh	r0, [r0, #8]
 6e0:	cmp	r0, #5
 6e4:	bne	750 <__flatcc_fb_coerce_scalar_type+0x750>
 6e8:	ldr	r0, [fp, #-20]	; 0xffffffec
 6ec:	ldr	r1, [r0]
 6f0:	ldr	r0, [r0, #4]
 6f4:	subs	r1, r1, #128	; 0x80
 6f8:	sbcs	r0, r0, #0
 6fc:	str	r1, [sp, #36]	; 0x24
 700:	str	r0, [sp, #32]
 704:	blt	738 <__flatcc_fb_coerce_scalar_type+0x738>
 708:	b	70c <__flatcc_fb_coerce_scalar_type+0x70c>
 70c:	ldr	r0, [fp, #-8]
 710:	ldr	r1, [fp, #-12]
 714:	movw	r2, #0
 718:	movt	r2, #0
 71c:	bl	bd8 <error_sym>
 720:	ldr	r0, [fp, #-20]	; 0xffffffec
 724:	movw	r1, #1
 728:	strh	r1, [r0, #8]
 72c:	mvn	r0, #0
 730:	str	r0, [fp, #-4]
 734:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 738:	ldr	r0, [fp, #-20]	; 0xffffffec
 73c:	movw	r1, #4
 740:	strh	r1, [r0, #8]
 744:	movw	r0, #0
 748:	str	r0, [fp, #-4]
 74c:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 750:	ldr	r0, [fp, #-8]
 754:	ldr	r1, [fp, #-12]
 758:	movw	r2, #0
 75c:	movt	r2, #0
 760:	bl	bd8 <error_sym>
 764:	ldr	r0, [fp, #-20]	; 0xffffffec
 768:	movw	r1, #1
 76c:	strh	r1, [r0, #8]
 770:	mvn	r0, #0
 774:	str	r0, [fp, #-4]
 778:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 77c:	ldr	r0, [fp, #-20]	; 0xffffffec
 780:	ldrh	r0, [r0, #8]
 784:	cmp	r0, #5
 788:	bne	7f0 <__flatcc_fb_coerce_scalar_type+0x7f0>
 78c:	ldr	r0, [fp, #-8]
 790:	ldr	r0, [r0, #144]	; 0x90
 794:	cmp	r0, #0
 798:	beq	7f0 <__flatcc_fb_coerce_scalar_type+0x7f0>
 79c:	ldr	r0, [fp, #-20]	; 0xffffffec
 7a0:	ldr	r1, [r0]
 7a4:	ldr	r0, [r0, #4]
 7a8:	subs	r1, r1, #2
 7ac:	sbcs	r0, r0, #0
 7b0:	str	r1, [sp, #28]
 7b4:	str	r0, [sp, #24]
 7b8:	bcc	7ec <__flatcc_fb_coerce_scalar_type+0x7ec>
 7bc:	b	7c0 <__flatcc_fb_coerce_scalar_type+0x7c0>
 7c0:	ldr	r0, [fp, #-8]
 7c4:	ldr	r1, [fp, #-12]
 7c8:	movw	r2, #0
 7cc:	movt	r2, #0
 7d0:	bl	bd8 <error_sym>
 7d4:	ldr	r0, [fp, #-20]	; 0xffffffec
 7d8:	movw	r1, #1
 7dc:	strh	r1, [r0, #8]
 7e0:	mvn	r0, #0
 7e4:	str	r0, [fp, #-4]
 7e8:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 7ec:	b	830 <__flatcc_fb_coerce_scalar_type+0x830>
 7f0:	ldr	r0, [fp, #-20]	; 0xffffffec
 7f4:	ldrh	r0, [r0, #8]
 7f8:	cmp	r0, #6
 7fc:	beq	82c <__flatcc_fb_coerce_scalar_type+0x82c>
 800:	ldr	r0, [fp, #-8]
 804:	ldr	r1, [fp, #-12]
 808:	movw	r2, #0
 80c:	movt	r2, #0
 810:	bl	bd8 <error_sym>
 814:	ldr	r0, [fp, #-20]	; 0xffffffec
 818:	movw	r1, #1
 81c:	strh	r1, [r0, #8]
 820:	mvn	r0, #0
 824:	str	r0, [fp, #-4]
 828:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 82c:	b	830 <__flatcc_fb_coerce_scalar_type+0x830>
 830:	movw	r0, #0
 834:	str	r0, [fp, #-4]
 838:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 83c:	ldr	r0, [fp, #-20]	; 0xffffffec
 840:	ldrh	r0, [r0, #8]
 844:	cmp	r0, #3
 848:	str	r0, [sp, #20]
 84c:	beq	9bc <__flatcc_fb_coerce_scalar_type+0x9bc>
 850:	b	854 <__flatcc_fb_coerce_scalar_type+0x854>
 854:	ldr	r0, [sp, #20]
 858:	cmp	r0, #4
 85c:	beq	874 <__flatcc_fb_coerce_scalar_type+0x874>
 860:	b	864 <__flatcc_fb_coerce_scalar_type+0x864>
 864:	ldr	r0, [sp, #20]
 868:	cmp	r0, #5
 86c:	beq	918 <__flatcc_fb_coerce_scalar_type+0x918>
 870:	b	9c8 <__flatcc_fb_coerce_scalar_type+0x9c8>
 874:	ldr	r0, [fp, #-20]	; 0xffffffec
 878:	ldr	r1, [r0]
 87c:	ldr	r0, [r0, #4]
 880:	str	r0, [sp, #16]
 884:	mov	r0, r1
 888:	ldr	r1, [sp, #16]
 88c:	bl	0 <__aeabi_l2d>
 890:	str	r0, [fp, #-32]	; 0xffffffe0
 894:	str	r1, [fp, #-28]	; 0xffffffe4
 898:	ldr	r0, [fp, #-32]	; 0xffffffe0
 89c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 8a0:	bl	0 <__aeabi_d2lz>
 8a4:	ldr	lr, [fp, #-20]	; 0xffffffec
 8a8:	ldr	r2, [lr]
 8ac:	ldr	lr, [lr, #4]
 8b0:	eor	r1, r1, lr
 8b4:	eor	r0, r0, r2
 8b8:	orr	r0, r0, r1
 8bc:	cmp	r0, #0
 8c0:	beq	8f4 <__flatcc_fb_coerce_scalar_type+0x8f4>
 8c4:	b	8c8 <__flatcc_fb_coerce_scalar_type+0x8c8>
 8c8:	ldr	r0, [fp, #-8]
 8cc:	ldr	r1, [fp, #-12]
 8d0:	movw	r2, #0
 8d4:	movt	r2, #0
 8d8:	bl	bd8 <error_sym>
 8dc:	ldr	r0, [fp, #-20]	; 0xffffffec
 8e0:	movw	r1, #1
 8e4:	strh	r1, [r0, #8]
 8e8:	mvn	r0, #0
 8ec:	str	r0, [fp, #-4]
 8f0:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 8f4:	vldr	d16, [fp, #-32]	; 0xffffffe0
 8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
 8fc:	vstr	d16, [r0]
 900:	ldr	r0, [fp, #-20]	; 0xffffffec
 904:	movw	r1, #3
 908:	strh	r1, [r0, #8]
 90c:	movw	r0, #0
 910:	str	r0, [fp, #-4]
 914:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 918:	ldr	r0, [fp, #-20]	; 0xffffffec
 91c:	ldr	r1, [r0]
 920:	ldr	r0, [r0, #4]
 924:	str	r0, [sp, #12]
 928:	mov	r0, r1
 92c:	ldr	r1, [sp, #12]
 930:	bl	0 <__aeabi_ul2d>
 934:	str	r0, [fp, #-32]	; 0xffffffe0
 938:	str	r1, [fp, #-28]	; 0xffffffe4
 93c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 940:	ldr	r1, [fp, #-28]	; 0xffffffe4
 944:	bl	0 <__aeabi_d2ulz>
 948:	ldr	lr, [fp, #-20]	; 0xffffffec
 94c:	ldr	r2, [lr]
 950:	ldr	lr, [lr, #4]
 954:	eor	r1, r1, lr
 958:	eor	r0, r0, r2
 95c:	orr	r0, r0, r1
 960:	cmp	r0, #0
 964:	beq	998 <__flatcc_fb_coerce_scalar_type+0x998>
 968:	b	96c <__flatcc_fb_coerce_scalar_type+0x96c>
 96c:	ldr	r0, [fp, #-8]
 970:	ldr	r1, [fp, #-12]
 974:	movw	r2, #0
 978:	movt	r2, #0
 97c:	bl	bd8 <error_sym>
 980:	ldr	r0, [fp, #-20]	; 0xffffffec
 984:	movw	r1, #1
 988:	strh	r1, [r0, #8]
 98c:	mvn	r0, #0
 990:	str	r0, [fp, #-4]
 994:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 998:	vldr	d16, [fp, #-32]	; 0xffffffe0
 99c:	ldr	r0, [fp, #-20]	; 0xffffffec
 9a0:	vstr	d16, [r0]
 9a4:	ldr	r0, [fp, #-20]	; 0xffffffec
 9a8:	movw	r1, #3
 9ac:	strh	r1, [r0, #8]
 9b0:	movw	r0, #0
 9b4:	str	r0, [fp, #-4]
 9b8:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 9bc:	movw	r0, #0
 9c0:	str	r0, [fp, #-4]
 9c4:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 9c8:	ldr	r0, [fp, #-8]
 9cc:	ldr	r1, [fp, #-12]
 9d0:	movw	r2, #0
 9d4:	movt	r2, #0
 9d8:	bl	bd8 <error_sym>
 9dc:	ldr	r0, [fp, #-20]	; 0xffffffec
 9e0:	movw	r1, #1
 9e4:	strh	r1, [r0, #8]
 9e8:	mvn	r0, #0
 9ec:	str	r0, [fp, #-4]
 9f0:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 9f4:	ldr	r0, [fp, #-20]	; 0xffffffec
 9f8:	ldrh	r0, [r0, #8]
 9fc:	cmp	r0, #3
 a00:	str	r0, [sp, #8]
 a04:	beq	b6c <__flatcc_fb_coerce_scalar_type+0xb6c>
 a08:	b	a0c <__flatcc_fb_coerce_scalar_type+0xa0c>
 a0c:	ldr	r0, [sp, #8]
 a10:	cmp	r0, #4
 a14:	beq	a2c <__flatcc_fb_coerce_scalar_type+0xa2c>
 a18:	b	a1c <__flatcc_fb_coerce_scalar_type+0xa1c>
 a1c:	ldr	r0, [sp, #8]
 a20:	cmp	r0, #5
 a24:	beq	acc <__flatcc_fb_coerce_scalar_type+0xacc>
 a28:	b	b78 <__flatcc_fb_coerce_scalar_type+0xb78>
 a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a30:	ldr	r1, [r0]
 a34:	ldr	r0, [r0, #4]
 a38:	str	r0, [sp, #4]
 a3c:	mov	r0, r1
 a40:	ldr	r1, [sp, #4]
 a44:	bl	0 <__aeabi_l2f>
 a48:	str	r0, [fp, #-36]	; 0xffffffdc
 a4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a50:	bl	0 <__aeabi_f2lz>
 a54:	ldr	lr, [fp, #-20]	; 0xffffffec
 a58:	ldr	r2, [lr]
 a5c:	ldr	lr, [lr, #4]
 a60:	eor	r1, r1, lr
 a64:	eor	r0, r0, r2
 a68:	orr	r0, r0, r1
 a6c:	cmp	r0, #0
 a70:	beq	aa4 <__flatcc_fb_coerce_scalar_type+0xaa4>
 a74:	b	a78 <__flatcc_fb_coerce_scalar_type+0xa78>
 a78:	ldr	r0, [fp, #-8]
 a7c:	ldr	r1, [fp, #-12]
 a80:	movw	r2, #0
 a84:	movt	r2, #0
 a88:	bl	bd8 <error_sym>
 a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a90:	movw	r1, #1
 a94:	strh	r1, [r0, #8]
 a98:	mvn	r0, #0
 a9c:	str	r0, [fp, #-4]
 aa0:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 aa4:	vldr	s0, [fp, #-36]	; 0xffffffdc
 aa8:	vcvt.f64.f32	d16, s0
 aac:	ldr	r0, [fp, #-20]	; 0xffffffec
 ab0:	vstr	d16, [r0]
 ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
 ab8:	movw	r1, #3
 abc:	strh	r1, [r0, #8]
 ac0:	movw	r0, #0
 ac4:	str	r0, [fp, #-4]
 ac8:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 acc:	ldr	r0, [fp, #-20]	; 0xffffffec
 ad0:	ldr	r1, [r0]
 ad4:	ldr	r0, [r0, #4]
 ad8:	str	r0, [sp]
 adc:	mov	r0, r1
 ae0:	ldr	r1, [sp]
 ae4:	bl	0 <__aeabi_ul2f>
 ae8:	str	r0, [fp, #-36]	; 0xffffffdc
 aec:	ldr	r0, [fp, #-36]	; 0xffffffdc
 af0:	bl	0 <__aeabi_f2ulz>
 af4:	ldr	lr, [fp, #-20]	; 0xffffffec
 af8:	ldr	r2, [lr]
 afc:	ldr	lr, [lr, #4]
 b00:	eor	r1, r1, lr
 b04:	eor	r0, r0, r2
 b08:	orr	r0, r0, r1
 b0c:	cmp	r0, #0
 b10:	beq	b44 <__flatcc_fb_coerce_scalar_type+0xb44>
 b14:	b	b18 <__flatcc_fb_coerce_scalar_type+0xb18>
 b18:	ldr	r0, [fp, #-8]
 b1c:	ldr	r1, [fp, #-12]
 b20:	movw	r2, #0
 b24:	movt	r2, #0
 b28:	bl	bd8 <error_sym>
 b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
 b30:	movw	r1, #1
 b34:	strh	r1, [r0, #8]
 b38:	mvn	r0, #0
 b3c:	str	r0, [fp, #-4]
 b40:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 b44:	vldr	s0, [fp, #-36]	; 0xffffffdc
 b48:	vcvt.f64.f32	d16, s0
 b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
 b50:	vstr	d16, [r0]
 b54:	ldr	r0, [fp, #-20]	; 0xffffffec
 b58:	movw	r1, #3
 b5c:	strh	r1, [r0, #8]
 b60:	movw	r0, #0
 b64:	str	r0, [fp, #-4]
 b68:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 b6c:	movw	r0, #0
 b70:	str	r0, [fp, #-4]
 b74:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 b78:	ldr	r0, [fp, #-8]
 b7c:	ldr	r1, [fp, #-12]
 b80:	movw	r2, #0
 b84:	movt	r2, #0
 b88:	bl	bd8 <error_sym>
 b8c:	ldr	r0, [fp, #-20]	; 0xffffffec
 b90:	movw	r1, #1
 b94:	strh	r1, [r0, #8]
 b98:	mvn	r0, #0
 b9c:	str	r0, [fp, #-4]
 ba0:	b	bcc <__flatcc_fb_coerce_scalar_type+0xbcc>
 ba4:	ldr	r0, [fp, #-8]
 ba8:	ldr	r1, [fp, #-12]
 bac:	movw	r2, #0
 bb0:	movt	r2, #0
 bb4:	bl	bd8 <error_sym>
 bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
 bbc:	movw	r1, #1
 bc0:	strh	r1, [r0, #8]
 bc4:	mvn	r0, #0
 bc8:	str	r0, [fp, #-4]
 bcc:	ldr	r0, [fp, #-4]
 bd0:	mov	sp, fp
 bd4:	pop	{fp, pc}

00000bd8 <error_sym>:
 bd8:	push	{fp, lr}
 bdc:	mov	fp, sp
 be0:	sub	sp, sp, #16
 be4:	str	r0, [fp, #-4]
 be8:	str	r1, [sp, #8]
 bec:	str	r2, [sp, #4]
 bf0:	ldr	r0, [fp, #-4]
 bf4:	ldr	r1, [sp, #8]
 bf8:	ldr	r1, [r1, #4]
 bfc:	ldr	r2, [sp, #4]
 c00:	bl	c0c <error_tok>
 c04:	mov	sp, fp
 c08:	pop	{fp, pc}

00000c0c <error_tok>:
 c0c:	push	{fp, lr}
 c10:	mov	fp, sp
 c14:	sub	sp, sp, #16
 c18:	str	r0, [fp, #-4]
 c1c:	str	r1, [sp, #8]
 c20:	str	r2, [sp, #4]
 c24:	ldr	r0, [fp, #-4]
 c28:	ldr	r1, [sp, #8]
 c2c:	ldr	r2, [sp, #4]
 c30:	movw	r3, #0
 c34:	bl	c40 <error_tok_2>
 c38:	mov	sp, fp
 c3c:	pop	{fp, pc}

00000c40 <error_tok_2>:
 c40:	push	{fp, lr}
 c44:	mov	fp, sp
 c48:	sub	sp, sp, #24
 c4c:	str	r0, [fp, #-4]
 c50:	str	r1, [fp, #-8]
 c54:	str	r2, [sp, #12]
 c58:	str	r3, [sp, #8]
 c5c:	ldr	r0, [fp, #-4]
 c60:	ldr	r1, [fp, #-8]
 c64:	ldr	r2, [sp, #12]
 c68:	ldr	r3, [sp, #8]
 c6c:	movw	ip, #0
 c70:	str	ip, [sp]
 c74:	str	ip, [sp, #4]
 c78:	bl	0 <__flatcc_error_report>
 c7c:	mov	sp, fp
 c80:	pop	{fp, pc}
