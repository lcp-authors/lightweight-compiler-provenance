
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-filter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_filter_item>:
   0:	str	r4, [sp, #-12]!
   4:	str	fp, [sp, #4]
   8:	str	lr, [sp, #8]
   c:	add	fp, sp, #8
  10:	sub	sp, sp, #36	; 0x24
  14:	str	r0, [fp, #-24]	; 0xffffffe8
  18:	str	r1, [fp, #-28]	; 0xffffffe4
  1c:	str	r2, [fp, #-32]	; 0xffffffe0
  20:	mov	r3, #0
  24:	str	r3, [fp, #-16]
  28:	ldr	r3, [fp, #-24]	; 0xffffffe8
  2c:	cmp	r3, #0
  30:	bne	54 <get_filter_item+0x54>
  34:	movw	r3, #0
  38:	movt	r3, #0
  3c:	mov	r2, #44	; 0x2c
  40:	movw	r1, #0
  44:	movt	r1, #0
  48:	movw	r0, #0
  4c:	movt	r0, #0
  50:	bl	0 <__assert_fail>
  54:	ldr	r3, [fp, #-28]	; 0xffffffe4
  58:	cmp	r3, #0
  5c:	bne	80 <get_filter_item+0x80>
  60:	movw	r3, #0
  64:	movt	r3, #0
  68:	mov	r2, #45	; 0x2d
  6c:	movw	r1, #0
  70:	movt	r1, #0
  74:	movw	r0, #0
  78:	movt	r0, #0
  7c:	bl	0 <__assert_fail>
  80:	ldr	r3, [fp, #-32]	; 0xffffffe0
  84:	cmp	r3, #0
  88:	bne	b8 <get_filter_item+0xb8>
  8c:	movw	r3, #0
  90:	movt	r3, #0
  94:	mov	r2, #46	; 0x2e
  98:	movw	r1, #0
  9c:	movt	r1, #0
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	bl	0 <__assert_fail>
  ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
  b0:	add	r3, r3, #1
  b4:	str	r3, [fp, #-24]	; 0xffffffe8
  b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
  bc:	ldrb	r3, [r3]
  c0:	cmp	r3, #32
  c4:	beq	ac <get_filter_item+0xac>
  c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
  cc:	ldrb	r3, [r3]
  d0:	cmp	r3, #9
  d4:	beq	ac <get_filter_item+0xac>
  d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
  dc:	ldrb	r3, [r3]
  e0:	cmp	r3, #10
  e4:	beq	ac <get_filter_item+0xac>
  e8:	b	f8 <get_filter_item+0xf8>
  ec:	ldr	r3, [fp, #-16]
  f0:	add	r3, r3, #1
  f4:	str	r3, [fp, #-16]
  f8:	ldr	r3, [fp, #-16]
  fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 100:	add	r3, r2, r3
 104:	ldrb	r3, [r3]
 108:	cmp	r3, #0
 10c:	beq	158 <get_filter_item+0x158>
 110:	ldr	r3, [fp, #-16]
 114:	ldr	r2, [fp, #-24]	; 0xffffffe8
 118:	add	r3, r2, r3
 11c:	ldrb	r3, [r3]
 120:	cmp	r3, #46	; 0x2e
 124:	beq	158 <get_filter_item+0x158>
 128:	ldr	r3, [fp, #-16]
 12c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 130:	add	r3, r2, r3
 134:	ldrb	r3, [r3]
 138:	cmp	r3, #59	; 0x3b
 13c:	beq	158 <get_filter_item+0x158>
 140:	ldr	r3, [fp, #-16]
 144:	ldr	r2, [fp, #-24]	; 0xffffffe8
 148:	add	r3, r2, r3
 14c:	ldrb	r3, [r3]
 150:	cmp	r3, #44	; 0x2c
 154:	bne	ec <get_filter_item+0xec>
 158:	ldr	r3, [fp, #-16]
 15c:	cmp	r3, #0
 160:	ble	3b8 <get_filter_item+0x3b8>
 164:	ldr	r3, [fp, #-16]
 168:	str	r3, [fp, #-20]	; 0xffffffec
 16c:	mov	r0, #12
 170:	bl	0 <malloc>
 174:	mov	r3, r0
 178:	mov	r2, r3
 17c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 180:	str	r2, [r3]
 184:	ldr	r3, [fp, #-28]	; 0xffffffe4
 188:	ldr	r3, [r3]
 18c:	cmp	r3, #0
 190:	bne	1bc <get_filter_item+0x1bc>
 194:	mov	r3, #69	; 0x45
 198:	str	r3, [sp]
 19c:	movw	r3, #0
 1a0:	movt	r3, #0
 1a4:	mov	r2, #12
 1a8:	movw	r1, #0
 1ac:	movt	r1, #0
 1b0:	mvn	r0, #0
 1b4:	bl	0 <coda_set_error>
 1b8:	bl	0 <handle_coda_error>
 1bc:	ldr	r3, [fp, #-16]
 1c0:	add	r3, r3, #1
 1c4:	mov	r2, r3
 1c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 1cc:	ldr	r4, [r3]
 1d0:	mov	r0, r2
 1d4:	bl	0 <malloc>
 1d8:	mov	r3, r0
 1dc:	str	r3, [r4]
 1e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 1e4:	ldr	r3, [r3]
 1e8:	ldr	r3, [r3]
 1ec:	cmp	r3, #0
 1f0:	bne	220 <get_filter_item+0x220>
 1f4:	ldr	r3, [fp, #-16]
 1f8:	add	r2, r3, #1
 1fc:	mov	r3, #76	; 0x4c
 200:	str	r3, [sp]
 204:	movw	r3, #0
 208:	movt	r3, #0
 20c:	movw	r1, #0
 210:	movt	r1, #0
 214:	mvn	r0, #0
 218:	bl	0 <coda_set_error>
 21c:	bl	0 <handle_coda_error>
 220:	ldr	r3, [fp, #-28]	; 0xffffffe4
 224:	ldr	r3, [r3]
 228:	ldr	r3, [r3]
 22c:	ldr	r2, [fp, #-16]
 230:	ldr	r1, [fp, #-24]	; 0xffffffe8
 234:	mov	r0, r3
 238:	bl	0 <strncpy>
 23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 240:	ldr	r3, [r3]
 244:	mov	r2, #0
 248:	str	r2, [r3, #4]
 24c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 250:	ldr	r3, [r3]
 254:	mov	r2, #0
 258:	str	r2, [r3, #8]
 25c:	b	26c <get_filter_item+0x26c>
 260:	ldr	r3, [fp, #-16]
 264:	sub	r3, r3, #1
 268:	str	r3, [fp, #-16]
 26c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 270:	ldr	r3, [r3]
 274:	ldr	r2, [r3]
 278:	ldr	r3, [fp, #-16]
 27c:	sub	r3, r3, #1
 280:	add	r3, r2, r3
 284:	ldrb	r3, [r3]
 288:	cmp	r3, #32
 28c:	beq	260 <get_filter_item+0x260>
 290:	ldr	r3, [fp, #-28]	; 0xffffffe4
 294:	ldr	r3, [r3]
 298:	ldr	r2, [r3]
 29c:	ldr	r3, [fp, #-16]
 2a0:	sub	r3, r3, #1
 2a4:	add	r3, r2, r3
 2a8:	ldrb	r3, [r3]
 2ac:	cmp	r3, #9
 2b0:	beq	260 <get_filter_item+0x260>
 2b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2b8:	ldr	r3, [r3]
 2bc:	ldr	r2, [r3]
 2c0:	ldr	r3, [fp, #-16]
 2c4:	sub	r3, r3, #1
 2c8:	add	r3, r2, r3
 2cc:	ldrb	r3, [r3]
 2d0:	cmp	r3, #10
 2d4:	beq	260 <get_filter_item+0x260>
 2d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2dc:	ldr	r3, [r3]
 2e0:	ldr	r2, [r3]
 2e4:	ldr	r3, [fp, #-16]
 2e8:	add	r3, r2, r3
 2ec:	mov	r2, #0
 2f0:	strb	r2, [r3]
 2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
 2f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 2fc:	add	r3, r2, r3
 300:	ldrb	r3, [r3]
 304:	cmp	r3, #46	; 0x2e
 308:	bne	354 <get_filter_item+0x354>
 30c:	ldr	r3, [fp, #-20]	; 0xffffffec
 310:	add	r3, r3, #1
 314:	ldr	r2, [fp, #-24]	; 0xffffffe8
 318:	add	r0, r2, r3
 31c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 320:	ldr	r3, [r3]
 324:	add	r3, r3, #4
 328:	ldr	r2, [fp, #-32]	; 0xffffffe0
 32c:	mov	r1, r3
 330:	bl	0 <get_filter_item>
 334:	ldr	r3, [fp, #-28]	; 0xffffffe4
 338:	ldr	r3, [r3]
 33c:	ldr	r3, [r3, #4]
 340:	cmp	r3, #0
 344:	bne	3c4 <get_filter_item+0x3c4>
 348:	ldr	r0, [fp, #-28]	; 0xffffffe4
 34c:	bl	634 <codadump_filter_remove>
 350:	b	3c4 <get_filter_item+0x3c4>
 354:	ldr	r3, [fp, #-20]	; 0xffffffec
 358:	ldr	r2, [fp, #-24]	; 0xffffffe8
 35c:	add	r3, r2, r3
 360:	ldrb	r3, [r3]
 364:	cmp	r3, #59	; 0x3b
 368:	beq	384 <get_filter_item+0x384>
 36c:	ldr	r3, [fp, #-20]	; 0xffffffec
 370:	ldr	r2, [fp, #-24]	; 0xffffffe8
 374:	add	r3, r2, r3
 378:	ldrb	r3, [r3]
 37c:	cmp	r3, #44	; 0x2c
 380:	bne	3a0 <get_filter_item+0x3a0>
 384:	ldr	r3, [fp, #-20]	; 0xffffffec
 388:	add	r3, r3, #1
 38c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 390:	add	r2, r2, r3
 394:	ldr	r3, [fp, #-32]	; 0xffffffe0
 398:	str	r2, [r3]
 39c:	b	3c4 <get_filter_item+0x3c4>
 3a0:	ldr	r3, [fp, #-20]	; 0xffffffec
 3a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 3a8:	add	r2, r2, r3
 3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 3b0:	str	r2, [r3]
 3b4:	b	3c4 <get_filter_item+0x3c4>
 3b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 3bc:	mov	r2, #0
 3c0:	str	r2, [r3]
 3c4:	nop	{0}
 3c8:	sub	sp, fp, #8
 3cc:	ldr	r4, [sp]
 3d0:	ldr	fp, [sp, #4]
 3d4:	add	sp, sp, #8
 3d8:	pop	{pc}		; (ldr pc, [sp], #4)

000003dc <add_filter>:
 3dc:	str	fp, [sp, #-8]!
 3e0:	str	lr, [sp, #4]
 3e4:	add	fp, sp, #4
 3e8:	sub	sp, sp, #8
 3ec:	str	r0, [fp, #-8]
 3f0:	str	r1, [fp, #-12]
 3f4:	ldr	r3, [fp, #-8]
 3f8:	cmp	r3, #0
 3fc:	bne	420 <add_filter+0x44>
 400:	movw	r3, #0
 404:	movt	r3, #0
 408:	mov	r2, #117	; 0x75
 40c:	movw	r1, #0
 410:	movt	r1, #0
 414:	movw	r0, #0
 418:	movt	r0, #0
 41c:	bl	0 <__assert_fail>
 420:	ldr	r3, [fp, #-12]
 424:	cmp	r3, #0
 428:	beq	538 <add_filter+0x15c>
 42c:	ldr	r3, [fp, #-8]
 430:	ldr	r3, [r3]
 434:	cmp	r3, #0
 438:	bne	44c <add_filter+0x70>
 43c:	ldr	r2, [fp, #-12]
 440:	ldr	r3, [fp, #-8]
 444:	str	r2, [r3]
 448:	b	53c <add_filter+0x160>
 44c:	ldr	r3, [fp, #-8]
 450:	ldr	r3, [r3]
 454:	ldr	r2, [r3]
 458:	ldr	r3, [fp, #-12]
 45c:	ldr	r3, [r3]
 460:	mov	r1, r3
 464:	mov	r0, r2
 468:	bl	0 <strcmp>
 46c:	mov	r3, r0
 470:	cmp	r3, #0
 474:	bne	4f0 <add_filter+0x114>
 478:	ldr	r3, [fp, #-8]
 47c:	ldr	r3, [r3]
 480:	ldr	r3, [r3, #4]
 484:	cmp	r3, #0
 488:	beq	4e0 <add_filter+0x104>
 48c:	ldr	r3, [fp, #-12]
 490:	ldr	r3, [r3, #4]
 494:	cmp	r3, #0
 498:	beq	4cc <add_filter+0xf0>
 49c:	ldr	r3, [fp, #-8]
 4a0:	ldr	r3, [r3]
 4a4:	add	r2, r3, #4
 4a8:	ldr	r3, [fp, #-12]
 4ac:	ldr	r3, [r3, #4]
 4b0:	mov	r1, r3
 4b4:	mov	r0, r2
 4b8:	bl	3dc <add_filter>
 4bc:	ldr	r3, [fp, #-12]
 4c0:	mov	r2, #0
 4c4:	str	r2, [r3, #4]
 4c8:	b	4e0 <add_filter+0x104>
 4cc:	ldr	r3, [fp, #-8]
 4d0:	ldr	r3, [r3]
 4d4:	add	r3, r3, #4
 4d8:	mov	r0, r3
 4dc:	bl	634 <codadump_filter_remove>
 4e0:	sub	r3, fp, #12
 4e4:	mov	r0, r3
 4e8:	bl	634 <codadump_filter_remove>
 4ec:	b	53c <add_filter+0x160>
 4f0:	ldr	r3, [fp, #-8]
 4f4:	ldr	r3, [r3]
 4f8:	ldr	r3, [r3, #8]
 4fc:	cmp	r3, #0
 500:	beq	524 <add_filter+0x148>
 504:	ldr	r3, [fp, #-8]
 508:	ldr	r3, [r3]
 50c:	add	r3, r3, #8
 510:	ldr	r2, [fp, #-12]
 514:	mov	r1, r2
 518:	mov	r0, r3
 51c:	bl	3dc <add_filter>
 520:	b	53c <add_filter+0x160>
 524:	ldr	r3, [fp, #-8]
 528:	ldr	r3, [r3]
 52c:	ldr	r2, [fp, #-12]
 530:	str	r2, [r3, #8]
 534:	b	53c <add_filter+0x160>
 538:	nop	{0}
 53c:	sub	sp, fp, #4
 540:	ldr	fp, [sp]
 544:	add	sp, sp, #4
 548:	pop	{pc}		; (ldr pc, [sp], #4)

0000054c <get_filter>:
 54c:	str	fp, [sp, #-8]!
 550:	str	lr, [sp, #4]
 554:	add	fp, sp, #4
 558:	sub	sp, sp, #16
 55c:	str	r0, [fp, #-16]
 560:	str	r1, [fp, #-20]	; 0xffffffec
 564:	mov	r3, #0
 568:	str	r3, [fp, #-8]
 56c:	ldr	r3, [fp, #-16]
 570:	str	r3, [fp, #-12]
 574:	ldr	r3, [fp, #-16]
 578:	cmp	r3, #0
 57c:	beq	5dc <get_filter+0x90>
 580:	b	5c8 <get_filter+0x7c>
 584:	ldr	r3, [fp, #-12]
 588:	sub	r2, fp, #12
 58c:	sub	r1, fp, #8
 590:	mov	r0, r3
 594:	bl	0 <get_filter_item>
 598:	ldr	r3, [fp, #-8]
 59c:	cmp	r3, #0
 5a0:	bne	5b0 <get_filter+0x64>
 5a4:	ldr	r0, [fp, #-20]	; 0xffffffec
 5a8:	bl	634 <codadump_filter_remove>
 5ac:	b	5e0 <get_filter+0x94>
 5b0:	ldr	r3, [fp, #-8]
 5b4:	mov	r1, r3
 5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
 5bc:	bl	3dc <add_filter>
 5c0:	mov	r3, #0
 5c4:	str	r3, [fp, #-8]
 5c8:	ldr	r3, [fp, #-12]
 5cc:	ldrb	r3, [r3]
 5d0:	cmp	r3, #0
 5d4:	bne	584 <get_filter+0x38>
 5d8:	b	5e0 <get_filter+0x94>
 5dc:	nop	{0}
 5e0:	sub	sp, fp, #4
 5e4:	ldr	fp, [sp]
 5e8:	add	sp, sp, #4
 5ec:	pop	{pc}		; (ldr pc, [sp], #4)

000005f0 <codadump_filter_create>:
 5f0:	str	fp, [sp, #-8]!
 5f4:	str	lr, [sp, #4]
 5f8:	add	fp, sp, #4
 5fc:	sub	sp, sp, #16
 600:	str	r0, [fp, #-16]
 604:	mov	r3, #0
 608:	str	r3, [fp, #-8]
 60c:	sub	r3, fp, #8
 610:	mov	r1, r3
 614:	ldr	r0, [fp, #-16]
 618:	bl	54c <get_filter>
 61c:	ldr	r3, [fp, #-8]
 620:	mov	r0, r3
 624:	sub	sp, fp, #4
 628:	ldr	fp, [sp]
 62c:	add	sp, sp, #4
 630:	pop	{pc}		; (ldr pc, [sp], #4)

00000634 <codadump_filter_remove>:
 634:	str	fp, [sp, #-8]!
 638:	str	lr, [sp, #4]
 63c:	add	fp, sp, #4
 640:	sub	sp, sp, #8
 644:	str	r0, [fp, #-8]
 648:	ldr	r3, [fp, #-8]
 64c:	cmp	r3, #0
 650:	bne	674 <codadump_filter_remove+0x40>
 654:	movw	r3, #0
 658:	movt	r3, #0
 65c:	mov	r2, #192	; 0xc0
 660:	movw	r1, #0
 664:	movt	r1, #0
 668:	movw	r0, #0
 66c:	movt	r0, #0
 670:	bl	0 <__assert_fail>
 674:	ldr	r3, [fp, #-8]
 678:	ldr	r3, [r3]
 67c:	cmp	r3, #0
 680:	beq	728 <codadump_filter_remove+0xf4>
 684:	ldr	r3, [fp, #-8]
 688:	ldr	r3, [r3]
 68c:	ldr	r3, [r3, #8]
 690:	cmp	r3, #0
 694:	beq	6ac <codadump_filter_remove+0x78>
 698:	ldr	r3, [fp, #-8]
 69c:	ldr	r3, [r3]
 6a0:	add	r3, r3, #8
 6a4:	mov	r0, r3
 6a8:	bl	634 <codadump_filter_remove>
 6ac:	ldr	r3, [fp, #-8]
 6b0:	ldr	r3, [r3]
 6b4:	ldr	r3, [r3, #4]
 6b8:	cmp	r3, #0
 6bc:	beq	6d4 <codadump_filter_remove+0xa0>
 6c0:	ldr	r3, [fp, #-8]
 6c4:	ldr	r3, [r3]
 6c8:	add	r3, r3, #4
 6cc:	mov	r0, r3
 6d0:	bl	634 <codadump_filter_remove>
 6d4:	ldr	r3, [fp, #-8]
 6d8:	ldr	r3, [r3]
 6dc:	ldr	r3, [r3]
 6e0:	cmp	r3, #0
 6e4:	beq	70c <codadump_filter_remove+0xd8>
 6e8:	ldr	r3, [fp, #-8]
 6ec:	ldr	r3, [r3]
 6f0:	ldr	r3, [r3]
 6f4:	mov	r0, r3
 6f8:	bl	0 <free>
 6fc:	ldr	r3, [fp, #-8]
 700:	ldr	r3, [r3]
 704:	mov	r2, #0
 708:	str	r2, [r3]
 70c:	ldr	r3, [fp, #-8]
 710:	ldr	r3, [r3]
 714:	mov	r0, r3
 718:	bl	0 <free>
 71c:	ldr	r3, [fp, #-8]
 720:	mov	r2, #0
 724:	str	r2, [r3]
 728:	nop	{0}
 72c:	sub	sp, fp, #4
 730:	ldr	fp, [sp]
 734:	add	sp, sp, #4
 738:	pop	{pc}		; (ldr pc, [sp], #4)

0000073c <codadump_filter_get_fieldname>:
 73c:	str	fp, [sp, #-8]!
 740:	str	lr, [sp, #4]
 744:	add	fp, sp, #4
 748:	sub	sp, sp, #8
 74c:	str	r0, [fp, #-8]
 750:	ldr	r3, [fp, #-8]
 754:	cmp	r3, #0
 758:	bne	77c <codadump_filter_get_fieldname+0x40>
 75c:	movw	r3, #0
 760:	movt	r3, #0
 764:	mov	r2, #216	; 0xd8
 768:	movw	r1, #0
 76c:	movt	r1, #0
 770:	movw	r0, #0
 774:	movt	r0, #0
 778:	bl	0 <__assert_fail>
 77c:	ldr	r3, [fp, #-8]
 780:	ldr	r3, [r3]
 784:	mov	r0, r3
 788:	sub	sp, fp, #4
 78c:	ldr	fp, [sp]
 790:	add	sp, sp, #4
 794:	pop	{pc}		; (ldr pc, [sp], #4)

00000798 <codadump_filter_get_subfilter>:
 798:	str	fp, [sp, #-8]!
 79c:	str	lr, [sp, #4]
 7a0:	add	fp, sp, #4
 7a4:	sub	sp, sp, #8
 7a8:	str	r0, [fp, #-8]
 7ac:	ldr	r3, [fp, #-8]
 7b0:	cmp	r3, #0
 7b4:	bne	7d8 <codadump_filter_get_subfilter+0x40>
 7b8:	movw	r3, #0
 7bc:	movt	r3, #0
 7c0:	mov	r2, #223	; 0xdf
 7c4:	movw	r1, #0
 7c8:	movt	r1, #0
 7cc:	movw	r0, #0
 7d0:	movt	r0, #0
 7d4:	bl	0 <__assert_fail>
 7d8:	ldr	r3, [fp, #-8]
 7dc:	ldr	r3, [r3, #4]
 7e0:	mov	r0, r3
 7e4:	sub	sp, fp, #4
 7e8:	ldr	fp, [sp]
 7ec:	add	sp, sp, #4
 7f0:	pop	{pc}		; (ldr pc, [sp], #4)

000007f4 <codadump_filter_get_next_filter>:
 7f4:	str	fp, [sp, #-8]!
 7f8:	str	lr, [sp, #4]
 7fc:	add	fp, sp, #4
 800:	sub	sp, sp, #8
 804:	str	r0, [fp, #-8]
 808:	ldr	r3, [fp, #-8]
 80c:	cmp	r3, #0
 810:	bne	834 <codadump_filter_get_next_filter+0x40>
 814:	movw	r3, #0
 818:	movt	r3, #0
 81c:	mov	r2, #230	; 0xe6
 820:	movw	r1, #0
 824:	movt	r1, #0
 828:	movw	r0, #0
 82c:	movt	r0, #0
 830:	bl	0 <__assert_fail>
 834:	ldr	r3, [fp, #-8]
 838:	ldr	r3, [r3, #8]
 83c:	mov	r0, r3
 840:	sub	sp, fp, #4
 844:	ldr	fp, [sp]
 848:	add	sp, sp, #4
 84c:	pop	{pc}		; (ldr pc, [sp], #4)
