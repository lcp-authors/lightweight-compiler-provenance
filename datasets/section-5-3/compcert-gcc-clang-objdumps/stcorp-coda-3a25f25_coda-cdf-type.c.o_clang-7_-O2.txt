
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_cdf_type_delete>:
   0:	push	{r4, sl, fp, lr}
   4:	add	fp, sp, #8
   8:	cmp	r0, #0
   c:	beq	a4 <coda_cdf_type_delete+0xa4>
  10:	mov	r4, r0
  14:	ldr	r0, [r0]
  18:	cmp	r0, #103	; 0x67
  1c:	bne	c4 <coda_cdf_type_delete+0xc4>
  20:	ldr	r0, [r4, #8]
  24:	cmp	r0, #2
  28:	beq	48 <coda_cdf_type_delete+0x48>
  2c:	cmp	r0, #1
  30:	bne	88 <coda_cdf_type_delete+0x88>
  34:	ldr	r0, [r4, #12]
  38:	cmp	r0, #0
  3c:	beq	88 <coda_cdf_type_delete+0x88>
  40:	bl	0 <coda_dynamic_type_delete>
  44:	b	88 <coda_cdf_type_delete+0x88>
  48:	ldr	r0, [r4, #12]
  4c:	cmp	r0, #0
  50:	beq	58 <coda_cdf_type_delete+0x58>
  54:	bl	0 <coda_dynamic_type_delete>
  58:	ldr	r0, [r4, #16]
  5c:	cmp	r0, #0
  60:	beq	68 <coda_cdf_type_delete+0x68>
  64:	bl	0 <coda_dynamic_type_delete>
  68:	ldr	r0, [r4, #36]	; 0x24
  6c:	cmp	r0, #0
  70:	beq	78 <coda_cdf_type_delete+0x78>
  74:	bl	0 <free>
  78:	ldr	r0, [r4, #40]	; 0x28
  7c:	cmp	r0, #0
  80:	beq	88 <coda_cdf_type_delete+0x88>
  84:	bl	0 <free>
  88:	ldr	r0, [r4, #4]
  8c:	cmp	r0, #0
  90:	beq	98 <coda_cdf_type_delete+0x98>
  94:	bl	0 <coda_type_release>
  98:	mov	r0, r4
  9c:	pop	{r4, sl, fp, lr}
  a0:	b	0 <free>
  a4:	movw	r0, #0
  a8:	movw	r1, #0
  ac:	movw	r3, #0
  b0:	mov	r2, #39	; 0x27
  b4:	movt	r0, #0
  b8:	movt	r1, #0
  bc:	movt	r3, #0
  c0:	bl	0 <__assert_fail>
  c4:	movw	r0, #0
  c8:	movw	r1, #0
  cc:	movw	r3, #0
  d0:	mov	r2, #40	; 0x28
  d4:	movt	r0, #0
  d8:	movt	r1, #0
  dc:	movt	r3, #0
  e0:	bl	0 <__assert_fail>

000000e4 <coda_cdf_variable_new>:
  e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  e8:	add	fp, sp, #28
  ec:	sub	sp, sp, #12
  f0:	mov	r8, r3
  f4:	mov	sl, r2
  f8:	mov	r5, r1
  fc:	mov	r7, r0
 100:	cmp	r1, #0
 104:	beq	110 <coda_cdf_variable_new+0x2c>
 108:	cmp	sl, #0
 10c:	beq	48c <coda_cdf_variable_new+0x3a8>
 110:	mov	r0, #44	; 0x2c
 114:	bl	0 <malloc>
 118:	cmp	r0, #0
 11c:	beq	18c <coda_cdf_variable_new+0xa8>
 120:	mov	r4, r0
 124:	ldr	r0, [fp, #24]
 128:	ldr	r6, [fp, #12]
 12c:	str	r5, [sp, #4]
 130:	mov	r9, #0
 134:	mov	r1, #103	; 0x67
 138:	cmp	sl, #0
 13c:	mov	r2, #2
 140:	mov	r3, #1
 144:	mvn	r5, #0
 148:	stm	r4, {r1, r9}
 14c:	str	r2, [r4, #8]
 150:	str	r9, [r4, #12]
 154:	str	r9, [r4, #16]
 158:	str	r3, [r4, #20]
 15c:	str	r3, [r4, #24]
 160:	str	r5, [r4, #28]
 164:	str	r0, [r4, #32]
 168:	str	r9, [r4, #36]	; 0x24
 16c:	str	r9, [r4, #40]	; 0x28
 170:	beq	1b8 <coda_cdf_variable_new+0xd4>
 174:	cmp	r7, #33	; 0x21
 178:	beq	1ec <coda_cdf_variable_new+0x108>
 17c:	cmp	r7, #31
 180:	bne	1f8 <coda_cdf_variable_new+0x114>
 184:	mov	r5, #45	; 0x2d
 188:	b	1f0 <coda_cdf_variable_new+0x10c>
 18c:	movw	r1, #0
 190:	movw	r3, #0
 194:	movw	r0, #274	; 0x112
 198:	mov	r2, #44	; 0x2c
 19c:	str	r0, [sp]
 1a0:	movt	r1, #0
 1a4:	movt	r3, #0
 1a8:	mvn	r0, #0
 1ac:	bl	0 <coda_set_error>
 1b0:	mov	r5, #0
 1b4:	b	328 <coda_cdf_variable_new+0x244>
 1b8:	cmp	r8, #1
 1bc:	blt	1e0 <coda_cdf_variable_new+0xfc>
 1c0:	mov	r9, #0
 1c4:	mov	r0, #0
 1c8:	ldr	r1, [r6, r0, lsl #2]
 1cc:	cmp	r1, #0
 1d0:	bne	174 <coda_cdf_variable_new+0x90>
 1d4:	add	r0, r0, #1
 1d8:	cmp	r0, r8
 1dc:	blt	1c8 <coda_cdf_variable_new+0xe4>
 1e0:	mov	r9, #1
 1e4:	cmp	r7, #33	; 0x21
 1e8:	bne	17c <coda_cdf_variable_new+0x98>
 1ec:	mov	r5, #8
 1f0:	str	r7, [sp, #8]
 1f4:	b	204 <coda_cdf_variable_new+0x120>
 1f8:	mvn	r0, #0
 1fc:	mov	r5, r7
 200:	str	r0, [sp, #8]
 204:	ldr	r6, [fp, #20]
 208:	cmp	r9, #0
 20c:	beq	238 <coda_cdf_variable_new+0x154>
 210:	mov	r0, r4
 214:	mov	r1, r5
 218:	mov	r2, r6
 21c:	bl	4ac <basic_type_init>
 220:	cmp	r0, #0
 224:	beq	284 <coda_cdf_variable_new+0x1a0>
 228:	mov	r0, r4
 22c:	bl	0 <coda_cdf_type_delete>
 230:	mov	r5, #0
 234:	b	328 <coda_cdf_variable_new+0x244>
 238:	mov	r0, #12
 23c:	bl	0 <malloc>
 240:	cmp	r0, #0
 244:	beq	2f4 <coda_cdf_variable_new+0x210>
 248:	mov	r7, r0
 24c:	mov	r1, #103	; 0x67
 250:	mov	r0, #0
 254:	mov	r2, r6
 258:	str	r1, [r7]
 25c:	str	r0, [r7, #4]
 260:	str	r0, [r7, #8]
 264:	mov	r0, r7
 268:	mov	r1, r5
 26c:	bl	4ac <basic_type_init>
 270:	cmp	r0, #0
 274:	beq	35c <coda_cdf_variable_new+0x278>
 278:	mov	r0, r7
 27c:	bl	0 <coda_cdf_type_delete>
 280:	b	318 <coda_cdf_variable_new+0x234>
 284:	ldr	r0, [r4, #4]
 288:	ldrd	r0, [r0, #24]
 28c:	asr	r2, r1, #31
 290:	adds	r0, r0, r2, lsr #29
 294:	adc	r1, r1, #0
 298:	lsr	r0, r0, #3
 29c:	orr	r0, r0, r1, lsl #29
 2a0:	str	r0, [r4, #28]
 2a4:	ldr	r7, [r4, #20]
 2a8:	lsl	r5, r7, #3
 2ac:	mov	r0, r5
 2b0:	bl	0 <malloc>
 2b4:	cmp	r0, #0
 2b8:	str	r0, [r4, #36]	; 0x24
 2bc:	beq	334 <coda_cdf_variable_new+0x250>
 2c0:	ldr	r6, [fp, #28]
 2c4:	cmp	r7, #1
 2c8:	blt	2d8 <coda_cdf_variable_new+0x1f4>
 2cc:	mov	r1, #255	; 0xff
 2d0:	mov	r2, r5
 2d4:	bl	0 <memset>
 2d8:	ldr	r0, [sp, #8]
 2dc:	cmp	r9, #0
 2e0:	str	r4, [r6]
 2e4:	cmnne	r0, #1
 2e8:	bne	474 <coda_cdf_variable_new+0x390>
 2ec:	mov	r5, r4
 2f0:	b	328 <coda_cdf_variable_new+0x244>
 2f4:	movw	r1, #0
 2f8:	movw	r3, #0
 2fc:	mov	r0, #191	; 0xbf
 300:	mov	r2, #12
 304:	str	r0, [sp]
 308:	movt	r1, #0
 30c:	movt	r3, #0
 310:	mvn	r0, #0
 314:	bl	0 <coda_set_error>
 318:	mov	r5, #0
 31c:	mov	r0, r4
 320:	str	r5, [r4, #16]
 324:	bl	0 <coda_cdf_type_delete>
 328:	mov	r0, r5
 32c:	sub	sp, fp, #28
 330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 334:	movw	r1, #0
 338:	movw	r3, #0
 33c:	mov	r0, #392	; 0x188
 340:	mov	r2, r5
 344:	str	r0, [sp]
 348:	movt	r1, #0
 34c:	movt	r3, #0
 350:	mvn	r0, #0
 354:	bl	0 <coda_set_error>
 358:	b	228 <coda_cdf_variable_new+0x144>
 35c:	ldr	r0, [sp, #8]
 360:	str	r7, [r4, #16]
 364:	cmn	r0, #1
 368:	beq	380 <coda_cdf_variable_new+0x29c>
 36c:	mov	r1, r7
 370:	bl	6b0 <time_type_new>
 374:	cmp	r0, #0
 378:	beq	228 <coda_cdf_variable_new+0x144>
 37c:	str	r0, [r4, #16]
 380:	mov	r0, #5
 384:	bl	0 <coda_type_array_new>
 388:	cmp	r0, #0
 38c:	str	r0, [r4, #4]
 390:	beq	228 <coda_cdf_variable_new+0x144>
 394:	ldr	r1, [r4, #16]
 398:	ldr	r1, [r1, #4]
 39c:	bl	0 <coda_type_array_set_base_type>
 3a0:	cmp	r0, #0
 3a4:	bne	228 <coda_cdf_variable_new+0x144>
 3a8:	cmp	sl, #0
 3ac:	beq	3d0 <coda_cdf_variable_new+0x2ec>
 3b0:	ldr	r1, [sp, #4]
 3b4:	ldr	r0, [r4, #4]
 3b8:	add	r5, r1, #1
 3bc:	mov	r1, r5
 3c0:	bl	0 <coda_type_array_add_fixed_dimension>
 3c4:	cmp	r0, #0
 3c8:	bne	228 <coda_cdf_variable_new+0x144>
 3cc:	str	r5, [r4, #20]
 3d0:	ldr	r0, [r4, #16]
 3d4:	ldr	r0, [r0, #4]
 3d8:	ldrd	r0, [r0, #24]
 3dc:	asr	r2, r1, #31
 3e0:	adds	r0, r0, r2, lsr #29
 3e4:	adc	r1, r1, #0
 3e8:	lsr	r0, r0, #3
 3ec:	cmp	r8, #1
 3f0:	orr	r0, r0, r1, lsl #29
 3f4:	ldr	r1, [fp, #12]
 3f8:	str	r0, [r4, #28]
 3fc:	blt	460 <coda_cdf_variable_new+0x37c>
 400:	ldr	sl, [fp, #8]
 404:	sub	r6, r8, #1
 408:	mov	r7, #0
 40c:	ldr	r0, [fp, #16]
 410:	mov	r5, r6
 414:	cmp	r0, #0
 418:	moveq	r5, r7
 41c:	ldr	r0, [r1, r5, lsl #2]
 420:	cmp	r0, #0
 424:	beq	450 <coda_cdf_variable_new+0x36c>
 428:	ldr	r1, [sl, r5, lsl #2]
 42c:	ldr	r0, [r4, #4]
 430:	bl	0 <coda_type_array_add_fixed_dimension>
 434:	cmp	r0, #0
 438:	bne	228 <coda_cdf_variable_new+0x144>
 43c:	ldr	r0, [sl, r5, lsl #2]
 440:	ldr	r1, [r4, #24]
 444:	mul	r0, r1, r0
 448:	ldr	r1, [fp, #12]
 44c:	str	r0, [r4, #24]
 450:	add	r7, r7, #1
 454:	sub	r6, r6, #1
 458:	cmp	r7, r8
 45c:	blt	40c <coda_cdf_variable_new+0x328>
 460:	ldr	r0, [r4, #4]
 464:	bl	0 <coda_type_array_validate>
 468:	cmp	r0, #0
 46c:	bne	228 <coda_cdf_variable_new+0x144>
 470:	b	2a4 <coda_cdf_variable_new+0x1c0>
 474:	mov	r1, r4
 478:	bl	6b0 <time_type_new>
 47c:	cmp	r0, #0
 480:	beq	228 <coda_cdf_variable_new+0x144>
 484:	mov	r5, r0
 488:	b	328 <coda_cdf_variable_new+0x244>
 48c:	movw	r0, #0
 490:	movw	r1, #0
 494:	movw	r3, #0
 498:	mov	r2, #268	; 0x10c
 49c:	movt	r0, #0
 4a0:	movt	r1, #0
 4a4:	movt	r3, #0
 4a8:	bl	0 <__assert_fail>

000004ac <basic_type_init>:
 4ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 4b0:	add	fp, sp, #24
 4b4:	mov	r4, r0
 4b8:	sub	r0, r1, #1
 4bc:	mov	r7, r2
 4c0:	mov	r2, r1
 4c4:	cmp	r0, #51	; 0x33
 4c8:	bhi	604 <basic_type_init+0x158>
 4cc:	add	r3, pc, #16
 4d0:	mov	r8, #0
 4d4:	mov	r5, #1
 4d8:	mov	r1, #2
 4dc:	mov	r6, #0
 4e0:	ldr	pc, [r3, r0, lsl #2]
 4e4:	.word	0x0000065c
 4e8:	.word	0x000005f8
 4ec:	.word	0x00000604
 4f0:	.word	0x00000620
 4f4:	.word	0x00000604
 4f8:	.word	0x00000604
 4fc:	.word	0x00000604
 500:	.word	0x0000062c
 504:	.word	0x00000604
 508:	.word	0x00000604
 50c:	.word	0x00000638
 510:	.word	0x00000644
 514:	.word	0x00000604
 518:	.word	0x00000654
 51c:	.word	0x00000604
 520:	.word	0x00000604
 524:	.word	0x00000604
 528:	.word	0x00000604
 52c:	.word	0x00000604
 530:	.word	0x00000604
 534:	.word	0x000005b4
 538:	.word	0x000005c4
 53c:	.word	0x00000604
 540:	.word	0x00000604
 544:	.word	0x00000604
 548:	.word	0x00000604
 54c:	.word	0x00000604
 550:	.word	0x00000604
 554:	.word	0x00000604
 558:	.word	0x00000604
 55c:	.word	0x00000604
 560:	.word	0x00000604
 564:	.word	0x00000604
 568:	.word	0x00000604
 56c:	.word	0x00000604
 570:	.word	0x00000604
 574:	.word	0x00000604
 578:	.word	0x00000604
 57c:	.word	0x00000604
 580:	.word	0x00000604
 584:	.word	0x0000065c
 588:	.word	0x00000604
 58c:	.word	0x00000604
 590:	.word	0x000005b4
 594:	.word	0x000005c4
 598:	.word	0x00000604
 59c:	.word	0x00000604
 5a0:	.word	0x00000604
 5a4:	.word	0x00000604
 5a8:	.word	0x00000604
 5ac:	.word	0x000005d4
 5b0:	.word	0x000005d4
 5b4:	mov	r5, #4
 5b8:	mov	r6, #8
 5bc:	mov	r1, #3
 5c0:	b	65c <basic_type_init+0x1b0>
 5c4:	mov	r5, #8
 5c8:	mov	r6, #9
 5cc:	mov	r1, #3
 5d0:	b	65c <basic_type_init+0x1b0>
 5d4:	mov	r0, #5
 5d8:	mov	r6, #11
 5dc:	cmp	r7, #1
 5e0:	movweq	r6, #10
 5e4:	bl	0 <coda_type_text_new>
 5e8:	str	r0, [r4, #4]!
 5ec:	asr	r8, r7, #31
 5f0:	mov	r5, r7
 5f4:	b	668 <basic_type_init+0x1bc>
 5f8:	mov	r1, #2
 5fc:	mov	r6, #2
 600:	b	64c <basic_type_init+0x1a0>
 604:	movw	r1, #0
 608:	mvn	r0, #99	; 0x63
 60c:	movt	r1, #0
 610:	bl	0 <coda_set_error>
 614:	mvn	r7, #0
 618:	mov	r0, r7
 61c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 620:	mov	r6, #4
 624:	mov	r5, #4
 628:	b	65c <basic_type_init+0x1b0>
 62c:	mov	r5, #8
 630:	mov	r6, #6
 634:	b	65c <basic_type_init+0x1b0>
 638:	mov	r6, #1
 63c:	mov	r5, #1
 640:	b	65c <basic_type_init+0x1b0>
 644:	mov	r1, #2
 648:	mov	r6, #3
 64c:	mov	r5, #2
 650:	b	65c <basic_type_init+0x1b0>
 654:	mov	r5, #4
 658:	mov	r6, #5
 65c:	mov	r0, #5
 660:	bl	0 <coda_type_number_new>
 664:	str	r0, [r4, #4]!
 668:	mvn	r7, #0
 66c:	cmp	r0, #0
 670:	beq	684 <basic_type_init+0x1d8>
 674:	mov	r1, r6
 678:	bl	0 <coda_type_set_read_type>
 67c:	cmp	r0, #0
 680:	beq	68c <basic_type_init+0x1e0>
 684:	mov	r0, r7
 688:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 68c:	ldr	r0, [r4]
 690:	mov	r2, r5
 694:	mov	r3, r8
 698:	bl	0 <coda_type_set_byte_size>
 69c:	mov	r7, r0
 6a0:	cmp	r0, #0
 6a4:	mvnne	r7, #0
 6a8:	mov	r0, r7
 6ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000006b0 <time_type_new>:
 6b0:	push	{r4, r5, r6, r7, fp, lr}
 6b4:	add	fp, sp, #16
 6b8:	sub	sp, sp, #8
 6bc:	mov	r7, r0
 6c0:	cmp	r0, #31
 6c4:	mov	r5, r1
 6c8:	cmpne	r7, #33	; 0x21
 6cc:	bne	7a4 <time_type_new+0xf4>
 6d0:	mov	r0, #20
 6d4:	bl	0 <malloc>
 6d8:	cmp	r0, #0
 6dc:	beq	730 <time_type_new+0x80>
 6e0:	mov	r6, r0
 6e4:	mov	r4, #0
 6e8:	mov	r0, #103	; 0x67
 6ec:	mov	r1, #1
 6f0:	cmp	r7, #31
 6f4:	stm	r6, {r0, r4}
 6f8:	add	r0, r6, #8
 6fc:	stm	r0, {r1, r4, r7}
 700:	movw	r1, #0
 704:	movw	r0, #0
 708:	movt	r1, #0
 70c:	movt	r0, #0
 710:	moveq	r0, r1
 714:	add	r1, sp, #4
 718:	bl	0 <coda_expression_from_string>
 71c:	cmp	r0, #0
 720:	beq	764 <time_type_new+0xb4>
 724:	mov	r0, r6
 728:	bl	0 <coda_cdf_type_delete>
 72c:	b	758 <time_type_new+0xa8>
 730:	movw	r1, #0
 734:	movw	r3, #0
 738:	mov	r0, #217	; 0xd9
 73c:	mov	r2, #20
 740:	str	r0, [sp]
 744:	movt	r1, #0
 748:	movt	r3, #0
 74c:	mvn	r0, #0
 750:	bl	0 <coda_set_error>
 754:	mov	r4, #0
 758:	mov	r0, r4
 75c:	sub	sp, fp, #16
 760:	pop	{r4, r5, r6, r7, fp, pc}
 764:	ldr	r1, [sp, #4]
 768:	mov	r0, #5
 76c:	bl	0 <coda_type_time_new>
 770:	cmp	r0, #0
 774:	str	r0, [r6, #4]
 778:	beq	798 <time_type_new+0xe8>
 77c:	ldr	r1, [r5, #4]
 780:	bl	0 <coda_type_time_set_base_type>
 784:	cmp	r0, #0
 788:	bne	724 <time_type_new+0x74>
 78c:	mov	r4, r6
 790:	str	r5, [r6, #12]
 794:	b	758 <time_type_new+0xa8>
 798:	ldr	r0, [sp, #4]
 79c:	bl	0 <coda_expression_delete>
 7a0:	b	724 <time_type_new+0x74>
 7a4:	movw	r0, #0
 7a8:	movw	r1, #0
 7ac:	movw	r3, #0
 7b0:	mov	r2, #211	; 0xd3
 7b4:	movt	r0, #0
 7b8:	movt	r1, #0
 7bc:	movt	r3, #0
 7c0:	bl	0 <__assert_fail>

000007c4 <coda_cdf_variable_add_attribute>:
 7c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7c8:	add	fp, sp, #28
 7cc:	sub	sp, sp, #4
 7d0:	cmp	r0, #0
 7d4:	beq	848 <coda_cdf_variable_add_attribute+0x84>
 7d8:	mov	r6, r1
 7dc:	cmp	r1, #0
 7e0:	beq	864 <coda_cdf_variable_add_attribute+0xa0>
 7e4:	mov	r9, r2
 7e8:	cmp	r2, #0
 7ec:	beq	880 <coda_cdf_variable_add_attribute+0xbc>
 7f0:	ldr	r5, [r0, #12]
 7f4:	mov	r7, r3
 7f8:	mov	r4, r0
 7fc:	cmp	r5, #0
 800:	beq	89c <coda_cdf_variable_add_attribute+0xd8>
 804:	ldr	r0, [r5]
 808:	cmp	r0, #100	; 0x64
 80c:	bne	9d0 <coda_cdf_variable_add_attribute+0x20c>
 810:	ldr	r0, [r4, #4]
 814:	mov	sl, r5
 818:	ldr	r1, [sl, #4]!
 81c:	ldr	r0, [r0, #36]	; 0x24
 820:	cmp	r0, r1
 824:	beq	8ec <coda_cdf_variable_add_attribute+0x128>
 828:	movw	r0, #0
 82c:	movw	r1, #0
 830:	movw	r3, #0
 834:	movw	r2, #473	; 0x1d9
 838:	movt	r0, #0
 83c:	movt	r1, #0
 840:	movt	r3, #0
 844:	bl	0 <__assert_fail>
 848:	movw	r1, #0
 84c:	movw	r2, #0
 850:	mvn	r0, #99	; 0x63
 854:	movw	r3, #427	; 0x1ab
 858:	movt	r1, #0
 85c:	movt	r2, #0
 860:	b	a78 <coda_cdf_variable_add_attribute+0x2b4>
 864:	movw	r1, #0
 868:	movw	r2, #0
 86c:	mvn	r0, #99	; 0x63
 870:	mov	r3, #432	; 0x1b0
 874:	movt	r1, #0
 878:	movt	r2, #0
 87c:	b	a78 <coda_cdf_variable_add_attribute+0x2b4>
 880:	movw	r1, #0
 884:	movw	r2, #0
 888:	mvn	r0, #99	; 0x63
 88c:	movw	r3, #437	; 0x1b5
 890:	movt	r1, #0
 894:	movt	r2, #0
 898:	b	a78 <coda_cdf_variable_add_attribute+0x2b4>
 89c:	cmp	r7, #0
 8a0:	beq	a18 <coda_cdf_variable_add_attribute+0x254>
 8a4:	ldr	r1, [r4, #4]
 8a8:	ldr	r0, [r1, #36]	; 0x24
 8ac:	cmp	r0, #0
 8b0:	bne	8cc <coda_cdf_variable_add_attribute+0x108>
 8b4:	ldr	r0, [r1]
 8b8:	bl	0 <coda_type_record_new>
 8bc:	ldr	r1, [r4, #4]
 8c0:	cmp	r0, #0
 8c4:	str	r0, [r1, #36]	; 0x24
 8c8:	beq	a7c <coda_cdf_variable_add_attribute+0x2b8>
 8cc:	mov	r1, #0
 8d0:	bl	0 <coda_mem_record_new>
 8d4:	cmp	r0, #0
 8d8:	str	r0, [r4, #12]
 8dc:	beq	a7c <coda_cdf_variable_add_attribute+0x2b8>
 8e0:	mov	sl, r0
 8e4:	mov	r5, r0
 8e8:	ldr	r0, [sl, #4]!
 8ec:	ldr	r0, [r0, #44]	; 0x2c
 8f0:	mov	r1, r6
 8f4:	bl	0 <coda_hashtable_get_index_from_name>
 8f8:	mov	r8, r0
 8fc:	cmp	r7, #0
 900:	beq	9ec <coda_cdf_variable_add_attribute+0x228>
 904:	cmp	r8, #0
 908:	blt	92c <coda_cdf_variable_add_attribute+0x168>
 90c:	mov	r4, r5
 910:	ldr	r0, [r4, #16]!
 914:	cmp	r8, r0
 918:	bge	95c <coda_cdf_variable_add_attribute+0x198>
 91c:	ldr	r1, [r5, #20]
 920:	ldr	r1, [r1, r8, lsl #2]
 924:	cmp	r1, #0
 928:	beq	95c <coda_cdf_variable_add_attribute+0x198>
 92c:	ldr	r2, [r9, #4]
 930:	ldr	r0, [sl]
 934:	mov	r1, r6
 938:	bl	0 <coda_type_record_create_field>
 93c:	mvn	r4, #0
 940:	cmp	r0, #0
 944:	bne	a80 <coda_cdf_variable_add_attribute+0x2bc>
 948:	ldr	r1, [sl]
 94c:	mov	r4, r5
 950:	ldr	r0, [r4, #16]!
 954:	ldr	r1, [r1, #48]	; 0x30
 958:	sub	r8, r1, #1
 95c:	ldr	r1, [sl]
 960:	add	r5, r5, #20
 964:	ldr	r1, [r1, #48]	; 0x30
 968:	cmp	r0, r1
 96c:	bge	a8c <coda_cdf_variable_add_attribute+0x2c8>
 970:	ldr	r0, [r5]
 974:	lsl	r1, r1, #2
 978:	bl	0 <realloc>
 97c:	cmp	r0, #0
 980:	beq	a9c <coda_cdf_variable_add_attribute+0x2d8>
 984:	str	r0, [r5]
 988:	ldr	r1, [sl]
 98c:	ldr	r3, [r4]
 990:	ldr	r2, [r1, #48]	; 0x30
 994:	cmp	r3, r2
 998:	bge	9c8 <coda_cdf_variable_add_attribute+0x204>
 99c:	mov	r1, #0
 9a0:	str	r1, [r0, r3, lsl #2]
 9a4:	add	r0, r3, #1
 9a8:	b	9b8 <coda_cdf_variable_add_attribute+0x1f4>
 9ac:	ldr	r2, [r5]
 9b0:	str	r1, [r2, r0, lsl #2]
 9b4:	add	r0, r0, #1
 9b8:	ldr	r2, [sl]
 9bc:	ldr	r2, [r2, #48]	; 0x30
 9c0:	cmp	r0, r2
 9c4:	blt	9ac <coda_cdf_variable_add_attribute+0x1e8>
 9c8:	str	r2, [r4]
 9cc:	b	a8c <coda_cdf_variable_add_attribute+0x2c8>
 9d0:	movw	r1, #0
 9d4:	movw	r2, #0
 9d8:	mvn	r0, #99	; 0x63
 9dc:	movw	r3, #470	; 0x1d6
 9e0:	movt	r1, #0
 9e4:	movt	r2, #0
 9e8:	b	a78 <coda_cdf_variable_add_attribute+0x2b4>
 9ec:	cmn	r8, #1
 9f0:	ble	a20 <coda_cdf_variable_add_attribute+0x25c>
 9f4:	ldr	r0, [r5, #20]!
 9f8:	ldr	r0, [r0, r8, lsl #2]
 9fc:	cmp	r0, #0
 a00:	beq	a3c <coda_cdf_variable_add_attribute+0x278>
 a04:	movw	r1, #0
 a08:	movw	r0, #522	; 0x20a
 a0c:	movt	r1, #0
 a10:	str	r0, [sp]
 a14:	b	a68 <coda_cdf_variable_add_attribute+0x2a4>
 a18:	movw	r0, #462	; 0x1ce
 a1c:	b	a24 <coda_cdf_variable_add_attribute+0x260>
 a20:	mov	r0, #516	; 0x204
 a24:	movw	r1, #0
 a28:	movw	r3, #0
 a2c:	str	r0, [sp]
 a30:	mvn	r0, #101	; 0x65
 a34:	movt	r1, #0
 a38:	b	a70 <coda_cdf_variable_add_attribute+0x2ac>
 a3c:	ldr	r0, [sl]
 a40:	ldr	r1, [r9, #4]
 a44:	ldr	r0, [r0, #52]	; 0x34
 a48:	ldr	r0, [r0, r8, lsl #2]
 a4c:	ldr	r0, [r0, #8]
 a50:	cmp	r0, r1
 a54:	beq	a8c <coda_cdf_variable_add_attribute+0x2c8>
 a58:	movw	r1, #0
 a5c:	mov	r0, #528	; 0x210
 a60:	str	r0, [sp]
 a64:	movt	r1, #0
 a68:	movw	r3, #0
 a6c:	mvn	r0, #99	; 0x63
 a70:	movt	r3, #0
 a74:	mov	r2, r6
 a78:	bl	0 <coda_set_error>
 a7c:	mvn	r4, #0
 a80:	mov	r0, r4
 a84:	sub	sp, fp, #28
 a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a8c:	ldr	r0, [r5]
 a90:	mov	r4, #0
 a94:	str	r9, [r0, r8, lsl #2]
 a98:	b	a80 <coda_cdf_variable_add_attribute+0x2bc>
 a9c:	ldr	r0, [sl]
 aa0:	movw	r1, #499	; 0x1f3
 aa4:	movw	r3, #0
 aa8:	mvn	r4, #0
 aac:	movt	r3, #0
 ab0:	ldr	r0, [r0, #48]	; 0x30
 ab4:	str	r1, [sp]
 ab8:	movw	r1, #0
 abc:	movt	r1, #0
 ac0:	lsl	r2, r0, #2
 ac4:	mvn	r0, #0
 ac8:	bl	0 <coda_set_error>
 acc:	b	a80 <coda_cdf_variable_add_attribute+0x2bc>
