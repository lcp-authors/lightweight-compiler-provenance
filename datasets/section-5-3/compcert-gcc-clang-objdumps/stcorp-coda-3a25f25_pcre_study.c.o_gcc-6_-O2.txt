
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <find_minlength>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	sub	sp, sp, #44	; 0x2c
       8:	lsr	lr, r3, #11
       c:	ldr	ip, [sp, #84]	; 0x54
      10:	ldr	r4, [sp, #84]	; 0x54
      14:	ldr	r7, [sp, #80]	; 0x50
      18:	ldr	ip, [ip]
      1c:	cmp	ip, #1000	; 0x3e8
      20:	add	ip, ip, #1
      24:	str	ip, [r4]
      28:	and	ip, lr, #1
      2c:	str	ip, [sp, #20]
      30:	bgt	400 <find_minlength+0x400>
      34:	ldrb	ip, [r1]
      38:	str	r3, [sp, #12]
      3c:	mov	fp, r0
      40:	add	lr, ip, #123	; 0x7b
      44:	add	ip, ip, #118	; 0x76
      48:	uxtb	lr, lr
      4c:	uxtb	ip, ip
      50:	cmp	ip, #1
      54:	cmphi	lr, #1
      58:	addhi	r4, r1, #3
      5c:	addls	r4, r1, #5
      60:	mov	r8, r2
      64:	ldrb	r3, [r4]
      68:	mov	r5, #0
      6c:	mvn	r2, #0
      70:	str	r5, [sp, #16]
      74:	str	r2, [sp, #28]
      78:	mov	r2, r3
      7c:	cmp	r3, #161	; 0xa1
      80:	ldrls	pc, [pc, r3, lsl #2]
      84:	b	7b0 <find_minlength+0x7b0>
      88:	.word	0x00000458
      8c:	.word	0x00000328
      90:	.word	0x00000328
      94:	.word	0x0000034c
      98:	.word	0x00000328
      9c:	.word	0x00000328
      a0:	.word	0x0000040c
      a4:	.word	0x0000040c
      a8:	.word	0x0000040c
      ac:	.word	0x0000040c
      b0:	.word	0x0000040c
      b4:	.word	0x0000040c
      b8:	.word	0x0000040c
      bc:	.word	0x0000040c
      c0:	.word	0x0000039c
      c4:	.word	0x00000450
      c8:	.word	0x00000450
      cc:	.word	0x0000039c
      d0:	.word	0x0000040c
      d4:	.word	0x0000040c
      d8:	.word	0x0000040c
      dc:	.word	0x0000040c
      e0:	.word	0x0000040c
      e4:	.word	0x00000328
      e8:	.word	0x00000328
      ec:	.word	0x00000328
      f0:	.word	0x00000328
      f4:	.word	0x00000328
      f8:	.word	0x00000328
      fc:	.word	0x000004f4
     100:	.word	0x000004f4
     104:	.word	0x000004f4
     108:	.word	0x000004f4
     10c:	.word	0x0000034c
     110:	.word	0x0000034c
     114:	.word	0x000004f4
     118:	.word	0x000004f4
     11c:	.word	0x0000034c
     120:	.word	0x0000034c
     124:	.word	0x0000034c
     128:	.word	0x0000034c
     12c:	.word	0x000004c0
     130:	.word	0x0000034c
     134:	.word	0x000004f4
     138:	.word	0x0000034c
     13c:	.word	0x0000034c
     140:	.word	0x0000034c
     144:	.word	0x0000034c
     148:	.word	0x000004f4
     14c:	.word	0x000004f4
     150:	.word	0x0000034c
     154:	.word	0x0000034c
     158:	.word	0x0000034c
     15c:	.word	0x0000034c
     160:	.word	0x000004c0
     164:	.word	0x0000034c
     168:	.word	0x000004f4
     16c:	.word	0x0000034c
     170:	.word	0x0000034c
     174:	.word	0x0000034c
     178:	.word	0x0000034c
     17c:	.word	0x000004f4
     180:	.word	0x000004f4
     184:	.word	0x0000034c
     188:	.word	0x0000034c
     18c:	.word	0x0000034c
     190:	.word	0x0000034c
     194:	.word	0x000004c0
     198:	.word	0x0000034c
     19c:	.word	0x000004f4
     1a0:	.word	0x0000034c
     1a4:	.word	0x0000034c
     1a8:	.word	0x0000034c
     1ac:	.word	0x0000034c
     1b0:	.word	0x000004f4
     1b4:	.word	0x000004f4
     1b8:	.word	0x0000034c
     1bc:	.word	0x0000034c
     1c0:	.word	0x0000034c
     1c4:	.word	0x0000034c
     1c8:	.word	0x000004c0
     1cc:	.word	0x0000034c
     1d0:	.word	0x000004f4
     1d4:	.word	0x0000034c
     1d8:	.word	0x0000034c
     1dc:	.word	0x000004a0
     1e0:	.word	0x000004a0
     1e4:	.word	0x0000072c
     1e8:	.word	0x0000072c
     1ec:	.word	0x000004a0
     1f0:	.word	0x000004a0
     1f4:	.word	0x00000338
     1f8:	.word	0x00000338
     1fc:	.word	0x00000700
     200:	.word	0x000004a0
     204:	.word	0x0000072c
     208:	.word	0x000004a0
     20c:	.word	0x00000338
     210:	.word	0x000007b0
     214:	.word	0x000007b0
     218:	.word	0x000007b0
     21c:	.word	0x000007b0
     220:	.word	0x000007b0
     224:	.word	0x000007b0
     228:	.word	0x000007b0
     22c:	.word	0x000007b0
     230:	.word	0x000007b0
     234:	.word	0x000007b0
     238:	.word	0x000007b0
     23c:	.word	0x000007b0
     240:	.word	0x0000035c
     244:	.word	0x0000035c
     248:	.word	0x000007b0
     24c:	.word	0x0000074c
     250:	.word	0x0000074c
     254:	.word	0x000005dc
     258:	.word	0x000005dc
     25c:	.word	0x0000052c
     260:	.word	0x00000328
     264:	.word	0x00000458
     268:	.word	0x00000458
     26c:	.word	0x00000458
     270:	.word	0x00000458
     274:	.word	0x00000458
     278:	.word	0x00000328
     27c:	.word	0x00000310
     280:	.word	0x00000310
     284:	.word	0x00000310
     288:	.word	0x00000310
     28c:	.word	0x000003ac
     290:	.word	0x000003ac
     294:	.word	0x000003ac
     298:	.word	0x000003ac
     29c:	.word	0x000003ac
     2a0:	.word	0x000003ac
     2a4:	.word	0x00000504
     2a8:	.word	0x000003ac
     2ac:	.word	0x000003ac
     2b0:	.word	0x000003ac
     2b4:	.word	0x000003ac
     2b8:	.word	0x00000504
     2bc:	.word	0x00000328
     2c0:	.word	0x00000328
     2c4:	.word	0x00000328
     2c8:	.word	0x00000328
     2cc:	.word	0x00000328
     2d0:	.word	0x00000420
     2d4:	.word	0x00000420
     2d8:	.word	0x00000420
     2dc:	.word	0x000004dc
     2e0:	.word	0x0000034c
     2e4:	.word	0x000004dc
     2e8:	.word	0x0000034c
     2ec:	.word	0x000004dc
     2f0:	.word	0x0000034c
     2f4:	.word	0x000004dc
     2f8:	.word	0x0000034c
     2fc:	.word	0x0000034c
     300:	.word	0x00000400
     304:	.word	0x00000400
     308:	.word	0x0000034c
     30c:	.word	0x00000420
     310:	ldrb	r2, [r4, #1]
     314:	ldrb	r3, [r4, #2]
     318:	orr	r3, r3, r2, lsl #8
     31c:	ldrb	r2, [r4, r3]!
     320:	cmp	r2, #119	; 0x77
     324:	beq	310 <find_minlength+0x310>
     328:	ldr	r3, [pc, #1552]	; 940 <find_minlength+0x940>
     32c:	ldrb	r3, [r3, r2]
     330:	ldrb	r3, [r4, r3]!
     334:	b	78 <find_minlength+0x78>
     338:	ldrb	r2, [r4, #3]
     33c:	sub	r2, r2, #15
     340:	cmp	r2, #1
     344:	bhi	34c <find_minlength+0x34c>
     348:	add	r4, r4, #2
     34c:	ldr	r2, [pc, #1516]	; 940 <find_minlength+0x940>
     350:	ldrb	r3, [r2, r3]
     354:	ldrb	r3, [r4, r3]!
     358:	b	78 <find_minlength+0x78>
     35c:	ldr	r3, [pc, #1500]	; 940 <find_minlength+0x940>
     360:	ldrb	r3, [r3, #110]	; 0x6e
     364:	ldrb	r3, [r4, r3]!
     368:	sub	r2, r3, #98	; 0x62
     36c:	uxtb	r2, r2
     370:	cmp	r2, #11
     374:	bhi	7e0 <find_minlength+0x7e0>
     378:	mov	r1, #1
     37c:	lsl	r2, r1, r2
     380:	ldr	r1, [pc, #1468]	; 944 <find_minlength+0x944>
     384:	tst	r2, r1
     388:	bne	3a0 <find_minlength+0x3a0>
     38c:	tst	r2, #2240	; 0x8c0
     390:	bne	910 <find_minlength+0x910>
     394:	tst	r2, #524	; 0x20c
     398:	beq	7e0 <find_minlength+0x7e0>
     39c:	add	r5, r5, #1
     3a0:	ldrb	r3, [r4, #1]
     3a4:	add	r4, r4, #1
     3a8:	b	78 <find_minlength+0x78>
     3ac:	ldr	r3, [sp, #84]	; 0x54
     3b0:	str	r7, [sp]
     3b4:	str	r3, [sp, #4]
     3b8:	mov	r2, r8
     3bc:	ldr	r3, [sp, #12]
     3c0:	mov	r1, r4
     3c4:	mov	r0, fp
     3c8:	bl	0 <find_minlength>
     3cc:	cmp	r0, #0
     3d0:	blt	404 <find_minlength+0x404>
     3d4:	add	r5, r5, r0
     3d8:	mov	r1, r4
     3dc:	ldrb	r2, [r1, #1]
     3e0:	ldrb	r3, [r1, #2]
     3e4:	orr	r3, r3, r2, lsl #8
     3e8:	ldrb	r3, [r1, r3]!
     3ec:	cmp	r3, #119	; 0x77
     3f0:	beq	3dc <find_minlength+0x3dc>
     3f4:	add	r4, r1, #3
     3f8:	ldrb	r3, [r1, #3]
     3fc:	b	78 <find_minlength+0x78>
     400:	mvn	r0, #0
     404:	add	sp, sp, #44	; 0x2c
     408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     40c:	mov	r3, r4
     410:	add	r4, r3, #1
     414:	add	r5, r5, #1
     418:	ldrb	r3, [r3, #1]
     41c:	b	78 <find_minlength+0x78>
     420:	ldr	r2, [pc, #1304]	; 940 <find_minlength+0x940>
     424:	ldrb	r1, [r2, r3]
     428:	add	r1, r4, r1
     42c:	ldrb	r2, [r1, #1]
     430:	ldrb	r3, [r1, #2]
     434:	orr	r3, r3, r2, lsl #8
     438:	ldrb	r3, [r1, r3]!
     43c:	cmp	r3, #119	; 0x77
     440:	beq	42c <find_minlength+0x42c>
     444:	add	r4, r1, #3
     448:	ldrb	r3, [r1, #3]
     44c:	b	78 <find_minlength+0x78>
     450:	add	r3, r4, #2
     454:	b	410 <find_minlength+0x410>
     458:	ldr	r1, [sp, #28]
     45c:	cmp	r1, #0
     460:	blt	480 <find_minlength+0x480>
     464:	ldr	r2, [sp, #16]
     468:	eor	r2, r2, #1
     46c:	cmp	r1, r5
     470:	movle	r2, #0
     474:	andgt	r2, r2, #1
     478:	cmp	r2, #0
     47c:	moveq	r5, r1
     480:	cmp	r3, #119	; 0x77
     484:	bne	92c <find_minlength+0x92c>
     488:	str	r5, [sp, #28]
     48c:	mov	r5, #0
     490:	ldrb	r3, [r4, #3]
     494:	str	r5, [sp, #16]
     498:	add	r4, r4, #3
     49c:	b	78 <find_minlength+0x78>
     4a0:	ldrb	r2, [r4, #1]
     4a4:	sub	r2, r2, #15
     4a8:	cmp	r2, #1
     4ac:	bls	348 <find_minlength+0x348>
     4b0:	ldr	r2, [pc, #1160]	; 940 <find_minlength+0x940>
     4b4:	ldrb	r3, [r2, r3]
     4b8:	ldrb	r3, [r4, r3]!
     4bc:	b	78 <find_minlength+0x78>
     4c0:	ldrb	r1, [r4, #1]
     4c4:	ldrb	r2, [r4, #2]
     4c8:	ldrb	r3, [r4, #4]
     4cc:	add	r4, r4, #4
     4d0:	orr	r2, r2, r1, lsl #8
     4d4:	add	r5, r2, r5
     4d8:	b	78 <find_minlength+0x78>
     4dc:	ldr	r2, [pc, #1116]	; 940 <find_minlength+0x940>
     4e0:	ldrb	r3, [r2, r3]
     4e4:	ldrb	r2, [r4, #1]
     4e8:	add	r3, r3, r2
     4ec:	ldrb	r3, [r4, r3]!
     4f0:	b	78 <find_minlength+0x78>
     4f4:	ldrb	r3, [r4, #2]
     4f8:	add	r5, r5, #1
     4fc:	add	r4, r4, #2
     500:	b	78 <find_minlength+0x78>
     504:	ldrb	r2, [r4, #1]
     508:	ldrb	r3, [r4, #2]
     50c:	orr	r3, r3, r2, lsl #8
     510:	add	r2, r4, r3
     514:	ldrb	r3, [r4, r3]
     518:	cmp	r3, #119	; 0x77
     51c:	beq	3ac <find_minlength+0x3ac>
     520:	add	r4, r2, #3
     524:	ldrb	r3, [r2, #3]
     528:	b	78 <find_minlength+0x78>
     52c:	ldrb	r3, [r4, #1]
     530:	ldrb	ip, [r4, #2]
     534:	orr	ip, ip, r3, lsl #8
     538:	add	ip, r8, ip
     53c:	mov	r1, ip
     540:	ldrb	r2, [r1, #1]
     544:	ldrb	r3, [r1, #2]
     548:	orr	r3, r3, r2, lsl #8
     54c:	ldrb	r3, [r1, r3]!
     550:	cmp	r3, #119	; 0x77
     554:	beq	540 <find_minlength+0x540>
     558:	cmp	r4, ip
     55c:	movls	r3, #0
     560:	movhi	r3, #1
     564:	cmp	r4, r1
     568:	movcs	r3, #0
     56c:	cmp	r3, #0
     570:	bne	7cc <find_minlength+0x7cc>
     574:	cmp	r7, #0
     578:	beq	5a8 <find_minlength+0x5a8>
     57c:	ldr	r3, [r7, #4]
     580:	cmp	ip, r3
     584:	beq	7cc <find_minlength+0x7cc>
     588:	mov	r3, r7
     58c:	b	59c <find_minlength+0x59c>
     590:	ldr	r2, [r3, #4]
     594:	cmp	ip, r2
     598:	beq	7cc <find_minlength+0x7cc>
     59c:	ldr	r3, [r3]
     5a0:	cmp	r3, #0
     5a4:	bne	590 <find_minlength+0x590>
     5a8:	ldr	r3, [sp, #84]	; 0x54
     5ac:	mov	r1, ip
     5b0:	str	r3, [sp, #4]
     5b4:	add	r3, sp, #32
     5b8:	str	r3, [sp]
     5bc:	mov	r2, r8
     5c0:	ldr	r3, [sp, #12]
     5c4:	mov	r0, fp
     5c8:	str	r7, [sp, #32]
     5cc:	str	ip, [sp, #36]	; 0x24
     5d0:	bl	0 <find_minlength>
     5d4:	add	r5, r5, r0
     5d8:	b	7d4 <find_minlength+0x7d4>
     5dc:	ldr	r3, [sp, #12]
     5e0:	ands	r3, r3, #33554432	; 0x2000000
     5e4:	str	r3, [sp, #24]
     5e8:	bne	7e8 <find_minlength+0x7e8>
     5ec:	ldrb	r3, [r4, #1]
     5f0:	ldrb	r6, [r4, #2]
     5f4:	ldrh	r1, [fp, #36]	; 0x24
     5f8:	ldrh	r2, [fp, #34]	; 0x22
     5fc:	orr	r6, r6, r3, lsl #8
     600:	ldrb	r3, [r4, #3]
     604:	ldrb	r9, [r4, #4]
     608:	mla	r6, r1, r6, r2
     60c:	orr	r9, r9, r3, lsl #8
     610:	cmp	r9, #0
     614:	add	r6, fp, r6
     618:	sub	r9, r9, #1
     61c:	beq	934 <find_minlength+0x934>
     620:	mvn	sl, #-2147483648	; 0x80000000
     624:	ldrb	r2, [r6]
     628:	ldrb	r3, [r6, #1]
     62c:	ldr	r1, [sp, #20]
     630:	mov	r0, r8
     634:	orr	r2, r3, r2, lsl #8
     638:	bl	0 <coda__pcre_find_bracket>
     63c:	subs	ip, r0, #0
     640:	beq	908 <find_minlength+0x908>
     644:	mov	r1, ip
     648:	ldrb	r2, [r1, #1]
     64c:	ldrb	r3, [r1, #2]
     650:	orr	r3, r3, r2, lsl #8
     654:	ldrb	r3, [r1, r3]!
     658:	cmp	r3, #119	; 0x77
     65c:	beq	648 <find_minlength+0x648>
     660:	cmp	r4, ip
     664:	movls	r3, #0
     668:	movhi	r3, #1
     66c:	cmp	r4, r1
     670:	movcs	r3, #0
     674:	cmp	r3, #0
     678:	bne	7bc <find_minlength+0x7bc>
     67c:	cmp	r7, #0
     680:	beq	6b0 <find_minlength+0x6b0>
     684:	ldr	r3, [r7, #4]
     688:	cmp	ip, r3
     68c:	beq	7bc <find_minlength+0x7bc>
     690:	mov	r3, r7
     694:	b	6a4 <find_minlength+0x6a4>
     698:	ldr	r2, [r3, #4]
     69c:	cmp	ip, r2
     6a0:	beq	7bc <find_minlength+0x7bc>
     6a4:	ldr	r3, [r3]
     6a8:	cmp	r3, #0
     6ac:	bne	698 <find_minlength+0x698>
     6b0:	ldr	r3, [sp, #84]	; 0x54
     6b4:	mov	r1, ip
     6b8:	str	r3, [sp, #4]
     6bc:	add	r3, sp, #32
     6c0:	str	r3, [sp]
     6c4:	mov	r2, r8
     6c8:	ldr	r3, [sp, #12]
     6cc:	mov	r0, fp
     6d0:	str	r7, [sp, #32]
     6d4:	str	ip, [sp, #36]	; 0x24
     6d8:	bl	0 <find_minlength>
     6dc:	ldrh	r3, [fp, #36]	; 0x24
     6e0:	sub	r9, r9, #1
     6e4:	add	r6, r6, r3
     6e8:	cmp	sl, r0
     6ec:	movge	sl, r0
     6f0:	cmn	r9, #1
     6f4:	bne	624 <find_minlength+0x624>
     6f8:	str	sl, [sp, #24]
     6fc:	b	7c4 <find_minlength+0x7c4>
     700:	ldrb	r3, [r4, #3]
     704:	ldrb	r1, [r4, #1]
     708:	ldrb	r2, [r4, #2]
     70c:	sub	r3, r3, #15
     710:	cmp	r3, #1
     714:	movhi	r3, #4
     718:	movls	r3, #6
     71c:	orr	r2, r2, r1, lsl #8
     720:	ldrb	r3, [r4, r3]!
     724:	add	r5, r2, r5
     728:	b	78 <find_minlength+0x78>
     72c:	ldrb	r3, [r4, #1]
     730:	add	r5, r5, #1
     734:	sub	r3, r3, #15
     738:	cmp	r3, #1
     73c:	movhi	r3, #2
     740:	movls	r3, #4
     744:	ldrb	r3, [r4, r3]!
     748:	b	78 <find_minlength+0x78>
     74c:	ldr	r3, [sp, #12]
     750:	ands	r3, r3, #33554432	; 0x2000000
     754:	str	r3, [sp, #24]
     758:	movne	r3, #0
     75c:	strne	r3, [sp, #24]
     760:	beq	83c <find_minlength+0x83c>
     764:	add	r4, r4, #3
     768:	ldrb	r3, [r4]
     76c:	sub	r2, r3, #98	; 0x62
     770:	uxtb	r2, r2
     774:	cmp	r2, #11
     778:	bhi	7a4 <find_minlength+0x7a4>
     77c:	mov	r1, #1
     780:	lsl	r2, r1, r2
     784:	ldr	r1, [pc, #440]	; 944 <find_minlength+0x944>
     788:	tst	r2, r1
     78c:	bne	7f4 <find_minlength+0x7f4>
     790:	tst	r2, #2240	; 0x8c0
     794:	bne	810 <find_minlength+0x810>
     798:	tst	r2, #524	; 0x20c
     79c:	ldrbne	r3, [r4, #1]
     7a0:	addne	r4, r4, #1
     7a4:	ldr	r2, [sp, #24]
     7a8:	add	r5, r5, r2
     7ac:	b	78 <find_minlength+0x78>
     7b0:	mvn	r0, #2
     7b4:	add	sp, sp, #44	; 0x2c
     7b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     7bc:	mov	r3, #1
     7c0:	str	r3, [sp, #16]
     7c4:	add	r4, r4, #5
     7c8:	b	768 <find_minlength+0x768>
     7cc:	mov	r3, #1
     7d0:	str	r3, [sp, #16]
     7d4:	ldrb	r3, [r4, #3]
     7d8:	add	r4, r4, #3
     7dc:	b	78 <find_minlength+0x78>
     7e0:	add	r5, r5, #1
     7e4:	b	78 <find_minlength+0x78>
     7e8:	mov	r3, #0
     7ec:	str	r3, [sp, #24]
     7f0:	b	7c4 <find_minlength+0x7c4>
     7f4:	mov	r2, #0
     7f8:	str	r2, [sp, #24]
     7fc:	ldr	r2, [sp, #24]
     800:	ldrb	r3, [r4, #1]
     804:	add	r5, r5, r2
     808:	add	r4, r4, #1
     80c:	b	78 <find_minlength+0x78>
     810:	ldrb	r1, [r4, #1]
     814:	ldrb	r2, [r4, #2]
     818:	ldrb	r3, [r4, #5]
     81c:	add	r4, r4, #5
     820:	orr	r2, r2, r1, lsl #8
     824:	ldr	r1, [sp, #24]
     828:	mul	r2, r2, r1
     82c:	str	r2, [sp, #24]
     830:	ldr	r2, [sp, #24]
     834:	add	r5, r5, r2
     838:	b	78 <find_minlength+0x78>
     83c:	ldrb	r2, [r4, #1]
     840:	ldrb	r3, [r4, #2]
     844:	ldr	r1, [sp, #20]
     848:	mov	r0, r8
     84c:	orr	r2, r3, r2, lsl #8
     850:	bl	0 <coda__pcre_find_bracket>
     854:	subs	ip, r0, #0
     858:	beq	908 <find_minlength+0x908>
     85c:	mov	r1, ip
     860:	ldrb	r2, [r1, #1]
     864:	ldrb	r3, [r1, #2]
     868:	orr	r3, r3, r2, lsl #8
     86c:	ldrb	r3, [r1, r3]!
     870:	cmp	r3, #119	; 0x77
     874:	beq	860 <find_minlength+0x860>
     878:	cmp	r4, ip
     87c:	movls	r3, #0
     880:	movhi	r3, #1
     884:	cmp	r4, r1
     888:	movcs	r3, #0
     88c:	cmp	r3, #0
     890:	bne	8fc <find_minlength+0x8fc>
     894:	cmp	r7, #0
     898:	beq	8c8 <find_minlength+0x8c8>
     89c:	ldr	r3, [r7, #4]
     8a0:	cmp	ip, r3
     8a4:	beq	8fc <find_minlength+0x8fc>
     8a8:	mov	r3, r7
     8ac:	b	8bc <find_minlength+0x8bc>
     8b0:	ldr	r2, [r3, #4]
     8b4:	cmp	ip, r2
     8b8:	beq	8fc <find_minlength+0x8fc>
     8bc:	ldr	r3, [r3]
     8c0:	cmp	r3, #0
     8c4:	bne	8b0 <find_minlength+0x8b0>
     8c8:	ldr	r3, [sp, #84]	; 0x54
     8cc:	mov	r1, ip
     8d0:	str	r3, [sp, #4]
     8d4:	add	r3, sp, #32
     8d8:	str	r3, [sp]
     8dc:	mov	r2, r8
     8e0:	ldr	r3, [sp, #12]
     8e4:	mov	r0, fp
     8e8:	str	r7, [sp, #32]
     8ec:	str	ip, [sp, #36]	; 0x24
     8f0:	bl	0 <find_minlength>
     8f4:	str	r0, [sp, #24]
     8f8:	b	764 <find_minlength+0x764>
     8fc:	mov	r3, #1
     900:	str	r3, [sp, #16]
     904:	b	764 <find_minlength+0x764>
     908:	mvn	r0, #1
     90c:	b	404 <find_minlength+0x404>
     910:	ldrb	r1, [r4, #1]
     914:	ldrb	r2, [r4, #2]
     918:	ldrb	r3, [r4, #5]
     91c:	add	r4, r4, #5
     920:	orr	r2, r2, r1, lsl #8
     924:	add	r5, r2, r5
     928:	b	78 <find_minlength+0x78>
     92c:	mov	r0, r5
     930:	b	404 <find_minlength+0x404>
     934:	mvn	r3, #-2147483648	; 0x80000000
     938:	str	r3, [sp, #24]
     93c:	b	7c4 <find_minlength+0x7c4>
     940:	.word	0x00000000
     944:	.word	0x00000533

00000948 <set_table_bit.isra.0.constprop.3>:
     948:	ldrb	ip, [r1]
     94c:	push	{r4, r5, lr}
     950:	mov	r4, #1
     954:	and	r5, ip, #7
     958:	ldrb	lr, [r0, ip, lsr #3]
     95c:	orr	lr, lr, r4, lsl r5
     960:	strb	lr, [r0, ip, lsr #3]
     964:	ldr	r3, [r3]
     968:	ldrb	r3, [r3, ip]
     96c:	tst	r3, #2
     970:	beq	990 <set_table_bit.isra.0.constprop.3+0x48>
     974:	ldr	r3, [r2]
     978:	ldrb	r3, [r3, ip]
     97c:	and	ip, r3, #7
     980:	lsr	r3, r3, #3
     984:	ldrb	r2, [r0, r3]
     988:	orr	r4, r2, r4, lsl ip
     98c:	strb	r4, [r0, r3]
     990:	add	r0, r1, #1
     994:	pop	{r4, r5, pc}

00000998 <set_start_bits>:
     998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     99c:	mov	r6, r1
     9a0:	ldrb	r1, [r0]
     9a4:	mov	sl, #1
     9a8:	sub	sp, sp, #12
     9ac:	mov	r8, r0
     9b0:	add	r7, r6, #31
     9b4:	mov	r9, sl
     9b8:	mov	r5, r3
     9bc:	add	fp, r3, #12
     9c0:	add	r3, r3, #4
     9c4:	str	r2, [sp, #4]
     9c8:	str	r3, [sp]
     9cc:	add	r3, r1, #118	; 0x76
     9d0:	add	r1, r1, #123	; 0x7b
     9d4:	uxtb	r3, r3
     9d8:	uxtb	r1, r1
     9dc:	cmp	r1, #1
     9e0:	cmphi	r3, #1
     9e4:	addhi	r4, r8, #3
     9e8:	addls	r4, r8, #5
     9ec:	ldrb	r3, [r4]
     9f0:	cmp	r3, #161	; 0xa1
     9f4:	ldrls	pc, [pc, r3, lsl #2]
     9f8:	b	10a8 <set_start_bits+0x710>
     9fc:	.word	0x00000d58
     a00:	.word	0x00000d58
     a04:	.word	0x00000d58
     a08:	.word	0x00000d58
     a0c:	.word	0x00000ca4
     a10:	.word	0x00000ca4
     a14:	.word	0x00001054
     a18:	.word	0x00001028
     a1c:	.word	0x00000ff8
     a20:	.word	0x00000fcc
     a24:	.word	0x00000f9c
     a28:	.word	0x00000f70
     a2c:	.word	0x00000d58
     a30:	.word	0x00000d58
     a34:	.word	0x00000d58
     a38:	.word	0x00000d58
     a3c:	.word	0x00000f20
     a40:	.word	0x00000f04
     a44:	.word	0x00000d58
     a48:	.word	0x00000edc
     a4c:	.word	0x00000d58
     a50:	.word	0x00000f04
     a54:	.word	0x00000d58
     a58:	.word	0x00000d58
     a5c:	.word	0x00000d58
     a60:	.word	0x00000d58
     a64:	.word	0x00000d58
     a68:	.word	0x00000d58
     a6c:	.word	0x00000d58
     a70:	.word	0x00000d40
     a74:	.word	0x00000d08
     a78:	.word	0x00000d58
     a7c:	.word	0x00000d58
     a80:	.word	0x00000ec0
     a84:	.word	0x00000ec0
     a88:	.word	0x00000d40
     a8c:	.word	0x00000d40
     a90:	.word	0x00000ec0
     a94:	.word	0x00000ec0
     a98:	.word	0x00000ea4
     a9c:	.word	0x00000ea4
     aa0:	.word	0x00000d3c
     aa4:	.word	0x00000ec0
     aa8:	.word	0x00000d40
     aac:	.word	0x00000ec0
     ab0:	.word	0x00000ea4
     ab4:	.word	0x00000e9c
     ab8:	.word	0x00000e9c
     abc:	.word	0x00000d08
     ac0:	.word	0x00000d08
     ac4:	.word	0x00000e9c
     ac8:	.word	0x00000e9c
     acc:	.word	0x00000e80
     ad0:	.word	0x00000e80
     ad4:	.word	0x00000d04
     ad8:	.word	0x00000e9c
     adc:	.word	0x00000d08
     ae0:	.word	0x00000e9c
     ae4:	.word	0x00000e80
     ae8:	.word	0x00000d58
     aec:	.word	0x00000d58
     af0:	.word	0x00000d58
     af4:	.word	0x00000d58
     af8:	.word	0x00000d58
     afc:	.word	0x00000d58
     b00:	.word	0x00000d58
     b04:	.word	0x00000d58
     b08:	.word	0x00000d58
     b0c:	.word	0x00000d58
     b10:	.word	0x00000d58
     b14:	.word	0x00000d58
     b18:	.word	0x00000d58
     b1c:	.word	0x00000d58
     b20:	.word	0x00000d58
     b24:	.word	0x00000d58
     b28:	.word	0x00000d58
     b2c:	.word	0x00000d58
     b30:	.word	0x00000d58
     b34:	.word	0x00000d58
     b38:	.word	0x00000d58
     b3c:	.word	0x00000d58
     b40:	.word	0x00000d58
     b44:	.word	0x00000d58
     b48:	.word	0x00000d58
     b4c:	.word	0x00000d58
     b50:	.word	0x00000cb0
     b54:	.word	0x00000cb0
     b58:	.word	0x00000ca4
     b5c:	.word	0x00000ca4
     b60:	.word	0x00000cb0
     b64:	.word	0x00000cb0
     b68:	.word	0x00000cac
     b6c:	.word	0x00000cac
     b70:	.word	0x00000c9c
     b74:	.word	0x00000cb0
     b78:	.word	0x00000ca4
     b7c:	.word	0x00000cb0
     b80:	.word	0x00000cac
     b84:	.word	0x000010a8
     b88:	.word	0x000010a8
     b8c:	.word	0x000010a8
     b90:	.word	0x000010a8
     b94:	.word	0x000010a8
     b98:	.word	0x000010a8
     b9c:	.word	0x000010a8
     ba0:	.word	0x000010a8
     ba4:	.word	0x000010a8
     ba8:	.word	0x000010a8
     bac:	.word	0x000010a8
     bb0:	.word	0x000010a8
     bb4:	.word	0x00000d88
     bb8:	.word	0x00000d88
     bbc:	.word	0x000010a8
     bc0:	.word	0x00000d58
     bc4:	.word	0x00000d58
     bc8:	.word	0x00000d58
     bcc:	.word	0x00000d58
     bd0:	.word	0x00000d58
     bd4:	.word	0x00000d80
     bd8:	.word	0x00000d78
     bdc:	.word	0x00000d68
     be0:	.word	0x00000d68
     be4:	.word	0x00000d68
     be8:	.word	0x00000d68
     bec:	.word	0x00000d58
     bf0:	.word	0x00000dec
     bf4:	.word	0x00000c84
     bf8:	.word	0x00000c84
     bfc:	.word	0x00000c84
     c00:	.word	0x00000dec
     c04:	.word	0x00000dec
     c08:	.word	0x00000dec
     c0c:	.word	0x00000dec
     c10:	.word	0x00000dec
     c14:	.word	0x00000dec
     c18:	.word	0x00000d58
     c1c:	.word	0x00000dec
     c20:	.word	0x00000dec
     c24:	.word	0x00000dec
     c28:	.word	0x00000dec
     c2c:	.word	0x00000d58
     c30:	.word	0x00000d58
     c34:	.word	0x00000d58
     c38:	.word	0x00000d58
     c3c:	.word	0x00000d58
     c40:	.word	0x00000d58
     c44:	.word	0x00000e38
     c48:	.word	0x00000e38
     c4c:	.word	0x00000e38
     c50:	.word	0x00000d58
     c54:	.word	0x00000d58
     c58:	.word	0x00000d58
     c5c:	.word	0x00000d58
     c60:	.word	0x00000d58
     c64:	.word	0x00000d58
     c68:	.word	0x00000d58
     c6c:	.word	0x00000d58
     c70:	.word	0x00000d58
     c74:	.word	0x00000d58
     c78:	.word	0x00000d58
     c7c:	.word	0x00000d58
     c80:	.word	0x00001084
     c84:	ldrb	r2, [r4, #1]
     c88:	ldrb	r3, [r4, #2]
     c8c:	orr	r3, r3, r2, lsl #8
     c90:	ldrb	r3, [r4, r3]!
     c94:	cmp	r3, #119	; 0x77
     c98:	beq	c84 <set_start_bits+0x2ec>
     c9c:	add	r4, r4, #3
     ca0:	b	9ec <set_start_bits+0x54>
     ca4:	add	r4, r4, #1
     ca8:	b	9ec <set_start_bits+0x54>
     cac:	add	r4, r4, #2
     cb0:	ldrb	r3, [r4, #1]
     cb4:	sub	r3, r3, #6
     cb8:	cmp	r3, #15
     cbc:	ldrls	pc, [pc, r3, lsl #2]
     cc0:	b	d58 <set_start_bits+0x3c0>
     cc4:	.word	0x00001158
     cc8:	.word	0x000010b8
     ccc:	.word	0x000011e4
     cd0:	.word	0x00001188
     cd4:	.word	0x000011b4
     cd8:	.word	0x000010e8
     cdc:	.word	0x00000d58
     ce0:	.word	0x00000d58
     ce4:	.word	0x00000d58
     ce8:	.word	0x00000d58
     cec:	.word	0x00000d58
     cf0:	.word	0x00001114
     cf4:	.word	0x00000d58
     cf8:	.word	0x00001130
     cfc:	.word	0x00000d58
     d00:	.word	0x00001114
     d04:	add	r4, r4, #2
     d08:	add	r1, r4, #1
     d0c:	mov	r3, fp
     d10:	ldr	r2, [sp]
     d14:	mov	r0, r6
     d18:	bl	948 <set_table_bit.isra.0.constprop.3>
     d1c:	ldrb	r2, [r8, #1]
     d20:	ldrb	r3, [r8, #2]
     d24:	orr	r3, r3, r2, lsl #8
     d28:	ldrb	r1, [r8, r3]!
     d2c:	cmp	r1, #119	; 0x77
     d30:	beq	9cc <set_start_bits+0x34>
     d34:	mov	r3, sl
     d38:	b	d5c <set_start_bits+0x3c4>
     d3c:	add	r4, r4, #2
     d40:	ldrb	r3, [r4, #1]
     d44:	and	r1, r3, #7
     d48:	ldrb	r2, [r6, r3, lsr #3]
     d4c:	orr	r2, r2, r9, lsl r1
     d50:	strb	r2, [r6, r3, lsr #3]
     d54:	b	d1c <set_start_bits+0x384>
     d58:	mov	r3, #0
     d5c:	mov	r0, r3
     d60:	add	sp, sp, #12
     d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d68:	mov	r3, #2
     d6c:	mov	r0, r3
     d70:	add	sp, sp, #12
     d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d78:	mov	sl, #2
     d7c:	b	d1c <set_start_bits+0x384>
     d80:	add	r4, r4, #6
     d84:	b	9ec <set_start_bits+0x54>
     d88:	sub	r1, r6, #1
     d8c:	mov	r0, r4
     d90:	ldrb	r3, [r1, #1]
     d94:	ldrb	r2, [r0, #1]!
     d98:	orr	r3, r3, r2
     d9c:	strb	r3, [r1, #1]!
     da0:	cmp	r7, r1
     da4:	bne	d90 <set_start_bits+0x3f8>
     da8:	ldrb	r3, [r4, #33]	; 0x21
     dac:	sub	r3, r3, #98	; 0x62
     db0:	uxtb	r3, r3
     db4:	cmp	r3, #11
     db8:	bhi	d1c <set_start_bits+0x384>
     dbc:	lsl	r3, r9, r3
     dc0:	ldr	r2, [pc, #1108]	; 121c <set_start_bits+0x884>
     dc4:	tst	r3, r2
     dc8:	bne	1214 <set_start_bits+0x87c>
     dcc:	tst	r3, #2240	; 0x8c0
     dd0:	beq	d1c <set_start_bits+0x384>
     dd4:	ldrb	r2, [r4, #34]	; 0x22
     dd8:	ldrb	r3, [r4, #35]	; 0x23
     ddc:	orrs	r3, r3, r2, lsl #8
     de0:	bne	d1c <set_start_bits+0x384>
     de4:	add	r4, r4, #38	; 0x26
     de8:	b	9ec <set_start_bits+0x54>
     dec:	mov	r3, r5
     df0:	ldr	r2, [sp, #4]
     df4:	mov	r1, r6
     df8:	mov	r0, r4
     dfc:	bl	998 <set_start_bits>
     e00:	cmp	r0, #3
     e04:	cmpne	r0, #0
     e08:	mov	r3, r0
     e0c:	beq	d5c <set_start_bits+0x3c4>
     e10:	cmp	r0, #1
     e14:	beq	d1c <set_start_bits+0x384>
     e18:	ldrb	r2, [r4, #1]
     e1c:	ldrb	r3, [r4, #2]
     e20:	orr	r3, r3, r2, lsl #8
     e24:	ldrb	r3, [r4, r3]!
     e28:	cmp	r3, #119	; 0x77
     e2c:	beq	e18 <set_start_bits+0x480>
     e30:	add	r4, r4, #3
     e34:	b	9ec <set_start_bits+0x54>
     e38:	add	r4, r4, #1
     e3c:	mov	r3, r5
     e40:	mov	r0, r4
     e44:	ldr	r2, [sp, #4]
     e48:	mov	r1, r6
     e4c:	bl	998 <set_start_bits>
     e50:	cmp	r0, #3
     e54:	cmpne	r0, #0
     e58:	mov	r3, r0
     e5c:	beq	d5c <set_start_bits+0x3c4>
     e60:	ldrb	r2, [r4, #1]
     e64:	ldrb	r3, [r4, #2]
     e68:	orr	r3, r3, r2, lsl #8
     e6c:	ldrb	r3, [r4, r3]!
     e70:	cmp	r3, #119	; 0x77
     e74:	beq	e60 <set_start_bits+0x4c8>
     e78:	add	r4, r4, #3
     e7c:	b	9ec <set_start_bits+0x54>
     e80:	add	r1, r4, #3
     e84:	mov	r3, fp
     e88:	ldr	r2, [sp]
     e8c:	mov	r0, r6
     e90:	bl	948 <set_table_bit.isra.0.constprop.3>
     e94:	mov	r4, r0
     e98:	b	9ec <set_start_bits+0x54>
     e9c:	add	r1, r4, #1
     ea0:	b	e84 <set_start_bits+0x4ec>
     ea4:	ldrb	r3, [r4, #3]
     ea8:	add	r4, r4, #4
     eac:	and	r1, r3, #7
     eb0:	ldrb	r2, [r6, r3, lsr #3]
     eb4:	orr	r2, r2, r9, lsl r1
     eb8:	strb	r2, [r6, r3, lsr #3]
     ebc:	b	9ec <set_start_bits+0x54>
     ec0:	ldrb	r3, [r4, #1]
     ec4:	add	r4, r4, #2
     ec8:	and	r1, r3, #7
     ecc:	ldrb	r2, [r6, r3, lsr #3]
     ed0:	orr	r2, r2, r9, lsl r1
     ed4:	strb	r2, [r6, r3, lsr #3]
     ed8:	b	9ec <set_start_bits+0x54>
     edc:	ldrb	r1, [r6, #1]
     ee0:	ldrb	r2, [r6, #4]
     ee4:	ldrb	r3, [r6, #20]
     ee8:	orr	r1, r1, #2
     eec:	orr	r2, r2, #1
     ef0:	orr	r3, r3, #1
     ef4:	strb	r1, [r6, #1]
     ef8:	strb	r2, [r6, #4]
     efc:	strb	r3, [r6, #20]
     f00:	b	d1c <set_start_bits+0x384>
     f04:	ldrb	r2, [r6, #1]
     f08:	ldrb	r3, [r6, #16]
     f0c:	orr	r2, r2, #60	; 0x3c
     f10:	orr	r3, r3, #32
     f14:	strb	r2, [r6, #1]
     f18:	strb	r3, [r6, #16]
     f1c:	b	d1c <set_start_bits+0x384>
     f20:	ldrb	r3, [r4, #1]
     f24:	cmp	r3, #9
     f28:	bne	d58 <set_start_bits+0x3c0>
     f2c:	ldrb	r0, [r4, #2]
     f30:	ldr	r3, [pc, #744]	; 1220 <set_start_bits+0x888>
     f34:	mvn	ip, #127	; 0x7f
     f38:	add	r0, r3, r0, lsl #2
     f3c:	b	f5c <set_start_bits+0x5c4>
     f40:	cmp	r3, #255	; 0xff
     f44:	ldrbls	r2, [r6, r3, lsr #3]
     f48:	ldrbhi	r3, [r6, #31]
     f4c:	orrls	r2, r2, r9, lsl r1
     f50:	orrhi	r3, r3, ip
     f54:	strbhi	r3, [r6, #31]
     f58:	strbls	r2, [r6, r3, lsr #3]
     f5c:	ldr	r3, [r0], #4
     f60:	cmn	r3, #1
     f64:	and	r1, r3, #7
     f68:	bne	f40 <set_start_bits+0x5a8>
     f6c:	b	d1c <set_start_bits+0x384>
     f70:	sub	r0, r6, #1
     f74:	mov	r1, #160	; 0xa0
     f78:	ldr	r3, [r5, #8]
     f7c:	ldrb	r2, [r0, #1]
     f80:	ldrb	r3, [r3, r1]
     f84:	add	r1, r1, #1
     f88:	cmp	r1, #192	; 0xc0
     f8c:	orr	r3, r3, r2
     f90:	strb	r3, [r0, #1]!
     f94:	bne	f78 <set_start_bits+0x5e0>
     f98:	b	d1c <set_start_bits+0x384>
     f9c:	sub	r0, r6, #1
     fa0:	mov	r1, #160	; 0xa0
     fa4:	ldr	r3, [r5, #8]
     fa8:	ldrb	r2, [r0, #1]
     fac:	ldrb	r3, [r3, r1]
     fb0:	add	r1, r1, #1
     fb4:	cmp	r1, #192	; 0xc0
     fb8:	mvn	r3, r3
     fbc:	orr	r3, r3, r2
     fc0:	strb	r3, [r0, #1]!
     fc4:	bne	fa4 <set_start_bits+0x60c>
     fc8:	b	d1c <set_start_bits+0x384>
     fcc:	sub	r0, r6, #1
     fd0:	mov	r1, #0
     fd4:	ldr	r3, [r5, #8]
     fd8:	ldrb	r2, [r0, #1]
     fdc:	ldrb	r3, [r3, r1]
     fe0:	add	r1, r1, #1
     fe4:	cmp	r1, #32
     fe8:	orr	r3, r3, r2
     fec:	strb	r3, [r0, #1]!
     ff0:	bne	fd4 <set_start_bits+0x63c>
     ff4:	b	d1c <set_start_bits+0x384>
     ff8:	sub	r0, r6, #1
     ffc:	mov	r1, #0
    1000:	ldr	r3, [r5, #8]
    1004:	ldrb	r2, [r0, #1]
    1008:	ldrb	r3, [r3, r1]
    100c:	add	r1, r1, #1
    1010:	cmp	r1, #32
    1014:	mvn	r3, r3
    1018:	orr	r3, r3, r2
    101c:	strb	r3, [r0, #1]!
    1020:	bne	1000 <set_start_bits+0x668>
    1024:	b	d1c <set_start_bits+0x384>
    1028:	sub	r0, r6, #1
    102c:	mov	r1, #64	; 0x40
    1030:	ldr	r3, [r5, #8]
    1034:	ldrb	r2, [r0, #1]
    1038:	ldrb	r3, [r3, r1]
    103c:	add	r1, r1, #1
    1040:	cmp	r1, #96	; 0x60
    1044:	orr	r3, r3, r2
    1048:	strb	r3, [r0, #1]!
    104c:	bne	1030 <set_start_bits+0x698>
    1050:	b	d1c <set_start_bits+0x384>
    1054:	sub	r0, r6, #1
    1058:	mov	r1, #64	; 0x40
    105c:	ldr	r3, [r5, #8]
    1060:	ldrb	r2, [r0, #1]
    1064:	ldrb	r3, [r3, r1]
    1068:	add	r1, r1, #1
    106c:	cmp	r1, #96	; 0x60
    1070:	mvn	r3, r3
    1074:	orr	r3, r3, r2
    1078:	strb	r3, [r0, #1]!
    107c:	bne	105c <set_start_bits+0x6c4>
    1080:	b	d1c <set_start_bits+0x384>
    1084:	add	r4, r4, #1
    1088:	ldrb	r2, [r4, #1]
    108c:	ldrb	r3, [r4, #2]
    1090:	orr	r3, r3, r2, lsl #8
    1094:	ldrb	r3, [r4, r3]!
    1098:	cmp	r3, #119	; 0x77
    109c:	beq	1088 <set_start_bits+0x6f0>
    10a0:	add	r4, r4, #3
    10a4:	b	9ec <set_start_bits+0x54>
    10a8:	mov	r3, #3
    10ac:	mov	r0, r3
    10b0:	add	sp, sp, #12
    10b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10b8:	sub	r0, r6, #1
    10bc:	mov	r1, #64	; 0x40
    10c0:	ldr	r3, [r5, #8]
    10c4:	ldrb	r2, [r0, #1]
    10c8:	ldrb	r3, [r3, r1]
    10cc:	add	r1, r1, #1
    10d0:	cmp	r1, #96	; 0x60
    10d4:	orr	r3, r3, r2
    10d8:	strb	r3, [r0, #1]!
    10dc:	bne	10c0 <set_start_bits+0x728>
    10e0:	add	r4, r4, #2
    10e4:	b	9ec <set_start_bits+0x54>
    10e8:	sub	r0, r6, #1
    10ec:	mov	r1, #160	; 0xa0
    10f0:	ldr	r3, [r5, #8]
    10f4:	ldrb	r2, [r0, #1]
    10f8:	ldrb	r3, [r3, r1]
    10fc:	add	r1, r1, #1
    1100:	cmp	r1, #192	; 0xc0
    1104:	orr	r3, r3, r2
    1108:	strb	r3, [r0, #1]!
    110c:	bne	10f0 <set_start_bits+0x758>
    1110:	b	10e0 <set_start_bits+0x748>
    1114:	ldrb	r2, [r6, #1]
    1118:	ldrb	r3, [r6, #16]
    111c:	orr	r2, r2, #60	; 0x3c
    1120:	orr	r3, r3, #32
    1124:	strb	r2, [r6, #1]
    1128:	strb	r3, [r6, #16]
    112c:	b	10e0 <set_start_bits+0x748>
    1130:	ldrb	r1, [r6, #1]
    1134:	ldrb	r2, [r6, #4]
    1138:	ldrb	r3, [r6, #20]
    113c:	orr	r1, r1, #2
    1140:	orr	r2, r2, #1
    1144:	orr	r3, r3, #1
    1148:	strb	r1, [r6, #1]
    114c:	strb	r2, [r6, #4]
    1150:	strb	r3, [r6, #20]
    1154:	b	10e0 <set_start_bits+0x748>
    1158:	sub	r0, r6, #1
    115c:	mov	r1, #64	; 0x40
    1160:	ldr	r3, [r5, #8]
    1164:	ldrb	r2, [r0, #1]
    1168:	ldrb	r3, [r3, r1]
    116c:	add	r1, r1, #1
    1170:	cmp	r1, #96	; 0x60
    1174:	mvn	r3, r3
    1178:	orr	r3, r3, r2
    117c:	strb	r3, [r0, #1]!
    1180:	bne	1160 <set_start_bits+0x7c8>
    1184:	b	10e0 <set_start_bits+0x748>
    1188:	sub	r0, r6, #1
    118c:	mov	r1, #0
    1190:	ldr	r3, [r5, #8]
    1194:	ldrb	r2, [r0, #1]
    1198:	ldrb	r3, [r3, r1]
    119c:	add	r1, r1, #1
    11a0:	cmp	r1, #32
    11a4:	orr	r3, r3, r2
    11a8:	strb	r3, [r0, #1]!
    11ac:	bne	1190 <set_start_bits+0x7f8>
    11b0:	b	10e0 <set_start_bits+0x748>
    11b4:	sub	r0, r6, #1
    11b8:	mov	r1, #160	; 0xa0
    11bc:	ldr	r3, [r5, #8]
    11c0:	ldrb	r2, [r0, #1]
    11c4:	ldrb	r3, [r3, r1]
    11c8:	add	r1, r1, #1
    11cc:	cmp	r1, #192	; 0xc0
    11d0:	mvn	r3, r3
    11d4:	orr	r3, r3, r2
    11d8:	strb	r3, [r0, #1]!
    11dc:	bne	11bc <set_start_bits+0x824>
    11e0:	b	10e0 <set_start_bits+0x748>
    11e4:	sub	r0, r6, #1
    11e8:	mov	r1, #0
    11ec:	ldr	r3, [r5, #8]
    11f0:	ldrb	r2, [r0, #1]
    11f4:	ldrb	r3, [r3, r1]
    11f8:	add	r1, r1, #1
    11fc:	cmp	r1, #32
    1200:	mvn	r3, r3
    1204:	orr	r3, r3, r2
    1208:	strb	r3, [r0, #1]!
    120c:	bne	11ec <set_start_bits+0x854>
    1210:	b	10e0 <set_start_bits+0x748>
    1214:	add	r4, r4, #34	; 0x22
    1218:	b	9ec <set_start_bits+0x54>
    121c:	.word	0x00000533
    1220:	.word	0x00000000

00001224 <coda_pcre_study>:
    1224:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1228:	sub	sp, sp, #192	; 0xc0
    122c:	mov	r3, #0
    1230:	subs	r4, r0, #0
    1234:	str	r3, [r2]
    1238:	str	r3, [sp, #8]
    123c:	beq	1360 <coda_pcre_study+0x13c>
    1240:	ldr	ip, [pc, #596]	; 149c <coda_pcre_study+0x278>
    1244:	ldr	lr, [r4]
    1248:	cmp	lr, ip
    124c:	bne	1360 <coda_pcre_study+0x13c>
    1250:	ldr	ip, [r4, #12]
    1254:	ands	lr, ip, #1
    1258:	beq	1438 <coda_pcre_study+0x214>
    125c:	bics	r7, r1, #15
    1260:	bne	1448 <coda_pcre_study+0x224>
    1264:	mov	r8, r2
    1268:	ldrh	r5, [r4, #38]	; 0x26
    126c:	ldrh	r2, [r4, #36]	; 0x24
    1270:	ldrh	r3, [r4, #34]	; 0x22
    1274:	ldr	r9, [r4, #8]
    1278:	mov	r6, r1
    127c:	mla	r5, r2, r5, r3
    1280:	tst	r9, #16
    1284:	add	r5, r4, r5
    1288:	bne	1300 <coda_pcre_study+0xdc>
    128c:	tst	ip, #272	; 0x110
    1290:	bne	1300 <coda_pcre_study+0xdc>
    1294:	ldr	r1, [r4, #48]	; 0x30
    1298:	cmp	r1, #0
    129c:	str	r1, [sp, #12]
    12a0:	beq	146c <coda_pcre_study+0x248>
    12a4:	add	r2, r1, #256	; 0x100
    12a8:	add	ip, r1, #512	; 0x200
    12ac:	add	r3, r1, #832	; 0x340
    12b0:	str	r1, [sp, #48]	; 0x30
    12b4:	str	r2, [sp, #52]	; 0x34
    12b8:	mov	r1, #0
    12bc:	mov	r2, #32
    12c0:	add	r0, sp, #16
    12c4:	str	ip, [sp, #56]	; 0x38
    12c8:	str	r3, [sp, #60]	; 0x3c
    12cc:	bl	0 <memset>
    12d0:	lsr	r2, r9, #11
    12d4:	add	r1, sp, #16
    12d8:	and	r2, r2, #1
    12dc:	add	r3, sp, #48	; 0x30
    12e0:	mov	r0, r5
    12e4:	bl	998 <set_start_bits>
    12e8:	cmp	r0, #3
    12ec:	sub	r7, r0, #1
    12f0:	clz	r7, r7
    12f4:	lsr	r7, r7, #5
    12f8:	beq	148c <coda_pcre_study+0x268>
    12fc:	ldr	r9, [r4, #8]
    1300:	add	r2, sp, #8
    1304:	mov	sl, #0
    1308:	str	r2, [sp, #4]
    130c:	mov	r1, r5
    1310:	mov	r2, r5
    1314:	mov	r3, r9
    1318:	mov	r0, r4
    131c:	str	sl, [sp]
    1320:	bl	0 <find_minlength>
    1324:	cmn	r0, #3
    1328:	mov	r5, r0
    132c:	beq	134c <coda_pcre_study+0x128>
    1330:	cmn	r0, #2
    1334:	bne	1378 <coda_pcre_study+0x154>
    1338:	ldr	r3, [pc, #352]	; 14a0 <coda_pcre_study+0x27c>
    133c:	str	r3, [r8]
    1340:	mov	r0, sl
    1344:	add	sp, sp, #192	; 0xc0
    1348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    134c:	ldr	r3, [pc, #336]	; 14a4 <coda_pcre_study+0x280>
    1350:	mov	r0, sl
    1354:	str	r3, [r8]
    1358:	add	sp, sp, #192	; 0xc0
    135c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1360:	ldr	r3, [pc, #320]	; 14a8 <coda_pcre_study+0x284>
    1364:	mov	sl, #0
    1368:	mov	r0, sl
    136c:	str	r3, [r2]
    1370:	add	sp, sp, #192	; 0xc0
    1374:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1378:	cmp	r0, #0
    137c:	movle	r3, r7
    1380:	orrgt	r3, r7, #1
    1384:	tst	r3, #1
    1388:	bne	1394 <coda_pcre_study+0x170>
    138c:	ands	r4, r6, #8
    1390:	beq	1484 <coda_pcre_study+0x260>
    1394:	ldr	r3, [pc, #272]	; 14ac <coda_pcre_study+0x288>
    1398:	mov	r0, #76	; 0x4c
    139c:	ldr	r3, [r3]
    13a0:	blx	r3
    13a4:	subs	sl, r0, #0
    13a8:	ldreq	r3, [pc, #256]	; 14b0 <coda_pcre_study+0x28c>
    13ac:	streq	r3, [r8]
    13b0:	beq	1340 <coda_pcre_study+0x11c>
    13b4:	mov	r3, sl
    13b8:	mov	r2, #1
    13bc:	mov	r0, #44	; 0x2c
    13c0:	mov	r1, #0
    13c4:	cmp	r7, #0
    13c8:	str	r2, [r3], #32
    13cc:	str	r0, [sl, #32]
    13d0:	str	r3, [sl, #4]
    13d4:	str	r1, [sl, #36]	; 0x24
    13d8:	beq	1458 <coda_pcre_study+0x234>
    13dc:	add	ip, sp, #16
    13e0:	str	r2, [sl, #36]	; 0x24
    13e4:	ldm	ip!, {r0, r1, r2, r3}
    13e8:	add	lr, sl, #40	; 0x28
    13ec:	str	r0, [sl, #40]	; 0x28
    13f0:	str	r1, [sl, #44]	; 0x2c
    13f4:	str	r2, [sl, #48]	; 0x30
    13f8:	str	r3, [sl, #52]	; 0x34
    13fc:	ldm	ip!, {r0, r1, r2, r3}
    1400:	str	r0, [sl, #56]	; 0x38
    1404:	str	r1, [sl, #60]	; 0x3c
    1408:	str	r2, [sl, #64]	; 0x40
    140c:	str	r3, [sl, #68]	; 0x44
    1410:	cmp	r5, #0
    1414:	movle	r3, #0
    1418:	ldrgt	r3, [sl, #36]	; 0x24
    141c:	mov	r0, sl
    1420:	orrgt	r3, r3, #2
    1424:	strgt	r5, [sl, #72]	; 0x48
    1428:	strgt	r3, [sl, #36]	; 0x24
    142c:	strle	r3, [sl, #72]	; 0x48
    1430:	add	sp, sp, #192	; 0xc0
    1434:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1438:	ldr	r3, [pc, #116]	; 14b4 <coda_pcre_study+0x290>
    143c:	mov	sl, lr
    1440:	str	r3, [r2]
    1444:	b	1340 <coda_pcre_study+0x11c>
    1448:	ldr	r1, [pc, #104]	; 14b8 <coda_pcre_study+0x294>
    144c:	mov	sl, r3
    1450:	str	r1, [r2]
    1454:	b	1340 <coda_pcre_study+0x11c>
    1458:	mov	r1, r7
    145c:	mov	r2, #32
    1460:	add	r0, sl, #40	; 0x28
    1464:	bl	0 <memset>
    1468:	b	1410 <coda_pcre_study+0x1ec>
    146c:	add	r3, sp, #12
    1470:	mov	r2, #11
    1474:	bl	0 <coda_pcre_fullinfo>
    1478:	ldr	r1, [sp, #12]
    147c:	ldr	r9, [r4, #8]
    1480:	b	12a4 <coda_pcre_study+0x80>
    1484:	mov	sl, r4
    1488:	b	1340 <coda_pcre_study+0x11c>
    148c:	ldr	r3, [pc, #16]	; 14a4 <coda_pcre_study+0x280>
    1490:	mov	sl, #0
    1494:	str	r3, [r8]
    1498:	b	1340 <coda_pcre_study+0x11c>
    149c:	.word	0x50435245
    14a0:	.word	0x000000a4
    14a4:	.word	0x0000007c
	...
    14b0:	.word	0x000000d0
    14b4:	.word	0x00000030
    14b8:	.word	0x00000054

000014bc <coda_pcre_free_study>:
    14bc:	cmp	r0, #0
    14c0:	bxeq	lr
    14c4:	ldr	r3, [pc, #4]	; 14d0 <coda_pcre_free_study+0x14>
    14c8:	ldr	r3, [r3]
    14cc:	bx	r3
    14d0:	.word	0x00000000
