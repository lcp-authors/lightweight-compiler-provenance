
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_dynamic_type_delete>:
       0:	cmp	r0, #0
       4:	beq	3c <coda_dynamic_type_delete+0x3c>
       8:	ldr	r1, [r0]
       c:	sub	r2, r1, #100	; 0x64
      10:	cmp	r2, #5
      14:	bhi	40 <coda_dynamic_type_delete+0x40>
      18:	add	r1, pc, #0
      1c:	ldr	pc, [r1, r2, lsl #2]
      20:	.word	0x00000038
      24:	.word	0x0000003c
      28:	.word	0x0000003c
      2c:	.word	0x0000004c
      30:	.word	0x00000050
      34:	.word	0x00000054
      38:	b	0 <coda_mem_type_delete>
      3c:	bx	lr
      40:	cmp	r1, #2
      44:	bxcs	lr
      48:	b	0 <coda_type_release>
      4c:	b	0 <coda_cdf_type_delete>
      50:	b	0 <coda_netcdf_type_delete>
      54:	b	0 <coda_grib_type_delete>

00000058 <coda_cursor_compare>:
      58:	push	{r4, r5, fp, lr}
      5c:	add	fp, sp, #8
      60:	ldr	ip, [r1, #4]
      64:	ldr	r2, [r0, #4]
      68:	mov	r4, #0
      6c:	mov	r3, #0
      70:	cmp	ip, #0
      74:	movwgt	r4, #1
      78:	cmp	r2, #1
      7c:	blt	cc <coda_cursor_compare+0x74>
      80:	add	lr, r1, #12
      84:	add	r1, r0, #12
      88:	mov	r0, #1
      8c:	tst	r4, #1
      90:	popeq	{r4, r5, fp, pc}
      94:	cmp	r3, #0
      98:	beq	b4 <coda_cursor_compare+0x5c>
      9c:	ldr	r4, [lr, r3, lsl #4]
      a0:	ldr	r5, [r1, r3, lsl #4]
      a4:	cmp	r5, r4
      a8:	bgt	d0 <coda_cursor_compare+0x78>
      ac:	mvnlt	r0, #0
      b0:	poplt	{r4, r5, fp, pc}
      b4:	add	r3, r3, #1
      b8:	mov	r4, #0
      bc:	cmp	r3, ip
      c0:	movwlt	r4, #1
      c4:	cmp	r3, r2
      c8:	blt	8c <coda_cursor_compare+0x34>
      cc:	rsb	r0, r4, #0
      d0:	pop	{r4, r5, fp, pc}

000000d4 <coda_cursor_print_path>:
      d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
      d8:	add	fp, sp, #28
      dc:	sub	sp, sp, #12
      e0:	mov	r5, r0
      e4:	ldr	r0, [r0, #4]
      e8:	mov	r4, r1
      ec:	cmp	r0, #2
      f0:	bge	10c <coda_cursor_print_path+0x38>
      f4:	movw	r0, #0
      f8:	movt	r0, #0
      fc:	blx	r4
     100:	asr	r0, r0, #31
     104:	sub	sp, fp, #28
     108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     10c:	mov	sl, #0
     110:	add	r6, sp, #8
     114:	add	r9, r5, sl, lsl #4
     118:	ldr	r7, [r9, #28]
     11c:	cmn	r7, #1
     120:	beq	188 <coda_cursor_print_path+0xb4>
     124:	ldr	r8, [r9, #8]
     128:	mov	r1, r6
     12c:	ldr	r0, [r8]
     130:	cmp	r0, #99	; 0x63
     134:	ldrhi	r8, [r8, #4]
     138:	mov	r0, r8
     13c:	bl	0 <coda_type_get_class>
     140:	cmp	r0, #0
     144:	bne	22c <coda_cursor_print_path+0x158>
     148:	ldr	r0, [sp, #8]
     14c:	cmp	r0, #0
     150:	beq	1b0 <coda_cursor_print_path+0xdc>
     154:	cmp	r0, #1
     158:	bne	238 <coda_cursor_print_path+0x164>
     15c:	movw	r0, #0
     160:	movw	r1, #0
     164:	cmp	sl, #0
     168:	movt	r0, #0
     16c:	movt	r1, #0
     170:	moveq	r0, r1
     174:	mov	r1, r7
     178:	blx	r4
     17c:	cmp	r0, #0
     180:	bge	208 <coda_cursor_print_path+0x134>
     184:	b	22c <coda_cursor_print_path+0x158>
     188:	movw	r0, #0
     18c:	movw	r1, #0
     190:	cmp	sl, #0
     194:	movt	r0, #0
     198:	movt	r1, #0
     19c:	moveq	r0, r1
     1a0:	blx	r4
     1a4:	cmp	r0, #0
     1a8:	bge	208 <coda_cursor_print_path+0x134>
     1ac:	b	22c <coda_cursor_print_path+0x158>
     1b0:	mov	r0, r8
     1b4:	mov	r1, r7
     1b8:	add	r2, sp, #4
     1bc:	bl	0 <coda_type_get_record_field_name>
     1c0:	cmp	r0, #0
     1c4:	bne	22c <coda_cursor_print_path+0x158>
     1c8:	cmp	sl, #0
     1cc:	beq	1dc <coda_cursor_print_path+0x108>
     1d0:	ldr	r0, [r9, #12]
     1d4:	cmn	r0, #1
     1d8:	beq	1f0 <coda_cursor_print_path+0x11c>
     1dc:	movw	r0, #0
     1e0:	movt	r0, #0
     1e4:	blx	r4
     1e8:	cmp	r0, #0
     1ec:	blt	22c <coda_cursor_print_path+0x158>
     1f0:	ldr	r1, [sp, #4]
     1f4:	movw	r0, #0
     1f8:	movt	r0, #0
     1fc:	blx	r4
     200:	cmn	r0, #1
     204:	ble	22c <coda_cursor_print_path+0x158>
     208:	ldr	r1, [r5, #4]
     20c:	add	r2, sl, #2
     210:	add	r0, sl, #1
     214:	mov	sl, r0
     218:	cmp	r2, r1
     21c:	blt	114 <coda_cursor_print_path+0x40>
     220:	mov	r0, #0
     224:	sub	sp, fp, #28
     228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     22c:	mvn	r0, #0
     230:	sub	sp, fp, #28
     234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     238:	movw	r0, #0
     23c:	movw	r1, #0
     240:	movw	r3, #0
     244:	movw	r2, #305	; 0x131
     248:	movt	r0, #0
     24c:	movt	r1, #0
     250:	movt	r3, #0
     254:	bl	0 <__assert_fail>

00000258 <coda_cursor_set_product>:
     258:	push	{fp, lr}
     25c:	mov	fp, sp
     260:	cmp	r0, #0
     264:	beq	2b4 <coda_cursor_set_product+0x5c>
     268:	cmp	r1, #0
     26c:	beq	2cc <coda_cursor_set_product+0x74>
     270:	ldr	r2, [r1, #16]
     274:	cmp	r2, #9
     278:	bhi	33c <coda_cursor_set_product+0xe4>
     27c:	add	r3, pc, #0
     280:	ldr	pc, [r3, r2, lsl #2]
     284:	.word	0x000002ac
     288:	.word	0x000002ac
     28c:	.word	0x000002f8
     290:	.word	0x00000308
     294:	.word	0x000002f0
     298:	.word	0x00000324
     29c:	.word	0x0000032c
     2a0:	.word	0x0000031c
     2a4:	.word	0x00000334
     2a8:	.word	0x00000300
     2ac:	pop	{fp, lr}
     2b0:	b	0 <coda_ascbin_cursor_set_product>
     2b4:	movw	r1, #0
     2b8:	movw	r2, #0
     2bc:	mvn	r0, #99	; 0x63
     2c0:	movw	r3, #325	; 0x145
     2c4:	movt	r1, #0
     2c8:	b	2e0 <coda_cursor_set_product+0x88>
     2cc:	movw	r1, #0
     2d0:	movw	r2, #0
     2d4:	mvn	r0, #99	; 0x63
     2d8:	movw	r3, #331	; 0x14b
     2dc:	movt	r1, #0
     2e0:	movt	r2, #0
     2e4:	bl	0 <coda_set_error>
     2e8:	mvn	r0, #0
     2ec:	pop	{fp, pc}
     2f0:	mvn	r0, #12
     2f4:	b	30c <coda_cursor_set_product+0xb4>
     2f8:	pop	{fp, lr}
     2fc:	b	0 <coda_xml_cursor_set_product>
     300:	pop	{fp, lr}
     304:	b	0 <coda_sp3_cursor_set_product>
     308:	mvn	r0, #10
     30c:	mov	r1, #0
     310:	bl	0 <coda_set_error>
     314:	mvn	r0, #0
     318:	pop	{fp, pc}
     31c:	pop	{fp, lr}
     320:	b	0 <coda_grib_cursor_set_product>
     324:	pop	{fp, lr}
     328:	b	0 <coda_cdf_cursor_set_product>
     32c:	pop	{fp, lr}
     330:	b	0 <coda_netcdf_cursor_set_product>
     334:	pop	{fp, lr}
     338:	b	0 <coda_rinex_cursor_set_product>
     33c:	movw	r0, #0
     340:	movw	r1, #0
     344:	movw	r3, #0
     348:	mov	r2, #368	; 0x170
     34c:	movt	r0, #0
     350:	movt	r1, #0
     354:	movt	r3, #0
     358:	bl	0 <__assert_fail>

0000035c <coda_cursor_goto>:
     35c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     360:	add	fp, sp, #28
     364:	sub	sp, sp, #12
     368:	mov	r9, r0
     36c:	ldrb	r0, [r1]
     370:	mov	r4, r1
     374:	mov	r8, #0
     378:	cmp	r0, #47	; 0x2f
     37c:	bne	3c4 <coda_cursor_goto+0x68>
     380:	mov	r0, r9
     384:	bl	788 <coda_cursor_goto_root>
     388:	mvn	r7, #0
     38c:	cmp	r0, #0
     390:	bne	6d8 <coda_cursor_goto+0x37c>
     394:	ldrb	r0, [r4, #1]
     398:	cmp	r0, #63	; 0x3f
     39c:	bgt	3b4 <coda_cursor_goto+0x58>
     3a0:	cmp	r0, #0
     3a4:	beq	3c0 <coda_cursor_goto+0x64>
     3a8:	cmp	r0, #47	; 0x2f
     3ac:	moveq	r8, #1
     3b0:	b	3c4 <coda_cursor_goto+0x68>
     3b4:	cmp	r0, #91	; 0x5b
     3b8:	cmpne	r0, #64	; 0x40
     3bc:	bne	3c4 <coda_cursor_goto+0x68>
     3c0:	mov	r8, #1
     3c4:	add	sl, sp, #8
     3c8:	b	3d0 <coda_cursor_goto+0x74>
     3cc:	str	r1, [r9, #4]
     3d0:	ldrb	r0, [r4, r8]
     3d4:	mov	r6, r8
     3d8:	cmp	r0, #63	; 0x3f
     3dc:	ble	4b8 <coda_cursor_goto+0x15c>
     3e0:	cmp	r0, #91	; 0x5b
     3e4:	beq	4c8 <coda_cursor_goto+0x16c>
     3e8:	cmp	r0, #64	; 0x40
     3ec:	bne	54c <coda_cursor_goto+0x1f0>
     3f0:	mov	r0, r9
     3f4:	bl	860 <coda_cursor_goto_attributes>
     3f8:	mvn	r7, #0
     3fc:	cmp	r0, #0
     400:	bne	6d8 <coda_cursor_goto+0x37c>
     404:	add	r0, r6, #1
     408:	mov	r2, #0
     40c:	add	r1, r4, r0
     410:	b	418 <coda_cursor_goto+0xbc>
     414:	sub	r2, r2, #1
     418:	ldrb	r3, [r1, -r2]
     41c:	cmp	r3, #63	; 0x3f
     420:	bgt	434 <coda_cursor_goto+0xd8>
     424:	cmp	r3, #0
     428:	cmpne	r3, #47	; 0x2f
     42c:	bne	414 <coda_cursor_goto+0xb8>
     430:	b	440 <coda_cursor_goto+0xe4>
     434:	cmp	r3, #64	; 0x40
     438:	cmpne	r3, #91	; 0x5b
     43c:	bne	414 <coda_cursor_goto+0xb8>
     440:	sub	r8, r0, r2
     444:	cmn	r2, #1
     448:	bne	458 <coda_cursor_goto+0xfc>
     44c:	ldrb	r3, [r4, r0]
     450:	cmp	r3, #46	; 0x2e
     454:	beq	3d0 <coda_cursor_goto+0x74>
     458:	cmn	r2, #2
     45c:	ldrbeq	r3, [r4, r0]
     460:	cmpeq	r3, #46	; 0x2e
     464:	beq	658 <coda_cursor_goto+0x2fc>
     468:	cmp	r8, r0
     46c:	ble	3d0 <coda_cursor_goto+0x74>
     470:	cmp	r9, #0
     474:	beq	6ec <coda_cursor_goto+0x390>
     478:	ldr	r0, [r9, #4]
     47c:	cmp	r0, #1
     480:	blt	6ec <coda_cursor_goto+0x390>
     484:	add	r0, r9, r0, lsl #4
     488:	ldr	r0, [r0, #-8]
     48c:	cmp	r0, #0
     490:	beq	6ec <coda_cursor_goto+0x390>
     494:	ldr	r3, [r0]
     498:	rsb	r2, r2, #0
     49c:	cmp	r3, #99	; 0x63
     4a0:	mov	r3, sl
     4a4:	ldrhi	r0, [r0, #4]
     4a8:	bl	0 <coda_type_get_record_field_index_from_name_n>
     4ac:	cmp	r0, #0
     4b0:	beq	5fc <coda_cursor_goto+0x2a0>
     4b4:	b	6d8 <coda_cursor_goto+0x37c>
     4b8:	cmp	r0, #47	; 0x2f
     4bc:	bne	544 <coda_cursor_goto+0x1e8>
     4c0:	add	r6, r6, #1
     4c4:	b	554 <coda_cursor_goto+0x1f8>
     4c8:	add	r5, r6, #1
     4cc:	mov	r6, r5
     4d0:	b	4d8 <coda_cursor_goto+0x17c>
     4d4:	add	r6, r6, #1
     4d8:	ldrb	r0, [r4, r6]
     4dc:	cmp	r0, #0
     4e0:	beq	6a0 <coda_cursor_goto+0x344>
     4e4:	cmp	r0, #93	; 0x5d
     4e8:	bne	4d4 <coda_cursor_goto+0x178>
     4ec:	cmp	r6, r5
     4f0:	beq	718 <coda_cursor_goto+0x3bc>
     4f4:	movw	r1, #0
     4f8:	add	r7, r4, r5
     4fc:	mov	r2, sl
     500:	add	r3, sp, #4
     504:	mov	r0, r7
     508:	movt	r1, #0
     50c:	bl	0 <__isoc99_sscanf>
     510:	cmp	r0, #1
     514:	bne	728 <coda_cursor_goto+0x3cc>
     518:	ldr	r0, [sp, #4]
     51c:	sub	r2, r6, r5
     520:	cmp	r2, r0
     524:	bne	72c <coda_cursor_goto+0x3d0>
     528:	ldr	r1, [sp, #8]
     52c:	mov	r0, r9
     530:	bl	c78 <coda_cursor_goto_array_element_by_index>
     534:	add	r8, r6, #1
     538:	cmp	r0, #0
     53c:	beq	3d0 <coda_cursor_goto+0x74>
     540:	b	6d4 <coda_cursor_goto+0x378>
     544:	cmp	r0, #0
     548:	beq	6e4 <coda_cursor_goto+0x388>
     54c:	cmp	r6, #1
     550:	bge	70c <coda_cursor_goto+0x3b0>
     554:	add	r1, r4, r6
     558:	mov	r2, #0
     55c:	b	564 <coda_cursor_goto+0x208>
     560:	sub	r2, r2, #1
     564:	ldrb	r0, [r1, -r2]
     568:	cmp	r0, #63	; 0x3f
     56c:	bgt	580 <coda_cursor_goto+0x224>
     570:	cmp	r0, #0
     574:	cmpne	r0, #47	; 0x2f
     578:	bne	560 <coda_cursor_goto+0x204>
     57c:	b	58c <coda_cursor_goto+0x230>
     580:	cmp	r0, #64	; 0x40
     584:	cmpne	r0, #91	; 0x5b
     588:	bne	560 <coda_cursor_goto+0x204>
     58c:	sub	r8, r6, r2
     590:	cmn	r2, #1
     594:	bne	5a4 <coda_cursor_goto+0x248>
     598:	ldrb	r0, [r4, r6]
     59c:	cmp	r0, #46	; 0x2e
     5a0:	beq	3d0 <coda_cursor_goto+0x74>
     5a4:	cmn	r2, #2
     5a8:	ldrbeq	r0, [r4, r6]
     5ac:	cmpeq	r0, #46	; 0x2e
     5b0:	beq	614 <coda_cursor_goto+0x2b8>
     5b4:	cmp	r9, #0
     5b8:	beq	6b8 <coda_cursor_goto+0x35c>
     5bc:	ldr	r0, [r9, #4]
     5c0:	cmp	r0, #1
     5c4:	blt	6b8 <coda_cursor_goto+0x35c>
     5c8:	add	r0, r9, r0, lsl #4
     5cc:	ldr	r0, [r0, #-8]
     5d0:	cmp	r0, #0
     5d4:	beq	6b8 <coda_cursor_goto+0x35c>
     5d8:	ldr	r3, [r0]
     5dc:	rsb	r2, r2, #0
     5e0:	cmp	r3, #99	; 0x63
     5e4:	mov	r3, sl
     5e8:	ldrhi	r0, [r0, #4]
     5ec:	bl	0 <coda_type_get_record_field_index_from_name_n>
     5f0:	mvn	r7, #0
     5f4:	cmp	r0, #0
     5f8:	bne	6d8 <coda_cursor_goto+0x37c>
     5fc:	ldr	r1, [sp, #8]
     600:	mov	r0, r9
     604:	bl	aa8 <coda_cursor_goto_record_field_by_index>
     608:	cmp	r0, #0
     60c:	beq	3d0 <coda_cursor_goto+0x74>
     610:	b	6d8 <coda_cursor_goto+0x37c>
     614:	add	r0, r6, #1
     618:	ldrb	r0, [r4, r0]
     61c:	cmp	r0, #46	; 0x2e
     620:	bne	5b4 <coda_cursor_goto+0x258>
     624:	cmp	r9, #0
     628:	beq	740 <coda_cursor_goto+0x3e4>
     62c:	ldr	r0, [r9, #4]
     630:	cmp	r0, #1
     634:	blt	740 <coda_cursor_goto+0x3e4>
     638:	sub	r1, r0, #1
     63c:	add	r2, r9, r1, lsl #4
     640:	ldr	r2, [r2, #8]
     644:	cmp	r2, #0
     648:	beq	740 <coda_cursor_goto+0x3e4>
     64c:	cmp	r0, #1
     650:	bgt	3cc <coda_cursor_goto+0x70>
     654:	b	768 <coda_cursor_goto+0x40c>
     658:	add	r3, r6, #2
     65c:	ldrb	r3, [r4, r3]
     660:	cmp	r3, #46	; 0x2e
     664:	bne	468 <coda_cursor_goto+0x10c>
     668:	cmp	r9, #0
     66c:	beq	754 <coda_cursor_goto+0x3f8>
     670:	ldr	r0, [r9, #4]
     674:	cmp	r0, #1
     678:	blt	754 <coda_cursor_goto+0x3f8>
     67c:	sub	r1, r0, #1
     680:	add	r2, r9, r1, lsl #4
     684:	ldr	r2, [r2, #8]
     688:	cmp	r2, #0
     68c:	beq	754 <coda_cursor_goto+0x3f8>
     690:	cmp	r0, #1
     694:	ble	778 <coda_cursor_goto+0x41c>
     698:	str	r1, [r9, #4]
     69c:	b	3d0 <coda_cursor_goto+0x74>
     6a0:	movw	r1, #0
     6a4:	movt	r1, #0
     6a8:	mvn	r0, #99	; 0x63
     6ac:	mov	r2, r4
     6b0:	bl	0 <coda_set_error>
     6b4:	b	6d4 <coda_cursor_goto+0x378>
     6b8:	movw	r1, #0
     6bc:	movw	r2, #0
     6c0:	mvn	r0, #99	; 0x63
     6c4:	movw	r3, #2028	; 0x7ec
     6c8:	movt	r1, #0
     6cc:	movt	r2, #0
     6d0:	bl	0 <coda_set_error>
     6d4:	mvn	r7, #0
     6d8:	mov	r0, r7
     6dc:	sub	sp, fp, #28
     6e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     6e4:	mov	r7, #0
     6e8:	b	6d8 <coda_cursor_goto+0x37c>
     6ec:	movw	r1, #0
     6f0:	movw	r2, #0
     6f4:	mvn	r0, #99	; 0x63
     6f8:	movw	r3, #2028	; 0x7ec
     6fc:	movt	r1, #0
     700:	movt	r2, #0
     704:	bl	0 <coda_set_error>
     708:	b	6d8 <coda_cursor_goto+0x37c>
     70c:	movw	r1, #0
     710:	movt	r1, #0
     714:	b	6a8 <coda_cursor_goto+0x34c>
     718:	movw	r1, #0
     71c:	mvn	r0, #99	; 0x63
     720:	movt	r1, #0
     724:	b	770 <coda_cursor_goto+0x414>
     728:	sub	r2, r6, r5
     72c:	movw	r1, #0
     730:	mvn	r0, #99	; 0x63
     734:	mov	r3, r7
     738:	movt	r1, #0
     73c:	b	6d0 <coda_cursor_goto+0x374>
     740:	movw	r1, #0
     744:	movw	r2, #0
     748:	mvn	r0, #99	; 0x63
     74c:	movw	r3, #1333	; 0x535
     750:	b	6c8 <coda_cursor_goto+0x36c>
     754:	movw	r1, #0
     758:	movw	r2, #0
     75c:	mvn	r0, #99	; 0x63
     760:	movw	r3, #1333	; 0x535
     764:	b	6fc <coda_cursor_goto+0x3a0>
     768:	mvn	r0, #107	; 0x6b
     76c:	mov	r1, #0
     770:	bl	0 <coda_set_error>
     774:	b	6d4 <coda_cursor_goto+0x378>
     778:	mvn	r0, #107	; 0x6b
     77c:	mov	r1, #0
     780:	bl	0 <coda_set_error>
     784:	b	6d8 <coda_cursor_goto+0x37c>

00000788 <coda_cursor_goto_root>:
     788:	push	{r4, sl, fp, lr}
     78c:	add	fp, sp, #8
     790:	cmp	r0, #0
     794:	beq	830 <coda_cursor_goto_root+0xa8>
     798:	mov	r4, r0
     79c:	ldr	r0, [r0, #4]
     7a0:	cmp	r0, #1
     7a4:	blt	830 <coda_cursor_goto_root+0xa8>
     7a8:	add	r0, r4, r0, lsl #4
     7ac:	ldr	r0, [r0, #-8]
     7b0:	cmp	r0, #0
     7b4:	beq	830 <coda_cursor_goto_root+0xa8>
     7b8:	mov	r0, #1
     7bc:	str	r0, [r4, #4]
     7c0:	ldr	r0, [r4, #8]
     7c4:	ldr	r0, [r0]
     7c8:	cmp	r0, #100	; 0x64
     7cc:	bne	7d8 <coda_cursor_goto_root+0x50>
     7d0:	mov	r0, r4
     7d4:	bl	0 <coda_mem_cursor_update_offset>
     7d8:	ldr	r0, [pc, #124]	; 85c <coda_cursor_goto_root+0xd4>
     7dc:	ldr	r1, [pc, r0]
     7e0:	bl	0 <__aeabi_read_tp>
     7e4:	ldr	r0, [r0, r1]
     7e8:	cmp	r0, #0
     7ec:	beq	854 <coda_cursor_goto_root+0xcc>
     7f0:	ldr	r0, [r4, #4]
     7f4:	add	r0, r4, r0, lsl #4
     7f8:	ldr	r0, [r0, #-8]
     7fc:	ldr	r1, [r0]
     800:	cmp	r1, #99	; 0x63
     804:	ldrhi	r0, [r0, #4]
     808:	ldr	r0, [r0, #8]
     80c:	cmp	r0, #6
     810:	bne	854 <coda_cursor_goto_root+0xcc>
     814:	mov	r0, r4
     818:	bl	e5c <coda_cursor_use_base_type_of_special_type>
     81c:	mov	r1, r0
     820:	mvn	r0, #0
     824:	cmp	r1, #0
     828:	moveq	r0, #0
     82c:	pop	{r4, sl, fp, pc}
     830:	movw	r1, #0
     834:	movw	r2, #0
     838:	mvn	r0, #99	; 0x63
     83c:	movw	r3, #1359	; 0x54f
     840:	movt	r1, #0
     844:	movt	r2, #0
     848:	bl	0 <coda_set_error>
     84c:	mvn	r0, #0
     850:	pop	{r4, sl, fp, pc}
     854:	mov	r0, #0
     858:	pop	{r4, sl, fp, pc}
     85c:	.word	0x00000078

00000860 <coda_cursor_goto_attributes>:
     860:	push	{r4, r5, fp, lr}
     864:	add	fp, sp, #8
     868:	sub	sp, sp, #8
     86c:	cmp	r0, #0
     870:	beq	8c0 <coda_cursor_goto_attributes+0x60>
     874:	mov	r4, r0
     878:	ldr	r0, [r0, #4]
     87c:	cmp	r0, #1
     880:	blt	8c0 <coda_cursor_goto_attributes+0x60>
     884:	add	r1, r4, r0, lsl #4
     888:	ldr	r1, [r1, #-8]
     88c:	cmp	r1, #0
     890:	beq	8c0 <coda_cursor_goto_attributes+0x60>
     894:	cmp	r0, #32
     898:	bne	8ec <coda_cursor_goto_attributes+0x8c>
     89c:	movw	r1, #0
     8a0:	movw	r3, #0
     8a4:	movw	r0, #1251	; 0x4e3
     8a8:	mov	r2, #32
     8ac:	str	r0, [sp]
     8b0:	movt	r1, #0
     8b4:	movt	r3, #0
     8b8:	mvn	r0, #99	; 0x63
     8bc:	b	8d8 <coda_cursor_goto_attributes+0x78>
     8c0:	movw	r1, #0
     8c4:	movw	r2, #0
     8c8:	mvn	r0, #99	; 0x63
     8cc:	movw	r3, #1244	; 0x4dc
     8d0:	movt	r1, #0
     8d4:	movt	r2, #0
     8d8:	bl	0 <coda_set_error>
     8dc:	mvn	r5, #0
     8e0:	mov	r0, r5
     8e4:	sub	sp, fp, #8
     8e8:	pop	{r4, r5, fp, pc}
     8ec:	ldr	r0, [r1]
     8f0:	sub	r1, r0, #100	; 0x64
     8f4:	cmp	r1, #5
     8f8:	bhi	928 <coda_cursor_goto_attributes+0xc8>
     8fc:	add	r0, pc, #0
     900:	ldr	pc, [r0, r1, lsl #2]
     904:	.word	0x0000091c
     908:	.word	0x0000093c
     90c:	.word	0x00000944
     910:	.word	0x00000954
     914:	.word	0x00000960
     918:	.word	0x0000096c
     91c:	mov	r0, r4
     920:	bl	0 <coda_mem_cursor_goto_attributes>
     924:	b	974 <coda_cursor_goto_attributes+0x114>
     928:	cmp	r0, #2
     92c:	bcs	980 <coda_cursor_goto_attributes+0x120>
     930:	mov	r0, r4
     934:	bl	0 <coda_ascbin_cursor_goto_attributes>
     938:	b	974 <coda_cursor_goto_attributes+0x114>
     93c:	mvn	r0, #10
     940:	b	948 <coda_cursor_goto_attributes+0xe8>
     944:	mvn	r0, #12
     948:	mov	r1, #0
     94c:	bl	0 <coda_set_error>
     950:	b	8dc <coda_cursor_goto_attributes+0x7c>
     954:	mov	r0, r4
     958:	bl	0 <coda_cdf_cursor_goto_attributes>
     95c:	b	974 <coda_cursor_goto_attributes+0x114>
     960:	mov	r0, r4
     964:	bl	0 <coda_netcdf_cursor_goto_attributes>
     968:	b	974 <coda_cursor_goto_attributes+0x114>
     96c:	mov	r0, r4
     970:	bl	0 <coda_grib_cursor_goto_attributes>
     974:	mvn	r5, #0
     978:	cmp	r0, #0
     97c:	bne	8e0 <coda_cursor_goto_attributes+0x80>
     980:	ldr	r0, [r4, #4]
     984:	mov	r5, #0
     988:	add	r0, r4, r0, lsl #4
     98c:	ldr	r0, [r0, #-8]
     990:	ldr	r0, [r0]
     994:	cmp	r0, #100	; 0x64
     998:	bne	8e0 <coda_cursor_goto_attributes+0x80>
     99c:	mov	r0, r4
     9a0:	bl	0 <coda_mem_cursor_update_offset>
     9a4:	b	8e0 <coda_cursor_goto_attributes+0x80>

000009a8 <coda_cursor_goto_parent>:
     9a8:	push	{fp, lr}
     9ac:	mov	fp, sp
     9b0:	cmp	r0, #0
     9b4:	beq	9fc <coda_cursor_goto_parent+0x54>
     9b8:	ldr	r1, [r0, #4]
     9bc:	cmp	r1, #1
     9c0:	blt	9fc <coda_cursor_goto_parent+0x54>
     9c4:	sub	r2, r1, #1
     9c8:	add	r3, r0, r2, lsl #4
     9cc:	ldr	r3, [r3, #8]
     9d0:	cmp	r3, #0
     9d4:	beq	9fc <coda_cursor_goto_parent+0x54>
     9d8:	cmp	r1, #1
     9dc:	strgt	r2, [r0, #4]
     9e0:	movgt	r0, #0
     9e4:	popgt	{fp, pc}
     9e8:	mvn	r0, #107	; 0x6b
     9ec:	mov	r1, #0
     9f0:	bl	0 <coda_set_error>
     9f4:	mvn	r0, #0
     9f8:	pop	{fp, pc}
     9fc:	movw	r1, #0
     a00:	movw	r2, #0
     a04:	mvn	r0, #99	; 0x63
     a08:	movw	r3, #1333	; 0x535
     a0c:	movt	r1, #0
     a10:	movt	r2, #0
     a14:	bl	0 <coda_set_error>
     a18:	mvn	r0, #0
     a1c:	pop	{fp, pc}

00000a20 <coda_cursor_get_type>:
     a20:	push	{fp, lr}
     a24:	mov	fp, sp
     a28:	cmp	r0, #0
     a2c:	beq	a6c <coda_cursor_get_type+0x4c>
     a30:	ldr	r2, [r0, #4]
     a34:	cmp	r2, #1
     a38:	blt	a6c <coda_cursor_get_type+0x4c>
     a3c:	add	r0, r0, r2, lsl #4
     a40:	ldr	r0, [r0, #-8]
     a44:	cmp	r0, #0
     a48:	beq	a6c <coda_cursor_get_type+0x4c>
     a4c:	cmp	r1, #0
     a50:	beq	a90 <coda_cursor_get_type+0x70>
     a54:	ldr	r2, [r0]
     a58:	cmp	r2, #99	; 0x63
     a5c:	ldrhi	r0, [r0, #4]
     a60:	str	r0, [r1]
     a64:	mov	r0, #0
     a68:	pop	{fp, pc}
     a6c:	movw	r1, #0
     a70:	movw	r2, #0
     a74:	mvn	r0, #99	; 0x63
     a78:	movw	r3, #2028	; 0x7ec
     a7c:	movt	r1, #0
     a80:	movt	r2, #0
     a84:	bl	0 <coda_set_error>
     a88:	mvn	r0, #0
     a8c:	pop	{fp, pc}
     a90:	movw	r1, #0
     a94:	movw	r2, #0
     a98:	mvn	r0, #99	; 0x63
     a9c:	movw	r3, #2033	; 0x7f1
     aa0:	movt	r1, #0
     aa4:	b	a80 <coda_cursor_get_type+0x60>

00000aa8 <coda_cursor_goto_record_field_by_index>:
     aa8:	push	{r4, sl, fp, lr}
     aac:	add	fp, sp, #8
     ab0:	sub	sp, sp, #8
     ab4:	cmp	r0, #0
     ab8:	beq	b10 <coda_cursor_goto_record_field_by_index+0x68>
     abc:	ldr	r2, [r0, #4]
     ac0:	mov	r4, r0
     ac4:	cmp	r2, #1
     ac8:	blt	b10 <coda_cursor_goto_record_field_by_index+0x68>
     acc:	add	r0, r4, r2, lsl #4
     ad0:	ldr	r0, [r0, #-8]
     ad4:	cmp	r0, #0
     ad8:	beq	b10 <coda_cursor_goto_record_field_by_index+0x68>
     adc:	ldr	r3, [r0]
     ae0:	cmp	r3, #99	; 0x63
     ae4:	ldrhi	r0, [r0, #4]
     ae8:	ldr	r0, [r0, #8]
     aec:	cmp	r0, #0
     af0:	beq	b38 <coda_cursor_goto_record_field_by_index+0x90>
     af4:	bl	0 <coda_type_get_class_name>
     af8:	movw	r1, #0
     afc:	mov	r2, r0
     b00:	mvn	r0, #104	; 0x68
     b04:	movt	r1, #0
     b08:	bl	0 <coda_set_error>
     b0c:	b	b2c <coda_cursor_goto_record_field_by_index+0x84>
     b10:	movw	r1, #0
     b14:	movw	r2, #0
     b18:	mvn	r0, #99	; 0x63
     b1c:	movw	r3, #569	; 0x239
     b20:	movt	r1, #0
     b24:	movt	r2, #0
     b28:	bl	0 <coda_set_error>
     b2c:	mvn	r0, #0
     b30:	sub	sp, fp, #8
     b34:	pop	{r4, sl, fp, pc}
     b38:	cmp	r2, #32
     b3c:	bne	b64 <coda_cursor_goto_record_field_by_index+0xbc>
     b40:	movw	r1, #0
     b44:	movw	r3, #0
     b48:	mov	r0, #584	; 0x248
     b4c:	mov	r2, #32
     b50:	str	r0, [sp]
     b54:	movt	r1, #0
     b58:	movt	r3, #0
     b5c:	mvn	r0, #99	; 0x63
     b60:	b	b28 <coda_cursor_goto_record_field_by_index+0x80>
     b64:	sub	r0, r3, #100	; 0x64
     b68:	cmp	r0, #5
     b6c:	bhi	b9c <coda_cursor_goto_record_field_by_index+0xf4>
     b70:	add	r2, pc, #0
     b74:	ldr	pc, [r2, r0, lsl #2]
     b78:	.word	0x00000b90
     b7c:	.word	0x00000c44
     b80:	.word	0x00000c3c
     b84:	.word	0x00000c54
     b88:	.word	0x00000c54
     b8c:	.word	0x00000c54
     b90:	mov	r0, r4
     b94:	bl	0 <coda_mem_cursor_goto_record_field_by_index>
     b98:	b	bac <coda_cursor_goto_record_field_by_index+0x104>
     b9c:	cmp	r3, #2
     ba0:	bcs	bbc <coda_cursor_goto_record_field_by_index+0x114>
     ba4:	mov	r0, r4
     ba8:	bl	0 <coda_ascbin_cursor_goto_record_field_by_index>
     bac:	mov	r1, r0
     bb0:	mvn	r0, #0
     bb4:	cmp	r1, #0
     bb8:	bne	b30 <coda_cursor_goto_record_field_by_index+0x88>
     bbc:	ldr	r0, [r4, #4]
     bc0:	add	r0, r4, r0, lsl #4
     bc4:	ldr	r0, [r0, #-8]
     bc8:	ldr	r0, [r0]
     bcc:	cmp	r0, #100	; 0x64
     bd0:	bne	bdc <coda_cursor_goto_record_field_by_index+0x134>
     bd4:	mov	r0, r4
     bd8:	bl	0 <coda_mem_cursor_update_offset>
     bdc:	ldr	r0, [pc, #144]	; c74 <coda_cursor_goto_record_field_by_index+0x1cc>
     be0:	ldr	r1, [pc, r0]
     be4:	bl	0 <__aeabi_read_tp>
     be8:	ldr	r0, [r0, r1]
     bec:	cmp	r0, #0
     bf0:	beq	c30 <coda_cursor_goto_record_field_by_index+0x188>
     bf4:	ldr	r0, [r4, #4]
     bf8:	add	r0, r4, r0, lsl #4
     bfc:	ldr	r0, [r0, #-8]
     c00:	ldr	r1, [r0]
     c04:	cmp	r1, #99	; 0x63
     c08:	ldrhi	r0, [r0, #4]
     c0c:	ldr	r0, [r0, #8]
     c10:	cmp	r0, #6
     c14:	bne	c30 <coda_cursor_goto_record_field_by_index+0x188>
     c18:	mov	r0, r4
     c1c:	bl	e5c <coda_cursor_use_base_type_of_special_type>
     c20:	mov	r1, r0
     c24:	mvn	r0, #0
     c28:	cmp	r1, #0
     c2c:	bne	b30 <coda_cursor_goto_record_field_by_index+0x88>
     c30:	mov	r0, #0
     c34:	sub	sp, fp, #8
     c38:	pop	{r4, sl, fp, pc}
     c3c:	mvn	r0, #12
     c40:	b	c48 <coda_cursor_goto_record_field_by_index+0x1a0>
     c44:	mvn	r0, #10
     c48:	mov	r1, #0
     c4c:	bl	0 <coda_set_error>
     c50:	b	b2c <coda_cursor_goto_record_field_by_index+0x84>
     c54:	movw	r0, #0
     c58:	movw	r1, #0
     c5c:	movw	r3, #0
     c60:	mov	r2, #628	; 0x274
     c64:	movt	r0, #0
     c68:	movt	r1, #0
     c6c:	movt	r3, #0
     c70:	bl	0 <__assert_fail>
     c74:	.word	0x0000008c

00000c78 <coda_cursor_goto_array_element_by_index>:
     c78:	push	{r4, sl, fp, lr}
     c7c:	add	fp, sp, #8
     c80:	sub	sp, sp, #8
     c84:	cmp	r0, #0
     c88:	beq	cf0 <coda_cursor_goto_array_element_by_index+0x78>
     c8c:	ldr	r2, [r0, #4]
     c90:	mov	r4, r0
     c94:	cmp	r2, #1
     c98:	blt	cf0 <coda_cursor_goto_array_element_by_index+0x78>
     c9c:	add	r0, r4, r2, lsl #4
     ca0:	ldr	r0, [r0, #-8]
     ca4:	cmp	r0, #0
     ca8:	beq	cf0 <coda_cursor_goto_array_element_by_index+0x78>
     cac:	ldr	r3, [r0]
     cb0:	cmp	r3, #99	; 0x63
     cb4:	ldrhi	r0, [r0, #4]
     cb8:	ldr	r0, [r0, #8]
     cbc:	cmp	r0, #1
     cc0:	bne	d18 <coda_cursor_goto_array_element_by_index+0xa0>
     cc4:	cmp	r2, #32
     cc8:	bne	d34 <coda_cursor_goto_array_element_by_index+0xbc>
     ccc:	movw	r1, #0
     cd0:	movw	r3, #0
     cd4:	movw	r0, #1023	; 0x3ff
     cd8:	mov	r2, #32
     cdc:	str	r0, [sp]
     ce0:	movt	r1, #0
     ce4:	movt	r3, #0
     ce8:	mvn	r0, #99	; 0x63
     cec:	b	d08 <coda_cursor_goto_array_element_by_index+0x90>
     cf0:	movw	r1, #0
     cf4:	movw	r2, #0
     cf8:	mvn	r0, #99	; 0x63
     cfc:	mov	r3, #1008	; 0x3f0
     d00:	movt	r1, #0
     d04:	movt	r2, #0
     d08:	bl	0 <coda_set_error>
     d0c:	mvn	r0, #0
     d10:	sub	sp, fp, #8
     d14:	pop	{r4, sl, fp, pc}
     d18:	bl	0 <coda_type_get_class_name>
     d1c:	movw	r1, #0
     d20:	mov	r2, r0
     d24:	mvn	r0, #104	; 0x68
     d28:	movt	r1, #0
     d2c:	bl	0 <coda_set_error>
     d30:	b	d0c <coda_cursor_goto_array_element_by_index+0x94>
     d34:	sub	r0, r3, #100	; 0x64
     d38:	cmp	r0, #5
     d3c:	bhi	d6c <coda_cursor_goto_array_element_by_index+0xf4>
     d40:	add	r2, pc, #0
     d44:	ldr	pc, [r2, r0, lsl #2]
     d48:	.word	0x00000d60
     d4c:	.word	0x00000d80
     d50:	.word	0x00000d88
     d54:	.word	0x00000d98
     d58:	.word	0x00000da4
     d5c:	.word	0x00000db0
     d60:	mov	r0, r4
     d64:	bl	0 <coda_mem_cursor_goto_array_element_by_index>
     d68:	b	db8 <coda_cursor_goto_array_element_by_index+0x140>
     d6c:	cmp	r3, #2
     d70:	bcs	dc8 <coda_cursor_goto_array_element_by_index+0x150>
     d74:	mov	r0, r4
     d78:	bl	0 <coda_ascbin_cursor_goto_array_element_by_index>
     d7c:	b	db8 <coda_cursor_goto_array_element_by_index+0x140>
     d80:	mvn	r0, #10
     d84:	b	d8c <coda_cursor_goto_array_element_by_index+0x114>
     d88:	mvn	r0, #12
     d8c:	mov	r1, #0
     d90:	bl	0 <coda_set_error>
     d94:	b	d0c <coda_cursor_goto_array_element_by_index+0x94>
     d98:	mov	r0, r4
     d9c:	bl	0 <coda_cdf_cursor_goto_array_element_by_index>
     da0:	b	db8 <coda_cursor_goto_array_element_by_index+0x140>
     da4:	mov	r0, r4
     da8:	bl	0 <coda_netcdf_cursor_goto_array_element_by_index>
     dac:	b	db8 <coda_cursor_goto_array_element_by_index+0x140>
     db0:	mov	r0, r4
     db4:	bl	0 <coda_grib_cursor_goto_array_element_by_index>
     db8:	mov	r1, r0
     dbc:	mvn	r0, #0
     dc0:	cmp	r1, #0
     dc4:	bne	e48 <coda_cursor_goto_array_element_by_index+0x1d0>
     dc8:	ldr	r0, [r4, #4]
     dcc:	add	r0, r4, r0, lsl #4
     dd0:	ldr	r0, [r0, #-8]
     dd4:	ldr	r0, [r0]
     dd8:	cmp	r0, #100	; 0x64
     ddc:	bne	de8 <coda_cursor_goto_array_element_by_index+0x170>
     de0:	mov	r0, r4
     de4:	bl	0 <coda_mem_cursor_update_offset>
     de8:	ldr	r0, [pc, #96]	; e50 <coda_cursor_goto_array_element_by_index+0x1d8>
     dec:	ldr	r1, [pc, r0]
     df0:	bl	0 <__aeabi_read_tp>
     df4:	ldr	r0, [r0, r1]
     df8:	cmp	r0, #0
     dfc:	beq	e44 <coda_cursor_goto_array_element_by_index+0x1cc>
     e00:	ldr	r0, [r4, #4]
     e04:	add	r0, r4, r0, lsl #4
     e08:	ldr	r0, [r0, #-8]
     e0c:	ldr	r1, [r0]
     e10:	cmp	r1, #99	; 0x63
     e14:	ldrhi	r0, [r0, #4]
     e18:	ldr	r0, [r0, #8]
     e1c:	cmp	r0, #6
     e20:	bne	e44 <coda_cursor_goto_array_element_by_index+0x1cc>
     e24:	mov	r0, r4
     e28:	bl	e5c <coda_cursor_use_base_type_of_special_type>
     e2c:	mov	r1, r0
     e30:	mvn	r0, #0
     e34:	cmp	r1, #0
     e38:	moveq	r0, #0
     e3c:	sub	sp, fp, #8
     e40:	pop	{r4, sl, fp, pc}
     e44:	mov	r0, #0
     e48:	sub	sp, fp, #8
     e4c:	pop	{r4, sl, fp, pc}
     e50:	.word	0x0000005c

00000e54 <coda_cursor_goto_first_record_field>:
     e54:	mov	r1, #0
     e58:	b	aa8 <coda_cursor_goto_record_field_by_index>

00000e5c <coda_cursor_use_base_type_of_special_type>:
     e5c:	push	{r4, sl, fp, lr}
     e60:	add	fp, sp, #8
     e64:	cmp	r0, #0
     e68:	beq	ec4 <coda_cursor_use_base_type_of_special_type+0x68>
     e6c:	mov	r4, r0
     e70:	ldr	r0, [r0, #4]
     e74:	cmp	r0, #1
     e78:	blt	ec4 <coda_cursor_use_base_type_of_special_type+0x68>
     e7c:	add	r0, r4, r0, lsl #4
     e80:	ldr	r0, [r0, #-8]
     e84:	cmp	r0, #0
     e88:	beq	ec4 <coda_cursor_use_base_type_of_special_type+0x68>
     e8c:	ldr	r1, [r0]
     e90:	cmp	r1, #99	; 0x63
     e94:	ldrhi	r0, [r0, #4]
     e98:	ldr	r0, [r0, #8]
     e9c:	cmp	r0, #6
     ea0:	bne	ee8 <coda_cursor_use_base_type_of_special_type+0x8c>
     ea4:	sub	r0, r1, #100	; 0x64
     ea8:	cmp	r0, #5
     eac:	bls	f04 <coda_cursor_use_base_type_of_special_type+0xa8>
     eb0:	cmp	r1, #2
     eb4:	bcs	f38 <coda_cursor_use_base_type_of_special_type+0xdc>
     eb8:	mov	r0, r4
     ebc:	bl	0 <coda_ascbin_cursor_use_base_type_of_special_type>
     ec0:	b	f28 <coda_cursor_use_base_type_of_special_type+0xcc>
     ec4:	movw	r1, #0
     ec8:	movw	r2, #0
     ecc:	mvn	r0, #99	; 0x63
     ed0:	movw	r3, #1403	; 0x57b
     ed4:	movt	r1, #0
     ed8:	movt	r2, #0
     edc:	bl	0 <coda_set_error>
     ee0:	mvn	r0, #0
     ee4:	pop	{r4, sl, fp, pc}
     ee8:	bl	0 <coda_type_get_class_name>
     eec:	movw	r1, #0
     ef0:	mov	r2, r0
     ef4:	mvn	r0, #104	; 0x68
     ef8:	movt	r1, #0
     efc:	bl	0 <coda_set_error>
     f00:	b	ee0 <coda_cursor_use_base_type_of_special_type+0x84>
     f04:	cmp	r0, #0
     f08:	beq	f20 <coda_cursor_use_base_type_of_special_type+0xc4>
     f0c:	cmp	r0, #3
     f10:	bne	fb4 <coda_cursor_use_base_type_of_special_type+0x158>
     f14:	mov	r0, r4
     f18:	bl	0 <coda_cdf_cursor_use_base_type_of_special_type>
     f1c:	b	f28 <coda_cursor_use_base_type_of_special_type+0xcc>
     f20:	mov	r0, r4
     f24:	bl	0 <coda_mem_cursor_use_base_type_of_special_type>
     f28:	mov	r1, r0
     f2c:	mvn	r0, #0
     f30:	cmp	r1, #0
     f34:	bne	ee4 <coda_cursor_use_base_type_of_special_type+0x88>
     f38:	ldr	r0, [r4, #4]
     f3c:	add	r0, r4, r0, lsl #4
     f40:	ldr	r0, [r0, #-8]
     f44:	ldr	r0, [r0]
     f48:	cmp	r0, #100	; 0x64
     f4c:	bne	f58 <coda_cursor_use_base_type_of_special_type+0xfc>
     f50:	mov	r0, r4
     f54:	bl	0 <coda_mem_cursor_update_offset>
     f58:	ldr	r0, [pc, #116]	; fd4 <coda_cursor_use_base_type_of_special_type+0x178>
     f5c:	ldr	r1, [pc, r0]
     f60:	bl	0 <__aeabi_read_tp>
     f64:	ldr	r0, [r0, r1]
     f68:	cmp	r0, #0
     f6c:	beq	fac <coda_cursor_use_base_type_of_special_type+0x150>
     f70:	ldr	r0, [r4, #4]
     f74:	add	r0, r4, r0, lsl #4
     f78:	ldr	r0, [r0, #-8]
     f7c:	ldr	r1, [r0]
     f80:	cmp	r1, #99	; 0x63
     f84:	ldrhi	r0, [r0, #4]
     f88:	ldr	r0, [r0, #8]
     f8c:	cmp	r0, #6
     f90:	bne	fac <coda_cursor_use_base_type_of_special_type+0x150>
     f94:	mov	r0, r4
     f98:	bl	e5c <coda_cursor_use_base_type_of_special_type>
     f9c:	mov	r1, r0
     fa0:	mvn	r0, #0
     fa4:	cmp	r1, #0
     fa8:	popne	{r4, sl, fp, pc}
     fac:	mov	r0, #0
     fb0:	pop	{r4, sl, fp, pc}
     fb4:	movw	r0, #0
     fb8:	movw	r1, #0
     fbc:	movw	r3, #0
     fc0:	mov	r2, #1440	; 0x5a0
     fc4:	movt	r0, #0
     fc8:	movt	r1, #0
     fcc:	movt	r3, #0
     fd0:	bl	0 <__assert_fail>
     fd4:	.word	0x00000070

00000fd8 <coda_cursor_goto_record_field_by_name>:
     fd8:	push	{r4, sl, fp, lr}
     fdc:	add	fp, sp, #8
     fe0:	sub	sp, sp, #8
     fe4:	cmp	r0, #0
     fe8:	beq	1044 <coda_cursor_goto_record_field_by_name+0x6c>
     fec:	mov	r4, r0
     ff0:	ldr	r0, [r0, #4]
     ff4:	cmp	r0, #1
     ff8:	blt	1044 <coda_cursor_goto_record_field_by_name+0x6c>
     ffc:	ldr	r2, [r4]
    1000:	cmp	r2, #0
    1004:	beq	1044 <coda_cursor_goto_record_field_by_name+0x6c>
    1008:	add	r0, r4, r0, lsl #4
    100c:	ldr	r0, [r0, #-8]
    1010:	cmp	r0, #0
    1014:	beq	1044 <coda_cursor_goto_record_field_by_name+0x6c>
    1018:	ldr	r2, [r0]
    101c:	cmp	r2, #99	; 0x63
    1020:	add	r2, sp, #4
    1024:	ldrhi	r0, [r0, #4]
    1028:	bl	0 <coda_type_get_record_field_index_from_name>
    102c:	mov	r1, r0
    1030:	mvn	r0, #0
    1034:	cmp	r1, #0
    1038:	beq	106c <coda_cursor_goto_record_field_by_name+0x94>
    103c:	sub	sp, fp, #8
    1040:	pop	{r4, sl, fp, pc}
    1044:	movw	r1, #0
    1048:	movw	r2, #0
    104c:	mvn	r0, #99	; 0x63
    1050:	movw	r3, #2057	; 0x809
    1054:	movt	r1, #0
    1058:	movt	r2, #0
    105c:	bl	0 <coda_set_error>
    1060:	mvn	r0, #0
    1064:	sub	sp, fp, #8
    1068:	pop	{r4, sl, fp, pc}
    106c:	ldr	r1, [sp, #4]
    1070:	mov	r0, r4
    1074:	bl	aa8 <coda_cursor_goto_record_field_by_index>
    1078:	sub	sp, fp, #8
    107c:	pop	{r4, sl, fp, pc}

00001080 <coda_cursor_get_record_field_index_from_name>:
    1080:	cmp	r0, #0
    1084:	beq	10c0 <coda_cursor_get_record_field_index_from_name+0x40>
    1088:	ldr	ip, [r0, #4]
    108c:	cmp	ip, #1
    1090:	blt	10c0 <coda_cursor_get_record_field_index_from_name+0x40>
    1094:	ldr	r3, [r0]
    1098:	cmp	r3, #0
    109c:	beq	10c0 <coda_cursor_get_record_field_index_from_name+0x40>
    10a0:	add	r0, r0, ip, lsl #4
    10a4:	ldr	r0, [r0, #-8]
    10a8:	cmp	r0, #0
    10ac:	beq	10c0 <coda_cursor_get_record_field_index_from_name+0x40>
    10b0:	ldr	r3, [r0]
    10b4:	cmp	r3, #99	; 0x63
    10b8:	ldrhi	r0, [r0, #4]
    10bc:	b	0 <coda_type_get_record_field_index_from_name>
    10c0:	push	{fp, lr}
    10c4:	mov	fp, sp
    10c8:	movw	r1, #0
    10cc:	movw	r2, #0
    10d0:	mvn	r0, #99	; 0x63
    10d4:	movw	r3, #2057	; 0x809
    10d8:	movt	r1, #0
    10dc:	movt	r2, #0
    10e0:	bl	0 <coda_set_error>
    10e4:	mvn	r0, #0
    10e8:	pop	{fp, pc}

000010ec <coda_cursor_goto_next_record_field>:
    10ec:	push	{r4, sl, fp, lr}
    10f0:	add	fp, sp, #8
    10f4:	cmp	r0, #0
    10f8:	beq	1150 <coda_cursor_goto_next_record_field+0x64>
    10fc:	mov	r4, r0
    1100:	ldr	r0, [r0, #4]
    1104:	cmp	r0, #2
    1108:	blt	1150 <coda_cursor_goto_next_record_field+0x64>
    110c:	add	r2, r4, r0, lsl #4
    1110:	ldr	r0, [r2, #-24]	; 0xffffffe8
    1114:	cmp	r0, #0
    1118:	beq	1150 <coda_cursor_goto_next_record_field+0x64>
    111c:	ldr	r1, [r0]
    1120:	cmp	r1, #99	; 0x63
    1124:	ldrhi	r0, [r0, #4]
    1128:	ldr	r0, [r0, #8]
    112c:	cmp	r0, #0
    1130:	beq	1174 <coda_cursor_goto_next_record_field+0x88>
    1134:	bl	0 <coda_type_get_class_name>
    1138:	movw	r1, #0
    113c:	mov	r2, r0
    1140:	mvn	r0, #104	; 0x68
    1144:	movt	r1, #0
    1148:	bl	0 <coda_set_error>
    114c:	b	116c <coda_cursor_goto_next_record_field+0x80>
    1150:	movw	r1, #0
    1154:	movw	r2, #0
    1158:	mvn	r0, #99	; 0x63
    115c:	movw	r3, #706	; 0x2c2
    1160:	movt	r1, #0
    1164:	movt	r2, #0
    1168:	bl	0 <coda_set_error>
    116c:	mvn	r0, #0
    1170:	pop	{r4, sl, fp, pc}
    1174:	ldr	r0, [r2, #-4]
    1178:	cmn	r0, #1
    117c:	beq	11b8 <coda_cursor_goto_next_record_field+0xcc>
    1180:	sub	r0, r1, #100	; 0x64
    1184:	cmp	r0, #5
    1188:	bhi	11cc <coda_cursor_goto_next_record_field+0xe0>
    118c:	add	r1, pc, #0
    1190:	ldr	pc, [r1, r0, lsl #2]
    1194:	.word	0x000011ac
    1198:	.word	0x00001270
    119c:	.word	0x00001268
    11a0:	.word	0x00001280
    11a4:	.word	0x00001280
    11a8:	.word	0x00001280
    11ac:	mov	r0, r4
    11b0:	bl	0 <coda_mem_cursor_goto_next_record_field>
    11b4:	b	11dc <coda_cursor_goto_next_record_field+0xf0>
    11b8:	movw	r1, #0
    11bc:	mvn	r0, #104	; 0x68
    11c0:	movt	r1, #0
    11c4:	bl	0 <coda_set_error>
    11c8:	b	116c <coda_cursor_goto_next_record_field+0x80>
    11cc:	cmp	r1, #2
    11d0:	bcs	11ec <coda_cursor_goto_next_record_field+0x100>
    11d4:	mov	r0, r4
    11d8:	bl	0 <coda_ascbin_cursor_goto_next_record_field>
    11dc:	mov	r1, r0
    11e0:	mvn	r0, #0
    11e4:	cmp	r1, #0
    11e8:	bne	1170 <coda_cursor_goto_next_record_field+0x84>
    11ec:	ldr	r0, [r4, #4]
    11f0:	add	r0, r4, r0, lsl #4
    11f4:	ldr	r0, [r0, #-8]
    11f8:	ldr	r0, [r0]
    11fc:	cmp	r0, #100	; 0x64
    1200:	bne	120c <coda_cursor_goto_next_record_field+0x120>
    1204:	mov	r0, r4
    1208:	bl	0 <coda_mem_cursor_update_offset>
    120c:	ldr	r0, [pc, #140]	; 12a0 <coda_cursor_goto_next_record_field+0x1b4>
    1210:	ldr	r1, [pc, r0]
    1214:	bl	0 <__aeabi_read_tp>
    1218:	ldr	r0, [r0, r1]
    121c:	cmp	r0, #0
    1220:	beq	1260 <coda_cursor_goto_next_record_field+0x174>
    1224:	ldr	r0, [r4, #4]
    1228:	add	r0, r4, r0, lsl #4
    122c:	ldr	r0, [r0, #-8]
    1230:	ldr	r1, [r0]
    1234:	cmp	r1, #99	; 0x63
    1238:	ldrhi	r0, [r0, #4]
    123c:	ldr	r0, [r0, #8]
    1240:	cmp	r0, #6
    1244:	bne	1260 <coda_cursor_goto_next_record_field+0x174>
    1248:	mov	r0, r4
    124c:	bl	e5c <coda_cursor_use_base_type_of_special_type>
    1250:	mov	r1, r0
    1254:	mvn	r0, #0
    1258:	cmp	r1, #0
    125c:	popne	{r4, sl, fp, pc}
    1260:	mov	r0, #0
    1264:	pop	{r4, sl, fp, pc}
    1268:	mvn	r0, #12
    126c:	b	1274 <coda_cursor_goto_next_record_field+0x188>
    1270:	mvn	r0, #10
    1274:	mov	r1, #0
    1278:	bl	0 <coda_set_error>
    127c:	b	116c <coda_cursor_goto_next_record_field+0x80>
    1280:	movw	r0, #0
    1284:	movw	r1, #0
    1288:	movw	r3, #0
    128c:	movw	r2, #766	; 0x2fe
    1290:	movt	r0, #0
    1294:	movt	r1, #0
    1298:	movt	r3, #0
    129c:	bl	0 <__assert_fail>
    12a0:	.word	0x00000088

000012a4 <coda_cursor_goto_available_union_field>:
    12a4:	push	{r4, sl, fp, lr}
    12a8:	add	fp, sp, #8
    12ac:	cmp	r0, #0
    12b0:	beq	130c <coda_cursor_goto_available_union_field+0x68>
    12b4:	mov	r4, r0
    12b8:	ldr	r0, [r0, #4]
    12bc:	cmp	r0, #1
    12c0:	blt	130c <coda_cursor_goto_available_union_field+0x68>
    12c4:	add	r0, r4, r0, lsl #4
    12c8:	ldr	r0, [r0, #-8]
    12cc:	cmp	r0, #0
    12d0:	beq	130c <coda_cursor_goto_available_union_field+0x68>
    12d4:	ldr	r1, [r0]
    12d8:	cmp	r1, #99	; 0x63
    12dc:	ldrhi	r0, [r0, #4]
    12e0:	ldr	r0, [r0, #8]
    12e4:	cmp	r0, #0
    12e8:	beq	1330 <coda_cursor_goto_available_union_field+0x8c>
    12ec:	bl	0 <coda_type_get_class_name>
    12f0:	movw	r1, #0
    12f4:	mov	r2, r0
    12f8:	mvn	r0, #104	; 0x68
    12fc:	movt	r1, #0
    1300:	bl	0 <coda_set_error>
    1304:	mvn	r0, #0
    1308:	pop	{r4, sl, fp, pc}
    130c:	movw	r1, #0
    1310:	movw	r2, #0
    1314:	mvn	r0, #99	; 0x63
    1318:	movw	r3, #803	; 0x323
    131c:	movt	r1, #0
    1320:	movt	r2, #0
    1324:	bl	0 <coda_set_error>
    1328:	mvn	r0, #0
    132c:	pop	{r4, sl, fp, pc}
    1330:	cmp	r1, #2
    1334:	bcc	136c <coda_cursor_goto_available_union_field+0xc8>
    1338:	cmp	r1, #100	; 0x64
    133c:	beq	1378 <coda_cursor_goto_available_union_field+0xd4>
    1340:	sub	r0, r1, #101	; 0x65
    1344:	cmp	r0, #5
    1348:	bcs	1390 <coda_cursor_goto_available_union_field+0xec>
    134c:	movw	r0, #0
    1350:	movw	r1, #0
    1354:	movw	r3, #0
    1358:	movw	r2, #835	; 0x343
    135c:	movt	r0, #0
    1360:	movt	r1, #0
    1364:	movt	r3, #0
    1368:	bl	0 <__assert_fail>
    136c:	mov	r0, r4
    1370:	bl	0 <coda_ascbin_cursor_goto_available_union_field>
    1374:	b	1380 <coda_cursor_goto_available_union_field+0xdc>
    1378:	mov	r0, r4
    137c:	bl	0 <coda_mem_cursor_goto_available_union_field>
    1380:	mov	r1, r0
    1384:	mvn	r0, #0
    1388:	cmp	r1, #0
    138c:	popne	{r4, sl, fp, pc}
    1390:	ldr	r0, [r4, #4]
    1394:	add	r0, r4, r0, lsl #4
    1398:	ldr	r0, [r0, #-8]
    139c:	ldr	r0, [r0]
    13a0:	cmp	r0, #100	; 0x64
    13a4:	bne	13b0 <coda_cursor_goto_available_union_field+0x10c>
    13a8:	mov	r0, r4
    13ac:	bl	0 <coda_mem_cursor_update_offset>
    13b0:	ldr	r0, [pc, #88]	; 1410 <coda_cursor_goto_available_union_field+0x16c>
    13b4:	ldr	r1, [pc, r0]
    13b8:	bl	0 <__aeabi_read_tp>
    13bc:	ldr	r0, [r0, r1]
    13c0:	cmp	r0, #0
    13c4:	beq	1408 <coda_cursor_goto_available_union_field+0x164>
    13c8:	ldr	r0, [r4, #4]
    13cc:	add	r0, r4, r0, lsl #4
    13d0:	ldr	r0, [r0, #-8]
    13d4:	ldr	r1, [r0]
    13d8:	cmp	r1, #99	; 0x63
    13dc:	ldrhi	r0, [r0, #4]
    13e0:	ldr	r0, [r0, #8]
    13e4:	cmp	r0, #6
    13e8:	bne	1408 <coda_cursor_goto_available_union_field+0x164>
    13ec:	mov	r0, r4
    13f0:	bl	e5c <coda_cursor_use_base_type_of_special_type>
    13f4:	mov	r1, r0
    13f8:	mvn	r0, #0
    13fc:	cmp	r1, #0
    1400:	moveq	r0, #0
    1404:	pop	{r4, sl, fp, pc}
    1408:	mov	r0, #0
    140c:	pop	{r4, sl, fp, pc}
    1410:	.word	0x00000054

00001414 <coda_cursor_goto_first_array_element>:
    1414:	mov	r1, #0
    1418:	b	c78 <coda_cursor_goto_array_element_by_index>

0000141c <coda_cursor_goto_array_element>:
    141c:	push	{r4, sl, fp, lr}
    1420:	add	fp, sp, #8
    1424:	sub	sp, sp, #8
    1428:	cmp	r0, #0
    142c:	beq	1494 <coda_cursor_goto_array_element+0x78>
    1430:	ldr	r3, [r0, #4]
    1434:	mov	r4, r0
    1438:	cmp	r3, #1
    143c:	blt	1494 <coda_cursor_goto_array_element+0x78>
    1440:	add	r0, r4, r3, lsl #4
    1444:	ldr	r0, [r0, #-8]
    1448:	cmp	r0, #0
    144c:	beq	1494 <coda_cursor_goto_array_element+0x78>
    1450:	ldr	ip, [r0]
    1454:	cmp	ip, #99	; 0x63
    1458:	ldrhi	r0, [r0, #4]
    145c:	ldr	r0, [r0, #8]
    1460:	cmp	r0, #1
    1464:	bne	14bc <coda_cursor_goto_array_element+0xa0>
    1468:	cmp	r3, #32
    146c:	bne	14d8 <coda_cursor_goto_array_element+0xbc>
    1470:	movw	r1, #0
    1474:	movw	r3, #0
    1478:	movw	r0, #905	; 0x389
    147c:	mov	r2, #32
    1480:	str	r0, [sp]
    1484:	movt	r1, #0
    1488:	movt	r3, #0
    148c:	mvn	r0, #99	; 0x63
    1490:	b	14ac <coda_cursor_goto_array_element+0x90>
    1494:	movw	r1, #0
    1498:	movw	r2, #0
    149c:	mvn	r0, #99	; 0x63
    14a0:	movw	r3, #890	; 0x37a
    14a4:	movt	r1, #0
    14a8:	movt	r2, #0
    14ac:	bl	0 <coda_set_error>
    14b0:	mvn	r0, #0
    14b4:	sub	sp, fp, #8
    14b8:	pop	{r4, sl, fp, pc}
    14bc:	bl	0 <coda_type_get_class_name>
    14c0:	movw	r1, #0
    14c4:	mov	r2, r0
    14c8:	mvn	r0, #104	; 0x68
    14cc:	movt	r1, #0
    14d0:	bl	0 <coda_set_error>
    14d4:	b	14b0 <coda_cursor_goto_array_element+0x94>
    14d8:	sub	r0, ip, #100	; 0x64
    14dc:	cmp	r0, #5
    14e0:	bhi	1510 <coda_cursor_goto_array_element+0xf4>
    14e4:	add	r3, pc, #0
    14e8:	ldr	pc, [r3, r0, lsl #2]
    14ec:	.word	0x00001504
    14f0:	.word	0x00001524
    14f4:	.word	0x0000152c
    14f8:	.word	0x0000153c
    14fc:	.word	0x00001548
    1500:	.word	0x00001554
    1504:	mov	r0, r4
    1508:	bl	0 <coda_mem_cursor_goto_array_element>
    150c:	b	155c <coda_cursor_goto_array_element+0x140>
    1510:	cmp	ip, #2
    1514:	bcs	156c <coda_cursor_goto_array_element+0x150>
    1518:	mov	r0, r4
    151c:	bl	0 <coda_ascbin_cursor_goto_array_element>
    1520:	b	155c <coda_cursor_goto_array_element+0x140>
    1524:	mvn	r0, #10
    1528:	b	1530 <coda_cursor_goto_array_element+0x114>
    152c:	mvn	r0, #12
    1530:	mov	r1, #0
    1534:	bl	0 <coda_set_error>
    1538:	b	14b0 <coda_cursor_goto_array_element+0x94>
    153c:	mov	r0, r4
    1540:	bl	0 <coda_cdf_cursor_goto_array_element>
    1544:	b	155c <coda_cursor_goto_array_element+0x140>
    1548:	mov	r0, r4
    154c:	bl	0 <coda_netcdf_cursor_goto_array_element>
    1550:	b	155c <coda_cursor_goto_array_element+0x140>
    1554:	mov	r0, r4
    1558:	bl	0 <coda_grib_cursor_goto_array_element>
    155c:	mov	r1, r0
    1560:	mvn	r0, #0
    1564:	cmp	r1, #0
    1568:	bne	15ec <coda_cursor_goto_array_element+0x1d0>
    156c:	ldr	r0, [r4, #4]
    1570:	add	r0, r4, r0, lsl #4
    1574:	ldr	r0, [r0, #-8]
    1578:	ldr	r0, [r0]
    157c:	cmp	r0, #100	; 0x64
    1580:	bne	158c <coda_cursor_goto_array_element+0x170>
    1584:	mov	r0, r4
    1588:	bl	0 <coda_mem_cursor_update_offset>
    158c:	ldr	r0, [pc, #96]	; 15f4 <coda_cursor_goto_array_element+0x1d8>
    1590:	ldr	r1, [pc, r0]
    1594:	bl	0 <__aeabi_read_tp>
    1598:	ldr	r0, [r0, r1]
    159c:	cmp	r0, #0
    15a0:	beq	15e8 <coda_cursor_goto_array_element+0x1cc>
    15a4:	ldr	r0, [r4, #4]
    15a8:	add	r0, r4, r0, lsl #4
    15ac:	ldr	r0, [r0, #-8]
    15b0:	ldr	r1, [r0]
    15b4:	cmp	r1, #99	; 0x63
    15b8:	ldrhi	r0, [r0, #4]
    15bc:	ldr	r0, [r0, #8]
    15c0:	cmp	r0, #6
    15c4:	bne	15e8 <coda_cursor_goto_array_element+0x1cc>
    15c8:	mov	r0, r4
    15cc:	bl	e5c <coda_cursor_use_base_type_of_special_type>
    15d0:	mov	r1, r0
    15d4:	mvn	r0, #0
    15d8:	cmp	r1, #0
    15dc:	moveq	r0, #0
    15e0:	sub	sp, fp, #8
    15e4:	pop	{r4, sl, fp, pc}
    15e8:	mov	r0, #0
    15ec:	sub	sp, fp, #8
    15f0:	pop	{r4, sl, fp, pc}
    15f4:	.word	0x0000005c

000015f8 <coda_cursor_goto_next_array_element>:
    15f8:	push	{r4, sl, fp, lr}
    15fc:	add	fp, sp, #8
    1600:	cmp	r0, #0
    1604:	beq	1690 <coda_cursor_goto_next_array_element+0x98>
    1608:	mov	r4, r0
    160c:	ldr	r0, [r0, #4]
    1610:	cmp	r0, #2
    1614:	blt	1690 <coda_cursor_goto_next_array_element+0x98>
    1618:	sub	r1, r0, #1
    161c:	add	r2, r4, r1, lsl #4
    1620:	ldr	r1, [r2, #8]
    1624:	cmp	r1, #0
    1628:	beq	1690 <coda_cursor_goto_next_array_element+0x98>
    162c:	add	r0, r4, r0, lsl #4
    1630:	ldr	r0, [r0, #-24]	; 0xffffffe8
    1634:	ldr	r1, [r0]
    1638:	cmp	r1, #99	; 0x63
    163c:	ldrhi	r0, [r0, #4]
    1640:	ldr	r0, [r0, #8]
    1644:	cmp	r0, #1
    1648:	bne	16b4 <coda_cursor_goto_next_array_element+0xbc>
    164c:	ldr	r0, [r2, #12]
    1650:	cmn	r0, #1
    1654:	beq	16d4 <coda_cursor_goto_next_array_element+0xdc>
    1658:	sub	r0, r1, #100	; 0x64
    165c:	cmp	r0, #5
    1660:	bhi	16e4 <coda_cursor_goto_next_array_element+0xec>
    1664:	add	r1, pc, #0
    1668:	ldr	pc, [r1, r0, lsl #2]
    166c:	.word	0x00001684
    1670:	.word	0x000016f8
    1674:	.word	0x00001700
    1678:	.word	0x00001714
    167c:	.word	0x00001720
    1680:	.word	0x0000172c
    1684:	mov	r0, r4
    1688:	bl	0 <coda_mem_cursor_goto_next_array_element>
    168c:	b	1734 <coda_cursor_goto_next_array_element+0x13c>
    1690:	movw	r1, #0
    1694:	movw	r2, #0
    1698:	mvn	r0, #99	; 0x63
    169c:	movw	r3, #1134	; 0x46e
    16a0:	movt	r1, #0
    16a4:	movt	r2, #0
    16a8:	bl	0 <coda_set_error>
    16ac:	mvn	r0, #0
    16b0:	pop	{r4, sl, fp, pc}
    16b4:	bl	0 <coda_type_get_class_name>
    16b8:	movw	r1, #0
    16bc:	mov	r2, r0
    16c0:	mvn	r0, #104	; 0x68
    16c4:	movt	r1, #0
    16c8:	bl	0 <coda_set_error>
    16cc:	mvn	r0, #0
    16d0:	pop	{r4, sl, fp, pc}
    16d4:	movw	r1, #0
    16d8:	mvn	r0, #104	; 0x68
    16dc:	movt	r1, #0
    16e0:	b	1708 <coda_cursor_goto_next_array_element+0x110>
    16e4:	cmp	r1, #2
    16e8:	bcs	1744 <coda_cursor_goto_next_array_element+0x14c>
    16ec:	mov	r0, r4
    16f0:	bl	0 <coda_ascbin_cursor_goto_next_array_element>
    16f4:	b	1734 <coda_cursor_goto_next_array_element+0x13c>
    16f8:	mvn	r0, #10
    16fc:	b	1704 <coda_cursor_goto_next_array_element+0x10c>
    1700:	mvn	r0, #12
    1704:	mov	r1, #0
    1708:	bl	0 <coda_set_error>
    170c:	mvn	r0, #0
    1710:	pop	{r4, sl, fp, pc}
    1714:	mov	r0, r4
    1718:	bl	0 <coda_cdf_cursor_goto_next_array_element>
    171c:	b	1734 <coda_cursor_goto_next_array_element+0x13c>
    1720:	mov	r0, r4
    1724:	bl	0 <coda_netcdf_cursor_goto_next_array_element>
    1728:	b	1734 <coda_cursor_goto_next_array_element+0x13c>
    172c:	mov	r0, r4
    1730:	bl	0 <coda_grib_cursor_goto_next_array_element>
    1734:	mov	r1, r0
    1738:	mvn	r0, #0
    173c:	cmp	r1, #0
    1740:	popne	{r4, sl, fp, pc}
    1744:	ldr	r0, [r4, #4]
    1748:	add	r0, r4, r0, lsl #4
    174c:	ldr	r0, [r0, #-8]
    1750:	ldr	r0, [r0]
    1754:	cmp	r0, #100	; 0x64
    1758:	bne	1764 <coda_cursor_goto_next_array_element+0x16c>
    175c:	mov	r0, r4
    1760:	bl	0 <coda_mem_cursor_update_offset>
    1764:	ldr	r0, [pc, #88]	; 17c4 <coda_cursor_goto_next_array_element+0x1cc>
    1768:	ldr	r1, [pc, r0]
    176c:	bl	0 <__aeabi_read_tp>
    1770:	ldr	r0, [r0, r1]
    1774:	cmp	r0, #0
    1778:	beq	17bc <coda_cursor_goto_next_array_element+0x1c4>
    177c:	ldr	r0, [r4, #4]
    1780:	add	r0, r4, r0, lsl #4
    1784:	ldr	r0, [r0, #-8]
    1788:	ldr	r1, [r0]
    178c:	cmp	r1, #99	; 0x63
    1790:	ldrhi	r0, [r0, #4]
    1794:	ldr	r0, [r0, #8]
    1798:	cmp	r0, #6
    179c:	bne	17bc <coda_cursor_goto_next_array_element+0x1c4>
    17a0:	mov	r0, r4
    17a4:	bl	e5c <coda_cursor_use_base_type_of_special_type>
    17a8:	mov	r1, r0
    17ac:	mvn	r0, #0
    17b0:	cmp	r1, #0
    17b4:	moveq	r0, #0
    17b8:	pop	{r4, sl, fp, pc}
    17bc:	mov	r0, #0
    17c0:	pop	{r4, sl, fp, pc}
    17c4:	.word	0x00000054

000017c8 <coda_cursor_has_ascii_content>:
    17c8:	push	{r4, r5, r6, r7, fp, lr}
    17cc:	add	fp, sp, #16
    17d0:	sub	sp, sp, #520	; 0x208
    17d4:	cmp	r0, #0
    17d8:	beq	1864 <coda_cursor_has_ascii_content+0x9c>
    17dc:	mov	r4, r1
    17e0:	mov	r1, r0
    17e4:	ldr	r0, [r0, #4]
    17e8:	cmp	r0, #1
    17ec:	blt	1864 <coda_cursor_has_ascii_content+0x9c>
    17f0:	add	r0, r1, r0, lsl #4
    17f4:	ldr	r0, [r0, #-8]
    17f8:	cmp	r0, #0
    17fc:	beq	1864 <coda_cursor_has_ascii_content+0x9c>
    1800:	cmp	r4, #0
    1804:	beq	188c <coda_cursor_has_ascii_content+0xc4>
    1808:	ldr	r2, [r0]
    180c:	cmp	r2, #0
    1810:	beq	18a4 <coda_cursor_has_ascii_content+0xdc>
    1814:	cmp	r2, #99	; 0x63
    1818:	ldrhi	r0, [r0, #4]
    181c:	ldr	r2, [r0, #8]
    1820:	cmp	r2, #6
    1824:	bne	18ac <coda_cursor_has_ascii_content+0xe4>
    1828:	mov	r5, sp
    182c:	mov	r2, #520	; 0x208
    1830:	mov	r0, r5
    1834:	bl	0 <memcpy>
    1838:	mov	r0, r5
    183c:	bl	e5c <coda_cursor_use_base_type_of_special_type>
    1840:	mov	r1, r0
    1844:	mvn	r0, #0
    1848:	cmp	r1, #0
    184c:	bne	185c <coda_cursor_has_ascii_content+0x94>
    1850:	mov	r0, sp
    1854:	mov	r1, r4
    1858:	bl	17c8 <coda_cursor_has_ascii_content>
    185c:	sub	sp, fp, #16
    1860:	pop	{r4, r5, r6, r7, fp, pc}
    1864:	movw	r1, #0
    1868:	movw	r2, #0
    186c:	mvn	r0, #99	; 0x63
    1870:	movw	r3, #1477	; 0x5c5
    1874:	movt	r1, #0
    1878:	movt	r2, #0
    187c:	bl	0 <coda_set_error>
    1880:	mvn	r0, #0
    1884:	sub	sp, fp, #16
    1888:	pop	{r4, r5, r6, r7, fp, pc}
    188c:	movw	r1, #0
    1890:	movw	r2, #0
    1894:	mvn	r0, #99	; 0x63
    1898:	movw	r3, #1482	; 0x5ca
    189c:	movt	r1, #0
    18a0:	b	1878 <coda_cursor_has_ascii_content+0xb0>
    18a4:	mov	r0, #1
    18a8:	b	18c8 <coda_cursor_has_ascii_content+0x100>
    18ac:	ldr	r0, [r0]
    18b0:	sub	r1, r2, #4
    18b4:	clz	r1, r1
    18b8:	lsr	r1, r1, #5
    18bc:	clz	r0, r0
    18c0:	lsr	r0, r0, #5
    18c4:	orr	r0, r1, r0
    18c8:	str	r0, [r4]
    18cc:	mov	r0, #0
    18d0:	sub	sp, fp, #16
    18d4:	pop	{r4, r5, r6, r7, fp, pc}

000018d8 <coda_cursor_has_attributes>:
    18d8:	push	{fp, lr}
    18dc:	mov	fp, sp
    18e0:	cmp	r0, #0
    18e4:	beq	1930 <coda_cursor_has_attributes+0x58>
    18e8:	ldr	r2, [r0, #4]
    18ec:	cmp	r2, #1
    18f0:	blt	1930 <coda_cursor_has_attributes+0x58>
    18f4:	add	r0, r0, r2, lsl #4
    18f8:	ldr	r0, [r0, #-8]
    18fc:	cmp	r0, #0
    1900:	beq	1930 <coda_cursor_has_attributes+0x58>
    1904:	cmp	r1, #0
    1908:	beq	1954 <coda_cursor_has_attributes+0x7c>
    190c:	ldr	r2, [r0]
    1910:	cmp	r2, #99	; 0x63
    1914:	ldrhi	r0, [r0, #4]
    1918:	ldr	r0, [r0, #36]	; 0x24
    191c:	cmp	r0, #0
    1920:	movwne	r0, #1
    1924:	str	r0, [r1]
    1928:	mov	r0, #0
    192c:	pop	{fp, pc}
    1930:	movw	r1, #0
    1934:	movw	r2, #0
    1938:	mvn	r0, #99	; 0x63
    193c:	movw	r3, #1528	; 0x5f8
    1940:	movt	r1, #0
    1944:	movt	r2, #0
    1948:	bl	0 <coda_set_error>
    194c:	mvn	r0, #0
    1950:	pop	{fp, pc}
    1954:	movw	r1, #0
    1958:	movw	r2, #0
    195c:	mvn	r0, #99	; 0x63
    1960:	movw	r3, #1533	; 0x5fd
    1964:	movt	r1, #0
    1968:	b	1944 <coda_cursor_has_attributes+0x6c>

0000196c <coda_cursor_get_string_length>:
    196c:	push	{r4, r5, r6, sl, fp, lr}
    1970:	add	fp, sp, #16
    1974:	sub	sp, sp, #8
    1978:	cmp	r0, #0
    197c:	beq	1a18 <coda_cursor_get_string_length+0xac>
    1980:	mov	r6, r0
    1984:	ldr	r0, [r0, #4]
    1988:	cmp	r0, #1
    198c:	blt	1a18 <coda_cursor_get_string_length+0xac>
    1990:	add	r0, r6, r0, lsl #4
    1994:	ldr	r0, [r0, #-8]
    1998:	cmp	r0, #0
    199c:	beq	1a18 <coda_cursor_get_string_length+0xac>
    19a0:	mov	r5, r1
    19a4:	cmp	r1, #0
    19a8:	beq	1a44 <coda_cursor_get_string_length+0xd8>
    19ac:	add	r1, sp, #4
    19b0:	mov	r0, r6
    19b4:	bl	17c8 <coda_cursor_has_ascii_content>
    19b8:	mvn	r4, #0
    19bc:	cmp	r0, #0
    19c0:	bne	1a38 <coda_cursor_get_string_length+0xcc>
    19c4:	ldr	r0, [sp, #4]
    19c8:	cmp	r0, #0
    19cc:	beq	1a5c <coda_cursor_get_string_length+0xf0>
    19d0:	ldr	r0, [r6, #4]
    19d4:	add	r0, r6, r0, lsl #4
    19d8:	ldr	r0, [r0, #-8]
    19dc:	ldr	r0, [r0]
    19e0:	sub	r1, r0, #100	; 0x64
    19e4:	cmp	r1, #4
    19e8:	bhi	1a70 <coda_cursor_get_string_length+0x104>
    19ec:	add	r0, pc, #0
    19f0:	ldr	pc, [r0, r1, lsl #2]
    19f4:	.word	0x00001a08
    19f8:	.word	0x00001ab8
    19fc:	.word	0x00001aa0
    1a00:	.word	0x00001aa8
    1a04:	.word	0x00001a90
    1a08:	mov	r0, r6
    1a0c:	mov	r1, r5
    1a10:	bl	0 <coda_mem_cursor_get_string_length>
    1a14:	b	1ad4 <coda_cursor_get_string_length+0x168>
    1a18:	movw	r1, #0
    1a1c:	movw	r2, #0
    1a20:	mvn	r0, #99	; 0x63
    1a24:	movw	r3, #1559	; 0x617
    1a28:	movt	r1, #0
    1a2c:	movt	r2, #0
    1a30:	bl	0 <coda_set_error>
    1a34:	mvn	r4, #0
    1a38:	mov	r0, r4
    1a3c:	sub	sp, fp, #16
    1a40:	pop	{r4, r5, r6, sl, fp, pc}
    1a44:	movw	r1, #0
    1a48:	movw	r2, #0
    1a4c:	mvn	r0, #99	; 0x63
    1a50:	movw	r3, #1564	; 0x61c
    1a54:	movt	r1, #0
    1a58:	b	1a2c <coda_cursor_get_string_length+0xc0>
    1a5c:	movw	r1, #0
    1a60:	mvn	r0, #104	; 0x68
    1a64:	movt	r1, #0
    1a68:	bl	0 <coda_set_error>
    1a6c:	b	1a38 <coda_cursor_get_string_length+0xcc>
    1a70:	cmp	r0, #1
    1a74:	beq	1ac8 <coda_cursor_get_string_length+0x15c>
    1a78:	cmp	r0, #0
    1a7c:	bne	1adc <coda_cursor_get_string_length+0x170>
    1a80:	mov	r0, r6
    1a84:	mov	r1, r5
    1a88:	bl	0 <coda_ascii_cursor_get_string_length>
    1a8c:	b	1ad4 <coda_cursor_get_string_length+0x168>
    1a90:	mov	r0, r6
    1a94:	mov	r1, r5
    1a98:	bl	0 <coda_netcdf_cursor_get_string_length>
    1a9c:	b	1ad4 <coda_cursor_get_string_length+0x168>
    1aa0:	mvn	r0, #12
    1aa4:	b	1abc <coda_cursor_get_string_length+0x150>
    1aa8:	mov	r0, r6
    1aac:	mov	r1, r5
    1ab0:	bl	0 <coda_cdf_cursor_get_string_length>
    1ab4:	b	1ad4 <coda_cursor_get_string_length+0x168>
    1ab8:	mvn	r0, #10
    1abc:	mov	r1, #0
    1ac0:	bl	0 <coda_set_error>
    1ac4:	b	1a38 <coda_cursor_get_string_length+0xcc>
    1ac8:	mov	r0, r6
    1acc:	mov	r1, r5
    1ad0:	bl	0 <coda_bin_cursor_get_string_length>
    1ad4:	mov	r4, r0
    1ad8:	b	1a38 <coda_cursor_get_string_length+0xcc>
    1adc:	movw	r0, #0
    1ae0:	movw	r1, #0
    1ae4:	movw	r3, #0
    1ae8:	movw	r2, #1608	; 0x648
    1aec:	movt	r0, #0
    1af0:	movt	r1, #0
    1af4:	movt	r3, #0
    1af8:	bl	0 <__assert_fail>

00001afc <coda_cursor_get_bit_size>:
    1afc:	cmp	r0, #0
    1b00:	beq	1b4c <coda_cursor_get_bit_size+0x50>
    1b04:	ldr	r2, [r0, #4]
    1b08:	cmp	r2, #1
    1b0c:	blt	1b4c <coda_cursor_get_bit_size+0x50>
    1b10:	add	r2, r0, r2, lsl #4
    1b14:	ldr	r2, [r2, #-8]
    1b18:	cmp	r2, #0
    1b1c:	beq	1b4c <coda_cursor_get_bit_size+0x50>
    1b20:	ldr	r3, [r2]
    1b24:	mov	r2, #0
    1b28:	cmp	r3, #100	; 0x64
    1b2c:	ble	1b80 <coda_cursor_get_bit_size+0x84>
    1b30:	sub	r0, r3, #101	; 0x65
    1b34:	cmp	r0, #5
    1b38:	mvncc	r0, #0
    1b3c:	strcc	r0, [r1]
    1b40:	strcc	r0, [r1, #4]
    1b44:	mov	r0, r2
    1b48:	bx	lr
    1b4c:	push	{fp, lr}
    1b50:	mov	fp, sp
    1b54:	movw	r1, #0
    1b58:	movw	r2, #0
    1b5c:	mvn	r0, #99	; 0x63
    1b60:	movw	r3, #1630	; 0x65e
    1b64:	movt	r1, #0
    1b68:	movt	r2, #0
    1b6c:	bl	0 <coda_set_error>
    1b70:	mvn	r2, #0
    1b74:	pop	{fp, lr}
    1b78:	mov	r0, r2
    1b7c:	bx	lr
    1b80:	cmp	r3, #0
    1b84:	beq	1b9c <coda_cursor_get_bit_size+0xa0>
    1b88:	cmp	r3, #1
    1b8c:	beq	1ba0 <coda_cursor_get_bit_size+0xa4>
    1b90:	cmp	r3, #100	; 0x64
    1b94:	bne	1b44 <coda_cursor_get_bit_size+0x48>
    1b98:	b	0 <coda_mem_cursor_get_bit_size>
    1b9c:	b	0 <coda_ascii_cursor_get_bit_size>
    1ba0:	b	0 <coda_bin_cursor_get_bit_size>

00001ba4 <coda_cursor_get_byte_size>:
    1ba4:	push	{r4, r6, r7, sl, fp, lr}
    1ba8:	add	fp, sp, #16
    1bac:	sub	sp, sp, #8
    1bb0:	cmp	r0, #0
    1bb4:	beq	1bf8 <coda_cursor_get_byte_size+0x54>
    1bb8:	mov	r4, r1
    1bbc:	ldr	r1, [r0, #4]
    1bc0:	cmp	r1, #1
    1bc4:	blt	1bf8 <coda_cursor_get_byte_size+0x54>
    1bc8:	add	r1, r0, r1, lsl #4
    1bcc:	ldr	r1, [r1, #-8]
    1bd0:	cmp	r1, #0
    1bd4:	beq	1bf8 <coda_cursor_get_byte_size+0x54>
    1bd8:	mov	r1, sp
    1bdc:	bl	1afc <coda_cursor_get_bit_size>
    1be0:	mov	r1, r0
    1be4:	mvn	r0, #0
    1be8:	cmp	r1, #0
    1bec:	beq	1c20 <coda_cursor_get_byte_size+0x7c>
    1bf0:	sub	sp, fp, #16
    1bf4:	pop	{r4, r6, r7, sl, fp, pc}
    1bf8:	movw	r1, #0
    1bfc:	movw	r2, #0
    1c00:	mvn	r0, #99	; 0x63
    1c04:	movw	r3, #1670	; 0x686
    1c08:	movt	r1, #0
    1c0c:	movt	r2, #0
    1c10:	bl	0 <coda_set_error>
    1c14:	mvn	r0, #0
    1c18:	sub	sp, fp, #16
    1c1c:	pop	{r4, r6, r7, sl, fp, pc}
    1c20:	ldr	r0, [sp, #4]
    1c24:	cmn	r0, #1
    1c28:	ble	1c58 <coda_cursor_get_byte_size+0xb4>
    1c2c:	ldr	r1, [sp]
    1c30:	lsr	r2, r1, #3
    1c34:	orr	r2, r2, r0, lsl #29
    1c38:	lsr	r0, r0, #3
    1c3c:	adds	r6, r2, #1
    1c40:	adc	r7, r0, #0
    1c44:	ands	r1, r1, #7
    1c48:	moveq	r6, r2
    1c4c:	moveq	r7, r0
    1c50:	strd	r6, [r4]
    1c54:	b	1c64 <coda_cursor_get_byte_size+0xc0>
    1c58:	mvn	r0, #0
    1c5c:	str	r0, [r4]
    1c60:	str	r0, [r4, #4]
    1c64:	mov	r0, #0
    1c68:	sub	sp, fp, #16
    1c6c:	pop	{r4, r6, r7, sl, fp, pc}

00001c70 <coda_cursor_get_num_elements>:
    1c70:	push	{fp, lr}
    1c74:	mov	fp, sp
    1c78:	cmp	r0, #0
    1c7c:	beq	1cd4 <coda_cursor_get_num_elements+0x64>
    1c80:	ldr	r2, [r0, #4]
    1c84:	cmp	r2, #1
    1c88:	blt	1cd4 <coda_cursor_get_num_elements+0x64>
    1c8c:	add	r2, r0, r2, lsl #4
    1c90:	ldr	r2, [r2, #-8]
    1c94:	cmp	r2, #0
    1c98:	beq	1cd4 <coda_cursor_get_num_elements+0x64>
    1c9c:	ldr	r2, [r2]
    1ca0:	sub	r3, r2, #100	; 0x64
    1ca4:	cmp	r3, #5
    1ca8:	bhi	1cf8 <coda_cursor_get_num_elements+0x88>
    1cac:	add	r2, pc, #0
    1cb0:	ldr	pc, [r2, r3, lsl #2]
    1cb4:	.word	0x00001ccc
    1cb8:	.word	0x00001d30
    1cbc:	.word	0x00001d18
    1cc0:	.word	0x00001d28
    1cc4:	.word	0x00001d10
    1cc8:	.word	0x00001d44
    1ccc:	pop	{fp, lr}
    1cd0:	b	0 <coda_mem_cursor_get_num_elements>
    1cd4:	movw	r1, #0
    1cd8:	movw	r2, #0
    1cdc:	mvn	r0, #99	; 0x63
    1ce0:	movw	r3, #1704	; 0x6a8
    1ce4:	movt	r1, #0
    1ce8:	movt	r2, #0
    1cec:	bl	0 <coda_set_error>
    1cf0:	mvn	r0, #0
    1cf4:	pop	{fp, pc}
    1cf8:	cmp	r2, #1
    1cfc:	beq	1d20 <coda_cursor_get_num_elements+0xb0>
    1d00:	cmp	r2, #0
    1d04:	bne	1d4c <coda_cursor_get_num_elements+0xdc>
    1d08:	pop	{fp, lr}
    1d0c:	b	0 <coda_ascii_cursor_get_num_elements>
    1d10:	pop	{fp, lr}
    1d14:	b	0 <coda_netcdf_cursor_get_num_elements>
    1d18:	mvn	r0, #12
    1d1c:	b	1d34 <coda_cursor_get_num_elements+0xc4>
    1d20:	pop	{fp, lr}
    1d24:	b	0 <coda_bin_cursor_get_num_elements>
    1d28:	pop	{fp, lr}
    1d2c:	b	0 <coda_cdf_cursor_get_num_elements>
    1d30:	mvn	r0, #10
    1d34:	mov	r1, #0
    1d38:	bl	0 <coda_set_error>
    1d3c:	mvn	r0, #0
    1d40:	pop	{fp, pc}
    1d44:	pop	{fp, lr}
    1d48:	b	0 <coda_grib_cursor_get_num_elements>
    1d4c:	movw	r0, #0
    1d50:	movw	r1, #0
    1d54:	movw	r3, #0
    1d58:	movw	r2, #1738	; 0x6ca
    1d5c:	movt	r0, #0
    1d60:	movt	r1, #0
    1d64:	movt	r3, #0
    1d68:	bl	0 <__assert_fail>

00001d6c <coda_cursor_get_product_file>:
    1d6c:	cmp	r0, #0
    1d70:	beq	1d9c <coda_cursor_get_product_file+0x30>
    1d74:	ldr	r2, [r0, #4]
    1d78:	cmp	r2, #1
    1d7c:	blt	1d9c <coda_cursor_get_product_file+0x30>
    1d80:	add	r2, r0, r2, lsl #4
    1d84:	ldr	r2, [r2, #-8]
    1d88:	cmp	r2, #0
    1d8c:	ldrne	r0, [r0]
    1d90:	strne	r0, [r1]
    1d94:	movne	r0, #0
    1d98:	bxne	lr
    1d9c:	push	{fp, lr}
    1da0:	mov	fp, sp
    1da4:	movw	r1, #0
    1da8:	movw	r2, #0
    1dac:	mvn	r0, #99	; 0x63
    1db0:	movw	r3, #1753	; 0x6d9
    1db4:	movt	r1, #0
    1db8:	movt	r2, #0
    1dbc:	bl	0 <coda_set_error>
    1dc0:	mvn	r0, #0
    1dc4:	pop	{fp, pc}

00001dc8 <coda_cursor_get_depth>:
    1dc8:	push	{fp, lr}
    1dcc:	mov	fp, sp
    1dd0:	cmp	r0, #0
    1dd4:	beq	1e20 <coda_cursor_get_depth+0x58>
    1dd8:	ldr	r2, [r0, #4]
    1ddc:	cmp	r2, #1
    1de0:	blt	1e20 <coda_cursor_get_depth+0x58>
    1de4:	sub	r2, r2, #1
    1de8:	add	r0, r0, r2, lsl #4
    1dec:	ldr	r0, [r0, #8]
    1df0:	cmp	r0, #0
    1df4:	beq	1e20 <coda_cursor_get_depth+0x58>
    1df8:	cmp	r1, #0
    1dfc:	movne	r0, #0
    1e00:	strne	r2, [r1]
    1e04:	popne	{fp, pc}
    1e08:	movw	r1, #0
    1e0c:	movw	r2, #0
    1e10:	mvn	r0, #99	; 0x63
    1e14:	movw	r3, #1781	; 0x6f5
    1e18:	movt	r1, #0
    1e1c:	b	1e34 <coda_cursor_get_depth+0x6c>
    1e20:	movw	r1, #0
    1e24:	movw	r2, #0
    1e28:	mvn	r0, #99	; 0x63
    1e2c:	movw	r3, #1775	; 0x6ef
    1e30:	movt	r1, #0
    1e34:	movt	r2, #0
    1e38:	bl	0 <coda_set_error>
    1e3c:	mvn	r0, #0
    1e40:	pop	{fp, pc}

00001e44 <coda_cursor_get_index>:
    1e44:	push	{fp, lr}
    1e48:	mov	fp, sp
    1e4c:	cmp	r0, #0
    1e50:	beq	1ea0 <coda_cursor_get_index+0x5c>
    1e54:	ldr	r2, [r0, #4]
    1e58:	cmp	r2, #2
    1e5c:	blt	1ea0 <coda_cursor_get_index+0x5c>
    1e60:	sub	r2, r2, #1
    1e64:	add	r0, r0, r2, lsl #4
    1e68:	ldr	r2, [r0, #8]
    1e6c:	cmp	r2, #0
    1e70:	beq	1ea0 <coda_cursor_get_index+0x5c>
    1e74:	cmp	r1, #0
    1e78:	ldrne	r0, [r0, #12]
    1e7c:	strne	r0, [r1]
    1e80:	movne	r0, #0
    1e84:	popne	{fp, pc}
    1e88:	movw	r1, #0
    1e8c:	movw	r2, #0
    1e90:	mvn	r0, #99	; 0x63
    1e94:	movw	r3, #1811	; 0x713
    1e98:	movt	r1, #0
    1e9c:	b	1eb4 <coda_cursor_get_index+0x70>
    1ea0:	movw	r1, #0
    1ea4:	movw	r2, #0
    1ea8:	mvn	r0, #99	; 0x63
    1eac:	movw	r3, #1805	; 0x70d
    1eb0:	movt	r1, #0
    1eb4:	movt	r2, #0
    1eb8:	bl	0 <coda_set_error>
    1ebc:	mvn	r0, #0
    1ec0:	pop	{fp, pc}

00001ec4 <coda_cursor_get_file_bit_offset>:
    1ec4:	push	{fp, lr}
    1ec8:	mov	fp, sp
    1ecc:	cmp	r0, #0
    1ed0:	beq	1f20 <coda_cursor_get_file_bit_offset+0x5c>
    1ed4:	ldr	r2, [r0, #4]
    1ed8:	cmp	r2, #1
    1edc:	blt	1f20 <coda_cursor_get_file_bit_offset+0x5c>
    1ee0:	sub	r2, r2, #1
    1ee4:	add	r2, r0, r2, lsl #4
    1ee8:	ldr	r0, [r2, #8]
    1eec:	cmp	r0, #0
    1ef0:	beq	1f20 <coda_cursor_get_file_bit_offset+0x5c>
    1ef4:	cmp	r1, #0
    1ef8:	beq	1f44 <coda_cursor_get_file_bit_offset+0x80>
    1efc:	ldr	ip, [r0]
    1f00:	mov	r0, #0
    1f04:	sub	r3, ip, #100	; 0x64
    1f08:	cmp	r3, #6
    1f0c:	bcs	1f5c <coda_cursor_get_file_bit_offset+0x98>
    1f10:	mvn	r2, #0
    1f14:	str	r2, [r1]
    1f18:	str	r2, [r1, #4]
    1f1c:	pop	{fp, pc}
    1f20:	movw	r1, #0
    1f24:	movw	r2, #0
    1f28:	mvn	r0, #99	; 0x63
    1f2c:	movw	r3, #1833	; 0x729
    1f30:	movt	r1, #0
    1f34:	movt	r2, #0
    1f38:	bl	0 <coda_set_error>
    1f3c:	mvn	r0, #0
    1f40:	pop	{fp, pc}
    1f44:	movw	r1, #0
    1f48:	movw	r2, #0
    1f4c:	mvn	r0, #99	; 0x63
    1f50:	movw	r3, #1839	; 0x72f
    1f54:	movt	r1, #0
    1f58:	b	1f34 <coda_cursor_get_file_bit_offset+0x70>
    1f5c:	cmp	ip, #1
    1f60:	ldrdls	r2, [r2, #16]
    1f64:	strdls	r2, [r1]
    1f68:	popls	{fp, pc}
    1f6c:	pop	{fp, pc}

00001f70 <coda_cursor_get_file_byte_offset>:
    1f70:	push	{r4, r5, fp, lr}
    1f74:	add	fp, sp, #8
    1f78:	cmp	r0, #0
    1f7c:	beq	1fc8 <coda_cursor_get_file_byte_offset+0x58>
    1f80:	ldr	r2, [r0, #4]
    1f84:	cmp	r2, #1
    1f88:	blt	1fc8 <coda_cursor_get_file_byte_offset+0x58>
    1f8c:	sub	r2, r2, #1
    1f90:	add	r2, r0, r2, lsl #4
    1f94:	ldr	r0, [r2, #8]
    1f98:	cmp	r0, #0
    1f9c:	beq	1fc8 <coda_cursor_get_file_byte_offset+0x58>
    1fa0:	cmp	r1, #0
    1fa4:	beq	1fec <coda_cursor_get_file_byte_offset+0x7c>
    1fa8:	ldr	r3, [r0]
    1fac:	sub	r0, r3, #100	; 0x64
    1fb0:	cmp	r0, #6
    1fb4:	bcs	2004 <coda_cursor_get_file_byte_offset+0x94>
    1fb8:	mvn	r0, #0
    1fbc:	str	r0, [r1]
    1fc0:	str	r0, [r1, #4]
    1fc4:	pop	{r4, r5, fp, pc}
    1fc8:	movw	r1, #0
    1fcc:	movw	r2, #0
    1fd0:	mvn	r0, #99	; 0x63
    1fd4:	movw	r3, #1875	; 0x753
    1fd8:	movt	r1, #0
    1fdc:	movt	r2, #0
    1fe0:	bl	0 <coda_set_error>
    1fe4:	mvn	r0, #0
    1fe8:	pop	{r4, r5, fp, pc}
    1fec:	movw	r1, #0
    1ff0:	movw	r2, #0
    1ff4:	mvn	r0, #99	; 0x63
    1ff8:	movw	r3, #1881	; 0x759
    1ffc:	movt	r1, #0
    2000:	b	1fdc <coda_cursor_get_file_byte_offset+0x6c>
    2004:	mov	r0, #0
    2008:	cmp	r3, #1
    200c:	pophi	{r4, r5, fp, pc}
    2010:	ldr	r4, [r2, #16]
    2014:	ldr	r3, [r2, #20]
    2018:	and	r2, r4, r3
    201c:	cmn	r2, #1
    2020:	mvneq	r3, #0
    2024:	streq	r3, [r1]
    2028:	streq	r3, [r1, #4]
    202c:	popeq	{r4, r5, fp, pc}
    2030:	lsr	r2, r4, #3
    2034:	asr	r5, r3, #3
    2038:	orr	r4, r2, r3, lsl #29
    203c:	strd	r4, [r1]
    2040:	pop	{r4, r5, fp, pc}

00002044 <coda_cursor_get_format>:
    2044:	push	{fp, lr}
    2048:	mov	fp, sp
    204c:	cmp	r0, #0
    2050:	beq	2094 <coda_cursor_get_format+0x50>
    2054:	ldr	r2, [r0, #4]
    2058:	cmp	r2, #1
    205c:	blt	2094 <coda_cursor_get_format+0x50>
    2060:	add	r0, r0, r2, lsl #4
    2064:	ldr	r0, [r0, #-8]
    2068:	cmp	r0, #0
    206c:	beq	2094 <coda_cursor_get_format+0x50>
    2070:	cmp	r1, #0
    2074:	beq	20b8 <coda_cursor_get_format+0x74>
    2078:	ldr	r2, [r0]
    207c:	cmp	r2, #99	; 0x63
    2080:	ldrhi	r0, [r0, #4]
    2084:	ldr	r0, [r0]
    2088:	str	r0, [r1]
    208c:	mov	r0, #0
    2090:	pop	{fp, pc}
    2094:	movw	r1, #0
    2098:	movw	r2, #0
    209c:	mvn	r0, #99	; 0x63
    20a0:	movw	r3, #1925	; 0x785
    20a4:	movt	r1, #0
    20a8:	movt	r2, #0
    20ac:	bl	0 <coda_set_error>
    20b0:	mvn	r0, #0
    20b4:	pop	{fp, pc}
    20b8:	movw	r1, #0
    20bc:	movw	r2, #0
    20c0:	mvn	r0, #99	; 0x63
    20c4:	movw	r3, #1930	; 0x78a
    20c8:	movt	r1, #0
    20cc:	b	20a8 <coda_cursor_get_format+0x64>

000020d0 <coda_cursor_get_type_class>:
    20d0:	push	{fp, lr}
    20d4:	mov	fp, sp
    20d8:	cmp	r0, #0
    20dc:	beq	2120 <coda_cursor_get_type_class+0x50>
    20e0:	ldr	r2, [r0, #4]
    20e4:	cmp	r2, #1
    20e8:	blt	2120 <coda_cursor_get_type_class+0x50>
    20ec:	add	r0, r0, r2, lsl #4
    20f0:	ldr	r0, [r0, #-8]
    20f4:	cmp	r0, #0
    20f8:	beq	2120 <coda_cursor_get_type_class+0x50>
    20fc:	cmp	r1, #0
    2100:	beq	2144 <coda_cursor_get_type_class+0x74>
    2104:	ldr	r2, [r0]
    2108:	cmp	r2, #99	; 0x63
    210c:	ldrhi	r0, [r0, #4]
    2110:	ldr	r0, [r0, #8]
    2114:	str	r0, [r1]
    2118:	mov	r0, #0
    211c:	pop	{fp, pc}
    2120:	movw	r1, #0
    2124:	movw	r2, #0
    2128:	mvn	r0, #99	; 0x63
    212c:	movw	r3, #1954	; 0x7a2
    2130:	movt	r1, #0
    2134:	movt	r2, #0
    2138:	bl	0 <coda_set_error>
    213c:	mvn	r0, #0
    2140:	pop	{fp, pc}
    2144:	movw	r1, #0
    2148:	movw	r2, #0
    214c:	mvn	r0, #99	; 0x63
    2150:	movw	r3, #1959	; 0x7a7
    2154:	movt	r1, #0
    2158:	b	2134 <coda_cursor_get_type_class+0x64>

0000215c <coda_cursor_get_read_type>:
    215c:	cmp	r0, #0
    2160:	beq	2190 <coda_cursor_get_read_type+0x34>
    2164:	ldr	r2, [r0, #4]
    2168:	cmp	r2, #1
    216c:	blt	2190 <coda_cursor_get_read_type+0x34>
    2170:	add	r0, r0, r2, lsl #4
    2174:	ldr	r0, [r0, #-8]
    2178:	cmp	r0, #0
    217c:	beq	2190 <coda_cursor_get_read_type+0x34>
    2180:	ldr	r2, [r0]
    2184:	cmp	r2, #99	; 0x63
    2188:	ldrhi	r0, [r0, #4]
    218c:	b	0 <coda_type_get_read_type>
    2190:	push	{fp, lr}
    2194:	mov	fp, sp
    2198:	movw	r1, #0
    219c:	movw	r2, #0
    21a0:	mvn	r0, #99	; 0x63
    21a4:	movw	r3, #1982	; 0x7be
    21a8:	movt	r1, #0
    21ac:	movt	r2, #0
    21b0:	bl	0 <coda_set_error>
    21b4:	mvn	r0, #0
    21b8:	pop	{fp, pc}

000021bc <coda_cursor_get_special_type>:
    21bc:	push	{fp, lr}
    21c0:	mov	fp, sp
    21c4:	cmp	r0, #0
    21c8:	beq	2204 <coda_cursor_get_special_type+0x48>
    21cc:	ldr	r2, [r0, #4]
    21d0:	cmp	r2, #1
    21d4:	blt	2204 <coda_cursor_get_special_type+0x48>
    21d8:	add	r0, r0, r2, lsl #4
    21dc:	ldr	r0, [r0, #-8]
    21e0:	cmp	r0, #0
    21e4:	beq	2204 <coda_cursor_get_special_type+0x48>
    21e8:	cmp	r1, #0
    21ec:	beq	2228 <coda_cursor_get_special_type+0x6c>
    21f0:	ldr	r2, [r0]
    21f4:	cmp	r2, #99	; 0x63
    21f8:	ldrhi	r0, [r0, #4]
    21fc:	pop	{fp, lr}
    2200:	b	0 <coda_type_get_special_type>
    2204:	movw	r1, #0
    2208:	movw	r2, #0
    220c:	mvn	r0, #99	; 0x63
    2210:	movw	r3, #2003	; 0x7d3
    2214:	movt	r1, #0
    2218:	movt	r2, #0
    221c:	bl	0 <coda_set_error>
    2220:	mvn	r0, #0
    2224:	pop	{fp, pc}
    2228:	movw	r1, #0
    222c:	movw	r2, #0
    2230:	mvn	r0, #99	; 0x63
    2234:	movw	r3, #2008	; 0x7d8
    2238:	movt	r1, #0
    223c:	b	2218 <coda_cursor_get_special_type+0x5c>

00002240 <coda_cursor_get_record_field_available_status>:
    2240:	push	{fp, lr}
    2244:	mov	fp, sp
    2248:	cmp	r0, #0
    224c:	beq	22b8 <coda_cursor_get_record_field_available_status+0x78>
    2250:	ldr	ip, [r0, #4]
    2254:	cmp	ip, #1
    2258:	blt	22b8 <coda_cursor_get_record_field_available_status+0x78>
    225c:	ldr	r3, [r0]
    2260:	cmp	r3, #0
    2264:	beq	22b8 <coda_cursor_get_record_field_available_status+0x78>
    2268:	add	r3, r0, ip, lsl #4
    226c:	ldr	r3, [r3, #-8]
    2270:	cmp	r3, #0
    2274:	beq	22b8 <coda_cursor_get_record_field_available_status+0x78>
    2278:	cmp	r2, #0
    227c:	beq	22e0 <coda_cursor_get_record_field_available_status+0xa0>
    2280:	ldr	ip, [r3]
    2284:	cmp	ip, #99	; 0x63
    2288:	ldrhi	r3, [r3, #4]
    228c:	ldr	r3, [r3, #8]
    2290:	cmp	r3, #0
    2294:	beq	22f8 <coda_cursor_get_record_field_available_status+0xb8>
    2298:	mov	r0, r3
    229c:	bl	0 <coda_type_get_class_name>
    22a0:	movw	r1, #0
    22a4:	mov	r2, r0
    22a8:	mvn	r0, #104	; 0x68
    22ac:	movt	r1, #0
    22b0:	bl	0 <coda_set_error>
    22b4:	b	22d4 <coda_cursor_get_record_field_available_status+0x94>
    22b8:	movw	r1, #0
    22bc:	movw	r2, #0
    22c0:	mvn	r0, #99	; 0x63
    22c4:	movw	r3, #2085	; 0x825
    22c8:	movt	r1, #0
    22cc:	movt	r2, #0
    22d0:	bl	0 <coda_set_error>
    22d4:	mvn	r3, #0
    22d8:	mov	r0, r3
    22dc:	pop	{fp, pc}
    22e0:	movw	r1, #0
    22e4:	movw	r2, #0
    22e8:	mvn	r0, #99	; 0x63
    22ec:	movw	r3, #2090	; 0x82a
    22f0:	movt	r1, #0
    22f4:	b	22cc <coda_cursor_get_record_field_available_status+0x8c>
    22f8:	mov	r3, #0
    22fc:	cmp	ip, #100	; 0x64
    2300:	ble	2320 <coda_cursor_get_record_field_available_status+0xe0>
    2304:	sub	r0, ip, #101	; 0x65
    2308:	cmp	r0, #4
    230c:	bcs	2340 <coda_cursor_get_record_field_available_status+0x100>
    2310:	mov	r0, #1
    2314:	str	r0, [r2]
    2318:	mov	r0, r3
    231c:	pop	{fp, pc}
    2320:	cmp	ip, #2
    2324:	bcs	2330 <coda_cursor_get_record_field_available_status+0xf0>
    2328:	pop	{fp, lr}
    232c:	b	0 <coda_ascbin_cursor_get_record_field_available_status>
    2330:	cmp	ip, #100	; 0x64
    2334:	bne	2318 <coda_cursor_get_record_field_available_status+0xd8>
    2338:	pop	{fp, lr}
    233c:	b	0 <coda_mem_cursor_get_record_field_available_status>
    2340:	cmp	ip, #105	; 0x69
    2344:	bne	2318 <coda_cursor_get_record_field_available_status+0xd8>
    2348:	movw	r0, #0
    234c:	movw	r1, #0
    2350:	movw	r3, #0
    2354:	movw	r2, #2117	; 0x845
    2358:	movt	r0, #0
    235c:	movt	r1, #0
    2360:	movt	r3, #0
    2364:	bl	0 <__assert_fail>

00002368 <coda_cursor_get_available_union_field_index>:
    2368:	push	{fp, lr}
    236c:	mov	fp, sp
    2370:	cmp	r0, #0
    2374:	beq	23e4 <coda_cursor_get_available_union_field_index+0x7c>
    2378:	ldr	r2, [r0, #4]
    237c:	cmp	r2, #1
    2380:	blt	23e4 <coda_cursor_get_available_union_field_index+0x7c>
    2384:	ldr	r3, [r0]
    2388:	cmp	r3, #0
    238c:	beq	23e4 <coda_cursor_get_available_union_field_index+0x7c>
    2390:	add	r2, r0, r2, lsl #4
    2394:	ldr	r2, [r2, #-8]
    2398:	cmp	r2, #0
    239c:	beq	23e4 <coda_cursor_get_available_union_field_index+0x7c>
    23a0:	cmp	r1, #0
    23a4:	beq	2408 <coda_cursor_get_available_union_field_index+0xa0>
    23a8:	ldr	r3, [r2]
    23ac:	cmp	r3, #99	; 0x63
    23b0:	ldrhi	r2, [r2, #4]
    23b4:	ldr	r2, [r2, #8]
    23b8:	cmp	r2, #0
    23bc:	beq	2420 <coda_cursor_get_available_union_field_index+0xb8>
    23c0:	mov	r0, r2
    23c4:	bl	0 <coda_type_get_class_name>
    23c8:	movw	r1, #0
    23cc:	mov	r2, r0
    23d0:	mvn	r0, #104	; 0x68
    23d4:	movt	r1, #0
    23d8:	bl	0 <coda_set_error>
    23dc:	mvn	r0, #0
    23e0:	pop	{fp, pc}
    23e4:	movw	r1, #0
    23e8:	movw	r2, #0
    23ec:	mvn	r0, #99	; 0x63
    23f0:	movw	r3, #2140	; 0x85c
    23f4:	movt	r1, #0
    23f8:	movt	r2, #0
    23fc:	bl	0 <coda_set_error>
    2400:	mvn	r0, #0
    2404:	pop	{fp, pc}
    2408:	movw	r1, #0
    240c:	movw	r2, #0
    2410:	mvn	r0, #99	; 0x63
    2414:	movw	r3, #2145	; 0x861
    2418:	movt	r1, #0
    241c:	b	23f8 <coda_cursor_get_available_union_field_index+0x90>
    2420:	cmp	r3, #2
    2424:	bcs	2430 <coda_cursor_get_available_union_field_index+0xc8>
    2428:	pop	{fp, lr}
    242c:	b	0 <coda_ascbin_cursor_get_available_union_field_index>
    2430:	cmp	r3, #100	; 0x64
    2434:	bne	2440 <coda_cursor_get_available_union_field_index+0xd8>
    2438:	pop	{fp, lr}
    243c:	b	0 <coda_mem_cursor_get_available_union_field_index>
    2440:	movw	r0, #0
    2444:	movw	r1, #0
    2448:	movw	r3, #0
    244c:	movw	r2, #2172	; 0x87c
    2450:	movt	r0, #0
    2454:	movt	r1, #0
    2458:	movt	r3, #0
    245c:	bl	0 <__assert_fail>

00002460 <coda_cursor_get_array_dim>:
    2460:	push	{fp, lr}
    2464:	mov	fp, sp
    2468:	cmp	r0, #0
    246c:	beq	24b0 <coda_cursor_get_array_dim+0x50>
    2470:	ldr	r3, [r0, #4]
    2474:	cmp	r3, #1
    2478:	blt	24b0 <coda_cursor_get_array_dim+0x50>
    247c:	add	r3, r0, r3, lsl #4
    2480:	ldr	r3, [r3, #-8]
    2484:	cmp	r3, #0
    2488:	beq	24b0 <coda_cursor_get_array_dim+0x50>
    248c:	cmp	r1, #0
    2490:	cmpne	r2, #0
    2494:	bne	24d4 <coda_cursor_get_array_dim+0x74>
    2498:	movw	r1, #0
    249c:	movw	r2, #0
    24a0:	mvn	r0, #99	; 0x63
    24a4:	movw	r3, #2202	; 0x89a
    24a8:	movt	r1, #0
    24ac:	b	24c4 <coda_cursor_get_array_dim+0x64>
    24b0:	movw	r1, #0
    24b4:	movw	r2, #0
    24b8:	mvn	r0, #99	; 0x63
    24bc:	movw	r3, #2197	; 0x895
    24c0:	movt	r1, #0
    24c4:	movt	r2, #0
    24c8:	bl	0 <coda_set_error>
    24cc:	mvn	r0, #0
    24d0:	pop	{fp, pc}
    24d4:	ldr	ip, [r3]
    24d8:	cmp	ip, #99	; 0x63
    24dc:	ldrhi	r3, [r3, #4]
    24e0:	ldr	r3, [r3, #8]
    24e4:	cmp	r3, #1
    24e8:	bne	2520 <coda_cursor_get_array_dim+0xc0>
    24ec:	sub	lr, ip, #100	; 0x64
    24f0:	cmp	lr, #5
    24f4:	bhi	2544 <coda_cursor_get_array_dim+0xe4>
    24f8:	add	r3, pc, #0
    24fc:	ldr	pc, [r3, lr, lsl #2]
    2500:	.word	0x00002518
    2504:	.word	0x0000256c
    2508:	.word	0x0000255c
    250c:	.word	0x00002564
    2510:	.word	0x00002554
    2514:	.word	0x00002580
    2518:	pop	{fp, lr}
    251c:	b	0 <coda_mem_cursor_get_array_dim>
    2520:	mov	r0, r3
    2524:	bl	0 <coda_type_get_class_name>
    2528:	movw	r1, #0
    252c:	mov	r2, r0
    2530:	mvn	r0, #104	; 0x68
    2534:	movt	r1, #0
    2538:	bl	0 <coda_set_error>
    253c:	mvn	r0, #0
    2540:	pop	{fp, pc}
    2544:	cmp	ip, #2
    2548:	bcs	2588 <coda_cursor_get_array_dim+0x128>
    254c:	pop	{fp, lr}
    2550:	b	0 <coda_ascbin_cursor_get_array_dim>
    2554:	pop	{fp, lr}
    2558:	b	0 <coda_netcdf_cursor_get_array_dim>
    255c:	mvn	r0, #12
    2560:	b	2570 <coda_cursor_get_array_dim+0x110>
    2564:	pop	{fp, lr}
    2568:	b	0 <coda_cdf_cursor_get_array_dim>
    256c:	mvn	r0, #10
    2570:	mov	r1, #0
    2574:	bl	0 <coda_set_error>
    2578:	mvn	r0, #0
    257c:	pop	{fp, pc}
    2580:	pop	{fp, lr}
    2584:	b	0 <coda_grib_cursor_get_array_dim>
    2588:	movw	r0, #0
    258c:	movw	r1, #0
    2590:	movw	r3, #0
    2594:	movw	r2, #2243	; 0x8c3
    2598:	movt	r0, #0
    259c:	movt	r1, #0
    25a0:	movt	r3, #0
    25a4:	bl	0 <__assert_fail>
