
../repos/prog2/1.3:     file format elf32-littlearm


Disassembly of section .init:

000103a0 <.init>:
   103a0:	push	{r3, lr}
   103a4:	bl	1045c <getc@plt+0x3c>
   103a8:	pop	{r3, pc}

Disassembly of section .plt:

000103ac <printf@plt-0x14>:
   103ac:	push	{lr}		; (str lr, [sp, #-4]!)
   103b0:	ldr	lr, [pc, #4]	; 103bc <printf@plt-0x4>
   103b4:	add	lr, pc, lr
   103b8:	ldr	pc, [lr, #8]!
   103bc:	andeq	r0, r1, r4, asr #24

000103c0 <printf@plt>:
   103c0:	add	ip, pc, #0, 12
   103c4:	add	ip, ip, #16, 20	; 0x10000
   103c8:	ldr	pc, [ip, #3140]!	; 0xc44

000103cc <fopen@plt>:
   103cc:	add	ip, pc, #0, 12
   103d0:	add	ip, ip, #16, 20	; 0x10000
   103d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000103d8 <strcpy@plt>:
   103d8:	add	ip, pc, #0, 12
   103dc:	add	ip, ip, #16, 20	; 0x10000
   103e0:	ldr	pc, [ip, #3124]!	; 0xc34

000103e4 <__libc_start_main@plt>:
   103e4:	add	ip, pc, #0, 12
   103e8:	add	ip, ip, #16, 20	; 0x10000
   103ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000103f0 <__gmon_start__@plt>:
   103f0:	add	ip, pc, #0, 12
   103f4:	add	ip, ip, #16, 20	; 0x10000
   103f8:	ldr	pc, [ip, #3108]!	; 0xc24

000103fc <fclose@plt>:
   103fc:	add	ip, pc, #0, 12
   10400:	add	ip, ip, #16, 20	; 0x10000
   10404:	ldr	pc, [ip, #3100]!	; 0xc1c

00010408 <fseek@plt>:
   10408:	add	ip, pc, #0, 12
   1040c:	add	ip, ip, #16, 20	; 0x10000
   10410:	ldr	pc, [ip, #3092]!	; 0xc14

00010414 <abort@plt>:
   10414:	add	ip, pc, #0, 12
   10418:	add	ip, ip, #16, 20	; 0x10000
   1041c:	ldr	pc, [ip, #3084]!	; 0xc0c

00010420 <getc@plt>:
   10420:	add	ip, pc, #0, 12
   10424:	add	ip, ip, #16, 20	; 0x10000
   10428:	ldr	pc, [ip, #3076]!	; 0xc04

Disassembly of section .text:

0001042c <.text>:
   1042c:	bleq	4c570 <getc@plt+0x3c150>
   10430:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10434:	strbtmi	fp, [sl], -r2, lsl #24
   10438:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   1043c:			; <UNDEFINED> instruction: 0xc010f8df
   10440:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10444:	blmi	122458 <getc@plt+0x112038>
   10448:	svc	0x00ccf7ff
   1044c:	svc	0x00e2f7ff
   10450:	andeq	r0, r1, sp, lsl r7
   10454:	andeq	r0, r1, r4, lsr #10
   10458:	ldrdeq	r0, [r1], -sp
   1045c:	ldr	r3, [pc, #20]	; 10478 <getc@plt+0x58>
   10460:	ldr	r2, [pc, #20]	; 1047c <getc@plt+0x5c>
   10464:	add	r3, pc, r3
   10468:	ldr	r2, [r3, r2]
   1046c:	cmp	r2, #0
   10470:	bxeq	lr
   10474:	b	103f0 <__gmon_start__@plt>
   10478:	muleq	r1, r4, fp
   1047c:	andeq	r0, r0, r0, lsr r0
   10480:	eorseq	pc, ip, r1, asr #4
   10484:	andeq	pc, r2, r0, asr #5
   10488:	teqeq	ip, #268435460	; 0x10000004	; <UNPREDICTABLE>
   1048c:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10490:	andle	r4, r5, r3, lsl #5
   10494:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10498:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1049c:	ldrmi	fp, [r8, -r3, lsl #2]
   104a0:	svclt	0x00004770
   104a4:	eorseq	pc, ip, r1, asr #4
   104a8:	andeq	pc, r2, r0, asr #5
   104ac:	teqeq	ip, r1, asr #4	; <UNPREDICTABLE>
   104b0:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   104b4:	svceq	0x00d91a0b
   104b8:			; <UNDEFINED> instruction: 0x01a3eb01
   104bc:	andle	r1, r5, r9, asr #32
   104c0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   104c4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   104c8:	ldrmi	fp, [r8, -r3, lsl #2]
   104cc:	svclt	0x00004770
   104d0:	vqrshl.s8	d27, d0, d1
   104d4:	vmvn.i32	d16, #786432	; 0x000c0000
   104d8:	stmdavc	r3!, {r1, sl}
   104dc:			; <UNDEFINED> instruction: 0xf7ffb91b
   104e0:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   104e4:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   104e8:	svclt	0x0000e7dc
   104ec:	mov	ip, sp
   104f0:	sub	sp, sp, #8
   104f4:	str	ip, [sp]
   104f8:	str	lr, [sp, #4]
   104fc:	mov	r3, #0
   10500:	cmp	r3, r1
   10504:	bge	10518 <getc@plt+0xf8>
   10508:	mov	r2, #0
   1050c:	strb	r2, [r0, r3]
   10510:	add	r3, r3, #1
   10514:	b	10500 <getc@plt+0xe0>
   10518:	ldr	lr, [sp, #4]
   1051c:	add	sp, sp, #8
   10520:	bx	lr
   10524:	mov	ip, sp
   10528:	sub	sp, sp, #232	; 0xe8
   1052c:	sub	sp, sp, #2048	; 0x800
   10530:	str	ip, [sp]
   10534:	str	lr, [sp, #4]
   10538:	str	r4, [sp, #8]
   1053c:	str	r5, [sp, #12]
   10540:	str	r6, [sp, #16]
   10544:	ldr	r0, [pc, #396]	; 106d8 <getc@plt+0x2b8>
   10548:	ldr	r1, [pc, #388]	; 106d4 <getc@plt+0x2b4>
   1054c:	bl	103cc <fopen@plt>
   10550:	mov	r4, r0
   10554:	mov	r6, #0
   10558:	mov	r0, r4
   1055c:	bl	10420 <getc@plt>
   10560:	cmn	r0, #1
   10564:	bne	1058c <getc@plt+0x16c>
   10568:	mov	r0, r4
   1056c:	bl	103fc <fclose@plt>
   10570:	mov	r0, #0
   10574:	ldr	r4, [sp, #8]
   10578:	ldr	r5, [sp, #12]
   1057c:	ldr	r6, [sp, #16]
   10580:	ldr	lr, [sp, #4]
   10584:	ldr	sp, [sp]
   10588:	bx	lr
   1058c:	cmp	r0, #60	; 0x3c
   10590:	bne	10558 <getc@plt+0x138>
   10594:	mov	r0, r4
   10598:	bl	10420 <getc@plt>
   1059c:	cmp	r0, #97	; 0x61
   105a0:	bne	10558 <getc@plt+0x138>
   105a4:	add	r0, sp, #24
   105a8:	mov	r1, #200	; 0xc8
   105ac:	bl	104ec <getc@plt+0xcc>
   105b0:	mov	r1, #7
   105b4:	mov	r2, #1
   105b8:	mov	r0, r4
   105bc:	bl	10408 <fseek@plt>
   105c0:	mov	r5, #0
   105c4:	mov	r0, r4
   105c8:	bl	10420 <getc@plt>
   105cc:	cmp	r0, #34	; 0x22
   105d0:	beq	105e8 <getc@plt+0x1c8>
   105d4:	add	r1, sp, #24
   105d8:	and	r2, r0, #255	; 0xff
   105dc:	strb	r2, [r1, r5]
   105e0:	add	r5, r5, #1
   105e4:	b	105c4 <getc@plt+0x1a4>
   105e8:	add	r1, sp, #24
   105ec:	mov	r0, #0
   105f0:	strb	r0, [r1, r5]
   105f4:	movw	r2, #410	; 0x19a
   105f8:	add	ip, sp, #224	; 0xe0
   105fc:	mla	r0, r2, r6, ip
   10600:	add	r1, sp, #24
   10604:	bl	103d8 <strcpy@plt>
   10608:	add	r0, sp, #24
   1060c:	mov	r1, #200	; 0xc8
   10610:	bl	104ec <getc@plt+0xcc>
   10614:	mov	r1, #1
   10618:	mov	r2, #1
   1061c:	mov	r0, r4
   10620:	bl	10408 <fseek@plt>
   10624:	mov	r5, #0
   10628:	mov	r0, r4
   1062c:	bl	10420 <getc@plt>
   10630:	cmp	r0, #60	; 0x3c
   10634:	beq	10674 <getc@plt+0x254>
   10638:	cmp	r0, #225	; 0xe1
   1063c:	bne	10660 <getc@plt+0x240>
   10640:	add	r3, sp, #24
   10644:	mov	r1, #195	; 0xc3
   10648:	strb	r1, [r3, r5]
   1064c:	add	r5, r5, #1
   10650:	add	ip, sp, #24
   10654:	mov	r3, #161	; 0xa1
   10658:	strb	r3, [ip, r5]
   1065c:	b	1066c <getc@plt+0x24c>
   10660:	add	ip, sp, #24
   10664:	and	r2, r0, #255	; 0xff
   10668:	strb	r2, [ip, r5]
   1066c:	add	r5, r5, #1
   10670:	b	10628 <getc@plt+0x208>
   10674:	add	ip, sp, #24
   10678:	mov	r3, #0
   1067c:	strb	r3, [ip, r5]
   10680:	movw	r1, #410	; 0x19a
   10684:	add	r2, sp, #224	; 0xe0
   10688:	mla	r0, r1, r6, r2
   1068c:	add	r0, r0, #205	; 0xcd
   10690:	add	r1, sp, #24
   10694:	bl	103d8 <strcpy@plt>
   10698:	add	r0, sp, #24
   1069c:	mov	r1, #80	; 0x50
   106a0:	bl	104ec <getc@plt+0xcc>
   106a4:	ldr	r0, [pc, #36]	; 106d0 <getc@plt+0x2b0>
   106a8:	movw	r1, #410	; 0x19a
   106ac:	add	r2, sp, #224	; 0xe0
   106b0:	mla	r3, r1, r6, r2
   106b4:	add	r1, r3, #205	; 0xcd
   106b8:	movw	ip, #410	; 0x19a
   106bc:	add	r3, sp, #224	; 0xe0
   106c0:	mla	r2, ip, r6, r3
   106c4:	bl	103c0 <printf@plt>
   106c8:	add	r6, r6, #1
   106cc:	b	10558 <getc@plt+0x138>
   106d0:	ldrdeq	r0, [r1], -r4
   106d4:	ldrdeq	r0, [r1], -r2
   106d8:			; <UNDEFINED> instruction: 0x000107bc
   106dc:	mvnsmi	lr, #737280	; 0xb4000
   106e0:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   106e4:	strmi	r4, [r8], ip, lsl #26
   106e8:			; <UNDEFINED> instruction: 0x4691447e
   106ec:			; <UNDEFINED> instruction: 0xf7ff447d
   106f0:	blne	1dcc058 <getc@plt+0x1dbbc38>
   106f4:	strhle	r1, [sl], -r6
   106f8:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   106fc:	svccc	0x0004f855
   10700:	strbmi	r4, [r1], -sl, asr #12
   10704:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10708:	adcmi	r4, r6, #152, 14	; 0x2600000
   1070c:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10710:	svclt	0x000083f8
   10714:	andeq	r0, r1, r8, lsr #16
   10718:	andeq	r0, r1, r0, lsr #16
   1071c:	svclt	0x00004770

Disassembly of section .fini:

00010720 <.fini>:
   10720:	push	{r3, lr}
   10724:	pop	{r3, pc}
