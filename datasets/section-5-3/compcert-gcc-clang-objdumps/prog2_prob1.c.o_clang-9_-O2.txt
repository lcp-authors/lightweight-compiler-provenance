
../compcert-repos/prog2/CMakeFiles/MT1E1-2.1.dir/Extras/Miniteste1-Exemplo2/1/prob1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <tira_carta>:
   0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   4:	add	fp, sp, #24
   8:	ldr	r8, [r0]
   c:	ldr	r4, [r1]
  10:	mov	r5, r0
  14:	ldr	r6, [r8]
  18:	ldr	r0, [r4]
  1c:	mov	r1, r6
  20:	bl	0 <strcmp>
  24:	mov	r7, #0
  28:	cmp	r0, #0
  2c:	beq	4c <tira_carta+0x4c>
  30:	ldr	r4, [r4, #4]
  34:	mov	r1, r6
  38:	ldr	r0, [r4]
  3c:	bl	0 <strcmp>
  40:	add	r7, r7, #1
  44:	cmp	r0, #0
  48:	bne	30 <tira_carta+0x30>
  4c:	mov	r0, r5
  50:	mov	r1, r8
  54:	bl	0 <lista_remove>
  58:	mov	r0, r7
  5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000060 <faz_jogada>:
  60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  64:	add	fp, sp, #28
  68:	sub	sp, sp, #12
  6c:	ldr	r4, [r0]
  70:	str	r0, [sp, #8]
  74:	str	r2, [sp, #4]
  78:	mov	r5, r1
  7c:	lsl	r0, r4, #2
  80:	bl	0 <malloc>
  84:	mov	r7, r0
  88:	mvn	r6, #0
  8c:	cmp	r4, #1
  90:	blt	198 <faz_jogada+0x138>
  94:	mov	r8, #0
  98:	b	c4 <faz_jogada+0x64>
  9c:	mov	r0, r6
  a0:	mov	r1, r4
  a4:	mov	r5, r6
  a8:	bl	0 <lista_remove>
  ac:	ldr	r0, [sp, #8]
  b0:	str	sl, [r7, r8, lsl #2]
  b4:	add	r8, r8, #1
  b8:	ldr	r0, [r0]
  bc:	cmp	r8, r0
  c0:	bge	114 <faz_jogada+0xb4>
  c4:	ldr	r0, [sp, #4]
  c8:	ldr	r4, [r5]
  cc:	mov	r6, r5
  d0:	ldr	r9, [r0]
  d4:	ldr	r5, [r4]
  d8:	ldr	r0, [r9]
  dc:	mov	r1, r5
  e0:	bl	0 <strcmp>
  e4:	cmp	r0, #0
  e8:	mov	sl, #0
  ec:	beq	9c <faz_jogada+0x3c>
  f0:	mov	sl, #0
  f4:	ldr	r9, [r9, #4]
  f8:	mov	r1, r5
  fc:	ldr	r0, [r9]
 100:	bl	0 <strcmp>
 104:	add	sl, sl, #1
 108:	cmp	r0, #0
 10c:	bne	f4 <faz_jogada+0x94>
 110:	b	9c <faz_jogada+0x3c>
 114:	cmp	r0, #1
 118:	mvn	r6, #0
 11c:	blt	198 <faz_jogada+0x138>
 120:	and	r1, r0, #1
 124:	cmp	r0, #1
 128:	bne	144 <faz_jogada+0xe4>
 12c:	mov	r0, #0
 130:	mvn	r6, #0
 134:	mvn	r2, #0
 138:	cmp	r1, #0
 13c:	bne	18c <faz_jogada+0x12c>
 140:	b	198 <faz_jogada+0x138>
 144:	sub	r3, r0, r1
 148:	mov	r0, #0
 14c:	mvn	r6, #0
 150:	mvn	r2, #0
 154:	mov	r4, r7
 158:	ldr	r5, [r4, r0, lsl #2]!
 15c:	cmp	r5, r2
 160:	movgt	r2, r5
 164:	ldr	r5, [r4, #4]
 168:	movgt	r6, r0
 16c:	cmp	r5, r2
 170:	addgt	r6, r0, #1
 174:	add	r0, r0, #2
 178:	movgt	r2, r5
 17c:	cmp	r3, r0
 180:	bne	154 <faz_jogada+0xf4>
 184:	cmp	r1, #0
 188:	beq	198 <faz_jogada+0x138>
 18c:	ldr	r1, [r7, r0, lsl #2]
 190:	cmp	r1, r2
 194:	movgt	r6, r0
 198:	mov	r0, r7
 19c:	bl	0 <free>
 1a0:	ldr	r0, [sp, #8]
 1a4:	ldr	r0, [r0, #8]
 1a8:	ldr	r0, [r0, r6, lsl #2]
 1ac:	sub	sp, fp, #28
 1b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000001b4 <numero_vitorias>:
 1b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 1b8:	add	fp, sp, #24
 1bc:	ldr	r6, [r0]
 1c0:	cmp	r6, #1
 1c4:	blt	200 <numero_vitorias+0x4c>
 1c8:	ldr	r7, [r0, #8]
 1cc:	mov	r8, r1
 1d0:	mov	r5, #0
 1d4:	mov	r4, #0
 1d8:	ldr	r1, [r7, r4, lsl #2]
 1dc:	mov	r0, r8
 1e0:	bl	0 <strcmp>
 1e4:	cmp	r0, #0
 1e8:	add	r4, r4, #1
 1ec:	addeq	r5, r5, #1
 1f0:	cmp	r4, r6
 1f4:	blt	1d8 <numero_vitorias+0x24>
 1f8:	mov	r0, r5
 1fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 200:	mov	r5, #0
 204:	mov	r0, r5
 208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000020c <insere_carta>:
 20c:	push	{fp, lr}
 210:	mov	fp, sp
 214:	sub	sp, sp, #8
 218:	cmp	r1, #7
 21c:	bgt	234 <insere_carta+0x28>
 220:	mov	r2, #0
 224:	add	r1, r1, #50	; 0x32
 228:	strb	r2, [sp, #5]
 22c:	strb	r1, [sp, #4]
 230:	b	28c <insere_carta+0x80>
 234:	sub	r1, r1, #8
 238:	cmp	r1, #4
 23c:	bhi	28c <insere_carta+0x80>
 240:	add	r2, pc, #0
 244:	ldr	pc, [r2, r1, lsl #2]
 248:	.word	0x0000025c
 24c:	.word	0x0000026c
 250:	.word	0x00000274
 254:	.word	0x0000027c
 258:	.word	0x00000284
 25c:	mov	r1, #0
 260:	strb	r1, [sp, #6]
 264:	movw	r1, #12337	; 0x3031
 268:	b	288 <insere_carta+0x7c>
 26c:	mov	r1, #74	; 0x4a
 270:	b	288 <insere_carta+0x7c>
 274:	mov	r1, #81	; 0x51
 278:	b	288 <insere_carta+0x7c>
 27c:	mov	r1, #75	; 0x4b
 280:	b	288 <insere_carta+0x7c>
 284:	mov	r1, #65	; 0x41
 288:	strh	r1, [sp, #4]
 28c:	ldr	r2, [r0]
 290:	add	r1, sp, #4
 294:	bl	0 <lista_insere>
 298:	mov	sp, fp
 29c:	pop	{fp, pc}

000002a0 <main>:
 2a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2a4:	add	fp, sp, #28
 2a8:	sub	sp, sp, #20
 2ac:	bl	0 <vetor_novo>
 2b0:	movw	r4, #0
 2b4:	mov	r2, #0
 2b8:	mov	r5, r0
 2bc:	mov	r7, #0
 2c0:	movt	r4, #0
 2c4:	ldr	r1, [r4]
 2c8:	bl	0 <vetor_insere>
 2cc:	ldr	r1, [r4, #4]
 2d0:	mov	r0, r5
 2d4:	mov	r2, #1
 2d8:	bl	0 <vetor_insere>
 2dc:	ldr	r1, [r4, #8]
 2e0:	mov	r0, r5
 2e4:	mov	r2, #2
 2e8:	bl	0 <vetor_insere>
 2ec:	ldr	r1, [r4, #12]
 2f0:	mov	r0, r5
 2f4:	mov	r2, #3
 2f8:	str	r5, [sp, #8]
 2fc:	bl	0 <vetor_insere>
 300:	bl	0 <lista_nova>
 304:	movw	r5, #0
 308:	mov	r4, r0
 30c:	add	r6, sp, #16
 310:	mov	r8, #75	; 0x4b
 314:	mov	r9, #65	; 0x41
 318:	mov	sl, #0
 31c:	movt	r5, #0
 320:	b	34c <main+0xac>
 324:	add	r0, r0, #50	; 0x32
 328:	strb	r7, [sp, #17]
 32c:	strb	r0, [sp, #16]
 330:	ldr	r2, [r4]
 334:	mov	r0, r4
 338:	mov	r1, r6
 33c:	bl	0 <lista_insere>
 340:	sub	sl, sl, #1
 344:	cmn	sl, #52	; 0x34
 348:	beq	3b8 <main+0x118>
 34c:	ldr	r0, [r5, -sl, lsl #2]
 350:	cmp	r0, #7
 354:	ble	324 <main+0x84>
 358:	sub	r0, r0, #8
 35c:	cmp	r0, #4
 360:	bhi	330 <main+0x90>
 364:	add	r1, pc, #0
 368:	ldr	pc, [r1, r0, lsl #2]
 36c:	.word	0x00000380
 370:	.word	0x00000390
 374:	.word	0x0000039c
 378:	.word	0x000003a8
 37c:	.word	0x000003b0
 380:	movw	r0, #12337	; 0x3031
 384:	strb	r7, [sp, #18]
 388:	strh	r0, [sp, #16]
 38c:	b	330 <main+0x90>
 390:	mov	r0, #74	; 0x4a
 394:	strh	r0, [sp, #16]
 398:	b	330 <main+0x90>
 39c:	mov	r0, #81	; 0x51
 3a0:	strh	r0, [sp, #16]
 3a4:	b	330 <main+0x90>
 3a8:	strh	r8, [sp, #16]
 3ac:	b	330 <main+0x90>
 3b0:	strh	r9, [sp, #16]
 3b4:	b	330 <main+0x90>
 3b8:	bl	0 <lista_nova>
 3bc:	movw	r7, #0
 3c0:	mov	r2, #0
 3c4:	mov	r8, r0
 3c8:	mov	r6, #0
 3cc:	movt	r7, #0
 3d0:	ldr	r1, [r7]
 3d4:	bl	0 <lista_insere>
 3d8:	ldr	r1, [r7, #4]
 3dc:	mov	r0, r8
 3e0:	mov	r2, #0
 3e4:	bl	0 <lista_insere>
 3e8:	ldr	r1, [r7, #8]
 3ec:	mov	r0, r8
 3f0:	mov	r2, #0
 3f4:	bl	0 <lista_insere>
 3f8:	ldr	r1, [r7, #12]
 3fc:	mov	r0, r8
 400:	mov	r2, #0
 404:	bl	0 <lista_insere>
 408:	ldr	r1, [r7, #16]
 40c:	mov	r0, r8
 410:	mov	r2, #0
 414:	bl	0 <lista_insere>
 418:	ldr	r1, [r7, #20]
 41c:	mov	r0, r8
 420:	mov	r2, #0
 424:	bl	0 <lista_insere>
 428:	ldr	r1, [r7, #24]
 42c:	mov	r0, r8
 430:	mov	r2, #0
 434:	bl	0 <lista_insere>
 438:	ldr	r1, [r7, #28]
 43c:	mov	r0, r8
 440:	mov	r2, #0
 444:	bl	0 <lista_insere>
 448:	ldr	r1, [r7, #32]
 44c:	mov	r0, r8
 450:	mov	r2, #0
 454:	bl	0 <lista_insere>
 458:	ldr	r1, [r7, #36]	; 0x24
 45c:	mov	r0, r8
 460:	mov	r2, #0
 464:	bl	0 <lista_insere>
 468:	ldr	r1, [r7, #40]	; 0x28
 46c:	mov	r0, r8
 470:	mov	r2, #0
 474:	bl	0 <lista_insere>
 478:	ldr	r1, [r7, #44]	; 0x2c
 47c:	mov	r0, r8
 480:	mov	r2, #0
 484:	bl	0 <lista_insere>
 488:	ldr	r1, [r7, #48]	; 0x30
 48c:	mov	r0, r8
 490:	mov	r2, #0
 494:	bl	0 <lista_insere>
 498:	movw	r0, #0
 49c:	ldr	r1, [r4]
 4a0:	ldr	sl, [r8]
 4a4:	movt	r0, #0
 4a8:	ldr	r0, [r0]
 4ac:	ldr	r9, [r1]
 4b0:	str	r1, [sp, #4]
 4b4:	str	r0, [sp, #12]
 4b8:	ldr	r0, [sl]
 4bc:	mov	r1, r9
 4c0:	bl	0 <strcmp>
 4c4:	cmp	r0, #0
 4c8:	mov	r7, #0
 4cc:	beq	4f0 <main+0x250>
 4d0:	mov	r7, #0
 4d4:	ldr	sl, [sl, #4]
 4d8:	mov	r1, r9
 4dc:	ldr	r0, [sl]
 4e0:	bl	0 <strcmp>
 4e4:	add	r7, r7, #1
 4e8:	cmp	r0, #0
 4ec:	bne	4d4 <main+0x234>
 4f0:	ldr	r1, [sp, #4]
 4f4:	mov	r0, r4
 4f8:	bl	0 <lista_remove>
 4fc:	ldr	r0, [sp, #12]
 500:	movw	r1, #0
 504:	mov	r2, r7
 508:	movt	r1, #0
 50c:	bl	0 <fprintf>
 510:	movw	r0, #0
 514:	ldr	sl, [r4]
 518:	ldr	r9, [r8]
 51c:	movt	r0, #0
 520:	ldr	r0, [r0]
 524:	ldr	r7, [sl]
 528:	str	r0, [sp, #12]
 52c:	ldr	r0, [r9]
 530:	mov	r1, r7
 534:	bl	0 <strcmp>
 538:	cmp	r0, #0
 53c:	beq	560 <main+0x2c0>
 540:	mov	r6, #0
 544:	ldr	r9, [r9, #4]
 548:	mov	r1, r7
 54c:	ldr	r0, [r9]
 550:	bl	0 <strcmp>
 554:	add	r6, r6, #1
 558:	cmp	r0, #0
 55c:	bne	544 <main+0x2a4>
 560:	mov	r0, r4
 564:	mov	r1, sl
 568:	bl	0 <lista_remove>
 56c:	ldr	r0, [sp, #12]
 570:	movw	r1, #0
 574:	mov	r2, r6
 578:	movt	r1, #0
 57c:	bl	0 <fprintf>
 580:	mov	r1, r4
 584:	ldr	r4, [r8]
 588:	movw	r0, #0
 58c:	ldr	sl, [r1]
 590:	movt	r0, #0
 594:	str	r1, [sp, #12]
 598:	ldr	r9, [r0]
 59c:	ldr	r0, [r4]
 5a0:	ldr	r7, [sl]
 5a4:	mov	r1, r7
 5a8:	bl	0 <strcmp>
 5ac:	mov	r6, #0
 5b0:	cmp	r0, #0
 5b4:	beq	5d4 <main+0x334>
 5b8:	ldr	r4, [r4, #4]
 5bc:	mov	r1, r7
 5c0:	ldr	r0, [r4]
 5c4:	bl	0 <strcmp>
 5c8:	add	r6, r6, #1
 5cc:	cmp	r0, #0
 5d0:	bne	5b8 <main+0x318>
 5d4:	ldr	r4, [sp, #12]
 5d8:	mov	r1, sl
 5dc:	mov	r0, r4
 5e0:	bl	0 <lista_remove>
 5e4:	movw	r1, #0
 5e8:	mov	r0, r9
 5ec:	mov	r2, r6
 5f0:	movt	r1, #0
 5f4:	bl	0 <fprintf>
 5f8:	ldr	r0, [r5, #196]	; 0xc4
 5fc:	mov	r6, r5
 600:	cmp	r0, #7
 604:	bgt	620 <main+0x380>
 608:	ldr	r5, [sp, #8]
 60c:	mov	r1, #0
 610:	add	r0, r0, #50	; 0x32
 614:	strb	r1, [sp, #17]
 618:	strb	r0, [sp, #16]
 61c:	b	67c <main+0x3dc>
 620:	ldr	r5, [sp, #8]
 624:	sub	r0, r0, #8
 628:	cmp	r0, #4
 62c:	bhi	67c <main+0x3dc>
 630:	add	r1, pc, #0
 634:	ldr	pc, [r1, r0, lsl #2]
 638:	.word	0x0000064c
 63c:	.word	0x0000065c
 640:	.word	0x00000664
 644:	.word	0x0000066c
 648:	.word	0x00000674
 64c:	mov	r0, #0
 650:	strb	r0, [sp, #18]
 654:	movw	r0, #12337	; 0x3031
 658:	b	678 <main+0x3d8>
 65c:	mov	r0, #74	; 0x4a
 660:	b	678 <main+0x3d8>
 664:	mov	r0, #81	; 0x51
 668:	b	678 <main+0x3d8>
 66c:	mov	r0, #75	; 0x4b
 670:	b	678 <main+0x3d8>
 674:	mov	r0, #65	; 0x41
 678:	strh	r0, [sp, #16]
 67c:	ldr	r2, [r4]
 680:	add	r1, sp, #16
 684:	mov	r0, r4
 688:	bl	0 <lista_insere>
 68c:	ldr	r0, [r6, #200]	; 0xc8
 690:	cmp	r0, #7
 694:	bgt	6ac <main+0x40c>
 698:	mov	r1, #0
 69c:	add	r0, r0, #50	; 0x32
 6a0:	strb	r1, [sp, #17]
 6a4:	strb	r0, [sp, #16]
 6a8:	b	704 <main+0x464>
 6ac:	sub	r0, r0, #8
 6b0:	cmp	r0, #4
 6b4:	bhi	704 <main+0x464>
 6b8:	add	r1, pc, #0
 6bc:	ldr	pc, [r1, r0, lsl #2]
 6c0:	.word	0x000006d4
 6c4:	.word	0x000006e4
 6c8:	.word	0x000006ec
 6cc:	.word	0x000006f4
 6d0:	.word	0x000006fc
 6d4:	mov	r0, #0
 6d8:	strb	r0, [sp, #18]
 6dc:	movw	r0, #12337	; 0x3031
 6e0:	b	700 <main+0x460>
 6e4:	mov	r0, #74	; 0x4a
 6e8:	b	700 <main+0x460>
 6ec:	mov	r0, #81	; 0x51
 6f0:	b	700 <main+0x460>
 6f4:	mov	r0, #75	; 0x4b
 6f8:	b	700 <main+0x460>
 6fc:	mov	r0, #65	; 0x41
 700:	strh	r0, [sp, #16]
 704:	ldr	r2, [r4]
 708:	add	r1, sp, #16
 70c:	mov	r0, r4
 710:	bl	0 <lista_insere>
 714:	ldr	r0, [r6, #204]	; 0xcc
 718:	cmp	r0, #7
 71c:	bgt	734 <main+0x494>
 720:	mov	r1, #0
 724:	add	r0, r0, #50	; 0x32
 728:	strb	r1, [sp, #17]
 72c:	strb	r0, [sp, #16]
 730:	b	78c <main+0x4ec>
 734:	sub	r0, r0, #8
 738:	cmp	r0, #4
 73c:	bhi	78c <main+0x4ec>
 740:	add	r1, pc, #0
 744:	ldr	pc, [r1, r0, lsl #2]
 748:	.word	0x0000075c
 74c:	.word	0x0000076c
 750:	.word	0x00000774
 754:	.word	0x0000077c
 758:	.word	0x00000784
 75c:	mov	r0, #0
 760:	strb	r0, [sp, #18]
 764:	movw	r0, #12337	; 0x3031
 768:	b	788 <main+0x4e8>
 76c:	mov	r0, #74	; 0x4a
 770:	b	788 <main+0x4e8>
 774:	mov	r0, #81	; 0x51
 778:	b	788 <main+0x4e8>
 77c:	mov	r0, #75	; 0x4b
 780:	b	788 <main+0x4e8>
 784:	mov	r0, #65	; 0x41
 788:	strh	r0, [sp, #16]
 78c:	ldr	r2, [r4]
 790:	add	r1, sp, #16
 794:	mov	r0, r4
 798:	bl	0 <lista_insere>
 79c:	mov	r7, #0
 7a0:	bl	0 <vetor_novo>
 7a4:	movw	r9, #0
 7a8:	mov	r6, r0
 7ac:	movt	r9, #0
 7b0:	b	7d0 <main+0x530>
 7b4:	mov	r0, r5
 7b8:	bl	0 <vetor_tamanho>
 7bc:	cmp	r0, #4
 7c0:	bne	7fc <main+0x55c>
 7c4:	add	r7, r7, #1
 7c8:	cmp	r7, #13
 7cc:	beq	81c <main+0x57c>
 7d0:	mov	r0, r5
 7d4:	mov	r1, r4
 7d8:	mov	r2, r8
 7dc:	bl	60 <faz_jogada>
 7e0:	cmp	r0, #0
 7e4:	beq	7b4 <main+0x514>
 7e8:	mov	r1, r0
 7ec:	mov	r0, r6
 7f0:	mov	r2, r7
 7f4:	bl	0 <vetor_insere>
 7f8:	b	7b4 <main+0x514>
 7fc:	movw	r0, #0
 800:	mov	r1, #44	; 0x2c
 804:	mov	r2, #1
 808:	movt	r0, #0
 80c:	ldr	r3, [r0]
 810:	mov	r0, r9
 814:	bl	0 <fwrite>
 818:	b	7c4 <main+0x524>
 81c:	movw	r0, #0
 820:	str	r8, [sp, #4]
 824:	movt	r0, #0
 828:	bl	0 <puts>
 82c:	ldr	r0, [r6]
 830:	cmp	r0, #1
 834:	bge	ae8 <main+0x848>
 838:	mov	r0, r6
 83c:	bl	0 <vetor_apaga>
 840:	bl	0 <vetor_novo>
 844:	movw	r7, #0
 848:	mov	r2, #0
 84c:	mov	r9, r0
 850:	mov	r6, #0
 854:	movt	r7, #0
 858:	ldr	r1, [r7]
 85c:	bl	0 <vetor_insere>
 860:	ldr	r1, [r7, #4]
 864:	mov	r0, r9
 868:	mov	r2, #1
 86c:	bl	0 <vetor_insere>
 870:	ldr	r1, [r7, #8]
 874:	mov	r0, r9
 878:	mov	r2, #2
 87c:	bl	0 <vetor_insere>
 880:	ldr	r1, [r7, #12]
 884:	mov	r0, r9
 888:	mov	r2, #3
 88c:	bl	0 <vetor_insere>
 890:	ldr	r1, [r7, #16]
 894:	mov	r0, r9
 898:	mov	r2, #4
 89c:	bl	0 <vetor_insere>
 8a0:	ldr	r1, [r7, #20]
 8a4:	mov	r0, r9
 8a8:	mov	r2, #5
 8ac:	bl	0 <vetor_insere>
 8b0:	ldr	r1, [r7, #24]
 8b4:	mov	r0, r9
 8b8:	mov	r2, #6
 8bc:	bl	0 <vetor_insere>
 8c0:	ldr	r1, [r7, #28]
 8c4:	mov	r0, r9
 8c8:	mov	r2, #7
 8cc:	bl	0 <vetor_insere>
 8d0:	ldr	r1, [r7, #32]
 8d4:	mov	r0, r9
 8d8:	mov	r2, #8
 8dc:	bl	0 <vetor_insere>
 8e0:	ldr	r1, [r7, #36]	; 0x24
 8e4:	mov	r0, r9
 8e8:	mov	r2, #9
 8ec:	bl	0 <vetor_insere>
 8f0:	ldr	r1, [r7, #40]	; 0x28
 8f4:	mov	r0, r9
 8f8:	mov	r2, #10
 8fc:	bl	0 <vetor_insere>
 900:	ldr	r1, [r7, #44]	; 0x2c
 904:	mov	r0, r9
 908:	mov	r2, #11
 90c:	bl	0 <vetor_insere>
 910:	ldr	r1, [r7, #48]	; 0x30
 914:	mov	r0, r9
 918:	mov	r2, #12
 91c:	bl	0 <vetor_insere>
 920:	mov	r0, #10
 924:	bl	0 <putchar>
 928:	movw	r0, #0
 92c:	ldr	r8, [r9]
 930:	mov	sl, #0
 934:	movt	r0, #0
 938:	ldr	r7, [r0]
 93c:	movw	r0, #0
 940:	movt	r0, #0
 944:	cmp	r8, #1
 948:	ldr	r5, [r0]
 94c:	blt	974 <main+0x6d4>
 950:	ldr	r4, [r9, #8]
 954:	mov	sl, #0
 958:	ldr	r1, [r4], #4
 95c:	mov	r0, r7
 960:	bl	0 <strcmp>
 964:	cmp	r0, #0
 968:	addeq	sl, sl, #1
 96c:	subs	r8, r8, #1
 970:	bne	958 <main+0x6b8>
 974:	movw	r1, #0
 978:	ldr	r8, [sp, #8]
 97c:	mov	r0, r5
 980:	mov	r2, r7
 984:	mov	r3, sl
 988:	movt	r1, #0
 98c:	bl	0 <fprintf>
 990:	movw	r0, #0
 994:	ldr	r4, [r9]
 998:	movt	r0, #0
 99c:	ldr	r7, [r0, #4]
 9a0:	movw	r0, #0
 9a4:	movt	r0, #0
 9a8:	cmp	r4, #1
 9ac:	ldr	sl, [r0]
 9b0:	blt	9d8 <main+0x738>
 9b4:	ldr	r5, [r9, #8]
 9b8:	mov	r6, #0
 9bc:	ldr	r1, [r5], #4
 9c0:	mov	r0, r7
 9c4:	bl	0 <strcmp>
 9c8:	cmp	r0, #0
 9cc:	addeq	r6, r6, #1
 9d0:	subs	r4, r4, #1
 9d4:	bne	9bc <main+0x71c>
 9d8:	movw	r1, #0
 9dc:	mov	r0, sl
 9e0:	mov	r2, r7
 9e4:	mov	r3, r6
 9e8:	movt	r1, #0
 9ec:	bl	0 <fprintf>
 9f0:	movw	r0, #0
 9f4:	ldr	r4, [r9]
 9f8:	mov	r6, #0
 9fc:	mov	sl, #0
 a00:	movt	r0, #0
 a04:	ldr	r7, [r0, #8]
 a08:	movw	r0, #0
 a0c:	movt	r0, #0
 a10:	cmp	r4, #1
 a14:	ldr	r0, [r0]
 a18:	str	r0, [sp]
 a1c:	blt	a44 <main+0x7a4>
 a20:	ldr	r5, [r9, #8]
 a24:	mov	sl, #0
 a28:	ldr	r1, [r5], #4
 a2c:	mov	r0, r7
 a30:	bl	0 <strcmp>
 a34:	cmp	r0, #0
 a38:	addeq	sl, sl, #1
 a3c:	subs	r4, r4, #1
 a40:	bne	a28 <main+0x788>
 a44:	ldr	r0, [sp]
 a48:	movw	r1, #0
 a4c:	mov	r2, r7
 a50:	mov	r3, sl
 a54:	movt	r1, #0
 a58:	bl	0 <fprintf>
 a5c:	movw	r0, #0
 a60:	ldr	r4, [r9]
 a64:	movt	r0, #0
 a68:	ldr	r7, [r0, #12]
 a6c:	movw	r0, #0
 a70:	movt	r0, #0
 a74:	cmp	r4, #1
 a78:	ldr	sl, [r0]
 a7c:	blt	aa4 <main+0x804>
 a80:	ldr	r5, [r9, #8]
 a84:	mov	r6, #0
 a88:	ldr	r1, [r5], #4
 a8c:	mov	r0, r7
 a90:	bl	0 <strcmp>
 a94:	cmp	r0, #0
 a98:	addeq	r6, r6, #1
 a9c:	subs	r4, r4, #1
 aa0:	bne	a88 <main+0x7e8>
 aa4:	movw	r1, #0
 aa8:	mov	r0, sl
 aac:	mov	r2, r7
 ab0:	mov	r3, r6
 ab4:	movt	r1, #0
 ab8:	bl	0 <fprintf>
 abc:	mov	r0, r8
 ac0:	bl	0 <vetor_apaga>
 ac4:	ldr	r0, [sp, #12]
 ac8:	bl	0 <lista_apaga>
 acc:	ldr	r0, [sp, #4]
 ad0:	bl	0 <lista_apaga>
 ad4:	mov	r0, r9
 ad8:	bl	0 <vetor_apaga>
 adc:	mov	r0, #0
 ae0:	sub	sp, fp, #28
 ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 ae8:	movw	r9, #0
 aec:	mov	r7, #1
 af0:	movt	r9, #0
 af4:	movw	r0, #0
 af8:	sub	r1, r7, #1
 afc:	movt	r0, #0
 b00:	ldr	sl, [r0]
 b04:	mov	r0, r6
 b08:	bl	0 <vetor_elemento>
 b0c:	mov	r3, r0
 b10:	mov	r0, sl
 b14:	mov	r1, r9
 b18:	mov	r2, r7
 b1c:	bl	0 <fprintf>
 b20:	cmp	r7, #2
 b24:	bhi	838 <main+0x598>
 b28:	ldr	r1, [r6]
 b2c:	add	r0, r7, #1
 b30:	cmp	r7, r1
 b34:	mov	r7, r0
 b38:	bge	838 <main+0x598>
 b3c:	b	af4 <main+0x854>
