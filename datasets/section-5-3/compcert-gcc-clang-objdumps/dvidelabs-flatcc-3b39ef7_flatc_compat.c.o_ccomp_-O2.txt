
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/CMakeFiles/flatc_compat.dir/flatc_compat.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <MyGame_Example_Any_union_verifier>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldrb	ip, [r0, #12]
      14:	cmp	ip, #3
      18:	bcs	4c <MyGame_Example_Any_union_verifier+0x4c>
      1c:	cmp	ip, #1
      20:	beq	3c <MyGame_Example_Any_union_verifier+0x3c>
      24:	cmp	ip, #2
      28:	bne	6c <MyGame_Example_Any_union_verifier+0x6c>
      2c:	ldr	r1, [pc, #88]	; 8c <MyGame_Example_Any_union_verifier+0x8c>
      30:	ldr	lr, [sp, #4]
      34:	add	sp, sp, #8
      38:	b	0 <flatcc_verify_union_table>
      3c:	ldr	r1, [pc, #76]	; 90 <MyGame_Example_Any_union_verifier+0x90>
      40:	ldr	lr, [sp, #4]
      44:	add	sp, sp, #8
      48:	b	0 <flatcc_verify_union_table>
      4c:	cmp	ip, #3
      50:	beq	7c <MyGame_Example_Any_union_verifier+0x7c>
      54:	cmp	ip, #4
      58:	bne	6c <MyGame_Example_Any_union_verifier+0x6c>
      5c:	ldr	r1, [pc, #48]	; 94 <MyGame_Example_Any_union_verifier+0x94>
      60:	ldr	lr, [sp, #4]
      64:	add	sp, sp, #8
      68:	b	0 <flatcc_verify_union_table>
      6c:	mov	r0, #0
      70:	ldr	lr, [sp, #4]
      74:	add	sp, sp, #8
      78:	bx	lr
      7c:	ldr	r1, [pc, #20]	; 98 <MyGame_Example_Any_union_verifier+0x98>
      80:	ldr	lr, [sp, #4]
      84:	add	sp, sp, #8
      88:	b	0 <flatcc_verify_union_table>
	...

0000009c <Fantasy_Character_union_verifier>:
      9c:	mov	ip, sp
      a0:	sub	sp, sp, #8
      a4:	str	ip, [sp]
      a8:	str	lr, [sp, #4]
      ac:	ldrb	r1, [r0, #12]
      b0:	cmp	r1, #10
      b4:	bcs	108 <Fantasy_Character_union_verifier+0x6c>
      b8:	cmp	r1, #2
      bc:	beq	f8 <Fantasy_Character_union_verifier+0x5c>
      c0:	cmp	r1, #8
      c4:	beq	e4 <Fantasy_Character_union_verifier+0x48>
      c8:	cmp	r1, #9
      cc:	bne	12c <Fantasy_Character_union_verifier+0x90>
      d0:	mov	r1, #4
      d4:	mov	r2, #4
      d8:	ldr	lr, [sp, #4]
      dc:	add	sp, sp, #8
      e0:	b	0 <flatcc_verify_union_struct>
      e4:	mov	r1, #2
      e8:	mov	r2, #2
      ec:	ldr	lr, [sp, #4]
      f0:	add	sp, sp, #8
      f4:	b	0 <flatcc_verify_union_struct>
      f8:	ldr	r1, [pc, #92]	; 15c <Fantasy_Character_union_verifier+0xc0>
      fc:	ldr	lr, [sp, #4]
     100:	add	sp, sp, #8
     104:	b	0 <flatcc_verify_union_table>
     108:	cmp	r1, #10
     10c:	beq	148 <Fantasy_Character_union_verifier+0xac>
     110:	cmp	r1, #11
     114:	beq	13c <Fantasy_Character_union_verifier+0xa0>
     118:	cmp	r1, #255	; 0xff
     11c:	bne	12c <Fantasy_Character_union_verifier+0x90>
     120:	ldr	lr, [sp, #4]
     124:	add	sp, sp, #8
     128:	b	0 <flatcc_verify_union_string>
     12c:	mov	r0, #0
     130:	ldr	lr, [sp, #4]
     134:	add	sp, sp, #8
     138:	bx	lr
     13c:	ldr	lr, [sp, #4]
     140:	add	sp, sp, #8
     144:	b	0 <flatcc_verify_union_string>
     148:	mov	r1, #4
     14c:	mov	r2, #4
     150:	ldr	lr, [sp, #4]
     154:	add	sp, sp, #8
     158:	b	0 <flatcc_verify_union_struct>
     15c:	.word	0x00000000

00000160 <MyGame_InParentNamespace_verify_table>:
     160:	mov	ip, sp
     164:	sub	sp, sp, #8
     168:	str	ip, [sp]
     16c:	str	lr, [sp, #4]
     170:	mov	r0, #0
     174:	ldr	lr, [sp, #4]
     178:	add	sp, sp, #8
     17c:	bx	lr

00000180 <MyGame_Example2_Monster_verify_table>:
     180:	mov	ip, sp
     184:	sub	sp, sp, #8
     188:	str	ip, [sp]
     18c:	str	lr, [sp, #4]
     190:	mov	r0, #0
     194:	ldr	lr, [sp, #4]
     198:	add	sp, sp, #8
     19c:	bx	lr

000001a0 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
     1a0:	mov	ip, sp
     1a4:	sub	sp, sp, #16
     1a8:	str	ip, [sp]
     1ac:	str	lr, [sp, #4]
     1b0:	str	r4, [sp, #8]
     1b4:	mov	r4, r0
     1b8:	mov	r1, #0
     1bc:	mov	r2, #1
     1c0:	mov	r3, #1
     1c4:	mov	r0, r4
     1c8:	bl	0 <flatcc_verify_field>
     1cc:	cmp	r0, #0
     1d0:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
     1d4:	mov	r1, #1
     1d8:	mov	r2, #1
     1dc:	mov	r3, #1
     1e0:	mov	r0, r4
     1e4:	bl	0 <flatcc_verify_field>
     1e8:	cmp	r0, #0
     1ec:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
     1f0:	mov	r1, #2
     1f4:	mov	r2, #1
     1f8:	mov	r3, #1
     1fc:	mov	r0, r4
     200:	bl	0 <flatcc_verify_field>
     204:	cmp	r0, #0
     208:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
     20c:	mov	r1, #3
     210:	mov	r2, #1
     214:	mov	r3, #1
     218:	mov	r0, r4
     21c:	bl	0 <flatcc_verify_field>
     220:	cmp	r0, #0
     224:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
     228:	mov	r0, #0
     22c:	ldr	r4, [sp, #8]
     230:	ldr	lr, [sp, #4]
     234:	add	sp, sp, #16
     238:	bx	lr

0000023c <MyGame_Example_Stat_verify_table>:
     23c:	mov	ip, sp
     240:	sub	sp, sp, #16
     244:	str	ip, [sp]
     248:	str	lr, [sp, #4]
     24c:	str	r4, [sp, #8]
     250:	mov	r4, r0
     254:	mov	r1, #0
     258:	mov	r2, #0
     25c:	mov	r0, r4
     260:	bl	0 <flatcc_verify_string_field>
     264:	cmp	r0, #0
     268:	bne	2a8 <MyGame_Example_Stat_verify_table+0x6c>
     26c:	mov	r1, #1
     270:	mov	r2, #8
     274:	mov	r3, #8
     278:	mov	r0, r4
     27c:	bl	0 <flatcc_verify_field>
     280:	cmp	r0, #0
     284:	bne	2a8 <MyGame_Example_Stat_verify_table+0x6c>
     288:	mov	r1, #2
     28c:	mov	r2, #2
     290:	mov	r3, #2
     294:	mov	r0, r4
     298:	bl	0 <flatcc_verify_field>
     29c:	cmp	r0, #0
     2a0:	bne	2a8 <MyGame_Example_Stat_verify_table+0x6c>
     2a4:	mov	r0, #0
     2a8:	ldr	r4, [sp, #8]
     2ac:	ldr	lr, [sp, #4]
     2b0:	add	sp, sp, #16
     2b4:	bx	lr

000002b8 <MyGame_Example_Alt_verify_table>:
     2b8:	mov	ip, sp
     2bc:	sub	sp, sp, #16
     2c0:	str	ip, [sp]
     2c4:	str	lr, [sp, #4]
     2c8:	str	r4, [sp, #8]
     2cc:	mov	r4, r0
     2d0:	mov	r1, #0
     2d4:	mov	r2, #0
     2d8:	ldr	r3, [pc, #96]	; 340 <MyGame_Example_Alt_verify_table+0x88>
     2dc:	mov	r0, r4
     2e0:	bl	0 <flatcc_verify_table_field>
     2e4:	cmp	r0, #0
     2e8:	bne	328 <MyGame_Example_Alt_verify_table+0x70>
     2ec:	mov	r1, #1
     2f0:	mov	r2, #0
     2f4:	ldr	r3, [pc, #64]	; 33c <MyGame_Example_Alt_verify_table+0x84>
     2f8:	mov	r0, r4
     2fc:	bl	0 <flatcc_verify_table_field>
     300:	cmp	r0, #0
     304:	bne	328 <MyGame_Example_Alt_verify_table+0x70>
     308:	mov	r1, #3
     30c:	mov	r2, #0
     310:	ldr	r3, [pc, #32]	; 338 <MyGame_Example_Alt_verify_table+0x80>
     314:	mov	r0, r4
     318:	bl	0 <flatcc_verify_union_vector_field>
     31c:	cmp	r0, #0
     320:	bne	328 <MyGame_Example_Alt_verify_table+0x70>
     324:	mov	r0, #0
     328:	ldr	r4, [sp, #8]
     32c:	ldr	lr, [sp, #4]
     330:	add	sp, sp, #16
     334:	bx	lr
	...

00000344 <MyGame_Example_TestJSONPrefix_verify_table>:
     344:	mov	ip, sp
     348:	sub	sp, sp, #16
     34c:	str	ip, [sp]
     350:	str	lr, [sp, #4]
     354:	str	r4, [sp, #8]
     358:	mov	r4, r0
     35c:	mov	r1, #0
     360:	mov	r2, #0
     364:	ldr	r3, [pc, #96]	; 3cc <MyGame_Example_TestJSONPrefix_verify_table+0x88>
     368:	mov	r0, r4
     36c:	bl	0 <flatcc_verify_table_field>
     370:	cmp	r0, #0
     374:	bne	3b4 <MyGame_Example_TestJSONPrefix_verify_table+0x70>
     378:	mov	r1, #1
     37c:	mov	r2, #0
     380:	ldr	r3, [pc, #60]	; 3c4 <MyGame_Example_TestJSONPrefix_verify_table+0x80>
     384:	mov	r0, r4
     388:	bl	0 <flatcc_verify_table_field>
     38c:	cmp	r0, #0
     390:	bne	3b4 <MyGame_Example_TestJSONPrefix_verify_table+0x70>
     394:	mov	r1, #2
     398:	mov	r2, #0
     39c:	ldr	r3, [pc, #36]	; 3c8 <MyGame_Example_TestJSONPrefix_verify_table+0x84>
     3a0:	mov	r0, r4
     3a4:	bl	0 <flatcc_verify_table_field>
     3a8:	cmp	r0, #0
     3ac:	bne	3b4 <MyGame_Example_TestJSONPrefix_verify_table+0x70>
     3b0:	mov	r0, #0
     3b4:	ldr	r4, [sp, #8]
     3b8:	ldr	lr, [sp, #4]
     3bc:	add	sp, sp, #16
     3c0:	bx	lr
	...

000003d0 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
     3d0:	mov	ip, sp
     3d4:	sub	sp, sp, #16
     3d8:	str	ip, [sp]
     3dc:	str	lr, [sp, #4]
     3e0:	str	r4, [sp, #8]
     3e4:	mov	r4, r0
     3e8:	mov	r1, #0
     3ec:	mov	r2, #0
     3f0:	mov	r0, r4
     3f4:	bl	0 <flatcc_verify_string_field>
     3f8:	cmp	r0, #0
     3fc:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     400:	mov	r1, #1
     404:	mov	r2, #4
     408:	mov	r3, #4
     40c:	mov	r0, r4
     410:	bl	0 <flatcc_verify_field>
     414:	cmp	r0, #0
     418:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     41c:	mov	r1, #2
     420:	mov	r2, #0
     424:	mov	r0, r4
     428:	bl	0 <flatcc_verify_string_field>
     42c:	cmp	r0, #0
     430:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     434:	mov	r1, #3
     438:	mov	r2, #8
     43c:	mov	r3, #8
     440:	mov	r0, r4
     444:	bl	0 <flatcc_verify_field>
     448:	cmp	r0, #0
     44c:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     450:	mov	r1, #4
     454:	mov	r2, #0
     458:	mov	r0, r4
     45c:	bl	0 <flatcc_verify_string_field>
     460:	cmp	r0, #0
     464:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     468:	mov	r1, #5
     46c:	mov	r2, #8
     470:	mov	r3, #8
     474:	mov	r0, r4
     478:	bl	0 <flatcc_verify_field>
     47c:	cmp	r0, #0
     480:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     484:	mov	r1, #6
     488:	mov	r2, #4
     48c:	mov	r3, #4
     490:	mov	r0, r4
     494:	bl	0 <flatcc_verify_field>
     498:	cmp	r0, #0
     49c:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     4a0:	mov	r1, #7
     4a4:	mov	r2, #8
     4a8:	mov	r3, #8
     4ac:	mov	r0, r4
     4b0:	bl	0 <flatcc_verify_field>
     4b4:	cmp	r0, #0
     4b8:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     4bc:	mov	r1, #8
     4c0:	mov	r2, #4
     4c4:	mov	r3, #4
     4c8:	mov	r0, r4
     4cc:	bl	0 <flatcc_verify_field>
     4d0:	cmp	r0, #0
     4d4:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
     4d8:	mov	r0, #0
     4dc:	ldr	r4, [sp, #8]
     4e0:	ldr	lr, [sp, #4]
     4e4:	add	sp, sp, #16
     4e8:	bx	lr

000004ec <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
     4ec:	mov	ip, sp
     4f0:	sub	sp, sp, #16
     4f4:	str	ip, [sp]
     4f8:	str	lr, [sp, #4]
     4fc:	str	r4, [sp, #8]
     500:	mov	r4, r0
     504:	mov	r1, #0
     508:	mov	r2, #8
     50c:	mov	r3, #8
     510:	mov	r0, r4
     514:	bl	0 <flatcc_verify_field>
     518:	cmp	r0, #0
     51c:	bne	540 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x54>
     520:	mov	r1, #1
     524:	mov	r2, #4
     528:	mov	r3, #4
     52c:	mov	r0, r4
     530:	bl	0 <flatcc_verify_field>
     534:	cmp	r0, #0
     538:	bne	540 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x54>
     53c:	mov	r0, #0
     540:	ldr	r4, [sp, #8]
     544:	ldr	lr, [sp, #4]
     548:	add	sp, sp, #16
     54c:	bx	lr

00000550 <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
     550:	mov	ip, sp
     554:	sub	sp, sp, #16
     558:	str	ip, [sp]
     55c:	str	lr, [sp, #4]
     560:	str	r4, [sp, #8]
     564:	mov	r4, r0
     568:	mov	r1, #0
     56c:	mov	r2, #8
     570:	mov	r3, #8
     574:	mov	r0, r4
     578:	bl	0 <flatcc_verify_field>
     57c:	cmp	r0, #0
     580:	bne	5a4 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x54>
     584:	mov	r1, #1
     588:	mov	r2, #4
     58c:	mov	r3, #4
     590:	mov	r0, r4
     594:	bl	0 <flatcc_verify_field>
     598:	cmp	r0, #0
     59c:	bne	5a4 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x54>
     5a0:	mov	r0, #0
     5a4:	ldr	r4, [sp, #8]
     5a8:	ldr	lr, [sp, #4]
     5ac:	add	sp, sp, #16
     5b0:	bx	lr

000005b4 <MyGame_Example_TestBase64_verify_table>:
     5b4:	mov	ip, sp
     5b8:	sub	sp, sp, #24
     5bc:	str	ip, [sp, #8]
     5c0:	str	lr, [sp, #12]
     5c4:	str	r4, [sp, #16]
     5c8:	str	r5, [sp, #20]
     5cc:	mov	r4, r0
     5d0:	mov	r1, #0
     5d4:	mov	r2, #0
     5d8:	mov	r3, #1
     5dc:	mov	r0, #1
     5e0:	mvn	ip, #0
     5e4:	str	ip, [sp, #4]
     5e8:	str	r0, [sp]
     5ec:	mov	r0, r4
     5f0:	bl	0 <flatcc_verify_vector_field>
     5f4:	cmp	r0, #0
     5f8:	bne	658 <MyGame_Example_TestBase64_verify_table+0xa4>
     5fc:	mov	r1, #1
     600:	mov	r2, #0
     604:	mov	r3, #1
     608:	mov	r5, #1
     60c:	mvn	r0, #0
     610:	str	r0, [sp, #4]
     614:	str	r5, [sp]
     618:	mov	r0, r4
     61c:	bl	0 <flatcc_verify_vector_field>
     620:	cmp	r0, #0
     624:	bne	658 <MyGame_Example_TestBase64_verify_table+0xa4>
     628:	mov	r1, #2
     62c:	mov	r2, #0
     630:	mov	r3, #0
     634:	mov	ip, #1
     638:	ldr	r0, [pc, #44]	; 66c <MyGame_Example_TestBase64_verify_table+0xb8>
     63c:	str	r0, [sp, #4]
     640:	str	ip, [sp]
     644:	mov	r0, r4
     648:	bl	0 <flatcc_verify_table_as_nested_root>
     64c:	cmp	r0, #0
     650:	bne	658 <MyGame_Example_TestBase64_verify_table+0xa4>
     654:	mov	r0, #0
     658:	ldr	r4, [sp, #16]
     65c:	ldr	r5, [sp, #20]
     660:	ldr	lr, [sp, #12]
     664:	add	sp, sp, #24
     668:	bx	lr
     66c:	.word	0x00000000

00000670 <MyGame_Example_Monster_verify_table>:
     670:	mov	ip, sp
     674:	sub	sp, sp, #24
     678:	str	ip, [sp, #8]
     67c:	str	lr, [sp, #12]
     680:	str	r4, [sp, #16]
     684:	str	r5, [sp, #20]
     688:	mov	r4, r0
     68c:	mov	r1, #0
     690:	mov	r2, #32
     694:	mov	r3, #16
     698:	mov	r0, r4
     69c:	bl	0 <flatcc_verify_field>
     6a0:	cmp	r0, #0
     6a4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     6a8:	mov	r1, #2
     6ac:	mov	r2, #2
     6b0:	mov	r3, #2
     6b4:	mov	r0, r4
     6b8:	bl	0 <flatcc_verify_field>
     6bc:	cmp	r0, #0
     6c0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     6c4:	mov	r1, #1
     6c8:	mov	r2, #2
     6cc:	mov	r3, #2
     6d0:	mov	r0, r4
     6d4:	bl	0 <flatcc_verify_field>
     6d8:	cmp	r0, #0
     6dc:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     6e0:	mov	r1, #3
     6e4:	mov	r2, #1
     6e8:	mov	r0, r4
     6ec:	bl	0 <flatcc_verify_string_field>
     6f0:	cmp	r0, #0
     6f4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     6f8:	mov	r1, #6
     6fc:	mov	r2, #1
     700:	mov	r3, #1
     704:	mov	r0, r4
     708:	bl	0 <flatcc_verify_field>
     70c:	cmp	r0, #0
     710:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     714:	mov	r1, #5
     718:	mov	r2, #0
     71c:	mov	r3, #1
     720:	mov	r0, #1
     724:	mvn	r5, #0
     728:	str	r5, [sp, #4]
     72c:	str	r0, [sp]
     730:	mov	r0, r4
     734:	bl	0 <flatcc_verify_vector_field>
     738:	cmp	r0, #0
     73c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     740:	mov	r1, #11
     744:	mov	r2, #0
     748:	ldr	r3, [pc, #920]	; ae8 <MyGame_Example_Monster_verify_table+0x478>
     74c:	mov	r0, r4
     750:	bl	0 <flatcc_verify_table_vector_field>
     754:	cmp	r0, #0
     758:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     75c:	mov	r1, #10
     760:	mov	r2, #0
     764:	mov	r0, r4
     768:	bl	0 <flatcc_verify_string_vector_field>
     76c:	cmp	r0, #0
     770:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     774:	mov	r1, #28
     778:	mov	r2, #0
     77c:	mov	r0, r4
     780:	bl	0 <flatcc_verify_string_vector_field>
     784:	cmp	r0, #0
     788:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     78c:	mov	r1, #24
     790:	mov	r2, #0
     794:	mov	r3, #1
     798:	mov	r5, #1
     79c:	mvn	r0, #0
     7a0:	str	r0, [sp, #4]
     7a4:	str	r5, [sp]
     7a8:	mov	r0, r4
     7ac:	bl	0 <flatcc_verify_vector_field>
     7b0:	cmp	r0, #0
     7b4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     7b8:	mov	r1, #29
     7bc:	mov	r2, #0
     7c0:	mov	r3, #8
     7c4:	mov	r0, #4
     7c8:	mvn	ip, #-536870912	; 0xe0000000
     7cc:	str	ip, [sp, #4]
     7d0:	str	r0, [sp]
     7d4:	mov	r0, r4
     7d8:	bl	0 <flatcc_verify_vector_field>
     7dc:	cmp	r0, #0
     7e0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     7e4:	mov	r1, #12
     7e8:	mov	r2, #0
     7ec:	ldr	r3, [pc, #756]	; ae8 <MyGame_Example_Monster_verify_table+0x478>
     7f0:	mov	r0, r4
     7f4:	bl	0 <flatcc_verify_table_field>
     7f8:	cmp	r0, #0
     7fc:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     800:	mov	r1, #8
     804:	mov	r2, #0
     808:	ldr	r3, [pc, #720]	; ae0 <MyGame_Example_Monster_verify_table+0x470>
     80c:	mov	r0, r4
     810:	bl	0 <flatcc_verify_union_field>
     814:	cmp	r0, #0
     818:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     81c:	mov	r1, #9
     820:	mov	r2, #0
     824:	mov	r3, #4
     828:	mov	r0, #2
     82c:	mvn	ip, #-1073741824	; 0xc0000000
     830:	str	ip, [sp, #4]
     834:	str	r0, [sp]
     838:	mov	r0, r4
     83c:	bl	0 <flatcc_verify_vector_field>
     840:	cmp	r0, #0
     844:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     848:	mov	r1, #31
     84c:	mov	r2, #0
     850:	mov	r3, #4
     854:	mov	r0, #2
     858:	mvn	r5, #-1073741824	; 0xc0000000
     85c:	str	r5, [sp, #4]
     860:	str	r0, [sp]
     864:	mov	r0, r4
     868:	bl	0 <flatcc_verify_vector_field>
     86c:	cmp	r0, #0
     870:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     874:	mov	r1, #13
     878:	mov	r2, #0
     87c:	mov	r3, #0
     880:	mov	ip, #1
     884:	ldr	r0, [pc, #604]	; ae8 <MyGame_Example_Monster_verify_table+0x478>
     888:	str	r0, [sp, #4]
     88c:	str	ip, [sp]
     890:	mov	r0, r4
     894:	bl	0 <flatcc_verify_table_as_nested_root>
     898:	cmp	r0, #0
     89c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     8a0:	mov	r1, #14
     8a4:	mov	r2, #0
     8a8:	ldr	r3, [pc, #572]	; aec <MyGame_Example_Monster_verify_table+0x47c>
     8ac:	mov	r0, r4
     8b0:	bl	0 <flatcc_verify_table_field>
     8b4:	cmp	r0, #0
     8b8:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     8bc:	mov	r1, #15
     8c0:	mov	r2, #1
     8c4:	mov	r3, #1
     8c8:	mov	r0, r4
     8cc:	bl	0 <flatcc_verify_field>
     8d0:	cmp	r0, #0
     8d4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     8d8:	mov	r1, #16
     8dc:	mov	r2, #4
     8e0:	mov	r3, #4
     8e4:	mov	r0, r4
     8e8:	bl	0 <flatcc_verify_field>
     8ec:	cmp	r0, #0
     8f0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     8f4:	mov	r1, #17
     8f8:	mov	r2, #4
     8fc:	mov	r3, #4
     900:	mov	r0, r4
     904:	bl	0 <flatcc_verify_field>
     908:	cmp	r0, #0
     90c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     910:	mov	r1, #18
     914:	mov	r2, #8
     918:	mov	r3, #8
     91c:	mov	r0, r4
     920:	bl	0 <flatcc_verify_field>
     924:	cmp	r0, #0
     928:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     92c:	mov	r1, #19
     930:	mov	r2, #8
     934:	mov	r3, #8
     938:	mov	r0, r4
     93c:	bl	0 <flatcc_verify_field>
     940:	cmp	r0, #0
     944:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     948:	mov	r1, #20
     94c:	mov	r2, #4
     950:	mov	r3, #4
     954:	mov	r0, r4
     958:	bl	0 <flatcc_verify_field>
     95c:	cmp	r0, #0
     960:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     964:	mov	r1, #21
     968:	mov	r2, #4
     96c:	mov	r3, #4
     970:	mov	r0, r4
     974:	bl	0 <flatcc_verify_field>
     978:	cmp	r0, #0
     97c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     980:	mov	r1, #22
     984:	mov	r2, #8
     988:	mov	r3, #8
     98c:	mov	r0, r4
     990:	bl	0 <flatcc_verify_field>
     994:	cmp	r0, #0
     998:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     99c:	mov	r1, #23
     9a0:	mov	r2, #8
     9a4:	mov	r3, #8
     9a8:	mov	r0, r4
     9ac:	bl	0 <flatcc_verify_field>
     9b0:	cmp	r0, #0
     9b4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     9b8:	mov	r1, #25
     9bc:	mov	r2, #4
     9c0:	mov	r3, #4
     9c4:	mov	r0, r4
     9c8:	bl	0 <flatcc_verify_field>
     9cc:	cmp	r0, #0
     9d0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     9d4:	mov	r1, #26
     9d8:	mov	r2, #4
     9dc:	mov	r3, #4
     9e0:	mov	r0, r4
     9e4:	bl	0 <flatcc_verify_field>
     9e8:	cmp	r0, #0
     9ec:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     9f0:	mov	r1, #27
     9f4:	mov	r2, #4
     9f8:	mov	r3, #4
     9fc:	mov	r0, r4
     a00:	bl	0 <flatcc_verify_field>
     a04:	cmp	r0, #0
     a08:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     a0c:	mov	r1, #30
     a10:	mov	r2, #0
     a14:	mov	r3, #1
     a18:	mov	r0, #1
     a1c:	mvn	ip, #0
     a20:	str	ip, [sp, #4]
     a24:	str	r0, [sp]
     a28:	mov	r0, r4
     a2c:	bl	0 <flatcc_verify_vector_field>
     a30:	cmp	r0, #0
     a34:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     a38:	mov	r1, #32
     a3c:	mov	r2, #0
     a40:	mov	r3, #8
     a44:	mov	r0, #8
     a48:	mvn	ip, #-536870912	; 0xe0000000
     a4c:	str	ip, [sp, #4]
     a50:	str	r0, [sp]
     a54:	mov	r0, r4
     a58:	bl	0 <flatcc_verify_vector_field>
     a5c:	cmp	r0, #0
     a60:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     a64:	mov	r1, #33	; 0x21
     a68:	mov	r2, #0
     a6c:	mov	r3, #8
     a70:	mov	r5, #8
     a74:	mvn	r0, #-536870912	; 0xe0000000
     a78:	str	r0, [sp, #4]
     a7c:	str	r5, [sp]
     a80:	mov	r0, r4
     a84:	bl	0 <flatcc_verify_vector_field>
     a88:	cmp	r0, #0
     a8c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     a90:	mov	r1, #34	; 0x22
     a94:	mov	r2, #0
     a98:	ldr	r3, [pc, #68]	; ae4 <MyGame_Example_Monster_verify_table+0x474>
     a9c:	mov	r0, r4
     aa0:	bl	0 <flatcc_verify_table_field>
     aa4:	cmp	r0, #0
     aa8:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     aac:	mov	r1, #35	; 0x23
     ab0:	mov	r2, #0
     ab4:	ldr	r3, [pc, #52]	; af0 <MyGame_Example_Monster_verify_table+0x480>
     ab8:	mov	r0, r4
     abc:	bl	0 <flatcc_verify_table_field>
     ac0:	cmp	r0, #0
     ac4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
     ac8:	mov	r0, #0
     acc:	ldr	r4, [sp, #16]
     ad0:	ldr	r5, [sp, #20]
     ad4:	ldr	lr, [sp, #12]
     ad8:	add	sp, sp, #24
     adc:	bx	lr
	...

00000af4 <Fantasy_Attacker_verify_table>:
     af4:	mov	ip, sp
     af8:	sub	sp, sp, #8
     afc:	str	ip, [sp]
     b00:	str	lr, [sp, #4]
     b04:	mov	r1, #0
     b08:	mov	r2, #4
     b0c:	mov	r3, #4
     b10:	bl	0 <flatcc_verify_field>
     b14:	cmp	r0, #0
     b18:	bne	b20 <Fantasy_Attacker_verify_table+0x2c>
     b1c:	mov	r0, #0
     b20:	ldr	lr, [sp, #4]
     b24:	add	sp, sp, #8
     b28:	bx	lr

00000b2c <Fantasy_Movie_verify_table>:
     b2c:	mov	ip, sp
     b30:	sub	sp, sp, #16
     b34:	str	ip, [sp]
     b38:	str	lr, [sp, #4]
     b3c:	str	r4, [sp, #8]
     b40:	mov	r4, r0
     b44:	mov	r1, #1
     b48:	mov	r2, #0
     b4c:	ldr	r3, [pc, #144]	; be4 <Fantasy_Movie_verify_table+0xb8>
     b50:	mov	r0, r4
     b54:	bl	0 <flatcc_verify_union_field>
     b58:	cmp	r0, #0
     b5c:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
     b60:	mov	r1, #3
     b64:	mov	r2, #0
     b68:	ldr	r3, [pc, #116]	; be4 <Fantasy_Movie_verify_table+0xb8>
     b6c:	mov	r0, r4
     b70:	bl	0 <flatcc_verify_union_field>
     b74:	cmp	r0, #0
     b78:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
     b7c:	mov	r1, #5
     b80:	mov	r2, #0
     b84:	ldr	r3, [pc, #88]	; be4 <Fantasy_Movie_verify_table+0xb8>
     b88:	mov	r0, r4
     b8c:	bl	0 <flatcc_verify_union_field>
     b90:	cmp	r0, #0
     b94:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
     b98:	mov	r1, #7
     b9c:	mov	r2, #0
     ba0:	ldr	r3, [pc, #60]	; be4 <Fantasy_Movie_verify_table+0xb8>
     ba4:	mov	r0, r4
     ba8:	bl	0 <flatcc_verify_union_field>
     bac:	cmp	r0, #0
     bb0:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
     bb4:	mov	r1, #9
     bb8:	mov	r2, #0
     bbc:	ldr	r3, [pc, #32]	; be4 <Fantasy_Movie_verify_table+0xb8>
     bc0:	mov	r0, r4
     bc4:	bl	0 <flatcc_verify_union_vector_field>
     bc8:	cmp	r0, #0
     bcc:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
     bd0:	mov	r0, #0
     bd4:	ldr	r4, [sp, #8]
     bd8:	ldr	lr, [sp, #4]
     bdc:	add	sp, sp, #16
     be0:	bx	lr
     be4:	.word	0x00000000

00000be8 <verify_monster>:
     be8:	mov	ip, sp
     bec:	sub	sp, sp, #32
     bf0:	str	ip, [sp]
     bf4:	str	lr, [sp, #4]
     bf8:	str	r4, [sp, #8]
     bfc:	str	r5, [sp, #12]
     c00:	str	r6, [sp, #16]
     c04:	str	r7, [sp, #20]
     c08:	mov	r6, r0
     c0c:	ldr	r1, [pc, #1344]	; 1154 <verify_monster+0x56c>
     c10:	cmp	r6, #0
     c14:	beq	c74 <verify_monster+0x8c>
     c18:	mov	r4, r6
     c1c:	mov	r3, #0
     c20:	str	r3, [sp, #24]
     c24:	add	r0, sp, #24
     c28:	mov	r2, #4
     c2c:	bl	0 <strncpy>
     c30:	ldr	ip, [sp, #24]
     c34:	str	ip, [sp, #24]
     c38:	ldr	r1, [r4, #4]
     c3c:	cmp	ip, #0
     c40:	beq	c54 <verify_monster+0x6c>
     c44:	cmp	r1, ip
     c48:	moveq	r0, #1
     c4c:	movne	r0, #0
     c50:	b	c58 <verify_monster+0x70>
     c54:	mov	r0, #1
     c58:	eor	r2, r0, #1
     c5c:	cmp	r2, #0
     c60:	bne	c74 <verify_monster+0x8c>
     c64:	mov	r0, r6
     c68:	ldr	r1, [r0]
     c6c:	add	r5, r6, r1
     c70:	b	c78 <verify_monster+0x90>
     c74:	mov	r5, #0
     c78:	cmp	r5, #0
     c7c:	bne	c90 <verify_monster+0xa8>
     c80:	ldr	r0, [pc, #1172]	; 111c <verify_monster+0x534>
     c84:	bl	0 <printf>
     c88:	mvn	r0, #0
     c8c:	b	1e98 <verify_monster+0x12b0>
     c90:	mov	r7, r5
     c94:	mov	r4, #0
     c98:	ldr	r0, [pc, #1180]	; 113c <verify_monster+0x554>
     c9c:	cmp	r0, #0
     ca0:	movne	r2, #1
     ca4:	moveq	r2, #0
     ca8:	mov	r3, #0
     cac:	cmp	r7, #0
     cb0:	movne	r1, r2
     cb4:	moveq	r1, r3
     cb8:	cmp	r1, #0
     cbc:	bne	cd4 <verify_monster+0xec>
     cc0:	ldr	r0, [pc, #1120]	; 1128 <verify_monster+0x540>
     cc4:	ldr	r1, [pc, #1140]	; 1140 <verify_monster+0x558>
     cc8:	movw	r2, #697	; 0x2b9
     ccc:	ldr	r3, [pc, #1104]	; 1124 <verify_monster+0x53c>
     cd0:	bl	0 <__assert_fail>
     cd4:	ldr	ip, [r7]
     cd8:	sub	r2, r7, ip
     cdc:	ldrh	r3, [r2]
     ce0:	bic	r1, r3, #16711680	; 0xff0000
     ce4:	bic	r1, r1, #-16777216	; 0xff000000
     ce8:	cmp	r1, #10
     cec:	bcc	cfc <verify_monster+0x114>
     cf0:	ldrh	r2, [r2, #8]
     cf4:	bic	r4, r2, #16711680	; 0xff0000
     cf8:	bic	r4, r4, #-16777216	; 0xff000000
     cfc:	cmp	r4, #0
     d00:	beq	d14 <verify_monster+0x12c>
     d04:	add	r1, r7, r4
     d08:	ldrsh	ip, [r1]
     d0c:	sbfx	r0, ip, #0, #16
     d10:	b	d18 <verify_monster+0x130>
     d14:	mov	r0, #100	; 0x64
     d18:	cmp	r0, #80	; 0x50
     d1c:	beq	d30 <verify_monster+0x148>
     d20:	ldr	r0, [pc, #1076]	; 115c <verify_monster+0x574>
     d24:	bl	0 <printf>
     d28:	mvn	r0, #0
     d2c:	b	1e98 <verify_monster+0x12b0>
     d30:	mov	r7, r5
     d34:	mov	r4, #0
     d38:	ldr	r1, [pc, #1020]	; 113c <verify_monster+0x554>
     d3c:	cmp	r1, #0
     d40:	movne	r1, #1
     d44:	moveq	r1, #0
     d48:	mov	r2, #0
     d4c:	cmp	r7, #0
     d50:	movne	r1, r1
     d54:	moveq	r1, r2
     d58:	cmp	r1, #0
     d5c:	bne	d74 <verify_monster+0x18c>
     d60:	ldr	r0, [pc, #960]	; 1128 <verify_monster+0x540>
     d64:	ldr	r1, [pc, #980]	; 1140 <verify_monster+0x558>
     d68:	mov	r2, #696	; 0x2b8
     d6c:	ldr	r3, [pc, #984]	; 114c <verify_monster+0x564>
     d70:	bl	0 <__assert_fail>
     d74:	ldr	r3, [r7]
     d78:	sub	ip, r7, r3
     d7c:	ldrh	r0, [ip]
     d80:	bic	r1, r0, #16711680	; 0xff0000
     d84:	bic	r1, r1, #-16777216	; 0xff000000
     d88:	cmp	r1, #6
     d8c:	bcc	d9c <verify_monster+0x1b4>
     d90:	ldrh	r3, [ip, #4]
     d94:	bic	r4, r3, #16711680	; 0xff0000
     d98:	bic	r4, r4, #-16777216	; 0xff000000
     d9c:	cmp	r4, #0
     da0:	beq	dac <verify_monster+0x1c4>
     da4:	add	r1, r7, r4
     da8:	b	dd0 <verify_monster+0x1e8>
     dac:	ldr	ip, [pc, #916]	; 1148 <verify_monster+0x560>
     db0:	cmp	ip, #0
     db4:	bne	dcc <verify_monster+0x1e4>
     db8:	ldr	r0, [pc, #912]	; 1150 <verify_monster+0x568>
     dbc:	ldr	r1, [pc, #892]	; 1140 <verify_monster+0x558>
     dc0:	mov	r2, #696	; 0x2b8
     dc4:	ldr	r3, [pc, #896]	; 114c <verify_monster+0x564>
     dc8:	bl	0 <__assert_fail>
     dcc:	mov	r1, #0
     dd0:	cmp	r1, #0
     dd4:	bne	de8 <verify_monster+0x200>
     dd8:	ldr	r0, [pc, #896]	; 1160 <verify_monster+0x578>
     ddc:	bl	0 <printf>
     de0:	mvn	r0, #0
     de4:	b	1e98 <verify_monster+0x12b0>
     de8:	sub	ip, r1, r6
     dec:	and	ip, ip, #15
     df0:	cmp	ip, #0
     df4:	beq	e08 <verify_monster+0x220>
     df8:	ldr	r0, [pc, #820]	; 1134 <verify_monster+0x54c>
     dfc:	bl	0 <printf>
     e00:	mvn	r0, #0
     e04:	b	1e98 <verify_monster+0x12b0>
     e08:	mov	r2, r1
     e0c:	cmp	r2, #0
     e10:	beq	e2c <verify_monster+0x244>
     e14:	vldr	s6, [r2]
     e18:	vstr	s6, [sp, #24]
     e1c:	ldr	ip, [sp, #24]
     e20:	str	ip, [sp, #24]
     e24:	vldr	s4, [sp, #24]
     e28:	b	e30 <verify_monster+0x248>
     e2c:	vldr	s4, [pc, #816]	; 1164 <verify_monster+0x57c>
     e30:	vmov.f32	s8, #112	; 0x3f800000  1.0
     e34:	vcmp.f32	s4, s8
     e38:	vmrs	APSR_nzcv, fpscr
     e3c:	beq	e50 <verify_monster+0x268>
     e40:	ldr	r0, [pc, #728]	; 1120 <verify_monster+0x538>
     e44:	bl	0 <printf>
     e48:	mvn	r0, #0
     e4c:	b	1e98 <verify_monster+0x12b0>
     e50:	cmp	r1, #0
     e54:	beq	e70 <verify_monster+0x288>
     e58:	vldr	s14, [r1, #4]
     e5c:	vstr	s14, [sp, #24]
     e60:	ldr	ip, [sp, #24]
     e64:	str	ip, [sp, #24]
     e68:	vldr	s0, [sp, #24]
     e6c:	b	e74 <verify_monster+0x28c>
     e70:	vldr	s0, [pc, #748]	; 1164 <verify_monster+0x57c>
     e74:	vmov.f32	s2, #0	; 0x40000000  2.0
     e78:	vcmp.f32	s0, s2
     e7c:	vmrs	APSR_nzcv, fpscr
     e80:	beq	e94 <verify_monster+0x2ac>
     e84:	ldr	r0, [pc, #672]	; 112c <verify_monster+0x544>
     e88:	bl	0 <printf>
     e8c:	mvn	r0, #0
     e90:	b	1e98 <verify_monster+0x12b0>
     e94:	cmp	r1, #0
     e98:	beq	eb4 <verify_monster+0x2cc>
     e9c:	vldr	s8, [r1, #8]
     ea0:	vstr	s8, [sp, #24]
     ea4:	ldr	r0, [sp, #24]
     ea8:	str	r0, [sp, #24]
     eac:	vldr	s10, [sp, #24]
     eb0:	b	eb8 <verify_monster+0x2d0>
     eb4:	vldr	s10, [pc, #680]	; 1164 <verify_monster+0x57c>
     eb8:	vmov.f32	s12, #8	; 0x40400000  3.0
     ebc:	vcmp.f32	s10, s12
     ec0:	vmrs	APSR_nzcv, fpscr
     ec4:	beq	ed8 <verify_monster+0x2f0>
     ec8:	ldr	r0, [pc, #628]	; 1144 <verify_monster+0x55c>
     ecc:	bl	0 <printf>
     ed0:	mvn	r0, #0
     ed4:	b	1e98 <verify_monster+0x12b0>
     ed8:	cmp	r1, #0
     edc:	beq	f00 <verify_monster+0x318>
     ee0:	vldr	d6, [r1, #16]
     ee4:	vstr	d6, [sp, #24]
     ee8:	ldr	r3, [sp, #24]
     eec:	ldr	r2, [sp, #28]
     ef0:	str	r3, [sp, #24]
     ef4:	str	r2, [sp, #28]
     ef8:	vldr	d1, [sp, #24]
     efc:	b	f04 <verify_monster+0x31c>
     f00:	vldr	d1, [pc, #608]	; 1168 <verify_monster+0x580>
     f04:	vmov.f64	d5, #8	; 0x40400000  3.0
     f08:	vcmp.f64	d1, d5
     f0c:	vmrs	APSR_nzcv, fpscr
     f10:	beq	f24 <verify_monster+0x33c>
     f14:	ldr	r0, [pc, #532]	; 1130 <verify_monster+0x548>
     f18:	bl	0 <printf>
     f1c:	mvn	r0, #0
     f20:	b	1e98 <verify_monster+0x12b0>
     f24:	cmp	r1, #0
     f28:	beq	f38 <verify_monster+0x350>
     f2c:	ldrsb	r3, [r1, #24]
     f30:	sbfx	r2, r3, #0, #8
     f34:	b	f3c <verify_monster+0x354>
     f38:	mov	r2, #0
     f3c:	cmp	r2, #2
     f40:	beq	f54 <verify_monster+0x36c>
     f44:	ldr	r0, [pc, #460]	; 1118 <verify_monster+0x530>
     f48:	bl	0 <printf>
     f4c:	mvn	r0, #0
     f50:	b	1e98 <verify_monster+0x12b0>
     f54:	add	r3, r1, #26
     f58:	mov	r2, #0
     f5c:	cmp	r1, #0
     f60:	movne	r2, r3
     f64:	moveq	r2, r2
     f68:	cmp	r2, #0
     f6c:	beq	f80 <verify_monster+0x398>
     f70:	mov	r3, r2
     f74:	ldrsh	r3, [r3]
     f78:	sbfx	ip, r3, #0, #16
     f7c:	b	f84 <verify_monster+0x39c>
     f80:	mov	ip, #0
     f84:	cmp	ip, #5
     f88:	bne	1e8c <verify_monster+0x12a4>
     f8c:	cmp	r2, #0
     f90:	beq	fa0 <verify_monster+0x3b8>
     f94:	ldrsb	ip, [r2, #2]
     f98:	sbfx	r3, ip, #0, #8
     f9c:	b	fa4 <verify_monster+0x3bc>
     fa0:	mov	r3, #0
     fa4:	cmp	r3, #6
     fa8:	bne	1e8c <verify_monster+0x12a4>
     fac:	mov	r6, r5
     fb0:	mov	r4, #0
     fb4:	ldr	r2, [pc, #384]	; 113c <verify_monster+0x554>
     fb8:	cmp	r2, #0
     fbc:	movne	r0, #1
     fc0:	moveq	r0, #0
     fc4:	mov	r2, #0
     fc8:	cmp	r6, #0
     fcc:	movne	r2, r0
     fd0:	moveq	r2, r2
     fd4:	cmp	r2, #0
     fd8:	bne	ff0 <verify_monster+0x408>
     fdc:	ldr	r0, [pc, #324]	; 1128 <verify_monster+0x540>
     fe0:	ldr	r1, [pc, #344]	; 1140 <verify_monster+0x558>
     fe4:	movw	r2, #699	; 0x2bb
     fe8:	ldr	r3, [pc, #288]	; 1110 <verify_monster+0x528>
     fec:	bl	0 <__assert_fail>
     ff0:	ldr	r0, [r6]
     ff4:	sub	r0, r6, r0
     ff8:	ldrh	ip, [r0]
     ffc:	bic	ip, ip, #16711680	; 0xff0000
    1000:	bic	ip, ip, #-16777216	; 0xff000000
    1004:	cmp	ip, #12
    1008:	bcc	1018 <verify_monster+0x430>
    100c:	ldrh	r1, [r0, #10]
    1010:	bic	r4, r1, #16711680	; 0xff0000
    1014:	bic	r4, r4, #-16777216	; 0xff000000
    1018:	cmp	r4, #0
    101c:	beq	1034 <verify_monster+0x44c>
    1020:	add	ip, r6, r4
    1024:	ldr	r3, [ip]
    1028:	add	r1, ip, r3
    102c:	add	r0, r1, #4
    1030:	b	1058 <verify_monster+0x470>
    1034:	mov	r3, #0
    1038:	cmp	r3, #0
    103c:	bne	1054 <verify_monster+0x46c>
    1040:	ldr	r0, [pc, #240]	; 1138 <verify_monster+0x550>
    1044:	ldr	r1, [pc, #244]	; 1140 <verify_monster+0x558>
    1048:	movw	r2, #699	; 0x2bb
    104c:	ldr	r3, [pc, #188]	; 1110 <verify_monster+0x528>
    1050:	bl	0 <__assert_fail>
    1054:	mov	r0, #0
    1058:	cmp	r0, #0
    105c:	beq	1e7c <verify_monster+0x1294>
    1060:	sub	lr, r0, #4096	; 0x1000
    1064:	ldr	r1, [lr, #4092]	; 0xffc
    1068:	cmp	r1, #9
    106c:	bne	1e7c <verify_monster+0x1294>
    1070:	cmp	r0, #0
    1074:	beq	1e6c <verify_monster+0x1284>
    1078:	ldr	r1, [pc, #216]	; 1158 <verify_monster+0x570>
    107c:	bl	0 <strcmp>
    1080:	cmp	r0, #0
    1084:	bne	1e6c <verify_monster+0x1284>
    1088:	mov	r6, r5
    108c:	mov	r4, #0
    1090:	ldr	ip, [pc, #164]	; 113c <verify_monster+0x554>
    1094:	cmp	ip, #0
    1098:	movne	ip, #1
    109c:	moveq	ip, #0
    10a0:	mov	r2, #0
    10a4:	cmp	r6, #0
    10a8:	movne	r0, ip
    10ac:	moveq	r0, r2
    10b0:	cmp	r0, #0
    10b4:	bne	10cc <verify_monster+0x4e4>
    10b8:	ldr	r0, [pc, #104]	; 1128 <verify_monster+0x540>
    10bc:	ldr	r1, [pc, #124]	; 1140 <verify_monster+0x558>
    10c0:	movw	r2, #706	; 0x2c2
    10c4:	ldr	r3, [pc, #72]	; 1114 <verify_monster+0x52c>
    10c8:	bl	0 <__assert_fail>
    10cc:	ldr	r1, [r6]
    10d0:	sub	r2, r6, r1
    10d4:	ldrh	r1, [r2]
    10d8:	bic	r0, r1, #16711680	; 0xff0000
    10dc:	bic	r0, r0, #-16777216	; 0xff000000
    10e0:	cmp	r0, #16
    10e4:	bcc	10f4 <verify_monster+0x50c>
    10e8:	ldrh	ip, [r2, #14]
    10ec:	bic	r4, ip, #16711680	; 0xff0000
    10f0:	bic	r4, r4, #-16777216	; 0xff000000
    10f4:	cmp	r4, #0
    10f8:	beq	1170 <verify_monster+0x588>
    10fc:	add	r3, r6, r4
    1100:	ldr	r0, [r3]
    1104:	add	ip, r3, r0
    1108:	add	r4, ip, #4
    110c:	b	1194 <verify_monster+0x5ac>
    1110:	.word	0x000008a4
    1114:	.word	0x000008c0
    1118:	.word	0x000002b3
    111c:	.word	0x000005a0
    1120:	.word	0x00000291
    1124:	.word	0x0000088a
    1128:	.word	0x00000149
    112c:	.word	0x000006b4
    1130:	.word	0x000001ce
    1134:	.word	0x00000000
    1138:	.word	0x0000023e
    113c:	.word	0x000001a2
    1140:	.word	0x000002c9
    1144:	.word	0x0000057e
    1148:	.word	0x00000536
    114c:	.word	0x0000086f
    1150:	.word	0x000001fa
    1154:	.word	0x000000ae
    1158:	.word	0x000001bc
    115c:	.word	0x0000021b
    1160:	.word	0x00000522
	...
    1170:	ldr	r1, [pc, #3536]	; 1f48 <verify_monster+0x1360>
    1174:	cmp	r1, #0
    1178:	bne	1190 <verify_monster+0x5a8>
    117c:	ldr	r0, [pc, #3548]	; 1f60 <verify_monster+0x1378>
    1180:	ldr	r1, [pc, #3496]	; 1f30 <verify_monster+0x1348>
    1184:	movw	r2, #706	; 0x2c2
    1188:	ldr	r3, [pc, #3392]	; 1ed0 <verify_monster+0x12e8>
    118c:	bl	0 <__assert_fail>
    1190:	mov	r4, #0
    1194:	mov	r1, r4
    1198:	cmp	r1, #0
    119c:	beq	1e5c <verify_monster+0x1274>
    11a0:	sub	lr, r1, #4096	; 0x1000
    11a4:	ldr	r0, [lr, #4092]	; 0xffc
    11a8:	cmp	r0, #5
    11ac:	bne	1e5c <verify_monster+0x1274>
    11b0:	mov	r6, #0
    11b4:	mov	r1, r4
    11b8:	cmp	r1, #0
    11bc:	beq	11cc <verify_monster+0x5e4>
    11c0:	sub	lr, r1, #4096	; 0x1000
    11c4:	ldr	ip, [lr, #4092]	; 0xffc
    11c8:	b	11d0 <verify_monster+0x5e8>
    11cc:	mov	ip, #0
    11d0:	ldr	r3, [pc, #3384]	; 1f10 <verify_monster+0x1328>
    11d4:	cmp	r3, #0
    11d8:	movne	r3, #1
    11dc:	moveq	r3, #0
    11e0:	mov	r0, #0
    11e4:	cmp	ip, r6
    11e8:	movhi	r1, r3
    11ec:	movls	r1, r0
    11f0:	cmp	r1, #0
    11f4:	bne	120c <verify_monster+0x624>
    11f8:	ldr	r0, [pc, #3252]	; 1eb4 <verify_monster+0x12cc>
    11fc:	ldr	r1, [pc, #3264]	; 1ec4 <verify_monster+0x12dc>
    1200:	movw	r2, #395	; 0x18b
    1204:	ldr	r3, [pc, #3436]	; 1f78 <verify_monster+0x1390>
    1208:	bl	0 <__assert_fail>
    120c:	add	r1, r4, r6
    1210:	ldrb	r2, [r1]
    1214:	and	r2, r2, #255	; 0xff
    1218:	cmp	r2, r6
    121c:	beq	1234 <verify_monster+0x64c>
    1220:	ldr	r0, [pc, #3348]	; 1f3c <verify_monster+0x1354>
    1224:	mov	r1, r6
    1228:	bl	0 <printf>
    122c:	mvn	r0, #0
    1230:	b	1e98 <verify_monster+0x12b0>
    1234:	add	r6, r6, #1
    1238:	cmp	r6, #5
    123c:	blt	11b4 <verify_monster+0x5cc>
    1240:	mov	r6, r5
    1244:	mov	r4, #0
    1248:	ldr	r1, [pc, #3288]	; 1f28 <verify_monster+0x1340>
    124c:	cmp	r1, #0
    1250:	movne	r3, #1
    1254:	moveq	r3, #0
    1258:	mov	r2, #0
    125c:	cmp	r6, #0
    1260:	movne	r1, r3
    1264:	moveq	r1, r2
    1268:	cmp	r1, #0
    126c:	bne	1284 <verify_monster+0x69c>
    1270:	ldr	r0, [pc, #3208]	; 1f00 <verify_monster+0x1318>
    1274:	ldr	r1, [pc, #3252]	; 1f30 <verify_monster+0x1348>
    1278:	mov	r2, #712	; 0x2c8
    127c:	ldr	r3, [pc, #3128]	; 1ebc <verify_monster+0x12d4>
    1280:	bl	0 <__assert_fail>
    1284:	ldr	r1, [r6]
    1288:	sub	r2, r6, r1
    128c:	ldrh	r3, [r2]
    1290:	bic	r3, r3, #16711680	; 0xff0000
    1294:	bic	r3, r3, #-16777216	; 0xff000000
    1298:	cmp	r3, #26
    129c:	bcc	12ac <verify_monster+0x6c4>
    12a0:	ldrh	r3, [r2, #24]
    12a4:	bic	r4, r3, #16711680	; 0xff0000
    12a8:	bic	r4, r4, #-16777216	; 0xff000000
    12ac:	cmp	r4, #0
    12b0:	beq	12c8 <verify_monster+0x6e0>
    12b4:	add	r0, r6, r4
    12b8:	ldr	ip, [r0]
    12bc:	add	r0, r0, ip
    12c0:	add	r4, r0, #4
    12c4:	b	12ec <verify_monster+0x704>
    12c8:	ldr	ip, [pc, #3192]	; 1f48 <verify_monster+0x1360>
    12cc:	cmp	ip, #0
    12d0:	bne	12e8 <verify_monster+0x700>
    12d4:	ldr	r0, [pc, #3204]	; 1f60 <verify_monster+0x1378>
    12d8:	ldr	r1, [pc, #3152]	; 1f30 <verify_monster+0x1348>
    12dc:	mov	r2, #712	; 0x2c8
    12e0:	ldr	r3, [pc, #3028]	; 1ebc <verify_monster+0x12d4>
    12e4:	bl	0 <__assert_fail>
    12e8:	mov	r4, #0
    12ec:	cmp	r4, #0
    12f0:	bne	1304 <verify_monster+0x71c>
    12f4:	ldr	r0, [pc, #3040]	; 1edc <verify_monster+0x12f4>
    12f8:	bl	0 <printf>
    12fc:	mvn	r0, #0
    1300:	b	1e98 <verify_monster+0x12b0>
    1304:	cmp	r4, #0
    1308:	beq	1e4c <verify_monster+0x1264>
    130c:	sub	lr, r4, #4096	; 0x1000
    1310:	ldr	r3, [lr, #4092]	; 0xffc
    1314:	cmp	r3, #2
    1318:	bne	1e4c <verify_monster+0x1264>
    131c:	mov	r6, r4
    1320:	mov	ip, r4
    1324:	cmp	ip, #0
    1328:	bne	1330 <verify_monster+0x748>
    132c:	mov	r3, #0
    1330:	ldr	r0, [pc, #3032]	; 1f10 <verify_monster+0x1328>
    1334:	cmp	r0, #0
    1338:	movne	ip, #1
    133c:	moveq	ip, #0
    1340:	mov	r1, #0
    1344:	cmp	r3, #0
    1348:	movhi	r3, ip
    134c:	movls	r3, r1
    1350:	cmp	r3, #0
    1354:	bne	136c <verify_monster+0x784>
    1358:	ldr	r0, [pc, #2900]	; 1eb4 <verify_monster+0x12cc>
    135c:	ldr	r1, [pc, #2912]	; 1ec4 <verify_monster+0x12dc>
    1360:	mov	r2, #108	; 0x6c
    1364:	ldr	r3, [pc, #3092]	; 1f80 <verify_monster+0x1398>
    1368:	bl	0 <__assert_fail>
    136c:	ldr	r3, [r6]
    1370:	add	r2, r6, r3
    1374:	add	r0, r2, #4
    1378:	ldr	r1, [pc, #2916]	; 1ee4 <verify_monster+0x12fc>
    137c:	bl	0 <strcmp>
    1380:	cmp	r0, #0
    1384:	beq	1398 <verify_monster+0x7b0>
    1388:	ldr	r0, [pc, #3060]	; 1f84 <verify_monster+0x139c>
    138c:	bl	0 <printf>
    1390:	mvn	r0, #0
    1394:	b	1e98 <verify_monster+0x12b0>
    1398:	add	r6, r4, #4
    139c:	cmp	r4, #0
    13a0:	beq	13b0 <verify_monster+0x7c8>
    13a4:	sub	lr, r4, #4096	; 0x1000
    13a8:	ldr	r0, [lr, #4092]	; 0xffc
    13ac:	b	13b4 <verify_monster+0x7cc>
    13b0:	mov	r0, #0
    13b4:	ldr	ip, [pc, #2900]	; 1f10 <verify_monster+0x1328>
    13b8:	cmp	ip, #0
    13bc:	movne	r2, #1
    13c0:	moveq	r2, #0
    13c4:	mov	r1, #0
    13c8:	cmp	r0, #1
    13cc:	movhi	r0, r2
    13d0:	movls	r0, r1
    13d4:	cmp	r0, #0
    13d8:	bne	13f0 <verify_monster+0x808>
    13dc:	ldr	r0, [pc, #2768]	; 1eb4 <verify_monster+0x12cc>
    13e0:	ldr	r1, [pc, #2780]	; 1ec4 <verify_monster+0x12dc>
    13e4:	mov	r2, #108	; 0x6c
    13e8:	ldr	r3, [pc, #2960]	; 1f80 <verify_monster+0x1398>
    13ec:	bl	0 <__assert_fail>
    13f0:	ldr	r3, [r6]
    13f4:	add	r3, r6, r3
    13f8:	add	r0, r3, #4
    13fc:	ldr	r1, [pc, #2900]	; 1f58 <verify_monster+0x1370>
    1400:	bl	0 <strcmp>
    1404:	cmp	r0, #0
    1408:	beq	141c <verify_monster+0x834>
    140c:	ldr	r0, [pc, #2816]	; 1f14 <verify_monster+0x132c>
    1410:	bl	0 <printf>
    1414:	mvn	r0, #0
    1418:	b	1e98 <verify_monster+0x12b0>
    141c:	mov	r6, r5
    1420:	mov	r4, #0
    1424:	ldr	ip, [pc, #2812]	; 1f28 <verify_monster+0x1340>
    1428:	cmp	ip, #0
    142c:	movne	r0, #1
    1430:	moveq	r0, #0
    1434:	mov	r2, #0
    1438:	cmp	r6, #0
    143c:	movne	r3, r0
    1440:	moveq	r3, r2
    1444:	cmp	r3, #0
    1448:	bne	1460 <verify_monster+0x878>
    144c:	ldr	r0, [pc, #2732]	; 1f00 <verify_monster+0x1318>
    1450:	ldr	r1, [pc, #2776]	; 1f30 <verify_monster+0x1348>
    1454:	movw	r2, #717	; 0x2cd
    1458:	ldr	r3, [pc, #2664]	; 1ec8 <verify_monster+0x12e0>
    145c:	bl	0 <__assert_fail>
    1460:	ldr	r0, [r6]
    1464:	sub	r2, r6, r0
    1468:	ldrh	r1, [r2]
    146c:	bic	r0, r1, #16711680	; 0xff0000
    1470:	bic	r0, r0, #-16777216	; 0xff000000
    1474:	cmp	r0, #20
    1478:	bcc	1488 <verify_monster+0x8a0>
    147c:	ldrh	ip, [r2, #18]
    1480:	bic	r4, ip, #16711680	; 0xff0000
    1484:	bic	r4, r4, #-16777216	; 0xff000000
    1488:	cmp	r4, #0
    148c:	beq	149c <verify_monster+0x8b4>
    1490:	add	r2, r6, r4
    1494:	ldrb	r2, [r2]
    1498:	b	14a0 <verify_monster+0x8b8>
    149c:	mov	r2, #0
    14a0:	and	r1, r2, #255	; 0xff
    14a4:	cmp	r1, #1
    14a8:	beq	14bc <verify_monster+0x8d4>
    14ac:	ldr	r0, [pc, #2660]	; 1f18 <verify_monster+0x1330>
    14b0:	bl	0 <printf>
    14b4:	mvn	r0, #0
    14b8:	b	1e98 <verify_monster+0x12b0>
    14bc:	mov	r6, r5
    14c0:	mov	r4, #0
    14c4:	ldr	r0, [pc, #2652]	; 1f28 <verify_monster+0x1340>
    14c8:	cmp	r0, #0
    14cc:	movne	r2, #1
    14d0:	moveq	r2, #0
    14d4:	mov	ip, #0
    14d8:	cmp	r6, #0
    14dc:	movne	r1, r2
    14e0:	moveq	r1, ip
    14e4:	cmp	r1, #0
    14e8:	bne	1500 <verify_monster+0x918>
    14ec:	ldr	r0, [pc, #2572]	; 1f00 <verify_monster+0x1318>
    14f0:	ldr	r1, [pc, #2616]	; 1f30 <verify_monster+0x1348>
    14f4:	movw	r2, #717	; 0x2cd
    14f8:	ldr	r3, [pc, #2604]	; 1f2c <verify_monster+0x1344>
    14fc:	bl	0 <__assert_fail>
    1500:	ldr	ip, [r6]
    1504:	sub	r3, r6, ip
    1508:	ldrh	r1, [r3]
    150c:	bic	r2, r1, #16711680	; 0xff0000
    1510:	bic	r2, r2, #-16777216	; 0xff000000
    1514:	cmp	r2, #22
    1518:	bcc	1528 <verify_monster+0x940>
    151c:	ldrh	r2, [r3, #20]
    1520:	bic	r4, r2, #16711680	; 0xff0000
    1524:	bic	r4, r4, #-16777216	; 0xff000000
    1528:	cmp	r4, #0
    152c:	beq	1540 <verify_monster+0x958>
    1530:	add	r3, r6, r4
    1534:	ldr	r0, [r3]
    1538:	add	r4, r3, r0
    153c:	b	1564 <verify_monster+0x97c>
    1540:	ldr	r2, [pc, #2560]	; 1f48 <verify_monster+0x1360>
    1544:	cmp	r2, #0
    1548:	bne	1560 <verify_monster+0x978>
    154c:	ldr	r0, [pc, #2572]	; 1f60 <verify_monster+0x1378>
    1550:	ldr	r1, [pc, #2520]	; 1f30 <verify_monster+0x1348>
    1554:	movw	r2, #717	; 0x2cd
    1558:	ldr	r3, [pc, #2508]	; 1f2c <verify_monster+0x1344>
    155c:	bl	0 <__assert_fail>
    1560:	mov	r4, #0
    1564:	cmp	r4, #0
    1568:	bne	157c <verify_monster+0x994>
    156c:	ldr	r0, [pc, #2392]	; 1ecc <verify_monster+0x12e4>
    1570:	bl	0 <printf>
    1574:	mvn	r0, #0
    1578:	b	1e98 <verify_monster+0x12b0>
    157c:	mov	r6, #0
    1580:	ldr	r3, [pc, #2464]	; 1f28 <verify_monster+0x1340>
    1584:	cmp	r3, #0
    1588:	movne	r0, #1
    158c:	moveq	r0, #0
    1590:	mov	r2, #0
    1594:	cmp	r4, #0
    1598:	movne	r0, r0
    159c:	moveq	r0, r2
    15a0:	cmp	r0, #0
    15a4:	bne	15bc <verify_monster+0x9d4>
    15a8:	ldr	r0, [pc, #2384]	; 1f00 <verify_monster+0x1318>
    15ac:	ldr	r1, [pc, #2428]	; 1f30 <verify_monster+0x1348>
    15b0:	movw	r2, #699	; 0x2bb
    15b4:	ldr	r3, [pc, #2300]	; 1eb8 <verify_monster+0x12d0>
    15b8:	bl	0 <__assert_fail>
    15bc:	ldr	r1, [r4]
    15c0:	sub	ip, r4, r1
    15c4:	ldrh	r0, [ip]
    15c8:	bic	r1, r0, #16711680	; 0xff0000
    15cc:	bic	r1, r1, #-16777216	; 0xff000000
    15d0:	cmp	r1, #12
    15d4:	bcc	15e4 <verify_monster+0x9fc>
    15d8:	ldrh	r0, [ip, #10]
    15dc:	bic	r6, r0, #16711680	; 0xff0000
    15e0:	bic	r6, r6, #-16777216	; 0xff000000
    15e4:	cmp	r6, #0
    15e8:	beq	1600 <verify_monster+0xa18>
    15ec:	add	ip, r4, r6
    15f0:	ldr	r3, [ip]
    15f4:	add	r3, ip, r3
    15f8:	add	r0, r3, #4
    15fc:	b	1624 <verify_monster+0xa3c>
    1600:	mov	ip, #0
    1604:	cmp	ip, #0
    1608:	bne	1620 <verify_monster+0xa38>
    160c:	ldr	r0, [pc, #2312]	; 1f1c <verify_monster+0x1334>
    1610:	ldr	r1, [pc, #2328]	; 1f30 <verify_monster+0x1348>
    1614:	movw	r2, #699	; 0x2bb
    1618:	ldr	r3, [pc, #2200]	; 1eb8 <verify_monster+0x12d0>
    161c:	bl	0 <__assert_fail>
    1620:	mov	r0, #0
    1624:	ldr	r1, [pc, #2292]	; 1f20 <verify_monster+0x1338>
    1628:	bl	0 <strcmp>
    162c:	cmp	r0, #0
    1630:	beq	1644 <verify_monster+0xa5c>
    1634:	ldr	r0, [pc, #2344]	; 1f64 <verify_monster+0x137c>
    1638:	bl	0 <printf>
    163c:	mvn	r0, #0
    1640:	b	1e98 <verify_monster+0x12b0>
    1644:	mov	r6, r5
    1648:	mov	r4, #0
    164c:	ldr	r1, [pc, #2260]	; 1f28 <verify_monster+0x1340>
    1650:	cmp	r1, #0
    1654:	movne	r0, #1
    1658:	moveq	r0, #0
    165c:	mov	r1, #0
    1660:	cmp	r6, #0
    1664:	movne	r0, r0
    1668:	moveq	r0, r1
    166c:	cmp	r0, #0
    1670:	bne	1688 <verify_monster+0xaa0>
    1674:	ldr	r0, [pc, #2180]	; 1f00 <verify_monster+0x1318>
    1678:	ldr	r1, [pc, #2224]	; 1f30 <verify_monster+0x1348>
    167c:	movw	r2, #718	; 0x2ce
    1680:	ldr	r3, [pc, #2292]	; 1f7c <verify_monster+0x1394>
    1684:	bl	0 <__assert_fail>
    1688:	ldr	ip, [r6]
    168c:	sub	r2, r6, ip
    1690:	ldrh	r1, [r2]
    1694:	bic	r0, r1, #16711680	; 0xff0000
    1698:	bic	r0, r0, #-16777216	; 0xff000000
    169c:	cmp	r0, #24
    16a0:	bcc	16b0 <verify_monster+0xac8>
    16a4:	ldrh	r0, [r2, #22]
    16a8:	bic	r4, r0, #16711680	; 0xff0000
    16ac:	bic	r4, r4, #-16777216	; 0xff000000
    16b0:	cmp	r4, #0
    16b4:	beq	16cc <verify_monster+0xae4>
    16b8:	add	r3, r6, r4
    16bc:	ldr	r0, [r3]
    16c0:	add	r0, r3, r0
    16c4:	add	r4, r0, #4
    16c8:	b	16f0 <verify_monster+0xb08>
    16cc:	ldr	r2, [pc, #2164]	; 1f48 <verify_monster+0x1360>
    16d0:	cmp	r2, #0
    16d4:	bne	16ec <verify_monster+0xb04>
    16d8:	ldr	r0, [pc, #2176]	; 1f60 <verify_monster+0x1378>
    16dc:	ldr	r1, [pc, #2124]	; 1f30 <verify_monster+0x1348>
    16e0:	movw	r2, #718	; 0x2ce
    16e4:	ldr	r3, [pc, #2192]	; 1f7c <verify_monster+0x1394>
    16e8:	bl	0 <__assert_fail>
    16ec:	mov	r4, #0
    16f0:	cmp	r4, #0
    16f4:	beq	1e3c <verify_monster+0x1254>
    16f8:	sub	lr, r4, #4096	; 0x1000
    16fc:	ldr	r3, [lr, #4092]	; 0xffc
    1700:	cmp	r3, #2
    1704:	bne	1e3c <verify_monster+0x1254>
    1708:	mov	r6, r4
    170c:	cmp	r6, #0
    1710:	bne	1718 <verify_monster+0xb30>
    1714:	mov	r3, #0
    1718:	ldr	ip, [pc, #2032]	; 1f10 <verify_monster+0x1328>
    171c:	cmp	ip, #0
    1720:	movne	ip, #1
    1724:	moveq	ip, #0
    1728:	mov	r1, #0
    172c:	cmp	r3, #0
    1730:	movhi	r2, ip
    1734:	movls	r2, r1
    1738:	cmp	r2, #0
    173c:	bne	1754 <verify_monster+0xb6c>
    1740:	ldr	r0, [pc, #1900]	; 1eb4 <verify_monster+0x12cc>
    1744:	ldr	r1, [pc, #2020]	; 1f30 <verify_monster+0x1348>
    1748:	mov	r2, #380	; 0x17c
    174c:	ldr	r3, [pc, #2048]	; 1f54 <verify_monster+0x136c>
    1750:	bl	0 <__assert_fail>
    1754:	mov	ip, r6
    1758:	cmp	ip, #0
    175c:	beq	176c <verify_monster+0xb84>
    1760:	ldrsh	ip, [ip]
    1764:	sbfx	r1, ip, #0, #16
    1768:	b	1770 <verify_monster+0xb88>
    176c:	mov	r1, #0
    1770:	cmp	r1, #10
    1774:	beq	1788 <verify_monster+0xba0>
    1778:	ldr	r0, [pc, #1996]	; 1f4c <verify_monster+0x1364>
    177c:	bl	0 <printf>
    1780:	mvn	r0, #0
    1784:	b	1e98 <verify_monster+0x12b0>
    1788:	cmp	r6, #0
    178c:	beq	179c <verify_monster+0xbb4>
    1790:	ldrsb	r2, [r6, #2]
    1794:	sbfx	ip, r2, #0, #8
    1798:	b	17a0 <verify_monster+0xbb8>
    179c:	mov	ip, #0
    17a0:	cmp	ip, #20
    17a4:	beq	17b8 <verify_monster+0xbd0>
    17a8:	ldr	r0, [pc, #1964]	; 1f5c <verify_monster+0x1374>
    17ac:	bl	0 <printf>
    17b0:	mvn	r0, #0
    17b4:	b	1e98 <verify_monster+0x12b0>
    17b8:	cmp	r4, #0
    17bc:	beq	17cc <verify_monster+0xbe4>
    17c0:	sub	lr, r4, #4096	; 0x1000
    17c4:	ldr	r1, [lr, #4092]	; 0xffc
    17c8:	b	17d0 <verify_monster+0xbe8>
    17cc:	mov	r1, #0
    17d0:	ldr	r3, [pc, #1848]	; 1f10 <verify_monster+0x1328>
    17d4:	cmp	r3, #0
    17d8:	movne	r2, #1
    17dc:	moveq	r2, #0
    17e0:	mov	r3, #0
    17e4:	cmp	r1, #1
    17e8:	movhi	ip, r2
    17ec:	movls	ip, r3
    17f0:	cmp	ip, #0
    17f4:	bne	180c <verify_monster+0xc24>
    17f8:	ldr	r0, [pc, #1716]	; 1eb4 <verify_monster+0x12cc>
    17fc:	ldr	r1, [pc, #1836]	; 1f30 <verify_monster+0x1348>
    1800:	mov	r2, #380	; 0x17c
    1804:	ldr	r3, [pc, #1864]	; 1f54 <verify_monster+0x136c>
    1808:	bl	0 <__assert_fail>
    180c:	add	r1, r4, #4
    1810:	cmp	r1, #0
    1814:	beq	1824 <verify_monster+0xc3c>
    1818:	ldrsh	r2, [r4, #4]
    181c:	sbfx	r0, r2, #0, #16
    1820:	b	1828 <verify_monster+0xc40>
    1824:	mov	r0, #0
    1828:	cmp	r0, #30
    182c:	beq	1840 <verify_monster+0xc58>
    1830:	ldr	r0, [pc, #1704]	; 1ee0 <verify_monster+0x12f8>
    1834:	bl	0 <printf>
    1838:	mvn	r0, #0
    183c:	b	1e98 <verify_monster+0x12b0>
    1840:	cmp	r1, #0
    1844:	beq	1854 <verify_monster+0xc6c>
    1848:	ldrsb	r3, [r1, #2]
    184c:	sbfx	r3, r3, #0, #8
    1850:	b	1858 <verify_monster+0xc70>
    1854:	mov	r3, #0
    1858:	cmp	r3, #40	; 0x28
    185c:	beq	1870 <verify_monster+0xc88>
    1860:	ldr	r0, [pc, #1644]	; 1ed4 <verify_monster+0x12ec>
    1864:	bl	0 <printf>
    1868:	mvn	r0, #0
    186c:	b	1e98 <verify_monster+0x12b0>
    1870:	mov	r6, r5
    1874:	mov	r4, #0
    1878:	ldr	ip, [pc, #1704]	; 1f28 <verify_monster+0x1340>
    187c:	cmp	ip, #0
    1880:	movne	r0, #1
    1884:	moveq	r0, #0
    1888:	mov	r1, #0
    188c:	cmp	r6, #0
    1890:	movne	r3, r0
    1894:	moveq	r3, r1
    1898:	cmp	r3, #0
    189c:	bne	18b4 <verify_monster+0xccc>
    18a0:	ldr	r0, [pc, #1624]	; 1f00 <verify_monster+0x1318>
    18a4:	ldr	r1, [pc, #1668]	; 1f30 <verify_monster+0x1348>
    18a8:	mov	r2, #724	; 0x2d4
    18ac:	ldr	r3, [pc, #1600]	; 1ef4 <verify_monster+0x130c>
    18b0:	bl	0 <__assert_fail>
    18b4:	ldr	r3, [r6]
    18b8:	sub	r3, r6, r3
    18bc:	ldrh	r1, [r3]
    18c0:	bic	r2, r1, #16711680	; 0xff0000
    18c4:	bic	r2, r2, #-16777216	; 0xff000000
    18c8:	cmp	r2, #38	; 0x26
    18cc:	bcc	18dc <verify_monster+0xcf4>
    18d0:	ldrh	r1, [r3, #36]	; 0x24
    18d4:	bic	r4, r1, #16711680	; 0xff0000
    18d8:	bic	r4, r4, #-16777216	; 0xff000000
    18dc:	cmp	r4, #0
    18e0:	beq	18fc <verify_monster+0xd14>
    18e4:	add	r1, r6, r4
    18e8:	ldr	r0, [r1]
    18ec:	movw	lr, #51521	; 0xc941
    18f0:	movt	lr, #56697	; 0xdd79
    18f4:	cmp	r0, lr
    18f8:	beq	1910 <verify_monster+0xd28>
    18fc:	ldr	r0, [pc, #1584]	; 1f34 <verify_monster+0x134c>
    1900:	ldr	r1, [pc, #1592]	; 1f40 <verify_monster+0x1358>
    1904:	mov	r2, #148	; 0x94
    1908:	ldr	r3, [pc, #1456]	; 1ec0 <verify_monster+0x12d8>
    190c:	bl	0 <__assert_fail>
    1910:	mov	r6, r5
    1914:	mov	r4, #0
    1918:	ldr	ip, [pc, #1544]	; 1f28 <verify_monster+0x1340>
    191c:	cmp	ip, #0
    1920:	movne	r1, #1
    1924:	moveq	r1, #0
    1928:	mov	r3, #0
    192c:	cmp	r6, #0
    1930:	movne	ip, r1
    1934:	moveq	ip, r3
    1938:	cmp	ip, #0
    193c:	bne	1954 <verify_monster+0xd6c>
    1940:	ldr	r0, [pc, #1464]	; 1f00 <verify_monster+0x1318>
    1944:	ldr	r1, [pc, #1508]	; 1f30 <verify_monster+0x1348>
    1948:	movw	r2, #725	; 0x2d5
    194c:	ldr	r3, [pc, #1508]	; 1f38 <verify_monster+0x1350>
    1950:	bl	0 <__assert_fail>
    1954:	ldr	r1, [r6]
    1958:	sub	r3, r6, r1
    195c:	ldrh	ip, [r3]
    1960:	bic	r1, ip, #16711680	; 0xff0000
    1964:	bic	r1, r1, #-16777216	; 0xff000000
    1968:	cmp	r1, #40	; 0x28
    196c:	bcc	197c <verify_monster+0xd94>
    1970:	ldrh	r2, [r3, #38]	; 0x26
    1974:	bic	r4, r2, #16711680	; 0xff0000
    1978:	bic	r4, r4, #-16777216	; 0xff000000
    197c:	cmp	r4, #0
    1980:	beq	1990 <verify_monster+0xda8>
    1984:	add	r2, r6, r4
    1988:	ldr	ip, [r2]
    198c:	b	1994 <verify_monster+0xdac>
    1990:	mov	ip, #0
    1994:	eor	r2, ip, #65	; 0x41
    1998:	eor	r2, r2, #51456	; 0xc900
    199c:	eor	r2, r2, #7929856	; 0x790000
    19a0:	eor	r2, r2, #-587202560	; 0xdd000000
    19a4:	cmp	r2, #0
    19a8:	beq	19c0 <verify_monster+0xdd8>
    19ac:	ldr	r0, [pc, #1368]	; 1f0c <verify_monster+0x1324>
    19b0:	ldr	r1, [pc, #1416]	; 1f40 <verify_monster+0x1358>
    19b4:	mov	r2, #149	; 0x95
    19b8:	ldr	r3, [pc, #1280]	; 1ec0 <verify_monster+0x12d8>
    19bc:	bl	0 <__assert_fail>
    19c0:	mov	r6, r5
    19c4:	mov	r4, #0
    19c8:	ldr	r2, [pc, #1368]	; 1f28 <verify_monster+0x1340>
    19cc:	cmp	r2, #0
    19d0:	movne	ip, #1
    19d4:	moveq	ip, #0
    19d8:	mov	r1, #0
    19dc:	cmp	r6, #0
    19e0:	movne	r2, ip
    19e4:	moveq	r2, r1
    19e8:	cmp	r2, #0
    19ec:	bne	1a04 <verify_monster+0xe1c>
    19f0:	ldr	r0, [pc, #1288]	; 1f00 <verify_monster+0x1318>
    19f4:	ldr	r1, [pc, #1332]	; 1f30 <verify_monster+0x1348>
    19f8:	movw	r2, #726	; 0x2d6
    19fc:	ldr	r3, [pc, #1412]	; 1f88 <verify_monster+0x13a0>
    1a00:	bl	0 <__assert_fail>
    1a04:	ldr	r1, [r6]
    1a08:	sub	r1, r6, r1
    1a0c:	ldrh	r0, [r1]
    1a10:	bic	r0, r0, #16711680	; 0xff0000
    1a14:	bic	r0, r0, #-16777216	; 0xff000000
    1a18:	cmp	r0, #42	; 0x2a
    1a1c:	bcc	1a2c <verify_monster+0xe44>
    1a20:	ldrh	r0, [r1, #40]	; 0x28
    1a24:	bic	r4, r0, #16711680	; 0xff0000
    1a28:	bic	r4, r4, #-16777216	; 0xff000000
    1a2c:	cmp	r4, #0
    1a30:	beq	1a44 <verify_monster+0xe5c>
    1a34:	add	r1, r6, r4
    1a38:	ldr	r0, [r1]
    1a3c:	ldr	r1, [r1, #4]
    1a40:	b	1a4c <verify_monster+0xe64>
    1a44:	mov	r1, #0
    1a48:	mov	r0, #0
    1a4c:	eor	r1, r1, #205	; 0xcd
    1a50:	eor	r1, r1, #1015808	; 0xf8000
    1a54:	eor	r1, r1, #1845493760	; 0x6e000000
    1a58:	eor	r2, r0, #129	; 0x81
    1a5c:	eor	r2, r2, #37120	; 0x9100
    1a60:	eor	r2, r2, #8060928	; 0x7b0000
    1a64:	eor	r2, r2, #-234881024	; 0xf2000000
    1a68:	orr	r0, r1, r2
    1a6c:	cmp	r0, #0
    1a70:	beq	1a88 <verify_monster+0xea0>
    1a74:	ldr	r0, [pc, #1296]	; 1f8c <verify_monster+0x13a4>
    1a78:	ldr	r1, [pc, #1216]	; 1f40 <verify_monster+0x1358>
    1a7c:	mov	r2, #150	; 0x96
    1a80:	ldr	r3, [pc, #1080]	; 1ec0 <verify_monster+0x12d8>
    1a84:	bl	0 <__assert_fail>
    1a88:	mov	r6, r5
    1a8c:	mov	r4, #0
    1a90:	ldr	r3, [pc, #1168]	; 1f28 <verify_monster+0x1340>
    1a94:	cmp	r3, #0
    1a98:	movne	r0, #1
    1a9c:	moveq	r0, #0
    1aa0:	mov	r1, #0
    1aa4:	cmp	r6, #0
    1aa8:	movne	r0, r0
    1aac:	moveq	r0, r1
    1ab0:	cmp	r0, #0
    1ab4:	bne	1acc <verify_monster+0xee4>
    1ab8:	ldr	r0, [pc, #1088]	; 1f00 <verify_monster+0x1318>
    1abc:	ldr	r1, [pc, #1132]	; 1f30 <verify_monster+0x1348>
    1ac0:	movw	r2, #727	; 0x2d7
    1ac4:	ldr	r3, [pc, #1192]	; 1f74 <verify_monster+0x138c>
    1ac8:	bl	0 <__assert_fail>
    1acc:	ldr	r2, [r6]
    1ad0:	sub	r0, r6, r2
    1ad4:	ldrh	r1, [r0]
    1ad8:	bic	r3, r1, #16711680	; 0xff0000
    1adc:	bic	r3, r3, #-16777216	; 0xff000000
    1ae0:	cmp	r3, #44	; 0x2c
    1ae4:	bcc	1af4 <verify_monster+0xf0c>
    1ae8:	ldrh	ip, [r0, #42]	; 0x2a
    1aec:	bic	r4, ip, #16711680	; 0xff0000
    1af0:	bic	r4, r4, #-16777216	; 0xff000000
    1af4:	cmp	r4, #0
    1af8:	beq	1b0c <verify_monster+0xf24>
    1afc:	add	r3, r6, r4
    1b00:	ldr	ip, [r3]
    1b04:	ldr	r0, [r3, #4]
    1b08:	b	1b14 <verify_monster+0xf2c>
    1b0c:	mov	r0, #0
    1b10:	mov	ip, #0
    1b14:	eor	r0, r0, #205	; 0xcd
    1b18:	eor	r0, r0, #1015808	; 0xf8000
    1b1c:	eor	r0, r0, #1845493760	; 0x6e000000
    1b20:	eor	r2, ip, #129	; 0x81
    1b24:	eor	r2, r2, #37120	; 0x9100
    1b28:	eor	r2, r2, #8060928	; 0x7b0000
    1b2c:	eor	r2, r2, #-234881024	; 0xf2000000
    1b30:	orr	ip, r0, r2
    1b34:	cmp	ip, #0
    1b38:	beq	1b50 <verify_monster+0xf68>
    1b3c:	ldr	r0, [pc, #1068]	; 1f70 <verify_monster+0x1388>
    1b40:	ldr	r1, [pc, #1016]	; 1f40 <verify_monster+0x1358>
    1b44:	mov	r2, #151	; 0x97
    1b48:	ldr	r3, [pc, #880]	; 1ec0 <verify_monster+0x12d8>
    1b4c:	bl	0 <__assert_fail>
    1b50:	mov	r6, r5
    1b54:	mov	r4, #0
    1b58:	ldr	ip, [pc, #968]	; 1f28 <verify_monster+0x1340>
    1b5c:	cmp	ip, #0
    1b60:	movne	r1, #1
    1b64:	moveq	r1, #0
    1b68:	mov	r2, #0
    1b6c:	cmp	r6, #0
    1b70:	movne	ip, r1
    1b74:	moveq	ip, r2
    1b78:	cmp	ip, #0
    1b7c:	bne	1b94 <verify_monster+0xfac>
    1b80:	ldr	r0, [pc, #888]	; 1f00 <verify_monster+0x1318>
    1b84:	ldr	r1, [pc, #932]	; 1f30 <verify_monster+0x1348>
    1b88:	mov	r2, #728	; 0x2d8
    1b8c:	ldr	r3, [pc, #980]	; 1f68 <verify_monster+0x1380>
    1b90:	bl	0 <__assert_fail>
    1b94:	ldr	ip, [r6]
    1b98:	sub	r0, r6, ip
    1b9c:	ldrh	r3, [r0]
    1ba0:	bic	r2, r3, #16711680	; 0xff0000
    1ba4:	bic	r2, r2, #-16777216	; 0xff000000
    1ba8:	cmp	r2, #46	; 0x2e
    1bac:	bcc	1bbc <verify_monster+0xfd4>
    1bb0:	ldrh	r3, [r0, #44]	; 0x2c
    1bb4:	bic	r4, r3, #16711680	; 0xff0000
    1bb8:	bic	r4, r4, #-16777216	; 0xff000000
    1bbc:	cmp	r4, #0
    1bc0:	beq	1bdc <verify_monster+0xff4>
    1bc4:	add	r1, r6, r4
    1bc8:	ldr	r3, [r1]
    1bcc:	movw	lr, #42097	; 0xa471
    1bd0:	movt	lr, #36481	; 0x8e81
    1bd4:	cmp	r3, lr
    1bd8:	beq	1bf0 <verify_monster+0x1008>
    1bdc:	ldr	r0, [pc, #788]	; 1ef8 <verify_monster+0x1310>
    1be0:	ldr	r1, [pc, #856]	; 1f40 <verify_monster+0x1358>
    1be4:	mov	r2, #152	; 0x98
    1be8:	ldr	r3, [pc, #720]	; 1ec0 <verify_monster+0x12d8>
    1bec:	bl	0 <__assert_fail>
    1bf0:	mov	r6, r5
    1bf4:	mov	r4, #0
    1bf8:	ldr	ip, [pc, #808]	; 1f28 <verify_monster+0x1340>
    1bfc:	cmp	ip, #0
    1c00:	movne	ip, #1
    1c04:	moveq	ip, #0
    1c08:	mov	r0, #0
    1c0c:	cmp	r6, #0
    1c10:	movne	r0, ip
    1c14:	moveq	r0, r0
    1c18:	cmp	r0, #0
    1c1c:	bne	1c34 <verify_monster+0x104c>
    1c20:	ldr	r0, [pc, #728]	; 1f00 <verify_monster+0x1318>
    1c24:	ldr	r1, [pc, #772]	; 1f30 <verify_monster+0x1348>
    1c28:	movw	r2, #729	; 0x2d9
    1c2c:	ldr	r3, [pc, #724]	; 1f08 <verify_monster+0x1320>
    1c30:	bl	0 <__assert_fail>
    1c34:	ldr	r2, [r6]
    1c38:	sub	r0, r6, r2
    1c3c:	ldrh	r3, [r0]
    1c40:	bic	ip, r3, #16711680	; 0xff0000
    1c44:	bic	ip, ip, #-16777216	; 0xff000000
    1c48:	cmp	ip, #48	; 0x30
    1c4c:	bcc	1c5c <verify_monster+0x1074>
    1c50:	ldrh	r1, [r0, #46]	; 0x2e
    1c54:	bic	r4, r1, #16711680	; 0xff0000
    1c58:	bic	r4, r4, #-16777216	; 0xff000000
    1c5c:	cmp	r4, #0
    1c60:	beq	1c70 <verify_monster+0x1088>
    1c64:	add	r2, r6, r4
    1c68:	ldr	ip, [r2]
    1c6c:	b	1c74 <verify_monster+0x108c>
    1c70:	mov	ip, #0
    1c74:	eor	r1, ip, #113	; 0x71
    1c78:	eor	r1, r1, #107520	; 0x1a400
    1c7c:	eor	r1, r1, #243269632	; 0xe800000
    1c80:	eor	r1, r1, #-2147483648	; 0x80000000
    1c84:	cmp	r1, #0
    1c88:	beq	1ca0 <verify_monster+0x10b8>
    1c8c:	ldr	r0, [pc, #604]	; 1ef0 <verify_monster+0x1308>
    1c90:	ldr	r1, [pc, #680]	; 1f40 <verify_monster+0x1358>
    1c94:	mov	r2, #153	; 0x99
    1c98:	ldr	r3, [pc, #544]	; 1ec0 <verify_monster+0x12d8>
    1c9c:	bl	0 <__assert_fail>
    1ca0:	mov	r6, r5
    1ca4:	mov	r4, #0
    1ca8:	ldr	r3, [pc, #632]	; 1f28 <verify_monster+0x1340>
    1cac:	cmp	r3, #0
    1cb0:	movne	r1, #1
    1cb4:	moveq	r1, #0
    1cb8:	mov	r2, #0
    1cbc:	cmp	r6, #0
    1cc0:	movne	ip, r1
    1cc4:	moveq	ip, r2
    1cc8:	cmp	ip, #0
    1ccc:	bne	1ce4 <verify_monster+0x10fc>
    1cd0:	ldr	r0, [pc, #552]	; 1f00 <verify_monster+0x1318>
    1cd4:	ldr	r1, [pc, #596]	; 1f30 <verify_monster+0x1348>
    1cd8:	movw	r2, #730	; 0x2da
    1cdc:	ldr	r3, [pc, #620]	; 1f50 <verify_monster+0x1368>
    1ce0:	bl	0 <__assert_fail>
    1ce4:	ldr	r0, [r6]
    1ce8:	sub	ip, r6, r0
    1cec:	ldrh	r0, [ip]
    1cf0:	bic	r0, r0, #16711680	; 0xff0000
    1cf4:	bic	r0, r0, #-16777216	; 0xff000000
    1cf8:	cmp	r0, #50	; 0x32
    1cfc:	bcc	1d0c <verify_monster+0x1124>
    1d00:	ldrh	r2, [ip, #48]	; 0x30
    1d04:	bic	r4, r2, #16711680	; 0xff0000
    1d08:	bic	r4, r4, #-16777216	; 0xff000000
    1d0c:	cmp	r4, #0
    1d10:	beq	1d24 <verify_monster+0x113c>
    1d14:	add	r3, r6, r4
    1d18:	ldr	r2, [r3]
    1d1c:	ldr	r3, [r3, #4]
    1d20:	b	1d2c <verify_monster+0x1144>
    1d24:	mov	r3, #0
    1d28:	mov	r2, #0
    1d2c:	eor	r0, r3, #220	; 0xdc
    1d30:	eor	r0, r0, #83968	; 0x14800
    1d34:	eor	r0, r0, #66584576	; 0x3f80000
    1d38:	eor	r0, r0, #1073741824	; 0x40000000
    1d3c:	eor	r3, r2, #241	; 0xf1
    1d40:	eor	r3, r3, #56576	; 0xdd00
    1d44:	eor	r3, r3, #6750208	; 0x670000
    1d48:	eor	r3, r3, #-956301312	; 0xc7000000
    1d4c:	orr	r0, r0, r3
    1d50:	cmp	r0, #0
    1d54:	beq	1d6c <verify_monster+0x1184>
    1d58:	ldr	r0, [pc, #452]	; 1f24 <verify_monster+0x133c>
    1d5c:	ldr	r1, [pc, #476]	; 1f40 <verify_monster+0x1358>
    1d60:	mov	r2, #154	; 0x9a
    1d64:	ldr	r3, [pc, #340]	; 1ec0 <verify_monster+0x12d8>
    1d68:	bl	0 <__assert_fail>
    1d6c:	mov	r4, #0
    1d70:	ldr	r1, [pc, #432]	; 1f28 <verify_monster+0x1340>
    1d74:	cmp	r1, #0
    1d78:	movne	r3, #1
    1d7c:	moveq	r3, #0
    1d80:	mov	ip, #0
    1d84:	cmp	r5, #0
    1d88:	movne	r0, r3
    1d8c:	moveq	r0, ip
    1d90:	cmp	r0, #0
    1d94:	bne	1dac <verify_monster+0x11c4>
    1d98:	ldr	r0, [pc, #352]	; 1f00 <verify_monster+0x1318>
    1d9c:	ldr	r1, [pc, #396]	; 1f30 <verify_monster+0x1348>
    1da0:	movw	r2, #731	; 0x2db
    1da4:	ldr	r3, [pc, #344]	; 1f04 <verify_monster+0x131c>
    1da8:	bl	0 <__assert_fail>
    1dac:	ldr	r2, [r5]
    1db0:	sub	r1, r5, r2
    1db4:	ldrh	r3, [r1]
    1db8:	bic	r3, r3, #16711680	; 0xff0000
    1dbc:	bic	r3, r3, #-16777216	; 0xff000000
    1dc0:	cmp	r3, #52	; 0x34
    1dc4:	bcc	1dd4 <verify_monster+0x11ec>
    1dc8:	ldrh	r2, [r1, #50]	; 0x32
    1dcc:	bic	r4, r2, #16711680	; 0xff0000
    1dd0:	bic	r4, r4, #-16777216	; 0xff000000
    1dd4:	cmp	r4, #0
    1dd8:	beq	1dec <verify_monster+0x1204>
    1ddc:	add	ip, r5, r4
    1de0:	ldr	r3, [ip]
    1de4:	ldr	r2, [ip, #4]
    1de8:	b	1df4 <verify_monster+0x120c>
    1dec:	mov	r2, #0
    1df0:	mov	r3, #0
    1df4:	eor	r0, r2, #220	; 0xdc
    1df8:	eor	r0, r0, #83968	; 0x14800
    1dfc:	eor	r0, r0, #66584576	; 0x3f80000
    1e00:	eor	r0, r0, #1073741824	; 0x40000000
    1e04:	eor	ip, r3, #241	; 0xf1
    1e08:	eor	ip, ip, #56576	; 0xdd00
    1e0c:	eor	ip, ip, #6750208	; 0x670000
    1e10:	eor	ip, ip, #-956301312	; 0xc7000000
    1e14:	orr	r0, r0, ip
    1e18:	cmp	r0, #0
    1e1c:	beq	1e34 <verify_monster+0x124c>
    1e20:	ldr	r0, [pc, #196]	; 1eec <verify_monster+0x1304>
    1e24:	ldr	r1, [pc, #276]	; 1f40 <verify_monster+0x1358>
    1e28:	mov	r2, #155	; 0x9b
    1e2c:	ldr	r3, [pc, #140]	; 1ec0 <verify_monster+0x12d8>
    1e30:	bl	0 <__assert_fail>
    1e34:	mov	r0, #0
    1e38:	b	1e98 <verify_monster+0x12b0>
    1e3c:	ldr	r0, [pc, #256]	; 1f44 <verify_monster+0x135c>
    1e40:	bl	0 <printf>
    1e44:	mvn	r0, #0
    1e48:	b	1e98 <verify_monster+0x12b0>
    1e4c:	ldr	r0, [pc, #280]	; 1f6c <verify_monster+0x1384>
    1e50:	bl	0 <printf>
    1e54:	mvn	r0, #0
    1e58:	b	1e98 <verify_monster+0x12b0>
    1e5c:	ldr	r0, [pc, #116]	; 1ed8 <verify_monster+0x12f0>
    1e60:	bl	0 <printf>
    1e64:	mvn	r0, #0
    1e68:	b	1e98 <verify_monster+0x12b0>
    1e6c:	ldr	r0, [pc, #116]	; 1ee8 <verify_monster+0x1300>
    1e70:	bl	0 <printf>
    1e74:	mvn	r0, #0
    1e78:	b	1e98 <verify_monster+0x12b0>
    1e7c:	ldr	r0, [pc, #268]	; 1f90 <verify_monster+0x13a8>
    1e80:	bl	0 <printf>
    1e84:	mvn	r0, #0
    1e88:	b	1e98 <verify_monster+0x12b0>
    1e8c:	ldr	r0, [pc, #104]	; 1efc <verify_monster+0x1314>
    1e90:	bl	0 <printf>
    1e94:	mvn	r0, #0
    1e98:	ldr	r4, [sp, #8]
    1e9c:	ldr	r5, [sp, #12]
    1ea0:	ldr	r6, [sp, #16]
    1ea4:	ldr	r7, [sp, #20]
    1ea8:	ldr	lr, [sp, #4]
    1eac:	add	sp, sp, #32
    1eb0:	bx	lr
    1eb4:	.word	0x000006f2
    1eb8:	.word	0x000008a4
    1ebc:	.word	0x000008e1
    1ec0:	.word	0x00000aa8
    1ec4:	.word	0x00000028
    1ec8:	.word	0x0000090a
    1ecc:	.word	0x00000566
    1ed0:	.word	0x000008c0
    1ed4:	.word	0x0000069d
    1ed8:	.word	0x000006d6
    1edc:	.word	0x00000182
    1ee0:	.word	0x000001e3
    1ee4:	.word	0x00000265
    1ee8:	.word	0x0000010f
    1eec:	.word	0x000007e1
    1ef0:	.word	0x0000047f
    1ef4:	.word	0x00000964
    1ef8:	.word	0x00000765
    1efc:	.word	0x0000054d
    1f00:	.word	0x00000149
    1f04:	.word	0x00000a7f
    1f08:	.word	0x00000a2d
    1f0c:	.word	0x00000385
    1f10:	.word	0x0000016f
    1f14:	.word	0x0000026b
    1f18:	.word	0x00000511
    1f1c:	.word	0x0000023e
    1f20:	.word	0x000004b5
    1f24:	.word	0x000004d1
    1f28:	.word	0x000001a2
    1f2c:	.word	0x0000092b
    1f30:	.word	0x000002c9
    1f34:	.word	0x000000b3
    1f38:	.word	0x0000098c
    1f3c:	.word	0x00000462
    1f40:	.word	0x000005ce
    1f44:	.word	0x00000124
    1f48:	.word	0x00000536
    1f4c:	.word	0x000005b7
    1f50:	.word	0x00000a56
    1f54:	.word	0x00000854
    1f58:	.word	0x000007db
    1f5c:	.word	0x0000074e
    1f60:	.word	0x000001fa
    1f64:	.word	0x00000427
    1f68:	.word	0x00000a04
    1f6c:	.word	0x000003fe
    1f70:	.word	0x000003ba
    1f74:	.word	0x000009dc
    1f78:	.word	0x0000083b
    1f7c:	.word	0x00000947
    1f80:	.word	0x00000821
    1f84:	.word	0x00000729
    1f88:	.word	0x000009b4
    1f8c:	.word	0x00000639
    1f90:	.word	0x00000446

00001f94 <main>:
    1f94:	mov	ip, sp
    1f98:	sub	sp, sp, #64	; 0x40
    1f9c:	str	ip, [sp]
    1fa0:	str	lr, [sp, #4]
    1fa4:	str	r4, [sp, #8]
    1fa8:	str	r5, [sp, #12]
    1fac:	str	r6, [sp, #16]
    1fb0:	str	r7, [sp, #20]
    1fb4:	str	r8, [sp, #24]
    1fb8:	mov	r4, r1
    1fbc:	mov	r5, r0
    1fc0:	cmp	r5, #2
    1fc4:	movne	r3, #1
    1fc8:	moveq	r3, #0
    1fcc:	mov	ip, #0
    1fd0:	cmp	r5, #1
    1fd4:	movne	ip, r3
    1fd8:	moveq	ip, ip
    1fdc:	cmp	ip, #0
    1fe0:	beq	1ffc <main+0x68>
    1fe4:	ldr	r2, [pc, #840]	; 2334 <main+0x3a0>
    1fe8:	ldr	r0, [r2]
    1fec:	ldr	r1, [pc, #852]	; 2348 <main+0x3b4>
    1ff0:	bl	0 <fprintf>
    1ff4:	mov	r0, #1
    1ff8:	bl	0 <exit>
    1ffc:	cmp	r5, #2
    2000:	bne	2010 <main+0x7c>
    2004:	ldr	ip, [pc, #836]	; 2350 <main+0x3bc>
    2008:	ldr	r2, [r4, #4]
    200c:	str	r2, [ip]
    2010:	ldr	r0, [pc, #824]	; 2350 <main+0x3bc>
    2014:	ldr	r0, [r0]
    2018:	ldr	r1, [pc, #792]	; 2338 <main+0x3a4>
    201c:	bl	0 <fopen>
    2020:	mov	r6, r0
    2024:	mov	r5, #0
    2028:	mov	r4, #0
    202c:	cmp	r6, #0
    2030:	beq	20c4 <main+0x130>
    2034:	mov	r1, #0
    2038:	mov	r2, #2
    203c:	mov	r0, r6
    2040:	bl	0 <fseek>
    2044:	mov	r0, r6
    2048:	bl	0 <ftell>
    204c:	mov	r5, r0
    2050:	str	r5, [sp, #32]
    2054:	cmp	r5, #1024	; 0x400
    2058:	bhi	20c4 <main+0x130>
    205c:	mov	r0, r6
    2060:	bl	0 <rewind>
    2064:	mov	r0, #1
    2068:	cmp	r5, #0
    206c:	movne	r0, r5
    2070:	moveq	r0, r0
    2074:	bl	0 <malloc>
    2078:	mov	r4, r0
    207c:	cmp	r4, #0
    2080:	beq	20c4 <main+0x130>
    2084:	mov	r7, #0
    2088:	add	r0, r4, r7
    208c:	mov	r1, #1
    2090:	sub	r2, r5, r7
    2094:	mov	r3, r6
    2098:	bl	0 <fread>
    209c:	cmp	r0, #0
    20a0:	beq	20ac <main+0x118>
    20a4:	add	r7, r7, r0
    20a8:	b	2088 <main+0xf4>
    20ac:	cmp	r7, r5
    20b0:	bne	20c4 <main+0x130>
    20b4:	mov	r0, r6
    20b8:	bl	0 <fclose>
    20bc:	str	r5, [sp, #32]
    20c0:	b	20ec <main+0x158>
    20c4:	cmp	r6, #0
    20c8:	beq	20d4 <main+0x140>
    20cc:	mov	r0, r6
    20d0:	bl	0 <fclose>
    20d4:	cmp	r4, #0
    20d8:	beq	20e4 <main+0x150>
    20dc:	mov	r0, r4
    20e0:	bl	0 <free>
    20e4:	str	r5, [sp, #32]
    20e8:	mov	r4, #0
    20ec:	ldr	r0, [sp, #32]
    20f0:	add	r3, r0, #255	; 0xff
    20f4:	bic	r1, r3, #255	; 0xff
    20f8:	mov	r5, #256	; 0x100
    20fc:	add	r0, r1, #3
    2100:	add	r0, r0, #256	; 0x100
    2104:	bl	0 <malloc>
    2108:	add	r1, r0, r5
    210c:	add	r3, r1, #3
    2110:	sub	r2, r5, #1
    2114:	bic	r5, r3, r2
    2118:	sub	lr, r5, #4096	; 0x1000
    211c:	str	r0, [lr, #4092]	; 0xffc
    2120:	ldr	r2, [sp, #32]
    2124:	mov	r1, r4
    2128:	mov	r0, r5
    212c:	bl	0 <memcpy>
    2130:	mov	r0, r4
    2134:	bl	0 <free>
    2138:	cmp	r5, #0
    213c:	bne	2160 <main+0x1cc>
    2140:	ldr	r0, [pc, #492]	; 2334 <main+0x3a0>
    2144:	ldr	r0, [r0]
    2148:	ldr	r1, [pc, #508]	; 234c <main+0x3b8>
    214c:	ldr	r2, [pc, #508]	; 2350 <main+0x3bc>
    2150:	ldr	r2, [r2]
    2154:	bl	0 <fprintf>
    2158:	mvn	r0, #0
    215c:	b	22f8 <main+0x364>
    2160:	ldr	r2, [pc, #436]	; 231c <main+0x388>
    2164:	ldr	r7, [sp, #32]
    2168:	ldr	r0, [pc, #452]	; 2334 <main+0x3a0>
    216c:	ldr	r6, [r0]
    2170:	mov	r4, r5
    2174:	ldr	r1, [pc, #436]	; 2330 <main+0x39c>
    2178:	mov	r0, r6
    217c:	bl	0 <fprintf>
    2180:	mov	r8, #0
    2184:	cmp	r8, r7
    2188:	bcs	223c <main+0x2a8>
    218c:	and	r1, r8, #15
    2190:	cmp	r1, #0
    2194:	bne	21c4 <main+0x230>
    2198:	cmp	r8, #0
    219c:	beq	21b0 <main+0x21c>
    21a0:	ldr	r1, [pc, #384]	; 2328 <main+0x394>
    21a4:	add	r2, sp, #40	; 0x28
    21a8:	mov	r0, r6
    21ac:	bl	0 <fprintf>
    21b0:	ldr	r1, [pc, #364]	; 2324 <main+0x390>
    21b4:	mov	r2, r8
    21b8:	mov	r0, r6
    21bc:	bl	0 <fprintf>
    21c0:	b	21dc <main+0x248>
    21c4:	and	ip, r8, #7
    21c8:	cmp	ip, #0
    21cc:	bne	21dc <main+0x248>
    21d0:	ldr	r1, [pc, #320]	; 2318 <main+0x384>
    21d4:	mov	r0, r6
    21d8:	bl	0 <fprintf>
    21dc:	ldr	r1, [pc, #316]	; 2320 <main+0x38c>
    21e0:	ldrb	r2, [r4, r8]
    21e4:	mov	r0, r6
    21e8:	bl	0 <fprintf>
    21ec:	ldrb	r0, [r4, r8]
    21f0:	cmp	r0, #32
    21f4:	blt	2210 <main+0x27c>
    21f8:	cmp	r0, #126	; 0x7e
    21fc:	bgt	2210 <main+0x27c>
    2200:	add	r2, sp, #40	; 0x28
    2204:	and	r1, r8, #15
    2208:	strb	r0, [r2, r1]
    220c:	b	2220 <main+0x28c>
    2210:	add	r0, sp, #40	; 0x28
    2214:	and	ip, r8, #15
    2218:	mov	r1, #46	; 0x2e
    221c:	strb	r1, [r0, ip]
    2220:	add	r1, sp, #40	; 0x28
    2224:	and	ip, r8, #15
    2228:	add	r1, r1, ip
    222c:	mov	r0, #0
    2230:	strb	r0, [r1, #1]
    2234:	add	r8, r8, #1
    2238:	b	2184 <main+0x1f0>
    223c:	and	r1, r8, #15
    2240:	cmp	r1, #0
    2244:	beq	225c <main+0x2c8>
    2248:	ldr	r1, [pc, #240]	; 2340 <main+0x3ac>
    224c:	mov	r0, r6
    2250:	bl	0 <fprintf>
    2254:	add	r8, r8, #1
    2258:	b	223c <main+0x2a8>
    225c:	ldr	r1, [pc, #196]	; 2328 <main+0x394>
    2260:	add	r2, sp, #40	; 0x28
    2264:	mov	r0, r6
    2268:	bl	0 <fprintf>
    226c:	ldr	r1, [sp, #32]
    2270:	ldr	r2, [pc, #204]	; 2344 <main+0x3b0>
    2274:	ldr	r3, [pc, #192]	; 233c <main+0x3a8>
    2278:	mov	r0, r5
    227c:	bl	0 <flatcc_verify_table_as_root>
    2280:	cmp	r0, #0
    2284:	beq	22a0 <main+0x30c>
    2288:	ldr	r2, [pc, #164]	; 2334 <main+0x3a0>
    228c:	ldr	r0, [r2]
    2290:	ldr	r1, [pc, #148]	; 232c <main+0x398>
    2294:	bl	0 <fprintf>
    2298:	mvn	r4, #0
    229c:	b	22e0 <main+0x34c>
    22a0:	ldr	r1, [sp, #32]
    22a4:	ldr	r2, [pc, #152]	; 2344 <main+0x3b0>
    22a8:	ldr	r3, [pc, #140]	; 233c <main+0x3a8>
    22ac:	mov	r0, r5
    22b0:	bl	0 <flatcc_verify_table_as_root>
    22b4:	cmp	r0, #0
    22b8:	beq	22d4 <main+0x340>
    22bc:	ldr	r2, [pc, #112]	; 2334 <main+0x3a0>
    22c0:	ldr	r0, [r2]
    22c4:	ldr	r1, [pc, #136]	; 2354 <main+0x3c0>
    22c8:	bl	0 <fprintf>
    22cc:	mvn	r4, #0
    22d0:	b	22e0 <main+0x34c>
    22d4:	mov	r0, r5
    22d8:	bl	be8 <verify_monster>
    22dc:	mov	r4, r0
    22e0:	cmp	r5, #0
    22e4:	beq	22f4 <main+0x360>
    22e8:	sub	lr, r5, #4096	; 0x1000
    22ec:	ldr	r0, [lr, #4092]	; 0xffc
    22f0:	bl	0 <free>
    22f4:	mov	r0, r4
    22f8:	ldr	r4, [sp, #8]
    22fc:	ldr	r5, [sp, #12]
    2300:	ldr	r6, [sp, #16]
    2304:	ldr	r7, [sp, #20]
    2308:	ldr	r8, [sp, #24]
    230c:	ldr	lr, [sp, #4]
    2310:	add	sp, sp, #64	; 0x40
    2314:	bx	lr
    2318:	.word	0x000004ba
    231c:	.word	0x000004bc
    2320:	.word	0x0000025f
    2324:	.word	0x000001c6
    2328:	.word	0x00000440
    232c:	.word	0x000000e8
    2330:	.word	0x000003f9
    2334:	.word	0x00000000
    2338:	.word	0x0000019f
    233c:	.word	0x00000000
    2340:	.word	0x000000aa
    2344:	.word	0x000000ae
    2348:	.word	0x00000345
    234c:	.word	0x00000678
    2350:	.word	0x00000000
    2354:	.word	0x0000079c
