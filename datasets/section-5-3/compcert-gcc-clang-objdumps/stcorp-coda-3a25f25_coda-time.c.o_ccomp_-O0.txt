
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-time.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_month_to_integer>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldrb	ip, [r0]
      14:	and	r1, ip, #255	; 0xff
      18:	strb	r1, [sp, #8]
      1c:	ldrb	ip, [r0, #1]
      20:	and	r1, ip, #255	; 0xff
      24:	strb	r1, [sp, #9]
      28:	ldrb	r0, [r0, #2]
      2c:	and	r0, r0, #255	; 0xff
      30:	strb	r0, [sp, #10]
      34:	mov	r0, #0
      38:	strb	r0, [sp, #11]
      3c:	add	r0, sp, #8
      40:	ldr	r1, [pc, #428]	; 1f4 <coda_month_to_integer+0x1f4>
      44:	mov	r2, #3
      48:	bl	0 <strncasecmp>
      4c:	cmp	r0, #0
      50:	bne	5c <coda_month_to_integer+0x5c>
      54:	mov	r0, #1
      58:	b	1d0 <coda_month_to_integer+0x1d0>
      5c:	add	r0, sp, #8
      60:	ldr	r1, [pc, #384]	; 1e8 <coda_month_to_integer+0x1e8>
      64:	mov	r2, #3
      68:	bl	0 <strncasecmp>
      6c:	cmp	r0, #0
      70:	bne	7c <coda_month_to_integer+0x7c>
      74:	mov	r0, #2
      78:	b	1d0 <coda_month_to_integer+0x1d0>
      7c:	add	r0, sp, #8
      80:	ldr	r1, [pc, #384]	; 208 <coda_month_to_integer+0x208>
      84:	mov	r2, #3
      88:	bl	0 <strncasecmp>
      8c:	cmp	r0, #0
      90:	bne	9c <coda_month_to_integer+0x9c>
      94:	mov	r0, #3
      98:	b	1d0 <coda_month_to_integer+0x1d0>
      9c:	add	r0, sp, #8
      a0:	ldr	r1, [pc, #340]	; 1fc <coda_month_to_integer+0x1fc>
      a4:	mov	r2, #3
      a8:	bl	0 <strncasecmp>
      ac:	cmp	r0, #0
      b0:	bne	bc <coda_month_to_integer+0xbc>
      b4:	mov	r0, #4
      b8:	b	1d0 <coda_month_to_integer+0x1d0>
      bc:	add	r0, sp, #8
      c0:	ldr	r1, [pc, #280]	; 1e0 <coda_month_to_integer+0x1e0>
      c4:	mov	r2, #3
      c8:	bl	0 <strncasecmp>
      cc:	cmp	r0, #0
      d0:	bne	dc <coda_month_to_integer+0xdc>
      d4:	mov	r0, #5
      d8:	b	1d0 <coda_month_to_integer+0x1d0>
      dc:	add	r0, sp, #8
      e0:	ldr	r1, [pc, #280]	; 200 <coda_month_to_integer+0x200>
      e4:	mov	r2, #3
      e8:	bl	0 <strncasecmp>
      ec:	cmp	r0, #0
      f0:	bne	fc <coda_month_to_integer+0xfc>
      f4:	mov	r0, #6
      f8:	b	1d0 <coda_month_to_integer+0x1d0>
      fc:	add	r0, sp, #8
     100:	ldr	r1, [pc, #232]	; 1f0 <coda_month_to_integer+0x1f0>
     104:	mov	r2, #3
     108:	bl	0 <strncasecmp>
     10c:	cmp	r0, #0
     110:	bne	11c <coda_month_to_integer+0x11c>
     114:	mov	r0, #7
     118:	b	1d0 <coda_month_to_integer+0x1d0>
     11c:	add	r0, sp, #8
     120:	ldr	r1, [pc, #228]	; 20c <coda_month_to_integer+0x20c>
     124:	mov	r2, #3
     128:	bl	0 <strncasecmp>
     12c:	cmp	r0, #0
     130:	bne	13c <coda_month_to_integer+0x13c>
     134:	mov	r0, #8
     138:	b	1d0 <coda_month_to_integer+0x1d0>
     13c:	add	r0, sp, #8
     140:	ldr	r1, [pc, #176]	; 1f8 <coda_month_to_integer+0x1f8>
     144:	mov	r2, #3
     148:	bl	0 <strncasecmp>
     14c:	cmp	r0, #0
     150:	bne	15c <coda_month_to_integer+0x15c>
     154:	mov	r0, #9
     158:	b	1d0 <coda_month_to_integer+0x1d0>
     15c:	add	r0, sp, #8
     160:	ldr	r1, [pc, #124]	; 1e4 <coda_month_to_integer+0x1e4>
     164:	mov	r2, #3
     168:	bl	0 <strncasecmp>
     16c:	cmp	r0, #0
     170:	bne	17c <coda_month_to_integer+0x17c>
     174:	mov	r0, #10
     178:	b	1d0 <coda_month_to_integer+0x1d0>
     17c:	add	r0, sp, #8
     180:	ldr	r1, [pc, #100]	; 1ec <coda_month_to_integer+0x1ec>
     184:	mov	r2, #3
     188:	bl	0 <strncasecmp>
     18c:	cmp	r0, #0
     190:	bne	19c <coda_month_to_integer+0x19c>
     194:	mov	r0, #11
     198:	b	1d0 <coda_month_to_integer+0x1d0>
     19c:	add	r0, sp, #8
     1a0:	ldr	r1, [pc, #92]	; 204 <coda_month_to_integer+0x204>
     1a4:	mov	r2, #3
     1a8:	bl	0 <strncasecmp>
     1ac:	cmp	r0, #0
     1b0:	bne	1bc <coda_month_to_integer+0x1bc>
     1b4:	mov	r0, #12
     1b8:	b	1d0 <coda_month_to_integer+0x1d0>
     1bc:	mvn	r0, #99	; 0x63
     1c0:	ldr	r1, [pc, #20]	; 1dc <coda_month_to_integer+0x1dc>
     1c4:	add	r2, sp, #8
     1c8:	bl	0 <coda_set_error>
     1cc:	mvn	r0, #0
     1d0:	ldr	lr, [sp, #4]
     1d4:	add	sp, sp, #16
     1d8:	bx	lr
     1dc:	.word	0x000004cc
     1e0:	.word	0x000007b9
     1e4:	.word	0x00000097
     1e8:	.word	0x00000330
     1ec:	.word	0x00000334
     1f0:	.word	0x0000059b
     1f4:	.word	0x00000780
     1f8:	.word	0x00000137
     1fc:	.word	0x0000021c
     200:	.word	0x000001f6
     204:	.word	0x0000071f
     208:	.word	0x000006c2
     20c:	.word	0x00000453

00000210 <parse_integer>:
     210:	mov	ip, sp
     214:	sub	sp, sp, #8
     218:	str	ip, [sp]
     21c:	str	lr, [sp, #4]
     220:	cmp	r2, #0
     224:	beq	25c <parse_integer+0x4c>
     228:	cmp	r1, #1
     22c:	ble	244 <parse_integer+0x34>
     230:	ldrb	r2, [r0]
     234:	cmp	r2, #32
     238:	moveq	r2, #1
     23c:	movne	r2, #0
     240:	b	248 <parse_integer+0x38>
     244:	mov	r2, #0
     248:	cmp	r2, #0
     24c:	beq	25c <parse_integer+0x4c>
     250:	add	r0, r0, #1
     254:	sub	r1, r1, #1
     258:	b	228 <parse_integer+0x18>
     25c:	mov	ip, #0
     260:	str	ip, [r3]
     264:	cmp	r1, #0
     268:	ble	2c8 <parse_integer+0xb8>
     26c:	ldrb	r2, [r0]
     270:	cmp	r2, #48	; 0x30
     274:	blt	28c <parse_integer+0x7c>
     278:	ldrb	r2, [r0]
     27c:	cmp	r2, #57	; 0x39
     280:	movgt	r2, #1
     284:	movle	r2, #0
     288:	b	290 <parse_integer+0x80>
     28c:	mov	r2, #1
     290:	cmp	r2, #0
     294:	beq	2a0 <parse_integer+0x90>
     298:	mvn	r0, #0
     29c:	b	2cc <parse_integer+0xbc>
     2a0:	ldr	ip, [r3]
     2a4:	lsl	r2, ip, #3
     2a8:	add	r2, r2, ip, lsl #1
     2ac:	ldrb	ip, [r0]
     2b0:	add	r2, r2, ip
     2b4:	sub	r2, r2, #48	; 0x30
     2b8:	str	r2, [r3]
     2bc:	add	r0, r0, #1
     2c0:	sub	r1, r1, #1
     2c4:	b	264 <parse_integer+0x54>
     2c8:	mov	r0, #0
     2cc:	ldr	lr, [sp, #4]
     2d0:	add	sp, sp, #8
     2d4:	bx	lr

000002d8 <y>:
     2d8:	mov	ip, sp
     2dc:	sub	sp, sp, #8
     2e0:	str	ip, [sp]
     2e4:	str	lr, [sp, #4]
     2e8:	cmp	r0, #0
     2ec:	movlt	r1, #1
     2f0:	movge	r1, #0
     2f4:	add	r0, r0, r1
     2f8:	ldr	lr, [sp, #4]
     2fc:	add	sp, sp, #8
     300:	bx	lr

00000304 <int_div>:
     304:	mov	ip, sp
     308:	sub	sp, sp, #24
     30c:	str	ip, [sp]
     310:	str	lr, [sp, #4]
     314:	str	r4, [sp, #8]
     318:	str	r5, [sp, #12]
     31c:	str	r6, [sp, #16]
     320:	mov	r5, r1
     324:	mov	r4, r0
     328:	mov	r0, r4
     32c:	mov	r1, r5
     330:	bl	0 <__aeabi_idiv>
     334:	mov	r6, r0
     338:	mov	r0, r4
     33c:	mov	r1, r5
     340:	bl	0 <__aeabi_idiv>
     344:	mul	r0, r0, r5
     348:	sub	r2, r4, r0
     34c:	cmp	r2, #0
     350:	movlt	r1, #1
     354:	movge	r1, #0
     358:	sub	r0, r6, r1
     35c:	ldr	r4, [sp, #8]
     360:	ldr	r5, [sp, #12]
     364:	ldr	r6, [sp, #16]
     368:	ldr	lr, [sp, #4]
     36c:	add	sp, sp, #24
     370:	bx	lr

00000374 <int_mod>:
     374:	mov	ip, sp
     378:	sub	sp, sp, #24
     37c:	str	ip, [sp]
     380:	str	lr, [sp, #4]
     384:	str	r4, [sp, #8]
     388:	str	r5, [sp, #12]
     38c:	str	r6, [sp, #16]
     390:	mov	r4, r1
     394:	mov	r5, r0
     398:	mov	r0, r5
     39c:	mov	r1, r4
     3a0:	bl	0 <__aeabi_idiv>
     3a4:	mul	r1, r0, r4
     3a8:	sub	r3, r5, r1
     3ac:	cmp	r3, #0
     3b0:	movlt	r6, #1
     3b4:	movge	r6, #0
     3b8:	mov	r0, r5
     3bc:	mov	r1, r4
     3c0:	bl	0 <__aeabi_idiv>
     3c4:	mul	r0, r0, r4
     3c8:	sub	ip, r5, r0
     3cc:	mla	r0, r4, r6, ip
     3d0:	ldr	r4, [sp, #8]
     3d4:	ldr	r5, [sp, #12]
     3d8:	ldr	r6, [sp, #16]
     3dc:	ldr	lr, [sp, #4]
     3e0:	add	sp, sp, #24
     3e4:	bx	lr

000003e8 <dmy_to_mjd2000_julian>:
     3e8:	mov	ip, sp
     3ec:	sub	sp, sp, #96	; 0x60
     3f0:	str	ip, [sp, #4]
     3f4:	str	lr, [sp, #8]
     3f8:	str	r4, [sp, #16]
     3fc:	str	r5, [sp, #20]
     400:	str	r6, [sp, #24]
     404:	str	r7, [sp, #28]
     408:	str	r8, [sp, #32]
     40c:	str	r9, [sp, #36]	; 0x24
     410:	mov	r6, r3
     414:	mov	r4, r2
     418:	mov	r8, r1
     41c:	mov	r7, r0
     420:	mov	r2, #0
     424:	str	r2, [sp, #40]	; 0x28
     428:	mov	ip, #31
     42c:	str	ip, [sp, #44]	; 0x2c
     430:	mov	r0, #59	; 0x3b
     434:	str	r0, [sp, #48]	; 0x30
     438:	mov	r0, #90	; 0x5a
     43c:	str	r0, [sp, #52]	; 0x34
     440:	mov	r3, #120	; 0x78
     444:	str	r3, [sp, #56]	; 0x38
     448:	mov	r3, #151	; 0x97
     44c:	str	r3, [sp, #60]	; 0x3c
     450:	mov	r2, #181	; 0xb5
     454:	str	r2, [sp, #64]	; 0x40
     458:	mov	r3, #212	; 0xd4
     45c:	str	r3, [sp, #68]	; 0x44
     460:	mov	r3, #243	; 0xf3
     464:	str	r3, [sp, #72]	; 0x48
     468:	movw	r2, #273	; 0x111
     46c:	str	r2, [sp, #76]	; 0x4c
     470:	mov	ip, #304	; 0x130
     474:	str	ip, [sp, #80]	; 0x50
     478:	movw	ip, #334	; 0x14e
     47c:	str	ip, [sp, #84]	; 0x54
     480:	movw	ip, #365	; 0x16d
     484:	str	ip, [sp, #88]	; 0x58
     488:	cmp	r4, #0
     48c:	beq	4a0 <dmy_to_mjd2000_julian+0xb8>
     490:	cmp	r8, #1
     494:	movlt	r3, #1
     498:	movge	r3, #0
     49c:	b	4a4 <dmy_to_mjd2000_julian+0xbc>
     4a0:	mov	r3, #1
     4a4:	cmp	r3, #0
     4a8:	bne	4bc <dmy_to_mjd2000_julian+0xd4>
     4ac:	cmp	r8, #12
     4b0:	movgt	r2, #1
     4b4:	movle	r2, #0
     4b8:	b	4c0 <dmy_to_mjd2000_julian+0xd8>
     4bc:	mov	r2, #1
     4c0:	cmp	r2, #0
     4c4:	bne	4d8 <dmy_to_mjd2000_julian+0xf0>
     4c8:	cmp	r7, #1
     4cc:	movlt	r0, #1
     4d0:	movge	r0, #0
     4d4:	b	4dc <dmy_to_mjd2000_julian+0xf4>
     4d8:	mov	r0, #1
     4dc:	cmp	r0, #0
     4e0:	bne	550 <dmy_to_mjd2000_julian+0x168>
     4e4:	cmp	r8, #2
     4e8:	bne	518 <dmy_to_mjd2000_julian+0x130>
     4ec:	mov	r0, r4
     4f0:	bl	2d8 <y>
     4f4:	asr	lr, r0, #31
     4f8:	add	lr, r0, lr, lsr #30
     4fc:	asr	r2, lr, #2
     500:	lsl	r1, r2, #2
     504:	sub	r1, r0, r1
     508:	cmp	r1, #0
     50c:	moveq	r2, #1
     510:	movne	r2, #0
     514:	b	51c <dmy_to_mjd2000_julian+0x134>
     518:	mov	r2, #0
     51c:	add	ip, sp, #40	; 0x28
     520:	ldr	r1, [ip, r8, lsl #2]
     524:	add	r0, sp, #40	; 0x28
     528:	lsl	ip, r8, #2
     52c:	add	r3, r0, ip
     530:	sub	lr, r3, #4096	; 0x1000
     534:	ldr	r0, [lr, #4092]	; 0xffc
     538:	sub	r1, r1, r0
     53c:	add	r1, r1, r2
     540:	cmp	r7, r1
     544:	movgt	r1, #1
     548:	movle	r1, #0
     54c:	b	554 <dmy_to_mjd2000_julian+0x16c>
     550:	mov	r1, #1
     554:	cmp	r1, #0
     558:	beq	57c <dmy_to_mjd2000_julian+0x194>
     55c:	mvn	r0, #103	; 0x67
     560:	ldr	r1, [pc, #204]	; 634 <dmy_to_mjd2000_julian+0x24c>
     564:	str	r4, [sp]
     568:	mov	r3, r8
     56c:	mov	r2, r7
     570:	bl	0 <coda_set_error>
     574:	mvn	r0, #0
     578:	b	610 <dmy_to_mjd2000_julian+0x228>
     57c:	mov	r0, r4
     580:	bl	2d8 <y>
     584:	mov	r9, r0
     588:	mov	r0, r4
     58c:	bl	2d8 <y>
     590:	mov	r1, #4
     594:	bl	304 <int_div>
     598:	mov	r5, r0
     59c:	cmp	r8, #2
     5a0:	bgt	5d0 <dmy_to_mjd2000_julian+0x1e8>
     5a4:	mov	r0, r4
     5a8:	bl	2d8 <y>
     5ac:	asr	lr, r0, #31
     5b0:	add	lr, r0, lr, lsr #30
     5b4:	asr	r3, lr, #2
     5b8:	lsl	r1, r3, #2
     5bc:	sub	r0, r0, r1
     5c0:	cmp	r0, #0
     5c4:	moveq	r4, #1
     5c8:	movne	r4, #0
     5cc:	b	5d4 <dmy_to_mjd2000_julian+0x1ec>
     5d0:	mov	r4, #0
     5d4:	movw	r2, #365	; 0x16d
     5d8:	mla	ip, r2, r9, r7
     5dc:	add	r0, ip, r5
     5e0:	add	r2, sp, #40	; 0x28
     5e4:	lsl	r1, r8, #2
     5e8:	add	r3, r2, r1
     5ec:	sub	lr, r3, #4096	; 0x1000
     5f0:	ldr	r2, [lr, #4092]	; 0xffc
     5f4:	add	r2, r0, r2
     5f8:	sub	r0, r2, r4
     5fc:	add	ip, r0, #226	; 0xe2
     600:	add	ip, ip, #16896	; 0x4200
     604:	add	ip, ip, #1703936	; 0x1a0000
     608:	str	ip, [r6]
     60c:	mov	r0, #0
     610:	ldr	r4, [sp, #16]
     614:	ldr	r5, [sp, #20]
     618:	ldr	r6, [sp, #24]
     61c:	ldr	r7, [sp, #28]
     620:	ldr	r8, [sp, #32]
     624:	ldr	r9, [sp, #36]	; 0x24
     628:	ldr	lr, [sp, #8]
     62c:	add	sp, sp, #96	; 0x60
     630:	bx	lr
     634:	.word	0x00000427

00000638 <dmy_to_mjd2000_gregorian>:
     638:	mov	ip, sp
     63c:	sub	sp, sp, #112	; 0x70
     640:	str	ip, [sp, #4]
     644:	str	lr, [sp, #8]
     648:	str	r4, [sp, #24]
     64c:	str	r5, [sp, #28]
     650:	str	r6, [sp, #32]
     654:	str	r7, [sp, #36]	; 0x24
     658:	str	r8, [sp, #40]	; 0x28
     65c:	str	r9, [sp, #44]	; 0x2c
     660:	str	sl, [sp, #48]	; 0x30
     664:	str	fp, [sp, #52]	; 0x34
     668:	str	r3, [sp, #16]
     66c:	mov	sl, r2
     670:	mov	r9, r1
     674:	mov	r8, r0
     678:	mov	r2, #0
     67c:	str	r2, [sp, #56]	; 0x38
     680:	mov	r2, #31
     684:	str	r2, [sp, #60]	; 0x3c
     688:	mov	r0, #59	; 0x3b
     68c:	str	r0, [sp, #64]	; 0x40
     690:	mov	r3, #90	; 0x5a
     694:	str	r3, [sp, #68]	; 0x44
     698:	mov	r0, #120	; 0x78
     69c:	str	r0, [sp, #72]	; 0x48
     6a0:	mov	r1, #151	; 0x97
     6a4:	str	r1, [sp, #76]	; 0x4c
     6a8:	mov	r0, #181	; 0xb5
     6ac:	str	r0, [sp, #80]	; 0x50
     6b0:	mov	ip, #212	; 0xd4
     6b4:	str	ip, [sp, #84]	; 0x54
     6b8:	mov	r3, #243	; 0xf3
     6bc:	str	r3, [sp, #88]	; 0x58
     6c0:	movw	r3, #273	; 0x111
     6c4:	str	r3, [sp, #92]	; 0x5c
     6c8:	mov	ip, #304	; 0x130
     6cc:	str	ip, [sp, #96]	; 0x60
     6d0:	movw	r3, #334	; 0x14e
     6d4:	str	r3, [sp, #100]	; 0x64
     6d8:	movw	r1, #365	; 0x16d
     6dc:	str	r1, [sp, #104]	; 0x68
     6e0:	cmp	sl, #0
     6e4:	beq	6f8 <dmy_to_mjd2000_gregorian+0xc0>
     6e8:	cmp	r9, #1
     6ec:	movlt	r1, #1
     6f0:	movge	r1, #0
     6f4:	b	6fc <dmy_to_mjd2000_gregorian+0xc4>
     6f8:	mov	r1, #1
     6fc:	cmp	r1, #0
     700:	bne	714 <dmy_to_mjd2000_gregorian+0xdc>
     704:	cmp	r9, #12
     708:	movgt	r0, #1
     70c:	movle	r0, #0
     710:	b	718 <dmy_to_mjd2000_gregorian+0xe0>
     714:	mov	r0, #1
     718:	cmp	r0, #0
     71c:	bne	730 <dmy_to_mjd2000_gregorian+0xf8>
     720:	cmp	r8, #1
     724:	movlt	r0, #1
     728:	movge	r0, #0
     72c:	b	734 <dmy_to_mjd2000_gregorian+0xfc>
     730:	mov	r0, #1
     734:	cmp	r0, #0
     738:	bne	82c <dmy_to_mjd2000_gregorian+0x1f4>
     73c:	cmp	r9, #2
     740:	bne	7f4 <dmy_to_mjd2000_gregorian+0x1bc>
     744:	mov	r0, sl
     748:	bl	2d8 <y>
     74c:	mov	r4, r0
     750:	mov	r0, sl
     754:	bl	2d8 <y>
     758:	mov	r5, r0
     75c:	mov	r0, sl
     760:	bl	2d8 <y>
     764:	asr	lr, r4, #31
     768:	add	lr, r4, lr, lsr #30
     76c:	asr	r1, lr, #2
     770:	lsl	r3, r1, #2
     774:	sub	ip, r4, r3
     778:	cmp	ip, #0
     77c:	moveq	r4, #1
     780:	movne	r4, #0
     784:	mov	r3, #100	; 0x64
     788:	lsr	r2, r5, #31
     78c:	movw	ip, #34079	; 0x851f
     790:	movt	ip, #20971	; 0x51eb
     794:	smull	lr, r1, r5, ip
     798:	add	r1, r2, r1, asr #5
     79c:	mul	r3, r3, r1
     7a0:	sub	r1, r5, r3
     7a4:	cmp	r1, #0
     7a8:	moveq	ip, #1
     7ac:	movne	ip, #0
     7b0:	eor	r3, r4, ip
     7b4:	mov	r4, #400	; 0x190
     7b8:	lsr	ip, r0, #31
     7bc:	movw	r2, #34079	; 0x851f
     7c0:	movt	r2, #20971	; 0x51eb
     7c4:	smull	lr, r1, r0, r2
     7c8:	add	r1, ip, r1, asr #7
     7cc:	mul	r1, r4, r1
     7d0:	sub	ip, r0, r1
     7d4:	cmp	ip, #0
     7d8:	moveq	r2, #1
     7dc:	movne	r2, #0
     7e0:	eor	r0, r3, r2
     7e4:	cmp	r0, #0
     7e8:	movne	r0, #1
     7ec:	moveq	r0, #0
     7f0:	b	7f8 <dmy_to_mjd2000_gregorian+0x1c0>
     7f4:	mov	r0, #0
     7f8:	add	r2, sp, #56	; 0x38
     7fc:	ldr	r2, [r2, r9, lsl #2]
     800:	add	ip, sp, #56	; 0x38
     804:	lsl	r1, r9, #2
     808:	add	r1, ip, r1
     80c:	sub	lr, r1, #4096	; 0x1000
     810:	ldr	r3, [lr, #4092]	; 0xffc
     814:	sub	r1, r2, r3
     818:	add	r3, r1, r0
     81c:	cmp	r8, r3
     820:	movgt	r3, #1
     824:	movle	r3, #0
     828:	b	830 <dmy_to_mjd2000_gregorian+0x1f8>
     82c:	mov	r3, #1
     830:	cmp	r3, #0
     834:	beq	858 <dmy_to_mjd2000_gregorian+0x220>
     838:	mvn	r0, #103	; 0x67
     83c:	ldr	r1, [pc, #404]	; 9d8 <dmy_to_mjd2000_gregorian+0x3a0>
     840:	str	sl, [sp]
     844:	mov	r3, r9
     848:	mov	r2, r8
     84c:	bl	0 <coda_set_error>
     850:	mvn	r0, #0
     854:	b	9ac <dmy_to_mjd2000_gregorian+0x374>
     858:	mov	r0, sl
     85c:	bl	2d8 <y>
     860:	mov	r5, r0
     864:	mov	r0, sl
     868:	bl	2d8 <y>
     86c:	mov	r1, #4
     870:	bl	304 <int_div>
     874:	mov	r7, r0
     878:	mov	r0, sl
     87c:	bl	2d8 <y>
     880:	mov	r1, #100	; 0x64
     884:	bl	304 <int_div>
     888:	mov	r4, r0
     88c:	mov	r0, sl
     890:	bl	2d8 <y>
     894:	mov	r1, #400	; 0x190
     898:	bl	304 <int_div>
     89c:	mov	fp, r0
     8a0:	cmp	r9, #2
     8a4:	bgt	95c <dmy_to_mjd2000_gregorian+0x324>
     8a8:	mov	r0, sl
     8ac:	bl	2d8 <y>
     8b0:	mov	r6, r0
     8b4:	mov	r0, sl
     8b8:	bl	2d8 <y>
     8bc:	str	r0, [sp, #20]
     8c0:	mov	r0, sl
     8c4:	bl	2d8 <y>
     8c8:	asr	lr, r6, #31
     8cc:	add	lr, r6, lr, lsr #30
     8d0:	asr	r1, lr, #2
     8d4:	lsl	r2, r1, #2
     8d8:	sub	r1, r6, r2
     8dc:	cmp	r1, #0
     8e0:	moveq	r3, #1
     8e4:	movne	r3, #0
     8e8:	ldr	r1, [sp, #20]
     8ec:	mov	r2, #100	; 0x64
     8f0:	lsr	r6, r1, #31
     8f4:	movw	ip, #34079	; 0x851f
     8f8:	movt	ip, #20971	; 0x51eb
     8fc:	smull	lr, ip, r1, ip
     900:	add	ip, r6, ip, asr #5
     904:	mul	r2, r2, ip
     908:	sub	r2, r1, r2
     90c:	cmp	r2, #0
     910:	moveq	r1, #1
     914:	movne	r1, #0
     918:	sub	r3, r3, r1
     91c:	mov	r6, #400	; 0x190
     920:	lsr	r2, r0, #31
     924:	movw	ip, #34079	; 0x851f
     928:	movt	ip, #20971	; 0x51eb
     92c:	smull	lr, ip, r0, ip
     930:	add	r1, r2, ip, asr #7
     934:	mul	ip, r6, r1
     938:	sub	ip, r0, ip
     93c:	cmp	ip, #0
     940:	moveq	r2, #1
     944:	movne	r2, #0
     948:	add	r2, r3, r2
     94c:	cmp	r2, #0
     950:	movne	ip, #1
     954:	moveq	ip, #0
     958:	b	960 <dmy_to_mjd2000_gregorian+0x328>
     95c:	mov	ip, #0
     960:	movw	r6, #365	; 0x16d
     964:	add	r3, sp, #56	; 0x38
     968:	lsl	r0, r9, #2
     96c:	add	r1, r3, r0
     970:	sub	lr, r1, #4096	; 0x1000
     974:	ldr	r2, [lr, #4092]	; 0xffc
     978:	add	r0, r8, r2
     97c:	mla	r0, r6, r5, r0
     980:	add	r1, r0, r7
     984:	sub	r0, r1, r4
     988:	add	r2, r0, fp
     98c:	rsb	r3, ip, #0
     990:	add	ip, r2, r3
     994:	sub	ip, ip, #223	; 0xdf
     998:	sub	ip, ip, #55040	; 0xd700
     99c:	sub	ip, ip, #524288	; 0x80000
     9a0:	ldr	r0, [sp, #16]
     9a4:	str	ip, [r0]
     9a8:	mov	r0, #0
     9ac:	ldr	r4, [sp, #24]
     9b0:	ldr	r5, [sp, #28]
     9b4:	ldr	r6, [sp, #32]
     9b8:	ldr	r7, [sp, #36]	; 0x24
     9bc:	ldr	r8, [sp, #40]	; 0x28
     9c0:	ldr	r9, [sp, #44]	; 0x2c
     9c4:	ldr	sl, [sp, #48]	; 0x30
     9c8:	ldr	fp, [sp, #52]	; 0x34
     9cc:	ldr	lr, [sp, #8]
     9d0:	add	sp, sp, #112	; 0x70
     9d4:	bx	lr
     9d8:	.word	0x00000427

000009dc <dmy_to_mjd2000>:
     9dc:	mov	ip, sp
     9e0:	sub	sp, sp, #56	; 0x38
     9e4:	str	ip, [sp, #4]
     9e8:	str	lr, [sp, #8]
     9ec:	str	r4, [sp, #16]
     9f0:	str	r5, [sp, #20]
     9f4:	str	r6, [sp, #24]
     9f8:	str	r7, [sp, #28]
     9fc:	str	r8, [sp, #32]
     a00:	str	r9, [sp, #36]	; 0x24
     a04:	str	sl, [sp, #40]	; 0x28
     a08:	mov	sl, r3
     a0c:	mov	r4, r2
     a10:	mov	r9, r1
     a14:	mov	r5, r0
     a18:	mov	r8, #2
     a1c:	mov	r7, #9
     a20:	movw	r6, #1752	; 0x6d8
     a24:	add	r3, sp, #52	; 0x34
     a28:	mov	r2, r4
     a2c:	mov	r1, r9
     a30:	mov	r0, r5
     a34:	bl	3e8 <dmy_to_mjd2000_julian>
     a38:	cmp	r0, #0
     a3c:	bne	a64 <dmy_to_mjd2000+0x88>
     a40:	add	r3, sp, #48	; 0x30
     a44:	mov	r2, r6
     a48:	mov	r1, r7
     a4c:	mov	r0, r8
     a50:	bl	3e8 <dmy_to_mjd2000_julian>
     a54:	cmp	r0, #0
     a58:	movne	r2, #1
     a5c:	moveq	r2, #0
     a60:	b	a68 <dmy_to_mjd2000+0x8c>
     a64:	mov	r2, #1
     a68:	cmp	r2, #0
     a6c:	beq	a78 <dmy_to_mjd2000+0x9c>
     a70:	mvn	r0, #0
     a74:	b	b24 <dmy_to_mjd2000+0x148>
     a78:	ldr	ip, [sp, #52]	; 0x34
     a7c:	ldr	r1, [sp, #48]	; 0x30
     a80:	cmp	ip, r1
     a84:	ble	b0c <dmy_to_mjd2000+0x130>
     a88:	add	r3, sp, #52	; 0x34
     a8c:	mov	r2, r4
     a90:	mov	r1, r9
     a94:	mov	r0, r5
     a98:	bl	638 <dmy_to_mjd2000_gregorian>
     a9c:	cmp	r0, #0
     aa0:	beq	aac <dmy_to_mjd2000+0xd0>
     aa4:	mvn	r0, #0
     aa8:	b	b24 <dmy_to_mjd2000+0x148>
     aac:	ldr	r1, [sp, #52]	; 0x34
     ab0:	sub	ip, r1, #150	; 0x96
     ab4:	sub	ip, ip, #19712	; 0x4d00
     ab8:	sub	ip, ip, #131072	; 0x20000
     abc:	ldr	r3, [sp, #48]	; 0x30
     ac0:	sub	r2, r3, #89	; 0x59
     ac4:	sub	r2, r2, #92160	; 0x16800
     ac8:	sub	r2, r2, #2359296	; 0x240000
     acc:	cmp	ip, r2
     ad0:	bgt	af4 <dmy_to_mjd2000+0x118>
     ad4:	mvn	r0, #103	; 0x67
     ad8:	ldr	r1, [pc, #108]	; b4c <dmy_to_mjd2000+0x170>
     adc:	str	r4, [sp]
     ae0:	mov	r3, r9
     ae4:	mov	r2, r5
     ae8:	bl	0 <coda_set_error>
     aec:	mvn	r0, #0
     af0:	b	b24 <dmy_to_mjd2000+0x148>
     af4:	ldr	r2, [sp, #52]	; 0x34
     af8:	sub	r0, r2, #150	; 0x96
     afc:	sub	r0, r0, #19712	; 0x4d00
     b00:	sub	r0, r0, #131072	; 0x20000
     b04:	str	r0, [sl]
     b08:	b	b20 <dmy_to_mjd2000+0x144>
     b0c:	ldr	r3, [sp, #52]	; 0x34
     b10:	sub	r1, r3, #89	; 0x59
     b14:	sub	r1, r1, #92160	; 0x16800
     b18:	sub	r1, r1, #2359296	; 0x240000
     b1c:	str	r1, [sl]
     b20:	mov	r0, #0
     b24:	ldr	r4, [sp, #16]
     b28:	ldr	r5, [sp, #20]
     b2c:	ldr	r6, [sp, #24]
     b30:	ldr	r7, [sp, #28]
     b34:	ldr	r8, [sp, #32]
     b38:	ldr	r9, [sp, #36]	; 0x24
     b3c:	ldr	sl, [sp, #40]	; 0x28
     b40:	ldr	lr, [sp, #8]
     b44:	add	sp, sp, #56	; 0x38
     b48:	bx	lr
     b4c:	.word	0x00000427

00000b50 <getday_leapyear>:
     b50:	mov	ip, sp
     b54:	sub	sp, sp, #80	; 0x50
     b58:	str	ip, [sp]
     b5c:	str	lr, [sp, #4]
     b60:	str	r4, [sp, #8]
     b64:	str	r5, [sp, #12]
     b68:	str	r6, [sp, #16]
     b6c:	mov	r4, r2
     b70:	mov	r5, r1
     b74:	mov	r6, r0
     b78:	mov	r3, #0
     b7c:	str	r3, [sp, #24]
     b80:	mov	r2, #31
     b84:	str	r2, [sp, #28]
     b88:	mov	r0, #60	; 0x3c
     b8c:	str	r0, [sp, #32]
     b90:	mov	r3, #91	; 0x5b
     b94:	str	r3, [sp, #36]	; 0x24
     b98:	mov	ip, #121	; 0x79
     b9c:	str	ip, [sp, #40]	; 0x28
     ba0:	mov	r2, #152	; 0x98
     ba4:	str	r2, [sp, #44]	; 0x2c
     ba8:	mov	r0, #182	; 0xb6
     bac:	str	r0, [sp, #48]	; 0x30
     bb0:	mov	r2, #213	; 0xd5
     bb4:	str	r2, [sp, #52]	; 0x34
     bb8:	mov	r3, #244	; 0xf4
     bbc:	str	r3, [sp, #56]	; 0x38
     bc0:	movw	r3, #274	; 0x112
     bc4:	str	r3, [sp, #60]	; 0x3c
     bc8:	movw	r1, #305	; 0x131
     bcc:	str	r1, [sp, #64]	; 0x40
     bd0:	movw	ip, #335	; 0x14f
     bd4:	str	ip, [sp, #68]	; 0x44
     bd8:	movw	ip, #366	; 0x16e
     bdc:	str	ip, [sp, #72]	; 0x48
     be0:	cmp	r6, #0
     be4:	bge	bfc <getday_leapyear+0xac>
     be8:	ldr	r0, [pc, #152]	; c88 <getday_leapyear+0x138>
     bec:	ldr	r1, [pc, #144]	; c84 <getday_leapyear+0x134>
     bf0:	movw	r2, #358	; 0x166
     bf4:	ldr	r3, [pc, #132]	; c80 <getday_leapyear+0x130>
     bf8:	bl	0 <__assert_fail>
     bfc:	movw	lr, #366	; 0x16e
     c00:	cmp	r6, lr
     c04:	blt	c1c <getday_leapyear+0xcc>
     c08:	ldr	r0, [pc, #108]	; c7c <getday_leapyear+0x12c>
     c0c:	ldr	r1, [pc, #112]	; c84 <getday_leapyear+0x134>
     c10:	movw	r2, #359	; 0x167
     c14:	ldr	r3, [pc, #100]	; c80 <getday_leapyear+0x130>
     c18:	bl	0 <__assert_fail>
     c1c:	mov	r3, #1
     c20:	cmp	r3, #12
     c24:	bgt	c40 <getday_leapyear+0xf0>
     c28:	add	ip, sp, #24
     c2c:	ldr	r0, [ip, r3, lsl #2]
     c30:	cmp	r6, r0
     c34:	blt	c40 <getday_leapyear+0xf0>
     c38:	add	r3, r3, #1
     c3c:	b	c20 <getday_leapyear+0xd0>
     c40:	str	r3, [r4]
     c44:	add	r1, sp, #24
     c48:	lsl	ip, r3, #2
     c4c:	add	r2, r1, ip
     c50:	sub	lr, r2, #4096	; 0x1000
     c54:	ldr	r1, [lr, #4092]	; 0xffc
     c58:	sub	r1, r6, r1
     c5c:	add	r0, r1, #1
     c60:	str	r0, [r5]
     c64:	ldr	r4, [sp, #8]
     c68:	ldr	r5, [sp, #12]
     c6c:	ldr	r6, [sp, #16]
     c70:	ldr	lr, [sp, #4]
     c74:	add	sp, sp, #80	; 0x50
     c78:	bx	lr
     c7c:	.word	0x00000363
     c80:	.word	0x000008bb
     c84:	.word	0x000006c6
     c88:	.word	0x000002b7

00000c8c <getday_nonleapyear>:
     c8c:	mov	ip, sp
     c90:	sub	sp, sp, #80	; 0x50
     c94:	str	ip, [sp]
     c98:	str	lr, [sp, #4]
     c9c:	str	r4, [sp, #8]
     ca0:	str	r5, [sp, #12]
     ca4:	str	r6, [sp, #16]
     ca8:	mov	r4, r2
     cac:	mov	r5, r1
     cb0:	mov	r6, r0
     cb4:	mov	r3, #0
     cb8:	str	r3, [sp, #24]
     cbc:	mov	r2, #31
     cc0:	str	r2, [sp, #28]
     cc4:	mov	r0, #59	; 0x3b
     cc8:	str	r0, [sp, #32]
     ccc:	mov	r3, #90	; 0x5a
     cd0:	str	r3, [sp, #36]	; 0x24
     cd4:	mov	ip, #120	; 0x78
     cd8:	str	ip, [sp, #40]	; 0x28
     cdc:	mov	r2, #151	; 0x97
     ce0:	str	r2, [sp, #44]	; 0x2c
     ce4:	mov	r0, #181	; 0xb5
     ce8:	str	r0, [sp, #48]	; 0x30
     cec:	mov	r2, #212	; 0xd4
     cf0:	str	r2, [sp, #52]	; 0x34
     cf4:	mov	r3, #243	; 0xf3
     cf8:	str	r3, [sp, #56]	; 0x38
     cfc:	movw	r3, #273	; 0x111
     d00:	str	r3, [sp, #60]	; 0x3c
     d04:	mov	r1, #304	; 0x130
     d08:	str	r1, [sp, #64]	; 0x40
     d0c:	movw	ip, #334	; 0x14e
     d10:	str	ip, [sp, #68]	; 0x44
     d14:	movw	ip, #365	; 0x16d
     d18:	str	ip, [sp, #72]	; 0x48
     d1c:	cmp	r6, #0
     d20:	bge	d38 <getday_nonleapyear+0xac>
     d24:	ldr	r0, [pc, #148]	; dc0 <getday_nonleapyear+0x134>
     d28:	ldr	r1, [pc, #140]	; dbc <getday_nonleapyear+0x130>
     d2c:	movw	r2, #377	; 0x179
     d30:	ldr	r3, [pc, #140]	; dc4 <getday_nonleapyear+0x138>
     d34:	bl	0 <__assert_fail>
     d38:	movw	lr, #365	; 0x16d
     d3c:	cmp	r6, lr
     d40:	blt	d58 <getday_nonleapyear+0xcc>
     d44:	ldr	r0, [pc, #108]	; db8 <getday_nonleapyear+0x12c>
     d48:	ldr	r1, [pc, #108]	; dbc <getday_nonleapyear+0x130>
     d4c:	movw	r2, #378	; 0x17a
     d50:	ldr	r3, [pc, #108]	; dc4 <getday_nonleapyear+0x138>
     d54:	bl	0 <__assert_fail>
     d58:	mov	r3, #1
     d5c:	cmp	r3, #12
     d60:	bgt	d7c <getday_nonleapyear+0xf0>
     d64:	add	ip, sp, #24
     d68:	ldr	r0, [ip, r3, lsl #2]
     d6c:	cmp	r6, r0
     d70:	blt	d7c <getday_nonleapyear+0xf0>
     d74:	add	r3, r3, #1
     d78:	b	d5c <getday_nonleapyear+0xd0>
     d7c:	str	r3, [r4]
     d80:	add	r1, sp, #24
     d84:	lsl	ip, r3, #2
     d88:	add	r2, r1, ip
     d8c:	sub	lr, r2, #4096	; 0x1000
     d90:	ldr	r1, [lr, #4092]	; 0xffc
     d94:	sub	r1, r6, r1
     d98:	add	r0, r1, #1
     d9c:	str	r0, [r5]
     da0:	ldr	r4, [sp, #8]
     da4:	ldr	r5, [sp, #12]
     da8:	ldr	r6, [sp, #16]
     dac:	ldr	lr, [sp, #4]
     db0:	add	sp, sp, #80	; 0x50
     db4:	bx	lr
     db8:	.word	0x0000036f
     dbc:	.word	0x000006c6
     dc0:	.word	0x000002b7
     dc4:	.word	0x000008cb

00000dc8 <mjd2000_to_dmy_julian>:
     dc8:	mov	ip, sp
     dcc:	sub	sp, sp, #24
     dd0:	str	ip, [sp]
     dd4:	str	lr, [sp, #4]
     dd8:	str	r4, [sp, #8]
     ddc:	str	r5, [sp, #12]
     de0:	str	r6, [sp, #16]
     de4:	str	r7, [sp, #20]
     de8:	mov	r7, r3
     dec:	mov	r4, r2
     df0:	mov	r5, r1
     df4:	mov	r3, #2000	; 0x7d0
     df8:	str	r3, [r7]
     dfc:	sub	r6, r0, #13
     e00:	movw	r1, #1461	; 0x5b5
     e04:	mov	r0, r6
     e08:	bl	304 <int_div>
     e0c:	ldr	ip, [r7]
     e10:	add	ip, ip, r0, lsl #2
     e14:	str	ip, [r7]
     e18:	movw	r1, #1461	; 0x5b5
     e1c:	mov	r0, r6
     e20:	bl	374 <int_mod>
     e24:	movw	lr, #366	; 0x16e
     e28:	cmp	r0, lr
     e2c:	blt	e78 <mjd2000_to_dmy_julian+0xb0>
     e30:	ldr	r1, [r7]
     e34:	add	r1, r1, #1
     e38:	str	r1, [r7]
     e3c:	sub	r6, r0, #110	; 0x6e
     e40:	sub	r6, r6, #256	; 0x100
     e44:	movw	r1, #365	; 0x16d
     e48:	mov	r0, r6
     e4c:	bl	304 <int_div>
     e50:	ldr	r1, [r7]
     e54:	add	r1, r1, r0
     e58:	str	r1, [r7]
     e5c:	movw	r1, #365	; 0x16d
     e60:	mov	r0, r6
     e64:	bl	374 <int_mod>
     e68:	mov	r2, r4
     e6c:	mov	r1, r5
     e70:	bl	c8c <getday_nonleapyear>
     e74:	b	e84 <mjd2000_to_dmy_julian+0xbc>
     e78:	mov	r2, r4
     e7c:	mov	r1, r5
     e80:	bl	b50 <getday_leapyear>
     e84:	ldr	r1, [r7]
     e88:	cmp	r1, #0
     e8c:	bgt	e9c <mjd2000_to_dmy_julian+0xd4>
     e90:	ldr	r2, [r7]
     e94:	sub	ip, r2, #1
     e98:	str	ip, [r7]
     e9c:	ldr	r4, [sp, #8]
     ea0:	ldr	r5, [sp, #12]
     ea4:	ldr	r6, [sp, #16]
     ea8:	ldr	r7, [sp, #20]
     eac:	ldr	lr, [sp, #4]
     eb0:	add	sp, sp, #24
     eb4:	bx	lr

00000eb8 <mjd2000_to_dmy_gregorian>:
     eb8:	mov	ip, sp
     ebc:	sub	sp, sp, #24
     ec0:	str	ip, [sp]
     ec4:	str	lr, [sp, #4]
     ec8:	str	r4, [sp, #8]
     ecc:	str	r5, [sp, #12]
     ed0:	str	r6, [sp, #16]
     ed4:	str	r7, [sp, #20]
     ed8:	mov	r7, r3
     edc:	mov	r5, r2
     ee0:	mov	r6, r1
     ee4:	mov	r1, #2000	; 0x7d0
     ee8:	str	r1, [r7]
     eec:	mov	r4, r0
     ef0:	movw	r1, #15025	; 0x3ab1
     ef4:	movt	r1, #2
     ef8:	mov	r0, r4
     efc:	bl	304 <int_div>
     f00:	mov	r3, #400	; 0x190
     f04:	ldr	ip, [r7]
     f08:	mla	r2, r3, r0, ip
     f0c:	str	r2, [r7]
     f10:	movw	r1, #15025	; 0x3ab1
     f14:	movt	r1, #2
     f18:	mov	r0, r4
     f1c:	bl	374 <int_mod>
     f20:	mov	r4, r0
     f24:	movw	lr, #36525	; 0x8ead
     f28:	cmp	r4, lr
     f2c:	blt	104c <mjd2000_to_dmy_gregorian+0x194>
     f30:	sub	r4, r4, #173	; 0xad
     f34:	sub	r4, r4, #36352	; 0x8e00
     f38:	ldr	r0, [r7]
     f3c:	add	r2, r0, #100	; 0x64
     f40:	str	r2, [r7]
     f44:	movw	r1, #36524	; 0x8eac
     f48:	mov	r0, r4
     f4c:	bl	304 <int_div>
     f50:	mov	r3, #100	; 0x64
     f54:	ldr	r1, [r7]
     f58:	mla	ip, r3, r0, r1
     f5c:	str	ip, [r7]
     f60:	movw	r1, #36524	; 0x8eac
     f64:	mov	r0, r4
     f68:	bl	374 <int_mod>
     f6c:	mov	r4, r0
     f70:	movw	lr, #1460	; 0x5b4
     f74:	cmp	r4, lr
     f78:	blt	1018 <mjd2000_to_dmy_gregorian+0x160>
     f7c:	sub	r4, r4, #436	; 0x1b4
     f80:	sub	r4, r4, #1024	; 0x400
     f84:	ldr	r2, [r7]
     f88:	add	r0, r2, #4
     f8c:	str	r0, [r7]
     f90:	movw	r1, #1461	; 0x5b5
     f94:	mov	r0, r4
     f98:	bl	304 <int_div>
     f9c:	ldr	r2, [r7]
     fa0:	add	r3, r2, r0, lsl #2
     fa4:	str	r3, [r7]
     fa8:	movw	r1, #1461	; 0x5b5
     fac:	mov	r0, r4
     fb0:	bl	374 <int_mod>
     fb4:	movw	lr, #366	; 0x16e
     fb8:	cmp	r0, lr
     fbc:	blt	1008 <mjd2000_to_dmy_gregorian+0x150>
     fc0:	ldr	ip, [r7]
     fc4:	add	r3, ip, #1
     fc8:	str	r3, [r7]
     fcc:	sub	r4, r0, #110	; 0x6e
     fd0:	sub	r4, r4, #256	; 0x100
     fd4:	movw	r1, #365	; 0x16d
     fd8:	mov	r0, r4
     fdc:	bl	304 <int_div>
     fe0:	ldr	r1, [r7]
     fe4:	add	r3, r1, r0
     fe8:	str	r3, [r7]
     fec:	movw	r1, #365	; 0x16d
     ff0:	mov	r0, r4
     ff4:	bl	374 <int_mod>
     ff8:	mov	r2, r5
     ffc:	mov	r1, r6
    1000:	bl	c8c <getday_nonleapyear>
    1004:	b	10d0 <mjd2000_to_dmy_gregorian+0x218>
    1008:	mov	r2, r5
    100c:	mov	r1, r6
    1010:	bl	b50 <getday_leapyear>
    1014:	b	10d0 <mjd2000_to_dmy_gregorian+0x218>
    1018:	movw	r1, #365	; 0x16d
    101c:	mov	r0, r4
    1020:	bl	304 <int_div>
    1024:	ldr	r2, [r7]
    1028:	add	r1, r2, r0
    102c:	str	r1, [r7]
    1030:	movw	r1, #365	; 0x16d
    1034:	mov	r0, r4
    1038:	bl	374 <int_mod>
    103c:	mov	r2, r5
    1040:	mov	r1, r6
    1044:	bl	c8c <getday_nonleapyear>
    1048:	b	10d0 <mjd2000_to_dmy_gregorian+0x218>
    104c:	movw	r1, #1461	; 0x5b5
    1050:	mov	r0, r4
    1054:	bl	304 <int_div>
    1058:	ldr	r1, [r7]
    105c:	add	r0, r1, r0, lsl #2
    1060:	str	r0, [r7]
    1064:	movw	r1, #1461	; 0x5b5
    1068:	mov	r0, r4
    106c:	bl	374 <int_mod>
    1070:	movw	lr, #366	; 0x16e
    1074:	cmp	r0, lr
    1078:	blt	10c4 <mjd2000_to_dmy_gregorian+0x20c>
    107c:	ldr	r1, [r7]
    1080:	add	r1, r1, #1
    1084:	str	r1, [r7]
    1088:	sub	r4, r0, #110	; 0x6e
    108c:	sub	r4, r4, #256	; 0x100
    1090:	movw	r1, #365	; 0x16d
    1094:	mov	r0, r4
    1098:	bl	304 <int_div>
    109c:	ldr	r2, [r7]
    10a0:	add	r1, r2, r0
    10a4:	str	r1, [r7]
    10a8:	movw	r1, #365	; 0x16d
    10ac:	mov	r0, r4
    10b0:	bl	374 <int_mod>
    10b4:	mov	r2, r5
    10b8:	mov	r1, r6
    10bc:	bl	c8c <getday_nonleapyear>
    10c0:	b	10d0 <mjd2000_to_dmy_gregorian+0x218>
    10c4:	mov	r2, r5
    10c8:	mov	r1, r6
    10cc:	bl	b50 <getday_leapyear>
    10d0:	ldr	r1, [r7]
    10d4:	cmp	r1, #0
    10d8:	bgt	10e8 <mjd2000_to_dmy_gregorian+0x230>
    10dc:	ldr	r1, [r7]
    10e0:	sub	ip, r1, #1
    10e4:	str	ip, [r7]
    10e8:	ldr	r4, [sp, #8]
    10ec:	ldr	r5, [sp, #12]
    10f0:	ldr	r6, [sp, #16]
    10f4:	ldr	r7, [sp, #20]
    10f8:	ldr	lr, [sp, #4]
    10fc:	add	sp, sp, #24
    1100:	bx	lr

00001104 <mjd2000_to_dmy>:
    1104:	mov	ip, sp
    1108:	sub	sp, sp, #32
    110c:	str	ip, [sp]
    1110:	str	lr, [sp, #4]
    1114:	str	r4, [sp, #8]
    1118:	str	r5, [sp, #12]
    111c:	str	r6, [sp, #16]
    1120:	str	r7, [sp, #20]
    1124:	mov	r4, r3
    1128:	mov	r5, r2
    112c:	mov	r6, r1
    1130:	mov	r7, r0
    1134:	mov	r0, #2
    1138:	mov	r1, #9
    113c:	movw	r2, #1752	; 0x6d8
    1140:	add	r3, sp, #24
    1144:	bl	9dc <dmy_to_mjd2000>
    1148:	cmp	r0, #0
    114c:	beq	1158 <mjd2000_to_dmy+0x54>
    1150:	mvn	r0, #0
    1154:	b	1194 <mjd2000_to_dmy+0x90>
    1158:	ldr	r0, [sp, #24]
    115c:	cmp	r7, r0
    1160:	ble	117c <mjd2000_to_dmy+0x78>
    1164:	mov	r3, r4
    1168:	mov	r2, r5
    116c:	mov	r1, r6
    1170:	mov	r0, r7
    1174:	bl	eb8 <mjd2000_to_dmy_gregorian>
    1178:	b	1190 <mjd2000_to_dmy+0x8c>
    117c:	mov	r3, r4
    1180:	mov	r2, r5
    1184:	mov	r1, r6
    1188:	mov	r0, r7
    118c:	bl	dc8 <mjd2000_to_dmy_julian>
    1190:	mov	r0, #0
    1194:	ldr	r4, [sp, #8]
    1198:	ldr	r5, [sp, #12]
    119c:	ldr	r6, [sp, #16]
    11a0:	ldr	r7, [sp, #20]
    11a4:	ldr	lr, [sp, #4]
    11a8:	add	sp, sp, #32
    11ac:	bx	lr

000011b0 <hms_to_daytime>:
    11b0:	mov	ip, sp
    11b4:	sub	sp, sp, #24
    11b8:	str	ip, [sp, #8]
    11bc:	str	lr, [sp, #12]
    11c0:	str	r4, [sp, #16]
    11c4:	ldr	r4, [ip]
    11c8:	cmp	r0, #0
    11cc:	blt	11e0 <hms_to_daytime+0x30>
    11d0:	cmp	r0, #23
    11d4:	movgt	ip, #1
    11d8:	movle	ip, #0
    11dc:	b	11e4 <hms_to_daytime+0x34>
    11e0:	mov	ip, #1
    11e4:	cmp	ip, #0
    11e8:	bne	11fc <hms_to_daytime+0x4c>
    11ec:	cmp	r1, #0
    11f0:	movlt	ip, #1
    11f4:	movge	ip, #0
    11f8:	b	1200 <hms_to_daytime+0x50>
    11fc:	mov	ip, #1
    1200:	cmp	ip, #0
    1204:	bne	1218 <hms_to_daytime+0x68>
    1208:	cmp	r1, #59	; 0x3b
    120c:	movgt	ip, #1
    1210:	movle	ip, #0
    1214:	b	121c <hms_to_daytime+0x6c>
    1218:	mov	ip, #1
    121c:	cmp	ip, #0
    1220:	bne	1234 <hms_to_daytime+0x84>
    1224:	cmp	r2, #0
    1228:	movlt	ip, #1
    122c:	movge	ip, #0
    1230:	b	1238 <hms_to_daytime+0x88>
    1234:	mov	ip, #1
    1238:	cmp	ip, #0
    123c:	bne	1250 <hms_to_daytime+0xa0>
    1240:	cmp	r2, #60	; 0x3c
    1244:	movgt	ip, #1
    1248:	movle	ip, #0
    124c:	b	1254 <hms_to_daytime+0xa4>
    1250:	mov	ip, #1
    1254:	cmp	ip, #0
    1258:	bne	126c <hms_to_daytime+0xbc>
    125c:	cmp	r3, #0
    1260:	movlt	ip, #1
    1264:	movge	ip, #0
    1268:	b	1270 <hms_to_daytime+0xc0>
    126c:	mov	ip, #1
    1270:	cmp	ip, #0
    1274:	bne	1290 <hms_to_daytime+0xe0>
    1278:	movw	lr, #16959	; 0x423f
    127c:	movt	lr, #15
    1280:	cmp	r3, lr
    1284:	movgt	ip, #1
    1288:	movle	ip, #0
    128c:	b	1294 <hms_to_daytime+0xe4>
    1290:	mov	ip, #1
    1294:	cmp	ip, #0
    1298:	beq	12c8 <hms_to_daytime+0x118>
    129c:	mvn	r4, #103	; 0x67
    12a0:	ldr	ip, [pc, #132]	; 132c <hms_to_daytime+0x17c>
    12a4:	str	r3, [sp, #4]
    12a8:	str	r2, [sp]
    12ac:	mov	r3, r1
    12b0:	mov	r2, r0
    12b4:	mov	r1, ip
    12b8:	mov	r0, r4
    12bc:	bl	0 <coda_set_error>
    12c0:	mvn	r0, #0
    12c4:	b	131c <hms_to_daytime+0x16c>
    12c8:	vldr	d0, [pc, #112]	; 1340 <hms_to_daytime+0x190>
    12cc:	vmov	s6, r0
    12d0:	vcvt.f64.s32	d3, s6
    12d4:	vmul.f64	d1, d0, d3
    12d8:	vldr	d4, [pc, #80]	; 1330 <hms_to_daytime+0x180>
    12dc:	vmov	s4, r1
    12e0:	vcvt.f64.s32	d2, s4
    12e4:	vmul.f64	d0, d4, d2
    12e8:	vadd.f64	d0, d1, d0
    12ec:	vmov.f64	d4, #112	; 0x3f800000  1.0
    12f0:	vmov	s10, r2
    12f4:	vcvt.f64.s32	d5, s10
    12f8:	vmul.f64	d2, d4, d5
    12fc:	vadd.f64	d7, d0, d2
    1300:	vmov	s6, r3
    1304:	vcvt.f64.s32	d3, s6
    1308:	vldr	d0, [pc, #40]	; 1338 <hms_to_daytime+0x188>
    130c:	vdiv.f64	d6, d3, d0
    1310:	vadd.f64	d2, d7, d6
    1314:	vstr	d2, [r4]
    1318:	mov	r0, #0
    131c:	ldr	r4, [sp, #16]
    1320:	ldr	lr, [sp, #12]
    1324:	add	sp, sp, #24
    1328:	bx	lr
    132c:	.word	0x00000784
    1330:	.word	0x00000000
    1334:	.word	0x404e0000
    1338:	.word	0x00000000
    133c:	.word	0x412e8480
    1340:	.word	0x00000000
    1344:	.word	0x40ac2000

00001348 <coda_dayofyear_to_month_day>:
    1348:	mov	ip, sp
    134c:	sub	sp, sp, #32
    1350:	str	ip, [sp]
    1354:	str	lr, [sp, #4]
    1358:	str	r4, [sp, #8]
    135c:	str	r5, [sp, #12]
    1360:	str	r6, [sp, #16]
    1364:	mov	r5, r3
    1368:	mov	r6, r2
    136c:	mov	r4, r1
    1370:	str	r0, [sp, #24]
    1374:	cmp	r6, #0
    1378:	beq	138c <coda_dayofyear_to_month_day+0x44>
    137c:	cmp	r5, #0
    1380:	moveq	r1, #1
    1384:	movne	r1, #0
    1388:	b	1390 <coda_dayofyear_to_month_day+0x48>
    138c:	mov	r1, #1
    1390:	cmp	r1, #0
    1394:	beq	13b4 <coda_dayofyear_to_month_day+0x6c>
    1398:	mvn	r0, #99	; 0x63
    139c:	ldr	r1, [pc, #200]	; 146c <coda_dayofyear_to_month_day+0x124>
    13a0:	ldr	r2, [pc, #192]	; 1468 <coda_dayofyear_to_month_day+0x120>
    13a4:	movw	r3, #549	; 0x225
    13a8:	bl	0 <coda_set_error>
    13ac:	mvn	r0, #0
    13b0:	b	1450 <coda_dayofyear_to_month_day+0x108>
    13b4:	cmp	r4, #0
    13b8:	blt	13d0 <coda_dayofyear_to_month_day+0x88>
    13bc:	movw	lr, #366	; 0x16e
    13c0:	cmp	r4, lr
    13c4:	movgt	r3, #1
    13c8:	movle	r3, #0
    13cc:	b	13d4 <coda_dayofyear_to_month_day+0x8c>
    13d0:	mov	r3, #1
    13d4:	cmp	r3, #0
    13d8:	beq	13f4 <coda_dayofyear_to_month_day+0xac>
    13dc:	mvn	r0, #103	; 0x67
    13e0:	ldr	r1, [pc, #136]	; 1470 <coda_dayofyear_to_month_day+0x128>
    13e4:	mov	r2, r4
    13e8:	bl	0 <coda_set_error>
    13ec:	mvn	r0, #0
    13f0:	b	1450 <coda_dayofyear_to_month_day+0x108>
    13f4:	mov	r0, #1
    13f8:	mov	r1, #1
    13fc:	ldr	r2, [sp, #24]
    1400:	add	r3, sp, #28
    1404:	bl	9dc <dmy_to_mjd2000>
    1408:	cmp	r0, #0
    140c:	beq	1418 <coda_dayofyear_to_month_day+0xd0>
    1410:	mvn	r0, #0
    1414:	b	1450 <coda_dayofyear_to_month_day+0x108>
    1418:	ldr	r3, [sp, #28]
    141c:	add	r1, r3, r4
    1420:	sub	ip, r1, #1
    1424:	str	ip, [sp, #28]
    1428:	ldr	r0, [sp, #28]
    142c:	add	r3, sp, #24
    1430:	mov	r2, r6
    1434:	mov	r1, r5
    1438:	bl	1104 <mjd2000_to_dmy>
    143c:	cmp	r0, #0
    1440:	beq	144c <coda_dayofyear_to_month_day+0x104>
    1444:	mvn	r0, #0
    1448:	b	1450 <coda_dayofyear_to_month_day+0x108>
    144c:	mov	r0, #0
    1450:	ldr	r4, [sp, #8]
    1454:	ldr	r5, [sp, #12]
    1458:	ldr	r6, [sp, #16]
    145c:	ldr	lr, [sp, #4]
    1460:	add	sp, sp, #32
    1464:	bx	lr
    1468:	.word	0x000006c6
    146c:	.word	0x000005b6
    1470:	.word	0x000007ff

00001474 <seconds_to_hms>:
    1474:	mov	ip, sp
    1478:	sub	sp, sp, #16
    147c:	str	ip, [sp]
    1480:	str	lr, [sp, #4]
    1484:	str	r4, [sp, #8]
    1488:	mov	ip, r0
    148c:	cmp	ip, #0
    1490:	blt	14ac <seconds_to_hms+0x38>
    1494:	movw	lr, #20863	; 0x517f
    1498:	movt	lr, #1
    149c:	cmp	ip, lr
    14a0:	movgt	r0, #1
    14a4:	movle	r0, #0
    14a8:	b	14b0 <seconds_to_hms+0x3c>
    14ac:	mov	r0, #1
    14b0:	cmp	r0, #0
    14b4:	beq	14d0 <seconds_to_hms+0x5c>
    14b8:	mvn	r0, #103	; 0x67
    14bc:	ldr	r1, [pc, #164]	; 1568 <seconds_to_hms+0xf4>
    14c0:	mov	r2, ip
    14c4:	bl	0 <coda_set_error>
    14c8:	mvn	r0, #0
    14cc:	b	1558 <seconds_to_hms+0xe4>
    14d0:	lsr	r0, ip, #31
    14d4:	movw	r4, #46021	; 0xb3c5
    14d8:	movt	r4, #37282	; 0x91a2
    14dc:	smull	lr, r4, ip, r4
    14e0:	add	r4, r4, ip
    14e4:	add	r0, r0, r4, asr #11
    14e8:	str	r0, [r1]
    14ec:	mov	r1, #3600	; 0xe10
    14f0:	lsr	r4, ip, #31
    14f4:	movw	r0, #46021	; 0xb3c5
    14f8:	movt	r0, #37282	; 0x91a2
    14fc:	smull	lr, r0, ip, r0
    1500:	add	r0, r0, ip
    1504:	add	r0, r4, r0, asr #11
    1508:	mul	r1, r1, r0
    150c:	sub	r0, ip, r1
    1510:	lsr	r1, r0, #31
    1514:	movw	ip, #34953	; 0x8889
    1518:	movt	ip, #34952	; 0x8888
    151c:	smull	lr, ip, r0, ip
    1520:	add	ip, ip, r0
    1524:	add	r1, r1, ip, asr #5
    1528:	str	r1, [r2]
    152c:	mov	r2, #60	; 0x3c
    1530:	lsr	ip, r0, #31
    1534:	movw	r1, #34953	; 0x8889
    1538:	movt	r1, #34952	; 0x8888
    153c:	smull	lr, r1, r0, r1
    1540:	add	r1, r1, r0
    1544:	add	ip, ip, r1, asr #5
    1548:	mul	ip, r2, ip
    154c:	sub	r0, r0, ip
    1550:	str	r0, [r3]
    1554:	mov	r0, #0
    1558:	ldr	r4, [sp, #8]
    155c:	ldr	lr, [sp, #4]
    1560:	add	sp, sp, #16
    1564:	bx	lr
    1568:	.word	0x0000009d

0000156c <register_leap_second>:
    156c:	mov	ip, sp
    1570:	sub	sp, sp, #32
    1574:	str	ip, [sp, #4]
    1578:	str	lr, [sp, #8]
    157c:	str	r4, [sp, #16]
    1580:	vstr	d8, [sp, #24]
    1584:	vmov.f64	d8, d0
    1588:	ldr	r0, [pc, #404]	; 1724 <register_leap_second+0x1b8>
    158c:	ldr	r2, [r0]
    1590:	asr	lr, r2, #31
    1594:	add	lr, r2, lr, lsr #28
    1598:	asr	ip, lr, #4
    159c:	lsl	ip, ip, #4
    15a0:	sub	r3, r2, ip
    15a4:	cmp	r3, #0
    15a8:	bne	1608 <register_leap_second+0x9c>
    15ac:	ldr	r1, [pc, #360]	; 171c <register_leap_second+0x1b0>
    15b0:	ldr	r0, [r1]
    15b4:	ldr	r2, [pc, #360]	; 1724 <register_leap_second+0x1b8>
    15b8:	ldr	ip, [r2]
    15bc:	lsl	r3, ip, #3
    15c0:	add	r1, r3, #128	; 0x80
    15c4:	bl	0 <realloc>
    15c8:	cmp	r0, #0
    15cc:	bne	1600 <register_leap_second+0x94>
    15d0:	mvn	r0, #0
    15d4:	ldr	r1, [pc, #324]	; 1720 <register_leap_second+0x1b4>
    15d8:	ldr	r2, [pc, #324]	; 1724 <register_leap_second+0x1b8>
    15dc:	ldr	r2, [r2]
    15e0:	lsl	r2, r2, #3
    15e4:	add	r2, r2, #128	; 0x80
    15e8:	ldr	r3, [pc, #312]	; 1728 <register_leap_second+0x1bc>
    15ec:	movw	r4, #609	; 0x261
    15f0:	str	r4, [sp]
    15f4:	bl	0 <coda_set_error>
    15f8:	mvn	r0, #0
    15fc:	b	1708 <register_leap_second+0x19c>
    1600:	ldr	r1, [pc, #276]	; 171c <register_leap_second+0x1b0>
    1604:	str	r0, [r1]
    1608:	ldr	r0, [pc, #276]	; 1724 <register_leap_second+0x1b8>
    160c:	ldr	r0, [r0]
    1610:	cmp	r0, #0
    1614:	ble	164c <register_leap_second+0xe0>
    1618:	ldr	r2, [pc, #252]	; 171c <register_leap_second+0x1b0>
    161c:	ldr	r3, [r2]
    1620:	ldr	r1, [pc, #252]	; 1724 <register_leap_second+0x1b8>
    1624:	ldr	ip, [r1]
    1628:	lsl	r1, ip, #3
    162c:	add	ip, r3, r1
    1630:	sub	lr, ip, #1024	; 0x400
    1634:	vldr	d2, [lr, #1016]	; 0x3f8
    1638:	vcmp.f64	d8, d2
    163c:	vmrs	APSR_nzcv, fpscr
    1640:	movls	r3, #1
    1644:	movhi	r3, #0
    1648:	b	1650 <register_leap_second+0xe4>
    164c:	mov	r3, #0
    1650:	cmp	r3, #0
    1654:	beq	16d8 <register_leap_second+0x16c>
    1658:	mov	r4, #0
    165c:	ldr	r3, [pc, #192]	; 1724 <register_leap_second+0x1b8>
    1660:	ldr	r0, [r3]
    1664:	cmp	r4, r0
    1668:	bge	16d8 <register_leap_second+0x16c>
    166c:	ldr	r0, [pc, #168]	; 171c <register_leap_second+0x1b0>
    1670:	ldr	r3, [r0]
    1674:	add	r2, r3, r4, lsl #3
    1678:	vldr	d3, [r2]
    167c:	vcmp.f64	d8, d3
    1680:	vmrs	APSR_nzcv, fpscr
    1684:	bhi	16d0 <register_leap_second+0x164>
    1688:	ldr	r0, [pc, #140]	; 171c <register_leap_second+0x1b0>
    168c:	ldr	r2, [r0]
    1690:	add	ip, r2, r4, lsl #3
    1694:	vldr	d5, [ip]
    1698:	vcmp.f64	d8, d5
    169c:	vmrs	APSR_nzcv, fpscr
    16a0:	bne	16ac <register_leap_second+0x140>
    16a4:	mov	r0, #0
    16a8:	b	1708 <register_leap_second+0x19c>
    16ac:	ldr	ip, [pc, #104]	; 171c <register_leap_second+0x1b0>
    16b0:	ldr	r1, [ip]
    16b4:	add	r0, r1, r4, lsl #3
    16b8:	vldr	d0, [r0]
    16bc:	ldr	r1, [pc, #88]	; 171c <register_leap_second+0x1b0>
    16c0:	ldr	r3, [r1]
    16c4:	add	r2, r3, r4, lsl #3
    16c8:	vstr	d8, [r2]
    16cc:	vmov.f64	d8, d0
    16d0:	add	r4, r4, #1
    16d4:	b	165c <register_leap_second+0xf0>
    16d8:	ldr	r0, [pc, #60]	; 171c <register_leap_second+0x1b0>
    16dc:	ldr	ip, [r0]
    16e0:	ldr	r1, [pc, #60]	; 1724 <register_leap_second+0x1b8>
    16e4:	ldr	r3, [r1]
    16e8:	add	r3, ip, r3, lsl #3
    16ec:	vstr	d8, [r3]
    16f0:	ldr	r2, [pc, #44]	; 1724 <register_leap_second+0x1b8>
    16f4:	ldr	r1, [pc, #40]	; 1724 <register_leap_second+0x1b8>
    16f8:	ldr	r3, [r1]
    16fc:	add	r1, r3, #1
    1700:	str	r1, [r2]
    1704:	mov	r0, #0
    1708:	ldr	r4, [sp, #16]
    170c:	vldr	d8, [sp, #24]
    1710:	ldr	lr, [sp, #8]
    1714:	add	sp, sp, #32
    1718:	bx	lr
    171c:	.word	0x00000004
    1720:	.word	0x0000074b
    1724:	.word	0x00000000
    1728:	.word	0x000006c6

0000172c <read_leap_second_table>:
    172c:	mov	ip, sp
    1730:	sub	sp, sp, #232	; 0xe8
    1734:	str	ip, [sp, #32]
    1738:	str	lr, [sp, #36]	; 0x24
    173c:	str	r4, [sp, #52]	; 0x34
    1740:	str	r5, [sp, #56]	; 0x38
    1744:	str	r6, [sp, #60]	; 0x3c
    1748:	str	r8, [sp, #64]	; 0x40
    174c:	str	r9, [sp, #68]	; 0x44
    1750:	str	sl, [sp, #72]	; 0x48
    1754:	str	fp, [sp, #76]	; 0x4c
    1758:	str	r0, [sp, #44]	; 0x2c
    175c:	mov	r6, #0
    1760:	ldr	r1, [pc, #484]	; 194c <read_leap_second_table+0x220>
    1764:	ldr	r0, [sp, #44]	; 0x2c
    1768:	bl	0 <fopen>
    176c:	str	r0, [sp, #40]	; 0x28
    1770:	ldr	r2, [sp, #40]	; 0x28
    1774:	cmp	r2, #0
    1778:	bne	1794 <read_leap_second_table+0x68>
    177c:	mvn	r0, #20
    1780:	ldr	r1, [pc, #432]	; 1938 <read_leap_second_table+0x20c>
    1784:	ldr	r2, [sp, #44]	; 0x2c
    1788:	bl	0 <coda_set_error>
    178c:	mvn	r0, #0
    1790:	b	1910 <read_leap_second_table+0x1e4>
    1794:	mov	ip, #0
    1798:	str	ip, [sp, #84]	; 0x54
    179c:	ldr	r1, [pc, #420]	; 1948 <read_leap_second_table+0x21c>
    17a0:	add	r2, sp, #128	; 0x80
    17a4:	add	r3, sp, #84	; 0x54
    17a8:	ldr	r0, [sp, #40]	; 0x28
    17ac:	bl	0 <fscanf>
    17b0:	ldr	r0, [sp, #84]	; 0x54
    17b4:	cmp	r0, #0
    17b8:	ble	1904 <read_leap_second_table+0x1d8>
    17bc:	ldr	r3, [sp, #84]	; 0x54
    17c0:	cmp	r3, #80	; 0x50
    17c4:	beq	17e8 <read_leap_second_table+0xbc>
    17c8:	ldr	r0, [sp, #40]	; 0x28
    17cc:	bl	0 <fclose>
    17d0:	mvn	r0, #21
    17d4:	ldr	r1, [pc, #360]	; 1944 <read_leap_second_table+0x218>
    17d8:	ldr	r2, [sp, #44]	; 0x2c
    17dc:	bl	0 <coda_set_error>
    17e0:	mvn	r0, #0
    17e4:	b	1910 <read_leap_second_table+0x1e4>
    17e8:	add	r2, sp, #128	; 0x80
    17ec:	ldr	r0, [sp, #84]	; 0x54
    17f0:	mov	ip, #0
    17f4:	strb	ip, [r2, r0]
    17f8:	ldr	r1, [pc, #316]	; 193c <read_leap_second_table+0x210>
    17fc:	ldr	r0, [sp, #40]	; 0x28
    1800:	bl	0 <fscanf>
    1804:	add	r0, sp, #128	; 0x80
    1808:	ldr	r1, [pc, #304]	; 1940 <read_leap_second_table+0x214>
    180c:	add	r3, sp, #88	; 0x58
    1810:	str	r3, [sp, #48]	; 0x30
    1814:	add	r3, sp, #80	; 0x50
    1818:	add	fp, sp, #81	; 0x51
    181c:	add	r2, sp, #82	; 0x52
    1820:	add	r8, sp, #92	; 0x5c
    1824:	add	r4, sp, #104	; 0x68
    1828:	add	sl, sp, #112	; 0x70
    182c:	add	ip, sp, #120	; 0x78
    1830:	add	r9, sp, #96	; 0x60
    1834:	add	r5, sp, #84	; 0x54
    1838:	str	r5, [sp, #28]
    183c:	str	r9, [sp, #24]
    1840:	str	ip, [sp, #20]
    1844:	str	sl, [sp, #16]
    1848:	str	r4, [sp, #12]
    184c:	str	r8, [sp, #8]
    1850:	str	r2, [sp, #4]
    1854:	str	fp, [sp]
    1858:	ldr	r2, [sp, #48]	; 0x30
    185c:	bl	0 <sscanf>
    1860:	cmp	r0, #9
    1864:	beq	187c <read_leap_second_table+0x150>
    1868:	ldr	r1, [sp, #84]	; 0x54
    186c:	cmp	r1, #80	; 0x50
    1870:	movne	r1, #1
    1874:	moveq	r1, #0
    1878:	b	1880 <read_leap_second_table+0x154>
    187c:	mov	r1, #0
    1880:	cmp	r1, #0
    1884:	beq	18a8 <read_leap_second_table+0x17c>
    1888:	ldr	r0, [sp, #40]	; 0x28
    188c:	bl	0 <fclose>
    1890:	mvn	r0, #21
    1894:	ldr	r1, [pc, #168]	; 1944 <read_leap_second_table+0x218>
    1898:	ldr	r2, [sp, #44]	; 0x2c
    189c:	bl	0 <coda_set_error>
    18a0:	mvn	r0, #0
    18a4:	b	1910 <read_leap_second_table+0x1e4>
    18a8:	vldr	d3, [sp, #104]	; 0x68
    18ac:	vldr	d1, [pc, #156]	; 1950 <read_leap_second_table+0x224>
    18b0:	vcmp.f64	d3, d1
    18b4:	vmrs	APSR_nzcv, fpscr
    18b8:	ble	1794 <read_leap_second_table+0x68>
    18bc:	vldr	d7, [sp, #104]	; 0x68
    18c0:	vldr	d3, [pc, #144]	; 1958 <read_leap_second_table+0x22c>
    18c4:	vsub.f64	d6, d7, d3
    18c8:	vldr	d7, [pc, #144]	; 1960 <read_leap_second_table+0x234>
    18cc:	vmul.f64	d5, d6, d7
    18d0:	add	r0, r6, #10
    18d4:	vmov	s8, r0
    18d8:	vcvt.f64.s32	d4, s8
    18dc:	vadd.f64	d0, d5, d4
    18e0:	bl	156c <register_leap_second>
    18e4:	cmp	r0, #0
    18e8:	beq	18fc <read_leap_second_table+0x1d0>
    18ec:	ldr	r0, [sp, #40]	; 0x28
    18f0:	bl	0 <fclose>
    18f4:	mvn	r0, #0
    18f8:	b	1910 <read_leap_second_table+0x1e4>
    18fc:	add	r6, r6, #1
    1900:	b	1794 <read_leap_second_table+0x68>
    1904:	ldr	r0, [sp, #40]	; 0x28
    1908:	bl	0 <fclose>
    190c:	mov	r0, #0
    1910:	ldr	r4, [sp, #52]	; 0x34
    1914:	ldr	r5, [sp, #56]	; 0x38
    1918:	ldr	r6, [sp, #60]	; 0x3c
    191c:	ldr	r8, [sp, #64]	; 0x40
    1920:	ldr	r9, [sp, #68]	; 0x44
    1924:	ldr	sl, [sp, #72]	; 0x48
    1928:	ldr	fp, [sp, #76]	; 0x4c
    192c:	ldr	lr, [sp, #36]	; 0x24
    1930:	add	sp, sp, #232	; 0xe8
    1934:	bx	lr
    1938:	.word	0x000004b5
    193c:	.word	0x00000516
    1940:	.word	0x0000013b
    1944:	.word	0x000000dc
    1948:	.word	0x0000062f
    194c:	.word	0x0000009b
    1950:	.word	0xc0000000
    1954:	.word	0x4142a032
    1958:	.word	0x40000000
    195c:	.word	0x4142b42c
    1960:	.word	0x00000000
    1964:	.word	0x40f51800

00001968 <coda_leap_second_table_done>:
    1968:	mov	ip, sp
    196c:	sub	sp, sp, #8
    1970:	str	ip, [sp]
    1974:	str	lr, [sp, #4]
    1978:	ldr	r0, [pc, #56]	; 19b8 <coda_leap_second_table_done+0x50>
    197c:	ldr	r0, [r0]
    1980:	cmp	r0, #0
    1984:	beq	19a0 <coda_leap_second_table_done+0x38>
    1988:	ldr	r0, [pc, #40]	; 19b8 <coda_leap_second_table_done+0x50>
    198c:	ldr	r0, [r0]
    1990:	bl	0 <free>
    1994:	ldr	r3, [pc, #28]	; 19b8 <coda_leap_second_table_done+0x50>
    1998:	mov	r1, #0
    199c:	str	r1, [r3]
    19a0:	ldr	r0, [pc, #20]	; 19bc <coda_leap_second_table_done+0x54>
    19a4:	mov	r2, #0
    19a8:	str	r2, [r0]
    19ac:	ldr	lr, [sp, #4]
    19b0:	add	sp, sp, #8
    19b4:	bx	lr
    19b8:	.word	0x00000004
    19bc:	.word	0x00000000

000019c0 <coda_leap_second_table_init>:
    19c0:	mov	ip, sp
    19c4:	sub	sp, sp, #8
    19c8:	str	ip, [sp]
    19cc:	str	lr, [sp, #4]
    19d0:	bl	1968 <coda_leap_second_table_done>
    19d4:	ldr	r0, [pc, #360]	; 1b44 <coda_leap_second_table_init+0x184>
    19d8:	bl	0 <getenv>
    19dc:	cmp	r0, #0
    19e0:	bne	1b18 <coda_leap_second_table_init+0x158>
    19e4:	vldr	d0, [pc, #468]	; 1bc0 <coda_leap_second_table_init+0x200>
    19e8:	vneg.f64	d0, d0
    19ec:	bl	156c <register_leap_second>
    19f0:	vldr	d0, [pc, #336]	; 1b48 <coda_leap_second_table_init+0x188>
    19f4:	vneg.f64	d0, d0
    19f8:	bl	156c <register_leap_second>
    19fc:	vldr	d0, [pc, #452]	; 1bc8 <coda_leap_second_table_init+0x208>
    1a00:	vneg.f64	d0, d0
    1a04:	bl	156c <register_leap_second>
    1a08:	vldr	d0, [pc, #392]	; 1b98 <coda_leap_second_table_init+0x1d8>
    1a0c:	vneg.f64	d0, d0
    1a10:	bl	156c <register_leap_second>
    1a14:	vldr	d0, [pc, #500]	; 1c10 <coda_leap_second_table_init+0x250>
    1a18:	vneg.f64	d0, d0
    1a1c:	bl	156c <register_leap_second>
    1a20:	vldr	d0, [pc, #376]	; 1ba0 <coda_leap_second_table_init+0x1e0>
    1a24:	vneg.f64	d0, d0
    1a28:	bl	156c <register_leap_second>
    1a2c:	vldr	d0, [pc, #436]	; 1be8 <coda_leap_second_table_init+0x228>
    1a30:	vneg.f64	d0, d0
    1a34:	bl	156c <register_leap_second>
    1a38:	vldr	d0, [pc, #432]	; 1bf0 <coda_leap_second_table_init+0x230>
    1a3c:	vneg.f64	d0, d0
    1a40:	bl	156c <register_leap_second>
    1a44:	vldr	d0, [pc, #404]	; 1be0 <coda_leap_second_table_init+0x220>
    1a48:	vneg.f64	d0, d0
    1a4c:	bl	156c <register_leap_second>
    1a50:	vldr	d0, [pc, #352]	; 1bb8 <coda_leap_second_table_init+0x1f8>
    1a54:	vneg.f64	d0, d0
    1a58:	bl	156c <register_leap_second>
    1a5c:	vldr	d0, [pc, #412]	; 1c00 <coda_leap_second_table_init+0x240>
    1a60:	vneg.f64	d0, d0
    1a64:	bl	156c <register_leap_second>
    1a68:	vldr	d0, [pc, #240]	; 1b60 <coda_leap_second_table_init+0x1a0>
    1a6c:	vneg.f64	d0, d0
    1a70:	bl	156c <register_leap_second>
    1a74:	vldr	d0, [pc, #212]	; 1b50 <coda_leap_second_table_init+0x190>
    1a78:	vneg.f64	d0, d0
    1a7c:	bl	156c <register_leap_second>
    1a80:	vldr	d0, [pc, #264]	; 1b90 <coda_leap_second_table_init+0x1d0>
    1a84:	vneg.f64	d0, d0
    1a88:	bl	156c <register_leap_second>
    1a8c:	vldr	d0, [pc, #316]	; 1bd0 <coda_leap_second_table_init+0x210>
    1a90:	vneg.f64	d0, d0
    1a94:	bl	156c <register_leap_second>
    1a98:	vldr	d0, [pc, #184]	; 1b58 <coda_leap_second_table_init+0x198>
    1a9c:	vneg.f64	d0, d0
    1aa0:	bl	156c <register_leap_second>
    1aa4:	vldr	d0, [pc, #212]	; 1b80 <coda_leap_second_table_init+0x1c0>
    1aa8:	vneg.f64	d0, d0
    1aac:	bl	156c <register_leap_second>
    1ab0:	vldr	d0, [pc, #192]	; 1b78 <coda_leap_second_table_init+0x1b8>
    1ab4:	vneg.f64	d0, d0
    1ab8:	bl	156c <register_leap_second>
    1abc:	vldr	d0, [pc, #276]	; 1bd8 <coda_leap_second_table_init+0x218>
    1ac0:	vneg.f64	d0, d0
    1ac4:	bl	156c <register_leap_second>
    1ac8:	vldr	d0, [pc, #152]	; 1b68 <coda_leap_second_table_init+0x1a8>
    1acc:	vneg.f64	d0, d0
    1ad0:	bl	156c <register_leap_second>
    1ad4:	vldr	d0, [pc, #284]	; 1bf8 <coda_leap_second_table_init+0x238>
    1ad8:	vneg.f64	d0, d0
    1adc:	bl	156c <register_leap_second>
    1ae0:	vldr	d0, [pc, #160]	; 1b88 <coda_leap_second_table_init+0x1c8>
    1ae4:	vneg.f64	d0, d0
    1ae8:	bl	156c <register_leap_second>
    1aec:	vldr	d0, [pc, #292]	; 1c18 <coda_leap_second_table_init+0x258>
    1af0:	bl	156c <register_leap_second>
    1af4:	vldr	d0, [pc, #172]	; 1ba8 <coda_leap_second_table_init+0x1e8>
    1af8:	bl	156c <register_leap_second>
    1afc:	vldr	d0, [pc, #172]	; 1bb0 <coda_leap_second_table_init+0x1f0>
    1b00:	bl	156c <register_leap_second>
    1b04:	vldr	d0, [pc, #252]	; 1c08 <coda_leap_second_table_init+0x248>
    1b08:	bl	156c <register_leap_second>
    1b0c:	vldr	d0, [pc, #92]	; 1b70 <coda_leap_second_table_init+0x1b0>
    1b10:	bl	156c <register_leap_second>
    1b14:	b	1b34 <coda_leap_second_table_init+0x174>
    1b18:	ldr	r0, [pc, #36]	; 1b44 <coda_leap_second_table_init+0x184>
    1b1c:	bl	0 <getenv>
    1b20:	bl	172c <read_leap_second_table>
    1b24:	cmp	r0, #0
    1b28:	beq	1b34 <coda_leap_second_table_init+0x174>
    1b2c:	mvn	r0, #0
    1b30:	b	1b38 <coda_leap_second_table_init+0x178>
    1b34:	mov	r0, #0
    1b38:	ldr	lr, [sp, #4]
    1b3c:	add	sp, sp, #8
    1b40:	bx	lr
    1b44:	.word	0x0000059f
    1b48:	.word	0xba800000
    1b4c:	.word	0x41c9642b
    1b50:	.word	0x6a000000
    1b54:	.word	0x41bb4759
    1b58:	.word	0x67000000
    1b5c:	.word	0x41b0ed72
    1b60:	.word	0xeb000000
    1b64:	.word	0x41bf0b11
    1b68:	.word	0x8c000000
    1b6c:	.word	0x419e187d
    1b70:	.word	0x24000000
    1b74:	.word	0x41bffb03
    1b78:	.word	0xca000000
    1b7c:	.word	0x41a87634
    1b80:	.word	0xcc000000
    1b84:	.word	0x41ac389b
    1b88:	.word	0x10000000
    1b8c:	.word	0x417e1336
    1b90:	.word	0x69000000
    1b94:	.word	0x41b6925e
    1b98:	.word	0x39800000
    1b9c:	.word	0x41c782f8
    1ba0:	.word	0xf8800000
    1ba4:	.word	0x41c5a11b
    1ba8:	.word	0x21000000
    1bac:	.word	0x41b0eec4
    1bb0:	.word	0xa2000000
    1bb4:	.word	0x41b7824f
    1bb8:	.word	0x76800000
    1bbc:	.word	0x41c166bc
    1bc0:	.word	0xbb000000
    1bc4:	.word	0x41c9dd75
    1bc8:	.word	0xfa000000
    1bcc:	.word	0x41c87391
    1bd0:	.word	0xe8000000
    1bd4:	.word	0x41b2cea5
    1bd8:	.word	0xc8000000
    1bdc:	.word	0x41a4b3cd
    1be0:	.word	0xb7000000
    1be4:	.word	0x41c2cf4e
    1be8:	.word	0x38000000
    1bec:	.word	0x41c4b082
    1bf0:	.word	0x77800000
    1bf4:	.word	0x41c3bfe8
    1bf8:	.word	0x88000000
    1bfc:	.word	0x4192d3eb
    1c00:	.word	0xb6000000
    1c04:	.word	0x41c07622
    1c08:	.word	0x23000000
    1c0c:	.word	0x41bd25ea
    1c10:	.word	0x79000000
    1c14:	.word	0x41c6925e
    1c18:	.word	0x40000000
    1c1c:	.word	0x41a693b0

00001c20 <coda_time_double_to_parts>:
    1c20:	mov	ip, sp
    1c24:	sub	sp, sp, #80	; 0x50
    1c28:	str	ip, [sp]
    1c2c:	str	lr, [sp, #4]
    1c30:	str	r4, [sp, #8]
    1c34:	str	r5, [sp, #12]
    1c38:	str	r6, [sp, #16]
    1c3c:	str	r7, [sp, #20]
    1c40:	str	r8, [sp, #24]
    1c44:	str	r9, [sp, #28]
    1c48:	str	sl, [sp, #32]
    1c4c:	str	fp, [sp, #36]	; 0x24
    1c50:	vstr	d8, [sp, #40]	; 0x28
    1c54:	vstr	d9, [sp, #48]	; 0x30
    1c58:	ldr	r8, [ip, #8]
    1c5c:	ldr	r7, [ip, #4]
    1c60:	ldr	r6, [ip]
    1c64:	mov	r9, r3
    1c68:	mov	sl, r2
    1c6c:	mov	r5, r1
    1c70:	mov	r4, r0
    1c74:	vmov.f64	d8, d0
    1c78:	cmp	r4, #0
    1c7c:	beq	1c90 <coda_time_double_to_parts+0x70>
    1c80:	cmp	r5, #0
    1c84:	moveq	r2, #1
    1c88:	movne	r2, #0
    1c8c:	b	1c94 <coda_time_double_to_parts+0x74>
    1c90:	mov	r2, #1
    1c94:	cmp	r2, #0
    1c98:	bne	1cac <coda_time_double_to_parts+0x8c>
    1c9c:	cmp	sl, #0
    1ca0:	moveq	r2, #1
    1ca4:	movne	r2, #0
    1ca8:	b	1cb0 <coda_time_double_to_parts+0x90>
    1cac:	mov	r2, #1
    1cb0:	cmp	r2, #0
    1cb4:	bne	1cc8 <coda_time_double_to_parts+0xa8>
    1cb8:	cmp	r9, #0
    1cbc:	moveq	r1, #1
    1cc0:	movne	r1, #0
    1cc4:	b	1ccc <coda_time_double_to_parts+0xac>
    1cc8:	mov	r1, #1
    1ccc:	cmp	r1, #0
    1cd0:	bne	1ce4 <coda_time_double_to_parts+0xc4>
    1cd4:	cmp	r6, #0
    1cd8:	moveq	r2, #1
    1cdc:	movne	r2, #0
    1ce0:	b	1ce8 <coda_time_double_to_parts+0xc8>
    1ce4:	mov	r2, #1
    1ce8:	cmp	r2, #0
    1cec:	bne	1d00 <coda_time_double_to_parts+0xe0>
    1cf0:	cmp	r7, #0
    1cf4:	moveq	r3, #1
    1cf8:	movne	r3, #0
    1cfc:	b	1d04 <coda_time_double_to_parts+0xe4>
    1d00:	mov	r3, #1
    1d04:	cmp	r3, #0
    1d08:	bne	1d1c <coda_time_double_to_parts+0xfc>
    1d0c:	cmp	r8, #0
    1d10:	moveq	r3, #1
    1d14:	movne	r3, #0
    1d18:	b	1d20 <coda_time_double_to_parts+0x100>
    1d1c:	mov	r3, #1
    1d20:	cmp	r3, #0
    1d24:	beq	1d44 <coda_time_double_to_parts+0x124>
    1d28:	mvn	r0, #99	; 0x63
    1d2c:	ldr	r1, [pc, #368]	; 1ea4 <coda_time_double_to_parts+0x284>
    1d30:	ldr	r2, [pc, #356]	; 1e9c <coda_time_double_to_parts+0x27c>
    1d34:	movw	r3, #787	; 0x313
    1d38:	bl	0 <coda_set_error>
    1d3c:	mvn	r0, #0
    1d40:	b	1e64 <coda_time_double_to_parts+0x244>
    1d44:	vmov.f64	d0, d8
    1d48:	bl	0 <coda_isNaN>
    1d4c:	cmp	r0, #0
    1d50:	beq	1d68 <coda_time_double_to_parts+0x148>
    1d54:	mvn	r0, #103	; 0x67
    1d58:	ldr	r1, [pc, #320]	; 1ea0 <coda_time_double_to_parts+0x280>
    1d5c:	bl	0 <coda_set_error>
    1d60:	mvn	r0, #0
    1d64:	b	1e64 <coda_time_double_to_parts+0x244>
    1d68:	vmov.f64	d0, d8
    1d6c:	bl	0 <coda_isInf>
    1d70:	cmp	r0, #0
    1d74:	beq	1d8c <coda_time_double_to_parts+0x16c>
    1d78:	mvn	r0, #103	; 0x67
    1d7c:	ldr	r1, [pc, #276]	; 1e98 <coda_time_double_to_parts+0x278>
    1d80:	bl	0 <coda_set_error>
    1d84:	mvn	r0, #0
    1d88:	b	1e64 <coda_time_double_to_parts+0x244>
    1d8c:	vldr	d4, [pc, #276]	; 1ea8 <coda_time_double_to_parts+0x288>
    1d90:	vadd.f64	d9, d8, d4
    1d94:	vmov.f64	d0, d9
    1d98:	bl	0 <floor>
    1d9c:	vmov.f64	d8, d0
    1da0:	vldr	d1, [pc, #272]	; 1eb8 <coda_time_double_to_parts+0x298>
    1da4:	vdiv.f64	d0, d8, d1
    1da8:	bl	0 <floor>
    1dac:	vcvt.s32.f64	s12, d0
    1db0:	vmov	fp, s12
    1db4:	add	r1, sp, #64	; 0x40
    1db8:	add	r2, sp, #68	; 0x44
    1dbc:	add	r3, sp, #72	; 0x48
    1dc0:	mov	r0, fp
    1dc4:	bl	1104 <mjd2000_to_dmy>
    1dc8:	cmp	r0, #0
    1dcc:	beq	1dd8 <coda_time_double_to_parts+0x1b8>
    1dd0:	mvn	r0, #0
    1dd4:	b	1e64 <coda_time_double_to_parts+0x244>
    1dd8:	vmov	s6, fp
    1ddc:	vcvt.f64.s32	d3, s6
    1de0:	vldr	d6, [pc, #208]	; 1eb8 <coda_time_double_to_parts+0x298>
    1de4:	vmul.f64	d2, d3, d6
    1de8:	vsub.f64	d2, d8, d2
    1dec:	vcvt.s32.f64	s12, d2
    1df0:	vmov	r0, s12
    1df4:	add	r1, sp, #76	; 0x4c
    1df8:	add	r2, sp, #56	; 0x38
    1dfc:	add	r3, sp, #60	; 0x3c
    1e00:	bl	1474 <seconds_to_hms>
    1e04:	cmp	r0, #0
    1e08:	beq	1e14 <coda_time_double_to_parts+0x1f4>
    1e0c:	mvn	r0, #0
    1e10:	b	1e64 <coda_time_double_to_parts+0x244>
    1e14:	vsub.f64	d0, d9, d8
    1e18:	vldr	d7, [pc, #144]	; 1eb0 <coda_time_double_to_parts+0x290>
    1e1c:	vmul.f64	d0, d0, d7
    1e20:	bl	0 <floor>
    1e24:	vcvt.s32.f64	s12, d0
    1e28:	vmov	r2, s12
    1e2c:	ldr	r0, [sp, #72]	; 0x48
    1e30:	str	r0, [r4]
    1e34:	ldr	r3, [sp, #68]	; 0x44
    1e38:	str	r3, [r5]
    1e3c:	ldr	r0, [sp, #64]	; 0x40
    1e40:	str	r0, [sl]
    1e44:	ldr	ip, [sp, #76]	; 0x4c
    1e48:	str	ip, [r9]
    1e4c:	ldr	r3, [sp, #56]	; 0x38
    1e50:	str	r3, [r6]
    1e54:	ldr	r1, [sp, #60]	; 0x3c
    1e58:	str	r1, [r7]
    1e5c:	str	r2, [r8]
    1e60:	mov	r0, #0
    1e64:	ldr	r4, [sp, #8]
    1e68:	ldr	r5, [sp, #12]
    1e6c:	ldr	r6, [sp, #16]
    1e70:	ldr	r7, [sp, #20]
    1e74:	ldr	r8, [sp, #24]
    1e78:	ldr	r9, [sp, #28]
    1e7c:	ldr	sl, [sp, #32]
    1e80:	ldr	fp, [sp, #36]	; 0x24
    1e84:	vldr	d8, [sp, #40]	; 0x28
    1e88:	vldr	d9, [sp, #48]	; 0x30
    1e8c:	ldr	lr, [sp, #4]
    1e90:	add	sp, sp, #80	; 0x50
    1e94:	bx	lr
    1e98:	.word	0x00000723
    1e9c:	.word	0x000006c6
    1ea0:	.word	0x00000220
    1ea4:	.word	0x000005b6
    1ea8:	.word	0xa0b5ed8d
    1eac:	.word	0x3ea0c6f7
    1eb0:	.word	0x00000000
    1eb4:	.word	0x412e8480
    1eb8:	.word	0x00000000
    1ebc:	.word	0x40f51800

00001ec0 <coda_time_double_to_parts_utc>:
    1ec0:	mov	ip, sp
    1ec4:	sub	sp, sp, #88	; 0x58
    1ec8:	str	ip, [sp]
    1ecc:	str	lr, [sp, #4]
    1ed0:	str	r4, [sp, #12]
    1ed4:	str	r5, [sp, #16]
    1ed8:	str	r6, [sp, #20]
    1edc:	str	r7, [sp, #24]
    1ee0:	str	r8, [sp, #28]
    1ee4:	str	r9, [sp, #32]
    1ee8:	str	sl, [sp, #36]	; 0x24
    1eec:	str	fp, [sp, #40]	; 0x28
    1ef0:	vstr	d8, [sp, #48]	; 0x30
    1ef4:	vstr	d9, [sp, #56]	; 0x38
    1ef8:	ldr	r8, [ip, #8]
    1efc:	ldr	r9, [ip, #4]
    1f00:	ldr	r5, [ip]
    1f04:	str	r3, [sp, #8]
    1f08:	mov	r7, r2
    1f0c:	mov	fp, r1
    1f10:	mov	r6, r0
    1f14:	vmov.f64	d8, d0
    1f18:	cmp	r6, #0
    1f1c:	beq	1f30 <coda_time_double_to_parts_utc+0x70>
    1f20:	cmp	fp, #0
    1f24:	moveq	r0, #1
    1f28:	movne	r0, #0
    1f2c:	b	1f34 <coda_time_double_to_parts_utc+0x74>
    1f30:	mov	r0, #1
    1f34:	cmp	r0, #0
    1f38:	bne	1f4c <coda_time_double_to_parts_utc+0x8c>
    1f3c:	cmp	r7, #0
    1f40:	moveq	r1, #1
    1f44:	movne	r1, #0
    1f48:	b	1f50 <coda_time_double_to_parts_utc+0x90>
    1f4c:	mov	r1, #1
    1f50:	cmp	r1, #0
    1f54:	bne	1f6c <coda_time_double_to_parts_utc+0xac>
    1f58:	ldr	r2, [sp, #8]
    1f5c:	cmp	r2, #0
    1f60:	moveq	r2, #1
    1f64:	movne	r2, #0
    1f68:	b	1f70 <coda_time_double_to_parts_utc+0xb0>
    1f6c:	mov	r2, #1
    1f70:	cmp	r2, #0
    1f74:	bne	1f88 <coda_time_double_to_parts_utc+0xc8>
    1f78:	cmp	r5, #0
    1f7c:	moveq	r3, #1
    1f80:	movne	r3, #0
    1f84:	b	1f8c <coda_time_double_to_parts_utc+0xcc>
    1f88:	mov	r3, #1
    1f8c:	cmp	r3, #0
    1f90:	bne	1fa4 <coda_time_double_to_parts_utc+0xe4>
    1f94:	cmp	r9, #0
    1f98:	moveq	ip, #1
    1f9c:	movne	ip, #0
    1fa0:	b	1fa8 <coda_time_double_to_parts_utc+0xe8>
    1fa4:	mov	ip, #1
    1fa8:	cmp	ip, #0
    1fac:	bne	1fc0 <coda_time_double_to_parts_utc+0x100>
    1fb0:	cmp	r8, #0
    1fb4:	moveq	r0, #1
    1fb8:	movne	r0, #0
    1fbc:	b	1fc4 <coda_time_double_to_parts_utc+0x104>
    1fc0:	mov	r0, #1
    1fc4:	cmp	r0, #0
    1fc8:	beq	1fe8 <coda_time_double_to_parts_utc+0x128>
    1fcc:	mvn	r0, #99	; 0x63
    1fd0:	ldr	r1, [pc, #624]	; 2248 <coda_time_double_to_parts_utc+0x388>
    1fd4:	ldr	r2, [pc, #608]	; 223c <coda_time_double_to_parts_utc+0x37c>
    1fd8:	movw	r3, #874	; 0x36a
    1fdc:	bl	0 <coda_set_error>
    1fe0:	mvn	r0, #0
    1fe4:	b	21f8 <coda_time_double_to_parts_utc+0x338>
    1fe8:	vmov.f64	d0, d8
    1fec:	bl	0 <coda_isNaN>
    1ff0:	cmp	r0, #0
    1ff4:	beq	200c <coda_time_double_to_parts_utc+0x14c>
    1ff8:	mvn	r0, #103	; 0x67
    1ffc:	ldr	r1, [pc, #572]	; 2240 <coda_time_double_to_parts_utc+0x380>
    2000:	bl	0 <coda_set_error>
    2004:	mvn	r0, #0
    2008:	b	21f8 <coda_time_double_to_parts_utc+0x338>
    200c:	vmov.f64	d0, d8
    2010:	bl	0 <coda_isInf>
    2014:	cmp	r0, #0
    2018:	beq	2030 <coda_time_double_to_parts_utc+0x170>
    201c:	mvn	r0, #103	; 0x67
    2020:	ldr	r1, [pc, #528]	; 2238 <coda_time_double_to_parts_utc+0x378>
    2024:	bl	0 <coda_set_error>
    2028:	mvn	r0, #0
    202c:	b	21f8 <coda_time_double_to_parts_utc+0x338>
    2030:	vldr	d5, [pc, #540]	; 2254 <coda_time_double_to_parts_utc+0x394>
    2034:	vadd.f64	d9, d8, d5
    2038:	vmov.f64	d0, d9
    203c:	bl	0 <floor>
    2040:	vmov.f64	d8, d0
    2044:	ldr	r0, [pc, #480]	; 222c <coda_time_double_to_parts_utc+0x36c>
    2048:	ldr	r1, [r0]
    204c:	cmp	r1, #0
    2050:	beq	206c <coda_time_double_to_parts_utc+0x1ac>
    2054:	ldr	ip, [pc, #472]	; 2234 <coda_time_double_to_parts_utc+0x374>
    2058:	ldr	r2, [ip]
    205c:	cmp	r2, #0
    2060:	movgt	r3, #1
    2064:	movle	r3, #0
    2068:	b	2070 <coda_time_double_to_parts_utc+0x1b0>
    206c:	mov	r3, #0
    2070:	cmp	r3, #0
    2074:	bne	208c <coda_time_double_to_parts_utc+0x1cc>
    2078:	ldr	r0, [pc, #432]	; 2230 <coda_time_double_to_parts_utc+0x370>
    207c:	ldr	r1, [pc, #440]	; 223c <coda_time_double_to_parts_utc+0x37c>
    2080:	movw	r2, #894	; 0x37e
    2084:	ldr	r3, [pc, #440]	; 2244 <coda_time_double_to_parts_utc+0x384>
    2088:	bl	0 <__assert_fail>
    208c:	mov	sl, #0
    2090:	ldr	ip, [pc, #412]	; 2234 <coda_time_double_to_parts_utc+0x374>
    2094:	ldr	r3, [ip]
    2098:	cmp	sl, r3
    209c:	bge	20c4 <coda_time_double_to_parts_utc+0x204>
    20a0:	ldr	r1, [pc, #388]	; 222c <coda_time_double_to_parts_utc+0x36c>
    20a4:	ldr	r3, [r1]
    20a8:	add	r0, r3, sl, lsl #3
    20ac:	vldr	d4, [r0]
    20b0:	vcmp.f64	d8, d4
    20b4:	vmrs	APSR_nzcv, fpscr
    20b8:	movgt	r2, #1
    20bc:	movle	r2, #0
    20c0:	b	20c8 <coda_time_double_to_parts_utc+0x208>
    20c4:	mov	r2, #0
    20c8:	cmp	r2, #0
    20cc:	beq	20d8 <coda_time_double_to_parts_utc+0x218>
    20d0:	add	sl, sl, #1
    20d4:	b	2090 <coda_time_double_to_parts_utc+0x1d0>
    20d8:	ldr	r2, [pc, #332]	; 222c <coda_time_double_to_parts_utc+0x36c>
    20dc:	ldr	r1, [r2]
    20e0:	add	r3, r1, sl, lsl #3
    20e4:	vldr	d3, [r3]
    20e8:	vsub.f64	d0, d8, d3
    20ec:	bl	0 <fabs>
    20f0:	vldr	d1, [pc, #340]	; 224c <coda_time_double_to_parts_utc+0x38c>
    20f4:	vcmp.f64	d0, d1
    20f8:	vmrs	APSR_nzcv, fpscr
    20fc:	movmi	r4, #1
    2100:	movpl	r4, #0
    2104:	add	r0, sl, r4
    2108:	add	r2, r0, #10
    210c:	vmov	s6, r2
    2110:	vcvt.f64.s32	d3, s6
    2114:	vsub.f64	d8, d8, d3
    2118:	add	r0, sl, r4
    211c:	add	r1, r0, #10
    2120:	vmov	s4, r1
    2124:	vcvt.f64.s32	d2, s4
    2128:	vsub.f64	d9, d9, d2
    212c:	vldr	d1, [pc, #304]	; 2264 <coda_time_double_to_parts_utc+0x3a4>
    2130:	vdiv.f64	d0, d8, d1
    2134:	bl	0 <floor>
    2138:	vcvt.s32.f64	s12, d0
    213c:	vmov	sl, s12
    2140:	add	r1, sp, #72	; 0x48
    2144:	add	r2, sp, #76	; 0x4c
    2148:	add	r3, sp, #80	; 0x50
    214c:	mov	r0, sl
    2150:	bl	1104 <mjd2000_to_dmy>
    2154:	cmp	r0, #0
    2158:	beq	2164 <coda_time_double_to_parts_utc+0x2a4>
    215c:	mvn	r0, #0
    2160:	b	21f8 <coda_time_double_to_parts_utc+0x338>
    2164:	vmov	s4, sl
    2168:	vcvt.f64.s32	d2, s4
    216c:	vldr	d4, [pc, #240]	; 2264 <coda_time_double_to_parts_utc+0x3a4>
    2170:	vmul.f64	d5, d2, d4
    2174:	vsub.f64	d3, d8, d5
    2178:	vcvt.s32.f64	s12, d3
    217c:	vmov	r0, s12
    2180:	add	r1, sp, #84	; 0x54
    2184:	add	r2, sp, #64	; 0x40
    2188:	add	r3, sp, #68	; 0x44
    218c:	bl	1474 <seconds_to_hms>
    2190:	cmp	r0, #0
    2194:	beq	21a0 <coda_time_double_to_parts_utc+0x2e0>
    2198:	mvn	r0, #0
    219c:	b	21f8 <coda_time_double_to_parts_utc+0x338>
    21a0:	vsub.f64	d6, d9, d8
    21a4:	vldr	d0, [pc, #176]	; 225c <coda_time_double_to_parts_utc+0x39c>
    21a8:	vmul.f64	d0, d6, d0
    21ac:	bl	0 <floor>
    21b0:	vcvt.s32.f64	s12, d0
    21b4:	vmov	ip, s12
    21b8:	ldr	r3, [sp, #80]	; 0x50
    21bc:	str	r3, [r6]
    21c0:	ldr	r3, [sp, #76]	; 0x4c
    21c4:	str	r3, [fp]
    21c8:	ldr	r2, [sp, #72]	; 0x48
    21cc:	str	r2, [r7]
    21d0:	ldr	r0, [sp, #84]	; 0x54
    21d4:	ldr	r1, [sp, #8]
    21d8:	str	r0, [r1]
    21dc:	ldr	r0, [sp, #64]	; 0x40
    21e0:	str	r0, [r5]
    21e4:	ldr	r0, [sp, #68]	; 0x44
    21e8:	add	r0, r0, r4
    21ec:	str	r0, [r9]
    21f0:	str	ip, [r8]
    21f4:	mov	r0, #0
    21f8:	ldr	r4, [sp, #12]
    21fc:	ldr	r5, [sp, #16]
    2200:	ldr	r6, [sp, #20]
    2204:	ldr	r7, [sp, #24]
    2208:	ldr	r8, [sp, #28]
    220c:	ldr	r9, [sp, #32]
    2210:	ldr	sl, [sp, #36]	; 0x24
    2214:	ldr	fp, [sp, #40]	; 0x28
    2218:	vldr	d8, [sp, #48]	; 0x30
    221c:	vldr	d9, [sp, #56]	; 0x38
    2220:	ldr	lr, [sp, #4]
    2224:	add	sp, sp, #88	; 0x58
    2228:	bx	lr
    222c:	.word	0x00000004
    2230:	.word	0x00000281
    2234:	.word	0x00000000
    2238:	.word	0x00000723
    223c:	.word	0x000006c6
    2240:	.word	0x00000220
    2244:	.word	0x000008de
    2248:	.word	0x000005b6
    224c:	.word	0x9999999a
    2250:	.word	0x3fb99999
    2254:	.word	0xa0b5ed8d
    2258:	.word	0x3ea0c6f7
    225c:	.word	0x00000000
    2260:	.word	0x412e8480
    2264:	.word	0x00000000
    2268:	.word	0x40f51800

0000226c <coda_time_parts_to_double>:
    226c:	mov	ip, sp
    2270:	sub	sp, sp, #56	; 0x38
    2274:	str	ip, [sp, #4]
    2278:	str	lr, [sp, #8]
    227c:	str	r4, [sp, #16]
    2280:	str	r5, [sp, #20]
    2284:	str	r6, [sp, #24]
    2288:	str	r7, [sp, #28]
    228c:	str	r8, [sp, #32]
    2290:	ldr	r8, [ip, #12]
    2294:	ldr	r4, [ip, #8]
    2298:	ldr	r5, [ip, #4]
    229c:	ldr	r6, [ip]
    22a0:	mov	r7, r3
    22a4:	cmp	r8, #0
    22a8:	bne	22c8 <coda_time_parts_to_double+0x5c>
    22ac:	mvn	r0, #99	; 0x63
    22b0:	ldr	r1, [pc, #164]	; 235c <coda_time_parts_to_double+0xf0>
    22b4:	ldr	r2, [pc, #164]	; 2360 <coda_time_parts_to_double+0xf4>
    22b8:	movw	r3, #954	; 0x3ba
    22bc:	bl	0 <coda_set_error>
    22c0:	mvn	r0, #0
    22c4:	b	233c <coda_time_parts_to_double+0xd0>
    22c8:	add	r3, sp, #40	; 0x28
    22cc:	mov	ip, r0
    22d0:	mov	r0, r2
    22d4:	mov	r2, ip
    22d8:	bl	9dc <dmy_to_mjd2000>
    22dc:	cmp	r0, #0
    22e0:	beq	22ec <coda_time_parts_to_double+0x80>
    22e4:	mvn	r0, #0
    22e8:	b	233c <coda_time_parts_to_double+0xd0>
    22ec:	add	ip, sp, #48	; 0x30
    22f0:	str	ip, [sp]
    22f4:	mov	r3, r4
    22f8:	mov	r2, r5
    22fc:	mov	r1, r6
    2300:	mov	r0, r7
    2304:	bl	11b0 <hms_to_daytime>
    2308:	cmp	r0, #0
    230c:	beq	2318 <coda_time_parts_to_double+0xac>
    2310:	mvn	r0, #0
    2314:	b	233c <coda_time_parts_to_double+0xd0>
    2318:	vldr	d7, [pc, #68]	; 2364 <coda_time_parts_to_double+0xf8>
    231c:	ldr	r3, [sp, #40]	; 0x28
    2320:	vmov	s4, r3
    2324:	vcvt.f64.s32	d2, s4
    2328:	vmul.f64	d6, d7, d2
    232c:	vldr	d0, [sp, #48]	; 0x30
    2330:	vadd.f64	d0, d6, d0
    2334:	vstr	d0, [r8]
    2338:	mov	r0, #0
    233c:	ldr	r4, [sp, #16]
    2340:	ldr	r5, [sp, #20]
    2344:	ldr	r6, [sp, #24]
    2348:	ldr	r7, [sp, #28]
    234c:	ldr	r8, [sp, #32]
    2350:	ldr	lr, [sp, #8]
    2354:	add	sp, sp, #56	; 0x38
    2358:	bx	lr
    235c:	.word	0x000001fa
    2360:	.word	0x000006c6
    2364:	.word	0x00000000
    2368:	.word	0x40f51800

0000236c <coda_time_parts_to_double_utc>:
    236c:	mov	ip, sp
    2370:	sub	sp, sp, #64	; 0x40
    2374:	str	ip, [sp, #4]
    2378:	str	lr, [sp, #8]
    237c:	str	r4, [sp, #16]
    2380:	str	r5, [sp, #20]
    2384:	str	r6, [sp, #24]
    2388:	str	r7, [sp, #28]
    238c:	str	r8, [sp, #32]
    2390:	vstr	d8, [sp, #40]	; 0x28
    2394:	ldr	r6, [ip, #12]
    2398:	ldr	r5, [ip, #8]
    239c:	ldr	r7, [ip, #4]
    23a0:	ldr	r8, [ip]
    23a4:	mov	r4, r3
    23a8:	mov	ip, r2
    23ac:	mov	r2, r0
    23b0:	mov	r0, ip
    23b4:	cmp	r6, #0
    23b8:	bne	23d8 <coda_time_parts_to_double_utc+0x6c>
    23bc:	mvn	r0, #99	; 0x63
    23c0:	ldr	r1, [pc, #332]	; 2514 <coda_time_parts_to_double_utc+0x1a8>
    23c4:	ldr	r2, [pc, #332]	; 2518 <coda_time_parts_to_double_utc+0x1ac>
    23c8:	mov	r3, #1008	; 0x3f0
    23cc:	bl	0 <coda_set_error>
    23d0:	mvn	r0, #0
    23d4:	b	24e4 <coda_time_parts_to_double_utc+0x178>
    23d8:	add	r3, sp, #48	; 0x30
    23dc:	bl	9dc <dmy_to_mjd2000>
    23e0:	cmp	r0, #0
    23e4:	beq	23f0 <coda_time_parts_to_double_utc+0x84>
    23e8:	mvn	r0, #0
    23ec:	b	24e4 <coda_time_parts_to_double_utc+0x178>
    23f0:	add	r1, sp, #56	; 0x38
    23f4:	str	r1, [sp]
    23f8:	mov	r3, r5
    23fc:	mov	r2, r7
    2400:	mov	r1, r8
    2404:	mov	r0, r4
    2408:	bl	11b0 <hms_to_daytime>
    240c:	cmp	r0, #0
    2410:	beq	241c <coda_time_parts_to_double_utc+0xb0>
    2414:	mvn	r0, #0
    2418:	b	24e4 <coda_time_parts_to_double_utc+0x178>
    241c:	vldr	d6, [pc, #252]	; 2520 <coda_time_parts_to_double_utc+0x1b4>
    2420:	ldr	r0, [sp, #48]	; 0x30
    2424:	vmov	s0, r0
    2428:	vcvt.f64.s32	d0, s0
    242c:	vmul.f64	d4, d6, d0
    2430:	vmov.f64	d7, #36	; 0x41200000  10.0
    2434:	vadd.f64	d8, d4, d7
    2438:	ldr	r3, [pc, #200]	; 2508 <coda_time_parts_to_double_utc+0x19c>
    243c:	ldr	r2, [r3]
    2440:	cmp	r2, #0
    2444:	beq	2460 <coda_time_parts_to_double_utc+0xf4>
    2448:	ldr	r3, [pc, #192]	; 2510 <coda_time_parts_to_double_utc+0x1a4>
    244c:	ldr	r2, [r3]
    2450:	cmp	r2, #0
    2454:	movgt	ip, #1
    2458:	movle	ip, #0
    245c:	b	2464 <coda_time_parts_to_double_utc+0xf8>
    2460:	mov	ip, #0
    2464:	cmp	ip, #0
    2468:	bne	2480 <coda_time_parts_to_double_utc+0x114>
    246c:	ldr	r0, [pc, #152]	; 250c <coda_time_parts_to_double_utc+0x1a0>
    2470:	ldr	r1, [pc, #160]	; 2518 <coda_time_parts_to_double_utc+0x1ac>
    2474:	mov	r2, #1024	; 0x400
    2478:	ldr	r3, [pc, #156]	; 251c <coda_time_parts_to_double_utc+0x1b0>
    247c:	bl	0 <__assert_fail>
    2480:	mov	ip, #0
    2484:	ldr	r1, [pc, #132]	; 2510 <coda_time_parts_to_double_utc+0x1a4>
    2488:	ldr	r2, [r1]
    248c:	cmp	ip, r2
    2490:	bge	24b8 <coda_time_parts_to_double_utc+0x14c>
    2494:	ldr	r0, [pc, #108]	; 2508 <coda_time_parts_to_double_utc+0x19c>
    2498:	ldr	r3, [r0]
    249c:	add	r3, r3, ip, lsl #3
    24a0:	vldr	d3, [r3]
    24a4:	vcmp.f64	d8, d3
    24a8:	vmrs	APSR_nzcv, fpscr
    24ac:	movge	r2, #1
    24b0:	movlt	r2, #0
    24b4:	b	24bc <coda_time_parts_to_double_utc+0x150>
    24b8:	mov	r2, #0
    24bc:	cmp	r2, #0
    24c0:	beq	24d4 <coda_time_parts_to_double_utc+0x168>
    24c4:	vmov.f64	d2, #112	; 0x3f800000  1.0
    24c8:	vadd.f64	d8, d8, d2
    24cc:	add	ip, ip, #1
    24d0:	b	2484 <coda_time_parts_to_double_utc+0x118>
    24d4:	vldr	d2, [sp, #56]	; 0x38
    24d8:	vadd.f64	d0, d8, d2
    24dc:	vstr	d0, [r6]
    24e0:	mov	r0, #0
    24e4:	ldr	r4, [sp, #16]
    24e8:	ldr	r5, [sp, #20]
    24ec:	ldr	r6, [sp, #24]
    24f0:	ldr	r7, [sp, #28]
    24f4:	ldr	r8, [sp, #32]
    24f8:	vldr	d8, [sp, #40]	; 0x28
    24fc:	ldr	lr, [sp, #8]
    2500:	add	sp, sp, #64	; 0x40
    2504:	bx	lr
    2508:	.word	0x00000004
    250c:	.word	0x00000281
    2510:	.word	0x00000000
    2514:	.word	0x000001fa
    2518:	.word	0x000006c6
    251c:	.word	0x000008fc
    2520:	.word	0x00000000
    2524:	.word	0x40f51800

00002528 <coda_time_parts_to_string>:
    2528:	mov	ip, sp
    252c:	sub	sp, sp, #120	; 0x78
    2530:	str	ip, [sp]
    2534:	str	lr, [sp, #4]
    2538:	str	r4, [sp, #28]
    253c:	str	r5, [sp, #32]
    2540:	str	r6, [sp, #36]	; 0x24
    2544:	str	r7, [sp, #40]	; 0x28
    2548:	str	r8, [sp, #44]	; 0x2c
    254c:	str	r9, [sp, #48]	; 0x30
    2550:	str	sl, [sp, #52]	; 0x34
    2554:	str	fp, [sp, #56]	; 0x38
    2558:	ldr	sl, [ip, #16]
    255c:	ldr	r9, [ip, #12]
    2560:	ldr	ip, [ip, #8]
    2564:	str	ip, [sp, #16]
    2568:	ldr	ip, [sp]
    256c:	ldr	ip, [ip, #4]
    2570:	str	ip, [sp, #12]
    2574:	ldr	ip, [sp]
    2578:	ldr	ip, [ip]
    257c:	str	ip, [sp, #24]
    2580:	str	r3, [sp, #20]
    2584:	str	r2, [sp, #8]
    2588:	mov	r8, r1
    258c:	mov	r5, r0
    2590:	ldr	r0, [pc, #1860]	; 2cdc <coda_time_parts_to_string+0x7b4>
    2594:	str	r0, [sp, #72]	; 0x48
    2598:	ldr	r2, [pc, #1884]	; 2cfc <coda_time_parts_to_string+0x7d4>
    259c:	str	r2, [sp, #76]	; 0x4c
    25a0:	ldr	r1, [pc, #1856]	; 2ce8 <coda_time_parts_to_string+0x7c0>
    25a4:	str	r1, [sp, #80]	; 0x50
    25a8:	ldr	r2, [pc, #1840]	; 2ce0 <coda_time_parts_to_string+0x7b8>
    25ac:	str	r2, [sp, #84]	; 0x54
    25b0:	ldr	r1, [pc, #1936]	; 2d48 <coda_time_parts_to_string+0x820>
    25b4:	str	r1, [sp, #88]	; 0x58
    25b8:	ldr	r3, [pc, #1916]	; 2d3c <coda_time_parts_to_string+0x814>
    25bc:	str	r3, [sp, #92]	; 0x5c
    25c0:	ldr	ip, [pc, #1820]	; 2ce4 <coda_time_parts_to_string+0x7bc>
    25c4:	str	ip, [sp, #96]	; 0x60
    25c8:	ldr	r3, [pc, #1916]	; 2d4c <coda_time_parts_to_string+0x824>
    25cc:	str	r3, [sp, #100]	; 0x64
    25d0:	ldr	ip, [pc, #1836]	; 2d04 <coda_time_parts_to_string+0x7dc>
    25d4:	str	ip, [sp, #104]	; 0x68
    25d8:	ldr	r1, [pc, #1852]	; 2d1c <coda_time_parts_to_string+0x7f4>
    25dc:	str	r1, [sp, #108]	; 0x6c
    25e0:	ldr	ip, [pc, #1836]	; 2d14 <coda_time_parts_to_string+0x7ec>
    25e4:	str	ip, [sp, #112]	; 0x70
    25e8:	ldr	ip, [pc, #1852]	; 2d2c <coda_time_parts_to_string+0x804>
    25ec:	str	ip, [sp, #116]	; 0x74
    25f0:	mov	r6, #0
    25f4:	mov	fp, #0
    25f8:	mov	r4, #0
    25fc:	cmp	r9, #0
    2600:	bne	2620 <coda_time_parts_to_string+0xf8>
    2604:	mvn	r0, #99	; 0x63
    2608:	ldr	r1, [pc, #1816]	; 2d28 <coda_time_parts_to_string+0x800>
    260c:	ldr	r2, [pc, #1808]	; 2d24 <coda_time_parts_to_string+0x7fc>
    2610:	movw	r3, #1069	; 0x42d
    2614:	bl	0 <coda_set_error>
    2618:	mvn	r0, #0
    261c:	b	2cb0 <coda_time_parts_to_string+0x788>
    2620:	cmp	sl, #0
    2624:	bne	2644 <coda_time_parts_to_string+0x11c>
    2628:	mvn	r0, #99	; 0x63
    262c:	ldr	r1, [pc, #1756]	; 2d10 <coda_time_parts_to_string+0x7e8>
    2630:	ldr	r2, [pc, #1772]	; 2d24 <coda_time_parts_to_string+0x7fc>
    2634:	movw	r3, #1074	; 0x432
    2638:	bl	0 <coda_set_error>
    263c:	mvn	r0, #0
    2640:	b	2cb0 <coda_time_parts_to_string+0x788>
    2644:	ldrb	r3, [r9, fp]
    2648:	cmp	r3, #0
    264c:	beq	2680 <coda_time_parts_to_string+0x158>
    2650:	cmp	r6, #0
    2654:	bne	2678 <coda_time_parts_to_string+0x150>
    2658:	ldrb	r0, [r9, fp]
    265c:	cmp	r0, #124	; 0x7c
    2660:	movne	r3, #1
    2664:	moveq	r3, #0
    2668:	cmp	r3, #0
    266c:	movne	r1, #1
    2670:	moveq	r1, #0
    2674:	b	2684 <coda_time_parts_to_string+0x15c>
    2678:	mov	r1, #1
    267c:	b	2684 <coda_time_parts_to_string+0x15c>
    2680:	mov	r1, #0
    2684:	cmp	r1, #0
    2688:	beq	2c8c <coda_time_parts_to_string+0x764>
    268c:	ldrb	r0, [r9, fp]
    2690:	cmp	r0, #39	; 0x27
    2694:	bne	26b8 <coda_time_parts_to_string+0x190>
    2698:	add	fp, fp, #1
    269c:	ldrb	ip, [r9, fp]
    26a0:	cmp	ip, #39	; 0x27
    26a4:	beq	26b8 <coda_time_parts_to_string+0x190>
    26a8:	cmp	r6, #0
    26ac:	moveq	r6, #1
    26b0:	movne	r6, #0
    26b4:	b	2644 <coda_time_parts_to_string+0x11c>
    26b8:	cmp	r6, #0
    26bc:	bne	2c74 <coda_time_parts_to_string+0x74c>
    26c0:	ldrb	r2, [r9, fp]
    26c4:	cmp	r2, #121	; 0x79
    26c8:	bne	26e4 <coda_time_parts_to_string+0x1bc>
    26cc:	add	r1, r9, fp
    26d0:	ldrb	r3, [r1, #1]
    26d4:	cmp	r3, #121	; 0x79
    26d8:	moveq	r3, #1
    26dc:	movne	r3, #0
    26e0:	b	26e8 <coda_time_parts_to_string+0x1c0>
    26e4:	mov	r3, #0
    26e8:	cmp	r3, #0
    26ec:	beq	2708 <coda_time_parts_to_string+0x1e0>
    26f0:	add	ip, r9, fp
    26f4:	ldrb	r3, [ip, #2]
    26f8:	cmp	r3, #121	; 0x79
    26fc:	moveq	r2, #1
    2700:	movne	r2, #0
    2704:	b	270c <coda_time_parts_to_string+0x1e4>
    2708:	mov	r2, #0
    270c:	cmp	r2, #0
    2710:	beq	272c <coda_time_parts_to_string+0x204>
    2714:	add	r0, r9, fp
    2718:	ldrb	r0, [r0, #3]
    271c:	cmp	r0, #121	; 0x79
    2720:	moveq	ip, #1
    2724:	movne	ip, #0
    2728:	b	2730 <coda_time_parts_to_string+0x208>
    272c:	mov	ip, #0
    2730:	cmp	ip, #0
    2734:	bne	2c1c <coda_time_parts_to_string+0x6f4>
    2738:	ldrb	r2, [r9, fp]
    273c:	cmp	r2, #77	; 0x4d
    2740:	bne	275c <coda_time_parts_to_string+0x234>
    2744:	add	r0, r9, fp
    2748:	ldrb	r3, [r0, #1]
    274c:	cmp	r3, #77	; 0x4d
    2750:	moveq	r0, #1
    2754:	movne	r0, #0
    2758:	b	2760 <coda_time_parts_to_string+0x238>
    275c:	mov	r0, #0
    2760:	cmp	r0, #0
    2764:	bne	2b98 <coda_time_parts_to_string+0x670>
    2768:	ldrb	r3, [r9, fp]
    276c:	cmp	r3, #100	; 0x64
    2770:	bne	278c <coda_time_parts_to_string+0x264>
    2774:	add	r3, r9, fp
    2778:	ldrb	r3, [r3, #1]
    277c:	cmp	r3, #100	; 0x64
    2780:	moveq	ip, #1
    2784:	movne	ip, #0
    2788:	b	2790 <coda_time_parts_to_string+0x268>
    278c:	mov	ip, #0
    2790:	cmp	ip, #0
    2794:	bne	2b40 <coda_time_parts_to_string+0x618>
    2798:	ldrb	r2, [r9, fp]
    279c:	cmp	r2, #68	; 0x44
    27a0:	bne	27bc <coda_time_parts_to_string+0x294>
    27a4:	add	r0, r9, fp
    27a8:	ldrb	r2, [r0, #1]
    27ac:	cmp	r2, #68	; 0x44
    27b0:	moveq	r1, #1
    27b4:	movne	r1, #0
    27b8:	b	27c0 <coda_time_parts_to_string+0x298>
    27bc:	mov	r1, #0
    27c0:	cmp	r1, #0
    27c4:	beq	27e0 <coda_time_parts_to_string+0x2b8>
    27c8:	add	ip, r9, fp
    27cc:	ldrb	ip, [ip, #2]
    27d0:	cmp	ip, #68	; 0x44
    27d4:	moveq	r3, #1
    27d8:	movne	r3, #0
    27dc:	b	27e4 <coda_time_parts_to_string+0x2bc>
    27e0:	mov	r3, #0
    27e4:	cmp	r3, #0
    27e8:	bne	2ad0 <coda_time_parts_to_string+0x5a8>
    27ec:	ldrb	r1, [r9, fp]
    27f0:	cmp	r1, #72	; 0x48
    27f4:	bne	2810 <coda_time_parts_to_string+0x2e8>
    27f8:	add	ip, r9, fp
    27fc:	ldrb	r1, [ip, #1]
    2800:	cmp	r1, #72	; 0x48
    2804:	moveq	ip, #1
    2808:	movne	ip, #0
    280c:	b	2814 <coda_time_parts_to_string+0x2ec>
    2810:	mov	ip, #0
    2814:	cmp	ip, #0
    2818:	bne	2a78 <coda_time_parts_to_string+0x550>
    281c:	ldrb	r2, [r9, fp]
    2820:	cmp	r2, #109	; 0x6d
    2824:	bne	2840 <coda_time_parts_to_string+0x318>
    2828:	add	r0, r9, fp
    282c:	ldrb	r2, [r0, #1]
    2830:	cmp	r2, #109	; 0x6d
    2834:	moveq	ip, #1
    2838:	movne	ip, #0
    283c:	b	2844 <coda_time_parts_to_string+0x31c>
    2840:	mov	ip, #0
    2844:	cmp	ip, #0
    2848:	bne	2a20 <coda_time_parts_to_string+0x4f8>
    284c:	ldrb	r0, [r9, fp]
    2850:	cmp	r0, #115	; 0x73
    2854:	bne	2870 <coda_time_parts_to_string+0x348>
    2858:	add	r1, r9, fp
    285c:	ldrb	r2, [r1, #1]
    2860:	cmp	r2, #115	; 0x73
    2864:	moveq	r2, #1
    2868:	movne	r2, #0
    286c:	b	2874 <coda_time_parts_to_string+0x34c>
    2870:	mov	r2, #0
    2874:	cmp	r2, #0
    2878:	bne	29c8 <coda_time_parts_to_string+0x4a0>
    287c:	ldrb	r3, [r9, fp]
    2880:	cmp	r3, #83	; 0x53
    2884:	bne	292c <coda_time_parts_to_string+0x404>
    2888:	ldr	r3, [sp, #16]
    288c:	mov	r7, #0
    2890:	ldr	r1, [sp, #16]
    2894:	cmp	r1, #0
    2898:	blt	28b4 <coda_time_parts_to_string+0x38c>
    289c:	movw	lr, #16959	; 0x423f
    28a0:	movt	lr, #15
    28a4:	cmp	r1, lr
    28a8:	movgt	ip, #1
    28ac:	movle	ip, #0
    28b0:	b	28b8 <coda_time_parts_to_string+0x390>
    28b4:	mov	ip, #1
    28b8:	cmp	ip, #0
    28bc:	beq	28d4 <coda_time_parts_to_string+0x3ac>
    28c0:	mvn	r0, #103	; 0x67
    28c4:	ldr	r1, [pc, #1124]	; 2d30 <coda_time_parts_to_string+0x808>
    28c8:	bl	0 <coda_set_error>
    28cc:	mvn	r0, #0
    28d0:	b	2cb0 <coda_time_parts_to_string+0x788>
    28d4:	ldrb	ip, [r9, fp]
    28d8:	cmp	ip, #83	; 0x53
    28dc:	bne	28ec <coda_time_parts_to_string+0x3c4>
    28e0:	add	fp, fp, #1
    28e4:	add	r7, r7, #1
    28e8:	b	28d4 <coda_time_parts_to_string+0x3ac>
    28ec:	mov	ip, r7
    28f0:	cmp	ip, #6
    28f4:	bge	2914 <coda_time_parts_to_string+0x3ec>
    28f8:	lsr	r1, r3, #31
    28fc:	movw	r0, #26215	; 0x6667
    2900:	movt	r0, #26214	; 0x6666
    2904:	smull	lr, r3, r3, r0
    2908:	add	r3, r1, r3, asr #2
    290c:	add	ip, ip, #1
    2910:	b	28f0 <coda_time_parts_to_string+0x3c8>
    2914:	add	r0, sl, r4
    2918:	ldr	r1, [pc, #1044]	; 2d34 <coda_time_parts_to_string+0x80c>
    291c:	mov	r2, r7
    2920:	bl	0 <sprintf>
    2924:	add	r4, r4, r7
    2928:	b	2644 <coda_time_parts_to_string+0x11c>
    292c:	ldrb	r1, [r9, fp]
    2930:	cmp	r1, #65	; 0x41
    2934:	blt	294c <coda_time_parts_to_string+0x424>
    2938:	ldrb	r1, [r9, fp]
    293c:	cmp	r1, #90	; 0x5a
    2940:	movle	r2, #1
    2944:	movgt	r2, #0
    2948:	b	2950 <coda_time_parts_to_string+0x428>
    294c:	mov	r2, #0
    2950:	cmp	r2, #0
    2954:	bne	298c <coda_time_parts_to_string+0x464>
    2958:	ldrb	r0, [r9, fp]
    295c:	cmp	r0, #97	; 0x61
    2960:	blt	2984 <coda_time_parts_to_string+0x45c>
    2964:	ldrb	r2, [r9, fp]
    2968:	cmp	r2, #122	; 0x7a
    296c:	movle	ip, #1
    2970:	movgt	ip, #0
    2974:	cmp	ip, #0
    2978:	movne	r0, #1
    297c:	moveq	r0, #0
    2980:	b	2990 <coda_time_parts_to_string+0x468>
    2984:	mov	r0, #0
    2988:	b	2990 <coda_time_parts_to_string+0x468>
    298c:	mov	r0, #1
    2990:	cmp	r0, #0
    2994:	beq	29b0 <coda_time_parts_to_string+0x488>
    2998:	mvn	r0, #102	; 0x66
    299c:	ldr	r1, [pc, #928]	; 2d44 <coda_time_parts_to_string+0x81c>
    29a0:	mov	r2, r9
    29a4:	bl	0 <coda_set_error>
    29a8:	mvn	r0, #0
    29ac:	b	2cb0 <coda_time_parts_to_string+0x788>
    29b0:	ldrb	r1, [r9, fp]
    29b4:	and	r2, r1, #255	; 0xff
    29b8:	strb	r2, [sl, r4]
    29bc:	add	fp, fp, #1
    29c0:	add	r4, r4, #1
    29c4:	b	2644 <coda_time_parts_to_string+0x11c>
    29c8:	ldr	r1, [sp, #12]
    29cc:	cmp	r1, #0
    29d0:	blt	29e4 <coda_time_parts_to_string+0x4bc>
    29d4:	cmp	r1, #60	; 0x3c
    29d8:	movgt	r1, #1
    29dc:	movle	r1, #0
    29e0:	b	29e8 <coda_time_parts_to_string+0x4c0>
    29e4:	mov	r1, #1
    29e8:	cmp	r1, #0
    29ec:	beq	2a04 <coda_time_parts_to_string+0x4dc>
    29f0:	mvn	r0, #103	; 0x67
    29f4:	ldr	r1, [pc, #752]	; 2cec <coda_time_parts_to_string+0x7c4>
    29f8:	bl	0 <coda_set_error>
    29fc:	mvn	r0, #0
    2a00:	b	2cb0 <coda_time_parts_to_string+0x788>
    2a04:	add	r0, sl, r4
    2a08:	ldr	r1, [pc, #784]	; 2d20 <coda_time_parts_to_string+0x7f8>
    2a0c:	ldr	r2, [sp, #12]
    2a10:	bl	0 <sprintf>
    2a14:	add	fp, fp, #2
    2a18:	add	r4, r4, #2
    2a1c:	b	2644 <coda_time_parts_to_string+0x11c>
    2a20:	ldr	r0, [sp, #24]
    2a24:	cmp	r0, #0
    2a28:	blt	2a3c <coda_time_parts_to_string+0x514>
    2a2c:	cmp	r0, #59	; 0x3b
    2a30:	movgt	r1, #1
    2a34:	movle	r1, #0
    2a38:	b	2a40 <coda_time_parts_to_string+0x518>
    2a3c:	mov	r1, #1
    2a40:	cmp	r1, #0
    2a44:	beq	2a5c <coda_time_parts_to_string+0x534>
    2a48:	mvn	r0, #103	; 0x67
    2a4c:	ldr	r1, [pc, #668]	; 2cf0 <coda_time_parts_to_string+0x7c8>
    2a50:	bl	0 <coda_set_error>
    2a54:	mvn	r0, #0
    2a58:	b	2cb0 <coda_time_parts_to_string+0x788>
    2a5c:	add	r0, sl, r4
    2a60:	ldr	r1, [pc, #696]	; 2d20 <coda_time_parts_to_string+0x7f8>
    2a64:	ldr	r2, [sp, #24]
    2a68:	bl	0 <sprintf>
    2a6c:	add	fp, fp, #2
    2a70:	add	r4, r4, #2
    2a74:	b	2644 <coda_time_parts_to_string+0x11c>
    2a78:	ldr	r3, [sp, #20]
    2a7c:	cmp	r3, #0
    2a80:	blt	2a94 <coda_time_parts_to_string+0x56c>
    2a84:	cmp	r3, #23
    2a88:	movgt	r0, #1
    2a8c:	movle	r0, #0
    2a90:	b	2a98 <coda_time_parts_to_string+0x570>
    2a94:	mov	r0, #1
    2a98:	cmp	r0, #0
    2a9c:	beq	2ab4 <coda_time_parts_to_string+0x58c>
    2aa0:	mvn	r0, #103	; 0x67
    2aa4:	ldr	r1, [pc, #588]	; 2cf8 <coda_time_parts_to_string+0x7d0>
    2aa8:	bl	0 <coda_set_error>
    2aac:	mvn	r0, #0
    2ab0:	b	2cb0 <coda_time_parts_to_string+0x788>
    2ab4:	add	r0, sl, r4
    2ab8:	ldr	r1, [pc, #608]	; 2d20 <coda_time_parts_to_string+0x7f8>
    2abc:	ldr	r2, [sp, #20]
    2ac0:	bl	0 <sprintf>
    2ac4:	add	fp, fp, #2
    2ac8:	add	r4, r4, #2
    2acc:	b	2644 <coda_time_parts_to_string+0x11c>
    2ad0:	add	r3, sp, #68	; 0x44
    2ad4:	mov	r2, r5
    2ad8:	mov	r1, r8
    2adc:	ldr	r0, [sp, #8]
    2ae0:	bl	9dc <dmy_to_mjd2000>
    2ae4:	cmp	r0, #0
    2ae8:	beq	2af4 <coda_time_parts_to_string+0x5cc>
    2aec:	mvn	r0, #0
    2af0:	b	2cb0 <coda_time_parts_to_string+0x788>
    2af4:	mov	r0, #1
    2af8:	mov	r1, #1
    2afc:	add	r3, sp, #64	; 0x40
    2b00:	mov	r2, r5
    2b04:	bl	9dc <dmy_to_mjd2000>
    2b08:	cmp	r0, #0
    2b0c:	beq	2b18 <coda_time_parts_to_string+0x5f0>
    2b10:	mvn	r0, #0
    2b14:	b	2cb0 <coda_time_parts_to_string+0x788>
    2b18:	add	r0, sl, r4
    2b1c:	ldr	r1, [pc, #476]	; 2d00 <coda_time_parts_to_string+0x7d8>
    2b20:	ldr	r2, [sp, #68]	; 0x44
    2b24:	ldr	r3, [sp, #64]	; 0x40
    2b28:	sub	r2, r2, r3
    2b2c:	add	r2, r2, #1
    2b30:	bl	0 <sprintf>
    2b34:	add	fp, fp, #3
    2b38:	add	r4, r4, #3
    2b3c:	b	2644 <coda_time_parts_to_string+0x11c>
    2b40:	ldr	ip, [sp, #8]
    2b44:	cmp	ip, #1
    2b48:	blt	2b5c <coda_time_parts_to_string+0x634>
    2b4c:	cmp	ip, #31
    2b50:	movgt	ip, #1
    2b54:	movle	ip, #0
    2b58:	b	2b60 <coda_time_parts_to_string+0x638>
    2b5c:	mov	ip, #1
    2b60:	cmp	ip, #0
    2b64:	beq	2b7c <coda_time_parts_to_string+0x654>
    2b68:	mvn	r0, #103	; 0x67
    2b6c:	ldr	r1, [pc, #452]	; 2d38 <coda_time_parts_to_string+0x810>
    2b70:	bl	0 <coda_set_error>
    2b74:	mvn	r0, #0
    2b78:	b	2cb0 <coda_time_parts_to_string+0x788>
    2b7c:	add	r0, sl, r4
    2b80:	ldr	r1, [pc, #408]	; 2d20 <coda_time_parts_to_string+0x7f8>
    2b84:	ldr	r2, [sp, #8]
    2b88:	bl	0 <sprintf>
    2b8c:	add	fp, fp, #2
    2b90:	add	r4, r4, #2
    2b94:	b	2644 <coda_time_parts_to_string+0x11c>
    2b98:	cmp	r8, #1
    2b9c:	blt	2bb0 <coda_time_parts_to_string+0x688>
    2ba0:	cmp	r8, #12
    2ba4:	movgt	r2, #1
    2ba8:	movle	r2, #0
    2bac:	b	2bb4 <coda_time_parts_to_string+0x68c>
    2bb0:	mov	r2, #1
    2bb4:	cmp	r2, #0
    2bb8:	beq	2bd0 <coda_time_parts_to_string+0x6a8>
    2bbc:	mvn	r0, #103	; 0x67
    2bc0:	ldr	r1, [pc, #300]	; 2cf4 <coda_time_parts_to_string+0x7cc>
    2bc4:	bl	0 <coda_set_error>
    2bc8:	mvn	r0, #0
    2bcc:	b	2cb0 <coda_time_parts_to_string+0x788>
    2bd0:	add	r3, r9, fp
    2bd4:	ldrb	r2, [r3, #2]
    2bd8:	cmp	r2, #77	; 0x4d
    2bdc:	bne	2c00 <coda_time_parts_to_string+0x6d8>
    2be0:	add	r0, sl, r4
    2be4:	ldr	r1, [pc, #300]	; 2d18 <coda_time_parts_to_string+0x7f0>
    2be8:	add	r2, sp, #72	; 0x48
    2bec:	ldr	r2, [r2, r8, lsl #2]
    2bf0:	bl	0 <sprintf>
    2bf4:	add	fp, fp, #3
    2bf8:	add	r4, r4, #3
    2bfc:	b	2644 <coda_time_parts_to_string+0x11c>
    2c00:	add	r0, sl, r4
    2c04:	ldr	r1, [pc, #276]	; 2d20 <coda_time_parts_to_string+0x7f8>
    2c08:	mov	r2, r8
    2c0c:	bl	0 <sprintf>
    2c10:	add	fp, fp, #2
    2c14:	add	r4, r4, #2
    2c18:	b	2644 <coda_time_parts_to_string+0x11c>
    2c1c:	cmp	r5, #0
    2c20:	blt	2c38 <coda_time_parts_to_string+0x710>
    2c24:	movw	lr, #9999	; 0x270f
    2c28:	cmp	r5, lr
    2c2c:	movgt	r0, #1
    2c30:	movle	r0, #0
    2c34:	b	2c3c <coda_time_parts_to_string+0x714>
    2c38:	mov	r0, #1
    2c3c:	cmp	r0, #0
    2c40:	beq	2c58 <coda_time_parts_to_string+0x730>
    2c44:	mvn	r0, #103	; 0x67
    2c48:	ldr	r1, [pc, #240]	; 2d40 <coda_time_parts_to_string+0x818>
    2c4c:	bl	0 <coda_set_error>
    2c50:	mvn	r0, #0
    2c54:	b	2cb0 <coda_time_parts_to_string+0x788>
    2c58:	add	r0, sl, r4
    2c5c:	ldr	r1, [pc, #168]	; 2d0c <coda_time_parts_to_string+0x7e4>
    2c60:	mov	r2, r5
    2c64:	bl	0 <sprintf>
    2c68:	add	fp, fp, #4
    2c6c:	add	r4, r4, #4
    2c70:	b	2644 <coda_time_parts_to_string+0x11c>
    2c74:	ldrb	ip, [r9, fp]
    2c78:	and	r1, ip, #255	; 0xff
    2c7c:	strb	r1, [sl, r4]
    2c80:	add	fp, fp, #1
    2c84:	add	r4, r4, #1
    2c88:	b	2644 <coda_time_parts_to_string+0x11c>
    2c8c:	cmp	r6, #0
    2c90:	beq	2cac <coda_time_parts_to_string+0x784>
    2c94:	mvn	r0, #102	; 0x66
    2c98:	ldr	r1, [pc, #104]	; 2d08 <coda_time_parts_to_string+0x7e0>
    2c9c:	mov	r2, r9
    2ca0:	bl	0 <coda_set_error>
    2ca4:	mvn	r0, #0
    2ca8:	b	2cb0 <coda_time_parts_to_string+0x788>
    2cac:	mov	r0, #0
    2cb0:	ldr	r4, [sp, #28]
    2cb4:	ldr	r5, [sp, #32]
    2cb8:	ldr	r6, [sp, #36]	; 0x24
    2cbc:	ldr	r7, [sp, #40]	; 0x28
    2cc0:	ldr	r8, [sp, #44]	; 0x2c
    2cc4:	ldr	r9, [sp, #48]	; 0x30
    2cc8:	ldr	sl, [sp, #52]	; 0x34
    2ccc:	ldr	fp, [sp, #56]	; 0x38
    2cd0:	ldr	lr, [sp, #4]
    2cd4:	add	sp, sp, #120	; 0x78
    2cd8:	bx	lr
    2cdc:	.word	0x000003e1
    2ce0:	.word	0x000005dd
    2ce4:	.word	0x00000239
    2ce8:	.word	0x0000003a
    2cec:	.word	0x000001bf
    2cf0:	.word	0x000004e8
    2cf4:	.word	0x0000006a
    2cf8:	.word	0x0000003e
    2cfc:	.word	0x000000d8
    2d00:	.word	0x0000063a
    2d04:	.word	0x000000d4
    2d08:	.word	0x000002c2
    2d0c:	.word	0x000001ed
    2d10:	.word	0x00000827
    2d14:	.word	0x000003e5
    2d18:	.word	0x00000000
    2d1c:	.word	0x00000823
    2d20:	.word	0x00000741
    2d24:	.word	0x000006c6
    2d28:	.word	0x0000037b
    2d2c:	.word	0x000001f2
    2d30:	.word	0x00000100
    2d34:	.word	0x00000746
    2d38:	.word	0x00000338
    2d3c:	.word	0x000004c8
    2d40:	.word	0x00000472
    2d44:	.word	0x00000003
    2d48:	.word	0x000002b3
    2d4c:	.word	0x000007bd

00002d50 <string_to_parts>:
    2d50:	mov	ip, sp
    2d54:	sub	sp, sp, #72	; 0x48
    2d58:	str	ip, [sp]
    2d5c:	str	lr, [sp, #4]
    2d60:	str	r4, [sp, #28]
    2d64:	str	r5, [sp, #32]
    2d68:	str	r6, [sp, #36]	; 0x24
    2d6c:	str	r7, [sp, #40]	; 0x28
    2d70:	str	r8, [sp, #44]	; 0x2c
    2d74:	str	r9, [sp, #48]	; 0x30
    2d78:	str	sl, [sp, #52]	; 0x34
    2d7c:	str	fp, [sp, #56]	; 0x38
    2d80:	ldr	r5, [ip, #16]
    2d84:	ldr	ip, [ip, #12]
    2d88:	str	ip, [sp, #20]
    2d8c:	ldr	ip, [sp]
    2d90:	ldr	ip, [ip, #8]
    2d94:	str	ip, [sp, #16]
    2d98:	ldr	ip, [sp]
    2d9c:	ldr	ip, [ip, #4]
    2da0:	str	ip, [sp, #24]
    2da4:	ldr	ip, [sp]
    2da8:	ldr	ip, [ip]
    2dac:	str	ip, [sp, #8]
    2db0:	mov	r4, r3
    2db4:	str	r2, [sp, #12]
    2db8:	mov	r8, r1
    2dbc:	mov	r7, r0
    2dc0:	mov	fp, #0
    2dc4:	mov	r6, #0
    2dc8:	mov	r9, #0
    2dcc:	mov	ip, #2000	; 0x7d0
    2dd0:	ldr	r0, [sp, #12]
    2dd4:	str	ip, [r0]
    2dd8:	mov	r2, #1
    2ddc:	str	r2, [r4]
    2de0:	mov	r2, #1
    2de4:	ldr	r3, [sp, #8]
    2de8:	str	r2, [r3]
    2dec:	mov	r2, #0
    2df0:	ldr	r3, [sp, #24]
    2df4:	str	r2, [r3]
    2df8:	mov	r3, #0
    2dfc:	ldr	ip, [sp, #16]
    2e00:	str	r3, [ip]
    2e04:	mov	r0, #0
    2e08:	ldr	r1, [sp, #20]
    2e0c:	str	r0, [r1]
    2e10:	mov	ip, #0
    2e14:	str	ip, [r5]
    2e18:	ldrb	ip, [r7, fp]
    2e1c:	cmp	ip, #0
    2e20:	beq	2e54 <string_to_parts+0x104>
    2e24:	cmp	r9, #0
    2e28:	bne	2e4c <string_to_parts+0xfc>
    2e2c:	ldrb	r0, [r7, fp]
    2e30:	cmp	r0, #124	; 0x7c
    2e34:	movne	r1, #1
    2e38:	moveq	r1, #0
    2e3c:	cmp	r1, #0
    2e40:	movne	r3, #1
    2e44:	moveq	r3, #0
    2e48:	b	2e58 <string_to_parts+0x108>
    2e4c:	mov	r3, #1
    2e50:	b	2e58 <string_to_parts+0x108>
    2e54:	mov	r3, #0
    2e58:	cmp	r3, #0
    2e5c:	beq	3574 <string_to_parts+0x824>
    2e60:	ldrb	r1, [r7, fp]
    2e64:	cmp	r1, #39	; 0x27
    2e68:	bne	2e8c <string_to_parts+0x13c>
    2e6c:	add	fp, fp, #1
    2e70:	ldrb	r0, [r7, fp]
    2e74:	cmp	r0, #39	; 0x27
    2e78:	beq	2e8c <string_to_parts+0x13c>
    2e7c:	cmp	r9, #0
    2e80:	moveq	r9, #1
    2e84:	movne	r9, #0
    2e88:	b	2e18 <string_to_parts+0xc8>
    2e8c:	cmp	r9, #0
    2e90:	bne	353c <string_to_parts+0x7ec>
    2e94:	ldrb	r2, [r7, fp]
    2e98:	cmp	r2, #121	; 0x79
    2e9c:	bne	2eb8 <string_to_parts+0x168>
    2ea0:	add	r3, r7, fp
    2ea4:	ldrb	r3, [r3, #1]
    2ea8:	cmp	r3, #121	; 0x79
    2eac:	moveq	ip, #1
    2eb0:	movne	ip, #0
    2eb4:	b	2ebc <string_to_parts+0x16c>
    2eb8:	mov	ip, #0
    2ebc:	cmp	ip, #0
    2ec0:	beq	2edc <string_to_parts+0x18c>
    2ec4:	add	r1, r7, fp
    2ec8:	ldrb	r1, [r1, #2]
    2ecc:	cmp	r1, #121	; 0x79
    2ed0:	moveq	r2, #1
    2ed4:	movne	r2, #0
    2ed8:	b	2ee0 <string_to_parts+0x190>
    2edc:	mov	r2, #0
    2ee0:	cmp	r2, #0
    2ee4:	beq	2f00 <string_to_parts+0x1b0>
    2ee8:	add	r0, r7, fp
    2eec:	ldrb	r1, [r0, #3]
    2ef0:	cmp	r1, #121	; 0x79
    2ef4:	moveq	r0, #1
    2ef8:	movne	r0, #0
    2efc:	b	2f04 <string_to_parts+0x1b4>
    2f00:	mov	r0, #0
    2f04:	cmp	r0, #0
    2f08:	bne	34d4 <string_to_parts+0x784>
    2f0c:	ldrb	r2, [r7, fp]
    2f10:	cmp	r2, #77	; 0x4d
    2f14:	bne	2f30 <string_to_parts+0x1e0>
    2f18:	add	r3, r7, fp
    2f1c:	ldrb	r1, [r3, #1]
    2f20:	cmp	r1, #77	; 0x4d
    2f24:	moveq	r3, #1
    2f28:	movne	r3, #0
    2f2c:	b	2f34 <string_to_parts+0x1e4>
    2f30:	mov	r3, #0
    2f34:	cmp	r3, #0
    2f38:	bne	3418 <string_to_parts+0x6c8>
    2f3c:	ldrb	r0, [r7, fp]
    2f40:	cmp	r0, #100	; 0x64
    2f44:	bne	2f60 <string_to_parts+0x210>
    2f48:	add	r2, r7, fp
    2f4c:	ldrb	r2, [r2, #1]
    2f50:	cmp	r2, #100	; 0x64
    2f54:	moveq	r2, #1
    2f58:	movne	r2, #0
    2f5c:	b	2f64 <string_to_parts+0x214>
    2f60:	mov	r2, #0
    2f64:	cmp	r2, #0
    2f68:	bne	33ac <string_to_parts+0x65c>
    2f6c:	ldrb	r0, [r7, fp]
    2f70:	cmp	r0, #68	; 0x44
    2f74:	bne	2f90 <string_to_parts+0x240>
    2f78:	add	r3, r7, fp
    2f7c:	ldrb	r3, [r3, #1]
    2f80:	cmp	r3, #68	; 0x44
    2f84:	moveq	r0, #1
    2f88:	movne	r0, #0
    2f8c:	b	2f94 <string_to_parts+0x244>
    2f90:	mov	r0, #0
    2f94:	cmp	r0, #0
    2f98:	beq	2fb4 <string_to_parts+0x264>
    2f9c:	add	r0, r7, fp
    2fa0:	ldrb	r3, [r0, #2]
    2fa4:	cmp	r3, #68	; 0x44
    2fa8:	moveq	ip, #1
    2fac:	movne	ip, #0
    2fb0:	b	2fb8 <string_to_parts+0x268>
    2fb4:	mov	ip, #0
    2fb8:	cmp	ip, #0
    2fbc:	bne	3304 <string_to_parts+0x5b4>
    2fc0:	ldrb	r3, [r7, fp]
    2fc4:	cmp	r3, #72	; 0x48
    2fc8:	bne	2fe4 <string_to_parts+0x294>
    2fcc:	add	ip, r7, fp
    2fd0:	ldrb	ip, [ip, #1]
    2fd4:	cmp	ip, #72	; 0x48
    2fd8:	moveq	r2, #1
    2fdc:	movne	r2, #0
    2fe0:	b	2fe8 <string_to_parts+0x298>
    2fe4:	mov	r2, #0
    2fe8:	cmp	r2, #0
    2fec:	bne	3298 <string_to_parts+0x548>
    2ff0:	ldrb	r0, [r7, fp]
    2ff4:	cmp	r0, #109	; 0x6d
    2ff8:	bne	3014 <string_to_parts+0x2c4>
    2ffc:	add	ip, r7, fp
    3000:	ldrb	r1, [ip, #1]
    3004:	cmp	r1, #109	; 0x6d
    3008:	moveq	r2, #1
    300c:	movne	r2, #0
    3010:	b	3018 <string_to_parts+0x2c8>
    3014:	mov	r2, #0
    3018:	cmp	r2, #0
    301c:	bne	322c <string_to_parts+0x4dc>
    3020:	ldrb	r1, [r7, fp]
    3024:	cmp	r1, #115	; 0x73
    3028:	bne	3044 <string_to_parts+0x2f4>
    302c:	add	ip, r7, fp
    3030:	ldrb	ip, [ip, #1]
    3034:	cmp	ip, #115	; 0x73
    3038:	moveq	ip, #1
    303c:	movne	ip, #0
    3040:	b	3048 <string_to_parts+0x2f8>
    3044:	mov	ip, #0
    3048:	cmp	ip, #0
    304c:	bne	31c0 <string_to_parts+0x470>
    3050:	ldrb	r0, [r7, fp]
    3054:	cmp	r0, #83	; 0x53
    3058:	bne	30e4 <string_to_parts+0x394>
    305c:	mov	sl, #0
    3060:	ldrb	r1, [r7, fp]
    3064:	cmp	r1, #83	; 0x53
    3068:	bne	3078 <string_to_parts+0x328>
    306c:	add	fp, fp, #1
    3070:	add	sl, sl, #1
    3074:	b	3060 <string_to_parts+0x310>
    3078:	cmp	sl, #6
    307c:	ble	3088 <string_to_parts+0x338>
    3080:	mov	r1, #6
    3084:	b	308c <string_to_parts+0x33c>
    3088:	mov	r1, sl
    308c:	add	r0, r8, r6
    3090:	mov	r2, #0
    3094:	mov	r3, r5
    3098:	bl	210 <parse_integer>
    309c:	cmp	r0, #0
    30a0:	beq	30c0 <string_to_parts+0x370>
    30a4:	mvn	r0, #103	; 0x67
    30a8:	ldr	r1, [pc, #1364]	; 3604 <string_to_parts+0x8b4>
    30ac:	mov	r3, r7
    30b0:	mov	r2, r8
    30b4:	bl	0 <coda_set_error>
    30b8:	mvn	r0, #0
    30bc:	b	35c0 <string_to_parts+0x870>
    30c0:	add	r6, r6, sl
    30c4:	cmp	sl, #6
    30c8:	bge	2e18 <string_to_parts+0xc8>
    30cc:	ldr	ip, [r5]
    30d0:	lsl	r0, ip, #3
    30d4:	add	r2, r0, ip, lsl #1
    30d8:	str	r2, [r5]
    30dc:	add	sl, sl, #1
    30e0:	b	30c4 <string_to_parts+0x374>
    30e4:	ldrb	r0, [r7, fp]
    30e8:	cmp	r0, #65	; 0x41
    30ec:	blt	3104 <string_to_parts+0x3b4>
    30f0:	ldrb	r3, [r7, fp]
    30f4:	cmp	r3, #90	; 0x5a
    30f8:	movle	ip, #1
    30fc:	movgt	ip, #0
    3100:	b	3108 <string_to_parts+0x3b8>
    3104:	mov	ip, #0
    3108:	cmp	ip, #0
    310c:	bne	3144 <string_to_parts+0x3f4>
    3110:	ldrb	r2, [r7, fp]
    3114:	cmp	r2, #97	; 0x61
    3118:	blt	313c <string_to_parts+0x3ec>
    311c:	ldrb	r3, [r7, fp]
    3120:	cmp	r3, #122	; 0x7a
    3124:	movle	r3, #1
    3128:	movgt	r3, #0
    312c:	cmp	r3, #0
    3130:	movne	r3, #1
    3134:	moveq	r3, #0
    3138:	b	3148 <string_to_parts+0x3f8>
    313c:	mov	r3, #0
    3140:	b	3148 <string_to_parts+0x3f8>
    3144:	mov	r3, #1
    3148:	cmp	r3, #0
    314c:	bne	3164 <string_to_parts+0x414>
    3150:	ldrb	r2, [r7, fp]
    3154:	cmp	r2, #42	; 0x2a
    3158:	moveq	ip, #1
    315c:	movne	ip, #0
    3160:	b	3168 <string_to_parts+0x418>
    3164:	mov	ip, #1
    3168:	cmp	ip, #0
    316c:	bne	31a8 <string_to_parts+0x458>
    3170:	ldrb	ip, [r7, fp]
    3174:	ldrb	r2, [r8, r6]
    3178:	cmp	ip, r2
    317c:	beq	319c <string_to_parts+0x44c>
    3180:	mvn	r0, #103	; 0x67
    3184:	ldr	r1, [pc, #1156]	; 3610 <string_to_parts+0x8c0>
    3188:	mov	r3, r7
    318c:	mov	r2, r8
    3190:	bl	0 <coda_set_error>
    3194:	mvn	r0, #0
    3198:	b	35c0 <string_to_parts+0x870>
    319c:	add	fp, fp, #1
    31a0:	add	r6, r6, #1
    31a4:	b	2e18 <string_to_parts+0xc8>
    31a8:	mvn	r0, #102	; 0x66
    31ac:	ldr	r1, [pc, #1120]	; 3614 <string_to_parts+0x8c4>
    31b0:	mov	r2, r7
    31b4:	bl	0 <coda_set_error>
    31b8:	mvn	r0, #0
    31bc:	b	35c0 <string_to_parts+0x870>
    31c0:	add	r3, r7, fp
    31c4:	ldrb	r2, [r3, #2]
    31c8:	cmp	r2, #42	; 0x2a
    31cc:	moveq	r2, #1
    31d0:	movne	r2, #0
    31d4:	add	r0, r8, r6
    31d8:	mov	r1, #2
    31dc:	ldr	r3, [sp, #20]
    31e0:	bl	210 <parse_integer>
    31e4:	cmp	r0, #0
    31e8:	beq	3208 <string_to_parts+0x4b8>
    31ec:	mvn	r0, #103	; 0x67
    31f0:	ldr	r1, [pc, #1020]	; 35f4 <string_to_parts+0x8a4>
    31f4:	mov	r3, r7
    31f8:	mov	r2, r8
    31fc:	bl	0 <coda_set_error>
    3200:	mvn	r0, #0
    3204:	b	35c0 <string_to_parts+0x870>
    3208:	add	r3, r7, fp
    320c:	ldrb	r0, [r3, #2]
    3210:	cmp	r0, #42	; 0x2a
    3214:	moveq	r2, #1
    3218:	movne	r2, #0
    321c:	add	ip, fp, r2
    3220:	add	fp, ip, #2
    3224:	add	r6, r6, #2
    3228:	b	2e18 <string_to_parts+0xc8>
    322c:	add	r1, r7, fp
    3230:	ldrb	ip, [r1, #2]
    3234:	cmp	ip, #42	; 0x2a
    3238:	moveq	r2, #1
    323c:	movne	r2, #0
    3240:	add	r0, r8, r6
    3244:	mov	r1, #2
    3248:	ldr	r3, [sp, #16]
    324c:	bl	210 <parse_integer>
    3250:	cmp	r0, #0
    3254:	beq	3274 <string_to_parts+0x524>
    3258:	mvn	r0, #103	; 0x67
    325c:	ldr	r1, [pc, #908]	; 35f0 <string_to_parts+0x8a0>
    3260:	mov	r3, r7
    3264:	mov	r2, r8
    3268:	bl	0 <coda_set_error>
    326c:	mvn	r0, #0
    3270:	b	35c0 <string_to_parts+0x870>
    3274:	add	r1, r7, fp
    3278:	ldrb	r2, [r1, #2]
    327c:	cmp	r2, #42	; 0x2a
    3280:	moveq	ip, #1
    3284:	movne	ip, #0
    3288:	add	r3, fp, ip
    328c:	add	fp, r3, #2
    3290:	add	r6, r6, #2
    3294:	b	2e18 <string_to_parts+0xc8>
    3298:	add	r0, r7, fp
    329c:	ldrb	r2, [r0, #2]
    32a0:	cmp	r2, #42	; 0x2a
    32a4:	moveq	r2, #1
    32a8:	movne	r2, #0
    32ac:	add	r0, r8, r6
    32b0:	mov	r1, #2
    32b4:	ldr	r3, [sp, #24]
    32b8:	bl	210 <parse_integer>
    32bc:	cmp	r0, #0
    32c0:	beq	32e0 <string_to_parts+0x590>
    32c4:	mvn	r0, #103	; 0x67
    32c8:	ldr	r1, [pc, #812]	; 35fc <string_to_parts+0x8ac>
    32cc:	mov	r3, r7
    32d0:	mov	r2, r8
    32d4:	bl	0 <coda_set_error>
    32d8:	mvn	r0, #0
    32dc:	b	35c0 <string_to_parts+0x870>
    32e0:	add	r3, r7, fp
    32e4:	ldrb	r1, [r3, #2]
    32e8:	cmp	r1, #42	; 0x2a
    32ec:	moveq	ip, #1
    32f0:	movne	ip, #0
    32f4:	add	r2, fp, ip
    32f8:	add	fp, r2, #2
    32fc:	add	r6, r6, #2
    3300:	b	2e18 <string_to_parts+0xc8>
    3304:	add	r0, r7, fp
    3308:	ldrb	r3, [r0, #3]
    330c:	cmp	r3, #42	; 0x2a
    3310:	moveq	r2, #1
    3314:	movne	r2, #0
    3318:	add	r0, r8, r6
    331c:	mov	r1, #3
    3320:	add	r3, sp, #64	; 0x40
    3324:	bl	210 <parse_integer>
    3328:	cmp	r0, #0
    332c:	beq	334c <string_to_parts+0x5fc>
    3330:	mvn	r0, #103	; 0x67
    3334:	ldr	r1, [pc, #720]	; 360c <string_to_parts+0x8bc>
    3338:	mov	r3, r7
    333c:	mov	r2, r8
    3340:	bl	0 <coda_set_error>
    3344:	mvn	r0, #0
    3348:	b	35c0 <string_to_parts+0x870>
    334c:	ldr	r1, [sp, #12]
    3350:	ldr	r0, [r1]
    3354:	ldr	r1, [sp, #64]	; 0x40
    3358:	ldr	r3, [sp, #8]
    335c:	mov	r2, r4
    3360:	bl	1348 <coda_dayofyear_to_month_day>
    3364:	cmp	r0, #0
    3368:	beq	3388 <string_to_parts+0x638>
    336c:	mvn	r0, #103	; 0x67
    3370:	ldr	r1, [pc, #648]	; 3600 <string_to_parts+0x8b0>
    3374:	mov	r3, r7
    3378:	mov	r2, r8
    337c:	bl	0 <coda_set_error>
    3380:	mvn	r0, #0
    3384:	b	35c0 <string_to_parts+0x870>
    3388:	add	r1, r7, fp
    338c:	ldrb	r3, [r1, #3]
    3390:	cmp	r3, #42	; 0x2a
    3394:	moveq	r1, #1
    3398:	movne	r1, #0
    339c:	add	r3, fp, r1
    33a0:	add	fp, r3, #3
    33a4:	add	r6, r6, #3
    33a8:	b	2e18 <string_to_parts+0xc8>
    33ac:	add	r0, r7, fp
    33b0:	ldrb	r0, [r0, #2]
    33b4:	cmp	r0, #42	; 0x2a
    33b8:	moveq	r2, #1
    33bc:	movne	r2, #0
    33c0:	add	r0, r8, r6
    33c4:	mov	r1, #2
    33c8:	ldr	r3, [sp, #8]
    33cc:	bl	210 <parse_integer>
    33d0:	cmp	r0, #0
    33d4:	beq	33f4 <string_to_parts+0x6a4>
    33d8:	mvn	r0, #103	; 0x67
    33dc:	ldr	r1, [pc, #552]	; 360c <string_to_parts+0x8bc>
    33e0:	mov	r3, r7
    33e4:	mov	r2, r8
    33e8:	bl	0 <coda_set_error>
    33ec:	mvn	r0, #0
    33f0:	b	35c0 <string_to_parts+0x870>
    33f4:	add	ip, r7, fp
    33f8:	ldrb	r1, [ip, #2]
    33fc:	cmp	r1, #42	; 0x2a
    3400:	moveq	r1, #1
    3404:	movne	r1, #0
    3408:	add	r2, fp, r1
    340c:	add	fp, r2, #2
    3410:	add	r6, r6, #2
    3414:	b	2e18 <string_to_parts+0xc8>
    3418:	add	r1, r7, fp
    341c:	ldrb	r1, [r1, #2]
    3420:	cmp	r1, #77	; 0x4d
    3424:	beq	3494 <string_to_parts+0x744>
    3428:	add	r3, r7, fp
    342c:	ldrb	ip, [r3, #2]
    3430:	cmp	ip, #42	; 0x2a
    3434:	moveq	r2, #1
    3438:	movne	r2, #0
    343c:	add	r0, r8, r6
    3440:	mov	r1, #2
    3444:	mov	r3, r4
    3448:	bl	210 <parse_integer>
    344c:	cmp	r0, #0
    3450:	beq	3470 <string_to_parts+0x720>
    3454:	mvn	r0, #103	; 0x67
    3458:	ldr	r1, [pc, #424]	; 3608 <string_to_parts+0x8b8>
    345c:	mov	r3, r7
    3460:	mov	r2, r8
    3464:	bl	0 <coda_set_error>
    3468:	mvn	r0, #0
    346c:	b	35c0 <string_to_parts+0x870>
    3470:	add	ip, r7, fp
    3474:	ldrb	ip, [ip, #2]
    3478:	cmp	ip, #42	; 0x2a
    347c:	moveq	r3, #1
    3480:	movne	r3, #0
    3484:	add	ip, fp, r3
    3488:	add	fp, ip, #2
    348c:	add	r6, r6, #2
    3490:	b	2e18 <string_to_parts+0xc8>
    3494:	add	r0, r8, r6
    3498:	bl	0 <coda_month_to_integer>
    349c:	str	r0, [r4]
    34a0:	ldr	r3, [r4]
    34a4:	cmn	r3, #1
    34a8:	bne	34c8 <string_to_parts+0x778>
    34ac:	mvn	r0, #103	; 0x67
    34b0:	ldr	r1, [pc, #336]	; 3608 <string_to_parts+0x8b8>
    34b4:	mov	r3, r7
    34b8:	mov	r2, r8
    34bc:	bl	0 <coda_set_error>
    34c0:	mvn	r0, #0
    34c4:	b	35c0 <string_to_parts+0x870>
    34c8:	add	fp, fp, #3
    34cc:	add	r6, r6, #3
    34d0:	b	2e18 <string_to_parts+0xc8>
    34d4:	add	ip, r7, fp
    34d8:	ldrb	r1, [ip, #4]
    34dc:	cmp	r1, #42	; 0x2a
    34e0:	moveq	r2, #1
    34e4:	movne	r2, #0
    34e8:	add	r0, r8, r6
    34ec:	mov	r1, #4
    34f0:	ldr	r3, [sp, #12]
    34f4:	bl	210 <parse_integer>
    34f8:	cmp	r0, #0
    34fc:	beq	351c <string_to_parts+0x7cc>
    3500:	mvn	r0, #103	; 0x67
    3504:	ldr	r1, [pc, #268]	; 3618 <string_to_parts+0x8c8>
    3508:	mov	r3, r7
    350c:	mov	r2, r8
    3510:	bl	0 <coda_set_error>
    3514:	mvn	r0, #0
    3518:	b	35c0 <string_to_parts+0x870>
    351c:	ldrb	r0, [r7, fp]
    3520:	cmp	r0, #42	; 0x2a
    3524:	moveq	r1, #1
    3528:	movne	r1, #0
    352c:	add	r2, fp, r1
    3530:	add	fp, r2, #4
    3534:	add	r6, r6, #4
    3538:	b	2e18 <string_to_parts+0xc8>
    353c:	ldrb	r1, [r7, fp]
    3540:	ldrb	r0, [r8, r6]
    3544:	cmp	r1, r0
    3548:	beq	3568 <string_to_parts+0x818>
    354c:	mvn	r0, #103	; 0x67
    3550:	ldr	r1, [pc, #184]	; 3610 <string_to_parts+0x8c0>
    3554:	mov	r3, r7
    3558:	mov	r2, r8
    355c:	bl	0 <coda_set_error>
    3560:	mvn	r0, #0
    3564:	b	35c0 <string_to_parts+0x870>
    3568:	add	fp, fp, #1
    356c:	add	r6, r6, #1
    3570:	b	2e18 <string_to_parts+0xc8>
    3574:	cmp	r9, #0
    3578:	beq	3594 <string_to_parts+0x844>
    357c:	mvn	r0, #102	; 0x66
    3580:	ldr	r1, [pc, #112]	; 35f8 <string_to_parts+0x8a8>
    3584:	mov	r2, r7
    3588:	bl	0 <coda_set_error>
    358c:	mvn	r0, #0
    3590:	b	35c0 <string_to_parts+0x870>
    3594:	ldrb	r0, [r8, r6]
    3598:	cmp	r0, #0
    359c:	beq	35bc <string_to_parts+0x86c>
    35a0:	mvn	r0, #103	; 0x67
    35a4:	ldr	r1, [pc, #64]	; 35ec <string_to_parts+0x89c>
    35a8:	mov	r3, r7
    35ac:	mov	r2, r8
    35b0:	bl	0 <coda_set_error>
    35b4:	mvn	r0, #0
    35b8:	b	35c0 <string_to_parts+0x870>
    35bc:	mov	r0, #0
    35c0:	ldr	r4, [sp, #28]
    35c4:	ldr	r5, [sp, #32]
    35c8:	ldr	r6, [sp, #36]	; 0x24
    35cc:	ldr	r7, [sp, #40]	; 0x28
    35d0:	ldr	r8, [sp, #44]	; 0x2c
    35d4:	ldr	r9, [sp, #48]	; 0x30
    35d8:	ldr	sl, [sp, #52]	; 0x34
    35dc:	ldr	fp, [sp, #56]	; 0x38
    35e0:	ldr	lr, [sp, #4]
    35e4:	add	sp, sp, #72	; 0x48
    35e8:	bx	lr
    35ec:	.word	0x0000023d
    35f0:	.word	0x0000017c
    35f4:	.word	0x000002ed
    35f8:	.word	0x000002c2
    35fc:	.word	0x0000055a
    3600:	.word	0x000007c1
    3604:	.word	0x000005e1
    3608:	.word	0x0000063f
    360c:	.word	0x0000051a
    3610:	.word	0x0000039b
    3614:	.word	0x00000003
    3618:	.word	0x00000681

0000361c <coda_time_string_to_parts>:
    361c:	mov	ip, sp
    3620:	sub	sp, sp, #80	; 0x50
    3624:	str	ip, [sp, #20]
    3628:	str	lr, [sp, #24]
    362c:	str	r4, [sp, #44]	; 0x2c
    3630:	str	r5, [sp, #48]	; 0x30
    3634:	str	r6, [sp, #52]	; 0x34
    3638:	str	r7, [sp, #56]	; 0x38
    363c:	str	r8, [sp, #60]	; 0x3c
    3640:	str	r9, [sp, #64]	; 0x40
    3644:	str	sl, [sp, #68]	; 0x44
    3648:	str	fp, [sp, #72]	; 0x48
    364c:	ldr	r9, [ip, #16]
    3650:	ldr	sl, [ip, #12]
    3654:	ldr	r6, [ip, #8]
    3658:	ldr	ip, [ip, #4]
    365c:	str	ip, [sp, #32]
    3660:	ldr	ip, [sp, #20]
    3664:	ldr	ip, [ip]
    3668:	str	ip, [sp, #36]	; 0x24
    366c:	mov	r5, r3
    3670:	str	r2, [sp, #40]	; 0x28
    3674:	mov	r7, r1
    3678:	mov	fp, r0
    367c:	mov	r8, #0
    3680:	mov	r4, #0
    3684:	cmp	fp, #0
    3688:	bne	36a8 <coda_time_string_to_parts+0x8c>
    368c:	mvn	r0, #99	; 0x63
    3690:	ldr	r1, [pc, #708]	; 395c <coda_time_string_to_parts+0x340>
    3694:	ldr	r2, [pc, #700]	; 3958 <coda_time_string_to_parts+0x33c>
    3698:	movw	r3, #1468	; 0x5bc
    369c:	bl	0 <coda_set_error>
    36a0:	mvn	r0, #0
    36a4:	b	3924 <coda_time_string_to_parts+0x308>
    36a8:	cmp	r7, #0
    36ac:	bne	36cc <coda_time_string_to_parts+0xb0>
    36b0:	mvn	r0, #99	; 0x63
    36b4:	ldr	r1, [pc, #664]	; 3954 <coda_time_string_to_parts+0x338>
    36b8:	ldr	r2, [pc, #664]	; 3958 <coda_time_string_to_parts+0x33c>
    36bc:	movw	r3, #1473	; 0x5c1
    36c0:	bl	0 <coda_set_error>
    36c4:	mvn	r0, #0
    36c8:	b	3924 <coda_time_string_to_parts+0x308>
    36cc:	ldr	r0, [sp, #40]	; 0x28
    36d0:	cmp	r0, #0
    36d4:	beq	36e8 <coda_time_string_to_parts+0xcc>
    36d8:	cmp	r5, #0
    36dc:	moveq	ip, #1
    36e0:	movne	ip, #0
    36e4:	b	36ec <coda_time_string_to_parts+0xd0>
    36e8:	mov	ip, #1
    36ec:	cmp	ip, #0
    36f0:	bne	3708 <coda_time_string_to_parts+0xec>
    36f4:	ldr	r3, [sp, #36]	; 0x24
    36f8:	cmp	r3, #0
    36fc:	moveq	r1, #1
    3700:	movne	r1, #0
    3704:	b	370c <coda_time_string_to_parts+0xf0>
    3708:	mov	r1, #1
    370c:	cmp	r1, #0
    3710:	bne	3728 <coda_time_string_to_parts+0x10c>
    3714:	ldr	ip, [sp, #32]
    3718:	cmp	ip, #0
    371c:	moveq	r1, #1
    3720:	movne	r1, #0
    3724:	b	372c <coda_time_string_to_parts+0x110>
    3728:	mov	r1, #1
    372c:	cmp	r1, #0
    3730:	bne	3744 <coda_time_string_to_parts+0x128>
    3734:	cmp	r6, #0
    3738:	moveq	ip, #1
    373c:	movne	ip, #0
    3740:	b	3748 <coda_time_string_to_parts+0x12c>
    3744:	mov	ip, #1
    3748:	cmp	ip, #0
    374c:	bne	3760 <coda_time_string_to_parts+0x144>
    3750:	cmp	sl, #0
    3754:	moveq	r2, #1
    3758:	movne	r2, #0
    375c:	b	3764 <coda_time_string_to_parts+0x148>
    3760:	mov	r2, #1
    3764:	cmp	r2, #0
    3768:	bne	377c <coda_time_string_to_parts+0x160>
    376c:	cmp	r9, #0
    3770:	moveq	r3, #1
    3774:	movne	r3, #0
    3778:	b	3780 <coda_time_string_to_parts+0x164>
    377c:	mov	r3, #1
    3780:	cmp	r3, #0
    3784:	beq	37a4 <coda_time_string_to_parts+0x188>
    3788:	mvn	r0, #99	; 0x63
    378c:	ldr	r1, [pc, #460]	; 3960 <coda_time_string_to_parts+0x344>
    3790:	ldr	r2, [pc, #448]	; 3958 <coda_time_string_to_parts+0x33c>
    3794:	movw	r3, #1479	; 0x5c7
    3798:	bl	0 <coda_set_error>
    379c:	mvn	r0, #0
    37a0:	b	3924 <coda_time_string_to_parts+0x308>
    37a4:	ldrb	r2, [fp, r4]
    37a8:	cmp	r2, #0
    37ac:	beq	37e0 <coda_time_string_to_parts+0x1c4>
    37b0:	cmp	r8, #0
    37b4:	bne	37d8 <coda_time_string_to_parts+0x1bc>
    37b8:	ldrb	r3, [fp, r4]
    37bc:	cmp	r3, #124	; 0x7c
    37c0:	movne	r2, #1
    37c4:	moveq	r2, #0
    37c8:	cmp	r2, #0
    37cc:	movne	ip, #1
    37d0:	moveq	ip, #0
    37d4:	b	37e4 <coda_time_string_to_parts+0x1c8>
    37d8:	mov	ip, #1
    37dc:	b	37e4 <coda_time_string_to_parts+0x1c8>
    37e0:	mov	ip, #0
    37e4:	cmp	ip, #0
    37e8:	beq	380c <coda_time_string_to_parts+0x1f0>
    37ec:	ldrb	r3, [fp, r4]
    37f0:	cmp	r3, #39	; 0x27
    37f4:	bne	3804 <coda_time_string_to_parts+0x1e8>
    37f8:	cmp	r8, #0
    37fc:	moveq	r8, #1
    3800:	movne	r8, #0
    3804:	add	r4, r4, #1
    3808:	b	37a4 <coda_time_string_to_parts+0x188>
    380c:	ldrb	r2, [fp, r4]
    3810:	cmp	r2, #124	; 0x7c
    3814:	bne	38f4 <coda_time_string_to_parts+0x2d8>
    3818:	mov	r1, #0
    381c:	add	r0, fp, r1
    3820:	str	r9, [sp, #16]
    3824:	str	sl, [sp, #12]
    3828:	str	r6, [sp, #8]
    382c:	ldr	ip, [sp, #32]
    3830:	str	ip, [sp, #4]
    3834:	ldr	ip, [sp, #36]	; 0x24
    3838:	str	ip, [sp]
    383c:	mov	r3, r5
    3840:	ldr	r2, [sp, #40]	; 0x28
    3844:	mov	r1, r7
    3848:	bl	2d50 <string_to_parts>
    384c:	cmp	r0, #0
    3850:	bne	385c <coda_time_string_to_parts+0x240>
    3854:	mov	r0, #0
    3858:	b	3924 <coda_time_string_to_parts+0x308>
    385c:	ldrb	ip, [fp, r4]
    3860:	cmp	ip, #0
    3864:	bne	3884 <coda_time_string_to_parts+0x268>
    3868:	mvn	r0, #103	; 0x67
    386c:	ldr	r1, [pc, #220]	; 3950 <coda_time_string_to_parts+0x334>
    3870:	mov	r3, fp
    3874:	mov	r2, r7
    3878:	bl	0 <coda_set_error>
    387c:	mvn	r0, #0
    3880:	b	3924 <coda_time_string_to_parts+0x308>
    3884:	add	r4, r4, #1
    3888:	mov	r1, r4
    388c:	ldrb	r0, [fp, r4]
    3890:	cmp	r0, #0
    3894:	beq	38c8 <coda_time_string_to_parts+0x2ac>
    3898:	cmp	r8, #0
    389c:	bne	38c0 <coda_time_string_to_parts+0x2a4>
    38a0:	ldrb	r0, [fp, r4]
    38a4:	cmp	r0, #124	; 0x7c
    38a8:	movne	r2, #1
    38ac:	moveq	r2, #0
    38b0:	cmp	r2, #0
    38b4:	movne	r2, #1
    38b8:	moveq	r2, #0
    38bc:	b	38cc <coda_time_string_to_parts+0x2b0>
    38c0:	mov	r2, #1
    38c4:	b	38cc <coda_time_string_to_parts+0x2b0>
    38c8:	mov	r2, #0
    38cc:	cmp	r2, #0
    38d0:	beq	381c <coda_time_string_to_parts+0x200>
    38d4:	ldrb	r3, [fp, r4]
    38d8:	cmp	r3, #39	; 0x27
    38dc:	bne	38ec <coda_time_string_to_parts+0x2d0>
    38e0:	cmp	r8, #0
    38e4:	moveq	r8, #1
    38e8:	movne	r8, #0
    38ec:	add	r4, r4, #1
    38f0:	b	388c <coda_time_string_to_parts+0x270>
    38f4:	str	r9, [sp, #16]
    38f8:	str	sl, [sp, #12]
    38fc:	str	r6, [sp, #8]
    3900:	ldr	ip, [sp, #32]
    3904:	str	ip, [sp, #4]
    3908:	ldr	ip, [sp, #36]	; 0x24
    390c:	str	ip, [sp]
    3910:	mov	r3, r5
    3914:	ldr	r2, [sp, #40]	; 0x28
    3918:	mov	r1, r7
    391c:	mov	r0, fp
    3920:	bl	2d50 <string_to_parts>
    3924:	ldr	r4, [sp, #44]	; 0x2c
    3928:	ldr	r5, [sp, #48]	; 0x30
    392c:	ldr	r6, [sp, #52]	; 0x34
    3930:	ldr	r7, [sp, #56]	; 0x38
    3934:	ldr	r8, [sp, #60]	; 0x3c
    3938:	ldr	r9, [sp, #64]	; 0x40
    393c:	ldr	sl, [sp, #68]	; 0x44
    3940:	ldr	fp, [sp, #72]	; 0x48
    3944:	ldr	lr, [sp, #24]
    3948:	add	sp, sp, #80	; 0x50
    394c:	bx	lr
    3950:	.word	0x000003e9
    3954:	.word	0x00000827
    3958:	.word	0x000006c6
    395c:	.word	0x0000037b
    3960:	.word	0x000005b6

00003964 <coda_time_double_to_string>:
    3964:	mov	ip, sp
    3968:	sub	sp, sp, #80	; 0x50
    396c:	str	ip, [sp, #20]
    3970:	str	lr, [sp, #24]
    3974:	str	r4, [sp, #32]
    3978:	str	r5, [sp, #36]	; 0x24
    397c:	str	r6, [sp, #40]	; 0x28
    3980:	str	r8, [sp, #44]	; 0x2c
    3984:	mov	r4, r1
    3988:	mov	r5, r0
    398c:	add	r0, sp, #60	; 0x3c
    3990:	add	r1, sp, #64	; 0x40
    3994:	add	r2, sp, #68	; 0x44
    3998:	add	r3, sp, #72	; 0x48
    399c:	add	r8, sp, #52	; 0x34
    39a0:	add	r6, sp, #56	; 0x38
    39a4:	add	ip, sp, #48	; 0x30
    39a8:	str	ip, [sp, #8]
    39ac:	str	r6, [sp, #4]
    39b0:	str	r8, [sp]
    39b4:	bl	1c20 <coda_time_double_to_parts>
    39b8:	cmp	r0, #0
    39bc:	beq	39c8 <coda_time_double_to_string+0x64>
    39c0:	mvn	r0, #0
    39c4:	b	39fc <coda_time_double_to_string+0x98>
    39c8:	ldr	r0, [sp, #60]	; 0x3c
    39cc:	ldr	r1, [sp, #64]	; 0x40
    39d0:	ldr	r2, [sp, #68]	; 0x44
    39d4:	ldr	r3, [sp, #72]	; 0x48
    39d8:	ldr	ip, [sp, #52]	; 0x34
    39dc:	ldr	r8, [sp, #56]	; 0x38
    39e0:	ldr	r6, [sp, #48]	; 0x30
    39e4:	str	r4, [sp, #16]
    39e8:	str	r5, [sp, #12]
    39ec:	str	r6, [sp, #8]
    39f0:	str	r8, [sp, #4]
    39f4:	str	ip, [sp]
    39f8:	bl	2528 <coda_time_parts_to_string>
    39fc:	ldr	r4, [sp, #32]
    3a00:	ldr	r5, [sp, #36]	; 0x24
    3a04:	ldr	r6, [sp, #40]	; 0x28
    3a08:	ldr	r8, [sp, #44]	; 0x2c
    3a0c:	ldr	lr, [sp, #24]
    3a10:	add	sp, sp, #80	; 0x50
    3a14:	bx	lr

00003a18 <coda_time_double_to_string_utc>:
    3a18:	mov	ip, sp
    3a1c:	sub	sp, sp, #80	; 0x50
    3a20:	str	ip, [sp, #20]
    3a24:	str	lr, [sp, #24]
    3a28:	str	r4, [sp, #32]
    3a2c:	str	r5, [sp, #36]	; 0x24
    3a30:	str	r6, [sp, #40]	; 0x28
    3a34:	str	r8, [sp, #44]	; 0x2c
    3a38:	mov	r4, r1
    3a3c:	mov	r5, r0
    3a40:	add	r0, sp, #60	; 0x3c
    3a44:	add	r1, sp, #64	; 0x40
    3a48:	add	r2, sp, #68	; 0x44
    3a4c:	add	r3, sp, #72	; 0x48
    3a50:	add	r8, sp, #52	; 0x34
    3a54:	add	r6, sp, #56	; 0x38
    3a58:	add	ip, sp, #48	; 0x30
    3a5c:	str	ip, [sp, #8]
    3a60:	str	r6, [sp, #4]
    3a64:	str	r8, [sp]
    3a68:	bl	1ec0 <coda_time_double_to_parts_utc>
    3a6c:	cmp	r0, #0
    3a70:	beq	3a7c <coda_time_double_to_string_utc+0x64>
    3a74:	mvn	r0, #0
    3a78:	b	3ab0 <coda_time_double_to_string_utc+0x98>
    3a7c:	ldr	r0, [sp, #60]	; 0x3c
    3a80:	ldr	r1, [sp, #64]	; 0x40
    3a84:	ldr	r2, [sp, #68]	; 0x44
    3a88:	ldr	r3, [sp, #72]	; 0x48
    3a8c:	ldr	ip, [sp, #52]	; 0x34
    3a90:	ldr	r8, [sp, #56]	; 0x38
    3a94:	ldr	r6, [sp, #48]	; 0x30
    3a98:	str	r4, [sp, #16]
    3a9c:	str	r5, [sp, #12]
    3aa0:	str	r6, [sp, #8]
    3aa4:	str	r8, [sp, #4]
    3aa8:	str	ip, [sp]
    3aac:	bl	2528 <coda_time_parts_to_string>
    3ab0:	ldr	r4, [sp, #32]
    3ab4:	ldr	r5, [sp, #36]	; 0x24
    3ab8:	ldr	r6, [sp, #40]	; 0x28
    3abc:	ldr	r8, [sp, #44]	; 0x2c
    3ac0:	ldr	lr, [sp, #24]
    3ac4:	add	sp, sp, #80	; 0x50
    3ac8:	bx	lr

00003acc <coda_time_string_to_double>:
    3acc:	mov	ip, sp
    3ad0:	sub	sp, sp, #88	; 0x58
    3ad4:	str	ip, [sp, #20]
    3ad8:	str	lr, [sp, #24]
    3adc:	str	r4, [sp, #32]
    3ae0:	str	r5, [sp, #36]	; 0x24
    3ae4:	str	r6, [sp, #40]	; 0x28
    3ae8:	str	r7, [sp, #44]	; 0x2c
    3aec:	str	r8, [sp, #48]	; 0x30
    3af0:	str	r9, [sp, #52]	; 0x34
    3af4:	mov	r4, r2
    3af8:	add	r2, sp, #68	; 0x44
    3afc:	add	r3, sp, #72	; 0x48
    3b00:	add	r5, sp, #76	; 0x4c
    3b04:	add	r6, sp, #80	; 0x50
    3b08:	add	r9, sp, #60	; 0x3c
    3b0c:	add	r8, sp, #64	; 0x40
    3b10:	add	ip, sp, #56	; 0x38
    3b14:	str	ip, [sp, #16]
    3b18:	str	r8, [sp, #12]
    3b1c:	str	r9, [sp, #8]
    3b20:	str	r6, [sp, #4]
    3b24:	str	r5, [sp]
    3b28:	bl	361c <coda_time_string_to_parts>
    3b2c:	cmp	r0, #0
    3b30:	beq	3b3c <coda_time_string_to_double+0x70>
    3b34:	mvn	r0, #0
    3b38:	b	3b6c <coda_time_string_to_double+0xa0>
    3b3c:	ldr	r0, [sp, #68]	; 0x44
    3b40:	ldr	r1, [sp, #72]	; 0x48
    3b44:	ldr	r2, [sp, #76]	; 0x4c
    3b48:	ldr	r3, [sp, #80]	; 0x50
    3b4c:	ldr	ip, [sp, #60]	; 0x3c
    3b50:	ldr	r7, [sp, #64]	; 0x40
    3b54:	ldr	r6, [sp, #56]	; 0x38
    3b58:	str	r4, [sp, #12]
    3b5c:	str	r6, [sp, #8]
    3b60:	str	r7, [sp, #4]
    3b64:	str	ip, [sp]
    3b68:	bl	226c <coda_time_parts_to_double>
    3b6c:	ldr	r4, [sp, #32]
    3b70:	ldr	r5, [sp, #36]	; 0x24
    3b74:	ldr	r6, [sp, #40]	; 0x28
    3b78:	ldr	r7, [sp, #44]	; 0x2c
    3b7c:	ldr	r8, [sp, #48]	; 0x30
    3b80:	ldr	r9, [sp, #52]	; 0x34
    3b84:	ldr	lr, [sp, #24]
    3b88:	add	sp, sp, #88	; 0x58
    3b8c:	bx	lr

00003b90 <coda_time_string_to_double_utc>:
    3b90:	mov	ip, sp
    3b94:	sub	sp, sp, #88	; 0x58
    3b98:	str	ip, [sp, #20]
    3b9c:	str	lr, [sp, #24]
    3ba0:	str	r4, [sp, #32]
    3ba4:	str	r5, [sp, #36]	; 0x24
    3ba8:	str	r6, [sp, #40]	; 0x28
    3bac:	str	r7, [sp, #44]	; 0x2c
    3bb0:	str	r8, [sp, #48]	; 0x30
    3bb4:	str	r9, [sp, #52]	; 0x34
    3bb8:	mov	r4, r2
    3bbc:	add	r2, sp, #68	; 0x44
    3bc0:	add	r3, sp, #72	; 0x48
    3bc4:	add	r5, sp, #76	; 0x4c
    3bc8:	add	r6, sp, #80	; 0x50
    3bcc:	add	r9, sp, #60	; 0x3c
    3bd0:	add	r8, sp, #64	; 0x40
    3bd4:	add	ip, sp, #56	; 0x38
    3bd8:	str	ip, [sp, #16]
    3bdc:	str	r8, [sp, #12]
    3be0:	str	r9, [sp, #8]
    3be4:	str	r6, [sp, #4]
    3be8:	str	r5, [sp]
    3bec:	bl	361c <coda_time_string_to_parts>
    3bf0:	cmp	r0, #0
    3bf4:	beq	3c00 <coda_time_string_to_double_utc+0x70>
    3bf8:	mvn	r0, #0
    3bfc:	b	3c30 <coda_time_string_to_double_utc+0xa0>
    3c00:	ldr	r0, [sp, #68]	; 0x44
    3c04:	ldr	r1, [sp, #72]	; 0x48
    3c08:	ldr	r2, [sp, #76]	; 0x4c
    3c0c:	ldr	r3, [sp, #80]	; 0x50
    3c10:	ldr	ip, [sp, #60]	; 0x3c
    3c14:	ldr	r7, [sp, #64]	; 0x40
    3c18:	ldr	r6, [sp, #56]	; 0x38
    3c1c:	str	r4, [sp, #12]
    3c20:	str	r6, [sp, #8]
    3c24:	str	r7, [sp, #4]
    3c28:	str	ip, [sp]
    3c2c:	bl	236c <coda_time_parts_to_double_utc>
    3c30:	ldr	r4, [sp, #32]
    3c34:	ldr	r5, [sp, #36]	; 0x24
    3c38:	ldr	r6, [sp, #40]	; 0x28
    3c3c:	ldr	r7, [sp, #44]	; 0x2c
    3c40:	ldr	r8, [sp, #48]	; 0x30
    3c44:	ldr	r9, [sp, #52]	; 0x34
    3c48:	ldr	lr, [sp, #24]
    3c4c:	add	sp, sp, #88	; 0x58
    3c50:	bx	lr

00003c54 <coda_datetime_to_double>:
    3c54:	mov	ip, sp
    3c58:	sub	sp, sp, #40	; 0x28
    3c5c:	str	ip, [sp, #16]
    3c60:	str	lr, [sp, #20]
    3c64:	str	r4, [sp, #24]
    3c68:	str	r5, [sp, #28]
    3c6c:	str	r6, [sp, #32]
    3c70:	str	r7, [sp, #36]	; 0x24
    3c74:	ldr	r4, [ip, #12]
    3c78:	ldr	r6, [ip, #8]
    3c7c:	ldr	r5, [ip, #4]
    3c80:	ldr	r7, [ip]
    3c84:	str	r4, [sp, #12]
    3c88:	str	r6, [sp, #8]
    3c8c:	str	r5, [sp, #4]
    3c90:	str	r7, [sp]
    3c94:	bl	226c <coda_time_parts_to_double>
    3c98:	ldr	r4, [sp, #24]
    3c9c:	ldr	r5, [sp, #28]
    3ca0:	ldr	r6, [sp, #32]
    3ca4:	ldr	r7, [sp, #36]	; 0x24
    3ca8:	ldr	lr, [sp, #20]
    3cac:	add	sp, sp, #40	; 0x28
    3cb0:	bx	lr

00003cb4 <coda_double_to_datetime>:
    3cb4:	mov	ip, sp
    3cb8:	sub	sp, sp, #40	; 0x28
    3cbc:	str	ip, [sp, #12]
    3cc0:	str	lr, [sp, #16]
    3cc4:	str	r4, [sp, #24]
    3cc8:	str	r5, [sp, #28]
    3ccc:	str	r6, [sp, #32]
    3cd0:	ldr	r4, [ip, #8]
    3cd4:	ldr	r6, [ip, #4]
    3cd8:	ldr	r5, [ip]
    3cdc:	str	r4, [sp, #8]
    3ce0:	str	r6, [sp, #4]
    3ce4:	str	r5, [sp]
    3ce8:	bl	1c20 <coda_time_double_to_parts>
    3cec:	ldr	r4, [sp, #24]
    3cf0:	ldr	r5, [sp, #28]
    3cf4:	ldr	r6, [sp, #32]
    3cf8:	ldr	lr, [sp, #16]
    3cfc:	add	sp, sp, #40	; 0x28
    3d00:	bx	lr

00003d04 <coda_time_to_string>:
    3d04:	mov	ip, sp
    3d08:	sub	sp, sp, #8
    3d0c:	str	ip, [sp]
    3d10:	str	lr, [sp, #4]
    3d14:	mov	r1, r0
    3d18:	ldr	r0, [pc, #12]	; 3d2c <coda_time_to_string+0x28>
    3d1c:	bl	3964 <coda_time_double_to_string>
    3d20:	ldr	lr, [sp, #4]
    3d24:	add	sp, sp, #8
    3d28:	bx	lr
    3d2c:	.word	0x00000457

00003d30 <coda_string_to_time>:
    3d30:	mov	ip, sp
    3d34:	sub	sp, sp, #8
    3d38:	str	ip, [sp]
    3d3c:	str	lr, [sp, #4]
    3d40:	mov	r2, r1
    3d44:	mov	r1, r0
    3d48:	ldr	r0, [pc, #12]	; 3d5c <coda_string_to_time+0x2c>
    3d4c:	bl	3acc <coda_time_string_to_double>
    3d50:	ldr	lr, [sp, #4]
    3d54:	add	sp, sp, #8
    3d58:	bx	lr
    3d5c:	.word	0x00000844

00003d60 <coda_utcdatetime_to_double>:
    3d60:	mov	ip, sp
    3d64:	sub	sp, sp, #40	; 0x28
    3d68:	str	ip, [sp, #16]
    3d6c:	str	lr, [sp, #20]
    3d70:	str	r4, [sp, #24]
    3d74:	str	r5, [sp, #28]
    3d78:	str	r6, [sp, #32]
    3d7c:	str	r7, [sp, #36]	; 0x24
    3d80:	ldr	r4, [ip, #12]
    3d84:	ldr	r6, [ip, #8]
    3d88:	ldr	r5, [ip, #4]
    3d8c:	ldr	r7, [ip]
    3d90:	str	r4, [sp, #12]
    3d94:	str	r6, [sp, #8]
    3d98:	str	r5, [sp, #4]
    3d9c:	str	r7, [sp]
    3da0:	bl	236c <coda_time_parts_to_double_utc>
    3da4:	ldr	r4, [sp, #24]
    3da8:	ldr	r5, [sp, #28]
    3dac:	ldr	r6, [sp, #32]
    3db0:	ldr	r7, [sp, #36]	; 0x24
    3db4:	ldr	lr, [sp, #20]
    3db8:	add	sp, sp, #40	; 0x28
    3dbc:	bx	lr

00003dc0 <coda_double_to_utcdatetime>:
    3dc0:	mov	ip, sp
    3dc4:	sub	sp, sp, #40	; 0x28
    3dc8:	str	ip, [sp, #12]
    3dcc:	str	lr, [sp, #16]
    3dd0:	str	r4, [sp, #24]
    3dd4:	str	r5, [sp, #28]
    3dd8:	str	r6, [sp, #32]
    3ddc:	ldr	r4, [ip, #8]
    3de0:	ldr	r6, [ip, #4]
    3de4:	ldr	r5, [ip]
    3de8:	str	r4, [sp, #8]
    3dec:	str	r6, [sp, #4]
    3df0:	str	r5, [sp]
    3df4:	bl	1ec0 <coda_time_double_to_parts_utc>
    3df8:	ldr	r4, [sp, #24]
    3dfc:	ldr	r5, [sp, #28]
    3e00:	ldr	r6, [sp, #32]
    3e04:	ldr	lr, [sp, #16]
    3e08:	add	sp, sp, #40	; 0x28
    3e0c:	bx	lr

00003e10 <coda_time_to_utcstring>:
    3e10:	mov	ip, sp
    3e14:	sub	sp, sp, #8
    3e18:	str	ip, [sp]
    3e1c:	str	lr, [sp, #4]
    3e20:	mov	r1, r0
    3e24:	ldr	r0, [pc, #12]	; 3e38 <coda_time_to_utcstring+0x28>
    3e28:	bl	3a18 <coda_time_double_to_string_utc>
    3e2c:	ldr	lr, [sp, #4]
    3e30:	add	sp, sp, #8
    3e34:	bx	lr
    3e38:	.word	0x00000457

00003e3c <coda_utcstring_to_time>:
    3e3c:	mov	ip, sp
    3e40:	sub	sp, sp, #8
    3e44:	str	ip, [sp]
    3e48:	str	lr, [sp, #4]
    3e4c:	mov	r2, r1
    3e50:	mov	r1, r0
    3e54:	ldr	r0, [pc, #12]	; 3e68 <coda_utcstring_to_time+0x2c>
    3e58:	bl	3b90 <coda_time_string_to_double_utc>
    3e5c:	ldr	lr, [sp, #4]
    3e60:	add	sp, sp, #8
    3e64:	bx	lr
    3e68:	.word	0x00000844
