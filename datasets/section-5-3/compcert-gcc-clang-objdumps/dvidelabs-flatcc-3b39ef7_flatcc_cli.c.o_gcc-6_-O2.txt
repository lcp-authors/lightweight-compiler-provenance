
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
   0:	push	{r4, lr}
   4:	mov	r4, r0
   8:	ldr	r2, [pc, #64]	; 50 <usage+0x50>
   c:	ldr	r1, [pc, #64]	; 54 <usage+0x54>
  10:	bl	0 <fprintf>
  14:	mov	r0, r4
  18:	ldr	r2, [pc, #56]	; 58 <usage+0x58>
  1c:	ldr	r1, [pc, #56]	; 5c <usage+0x5c>
  20:	bl	0 <fprintf>
  24:	mov	r3, r4
  28:	mov	r2, #35	; 0x23
  2c:	mov	r1, #1
  30:	ldr	r0, [pc, #40]	; 60 <usage+0x60>
  34:	bl	0 <fwrite>
  38:	mov	r3, r4
  3c:	ldr	r2, [pc, #32]	; 64 <usage+0x64>
  40:	mov	r1, #1
  44:	ldr	r0, [pc, #28]	; 68 <usage+0x68>
  48:	pop	{r4, lr}
  4c:	b	0 <fwrite>
  50:	.word	0x00000000
  54:	.word	0x00000038
  58:	.word	0x0000003c
  5c:	.word	0x00000044
  60:	.word	0x00000054
  64:	.word	0x00000581
  68:	.word	0x00000078

0000006c <help>:
  6c:	push	{r4, lr}
  70:	mov	r4, r0
  74:	bl	0 <usage>
  78:	mov	r3, r4
  7c:	ldr	r2, [pc, #12]	; 90 <help+0x24>
  80:	mov	r1, #1
  84:	ldr	r0, [pc, #8]	; 94 <help+0x28>
  88:	pop	{r4, lr}
  8c:	b	0 <fwrite>
  90:	.word	0x00000c44
  94:	.word	0x000005fc

00000098 <parse_bool_arg>:
  98:	push	{r4, lr}
  9c:	mov	r4, r0
  a0:	ldr	r1, [pc, #104]	; 110 <parse_bool_arg+0x78>
  a4:	bl	0 <strcmp>
  a8:	cmp	r0, #0
  ac:	popeq	{r4, pc}
  b0:	ldr	r1, [pc, #92]	; 114 <parse_bool_arg+0x7c>
  b4:	mov	r0, r4
  b8:	bl	0 <strcmp>
  bc:	cmp	r0, #0
  c0:	popeq	{r4, pc}
  c4:	ldr	r1, [pc, #76]	; 118 <parse_bool_arg+0x80>
  c8:	mov	r0, r4
  cc:	bl	0 <strcmp>
  d0:	cmp	r0, #0
  d4:	beq	ec <parse_bool_arg+0x54>
  d8:	ldr	r1, [pc, #60]	; 11c <parse_bool_arg+0x84>
  dc:	mov	r0, r4
  e0:	bl	0 <strcmp>
  e4:	cmp	r0, #0
  e8:	bne	f4 <parse_bool_arg+0x5c>
  ec:	mov	r0, #1
  f0:	pop	{r4, pc}
  f4:	ldr	r3, [pc, #36]	; 120 <parse_bool_arg+0x88>
  f8:	mov	r2, r4
  fc:	ldr	r1, [pc, #32]	; 124 <parse_bool_arg+0x8c>
 100:	ldr	r0, [r3]
 104:	bl	0 <fprintf>
 108:	mvn	r0, #0
 10c:	pop	{r4, pc}
 110:	.word	0x00001244
 114:	.word	0x00001248
 118:	.word	0x0000124c
 11c:	.word	0x00001250
 120:	.word	0x00000000
 124:	.word	0x00001254

00000128 <match_long_arg>:
 128:	push	{r4, r5, r6, lr}
 12c:	mov	r5, r0
 130:	mov	r4, r2
 134:	bl	0 <strncmp>
 138:	cmp	r0, #0
 13c:	bne	158 <match_long_arg+0x30>
 140:	mov	r0, r5
 144:	bl	0 <strlen>
 148:	sub	r0, r4, r0
 14c:	clz	r0, r0
 150:	lsr	r0, r0, #5
 154:	pop	{r4, r5, r6, pc}
 158:	mov	r0, #0
 15c:	pop	{r4, r5, r6, pc}

00000160 <set_opt>:
 160:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 164:	mov	r6, r0
 168:	mov	r0, r1
 16c:	mov	r4, r1
 170:	mov	r8, r2
 174:	bl	0 <strlen>
 178:	mov	r1, #61	; 0x3d
 17c:	mov	r7, r0
 180:	mov	r0, r4
 184:	bl	0 <strchr>
 188:	ldrb	r9, [r4]
 18c:	subs	r5, r0, #0
 190:	addne	r8, r5, #1
 194:	subne	r7, r5, r4
 198:	cmp	r9, #104	; 0x68
 19c:	beq	434 <set_opt+0x2d4>
 1a0:	mov	r1, r4
 1a4:	ldr	r0, [pc, #1312]	; 6cc <set_opt+0x56c>
 1a8:	bl	0 <strcmp>
 1ac:	cmp	r0, #0
 1b0:	beq	434 <set_opt+0x2d4>
 1b4:	mov	r1, r4
 1b8:	ldr	r0, [pc, #1296]	; 6d0 <set_opt+0x570>
 1bc:	bl	0 <strcmp>
 1c0:	subs	sl, r0, #0
 1c4:	beq	448 <set_opt+0x2e8>
 1c8:	mov	r1, r4
 1cc:	ldr	r0, [pc, #1280]	; 6d4 <set_opt+0x574>
 1d0:	bl	0 <strcmp>
 1d4:	cmp	r0, #0
 1d8:	beq	294 <set_opt+0x134>
 1dc:	mov	r1, r4
 1e0:	ldr	r0, [pc, #1264]	; 6d8 <set_opt+0x578>
 1e4:	bl	0 <strcmp>
 1e8:	cmp	r0, #0
 1ec:	beq	288 <set_opt+0x128>
 1f0:	mov	r1, r4
 1f4:	ldr	r0, [pc, #1248]	; 6dc <set_opt+0x57c>
 1f8:	bl	0 <strcmp>
 1fc:	cmp	r0, #0
 200:	beq	2ac <set_opt+0x14c>
 204:	mov	r1, r4
 208:	ldr	r0, [pc, #1232]	; 6e0 <set_opt+0x580>
 20c:	bl	0 <strcmp>
 210:	cmp	r0, #0
 214:	beq	2a0 <set_opt+0x140>
 218:	mov	r1, r4
 21c:	ldr	r0, [pc, #1216]	; 6e4 <set_opt+0x584>
 220:	bl	0 <strcmp>
 224:	cmp	r0, #0
 228:	beq	2b8 <set_opt+0x158>
 22c:	mov	r2, r7
 230:	mov	r1, r4
 234:	ldr	r0, [pc, #1196]	; 6e8 <set_opt+0x588>
 238:	bl	128 <match_long_arg>
 23c:	cmp	r0, #0
 240:	bne	304 <set_opt+0x1a4>
 244:	mov	r2, r7
 248:	mov	r1, r4
 24c:	ldr	r0, [pc, #1176]	; 6ec <set_opt+0x58c>
 250:	bl	128 <match_long_arg>
 254:	cmp	r0, #0
 258:	beq	2c8 <set_opt+0x168>
 25c:	cmp	r8, #0
 260:	beq	5d4 <set_opt+0x474>
 264:	mov	r0, r8
 268:	bl	98 <parse_bool_arg>
 26c:	cmp	r0, #0
 270:	str	r0, [r6, #188]	; 0xbc
 274:	blt	338 <set_opt+0x1d8>
 278:	cmp	r5, #0
 27c:	bne	2fc <set_opt+0x19c>
 280:	mov	r0, #2
 284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 288:	mov	r3, #1
 28c:	str	r3, [r6, #180]	; 0xb4
 290:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 294:	mov	r3, #1
 298:	str	r3, [r6, #108]	; 0x6c
 29c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 2a0:	mov	r3, #1
 2a4:	str	r3, [r6, #168]	; 0xa8
 2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 2ac:	mov	r3, #1
 2b0:	str	r3, [r6, #164]	; 0xa4
 2b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 2b8:	mov	r3, #1
 2bc:	str	r3, [r6, #164]	; 0xa4
 2c0:	str	r3, [r6, #168]	; 0xa8
 2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 2c8:	mov	r2, r7
 2cc:	mov	r1, r4
 2d0:	ldr	r0, [pc, #1048]	; 6f0 <set_opt+0x590>
 2d4:	bl	128 <match_long_arg>
 2d8:	cmp	r0, #0
 2dc:	beq	340 <set_opt+0x1e0>
 2e0:	cmp	r8, #0
 2e4:	beq	64c <set_opt+0x4ec>
 2e8:	mov	r3, #1
 2ec:	cmp	r5, #0
 2f0:	str	r8, [r6, #116]	; 0x74
 2f4:	str	r3, [r6, #112]	; 0x70
 2f8:	beq	280 <set_opt+0x120>
 2fc:	mov	r0, #0
 300:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 304:	ldr	r4, [pc, #1000]	; 6f4 <set_opt+0x594>
 308:	mov	r2, #112	; 0x70
 30c:	mov	r1, #1
 310:	ldr	r3, [r4]
 314:	ldr	r0, [pc, #988]	; 6f8 <set_opt+0x598>
 318:	bl	0 <fwrite>
 31c:	cmp	r8, #0
 320:	beq	5f0 <set_opt+0x490>
 324:	mov	r0, r8
 328:	bl	98 <parse_bool_arg>
 32c:	cmp	r0, #0
 330:	str	r0, [r6, #184]	; 0xb8
 334:	bge	278 <set_opt+0x118>
 338:	mvn	r0, #0
 33c:	bl	0 <exit>
 340:	mov	r2, r7
 344:	mov	r1, r4
 348:	ldr	r0, [pc, #940]	; 6fc <set_opt+0x59c>
 34c:	bl	128 <match_long_arg>
 350:	cmp	r0, #0
 354:	beq	370 <set_opt+0x210>
 358:	cmp	r8, #0
 35c:	beq	66c <set_opt+0x50c>
 360:	cmp	r5, #0
 364:	str	r8, [r6, #120]	; 0x78
 368:	bne	2fc <set_opt+0x19c>
 36c:	b	280 <set_opt+0x120>
 370:	mov	r2, r7
 374:	mov	r1, r4
 378:	ldr	r0, [pc, #896]	; 700 <set_opt+0x5a0>
 37c:	bl	128 <match_long_arg>
 380:	cmp	r0, #0
 384:	beq	3a0 <set_opt+0x240>
 388:	cmp	r8, #0
 38c:	beq	68c <set_opt+0x52c>
 390:	cmp	r5, #0
 394:	str	r8, [r6, #124]	; 0x7c
 398:	bne	2fc <set_opt+0x19c>
 39c:	b	280 <set_opt+0x120>
 3a0:	mov	r2, r7
 3a4:	mov	r1, r4
 3a8:	ldr	r0, [pc, #852]	; 704 <set_opt+0x5a4>
 3ac:	bl	128 <match_long_arg>
 3b0:	cmp	r0, #0
 3b4:	beq	3d0 <set_opt+0x270>
 3b8:	cmp	r8, #0
 3bc:	beq	6ac <set_opt+0x54c>
 3c0:	cmp	r5, #0
 3c4:	str	r8, [r6, #196]	; 0xc4
 3c8:	bne	2fc <set_opt+0x19c>
 3cc:	b	280 <set_opt+0x120>
 3d0:	mov	r2, r7
 3d4:	mov	r1, r4
 3d8:	ldr	r0, [pc, #808]	; 708 <set_opt+0x5a8>
 3dc:	bl	128 <match_long_arg>
 3e0:	cmp	r0, #0
 3e4:	beq	400 <set_opt+0x2a0>
 3e8:	cmp	r8, #0
 3ec:	beq	62c <set_opt+0x4cc>
 3f0:	cmp	r5, #0
 3f4:	str	r8, [r6, #192]	; 0xc0
 3f8:	bne	2fc <set_opt+0x19c>
 3fc:	b	280 <set_opt+0x120>
 400:	cmp	r9, #100	; 0x64
 404:	beq	49c <set_opt+0x33c>
 408:	bhi	474 <set_opt+0x314>
 40c:	cmp	r9, #73	; 0x49
 410:	beq	4cc <set_opt+0x36c>
 414:	bls	4a8 <set_opt+0x348>
 418:	cmp	r9, #97	; 0x61
 41c:	beq	520 <set_opt+0x3c0>
 420:	cmp	r9, #99	; 0x63
 424:	bne	504 <set_opt+0x3a4>
 428:	mov	r3, #1
 42c:	str	r3, [r6, #144]	; 0x90
 430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 434:	ldr	r3, [pc, #720]	; 70c <set_opt+0x5ac>
 438:	ldr	r0, [r3]
 43c:	bl	6c <help>
 440:	mov	r0, #0
 444:	bl	0 <exit>
 448:	ldr	r4, [pc, #676]	; 6f4 <set_opt+0x594>
 44c:	ldr	r2, [pc, #700]	; 710 <set_opt+0x5b0>
 450:	ldr	r1, [pc, #700]	; 714 <set_opt+0x5b4>
 454:	ldr	r0, [r4]
 458:	bl	0 <fprintf>
 45c:	ldr	r0, [r4]
 460:	ldr	r2, [pc, #688]	; 718 <set_opt+0x5b8>
 464:	ldr	r1, [pc, #688]	; 71c <set_opt+0x5bc>
 468:	bl	0 <fprintf>
 46c:	mov	r0, sl
 470:	bl	0 <exit>
 474:	cmp	r9, #114	; 0x72
 478:	beq	588 <set_opt+0x428>
 47c:	bls	54c <set_opt+0x3ec>
 480:	cmp	r9, #118	; 0x76
 484:	beq	540 <set_opt+0x3e0>
 488:	cmp	r9, #119	; 0x77
 48c:	bne	504 <set_opt+0x3a4>
 490:	mov	r3, #1
 494:	str	r3, [r6, #156]	; 0x9c
 498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 49c:	mov	r3, #1
 4a0:	str	r3, [r6, #112]	; 0x70
 4a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 4a8:	cmp	r9, #45	; 0x2d
 4ac:	bne	504 <set_opt+0x3a4>
 4b0:	ldr	r3, [pc, #572]	; 6f4 <set_opt+0x594>
 4b4:	mov	r2, r4
 4b8:	ldr	r1, [pc, #608]	; 720 <set_opt+0x5c0>
 4bc:	ldr	r0, [r3]
 4c0:	bl	0 <fprintf>
 4c4:	mvn	r0, #0
 4c8:	bl	0 <exit>
 4cc:	ldrb	r3, [r4, #1]
 4d0:	cmp	r3, #0
 4d4:	addne	r8, r4, #1
 4d8:	movne	r0, #1
 4dc:	bne	4ec <set_opt+0x38c>
 4e0:	cmp	r8, #0
 4e4:	movne	r0, #2
 4e8:	beq	60c <set_opt+0x4ac>
 4ec:	ldr	r3, [r6, #208]	; 0xd0
 4f0:	ldr	r2, [r6, #200]	; 0xc8
 4f4:	add	r1, r3, #1
 4f8:	str	r1, [r6, #208]	; 0xd0
 4fc:	str	r8, [r2, r3, lsl #2]
 500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 504:	ldr	r3, [pc, #488]	; 6f4 <set_opt+0x594>
 508:	mov	r2, r9
 50c:	ldr	r1, [pc, #528]	; 724 <set_opt+0x5c4>
 510:	ldr	r0, [r3]
 514:	bl	0 <fprintf>
 518:	mvn	r0, #0
 51c:	bl	0 <exit>
 520:	mov	r3, #1
 524:	str	r3, [r6, #152]	; 0x98
 528:	str	r3, [r6, #156]	; 0x9c
 52c:	str	r3, [r6, #160]	; 0xa0
 530:	str	r3, [r6, #144]	; 0x90
 534:	str	r3, [r6, #148]	; 0x94
 538:	str	r3, [r6, #172]	; 0xac
 53c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 540:	mov	r3, #1
 544:	str	r3, [r6, #160]	; 0xa0
 548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 54c:	cmp	r9, #111	; 0x6f
 550:	bne	504 <set_opt+0x3a4>
 554:	ldr	r3, [r6, #216]	; 0xd8
 558:	cmp	r3, #0
 55c:	bne	594 <set_opt+0x434>
 560:	ldrb	r3, [r4, #1]
 564:	cmp	r3, #0
 568:	addne	r8, r4, #1
 56c:	movne	r0, #1
 570:	bne	580 <set_opt+0x420>
 574:	cmp	r8, #0
 578:	movne	r0, #2
 57c:	beq	5b4 <set_opt+0x454>
 580:	str	r8, [r6, #216]	; 0xd8
 584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 588:	mov	r3, #1
 58c:	str	r3, [r6, #172]	; 0xac
 590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 594:	ldr	r3, [pc, #344]	; 6f4 <set_opt+0x594>
 598:	mov	r2, #37	; 0x25
 59c:	mov	r1, #1
 5a0:	ldr	r3, [r3]
 5a4:	ldr	r0, [pc, #380]	; 728 <set_opt+0x5c8>
 5a8:	bl	0 <fwrite>
 5ac:	mvn	r0, #0
 5b0:	bl	0 <exit>
 5b4:	ldr	r3, [pc, #312]	; 6f4 <set_opt+0x594>
 5b8:	mov	r2, #28
 5bc:	mov	r1, #1
 5c0:	ldr	r3, [r3]
 5c4:	ldr	r0, [pc, #352]	; 72c <set_opt+0x5cc>
 5c8:	bl	0 <fwrite>
 5cc:	mvn	r0, #0
 5d0:	bl	0 <exit>
 5d4:	ldr	r3, [pc, #280]	; 6f4 <set_opt+0x594>
 5d8:	mov	r2, #41	; 0x29
 5dc:	mov	r1, #1
 5e0:	ldr	r3, [r3]
 5e4:	ldr	r0, [pc, #324]	; 730 <set_opt+0x5d0>
 5e8:	bl	0 <fwrite>
 5ec:	b	338 <set_opt+0x1d8>
 5f0:	ldr	r3, [r4]
 5f4:	mov	r2, #44	; 0x2c
 5f8:	mov	r1, #1
 5fc:	ldr	r0, [pc, #304]	; 734 <set_opt+0x5d4>
 600:	bl	0 <fwrite>
 604:	mvn	r0, #0
 608:	bl	0 <exit>
 60c:	ldr	r3, [pc, #224]	; 6f4 <set_opt+0x594>
 610:	mov	r2, #28
 614:	mov	r1, #1
 618:	ldr	r3, [r3]
 61c:	ldr	r0, [pc, #276]	; 738 <set_opt+0x5d8>
 620:	bl	0 <fwrite>
 624:	mvn	r0, #0
 628:	bl	0 <exit>
 62c:	ldr	r3, [pc, #192]	; 6f4 <set_opt+0x594>
 630:	mov	r2, #28
 634:	mov	r1, #1
 638:	ldr	r3, [r3]
 63c:	ldr	r0, [pc, #248]	; 73c <set_opt+0x5dc>
 640:	bl	0 <fwrite>
 644:	mvn	r0, #0
 648:	bl	0 <exit>
 64c:	ldr	r3, [pc, #160]	; 6f4 <set_opt+0x594>
 650:	mov	r2, #35	; 0x23
 654:	mov	r1, #1
 658:	ldr	r3, [r3]
 65c:	ldr	r0, [pc, #220]	; 740 <set_opt+0x5e0>
 660:	bl	0 <fwrite>
 664:	mvn	r0, #0
 668:	bl	0 <exit>
 66c:	ldr	r3, [pc, #128]	; 6f4 <set_opt+0x594>
 670:	mov	r2, #37	; 0x25
 674:	mov	r1, #1
 678:	ldr	r3, [r3]
 67c:	ldr	r0, [pc, #192]	; 744 <set_opt+0x5e4>
 680:	bl	0 <fwrite>
 684:	mvn	r0, #0
 688:	bl	0 <exit>
 68c:	ldr	r3, [pc, #96]	; 6f4 <set_opt+0x594>
 690:	mov	r2, #35	; 0x23
 694:	mov	r1, #1
 698:	ldr	r3, [r3]
 69c:	ldr	r0, [pc, #164]	; 748 <set_opt+0x5e8>
 6a0:	bl	0 <fwrite>
 6a4:	mvn	r0, #0
 6a8:	bl	0 <exit>
 6ac:	ldr	r3, [pc, #64]	; 6f4 <set_opt+0x594>
 6b0:	mov	r2, #41	; 0x29
 6b4:	mov	r1, #1
 6b8:	ldr	r3, [r3]
 6bc:	ldr	r0, [pc, #136]	; 74c <set_opt+0x5ec>
 6c0:	bl	0 <fwrite>
 6c4:	mvn	r0, #0
 6c8:	bl	0 <exit>
 6cc:	.word	0x00001298
 6d0:	.word	0x000012a0
 6d4:	.word	0x000012ac
 6d8:	.word	0x000012b4
 6dc:	.word	0x000012bc
 6e0:	.word	0x000012cc
 6e4:	.word	0x000012dc
 6e8:	.word	0x000012e4
 6ec:	.word	0x0000139c
 6f0:	.word	0x000013d8
 6f4:	.word	0x00000000
 6f8:	.word	0x000012f8
 6fc:	.word	0x00001408
 700:	.word	0x0000143c
 704:	.word	0x0000146c
 708:	.word	0x000014a8
	...
 714:	.word	0x00000038
 718:	.word	0x0000003c
 71c:	.word	0x00000044
 720:	.word	0x000014d0
 724:	.word	0x00001550
 728:	.word	0x00001508
 72c:	.word	0x00001530
 730:	.word	0x000013ac
 734:	.word	0x0000136c
 738:	.word	0x000014e8
 73c:	.word	0x000014b0
 740:	.word	0x000013e4
 744:	.word	0x00001414
 748:	.word	0x00001448
 74c:	.word	0x0000147c

00000750 <get_opt>:
 750:	push	{r4, r5, r6, lr}
 754:	ldrb	r3, [r1, #1]
 758:	cmp	r3, #45	; 0x2d
 75c:	beq	7bc <get_opt+0x6c>
 760:	cmp	r3, #0
 764:	mov	r5, r0
 768:	mov	r6, r2
 76c:	add	r4, r1, #1
 770:	beq	7d4 <get_opt+0x84>
 774:	mov	r2, r6
 778:	mov	r1, r4
 77c:	mov	r0, r5
 780:	bl	160 <set_opt>
 784:	cmp	r0, #1
 788:	beq	7b4 <get_opt+0x64>
 78c:	cmp	r0, #2
 790:	beq	7ac <get_opt+0x5c>
 794:	cmp	r0, #0
 798:	addeq	r4, r4, #1
 79c:	ldrb	r0, [r4]
 7a0:	cmp	r0, #0
 7a4:	bne	774 <get_opt+0x24>
 7a8:	pop	{r4, r5, r6, pc}
 7ac:	mov	r0, #1
 7b0:	pop	{r4, r5, r6, pc}
 7b4:	mov	r0, #0
 7b8:	pop	{r4, r5, r6, pc}
 7bc:	add	r1, r1, #1
 7c0:	bl	160 <set_opt>
 7c4:	sub	r0, r0, #2
 7c8:	clz	r0, r0
 7cc:	lsr	r0, r0, #5
 7d0:	pop	{r4, r5, r6, pc}
 7d4:	ldr	r3, [pc, #24]	; 7f4 <get_opt+0xa4>
 7d8:	mov	r2, #24
 7dc:	mov	r1, #1
 7e0:	ldr	r3, [r3]
 7e4:	ldr	r0, [pc, #12]	; 7f8 <get_opt+0xa8>
 7e8:	bl	0 <fwrite>
 7ec:	mvn	r0, #0
 7f0:	bl	0 <exit>
 7f4:	.word	0x00000000
 7f8:	.word	0x00001568

000007fc <parse_opts>:
 7fc:	cmp	r0, #1
 800:	bxle	lr
 804:	push	{r4, r5, r6, r7, r8, lr}
 808:	mov	r5, r2
 80c:	mov	r8, r1
 810:	mov	r6, r0
 814:	mov	r4, #1
 818:	mov	r7, #0
 81c:	b	840 <parse_opts+0x44>
 820:	ldr	r3, [r5, #212]	; 0xd4
 824:	ldr	r2, [r5, #204]	; 0xcc
 828:	add	r4, r4, #1
 82c:	add	r0, r3, #1
 830:	cmp	r6, r4
 834:	str	r0, [r5, #212]	; 0xd4
 838:	str	r1, [r2, r3, lsl #2]
 83c:	ble	880 <parse_opts+0x84>
 840:	ldr	r1, [r8, r4, lsl #2]
 844:	lsl	r2, r4, #2
 848:	ldrb	r3, [r1]
 84c:	cmp	r3, #45	; 0x2d
 850:	bne	820 <parse_opts+0x24>
 854:	add	r0, r4, #1
 858:	cmp	r6, r0
 85c:	add	r3, r8, r2
 860:	mov	r0, r5
 864:	mov	r2, r7
 868:	ldrgt	r2, [r3, #4]
 86c:	bl	750 <get_opt>
 870:	add	r4, r4, r0
 874:	add	r4, r4, #1
 878:	cmp	r6, r4
 87c:	bgt	840 <parse_opts+0x44>
 880:	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section .text.startup:

00000000 <main>:
   0:	cmp	r0, #1
   4:	push	{r4, r5, r6, r7, r8, lr}
   8:	sub	sp, sp, #224	; 0xe0
   c:	ble	370 <main+0x370>
  10:	mov	r4, r0
  14:	mov	r0, sp
  18:	lsl	r5, r4, #2
  1c:	mov	r6, r1
  20:	bl	0 <flatcc_init_options>
  24:	mov	r0, r5
  28:	bl	0 <malloc>
  2c:	cmp	r0, #0
  30:	str	r0, [sp, #200]	; 0xc8
  34:	beq	350 <main+0x350>
  38:	mov	r0, r5
  3c:	bl	0 <malloc>
  40:	cmp	r0, #0
  44:	str	r0, [sp, #204]	; 0xcc
  48:	beq	328 <main+0x328>
  4c:	mov	r1, r6
  50:	mov	r0, r4
  54:	mov	r2, sp
  58:	bl	7fc <parse_opts>
  5c:	ldr	r3, [sp, #156]	; 0x9c
  60:	cmp	r3, #0
  64:	beq	218 <main+0x218>
  68:	ldr	r1, [sp, #144]	; 0x90
  6c:	cmp	r1, #0
  70:	bne	184 <main+0x184>
  74:	ldr	r2, [sp, #212]	; 0xd4
  78:	str	r1, [sp, #148]	; 0x94
  7c:	cmp	r2, #0
  80:	beq	234 <main+0x234>
  84:	ldr	r0, [sp, #152]	; 0x98
  88:	orrs	r0, r3, r0
  8c:	bne	9c <main+0x9c>
  90:	ldr	r0, [sp, #160]	; 0xa0
  94:	cmp	r0, #0
  98:	beq	250 <main+0x250>
  9c:	ldr	r1, [sp, #180]	; 0xb4
  a0:	cmp	r1, #0
  a4:	beq	2a0 <main+0x2a0>
  a8:	ldr	r3, [sp, #108]	; 0x6c
  ac:	cmp	r3, #0
  b0:	bne	2f0 <main+0x2f0>
  b4:	ldr	r3, [sp, #124]	; 0x7c
  b8:	cmp	r3, #0
  bc:	bne	2b8 <main+0x2b8>
  c0:	ldr	r3, [sp, #120]	; 0x78
  c4:	cmp	r3, #0
  c8:	beq	f0 <main+0xf0>
  cc:	ldr	r3, [sp, #116]	; 0x74
  d0:	cmp	r3, #0
  d4:	beq	30c <main+0x30c>
  d8:	ldr	r3, [sp, #108]	; 0x6c
  dc:	cmp	r3, #0
  e0:	beq	f0 <main+0xf0>
  e4:	ldr	r3, [sp, #124]	; 0x7c
  e8:	cmp	r3, #0
  ec:	bne	2d4 <main+0x2d4>
  f0:	cmp	r2, #0
  f4:	ldr	r4, [sp, #204]	; 0xcc
  f8:	ble	1d0 <main+0x1d0>
  fc:	mov	r6, #0
 100:	sub	r4, r4, #4
 104:	mov	r7, r6
 108:	mov	r8, #1
 10c:	b	14c <main+0x14c>
 110:	ldr	r1, [r4, #4]!
 114:	bl	0 <flatcc_parse_file>
 118:	cmp	r0, #0
 11c:	bne	1f0 <main+0x1f0>
 120:	mov	r0, r5
 124:	bl	0 <flatcc_generate_files>
 128:	cmp	r0, #0
 12c:	bne	1f0 <main+0x1f0>
 130:	mov	r0, r5
 134:	bl	0 <flatcc_destroy_context>
 138:	ldr	r3, [sp, #212]	; 0xd4
 13c:	add	r6, r6, #1
 140:	cmp	r3, r6
 144:	str	r8, [sp, #128]	; 0x80
 148:	ble	1d0 <main+0x1d0>
 14c:	mov	r3, r7
 150:	mov	r2, #0
 154:	ldr	r1, [r4, #4]
 158:	mov	r0, sp
 15c:	bl	0 <flatcc_create_context>
 160:	subs	r5, r0, #0
 164:	bne	110 <main+0x110>
 168:	ldr	r4, [pc, #532]	; 384 <main+0x384>
 16c:	mov	r2, #49	; 0x31
 170:	mov	r1, #1
 174:	ldr	r3, [r4]
 178:	ldr	r0, [pc, #520]	; 388 <main+0x388>
 17c:	bl	0 <fwrite>
 180:	b	1fc <main+0x1fc>
 184:	ldr	r2, [sp, #212]	; 0xd4
 188:	mov	r1, #1
 18c:	cmp	r2, #0
 190:	str	r1, [sp, #148]	; 0x94
 194:	bne	84 <main+0x84>
 198:	ldr	r3, [sp, #180]	; 0xb4
 19c:	cmp	r3, #0
 1a0:	bne	234 <main+0x234>
 1a4:	mov	r0, sp
 1a8:	mov	r2, r3
 1ac:	mov	r1, r3
 1b0:	bl	0 <flatcc_create_context>
 1b4:	subs	r5, r0, #0
 1b8:	beq	168 <main+0x168>
 1bc:	bl	0 <flatcc_generate_files>
 1c0:	cmp	r0, #0
 1c4:	bne	1f0 <main+0x1f0>
 1c8:	mov	r0, r5
 1cc:	bl	0 <flatcc_destroy_context>
 1d0:	mov	r4, #0
 1d4:	ldr	r0, [sp, #200]	; 0xc8
 1d8:	bl	0 <free>
 1dc:	ldr	r0, [sp, #204]	; 0xcc
 1e0:	bl	0 <free>
 1e4:	mov	r0, r4
 1e8:	add	sp, sp, #224	; 0xe0
 1ec:	pop	{r4, r5, r6, r7, r8, pc}
 1f0:	mov	r0, r5
 1f4:	bl	0 <flatcc_destroy_context>
 1f8:	ldr	r4, [pc, #388]	; 384 <main+0x384>
 1fc:	ldr	r3, [r4]
 200:	mov	r2, #14
 204:	mov	r1, #1
 208:	ldr	r0, [pc, #380]	; 38c <main+0x38c>
 20c:	bl	0 <fwrite>
 210:	mvn	r4, #0
 214:	b	1d4 <main+0x1d4>
 218:	ldr	r2, [sp, #212]	; 0xd4
 21c:	str	r3, [sp, #148]	; 0x94
 220:	cmp	r2, #0
 224:	bne	298 <main+0x298>
 228:	ldr	r3, [sp, #144]	; 0x90
 22c:	cmp	r3, #0
 230:	bne	198 <main+0x198>
 234:	ldr	r4, [pc, #328]	; 384 <main+0x384>
 238:	mov	r2, #17
 23c:	mov	r1, #1
 240:	ldr	r3, [r4]
 244:	ldr	r0, [pc, #324]	; 390 <main+0x390>
 248:	bl	0 <fwrite>
 24c:	b	1fc <main+0x1fc>
 250:	ldr	r0, [sp, #144]	; 0x90
 254:	orrs	r1, r1, r0
 258:	bne	9c <main+0x9c>
 25c:	ldr	r1, [sp, #164]	; 0xa4
 260:	cmp	r1, #0
 264:	bne	9c <main+0x9c>
 268:	ldr	r1, [sp, #168]	; 0xa8
 26c:	cmp	r1, #0
 270:	bne	9c <main+0x9c>
 274:	ldr	r3, [sp, #180]	; 0xb4
 278:	cmp	r3, #0
 27c:	bne	288 <main+0x288>
 280:	mov	r3, #1
 284:	str	r3, [sp, #152]	; 0x98
 288:	ldr	r3, [sp, #120]	; 0x78
 28c:	cmp	r3, #0
 290:	bne	cc <main+0xcc>
 294:	b	d8 <main+0xd8>
 298:	mov	r1, r3
 29c:	b	84 <main+0x84>
 2a0:	cmp	r3, #0
 2a4:	bne	280 <main+0x280>
 2a8:	ldr	r3, [sp, #160]	; 0xa0
 2ac:	cmp	r3, #0
 2b0:	beq	288 <main+0x288>
 2b4:	b	280 <main+0x280>
 2b8:	ldr	r4, [pc, #196]	; 384 <main+0x384>
 2bc:	mov	r2, #58	; 0x3a
 2c0:	mov	r1, #1
 2c4:	ldr	r3, [r4]
 2c8:	ldr	r0, [pc, #196]	; 394 <main+0x394>
 2cc:	bl	0 <fwrite>
 2d0:	b	1fc <main+0x1fc>
 2d4:	ldr	r4, [pc, #168]	; 384 <main+0x384>
 2d8:	mov	r2, #38	; 0x26
 2dc:	mov	r1, #1
 2e0:	ldr	r3, [r4]
 2e4:	ldr	r0, [pc, #172]	; 398 <main+0x398>
 2e8:	bl	0 <fwrite>
 2ec:	b	1fc <main+0x1fc>
 2f0:	ldr	r4, [pc, #140]	; 384 <main+0x384>
 2f4:	mov	r2, #57	; 0x39
 2f8:	mov	r1, #1
 2fc:	ldr	r3, [r4]
 300:	ldr	r0, [pc, #148]	; 39c <main+0x39c>
 304:	bl	0 <fwrite>
 308:	b	1fc <main+0x1fc>
 30c:	ldr	r4, [pc, #112]	; 384 <main+0x384>
 310:	mov	r2, #44	; 0x2c
 314:	mov	r1, #1
 318:	ldr	r3, [r4]
 31c:	ldr	r0, [pc, #124]	; 3a0 <main+0x3a0>
 320:	bl	0 <fwrite>
 324:	b	1fc <main+0x1fc>
 328:	ldr	r3, [pc, #84]	; 384 <main+0x384>
 32c:	mov	r2, #26
 330:	mov	r1, #1
 334:	ldr	r3, [r3]
 338:	ldr	r0, [pc, #100]	; 3a4 <main+0x3a4>
 33c:	bl	0 <fwrite>
 340:	ldr	r0, [sp, #200]	; 0xc8
 344:	bl	0 <free>
 348:	mvn	r0, #0
 34c:	bl	0 <exit>
 350:	ldr	r3, [pc, #44]	; 384 <main+0x384>
 354:	mov	r2, #26
 358:	mov	r1, #1
 35c:	ldr	r3, [r3]
 360:	ldr	r0, [pc, #60]	; 3a4 <main+0x3a4>
 364:	bl	0 <fwrite>
 368:	mvn	r0, #0
 36c:	bl	0 <exit>
 370:	ldr	r3, [pc, #12]	; 384 <main+0x384>
 374:	ldr	r0, [r3]
 378:	bl	0 <main>
 37c:	mvn	r0, #0
 380:	bl	0 <exit>
 384:	.word	0x00000000
 388:	.word	0x000015b4
 38c:	.word	0x000016b8
 390:	.word	0x000015a0
 394:	.word	0x00001624
 398:	.word	0x00001690
 39c:	.word	0x000015e8
 3a0:	.word	0x00001660
 3a4:	.word	0x00001584
