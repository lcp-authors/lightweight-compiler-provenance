
../compcert-repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b08 <.init>:
   10b08:	push	{r3, lr}
   10b0c:	bl	10ef4 <_start@@Base+0x3c>
   10b10:	pop	{r3, pc}

Disassembly of section .plt:

00010b14 <calloc@plt-0x14>:
   10b14:	push	{lr}		; (str lr, [sp, #-4]!)
   10b18:	ldr	lr, [pc, #4]	; 10b24 <calloc@plt-0x4>
   10b1c:	add	lr, pc, lr
   10b20:	ldr	pc, [lr, #8]!
   10b24:	ldrdeq	r1, [r1], -ip

00010b28 <calloc@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b34 <strcmp@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b40 <free@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b4c <memcpy@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b58 <realloc@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b64 <fwrite@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b70 <strcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b7c <puts@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b88 <malloc@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1180]!	; 0x49c

00010b94 <__libc_start_main@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1172]!	; 0x494

00010ba0 <__gmon_start__@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bac <strlen@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1156]!	; 0x484

00010bb8 <fprintf@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc4 <sprintf@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1140]!	; 0x474

00010bd0 <abort@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1132]!	; 0x46c

Disassembly of section .text:

00010bdc <main@@Base>:
   10bdc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10be0:	mov	r4, #0
   10be4:	strd	r6, [sp, #8]
   10be8:	strd	r8, [sp, #16]
   10bec:	movw	r9, #8276	; 0x2054
   10bf0:	movt	r9, #2
   10bf4:	strd	sl, [sp, #24]
   10bf8:	mov	r7, r9
   10bfc:	mov	r6, r9
   10c00:	str	lr, [sp, #32]
   10c04:	sub	sp, sp, #12
   10c08:	bl	11210 <vetor_novo@@Base>
   10c0c:	mov	r5, r0
   10c10:	mov	r2, r4
   10c14:	mov	r0, r5
   10c18:	ldr	r1, [r6], #4
   10c1c:	add	r4, r4, #1
   10c20:	bl	113b4 <vetor_insere@@Base>
   10c24:	cmp	r4, #4
   10c28:	bne	10c10 <main@@Base+0x34>
   10c2c:	ldr	r6, [pc, #628]	; 10ea8 <main@@Base+0x2cc>
   10c30:	bl	116ec <lista_nova@@Base>
   10c34:	mov	r4, r0
   10c38:	add	r8, r6, #208	; 0xd0
   10c3c:	ldr	r1, [r6, #4]!
   10c40:	mov	r0, r4
   10c44:	bl	11144 <insere_carta@@Base>
   10c48:	cmp	r6, r8
   10c4c:	bne	10c3c <main@@Base+0x60>
   10c50:	ldr	r8, [pc, #596]	; 10eac <main@@Base+0x2d0>
   10c54:	bl	116ec <lista_nova@@Base>
   10c58:	mov	r6, r0
   10c5c:	add	sl, r8, #52	; 0x34
   10c60:	ldr	r1, [r8], #4
   10c64:	mov	r2, #0
   10c68:	mov	r0, r6
   10c6c:	bl	117a8 <lista_insere@@Base>
   10c70:	cmp	sl, r8
   10c74:	bne	10c60 <main@@Base+0x84>
   10c78:	movw	r8, #8608	; 0x21a0
   10c7c:	movt	r8, #2
   10c80:	ldr	sl, [r8]
   10c84:	mov	r1, r6
   10c88:	mov	r0, r4
   10c8c:	bl	10fa8 <tira_carta@@Base>
   10c90:	mov	r2, r0
   10c94:	movw	r1, #6992	; 0x1b50
   10c98:	movt	r1, #1
   10c9c:	movw	fp, #7084	; 0x1bac
   10ca0:	movt	fp, #1
   10ca4:	mov	r0, sl
   10ca8:	mov	sl, #0
   10cac:	bl	10bb8 <fprintf@plt>
   10cb0:	ldr	r3, [r8]
   10cb4:	mov	r1, r6
   10cb8:	mov	r0, r4
   10cbc:	str	r3, [sp, #4]
   10cc0:	bl	10fa8 <tira_carta@@Base>
   10cc4:	ldr	r3, [sp, #4]
   10cc8:	mov	r2, r0
   10ccc:	movw	r1, #7024	; 0x1b70
   10cd0:	movt	r1, #1
   10cd4:	mov	r0, r3
   10cd8:	bl	10bb8 <fprintf@plt>
   10cdc:	ldr	r3, [r8]
   10ce0:	mov	r1, r6
   10ce4:	mov	r0, r4
   10ce8:	str	r3, [sp, #4]
   10cec:	bl	10fa8 <tira_carta@@Base>
   10cf0:	ldr	r3, [sp, #4]
   10cf4:	mov	r2, r0
   10cf8:	movw	r1, #7052	; 0x1b8c
   10cfc:	movt	r1, #1
   10d00:	mov	r0, r3
   10d04:	bl	10bb8 <fprintf@plt>
   10d08:	mov	r0, r4
   10d0c:	ldr	r1, [r7, #212]	; 0xd4
   10d10:	bl	11144 <insere_carta@@Base>
   10d14:	mov	r0, r4
   10d18:	ldr	r1, [r7, #216]	; 0xd8
   10d1c:	bl	11144 <insere_carta@@Base>
   10d20:	mov	r0, r4
   10d24:	ldr	r1, [r7, #220]	; 0xdc
   10d28:	bl	11144 <insere_carta@@Base>
   10d2c:	bl	11210 <vetor_novo@@Base>
   10d30:	mov	r7, r0
   10d34:	mov	r2, r6
   10d38:	mov	r1, r4
   10d3c:	mov	r0, r5
   10d40:	bl	11014 <faz_jogada@@Base>
   10d44:	subs	r1, r0, #0
   10d48:	mov	r2, sl
   10d4c:	mov	r0, r7
   10d50:	add	sl, sl, #1
   10d54:	beq	10d5c <main@@Base+0x180>
   10d58:	bl	113b4 <vetor_insere@@Base>
   10d5c:	mov	r0, r5
   10d60:	bl	11370 <vetor_tamanho@@Base>
   10d64:	cmp	r0, #4
   10d68:	mov	r2, #44	; 0x2c
   10d6c:	mov	r1, #1
   10d70:	mov	r0, fp
   10d74:	beq	10d80 <main@@Base+0x1a4>
   10d78:	ldr	r3, [r8]
   10d7c:	bl	10b64 <fwrite@plt>
   10d80:	cmp	sl, #13
   10d84:	bne	10d34 <main@@Base+0x158>
   10d88:	movw	r0, #7132	; 0x1bdc
   10d8c:	movt	r0, #1
   10d90:	bl	10b7c <puts@plt>
   10d94:	ldr	r3, [r7]
   10d98:	cmp	r3, #0
   10d9c:	ble	10de8 <main@@Base+0x20c>
   10da0:	movw	r3, #7172	; 0x1c04
   10da4:	movt	r3, #1
   10da8:	mov	r1, #0
   10dac:	str	r3, [sp, #4]
   10db0:	ldr	fp, [r8]
   10db4:	mov	r0, r7
   10db8:	add	sl, r1, #1
   10dbc:	bl	11380 <vetor_elemento@@Base>
   10dc0:	mov	r3, r0
   10dc4:	mov	r2, sl
   10dc8:	ldr	r1, [sp, #4]
   10dcc:	mov	r0, fp
   10dd0:	bl	10bb8 <fprintf@plt>
   10dd4:	ldr	r3, [r7]
   10dd8:	mov	r1, sl
   10ddc:	cmp	sl, #2
   10de0:	cmple	sl, r3
   10de4:	blt	10db0 <main@@Base+0x1d4>
   10de8:	ldr	sl, [pc, #192]	; 10eb0 <main@@Base+0x2d4>
   10dec:	mov	r0, r7
   10df0:	mov	fp, #0
   10df4:	bl	11244 <vetor_apaga@@Base>
   10df8:	bl	11210 <vetor_novo@@Base>
   10dfc:	mov	r7, r0
   10e00:	mov	r2, fp
   10e04:	mov	r0, r7
   10e08:	ldr	r1, [sl], #4
   10e0c:	add	fp, fp, #1
   10e10:	bl	113b4 <vetor_insere@@Base>
   10e14:	cmp	fp, #13
   10e18:	bne	10e00 <main@@Base+0x224>
   10e1c:	movw	r0, #7128	; 0x1bd8
   10e20:	movt	r0, #1
   10e24:	movw	fp, #7188	; 0x1c14
   10e28:	movt	fp, #1
   10e2c:	bl	10b7c <puts@plt>
   10e30:	ldr	r2, [r9], #4
   10e34:	mov	r0, r7
   10e38:	ldr	sl, [r8]
   10e3c:	mov	r1, r2
   10e40:	str	r2, [sp, #4]
   10e44:	bl	110dc <numero_vitorias@@Base>
   10e48:	mov	r3, r0
   10e4c:	mov	r1, fp
   10e50:	ldr	r2, [sp, #4]
   10e54:	mov	r0, sl
   10e58:	bl	10bb8 <fprintf@plt>
   10e5c:	ldr	r3, [pc, #80]	; 10eb4 <main@@Base+0x2d8>
   10e60:	cmp	r9, r3
   10e64:	bne	10e30 <main@@Base+0x254>
   10e68:	mov	r0, r5
   10e6c:	bl	11244 <vetor_apaga@@Base>
   10e70:	mov	r0, r4
   10e74:	bl	11720 <lista_apaga@@Base>
   10e78:	mov	r0, r6
   10e7c:	bl	11720 <lista_apaga@@Base>
   10e80:	mov	r0, r7
   10e84:	bl	11244 <vetor_apaga@@Base>
   10e88:	mov	r0, #0
   10e8c:	add	sp, sp, #12
   10e90:	ldrd	r4, [sp]
   10e94:	ldrd	r6, [sp, #8]
   10e98:	ldrd	r8, [sp, #16]
   10e9c:	ldrd	sl, [sp, #24]
   10ea0:	add	sp, sp, #32
   10ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ea8:	andeq	r2, r2, r0, rrx
   10eac:	andeq	r2, r2, r4, lsr r1
   10eb0:	andeq	r2, r2, r8, ror #2
   10eb4:	andeq	r2, r2, r4, rrx

00010eb8 <_start@@Base>:
   10eb8:	mov	fp, #0
   10ebc:	mov	lr, #0
   10ec0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec4:	mov	r2, sp
   10ec8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ecc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed0:	ldr	ip, [pc, #16]	; 10ee8 <_start@@Base+0x30>
   10ed4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed8:	ldr	r0, [pc, #12]	; 10eec <_start@@Base+0x34>
   10edc:	ldr	r3, [pc, #12]	; 10ef0 <_start@@Base+0x38>
   10ee0:	bl	10b94 <__libc_start_main@plt>
   10ee4:	bl	10bd0 <abort@plt>
   10ee8:	andeq	r1, r1, r8, lsr fp
   10eec:	ldrdeq	r0, [r1], -ip
   10ef0:	ldrdeq	r1, [r1], -r8
   10ef4:	ldr	r3, [pc, #20]	; 10f10 <_start@@Base+0x58>
   10ef8:	ldr	r2, [pc, #20]	; 10f14 <_start@@Base+0x5c>
   10efc:	add	r3, pc, r3
   10f00:	ldr	r2, [r3, r2]
   10f04:	cmp	r2, #0
   10f08:	bxeq	lr
   10f0c:	b	10ba0 <__gmon_start__@plt>
   10f10:	strdeq	r1, [r1], -ip
   10f14:	andeq	r0, r0, r8, asr #32
   10f18:	ldr	r0, [pc, #24]	; 10f38 <_start@@Base+0x80>
   10f1c:	ldr	r3, [pc, #24]	; 10f3c <_start@@Base+0x84>
   10f20:	cmp	r3, r0
   10f24:	bxeq	lr
   10f28:	ldr	r3, [pc, #16]	; 10f40 <_start@@Base+0x88>
   10f2c:	cmp	r3, #0
   10f30:	bxeq	lr
   10f34:	bx	r3
   10f38:	muleq	r2, ip, r1
   10f3c:	muleq	r2, ip, r1
   10f40:	andeq	r0, r0, r0
   10f44:	ldr	r0, [pc, #36]	; 10f70 <_start@@Base+0xb8>
   10f48:	ldr	r1, [pc, #36]	; 10f74 <_start@@Base+0xbc>
   10f4c:	sub	r1, r1, r0
   10f50:	asr	r1, r1, #2
   10f54:	add	r1, r1, r1, lsr #31
   10f58:	asrs	r1, r1, #1
   10f5c:	bxeq	lr
   10f60:	ldr	r3, [pc, #16]	; 10f78 <_start@@Base+0xc0>
   10f64:	cmp	r3, #0
   10f68:	bxeq	lr
   10f6c:	bx	r3
   10f70:	muleq	r2, ip, r1
   10f74:	muleq	r2, ip, r1
   10f78:	andeq	r0, r0, r0
   10f7c:	push	{r4, lr}
   10f80:	ldr	r4, [pc, #24]	; 10fa0 <_start@@Base+0xe8>
   10f84:	ldrb	r3, [r4]
   10f88:	cmp	r3, #0
   10f8c:	popne	{r4, pc}
   10f90:	bl	10f18 <_start@@Base+0x60>
   10f94:	mov	r3, #1
   10f98:	strb	r3, [r4]
   10f9c:	pop	{r4, pc}
   10fa0:	andeq	r2, r2, r4, lsr #3
   10fa4:	b	10f44 <_start@@Base+0x8c>

00010fa8 <tira_carta@@Base>:
   10fa8:	ldr	r3, [r1]
   10fac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10fb0:	mov	r5, #0
   10fb4:	ldr	r4, [r3, #4]
   10fb8:	strd	r6, [sp, #8]
   10fbc:	mov	r7, r0
   10fc0:	str	r8, [sp, #16]
   10fc4:	ldr	r8, [r0]
   10fc8:	str	lr, [sp, #20]
   10fcc:	ldr	r0, [r3]
   10fd0:	ldr	r6, [r8]
   10fd4:	b	10fe0 <tira_carta@@Base+0x38>
   10fd8:	ldm	r4, {r0, r4}
   10fdc:	add	r5, r5, #1
   10fe0:	mov	r1, r6
   10fe4:	bl	10b34 <strcmp@plt>
   10fe8:	cmp	r0, #0
   10fec:	bne	10fd8 <tira_carta@@Base+0x30>
   10ff0:	mov	r1, r8
   10ff4:	mov	r0, r7
   10ff8:	bl	11870 <lista_remove@@Base>
   10ffc:	mov	r0, r5
   11000:	ldrd	r4, [sp]
   11004:	ldrd	r6, [sp, #8]
   11008:	ldr	r8, [sp, #16]
   1100c:	add	sp, sp, #20
   11010:	pop	{pc}		; (ldr pc, [sp], #4)

00011014 <faz_jogada@@Base>:
   11014:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11018:	mov	r5, r0
   1101c:	ldr	r4, [r0]
   11020:	strd	r6, [sp, #8]
   11024:	strd	r8, [sp, #16]
   11028:	mov	r9, r1
   1102c:	str	sl, [sp, #24]
   11030:	mov	sl, r2
   11034:	str	lr, [sp, #28]
   11038:	lsl	r0, r4, #2
   1103c:	bl	10b88 <malloc@plt>
   11040:	cmp	r4, #0
   11044:	mov	r6, r0
   11048:	subgt	r7, r0, #4
   1104c:	movgt	r4, #0
   11050:	movgt	r8, r7
   11054:	ble	110d4 <faz_jogada@@Base+0xc0>
   11058:	mov	r1, sl
   1105c:	mov	r0, r9
   11060:	bl	10fa8 <tira_carta@@Base>
   11064:	ldr	r1, [r5]
   11068:	add	r4, r4, #1
   1106c:	str	r0, [r8, #4]!
   11070:	cmp	r1, r4
   11074:	bgt	11058 <faz_jogada@@Base+0x44>
   11078:	cmp	r1, #0
   1107c:	ble	110d4 <faz_jogada@@Base+0xc0>
   11080:	mvn	ip, #0
   11084:	mov	r3, #0
   11088:	mov	r2, ip
   1108c:	ldr	r0, [r7, #4]!
   11090:	cmp	r0, r2
   11094:	movgt	ip, r3
   11098:	add	r3, r3, #1
   1109c:	movgt	r2, r0
   110a0:	cmp	r1, r3
   110a4:	bne	1108c <faz_jogada@@Base+0x78>
   110a8:	lsl	r4, ip, #2
   110ac:	mov	r0, r6
   110b0:	bl	10b40 <free@plt>
   110b4:	ldr	r3, [r5, #8]
   110b8:	ldrd	r6, [sp, #8]
   110bc:	ldrd	r8, [sp, #16]
   110c0:	ldr	r0, [r3, r4]
   110c4:	ldrd	r4, [sp]
   110c8:	ldr	sl, [sp, #24]
   110cc:	add	sp, sp, #28
   110d0:	pop	{pc}		; (ldr pc, [sp], #4)
   110d4:	mvn	r4, #3
   110d8:	b	110ac <faz_jogada@@Base+0x98>

000110dc <numero_vitorias@@Base>:
   110dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   110e0:	ldr	r5, [r0]
   110e4:	strd	r6, [sp, #8]
   110e8:	str	r8, [sp, #16]
   110ec:	str	lr, [sp, #20]
   110f0:	cmp	r5, #0
   110f4:	ble	1113c <numero_vitorias@@Base+0x60>
   110f8:	ldr	r4, [r0, #8]
   110fc:	mov	r6, r1
   11100:	mov	r7, #0
   11104:	add	r5, r4, r5, lsl #2
   11108:	ldr	r1, [r4], #4
   1110c:	mov	r0, r6
   11110:	bl	10b34 <strcmp@plt>
   11114:	cmp	r0, #0
   11118:	addeq	r7, r7, #1
   1111c:	cmp	r4, r5
   11120:	bne	11108 <numero_vitorias@@Base+0x2c>
   11124:	mov	r0, r7
   11128:	ldrd	r4, [sp]
   1112c:	ldrd	r6, [sp, #8]
   11130:	ldr	r8, [sp, #16]
   11134:	add	sp, sp, #20
   11138:	pop	{pc}		; (ldr pc, [sp], #4)
   1113c:	mov	r7, #0
   11140:	b	11124 <numero_vitorias@@Base+0x48>

00011144 <insere_carta@@Base>:
   11144:	cmp	r1, #7
   11148:	strd	r4, [sp, #-12]!
   1114c:	mov	r4, r0
   11150:	str	lr, [sp, #8]
   11154:	sub	sp, sp, #12
   11158:	ble	111d4 <insere_carta@@Base+0x90>
   1115c:	cmp	r1, #8
   11160:	beq	111f0 <insere_carta@@Base+0xac>
   11164:	cmp	r1, #9
   11168:	moveq	r3, #74	; 0x4a
   1116c:	addeq	r5, sp, #4
   11170:	strheq	r3, [sp, #4]
   11174:	beq	111b4 <insere_carta@@Base+0x70>
   11178:	cmp	r1, #10
   1117c:	moveq	r3, #81	; 0x51
   11180:	addeq	r5, sp, #4
   11184:	strheq	r3, [sp, #4]
   11188:	beq	111b4 <insere_carta@@Base+0x70>
   1118c:	cmp	r1, #11
   11190:	moveq	r3, #75	; 0x4b
   11194:	addeq	r5, sp, #4
   11198:	strheq	r3, [sp, #4]
   1119c:	beq	111b4 <insere_carta@@Base+0x70>
   111a0:	cmp	r1, #12
   111a4:	moveq	r3, #65	; 0x41
   111a8:	addne	r5, sp, #4
   111ac:	addeq	r5, sp, #4
   111b0:	strheq	r3, [sp, #4]
   111b4:	ldr	r2, [r4]
   111b8:	mov	r1, r5
   111bc:	mov	r0, r4
   111c0:	bl	117a8 <lista_insere@@Base>
   111c4:	add	sp, sp, #12
   111c8:	ldrd	r4, [sp]
   111cc:	add	sp, sp, #8
   111d0:	pop	{pc}		; (ldr pc, [sp], #4)
   111d4:	add	r5, sp, #4
   111d8:	add	r2, r1, #50	; 0x32
   111dc:	mov	r0, r5
   111e0:	movw	r1, #6984	; 0x1b48
   111e4:	movt	r1, #1
   111e8:	bl	10bc4 <sprintf@plt>
   111ec:	b	111b4 <insere_carta@@Base+0x70>
   111f0:	movw	r3, #6988	; 0x1b4c
   111f4:	movt	r3, #1
   111f8:	ldrh	r2, [r3]
   111fc:	add	r5, sp, #4
   11200:	ldrb	r3, [r3, #2]
   11204:	strh	r2, [sp, #4]
   11208:	strb	r3, [r5, #2]
   1120c:	b	111b4 <insere_carta@@Base+0x70>

00011210 <vetor_novo@@Base>:
   11210:	mov	r0, #12
   11214:	str	r4, [sp, #-8]!
   11218:	str	lr, [sp, #4]
   1121c:	bl	10b88 <malloc@plt>
   11220:	cmp	r0, #0
   11224:	beq	11238 <vetor_novo@@Base+0x28>
   11228:	mov	r3, #0
   1122c:	str	r3, [r0]
   11230:	str	r3, [r0, #4]
   11234:	str	r3, [r0, #8]
   11238:	ldr	r4, [sp]
   1123c:	add	sp, sp, #4
   11240:	pop	{pc}		; (ldr pc, [sp], #4)

00011244 <vetor_apaga@@Base>:
   11244:	strd	r4, [sp, #-16]!
   11248:	subs	r5, r0, #0
   1124c:	str	r6, [sp, #8]
   11250:	str	lr, [sp, #12]
   11254:	beq	112a4 <vetor_apaga@@Base+0x60>
   11258:	ldr	r3, [r5]
   1125c:	cmp	r3, #0
   11260:	ble	11284 <vetor_apaga@@Base+0x40>
   11264:	mov	r4, #0
   11268:	ldr	r3, [r5, #8]
   1126c:	ldr	r0, [r3, r4, lsl #2]
   11270:	add	r4, r4, #1
   11274:	bl	10b40 <free@plt>
   11278:	ldr	r3, [r5]
   1127c:	cmp	r3, r4
   11280:	bgt	11268 <vetor_apaga@@Base+0x24>
   11284:	ldr	r0, [r5, #8]
   11288:	bl	10b40 <free@plt>
   1128c:	mov	r0, r5
   11290:	ldrd	r4, [sp]
   11294:	ldr	r6, [sp, #8]
   11298:	ldr	lr, [sp, #12]
   1129c:	add	sp, sp, #16
   112a0:	b	10b40 <free@plt>
   112a4:	ldrd	r4, [sp]
   112a8:	ldr	r6, [sp, #8]
   112ac:	add	sp, sp, #12
   112b0:	pop	{pc}		; (ldr pc, [sp], #4)

000112b4 <vetor_atribui@@Base>:
   112b4:	cmp	r0, #0
   112b8:	lsrne	r3, r1, #31
   112bc:	moveq	r3, #1
   112c0:	cmp	r3, #0
   112c4:	bne	11368 <vetor_atribui@@Base+0xb4>
   112c8:	ldr	r3, [r0]
   112cc:	cmp	r3, r1
   112d0:	ble	11368 <vetor_atribui@@Base+0xb4>
   112d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   112d8:	mov	r5, r0
   112dc:	mov	r0, r2
   112e0:	mov	r4, r1
   112e4:	strd	r6, [sp, #8]
   112e8:	mov	r6, r2
   112ec:	strd	r8, [sp, #16]
   112f0:	str	sl, [sp, #24]
   112f4:	str	lr, [sp, #28]
   112f8:	bl	10bac <strlen@plt>
   112fc:	ldr	r8, [r5, #8]
   11300:	mov	r9, r0
   11304:	ldr	r7, [r8, r4, lsl #2]
   11308:	mov	r0, r7
   1130c:	bl	10bac <strlen@plt>
   11310:	cmp	r0, r9
   11314:	bcc	11340 <vetor_atribui@@Base+0x8c>
   11318:	mov	r1, r6
   1131c:	mov	r0, r7
   11320:	bl	10b70 <strcpy@plt>
   11324:	mov	r0, r4
   11328:	ldrd	r4, [sp]
   1132c:	ldrd	r6, [sp, #8]
   11330:	ldrd	r8, [sp, #16]
   11334:	ldr	sl, [sp, #24]
   11338:	add	sp, sp, #28
   1133c:	pop	{pc}		; (ldr pc, [sp], #4)
   11340:	mov	r0, r7
   11344:	add	r1, r9, #1
   11348:	bl	10b58 <realloc@plt>
   1134c:	ldr	r3, [r5, #8]
   11350:	str	r0, [r8, r4, lsl #2]
   11354:	ldr	r7, [r3, r4, lsl #2]
   11358:	cmp	r7, #0
   1135c:	bne	11318 <vetor_atribui@@Base+0x64>
   11360:	mvn	r0, #0
   11364:	b	11328 <vetor_atribui@@Base+0x74>
   11368:	mvn	r0, #0
   1136c:	bx	lr

00011370 <vetor_tamanho@@Base>:
   11370:	cmp	r0, #0
   11374:	ldrne	r0, [r0]
   11378:	mvneq	r0, #0
   1137c:	bx	lr

00011380 <vetor_elemento@@Base>:
   11380:	cmp	r0, #0
   11384:	lsrne	r3, r1, #31
   11388:	moveq	r3, #1
   1138c:	cmp	r3, #0
   11390:	bne	113ac <vetor_elemento@@Base+0x2c>
   11394:	ldr	r2, [r0]
   11398:	cmp	r2, r1
   1139c:	ble	113ac <vetor_elemento@@Base+0x2c>
   113a0:	ldr	r3, [r0, #8]
   113a4:	ldr	r0, [r3, r1, lsl #2]
   113a8:	bx	lr
   113ac:	mov	r0, #0
   113b0:	bx	lr

000113b4 <vetor_insere@@Base>:
   113b4:	cmp	r0, #0
   113b8:	lsrne	r3, r2, #31
   113bc:	moveq	r3, #1
   113c0:	cmp	r3, #0
   113c4:	bne	114a4 <vetor_insere@@Base+0xf0>
   113c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   113cc:	strd	r6, [sp, #8]
   113d0:	ldr	r6, [r0]
   113d4:	str	r8, [sp, #16]
   113d8:	str	lr, [sp, #20]
   113dc:	cmp	r6, r2
   113e0:	blt	1149c <vetor_insere@@Base+0xe8>
   113e4:	ldmib	r0, {r3, r5}
   113e8:	mov	r7, r0
   113ec:	mov	r8, r1
   113f0:	mov	r4, r2
   113f4:	cmp	r6, r3
   113f8:	beq	11464 <vetor_insere@@Base+0xb0>
   113fc:	cmp	r4, r6
   11400:	addlt	r3, r5, r6, lsl #2
   11404:	addlt	r2, r5, r4, lsl #2
   11408:	bge	1141c <vetor_insere@@Base+0x68>
   1140c:	ldr	ip, [r3, #-4]
   11410:	str	ip, [r3], #-4
   11414:	cmp	r2, r3
   11418:	bne	1140c <vetor_insere@@Base+0x58>
   1141c:	mov	r0, r8
   11420:	bl	10bac <strlen@plt>
   11424:	add	r0, r0, #1
   11428:	mov	r1, #1
   1142c:	bl	10b28 <calloc@plt>
   11430:	cmp	r0, #0
   11434:	str	r0, [r5, r4, lsl #2]
   11438:	beq	1149c <vetor_insere@@Base+0xe8>
   1143c:	mov	r1, r8
   11440:	bl	10b70 <strcpy@plt>
   11444:	add	r1, r6, #1
   11448:	mov	r0, r4
   1144c:	str	r1, [r7]
   11450:	ldrd	r4, [sp]
   11454:	ldrd	r6, [sp, #8]
   11458:	ldr	r8, [sp, #16]
   1145c:	add	sp, sp, #20
   11460:	pop	{pc}		; (ldr pc, [sp], #4)
   11464:	cmp	r6, #0
   11468:	mov	r0, r5
   1146c:	lslne	r3, r6, #1
   11470:	moveq	r3, #1
   11474:	moveq	r1, #4
   11478:	lslne	r1, r6, #3
   1147c:	str	r3, [r7, #4]
   11480:	bl	10b58 <realloc@plt>
   11484:	cmp	r0, #0
   11488:	mov	r5, r0
   1148c:	str	r0, [r7, #8]
   11490:	beq	1149c <vetor_insere@@Base+0xe8>
   11494:	ldr	r6, [r7]
   11498:	b	113fc <vetor_insere@@Base+0x48>
   1149c:	mvn	r0, #0
   114a0:	b	11450 <vetor_insere@@Base+0x9c>
   114a4:	mvn	r0, #0
   114a8:	bx	lr

000114ac <vetor_remove@@Base>:
   114ac:	cmp	r0, #0
   114b0:	lsrne	r3, r1, #31
   114b4:	moveq	r3, #1
   114b8:	cmp	r3, #0
   114bc:	bne	1153c <vetor_remove@@Base+0x90>
   114c0:	ldr	r3, [r0]
   114c4:	cmp	r3, r1
   114c8:	ble	1153c <vetor_remove@@Base+0x90>
   114cc:	ldr	r3, [r0, #8]
   114d0:	strd	r4, [sp, #-16]!
   114d4:	mov	r5, r0
   114d8:	mov	r4, r1
   114dc:	ldr	r0, [r3, r1, lsl #2]
   114e0:	str	r6, [sp, #8]
   114e4:	lsl	r6, r1, #2
   114e8:	str	lr, [sp, #12]
   114ec:	bl	10b40 <free@plt>
   114f0:	ldr	r0, [r5]
   114f4:	add	r1, r4, #1
   114f8:	cmp	r1, r0
   114fc:	bge	11520 <vetor_remove@@Base+0x74>
   11500:	ldr	r3, [r5, #8]
   11504:	sub	r1, r3, #4
   11508:	add	r3, r3, r6
   1150c:	add	r1, r1, r0, lsl #2
   11510:	ldr	r2, [r3, #4]
   11514:	str	r2, [r3], #4
   11518:	cmp	r3, r1
   1151c:	bne	11510 <vetor_remove@@Base+0x64>
   11520:	sub	r3, r0, #1
   11524:	ldr	r6, [sp, #8]
   11528:	mov	r0, #0
   1152c:	str	r3, [r5]
   11530:	ldrd	r4, [sp]
   11534:	add	sp, sp, #12
   11538:	pop	{pc}		; (ldr pc, [sp], #4)
   1153c:	mvn	r0, #0
   11540:	bx	lr

00011544 <vetor_pesquisa@@Base>:
   11544:	cmp	r0, #0
   11548:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1154c:	strd	r6, [sp, #8]
   11550:	str	r8, [sp, #16]
   11554:	str	lr, [sp, #20]
   11558:	beq	115b4 <vetor_pesquisa@@Base+0x70>
   1155c:	ldr	r7, [r0]
   11560:	cmp	r7, #0
   11564:	ble	115b4 <vetor_pesquisa@@Base+0x70>
   11568:	ldr	r5, [r0, #8]
   1156c:	mov	r6, r1
   11570:	mov	r4, #0
   11574:	sub	r5, r5, #4
   11578:	b	11588 <vetor_pesquisa@@Base+0x44>
   1157c:	add	r4, r4, #1
   11580:	cmp	r7, r4
   11584:	beq	115b4 <vetor_pesquisa@@Base+0x70>
   11588:	mov	r1, r6
   1158c:	ldr	r0, [r5, #4]!
   11590:	bl	10b34 <strcmp@plt>
   11594:	cmp	r0, #0
   11598:	bne	1157c <vetor_pesquisa@@Base+0x38>
   1159c:	mov	r0, r4
   115a0:	ldrd	r4, [sp]
   115a4:	ldrd	r6, [sp, #8]
   115a8:	ldr	r8, [sp, #16]
   115ac:	add	sp, sp, #20
   115b0:	pop	{pc}		; (ldr pc, [sp], #4)
   115b4:	mvn	r4, #0
   115b8:	b	1159c <vetor_pesquisa@@Base+0x58>

000115bc <vetor_ordena@@Base>:
   115bc:	cmp	r0, #0
   115c0:	beq	11664 <vetor_ordena@@Base+0xa8>
   115c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   115c8:	strd	r6, [sp, #8]
   115cc:	strd	sl, [sp, #24]
   115d0:	ldr	sl, [r0]
   115d4:	strd	r8, [sp, #16]
   115d8:	str	lr, [sp, #32]
   115dc:	sub	sp, sp, #12
   115e0:	cmp	sl, #1
   115e4:	ble	11644 <vetor_ordena@@Base+0x88>
   115e8:	ldr	r3, [r0, #8]
   115ec:	mov	r8, #1
   115f0:	mov	r9, r3
   115f4:	str	r3, [sp, #4]
   115f8:	ldr	r7, [r9, #4]!
   115fc:	mov	r5, r8
   11600:	mov	r4, r9
   11604:	ldr	r6, [r4, #-4]
   11608:	mov	r0, r7
   1160c:	mov	fp, r4
   11610:	mov	r1, r6
   11614:	bl	10b34 <strcmp@plt>
   11618:	cmp	r0, #0
   1161c:	bge	11634 <vetor_ordena@@Base+0x78>
   11620:	subs	r5, r5, #1
   11624:	str	r6, [r4]
   11628:	sub	r4, fp, #4
   1162c:	bne	11604 <vetor_ordena@@Base+0x48>
   11630:	ldr	fp, [sp, #4]
   11634:	add	r8, r8, #1
   11638:	str	r7, [fp]
   1163c:	cmp	r8, sl
   11640:	bne	115f8 <vetor_ordena@@Base+0x3c>
   11644:	mov	r0, #0
   11648:	add	sp, sp, #12
   1164c:	ldrd	r4, [sp]
   11650:	ldrd	r6, [sp, #8]
   11654:	ldrd	r8, [sp, #16]
   11658:	ldrd	sl, [sp, #24]
   1165c:	add	sp, sp, #32
   11660:	pop	{pc}		; (ldr pc, [sp], #4)
   11664:	mvn	r0, #0
   11668:	bx	lr

0001166c <novo_str@@Base>:
   1166c:	strd	r4, [sp, #-16]!
   11670:	mov	r5, r0
   11674:	mov	r0, #12
   11678:	str	r6, [sp, #8]
   1167c:	str	lr, [sp, #12]
   11680:	bl	10b88 <malloc@plt>
   11684:	subs	r4, r0, #0
   11688:	beq	116c8 <novo_str@@Base+0x5c>
   1168c:	mov	r0, r5
   11690:	bl	10bac <strlen@plt>
   11694:	add	r6, r0, #1
   11698:	mov	r0, r6
   1169c:	bl	10b88 <malloc@plt>
   116a0:	cmp	r0, #0
   116a4:	mov	r3, r0
   116a8:	str	r0, [r4]
   116ac:	beq	116dc <novo_str@@Base+0x70>
   116b0:	mov	r2, r6
   116b4:	mov	r1, r5
   116b8:	bl	10b4c <memcpy@plt>
   116bc:	mov	r3, #0
   116c0:	str	r3, [r4, #4]
   116c4:	str	r3, [r4, #8]
   116c8:	mov	r0, r4
   116cc:	ldrd	r4, [sp]
   116d0:	ldr	r6, [sp, #8]
   116d4:	add	sp, sp, #12
   116d8:	pop	{pc}		; (ldr pc, [sp], #4)
   116dc:	mov	r0, r4
   116e0:	mov	r4, r3
   116e4:	bl	10b40 <free@plt>
   116e8:	b	116c8 <novo_str@@Base+0x5c>

000116ec <lista_nova@@Base>:
   116ec:	mov	r0, #12
   116f0:	str	r4, [sp, #-8]!
   116f4:	str	lr, [sp, #4]
   116f8:	bl	10b88 <malloc@plt>
   116fc:	cmp	r0, #0
   11700:	beq	11714 <lista_nova@@Base+0x28>
   11704:	mov	r3, #0
   11708:	str	r3, [r0]
   1170c:	str	r3, [r0, #4]
   11710:	str	r3, [r0, #8]
   11714:	ldr	r4, [sp]
   11718:	add	sp, sp, #4
   1171c:	pop	{pc}		; (ldr pc, [sp], #4)

00011720 <lista_apaga@@Base>:
   11720:	strd	r4, [sp, #-16]!
   11724:	subs	r5, r0, #0
   11728:	str	r6, [sp, #8]
   1172c:	str	lr, [sp, #12]
   11730:	bne	1174c <lista_apaga@@Base+0x2c>
   11734:	b	11770 <lista_apaga@@Base+0x50>
   11738:	ldm	r4, {r0, r3}
   1173c:	str	r3, [r5]
   11740:	bl	10b40 <free@plt>
   11744:	mov	r0, r4
   11748:	bl	10b40 <free@plt>
   1174c:	ldr	r4, [r5]
   11750:	cmp	r4, #0
   11754:	bne	11738 <lista_apaga@@Base+0x18>
   11758:	mov	r0, r5
   1175c:	ldrd	r4, [sp]
   11760:	ldr	r6, [sp, #8]
   11764:	ldr	lr, [sp, #12]
   11768:	add	sp, sp, #16
   1176c:	b	10b40 <free@plt>
   11770:	ldrd	r4, [sp]
   11774:	ldr	r6, [sp, #8]
   11778:	add	sp, sp, #12
   1177c:	pop	{pc}		; (ldr pc, [sp], #4)

00011780 <lista_tamanho@@Base>:
   11780:	cmp	r0, #0
   11784:	ldrne	r0, [r0, #8]
   11788:	mvneq	r0, #0
   1178c:	bx	lr

00011790 <lista_inicio@@Base>:
   11790:	cmp	r0, #0
   11794:	ldrne	r0, [r0]
   11798:	bx	lr

0001179c <lista_fim@@Base>:
   1179c:	cmp	r0, #0
   117a0:	ldrne	r0, [r0, #4]
   117a4:	bx	lr

000117a8 <lista_insere@@Base>:
   117a8:	cmp	r1, #0
   117ac:	cmpne	r0, #0
   117b0:	beq	11868 <lista_insere@@Base+0xc0>
   117b4:	strd	r4, [sp, #-16]!
   117b8:	mov	r5, r0
   117bc:	mov	r0, r1
   117c0:	mov	r4, r2
   117c4:	str	r6, [sp, #8]
   117c8:	str	lr, [sp, #12]
   117cc:	bl	1166c <novo_str@@Base>
   117d0:	cmp	r0, #0
   117d4:	beq	1182c <lista_insere@@Base+0x84>
   117d8:	cmp	r4, #0
   117dc:	ldr	r2, [r5]
   117e0:	ldr	r3, [r5, #8]
   117e4:	add	r3, r3, #1
   117e8:	str	r3, [r5, #8]
   117ec:	beq	11840 <lista_insere@@Base+0x98>
   117f0:	cmp	r4, r2
   117f4:	streq	r4, [r0, #4]
   117f8:	streq	r0, [r4, #8]
   117fc:	streq	r0, [r5]
   11800:	beq	1181c <lista_insere@@Base+0x74>
   11804:	ldr	r3, [r4, #8]
   11808:	str	r4, [r0, #4]
   1180c:	str	r3, [r0, #8]
   11810:	ldr	r3, [r4, #8]
   11814:	str	r0, [r3, #4]
   11818:	str	r0, [r4, #8]
   1181c:	ldrd	r4, [sp]
   11820:	ldr	r6, [sp, #8]
   11824:	add	sp, sp, #12
   11828:	pop	{pc}		; (ldr pc, [sp], #4)
   1182c:	ldrd	r4, [sp]
   11830:	mov	r0, #0
   11834:	ldr	r6, [sp, #8]
   11838:	add	sp, sp, #12
   1183c:	pop	{pc}		; (ldr pc, [sp], #4)
   11840:	cmp	r2, #0
   11844:	ldr	r6, [sp, #8]
   11848:	ldrne	r3, [r5, #4]
   1184c:	streq	r0, [r5]
   11850:	strne	r3, [r0, #8]
   11854:	strne	r0, [r3, #4]
   11858:	str	r0, [r5, #4]
   1185c:	ldrd	r4, [sp]
   11860:	add	sp, sp, #12
   11864:	pop	{pc}		; (ldr pc, [sp], #4)
   11868:	mov	r0, #0
   1186c:	bx	lr

00011870 <lista_remove@@Base>:
   11870:	cmp	r1, #0
   11874:	cmpne	r0, #0
   11878:	strd	r4, [sp, #-16]!
   1187c:	moveq	r5, #0
   11880:	str	r6, [sp, #8]
   11884:	str	lr, [sp, #12]
   11888:	beq	118d0 <lista_remove@@Base+0x60>
   1188c:	ldr	r3, [r0, #8]
   11890:	mov	r4, r1
   11894:	ldr	r2, [r1, #8]
   11898:	ldr	r5, [r1, #4]
   1189c:	sub	r3, r3, #1
   118a0:	cmp	r2, #0
   118a4:	str	r3, [r0, #8]
   118a8:	strne	r5, [r2, #4]
   118ac:	ldrne	r5, [r1, #4]
   118b0:	streq	r5, [r0]
   118b4:	cmp	r5, #0
   118b8:	streq	r2, [r0, #4]
   118bc:	strne	r2, [r5, #8]
   118c0:	ldr	r0, [r1]
   118c4:	bl	10b40 <free@plt>
   118c8:	mov	r0, r4
   118cc:	bl	10b40 <free@plt>
   118d0:	mov	r0, r5
   118d4:	ldrd	r4, [sp]
   118d8:	ldr	r6, [sp, #8]
   118dc:	add	sp, sp, #12
   118e0:	pop	{pc}		; (ldr pc, [sp], #4)

000118e4 <lista_pesquisa@@Base>:
   118e4:	strd	r4, [sp, #-16]!
   118e8:	clz	r4, r1
   118ec:	cmp	r0, #0
   118f0:	lsr	r4, r4, #5
   118f4:	moveq	r4, #1
   118f8:	str	r6, [sp, #8]
   118fc:	str	lr, [sp, #12]
   11900:	cmp	r4, #0
   11904:	movne	r4, #0
   11908:	bne	11950 <lista_pesquisa@@Base+0x6c>
   1190c:	cmp	r2, #1
   11910:	bhi	11950 <lista_pesquisa@@Base+0x6c>
   11914:	cmp	r2, #0
   11918:	mov	r5, r1
   1191c:	bne	11964 <lista_pesquisa@@Base+0x80>
   11920:	ldr	r4, [r0]
   11924:	cmp	r4, #0
   11928:	bne	1193c <lista_pesquisa@@Base+0x58>
   1192c:	b	11950 <lista_pesquisa@@Base+0x6c>
   11930:	ldr	r4, [r4, #4]
   11934:	cmp	r4, #0
   11938:	beq	11950 <lista_pesquisa@@Base+0x6c>
   1193c:	mov	r1, r5
   11940:	ldr	r0, [r4]
   11944:	bl	10b34 <strcmp@plt>
   11948:	cmp	r0, #0
   1194c:	bne	11930 <lista_pesquisa@@Base+0x4c>
   11950:	mov	r0, r4
   11954:	ldrd	r4, [sp]
   11958:	ldr	r6, [sp, #8]
   1195c:	add	sp, sp, #12
   11960:	pop	{pc}		; (ldr pc, [sp], #4)
   11964:	ldr	r4, [r0, #4]
   11968:	cmp	r4, #0
   1196c:	bne	11980 <lista_pesquisa@@Base+0x9c>
   11970:	b	11950 <lista_pesquisa@@Base+0x6c>
   11974:	ldr	r4, [r4, #8]
   11978:	cmp	r4, #0
   1197c:	beq	11950 <lista_pesquisa@@Base+0x6c>
   11980:	mov	r1, r5
   11984:	ldr	r0, [r4]
   11988:	bl	10b34 <strcmp@plt>
   1198c:	cmp	r0, #0
   11990:	bne	11974 <lista_pesquisa@@Base+0x90>
   11994:	b	11950 <lista_pesquisa@@Base+0x6c>

00011998 <lista_ordena@@Base>:
   11998:	cmp	r0, #0
   1199c:	beq	11a28 <lista_ordena@@Base+0x90>
   119a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   119a4:	strd	r6, [sp, #8]
   119a8:	ldr	r6, [r0]
   119ac:	str	r8, [sp, #16]
   119b0:	str	lr, [sp, #20]
   119b4:	ldr	r7, [r6, #4]
   119b8:	cmp	r7, #0
   119bc:	beq	11a10 <lista_ordena@@Base+0x78>
   119c0:	mov	r5, r6
   119c4:	mov	r4, r7
   119c8:	ldr	r0, [r4]
   119cc:	ldr	r1, [r5]
   119d0:	bl	10b34 <strcmp@plt>
   119d4:	cmp	r0, #0
   119d8:	movlt	r5, r4
   119dc:	ldr	r4, [r4, #4]
   119e0:	cmp	r4, #0
   119e4:	bne	119c8 <lista_ordena@@Base+0x30>
   119e8:	cmp	r6, r5
   119ec:	beq	11a00 <lista_ordena@@Base+0x68>
   119f0:	ldr	r2, [r5]
   119f4:	ldr	r3, [r6]
   119f8:	str	r2, [r6]
   119fc:	str	r3, [r5]
   11a00:	mov	r6, r7
   11a04:	ldr	r7, [r6, #4]
   11a08:	cmp	r7, #0
   11a0c:	bne	119c0 <lista_ordena@@Base+0x28>
   11a10:	mov	r0, r7
   11a14:	ldrd	r4, [sp]
   11a18:	ldrd	r6, [sp, #8]
   11a1c:	ldr	r8, [sp, #16]
   11a20:	add	sp, sp, #20
   11a24:	pop	{pc}		; (ldr pc, [sp], #4)
   11a28:	mvn	r0, #0
   11a2c:	bx	lr

00011a30 <lista_inverte@@Base>:
   11a30:	strd	r4, [sp, #-12]!
   11a34:	subs	r5, r0, #0
   11a38:	str	lr, [sp, #8]
   11a3c:	beq	11ad0 <lista_inverte@@Base+0xa0>
   11a40:	ldr	r4, [r5, #8]
   11a44:	cmp	r4, #1
   11a48:	movle	r0, #0
   11a4c:	ble	11abc <lista_inverte@@Base+0x8c>
   11a50:	ldr	r1, [r5]
   11a54:	cmp	r4, #2
   11a58:	ldr	r3, [r1, #4]
   11a5c:	beq	11ac8 <lista_inverte@@Base+0x98>
   11a60:	sub	r4, r4, #2
   11a64:	mov	ip, #0
   11a68:	b	11a70 <lista_inverte@@Base+0x40>
   11a6c:	mov	r3, r2
   11a70:	ldmib	r3, {r2, lr}
   11a74:	add	ip, ip, #1
   11a78:	cmp	r4, ip
   11a7c:	str	r2, [lr, #4]
   11a80:	str	lr, [r2, #8]
   11a84:	str	r1, [r3, #4]
   11a88:	str	r3, [r1, #8]
   11a8c:	mov	r1, r3
   11a90:	bne	11a6c <lista_inverte@@Base+0x3c>
   11a94:	ldr	r2, [r5, #4]
   11a98:	mov	r1, #0
   11a9c:	mov	r0, r1
   11aa0:	ldr	ip, [r2, #8]
   11aa4:	str	ip, [r5, #4]
   11aa8:	str	r1, [ip, #4]
   11aac:	str	r3, [r2, #4]
   11ab0:	str	r1, [r2, #8]
   11ab4:	str	r2, [r3, #8]
   11ab8:	str	r2, [r5]
   11abc:	ldrd	r4, [sp]
   11ac0:	add	sp, sp, #8
   11ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ac8:	mov	r3, r1
   11acc:	b	11a94 <lista_inverte@@Base+0x64>
   11ad0:	mvn	r0, #0
   11ad4:	b	11abc <lista_inverte@@Base+0x8c>

00011ad8 <__libc_csu_init@@Base>:
   11ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11adc:	mov	r7, r0
   11ae0:	ldr	r6, [pc, #72]	; 11b30 <__libc_csu_init@@Base+0x58>
   11ae4:	ldr	r5, [pc, #72]	; 11b34 <__libc_csu_init@@Base+0x5c>
   11ae8:	add	r6, pc, r6
   11aec:	add	r5, pc, r5
   11af0:	sub	r6, r6, r5
   11af4:	mov	r8, r1
   11af8:	mov	r9, r2
   11afc:	bl	10b08 <calloc@plt-0x20>
   11b00:	asrs	r6, r6, #2
   11b04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b08:	mov	r4, #0
   11b0c:	add	r4, r4, #1
   11b10:	ldr	r3, [r5], #4
   11b14:	mov	r2, r9
   11b18:	mov	r1, r8
   11b1c:	mov	r0, r7
   11b20:	blx	r3
   11b24:	cmp	r6, r4
   11b28:	bne	11b0c <__libc_csu_init@@Base+0x34>
   11b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b30:	andeq	r0, r1, r4, lsr #8
   11b34:	andeq	r0, r1, ip, lsl r4

00011b38 <__libc_csu_fini@@Base>:
   11b38:	bx	lr

Disassembly of section .fini:

00011b3c <.fini>:
   11b3c:	push	{r3, lr}
   11b40:	pop	{r3, pc}
