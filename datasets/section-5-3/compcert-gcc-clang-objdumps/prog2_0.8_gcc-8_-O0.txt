
../compcert-repos/prog2/0.8:     file format elf32-littlearm


Disassembly of section .init:

000105e8 <.init>:
   105e8:	push	{r3, lr}
   105ec:	bl	10698 <_start@@Base+0x3c>
   105f0:	pop	{r3, pc}

Disassembly of section .plt:

000105f4 <printf@plt-0x14>:
   105f4:	push	{lr}		; (str lr, [sp, #-4]!)
   105f8:	ldr	lr, [pc, #4]	; 10604 <printf@plt-0x4>
   105fc:	add	lr, pc, lr
   10600:	ldr	pc, [lr, #8]!
   10604:	strdeq	r0, [r1], -ip

00010608 <printf@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2556]!	; 0x9fc

00010614 <strcpy@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2548]!	; 0x9f4

00010620 <__libc_start_main@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2540]!	; 0x9ec

0001062c <__gmon_start__@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2532]!	; 0x9e4

00010638 <memset@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2524]!	; 0x9dc

00010644 <__isoc99_scanf@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010650 <abort@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2508]!	; 0x9cc

Disassembly of section .text:

0001065c <_start@@Base>:
   1065c:	mov	fp, #0
   10660:	mov	lr, #0
   10664:	pop	{r1}		; (ldr r1, [sp], #4)
   10668:	mov	r2, sp
   1066c:	push	{r2}		; (str r2, [sp, #-4]!)
   10670:	push	{r0}		; (str r0, [sp, #-4]!)
   10674:	ldr	ip, [pc, #16]	; 1068c <_start@@Base+0x30>
   10678:	push	{ip}		; (str ip, [sp, #-4]!)
   1067c:	ldr	r0, [pc, #12]	; 10690 <_start@@Base+0x34>
   10680:	ldr	r3, [pc, #12]	; 10694 <_start@@Base+0x38>
   10684:	bl	10620 <__libc_start_main@plt>
   10688:	bl	10650 <abort@plt>
   1068c:	muleq	r1, r4, sl
   10690:	andeq	r0, r1, r0, lsl r9
   10694:	andeq	r0, r1, r4, lsr sl
   10698:	ldr	r3, [pc, #20]	; 106b4 <_start@@Base+0x58>
   1069c:	ldr	r2, [pc, #20]	; 106b8 <_start@@Base+0x5c>
   106a0:	add	r3, pc, r3
   106a4:	ldr	r2, [r3, r2]
   106a8:	cmp	r2, #0
   106ac:	bxeq	lr
   106b0:	b	1062c <__gmon_start__@plt>
   106b4:	andeq	r0, r1, r8, asr r9
   106b8:	andeq	r0, r0, r8, lsr #32
   106bc:	ldr	r0, [pc, #24]	; 106dc <_start@@Base+0x80>
   106c0:	ldr	r3, [pc, #24]	; 106e0 <_start@@Base+0x84>
   106c4:	cmp	r3, r0
   106c8:	bxeq	lr
   106cc:	ldr	r3, [pc, #16]	; 106e4 <_start@@Base+0x88>
   106d0:	cmp	r3, #0
   106d4:	bxeq	lr
   106d8:	bx	r3
   106dc:	andeq	r1, r2, r4, lsr r0
   106e0:	andeq	r1, r2, r4, lsr r0
   106e4:	andeq	r0, r0, r0
   106e8:	ldr	r0, [pc, #36]	; 10714 <_start@@Base+0xb8>
   106ec:	ldr	r1, [pc, #36]	; 10718 <_start@@Base+0xbc>
   106f0:	sub	r1, r1, r0
   106f4:	asr	r1, r1, #2
   106f8:	add	r1, r1, r1, lsr #31
   106fc:	asrs	r1, r1, #1
   10700:	bxeq	lr
   10704:	ldr	r3, [pc, #16]	; 1071c <_start@@Base+0xc0>
   10708:	cmp	r3, #0
   1070c:	bxeq	lr
   10710:	bx	r3
   10714:	andeq	r1, r2, r4, lsr r0
   10718:	andeq	r1, r2, r4, lsr r0
   1071c:	andeq	r0, r0, r0
   10720:	push	{r4, lr}
   10724:	ldr	r4, [pc, #24]	; 10744 <_start@@Base+0xe8>
   10728:	ldrb	r3, [r4]
   1072c:	cmp	r3, #0
   10730:	popne	{r4, pc}
   10734:	bl	106bc <_start@@Base+0x60>
   10738:	mov	r3, #1
   1073c:	strb	r3, [r4]
   10740:	pop	{r4, pc}
   10744:	andeq	r1, r2, r4, lsr r0
   10748:	b	106e8 <_start@@Base+0x8c>

0001074c <lerpontuacoes@@Base>:
   1074c:	str	fp, [sp, #-8]!
   10750:	str	lr, [sp, #4]
   10754:	add	fp, sp, #4
   10758:	sub	sp, sp, #16
   1075c:	str	r0, [fp, #-16]
   10760:	str	r1, [fp, #-20]	; 0xffffffec
   10764:	sub	r3, fp, #12
   10768:	mov	r1, r3
   1076c:	movw	r0, #2724	; 0xaa4
   10770:	movt	r0, #1
   10774:	bl	10644 <__isoc99_scanf@plt>
   10778:	mov	r3, #0
   1077c:	str	r3, [fp, #-8]
   10780:	b	107c4 <lerpontuacoes@@Base+0x78>
   10784:	ldr	r3, [fp, #-8]
   10788:	mov	r2, #50	; 0x32
   1078c:	mul	r3, r2, r3
   10790:	ldr	r2, [fp, #-16]
   10794:	add	r1, r2, r3
   10798:	ldr	r3, [fp, #-8]
   1079c:	lsl	r3, r3, #2
   107a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   107a4:	add	r3, r2, r3
   107a8:	mov	r2, r3
   107ac:	movw	r0, #2728	; 0xaa8
   107b0:	movt	r0, #1
   107b4:	bl	10644 <__isoc99_scanf@plt>
   107b8:	ldr	r3, [fp, #-8]
   107bc:	add	r3, r3, #1
   107c0:	str	r3, [fp, #-8]
   107c4:	ldr	r3, [fp, #-12]
   107c8:	ldr	r2, [fp, #-8]
   107cc:	cmp	r2, r3
   107d0:	blt	10784 <lerpontuacoes@@Base+0x38>
   107d4:	ldr	r3, [fp, #-12]
   107d8:	mov	r0, r3
   107dc:	sub	sp, fp, #4
   107e0:	ldr	fp, [sp]
   107e4:	add	sp, sp, #4
   107e8:	pop	{pc}		; (ldr pc, [sp], #4)

000107ec <primeiroUltimo@@Base>:
   107ec:	str	fp, [sp, #-8]!
   107f0:	str	lr, [sp, #4]
   107f4:	add	fp, sp, #4
   107f8:	sub	sp, sp, #32
   107fc:	str	r0, [fp, #-24]	; 0xffffffe8
   10800:	str	r1, [fp, #-28]	; 0xffffffe4
   10804:	str	r2, [fp, #-32]	; 0xffffffe0
   10808:	str	r3, [fp, #-36]	; 0xffffffdc
   1080c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10810:	ldr	r3, [r3]
   10814:	str	r3, [fp, #-12]
   10818:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1081c:	ldr	r3, [r3]
   10820:	str	r3, [fp, #-16]
   10824:	mov	r3, #1
   10828:	str	r3, [fp, #-8]
   1082c:	b	108ec <primeiroUltimo@@Base+0x100>
   10830:	ldr	r3, [fp, #-8]
   10834:	lsl	r3, r3, #2
   10838:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1083c:	add	r3, r2, r3
   10840:	ldr	r3, [r3]
   10844:	ldr	r2, [fp, #-12]
   10848:	cmp	r2, r3
   1084c:	bge	10888 <primeiroUltimo@@Base+0x9c>
   10850:	ldr	r3, [fp, #-8]
   10854:	lsl	r3, r3, #2
   10858:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1085c:	add	r3, r2, r3
   10860:	ldr	r3, [r3]
   10864:	str	r3, [fp, #-12]
   10868:	ldr	r3, [fp, #-8]
   1086c:	mov	r2, #50	; 0x32
   10870:	mul	r3, r2, r3
   10874:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10878:	add	r3, r2, r3
   1087c:	mov	r1, r3
   10880:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10884:	bl	10614 <strcpy@plt>
   10888:	ldr	r3, [fp, #-8]
   1088c:	lsl	r3, r3, #2
   10890:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10894:	add	r3, r2, r3
   10898:	ldr	r3, [r3]
   1089c:	ldr	r2, [fp, #-16]
   108a0:	cmp	r2, r3
   108a4:	ble	108e0 <primeiroUltimo@@Base+0xf4>
   108a8:	ldr	r3, [fp, #-8]
   108ac:	lsl	r3, r3, #2
   108b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   108b4:	add	r3, r2, r3
   108b8:	ldr	r3, [r3]
   108bc:	str	r3, [fp, #-16]
   108c0:	ldr	r3, [fp, #-8]
   108c4:	mov	r2, #50	; 0x32
   108c8:	mul	r3, r2, r3
   108cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   108d0:	add	r3, r2, r3
   108d4:	mov	r1, r3
   108d8:	ldr	r0, [fp, #4]
   108dc:	bl	10614 <strcpy@plt>
   108e0:	ldr	r3, [fp, #-8]
   108e4:	add	r3, r3, #1
   108e8:	str	r3, [fp, #-8]
   108ec:	ldr	r2, [fp, #-8]
   108f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   108f4:	cmp	r2, r3
   108f8:	blt	10830 <primeiroUltimo@@Base+0x44>
   108fc:	nop	{0}
   10900:	sub	sp, fp, #4
   10904:	ldr	fp, [sp]
   10908:	add	sp, sp, #4
   1090c:	pop	{pc}		; (ldr pc, [sp], #4)

00010910 <main@@Base>:
   10910:	str	fp, [sp, #-8]!
   10914:	str	lr, [sp, #4]
   10918:	add	fp, sp, #4
   1091c:	sub	sp, sp, #1200	; 0x4b0
   10920:	sub	r3, fp, #88	; 0x58
   10924:	mov	r2, #80	; 0x50
   10928:	mov	r1, #0
   1092c:	mov	r0, r3
   10930:	bl	10638 <memset@plt>
   10934:	sub	r3, fp, #1072	; 0x430
   10938:	sub	r3, r3, #4
   1093c:	sub	r3, r3, #12
   10940:	mov	r2, #1000	; 0x3e8
   10944:	mov	r1, #0
   10948:	mov	r0, r3
   1094c:	bl	10638 <memset@plt>
   10950:	sub	r3, fp, #1136	; 0x470
   10954:	sub	r3, r3, #4
   10958:	mov	r2, #50	; 0x32
   1095c:	mov	r1, #0
   10960:	mov	r0, r3
   10964:	bl	10638 <memset@plt>
   10968:	sub	r3, fp, #1184	; 0x4a0
   1096c:	sub	r3, r3, #4
   10970:	sub	r3, r3, #4
   10974:	mov	r2, #50	; 0x32
   10978:	mov	r1, #0
   1097c:	mov	r0, r3
   10980:	bl	10638 <memset@plt>
   10984:	sub	r2, fp, #88	; 0x58
   10988:	sub	r3, fp, #1072	; 0x430
   1098c:	sub	r3, r3, #4
   10990:	sub	r3, r3, #12
   10994:	mov	r1, r2
   10998:	mov	r0, r3
   1099c:	bl	1074c <lerpontuacoes@@Base>
   109a0:	str	r0, [fp, #-8]
   109a4:	sub	r2, fp, #1136	; 0x470
   109a8:	sub	r2, r2, #4
   109ac:	sub	r1, fp, #88	; 0x58
   109b0:	sub	r0, fp, #1072	; 0x430
   109b4:	sub	r0, r0, #4
   109b8:	sub	r0, r0, #12
   109bc:	sub	r3, fp, #1184	; 0x4a0
   109c0:	sub	r3, r3, #4
   109c4:	sub	r3, r3, #4
   109c8:	str	r3, [sp]
   109cc:	mov	r3, r2
   109d0:	ldr	r2, [fp, #-8]
   109d4:	bl	107ec <primeiroUltimo@@Base>
   109d8:	ldr	r1, [fp, #-8]
   109dc:	movw	r0, #2736	; 0xab0
   109e0:	movt	r0, #1
   109e4:	bl	10608 <printf@plt>
   109e8:	sub	r3, fp, #1136	; 0x470
   109ec:	sub	r3, r3, #4
   109f0:	mov	r1, r3
   109f4:	movw	r0, #2764	; 0xacc
   109f8:	movt	r0, #1
   109fc:	bl	10608 <printf@plt>
   10a00:	sub	r3, fp, #1184	; 0x4a0
   10a04:	sub	r3, r3, #4
   10a08:	sub	r3, r3, #4
   10a0c:	mov	r1, r3
   10a10:	movw	r0, #2780	; 0xadc
   10a14:	movt	r0, #1
   10a18:	bl	10608 <printf@plt>
   10a1c:	mov	r3, #0
   10a20:	mov	r0, r3
   10a24:	sub	sp, fp, #4
   10a28:	ldr	fp, [sp]
   10a2c:	add	sp, sp, #4
   10a30:	pop	{pc}		; (ldr pc, [sp], #4)

00010a34 <__libc_csu_init@@Base>:
   10a34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a38:	mov	r7, r0
   10a3c:	ldr	r6, [pc, #72]	; 10a8c <__libc_csu_init@@Base+0x58>
   10a40:	ldr	r5, [pc, #72]	; 10a90 <__libc_csu_init@@Base+0x5c>
   10a44:	add	r6, pc, r6
   10a48:	add	r5, pc, r5
   10a4c:	sub	r6, r6, r5
   10a50:	mov	r8, r1
   10a54:	mov	r9, r2
   10a58:	bl	105e8 <printf@plt-0x20>
   10a5c:	asrs	r6, r6, #2
   10a60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a64:	mov	r4, #0
   10a68:	add	r4, r4, #1
   10a6c:	ldr	r3, [r5], #4
   10a70:	mov	r2, r9
   10a74:	mov	r1, r8
   10a78:	mov	r0, r7
   10a7c:	blx	r3
   10a80:	cmp	r6, r4
   10a84:	bne	10a68 <__libc_csu_init@@Base+0x34>
   10a88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a8c:	andeq	r0, r1, r8, asr #9
   10a90:	andeq	r0, r1, r0, asr #9

00010a94 <__libc_csu_fini@@Base>:
   10a94:	bx	lr

Disassembly of section .fini:

00010a98 <.fini>:
   10a98:	push	{r3, lr}
   10a9c:	pop	{r3, pc}
