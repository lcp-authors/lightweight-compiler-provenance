
../compcert-repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb4 <.init>:
   10eb4:	push	{r3, lr}
   10eb8:	bl	10fe8 <_start@@Base+0x3c>
   10ebc:	pop	{r3, pc}

Disassembly of section .plt:

00010ec0 <calloc@plt-0x14>:
   10ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec4:	ldr	lr, [pc, #4]	; 10ed0 <calloc@plt-0x4>
   10ec8:	add	lr, pc, lr
   10ecc:	ldr	pc, [lr, #8]!
   10ed0:	andeq	r2, r1, r0, lsr r1

00010ed4 <calloc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #304]!	; 0x130

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #296]!	; 0x128

00010eec <printf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #288]!	; 0x120

00010ef8 <__isoc99_fscanf@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #280]!	; 0x118

00010f04 <fopen@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #272]!	; 0x110

00010f10 <free@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #264]!	; 0x108

00010f1c <memcpy@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #256]!	; 0x100

00010f28 <realloc@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #248]!	; 0xf8

00010f34 <strcpy@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #240]!	; 0xf0

00010f40 <puts@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #232]!	; 0xe8

00010f4c <malloc@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #73728	; 0x12000
   10f54:	ldr	pc, [ip, #224]!	; 0xe0

00010f58 <__libc_start_main@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #73728	; 0x12000
   10f60:	ldr	pc, [ip, #216]!	; 0xd8

00010f64 <__gmon_start__@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #73728	; 0x12000
   10f6c:	ldr	pc, [ip, #208]!	; 0xd0

00010f70 <strlen@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #73728	; 0x12000
   10f78:	ldr	pc, [ip, #200]!	; 0xc8

00010f7c <setvbuf@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #73728	; 0x12000
   10f84:	ldr	pc, [ip, #192]!	; 0xc0

00010f88 <putchar@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #73728	; 0x12000
   10f90:	ldr	pc, [ip, #184]!	; 0xb8

00010f94 <fclose@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #73728	; 0x12000
   10f9c:	ldr	pc, [ip, #176]!	; 0xb0

00010fa0 <abort@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #73728	; 0x12000
   10fa8:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00010fac <_start@@Base>:
   10fac:	mov	fp, #0
   10fb0:	mov	lr, #0
   10fb4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb8:	mov	r2, sp
   10fbc:	push	{r2}		; (str r2, [sp, #-4]!)
   10fc0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc4:	ldr	ip, [pc, #16]	; 10fdc <_start@@Base+0x30>
   10fc8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fcc:	ldr	r0, [pc, #12]	; 10fe0 <_start@@Base+0x34>
   10fd0:	ldr	r3, [pc, #12]	; 10fe4 <_start@@Base+0x38>
   10fd4:	bl	10f58 <__libc_start_main@plt>
   10fd8:	bl	10fa0 <abort@plt>
   10fdc:	andeq	r2, r1, r8, ror r6
   10fe0:	andeq	r1, r1, r8, ror #2
   10fe4:	andeq	r2, r1, r8, lsl r6
   10fe8:	ldr	r3, [pc, #20]	; 11004 <_start@@Base+0x58>
   10fec:	ldr	r2, [pc, #20]	; 11008 <_start@@Base+0x5c>
   10ff0:	add	r3, pc, r3
   10ff4:	ldr	r2, [r3, r2]
   10ff8:	cmp	r2, #0
   10ffc:	bxeq	lr
   11000:	b	10f64 <__gmon_start__@plt>
   11004:	andeq	r2, r1, r8
   11008:	andeq	r0, r0, r4, asr r0
   1100c:	ldr	r0, [pc, #24]	; 1102c <_start@@Base+0x80>
   11010:	ldr	r3, [pc, #24]	; 11030 <_start@@Base+0x84>
   11014:	cmp	r3, r0
   11018:	bxeq	lr
   1101c:	ldr	r3, [pc, #16]	; 11034 <_start@@Base+0x88>
   11020:	cmp	r3, #0
   11024:	bxeq	lr
   11028:	bx	r3
   1102c:	andeq	r3, r2, r0, rrx
   11030:	andeq	r3, r2, r0, rrx
   11034:	andeq	r0, r0, r0
   11038:	ldr	r0, [pc, #36]	; 11064 <_start@@Base+0xb8>
   1103c:	ldr	r1, [pc, #36]	; 11068 <_start@@Base+0xbc>
   11040:	sub	r1, r1, r0
   11044:	asr	r1, r1, #2
   11048:	add	r1, r1, r1, lsr #31
   1104c:	asrs	r1, r1, #1
   11050:	bxeq	lr
   11054:	ldr	r3, [pc, #16]	; 1106c <_start@@Base+0xc0>
   11058:	cmp	r3, #0
   1105c:	bxeq	lr
   11060:	bx	r3
   11064:	andeq	r3, r2, r0, rrx
   11068:	andeq	r3, r2, r0, rrx
   1106c:	andeq	r0, r0, r0
   11070:	push	{r4, lr}
   11074:	ldr	r4, [pc, #24]	; 11094 <_start@@Base+0xe8>
   11078:	ldrb	r3, [r4]
   1107c:	cmp	r3, #0
   11080:	popne	{r4, pc}
   11084:	bl	1100c <_start@@Base+0x60>
   11088:	mov	r3, #1
   1108c:	strb	r3, [r4]
   11090:	pop	{r4, pc}
   11094:	andeq	r3, r2, r4, rrx
   11098:	b	11038 <_start@@Base+0x8c>

0001109c <avl_max_subarvore@@Base>:
   1109c:	push	{r4, r5, r6, sl, fp, lr}
   110a0:	add	fp, sp, #16
   110a4:	mov	r4, r1
   110a8:	mov	r5, r0
   110ac:	bl	113a0 <avl_nova@@Base>
   110b0:	mov	r6, r0
   110b4:	mov	r0, r5
   110b8:	mov	r1, r4
   110bc:	bl	11828 <avl_pesquisa@@Base>
   110c0:	str	r0, [r6]
   110c4:	mov	r0, r6
   110c8:	bl	11d28 <avl_max@@Base>
   110cc:	mov	r1, r0
   110d0:	movw	r0, #9864	; 0x2688
   110d4:	movt	r0, #1
   110d8:	bl	10eec <printf@plt>
   110dc:	mov	r0, r6
   110e0:	pop	{r4, r5, r6, sl, fp, lr}
   110e4:	b	10f10 <free@plt>

000110e8 <tabela_copia@@Base>:
   110e8:	push	{r4, r5, r6, r7, fp, lr}
   110ec:	add	fp, sp, #16
   110f0:	sub	sp, sp, #8
   110f4:	mov	r2, r1
   110f8:	ldr	r1, [r0]
   110fc:	mov	r5, r0
   11100:	mov	r0, r2
   11104:	bl	11f38 <tabela_nova@@Base>
   11108:	mov	r4, r0
   1110c:	add	r1, sp, #4
   11110:	mov	r0, r5
   11114:	bl	123a4 <tabela_elementos@@Base>
   11118:	mov	r5, r0
   1111c:	ldr	r0, [sp, #4]
   11120:	cmp	r0, #1
   11124:	blt	11154 <tabela_copia@@Base+0x6c>
   11128:	mov	r7, #0
   1112c:	mov	r6, r5
   11130:	add	r2, r6, #50	; 0x32
   11134:	mov	r0, r4
   11138:	mov	r1, r6
   1113c:	bl	1201c <tabela_adiciona@@Base>
   11140:	ldr	r0, [sp, #4]
   11144:	add	r7, r7, #1
   11148:	add	r6, r6, #150	; 0x96
   1114c:	cmp	r7, r0
   11150:	blt	11130 <tabela_copia@@Base+0x48>
   11154:	mov	r0, r5
   11158:	bl	10f10 <free@plt>
   1115c:	mov	r0, r4
   11160:	sub	sp, fp, #16
   11164:	pop	{r4, r5, r6, r7, fp, pc}

00011168 <main@@Base>:
   11168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1116c:	add	fp, sp, #28
   11170:	sub	sp, sp, #508	; 0x1fc
   11174:	movw	r0, #12384	; 0x3060
   11178:	mov	r1, #0
   1117c:	mov	r2, #2
   11180:	mov	r3, #0
   11184:	movt	r0, #2
   11188:	ldr	r0, [r0]
   1118c:	bl	10f7c <setvbuf@plt>
   11190:	movw	r4, #9878	; 0x2696
   11194:	movw	r0, #9867	; 0x268b
   11198:	movt	r4, #1
   1119c:	movt	r0, #1
   111a0:	mov	r1, r4
   111a4:	bl	10f04 <fopen@plt>
   111a8:	mov	r9, r0
   111ac:	movw	r0, #9880	; 0x2698
   111b0:	mov	r1, r4
   111b4:	movt	r0, #1
   111b8:	bl	10f04 <fopen@plt>
   111bc:	mov	sl, r0
   111c0:	movw	r0, #9890	; 0x26a2
   111c4:	movt	r0, #1
   111c8:	bl	10f40 <puts@plt>
   111cc:	bl	113a0 <avl_nova@@Base>
   111d0:	movw	r1, #9864	; 0x2688
   111d4:	mov	r6, r0
   111d8:	mov	r2, sp
   111dc:	mov	r0, r9
   111e0:	movt	r1, #1
   111e4:	bl	10ef8 <__isoc99_fscanf@plt>
   111e8:	cmp	r0, #1
   111ec:	bne	11220 <main@@Base+0xb8>
   111f0:	movw	r5, #9864	; 0x2688
   111f4:	mov	r4, sp
   111f8:	movt	r5, #1
   111fc:	mov	r0, r6
   11200:	mov	r1, r4
   11204:	bl	118ec <avl_insere@@Base>
   11208:	mov	r0, r9
   1120c:	mov	r1, r5
   11210:	mov	r2, r4
   11214:	bl	10ef8 <__isoc99_fscanf@plt>
   11218:	cmp	r0, #1
   1121c:	beq	111fc <main@@Base+0x94>
   11220:	movw	r0, #9907	; 0x26b3
   11224:	movt	r0, #1
   11228:	bl	10eec <printf@plt>
   1122c:	mov	r0, r6
   11230:	bl	11d68 <avl_imprime@@Base>
   11234:	movw	r0, #9925	; 0x26c5
   11238:	movt	r0, #1
   1123c:	bl	10eec <printf@plt>
   11240:	bl	113a0 <avl_nova@@Base>
   11244:	movw	r1, #9948	; 0x26dc
   11248:	mov	r4, r0
   1124c:	mov	r0, r6
   11250:	movt	r1, #1
   11254:	bl	11828 <avl_pesquisa@@Base>
   11258:	str	r0, [r4]
   1125c:	mov	r0, r4
   11260:	bl	11d28 <avl_max@@Base>
   11264:	movw	r5, #9864	; 0x2688
   11268:	mov	r1, r0
   1126c:	movt	r5, #1
   11270:	mov	r0, r5
   11274:	bl	10eec <printf@plt>
   11278:	mov	r0, r4
   1127c:	bl	10f10 <free@plt>
   11280:	mov	r0, r6
   11284:	bl	113c4 <avl_apaga@@Base>
   11288:	movw	r0, #9951	; 0x26df
   1128c:	movt	r0, #1
   11290:	bl	10f40 <puts@plt>
   11294:	movw	r1, #9436	; 0x24dc
   11298:	movw	r0, #601	; 0x259
   1129c:	movt	r1, #1
   112a0:	bl	11f38 <tabela_nova@@Base>
   112a4:	mov	r6, r0
   112a8:	mov	r2, sp
   112ac:	mov	r0, sl
   112b0:	mov	r1, r5
   112b4:	bl	10ef8 <__isoc99_fscanf@plt>
   112b8:	cmp	r0, #1
   112bc:	bne	112fc <main@@Base+0x194>
   112c0:	movw	r4, #10009	; 0x2719
   112c4:	movw	r5, #9864	; 0x2688
   112c8:	mov	r7, sp
   112cc:	movt	r4, #1
   112d0:	movt	r5, #1
   112d4:	mov	r0, r6
   112d8:	mov	r1, r7
   112dc:	mov	r2, r4
   112e0:	bl	1201c <tabela_adiciona@@Base>
   112e4:	mov	r0, sl
   112e8:	mov	r1, r5
   112ec:	mov	r2, r7
   112f0:	bl	10ef8 <__isoc99_fscanf@plt>
   112f4:	cmp	r0, #1
   112f8:	beq	112d4 <main@@Base+0x16c>
   112fc:	mov	r0, r6
   11300:	bl	1251c <mostraTabela@@Base>
   11304:	ldr	r1, [r6]
   11308:	movw	r0, #619	; 0x26b
   1130c:	bl	11f38 <tabela_nova@@Base>
   11310:	mov	r7, r0
   11314:	sub	r1, fp, #36	; 0x24
   11318:	mov	r0, r6
   1131c:	bl	123a4 <tabela_elementos@@Base>
   11320:	mov	r8, r0
   11324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11328:	cmp	r0, #1
   1132c:	blt	1135c <main@@Base+0x1f4>
   11330:	mov	r5, #0
   11334:	mov	r4, r8
   11338:	add	r2, r4, #50	; 0x32
   1133c:	mov	r0, r7
   11340:	mov	r1, r4
   11344:	bl	1201c <tabela_adiciona@@Base>
   11348:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1134c:	add	r5, r5, #1
   11350:	add	r4, r4, #150	; 0x96
   11354:	cmp	r5, r0
   11358:	blt	11338 <main@@Base+0x1d0>
   1135c:	mov	r0, r8
   11360:	bl	10f10 <free@plt>
   11364:	cmp	r7, #0
   11368:	beq	11374 <main@@Base+0x20c>
   1136c:	mov	r0, r7
   11370:	bl	1251c <mostraTabela@@Base>
   11374:	mov	r0, r6
   11378:	bl	11fac <tabela_apaga@@Base>
   1137c:	mov	r0, r7
   11380:	bl	11fac <tabela_apaga@@Base>
   11384:	mov	r0, r9
   11388:	bl	10f94 <fclose@plt>
   1138c:	mov	r0, sl
   11390:	bl	10f94 <fclose@plt>
   11394:	mov	r0, #0
   11398:	sub	sp, fp, #28
   1139c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000113a0 <avl_nova@@Base>:
   113a0:	push	{fp, lr}
   113a4:	mov	fp, sp
   113a8:	mov	r0, #4
   113ac:	bl	10f4c <malloc@plt>
   113b0:	cmp	r0, #0
   113b4:	moveq	r0, #0
   113b8:	movne	r1, #0
   113bc:	strne	r1, [r0]
   113c0:	pop	{fp, pc}

000113c4 <avl_apaga@@Base>:
   113c4:	cmp	r0, #0
   113c8:	bxeq	lr
   113cc:	push	{r4, sl, fp, lr}
   113d0:	add	fp, sp, #8
   113d4:	mov	r4, r0
   113d8:	ldr	r0, [r0]
   113dc:	cmp	r0, #0
   113e0:	beq	113f8 <avl_apaga@@Base+0x34>
   113e4:	ldr	r1, [r0]
   113e8:	bl	11404 <avl_remove_impl@@Base>
   113ec:	str	r0, [r4]
   113f0:	cmp	r0, #0
   113f4:	bne	113e4 <avl_apaga@@Base+0x20>
   113f8:	mov	r0, r4
   113fc:	pop	{r4, sl, fp, lr}
   11400:	b	10f10 <free@plt>

00011404 <avl_remove_impl@@Base>:
   11404:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11408:	add	fp, sp, #24
   1140c:	mov	r8, #0
   11410:	cmp	r0, #0
   11414:	beq	117b0 <avl_remove_impl@@Base+0x3ac>
   11418:	ldr	r6, [r0]
   1141c:	mov	r5, r0
   11420:	mov	r7, r1
   11424:	mov	r0, r1
   11428:	mov	r1, r6
   1142c:	bl	10ee0 <strcmp@plt>
   11430:	mov	r4, r5
   11434:	cmn	r0, #1
   11438:	bgt	11444 <avl_remove_impl@@Base+0x40>
   1143c:	ldr	r0, [r4, #4]!
   11440:	b	11450 <avl_remove_impl@@Base+0x4c>
   11444:	cmp	r0, #0
   11448:	beq	11698 <avl_remove_impl@@Base+0x294>
   1144c:	ldr	r0, [r4, #8]!
   11450:	mov	r1, r7
   11454:	bl	11404 <avl_remove_impl@@Base>
   11458:	str	r0, [r4]
   1145c:	ldr	r1, [r5, #4]
   11460:	ldr	r2, [r5, #8]
   11464:	cmp	r1, #0
   11468:	ldrne	r0, [r1, #12]
   1146c:	mvneq	r0, #0
   11470:	cmp	r2, #0
   11474:	beq	11498 <avl_remove_impl@@Base+0x94>
   11478:	ldr	r3, [r2, #12]
   1147c:	cmp	r0, r3
   11480:	movgt	r3, r0
   11484:	mov	r0, r5
   11488:	add	r3, r3, #1
   1148c:	str	r3, [r0, #12]!
   11490:	ldr	r3, [r2, #12]
   11494:	b	114ac <avl_remove_impl@@Base+0xa8>
   11498:	orr	r0, r0, r0, asr #31
   1149c:	add	r3, r0, #1
   114a0:	mov	r0, r5
   114a4:	str	r3, [r0, #12]!
   114a8:	mvn	r3, #0
   114ac:	cmp	r1, #0
   114b0:	ldrne	r7, [r1, #12]
   114b4:	mvneq	r7, #0
   114b8:	sub	r3, r3, r7
   114bc:	cmp	r3, #2
   114c0:	blt	115a4 <avl_remove_impl@@Base+0x1a0>
   114c4:	cmp	r2, #0
   114c8:	beq	116ec <avl_remove_impl@@Base+0x2e8>
   114cc:	ldr	r1, [r2, #8]
   114d0:	mvn	r7, #0
   114d4:	mvn	r3, #0
   114d8:	cmp	r1, #0
   114dc:	ldrne	r7, [r1, #12]
   114e0:	mov	r1, r2
   114e4:	ldr	r8, [r1, #4]!
   114e8:	cmp	r8, #0
   114ec:	ldrne	r3, [r8, #12]
   114f0:	cmp	r7, r3
   114f4:	bge	116f4 <avl_remove_impl@@Base+0x2f0>
   114f8:	ldr	r7, [r8, #8]
   114fc:	str	r2, [r8, #8]
   11500:	mvn	r3, #0
   11504:	mvn	r1, #0
   11508:	str	r7, [r2, #4]
   1150c:	cmp	r7, #0
   11510:	ldrne	r3, [r7, #12]
   11514:	ldr	r7, [r2, #8]
   11518:	cmp	r7, #0
   1151c:	ldrne	r1, [r7, #12]
   11520:	mvn	r7, #0
   11524:	cmp	r3, r1
   11528:	movgt	r1, r3
   1152c:	add	r3, r1, #1
   11530:	mvn	r1, #0
   11534:	str	r3, [r2, #12]
   11538:	ldr	r2, [r8, #4]
   1153c:	cmp	r2, #0
   11540:	ldrne	r7, [r2, #12]
   11544:	str	r5, [r8, #4]
   11548:	cmp	r7, r3
   1154c:	movgt	r3, r7
   11550:	mvn	r7, #0
   11554:	add	r3, r3, #1
   11558:	str	r3, [r8, #12]
   1155c:	str	r2, [r5, #8]
   11560:	ldr	r3, [r5, #4]
   11564:	cmp	r3, #0
   11568:	ldrne	r1, [r3, #12]
   1156c:	cmp	r2, #0
   11570:	mvn	r3, #0
   11574:	ldrne	r7, [r2, #12]
   11578:	cmp	r1, r7
   1157c:	movgt	r7, r1
   11580:	add	r1, r7, #1
   11584:	str	r1, [r0]
   11588:	ldr	r0, [r8, #8]
   1158c:	cmp	r0, #0
   11590:	ldrne	r3, [r0, #12]
   11594:	cmp	r1, r3
   11598:	movgt	r3, r1
   1159c:	add	r0, r3, #1
   115a0:	b	1168c <avl_remove_impl@@Base+0x288>
   115a4:	cmn	r3, #2
   115a8:	movgt	r0, r5
   115ac:	popgt	{r4, r5, r6, r7, r8, sl, fp, pc}
   115b0:	cmp	r1, #0
   115b4:	beq	11750 <avl_remove_impl@@Base+0x34c>
   115b8:	mov	r2, r1
   115bc:	ldr	r6, [r1, #4]
   115c0:	mvn	r7, #0
   115c4:	mvn	r3, #0
   115c8:	ldr	r8, [r2, #8]!
   115cc:	cmp	r8, #0
   115d0:	ldrne	r7, [r8, #12]
   115d4:	cmp	r6, #0
   115d8:	ldrne	r3, [r6, #12]
   115dc:	cmp	r7, r3
   115e0:	ble	11758 <avl_remove_impl@@Base+0x354>
   115e4:	ldr	r3, [r8, #4]
   115e8:	str	r1, [r8, #4]
   115ec:	mvn	r7, #0
   115f0:	mvn	r2, #0
   115f4:	str	r3, [r1, #8]
   115f8:	ldr	r6, [r1, #4]
   115fc:	cmp	r6, #0
   11600:	ldrne	r7, [r6, #12]
   11604:	cmp	r3, #0
   11608:	ldrne	r2, [r3, #12]
   1160c:	cmp	r7, r2
   11610:	movgt	r2, r7
   11614:	mvn	r7, #0
   11618:	add	r3, r2, #1
   1161c:	str	r3, [r1, #12]
   11620:	mvn	r1, #0
   11624:	ldr	r2, [r8, #8]
   11628:	cmp	r2, #0
   1162c:	ldrne	r7, [r2, #12]
   11630:	str	r5, [r8, #8]
   11634:	cmp	r3, r7
   11638:	movgt	r7, r3
   1163c:	cmp	r2, #0
   11640:	add	r3, r7, #1
   11644:	str	r3, [r8, #12]
   11648:	str	r2, [r5, #4]
   1164c:	mvn	r3, #0
   11650:	ldr	r7, [r5, #8]
   11654:	ldrne	r1, [r2, #12]
   11658:	mvn	r2, #0
   1165c:	cmp	r7, #0
   11660:	ldrne	r3, [r7, #12]
   11664:	cmp	r1, r3
   11668:	movgt	r3, r1
   1166c:	add	r1, r3, #1
   11670:	str	r1, [r0]
   11674:	ldr	r0, [r8, #4]
   11678:	cmp	r0, #0
   1167c:	ldrne	r2, [r0, #12]
   11680:	cmp	r2, r1
   11684:	movgt	r1, r2
   11688:	add	r0, r1, #1
   1168c:	str	r0, [r8, #12]
   11690:	mov	r0, r8
   11694:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11698:	ldr	r0, [r4, #8]!
   1169c:	ldr	r7, [r4, #-4]
   116a0:	cmp	r7, #0
   116a4:	beq	117b8 <avl_remove_impl@@Base+0x3b4>
   116a8:	cmp	r0, #0
   116ac:	beq	117c4 <avl_remove_impl@@Base+0x3c0>
   116b0:	mov	r7, r0
   116b4:	ldr	r0, [r0, #4]
   116b8:	cmp	r0, #0
   116bc:	bne	116b0 <avl_remove_impl@@Base+0x2ac>
   116c0:	ldr	r0, [r7]
   116c4:	bl	10f70 <strlen@plt>
   116c8:	add	r1, r0, #1
   116cc:	mov	r0, r6
   116d0:	bl	10f28 <realloc@plt>
   116d4:	str	r0, [r5]
   116d8:	ldr	r1, [r7]
   116dc:	bl	10f34 <strcpy@plt>
   116e0:	ldr	r0, [r5, #8]
   116e4:	ldr	r1, [r7]
   116e8:	b	11454 <avl_remove_impl@@Base+0x50>
   116ec:	mov	r1, #4
   116f0:	ldr	r8, [r1]
   116f4:	str	r5, [r1]
   116f8:	str	r8, [r5, #8]
   116fc:	mvn	r3, #0
   11700:	mvn	r1, #0
   11704:	ldr	r7, [r5, #4]
   11708:	cmp	r7, #0
   1170c:	ldrne	r3, [r7, #12]
   11710:	cmp	r8, #0
   11714:	ldrne	r1, [r8, #12]
   11718:	cmp	r3, r1
   1171c:	movgt	r1, r3
   11720:	add	r1, r1, #1
   11724:	str	r1, [r0]
   11728:	ldr	r0, [r2, #8]
   1172c:	cmp	r0, #0
   11730:	ldrne	r0, [r0, #12]
   11734:	mvneq	r0, #0
   11738:	cmp	r1, r0
   1173c:	movgt	r0, r1
   11740:	add	r0, r0, #1
   11744:	str	r0, [r2, #12]
   11748:	mov	r0, r2
   1174c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11750:	mov	r2, #8
   11754:	ldr	r8, [r2]
   11758:	str	r5, [r2]
   1175c:	str	r8, [r5, #4]
   11760:	cmp	r8, #0
   11764:	mvn	r3, #0
   11768:	mvn	r2, #0
   1176c:	ldr	r7, [r5, #8]
   11770:	ldrne	r3, [r8, #12]
   11774:	mov	r8, r1
   11778:	cmp	r7, #0
   1177c:	ldrne	r2, [r7, #12]
   11780:	cmp	r3, r2
   11784:	movgt	r2, r3
   11788:	add	r2, r2, #1
   1178c:	str	r2, [r0]
   11790:	ldr	r0, [r1, #4]
   11794:	cmp	r0, #0
   11798:	ldrne	r0, [r0, #12]
   1179c:	mvneq	r0, #0
   117a0:	cmp	r0, r2
   117a4:	movgt	r2, r0
   117a8:	add	r0, r2, #1
   117ac:	str	r0, [r1, #12]
   117b0:	mov	r0, r8
   117b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   117b8:	cmp	r0, #0
   117bc:	mov	r7, r0
   117c0:	beq	11804 <avl_remove_impl@@Base+0x400>
   117c4:	ldr	r0, [r7]
   117c8:	bl	10f70 <strlen@plt>
   117cc:	add	r1, r0, #1
   117d0:	mov	r0, r6
   117d4:	bl	10f28 <realloc@plt>
   117d8:	str	r0, [r5]
   117dc:	ldr	r1, [r7]
   117e0:	bl	10f34 <strcpy@plt>
   117e4:	ldr	r0, [r7, #4]
   117e8:	str	r0, [r5, #4]
   117ec:	ldr	r0, [r7, #8]
   117f0:	str	r0, [r5, #8]
   117f4:	ldr	r0, [r7, #12]
   117f8:	str	r0, [r5, #12]
   117fc:	ldr	r6, [r7]
   11800:	b	1180c <avl_remove_impl@@Base+0x408>
   11804:	mov	r7, r5
   11808:	mov	r5, #0
   1180c:	mov	r0, r6
   11810:	bl	10f10 <free@plt>
   11814:	mov	r0, r7
   11818:	bl	10f10 <free@plt>
   1181c:	cmp	r5, #0
   11820:	bne	1145c <avl_remove_impl@@Base+0x58>
   11824:	b	117b0 <avl_remove_impl@@Base+0x3ac>

00011828 <avl_pesquisa@@Base>:
   11828:	push	{r4, r5, r6, sl, fp, lr}
   1182c:	add	fp, sp, #16
   11830:	cmp	r0, #0
   11834:	mov	r4, #0
   11838:	movne	r5, r1
   1183c:	cmpne	r1, #0
   11840:	beq	11880 <avl_pesquisa@@Base+0x58>
   11844:	b	1184c <avl_pesquisa@@Base+0x24>
   11848:	add	r0, r6, #4
   1184c:	ldr	r6, [r0]
   11850:	cmp	r6, #0
   11854:	beq	11880 <avl_pesquisa@@Base+0x58>
   11858:	ldr	r1, [r6]
   1185c:	mov	r0, r5
   11860:	bl	10ee0 <strcmp@plt>
   11864:	cmn	r0, #1
   11868:	ble	11848 <avl_pesquisa@@Base+0x20>
   1186c:	cmp	r0, #0
   11870:	beq	1187c <avl_pesquisa@@Base+0x54>
   11874:	add	r0, r6, #8
   11878:	b	1184c <avl_pesquisa@@Base+0x24>
   1187c:	mov	r4, r6
   11880:	mov	r0, r4
   11884:	pop	{r4, r5, r6, sl, fp, pc}

00011888 <avl_pesquisa_impl@@Base>:
   11888:	push	{r4, r5, r6, sl, fp, lr}
   1188c:	add	fp, sp, #16
   11890:	mov	r4, #0
   11894:	cmp	r0, #0
   11898:	beq	118d8 <avl_pesquisa_impl@@Base+0x50>
   1189c:	mov	r5, r1
   118a0:	mov	r6, r0
   118a4:	ldr	r1, [r6]
   118a8:	mov	r0, r5
   118ac:	bl	10ee0 <strcmp@plt>
   118b0:	cmn	r0, #1
   118b4:	bgt	118c0 <avl_pesquisa_impl@@Base+0x38>
   118b8:	add	r0, r6, #4
   118bc:	b	118cc <avl_pesquisa_impl@@Base+0x44>
   118c0:	cmp	r0, #0
   118c4:	beq	118e0 <avl_pesquisa_impl@@Base+0x58>
   118c8:	add	r0, r6, #8
   118cc:	ldr	r6, [r0]
   118d0:	cmp	r6, #0
   118d4:	bne	118a4 <avl_pesquisa_impl@@Base+0x1c>
   118d8:	mov	r0, r4
   118dc:	pop	{r4, r5, r6, sl, fp, pc}
   118e0:	mov	r4, r6
   118e4:	mov	r0, r4
   118e8:	pop	{r4, r5, r6, sl, fp, pc}

000118ec <avl_insere@@Base>:
   118ec:	push	{r4, sl, fp, lr}
   118f0:	add	fp, sp, #8
   118f4:	mov	r4, r0
   118f8:	mvn	r0, #0
   118fc:	cmp	r4, #0
   11900:	cmpne	r1, #0
   11904:	bne	1190c <avl_insere@@Base+0x20>
   11908:	pop	{r4, sl, fp, pc}
   1190c:	ldr	r0, [r4]
   11910:	bl	11920 <avl_insere_impl@@Base>
   11914:	str	r0, [r4]
   11918:	mov	r0, #0
   1191c:	pop	{r4, sl, fp, pc}

00011920 <avl_insere_impl@@Base>:
   11920:	push	{r4, r5, r6, sl, fp, lr}
   11924:	add	fp, sp, #16
   11928:	mov	r6, r1
   1192c:	cmp	r0, #0
   11930:	beq	11960 <avl_insere_impl@@Base+0x40>
   11934:	ldr	r1, [r0]
   11938:	mov	r4, r0
   1193c:	mov	r0, r6
   11940:	bl	10ee0 <strcmp@plt>
   11944:	cmn	r0, #1
   11948:	bgt	119a0 <avl_insere_impl@@Base+0x80>
   1194c:	ldr	r0, [r4, #4]
   11950:	mov	r1, r6
   11954:	bl	11920 <avl_insere_impl@@Base>
   11958:	str	r0, [r4, #4]
   1195c:	b	119bc <avl_insere_impl@@Base+0x9c>
   11960:	mov	r0, #16
   11964:	bl	10f4c <malloc@plt>
   11968:	mov	r5, r0
   1196c:	mov	r0, r6
   11970:	bl	10f70 <strlen@plt>
   11974:	add	r0, r0, #1
   11978:	bl	10f4c <malloc@plt>
   1197c:	mov	r1, r6
   11980:	str	r0, [r5]
   11984:	bl	10f34 <strcpy@plt>
   11988:	mov	r0, #0
   1198c:	str	r0, [r5, #4]
   11990:	str	r0, [r5, #8]
   11994:	str	r0, [r5, #12]
   11998:	mov	r0, r5
   1199c:	pop	{r4, r5, r6, sl, fp, pc}
   119a0:	cmp	r0, #0
   119a4:	beq	11be8 <avl_insere_impl@@Base+0x2c8>
   119a8:	ldr	r0, [r4, #8]
   119ac:	mov	r1, r6
   119b0:	bl	11920 <avl_insere_impl@@Base>
   119b4:	str	r0, [r4, #8]
   119b8:	ldr	r0, [r4, #4]
   119bc:	cmp	r0, #0
   119c0:	ldr	r2, [r4, #8]
   119c4:	ldrne	r1, [r0, #12]
   119c8:	mvneq	r1, #0
   119cc:	cmp	r2, #0
   119d0:	beq	119f4 <avl_insere_impl@@Base+0xd4>
   119d4:	ldr	r3, [r2, #12]
   119d8:	cmp	r1, r3
   119dc:	movgt	r3, r1
   119e0:	mov	r1, r4
   119e4:	add	r3, r3, #1
   119e8:	str	r3, [r1, #12]!
   119ec:	ldr	r3, [r2, #12]
   119f0:	b	11a08 <avl_insere_impl@@Base+0xe8>
   119f4:	orr	r1, r1, r1, asr #31
   119f8:	add	r3, r1, #1
   119fc:	mov	r1, r4
   11a00:	str	r3, [r1, #12]!
   11a04:	mvn	r3, #0
   11a08:	cmp	r0, #0
   11a0c:	ldrne	r6, [r0, #12]
   11a10:	mvneq	r6, #0
   11a14:	sub	r3, r3, r6
   11a18:	cmp	r3, #2
   11a1c:	blt	11b00 <avl_insere_impl@@Base+0x1e0>
   11a20:	cmp	r2, #0
   11a24:	beq	11bf0 <avl_insere_impl@@Base+0x2d0>
   11a28:	ldr	r0, [r2, #8]
   11a2c:	mvn	r6, #0
   11a30:	mvn	r3, #0
   11a34:	cmp	r0, #0
   11a38:	ldrne	r6, [r0, #12]
   11a3c:	mov	r0, r2
   11a40:	ldr	r5, [r0, #4]!
   11a44:	cmp	r5, #0
   11a48:	ldrne	r3, [r5, #12]
   11a4c:	cmp	r6, r3
   11a50:	bge	11bf8 <avl_insere_impl@@Base+0x2d8>
   11a54:	ldr	r6, [r5, #8]
   11a58:	str	r2, [r5, #8]
   11a5c:	mvn	r3, #0
   11a60:	mvn	r0, #0
   11a64:	str	r6, [r2, #4]
   11a68:	cmp	r6, #0
   11a6c:	ldrne	r3, [r6, #12]
   11a70:	ldr	r6, [r2, #8]
   11a74:	cmp	r6, #0
   11a78:	ldrne	r0, [r6, #12]
   11a7c:	mvn	r6, #0
   11a80:	cmp	r3, r0
   11a84:	movgt	r0, r3
   11a88:	add	r3, r0, #1
   11a8c:	mvn	r0, #0
   11a90:	str	r3, [r2, #12]
   11a94:	ldr	r2, [r5, #4]
   11a98:	cmp	r2, #0
   11a9c:	ldrne	r6, [r2, #12]
   11aa0:	str	r4, [r5, #4]
   11aa4:	cmp	r6, r3
   11aa8:	movgt	r3, r6
   11aac:	mvn	r6, #0
   11ab0:	add	r3, r3, #1
   11ab4:	str	r3, [r5, #12]
   11ab8:	str	r2, [r4, #8]
   11abc:	ldr	r3, [r4, #4]
   11ac0:	cmp	r3, #0
   11ac4:	ldrne	r0, [r3, #12]
   11ac8:	cmp	r2, #0
   11acc:	mvn	r3, #0
   11ad0:	ldrne	r6, [r2, #12]
   11ad4:	cmp	r0, r6
   11ad8:	movgt	r6, r0
   11adc:	add	r0, r6, #1
   11ae0:	str	r0, [r1]
   11ae4:	ldr	r1, [r5, #8]
   11ae8:	cmp	r1, #0
   11aec:	ldrne	r3, [r1, #12]
   11af0:	cmp	r0, r3
   11af4:	movgt	r3, r0
   11af8:	add	r0, r3, #1
   11afc:	b	11994 <avl_insere_impl@@Base+0x74>
   11b00:	cmn	r3, #2
   11b04:	bgt	11be8 <avl_insere_impl@@Base+0x2c8>
   11b08:	cmp	r0, #0
   11b0c:	beq	11c54 <avl_insere_impl@@Base+0x334>
   11b10:	mov	r2, r0
   11b14:	ldr	r3, [r0, #4]
   11b18:	mvn	r6, #0
   11b1c:	mvn	ip, #0
   11b20:	ldr	r5, [r2, #8]!
   11b24:	cmp	r5, #0
   11b28:	ldrne	r6, [r5, #12]
   11b2c:	cmp	r3, #0
   11b30:	ldrne	ip, [r3, #12]
   11b34:	cmp	r6, ip
   11b38:	ble	11c5c <avl_insere_impl@@Base+0x33c>
   11b3c:	ldr	r3, [r5, #4]
   11b40:	str	r0, [r5, #4]
   11b44:	mvn	r6, #0
   11b48:	mvn	r2, #0
   11b4c:	str	r3, [r0, #8]
   11b50:	ldr	ip, [r0, #4]
   11b54:	cmp	ip, #0
   11b58:	ldrne	r6, [ip, #12]
   11b5c:	cmp	r3, #0
   11b60:	ldrne	r2, [r3, #12]
   11b64:	cmp	r6, r2
   11b68:	movgt	r2, r6
   11b6c:	mvn	r6, #0
   11b70:	add	r3, r2, #1
   11b74:	str	r3, [r0, #12]
   11b78:	mvn	r0, #0
   11b7c:	ldr	r2, [r5, #8]
   11b80:	cmp	r2, #0
   11b84:	ldrne	r6, [r2, #12]
   11b88:	str	r4, [r5, #8]
   11b8c:	cmp	r3, r6
   11b90:	movgt	r6, r3
   11b94:	cmp	r2, #0
   11b98:	add	r3, r6, #1
   11b9c:	str	r3, [r5, #12]
   11ba0:	str	r2, [r4, #4]
   11ba4:	mvn	r3, #0
   11ba8:	ldr	r6, [r4, #8]
   11bac:	ldrne	r0, [r2, #12]
   11bb0:	mvn	r2, #0
   11bb4:	cmp	r6, #0
   11bb8:	ldrne	r3, [r6, #12]
   11bbc:	cmp	r0, r3
   11bc0:	movgt	r3, r0
   11bc4:	add	r0, r3, #1
   11bc8:	str	r0, [r1]
   11bcc:	ldr	r1, [r5, #4]
   11bd0:	cmp	r1, #0
   11bd4:	ldrne	r2, [r1, #12]
   11bd8:	cmp	r2, r0
   11bdc:	movgt	r0, r2
   11be0:	add	r0, r0, #1
   11be4:	b	11994 <avl_insere_impl@@Base+0x74>
   11be8:	mov	r0, r4
   11bec:	pop	{r4, r5, r6, sl, fp, pc}
   11bf0:	mov	r0, #4
   11bf4:	ldr	r5, [r0]
   11bf8:	str	r4, [r0]
   11bfc:	str	r5, [r4, #8]
   11c00:	mvn	r3, #0
   11c04:	mvn	r0, #0
   11c08:	ldr	r6, [r4, #4]
   11c0c:	cmp	r6, #0
   11c10:	ldrne	r3, [r6, #12]
   11c14:	cmp	r5, #0
   11c18:	ldrne	r0, [r5, #12]
   11c1c:	cmp	r3, r0
   11c20:	movgt	r0, r3
   11c24:	add	r0, r0, #1
   11c28:	str	r0, [r1]
   11c2c:	ldr	r1, [r2, #8]
   11c30:	cmp	r1, #0
   11c34:	ldrne	r1, [r1, #12]
   11c38:	mvneq	r1, #0
   11c3c:	cmp	r0, r1
   11c40:	movgt	r1, r0
   11c44:	add	r0, r1, #1
   11c48:	str	r0, [r2, #12]
   11c4c:	mov	r0, r2
   11c50:	pop	{r4, r5, r6, sl, fp, pc}
   11c54:	mov	r2, #8
   11c58:	ldr	r5, [r2]
   11c5c:	str	r4, [r2]
   11c60:	str	r5, [r4, #4]
   11c64:	cmp	r5, #0
   11c68:	mvn	r3, #0
   11c6c:	mvn	r2, #0
   11c70:	ldr	r6, [r4, #8]
   11c74:	ldrne	r3, [r5, #12]
   11c78:	cmp	r6, #0
   11c7c:	ldrne	r2, [r6, #12]
   11c80:	cmp	r3, r2
   11c84:	movgt	r2, r3
   11c88:	add	r2, r2, #1
   11c8c:	str	r2, [r1]
   11c90:	ldr	r1, [r0, #4]
   11c94:	cmp	r1, #0
   11c98:	ldrne	r1, [r1, #12]
   11c9c:	mvneq	r1, #0
   11ca0:	cmp	r1, r2
   11ca4:	movgt	r2, r1
   11ca8:	add	r1, r2, #1
   11cac:	str	r1, [r0, #12]
   11cb0:	pop	{r4, r5, r6, sl, fp, pc}

00011cb4 <avl_remove@@Base>:
   11cb4:	push	{r4, sl, fp, lr}
   11cb8:	add	fp, sp, #8
   11cbc:	mov	r4, r0
   11cc0:	mvn	r0, #0
   11cc4:	cmp	r4, #0
   11cc8:	cmpne	r1, #0
   11ccc:	bne	11cd4 <avl_remove@@Base+0x20>
   11cd0:	pop	{r4, sl, fp, pc}
   11cd4:	ldr	r0, [r4]
   11cd8:	bl	11404 <avl_remove_impl@@Base>
   11cdc:	str	r0, [r4]
   11ce0:	mov	r0, #0
   11ce4:	pop	{r4, sl, fp, pc}

00011ce8 <avl_min@@Base>:
   11ce8:	cmp	r0, #0
   11cec:	moveq	r0, #0
   11cf0:	bxeq	lr
   11cf4:	ldr	r0, [r0]
   11cf8:	mov	r1, r0
   11cfc:	ldr	r0, [r0, #4]
   11d00:	cmp	r0, #0
   11d04:	bne	11cf8 <avl_min@@Base+0x10>
   11d08:	ldr	r0, [r1]
   11d0c:	bx	lr

00011d10 <avl_no_valormin@@Base>:
   11d10:	mov	r1, r0
   11d14:	ldr	r0, [r0, #4]
   11d18:	cmp	r0, #0
   11d1c:	bne	11d10 <avl_no_valormin@@Base>
   11d20:	mov	r0, r1
   11d24:	bx	lr

00011d28 <avl_max@@Base>:
   11d28:	cmp	r0, #0
   11d2c:	moveq	r0, #0
   11d30:	bxeq	lr
   11d34:	ldr	r0, [r0]
   11d38:	mov	r1, r0
   11d3c:	ldr	r0, [r0, #8]
   11d40:	cmp	r0, #0
   11d44:	bne	11d38 <avl_max@@Base+0x10>
   11d48:	ldr	r0, [r1]
   11d4c:	bx	lr

00011d50 <avl_no_valormax@@Base>:
   11d50:	mov	r1, r0
   11d54:	ldr	r0, [r0, #8]
   11d58:	cmp	r0, #0
   11d5c:	bne	11d50 <avl_no_valormax@@Base>
   11d60:	mov	r0, r1
   11d64:	bx	lr

00011d68 <avl_imprime@@Base>:
   11d68:	cmp	r0, #0
   11d6c:	bxeq	lr
   11d70:	push	{fp, lr}
   11d74:	mov	fp, sp
   11d78:	ldr	r0, [r0]
   11d7c:	bl	11d8c <avl_preordem_impl@@Base>
   11d80:	mov	r0, #10
   11d84:	pop	{fp, lr}
   11d88:	b	10f88 <putchar@plt>

00011d8c <avl_preordem_impl@@Base>:
   11d8c:	push	{r4, r5, fp, lr}
   11d90:	add	fp, sp, #8
   11d94:	cmp	r0, #0
   11d98:	popeq	{r4, r5, fp, pc}
   11d9c:	movw	r5, #9970	; 0x26f2
   11da0:	mov	r4, r0
   11da4:	movt	r5, #1
   11da8:	ldr	r1, [r4]
   11dac:	mov	r0, r5
   11db0:	bl	10eec <printf@plt>
   11db4:	ldr	r0, [r4, #4]
   11db8:	bl	11d8c <avl_preordem_impl@@Base>
   11dbc:	ldr	r4, [r4, #8]
   11dc0:	cmp	r4, #0
   11dc4:	bne	11da8 <avl_preordem_impl@@Base+0x1c>
   11dc8:	pop	{r4, r5, fp, pc}

00011dcc <avl_altura@@Base>:
   11dcc:	cmp	r0, #0
   11dd0:	ldrne	r0, [r0, #12]
   11dd4:	mvneq	r0, #0
   11dd8:	bx	lr

00011ddc <max@@Base>:
   11ddc:	cmp	r0, r1
   11de0:	movle	r0, r1
   11de4:	bx	lr

00011de8 <avl_novo_no@@Base>:
   11de8:	push	{r4, r5, fp, lr}
   11dec:	add	fp, sp, #8
   11df0:	mov	r4, r0
   11df4:	mov	r0, #16
   11df8:	bl	10f4c <malloc@plt>
   11dfc:	mov	r5, r0
   11e00:	mov	r0, r4
   11e04:	bl	10f70 <strlen@plt>
   11e08:	add	r0, r0, #1
   11e0c:	bl	10f4c <malloc@plt>
   11e10:	mov	r1, r4
   11e14:	str	r0, [r5]
   11e18:	bl	10f34 <strcpy@plt>
   11e1c:	mov	r0, #0
   11e20:	str	r0, [r5, #4]
   11e24:	str	r0, [r5, #8]
   11e28:	str	r0, [r5, #12]
   11e2c:	mov	r0, r5
   11e30:	pop	{r4, r5, fp, pc}

00011e34 <roda_direita@@Base>:
   11e34:	mov	r1, r0
   11e38:	ldr	r0, [r0, #4]
   11e3c:	mvn	ip, #0
   11e40:	mvn	r2, #0
   11e44:	ldr	r3, [r0, #8]
   11e48:	str	r1, [r0, #8]
   11e4c:	str	r3, [r1, #4]
   11e50:	cmp	r3, #0
   11e54:	ldrne	ip, [r3, #12]
   11e58:	ldr	r3, [r1, #8]
   11e5c:	cmp	r3, #0
   11e60:	ldrne	r2, [r3, #12]
   11e64:	cmp	ip, r2
   11e68:	movgt	r2, ip
   11e6c:	add	r2, r2, #1
   11e70:	str	r2, [r1, #12]
   11e74:	ldr	r1, [r0, #4]
   11e78:	cmp	r1, #0
   11e7c:	ldrne	r1, [r1, #12]
   11e80:	mvneq	r1, #0
   11e84:	cmp	r1, r2
   11e88:	movgt	r2, r1
   11e8c:	add	r1, r2, #1
   11e90:	str	r1, [r0, #12]
   11e94:	bx	lr

00011e98 <roda_esquerda@@Base>:
   11e98:	push	{fp, lr}
   11e9c:	mov	fp, sp
   11ea0:	mov	r1, r0
   11ea4:	ldr	r0, [r0, #8]
   11ea8:	mvn	r3, #0
   11eac:	mvn	r2, #0
   11eb0:	ldr	ip, [r0, #4]
   11eb4:	str	r1, [r0, #4]
   11eb8:	str	ip, [r1, #8]
   11ebc:	ldr	lr, [r1, #4]
   11ec0:	cmp	lr, #0
   11ec4:	ldrne	r3, [lr, #12]
   11ec8:	cmp	ip, #0
   11ecc:	ldrne	r2, [ip, #12]
   11ed0:	cmp	r3, r2
   11ed4:	movgt	r2, r3
   11ed8:	add	r2, r2, #1
   11edc:	str	r2, [r1, #12]
   11ee0:	ldr	r1, [r0, #8]
   11ee4:	cmp	r1, #0
   11ee8:	ldrne	r1, [r1, #12]
   11eec:	mvneq	r1, #0
   11ef0:	cmp	r2, r1
   11ef4:	movgt	r1, r2
   11ef8:	add	r1, r1, #1
   11efc:	str	r1, [r0, #12]
   11f00:	pop	{fp, pc}

00011f04 <calc_balanceamento@@Base>:
   11f04:	cmp	r0, #0
   11f08:	moveq	r0, #0
   11f0c:	bxeq	lr
   11f10:	ldr	r3, [r0, #8]
   11f14:	ldr	r0, [r0, #4]
   11f18:	mvn	r2, #0
   11f1c:	mvn	r1, #0
   11f20:	cmp	r3, #0
   11f24:	ldrne	r2, [r3, #12]
   11f28:	cmp	r0, #0
   11f2c:	ldrne	r1, [r0, #12]
   11f30:	sub	r0, r2, r1
   11f34:	bx	lr

00011f38 <tabela_nova@@Base>:
   11f38:	push	{r4, r5, r6, r7, fp, lr}
   11f3c:	add	fp, sp, #16
   11f40:	mov	r4, #0
   11f44:	cmp	r0, #1
   11f48:	blt	11f94 <tabela_nova@@Base+0x5c>
   11f4c:	mov	r6, r1
   11f50:	cmp	r1, #0
   11f54:	beq	11f94 <tabela_nova@@Base+0x5c>
   11f58:	mov	r5, r0
   11f5c:	mov	r0, #12
   11f60:	bl	10f4c <malloc@plt>
   11f64:	cmp	r0, #0
   11f68:	beq	11f94 <tabela_nova@@Base+0x5c>
   11f6c:	mov	r7, r0
   11f70:	mov	r0, r5
   11f74:	mov	r1, #4
   11f78:	bl	10ed4 <calloc@plt>
   11f7c:	cmp	r0, #0
   11f80:	str	r0, [r7, #4]
   11f84:	beq	11f9c <tabela_nova@@Base+0x64>
   11f88:	mov	r4, r7
   11f8c:	str	r6, [r7]
   11f90:	str	r5, [r7, #8]
   11f94:	mov	r0, r4
   11f98:	pop	{r4, r5, r6, r7, fp, pc}
   11f9c:	mov	r0, r7
   11fa0:	bl	10f10 <free@plt>
   11fa4:	mov	r0, r4
   11fa8:	pop	{r4, r5, r6, r7, fp, pc}

00011fac <tabela_apaga@@Base>:
   11fac:	cmp	r0, #0
   11fb0:	bxeq	lr
   11fb4:	push	{r4, r5, r6, r7, fp, lr}
   11fb8:	add	fp, sp, #16
   11fbc:	mov	r4, r0
   11fc0:	ldr	r0, [r0, #4]
   11fc4:	ldr	r1, [r4, #8]
   11fc8:	cmp	r1, #1
   11fcc:	blt	1200c <tabela_apaga@@Base+0x60>
   11fd0:	mov	r6, #0
   11fd4:	ldr	r5, [r0, r6, lsl #2]
   11fd8:	cmp	r5, #0
   11fdc:	beq	12000 <tabela_apaga@@Base+0x54>
   11fe0:	ldm	r5, {r0, r7}
   11fe4:	bl	10f10 <free@plt>
   11fe8:	mov	r0, r5
   11fec:	bl	10f10 <free@plt>
   11ff0:	cmp	r7, #0
   11ff4:	mov	r5, r7
   11ff8:	bne	11fe0 <tabela_apaga@@Base+0x34>
   11ffc:	ldmib	r4, {r0, r1}
   12000:	add	r6, r6, #1
   12004:	cmp	r6, r1
   12008:	blt	11fd4 <tabela_apaga@@Base+0x28>
   1200c:	bl	10f10 <free@plt>
   12010:	mov	r0, r4
   12014:	pop	{r4, r5, r6, r7, fp, lr}
   12018:	b	10f10 <free@plt>

0001201c <tabela_adiciona@@Base>:
   1201c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12020:	add	fp, sp, #28
   12024:	sub	sp, sp, #4
   12028:	mvn	r8, #1
   1202c:	cmp	r0, #0
   12030:	beq	12048 <tabela_adiciona@@Base+0x2c>
   12034:	cmp	r1, #0
   12038:	mov	r7, r1
   1203c:	movne	r9, r2
   12040:	cmpne	r2, #0
   12044:	bne	12054 <tabela_adiciona@@Base+0x38>
   12048:	mov	r0, r8
   1204c:	sub	sp, fp, #28
   12050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12054:	ldr	r2, [r0]
   12058:	ldr	r1, [r0, #8]
   1205c:	mov	r6, r0
   12060:	mov	r0, r7
   12064:	blx	r2
   12068:	mov	sl, r0
   1206c:	ldr	r0, [r6, #4]
   12070:	ldr	r4, [r0, sl, lsl #2]
   12074:	cmp	r4, #0
   12078:	bne	1208c <tabela_adiciona@@Base+0x70>
   1207c:	b	120b4 <tabela_adiciona@@Base+0x98>
   12080:	ldr	r4, [r4, #4]
   12084:	cmp	r4, #0
   12088:	beq	120b4 <tabela_adiciona@@Base+0x98>
   1208c:	ldr	r5, [r4]
   12090:	mov	r1, r7
   12094:	mov	r0, r5
   12098:	bl	10ee0 <strcmp@plt>
   1209c:	cmp	r0, #0
   120a0:	bne	12080 <tabela_adiciona@@Base+0x64>
   120a4:	add	r0, r5, #50	; 0x32
   120a8:	mov	r1, r9
   120ac:	bl	10f34 <strcpy@plt>
   120b0:	b	12108 <tabela_adiciona@@Base+0xec>
   120b4:	mov	r0, #8
   120b8:	mov	r4, sl
   120bc:	bl	10f4c <malloc@plt>
   120c0:	cmp	r0, #0
   120c4:	beq	12048 <tabela_adiciona@@Base+0x2c>
   120c8:	mov	sl, r0
   120cc:	mov	r0, #150	; 0x96
   120d0:	bl	10f4c <malloc@plt>
   120d4:	cmp	r0, #0
   120d8:	str	r0, [sl]
   120dc:	beq	12048 <tabela_adiciona@@Base+0x2c>
   120e0:	mov	r1, r7
   120e4:	mov	r5, r0
   120e8:	bl	10f34 <strcpy@plt>
   120ec:	add	r0, r5, #50	; 0x32
   120f0:	mov	r1, r9
   120f4:	bl	10f34 <strcpy@plt>
   120f8:	ldr	r0, [r6, #4]
   120fc:	ldr	r1, [r0, r4, lsl #2]
   12100:	str	r1, [sl, #4]
   12104:	str	sl, [r0, r4, lsl #2]
   12108:	mov	r8, #0
   1210c:	b	12048 <tabela_adiciona@@Base+0x2c>

00012110 <tabela_remove@@Base>:
   12110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12114:	add	fp, sp, #28
   12118:	sub	sp, sp, #4
   1211c:	cmp	r0, #0
   12120:	beq	121a0 <tabela_remove@@Base+0x90>
   12124:	mov	r6, r1
   12128:	ldr	r2, [r0]
   1212c:	ldr	r1, [r0, #8]
   12130:	mov	r4, r0
   12134:	mov	r0, r6
   12138:	blx	r2
   1213c:	ldr	r9, [r4, #4]
   12140:	mvn	sl, #2
   12144:	ldr	r7, [r9, r0, lsl #2]
   12148:	cmp	r7, #0
   1214c:	beq	121d4 <tabela_remove@@Base+0xc4>
   12150:	ldr	r5, [r7]
   12154:	mov	r8, r0
   12158:	mov	r1, r6
   1215c:	mov	r0, r5
   12160:	bl	10ee0 <strcmp@plt>
   12164:	cmp	r0, #0
   12168:	beq	121a8 <tabela_remove@@Base+0x98>
   1216c:	mov	r4, r7
   12170:	ldr	r7, [r4, #4]
   12174:	cmp	r7, #0
   12178:	beq	121d4 <tabela_remove@@Base+0xc4>
   1217c:	ldr	r5, [r7]
   12180:	mov	r1, r6
   12184:	mov	r0, r5
   12188:	bl	10ee0 <strcmp@plt>
   1218c:	cmp	r0, #0
   12190:	mov	r0, r4
   12194:	mov	r4, r7
   12198:	bne	12170 <tabela_remove@@Base+0x60>
   1219c:	b	121ac <tabela_remove@@Base+0x9c>
   121a0:	mvn	sl, #1
   121a4:	b	121d4 <tabela_remove@@Base+0xc4>
   121a8:	mov	r0, #0
   121ac:	ldr	r1, [r7, #4]
   121b0:	cmp	r0, #0
   121b4:	streq	r1, [r9, r8, lsl #2]
   121b8:	ldreq	r5, [r7]
   121bc:	strne	r1, [r0, #4]
   121c0:	mov	r0, r5
   121c4:	bl	10f10 <free@plt>
   121c8:	mov	r0, r7
   121cc:	bl	10f10 <free@plt>
   121d0:	mov	sl, #0
   121d4:	mov	r0, sl
   121d8:	sub	sp, fp, #28
   121dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000121e0 <tabela_existe@@Base>:
   121e0:	push	{r4, r5, r6, sl, fp, lr}
   121e4:	add	fp, sp, #16
   121e8:	cmp	r0, #0
   121ec:	mvn	r5, #1
   121f0:	movne	r4, r1
   121f4:	cmpne	r1, #0
   121f8:	bne	12204 <tabela_existe@@Base+0x24>
   121fc:	mov	r0, r5
   12200:	pop	{r4, r5, r6, sl, fp, pc}
   12204:	ldr	r2, [r0]
   12208:	ldr	r1, [r0, #8]
   1220c:	mov	r6, r0
   12210:	mov	r0, r4
   12214:	blx	r2
   12218:	ldr	r1, [r6, #4]
   1221c:	mvn	r5, #2
   12220:	ldr	r6, [r1, r0, lsl #2]
   12224:	cmp	r6, #0
   12228:	bne	1223c <tabela_existe@@Base+0x5c>
   1222c:	b	121fc <tabela_existe@@Base+0x1c>
   12230:	ldr	r6, [r6, #4]
   12234:	cmp	r6, #0
   12238:	beq	121fc <tabela_existe@@Base+0x1c>
   1223c:	ldr	r0, [r6]
   12240:	mov	r1, r4
   12244:	bl	10ee0 <strcmp@plt>
   12248:	cmp	r0, #0
   1224c:	bne	12230 <tabela_existe@@Base+0x50>
   12250:	mov	r5, #1
   12254:	mov	r0, r5
   12258:	pop	{r4, r5, r6, sl, fp, pc}

0001225c <tabela_valor@@Base>:
   1225c:	push	{r4, r5, r6, r7, fp, lr}
   12260:	add	fp, sp, #16
   12264:	mov	r4, #0
   12268:	cmp	r0, #0
   1226c:	beq	12298 <tabela_valor@@Base+0x3c>
   12270:	mov	r5, r1
   12274:	ldr	r2, [r0]
   12278:	ldr	r1, [r0, #8]
   1227c:	mov	r6, r0
   12280:	mov	r0, r5
   12284:	blx	r2
   12288:	ldr	r1, [r6, #4]
   1228c:	ldr	r7, [r1, r0, lsl #2]
   12290:	cmp	r7, #0
   12294:	bne	122ac <tabela_valor@@Base+0x50>
   12298:	mov	r0, r4
   1229c:	pop	{r4, r5, r6, r7, fp, pc}
   122a0:	ldr	r7, [r7, #4]
   122a4:	cmp	r7, #0
   122a8:	beq	12298 <tabela_valor@@Base+0x3c>
   122ac:	ldr	r6, [r7]
   122b0:	mov	r1, r5
   122b4:	mov	r0, r6
   122b8:	bl	10ee0 <strcmp@plt>
   122bc:	cmp	r0, #0
   122c0:	bne	122a0 <tabela_valor@@Base+0x44>
   122c4:	add	r4, r6, #50	; 0x32
   122c8:	mov	r0, r4
   122cc:	pop	{r4, r5, r6, r7, fp, pc}

000122d0 <tabela_esvazia@@Base>:
   122d0:	push	{r4, r5, r6, r7, fp, lr}
   122d4:	add	fp, sp, #16
   122d8:	cmp	r0, #0
   122dc:	mvneq	r0, #1
   122e0:	popeq	{r4, r5, r6, r7, fp, pc}
   122e4:	ldr	r1, [r0, #8]
   122e8:	mov	r4, r0
   122ec:	cmp	r1, #1
   122f0:	movlt	r0, #0
   122f4:	poplt	{r4, r5, r6, r7, fp, pc}
   122f8:	mov	r6, #0
   122fc:	b	12314 <tabela_esvazia@@Base+0x44>
   12300:	add	r6, r6, #1
   12304:	mov	r0, #0
   12308:	cmp	r6, r1
   1230c:	str	r0, [r2]
   12310:	popge	{r4, r5, r6, r7, fp, pc}
   12314:	ldr	r2, [r4, #4]
   12318:	ldr	r5, [r2, r6, lsl #2]!
   1231c:	cmp	r5, #0
   12320:	beq	12300 <tabela_esvazia@@Base+0x30>
   12324:	ldm	r5, {r0, r7}
   12328:	bl	10f10 <free@plt>
   1232c:	mov	r0, r5
   12330:	bl	10f10 <free@plt>
   12334:	cmp	r7, #0
   12338:	mov	r5, r7
   1233c:	bne	12324 <tabela_esvazia@@Base+0x54>
   12340:	ldmib	r4, {r0, r1}
   12344:	add	r2, r0, r6, lsl #2
   12348:	b	12300 <tabela_esvazia@@Base+0x30>

0001234c <tabela_numelementos@@Base>:
   1234c:	cmp	r0, #0
   12350:	mvneq	r0, #1
   12354:	bxeq	lr
   12358:	ldr	r1, [r0, #8]
   1235c:	cmp	r1, #1
   12360:	movlt	r0, #0
   12364:	bxlt	lr
   12368:	ldr	ip, [r0, #4]
   1236c:	mov	r0, #0
   12370:	mov	r3, #0
   12374:	b	12384 <tabela_numelementos@@Base+0x38>
   12378:	add	r3, r3, #1
   1237c:	cmp	r3, r1
   12380:	bxge	lr
   12384:	ldr	r2, [ip, r3, lsl #2]
   12388:	cmp	r2, #0
   1238c:	beq	12378 <tabela_numelementos@@Base+0x2c>
   12390:	ldr	r2, [r2, #4]
   12394:	add	r0, r0, #1
   12398:	cmp	r2, #0
   1239c:	bne	12390 <tabela_numelementos@@Base+0x44>
   123a0:	b	12378 <tabela_numelementos@@Base+0x2c>

000123a4 <tabela_elementos@@Base>:
   123a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123a8:	add	fp, sp, #28
   123ac:	sub	sp, sp, #4
   123b0:	cmp	r0, #0
   123b4:	beq	12484 <tabela_elementos@@Base+0xe0>
   123b8:	ldr	r2, [r0, #8]
   123bc:	mov	r5, r0
   123c0:	cmp	r2, #1
   123c4:	blt	1248c <tabela_elementos@@Base+0xe8>
   123c8:	ldr	r7, [r5, #4]
   123cc:	mov	r0, #0
   123d0:	mov	r3, #0
   123d4:	ldr	r6, [r7, r3, lsl #2]
   123d8:	cmp	r6, #0
   123dc:	beq	123f0 <tabela_elementos@@Base+0x4c>
   123e0:	ldr	r6, [r6, #4]
   123e4:	add	r0, r0, #1
   123e8:	cmp	r6, #0
   123ec:	bne	123e0 <tabela_elementos@@Base+0x3c>
   123f0:	add	r3, r3, #1
   123f4:	cmp	r3, r2
   123f8:	bne	123d4 <tabela_elementos@@Base+0x30>
   123fc:	mov	r6, #0
   12400:	cmp	r0, #1
   12404:	str	r0, [r1]
   12408:	blt	12498 <tabela_elementos@@Base+0xf4>
   1240c:	mov	r1, #150	; 0x96
   12410:	mul	r0, r0, r1
   12414:	bl	10f4c <malloc@plt>
   12418:	cmp	r0, #0
   1241c:	beq	12498 <tabela_elementos@@Base+0xf4>
   12420:	ldr	sl, [r5, #8]
   12424:	mov	r8, r0
   12428:	cmp	sl, #1
   1242c:	blt	1247c <tabela_elementos@@Base+0xd8>
   12430:	mov	r4, #0
   12434:	mov	r6, #0
   12438:	ldr	r9, [r7, r6, lsl #2]
   1243c:	cmp	r9, #0
   12440:	beq	12470 <tabela_elementos@@Base+0xcc>
   12444:	mov	r0, #150	; 0x96
   12448:	mla	r5, r4, r0, r8
   1244c:	ldr	r1, [r9]
   12450:	mov	r0, r5
   12454:	mov	r2, #150	; 0x96
   12458:	bl	10f1c <memcpy@plt>
   1245c:	ldr	r9, [r9, #4]
   12460:	add	r5, r5, #150	; 0x96
   12464:	add	r4, r4, #1
   12468:	cmp	r9, #0
   1246c:	bne	1244c <tabela_elementos@@Base+0xa8>
   12470:	add	r6, r6, #1
   12474:	cmp	r6, sl
   12478:	blt	12438 <tabela_elementos@@Base+0x94>
   1247c:	mov	r6, r8
   12480:	b	12498 <tabela_elementos@@Base+0xf4>
   12484:	mvn	r0, #1
   12488:	b	12490 <tabela_elementos@@Base+0xec>
   1248c:	mov	r0, #0
   12490:	str	r0, [r1]
   12494:	mov	r6, #0
   12498:	mov	r0, r6
   1249c:	sub	sp, fp, #28
   124a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000124a4 <hash_krm@@Base>:
   124a4:	ldrb	r2, [r0]
   124a8:	cmp	r2, #0
   124ac:	beq	124cc <hash_krm@@Base+0x28>
   124b0:	add	r3, r0, #1
   124b4:	mov	r0, #7
   124b8:	uxtab	r0, r0, r2
   124bc:	ldrb	r2, [r3], #1
   124c0:	cmp	r2, #0
   124c4:	bne	124b8 <hash_krm@@Base+0x14>
   124c8:	b	124d0 <hash_krm@@Base+0x2c>
   124cc:	mov	r0, #7
   124d0:	udiv	r2, r0, r1
   124d4:	mls	r0, r2, r1, r0
   124d8:	bx	lr

000124dc <hash_djbm@@Base>:
   124dc:	ldrb	r2, [r0]
   124e0:	cmp	r2, #0
   124e4:	beq	1250c <hash_djbm@@Base+0x30>
   124e8:	add	r3, r0, #1
   124ec:	movw	r0, #5347	; 0x14e3
   124f0:	uxtb	r2, r2
   124f4:	rsb	r0, r0, r0, lsl #5
   124f8:	eor	r0, r0, r2
   124fc:	ldrb	r2, [r3], #1
   12500:	cmp	r2, #0
   12504:	bne	124f0 <hash_djbm@@Base+0x14>
   12508:	b	12510 <hash_djbm@@Base+0x34>
   1250c:	movw	r0, #5347	; 0x14e3
   12510:	udiv	r2, r0, r1
   12514:	mls	r0, r2, r1, r0
   12518:	bx	lr

0001251c <mostraTabela@@Base>:
   1251c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12520:	add	fp, sp, #24
   12524:	mov	r4, r0
   12528:	cmp	r0, #0
   1252c:	beq	12574 <mostraTabela@@Base+0x58>
   12530:	ldr	r0, [r4, #8]
   12534:	cmp	r0, #1
   12538:	blt	1257c <mostraTabela@@Base+0x60>
   1253c:	ldr	r2, [r4, #4]
   12540:	mov	r1, #0
   12544:	mov	r3, #0
   12548:	ldr	r7, [r2, r3, lsl #2]
   1254c:	cmp	r7, #0
   12550:	beq	12564 <mostraTabela@@Base+0x48>
   12554:	ldr	r7, [r7, #4]
   12558:	add	r1, r1, #1
   1255c:	cmp	r7, #0
   12560:	bne	12554 <mostraTabela@@Base+0x38>
   12564:	add	r3, r3, #1
   12568:	cmp	r3, r0
   1256c:	bne	12548 <mostraTabela@@Base+0x2c>
   12570:	b	12580 <mostraTabela@@Base+0x64>
   12574:	mvn	r1, #1
   12578:	b	12580 <mostraTabela@@Base+0x64>
   1257c:	mov	r1, #0
   12580:	movw	r0, #9974	; 0x26f6
   12584:	movt	r0, #1
   12588:	bl	10eec <printf@plt>
   1258c:	ldr	r0, [r4, #8]
   12590:	cmp	r0, #1
   12594:	blt	1260c <mostraTabela@@Base+0xf0>
   12598:	movw	r8, #10010	; 0x271a
   1259c:	movw	r7, #10017	; 0x2721
   125a0:	mov	r5, #0
   125a4:	movt	r8, #1
   125a8:	movt	r7, #1
   125ac:	ldr	r1, [r4, #4]
   125b0:	ldr	r1, [r1, r5, lsl #2]
   125b4:	cmp	r1, #0
   125b8:	beq	12600 <mostraTabela@@Base+0xe4>
   125bc:	mov	r0, r8
   125c0:	mov	r1, r5
   125c4:	bl	10eec <printf@plt>
   125c8:	ldr	r0, [r4, #4]
   125cc:	ldr	r6, [r0, r5, lsl #2]
   125d0:	cmp	r6, #0
   125d4:	beq	125f4 <mostraTabela@@Base+0xd8>
   125d8:	ldr	r1, [r6]
   125dc:	mov	r0, r7
   125e0:	add	r2, r1, #50	; 0x32
   125e4:	bl	10eec <printf@plt>
   125e8:	ldr	r6, [r6, #4]
   125ec:	cmp	r6, #0
   125f0:	bne	125d8 <mostraTabela@@Base+0xbc>
   125f4:	mov	r0, #10
   125f8:	bl	10f88 <putchar@plt>
   125fc:	ldr	r0, [r4, #8]
   12600:	add	r5, r5, #1
   12604:	cmp	r5, r0
   12608:	blt	125ac <mostraTabela@@Base+0x90>
   1260c:	mov	r0, #10
   12610:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12614:	b	10f88 <putchar@plt>

00012618 <__libc_csu_init@@Base>:
   12618:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1261c:	mov	r7, r0
   12620:	ldr	r6, [pc, #72]	; 12670 <__libc_csu_init@@Base+0x58>
   12624:	ldr	r5, [pc, #72]	; 12674 <__libc_csu_init@@Base+0x5c>
   12628:	add	r6, pc, r6
   1262c:	add	r5, pc, r5
   12630:	sub	r6, r6, r5
   12634:	mov	r8, r1
   12638:	mov	r9, r2
   1263c:	bl	10eb4 <calloc@plt-0x20>
   12640:	asrs	r6, r6, #2
   12644:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12648:	mov	r4, #0
   1264c:	add	r4, r4, #1
   12650:	ldr	r3, [r5], #4
   12654:	mov	r2, r9
   12658:	mov	r1, r8
   1265c:	mov	r0, r7
   12660:	blx	r3
   12664:	cmp	r6, r4
   12668:	bne	1264c <__libc_csu_init@@Base+0x34>
   1266c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12670:	ldrdeq	r0, [r1], -ip
   12674:	ldrdeq	r0, [r1], -r4

00012678 <__libc_csu_fini@@Base>:
   12678:	bx	lr

Disassembly of section .fini:

0001267c <.fini>:
   1267c:	push	{r3, lr}
   12680:	pop	{r3, pc}
